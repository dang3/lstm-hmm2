push
mov
sub
mov
adc
push
adc
push
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
push
andl
mov
inc
mov
cmpl
jg
jmp
push
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
mov
add
xor
andl
mov
inc
mov
cmpl
jge
jmp
pushl
push
push
call
cmpl
jb
mov
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
sub
mov
mov
inc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
movl
orl
mov
xor
sub
add
and
mov
mov
jmp
lret
sbb
or
sub
in
mov
pop
addl
xor
je,pn
jo
dec
jo
jae
dec
aam
clc
imul
insb
pusha
into
pop
push
cmp
dec
jle
mov
sub
push
pop
in
inc
int3
ret
in
xchg
sub
xchg
xor
pusha
mov
aad
insb
fcoml
and
aaa
jb
shrb
lock
xor
and
cmpl
fwait
dec
or
jecxz
imul
xor
push
or
lods
push
shll
cld
imul
jno
add
and
fcoms
je
mov
arpl
fs
cwtl
test
sahf
loopne
sub
ret
cmp
xor
filds
jecxz
sub
xchg
int3
jns
cmpsl
test
insl
lret
mov
cmp
dec
mov
ljmp
xchg
fldenv
add
in
cmp
aad
out
enter
adc
and
add
in
popf
jnp
scas
mov
add
sub
popa
cltd
test
mov
popf
aam
jo
add
fdivr
fsubr
outsl
jo
mov
outsb
cltd
setb
mov
ja
xchg
sbbb
mov
xchg
pop
mov
fisubrl
mov
int
movsl
inc
mov
and
gs
and
sub
cmp
or
in
sbb
mov
stos
daa
sbb
int3
cmp
jl
adc
mov
ljmp
fiaddl
dec
inc
xorb
mov
xlat
sub
pusha
inc
push
decl
sbb
les
mov
shll
mov
mov
sbb
sbbl
dec
dec
push
ds
pop
pop
mov
dec
int3
insl
imul
jae
jg
std
sub
and
sub
mov
test
arpl
xor
orb
dec
in
push
ss
sub
roll
dec
getsec
test
and
in
cmpsb
movsl
dec
shll
lret
jge
inc
fs
mov
dec
ds
jnp
daa
mov
fcomps
or
shll
push
xlat
adc
and
ret
std
stos
cld
clc
in
mov
mov
cmpsl
mov
fistps
xchg
xor
cmp
jp
mov
fsubrs
jge
sti
mov
test
lahf
mov
dec
jo
jae
jb
inc
ficompl
imul
pusha
pop
test
aad
dec
sbb
popa
xor
scas
mov
jns
mov
inc
lahf
mov
fucom
in
and
inc
in
andb
or
mov
xchg
scas
adc
inc
mov
cwtl
jmp
mov
xor
inc
mov
sbb
inc
ss
les
scas
mov
sahf
in
sub
jge
sub
stos
xlat
adc
popf
pushf
and
sub
cmpsb
mov
lods
sbb
imul
push
dec
cmc
push
mov
cmp
test
outsb
test
mov
fwait
in
push
sbb
out
jg
inc
fmul
xchg
jg
bound
mov
fcoms
sbb
or
scas
cmc
sub
push
cmp
in
popa
mov
fsubs
js
jns
xchg
mov
cmpb
dec
mov
sub
cmp
fiadds
int
lcall
inc
sub
enter
enter
lea
bound
sub
ja
dec
mov
cmpsl
jecxz
stos
adc
or
inc
into
ficoms
cli
rcrb
roll
mov
cli
xor
inc
imul
pushf
outsb
adc
outsb
mov
push
pop
sahf
aad
ss
sbb
inc
sbb
mov
and
push
jle
loopne
lcall
dec
push
pusha
mov
cmpsb
fwait
mov
test
or
cmp
int
jae
sbb
cwtl
and
pop
push
ss
lahf
dec
jno
cs
push
push
out
sbb
mov
mov
js
cmp
and
loopw
je
sub
out
mov
jne
sahf
fists
rorl
pop
mov
daa
insl
repz
hlt
push
xor
sub
imul
sbb
gs
mov
jne
in
sbb
pop
lods
push
sbb
push
mov
push
dec
jg
fistl
repz
adc
je
jno
jns
add
cmp
or
mov
xor
into
jns
sbb
out
std
into
pop
mov
xchg
mov
sbb
dec
les
dec
sbb
mov
mov
adc
lods
sub
fiadds
pop
cmpsl
jmp
cmp
fs
or
adc
outsl
in
inc
ja
push
xchg
push
test
stos
repnz
call
vpshlb
sahf
mov
push
xor
push
inc
jmp
std
mov
cltd
insb
cmc
cmc
sbb
cmp
popa
push
lahf
hlt
and
pop
cs
push
fisttpll
fldcw
pop
push
movl
addr16
mov
enter
sahf
fimuls
pop
mov
push
pop
cld
add
movb
test
or
inc
ret
sbb
lods
test
aaa
inc
scas
std
jmp
pop
jecxz
pop
pop
repz
xchg
add
push
pop
cmpsl
push
lea
push
mov
xchg
inc
inc
test
pop
pushf
lahf
daa
lret
or
ja
or
bound
jb
xor
add
pop
lret
stos
inc
mov
aam
pop
push
orb
dec
lcall
or
arpl
mov
movsb
das
jecxz
fcmovu
dec
enter
inc
cmp
dec
negl
xchg
stos
xchg
jo
dec
lock
mov
mov
iret
add
in
mov
push
cmp
gs
pusha
pushf
mov
push
iret
push
repz
push
lea
push
orb
outsb
cmp
and
repnz
dec
jl
loopne
adc
leave
sub
inc
pop
adc
test
fstps
mov
cltd
ja
out
test
adcb
xlat
pop
in
out
dec
jp
sahf
test
cs
popf
jmp
icebp
out
imul
push
test
inc
data16
inc
cmpsb
mov
cli
push
dec
dec
dec
push
mov
repnz
sbb
pop
popl
or
jl
outsb
dec
and
sbb
in
in
sbb
sbb
test
cmp
push
xor
add
aam
in
nop
add
pop
cmpl
sti
aas
inc
jmp
mov
insl
fs
pop
dec
push
dec
leave
or
inc
inc
shlb
sub
test
fnstcw
popa
das
and
or
dec
outsl
sub
pop
mov
es
or
pop
adc
in
aad
js
cmp
out
lea
loop
or
xchg
std
jbe
in
dec
fwait
xor
je
testl
dec
xchg
mov
loope
cmp
popa
aad
dec
xor
add
add
fistl
jbe
cld
mov
sbb
popf
pop
cltd
in
sub
mov
pop
jb
outsl
fisttpll
popf
aas
sbb
inc
std
push
repz
ss
sbb
and
movsb
jns
mov
outsl
je
push
test
negl
std
in
xchg
rol
add
mov
into
or
push
jl
push
mov
outsb
and
das
sbb
or
jno
push
fucom
xlat
cmp
jbe
cmp
and
xor
cmpb
adc
cmp
sbb
ds
out
das
lods
sub
cmp
arpl
jb
mov
push
movsb
sub
jecxz
inc
push
ja
insb
shl
shll
add
push
nop
mov
ss
arpl
push
xor
push
jo
mov
movsb
or
push
dec
cmp
mov
out
outsb
lcall
xchg
fdivl
int
sub
pop
test
adc
mov
inc
xor
insl
and
xchg
pop
or
mov
pop
mov
fnsave
clc
rcr
pushf
or
xchg
cltd
push
stc
aad
mov
jb
jl
cmc
xchg
ljmp
mov
xor
adcb
cmp
add
jle
leave
ret
lock
stos
jns
data16
or
xchg
fiadds
inc
sub
or
outsb
lahf
in
inc
pop
cmp
bound
sub
mov
add
mov
jle
aad
ret
nop
mov
addr16
xchg
dec
fistl
in
popl
xor
sti
loop
dec
loop
repz
test
push
out
mov
shlb
inc
dec
pusha
pusha
add
xlat
push
add
mov
cmp
adc
aam
push
and
or
jl
lret
push
push
out
add
lcall
or
jne
mov
daa
addr16
cs
je
loope
inc
sti
icebp
add
aaa
jb
fmuls
jmp
inc
add
mov
daa
mov
mov
and
sbb
rolb
in
scas
andl
ret
enter
movsb
test
or
xor
cmpb
mov
fidivrl
icebp
inc
imul
ja
les
and
jo
repz
mov
and
xor
mov
sbb
jp
xor
xlat
leave
push
pop
es
dec
and
call
dec
cmp
or
clc
stc
sar
inc
dec
ds
mov
jo
lods
and
jmp
xor
cmp
push
outsb
icebp
fmuls
fildll
mov
fwait
cmp
test
mov
ret
mov
inc
in
nop
lret
jle
imulb
sub
mov
sub
cmp
mov
outsl
cmp
mov
cltd
adc
idivb
push
shrl
rcr
adc
adc
test
repz
shll
mov
movsl
sbb
rorl
nop
lods
cmp
mov
in
lods
push
std
push
pop
out
dec
push
mov
cmp
daa
insl
sbb
jge
rcrl
inc
mov
push
shl
subb
fwait
add
or
dec
lds
mov
fisubs
xor
mov
xchg
dec
dec
sub
push
cmpb
bt
loope
xchg
lret
mov
or
inc
push
add
test
test
test
cld
jo,pn
adc
mov
or
mov
imul
stos
xchg
jle
jno
inc
jle,pt
popa
jmp
cmpb
cld
inc
pop
sub
mov
mov
add
loope
xor
jmp
sarl
out
shlb
jne
subl
cmp
icebp
xor
lret
mov
cmp
lret
push
rcl
out
dec
cltd
xor
dec
jb
es
jae
mov
jns
shr
test
and
jmp
cmp
sbb
or
mov
pop
cmpsl
outsb
pop
cmc
lea
sti
adcl
jl
ljmp
mov
lods
aam
sbb
aam
mov
sub
adc
pop
jb
cld
sub
mov
stos
mov
add
dec
stos
outsb
adcl
test
ds
or
test
scas
sub
mov
mov
pop
aas
mov
sbb
ds
and
sbb
mov
ret
pop
mov
and
and
sarb
sahf
aaa
repz
jl
sbb
jnp
pop
fsubrp
mov
arpl
popf
pop
std
fdivp
push
and
or
lret
imulb
mov
push
frndint
inc
lahf
movsb
and
and
cmp
in
jae
mov
mov
nop
int
in
out
cs
mov
add
lock
js
and
rorl
mov
movsb
cld
mov
ja
fnstsw
sub
lret
push
icebp
cmp
inc
lret
mov
sbb
jns
add
inc
or
stc
pop
mov
stc
inc
push
fisubs
push
push
jno
pop
nop
jle
out
or
xchg
ja
pop
adc
ja
push
or
sub
and
filds
stc
cmp
dec
jns
test
cmp
jno
xchg
popa
jnp
das
mov
stc
jle
out
sub
cmc
scas
xchg
scas
testb
cmp
dec
lock
fistps
push
pushf
cmp
mov
ret
imul
xor
xor
mov
lret
movsl
rcll
cmp
lahf
push
sbb
xchg
jmp
loope
xlat
arpl
push
dec
mov
incb
shl
sub
pop
cmp
sahf
dec
fwait
loope
mov
dec
pop
in
adc
out
xchg
out
dec
push
push
scas
lods
fistps
adcb
inc
imul
imulb
jns
jge
jbe
leave
sbb
sbb
xchg
sbbl
orl
mov
dec
xor
test
mov
inc
xor
aad
mov
pop
lret
jmp
fstpl
jb
sarb
mov
popf
mov
inc
gs
and
mov
push
or
mov
jle
push
jb
fcomip
adc
dec
sub
add
fs
push
je
fcoms
xchg
sub
pop
jno
cmpsl
fisttpll
jecxz
test
jo
sub
add
ljmp
lret
push
lret
mov
sbb
jne
outsb
jmp
sbb
push
lret
xlat
push
mov
loop
icebp
xlat
loope
test
and
in
imul
lea
cmp
and
rolb
inc
xchg
cs
out
dec
add
arpl
cmp
fs
push
adc
mov
pop
mov
out
add
lahf
jle
enter
and
push
mov
jnp
pop
xchg
pop
fcoms
sbb
or
or
mov
sub
movsl
fwait
xchg
aaa
mov
imul
pop
or
shlb
or
out
iret
mov
push
and
in
dec
jp
xchg
jnp
dec
push
xor
cmp
cmp
pop
cmp
cli
icebp
scas
pop
xor
or
rorl
ss
ljmp
nop
sbb
mov
jl
xchg
and
lds
adc
jae
xchg
fimull
push
clc
ss
xchg
adc
sbbl
jmp
xor
and
xchg
imul
and
cmpsb
outsb
test
js
int
mov
mov
mov
pop
int3
add
or
and
cli
and
in
stc
mov
ret
data16
arpl
movsl
icebp
xchg
add
jbe
outsb
jne
pop
hlt
imul
or
in
dec
mov
loope
mov
cmp
dec
in
mov
fiadds
adc
and
decb
lret
mov
mov
ja
jo
adc
mov
scas
mov
ret
or
popf
sahf
lret
xor
js
and
in
xchg
imul
imul
outsb
movsb
jge
xchg
into
int
shrl
sub
inc
loop
aad
arpl
data16
mov
dec
add
pop
test
mov
adc
add
lret
pop
loopne
dec
jae
sahf
and
xor
ljmp
movsl
sbb
ljmp
ret
or
shlb
add
push
pop
push
out
push
xor
bound
dec
mov
mov
ret
int
push
dec
xchg
dec
lcallw
mov
xchg
pmulhw
ss
pop
cli
pop
testl
cli
or
mov
push
mov
out
push
push
faddl
sub
das
fwait
imul
lock
or
fnsave
add
mov
or
cmpsl
jecxz
jnp
mov
fisttpll
negb
xor
sbb
xchg
push
xchg
sub
fwait
cmp
imul
mov
call
pop
sub
popa
aas
int
dec
lds
inc
push
jns
lea
cltd
lods
imul
sbb
jo,pt
ljmp
xchg
jp
pop
mov
push
jnp
jg
into
popa
cmp
out
cmp
mov
dec
jmp
pop
stos
mov
std
stos
pop
shrb
scas
xchg
pop
sbb
ficoms
lock
or
mov
in
outsl
ss
fsubrs
pop
adc
loope
sub
or
mov
mov
or
sbbb
add
push
rclb
test
shl
jle
jge
aas
addl
imul
fdivr
scas
fdivs
inc
sbb
fsts
mov
xor
adc
sbb
pushf
adc
in
enter
andl
inc
sub
stos
jb
xchg
icebp
xor
movsb
pop
xor
sbb
adc
mov
aas
shl
call
xchg
push
mov
testb
mov
in
lret
test
idivl
repz
fcompl
arpl
cltd
mov
xor
push
add
lea
cmpsl
sahf
sub
or
mov
jp
not
inc
sbb
xchg
sub
or
shrl
inc
scas
dec
std
rcll
repnz
in
add
mov
pop
jle
xor
mov
shl
xor
ret
pop
icebp
fistpl
mov
out
mov
sahf
mov
inc
add
orl
sub
fcomi
pop
mov
rep
repnz
shrb
lcall
dec
xlat
mov
or
or
adc
xchg
rcll
fistpl
int
inc
icebp
mov
aad
or
aas
pusha
jl
cmc
dec
inc
mov
dec
pop
icebp
pop
jns
daa
mov
add
mov
inc
mov
andb
xchg
xchg
cmp
lock
inc
lret
pop
shl
jmp
imul
js
push
or
mov
icebp
jns
lea
push
mov
dec
inc
mov
loopne
cwtl
sahf
je
mov
cwtl
jns
sub
fistps
clc
ds
fcoms
js
out
imull
addr16
cmpsl
bound
scas
xchg
add
ficomps
stos
data16
jg
dec
sub
lret
out
incb
imul
loopne
aas
cmc
mov
loop
jnp
scas
imul
gs
js
aaa
add
mov
cltd
push
popf
xchg
mov
je
pop
je
sub
mov
or
mov
jp,pt
jge
adc
cltd
lahf
lods
popf
add
pop
out
pop
mov
fistl
lret
xchg
shll
cld
xor
out
int3
mov
sahf
movsb
or
pop
ficoms
sbb
and
rcrb
sub
ja
and
xchg
inc
outsl
mov
inc
push
xor
inc
cmp
sub
aas
mov
pop
adc
into
xchg
fmulp
pusha
popa
ja
adc
sbb
push
out
sub
icebp
loope
pop
or
jmp
sbbb
cmp
int3
dec
fcmovne
mov
imul
pusha
xchg
cmpl
nop
dec
outsl
adc
movsl
loope
je
or
sbbl
push
and
mov
leave
mov
in
push
mov
jbe
repz
dec
arpl
mov
iret
push
mov
sti
in
stos
adc
popf
test
pushf
and
jne
push
xlat
test
into
inc
test
mov
mov
jae
jae
xchg
jmp
das
in
int
fucom
pop
xor
jo
in
inc
jae
aad
cmpsl
rcl
dec
push
sub
gs
lea
cmc
cmpsb
push
sar
cmc
pop
sbb
rolb
ljmp
popa
test
or
lcall
loope
cmp
lea
add
sub
push
cmpb
jle
loopne
or
jp
ret
insl
push
dec
test
out
fwait
into
jns
ljmp
imul
pop
inc
cmpsb
subl
in
dec
scas
mov
out
mov
mov
and
sub
xor
pop
sub
lock
lcall
mov
xlat
lods
outsb
loope
jbe
jecxz
cmp
xor
mov
dec
imul
mov
adcb
out
cltd
or
adc
and
repnz
into
rorl
fisubl
repz
sub
mov
cmpb
leave
sbb
xor
push
lds
cltd
imul
inc
cld
add
sti
push
push
push
pop
inc
pop
mov
xchg
in
or
or
xchg
push
adc
lods
fdivrs
ja
lods
ret
insl
add
jmp
mov
aas
sub
mov
pop
fists
cmp
shrl
aas
adc
cltd
loop
addl
mov
push
mov
cmp
lcall
or
call
lahf
stos
sub
sbb
pushf
cltd
bound
sbb
fstps
divl
mov
push
mov
pushf
add
out
fs
shll
adc
shr
ret
inc
dec
int3
jnp
push
xchg
imull
jl
or
mov
mov
push
data16
cwtl
xlat
cmp
cwtl
or
inc
xchg
pop
cltd
xor
xchg
jecxz
iret
jns
out
inc
jmp
xchg
lret
pusha
scas
push
fnstsw
in
push
xor
ret
push
repnz
push
sub
mov
dec
ret
rcrl
daa
pop
pop
mov
add
add
mov
dec
mov
lret
mov
cmc
push
xchg
pop
mulb
int
stc
test
dec
push
xchg
jno
je
les
dec
xor
je
ss
pop
dec
lock
lods
mov
jl
xchg
lcall
leavew
xor
add
xchg
pop
sbb
add
push
push
fdiv
incl
rcll
push
push
leave
xlat
in
inc
mov
or
ret
pop
push
hlt
nop
and
cmp
push
hlt
xor
cltd
out
cmpsb
out
and
imul
jl
or
enter
mov
shlb
adc
mov
or
dec
loope
add
fcmovne
and
and
inc
pop
xor
jmp
test
add
lds
add
xchg
or
mov
xlat
mov
push
fwait
push
popf
jns
jno
mov
ja
cmovns
adc
adc
mov
int3
mov
xchg
out
insl
cli
pop
popf
popa
sub
aas
jge
test
pop
sbb
mov
sbb
sbb
popf
loope
mov
mull
pop
rcrl
ja
mov
and
jne
lods
adcb
mov
aam
cli
jecxz
bnd
sbb
mov
dec
and
loope
xchg
inc
mov
add
mov
cs
cwtl
aam
cmc
stos
loop
add
std
outsb
cmc
or
cltd
test
sub
stc
jmp
adc
mov
xchg
push
std
inc
outsb
in
cltd
rorl
inc
les
pop
pusha
adc
orl
jae
xchg
aaa
mov
aam
xchg
fcmovbe
jmp
ja
stos
and
mov
xor
stos
push
jns
pop
sbb
into
push
nop
mov
mov
scas
loope
lret
xor
inc
push
test
shll
xchg
fwait
or
jecxz
faddl
pop
js
or
dec
cmpsb
jae
push
sahf
mov
aad
dec
cld
jne
and
lcall
addr16
fnstsw
pusha
pop
lahf
mov
repnz
scas
pop
sub
subb
dec
rorb
mov
or
push
mov
and
dec
jle
lock
xor
sub
sbb
or
push
es
fbstp
adc
cltd
movsl
sub
out
lahf
std
inc
xchg
inc
xchg
pusha
xchg
rclb
dec
inc
es
xchg
testl
lods
mov
test
insb
xchg
add
into
outsb
push
mov
out
insb
inc
fisubs
xchg
mov
sbb
ja
lcall
xor
nop
mov
jp
std
dec
cmc
push
push
std
sarl
fdivrl
xor
ja
xchg
mov
int3
mov
rcrl
stc
cwtl
popf
inc
cmpsl
in
rcrl
testl
les
add
sbb
mov
mov
lret
scas
push
lock
push
push
pop
lret
push
aaa
lret
jmp
cmc
arpl
xchg
addr16
jge
stos
push
addl
dec
jnp
pop
mov
adc
mov
mov
jge
jbe
addr16
mov
scas
inc
cmp
mov
call
fisttpl
mov
jae
and
es
mov
jle
mov
mov
fwait
aaa
adc
pop
sub
es
push
jle
dec
mov
sbb
push
ret
test
pop
aad
pusha
mov
xlat
addr16
mov
xchg
mov
xchg
cwtl
insl
or
xchg
ss
mov
mov
scas
loop
xor
jl
jge
pop
mov
ljmp
jne
das
movsb
dec
pop
aam
loope
adc
in
arpl
hlt
insl
in
push
or
and
or
hlt
in
testl
out
mov
imul
pop
call
out
xchg
daa
inc
push
mov
push
ja
xor
sub
adc
inc
sbb
inc
cli
outsl
loopne
ljmp
adc
add
pop
cmp
adc
jno
pop
cli
push
jae
test
in
mov
in
sbb
or
xor
pop
inc
dec
add
mov
aaa
mov
jmp
sbb
inc
les
cmc
orl
popf
cltd
sub
mov
aaa
xor
xchg
xor
nop
cli
pushf
and
inc
mov
test
mov
iret
rcll
rorb
xor
mov
xchg
mov
mov
xor
loop,pn
mov
fwait
maxps
iret
and
popf
sbb
pop
out
mov
mov
aad
sarb
adc
arpl
push
cwtl
push
cs
insl
xor
in
add
dec
mov
mov
sbb
jb
aas
test
sar
icebp
dec
push
daa
jmp
inc
mov
adc
sbb
adc
push
adc
scas
jb
dec
jmp
gs
push
xchg
xor
jo
xor
lcall
test
or
int3
xchg
scas
out
xchg
popl
jne
fs
cmp
popf
xor
and
dec
je
push
loopne
scas
inc
cmp
pop
int
jb
adc
adc
xchg
pop
and
push
test
cli
xor
xchg
repz
push
movsb
shrl
rcrl
jo
je
stc
mov
out
loope
mov
jb
into
ljmp
rep
cwtl
sbb
aam
mov
hlt
push
enter
or
dec
push
mov
testb
jnp
adc
mov
testl
test
jb
loop
arpl
sub
cld
in
cmp
mov
sti
mov
dec
lods
mov
push
inc
dec
in
mov
xabort
push
add
add
enter
and
insl
popf
and
leave
aas
fsts
out
movsl
frstor
xchg
lods
ss
test
xor
stos
mov
or
add
push
mov
data16
dec
bound
and
dec
pop
je
xchg
mov
lahf
adc
sub
cmp
iret
xchg
sti
int3
mov
cmp
lds
sub
mov
inc
and
sbb
sbbb
adc
mov
loopne
push
mov
sbb
adc
je
mov
adc
ret
add
push
pop
mov
call
or
insl
mov
adc
pop
sub
mov
adcl
cmp
jb
mov
xor
ret
inc
pop
inc
ret
sbb
push
sbb
xchg
xchg
shrl
dec
xorb
adc
addl
jp
sub
cmpsb
add
test
sbb
stos
and
ds
and
pop
cmp
jecxz
pop
mov
loopne
test
push
lea
icebp
mov
out
je
jns
mov
inc
cltd
loopne
shlb
jbe
xchg
mov
aas
push
ret
jo
or
dec
and
xor
jns
aaa
sahf
lretw
js
mov
test
cmp
pop
fucom
hlt
call
xor
vpmaxub
or
push
je
mov
popl
sbb
xlat
jns
orl
pop
and
lods
stc
sub
adc
inc
or
inc
int
jbe
pop
push
call
jnp
jp
jbe
add
js
push
push
negb
add
lods
repnz
fsubrl
inc
les
mov
fldenv
push
xor
inc
leave
outsb
sbb
pop
out
jns
out
inc
lret
in
cmp
lret
or
das
popa
imul
sarl
pop
sbb
jmp
mov
ret
lcall
aas
lea
push
scas
test
xchg
int3
mov
int3
movsl
sahf
out
pop
inc
imul
cmpl
mov
sub
push
sub
or
pop
inc
mov
shrl
lahf
daa
cmp
mov
pop
cmp
cmp
test
cmc
sbbl
aad
repnz
repz
insb
int
dec
mov
push
subl
inc
mov
mov
inc
jp
lock
xor
jae
lods
jns
xor
push
test
pop
mov
jno
bound
orl
arpl
test
dec
repz
sbb
cwtl
fisubs
sti
mov
dec
push
pop
jge
mov
repz
je
jbe
sti
jbe
xchg
jmp
inc
mov
push
insl
pop
sar
lret
jbe
or
movb
test
ret
pop
into
scas
or
addr16
push
and
jl
or
clc
cmp
int3
xchg
push
xlat
xchg
insl
push
rorl
icebp
push
dec
insl
jnp
cmp
scas
in
ljmp
sub
and
xchg
fadd
push
sbb
imul
hlt
ror
ljmp
andb
sti
push
fildl
cwtl
arpl
cmpsb
lcall
aad
stos
add
or
cli
jnp
push
add
and
jno,pn
popa
insl
push
mov
mov
inc
cwtl
sub
pusha
sbb
push
push
push
test
out
lret
mov
jle
add
pop
or
les
daa
pop
sub
sub
shlb
push
jl
fisttps
xchg
xchg
lret
fistps
sbb
push
cmc
fdivrl
push
jnp
ja
adcl
ss
xor
xor
gs
xchg
ljmp
xchg
mov
test
pop
mov
pop
out
clc
push
push
fwait
inc
pop
lcall
xchg
mov
cmp
rorl
sub
dec
ja
jle
pop
sub
nop
mov
arpl
mov
adc
psrad
mov
aas
pop
push
je
pop
sub
mov
out
repz
jmp
pusha
jmp
pop
mov
test
mov
push
aam
fistl
adc
dec
mov
mov
ret
xchg
ret
ja
mov
jecxz
xchg
ret
in
es
in
mov
clc
es
fstps
push
push
jo
lcall
popf
pop
movsb
push
aas
test
and
std
int3
xor
inc
mov
inc
mov
cmp
lods
jo
cmpsb
push
mov
jge
mov
lods
dec
pop
js
and
push
cli
cmp
addr16
dec
push
insl
mov
inc
sub
loopne
mov
and
push
rorl
sub
jo
or
inc
comiss
test
lods
push
mov
xor
mov
mov
andl
xor
xor
inc
mov
cmpl
ja
jmp
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
push
pop
orl
sub
and
add
subl
movl
adcl
mov
xor
xor
or
movl
mov
or
mov
mov
adc
mov
mov
sbbl
mov
xor
add
orl
mov
lea
mov
mov
xor
sbbl
add
orl
mov
subl
lea
push
neg
mov
subl
xor
add
push
mov
push
movl
pushl
call
xor
add
and
mov
mov
mov
mov
mov
sub
sub
movl
mov
mov
xorl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sub
movl
mov
mov
xor
mov
mov
neg
xor
mov
sub
mov
mov
movl
mov
movl
mov
movl
cmp
movl
je
xor
mov
mov
subl
xor
addl
xor
lea
andl
xor
or
inc
mov
cmpl
jge
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
xor
orl
div
or
mov
xor
xor
sbb
mov
xor
orl
xor
sbbl
sub
cmp
jne
mov
neg
mov
adc
jmp
inc
nop
jl
rolb
mov
andl
out
pop
addl
movsb
data16
fmul
pop
icebp
mov
call
mov
popf
sbb
mov
fbld
imul
test
into
sbbb
iret
dec
or
add
in
jb
lods
xor
sbb
inc
gs
jmp
and
pop
mov
out
daa
int3
mov
push
adc
xor
cmp
ja
out
cmp
or
outsb
add
mov
xor
jecxz
je
and
mov
mov
push
aad
mov
pop
les
inc
cs
lods
mov
sahf
xor
mov
sbb
xchg
push
pop
loopne
cs
out
fimuls
lds
add
mov
and
or
mov
xor
stc
aam
dec
lods
xchg
xchg
out
arpl
aad
incl
fcmove
inc
icebp
data16
xor
icebp
rol
in
jmp
jo
pusha
push
jle
enter
test
scas
test
mov
xor
pmulhw
insw
pop
cmpsl
mov
fisubrl
loop
add
mov
jne
cmp
sub
sbb
fdiv
mov
mov
ds
pop
in
and
es
stos
add
lods
fstpl
iret
mov
push
mov
out
ss
fnstenv
movsl
popf
sub
mov
icebp
out
iret
lds
jo
push
xchg
mov
mov
mov
add
inc
mov
pop
movsb
subb
inc
mov
nop
fdivrl
ljmp
sbb
pop
dec
popa
xchg
cmpsl
orb
jg
mov
jmp
add
inc
mov
jp
lods
imul
cpuid
xchg
std
cld
lock
pop
cmp
adc
in
or
inc
cmp
les
mov
mov
lods
or
inc
adc
xchg
cwtl
add
adc
cmp
in
and
push
dec
outsb
out
jge
cli
rcll
loope
sbb
gs
stc
jp
fsubr
sub
and
into
xchg
in
mov
sub
out
movsb
faddp
sbb
sarb
xor
pop
dec
arpl
fnstsw
mov
mov
std
pop
ror
xor
fdivl
mov
dec
xchg
lret
loopne
mov
jns
out
or
inc
cmp
addr16
dec
nop
std
fmull
sarb
std
test
dec
shll
mov
fcomps
bound
adc
test
daa
xchg
and
das
scas
call
arpl
push
adc
rcl
icebp
rcrb
movsb
mov
into
je
inc
xchg
in
mov
imul
fsubl
lods
xlat
rolb
rol
and
in
add
lret
xchg
inc
repz
mov
push
out
mov
imul
jmp
mov
pop
imul
mov
mov
cmp
addb
es
addl
fmull
popa
enter
push
insb
call
pushf
idiv
ja
js
and
push
and
stc
sub
and
scas
mov
mov
push
jmp
push
clc
push
mov
add
or
mov
js
dec
repz
add
lahf
add
xchg
frstor
push
insl
mov
pop
repnz
mov
push
cmp
push
sub
sub
inc
mov
lods
in
mov
das
push
das
and
jmp
mov
adc
notl
mov
iret
repz
inc
xor
fstps
adc
fimull
adc
sub
push
cmp
lods
lahf
nop
into
mov
push
jae
push
and
sub
test
mov
push
mov
shl
and
add
rorl
ss
testl
fnsave
ss
jp
cld
imul
je
sbb
into
mov
mov
cwtl
shlb
adc
ret
cmc
out
mov
inc
xchg
loopne
loop
pop
lds
jbe
add
jl
bnd
push
repz
enter
out
sub
ss
pop
mov
pushf
pop
sub
je
adc
xor
push
pop
lret
imul
mov
pop
pop
repz
filds
jmp
mov
push
stc
add
mov
xchg
mov
cltd
fistl
shlb
mov
mov
mov
cwtl
jbe
xchg
adc
ss
and
xor
cltd
sub
cmp
or
out
dec
adc
cs
insb
mov
mov
loop
arpl
fdivr
add
add
jp
faddl
and
sub
or
ljmp
out
lahf
cmpsb
mov
int
sub
out
inc
mov
push
cs
filds
mov
not
push
sbb
aam
cmpsl
les
or
xchg
je
and
and
mov
ret
xlat
adc
jne
sub
rcll
fistps
mov
xor
lea
adc
test
bswap
arpl
js
mov
add
repz
std
rclb
test
sub
mov
jnp
xchg
pop
insb
out
movq
adc
lods
scas
jl
cmp
jbe
sub
cmp
fxch
daa
jnp
push
ret
sbb
dec
adc
xor
adc
mov
or
lods
int3
add
add
lods
push
adcb
inc
inc
das
mov
rolb
lea
mov
push
cmp
mov
or
in
or
lds
xchg
lcall
cmp
lods
jle
int
xor
mov
imul
push
rcrl
rolb
loop
sub
iret
lret
arpl
xorb
sub
jnp
es
mov
cmp
pop
adc
jnp
mov
in
imul
ja
out
adc
in
xchg
jle
jl
xor
jbe
insl
pop
aas
lret
mov
in
scas
add
sub
sub
or
sbb
add
mov
inc
in
sbbb
xlat
push
dec
fs
sbb
loopne
dec
rolb
mov
inc
cltd
sbb
test
lcall
lcall
lods
sbb
test
sarb
out
mov
imull
jle
sbb
xchg
divb
mov
push
mov
fistl
add
inc
outsb
lret
sbbb
pop
cmp
outsl
loop
test
pop
ljmp
jae
cwtl
lea
dec
mov
imul
xor
fldcw
bound
daa
arpl
sub
push
movsl
add
mov
lea
jle
rolb
inc
sub
mov
mov
pushf
xor
inc
mov
xor
push
lods
cmp
xor
sti
je
fwait
pop
jb
inc
cmp
jb
dec
xor
lock
cmp
mov
stc
test
outsl
clc
loope
cmp
outsb
andl
push
icebp
lcall
and
and
xchg
inc
jae
sbb
test
scas
pop
bound
test
pop
lods
mov
scas
arpl
inc
cmpsb
out
sub
fcmove
jae
mov
out
outsb
or
sbb
cltd
lret
sbb
dec
cmp
xlat
mulb
push
mov
pushl
stos
fstpl
data16
mov
les
ss
shl
test
sub
dec
ljmp
mov
or
test
inc
jmp
mov
jnp
and
add
adc
jns
add
inc
cmp
jg
stos
outsl
pop
push
dec
push
rcl
adc
mov
xchg
jbe
in
inc
jns
addr16
movsl
rcrl
lret
sub
adc
push
cli
adc
cs
jmp
cmp
sarl
in
xor
pop
cmp
dec
cli
sahf
dec
imul
addr16
data16
nop
jp
sub
jl
cmp
sub
pop
push
inc
pusha
mov
jns
faddl
push
rcrb
mull
add
pop
and
nop
sarb
test
into
arpl
jl
sbb
arpl
stos
ja
mov
movsl
test
pop
mov
or
xchg
push
aad
push
in
leave
repnz
xchg
f2xm1
add
push
cmc
pop
mov
sahf
xor
and
mov
dec
sbb
les
es
mov
fidivl
jne
push
je
push
mov
loop
jno
xchg
jmp
xlat
stc
mov
cmp
dec
and
lock
out
adc
sbb
xchg
mov
cli
jp
mov
call
xchg
push
aas
pop
pop
pop
pop
inc
in
dec
insl
int3
test
inc
push
inc
add
aaa
jmp
outsl
mov
sub
sub
push
push
adc
dec
enter
ror
stos
cmc
stos
dec
cs
inc
ret
pusha
outsl
add
xchg
shrb
push
mov
ret
and
mov
xor
jle
push
stc
pop
sbb
lcall
fs
xchg
adc
push
dec
popa
push
in
nop
lret
xchg
and
out
gs
sahf
adc
movsb
push
mov
inc
push
cmp
push
mov
mov
lods
adc
fucomi
inc
push
gs
hlt
mov
mov
push
xor
push
pushf
inc
ljmp
mov
xchg
mov
insl
adc
aas
fcomps
aaa
lods
out
add
dec
sbb
out
sbb
loope
jmp
ja
mov
xchg
outsl
lods
scas
mov
movsl
pop
xchg
js
aas
movsb
inc
repz
lock
pushf
push
lret
mov
cld
push
lods
add
add
or
jb
iret
pop
xor
loope
add
sbb
das
pop
ss
ud2
mov
inc
cmc
movb
xchg
cmpl
cmove
pop
jecxz
sub
dec
inc
shr
inc
nop
mov
sub
sbb
xchg
and
ret
arpl
xor
cmp
and
jns
shrb
icebp
adc
jnp
call
sub
or
push
gs
lock
fcmovb
mov
mov
sbb
into
adcb
sub
repnz
pusha
cmc
sbb
push
sub
imul
pop
and
fcomps
pop
mov
adc
jecxz
push
cmp
xlat
sti
imul
or
loope
and
xchg
enter
aaa
inc
sub
sbb
repnz
sbb
jns
insb
loope
fwait
sub
sbb
pop
jne
cld
xor
xor
pushf
js
das
shrb
sub
mov
pop
and
out
push
lahf
enter
jl
lds
sar
scas
inc
cmpsb
repnz
inc
fmull
and
push
popf
lea
outsl
jne
and
jle
sbb
movsl
add
and
iret
div
cmp
and
cli
push
jecxz
fdivl
or
pop
push
adc
jbe
sub
leave
fnstsw
pop
aam
stc
cmovge
cmc
sbb
ss
cmp
mov
mov
pusha
les
and
arpl
cld
jge
in
mov
out
jns
sar
lods
mov
and
mov
adc
jmp
sub
mov
lret
bound
rolb
je
jno
rorb
icebp
mov
jae
inc
test
push
dec
jmp
sub
add
fnstenv
test
leave
push
sbb
pop
pop
mov
lds
ljmp
mov
jno
cmp
mov
sbb
xor
push
pop
out
pop
les
into
lods
jmp
or
repnz
push
jge
mov
fsubrs
adc
add
mov
fsts
push
dec
mov
xchg
shlb
sub
shll
iret
cmpsb
std
iret
mov
and
cmp
add
out
xchg
adc
je
jae
aas
shlb
lods
lret
mov
and
push
jns
ret
jmp
mov
stc
call
and
rcrl
fdivp
cmp
cmp
loopne
jno
sbb
into
mov
lea
stos
mov
pop
xor
ret
aam
adc
push
icebp
jb
mov
cmp
stc
add
dec
xlat
pop
je
and
ljmp
jg
sub
mov
shl
jns
orl
mov
jnp
jbe
adc
pop
fildll
xchg
imul
mov
gs
xchg
push
jbe
xchg
ds
add
or
cs
cmp
xchg
mov
mov
jne
pop
mov
mov
jb
lret
in
cmc
aaa
mov
cmp
and
loop
stc
or
cmpsl
pop
xor
out
mov
sub
lret
push
loop
call
mov
orb
jl
push
jmp
push
pop
cmp
cmpl
inc
mov
xchg
ret
mov
fcomps
pop
xchg
fidivs
leave
mov
pop
mov
or
add
into
in
cltd
test
test
int3
loopne
add
call
das
jnp
bound
sub
jns
iret
push
fwait
mov
xlat
sar
pop
repz
enter
sahf
minps
jmp
xchg
repz
dec
cmp
test
fs
es
ljmp
aas
movsb
mov
adc
xlat
lahf
push
hlt
in
dec
mov
mov
cltd
sbb
lcall
mov
sub
in
mov
pop
leave
xor
psllw
mov
jns
popa
loope
push
shll
aaa
mov
je
mov
xor
je
out
stos
stc
imul
gs
stos
int
adcb
lcall
mov
cld
and
out
jbe
pop
inc
pop
fcmovu
push
push
cmp
xor
push
add
stos
cmpsl
arpl
xchg
rclb
cmp
sbb
in
adc
push
pushf
pop
sbb
sub
shll
xchg
dec
pop
std
lods
mov
jns
or
cmp
repnz
mov
adc
inc
out
push
cmp
out
fsubl
mov
aam
sub
cli
jl
push
dec
ret
mov
movsl
sub
sub
mov
into
aad
cmp
gs
loopne
or
outsb
out
push
sahf
dec
cli
cmc
jae
push
and
insl
or
or
mov
cmc
and
mov
lret
je
loop
int3
loopne
sub
push
xlat
call
jns
aam
and
iret
rcr
iret
pushf
fistl
sub
jns
les
dec
sar
enter
xchg
sub
mov
inc
addr16
sub
sub
scas
inc
popf
push
push
and
bound
inc
fidivl
and
sub
mov
fcoml
mov
fisubl
jl
sbb
xchg
test
mov
aaa
jecxz
imul
pop
cmp
in
push
ja
mov
int
sbb
test
in
xor
mov
daa
scas
jo
bound
xchg
inc
pop
lea
out
xor
xchg
mov
incl
pop
mov
in
movsb
movsl
hlt
fstpl
push
pop
popa
sub
pushf
popf
add
lods
lods
jae
lds
pop
xor
addr16
pop
jecxz
in
lock
sbb
ljmp
jo
sbb
pop
add
mov
arpl
call
inc
movsb
adc
jecxz
orl
iret
mov
in
ret
mov
shrb
shlb
push
pop
mov
dec
and
insl
shl
stos
dec
push
into
shlb
movl
popa
insl
jge
jl
movsb
outsl
add
fldcw
pop
rol
arpl
test
lock
in
and
dec
jo
je
adc
imul
std
mov
lods
sub
mov
fcos
ljmp
rcl
stos
inc
sbb
mov
jmp
mov
pop
or
fistl
scas
or
or
sub
es
cmp
ja
dec
gs
lret
lock
push
loope
sbb
mov
xchg
cmp
cltd
ljmp
inc
push
iret
shlb
and
lcall
mov
lret
sbb
movsb
in
sti
jo
pop
aaa
rolb
mov
clc
dec
mov
fadds
sti
inc
int
out
push
fwait
ss
clc
jle
les
scas
push
sbb
xor
mov
scas
rorl
stos
jo
mov
pop
add
cmp
push
shll
jb
inc
in
jns
into
leave
push
xor
and
cmp
xorb
push
xor
fldt
cmpsl
pop
inc
in
jmp
dec
fiadds
lret
imulb
xchg
dec
arpl
cmp
aas
popf
arpl
mov
xor
popf
jge
jne
pop
sbb
shrl
loop
pop
and
xchg
sbb
xor
xor
shll
xchg
ljmp
enter
inc
sub
pop
sbb
mov
arpl
dec
cmc
push
subl
mov
fldpi
sub
dec
aas
adc
rolb
jnp
cs
push
jge
sub
shl
lahf
cli
xor
or
cmp
jmp
sbb
or
call
inc
loope
and
mov
and
dec
mov
pop
movsl
mov
lock
jbe
jno
je
adc
push
sbb
insl
or
outsl
fstpl
mov
inc
cwtl
cmp
pop
mul
lds
or
adc
subb
pop
mov
push
adc
call
dec
inc
inc
add
lock
or
fidivs
lcall
pop
push
mov
movsl
or
js
push
sbb
mov
mov
inc
cmp
inc
addr16
addr16
xor
jb
pop
xor
lret
scas
pop
cmpsb
inc
aas
xchg
mov
jnp
sub
lcall
push
test
push
pop
pop
inc
gs
or
dec
sbb
mov
xchg
pop
jp
push
dec
adc
icebp
jle
xchg
sbb
in
pop
movsl
mov
lea
push
test
adc
pusha
and
dec
sbb
lcall
xchg
jmp
lds
ds
int3
jg
dec
pop
fnstenv
mov
adc
mov
push
pushf
push
mov
inc
gs
lods
shlb
pusha
ss
mov
adc
inc
sub
xor
mov
jmp
pusha
and
aam
jp
jl
test
das
jecxz
cmp
xchg
and
jg
or
sbb
lods
jo
mov
dec
jl
data16
and
sbb
loop
pop
mov
add
dec
or
test
aam
imul
or
mov
push
sarl
enter
sub
mov
mov
lret
mov
fistps
mov
ljmp
lods
push
bound
aad
adc
nop
cltd
repnz
mov
jns
fwait
mov
loop
daa
leave
cltd
jno
mov
pop
mov
ret
pop
enter
or
dec
push
mov
push
jae
popa
inc
mov
dec
and
push
fsubp
fadds
jecxz
inc
jno
xor
stos
cmovno
jb
test
out
bound
dec
enter
xchg
mov
lea
pop
dec
outsb
sahf
es
rcrb
loope
sub
aad
int3
jge
inc
int
mov
mov
inc
sbb
int
or
add
sbb
iret
inc
jo
lods
int3
inc
aas
lods
adc
cmp
pop
scas
out
push
loop
xchg
dec
adc
inc
mov
int3
add
mov
push
add
pusha
mov
sub
mov
lcall
into
lahf
jne
cmc
scas
pop
das
sub
movsb
popf
xchg
xor
mov
shlb
aas
nop
xchg
xchg
xor
sbb
adc
mov
adc
lea
pop
dec
or
ffree
outsl
jmp
arpl
xchg
out
sub
rcrl
orb
imul
mov
movsl
jae
push
das
fldenv
icebp
testb
adc
mov
push
int
add
cmp
aaa
jl
es
ljmp
xchg
in
pop
mov
dec
into
adc
ficomps
enter
pop
sbb
popf
out
lret
dec
mov
out
mov
pop
in
int3
loope
xchg
rcrb
mov
xchg
movsb
sbb
hlt
push
push
movsb
xchg
xlat
mov
lea
stc
nop
out
adc
sysexit
daa
test
sahf
xchg
out
or
mov
pop
cwtl
lea
js
mov
adc
add
push
or
sbb
pusha
enter
dec
dec
inc
xchg
sub
pop
push
pop
fcmovnu
aad
cmpsl
fsts
dec
or
clc
jb
shlb
mov
loop
push
std
cltd
dec
push
mov
mov
jno
movsb
mov
sbb
sub
xor
outsl
mov
push
sub
xchg
aas
ljmp
mov
xchg
testl
dec
and
sub
fists
pusha
fcoms
loopne
sub
sub
jnp
jb
inc
inc
inc
cmpsb
push
lds
push
je
jecxz
inc
mov
push
dec
mov
add
sub
dec
bound
sub
sahf
mov
addr16
roll
cmp
cmp
ret
pop
iret
nop
in
jb
arpl
and
push
test
icebp
mov
mov
jo
cmp
cld
popf
test
aas
fdivrs
lea
mov
inc
xchg
fmulp
jno
sbb
mov
push
ret
jl
pop
xchg
sub
xchg
repnz
push
fsts
into
cmp
adcl
xorb
cltd
cmpsb
jle
mov
shl
push
ljmp
dec
adc
add
mov
rol
xchg
jne
movsb
mov
cmp
dec
imul
scas
loopne
mov
rcll
dec
mov
xorb
dec
pusha
es
push
lret
cmp
stc
xor
cli
xor
add
lret
int
mov
mov
out
adc
sbb
popa
inc
fistl
rcll
push
sbb
fwait
mov
mov
sub
mov
and
lea
mov
pop
jge
aam
ret
push
inc
dec
mov
mov
inc
pusha
rclb
adc
pushf
daa
pop
out
xchg
add
loope
cmp
aam
xchg
jecxz
enter
push
lods
pop
decb
loop
pop
pushf
test
mov
out
aaa
mov
mov
jo
sub
rolb
stos
mov
loopne
lock
or
dec
push
daa
mov
dec
and
push
push
in
or
shll
call
rcll
or
mov
mov
mov
mov
pop
nop
mov
insb
xchg
faddl
repz
imul
outsl
stc
std
inc
outsb
stos
pop
cmp
cwtl
fwait
inc
sbb
ja
sahf
les
inc
sub
aas
mov
sbb
mov
mov
xchg
outsl
lods
mov
cmpsl
or
repz
push
repnz
or
lock
hlt
adc
sbb
call
negb
cmc
dec
imul
iret
push
adc
dec
pushl
adc
pushf
sti
mov
mov
lret
xchg
jns
push
pop
lods
loopne
push
pop
imul
adc
insl
aam
push
out
in
and
and
mov
cltd
dec
imul
cmpsl
push
arpl
daa
mov
and
mov
pop
dec
popf
es
popa
insb
jbe
cltd
fstp
xor
js
inc
out
ret
add
pop
lea
add
jecxz
out
pop
pop
inc
cmp
sbb
mov
and
dec
adc
xchg
sbb
iret
fisubrs
inc
cltd
cmp
sub
lret
bound
push
jmp
push
pop
mov
arpl
ljmp
loopne
adc
out
add
xor
pop
dec
fdivrs
pop
fucomip
adc
into
or
test
push
pop
xchg
xchg
fbstp
mov
mov
or
and
inc
fisttps
inc
push
xchg
mov
stos
imul
and
and
fs
xchg
inc
gs
adc
lcall
sbb
addl
aad
cmpsb
jns
and
pop
testb
adc
xchg
pop
xor
jae
sub
fcmovu
and
insb
addr16
adc
jne
fidivl
jmp
stc
hlt
jo
rcr
mov
push
shrb
fnsave
push
mov
xchg
add
mov
push
xor
cmp
mov
stc
dec
xchg
cltd
je
and
mov
mov
jmp
negl
xor
je
push
mov
dec
pop
ret
mov
dec
out
sbb
into
adc
and
sub
lods
mov
aaa
pop
or
lods
add
cmp
aad
fwait
loop
sbb
sub
std
mov
xlat
das
adc
mov
cwtl
clc
pop
mull
stos
insb
jns
pmovmskb
stos
jo
pusha
push
lods
sub
popf
push
lods
xchg
roll
rolb
pop
int3
cmp
sti
sbb
repnz
repz
fisubl
dec
cmp
push
cli
mov
test
outsb
mov
jbe
stc
sbb
sub
and
es
pop
mov
jp
dec
stc
push
push
mov
mov
jne
lret
or
sub
cmp
push
xor
les
scas
inc
lret
mov
or
push
add
pop
out
push
pop
lret
lret
and
into
and
in
imul
dec
mov
mov
dec
sbb
xchg
cmp
mov
movsl
cmp
mov
cltd
xadd
mov
adc
push
sub
sbb
stos
sub
mov
pop
shlb
mov
add
adc
lods
add
cld
add
cmp
cltd
push
in
jbe
testl
out
insb
pop
jo
cmp
mov
mov
repnz
movsb
mov
push
xor
cmpsb
fbld
adc
jl
out
sahf
sub
bound
mov
push
dec
lods
pushf
dec
ficomps
mov
or
mov
mov
shlb
and
sub
lods
cmc
test
into
pop
jg
and
jmp
pop
pop
sbb
inc
test
js
or
mov
add
std
mov
flds
add
xchg
rorb
insb
add
jo
out
in
call
pop
xchg
icebp
cli
sbbl
fisubrs
lds
jns
and
insb
clc
push
push
push
arpl
test
pop
mov
sti
add
xor
mov
xchg
mov
lret
rcrb
inc
pusha
repnz
mov
cmp
js
int
int
data16
pusha
mov
in
clc
repz
mov
adc
add
out
adc
hlt
shlb
jne
in
jecxz
loop
cmp
sarl
into
out
inc
loopne
outsb
sarb
data16
inc
or
scas
int
push
push
xor
mov
xor
pop
push
pop
xchg
lock
inc
cltd
lahf
das
xchg
fidivrs
pop
jo
dec
cwtl
add
dec
sbb
fldl
push
and
aaa
int3
fdiv
adc
mov
mov
add
or
js
mov
sbb
push
mov
mov
lods
pusha
jcxz
and
enter
outsb
fldcw
in
mov
cmp
aaa
mov
test
jnp
mov
and
lods
stos
xlat
and
mov
push
xor
fsts
xorb
adc
dec
fidivs
pushf
fs
arpl
idivb
lret
test
push
inc
sub
in
or
mov
mov
cld
mov
mov
jmp
push
ret
xchg
lods
ss
test
sbb
int
dec
jne
mov
outsl
imul
mov
xor
sbb
xchg
gs
adc
mov
sbb
fsts
jnp
popa
and
xorl
mov
scas
push
or
push
sahf
into
cli
dec
movsl
test
shrl
push
pop
not
cmpsl
xchg
loopne
divl
es
imul
mov
arpl
data16
out
and
xlat
shr
mov
inc
jns
shlb
daa
and
inc
mov
jo
cwtl
iret
cmpsb
dec
insb
push
sbb
push
adc
cmp
mov
and
mov
fsub
loope
test
jnp
xchg
adc
cmp
sbb
jge
test
testl
xchg
dec
daa
je
imul
cmp
pop
adc
jmp
popa
sbb
dec
mov
mov
mov
jno
push
jne
xor
rcrb
mov
or
pop
mov
mov
das
clc
or
loope
push
jnp
and
or
xchg
sbb
scas
sahf
xchg
mov
xor
pusha
movsl
into
test
sti
mov
ret
icebp
into
or
int
int3
xorl
mov
ja
push
ret
dec
jmp
fwait
mov
call
pop
push
add
dec
rcrl
out
dec
out
mov
xchg
cmp
movsl
ss
jmp
lock
mov
xchg
and
sbb
push
push
adc
inc
push
hlt
push
nop
dec
add
loop
lock
push
movsl
ljmp
adc
aas
mov
cmp
or
std
js
sbb
xor
scas
xor
mov
outsb
mov
roll
cmp
in
jno
push
pusha
sahf
outsl
daa
dec
rcll
mov
mov
lods
mov
dec
lret
enter
xor
ljmp
rcrb
jbe
sbb
dec
or
mov
imulb
push
mov
add
adc
mov
leave
pop
cmp
xor
in
cmp
add
xchg
adc
out
mov
mov
pavgw
ret
cmpsl
jns
je
cmp
sub
lods
pusha
pop
outsb
mov
lahf
lcall
push
fisttpll
adc
leave
mov
sub
ss
cmp
jnp
out
add
xchg
je
addr16
test
pop
sub
mov
sub
into
and
ss
push
push
cmpsl
xchg
in
in
add
ret
mov
jg
add
cmc
lods
lcall
into
in
and
sub
push
in
mov
ja
push
clc
dec
dec
pop
call
jnp
daa
ja
orps
js
jecxz
das
repz
out
subl
dec
lret
movsb
cmpsb
rcrb
popa
mov
xor
xor
ret
sbb
addr16
push
adc
js
xchg
in
dec
shrb
rolb
sub
dec
movsl
je
sub
push
mov
test
mov
cmp
sbbb
push
push
out
fidivrs
lock
mov
sbb
or
cli
push
cmc
xchg
push
pop
jmp
test
sub
in
push
mov
dec
lock
jg
xchg
inc
fisubl
popf
pop
sbb
fwait
jnp
subl
enter
shll
mov
mov
notl
xor
orl
xor
orl
add
add
mov
cmp
jae
add
lea
mov
subl
mov
addl
xor
add
lea
movl
mov
mov
mov
cmp
jbe
xorl
addl
jmp
addl
or
mov
xor
andl
inc
andl
incl
add
movl
cmp
movl
jb
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
push
push
pushl
pushl
call
cmpl
jb
mov
jmp
test
addb
xchg
aam
pop
cmp
add
pop
adcl
push
add
je
pushl
adc
sub
jno
fstps
jg
shll
pop
sti
clc
xchg
dec
jbe
mov
dec
sub
pop
cld
or
fwait
push
add
xchg
xlat
adc
xchg
pop
fidivrl
cld
jmp
mov
pop
loope
xor
and
jecxz
mov
pop
les
pop
aam
xor
jl
sahf
xchg
sbb
shr
clc
sbb
int
sbb
clc
ljmp
call
mov
pop
cmp
fidivrs
push
in
jl
out
popl
arpl
loopne
xchg
pusha
hlt
cli
push
or
fldt
push
xorl
cld
push
aas
mov
dec
push
out
adc
test
mov
cld
outsl
jp
inc
dec
jne
mov
inc
aaa
mov
lods
jno
sub
fbld
fnstenv
out
fs
cmc
sbb
jns
loop
lret
clc
out
add
jns
or
fnstenv
cmpsl
fsubrs
dec
cmp
push
lea
adc
dec
jae
push
outsb
push
cmpl
test
jnp
stos
frstor
stos
int
jle
mov
lea
addb
pop
xor
push
pop
xchg
test
lret
sbb
sbb
pop
inc
xlat
mov
lock
icebp
mov
dec
out
test
inc
dec
fsts
out
adc
and
cmpsb
and
xchg
fsubrl
in
cmp
inc
ss
dec
xchg
add
cmp
fcmovnb
jmp
das
sbb
mov
mov
test
dec
arpl
mov
dec
repz
add
out
and
and
inc
shl
mov
sbb
movsl
rclb
sbb
xlat
dec
enter
sarb
dec
dec
cmp
add
push
neg
ljmp
pushf
mov
cmp
mov
mov
es
ja
push
xor
divl
push
shrb
push
repz
repnz
fs
xchg
pop
sbb
fcomp
cs
sbb
add
mov
addr16
and
call
outsl
jae
adc
and
imul
sbb
jge
xor
stos
pop
and
xor
xchg
aaa
into
scas
scas
lret
mov
add
int
mov
daa
notb
cmc
gs
enter
daa
out
fnstsw
aaa
mov
dec
fstl
push
jl
push
sbb
push
scas
popa
cmc
inc
test
push
mov
andl
jge
iret
scas
mov
lds
mov
sub
call
shll
cwtl
push
loop
dec
cmp
imul
or
dec
imul
sub
testb
xchg
insb
fistl
cmp
repnz
adc
or
loopne
mov
pop
clc
and
xchg
mov
or
popa
repz
fists
push
cwtl
jns
or
incl
add
cmpsl
stos
mov
xor
sbb
loopne
lahf
jnp
es
pop
cmpsb
mov
das
fisttpll
enter
xchg
ret
push
sarl
cmp
aas
jae
pop
leave
jne
lea
mov
sub
out
xchg
cmpsl
in
jae
jbe
movsb
jecxz
mov
sbb
mov
pop
dec
xchg
ds
mov
outsl
or
mov
xchg
lock
ljmp
sbb
ficoms
rcr
mov
sbb
aas
mov
fs
mov
jae
roll
mov
ss
sub
xor
adc
inc
mov
imul
scas
dec
outsl
adc
push
sbb
mov
fidivrs
ror
push
sti
pop
out
adc
or
push
push
fwait
dec
add
int
sahf
mov
into
outsl
add
shr
enter
xchg
ret
orb
call
mov
cmp
jne
lods
and
dec
adc
mov
lahf
dec
and
xchg
jle
aad
sbb
out
xorb
nop
les
push
mov
adc
ja
fwait
or
nop
and
lods
ja
sub
pusha
shlb
xlat
jo
xor
ss
and
push
ret
ss
int3
or
ret
pop
loopne
ficompl
jnp
pop
pop
pop
mov
gs
or
jmp
xor
mulb
jmp
add
dec
hlt
test
xor
sbb
sbb
aam
cmp
lcall
jp
add
rclb
pop
std
pop
jge
add
in
push
cmp
rolb
int3
fxch
xchg
cmpsl
push
jns
sbb
sahf
pop
ficompl
js
xchg
push
arpl
rdmsr
mov
mov
sub
cwtl
xchg
or
add
mov
lods
lcall
aaa
and
mov
imul
push
fistl
fidivs
into
lcall
pop
push
sub
sbb
icebp
int3
and
lret
cmc
or
mov
fsubr
pop
sub
jbe
adc
jecxz
or
cs
outsb
jle
std
mov
repz
leave
xchg
pusha
mov
xchg
push
xor
sub
lret
sub
dec
gs
insl
in
sahf
clc
add
lock
cmc
clc
es
data16
and
push
gs
in
lock
hlt
pop
sarl
fs
loop
dec
out
aad
lcall
ja
loop
mov
push
add
fsubrp
ja
pop
iret
imul
fstl
mov
imul
outsb
fldcw
pop
nop
lret
scas
jae
fnstcw
je
xchg
xor
push
or
push
jp
xor
push
ds
shl
sub
enter
dec
xchg
xor
into
jae
adc
mov
mov
sbb
rcll
movsb
std
inc
sbb
mov
adc
popf
imul
insl
pop
fbld
mov
lahf
shll
std
lods
stos
movsl
or
inc
pop
stc
aas
adc
mov
xchg
cmp
cmpsb
loop
les
cli
je
ss
cmp
fwait
mov
aaa
dec
or
adc
outsb
xchg
cmpsl
sbb
push
mov
mov
ds
pop
pop
dec
add
sub
in
jno
aam
push
push
scas
adc
sub
add
mov
test
or
sub
popa
dec
sbb
lret
ret
push
ret
jae
sbb
or
fistpll
xor
jns
mov
loop
jg
imul
roll
xchg
jl
inc
mov
and
inc
std
add
aaa
sub
fisttpl
aad
scas
pop
add
add
aas
cmp
xlat
test
xor
shr
ret
scas
ja
enter
das
pop
dec
xor
cltd
in
xor
mov
push
jge
jnp
stos
mov
pop
sub
adc
bound
cmpsb
and
adc
sarb
in
mov
fwait
in
sbb
push
rcrl
xor
mov
lds
sti
cmp
stc
sbb
in
fmuls
dec
fisttpl
jb
inc
testb
dec
popa
mov
jg
aad
in
dec
sbb
and
daa
fstpt
mov
nop
xor
lahf
mov
mov
mov
das
mov
xchg
lods
mov
push
scas
jmp
xchg
sahf
mov
mov
ret
sarb
ss
lret
in
repz
fwait
jg
adc
js
push
mov
shrl
hlt
sbbb
sbb
lahf
std
je
cmp
call
jg
add
lods
add
out
sub
mov
clc
push
and
insl
ljmp
dec
adc
jo
orb
mov
sahf
icebp
lods
mov
test
in
add
mov
xchg
sub
out
add
fisubl
sbb
or
sbb
bound
jns
xchg
fs
xchg
jae
add
lods
into
aam
sbb
sbb
data16
fcomps
lods
in
dec
mov
xchg
cmp
and
sbbl
in
adc
testl
rcll
lahf
pushf
dec
xchg
and
leave
int
xor
clc
pushf
or
pushf
mov
mov
lret
sbb
iret
insb
scas
jbe
loopne
xor
mov
cmp
xchg
ja
out
add
hlt
adc
cmp
ljmp
dec
xor
pusha
add
testb
js
cwtl
cmpsl
pop
into
dec
jl
and
int3
bound
into
es
out
mov
mov
pop
cmp
outsl
inc
push
pop
loopne
xchg
mov
cmp
out
mov
stos
pop
movsl
es
subps
xchg
pusha
push
xchg
xor
jb
sbb
shl
push
and
cmp
imul
xchg
std
xchg
gs
popf
push
jl
mov
clc
loopne
pop
and
cmpsl
jmp
dec
pop
dec
push
jle
jmp
mov
push
cmc
xchg
push
scas
fcomps
sahf
add
sbb
jb
mov
test
es
out
pause
shrl
push
pushf
pop
mov
sbb
jo
stos
and
into
mov
inc
fdivrl
mov
xlat
xchg
cmp
cmpsb
push
sbb
je
test
sbb
mov
cmpsl
or
pusha
jb
push
pop
jns
icebp
es
popa
add
dec
insb
push
push
sub
std
inc
xorb
mov
and
aam
jbe
push
jns
add
or
push
xchg
mov
movsl
lods
jb
rorb
push
lock
mov
dec
add
fisttpl
push
mov
cs
int3
pop
dec
dec
or
icebp
add
xor
push
xchg
xchg
push
call
xchg
in
int3
xor
jno
dec
pop
mov
cmp
inc
ljmp
sub
sub
mov
cmp
pop
mov
cmpsb
leave
call
cwtl
orl
mov
push
sub
ss
pop
xchg
scas
jecxz
into
pop
repnz
push
movsb
pop
stc
fcomps
dec
idiv
mov
cmpb
add
xchg
mov
mov
push
and
mov
jl
xchg
dec
inc
mov
push
mov
out
cmp
mov
mov
and
test
fcmovb
popa
xor
pop
pop
dec
cltd
insb
mov
mov
out
fucomip
push
iret
loopne
xlat
iret
imul
repnz
int3
inc
pop
adc
jnp
test
jmp
ret
cmp
js
cmp
imul
mov
frstor
xchg
or
jp
pop
xlat
adcl
adc
fisttpl
xchg
loope
test
adc
jnp
packuswb
mov
repz
inc
negl
mov
inc
push
add
and
ss
push
imul
xchg
ffreep
mov
incb
repnz
pop
in
adc
sub
pop
fdivs
dec
mov
xchg
push
push
push
fisubrl
push
pop
cmpsl
es
sbb
mov
or
mov
jl
leave
shrl
loop
mov
iret
cmp
mov
fcmovbe
mov
ljmp
mov
ja
fnstcw
mov
outsb
cli
xor
mov
imul
clc
push
cmp
cmp
pop
cs
ficomps
das
sbb
mov
adc
inc
sub
ret
jp
fmuls
lcall
mov
iret
pop
push
cwtl
testb
pusha
iret
fs
nop
cld
inc
add
jge
lahf
fimuls
mov
jmp
jnp
fldenv
xchg
adc
mov
push
mov
inc
add
pushl
divl
jmp
loope
cmpsb
xchg
push
pop
push
xchg
sub
xlat
jge
addr16
xor
adc
cwtl
scas
xchg
pop
mov
sub
ja
data16
stos
xchg
push
cmp
cmpsl
jnp
test
xor
insl
adcl
xchg
push
outsb
ss
call
jo
ja
xchg
pop
mov
mov
mov
scas
hlt
test
enter
int
mov
mov
lods
cmp
ret
xor
cmpsl
and
add
inc
sbb
ljmp
xor
adc
aam
jae
or
sbb
sub
lcall
mov
jbe
xchg
lret
mov
inc
je
pop
imul
xchg
xchg
jmp
sub
lcall
lret
test
sub
std
js
inc
ucomiss
cmp
jns
mov
scas
insb
or
push
fdivs
addb
dec
xor
add
pop
lcall
pusha
cmp
pop
arpl
les
add
jae
nop
pop
cmp
lret
std
pop
das
pop
pop
fistps
xor
xchg
shlb
push
mov
adc
mov
add
or
std
sbb
leave
ss
xchg
mov
inc
and
incl
push
sub
mov
lds
push
sub
and
out
inc
dec
pusha
iret
data16
push
bound
sub
adc
adc
test
test
shrb
mov
movsl
in
sub
dec
or
push
jo
xchg
or
scas
testb
push
mov
mov
aaa
lahf
jne
shll
rcr
subb
xor
jnp
cmp
push
pop
adc
mov
sbb
clc
in
lcall
push
or
cmpsl
call
pop
adc
inc
jns
add
xchg
int
xor
mov
loope
sbb
or
or
cmp
mov
sub
pop
inc
mov
aas
xchg
iret
mov
sbb
icebp
sbb
mov
fnstenv
push
mov
sets
outsb
adc
fstpl
mov
sub
xchg
jo
inc
inc
lds
js
push
ljmp
out
outsb
adc
or
pushf
sbb
sub
and
inc
mov
mov
sub
jns
sbb
or
in
pop
and
mov
rcrl
push
cs
pop
sbb
inc
loopne
sub
or
bound
push
loop
sbb
ret
insb
roll
iret
add
xor
mov
call
shrb
int
stos
daa
aad
push
int
sbb
sbbb
dec
sub
aad
dec
ljmp
enter
int
inc
jns
cmp
mov
aaa
xor
add
pusha
push
pop
dec
jecxz
push
cs
sub
fnstcw
dec
sbb
dec
mov
ficomps
jp
pop
xor
xchg
les
fmulp
es
cmp
pop
imul
fcomp
clc
add
out
int3
sbb
mov
ret
int
lods
push
mov
add
ret
xchg
xchg
dec
xlat
and
add
or
test
xor
call
lods
jecxz
aad
xchg
imul
fldt
jae
arpl
sbb
cmp
sub
subl
out
mov
xchg
jg
repz
xchg
cmp
push
andl
xchg
repnz
mov
mov
repnz
push
push
xchg
push
repnz
fsts
pushaw
cs
sbb
or
cmp
sub
daa
push
push
out
stc
sub
push
popa
inc
shlb
push
jmp
sbb
cltd
insb
shl
ss
aam
jne
add
addr16
mov
and
rcrb
mov
fisubrs
sub
fs
sbb
repnz
daa
scas
push
mov
aad
push
movsl
mov
icebp
xchg
ss
jg
or
out
sbb
dec
pop
inc
dec
mov
and
push
imul
cmp
icebp
add
flds
pop
test
mov
in
mov
cli
push
fsubrl
ss
xchg
push
out
insl
addr16
ds
ljmpw
sbb
movl
popf
cs
inc
add
sti
mov
dec
cltd
jns
outsb
out
inc
mov
and
xor
scas
cmp
scas
lcall
add
dec
push
and
jmp
sub
hlt
movsl
mov
jno
in
jp
cmp
sub
popf
add
fimuls
pop
jne
loope
xchg
xorl
ret
fidivrl
xchg
sub
sub
push
scas
pop
insb
fdivrs
mov
cmpsl
lcall
jecxz
mov
pop
rcl
sbbl
mov
add
push
mov
addr16
jnp
sahf
decl
and
nop
xchg
cld
cltd
addr16
test
loop
xchg
add
repnz
fistl
addr16
js
imul
in
mov
inc
fwait
sarb
mov
inc
pusha
pop
or
mov
sub
shlb
pop
and
jno
jle
popa
lock
sar
shrb
mov
mov
add
outsb
lods
int3
adc
xor
mov
fists
dec
xchg
lods
mov
cmc
sti
sti
push
pop
inc
jns
mov
mov
lods
ret
pop
cmp
lock
out
mov
mov
xchg
cmp
shll
xor
sbb
and
xor
stos
mov
repz
pop
add
pushf
test
and
mov
ja
cmp
pop
jb
jne
mov
lods
popa
fs
pusha
sub
dec
fxch
cmpsb
inc
sbb
fisubl
xchg
pop
dec
add
sub
add
push
sub
test
sub
ret
pop
sti
pop
ljmp
cmp
ficomps
sti
mov
adcl
jns
std
xchg
fdivrs
push
jb
rcr
or
out
lods
ja
arpl
pop
aad
jecxz,pn
adc
popf
mov
and
cmp
in
sub
rolb
insb
mov
mov
int3
rol
scas
les
rcll
fisubrs
push
and
mov
gs
mov
mov
dec
iret
scas
push
loopne
clc
fsts
pop
pop
orl
pop
fs
shlb
mov
jno
or
fnsave
popf
mov
dec
popf
push
push
xchg
mov
insl
sbb
dec
add
jbe
and
ds
jmp
jnp
lock
pop
enter
iret
xor
cltd
shrb
add
pushf
test
fs
sub
mov
sub
roll
mov
push
dec
and
inc
cli
sub
in
jae
xor
lods
pop
sub
dec
adc
andb
repnz
in
flds
sbb
mov
or
lret
mov
dec
adc
pop
xchg
xchg
jmp
fs
and
lods
jo
test
mov
bound
inc
jb
in
mov
sbb
push
adc
sbb
add
xchg
and
lret
cli
adc
stos
push
or
cmp
daa
and
fsubrl
sub
scas
cmp
mov
fwait
push
jge
fcompl
jmp
into
cmp
iret
insb
inc
out
jmp
outsb
dec
cmp
mov
jmp
xchg
cmp
imul
inc
in
stc
imul
test
cmp
jae
rep
inc
lahf
in
sub
dec
push
leave
mov
push
mov
mov
ficompl
mov
sbb
mov
mov
fdivs
inc
mov
leave
jae
insl
xchg
shl
clc
fimull
push
bound
outsl
mov
sahf
cmpsb
dec
es
sub
fildl
cmp
sbb
imul
mov
mov
bound
xchg
push
cmp
jg
test
nop
dec
fdivrl
jmp
xchg
xchg
lea
pop
fwait
or
mov
lret
jecxz
or
out
and
ljmp
jle
sub
or
call
dec
sbbl
jl
mov
or
mov
ljmp
orb
push
gs
popa
add
cmpsb
int3
pop
aam
pop
loope
es
fcom
xor
addl
mov
insb
fmul
mov
jae
cli
js
mov
xor
popa
out
mov
fadd
mov
adc
jmp
mov
shll
dec
mov
or
cmp
add
mov
xlat
mov
fistpl
sahf
or
lods
mov
xchg
xlat
stos
lahf
sbb
outsl
and
dec
aam
divb
ja
inc
popa
add
inc
iret
inc
ret
out
cmpsl
and
js
and
ds
je
sub
iret
fstpt
dec
xor
jecxz
lock
mov
xchg
ficoml
fstpl
int3
loop
jge
jnp
addl
test
dec
popa
pop
xlat
or
icebp
jge
lea
sbb
cmp
es
or
repz
testl
jo
das
push
lret
shrl
sub
adc
jge
popf
jmp
movsb
test
out
cmp
mulb
mov
lcall
insl
mov
dec
and
jae
push
les
jne,pn
repnz
mov
in
push
outsl
icebp
in
int3
fsub
sub
or
adcb
popf
fdivrl
sahf
lods
push
ret
cld
xor
outsb
mov
mov
xchg
out
pop
aad
stos
in
hlt
pop
mov
mov
push
into
pop
iret
sub
pop
jae
scas
inc
loope
jne
xchg
inc
aam
rorl
es
fstl
dec
mov
adc
rorl
mov
cmovg
in
fs
or
ret
and
mov
arpl
loope
iret
or
inc
pop
dec
mov
rep
jle
out
adc
xchg
xchg
out
push
jno
inc
out
xchg
xor
push
in
add
cltd
test
mov
cmpsl
call
lret
add
js
in
sbb
jo
nop
inc
sbb
cld
fidivs
lods
push
xorl
stos
icebp
dec
aam
cmpsl
lea
sar
sbb
add
les
test
mov
imul
decb
mov
or
ror
je
aas
mov
bound
cs
mov
mov
cmpsl
sub
fcmovnbe
orl
hlt
add
ficomps
ret
out
mov
xlat
inc
outsb
mov
fisttpl
cmc
loopne
pop
rclb
or
lods
and
popa
cli
cmp
cmp
imull
pop
xor
lock
mov
cs
dec
mov
push
gs
jns
es
jp
push
inc
dec
push
mov
or
dec
sti
daa
loopne
push
inc
stos
mov
push
push
pop
lret
popa
adc
mov
jecxz
dec
mov
flds
mul
xchg
jg
or
mov
neg
popa
ss
fisttpl
jecxz,pn
in
popf
ficompl
push
or
stos
neg
mulb
adc
lcall
add
scas
push
inc
jge
imul
in
hlt
cld
ret
jno
cwtl
lret
test
mov
or
testb
popa
pop
jne
xchg
cwtl
adc
push
mov
mull
daa
cltd
lret
push
inc
jg
aam
push
roll
jg
push
adc
add
or
scas
inc
movsl
xchg
pushf
popf
fwait
mov
pop
jmp
int3
in
fsubl
sbb
add
push
das
jnp
shrb
push
or
in
mov
adc
and
addl
add
mov
shl
sub
jno
out
mov
sub
rolw
mov
test
pop
pop
lods
mov
pushfw
sub
jecxz
sub
add
inc
arpl
mov
je
mov
jb
push
sub
mov
mov
cmp
xchg
mov
jle
sub
add
push
shr
inc
add
adc
pop
out
and
adc
push
sub
aam
stos
lcall
jo
sub
pop
test
mov
imul
jnp
jle
push
sti
fidivrs
orl
nop
mov
cld
dec
mov
cmpl
es
fnstcw
scas
mov
inc
mov
movhps
xchg
clc
test
cs
dec
adc
dec
int3
mov
jp
arpl
int3
sub
push
jecxz
jecxz
mov
test
push
mov
mov
xchg
mov
pop
pop
fimuls
sub
mov
cmc
inc
rcl
cmp
lds
shrl
clc
mov
xchg
popf
call
loope
insb
xlat
mov
clc
push
cmc
push
push
inc
nop
adc
cmc
pop
fildl
movsb
xchg
jp
sbb
adc
cmc
xor
inc
mov
stos
mov
xor
aad
fbld
cltd
adc
or
in
cmp
sub
push
xor
mov
mov
lret
dec
sub
and
fsubl
outsb
mov
dec
mov
jge
icebp
mov
int3
fnstcw
add
jo
dec
inc
cmp
push
jl
pop
imul
add
test
out
mov
or
and
pop
lret
and
movl
jae
fidivl
pusha
jmp
push
inc
scas
test
fstpl
or
and
hlt
and
jl
movntq
cmp
mov
scas
outsb
xchg
cmpsb
sahf
sub
push
out
cmc
scas
sahf
xchg
jbe
sbb
sarb
adc
shlb
dec
xor
sub
imul
gs
pop
popf
push
xor
repz
jne
sti
push
push
fstp
mov
stos
out
sbb
mov
sti
ret
clc
jnp
dec
dec
or
pop
xor
in
in
push
adc
push
and
cmp
fnstsw
adc
xchg
jge
jl
adc
cmp
in
loope
mov
scas
or
shll
mov
pop
adc
pop
icebp
pop
sub
icebp
xor
xor
dec
lods
popa
loopne
xlat
mov
scas
or
sbb
mov
in
dec
dec
pop
jbe
cmc
es
inc
ja
jmp
jb
push
push
mov
jns
xor
pop
sub
pop
pop
mov
and
fstpl
sub
xchg
mov
sub
icebp
adc
sub
out
insb
adc
lods
sub
push
lds
roll
out
leave
cmp
pop
bound
xor
into
cld
adc
enter
and
hlt
enter
es
cmp
cmpb
xor
fwait
hlt
les
mov
outsb
xorb
dec
hlt
bound
push
into
lcall
or
lret
adc
nop
mov
outsl
popa
ret
mov
loope
and
xchg
sub
movsl
add
aas
xchg
jp
int
andl
push
push
cli
imul
stos
adc
fs
sub
clc
push
xor
inc
jmp
dec
xor
sub
andl
inc
cmp
out
in
mov
mov
xchg
call
dec
incl
or
dec
inc
add
xor
pop
jmp
repnz
lods
sub
jnp
sbb
repnz
push
insb
ret
sbb
outsb
fiadds
or
push
gs
or
cs
std
xchg
push
mov
push
iret
inc
sbb
lds
clc
mov
sub
subb
xor
mov
jnp
fldcw
cmp
xor
mov
or
inc
testb
mov
mov
es
or
push
jne
js
adc
das
insb
mov
and
iret
add
cmp
test
and
add
sub
mov
std
mov
xchg
movsl
cmp
pop
mov
fsubp
xor
lods
xor
and
jae
loope
shll
add
cs
dec
pop
lds
mov
cmpl
out
mov
or
pop
and
fwait
pusha
lahf
pop
mov
mov
push
into
add
repz
cli
lods
jne
outsl
jne
dec
push
insb
test
inc
fiadds
pop
test
sarb
rol
xchg
icebp
push
xor
enter
rcr
push
js
cli
iret
gs
adc
call
int
enter
dec
enter
mov
clc
cmp
inc
pusha
fucom
sub
xchg
inc
scas
dec
scas
int
jnp
xor
xchg
ss
stc
jmp
fwait
hlt
outsl
sbb
pop
rcrl
sbb
cmpsb
sub
divb
pop
out
or
out
gs
and
jle
jb
pop
mov
mov
or
sub
sub
in
adc
pop
pop
pop
clc
ljmp
daa
inc
flds
dec
mov
inc
dec
in
stos
decl
xchg
mov
rcr
outsb
mov
rolb
sbb
dec
jmp
test
imul
jne
xor
push
cmp
adc
in
movsb
mov
stc
sub
imul
jl
shrl
gs
adc
or
and
cmpsb
xor
xor
sub
jns
xchg
mov
push
and
mov
xor
shrb
mov
inc
mov
xor
outsl
fists
outsb
jno
push
das
shll
out
rcr
popa
fisttpll
sub
dec
cmp
inc
push
mov
cmpsb
mov
in
xchg
stc
in
xor
pop
lcall
das
popa
mov
push
jge
xchg
xor
mov
popa
insb
adc
lds
adc
loop
insl
mov
call
cs
jle
data16
mov
pop
cmc
mov
xchg
fisubrl
xchg
adc
jg
out
adc
cmp
pop
inc
pop
sub
sub
inc
xchg
jecxz
xchg
jle
dec
adc
jl
dec
xchg
sahf
rolb
mov
push
sbb
fsubp
lcall
out
xchg
lods
xchg
jg
loopne
ss
push
out
jns
stc
mov
sbb
pushf
movsb
repnz
fmul
or
lea
or
js
adc
fcompl
in
and
sub
push
inc
and
adc
call
popa
popa
stc
lods
sbb
call
mov
jmp
imul
lods
ss
fldcw
call
pop
inc
lds
in
sub
in
sub
mul
adc
fwait
in
mov
inc
in
mov
out
testl
and
sub
insb
nop
inc
loopne
jle
sbb
loope
sti
push
outsb
dec
cs
push
push
mov
inc
dec
aam
nop
inc
xor
add
jae
and
sub
inc
cmpsl
inc
out
mov
and
sahf
shll
inc
push
call
dec
mov
scas
cmp
pusha
adc
pop
jbe
pop
sub
test
leave
dec
inc
mov
cld
loope
fidivrl
das
mov
xchg
jns
aas
movsb
mov
add
mov
adc
in
rcl
push
dec
jns
test
xor
jne
int
shlb
mov
fnstsw
mov
sub
or
sbb
sbb
inc
dec
or
xor
fldl
jmp
loopne
cmp
mov
inc
add
add
xor
mov
sub
xorl
add
or
mov
xor
sub
ror
sub
xor
mov
subl
mov
adc
jmp
or
mov
hlt
jne
arpl
idivl
out
pop
addl
cmp
xor
pop
mov
cwtl
adc
insb
push
fwait
push
adc
scas
loopne
dec
pusha
sbb
cld
push
sub
lods
inc
xor
sbb
scas
mov
out
pusha
push
fisttpl
mov
repnz
jno
daa
xor
xchg
adc
adc
mov
iret
inc
xor
mov
xchg
mov
pop
adc
jae
sub
sbb
in
jnp
push
jbe
out
xor
jge
or
push
pop
ret
xlat
pop
aaa
inc
addl
mov
mov
movsl
xor
mov
xorb
nop
in
test
ffreep
xchg
mov
lret
mov
movsb
xchg
dec
arpl
enter
xchg
test
cmp
loopne
and
loop
sub
cmp
xor
sbb
xchg
hlt
cwtl
rclb
push
xchg
sbb
xor
xchg
fs
insb
mov
mov
das
sbb
lea
xchg
xchg
lahf
mov
xorb
add
imul
jecxz
push
fld
test
ss
test
mov
fiadds
sub
test
inc
sub
and
clc
sub
mov
fldt
push
mov
add
scas
jae
gs
sbb
push
push
sub
std
or
inc
sbb
in
pop
mov
dec
dec
inc
dec
inc
loopne
shlb
dec
pushf
push
imul
dec
mov
adcb
pop
sbb
ret
mov
sahf
bound
jecxz
push
daa
sbb
mov
mov
pop
lea
ljmp
fwait
dec
out
repz
stos
mov
mov
adc
add
rorb
add
and
int3
adc
push
xchg
push
jbe
movsl
push
push
cld
and
and
push
aaa
dec
xor
lahf
jno
adc
movsl
cwtl
push
rcrb
xlat
xchg
daa
scas
mov
lods
mov
and
lret
cmp
mov
adc
cld
push
push
aas
adc
sub
dec
bound
sti
test
scas
mov
xor
mov
fs
xchg
mov
fidivl
test
hlt
mov
xor
jne
mov
pop
popa
or
sub
repnz
stos
stc
xchg
cli
enter
mov
cmpl
mov
lods
out
jne
nop
xor
mov
scas
xor
scas
sahf
loopne
repnz
cmp
insb
ss
scas
fdecstp
dec
test
jbe
test
cmpsl
fcmove
and
insb
das
xchg
mov
push
js
loop
mov
stos
jl
addr16
repnz
mov
mov
leave
pop
xorb
daa
aaa
xlat
cs
stos
lahf
repnz
in
jae
mov
dec
or
sbb
iret
sub
aad
lea
mov
outsb
push
pop
jns
jl
lret
bound
xlat
ret
adc
dec
push
filds
test
in
movsl
adcb
cmpl
mov
pop
jbe
out
ss
sbb
dec
cld
incb
jge
jbe
aam
mov
inc
jmp
sub
enter
icebp
in
push
pushf
mov
out
xor
iret
aaa
xor
mov
jne
pop
mov
sbb
mov
outsl
pop
xor
lret
pop
dec
loop
stc
rcll
push
or
data16
in
inc
sbb
push
repnz
inc
lahf
pop
sbb
ss
add
cmpsb
dec
jmp
mov
idivl
ret
xchg
cwtl
mov
jbe
test
jle
push
movsl
push
je
lea
cwtl
dec
mov
jecxz
xor
add
and
add
repz
push
mov
mov
inc
mov
pushf
cmpsb
sbb
sub
shl
dec
cli
or
cmc
je
or
loope
mov
jge
sahf
andb
out
sbb
jae
scas
adc
cmpb
repnz
stc
mov
mov
mov
pushw
into
mov
xchg
nopl
sbb
iret
ret
inc
loope
xor
xor
mov
cld
mov
xor
dec
or
int
fcomip
out
test
cs
add
pop
insb
cli
push
push
sub
adc
es
inc
mov
pop
loopne
rorl
test
mov
lcall
aas
bound
pop
sti
in
fcoml
cmp
pop
mov
scas
out
pop
movsb
push
pop
xchg
push
push
jnp
mov
xchg
mov
ret
jne
and
mov
xchg
out
out
mov
movsb
pusha
ss
sbb
pop
in
mov
push
xor
xor
xchg
pop
mov
adc
cmp
pcmpgtb
mov
jge
adc
mov
divb
cmp
sub
xchg
leave
fdivrs
lahf
xchg
mov
pop
gs
addl
test
test
sub
test
mov
cmp
ja
sahf
push
mov
cmpsl
pop
in
adc
enter
push
xchg
inc
movb
pop
push
enter
mov
stos
out
std
dec
lods
or
outsl
jns
out
jp
into
pop
jl
sbb
test
test
lods
adc
movsb
mov
pop
mov
mov
bound
leave
jecxz
inc
int3
lock
xchg
cmpb
xchg
or
rorb
mov
fisttps
aad
stc
test
dec
dec
sbb
adc
fstpt
shlb
dec
idivl
lcall
lcall
xor
mov
add
mov
dec
lret
lock
insb
repz
test
push
lcall
push
sub
sarb
xchg
repnz
mov
or
jmp
add
sub
rorb
pusha
dec
push
xchg
push
dec
mov
mov
into
shrl
adc
nop
sbb
push
and
lret
cmc
outsb
scas
and
cmp
fwait
or
mov
sbb
ficoms
mov
or
cwtl
pop
outsb
out
or
mov
aad
jae
sbb
xor
aad
fisubrl
fcmovb
inc
pop
xor
rorl
andl
cwtl
mov
and
mov
sub
xchg
cmp
nop
pop
inc
xchg
adc
mov
fidivrs
mov
rorb
and
loopne
iret
xlat
or
lret
lock
mov
jp
mov
aas
mov
stos
xchg
sti
lock
pop
mov
cld
and
push
fdivl
in
in
outsb
in
adc
loope
jp
outsb
sub
loop
lea
mov
xchg
mov
mov
mov
insb
dec
push
cmp
mov
loopne
and
sub
cmp
xor
lods
arpl
xchg
xchg
popa
and
out
nop
icebp
lcall
scas
ja
data16
cmp
inc
adc
pop
xchg
xchg
pop
push
jp
dec
pop
dec
lret
loop
jecxz
push
inc
in
arpl
jbe
mov
and
jge
std
jmp
sbb
sbb
pop
arpl
or
out
pop
insl
inc
pop
pop
mov
and
movsl
lods
jo
adc
push
cmp
or
lret
mov
cmp
jge
xor
mov
mov
mov
call
fistl
pop
pushf
movsl
imul
lods
dec
jge
popf
push
fistpll
ja
data16
out
daa
or
imul
mov
xor
push
sahf
loope
cld
lret
cmp
cmp
cmp
lcall
mov
push
pop
dec
add
outsl
cmc
push
adc
push
lea
ljmp
mov
cmp
call
fs
cmp
xchg
imul
sub
cmp
mov
std
stos
add
js
negl
mov
jno
mov
push
pop
jg
pop
pop
sub
xchg
push
nop
movsb
inc
aad
adc
xchg
mov
leave
add
jmp
or
loope
popa
cmp
xor
icebp
push
iret
add
sub
sub
inc
scas
inc
adc
test
mov
xchg
popf
lret
dec
cld
sbb
inc
push
lds
sbb
scas
xchg
or
fwait
lods
aaa
xor
loop
aad
jecxz
push
mov
adc
popa
out
pop
pop
aaa
xor
push
adc
mov
scas
cmp
inc
popf
mov
jnp
aaa
lock
adc
cli
ret
pop
add
xor
out
fdivr
or
sub
dec
mov
mov
fsqrt
iret
push
inc
addl
dec
mov
xchg
insb
js
hlt
mov
mov
lret
int3
jp
iret
inc
nop
faddp
out
stc
xchg
ja
cmp
aaa
xor
gs
movsl
mov
in
out
scas
sbb
jae
rorb
sahf
adc
xchg
mov
mov
sub
add
loop
jbe
notb
in
push
addl
sub
aas
insb
pop
repnz
gs
xor
sahf
sarb
mov
int
or
push
js
inc
mov
or
push
jo
popl
sub
mov
xor
rorl
out
xor
sbb
mov
call
mov
cmpsb
leave
pavgb
out
je
pop
pop
sbb
out
in
bound
pop
test
adc
dec
inc
push
sbb
sbb
and
iret
push
cltd
xchg
mov
mov
filds
jnp
jp
push
data16
insl
shl
scas
sub
jb
push
fnstenv
sti
stc
jmp
jne
outsb
mov
sbb
mov
in
loop
test
jae
ret
mov
xchg
mov
in
sti
xor
stos
rorb
sbb
add
add
or
and
mov
mov
push
mov
dec
cmc
dec
ja
pushf
adc
add
fists
pop
das
mov
push
and
jo
push
adc
or
sub
stos
repz
inc
or
les
fisubrl
jns
xchg
nop
bound
mov
cmp
jns
pop
je
jmp
outsb
pop
adc
xchg
mov
fistpll
cwtl
arpl
out
in
push
loop
jns
jo
xor
fnstenv
loop
pop
cwtl
mov
xor
loopne
pushf
dec
test
pop
sub
fdivrl
mov
cmp
mov
imul
sbb
arpl
in
lret
jl
jns
arpl
mov
add
mov
mov
jmp
push
mov
lret
mov
jle
push
sub
cmp
iret
call
iret
adc
lods
push
sub
or
mov
jl
add
sub
inc
jb
enter
cltd
out
cltd
fstpt
push
daa
cmpsb
data16
movsb
xchg
push
daa
xchg
stos
mov
jae
outsl
sub
hlt
clc
fisubs
addr16
cli
pop
sbb
sub
push
push
push
add
sbb
loopne
push
test
leave
mov
sbb
test
scas
adcb
cmpsl
mul
jbe
sbb
movsl
adc
mov
jne
mov
movsl
add
mov
js
fiadds
lret
mov
sahf
inc
xor
sbb
es
xor
xor
inc
nop
cmp
push
lcall
jmp
inc
test
imul
mov
in
cs
jae
call
sub
gs
dec
jg
icebp
jne
xchg
ret
sub
or
sti
sbb
cld
adc
stos
sbb
mov
into
mov
aam
sub
xchg
callw
adcl
ja
data16
adc
cmc
cmpsb
jno
insl
shlb
xor
mov
mov
inc
inc
rclb
xchg
shl
rorb
and
test
push
jle
dec
and
sti
movsw
outsb
dec
mov
mov
dec
xchg
jno
ret
ja
shr
jb
xchg
addr16
adc
push
fdivrl
jns
pop
sub
cmp
scas
dec
xchg
scas
pop
push
mov
ret
mov
push
xor
inc
enter
andb
fs
fadd
out
out
icebp
fdiv
dec
test
jp
pop
out
mov
fnstenv
mov
es
xorb
fwait
inc
rcll
add
mov
push
mov
clc
popf
jle
push
stos
rcll
les
mov
outsb
sub
cmc
cmpsb
mov
mov
sub
out
out
cwtl
test
test
int3
jno
dec
sbb
jmp
adc
repnz
fnsave
sbb
and
roll
aas
inc
stc
imul
in
or
mov
add
ja
in
mov
in
push
dec
mov
xor
test
enter
and
and
imul
lahf
sub
mov
sub
add
inc
inc
push
cmpsb
sub
inc
xor
add
push
roll
test
pop
into
insl
enter
pop
jecxz
add
icebp
xlat
xchg
stos
out
cmpsl
mov
repz
or
cltd
shll
subl
cli
sub
push
and
jg
lods
mov
mov
mull
pop
js
stos
insb
sbb
and
cmpl
fdiv
cmc
or
mov
or
xchg
dec
insb
rolb
jl
xor
movsb
movsl
adc
insl
clc
sti
cld
or
fwait
cld
lret
lea
lods
inc
das
jbe
or
cltd
push
and
or
mov
and
xchg
push
mov
push
imul
sub
xchg
leave
scas
xchg
sbb
ficoms
mov
pop
arpl
daa
inc
loop
in
shlb
jae
aam
xchg
pop
scas
add
and
aaa
fs
scas
mull
inc
out
cld
in
lret
sbb
jmp
sbb
ljmp
or
mov
imul
outsb
xchg
loopne
lds
add
loop
imul
aam
jno
jae
es
adc
out
push
sbb
jno
dec
movsl
sbbb
out
lods
loopne
outsl
pusha
aam
shll
pop
movsb
jno
scas
jns
aam
cmp
insl
enter
mov
cld
frstor
dec
push
sti
mov
pop
sahf
ss
addr16
outsb
and
test
stos
or
or
pop
lcall
jns
jle
stos
xor
sub
sbb
mov
ret
and
pop
and
jae
and
mov
sbb
jo
xchg
test
leave
std
mov
dec
and
sbb
cmp
mov
outsl
inc
add
mov
xor
sbb
fcoms
ss
insl
mov
sub
loop
inc
mov
jb
cwtl
add
pusha
xor
push
xor
es
mov
outsb
or
jae
pop
faddl
mov
daa
and
out
rclb
cmp
fldt
xchg
fs
jne
lcall
ss
mov
cmc
inc
mov
imul
cmpsb
arpl
in
cs
lods
xor
je
mov
lds
push
xchg
repnz
inc
pop
aaa
in
icebp
and
in
jecxz
jmp
testl
aaa
enter
push
xor
push
inc
popf
push
push
mov
xchg
or
pop
lcall
fstps
scas
adc
cmp
cmp
sarl
pop
in
xchg
inc
cmp
jle
imul
xor
mov
cld
mov
adc
int3
mov
ljmp
jns
mov
push
test
fxch
stc
loop
sbb
pusha
inc
xchg
xor
mov
xor
mov
add
xchg
or
mov
outsb
lock
jl
sbb
pop
scas
aaa
jp
dec
xor
test
out
into
adc
pop
aad
in
int
mov
sub
xchg
clc
aad
add
xchg
cmp
jnp
push
mov
int3
mov
lcall
sbb
or
jl
pop
xchg
test
lahf
add
lcall
adc
cmp
enter
cld
int
sbb
jns
ret
ror
jbe
mov
lea
dec
mov
jno
les
aas
pop
ds
mov
mov
jp
mov
test
and
cwtl
hlt
sbb
mov
scas
or
frstor
outsl
cmp
xchg
adc
xlat
enter
inc
scas
mov
jge
imul
int
ss
aad
dec
add
sbb
rolb
in
aaa
jb
sub
ja
adc
ljmp
jp
ret
mov
enter
popa
imul
inc
cmpsb
push
cmp
in
inc
pop
aam
inc
cltd
in
stos
leave
pop
cld
iret
pop
mov
pop
iret
sbb
sbb
fisubl
in
mov
inc
add
mov
push
and
mov
jne
push
push
lret
jb
hlt
mov
push
movsb
mov
mov
or
imul
sbb
xor
repz
inc
adc
mov
pushf
xchg
cmpsl
idivb
jge
adc
mov
fiadds
cltd
icebp
xor
cmp
dec
push
fs
imul
fcmovnb
inc
mov
jmp
insl
inc
jo
add
mov
repnz
and
hlt
adc
insl
push
cmp
jmp
stc
jl
dec
jp
cmpsb
cmpsb
pop
mov
repz
popf
imul
jge
imul
push
dec
std
rolb
dec
inc
clc
jbe
adc
lock
bound
pop
adc
xor
dec
lcall
xor
jg
aam
sub
mov
inc
stos
xor
mov
fcmovb
xor
push
cmp
dec
repz
xor
mov
ja
roll
pop
clc
jae
xor
addr16
test
nop
cmc
xor
loopne
mov
sbb
data16
insl
test
pushf
dec
and
clc
loop
and
leave
mov
jo
push
sbb
or
cmpsb
sbb
sub
or
inc
push
push
cvtps2pd
and
cld
xor
out
nop
xchg
mov
js
into
shlb
icebp
xchg
sbb
mov
and
imul
std
notl
dec
and
adc
std
aad
inc
and
inc
bnd
lret
cmp
fs
notb
mov
inc
repnz
mov
ror
out
int3
rorb
jae
test
subb
shl
dec
sub
xchg
insl
push
call
xor
aam
xor
pop
and
shll
push
stos
test
std
scas
insl
imul
stc
lds
and
jge
loope
pop
out
cmp
xor
fimull
mov
mov
gs
popf
xlat
dec
cwtl
mov
fisttps
or
cli
fldt
into
fists
imul
or
pop
and
test
jnp
jge
inc
dec
sti
enter
stos
adc
ds
and
leave
dec
pushf
add
add
pushf
xchg
hlt
outsl
in
push
mov
imul
lret
bound
mov
fldl2e
xchg
ror
pusha
jnp
jp
jp
test
xchg
fcoms
mov
mov
addr16
mov
jl
xchg
popa
xor
dec
xor
mov
test
lcall
int
xchg
push
nop
arpl
bound
inc
mov
adc
pushf
mov
or
stc
std
cmp
or
in
sarl
jb
arpl
js
arpl
sahf
mov
out
push
jo
gs
push
in
push
cs
ret
mov
sbb
in
out
fnstsw
sub
lock
out
cmp
pop
cmp
xor
mov
or
add
test
gs
dec
mov
inc
jg
lret
jmp
mov
and
push
jo
lret
dec
xchg
push
out
dec
lret
sub
push
movb
lods
mov
cmc
loopne
add
pop
pop
fs
fiaddl
xchg
and
jns
pop
cwtl
xchg
adc
test
mov
xor
sub
sti
pop
push
test
xchg
inc
test
mov
divb
test
mov
or
out
ja
les
cltd
in
adc
or
adc
repz
imul
mov
pop
lret
stc
push
xor
fld
test
mov
into
fdiv
xor
push
pop
sbb
ret
inc
outsl
dec
in
and
dec
sbb
icebp
gs
cmp
jo
adc
and
cmp
dec
pop
push
ss
les
out
movsl
mov
cmp
push
jne
pop
bound
les
rcl
shll
out
ficoml
jb
push
xchg
das
cmp
cltd
rclb
cmp
lods
xlat
mov
nop
xlat
inc
imul
or
cmp
push
adc
ss
mov
lods
lds
pop
and
fisubs
push
popf
addl
dec
stc
fcos
inc
dec
push
inc
aam
cmp
mov
mov
xlat
jecxz
add
lods
xor
fs
mov
push
sub
pop
stos
je
push
push
add
repz
cli
lock
je
shlb
decl
jge
jecxz
cwtl
sarb
cwtl
vpunpcklbw
xchg
leave
xchg
cltd
or
cli
out
inc
mov
add
jmp
jae
out
enter
popa
clc
and
int3
ror
mov
ja
xor
cld
in
in
test
mov
lahf
loopne
lret
mov
aaa
xchg
insb
outsl
cmp
cmp
test
pop
pop
in
inc
js
outsb
jg
enter
or
imul
adc
test
dec
mov
mov
aad
pop
int3
xor
out
test
daa
imulb
mov
push
push
lods
in
push
mov
les
cld
add
cmp
xor
xchg
jo
les
inc
pushf
sahf
movsb
xchg
push
cmp
mov
mov
hlt
das
or
push
shll
inc
arpl
popa
jp
pop
mov
shrl
sbb
cmp
cmp
rorl
cmp
mov
in
jae
jle
mov
movsl
sbb
add
jbe
mov
xchg
ss
mov
xchg
inc
jae
mov
ret
iret
inc
lock
cmp
and
inc
push
xorl
mov
adc
mov
lock
sbb
mov
push
sbb
xchg
pop
aaa
jecxz
xchg
sbb
mov
fildl
stos
lahf
ja
shrl
add
push
xor
xlat
daa
xchg
popf
cmp
sarb
xor
add
mov
shr
gs
mov
push
jge
pop
mov
outsl
mov
lret
mov
add
lret
int3
aam
rorl
and
inc
popa
xor
ror
mov
rcrb
scas
push
lret
cmc
test
sub
mov
mov
xchg
xor
push
out
movl
cs
mov
repz
sbb
jp
mov
mov
addr16
push
and
in
lds
loop
push
daa
adc
add
daa
rcr
xor
dec
jle
test
imul
adc
inc
push
or
test
into
frstor
add
sub
lds
insb
dec
scas
repz
pop
dec
test
mov
fists
ss
ror
imul
lcall
jl
add
pop
fnstcw
test
js
mov
xor
lods
jae
sub
mov
cmpsb
rcl
pop
out
pop
lcall
lods
int
push
dec
movsb
add
test
fldl
shlb
and
xchg
mov
and
repz
mov
xchg
inc
scas
rolb
sub
pushf
shll
cs
mov
mov
testl
push
cmp
mov
push
sarb
js
push
test
sbb
xor
add
sbbl
lods
and
xchg
push
mov
inc
inc
cli
push
outsl
pop
dec
xlat
mov
jecxz
int3
ficompl
dec
sub
cmp
push
lahf
inc
mov
ja
jno,pn
adc
push
mov
jnp
jle
or
inc
dec
dec
in
cmp
negb
adc
ret
lods
and
iret
es
adc
mov
dec
cli
dec
xchg
adc
hlt
je
sbb
lea
dec
jo
and
cs
push
sbb
adc
inc
scas
rcrb
cmp
outsb
data16
pop
push
inc
xor
dec
lds
mov
push
jl
mov
mov
or
cmpsl
lds
or
xchg
stos
outsl
add
leave
cmpsl
call
xor
xor
sahf
pop
test
fisttps
push
pop
inc
add
dec
call
cwtl
pop
loopne
ret
mov
jle
pop
loopne
mov
push
into
mov
fsts
sbb
sub
adc
sbb
popa
or
aas
fsubr
fldenv
ljmp
jae
enter
out
jmp
movsl
jmp
data16
jb
jmp
mov
jbe
jns
inc
imul
adc
fldenv
cs
lds
pushf
and
sbb
jl
or
jmp
fidivs
xor
dec
mov
cmovnp
aam
arpl
es
cmp
clc
sub
and
push
mov
inc
repnz
push
jnp
mov
mov
lods
neg
cld
sbb
repnz
push
lahf
test
push
and
mov
ds
aaa
inc
sub
sahf
lods
jno
lcall
lret
mov
add
inc
pushl
or
ja
jne
es
mov
pop
pop
jle
call
push
and
shll
icebp
shrl
sbb
xchg
xchg
sbb
dec
adc
pop
ss
insb
enter
mov
jecxz
adc
add
cld
idivl
jecxz
sub
aaa
inc
mov
jns
nop
sbbl
dec
sbb
jnp
and
iret
cmpsb
mov
mov
ret
dec
add
mov
xchg
cmp
push
cwtl
movsl
cmp
repz
mov
in
cmpsb
pop
pop
pop
dec
gs
sti
jecxz
xchg
add
fwait
lock
ja
mov
or
pop
mov
sub
loope
or
sub
cmp
push
pop
inc
push
and
mov
orl
js
sbb
repz
sub
in
inc
mov
dec
jns
out
mov
sbb
clc
push
not
in
xlat
mov
xchg
subl
pusha
jp
mov
sbb
mov
addl
jne
push
xchg
push
and
push
repnz
mov
pop
das
pop
inc
adc
mov
stos
das
into
and
jg
cli
xchg
pop
push
rclb
and
decb
pusha
pop
aam
mov
scas
adc
lods
mov
adc
sub
mov
ret
push
pop
pop
fs
data16
repnz
addb
mov
push
pop
dec
or
adc
ss
ss
adc
sub
adc
adc
insl
xor
js
ss
jecxz
out
test
scas
outsl
popf
imul
jge
out
cmc
orb
xlat
xchg
call
xchg
es
inc
fnstsw
ss
lods
push
addr16
clc
xchg
and
sbb
jns
cmp
int3
js
mov
pop
cmpsb
shll
xor
xchg
sub
repnz
mov
pop
fsubrs
andl
and
mov
leave
imul
sti
test
inc
xchg
or
add
insl
cmovb
ljmp
sbb
xchg
loope
add
jge
cmp
mov
sarl
cmp
lods
sbb
sub
dec
in
outsb
cmpsb
cmpsb
xchg
rcrb
into
iret
sbb
imul
sub
mov
insl
icebp
je
mov
dec
aam
in
push
and
push
ret
loopne
scas
outsl
xchg
adcb
jg
neg
mov
xchg
jb
jmp
lock
sbb
shr
ret
aad
mov
sbb
xchg
in
roll
mov
mov
xchg
sbb
pop
lret
xor
push
sub
xor
and
jle
mov
loop
cmp
into
inc
jns
xor
mov
push
sbb
mov
into
mov
jo
cmpl
pushf
pushf
sub
lods
scas
push
cmc
cmp
rcll
repz
jo
or
nop
lahf
cmp
xchg
jbe
loope
lods
popa
dec
mov
pushf
and
repnz
or
divl
into
out
ds
call
cmp
dec
sub
lea
rolb
add
mov
mov
mov
scas
lock
mov
and
aaa
mov
add
in
and
sbb
xchg
sub
ja
lods
in
mov
pusha
push
scas
mov
cmc
and
sub
or
scas
mov
xor
mov
xchg
js
push
or
xchg
xor
out
adc
inc
sub
mov
in
outsb
jmp
cmp
jne
mov
push
icebp
push
jg
cmp
dec
outsb
outsl
and
mov
mov
jno
in
lds
test
or
dec
loopne
and
mov
repnz
fldl
cmpsb
cld
icebp
orb
pop
pusha
in
jmp
inc
lcall
lods
xlat
push
enter
or
sub
mov
dec
test
outsb
rclb
mov
std
mov
sbb
push
or
sti
sbb
ror
push
orb
mov
nop
pop
dec
push
xchg
pop
jp
dec
add
faddl
xchg
mov
xor
pop
ret
popf
jg
jne
jnp
data16
pop
gs
adc
hlt
mov
fisubl
test
jle
out
jmp
cmp
dec
xor
lods
aas
dec
popf
cld
mov
fmull
jp
loope
sahf
push
sbb
mov
std
adc
mov
mov
dec
ja
jg
std
adc
and
and
xor
std
xor
mov
cld
daa
je
fildll
fists
cmc
jg
inc
lods
xchg
mov
xchg
mov
ret
pop
movsb
lret
dec
mov
daa
imul
out
repz
cld
jl
les
cmc
lods
ds
repz
or
in
mov
shlb
int3
dec
inc
jp
push
sub
mov
lahf
movsb
add
in
es
enter
ret
xchg
ja
lcall
scas
inc
clc
cmc
divb
and
push
push
mov
or
push
xor
stc
test
scas
leave
insb
divb
pop
les
dec
out
test
out
sub
pushf
enter
adc
dec
inc
xlat
push
pop
sbb
mov
cltd
rolb
ret
loope
aas
jge
bound
push
cmpsl
jae
lcall
sub
ss
xchg
adc
pop
mov
cmp
mov
xchg
push
lods
lock
int3
pop
jns
dec
addr16
and
repnz
adc
cs
dec
aam
jae
call
ret
jle
nop
roll
add
ljmp
test
fstps
cltd
xor
sbb
mov
adc
mov
subl
sub
andl
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
andl
xor
sbbl
inc
ret
push
mov
sub
movzwl
sbb
movl
push
addl
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
call
jmp
mov
orl
push
xor
xor
or
mov
mov
xor
push
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
pushl
pushl
call
jmp
mov
subl
test
je
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
push
pushl
push
call
jmp
mov
subl
mov
adcl
xor
add
mov
mov
and
mov
adcl
mov
xorl
xor
add
decl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
movzwl
or
add
mov
mov
sbb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
pushl
call
jmp
add
mov
sbbl
sub
adcl
lea
incl
xor
xor
cmp
movl
je
mov
xor
add
movl
cmp
jne
xorl
pushl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
addl
jmp
sub
mov
pop
subl
push
xor
addl
xchg
push
leave
mov
outsl
js
ret
dec
subb
test
cs
jmp
mov
add
mov
out
pop
inc
push
or
xor
push
cmp
mov
mov
lahf
pop
ljmp
adc
dec
xchg
adc
imul
loopne
cltd
jle
push
jg
test
xor
lcall
test
xchg
loope
push
or
iret
stos
mov
shll
pop
test
lea
scas
popa
pop
push
ljmp
lea
ja
jno
ret
test
mov
out
outsl
sub
ds
sbb
mov
popf
cmc
mov
stos
mov
mov
outsl
jg
dec
sti
and
in
adc
out
leave
xor
inc
xchg
cmp
gs
xchg
in
add
pop
mov
arpl
or
adc
mov
aaa
faddp
dec
movsl
fldl
sub
mov
sti
shll
pop
push
xchg
xchg
lret
imul
and
dec
cmp
mov
xor
or
sub
cs
pop
pop
xor
pop
or
ss
mov
inc
jb
cli
int
push
cld
jmp
push
je
cs
cmp
lret
cmp
mov
outsb
scas
std
sub
mov
cmp
ror
fmull
arpl
pop
es
dec
mov
sbb
pusha
cld
adc
sbb
movsl
adc
adc
add
ds
xor
xor
aam
sbb
arpl
cmc
adc
orl
mov
mov
into
cld
in
jg
repnz
test
xchg
andl
loop
mov
mov
arpl
jns
mov
xor
xor
inc
or
mov
scas
mov
inc
dec
test
test
mov
adc
push
ret
push
pop
add
or
mov
test
outsl
mov
scas
or
lret
outsl
stc
inc
nop
into
out
pop
cmp
inc
inc
popa
fdivrl
imul
stos
inc
pop
out
leave
and
mov
push
xchg
add
incb
mov
repnz
in
cmp
hlt
fwait
push
xchg
lds
scas
pop
repz
or
mov
ss
or
sahf
cmpsl
pop
cmpsl
xchg
fistl
icebp
jle
xchg
push
idiv
es
rolb
sbb
subb
jnp
add
jp
cli
or
or
popa
jo
dec
shll
outsl
mov
and
dec
xor
fcoms
lock
mov
push
xchg
sub
arpl
movsl
lds
mov
ljmp
popa
pop
in
cmp
fs
mov
cs
inc
xchg
daa
xor
and
xor
ds
xchg
scas
mov
loop
dec
adc
lcall
add
outsl
xlat
mov
xchg
repnz
push
inc
pmaddwd
jbe
adc
outsb
push
jl
nop
rcr
in
jle
scas
xchg
movsb
push
and
filds
or
hlt
inc
and
mov
mov
lahf
or
cltd
sbb
loope
hlt
ss
jg
cwtl
ss
fs
inc
repz
xchg
add
pop
lea
push
cmp
cwtl
mov
adc
or
xor
clts
dec
loope
ds
pop
dec
mov
leave
subl
imul
cli
fadd
inc
orl
cmpsb
add
lods
repnz
adcb
lods
fucomi
xchg
sub
mov
pop
sub
xchg
dec
imul
testl
mov
fnstenv
popa
push
sbb
shrb
cltd
mov
mov
icebp
sarb
in
lock
xchg
pusha
mov
repnz
adc
sti
ds
mov
and
and
ja
stc
out
push
mov
push
xor
adc
jle
fmul
pushf
mov
mov
or
fdivp
in
cmc
fbld
cmp
lods
xchg
xchg
push
jo
pop
mov
icebp
and
mov
jnp
jmp
data16
outsb
mov
icebp
lret
loop
sbb
mov
daa
popf
rol
jge
and
xchg
scas
jne
pop
mov
mov
adcb
int3
sahf
sbb
mov
adcl
mov
push
js
lea
cli
push
adc
loope
lcall
sub
movsl
or
sub
adc
es
and
jnp
sub
mov
add
push
insl
cmpb
jmp
xlat
mov
fdivrl
and
cvtdq2ps
in
inc
lds
cmp
into
leave
mov
cmp
fld
stc
pop
cmp
jb
jno
inc
cld
outsb
mov
outsl
jo
sbb
and
lret
rcrl
repz
sarl
ffree
dec
ficoml
push
cmp
inc
int
adc
mov
push
jmp
into
xchg
mov
js
leave
sub
stos
jne
dec
push
test
xor
sahf
push
sahf
push
mov
lcall
push
mov
sub
pop
xchg
ljmp
xor
mov
dec
jae
std
sarb
mov
inc
mov
cmp
insb
je
mov
sub
xchg
xlat
cmp
in
lods
sub
ss
jne
rorl
cmpb
sub
and
jne
leave
rorb
xchg
sti
fmul
or
cmc
cmpsb
fstpl
adc
test
push
in
cs
inc
leave
movsb
inc
ljmp
xchg
jae
test
mov
decl
cmp
push
ss
pop
cmp
out
testl
inc
pop
mov
clc
movsb
mov
xchg
mov
inc
rcl
and
ror
jp
inc
push
dec
push
sahf
daa
sub
rolb
leave
cli
jbe
cwtl
sub
lods
aas
jo
loop
fidivs
out
add
decb
std
jbe
xor
inc
adc
jmp
arpl
scas
inc
mov
mov
lock
out
lret
dec
cmp
mov
imull
dec
mov
fstpt
inc
insl
add
inc
adc
adc
loopne
test
jnp
xchg
dec
loopne
push
icebp
pop
stc
lock
lret
mov
sbb
jnp
xchg
cmp
xchg
sbbl
lahf
push
mov
push
push
imul
mov
inc
mov
iret
cmpb
test
insb
arpl
loope
dec
int
lcall
stos
lret
jne,pt
and
adc
xchg
test
cs
xchg
pop
stos
out
mov
sbb
cli
std
aad
loopne
cmp
dec
shlb
adc
pop
xor
sbb
mov
push
jne
in
cmp
sbb
mov
adc
sub
mov
xchg
mov
data16
arpl
and
ljmp
adc
sti
add
mov
fcomip
loope
ret
mov
or
popl
xchg
sbb
lods
jecxz
sti
sbb
push
ds
enter
jmp
inc
dec
jbe
xchg
int3
mov
and
aaa
cmp
fnstsw
fsubrl
dec
push
jmp
fnstsw
movsb
cli
test
jns
xchg
adc
sbb
adc
push
addr16
push
xchg
testb
cmpsb
cmp
or
adc
outsb
add
repz
cmpsb
cmp
in
sbb
lcall
in
xchg
xchg
pusha
sbbl
jne
xchg
or
mov
sub
cltd
mov
daa
aaa
push
andb
mov
lods
lock
or
or
movsl
xchg
push
cmp
mov
stc
int3
push
mov
cmpsb
xchg
int3
rcrb
daa
mov
mov
mov
ret
fsubl
mov
mov
fwait
pusha
push
sahf
push
pusha
pop
out
hlt
jecxz
xlat
or
je
sbb
sarl
cltd
mov
in
pcmpeqw
fnsave
or
outsl
xchg
and
mov
popa
add
dec
icebp
rol
push
adc
adc
pop
jmp
lret
mov
push
pop
cmp
lea
stc
cwtl
lret
imul
lahf
pop
mov
daa
xlat
xchg
cmp
cmc
test
cmp
ror
dec
pop
mov
pop
sub
or
inc
and
push
xor
ds
xchg
pop
pop
inc
imul
sahf
xor
sbb
jne
clc
mov
xchg
out
add
ffree
or
cltd
xor
sbb
sbb
inc
das
and
push
and
in
shlb
jnp
ja
ds
mov
mov
cmp
jb
mov
push
xor
jne
jmp
push
mov
frstor
bound
test
inc
ja
shl
icebp
add
pop
push
xlat
pushf
cmc
jns
nop
arpl
cmpsb
lahf
jg
mov
jns
addl
or
mov
sbb
inc
cltd
mov
push
cs
mov
out
mov
xchg
add
rcrb
push
icebp
xchg
mov
int3
scas
je
mov
jae
movsl
inc
je
int3
inc
les
inc
inc
jl
dec
scas
jg
ret
pop
into
xor
or
or
mov
mov
andb
ds
bound
cmp
les
sbb
imul
into
es
lahf
pusha
stos
push
push
push
movsb
push
xor
push
cs
ret
aam
pop
inc
or
sub
mov
daa
push
fstl
clc
lcall
push
shrb
pop
shll
jmp
add
jge
push
add
aaa
pop
xor
sbb
xor
mov
inc
push
ficoml
inc
mov
and
shl
andb
sbb
stos
push
sbb
inc
div
repz
push
pop
ljmp
or
mov
add
or
arpl
mov
mov
out
or
aad
xor
cld
fisttpll
xor
xor
and
pushf
mov
out
xchg
call
sbb
xor
outsl
jmp
fiaddl
pop
mov
xchg
in
sbbb
test
dec
lock
pop
das
out
movsb
clc
pop
jae
xor
lret
test
cmpsb
mov
add
cmc
insl
mov
mov
mov
stc
sahf
xchg
int
loopne
mov
pop
xchg
ja
int3
inc
pusha
cmp
xchg
fsubrl
pop
addr16
subl
cmpl
imul
mov
insl
xor
sbb
push
stos
sbb
out
out
loopne
outsl
fsubs
xchg
cmc
cltd
popa
push
dec
popf
xchg
aam
sti
jge
inc
lret
sbb
js
push
test
mov
jo
stos
cmpl
fisubs
jb
sbb
mov
arpl
push
in
push
push
mov
rcr
xor
mov
sarb
cltd
jmp
mov
push
pushf
out
or
loope
xchg
test
divl
in
mov
les
gs
dec
xchg
mov
imul
hlt
sub
mov
ds
movsl
jns
in
fistps
nop
adc
pushf
xchg
shlb
mov
jle
add
fst
into
and
sar
imul
dec
sbb
jmp
push
xchg
cld
add
sbb
xchg
sub
mov
push
outsl
out
out
pop
push
sti
jl
sbb
ja
repnz
mov
cs
mov
mov
imul
cmp
dec
xchg
inc
mov
dec
sub
inc
pop
cmpsl
mov
and
fsubrs
mov
loopne
cmp
cmp
or
pop
in
jle
dec
pop
fwait
pushf
stos
in
popa
and
jno
mov
jl
mov
sub
loope
sbb
test
or
sbb
xor
lcall
loop
movsb
or
test
jnp
cmp
and
insl
add
lret
insl
in
pop
pop
inc
or
out
cld
or
add
mov
mov
or
mov
lods
iret
pop
fldt
push
in
rclb
popl
dec
ret
cld
stos
inc
sbb
or
subb
shrb
push
fstpt
aas
inc
mov
sbb
mov
or
or
shlb
xchg
adc
arpl
lret
fnstenv
add
test
jle
push
les
ljmp
xchg
cwtl
jnp
fwait
cmp
or
ds
not
lds
mov
outsb
mov
cltd
sub
pop
adc
and
fs
dec
outsl
dec
push
mov
push
rol
mov
fdivrl
cltd
lods
pop
push
lea
scas
fidivs
pop
sbb
cmp
jp
push
xchg
xchg
adc
add
dec
jnp
movsl
mov
push
sti
repz
int
mov
xchg
sar
in
jg
lcall
xor
mov
loop
ds
dec
jl
lret
test
arpl
fistpll
mov
int
lds
mov
loope
insb
cmp
mov
sub
push
repz
sbb
es
mov
cmpsl
xor
jle
loop
push
fstpt
insl
sub
scas
lret
pop
cmc
pop
pop
pop
xchg
iret
push
dec
subl
test
and
sarl
fwait
or
push
test
pop
dec
add
pop
cld
mov
cmp
dec
fsubr
push
mov
arpl
mov
movb
xor
stos
pop
jo
sub
out
dec
fildll
xor
lahf
iret
cmp
push
mov
or
inc
mov
sarl
ss
jb
aaa
cli
mov
jp
sbb
mov
sub
jge
imul
jg
pop
mov
sbb
fisttps
xchg
imul
lods
das
sub
sub
and
imul
test
push
lahf
sub
or
jno
mov
stos
imul
adc
mov
lods
sbb
addb
test
push
cmp
mov
jle
push
repz
and
sbb
loop
pop
scas
cmp
enter
icebp
mov
iret
fcom
lods
mov
lods
lahf
jns
cli
cli
lock
mov
popa
out
and
cmp
pop
out
mov
stos
or
faddl
jecxz
adc
imul
xchg
mov
lret
dec
repnz
dec
and
cmp
fst
xor
push
inc
jmp
cmp
addl
es
pop
scas
outsb
mov
dec
cmp
stos
enter
ret
insl
jge
jp
shll
test
movsl
xor
fwait
cmp
jmp
sbb
rdtsc
add
mov
sub
stos
and
dec
dec
xchg
icebp
sbb
rcll
bnd
xor
or
movsl
sbb
cmp
iret
movsb
push
jbe
mov
cmp
pop
or
mov
hlt
dec
inc
shr
xor
jecxz
cli
push
inc
sbb
fcomps
xchg
jecxz
addr16
aaa
fimuls
jg
dec
jne
test
addr16
cmp
stos
bswap
mov
push
das
int3
mov
or
outsl
jae
daa
and
loop
mov
das
xchg
mov
mov
subl
jmp
aam
sarl
adc
mov
xchg
and
addl
loopne
clc
movsl
jns
inc
repnz
pop
and
into
xor
cmp
pop
or
mov
mov
dec
divl
pusha
mov
fistps
mov
xchg
xchg
cmc
hlt
jae
scas
jmp
data16
sub
push
sbb
push
cli
mov
xorl
mov
cmp
sbb
inc
ret
movsb
ss
jnp
movsb
or
sbb
js
push
shr
jo
inc
push
in
pop
mov
inc
popf
std
adc
aad
push
adc
fidivl
mov
add
mov
cwtl
mov
mov
adc
dec
mov
mov
sbb
push
xor
dec
mov
in
jno
lret
jns
inc
mov
mull
dec
pop
add
mov
mov
lods
sbb
dec
repnz
sbb
dec
cmpsb
call
push
ds
lods
adc
lahf
adc
aas
xchg
xchg
sub
push
dec
dec
cmpsl
adc
aas
cltd
adc
int3
arpl
mov
inc
xchg
cmp
or
inc
mov
jmp
test
mov
pusha
je
clc
lret
aam
fs
test
out
cmp
aad
mov
mov
leave
cmp
addr16
aam
xchg
mov
push
xor
cmpsb
ret
and
dec
subb
and
cmp
iret
pusha
fildl
dec
push
mov
cmc
ds
push
aaa
fwait
pushf
pop
fcmove
scas
test
orb
push
jo
xor
adc
mov
jne
push
inc
lret
lret
in
aam
outsb
lcall
test
mov
iret
and
pop
mov
xor
enter
adc
mov
pop
notb
xchg
xchg
into
pop
push
jno
lods
xor
cmp
mov
mov
adc
leave
pop
das
jge
aad
or
stos
sub
jo
aaa
aas
cmc
out
jmp
popf
lret
addb
mov
jae
inc
sbb
sub
std
out
add
mov
lds
mov
lahf
lret
iret
inc
mov
fdivrs
adc
mov
loopne
lret
inc
shl
and
test
or
xor
inc
sbb
add
add
pop
repz
in
mov
mov
daa
fnstsw
adc
or
or
pusha
mov
fstpl
int
out
sti
xorb
xchg
cli
repz
leavew
mov
jbe
pusha
jle
inc
mov
xchg
and
jno
pop
sub
lock
scas
in
xor
out
adc
cmc
sbb
push
ret
pop
lcall
jne
test
test
mov
add
pop
dec
std
movsb
pop
out
mov
pop
cld
sub
sbb
xchg
in
outsl
inc
out
mov
or
das
inc
imul
adc
push
or
lret
ret
cwtl
sbb
jo
xchg
dec
mov
adc
data16
lds
bound
fisttps
jno
es
lahf
lds
cmovns
push
outsl
mov
push
push
cwtl
pusha
div
and
jb
divl
inc
lret
mov
rol
out
cwtl
loope
jne
lahf
es
push
xor
cwtl
int
shrl
push
imul
or
stc
pushf
les
rorl
les
or
fcmovbe
jno
or
rorl
pop
mov
inc
dec
out
adc
stc
int
ficomps
sub
stos
bound
fstps
sbb
adc
sbb
or
test
fsubr
xchg
pusha
test
pop
dec
and
mov
jbe
in
mov
inc
mov
mov
push
ret
add
push
inc
in
movsl
and
sbb
ret
cli
negl
iret
xchg
inc
adcl
icebp
cltd
movsl
jnp
dec
enter
sub
movsl
icebp
das
push
mov
nop
lcall
inc
into
push
mov
add
leave
test
mov
cmpsb
cmpsb
inc
push
fcomps
cld
sub
xor
pop
unpcklps
ret
imul
fisubrs
xor
dec
xchg
dec
jae
idiv
stos
sub
bound
and
jbe
clc
sbb
sarb
in
sub
subl
stos
dec
in
inc
loop
inc
adc
pop
dec
adc
sub
lea
or
pop
fildl
into
iret
inc
lret
cld
add
leave
mov
pushf
aas
mov
rcrb
test
sub
lcall
push
xchg
dec
push
or
es
lret
adc
std
andb
cmp
lds
cmp
inc
and
sbb
lret
pop
imul
push
popf
sbb
inc
ja
add
popa
xor
int3
repnz
jo
mov
sarl
add
xchg
outsb
xor
jecxz
out
outsb
stc
lret
push
push
sub
dec
cmp
cltd
insb
push
pop
aad
aaa
and
xor
fldl
inc
aaa
mov
ret
jp
in
add
inc
mov
inc
lahf
out
cld
aam
push
aad
insl
dec
add
jo
mov
sbb
mov
roll
adc
lods
mov
jae
add
push
mov
push
inc
and
dec
and
scas
stos
imul
cmpsb
push
push
lods
push
mov
pusha
outsl
in
jg
int3
sarb
jecxz
dec
adc
inc
das
fdivs
mov
ds
adc
and
mov
sbb
clc
test
out
ret
in
clc
repnz
cli
test
or
push
clc
jnp
addb
cmp
xor
mov
push
lea
push
dec
sbb
into
insb
sbb
pop
lods
das
scas
jle
mov
lahf
fistl
ret
notl
dec
adc
jmp
cmc
rcll
mov
jp
sbb
andl
addb
out
pxor
fstl
xchg
clc
inc
shll
sub
ljmp
popf
inc
and
pusha
add
and
xor
fcomps
xchg
fists
popf
cmp
addr16
push
push
repz
lea
jo
and
xor
dec
test
xchg
add
vmovapd
xchg
jg
les
outsl
stc
insl
stos
jns
dec
in
adc
mov
pop
jg
add
adc
in
mov
and
adc
push
mov
loopne
ret
fs
or
pop
adc
mov
xchg
jb
in
mov
cmp
lock
xor
push
mov
add
mov
cmp
in
push
jbe
sti
jno
js
jns
js
and
xchg
out
add
imulb
adc
mov
xchg
jmp
aad
popa
xlat
lret
lods
push
mov
xor
popa
fldenv
cmpsb
lea
sar
int3
aam
push
addr16
aaa
lret
cwtl
inc
hlt
adc
popa
ds
setb
fiadds
jl,pn
insb
mov
dec
repz
out
pop
jno
mov
lock
decl
inc
mov
subb
push
or
fstl
jbe
outsb
sub
mov
outsb
fmull
std
hlt
shlb
mov
cmp
movsl
lret
adc
cmpb
outsb
adc
adc
insb
imul
sub
adc
and
lods
or
psubw
push
or
popa
addr16
adc
add
fsubs
mov
adc
pop
xchg
stc
lods
inc
add
dec
mov
dec
into
ss
cmp
mov
sahf
inc
dec
mov
stos
dec
adc
xchg
inc
stc
xchg
mov
adc
sub
and
pushf
mov
divb
adc
lods
xor
sahf
es
mov
sahf
pushf
sbb
inc
sub
loopne
in
cmpsl
stos
leave
aas
out
pushf
fwait
je
mov
sbb
lea
pop
adc
inc
lea
and
jg
xchg
sbb
adc
loope
add
mov
dec
sbb
push
fnsave
mov
aaa
rcll
lock
cmpsl
xor
adc
fnstenv
mov
jns
xchg
lock
push
mov
adc
shlb
pop
adc
popa
and
cmp
mov
std
out
ljmp
pop
outsl
stos
add
mov
cld
push
sub
repnz
lea
xchg
in
and
fbstp
pop
sbb
cwtl
mov
xorl
add
cmp
or
icebp
push
add
je
loop
inc
stos
push
inc
cmp
xchg
in
jne
in
notb
mov
xchg
int3
insb
leave
pop
xor
or
xchg
cmp
push
inc
mov
mov
in
mov
cltd
nop
push
pop
xor
in
fs
je
mov
int
bound
or
adc
push
inc
lret
xchg
int
test
push
adc
cmp
mov
add
and
mov
pop
roll
clc
cmp
sbb
mov
dec
das
ja
sub
push
or
test
incb
jle
lret
cmp
mov
pop
pop
nopl
or
inc
ret
aam
and
lea
mov
inc
sbb
sbb
dec
pop
jle
xchg
rol
push
mov
pop
mov
aaa
mov
mov
call
mov
push
test
inc
hlt
popf
cmpsl
scas
rorl
jle
dec
shll
push
add
imul
mov
xchg
enter
cwtl
xlat
popf
icebp
cmpsl
push
arpl
cmc
rcll
shrb
loopne
push
fistps
pop
jp
fildll
mov
js
sbb
inc
pop
test
scas
jecxz
pop
and
insl
dec
jmp
popa
mov
ss
lods
enter
adc
out
loop
imul
into
xchg
mov
sbb
cmpsl
fdivrl
push
mov
mov
fwait
or
sub
ret
cmp
sub
insb
jle
xor
push
pusha
ficoml
mov
jl
mov
jle
repnz
decl
push
out
lods
loope
dec
jge
pop
mov
cli
pop
test
mov
call
lsl
mov
cld
pop
sbb
int
mov
xchg
cmp
push
cmpsb
scas
icebp
jno
xlat
stos
rclb
scas
sbb
scas
push
sti
mov
dec
cmp
inc
rorb
jno
insb
cmp
xchg
lods
push
outsl
sar
push
into
out
push
faddl
aas
pop
xor
cmp
std
inc
fsubr
mov
mov
cmp
outsb
addb
sahf
dec
idiv
jp
cmp
test
shlb
aaa
shll
and
hlt
ljmp
push
push
lcall
repnz
xchg
lret
bound
outsb
stos
loope
int3
scas
and
cmc
stos
cmp
add
xchg
in
push
aad
jp
mov
test
pop
xor
push
ret
and
mov
rorl
loop
fildl
xor
xchg
arpl
push
hlt
mov
aaa
sub
rorb
lret
push
shlb
push
push
sbb
loope
repz
decl
insl
pop
mov
bound
jnp
adc
adc
xchg
xor
inc
in
enter
push
jno
mov
fcomi
ljmp
add
pop
adc
pop
lock
cmp
xor
aad
addb
test
insb
sub
xchg
jno
repz
dec
mov
ret
dec
inc
lock
xchg
sbb
and
pop
push
xchg
or
stos
jnp
das
mov
mov
push
lcall
xchg
jp
incl
cmp
scas
jbe
in
and
mov
or
test
cmp
pop
addr16
stos
addr16
and
sub
daa
fcompl
out
aaa
pop
fstps
jnp
mov
fnstcw
push
mov
jb
adc
cwtl
and
sbb
cmp
out
dec
sub
mov
push
dec
fstpl
stos
and
sub
lcall
pop
inc
outsb
mov
insb
sbb
neg
add
cwtl
movntq
add
xchg
cmpsl
pop
jo
out
nopl
gs
push
lea
lret
fs
jp
and
cmp
xlat
gs
mov
lods
pshufw
cld
xchg
ja
cld
cmp
and
mov
fimuls
or
stc
mov
xchg
push
icebp
fidivs
or
sbb
jne
stos
push
outsl
pop
sbb
call
je
fists
sub
shrl
scas
inc
mov
cli
lret
fstpt
pop
xor
loope
inc
pusha
cmc
sbbb
push
arpl
stos
and
fcomp
pop
cmp
cmp
hlt
mov
imul
out
rclb
pop
in
stos
popf
ja
jmp
popa
pop
sub
imul
ja
or
addl
jl
xchg
rcll
and
adc
dec
mov
push
cli
jl
int3
push
add
pop
sti
mov
push
dec
push
in
shrl
mov
ret
jns
xchg
loopne
xchg
loopne
mov
movsb
or
daa
fisttpll
fdivs
dec
insb
aas
mov
ficomps
sbb
fwait
movsl
jmp
add
test
or
or
sbb
xor
mov
ja
stos
xor
mov
and
test
jmp
mov
or
jbe
pop
lcall
dec
cltd
in
xor
sub
pop
stos
insl
pop
and
sti
cmpsl
dec
inc
pop
shll
mov
clc
out
xor
into
sub
sarl
inc
jns
lret
xchg
mov
cmp
lods
mov
andb
fstps
stos
ret
dec
mov
hlt
jg
xchg
out
adc
mov
test
mov
xchg
push
cs
jg
mov
xlat
pop
jmp
sbb
dec
mov
push
fnstenv
inc
inc
jo
mov
repz
add
aas
sub
pop
jecxz
aaa
bound
push
aad
test
das
inc
sub
mov
roll
mov
lret
pop
es
dec
inc
ret
ret
test
cmp
leave
inc
in
xchg
xor
in
lcall
out
sti
push
jmp
mov
inc
xor
push
icebp
jp
fwait
mov
insl
dec
cmc
sbb
sbb
mov
fucomp
jae
adcb
mov
icebp
ret
mov
xchg
repz
into
out
fs
idivb
mov
jmp
inc
pop
mov
outsl
pop
xchg
lcall
mov
test
in
in
popf
out
cmpsb
popf
ret
es
out
std
fcmovnu
mov
divb
aam
push
jb
mov
jae
push
dec
lret
imul
sbb
push
xchg
jno
add
addb
sti
xor
mov
pop
imul
ds
sarl
test
push
mov
xlat
loope
repnz
fcomps
mov
addr16
in
je
xor
push
insb
jp
in
add
mov
movsl
pushf
push
int
fdiv
jbe
pop
cld
or
rorl
mov
fdivl
sbb
scas
push
pusha
xchg
shll
mov
cmp
scas
sub
testl
cmovne
pop
or
and
flds
xchg
pop
mov
add
or
aaa
inc
add
mov
jno
aam
mov
lret
into
push
push
bnd
cltd
fs
jmp
add
cmp
bound
add
aaa
je
ror
popa
orl
push
jbe
jl
add
xchg
out
mov
loop
andb
fs
rclb
jae
dec
jle
adc
mov
pop
xchg
idivb
sbb
es
sub
mov
xor
cwtl
clc
les
dec
imul
bound
lcall
arpl
fdivs
lods
sbb
scas
lods
inc
out
fs
jbe
out
jmp
dec
xor
dec
ret
clc
and
icebp
fiadds
dec
out
aaa
test
gs
adc
idivb
into
push
xorl
jnp
jle
dec
xchg
lock
sub
adc
in
int
push
sub
movsl
adc
cmp
and
pop
xor
jnp
movb
out
inc
add
mov
add
sbb
add
enter
insb
add
xorl
pushl
pushl
call
sub
jmp
scas
cltd
and
add
cwtl
int
lea
ror
addl
lods
jo
repz
mov
outsl
pop
imul
je
cmp
mov
xchg
je
fwait
jge
xchg
push
push
les
jle
inc
push
sti
add
adc
in
ja
ds
cmpsl
cmpsl
xlat
pushf
xchg
lcall
mov
or
lcall
lds
enter
imul
cmpsl
push
add
cmpsb
xor
ss
enter
sbb
push
or
or
in
inc
out
sub
in
jb
loop
pop
aad
inc
stc
push
push
jle
sbb
sub
fstpt
popf
sbb
and
sub
dec
jo
jecxz
or
add
sub
inc
pop
aad
add
mov
andb
mov
lcall
movsl
jnp
cli
imul
jg
sbb
arpl
imul
out
push
lret
push
testl
cmpsb
je
pop
jle
ret
ss
mov
fimull
or
and
jl
outsl
imul
mov
into
icebp
mov
leave
test
push
lock
inc
sub
or
mov
pop
mov
mov
push
mov
jmp
dec
mov
imul
mov
jle
sub
or
xor
idiv
dec
test
mov
inc
jge
mov
push
mov
add
fwait
insb
mov
ljmp
and
loopne
jecxz
lods
sub
test
push
fistpl
pop
fiadds
out
adc
sub
test
mov
push
fbstp
inc
scas
lret
in
cmp
out
scas
sbb
imul
mov
mov
mov
cmp
jns
stos
fisubs
in
out
mov
adc
in
leave
push
dec
call
add
test
or
addb
call
xchg
xchg
adc
sub
cmp
cmpsl
movsbl
lock
loope
jns
lds
ljmp
loop
cmpsb
out
icebp
rorl
mov
nop
int
jl
adc
push
lahf
or
jns
pop
mov
or
fmull
rolb
outsl
pop
jnp
cmp
inc
add
push
jp
inc
dec
and
cmp
imul
lods
add
xor
stc
fcomps
lahf
mov
enter
jl
fstpt
imul
xlat
adc
in
fcompl
leave
xor
fldl
push
insl
mov
clc
decl
dec
nop
ss
xor
bound
mov
pop
insl
pavgw
jp
pop
leave
xor
test
or
nop
aas
xchg
test
or
xchg
daa
inc
in
mov
aam
flds
pop
add
xchg
cmpb
cmp
rcrb
dec
pop
int3
sub
loope
and
pop
mov
addr16
cwtl
dec
cli
in
clc
inc
push
pop
data16
push
mov
lods
mov
pop
inc
lahf
inc
add
setns
and
push
es
cmpsl
int3
call
xor
subl
sti
aas
push
pop
scas
testb
add
jo
fs
xor
icebp
mov
add
adc
ljmp
test
and
cs
ljmp
ficomps
push
mov
shr
int
lcall
xchg
lret
subb
mov
add
enter
gs
mov
cmpsb
add
adc
cltd
rcrb
mov
rorl
adc
sarb
jb
divl
adc
sub
lea
andb
imulb
sbb
jbe
test
pop
outsb
adc
sbb
xchg
out
or
and
mov
jne
pop
sub
xchg
jnp
inc
xchg
push
sub
rcll
jl
aaa
pop
inc
in
add
in
out
pop
popa
fdivrl
push
lahf
cmc
imul
es
inc
aas
push
add
std
sub
lret
push
mov
jb
aad
sub
or
adc
mov
adc
out
jo
inc
jae
or
push
shrl
push
loope
xor
lret
int
cs
outsb
xor
push
or
xchg
aad
and
jl
push
jo
and
jne
movsl
mov
dec
xrelease
rclb
subb
cs
test
sar
cmp
sbb
in
gs
rcr
lock
adc
shll
fsubrs
int
loop
mov
loopne
shll
adc
dec
mov
xor
push
and
xlat
jno
push
mov
ret
push
cmp
and
popf
daa
mov
xchg
sub
xchg
inc
loopne
inc
jo
mov
fwait
movsl
movsl
cmp
pop
cmp
or
lret
stos
xlat
jbe
push
cld
scas
pop
jg
mov
add
mov
push
cmc
sahf
xchg
pop
stc
push
mov
cmp
call
jle
and
and
fstps
add
test
loope
pop
mov
rclb
xlat
icebp
mov
push
xchg
cmpsb
pop
ss
or
test
xor
mov
pusha
sub
adc
stc
cmp
mov
jno
js
push
xchg
lahf
push
mov
jb
test
cmc
fcmove
inc
dec
push
aaa
cwtl
data16
xor
fstpt
push
add
pop
fbld
daa
lcall
cmpsl
movsl
inc
xlat
sahf
lahf
push
jmp
xchg
inc
jle
jmp
daa
loop
jno
enter
iret
dec
mov
fldenv
ret
out
test
arpl
fsubs
xchg
es
xchg
insb
fs
push
sub
popf
ljmp
mov
sarl
stos
xchg
jl
mov
cmp
outsl
push
xchg
jg
orb
call
cmp
push
ret
lods
sbb
xchg
push
popa
call
lahf
rcr
inc
cli
inc
jle
mov
sbb
pop
jecxz
fcomp
adc
mov
xor
mov
or
loope
loope
out
and
or
and
push
imul
shlb
or
cmp
dec
mov
sti
pop
push
jmp
xor
mov
stc
mov
or
into
aam
movsl
mov
jns
loope
push
call
mov
loop
dec
xor
sti
cltd
shr
ret
fistpll
xor
movsl
scas
and
cmpsb
subl
xchg
jp
add
lret
mov
mov
adc
arpl
xor
aam
cmp
addr16
iret
sbb
pop
push
std
fadds
xchg
enter
pop
jge
imul
add
and
out
test
adc
jecxz
xor
scas
push
push
icebp
add
fcoml
sub
jb
fsubl
push
mov
dec
add
incl
hlt
xor
mov
or
pop
xor
push
outsl
movsb
jl
call
in
pusha
or
xchg
daa
ret
mov
push
mov
inc
lds
mov
mov
shlb
adc
in
jp
push
sub
sub
dec
adc
push
ja
cwtl
mov
std
and
inc
sub
jae
mov
mov
pop
aas
dec
add
insb
stos
dec
pop
gs
and
xchg
xchg
dec
xchg
xchg
ljmp
lea
std
imulb
cmpsl
dec
fsubs
lods
push
xchg
jnp
lahf
and
mov
and
cmp
scas
mov
pop
pop
and
cmpsb
das
es
sahf
mov
pop
push
fs
stos
push
pop
scas
aad
mov
push
je
insb
dec
popf
pop
push
pop
adcb
pop
dec
out
cmpxchg
data16
sbb
pop
or
push
or
inc
mov
jmp
movsb
movsl
push
xchg
mov
hlt
ss
adc
insb
andb
lods
mov
popf
int
mov
es
push
xchg
sarl
jae
fcmovu
div
int3
ficomps
loopnew
dec
dec
adc
sbb
and
nop
out
mov
add
sub
mov
orl
push
jo
xchg
pop
popa
clc
or
xchg
push
dec
je
aaa
mov
rcll
mov
mov
pop
loop
xor
dec
popa
sbb
adc
arpl
movb
ds
adcb
arpl
cs
lcall
push
inc
es
push
in
mov
xchg
pop
ljmp
jae
xchg
xchg
lods
iret
mov
sub
jecxz
das
mov
push
call
add
loop
dec
loopne
sbb
and
aas
pop
lods
push
data16
je
pop
jno
or
mov
ss
mov
clc
lgs
cmp
jmp
mov
mov
hlt
test
or
pop
mov
or
mov
in
fmull
imul
mov
pop
push
pop
inc
and
xchg
pop
fsubrp
add
xchg
testl
xor
mov
stos
subl
xor
das
jecxz
push
xor
jbe
or
jno
es
dec
push
inc
int3
sub
dec
push
xor
and
or
sub
jne
adcl
dec
addr16
and
outsl
pusha
jb
popa
or
movsb
jp
scas
loope
popa
insb
xchg
imul
call
add
push
mov
add
mov
mov
jmp
ds
fcmovnu
sahf
adc
aad
mov
int3
imul
and
jle
adc
fistps
outsl
jae
mov
jne
inc
movsl
or
jl
jae
fwait
subb
sbb
xchg
pushf
mov
mov
imul
repz
fisttpll
cmp
fcomp
das
fadd
aas
imul
lcall
fidivrl
sbb
jbe
stos
push
mov
mov
je
sahf
jb
and
pop
adc
cmp
dec
pop
cmpsl
pop
stos
cltd
sub
jg
roll
ret
cmpsb
add
push
lret
and
je
inc
shrl
add
ficoml
addb
sbb
sbb
fistl
pop
adc
inc
push
inc
outsl
jp
inc
mov
lahf
filds
adc
imul
icebp
cs
stc
or
xlat
push
movb
divl
and
sarl
mov
jb
or
imul
push
jl
mov
jo
and
jb
in
rep
outsl
pop
mov
popa
cmc
fwait
pop
je
jmp
mov
pop
sbb
mov
sbb
inc
mov
mov
fdivrl
test
or
cmp
jl
addl
fmul
into
mov
push
das
mov
mov
ror
adc
push
ljmp
dec
loope
jo
insl
orl
sarl
push
ljmp
pop
div
bound
daa
or
lret
out
sub
push
inc
data16
sbb
mov
icebp
dec
mov
cli
mov
call
pop
roll
adc
hlt
mov
sbb
sub
test
incb
inc
inc
xchg
out
fld
fsts
sub
cmp
xchg
sti
fiaddl
enter
dec
out
gs
rep
in
inc
and
inc
jo
xor
inc
pop
or
cmp
dec
cmp
push
stc
mov
mov
lods
ret
in
cwtl
inc
clc
xchg
xorb
lock
xchg
in
addr16
sub
mov
push
fwait
or
loopne
push
lods
xor
mov
popa
pop
hlt
test
loope
xor
out
shll
pop
popf
mov
jp
arpl
in
outsb
test
shl
sbb
inc
and
mov
ja
fldl
xrelease
lock
stc
neg
mov
pop
sar
or
xor
into
jp
rep
and
pop
movsb
xchg
xor
popa
ffree
stos
xchg
xor
arpl
and
mov
negb
cmp
sbb
stc
aas
push
clc
bound
xor
fnsave
stc
xchg
outsb
int3
pop
cwtl
sub
pop
jae
push
outsb
pop
sbb
dec
mov
inc
call
dec
subl
pop
and
inc
jecxz
ja
lock
imul
call
jge
cmc
jo
and
jnp
shlb
cmpsb
jo
pop
fidivrl
idivl
cli
xchg
mov
sti
push
sub
mov
loope
dec
lock
out
mov
cli
fisubs
incl
jp
xadd
or
aam
inc
stc
xchg
jno
lods
out
adc
jbe
test
jle
jbe
bound
xchg
add
push
cmpsl
adcl
pop
sbbl
sarb
hlt
jb
out
mov
and
adc
es
inc
mov
add
inc
insb
mov
and
movsb
push
mov
data16
cli
jne
adc
imul
and
push
and
pop
das
xor
popa
sub
xor
pop
cmp
pusha
add
push
cmp
mov
imul
lods
lcall
lret
jg
lods
das
andb
sti
std
jle
add
push
or
push
add
call
adc
pop
sbb
jns
popa
mov
cmpsl
adc
xchg
jg
cmp
push
ret
xlat
mov
ja
inc
fsubl
cli
xchg
pop
ljmp
lods
add
inc
jge
mov
inc
sbb
jne
inc
xchg
or
fsubl
jl
cmp
xchg
inc
gs
inc
push
in
iret
push
cwtl
fneni(8087
mov
pop
inc
xor
sub
gs
or
sarl
xchg
pop
mov
push
xor
mov
sbb
mov
xor
xchg
dec
sbb
test
mov
arpl
sub
cwtl
cwtl
rcrb
out
cltd
in
test
mov
adc
test
jl
cmp
lret
xchg
in
stos
sub
sbb
adc
shl
lods
sub
dec
mov
sbb
xor
fisttpl
addr16
pop
in
sub
faddl
or
jge
inc
dec
cmpsb
std
leave
add
cmpsl
inc
stos
sbb
loope
outsl
and
out
ja
jb
xchg
sub
into
mov
mov
inc
inc
ja
xchg
lock
push
lea
jbe
sti
int
das
sbb
mov
sub
xchg
loope
dec
xchg
int3
lcall
bound
sbb
lock
dec
outsb
sbb
in
icebp
out
fdivrp
outsl
mov
adc
pop
xchg
xchg
mov
mov
jo
cltd
add
imul
repnz
or
sub
aas
in
jnp
imul
cmp
outsl
adcb
xor
cld
inc
mov
dec
sub
add
outsb
fdivs
call
lods
in
lods
xchg
js
cld
pop
fistps
jg
sbb
insb
ss
insb
mov
icebp
sbb
sbb
repnz
or
jg
gs
xor
ret
xlat
stos
test
paddb
xchg
or
push
jae
mov
pop
mov
inc
mov
std
cmp
push
lods
hlt
lods
out
xor
sbb
int
imul
push
pop
cmp
inc
inc
fldl
jnp
icebp
int
movsb
pop
cld
sahf
sbb
fbstp
cli
mov
aad
xchg
mov
lahf
push
mov
cmc
push
cld
fcoml
inc
adc
ljmp
scas
or
dec
cmc
imul
xchg
mulps
testl
sub
adc
mov
out
push
adcl
cmp
rorl
jno
sub
aas
out
xchg
push
out
xchg
sub
xor
sbb
mov
mov
nop
dec
mov
mov
js
mov
sbbl
popa
popf
and
mov
in
sbb
mov
sub
fs
mov
outsb
mov
sub
mov
dec
sub
mov
sbb
ss
into
popa
sbb
xlat
xor
imul
jno
sar
sbb
stos
sbb
mov
jns
subb
and
bound
std
mov
mov
enter
adc
mov
test
and
mov
push
fs
loopne
arpl
or
dec
inc
je
dec
test
mov
pop
sub
and
dec
jg
xor
fwait
out
lahf
push
jp
mov
fwait
mulps
inc
pop
imul
les
ljmp
cmp
xchg
xor
sub
mov
add
sbb
andb
or
and
jnp
xchg
jmp
outsl
stos
dec
xor
popf
xor
push
into
push
jp
sub
outsb
sbb
mov
mov
sbb
adc
in
retw
jne
ss
sub
mov
mov
scas
adcl
outsl
js
rorb
es
lock
push
mov
adc
out
push
mov
scas
adc
sbb
jbe
xor
jno
cmp
fdiv
inc
lcall
mov
sbb
mov
mov
divb
fs
lds
pop
mov
push
sub
addr16
outsl
stos
sub
scas
add
xchg
cld
and
adc
shlb
in
mov
test
cmp
adc
cmp
arpl
sub
jecxz
lds
mov
mov
xor
repnz
adc
js
ret
addl
popf
arpl
adc
ret
cli
xlat
add
push
fdivs
daa
inc
jae
add
stos
inc
popf
jle
cld
lea
push
mov
js
xor
jo
mov
mov
sbb
push
stos
xchg
adc
je
push
imul
cltd
leave
jle
jbe
inc
mov
jecxz
adc
dec
out
jl
daa
testl
loope
dec
dec
jl
sub
enter
iret
inc
jae
sbb
xor
xchg
sbb
test
in
aaa
xchg
pop
push
xchg
ds
ja
ret
stc
test
mov
mov
rcrb
mov
arpl
shlb
inc
lea
mov
jb
imul
inc
clc
sar
xchg
mov
jns
daa
out
ljmp
mov
ss
int3
jg
in
insb
daa
cmp
inc
pop
inc
mov
push
in
dec
jne
pop
xor
dec
lret
inc
pushf
enter
stos
adc
push
jns
filds
aad
push
jecxz
pop
xor
test
xchg
fdivrl
into
in
daa
pop
aad
arpl
mov
cltd
sbb
dec
push
mov
push
testl
sub
shlb
jl
imul
add
mov
xlat
jae
leave
cs
movsb
add
ds
adc
je
cmpl
outsb
pop
push
mov
fmull
dec
jle
xchg
sbb
pop
movsb
jl
pop
mov
fistpll
lahf
imul
sub
pop
push
jp
mov
shlb
jbe
push
imul
inc
cmp
push
mov
ror
lret
adc
xchg
adc
dec
fcmove
pop
sysenter
push
or
lds
fs
xor
lea
icebp
sar
mov
std
cmp
aas
fisubrl
or
das
shrl
jecxz
rclb
ss
jge
fcoms
cmp
lret
and
cltd
jne
and
ljmp
add
pop
mov
sbb
mov
stos
imul
jbe
pop
sti
xchg
ja
shlb
jno
rcr
addb
subb
xchg
movsl
lds
pop
and
lds
lret
jns
or
sbb
ds
lahf
pop
cmp
xor
fildl
mov
aas
cli
sbb
js
cld
sti
inc
fists
pop
daa
dec
xchg
mov
scas
mov
cwtl
sub
sbb
dec
fwait
jno
je
and
inc
cmp
pop
push
sub
sub
jne
cmpl
sub
in
push
mov
aaa
enter
add
inc
adc
aaa
fs
pop
push
out
cmc
std
sbb
in
push
xor
lret
add
push
lahf
outsl
fsubs
cli
andb
mov
xchg
icebp
iret
or
nop
or
fldl
jecxz
addb
les
mov
and
arpl
sub
fiaddl
xchg
sub
rcrl
lods
int
push
js
sahf
mov
cli
add
and
xor
cmp
xchg
dec
sti
test
loop
sarl
test
mov
mov
lret
movsb
fiaddl
sub
ret
xor
fnstenv
or
scas
dec
cmp
loopne
cmp
in
hlt
push
hlt
repnz
pop
sub
es
push
add
in
cmp
popf
xor
push
lret
cmp
sbb
and
mov
mov
rcr
push
xchg
in
xor
std
xor
enter
push
test
pop
in
jno
dec
xor
fbstp
stos
pop
xor
mov
xor
insb
or
pop
jne
jmp
cwtl
lahf
xchg
jo
xlat
push
bound
dec
or
xchg
pop
adc
or
and
xchg
in
adc
es
jne
jecxz
mov
dec
aas
hlt
sbb
sub
test
shlb
push
clc
inc
cli
sub
lahf
pop
std
cmp
xor
adc
xor
mov
push
jne
sbb
xchg
out
dec
jmp
pop
negb
xlat
clc
cmp
xchg
clc
fisubrl
and
push
js
jl
xor
sub
mov
gs
add
push
push
and
mov
mov
xor
adc
lea
jle
movsb
sub
xor
jo
cltd
fxch
or
jle
daa
and
xor
fwait
mov
inc
sti
fs
adc
xor
stc
fists
jmp
mov
dec
out
sub
cmp
sub
sar
mov
cmp
pop
sub
add
hlt
dec
adc
mov
mov
jmp
loope
and
sbb
mov
lcall
cmp
setg
mov
mov
xchg
sub
xor
inc
xchg
jmp
fldt
rclb
sarl
xor
insb
fucom
mov
mov
mov
je
jle
push
add
adc
lret
push
stos
fdivrs
xchg
pusha
shlb
dec
mov
mov
cmp
jp
fwait
popl
cmp
inc
cmp
sub
js
in
jecxz
inc
loopne
sbb
fistpl
out
pop
pop
sbb
sbb
or
imul
fidivrl
push
hlt
mov
out
movsl
insb
ss
add
jo
aad
iret
scas
jne
sahf
popa
and
xor
add
jb
adc
xor
sahf
dec
arpl
pop
push
jl
movsb
mov
enter
clc
and
cmp
add
mov
mov
dec
lret
ja
mov
mov
jge
push
lock
enter
fisttpl
jnp
sbb
lret
and
iret
and
dec
js
and
push
adc
add
mov
adc
addl
out
insl
xor
push
mov
test
test
test
sbb
adc
xchg
movsl
inc
mov
adc
xchg
cmp
pop
ljmp
cmp
adc
jg
inc
cmc
je
pop
arpl
int3
cmp
test
push
out
or
sti
push
iret
jbe
insb
repz
mov
nop
in
add
std
pop
xchg
cmp
les
lock
inc
call
sahf
cmp
push
and
jns
sbb
pop
push
pusha
lret
enter
xor
test
add
xor
push
sbb
mov
nop
nop
scas
cwtl
xor
out
adc
sub
xchg
mov
iret
inc
lods
and
outsb
pop
call
ljmp
adc
xorl
ficomps
jmp
xchg
scas
jo
out
stos
js
mov
dec
in
test
jns
jno
data16
sbb
stc
pop
enter
pop
push
gs
nop
loop
jle
push
xor
pop
and
mov
xchg
outsb
movsb
out
lods
enter
test
decl
sub
add
push
push
loope
jp
in
imul
inc
jo
into
js
call
fwait
xchg
int3
xchg
cmovb
or
mov
scas
inc
pop
push
je
lret
lret
in
jmp
dec
cld
dec
sub
cmp
xchg
and
popf
outsl
push
dec
cli
pop
int
daa
sbb
mov
cmp
pushw
int
cwtl
push
iret
jg
cld
mov
or
out
lcall
xchg
ja
dec
cmpsl
push
inc
pusha
mov
stc
sbb
mov
je
loop
popa
mov
sbb
hlt
testb
ret
push
cmp
xor
int3
mov
arpl
jno
sub
lret
add
rorb
lds
xor
mov
mov
or
or
mov
sub
push
ss
mov
out
cltd
shrb
popf
push
mov
mov
sete
jl
int3
push
mov
sbb
pop
cltd
jnp
mov
cmp
push
mov
ss
outsb
mov
repnz
cmp
jle
test
sti
in
dec
mov
dec
stos
add
clc
out
lds
adc
adc
mov
daa
repnz
or
mov
hlt
sbb
adc
aas
and
sub
adc
andb
push
out
xor
leave
clc
repnz
in
in
sbb
inc
xchg
clc
mov
out
notl
pushl
test
pop
adc
mov
mov
adc
into
cmp
and
pusha
pop
mov
mov
cmovs
rorb
sub
sub
rorl
dec
sub
or
push
dec
add
fwait
mov
dec
out
inc
sahf
popa
cmp
mov
ljmp
mov
aam
sbb
cmp
sbb
cli
orb
sub
jle
adc
mov
push
icebp
testl
hlt
push
push
xorl
push
idivb
hlt
cmp
aaa
or
mov
js
xchg
xchg
cltd
call
es
lahf
js
inc
jle
iret
jp
cmp
add
sub
jnp
das
xor
cmp
sahf
in
push
sub
push
jmp
push
movsl
sbb
sar
enter
imul
and
orb
test
adc
pop
dec
sahf
adc
jle
cmp
mov
adc
cmp
xchg
mov
mov
fs
test
leave
lock
mov
push
push
jg
dec
or
sbb
cmp
jae
xlat
mov
dec
sbbl
sti
inc
push
adc
hlt
mov
lahf
movsb
in
push
push
inc
push
cmp
das
push
in
lea
pusha
xchg
loop
inc
fmuls
sbb
fwait
ret
push
add
lahf
pop
arpl
repnz
dec
mov
pop
dec
mov
imul
mov
int3
ss
xor
or
jbe
add
jp
add
and
add
mov
mov
clc
out
ja
popf
push
and
lahf
jecxz
fcoml
outsb
add
sbb
mov
xchg
hlt
adc
jb
xor
pop
or
daa
xorl
adc
add
dec
out
daa
adc
inc
and
pop
arpl
insl
lret
scas
push
sub
pop
xchg
int
scas
sbb
ljmp
sti
mov
cld
mov
stos
pop
cld
mov
or
into
stc
iret
and
inc
inc
or
push
push
cmp
std
cmp
push
cmpsl
xchg
shr
and
imul
and
testl
rclb
xchg
insb
fildll
shrb
out
inc
mov
aas
shrl
mov
pop
mov
xchg
mov
mov
mov
pop
mov
out
daa
pop
add
xchg
sbb
gs
push
mov
lahf
dec
adc
xchg
add
push
imul
cmpb
in
and
pop
xorb
call
sahf
cmc
cmp
cmp
jecxz
pushf
scas
imul
xor
in
outsb
cmp
lods
jno
hlt
sub
mov
pop
into
or
mull
outsl
xchg
jp
sbb
in
or
xchg
add
dec
adc
imul
nop
sbb
mov
xor
enter
mul
sub
test
dec
sub
xchg
loope
adc
push
xchg
inc
mov
orl
dec
pushf
icebp
in
jg
push
imulb
jle
adc
jae
loop
cld
faddl
and
xor
mov
push
mov
test
dec
mov
mov
cwtl
add
stos
out
daa
inc
sbb
and
imul
cmp
in
shll
sub
sub
mov
imul
adc
cmpsl
ficoms
leave
lahf
add
jge
push
and
out
int3
sbb
aaa
inc
mov
inc
sub
out
dec
sarl
sbb
jno
sub
lods
jno
movsb
and
call
jns
dec
push
fsubrl
ret
aas
pop
sub
cli
sbb
jg
mov
push
cld
sub
jne
mov
call
push
fcompl
dec
cwtd
dec
xlat
std
pop
das
icebp
xorl
cmp
test
fists
je,pt
xchg
adcb
xlat
adc
inc
push
sbb
mov
cmp
xlat
negl
sbb
and
arpl
jo
pushf
mov
out
add
pop
and
shld
imul
push
inc
and
and
sti
add
sub
jg
iret
les
ljmp
test
pusha
or
xchg
mov
stos
movsb
adc
mov
fcompl
jle
fdivs
inc
pop
nop
rcrb
adc
sti
sbb
sub
jnp
scas
cmpsb
daa
jae
nop
mov
andl
insl
in
shrb
cld
mov
and
sbb
xor
adc
jle
sti
push
dec
in
adc
insb
jno
fisttps
outsb
mov
shr
pop
mov
push
gs
add
ficomps
mov
and
sub
add
sbb
xor
aas
icebp
ss
xchg
dec
and
cwtl
lret
test
pop
andb
xor
popf
lss
pop
ljmp
add
in
ret
call
orl
or
hlt
or
xchg
fisttps
xchg
jg
inc
xchg
push
inc
lock
arpl
inc
sbb
jbe
lret
sub
inc
mov
mov
cmpsl
mov
jo
mov
cld
cli
push
inc
gs
repz
jecxz
dec
add
sahf
pop
cs
mov
sbb
in
jne
rcrb
lcall
push
loopne
push
jg
scas
adc
sub
mov
or
int
jne
cmpsb
xor
or
xchg
xchg
xor
and
sbb
out
add
add
pop
add
add
add
je
cmpl
jg
jmp
pushl
push
push
call
mov
dec
mov
jmp
mov
mov
adc
mov
mov
subl
xor
xorl
add
movl
cmp
je
xor
mov
xor
mov
mov
mov
xor
or
xor
mov
xorl
add
mov
mov
and
mov
mov
adcl
add
xorl
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
jmp
or
inc
mov
insl
mov
jno
addl
sub
pop
fisttpl
pop
cmp
and
cmpsb
stos
into
fnsave
mov
cmpsb
mov
pop
sbb
ljmp
push
adc
inc
cmp
or
sbb
xchg
jno
and
inc
dec
std
sbb
inc
xor
enter
mov
jnp
popa
repnz
bound
fldl
add
test
or
out
or
lret
incb
dec
imul
aaa
jmp
xchg
or
sbb
pop
inc
cmc
jno
mov
jmp
mov
out
pushf
loope
sub
mov
xor
test
xchg
jb
dec
cld
loopne
int3
and
movsb
arpl
jmp
repnz
fs
je
mov
mov
sub
addr16
adc
fisttpll
xchg
mov
and
rorb
nop
pop
add
pop
mov
adc
frstor
popl
mov
jmp
cs
dec
mov
xlat
and
pop
or
fisubl
nop
lahf
fdivs
imul
loope
and
mov
and
insl
dec
jg
xchg
pop
xor
lret
dec
pop
mov
aam
ror
mov
jns
pop
flds
inc
cmpsb
add
mov
adc
jo
cli
xchg
sysret
bound
shll
fs
in
scas
fistps
es
push
out
sti
call
mov
and
mov
clc
inc
adc
or
in
cwtl
or
les
jmp
dec
adc
xchg
xor
push
pusha
xchg
mov
repnz
inc
push
cmp
orl
sub
adc
xchg
ss
push
push
add
in
pop
shll
jmp
jae
gs
lcall
add
mov
push
movsb
fadd
or
fisubl
addr16
add
ss
aaa
je
and
rolb
sub
xorb
lcall
push
or
iret
and
call
add
sub
jl
cmpsb
push
imul
or
arpl
mov
or
ret
jb
out
fsubrp
test
stos
lods
pushf
cmp
test
and
repnz
jl
jnp
sahf
jle
in
das
ret
call
push
jnp
roll
xchg
and
mov
push
aaa
int
inc
jecxz
movsl
mov
jo
in
pop
adc
pop
pop
arpl
add
mov
sub
test
clc
int3
adcl
sbb
pop
adc
dec
add
lock
mov
aam
jecxz
lods
xor
xchg
arpl
loope
jno
into
hlt
int3
icebp
sar
pop
jmp
sbb
in
inc
mov
or
enter
sub
insl
testl
notl
mov
push
xchg
jno
je
fs
jge
jp
xchg
lret
inc
xor
imul
cltd
daa
and
push
addr16
add
jg
mov
jl
inc
pushf
mov
and
xchg
add
ljmp
lret
aaa
pushf
dec
mov
loope
stc
call
cltd
rol
xchg
jno
add
adc
jae
insl
mov
cmp
leave
or
loopne
ljmp
cmpsl
stos
mov
adc
push
lods
and
or
push
popf
insl
push
pop
adc
les
jmp
shr
dec
ret
sbb
inc
scas
lret
push
not
lods
sub
inc
inc
nop
dec
stc
test
subb
jge
mov
fstps
sahf
roll
fildl
test
and
das
inc
lret
mov
adc
adc
lret
push
gs
jne
test
pop
push
cwtl
clc
cmp
shrb
push
jecxz
mov
fstpt
mov
jne
jmp
lcall
imul
aad
jb
out
add
push
stc
push
cltd
or
bound
cs
mov
incl
lods
mov
add
scas
popa
mov
add
cwtl
fstps
lret
push
mov
mov
xchg
rclb
mov
ror
outsl
xor
sahf
in
int
mov
and
fld
lret
jle
cmp
fcoms
nop
mov
push
mov
mov
int3
test
aam
stos
sub
cmpsl
dec
ret
cmp
cmc
test
stos
jae
jl
or
hlt
lods
repnz
lret
xor
dec
adc
test
push
test
push
mov
js
dec
jno
jno
aad
out
shrb
add
cwtl
xchg
adc
ja
xor
push
inc
push
lods
mov
mov
inc
repz
push
test
repz
jno
test
decl
ds
jge
lock
adc
arpl
popa
lods
mov
cld
xor
xor
cwtl
add
mov
or
jb
add
mov
push
xchg
sub
add
fs
je
scas
jne
cmp
or
push
inc
xor
pop
cwtl
mov
and
cwtl
add
aad
inc
jg
xchg
xor
scas
dec
and
idivl
push
cwtl
fdiv
lods
lds
xchg
mov
add
lret
and
out
adc
in
into
loopne
mov
pushf
push
in
popl
loopne
stos
sbb
sbb
and
jmp
fisubl
enter
mov
int3
lods
sub
mov
xor
xchg
mov
inc
ljmp
mov
icebp
push
addr16
push
mov
adc
mov
xchg
xor
rol
out
dec
fadds
mov
pop
ret
call
pop
mov
push
xor
xor
mov
or
enter
bnd
int
push
xchg
scas
dec
push
jb
cmp
pop
jne
xor
xchg
lods
das
mov
jb
cs
jnp
xor
outsl
ljmp
cwtl
sbb
add
lret
sbb
ss
js
push
mov
add
pop
addr16
xlat
sub
lods
cmp
or
imul
fnstcw
imul
orl
push
push
call
scas
cmp
cmp
orl
xchg
xor
add
sbb
mov
push
fildl
push
scas
and
jmp
mov
insb
prefetch
or
xchg
in
xchg
cmp
xchg
jno
push
xor
mov
xchg
push
jb
push
pop
xor
enter
xor
inc
xor
fldl
orl
jecxz
std
push
ror
adc
mov
and
sbb
pop
inc
cmp
cmp
mov
mov
es
mov
fs
psubw
outsb
adc
jno
xor
fstpl
xchg
cmova
jp
shl
addr16
dec
out
js
jnp
sbb
iret
add
mov
jne
mov
nop
dec
decb
jmp
fwait
clc
leave
popa
xchg
lock
repz
fildl
mov
outsb
pop
adc
add
ret
loop
jge
shrb
popa
btr
cli
and
mov
shlb
xchg
mov
jns
push
mov
shr
filds
inc
sub
je
orl
and
xlat
pop
pusha
jl
cmc
inc
xor
mov
jnp
mov
sub
in
lods
push
or
faddl
test
inc
in
jp
fwait
inc
les
clc
sbb
cltd
stc
ret
jbe
pop
sti
into
jge
mov
or
call
sbbl
sahf
out
xor
jp
cmp
cmp
cmp
push
stos
mov
cmp
mov
add
rol
ret
scas
shlb
push
or
push
inc
add
in
rorb
add
mov
mov
push
and
cmp
lock
add
lcall
loope
pop
or
out
mov
xor
or
xchg
ror
icebp
mov
add
cmp
adc
insb
out
inc
movzwl
add
xchg
shrl
mov
or
pop
ss
ljmp
push
pop
loop
xchg
pop
out
in
ret
and
xor
bound
jae
imul
jg
stc
das
enter
lods
adc
cmp
imul
pusha
popa
dec
movsb
sub
jl
outsl
sub
add
xchg
fsub
jecxz
mov
loop
sbb
jno
mov
jmp
in
jmp
or
lcall
test
lahf
enter
and
mov
movsl
mov
nop
cmp
jl
scas
insl
dec
pop
outsb
in
sbb
mov
pop
cmp
call
daa
ret
lods
out
std
repz
xor
dec
scas
in
cltd
cmp
mov
add
aam
ret
sub
xor
mov
test
push
outsl
sbb
iret
popl
cmp
nop
sahf
add
push
mov
jb
cmp
ja
fldl
rol
mov
aad
mov
xchg
dec
xchg
adc
and
es
in
add
lcall
test
and
cmpsb
cli
mov
pop
jge
es
sub
in
mov
loope
pop
inc
pop
push
dec
arpl
push
add
ds
mov
bound
push
lea
mov
mov
dec
orb
jno
push
das
aad
inc
lea
arpl
add
xor
rcll
xchg
dec
into
divb
testl
mov
cmp
mov
mov
inc
push
mov
leave
bound
and
pop
mov
lds
pop
andl
pop
dec
ss
lods
icebp
mov
mov
adc
repz
pop
or
lcall
mov
mov
out
dec
inc
or
inc
xchg
popf
sbb
and
rolb
dec
addb
pop
inc
call
inc
pop
das
out
jb
push
cmp
sti
xchg
pop
mov
jno
cmc
rcr
jns
in
imul
pushf
jmp
jae
aas
push
fs
shlb
xchg
mov
rclb
fs
mov
pop
roll
int3
push
test
mov
push
dec
testl
xchg
in
aas
test
sbb
test
fwait
push
sub
xchg
test
and
jmp
push
and
xchg
xchg
lea
lods
mov
in
popa
adc
out
insl
pop
jbe
leave
mov
jo
push
imul
nop
dec
sbb
dec
inc
popf
jle
lods
es
cld
dec
inc
in
xchg
mov
into
fildl
stos
das
pop
pop
add
mov
cmc
cwtl
lods
cltd
adc
stc
vsqrtps
enter
fwait
pop
lcall
sbb
outsl
adcb
rorl
dec
sbb
inc
js
out
jb
sub
cs
xor
cli
mov
lahf
je
sub
dec
xor
add
out
mov
in
in
icebp
jbe
and
int
gs
repz
dec
mov
popa
cmp
xchg
cmc
loopne
mov
out
and
inc
push
mov
sbb
pop
inc
es
sub
sbb
cmp
xor
mov
jo
and
and
cld
clc
push
icebp
xchg
out
loopne
and
loopne
adc
insb
ret
sub
aaa
loope
je
mov
loope
jl
jl
iret
cli
ds
dec
adc
jo
pusha
test
mov
std
pusha
adcb
lds
fists
lea
sahf
addb
jle
push
shl
jae
into
sub
cmp
popa
xchg
ja
add
or
sub
fs
movsb
outsb
sbb
xchg
pop
dec
lds
movsl
ret
cmp
xor
push
test
psubsw
push
sub
dec
xchg
fiadds
and
add
xor
or
cltd
in
pop
sbb
push
and
je
shlb
je
ret
mov
loope
xlat
add
or
negl
mov
shrl
mov
inc
push
mov
jmp
pop
ret
xchg
int3
inc
sarb
or
push
sbb
dec
fdivs
fisttpll
sbb
add
lds
call
mov
xchg
call
mov
xor
push
jbe
dec
divl
movsl
adc
or
mov
jg
sub
es
in
in
sbb
cltd
in
dec
xor
mov
inc
and
mov
lea
js
pop
sbb
inc
jmp
inc
mov
adc
stos
push
dec
shll
clc
pop
add
sub
lock
mov
ret
dec
sub
and
adcb
shll
xor
stc
and
inc
mov
mov
test
add
mov
ljmp
pop
stos
movsb
fadd
mov
pop
fmul
sbb
cld
iret
repz
add
mov
push
xlat
mov
insl
adc
adcb
int
adc
sub
pusha
loop
sbb
pusha
xchg
sbb
cmp
stos
bound
xchg
cmc
sbb
add
int
cmp
xlat
jecxz
hlt
lret
pop
pop
jo
mov
int3
push
cs
cmp
into
out
ret
clc
mov
jecxz
inc
idivb
and
dec
jp
ds
lret
and
sub
or
nop
xchg
arpl
stc
pop
arpl
mov
sbb
xor
dec
out
fscale
lcall
mov
xor
or
and
lea
mov
jo
lds
push
adc
cmp
fstpt
push
test
int3
test
jne
or
lea
clc
xchg
xchg
mov
ss
js
xchg
pop
add
out
xor
cmp
mov
cwtl
dec
cmpsl
clc
mov
push
sbb
subb
pop
push
loopne
imul
and
pop
outsb
stc
xchg
xor
aas
mov
ljmp
loope
or
sub
fsubrs
mov
add
xor
out
lcall
or
adc
int3
inc
adc
icebp
sbb
enter
es
jb
sbb
mov
int3
scas
and
xor
popa
cs
pop
xor
jle
dec
das
pop
leave
sub
mov
insl
lret
in
iret
or
xorb
xor
sar
jne
xchg
and
inc
call
or
mov
rcll
fcoms
xor
xchg
addr16
xchg
jg
add
stos
pop
stc
cmp
pminub
into
jae
jbe
cmp
xor
pop
insl
add
pop
jbe
test
adc
fs
sbb
cs
into
push
icebp
ret
jne
into
push
lods
dec
inc
push
out
sti
add
mov
test
pop
mov
out
push
push
insb
pop
mov
cmovle
lea
mov
jl
mov
mov
dec
mov
lds
lret
cli
lea
fstpt
adc
inc
mov
adc
cmp
out
push
ret
inc
cltd
mov
push
setbe
cmpsb
sahf
cld
dec
jg
lahf
leave
addr16
cld
lret
jmp
sub
ds
or
out
mov
mov
ss
popa
sub
pop
dec
imul
test
sub
fldenv
mov
movsl
movb
pushf
dec
cs
test
test
adc
sbb
xchg
sub
adc
bts
dec
lea
fildll
sub
into
mov
inc
lret
xchg
fdivrl
xor
cs
add
jb
popf
and
lods
add
pushf
adc
sbb
in
sbb
ret
and
inc
ja
stos
das
cmp
add
and
pop
rcl
out
and
shll
in
cwtl
orb
mov
leave
jnp
insb
subb
jecxz
mov
mov
adc
js
cmp
repnz
lods
bound
lods
into
mov
fucomp
xchg
pop
mov
xor
lret
inc
mov
imul
cld
dec
clc
pavgw
push
lock
bound
and
mov
push
dec
jle
je
jg
lods
xor
mov
mov
pushf
mov
mov
inc
mov
mov
mov
in
daa
mov
fiadds
lods
adc
aam
xchg
pop
lcall
outsb
dec
xchg
xchg
add
je
jmp
or
iret
sar
rol
and
add
mov
xor
xor
inc
in
shlb
enter
sbb
mov
nop
cmp
xchg
mov
wbinvd
adc
jbe
mov
mov
pushf
test
push
imul
and
pop
jl
lret
push
mov
xor
fnstsw
cmp
lahf
cwtl
adc
lock
subb
in
icebp
roll
lcall
push
mov
inc
pop
repz
cmpsl
pop
outsl
nop
mov
sbb
testl
cmp
cmc
dec
es
wbinvd
cmp
dec
cmp
fcmovb
or
fninit
push
add
pop
scas
ss
pop
jb
int3
mov
fdiv
push
mov
or
dec
pusha
ret
lret
dec
adc
and
jns
sub
or
shll
movsl
rol
xchg
mov
pop
pop
fstl
out
sub
mov
and
jle,pn
add
pop
stos
inc
mov
ja
imul
add
dec
into
ret
lahf
adc
shll
cmpsl
roll
lret
lret
mov
call
jl
divb
out
imul
jbe
push
sub
add
adcl
call
bound
push
arpl
shll
adc
mov
aas
jmp
lods
shll
adc
sbbb
cmp
xchg
cmp
add
push
inc
adc
test
mov
cmp
bound
loope
mov
mov
and
and
cli
testl
outsb
dec
jmp
outsl
xlat
outsb
jne
xchg
int
jns
dec
jb
and
lahf
jge
adc
repnz
push
adc
xchg
sub
les
inc
xor
sbb
in
xchg
in
xor
and
insb
lret
sahf
test
cmp
pop
mov
xchg
sti
leave
leave
icebp
mov
lret
push
testb
xor
or
int
xchg
dec
out
xor
clc
jg
lds
stos
test
sub
sbbb
and
popa
push
es
jmp
repz
push
xchg
dec
mov
popa
les
mov
inc
pop
scas
dec
jg
xor
cld
cmpsl
cmp
out
xor
test
push
dec
in
push
sbb
aad
sub
data16
jno
jo
dec
int
jmp
lea
inc
enter
mov
and
mov
xlat
pushf
repnz
mov
push
jge
mov
mov
in
jns
pop
add
popf
pop
test
into
fs
dec
xchg
xor
gs
dec
rolb
rclb
adcl
dec
xorl
push
add
mov
cmp
addr16
ss
fwait
rclb
loopne
cs
data16
ljmp
cmp
gs
mov
cli
sbb
out
das
jmp
xchg
xor
addb
add
xchg
push
outsl
cld
lods
das
inc
and
pushf
add
dec
jecxz
pop
push
push
inc
andl
iret
xchg
dec
cmp
cli
xlat
leave
jg
shll
mov
fadd
mov
adc
sbb
std
mov
xchg
push
shlb
xchg
aas
lahf
and
shrl
inc
xchg
mov
mov
hlt
push
scas
mov
cmc
mov
test
stos
add
jbe
inc
xchg
cmp
leave
jne
punpckhwd
dec
gs
lcall
in
gs
fsts
iret
add
inc
cld
lret
xor
test
pushf
int3
rcll
mov
mov
dec
and
jmp
dec
jl
or
lret
jl
stc
inc
fbstp
mov
fs
repnz
push
add
sub
cwtl
je
and
xor
add
int3
notl
add
push
xor
xlat
or
bound
push
ljmp
mov
lret
sbb
out
clc
nop
mov
cltd
in
imul
lea
cmp
cmp
xor
subb
gs
movsl
jae
lret
add
daa
ja
push
sub
mov
add
stos
das
adc
mov
fcmovu
jns
cld
mov
aas
outsb
nop
add
push
fdivl
or
sub
xorl
jg
cs
movsl
out
cmp
push
adc
stos
ss
and
sarb
inc
idivb
jecxz
mov
addr16
movsl
mov
lds
test
dec
adc
dec
pop
push
xor
cld
dec
sbb
fldt
cmpsl
sub
fadds
cli
adc
es
pop
and
sub
leave
ret
js
sbb
dec
jae
jb
xchg
cli
aam
jne
add
pop
les
mov
push
jno
sbb
js
xor
sbb
lods
pop
add
add
out
bound
pop
mov
notl
mov
and
mov
cmp
je
push
scas
stc
xor
mov
rcll
mulb
mov
bsr
jle
pushf
lock
inc
and
int
or
jnp
sub
popa
and
cltd
mov
add
fs
xor
cmpsl
add
scas
aaa
mov
jp
jg
scas
fwait
push
cli
in
ss
jmp
cmc
or
loopne
pop
push
adc
dec
adc
cmp
arpl
pop
dec
dec
cmc
out
sub
xchg
xor
sbb
in
push
dec
cld
popf
cltd
xchg
xchg
cmpsl
aad
loopne
pop
gs
mov
cmp
fisubs
xchg
inc
mov
inc
mov
repz
std
inc
iret
aas
xchg
sub
addr16
and
mov
dec
sbb
cmpsl
incl
pop
pop
mov
dec
shlb
add
push
mov
jp
orl
out
dec
cld
dec
jbe
or
lahf
cmp
xor
lea
xor
pop
jge
js
sahf
aad
enter
pop
add
outsb
rorl
popa
lret
cmp
orb
pop
mov
stos
outsl
fwait
and
mov
dec
xorl
cmp
push
lods
pop
mov
mov
fcoms
and
test
push
mov
iret
repz
fstpt
test
dec
lahf
or
daa
std
stc
pop
xchg
test
out
cwtl
cmp
sub
leavew
icebp
pop
sbb
add
xchg
dec
sub
add
and
pop
movsb
pop
outsb
adc
xor
divl
fldz
jo
iret
ret
mov
push
cltd
ss
lahf
iret
mov
test
sub
dec
lret
add
or
cmp
int3
scas
cmp
mov
aad
js
xchg
lds
and
shlb
mov
dec
mov
addr16
aad
mov
jecxz
enter
xchg
mov
ret
push
cld
xchg
xorb
mov
mov
rcrb
lods
cmp
xor
adc
cmp
dec
pop
xlat
pop
insb
mov
mov
xchg
je
nop
or
jnp
push
push
lret
inc
movlps
ja
add
mov
cs
sub
call
movsb
inc
jae
sub
divl
int
sbb
jg
sub
stos
push
lret
pop
pop
pusha
mov
mov
test
negl
sbb
pop
xor
sbb
inc
mov
pop
les
push
inc
xor
inc
jecxz
mov
sti
xor
insl
sub
jp
cld
imul
push
dec
dec
inc
aas
push
stc
add
sub
ret
rorb
stc
and
ficomps
add
jo
shl
jb
in
sahf
pop
cmpsb
stos
pop
push
pop
test
fmul
or
push
pop
lock
pop
mov
bound
fidivs
lds
cmp
clc
test
or
xchg
mov
mov
not
in
ficompl
inc
aam
sti
mov
fsubs
dec
mov
rcll
add
scas
jne
outsb
jge
jb
aaa
inc
lods
fbstp
jb
lret
inc
mov
inc
pop
mov
push
sti
pop
add
xor
push
xor
push
lahf
mov
pusha
pop
int3
xchg
lea
inc
popa
out
insb
out
imul
data16
cs
insb
loop
imul
imul
loope
jge
mov
mov
cltd
xor
lret
stos
push
stc
dec
aad
dec
xchg
js
mov
sub
lock
pop
mov
lods
xchg
in
dec
test
leave
cs
outsl
loope
icebp
pop
adc
fcmovu
or
filds
testl
jl
mov
sar
adc
pop
mov
xor
cmc
mov
xchg
adc
add
jl
cwtl
imul
insl
cli
in
bsf
sbb
lret
js
adc
add
jmp
les
xchg
orb
hlt
lea
cwtl
cmp
out
xor
aad
xchg
mov
push
push
jbe
inc
sbb
sub
dec
mov
mov
or
jae
leave
fwait
shlb
adc
mov
mov
and
mov
push
inc
cmp
xchg
sbb
xor
cmpsl
rcll
scas
cmp
mov
adc
shll
and
outsl
sbb
mull
push
mov
adc
psrlw
mov
leave
dec
popa
dec
pushf
test
test
test
dec
adc
inc
clc
push
mov
testl
or
pop
iret
loop
lods
dec
shll
js
mov
inc
cmp
rorl
sbb
shlb
frstor
add
pop
rorb
into
dec
sarl
sbb
mov
add
add
ljmp
add
arpl
fistpl
or
cwtl
sub
inc
fimuls
xchg
rol
mov
xor
rclb
ss
ja
aam
sub
jge
jp
xchg
jp
insl
dec
and
xchg
push
cmp
popa
insl
or
push
add
xlat
loope
jp
popf
cs
into
sbb
fs
in
ljmp
sub
mov
dec
xchg
out
inc
imul
sahf
jle
into
orl
or
pop
and
or
test
cld
test
push
sub
in
and
enter
test
inc
aam
mov
jl
ja
adc
cmp
pop
es
cmp
lods
jns
outsb
inc
xor
jg
stos
push
mov
adc
outsl
and
dec
rorb
mov
dec
jbe
mov
cmp
sti
decb
mov
cmpsl
inc
pop
jmp
sub
push
aam
xor
push
jmp
dec
cmp
adc
jae
sbb
xor
mov
jnp
fldt
icebp
out
jle
sub
in
scas
mov
or
cmp
fistpl
and
sub
arpl
stos
mov
adc
inc
cmp
bound
gs
fs
pop
das
pop
or
cmp
fidivs
mov
mov
lahf
fwait
cmp
insb
sti
adc
stos
ja
pop
rclb
or
dec
in
lods
hlt
sub
sub
pop
jne
inc
orl
add
ds
cli
adc
push
mov
or
cmp
lock
outsl
rcll
into
ja
popw
ljmp
mov
out
sub
mov
jno
mov
lods
inc
inc
cmp
mov
cli
jbe
xchg
add
idivl
or
or
push
dec
mov
pop
adc
inc
push
stos
mov
pop
mov
shlb
cmp
test
pop
in
imul
jle
adc
adc
iret
stc
ret
jno
mov
xchg
repnz
add
out
out
cmp
jne
cmpsl
mov
pop
popf
in
adc
mov
mov
pop
or
outsl
out
mov
sub
aas
repnz
cli
jnp
or
mov
adc
xor
pop
outsb
lea
out
int3
cmp
xlat
sbb
pusha
or
jns
clc
in
orb
mov
inc
add
mov
daa
mov
rcrb
ss
cmp
repnz
xchg
std
sub
lret
sub
loopne
or
testb
in
jno
push
into
das
fildl
cmp
cmp
xlat
fildll
lea
call
dec
stos
insb
es
dec
xchg
sahf
dec
cs
pop
mov
test
adc
jmp
cmc
push
push
fimuls
mov
push
inc
and
jb
movsb
xchg
xchg
mov
js
mov
dec
jecxz
repz
mov
and
adc
stos
and
jae
push
xor
or
mov
jns
fnstsw
sub
add
jmp
xchg
rorl
icebp
xchg
adc
fadds
dec
add
adc
mov
xchg
aaa
xchg
loope
add
xor
fnsave
sub
pop
lds
mov
cmp
fidivrs
lret
les
dec
xor
mov
call
fs
xor
clc
cmp
mov
lcall
jae
addr16
aam
xchg
fdiv
mov
inc
enter
adc
mov
shl
sbb
or
aaa
in
mov
add
jmp
out
sub
pusha
rcll
movsb
mov
sub
add
mov
inc
jl
mov
lock
mov
cmp
aam
in
push
cwtl
adc
sti
sbb
xor
dec
cmp
cmp
aas
lea
or
imul
pop
inc
sbb
pop
fdivs
dec
int3
mov
jmp
xchg
dec
js
xchg
fwait
or
scas
orl
mov
popa
sub
sub
adc
inc
ret
subb
lods
repnz
jno
xchg
lcall
movsl
adc
add
outsb
mov
test
mov
jbe
cmp
fwait
lahf
es
mov
pop
scas
aas
lods
shll
adcb
push
add
dec
and
xchg
dec
lret
sbb
adc
mov
xor
in
fst
loop
scas
sbb
test
and
jo
cmpsl
ret
or
incb
shlb
sub
pop
xor
inc
or
cmp
mov
push
add
in
data16
adc
xor
fsts
cmp
pop
push
lret
jne
cli
aas
lahf
inc
mov
xchg
push
aaa
mov
adc
in
loop
jno
testb
cli
pop
mov
stos
cmp
lods
mov
int
std
adc
inc
inc
sub
aaa
adc
jmp
pop
and
test
pop
inc
and
mov
insb
cmp
mov
ds
xor
mov
cmp
js
xor
loope
add
push
js
sub
pop
cmpsl
xor
out
shll
inc
clc
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
jmp
mov
loope
addb
es
add
addl
mov
mov
scas
mov
cltd
sbb
addr16
pop
or
sub
cmp
cmp
lcall
push
mov
cmc
pop
fstl
jmp
xor
stc
fistl
test
addr16
dec
pusha
sbbb
dec
mov
mov
pop
iret
xor
mov
out
pop
and
push
ss
jbe
or
gs
xor
pop
jbe
push
and
data16
lods
adc
xlat
pop
repz
dec
xchg
add
cmpsb
dec
xlat
out
and
pop
das
outsb
push
outsl
and
enter
sub
cwtl
cli
out
call
ds
lahf
ds
fwait
and
imul
lods
jb
and
pop
pop
cmp
loop
pop
cmp
int3
into
lock
pop
fsubs
jge
mov
push
mov
lock
outsb
push
xchg
jge
mov
or
xchg
popa
out
add
popa
test
sub
stos
mov
xchg
in
aad
push
loopne
pop
jg
call
scas
dec
aam
jmp
andb
and
outsb
arpl
pushf
idivb
push
cld
rorl
int3
jno
xchg
ljmp
inc
xchg
ret
mov
mov
push
push
subl
fnsave
aaa
fwait
mov
outsb
jp
cmp
outsl
mov
or
into
mov
lods
ja
cltd
test
js
cmpsb
xchg
jle
popa
sbb
loop
sub
dec
cld
or
fwait
jmp
push
sbb
imul
cmp
stos
ss
outsl
push
sahf
aas
and
dec
and
and
and
dec
int
mov
mov
outsl
rclb
pop
shlb
adc
addl
and
jge
std
pop
and
std
adcl
xchg
sbb
jp
sbb
aas
mov
daa
test
push
jecxz
jg
out
inc
pop
cs
dec
std
push
and
loope
cmpsl
mov
xchg
pop
mov
jnp
adc
xchg
dec
mov
cld
mov
adc
test
and
lea
lock
ret
pop
repnz
fisubrs
mov
or
and
cmpl
mov
mov
pop
subl
dec
inc
or
mov
addl
outsl
clc
in
jb
mov
sub
jmp
in
pop
mov
mov
push
adc
push
xchg
iret
in
sub
insb
cltd
xchg
and
imul
push
mov
adc
testl
mov
mov
testl
inc
add
or
push
push
pop
test
fs
jo
cs
cltd
dec
imul
xchg
mov
enter
aam
sub
insl
repnz
pushf
je
sbb
divl
push
push
pop
ret
loop
mov
mov
xchg
or
mov
stc
xchg
jg
int3
flds
ret
sbb
xchg
movups
sub
inc
cmpl
dec
sbb
int
push
add
sub
jns
xor
pushf
cmp
je
mov
xchg
pop
dec
cltd
mov
sub
jle
jg
jp,pt
sub
in
divb
adc
inc
scas
call
pop
adc
ror
mov
imul
jecxz
jns
bound
mov
loopne
aas
sub
out
mov
xor
loope
in
pop
aam
push
clc
jmp
sbb
insl
roll
cltd
mov
xchg
pop
sub
push
bound
cmpsb
fstps
out
out
pop
adc
mov
mov
cmpl
or
xchg
inc
mov
dec
cmc
mov
imul
jl
dec
popf
stos
mov
imul
and
mov
dec
mov
pop
std
fmuls
and
mov
push
in
xor
mov
pushf
lods
lods
cmpsl
imul
cli
pop
pusha
xor
mov
arpl
clc
mov
insb
cwtl
push
call
adc
xchg
sub
fistl
xchg
jp
inc
lret
dec
fdivl
and
loope
adc
outsl
ja
jae
lahf
mov
mov
jmp
jecxz
sarl
dec
sbb
inc
cltd
lds
pushf
and
push
jge
rcr
mov
test
cmc
iret
jecxz
jmp
inc
sbb
cmp
or
push
fisubrl
icebp
cs
xchg
cmc
aam
fisubl
xor
adc
je
into
pop
xchg
movsb
or
fisubl
mov
pop
push
bt
xchg
cli
int
outsl
repnz
in
push
jp
sbb
cltd
nop
sbb
imul
dec
mov
xchg
in
test
iret
sti
in
repz
mov
add
cmp
sub
fcompl
mov
ljmp
jb
or
lea
fnstsw
pop
fnstcw
adc
lods
mov
mov
pop
pop
push
or
aas
push
subl
add
and
pop
or
jg
mov
mov
cltd
fwait
ret
mov
ja
in
jnp
and
outsl
test
push
cmp
pop
pusha
les
int3
fs
fldenv
in
add
scas
lcall
aad
jnp
cltd
or
mov
xchg
adc
andb
push
in
and
jo
and
pushl
lock
sub
ds
into
lods
fwait
into
ret
test
lods
cmp
adc
test
inc
cmp
aaa
or
adc
out
icebp
inc
push
jle
dec
mov
hlt
adc
daa
fiadds
adc
inc
out
pusha
nop
inc
pusha
xor
shl
movsb
test
mov
xchg
test
mov
xor
daa
dec
into
jmp
mov
push
cmpsb
shll
sbb
fldl2t
sub
mov
out
addr16
inc
mov
sbb
sbb
lcall
xchg
sub
push
sub
ficomps
sbb
jmp
aaa
jne
adc
adcb
test
enter
xor
cwtl
jge
sahf
rcrl
loope
mov
ss
inc
daa
adc
std
ss
push
inc
sbb
test
in
push
and
int
ja
adc
sub
insb
rclb
decb
or
push
jg
and
or
jno
stos
ss
pop
and
add
or
insb
pop
jno
pop
clc
shl
jle
mov
adc
cmpl
jae
call
incb
loope
dec
pop
gs
mov
fsubs
inc
pop
and
pop
mov
ret
push
subl
adc
les
jle
test
pop
lods
jae
aad
inc
outsl
lcall
adc
jge
xor
xchg
daa
pop
fsubp
and
pop
or
xor
sbb
xorb
insb
jge
jae
movsl
mov
or
addr16
inc
fcmovnb
imul
sbb
cs
push
in
push
cmp
into
sti
lods
test
faddl
je
pop
lret
xchg
mov
jo
push
in
mov
in
push
mov
aad
mov
push
xor
lcall
repnz
pushf
cltd
xchg
dec
push
les
les
xadd
movsl
cmpsl
bound
sub
mov
mov
lods
adc
dec
push
inc
inc
xlat
int
fwait
loope
cmp
orb
clc
push
mov
orl
sbb
mov
jae
push
outsb
adc
mov
push
loopne
sbb
cs
xchg
cli
mov
mov
pushf
out
dec
fstpt
mov
mov
lret
int
repnz
and
ret
mov
pop
adc
mov
adc
add
mov
or
cmp
in
xchg
fisubs
or
mov
out
and
mov
negl
scas
pusha
push
push
fisubl
inc
cld
fstl
xor
scas
jp
leave
js
inc
fs
cmpsl
rcll
pop
mov
lret
gs
sub
jg
pop
jl
rorb
add
std
out
pushf
mov
sahf
int
xor
test
fisubrl
enter
jp
mov
mov
inc
pop
jns
into
push
mov
stc
push
and
mov
and
out
mov
jno
mov
sbb
icebp
daa
mov
mov
test
ss
adc
add
xor
movsl
imul
rclb
es
ftst
outsl
add
sub
push
inc
mov
pop
loop
roll
ds
push
push
jp
pop
or
aas
shr
pop
jnp
mov
adc
jne
inc
stos
push
in
andb
and
arpl
sahf
jmp
xchg
xor
aas
mov
mov
or
mov
dec
gs
and
mov
fnstenv
dec
icebp
imul
fwait
popa
sub
push
sub
inc
fwait
sbb
xchg
iret
cmp
js
pop
jb
cmc
or
leave
xchg
outsl
pop
pop
jp
ss
repz
fwait
mov
hlt
outsb
ljmp
or
xchg
push
sub
push
jle
xchg
mov
pop
insb
jns
in
or
xchg
or
sahf
iret
inc
cmpb
cmp
fildll
pop
popf
and
mov
je
mov
cld
fs
mov
ret
mov
jbe
hlt
push
imul
nop
push
push
jns
call
lea
leave
dec
dec
popf
movsb
pop
in
sarl
out
cmp
clc
aaa
push
cwtl
fsubl
test
popa
xor
call
lods
and
shrl
xchg
in
or
mov
add
xchg
dec
or
loope
mov
cmp
jecxz
mov
sub
out
das
jmp
add
mov
sahf
cmp
mov
popf
repz
mov
sub
cmp
outsb
pop
daa
fcoml
add
xchg
sbb
xlat
imul
rcrl
inc
sbb
movsl
mov
ror
push
call
mov
mov
inc
inc
jo
dec
push
xor
ds
pusha
push
nop
pop
clc
test
ret
sub
aaa
je
xchg
jp
adc
pusha
inc
pop
fs
cltd
push
loopne
dec
or
push
addr16
sarl
cmp
and
push
insl
push
mov
adc
cmovle
inc
jl
dec
stos
int3
mov
xchg
cmp
xlat
xchg
mov
dec
mov
add
mov
push
arpl
and
in
das
stos
jp
mov
and
fisttpl
sbb
or
mov
cmp
xlat
fst
orl
test
adc
pusha
mov
popf
mov
stos
xchg
and
fisttps
loopne
push
xchg
mov
std
ljmp
sub
arpl
push
fidivs
sbb
mov
add
add
xchg
lret
je
mov
xor
cld
loope
mov
adc
jl
stc
inc
arpl
hlt
les
nop
popa
inc
push
mov
sbb
xor
clc
or
mov
aas
lods
pop
push
cwtl
sub
inc
add
out
xchg
adc
or
mov
xor
sub
lods
dec
ja
xor
outsb
sbb
jge
pop
ljmp
dec
push
jg
adc
sub
imul
lret
imul
je
cltd
test
out
pop
ljmp
xor
sbb
dec
stc
dec
sti
sub
ljmp
push
mov
out
shlb
fstps
mov
ljmp
xchg
cmp
pop
push
daa
mov
push
sub
xor
mov
pop
addr16
push
dec
adc
repz
xor
inc
loope
shll
stos
aam
std
xlat
add
pop
push
imul
cmp
sbb
dec
lods
loope
xor
rorl
jge
xchg
inc
loop
jmp
mov
xchg
rorl
adc
mov
push
push
out
mov
stc
stos
mov
test
out
pop
pop
pop
rorl
push
push
ds
orb
pop
adc
mov
aas
cs
dec
dec
ret
pop
cmp
xchg
xchg
adc
loop
js
mov
or
push
aam
ljmp
imul
add
ja
xchg
into
add
js
fucom
cmp
frstor
pop
int
data16
call
sub
cmpsl
cmc
movsb
push
and
icebp
mov
cmp
arpl
sbb
add
repz
fwait
mov
dec
je
jns
and
int
movsl
out
pop
cmp
xchg
int3
mov
and
imul
inc
sti
in
and
rcr
lret
stc
into
inc
into
adc
lods
dec
cmp
enter
call
sbb
jbe
rol
inc
push
aaa
adc
mov
mov
add
mov
mov
jo
jmp
mov
jae
xlat
shlb
inc
push
jae
jns
pop
pop
into
cmp
or
mov
sbb
mov
push
jns
cmpsb
mov
das
mov
mov
pushf
push
lds
cltd
fisubs
inc
ds
gs
mov
mov
cmp
dec
or
aam
mov
jb
inc
mov
add
jecxz
fsubs
jmp
cs
push
lods
imul
out
imul
xchg
lock
out
fadds
inc
repz
sbb
push
sti
cmp
rorl
addr16
sub
loopne
push
fistl
xchg
jmp
sar
push
dec
inc
pushf
inc
pop
mov
idiv
pushf
movsl
call
loopne
mov
es
xor
jmp
jbe,pn
jmpw
jo
dec
mov
lret
cwtl
pusha
jle
movsb
cltd
xor
inc
xchg
int
lret
mov
fldl
js
movsb
add
pop
insl
lret
dec
inc
xchg
xchg
push
lock
pop
shr
imul
mov
out
movsb
and
iret
mov
dec
jno
fwait
addr16
int
pop
sbbb
push
pop
cs
pushf
loop
pop
inc
cmp
sub
addr16
jp
ret
jle
mov
or
mov
loopne
ljmp
jp
movsb
mov
lahf
les
push
jb
movsl
pop
in
adc
int3
in
sti
fldl
in
fistpl
stos
and
jae
xchg
cmp
inc
and
cmp
dec
add
or
pop
in
int
dec
pushf
cwtl
fdiv
bound
adc
repz
push
push
das
xchg
cli
add
das
adc
mov
xchg
mov
ljmp
mov
xchg
jo
adc
je
sub
jne
mov
std
rcl
sub
movsb
out
sub
dec
and
popf
iret
mov
jnp
adc
cmc
mov
inc
lea
pop
xchg
ss
repz
adc
cmp
jns
jne
or
inc
xchg
pop
sahf
repz
mov
xor
dec
adcb
inc
add
inc
xor
cmp
push
mov
int3
sub
jae
cltd
add
or
mov
pop
outsl
adc
xchg
cltd
lock
cmpl
jbe
sbb
push
push
xlat
pop
sbb
mov
mov
loopne
add
leave
push
cld
jns
xor
stos
fwait
imul
out
mov
pop
inc
clc
shlb
sub
repnz
cmp
and
sbb
sub
add
and
dec
xor
mov
scas
mov
mov
or
lock
ret
pop
rcrb
mov
pop
dec
jb
mov
or
push
daa
push
inc
adc
outsb
adc
loope
jne
push
mov
call
mov
fldl
cld
je
rcll
mov
jno
and
hlt
fwait
xor
movsb
jne
insl
cmpsl
das
sbbb
in
jl
adc
push
data16
stc
movsb
movsb
jge
or
cmp
insl
outsb
loop
xchg
ds
push
mov
test
mov
or
pop
push
movsb
pop
push
adc
sbbl
xchg
test
jmp
xchg
hlt
in
stos
lahf
scas
rcll
popf
sbb
sti
lcall
addr16
mov
cmp
mov
fidivs
jmp
cmp
mov
and
jp
sbb
stc
dec
lea
mov
jnp
in
scas
inc
stos
sub
inc
fistpll
xchg
and
pop
push
mov
xor
mov
nop
das
inc
rol
les
push
xor
inc
test
push
push
testl
shl
shl
adc
mov
sbb
imul
jp
dec
pushf
inc
test
xor
xchg
jp
xor
push
jbe
lahf
mov
add
rol
xor
insl
enter
lods
mov
subb
add
fwait
inc
popf
jbe
fwait
out
mov
cmp
add
sub
push
push
mov
cmp
sub
cwtl
in
lcall
add
add
push
cwtl
loope
aad
adcb
shll
jo
lock
adc
lret
mov
adc
xor
sbb
jnp
xchg
xchg
dec
fwait
jp
es
pop
fwait
cmp
or
sub
xchg
and
ret
dec
stos
stos
movsb
mov
lahf
into
dec
negl
js
mov
jae
insb
or
or
adc
stos
cmp
lds
add
lods
test
mov
inc
notl
or
stos
femms
xchg
or
jae
sarb
xchg
mov
lea
filds
ds
xchg
sub
push
movsl
mov
pop
data16
and
repz
cmp
out
mov
lahf
pusha
cli
not
lret
mov
mov
fnsave
mulb
xchg
push
fcmovbe
inc
xlat
xor
sar
mov
inc
push
mov
cmpsb
andl
clc
in
sbb
mov
rdtsc
sbb
nop
andl
je
dec
imul
and
xchg
pushf
cmp
cmc
cmpsl
push
add
sbb
push
inc
ficoms
pop
addr16
or
inc
add
jle
sti
sbb
jp
fmuls
das
jb
sbb
lods
dec
fcmovnbe
notl
in
jns
stc
int3
and
dec
ficoms
and
jbe
mov
or
mov
roll
lret
push
mov
or
jo
mov
loopne
mov
xchg
xchg
push
sub
std
mov
inc
out
xrelease
dec
inc
xchg
lock
cli
push
pop
enter
adcb
xor
pop
mull
ret
mov
aaa
sti
subb
xchg
jno
lods
gs
fstpl
insl
push
jp
or
jae
and
rclb
insb
jmp
or
sbb
nop
lods
addr16
xor
pop
out
push
dec
lods
and
jmp
pop
sahf
xchg
lock
or
divb
cmp
push
outsb
repnz
dec
mov
out
cmc
jne
or
or
data16
aas
pop
inc
ja
out
push
dec
sbb
fmull
push
and
mov
mov
or
dec
repz
push
mov
xor
outsb
ds
or
jle
test
mov
mov
pop
inc
cld
leave
jnp
sub
sti
ret
lods
push
jnp
inc
ret
ret
rorl
push
push
clc
adc
fwait
xchg
popf
cmpb
pop
push
jbe
enter
clc
enter
out
addr16
and
das
fldcw
ljmp
daa
mov
mov
mov
mov
test
mov
xor
nop
loopne
outsl
push
mov
xchg
mul
arpl
mov
clc
ds
testl
ja
xchg
jb
arpl
idivl
lds
xor
out
js
data16
xlat
pop
movsb
dec
jle
adc
pop
mov
insb
jmp
outsb
xchg
adc
xchg
pop
cmp
jae
ljmp
push
daa
xor
inc
lods
sti
jl
xor
loope
ljmp
pushf
lods
stos
inc
push
stos
mov
shrl
mov
jge
push
jns
insb
add
or
adc
pop
sub
rol
push
ss
popf
js
lahf
addr16
adc
cmp
mov
push
and
leave
mov
dec
push
nop
mov
leave
jmp
xchg
sub
imul
pop
pusha
inc
std
jnp
cltd
inc
jge
int3
aas
jnp
ficoml
fs
add
ljmp
jg
mov
ljmp
fdivs
repz
jnp
mov
lea
jge
jmp
jae
aam
icebp
push
jo
and
sahf
call
xor
mov
jne
pop
cmp
xorl
jo
sbb
in
ret
js
cld
inc
cmp
xchg
mov
lret
lcall
cmpsb
jnp
fcoml
shlb
pushf
adc
fimull
xor
outsb
sub
cmpsb
xor
cmp
stc
outsb
leave
jp
outsb
adc
mov
aam
sahf
jb
inc
dec
xor
shll
out
dec
push
xor
cmp
jne
mov
movsl
push
sti
sbb
int
dec
and
orb
mov
es
xchg
xchg
xor
mov
pop
arpl
or
outsb
arpl
nop
xchg
sbb
ljmp
mov
arpl
les
push
pop
sub
pop
lods
bnd
std
lret
push
addr16
outsl
xchg
sbb
and
push
lods
inc
sti
mov
jl
mov
mov
pop
inc
fwait
call
nop
pop
sbb
cmp
out
aam
mov
cwtl
mov
mov
pop
jbe
hlt
shll
ljmp
dec
cld
mov
mov
addl
mov
dec
ja
std
fs
repnz
sbb
addb
call
outsb
es
call
or
subl
mov
pop
sub
lea
or
inc
arpl
xchg
cmc
lods
mov
sub
icebp
ds
shl
xacquire
data16
hlt
sbb
arpl
jmp
push
pop
xor
stos
cmpb
mov
or
subb
shlb
xchg
add
shl
scas
inc
aad
andl
les
lret
dec
xchg
ret
add
xchg
orb
pop
xor
mov
scas
adc
and
xchg
lods
push
xor
xor
in
flds
cmp
add
add
jp
repz
pop
push
gs
xchg
lret
mov
mov
pusha
inc
test
cmp
adc
inc
or
or
add
cwtl
push
clc
cld
test
mov
shr
arpl
lret
jbe
jg
cli
jmp
pusha
jecxz
push
sbb
lods
call
loopne
xchg
clc
repnz
xor
scas
repz
jne
fnstsw
sbb
xor
fdivrl
adc
dec
jl
mov
push
std
les
icebp
fsubs
outsb
cmpsb
sarl
pop
dec
fildll
or
test
das
sbb
xchg
xor
mov
ror
xchg
jno
das
xchg
sub
and
add
shll
dec
call
sbb
adc
mov
jb
inc
jecxz
jae
pop
dec
imul
adc
hlt
fldt
pop
lret
push
pop
add
inc
and
in
pop
push
add
dec
shll
mov
sbb
inc
es
out
xchg
fstl
dec
lds
test
arpl
mov
outsl
xchg
push
jp
xor
imul
in
ja
iret
mov
pop
and
push
mov
push
mov
push
mov
mov
pop
aad
mov
imul
push
push
pop
jmp
sub
inc
out
loope
daa
mov
xchg
ret
mov
xchg
lods
enter
pop
push
icebp
push
xor
mov
pop
mov
dec
aad
mov
outsb
push
fwait
xchg
scas
mov
popa
xchg
ret
cmpsl
daa
jae
dec
cltd
sub
je
add
js
loope
mov
arpl
adc
push
mov
xor
and
pop
sub
mov
pop
cs
stc
out
push
roll
aam
cld
push
sti
popa
and
hlt
push
lret
dec
fdivr
sbb
in
and
gs
into
rcrl
jb
mov
repnz
pop
lea
mov
mov
jo
nop
idivl
popf
sbb
addr16
jg
jns
add
nop
int3
iret
xchg
nop
xor
cmp
mov
xchg
dec
popa
xor
scas
mov
rcl
cmp
int
pusha
lcall
dec
jb
data16
sahf
orb
insl
mov
pop
xchg
mov
sub
lods
jl
sub
iret
cmp
jmp
mov
push
mov
mov
aaa
lcall
jmp
push
mov
lds
push
sahf
or
test
imull
cwtl
daa
adc
and
repz
addr16
jbe
fistl
jns
sub
repz
arpl
loop
push
xor
addr16
stos
mov
mov
cs
dec
push
cmp
lods
leave
mov
lds
loopne
std
xchg
pop
fdivrl
mov
xor
dec
test
mov
push
or
add
pop
mov
pop
lods
jb
mov
dec
mov
cwtl
mov
fldcw
stc
xchg
jb
mov
subl
lock
daa
and
dec
movsb
popa
or
rcl
cmp
inc
into
fnstsw
xchg
jle
inc
mov
push
sbb
sti
lea
cmp
sti
cld
mov
pop
xchg
andb
fistps
mov
jp
jmp
cwtl
jle
adc
ljmp
loopne
fisttpll
or
xor
dec
sub
push
lods
sbb
jne
repnz
lock
fstps
push
cli
sbb
arpl
mov
mov
pop
lret
lcall
mov
test
bts
pusha
mov
jge
fs
leave
stc
cwtl
push
jae
mov
test
jne
inc
adc
mov
test
lods
aaa
or
mov
sti
gs
sti
adc
fwait
out
clc
sub
mov
xlat
adcl
int3
es
ds
and
std
push
mov
fs
repz
and
xchg
push
fbstp
inc
bound
fs
and
call
shrb
jno
int3
adc
fcoml
jno
or
jns
lds
gs
jae
and
cld
xchg
jl
xor
das
dec
and
adc
test
jg
pop
add
insl
cld
push
test
loopne
dec
xor
call
repz
and
adc
dec
inc
ds
mov
add
das
out
xchg
ret
aaa
loop
inc
ds
or
int3
cmp
testb
roll
test
loop
add
sahf
nop
inc
rcrb
mov
cmpsb
xor
aas
cmp
mov
adc
fistpl
add
fstpl
or
sbb
sbb
frstor
and
and
lds
push
push
jns
fwait
adc
pop
fsubrl
clc
pop
and
imul
js
fimuls
push
jae
loop
mov
cld
adc
mov
call
add
push
aas
lret
scas
ljmp
rolb
fistpl
outsl
sub
addr16
and
lea
outsl
sahf
fs
xchg
dec
shrb
cs
fidivrs
lret
cmp
xor
cs
sub
fmull
xor
dec
sub
sub
push
pop
rcll
xor
aam
sbb
sub
cltd
adc
jb
pop
popf
aad
and
cli
lea
mov
int3
xchg
ljmp
push
repnz
outsl
inc
xor
mov
shll
jo
jge
popa
into
mov
or
cwtl
push
pop
sbb
ljmp
pop
xlat
arpl
mov
outsb
sbb
mov
cwtl
shrb
cwtl
repnz
outsl
or
and
fs
mov
sbb
xchg
out
and
xchg
add
daa
add
mov
lock
push
mov
gs
cmp
imul
sarb
sub
cmc
test
in
xor
imul
add
sti
lahf
mov
dec
daa
insb
fstpl
std
lock
cmp
lods
icebp
mov
nop
mull
xorl
cmpsl
push
cmp
lods
out
pop
or
stos
cmpsl
shl
push
loopne
inc
dec
test
inc
js
repz
dec
mov
cmp
dec
ljmp
cltd
push
popf
sub
nop
scas
adc
inc
jl
add
inc
cmpsl
scas
es
xor
inc
stos
inc
pop
mov
pushl
mov
icebp
or
scas
mov
negl
mov
lahf
jmp
fldl
dec
pop
add
and
sbb
sti
outsb
mov
fs
sub
fildl
ret
mov
xchg
sbb
xchg
das
jge
pop
mov
popa
pop
ffreep
inc
shrb
cmp
xor
lret
fnstsw
and
fcmovu
stos
jmp
data16
and
pushf
loop
mov
cmp
fiadds
cmp
xchg
shrl
mov
xor
push
insl
fs
arpl
nop
movsl
add
jmp
idivl
jp
sti
xchg
dec
push
cwtl
jo
test
jns
mov
jmp
jge
cmp
lret
inc
cld
adc
ja
xchg
and
imul
push
xchg
xchg
xor
and
mov
and
cmc
rcrb
cmpsl
dec
add
lret
bswap
pop
pop
jno
xchg
aad
xor
sahf
inc
jg
shll
popa
movsb
je
in
cmpsl
popa
vpaddsw
pop
out
test
aad
cmovbe
leave
jno
xchg
scas
xchg
ret
movsb
push
jmp
jb
cli
test
adc
fwait
sub
sarl
pop
ss
pop
add
sbb
js
imul
adc
sub
aam
cli
fdivl
mov
ljmp
xor
xchg
add
xchg
addr16
pop
mov
bound
daa
popl
xor
push
xchg
stc
xchg
xchg
and
or
pop
xor
bound
test
xor
jmp
dec
and
movsb
or
mov
fsub
sub
shrl
mov
sbb
mov
cmc
mov
mov
add
repnz
std
push
pop
sti
in
daa
jno
mov
sbb
xor
pop
inc
xor
push
ret
sti
xor
mov
scas
out
aaa
fcom
mov
pusha
or
clc
lock
in
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
sub
mov
mov
adc
mov
xor
subl
add
mov
movzbl
sub
mov
mov
xor
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
pushl
call
jmp
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
add
mov
adcl
xor
mov
adcl
add
movzwl
sub
mov
movb
sbb
lea
mov
mov
sbbl
mov
xor
xorl
inc
andl
mov
add
movl
addl
push
movl
mov
push
mov
mov
sub
or
mov
sub
xor
mov
push
sbbl
add
movl
jmp
mov
mov
inc
movl
cmp
jb
movl
cmpl
je
cmpl
jbe
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
xor
addl
add
movl
jmp
mov
addl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
jmp
mov
sbbl
add
addl
movzwl
xorl
mov
sbb
mov
movzwl
orl
xor
add
movzwl
mov
mov
movl
inc
mov
mov
movl
cmp
movl
jne
or
mov
andl
xor
add
inc
mov
cmpl
jl
jmp
push
push
call
cmpl
jb
mov
mov
sub
xor
and
add
adcl
mov
mov
xor
add
movl
cmpl
je
cmpl
jle
jmp
push
push
pushl
push
call
xor
xor
dec
mov
jmp
mov
movl
cmpl
je
cmpl
ja
jmp
push
pushl
pushl
push
call
mov
dec
mov
jmp
movl
neg
movl
movl
mov
mov
adcl
mov
xor
xor
add
mov
mov
mov
je
mov
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
adcl
xor
sub
subl
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
xor
or
inc
mov
jmp
xor
or
mov
xorl
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
push
call
mov
dec
mov
jmp
mov
add
subl
imul
movzwl
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
add
subl
or
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
push
call
cmpl
jb
mov
sbbl
mov
mov
andl
add
addl
xor
mov
sbb
mov
add
mov
movl
add
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
pushl
push
push
call
jmp
mov
mov
adcl
lea
adcl
mov
mov
neg
mov
sub
add
mov
mov
mov
and
mov
xor
movl
add
jne
jmp
subl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
call
jmp
sub
xor
xor
sub
mov
subl
mov
mov
movl
xor
andl
xor
sub
orl
sub
xorl
xor
movl
mov
mov
movl
mov
jmp
andl
xor
or
inc
mov
cmpl
jge
jmp
push
pushl
pushl
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
adcl
xor
addl
xor
sbbl
sub
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
jmp
inc
arpl
and
xchg
sahf
pushf
ja
addr16
lds
pop
addl
insb
xchg
jecxz
adc
lock
xor
out
pop
sbb
dec
pop
inc
jmp
cs
in
iret
jge
jns
dec
jmp
mov
add
pop
flds
jns
mov
dec
pop
jle
pop
pop
xchg
sbb
adc
ficompl
test
adc
pop
leave
mov
xchg
inc
fnstcw
pop
jl
cmp
insb
leave
das
sub
cld
and
das
mov
sub
adc
int
faddl
dec
popa
lds
mov
pop
push
pushf
mov
jg
xchg
push
pop
jp
mov
mov
mov
cmp
in
add
dec
sbb
je
movsb
pop
push
and
in
test
repnz
cld
mov
pop
dec
jne
xchg
repnz
sub
mov
ja,pt
push
fs
xor
out
jbe
faddl
andb
or
aad
out
adc
jg
mov
pop
popf
out
jmp
jbe
cli
add
and
add
test
or
clc
cltd
je
ljmp
rorl
fcomp
int
hlt
xor
pop
xchg
add
or
mov
out
stos
adc
xchg
in
popf
pop
push
imul
scas
cld
sbbb
frstor
mov
and
bound
and
sub
repz
xor
pusha
mov
negl
sub
sbb
mov
insl
mov
sbb
repnz
shll
hlt
push
pop
jp
xchg
add
mov
test
mov
inc
push
data16
mov
sub
mov
pop
es
stos
lods
int
test
push
mov
jp
das
sub
movsb
mov
inc
inc
loope
mov
in
das
and
test
pop
insb
bound
push
mov
adc
jno
push
in
xor
movsl
or
lock
dec
roll
pop
mov
insl
rcll
repz
or
cwtl
sub
push
jno
out
and
adc
dec
ljmp
imul
fisttps
mov
pop
rcr
mov
scas
and
mov
mov
pop
popa
repz
cmp
dec
or
pop
xor
mov
xchg
pop
pop
and
push
mov
sub
int3
insl
ret
push
jl
adc
out
mov
rcll
loopne
pop
mov
andl
mov
pop
cli
jnp
pop
in
stos
mov
jns
testl
pusha
jg
xorb
rcll
jle
push
add
push
sub
cld
dec
leave
fs
scas
inc
mov
push
pop
aas
les
dec
mulb
lds
aaa
rorb
add
and
repnz
aaa
je
sarl
pushf
add
test
es
sti
lock
adc
or
shll
mov
pop
xchg
dec
sbb
jmp
mov
push
dec
xchg
lock
in
push
mov
and
scas
lods
movsl
daa
dec
jbe
lods
push
inc
sub
inc
cli
es
popa
dec
test
dec
push
loopne
test
fisubs
outsl
push
jbe
popa
mov
jnp
mov
scas
pop
stos
xor
mov
dec
outsb
pop
shlb
hlt
mov
in
lock
adc
sub
push
sbbl
mov
daa
aas
mov
push
js
adc
adc
inc
ret
clc
mov
sub
or
cmpl
pusha
pop
inc
xor
out
ror
lret
adc
lods
add
sub
outsl
loope
xchg
clc
stos
mov
pop
or
dec
cmp
adc
sub
sbb
aad
int
movsl
popl
lods
cld
cmp
mov
gs
nop
ljmp
test
imul
xor
call
popf
xchg
clc
mov
add
andb
scas
sti
aad
add
xor
imul
add
shlb
sbb
psllq
ficoms
jg
or
inc
push
push
ret
aam
mov
nop
sbb
adc
and
cli
add
sbb
and
lods
out
xor
dec
cltd
sbb
aad
movsl
inc
nop
dec
add
pop
pop
sbb
mov
sbb
mov
pop
shll
push
xor
stos
loopne
addr16
dec
lea
ret
in
insb
inc
mov
xor
enter
ss
push
jno
call
nop
in
sbb
sar
or
hlt
leave
rorl
dec
popf
lret
xchg
dec
inc
and
jp
test
jge
fwait
loopne
incb
sbb
rolb
xchg
testl
out
inc
bnd
idivb
cmp
jl
push
mov
jbe,pt
int
movsb
mov
xchg
andl
ret
add
xchg
mov
push
sarb
add
cld
addr16
shrl
test
stos
in
adc
sub
xchg
scas
arpl
jmp
jg
xor
lret
mov
daa
icebp
addl
jne
pop
add
mov
xchg
int
orl
call
outsl
push
mov
mov
in
cltd
fnstsw
data16
mov
push
push
sbb
jno
mov
fwait
ljmp
xor
cmpl
ljmp
pop
pop
pop
cmpsl
sbb
inc
mov
mov
pop
or
mov
sub
stos
leave
clc
stos
movsb
in
and
dec
fstl
imull
fsubrs
addr16
sub
mov
cmpsb
mov
aaa
xor
jne
inc
sbb
cmc
adcl
dec
jae
pop
add
or
mov
bound
adc
adc
pop
sar
sbb
sbb
filds
pusha
repnz
jg
test
cmp
mov
adc
ss
pop
mov
movsl
jo
mov
popf
push
ret
ja
sbb
cmp
push
mov
xchg
mov
stc
sti
lods
pop
mov
jae
in
aam
pop
mov
jmp
push
xor
lods
je
adc
call
mov
inc
mov
fwait
push
fisttpll
push
hlt
pop
testl
xor
xchg
outsl
sbb
scas
mov
shrl
sti
cmp
sub
fs
movsl
or
push
and
ljmp
push
mov
test
pop
ss
push
sub
stos
mov
out
and
jnp
sahf
push
int
call
cld
js
mov
out
xchg
daa
mov
lock
les
add
pop
jmp
and
imul
lods
xor
or
and
ror
std
sbb
int
leave
loop
xchg
xor
into
imul
data16
js
dec
or
pop
pop
mov
pushf
push
jle
and
dec
ret
or
pop
xor
dec
xchg
dec
mov
xlat
imul
sbb
mov
xchg
pop
and
insb
and
arpl
fs
mov
gs
lahf
add
js
push
shr
imul
xchg
int
stos
push
lea
leave
movsl
shlb
jae
stc
mov
rclb
sti
ljmp
imul
enter
jno
mov
test
call
scas
ss
cmp
cmpsb
insb
lcall
inc
inc
xor
mov
or
jge
inc
mov
and
cltd
insb
jmp
xchg
cmc
test
setnp
xchg
out
repnz
enter
xor
loop
pop
stos
pop
je
aaa
push
nop
pop
mov
sbb
lods
aaa
shlb
dec
scas
pop
in
call
mov
xchg
lret
cltd
jno
add
adc
ss
sub
dec
pop
inc
jbe
or
rcrb
cli
adc
jbe
mov
push
or
rclb
aad
lret
lcall
jo
mov
add
pusha
jmp
sbb
mov
or
pop
mov
jl
in
mov
imul
mov
pop
add
icebp
je
orb
cltd
aam
mov
mov
ljmp
jns
inc
icebp
js
xlat
or
pushf
js
jo
adcl
or
mov
lds
xchg
subl
inc
inc
pop
fldcw
xor
ja
adc
mov
push
mov
jnp
es
pop
aaa
rolb
js
mov
in
jo
lds
dec
addl
xchg
cld
mov
call
xchg
xchg
push
inc
jg
js
sbb
mov
roll
sarb
cltd
pop
out
fildll
mov
outsb
enter
cmpsl
les
sub
xor
std
and
mov
push
outsb
mov
add
adcl
dec
mov
mov
xor
adc
xchg
jl
adc
aaa
xchg
dec
jp
movsl
jo
dec
sbb
cmp
daa
fisttps
pop
in
movsl
popa
add
es
mov
jns
pop
mov
lds
and
sti
adc
push
in
jne
mov
and
out
roll
mov
lret
test
xorb
adc
mov
ljmp
insb
sarl
mov
xchg
test
push
je
adc
add
fwait
xchg
fsubrp
xorb
inc
movzwl
dec
xor
lret
clc
popf
outsb
test
lret
outsl
sub
aas
ds
cmp
xlat
xor
push
rol
repz
out
subb
jae
add
inc
movsb
sbb
mov
jo
sub
out
cli
stos
add
repnz
cs
add
jae
pusha
jp
mov
and
int3
sub
or
dec
popf
rcll
mov
pusha
dec
push
stos
dec
mov
mov
dec
xchg
lock
mov
nop
xlat
sbb
fnstsw
and
js
rcl
xlat
pop
mov
cmp
xor
lret
mov
aad
mov
and
imul
push
push
scas
fxch
dec
fwait
loop
lret
aas
js
mov
cmp
gs
sub
sbb
stos
cwtl
imul
xor
mov
loopne
les
lcall
push
rclb
ljmp
or
cmpsb
xchg
daa
mov
xor
mov
push
push
popa
push
xchg
mov
push
xlat
inc
sub
sbb
scas
inc
dec
mov
mov
outsb
xchg
fsubrl
xor
pop
inc
add
xchg
adc
pop
sub
imul
and
filds
mov
jne
and
xchg
cld
cli
lds
xor
lods
fwait
sbb
int3
jle
mov
pop
mov
push
sbb
inc
jp
sub
or
bound
or
leave
and
dec
sub
adc
mov
imul
push
jg
in
imul
repnz
pop
cmc
int3
lods
dec
or
dec
pop
cmp
iret
in
cmp
pop
fwait
cmp
mov
pop
rorl
inc
adc
test
pusha
mov
rclb
mov
jmp
pop
mov
ljmp
pop
or
sarb
clc
mov
xchg
into
iret
push
outsb
test
sti
leave
xor
mov
mov
jns
mov
std
jnp
loopne
inc
stos
xor
outsb
push
rorl
jecxz
roll
dec
shrl
adc
das
fwait
in
push
into
ss
movsl
not
jns
repz
inc
push
aaa
fdivrs
mov
out
jmp
es
aaa
clc
clc
out
repnz
inc
imul
jge
and
test
cs
and
pop
sub
mov
scas
ds
js
out
cmp
jecxz
sub
or
push
inc
xchg
and
push
xchg
addb
sub
jae
push
xor
push
movsl
flds
push
gs
mov
js
or
sub
test
cmp
in
rcrb
ds
add
add
xor
dec
xchg
sub
push
scas
mov
xchg
xchg
mov
inc
ret
jns
cmpsl
adc
loope
or
mov
mov
arpl
adc
or
pop
xor
call
shll
push
sub
mov
mov
jmp
inc
iret
mov
cmc
test
ret
outsl
out
outsb
repnz
mov
xchg
das
or
adc
daa
jno
sbb
ss
sti
pop
mov
jecxz
cmp
out
scas
ret
jecxz
sti
int3
pop
ss
jae
pop
jns
pop
cmp
gs
scas
hlt
add
push
es
mov
cltd
popf
das
cwtl
push
and
ret
aaa
sub
fstpl
push
mov
lea
cli
add
cmpsl
jns
cmp
mov
bound
fldt
ret
rol
add
cmc
addr16
scas
add
pop
jg
jecxz
pop
jno
insl
shlb
loopne
add
leave
in
lods
add
lahf
push
or
rorl
mov
fcmovu
cwtl
push
or
xchg
mov
fldl2t
pop
cld
push
jb
fcompl
repz
dec
dec
cli
test
mov
test
dec
jle
stos
imul
push
jle
jl
aam
xor
mov
add
mov
xchg
push
add
movsb
xchg
loopne
test
add
add
iret
fidivrl
cmc
rorl
dec
cmp
in
lock
dec
jmp
mov
jge
in
dec
mov
fucom
push
adc
adc
jmp
adcb
cmp
inc
pop
inc
mov
fldcw
orl
push
fstpl
xchg
popf
inc
hlt
jle
roll
cmpsl
inc
mov
scas
mov
xor
sbb
imul
inc
push
push
cmp
add
xor
fsts
inc
shll
push
nop
scas
aam
popf
pop
aaa
xchg
fmull
xor
insl
nop
aam
int3
inc
cli
mov
push
pop
jmp
jg
jne
hlt
mov
scas
aaa
fimuls
pusha
add
adc
push
lods
das
shr
mov
pop
inc
push
out
ret
and
mov
enter
or
sbb
push
addr16
jnp
push
jl
xor
or
push
push
and
xchg
mov
test
cltd
sub
xchg
or
lret
jbe
push
sbb
sub
and
imul
sbb
xchg
scas
pop
xchg
inc
sti
stc
xchg
inc
int3
sbb
jl
and
jbe
idivb
add
sbbl
ret
dec
sub
jae
jmp
arpl
push
fwait
rcrb
and
in
fildl
out
mov
mov
pop
nop
lock
imulb
mov
pop
mov
add
pushf
lahf
sarb
push
cmp
adc
sahf
sub
lahf
mov
add
dec
mov
sahf
int3
mov
mov
and
mov
pop
aad
in
sti
push
cmpsl
xchg
js
xchg
sbb
fimull
repnz
mov
inc
movsl
sarb
pop
jae
loopne
dec
xchg
notl
out
imul
cmp
xor
pop
push
loop
js
icebp
cs
jmp
xchg
enter
scas
leave
out
and
add
xor
out
add
enter
add
inc
xchg
scas
shl
and
push
fcomps
xchg
dec
add
rcrl
lods
pop
push
sub
adc
iret
daa
out
xor
ja
jb
fnstcw
cmp
addr16
mov
pop
mov
mov
imul
mul
jno
mov
scas
xchg
call
int3
mov
mov
dec
cld
adc
mov
ret
mov
ljmp
add
mov
mov
mov
xor
mov
and
popf
rcrl
xor
sahf
mov
cmpsb
push
test
adc
mov
test
mov
xchg
mov
sub
clc
cmp
push
in
sub
add
sarl
adc
jecxz
out
add
jmp
sbb
mov
in
imul
cmp
outsl
inc
inc
mov
mov
lds
and
push
fmull
cmp
fbstp
stos
int
cli
lds
bound
sub
les
fdivr
lret
or
xchg
cld
xor
pusha
mov
xchg
aam
xchg
mov
call
scas
and
push
add
inc
subl
cmpxchg8b
pop
jo
add
lods
dec
inc
adc
lods
add
jne
fnstcw
rcrl
sub
std
mov
out
xor
jge
fsave
les
mov
cli
mov
xchg
popf
inc
xor
hlt
cltd
mov
xchg
push
stc
hlt
or
insl
int3
xor
and
sub
ljmp
jl
lcall
or
jnp
cmp
pop
sub
jno
jp
xchg
cmc
scas
sbb
sub
jne
imull
insl
adc
cmp
shlb
mov
shll
in
mov
ja
aaa
push
mov
sbb
arpl
dec
rclb
repz
sbb
xor
jo
push
xor
adc
push
das
xchg
mov
stos
ljmp
mov
push
les
push
adc
das
repnz
subb
pop
and
or
add
int3
jecxz
push
stos
andl
xchg
data16
xchg
adc
xchg
vmovsldup
add
xchg
icebp
inc
cmp
aam
fsubrp
jecxz
test
mov
xchg
in
shlb
xchg
xchg
mull
mov
inc
out
push
ss
das
dec
inc
mov
push
push
adc
pusha
jmp
pop
cmp
clc
mov
in
cs
inc
inc
add
cmp
pop
cmp
daa
daa
dec
xchg
lcall
xchg
mov
lods
js
pop
test
inc
dec
jae
lret
daa
sub
mov
loopne
jno,pn
sub
dec
test
data16
push
outsl
mov
mov
dec
pop
cmp
mov
push
adc
sbb
xchg
cmpsl
lret
xchg
dec
push
mov
adc
pop
push
mov
jl
cmp
xorl
sbbb
pop
rcll
add
cltd
iret
int3
test
movsb
sarl
jbe
xor
cwtl
adcb
fwait
in
lahf
test
lods
mov
inc
inc
mov
fwait
lea
adc
loop
outsl
fwait
sub
sbb
mov
fnstcw
mov
int
mull
ss
fidivs
test
aaa
ret
mov
rol
xor
sti
or
pop
and
lcall
negl
sub
scas
pushf
pop
inc
out
stc
cmp
in
xchg
cmpsb
pop
fsubr
out
push
jo
sub
es
scas
cltd
pop
mov
or
pop
fmul
dec
dec
inc
inc
push
mov
mov
xor
cmp
test
sbb
repnz
inc
and
loopne
sub
orb
scas
cltd
in
icebp
lahf
jmp
jbe
ret
xchg
fldenv
cmp
bound
add
jmp
jge
js
pop
mov
movsb
pop
jmp
push
jge
mov
aaa
ret
out
std
fiadds
sub
mov
hlt
imulb
aam
push
mov
push
sub
mov
inc
lcall
pop
aad
pcmpeqb
test
nop
lahf
add
mov
mov
cmp
repnz
push
adc
sbb
add
xchg
aas
inc
xor
ljmp
or
in
push
pusha
sbb
sub
iret
test
xor
xchg
dec
fisubl
iret
fwait
cli
cmp
xor
es
pop
stos
mov
dec
sti
xchg
mov
lock
imul
loopne
imul
pop
xchg
push
add
or
cli
insb
mov
mov
and
pusha
add
push
pop
in
gs
push
sbb
mov
into
ljmp
and
sub
sub
and
jb
into
jb
fldenv
pop
scas
mov
pop
dec
inc
mov
jne
xchg
out
jmp
mov
fwait
mov
repz
cli
sar
mov
mov
and
mov
sbb
pop
cmp
daa
lods
out
sbb
in
xor
jbe
lods
or
push
cmp
push
mov
push
xchg
sub
dec
out
push
mov
stos
cmp
push
and
adc
and
stos
shrb
jecxz
out
pop
sbb
xor
jno
cmp
lea
clc
test
pop
add
sbb
pop
mov
and
xor
mov
roll
rolb
cld
jnp
mov
mov
push
and
or
enter
xchg
add
lret
xor
ljmp
pop
loope
mov
push
cmp
popw
mov
mov
pop
push
sti
movsl
xchg
frstor
cmpb
jbe
add
mov
rcr
cmpsl
lods
nop
xchg
jp
repz
and
xchg
inc
jmp
xlat
adc
add
add
mov
movsb
lea
cmp
lods
pop
mov
jl
push
ret
out
scas
insb
and
fadd
jo
je
fwait
stos
out
pop
cmp
and
sahf
sbb
std
outsl
lods
xlat
adc
cmpsb
movsl
stos
push
ds
sbb
dec
xor
inc
mov
push
jle
sbb
inc
fsubrl
add
in
cwtl
arpl
je
mov
insl
sbbb
fcoms
xchg
lds
xchg
movaps
jg
push
sbb
lds
inc
cmc
orb
stos
gs
addr16
or
ficoml
imul
or
push
add
lods
pop
arpl
xchg
adc
cmp
insl
js
sbb
push
pop
push
scas
das
mov
jle
call
into
add
sbbb
push
pop
dec
lods
ljmp
fildl
inc
mov
lods
scas
test
adc
mov
add
adc
pushf
cs
mov
leave
jnp
mov
scas
mov
mov
push
gs
js
cld
arpl
out
idivl
int
xchg
testl
icebp
jne
cmp
ud1
sahf
push
ljmp
cmp
push
pop
dec
mov
stos
lea
jp
ret
fstl
or
sbb
cmp
aam
mov
test
sub
out
into
mov
imul
cmp
inc
cmp
sbb
push
das
xchg
aas
adc
pusha
push
cli
cmpsl
lret
je
stc
stos
add
clc
gs
inc
inc
es
sbb
adc
xchg
loopne
out
sbb
jo
inc
cld
xchg
pop
lcall
add
je
jmp
push
jns
repnz
das
jecxz
adc
fs
and
mov
pop
xor
mov
xchg
sub
das
sbb
inc
mov
ss
jo
mov
pushf
mov
lret
idiv
jle
ds
or
outsl
or
add
push
sub
daa
jg
fimull
fnstcw
fiaddl
dec
or
xchg
gs
rclb
xor
jmp
cmp
fcoms
and
jne
adc
cmpsb
in
cmp
cmp
mov
jno
mov
xor
or
mov
fcomps
or
xchg
inc
pop
in
jns
lea
roll
push
fbld
push
mov
ja
test
adc
cmp
adcl
xchg
scas
cmp
adc
adc
les
fimuls
popf
adc
sbb
ja
scas
xchg
xchg
fs
mov
loope
icebp
pop
inc
test
out
mov
andl
pop
xchg
xchg
jle
shll
dec
lea
repnz
mov
or
mov
sti
or
pushf
sub
cmp
dec
adc
bound
xchg
mov
mov
stc
cwtl
das
push
aam
je
jmp
test
xor
add
test
jns
pop
inc
popf
add
fnstsw
lods
inc
pop
scas
cmp
and
enter
lret
sbb
xchg
cli
xor
aaa
popa
xchg
lods
and
sub
cmp
jecxz
inc
out
subl
and
inc
mov
and
nop
shlw
xchg
mov
fwait
test
in
pop
sbb
mov
ds
xor
adc
jbe
push
imul
inc
cmp
mov
sub
clc
mov
les
ret
inc
les
or
jle
pop
fwait
or
and
cwtl
add
push
insb
loope
jg
lods
lahf
and
or
adc
scas
dec
testb
test
in
lock
inc
push
mov
push
xchg
xor
inc
mov
popf
sbb
jne
and
or
jns
mov
pop
loopne
repz
nop
nop
inc
xchg
outsl
push
or
or
xor
cmpsl
cmp
imul
mov
pop
sub
loope
test
imul
mov
inc
cwtl
insb
out
clc
xchg
xor
imul
mov
sbb
int3
cli
iret
jb
lret
imul
pop
ret
lretw
test
sub
mov
fdivl
lods
and
mov
loope
pop
lds
mov
pop
out
jge
dec
mov
in
cli
lock
lock
mov
popf
cmpsl
cmc
ja
xor
repnz
cmpsb
or
mov
iret
mov
cwtl
push
sbb
scas
mov
inc
jae
sti
sbb
or
test
dec
push
mov
ficoms
or
xchg
cmpsl
ljmp
in
cld
xchg
mov
inc
jb
mov
cmpsb
inc
testl
test
jecxz
hlt
std
cmp
push
dec
in
sbb
in
dec
shll
xor
sub
add
leave
out
push
inc
fstpl
icebp
shrl
sbb
sub
or
repnz
inc
rorb
jae
xor
jge
gs
or
mov
sbb
dec
add
xor
loope
test
add
sub
bound
std
cmp
xor
pop
cmp
xor
test
mov
mov
in
inc
inc
nop
jp
xor
icebp
xor
icebp
iret
add
jecxz
and
add
sub
popa
pop
or
repnz
xorl
mov
xor
fstpt
lds
lds
aad
or
push
or
pop
mov
gs
ret
xor
movsb
lods
mov
fdivs
sub
xchg
mov
je
ds
jae
mov
call
insl
sti
dec
cwtl
jmp
cmp
push
bound
mov
pop
lret
outsl
outsb
adc
mov
sub
push
ret
js
fdivrl
inc
mov
jle
mov
sahf
incl
enter
sub
mov
imul
jb
mov
es
mov
inc
add
fsts
outsb
sarb
scas
jle
add
mov
jno
dec
test
addl
rol
add
aam
xchg
dec
mov
fs
fimuls
inc
pop
out
leave
adc
sbb
inc
int
mov
test
inc
and
aam
ret
fdivs
pop
mov
jns
dec
cld
sub
jp
into
out
inc
orl
testb
cmp
mov
imul
and
cli
xchg
xchg
andb
pushf
movsb
jle
es
ljmp
dec
jbe
jne
push
rcrl
or
sahf
les
jl
mov
es
push
xor
in
add
xor
inc
push
jp
adc
and
push
lea
mov
xchg
jo
out
mov
adc
arpl
or
testb
cld
sub
cmc
cmpsb
arpl
sarl
cmpl
push
sbb
jecxz
rcrb
lret
sbb
or
xlat
mov
pop
mov
adc
sete
mov
leave
pop
jo
lock
mov
pop
mov
jo
in
test
sub
scas
sub
sub
xchg
dec
test
jns
dec
and
sub
dec
pop
fnstcw
out
xchg
sub
and
ja
dec
mov
mov
push
cmp
mov
jge
jge
fsubrp
cld
lcall
and
push
jmp
add
sarb
js
cld
call
lds
inc
push
add
pushf
sbb
sub
cld
es
jno
int
mov
repnz
outsl
xor
push
loop
cmc
mov
test
cmp
lods
fs
fstpl
stos
mov
insb
pop
push
mov
jbe
mov
push
inc
push
shr
je
xchg
ds
shll
jne
sub
push
push
rcr
xchg
daa
dec
lods
xor
in
push
repz
aam
leave
dec
inc
push
push
ds
and
or
jo
in
jo
nop
lahf
and
add
outsb
adc
jae
inc
dec
pop
cltd
rorb
ds
pop
mulb
out
push
cmp
test
pop
ret
mov
imull
inc
popf
jnp
ljmp
fldt
loopne
aad
cs
adc
loop
flds
xchg
add
scas
dec
push
ficompl
dec
adc
cli
jp
repz
xor
or
sbb
pop
xchg
and
mov
loope
sub
movsl
fsubrl
imul
repz
fstl
enter
inc
ss
outsb
jle
dec
mov
sbb
sub
fisubrl
shlb
xlat
xor
ret
sahf
int
movl
push
sbb
dec
jo
pop
add
jl
jno
adc
fisttpl
repz
data16
cli
xor
push
in
pop
sub
pop
rcll
lock
pushf
push
add
push
in
jp
inc
sti
gs
and
cmp
mov
dec
ret
lock
jns
push
arpl
jg
xchg
fisubs
mov
andl
mov
add
sub
and
cmpsb
daa
insb
rol
outsl
das
fildl
cmpsb
clc
mov
imul
adc
pop
mov
icebp
or
sub
and
ret
insl
fwait
out
xchg
js
aad
movsb
fs
adc
inc
jbe
inc
leave
fwait
and
push
lea
fcompl
fwait
jae
lret
or
inc
adc
xor
sub
cmp
pop
cmp
mov
xor
mov
test
test
test
cwtl
loope
cmp
jp
xchg
xchg
sarb
push
in
pop
in
ret
push
jg
xor
lahf
adc
hlt
faddl
loopne
and
ret
dec
ds
ds
es
test
enter
mov
out
stos
mov
jmp
xchg
jmp
pop
sti
adc
int3
pop
mov
mov
popa
dec
out
in
popa
sbb
xchg
mov
imul
in
test
addr16
jae
shr
stos
mov
adc
js
or
adc
js
or
outsb
add
inc
dec
xchg
fs
aas
aas
lcall
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
jmp
test
pop
sahf
andl
cmp
jno
jl
cmp
jo
mov
mov
add
xchg
insb
fwait
hlt
pop
movsl
iret
dec
mov
lods
and
lcall
roll
ljmp
xchg
cli
sbb
push
sub
or
mov
add
lds
popf
cmp
psubsb
cmp
xchg
stc
into
add
sbb
stc
cmp
and
ret
adc
xchg
lcall
call
push
sbb
dec
dec
fldenv
in
outsl
pop
xchg
lret
loope
nop
nop
xchg
pop
jnp
nop
push
out
shll
jmp
adc
pop
pop
imul
push
fsubrs
push
inc
imul
outsl
cmp
shrl
xchg
inc
cltd
inc
pop
inc
lahf
aam
sub
cld
or
xchg
sub
cmp
in
jae
inc
mov
cmp
and
inc
sub
jp
inc
das
inc
sub
or
jle
out
cmp
push
iret
enter
into
and
jae
xor
cmp
xor
xor
mulb
adcl
gs
scas
stc
in
xor
ljmp
sub
xlat
xor
lods
sahf
loop
or
clc
movsb
jmp
lcall
cmpsl
loopne
add
adc
insl
and
dec
pop
sub
sub
xchg
push
aam
pop
mov
outsb
es
push
xor
cmp
std
sbb
add
add
daa
push
cld
inc
mov
lcall
bndldx
test
xor
inc
test
adc
push
ds
push
sub
call
iret
lret
inc
stc
imul
rcrl
ret
nop
repnz
cmp
in
cmpsl
cmpsl
cmpsb
lret
mov
xor
aad
imul
pop
aam
arpl
jne
aaa
aas
bound
test
add
incb
daa
adc
mov
shrb
cmpl
adc
mov
mov
xchg
scas
push
mov
and
push
call
xor
lret
dec
sarb
or
lcall
movl
add
sti
mov
mov
fwait
sub
dec
and
sub
xchg
jae
imul
push
pop
sbb
or
sub
pop
pushf
xchg
pusha
sub
lret
jmp
push
sbb
subl
ds
push
sub
inc
fwait
iret
insb
pop
test
shll
cli
mov
dec
and
js
rcrb
testb
xor
sub
pop
push
add
sbb
stc
xor
adc
cmpsb
iret
aad
icebp
fidivrs
cld
and
jno
jns
sub
icebp
out
repnz
mov
cmp
rcrb
stc
pushf
loop
push
mov
cmp
in
stos
and
push
push
push
mov
mov
xchg
push
jnp
orb
mov
dec
sbb
pop
add
lds
int3
sbb
icebp
mov
sbb
mov
sbb
shll
inc
add
inc
sub
bt
jmp
mov
gs
jnp
xchg
cmp
jg
adc
pushf
and
add
mov
dec
int3
es
jle
pop
sub
test
imul
dec
ljmp
jae
add
jl
cmp
jo
adc
cmp
mov
sbb
cmpsl
mov
nop
es
mov
shll
mov
jns
fs
jmp
jl
and
push
insb
out
test
ret
lods
lds
jne
fsubl
ds
or
mov
cld
into
lgs
adc
add
aaa
jbe
imul
shlb
outsl
outsb
sub
sbb
jns
and
mov
push
pop
lock
test
add
push
push
popf
cli
or
pop
in
leave
inc
mov
enter
addr16
push
jae
test
jno
mov
enter
dec
jl
pop
adc
sbb
xchg
out
sahf
mov
xchg
add
pop
cmc
and
mov
addr16
inc
add
leave
adc
aam
mov
hlt
ret
movlps
imul
ret
ljmp
or
mulb
shrb
and
arpl
mov
aaa
add
dec
movsl
adcb
and
xchg
pop
pusha
sbb
inc
mov
into
pop
sub
and
imul
outsb
mov
mov
lds
jnp
loop
xchg
add
addr16
jl
jns
push
lds
lret
movsb
mov
sbb
int3
mov
xchg
or
add
mov
out
sbb
je
xor
cld
jecxz
mov
nop
lahf
sbbb
inc
sbb
int
and
testb
popf
mov
int
test
rcll
fldz
push
and
icebp
repz
or
lahf
mov
or
lahf
inc
sbb
clc
dec
push
cmp
or
sbb
add
lods
pop
fwait
sbb
inc
jae
add
or
out
popa
cmpsb
xchg
add
inc
leave
mov
in
mov
imul
pop
mov
adc
lock
jg
dec
xchg
sub
mov
cld
xchg
or
and
jns
stc
mov
cmp
rcrb
push
flds
pop
and
mov
or
subl
fimull
add
mov
fcoml
pusha
or
jge
and
test
sbb
xor
stos
icebp
pop
aad
or
test
addb
cmc
test
hlt
sub
push
sub
mov
push
mov
in
loop
test
inc
or
out
in
loope
js
fstpt
arpl
das
test
in
adc
dec
lahf
jle
nop
lea
add
pop
lock
jl
mov
nop
loop
les
cmp
dec
pop
jge
push
pop
out
push
js
xchg
das
aas
jp
lret
add
outsb
cmp
inc
inc
sub
int3
arpl
mov
decl
lcall
inc
sti
add
pop
dec
aad
ror
ret
xchg
ret
hlt
mov
sub
adc
test
lret
std
cmp
sub
js
lds
sub
enter
into
call
ret
dec
jp
mov
pop
shrb
sub
xchg
cmpb
push
adc
mov
pop
xor
mov
shrb
or
into
aad
push
fld
and
imulb
scas
inc
jecxz
cmpsl
roll
add
add
je
xor
jno
cmc
dec
cmp
pop
andb
mov
pop
sbbl
mov
stos
scas
jnp
inc
imul
sub
sbb
subl
mov
enter
push
inc
popf
xor
lock
fs
jne
vandnps
popf
sti
sti
and
jo
or
xchg
or
sbb
dec
sub
or
inc
cmpsb
and
lods
ret
mov
pop
movsb
in
sub
pop
and
lret
pop
aam
addr16
and
xchg
scas
pushf
in
pop
sub
add
or
int3
popa
xlat
jp
out
fldenv
movsb
pavgb
imul
stc
lcall
pop
cs
outsl
shr
out
mov
and
ret
push
js
rcrb
or
sbb
xorb
repnz
ret
sbb
push
xchg
cmp
aaa
push
dec
test
outsl
jle
adc
mov
add
and
xlat
push
adc
mov
enter
mov
push
jmp
sub
shlb
lcall
sarl
sbb
sbb
es
enter
stos
pop
xchg
jecxz
and
mov
xchg
into
inc
gs
repnz
mov
adc
bound
dec
stos
xor
mov
int3
movsb
std
subl
push
aas
xchg
ret
bswap
pop
rcll
push
mov
cmpb
fsubs
lds
aam
and
xor
mov
xchg
adc
stos
adc
xor
insl
push
jle
or
mov
push
stos
dec
push
adc
andl
adc
mov
sbb
sub
adc
jae
or
outsb
ss
xchg
xlat
mov
hlt
loop
int3
iret
or
or
js
sub
jnp
dec
sub
sarb
xor
inc
cmp
jmp
cmp
mov
jbe
push
pop
dec
dec
add
mov
mov
sub
popf
push
dec
inc
test
shrb
dec
mov
imul
adc
xor
xchg
adc
je
xchg
pop
mov
add
into
and
or
cli
lret
insb
ja
xchg
lods
imul
mov
mov
xchg
sub
push
jnp
popa
and
clc
pop
sarl
fnsave
push
dec
lock
add
sbb
push
dec
mov
stos
xor
jnp
sbbb
push
sahf
in
push
cmp
and
cmc
jnp,pn
jnp
bound
jge
lock
mov
outsl
pop
es
in
insl
addr16
in
jo
mov
test
ljmp
outsl
cmp
cmp
pop
lret
stos
and
fiaddl
mov
cmp
adc
int3
lret
jge
cltd
lret
sub
inc
bound
cmp
imul
mov
and
and
popa
bnd
movsb
add
jne
push
sub
jp
rolb
cmp
fisttps
sub
or
sub
popa
mov
mov
lods
adcb
mov
inc
fdivs
mov
add
pop
and
dec
add
mov
scas
lods
roll
aaa
pop
shll
call
sub
dec
sub
das
pmullw
dec
lahf
add
cld
inc
out
mov
out
or
in
mov
xchg
movsb
xor
pusha
xchg
inc
mov
adc
and
outsl
cmpl
jmp
jnp
mov
sub
cmc
xchg
fisubrl
add
sahf
mov
cmp
push
jbe
sbb
push
sub
pop
mov
or
iret
dec
and
out
jbe
or
mov
psraw
mov
jmp
aas
and
xor
in
push
pusha
jecxz
jae
push
sub
imul
fcmovnb
fwait
adc
sarb
mov
shr
xchg
cmp
sbb
into
mov
or
xor
iret
pop
add
sub
fwait
adc
ficompl
mov
push
test
pop
jno
mov
fldenv
divb
and
cmp
sbb
cmp
fadd
das
jno
add
adc
xchg
cwtl
shll
pop
add
and
ret
push
xchg
jl
scas
push
hlt
sbb
sbb
in
ds
imul
dec
addr16
aaa
add
jp
out
xchg
push
and
es
subb
push
rol
pop
cltd
jp
repz
xor
jmp
jb
imul
fists
sbb
jb
sub
insb
lods
into
daa
mov
mov
and
mov
jle
test
mov
push
scas
mov
adc
inc
dec
loop
push
xchg
and
icebp
lods
adc
jnp
add
testb
sub
cltd
in
std
call
sbb
sub
hlt
dec
in
xchg
out
stos
xor
insb
lcall
cwtl
dec
or
pop
repz
test
push
scas
clc
sbb
cltd
mov
jg
xor
clc
dec
jo
into
aam
or
mov
or
xchg
dec
stos
xchg
mov
outsl
data16
lret
in
hlt
jne
jle
rcrb
rcl
mov
cwtl
or
cwtl
popf
repz
shlb
iret
fistpl
adc
add
push
jb
or
cmp
test
fisttpll
dec
add
into
xchg
sbb
bound
inc
adc
shrl
in
xchg
and
dec
sbb
imul
mov
data16
adc
daa
adc
hlt
je
fwait
pop
stos
pop
jg
hlt
mov
pop
in
out
push
call
push
ret
jo
in
push
scas
lock
sub
outsl
sub
push
mov
pop
xor
mov
mov
inc
insl
in
jle
cmp
stos
or
dec
iret
lret
ficoml
mov
mov
cmc
daa
cwtl
insb
pushl
push
imul
inc
mov
lret
sbb
pop
pop
cltd
in
daa
cmp
jg
stos
mov
mov
push
mov
cli
sub
xchg
mov
mov
jno
push
aam
pop
leave
sbb
sbb
dec
test
mov
mov
jmp
xchg
aas
xchg
aaa
lea
sub
xor
fisttps
adc
rcrb
arpl
std
out
adc
mov
lret
inc
fisubrs
js
jg
mov
xchg
cmp
test
xchg
jae
lock
push
cwtl
aas
mov
dec
dec
imul
inc
jo
stos
fisttpll
in
add
lds
icebp
mov
subb
inc
sub
shrb
add
sub
dec
pushf
mov
xor
and
inc
push
mov
dec
sar
push
xchg
in
out
inc
push
xchg
ss
enter
mov
adc
sub
movsl
jmp
lea
xor
mov
cmpsb
lods
sbb
leave
int3
pop
lret
je
mov
je
lret
orl
pop
das
fbld
mov
push
hlt
leave
into
in
lods
mov
pusha
aad
mov
xor
std
mov
xchg
imul
sahf
iret
fs
mov
push
lds
mov
mov
int
inc
ret
scas
inc
pop
lods
shlb
pop
icebp
and
mov
push
push
mov
int3
xor
fidivl
mov
jo
int
add
scas
xor
fsts
imul
or
jne
roll
ljmp
repz
xor
adcb
clc
push
sub
cmp
jle
jmp
mov
pushf
xchg
bound
gs
xor
cmp
jne
scas
jb
out
hlt
out
ljmp
pop
pop
and
je
pop
fwait
jbe
mov
mov
inc
loope
sub
insb
lock
xor
mov
loop
xchg
dec
cwtl
pop
leave
fbld
mov
dec
scas
xchg
inc
scas
aam
or
jne
push
or
shl
enter
and
das
mov
xchg
sbb
push
test
mov
stos
inc
imul
and
pop
sbb
xchg
mov
dec
test
into
xchg
cmp
pop
ds
push
add
rcrl
and
stos
sar
xchg
sub
nop
dec
andb
lods
in
and
rcrb
mov
test
dec
stos
or
mov
ja
inc
push
shrb
and
cmp
sub
hlt
push
out
pop
sub
dec
ret
sbb
and
push
mov
loope
bound
es
fs
in
mov
rcll
scas
arpl
and
int3
jmp
push
mov
inc
mov
in
and
iret
sbb
enter
cld
mov
xlat
mov
pushf
pop
sbb
pop
int3
repz
ds
mov
fadd
addr16
scas
pop
push
pop
clc
inc
loopne
sub
cmp
xchg
jmp
jmp
cmp
shr
repnz
jle
cltd
imul
scas
sub
pop
out
gs
add
cltd
or
insb
mov
mov
movsl
ret
xlat
mov
pop
push
mov
stos
cmp
data16
iret
xchg
jmp
pop
gs
or
data16
xchg
int3
dec
inc
dec
popa
int3
aas
pop
movsl
shlb
jno
and
rcrb
cltd
xchg
movsb
xor
xchg
mov
pop
xlat
fidivrl
xchg
lahf
xor
ss
dec
sarl
out
mov
xchg
insb
xchg
dec
fwait
adc
mull
cs
add
and
adc
push
add
loopne
pop
mov
mov
pop
ret
push
jmp
and
test
jb
loope
pop
push
inc
int
nop
js
push
pop
cmp
scas
dec
pop
jno
shll
ret
mov
dec
in
stos
jcxz
es
dec
je
mov
adc
mov
aas
cld
xchg
scas
jle
fidivs
add
mov
test
inc
xchg
shll
mov
xchg
lds
adc
mov
stc
lret
mov
adc
sub
mov
imul
mov
xor
test
xor
xchg
iret
mov
int3
jne
in
sbb
repnz
sub
mov
dec
dec
pop
pushf
fisubrl
cltd
mov
in
cmpsl
cli
adc
lea
xchg
sub
mov
cmp
test
xchg
scas
repnz
mov
jp
das
ljmp
jb
test
adc
mov
test
les
inc
int
inc
dec
mov
mov
mov
sti
push
loope
nop
and
xchg
mov
inc
cmp
cs
inc
sbb
push
xlat
sets
push
inc
movsb
leave
test
in
xlat
mov
imulb
xchg
pop
cld
int3
shll
out
lcall
push
mov
dec
dec
push
inc
dec
pop
mov
out
insb
add
lock
shl
lock
adc
mov
cs
gs
dec
dec
xor
lods
mov
leave
std
mov
xrelease
stc
or
sbb
cli
in
int3
ror
jne
push
mov
dec
jecxz
or
add
stos
mov
fstpl
scas
cwtl
daa
jns
daa
les
or
push
test
dec
pop
rclb
push
sub
mov
jp
shlb
shl
adc
sbb
xorb
xchg
inc
push
cmp
in
and
push
inc
push
jge
out
push
adc
outsl
into
push
mov
jge
mov
mov
loopne
mov
cmp
mov
adc
add
pusha
test
pop
into
mov
or
out
mov
popf
cmp
mov
jbe
mov
or
aaa
jecxz
mov
dec
mov
fdivr
ss
fisttpll
mov
inc
jge
ret
lret
xchg
mov
orl
ret
std
std
pop
icebp
or
mov
stc
out
popa
mov
cwtl
xor
cmpsb
dec
addl
data16
js
jbe
mov
cmp
mov
lea
mov
xor
aad
lock
sbb
jbe
lret
lret
dec
fdivrp
test
cmpsl
data16
pop
std
int
or
addl
or
push
pop
out
shll
cmp
cli
adcl
loop
dec
hlt
and
pop
mov
ret
dec
sbb
movsb
in
adc
xchg
dec
test
rcll
inc
rorb
mov
cld
mov
test
les
movd
push
dec
loope
ret
sub
movsl
or
pop
xchg
mov
mov
pop
fwait
pusha
sbb
jecxz
ss
popa
jmp
mov
bound
in
js
pop
outsb
push
sbb
push
lds
jns
inc
push
test
or
aam
pop
imul
repnz
fwait
sbb
jno
in
sbb
or
out
inc
inc
mov
daa
int
jbe
mov
sub
dec
xchg
or
in
aad
xor
adc
movsl
dec
push
and
leave
inc
sarb
aam
dec
or
jb
movsl
lahf
ret
pop
out
xor
cli
in
sbb
sbb
cmpsb
add
nop
aaa
cmp
scas
out
outsb
inc
xchg
cmpsl
fists
aas
stc
ret
inc
mov
rclb
dec
daa
in
pop
dec
je
jmp
shlb
pop
fstpt
cmc
ds
fwait
push
cli
hlt
jbe
loope
mov
out
jge
sub
loop
scas
xchg
and
push
or
pop
cli
pop
mov
pop
lock
push
and
fimuls
pop
dec
imul
sub
lret
fdivl
dec
lahf
dec
cmc
stc
add
js
sti
mov
ja
loopne
out
pop
sbb
mov
scas
mov
enter
jb
xchg
xor
aas
mov
cmpsb
mov
push
mov
scas
cmc
cs
rolb
and
mov
sbb
push
or
pop
movsl
cmpsl
pop
decb
test
pop
sbb
outsl
notl
mov
lods
sbb
cmp
mov
push
pop
mov
adc
mov
shl
clc
lcall
repnz
dec
lods
mov
outsl
sti
pop
ret
sbb
sbb
and
add
gs
mov
mov
jbe
rorb
repz
das
mov
inc
popf
aaa
fbld
popa
jl
icebp
xchg
dec
scas
icebp
mov
adc
sub
dec
sub
jbe
negb
xor
adc
or
or
jno
xor
into
jl
add
shll
xchg
shl
fsubrs
decl
popa
jle
stos
sbb
cmp
iret
mov
push
ret
inc
jl
sbb
roll
in
inc
sbb
xor
and
mov
das
das
jno
push
xchg
mov
and
es
outsl
popa
lods
adc
stos
dec
xor
aas
loopne
xchg
add
enter
and
push
pop
andl
dec
in
ret
jge
xor
push
jae
into
sbb
jne
xchg
add
es
loope
nop
shl
xor
sub
xchg
dec
cwtl
imul
inc
out
test
mov
pop
dec
and
xlat
in
mov
mov
mov
sub
jne
js,pt
sbb
loope
or
mov
jle
or
sub
rcrl
lahf
xchg
lds
mov
dec
bound
mov
sti
orb
sub
push
cmp
stos
xchg
jne
mov
pop
test
adc
pop
xor
es
daa
push
or
inc
repz
in
fbstp
mov
nop
inc
mov
or
clc
sbb
pop
jo
sti
scas
sbb
and
dec
les
add
gs
sub
cli
mov
test
xor
inc
mul
cwtl
call
fdivr
mov
mov
ljmp
jbe
gs
shrb
jle
outsl
scas
mov
xorb
das
jecxz
repz
out
notl
ret
pusha
sub
lods
inc
mov
inc
shlb
insl
xor
pop
loopne
inc
xorb
jo
add
or
xor
loope
iret
mov
lock
lods
ja
mov
sbb
mov
daa
mov
cmp
sub
insb
int
fidivl
sbb
push
sub
adc
and
sbb
sbb
lahf
sub
rcll
lret
sti
insb
or
lds
xor
enter
mov
pop
xchg
into
mov
cmc
sub
stos
sahf
outsb
and
mov
xor
sub
adc
je
sbb
aad
jl
add
roll
popf
aas
cmpsl
push
daa
push
mov
jno
xor
clc
es
lret
fsubl
jmp
hlt
mov
dec
dec
mov
xor
andb
mov
test
pop
jno
shlb
mov
imul
adc
jp
movsl
pop
je
test
test
jns
lock
sbb
jge
lcall
cmpsb
fs
icebp
imull
cmp
pop
mov
enter
fs
lcall
fs
pop
mov
push
adcl
mov
dec
pop
xchg
vorps
testb
jg
scas
gs
iret
fidivrl
in
out
out
sbbl
jno
cmp
vmovhps
loop
push
lods
mov
xor
aas
rep
in
push
mov
popf
cmp
enter
test
pop
aas
sbb
push
inc
daa
cld
lret
pop
movsb
jns
cmp
xchg
js
lods
data16
jae
dec
push
negl
int3
mov
inc
fdiv
aam
jns
popf
mov
arpl
sub
cmp
push
bound
mov
inc
int
mov
insl
mov
fwait
cs
sbb
inc
je
mov
xchg
mov
fs
mov
repz
cmpsb
push
mulb
pop
lret
cmc
add
lea
dec
inc
rcll
jns
xchg
ret
push
or
jl
xchg
sbb
jle
add
and
mov
push
sub
inc
pop
mov
lock
jg
cmpsl
ljmp
and
cli
xchg
mov
lahf
cmp
inc
outsl
cmpsb
push
jne
pusha
or
cmpsl
insb
add
js
add
repnz
outsl
xchg
pop
push
je
adc
push
lock
loopne
bound
push
data16
stc
mov
add
adc
jo
xor
sub
xor
adc
sbb
notl
pushf
out
mov
ja
cmp
pushf
adc
imul
lret
xchg
push
pop
movsl
ljmp
lock
fdivp
clc
cmp
add
add
xchg
push
rorl
in
sub
dec
cmp
push
adc
in
inc
adc
arpl
xor
aam
cli
adc
pop
int3
push
fwait
cmp
jnp
shlb
cmc
push
push
enter
xchg
fwait
jmp
or
sbb
push
adc
ficoml
fs
scas
ss
sbb
repz
sub
outsb
out
inc
mov
jle
jecxz
mov
sahf
lds
adcb
call
popf
inc
out
mov
fstp
lahf
sti
add
fmulp
sub
and
sub
into
xor
mov
cmp
dec
ret
mov
ds
add
fisubrs
xchg
mov
sub
test
repz
js
popf
push
xchg
aad
push
push
fldl
pop
pop
mov
or
pop
fst
rcrb
out
xor
imul
les
mov
popf
int
add
sub
imul
inc
loopne
jnp
pop
inc
jne
nop
pop
jecxz
fnop
and
addr16
aad
or
add
inc
jae
inc
mov
jge
pop
nop
add
out
adc
int
out
cltd
xor
popa
dec
xchg
addr16
cmp
lds
iret
mov
lods
mov
xchg
shll
scas
jb
aam
cmc
push
xor
into
push
dec
out
xor
xchg
push
scas
std
test
je
cmpsl
adc
nop
fwait
mov
lret
ret
lds
cwtl
daa
int
subb
les
inc
xor
adc
push
loopne
mov
call
das
jne
and
stos
out
icebp
jecxz
hlt
hlt
setno
sbb
outsl
push
mov
push
inc
and
aas
add
mov
xlat
and
xor
jp
sub
add
arpl
jnp
jo
sti
sub
mov
into
movsl
jbe
dec
jnp
mov
icebp
lcall
mov
dec
add
repz
inc
mov
imul
movsl
sbb
adc
je
dec
dec
negl
add
jmp
lods
mov
dec
mov
rcr
jb
leave
mov
jmp
fsts
mov
cld
insl
aam
mov
xor
jae
pop
sub
pop
and
push
in
movsb
aad
mov
into
jmp
adc
fwait
negl
mov
sahf
or
cs
mov
dec
push
or
movsl
ljmp
jecxz
xor
jg
mov
aaa
pop
push
cmp
jecxz
add
mov
cmp
cltd
adcb
mov
out
pop
push
in
sbb
adc
loop
inc
mov
sbb
idivb
adc
repz
mov
or
sub
jle
imul
xchg
call
aam
push
adcb
icebp
xchg
jl
push
inc
push
push
jl
andl
cmp
cmp
and
clc
xor
fnstcw
mov
cwtl
jno
or
adc
sbb
xchg
pop
pop
sub
movb
add
pop
jl
xor
jne
fadds
adc
test
cmp
or
shll
fbstp
cmp
imul
cmp
int
pop
or
jae
xor
adc
dec
cmp
sub
xor
pop
insl
pop
cs
cmp
dec
cmp
sub
xchg
cli
jp
inc
lds
inc
shr
mov
mov
movsb
xor
mov
xor
cmpsl
or
cltd
in
or
sub
inc
xchg
push
xlat
sbb
or
pop
in
nop
test
ja
fwait
add
push
js
inc
cwtl
aam
mov
test
inc
jno
jbe
notl
xlat
fldcw
pop
mov
or
fidivrs
add
call
push
dec
xor
mov
mov
jb
adcb
add
pop
outsb
clc
xorb
cli
pop
mov
outsl
into
pusha
push
rclb
lcall
push
mov
cmp
sbb
adc
in
enter
lock
push
mov
daa
ficomps
jnp
xor
aad
inc
pushf
pop
insb
mov
daa
cmp
mov
int
imul
jl
mov
push
dec
push
mov
mov
pop
or
lds
inc
and
jmp
sbb
add
mov
test
scas
sbb
jno
pop
jb
test
xchg
mov
cli
std
xchg
addr16
aas
or
and
push
and
cmc
inc
jne
leave
aad
xor
add
dec
aaa
jmp
lcall
pop
xchg
or
xchg
dec
or
lods
idivl
shr
inc
xchg
sub
mov
sub
cmp
or
jmp
dec
push
andl
adc
add
das
inc
movsb
fmul
adc
mov
dec
xor
cld
out
sub
sbb
in
fnstsw
mov
pop
outsl
hlt
mov
into
sahf
mov
push
les
or
sbb
jl
cli
pushf
in
or
out
std
cmp
xchg
jmp
pusha
sahf
jge
mov
mov
icebp
mov
sti
or
mov
in
sarb
js
sbb
scas
arpl
shr
sarl
dec
inc
lods
and
cmp
cmp
popa
xchg
stos
ret
cwtl
inc
mov
and
ret
int
stos
xchg
and
mov
mov
sarl
inc
mov
imul
out
outsl
int
jge
ljmp
loope
dec
int3
push
ficomps
outsl
add
movsl
and
sub
lret
pushf
out
pop
mov
dec
xchg
cmp
loopne
xchg
mov
and
mulb
inc
mov
cmp
pusha
out
je
mov
or
test
stos
jecxz
push
sbb
mov
ret
xlat
fdivrs
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
jmp
adc
jl
mov
bound
sbb
sub
sbb
addl
hlt
dec
xchg
mov
movsl
imul
pop
xchg
les
lods
je
lds
test
scas
cmpsb
fsubl
xchg
loop
inc
sbb
jne
add
stc
std
add
and
into
cmp
clc
and
xor
movsb
jmp
test
xlat
mov
out
add
fidivrs
enter
push
rorb
bndstx
push
outsl
idivl
int
mov
lret
out
shl
fdivrs
dec
xor
bound
in
pop
xchg
shrb
sub
test
fdivp
cli
mov
pop
jecxz
jbe
mov
mov
and
adc
cld
in
fdivrp
mov
jae
lods
and
fs
ljmp
cli
out
outsl
mov
orb
int
push
pusha
jb
pusha
pop
ljmp
aas
push
mov
jo
inc
push
sub
push
inc
and
sub
stos
push
test
out
sar
jmp
jns
divb
sbb
mov
out
mov
dec
adc
fiadds
sbb
inc
rorl
rcr
adc
fsubl
jno
loop
aad
adc
xchg
mulb
cmp
push
and
add
sub
mov
push
xor
stos
adc
push
mov
cmp
scas
movsl
repnz
outsl
mov
out
mov
sub
and
jmp
loopne
insb
iret
push
inc
mov
bswap
leave
push
inc
ja
loopne
repz
jne
loope
shll
xchg
nop
or
dec
pop
leave
in
scas
js
sbb
cmc
loopne
movsl
test
push
jb
ljmp
push
fidivrl
and
xor
xchg
inc
lcall
sahf
dec
and
and
lcall
popf
mov
push
or
cmpsl
je
push
scas
adc
and
mov
dec
mov
dec
orl
pop
sbb
sahf
dec
hlt
and
sub
and
and
out
fidivrs
jg
adc
mov
lahf
aam
add
dec
mov
outsl
mov
repnz
xchg
aad
outsb
mov
dec
enter
xor
dec
aas
mov
stos
in
and
cmp
pop
dec
mov
lods
xchg
out
cmp
popa
xchg
mov
sahf
inc
or
pop
icebp
sub
pop
xlat
in
sub
jmp
sbb
loope
dec
lods
call
cmp
out
push
xor
adc
add
repnz
jmp
mov
cmp
pop
and
mov
dec
je
test
das
jp
jecxz
out
mov
sub
imul
fidivrl
sbb
ss
cli
add
mov
add
push
fmul
into
xor
aas
xor
das
mov
pop
rorb
aaa
insl
xor
roll
call
or
mov
pop
rolb
std
jae
ljmp
arpl
ficoms
mov
mov
or
pop
cmp
or
dec
jge
mov
leave
ret
bound
daa
sahf
xchg
rorl
pop
cwtl
sbb
mov
js
je
jge
sub
daa
sub
mov
jmp
adc
lcall
mov
add
xor
cvtpi2ps
and
cmp
dec
pusha
stos
inc
popa
push
and
insb
xlat
push
inc
adc
imul
adc
testl
cmp
into
int
inc
repz
shll
in
pushf
lock
mov
mov
jge
adc
inc
adc
inc
xorl
inc
mov
push
or
mov
fwait
jno
or
adc
jne
sbb
or
js
add
repnz
jo
ror
mull
xchg
jl
xchg
and
outsl
or
lcall
push
je
outsl
repnz
jb
gs
iret
pop
cmp
fmulp
pop
scas
lcall
mov
jnp
popf
cs
mov
repz
sbb
test
sub
mov
loop
pop
or
or
in
push
test
std
icebp
jp
cmp
mov
hlt
out
addr16
icebp
int3
push
mov
sub
rorl
dec
jno
dec
test
js
and
jbe
repz
cld
mov
xor
push
mov
jae
pop
lret
stc
xor
or
data16
or
xchg
add
popa
jp
movsb
sbb
dec
pushf
push
ds
xlat
sub
and
xor
std
jbe,pt
xchg
pop
mov
xorl
adc
gs
add
adcb
jg
loope
in
das
mov
aam
sbb
in
cmp
imul
scas
lea
xchg
scas
fistl
xor
fldt
jp
push
push
lods
inc
mov
pop
scas
fsubrl
out
adc
dec
lock
stos
in
xor
xchg
pop
nop
mov
sbb
jp
out
add
out
lret
imul
test
adc
popf
sbb
xlat
test
jge
xor
or
push
es
fnsave
gs
xor
cli
mov
test
add
sbb
push
xchg
lods
mov
mov
shr
cmpsb
fmuls
in
mov
outsb
pop
sub
fmull
sbb
cltd
jg
xchg
scas
pop
push
es
mov
test
hlt
and
dec
mov
imul
bnd
pop
lock
aad
or
sahf
lock
add
roll
mov
mov
arpl
jge
lock
sub
cmpsb
loopne
and
push
xor
push
push
xor
movsl
push
pop
outsb
adcb
adc
and
jo
xlat
mov
dec
mov
aam
loopne
jb
popf
aas
lock
hlt
or
dec
jae
mov
aam
sub
pop
cli
jecxz
push
loope
in
es
xchg
in
in
inc
dec
cmp
dec
sbb
xchg
mov
inc
arpl
add
fcmovnb
adc
xor
or
sub
lea
in
pop
movsl
addr16
lock
push
xchg
add
int
test
in
lods
mov
inc
push
add
inc
inc
fisttpll
mov
lods
sahf
shrb
movsl
lods
outsb
push
cmp
loope
or
adc
repz
repnz
lcall
test
or
rorl
stos
sbb
leave
lret
lods
ret
ret
push
adc
pop
rorl
rorl
dec
mov
sub
or
mov
adc
sub
in
inc
mov
pop
xorl
insb
sbb
lock
and
mov
addl
pop
addb
rol
dec
ja
daa
pop
jl
cwtl
cmpsb
int
scas
add
inc
add
dec
and
lock
mov
cwtl
pop
bound
out
aas
push
cwtl
sub
lret
add
cwtl
dec
cwtl
jnp
xor
xchg
mov
mov
in
jp
call
imul
lcall
mov
in
mov
out
mov
or
mov
sbb
cli
clc
cwtl
adc
rorl
pop
mov
fsubs
xchg
adc
jp
stos
enter
add
cmc
fstpl
cmp
mov
pop
and
jo
js
dec
mov
mov
aaa
mov
mov
call
lock
sti
adcl
adc
movsl
sbb
and
outsb
stc
cltd
mov
jecxz
loopne
cltd
mov
int3
push
mov
push
jns
cltd
aaa
mov
rolb
add
mov
sahf
jo
dec
rcrl
xchg
jg
sbb
cmp
jbe
mov
adc
xchg
mov
lret
js
pop
sbb
adc
lods
lahf
xor
and
test
inc
fldl
xchg
push
add
jbe
andb
cmp
test
jle
cmp
je
inc
dec
pusha
fnstcw
stc
jle
leave
les
sbb
sahf
aam
aas
xorl
xlat
mov
adc
xchg
mov
inc
sbb
rcl
add
lret
es
adc
xor
lcall
sub
sub
and
xor
addb
inc
add
addr16
psubw
cs
jge
ss
stc
and
pop
xchg
lea
mov
je
leave
add
xchg
cmpsb
js
pop
lods
mov
sbb
dec
mov
mov
xchg
mov
in
pop
shrl
mov
repz
aas
dec
fwait
pop
add
ret
jg
iret
pop
sbb
mov
cmpl
int3
fbstp
das
and
pop
mov
inc
jge
imul
mov
lods
add
pop
pushf
dec
cld
rclb
cmova
xchg
out
cmp
cmp
cwtl
aam
dec
pop
orb
enter
mov
inc
xor
stos
outsl
into
mov
subl
loop
xchg
mov
les
sub
xor
insb
int
je
insl
adc
movsl
adc
and
jb
ret
enter
inc
pcmpgtd
mov
sub
push
or
fistl
out
sbb
add
push
cltd
jae
cmc
pop
cmp
push
inc
mov
lock
xchg
sbbl
jnp
pop
inc
movsb
cwtl
sbb
sbb
xor
into
in
mov
sti
jbe
stc
xchg
gs
xor
iret
lcall
mov
dec
pop
pop
pop
mov
jg
stos
pusha
testb
test
push
out
fldcw
mov
call
dec
jne
lods
sub
rcll
dec
push
xchg
push
mov
pop
mov
addl
mov
mov
push
mov
mov
sub
mov
adc
rclb
inc
je,pt
push
filds
aam
out
or
mov
sbb
mov
or
sbb
es
gs
and
ret
xchg
pop
pop
icebp
jg
xchg
les
div
sti
jae
cmc
sbb
dec
test
scas
add
pop
jns
inc
xor
mov
and
leave
jmp
es
cld
loopne
sbb
pushf
push
inc
mov
andnps
pushf
stos
repz
imul
adc
cld
hlt
inc
push
pop
pop
mov
into
rcr
or
adc
pop
push
insl
jecxz
push
pop
leave
sub
das
mov
insb
fisubrl
pushf
mov
dec
sub
xchg
fildll
aas
inc
push
arpl
in
mov
es
cwtl
and
push
mov
jg
sub
jp
cmc
adcl
sahf
jge
xchg
mov
rol
xchg
bound
mov
ja
into
sub
lea
stc
mov
sahf
xchg
hlt
or
xchg
xor
mov
mov
test
ret
lret
stos
xchg
or
call
imulb
cmpsl
and
sbb
insb
ss
adc
cwtl
xlat
into
jnp
lea
out
inc
fsubrs
or
mov
stc
lods
repz
enter
call
cmp
xchg
dec
dec
pop
cmp
das
pop
dec
pop
xor
push
mov
std
push
fdivrs
ja
loope
cmp
cltd
jb
dec
xor
ret
sbb
movsl
hlt
mov
rclb
call
mov
xlat
dec
das
es
and
flds
jecxz
stos
mov
out
push
mov
fwait
jb
or
inc
lret
bnd
inc
repnz
std
mov
iret
add
xchg
xor
adc
jp
mov
push
pushf
mov
push
mov
mov
das
fwait
or
mov
xor
push
sub
sbb
idiv
sarl
xchg
pop
push
pop
xchg
in
mov
or
outsl
inc
outsl
mov
shl
aad
mov
xchg
sbb
mov
pop
fstpl
dec
das
shrb
mov
test
mov
paddusw
in
test
test
insl
inc
nop
test
inc
inc
ret
shlb
dec
lods
xor
dec
leave
sbb
inc
xor
lock
fs
dec
ficoms
aad
sbb
mov
push
mov
sub
std
ret
xor
int
pop
mov
sub
ja
pusha
add
or
mov
inc
push
push
mov
lret
lods
fadds
stc
ds
mov
into
scas
lahf
push
testl
pusha
insl
ret
std
shll
rcl
cmp
aaa
pop
or
mov
jecxz
jne
mov
and
sahf
repz
or
adc
pop
push
js
inc
mov
push
cmp
inc
sub
pop
int
je
loopne
push
out
jg
pushf
adc
dec
cmp
pop
in
pop
mov
xor
mov
gs
cwtl
lahf
cmp
insl
add
rorb
pop
xchg
sarb
jge,pt
out
mov
hlt
div
jns
push
aas
in
enter
dec
and
aas
outsl
out
insb
ret
push
cmp
xchg
lock
test
mov
mov
xchg
les
add
fs
sbb
rolb
jecxz
xchg
pushf
sub
outsl
rcll
mov
insl
loop
cmpl
and
add
adc
push
cltd
mov
sbb
cwtl
lock
out
xor
jecxz
xchg
in
cltd
adc
test
jle
dec
addr16
in
clc
insb
xchg
pop
enter
pop
in
in
and
fs
in
xchg
aad
addl
call
cmc
sbb
cmp
in
sbb
cmp
mov
shll
shr
pop
movsb
or
push
adc
mov
cli
sub
adc
mov
cmp
ljmp
imul
into
pop
sbb
testb
mov
dec
ja
hlt
push
inc
rorl
in
and
lahf
inc
add
add
sbb
js
pop
aas
pop
mov
ds
pop
sbb
in
fstps
xchg
jns
dec
decb
loopne
xchg
gs
dec
dec
jb
pop
fwait
mov
push
and
mov
mov
out
push
mov
adc
push
stc
sbb
inc
or
call
jno
insl
cmp
int3
add
pop
push
lods
rol
cli
call
test
mov
and
lods
mov
sub
lock
inc
inc
sbb
hlt
sub
int3
mov
mov
data16
xchg
xlat
mov
aam
mov
sub
arpl
push
pusha
out
inc
inc
pop
orl
mov
mov
xor
mov
jle
xor
out
jmp
push
prefetch
dec
mov
ror
and
jbe
in
pop
ss
lret
sub
stos
sbb
mov
mov
mov
mov
mov
dec
mov
mov
adc
cmp
ror
roll
cmp
jo
sbb
leave
lret
lock
cmpsl
add
cmp
es
push
addr16
adc
inc
or
ljmp
mov
stos
imul
sub
and
sbb
scas
in
lret
aaa
cmp
cmc
cmc
icebp
arpl
bound
out
js
mov
mov
pop
in
loope
push
sub
mov
jg
or
repnz
popf
or
nop
push
pop
ret
adc
xchg
jge
jae
int3
xor
jmp
adc
je
jae
popa
cmp
outsb
shlb
fisubrs
sbbb
push
cs
adc
das
sub
cmp
xor
add
cltd
lock
movsl
outsl
or
sarl
shrb
add
fs
mov
xlat
mov
pop
cs
push
cmp
dec
lea
pop
jecxz
repnz
push
dec
xor
andl
jg
dec
push
push
xchg
shlb
pop
mov
dec
dec
ret
xlat
fwait
xchg
int
push
push
mov
cli
das
addb
aaa
dec
sub
loope
arpl
iret
push
aad
sbb
stc
add
mov
shl
push
jge
fsubl
mov
jns
xor
adc
fwait
adc
lock
jl
jns
into
inc
clc
loope
bound
inc
loopne
mov
loopne
push
lret
mov
and
aam
in
lret
pushf
mov
dec
jns
mov
adc
inc
mov
sbb
popa
add
lea
fwait
pop
mov
pushf
sarb
sbb
xlat
aaa
mov
cmp
jg
jmp
push
add
sbb
subl
sbb
push
fldenv
rcrl
adc
movsb
outsl
ljmp
arpl
lods
xchg
inc
les
dec
add
neg
mov
pop
jle
pop
in
roll
sub
dec
adc
or
movsl
jmp
sub
add
loop
out
pop
loope
iret
sbb
fs
lret
sub
mov
mov
cmp
stos
bnd
iret
repnz
push
pop
ret
sbb
push
dec
pop
mov
jbe
repz
xchg
cmp
data16
pop
push
adc
into
arpl
inc
xchg
mov
std
sbb
mov
jnp
dec
in
xchg
fs
fistl
outsb
xor
sub
cmp
scas
cli
xchg
ja
popa
fdiv
jge
add
inc
mov
mov
dec
pop
mov
dec
xchg
mov
test
and
out
pop
test
call
dec
ffree
arpl
jns
sbb
repnz
xor
test
mov
stos
adc
stos
ss
jmp
fisttps
mov
gs
push
cmpsl
les
hlt
cmp
movsl
lods
das
test
add
movsb
mov
add
cmp
mov
out
ret
scas
jp
sbbb
adcl
test
jo
push
rorl
jae
and
call
push
jp
add
push
jno
lcall
cmp
jnp
add
mov
shl
xor
and
cmp
and
jne
push
imul
adc
mov
lahf
cwtl
lock
shr
jl
cltd
insb
sbb
and
icebp
les
sub
sbb
outsl
lcall
shlb
pop
dec
cmpl
mov
pop
jecxz
pop
inc
adc
ja
sbb
fidivrl
out
repz
dec
inc
movsb
imul
aas
mov
in
and
sbb
inc
jp
addr16
repnz
dec
pop
pop
nop
orb
mov
dec
jne
in
pop
mov
arpl
mov
lret
cmpl
nop
xor
fsts
push
mov
add
pop
add
jbe
fisttps
in
cmp
clc
dec
xchg
mov
shrl
sbb
or
into
or
jg
adc
ljmp
and
and
sahf
jne
xchg
add
inc
rcrb
push
fldcw
clc
inc
sbb
push
cmp
rcrl
mov
push
test
mov
popa
inc
fiadds
push
jle
mov
and
addl
pop
leave
push
ja
push
xlat
add
sahf
jp
icebp
mov
fisubrl
das
or
and
imul
sub
stos
add
mov
clc
loop
xchg
push
mov
pushf
sbb
fcom
push
mov
pop
jns
adc
cwtl
rcll
test
dec
and
rclb
jp
rcll
divb
pop
pop
inc
ret
or
int3
outsb
push
scas
sysenter
lss
cmp
punpcklwd
or
das
jae
movsb
insb
js
push
bound
mov
bswap
out
mov
add
das
imull
je
cwtl
xchg
subb
adc
or
inc
insb
lcall
shl
and
dec
sbb
gs
stos
movsb
dec
int3
scas
add
and
push
jb
loop
push
scas
mov
jmp
inc
mov
lea
movsb
andl
mov
cmp
gs
inc
add
pop
es
push
or
dec
xor
sbb
mov
or
stos
fldl
inc
xchg
pop
jle
popl
inc
mov
std
icebp
cmp
push
inc
add
call
popa
cmp
andb
cli
dec
movsl
xchg
fdivl
js
aaa
inc
sub
mov
push
ss
js
outsl
sbb
and
mov
js
mov
add
inc
stos
push
push
gs
jno
mov
ds
push
scas
sub
push
sub
out
inc
dec
mov
icebp
ffreep
pop
sub
sub
stos
pusha
cmpsb
out
ljmp
cld
cwtl
enter
cmpsl
addr16
enter
in
out
sbb
mov
mov
cld
sub
imul
imul
or
in
adc
lahf
jb
andb
jg
ret
cmp
fcompl
adc
fdivs
or
fdivs
enterw
sbb
dec
xor
jae
loope
jmp
aam
or
push
or
stc
pop
or
outsl
int
dec
test
sahf
add
leave
je
mov
pop
test
cmp
xor
test
pop
adc
inc
lods
cmc
ror
add
sbb
inc
outsb
ret
mov
adc
sbb
sbb
dec
fscale
ds
and
dec
shlb
arpl
ljmp
cmp
jmp
pop
xrelease
insl
mov
lahf
sti
push
ja
jo
sub
jecxz
sbb
shrb
inc
xchg
add
jmp
imul
inc
lea
fcoml
mov
leave
and
jne
sub
xchg
int3
push
push
adc
pop
out
imull
fldl
fimuls
mov
cmp
testl
push
inc
dec
mov
xchg
aam
sti
jmp
and
dec
cmpsl
xchg
cmp
aaa
inc
cmp
inc
je
dec
imul
sub
jp
shlb
add
test
add
cmp
inc
jecxz
je
add
adcl
dec
fstl
out
add
xchg
bound
push
inc
fcmovnbe
pop
es
jb
push
inc
stc
cmpl
xor
jmp
sub
cli
fldl
stc
fistps
mov
test
lahf
sub
xchg
inc
jne
inc
aas
xchg
inc
jb
sbb
push
fldlg2
lcall
mov
pop
xchg
stc
mov
push
xor
hlt
pusha
xor
repnz
lods
jge
mov
cmp
add
mov
and
icebp
pop
add
sbb
pop
hlt
push
dec
lea
out
loopne
cmpsb
adc
and
add
xor
out
cmp
inc
ret
dec
xchg
iret
test
fimuls
xor
xchg
pop
inc
rolb
jbe
mov
ss
loopne
in
push
mov
scas
les
xor
mov
in
mov
inc
jbe
adc
pushf
shll
push
es
and
and
cld
xchg
scas
xchg
loopne
mov
add
dec
sub
into
cs
push
out
lahf
push
mov
popa
jmp
or
sub
negl
jo
mov
dec
inc
mov
and
test
test
push
repz
xchg
dec
pushf
mov
mov
mov
inc
and
stc
xchg
scas
stos
mov
jmp
sbb
dec
jg
data16
ljmp
pop
fcomps
mov
mov
mov
shl
add
add
lock
loop
in
push
xor
test
test
in
jae
fwait
rdtsc
fdivrs
add
push
es
pop
das
mov
imul
iret
jo
lret
shl
xchg
cmp
sbb
mov
or
pop
mov
pop
push
jp
mov
mov
sub
push
leave
mov
loope
out
neg
push
pop
pop
imul
and
adc
jg
call
dec
ljmp
fs
out
pop
inc
dec
dec
lock
sbb
testl
mov
mov
jp
mov
pop
mov
jg
rcl
push
dec
je
repz
orl
xchg
dec
mov
adc
pop
push
sar
xor
fs
mov
pop
lcall
aaa
and
mov
mov
adcl
sbb
mov
jbe
or
fcoml
adc
cltd
mov
pop
cmp
mov
adc
jae
mov
cmp
cwtl
mov
push
fsubrl
or
push
xor
jp
fistpll
push
mov
test
movsl
xchg
jmp
scas
js
pushf
loope
ret
mov
jle
icebp
dec
dec
mov
cltd
hlt
push
xchg
adc
jl
lods
int3
dec
or
dec
shlb
cmc
pop
out
xor
in
push
xor
mov
shll
gs
xchg
mov
cmp
cmp
mov
push
pop
outsl
push
lcall
jns
out
stos
data16
mov
sub
pop
test
adc
jl
or
mov
add
addb
mov
or
mov
and
std
lods
add
cmpsb
and
jo
xchg
push
in
into
sub
inc
stos
xor
xchg
xor
ret
mov
stos
into
sub
pop
adc
nop
sbb
pushf
push
jnp
add
jle
xchg
outsb
jae
leave
dec
insb
test
stos
sub
sbb
aas
xchg
gs
loopne
xchg
pop
xchg
test
mov
xor
orl
pop
sbb
mov
ficoms
mov
das
inc
out
push
inc
fwait
in
push
and
cld
or
adc
mov
push
insl
lcall
pop
jo
cmp
sub
cwtl
stc
das
iret
sub
mov
lea
les
push
or
cwtl
inc
call
pop
hlt
lea
pusha
rcrb
shll
cmc
cltd
je
mov
fildll
test
mov
dec
add
mov
mov
sub
scas
xor
dec
aad
pop
dec
dec
lahf
xor
jg
cli
cmp
ljmp
inc
jne
enter
lods
jl
mov
push
inc
inc
out
dec
hlt
ljmp
out
jno
cwtl
pop
push
mov
mov
or
out
mov
xchg
mov
pop
and
mov
arpl
std
cltd
add
fdivr
aam
sti
cmp
lahf
enter
jns
je
outsl
dec
arpl
pop
cmp
hlt
std
lods
lcall
mov
ds
stos
mov
inc
fsubs
int
call
and
dec
jge
adcb
push
or
jb
push
add
add
pop
pusha
dec
dec
xor
lods
jge
out
cmpsl
sbb
xchg
imul
dec
inc
pop
loope
ds
dec
stc
mov
into
lahf
pop
sub
dec
push
pop
mov
xlat
cmp
jp
cmpsl
movsb
lds
loopne
data16
sub
mov
dec
xor
push
cmp
ret
xchg
lea
inc
imul
fmull
add
mov
pop
cs
decl
addr16
or
jle
mov
xchg
aad
cmpsl
int
dec
or
jo
inc
neg
push
dec
mov
std
jo
or
loope
add
sbb
subb
pushf
fwait
mov
add
xor
jb
mov
shl
xor
xchg
sub
xor
push
cmpsl
or
sub
or
mov
pop
lock
mov
outsl
mov
adc
mov
ret
cwtl
xor
stos
push
pop
stc
cwtl
ljmp
add
das
in
and
mov
xor
and
xchg
inc
dec
test
ja
outsb
xor
mov
aad
aam
dec
mov
std
jbe
jp
rol
pop
lds
mov
call
mov
xchg
lret
fsubl
cli
leave
cmp
cmp
mov
sarb
or
in
jmp
push
sub
dec
xorb
in
imul
cmp
dec
jmp
and
pop
enter
jmp
mov
jb
sbb
sti
sbb
adc
ficompl
add
jle
out
nop
inc
adc
call
into
jne
repz
mov
xchg
push
xchg
les
xor
wrmsr
out
ljmp
and
in
repnz
fisubs
or
mov
pop
jo
adc
and
or
mov
testb
out
rclb
jmp
sti
rolb
xchg
scas
jbe
mov
movsl
cmpsb
insl
int3
inc
push
faddl
fimuls
dec
stos
xor
mov
sarl
aaa
xor
ret
mov
leave
out
lea
ret
or
inc
imul
inc
shl
push
es
jbe
stos
mov
pop
jg
in
repz
or
fdivr
shll
test
stc
inc
mov
mov
ljmp
dec
andl
fs
xor
inc
xor
ljmp
int3
addr16
push
ds
inc
icebp
and
mov
out
dec
repnz
cli
add
cmp
loop
out
sti
mov
fwait
movsb
in
cltd
xor
and
sbb
out
sub
xchg
dec
push
adc
movl
cli
leave
pusha
cld
clc
outsl
in
inc
in
ljmp
jo,pn
outsb
loopne
out
stos
inc
cmpsl
cmpsb
enter
cmp
ret
clc
int3
mov
ljmp
and
ss
push
cli
mov
and
mov
mov
mov
aam
dec
lahf
pop
sub
jge
ret
stos
shl
xchg
test
outsb
push
sbb
push
xor
push
jg
in
inc
mov
mov
incl
movsb
mov
mov
jb
lret
mov
xor
or
pop
xlat
cmp
in
pop
test
fnop
test
fistpl
das
mov
inc
neg
and
cs
inc
pop
xor
addb
rcrl
xchg
call
adc
and
mov
add
lods
sbbb
scas
xchg
xchg
adc
add
es
xlat
mov
stos
ss
imul
cvtps2pi
ret
sbb
in
push
les
sub
xor
mov
mov
push
inc
mov
setl
rcl
aaa
and
add
adc
hlt
out
and
sub
out
cld
sahf
cmp
cmp
inc
add
test
pop
jns,pn
sub
add
mov
lahf
stos
add
int
into
out
inc
xchg
mov
xor
insl
mov
das
inc
mov
insl
sti
rorl
shll
cmp
cmc
cli
inc
negb
sub
shlb
pop
cs
rorb
jl
cmp
in
jnp,pt
loop
sub
xor
ja
rclb
xchg
cmp
ficoml
adc
adc
mov
pop
sbb
mov
cld
jl
dec
les
testl
ss
int
cmpsb
cmp
loop
mov
in
push
fisttpll
rcrb
nop
data16
js
ds
scas
dec
stc
xchg
scas
adc
nop
and
adc
aaa
sub
outsl
bound
mov
pop
test
ret
push
add
scas
rorl
or
cwtl
clc
add
rorl
or
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
jmp
test
jl
out
mov
sti
loopne
xor
cmpl
adc
scas
pop
xor
add
ss
xor
lock
pop
or
aad
xor
lret
insb
inc
lods
daa
cmp
jbe
xor
or
daa
mov
insb
les
mov
pop
lcall
subps
mov
cmpsb
test
cmpb
iret
mov
jbe
jo
inc
adc
push
fstpl
mov
adc
push
movsl
divb
addr16
popf
outsb
push
popf
and
mov
mov
and
out
fsubrs
out
sub
mov
add
test
lock
mov
pop
jp
sahf
bound
push
push
in
adc
jge
xlat
xor
adc
inc
add
cmc
add
mov
lds
ret
addr16
ja
jo
pop
jnp
push
mov
fsubs
cmc
add
xor
cld
push
pop
xor
daa
jle
loopne
in
lahf
or
or
add
fcmovu
daa
adc
xor
jns
stos
sub
jo
add
dec
mov
pop
and
lret
nop
and
jle
add
ret
sbb
mov
dec
repz
test
nop
and
ljmp
xlat
into
mov
fwait
cmc
lds
adc
add
flds
mov
mov
pop
mov
inc
int3
inc
fcoms
and
inc
xor
call
rcr
or
lds
sub
movsb
dec
cmp
jno
sahf
mov
mov
ret
loopne
arpl
rcrl
dec
hlt
lock
push
pop
and
scas
xor
and
out
imul
xchg
xlat
inc
cltd
lret
nop
xlat
fs
lods
into
lods
out
movsb
dec
mov
xlat
adc
pop
iret
mov
sub
out
jne
push
fadd
andl
push
js
sbb
ljmp
loop
cld
js
rcrl
xchg
push
mov
scas
inc
cmp
cmpsl
inc
mov
cwtl
push
notb
xor
cld
add
mov
fs
mov
mov
or
fldcw
lret
inc
shll
insl
ljmp
and
jg
push
sbb
enter
in
sbb
jo
mov
stc
and
jge
bound
cmp
xlat
rcll
add
cmp
ret
cmc
pop
dec
jle
cli
push
jns
jmp
add
fcoms
lock
hlt
mov
cmp
mov
pop
sbb
rolb
dec
and
pop
add
mov
push
rcr
dec
pop
movsb
adc
add
outsb
loopne
fisubrs
jecxz
cmp
jp
sahf
je
stos
lds
sbb
ds
adc
stos
lods
sti
xchg
and
testb
and
push
or
loope
clc
in
cmpsb
loope
push
mov
jle
dec
fisubs
cli
out
in
movb
add
xchg
or
push
xor
cmpsl
adc
ret
mov
lea
sbb
inc
fldl2t
jb
ret
xor
mov
or
pop
repnz
cmc
rorl
mov
je
xchg
call
insb
adc
mov
jae
adc
dec
ret
pop
fdivs
lret
jl
out
jno
dec
fmul
mov
pop
mov
out
xchg
pop
xor
stos
in
push
push
aas
or
dec
cwtl
outsl
out
cmpsb
movsb
and
sub
ficoml
iret
inc
add
pop
in
stos
js
jmp
mov
sbb
sti
dec
clc
test
cmp
mov
mov
xchg
mov
dec
or
lret
movsl
fiaddl
cld
shr
es
inc
jne
jbe
out
mov
mov
jmp
inc
aaa
dec
cmc
xor
cltd
jbe
out
push
ja
adc
leave
aaa
jnp
or
lret
lock
ss
dec
mov
sbb
mov
jl
fcompl
aam
or
aad
fisttpl
inc
pop
lret
xchg
push
outsb
fstps
addl
loope
adc
mov
addb
xor
in
ljmp
nop
mov
xor
jns
lods
gs
push
sbb
icebp
mov
in
adc
push
mov
jbe
cs
movsb
mov
push
addr16
adc
mov
mov
cmp
hlt
shll
mov
sbb
les
sbb
mov
mov
or
dec
xchg
jmp
imull
xlat
cmp
mov
push
loope
aam
cmp
mov
icebp
dec
xor
mov
dec
xor
bound
aaa
cmp
ja
js
cli
in
xchg
mov
cltd
pop
sbb
xor
jo
in
cmp
sbb
inc
call
dec
push
push
add
cmp
cmc
outsb
scas
aam
cwtl
adc
mov
xchg
fs
scas
jae
xor
sbb
out
jp
pop
inc
sarb
lock
pop
push
jno
stc
jb
and
lret
inc
mov
dec
xor
mov
mov
push
inc
or
ret
iret
sar
lret
push
push
enter
xchg
cmp
jnp
int3
int
lret
out
insb
dec
xchg
enter
loope,pn
fbstp
dec
insl
insl
push
out
pusha
push
dec
or
lods
stos
jge
mov
mov
cmp
push
push
xchg
mov
dec
in
leave
pop
test
dec
shrb
jge
negb
mov
repz
pop
sub
pushf
fnstenv
decl
or
andl
pop
push
cmp
xchg
lock
add
pop
out
sub
dec
pop
sbb
pop
inc
out
fcompl
sub
pop
mov
pop
outsb
add
sbbb
cmpsl
push
shll
cs
mov
lods
and
arpl
addr16
inc
xchg
or
xchg
test
xor
shlb
xchg
push
mov
cmp
or
test
push
mov
jl
pop
shll
shrl
jae
pop
jmp
nop
loop
push
add
adc
test
xor
pop
xor
loopne
lds
push
push
loop
jnp
jb
fldcw
mov
adc
mov
lcall
stos
js
aam
mov
xor
adc
inc
push
imul
push
hlt
pop
xor
test
orb
insl
inc
fmul
push
add
lahf
adc
and
adc
out
adc
cmp
cmp
mov
dec
inc
loope
push
rcrl
stc
arpl
fwait
dec
popa
loopne
ja
push
cmp
arpl
fisubrl
stos
insl
inc
ds
push
sub
cmp
xchg
les
std
jl
addr16
icebp
cmpsl
ljmp
xlat
in
push
cmp
xor
xor
test
push
or
xor
xor
pop
lea
push
dec
arpl
jnp
cltd
dec
adc
lcall
xchg
mov
insb
cmp
sub
sub
mov
pop
dec
fstps
test
and
sub
dec
xchg
ret
mov
rcrl
call
dec
loopne
inc
leave
mov
fsubrs
mov
push
jno
add
xchg
sahf
cmp
xor
mov
dec
mov
ja
sbb
js
shlb
rcrb
lret
sub
fidivs
push
fnstcw
push
ficompl
jl
jle
cmc
jae
jp
in
je
fucomp
fldcw
lods
loope
inc
inc
jae
or
push
xchg
fistpll
cmpsl
inc
out
sbb
popa
in
ret
leave
push
les
xor
sbb
push
cmp
cs
fcmovbe
pop
clc
xor
imull
jge
sbb
cmpsb
mov
jle
int3
loope
test
pop
add
out
cmc
mov
push
stos
lods
in
dec
lret
mov
inc
mov
lods
jp,pt
sub
and
and
mull
xor
clc
movsb
xor
adc
push
mov
test
mov
out
aaa
loop
push
cmp
inc
mov
fnsave
cmc
push
and
fmuls
fisubs
stc
std
std
jg
pushl
xchg
cmp
push
fidivl
jle
inc
out
out
arpl
sbbb
cmp
or
or
xor
fildll
add
sbb
sbb
or
out
jo
dec
push
mov
mov
sub
jmp
nop
int
cmc
aad
xchg
xchg
cli
inc
jle
mov
insb
cwtl
bound
sub
dec
push
xchg
dec
popf
push
push
and
ljmp
inc
adc
lods
mov
in
out
mov
test
inc
xor
inc
or
fsubrp
adc
sub
sbb
rcl
scas
adc
std
hlt
and
xchg
arpl
jno
hlt
jg
shll
outsb
cmp
or
jmp
add
ja
mov
ret
mul
out
push
push
dec
xor
data16
dec
in
or
and
sub
push
call
adc
inc
pop
mov
mov
rcrl
lret
push
xor
repnz
data16
movl
dec
jge
push
sub
orb
mov
xor
iret
ret
stos
gs
outsl
adc
js
push
add
mov
orl
xlat
mov
pushl
pop
xlat
arpl
rep
or
cmp
pop
pop
test
stos
lret
sub
gs
rorb
cs
pop
daa
adc
loope
outsb
cli
stc
lods
push
jmp
xchg
clc
xchg
gs
cld
jo
xor
das
jp
mov
repz
or
pop
das
mov
push
cli
stc
jge
arpl
dec
pop
jp
add
add
js
into
mov
and
ret
and
fisubs
push
rcrl
xchg
sahf
js
nop
push
or
push
adc
out
ss
xchg
ljmp
call
stc
cltd
mov
adc
or
bound
or
push
stos
mov
popa
or
push
arpl
mov
sub
fldcw
mov
mov
mov
shrl
gs
gs
adc
pop
push
arpl
je
xlat
cltd
outsl
sbb
sti
cmc
xchg
fwait
jns
js
or
sbb
ljmp
push
jo
push
or
push
mov
outsb
mov
sbb
leave
in
repnz
mov
aad
jmp
mov
mov
xchg
push
fcompl
aas
adc
sbb
xchg
add
insb
push
add
js
push
lock
mov
mov
gs
dec
lds
mov
nop
jecxz
pop
jo
imul
stos
sbb
sbb
dec
jp
mov
xchg
or
and
sub
mov
std
fdivr
ljmp
ds
fwait
cpuid
cmp
mov
mov
inc
xchg
les
pop
mov
cs
jbe
sbb
outsl
int
loope
jno
fnop
sub
xchg
push
sub
cwtl
push
xchg
std
arpl
pop
jg
ljmp
mov
into
sbb
scas
adc
int3
sub
xor
jns
mov
pop
cmp
sahf
push
sbb
or
cmp
pop
lea
psubd
ss
and
clc
mov
popa
mov
mov
mov
loop
sub
pop
out
inc
pop
inc
arpl
outsb
popa
mov
addr16
mov
loopne
aad
dec
cs
cmp
mov
dec
mov
or
loop
mov
or
cmp
xorl
cmp
cs
mov
push
mov
aam
xchg
jno
xorl
push
push
cmp
and
fs
out
adc
jl
sub
and
or
push
cld
xor
in
das
adc
lcall
xchg
xchg
pushf
andl
push
jmp
orb
push
movsb
jecxz
mov
mov
int
sub
ret
fbstp
mov
into
shlb
aad
pushf
loopne
cwtl
add
pop
leave
shl
cmc
sbb
mov
fs
out
push
jmp
jbe
xchg
xchg
adc
inc
imul
add
popf
ja
jecxz
repz
pop
divb
mov
or
xor
popf
icebp
and
es
scas
insl
cmc
test
push
cs
cmp
cli
pop
arpl
fbld
sub
sbb
insl
pop
xchg
push
lock
fnstsw
mov
out
outsl
les
test
fwait
push
arpl
sarb
push
dec
in
mov
loopne
rorl
adc
call
adc
dec
mov
adc
ror
popa
in
ljmp
adc
or
push
xchg
icebp
mov
clc
push
pop
mov
push
fdivs
aas
cltd
insb
fistpll
popa
out
inc
jecxz
sti
cmpsl
adc
xchg
mov
and
pop
adc
in
cltd
loope
cltd
jge
lds
push
cmpl
jmp
mov
push
cwtl
adc
push
outsl
stos
lods
loop
mov
mov
in
ja
stos
wrmsr
cmpsb
mov
mov
cmp
dec
or
add
sbb
push
sub
mov
xor
xlat
sub
lods
jl
aad
pop
mov
ret
mov
mov
pop
push
out
sbb
jo
test
mov
jl
jp
aam
xchg
inc
mov
sub
mov
je
mov
xchg
mov
adc
cmp
mov
aad
decl
mov
lds
dec
fs
movsb
xchg
loopne
jnp
fucomp
inc
subps
jnp
xchg
sahf
pop
out
out
mov
mov
inc
or
fidivs
scas
pop
das
inc
test
sub
or
mov
ds
mov
imul
mov
push
scas
mov
daa
lods
xchg
cmp
jns
cmp
call
ret
outsb
xor
push
inc
jmp
fs
pushf
rclb
or
sub
js
inc
inc
push
lock
fiadds
and
jo
pop
mov
mov
sub
mov
xor
sarb
cmp
movsl
cld
daa
daa
ljmp
pop
fcompl
int
loopne
mov
movb
cmp
fcmovbe
aam
fildll
mov
or
cwtl
fidivrl
outsb
daa
or
cmpsl
add
and
cmpsb
sub
sub
jnp
fidivrl
pop
cmpb
leave
cmp
mov
mov
sub
fmul
or
fstps
int3
or
std
inc
addr16
push
xor
cmp
mov
hlt
stos
filds
clc
mov
mov
pop
mov
and
lret
mov
mov
xchg
decb
aam
pause
int3
gs
in
cmp
inc
mov
sbb
jbe
outsl
mov
test
data16
test
aad
mov
incb
aam
ficomps
das
pop
sub
addr16
or
aam
adc
aas
adc
das
stos
cmp
push
or
mov
and
lahf
std
adc
mov
mov
mov
data16
mov
out
sti
xchg
pop
subl
xchg
aad
lods
stos
pop
mov
mov
cmp
lret
lahf
xchg
scas
inc
insb
and
lret
sbb
adc
pop
jb
fidivrl
movhps
push
xor
arpl
mov
test
cmpsb
xchg
cwtl
aas
mov
pop
cmpl
aaa
gs
or
and
ljmp
stos
subb
pop
nop
mov
xchg
xor
repnz
fildll
ret
cli
xchg
jmp
fidivrl
std
jns
ret
sub
sbb
and
dec
xor
clc
push
mov
cld
push
movsb
jbe
rclb
test
mov
lds
pusha
xchg
cmpsb
js
pop
enter
ror
popa
xor
bound
ficompl
mov
xchg
and
or
inc
aaa
in
fadd
enter
lock
inc
lods
mov
push
pop
ds
push
mov
jo
jp
hlt
mov
adc
dec
xor
test
sti
fists
adc
mov
out
loopne
nop
in
lds
add
out
inc
fbld
mov
pop
sub
fwait
test
test
mov
stc
mov
mov
ds
daa
mov
lock
mov
mov
mov
fmulp
dec
ss
loop
daa
in
adc
inc
lret
push
mov
lret
mov
pop
cld
inc
lods
lods
jecxz
push
push
mov
in
mov
mov
incl
xchg
dec
inc
loopne
idivl
dec
sub
adc
cmp
adc
movb
fidivs
sbb
pop
pop
popa
addr16
fisttps
fldz
push
popf
cmp
add
lds
jae
xor
loop
mov
fcoms
mov
xchg
sub
mov
push
adc
aad
mov
xchg
and
lock
adc
jmp
lret
adcb
jns
jecxz
es
test
in
or
fistpl
push
xchg
jp
subb
xor
rcl
hlt
enter
fdivrl
sub
sbb
sbb
pop
loope
cmp
pushf
imul
das
test
add
rcr
ljmp
mov
and
test
push
pop
add
push
popa
add
or
mov
cmpsl
sub
fsubs
addl
and
stos
add
outsb
mov
jg
jo
push
mov
dec
lea
inc
outsb
orb
cmp
mov
sub
xor
and
mov
mov
jle
addr16
icebp
xor
mov
xchg
pop
adc
dec
popf
jmp
jnp
scas
pop
fcmovnb
mov
arpl
je
lods
sub
ficoms
jno
dec
leave
adc
in
stos
cmp
xchg
mov
dec
ret
sti
mov
movsl
imul
enter
xor
repz
repnz
cmp
cmp
jns
mov
mov
addps
mov
xlat
push
incl
mov
rcrl
sub
jecxz
sub
add
stc
push
adc
mov
mov
hlt
mov
test
inc
mov
jno
mov
jae
dec
push
sbb
mov
sub
cli
mov
inc
lods
mov
cmp
cmp
mov
pop
iret
imul
mov
xchg
shlb
xchg
fldt
xor
shlb
negb
lds
lods
rclb
mov
jne
or
into
push
ror
stos
fbld
std
rolb
popa
roll
aaa
mov
inc
push
push
mov
sub
ss
fs
les
dec
push
pop
imul
push
out
fwait
lods
push
outsb
repnz
xor
stos
ljmp
inc
add
fcoml
lods
inc
mov
test
bnd
push
inc
mov
pushf
adc
xor
icebp
jbe
dec
sub
mov
xor
xchg
sub
add
fcoml
dec
adc
shlb
xchg
cmp
jno
icebp
insb
lcall
and
mov
mov
sub
adc
js
cli
mov
jne
sub
or
aam
cld
mov
xor
js
cmpsb
in
adc
push
imul
mov
das
popf
mov
outsb
sub
pushf
pop
test
push
lods
std
and
cmp
xchg
jge
jo
dec
fcmovne
mov
sub
xchg
ficomps
add
pop
mov
pop
pop
sub
repnz
lds
aam
xchg
imul
int
cmp
arpl
lcall
popa
dec
xchg
ret
jg
pop
mov
lea
sbb
cs
adc
int
mov
popa
into
mov
mov
adc
mov
aam
mov
pop
fdivr
into
faddl
xchg
imul
mov
cwtl
xor
out
jae
mov
xor
loop
cmpsb
dec
jne
inc
mov
lods
popf
fmuls
cmpsb
aaa
lahf
sub
cmpl
sbb
ss
mov
int3
sub
in
cmp
clc
xor
out
sbb
gs
xchg
or
xor
shlb
gs
or
outsb
call
push
dec
in
and
jb
hlt
push
subb
jbe
push
jne
es
inc
push
js
push
js
mov
shll
in
decb
push
mov
stos
test
mov
test
sub
popf
sti
lea
nop
sbb
jmp
or
mov
push
aad
rorl
xor
rcl
pop
repnz
loope
notb
or
fwait
jge
mov
mov
adc
enter
aaa
push
sub
or
push
adc
cltd
inc
jge
sub
mov
ss
cmp
popf
sti
popf
aas
jle
lret
pop
scas
pop
push
pop
inc
lahf
cmp
sub
aam
dec
js
orb
scas
pop
sbb
cmp
rorb
lock
xorl
aad
add
scas
xchg
dec
or
test
cmp
fistpll
xor
jns
iret
cmp
mov
int
push
pop
mov
xor
addr16
cld
jbe
add
scas
xor
mov
mov
iret
adc
insb
dec
dec
sar
add
jbe
xchg
ret
pop
and
pusha
pop
cmc
pop
xchg
fisubrl
mov
je
outsl
imul
out
or
adc
sub
push
test
shrl
cwtl
pop
test
sbbl
mov
add
push
lahf
or
ljmp
dec
lods
pop
jne
xchg
pop
cmpb
push
cld
jmp
nop
jno
cmp
ror
fldenv
and
and
add
aam
out
jecxz
xor
es
enter
xchg
shl
pop
mov
dec
pop
fldcw
adc
push
xchg
dec
pop
push
mov
mov
stos
push
jmp
pop
repz
pop
and
add
in
icebp
dec
clc
add
out
push
gs
loope
pusha
notl
repz
lods
out
aam
in
jle
jg
repnz
test
loope
or
dec
fldenv
int
in
push
jg
xchg
adc
cs
fldenv
dec
mov
sbb
jmp
loopne
lahf
push
and
and
jnp
lods
adc
fstps
pop
sbb
bound
fistps
push
pop
arpl
aaa
inc
xor
cli
push
pop
inc
push
mov
aad
aas
shll
ds
stc
inc
add
xchg
sbb
xchg
pushf
cld
loopne
or
sbb
icebp
inc
mov
lahf
xorl
xchg
adc
das
sub
jecxz
lods
mov
xchg
mov
and
and
rcr
add
flds
xchg
cmp
mov
dec
pushf
dec
in
out
or
sub
sbb
leave
bound
mov
adc
dec
jae
push
jbe
ljmp
mov
push
loop
and
fldt
lds
das
pop
adc
outsb
stc
adc
xor
loop
jae
inc
mov
xor
arpl
xchg
adc
je
push
pop
mov
pop
xlat
in
or
insb
sbb
inc
sbb
cmp
cmp
xchg
mov
push
cmp
cltd
int
add
cmc
ja
add
cld
cltd
xchg
fidivl
js
add
incl
mov
repz
adc
xchg
pop
es
out
sbb
inc
push
icebp
ficompl
mov
movsl
adc
xlat
or
mov
xchg
mov
call
mov
sbb
adc
inc
test
in
mov
aaa
xor
lahf
pop
push
int
mov
mov
xchg
xlat
nop
sbb
and
call
aad
inc
push
mov
sub
imul
fistps
faddl
sbbb
out
mov
rclb
add
aaa
push
fidivs
jno
imul
add
sub
into
ja
les
xor
sub
daa
daa
cmp
and
cmp
imul
in
imul
aas
adc
cmpsb
or
jmp
push
shrb
dec
xor
jmp
adc
fidivl
test
movsl
pop
adc
sub
add
fnstcw
sub
movsb
popf
adc
cs
jp
xchg
lahf
jge
or
cmc
mov
or
adc
mov
pushf
addr16
xchg
jnp
sbbb
sbb
sub
mov
cli
cmpsl
das
xchg
lods
cs
fsubr
clc
or
mov
xlat
scas
adc
in
cs
or
ret
pop
out
adc
scas
mov
or
cltd
ja
cmp
mov
jl
sub
sub
popf
popa
outsb
sbb
jle
sub
movsb
fnstcw
inc
mov
sbbb
popf
xor
push
cmpsb
and
shrl
out
sti
push
xchg
in
or
mov
jmp
lds
pop
add
pop
fisubrl
nop
xor
mov
push
or
sahf
xchg
push
push
adc
das
dec
fcompl
sahf
hlt
jecxz,pt
sub
pop
repz
and
popa
mov
inc
inc
aaa
or
cmp
repnz
call
cmp
mov
push
in
cs
popa
rol
icebp
jnp
inc
pop
in
outsb
or
loope
mov
dec
xor
inc
pop
inc
cmp
or
mov
das
ret
dec
inc
aam
adc
pop
jno
lea
ret
mov
xchg
sahf
mov
sbb
push
fwait
xchg
arpl
imul
xor
ret
fdivrl
sbb
xchg
xchg
jne
mov
and
out
in
dec
cltd
fldl
jns
or
inc
in
out
pop
xchg
int
data16
imul
aaa
and
stc
cmc
scas
mov
sbb
push
les
push
ja
jno
ret
pop
lret
mov
xchg
fucomip
add
jae
jns
push
add
push
stc
arpl
sub
lock
movl
xor
xor
mov
das
sbb
mov
sti
enter
jmp
aam
pop
fwait
cld
lcall
push
pushf
popf
imul
fdivl
cwtl
push
les
mov
gs
sub
push
inc
imul
sbb
or
pusha
pop
int3
or
push
sub
dec
leave
pop
adc
sub
ss
dec
mov
add
pop
dec
into
mov
jge
and
mov
push
xor
sbb
imul
pop
mov
or
jb
adc
mov
xor
push
sbb
mov
and
mov
mov
arpl
mov
gs
loopne
push
aas
fisubl
out
scas
pop
neg
aas
mov
lods
jge
push
lea
std
xor
pushf
pop
repz
dec
inc
enter
pushf
aam
test
scas
and
xor
popf
jecxz
mov
mov
jmp
out
fcom
jae
imul
or
mov
or
std
adc
pushf
les
sub
movsl
adc
jne
inc
outsl
rorl
mov
xchg
mov
dec
movb
lret
js
lods
movl
outsb
mov
mov
shl
or
sub
xor
fs
mov
imul
jmp
mov
lds
arpl
lret
mov
xor
popf
sbb
int3
das
mov
cld
jns
stc
dec
jb
ljmp
sbb
rol
mov
mov
lds
adc
movw
inc
sbb
and
aad
jecxz
xchg
fidivrs
xchg
push
incb
mov
add
push
fs
in
lcall
and
aad
ss
sub
mov
ds
xlat
hlt
mov
add
iret
jae
mov
iret
push
gs
mov
dec
adcl
push
push
lea
sub
mov
adc
jg
jns
sahf
jle
test
pop
sbbb
outsl
movsb
mov
jno
mov
fwait
imull
push
mov
mov
sbb
xor
mov
adc
adc
lret
enter
push
cmpsl
inc
jecxz
outsb
pop
mov
mov
aad
js
xchg
jge
es
xchg
mov
sub
test
inc
stc
ror
rcr
xchg
pushf
xor
ret
out
daa
icebp
shll
stos
inc
mov
ljmp
repnz
pop
pop
adc
xchg
jbe
sbb
xor
fdivrp
mov
in
adc
je
outsb
mov
imul
push
jne
add
mov
push
dec
out
lret
stc
sbb
mov
jge
xlat
jnp
pusha
mov
es
push
jle
pop
mov
and
mov
inc
xchg
jb
fnstcw
es
dec
movsl
cld
xchg
pop
lcall
repnz
leave
test
test
inc
ljmp
jo
push
jl
loop
sub
repz
dec
add
xor
lret
mov
and
inc
dec
int3
push
push
aam
push
mov
jecxz
frstor
fdivs
test
pop
ds
and
lods
out
call
and
shl
mov
mov
or
pop
popf
sbb
cs
loop
xor
pop
or
insb
sub
jns
out
push
mov
cmp
jno
dec
push
es
jbe
outsl
xor
aaa
inc
xor
pusha
push
cmc
ljmp
xchg
in
stos
jns
xchg
pop
xchg
rolb
push
push
or
mov
mov
mov
ljmp
and
fcomi
jbe
out
jle
pop
adc
push
fsubrp
aad
icebp
cli
data16
pop
mov
xchg
cs
jle,pn
sahf
xchg
inc
pusha
inc
shrb
sub
mov
push
arpl
pop
js
test
shl
mov
pushf
jne
movsb
inc
dec
imul
cli
inc
cmpsb
repnz
dec
icebp
lahf
insb
and
test
pop
adc
push
add
cmp
jne
or
sub
or
loop
or
fisttps
xchg
sahf
cmp
lret
divb
add
aad
xchg
pushf
and
sbb
cmp
je
adc
shll
xchg
add
mov
jmp
xor
out
xchg
sbb
fisubs
jne
hlt
xchg
xchg
mov
les
imul
lcall
xchg
adc
daa
or
push
pusha
sub
mov
adc
mov
xchg
inc
xor
jl
es
fbstp
fisubs
popf
inc
xor
xchg
ljmp
mov
mov
mov
outsl
lds
enter
push
pushl
stos
mov
mov
fdivl
lods
mov
jb
mov
mov
mov
add
jmp
popf
add
xchg
adc
pop
in
and
sbb
scas
fstpt
pop
addl
mov
mov
movsl
push
push
xor
mov
lds
pop
jo
dec
xor
aam
cltd
jno
cltd
inc
fstps
and
rolb
or
adcb
add
push
pop
push
mov
idivb
cwtl
xorl
inc
add
cmp
push
cmp
aas
lret
int3
fsubr
int3
xor
lcall
pop
jbe
mov
mov
sti
xor
leave
daa
fsubl
cli
adc
mov
imul
loop
jne
and
mov
jl
loopne
xchg
inc
arpl
jge
test
das
push
aam
sbb
test
sbb
pop
inc
outsb
aaa
in
leave
jmp
sub
cli
pop
pop
mov
mov
repz
dec
mov
inc
outsl
ljmp
ss
aaa
jns
daa
jo
mov
jecxz
push
stos
jle
outsl
stos
and
pop
xor
ror
lea
inc
sbb
mov
mov
mov
sahf
pop
inc
movsb
xchg
mov
add
mov
add
cmp
lcall
popa
pop
dec
mov
xor
aad
in
int
dec
je
mov
jae
fcomp
xchg
or
js
mov
xchg
jnp
dec
inc
fiaddl
sub
push
sbb
repz
jp
or
lea
mov
jnp
sub
out
and
in
dec
push
mov
jecxz
das
add
and
pop
pop
or
dec
push
ret
cli
mov
sti
outsb
pop
jbe
cli
jns
cs
sar
push
lret
add
push
ja
pop
arpl
or
ja
or
shll
adc
test
jge
lock
in
cltd
inc
orb
xor
jp
jne
shlb
mov
lret
dec
push
stos
xchg
sahf
sbb
in
dec
jbe
jb
cwtl
sbb
iret
stc
lret
cmc
xor
pop
in
xor
xlat
xor
mov
dec
rcl
cmp
add
pop
lea
cmp
xor
lcall
cwtl
fisttpll
cmp
scas
jmp
jb
jle
cmpsb
or
negb
add
psubusw
inc
mov
iret
add
mov
fdivrs
out
jae
lret
test
sub
call
lock
fwait
js
out
jnp
push
lds
mov
mov
pop
add
sub
pop
aaa
inc
popw
outsb
lret
sub
fiaddl
sbb
sub
insl
xchg
push
inc
inc
mov
fimuls
jp
dec
mov
sbb
cltd
jl
mov
add
imul
mov
mov
jl
sub
data16
shlb
sbb
dec
fcoml
jno
lock
mov
jecxz
xchg
push
inc
or
aam
loop
add
shlb
daa
xchg
sub
and
ret
mov
je
inc
daa
cmpsb
inc
mov
jbe
pop
loopne
jb
daa
call
or
adc
aas
ret
out
jmp
inc
mul
mov
lods
std
test
adc
cmp
int
shll
aam
fmul
sahf
out
mov
negl
lcall
mov
jnp
xor
stos
pop
mov
enter
or
fsubl
push
sbb
pop
mov
push
add
into
jo
lret
xchg
mov
enter
pop
stos
xchg
mov
mov
push
pop
movsl
popa
es
insl
pushf
inc
imul
sahf
pop
or
push
or
out
push
aad
adc
loop
mov
mov
dec
or
aam
insl
jmp
pop
pusha
mov
push
push
xor
adc
sub
outsl
std
inc
ja
mov
jne
inc
aam
stos
jo
popf
rorb
dec
mov
ficomps
add
jmp
jns
jo
sahf
int
xchg
cmpsb
inc
or
and
je
jnp
inc
jbe
loope
pop
mov
aaa
out
mov
pop
pop
sbb
imul
mov
aad
int
lods
arpl
in
sbb
orb
pop
dec
push
add
imul
negl
sti
push
bound
jne
mov
loop
movsl
mov
sub
orps
int
and
or
addb
cmpsl
scas
outsl
cmc
int
sbb
pop
aad
pop
cmp
mov
sub
pop
es
mov
sub
rcrl
mov
nop
push
test
xor
cli
shlb
push
jg
or
inc
mov
add
insb
pop
or
mov
xor
setbe
cmp
inc
pop
and
mov
jnp
or
lock
dec
stos
mov
push
push
cmp
and
mov
loopne
xor
cwtl
pusha
xchg
jl
addr16
movsb
xchg
fxch
inc
or
insl
stc
cmp
jbe
andl
adc
test
popa
push
xor
mov
jb
test
in
fcmovu
jecxz
pop
pop
imul
pop
ficoml
dec
sti
dec
xchg
les
inc
sub
add
push
jl
add
enter
add
add
xacquire
and
push
inc
adc
sub
mov
stc
dec
ss
mov
jne
fs
imul
sub
into
cmp
insb
mov
ficoml
imul
xchg
jbe
int
call
jbe
icebp
mov
jb
jns
shl
mov
and
arpl
mov
jp
mov
minps
fwait
mov
sub
xlat
leave
push
mov
loop
xor
stos
sub
repnz
repnz
out
inc
popa
hlt
loope
pop
dec
cmc
sbbl
subl
aaa
lahf
mov
dec
jp
cmp
cmc
jnp
mov
mov
or
xchg
pop
loop
je
es
out
mov
and
imul
sbb
sub
mov
fs
push
out
sub
in
pop
sbb
xchg
imul
xchg
lcall
cmp
loop
mov
or
arpl
cmp
stc
out
out
and
insl
and
xor
mov
mov
xlat
ret
jmp
mov
sub
iret
add
shrb
sbb
sub
mov
lock
jns
icebp
mov
lods
push
movsl
sahf
call
sbb
and
sbb
js,pn
lods
sub
pusha
add
dec
adc
add
fwait
aaa
jno
stos
pop
enter
add
mov
mov
fwait
mov
nop
insb
fcoms
sbb
xor
out
and
loopne
leave
mov
or
adc
pop
in
dec
adc
and
aam
orl
mov
jne
or
sub
sub
mov
inc
sbb
xchg
mulb
sbb
repnz
inc
outsl
sbb
call
lret
rcrb
push
fs
push
sbb
sti
xchg
jecxz
rclb
adc
add
inc
ds
cmpl
sbb
add
mov
mov
mov
cmpsb
test
incl
scas
inc
add
loope
js
inc
movsb
lock
cmc
in
inc
sbb
inc
dec
mov
subl
test
dec
popf
es
stos
out
cmp
stos
jge
dec
push
lea
movsb
push
sbb
adc
adc
add
sti
push
stos
jnp
pop
and
not
xor
jo
push
xor
repz
out
lcall
jp
adc
leave
mov
xor
sub
fwait
int3
in
lods
in
xlat
cmp
pop
ss
jbe
imul
and
or
push
jae
cmpsl
pop
mov
popf
sti
dec
or
mov
nop
dec
rclb
test
jns
test
das
mov
aaa
jbe
cmp
into
adc
cmc
mov
mov
push
mov
mov
add
clc
call
sarb
jno
mov
lcall
mov
sbb
loopne
incl
pop
clc
cmp
sub
jo
lahf
ret
fbstp
dec
push
out
sub
jl
idiv
push
repnz
stos
dec
jb
fcomps
sbbb
loop
cmp
xor
cmpl
les
les
orl
jecxz
rorl
adc
xchg
stos
pop
jp
loop
jg
in
shll
call
dec
mov
outsb
jnp
push
dec
data16
lret
pop
aas
data16
add
pmaxub
push
sub
jecxz
stc
sysenter
ja
ljmp
mov
lcall
or
test
adcl
jg
jnp,pt
leave
inc
sahf
inc
mov
clc
adc
cmp
out
jne
adc
jmp
jecxz
inc
ret
inc
inc
pop
xor
cltd
mov
pop
or
insb
out
cmc
mov
dec
sti
repnz
ret
cli
xchg
inc
jbe
aad
sub
jmp
sub
sbb
test
dec
icebp
pop
mull
pop
cmpsl
lret
push
xorl
ljmp
enter
push
push
cmp
enter
test
lret
rorb
cmpsb
or
lds
or
pop
rolb
jns
pop
dec
and
or
inc
in
pop
inc
fs
inc
pusha
std
out
je
ret
lahf
sahf
loopne
xchg
sbb
cwtl
leave
jmp
jbe
mov
push
out
testl
enter
stos
xchg
outsl
cwtl
adc
jle
cli
fldt
sub
inc
imul
lds
sbb
inc
and
cwtl
in
add
cltd
loope
mov
shlb
push
adc
in
push
stc
jb
in
mov
jle
fcmovnu
ds
stc
cmc
movsl
inc
cwtl
cmp
int
out
or
enter
daa
stos
je
sbb
jae
movsl
arpl
jne
xchg
loopne
fstps
cmp
mov
xchg
iret
mov
in
pop
pop
dec
pop
and
or
imul
sahf
jb
int3
jns
and
js
popf
xchg
or
repnz
xor
and
pop
cld
cld
ficoml
cmpsb
cmp
nop
lds
andb
es
inc
ret
push
hlt
in
daa
and
out
out
test
dec
rolb
test
arpl
rol
ds
cmp
inc
test
fcom
xchg
jecxz
sub
gs
mov
stos
fdivs
psrlw
test
jmp
add
mov
inc
rorb
int
mov
pop
pop
imul
xchg
lods
shlb
add
sbb
or
enter
jnp
pop
push
shr
lret
fdivrl
test
mov
test
leave
bound
push
or
das
iret
jg
pop
inc
shll
jo
test
sub
and
arpl
addl
and
into
mov
lods
mov
dec
cwtl
fwait
es
out
scas
adc
jmp
jae
xchg
and
dec
mov
sbb
jno
push
dec
movsb
inc
mov
xor
xor
push
je
sbb
mov
sub
inc
sbb
jecxz
pop
sbb
push
or
lret
cmp
push
int
xchg
clc
dec
dec
or
sbbb
jp
out
or
add
call
ja
mov
jmp
lcall
es
push
lock
jb
mov
jnp
data16
cmp
add
lea
pop
fstpl
sahf
call
and
loop
stos
inc
je
sbb
cmp
xchg
in
loop
jmp
xchg
xlat
andl
lea
jae
adc
repnz
fcomps
test
in
in
lahf
sub
and
lret
cli
or
fs
mov
cli
push
mov
mov
out
in
ljmp
fisubrs
mov
adcb
cmp
imul
pop
sbb
mov
enter
in
mov
pushl
adc
cmpb
and
xor
adc
cmc
sbb
push
dec
ds
out
add
adc
out
movsl
out
sub
stos
sbbl
or
fisttps
xor
add
int3
mov
lods
add
std
lret
mov
out
repz
mul
movsb
es
daa
popa
dec
cmc
mov
lds
pop
xchg
inc
mov
cmp
sub
inc
fsub
cmp
sub
pop
in
sahf
nop
push
hlt
adc
push
pop
cmpsb
push
ficoml
pop
out
scas
pop
out
sahf
add
cld
movl
pop
popa
sub
xchg
shr
stos
jle
shrl
jne
jp
inc
scas
movsb
mov
push
pushf
test
lcall
dec
popa
and
push
cmp
xchg
sub
sahf
xor
aas
cmp
addr16
imul
out
inc
xor
adc
dec
adc
adc
sub
cmp
fsubr
jecxz
inc
rclb
cli
cmp
cmpl
inc
dec
sbb
jne
or
xchg
and
lcall
in
data16
push
sbb
jp
inc
mov
pop
lods
pop
jae
jp
jno
ja
pop
push
push
mov
decb
push
add
mov
push
es
clc
addr16
sub
cmc
jmp
andl
into
mov
orl
repnz
sub
sub
jecxz
imul
push
ljmp
aam
ja
add
fmuls
sbb
movsb
loop
mov
lock
js
push
sarl
sub
add
out
insb
fidivrl
cmp
jnp
jb
cs
xchg
daa
fnstsw
push
add
loop
fcoms
movl
add
pushf
hlt
inc
sub
stc
cwtl
adc
or
imul
xlat
call
negb
cld
sub
mov
pop
mov
repz
in
out
jl
fwait
insl
mov
out
pop
ss
pmaxsw
dec
pop
bound
and
xchg
enter
add
shrb
sbb
pop
jmp
outsb
insb
rorb
imul
ret
aaa
inc
adc
imul
mov
test
imul
dec
std
fdivl
int3
clc
jg
mov
cli
mov
loop
mov
out
cmc
icebp
pop
jo
jmp
inc
test
cmp
dec
hlt
lods
clc
xchg
jno
xchg
push
sub
xor
subl
inc
data16
andb
dec
or
fwait
xor
pop
in
negb
push
and
scas
and
scas
fcmovne
mov
mov
mov
pop
negb
pop
push
lods
and
ljmp
pop
pushf
mov
sbb
lcall
addr16
fs
push
in
cwtl
cwtl
or
sub
mov
sub
aas
scas
movsb
insl
xor
loop
jl
lcall
mov
push
addr16
pop
loope
jae
mov
sub
add
mov
movsb
sbb
mov
pmaxub
imul
mov
mov
add
inc
mov
enter
pop
mov
das
push
loopne
xchg
xlat
daa
mov
leave
in
adc
rolb
jmp
pop
inc
roll
lods
loop
data16
pushf
add
std
inc
icebp
mov
and
ret
mov
int3
xchg
xor
jae
cmp
add
int
es
test
mov
dec
popa
sti
or
imul
mov
lods
add
cs
fucom
jo
dec
aam
xlat
sbb
mov
ret
std
and
dec
jno
clc
ds
xchg
mov
pop
add
pop
dec
inc
imul
mov
daa
out
imul
out
popf
sub
cmp
lds
cmp
in
xchg
roll
rorb
pop
sbb
adc
jae
mov
in
jge
data16
rcrb
sub
fs
push
fisubs
inc
jge
add
add
adc
rclb
addr16
push
and
dec
das
jp
enter
rcrb
jecxz
divl
mov
push
jae
cmp
pop
or
pop
call
mov
add
push
mov
cmpsl
mov
testb
and
out
sahf
push
mov
jle
das
loopne
roll
mov
cmpsb
lods
xchg
push
testb
in
in
faddl
mov
hlt
fs
into
xchg
int3
add
loopne
mov
jb
fsts
lock
inc
shrl
jo
pusha
popf
mov
hlt
and
xchg
sbb
test
sub
pop
jbe
popa
xor
add
pinsrw
lea
lods
mov
in
push
fwait
aam
pushf
jle
dec
push
dec
lret
jns
in
cltd
in
add
es
xor
notl
inc
aaa
addl
mov
out
fistps
stos
mov
pushf
ret
cli
add
test
fldt
in
pop
das
inc
or
hlt
data16
mov
andb
orl
cld
rcrb
or
int3
inc
cmp
and
xlat
rcrb
or
mov
test
add
jo
scas
lock
xchg
xor
inc
add
sub
lcall
jbe
mov
out
ret
insl
fadds
ror
add
lret
ret
mov
add
push
adc
call
addr16
sahf
enter
mov
loop
push
adc
idiv
jbe
insb
jne
hlt
imul
sub
jo
sbb
jp
xchg
into
push
mov
arpl
push
mov
push
fwait
jecxz
adc
mov
mov
and
mov
push
jp
cmp
sub
lds
xchg
xchg
insb
cltd
inc
or
push
cmp
or
mov
push
mov
das
push
setl
pushf
xchg
out
test
test
scas
gs
adc
in
addb
cmpsl
repnz
sub
or
ret
aaa
jae
sahf
push
mov
imul
xlat
mov
jl
add
mov
pop
mov
ss
and
mov
sarl
cmp
dec
jge
cmp
xlat
pushf
stos
adc
sub
cmp
inc
pop
dec
and
nop
in
ret
das
mov
mov
jbe
mov
jbe
jmp
fisttpl
mov
jno
xchg
repnz
movsb
in
test
adc
insb
jne
fstpt
xor
repnz
jle
ret
and
repnz
cld
mov
cmp
call
xor
leave
loope
sahf
xchg
mov
xor
shl
pop
rcr
lds
outsb
cmp
and
jecxz
lret
inc
cmpsl
pusha
push
add
clc
decl
jecxz
sub
std
lock
cmp
adc
jae
fcmovbe
sbb
xor
mov
stos
mov
push
int
scas
nop
les
mov
pop
cmp
sub
cmp
icebp
mov
mov
inc
xchg
shrl
add
sti
pop
les
int3
add
inc
insl
fildll
xchg
sub
ret
mov
call
mov
imul
adc
jg
dec
in
fidivs
or
pop
fists
xor
pop
iret
mov
xor
sahf
repnz
push
mov
xor
lcall
sub
xor
xchg
std
aas
aam
sbbl
data16
ja
cmp
mov
les
jmp
aam
cmp
scas
dec
push
iret
leave
and
mov
xor
cs
movsb
mov
in
data16
test
add
daa
cmp
inc
adc
push
rcl
mov
iret
mov
sbb
mov
mov
sbb
bound
push
xchg
push
js
in
jae
pop
loopne
mov
lds
scas
aam
iret
and
dec
push
sub
cmp
outsl
push
movb
sti
pop
or
adc
and
movsb
gs
out
push
adc
in
dec
or
lea
out
xchg
mov
ret
cmp
inc
std
rcl
fwait
sub
push
insb
xor
sub
jo
cmp
jecxz
leave
fidivrl
lods
pop
xchg
jmp
fsubrs
test
add
jbe
fs
lock
and
cli
fdivrp
xchg
jecxz
call
dec
scas
xorb
pop
out
push
push
fldenv
mov
mov
bound
aam
ja
popa
lret
addr16
pop
fwait
cwtl
dec
bound
sbb
hlt
jnp
mov
in
loop
sbb
jb
cmp
mov
sarl
scas
xchg
leave
inc
or
out
mov
les
mov
lea
pop
rolb
outsl
and
loop
mov
out
inc
xchg
pusha
imul
push
rdtsc
add
mov
jecxz
inc
outsb
inc
inc
inc
pop
dec
cmp
push
out
mov
test
pop
scas
and
pop
test
outsb
inc
pop
insb
flds
mov
dec
fildll
insl
or
test
cmp
mov
xor
fmull
insl
add
push
inc
mov
call
xchg
push
dec
leave
stc
add
movsb
jecxz
push
movb
push
jecxz
ret
pop
pop
dec
ljmp
adc
or
inc
dec
sbb
scas
mov
dec
fstps
pop
add
dec
fists
inc
test
adcb
mov
ja
fsubr
mov
outsl
mov
xor
xchg
xor
cmpl
repz
push
pop
lods
rolb
jns
daa
test
or
dec
push
repz
cmp
inc
sub
inc
out
sbb
loopne
std
fnstsw
mov
cmc
les
sbb
insb
jo
cwtl
rolb
cmc
fdivp
fs
dec
mov
sbbb
fidivrs
scas
je
mov
mov
or
pop
jecxz
lods
cs
pushf
sub
lahf
cmpsb
jle
mov
fidivs
jge
lds
cld
shrb
stc
push
cltd
and
jo
jl
xor
cmp
popf
sbb
imul
lret
mov
int3
xchg
jmp
inc
jne
pop
add
adc
imul
imul
inc
loope
or
push
xchg
mov
and
cwtl
arpl
fstps
sub
mov
mov
insb
fldt
mov
fistl
ret
outsb
push
xor
lds
lret
lcall
or
jle
mov
and
sbbl
jge
sbb
xchg
xchg
je
mov
sub
mov
lods
xor
test
inc
insl
inc
sarl
jle
loope
pop
aam
adc
ret
mov
imul
sbbb
xchg
mov
or
adc
sub
mov
rorb
std
jecxz
mov
test
fnstenv
add
sub
or
pushf
lods
xchg
adc
xor
push
pop
adc
mov
arpl
xor
add
pop
or
mov
cld
pop
out
movsl
lods
sti
cs
xchg
cmpb
or
sbb
iret
xchg
popa
pusha
pop
or
adcl
out
sbb
jecxz
rclb
movsl
push
frstor
shl
cmpsb
lret
iret
jno
cmp
add
push
jle
les
mov
push
inc
add
aaa
cld
push
pop
and
outsl
cmc
lods
dec
inc
push
or
fstpt
aad
push
fidivrs
dec
cltd
cli
xor
ret
mov
insl
mov
push
sub
das
notb
andb
add
js
hlt
addr16
fnsave
in
cmp
lock
daa
dec
cli
cmp
aad
add
test
imul
mov
lahf
addr16
fwait
dec
cs
fstps
inc
sbb
push
cld
idivb
cmp
arpl
lods
mov
cmp
outsb
aad
cmc
movsb
arpl
popa
lods
pop
ret
aad
rclb
sysexit
fcmovnbe
sbb
cmp
jg
pop
divl
and
sbb
mov
stc
add
pusha
sbb
out
and
aas
push
add
jge
and
jo
loopne
ljmp
cmp
incb
jecxz
sub
or
test
cmpsl
push
movsb
sti
sbb
out
and
jl
repz
jb
mov
xlat
into
mov
xchg
rclb
jno
test
arpl
fwait
xchg
mov
lcall
xorb
subl
loopne
add
xor
call
ljmp
loop
popa
popa
jbe
and
sti
jl
dec
add
movd
lock
mov
lahf
addr16
dec
dec
lret
fnstcw
daa
dec
and
add
push
dec
mov
rol
xchg
aas
sbb
mov
mov
insb
lret
fs
loopne
insl
pusha
fdivrl
ds
scas
je
sbbl
mov
push
or
mov
arpl
push
adc
inc
imul
dec
testb
imul
call
scas
mov
hlt
cmpb
icebp
jo
add
hlt
fidivs
cs
xchg
andl
mov
lods
rcrl
or
loop
fs
xchg
scas
lods
repnz
jecxz
gs
cmc
xor
test
mov
inc
orb
jns
repnz
pop
push
mov
fisttpll
mov
popf
out
repnz
cmpsb
cld
xorl
inc
jp
xchg
scas
push
cmpsb
cmpsl
call
and
jns
scas
adc
test
stos
fcom
ss
push
mov
out
mov
and
lcall
js
push
movsb
nop
push
rol
jbe
or
mov
sbb
add
jns
mov
sbb
int3
cmpb
mov
dec
lds
jge
enter
mov
icebp
daa
push
and
cmp
loopne
mov
fwait
ret
xor
mov
xchg
std
push
imul
movsb
mov
je
divb
jae
sbb
sub
sbb
sbb
lret
outsl
pop
add
mov
hlt
gs
dec
pop
pusha
stos
xchg
push
mov
cmp
je
push
lods
test
int3
out
les
push
pop
imul
div
iret
fbstp
insb
or
std
fisubrs
out
stos
ja
push
ss
inc
mov
add
lods
orl
inc
cli
daa
xlat
inc
mov
dec
xor
fisubl
shrl
popa
or
fdivr
cmpsl
in
les
push
mov
push
int3
scas
aad
cmp
pop
faddl
fwait
push
fcmovu
pop
lret
xchg
push
movb
icebp
pop
xchg
add
mov
ret
add
bound
cmp
aaa
rorb
stos
cli
rcll
iret
loopne
sbb
xchg
jne
adc
hlt
fldt
or
jbe
pop
push
out
fisubrl
ss
rol
add
fidivrs
xor
test
xor
xchg
icebp
cmpl
pop
inc
out
sub
mov
jge
lea
call
mov
notb
xor
sbb
mov
push
push
cwtl
ja
stos
enter
or
or
pop
push
sbb
cmc
loop
mov
push
add
dec
push
aad
out
sbb
lods
jb
cmp
js
mov
out
ss
and
int
inc
lea
iret
push
push
cwtl
fldl
enter
mov
out
jmp
loope
mov
andb
adcb
cmpb
inc
bound
sbb
or
ss
mov
shll
fistpll
fwait
cmpsl
or
lahf
fildl
aaa
stc
call
add
fidivs
subl
pop
or
push
stc
mov
jg
sarl
and
inc
and
adc
adc
sbb
std
inc
add
jne
xchg
sbb
clc
pop
or
pop
cmpb
inc
out
mov
jns
xchg
push
jns
test
mov
int
jns
xor
jecxz
sahf
sbb
shlb
fmull
jo
lret
leave
mov
xchg
adc
add
xchg
cmc
sbbl
dec
outsb
stos
mov
pop
push
cmpsb
cltd
imulb
sbb
pop
xor
hlt
iret
jbe
mov
or
sub
push
mov
outsl
sub
or
dec
fldl
inc
add
pop
pop
jb
and
mov
test
push
scas
pusha
rcrl
cmc
push
fsubrs
push
mov
dec
hlt
sub
lret
in
int3
mov
sbb
sbb
cmp
and
testb
in
fsubs
mov
xchg
lea
push
cmpsl
push
add
es
sub
inc
fadds
test
jae
in
lea
icebp
lret
xchg
mov
dec
iret
jmp
xchg
jg
and
bound
or
push
mov
out
mov
push
jl
mov
push
fildl
add
movsl
push
scas
cmpsl
fistpll
test
sbb
inc
jns
xchg
gs
rorb
test
dec
das
push
mov
mov
dec
sbb
inc
adc
popf
orb
cmpsb
lock
xor
mov
xor
xor
jl
shlb
adc
mov
add
aad
adc
out
iret
xchg
push
mov
pop
jns
adc
pop
pop
in
jecxz
add
test
ficomps
je
ficompl
lahf
dec
push
gs
fildll
mov
push
test
mov
xor
stc
sub
cld
push
iret
cmp
in
fstpt
and
pusha
pusha
dec
dec
out
dec
pop
pop
movsl
mov
sbb
mov
jecxz
cmp
and
mov
mov
mov
das
loopne
push
xlat
xchg
or
scas
xchg
pop
test
in
jne
sub
cmp
adc
xlat
pop
dec
xchg
mov
sub
jg
xchg
test
int3
fistl
arpl
pop
sub
pusha
out
dec
xor
lds
leave
jo
mov
jbe
cmpsl
xchg
bound
dec
or
test
mov
lea
mov
pop
cmc
pusha
sbb
pop
lret
mov
imul
ds
or
das
loope
leave
stc
sbb
inc
jo
scas
sbb
jnp
sahf
enter
sbb
test
cmp
stc
fsubrs
hlt
sub
sti
sub
mov
and
scas
pop
adc
push
aad
and
sar
mov
pop
pusha
xlat
addr16
jnp
jbe
add
in
adc
mov
mov
mov
icebp
dec
adc
push
cmp
sub
lcall
and
xor
shll
pop
rorl
pop
cmp
pop
push
mov
xchg
int3
and
pop
push
cmp
sbb
cmpb
in
pop
and
cltd
fwait
dec
ror
lds
sbb
cmc
dec
or
ret
pusha
add
ret
das
mov
jg
mov
xchg
pop
test
je
and
mov
jg
mov
mov
test
nop
pop
enter
stc
add
ja
imul
frstor
push
inc
cmpsb
xor
mov
sbb
sbb
test
mov
ffree
cs
sbb
sahf
xor
fnstenv
int3
adc
jge
adc
xchg
testb
lods
rclb
bound
inc
pop
fsub
mov
xchg
cwtl
mov
les
outsl
lock
mov
cmp
popf
xor
stc
lods
jge
pop
cli
jne
repnz
lret
lods
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
fistpll
lcall
fs
popf
jo
imul
fs
mov
lret
push
xchg
aam
mov
mov
mov
into
xchg
pop
jbe
pop
leave
shlb
jge
xchg
mov
xorb
insb
movsb
xchg
inc
fcomip
aam
jae
push
jbe
sub
xchg
sub
movsl
sbbl
sbb
inc
mov
sub
push
sbb
bound
pop
push
push
sub
add
cmp
add
cmovge
andb
imul
out
cmp
imul
mov
dec
jne
add
jne
jne
sbb
adc
jns
jo
cmp
and
lea
aaa
mov
pop
push
mov
pop
adc
jae
mov
and
dec
adc
mov
sub
decl
or
sbb
fisubs
fcmovu
and
xchg
mov
cmp
repz
test
lret
outsb
push
scas
cmpsl
cli
and
hlt
mov
pop
or
out
jns
adc
leave
orl
xchg
jl
mov
cmpsb
imul
es
xchg
sbb
mov
push
cmp
ds
loop
cmp
sbb
dec
inc
in
in
mov
sbb
sbb
pop
ret
mov
lea
pushl
xchg
sub
mov
gs
aaa
ja
popa
xor
fstpl
das
sbbb
cmp
cmp
mov
inc
out
sbbl
mov
sub
repnz
jae
and
adc
xchg
pop
int
and
addr16
aaa
fs
repz
xorb
or
mov
adc
dec
leave
mov
shrb
hlt
mov
fwait
sub
xchg
or
repnz
nop
dec
inc
lock
jns
mov
fistps
or
insb
imul
pop
in
cld
cld
sbb
mov
pop
and
mov
cmovle
xchg
mov
cmp
aas
inc
sub
mov
mov
andl
icebp
jle
jne
xchg
push
add
sar
cmpsb
mov
clc
and
lahf
cmp
sbb
mov
ja
pusha
xchg
leave
movsl
xor
int3
cltd
clc
shrl
aad
xchg
das
mov
add
sahf
cmp
inc
xor
sub
sbb
mov
aad
pop
adc
xchg
pop
cmp
fs
pop
addl
cmp
xchg
js
aam
andl
pushl
std
ljmp
jne
jl
stos
mov
loope
subb
stc
mov
shrb
call
xor
shlb
xor
mov
pop
dec
lcall
fadds
jmp
lods
outsb
xor
out
enter
int3
sbb
pop
sub
ret
sbb
push
mov
xchg
and
out
add
aad
cmp
inc
andl
lahf
fbld
xor
das
and
imul
adc
pop
in
icebp
test
dec
ds
cli
pop
xchg
int
xchg
nop
jbe
cmp
mov
mov
decl
add
iret
lea
imul
cmpsb
mov
sub
mov
pop
cwtl
fwait
inc
loopne
push
mov
jge
cmpsb
aas
or
sub
outsb
inc
push
std
scas
out
xorb
pop
xorb
cltd
nop
sbb
gs
outsb
sub
test
adc
data16
pop
je
add
inc
aas
loopne
mov
sub
nop
imul
addr16
fiadds
cmp
sub
fs
inc
pop
sub
daa
jno
pushl
or
ds
mov
lret
icebp
cmp
mov
fstl
cmc
xor
mov
mov
dec
in
xchg
xor
mov
int
mov
decl
jns
test
jg
int3
jp
and
cmpsb
add
or
xchg
nop
shrd
or
jp
cwtl
lcall
sbb
shl
sahf
enter
push
pop
test
or
imul
shll
push
adc
rorl
jg
filds
popa
aad
push
inc
std
aad
jl
inc
dec
or
or
dec
movsl
lea
and
adc
add
out
aaa
jne
mov
push
mov
test
inc
sbb
jbe
inc
insl
inc
pop
out
cld
mov
jmp
stos
cld
jl
mov
adc
lret
inc
mov
lods
or
mov
shrl
into
roll
shrb
aaa
jg
hlt
mov
decl
out
jns
xor
inc
test
cmpsl
out
push
inc
mov
imul
adc
pop
push
inc
xchg
push
iret
jnp
mov
adc
sti
inc
lds
or
mov
mov
movsl
dec
dec
mov
xor
js
cwtl
and
rclb
xor
push
jg
lea
adc
pop
push
inc
jb
sbb
inc
mov
and
shlb
in
nop
pop
aas
outsb
xor
jg
push
jp
ds
mov
jle
outsl
scas
and
mov
arpl
mov
cmpsl
or
xor
inc
xor
imul
out
jae
fmull
jb
push
andl
jb
lret
lcall
mov
or
pop
mov
test
ja
in
lods
insb
pusha
into
rol
cld
outsb
pop
or
adc
xabort
aas
push
add
sub
mov
lods
mov
daa
sbb
push
xchg
int
sbb
stos
in
gs
mov
inc
in
jns
pop
sub
mov
imul
fmul
sub
jae
cld
mov
dec
rclb
lret
je
dec
rcrb
cmc
outsl
insl
mov
int3
cwtl
loopne
adc
or
xchg
not
cmp
or
subb
in
outsb
sahf
mov
ret
and
rsqrtps
mov
xor
sub
push
sbb
cmc
movsl
pop
mov
cwtl
xchg
mov
cmp
or
shll
cmpsb
mov
bound
jl
xorl
adc
addr16
pop
fcomi
pop
add
adc
jecxz
and
addr16
cmp
icebp
ror
pusha
gs
push
inc
rcrb
jne
in
lahf
imul
mov
outsl
cltd
push
sub
cmp
dec
notl
push
sbb
lahf
adc
repnz
jae,pt
xlat
jmp
aaa
nop
mov
push
cwtl
push
stc
movsl
out
in
daa
ret
mov
inc
dec
dec
ljmp
les
add
push
fstps
pop
xlat
mov
in
ljmp
cmc
or
cmpsl
scas
loop
loopne
outsl
mov
xor
mov
ficoms
lret
pop
pop
mov
pop
sti
cli
mov
dec
sarl
sbb
fldcw
and
andb
add
adc
xchg
scas
and
lea
push
and
push
xor
mov
addr16
add
push
movsb
mov
int3
aam
arpl
test
mov
adc
sub
repz
int
daa
dec
and
iret
lcall
ljmp
jns
mov
inc
call
cli
push
add
inc
in
sahf
adc
sub
dec
movsl
xor
cmp
inc
mov
xor
shll
decb
sbb
mov
stos
cwtl
je
ljmp
pop
mov
shlb
sbb
mov
add
mov
or
les
inc
nop
and
test
aad
popa
lock
idiv
mov
insb
das
lods
pop
mov
jno
cmp
in
xchg
fidivl
jbe
icebp
adc
in
imul
shll
in
sub
jecxz
enter
inc
pop
into
daa
xchg
aad
enter
lahf
sbb
dec
jbe
push
xor
iret
fucomip
call
jl
and
ds
and
ficompl
mov
xlat
cmp
movsl
cmc
imul
cli
mov
dec
movb
paddq
push
xor
mov
push
adc
mov
js
lock
sbb
xchg
mov
sti
pop
pop
loope
adc
jle
insl
imul
divl
or
aas
sahf
mov
adc
sbb
cmp
cmp
ror
mov
xor
mov
push
lret
loop
jae
outsl
inc
xchg
mov
fstps
jb
adc
loopne
sahf
clc
addr16
out
inc
into
test
imul
cmp
out
mov
in
sar
imul
mov
aam
xlat
pop
icebp
stos
mov
jnp
pop
into
ljmp
bound
push
movsl
and
testb
lcall
test
push
push
scas
pop
icebp
push
jge
mov
outsb
dec
notb
push
sub
mov
rcr
fs
outsl
mov
sub
cmp
xor
mov
in
mov
iret
addr16
lea
testl
cld
mov
pop
lods
test
cmpsb
cli
stc
xor
dec
jge
fwait
out
popa
lcall
fdivrs
movb
push
mov
inc
out
ret
push
jb
out
dec
mov
mov
sub
ret
lret
test
loop
cmp
pop
movlhps
movsb
loope
les
jle
mov
xor
shrb
psubb
xchg
add
sub
es
add
sarb
dec
adc
mov
sahf
andl
push
push
cmp
imul
out
fcompl
inc
loop
shll
test
cmp
enter
sbb
cmpsl
inc
and
or
aam
daa
mov
movsb
mov
pslld
and
xchg
int
cltd
lret
sbb
testb
sbb
push
cld
or
jl
pop
in
int3
repz
xor
daa
cli
jb
cmp
inc
inc
mov
xor
mov
fwait
paddusw
test
or
mov
or
aaa
mov
scas
jo
push
push
sbb
data16
and
inc
filds
fnstcw
lods
frstor
mov
inc
daa
pop
pop
mov
test
inc
and
add
fdivrl
push
push
mov
call
fisttpl
sbb
jge
jmp
shrl
out
loope
push
dec
add
pusha
iret
ss
inc
mov
adc
sbb
xor
lods
xorl
inc
movsl
test
or
gs
inc
jb
adc
inc
cmc
test
jno
push
jbe
xor
fs
mov
and
nop
dec
dec
jno
js
bound
or
xchg
mov
mov
mov
push
shlb
dec
jns
mov
addr16
inc
call
mov
inc
pop
lcall
and
mov
int
orb
adc
mov
mov
mov
pop
xlat
popa
dec
addr16
xchg
xchg
test
jae
add
out
test
sbb
ja
movsl
fcoms
nop
ficompl
pop
inc
push
out
lret
shrl
sbb
xor
push
mov
ljmp
dec
sbb
pop
loope
test
ljmp
xchg
int3
inc
dec
sub
mov
add
aad
adc
jecxz
lds
xchg
outsl
loopne
lods
push
cli
adc
in
push
into
fdivrs
push
push
xor
pushf
fnstcw
dec
testl
jg
gs
add
bound
cpuid
cld
stos
adc
nop
mov
cld
roll
cs
and
ret
mov
shrb
inc
cmp
and
mov
out
sahf
fdivl
nop
test
add
jmp
mov
aam
add
scas
aaa
push
cmc
and
out
call
push
push
stos
push
in
fmull
scas
add
mov
mov
adc
or
or
daa
pop
xchg
or
jne
xor
cmp
mov
push
fsubrl
bsr
pop
std
mov
and
ret
iret
fcoml
jns
adc
dec
push
rorb
movsb
lods
dec
mov
popf
outsb
inc
mov
jmp
movsb
bound
xchg
scas
xchg
call
xchg
add
xchg
movsb
inc
outsb
xor
repnz
sbb
pop
push
aad
rolb
sbb
sbb
dec
lret
or
adc
pcmpeqb
add
mov
les
mov
xor
and
sbb
mov
vcmpsd
icebp
lea
js
insl
xor
js
dec
jge
fs
jmp
mov
stc
sub
adc
fstl
adc
fstpl
scas
xchg
or
add
ljmp
mov
jb
jg
adc
movsb
pop
jns
mov
lcall
xchg
xchg
push
sbb
aam
icebp
jg
xchg
cld
std
mov
enter
mov
mov
mov
push
outsb
or
lahf
pop
jecxz
jns
cmp
sub
mov
mov
xor
push
mov
outsb
sub
cmp
xor
cli
lods
inc
movsl
cs
sub
inc
mov
push
shrb
imul
dec
lea
mov
out
mov
js
je
cld
ja
mov
xor
push
clc
dec
dec
dec
mov
xchg
xchg
push
xchg
fimull
bound
int3
cmc
les
adc
or
ret
ficompl
stos
mov
cmc
mov
jecxz
lcall
fcoms
mov
jge
xchg
ret
add
inc
into
push
outsb
dec
inc
in
dec
jno
repnz
das
lcall
leave
clc
push
ret
jne
lret
pop
adc
sti
sahf
jmp
jnp
mov
jbe
out
cmp
push
shlb
xor
ds
mov
mov
jne
jge
loopne
jp
popf
loopne
push
aad
pop
test
xchg
push
movb
leave
dec
int
jbe
out
mov
jle
movsb
jp
in
or
mov
mov
repz
hlt
cmp
iret
fmul
push
sub
cmp
or
test
xchg
lds
repz
lahf
pop
mov
daa
jg
ret
jmp
cli
pop
rcll
jl
iret
mov
push
dec
sub
xchg
pusha
sub
mov
popa
mov
xchg
lock
sbb
cmpsl
ss
xor
sbbl
xor
cmp
fdivrs
mov
xor
mov
scas
pop
sbb
inc
inc
testb
and
sbb
sbb
lds
lods
shll
jecxz
fcoms
push
aaa
jl
inc
imul
stc
add
dec
dec
outsb
shlb
dec
repnz
sbb
cmp
pop
push
sbb
addl
in
pop
test
add
andl
in
dec
cmp
sarb
mov
ret
sahf
mov
shlb
and
push
push
scas
adc
adc
decl
xchg
xor
xor
mov
rcl
or
jle
sub
xchg
in
inc
xchg
fdiv
mov
xor
xor
xlat
sub
sub
addr16
push
push
fs
sub
clc
push
fisttpl
push
in
mov
imul
in
das
rcll
push
jae
repz
sbb
or
adc
xorb
push
push
inc
test
int
clc
push
out
lods
adc
inc
jmp
aas
push
lea
ja
das
mov
add
jbe
mov
adc
add
pop
push
pop
fimull
dec
hlt
sub
pop
and
dec
cli
out
iret
pop
sahf
test
mov
pop
mov
mov
pop
mov
je
leave
cltd
outsl
jo
lcall
xchg
popf
push
inc
or
or
movsl
and
xor
mov
mov
mov
mov
out
insb
fistpll
and
or
mov
dec
out
mov
pop
mov
mov
imul
test
cmp
or
pop
and
popf
loopne
or
pusha
imul
push
mov
outsb
jecxz
adc
xchg
xchg
test
outsl
and
rcrb
loopne
ss
imul
sbb
push
cmpb
add
mov
rolb
jge
gs
cmp
or
and
jmp
mov
pop
movsb
cmc
test
enter
negl
adc
or
andb
mov
adc
test
orl
jno
addr16
fldt
pop
arpl
push
jg
call
lds
pop
arpl
scas
arpl
or
lahf
out
aas
xchg
in
sbb
enter
dec
cmp
xchg
test
aad
xchg
fs
fnstcw
mov
popf
aas
pop
sbb
jae
test
cmpl
icebp
sbb
loopne
daa
xchg
std
pop
iret
lret
stos
ja
mov
test
dec
imulb
xor
mov
dec
lea
and
addr16
adc
inc
adcb
jle
inc
adc
lahf
jecxz
and
shll
or
mov
mov
push
loope
push
test
xorl
mov
je
jns
pop
sbb
js
jmp
dec
sub
sbbl
push
sti
or
xor
jbe
push
xchg
dec
pop
bound
iret
into
xchg
mov
mov
adc
pop
pop
movsl
sub
push
iret
insl
loop
fdivrl
cmp
xor
jae
outsb
das
lcall
jmp
jg
cmp
scas
add
mov
xor
adc
adc
lret
cmp
lods
dec
adc
int3
dec
divl
repz
in
out
cmp
push
pop
dec
sarl
mov
xchg
and
dec
cli
pushf
adcl
fldenv
push
insb
sub
lods
add
jnp
call
lahf
mov
pusha
gs
divb
rcl
push
mov
or
cmp
add
int3
js
sub
sarb
stos
push
fs
int3
call
push
sub
lods
inc
and
leave
mov
push
xchg
fcom
pop
pop
push
xchg
pop
arpl
jmp
mov
out
fs
movsl
loopne
in
push
cmp
mov
jns
mov
addr16
pop
dec
and
lret
orb
jne
int3
pop
xchg
and
lcall
jmp
aaa
test
jp
inc
out
les
leave
fbstp
mov
enter
mov
adc
mov
mov
notb
pop
hlt
rcll
mov
decb
cmpsl
cmp
push
lods
cmp
pop
fs
ret
mov
xchg
loop
test
xor
fimull
daa
jno
nop
mov
lea
clc
sub
xor
sarb
cs
scas
sbb
mov
xor
add
push
jae
inc
ss
inc
hlt
and
test
xchg
or
incb
out
pusha
out
mov
push
xchg
in
sbb
arpl
adc
idivl
cmp
enter
dec
and
jge
sbb
xor
call
test
jns
pop
nop
pop
push
lea
mov
xchg
pushw
mov
xchg
out
fsts
testb
decl
bound
dec
cmp
xchg
test
bound
push
or
je
cmc
or
push
push
jbe
lods
out
call
and
fisubs
mov
push
jns
sub
inc
cmp
cltd
push
sbb
sub
push
mov
sbb
inc
addr16
mov
mov
inc
lret
lods
ficoms
xchg
sarb
mov
mov
mov
ds
and
xor
decb
dec
arpl
das
in
jp
adc
shld
icebp
inc
jge
enter
and
push
pop
push
push
jno
jb
xlat
and
push
insb
mov
shll
jno
xor
loope
jl
lea
hlt
out
cli
add
out
adc
or
or
rorl
in
xchg
movsb
data16
out
aad
inc
stc
es
pop
mov
stos
mov
jle
sub
adc
adc
inc
roll
xchg
sub
fidivs
ss
jg
test
aas
adc
push
xchg
and
pop
jne
dec
aas
shll
les
stos
xchg
xchg
mov
test
les
mov
sbb
sbb
xchg
jecxz
xor
clc
mov
jnp
jg
jg
popa
gs
notl
dec
ret
call
sub
dec
lret
cmp
push
fsubp
mov
imul
lea
jmp
xchg
lock
xor
mov
nop
and
sub
cs
roll
repnz
fucomi
cmpsl
inc
inc
fnsave
outsb
and
xchg
adc
dec
jle
imul
push
pushf
int3
cmc
jg
inc
dec
dec
adc
add
jg
inc
out
hlt
xor
cmpsl
std
pop
pop
mull
xorl
nop
rorb
out
xor
xchg
sbb
mov
lock
add
leave
out
mov
dec
jmp
pop
xchg
fyl2x
aad
lret
mov
jnp
xchg
fists
ljmp
xchg
inc
sbb
out
cltd
loope
and
imul
jnp
jae
cld
pushf
repz
fmull
lret
add
inc
jge
ret
mov
shll
loopne
cld
adc
aam
les
mov
push
jecxz
jg
mov
mov
sti
in
xchg
mov
insl
iret
push
xor
mov
loopne
xchg
outsl
adcb
int3
sbb
das
fdivs
ficompl
daa
std
loopne
xor
adc
mov
icebp
movsb
leave
pop
pop
je
insl
in
pop
or
nop
jbe
int
and
dec
imul
pop
cmp
cmp
lahf
mov
fstl
jle
imul
in
je
dec
stc
cmp
jns
pop
pop
mov
arpl
leave
xchg
call
push
ss
repz
push
mov
xchg
or
pop
loop
mov
loop
ret
and
add
cmp
addr16
cmp
sbb
push
mov
pusha
loopne
xor
ljmp
aam
or
pcmpeqd
inc
sub
jns
adc
ljmp
pop
cmc
sti
movsb
push
mov
sbb
jecxz
out
fs
movsl
push
aad
fcmovnbe
lods
jae
cmp
test
sbb
add
incl
test
xchg
xor
jmp
pop
and
rol
nop
sub
fisttpl
dec
lret
iret
sbb
mov
push
sub
lcall
jno
mov
lea
xchg
arpl
lahf
jle
sbb
notl
leave
inc
into
je
or
pop
dec
dec
cmc
sub
jle
pop
fsub
daa
bound
test
sti
pop
dec
pusha
mov
mov
ret
cmp
jb
loopne
jge
push
inc
add
adc
call
stc
lock
xchg
call
inc
inc
stos
xor
mov
xchg
push
push
pop
add
mov
or
sub
mov
inc
and
lods
pushf
or
mov
iret
adc
ja
xor
sti
push
sahf
adc
xchg
lds
divl
and
lret
sbb
addr16
jecxz
jno
push
imul
negb
jecxz
cs
dec
push
imulb
popa
push
xlat
mov
les
ljmp
ja
out
add
flds
das
icebp
adc
adc
cltd
fdivrs
jo
push
cld
sbb
movsl
sub
movswl
push
lret
xor
ljmp
aaa
push
mov
push
inc
aam
and
loopne
sbb
mov
xchg
lock
mov
xor
xor
sbbb
frstor
sbbl
adc
push
cs
nop
add
movsb
movsb
jmp
mov
inc
mov
fnstcw
es
add
cld
scas
mov
ds
or
in
lahf
imul
imul
mov
movsl
xchg
add
repnz
mov
das
xchg
xchg
pop
push
mov
in
push
lret
jmp
xorb
xor
mov
add
sub
xlat
cmp
std
loope
jmp
sub
pop
pop
cli
sbb
push
push
sub
mov
mov
fistpll
je
push
lret
inc
dec
pop
or
push
test
mov
shll
test
int
lahf
incb
dec
push
lods
mov
jp
jno
jbe
lret
mov
aaa
ja
fs
pop
push
mov
add
cli
fisttpl
push
sbb
popf
arpl
or
aaa
xchg
sub
jp
jno
call
dec
push
push
movsb
dec
dec
push
jbe
mov
andl
push
dec
movsb
mov
mov
mov
lahf
mov
push
shl
push
scas
xchg
lret
cwtl
clc
inc
fwait
or
out
test
xor
xchg
dec
cmc
loope
and
mov
add
aam
insb
scas
ds
xor
or
xor
adc
push
sub
mov
and
fsubl
repz
xor
or
fprem
jle
fdivrl
adcb
into
cld
add
and
cmp
mov
mov
adc
idivl
push
scas
cmp
sbb
rcrb
dec
push
sub
or
loope
popf
punpckldq
jmp
xor
pop
cs
ja
jne
out
in
repz
mov
out
imul
jmp
mov
faddl
mulb
lret
push
lods
pop
cmp
shr
mov
outsb
adc
or
stos
sub
fnstcw
inc
jg
fnstcw
xor
xor
roll
mov
sub
mov
loop
arpl
push
cmp
or
movl
mov
fcmovb
lods
sbb
js
imul
xchg
inc
xchg
scas
jl
mov
lock
loop
xor
cs
mov
jg
jle
dec
push
or
mov
dec
sub
or
ss
jle
pop
cmpsb
and
mov
mov
lcall
or
cmp
push
aaa
inc
out
push
or
mov
add
xor
inc
call
mov
rorb
enter
hlt
adc
xchg
ds
in
pop
mov
insb
mov
inc
out
nop
testb
je
imull
pop
xchg
push
movsl
push
xchg
xchg
mov
mov
inc
int
xor
loop
push
in
fldenv
pop
inc
in
pop
sarb
arpl
pop
xor
xor
xor
sbb
leave
add
sbb
out
or
add
jmp
pop
insb
loop
lahf
popa
ja
clc
insl
lahf
pop
cmpl
mov
testb
fs
aad
push
xor
xor
int3
or
rolb
decb
xor
mov
pop
jg
dec
mov
pop
dec
sti
dec
mov
daa
test
or
xor
jbe
nop
lods
dec
lods
ret
push
testl
mov
hlt
and
pop
ss
adc
aas
cmp
or
insb
stos
cmp
add
cmp
add
je
cmc
and
fdivr
sub
xlat
xor
rolb
and
fistpl
push
add
or
cli
xor
pop
cwtl
jecxz
sub
nop
imul
lds
dec
jae
shrl
mov
lcall
and
cld
inc
jo
adc
mov
aaa
mov
dec
sub
fistl
add
fmull
sbb
xchg
loope
add
fwait
sbb
sub
inc
mov
movsb
pop
inc
pop
add
dec
lahf
or
xchg
stos
dec
inc
adc
cwtl
popf
xor
xor
xchg
xchg
lret
mov
add
pop
sahf
xor
mov
ds
push
sub
push
es
fnstenv
bound
xchg
mov
mov
sbb
mov
add
mov
bound
ja
cwtl
pop
loop
push
inc
fmul
rcrl
test
in
mov
push
pop
dec
mov
cmpsb
mov
mov
fdivp
lds
ror
jnp
mov
cmpsl
sbb
mov
adc
mov
pop
shll
in
outsl
pop
scas
xchg
mov
adc
test
add
xchg
fsts
and
mov
es
sub
pop
mov
mov
mov
mov
js
in
jb
xchg
jg
jl
sbb
movsb
lcall
clc
dec
fdivp
ds
cld
bound
ja
sub
add
or
xchg
xchg
fstl
into
mov
inc
sbb
push
pusha
xchg
sahf
ss
sbb
inc
dec
or
call
stc
arpl
test
iret
mov
jmp
push
notl
push
mov
daa
in
inc
jg
pop
lret
xor
clc
sub
icebp
dec
cmpsl
rcll
dec
inc
push
push
stc
push
rcll
and
mov
cmc
sub
aam
jns
sub
xor
jl
jae
fsub
stos
pop
in
jns
sahf
sbb
ja
mov
imul
add
stc
xor
push
sahf
jecxz
mov
sti
add
push
or
jl
lret
cmp
xor
leave
es
push
rorl
mov
testl
cmp
test
pop
push
and
sub
jp
jns
cmp
je
mov
fimuls
push
jmp
xchg
mov
jl
fs
mov
sub
aad
fmuls
pop
enter
xchg
push
adc
sbb
and
std
fwait
packssdw
push
hlt
popa
daa
sub
mov
add
pop
ret
mov
fnclex
or
ret
lock
sub
xor
call
notb
lea
out
movsb
inc
in
dec
push
test
cmp
fadds
lahf
pop
push
xor
mov
sub
repnz
mov
je
or
invd
ret
push
xchg
mov
adc
adc
das
adc
sub
lods
sahf
icebp
test
push
mov
fs
cmp
push
jns
mov
sub
cmp
inc
inc
stos
mov
adc
or
mov
jae
xor
sarb
add
cmp
pop
popa
push
bndstx
in
cmc
mov
pop
pop
lret
sbbb
xchg
mov
jo
mov
js
xor
xchg
insl
mov
testl
dec
lea
pop
pop
lock
inc
push
sub
sbb
lods
ficompl
ret
dec
mov
push
clc
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adc
mov
movl
cmpl
je
cmpl
ja
jmp
pushl
push
call
mov
dec
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
movl
sbb
movl
movl
cmpl
je
cmpl
jge
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
call
jmp
mov
movl
sub
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
jmp
mov
xlat
and
mov
js
cwtl
dec
aad
sub
addl
jge
iret
xbegin
xor
cmc
cmp
pop
jo
fmull
sub
pop
and
fs
stc
sti
sub
sarl
xlat
mov
mov
aad
sub
adc
mov
pop
aas
cld
out
jno
sub
lea
fnsave
lods
lock
or
hlt
or
jg
xchg
in
and
cmp
jmp
call
ja
mov
jnp
mov
scas
int3
push
out
hlt
push
pop
repz
mov
adc
and
js
adc
or
loopne
pop
test
inc
dec
add
mov
inc
sti
push
mov
adc
es
enter
sub
fldl
rcr
push
mov
sbb
pop
out
sub
outsl
push
push
push
xor
jnp
fdivr
and
daa
sub
mov
in
xor
outsl
outsb
pop
push
mov
pop
sub
mov
xchg
cmp
clc
cmp
cmpsl
int
es
jecxz
jmp
int
daa
adc
subl
mov
outsl
mov
xor
scas
enter
test
and
inc
in
dec
xchg
and
mov
ficomps
pushf
mov
sub
cmp
sbb
mov
aad
addr16
jp
lock
inc
test
out
push
xchg
pop
fcompl
lahf
scas
cs
cmp
mov
pop
mov
jecxz
pop
ror
cmp
mov
sub
add
mov
jne
dec
push
incl
jne
pop
push
aaa
ss
push
popa
sbb
jbe
push
stos
adc
cmp
gs
lcall
out
out
xchg
cmp
xchg
inc
xor
mov
in
dec
nop
testl
shlb
cmp
mov
mov
push
jnp
imul
js
xchg
mov
and
sub
jnp
lahf
gs
ss
dec
dec
aad
jo
rclb
loope
jb
popa
jnp
dec
mov
ja
fimuls
repnz
lock
push
mov
aaa
shrl
cmp
mov
mov
add
xchg
dec
pop
aas
ror
daa
call
in
cld
sar
cmp
ret
push
test
fs
dec
adc
push
outsb
xor
mov
add
das
push
push
les
mov
adc
xchg
jmp
call
in
mov
fcoml
pop
cld
sbb
xchg
int3
js
jg
rcrb
test
push
mov
jb
mov
jo
lea
jg
mov
and
or
push
pop
mov
addl
and
scas
aas
jne
test
pop
fs
cmp
fxch
outsl
sbb
scas
sub
orl
cmp
into
imul
fldcw
out
scas
loopne
mov
mov
aad
daa
cld
push
cmp
and
popf
xor
inc
xchg
movl
roll
push
sub
pop
int3
repnz
push
sub
push
xchg
dec
test
dec
mov
push
enter
inc
fucomip
ja
pop
mov
mov
loop
shlb
mov
clc
lods
pop
bound
inc
and
shl
enter
dec
rorl
jnp
pop
aam
clc
lahf
pop
jge
sar
gs
or
das
int
mov
in
int3
incb
mov
xor
lcall
cmp
cmpsb
pop
fsubp
jne
jp
xchg
sti
pop
or
or
repz
rolb
cwtl
test
mov
fcoml
push
jno
scas
mov
loopne
sbb
stos
push
mov
cmp
inc
pop
push
test
xor
dec
dec
push
icebp
das
push
test
shrl
xor
push
lea
sbb
andb
dec
sti
and
bound
jp
bound
cmp
lahf
lahf
std
lock
inc
or
jns
inc
int
pop
fcomps
pop
jbe
jmp
cmp
pop
sbb
daa
add
pop
rcrb
ret
jmp
and
cmc
lock
gs
jp
cwtl
hlt
cmp
xlat
xchg
push
dec
loopne
push
daa
cmp
stos
mov
in
jbe
sbb
add
pop
cltd
push
scas
loopne
mov
ret
sar
imul
mov
ljmp
enter
sbb
sub
fwait
dec
pop
sbb
cmp
in
dec
idivl
or
push
adc
aaa
push
out
jl
ficompl
mov
push
xchg
test
cld
fldenv
sbb
cs
xchg
popf
rorl
repnz
inc
orl
xor
popf
shlb
cld
and
push
or
imul
xchg
dec
push
sbb
repnz
mov
test
fnstenv
imul
xorl
out
mov
pop
push
cmp
xchg
daa
repnz
hlt
inc
adc
ja
pop
cmp
jae
xor
out
sub
dec
movsb
es
shrb
mov
repz
popa
pop
lods
sub
out
cmp
cmp
xchg
out
adc
mov
xor
fs
xchg
out
or
mov
sub
loope
out
mov
movsb
test
fdivrl
stos
stos
neg
sub
xor
daa
leave
movsl
das
mov
xchg
shrb
sub
push
mov
pop
mov
pop
shll
in
cmp
cmp
negb
outsb
adc
mov
pop
push
jae
push
cmp
dec
int3
xchg
mov
cwtl
add
imul
cmpsb
xchg
imul
test
push
jnp
adc
in
movsb
mov
inc
inc
pop
fbld
fsubrl
mov
dec
sbb
cmpl
jmp
or
in
pop
and
cmp
mov
or
aam
mulb
out
nop
xchg
or
xchg
dec
cmpsb
pop
lds
fdivr
fdivrl
jge
scas
rcll
sbb
or
sbb
ljmp
daa
jbe
push
lret
pop
adc
mov
lods
mov
lods
aam
xchg
sbb
and
or
push
int3
in
mov
ds
dec
div
ret
adc
inc
shlb
lcall
or
popf
xlat
sbb
xor
ficoms
mov
call
jns
mov
imul
add
xor
mov
jecxz
incb
cmp
nop
mov
jecxz
das
outsl
enter
and
inc
test
dec
mov
out
stos
call
mov
adc
and
hlt
out
mov
mov
xchg
pop
mov
mov
cmp
inc
add
ja
and
sar
add
jecxz
or
mov
mov
jle
sbb
fistl
sbb
imul
shll
mov
xor
adc
test
out
push
test
lret
dec
pop
pop
or
cs
lock
loop
xor
bound
push
rclb
lds
inc
inc
and
cmp
mov
xchg
mov
rcrl
or
sbb
cmpsl
lret
in
inc
aam
shrb
jbe
and
xchg
shl
data16
mov
push
mov
push
lahf
and
lretw
push
inc
sub
push
mov
mov
out
cmpsl
xchg
push
jae
pop
push
jp
test
xlat
and
pusha
mov
xor
cmp
inc
sub
lahf
insb
call
pop
mov
outsl
add
mov
ffree
pusha
mov
jmp
pushf
gs
mov
xchg
and
and
mov
jp
sub
ret
daa
pop
mov
xchg
pop
mov
andl
mov
dec
inc
mov
push
stc
insl
sub
sbb
scas
pop
mov
push
sub
popf
inc
push
jnp
cmpb
dec
inc
les
dec
jmp
jle
hlt
leave
adc
fildll
sbb
lock
fst
lahf
lcall
mov
ret
mov
icebp
repnz
inc
dec
push
mov
cmp
adc
xchg
fstps
jb
push
push
jae
mov
lahf
enter
xor
addr16
jno
pop
repnz
sarb
cltd
cwtl
loopne
inc
popa
sbb
std
clc
insl
sbb
jmp
and
sub
push
mov
into
mov
xchg
cwtl
pushf
ret
push
add
lcall
clc
jle
xchg
sti
loopne
and
dec
outsb
test
cwtl
and
and
sbb
shl
push
int
ja
test
jne
icebp
iret
inc
mov
xor
jmp
push
lds
jecxz
ja
fdivrs
mov
mov
jge
scas
push
aad
mov
int
shrb
mov
mov
push
imul
mov
jle
mov
pop
testb
push
jl
out
mov
addb
test
test
xchg
dec
incb
xchg
add
pop
insb
adc
pop
call
aaa
adc
stos
cmp
sub
testb
push
mov
jecxz
push
mov
dec
or
push
sbb
and
lcall
scas
xchg
sbb
std
ret
imul
sbb
pop
and
retw
add
aas
xorl
insb
mov
mov
sbb
jbe
or
jg
pop
mov
movsl
lahf
imul
xor
insb
add
dec
sbb
mov
gs
fs
sub
test
mov
in
inc
shl
pop
xor
lcall
push
lea
xchg
lea
jne
push
cmp
mov
in
hlt
aaa
sbb
popa
adc
shlb
mov
cs
mov
inc
fdivrl
sbb
mov
dec
pop
jecxz
jne
imul
jmp
sbb
pushf
rcll
jmp
aaa
loop
shll
out
imul
in
mov
pop
cs
or
jb
es
cmp
xchg
push
scas
cmpsb
inc
addr16
pop
lock
cmpsl
addr16
movsb
movsl
pusha
push
cmp
fmulp
mov
addl
push
ja
sbb
cmpsb
inc
adc
push
sbb
rorl
jg
jmp
push
movsb
dec
cli
push
xor
and
xor
or
pushw
iret
mov
mov
sbb
fs
addr16
or
das
add
and
pop
cmp
dec
jmp
adc
add
xorb
and
jnp
xor
cmpb
inc
or
jp
pop
mov
xchg
imul
push
sub
jb,pn
xor
imul
andb
adc
dec
subl
sbbl
sub
in
aam
test
popl
mulb
sub
xchg
mov
pop
mov
inc
enter
ljmp
dec
clc
cmp
xorb
or
int3
sbb
scas
popa
jmp
scas
test
lock
pusha
pop
mov
fbstp
sahf
push
and
test
gs
xor
addb
mov
adc
aad
divl
inc
jp
leave
leave
stos
data16
imul
xchg
lds
or
lret
xor
cmc
inc
adc
test
xor
fistps
and
jnp
cwtl
test
xchg
or
add
movb
jp
cs
adc
ret
xchg
and
dec
mov
shl
ljmp
dec
cmp
sbbl
push
aad
scas
data16
xor
into
fwait
push
pushf
es
cmpsl
pop
out
xorl
inc
sbb
sbb
nop
movb
iret
andb
mov
cltd
sub
aas
mov
out
shlb
adc
cmp
dec
popf
mov
mov
jae
cmpsb
aas
push
dec
pop
push
and
out
mov
pop
sub
pop
ret
out
je
jge
sub
adc
mov
lods
mov
fbld
ret
aad
and
inc
pop
push
imul
inc
pop
mov
push
xor
xchg
add
jno
loop
fisubrl
mov
mov
lods
mov
fisttps
xchg
cld
mov
adc
in
scas
imul
inc
cmpsb
or
fildll
inc
in
fldcw
xchg
inc
lahf
xor
dec
daa
mov
adc
jg
dec
repz
std
ret
sbb
nop
push
lcall
adc
xor
imul
shrl
add
jnp
pushf
fwait
inc
mov
das
dec
repz
pop
cmp
fisubs
mov
sbb
jge
mov
pop
das
inc
jbe
xor
mov
test
or
xor
sub
jp
addb
xor
sbb
addr16
sbb
cld
sbb
push
dec
fs
xor
pop
or
in
cmp
mov
inc
xlat
and
outsb
cmpsl
fnstsw
imul
repnz
xchg
les
in
mov
add
pop
mov
pop
xchg
stos
fimuls
pop
cmc
xchg
pop
or
push
mov
in
cli
in
inc
mul
add
js
lahf
leave
mov
add
jle
popf
mov
add
cmpsl
loop
mov
xlat
call
and
lret
sahf
mov
gs
and
outsl
xchg
shrb
xchg
push
mov
stos
push
popf
rorl
push
xor
sbb
out
mov
stos
sbb
cli
sti
aas
shl
or
inc
mov
hlt
mov
stc
lret
mov
push
aas
test
add
sbb
pop
ljmp
andb
dec
popf
push
mov
sub
sahf
mov
adcb
ja
cld
push
push
imul
jnp
lcall
mov
add
fld
push
dec
fistpl
mov
inc
cld
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
push
push
call
cmpl
jb
movl
lea
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
movl
andl
xor
xor
inc
mov
cmpl
jb
jmp
pushl
push
pushl
pushl
call
cmpl
jb
lea
xor
mov
or
mov
and
mov
movl
mov
xor
subl
add
mov
add
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
sub
push
sub
mov
mov
mov
mov
xor
or
mov
adcl
add
movl
cmp
movl
je
movl
mov
movl
jmp
mov
xor
andl
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
jmp
add
sub
xor
mov
andl
add
push
movl
adc
movzbl
adc
mov
xor
xor
cmp
jne
cmp
movl
jne
push
jmp
mov
xor
adcl
add
movl
xor
xorl
add
adc
xor
xor
movl
cmp
movl
jne
movl
cmp
jne
add
mov
movzwl
xor
xor
addl
add
mov
mov
mov
xor
add
xorl
imul
movl
mov
subl
xor
adcl
add
movl
cmp
movl
mov
je
mov
subl
add
xor
mov
mov
and
mov
orl
xor
xorl
add
addl
imul
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
addl
sub
addl
push
movl
push
push
xor
adcl
push
sbbl
push
andl
push
call
orl
mov
andl
lea
push
movl
push
call
movl
cmp
movl
je
xor
jmp
andl
mov
inc
mov
cmpl
jle
jmp
push
push
push
push
pushl
pushl
push
call
cmpl
jb
mov
push
lea
addl
push
adcl
push
subl
push
push
sbbl
call
adcl
imul
movl
cmp
movl
jne
lea
subl
push
push
call
movl
cmp
movl
jne
pushl
push
andl
call
movzbl
and
mov
sub
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
lea
add
mov
lea
mov
and
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movzbl
sub
mov
mov
movzwl
adc
mov
xor
orl
mov
movl
add
movl
mov
mov
mov
cmp
jne
movl
cmpl
je
cmpl
ja
jmp
pushl
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adcl
mov
subl
xor
add
sbbl
mov
xor
mov
adcl
xor
addl
add
mov
movzwl
sub
mov
mov
andl
xor
add
orl
mov
sbb
mov
mov
xorl
mov
addl
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
mov
mov
subl
movl
mov
movl
decl
mov
xorl
xor
sbbl
add
movl
jmp
lea
push
addl
push
call
cmp
movl
jne
push
subl
lea
push
sbbl
push
subl
push
addl
push
call
imul
cmp
movl
jne
adcl
lea
xorl
push
push
call
movl
cmp
movl
jne
mov
mov
xor
addl
lea
adcl
push
mov
orl
xor
lea
push
xorl
mov
pushl
andl
call
mov
mov
xor
lea
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
xor
xor
adcl
add
mov
sbb
mov
mov
xor
movl
lea
mov
movl
cmp
movl
jbe
adc
mov
add
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
ja
jmp
pushl
pushl
push
call
mov
dec
mov
jmp
mov
or
mov
mov
sub
xor
mov
adcl
lea
sbbl
mov
lea
mov
lea
push
subl
push
call
cmp
movl
jne
push
subl
lea
xorl
push
push
addl
push
adcl
push
call
movl
imul
movl
cmp
jne
lea
andl
push
adcl
push
xorl
call
movl
cmp
movl
jne
orl
lea
subl
push
addl
push
call
movl
cmp
movl
jne
push
lea
xorl
push
push
adcl
push
push
call
imul
cmp
jne
lea
push
push
subl
call
movl
cmp
movl
jne
lea
addl
push
negl
push
addl
call
movl
cmp
movl
jne
xorl
push
orl
lea
andl
push
subl
push
adcl
push
xorl
push
orl
call
imul
movl
cmp
jne
orl
lea
push
subl
push
notl
call
movl
cmp
movl
jne
lea
push
subl
push
subl
call
movl
cmp
jne
addl
push
lea
push
sbbl
push
push
push
call
subl
imul
movl
cmp
jne
addl
lea
orl
push
push
andl
call
movl
cmp
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
imul
movl
cmp
movl
jne
addl
lea
orl
push
andl
push
andl
call
cmp
jne
orl
lea
subl
push
xorl
push
addl
call
movl
cmp
movl
jne
adcl
push
xorl
lea
xorl
push
adcl
push
push
sbbl
push
adcl
call
imul
cmp
jne
movl
lea
addl
push
notl
push
call
movl
cmp
jne
lea
xorl
push
push
addl
call
movl
cmp
movl
jne
push
lea
adcl
push
xorl
push
adcl
push
xorl
push
call
adcl
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
or
mov
mov
or
movl
add
mov
movzbl
adc
push
or
mov
xor
xor
movl
cmpl
je
cmpl
jb
jmp
pushl
call
mov
dec
mov
jmp
mov
adcl
push
adcl
mov
addl
add
movl
cmp
movl
je
mov
adc
mov
mov
xor
sbbl
xor
add
xorl
add
movl
adc
sbbl
xor
adcl
mov
push
dec
xor
xor
mov
mov
and
mov
add
adc
movl
xor
incl
xor
movl
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
xor
movl
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
mov
adcl
movsbl
adc
mov
andl
sub
mov
addl
xor
movl
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jle
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
push
mov
mov
movl
movl
push
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
jmp
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
leave
dec
jns
add
add
add
add
xor
add
rclb
add
inc
add
add
add
push
push
inc
push
push
cmpsl
mov
pop
int3
sub
mov
add
inc
cmp
outsb
outsl
ja
and
pop
inc
imul
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
inc
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
lods
outsb
lods
repz
xchg
testb
xor
xchg
lea
imul
fwait
or
fwait
or
mov
lea
xchg
lea
xchg
fwait
cltd
mov
test
xor
mov
xchg
mov
lea
push
push
cmpsb
jb
push
notl
mov
test
cmpsb
test
push
push
mov
ret
add
jmp
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
inc
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
dec
xor
cmp
je
push
push
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
dec
xor
cmp
jne
mov
pop
pop
cmp
je
xor
xor
mov
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
inc
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
inc
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
