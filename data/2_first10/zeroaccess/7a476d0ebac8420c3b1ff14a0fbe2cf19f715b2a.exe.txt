mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
imul
nopl
jmp
mov
xlat
les
sub
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
mov
enter
mov
js
pusha
jl
icebp
rcrb
and
movsl
adc
cs
popa
lret
cltd
pop
xchg
fcompl
push
inc
pop
jecxz
lods
jmp
lcall
sbb
or
iret
sub
movsb
aas
xor
mov
call
mov
cmc
inc
inc
adc
cmc
inc
loope
push
jns
mov
arpl
mov
sbb
mov
imul
xlat
sub
loopne
fs
sbb
xchg
mov
repnz
add
out
or
lea
mov
adc
mov
dec
jp
inc
scas
pusha
leave
push
imul
push
dec
ffree
cmp
rclb
push
std
inc
lods
or
inc
sti
hlt
adcl
mov
data16
mov
jp
mov
call
xor
sub
add
lock
mov
fidivrl
mov
mov
push
pop
clc
jo
stos
orl
xbegin
mov
adc
shl
shl
pop
or
xchg
mov
mov
rcl
aam
hlt
pop
sub
or
dec
loop
into
dec
dec
fistl
inc
mov
add
pop
shlb
mov
popf
test
std
pusha
rorb
adc
and
enter
icebp
push
cmp
mov
pop
push
jo
xor
mov
pop
cmpsb
sarb
dec
pop
cltd
rolb
scas
adc
sub
mov
fs
outsb
daa
xor
lcall
adc
aad
sahf
daa
inc
pop
mov
je
mov
mov
push
xchg
xor
fadd
mov
sbb
lods
ds
mov
lock
xchg
jnp
fxch
out
mov
bound
jno
aam
seto
push
movsb
xor
hlt
insl
or
in
rcr
aaa
pop
dec
xor
dec
xchg
int
loopne
lret
mov
int
mov
stos
aam
xchg
into
adc
cmp
fdivr
xor
sub
push
cmp
mov
sub
and
push
inc
in
pushf
and
ds
enter
adc
lcall
in
cmp
push
pop
cmc
je
xchg
cmp
dec
xorb
jns
dec
mov
push
and
cmpsl
pop
gs
outsl
je
inc
adc
lea
insl
mov
mov
pop
inc
or
sbb
repz
int
push
dec
sub
cmp
outsb
shlb
cwtl
popa
xor
fcmovnu
xchg
ret
push
mov
adc
inc
push
stos
xor
xor
mov
in
test
bt
leave
shr
jno
cli
in
stc
fsubr
mov
js
cmp
mov
xor
or
mov
in
push
test
ja
testb
addr16
mov
sbb
testl
rcr
adc
mov
ljmp
gs
fcomps
pop
test
std
into
fisttpll
push
jo
sbbl
jmp
add
pushf
sbb
clc
lahf
sbb
iret
aam
cld
sub
mov
mov
aad
hlt
xor
pop
dec
loope
cmc
clc
bnd
loop
adc
lret
mov
mov
adc
xchg
cs
mov
add
xor
jmp
imul
jg
fwait
adc
jge
jl
aas
adc
and
imul
adc
popa
fwait
mov
inc
dec
or
shlb
adc
mov
ret
das
inc
test
pop
sub
test
es
loope
je
or
orl
jmp
add
je
pop
mov
jns
or
std
out
push
subl
mov
push
scas
push
inc
clc
and
sbb
das
sbb
insl
shl
lods
test
jge
xor
xor
sbb
dec
lods
jo
cli
shll
or
repnz
add
xchg
ret
ljmp
bound
nop
popf
mov
pop
cmpsl
jb
xor
jge
hlt
stos
push
hlt
ficoms
test
int3
push
pop
or
in
or
fdiv
in
jmp
push
cmc
push
pop
mov
adcl
jnp
sbb
cmc
fisubs
dec
cld
lods
rcrb
mov
xlat
mov
sbb
mov
in
jmp
js
mov
loope
mov
adc
test
pushf
sti
xchg
insb
jbe
pop
imul
mov
fidivrl
gs
data16
lret
aaa
lret
ret
push
pop
xlat
imul
pushf
push
jmp
xor
push
jb
sub
cmc
fstl
inc
mov
js
psrad
cmovne
pop
dec
fsubs
imul
mov
loopne
ret
mov
js
repz
dec
js
shll
in
sub
loop
xchg
test
cltd
ljmp
std
test
gs
clc
inc
inc
mov
sbb
out
sub
mov
ss
sti
mov
jne
push
aaa
ja
mov
mov
dec
cmpsl
pushf
push
push
and
add
das
push
lahf
inc
sar
sub
cltd
xchg
stos
mov
movsb
imul
inc
ret
cltd
inc
pop
and
daa
mov
fisubs
out
xorl
fwait
ja,pt
dec
leave
lods
movsl
sub
int3
rorl
mov
ret
mov
sub
stos
test
sbb
jae
lock
fwait
lret
js
je
scas
push
mov
mov
cs
and
incl
mov
jmp
in
daa
bound
lea
add
xchg
lods
cmp
jmp
es
in
jmp
cmp
cld
out
leave
add
bound
push
out
insb
push
mov
sbb
test
inc
pop
xor
dec
push
dec
inc
inc
leave
and
jb
insb
fwait
xchg
fs
pop
pop
inc
rcl
js
cli
push
cmp
cmp
dec
pop
clc
cwtl
xor
xor
fnsave
pop
and
fs
lock
sbb
jae
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
setae
add
cwtl
int3
adc
lods
dec
cltd
sub
dec
jae
insb
test
pop
in
or
mov
jmp
mov
movl
data16
xor
out
stos
bound
fwait
add
jb
xchg
cs
cmpb
lods
mov
inc
mov
xchg
pop
rcrl
sbb
movups
dec
fsubrs
es
inc
or
xchg
adc
push
clc
xlat
mov
sub
add
dec
test
vcvtpd2dqy
les
adc
je
inc
cmpsl
jmp
es
cmovno
cmp
sub
push
mov
push
stos
jno
cli
xchg
insb
cmpsb
add
inc
fnstcw
mov
jmp
cmc
sbb
jmp
fdiv
sub
in
rcrl
cmc
in
cli
imul
out
xchg
jne
fisttps
mov
jle
enter
ljmp
test
ljmp
aad
clc
inc
sub
or
xchg
jmp
icebp
dec
sub
dec
cmp
cmp
and
pushf
enter
mov
leave
in
pusha
pusha
jg
roll
adc
shrb
bound
fldenv
stos
mulb
cmp
notl
sbb
jmp
lcall
gs
popf
int
cmc
pop
in
adc
dec
or
lret
mov
or
pop
in
cmpsb
mov
jmp
mov
jae
adc
mov
push
mov
nop
out
pop
add
test
sbb
add
insb
and
pop
add
add
test
fnstenv
xchg
dec
xchg
jno
sahf
sti
dec
fldenv
pop
jmp
iret
push
cli
and
mov
mov
or
icebp
insl
mov
mov
push
or
xor
xor
xchg
mov
xchg
cmp
dec
add
insl
clc
loopne
cltd
cmovp
sbbb
or
xor
adc
in
mov
fwait
rolb
fsubrl
add
xchg
cwtl
cmp
hlt
test
mov
jb
cmpsl
adc
nop
mov
adc
das
movsb
dec
inc
pop
test
pushf
in
mov
inc
divb
jp
sbb
push
pop
or
jbe
test
adc
hlt
sbb
rol
or
notb
pop
mov
dec
outsl
cmp
notb
scas
jp
mov
pop
out
sub
fcmovnb
jne
mov
sub
adc
movl
lret
movsl
loopne
repz
jns
push
jo
lds
pusha
lcall
shl
push
lea
repz
fsubrs
jns
je
popf
add
push
pop
cs
pop
out
stos
jle
xchg
sub
pop
scas
shrl
jne
or
pop
mov
mov
push
call
pop
js
sahf
popf
xchg
scas
pop
fstpt
jecxz
dec
pop
jbe,pt
inc
shll
cmp
fsub
cli
xor
mov
pushf
nop
xchg
sub
pop
inc
adc
pusha
arpl
int3
cmp
pop
testl
mov
enter
push
xchg
popf
mov
lcall
in
std
mov
shlb
xchg
mov
in
mov
popa
pop
and
imul
sti
mov
add
pop
in
jp
mov
push
leave
dec
dec
jg
add
inc
ja
lahf
jp
gs
mov
orb
jge
in
mov
cmp
adc
ficompl
pop
rcl
fisubl
jp
xor
aam
pop
repz
xchg
xor
and
add
popa
aas
out
xchg
adc
ljmp
push
sbb
lcall
push
pusha
jo
inc
out
mov
xor
mov
mov
xchg
movsb
sbb
test
imul
lea
jge
aam
adc
out
repz
mov
scas
mov
int3
addr16
in
in
mov
fbld
jmp
jns
push
js
cmc
lahf
dec
xor
out
cmp
push
lret
jle
aaa
mov
adc
cmpsl
sub
mov
adcb
mov
mov
enter
out
call
loope
or
dec
or
sbb
sbb
jmp
inc
push
subl
inc
pop
fs
jge
das
cs
out
test
mov
mov
call
inc
mov
mov
sti
ljmp
test
push
jmp
mov
jle
jne
mov
lock
push
aam
aad
cld
loop
push
faddl
mov
push
idivb
loopne,pt
push
fisttps
add
stc
jmp
dec
cs
lods
sbb
rorl
jb
insl
mov
lret
inc
mov
jmp
shll
cwtl
movb
repz
adc
mov
pop
add
dec
mov
testb
imul
mov
xchg
fwait
mov
out
in
push
fsubl
push
push
aam
and
dec
sahf
fldt
dec
insb
cltd
and
dec
into
xchg
jle
sub
repz
out
pop
lods
icebp
fwait
push
fldcw
lds
push
shlb
push
xchg
xchg
sbb
insl
les
cmp
insb
pop
repz
xchg
clc
pop
aam
gs
loop
sub
mulb
and
cmp
into
fstp
jne
jmp
sahf
mov
aaa
arpl
and
add
inc
mov
add
jns
sbb
es
pop
pop
out
xor
leave
das
addr16
and
ljmp
or
stos
mov
movl
movl
movl
movl
jmp
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
cmovno
lahf
xchg
hlt
outsb
pushf
push
jo
mov
or
call
mov
mov
scas
pop
jns
pop
loopne
jne
sbb
insl
sub
syscall
inc
je
lods
xchg
inc
pop
in
insb
xchg
mov
sub
xchg
adc
mov
scas
pop
jle
outsb
pop
pop
shrl
push
mov
jbe
in
shlb
aas
and
repnz
sahf
loopne
stc
and
shll
call
aaa
sbb
imul
fildl
mov
xchg
popa
addr16
xorl
lods
mov
shrb
and
pop
decb
jmp
xor
and
xor
mov
mov
mov
outsb
sub
cmp
jns
lcall
les
out
out
cmpsb
insb
sti
inc
pusha
inc
loope
lret
push
push
out
mov
sbb
xor
dec
pop
xchg
and
shrb
repnz
pop
xchg
adc
ds
inc
dec
test
test
adc
leave
sti
hlt
loop
fwait
mov
sarl
push
outsl
imul
mov
mov
or
das
mov
and
adc
bound
repz
out
jecxz
hlt
cltd
imul
or
out
inc
cmpsl
leave
xchg
cmpl
lock
fldt
cmp
dec
pop
insb
es
loop
mov
sbbb
sbb
xor
sub
in
inc
test
fdiv
pop
push
jle
push
dec
std
push
dec
inc
cmp
cmp
aam
xchg
sbb
xchg
sbb
das
sub
adc
xchg
orb
scas
pushf
fs
adc
push
inc
outsl
and
cmp
insb
pop
cmp
adc
std
sub
testb
addr16
mov
fwait
das
sub
inc
cmp
dec
add
mov
shl
pop
cld
fmull
xor
sub
cmp
mov
std
fisubrl
xchg
adc
jl
xchg
fstl
iret
adc
psrlw
adc
add
mov
lock
and
adc
andb
mov
sti
push
mov
sbb
imul
mov
xchg
cmpsb
push
jl
sbb
jae
xchg
xchg
das
mov
in
mov
loopne
mov
outsl
ss
pop
in
xor
sbb
shrb
jo
ljmp
push
mov
pop
fdivrp
lods
pop
negb
pop
mull
cld
mov
mov
int3
int3
jns
mov
sub
int
into
pop
lock
mov
movl
push
mov
fcmove
mov
xlat
ja
sarl
sub
das
cs
or
and
stos
jle
jge
leave
pop
jb
add
sub
pop
lahf
add
pop
pop
and
ljmpw
mov
push
mov
xor
lret
sub
mov
or
xorl
inc
push
xchg
loopne
scas
mov
mov
fsubrp
and
pop
jg
push
xchg
jae
js
pop
cmpsb
gs
xor
inc
jne
push
scas
hlt
mov
call
adc
leave
ret
test
or
xchg
fiadds
mov
mov
xchg
inc
and
sub
inc
xchg
xlat
add
lock
pop
leave
add
clc
aam
jb
ret
stos
xor
pop
xchg
mov
out
pop
dec
or
scas
jns
pop
das
pop
jae
ret
ror
xchg
in
cmp
push
cli
repz
fmull
xor
inc
sub
in
mov
rorb
out
jmp
das
dec
dec
pop
mov
xlat
dec
xor
xchg
adc
lahf
xchg
mov
orl
mov
bound
int
cmpsb
adc
leave
add
adc
loopne
jno
xchg
test
mov
pop
loopne
mov
sbb
push
xchg
lahf
dec
dec
jge
xchg
ja
mov
aad
inc
pop
cld
cmp
mov
jbe
outsl
adc
push
inc
mov
xchg
and
dec
shrl
fucomi
jns
mov
mov
ljmp
rolb
lods
mov
adc
lods
sbb
loope
push
xlat
push
sub
in
dec
fsts
or
jl
mov
outsb
xchg
xor
jle
and
or
sbb
loopne
std
loopne
es
lods
aaa
loopne
fbld
shr
or
xor
stos
or
out
std
pop
loope
insb
lcall
add
or
mov
int3
inc
inc
or
push
lret
sub
pop
add
adc
mov
jae
xor
sbb
pop
loop
imul
icebp
scas
fcompl
push
inc
pop
sahf
dec
imul
icebp
stos
in
faddl
and
lods
or
ret
xchg
in
xchg
sbb
dec
cs
cmp
xor
xor
es
icebp
mov
repz
adc
inc
or
xor
jmp
mov
inc
and
data16
inc
and
mov
inc
jmp
sbb
popa
xor
jle
loopne
ljmp
sbb
jnp
adc
loopne
pop
sub
adc
aam
repz
cmp
test
mov
push
mov
pop
mov
int
aad
stc
pop
popa
nop
mov
jae
lds
je
decl
cmp
pop
jecxz
lods
cld
test
sub
mov
mov
mov
aad
or
inc
in
dec
add
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
pop
outsb
xchg
xchg
fimuls
pinsrw
paddq
push
dec
lods
cmp
push
add
das
movlps
aam
fmul
jg
fdivs
push
out
push
sbb
lods
scas
cmp
in
pop
push
cmp
inc
pop
or
cmp
ljmp
or
add
xchg
pop
cmp
xchg
xor
cli
rol
xchg
or
pop
inc
fucomi
test
sti
test
dec
aas
int3
mov
mov
lock
jl
lods
and
fnstcw
testl
sub
loop
mov
mov
lcall
cli
or
sub
inc
cmpsb
repz
cli
jo
xlat
mov
int
and
dec
add
push
adc
sub
cld
std
mov
movsb
add
idiv
dec
xor
jno
add
pusha
mov
cltd
push
hlt
shr
bound
xor
lahf
stc
pop
test
sbb
pop
add
nop
adc
add
sub
addb
mov
mov
or
and
xor
mov
and
adc
imul
jmp
stos
mov
sub
cs
inc
add
xchg
lret
jle
sub
fdivrs
test
xor
cltd
mov
mov
dec
jp
inc
loope
adc
sbb
pop
cmc
mov
cmp
out
nop
inc
cmp
jg
jg
iret
inc
insl
cmp
scas
out
scas
popf
adc
loopne
les
jnp
jne
loope
mov
scas
cmc
sarb
push
sbb
sbb
jae
mov
stc
test
xchg
ja
data16
push
and
dec
mov
xchg
mov
inc
out
data16
das
movsb
inc
add
fidivrl
pop
mov
jne,pt
push
cmpsl
out
dec
dec
dec
cld
inc
cltd
jp
mov
fisttpl
mov
adc
pop
jle
enter
and
cmc
pushf
repz
lods
loope
fnsave
pop
or
push
pop
cmp
fsubrs
insb
imul
push
jbe
es
jle
fstl
cmpsb
leave
cmpsl
pop
or
add
push
sbb
and
adc
fincstp
test
fsts
jno
add
xor
add
jmp
out
jge
add
lock
and
jb
pop
fists
popa
pop
dec
or
dec
jae
pop
filds
out
test
dec
adc
push
jbe
mov
and
xchg
or
in
pop
xlat
clc
daa
aam
stos
loop
cmp
repnz
push
out
jle
stos
mov
xchg
test
out
jmp
clc
jns,pt
and
imul
js
xchg
mov
sub
mov
sti
push
push
ret
mov
clc
int3
aaa
fbld
jnp
inc
js
sub
cli
xchg
out
stos
jae
adc
js
pop
push
mov
pop
push
mov
cmpsl
inc
xor
xor
push
or
loopne
pop
xchg
test
arpl
sbb
sbb
push
xchg
push
adc
sbb
ss
push
clc
mov
stos
fistps
adc
or
js
insl
inc
mov
jmp
cmc
pop
lods
jnp
sub
mov
pop
sbb
pushf
add
testb
jl
sahf
cld
shl
out
add
and
xor
add
or
sub
xchg
and
inc
mov
pop
pop
addr16
outsl
add
daa
mov
outsl
xchg
into
xor
and
push
out
mov
xchg
fnstsw
xor
pop
popa
neg
inc
push
xor
add
jecxz
stos
cli
pop
lret
pop
pop
mov
call
cltd
pop
dec
into
es
aaa
addr16
adc
gs
dec
ror
outsb
outsl
shlb
sub
mov
xchg
dec
fadd
dec
fmull
sbb
aaa
xlat
js
outsl
mov
fisttps
push
mov
and
shrb
mov
stos
int3
inc
jle
cmp
add
repz
stos
addr16
shll
dec
aad
cmp
xchg
pop
js
out
imul
into
nop
xchg
js
pop
jecxz
incl
aam
or
cmp
inc
popf
stos
and
ret
mov
cs
iret
sbb
std
cmp
push
daa
insl
fwait
or
push
sbb
pop
sbb
xchg
lcall
xchg
mov
je
int
nop
lods
movsl
rorb
sbb
test
hlt
int3
ds
jg
mov
and
stc
in
jle
sbb
movsb
push
adc
jns
pushf
std
push
loop
rolb
idivb
pop
push
xor
dec
push
push
dec
stos
hlt
mov
jle
sbb
mov
jecxz
and
and
or
xorl
pusha
test
cmpb
cmpsb
pop
aad
test
outsl
push
adc
mov
shll
dec
adc
in
mov
pusha
shl
cli
mov
jne
or
sbb
inc
inc
pop
mov
adc
sbb
sbb
xchg
mov
scas
push
pushf
mov
es
adc
mov
scas
push
mov
hlt
dec
push
lea
mov
mov
xchg
pop
push
jne
inc
cmp
in
arpl
and
mov
fs
lds
es
xor
test
pop
inc
pop
lret
mov
test
ss
std
aas
sbb
dec
cli
xor
rorb
push
inc
add
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
loop
pinsrw
bndldx
lds
push
xor
push
test
sub
or
jge
add
sti
loopne
jno
orb
pop
addr16
ja
sbb
stc
dec
add
add
and
mov
stc
nop
lret
imul
jnp
cmp
clc
fwait
adc
mov
mov
icebp
push
xchg
jge
pop
mov
daa
iret
testl
addb
in
repz
iret
dec
in
fists
adc
nop
insl
xchg
cmp
idivb
cmp
mov
sbb
push
rol
test
out
lea
and
xchg
in
dec
in
inc
jecxz
aad
into
adc
push
fcoms
pusha
neg
xchg
jge
aas
arpl
outsb
cs
dec
cltd
jno
jge
test
push
mov
scas
sbb
nop
add
out
adc
aas
push
adc
adc
fistpl
ds
loop
xor
pop
shll
mov
out
xchg
int
lret
stos
in
jbe
add
gs
dec
pop
adc
in
push
jge
aas
xchg
sbb
dec
test
lret
aaa
cli
arpl
and
nop
inc
jl
int3
push
ja
mov
daa
insl
cmp
mov
insl
push
ds
mov
hlt
sbb
shrb
fcompl
outsl
and
flds
mov
lahf
lock
mov
cmpsl
pop
jne
cmc
jg
test
repnz
sbbl
inc
adc
pop
cs
xor
jle
stc
mov
out
sub
movsb
pop
fimull
loop
insl
xchg
sub
decl
inc
add
or
fcompl
or
ljmp
test
les
jp
jle
mov
gs
sarl
fmull
push
cmpb
clc
sub
sbb
add
jb
js
jo
imul
push
aaa
cmc
shll
fwait
shrb
push
sbb
cmpsb
arpl
std
dec
sub
in
dec
out
daa
push
mov
cs
int
psllw
ret
push
fcom
int3
push
xlat
lods
dec
mov
push
mov
xor
jge
adc
dec
rcrl
pushf
mov
xlat
enter
cli
pop
loop
add
fnstenv
nop
mov
sbb
mov
test
inc
jl
cmp
mov
xchg
imul
jbe
cmpsl
and
sub
ret
dec
popf
test
and
add
inc
icebp
dec
xor
sbb
push
cmp
sbb
xlat
lret
movsb
xor
stos
push
js
mov
ret
popa
jae
xchg
xor
jmp
dec
lods
mov
adc
jbe
add
fmuls
xchg
and
fwait
stc
dec
popf
sbb
sub
mov
shlb
lcall
mov
test
dec
int
push
sub
cmp
popf
or
jo
clc
add
nop
mov
mov
and
push
mov
mov
fwait
mov
leave
jle
bswap
adc
inc
fwait
ss
filds
inc
or
inc
repz
jp
dec
fstpl
lret
cmc
mov
bound
lret
inc
inc
lds
adc
inc
dec
ret
lods
lcall
in
sarl
xchg
out
sbb
sub
xor
mov
insb
insb
sub
push
data16
adc
jl
dec
notl
sub
test
or
push
in
and
rolb
jns
push
ret
pop
cltd
in
xor
lods
and
cmpb
jl
push
lods
ja
imul
and
push
push
rclb
sbb
les
xor
mov
add
mov
or
sbb
in
cmp
in
sub
lods
dec
mov
fidivs
call
inc
lret
stc
adc
mov
sub
ficomps
mov
test
dec
pop
loop
xchg
lret
fisubrl
iret
stos
dec
mov
adc
andl
mov
jge
adc
pop
lock
fdivrs
hlt
adc
ja
lods
dec
jp
jo
orb
sti
fdiv
jo
xor
sub
xor
cmp
cmp
jp
sub
lret
xchg
jmp
add
ljmp
xchg
adc
loopne
mov
in
push
push
jp
into
sahf
mov
outsl
cmp
add
int3
and
xchg
dec
xor
mov
jmp
pop
and
or
popa
xchg
clc
jne
push
jmp
push
mov
or
and
mov
test
sbb
aas
push
and
test
fstl
mov
mov
push
xchg
adc
xchg
sub
sbb
mov
cmp
imul
scas
xchg
icebp
fistpl
ss
jp
mov
mov
test
or
jle
adc
sub
mov
fisttpl
push
icebp
xor
fcom
mov
lods
xor
xchg
add
mov
jge
mov
call
jnp
xor
lahf
sub
int3
jle
scas
mov
xorb
and
adc
add
mulb
fadds
mull
cmp
pop
dec
cmp
jo
loopne
mov
ret
adc
jp
mov
orl
mov
cltd
test
mov
div
ret
lret
xchg
mov
or
cmp
or
movq
sbb
pop
sti
sbb
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
mov
pinsrw
rcpps
aas
loopne
in
pop
jle
popa
jae
xchg
cs
adc
loop
addr16
inc
push
das
imul
mov
xchg
push
repz
pop
push
fwait
adc
dec
test
pop
out
test
jns
jge
and
addr16
aad
ret
lods
mov
jno
push
ds
push
sahf
sub
gs
add
in
imul
adc
stc
mov
aaa
push
fs
outsb
pusha
in
cmp
imul
dec
fildl
and
cmp
pop
mov
xor
iret
das
fdivrs
dec
bnd
fwait
sub
fistpll
out
xorl
mov
cmp
inc
ret
outsb
adc
cmp
sub
imul
cmpsb
dec
and
dec
or
fsts
dec
insl
mov
pusha
rcrb
sub
test
fisubl
or
lret
fisttpll
adc
fadd
cmpsl
dec
ror
icebp
mov
jnp
push
daa
mov
inc
adc
js
fsubl
sarl
mov
xlat
daa
push
push
call
inc
sbb
jecxz
push
xor
pop
mov
push
adcb
out
daa
cmp
es
arpl
mov
rolb
adc
divb
mov
mov
je
cmpsb
xchg
push
adc
xchg
lahf
mov
fs
or
inc
movsl
cmc
mov
push
adc
pop
push
cmp
adc
roll
push
jmp
xlat
dec
push
mul
cmp
adc
or
adc
stos
outsb
dec
jl
push
push
inc
pop
dec
shl
jecxz
out
aad
jp
xor
push
aaa
lods
mov
adc
jl
inc
int3
inc
adc
mov
sbb
mov
cmp
dec
push
mov
sbb
leave
jno
dec
addb
adc
xchg
adc
cmpsl
or
les
push
flds
movb
mov
mov
sbb
cli
out
and
in
cmp
push
rcrb
out
clc
jne
adc
push
sub
and
sbb
idiv
sub
xchg
dec
jbe
aam
test
push
jmp
fnstcw
aam
fistpl
sbb
dec
subb
js
sarl
loopne
dec
call
shrb
xchg
data16
stc
push
mov
or
cmp
lods
mov
in
fcoml
push
and
cmp
inc
and
stc
jns
inc
sub
stos
sub
ss
push
push
pop
inc
out
adc
insb
and
push
mov
repnz
or
jecxz
cmpsb
jl
and
push
inc
incb
adc
pop
lods
scas
pop
inc
mov
int
ss
cwtl
mov
xorl
es
pusha
lahf
mov
imulb
mov
inc
aam
sub
sti
sub
test
xor
push
push
out
pop
enter
fldcw
dec
shll
cmp
mov
fisubl
scas
fs
repz
jns
inc
imul
jne
fsub
push
clc
inc
sahf
mov
arpl
outsl
lods
rorl
push
aad
lods
push
and
out
mov
and
jb
test
mov
sub
ret
leave
adc
imul
xchg
and
outsw
xchg
mov
cwtl
jp
mov
pop
fbld
mov
stc
jne
aad
sbb
js
adc
fimuls
loope
add
out
push
add
lret
not
scas
cmpsb
push
xor
stos
inc
jo
jb
xor
xchg
mov
dec
jle
inc
lods
dec
push
mov
jp
pop
xor
xchg
dec
push
cmp
mov
in
ret
or
int3
fcomps
mov
mov
inc
scas
xchg
pop
pop
sbb
or
sub
imul
push
lock
into
int
loopne
sahf
dec
in
fdivrs
inc
or
sub
mov
adc
push
fiadds
xchg
inc
cmp
imul
adc
mov
in
or
orl
sub
push
jmp
mov
sub
push
ret
hlt
sbb
jle
cmp
enter
pop
sarb
adc
clc
in
sbb
xlat
mov
popa
sbb
xor
mov
lods
push
subb
jl
dec
pop
in
ret
mov
ret
in
icebp
jb
enter
clc
cmpsb
mov
loope
xorl
enter
push
xchg
xchg
mov
hlt
jp
test
jmp
or
daa
jecxz
push
jp
sahf
cld
in
dec
loopne
xchg
fidivrs
xchg
lods
fwait
add
mov
mov
sub
mov
adc
or
dec
andps
xlat
out
inc
jmp
test
jo
adc
cs
push
shrl
xor
pop
cli
les
adc
scas
repnz
iret
dec
mov
and
and
mov
mov
and
setno
pushf
notl
cmp
adc
and
subl
mov
test
lods
pop
or
out
cmc
sbb
inc
and
sub
and
in
gs
jne
ret
and
sub
lods
dec
adc
fldcw
jl
adc
and
xor
stos
mov
dec
hlt
xchg
jbe
fildl
dec
jmp
mov
jo
dec
iret
cltd
mov
inc
jmp
mov
imul
cmpsl
leave
int
jno
push
and
pop
add
je
shll
push
sbb
loope
add
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
jmp
mov
pinsrw
pop
repnz
mov
clc
xor
adc
in
cs
cli
adc
inc
mull
inc
and
scas
lods
cmpsl
and
sbb
ljmp
pushf
xor
add
push
mov
cmpsl
jne
fs
pop
shll
insb
push
testb
in
mov
fistpll
or
mov
in
les
sub
les
push
and
shl
jbe
je
dec
sbb
fldl
mov
dec
sbb
dec
divb
stos
sub
imul
sub
std
in
add
cmp
aaa
inc
outsw
dec
cmp
int3
imul
outsl
popl
dec
and
aas
imul
push
and
pop
push
stc
sub
dec
lods
mov
sub
mov
insl
push
or
mov
adc
xorl
pop
in
dec
out
inc
test
push
and
lea
mov
cmpsl
stos
rcrb
cwtl
loopne
mov
aad
test
arpl
jmp
mov
mov
cmp
fcompp
stc
lret
cmp
dec
dec
ss
cmpsl
aaa
or
xor
mov
movsb
out
insb
adc
push
pop
inc
jne
sbb
in
cs
sbb
pop
xor
dec
sbb
test
add
jmp
clc
insl
add
test
jo
xlat
xor
dec
push
pop
shll
sbb
imul
add
jb
loope
cltd
push
iret
mov
mov
insl
or
cmp
addr16
and
or
or
cli
ja
and
jo
jno
lods
cs
clc
in
jg
inc
xchg
mov
movsb
xchg
scas
jle
pop
in
jl
loopne
aas
call
adc
inc
jecxz
pop
xlat
movsb
or
mov
sbb
outsl
scas
hlt
int3
lcall
movsb
mov
or
mov
lahf
sbb
leave
jmp
out
or
enter
filds
jnp
ficoms
lret
or
sub
or
mov
dec
popf
jl
inc
sub
pop
push
shrl
addb
sub
mov
add
aad
inc
mov
pop
in
scas
mov
dec
push
imulb
pop
pop
insb
mov
mov
in
insb
jb
cmp
pop
adc
dec
les
add
adc
mov
push
mov
popa
pusha
sbb
out
sub
popf
out
adc
mov
xchg
fstpt
and
dec
sbb
mov
aad
jns
xchg
mov
ret
je
int
lcall
xchg
xor
add
or
adc
in
or
icebp
jge
push
cmp
rclb
and
push
cmpsl
xchg
xor
mov
adc
shll
dec
test
and
adc
pop
scas
xlat
pusha
and
lahf
xlat
sbb
sbb
loope
inc
adc
enter
dec
enter
push
xor
dec
and
xorl
daa
pop
mov
iret
fistl
adc
orl
inc
mov
pop
cmpsb
inc
test
daa
sub
or
lds
icebp
loop
or
mov
xchg
movsbl
push
in
arpl
loop
movsb
inc
mov
cmpb
sbb
outsb
sbb
mov
mov
test
mov
leave
inc
stc
push
mov
mov
xchg
jge
into
pusha
adc
decb
mov
mov
test
dec
fnstsw
pusha
add
and
push
in
sbb
lods
mov
mov
push
fwait
adc
jecxz
mov
pop
mov
inc
jb
out
or
loopne
cmp
lods
dec
daa
fsub
dec
jle
inc
iret
or
xor
imul
ljmp
loope
lods
ljmp
xchg
pop
dec
nop
enter
data16
out
mov
icebp
adc
or
mov
inc
sbb
faddl
pop
addr16
and
mov
lods
dec
mov
mov
nop
lods
push
sbb
pop
mov
jg
shl
and
lahf
sbb
mov
cli
rolb
cwtl
mov
cmp
test
or
xchg
in
pop
mov
mov
dec
ja
rclb
fsubs
jno,pn
das
into
stos
mov
fwait
daa
jnp
lea
mov
inc
adc
stos
pop
xchg
nop
push
jne
add
mov
cltd
xchg
test
mov
or
movsl
sahf
pushf
push
and
clc
rcrl
jne
sub
pop
xchg
movsb
testb
test
cli
jns
rorl
imul
dec
adc
mov
push
iret
adc
mov
and
xor
mov
cmp
cmpsb
cmpsb
lret
call
pop
xchg
xlat
in
sbb
sub
insl
jne
and
dec
push
jns
jg
notb
dec
ficoms
roll
shll
xchg
subl
loopne
ret
das
adc
movsl
stos
ret
and
sbb
jns
jecxz
jnp
jb
outsl
incl
mov
mov
aam
or
xor
inc
and
dec
cmp
shr
fwait
ss
je
mov
jg
push
inc
mov
jmp
mov
cld
jecxz
fsubl
xchg
or
lcall
in
mov
mov
or
jmp
aas
cmp
push
xchg
js
lret
adc
in
jne
insl
hlt
movsl
fcomi
dec
push
xchg
push
fisttpll
sub
movsb
and
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
mov
ss
data16
pinsrw
sbb
lds
xchg
mov
insb
mov
sahf
es
or
lods
iret
js
aam
push
push
jge
fcomps
fwait
shlb
stos
mov
dec
inc
mov
pop
mov
mov
xchg
push
in
mov
push
mov
mov
jae
popa
mov
imul
jle
fdivrl
xlat
jecxz
jnp
int3
mov
arpl
jmp
pushf
dec
jmp
pop
mov
pusha
xor
sbb
jp
jns
xchg
mov
mov
arpl
cli
inc
mull
jle
pusha
ret
or
pop
jns
sbb
cwtl
pop
sub
imulb
loop
insb
jnp
dec
scas
mov
mov
mov
fldenv
pushf
iret
cmp
ja
mov
sbb
imulb
mov
out
jno
mov
data16
stos
dec
lock
sbb
test
sub
jns
fwait
push
cmpl
add
and
xchg
cmp
pushf
scas
mov
pusha
xchg
push
add
jae
sbb
dec
jns
jmp
mov
pop
shl
pop
lahf
test
jno
movsb
pop
adc
aas
sti
cld
shl
push
jp
push
xor
mov
psubq
add
rcrl
stc
in
inc
dec
mov
shlb
cmp
inc
lds
sbb
stos
dec
scas
sbb
jl
pop
sub
jbe
dec
aam
insl
cld
or
popf
jl
fs
dec
push
aas
das
aad
cwtl
inc
js
dec
and
ljmp
xchg
nop
stc
mov
jecxz
data16
mov
test
js
pusha
push
cld
jo
cld
jo
inc
push
loope
sbb
push
out
pop
mov
jae
jb
stc
leave
out
mov
inc
popa
pop
fisttpll
sbb
es
js
dec
nop
imul
mov
cmp
mov
mov
daa
sub
xlat
fimuls
fwait
mul
repz
dec
push
xor
nop
outsl
mov
sub
cltd
rorb
popf
insb
mov
sti
lods
jge
mov
out
dec
test
xchg
and
and
inc
mov
aam
xchg
xchg
dec
sahf
or
fs
add
jnp
lahf
mov
insb
in
arpl
jae
scas
lock
pop
std
fistps
insl
mov
adc
inc
sbb
fucomip
stos
xor
outsl
or
addr16
popf
cwtl
push
xor
decl
mov
adcb
jno
cmc
pop
inc
js
jns
dec
mov
data16
pop
lea
cli
out
inc
mov
orl
rorl
mul
cmp
adcl
adc
ret
jg
xor
push
dec
or
sahf
shlb
subb
adc
fdivrs
push
xor
enter
xchg
testb
or
ja
mov
jns
in
lods
pop
pop
xchg
decb
xor
and
or
aad
cmp
hlt
loope
insb
ljmp
cmp
sbb
xchg
fisubrl
scas
sub
rclb
cmp
dec
gs
jle
xchg
cld
mov
mov
out
pop
test
cmpsl
dec
jmp
fisubrl
jb
sub
xor
and
jbe
enter
xor
cmpsl
push
sub
outsl
inc
cmpb
jne
stos
jle
lods
fs
inc
mov
outsl
push
out
adc
xor
jno
lds
or
popa
push
push
mov
sarl
daa
pop
push
shll
xchg
data16
subl
js
pop
sbb
and
in
imul
test
or
sub
cmp
xchg
pop
jno
sub
aas
mov
adc
mov
push
and
cs
adc
mov
dec
push
test
adc
sbbb
lds
iret
repnz
cwtl
sbb
test
push
push
xor
ror
jae
mov
xchg
test
push
jecxz
pop
dec
lds
jl
mov
sbb
sbb
pop
cmpsl
jmp
andb
daa
cmc
xchg
aas
incb
in
jbe
aam
sbb
mov
jl
xchg
ja
adc
push
push
push
arpl
jmp
rol
xchg
xlat
sub
hlt
aas
add
decl
lahf
mov
add
aam
dec
add
out
mov
scas
mov
mov
and
jno
mov
out
test
push
push
mov
sarl
sbb
sbb
flds
jecxz
cltd
shrb
int
in
mov
popa
mov
movl
leave
sub
inc
mov
jb
and
rolb
test
icebp
add
mov
andl
stos
push
push
stos
imul
push
pop
rcl
popf
and
inc
xor
gs
dec
cmpsb
lcall
jo
mov
dec
stc
push
into
mov
fcomi
or
leave
ss
movsl
fists
lods
mov
push
outsb
pusha
or
and
iret
mov
mov
js
les
lcall
lods
xor
into
fstpt
jb
pop
outsl
mov
push
arpl
les
adc
movsl
mov
cmp
inc
add
punpckhbw
cmc
lea
imul
out
mov
int
clc
fidivrl
ret
aas
fnstsw
adc
mov
hlt
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
xor
xchg
pushf
pinsrw
paddusb
arpl
push
shlb
push
or
cli
cld
fbstp
cmp
mov
cltd
mov
add
in
xlat
fidivrs
sub
arpl
xlat
gs
shlb
jbe
pusha
jb
push
push
in
cli
mov
or
loopne
xorl
cmp
push
xchg
mov
xchg
jo
scas
jne
pop
lea
xchg
call
hlt
sub
data16
les
pop
dec
ja
cld
frstor
in
test
loopne
inc
jno
test
or
dec
movsb
jno
or
incb
sar
inc
xorb
and
call
xchg
rclb
movsl
mov
mov
std
xchg
push
movsb
data16
sbb
push
add
mov
lea
and
and
mov
xor
mov
jle
in
popf
adc
sub
sahf
xchg
movsl
out
add
xchg
and
or
test
pop
mov
and
push
push
pushf
pusha
pop
inc
mov
outsl
adcb
jge
pop
jb
in
jl
jle
jecxz
mov
xchg
inc
aad
mov
jecxz
rclb
jmp
jl
or
dec
push
mov
into
jno
inc
mov
imul
negl
les
sub
push
cmp
jbe
lret
mov
aad
rorb
jbe
push
lcall
loopne
sbb
scas
fstpt
in
jg
mov
into
xlat
enter
lret
mov
aad
popa
pop
dec
jmp
add
divl
mov
or
and
add
mov
loope
cmc
stc
cmp
mov
dec
xchg
push
jp
pusha
cld
sbb
iret
daa
loopne
cwtl
rclb
lods
ror
push
int
nop
sub
mulb
push
and
sub
sbb
pop
in
loope
xor
in
ljmp
add
out
imul
rolb
leave
fcomps
xchg
popa
cmp
fwait
ds
add
out
jnp
fadds
inc
cwtl
mov
cld
mov
pop
enter
mov
lods
scas
mov
cmp
lcall
pushf
lahf
push
push
cs
shrl
sbb
dec
push
mov
sar
out
stc
out
mov
xor
or
mov
lods
das
mov
xor
and
test
xchg
mov
pop
xchg
jae
cli
push
and
and
xchg
data16
and
lret
imul
imul
movsb
mov
movsl
xor
in
cltd
mov
add
pop
ret
jg
sub
movsl
xchg
sahf
add
xor
mov
clc
insb
rcll
aaa
and
mov
clc
fs
movsb
fnstenv
and
mov
push
mov
aas
mov
fstps
inc
jb
stos
out
xor
pushw
push
xor
lock
lock
popa
test
sbb
mov
js
sub
mov
cmpsb
push
divb
aad
bound
js
or
lret
pop
pop
test
and
or
cmp
std
jnp
aad
aas
fisubs
pop
inc
popf
cltd
jns
jb
les
mov
mul
cmp
sbb
fwait
imul
dec
stos
sti
adc
call
movb
cwtl
imul
mov
sbb
fists
into
pop
es
xor
addl
rorb
xor
and
out
sub
mov
add
pop
xor
lcall
xchg
xchg
or
push
in
mov
or
clc
mov
pop
adc
popa
arpl
stos
lret
mov
push
or
dec
jp
mov
xchg
movsb
mov
loopne
sbb
xchg
dec
xor
mov
mov
adc
adc
mov
mov
arpl
push
inc
add
movsb
shll
inc
push
icebp
addr16
mov
and
mov
fwait
adc
push
daa
fidivrs
sbb
and
fidivs
rcrl
or
push
mov
cli
pop
pop
mov
push
scas
std
xor
xor
dec
cmp
cli
das
and
mov
cwtl
movsl
fdivl
jnp
mov
filds
mov
or
mov
cltd
daa
addr16
out
andb
xchg
test
pop
inc
push
and
cltd
xlat
jnp
addr16
incb
lcall
ret
scas
ffree
pop
xorb
insl
inc
sbb
mov
xchg
pop
aad
insl
sub
rcll
sarl
fiaddl
jp
fdivr
xlat
repz
jo
cmp
jecxz
jae
lods
incb
xor
or
pop
fwait
push
icebp
adc
js
mov
ficoms
jecxz
add
inc
cmp
and
inc
xor
repnz
mov
scas
jl
adc
fildl
mov
xlat
shlb
sbb
sbb
mov
mov
xchg
es
push
scas
jno
out
iret
rcrb
mov
xor
pop
clc
movsl
pop
rcrb
sub
nop
jnp
ss
sti
sub
or
insl
shr
fs
loop
mov
es
xchg
add
into
into
pop
arpl
and
aaa
pop
rorb
ss
lods
inc
aad
jmp
adc
scas
mov
push
adc
mov
rorb
sbb
bnd
pop
data16
shl
xchg
xchg
gs
test
and
adc
loopne
out
xchg
mov
sub
mov
sub
push
fnstcw
popf
xchg
lret
fadds
cmp
cwtl
cmpsb
push
pushf
rorb
mov
push
outsl
push
test
or
or
add
inc
int3
fwait
push
add
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
jno
mov
les
por
xor
in
jp
add
xor
add
sub
scas
ficomps
scas
arpl
cmp
add
daa
fisttpll
cmp
bound
jmp
out
mov
jb
into
pop
inc
jnp
testl
mov
iret
push
jnp
cltd
out
mul
inc
mov
fs
into
scas
dec
les
adc
test
stos
add
pop
stos
in
clc
mov
sti
sbb
ret
sbb
icebp
into
ss
cmc
dec
sub
xor
test
mov
aaa
out
cs
test
test
pop
cmpsb
scas
inc
cmp
jl
add
stc
aad
setno
loop
fwait
mov
fldl
cmpsb
jae
mov
insl
ret
in
aas
ss
sbb
ljmp
add
jl
mov
xchg
in
xchg
adc
mov
add
addl
add
pop
xor
movups
jmp
js
lock
pop
pop
and
loopne
cmp
xchg
push
shll
xchg
cmp
or
ljmp
mov
jecxz
into
jl
gs
and
cld
ss
test
push
sarl
or
push
daa
xor
and
pop
in
cmovno
cld
sub
dec
sbb
sub
dec
mov
insb
mov
out
xor
jmp
pop
inc
dec
cmpsb
pop
idivb
pop
xor
cmp
aam
mov
jle
es
mov
push
mov
xchg
loop
mov
sahf
jae
cli
inc
ss
cltd
cmc
sub
push
pop
adc
sbb
insl
mov
cmp
push
adc
mov
and
dec
movsb
loope
or
aas
das
cmpsb
push
xchg
cmp
test
dec
mov
orl
xchg
jl
jne
sub
mov
std
lods
jnp
mov
sub
mov
push
test
call
test
add
fwait
lcall
and
push
xor
fnstenv
stos
mov
mov
xchg
jmp
jnp
jbe
jbe
jecxz
cs
sbb
push
and
xchg
fadds
mov
sbb
dec
and
dec
inc
jg
mov
xor
into
push
loope
dec
and
inc
ja
add
pop
fmuls
mov
outsb
and
pop
enter
inc
sbb
sbb
xor
dec
and
test
adc
jae
into
out
sub
ds
subl
add
mov
pop
dec
leave
fiaddl
cld
cmp
inc
mov
push
mov
lds
rclb
xchg
pop
fidivs
das
or
mov
fstl
cmp
out
dec
std
adc
and
push
mov
fucomip
sub
insl
addb
mov
mov
repz
jno
out
mov
daa
inc
lcall
aam
out
cs
lock
jns
sarl
aaa
pop
shlb
jne
dec
xchg
enter
out
mov
ljmp
lret
push
xor
or
pop
data16
mov
in
xchg
mov
outsb
cs
hlt
insb
mov
xor
in
divl
sub
sahf
mov
lods
xchg
lods
inc
andb
push
mov
pop
push
push
pop
out
aaa
jg
cmc
dec
cmpb
mov
notl
and
movsl
and
push
addr16
ja
into
sub
leave
pop
push
xor
clc
adc
inc
push
pop
jno
ror
hlt
sub
jo
test
test
in
push
xor
push
insb
daa
cwtl
das
aad
rcll
push
test
dec
pop
repz
jo
xchg
inc
cltd
adc
fcoms
test
jmp
sbb
jecxz
inc
mov
jl
jge
sti
jae
call
pop
add
lea
sub
ret
or
sarb
pop
fnstcw
addr16
cwtl
adc
push
pop
push
sub
outsb
addr16
jb
pop
cmp
neg
in
leave
xchg
mov
jg
mov
push
and
adc
in
shlb
pop
outsl
add
movsl
mov
faddl
ljmp
pop
dec
pop
mov
jno
push
or
xor
mov
hlt
fsubs
dec
or
lret
cmp
xor
aad
push
mov
add
leave
cmc
mov
ljmp
or
push
cwtl
xlat
pop
and
push
push
das
xor
cli
lret
sub
mov
inc
push
rclb
imul
rcrl
jb
leave
insl
or
push
ret
pop
or
pop
daa
das
je
jne
mov
loope
fistl
jo
and
or
lods
sub
mov
subb
adc
lcall
or
fadd
jmpw
mov
les
mov
repz
mov
push
daa
pop
fimull
cmp
inc
outsl
mov
pop
mov
outsb
icebp
repz
mov
aad
and
cwtl
inc
jl
roll
or
adc
fimull
dec
add
repz
push
fs
mov
xchg
adc
xchg
xchg
xchg
cmp
push
mov
stos
mov
adc
push
or
cmp
js
mov
pop
inc
enter
ret
test
scas
mov
jne
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
jnp
push
adcl
ret
dec
jmp
insl
insl
mov
dec
in
lds
push
jb
or
inc
movsl
sub
ds
leave
add
xchg
addb
add
pop
addr16
scas
shl
jnp
adc
lock
dec
or
add
or
aam
push
mov
and
cmpsl
dec
es
fisubl
popf
popf
add
pushf
pop
push
push
xchg
dec
nop
xchg
in
das
mov
std
mov
lahf
jo
cmp
js
jno
inc
dec
xchg
xchg
arpl
mov
push
sarb
sub
inc
sarb
lret
dec
adc
add
test
imul
outsl
loope
xchg
mov
inc
mov
add
adc
jmp
push
shrb
sub
out
mov
pushf
inc
dec
fildll
insb
sub
scas
push
ss
sahf
in
mov
mov
loope
stos
jbe
or
xchg
jmp
shll
pop
loope
xor
xchg
add
icebp
test
inc
pushf
lods
icebp
xlat
add
adc
jg
mov
cmpsl
cmp
jbe
adc
mov
push
mov
out
mov
nop
sbb
pop
push
in
adc
cmpsb
leave
fwait
lock
ss
pop
enter
mov
sbb
jae
shlb
mov
aad
sti
inc
lock
ret
outsb
stc
scas
je
rolb
xchg
push
mov
xchg
test
les
push
xor
add
in
and
xor
xchg
jl
lret
loopne
into
es
out
push
cwtl
sbb
add
jecxz
inc
inc
mov
sbb
push
push
adc
inc
xchg
push
xor
fsubrs
js
or
das
inc
cmp
call
dec
aam
out
push
ss
ret
in
sub
ljmp
xlat
xchg
sbb
xchg
es
notb
ss
das
or
and
adc
and
and
aaa
int
cmpl
xor
pop
cli
adc
xchg
aam
dec
inc
pop
popa
decl
sbb
sti
mov
push
movsb
out
out
stos
icebp
xchg
sub
cmp
stc
xchg
mov
sub
add
cmp
fisttps
jmp
mov
adc
bound
jmp
xchg
jg
cmpsb
dec
imull
dec
roll
adc
mov
popf
push
aad
int3
insl
loope
int3
mov
mov
lahf
push
test
cmp
mov
std
popa
xor
push
lcall
mov
lcall
push
shr
xchg
add
pop
and
mov
pop
lret
push
sbb
out
std
cli
call
sub
fnstsw
dec
or
sti
mov
ret
sbb
mov
pop
rorb
pop
xchg
mov
and
clc
xchg
inc
jno
je
or
mov
dec
pop
insl
cmp
fmul
movsl
hlt
shll
jp
mov
movsb
jg
mov
repnz
mov
sbb
sbb
jne
rcrb
inc
cmpsl
xchg
sti
test
adc
mov
lods
movsl
ljmp
enter
xchg
lods
jp
mov
sbb
mov
gs
cli
jge
imul
aam
inc
cmp
xchg
repnz
dec
mull
mov
outsl
xor
in
rcrw
sbbb
insb
push
cmpl
das
xchg
mov
jmp
test
lods
dec
adcl
sub
in
dec
pop
add
and
and
cli
inc
ss
sti
inc
inc
ds
mov
out
mov
fnstenv
out
sub
pop
daa
sub
adc
idivb
dec
jbe
jne
scas
xchg
adc
scas
call
dec
cld
jae
sbb
fbstp
repnz
aaa
les
mov
popf
sbb
xor
and
mov
or
pop
sbb
pop
xor
sarb
test
push
mov
cmpb
and
mov
cli
ret
push
scas
outsb
pushf
push
mov
cli
mov
pop
jno
mov
dec
jecxz
or
xor
fdiv
dec
out
xchg
or
rorb
fldl
jnp
and
lret
xchg
and
insb
daa
or
lea
fidivrs
mov
cmpsl
jle
jns
loopne
dec
mov
in
adc
outsb
ret
and
dec
xor
pop
fdivrs
mov
sbb
daa
mov
sbb
movsb
fsts
xchg
dec
fstpl
mov
mov
jne
incl
ja
adc
in
or
mov
movsb
ffreep
mov
mov
inc
sub
xchg
jg
dec
push
js
add
dec
pop
imul
cld
fxtract
or
jecxz
sbb
scas
fistpl
pop
xor
mov
lsl
jb
sti
lods
jge
clc
ja
shrl
addr16
jle
iret
mov
nop
mov
or
mov
cmp
mov
iret
jnp
cli
sahf
xor
mov
push
xlat
xorps
insl
inc
inc
ds
add
fidivl
ret
stos
xchg
push
xchg
or
push
rorb
ljmp
cmpsl
or
popf
or
jnp
dec
push
cli
pop
push
cwtl
test
sarb
jbe
jmp
fbstp
cmc
and
or
adc
into
stos
lods
cmp
sbb
aas
mov
jne
mov
in
mov
in
aad
jge
iret
rcrl
jl
pop
stc
sub
lahf
jge
adc
mov
pop
shrb
mov
jns
nop
mov
jp
pop
ja
sub
dec
popf
xchg
inc
xor
mov
in
and
in
rolb
out
dec
ds
xor
rolb
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
andl
setnp
sub
adc
lcall
mov
int3
inc
andl
test
push
fldt
popf
mov
cmp
mov
add
cs
ror
mov
int
sbb
dec
stos
pop
fists
cmp
in
test
mov
loopne
ss
out
lret
lea
add
shl
add
popf
add
outsl
les
lds
test
jmp
jp
aam
addr16
sbb
jp
fcomp
int3
test
clc
xor
pop
out
adc
lods
jo
sub
ret
rcll
jns
lahf
and
imul
stos
xchg
add
xchg
into
adc
push
mov
push
push
push
ds
mov
sub
fstpl
clc
jbe
pop
js
sub
mov
xchg
add
jl,pt
push
add
and
fstp
std
sub
mov
xor
push
fsubl
dec
test
mov
imul
arpl
and
int3
jmp
pop
movsb
insb
xor
sbb
lock
and
mov
cld
scas
icebp
mov
js
jle
ret
mov
fdiv
arpl
push
sbb
cmp
xchg
dec
or
test
pop
icebp
xor
dec
test
xchg
mov
clc
mov
js
push
sbb
or
loopne
lret
lds
xchg
pop
sbb
imul
lret
mov
subl
dec
push
into
cs
rolb
cmpsb
scas
mov
imul
or
sti
out
push
shlb
push
ljmp
xchg
adc
jb
daa
ret
push
mov
dec
mov
add
test
adc
and
mov
adc
inc
roll
enter
sub
xor
sub
shll
in
sbb
test
outsl
lahf
cs
movsb
icebp
inc
cs
sarl
jne
mov
dec
jl
sar
fsubs
jl
lods
sbb
decb
aad
mov
imul
loope
pushf
mov
xor
orb
add
jae
dec
xchg
je
aam
adc
loopne
fisubl
or
loope
mov
stos
jae
push
mov
out
xchg
push
mov
out
sbb
incl
in
jae
cmovo
fiadds
xorl
test
loope
push
loopne
call
inc
cmc
jg
xor
stc
dec
mov
cmp
ret
mov
mov
mov
and
mov
pop
lcall
xor
dec
nop
outsl
inc
movsb
loopne
fiaddl
pop
iret
jno
xchg
lahf
inc
push
in
test
mov
xchg
push
inc
notb
cmp
lahf
cwtl
push
mov
mov
mov
aam
arpl
and
outsb
inc
pusha
int
mov
dec
popa
cmc
push
jg
cwtl
inc
xchg
inc
pop
shlb
clc
out
mov
cltd
push
fisubl
shll
cmpsb
xor
scas
stc
mov
and
lods
pop
aaa
mov
out
add
dec
arpl
or
dec
xlat
inc
mov
dec
xlat
test
inc
mov
sar
xchg
xor
icebp
jmp
xchg
jbe
dec
sbb
ret
addb
xchg
pop
jne
stc
shll
fisttpll
xor
push
sti
pushf
dec
xor
push
add
stc
sbb
call
fs
cmovge
add
cmp
mov
xchg
mov
mov
pop
adcb
cs
addr16
mov
jns
loop
cli
mov
and
sub
les
mov
mov
das
cmp
pushw
fisttpll
imul
cwtl
dec
cmp
add
xchg
int
mov
or
insl
repnz
ljmp
int
xor
inc
sbb
pop
js
inc
xchg
imul
in
cs
cmp
lea
rorb
in
or
pop
push
sbb
ret
sbb
iret
test
add
jp
mov
or
gs
adc
pop
stos
xlat
inc
sub
adc
insl
jne
mov
shll
mov
pop
shl
ret
cmpsb
or
sub
cmp
sbb
sub
jb
hlt
aam
mov
das
call
test
sub
push
jl
rorb
cmp
sbbb
add
inc
mov
adc
popa
lds
in
out
adc
insl
pop
or
cmp
adc
scas
mov
mov
fnstcw
dec
fsub
iret
in
mov
pop
subb
mov
sub
jle
out
dec
test
mov
popf
mov
out
add
xchg
dec
sbb
or
push
insl
lods
jae
stc
ret
hlt
mov
push
lret
pusha
sub
into
mov
cld
jecxz
out
jbe
xor
js
pop
cwtl
xor
jecxz
push
fnstcw
jge
push
add
push
push
cmp
insb
ljmp
clc
xchg
add
out
std
out
adc
push
jecxz
lea
sbb
das
ljmp
pusha
xor
loopne
shlb
jns
or
push
lock
lahf
inc
jb
mov
fdivp
stc
or
mov
iret
pop
push
call
cmp
sbb
enter
push
ftst
pop
daa
xchg
shll
repnz
inc
cmpps
dec
adc
mov
push
add
pop
cmp
mov
stos
data16
jnp
sub
jnp
sub
cmpsl
movsb
xor
pop
push
sbb
mov
ljmp
leave
jbe
mov
cs
mov
xor
pop
movsb
jo
fwait
lods
cmp
in
inc
sub
shlb
add
scas
xchg
lds
sahf
xor
sti
test
loopne
push
loope
roll
cmp
or
mov
add
cmp
inc
cmp
mov
jl
or
mov
popa
dec
pushaw
add
adc
ficomps
in
sbb
push
dec
push
aaa
jbe
test
daa
inc
sbb
sub
sbb
mov
sbb
mov
add
cmp
nop
push
je
add
ret
or
and
adc
fsts
xor
mov
int
movl
and
std
shrb
icebp
adc
dec
cmc
xor
add
xchg
in
loop
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
xchg
adcb
cmova
insl
pop
add
jecxz
dec
cmpb
jg
lahf
repz
movsb
dec
and
fcomps
mov
dec
rolb
jg
jecxz
mov
sahf
jo
in
les
and
push
mov
push
lahf
pop
popa
and
lods
or
and
fidivs
mov
and
push
xchg
js
pop
mov
je
cmp
out
xchg
mov
jo
pop
pop
cmp
mov
mov
lock
add
cld
loop
aam
cmpsb
mov
and
cmp
mov
mov
mov
ret
bound
pop
and
lcall
add
cmp
push
jmp
push
popf
enter
mov
mov
xchg
xorl
add
sub
jb
xor
mov
fs
push
cmc
push
loope
mov
lock
out
xchg
imull
cmp
inc
cmpsl
les
insl
lcall
call
xchg
fs
sub
pop
push
nop
popf
outsb
push
sarb
popa
scas
or
loope
mov
nop
xchg
jecxz
in
clc
adc
jl
cmp
push
shr
jl
cmpsb
inc
das
ds
mov
rcl
js
mov
test
orl
sub
xchg
movsl
sahf
add
jp
sub
je
lds
daa
int
out
pop
push
clc
and
jo
push
mov
adc
mov
stos
cltd
lahf
add
jae
mov
and
cli
fdivrl
insb
pushf
mov
jge
push
fwait
jno
lea
jl
int
pop
cmc
test
dec
dec
aas
push
adc
mov
fsubs
test
pop
loope
push
jge
test
mov
das
das
roll
jge
loop
adc
xlat
push
mov
sbb
jmp
xchg
push
push
push
dec
mov
roll
in
jmp
testb
mov
inc
cs
jbe
inc
iret
mov
ja
mov
or
and
pop
jb
dec
sub
lods
push
mov
jno
lods
push
sbbb
stc
sub
fldt
sub
mov
xor
movb
ret
es
lock
sahf
mov
jmp
cmc
insl
popa
flds
xor
mov
fcoms
inc
push
sbb
sbb
es
rorl
pusha
cmpb
push
cmp
sub
adc
sub
add
or
into
int3
es
inc
mov
fstpl
pop
out
sar
inc
ss
xchg
ror
aas
cwtl
push
jl
xchg
inc
sar
ljmp
std
xchg
or
cmc
je
loop
enter
jmp
jl
out
jle
addr16
int3
fs
shrl
scas
lds
cmp
add
adcb
xchg
sbb
arpl
idivb
jnp
and
jle
out
add
mov
cmp
pop
mov
shl
jbe
cwtl
cmp
adc
imul
jns
shl
pop
cmp
push
pop
arpl
mov
enter
jl
scas
es
test
sbb
add
add
or
std
shlb
mov
iret
out
pushf
mov
xor
mov
cmp
mov
insl
push
sbb
dec
and
push
daa
pop
out
sti
lods
subb
or
out
shr
stos
sbb
inc
pusha
mov
and
push
sub
inc
xorb
xchg
dec
cmp
sub
mov
sub
clc
rorl
pop
ret
test
cli
test
push
lea
cwtl
sbb
ret
mov
popf
nop
dec
xlat
scas
inc
sub
push
les
mov
xchg
in
popf
pop
mov
iret
movsb
xchg
push
gs
aam
sbb
or
cmp
into
int3
sbb
dec
jmp
xor
mov
lcall
cmp
mov
mov
pop
jne
into
ret
ds
enter
fs
enter
mov
cmp
xchg
push
xorl
ja
mov
push
mov
sbb
filds
and
xchg
fdivrs
xchg
fimuls
dec
jg
punpckhwd
data16
data16
lock
repz
mov
jecxz
adc
inc
ss
mov
and
dec
jne
sub
push
inc
cmpsl
mov
mov
jae
pop
pop
dec
lret
ja
xor
push
iret
cmp
sbb
lods
ret
dec
dec
or
insb
into
dec
fs
movsl
push
aas
in
sub
jg
int3
outsb
mov
push
inc
ss
mov
pusha
and
inc
xor
mov
sbb
adc
mov
jg
pop
xor
repnz
mov
cmp
mov
arpl
into
popa
adc
mov
scas
fbstp
pop
jge
push
adc
add
dec
and
lds
adc
int
sub
mov
and
jle
hlt
adc
pop
jp
ja
sub
mov
ret
cmp
or
pop
xchg
mov
shlb
dec
or
cmpsl
imul
and
xor
and
mov
rorl
xor
jbe
ss
fucomp
imul
lock
cmp
sbb
or
pushf
mov
lods
add
icebp
add
xchg
pop
pusha
jns
xor
leave
pop
scas
imul
sub
sub
ss
mov
cmp
sbb
sbb
shrb
mov
je
adc
lret
adc
sbb
sbb
scas
stc
in
push
pop
sahf
stos
sub
inc
dec
lcall
pusha
das
nop
xchg
shrl
xor
loopne
or
js
xchg
into
inc
inc
jae
jbe
inc
pop
jne
inc
sub
lahf
outsl
inc
push
push
clc
sti
adc
inc
mov
cmp
lea
pop
pop
inc
sbbl
stos
adc
jle
push
iret
pop
or
shll
sar
dec
sbb
cmp
aaa
or
jne
or
xchg
dec
imul
mov
pop
nop
or
enter
push
scas
inc
stc
negb
in
iret
push
je
dec
stc
arpl
stos
fwait
rcr
jne
push
rcr
sti
and
push
inc
push
xchg
imul
inc
in
rcrb
inc
cld
addb
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
and
pop
add
push
scas
ret
bswap
pop
sbbl
dec
out
xchg
aad
popa
mov
adc
lcall
cmp
andl
mov
sub
or
or
loope
dec
data16
adc
sbb
into
rclb
cmpsl
fisubrs
in
mov
mov
lahf
int
sub
fs
pushf
sub
lahf
adc
sub
mov
sub
or
ds
call
call
xor
imul
mov
data16
dec
popa
jle
sarb
mov
aad
pop
fiaddl
bound
test
mov
adc
ss
in
fidivl
sub
out
pushf
mov
ljmp
fwait
mov
sub
ljmp
cwtl
or
das
movsb
jg
jle
leave
jge
add
sahf
inc
das
cmp
fldl
jg
lahf
cmp
xchg
insl
std
mov
repnz
and
add
dec
jno
sbb
cmp
pop
cmpsb
cmp
inc
cs
lods
cmpsl
shll
add
lcall
sbb
jge
shrb
std
test
sar
das
cli
push
lahf
aas
lahf
add
sub
add
movsb
mov
cmp
call
outsl
les
cmc
pop
inc
stos
movsl
sbbl
cmpsl
cmpsl
lds
movsb
mov
push
push
out
xor
mov
add
insl
ret
mov
xchg
stc
lods
cmc
lret
mov
or
or
lods
or
in
and
xchg
lods
cs
push
mov
movsl
jno
inc
cld
daa
pusha
mov
aam
mov
outsl
ljmp
out
stos
push
outsb
pop
mov
ja
add
aad
push
xchg
sub
insl
push
pop
out
cmpb
fldcw
jo
mov
std
xchg
xchg
pop
mov
dec
jl
xlat
mov
dec
add
or
aad
mov
xchg
in
sub
ds
test
mov
xchg
mov
jg
inc
imul
cmpsb
movsb
inc
sub
xchg
xchg
cmp
xchg
into
pop
pusha
jb
lea
cmp
pavgw
xchg
and
sbb
push
add
mov
fcoms
icebp
inc
jbe
lahf
sbb
xchg
addr16
in
add
or
xchg
pusha
xchg
ret
or
inc
aas
push
into
fimull
sbb
mov
xchg
cld
add
xchg
and
pusha
das
cmp
jle
sbb
outsl
sbb
add
rorb
and
fcomip
pushf
or
leave
cltd
or
dec
mov
in
lret
in
fmuls
adc
ret
iret
inc
dec
pop
cmp
adc
sti
shrb
jmp
xchg
imul
jmp
pusha
clc
push
loopne
ret
xchg
ror
inc
test
add
hlt
scas
adc
inc
xor
stos
lret
sbb
pop
int3
dec
pop
cld
fsts
or
aas
sti
hlt
sbbl
pop
test
adc
sub
mov
xchg
sarb
hlt
xlat
cld
dec
out
push
movsl
jno
stos
movsl
sub
out
pusha
or
fistpl
cmp
aad
push
dec
shrb
pop
je
jecxz
scas
fdivrp
cmpsb
inc
jnp
lods
sub
lret
or
ja
xor
hlt
dec
dec
sub
in
add
add
enter
sbb
mov
xor
and
std
push
sub
add
xor
cmp
pop
ss
xchg
adc
push
pop
sub
andl
or
fbstp
adc
inc
aaa
jbe
lret
rolb
xchg
das
jecxz
gs
adc
pop
leave
iret
arpl
leave
mov
mov
lret
cmp
sbb
in
jl
ljmp
xchg
or
mov
je
adc
sub
add
fs
hlt
fisubrs
enter
push
pop
mov
jmp
fcoms
lret
imul
test
lret
hlt
dec
pop
addl
arpl
outsl
test
lcall
mov
std
or
aad
cmp
push
insl
iret
mull
icebp
mov
push
cmp
movsb
mov
push
lret
out
xor
pop
and
add
cmp
shll
mov
fmul
jecxz
scas
push
bnd
loop
addr16
xchg
movsb
in
out
dec
sub
pop
sub
scas
lret
pop
pop
movb
fidivl
xchg
add
mov
repz
jg
lret
fdiv
add
adc
nop
aad
mov
shrl
jno
pop
pop
or
jl
mov
sbb
dec
test
lds
pop
lods
cmp
dec
ficomps
in
push
cltd
push
xorl
cmp
lret
nop
sbb
jo
pop
fs
dec
pop
es
push
fistps
adc
sbb
orl
out
sahf
frstor
add
sbb
jl
xor
fsubrs
push
mov
dec
std
pop
out
push
push
inc
mov
jmp
xor
shlb
push
aam
xorb
cmpsl
lods
or
xchg
packssdw
jo
mov
test
mov
scas
std
sub
dec
xchg
adc
fwait
xor
icebp
rcrb
jg
lahf
pop
add
xchg
or
fcompl
jle
dec
xlat
push
adc
into
xchg
in
fsubrs
test
in
cvtdq2ps
add
and
pop
bnd
dec
xor
in
pop
out
inc
pop
shll
out
or
inc
f2xm1
rcrb
push
ss
ljmp
addb
gs
jmp
or
jae
sub
sbb
sbbl
ss
xchg
dec
imulb
adc
xchg
pop
out
pop
cmpsl
xchg
cmpsb
addr16
mov
lods
pop
les
mov
cs
ret
pop
mov
and
push
lods
lret
in
xchg
mov
shrb
jge
lret
push
sbb
mov
loop
xchg
pop
scas
pushf
insb
outsl
sub
scas
push
push
sub
cmpsl
pusha
push
xorb
aaa
pop
adc
fcomi
loopne
cmp
clc
sahf
imul
shr
pop
lret
dec
xchg
mov
hlt
mov
xchg
aam
add
fildll
jmp
jle
into
std
cs
sti
fcmovnb
gs
data16
call
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
into
nop
insb
xchg
push
add
jo
in
imul
mov
xor
add
fst
test
cli
sbb
jge
inc
hlt
out
rcll
jnp
pop
xor
push
ja
mov
movsl
ret
leave
sub
cmp
lret
push
xchg
fisttps
pop
mov
mov
ss
or
inc
pusha
mov
mov
stos
loope
jbe
mov
xchg
or
aad
dec
pusha
sbbl
fadd
test
add
test
add
icebp
int3
sub
stos
sarl
mov
ja
fnstcw
stc
stos
mov
insl
test
mov
xor
cmp
addl
shlb
push
lea
mov
mov
enter
mov
cmpsl
mov
std
xchg
ss
sbb
dec
jmp
lds
push
mov
sub
jge
fmul
lret
cs
cmpsb
lods
add
js
insl
jne
xchg
xor
mov
mov
lahf
js
pusha
fsubrl
aas
cmpsl
push
icebp
push
pop
xchg
xor
notl
lret
sub
arpl
xor
sbb
push
mov
incb
addr16
jno
test
js
inc
jns
into
add
push
sbb
hlt
clc
fisubs
rorl
int3
out
inc
mov
test
les
add
invd
add
sbb
jne
mov
popa
cmc
mov
rolb
sub
and
sub
fxch
and
flds
cli
xor
xchg
jns
jmp
inc
pop
jnp
lea
loop
jnp
sub
inc
cmp
pop
jbe
iret
sbb
subb
and
dec
adcl
and
xlat
imul
mov
scas
into
aaa
rorl
sahf
aad
outsl
nop
cmc
adc
pop
cs
push
mov
stos
aaa
orl
pushf
adc
scas
xchg
std
movsb
out
mov
or
cmp
and
int3
adc
adc
push
cli
mov
repz
adc
xchg
sub
mov
sarb
jbe
in
sbb
mov
pop
mov
iret
cli
pop
nop
cmp
shl
sub
ss
int3
iret
es
test
stos
dec
xorb
das
imul
mov
roll
out
das
jp
adc
lret
jp
push
pusha
in
test
in
movsl
pusha
pop
cmp
enter
outsl
mov
xlat
pusha
loope
fcmovbe
jge
mov
popa
jle
mov
mov
xchg
pop
sarl
ss
scas
push
test
jb
iret
adc
xchg
repnz
pop
jo
pop
aad
stos
or
fadds
push
ret
xchg
jb
xchg
pusha
aaa
add
jne
shlb
sub
inc
scas
enter
jb
adc
pop
out
jle
push
sarl
mov
and
cmp
das
aaa
jl
xor
jmp
inc
jl
cmp
mov
mov
je
fldt
sbb
fnstenv
test
rclb
jg
cmpsl
push
dec
adc
aad
out
lcall
lahf
dec
repnz
adc
add
sbb
mov
pop
out
sub
push
loopne
lods
clc
xorb
adc
jno
or
incl
sub
mov
dec
sbb
or
in
sbbl
arpl
or
ljmp
mov
jno
cs
filds
sub
or
jp
cmp
xchg
es
lods
ret
jecxz
xchg
push
jge
pop
xor
bound
mov
dec
lods
test
jb
shr
inc
loop
sub
xor
sbb
fimuls
into
sub
inc
lret
pop
inc
sub
shlb
or
xchg
pop
pop
gs
and
je
dec
hlt
idiv
push
jg
pop
adc
push
cmp
fsubrp
push
pop
add
aas
dec
and
into
sbb
push
cmp
xlat
mov
loope
mov
cli
dec
or
sbb
in
cmpsb
fimuls
mov
jg
sbb
arpl
jecxz
fisubrs
pop
mov
and
sub
jl
data16
push
lahf
inc
rorl
pop
jbe
repnz
test
ss
leave
push
push
push
push
lock
jno
mov
int3
enter
push
out
xchg
rorl
inc
rclb
shrl
push
dec
adcb
repnz
in
fwait
and
dec
clc
xchg
pop
ja
dec
dec
stc
fcmovu
movsb
jo
push
cs
adc
lds
mov
lock
dec
adc
dec
add
iret
addr16
jne
push
push
pop
loope
jmp
push
js
xlat
icebp
pop
fwait
ret
lods
add
das
push
pop
jle
jecxz
fnstsw
mov
out
cmp
imul
inc
sub
jo
mov
stc
push
xlat
inc
push
xchg
inc
orb
test
les
je
rcrb
popf
or
dec
ficompl
jb
cld
aam
or
in
jnp
fsubrl
mov
shlb
arpl
xchg
out
cld
sbb
dec
pop
into
push
pop
pop
mov
dec
insl
mov
lds
nop
cmp
jp
adc
cmpsl
addr16
push
sbb
lods
fwait
cmp
mov
dec
fistl
fildl
enter
cmp
lds
fimull
jb
xchg
popa
fmull
jle
or
hlt
mov
push
jbe
xlat
push
pop
sub
mov
and
push
mov
dec
or
xchg
insl
inc
sub
insb
or
mov
sti
mov
jno
xor
das
call
and
xor
scas
pop
movsl
xchg
and
inc
aad
push
mov
push
cmp
js
pop
sbb
out
repnz
sub
inc
aas
sub
mov
jnp
cmc
pusha
jns
out
jbe
xchg
or
scas
xor
and
out
iret
ss
push
out
jg
fwait
in
push
hlt
mov
aam
test
popa
jno
push
add
mull
aad
cmp
jle
shlb
dec
sbb
or
inc
fwait
sbb
or
incl
cmpsl
mov
popl
and
mov
lock
sbb
jno
stc
aas
fs
sbb
cmp
and
divb
or
inc
mov
mov
inc
repz
dec
pop
gs
jne
daa
pop
test
scas
mov
dec
xchg
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
mov
add
jp
pop
mov
or
xchg
xchg
jns
mov
push
aas
jbe
pop
insb
pop
xor
ficoms
mov
adc
cmc
hlt
xchg
or
dec
mov
push
mov
inc
mov
imul
mov
pop
leave
imul
cld
sub
hlt
mov
loope
fidivrs
dec
xchg
lret
pop
lahf
xchg
mov
iret
arpl
lods
shll
adc
repz
data16
push
or
mov
dec
jo
ror
ss
out
and
call
lahf
cwtl
lcall
mov
aam
add
scas
mov
movsb
loop
outsb
cmp
repnz
popf
and
xchg
mov
push
fisttpll
outsl
les
inc
mov
aaa
cmp
mov
dec
sub
jo
cmp
and
cmp
push
je
pushf
push
clc
mov
js
ljmp
or
aad
jbe
cmp
jge
jo
and
arpl
out
jb
imul
xor
pop
xchg
dec
push
adc
pop
mov
mov
cmp
imul
mov
les
push
pop
push
enter
dec
sbb
addb
mov
scas
xchg
popa
jecxz
lret
adc
inc
lods
idivb
fstps
cmp
roll
push
push
mov
lea
jp
js
pop
in
push
adc
push
cmpsb
mov
dec
mov
add
call
int
inc
mov
fdivrl
mov
push
lret
sbb
mov
adc
and
jne
fdivs
test
xchg
or
rclb
sbb
fst
mov
pop
xor
bound
js
rorb
ss
push
loop
cwtl
inc
jmp
push
mov
xchg
push
add
aam
lcall
sarb
push
ret
inc
xor
and
jbe
xor
lock
bound
push
cwtl
fildl
pop
jno
pop
pop
sbb
jno
out
xchg
rorb
mov
or
aas
and
lds
sbb
je
sbb
push
enter
roll
data16
rorb
xchg
mov
enter
insb
sti
sub
fwait
int3
cmp
pop
lcall
or
jmp
pop
xchg
fs
inc
in
rorb
mov
flds
mov
sub
lock
fldl2t
adc
arpl
loop
sub
push
mov
push
in
push
xor
out
xchg
call
test
lcall
sbb
cmp
scas
into
mov
cmpsl
mov
cs
pop
or
stos
ss
lds
fstpt
or
outsb
xchg
sub
pop
rorb
pushf
sarb
and
test
insl
push
or
loopne
out
sub
pop
and
add
xor
jae
jle
cmp
sbb
xor
xchg
fcompl
adcl
adc
inc
mov
or
mov
dec
subb
jne
xor
cmp
ja
inc
cli
repnz
dec
fsubl
dec
nop
jno
pusha
out
pop
inc
add
mov
xor
sbb
rcll
hlt
or
inc
cmp
bound
sbb
mov
dec
lahf
orb
sub
xchg
lock
inc
stc
test
in
fs
lods
xchg
sahf
mov
adc
xchg
xor
aas
outsl
sbb
movsb
sub
repz
xchg
int3
jmp
ror
ret
sub
rorl
outsb
test
out
adc
sbb
fld1
int3
mov
repnz
jg
ds
cli
cwtl
xchg
inc
lret
mov
loop
stc
cs
bound
rol
mov
addr16
ret
and
sub
add
fwait
inc
mov
xchg
fs
sub
pop
repz
mov
cltd
out
adc
sbb
pop
jmp
int3
loope
pushf
addl
sbb
push
mov
jg
pusha
mov
into
xchg
lret
xchg
lods
pushw
mov
lret
inc
and
adc
out
call
xchg
mov
jae
mov
notb
mov
push
aaa
ds
jno
notl
in
mov
es
cmp
xchg
jne
lret
jl
push
inc
jnp
adc
outsl
push
inc
dec
ss
pop
lea
push
mov
dec
xchg
mov
add
pop
pop
out
lret
add
test
inc
fnstcw
rcrl
or
push
or
xchg
mov
jne
mov
andb
lods
inc
and
mov
loop
lods
lea
in
push
push
fsub
xchg
adc
loopne
insl
lods
inc
jo
pop
rorb
out
inc
xchg
jb
dec
ret
mov
inc
push
or
mov
sbb
mov
stc
outsb
mov
cmp
les
sub
rcll
or
mov
jmp
clc
jns
or
das
stos
pop
mov
aam
push
xchg
ja
mov
loopne
repz
scas
add
rcrb
jge
fsts
sbb
fs
and
insb
inc
jecxz
inc
mov
pushf
aaa
mov
pop
sub
mov
inc
xor
and
pop
aad
les
pop
push
daa
push
pop
inc
push
push
add
std
cmp
out
dec
aad
stos
add
adc
gs
lods
mov
js
jle
cmp
cli
lods
dec
aad
lods
pop
mov
outsb
cld
mov
push
add
lcall
rclb
test
out
mov
mov
nop
or
fcompl
dec
or
cmp
mov
sub
xor
jbe
rol
std
mov
scas
aad
and
jg
xchg
mov
nop
xor
outsb
data16
dec
rol
fwait
push
sti
stc
push
rol
ljmp
sbb
lods
add
dec
and
and
dec
in
sbb
dec
adc
and
xor
cmpsb
sahf
rcrl
rclb
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
or
add
adc
aaa
fsubrp
and
repz
pop
test
es
aam
fscale
testl
cli
ljmp
or
iret
rcrl
pop
push
dec
test
inc
push
daa
sub
movsb
fcomps
lods
movsl
pusha
js
mov
test
aas
sub
fwait
inc
pop
ljmp
rclb
cli
pop
push
sbb
lock
xchg
dec
arpl
je
fsubs
call
jae
jae
mov
out
push
adc
dec
out
dec
inc
adc
mov
xchg
inc
dec
cmpsl
xor
call
jecxz
xchg
test
mov
add
sahf
and
xchg
or
pop
dec
mov
loop
mov
push
add
in
aas
insb
mov
ds
xcrypt-ofb
cmpsl
stos
lods
clc
js
push
mov
popf
lret
pop
mov
orl
and
pop
push
push
nop
cwtl
stos
fwait
xchg
cmpb
in
xchg
loope
insl
outsb
ja
jo
mov
adc
outsl
sbb
ss
mov
lahf
scas
jmp
mov
cwtl
push
cmc
or
or
mov
xchg
ds
sbbl
dec
mov
je
xchg
shrb
adc
mov
xor
rorl
mov
adc
call
scas
bswap
movsb
add
or
in
jnp
rcrl
jg
or
daa
sub
cmp
loop
rorl
fcmovnb
fisubs
mov
inc
inc
inc
jmp
imul
les
sbb
sbb
or
cmp
loope
pushl
cli
pop
scas
enter
jnp
lods
cli
pop
das
rol
pop
or
xchg
adc
shrl
pushf
inc
push
mov
mov
sbb
mov
out
or
push
jg
push
ret
xchg
cmp
push
in
out
xchg
mov
dec
inc
ret
inc
sti
jmp
mov
cltd
mov
repnz
push
pop
add
sub
jb
int
push
inc
add
bound
enter
push
rol
mov
and
js
add
add
jae
lcall
imul
xchg
bound
pop
mov
outsl
pushf
ret
lcall
mov
rol
dec
sub
pop
loopne
mov
icebp
xchg
or
xchg
lea
faddl
mov
mov
imul
cmc
xchg
push
andb
rorb
popa
add
inc
adc
rolb
cli
aaa
enter
shr
lock
mov
xorps
inc
adc
js
into
hlt
adc
dec
enter
lock
sahf
loopne
or
cmp
scas
sti
push
jmp
imul
pop
or
sbb
daa
andl
stos
mov
sbb
dec
adc
stos
mov
pop
clc
push
stc
dec
insl
sbb
cmp
inc
imull
enter
pop
outsb
jb
sbb
mov
or
ret
movsl
dec
es
clc
cmp
sub
dec
pushf
movsl
bnd
mul
outsl
lahf
rorb
inc
rcl
jo
out
mov
scas
jne
into
mov
push
inc
cmpsl
fists
pusha
add
mull
mov
lds
lds
cld
jp
scas
fdivrl
out
stos
inc
icebp
jns
mov
cmpsl
push
inc
loop
rorb
aas
js
sarb
inc
sbb
fildl
push
test
mov
gs
stos
pop
ret
pop
and
loop
add
sub
cmc
mov
mov
jg
ss
out
and
cmpsb
mov
jo
pop
movsl
addr16
aaa
aas
loope
mov
push
enter
xchg
mov
inc
adc
mov
mov
sub
imul
fstpt
adc
pop
mov
rolb
les
xor
in
push
shr
je
shll
jl
xor
lret
add
mov
push
jb
rcrl
mov
push
push
sbb
cmpsl
jno
sub
js
stc
mov
lcall
pop
fs
pop
negl
mov
in
sbb
sub
loop
mov
pusha
pop
sbb
in
mov
arpl
and
cmpsb
cmpsb
enter
ds
push
mov
pop
xor
outsl
cltd
sbb
movsb
scas
push
sub
fadds
js
sbb
cltd
hlt
arpl
sub
or
movsb
push
shll
rclb
pop
dec
xor
addb
and
fidivs
insl
icebp
adc
mov
inc
push
adc
lret
dec
incb
or
int
ss
setbe
rol
mov
pop
sub
bound
fdivr
lods
mov
jns
xchg
mov
test
in
je
cmp
lcall
push
inc
and
out
dec
push
lock
in
imul
popl
and
push
pop
fisttps
test
add
pop
sub
aaa
mov
push
addr16
ret
inc
test
sub
gs
xchg
mov
pop
push
xor
cbtw
das
test
cmp
push
push
xchg
aaa
fwait
ret
mov
rcr
popa
fists
pop
push
jl
pop
push
in
test
pusha
sub
mov
fwait
add
shrb
xchg
orl
add
pop
fisubs
stc
jmp
mov
repnz
js
sbb
clc
push
test
dec
leave
xor
jne
inc
add
push
into
or
enter
ret
adc
lahf
dec
jp
sti
inc
inc
or
and
or
in
testl
mov
dec
mov
push
int3
test
mov
add
xchg
xchg
cmp
xor
test
xchg
mov
jne
ss
aaa
lds
imul
mov
cmp
ja
aad
jge
jmp
adcb
rcll
dec
in
jp
popa
outsb
fistps
data16
jl
cld
mov
jge
xor
or
jp
inc
in
lods
xor
out
fidivl
jmp
in
arpl
cmpsb
stc
mov
test
sub
xchg
fidivrl
cmp
push
xor
addl
xchg
push
mov
or
push
mov
or
cld
dec
int3
pop
stos
pop
inc
push
aam
push
enter
sub
das
ret
test
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
ss
add
jmp
divl
addr16
lahf
mov
aaa
add
pop
or
faddp
or
push
test
jns
imul
bound
flds
mulb
popa
ja
divb
int3
ficoml
stc
fwait
movsb
fucom
test
push
pushl
loope
sub
dec
mov
call
lock
sbb
fstpl
inc
sbb
int
sbb
mov
or
stc
das
add
dec
pushf
dec
in
cmp
test
push
pop
addr16
cmp
sar
cmp
jno
inc
dec
adc
repnz
cwtl
out
pop
outsb
repz
and
fistps
xor
xchg
std
cmp
scas
outsb
adc
into
push
jmp
stos
or
mov
jle
insb
add
dec
jbe
and
push
jle
lods
int3
xchg
xor
and
in
or
ss
and
jo
movsl
lea
sub
inc
sbb
lcall
adc
or
push
and
sub
sub
outsl
jecxz
popa
mov
jecxz
std
dec
push
mov
gs
mov
sbbl
loopne
pop
inc
imulb
scas
shlb
loopne
xor
xor
iret
popl
imul
add
nop
repnz
lret
sbb
jno
inc
xor
xchg
insb
jl
dec
or
xor
nop
popa
xlat
cld
dec
shrl
push
sub
in
or
sbb
mov
mov
jmp
mov
mov
sarl
arpl
scas
out
inc
mov
inc
jmp
test
lret
ja
aas
andb
sbb
xchg
add
jno
inc
xchg
xor
nop
stos
pop
add
inc
orl
sub
xor
fldcw
shrl
sub
imul
subb
xchg
jnp
inc
jg
mov
insb
mov
repnz
dec
stos
jl
repz
ficompl
push
loope
xor
fcomps
push
xchg
xor
inc
stos
push
mov
add
xlat
lret
xlat
ss
push
push
xchg
or
gs
fcmove
inc
mov
xchg
cmc
inc
std
in
jnp
pop
hlt
and
cmpsb
insb
cmp
or
je
lret
test
fsubp
cs
adc
xor
in
dec
add
les
sbb
mov
jg
xor
mov
fcmovne
mov
rcll
sahf
cmp
inc
shll
ret
outsb
lahf
jnp
int
and
lahf
add
push
int
add
jo
insb
xchg
or
adc
sbb
arpl
xchg
les
xorb
xchg
sbb
push
mov
inc
sbb
dec
cli
xchg
stos
scas
xchg
das
outsb
lret
push
dec
cmpsl
cltd
out
sub
pop
and
movsb
inc
sub
in
adc
jle
pop
push
cld
ror
fmuls
lds
xor
pop
pop
and
mov
cmpb
sub
hlt
mov
sbb
repnz
popf
in
int
popf
mov
jae
mov
dec
adc
add
push
lret
add
push
outsl
jp
negl
dec
sbb
stos
push
xor
mov
jmp
mov
das
fstpt
leave
test
es
push
mov
mov
fwait
mov
int
sarl
xchg
xchg
pop
inc
or
outsl
sbb
xor
loopne
aas
cmpl
stos
lret
push
pop
jnp
lret
inc
lds
repnz
notl
ds
aam
sub
in
loopne
aad
push
push
mov
test
xor
ficompl
test
cltd
jae
jae
pushf
dec
add
in
mov
cmpsb
cmp
es
add
push
outsb
insl
xchg
ror
pop
sub
mov
mov
stos
pop
adc
mov
sub
fcoml
es
cli
es
sub
movsl
sti
inc
cs
dec
push
jl
cmp
popf
stos
fstp
out
add
clc
inc
adc
movb
outsb
iret
mov
fistpl
imul
gs
movsb
es
loope
clc
add
iret
or
in
sub
pop
xchg
stc
rorb
test
sahf
orb
push
loopne
fwait
mov
dec
btc
mov
into
push
mov
test
rcrl
add
pop
ds
mov
cmp
popf
jg
sub
enter
int3
or
lret
shlb
add
push
dec
and
fwait
inc
add
cltd
xchg
add
mov
mov
ret
jle
xchg
cmp
cmpsl
fadd
push
and
and
in
add
stos
shll
sbb
jmp
mov
outsb
xlat
push
push
lods
adc
repnz
mov
sbb
imul
fcoml
cmp
jmp
dec
cmpl
out
movsl
into
call
cmpsl
jbe
lret
or
test
test
add
ret
cli
mov
sbb
adc
push
fisttps
pushf
xor
fwait
xor
adc
and
xchg
je
adc
insb
inc
jnp
mov
cmp
in
nop
cmp
test
repz
mov
movsb
mov
push
stos
in
insl
clc
call
pop
test
inc
inc
xchg
jp
or
cmpsl
orb
sbb
mov
popa
in
je
jns
pop
xor
jo
mov
cmp
add
cmp
repz
imul
sti
jo
mov
cli
popf
std
addr16
es
les
arpl
sbb
mov
iret
loope
sbb
jno
cmp
inc
add
inc
js
inc
dec
movsb
sysret
mov
test
test
sti
insl
popf
mov
push
inc
test
testl
shll
fnsave
inc
dec
cli
mov
jae
js
xchg
mov
sbb
ljmp
testl
xchg
pop
rolb
insb
imul
inc
ja
cwtl
jg
outsl
mov
cmpb
stc
mov
jge
repnz
mov
sbb
xchg
sbb
aaa
leave
adc
imul
lcall
and
adc
add
movsb
aam
jb
mov
jbe
popa
ficoms
or
sub
or
pusha
js
sbb
add
fmuls
pop
add
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
and
add
icebp
mov
lahf
cltd
sub
bound
pop
aam
sbb
cwtl
loope
shrb
push
mov
jne
push
sub
pusha
inc
ficomps
sub
sbb
cmpsl
add
inc
or
pushf
or
mov
jno
dec
jp
cld
lret
movsb
sahf
sub
pop
xor
and
push
xlat
mov
gs
repnz
icebp
jmp
bound
xchg
lods
push
test
sub
inc
mov
mov
dec
aad
mov
lds
mov
cli
mov
and
jbe
mov
sub
add
jmp
gs
sub
pop
cld
aas
bound
scas
stos
mov
loopne
adc
dec
jg
adc
push
lds
lahf
in
inc
xchg
fucomp
sub
xchg
inc
in
mov
push
stc
pop
push
dec
ss
sub
fists
sbb
mov
int3
cmp
in
cli
in
mov
aam
cmpsl
mov
enter
imul
jle
daa
pop
and
movsw
mov
stc
aam
dec
repz
iret
mov
xlat
push
sbb
or
sbb
push
testb
push
mov
dec
pushf
mov
xor
das
outsl
sub
lcall
push
cmpl
jp
adc
aaa
pop
pop
sbb
aad
in
jp
dec
cmp
mov
xor
std
bnd
push
and
std
test
cmp
rep
out
xor
pusha
mov
inc
loopne
push
cmpsl
adc
aam
mov
sti
sti
lret
out
mov
jae
fdivr
out
ret
rcll
mov
pop
xor
xchg
mov
roll
int
push
and
in
movsl
push
sub
fwait
in
pop
mov
lea
push
aam
adc
out
in
pop
jae
push
ljmp
push
aad
sbbb
jbe
jb
sub
mov
mov
inc
test
push
outsb
jg
sub
jmp
das
std
mov
add
stos
loop
std
mov
int
cmp
pop
mov
out
and
cmpsl
mov
out
jecxz
rcl
mov
xchg
xchg
mov
push
inc
ljmp
cld
inc
dec
push
in
arpl
pop
jl
call
pop
xor
dec
sub
cmpb
sbb
andl
jge
sbb
and
cmp
mov
mov
out
adc
jmp
filds
inc
mov
mov
arpl
and
lock
jne
pop
fprem
prefetch
xor
outsb
lret
rolb
mov
mov
inc
add
sbb
scas
sub
push
push
popf
push
mov
ja
dec
adc
aas
inc
cmp
int3
mov
push
inc
or
scas
dec
ror
or
mov
fstpt
mov
xchg
jl
imulb
pop
pop
enter
loope
adc
cmpsb
lock
mov
cwtl
divb
push
pushf
rcll
lahf
xor
out
mov
test
in
int3
ret
lods
mov
inc
loopne
pop
cmp
jl
or
or
dec
mov
mov
fistpll
sti
ret
or
mov
mov
imul
call
icebp
je
cwtl
jbe
jbe
jl
enter
pop
jae
out
push
dec
ret
adc
xor
xchg
out
lods
adc
fistl
out
xlat
fwait
ret
js
or
xchg
mov
jmp
cmp
xchg
dec
out
jg
insb
mov
xorb
pop
lds
sbb
popa
jle
and
and
pop
cs
or
pop
icebp
popf
popf
mov
int
inc
pop
sbb
lcall
pop
adc
mov
and
lcall
mov
aad
xor
insb
andb
stc
pop
and
sbb
push
lcall
dec
pop
inc
inc
or
test
pushf
jb
pushf
andl
test
rorl
mov
mov
add
outsb
dec
add
jns
loope
iret
cmp
fs
pop
mov
lret
inc
sub
movb
mov
outsl
sar
mov
in
les
sar
xchg
xchg
dec
gs
pop
inc
rcrl
stos
call
cmp
jmp
roll
dec
adc
scas
push
gs
in
and
mov
pushl
xor
jl
sarl
lods
push
aam
jnp
xchg
insl
mov
or
ret
sar
or
sub
jp
neg
push
movsl
mov
psrlq
dec
loop
movb
dec
mov
xor
mov
pop
dec
in
xor
jbe
test
and
ret
pop
jne
inc
dec
hlt
lds
cmp
out
enter
add
or
test
mov
push
jle
or
cmp
shll
mov
or
call
pop
and
js
or
jae
or
mov
pop
sarl
push
imul
inc
or
lods
jae
xor
in
lods
push
imull
mov
into
sub
mov
xchg
adc
outsb
cmpsl
aad
xchg
sub
mov
jge
sbb
in
ljmp
outsl
xor
aam
fs
divl
sbb
cld
daa
or
sub
inc
cmp
dec
iret
jo
sbb
fs
xor
test
mov
loope
and
dec
adc
int
adc
fstpt
or
je
cmp
mov
mov
xor
dec
push
movsb
jae
scas
je
jne
cmp
les
sbb
ss
lods
jns
lods
mov
flds
out
fidivrs
int
mov
icebp
loop
xchg
pop
jbe
je
mov
icebp
test
mov
arpl
movsb
fs
sahf
lods
mov
roll
sub
dec
in
daa
lret
fcomps
fwait
sbb
pop
pop
das
sub
jne
out
cmp
push
push
test
movsl
repz
push
outsb
sbb
mov
repz
out
push
loop
lods
out
sbb
add
push
xchg
ljmp
les
xchg
dec
mov
jmp
jle
sub
or
cmp
clc
push
in
and
mov
iret
lock
push
repz
pop
in
jp
pop
lock
dec
aad
push
iret
push
xchg
sarl
xchg
subb
xor
adc
add
pop
add
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
xchg
inc
or
add
jns
mov
dec
inc
stc
sar
xor
dec
aaa
adc
or
in
ret
ss
loop
xor
mov
aaa
mov
jle
add
push
push
push
icebp
mov
repnz
cwtl
aaa
adc
loop
cwtd
mov
jle
jb
stos
test
mov
pop
adc
add
inc
pushl
add
add
xchg
xor
mov
sbb
and
ret
cwtl
in
xor
mov
in
fildl
sbb
aas
ficoms
les
test
adc
out
push
xchg
xchg
add
into
cld
clc
xchg
adc
inc
mul
adc
xlat
xor
arpl
cld
or
mov
nop
ss
jl
mov
xchg
sub
jg
inc
in
adc
add
das
fcomps
add
sbb
lret
dec
jns
in
data16
lods
xlat
xor
mov
lret
or
lahf
adc
cmp
xor
in
ljmp
ljmp
fnstcw
jo
pop
mov
adc
xchg
popa
loopne
inc
pop
lock
out
sbb
mov
fdivrl
push
mov
js
hlt
into
xchg
sub
arpl
mov
push
adc
jmp
dec
jle
int
mov
xor
loopne
in
jbe
jl
int
daa
mov
xchg
jl
movsb
in
insb
inc
clc
jge
xchg
mov
movsl
test
cwtl
jo
xlat
jl
shlb
std
adc
push
jp
mov
mov
jle
adc
sarb
notl
dec
stos
int3
shll
repnz
out
mov
pop
mov
nop
enter
sbb
ja
mov
and
sar
pop
and
dec
adc
xor
into
xor
mov
jge
fsubr
cld
dec
and
adc
mov
and
adc
jp
sub
mov
cmc
xchg
cmc
pushf
stos
stc
pop
push
int3
clc
mov
imul
out
out
arpl
sub
jecxz
jl
push
cwtl
or
outsl
sub
cld
orl
cmp
insb
icebp
notl
dec
pusha
jle
out
mov
push
add
popf
sbb
fs
push
add
dec
xchg
pop
loopne
sbb
and
pop
aam
insb
arpl
jb
mov
cwtl
mov
jge
sbb
dec
jge
mov
fildll
push
mov
adc
mov
xor
insl
pop
movsb
sbb
cmpsb
inc
cmp
and
je
jo
cmp
insb
negb
aad
mov
or
mov
and
or
push
xchg
movsl
adc
xor
and
insl
jns
ljmp
pop
push
arpl
and
mov
filds
pop
push
push
xchg
sbb
push
je
shrb
mov
testl
mov
inc
mov
into
out
das
loopne
nop
and
mov
inc
stc
jne
jmp
cmpsl
sbb
mov
dec
fimuls
les
xchg
push
ja
cwtl
shll
cld
lcall
push
jge
loopne
mov
imul
mov
insb
push
in
mov
in
pusha
cmp
fstps
mov
fistl
fwait
pop
cmpsl
and
rol
psllw
push
inc
js
mov
mov
dec
popa
jb
mov
xchg
dec
data16
fcoms
pushf
cld
cmc
push
sbb
xchg
and
xor
fldt
je
hlt
and
das
sub
mov
shlb
rcrl
mov
pop
adc
aaa
xor
lret
in
pop
outsb
scas
in
jecxz
loopne
mov
sub
bnd
add
icebp
dec
cld
xor
mov
pop
pop
sbb
mov
retw
mov
scas
lret
and
mov
call
push
pushf
fcomps
dec
out
sub
iret
ja
ret
xor
sbb
hlt
ja
clc
js
mul
inc
aas
add
cmp
data16
jp
xchg
gs
push
clc
fisubl
pop
notl
das
sbb
outsl
adc
lahf
test
stc
pop
mov
pop
lds
test
mov
test
lret
jo
rclb
stc
pop
addr16
sahf
ss
push
subb
sub
cmpsb
out
je
jp
xor
xor
arpl
data16
outsl
sarl
arpl
xchg
subb
scas
lret
mov
mov
push
sbb
push
cwtl
xor
jg
leave
adc
push
daa
repz
gs
scas
pop
sub
rorb
sbb
adc
push
cmp
dec
adcl
mov
adc
sub
shr
sbb
out
fs
adc
xchg
mov
or
in
xchg
cmp
mov
lahf
push
lods
lcall
iret
add
in
pop
inc
in
aas
adc
jno
lahf
dec
imul
inc
mov
mov
mov
fwait
mov
jnp
enter
sub
pop
jmp
mov
jp
cli
pop
mov
lods
mov
popf
sub
loopnew
mov
cmp
mov
aam
push
loop
or
nop
xor
ret
aam
sbb
jge
lea
or
lahf
scas
sbb
dec
mov
pop
cmp
push
fs
add
cltd
std
les
je
ret
cs
xor
jle
popa
shr
sarb
adc
dec
jg
loopne
sahf
cmp
fistpl
sub
nop
adc
inc
imul
push
dec
xor
arpl
sub
shrl
and
dec
icebp
push
incl
cli
xor
mov
lahf
in
shll
sbb
es
inc
bswap
xor
in
cld
out
cmp
jno
jg
adc
inc
jbe
lea
scas
xor
sahf
cmp
mov
int
popf
pop
sbb
mov
mov
sub
pop
rcr
xor
popf
sbb
sti
jnp
stos
push
lahf
xor
or
gs
push
filds
xor
loope
jg
inc
sbb
mov
pop
sbb
cmp
and
shrb
into
adc
mov
inc
xor
inc
sub
sbb
fsubrs
adc
mov
pop
pop
cmp
push
cltd
sti
pop
cwtl
mov
scas
iret
mov
jb,pn
inc
shrl
ds
cld
jb
xchg
xchg
push
fists
subb
lret
inc
fcmovb
mov
add
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
cli
add
inc
insb
jp
cmp
and
dec
fiaddl
ss
ror
sbb
call
gs
out
stos
mov
inc
cld
pushf
or
dec
push
std
xor
ja
or
ljmp
jecxz
lcall
nop
repz
add
or
fists
cld
xchg
mov
dec
or
in
sub
and
test
test
aaa
mov
mov
sbb
pop
popl
sti
pop
xor
mov
push
leave
mov
js
je
xchg
rorl
cli
cmpsb
ja
and
mov
movsl
cmpsb
xor
jg
aaa
dec
pop
inc
mov
inc
or
jecxz
mov
fs
movsl
jae
movsb
pop
and
call
sub
clc
sub
sti
and
inc
mov
cltd
addr16
or
xor
out
out
jae
sahf
out
sbb
sub
cltd
pop
subl
in
jno
pop
sbb
cmp
pop
roll
jb
std
adc
sahf
mov
ficomps
sub
inc
insb
mov
and
pop
mov
in
mov
les
movsb
das
outsl
test
jl
and
mov
push
ret
jne
mov
rolb
pop
adc
lret
mov
cmp
push
sbb
or
dec
add
enter
std
mov
mov
and
insl
jae
ret
les
push
adc
movntq
push
pop
push
push
mov
jmp
imul
push
cmp
shrl
fcmovnbe
cmp
in
adc
xchg
pushf
and
jo
push
and
mov
in
cmpsl
inc
dec
push
pop
or
pop
imul
mov
fldt
jecxz
mov
jo
push
out
pop
in
jg
daa
fs
lods
mov
pop
insl
jl
orb
pop
push
sahf
sti
int
std
sbb
push
cmc
cmp
cld
jne
sub
mov
sbb
pop
mov
push
mov
mov
sub
into
adc
add
fimull
and
test
pop
rep
xor
mov
lds
lods
lahf
andl
cwtl
ljmp
and
ds
xchg
sbb
scas
aam
mov
sub
jnp
shrl
jle
mov
adc
push
sbb
test
es
outsl
arpl
mov
movsl
fs
mov
mov
mov
push
dec
jp
cs
jb
xor
ljmp
push
clc
inc
cmpl
xchg
inc
sub
push
sbb
cmp
pusha
shrb
aad
mov
or
ret
and
imulb
aas
cmp
jo
push
stos
iret
out
test
daa
sub
test
fsubl
sbb
xorl
mov
pop
mov
jp
pop
repz
cmp
xchg
mov
jmp
jbe
push
cmp
cli
lret
xchg
sbb
mov
dec
sbb
popa
mov
xchg
fpatan
jns
popa
mov
jb
mov
sub
mov
sub
movsl
lret
sti
dec
jle
outsl
or
adc
arpl
je
add
fsubrl
cli
sub
aam
movsl
push
es
jmp
fmuls
add
scas
scas
mov
pop
jne
sbb
sub
mov
mov
aas
cmpsl
ret
inc
aad
inc
sar
adc
loopne
jns
inc
sbb
adc
test
lret
mov
push
cmpsb
into
and
ja
and
dec
and
cmp
out
js
push
movsb
arpl
mov
sbb
out
loopne
shlb
dec
test
push
mov
stc
hlt
or
mov
adc
in
mov
mov
sub
dec
push
cmp
mov
sub
fwait
sti
dec
fs
add
jl
int3
push
subl
daa
mov
cmpsb
ror
jnp
sub
or
nop
insb
xchg
mov
jb
jo
sbb
rcll
negb
aaa
roll
or
pop
lahf
les
inc
or
fcompl
and
push
xchg
fnstenv
rcrl
shll
add
sub
push
xor
dec
jns
gs
stos
mov
adc
xchg
mov
push
data16
je
arpl
mov
lods
jg
xor
mov
cmp
popa
not
outsl
sahf
ja
xchg
xor
mov
popf
sbb
inc
mov
jb
inc
inc
mov
not
pop
jne
mov
clc
xor
add
push
adc
into
lahf
iret
jl
push
repz
sbb
mov
xchg
repz
adc
dec
scas
jge
clc
sbb
jno
je
push
adc
jle
test
in
xor
ds
out
addl
and
lret
in
jbe
jb
cwtl
mov
cli
bound
mov
cs
cmp
dec
fwait
std
jo
sbb
ss
dec
fwait
cmp
jnp
sbb
out
dec
fwait
push
pop
push
pop
roll
xlat
push
mov
outsl
adc
sbb
int3
jge
gs
mov
decb
cli
pop
add
pop
or
mov
push
inc
enter
test
imul
sbb
cmp
mov
sub
ror
rcrb
adc
fisubs
imul
pop
sbb
dec
jne
cmp
jle
mov
stos
out
jne
lods
aas
ret
aaa
mov
popa
rolb
push
dec
ljmp
add
push
sahf
lods
lods
dec
or
pop
jg
or
or
nop
mov
dec
sub
addr16
in
or
mov
mov
aam
ret
popf
cld
dec
add
iret
lahf
fnstcw
stos
lcall
jno
clc
and
push
cwtl
stc
jl
xchg
and
aas
sub
ja
testl
ret
cwtl
scas
jmp
outsb
data16
sub
dec
mov
inc
test
iret
jmp
dec
pop
mov
aaa
adc
and
sub
jae
roll
in
push
xchg
popa
ja
jne
out
ds
xchg
push
pop
xor
and
dec
hlt
add
les
aad
mov
loopne
push
aam
rcl
out
inc
mov
mov
add
dec
push
lock
push
adc
rolb
sbb
add
xor
mov
xor
mov
push
push
push
push
call
push
push
jmp
add
lds
mov
call
cmovl
inc
mov
mov
adc
xchg
pushf
shrl
ret
js
jmp
xor
ja
test
jg
outsl
pop
outsl
push
fdivr
int
dec
and
xor
mov
in
jmp
std
shlb
lea
ret
adc
aas
lahf
lods
and
into
popf
push
aaa
aad
loopne
or
mov
jge
jge
adcb
addr16
sbb
mov
jecxz
adc
push
lods
clc
pushf
fs
in
xor
sub
into
sub
adc
test
shll
cmpb
daa
mov
ret
in
sti
insb
xchg
sub
push
adc
add
insl
fmull
shrb
in
push
add
mov
mov
insl
mov
pop
stos
mov
jb
adc
in
in
iret
pop
dec
jmp
test
imul
mov
mov
xor
inc
fistps
in
jo
std
mov
jge
jmp
sbb
test
pop
mov
adc
or
adc
leave
xchg
inc
adc
cmp
insb
xchg
aaa
add
test
iret
pop
or
adc
cmpsb
cmp
pop
in
dec
stc
sub
sub
das
aam
popa
inc
xlat
mov
shlb
cmp
jg
or
mov
add
push
sub
in
mov
xor
sti
jo
and
xchg
int
enter
ds
inc
fldcw
adc
and
xchg
ret
xchg
in
xor
cmp
jle
iret
ficomps
xor
xchg
inc
push
mov
out
mov
popa
mov
int
xchg
xor
test
xor
sti
pop
pop
add
jns
pop
sub
cmp
je
mov
cwtl
enter
xchg
call
js
sbb
mov
add
repz
pop
lods
ds
nop
int3
call
mov
sub
popa
pop
xor
ja
sub
xchg
or
daa
out
push
dec
cmp
xchg
pop
ret
mov
mov
call
pop
sub
or
call
push
or
in
aad
jg
mov
stos
int3
cmp
fstl
inc
xchg
mov
fwait
loop
shrb
mov
inc
push
outsb
ret
nop
xchg
je
ror
rcr
inc
cwtl
xor
xchg
push
jmp
adc
stos
or
mov
add
cltd
xlat
loopne
test
lods
dec
mov
fisttps
mov
add
mov
and
mov
xchg
in
push
jmp
scas
mov
or
out
or
addr16
cmp
hlt
mov
jecxz
and
sbb
mov
popf
and
xchg
mov
inc
in
mov
jle
call
popa
pusha
aaa
dec
lods
and
pushf
popa
mov
shr
jmp
jae
out
push
pop
imul
and
mov
pop
inc
lds
sub
in
xchg
sbb
mov
popf
dec
xlat
lret
insl
add
jmp
sti
lock
inc
movsl
xchg
gs
sysret
inc
test
fldcw
dec
js
jno
or
mov
sahf
cli
push
mov
mov
aam
jmp
mov
jmp
pop
jmp
or
sbb
sub
mov
push
sbb
jbe
mov
popa
movsl
mov
cltd
cmc
lret
inc
push
lods
jge
xchg
add
in
imul
out
stc
insl
ret
ret
cmp
add
adc
and
sbb
jae
scas
jl
pop
pop
inc
mov
cmc
push
inc
std
pop
dec
bound
or
add
dec
out
jbe
mov
mov
mov
jnp
jecxz
das
mov
insl
dec
bound
ss
out
mov
pop
shlb
dec
clc
je
out
sbb
jns
mov
xor
icebp
lret
push
push
rcll
sahf
iret
sahf
fs
cmp
mov
lock
xchg
pop
imul
ja
jp
push
push
je
pop
imul
pop
ret
ja
mov
pop
sub
fwait
jae
add
jmp
push
imul
cmp
inc
sahf
add
adc
xchg
lahf
jns
hlt
add
insl
sbb
mov
enter
popl
and
addr16
cmpsb
outsb
push
push
sahf
mov
mov
lret
adc
aad
daa
dec
enter
test
xlat
subb
out
cmpsb
xlat
cmp
push
sbb
movsl
mov
jae
or
out
push
in
dec
fcoml
aaa
pop
cmpsl
cltd
jae
mov
inc
dec
mov
lahf
lock
mov
insl
xor
jp
fucomp
popa
pop
xor
mov
insb
jp
sub
xchg
sti
jmp
lea
jno
out
ljmp
and
mov
nop/reserved
push
push
cmpsb
repnz
imul
iret
and
mov
xor
loopne
loop
movsb
or
enter
in
inc
dec
sub
stc
mov
sbb
fldlg2
cmp
adc
mov
add
ret
repnz
test
std
subb
enter
icebp
jecxz
loope
adc
iret
stc
cmc
xorl
outsb
into
test
mov
clc
pop
sub
lds
jmp
call
fdivr
das
or
xor
jecxz
sti
bound
pop
jmp
sbb
sbb
clc
hlt
out
add
out
paddb
out
inc
push
cmp
cmp
adc
push
mov
jecxz
jecxz
ds
imulb
int
mov
dec
rorb
sbb
xchg
sti
rcrb
test
inc
stc
movsl
cwtl
jl
or
pop
fwait
test
and
cwtl
or
push
inc
test
mov
ret
dec
dec
mov
aas
xor
sub
add
jae
mov
mov
nop
fiadds
imul
rcrb
cmp
mov
push
mov
mov
push
dec
mov
arpl
pop
incl
push
mov
adc
in
inc
leave
push
test
pop
rclb
cmpsb
pop
arpl
sahf
js
outsb
insb
or
cmp
outsl
mov
mov
mov
int
hlt
cld
mov
add
jo
repnz
cmp
mov
jnp
push
sbb
sbb
lods
mov
das
icebp
dec
outsb
das
cmpxchg
ret
mov
add
push
jmp
xlat
adc
jnp
xchg
scas
mov
aad
adc
or
arpl
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
bswap
repz
jle
mov
and
or
into
rcrl
rep
gs
cwtl
test
bound
call
lods
mov
ja
hlt
xlat
jne
int3
adc
fldt
js
or
test
rorb
lret
repnz
mov
dec
mov
push
ljmp
pop
adc
inc
jbe,pn
bound
sbbb
js
jmp
sub
arpl
cmpsb
fdivr
mov
and
mov
js
icebp
addb
mov
xor
mov
cs
das
inc
inc
adc
sub
add
cmp
cld
adcl
sbb
js
cwtl
lcall
fwait
cli
xor
pop
xor
xchg
xchg
popa
fiadds
nop
fmuls
fdecstp
add
dec
dec
xchg
pop
pop
mov
lds
xchg
pop
mov
ds
iret
dec
pop
leave
mov
iret
mov
inc
leave
daa
jbe
lea
aam
ja
arpl
sbb
icebp
enter
pop
ficompl
sub
rcrb
add
repz
popf
and
cmc
jp
mov
lods
adc
outsb
das
sbb
xor
and
ljmp
push
xor
ret
push
mov
imul
popa
mov
mov
pop
cmp
daa
xchg
adc
xor
push
idivb
nop
sbb
adc
adc
shl
dec
cmpsb
test
mov
fs
add
xor
gs
insl
daa
ret
mov
lahf
mov
lock
pop
cmp
push
pop
push
or
adc
aam
xchg
fistpll
mul
orb
repz
xchg
std
inc
loope
gs
rcrl
jne
adc
sub
popf
push
jecxz
fdivs
xor
jbe
out
sub
jle
inc
fs
orl
pop
jne
mov
dec
popa
cmpsb
mov
push
js
fwait
mov
loope
adc
mov
lods
lods
inc
cmpsb
and
add
cltd
sbb
pop
jns
test
and
jecxz
icebp
jns
std
psraw
dec
xor
subl
adc
mov
es
xor
xchg
cmp
std
cmp
xlat
mulb
arpl
sub
pop
fildl
loop
ss
leave
mov
sti
addr16
fsubp
loop
cmp
pop
int
dec
aas
inc
cltd
das
test
ret
outsl
add
xchg
pop
mov
jae
imul
cmp
shlb
pop
pop
xchg
scas
hlt
loop
je
clc
fwait
pop
sub
shufps
mov
push
lahf
and
pop
adc
jne
xchg
add
sbbl
bound
jae
and
xor
or
or
sbb
cli
push
mov
and
inc
push
fldt
jbe
mov
push
mov
pop
pop
mov
ret
dec
in
insb
jl
nop
jg
push
sbb
std
jno
inc
sahf
jmp
inc
mov
xchg
xchg
xchg
mov
daa
jae
outsb
and
or
std
divl
sub
xor
mull
or
jmp
cmp
mov
and
sub
mov
inc
and
insb
mov
dec
shll
popf
jge
jmp
lahf
clc
inc
mov
jmp
enter
pushf
leave
cmpsl
sbb
daa
outsb
test
sti
loope
mov
xor
jb
and
jp
push
fmull
mov
adc
add
outsb
mov
lock
and
cmpsb
daa
pushf
jo
nop
std
push
cmp
shr
inc
les
das
xchg
in
sbb
std
cmpsb
jns
sub
shrl
sbb
fsubr
add
cmp
icebp
jns
mov
mov
push
xor
outsl
das
mov
inc
add
pop
cmp
shrb
out
push
bound
nop
fisubrs
out
xchg
dec
scas
rorb
xlat
fisttpl
dec
mov
pusha
xchg
outsb
and
or
sti
mov
xchg
insb
cmp
xor
mov
or
pop
stos
repnz
outsl
and
dec
andb
sbb
push
xor
insb
adc
sub
outsb
stos
sbbl
xor
mov
add
sub
lods
cld
sbb
data16
bswap
inc
push
xchg
nop
push
jle
rolb
call
int
xor
push
in
jmp
ret
fstps
sbb
or
sbb
into
std
jns
ss
sbb
xor
lcall
jge,pt
pop
nop
mov
shrb
jecxz
cli
pop
bswap
out
and
mov
push
movsl
push
orl
movsb
pop
add
dec
push
cmp
in
repz
mov
dec
mov
pop
push
sarl
sub
loope
jne
xchg
jbe
ja
mov
jge
mov
iret
test
lods
jle
fbld
inc
jo
push
fistpl
das
jbe
js
test
and
sub
cmp
jnp
mov
test
fcmovb
repz
sbb
out
sub
movsl
jecxz
and
fistps
or
mov
test
push
stos
sarb
cld
add
out
insl
popw
add
mov
es
popa
test
inc
mov
enter
lahf
and
xchg
pmaxub
or
rcrb
cmp
push
lret
or
or
in
fidivs
scas
dec
xchg
and
icebp
xor
push
je
push
out
and
roll
arpl
mov
push
dec
add
pushf
adc
inc
fisubrl
lahf
mov
xchg
sti
out
movsl
fmuls
scas
mov
xchg
and
xor
or
lods
inc
dec
ret
push
mov
lods
dec
ret
adc
jae
xchg
lock
push
aaa
dec
ret
repnz
sbb
ss
lret
pop
arpl
aaa
add
into
mov
jnp
jecxz
into
push
mov
repnz
jl
int
fwait
out
mov
mov
cmp
movsl
adc
cmp
sub
in
jbe
cld
in
inc
popa
rol
movsl
jb
enter
inc
in
movb
movb
cmpl
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
sti
jno
xchg
loope
invd
add
pmaddwd
cli
sahf
jle
push
cmpsb
jg
and
fsubrs
and
push
xor
xor
jle
xor
aaa
lods
stos
cli
stos
faddl
xor
ja
cmpsl
pop
fldt
xchg
push
cmp
addr16
cltd
fsubrp
subb
xchg
stos
xlat
push
mov
dec
xor
inc
cwtl
nop
jge
scas
fs
push
lods
adc
cld
arpl
jbe
sub
or
push
aam
inc
and
push
popa
mov
sub
imul
push
fsubs
cld
mov
xor
loopne
push
xor
dec
dec
jns
movsb
pop
push
add
subl
jbe
adc
mov
repnz
pop
sbb
mov
jns
sbb
pop
out
push
push
aam
add
lods
pop
and
push
jp
ret
fmulp
stc
dec
mov
cmc
add
ficoml
mov
movsl
cmpsb
in
stos
dec
arpl
add
push
fstl
xlat
or
sub
mov
rorl
lds
imul
sahf
testb
cmpsb
xchg
cmp
push
and
lret
dec
rolb
ds
sbb
adc
cmp
movl
mov
movsl
cmpsl
lea
sti
lds
xor
dec
push
pushf
pusha
testl
cmp
mov
lahf
mov
and
push
xchg
mov
stos
in
das
add
in
addr16
jle
inc
movsb
outsl
mov
inc
pop
es
pop
in
xchg
stc
sahf
jae
and
jo
out
cmp
xlat
cmp
sti
push
and
in
xchg
and
pop
mov
sbb
xlat
mov
sbb
sbb
sbb
out
loope
es
and
repz
cmp
inc
mov
sub
mov
jge
mov
push
push
cmp
jg
mov
rcrl
pop
xchg
jmp
jecxz
pop
mov
add
inc
hlt
ljmp
or
jns
lock
fiaddl
cmp
cmp
bnd
pop
aaa
sbb
mov
xor
lods
and
and
push
aas
xchg
jle
mov
outsb
push
into
addr16
or
mov
pusha
xor
adc
jb
xor
addb
cli
mov
loopne
imul
sub
inc
insb
repz
xchg
fbld
sub
push
subb
xchg
push
fimull
loope
movsb
ja
and
popa
jbe
sub
sbbb
mov
outsb
push
inc
xchg
fs
sub
jmp
and
xchg
add
add
inc
xorb
mov
sub
add
cltd
or
call
stos
fs
testb
add
jmp
ret
sub
aam
push
daa
mov
adc
mov
sub
push
cwtl
lcall
lret
nop
pop
pusha
das
cmp
in
aaa
mov
pop
or
sub
mov
xchg
sub
ja
cmp
test
sti
ficoms
push
mov
in
lret
dec
out
rol
add
outsb
xchg
xchg
lcall
adc
inc
aaa
mov
pop
dec
inc
mov
sub
or
pusha
or
adc
testl
mov
sti
int
dec
lret
mov
sbb
fdivs
sbb
sbb
sub
daa
xlat
fs
loopne
pop
popa
and
sbb
mov
js
ja
or
lods
test
arpl
mov
movsb
fld
push
in
mov
gs
stc
pop
cmpsl
dec
cmovo
jne
mov
popa
aas
aas
and
dec
cmpb
dec
and
cwtl
cmp
jl
iret
js
in
lret
andl
sub
mov
addr16
js
rorb
sub
add
inc
fwait
add
addr16
inc
aaa
push
enter
loopne
dec
or
bound
dec
inc
push
shll
test
mov
sbb
pop
aam
sub
stc
stos
push
fdivrl
adc
push
inc
mov
add
nop
inc
cmpl
mov
xlat
iret
mov
test
xor
das
cs
hlt
dec
aad
je
mov
aad
push
or
xor
push
clc
pop
xchg
fdivs
xchg
jge
repnz
mov
pop
pushf
in
fdivs
lods
pop
inc
push
cwtl
imul
push
dec
jecxz
lods
pushf
push
xchg
push
sub
jmp
clc
adc
scas
adc
cmpl
cltd
dec
add
lcall
cld
or
xchg
test
adc
adc
xor
adc
mov
das
lcall
sbb
dec
dec
push
in
xchg
mov
mov
sbb
cmpsb
mov
xor
xor
mov
push
push
jl
jo
push
jge
pop
add
repz
lods
popa
andl
repz
pop
jnp
data16
dec
rorb
fst
xchg
xchg
es
push
push
in
insl
push
mov
dec
inc
push
jne
ret
cmp
mov
ret
insb
or
sbb
pop
xchg
dec
mov
mov
mov
mov
jo
inc
inc
pop
pop
or
cmp
outsb
sub
mov
lods
call
sahf
fcom
cmp
gs
mov
sub
push
ja
dec
mov
sub
or
add
repnz
xchg
mov
and
stc
pop
mov
pop
push
hlt
jp
push
lock
mov
jbe
lahf
shll
cmp
xchg
lahf
pop
hlt
jno
cmp
dec
cwtl
insb
inc
xor
std
add
loope
xchg
inc
lcall
pop
leave
pop
add
out
lret
call
push
sub
out
das
jl
fdivr
jae
loope
jmp
add
aaa
inc
inc
add
roll
movsb
pop
add
mov
subl
and
movl
jmp
mov
hlt
add
sbb
mov
invd
add
subps
loope
cmpsb
cmc
cmpsl
repnz
xchg
mov
sbb
ljmp
dec
adc
cli
stos
mov
jnp
stc
xchg
jl
push
iret
lds
mov
out
xchg
pop
add
ja
pop
xor
xor
jne
push
jno
je
popf
mov
xchg
dec
cmpl
xor
int3
fs
jl
mov
cs
xchg
inc
mov
push
mov
xlat
rorb
inc
imul
xor
xchg
xor
rcrl
xorb
pop
push
adc
jmp
fimull
or
push
jno
repz
xchg
cs
add
mov
dec
rorl
clc
adc
adc
push
stos
sub
lds
fwait
push
enter
pop
ret
and
inc
mov
sbb
dec
mov
out
add
xchg
push
push
inc
cmpsb
add
pushf
movsb
pop
test
inc
xchg
xor
inc
pop
fldl
add
cmp
lods
test
repz
dec
cwtl
cs
xor
and
xchg
fbld
imul
sub
jecxz
push
enter
rcrb
inc
sti
loope
outsb
lods
and
rcrb
faddl
or
iret
inc
mov
fistl
stos
add
or
fimuls
mov
clc
push
dec
xchg
mov
popf
xchg
call
mov
xor
push
repnz
xchg
arpl
out
jne
or
pop
aam
pop
mov
cmp
fsubs
test
sbb
lock
sbb
add
ljmp
daa
aaa
call
jno
inc
stos
cmp
sti
push
enter
pop
fsubr
push
push
dec
jge
mov
cmpsl
jbe
outsb
xchg
movsb
lret
adc
fwait
nop
sub
leave
or
lret
pop
std
push
imul
shl
jg
std
and
jbe
or
pop
cmp
and
cmc
and
fsubr
in
cmp
add
in
xor
jl
inc
push
addr16
fs
cmp
popf
pop
pop
std
push
and
cli
adc
pop
imul
and
out
xchg
and
nop
xor
cmc
das
mov
adc
mov
mov
pushf
adc
push
xchg
and
subb
ret
xchg
and
test
fistl
js
mov
mov
add
adcl
jns
or
xchg
push
or
lds
pop
xor
and
inc
adc
jle
adc
xor
mov
cmpl
pop
mov
sbb
adc
divb
daa
mov
enter
push
loop
lahf
insb
rcrl
inc
dec
xor
add
mov
push
mov
ljmp
lret
les
push
mov
inc
sub
subl
fcmovnbe
je
fadds
xor
mov
mov
dec
ret
and
dec
nop
rorl
xlat
or
sub
pop
and
int
cmp
pop
loopne
and
shr
in
xor
adc
mov
inc
push
sub
test
lcall
scas
out
jnp
xchg
test
out
cmp
int
mov
add
mov
cmp
add
push
iret
sar
shr
or
mov
imul
test
inc
popf
es
inc
mov
and
and
push
data16
sub
xor
ret
aam
and
fstps
cmp
adc
xchg
es
ret
inc
ficomps
arpl
sbb
mov
ljmp
cmp
ret
pop
xchg
or
inc
ja
xor
shlb
call
iret
fwait
cmp
movsl
gs
add
xchg
jnp
rorl
or
sub
insl
mov
divl
mov
mov
les
push
out
lahf
loope
inc
mov
jmp
cli
xlat
cmp
add
pop
inc
and
hlt
pushf
cmpsl
add
inc
sbb
shll
or
fwait
adcb
outsl
mov
inc
pop
addl
test
xor
and
or
mov
sahf
mov
imulb
mov
insb
popa
test
xchg
jb
into
das
sub
std
xor
addr16
imul
jg
outsl
test
jbe
test
sub
and
xchg
adc
pop
pop
cmp
je
mov
xlat
in
mov
divl
pop
pop
cltd
jle
jbe
sbb
mov
pop
cwtl
cmp
int3
aam
stos
popa
inc
xchg
aam
std
lds
xchg
jg
test
sbb
rorl
mov
shrb
and
sub
decl
jp
xchg
dec
sahf
dec
jecxz
pushf
popa
les
xlat
iret
xor
movsb
sbb
mov
xchg
test
inc
out
aad
ljmp
andl
xchg
add
out
add
bnd
rorb
lods
das
jmp
gs
repz
fsubrl
es
cltd
and
sub
in
xchg
dec
fmul
adc
imul
cld
sahf
xor
test
push
dec
add
inc
or
inc
sahf
push
rcll
jns
sub
ret
fdiv
pop
scas
pushf
frstor
add
mull
aad
mov
sarl
lahf
cld
ja
push
int
lods
jl
push
push
and
mov
xlat
xlat
scas
mov
xchg
out
icebp
xlat
icebp
and
xor
lods
sbb
dec
xchg
cmp
adc
popl
or
fists
jne
mov
push
fwait
in
push
mov
pmulhuw
dec
jb
in
adc
cmp
inc
std
or
adc
das
test
pop
aad
mov
pop
js
cmp
test
and
or
mov
xchg
nop
xchg
test
ljmp
mov
push
pop
out
dec
out
cmp
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
movaps
aad
das
cmp
dec
adc
repz
or
int3
jmp
mov
fiadds
mov
fdivrs
mov
cld
or
fisttps
outsl
mov
movsb
setae
mov
cmp
push
or
lcall
cmp
dec
xchg
mov
xor
inc
xchg
in
mov
and
mov
jp
rcll
aaa
dec
test
xchg
rcll
inc
out
cmp
adc
jecxz
dec
mov
les
scas
jmp
into
sub
fsubrl
pop
mov
dec
push
ret
mov
jp
daa
mov
pop
jge
jg
popf
lahf
loop
jne
dec
add
dec
push
add
fcomps
xchg
dec
mov
inc
xor
adc
lret
in
aam
mov
and
and
cs
leave
insb
leave
add
add
xchg
xchg
hlt
dec
cmpb
not
jb
add
into
std
jg
std
aad
jne
jle
loope
mov
dec
imul
mov
or
in
cltd
hlt
jno
fimull
sbb
jns
mov
jle
fisttps
hlt
lret
lahf
lods
mov
mov
int
xor
adc
pop
cld
pusha
loopne
popa
cli
stos
dec
push
push
loope
add
push
and
cwtl
xor
adc
sbb
aas
cli
fidivrs
out
sub
fstpt
pop
adc
in
inc
pop
cmp
scas
cmpsb
push
aad
fcompl
lret
mov
mov
sub
and
pop
mov
mov
roll
fisubl
mov
fistpl
jp
dec
mov
icebp
call
inc
add
mov
sbb
push
lahf
lea
inc
fdivs
sub
repnz
ficomps
testl
and
aam
push
lcall
icebp
popa
test
add
insb
mov
mov
int
and
or
rcl
push
xchg
mov
popa
sbb
mov
xchg
mov
or
repnz
test
loope
mov
dec
push
sarl
mov
fdivrl
mov
xchg
fdivs
adc
cmp
int
push
lahf
cmc
jmp
in
fistps
ja
xor
jb
stos
iret
in
jmp
mov
into
inc
jns
jge
jp
jle
js
cmpsb
adc
mov
sbb
js
es
lret
lods
gs
mov
out
jmp
inc
xor
ds
adcb
lcall
or
out
lret
in
xor
negb
or
mov
repz
lea
push
mov
sub
dec
imul
negb
movsl
testl
adc
cmp
push
test
movsl
sahf
daa
jns
push
les
aam
adc
pop
cmpsb
jo
cltd
push
orb
lods
fwait
pop
mov
int
daa
sbb
xor
mov
loope
pushf
push
test
lcall
and
lahf
scas
mov
xor
aad
pop
out
mov
jno
and
mov
dec
and
mov
shlb
bound
dec
or
sarl
jmp
xlat
mov
test
je
in
stos
jle
cmpsb
mov
pop
sbb
jg
jmp
adc
jle
sahf
cmpsl
out
and
cwtl
das
sbb
mov
add
pop
xor
mov
mov
jno,pt
or
xchg
aas
std
das
pop
or
stc
push
mov
in
inc
stc
stos
sbb
push
cltd
mov
adc
pop
pop
adc
lock
sub
stos
insl
in
repz
fsin
or
or
pop
popf
push
fs
cmp
adc
ljmp
sbb
mov
inc
fadd
int
outsb
pop
push
stc
adc
mov
popf
pop
push
rol
iret
shlb
aam
or
in
std
cmpsb
xor
in
imul
call
fwait
cmovnp
loope
fcoms
pop
jae
jecxz
xchg
movsb
xor
dec
pop
aam
scas
jae
cmpsl
jle
lcall
lea
or
js
add
dec
jmp
xchg
and
pop
xorb
mov
sub
popa
pop
fsubl
fcomps
mov
xor
in
fwait
jo
daa
btr
sbb
adcl
dec
or
int3
adc
test
adc
inc
gs
adc
mul
sbb
mov
adc
in
inc
aaa
xchg
call
cli
lea
sub
push
sub
mov
sahf
ja
scas
xchg
cmp
loop
xchg
inc
adc
jmp
enter
jmp
popl
addb
jp
add
adcl
repz
push
icebp
aaa
loopne
lods
xlat
add
dec
dec
jle
loopne
inc
sub
popf
and
xchg
pop
lret
sbb
sub
cmpsl
jp
rcrb
and
sbb
int
bound
xor
repnz
int
inc
lock
or
out
in
in
das
pop
inc
ret
dec
lcall
movsl
mov
mov
inc
in
push
mov
mov
leave
pop
or
jo
push
inc
test
mov
fadds
dec
jmp
push
mov
jb
sti
jle
out
je
push
movsb
sub
aad
xchg
lods
push
push
cwtl
mov
mov
jecxz
xchg
add
dec
lcall
add
cmpsl
pop
push
clc
nop
inc
mov
xchg
xorl
lea
cmpl
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
push
xor
dec
cwtl
test
movlps
jnp
lods
sbb
mov
xchg
inc
xchg
xchg
sbb
mov
loope
bound
mov
aam
mov
aam
and
adc
lock
and
mov
jmp
sti
mov
sub
inc
jo
push
lods
push
cmp
cmp
fnsave
outsb
pop
adc
or
shll
sub
push
xchg
cmp
js
xor
xchg
mov
mov
rol
pop
pop
push
mov
clc
cmp
pop
jno
cmp
notl
and
mov
jmp
movsb
cli
idivl
scas
xchg
sub
decl
insb
stos
inc
inc
lods
iret
inc
xlat
movsb
arpl
push
push
mov
outsb
xchg
sbb
adc
dec
out
mov
inc
aaa
dec
cs
cmp
mov
lods
mul
imul
sti
andl
and
jmp
jne
cmp
nop
pop
xchg
js
jnp
fiadds
mov
pusha
mov
sub
fdiv
push
hlt
dec
cs
mov
repz
push
mov
cld
mov
inc
add
movb
mov
jge
adc
mov
test
mov
mov
dec
repz
cmpsb
pop
add
add
inc
fidivs
jbe
les
jno
xchg
outsb
imul
sbb
push
dec
repnz
pop
mov
push
std
push
test
faddp
cmp
dec
mov
sbb
je
int
sub
jns
mov
aam
and
shlb
hlt
pop
int
mov
decb
cmp
mov
outsl
movl
xchg
loopne
cwtl
das
xor
pop
lret
or
push
push
xchg
xor
jno
cld
xchg
add
and
xchg
js
je
push
adc
push
jo
sti
dec
xchg
lahf
or
sbb
in
jge
jo
scas
add
jb
jl
sarb
sbb
es
pop
sub
sarb
pop
mov
fisubs
jnp
lock
mov
cmp
loop
popf
shrb
ja
test
sbb
aaa
js
icebp
adc
lock
stos
loopne
movsl
jl
sarb
add
mov
out
repz
xor
cmpsb
sti
pop
insl
hlt
dec
mov
adc
xor
js
scas
insb
in
lcall
push
pop
mov
jg
pop
adc
push
fmull
cmp
pop
xor
mov
les
mov
lods
je
loope
adc
sahf
mov
in
rolb
call
fcoms
jmp
mov
sarb
pop
mov
push
aaa
sub
mov
adc
inc
aad
adc
inc
loope
test
mov
in
leave
sub
jge
ja
cmc
xchg
loope
add
aaa
push
ret
pushf
add
aad
dec
mov
jo
negb
outsb
mov
loop
lods
popa
enter
and
push
outsb
pop
mov
popa
popf
jo
inc
dec
inc
jbe
lea
cmp
dec
shrb
mov
insb
jno
hlt
sub
and
adc
adc
fistps
dec
shlb
div
outsb
add
pop
rol
lahf
cwtl
int3
xchg
push
lahf
out
cmp
inc
push
push
out
or
bound
mov
xchg
hlt
out
inc
sub
jns
arpl
pushf
cmp
mov
fidivl
insl
fucomp
dec
jnp
xchg
sub
lds
push
pusha
dec
cmp
add
orl
xor
inc
clc
test
or
pop
leave
icebp
popf
pushf
mov
push
aas
jmp
in
int
adc
les
pop
ljmp
aad
jl
xchg
pop
aam
roll
or
xchg
push
icebp
fsubrs
adc
test
lock
push
clc
cmp
out
jp
mov
imul
mov
or
stc
stos
outsb
or
cmpsb
cltd
rcrb
pop
inc
fidivrs
add
push
cld
add
push
stos
lahf
mov
jb
sub
mov
js
or
movsb
pushf
clc
inc
lcall
lds
xchg
iret
clc
pop
or
inc
fiaddl
xchg
and
cmp
sti
pop
pop
stos
and
loopne
test
notb
in
lea
jo
xchg
call
cwtd
xor
jo
sbb
mov
add
out
dec
xchg
test
add
int
mov
mov
ss
das
jno
add
fbstp
incb
xchg
mov
sti
xchg
fldenv
rep
clc
push
sarl
lcall
inc
mov
sub
xor
mov
xor
xchg
cmp
sub
lret
inc
test
or
roll
icebp
sbb
mov
test
jb
jnp
and
hlt
sarl
into
pop
sub
add
pop
and
cmpsb
push
sarl
in
cmc
push
or
xchg
push
insb
aas
mov
shrl
push
out
pop
pop
scas
xorl
jno
cmp
test
sbb
insl
dec
lods
mov
pop
jo
lahf
add
pop
lahf
aad
cmpb
mov
loope
incl
loop
dec
mov
and
push
outsb
lock
lods
test
add
popa
mov
arpl
cmc
or
pop
add
rorl
jbe
and
and
jno
xchg
test
loope
add
mov
mov
mov
jecxz
add
mov
xchg
or
outsl
cltd
dec
ficoms
push
js
fs
shrl
push
dec
daa
loope
sahf
inc
pop
push
inc
lea
nop
sub
pusha
dec
jno
push
roll
or
std
dec
mov
enter
subl
repnz
mov
mov
loop
jb
dec
divl
int
inc
mov
cwtl
or
mov
es
sub
scas
mov
or
sub
inc
jns
int
stos
ficompl
pop
idiv
jmp
mov
xchg
mov
idivb
scas
popf
invd
add
sete
ret
mov
mov
push
in
cwtl
shll
dec
repz
mov
or
sub
sbb
push
cmp
jp
jle
repz
sbb
lret
mov
mov
rorl
pushf
cmc
push
mov
or
pop
and
mov
push
pop
aaa
in
mov
stos
cli
xchg
jmp
cmpl
add
push
call
ja
les
repnz
push
cmpsl
sub
call
mov
xchg
dec
insb
or
into
lcall
sub
scas
inc
add
cmp
mov
ret
jns
call
cs
push
bound
mov
lret
hlt
movq
iret
or
push
mov
mov
movsb
dec
scas
outsb
push
sbbb
mov
dec
pop
loop
cmp
icebp
jp
in
fisubl
icebp
lds
int
jb
notl
roll
ljmp
das
jecxz
jp
adc
and
fucomp
push
jl
mov
pop
test
xor
sbb
xchg
dec
outsl
cmpl
inc
mov
cmp
pop
cmp
loop
mov
jne
shl
js
mov
jns
inc
incl
addr16
push
cld
test
sbb
xchg
xchg
test
and
inc
pushf
aas
jmp
inc
push
rclb
in
fisttps
push
call
and
decl
dec
push
subl
sbb
push
add
add
dec
xchg
xchg
outsl
pop
push
sti
pusha
mov
rcl
loop
test
or
mov
mov
daa
subb
dec
call
jbe
jecxz
xchg
lods
rclb
cs
psadbw
or
jae
xlat
bound
inc
shl
subb
push
andb
leave
push
cs
loop
or
test
pop
fimull
lret
jne
sbbb
push
bound
lahf
popa
call
adc
sub
mov
mov
popa
jge
into
cmp
mov
sbb
add
out
push
clc
push
xor
mov
sahf
jge
loop
sub
int
xlat
push
out
data16
xchg
push
test
xchg
cltd
std
je
aam
and
dec
jb
lods
push
lret
repnz
lret
shll
cs
inc
aas
push
je
sbb
pop
mov
cmp
dec
jb
jecxz
std
jnp
pusha
aas
sub
mov
cmp
adc
and
add
inc
subb
dec
lods
icebp
insb
insl
jnp
push
enter
sub
lods
mov
pop
cli
ds
test
xor
or
in
inc
xchg
adc
and
imul
fdiv
or
sbb
lea
cwtl
arpl
mov
add
pop
jae
cmp
sub
bound
add
mov
popa
es
lahf
xchg
mov
ret
mov
jo
mov
xor
faddl
dec
pop
pop
mov
xchg
mov
pushf
inc
stos
call
insb
dec
pop
inc
shrb
lahf
js
roll
inc
jnp
scas
int3
fisttpll
imul
es
sub
sbb
mov
movsl
notb
jg
push
dec
arpl
lahf
and
test
mov
pop
jb
xor
jae
jl
xor
ja
fs
xchg
pop
pop
pop
fldl
inc
lds
xor
cmp
xchg
xchg
repz
ja
pop
jp
lret
lock
jb
clc
push
adc
outsb
and
or
out
inc
ja
pop
icebp
sub
and
xchg
cwtl
push
fs
pusha
mov
pop
xor
xchg
xchg
lods
add
jl,pn
adc
dec
fdivp
ja
cmp
aas
ljmp
adc
aam
jecxz
adc
jmp
cmp
lods
mov
sub
aad
inc
fcompl
xchg
xor
andl
pop
xorl
stos
ret
xchg
add
test
or
nop
xchg
push
xchg
mov
mov
mov
xor
in
nop
push
adc
fstps
rclb
in
mov
push
push
cmp
adc
xor
sbbb
cmpb
stos
or
les
add
jp
scas
push
and
js
dec
negb
scas
pusha
adc
mov
and
call
inc
aas
sub
test
or
inc
pop
pop
add
and
adc
jae
movzbl
aad
sub
imul
adc
jno
rorb
or
nop
adc
mov
and
movsl
fs
cmp
fnstsw
div
push
leave
movsb
xor
and
cmp
push
or
xchg
and
dec
cmp
dec
loope
and
xchg
iret
loopne
sub
rorb
or
sub
mov
idivb
pop
and
pushf
and
cmp
or
icebp
cmp
cmp
std
and
or
mov
es
add
sub
jne
adc
lcall
pop
stos
shrb
and
cmpb
rorl
mov
sub
mov
sbb
mov
pop
mov
fwait
mov
mov
les
repz
lds
imul
pop
pop
stos
movsb
jmp
popa
adc
pop
into
faddp
cwtl
mul
cli
movsl
addb
sahf
add
pop
jge
mov
shr
cs
and
add
adc
push
std
and
xor
repz
lock
aad
popa
jg
xchg
into
test
jecxz
inc
add
cmp
fcomps
mov
sti
lds
mov
rorb
das
push
and
push
rclb
push
stos
xchg
outsl
mov
gs
sbb
cmp
sete
mov
mov
cmc
movb
movb
mov
andl
jmp
dec
mov
aaa
es
mov
xchg
add
paddusw
and
xchg
inc
cmp
das
adc
mov
push
fs
sbb
sub
adc
movsl
sar
int3
xor
or
shlb
out
fs
shlb
rcrb
arpl
inc
loop
fisubl
mov
cmc
fs
mov
dec
lcall
gs
les
int
push
jmp
pusha
pushf
pop
dec
push
xchg
xchg
out
jae
dec
dec
mov
add
mov
pop
mov
call
jp
adc
or
mov
sahf
adc
add
sub
js
mov
stc
dec
je
or
sbb
gs
imul
and
ljmp
inc
es
into
mov
cmp
scas
loop
adcb
mov
pop
xchg
lock
mov
jb
repz
or
or
sbb
ljmp
test
xchg
out
push
push
xchg
and
lcall
mov
sub
cmp
test
fadd
enter
xchg
pop
sub
je
mov
bound
push
or
xor
std
push
pop
pop
lods
mov
adc
adc
mov
mov
and
add
iret
es
es
push
ja
out
gs
loop
sbb
and
jae
xor
ficoms
dec
mov
repz
testb
fsts
adc
mov
jl
fs
enter
xchg
xchg
loope
mov
cs
iret
jp
sarl
dec
sbb
int3
aas
into
lock
outsb
ds
dec
in
pushl
inc
pop
mov
mov
lar
sub
push
cltd
mov
mov
shrl
xchg
sub
aas
push
negl
pop
ja
jnp
or
cli
enter
and
test
push
loope
into
fdiv
outsb
stos
xor
shrl
xor
push
lret
into
mov
jecxz
jmp
mov
mov
push
mov
dec
xor
lds
cmpsb
xchg
or
inc
sahf
int3
or
xor
mov
push
cltd
or
movsl
add
movl
xor
pop
cwtl
jmp
or
pop
sahf
inc
sbb
popf
dec
sbb
mov
xchg
loopne
mov
dec
adc
bound
clc
scas
into
popf
add
out
mov
cmp
inc
stos
add
scas
lahf
test
mov
test
xor
out
jg
stc
push
cmpsb
adc
jmp
add
jns
ja
mov
loopne
add
mov
or
ficomps
adc
out
add
mov
ffreep
addr16
mov
insl
inc
jle
cmpsb
loope
or
ds
xchg
mov
or
adc
push
mov
inc
add
push
js
in
or
fwait
icebp
cmp
xchg
adc
push
jp
add
cmp
popa
jbe
and
scas
int3
das
and
stc
movsl
xor
loope
sbb
mov
dec
pop
fnstcw
and
push
jae
mov
xor
jnp
scas
sahf
jg
jo
xor
pop
xchg
dec
add
jbe
push
aaa
rcll
lea
pop
or
int3
mov
fldl2e
dec
or
cli
push
rorl
outsb
js
push
arpl
adc
xchg
loop
push
pop
int3
cmc
in
leave
mov
mov
cltd
xchg
mov
imul
hlt
and
rcl
adc
out
lods
imul
xlat
xchg
test
jecxz
outsl
insb
mov
pop
push
out
push
out
add
adc
lods
pop
fnstenv
dec
dec
jnp
fisubs
push
icebp
ja
jp
sbb
push
cmp
insb
and
xor
jle
sti
dec
lods
lock
movsl
xor
xor
jp
ret
aad
mov
lock
cmpsb
imul
mov
roll
inc
call
mov
add
sbb
mov
data16
arpl
mov
xchg
mov
shll
adc
push
shlb
adcb
std
cmp
dec
add
dec
jb
aad
fs
lcall
adc
jo
imul
mov
fnstcw
cmpl
xchg
int
fists
test
push
jp
repz
jno
cmpl
ret
jmp
nop
outsb
push
and
lock
mov
ds
jnp
or
mov
pop
pushf
dec
xchg
xchg
jmp
push
movsl
roll
in
imul
inc
outsb
rcrb
ja
push
pop
inc
mov
mov
sbb
scas
xorl
dec
mov
out
mov
xchg
pushf
out
cltd
add
inc
stc
jle
nop
pop
jbe
int3
popa
inc
push
pop
mov
sub
call
xchg
repz
add
lea
mov
push
adc
pop
clc
fidivs
xchg
mov
lcall
test
imul
sub
int3
push
adc
add
pop
xor
loop
add
mov
jo
mov
les
sbbl
cwtl
ljmp
fildll
sbb
das
popf
jae
and
leave
mov
js
mov
ljmp
pop
mov
ss
or
lds
dec
adc
movsb
jp
loope
negb
xchg
and
sti
push
push
fstps
je
or
test
rorb
adc
loopne
into
fimuls
sahf
xchg
dec
mov
and
inc
rclb
and
adc
cmp
outsl
scas
pop
cmpsl
faddl
cli
mov
mov
sub
popf
aad
popa
or
xorl
sub
cmp
sbb
stos
add
mov
mov
dec
ljmp
icebp
orl
add
movzbl
movzbl
orl
jmp
insb
lods
push
repz
je
xor
or
fadds
mov
add
push
cld
sub
xor
mov
xchg
jne
jb
mov
xchg
mov
adc
sti
les
push
inc
sbbl
roll
push
jmp
les
loope
inc
xor
sti
pop
test
jmp
imulb
mov
mov
xchg
ret
sbb
setne
cmp
mov
lcall
addr16
shrl
add
fld
xor
les
iret
cmp
pop
pop
int
cmc
fiaddl
fsubrl
and
subl
sbb
mov
std
cmp
punpckldq
push
inc
icebp
je
movsl
jecxz
sti
mov
data16
popw
or
adc
popa
mov
loope
jnp
lock
jmp
mov
popa
ret
lea
cmp
xchg
js
cmp
pop
frstor
repz
jno
pop
dec
cld
push
sub
dec
bnd
popf
into
call
sti
cmpsl
pop
jg
aaa
gs
dec
js
inc
jns
ljmpw
enter
cmc
xor
inc
sbb
data16
inc
loop
mov
add
insb
dec
add
jmp
pop
scas
dec
push
inc
adc
or
pop
popa
repnz
push
inc
js
lahf
mov
mov
sbb
insb
xor
mov
sahf
mov
scas
repnz
adc
nop
dec
push
ss
iret
bswap
fstl
scas
adc
mov
insb
daa
or
lods
dec
mov
inc
iret
pushw
lret
sub
insb
fwait
mov
repz
sbb
stc
inc
push
repz
jo
pusha
inc
cmpsl
inc
popa
adc
cmp
jne
mov
lret
adc
mov
cmp
add
out
pushf
xchg
inc
cbtw
mov
sbb
xchg
push
imul
inc
ret
clc
jb
and
in
push
mov
sbb
mov
dec
or
enter
imul
mov
adc
sub
push
ja
jmp
mov
std
aas
mov
xor
lock
cmpsl
bound
mov
ja
movsl
mov
aaa
les
je
adc
push
mov
mov
lret
das
push
jle
jbe
sub
rolb
jecxz
daa
add
dec
jecxz
cs
je
pop
int3
aad
inc
adc
push
mov
jl
lods
add
xchg
in
sub
xlat
movsl
lods
or
mov
gs
push
faddp
or
or
enter
push
cmp
push
aad
inc
sbb
mov
inc
out
cmp
cmpl
pop
sub
mov
aaa
dec
sub
xchg
call
movsb
mov
nop
xor
into
sbb
xor
cmpb
arpl
jb
pop
push
mov
sbb
imul
cltd
xchg
jmp
sub
fwait
mov
mov
shl
lods
addl
rorl
fwait
mov
cmp
xchg
pop
push
cmp
jge
jno
jns
hlt
iret
popf
pop
push
mov
push
mov
sbb
out
movsb
push
ret
and
out
fucomip
push
add
cmp
jmp
outsl
xchg
dec
aad
xchg
lock
sbb
pop
sub
sbb
cli
flds
push
xchg
xchg
mov
sti
xchg
dec
mov
icebp
and
sub
outsb
dec
shl
mov
in
jo
push
out
cltd
lds
mov
ret
dec
movsb
rcr
jge
dec
sbb
pop
int
ja
pusha
repz
xchg
mov
jnp
add
mov
jl
out
push
fsubrl
pop
push
test
sbb
push
hlt
jno
xor
cld
mov
cmpsb
xchg
mov
inc
push
cmpsl
pop
or
push
pop
fcmovnb
or
out
jb
or
pop
push
psrlq
mov
in
bound
test
cmc
gs
loopne
inc
sub
lret
cld
push
and
out
mov
add
inc
decb
std
mov
dec
jb
and
shll
xor
xor
cmp
lods
push
int3
shlb
fisttpll
insb
out
add
jns
repnz
cwtl
push
testb
xor
push
fmuls
stc
daa
cmpsb
fsub
mov
xchg
sub
ds
lcall
shl
or
lea
dec
xor
imul
mov
mov
into
aaa
arpl
pop
xor
dec
xor
sub
adc
and
rcr
or
iret
sub
ret
cmp
icebp
push
cld
aam
or
xchg
push
pop
test
shrl
incb
jb
test
add
cmp
faddp
arpl
inc
xchg
nop
push
les
jne
in
inc
mov
in
add
push
mov
test
aam
cmpsb
sbb
outsl
jle
adc
add
mov
jecxz
adc
popl
push
filds
js
pop
test
xchg
xchg
cmp
sbb
inc
jo
push
data16
stc
ss
ret
out
in
xchg
insb
popf
mov
push
out
jp
push
movsl
icebp
pop
in
ljmp
dec
sub
mov
insb
cltd
sub
in
scas
xlat
faddl
pop
xor
push
jmp
mov
adc
repnz
mov
les
icebp
pop
jno
xor
jl
cmc
es
pop
mov
gs
test
dec
xchg
repnz
das
loope
and
xor
xor
imul
push
movb
call
ficoms
sbb
cmp
push
mulb
cmp
xchg
sbbl
rcr
data16
insb
xchg
mov
arpl
in
fcoms
pop
mov
sar
dec
daa
out
loop
jnp
imul
hlt
fisubl
popf
cmp
arpl
mov
outsb
mov
xor
scas
lea
inc
cltd
xorl
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
jnp
push
mov
add
mov
pushf
inc
sti
mov
js
pushf
add
push
out
push
fnsave
adc
and
popf
inc
stc
sub
rolb
loop
orl
cmpb
jmp
cs
into
sub
mov
rclb
jb
icebp
inc
add
add
dec
outsl
insl
push
and
dec
xor
inc
es
mov
dec
adc
inc
cmp
aad
cmp
lock
mov
add
popa
xchg
xchg
dec
addr16
inc
jo
stos
xchg
aad
loope
sbb
cld
dec
data16
hlt
fwait
fwait
xchg
lock
stos
sbb
popl
push
mov
xchg
stc
add
lcall
pop
shr
rcr
adc
in
in
popf
rcrl
out
sub
or
out
push
stos
lods
into
jp
sarb
imul
jmp
fwait
jnp
test
int
and
dec
fiaddl
imul
mov
fmul
pushf
inc
lret
pop
fimuls
repz
es
bswap
and
in
and
sub
add
pop
popf
push
shl
addr16
push
fisubrl
adc
sbb
push
shll
cld
ja
jbe
mov
xchg
mov
mov
mov
rolb
out
dec
xchg
mov
inc
movsb
call
mov
scas
das
inc
out
dec
xor
fistl
addl
xchg
lea
iret
sub
or
loopne
jp
pop
fsubrl
xlat
sbb
push
sbb
add
enter
es
daa
out
add
repnz
sub
sbb
pop
push
jae
cmc
jg
sub
xchg
add
pop
aas
cmp
shrb
inc
jl
inc
pop
and
push
inc
mov
jno,pt
icebp
push
inc
imul
in
jnp
testb
xchg
push
mov
lock
rcrl
dec
stos
std
jle
or
std
outsb
dec
out
sbb
xchg
es
lock
mov
push
iret
ljmp
pop
rcrl
sub
inc
loop
lods
pop
in
sbb
xchg
std
xchg
mov
pop
daa
out
pop
mov
push
sbb
add
push
out
hlt
pusha
and
aas
xor
test
into
sbb
inc
test
movsb
ljmp
sti
leave
mov
push
add
dec
cmp
cmp
sbb
out
adc
pop
and
in
mov
pop
loope
jg
xor
orb
xor
sub
fwait
pop
mov
aas
cmp
out
lret
lahf
aad
into
aam
xor
add
push
sbb
cmp
pop
fsubrp
add
insb
mov
shl
popa
dec
aaa
jp
or
pusha
mov
clc
ljmp
xchg
insb
stos
inc
ljmp
inc
cld
std
cld
push
sqrtps
jnp
jge
sbb
xor
add
insb
mov
insb
mov
leavew
mov
js
pop
mov
mov
int3
mov
mov
cmpsl
mov
and
mov
and
push
es
fadd
aaa
xchg
xor
dec
arpl
cmpsl
pop
popa
lods
popf
test
xchg
stc
rorb
out
leave
mov
rol
iret
dec
inc
mov
dec
mov
pop
jne
movsl
xchg
pop
adc
fwait
ljmp
int
cltd
push
or
cltd
sbb
stos
fdivrp
aam
ffreep
test
sbb
sbb
inc
rcl
cmp
pop
adc
fsubl
sti
test
push
dec
movsb
inc
or
jb
in
aam
adc
repnz
xchg
vcvtsi2sdl
in
out
repz
loopne
clc
outsl
push
das
jg
fcompl
mov
insl
loop
add
or
cltd
movsl
shrb
sahf
push
push
mov
mov
iret
sbb
scas
jnp
rorb
in
aad
jnp
pop
mov
inc
je
aad
lds
leave
imull
in
jle
pop
sub
mov
test
pop
out
cmp
addb
adc
sub
inc
sub
es
fdivr
arpl
test
inc
push
daa
and
js
shll
in
shrb
test
ss
mov
std
mov
test
mov
xor
int
scas
xchg
pop
js
aad
xchg
sub
pop
fcoms
test
pop
jne
into
adc
shll
xchg
pop
push
jo
mov
mov
pop
cli
or
mov
add
outsb
ss
movsl
xor
clc
dec
mov
or
js
lea
mov
or
data16
stos
pop
in
xor
push
cmp
adc
push
dec
mov
int3
loope
in
ret
xlat
sub
rcrb
pushl
add
jno
cmp
ds
sbb
dec
jecxz
test
outsw
mov
mov
and
pop
adc
in
lods
mov
insl
lcall
lea
xor
pop
xchg
dec
pushf
scas
or
xor
mov
fimull
jne
imul
shl
adc
dec
fimuls
dec
out
or
pop
push
test
cmpsl
dec
cmp
lds
or
in
mov
mov
jg
sub
push
repnz
das
test
mov
lds
cmc
inc
outsl
andb
jns
call
andl
in
fcoml
out
lods
cmp
dec
stos
jae
xchg
gs
dec
push
pop
in
or
cmp
or
or
push
rcrb
dec
movsl
test
movd
jecxz
roll
jp
sub
jb
jle
inc
inc
jmp
sbb
push
test
js
movsl
ljmp
or
and
and
add
cld
and
pop
mov
add
xor
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
movhps
pop
flds
aad
push
ret
ja
lcall
outsb
mov
mov
roll
shll
dec
cmp
mov
xchg
xchg
xchg
mov
rcll
insl
cmp
mov
fwait
jg
dec
out
iret
hlt
lock
inc
sbb
xchg
sti
xor
sub
in
mov
adc
mov
xor
mov
sub
inc
inc
xor
pusha
and
icebp
sub
out
and
ret
inc
jb
adc
bound
dec
lods
mov
lret
dec
xor
nop
push
mov
arpl
movsl
js
mull
mov
fwait
lea
roll
bound
or
mov
pop
imul
outsl
push
add
pusha
sub
es
fmull
roll
add
xor
or
dec
lcall
add
mov
popf
or
aam
out
mov
jo
in
xchg
test
and
fs
push
fdivrp
cmp
push
push
mov
jmp
xor
insb
data16
stos
mov
mov
adc
cwtl
outsl
jbe
cmp
out
sarb
movb
cmp
nop
stc
call
or
popa
add
cld
adc
add
adc
mov
pusha
add
xchg
mov
dec
leave
loope
mov
movb
dec
ss
stos
push
cli
loopne
bound
ret
iret
xor
cmc
push
adc
push
loop
mov
aas
sub
mov
jmp
sbb
fsub
adc
scas
mov
fs
lret
cwtl
mov
rclb
jbe
inc
dec
jno
stc
xchg
lret
imul
scas
outsl
es
dec
call
in
jne
fs
mov
cmpsb
pop
mov
pop
cli
xchg
jo
pushf
inc
repnz
out
int3
and
in
jae
ds
inc
cmp
push
into
fimuls
cmp
nop
adc
jecxz
pusha
frstor
fnclex
lds
fwait
enter
in
cmp
les
xchg
stos
lds
in
test
insb
push
bound
mov
popa
cmp
xor
ret
in
sbb
fsubl
shr
mov
sbb
enter
or
or
cmpsl
cmc
aas
fcmovnb
push
jge
arpl
out
jle
sbb
inc
sbb
dec
aas
sbb
enter
push
loop
loop
xchg
jbe
sub
jecxz
xchg
aam
mov
sub
fbstp
or
insb
sub
test
xor
cs
pop
inc
je
hlt
mov
adc
xchg
and
loope
fisubs
cmc
gs
mov
mov
fwait
jmp
push
ja
xor
out
cmpb
ret
cmp
mov
aam
in
fiaddl
cmp
xorl
push
and
fnsave
jl
sahf
mov
scas
jge
xchg
xchg
imul
fdivl
ja
dec
enter
cmp
jge
lods
sti
in
pusha
sti
mov
mov
lcall
xchg
push
call
inc
sbb
sub
adc
movsl
out
xchg
sbb
sbb
and
xor
int3
pop
mov
xchg
stc
cmpsl
sbb
xchg
xchg
sbb
repnz
cli
lea
mov
mov
dec
mov
and
lahf
cmp
push
or
jne
fstpt
cmp
cmp
scas
mov
insl
xlat
push
movsl
push
enter
roll
jp
sbb
andl
inc
pop
data16
popa
fsubrl
jo
mov
push
fs
and
pusha
or
inc
repz
out
insl
jge
xor
mov
sub
and
pop
imul
fstpl
in
dec
sub
ret
mov
and
cli
dec
in
mov
fstpl
and
incl
enter
add
pop
repz
push
xchg
shl
rolb
sbb
push
outsl
arpl
rcr
dec
enter
sbb
inc
push
data16
icebp
mov
lahf
mov
or
push
push
cmp
loopne
push
orl
cli
lods
sbb
fcmovnbe
outsb
xchg
adc
xchg
dec
inc
sub
mov
test
pop
sub
lahf
xchg
mov
dec
cmc
xchg
cmc
in
sahf
stc
xchg
sub
xchg
cwtl
xchg
pop
pusha
inc
sub
add
dec
int
lret
push
or
fcoml
outsb
sub
incb
loope
xchg
xor
jae,pn
ljmp
pop
and
mov
and
jnp
stos
push
stc
and
mov
mov
adc
xor
and
inc
repz
pop
je
fbstp
js
mov
adc
pop
das
lcall
jb
cld
push
test
loopne
shll
call
jl
or
push
mov
movsl
inc
stos
movsb
aas
popa
or
and
push
into
add
repnz
ret
cmpsb
xchg
pop
mov
fsubrl
jle
push
scas
shlb
std
cmp
mov
or
add
jnp
hlt
fnstsw
popa
lods
cmp
movsl
clc
ljmp
pusha
jb
cmp
icebp
inc
pop
test
repnz
add
cmp
ret
and
ret
out
jb
jl
and
inc
sti
or
bound
mov
dec
out
mov
loopne
sub
pushf
lods
scas
nop
cmp
sub
hlt
push
xlat
aas
imul
mov
mov
jo
push
aad
or
mov
xor
or
xor
cld
xchg
adc
ret
cld
test
push
push
dec
adc
xor
stos
and
stos
mov
int
xlat
test
push
adc
mov
push
cwtl
mov
sahf
lcall
and
inc
add
ljmp
cmpl
cltd
mov
mov
push
loopne
jne
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
mov
push
mov
push
invd
add
jl
xchg
sub
push
add
fistpll
mov
fdivl
mov
and
in
int3
iret
dec
cmp
sub
ret
pop
test
mov
mov
ret
pop
sub
pushf
sbb
jnp
push
mov
fstl
fisttpl
nop
movsb
pop
inc
out
jmp
lock
mov
out
ret
jg
sub
fisttpl
xchg
add
add
mov
lock
xchg
xchg
test
js
sbb
fbstp
push
sub
xchg
fsubp
pop
stc
mov
out
xor
push
cmp
movsl
sbb
adc
out
lods
cltd
lcall
dec
adc
clc
or
dec
inc
pop
call
movsl
adc
push
negl
sub
les
jl
addr16
mov
fldl
stos
mov
push
cmp
add
mov
rclb
bound
xchg
imul
in
das
repnz
imull
add
inc
jnp
lcall
mov
pop
xchg
mov
outsl
sub
scas
adc
mov
mov
mov
xlat
lods
lcall
xor
out
xchg
stc
fwait
jp
xorl
sbb
cli
adc
mov
inc
push
stc
cld
nop
jmp
inc
mov
adc
ds
mov
add
cmpsl
shll
sarb
lea
lahf
xchg
xor
sub
in
subl
out
imul
mov
jno
fidivrl
fdivrl
ret
mov
sbb
jnp
inc
arpl
out
and
mov
pop
xchg
mov
lods
add
xor
push
ljmp
sub
call
aas
mov
mov
andb
fwait
jo
sbb
push
stos
sbb
push
adc
in
das
popf
fwait
fs
mov
inc
into
dec
test
mov
add
add
aad
pop
xchg
out
or
ljmp
sbb
push
xor
inc
jmp
pop
adc
mov
push
aam
sarl
loope
push
push
cltd
mov
fsubp
pusha
aas
movsb
jo
ror
adc
fs
mov
jle
push
les
pop
adc
xchg
push
add
iret
subb
sbb
dec
xor
clc
lahf
and
push
pop
pop
and
dec
push
pop
bound
fnstsw
push
rorb
inc
xor
cmp
loopne
leave
lods
flds
sbb
sbb
xchg
insb
leave
repnz
aaa
xchg
sbb
lret
cmpsl
rorl
mov
mov
jo
cli
mov
shl
fs
sub
in
aaa
add
pop
adc
lds
adc
mov
mov
lea
and
sbb
mov
in
pop
cmpsl
push
xlat
and
jnp
sahf
sub
add
pop
xlat
push
jle
cmpsb
xlat
cmpsl
mov
lahf
push
cmp
cmpl
clc
mov
sbb
and
outsb
push
fdivl
in
inc
sub
inc
in
ret
insl
xchg
in
lds
rcr
dec
test
clc
aad
jp
leave
dec
mov
sub
repnz
sarl
jp
xor
jbe
inc
push
xchg
scas
lahf
sub
adc
sub
mov
cld
mov
adc
ret
outsl
addr16
xchg
push
fnstsw
loopne
sbb
fs
loopw
ficoms
sti
mov
push
jbe
in
push
cmp
cmp
xor
xor
xchg
adc
mov
and
cmpsl
loopne
mov
daa
inc
in
popf
jo
or
xor
cmp
shll
out
pop
xor
sbb
adc
cmpsb
in
pop
cltd
jp
jae
jge
addb
push
in
lock
fsubl
sbb
lahf
iret
mov
loopne
xor
lret
or
pop
sub
stos
sbb
jbe
ret
sarl
imul
mov
push
mov
dec
cmp
dec
lock
int3
xor
mov
clc
adc
sub
dec
notl
pop
rorl
testb
popf
pop
ss
push
es
enter
inc
test
jecxz
add
cmp
push
ret
mov
dec
jnp
dec
xchg
cmpsb
lea
ret
je
push
sbb
pop
shr
xlat
jle
call
lcall
orl
adc
sbb
add
dec
out
imul
pmuludq
cltd
jl
imul
jae
insl
mov
adc
je
clc
ja
gs
fsubl
aad
pushf
into
push
or
sbb
mov
loop
cld
daa
mov
popf
mov
push
mov
or
stos
fwait
add
push
lock
jl
inc
insl
xchg
stos
add
lret
sahf
sub
lret
pop
fidivrs
cmp
jo
popf
negb
lret
subb
sbb
xlat
loop
jo
daa
add
xor
jge
outsl
cwtl
xchg
out
mov
fcoms
stc
xchg
add
out
sub
dec
jp
ret
add
push
popa
sub
or
ss
inc
mov
lret
jle
ret
leave
repz
mov
and
or
stc
jae
mov
iret
stc
repnz
sub
in
in
and
pop
sub
xor
es
pop
push
jl
in
divb
xchg
popa
jl
cmp
loope
mov
mov
pushf
or
mov
pop
shr
add
jge
adc
pop
test
ljmp
iret
mov
divl
mov
imul
iret
dec
int3
leave
scas
jle
jae
fwait
and
adc
cwtl
xchg
pop
incb
add
mov
call
pop
dec
xchg
push
rcrl
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
lret
lret
fisttps
invd
add
divps
cmpsl
or
loop
stos
xor
xchg
jns
add
sarl
es
js
mov
push
add
adc
inc
jnp
cmp
sbb
sub
pusha
jns
xchg
and
cwtl
lds
mov
bound
cli
cltd
es
andb
lods
jmp
out
daa
sbb
push
xchg
lret
test
mov
jl
pop
xchg
xchg
and
jbe
popf
pop
cmp
sub
xor
lret
push
jle
inc
add
scas
movsl
pop
cmp
mov
fcoms
sti
daa
pop
aas
jno
pop
jns
mov
cmp
lahf
pusha
ss
cmp
bound
mov
cmpsl
movsb
add
and
jmp
push
or
push
lret
add
xor
cli
xchg
and
in
inc
inc
cmc
lcall
mov
cmp
roll
mov
adc
out
dec
in
push
js
in
scas
xchg
shrb
addr16
in
les
jns
xor
mov
fidivs
and
in
sub
cmp
nop
js
dec
and
ds
jp
mov
sti
mov
into
jbe
push
divb
ret
loopne
decl
xor
cmpsb
sub
adc
aaa
xor
aam
add
mov
pop
mov
adc
and
pusha
mov
js
jmp
mulb
push
jmp
insb
and
and
cmp
stos
push
jl
rorb
inc
and
outsb
push
push
pop
call
int
xchg
rcl
in
mov
sbb
xchg
int3
stc
cmp
and
dec
dec
fistps
mov
push
lcall
jmp
jo
std
ret
or
cmp
dec
cmp
jb
jae
insl
pop
xor
inc
add
jno
out
lcall
movb
dec
add
int3
in
mov
xchg
mov
mov
cmpsb
loopnew
sarb
push
jbe
lret
jg
mov
in
jmp
mov
inc
imul
test
scas
popf
insl
lret
jno
lcall
add
mov
push
xor
scas
adc
sbb
das
popw
and
lahf
int3
out
outsl
ljmp
repz
ss
push
inc
cmp
pushf
xchg
aad
jne
inc
cmp
scas
mov
xchg
mov
pop
xor
mov
cmp
bt
or
pop
fdivs
adc
es
inc
daa
sbb
adcb
sbb
mov
cld
loop
adc
ret
fcmovu
xor
mov
imul
pop
insb
inc
dec
lret
xchg
aam
adc
xchg
es
gs
xchg
xchg
repz
pop
dec
leave
xor
ss
clc
jp
fwait
add
push
lock
fildll
outsl
addr16
mov
arpl
mov
mov
out
lods
jae
jecxz
push
dec
dec
pop
outsl
cmp
movsl
into
ljmp
loop
js
adc
lahf
sub
push
cmp
mov
cli
dec
lcall
mov
jae
imul
cmc
call
jno
mov
fs
rcll
into
adc
fcomi
insl
push
outsl
test
and
sti
jns
xor
loope
call
addr16
sub
or
push
shrb
mov
adc
push
enter
aam
inc
dec
aaa
mov
xor
push
and
inc
push
push
scas
jo
shll
and
dec
pop
inc
cmp
cwtl
pop
dec
mov
push
mov
mov
dec
adc
scas
xor
adc
icebp
fucomp
rolb
lret
cmp
inc
imull
inc
es
mov
bound
dec
mov
pop
mov
push
js
daa
sub
mov
xorl
sub
push
out
in
cmp
cmc
dec
cmp
xchg
daa
div
addl
jl
fcmovbe
fcompl
xchg
mov
jnp
popa
inc
mov
aaa
ss
cmp
aas
cmp
jl
sbb
sbb
mov
push
dec
call
push
mov
sar
sbbb
cmp
mov
xchg
push
push
stc
push
andb
enter
push
inc
inc
es
xchg
cmpsb
fdivrp
std
addr16
adc
mov
test
xor
stc
push
out
idivl
dec
mov
push
jmp
imul
rep
fistpl
nop
mov
in
in
and
pushf
arpl
hlt
fistl
pop
call
nop
inc
mov
out
stos
add
cmp
adcb
inc
mov
jecxz
inc
or
mov
and
popa
fcompl
outsb
lcall
int3
xlat
stos
push
sub
out
adc
mov
lds
fimuls
movsb
ss
jp
je
and
sub
out
mov
outsl
mov
lcall
dec
cmp
imul
and
scas
push
xor
inc
scas
jo
loopne
sub
out
sahf
xchg
lds
loopne
push
dec
incl
outsb
fiadds
imul
mov
imul
nop
push
movsb
loope
cwtl
icebp
sbb
stos
pop
std
shll
and
repnz
stc
and
dec
xchg
dec
iret
ja
out
mov
fsubrs
in
into
aaa
jge
and
mov
mov
aaa
outsl
mov
aam
fdivr
movsb
add
loopne
lds
mov
adc
push
icebp
fcoml
sub
sbb
and
shlb
inc
xchg
int
xchg
dec
xor
pop
flds
popa
jle
dec
dec
mov
cmp
or
arpl
scas
cmp
push
stos
adc
or
test
xor
sbbl
repnz
push
pushf
mov
aad
mov
lock
cmpsb
xchg
xchg
sbb
shl
mov
and
fwait
jg
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
bswap
std
mov
mov
lret
and
testb
imul
pop
and
gs
xchg
arpl
jb
sub
push
add
and
mov
sahf
jno
rclb
fsubl
aad
cmp
clc
insb
pop
icebp
mov
pop
ficompl
jg
loopne
leave
mov
aam
fisubrs
pop
clc
inc
or
mov
jp
lds
dec
adc
xchg
or
cwtl
pop
jl
cltd
xchg
pop
fdivs
pop
dec
sbbl
mov
loopne
fnstenv
aad
repnz
std
rol
sar
dec
or
fst
mov
pop
mov
mov
fwait
xor
in
jmp
inc
int
movsb
repz
into
stos
mov
and
mov
inc
mov
fstp
cmpsl
xor
add
xor
mov
push
ficompl
les
cs
ljmp
filds
xchg
pop
ds
mov
out
dec
mov
push
lcall
sbb
mov
push
jp
leave
cmp
jmp
mov
xchg
test
lds
scas
lcall
clc
popl
leave
fisubl
xchg
adc
adc
jb
shrl
mov
lds
repnz
scas
call
cmc
clc
bound
add
mov
or
pop
mov
add
push
push
faddl
mov
stc
jg
inc
or
mov
xchg
data16
push
jae
jbe
ds
fidivrl
int3
out
push
lcall
sbb
scas
mov
adcb
inc
loope
xchg
fcoml
jmp
sti
movsl
and
fdiv
jg
imul
leave
mov
lcall
aas
or
addr16
jns
or
movsl
cltd
rcrb
daa
pop
in
inc
push
xlat
lods
lahf
into
lahf
fnstcw
push
add
adcb
push
push
jmp
inc
pop
and
and
xchg
lods
cmc
fdivrl
shrb
adc
ds
xor
stc
sub
pop
and
cld
jno
cltd
insl
cmpsl
stos
incb
push
lea
int3
xor
aam
xor
push
dec
insb
xor
imul
andb
and
inc
lods
dec
sti
or
in
clc
shll
xor
pushf
push
xlat
rcrb
xchg
xchg
sbb
xchg
or
gs
xchg
inc
add
inc
mov
cmp
repnz
mov
push
jle
outsl
iret
xchg
mov
jl
cmpsb
xor
cmc
cld
cmpsb
xlat
adc
mov
xchg
inc
lock
push
cmp
xchg
mov
in
cmp
fcompl
fdivl
push
mov
mov
xchg
fcmovu
sub
xlat
arpl
sub
imulb
mov
mov
add
pop
mov
jle
xchg
xlat
stc
in
cmp
jle
add
jo
push
clc
lea
scas
lods
sbb
das
push
sahf
lds
sbb
jl
mov
and
push
cltd
pop
out
int
mov
push
cmp
sbb
shlb
js
cmp
out
outsb
insl
fwait
scas
loopne
xchg
dec
rolb
adc
adc
int
add
cmp
and
push
lea
lcall
sub
lds
sub
adc
push
sbb
cmpsl
jecxz
mulb
inc
pop
jo
pop
fnstsw
pop
scas
dec
inc
nop
jmp
bnd
jo
fwait
das
enter
jle
es
cld
inc
and
lods
or
stos
push
push
sti
mov
cmpsb
push
stos
add
out
lahf
xchg
jb
imul
clc
push
mov
jge
idiv
mov
ja
jmp
fcompl
in
xchg
adc
int3
icebp
mov
xchg
lock
ja
out
stos
cli
enter
stos
sahf
jl
xor
jp
push
push
pop
mov
fstpt
inc
and
cmp
dec
push
insb
inc
mov
shr
xchg
test
gs
jae
add
xchg
dec
xor
lods
or
jne
adc
push
jle
push
or
add
jmp
cmp
cmpsb
out
or
sub
test
lret
sub
sbb
outsl
dec
xchg
std
inc
xchg
out
ret
fisubl
out
pcmpeqb
sub
xchg
lret
dec
test
dec
pop
aaa
divb
inc
jnp
mov
scas
cmc
jo
outsb
add
ss
nop
sti
lahf
arpl
adc
rcr
daa
hlt
ss
mov
cwtl
xor
data16
in
clc
aaa
jo
dec
aas
inc
cs
inc
mov
fsubr
mov
jno
mov
inc
ljmp
cwtl
jle
ficoml
fidivrl
cmpb
jmp
cmp
cmc
jne
xor
repz
pop
loop
and
cmp
test
dec
pop
mov
popa
push
pop
jae,pt
jno
push
cmp
xchg
mov
mov
fs
rcll
jb
jl
loope
ror
mov
push
pop
fisubl
repz
mov
mov
lods
frstor
or
lods
fdivrp
mov
push
subb
mov
jns
bound
test
dec
int3
cltd
pop
rclb
cmp
fsts
movb
push
push
adc
jnp
call
sbb
mov
in
in
xchg
mov
adc
adc
mov
cmpsl
cwtl
aaa
sub
test
cld
push
rcll
xchg
sub
inc
mov
pop
inc
fdivrl
pop
fists
enter
out
mov
out
lds
mov
adc
ja
fcoml
out
out
out
xor
sub
mov
sti
mov
sub
push
test
cli
scas
jg
lods
jb
push
add
test
xor
mov
rol
loope
jmp
push
mov
cli
sbb
fnstenv
dec
stos
dec
adcb
movq
or
ficoms
daa
xchg
mov
stos
mov
call
ja
xchg
sarb
adc
enter
int3
mov
outsb
mov
loop
fwait
jb
sbb
dec
xchg
xor
je
out
clc
sub
rcrb
fiadds
test
jl
in
sbb
cmp
sar
ret
cli
pusha
jae
jbe
mov
int
mov
adc
decl
shl
xor
bound
jge
scas
lahf
popf
mov
aaa
mov
adc
loopne
push
or
test
dec
push
adc
inc
mov
icebp
cli
mov
mul
rcl
mov
loopne
inc
cmpsb
sbb
decl
push
push
mov
sub
mov
dec
or
stos
push
mov
mov
cmp
xchg
mov
sahf
pop
imul
in
pop
scas
mov
or
test
fnstcw
add
in
ja
push
mov
addr16
std
mov
loopne
mov
sarl
cmpsl
xor
mov
repz
jnp
js
ret
dec
aad
call
jnp
loop
mov
dec
jge
adc
fmuls
les
ret
pop
mov
cld
push
add
cmc
insb
fistl
jns
mov
imul
cmc
test
lods
stos
cmp
pop
imull
xor
mov
dec
sbb
fwait
push
inc
inc
imul
jno
sub
sbb
pop
mov
popa
pop
cmp
call
cmpsb
int
cmp
out
test
and
stos
loope
jg
jge
test
lret
pop
sub
mov
mov
int3
jo
mov
int3
and
or
or
push
lcall
cmpb
cmp
mov
add
repz
and
sub
outsb
add
insb
ja
jmp
pop
mov
xchg
mov
and
call
add
loop
ficompl
and
scas
leave
jp
in
call
pusha
data16
ret
ret
data16
shl
inc
mov
push
roll
inc
out
mov
sti
loopne
mov
loopne
addl
adc
dec
adc
push
sub
xchg
popa
mov
stc
cmp
dec
add
push
scas
push
jp
and
lret
dec
and
sbb
and
andb
sub
movsl
mov
rorb
mov
addb
loopne
and
sbb
aas
dec
orb
stos
mulb
jne
insb
lea
mov
lret
popa
mov
pushf
mov
or
mov
je
jp
dec
sub
pop
sub
xor
std
jae
jbe
sub
cmp
testl
fmull
cmc
outsb
sarb
pop
xor
xchg
mov
jns
bound
sub
sbb
movsl
das
and
lods
pop
push
test
sbb
or
lret
sbb
mov
je
std
cwtl
lcall
arpl
fldt
xor
ljmp
pop
in
sbbb
in
inc
xor
incb
lock
divb
testl
in
push
mov
das
dec
dec
adc
and
imulb
cmp
cmpsl
cmp
rcl
iret
out
add
pop
jmp
jnp
sbbb
push
lahf
sub
mov
out
enter
mov
es
mov
adc
inc
xor
loop
and
in
pop
jmp
bound
iret
mov
xor
pop
pushf
push
xchg
add
popa
xchg
mov
mov
lcall
jbe
mov
pop
inc
in
scas
sti
adcl
out
and
vsubpd
push
mov
imul
xchg
sub
rcrl
aaa
push
xchg
aam
mov
stos
or
push
add
imul
xor
arpl
in
ja
into
cmp
xchg
xor
mov
xchg
pop
add
ret
mov
xchg
dec
faddl
push
movl
stc
and
filds
adc
leave
and
dec
cmp
push
mov
pop
push
mov
dec
ss
adc
arpl
scas
mov
cmp
mov
ret
outsb
inc
or
adc
fldcw
cli
popa
lds
fs
in
add
js
aas
pop
push
mov
xchg
jmp
jnp
cmp
inc
hlt
push
xlat
cs
jle
pop
jmp
fisubl
sti
pushf
xor
mov
sahf
fstl
sbb
cmp
push
dec
pop
enter
inc
xchg
inc
dec
out
outsb
jne
stc
mov
inc
aas
lret
adcl
xlat
popf
mov
dec
mov
inc
ljmp
mov
hlt
lea
jge
bound
outsb
ret
mov
mov
mov
dec
movsb
flds
add
mov
inc
jae
or
cmp
xchg
lret
sbb
dec
xor
pop
clc
sbb
and
push
out
mov
pop
sub
mov
loop
jmp
rolb
lea
adc
sbb
dec
je
stc
insb
outsb
xchg
jo
movsl
push
or
repnz
mov
scas
inc
cs
ret
inc
and
inc
out
xor
stos
and
fstpl
addr16
or
xchg
jle
mov
ja
ss
jo
jecxz
rclb
aam
mov
inc
sahf
inc
cmp
jbe
jo
gs
and
pop
cmp
cmp
enter
es
jno
and
pop
cmp
dec
lret
fiaddl
imul
int3
inc
ret
pop
mov
adc
and
mov
nop
rcrl
fs
inc
push
mov
mov
inc
lret
aas
mov
arpl
and
xchg
adc
dec
lods
les
jo
adcl
dec
stos
xor
ret
inc
inc
add
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
mov
mov
pfrsqit1
jns
xor
mov
popf
mov
inc
pop
xor
push
sbb
xchg
or
adc
or
sub
insb
jo
pusha
adc
leave
aad
inc
push
idiv
ror
pop
pop
mov
mov
std
out
or
cmp
and
or
aam
in
fcoms
aaa
xor
sub
push
fistl
sahf
or
aaa
inc
popf
mov
push
dec
and
pusha
cwtl
scas
fwait
cmpb
xlat
and
push
adc
test
data16
into
loope
add
js
xlat
iret
mulb
mov
sahf
ret
pop
or
xchg
dec
add
lcall
std
cltd
es
hlt
ret
daa
adcb
add
pop
test
push
push
imul
ja
xor
pop
lret
das
divb
xchg
mov
mov
aas
das
add
sbb
movsb
gs
sti
push
inc
fs
shll
inc
pop
sbbl
pop
inc
pop
adc
push
arpl
jne
xchg
stos
jmp
movsl
jmp
scas
cld
jmp
call
int
cmp
cs
jbe
ja
int3
jmp
je
int
push
lea
push
jecxz
inc
daa
movsl
dec
mov
mov
inc
in
pop
imul
imul
outsl
adc
outsl
stos
lcall
pop
pop
ret
add
push
and
inc
cmpsb
jl
inc
fisubrl
aad
outsl
iret
push
adc
lret
mov
mov
iret
push
sbb
sub
mov
mov
add
outsl
aaa
push
insl
jecxz
in
inc
adc
ftst
rorl
push
cmp
aaa
mov
gs
lcall
movsb
rcll
push
enter
xlat
cmp
scas
in
cmp
push
mov
in
jmp
xor
into
movsb
stos
cmp
xor
dec
jle
jns
cmp
jns
cmp
xor
mov
mov
xor
xor
out
imul
push
xor
push
cmp
test
mov
aas
mov
arpl
add
cmp
push
popa
loope
mov
push
add
cmc
mov
gs
je
lock
mov
data16
ljmp
or
testl
cwtl
fisubrl
cld
arpl
imul
mov
out
js
add
les
xchg
daa
dec
mov
sti
push
pop
mov
dec
movsl
mov
cmp
ret
jge
decl
lea
jb
insb
pop
cs
cmp
sub
imul
popf
jg
inc
cmp
sahf
inc
mov
mov
fisubrs
shlb
inc
xor
inc
aas
andb
aam
idivl
inc
cmpsb
add
mov
mov
push
data16
xorl
lret
fstps
popa
jae
rol
cmp
mov
repz
divl
rorb
cwtl
dec
xor
or
pushf
lret
adc
add
mov
cltd
inc
mov
push
xchg
jle
popa
xchg
sbb
push
jmp
and
mov
lret
inc
dec
scas
xchg
dec
cmp
fstpl
dec
ja
xchg
adc
add
ja
icebp
inc
mov
sbb
sub
enter
adc
xor
ja
push
jp
mov
popf
gs
neg
fisttps
push
mov
push
ret
inc
jae
ds
sub
fisubl
jmp
jbe
jb
in
cwtl
inc
nop
xor
mov
fldcw
loop
adc
adc
in
cmp
pop
daa
aam
add
sub
es
ljmp
jp
sub
jp
and
mov
push
fldenv
data16
mov
jecxz
test
fdivrs
xchg
sbb
cmp
in
sbbl
std
lds
xor
mov
push
inc
mov
mov
repnz
out
movsl
jg
mov
rclb
cmp
inc
xor
imulb
fldenv
pop
push
rclb
cwtl
movb
cli
in
lock
shlb
fdiv
mov
rorl
xchg
fidivrs
in
into
push
int
xchg
stos
es
or
or
icebp
dec
in
and
les
cmp
and
test
jo
mov
jge
lret
jmp
or
xchg
loope
lds
cmp
sub
adc
cmp
add
pop
aaa
orl
and
fidivs
sub
inc
jne
or
sub
loop
or
cs
insl
popa
push
dec
int3
push
dec
xor
lahf
ficoml
dec
xchg
enter
in
stos
clc
int3
sbb
xor
andl
sub
jne
iret
movsb
mov
loop
inc
mov
xor
xchg
test
fisubrl
lods
cmpsb
mov
sub
push
in
mull
mov
ret
push
and
aas
enter
sbb
xor
and
and
xchg
adc
mov
fsubrl
aas
dec
and
push
mov
fildl
mov
sbb
addb
and
mov
pop
adc
out
jbe
fsubrl
stos
lret
lock
or
lahf
dec
outsl
mov
pop
xor
das
cld
xchg
sub
pop
and
lret
aas
adc
pop
adc
add
mov
mov
sbb
mov
inc
jecxz
push
inc
shl
push
dec
clc
ret
xor
fimull
sbb
mov
into
push
push
das
lds
ljmp
mov
pop
cs
lahf
sbb
pop
or
mov
pop
stos
cltd
pop
ret
or
cmp
sub
sub
lods
or
std
fidivrl
nop
ljmp
repz
push
enter
pusha
xchg
fimull
sub
or
scas
por
sub
aaa
mov
lods
andl
sbb
jno
fsubrs
frstor
dec
and
xor
rorl
adc
sbb
xchg
pop
out
pop
clc
dec
adc
lock
xchg
sbb
in
movsl
mov
or
imul
sbb
xor
in
add
mov
mov
sbb
sarl
fwait
call
hlt
rcrb
push
lds
cmp
adc
mov
xor
in
xchg
sbb
inc
add
stc
not
aaa
fisttpll
pop
dec
mov
pop
xchg
stos
syscall
arpl
push
fdivr
ljmp
stos
daa
adc
push
leave
sbb
mov
inc
hlt
mov
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
mov
mov
jg
xchg
fsub
and
rclb
cmovo
pop
stos
sub
adc
cmp
es
xor
mov
sbb
orb
pop
leave
sub
int
pandn
xchg
aaa
pop
jae
imul
cwtl
or
sub
outsl
mov
adc
xchg
or
mov
push
or
push
push
xchg
lret
inc
sbb
and
dec
mov
call
stos
mov
xchg
push
push
adc
jo
or
btr
lahf
push
and
int
stos
sti
movsb
pop
shlb
cmp
iret
inc
fistpll
push
pusha
mov
shll
xchg
and
call
andl
ja
xchg
test
xchg
xor
dec
mov
xor
xchg
cs
jp
addr16
mov
mov
lods
mov
imul
test
push
mov
sub
movsb
outsl
ret
mov
mov
jno
adcl
push
lret
mov
push
pop
xchg
cmp
lds
ds
pop
cli
mov
dec
ret
cmc
cwtl
cmc
mov
int
cmpb
fcompp
sbb
xchg
out
xor
in
ret
call
outsl
push
std
jl
ret
pop
xchg
mov
decb
mov
cmp
cmp
inc
dec
mov
push
dec
test
pusha
cwtl
cmp
jmp
or
and
xchg
sub
bound
inc
dec
pop
mov
adc
push
cmp
cmp
adc
jb
jae
movb
lea
mov
mov
inc
lock
add
lret
push
pop
test
sbb
cmp
fidivrs
in
test
push
fnstsw
lret
xor
cld
arpl
pop
test
mov
sub
xor
mov
gs
dec
cwtl
mov
xchg
loope
sub
mov
out
cwtl
loop
sub
push
push
std
pop
sub
push
divb
pushf
jle
loop
dec
stos
pop
inc
dec
mov
daa
int3
mulb
dec
xor
xor
cmp
cltd
fnstenv
mov
stos
fists
mov
or
stc
or
mov
inc
pop
push
adc
push
mov
adc
loop
call
ret
leave
xor
ja
dec
or
leave
loopne
gs
mov
xor
jmp
pop
push
jecxz
fsubs
xchg
xchg
scas
imul
pushf
mov
sbb
xorb
mov
insb
cld
cmc
cmpsl
rcr
jns
ds
andl
scas
push
mov
cmpsb
adc
aad
or
scas
sti
and
fs
adc
sbb
mov
ljmp
add
mov
pop
stos
idivb
mov
dec
adc
cmpb
push
pop
push
addr16
call
pop
in
or
inc
aaa
clc
or
imul
mov
and
orb
push
push
das
lret
xchg
jecxz
cs
outsb
or
xor
ret
testb
xchg
xor
push
dec
enter
or
fistl
outsb
dec
jns
loope
scas
dec
cmpsb
push
hlt
lods
imul
jbe
add
es
mov
pop
xor
or
adc
out
mov
jns
addb
mov
sub
xchg
lock
rcr
enter
dec
mov
xor
cmp
xchg
push
std
ret
jmp
cmp
mov
dec
sub
out
outsb
scas
shlb
cld
out
lock
int
cmp
push
or
lds
sub
jno
add
imul
push
data16
sahf
sbb
aam
cmp
mov
xor
test
mov
stc
aam
sub
imul
jmp
mov
dec
mov
addr16
sub
and
add
sahf
mov
sub
inc
mov
cli
shll
jle
hlt
add
and
sub
enter
cmp
mov
insl
jno
cmpsb
repnz
and
sarb
les
loope
popa
or
js
rclb
mov
in
add
xor
mov
fisubl
jb
xor
repz
inc
xchg
jg
dec
or
addr16
xor
mov
dec
mov
std
inc
mov
fdivrp
push
scas
add
nop
sbb
push
or
sub
das
insb
mov
adc
push
cmp
loopne
std
push
cmpsb
popa
pop
push
in
xchg
xchg
test
and
mov
lods
push
mov
or
ret
fs
es
out
add
mov
repz
cs
sub
ret
sahf
dec
xchg
cmp
dec
sti
and
in
pop
lea
xchg
mov
inc
lret
mov
xorps
arpl
sbb
mov
shlb
push
rorl
lods
adc
cmpsl
adc
pop
mov
xchg
sbb
inc
dec
jns
test
loop
test
call
ljmp
mov
sub
xchg
gs
pop
xchg
adc
xor
ja
sahf
cmpsl
fwait
add
cmp
jmp
lods
lds
pminub
stc
shlb
mov
sbb
mull
cmp
pop
push
xor
nop
js
cmp
push
test
inc
or
out
xor
add
arpl
jmp
data16
cmpsb
fwait
push
mov
push
mov
movsb
mov
adc
aaa
lds
cmp
rorb
mov
les
push
lods
ja,pn
aas
inc
xor
pop
mov
xchg
call
push
cmp
pop
insb
mov
jae
out
cltd
mov
mov
dec
mov
test
jne
inc
pop
mul
movsl
xor
pop
inc
xchg
int3
pop
or
repz
sub
mov
or
cwtl
inc
mov
sbb
cmpsb
ljmp
jecxz
mov
iret
out
mov
testb
out
mov
pop
test
cmp
adc
jno
pop
inc
mov
dec
fidivrs
sbb
push
push
insl
ret
cmc
or
jns
push
pop
mov
cmp
cs
jns
std
mov
fwait
aad
sbb
inc
cmp
cli
cmp
cwtl
mov
mov
or
sbb
lods
add
mov
mov
imul
pop
or
sbb
mov
iret
movsb
imul
scas
js
sar
lods
jne
jle
push
popf
mov
jmp
xchg
xchg
push
or
in
test
add
movl
movl
mov
mov
mov
mov
add
jmp
pop
sbb
dec
mov
or
pop
jae
xchg
pop
pop
mov
pavgusb
push
add
outsl
lcall
jp
cmp
sar
push
xor
jg
dec
adc
cmp
outsl
sub
test
or
out
add
popa
xchg
dec
pop
cmp
cmp
dec
repnz
ficoms
jno
js
sbb
mov
add
icebp
leave
leave
cmpsb
jbe
cmp
inc
aaa
adc
mov
mov
push
sbb
mov
lret
lods
movsw
jle
xchg
jnp
mov
push
xorb
das
pop
push
into
call
sub
in
jo
jecxz
sahf
adc
push
xchg
and
inc
cmp
push
dec
in
insl
into
pop
adc
arpl
ret
outsb
inc
sub
hlt
or
mov
gs
pusha
xchg
stos
dec
js
sbb
outsl
movsb
inc
notl
push
and
pushf
xor
shr
sub
mov
call
mov
ja
adc
or
and
ja
sahf
mov
and
jg
jle
movsl
arpl
jecxz
jl
outsw
push
mov
pop
mov
sbbl
sub
push
out
xchg
push
mov
lret
imul
dec
ja
mov
cmpsb
add
mov
aam
inc
scas
pusha
lods
hlt
outsb
loopne
xor
mov
leave
lods
pop
adc
push
ret
mov
and
lcall
or
cmp
pop
mov
mov
push
mov
nop
pop
jo
mov
data16
xchg
in
pusha
insb
push
xadd
push
pushf
stos
nop
sub
inc
test
mov
push
sub
les
dec
and
push
pop
lock
jne
test
or
ret
insl
aad
les
mov
pop
movsb
shlb
sbb
cmp
lret
js
daa
mov
adc
mov
stos
mov
sbb
mov
int3
aas
cmpsb
stc
mov
push
mov
and
shrb
sub
mov
jge
stc
vpsllq
aam
ficoml
cmp
inc
stos
push
movsl
jle
orb
or
pop
mov
divb
xchg
sarb
sub
ja
out
push
enter
mov
pop
bound
lock
inc
dec
inc
sub
enter
sbb
jbe
pop
add
loop
dec
push
inc
jno
add
mov
cmp
inc
xor
outsl
and
fsub
imul
jecxz
jecxz
jp
sti
lret
gs
cmp
sbb
sbb
dec
insl
pushw
loopne,pt
pop
std
mov
mov
sbb
cmp
movsb
jg
inc
cmp
inc
add
sbb
xor
cs
imul
cli
adc
pop
and
cltd
adc
pop
test
lret
lcall
popf
mov
cli
or
add
repz
lock
sbb
or
inc
leave
add
insl
mov
add
sub
leave
js
cmp
bound
jno
mov
scas
inc
in
movsl
jg
cmp
adc
sub
repnz
mov
jne
clc
xor
sub
stos
lret
jne
xchg
scas
or
rorl
movsb
test
gs
or
or
xor
scas
sbbb
add
and
inc
sbb
sbb
pop
jo
and
out
les
jecxz
popf
test
clc
fwait
or
inc
in
fsubrl
or
arpl
cmp
and
lret
ds
and
pop
xor
push
cmpb
inc
and
in
push
repnz
scas
mov
stos
lods
fldenv
fdivl
cmp
cld
mov
aam
cmp
scas
fwait
stos
outsb
inc
xchg
mov
jno
inc
aas
sub
dec
and
mov
sets
jmp
push
fidivs
jbe
mov
movsb
jb
test
xchg
lods
lods
adc
pop
rcrb
cmp
fldt
jmp
cmp
aas
jg
mov
hlt
loopw
push
sbb
std
mov
push
fs
and
aad
lock
in
mov
out
lahf
or
pop
dec
fldcw
outsl
push
lahf
lret
sub
mov
aaa
sub
or
jb
adc
pop
adc
dec
jne
int3
iret
jp
inc
cmc
ret
aaa
sub
and
dec
mov
sarb
enter
sub
jp
iret
scas
sub
outsl
outsl
pop
or
cmp
sbb
jnp
lods
or
pop
sub
cmp
outsl
push
mov
test
mov
andl
pop
cwtl
adcl
test
andnps
or
jns
scas
pushf
inc
out
sub
jle
jle
insl
cwtl
mov
or
fisttpll
arpl
ljmp
andl
or
ja
into
jl
negb
inc
insl
dec
push
push
test
sbb
xor
mov
dec
xchg
arpl
lock
test
jecxz
imul
mov
sahf
cld
rorl
fstps
sti
out
stos
push
xchg
xor
in
dec
into
test
scas
in
xlat
jbe
sbb
sub
xchg
mov
sub
add
sbb
push
mov
add
cs
sbbb
push
adcb
sarb
clc
mov
jo
subl
xor
into
inc
mov
jbe
sbb
mov
enter
push
ds
jge
hlt
mov
mov
enter
add
inc
fcoms
lods
shlb
ljmp
cmp
inc
dec
fidivl
std
cmpsb
xchg
jnp
mov
outsb
movsb
divl
add
jb
xor
jnp
mov
mov
sarb
dec
and
jb
sub
test
in
fnstsw
ret
adc
cltd
sbb
imul
leave
cmp
and
push
inc
data16
cmp
mov
into
rorb
ljmp
arpl
addr16
and
fcomi
and
loopne
jg
xchg
sub
adc
sbb
arpl
pop
repz
xchg
repz
jae
dec
dec
loop
adc
dec
sub
jp
and
sbb
nop
sub
icebp
mov
mov
jmp
notl
jmp
xorb
and
loope
sub
pop
test
cs
nop
sbb
loopne
movsb
loope
lcall
mov
xchg
adc
sub
and
cltd
sbb
pop
sub
mov
test
mov
int3
sbb
mov
cs
jno
sbb
jmp
into
add
or
push
dec
mov
sbb
adc
and
fiadds
cmpb
fdivrs
xor
lret
mov
sub
imul
lahf
mov
rol
popf
lea
adc
dec
add
andl
push
sbb
inc
jns
pop
shl
push
fadds
xor
and
repz
jmp
cmp
jl
aas
mov
mov
dec
sbb
xor
call
or
pop
jecxz
sub
cmc
out
aaa
in
imul
sbb
mov
rcll
lcall
xchg
mov
sbb
in
iret
add
jns
gs
cld
nop
mul
dec
sti
imull
mov
cmp
cmp
pop
test
pop
or
push
jns
dec
lock
mov
aas
fdivrl
cmp
or
and
js
push
dec
pop
and
enter
cli
jmp
popa
pusha
dec
or
pop
icebp
jne
xchg
cmpsl
clc
pushf
test
jge
jmp
cmp
in
in
inc
cmpsl
or
rcrl
xor
imull
nop
jbe
loopne
mov
pop
and
in
mov
and
stos
call
mov
push
test
fistpll
lret
aad
sub
fmuls
jnp
das
push
mov
ljmp
cmp
add
lcall
add
cli
xchg
cmp
push
cmpsb
and
icebp
loope
shll
sub
sub
lret
or
rorl
push
inc
mov
mov
adc
insl
movsl
in
pop
aam
pop
inc
lret
pushf
jge
fcmovnu
add
scas
repnz
stos
sbb
shrb
inc
inc
ret
cmpsl
xchg
jbe
push
adc
shl
inc
fmuls
in
dec
ds
xchg
leave
out
adc
adcl
mov
sbb
rol
fdivl
pop
jecxz
adc
mov
or
mov
in
and
dec
mov
mov
inc
ja
push
mov
jecxz
inc
ljmp
ss
mov
into
loop
inc
jno
fs
xchg
fcompl
push
mov
xor
xor
bound
push
inc
movsb
adc
nop
in
or
leave
jae
out
sbb
ss
sbb
or
mov
mov
inc
jae
fsubrl
mov
and
cmp
repz
scas
test
xlat
cmpsl
sub
loopne
andl
cmpsb
jecxz
cmpsb
add
push
das
repz
mov
adc
scas
sbb
jl
sbb
out
cmpb
xor
out
jecxz
push
push
out
and
or
push
xchg
ret
xlat
outsb
test
sarb
mov
inc
out
jnp
repz
xorl
adc
jne
fildl
int
xor
lret
xchg
into
ret
lds
adc
mov
test
add
imul
adc
fsubrs
xor
xor
adc
dec
out
adc
ficompl
jns
dec
dec
cmp
clc
stc
xlat
arpl
enter
inc
in
ljmp
xor
adc
enter
xchg
repz
lds
jnp
andl
je
das
mov
xchg
scas
xor
popa
div
out
in
lret
clc
sbb
sbb
xchg
jb
aad
loope
popa
data16
sbb
push
pusha
xor
inc
loopne
pusha
jo
fidivrs
pop
mov
sub
jnp
jns
pop
ficomps
xor
fs
movsb
mov
xor
and
jmp
inc
outsb
xor
lcall
dec
adc
lahf
repz
fsubs
dec
push
adc
and
repnz
push
int3
mov
mov
jo
mov
inc
adc
sub
mov
in
cmpsb
fstl
jne
xor
stos
lret
out
mov
test
xor
pop
daa
cmpsb
repz
addr16
mov
sahf
aas
xchg
aad
and
mov
rcl
cmp
lret
mov
pop
insb
addr16
insb
movsl
mov
cmp
cmpsb
or
ja
inc
into
rcr
cltd
arpl
mov
pop
sti
lds
sbb
popa
lret
fidivs
cli
jp
push
ds
jp
jno
jl
insb
pop
test
sbb
arpl
jbe
pop
mov
es
xor
iret
shr
clc
push
jns
cmp
xor
in
in
push
sub
das
mov
adc
xor
movsb
add
xchg
lret
hlt
sahf
repz
pop
aas
inc
jmp
push
cmp
jmp
nop
push
xchg
push
aad
sbb
jo
dec
clc
push
cmp
push
insl
mov
dec
ror
arpl
push
push
push
adc
mov
lret
popf
loop
add
cmp
xchg
jno
imul
test
xor
lret
dec
arpl
mov
ret
scas
dec
xchg
enter
fnstsw
or
add
mov
les
push
push
sbb
mov
jg
leave
sub
pop
add
add
xor
adc
andl
inc
push
imull
repnz
jb
cwtl
add
push
mov
sbb
or
jns
sti
cltd
adc
xor
sub
jp
in
xchg
popa
mov
scas
mov
inc
aad
sbb
xchg
sub
pop
iret
sbb
and
mov
test
loope
iret
pop
jp
push
and
or
add
mov
sub
outsl
fwait
into
mov
push
add
stos
ljmp
adc
push
mov
cmpsl
adc
dec
mov
loope
in
mov
add
lahf
shl
stos
xchg
push
loopne
mulb
xor
ret
mov
pop
sbb
xchg
push
inc
xor
aam
fwait
enter
push
pop
or
mov
inc
xchg
and
not
pushf
add
cli
enter
jle
jg
shlb
das
jns
daa
sbb
enter
flds
clc
cli
inc
sub
mov
mov
add
in
pop
or
xchg
inc
mov
mov
xor
and
xchg
popf
add
jmp
push
int
iret
or
push
xor
or
insb
cwtl
inc
scas
repnz
shl
lahf
icebp
push
dec
push
jl
bound
fcoml
shlb
rorb
out
sbb
mov
xchg
jecxz
test
adc
sub
in
pop
mov
cmpsb
push
pop
mov
push
xor
addr16
pop
mov
add
fisubl
dec
xchg
mov
stc
fisttps
arpl
es
iret
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
dec
pop
push
daa
in
adc
and
mov
mov
adc
loopne
dec
xor
mov
mov
or
add
mov
push
jle
mov
adc
jns
fbstp
xchg
scas
repz
inc
lods
and
sbb
inc
mov
subl
ret
iret
or
sbb
and
imul
loope
pushf
stc
insl
mov
pmuludq
and
fildl
or
test
testb
mull
mov
mov
pusha
xchg
push
imul
popf
pop
lret
fnsave
cli
sub
test
inc
dec
xchg
and
sub
dec
out
es
outsl
call
testb
mov
sub
jb
dec
sub
dec
xlat
cmpsb
jmp
stos
add
mov
xor
call
scas
xchg
sub
or
out
shlb
jae
pop
and
push
sub
add
pop
arpl
jb
sbb
mov
arpl
and
and
pushl
imul
sub
push
mov
rcrl
stos
scas
mov
sti
outsb
test
cmpsb
imul
lret
fdivrl
test
add
mov
imul
inc
mov
xor
adc
in
aaa
mov
fisubrl
add
or
lods
ds
dec
pop
insl
jl
mov
fpatan
sbb
imul
cmc
push
int3
push
movsb
fcoml
fistpll
test
fs
bnd
sahf
hlt
out
xor
pop
cmpsl
outsb
enter
test
dec
and
xchg
aad
ret
lods
push
lahf
pop
dec
pop
push
outsb
fnstsw
aad
data16
cmp
dec
inc
push
push
pmaxsw
or
dec
cld
cltd
fwait
jns
xor
cwtl
adc
mulb
sbb
adc
movd
pushf
and
data16
fidivrl
dec
stc
sbb
test
mov
add
lods
addr16
dec
mov
sub
inc
push
aam
pop
adc
add
sub
jne
xchg
and
divl
xor
adc
pop
faddl
pop
jle
sbb
push
leave
xchg
lret
pop
es
cmp
outsb
shld
js
stos
addr16
mov
pusha
mov
dec
mov
sbb
xchg
xchg
xchg
ud2
xor
out
fcmovu
mov
or
stos
xor
xlat
mov
adc
pop
stos
jecxz
jns
cmp
inc
sbb
enter
outsl
test
dec
mul
sahf
sbb
movsb
fnstsw
sub
inc
pusha
sti
dec
adc
pop
inc
mov
mov
push
xlat
adcl
gs
xor
scas
divb
xchg
jle
inc
xchg
movsb
mov
dec
cli
push
sar
add
mov
pushf
cmp
jg
jmp
idivl
jb
cmc
jmp
mov
insb
stc
and
push
leave
push
dec
jbe
mov
imul
int
fistl
into
xor
insb
aas
push
add
jbe
add
fistpl
mov
sti
push
jno
or
add
pop
mov
out
movsb
dec
push
fsubp
push
out
push
mov
mov
jle
mov
pop
aaa
cmp
pop
jo
jg
sbb
ret
shlb
add
rcl
jmp
cmpsl
popf
scas
inc
sub
int3
repnz
hlt
push
lmsw
into
mov
and
dec
shrl
hlt
jo
ljmp
inc
jb
jmp
xchg
push
adc
inc
cli
insl
and
adc
fiadds
insb
xor
stos
adc
xchg
dec
inc
lea
jb
adc
push
jbe
jbe
fists
push
push
rorb
arpl
mov
inc
stc
push
test
aam
mov
and
pop
inc
xchg
icebp
pusha
lcall
jne
movsl
or
push
faddl
lcall
xlat
sub
gs
cmp
mov
jmp
fsubrs
and
or
dec
stos
or
leave
dec
inc
jg
loope
fmuls
mov
mov
arpl
or
aad
mov
testb
inc
xor
inc
gs
call
addr16
sbb
pop
jle
jg
mov
hlt
hlt
mov
cmpsl
xchg
mov
pop
sbb
ds
ljmp
add
or
jno
xchg
inc
fsubrs
cmp
push
mov
scas
dec
mov
scas
sarl
leave
dec
xchg
jns
shrb
inc
fsubs
icebp
dec
es
push
sti
add
dec
iret
cmp
movsl
and
cmp
and
fsubl
aas
mov
dec
repnz
repnz
je
push
inc
fildl
loope
popa
lods
enter
arpl
mov
pop
adc
aad
jno
loop
add
in
bndstx
mov
mov
xchg
lret
andb
xor
sub
orb
jnp
mov
fs
inc
mov
nop
pop
adc
call
idiv
inc
loopne
test
loope
fsubs
push
movb
stos
inc
outsl
jmp
add
push
mov
and
mov
jg
push
sti
mov
in
rcl
xchg
push
xor
fstl
test
sub
sbb
mov
jne
mov
xor
add
lds
ret
add
xchg
scas
jg
mov
hlt
gs
jo
and
nop
sbbb
sbb
arpl
leave
cmp
sub
ds
jmp
add
stos
fstpt
mov
jecxz
adc
je
shl
inc
pop
mov
xor
inc
cmp
fidivl
faddl
lds
xchg
xor
rcr
arpl
xchg
aad
cs
push
lahf
jbe
cmpsb
sub
leave
xchg
pushf
xlat
bnd
lcall
sbb
sbb
adc
mov
aas
mov
jle
in
or
sbb
fcmovbe
add
loop
or
scas
rorl
inc
repnz
xor
out
outsl
sbbl
cmp
repnz
ljmp
push
mov
mov
mov
dec
test
xchg
push
data16
jne
das
push
xor
pop
lock
sbb
mov
adc
jl
cmpb
jl
fwait
ljmp
add
cmp
jae
lret
xor
adc
adc
test
xchg
pop
add
rclb
sub
sbb
std
je
dec
or
mov
imul
lods
and
mov
arpl
in
icebp
and
and
add
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
inc
imul
mov
pshufw
mov
loope
mov
and
out
test
movsb
pop
loopne
insb
xchg
and
xor
xlat
hlt
jge
sub
addr16
mov
fcmovb
fst
pop
mov
shrb
jg
adc
in
lret
es
lcall
scas
sbb
mov
in
imul
push
jle
in
jnp
inc
into
push
stos
push
stos
adc
adc
and
hlt
cmp
loope
popf
jnp
aaa
fwait
push
cmpsl
data16
out
mov
out
push
mov
idiv
jmp
fadds
int3
xchg
gs
xchg
pop
lret
mov
rcrb
mov
fsubl
insl
in
insb
fidivl
cmpsl
sub
loope
push
add
roll
pop
inc
sub
andl
or
xchg
mov
mov
out
mov
sub
mov
in
lea
inc
jmp
int
clc
pushf
or
or
mov
shl
cmpsb
mov
popa
mov
or
stc
sbb
xchg
test
int
rorl
mov
idivb
inc
xchg
mov
fs
jne
and
out
pop
fiadds
mov
sub
cmp
es
xchg
int3
xor
lods
cwtl
int
rep
insb
jmp
cmp
nop
mov
jmp
adc
mov
push
aas
inc
adcb
dec
mov
movl
cli
jg
into
in
cmp
in
mov
icebp
push
clc
mov
xchg
arpl
push
jge
shll
adc
jg
icebp
clc
das
mov
push
test
lds
jo
cwtl
in
adcl
xchg
ljmp
and
mov
aas
lcall
dec
fisttpll
dec
xchg
mov
push
dec
notb
jp
pop
loop
and
cmc
mov
outsl
mov
adc
stc
sbb
pop
pop
push
jne
push
push
push
aaa
lret
into
and
dec
xor
stos
mov
jne
jecxz
rolb
repnz
ret
in
loope
js
in
mov
inc
jge
scas
gs
sub
fs
dec
push
dec
push
icebp
mov
inc
pop
push
cmp
add
push
int3
mov
mov
xor
lods
insb
fidivs
loop
adc
cmp
cwtl
or
pop
sti
in
add
hlt
subb
cld
cmc
dec
stos
push
sub
neg
jl
adc
add
mov
rcl
push
roll
adc
sub
repnz
sub
jae
out
lret
inc
loope
xor
invd
push
shll
dec
outsb
xchg
inc
fwait
jg
sub
or
add
jo
cmp
and
mov
jmp
js
or
testl
jge
iret
mov
sbb
loope
cmp
pop
ljmp
sub
push
pop
imul
cmc
test
push
inc
push
ljmp
xorl
pop
ficompl
scas
aad
je
sub
lds
cmp
or
lahf
popf
adc
adc
dec
jmp
cli
push
or
cmp
cmp
jp
push
push
dec
mov
mov
cmp
cmpsb
xor
les
sahf
pop
popa
adc
daa
push
testb
push
mov
aaa
xor
jg
and
sub
call
jle
test
jb
dec
jge
xchg
or
cs
or
push
push
shl
mov
dec
adc
mov
aad
mov
cwtl
js
sarl
idivb
mov
into
push
jle
pop
pop
pop
sub
test
cmp
push
cmp
sbb
es
sub
dec
repnz
push
imul
cmp
aas
and
mov
repz
jbe
out
push
lods
or
pop
mov
out
dec
arpl
xchg
mov
xlat
fstsw
orl
push
in
repz
jno
mov
dec
cwtl
add
mov
jnp
lahf
jl
fs
mov
mov
xchg
outsl
data16
and
cmp
add
inc
inc
outsb
insb
ficompl
sub
pop
aas
sbbl
inc
inc
int
pusha
rcr
mov
adc
sbb
add
xor
and
sarb
rcr
psrad
dec
or
pushf
pop
nop
or
adc
addr16
jo
push
adc
outsl
fistpl
jae
inc
rol
fwait
and
mov
mov
pop
dec
add
xor
mov
iret
jne
xor
jle
mov
sbb
mov
clc
pop
std
mov
push
enter
mov
push
sbb
cmp
sbb
or
mov
xchg
std
mov
outsb
mov
mov
fmulp
clc
xchg
pop
lret
sbbb
jp
in
hlt
cmp
gs
xor
lret
xor
and
push
or
jle
shlw
xor
lds
jne
mov
jne
mov
pop
pop
sub
push
cmc
mov
add
push
dec
inc
push
js
or
mov
xchg
loope
and
xor
mov
lea
lret
js
mov
jge
sub
or
mov
lahf
jecxz
rol
jmp
jns
mov
sti
scas
cmpb
mov
push
sarb
fs
push
jb
repz
into
jl
fnstsw
out
hlt
push
sbbl
int
nop
and
fnstsw
sarl
inc
fstpl
int3
adc
xor
xchg
sbb
push
sub
cmp
inc
push
addb
lea
popf
fldl
add
inc
pop
dec
sub
repnz
fmulp
add
out
and
cmp
dec
jnp
in
mov
fcmovb
int3
cmp
mov
icebp
fstl
and
fistpll
and
je
daa
or
mov
push
add
sub
orl
dec
icebp
cmp
cmp
add
sbb
cmpsb
imul
sbb
lret
loop
dec
fwait
je
into
inc
addr16
lret
popa
add
push
jb
aaa
inc
push
insl
sahf
pop
mov
add
into
and
mov
lret
inc
bound
mov
push
pop
pop
sahf
jo
and
jmp
add
jge
shl
inc
xchg
jns
ds
or
lods
hlt
jl
rolb
adc
popa
icebp
cmp
or
xchg
ret
stos
gs
clc
xchg
mov
jmp
cmc
xchg
cmp
push
mov
adc
int3
push
inc
int3
adc
and
add
pop
sbb
xor
adc
into
cmp
and
adc
stos
sahf
ret
sti
adc
data16
adc
jnp
leave
into
lods
dec
daa
pop
xchg
test
cmpsb
mov
dec
scas
xor
sbb
mov
aaa
int
xchg
mov
lods
and
mov
pushf
ss
push
inc
jns
fnstsw
cmp
pop
out
hlt
imulb
jmp
inc
pop
mov
negl
aaa
ret
xor
in
xchg
rcrb
outsl
std
test
out
out
loope
cmp
fcmovnbe
or
arpl
ljmp
insl
in
and
lds
push
or
and
cmp
shrb
mov
out
jge
iret
pop
iret
mov
jecxz
jno
incl
div
jb
xchg
pop
jne
push
and
push
and
xor
cmpsl
or
adc
mov
sbb
dec
lods
mov
and
lods
pushf
ss
ds
inc
testl
sbb
adc
mov
pushf
dec
adc
addr16
xchg
push
add
add
pop
fsts
je
mov
add
inc
xchg
mov
and
fcomi
loopne
lods
sahf
mov
jno
jae
mov
icebp
dec
jg
push
js
xor
push
xor
hlt
shr
xor
icebp
aam
xchg
in
ret
and
mov
or
into
iret
pop
loopne
mov
jge
mov
mov
stos
test
arpl
outsb
mov
imul
or
add
repnz
xor
mov
lods
mov
pop
cmpsb
sub
data16
enter
mov
dec
imul
hlt
ds
fmuls
int
xchg
test
push
rol
sarb
test
call
cli
cltd
cmpsb
jg
lods
fmull
mov
adc
aas
push
jne
cli
mov
out
stc
sti
cmp
inc
mov
mov
sahf
test
fsubs
dec
xchg
mov
lods
lea
mov
mov
fcomp
subb
addr16
add
pop
mov
sarb
and
push
cld
mov
mov
mov
adc
rorb
scas
pushf
xchg
test
xchg
dec
out
popf
mov
inc
cmp
cs
xchg
sahf
gs
mov
pusha
mov
inc
push
dec
sbb
cwtl
aaa
mov
loope
or
mov
adc
cwtl
loope
neg
pop
in
dec
add
mull
adc
arpl
fucompp
data16
xor
lock
or
pop
test
push
or
jb
mov
popf
sub
lods
out
lds
dec
sub
divb
push
mov
cmc
sub
and
pop
sub
pushf
xor
pop
test
rorl
imul
lret
arpl
or
dec
pusha
xchg
push
scas
popf
mov
jmp
mov
sbb
js
xchg
lock
push
lret
lea
in
pop
pop
cmp
imull
loopne
or
scas
lret
xchg
add
pop
loopne
enter
iret
enter
rorl
mov
cmp
scas
dec
sbb
xchg
adc
repnz
xor
mov
xchg
add
pushf
jb
pop
mov
dec
push
out
jecxz
cld
and
arpl
fadds
pop
and
pop
mov
subl
shrb
push
dec
adc
outsl
aad
add
inc
lahf
and
nop
mov
jnp
in
sub
sar
int3
in
add
mov
xlat
fwait
jmp
sarl
push
out
mov
sub
in
sbb
xor
jns
lret
adc
xchg
push
inc
shlb
shr
sbb
das
movlps
mov
xchg
adc
jmp
enter
aaa
dec
xchg
xor
push
imul
insb
inc
pop
shrb
test
enter
push
and
out
xor
jno
enter
test
sahf
xchg
enter
test
push
ret
mov
pusha
lret
xchg
out
fucom
fistl
jp
call
fdivrs
iret
lock
into
mov
insb
cmpsb
cld
hlt
cmp
rcrb
outsl
sbb
xor
arpl
push
and
jge
push
jno
in
inc
mov
bnd
push
vmovlpd
xchg
push
faddl
xchg
jbe
sub
or
xor
out
retw
insl
cmpsb
addr16
fdivrs
adc
rcrb
push
or
addb
inc
dec
std
stc
lds
mov
outsl
xlat
mov
sbbl
cmp
xchg
pop
frstor
jb
sub
pop
inc
out
jno
mov
cwtl
or
add
ficomps
js
call
inc
popa
cli
imull
fiadds
fnsave
pushf
mov
mov
cmpsb
inc
outsl
mov
cmp
jbe
cs
adc
push
or
cld
inc
sub
adc
inc
sbb
add
xchg
jl
and
push
daa
inc
pusha
addr16
ljmp
inc
nop
inc
mov
pop
push
push
arpl
mov
fs
and
xchg
loopne
mov
gs
data16
cwtl
jp
mov
push
mov
stc
movsl
sbb
in
add
mov
xor
test
repnz
cmp
jmp
filds
les
sahf
sub
ja
imul
in
mov
ljmp
shrb
cmp
pop
out
aaa
push
dec
sub
and
in
dec
test
xor
or
pop
dec
pop
sub
pop
lahf
mov
mov
stc
dec
stc
loop
call
int3
nop
movsl
pop
sub
fsts
jno
push
cmc
outsb
lret
mov
jnp
sarb
push
add
movsb
sarb
cmp
in
mov
and
adc
pop
test
aam
mov
js
add
subl
or
sbb
inc
sub
enter
inc
lahf
aad
mov
add
xor
cli
sub
in
pop
iret
inc
out
push
inc
mov
inc
cmp
scas
push
sub
leave
repnz
cmpb
and
cmc
lods
popa
or
pop
or
inc
cltd
xor
mov
mov
mov
mov
pop
push
mov
insb
sbbb
das
mov
lcall
and
ret
into
cmp
popf
xchg
lea
daa
push
push
ret
andl
call
mov
nopl
sarl
mov
mov
adc
daa
and
bound
ja
xor
jae
add
inc
cmpsl
jo
shrb
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
mov
paddd
pop
mov
push
add
loop
fsub
xchg
scas
jl
xor
bound
jp
in
rolb
pop
dec
stc
and
test
fsts
jbe
inc
gs
in
sahf
push
mov
out
into
xchg
movsb
jno
rcll
jne
dec
xchg
push
push
addr16
sbb
rolb
clc
out
popa
ja
sbb
and
test
dec
rcrb
rorb
aas
jmp
outsb
cwtl
repnz
cmp
repnz
cmp
jg
outsb
mov
mov
movsl
pop
rclb
dec
test
insl
aaa
jp
jle
cmp
mov
push
xchg
call
xor
lret
aad
aad
mov
loope
xchg
adc
cmp
int
out
mov
mov
int3
mov
jl
push
lock
fmull
pusha
movsl
mov
jne
icebp
xor
scas
adc
jle
sarb
sub
insl
ror
or
push
xchg
fwait
cltd
xchg
incb
sti
jns
sub
sti
mov
test
ja
mov
out
ds
in
rorb
mov
sahf
pop
orl
push
in
pushf
mov
icebp
cmp
xchg
pop
mov
fnsave
arpl
jo
xor
adc
icebp
jle
gs
fsubr
inc
aas
icebp
loope
js
mov
scas
cmp
jg
fs
push
lcall
adc
ja
cmp
mov
mov
sbb
pop
iret
dec
sbb
aam
inc
fcomps
adc
hlt
cltd
xchg
xchg
repnz
mov
and
dec
fbld
fs
add
lods
imul
repnz
stos
mov
mov
ljmp
aam
and
cmp
ss
sub
cs
iret
sbb
inc
int
into
loop
mov
jo
stos
lods
mov
sub
adc
mov
bound
mov
xor
repnz
out
xor
aaa
sbb
xlat
sub
stc
mov
daa
je
in
xor
inc
dec
mov
fimull
xchg
repnz
nop
jg
out
out
fstpl
mov
mov
subb
sbb
cmovns
in
pop
push
inc
movsb
test
hlt
push
enter
sbb
lcall
pop
xchg
pop
cmp
mov
jno
adc
inc
movhps
daa
mov
icebp
sbb
ret
xor
jecxz
mov
popl
xchg
mov
xor
or
lea
fnstenv
inc
cmp
roll
lahf
sti
dec
xor
dec
leave
mov
popf
loop
clc
divb
pop
push
mov
sub
lret
or
jl
pushf
push
rclb
sub
push
fwait
inc
ljmp
into
lock
mov
xchg
call
arpl
xchg
lods
inc
sbb
cmp
push
je
movsl
mov
xor
fcmovnbe
cmp
add
adc
adc
mov
add
mov
fcmovb
dec
add
sub
cmp
sbb
repz
popa
dec
divb
shrb
and
mov
rol
orl
mov
daa
divl
sub
mov
or
rcll
mov
scas
sbb
dec
jecxz
movl
pop
rcrl
push
mov
cmp
int
sub
in
lods
adc
out
jne
pop
lahf
cmp
pusha
out
insb
mov
add
sti
and
aad
nop
xchg
or
aas
mov
or
xchg
pop
in
jge
cmp
adc
mov
lret
cs
jno
mov
sub
xchg
mov
popa
fwait
xlat
cmpsb
push
dec
imul
or
push
push
outsb
xchg
jle
sbb
adc
ljmp
push
xchg
pop
vphadduwd
in
es
jo
pushf
cmp
leave
jbe
mov
stos
rolb
fsubl
xchg
mov
mov
cmp
stos
and
mov
sub
pop
or
sub
xor
push
stos
add
jp
adc
sbb
into
dec
fisubl
xchg
jno
cmp
mov
jae
mov
test
loope
test
stc
dec
mov
std
jb
sahf
pop
and
push
and
jl
xor
push
xor
or
mov
ljmp
push
xlat
mov
jae
les
repnz
cmc
cmp
xchg
outsl
shll
mov
pop
dec
enter
mov
dec
fildll
cltd
xchg
sarb
loope
insb
cmp
addl
incl
xor
and
mov
cmpb
popf
mov
movsb
test
dec
sbb
js
adc
push
repz
xchg
pushf
andl
dec
sbb
loope
xorb
xchg
mov
and
mov
sbb
mov
movsl
mov
add
push
les
mov
jns
and
pop
lock
sub
xor
iret
jle
push
mov
pop
cmpsb
xor
push
xor
in
fbstp
mov
mov
ljmp
aam
cmpsb
mull
jbe
fildll
lret
fsub
flds
mov
dec
mov
lret
shl
insl
out
pop
test
xchg
stos
xor
add
leave
inc
test
push
movb
out
add
sbb
inc
dec
add
adc
jo
cmp
lods
mov
and
dec
and
imul
mov
movsl
mov
cs
icebp
lret
jo
jo
cmp
sbb
push
mov
rcrb
aad
cmc
popf
mov
cmp
mov
ficomps
imul
leave
fildll
cmc
lahf
cmpsl
cmp
push
test
insl
daa
and
and
sbb
push
ret
jne
into
push
push
and
hlt
xor
mov
sbb
fs
icebp
lahf
loop
stos
daa
jnp
and
rclb
aad
fdivrl
outsb
sub
test
into
pop
inc
inc
mov
push
lahf
mov
sarl
jns
nop
gs
xchg
inc
pop
or
out
imul
sub
sti
mov
mov
pop
lret
cli
pcmpeqd
xor
inc
ss
sbb
mov
jle
movsb
lods
test
push
jmp
insl
xchg
inc
sbb
mov
xor
test
push
sbb
mov
cwtl
mov
cmc
in
sahf
mov
in
mov
and
and
jmp
jne
add
subl
xchg
pop
lds
addr16
and
std
imul
mov
les
rorl
loope
pop
dec
lock
jmp
pop
xchg
nop
dec
xchg
sbb
inc
xor
popf
mov
sbb
and
xlat
xor
cmpsb
inc
mov
jb
imul
call
out
sub
test
scas
cmpsl
fdivrl
or
add
shrb
lods
jno
add
inc
pop
out
daa
imul
mov
movsl
pop
xchg
mov
mov
mov
popf
mov
lahf
movsl
rcrl
shr
lods
xchg
adc
jo
sar
inc
push
ficomps
fildll
lret
je
call
jae
aas
and
mov
stos
sbb
mov
scas
pop
into
repz
fs
subl
pop
push
in
push
push
loopne
pop
cmp
js
xlat
mov
cltd
fwait
cmp
xchg
sbb
mov
aas
mov
adc
in
cld
or
jmp
fadds
mov
sbb
movsl
test
xchg
psrad
xor
cmp
and
fmulp
leave
xchg
mov
pop
out
jne
into
add
or
imul
repnz
mov
popa
fmuls
mov
sbb
add
mov
or
jno,pt
ja
out
shl
roll
jb
xor
jnp
mov
shrl
outsb
and
adc
mov
mov
jmp
in
popa
push
sub
and
push
jbe
xor
and
out
sbb
cmp
and
jbe
in
in
out
xor
mov
adc
stos
cmp
loop
xor
jo
ss
push
dec
mov
repnz
aad
adc
out
xor
fidivrs
push
repz
push
cli
outsl
rcrl
mov
xchg
dec
add
fisubl
pop
mov
jp
cmpsb
jbe
dec
out
mov
not
jnp
mov
rolb
iret
mov
and
add
push
out
fs
mov
add
imul
sub
stos
pushl
imul
mov
stc
jns
push
pop
aaa
enter
sub
ret
sahf
lea
imul
imulb
in
in
sbb
test
jae
fidivs
dec
sbb
stos
dec
in
rcrb
ds
mov
mov
or
jg
lods
mov
xchg
cs
jl
sbb
xor
mov
cmc
adc
dec
xchg
push
sub
mov
retw
dec
and
adc
cmp
mov
and
xchg
add
adc
push
mov
jmp
jmp
aas
out
inc
outsb
das
movsb
aad
jns
jl
push
scas
lods
add
shr
sub
in
cwtl
or
insl
lcall
push
loop
imul
out
testl
dec
mov
mov
cmpxchg
fwait
push
push
push
jp
mov
mov
sbb
adc
add
sbb
mov
ljmp
jge
pop
mov
inc
cmp
in
inc
jnp
push
jbe
push
orb
cltd
xchg
cmp
hlt
aaa
outsb
xchg
inc
popa
nop
sbb
not
ds
cmpps
mov
jo
dec
sub
gs
add
ss
jns
jb
loop
add
add
xchg
xor
std
mov
push
fisttpl
cli
sbb
or
mov
movsl
push
mov
adcb
inc
xor
clc
and
into
lret
mov
les
das
icebp
jae
ss
push
fnsave
jne
cmc
xchg
jae
pop
iret
adc
into
div
test
mov
cwtl
test
push
js
aam
scas
cmp
pop
cmp
inc
push
jg
xor
negb
sbb
mov
mov
jne
cmp
aad
divb
cld
nop
xchg
inc
into
and
xlat
jge
lcall
sbb
mov
test
inc
mov
lret
push
mov
std
cltd
fldenv
cbtw
sahf
or
push
stos
loopne
jb
xchg
inc
stc
pop
or
sahf
xlat
pop
inc
pop
aaa
mov
sti
inc
mov
gs
out
xchg
aas
sti
jbe
or
es
xchg
mov
xchg
sub
shlb
lea
xor
es
xchg
jno
pop
push
xor
sahf
xchg
or
push
and
sub
int3
popf
call
pop
sbb
addr16
icebp
in
lcall
ds
in
cs
push
mov
push
int3
inc
inc
sbb
push
jae
call
rcll
dec
subl
jge
xor
je
jb
mov
dec
rol
sbb
jae
xor
push
scas
cli
xchg
inc
ret
sub
mov
inc
test
push
pop
adc
orb
pop
or
sbb
movsb
lods
loope
hlt
incl
cmc
adc
pop
adc
cmp
aas
mov
and
lret
mov
js
imul
data16
ja
shrb
jg
lcall
in
ja
cld
sub
xor
xorl
push
mov
lea
dec
fdivrs
fld
adc
sbb
std
push
xchg
shl
inc
and
daa
sti
cli
lods
movsb
cmp
pushf
shrb
sti
cltd
sarb
jmp
dec
pop
jecxz
xchg
sub
jp
lea
adc
std
mov
cs
repnz
push
push
cmp
mov
push
mov
sbb
xchg
add
mov
dec
mov
fs
inc
jns
enter
pop
cmpsl
sub
mov
add
cli
pop
or
sbb
sub
fs
repnz
mov
ret
mov
mov
mov
add
pop
or
loope
clc
fdivrl
shrl
pop
notl
xor
sbb
ljmp
movsl
fdivrl
jae
popf
pop
lahf
test
cmp
test
nop
jmp
xor
imul
jno
sahf
aad
or
xchg
call
imul
jb
jo
cmc
cmp
cmp
or
stos
pusha
fs
and
or
jecxz
repnz
push
arpl
xchg
cmp
adc
std
arpl
popf
sub
xlat
insb
int3
das
xor
xchg
leave
loopne
lret
orl
jl
inc
add
popa
pop
jl
sbb
rcrb
mov
int
out
loope
aaa
loop
sarl
ds
push
pusha
mov
call
sti
dec
pop
cmp
fisttpl
mov
push
ja
mov
add
mov
add
jmp
nop
shrb
sub
addr16
sub
xchg
xor
dec
js
adc
and
jae
dec
add
shrb
pop
lods
xor
mov
subl
lret
mov
mov
cld
stos
mov
mov
mov
inc
scas
adc
mov
mov
iret
push
mov
loop
mov
add
add
push
push
mov
enter
test
stos
pop
repnz
xor
stos
icebp
jmp
insb
xchg
mov
lock
and
pop
pop
jmp
ljmp
test
mov
je
std
pop
jne
or
push
call
outsb
cmp
dec
dec
testl
aad
mov
adc
push
mov
jecxz
fildll
imul
in
clc
in
ret
add
jnp
lcall
and
loop
bound
jo
inc
aas
fsubrs
lods
sub
adc
fldcw
pop
sub
push
xchg
or
cmp
iret
lods
jbe
add
mov
movsl
in
imul
aas
mov
imul
add
mov
xlat
push
mov
cli
dec
jg
les
dec
cmp
in
scas
test
ljmp
mov
sbb
inc
sbb
cmp
mov
or
inc
mov
scas
sbbb
cmc
push
outsb
inc
arpl
and
fnstcw
cltd
test
mov
stc
add
fistpl
call
lcall
lock
clc
and
outsl
inc
add
xchg
xor
jl
sbb
xor
dec
add
xchg
je
push
xchg
mov
sti
rclb
or
inc
call
mov
movsb
inc
cs
incl
aad
cltd
push
push
xchg
mov
xor
mov
rolb
imul
jle
mov
in
jecxz
lret
stos
stos
xchg
int
insl
loop
aaa
imulb
adc
cmpsl
rcrb
cmpsw
pop
mov
push
rcrl
sub
jp
mov
in
pop
inc
inc
adc
out
mov
clc
add
insb
xor
in
and
aam
sahf
mov
bound
test
cltd
scas
push
js
push
xor
pop
sub
scas
test
sahf
incl
xchg
sbb
fiadds
cmp
dec
data16
cltd
cmp
fucomp
push
pop
mov
sbbl
pushf
sbb
pop
sbb
into
jb
les
cmp
lods
fmull
sar
loopne
test
rol
les
pop
dec
and
pop
mov
push
aad
fistpll
nop
xchg
inc
xlat
inc
or
lret
lock
loope
mov
inc
sub
jmp
sub
ja
enter
data16
and
mov
lock
cmp
push
xchg
jmp
jb
mov
xchg
inc
jb
xor
outsb
dec
scas
mov
clc
out
mov
pop
fwait
and
ficoml
icebp
mov
data16
std
data16
jnp
sbb
pop
bound
push
xchg
sti
rcl
aaa
cmpsl
ljmp
sub
add
xchg
jmp
ret
and
xor
insb
mov
stos
test
mov
ror
fcompl
mov
fstpt
mov
std
pushf
push
test
push
pop
repnz
sbb
add
test
dec
sub
dec
call
pop
cmp
jle
jae
fcomp
sti
xor
roll
xchg
sub
add
hlt
sbb
shrb
sbb
mov
mov
mov
and
push
fstpl
inc
jnp
sbb
fisttpll
jns
les
mov
inc
das
push
enter
imul
mov
sti
popl
xchg
xor
fsubl
xor
dec
fwait
sbb
aam
out
ja
xor
push
push
into
or
adc
aaa
mov
fwait
inc
push
jecxz
adc
and
xchg
mov
adc
mov
jp
aaa
je
movsb
pop
cmp
jmp
xchg
sub
subl
clc
sahf
cmp
pop
pop
cmp
or
vrcpss
add
xor
daa
fildl
int3
gs
shr
xchg
cmp
addr16
mov
shrb
in
dec
sahf
xor
jne
push
dec
cmp
jg
into
ret
fsubl
mov
loopne
cmp
cmpsl
adc
rcl
mov
fidivs
cmpsb
mov
mov
sub
out
mov
jbe
jecxz
dec
div
mov
lds
xchg
imul
rorl
cmp
lea
mov
cmp
dec
sub
mov
cli
popa
inc
jl
jo
lock
js
jne
or
sbb
pop
xor
dec
arpl
xchg
sahf
in
push
fnstenv
lret
pop
sahf
fstpl
push
sbb
xor
shll
mov
ror
mov
int
sahf
int3
pop
and
xchg
cmpsb
sub
pop
pop
js
mov
push
pop
adc
test
xor
pop
imul
loopne
stos
dec
or
jmp
mov
mov
sbb
cmp
jmp
cmp
lods
rcrb
xchg
ret
add
adc
mov
mov
mov
out
jbe
sbbl
xor
mov
xchg
xchg
imul
adc
cmp
or
xor
jbe
dec
shrb
mov
jo
mov
pop
int
scas
mov
fs
xor
mov
inc
mov
punpcklbw
add
cli
xchg
sbb
push
jne
and
xor
cmp
xchg
jae
pop
sbb
and
mov
mov
mov
and
pusha
loop
jecxz
cs
pop
pop
mov
bound
fwait
cld
dec
cmp
mov
inc
pop
push
xchg
nop
movsl
jnp
imul
xor
lea
xor
lret
popw
frstor
or
push
pop
test
fldl
pop
popf
bound
cwtl
dec
fs
push
xor
jg
xchg
inc
lcall
lret
mov
jg
in
out
sub
ret
ret
push
sahf
ja
pop
pop
and
iret
mov
pop
sbb
push
insb
rcrl
arpl
jae
mov
outsb
and
repz
movsb
insb
lret
push
pop
scas
push
sub
movsb
fsubrl
sahf
inc
add
not
mov
mov
lea
std
or
das
iret
dec
das
push
xor
adc
cwtl
int
in
mov
jp
out
fst
lock
fstpl
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
sub
xchg
pminub
mov
ficompl
pop
psubb
and
cmc
mov
mov
shrb
push
cmpsb
cmp
push
jp
ss
push
lahf
or
jne
lods
movsb
into
push
adc
lods
xchg
jp
into
cld
aam
jp
int3
jae
adc
dec
add
adc
inc
mull
popf
test
pop
sub
daa
rclb
dec
xlat
std
jbe
out
shlb
fldl
test
es
push
ret
xchg
lds
mov
sub
cmp
dec
inc
sahf
xor
push
clc
pop
test
fimuls
loop
jae
cmp
and
dec
hlt
stos
fincstp
xchg
add
and
push
pushf
mov
shld
pop
pop
dec
ljmp
adc
fcmovnbe
sub
pop
dec
aas
inc
into
xchg
push
jecxz
xchg
or
push
sub
sub
aaa
pop
fstpt
ljmp
bound
mov
stos
cmp
adc
xchg
filds
mov
aas
sub
jae
pop
je
sbb
adc
sbb
int3
dec
test
pop
inc
je
loope
loope
xchg
pop
cmp
mov
addr16
out
stc
pop
jbe
xorl
jae
inc
shll
pop
mov
xlat
cmc
insb
mov
jns
clc
inc
inc
inc
adc
ret
cmpsb
daa
xor
ss
or
movsl
lods
xor
fnstenv
fidivl
mov
mov
add
xchg
jbe
and
lods
out
dec
mov
lods
xor
aam
imul
jl
xor
sub
mov
xor
push
pop
dec
icebp
and
sbb
or
or
push
int
or
mov
inc
sbb
mov
nop
inc
pop
addr16
sbb
arpl
int3
inc
stos
adc
xchg
cld
in
movsb
cli
jne
mov
je
filds
or
cmpsb
pop
fchs
mov
mul
cmp
mov
jmp
push
and
sub
jecxz
in
fisubrs
shrb
jle
dec
adc
dec
cltd
das
mov
sub
fists
mov
sbb
adc
xlat
cmp
and
cld
mov
in
lahf
push
pop
dec
cmp
add
mov
in
cmpl
popa
xorb
movsb
stos
push
fwait
lods
xchg
loope
decl
or
decb
jo
pop
jle
sub
inc
dec
push
dec
sbb
loope
dec
adc
push
sub
dec
test
std
mov
cmc
xlat
adc
mov
jb
lret
loope
ja
dec
and
pushf
mov
sub
mov
jbe
or
mov
add
cmp
cli
push
or
mov
mov
and
shll
push
dec
loope
push
mov
mov
lea
out
into
ret
outsl
repz
xor
sbb
testb
popf
ljmp
cli
jbe
cmp
in
aaa
mov
inc
inc
dec
clc
sbb
lahf
push
sbb
adc
xchg
rcrb
xlat
fmull
lods
sbb
lcall
push
lds
loope,pn
cmc
ret
js
cmp
lods
dec
bnd
push
push
add
imul
pop
enter
mov
outsl
push
movsb
aad
ja
add
and
sti
int3
add
movsb
loopne
xchg
xchg
loop
sub
lock
cs
sahf
push
xchg
mov
in
mov
adc
push
testb
xor
int3
mov
dec
jecxz
push
mov
add
xchg
test
imul
jno
or
push
mov
jns
decl
dec
fcomip
inc
aas
loope
into
mov
repnz
cmpsb
or
push
outsl
xchg
stc
mov
inc
dec
and
bound
pop
push
mov
adc
inc
cld
add
push
in
ret
add
mov
mov
stos
inc
clc
cmp
cmpsl
popl
aam
and
insl
adc
adc
imul
adc
jle
mov
xchg
roll
dec
repnz
loop
fldt
hlt
movsl
hlt
es
push
adc
dec
xchg
mov
ljmp
call
sub
add
inc
inc
sbb
in
mov
dec
pop
lret
jmp
or
ret
jne
push
push
xchg
popf
mov
ja
mov
xchg
and
add
out
mov
fdivrs
jmp
sbb
addr16
mov
adcb
xor
push
adc
dec
push
mov
mov
mov
xchg
repz
adc
fnstsw
push
pop
xchg
movsl
cmp
int
xchg
or
and
pusha
js
hlt
xchg
pop
cmp
pop
scas
movsl
or
mov
iret
add
dec
mov
out
dec
mov
cmp
dec
loopne
sub
sub
sbb
adc
push
push
cs
pop
loope
inc
out
push
mov
shll
push
or
push
and
mov
test
shlb
cmp
fdivrl
inc
pop
in
adc
stos
outsb
xlat
dec
pop
push
fstl
xor
fiadds
sub
daa
cmpsb
push
cs
and
xor
fwait
and
pop
ret
push
sub
iret
gs
lret
es
ret
jge
jmp
dec
pushw
push
ja
fstpt
lock
nop
out
inc
shrb
or
cmp
dec
mov
push
pop
adc
les
in
fcompl
sbb
pusha
mov
push
cmpsb
pop
outsb
and
mov
adc
mov
cmpsl
cmp
cmp
aam
fxch
mov
jae
jmp
arpl
mov
je
adc
ffreep
imul
out
out
insb
stc
mov
cmp
aaa
outsb
ja
enter
jb
mov
cmpsl
lock
lock
ret
rcrb
loopne
jp
cmpsb
inc
inc
jo
and
xchg
dec
push
mov
mov
leave
aaa
pop
mov
aas
sub
and
sti
lea
push
mov
xor
fsubs
fisttpl
fcmovb
and
ds
sti
lds
push
andb
sub
mov
add
pop
push
cltd
xor
dec
jne
aas
cld
or
inc
sbb
loope
sbb
inc
shrb
push
sti
in
mov
mov
cmp
jne
sbb
insb
movl
xchg
xchg
sti
sbb
xchg
out
repz
out
pusha
pop
add
mov
int3
sti
dec
mov
aam
orl
jl
movsl
fistpll
pop
and
xor
cmp
mov
push
xchg
int3
out
les
pop
fmull
hlt
sbb
int3
lret
jg
inc
pavgb
sbb
and
mov
adc
sbb
mov
push
inc
push
mov
mov
and
and
push
push
jmp
sbb
push
adc
xchg
int3
xchg
jg
xchg
cwtl
nop
adc
and
je
sbb
lods
aam
add
jbe
clc
cld
ret
inc
inc
cltd
push
and
dec
push
in
push
incb
mov
rorl
les
sbb
test
push
pop
cmpl
sub
mov
cmc
pop
push
cmpsl
push
mov
xchg
pushf
xor
jb
out
add
pop
mov
ljmp
test
mov
fwait
int
push
les
inc
add
das
push
hlt
xchg
mov
fsts
shl
push
pop
nop
cmpsl
imul
dec
xchg
adc
xorb
std
aam
sbb
sbb
pop
out
xor
fldl
add
cmpsb
push
inc
sub
pop
dec
jecxz
ds
cltd
sbb
mul
push
mov
mov
lahf
dec
mov
aad
aad
aam
cmp
out
fcompl
mov
call
mov
dec
test
dec
cltd
fwait
jmp
jle
shll
jmp
daa
insl
stc
mov
int3
ljmp
pop
orl
imul
js
stos
xchg
ds
push
mov
and
pop
xor
pusha
lock
divb
cmpsl
inc
inc
das
imul
mov
sahf
fsub
out
scas
aas
jmp
adc
fidivl
or
mov
scas
xor
mov
add
ret
stos
sbb
mul
mov
fiadds
je
mov
gs
lods
inc
lds
mov
pop
out
scas
fcomip
mov
cltd
mov
testb
and
repnz
mov
pop
loopne
cmp
insb
add
xor
gs
sahf
mov
adc
mov
xor
cmpsb
mov
ret
lea
sbb
xchg
out
jp
or
jp
cmp
sbb
int
call
adc
dec
xchg
dec
push
xchg
inc
cmp
sbb
jmp
xchg
jmp
cmpsb
jp
mov
leave
xchg
inc
add
mov
in
cmp
sub
mov
adc
pop
mov
into
sbb
rclb
sub
push
or
in
push
fsubrl
leave
cmp
push
sbb
push
and
mov
xor
lods
fwait
shlb
lods
lret
out
mov
sbb
add
jb
mov
fcoml
lods
lret
and
dec
adc
mov
add
sub
jae
or
sub
shrb
jo
dec
jo
scas
and
insl
xchg
movsb
inc
cmp
bound
inc
jns
cmp
mov
je
push
push
cli
rcrb
adcb
lods
in
mov
jp
stos
hlt
js
fists
adc
aad
adc
lret
mov
mov
inc
and
test
cmp
lods
int
inc
outsl
stos
mov
inc
and
popf
bound
test
in
mov
adc
js
push
popf
push
pop
pop
add
aam
xchg
push
jnp
lret
in
xchg
cmpsb
sub
cmc
dec
dec
rolb
push
add
adc
inc
push
es
mov
bound
jae
data16
rclb
xchg
jecxz,pt
sub
xor
and
sub
adc
pop
adc
stc
mov
cmpsl
xchg
test
outsl
cltd
lds
fwait
sub
jb
mov
mov
out
lods
and
jnp
repnz
ja
sub
sbb
inc
jb
pop
lock
sbb
loop
test
popa
fs
jmp
dec
cmovo
xor
sub
sbb
ret
pop
jl
ds
xor
roll
popa
jl
jp
inc
orb
idivl
mov
push
loope
je
popa
sbb
sub
shll
dec
jo
pop
popf
push
clc
push
cmp
mov
data16
cmp
movsl
sbb
push
movsb
aas
int3
pushf
out
xchg
lret
pop
std
lret
cmpsb
jo
jmp
fldt
jnp
mov
inc
lahf
jns
popa
xchg
ljmp
or
popa
repz
or
jmp
shlb
insl
xor
mov
movsl
adc
push
insl
add
addr16
dec
ss
sbb
inc
and
xor
lea
add
xor
test
pop
mov
add
inc
adc
mov
not
jbe
leave
les
mov
dec
cs
sbbl
push
inc
out
adc
adc
bsf
popf
and
cmp
mov
sub
lret
cmp
and
push
arpl
popa
pop
bound
pusha
add
mov
jp
adc
mov
mov
and
or
outsl
xor
ss
lcall
popa
wbinvd
adc
lahf
call
push
mov
ss
add
mov
cltd
andl
rclb
aad
mov
fdivrl
xor
sub
sbb
jmp
pusha
enter
or
dec
movsl
sbb
mov
stc
das
xor
sahf
jl
out
adc
jmp
nop
lcall
inc
outsb
xchg
icebp
jnp
push
cmp
cmp
out
xor
js
rorl
arpl
xchg
xchg
aad
jnp
pop
pop
jne
lret
xchg
stos
inc
fcmovb
cmp
add
pop
test
in
lock
xchg
pop
incl
fcmovnu
inc
lahf
adc
imul
ret
imul
dec
cld
sub
dec
cmp
addr16
das
je
xor
xchg
mov
pushf
adc
cmp
jae
sub
adc
in
push
test
jne
dec
dec
mov
cmpsl
cmp
imul
dec
or
lahf
es
cmp
cmpsb
push
add
ret
cmp
jge
or
adc
cmp
fwait
jp
scas
es
cmpsl
jmp
cmp
xor
push
mov
adc
sbb
lea
ljmp
stos
adc
js
jle
mov
mov
mov
mov
sbbl
sub
adc
das
or
sub
fsincos
or
popa
daa
or
lahf
lds
mov
sbb
add
test
imul
imul
cvtps2pi
andl
loop
jp
inc
push
push
sbb
addr16
sbb
std
push
add
stos
push
rcll
incl
inc
cmp
stc
jns
adc
add
jb
mov
fs
inc
or
out
jg
add
test
pop
out
inc
std
xchg
into
mov
sub
loopne
xchg
xor
pop
jge
mov
ds
imull
sbb
insb
sti
out
loop
pop
mov
int3
xchg
mov
in
div
cmp
xor
rep
into
mov
negl
shlb
push
scas
fildl
cmpsb
ret
fsubr
mov
test
add
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
inc
pop
xchg
addl
mov
js
inc
int3
add
jns
mov
cmp
sbb
dec
mov
mov
pop
fldcw
inc
xchg
cmc
testl
or
xchg
enter
xchg
xchg
jno
popl
mov
xlat
pop
push
pusha
roll
sti
fcmovbe
mov
or
outsb
mov
pop
xor
lds
pop
xchg
mov
shrb
mov
xor
repz
cmpsb
cmp
movsb
inc
mov
outsl
push
and
std
push
mov
inc
rol
pop
add
fcmove
addl
flds
cli
xchg
fcompl
aad
push
pushf
sub
int3
dec
push
fistps
dec
out
xchg
sti
and
and
nop
push
arpl
rclb
fadds
dec
out
cmc
pop
aas
addr16
inc
mov
cwtl
pop
dec
jnp
call
ss
sub
shr
cmp
mov
mov
xor
mov
mov
fistps
sarl
cwtl
clc
pop
mov
repz
push
or
outsl
bound
sub
inc
pop
sub
lret
and
cmc
into
leave
stos
insb
adc
pop
pop
xor
push
iret
push
push
aam
rol
std
lret
stos
jnp
fs
lea
pop
scas
mov
pop
shl
dec
and
es
mov
or
mov
pop
mov
aam
scas
mov
pop
dec
mov
xchg
stos
in
jg
mov
imul
dec
aad
loop
lahf
xor
jns
push
fbld
cmpsl
cmc
std
mov
jle
in
or
rorb
and
lret
and
sbb
inc
lds
incb
jb
sub
mov
and
mov
loopne
cmp
push
push
insb
scas
enter
inc
xor
pop
and
js
pop
out
out
jecxz
js
insl
rolb
push
cmp
cmc
dec
lahf
data16
int
push
pop
fisubl
shrb
sbb
cmp
mov
out
faddl
pusha
shlb
sahf
popf
cmp
mov
out
adc
cmc
stos
sub
cmp
ja
mov
and
dec
dec
xor
cmpsl
cli
dec
cmp
hlt
mov
insl
mov
dec
repnz
mov
cmp
shlb
push
mov
adc
cmpsb
ja
loopne
adc
test
fldl
scas
jmp
mov
mov
cmc
xchg
ljmp
jae
fscale
and
jp
adc
mov
cmp
push
sbb
dec
sbb
jae
jg
lods
push
pop
inc
ja
mov
and
lahf
out
js
test
xchg
outsl
dec
fbld
dec
cmp
int3
jmp
mov
xchg
and
les
test
daa
sub
lock
xchg
cmp
sbb
scas
inc
push
sub
lock
inc
inc
iret
adc
arpl
mov
clc
mov
mov
movsb
js
cmp
dec
ss
mov
adc
mov
jae
xchg
cli
jbe
mov
jno
sbb
and
popf
and
test
call
inc
gs
in
push
loopne
dec
inc
fwait
cmpsl
inc
adc
pop
test
inc
popf
psrlw
mov
mov
inc
mov
jns
pop
mov
add
cs
add
daa
xchg
jae
adc
pop
popa
cmovge
inc
scas
dec
jmp
push
mov
jmp
es
push
xchg
fwait
cmpsl
mov
decl
addr16
movsb
ss
orl
andb
daa
jg
arpl
push
adc
testl
mov
cwtl
dec
mov
jae
xor
sub
ss
xor
insl
out
pusha
sub
xor
push
dec
xchg
and
jne
sahf
jp
or
sahf
mov
pop
jle
shll
xor
fstpl
jge
inc
dec
inc
and
and
dec
mov
fdivrl
push
movsl
out
pop
lahf
hlt
inc
lcall
int3
or
xchg
mov
jbe
push
rorb
adc
or
mov
dec
xor
or
cltd
push
inc
jecxz
imul
xor
xor
imul
daa
sbb
push
mov
clc
jns
cltd
test
jge
aam
sbb
aam
xor
movsl
push
gs
pop
xor
sbb
gs
mov
inc
test
mov
and
sbb
maskmovq
testl
lock
cwtl
add
fistl
push
fcompl
pop
push
insl
lods
jne
xchg
negb
stos
sahf
adc
inc
stc
clc
and
mov
arpl
insl
add
dec
and
adc
jns
jge
xorb
pop
and
outsb
push
dec
xchg
cmp
insl
dec
push
sub
adc
out
popf
lahf
sub
mov
mov
xchg
cs
inc
dec
inc
and
jmp
mov
pusha
arpl
sti
mov
adc
in
mov
inc
out
out
daa
adc
mov
shll
orb
push
lret
jnp
mov
lea
xlat
sbbb
ljmp
mov
pop
push
inc
scas
stc
mov
sbb
add
fwait
repnz
int
fwait
es
mov
popa
in
ja
mov
sbb
sub
icebp
aas
fisubrs
ds
mov
pop
xor
rcr
fcmovu
out
add
jb
aas
adc
movsb
and
pop
aad
enter
and
dec
add
ror
mov
scas
xchg
pop
popf
mov
nop
inc
xchg
shlb
out
or
into
pop
pusha
stos
cmp
push
clc
cli
jno
mov
jl
jnp
je
adc
loopne
fcmovbe
inc
std
jb
scas
or
push
push
lea
jp
pushl
ljmp
repz
push
xchg
or
and
jnp
dec
out
inc
push
les
adcl
mov
stos
mov
ja
add
insb
out
jb
ret
test
sub
and
loope
xchg
mov
jne
insb
jle
push
mov
sahf
push
leave
insl
ja
leave
adc
fistps
scas
int
or
jb
cld
rcrb
pushf
aam
gs
roll
lea
enter
inc
push
push
xchg
adc
fstp
enter
jecxz
mov
js
pop
aaa
mov
mov
rcr
pop
jbe
fwait
push
dec
je
fisttps
xor
ret
add
sbb
jnp
sahf
movsl
shrb
loopne
nop
and
outsl
jmp
xlat
aas
mov
les
loopne,pn
mov
xor
sbb
and
ret
push
inc
cld
loop
fadds
js
xchg
insl
les
popf
push
and
or
and
adc
sub
mov
rolb
and
jbe
xor
in
rclb
inc
fisttpll
jle
sub
push
cmp
cmpl
sbb
insb
mov
pushf
jmp
mov
imul
gs
push
mov
mov
cmpl
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
push
adc
addl
stos
inc
fiadds
stc
mov
mov
adc
jecxz
fs
aaa
push
mov
ja
mov
dec
push
sbb
clc
imul
adc
or
cmc
mov
cmc
in
jg
inc
ficoms
mov
fsts
out
es
popa
mov
push
into
pop
lods
lea
mov
rorl
xchg
jne
push
in
jmp
mov
dec
adcl
div
out
mov
push
xchg
sti
jge
mov
cs
dec
call
cmpsl
and
and
jecxz
jecxz
sub
repz
je
xchg
and
vmread
inc
lret
mov
stc
push
shll
repnz
ds
cmp
int
jo
repz
inc
xor
rcrb
lret
push
pusha
cli
imul
lods
clc
enter
mov
adc
dec
rcll
pop
xor
pushf
push
dec
mov
xor
adcl
or
sbb
sbb
sub
cmp
daa
inc
call
ja
add
sahf
ja,pt
enter
ret
mov
xchg
or
mov
fisubrl
fs
popa
lahf
lret
cmp
ss
outsb
add
mov
fsubrs
xor
add
pop
xor
out
and
mov
imul
dec
pop
or
and
rolb
mov
mov
jle
jg
outsl
add
pop
scas
ds
push
xor
test
sahf
int
mov
out
fiaddl
aam
push
flds
mov
or
or
add
dec
mov
mov
lahf
lds
movsl
inc
push
ds
ljmp
loope
aad
mov
aaa
lea
dec
inc
push
push
push
das
enter
int3
sbb
jae
adcl
in
jns
pop
push
rol
xchg
xchg
lcall
xor
js
data16
fs
popf
outsl
jno
mov
fldenv
stc
mov
iret
cmovne
cwtl
and
and
mov
gs
xor
sub
rol
xchg
test
pop
xchg
push
je
clc
repnz
jecxz
sar
cmp
jmp
rclb
gs
jl
arpl
popa
sub
mov
mov
push
xchg
inc
sbb
inc
test
fldl
inc
cwtl
mov
mov
mov
mov
mov
imul
ds
sub
es
aas
xchg
aaa
adc
mov
into
xor
mov
mov
hlt
sti
sub
shl
mov
inc
mov
repnz
sbb
sub
mov
mov
pop
int
lret
scas
inc
cmp
push
int
mov
xchg
jp
jle
cltd
xchg
mov
pusha
cmp
testl
adc
jno
mov
jo
cmp
push
mov
movsb
enter
movsb
adc
in
sarl
xchg
ljmp
subl
dec
mov
data16
sub
mov
int
sbb
dec
adc
sbb
pop
cwtl
insl
call
sbb
jecxz
decb
aam
stos
add
pop
je
jp
mov
fdivrs
stos
int3
insl
xchg
add
and
pushf
mov
sbb
xlat
les
mov
and
xor
and
cmp
adc
push
add
xor
inc
jp
cmp
jb
aaa
rolb
add
or
flds
cli
inc
mov
sub
or
xor
test
ds
loop
jo
pusha
stc
pushf
in
adc
and
xchg
add
sub
mov
adc
add
loope
push
insb
loop
rdmsr
or
shrb
pop
adc
xchg
cmpsl
mov
pop
ds
inc
jle
push
jbe
sbb
ja
mov
addl
aaa
daa
xchg
dec
cmc
mov
push
outsb
mov
cli
dec
addr16
pop
xchg
push
pushf
das
xchg
mov
mov
test
jg
fwait
inc
roll
mov
pop
cmp
test
xlat
xor
adc
sti
jmp
cmp
sub
sub
lods
xchg
aas
push
mov
and
test
xor
jp
jae
testb
mov
test
popf
and
push
arpl
into
jnp
add
mov
xchg
lds
jmp
jb
xor
ds
dec
xor
scas
xor
jle
lods
add
pop
xchg
subl
ret
int
jnp
rclb
lret
testl
orb
xchg
idivl
xor
stc
fcmovbe
movl
mov
and
in
jo
and
adc
ljmp
pop
les
xchg
mov
push
cmp
rorl
pop
insl
xchg
pop
mov
dec
cltd
and
jns
andb
sbbl
mov
and
jge
int
outsb
das
and
push
mov
insb
loop
mov
fsubrs
dec
pop
dec
gs
js
xchg
push
addr16
dec
dec
jae
mov
mov
insb
and
or
sbb
cmpl
cmc
or
xor
xchg
and
call
icebp
incl
push
cld
sti
add
mov
inc
scas
in
scas
cmc
imul
fwait
mov
sub
enter
fs
and
mov
out
cltd
sub
fcmovne
or
pop
xor
adc
inc
loop
loopne
inc
ficomps
and
leave
cmp
xor
test
cltd
and
inc
dec
int3
in
stos
sub
xchg
inc
lret
mov
ds
fwait
mov
gs
dec
mov
jb
fisttpl
repz
fsubrp
jle
jnp
ret
dec
fmull
and
jmp
sbb
movsl
bound
push
cmp
addl
and
jnp
iret
std
sub
mov
or
inc
data16
fcomip
test
cld
pop
roll
fmul
shrb
or
jg
loope
inc
in
rorb
jno
call
shld
mov
test
jb
lds
inc
enter
addr16
in
push
repnz
push
add
filds
pop
int3
int3
outsl
mov
out
cmp
mov
push
insl
in
fiadds
ret
test
or
push
nop
jecxz
xchg
out
mov
js
nop
xchg
roll
jb
adc
nop
cmp
xor
add
in
out
jne
cmp
es
lret
mov
xor
sub
enter
or
shrb
xchg
push
movsl
cwtl
mov
rcrb
cld
pop
leave
mov
int3
mov
push
sarb
xchg
mov
adc
mov
mov
dec
mov
mov
shr
mov
mov
adc
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
or
or
addl
jmp
rcl
jp
adc
ret
ret
in
xchg
imul
mov
push
lea
imul
daa
xor
addr16
jge
out
xchg
mov
mov
ljmp
out
mov
and
sub
addr16
test
sahf
xor
dec
cmp
cld
sub
pushf
out
jmp
xchg
cli
jp
dec
sub
mov
ja
xor
jbe
inc
mov
or
xor
int3
mov
jo
pop
add
dec
mov
frstor
mov
test
and
je
jne
cmpsb
rorl
movsl
push
mov
push
jp
or
out
jo
sub
ucomiss
les
shll
xchg
loopne
sbb
dec
lret
xchg
mov
ftst
adc
insb
call
gs
in
mov
cld
stos
push
dec
dec
insl
pop
sbb
cwtl
shr
dec
xor
sub
lock
rorl
add
ret
scas
jne
out
push
in
mov
push
out
pop
popf
mov
loopne
repz
outsb
movsb
add
not
inc
in
cltd
loope
notl
jge
pop
cmpsb
maskmovq
divl
jecxz
lea
adc
jae
push
das
jmp
inc
ret
decl
mov
gs
and
pop
shrb
dec
test
mov
cld
xor
das
mov
mov
push
out
pop
mov
xchg
pop
xchg
xor
jecxz
inc
push
jl
ficomps
push
lahf
xor
jns
ja
outsl
xchg
arpl
jns
sbb
sbb
addl
call
repz
mov
xchg
xchg
shlb
gs
pop
xor
dec
jno
fsubrs
jb
jl
pop
pop
sbb
xchg
mov
xchg
add
dec
adc
dec
xchg
mov
pop
jb
shr
push
cltd
mov
loopne
cwtl
cs
jbe
daa
imul
movsl
dec
jnp
mov
xor
mov
mov
xor
inc
jb
dec
sub
push
inc
cmp
fisubl
pushl
pop
stos
mov
stos
push
cmp
mov
cs
pop
aas
jo
orl
ja
push
shrl
nop
loop
out
aad
mov
sub
repnz
jb
repz
nop
inc
xchg
xchg
movsl
fnsave
xor
pusha
dec
pop
pop
mov
xchg
xchg
fldenv
or
loopne
jnp
xor
lock
test
jb
jmp
inc
jg
ljmp
lods
cmp
push
testl
adc
neg
mov
add
out
loop
sahf
loopne
adc
dec
cwtl
dec
cmp
cmpsb
orb
mov
scas
jns
xchg
scas
jge
or
fsubs
scas
xchg
stos
add
adc
in
popa
into
addr16
nop
mov
out
int
cmp
sub
adcl
mov
xor
mov
and
test
ret
push
and
jp
or
push
dec
and
xchg
inc
or
inc
testl
jo
imul
adcb
outsl
mov
test
sti
jbe
adc
push
xchg
popa
pop
test
push
fs
sbb
push
jno
mov
rorb
inc
jne
insl
mov
lcall
cltd
pop
push
pop
mov
sbb
pushf
imul
mov
mov
xor
fs
cmp
les
and
push
gs
les
dec
movq
cmp
mov
or
mov
leave
bound
int3
test
rorb
jmp
scas
out
rcl
loop
lods
add
push
sub
push
or
xor
lea
mov
jecxz
and
add
lahf
push
mov
test
ljmp
popa
out
stos
pop
xlat
or
add
filds
enter
adc
inc
xor
pushf
imul
pop
pop
mov
adc
scas
sar
push
jne
shl
fwait
mov
sub
shll
loope
into
adc
xchg
and
ficoms
sub
mov
mov
es
cmpl
sahf
mov
movsl
andb
stos
jnp
lods
jmp
rorl
adc
cmpsl
pop
cltd
xchg
sbb
loope
into
ss
test
call
je
lods
fcomps
push
inc
dec
adc
aas
jmp
outsl
and
add
push
push
cmp
sub
outsb
nop
dec
fwait
add
and
jp
mov
repz
add
jg
xchg
shll
insl
imul
mov
pop
jecxz
iret
mov
xchg
cmc
movsl
add
mov
add
out
or
lods
cmp
mov
ja
jmp
int
jns
leave
jecxz
cmc
and
cli
lock
xor
or
pop
outsl
jbe
pop
mov
fcmovne
pop
loop
pop
jecxz
mov
inc
xchg
js
dec
jno
stc
mov
mov
xor
sbb
sti
or
cmpsl
scas
add
cmpsl
stc
fdivs
insb
enter
rcr
mov
mov
mov
stos
mov
and
add
lahf
inc
cwtl
inc
dec
sbb
sub
or
test
gs
sub
inc
mov
rcr
pop
leave
xchg
icebp
sub
sbb
pop
inc
mov
lods
xchg
and
inc
add
arpl
jnp
cmp
pop
mov
or
sub
sbbb
jne
mov
loop
add
sub
jecxz
xchg
stos
aam
out
je
lret
dec
std
inc
xchg
dec
out
cmp
ljmp
cmp
lret
imul
push
push
cmp
or
shl
adc
mov
jge
dec
pop
mov
pop
bound
scas
lods
xlat
popf
and
sub
in
add
dec
notl
shrb
cli
out
xchg
inc
lds
es
inc
or
mov
in
jbe
out
popf
push
push
push
cmp
insb
mov
icebp
in
xchg
loopne
adc
mov
mov
lea
nop
adc
jbe
mov
push
cltd
and
xchg
je
icebp
sbb
imul
xchg
negb
aad
icebp
arpl
fs
out
xchg
mov
mov
rcll
pop
xchg
popa
hlt
fiaddl
hlt
inc
and
filds
jmp
pop
push
or
mov
leave
repz
stc
and
adc
sarl
rorl
adc
outsb
cmp
xchg
ret
in
arpl
fcmovnb
xchg
jg
addb
lods
pop
mov
sub
xor
aad
pusha
clc
mov
fstpt
pop
dec
fdecstp
mov
lods
addr16
sarl
stos
pop
jb
call
scas
dec
andl
fistpll
les
in
addb
adc
mov
sub
push
lods
mov
add
xchg
jg
scas
inc
mov
icebp
and
rcll
push
mov
pop
pop
idiv
add
incl
sbb
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
push
mov
addl
xchg
lods
ret
lcall
mov
adc
outsl
outsl
int3
inc
iret
adc
shrb
lahf
jnp
scas
add
adc
push
cmpl
rolb
add
repnz
cmc
bound
in
inc
mov
add
cmp
aam
and
or
pop
inc
subl
enter
sub
sbb
leave
xor
xchg
pop
lea
jge
mov
aaa
gs
add
inc
fidivrs
repz
pop
dec
aaa
lahf
sbb
test
pop
mov
mov
dec
and
sbb
inc
insb
into
add
into
icebp
mov
fisubrs
in
sub
outsb
xchg
add
arpl
in
into
sbb
or
popa
dec
ja
cmpsb
push
push
insb
xor
lea
dec
adc
sbb
movsb
add
bound
and
aam
pop
cmc
and
mov
dec
and
sub
inc
stos
and
fdivs
and
sbb
in
out
insb
roll
inc
repnz
add
nop
out
mov
cltd
add
ja
add
in
jae
push
xor
loopne
mov
and
sahf
jae
mov
imul
dec
sbb
xchg
ret
cmp
fimuls
sbb
das
cmpsl
pop
or
shlb
rorl
dec
pop
out
jg
ret
decb
dec
jle
push
push
sub
cld
jge
sahf
cmp
mov
faddl
cmp
sahf
pop
test
scas
dec
lcall
or
test
inc
popf
imul
hlt
and
push
arpl
rclb
out
out
push
mov
jb
stos
ljmp
xor
add
mov
push
xchg
rcl
rclb
or
push
add
andb
mov
stos
shlb
xchg
js
loopne
mov
out
mov
ret
push
push
iret
repz
inc
loop
fmul
cmp
jp
mov
jnp
fnstenv
cltd
scas
pop
out
xchg
arpl
cwtl
xchg
sbb
popf
repz
jne
jecxz
pop
nop
mov
repz
xchg
rorb
mov
pop
aad
mov
sub
dec
pop
sub
xchg
mov
sbb
sub
mov
mov
in
jmp
daa
lea
mov
inc
dec
adcb
test
fstps
shl
mov
mov
pop
stos
or
movsl
mov
data16
nop
das
inc
scas
test
loop
xchg
push
xchg
push
inc
sub
xchg
cwtl
adc
je
mov
outsl
add
das
cli
jmp
adc
or
jns
lcall
xor
pop
lcall
push
push
mov
inc
jnp
loopne
sahf
lret
and
add
or
push
cwtl
popa
call
mov
lds
add
orl
mov
cmp
mov
stc
mov
and
aam
enter
mov
cmp
pop
xor
lret
roll
mov
in
mov
add
jle
xchg
fsubs
adcl
jbe
lods
mov
cmpsl
mov
xchg
lea
addr16
cmpsb
inc
addr16
ror
cmp
jne
sti
pop
into
inc
pop
pop
pop
inc
jne
and
jnp
xor
jp
std
shl
rep
int3
jmp
sub
xor
sarl
xlat
pop
sub
hlt
aaa
enter
lock
fs
test
push
xchg
imul
adc
sar
nop
push
mov
mov
fs
mov
jne
inc
mov
les
xchg
xchg
das
dec
add
movsb
lea
addl
cmp
sub
add
fisubrl
and
jbe
push
js
mov
adc
shlb
clc
mov
add
xchg
mov
jae
iret
jp
lcall
lcall
nop
push
jmp
push
push
js
movsb
sub
ljmp
je
aaa
cs
mull
jno
arpl
cld
enter
push
leave
les
adc
mov
incb
cmp
cmp
and
or
call
xor
inc
cld
xchg
push
jecxz
test
sbb
adc
push
rolb
ds
movsl
test
out
jmp
xchg
movsb
push
adc
aas
mov
arpl
dec
mov
sbb
mov
fldt
gs
jne
cli
fistl
sbb
mov
ficompl
xchg
sub
arpl
test
and
pushf
fnstenv
inc
sbb
cmpsb
stos
cmp
cmp
lret
fxch
loopne
add
xlat
mov
stos
ljmp
fistpl
gs
into
mov
pusha
push
add
sub
into
adc
daa
pop
sub
ds
jmp
mov
push
std
or
cmpsl
jl
jbe
ret
test
pop
mov
fwait
pushf
jmp
jae
pop
push
xchg
inc
repz
inc
mov
mov
pop
xor
out
push
mov
sbb
sahf
ljmp
jl
sbb
push
sub
out
leave
cmp
cmp
mov
stos
test
push
cmpsl
jl
leave
xor
cwtl
pop
push
sar
fcoml
pop
pop
push
xchg
push
xor
cmp
mov
cmp
xchg
ds
call
data16
sbb
jbe
and
push
add
xchg
xor
into
inc
out
fs
les
enter
std
pop
jl
nop
jae
cld
stc
push
xchg
push
pushw
ljmp
jne
push
xchg
jnp
jmp
sbb
imul
fcmovb
pop
cmp
data16
push
push
inc
sbb
pop
lds
push
inc
xchg
mov
push
enter
mov
scas
push
int
jb
or
mov
inc
push
cltd
pop
stos
cmp
jno
and
out
sub
xchg
xor
jmp
idiv
dec
pop
movsl
lds
out
ljmp
add
lods
xor
push
pop
xorb
js
pusha
iret
pop
push
xchg
ds
lods
jo
jns
mov
es
xor
dec
scas
mov
push
sbb
or
adc
add
mov
test
mov
out
mov
adc
cmpsb
and
pop
jg
es
out
je
xchg
sub
cmp
loope
negl
lahf
popf
rorl
scas
add
call
push
test
sbb
test
xor
aas
push
dec
test
rorb
ret
dec
ljmpw
adc
cmpb
mov
and
cmp
dec
sahf
imul
incl
sub
and
jnp
stos
xor
inc
stos
popa
imul
movsb
and
mov
cld
lahf
add
sub
xor
mov
ret
andb
lahf
pop
adc
inc
ss
outsl
aaa
pop
ret
fcoms
pop
mov
and
insl
loopne
push
inc
enter
clc
inc
inc
add
add
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
jbe
push
imul
mov
aas
push
jg
pop
out
mov
lods
add
pop
push
lea
push
int3
pushf
int3
dec
ret
adc
jmp
iret
fwait
adc
mov
std
cltd
cwtl
stc
mov
in
pop
adc
loope
xchg
mov
sbb
or
xchg
and
dec
xor
loopne
fs
inc
fimuls
addr16
icebp
inc
enter
les
add
stos
sub
cmpsb
movsl
mov
add
cmp
int3
xlat
adc
inc
lret
mov
mov
adc
mov
adc
dec
into
mov
xor
insb
add
dec
sub
lcall
mov
popl
lods
cmp
pushf
jae
sarb
ret
add
jp
cmp
sbb
push
int3
sub
inc
xor
in
pop
popl
jle
and
orb
push
int
pop
inc
aas
pop
push
rcrb
adc
pop
xchg
mov
aad
pop
int
leave
popf
dec
icebp
push
sahf
dec
fiaddl
pop
ljmp
dec
push
notl
xor
pop
cli
push
xchg
js
mov
pushf
insl
stc
loopne
sbb
mov
jo
mov
lret
xor
push
int
mov
cmp
push
dec
cli
scas
jge
cmovb
ja
adcl
adc
popf
push
out
lret
jno
pop
test
in
lcall
push
imul
mov
xchg
lock
or
jmp
jo
inc
cli
sbb
inc
adc
add
xchg
cmpsb
mov
inc
adc
das
jns
xchg
ja
sahf
adc
neg
fistps
xchg
sar
mov
stos
rolb
inc
mov
adc
iret
pop
cmp
sub
mov
jge
decb
adc
inc
jne
push
dec
ds
sbb
mov
pop
push
lods
mov
or
test
lret
es
mov
rolb
or
cs
xor
loope
inc
mov
dec
popa
mov
jecxz
add
int3
sub
pushf
mov
and
cmpsb
aaa
stos
or
sbb
gs
enter
xor
dec
xchg
adc
push
sub
mov
insb
insl
mov
add
or
cmp
cli
test
push
ret
inc
push
es
data16
stos
std
mov
in
or
jmp
int
outsl
ds
inc
mov
dec
adc
pop
nop
xchg
push
test
lret
sbb
addl
xor
inc
scas
leave
mov
or
push
daa
aaa
fisubrs
sahf
pop
popf
fwait
jns
mov
mov
jb
test
das
inc
xchg
mov
jnp
xchg
fs
xor
dec
add
pop
sbb
inc
int
mov
push
xchg
rorl
aaa
push
test
pop
mov
icebp
sbb
ds
adc
cmp
and
jbe
xchg
pop
outsw
mov
and
ljmp
enter
sbb
push
out
lods
loope
sti
and
popa
ss
pop
jle
rcl
and
fisttps
mov
jl
popa
rol
inc
push
push
in
das
jecxz
ljmp
sub
aam
and
cwtl
push
lea
mov
jmp
cmpb
and
push
and
mov
shlb
shll
xchg
sbb
repnz
stc
lds
icebp
mov
lock
jle
lret
and
push
repnz
jns
cmp
flds
sub
leave
pop
and
lods
in
sub
mov
in
push
push
jge
adc
pop
xchg
loopnew
mov
repnz
add
aaa
maskmovq
mull
xchg
push
enter
in
jb
mov
mov
and
adc
or
push
mov
jo
xor
jns
lret
mov
sub
mov
out
jg
lret
decb
pop
sbb
movsl
lods
std
stos
xchg
dec
and
mov
xchg
and
mov
xor
stos
sbb
push
aaa
loop
mov
cmpsb
adc
or
imul
sahf
shlb
mov
mov
or
shr
cs
ja
add
jle
and
int
or
shl
orl
adc
iret
std
add
pop
mov
pop
push
sub
std
xchg
xchg
fsubl
testl
lea
lds
dec
mulb
arpl
pop
ljmp
fwait
push
mov
pop
cwtl
pop
sbb
push
pop
or
neg
jle
sbb
adc
dec
call
lcall
rorl
iret
adc
aam
es
fwait
repnz
js
jg
sub
pop
adc
cltd
pop
push
outsb
inc
loope
mov
xor
addr16
inc
rorb
adc
push
cmpsb
mov
fwait
lds
stos
in
xchg
test
pop
pop
and
pop
dec
dec
mov
into
jo
and
pop
aaa
lods
andl
xchg
cmp
cs
mov
mov
push
push
cmp
fidivrl
lret
cmp
out
sub
add
sub
leave
fmull
pop
dec
movsb
sbb
add
mov
rcr
js
nop
pop
pop
aas
jl
push
jl
loop
mov
sub
aaa
xchg
pop
fsubl
fs
jle
jle
neg
inc
lea
popf
pop
cmp
mov
jbe
push
mov
xlat
mov
rcrb
jo
jl
inc
mov
ss
fs
insb
ja
out
pusha
or
popa
dec
orl
jne
jmp
clc
mov
cmp
enter
or
aas
dec
xchg
bound
fstl
mov
fistpl
mov
sub
xchg
sti
test
xchg
or
dec
enter
aaa
imul
cmc
cwtl
sahf
add
mov
data16
push
loopne
fsubrl
and
or
pop
stc
shl
push
push
mov
fcmovnbe
cmp
mov
outsb
mov
mov
pop
iret
xchg
lods
inc
xchg
stos
jae
nop
mov
aas
and
and
inc
adc
mov
add
int
lret
aas
or
icebp
das
test
xchg
ja
mov
pop
or
jae
adcl
jg
lret
ret
imul
cmp
mov
jne
test
push
stos
ljmp
jl
fimull
mov
mov
jmp
push
adc
leave
insl
repz
adc
or
lcall
sbb
jbe
popf
gs
inc
loopne
es
mov
sub
add
inc
popa
xchg
mov
fwait
pop
lahf
lret
jmp
xchg
icebp
mov
xor
fcoml
lds
insb
sbb
lcall
scas
add
shll
adc
push
negl
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
adc
addl
xor
jmp
ja
xor
adc
xor
mov
jnp
stc
rclb
mov
xor
ret
push
leave
es
cmc
imul
pusha
pusha
inc
or
adc
or
jo
dec
les
mov
sbb
int
push
push
adc
push
inc
gs
iret
arpl
xor
mov
push
add
fidivs
das
and
adc
mov
addr16
inc
jle
or
inc
xchg
adc
int3
outsl
pop
scas
push
das
jnp
shll
pop
data16
and
jae
and
mov
xchg
xor
repnz
lods
fildl
dec
inc
rclb
mov
movsl
mov
sub
sbb
sbb
sub
leave
mov
and
stos
mov
enter
push
and
cltd
popf
cs
dec
test
subb
je
mov
mov
cmpsb
pusha
mov
movsb
xor
mov
ss
cmp
xor
loope
stos
cmp
adc
leave
rcll
jecxz
add
mov
jp
push
das
xchg
scas
push
adcb
aam
adc
loopne
fadd
sti
xchg
sub
cli
fisttpl
lock
mov
pop
mov
pop
test
or
xchg
pop
hlt
cmp
cmc
lods
ss
mov
add
or
xrelease
inc
fs
rclb
push
xchg
jae
shrb
mov
out
test
cld
push
lock
push
push
repz
sti
icebp
pop
pop
mov
sbb
inc
mov
into
pushf
push
popf
bound
and
dec
pusha
adc
clc
fnstenv
out
or
sub
jo
outsl
mov
js
sub
pop
xor
orl
adc
mov
stos
and
jg
dec
cmp
popa
push
push
push
adc
and
scas
clc
or
push
rorb
inc
adc
cwtl
jg
mov
dec
pop
jge
mov
mov
out
mov
stos
popa
lds
lea
pop
or
fadds
int3
cmovs
xchg
mov
pop
jnp
adc
movsb
repnz
stos
lds
cmp
jo
inc
sub
mov
das
fildl
push
cwtl
or
and
leave
ja
mov
inc
scas
subl
scas
ficomps
shll
inc
push
imul
sub
pop
lods
cmpsl
mov
add
movsl
mov
daa
sbb
hlt
sbb
cmpsl
ljmp
jmp
mov
test
pop
xchg
jb
push
arpl
jp
push
aad
ret
gs
jl
jbe
push
dec
mov
dec
scas
test
sbb
dec
out
in
arpl
andl
jnp
mov
daa
and
and
adcb
cmp
mov
inc
mov
insb
and
jecxz
cmpsb
daa
rcrl
sahf
inc
pushf
sbb
jl
adc
jo
test
es
mov
mov
jne
mov
add
sub
jl
lret
arpl
mov
imul
xchg
mov
cmp
out
adc
dec
loop
pop
or
cmpsl
add
pushf
inc
fwait
push
loopne
ret
rcll
push
sbb
je
add
cmp
lods
insl
sbb
cwtl
xchg
movsl
aas
aas
or
fcompl
mov
int3
pop
popa
lahf
jp
in
cli
fidivrs
andb
or
or
lock
and
dec
int
cs
sbb
jecxz
add
add
add
add
out
sbb
and
jae
pop
adc
cmc
sbbl
pushf
enter
sbb
xor
sahf
ret
mov
dec
and
lahf
inc
ja
xchg
clc
pop
imul
inc
iret
les
jns
mov
outsb
fadds
xchg
testb
xor
and
pop
fistpll
mov
adc
jo
dec
dec
mov
mov
sbb
dec
jb
fs
scas
mov
push
push
push
xor
jo
cmc
fld
aaa
in
mov
mov
in
xor
pop
in
aas
out
data16
mov
jb
movb
dec
sub
jecxz
fists
and
loope
pop
mov
jg
pop
imul
movsb
enter
pop
pushf
pop
shl
es
fmul
dec
mov
xor
arpl
sub
pop
mov
mov
int
mov
jno
adc
or
dec
mov
cmpsl
insl
dec
cmpsb
cmpsb
test
lahf
aaa
imul
cld
fnstsw
dec
add
fildll
pop
sbb
test
das
enter
and
xchg
adc
dec
ret
js
pop
dec
rcr
test
or
pop
xor
scas
rdtsc
test
xchg
xchg
flds
jne
dec
fwait
cmpsl
xor
push
cmc
or
loopne
pusha
decb
addb
mov
ret
ds
mov
sbb
mov
mov
test
js
sub
lcall
aam
pop
and
imul
dec
add
pop
leave
mov
test
and
inc
jb
mov
cmp
shl
xchg
out
mov
push
idivl
int
cmp
test
scas
into
cmpsb
adc
dec
add
xchg
movsb
das
fwait
lret
int3
sub
ds
adc
dec
mov
and
inc
aaa
jge
inc
out
jae
jb
cmp
int
in
stos
xor
mov
xlat
adc
shrl
mov
sbb
fdivrs
movsl
dec
pusha
inc
fiadds
jno
gs
xchg
push
das
shl
bound
inc
dec
pop
mov
adc
sbb
sbb
ljmp
bound
fbstp
sbb
iret
jl
clc
mov
fwait
or
dec
repz
in
iret
and
mov
call
mov
cmp
dec
inc
and
ss
mov
divl
xchg
mov
out
sbb
sbb
stc
or
mov
leave
arpl
push
movsl
sbb
dec
mov
mov
adc
and
add
fisttps
lahf
fcmovbe
lods
lock
mov
mov
jb
push
cwtl
push
sahf
jecxz
shll
push
clc
xlat
in
mov
fmul
repz
mov
mov
xchg
fwait
adc
lahf
xor
sarb
jmp
ds
test
cmp
dec
call
cmovnp
dec
scas
jb
cmp
in
movsl
adc
pop
and
jbe
ja
fsubl
and
mov
xor
enter
inc
andb
and
dec
push
pusha
subb
adc
icebp
je
jle
sub
xchg
call
mov
cmp
or
mov
push
or
sub
pushl
lods
xchg
jnp
add
cmp
lods
lds
adc
mov
orl
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
mov
js
std
pop
ljmp
pusha
mov
stos
lcall
stos
pop
inc
jns
sbb
push
or
xor
push
inc
add
aad
add
or
popf
mov
mov
push
outsl
aam
add
push
out
push
jbe
push
mov
adc
pop
out
in
sub
push
mov
ficomps
mov
and
mov
xor
push
popa
mov
test
hlt
mov
sbb
sub
xchg
movsl
adc
icebp
mov
add
vmptrld
sbb
fnstsw
repz
mov
popf
data16
add
jg
mov
jg
and
in
adc
and
in
icebp
aas
mov
aad
fwait
and
xor
xor
pop
xchg
repz
fwait
mov
inc
stos
sarl
sub
fdivl
jne
pop
lret
cmp
stos
insb
cltd
cmp
push
mov
je
shll
imul
clc
mov
or
test
jbe
je
sub
push
adc
sub
fistl
bound
mov
idivb
ds
push
mov
sbb
sbb
into
dec
fisttpl
mov
xlat
push
dec
and
lds
fisubrl
daa
inc
adcb
shll
scas
nop
cltd
mov
js
test
add
jg
dec
mov
xlat
lds
pop
and
aaa
into
jl
dec
mov
rcrb
push
jle
mov
add
fidivrl
clc
cld
inc
pop
ss
jl
cmp
rorl
jle
mov
scas
stc
cmp
dec
adc
adc
sub
out
stc
pop
jp
and
fbstp
adc
jae
enter
pop
push
push
xchg
mov
mov
rcl
dec
mov
or
cmpsb
in
mov
int3
adc
inc
and
and
fcomi
mov
jg
jecxz
cltd
sbb
pop
and
jae
sbb
je
call
cmp
mov
adc
dec
mov
jno
lret
jae
mov
xor
jle,pt
aaa
dec
decb
inc
or
arpl
add
aam
jl
mov
data16
add
lea
nop
xchg
adc
outsb
in
or
lock
pop
cmpsb
dec
push
test
jb
mov
roll
das
out
repz
cmp
mov
xchg
out
mov
imul
cmp
mov
sub
and
inc
popf
or
cld
sub
inc
xchg
push
fisubs
pop
imulb
xor
andl
pop
orl
inc
loop
cmpsl
popa
ljmp
jge
xor
outsl
sub
xchg
add
mov
sub
repz
mov
in
sbb
mov
dec
repnz
jge
push
ret
pop
pushf
out
dec
xchg
jecxz
repnz
call
cmpsl
mov
mov
fdivr
orb
xchg
movl
pusha
xchg
daa
push
sarb
jns
pop
mov
cltd
sub
stos
jle
lcall
jns
mov
xchg
movsb
jnp
rorb
push
std
push
inc
lods
xchg
nop
mov
push
fldl
scas
pop
mov
pop
ficoms
sub
jns
dec
sbb
fimuls
pop
mov
aaa
call
mov
push
fs
outsb
or
fsubrl
adc
xor
je
in
imul
sbb
aas
or
imul
bound
popa
sahf
or
fidivl
sub
mov
stc
jge
jl
add
out
mov
mov
aas
pop
sub
adc
popa
jnp
dec
in
push
dec
enter
pop
sub
adc
inc
lahf
pop
xor
lahf
sbb
ficoml
popl
loopne
add
mov
jno
lcall
cltd
outsl
add
arpl
cltd
repz
jecxz
inc
mov
xor
push
jge
sbb
je
mov
xor
mov
push
das
jle
lcall
adc
mov
mov
cld
push
mov
lods
sub
cld
push
mov
xorl
sbb
cli
insb
sahf
setae
dec
dec
xor
add
or
repnz
int
push
leave
pop
pop
push
pop
pop
mov
mov
lahf
pop
sbb
jnp
ficoms
push
dec
outsb
xchg
mov
jbe
lahf
dec
in
or
jno
add
stc
xchg
inc
dec
dec
xchg
mov
mov
es
inc
and
insl
jmp
dec
mov
push
and
inc
mov
call
mov
inc
jle
jmp
sbb
outsl
xchg
into
mov
and
sbb
clc
cmpsb
cmp
push
sahf
xlat
pop
mov
in
pop
aad
aad
test
push
icebp
clc
xchg
push
jb
push
addr16
mov
pop
jo
cmp
pop
xchg
or
jp
mov
inc
cmp
in
pop
jge
inc
mov
mov
test
jge
sub
pushl
mov
mov
or
test
or
bound
inc
jns
or
pop
pushf
and
nop
out
cld
xor
mov
push
clc
xchg
adc
out
pop
ret
mov
inc
pop
idivl
aad
sbb
mov
dec
pop
and
cmp
add
dec
cwtl
inc
mov
xchg
add
aas
push
cmp
dec
pusha
jns
lret
mov
and
test
dec
inc
aaa
mov
mov
mov
unpcklps
inc
loopne
je
and
mov
xchg
mov
push
pop
scas
and
cmp
fiaddl
cmc
aas
mov
pusha
das
call
jae
xchg
cmovo
xchg
xor
movsb
sbb
push
sbb
aam
mov
mov
hlt
sbb
arpl
lahf
sbb
xchg
loopne
pop
mov
sub
mov
sub
add
sahf
jbe
pop
cmc
cltd
loop
fistpl
pop
pop
adc
push
hlt
popf
xor
das
rorl
lods
out
dec
cmp
cs
fwait
jnp
xchg
fs
xor
pop
hlt
mov
fcmovnu
mov
mov
loop
cmpb
sarb
stos
mov
mov
les
rcr
mov
clc
mov
sti
iret
ret
mov
cmp
popf
pop
adc
mov
out
js
sub
jae
insl
sbb
sub
jne
add
cwtd
and
das
mov
inc
call
icebp
lcall
call
sub
sbb
cltd
movsl
cli
pop
dec
pop
inc
int
call
mov
sub
test
xor
sbb
xchg
push
das
rorl
idivb
stos
shlb
imul
imul
dec
push
inc
push
fld
les
orb
dec
ds
xchg
xchg
icebp
rclb
xor
lock
mov
xchg
jno
shlb
fists
and
outsb
xorb
jbe
jno
push
lea
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
jge
mov
add
hlt
mov
aas
aas
add
sub
andl
callw
mov
adc
stos
xor
sahf
lret
adc
loop
jnp
sti
inc
push
lret
test
xor
in
inc
push
test
xchg
and
test
adc
outsb
mov
mov
out
icebp
dec
pop
mov
mov
push
jge
mov
pop
sub
outsb
es
jbe
inc
enter
lea
clc
jl
pop
rorb
jle
into
clc
add
icebp
out
jg
inc
lock
shrl
push
fdivl
stc
and
daa
in
sub
dec
add
leave
jnp
ret
sub
rolb
pop
push
pusha
insl
mov
push
adc
fbld
inc
stos
mov
mov
popa
pop
inc
fadd
bnd
fwait
and
inc
js
subl
xor
cmp
mov
fists
jl
push
scas
cmc
dec
and
outsl
add
popf
mov
pop
cld
mov
or
mov
test
xor
popa
mov
jle
les
mov
inc
adc
cpuid
and
jns
lods
add
xor
gs
gs
xor
shl
lods
clc
pop
and
into
xchg
sub
pop
mov
pop
add
adc
jb
pushf
stos
xchg
inc
pusha
pop
xor
pop
shl
outsl
jmp
cmc
aam
leave
in
dec
lods
fxch
lods
push
por
xchg
addl
test
fistpll
std
dec
ret
js
cmp
sbbb
sub
push
cmpb
xchg
mov
outsl
dec
and
mov
punpckhwd
and
lock
and
cmpb
mov
loope
mov
add
and
add
into
xchg
test
push
dec
mov
sub
lock
stc
pop
xchg
inc
lea
es
int3
loope
xchg
sbb
dec
cld
out
xlat
scas
pop
test
insb
std
cmp
clc
pop
add
arpl
lcall
or
xchg
test
in
add
adcl
mov
insl
add
xchg
cld
pop
fildll
and
xchg
mov
sarb
fwait
xchg
mov
add
sub
ja
int
sar
sub
cmc
ja
imul
out
in
push
cmp
dec
cmp
mov
insb
inc
mov
xor
rclb
dec
nop
fistpl
out
sbb
sahf
xlat
scas
dec
orb
xchg
mov
imul
cs
mov
mov
ret
test
mov
int3
pop
xor
js
inc
jg
pop
call
push
jge
mov
xor
std
int3
fldt
subb
mov
and
mov
std
inc
xor
ret
mov
pop
imul
cmpsb
mov
iret
pop
test
adc
repnz
ljmp
jecxz
pop
cltd
insl
mov
ljmp
xchg
or
or
cltd
popf
subb
xchg
ret
rorb
mov
inc
addb
jle
into
popa
lds
xor
adc
adc
sub
data16
fiadds
jle
mov
adc
cwtl
adc
xlat
fstps
adc
push
cmp
fwait
inc
jo
scas
daa
mov
mov
jp
lahf
fs
push
movsb
pop
lock
xor
aas
mov
fwait
mov
add
sbb
and
cmp
dec
pop
iret
mov
sub
xchg
int3
outsb
xchg
clc
jb
roll
rcrl
addr16
in
or
fndisi(8087
mov
or
dec
nop
push
mov
int3
sbb
fisubl
push
dec
jge
and
data16
mov
cld
fs
cmp
call
lock
push
cli
leave
xlat
fstpt
push
adc
inc
outsl
xor
mov
xchg
rorb
aad
push
loopne
cltd
jecxz
inc
inc
sbb
mov
shl
mov
adc
lock
push
add
push
xor
mov
out
jp
cmpb
shr
rclb
sbb
add
jp
adcl
push
fldt
xor
test
popa
jbe
mov
mov
push
push
popa
in
jb
mov
jae
xchg
jb
out
mov
cmp
gs
push
cmp
xchg
loop
test
pop
adc
sbb
and
and
in
adc
andb
scas
loope
jb
pop
sbb
addr16
jp
incl
add
out
mov
pop
fs
enter
pop
pop
pop
lds
mov
int3
adc
rorl
pop
fwait
lahf
js
xor
loop
adc
mov
lret
repz
in
cld
adcl
or
xor
add
add
loope
xchg
arpl
or
push
cmp
cmp
call
inc
push
loope
cmp
pusha
xor
lcall
icebp
add
cmp
hlt
adc
add
pop
and
sub
xchg
mov
and
mov
into
push
dec
aam
cmc
jmp
mov
pushf
add
lea
or
mov
shrl
xchg
inc
push
pop
mov
lcall
pusha
out
fsubr
js
fstpt
loope
leave
push
test
scas
sbb
pop
in
into
imul
test
fldl
aaa
iret
pop
and
add
sub
ror
or
xchg
sbb
sbb
mov
jae
or
mov
loopne
mov
insb
scas
nopl
repnz
sbb
sub
nop
stos
inc
pop
mov
sub
xor
pop
add
push
sub
inc
in
push
mov
cmc
sbb
sub
inc
xchg
fstpt
pop
mov
push
add
push
inc
lods
inc
insb
pop
xor
out
movsl
mov
xchg
push
mov
cmc
stos
or
std
dec
push
pop
into
or
dec
mov
ljmp
or
inc
lret
stos
mov
ljmp
xor
cld
lret
or
ret
insl
jp
inc
jle
jnp
cmp
mov
add
jecxz
mov
xlat
pushf
push
or
mov
ror
sti
inc
lods
int3
lcall
sub
xchg
gs
push
lods
jl
into
movsl
mov
push
in
add
shl
ret
and
xchg
or
test
jns
les
mov
das
enter
mov
xor
fnstsw
xchg
nop
fbstp
mov
dec
push
rcr
adc
arpl
cmp
repnz
mov
ror
xor
push
leave
arpl
daa
lds
sub
add
and
outsl
lcall
mov
xchg
push
xor
subl
or
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
pop
inc
or
pop
cli
adc
mov
mov
sub
pop
sub
xor
or
std
xor
mov
leave
push
lea
mov
xchg
pop
xor
pop
icebp
cmpsl
add
jl
popa
test
rcrl
mov
add
xor
leave
and
stc
sbb
xor
movsl
adc
fidivs
and
sahf
test
mov
loop
outsb
inc
insb
xchg
adc
ss
mov
cmp
or
popf
inc
push
cmp
dec
fsubr
xor
gs
xor
add
dec
and
loopne
mov
insb
and
cmpsb
mov
mov
insl
jno
pop
inc
push
sub
xchg
rcr
lods
sbb
cmpb
call
leave
inc
ljmp
insl
loopne
stos
sub
mov
lods
cmp
mov
add
negl
inc
mov
sbb
inc
xchg
out
mov
mov
mov
adc
call
sbb
aad
stc
loope
sub
xor
and
cmp
out
dec
out
push
out
mov
cmp
xor
mov
shrb
ds
xor
mov
sub
xchg
ja
lock
pop
sbb
cmpsb
mov
das
fdecstp
add
int
jae
push
xchg
jno
insl
repz
mov
push
xchg
jp
insl
jl,pt
mov
pop
push
cmpsl
push
shll
pop
movsb
push
jl
add
loope
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
