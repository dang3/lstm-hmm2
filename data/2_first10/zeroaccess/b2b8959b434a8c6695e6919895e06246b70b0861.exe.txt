push
mov
sub
add
mov
cmpl
movl
not
jmp
movl
not
cmpl
jne
push
call
mov
sub
movzwl
and
add
mov
xor
add
sub
xor
adcl
mov
mov
sub
xor
adc
andl
jmp
jae
insl
mov
and
cmp
xchg
mov
sahf
adc
sbb
movsb
arpl
rorb
cs
jo
adc
stc
pop
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
xchg
lret
xorb
jle
sti
xchg
mov
arpl
jmp
adc
lea
gs
es
loope
into
sub
fwait
pop
add
add
adc
jnp
xchg
sbb
sti
jbe
adc
hlt
imul
stos
dec
shll
lcall
sbb
mov
add
mov
inc
sar
gs
push
push
xor
insl
sub
inc
loope
lret
jge
cmp
out
adc
jl
stos
xor
pop
mov
into
sub
adc
lcall
jmp
rorl
ss
jp
jge
cmpsb
pop
pop
addr16
or
addr16
mov
lahf
add
and
jmp
jg
mov
imul
cmp
inc
pop
jp
je
outsb
mov
cmp
jno
aaa
inc
iret
loope
mov
std
imul
push
jle
jecxz
insb
mov
push
rorl
movsb
inc
mov
pop
mov
mov
mov
mov
sbbb
jg
dec
rclb
lods
call
mov
lock
inc
lcall
push
mov
cmp
xor
jae
inc
add
arpl
fsubl
cs
hlt
loopne
movsl
daa
inc
into
jnp
inc
adc
mov
stos
lods
outsb
fdivrl
orb
push
jns
ljmp
pop
fs
jne
dec
adc
sbb
mov
pushf
mov
inc
sub
pop
xlat
insb
pop
xchg
pop
sahf
sbb
pop
sti
mov
adc
dec
xchg
inc
jno
lret
insl
push
lea
pop
fistpl
or
xor
push
xchg
cmpsb
xlat
pop
and
add
pop
cmc
adc
fldl
mov
mov
fldcw
fisubs
les
mov
daa
pop
clc
data16
fs
sbb
stos
mov
mov
push
pop
lds
sbbb
dec
or
gs
jecxz
das
xchg
test
jb
or
pushf
cmpsl
cmp
aad
mov
or
cmp
test
or
or
mov
inc
jb
fcompl
gs
xor
sbb
push
shlb
sbb
mov
mov
xorl
mov
imul
mov
cmp
jae
sbb
ds
mov
mov
mov
or
mov
push
dec
pop
cmp
lods
push
int
test
repnz
pusha
cwtl
cmp
mov
lret
pusha
dec
cmpsl
mov
ficoml
scas
orb
mov
pusha
adc
fcomps
xor
shlb
mov
lock
push
lret
stos
iret
jnp
outsb
sub
ud0
and
and
mov
add
fadds
or
add
adc
scas
lods
ss
movsl
in
in
repnz
stos
jl
loope
testb
xor
imul
gs
or
and
sub
mov
mov
sub
mov
push
mov
mov
mov
sbb
mov
mov
mov
and
orl
orl
andl
mov
add
mov
cmpl
mov
movl
mov
mov
jmp
notl
mov
cmpl
jae
push
call
mov
xor
or
sub
or
xor
add
mov
sub
imul
and
or
mov
mov
jmp
outsl
add
das
movsb
out
sbb
jl
adc
sbb
movsl
xchg
faddp
mov
sahf
insb
sbb
inc
and
aad
idivl
loopne
aas
mov
lret
push
sbb
or
test
add
rol
addr16
sbb
lret
cmc
jp
insb
mov
push
xlat
fcoms
repnz
xchg
dec
ds
imul
inc
add
jecxz
imul
mov
add
mul
xlat
addr16
push
test
sub
test
adc
mov
xor
js
xorb
xor
inc
icebp
add
xchg
je
js
sbbb
es
dec
dec
pop
clc
mov
adc
inc
repz
jg
jmp
jle
sbb
shll
xchg
dec
fldcw
push
and
jecxz
adc
pusha
xlat
push
add
ret
roll
movsb
popf
mov
inc
add
dec
cmpsb
adcb
call
sbb
dec
and
mov
sbb
in
int3
dec
clc
cmp
pop
or
scas
jb
inc
ret
adc
xchg
inc
ret
aas
add
enter
loop
cltd
mov
les
outsb
mov
adc
fnstenv
cmp
mov
in
mov
popl
push
out
fidivrl
das
adcb
cs
pop
adc
ret
dec
mov
imul
push
sub
xchg
add
push
jp
dec
pop
lahf
and
lret
and
mull
xlat
jno
movsb
pop
out
scas
jg
xor
cli
cli
pop
jo
hlt
out
dec
stos
sbb
sub
ljmp
mov
in
out
mov
inc
add
xorb
add
and
and
loopne
in
inc
stos
pop
push
adc
stos
insl
add
fisubrl
movsb
ljmp
dec
push
sar
push
stos
pop
jnp
cmc
outsb
test
cs
push
push
movsl
cltd
loopne
sahf
or
sub
push
add
call
fwait
sarb
mov
xlat
negl
pop
mov
ljmp
xchg
adc
adc
mov
cltd
popa
repz
repz
pop
pop
dec
outsb
aad
stc
adc
fcoms
ret
jbe
daa
imul
push
in
daa
cmp
lock
cmpsb
sub
cmp
sbb
cld
lods
jl
jns
outsb
pop
testl
loope
cmp
enter
scas
sub
data16
cltd
xchg
jge
je
xor
fdivl
cmp
sub
or
pop
add
xor
pop
mov
ds
es
outsb
mov
jo
push
sbbl
in
pop
fidivl
bnd
xchg
add
icebp
jmp
cld
inc
jo
fcoml
lahf
jae
push
repnz
sti
rcll
fldcw
inc
mov
cmc
divb
inc
out
sbb
sub
lock
leave
push
repz
imulb
lds
fiadds
aaa
xor
leave
cwtl
sbb
inc
dec
pop
popf
lahf
pop
push
aaa
minps
bound
mov
movsb
inc
sbb
adc
jbe
cmp
push
stos
xchg
stc
xor
jnp
mov
je
mov
and
pop
int3
push
imul
adc
mov
adc
or
popa
lahf
and
fisttpll
mov
mov
xchg
sbbl
iret
sarl
push
popa
sub
mov
mov
loope
mov
cmpsl
cltd
and
xor
push
das
stos
or
idiv
cmc
into
fldt
cld
mov
outsb
sub
pusha
sub
mov
mov
sbb
cmpl
notl
mov
mov
jmp
movl
not
cmpl
jge
push
call
mov
adc
and
add
mov
xor
and
mov
mov
sub
mov
orl
sbb
orl
adc
lea
mov
movl
mov
cmpl
mov
movzbl
mov
jmp
not
mov
cmpl
jg
push
push
pushl
push
call
adc
sbb
neg
adc
sub
addl
xor
mov
mov
add
sub
mov
mov
inc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jg
push
push
push
call
sub
or
sub
mov
adc
mov
xor
mov
shrd
cmpl
mov
movl
movl
jmp
movl
cmpl
jge
pushl
pushl
push
call
movzwl
and
mov
and
add
sub
add
or
shr
mov
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
push
push
call
sub
movzwl
add
add
sbb
incl
mov
xor
xor
orl
or
jmp
xchg
xchg
je
insb
sub
dec
and
insl
in
and
adc
sbb
mov
sub
je
sbb
out
repz
xor
nop
pop
imul
pop
ja
adc
std
sub
push
push
lea
xchg
mov
stos
xor
rcll
sbb
mov
in
fwait
sub
leave
fcom
hlt
scas
and
lods
push
mov
sbb
mov
nop
icebp
or
shrl
pop
popf
mov
cltd
mov
cld
jge
or
rorl
xor
ret
xor
in
out
pusha
call
jo
sti
sub
into
rcl
dec
add
jbe
std
call
mov
scas
test
push
pop
mov
and
push
out
cltd
cmp
outsb
cmpsl
or
jno
add
mov
aad
fdivrs
or
push
adc
call
push
mov
add
push
mov
xchg
ret
cmpsl
scas
xchg
sahf
dec
or
pop
sbb
xor
shll
dec
jae
aas
rcrl
out
sar
cmc
cwtl
xchg
jle
aaa
pop
mov
addr16
lahf
adc
sub
adc
lods
jbe
mov
inc
ret
test
mov
stc
sahf
leave
stos
sbb
movsl
push
push
scas
dec
fisttpl
lds
pop
mov
inc
loopne
push
sub
mov
pop
out
mov
aas
nop
cmp
popf
in
enter
dec
mov
std
enter
mov
mov
inc
push
cmc
cmp
lret
push
push
push
jle
inc
adc
lds
sbb
jmp
ret
mov
inc
jb
jg
negl
lahf
stc
sbb
or
in
das
pop
test
pop
test
mulb
push
clc
sub
mov
sub
xor
or
cmp
cmpl
and
leave
cmp
jo
shrb
fildl
adc
arpl
xchg
add
fs
aas
and
jl
lea
mov
fimuls
and
xchg
add
les
ljmp
inc
cmp
sub
add
xor
pop
outsl
imul
cmpl
xor
dec
push
mov
and
arpl
cs
cli
or
xor
jbe
bound
adc
out
jecxz
mov
add
das
cli
push
add
push
mov
adc
mov
sbb
dec
lock
fs
daa
ret
and
push
mov
in
test
pop
pop
leave
lods
sbbl
insl
aam
adc
leave
int
mov
call
mov
pop
add
push
jmp
xchg
xlat
sub
lret
dec
dec
out
stc
pop
div
xor
xor
mov
pop
push
sub
movsl
push
jl
dec
enter
cwtl
sbb
xor
xchg
mov
mov
iret
mov
adc
pop
aas
outsl
inc
test
pop
fisttpl
pop
adc
clc
and
insl
dec
add
or
mov
xchg
sbb
scas
dec
divb
adc
add
jge
fldl
sarb
imul
pushf
cmp
inc
mov
mov
push
stos
jo
subb
or
shl
nop
jnp
mov
pop
ret
call
adc
fisttps
xchg
dec
jnp
inc
pop
push
adc
mov
fildl
and
lds
mov
and
jle
cmpsl
pop
inc
in
dec
fldenv
or
cmp
stos
icebp
push
mov
movl
mov
adc
movl
cmpl
movl
movl
jmp
mov
mov
cmpl
jbe
pushl
push
call
orl
xorl
addl
and
movl
subl
movl
cmpl
mov
movl
mov
movl
jmp
mov
cmpl
ja
push
pushl
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
movl
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
cmpl
jle
push
pushl
push
pushl
push
pushl
call
adcl
addl
subl
orl
mov
xor
movl
xor
jmp
stos
fisttpll
aas
and
mov
stos
add
sbb
nop
cmp
xchg
mov
jge
lods
jb
xchg
addl
aad
es
iret
dec
loope
in
mov
aaa
sbb
xor
bound
aas
sahf
dec
adc
movsb
mov
pop
xchg
dec
sbb
mov
scas
sbb
jg
cmpsl
push
les
mov
xchg
sbb
push
rcrb
mov
pushf
enter
imul
pop
push
fstl
sub
jg
inc
adc
jae
jge
out
sbb
inc
cmp
stos
daa
cwtl
pop
cli
scas
cs
lret
lock
cmc
out
les
fistps
pop
and
lcall
lahf
insb
push
les
sbb
mov
adc
jmp
imul
fdivs
adc
mov
sbb
inc
fs
leave
jg
arpl
dec
leave
icebp
fisubrs
in
clc
inc
fnstenv
push
ja
cmp
out
fmuls
inc
cmc
fs
inc
out
fwait
push
scas
pop
call
sbb
insb
mov
jle
mov
xor
nop
add
adc
hlt
add
bound
push
xor
inc
out
sub
pop
repz
mov
in
xchg
dec
lods
xor
sub
jne
xchg
cmp
mov
cld
sbb
pop
insb
pop
cltd
xor
lahf
out
inc
scas
push
jg
push
arpl
ror
xlat
jbe
or
push
faddl
or
fwait
test
dec
pop
scas
inc
pop
rorb
filds
js
out
sbb
push
cltd
pusha
jo
xor
in
nop
xor
outsb
push
sub
loope
ja
jne
aas
push
push
js
inc
mov
testl
sbb
rclb
xchg
lret
sub
scas
xchg
adc
aaa
jae
pop
ret
stc
lea
jno
outsl
xlat
xor
push
loop
mov
and
mov
out
mov
cltd
sbbl
jl,pt
pop
and
scas
test
sbb
mul
inc
ss
cwtl
fldenv
lds
subl
xchg
aas
adc
xor
sahf
dec
fmul
insl
call
cmpsb
lea
cli
clc
ds
sbb
xchg
cli
es
sti
insb
jl
sbb
or
cmp
lea
sub
mov
clc
enter
push
ds
repnz
adc
cltd
xchg
out
ret
pop
mov
xor
xchg
addl
xchg
enter
sub
inc
sbb
sub
inc
flds
fwait
adc
mov
cmp
dec
in
jb
pop
stos
mov
lock
in
fadd
and
lock
repz
cltd
int3
pop
mov
push
xor
int3
cmpl
sub
dec
xchg
mov
jae
mov
fildl
push
loopne
enter
dec
cmpsl
int
jbe
daa
pop
cmpsb
mov
cmpsl
stos
in
cmp
scas
adc
fxch
or
stos
or
test
cs
push
push
rorl
jmp
movsb
sbb
icebp
bound
mov
mov
or
and
daa
adc
mov
stc
js
adc
pop
cli
roll
arpl
stos
push
and
cmp
adc
xor
dec
gs
cmp
adc
outsb
repz
shl
add
adc
test
addl
shlb
lods
mov
jno
jmp
test
adc
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
ja
pushl
push
push
push
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
cmpl
jg
pushl
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
mov
decl
shl
not
mov
jmp
out
repz
cmp
pop
and
mov
cld
sbb
sahf
adc
sbb
jecxz
xor
in
jg
cltd
popa
xchg
cmpsb
in
loop
sbb
xchg
sbb
aam
inc
mov
int3
leave
xchg
push
jp
hlt
push
lock
jg
popa
and
jb
inc
cmp
xor
ficompl
nop
mov
add
loope
mov
adc
xchg
pop
jp
mov
mov
loopne
cmc
jp
xchg
repnz
dec
sub
mov
mov
aam
iret
sahf
jno
test
repnz
test
aaa
xor
cmp
push
push
xor
notl
mov
or
sbb
ja
leave
sti
and
fcmovnb
xor
push
or
movsb
sbb
pop
movsl
xor
mov
aam
aaa
pop
xchg
shll
aas
cld
mov
mov
loop
test
and
std
movsl
ljmp
call
fcoms
rclb
fcom
mov
cld
lods
mov
sbb
inc
mov
cmp
enter
imul
shll
ss
rolb
xchg
push
lret
mov
pop
rol
aaa
and
mov
test
out
sbb
scas
push
xchg
js
cli
test
dec
mov
ds
mov
hlt
xor
jbe
imul
dec
or
push
xchg
jo
fwait
inc
movsb
sub
scas
loopne
jno
mov
aaa
add
div
inc
add
negb
cmp
out
push
push
cmp
xor
dec
fdivr
jg
mov
sahf
js
sub
ljmp
bound
insb
in
sub
cmp
add
cli
mov
pop
or
rcrb
pop
sbb
lock
nop
rcll
push
xchg
in
movsb
or
js
adc
lea
xor
clc
jecxz
cmp
iret
mov
insb
dec
fsubs
xor
fsubrl
cld
inc
mov
in
mov
pop
push
mov
push
gs
repz
inc
shl
repz
or
inc
popf
xor
call
cmp
mov
mov
aas
push
cmp
movsb
jmp
ss
xchg
add
jo
repz
mov
adc
sub
push
or
in
arpl
sahf
cld
cli
mov
xor
adcb
rcr
jbe
test
imul
stos
xchg
pushf
ja
in
jecxz
ja
movb
lds
shll
outsb
pop
outsb
fiadds
sbb
leave
bound
mov
pusha
lcall
loopne
fisubs
add
mov
inc
or
test
lds
sub
das
test
movsb
clc
dec
mov
sbb
push
mov
and
cmp
inc
loope
cld
clc
in
or
adc
adc
ljmp
sar
inc
or
test
imul
es
and
xchg
sbb
jo
xor
mov
fwait
stos
fistps
popf
mov
xchg
xor
xchg
cmc
mov
cmc
sbb
inc
xchg
jl
mov
adc
jg
jo
push
int
jecxz
mov
popa
xchg
std
sub
ljmp
push
mov
loop
push
call
pop
outsb
mov
rclb
mov
imul
mov
scas
enter
pop
in
imul
imul
sbb
clc
insl
mov
enter
ret
inc
pop
mov
xchg
push
repnz
dec
xchg
inc
mov
mov
pop
mov
pop
mov
push
push
push
sbbl
push
call
mov
not
mov
cmpl
mov
movl
movzwl
jmp
mov
cmpl
jb
pushl
call
mov
add
movl
adc
mov
sbb
mov
xor
and
xor
mov
xor
mov
addl
sub
mov
mov
and
mov
orl
lea
mov
mov
sbbl
or
addl
jmp
nop
movsb
call
int
cmpl
jle
hlt
sbb
sahf
adc
sbb
and
stc
xor
sub
add
into
cwtl
or
sub
fildll
sbb
cmpl
xchg
xchg
jle
push
cmp
or
mov
mov
sub
fldt
xchg
jecxz
jb
push
push
daa
loope
repz
xchg
push
inc
call
cld
and
mov
inc
loop
in
negl
dec
xor
pusha
xor
aas
fnstcw
repnz
mov
mov
movsb
nop
adc
sbb
enter
repz
pop
jg
test
mov
or
or
and
sbb
mov
push
jmp
sub
add
jge
daa
sti
and
mov
stc
mov
jecxz
movsl
scas
mov
sarl
lods
inc
loope
aas
ljmp
inc
mov
icebp
inc
inc
add
dec
inc
inc
add
mov
or
rorl
mov
xlat
mov
add
iret
in
fdivrl
adc
lahf
xchg
fadds
aad
xor
mov
out
test
js
sbb
stc
push
pop
movsl
lret
push
or
pop
ret
lock
push
push
xchg
testb
and
jns
andb
add
adc
or
gs
ja
cmp
jge
test
dec
fbstp
pop
repz
add
pop
and
lahf
and
bound
inc
pop
aaa
dec
xchg
mov
xor
cmp
push
dec
xchg
push
push
jnp
insb
fists
xchg
inc
dec
add
jg
in
enter
popf
push
push
movsl
fxch
pop
bound
add
inc
and
icebp
out
jge
cmp
mov
inc
sub
xlat
push
adcb
inc
mov
xor
jbe
or
aam
adc
fwait
mov
xchg
mov
rclb
lret
inc
pop
sbb
dec
shlb
sahf
lods
xchg
fsubrs
and
push
stos
lcall
xor
lock
scas
jnp
sbb
outsb
into
or
xchg
mov
int
and
mov
gs
sub
iret
dec
xorb
xchg
dec
lahf
mov
mov
fs
rcrb
stc
scas
mov
rol
popf
lods
out
shlb
xor
pop
loopne
or
loop
sub
stos
jle
and
mov
rcrl
add
sbb
das
aam
fdiv
xlat
pcmpeqb
ljmp
fs
aam
adc
dec
sbb
adc
mov
and
sub
je
xor
cmpsb
fbld
ret
dec
rorl
scas
arpl
fst
iret
lret
outsb
lods
and
into
mov
jle
dec
push
out
movsb
cmp
loop
and
mov
int
and
mov
sbb
mov
pop
or
push
xor
mov
lcall
sbb
adc
test
inc
adc
push
sarl
mov
or
push
mov
cmpl
jg
sbb
sub
bound
jge
add
data16
sahf
dec
xor
add
iret
mov
nop
imul
add
inc
lret
xchg
pop
xchg
xchg
scas
adc
fcmovb
addr16
lods
sub
dec
dec
and
dec
dec
lea
adc
cmp
push
gs
dec
insb
pusha
repz
fs
cmpsl
scas
pop
mov
ds
adc
lods
movsb
push
push
add
sbbb
lret
inc
and
add
mov
or
xor
cmp
movl
jne
mov
cmpl
mov
movl
mov
jmp
movl
not
cmpl
jl
pushl
pushl
call
movl
incl
or
add
sub
add
sbb
mov
sbb
shrd
shr
mov
xor
mov
negl
shl
xor
xor
sbbl
or
jmp
and
push
repnz
inc
sarb
jo
push
sub
sbb
inc
pop
negb
or
sbbb
pop
psraw
dec
or
out
or
test
hlt
addr16
and
lods
jl
cmp
add
add
sub
sub
sbb
pop
repnz
divb
mov
adc
mov
cmp
pop
cmp
jbe
xchg
loop
movsb
adc
enter
std
popa
cs
jbe
sub
adcb
adc
gs
sbb
decl
jb
and
fidivrs
pusha
jns
and
icebp
jecxz
push
add
cld
jp
mov
int
iret
test
dec
add
xchg
aad
lods
sub
push
jo
adc
pop
ret
push
dec
xor
movsl
test
stos
test
enter
mov
stc
fimuls
repnz
mov
insl
filds
add
mov
scas
xchg
cmpb
jg
loopne
negb
pusha
sub
nop
cmc
stos
andb
in
lcall
das
out
stc
nop
xchg
mov
push
scas
mov
pop
push
pushf
dec
push
sbb
or
add
sub
fiadds
push
nop
adc
movb
adc
lods
mov
add
movsl
push
idivb
jge
cwtl
inc
mov
mov
xchg
jle
push
cmp
stos
dec
bound
les
xchg
xor
add
movsb
pop
sub
stos
arpl
mov
mov
inc
lock
xchg
jecxz
or
addr16
outsl
pushf
xor
dec
loopne
es
xor
jp
sbb
iret
mov
or
mov
sbb
or
lahf
adc
sbb
stos
imul
add
add
out
aad
in
movsb
test
repnz
cmp
inc
xor
inc
scas
pop
cmp
mov
prefetch
lret
popf
push
xor
xchg
cmp
pop
xor
fisttps
shlb
xchg
push
fs
xchg
jae
xchg
roll
mov
pop
jns
repnz
jbe
ret
ret
add
jl
daa
rcrl
push
inc
jle
sbb
cs
mov
sahf
std
or
cwtl
jbe
in
dec
or
mov
gs
popf
lret
sbb
ss
and
shlb
aam
lcall
pop
mov
incb
lret
and
jmp
scas
int3
test
int
insb
ror
push
rcr
push
scas
adc
fisubl
test
stc
das
push
mov
sti
pusha
loope
jo
stos
idivl
call
lds
int3
cmc
inc
push
test
or
dec
pop
cmp
xlat
cmpsb
cmpsl
mov
push
add
out
lock
arpl
lock
popa
mov
scas
gs
jns,pn
cli
cs
test
test
xlat
and
in
call
cwtl
cmpsl
mov
adc
sub
hlt
add
xchg
xchg
insb
sbb
lods
fcmovnbe
lock
shrl
popa
lods
jb
cmp
fnstcw
imull
and
cmpsb
stos
imul
inc
cmp
xchg
jecxz
into
xor
push
loopne
dec
cs
sbb
andb
add
xchg
jmp
daa
sub
icebp
adc
add
lret
loopne
push
jae
jecxz
rolb
jle
inc
ror
fstl
jb
orb
rorb
dec
in
cmp
movl
jne
jmp
sbb
fldt
sbb
or
insl
mov
sahf
adc
sbb
mov
cmp
loop
in
shl
lret
cmp
xchg
arpl
mov
data16
pop
in
fbstp
cmp
xor
mov
or
jbe
adc
push
dec
into
fisubs
repz
stos
cwtl
pmaddwd
sbb
movzbl
mov
icebp
inc
out
sbbl
ljmp
mov
mov
adc
sbb
cld
shlb
add
xchg
fnsave
mov
outsl
int3
jb
test
shl
lods
jg
adc
sbb
iret
mov
sbb
aad
test
mov
stc
push
rcrl
inc
and
mov
xchg
aaa
iret
ljmp
push
xchg
scas
pop
pushf
cli
mov
mov
fstpt
pop
jle
je
cmpsb
cld
es
inc
data16
lahf
jbe
inc
mov
cld
mov
jl
push
mov
lret
sub
or
fstl
jns
add
mull
stos
mov
ret
fcoml
or
adc
dec
dec
ds
div
mov
and
cltd
test
in
addr16
popf
mov
leave
test
fcmovb
mov
out
cmpsl
rclb
test
cmp
mov
pop
js
int3
out
ja
sub
mov
sub
gs
mov
insl
cmpsl
adc
rolb
xchg
pop
fwait
pop
fmulp
cmp
mov
out
jae
insl
jns
adc
fsubl
jns
insl
inc
loope
popa
fidivrl
and
popa
decb
sti
popf
jo
cltd
jg
xchg
jp
mov
lock
jl
das
loop
and
and
int
pushf
sbb
jbe
ret
mov
cs
orl
add
or
pushf
xor
or
mov
dec
and
test
cld
cltd
dec
jmpw
and
mov
sbb
xchg
shll
lret
adc
and
push
sahf
push
and
jns
pop
ljmp
mov
ja
outsl
mov
jecxz
jns
dec
test
fwait
lock
jae
push
aas
lods
lahf
cltd
jnp
lret
decb
mov
xor
cmp
cmp
jmp
pushf
fnstsw
aam
dec
mov
popa
pop
popf
incl
outsl
inc
add
xchg
cmpsl
mov
in
loop
and
test
out
pop
mov
sbb
jge
fwait
jb
andb
or
cmc
lods
fsubrs
push
int3
or
repnz
cmpsb
lret
jmp
rorl
movsl
shll
lds
mov
ret
neg
sbb
out
enter
test
sbb
add
sub
xchg
adcl
jle
subl
dec
faddl
mov
hlt
and
jecxz
pop
leave
add
bound
mov
dec
loopne
cmp
in
dec
xor
cli
push
inc
and
mov
in
xor
sub
cmp
or
add
and
mov
xchg
xor
insl
out
sub
sub
cli
xchg
pop
ljmp
inc
sub
or
daa
inc
add
sti
fwait
sub
std
mov
std
ret
stc
ret
stos
jmp
xchg
xchg
push
sbb
add
mov
cmpl
notl
mov
jmp
not
cmpl
jne
pushl
call
xor
negl
xorl
andl
sbb
or
mov
cmpl
movl
mov
jmp
mov
cmpl
jbe
push
push
call
adcl
sbbl
mov
or
xor
add
adc
mov
xor
orl
mov
mov
and
mov
orl
shrd
mov
adc
mov
xor
adcl
shr
orl
mov
sbbl
xor
orl
or
subl
shl
subl
sub
cmpl
movl
mov
jmp
mov
cmpl
jne
push
call
mov
xor
xor
sub
or
sbb
xorl
xor
sbbl
orl
mov
cmpl
mov
mov
movl
jmp
movl
movl
cmpl
jle
push
call
and
adc
or
add
add
mov
xorl
mov
add
jmp
and
fdivrl
xchg
mov
dec
fistps
sbb
jbe
sub
scas
hlt
outsb
mov
out
inc
add
ljmp
mov
fnstenv
stos
loope
or
cmp
xor
mov
mov
push
push
movsl
loopne
mov
ret
movsl
loopne
bound
sbb
cwtl
lods
push
mov
hlt
ss
inc
push
pushf
jle
push
xchg
mov
mov
cs
sub
mov
cld
pop
sarb
and
mov
mov
incb
aaa
aad
mov
scas
xchg
push
stos
inc
das
cmp
pop
repz
add
orb
and
iret
scas
xor
dec
cli
test
xchg
ja
and
jno
sub
sub
mov
dec
adc
xor
jno
lcall
mov
addr16
adc
xchg
xor
das
fwait
push
daa
sub
pop
lret
stos
das
arpl
push
cmp
sbb
divl
inc
xchg
je
pop
xchg
test
mov
pop
ret
sarl
in
cld
adc
pop
pop
inc
mov
add
dec
fisubrs
xchg
inc
sub
enter
test
cmp
sbb
xchg
xor
bound
sbbb
push
mov
jle
ds
lea
pop
sub
cmp
pop
xor
int
hlt
in
jo
rcrb
or
sub
xchg
mov
dec
std
mov
mov
adc
fdivrp
xchg
ret
xor
stos
out
adc
push
dec
insl
dec
scas
aad
test
push
js
jne
mov
mov
das
in
dec
mov
or
dec
aad
jl
int3
pusha
or
pop
mov
movsl
imul
test
dec
jp
pop
jecxz
xor
das
and
push
jno
aas
movsb
lret
push
ret
mov
mov
outsb
inc
incl
inc
cmpsl
xchg
lods
mov
and
ds
repnz
sahf
sarb
and
nop
ss
xor
test
xor
mov
adc
lds
or
or
scas
adc
aam
mov
mov
inc
ja
mov
sbbb
sarl
dec
in
shr
in
pop
loopne
adc
stos
and
in
mov
adc
test
adc
movsb
in
test
adcb
push
movsb
or
adc
mov
aad
arpl
call
scas
je
leave
add
pop
repnz
sub
mov
dec
roll
jp
cmpsl
pcmpeqb
ret
pop
pop
insl
or
rolb
fwait
push
sahf
call
les
mov
xorb
push
xor
test
sbb
xchg
enter
and
xor
inc
mov
cmc
mov
mov
loop
sub
incb
dec
dec
sub
push
imul
jns
movb
push
sbb
inc
sbb
xchg
lock
mov
or
out
popa
push
xor
in
les
xlat
or
jge
ficoml
or
dec
icebp
jno
std
pop
push
repnz
out
andl
mov
cmpsl
adc
shlb
and
inc
out
lock
pop
jno
aas
sub
dec
lahf
dec
push
cmp
add
rolb
dec
in
ret
adc
mov
adc
in
mov
cmp
ffree
std
add
out
addr16
scas
pop
sub
flds
add
sbb
mov
mov
mov
mov
mov
add
shrd
sub
shr
and
mov
andl
jmp
subl
and
sbb
jl
xlat
sbb
sahf
adc
sbb
xchg
testl
mov
xor
and
cli
sbbl
ja
inc
lret
sub
lods
inc
mov
loope
mov
jge
les
add
mov
lods
test
mov
mov
fistps
push
addps
and
outsl
in
imull
jg
xchg
out
xchg
jmp
xchg
pop
jle
adc
arpl
fsubs
fwait
cltd
in
andl
push
ud2
ljmp
pop
inc
sbbb
imul
aaa
xchg
or
fnsave
cmpsb
int3
cmp
shl
jne
bound
sbbb
cli
and
loopne
mov
rorl
dec
ret
dec
out
in
stc
sbb
pop
rcrl
leave
lahf
addl
inc
xchg
sub
add
movsb
inc
into
add
inc
cmpsb
add
lret
sbbl
loope
and
jp
int
cmp
pop
and
movsl
mov
daa
lret
mov
xchg
cmp
outsb
mov
sbb
repnz
xor
mov
lcall
add
jecxz
dec
faddl
rolb
add
and
jl
nop
andl
setl
cmp
jb
jae
fistpl
xchg
fistps
in
popa
je
cmc
divl
ficoml
cmp
jg
stos
sbb
xor
jge
je
mov
cmp
xchg
or
and
testl
xor
inc
jnp
addr16
pop
dec
rclb
rclb
jbe
int
stos
popf
jle
and
pop
fidivs
and
std
adc
pop
jno
inc
mov
mov
divl
sbbb
fldenv
cwtl
and
push
loopne
dec
jae
or
scas
aam
jae
ret
adc
icebp
inc
sbb
mov
xchg
dec
jecxz
pop
fnstsw
mov
jo
sub
insb
push
mov
cli
cwtl
test
movsb
icebp
popf
xor
fiaddl
xchg
push
test
xchg
lret
lcall
pop
cmp
aam
mov
push
not
jb
mov
xchg
inc
cs
aad
cld
inc
repnz
dec
in
mov
jns
or
sti
adc
movsl
movsb
adc
test
cli
jge
shr
divb
mov
bound
out
push
addr16
adc
lea
mov
sub
aas
into
rclb
dec
push
push
fwait
and
add
pop
loope
enter
loope
mov
test
lcall
mov
push
arpl
call
sub
scas
ret
jns
pop
daa
in
ljmp
das
lcall
push
aad
sub
jnp
pcmpgtw
inc
add
out
imul
repnz
cld
xor
mov
stos
ljmp
mov
mov
or
into
pop
xor
lret
movsb
sub
push
mov
scas
in
testl
xchg
test
enter
jno
pop
sub
mov
nop
loop
shl
decb
insb
adc
aas
inc
in
dec
or
in
cmp
and
int3
jmp
sbb
addr16
pop
pop
xchg
movsl
leave
or
aas
sbb
add
push
add
sbb
xor
or
shl
and
xor
mov
and
or
mov
movzbl
sbb
mov
jmp
xchg
xchg
lcall
stos
sahf
pop
xchg
sbb
sahf
adc
sbb
xlat
ficomps
addb
mov
test
arpl
cmp
mov
push
jmp
sbb
push
mov
inc
imul
mov
dec
sarb
mov
cmp
addl
add
ret
repnz
and
scas
mov
cli
lods
xor
xchg
sbb
lock
cs
call
adc
push
pop
addb
loopne
pop
inc
int
call
jae
xor
loopne
shll
xor
sbbb
add
pop
nop
cmp
into
pop
imul
out
push
mov
fadds
ret
jmp
js
bound
lods
fisubrs
rcrl
idivb
aad
popf
push
or
bound
mov
call
in
enter
data16
stos
adc
inc
imul
sub
lds
adc
js
inc
sub
push
or
xchg
lahf
iret
jle
fcompl
sahf
sub
bound
aad
dec
or
xchg
sub
cmp
in
sbb
and
fistpll
inc
lahf
insb
xchg
ds
call
in
repnz
ret
fbld
cmc
sarl
imul
lret
mov
sti
stos
xor
xchg
loope
adc
das
push
pusha
push
push
dec
pop
scas
push
xchg
test
std
push
xor
cmp
xchg
xchg
jo
flds
pop
test
in
cld
test
fnstenv
mov
pushf
jne
push
pop
pop
mov
icebp
adc
scas
and
or
jnp
xchg
aam
or
shlb
xchg
insl
and
gs
repz
insl
mov
sbb
mov
pop
mov
repz
sbb
orl
xchg
shlb
nop
ja
repnz
dec
dec
data16
cmc
pop
inc
test
push
fwait
shll
aad
push
mov
mov
out
bound
inc
cmpsb
sbb
fs
out
push
popf
mov
xchg
aam
int3
xor
test
scas
sub
adcb
cltd
repz
arpl
sbb
mov
dec
lret
adcb
inc
xchg
cltd
or
fsubrs
mov
sbb
addr16
jecxz
pushl
xchg
jl
ret
mov
aaa
push
das
cwtl
pusha
adc
jne
ror
jp
jo
int
imul
shll
sub
pop
or
into
out
add
push
xchg
mov
sub
xchg
outsb
mov
xor
sub
out
pusha
addr16
mov
add
sbb
lods
cs
outsb
test
int3
hlt
inc
daa
mov
dec
test
pop
adc
or
jge
popa
pushf
addr16
lds
incl
adc
xchg
lahf
or
ret
rcrl
inc
and
mov
jecxz
ficomps
adc
test
out
aaa
lea
rcll
enter
insb
fildll
xorb
mov
inc
and
scas
push
test
ss
clc
aas
dec
cmp
and
cmc
test
stos
lods
andl
mov
adc
dec
jle
sbb
sub
test
ds
nop
mov
ret
lock
inc
loop
imul
jl
push
popf
popa
je
out
lods
roll
orl
shr
mov
or
mov
jmp
add
lea
fcompl
pop
or
mov
fcmovnb
sbb
sahf
adc
sbb
xor
test
pop
aad
cmc
test
fildl
cltd
jmp
pop
xchg
mov
xchg
jle
cmp
test
insb
jo
andb
or
xor
out
push
sbb
xchg
sbb
push
insb
test
lret
fsincos
loopne
add
lock
adc
in
sbb
insl
in
mov
insl
fnstsw
js
in
mov
cmpsb
inc
jge
js
mov
imul
jecxz
mov
out
jo
fimuls
inc
xchg
pop
dec
shlb
loope
rolb
mov
adc
shr
sahf
mov
imul
mov
xchg
gs
adc
in
lahf
loope
mov
xchg
and
jo
test
mov
push
jo
mov
xchg
xchg
test
fimull
dec
out
std
jge
aas
mov
shlb
dec
dec
sbb
or
sbb
lods
shr
call
and
int3
out
jp
repnz
movl
sbb
incl
ficomps
cmp
cmp
leave
cmp
in
jae
lds
popa
add
add
out
pop
sub
rcl
jmp
shlb
pop
xchg
xchg
mov
mov
movsl
mov
push
ljmp
sub
jmp
inc
mov
cli
rcrb
lret
pusha
cltd
push
loope
jnp
xchg
bound
repnz
cli
lret
push
cmp
mov
xchg
xor
cmp
push
sub
pop
gs
dec
sbb
aaa
aas
add
ret
fdivrp
or
sbb
jne
cmpsl
cwtl
inc
xor
jne
add
sbb
addr16
aaa
std
push
iret
mov
mov
pop
rolb
in
push
repnz
cld
hlt
aas
sbb
cwtl
jmp
ds
scas
insb
cmp
or
imul
jl
add
dec
enter
dec
xchg
in
test
sti
aad
sarl
mov
xor
push
aaa
push
stc
adc
and
ss
and
out
or
mov
std
add
adc
rcrl
pop
insl
mov
and
fadds
mov
data16
inc
and
fucomip
fucomp
or
dec
cli
or
out
inc
sbb
jecxz
enter
shll
mov
aaa
and
or
push
or
jl
fisubl
xor
cmpsl
fwait
sbb
jge
xlat
push
movsb
popf
add
push
lret
cltd
adc
dec
xchg
bound
and
out
pop
sahf
inc
dec
ret
daa
divb
addr16
js
jge
lds
inc
xor
pop
loop
fwait
adc
aam
mov
mov
outsb
cld
insl
imul
into
adc
xchg
insl
leave
dec
dec
adc
and
cwtl
mov
dec
pop
sahf
xor
sub
enter
sbb
or
pusha
rcrl
lock
mov
fdivl
imul
fsubr
mov
mov
pop
cmc
inc
xchg
xchg
xor
xchg
decl
lods
sbb
push
fistpll
out
fcompp
inc
pop
jbe
mov
sbb
fs
sub
in
push
add
int
xchg
jo
or
insl
dec
and
les
pop
cli
cmp
sbb
jae
loopne
push
mov
sub
insb
pop
sbb
fistpll
push
aam
xchg
mov
push
out
jg
pop
cmovbe
pop
inc
cltd
jns
push
repnz
or
in
add
mov
inc
add
shr
flds
add
scas
ds
and
sbb
fsubrp
push
stos
out
sbb
pusha
rcrl
sahf
adc
sbb
fdivrl
add
pop
lret
and
xchg
mov
adc
xchg
leave
add
scas
aad
xchg
sbb
xchg
xor
jbe
movsb
push
rolb
loope
das
flds
popf
or
jo
clc
fbld
mov
pop
and
xchg
daa
leave
sub
mov
sbb
lret
xchg
ss
jns
das
mov
lock
cmc
and
scas
mov
stos
add
into
popf
adc
dec
push
and
xor
outsl
leave
push
jns
dec
loop
stos
fs
dec
inc
sbb
repz
mov
loope
shrl
dec
orl
mov
call
orl
lret
les
sti
add
mov
shlb
lahf
sub
dec
into
mov
out
out
dec
cmp
pusha
test
add
pop
cmp
fsubrs
jo
imul
imulb
stos
jb
jbe
out
call
movsb
mov
and
sub
sub
xchg
arpl
sub
fisttpll
xchg
and
cmp
insl
cmp
and
loope
mov
ret
mov
imul
mov
stos
dec
insl
testb
sahf
ljmp
sbb
sbb
add
pop
add
loope
in
ficoms
test
and
imul
cmp
mov
lock
jnp
jb
xchg
cs
xor
out
out
and
shlb
mov
push
push
and
inc
lret
enter
aad
add
sbb
lret
sub
cld
out
jg
push
imul
or
sbb
ljmp
add
lds
mov
in
or
add
add
out
mov
dec
sbb
and
fsubrs
nop
and
cli
xor
jno
dec
aad
and
test
add
or
xor
pop
sbb
xchg
xchg
shlb
gs
add
out
sbb
jbe
popf
cld
or
pop
insl
xchg
mov
pop
test
mov
push
int
in
shll
push
call
sbb
mov
inc
movsb
popa
mov
lods
mov
xor
call
push
mov
xchg
push
ds
xor
pop
adcl
xor
in
xchg
xor
outsb
cmp
shll
xchg
subb
stos
cmp
fistl
movsb
pop
dec
aam
dec
jmp
jmp
mov
mov
xor
rcll
jg
mov
jge
jnp
adc
cmp
dec
jae
sub
xchg
out
push
mov
inc
inc
test
shr
mov
stos
push
pop
and
enter
adc
add
cmp
jp
loopne
pop
lret
cmpsb
fiadds
mov
push
aam
pop
rclb
ret
mov
dec
es
mov
sbb
lcall
jmp
shr
jmp
arpl
push
faddl
lcall
rclb
inc
push
pusha
sbb
imulb
cmc
push
cmpsb
add
ror
mov
inc
add
lock
push
add
repnz
add
mov
pop
xchg
stc
in
pop
aad
push
and
push
in
sbb
push
je
add
loope
lea
adc
mov
or
mov
movl
shrd
adcl
shr
cmpl
mov
movl
movl
jmp
mov
movl
cmpl
jg
push
pushl
call
and
sub
orl
adcl
mov
mov
add
xor
xor
xor
mov
add
mov
mov
add
mov
sub
mov
xor
mov
xor
addl
or
subl
shl
and
imul
mov
mov
shrd
sbbl
mov
sbbl
mov
adcl
xor
shr
adc
mov
mov
xor
movl
or
adcl
shl
orl
sub
mov
movl
cmp
not
mov
movl
jg
mov
xor
mov
sbbl
shrd
sbbl
mov
mov
xor
orl
shl
xor
andl
or
shr
or
mov
mov
cmpl
mov
mov
not
jmp
movl
cmpl
ja
push
pushl
push
call
orl
add
adc
xorl
sbb
cmpl
movl
mov
mov
jmp
mov
cmpl
jge
pushl
pushl
call
incl
mov
mov
sub
imul
xorl
mov
mov
sub
mov
mov
sub
and
mov
subl
mov
shrd
shr
mov
xor
xor
sub
mov
inc
mov
addl
xor
xor
xorl
or
xorl
shl
andl
imul
addl
sub
jmp
addl
mov
cmpl
movl
mov
movl
jmp
movl
movl
cmpl
jae
push
push
call
add
adc
add
andl
dec
xor
or
add
mov
add
mov
xorl
shrd
mov
cmpl
mov
mov
jmp
movl
movl
cmpl
jb
push
push
call
not
adc
neg
mov
mov
sub
mov
xor
or
sbb
cmpl
mov
notl
jmp
movl
cmpl
jb
push
pushl
pushl
push
pushl
call
sub
subl
orl
adc
sub
movl
mov
xor
shl
adcl
xor
xorl
or
shr
mov
sub
mov
jmp
xchg
stc
xchg
out
insb
push
jbe
push
stos
pop
sbb
sbb
fimull
inc
enter
dec
lahf
sahf
lret
cmc
xlat
test
jo
rorl
aad
push
xchg
xchg
xchg
sbb
dec
push
xchg
out
mov
xor
pop
xchg
aam
and
hlt
js
dec
adc
test
jle
aam
fcmovne
sub
mov
mov
pusha
daa
xor
ds
jno
jae
fs
jl
mov
shrl
loop
outsl
mov
sti
mov
mov
pop
add
repnz
or
aas
int
inc
cmp
xchg
rcrl
stos
push
adc
and
test
out
stos
mov
cmpsb
xlat
testl
push
fidivs
jb
testb
jle
mov
inc
xor
out
or
xor
fcmovnbe
fisubs
mov
dec
mov
adc
jle
sub
inc
pop
lret
fiadds
dec
bound
es
sub
xchg
rcrl
cmc
push
ljmp
js
negl
fistl
stc
xor
and
ljmp
sti
jb
je
xchg
or
jle
sarl
loope
xorl
xchg
or
aaa
push
or
ffree
enter
mov
xor
out
fstpt
cld
inc
push
push
adc
pop
popa
dec
dec
dec
adc
mov
imul
add
out
xchg
jle
in
cs
xlat
sub
mov
adc
jecxz
and
cld
imul
aas
dec
cs
mov
pop
mov
int3
or
mov
pop
mov
ret
sbb
fiaddl
jne
mov
add
xor
aaa
adc
fucom
out
xor
push
shll
jle
insl
xor
imul
mov
or
pop
or
ds
xchg
cmpsb
movsl
cmp
aas
sbb
cld
adc
xor
adc
cmpsl
fisubrl
ja
and
mov
adc
je
imul
pop
and
into
xchg
push
fsubrs
ror
jae
sbb
ret
iret
stc
xlat
inc
test
in
sub
test
pop
mov
sbbb
jne
popf
sub
fucom
jg
rcrl
pop
dec
jl
add
scas
les
xchg
mov
dec
enter
or
daa
mov
test
out
aad
inc
push
jle
mov
rorl
pusha
xchg
je
cmp
inc
dec
xchg
sub
inc
sti
stos
add
fwait
jbe
dec
inc
lret
clc
inc
or
loop
ret
jp
jbe
pop
addb
incl
jbe
in
push
bound
xor
mov
int3
jno
xor
hlt
jo
sub
xchg
outsb
test
test
inc
mov
xor
dec
xor
test
sub
sub
mull
js
inc
jle
cmp
iret
add
out
mov
xchg
inc
push
lret
xchg
and
xor
xor
jo
mov
cmpsl
arpl
dec
mov
movaps
xchg
dec
outsb
fwait
dec
adc
adc
xor
cmp
cmpl
pop
xchg
rorl
es
lret
dec
push
pop
dec
cltd
adcl
icebp
in
xlat
lds
dec
jae
push
cmpsl
jnp
jecxz
and
lds
xor
in
imul
jecxz
sub
pop
and
push
aaa
jg
mov
or
mov
jmp
test
lret
fs
gs
cld
mov
xchg
das
xchg
addr16
pop
push
dec
mov
negl
mov
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
jb
push
call
adc
orl
negl
sub
sub
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
jmp
ret
scas
sar
fcmovb
scas
mov
jl
inc
movsl
mov
sahf
adc
sbb
movsb
stc
xchg
in
orb
sub
jnp
sbb
add
xor
leave
jae
out
in
icebp
and
inc
sbb
mov
mov
jae
fcomps
mov
xchg
xor
jnp
add
dec
cmp
push
lahf
sub
mov
sahf
or
pop
or
inc
sbb
cld
xchg
lds
rorl
pusha
sub
clc
sti
fs
pop
xor
sbb
mov
mov
push
cmp
pop
je
xor
add
popl
pop
xchg
dec
in
xor
imul
mov
outsb
stc
out
cli
loopne
call
fcmove
jmp
insb
test
cmp
adc
ljmp
jo
mov
icebp
call
mov
or
outsl
or
gs
outsb
xor
dec
sti
ja
nop
jmp
xchg
adc
jecxz
adc
xor
sbb
mov
lea
dec
fiaddl
ljmp
and
testl
out
pusha
push
mov
push
iret
in
and
sbb
and
fcompl
push
xchg
fwait
stos
fs
mov
cmp
insb
popa
mov
arpl
lret
lods
lahf
faddl
lods
dec
cli
decl
std
inc
imul
rcrb
cmp
xchg
cmpsb
cwtl
out
lods
jp
mov
and
mov
adc
push
jecxz
xchg
mov
cmp
mov
decl
pop
inc
fidivs
and
daa
push
std
jns,pn
jo
adc
add
ss
out
pusha
xchg
pop
cld
gs
xchg
ljmp
sub
ss
or
jge
imul
repnz
ljmp
dec
mov
mov
and
fisubrl
int3
les
icebp
mov
inc
sub
jge
mov
dec
data16
xor
cmpsl
pop
xor
pop
ja
repnz
es
dec
push
sub
add
lock
sbb
nopl
pop
push
jp
les
into
sbb
rcrl
flds
jne
sbb
adc
fbstp
iret
jns
mov
push
into
repnz
mov
test
add
push
sbb
lcall
loopne
stc
in
repz
sub
mov
or
sti
adc
push
lret
sub
push
xchg
lret
icebp
bound
push
jp
jne
and
mov
xor
dec
sahf
xlat
dec
insl
mov
sbb
push
cmp
fsts
into
popf
add
and
add
or
add
xchg
pop
imul
fiaddl
mov
jge
cld
mov
mov
test
addr16
insb
lret
inc
xor
sbb
neg
lahf
mov
stos
inc
stc
mov
pop
sbb
sub
lcall
dec
jle
out
xor
mov
dec
lret
std
jnp
sarb
fwait
shlb
and
popf
aaa
push
jb
cwtl
repnz
lcall
and
movsl
repz
jg
adc
pop
loop
or
addr16
aas
cmp
es
adc
imul
sub
mov
fucomip
jno
add
repz
mov
lea
add
cmp
jl
mov
test
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
jmp
cmp
lock
shll
and
repnz
sbb
xchg
sbb
scas
dec
xor
and
lods
mov
push
arpl
inc
or
add
test
int
lea
enter
or
push
mov
sub
inc
sub
fldcw
push
or
addb
popl
shll
fisttpl
cwtl
in
and
xchg
push
clc
xchg
lods
xchg
push
cmp
imul
inc
outsl
mov
xchg
mov
dec
loopne
ja
in
xor
xorb
popf
sbb
call
fildl
xchg
inc
jns
adc
gs
mov
pop
push
jae
jge
rclb
push
in
jae
out
addl
cld
cmpl
mov
mov
pushf
lds
shrb
sub
call
sbb
add
in
push
scas
mov
xor
subl
mov
or
repz
cld
inc
imul
sbb
cli
push
inc
shlb
not
xor
inc
ja
mov
pop
adc
sub
pusha
lods
movhps
leave
movsb
inc
push
decl
dec
mov
xor
out
fwait
dec
std
xor
lods
xchg
sub
insb
outsl
pop
je
jmp
js
xor
pop
hlt
adc
movsl
sub
repnz
fbstp
orl
dec
jae
enter
mov
in
hlt
xlat
das
out
nop
xorb
mull
jp
into
popf
loopne
cmc
scas
jns
sub
mov
hlt
mov
jl
add
daa
fst
push
xor
adc
lds
fstps
add
mov
push
mov
and
fldln2
pop
jge
test
or
bound
mov
xor
imul
jb
cld
in
jae
test
in
and
push
cld
and
mov
ret
jb
cmp
mov
sbb
push
in
xchg
sub
add
mov
inc
or
and
fldt
adc
mov
push
cmp
ret
into
dec
ret
shlb
ja
or
cmp
dec
jnp
gs
out
sbb
sti
push
scas
push
inc
mov
jns
stos
xor
xorb
or
out
xchg
pop
ficoms
sbb
ljmp
outsb
push
leave
cmp
out
sbb
inc
mov
nop
fidivs
mov
call
call
lret
movsb
pushl
outsl
inc
movsb
add
add
fnstsw
push
mov
or
dec
stc
imul
or
pop
sbb
cmp
lock
orl
mov
fs
test
or
or
xcrypt-ctr
cmpsl
cltd
sbb
jne
pop
mov
dec
dec
and
lcall
mov
add
mov
lret
adc
inc
fsubl
js
mov
into
xlat
pop
jle
mov
inc
mov
adc
call
popa
aas
out
in
or
mov
dec
jp
sub
sbb
lea
mov
es
ret
fs
pop
test
or
rcpps
mov
int3
push
jmp
inc
repz
sbb
add
and
add
lcall
insb
add
into
pop
mov
lods
inc
add
es
andl
insl
cmpsl
mov
dec
dec
loopne
pushf
jno
dec
std
xor
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
jmp
sarl
mov
lds
stos
stos
pop
mov
sbb
frstor
ja
cmp
repz
mov
aas
enter
arpl
movsl
push
jno
add
stos
sahf
popf
xchg
add
or
xchg
jnp
enter
adc
jnp
repnz
push
adc
inc
out
scas
sub
push
push
daa
pop
fisubrl
fsubs
jnp
shl
cmp
int
ja
dec
aas
and
int3
clc
test
add
fsubr
mull
in
and
lods
mov
push
into
sahf
cmp
mov
jbe
jns
rorb
mov
dec
jge
iret
push
xor
dec
enter
and
hlt
mov
sub
fstl
mov
daa
cmp
xor
mov
cmp
es
popa
sbb
les
fdivrl
push
mov
dec
xor
loopne
mov
mov
test
mov
mov
data16
and
push
ja
jb
popa
dec
fistpll
mulb
mov
lods
inc
negb
adc
pop
fsub
and
dec
ret
aaa
sti
repnz
xor
pop
loopnew
in
movsl
inc
dec
adc
fidivs
repnz
lret
xor
or
push
cmpsl
mov
test
in
mov
sub
outsb
jns
cs
repz
stc
addr16
sub
sub
pop
jns
push
cwtl
xor
pop
pop
sahf
jb
sbb
add
ret
out
jae
ja
stos
test
ret
cmp
pusha
ret
and
cmp
je
jl
push
add
ds
push
loope
dec
xchg
int3
cld
push
stc
imul
into
and
push
mull
les
mov
outsl
mov
icebp
mov
lahf
in
jp
adcl
out
sub
sbb
rcr
xchg
imul
xor
pop
mov
add
dec
je
cmp
cmp
popa
lahf
adc
clc
jno
xchg
loop
inc
int3
xchg
cmc
lods
dec
and
inc
clc
mov
ficoms
xor
cltd
test
mov
sub
int3
sahf
out
cmp
imul
mov
daa
and
and
xchg
jecxz
mov
lret
mov
aam
stos
jecxz
test
push
ds
push
cmc
sti
sub
loop
scas
adc
das
sbb
add
and
jnp
cmp
cli
in
pop
imul
or
xchg
insb
test
add
scas
mov
pop
mov
xor
lret
fs
lcall
rol
jns
sub
negb
repnz
mov
sbb
add
and
ret
sbb
push
adc
inc
add
cli
sub
outsb
sbb
lods
cli
iret
pop
int3
data16
dec
push
jo
mov
repz
in
cmp
add
xchg
movsb
mov
out
popa
sarl
je
pop
adc
les
xchg
cmp
mov
sub
xor
lods
je
sub
or
lds
cli
iret
jp
fwait
test
cli
xlat
cmpsl
in
dec
mov
cmp
clc
inc
mov
std
add
jb
push
ud0
cmp
pop
mov
cmpsb
aad
xchg
fstl
aad
jae
push
adcl
enter
popa
inc
xchg
sbb
popa
cmp
xchg
in
sbb
mov
adc
push
jecxz
insl
faddp
fs
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
push
sbb
sbb
aas
xor
lcall
sbb
leave
lods
arpl
mov
mov
cmp
and
popa
into
pop
mov
adc
adc
add
jae
test
pop
adc
ror
cvtps2pd
xor
and
ja
xor
push
pop
hlt
cmpsb
mov
push
stos
jl
push
stc
decl
mov
xchg
ret
or
jb
popl
inc
orb
lea
mov
jae
add
fs
and
or
xor
and
insl
cmc
push
mov
popf
in
test
stos
and
and
mov
xlat
stos
lahf
insl
daa
add
push
mov
hlt
xchg
xchg
ficomps
sub
push
subl
aam
push
test
sbb
sub
xlat
adc
xor
ljmp
or
loope
icebp
pop
cs
sti
add
test
lods
lds
iret
inc
lret
hlt
lods
pop
jb
in
or
mov
stos
dec
push
push
pop
push
repnz
pop
mov
adc
gs
xor
cmpsb
pushf
int
jb
icebp
imul
sub
call
hlt
mulb
mov
push
sbb
out
jp
adc
nop
mov
mov
inc
dec
lret
or
scas
cmp
mov
cmpsl
cld
jbe
xor
push
jge
fwait
jno
mov
scas
or
jl
add
fisubrl
pop
cmp
push
aam
adc
push
push
adc
jle
out
mov
sub
insl
mov
cmpl
dec
loopne
ret
mov
sub
xor
stc
mov
add
inc
repnz
dec
or
out
cmp
mov
adc
iret
jnp
pop
loope
push
mov
cmp
add
xchg
inc
push
fnstenv
in
push
incl
adc
mov
mov
adc
fs
mov
ret
lock
mov
shlb
pushf
insb
sbb
sub
mov
stos
cmpsl
jge
test
jbe
or
mov
pop
mov
and
push
cwtl
sbb
xchg
inc
cmp
repnz
dec
out
push
je
arpl
mov
mov
push
pop
jl
push
xchg
mov
loop
dec
mov
lahf
push
mov
insl
push
scas
rorl
int
jno
xor
cmp
sbb
je
das
inc
lods
pop
das
ja
xchg
mov
clc
xchg
xchg
pop
xchg
fwait
dec
daa
add
cmp
xor
xor
icebp
enter
cwtl
pop
pop
les
sar
loope
fs
inc
roll
push
gs
std
sub
push
fcomps
adc
inc
sbb
add
mov
xchg
lods
scas
aad
cmpsw
stos
into
cmc
dec
fisttpll
imul
adc
imul
shll
add
push
fdivp
rcr
pushf
and
movl
inc
in
lds
pop
mov
push
and
push
call
jae
dec
sub
cmp
dec
push
in
ljmp
aad
addr16
pop
xchg
xchg
aaa
pop
sahf
aas
pushf
clc
sti
negl
mov
xchg
int
clc
add
loopne
dec
andb
mov
mull
push
dec
mov
mov
ret
inc
add
pop
pusha
mov
fistpl
lods
popf
pop
sbb
ret
xchg
ds
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
arpl
test
ss
scas
addr16
test
sbb
loope
mulb
adc
xor
rol
cli
jbe
jno
ret
lret
dec
sbb
test
push
ret
mov
into
jle
into
je
pushf
pop
ret
push
mov
pushf
push
xchg
jmp
add
pop
jp
mov
pop
jno
sbb
sub
dec
ja
push
clc
sbb
sbb
out
test
sub
out
stos
sarb
jbe
mov
or
dec
pop
popf
adcl
enter
leave
dec
daa
mov
mov
mov
mov
arpl
cmc
ljmp
sarb
push
fbstp
mov
add
es
cmp
xchg
mov
sbb
data16
add
fistl
adc
xlat
mov
jb
idivb
iret
into
dec
jge
out
and
jbe
jecxz
xchg
jmp
dec
push
rcll
jle
mov
xchg
dec
shrl
inc
push
call
iret
mov
lret
jnp
mov
out
mov
mul
mov
mov
sahf
icebp
loopne
enter
sbb
aaa
movsl
lret
rcll
and
ficompl
adcb
jecxz
and
scas
sub
jge
mov
into
xchg
es
mov
lahf
fwait
pop
jb
gs
lds
repz
mov
iret
fwait
scas
push
dec
ja
jnp
jecxz
adc
pop
sub
mov
mov
test
dec
stos
std
inc
sub
push
inc
loopne
or
mov
mov
jp
out
xchg
fwait
je
cli
mov
rcl
in
cli
in
cld
pop
inc
stc
pop
mov
push
cmp
jnp
push
sbb
fisttpll
jbe
mov
lock
inc
insb
in
sahf
pop
and
jne
xchg
xor
pop
jno
leave
adc
sar
clc
cmp
mov
jb
xchg
pop
lcall
enter
mov
testl
mov
fcoms
pop
or
into
in
sbb
pop
and
insb
icebp
cwtl
xchg
inc
mov
movsl
jb
movsl
sub
cltd
xchg
dec
leave
sahf
sbb
adc
std
cmp
std
cwtl
cmpb
mov
cli
cli
shlw
pop
out
or
cwtl
out
cmc
jbe
cli
adc
jb
das
mov
imul
iret
inc
aam
dec
xchg
xlat
sbb
jle
out
inc
mov
xchg
pop
or
jecxz
ret
pusha
xor
scas
mov
movsl
je
es
lock
xchg
add
hlt
pop
cmc
pop
das
subb
mov
pop
add
leave
stos
and
push
iret
aaa
dec
out
mov
repnz
xor
imulb
scas
test
out
xor
mov
inc
sub
inc
cmp
sub
inc
or
xchg
push
sbb
dec
push
push
lcall
cld
bound
mov
cmp
sbb
dec
fabs
dec
sub
mov
incl
dec
mov
ljmp
clc
jae
imul
mov
add
push
outsl
jle
or
sti
fst
jl
pop
lock
push
xchg
mov
cs
sub
cld
push
jne
jle
movsb
call
xchg
sub
dec
js
bnd
jbe
mov
icebp
cli
push
add
jl
mov
test
cwtl
sub
daa
int3
scas
jl
pop
insl
mov
xchg
test
ss
mov
testb
popa
or
dec
pop
jecxz
jne
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
jmp
fcmovnb
int3
xchg
lods
jnp
sbb
cmpb
sahf
adc
sbb
mov
xor
roll
aad
je
repz
and
enter
addr16
xlat
jecxz
je
xor
mov
outsb
mov
or
and
hlt
rcll
xchg
dec
pop
cmpsb
dec
push
jo
xor
xchg
bound
pop
rolb
and
jnp
sub
in
pusha
or
xchg
mov
loope
ss
mov
movsl
dec
pop
adc
ja
scas
scas
inc
inc
jecxz
fwait
dec
rolb
insw
xchg
push
dec
int3
daa
push
pop
jl
sbb
das
dec
mov
mov
mov
add
xor
push
add
mov
sbb
mov
out
push
mov
inc
pop
cld
inc
mov
jge
jb
xchg
xor
push
js
xchg
jp
jecxz
dec
pop
fnstcw
pushf
jle
lret
push
dec
lahf
push
repnz
nop
popa
ds
push
les
mov
push
ja
sbb
repnz
cwtl
pusha
sub
adc
inc
leave
mov
push
sub
insb
dec
adc
dec
add
popf
mov
xlat
data16
int3
popf
mov
nop
jge
cmp
mov
cmpsb
jle
adc
jns
cmpsl
inc
lret
sub
movsb
mov
push
or
pop
inc
xchg
add
lods
fdivrl
test
sub
aaa
ds
fcomip
scas
push
inc
jne
out
idivb
daa
ja
cmp
popl
jb
adc
xor
iret
and
pop
sbb
movsb
inc
mov
adc
mov
stos
jge
jne
hlt
or
pop
int
test
out
rorb
push
out
mov
icebp
je
or
push
iret
mov
jnp
cmc
in
lcall
jnp
push
iret
sarb
outsl
jne
xor
xor
push
test
adc
cld
cld
jo
dec
sub
nop
xor
mov
sub
sub
out
inc
push
or
or
aam
inc
cmpsb
or
push
pop
push
jb
sahf
loopne
jecxz
xchg
and
inc
adc
popf
xchg
cld
stc
stc
movsb
lea
shlb
push
inc
push
mulb
push
xor
std
scas
imul
das
fidivrl
push
push
push
sub
gs
sbb
jbe
jb
ret
std
mov
lock
hlt
inc
into
lds
incl
enter
cmp
addr16
add
mov
popa
stos
xor
into
fnstsw
cvtps2pi
fwait
and
movsb
lret
jle
repnz
ja
int3
jns
mov
push
xchg
bound
lahf
mov
xchg
insl
mov
pusha
or
mov
out
adc
stos
out
mov
add
ret
movsl
divl
mov
add
or
jge
and
std
aam
outsl
xor
pop
push
add
xor
scas
or
icebp
loop
pop
loope
dec
cmpsl
shl
fbstp
sub
sahf
movsl
es
adc
arpl
sub
sqrtps
and
mov
inc
mov
add
stc
inc
and
and
jbe
inc
je
jns
mov
sahf
push
cs
out
out
gs
xchg
insl
cmpsl
dec
repnz
lds
push
push
push
and
inc
add
cmc
popa
sbb
shrb
stc
mov
mov
sub
mov
pop
stc
mov
mov
mov
jp
xlat
andb
xchg
ljmp
insb
or
push
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
jmp
fiaddl
mov
sub
jnp
mov
mov
ret
jl
test
sbb
leave
loopne
mov
inc
inc
xchg
outsl
mov
outsb
mov
push
push
out
adc
sub
xchg
xchg
push
fiaddl
cmpsl
push
mov
ljmp
adc
sub
mov
push
sub
lock
out
ljmp
adcl
imul
push
pop
push
lcall
cmpsl
sarb
inc
test
loope
scas
mov
mov
add
mov
imul
test
xlat
xchg
data16
inc
cmpsb
dec
adc
rorl
jo
lods
dec
faddl
and
or
in
xchg
scas
in
lea
jp
mov
jecxz
cltd
mov
jp
out
aas
cmp
pop
push
mov
pusha
pop
jne
cmp
mov
cmpsl
sub
rcrb
repnz
fwait
out
outsb
adc
push
clc
jnp
sarb
jne
mov
das
push
std
mov
stos
inc
xor
nop
jg
shrl
lahf
pushf
call
mov
stos
mov
popf
pop
mov
fildl
xlat
fisttpll
or
or
es
bound
cmpsb
push
adc
xor
add
mov
inc
xor
or
fsub
add
xchg
pop
bound
cwtl
imulb
inc
fcmovne
cmp
or
mov
out
out
js
xor
jne
jnp
cmp
hlt
ret
jbe
pop
cmp
cli
es
test
fcmovnu
mov
cli
shlb
xchg
lret
cwtl
repz
push
xor
pop
aas
sub
imul
into
gs
xchg
cmp
je
loope
repnz
xchg
test
mov
mov
mov
into
insl
outsb
out
jno
add
cld
ret
popf
pop
rcrl
arpl
pop
and
jo
and
out
iret
mov
push
addr16
mov
xchg
pop
jns
ljmp
sub
test
xorb
pop
push
icebp
enter
inc
js
lahf
hlt
notl
pop
xchg
fsubp
fwait
jecxz
xor
fs
inc
pop
loop
outsl
shlb
add
mov
out
lret
fimull
add
inc
popf
cmp
mov
mov
mov
add
fimuls
cmp
sbb
or
dec
je
or
aad
jns
adc
and
in
ret
push
add
jb
in
pop
je
orb
out
test
sbb
mov
repnz
movsb
push
dec
stos
push
cld
faddl
xor
mov
mov
mov
fadds
inc
add
sub
dec
loopne
leave
lret
dec
and
mov
mov
lods
push
lcall
cmp
push
pop
sbb
fidivs
add
cmpsl
push
inc
add
push
outsl
lcall
out
mov
pop
test
arpl
lret
xchg
repz
fs
stos
add
ss
mov
xlat
ds
cmp
xor
pop
adc
push
push
in
repz
push
mov
mull
mov
sbb
xchg
jbe
inc
push
and
mov
fimuls
dec
or
daa
push
cld
push
hlt
xor
or
sub
cmpsb
jmp
clc
and
mov
aad
insb
sub
loop
sub
pop
int
loopne
push
les
fsubl
lods
cmp
pop
xchg
mov
xor
dec
mov
lods
enter
add
enter
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
jmp
mov
jg
cmp
sbb
or
mov
mov
sbb
sahf
adc
sbb
shrl
in
popa
leave
push
scas
pop
ret
les
daa
and
xlat
mov
sub
adc
pop
jg
and
repnz
lock
cmp
adc
das
push
adc
xor
mov
outsb
push
int
sar
mov
mov
adc
mov
push
stos
adc
addr16
lock
loopne
xchg
lock
andb
lret
or
cmp
bound
faddp
push
adc
jne
push
xchg
ss
or
clc
stos
mov
pop
popa
pop
mov
sbbb
push
shrl
mov
out
sbb
or
test
lahf
clc
push
call
out
push
sub
out
outsl
ss
sub
mov
cmc
jb
insb
icebp
cmp
fcoml
jo
mov
jecxz
popw
test
nop
ret
fmull
call
les
cmpsl
mov
xor
iret
cltd
fildll
daa
mov
aad
cmp
mov
loope
mov
sub
xchg
loop
arpl
inc
repnz
out
xchg
jbe,pn
addb
mov
mov
rcll
lock
lock
popf
xlat
xor
xchg
xchg
lds
outsl
pop
loopne
lret
or
sub
aad
mov
loope
cmp
and
inc
xchg
fwait
push
lods
cmp
adc
sbb
jns
sub
push
xor
lret
sbb
xchg
outsl
lock
in
loopne
xor
xchg
fwait
mov
lahf
inc
ljmp
test
dec
lock
insl
adc
sub
pop
mov
pop
mov
pop
jg
sub
sub
es
movb
adc
js
repz
sub
jno
push
into
fimuls
sbb
arpl
stc
and
jecxz
icebp
xchg
daa
in
xchg
or
push
add
xor
inc
pushf
push
xchg
xchg
xchg
call
sbb
inc
jns
xor
out
in
data16
xchg
jbe
das
sub
in
in
xchg
inc
cltd
inc
imul
mov
or
pop
icebp
cmpsb
loop
cwtl
fisttpll
jno
mov
or
loop
xlat
int
xchg
enter
inc
push
insb
mov
jne
sbb
cmp
mov
cmp
push
mov
mov
sub
std
inc
jp
mov
pop
scas
je
sub
fiadds
xchg
fucom
mov
ljmp
cwtl
ljmp
fsubr
cld
and
cmp
pusha
pop
leave
js
mov
addb
rcrb
sub
cs
xchg
fnstcw
mov
nop
pop
scas
xor
dec
mov
fmull
push
idivb
mov
xadd
dec
mov
xchg
cld
jmp
mov
out
call
movsl
enter
cmp
popa
or
test
mov
sbb
fcomip
test
scas
sbb
test
lahf
xchg
fsubrl
sbb
cmp
xchg
sbb
xchg
mov
push
into
xor
fwait
push
sbb
inc
out
out
and
sbb
lods
sub
sti
pop
jb
pusha
dec
dec
test
jb
loopne
jae
test
js
cmpsb
lods
adc
pop
sbb
subl
mulb
xchg
int3
or
enter
das
aaa
mov
dec
xor
pop
shll
sub
or
xchg
imul
or
or
mov
in
cmp
nop
xchg
subl
jmp
repnz
jmp
imul
pushf
pop
jle
push
lods
mov
jne
sbb
in
xor
mov
sahf
pop
jbe
jp
cmp
movsl
sub
jecxz
sahf
pop
inc
repz
iret
pcmpeqd
and
pop
sahf
mov
lods
jo
or
mov
out
fdivl
jg
js
dec
sub
js
inc
jg
stos
adc
js
pop
push
and
xchg
sub
xor
jmp
test
cmpsl
mov
xchg
stos
adc
loop
pop
inc
lahf
lret
lods
ret
push
repnz
aam
adc
ficoms
xchg
jmp
stos
aas
inc
or
int
lods
pop
pop
lcall
mov
xlat
mov
and
sub
mov
stos
inc
xchg
loopne
push
cs
sub
push
jge
push
or
push
getsec
jp
cmp
push
icebp
dec
pop
shrb
out
mov
pushf
loope
mov
pop
das
mov
add
dec
adc
xor
mov
ret
pop
aam
cltd
in
xchg
xor
mov
fdiv
idivb
pop
icebp
cld
or
jo
xlat
ret
add
fdiv
icebp
sbb
dec
push
and
rcll
or
cmp
cmp
arpl
add
xchg
movsl
mov
pop
dec
push
sahf
es
sbb
mov
mov
jl,pt
outsl
iret
aaa
jp
xchg
xchg
cmp
inc
jb
dec
push
push
lahf
jle
xchg
jg
jb
dec
inc
lahf
sbb
pop
xor
jg
push
pop
lret
pop
pushf
dec
mov
je
inc
gs
inc
fwait
xchg
lret
es
in
shll
jbe
xor
fimuls
rcrb
cmc
inc
sub
outsl
lock
sub
sub
dec
test
js
inc
shll
and
andb
outsb
int3
xchg
daa
sbb
jno
pop
sbb
jne
lds
cmp
xor
xchg
out
cmpsb
in
in
scas
mov
fyl2x
ret
cmp
movsl
out
mull
pop
loopne
or
sar
repz
nop
cmp
pushf
jecxz
push
jbe
jae
andb
and
test
stos
clc
push
and
cmp
xor
sub
inc
cltd
mov
push
push
push
adc
roll
lret
fwait
or
mov
outsl
fstps
push
fistpll
dec
test
jg
fldl
xorb
idivb
aas
mov
inc
mov
lods
iret
and
jmp
dec
cmp
push
daa
push
cltd
adc
hlt
adc
mov
cmp
jo
outsl
mov
push
inc
xor
arpl
clc
shrl
fnstenv
sub
xchg
ljmp
dec
imul
xchg
xlat
push
enter
sysret
pop
inc
popf
lods
addr16
fimull
insl
clc
in
cli
bnd
jecxz
inc
sbb
add
inc
and
xchg
sbb
adc
lret
lods
insb
stos
cmpsb
dec
into
cli
rorb
xchg
cmc
scas
inc
and
jmp
dec
scas
jmp
adc
loopne
lcall
pushf
xor
cmpl
pop
fildll
add
outsb
iret
xchg
ss
mov
jecxz
dec
mov
bound
mov
call
pop
push
push
add
sti
bound
mov
cmp
mov
es
ds
jecxz
out
adc
or
test
mov
lods
insl
lock
negb
inc
xor
mov
inc
addb
ret
push
and
mov
aas
or
jecxz,pt
ror
mov
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
xor
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
jmp
push
dec
dec
testb
cs
sbb
mov
sahf
adc
sbb
inc
loope
jb
cmp
xor
hlt
ret
test
stos
popf
mov
pushf
ret
mov
std
xchg
inc
sbb
ja
dec
lods
sbb
jno
jp
aad
das
sbb
add
jmp
sbb
pop
pop
scas
mov
cmc
jnp
das
fidivrl
movsb
mov
jle
bnd
push
dec
pop
imul
xchg
imul
out
mov
pop
add
fucomip
xor
movsb
ljmp
adc
into
int
pop
mov
xchg
into
out
lea
pushf
mov
and
add
inc
pop
fmul
add
xchg
mov
pusha
inc
push
pop
int3
xchg
push
in
inc
ret
inc
jp
add
dec
lahf
mov
into
andl
cli
rolb
ds
into
mov
jecxz
xchg
push
xor
jne
adc
scas
mov
mov
dec
pop
xchg
loopne
add
inc
cmp
fistl
push
mov
mov
sub
mov
inc
jle
xchg
aaa
mov
xchg
mov
divl
les
dec
jl
pop
mov
add
ret
push
ficomps
or
ja
inc
cmpl
stos
int3
or
mov
mov
push
ss
xor
and
xchg
in
xchg
pushf
loopne
dec
imul
adc
js
jnp
adc
jae
roll
int3
or
outsb
jecxz
enter
mov
test
mov
lret
fistpll
icebp
jns
rol
jne
push
sub
mov
pop
pop
or
repnz
aad
push
push
mov
xchg
pop
jae
jl
ds
jl
jge
jg
xor
jg,pt
xor
jp
imul
mov
xor
in
push
pusha
test
ret
and
test
stos
lds
cli
ds
aam
jmp
mov
push
xor
hlt
jo
test
pop
idiv
aad
cmp
xchg
enter
sub
mov
negb
inc
icebp
sbb
in
cmpsb
outsl
jl
lahf
insb
mov
mov
loop
pop
cmp
ffree
les
push
jl
jp
inc
push
adc
sbbb
cmc
sbb
sub
loope
mov
push
aad
cmp
cmp
jmp
fcomps
gs
aas
sub
test
shll
mov
xor
xor
test
jg
les
jno
dec
pop
leave
cmp
mov
jno
jne
and
sbb
xor
xor
imul
imul
ja
filds
add
jae
pusha
jge
sub
xor
popf
mov
les
mov
dec
jnp
insl
push
jo
inc
fs
xorb
inc
mov
mov
loopne
arpl
or
js
mov
subb
ret
dec
or
lret
lahf
out
or
dec
mov
andl
mov
pop
push
mov
andl
int
call
mov
dec
inc
mov
cmp
lahf
push
pusha
add
push
into
inc
pop
in
sub
mov
sbb
lcall
xchg
or
jmp
mov
xchg
xor
int3
call
imul
push
dec
lcall
jl
xchg
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jmp
xchg
hlt
xchg
addr16
in
mov
lods
mov
sbb
sahf
adc
sbb
pop
pop
xor
or
dec
xchg
ja
cwtl
mov
fs
lcall
or
pop
shrl
jnp
xchg
push
lcall
pop
les
and
addl
ret
imul
ret
jge
sbbl
mov
sbb
sbb
test
jae
pop
fiaddl
out
jo
jle
adc
repz
dec
lds
inc
pop
sub
fwait
out
add
xor
pop
int
add
cli
test
js
shll
add
lahf
add
int3
sub
call
in
into
adc
dec
cmp
xor
mov
scas
icebp
mov
add
lods
jbe
sbb
add
or
lcall
dec
adc
js
out
cmp
and
mov
movsl
inc
xor
mov
loope
loope
adc
jg
xchg
or
push
and
repz
lret
negl
adc
jns
insb
jno
roll
dec
mov
rcrl
mov
xchg
push
lret
inc
adc
push
push
or
in
push
mov
std
sti
repz
and
sar
cld
add
arpl
sarl
lods
nop
push
sbb
adc
pop
mov
outsl
pusha
sbbb
jne
fistpll
scas
imul
rcrb
imul
push
sub
push
push
jg
and
push
repz
inc
push
adc
outsb
and
jns
loop
xchg
enter
sub
sbb
pop
add
cmp
add
dec
dec
or
add
pusha
in
adc
pusha
daa
bound
lahf
jno
fisttpll
pop
sub
mov
addl
mov
sub
loopne
sbb
add
inc
jmp
mov
fsts
mov
and
xchg
gs
and
ljmp
jbe
aam
fimuls
push
mov
adc
fwait
mov
cltd
push
add
aas
aas
sub
lahf
lods
inc
lods
ficoms
fnstenv
out
dec
out
sbb
in
in
hlt
inc
test
mov
popf
call
dec
xchg
stos
sbb
sbb
ret
lahf
push
mov
dec
xor
push
sub
stc
cmp
jle
mov
and
fs
out
adc
mov
mov
mov
out
mov
inc
xor
inc
into
popf
sti
push
push
inc
int
push
cmp
loop
mov
push
push
call
ficoml
aas
xor
pop
jge
jb
lea
lods
sbb
roll
push
mov
stc
push
fstps
aas
sbb
shl
xor
popa
pop
cmp
in
mov
enter
inc
pop
sbb
inc
mov
xor
mov
fidivs
call
hlt
pop
xchg
xchg
ja
adc
lods
add
cli
adc
out
popf
pop
lods
pusha
jne
repz
or
and
xchg
sub
in
jne
push
inc
insl
sbb
fldenv
xlat
fimull
mov
into
mov
and
outsb
pop
in
lea
sub
or
in
fidivl
cmp
sub
cmp
pop
loopne
or
jno
lods
lcall
outsb
mov
push
sbb
aaa
repz
add
mov
push
jae
push
iret
add
ficoms
clc
jmp
add
add
movsb
je
mov
mov
mov
mov
lea
mov
mov
mov
jmp
or
jns
arpl
pop
faddl
mov
das
pop
sbb
sahf
adc
sbb
cld
fwait
das
out
sbb
push
movsl
daa
dec
mov
in
xchg
mov
jo
outsl
shrl
movsl
mov
jg
cmpsb
mov
sahf
adc
jb
and
and
loopne
xlat
das
mov
or
add
mov
cmp
aam
sub
shrb
add
cs
lds
pop
mov
add
push
jecxz
and
pop
inc
dec
ficomps
inc
add
rolb
adc
push
jge
sti
jnp
repz
pop
adc
shrl
in
mov
and
xor
push
sub
cli
fwait
push
ss
dec
arpl
pop
lods
inc
leave
push
fmul
test
ss
inc
xchg
andl
neg
ljmp
imul
mov
in
mov
shll
hlt
jae
or
rolb
insb
jne
jno
andb
sub
into
or
test
xor
lods
movsb
lcall
cwtl
lods
inc
repz
data16
cs
inc
insb
push
ljmp
xchg
or
fimull
test
or
cmp
test
pop
sbb
push
scas
out
cli
sbb
adc
add
and
mov
push
fiaddl
lahf
test
jle
adc
insl
push
pop
jp
add
div
or
das
notb
aam
sbb
sti
push
add
mov
cmpsl
roll
fwait
mov
sub
and
mov
movsb
push
clc
icebp
fwait
mov
jo
sbb
xlat
fsubrs
sub
inc
sbb
inc
xlat
out
xchg
adc
cltd
push
stc
stos
cmc
mov
outsl
jg
sub
stos
icebp
xchg
pop
jg
lods
mov
pop
mov
or
push
sbb
pop
fiaddl
mov
inc
aaa
insl
xchg
into
mov
cmc
ficoms
push
jo
jne
incl
fiadds
add
dec
pop
jo
mov
out
adc
fisubl
cld
shrb
adc
arpl
inc
mov
int3
xchg
insb
out
loop
lock
cltd
inc
sub
rclb
pusha
outsb
inc
rcll
push
lds
xor
or
iret
mov
int
add
mov
stc
pop
mov
jp
mov
push
pusha
push
ret
test
pop
lret
in
jge
xor
mov
and
cmp
in
xor
push
add
fst
daa
jae
int3
cmp
jbe
stos
cmc
mov
lret
imul
cmp
add
addr16
popa
sbbl
mov
push
lcall
pusha
aas
pop
xor
adc
in
shl
mov
addb
aad
and
arpl
mov
jl
xchg
inc
incl
adc
popa
and
cmp
mov
fidivrl
sbb
fstps
adc
mov
cmpsl
fbld
mov
pop
add
push
rcrb
push
jmp
mov
pop
sbb
xor
cltd
jno
pusha
jecxz
sahf
insb
js
out
push
roll
imul
dec
ljmp
add
xchg
lods
fldt
dec
jns
ret
rclb
pop
dec
or
rolb
scas
or
xor
aaa
sarl
cmp
shll
cs
mov
bound
adc
inc
sbb
sub
adc
push
mov
jmp
pop
jno
mov
xchg
fnstsw
jl
push
sbb
sahf
adc
sbb
ret
fisubs
cltd
gs
pop
dec
inc
cmp
mov
cmp
cmc
repnz
aaa
mov
sbb
xchg
jne
add
sbb
int
dec
adc
rcrl
push
in
addb
or
scas
and
or
dec
fldcw
test
pop
cmp
fdiv
imul
inc
sbb
and
sub
adc
mov
mov
inc
fsubs
xchg
fldcw
xchg
rclb
xor
jnp
inc
outsb
push
dec
xor
push
mov
xchg
insb
mov
dec
lcall
mov
mov
mov
fxch
inc
fidivs
mov
int3
mov
outsl
lcall
fs
loopne
in
mov
outsb
repz
ret
ja
add
add
icebp
mov
ret
or
movsl
mov
or
sbb
xor
push
push
ret
inc
push
mov
add
sarb
test
inc
dec
inc
jne
mov
inc
pop
orb
push
jnp
notb
insl
cmp
cmp
cmp
fmuls
mov
ret
clc
rcll
and
mov
xor
jb
add
cmc
jg
pop
cmpl
push
inc
ss
cwtl
mov
shl
aas
lret
add
ret
in
fsubrl
push
push
jecxz
lea
hlt
push
pop
icebp
lds
dec
mov
push
pop
fwait
push
in
rorl
push
cmpsb
mov
add
cli
cmp
xchg
aaa
cli
int
xor
rcll
outsb
and
pop
dec
adc
cmp
daa
dec
sub
rolb
ret
jno
fcompl
cmp
lock
xchg
rclb
arpl
leave
cmc
lock
leave
test
adc
sub
in
sbb
push
dec
sub
jp
lods
pop
loop
aas
aam
mov
rol
mov
mov
jns
leave
add
scas
loope
add
inc
xor
ja
or
out
xchg
mov
xor
inc
dec
mov
xchg
outsl
jo
pop
sub
fcmovbe
add
xlat
lcall
or
imul
adc
lret
or
push
mov
jns
cwtl
mov
popa
negl
lret
cmp
push
sub
in
mov
in
and
pop
bnd
sbb
push
add
and
cmpsl
in
xor
mov
push
cmp
sbb
out
mov
jo
sub
fs
in
push
lahf
mov
jg
add
mov
xlat
aaa
mov
repz
dec
mov
mov
add
xchg
imul
adc
in
sbb
mov
test
sbb
pushf
and
mov
cmp
cwtl
inc
inc
inc
jnp
dec
in
ret
sub
cltd
mov
aas
es
pop
sbb
dec
sahf
mov
sahf
icebp
outsl
cmp
mov
sub
cmp
push
in
xchg
push
push
out
pop
jae
inc
cwtl
enter
mov
xchg
testb
cmp
bound
test
aad
fs
add
and
xor
and
mov
add
and
mov
in
jge
std
push
xchg
cld
lcall
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
and
pop
jb
and
fistpl
cmp
sbb
dec
pop
daa
lahf
outsl
movl
fidivs
ljmp
js
xor
out
daa
fs
sub
jns
jg
scas
scas
xor
cmp
jo
or
add
adcb
in
mov
aas
dec
test
cmp
aad
sub
mov
or
loope
push
push
f2xm1
xor
sub
aad
repz
int
sbb
jmp
jmp
lds
cmp
and
pop
stos
adc
push
mov
jnp
sbb
mov
rorl
jo
dec
cmpsb
pushf
scas
jb
xchg
adc
mov
aaa
pop
outsl
in
adc
push
mov
cmc
sti
and
lea
out
mov
sub
xchg
inc
pusha
scas
test
aaa
pop
xchg
and
mov
pop
mov
pushf
out
xor
push
imul
push
and
adc
mov
xchg
rcrb
xor
sub
push
jle
and
stos
fwait
or
js
dec
imul
inc
xchg
int3
mov
push
sub
scas
jle
pop
fldt
mov
cmp
mov
fstps
aad
cli
xchg
aaa
shrl
push
ja
int
push
and
xchg
dec
pop
or
insl
shlb
jae
lahf
dec
xchg
mov
mov
pop
xlat
mov
dec
or
popf
loope
clc
xor
xchg
adc
or
dec
sbb
in
ja
adc
push
mov
mov
push
ljmp
ret
and
push
xchg
lahf
and
scas
fs
sub
cwtl
push
jae
or
jmp
scas
push
movsb
pusha
scas
ret
mov
das
hlt
cs
stos
adc
jmp
push
pop
iret
js
bound
dec
cmp
cmc
scas
into
ss
inc
rclb
sbb
xchg
stos
mov
inc
xlat
xchg
pop
outsb
in
lods
jns
xor
push
jo
push
es
mov
pop
imul
dec
es
push
in
popa
sbb
movsb
clc
out
push
mov
ja
dec
add
pusha
xchg
add
lea
lods
hlt
jae
fs
dec
sub
scas
pop
lret
or
stos
leave
xor
adc
sarl
popa
gs
inc
sbb
call
mov
enter
push
mov
inc
jmp
mov
dec
mov
jbe
cmc
and
orl
pop
dec
aaa
sbb
test
adc
filds
lret
add
add
sub
mov
pushf
xchg
or
lods
xlat
pop
sub
adc
pop
neg
sbb
and
cmp
das
adc
mov
xchg
sbb
add
loope
pop
add
fadds
ja
push
nop
ss
xchg
imul
ret
mov
rolb
mov
fsubr
or
push
pop
aad
add
xchg
push
dec
das
jl
aaa
movsb
push
aaa
in
sub
inc
pop
aam
push
dec
or
dec
inc
dec
gs
jmp
outsb
dec
push
jne
rorl
xchg
imul
popf
pop
rcl
out
mov
mov
dec
jae
mov
in
lahf
inc
push
stos
add
fiadds
jbe
outsl
jno
push
xchg
jl
jecxz
push
outsb
xor
roll
pop
rcrl
pop
xor
shld
xor
mov
jmp
loop
es
mov
jl
dec
sbb
sahf
adc
sbb
cmpb
sahf
xchg
je
lods
mov
mov
push
in
add
cwtl
mov
aam
jecxz
test
movsb
jns
fdivrl
add
mov
or
add
imul
pop
out
push
add
loop
jne
cli
xor
clc
mov
and
sbb
or
je
adc
test
inc
aad
icebp
aam
call
into
push
and
pop
mov
jmp
xor
mov
es
sub
lcall
out
dec
arpl
in
bound
shrl
adc
cmp
inc
dec
jmp
daa
xor
jp
pop
push
sahf
js
push
mov
test
addb
cld
mov
pop
pusha
test
movsb
xor
cmc
test
cmp
push
or
dec
ffree
shll
or
sbbl
adc
mov
js
and
fs
push
test
es
into
mov
imul
cmp
cltd
mov
loopne
inc
cwtl
mov
test
out
or
or
cmp
dec
icebp
xor
jmp
adc
or
pop
in
arpl
or
stos
push
int3
in
cwtl
xchg
jmp
mov
enter
rorb
adc
mov
mov
jne
jecxz
sbb
mov
js
mov
xor
leave
lcall
outsb
cmp
pop
xor
add
mov
dec
pusha
push
mov
jg
or
cmp
pop
mov
mov
loop
scas
xchg
out
pop
pop
fwait
jbe
push
mov
xchg
addl
loopne
push
sti
mov
cwtl
std
insb
or
sbb
iret
sub
pop
sub
in
and
adc
sub
pop
insb
lret
notl
mov
loop
sub
clc
pop
sbb
repnz
leave
adc
mov
sbbl
add
fimuls
mov
mov
into
rcrl
ss
mov
or
aad
xchg
fstp
add
lret
pop
xchg
or
push
and
xor
and
mov
aam
sbb
push
jbe
into
mov
cmp
inc
xor
rclb
mov
cmpsb
mov
ja
dec
loope
clc
sbb
sbb
fsubp
jbe
mov
cmp
sub
js
xlat
data16
aam
dec
and
mov
dec
cmc
idivb
mov
out
sbb
std
into
jp
add
pop
xchg
lret
cmp
or
mov
jmp
adc
popf
mov
xlat
jl
in
fs
xor
mov
pop
sub
push
or
jl
bound
and
loopne
sbb
pop
bound
sbb
mov
xor
cmpsl
shl
jb
fucom
test
push
fmuls
jecxz
fsubp
mov
test
add
sahf
add
push
dec
xorb
cmp
fiadds
mov
xchg
sahf
iret
inc
sub
push
cli
or
jg
fsubp
mov
mov
inc
mulb
or
or
push
mov
ret
sbb
dec
mov
lcall
and
lock
ljmp
push
jne
repnz
or
subb
ss
cli
jp
push
pushf
push
pop
sub
mov
rcrb
mov
pop
pop
mov
adc
ret
adc
cmp
ss
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
or
cmp
mov
loope
jle
inc
sbb
sahf
adc
sbb
inc
mov
test
insl
jno
daa
popa
stos
cltd
ret
push
xor
test
imul
or
sbb
test
imull
and
lret
xor
push
pop
xchg
ret
into
pop
mov
jo
cmp
xlat
aam
pop
fwait
rclb
xor
or
ffree
cmp
push
push
inc
sbb
pop
inc
fiadds
pop
dec
iret
std
cmp
cs
mov
stos
jo
psubb
mov
dec
and
cs
int
jecxz
loope
insl
ss
shrb
mov
pop
pop
daa
mov
test
stc
sub
sbb
pop
loop
ja
sub
scas
ljmp
mov
mov
test
xchg
popf
inc
mov
cmp
xchg
pop
inc
adc
sub
scas
or
cmc
xchg
add
mov
out
dec
imul
repz
sahf
orl
sbbb
cmpsb
mov
pop
dec
mov
cmp
aas
jle
gs
stos
jnp
dec
lock
jae
shlb
push
adcb
add
test
movsl
repz
loop
or
push
and
fiaddl
ja
cmp
scas
js
iret
call
mov
dec
lock
cmp
enter
pushf
add
jb
sahf
into
pop
xchg
loop
daa
cmp
ret
pop
dec
jle
test
push
sub
xchg
ret
or
push
mov
gs
or
mov
push
add
sub
xchg
jb
add
sbb
mov
cmpsb
xchg
inc
rcrb
mov
mov
xchg
sub
push
inc
cwtl
mov
xchg
xchg
scas
sar
adc
in
mov
jbe
out
inc
lods
rcll
pop
cmp
cmp
adc
fs
fdivrl
adc
mov
xor
ljmp
and
bound
jbe
add
lahf
insl
mov
jnp
loopne
test
int
std
jge
fs
jb
dec
pop
aaa
fwait
adc
jg
cld
fs
lods
inc
fs
lcall
test
mov
mov
inc
jge
jo
test
or
int
push
mov
mov
pop
jo
add
mov
lret
inc
lods
cmp
sub
cmp
mov
lds
ret
and
xchg
add
rcrb
pop
pop
testl
scas
arpl
dec
sbb
xchg
imul
mov
sbb
sub
dec
mov
je
rcr
dec
call
sub
or
xchg
cmpsb
icebp
fwait
inc
ljmp
dec
dec
xlat
mov
fldl
dec
pop
aaa
js
std
fldl
imul
mov
pop
push
xchg
ljmp
jge
into
push
lea
jbe
jns
push
adc
adc
dec
push
ret
aaa
pop
jg
dec
mov
push
push
dec
arpl
mov
scas
pusha
inc
test
sarb
mov
cs
jae
jl
ljmp
or
jne
mov
mov
mov
lods
rcrl
mov
leave
loop
sbb
in
xchg
push
scas
adc
jo
movsb
mov
adc
or
or
cmp
int
test
repnz
lea
mov
aas
arpl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
mov
mov
mov
mov
xor
or
mov
shll
xor
mov
jmp
jbe
fstpt
insl
cmpl
mov
sahf
adc
sbb
aad
clc
xor
or
sub
fisubs
and
pushf
cltd
mov
push
push
xchg
jge
sbb
sbb
sbb
inc
clc
cwtl
movsl
test
xchg
into
lock
sbb
aas
lret
add
test
push
jne
call
mov
jo
jb
gs
subb
mov
movsb
add
mov
repnz
enter
in
add
fcoml
insl
add
jl
cmp
xchg
xor
movsl
adc
enter
loop
das
jae
pusha
xor
mov
push
pop
jl
sbb
xor
imul
cld
sub
add
jle
out
ss
mov
addl
ss
dec
lret
pusha
fdivl
push
outsb
cmp
jecxz
testl
and
repnz
fidivrs
cmpsb
loop
mov
cmp
and
shl
sub
imul
sahf
repz
imul
mov
pop
xor
in
xor
xchg
adc
sub
dec
or
or
ss
inc
lahf
add
jnp
mov
cli
jecxz
xor
or
test
jno
mov
mov
fcmovnu
clc
cmp
mov
pushf
mov
fwait
movsl
mov
xchg
sub
add
xor
lods
inc
inc
dec
pop
loope
idivb
test
repz
mov
dec
mov
xor
inc
paddsw
mov
add
movsb
into
jmp
outsb
repnz
or
xor
adc
out
mov
push
int
arpl
ds
dec
mov
adc
in
dec
daa
push
cmp
shrl
jmp
or
xchg
mov
dec
xchg
lahf
test
mov
pop
mov
insb
popf
jne
xor
adcl
mov
test
mov
cmc
mov
pop
mov
or
fistps
add
push
movsb
push
mov
out
cwtl
push
push
cwtl
add
fwait
push
mov
xor
ljmp
shlb
jns
les
sbb
aas
or
push
jnp
sti
cmpl
ja
bswap
jb
adc
jo
push
cwtl
mov
popl
movl
jne
mov
or
inc
cld
ja
clc
xchg
mov
bound
mov
cli
push
jg
sbbl
mov
loope
ds
push
insb
xor
and
cmp
push
add
rolb
fidivrl
push
pusha
sub
xchg
adc
jle
push
sbb
ficompl
sbb
jg
loop
mov
and
hlt
mov
mov
je
dec
jae
jmp
aam
aam
xorl
loopne
cmp
xor
pop
dec
or
xchg
sarb
add
stos
xor
inc
bound
xor
xorb
pop
and
cld
lret
cmp
gs
dec
mov
jns
sbb
fwait
and
xchg
popa
or
or
pusha
out
nop
mov
and
ret
gs
cltd
shrl
call
cltd
loope
in
outsb
rcrl
pop
add
stos
add
test
ds
mov
add
std
data16
mov
xchg
into
cmpsl
xchg
sbb
xchg
xchg
lret
cli
aas
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
jmp
std
dec
mov
sub
fidivrl
test
push
stos
sub
sbb
sahf
adc
sbb
inc
loopne
mov
ret
repnz
outsl
xchg
cmp
push
adc
loop
inc
lcall
in
fmulp
mov
movsb
inc
sbbl
or
ljmp
cs
xor
dec
scas
clc
test
shl
cli
adcl
in
stc
and
in
jg
push
popa
add
mov
loopne
jne
js
icebp
les
xchg
jl
outsl
jg
or
jg
mov
inc
imul
push
xor
and
mov
xchg
inc
pusha
pop
sub
aam
push
sarl
jp
xor
pop
rorl
jae
push
sub
sahf
test
repnz
xchg
sub
sbb
pop
cmp
adc
aad
ja
popa
cltd
popa
or
push
das
mov
fiadds
mov
add
and
cmp
mov
and
inc
mov
rclb
dec
mov
jge
inc
mov
ss
or
pop
jge
loope
cld
add
sub
xor
mov
fsubr
enter
jbe
rclb
bound
mov
sub
pop
push
jle
lahf
sbb
fdivrs
push
mov
adc
pop
pop
lret
sahf
pop
adc
lods
adc
imul
pushf
cmpsb
insl
aaa
mov
pop
push
mov
jne
hlt
sub
pop
and
mov
scas
scas
jmp
sbb
mov
inc
mov
rcl
int3
ficomps
dec
fimuls
sbb
xchg
jp
je
cmc
shrl
jbe
mov
in
add
enter
mov
in
insl
add
rep
push
pminub
daa
int3
adc
push
adc
test
ret
adc
jmp
data16
test
shl
lcall
add
mov
imul
push
imul
xor
cld
push
fidivrl
cmc
pop
lods
das
arpl
enter
jno
and
xlat
or
imul
lcall
jl
cld
dec
and
jp
mov
add
lds
add
xor
imul
xchg
mov
xlat
divl
repz
pop
mov
rorb
leave
dec
test
adc
insb
or
ja
test
sub
popa
hlt
add
lahf
loop
adc
ja
jmp
out
or
ret
or
out
test
inc
mov
mov
xor
push
dec
mov
lds
adc
sub
add
jae
data16
mov
adc
mov
mov
dec
mov
mov
xor
or
pop
pop
into
add
add
fsubrl
cwtl
in
add
jns
shrl
or
sub
dec
movsl
shrb
fstl
jbe
leave
inc
add
ss
jns
stos
fisubs
and
xor
sahf
hlt
adc
and
inc
push
daa
xor
pop
aad
ljmp
or
cmp
dec
inc
xchg
stos
sub
outsl
ret
icebp
out
mov
mov
aam
fdiv
mov
jnp
jo
mov
scas
mov
mov
fs
push
inc
in
in
inc
or
outsb
ss
dec
int3
xor
jg
sarb
insl
gs
jns
imul
nop
divb
pusha
insb
push
je
cltd
cmpb
icebp
cmpsl
fidivrl
pop
mov
les
call
fbstp
iret
outsl
stc
sbb
jge
movl
dec
add
lods
enter
add
ljmp
out
xor
jmp
sbb
jmp
ljmp
jo
jecxz
jo
sub
sbb
fdivl
sbb
mov
xchg
xchg
cli
cmp
sar
lahf
mov
add
add
in
xchg
pop
lea
or
aaa
out
adc
jae
pop
cld
inc
xchg
into
push
mov
lea
std
add
jo
cmp
pop
and
lods
push
push
xchg
call
sub
shlb
pop
es
jg
into
mov
int3
incl
and
inc
fdivrp
cmp
rolb
daa
pop
inc
mov
popa
pop
into
repz
or
iret
sbb
js
scas
jbe
xor
test
add
mov
mov
in
sub
cmp
dec
in
int
inc
sub
jle
sbb
aam
sahf
out
jp
or
mov
nop
scas
mov
mov
lcall
jle
mov
icebp
inc
lods
fsubl
or
cwtl
xor
push
dec
or
jns
es
pop
push
arpl
stos
mov
cmpb
shlb
leave
jo
mov
cltd
sbb
cmpsb
mov
jo
mov
lods
adc
invd
ss
idivl
test
and
out
out
icebp
mov
fwait
cmp
std
adc
inc
push
jmp
mov
dec
cmp
dec
out
or
push
lock
loope
addl
add
fcoml
inc
fnstsw
adc
bound
loop
mov
je
dec
add
sbb
fcomps
add
rep
xchg
jo
lods
xchg
aam
sbb
test
loope
es
push
iret
adc
test
pusha
jne
int
stos
jp
mov
dec
fsubs
xchg
pop
adc
push
enter
icebp
push
ljmp
aas
test
jns
fstl
cmp
mov
or
insb
movb
and
movl
mov
in
inc
mov
out
mov
or
fistpl
lds
push
ja
sub
mov
xchg
dec
shl
or
cmp
daa
or
scas
mov
cmc
nop
push
jmp
stos
dec
xchg
xor
dec
push
dec
insl
xchg
cmp
test
adc
xor
paddq
scas
aam
ret
ljmp
mov
movb
out
sbb
jae
jnp
insl
and
outsl
movsb
repz
sub
outsl
fadd
jae
mov
xor
rcrl
jge
sbb
sbb
rolb
inc
jl
adc
sub
fadds
mov
sarl
pop
mov
adc
outsl
bound
jle
dec
pop
lods
fsubrs
loopne
call
lea
repz
lock
inc
repz
hlt
icebp
cmpsl
push
or
or
adc
into
adc
push
in
or
xor
inc
cli
sbb
mov
in
dec
fwait
jle
imul
in
int
jge
mov
cwtl
inc
leave
in
pop
or
out
cwtl
xor
xchg
mov
cmp
xchg
ljmp
sahf
mov
mulb
cmp
push
push
sbb
adc
rorl
sub
mov
jge
sbb
loope
js
or
xor
cmp
scas
repnz
xchg
in
into
jae
xchg
pop
dec
xor
add
mov
popa
add
xor
adc
jnp
test
lods
std
mov
xchg
xchg
lret
push
cltd
hlt
bound
pop
shrb
sub
cmc
jg
xchg
ret
and
mov
jmp
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
movl
shrd
notl
shr
ret
add
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movl
xor
mov
mov
not
movl
decl
mov
movl
mov
sbb
movl
jmp
clc
sub
sub
pop
and
sbb
sbb
shrb
add
sbb
xchg
mov
mov
pop
adc
std
jb
mov
ja
mov
gs
pop
pop
sbb
bound
test
push
movb
add
lods
daa
sbb
xchg
daa
add
mov
cld
cmp
sub
mov
xor
pop
arpl
fistpll
fidivs
andl
cmp
dec
cmp
ljmp
inc
arpl
jo
int3
scas
jmp
mov
mov
xchg
lock
sub
cmpsb
sbb
std
lock
push
dec
xor
mov
push
data16
lods
in
loopne
jnp
sbb
into
lods
xor
mov
and
and
hlt
mov
test
stos
xor
pusha
pop
inc
jecxz
sub
xchg
adc
adc
jecxz
jmp
xorb
mov
pop
fs
mov
mov
sub
or
jl
add
adc
or
jmp
pop
and
insl
sti
mov
in
lret
dec
pop
daa
or
sub
xchg
pop
aaa
pop
movsb
sbb
subb
mov
decb
int
iret
inc
ret
fwait
sarl
frstor
jb
lahf
mov
mov
dec
xor
dec
test
mov
cs
ret
dec
cmp
and
cwtl
in
xrelease
adc
xchg
jmp
sbb
mov
or
inc
xchg
adc
shll
sbb
push
mov
scas
jns
jmp
xor
push
dec
xlat
lods
iret
movsb
insl
bound
movsb
test
lea
push
outsl
cmp
jl
loop
dec
adc
stos
mov
popl
std
and
add
push
and
scas
jbe
sub
sub
sbb
xchg
mov
inc
sbb
jo
add
lret
int3
inc
sbbb
loopne
in
add
test
rorl
sahf
fs
dec
jmp
loope
icebp
mov
insl
js
mov
leave
outsb
fs
push
outsb
outsl
pop
fnsave
and
arpl
in
int
repz
movb
fldt
xchg
clc
sbb
mov
xchg
ljmp
jg
adc
adc
mov
push
and
add
xchg
int
les
jne
mov
cmp
lea
cmp
push
loop
ds
xchg
adc
mov
xchg
pusha
inc
mov
scas
out
xchg
and
or
aas
sub
fldl
or
add
jl
lcall
daa
or
ja
sbb
xchg
cmpsb
fs
loopne
int3
mov
inc
jns
fisubl
shrl
add
jp
push
popf
adc
sbb
xor
cmp
add
sub
rep
mov
aam
icebp
jp
pusha
hlt
jge
ret
std
sub
sbb
shl
xor
fwait
dec
hlt
mov
call
insb
jne
jmp
dec
cmovo
adc
xchg
push
jo
pop
test
mov
sub
shlb
adc
push
push
clc
imul
add
cmpsl
jno
shrl
push
inc
fldcw
sbb
shll
xor
jl
pop
add
jo
xor
add
mov
aam
xchg
or
inc
loopne
outsb
add
xor
push
movl
movl
push
xor
movl
sbb
mov
cmpl
mov
mov
jmp
mov
movzbl
cmpl
ja
push
pushl
pushl
push
call
mov
xor
or
or
mov
adc
xor
or
adc
mov
and
mov
push
adcl
push
andl
jmp
xchg
sahf
push
push
fists
mov
sbb
sbb
sbb
xchg
gs
insl
jae
stos
jae
mov
fnsave
cmp
fsubrs
test
dec
jno
cmp
sub
les
fldenv
pop
in
arpl
cmc
ror
aad
imul
cmp
mov
or
int3
cmc
cld
fisubrs
push
mov
add
add
adc
fwait
inc
movsb
or
fldcw
mov
ficoms
pop
icebp
lods
push
jmp
cs
dec
adc
clc
in
sbbl
dec
es
dec
imul
mov
dec
xchg
adc
das
idivb
out
pop
inc
adc
xor
xor
fmuls
das
jnp
inc
outsb
in
imul
or
sub
xchg
addr16
js
push
cmp
pop
clc
inc
sbb
das
ja
xor
es
xor
fistpll
fistl
enter
aas
movsl
aas
dec
or
push
sbb
rcll
inc
cmp
inc
sub
inc
out
outsl
mov
lods
inc
add
jle
sub
push
dec
lret
cmpsb
adc
ret
or
or
test
aad
lods
xchg
xor
xchg
push
mov
imul
jp
mov
jmp
add
jecxz
outsl
andl
mov
shl
add
rorl
inc
push
mov
xor
std
ljmp
dec
fldcw
int
jl
xor
ss
cmp
ret
out
pop
jle
pop
mov
outsl
and
sbb
pop
test
xor
int
lcall
lcall
xor
std
aad
repnz
jge
roll
aaa
ret
fcomip
sub
subl
outsb
in
mov
icebp
add
addl
jnp
addl
ficoms
mov
scas
adc
cmpl
push
fucomp
pusha
or
rsqrtps
dec
add
jo
lea
or
inc
ds
repz
data16
sub
flds
in
push
lods
iret
imul
push
or
pushl
rolb
js
bnd
push
jl
push
jae
imul
cmp
dec
js
cmp
xlat
jmp
add
pop
mov
stc
jmp
jmp
shlb
aas
dec
int
fs
or
mov
fdivs
add
xchg
pop
push
out
cmc
push
mov
pop
pop
jo
outsl
xchg
pop
and
mov
shll
cltd
aaa
xor
popa
cmp
pop
imul
xor
push
loope
and
or
outsb
decb
mov
ja
sub
scas
test
leave
jecxz
mov
xor
xchg
or
and
jmp
or
mov
nop
xchg
mov
pop
cmpsl
lcall
dec
stos
cltd
pop
cmp
stos
cmpsb
fnsave
mov
mov
push
lods
sti
sub
insl
add
push
inc
hlt
js
jnp
insl
and
outsl
add
sub
xchg
imul
pop
mov
lods
xchg
les
enter
roll
push
pop
cmp
notb
mov
ficompl
stc
pop
inc
cmp
push
pop
scas
stos
nop
dec
cmpsl
pushf
negb
iret
insl
fwait
hlt
dec
pop
pop
or
push
mov
mov
js
cli
push
movsb
jns
aam
mov
rol
divl
cmp
mov
jp
jecxz
sahf
dec
fneni(8087
cld
push
adcl
call
sbb
mov
adc
mov
sbbl
push
or
subl
push
xorl
or
xor
xor
subl
push
push
call
xor
or
adc
mov
xor
mov
andl
push
addl
push
subl
push
push
subl
call
mov
add
mov
cmpl
not
movl
jmp
notl
mov
cmpl
jl
push
pushl
call
xor
and
movzwl
or
add
adcl
sub
cmpl
mov
movl
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
xor
adc
andl
and
add
movl
movzwl
xor
movl
decl
movl
movl
cmpl
mov
mov
not
movzbl
jmp
movl
movl
cmpl
je
push
push
call
sbb
mov
xor
or
sub
imul
and
sbb
movl
movl
mov
sbb
mov
notl
mov
or
mov
sbbl
jmp
adc
packssdw
jb
jnp
push
xor
stos
or
sbb
outsb
adc
sbb
sub
jo
imul
clc
shlb
jg
ja
push
mov
gs
push
jmp
xor
mov
pop
stos
rorb
pop
hlt
mov
aam
out
dec
jecxz
movb
cmpsl
push
ret
sub
mov
bound
outsb
cmp
sbb
outsl
insl
jnp
mov
loop
cmp
lret
dec
incl
sub
sbbb
jne
mov
xor
andb
jl
xlat
dec
dec
pop
cmp
add
mov
insb
mov
cmpsb
sbb
lret
mov
xor
push
daa
push
iret
hlt
sub
fwait
aas
pop
push
in
lds
or
cmp
jo
sbb
mov
xlat
adc
ja
fcmovnbe
repz
mov
and
jp
sub
dec
jno
fcoml
sbb
in
mov
mov
jmp
popa
xorb
sub
jge
int
adc
push
scas
stos
movsl
add
add
outsb
stos
stos
pop
push
jb
movsb
movsl
add
mov
dec
jp
sti
and
das
in
add
enter
jne
sti
fcmovu
lods
push
pop
test
bound
and
push
jg
push
scas
in
cli
into
xchg
test
cli
hlt
mov
push
jecxz
fbstp
xchg
pop
push
pop
mov
jne
aam
sbb
mov
mov
leave
pop
pop
les
aam
sbb
adc
xor
fnsave
test
xchg
lods
inc
sub
scas
pop
loope
inc
je
enter
pop
xor
repnz
pop
mov
test
das
std
xchg
repz
add
aad
mov
cmp
cli
xchg
fprem
shrd
xchg
or
fisttps
lret
ljmp
xchg
push
inc
push
push
and
lea
addb
cltd
xchg
das
adc
ja
popa
xchg
sahf
xor
add
insb
aad
jno
movsl
mov
rclb
mov
aam
mov
sub
repz
jl
jno
mov
icebp
push
mov
sbb
cmp
out
lahf
lods
jle
roll
jg
insl
cmp
sahf
pop
adc
sti
iret
cld
loopne
es
shlb
lret
sbb
inc
sar
popf
inc
mov
mov
cmp
push
mov
int3
out
je
jecxz
cmc
out
pop
stos
pop
in
lea
and
push
out
fdivr
sub
and
arpl
jbe
cmp
adc
stos
pop
fabs
addr16
out
out
andb
mov
jp
xor
xchg
jmp
dec
adc
shlb
cmpb
popf
mov
fwait
aad
sahf
sub
cs
mov
mov
sub
adc
aad
not
add
sub
mov
cli
inc
cs
scas
xor
jl
adc
out
lcall
xor
mov
push
cmp
shlb
nop
pop
std
pop
xlat
adc
pop
nop
add
cmpsl
xchg
jmp
inc
push
aam
xchg
bound
add
in
jecxz
in
sbb
cmpsb
push
add
in
adc
lret
sub
mull
pop
pop
or
imul
fnstenv
enter
test
pop
adc
fnsave
and
movsl
in
mov
loop
fnstcw
loopne
xchg
psraw
pop
ds
lods
mov
jmp
push
xor
in
pop
pop
stc
xchg
xor
mov
sub
fisubrs
mov
add
adc
adcl
or
mov
or
and
mov
andl
or
cmpl
mov
not
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
adcl
not
movzwl
sub
mov
adcl
mov
xor
orl
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
jmp
movsl
movsb
test
test
sbb
fdivl
mov
out
sti
adc
or
sbb
es
stc
jle
mov
loope
pushf
testb
pop
mov
scas
lahf
bound
xor
inc
dec
cmp
adc
sub
fimuls
cmp
xor
cs
jmp
std
fwait
sub
int3
adc
fs
push
mov
jge
push
jno
cmp
xor
incb
add
or
xor
push
mov
jns
sbb
dec
iret
mov
je
daa
cmp
push
int3
outsl
dec
sbb
mov
add
popf
je
dec
add
and
add
leave
sar
popa
es
cltd
cmpsl
push
adc
rol
adc
pop
and
icebp
xchg
pop
rcrl
int
push
fildl
test
out
jl
mov
test
popf
loope
sub
iret
insl
outsb
fsubrl
mov
lea
repnz
mov
iret
lock
fisttpll
into
inc
jmp
mov
pop
xorl
stc
push
cs
jae
imul
xchg
stos
xor
or
subb
push
inc
add
jnp
inc
clc
mov
mov
mov
xor
push
and
test
and
scas
cli
mov
jg
sbbl
pop
ds
xchg
pop
or
into
or
inc
into
dec
ds
pop
mov
stos
shrl
lcall
je
xchg
negl
test
jns
insl
pusha
fisttpll
xchg
ret
dec
sbb
push
pop
stc
xchg
adc
push
or
pop
sbb
mov
out
notl
gs
aas
movsb
in
xchg
jge
cmp
xchg
aaa
mov
sti
ss
or
imulb
shr
jo
xor
add
shrb
enter
push
xchg
cmpsb
pushf
xchg
cwtl
jbe
push
cmpsl
stos
scas
and
sub
dec
inc
dec
pop
cmovle
mov
xchg
xchg
add
test
stc
sub
cmp
mov
ds
jnp
addr16
dec
push
dec
call
xchg
sbb
mov
dec
or
test
pop
cli
jl
pusha
cwtl
push
pop
out
lods
cmpsl
lods
lcall
xchg
mov
out
add
xor
and
cs
mov
mov
roll
sub
stos
add
cmp
adc
out
push
adcb
push
adc
mov
mov
pop
inc
push
cli
hlt
adc
mov
mov
cmp
in
push
xor
mov
in
rcrb
xchg
pop
push
inc
dec
dec
in
dec
test
pushf
fs
cmpb
xor
loope
and
xor
subl
sub
sbb
cmc
mov
fbld
fildl
es
sbb
and
mov
inc
fwait
lea
push
jle
mov
sbb
xchg
cmp
xchg
aaa
out
push
fstps
xlat
or
or
pop
std
push
dec
aad
or
jge
dec
ret
sbb
push
push
mov
addb
icebp
jmp
inc
call
sbb
push
popa
je
cmp
mov
mov
mov
sub
dec
scas
out
enter
nop
pop
cmp
in
in
addr16
jg
sub
out
xchg
mov
mov
fwait
xchg
xlat
mov
pushf
pop
ljmp
idivl
leave
in
sti
dec
cmp
or
dec
pop
cmp
cld
mov
sbb
jmp
cmpsl
es
cltd
roll
jp
push
push
adc
out
test
loope
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
jmp
fsts
or
push
jp
jo
push
mov
sbb
outsb
adc
sbb
iret
fmulp
push
sbb
inc
or
dec
leave
xor
popf
lock
mov
and
pushf
dec
xor
in
lahf
lods
jge
outsl
xchg
inc
mov
sbb
shl
fldt
je
pusha
stos
xchg
test
jae
pop
bound
fisttpl
xlat
and
push
call
pop
cld
nop
insb
add
daa
sub
inc
sbb
jae
and
fwait
sti
xchg
push
or
adc
sti
pop
pop
push
dec
ds
test
fdivrl
call
ret
xchg
ret
dec
stc
arpl
andb
test
ss
cmp
adc
cmc
xchg
jmp
jg
push
loope
ss
and
lods
movl
sbb
mov
popa
adc
test
popa
cmp
cmpxchg
sbb
daa
cld
dec
jp
popa
aas
fadds
xchg
adc
mov
inc
or
and
mov
xor
loop
movl
jno
or
add
out
dec
sbb
js
xchg
xchg
xchg
pop
fs
jmp
mov
ficompl
jmp
sti
xchg
sub
sub
mov
xchg
xor
cmp
inc
jne
and
push
incb
mov
and
cltd
mov
adc
add
dec
mov
leave
outsb
fdivl
jno
or
jg
stc
fcoml
std
jle
mov
testb
push
sti
xchg
push
cmp
or
aam
sub
inc
mov
ljmp
dec
mov
inc
sbbl
sbbb
or
sub
cmp
jmp
sbb
dec
gs
shlb
loopne
mov
movsb
pop
and
nop
mov
inc
sbbb
aam
adc
movsl
xor
fldenv
pop
mov
adc
dec
test
push
mov
mov
into
xchg
sbb
xchg
and
or
into
mov
roll
scas
test
movsb
insb
mov
or
outsl
inc
push
or
xchg
call
fcoms
xor
xor
test
in
jbe
arpl
icebp
sub
mov
mov
pop
frstor
mov
dec
das
xchg
push
scas
pop
std
outsb
pop
xchg
pop
fnclex
push
outsl
dec
pop
mov
leave
mov
or
leave
xchg
mov
jg
pop
idivl
jg
movsb
hlt
es
and
movsl
shll
fstps
addr16
clc
mov
jmp
sub
dec
dec
inc
call
mov
xor
mov
loop
push
fmuls
jle
mov
mov
je
mov
es
int
cs
jns
int3
jl
add
in
mov
mov
lret
insl
jns
xlat
in
mov
out
jmp
andl
into
pushf
ja
pop
fisttps
shrb
lcall
xchg
jnp
stc
std
pop
test
or
test
popf
repnz
or
cmp
fidivl
out
jge
fidivrl
mov
sub
mov
js
lret
jl
sbb
and
lcall
scas
push
cmc
jp
sbb
bound
pop
push
adc
mov
out
push
jp
xchg
fucom
xorl
stc
inc
xlat
mov
cmpsl
inc
enterw
call
and
ss
ret
in
jnp
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
jmp
xor
mov
lcall
daa
pop
cmpsl
mov
outsb
adc
sbb
xchg
xchg
and
clc
dec
pop
xor
fiaddl
sub
test
mov
pop
jp
dec
cmpsb
push
dec
jb
xor
mov
lea
popf
test
dec
sub
sbb
mov
xchg
repnz
adc
add
lods
sub
mov
or
push
and
es
dec
lcall
ret
mov
xchg
int3
and
fstps
fidivrs
dec
ljmp
out
test
iret
xlat
mov
into
roll
and
mov
jecxz
addr16
lret
mov
push
mov
leave
arpl
or
xor
inc
inc
insb
xor
dec
pushf
ret
sbb
cltd
icebp
mov
inc
je
cmp
push
inc
icebp
subb
es
jae
loope
lret
adc
xlat
leave
push
jnp
ret
in
sub
dec
shlb
add
inc
test
sub
or
push
pop
mov
sub
or
je
xlat
mov
xchg
outsl
aas
fdivr
clc
dec
mov
faddl
xchg
imul
add
add
data16
movsl
aaa
daa
fwait
lea
mov
sbb
cli
xor
mov
sbb
pop
movsb
push
add
rcrb
add
movsl
mov
orl
outsl
xchg
pusha
xchg
iret
or
add
dec
dec
push
fldenv
add
pop
jo
mov
pusha
xor
sub
inc
jbe
adc
in
shll
gs
das
mov
and
icebp
testb
divl
dec
inc
pop
dec
jbe
mov
mulb
jnp
jnp
pop
test
in
jle
movsl
add
push
pop
xorb
cmc
lret
scas
sbb
repnz
test
ljmp
cmp
mov
mov
sub
fistl
push
daa
or
sub
adc
inc
adc
add
scas
add
loopne
fincstp
jne
mov
add
scas
adcl
mov
das
push
lcall
jnp
jae
cmp
push
inc
xchg
sti
mov
cmp
jl
adc
jo
sbb
sbb
pusha
push
xchg
movsl
add
shlb
xchg
inc
aaa
scas
in
test
adc
fistpl
sub
inc
add
fsubs
loopne
fdivrp
les
and
xchg
mov
adc
xchg
cmp
mov
scas
add
cmp
imul
xor
cmc
fwait
out
lret
dec
mov
shlb
mov
sub
push
mov
sbb
mov
stos
jle
jae
arpl
dec
xor
hlt
pop
dec
add
cmpsb
insl
sbb
repz
aaa
push
leave
ds
jecxz
sub
iret
inc
int
push
jge
mov
adc
repz
xchg
push
add
mov
outsl
fisubrl
pushf
inc
sub
or
mov
repz
dec
xchg
testl
lods
stc
orl
push
rorl
sub
loope
stos
jle
pop
push
sbb
aad
jp
inc
xchg
shlb
scas
imul
pop
dec
adc
mov
mov
outsb
push
cmp
mov
add
pusha
stos
jle
jns
out
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jmp
xchg
and
cmc
mov
mov
jle
cmc
sbb
outsb
adc
sbb
out
mull
jno
inc
shrl
mov
jns
or
ret
sbb
stos
fisubs
aas
repnz
push
loopne
clc
insl
rolb
ret
dec
push
and
sbb
push
aaa
fdivrs
aaa
mov
xchg
pop
xchg
add
lods
imul
mov
popf
sub
in
sbbb
fistpl
inc
jne
jmp
push
xchg
outsb
movl
dec
and
adc
loope
cmc
loop
shlb
adc
shl
inc
add
movsb
adc
out
pop
pop
and
pop
add
sbb
lret
push
test
fwait
aaa
jb
pop
std
mov
enter
enter
mov
pop
inc
dec
fld
mov
dec
sti
fisttps
or
sbb
rcll
sub
pop
adc
mov
sub
arpl
pop
jge
dec
pop
lcall
dec
or
jmp
les
pop
mov
stc
push
cmp
fsub
ffree
fs
xchg
cmc
jo
movsl
aad
mov
pop
mov
inc
xlat
mov
bound
test
xchg
cwtl
push
jb
inc
sbb
popf
push
xchg
shrb
mov
mov
pop
ds
mov
inc
lret
pcmpgtd
out
pop
popf
test
das
ret
aam
push
insb
mov
jnp
or
lret
mov
lods
les
popl
push
pop
fsts
scas
mov
dec
push
jo
mov
subps
inc
sbb
fdivrl
shll
or
dec
in
adc
xchg
adc
xchg
mov
iret
mov
stos
pop
inc
mov
dec
cltd
repnz
sub
or
cld
rorb
imul
xchg
add
test
fistpll
jns
addr16
jae
cld
mov
add
filds
loope
fucom
xchg
lcall
or
push
cmp
xchg
pop
fsubs
or
andb
jecxz
fwait
cmpl
loopne
xchg
ror
xchg
xchg
xchg
mov
ja
fnstcw
mov
push
mov
dec
inc
aaa
rolb
mov
cmpsb
pop
fs
inc
ficompl
dec
test
pop
cmp
negb
movsl
fdivs
orb
in
mov
xchg
xorl
push
xchg
stos
push
pop
cmpsb
imul
xchg
ret
cmc
xor
xchg
outsb
inc
clc
jno
pop
setnp
enter
lds
aam
push
in
in
xchg
pusha
sbb
aas
pop
mov
add
andb
into
popa
shlb
ss
add
dec
dec
scas
cmpsb
orl
push
xchg
ja
mov
scas
test
repz
pop
jl
dec
cmp
inc
mov
cld
ja
mov
push
jp
push
sti
lret
pop
mov
ret
jle
repnz
inc
dec
mov
sbb
pushf
mov
dec
jg
scas
adc
fildll
out
pop
xlat
sbb
add
mov
ffree
push
pop
sub
js
sbb
icebp
xchg
icebp
sub
sub
jbe
mov
das
stos
sub
js
push
loop
pop
and
sbb
mov
ds
neg
push
js
xchg
xchg
insb
push
xor
xor
mov
pusha
push
mov
lcall
jb
or
dec
sub
sarl
and
jnp
lcall
jbe
pop
pushf
dec
call
enter
push
je
sub
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
jmp
sub
sti
xchg
sbb
xorl
rclb
sbb
sub
pop
push
int
stos
leave
pop
mov
inc
sub
push
push
pop
movsb
sbb
xor
add
inc
in
mov
daa
in
dec
cli
xchg
pop
sahf
cmpsl
jns
shll
loope
fwait
dec
pop
shlb
call
fwait
in
cmp
je
arpl
xchg
lea
cs
aaa
arpl
jno
aas
cmp
imul
inc
sbb
mov
in
rcll
add
push
arpl
cmp
bound
mov
pop
mov
mov
jmp
mov
push
repz
or
sbb
sub
out
mov
and
mov
in
std
outsl
pop
dec
adc
cwtl
call
adc
repz
aam
imul
xchg
sub
xchg
mull
fcoms
cmp
aaa
adc
lea
lea
fmull
jmp
mov
sub
or
mov
das
test
jo
mov
or
lock
or
jbe
push
add
jnp
daa
in
lock
test
sub
mov
and
lods
ret
inc
adc
or
mov
aad
xchg
jp
in
les
inc
cmp
and
aad
mov
add
fdivl
jle
mov
and
jnp
jge
in
movsb
inc
pop
xchg
ret
jp
std
add
fld
outsb
sbbl
ds
adc
shrl
sbb
push
mov
fwait
out
movsl
lods
sbb
xchg
xor
or
mov
lcall
cmc
cmpsl
and
imull
in
leave
mov
inc
mov
dec
push
rcll
jnp
push
into
mov
test
cmc
rolb
int3
notb
les
add
sbb
dec
or
call
clc
int3
repz
out
xor
lods
inc
xor
sub
and
and
jp
push
mov
fs
test
push
cmp
jbe
sbb
loope
cmp
bound
inc
lds
pop
or
movsl
sbb
sbb
mov
popa
fldl
add
xor
mov
popa
mov
out
or
adc
mov
loope
sbbb
xor
out
or
fisttpl
pop
mov
insb
ror
sub
cwtl
call
sub
xchg
outsb
and
loop
mov
sbb
enter
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
jmp
nop
xchg
lret
ja
das
sub
sbb
lea
call
sbb
imull
insb
fisttpl
leave
inc
adc
ret
pop
xor
mov
add
xchg
jl
jo
push
cld
mov
sarb
push
jg
daa
pop
jge
rcll
sbb
lahf
movsb
fwait
outsl
cmc
mov
adc
sub
sub
mov
jecxz
lret
std
cmp
xchg
repnz
std
push
hlt
sub
jg
sub
imulb
aad
jg
lods
popa
sbb
clc
jmp
sub
jno
test
subl
ret
out
cmc
mov
sub
bound
xor
iret
xchg
movsb
jno
push
pushl
dec
mov
out
mov
repz
xorb
jl
mov
stc
fisubrl
je
pop
add
in
outsl
adc
xchg
mov
dec
adcl
pop
pop
out
pop
add
pop
inc
cltd
leave
push
out
add
cmp
clc
xor
inc
push
mov
pop
cld
fnstsw
clc
push
js
out
je
mov
sub
ja
or
pop
ds
xor
in
cmp
adc
mov
cmp
and
nop
sbb
mov
or
fcoms
inc
ljmp
sub
jg
stc
jle
push
cld
push
mov
lret
fidivl
dec
insb
inc
lock
insb
pop
cmp
movl
sbb
adc
inc
adc
mov
adc
pop
push
add
push
mov
lret
clc
jb
mov
std
lret
mov
bound
mov
and
cmc
dec
xor
dec
mov
test
xchg
repz
push
stos
sbb
filds
std
push
cmpl
push
into
jmp
inc
inc
push
mov
dec
xor
repz
cmp
out
test
test
movsl
or
aas
fnstsw
sarb
inc
push
jb
sub
pusha
hlt
lds
jae
cmpl
push
out
lretw
and
cmp
or
es
mov
mov
sub
adc
fisubs
or
adc
fwait
loope
mov
xchg
int
bound
jp
mov
inc
xchg
sbb
out
sti
xchg
bound
xchg
es
mov
jno
pop
xor
lcall
mov
sbb
subl
adc
in
test
inc
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
jmp
test
push
inc
sbb
jnp
inc
sbb
push
inc
imul
adc
sbb
addr16
clc
mov
test
push
push
add
hlt
jp
pop
pusha
adc
pop
aas
or
mov
jl
mov
cmc
mov
jl
push
aam
push
and
jno
jl
pop
jle
out
in
mov
test
jno
cmp
add
insb
mov
sbb
loopne
mov
xchg
xchg
testl
mov
mov
jmp
ror
pop
pushf
arpl
rcl
push
ss
mov
adc
or
and
cltd
jbe
mov
aas
sub
aad
das
ds
sub
popf
lret
into
lock
and
jp
cmp
aad
pop
stos
or
or
cmpb
loop
or
repnz
jmp
pop
sub
pusha
mov
mov
lret
pop
or
inc
leave
mov
adc
xor
sub
insb
test
add
stos
cmp
dec
mov
mov
popf
add
xor
lahf
sti
sti
popf
out
add
cmp
xor
sub
or
sub
inc
int
mov
in
sbb
cmp
jle
sbb
push
push
hlt
iret
and
insl
std
add
movsl
add
sbb
cmpsb
push
adc
cmp
mov
inc
mov
bound
cltd
fistps
test
sbb
dec
dec
adc
neg
cmp
fdivrs
cmc
sub
inc
call
cmc
mov
test
loope
test
or
fcmovnu
sbbl
cmp
fistpll
jbe
adc
push
out
xchg
dec
or
push
push
fs
mov
and
adc
sbb
loope
cs
lea
lcall
aaa
mov
and
decl
xchg
xor
js
and
retw
add
cmp
pop
fstp
jge
cmpsb
mov
sbb
jo
xlat
cmp
and
sbb
jp,pt
push
popf
mov
add
xor
aaa
mov
sahf
jmp
lahf
enter
pop
push
cli
xor
imul
lret
leave
fistpll
insl
sbb
push
xor
pop
pop
iret
pop
in
push
repnz
adc
mov
imul
loop
shlb
dec
ficomps
pusha
push
shr
mov
fdivs
sbb
pop
into
sbb
jae
pcmpgtb
sbb
adc
sbb
das
aad
add
psubsb
dec
daa
dec
fistpl
pop
js
or
lods
mov
dec
jbe
jne
adc
in
flds
es
add
clc
fwait
jns
test
add
sub
push
movsb
or
shl
aam
and
mov
jb
or
dec
mov
cltd
xchg
lret
xlat
push
clc
and
repnz
dec
push
cld
mov
rcl
ss
or
jb
sub
dec
pop
add
push
scas
ja
push
sbb
ljmp
add
push
imul
test
es
add
repnz
scas
je
xchg
jmp
es
pop
imul
lcall
pop
fnstenv
xchg
adc
and
mov
in
lods
add
call
sub
test
fcompl
cmp
inc
mov
stos
push
mov
imulb
in
insb
ret
fwait
cli
cmp
rcrb
sbb
or
mov
cmc
loopne
fwait
xchg
fisttps
scas
out
ror
or
inc
xor
outsb
and
sbb
sub
and
cmpsb
imul
lret
cmp
lret
fcmovu
popa
lock
push
dec
dec
roll
dec
mov
push
pop
sahf
adc
jns
mov
xor
repnz
mov
out
gs
flds
sbbb
adc
cmp
test
out
xchg
or
jl
sub
ss
push
in
ds
inc
lret
std
jne
or
adc
xor
ja
inc
xchg
call
jecxz
loopne
sbb
mov
es
aaa
gs
das
ret
dec
ja
fwait
pusha
add
sub
sbb
or
int3
iret
mov
sti
dec
outsb
and
mov
data16
cmpsb
mov
in
inc
add
inc
sbb
std
jmp
jl
and
jmpw
aaa
jno
es
movsb
call
icebp
out
push
sahf
mov
popa
xor
loope
in
mov
ds
fldcw
in
movsl
int
inc
fsub
jecxz
in
adc
mov
jno
int
test
lcall
stos
adc
cmp
popa
add
stos
movsl
and
jmp
push
fsubrl
rcrb
mov
mov
sbb
mov
idivl
popa
fildll
mov
div
mov
xor
div
xor
mov
jmp
aam
sbb
and
test
stos
mov
adc
sbb
xchg
movsl
cmp
lcall
sub
cmp
mov
pop
aas
lret
sbb
xchg
jno
cmp
jnp
adc
stos
pop
jl
xchg
lods
pop
cmp
inc
psrlq
es
inc
mov
jl
out
aad
imul
mov
pop
mov
push
cmc
or
adc
popa
dec
lods
mov
xchg
sub
insl
push
push
out
xor
jae
clc
mov
in
repnz
aaa
inc
adc
mov
xchg
jae
sbb
pop
mov
cmp
adc
and
push
pop
mov
into
cmpb
sbb
decl
xchg
xor
sub
inc
insb
or
xor
cmpsl
movsl
pop
int
test
add
dec
push
cmp
xchg
or
repz
aaa
neg
jg
sub
int3
pop
jge
pop
sub
lds
mov
cmc
sbb
or
fistpll
sub
lock
and
sbb
dec
addb
rorb
out
xchg
mov
push
in
insb
xor
lahf
fiadds
outsb
stos
popa
mov
mov
call
fnstsw
inc
test
cmp
hlt
call
cli
loopne
sub
or
fsubl
xor
not
xlat
or
mov
adc
fistpll
mov
jl
adc
aad
fdecstp
add
ja
or
push
in
jo
lret
mov
cmp
fsubrs
or
ret
aaa
inc
jns
in
ret
andl
mov
jns
add
cmp
adc
dec
out
mov
or
mov
and
in
aas
ljmp
jae
pop
test
ds
mov
mov
and
jg
out
pop
dec
and
pop
cmp
adc
pop
sub
xor
xlat
call
mov
xchg
shll
cmp
aam
xor
sbb
sbb
cmpb
push
sub
pusha
push
mov
movsl
movq
popf
ret
rcrl
out
fucomip
fdivrs
inc
and
cmp
popf
gs
ret
jns
test
push
jns
iret
cmp
or
fwait
lock
cmc
cs
ror
mov
sub
inc
fnsave
lret
sti
xor
imul
div
jg
das
xlat
and
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
jmp
test
in
gs
les
jo
mov
pop
rcrb
sbb
adc
sbb
add
pop
lret
xor
in
pushf
pop
mov
rcrl
xor
xchg
imul
add
inc
sbb
dec
fwait
mov
pop
out
pop
insb
xchg
iret
js
and
cmp
mov
mov
adc
inc
shll
mov
adc
add
xchg
pop
popf
and
mov
fidivs
popaw
popa
dec
dec
adc
sbb
std
int3
int3
pop
lret
and
pop
mov
dec
lods
das
out
call
out
jge
ds
sahf
sbb
or
dec
adc
out
xchg
sahf
popf
sbbl
and
notb
rolb
push
test
movsl
sbb
push
xchg
mov
pop
ljmp
pop
mov
lock
decb
roll
jge
scas
clc
inc
pop
movsb
add
popa
mov
mov
mov
add
xchg
fldenv
mov
sub
call
cmp
clc
pop
mov
jmp
xor
pop
gs
ja
js
and
lret
outsb
std
xchg
pop
int3
sub
inc
fisubl
inc
cmpsb
cmp
stc
xchg
js
ja
add
push
clc
pop
jno
cmp
dec
subb
jg
add
mov
mov
test
leave
pop
pop
push
mov
test
es
lcall
push
xor
cmp
sbbb
jecxz
adc
sub
sti
jg
sbb
pop
or
push
dec
jge
lcall
add
mov
dec
mov
aas
sbb
jo
mov
aas
mov
rep
movsb
mov
rclb
out
xchg
xchg
adc
inc
or
cs
and
pop
lods
cmc
outsl
xchg
mov
inc
aad
les
xorl
sub
or
dec
push
cmp
mov
lahf
das
iret
pop
mov
movsb
jno
dec
push
adc
xchg
inc
pusha
leave
or
mov
jp
cmp
mov
mov
jl
jecxz
mov
mov
push
jecxz
aaa
adc
nop
cli
xor
outsl
test
rcrl
and
jbe
push
roll
adc
sub
and
sbb
pop
pop
sub
sbb
add
testb
cmp
rol
cmp
and
mov
dec
add
lods
sbb
inc
fdivrl
cmp
add
inc
in
int
add
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
jmp
rep
add
mov
inc
leave
jl
push
jl
int3
sbb
rclb
sbb
cwtl
ficoms
cmp
sub
in
mov
sahf
stc
xor
rcr
outsb
fdiv
in
add
or
mov
mov
addr16
or
dec
mov
jno
in
imul
ret
sub
in
iret
jbe
rorb
mov
shlb
sbb
cmpsl
je
mov
xor
inc
ret
mov
cld
jg
das
es
rorl
hlt
andnps
xchg
jle
shlb
test
dec
push
sti
jmp
jns
in
mov
popa
or
cmp
mov
adc
sub
inc
stc
push
out
out
repnz
xchg
sti
push
in
ja
test
lds
adc
loopne
mov
repz
scas
repnz
jae
inc
sbb
aas
imul
pop
das
test
pusha
dec
popf
add
xor
sbb
pusha
dec
stc
scas
or
xlat
mov
xor
push
cmpb
lea
rep
push
into
clc
push
pop
fldt
fs
pop
imul
imul
cmp
jmp
push
mov
out
lcall
addl
sub
std
cmp
nop
fwait
rcrl
je
daa
loopne
add
jl
in
cmpsb
shrl
iret
mov
clc
inc
sub
out
fimull
inc
pop
jb
in
scas
adc
loop
xchg
push
xchg
xchg
cmp
loop
aas
lds
call
mov
shl
adc
xchg
scas
mov
loopne
jge,pt
ret
shll
in
pusha
dec
adc
icebp
jnp
push
push
inc
mov
jmp
xor
adc
add
dec
arpl
leave
lcall
jne
rcrl
cli
xor
push
and
add
mov
ds
mov
dec
xor
sbb
push
rorl
nop
in
leave
fmuls
push
xchg
cmc
subl
std
xor
push
aam
data16
or
add
jmp
ret
nop
sub
andb
imul
movsl
das
add
dec
push
je
lods
out
imul
lret
jecxz
inc
in
sbb
sbb
rcll
aam
xchg
add
leave
add
fcompl
js
movsl
mov
sub
xacquire
cmp
aad
cmp
push
mov
xor
add
jmp
sub
mov
inc
pop
and
leave
out
jle
sub
push
enter
adc
sbb
pop
jg
add
push
mov
pop
movl
cli
or
xchg
adc
ja
pop
lods
mov
mov
adc
cmpsb
xchg
add
addb
dec
icebp
lds
mov
stos
dec
pop
jp
push
aam
and
sbb
xor
xor
cmpsl
xchg
mov
sbbl
xchg
aas
push
mov
js
dec
enter
pop
jo
inc
add
or
and
or
xorb
fmuls
push
test
popa
cmpl
fstps
sbb
call
push
setl
ret
pop
xchg
pop
jp
and
pushf
sbb
hlt
inc
inc
cmp
mov
aas
inc
test
adc
icebp
cld
cli
jg
cmpsl
mov
sub
icebp
int3
enter
adc
pusha
cmc
sti
mov
lea
or
lahf
cmpsb
loope
cmpsb
dec
mov
cmp
lret
xchg
sbb
sub
and
loop
je
xor
xor
push
push
clc
std
mov
scas
mov
aas
sbb
rcl
daa
clc
jbe
lods
les
add
jnp
cmp
push
jbe
aas
pop
repz
outsb
xchg
jp
dec
rcrl
enter
popa
stos
lods
cwtl
dec
adc
mov
adc
scas
faddl
and
inc
and
ds
inc
insb
lret
inc
and
xchg
add
sahf
inc
jno
daa
xlat
stc
xchg
sub
inc
pop
jne
rorl
in
mov
imul
jne
cmc
jge
mov
loope
mov
inc
pop
shll
add
loop
jo
mov
out
repz
out
enter
push
inc
add
bound
push
mulb
push
aas
pop
pop
fwait
dec
jecxz
sub
andb
sub
adc
pop
push
xchg
xor
mov
cltd
dec
adc
lahf
inc
imul
mov
mov
inc
sub
xchg
and
push
adc
lea
mov
pusha
ja
jbe
adc
dec
ljmp
jecxz
insl
xchg
or
shrb
cwtl
iret
mov
or
cmp
nop
roll
loopne
dec
adc
clc
ret
ds
and
jl
aaa
shlb
pop
mov
fidivrs
jecxz
stos
sbb
je
pop
push
sbb
inc
aad
dec
dec
push
jo
push
cwtl
sahf
inc
pop
mov
xchg
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
jmp
mov
and
ss
xorl
rclb
sbb
and
iret
or
loop
mov
add
sbb
xchg
mov
out
gs
push
lret
jne
xor
and
inc
inc
scas
movsl
xor
mov
int
lods
stos
mov
push
mov
adc
fldcw
and
rorl
popf
and
xor
jl
pop
xor
cmpb
mov
dec
leave
xchg
push
in
jmp
jo
adc
jae
mov
cmpl
push
ja
out
les
cli
sarl
mov
fcoml
cwtl
subl
xor
pop
dec
or
in
icebp
je
cmp
cmp
xchg
js
scas
test
cmp
and
cmpb
cltd
ljmp
xor
mov
pop
cmp
cmp
push
push
mov
sub
pop
subb
aaa
fsubrl
int
pop
sbb
adc
insb
inc
jo
imul
scas
xchg
test
push
popf
cmp
daa
jne
shl
shl
push
imul
push
clc
inc
daa
xchg
jge
push
and
repnz
cmpsb
rol
data16
in
scas
out
pop
into
push
cmpsb
cltd
lock
and
sbb
mov
testb
loop
leave
xchg
enter
int3
adc
aaa
pop
outsb
mov
fdivrl
push
mov
dec
frstor
and
fidivrs
sbb
insb
or
es
insl
inc
pop
cld
cld
jbe
add
xchg
jbe
push
ds
jno
add
jl
and
jne
test
cmpsl
or
roll
cltd
cmpsl
arpl
scas
fiaddl
in
cmp
dec
das
roll
push
fbstp
and
add
cmc
repz
sub
js
mov
mov
pop
test
mov
mov
ss
push
add
int3
jb
stos
sbb
jge
and
orb
aad
inc
ret
sub
test
fdivrs
fisubl
lret
bound
or
jne
mov
sbb
shrb
mov
xor
jl
push
lods
push
adc
pop
cmp
sub
push
sub
or
adc
mov
cmpsl
jle
or
dec
lret
sub
mov
cltd
iret
cmpsl
or
push
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
jmp
orb
loop
sbb
call
outsb
cmp
inc
mov
sbb
sub
lahf
das
pop
jae
daa
inc
sar
arpl
ret
mov
cmpsb
adc
jo
scas
sbb
mov
dec
jno
sbb
in
pop
jmp
movsl
dec
push
es
std
sahf
aas
sbb
add
aam
add
jge
push
push
sub
pop
outsb
adc
push
mov
nop
loope
sbb
sub
sti
xchg
int
jmp
sbb
mov
xchg
test
and
negb
aaa
adc
xlat
add
mov
jae
cmp
sbb
out
jno
xor
pop
sbb
mov
mov
cmp
hlt
int3
shlb
adc
dec
clc
cmpsl
push
mov
aaa
call
xor
and
lds
insb
imull
push
lock
mov
call
sbb
popa
inc
in
fiadds
iret
dec
pop
jecxz
mov
out
jo
push
sahf
data16
adc
mov
inc
or
inc
adc
and
and
dec
mov
int3
lds
out
idivl
aas
push
pusha
mov
and
lea
fs
gs
out
adc
and
jle
test
repnz
xchg
gs
icebp
cmp
mov
jmp
mov
and
sub
push
push
loopne
js
cmpsl
imul
hlt
mov
pop
xor
les
sbb
mov
add
out
jb
xchg
adc
cltd
sbb
dec
enter
repz
outsb
in
push
mov
mov
popf
mov
cltd
mov
loop
enter
inc
sti
mov
cmpsb
inc
iret
push
add
add
aam
movsb
fwait
arpl
or
in
call
std
jns
adc
adc
call
sub
ljmp
pop
test
mov
push
insb
dec
and
addr16
mov
insl
int
sub
adc
fs
outsl
call
xchg
cmp
popa
test
pop
sbb
imul
es
hlt
pop
cmp
enter
leave
stos
loop
xor
mov
lods
sub
ds
shll
dec
jne
sbb
sti
inc
outsb
in
leave
add
scas
inc
and
pop
cmpsl
inc
mov
hlt
mov
fidivrs
mov
shll
mov
pop
inc
xor
nop
xchg
mov
jle
out
mov
dec
repnz
ds
sbb
jbe
ja
shl
testl
add
add
rorb
push
mov
mov
mov
imul
mov
imul
or
mov
or
xor
jmp
subb
pushf
sbb
pop
mov
cs
push
mov
sbb
out
xchg
xor
in
cwtl
jge
pop
sub
xchg
lea
mov
push
mov
and
loope
xor
out
cmp
rdpmc
add
mov
xor
sub
xchg
cltd
push
je
dec
dec
mov
ljmp
jecxz
in
xor
sub
pop
mov
add
dec
jbe
push
xchg
mov
pusha
pop
andb
mov
jp
lds
js
test
jne
stos
aaa
jns
mov
sub
es
shl
int
and
mov
pop
fiadds
call
push
jecxz
mov
insb
int3
pop
popf
cmc
mov
push
push
and
roll
push
ret
pop
scas
je
lahf
mov
cld
mov
inc
sbb
pop
lret
ret
sbb
std
xor
sahf
sbb
repnz
dec
loope
mov
jecxz
xchg
inc
jb
inc
stc
call
push
je
lahf
leave
mov
or
sub
daa
loope
dec
pop
dec
movsb
out
mov
sbb
push
nop
push
adc
fistl
xchg
out
mov
push
jae
dec
push
test
push
and
mov
mov
sub
xchg
shll
icebp
pop
mov
in
shr
jge
or
jl
inc
fnstsw
adc
lods
sbb
icebp
push
notb
out
pop
inc
mov
push
inc
and
insb
push
fbld
and
pop
mov
mov
mov
mov
dec
cli
roll
xchg
push
mov
scas
adc
lea
scas
push
stos
jmp
popa
fcmovbe
sub
in
stos
lret
xor
cmp
xor
ss
into
aam
cmpsl
lods
lods
rcrb
sub
mov
pop
pop
outsl
dec
insb
pop
mov
xor
cltd
dec
sbb
jae
inc
les
add
xor
and
add
inc
test
and
in
popf
popa
pop
call
xchg
add
popf
dec
xchg
ja
pop
lods
mov
daa
jg
add
out
popf
push
jmp
mov
jle
mov
cltd
pop
insl
pop
sbb
cmp
sbb
in
pop
xor
pop
in
inc
imul
loop
daa
ds
sub
pop
xchg
mov
jae
fnstsw
cs
dec
pop
mov
pushl
xor
stos
jae
ss
cltd
push
sbb
lea
add
and
add
xor
add
cmp
jmp
cmp
daa
sub
loopne
push
mov
sbb
adc
sbb
shrl
jmp
xor
xor
pop
add
adc
xor
incb
movsb
xchg
addl
movsb
xchg
lret
stc
add
add
enter
lods
fs
mov
popa
mov
js
push
ss
pop
pop
sub
push
fucom
dec
int
lds
repz
mov
dec
push
jl
xchg
loopne
mov
aaa
mov
dec
movsl
pop
xchg
sbb
leave
dec
aad
jl
mov
sub
test
inc
jle
loopne
cmp
das
daa
test
pop
mov
rorb
xchg
push
dec
xor
xchg
lret
in
push
lsl
insl
and
ss
lcall
xchg
movsl
mov
rcrl
push
cli
jge
jg
aad
bound
in
int3
jl
sahf
jne
sbb
inc
mov
sub
roll
adc
xlat
push
testb
adc
in
cmp
add
pop
and
cltd
pop
jl
xlat
push
mull
jne
shrl
cmp
stos
fs
and
xchg
out
in
and
jo
dec
push
into
add
adc
out
rcr
dec
test
sub
pop
sub
movsb
or
aam
mov
push
or
jns
mov
ss
imul
jmp
lret
mov
lahf
in
sbb
cmpsl
mov
je
lret
sbb
filds
jns
or
push
scas
mov
and
push
cmp
and
jg
test
mov
test
pop
rorl
imul
das
loop
in
mov
ret
dec
movsl
inc
and
push
or
push
stos
add
and
adc
outsb
xchg
int
push
movsb
cli
add
inc
lcall
bound
add
cmp
jg
cmpl
cmp
sbbb
pop
jnp
push
ljmp
and
inc
and
js
hlt
cwtl
inc
imul
nop
aad
mov
dec
fmuls
mov
rclb
inc
inc
xchg
pop
add
xor
imul
mov
cwtl
or
xchg
push
and
test
outsl
mov
shrl
jbe
shrb
and
dec
clc
xchg
sub
mov
sub
sub
mov
jbe
into
pop
adc
jne
pop
jmp
inc
mov
inc
lcall
jg
jo
sbb
rclb
sbb
stos
jl
jg
push
loop
sub
js
notl
sub
fidivs
das
rol
mov
adc
adc
jle
out
jne
popf
pop
dec
xor
ss
jae
and
test
and
xchg
pop
mov
fs
sbb
test
xlat
movsl
dec
mov
pop
ss
xchg
push
pop
mov
loope
pop
push
sub
dec
shl
lea
push
les
mov
out
mov
sub
dec
xchg
clc
repz
cmpsb
add
dec
out
lret
xchg
mov
xchg
xchg
add
xor
shll
fbld
pop
push
push
fcoml
mov
cs
std
cmp
frstor
hlt
sbb
pop
cmp
jge
inc
arpl
out
in
pop
xlat
xchg
loopne
std
add
cmp
and
push
addr16
pop
ds
inc
sub
and
fcmovu
mov
stos
mov
xlat
lds
or
inc
sti
push
mov
sub
mov
scas
pop
outsb
and
and
mov
ss
add
popa
outsb
mov
mov
hlt
into
out
pushf
pusha
inc
push
sbbl
push
out
rolb
inc
and
jecxz
inc
adc
pushf
or
lea
in
adc
sarb
mov
pop
sbb
aam
xor
roll
adc
fisubl
ficomps
ds
out
mov
lret
orl
inc
xchg
add
lret
ja
sar
push
push
mov
and
lock
jno
dec
push
jne
dec
arpl
pop
scas
mov
dec
out
mov
ror
dec
pop
int
push
js
sbb
mov
jo
fldt
dec
iret
popa
mov
pop
daa
in
adc
cmpb
pop
data16
pop
nop
add
dec
cwtl
cmc
mov
ret
loop
ret
push
and
xchg
mov
dec
ss
jecxz
jmp
mov
cli
jne
adc
test
out
mov
int3
push
ja
test
or
or
imulb
lahf
dec
cmpsb
xlat
mov
pusha
mov
in
stc
pop
mov
mov
lret
xor
or
jnp
outsb
loop
or
inc
or
sbb
in
ror
xchg
faddl
adc
push
cmp
cmpsl
jle
mov
mov
leave
ret
push
mov
sub
push
push
movl
movl
mov
jmp
outsb
rolb
jnp
cmp
ret
push
sbbl
test
sbb
mov
cs
sub
jo
mov
and
lret
sub
cmpl
ficompl
xchg
xchg
push
adc
fsts
and
loop
lret
cmp
ja
ret
mov
cmp
jne
in
xor
inc
out
cmp
test
call
call
xchg
lahf
pop
test
fwait
test
scas
sub
mov
inc
sub
cmpl
enter
xor
pop
pusha
cmpsb
inc
popa
sub
sti
sub
mov
cmp
xor
mov
arpl
lods
out
sbb
add
jb
pop
xchg
stos
mov
inc
leave
lods
and
int
movsl
adcl
clc
push
or
cmp
leave
adc
add
mov
adc
pop
sub
test
mov
es
std
aas
sub
push
adc
jnp
pop
stc
orl
fxch
imul
mov
jo
dec
ds
rolb
dec
fisttpll
iret
sub
jbe
mov
mov
xlat
movsl
cmp
sbb
push
and
mov
loopne
xor
sbb
outsb
inc
lods
xchg
dec
outsl
mov
jbe
pusha
jp
jno
roll
out
adc
xchg
add
lock
loop
loop
cltd
rclb
out
fsubl
mov
sarl
xor
nop
xchg
and
dec
dec
lret
clc
fcoml
call
cmova
and
jb
out
and
inc
jmp
mov
ljmp
rcr
test
rorb
mov
fisubs
sub
scas
sub
fdivp
push
jmp
mov
ljmp
ja
inc
or
and
addr16
pop
je
add
mov
push
pusha
fsubl
daa
mov
pop
pushf
fwait
imul
stos
mov
add
ror
push
sahf
into
pop
sub
add
sub
adc
push
pop
add
adc
xchg
je
enter
sub
push
mov
rorl
lret
mov
cmp
inc
daa
xchg
scas
push
add
inc
ret
mov
sarb
cmp
div
jns
scas
aad
push
mov
inc
shrl
push
cmp
pop
xlat
rolb
adc
pop
fs
daa
test
push
inc
stos
paddq
inc
jmp
dec
mov
les
shll
inc
mov
pop
adc
push
dec
clc
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
jmp
mov
pop
mov
stos
and
sbb
shll
sbb
fldcw
clc
cmp
dec
arpl
mov
pop
push
sub
repz
std
leave
mov
daa
jg
sahf
xor
imul
inc
dec
fimuls
ret
push
mov
adc
repnz
xor
push
icebp
stc
outsl
lods
pop
scas
and
imul
inc
aam
fmul
or
fists
movsl
xchg
mov
call
fsub
push
cs
mov
cmp
mov
dec
lcall
into
stos
repz
xor
dec
push
outsb
mov
rcrb
data16
in
inc
mov
insl
inc
cmp
lcall
xor
mov
daa
xor
in
xor
fstpl
testl
adc
jmp
add
mov
dec
insb
xchg
dec
or
mov
fdivrp
xor
mov
lods
nop
and
push
outsb
and
xchg
popl
sbb
mov
pop
ja
sbb
es
push
and
lahf
or
jno
push
add
hlt
add
lds
xchg
push
push
inc
mov
dec
xor
scas
lods
sbb
push
fildll
fs
inc
shrb
and
aaa
jne
out
test
stos
rcrl
aam
sub
push
pushl
jns
hlt
mov
pop
loopne
sahf
jbe
lds
mov
jmp
enter
xor
cltd
jmp
add
xchg
test
push
jnp
mov
cmp
xchg
inc
push
in
test
leave
fldl
aad
jb
scas
pop
cltd
lcall
or
add
cmp
sti
int
jnp
cmc
mov
int
add
stc
sub
inc
loope
pop
daa
out
stos
mov
std
stos
push
js
and
clc
xor
sub
and
bound
or
mov
sub
cmp
sahf
mov
shlb
adc
pop
pusha
mov
jo
ds
sahf
jne
mov
int
adc
mov
and
jmp
dec
incb
jae
sbb
xor
pop
cmp
jmp
or
je
rorl
adc
ja
movsw
lock
and
mov
sub
pop
lcall
dec
scas
xor
mov
dec
ljmp
lret
in
out
inc
sbb
mov
sbb
icebp
inc
mov
or
lods
jnp
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
jmp
fiadds
rcrl
dec
fisubl
out
mov
jl
sahf
sbb
mov
loope
loopne
js
pop
lahf
xor
les
cwtl
outsb
add
cmp
psubd
pop
xor
enter
test
lds
push
shlb
cmp
repz
popa
int
cwtl
addr16
or
ret
mov
hlt
mov
cmp
int
jl
push
gs
daa
sub
rcll
enter
or
hlt
data16
xchg
cmp
mov
bound
mov
ficoms
daa
nop
bound
pusha
shrl
data16
outsl
stos
xchg
cld
bound
and
daa
or
sbb
sbb
pop
mov
nop
or
ja
add
mov
outsl
out
xchg
pcmpeqw
fisttps
mov
cmp
xchg
pmuludq
daa
shlb
push
into
mov
sahf
jb
loope
jle
ret
pop
insl
nop
lahf
mov
lds
pop
ja
test
xchg
push
es
mov
dec
and
xchg
pushf
xchg
mov
lods
pusha
cmp
mov
and
sbb
and
and
nop
jne
and
add
in
sti
jae
mov
xchg
loope
inc
jp
fcmovbe
fs
jecxz
das
xor
mov
dec
decl
xlat
test
loop
mov
pop
ja
out
test
jmp
mov
adcb
mov
mov
xor
mov
mov
xchg
lds
dec
das
push
dec
adc
xchg
add
push
sbb
adc
hlt
imul
pmullw
nopl
pop
loop
pushf
test
xchg
or
je
nop
jne
fistpl
xor
shlb
ss
mov
xor
lds
out
or
lock
xchg
jg
dec
stos
mov
movsb
int
faddl
adc
mov
gs
mov
fstl
jge
cmc
sbb
or
lods
jp
std
xchg
insb
mov
add
bound
and
jno
fbstp
dec
jae
call
and
jns
stc
outsb
xor
push
add
or
fdiv
enter
fcmovnb
inc
adc
imul
nop
push
jb
push
add
add
lock
jo
addb
out
jmp
enter
pusha
add
push
out
cmpsb
push
sub
loopne
add
xor
xor
mov
div
cmp
jmp
ss
jnp
pop
xor
pop
lahf
jo
cwtl
sbb
mov
test
xor
mov
leave
and
pop
mov
add
lods
push
ds
cmc
jno
repnz
mov
cmc
daa
sarl
add
sbb
out
popa
lret
shrb
push
push
lcall
sub
xor
div
shll
inc
sub
push
inc
sbb
mov
mov
dec
jb
sbb
sub
jmp
lret
lods
stos
repnz
lcall
cmp
stos
popa
test
std
sbb
add
in
adc
cmp
test
sub
imul
push
pop
sbbw
lods
mov
adc
xor
orl
sub
ljmp
clc
pop
out
inc
sbb
sti
mov
int3
pop
sub
or
mov
outsb
xchg
and
sarl
loope
andl
push
xchg
inc
mov
repnz
mov
xor
aaa
ret
lcall
ds
subl
push
cmp
imul
aaa
repnz
gs
dec
xchg
mov
iret
push
ljmp
stos
hlt
ficompl
pushf
std
adc
xor
xchg
sub
movsb
cmp
mov
push
mov
add
repz
push
and
fs
aaa
jns
push
movsl
int3
adc
cmpsb
and
out
add
aam
mov
xchg
add
rol
dec
jbe
lds
enter
or
in
mov
push
mov
push
mov
arpl
cmp
das
add
ds
mov
xchg
dec
outsl
mov
divb
dec
test
clc
pop
test
mov
xor
cmp
gs
cwtl
loope
sbb
daa
into
rolb
fwait
xor
xchg
jl
jmp
sub
adcb
in
adc
push
push
dec
mov
shlb
or
add
stos
push
sub
mov
add
xchg
leave
pop
ss
xor
cmp
popf
sbb
out
inc
cwtl
shlb
xor
fucomip
shrl
addr16
ror
fistpll
push
sbb
push
lds
jge
jge
std
cs
icebp
or
inc
xor
scas
test
push
arpl
bound
mov
inc
lret
adc
cmp
xor
sub
seto
push
movsl
mov
jp
mov
jae
jbe
jnp
xor
pusha
fldl
insb
xchg
pop
aad
test
dec
mov
sarb
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
jmp
sbb
cmpsb
fs
mov
lea
jl
xchg
sbb
mov
mov
shlb
adc
sbb
jmp
jnp
cmp
rorl
mov
sub
enter
mov
lret
js
mov
xor
and
xchg
lcall
pop
mov
cmpl
push
stos
rorb
ljmp
lods
xor
sbb
add
leave
add
addr16
and
movsl
shr
repnz
les
cmpsb
dec
sbb
loopne
out
dec
dec
inc
push
xor
aam
jb
pop
jae
cwtl
push
cs
pushf
in
xchg
push
pop
xor
pop
mov
mov
sub
ljmp
xor
mov
std
adc
ljmp
sub
mov
dec
out
cmp
test
ret
shrl
adc
jno
xrelease
test
sbb
scas
cltd
lahf
std
js
sti
repz
jmp
push
movsl
jnp
sbb
xor
or
xchg
inc
jg
mov
fiadds
rol
es
hlt
mov
lret
sbb
out
sub
mov
ljmp
into
pop
mov
idivl
loop
int3
push
jl
and
mov
cmp
fisubrs
fldenv
cltd
jge
ret
ja
pusha
into
xchg
mov
push
dec
pop
int
pop
repz
adc
inc
lahf
pop
xchg
mov
mov
pop
sbbb
sub
fcmovnu
cvtps2pd
les
pop
cmp
push
lods
xor
jmp
popf
out
scas
inc
bound
dec
mov
int
pop
mov
sbb
xchg
mov
pop
inc
cmp
mov
pop
inc
scas
jmp
fidivl
leave
in
xchg
mov
mov
add
fildl
mov
fistl
adc
add
imul
jge
cld
loopne
sub
popf
ds
and
lock
cmp
scas
cmp
fdivrl
pop
mov
aam
cmp
xor
mov
out
mov
sub
cmpsb
mov
add
or
cmp
jne
mov
pop
mov
pop
xor
pop
dec
aam
push
dec
sbb
cmp
outsl
in
pop
cmp
cli
mov
or
lret
repnz
jns
push
xchg
jb
js
js
add
movsl
mov
inc
lock
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
jmp
pop
jp
movsb
mov
fsubl
jb
mov
push
adc
sbb
test
push
sub
dec
fwait
inc
push
mov
mov
imul
dec
pop
push
or
out
add
lds
outsb
sub
icebp
shll
pushf
jmp
out
push
push
xor
repnz
or
push
mov
cmc
scas
and
push
lret
rcrl
inc
jl
aad
inc
xchg
lods
xor
out
ljmp
cmc
fistpll
adcl
std
xchg
aas
popa
vcvttps2dq
rcrl
cmp
jo
or
xchg
jne
pusha
cmp
sbb
jo
lret
mov
gs
sub
cmp
jecxz
jnp
pop
pop
mov
push
insl
sbb
xchg
mov
add
mov
or
xor
aaa
xchg
xchg
cmp
clc
ret
mov
pop
dec
sub
lock
dec
mov
sbb
test
insl
jl
insl
mov
int3
inc
mov
or
mov
jb
sbb
std
pusha
dec
into
mov
popa
outsb
sbb
cmpsb
movl
enter
pop
rcrb
mov
mov
fs
xlat
mov
add
shrb
rcl
aad
or
and
inc
loopne
idivb
inc
jmp
push
lods
ja
or
or
inc
sub
xor
mov
ret
xchg
push
mov
mov
mov
add
dec
jge
mov
mov
int
mov
cmp
call
loope
sub
and
jae
push
inc
sub
scas
shr
inc
mov
shlb
jnp
inc
and
xchg
dec
pop
dec
cmp
sti
pop
xchg
or
mov
or
cwtl
or
sub
xchg
and
or
lock
add
mov
xchg
enter
mov
cli
mov
ret
pop
test
pusha
xchg
daa
aam
shr
repnz
call
pop
lret
mov
sub
pushf
aas
mov
jnp
int3
loope
daa
push
std
and
test
dec
cmc
aad
push
dec
jnp
cli
mov
inc
and
dec
sub
out
pop
xlat
cmp
adc
mov
ljmp
add
xchg
gs
es
add
ret
test
inc
jle
sub
nop
jmp
fcmovne
int
leave
mov
std
in
rolb
xchg
mov
sub
mov
jns
stos
ret
or
insl
std
ret
xchg
ficomps
aas
pop
lods
out
mov
ret
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
jmp
jno
xchg
mull
mov
ljmp
sbb
cli
fucomip
out
add
pop
jp
and
mov
cld
push
cmp
scas
das
movsl
test
fdivrs
out
dec
xchg
arpl
or
sbb
ret
enter
mov
cmc
lret
mov
jbe
stos
pop
mov
pop
push
mov
mov
mov
mov
mov
fdivrs
or
lahf
repz
sub
arpl
xchg
xchg
jecxz
sbb
std
insb
or
inc
out
add
jbe
add
loope
sub
mov
daa
sub
mov
cmc
or
mov
cs
mov
mov
xchg
add
jl
int3
in
sub
lock
fnstcw
cmp
mov
xchg
inc
aaa
and
idivb
and
pop
inc
pushf
push
inc
mov
and
sub
sub
into
mov
loopne
popf
xor
xchg
xchg
insb
insb
pushf
or
fwait
addb
mov
cli
mov
xchg
lcall
loop
jmp
int3
adc
ret
push
pop
xchg
cmp
cmp
add
gs
mov
test
data16
jg
cmc
push
xchg
sub
ficoms
mov
in
pop
mov
cmpsb
jmp
aas
jl
repnz
scas
jg
mov
or
sar
xor
andl
or
xor
mov
stos
pushf
pop
jae
jae
mov
test
sti
adc
add
out
pop
icebp
lods
aam
or
inc
mov
scas
out
decl
fistpl
test
push
xchg
add
xchg
inc
sub
imul
out
sbbb
lahf
bound
pop
mov
dec
das
data16
and
cmp
add
fmull
push
ret
adc
movsl
push
pop
xchg
shl
mov
xor
outsb
dec
jge
popf
in
add
adc
sbb
and
mov
adc
sub
es
js
gs
sub
xchg
lods
cmp
lahf
aam
push
mov
aaa
or
mov
int
cli
mov
push
rolb
popf
pop
rorb
fistpll
xchg
adc
pop
scas
ret
pop
push
push
ja
add
jbe
mov
filds
mov
out
ret
mov
hlt
lcall
lds
push
pop
movsb
adc
push
test
fwait
mov
call
jmp
and
fisubl
into
pop
in
mov
cld
jg
inc
scas
xor
cmp
jmp
int3
add
cmp
mov
movl
mov
mov
sub
jmp
test
mov
push
imulb
insl
sbbb
lcall
das
aas
in
mov
incl
mov
mov
repnz
cmp
movsb
fwait
je
adc
imul
ss
aam
inc
subl
shll
mov
push
adc
cmp
inc
mov
in
cmp
xchg
fsts
inc
adc
jle
ds
push
pop
and
dec
cmp
scas
push
mov
dec
or
lret
iret
mov
jnp
sarb
add
fisubs
jb
ret
mov
in
dec
out
xor
mov
mov
clc
xchg
pop
mov
ljmp
add
mov
pop
pop
stos
dec
dec
cmp
fnstcw
mov
cli
add
test
cmp
sahf
mov
jbe
sub
cmpb
fdivrs
adc
fwait
sbb
data16
xlat
cmp
ja
cmp
lret
dec
push
mov
scas
xorb
loopne
fwait
movsl
mov
inc
adc
adc
pushf
jns
fwait
jmp
sub
movsl
or
mov
and
popf
movsl
jmp
fiadds
sub
cltd
sbb
jae
jmp
adc
sub
fmull
pop
sbb
inc
and
rorl
cwtl
push
jg
jl
sub
add
dec
es
xchg
xor
mov
addb
mov
inc
data16
pop
push
dec
bound
cmp
pop
nop
rcrl
inc
fistps
or
adc
clc
push
add
ret
jge
cmp
shlb
xchg
inc
je
inc
add
mov
mov
pop
loope
jecxz
mov
xchg
and
out
or
popf
sbb
repz
jg
jp
dec
das
rcr
xlat
xchg
or
insl
mov
rcrl
push
jl
push
insl
mov
insl
cmpsl
adc
lahf
inc
lret
testl
and
gs
add
movsb
mov
sub
pusha
aas
cmp
xor
notb
jb
xorl
push
fimull
xchg
arpl
push
loopne
lea
and
dec
cmp
pop
add
ds
inc
inc
mov
xor
adc
out
dec
test
pusha
and
adc
dec
sub
or
jle
lock
xor
mov
jg
lcall
xchg
mov
add
push
dec
movaps
jbe
subl
adc
push
lahf
lock
jae
and
cmpsl
jl
push
adc
push
fadd
dec
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
jnp
push
jl
mov
fs
stos
out
jl
sbb
sbb
cltd
jmp
mov
mov
rcrl
rolb
insl
adc
insl
loopne
and
cmp
jmp
jg
pusha
pop
mov
push
cmp
cmc
popf
int
mov
xchg
mov
push
add
mov
push
mov
sub
fmul
xchg
ss
icebp
pop
xchg
iret
cltd
push
mov
mov
je
rcl
mov
fisubs
insl
es
aam
xor
jmp
xor
imul
mov
sub
add
mov
pop
inc
iret
movsb
lahf
adc
xor
into
aas
sbb
and
outsb
dec
decb
adc
xchg
fldcw
dec
xchg
or
sub
fidivrl
lahf
add
popf
cmpsb
popa
dec
scas
jns
push
jae
or
jno
push
insb
inc
xchg
mov
dec
ffreep
lahf
outsl
xor
loope
stos
and
cmp
mov
mov
shlb
adcl
in
sbb
mov
orl
cmp
dec
mov
aam
add
andb
cmp
xor
mov
mov
movsb
ret
adc
adc
pop
mov
mov
test
std
das
inc
mov
mov
pop
adc
cld
mov
sbb
std
mov
lods
or
jp
xor
pop
xchg
xchg
push
lcall
sbb
pop
xchg
into
sub
jmp
adc
xchg
mov
jge
aaa
pop
pop
in
sbb
sub
push
scas
in
adc
fdivr
in
shrb
sub
pop
mov
sub
dec
out
jle
mov
stc
mov
inc
je
jnp
sub
outsb
pusha
cld
inc
je
lret
mov
lock
ja
test
jmp
sbb
insb
orl
in
cmc
xchg
lahf
lcall
and
cs
imulb
les
pop
into
rolb
inc
mov
sbb
mov
push
cmpsl
cmovnp
jmp
dec
cmp
je
rcr
lret
loopne
pop
dec
ljmp
jb
test
jmp
add
test
dec
sbb
add
test
pushl
test
decl
test
push
adc
add
test
ljmp
data16
add
inc
clc
shrb
add
jle
add
jo
add
dec
sub
sub
adc
inc
js
sbb
sbb
lock
or
inc
jbe
push
mov
mov
fldenv
sub
mov
add
mov
out
xchg
aaa
int
int3
mov
jmp
cmpsb
or
inc
mov
xor
test
xchg
call
sahf
addb
out
filds
xchg
jae
and
arpl
insb
movsb
pop
imul
in
popa
ss
cmp
sub
fsubp
loope
lret
in
dec
js
fidivrs
addl
movsl
mov
lahf
add
scas
test
insb
or
add
nop
ja
xor
push
sbb
push
xchg
dec
adc
pop
mov
and
imulb
addb
xchg
insl
mov
jle
stos
out
incl
notb
sub
adc
dec
jns
sahf
inc
pushf
pop
inc
daa
inc
loopne
ds
push
add
push
cs
and
into
inc
inc
leave
pop
and
lahf
cmp
enter
jl
add
aam
jl
mov
cs
nop
bndldx
inc
cld
aad
jecxz
mov
aad
dec
cld
divl
stc
mov
lret
sbb
add
int
js
loope
push
mov
aad
dec
sub
cli
sahf
je
fsubr
insl
fnstcw
mov
dec
into
testb
and
adc
pop
pusha
add
push
imul
daa
in
xchg
dec
arpl
mov
cltd
inc
clc
sbb
xchg
cmpsl
add
outsb
mov
inc
mov
mov
decl
stos
int3
jmp
adc
js
scas
and
mov
adcb
jle
mov
lret
test
das
mov
sub
sub
cmp
sub
test
in
inc
and
sbb
xchg
mov
mov
mov
pop
jne
sub
sub
xchg
or
or
jmp
cmpsb
hlt
pop
sub
or
sub
xorb
push
and
xchg
int3
test
insb
pop
and
movaps
in
testl
insl
insl
lods
or
fs
mov
and
and
push
push
xor
mov
xlat
pop
test
es
cld
hlt
xor
add
in
adcb
push
push
call
mov
mov
xor
mov
mov
mov
xor
jmp
lds
fisubrs
sbb
pusha
mov
adc
sahf
je
sbb
sbb
and
cld
sub
popa
scas
pop
dec
dec
adc
ds
sahf
xor
ret
lea
loopne
jp
stos
jl
leave
in
ret
pop
ljmp
arpl
cmpsb
add
cltd
and
mov
pop
sbb
aad
movsb
repnz
pop
lret
in
or
outsl
jae
scas
mov
and
jno
insb
jo
inc
ret
add
idivb
jecxz
cmp
aas
test
inc
orb
or
sub
fdivp
jns
fldenv
scas
or
or
sub
mov
sbb
jle
push
sbbb
cmp
and
and
cli
xor
adc
shlb
sub
xor
cmp
fdivl
or
adc
inc
inc
pop
pop
mov
xor
add
jp
pop
aad
ds
add
push
hlt
pop
adc
loop,pn
jg
sub
mov
das
insl
out
stos
scas
mov
jl
mov
push
xchg
pop
jbe
lahf
mov
cmp
test
add
adc
mov
test
dec
inc
cld
adc
adc
mov
iret
mov
call
sbb
out
cs
add
rep
out
roll
test
fsts
clc
cli
into
add
push
loope
pop
inc
in
mov
xchg
mov
inc
mov
repz
push
mov
hlt
and
fsubrl
mov
je
fsub
imul
jae
call
mov
inc
fnsave
cmpsb
dec
or
adc
popa
shrl
cmpsl
xchg
add
mov
push
dec
cmc
or
ljmp
cmc
mov
adcb
mov
push
incb
es
int3
fmulp
and
inc
inc
arpl
sbb
int3
fs
inc
imul
cmpsb
pop
cmpl
dec
leave
aad
inc
xchg
into
add
mov
inc
mov
imul
in
scas
jge
aad
out
xor
or
mov
fld1
sbb
fiaddl
inc
pushl
mov
lds
mov
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
jmp
loope
lods
aam
mov
gs
imulb
sbb
sbb
mov
jbe
rcl
jae
inc
sbb
lods
dec
lods
mov
outsb
lods
leave
inc
sahf
inc
loop
and
hlt
popf
popf
adc
jae
lahf
mov
jae
xor
xor
fnsave
jp
pop
mov
push
add
out
sub
pop
js
mov
mov
pop
push
inc
call
dec
jl
cmp
aaa
adc
push
mov
xor
imul
dec
repz
mov
movsb
inc
nop
movsl
pop
sti
lea
mov
outsl
mov
mov
in
mov
jp
sub
mov
and
inc
adc
pop
push
roll
pop
jbe
push
sub
cli
pop
xchg
pop
cmp
mov
leave
inc
cld
or
jbe
std
aaa
cmp
dec
cmc
mov
or
sar
lods
jnp
inc
push
mov
je
add
pop
mov
sub
jle
mov
sahf
cmc
pop
or
lcall
mov
sub
and
in
push
int
in
bnd
fs
or
and
aam
out
jb
xor
dec
push
ja
fwait
cmp
mov
lods
data16
cwtl
pop
decb
lea
dec
das
shl
out
cmp
mov
xor
xorl
cmp
push
add
call
out
ret
and
sub
xchg
sbb
lret
lcall
xchg
inc
cltd
sub
inc
and
cli
dec
out
mov
cmp
arpl
lcall
add
ja
mov
loop
dec
pop
mov
adc
or
mov
jnp
stos
xor
leave
movsl
mov
lcall
xor
orb
lds
fnstsw
icebp
aas
inc
pop
mov
shll
test
push
adc
mov
mov
or
and
adc
outsl
push
mov
sti
add
outsl
add
icebp
iret
fisubrl
push
pop
gs
fidivrs
call
add
xchg
int3
xchg
cmpl
stos
xlat
add
mov
lea
scas
mov
lahf
mov
mov
mov
add
adc
or
mov
jmp
pop
and
xor
pop
sbb
pop
jo
push
sbb
sbb
mov
pop
cmp
dec
fs
push
int
mov
insb
jo
cld
jae
mov
ds
int
insb
add
or
in
int
dec
xor
xchg
mov
lods
aad
sti
iret
hlt
imul
cli
dec
dec
adc
and
outsl
mov
push
jle
popf
mov
mov
lcall
js
mov
stos
scas
jmp
aas
cmp
xchg
shlb
cltd
out
dec
cli
jl
imul
jmp
or
shrl
jp
jae
mov
test
imul
nop
scas
pop
jbe
push
and
and
pop
mov
stc
xchg
mov
cmpsb
adcb
mov
jg
iret
nop
xchg
fucomip
or
in
iret
and
mov
inc
jmp
orl
fwait
xchg
pop
push
pop
inc
mov
sti
inc
mov
in
mov
pop
mov
cld
aad
sub
and
mov
jmp
mov
or
int
mov
fstpt
xor
sbb
dec
sti
stos
inc
jno
push
aaa
sbb
inc
call
sub
mov
pop
push
push
xor
popa
test
test
pop
movsb
scas
das
mov
jno
adc
push
add
jne
jae
mov
push
adc
je
in
or
and
jge
cs
fstps
iret
mov
inc
fcomp
adc
dec
call
pop
push
push
sbb
or
dec
call
mov
ret
dec
nop
and
or
pop
cltd
push
cmp
pop
daa
cmpsl
push
hlt
pop
movsb
and
jmp
pop
sarb
push
jbe
stc
addr16
jp
lods
mov
arpl
stc
xor
mov
jmp
or
in
out
clc
sbb
aad
push
pop
cmp
adc
xchg
scas
sub
orb
loop
inc
cwtl
adc
loop
cmp
add
nop
cmpsb
xor
ss
pop
repz
add
push
jae
les
clc
mov
xor
loope
or
add
dec
aam
out
sub
dec
movsb
outsb
and
jno
dec
pop
repnz
sbb
jne
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
jmp
mov
push
jle
inc
inc
jne
sub
jl
data16
jno
sbb
aaa
and
push
cwtl
cmp
mov
clc
cld
cmp
cmp
lret
in
bound
cmp
dec
jo
pop
arpl
inc
inc
ret
xchg
shrb
add
or
mov
mov
dec
sub
nop
cmpsl
int
cmpsb
jne
mov
lret
leave
pop
filds
dec
subl
sub
sbb
xor
fnstcw
ds
xor
sbb
nop
orl
add
clc
int3
xor
movsl
ret
sbb
and
pop
imul
sbb
test
push
xchg
ret
sub
cmpsb
xchg
dec
imul
sbb
jcxz
lret
ret
fcompp
imul
loopne
int
adcl
cmp
xchg
stc
add
jl
cltd
pop
sub
arpl
sti
fisubs
mov
inc
mov
mov
or
stos
cltd
call
arpl
jg
scas
jle
cmp
adc
ror
js
xchg
mov
imull
cmp
lahf
fidivs
mov
mov
xchg
lock
in
jp
movsl
int3
mov
dec
ret
sub
lret
ret
lds
jp
jge
jnp
push
add
sub
insl
leave
js
and
mov
inc
adcb
sub
jnp
dec
xor
fistpll
scas
xlat
div
shl
inc
cld
enter
leave
pop
fs
or
sub
push
loopne
imul
push
jne
mov
cmc
popf
das
jne
repnz
fnstenv
sbb
mov
pop
cs
stos
jbe
mov
addr16
das
mov
andb
loopne
dec
adc
icebp
fwait
mov
je
inc
mov
orl
mov
and
rcll
push
in
lds
popa
shr
rorb
xor
sbb
jno
in
xchg
or
mov
stos
ljmp
or
sub
call
sub
pushf
sahf
add
jmp
and
in
test
add
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
jmp
mov
xchg
cli
push
fistpl
jge,pn
stos
pushf
fldz
mov
jno
sbb
jno
jne
pusha
mov
test
cmp
jne
pop
sub
aas
outsl
aaa
leave
xchg
std
test
out
mov
in
cmp
jno
or
leave
out
mov
and
pop
mov
jmp
cmp
cmpsl
mov
negb
sti
out
aas
add
adcl
xchg
mov
outsl
imul
jl
mov
mov
popa
mov
mov
fiaddl
int3
andb
lods
data16
mov
or
push
jmp
jns
adcb
cs
xor
test
add
je
jbe
inc
iret
out
test
mov
aaa
ja
xchg
add
inc
cld
loope
mov
sub
std
mov
xorl
imul
mov
jb
fsubrs
push
jle
mov
push
add
add
mov
cmp
jecxz
cmpsb
push
and
pop
fcmovnu
or
and
cmp
fcmove
pop
sbb
and
fs
sbb
inc
xchg
or
pop
and
inc
sbb
cmp
xchg
mov
test
lahf
out
mov
pop
dec
fsubp
xchg
hlt
xchg
adc
scas
lds
in
test
lret
add
bound
mov
lods
adcb
or
lret
out
mov
iret
inc
push
mov
or
or
mov
lea
dec
mov
jp
cld
mov
nop
push
sbb
stc
dec
int
lcall
mov
loopne
clc
lret
jo
loope
rolb
ficompl
inc
mov
idiv
add
xor
stos
in
and
in
das
add
fimuls
loope
andb
je,pn
inc
adc
pop
sub
push
or
sub
ret
notb
inc
cmc
xor
jle
push
icebp
and
cltd
lock
rorl
push
adc
dec
addl
inc
cmovae
mov
call
les
or
lahf
sbb
imul
inc
out
cltd
insl
lcall
addl
ret
add
adc
push
push
call
mov
sub
push
pop
jmp
jae
mov
sbb
jo
push
or
push
pop
sbb
jno
sbb
mov
jl
cmc
mov
jo
mov
push
inc
mov
adc
push
cmp
in
push
dec
imul
rep
sub
lret
jmp
jmp
xchg
aaa
pop
push
xchg
icebp
push
jbe
mov
xor
in
inc
test
pop
or
es
adc
mov
dec
bndstx
sbb
cwtl
inc
push
lds
jbe
mov
inc
sub
push
mov
adc
push
test
cmc
mov
aad
or
sbb
push
mov
push
in
adcl
cmp
xchg
int
nop
rolb
jge
jmp
sbb
adc
mov
ficomps
sbb
leave
mov
clc
or
int
adc
jecxz
adc
xchg
add
mov
popa
rclb
jl
pop
js
fldcw
jmp
inc
out
in
out
or
mov
inc
adc
xchg
pop
mov
lock
sbb
cmp
sbb
add
dec
pop
or
popf
mov
ret
sahf
ret
pusha
mov
or
mov
out
cmc
fcompl
push
outsb
ret
out
mov
sub
lock
mov
mov
push
push
and
pop
pop
mov
add
cwtl
xchg
mov
jb
inc
xchg
dec
inc
xchg
stos
sbb
mov
mov
push
in
test
es
stos
mov
xchg
ficomps
icebp
xchg
outsb
dec
xor
dec
ljmp
sti
ja
adc
repz
xabort
xor
lahf
daa
mov
xlat
lcall
or
sub
add
dec
mov
xor
and
sub
cwtl
cwtl
inc
enter
push
sbb
stc
sbb
les
stos
mov
mov
pusha
int
push
hlt
adc
mov
sub
pop
adc
and
push
sub
and
lods
inc
and
mov
push
stos
cltd
jno
pop
cmpsb
inc
loope
jge
rcll
lock
jb
cs
inc
mov
popa
scas
ja
sti
jge
push
mov
add
jg
push
mov
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
jmp
icebp
not
xchg
into
xor
jbe
cmc
gs
scas
pop
sbb
stos
adc
sbb
test
out
push
call
fs
inc
fcompl
cs
loopne
loopnew
pushf
lret
and
dec
xor
ds
jb
inc
rcll
fstps
xchg
mov
iret
push
mov
pop
incb
push
pop
fdivrl
andl
sahf
aas
aam
jbe
mov
mov
mov
jle
jae
cmc
push
enter
sub
icebp
sbbl
jle
inc
add
aaa
sbb
fstpt
jo
mov
adc
xchg
pop
scas
test
stc
fxtract
shrb
jl
push
inc
xlat
add
mov
idivl
cli
rcll
iret
mov
ret
dec
call
iret
sahf
fsubp
pop
or
pop
dec
cmp
add
mov
dec
jle
mov
cli
xchg
inc
cli
inc
xchg
in
mov
xchg
scas
outsl
add
and
cmp
inc
jecxz
pusha
push
jl
inc
movb
mov
sub
bound
bound
stos
lcall
inc
test
push
imul
fs
cmp
jle
jp
daa
and
insb
jge
jnp
jbe
push
mov
les
mov
out
out
sti
cwtl
pop
lea
jb
cld
daa
push
xor
pop
into
or
cmp
or
mov
jge
arpl
into
fdivrl
ljmp
or
or
aaa
inc
inc
test
sub
xlat
or
cltd
and
out
test
mov
hlt
jno
cmpsl
xchg
je
inc
sbb
push
jl
pop
je
cld
je
arpl
int3
mov
ret
pop
fidivl
xchg
sahf
fistps
sub
add
gs
mov
fnsave
imul
pusha
push
mov
jmp
popa
mulb
jge
leave
push
mov
inc
and
js
lahf
push
lock
push
mov
xchg
xlat
add
gs
sbb
fnstsw
pop
xor
xor
sbb
sahf
adc
inc
add
loope
xchg
xchg
aaa
jns
push
das
mov
add
and
and
xchg
push
sub
jnp
mov
inc
movsb
mov
pop
sbb
jb
movsl
sub
das
xchg
test
mull
or
cmpsb
sub
lds
pop
add
jbe
inc
in
and
cmpsl
inc
ret
and
je
sbb
in
shrl
js
outsb
add
add
daa
xchg
mov
and
scas
and
or
sub
xchg
repz
es
nop
mov
mov
and
ret
cmp
jg
nop
mov
clc
jg
loopnew
out
push
mov
test
arpl
test
and
insb
in
arpl
cwtl
cmp
adc
push
mov
jp
xchg
cwtl
aas
out
dec
iret
outsl
out
fidivs
or
cmp
test
rcl
push
mov
ret
and
pop
fwait
xchg
push
loopne
add
aaa
mov
test
adc
pop
rcr
pop
icebp
call
push
add
adc
and
jmp
cs
pop
or
clc
and
clc
jns
lods
xchg
cs
addb
outsl
sub
loope
inc
rorb
popa
mov
aad
sti
pop
loope
fs
pop
inc
jae
adc
sbb
out
xlat
roll
cmp
dec
cld
mov
mov
add
mov
adc
mov
push
push
or
or
jmp
cmp
sahf
cmp
mov
inc
push
sbb
stos
adc
sbb
incb
jl
sub
clc
insb
add
cmp
inc
xchg
sbbb
in
push
popa
icebp
lods
xor
or
lods
cld
push
adc
or
mov
shrb
repnz
add
xlat
add
xchg
xor
xorl
outsb
ss
ret
into
outsl
mov
cmpsb
or
popa
adc
popa
adc
arpl
inc
xchg
sub
push
aad
cmc
iret
notb
jnp,pn
adc
push
inc
ljmp
or
dec
inc
sbb
addr16
push
sarb
insl
rclb
mov
push
repnz
dec
scas
dec
sub
scas
cs
insb
mov
in
add
insb
cwtl
aas
cwtl
mov
mov
scas
negl
pusha
adc
fdivs
mov
icebp
xor
dec
aas
adc
in
adc
outsl
std
insl
in
inc
fidivrs
jmp
mov
jecxz
or
scas
leave
mov
jp
stos
jnp
movsl
outsb
xor
imul
js
xor
jns,pn
iret
sub
xlat
sub
ret
mov
sti
test
fidivl
sub
sub
push
testl
sbbb
cli
cli
int
das
lret
jl
and
add
mov
pop
lds
jae
or
cs
cmp
mov
xchg
fyl2x
stc
adc
repnz
mov
ret
inc
mov
in
jb
pop
shlb
mov
pop
push
clc
adc
int3
adc
jae
push
adc
movsl
mov
aam
divb
cs
sahf
cmp
mov
push
mov
adc
inc
cs
and
push
mov
xor
loopne
popa
jnp
enter
loop
jp
in
adc
lahf
rcll
stos
popa
sti
sub
fmuls
xor
insl
sub
or
mov
imul
daa
std
xor
pop
sub
jnp
cld
cmp
arpl
idiv
por
ret
push
out
out
ja
push
sbb
xchg
negl
lcall
mull
imul
push
sbb
push
ljmp
dec
fnstcw
outsb
and
jg
int3
ljmp
dec
sbb
arpl
into
push
mov
jmp
xchg
loop
and
lods
jb
jo
push
cmpsb
sub
mov
es
test
lock
mov
shl
mov
mov
mov
les
sarl
arpl
inc
mov
xorl
cmp
xchg
inc
mov
xchg
popa
jnp
jmp
add
mov
stc
mov
insl
lock
pop
mov
lcall
loop
cmc
push
mov
push
xor
sysexit
or
sti
xor
sub
popf
imul
push
xlat
xchg
cmp
add
out
lret
xchg
add
add
sub
ja
lret
mov
xor
sbb
pop
imul
fwait
push
xchg
or
es
insl
cmp
jle
pop
push
push
fsubl
cmp
dec
aad
lret
lods
ss
fiadds
push
sti
cwtl
xlat
cmpl
jno
xor
outsl
or
push
or
in
inc
orl
lcall
push
gs
loop
into
xchg
nop
in
pop
mov
out
add
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
jmp
push
push
jbe
jb
mov
push
xchg
gs
stos
adc
sbb
inc
fcomip
mov
push
mov
je
push
stc
jl
inc
sbb
add
push
out
fdiv
out
push
cmc
xchg
sbb
cmpsb
iret
mov
leave
push
negl
pop
and
sbb
jne
dec
scas
icebp
rcr
cmpb
inc
push
add
jg
mov
or
mov
divb
call
cmp
ljmp
es
sbb
jmp
inc
xchg
xor
imull
fdivrl
ficoms
jl
rolb
pop
sbb
scas
push
jns
xchg
pop
xchg
lret
fdivr
repz
lds
out
push
mov
xorl
or
icebp
or
add
popa
jbe
add
pop
sub
push
imul
lahf
jnp
jecxz
out
jle
push
or
mov
xchg
push
dec
test
or
xchg
sub
adc
lods
mov
sub
adc
mov
testl
mov
jno
and
mov
movsl
shrl
pop
lea
test
daa
stos
cmp
shrb
jge
xlat
testl
loop
loopne
push
scas
andl
jo
or
stc
or
jo
pop
mov
sub
nop
lahf
ljmp
xor
imul
jp
inc
leave
dec
cmpsb
je
jb
fcom
divb
ret
js
int3
xrelease
jecxz
cltd
aam
sbb
inc
cmp
cmpsb
test
pop
xchg
aad
sbb
dec
mov
jle
mov
aaa
stos
xchg
enter
int
adc
int
aaa
insb
sbb
inc
aaa
mov
cmp
xchg
mov
add
enter
repnz
aaa
jg
es
push
xor
lods
jg
and
insl
clc
inc
add
stc
ljmp
cmp
arpl
outsl
cmc
test
popa
arpl
test
call
lods
sbb
push
das
pushf
cli
int3
adc
sbb
xor
xchg
scas
fiaddl
jle
xor
loopne
dec
int
or
sbb
test
adc
in
sahf
out
scas
xchg
push
or
jbe
lock
pop
lahf
and
or
or
jae
pop
mov
imulb
sbb
mov
lret
add
or
addr16
aam
xor
push
sbb
lea
push
loop
notb
cmc
push
add
sahf
dec
jno
cwtl
dec
xchg
inc
add
jge
shlb
sbbl
shll
fimuls
mov
inc
cmp
cmp
mov
sub
pusha
repz
cld
scas
test
pop
insb
shll
movsl
aaa
mov
push
jno
cld
jl
loop
or
and
fs
cs
mov
test
scas
shrl
or
or
or
pusha
sbb
jle
leave
sub
mov
loope
es
dec
into
xor
push
xor
sub
xorl
fdiv
pushf
gs
fs
mov
inc
nop
inc
fnstcw
cwtl
ja
mov
test
mov
xor
jg
push
jns
fwait
xor
cwtl
mov
add
add
sub
and
xchg
pop
mov
out
hlt
adc
push
push
push
push
call
mov
mov
jmp
or
sbb
jmp
pop
stos
fs
sbb
stos
adc
sbb
dec
dec
cmp
push
jge
lods
jns
mov
arpl
fdivrs
sbb
aad
cli
insl
cmp
lods
pop
mov
int3
mov
push
loopne
ret
xchg
push
les
sbb
push
pusha
fs
mov
adc
mov
fistpll
add
mov
mov
nop
mov
mov
pop
sbb
std
out
adc
arpl
push
mov
sub
cmp
aaa
xchg
add
jne
add
pop
mov
inc
mov
roll
add
pop
cwtl
popa
cmp
push
xchg
insb
movsb
test
inc
mov
xchg
int
cs
test
scas
jno
imul
jo
mov
pop
inc
sub
cmc
out
and
add
cmpsb
add
pop
imul
clc
jb
fildll
xchg
icebp
out
or
repz
lds
sub
insb
rcr
stos
pop
fs
mov
jb
dec
cmc
mov
push
pop
test
push
scas
sub
cmpsl
sub
mov
loope
or
mov
adcb
loope
lods
les
jecxz
hlt
push
sbb
inc
mov
rol
and
jl
cltd
inc
cmpsb
mov
sub
cmp
lcall
pushf
lret
loop
mov
xchg
ss
push
das
mov
xchg
ds
scas
dec
jge
mov
mov
rorl
shll
dec
ds
xchg
inc
in
ss
lods
jmp
rclb
xchg
adc
inc
pushl
cmpsb
xchg
adc
and
sbb
inc
xchg
out
addl
dec
adc
shll
or
sbb
mov
sbb
or
js
shrb
jle
xor
inc
xchg
xchg
xor
xor
mov
outsl
xchg
cli
adc
icebp
scas
mov
dec
sbb
std
or
or
ljmp
test
sarb
mov
gs
ss
sbb
push
data16
inc
imulb
cmp
jno
xchg
push
mov
aaa
or
imul
aad
ss
xor
test
sbb
jns
xor
and
loope
hlt
or
xor
mov
fldt
js
and
daa
cmp
xchg
or
mov
aaa
xor
push
mov
adc
out
cmp
sbb
mov
fcompl
xchg
aas
lret
mov
push
aad
fistpl
push
loop
icebp
jle
test
andb
and
lret
xchg
test
mov
ss
lods
sub
jp
mov
xor
inc
sbb
fs
fisubs
and
fwait
dec
mov
orl
push
test
and
push
popa
in
rcrb
pop
pop
and
cmp
scas
pop
and
mov
mov
aaa
push
ljmp
dec
push
rdtsc
cmp
inc
cmp
subb
pusha
jmp
inc
dec
pushf
lea
movsl
mov
in
icebp
mov
and
add
or
xor
call
xchg
lds
mov
mov
imul
cwtl
pop
push
fwait
js
xchg
mov
add
call
add
add
and
or
ja
pop
rol
mov
hlt
fldenv
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
jmp
out
inc
jp
jp
sub
xchg
cmp
or
jl
cmp
sbb
mov
outsl
hlt
shll
jecxz
dec
adc
cmp
sbb
test
in
mov
clc
pushl
adc
cs
cs
rclb
or
pop
call
lods
mov
cmp
pop
adc
fwait
inc
mov
outsl
push
mov
jp
jecxz
push
jne
test
jl
pop
xchg
ret
or
sub
mov
mov
jb
in
adc
jb,pt
dec
sub
das
mov
bound
test
cmp
mov
fcompl
iret
cmc
test
int
icebp
cltd
stos
mov
test
aad
dec
push
sbb
insl
outsl
lcall
outsb
pop
popa
fwait
in
popa
lods
and
movsl
push
inc
push
dec
js
lods
repz
dec
je
jmp
dec
jle
fldt
nop
notb
scas
movsl
add
int3
lret
sbb
pop
mov
movsb
sbb
cmp
adc
add
aad
sbb
ret
or
js
xchg
pop
imul
mov
adc
mov
push
push
lcall
jbe
clc
cmp
push
inc
jg
xor
popa
sti
sbb
lret
daa
sub
cmpsb
inc
mov
and
movb
movsb
add
movsb
sub
in
jnp
adc
add
cmp
cwtl
xor
xchg
leave
addr16
jl
pop
testl
cwtl
lret
stos
sbb
dec
fcmovnbe
jnp
mov
stos
push
mov
inc
xchg
dec
inc
les
mov
lock
mov
xchg
jae
jge
sarl
jns
jo
mov
pop
push
ficompl
sub
adc
in
enter
jp
fisubs
or
mov
test
sbbb
xchg
xlat
or
mov
lcall
dec
mov
lret
loop
movsb
out
repz
pop
pop
orb
adc
xor
jno
jg
shlb
pop
stos
mov
push
jno
mov
push
in
pop
outsl
xchg
jne
xorb
xchg
push
sti
or
pop
rol
mov
jne
sub
gs
imul
aam
lds
gs
push
sahf
pop
lcall
sahf
dec
xchg
lret
clc
test
and
adc
cmp
jb
mov
jge
cmp
cmp
dec
leave
or
mov
pop
cmpsb
and
fisttps
loope
xor
mov
pop
mov
pop
js
cs
mov
mov
fidivl
cmp
mov
and
mov
inc
cmp
inc
dec
ss
inc
mov
or
sub
mov
movsl
adc
negb
in
shr
leave
sub
and
rorl
lcall
lds
mov
shl
pop
nop
jnp
je
jne
bound
gs
in
sti
int3
push
sbb
loopne
call
xchg
pop
sbb
and
jno
std
cmp
cmc
test
bound
js
xchg
and
push
lcall
ds
hlt
xor
adc
pop
lret
pop
aaa
test
or
sbb
sti
stos
xchg
decl
ret
lock
ds
inc
imul
popa
clc
fdivs
mov
mov
in
fildl
xor
icebp
adc
paddsw
xchg
test
mov
jnp
mov
mov
fcoms
pop
add
add
fimuls
icebp
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
jmp
mov
fcompl
stos
test
xor
sbb
or
inc
push
dec
xchg
xor
push
and
xchg
leave
xchg
dec
inc
shl
ss
lret
jle
mov
cmp
sub
sahf
xchg
pushf
cmp
minps
add
out
sbb
pop
shlb
jmp
sahf
lds
shr
xchg
jne
mov
xor
out
test
jne
lods
sub
popf
dec
ja
push
aas
jmp
push
imul
sub
inc
mov
jg
xor
std
mov
mov
cmp
nop
sbb
sbb
or
sti
cs
pop
mov
inc
or
inc
or
xchg
adc
test
cli
outsb
inc
xor
jae
inc
jno
stos
xchg
mov
mov
jg
into
xchg
lods
jno
cmc
xchg
or
shlb
cmp
adc
leave
xchg
movsb
jnp
lahf
xchg
push
cmp
lea
cmp
mov
jb
mov
repz
mov
xor
inc
push
iret
mov
mov
mov
sub
jnp
inc
lds
adc
cmc
add
jp
cs
arpl
adc
mov
push
and
pop
rol
jmp
out
fisttpll
inc
sbb
sub
and
fildll
pop
dec
xchg
sbb
lods
subb
mul
mov
or
out
jecxz
xchg
sbb
cmpsl
sti
or
and
iret
xor
jne
shlb
jns
mov
mov
das
hlt
pop
xor
iret
test
jecxz
xor
mov
jecxz
test
cmp
mov
and
fists
fs
in
mov
push
popa
xchg
sbb
icebp
xchg
movsb
andl
fsubs
movsb
addl
fcmovb
adc
and
xchg
cmpsb
nop
ds
icebp
sar
pop
jb
cmp
stos
ret
mov
inc
leave
dec
and
xchg
jecxz
pop
add
int3
ljmp
push
movsl
pushf
test
xchg
mov
fstl
sarb
test
das
pop
test
pop
xor
mov
xchg
insb
popl
cwtl
scas
xor
jno
test
cvtdq2ps
int
xor
out
aas
gs
mov
cmpsl
mov
dec
adc
lret
int
dec
push
inc
pop
lahf
mov
mov
cld
jmp
jbe
adc
mov
cmpl
ljmp
push
ror
adc
cltd
je
inc
push
mov
fsubr
lahf
sub
rorl
cmc
jnp
loope
mov
push
add
or
loope
clc
xchg
pop
add
xor
xchg
adc
push
es
rclb
insb
fwait
sbb
mov
out
sbb
js
jmp
push
arpl
lds
jne
fcompl
jge
je
push
push
jno
cmp
lds
and
adc
pop
xchg
mov
addr16
fisubl
dec
popa
into
repnz
add
fwait
cmp
jmp
xlat
adc
adc
mov
jle
cmp
or
dec
sub
pusha
in
pop
xor
mov
or
popa
movsb
aas
mov
pop
mov
sub
mov
add
arpl
jo
aam
pop
popf
shrb
mov
les
push
adc
enter
or
pop
ret
out
xor
sub
test
int3
bound
jne
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jnp
xlat
dec
sarl
jnp
add
lds
mov
sbb
sbb
adc
sbb
push
xor
jae
jo
push
inc
add
adc
fistpl
add
subb
xchg
test
mov
mov
adc
lret
sub
out
imul
mov
in
jbe
jno
lods
add
jge
lods
popf
fwait
out
outsb
xchg
dec
xor
arpl
jne
xchg
push
ss
popf
jl
or
cmpsl
mov
push
jnp
or
addr16
mov
mov
xchg
rclb
call
cld
lret
stos
and
mov
inc
jmp
bnd
xchg
daa
jge
mov
sub
xor
and
icebp
fdivs
mov
mov
inc
lret
mov
cmp
pop
cmp
in
lock
xor
mov
mov
xchg
inc
enter
aam
mov
test
negl
lea
jns,pn
adc
lock
xchg
not
std
mov
movsb
cmp
push
sbb
sub
xor
popf
xchg
push
push
or
inc
cmc
fs
fcomip
pushf
or
nop
out
fyl2xp1
dec
inc
cmp
add
pushl
aad
xlat
mov
iret
lcall
adc
add
xchg
sub
movsl
adc
mov
arpl
add
add
fists
pop
idiv
vldmxcsr
jnp
dec
icebp
ds
push
ror
call
enter
pop
add
and
incb
mov
lock
sub
rcll
fisubl
adc
push
fstl
shrl
pusha
outsl
out
mov
subb
sahf
push
sbb
jmp
enter
mov
sahf
mov
sarl
sbb
pop
fsub
xor
iret
into
test
and
fistl
mov
inc
sete
fisubrs
xchg
sub
lods
ds
cmp
mov
dec
inc
dec
cwtl
iret
inc
pop
clc
ficoml
push
jg
fsubl
je
jb
xor
mov
xchg
adc
xchg
sbb
or
xchg
cs
xchg
inc
xor
inc
out
adc
inc
aam
jnp
xchg
shll
lret
add
movl
pop
loop
les
push
adc
dec
push
out
jl
fcomps
or
mov
cmp
xchg
imul
push
clc
and
repz
int
sbb
mov
xchg
cmp
push
jo
popa
xor
ret
push
out
jb
jns
out
push
mov
fstps
out
jns
push
or
jp
mov
xchg
xchg
jno
dec
mov
test
sbb
fwait
or
into
sub
js
push
push
roll
fisttpll
push
push
add
cmp
data16
jbe
nop
and
int3
enter
cmc
pop
sbb
cmp
sti
xor
or
pop
mov
dec
push
dec
pop
and
adc
sub
mov
inc
gs
pop
mov
sub
mov
jg
cmp
sbb
push
mov
pusha
inc
rcrb
lret
filds
out
stc
sub
mov
clc
mov
mov
mov
push
scas
movsl
in
shr
in
js
les
mov
in
push
and
xchg
lret
ss
pop
data16
jecxz
pop
cmp
mov
clc
add
add
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
jmp
push
mov
dec
sub
ljmp
xchg
sbb
adc
sbb
cmpsb
mov
pop
push
cmpl
mov
pop
lret
js
xor
fldenv
push
jo
jno
and
push
or
mov
hlt
jg
or
lret
test
les
ja
in
or
stc
sbb
hlt
ja
lds
pop
ja
loope
cmpsl
jnp
ficoms
jp
orl
and
cmp
xor
lret
mov
push
jmp
cmp
xor
scas
mov
or
rcrb
lods
jae
adc
notl
shll
std
cmc
jno
rorb
les
cmp
add
addr16
sub
or
mov
sbbl
and
adc
mov
push
aaa
imulb
lret
jmp
adc
or
or
inc
inc
push
insb
inc
and
xor
push
inc
pusha
jle
add
clc
js
mov
xchg
ret
jg
pushl
imul
xor
andl
arpl
push
sar
add
or
mov
lock
cmp
push
cli
mov
lcall
js
loope
popa
or
sbb
adc
mov
sub
in
adc
push
dec
xor
pop
add
cltd
popf
ds
stos
pop
rcrb
shll
movsb
lods
int3
pushf
stos
sti
cld
test
mov
inc
xor
mov
sbb
mov
ret
dec
sbb
inc
lods
scas
in
jo
pop
shrb
pop
loopne
lret
hlt
ret
mov
sub
mov
test
les
add
pop
dec
movsl
dec
adc
leave
mov
hlt
xchg
jne
outsl
in
ss
xchg
xor
enter
aad
dec
popf
add
jno
mov
pushf
sub
xchg
les
and
popa
sub
outsl
push
mov
jne
ret
push
sub
fwait
xor
scas
outsb
cmp
dec
push
es
iret
or
jge
in
push
nop
clc
inc
add
cld
or
rol
insl
out
int
add
rorb
popf
adc
je
inc
repz
mov
mov
dec
gs
shll
lret
addr16
pushf
sti
arpl
lahf
scas
popa
jo
lods
imul
dec
ljmp
into
loopne
out
test
and
rol
pop
sbb
repz
adc
inc
lods
insl
sub
xor
sub
pop
push
jne
push
outsl
decl
repz
imul
jecxz
and
sbb
pop
fists
ret
ret
sbb
mov
pop
mov
sub
cwtl
ja
inc
lods
sub
pop
bound
shrb
jecxz
fs
adc
rorb
push
dec
jge
mov
pop
mov
rcl
leave
fnstsw
adc
push
stos
jmp
xchg
subl
adc
enter
pop
cwtl
notl
mov
xor
push
stc
xor
loopne
pop
sub
sbb
dec
popa
das
mov
addr16
and
stc
cwtl
enter
cwtl
shrl
xchg
ss
enter
out
jb
repz
ror
fsubs
das
lsl
lret
mov
cmpsl
shlb
sub
dec
push
jecxz
pop
add
in
pop
outsl
rcr
push
test
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
jmp
lret
mov
pop
inc
repnz
jmp
sbb
rclb
sbb
sub
idivb
iret
jno
and
outsl
jae
push
xor
mov
mov
pop
fdivs
ret
inc
or
loope
mov
mov
shlb
pushf
cmpsl
push
stos
jns
xor
mov
xor
lds
cmp
int
insl
rclb
in
add
mov
std
adc
push
or
enter
mov
push
xor
or
test
sub
jbe
bnd
sbb
push
inc
jno
cmp
ss
fmuls
call
ror
testb
xchg
jmp
adc
jmp
fdiv
into
frstor
xchg
mov
fwait
mov
loopne,pn
jae
aam
mov
inc
mov
xchg
jmp
jl
mov
fisubl
xchg
out
stc
stos
mov
jnp
mov
cli
adcb
ss
sahf
scas
fsub
fsubrs
int3
leave
js
mov
sahf
into
jbe
bound
movsb
pop
sub
and
pop
push
test
shll
pop
jp
dec
sub
aam
mov
inc
mov
xchg
dec
test
das
pop
inc
daa
lock
stos
stos
jg
mov
std
mov
mov
lret
sti
outsl
out
scas
pop
out
inc
subb
mov
adc
dec
hlt
xrstors
int
add
enter
shrb
movsl
pop
jg
and
xor
dec
jae
bound
push
push
sub
dec
out
mov
mov
sti
xchg
push
sbbl
sbb
out
into
inc
les
xchg
dec
and
fists
andb
addr16
dec
adc
gs
in
pop
test
mov
xchg
lahf
repnz
mov
iret
sbb
jne
cmp
xor
add
int3
inc
adc
ss
lea
sub
or
gs
sub
pop
xor
cmpsl
je
test
mov
and
xchg
enter
jge
bound
loopne
stos
loopne
scas
jns
adc
mov
adc
mov
jg
cld
fidivl
cmp
and
mov
inc
callw
out
cmp
mov
pusha
sbb
jb
sbb
jno
out
jb
ret
xchg
aad
cmp
jp
adc
sbb
outsb
loope
mov
cs
xchg
out
pop
xchg
pop
in
fwait
or
mov
xchg
gs
mov
pop
jg
inc
cmp
jle
jp
add
fists
rcrb
jl
cwtl
out
sub
rcll
insl
daa
test
mov
nop
shrl
mov
fisttpll
aaa
jecxz
cmpb
mov
cvtpi2ps
std
mov
or
adc
lret
mov
xchg
test
insl
lahf
lcall
ret
jb
std
fadds
and
ja
dec
leave
jp
ds
test
adc
subl
jl,pn
aam
sbb
dec
xchg
out
hlt
enter
stc
stos
stos
jle
push
bound
inc
test
nop
lock
test
and
rorl
sbb
push
out
jne
aas
pop
in
mov
or
lods
adc
in
cwtl
arpl
dec
lds
inc
pop
std
ljmp
fcoml
xchg
pop
sub
mov
test
cli
cmp
xor
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
jmp
sbb
cli
sbb
lret
mov
popa
jge
inc
push
push
sbb
ds
das
add
xchg
or
xchg
and
dec
mov
xchg
xor
fdivs
leave
int
scas
lret
inc
xchg
insb
jbe
inc
xchg
or
aad
sbb
sarl
add
sub
mov
cmp
je
mov
jns
sahf
fsub
in
mov
repnz
xor
push
mov
out
xchg
and
mov
es
shl
lock
or
dec
xchg
mov
inc
inc
cld
xchg
repz
jno
cmp
dec
pop
lea
mov
mov
test
jmp
mov
dec
adc
jnp
lret
std
sbb
call
xchg
push
and
add
cli
lds
loop
lods
push
inc
cmpsl
aad
jecxz
insl
in
cmc
push
out
lahf
mov
mov
mov
pop
addr16
aaa
xlat
loop
push
lds
mov
mov
jmp
pop
add
insl
enter
xchg
es
dec
std
sub
mov
adc
xchg
out
mov
clc
or
adc
push
sbb
xchg
xchg
cmp
fbld
in
scas
enter
cmpsb
xchg
scas
js
ss
cmp
add
cld
cmp
hlt
mov
jnp
je
int3
xchg
and
insb
adc
mov
cmp
testb
subl
cmpsl
aas
sbb
or
sbb
call
popa
insl
cmp
ret
aad
jge
bound
loop
stc
add
jno
sti
jb
arpl
lods
outsl
push
dec
lret
stos
ds
sub
or
ret
loope
push
inc
and
into
inc
in
jmp
clc
andb
and
xchg
and
mov
jnp
adc
enter
out
test
mov
dec
stos
je
test
cmp
stos
inc
test
repnz
ja
dec
push
jbe
daa
or
lods
das
mov
and
out
mov
lds
test
pop
and
add
adc
and
push
in
lcall
cwtl
mov
xchg
dec
xchg
jne
push
add
push
test
hlt
jge
dec
js
dec
push
adc
rcrl
jns
ds
or
sbb
lods
pop
pop
lahf
orb
hlt
cs
sub
add
mov
mov
pop
outsb
jge
adc
test
test
mov
or
xor
repz
repnz
nop
lods
push
inc
out
in
sub
nop
adc
addr16
xchg
fucomip
jnp
lcall
cmp
lcall
mov
rcrl
xor
ret
and
or
ret
add
push
inc
xchg
inc
test
test
mov
imul
pop
cmc
cmp
mov
lock
sub
adc
inc
push
popf
jb
aas
icebp
shlb
hlt
inc
mov
pop
mov
push
or
and
call
negl
xor
mov
andb
pusha
mov
add
xchg
inc
rcrl
inc
scas
cmpsl
insl
stos
bound
aas
rcrb
cmp
addr16
mov
push
loope
shll
adc
fiaddl
add
xor
push
lret
ss
pop
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
jmp
mov
aas
sbb
sub
jo
push
push
sbb
loope
xor
dec
mov
sbb
and
xchg
xor
int3
popf
in
cmp
notb
iret
mov
sti
movsl
addr16
or
in
and
or
stc
cli
inc
scas
xchg
sahf
faddl
push
js
int3
lcall
jmp
push
lods
sarb
dec
xor
scas
ds
mov
inc
jno
sub
ret
repz
addr16
mov
jnp
inc
mov
sbb
xor
dec
leave
int
cwtl
mov
push
arpl
jmp
add
pop
dec
mov
sub
filds
iret
xlat
call
mov
dec
pop
and
loope
loope
imul
gs
or
fstp
jg
rcrl
or
into
sti
jae
insl
xchg
mov
add
push
movsb
mov
jbe
lret
push
jno
pop
adc
imul
mov
mov
aaa
dec
fisttpll
cmp
inc
rclb
test
push
cmp
dec
loop
popa
cld
push
iret
ret
insb
dec
aad
fildl
or
xchg
mov
mov
jl
test
xor
dec
test
jle
sti
xor
dec
mov
adc
out
cmp
stc
add
inc
fisttpll
daa
or
fstpl
stos
repz
pop
call
cmc
xlat
xlat
jmp
add
fidivs
loopne
shl
rcrb
lock
or
test
rol
lret
insl
inc
jae
hlt
push
cmp
aaa
push
fiaddl
inc
jg
jg
xchg
sub
sub
xor
popa
fstps
je
push
in
and
inc
cwtl
ret
fstl
imul
in
or
inc
add
inc
and
add
shrb
sub
fucomip
cmpsl
and
or
mov
mov
nop
jb
jl
mov
stos
ret
popf
mov
imul
push
adc
movsb
fs
adc
sahf
loope
das
insb
add
add
xchg
cmp
mull
mov
or
push
fs
push
and
adc
pop
inc
mov
fwait
cli
hlt
incb
xor
xorl
inc
movsb
cmp
add
and
sarl
mov
xchg
cld
jo
nop
fldenv
imul
xor
fstps
mov
bound
arpl
lea
inc
jno
xor
mov
push
gs
insb
jbe
fs
sbb
dec
loop
daa
mov
dec
xchg
and
or
cltd
arpl
iret
daa
sbbl
mov
jns
inc
xchg
dec
enter
add
jbe
int
pop
jnp
in
or
jo
loopne
mov
dec
jmp
ret
faddl
mov
ljmp
dec
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
jmp
pop
pushf
lds
pop
pushf
push
cwtl
pop
jo
jb
stos
pop
or
sbb
jb
daa
out
cmpsl
and
iret
jp
test
insb
cwtl
insb
xchg
adc
aam
cmp
push
cmp
xor
incb
mov
dec
lret
sbb
push
ret
mov
push
scas
lods
mov
push
jns
jns
or
in
arpl
push
sti
sub
pop
dec
jle
mov
cwtl
bound
icebp
mov
push
push
sbb
lea
bound
int
jmp
push
add
enter
mov
into
mov
xor
push
sbb
mov
xchg
fcoml
ds
push
pop
aaa
inc
bound
les
lcall
pop
rcr
lods
ror
push
push
mov
stos
jo
ds
mov
int3
push
sub
add
inc
rorl
or
js
sbbb
leave
imul
cmpsb
xor
and
cwtl
jmp
lret
lds
lock
or
pop
pop
sbb
mov
cmp
jnp
pop
xchg
add
jl
pusha
subl
inc
pop
inc
popf
sbb
jo
mov
xchg
xchg
fsubrs
add
pop
movsl
ss
insl
arpl
and
pop
pop
add
lahf
mov
inc
dec
ret
cmp
add
add
enter
repz
and
icebp
or
sbb
inc
jb
jnp
cmpsb
and
bound
pop
or
insb
sti
lods
lcall
test
mov
or
neg
stc
out
add
push
aas
es
mov
daa
mov
call
fidivl
loope
sub
out
sbb
pop
lock
popa
and
in
repz
mov
in
mov
add
add
dec
mov
clc
jb
fbstp
push
idivb
aas
leave
sub
insl
pusha
lods
mov
testl
mov
sar
inc
cmpsl
addr16
aaa
mov
hlt
sub
test
fnstenv
fs
nop
mov
insw
out
loop
pop
fisttps
outsl
jno
mov
push
and
cmp
inc
gs
adc
add
les
out
outsl
loop
or
hlt
out
add
inc
enter
bound
fcmovb
daa
push
mov
jno
xor
jbe
mov
push
or
pop
in
xchg
out
scas
fs
in
popf
push
push
pusha
xchg
xlat
scas
pop
mov
push
enter
sbb
or
xor
in
inc
fists
rclb
push
inc
ret
push
cmp
mov
jns
jne
subb
pop
mov
movl
cwtl
sub
lea
popf
jecxz
dec
cmp
and
into
test
mov
js
fwait
movsb
push
out
mov
adc
mov
enter
lock
push
sbb
dec
mov
arpl
scas
sarb
inc
and
sti
cmpsb
pusha
push
ljmp
inc
loopne
rorb
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
xor
push
push
push
orl
mov
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
pushl
pushl
pushl
pushl
push
push
pushl
call
mov
xor
or
sub
imul
movzwl
and
xorl
sbb
adc
mov
shrd
shr
mov
and
mov
mov
xor
xor
xor
xor
xor
or
sub
or
mov
xor
adc
or
mov
not
mov
sbb
shl
mov
shrd
adc
xor
shr
sbb
mov
mov
mov
sub
and
mov
cmpl
notl
movl
movl
jmp
movl
cmpl
jge
pushl
push
push
call
addl
inc
add
sbbl
mov
adc
xor
xor
add
or
cmpl
movl
movl
jmp
mov
mov
cmpl
jl
push
push
call
sub
sbb
and
mov
and
orl
mov
mov
sub
xor
mov
cmpl
mov
mov
jmp
mov
cmpl
jbe
push
push
push
push
push
pushl
push
push
call
mov
mov
sub
sub
add
or
add
or
and
mov
xor
mov
or
mov
and
mov
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
ja
pushl
push
pushl
pushl
call
or
or
adc
and
sbb
add
sbb
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
mov
cmpl
jg
push
push
call
and
sub
xor
xor
sbb
or
sbbl
shl
xor
adc
shld
shl
mov
mov
orl
mov
mov
xorl
xor
subl
xor
movl
movl
movl
movl
mov
movl
cmp
movl
jne
movl
cmp
je
mov
adc
mov
xor
shld
andl
shl
xor
cmpl
not
mov
mov
jmp
movl
movl
cmpl
je
push
push
call
orl
or
subl
movl
mov
add
mov
or
mov
or
mov
xor
mov
mov
cmp
jne
cmp
movl
je
cmpl
movl
movzwl
not
jmp
mov
cmpl
jne
push
push
pushl
push
pushl
pushl
push
pushl
push
call
xor
sbb
subl
sub
add
dec
and
mov
and
mov
push
pop
andl
xor
movzbl
add
shl
cmpl
mov
mov
movl
mov
jmp
movl
movl
cmpl
jg
push
call
add
neg
movl
and
and
movzwl
adc
mov
andl
xor
subl
shr
or
cmpl
movl
mov
movzwl
jmp
not
mov
cmpl
jg
pushl
pushl
call
adc
orl
mov
sub
addl
dec
mov
mov
and
mov
mov
mov
xor
mov
orl
push
cmpl
movl
movl
jmp
movl
cmpl
jle
pushl
call
xorl
subl
sbbl
andl
xorl
pop
orl
sub
mov
add
mov
mov
mov
sbb
lea
mov
and
mov
mov
xor
xor
subl
shr
andl
shl
sbbl
or
orl
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
jmp
sbb
lods
sbb
xor
cmp
xchg
jo
add
sbb
fucomip
cs
das
mov
add
dec
cli
inc
movsb
shlb
lock
lcall
mov
fidivrs
icebp
mov
mov
or
aaa
scas
xchg
call
cmpsl
xor
dec
push
popa
push
lock
in
push
and
sti
push
shrl
nop
pop
nop
adcb
jge
xchg
add
in
sub
cmp
sbb
jnp
jo
sar
loop
mov
movsl
and
add
fmul
ljmp
loope
dec
sbb
cmp
add
mov
jecxz
imul
hlt
push
push
push
insb
test
enter
xor
mov
or
adc
add
cltd
lret
xchg
sahf
lods
ss
sbb
push
in
pusha
les
arpl
adc
cmp
adc
push
xor
xchg
arpl
movsb
ds
scas
or
icebp
es
mov
shll
nop
ds
data16
test
divl
push
mov
ret
or
scas
shll
hlt
dec
and
repz
mov
lea
shr
js
fcomps
mov
test
aaa
mov
push
dec
mov
push
cmp
cwtl
fsubrl
jl
cmp
pop
nop
lcall
mov
lret
popl
and
lock
mov
jecxz
dec
js
mov
jmp
pop
fcompl
push
test
dec
sbb
jge
setp
jg
add
gs
adc
fmulp
stos
ss
dec
fadds
arpl
shl
addb
sbb
mov
push
test
pop
mov
data16
pop
stc
mov
mov
cmp
xchg
xor
repz
add
jg
cmpsb
loopne
shrl
xchg
jbe
imul
cwtl
fidivrs
push
xor
cwtl
sbb
push
pop
lods
outsb
ljmp
sbb
hlt
push
jp
and
mov
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
out
mov
dec
xchg
fistps
mov
fwait
adc
sbb
inc
test
sbb
mov
mov
sbb
or
xchg
mov
sbb
sbb
push
sub
ret
mov
scas
in
faddl
es
pop
test
sub
cwtl
push
je
xchg
sti
or
test
xchg
orb
imul
and
fdiv
xchg
jno
mov
lcall
lahf
js
aas
dec
dec
in
sar
or
mov
testb
popa
lods
es
and
filds
jne
sti
imul
pop
int3
mov
push
jae
push
and
mov
push
push
and
iret
push
jge
shrl
inc
imul
pop
or
inc
jmp
dec
ss
mov
shll
shl
ret
arpl
push
stc
sbb
sub
pop
adc
sbb
or
mov
aas
xor
lahf
sbb
push
pusha
cwtl
jl
pop
adcb
mov
arpl
adc
mov
mov
dec
pop
lock
lret
rorb
dec
mov
adc
adcb
jb
cmc
data16
cmp
les
add
lock
or
mov
jnp
es
xor
sbb
push
mov
lods
std
fs
sbb
lret
or
or
mov
daa
jg
mov
pop
pop
jbe
aas
adc
aas
insl
mov
mov
xchg
sbb
sbb
inc
int3
mov
mov
ret
xor
sub
xorb
mov
aas
sahf
inc
and
or
jno
mov
mov
dec
bound
mov
int3
jns
mov
push
adc
fisttpll
out
dec
jmp
lods
roll
lea
dec
add
lods
push
push
outsb
iret
sub
ds
inc
cmpsl
movb
out
andl
inc
stos
in
xchg
sarb
iret
shl
mov
adc
mov
sbb
lods
out
nop
xor
jge
in
mov
inc
push
mov
mov
shrd
shr
mov
mov
xor
jmp
mov
sbb
mov
stc
clc
push
sbb
xchg
adc
mov
call
jp
xchg
xchg
add
and
insb
dec
mov
mov
shl
movsl
lds
dec
sti
or
shll
test
hlt
sti
sbb
or
add
dec
aad
enter
enter
scas
cmpsb
leave
xor
mov
lahf
lret
into
mov
shlb
sbb
ss
mov
pop
popa
inc
lcall
lret
movsb
lock
add
and
jne
inc
push
scas
jecxz
decl
add
push
movhps
or
mov
daa
into
or
jns
sbb
dec
in
out
sub
popa
int
add
out
inc
stos
jns
subb
test
shrl
imul
je
imul
arpl
jno
aad
aas
lock
lret
ss
fwait
clc
int
shl
fld
scas
popf
lret
add
fwait
jb
mov
cmp
daa
add
xchg
fnsave
push
lods
dec
rol
rclb
mov
shrb
mov
fwait
ds
mov
adc
add
test
stos
adc
push
mov
add
and
pop
faddl
insl
fidivrs
add
lahf
adc
jno
adc
jge
out
jecxz
and
add
shr
mov
call
xor
mov
movsl
xchg
add
sti
cwtl
loopne
pop
movb
dec
mov
adc
mov
jmp
jp
pop
cmp
cmp
push
ret
aaa
lret
sbb
push
outsb
xchg
mov
mov
subb
mov
sub
pop
and
sub
mov
popa
lea
mov
in
data16
or
jbe
push
mov
in
aad
shl
cltd
rorl
jg
incb
rcll
test
jge
ret
or
lods
sbb
test
adc
and
jle
lea
push
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
or
mov
mov
jne
mov
xorl
mul
ret
subl
push
sbbl
mul
addl
mov
xor
add
mov
adc
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
jmp
dec
jbe
imulb
dec
sub
push
mov
stos
push
stos
jp
push
sbb
adc
sbb
xchg
adc
test
add
mov
mov
loopne
jbe
lret
lods
pop
jno
cmp
pop
sub
cld
aas
lret
or
outsb
cwtl
ret
pop
dec
arpl
lahf
fs
mov
add
add
sub
and
in
aam
pushf
mov
xor
stos
xchg
mov
cli
jmp
xchg
test
jmp
imul
mov
xchg
push
mov
jns
fs
xor
rorb
dec
jae
jmp
lods
or
sub
addb
jbe
icebp
dec
hlt
sbb
jle
inc
pusha
jbe
push
lar
add
push
cwtl
jo
shl
sub
sbb
bound
repnz
mov
dec
jns
popa
sbb
pop
fsub
sbb
bound
int3
dec
cltd
loopne
lret
rcrb
jo
test
sub
aad
out
cmp
cwtl
cmp
hlt
cmp
mov
cmp
movsl
divl
and
fldcw
pop
sub
test
adc
push
mov
mov
and
addr16
mov
mov
sub
imul
cs
cmp
shlb
mov
sti
cs
push
push
scas
lcall
jle
lods
sbb
add
sbb
dec
mov
xchg
mov
aas
fs
push
xchg
jecxz
inc
push
dec
sahf
out
int
xor
out
mov
xchg
or
sbb
sub
pop
shrb
or
and
mov
lock
das
jp
in
cmp
les
lods
mov
mov
sub
sub
subb
xchg
pop
iret
fisubrl
adc
adc
pusha
int3
cmp
fcompl
shld
notl
xchg
cmpsl
cld
bound
mov
mov
xchg
inc
test
jne
jl
cs
flds
xor
aas
aad
mov
shr
adc
jecxz
lahf
cmp
popf
jne
or
sub
clc
mov
mov
inc
or
lahf
loop
scas
outsb
xchg
movsb
inc
out
test
add
and
and
stos
mov
jno
mov
not
shld
idivb
lock
dec
cmp
jle
mov
aam
dec
gs
repnz
test
xor
dec
jl
fsubrs
pop
and
add
and
loope
aad
fldl
je
mov
sbb
sub
xchg
push
mov
daa
cs
int3
mov
shr
mov
pushf
and
inc
dec
xchg
mov
lds
mov
and
out
adc
mov
lds
pushf
sbb
mov
jo
clc
inc
lods
aas
lret
rcrl
mov
cmp
or
icebp
mov
inc
lock
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
jmp
in
lret
repnz
pushf
pop
stos
movl
inc
out
push
sbb
adc
sbb
mov
adc
dec
andl
dec
sahf
std
in
shrb
sub
jb
jnp
pusha
in
mov
inc
scas
mov
ja
sub
sub
addr16
mov
insl
test
ds
pop
sbb
xchg
pop
or
and
lock
lods
jecxz
jl
xchg
loop
sahf
test
insb
int
inc
jl
xchg
inc
mov
dec
or
aam
enter
out
pop
push
sub
sbb
popf
outsb
xor
cmp
roll
xchg
loop
pop
inc
and
cmp
ja
je
add
mov
jo
xchg
test
sub
int3
adcl
xchg
outsb
inc
rcrl
popf
in
add
jmp
dec
enter
jns
mov
pop
inc
jmp
cwtl
cs
imul
divl
or
adc
js
mov
mov
mov
inc
inc
aaa
and
lods
fistps
icebp
andb
xchg
cmp
cmp
pusha
xchg
lcall
pop
fisubrl
sbb
inc
xor
dec
mov
xor
inc
add
sbb
cli
xchg
push
clc
mov
mov
push
mov
and
enter
and
rclb
pop
scas
test
xchg
popa
push
fiaddl
stos
push
popa
cmpsl
and
pusha
push
xchg
cli
ret
mov
xchg
mov
mov
lods
sub
mov
sub
or
pop
repz
lahf
add
push
cmpsb
xchg
outsl
imul
lret
dec
daa
shlb
in
in
shl
cmp
aaa
inc
add
push
jge
ja
dec
loopne
in
mov
into
jmp
mov
sahf
cmp
adc
xor
adc
sbb
icebp
jmp
add
mov
lods
mov
pop
sbb
or
outsl
sti
sub
inc
pop
mov
cmp
aam
sub
out
int3
fldl
in
mov
push
push
xor
lods
gs
pop
jnp
mov
je
dec
pop
push
cmp
inc
push
jecxz
insb
cmp
jbe
pop
dec
pop
mov
pusha
js
ljmp
sub
and
xchg
push
adc
mov
cmp
inc
fcomi
xchg
push
add
loopne
jmp
jecxz
xchg
clc
fistpll
daa
pop
pushf
mov
sub
fstpt
in
mov
push
add
add
xor
mov
movsl
rclb
mov
pop
sbb
outsl
ljmp
inc
mov
fcompl
and
mov
dec
stos
ss
push
add
mov
rorb
imul
jnp
test
mov
mov
xlat
cmp
mov
xor
adc
fs
es
cmpsb
outsl
or
jns
xchg
dec
repnz
adc
mov
rorb
inc
ja
pop
pop
fstl
std
in
aaa
fsubrl
aad
adc
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
lea
push
call
pushl
pushl
call
push
call
mov
subl
jmp
iret
and
inc
sbb
and
fnstcw
out
sbb
push
sub
aad
mov
cmp
fsts
cli
movsl
add
jg
push
sti
xchg
jecxz
mov
outsb
adc
ret
mov
shll
imul
adc
jle
popa
ret
lea
fbstp
fbstp
fcmove
aaa
and
add
push
nop
ja
fs
addl
sub
int
imul
enter
sub
mov
dec
mov
xchg
dec
dec
in
arpl
push
mov
fistpll
cmp
jns
adc
enter
icebp
sti
pop
xchg
bound
js
inc
push
dec
push
adc
cs
daa
adc
popa
and
pop
insb
fdivr
jne
call
movsb
das
cmpsb
or
lock
inc
scas
jbe
in
ret
push
xor
inc
ljmp
jns
cmp
dec
inc
daa
loope
xchg
or
cs
and
push
frstor
orl
cmc
aaa
test
aad
aad
cmp
testb
xchg
cwtl
mov
lds
add
mov
dec
mov
roll
mov
adc
cwtl
pop
rcll
xchg
pmaxsw
popaw
push
ret
cmp
inc
in
xchg
mov
xchg
inc
test
mov
sbb
mov
sub
dec
lock
and
fs
pop
leave
cmpsb
add
int
cmp
stc
add
test
push
fadd
pop
roll
jecxz
sub
cld
sti
xchg
fidivs
jge
push
or
jne
mov
popa
cmpsb
adc
jmp
sbb
popf
insb
popf
jecxz
jp
adc
jmp
popl
inc
rorl
paddsb
fsubrs
add
nop
xchg
xchg
pop
sbb
jg
in
jae
dec
iret
int
mov
lods
adc
stos
pop
shll
rcrl
loop
dec
mov
mov
pop
stos
pop
scas
stos
lods
sbb
mov
out
mov
jle
cmpsb
mov
sub
das
xor
nop
int
sbb
mov
ret
sub
adc
jle
cmp
or
adc
adc
mov
xchg
mov
mov
pushf
out
push
xchg
jne
push
ret
mov
push
lods
add
sub
mov
test
stos
cmp
ret
mov
jmp
rclb
dec
cmp
mov
add
lock
dec
adc
xchg
sub
icebp
or
jge
test
mov
stos
rcr
stos
pop
ljmp
mov
xchg
xlat
inc
sbb
add
and
or
test
data16
popf
add
mov
mov
mov
cmp
jo
sti
stos
test
shll
fs
sbb
dec
in
adc
push
xor
mov
xchg
push
pop
test
imul
sbb
sub
fdivrs
or
xchg
adc
pop
lds
add
scas
or
jge
push
pop
xor
aad
jns
push
aam
call
sbb
loope
insl
rolb
fnstcw
pop
xor
xlat
pop
or
cmp
inc
xor
push
pushf
push
jb
push
xchg
push
lahf
lds
call
in
aas
pusha
mov
test
fbld
cmp
out
push
fadds
leave
push
outsl
sbb
xchg
sub
andl
pushl
orl
call
adc
mov
add
movl
movl
addl
mov
mov
mov
and
mov
subl
xor
xorl
imul
and
sub
xorl
mov
xorl
movl
movl
adcl
movl
add
movl
xor
add
add
mov
mov
addl
sub
and
mov
and
mov
sbbl
xor
sub
imul
mov
mov
cmp
movl
jne
and
movl
movl
xor
movl
movl
add
pushl
cmpl
mov
mov
mov
jmp
movl
cmpl
je
pushl
pushl
push
pushl
call
not
sub
or
mov
mov
and
sbb
add
add
movl
xor
movl
movl
negl
jmp
xor
fwait
clc
dec
arpl
loope
sbb
add
orl
push
mov
gs
das
in
into
sbb
push
jb
xchg
mov
clc
sub
xor
hlt
je
stos
aas
out
ret
dec
subl
std
negl
jle
scas
ds
lcall
dec
popf
mov
push
inc
fwait
mov
cmp
pop
test
sub
int3
nop
bnd
mov
rcrl
dec
mov
add
out
xor
mov
mov
ss
insb
hlt
std
push
push
sbb
in
pop
in
push
sti
dec
out
jge
ds
xchg
mov
fistpl
loop
mov
out
stos
xchg
cmc
jecxz
aaa
cli
bound
ret
dec
call
imul
xor
pop
inc
addr16
pop
ret
bound
sahf
and
pop
dec
neg
or
clc
out
mov
cld
jmp
loope
push
adc
aas
mov
out
xor
fimuls
rcll
sbb
aaa
xchg
out
push
sub
pop
xlat
and
out
not
imul
es
and
out
fdivl
lea
jns
cwtl
cmp
xor
fcoml
mov
or
mov
push
and
pop
dec
jae
pop
aad
outsl
sub
loopne
xchg
push
sub
es
jmp
mov
dec
out
dec
cmp
pusha
mov
imul
and
fldenv
mov
pop
jns
sbb
pop
jb
imull
inc
repz
mov
dec
js
insb
adc
adc
cltd
add
sbb
daa
das
push
lcall
jmp
push
inc
sub
pop
in
xchg
sbb
cmp
mov
incl
in
mov
dec
lods
xor
jns
adc
adc
in
fsub
xlat
pop
xchg
les
push
repnz
jp
mov
imul
pop
aaa
xor
add
sub
and
inc
push
cwtl
into
xlat
mov
scas
cmp
test
aas
shll
mov
dec
mov
jns
mov
sub
rcl
insl
mov
pop
xor
and
adc
jae
loope
xlat
es
fisttps
ljmp
or
mov
fs
mov
sbb
int3
call
in
mov
pop
in
daa
sbb
jle
into
lret
les
lcall
loop
dec
jno
das
cmpsl
jp
mov
mov
and
xor
ljmp
cwtl
push
clc
xchg
jno
xchg
fildl
in
mov
addr16
mov
mov
ja
in
mov
pushf
inc
xorb
scas
nop
dec
cmp
push
mov
dec
dec
lcall
insl
jno
jb
jl
jo
mov
fisubs
xchg
dec
mov
in
xchg
repz
cmpsl
cmpsb
dec
mov
je
xor
jle
mov
adc
rcl
push
ja
push
leave
xor
jne
pushf
and
xchg
dec
test
add
cmp
in
mov
add
dec
test
jl
bound
mov
sti
and
mov
aas
lds
pop
fildl
cli
pop
jbe
pop
mov
icebp
out
push
sbb
add
incl
mov
mov
inc
and
aad
add
movl
movl
movl
movl
mov
mov
subl
imul
or
xor
cmpl
mov
mov
mov
jmp
movl
movl
cmpl
jge
pushl
pushl
call
subl
xor
mov
and
xor
mov
or
mov
or
jmp
jp
lock
dec
pop
push
dec
lret
repnz
cli
repnz
fsts
sbb
test
das
jmp
sbb
cmpsb
call
push
leave
in
ror
fistps
xor
das
pusha
aam
sahf
mov
cmp
cmp
inc
rcrb
imul
mov
rclb
mov
outsl
push
cmp
mov
cld
js
push
mov
cmp
test
sub
cmc
pop
sbb
testb
popf
shll
dec
icebp
cmp
ljmp
cmp
addl
cmp
add
sub
mov
pop
pop
push
xchg
pop
inc
aad
jle
gs
cmp
lret
or
outsl
dec
ja
fs
inc
pop
or
in
orl
pushf
jae
adc
shlb
mov
adc
shll
das
sub
test
lcall
xchg
adc
stc
mov
es
scas
fistps
mov
bound
dec
jb
ja
outsl
push
mov
or
js
pushf
testb
and
cmc
cld
lds
lahf
mov
add
enter
pusha
stos
rcrl
inc
push
xor
in
popf
testl
xorb
dec
xchg
mov
sub
shll
daa
inc
mov
lahf
arpl
stos
inc
cmp
mov
push
test
push
xor
jno
in
sbb
jo
sti
adc
adc
rorl
inc
cli
orb
xor
lock
aas
loopne
add
cwtl
xor
shlb
cld
push
add
mov
es
and
push
mov
pop
cli
dec
out
mov
dec
mov
lcall
pusha
cmp
cmp
ja
jmp
dec
mov
cmc
xchg
ret
aaa
mov
in
popa
inc
jg
out
add
jo
ret
aam
notl
mov
cmp
jge
xchg
jle
adc
int3
jbe
dec
dec
ja
cs
int
icebp
mov
loop
scas
and
mov
mov
mov
ja
bswap
mov
shr
mov
jns
or
movsl
or
into
push
rolb
inc
lods
clc
xchg
jne
out
nop
push
mov
xchg
fstps
insl
push
mov
xor
mov
test
outsl
cmp
jp
pop
inc
repz
mov
pop
aad
add
mov
add
std
pop
ljmp
clc
icebp
int3
test
popf
inc
push
lock
fistps
inc
inc
add
inc
sahf
fiaddl
mov
fs
adc
mov
test
push
ss
inc
jno
add
rcrl
clc
mov
sarb
sub
mov
insl
push
fisubrl
add
ret
dec
pop
stc
lds
push
inc
lods
lcall
les
fisttpl
jno
mov
dec
hlt
test
sahf
das
das
and
stos
jecxz
adc
xor
xlat
jo
pop
movsl
add
cmp
in
mov
sbbb
stos
in
or
lods
xchg
dec
imul
les
out
cmp
fucom
and
les
adc
cmp
dec
jg
sbb
dec
cmp
std
fs
inc
jo
add
outsb
add
aaa
out
fcoml
xor
pop
data16
mov
inc
cld
pushl
mov
cmpl
movl
mov
movl
jmp
movl
movl
cmpl
ja
push
push
push
call
add
add
xor
mov
or
add
xor
push
not
pop
xor
div
mov
xor
xorl
or
mov
xorl
or
movzwl
or
mov
subl
div
xor
xor
cmpl
movl
mov
jmp
movl
cmpl
jl
push
push
call
sbbl
movl
or
xor
or
pushl
mov
or
mov
xorl
pushl
add
andl
pushl
orl
imul
pushl
mov
adc
jmp
and
sbb
sbb
mov
push
sbb
cmp
imul
repz
sub
js
lock
stc
test
mov
notl
mov
inc
hlt
inc
push
xor
fs
fidivs
mov
in
sbb
mov
les
add
cmp
push
lahf
push
mov
sbb
push
or
cmpsb
nop
and
mov
xchg
aad
mov
inc
lret
adc
popa
or
fdivl
daa
adc
stos
loopne
push
mov
ffree
lcall
add
es
nop
pop
mov
add
push
jae,pt
mov
sbb
pop
mov
jo
adc
sahf
popa
sti
xchg
insl
arpl
and
sub
mov
mov
addr16
lahf
cld
clc
jns
sub
mov
dec
cmp
outsl
inc
push
stos
out
jecxz
fisttps
iret
mov
in
sub
lods
popw
jecxz
clc
rcrl
mov
jo
cmp
out
mov
movsb
repz
jnp
popf
das
movb
aaa
xchg
inc
xchg
push
add
mov
jg
hlt
inc
mov
push
push
incl
jle
dec
jp
xor
mov
repz
nop
cld
or
dec
mov
jmp
imul
lds
and
and
sbb
pop
gs
jp
mov
sbb
cli
fwait
push
test
xchg
cli
insb
popf
adc
sbbb
mov
out
and
aas
jle
push
cs
xor
xchg
dec
cmpsl
mov
adcb
aas
xchg
filds
in
push
push
add
aaa
cld
inc
cmp
rolb
mov
inc
inc
adc
xchg
sub
sub
popa
push
mov
lods
mov
or
or
je
push
adc
pop
or
xor
mov
outsb
lret
ljmp
adc
and
ja
pushf
push
stos
lcall
mov
imul
mov
add
dec
sub
ss
sbb
inc
mov
pop
jns
mov
sub
ljmp
dec
mov
mov
sub
bound
cmpsl
cmc
test
pop
in
cmp
jmp
inc
stos
rol
stos
dec
mov
mov
jae
pop
jp
jnp
add
jl
mov
clc
pop
sbb
outsb
xchg
std
outsl
pop
lods
mov
outsb
movsl
sub
push
sbb
lods
sub
bound
mov
jmp
pop
jne
stos
idivb
mov
jbe
inc
xchg
stc
lds
addb
sub
mov
mov
xchg
inc
dec
jg
jno
std
add
sbb
add
and
mov
dec
data16
cs
in
in
sbb
mov
hlt
fidivl
jecxz
sbb
mov
roll
push
xor
cmp
sbb
mov
mov
xchg
and
out
cwtl
sti
adc
or
jle
push
sub
add
scas
sub
add
fnstenv
rolb
xchg
mov
insb
outsb
mov
mov
or
adc
fdivs
dec
dec
push
lcall
ljmp
mov
lret
mov
orl
xor
adc
mov
div
adcl
and
xorl
or
xorl
pushl
xorl
call
orl
dec
jne
add
movl
cmpl
mov
mov
mov
mov
jmp
mov
cmpl
jb
push
call
movzwl
sbb
adcl
xor
mov
xor
mov
addl
sbbl
mov
mov
andl
movl
mov
xorl
call
cmpl
mov
mov
not
jmp
movl
mov
cmpl
jle
call
adc
orl
xor
add
mov
sub
and
sub
sbb
lea
mov
lea
add
mov
cmpl
mov
movl
mov
jmp
movzwl
mov
cmpl
je
push
call
or
sbb
sbb
xorl
sub
orl
sbb
mov
mov
sbb
jmp
js
push
xor
or
shrb
sbb
js
pop
inc
jnp
movsl
xchg
in
lods
or
add
and
push
lret
pop
inc
loope
jo
jae
pop
push
arpl
stos
repnz
les
std
sub
aas
fstp
sti
ljmp
add
ja
inc
or
xlat
pop
mov
fsubs
jno
into
or
popf
in
in
int3
imul
dec
hlt
insb
popf
mov
push
clc
dec
cmpsl
cwtl
pop
sub
dec
ret
dec
repz
cmp
test
jbe
mov
adc
mov
mov
mov
inc
imul
dec
add
adc
push
outsb
or
inc
imul
adc
mov
addb
add
jnp
xchg
aam
aas
subb
fdivs
pop
lock
add
js
cmp
jle
ss
aas
or
stc
mov
jl
push
lahf
int3
push
inc
add
in
stos
push
add
add
inc
push
loope
cmc
push
ljmp
xchg
push
push
xor
mov
add
out
xchg
mov
rolb
or
stos
cmp
out
fwait
shrl
adc
lret
xor
test
aad
inc
pop
inc
inc
xchg
or
or
dec
aaa
push
pop
js
aam
dec
and
iret
sbbb
push
lds
test
cmpsb
test
cmc
bound
dec
shl
and
and
fwait
push
and
rcr
mov
rcl
push
push
ficomps
and
push
mov
mov
aam
adc
jnp
adc
stos
adc
fiaddl
aad
xchg
xchg
insb
pusha
in
lock
sbb
jo
mov
or
fisttps
push
imul
fwait
pop
aaa
push
pop
adcl
xor
mov
das
lret
imul
xchg
push
or
mov
pop
and
sbb
push
mov
inc
adc
iret
jl
mulb
mov
out
sub
ficoml
imul
adc
mul
pusha
clc
outsl
lea
sbb
jne
push
mov
mov
aam
fmull
and
mov
rorb
mov
das
or
leave
repz
adc
mov
sti
jns
les
push
imul
fsubrl
repz
pop
mov
adc
jl
repz
push
popf
sbb
mov
mov
fcomps
stos
jle
mov
imul
fimuls
call
loope
sbb
sub
sbb
jns
mov
jp
aas
xor
stc
jb
inc
mov
mov
cmc
in
lret
pop
movsb
lock
cwtl
inc
cs
aad
push
sti
leave
shl
jle
dec
imul
loopne
sub
jecxz
pop
or
cs
mov
cld
lcall
mov
dec
xchg
cmpsb
test
inc
int3
xchg
xchg
outsl
test
inc
mov
fildll
cmp
ds
or
pop
push
cmc
cmpsl
loope
sbb
xchg
pop
xchg
inc
pop
pop
pop
ja
or
es
dec
hlt
rcrb
mov
aaa
adc
scas
or
ljmp
inc
xchg
dec
popf
addr16
outsb
sbb
mov
xchg
and
mov
rcl
lods
push
add
sbb
cwtl
leave
cltd
iret
inc
movsl
hlt
dec
mov
and
mov
xor
cmpl
movl
movl
movl
jmp
movl
movl
cmpl
jae
push
push
pushl
call
notl
subl
adc
sub
mov
sbb
xor
or
mov
and
xor
and
shl
shr
sbb
or
cmpl
notl
notl
movl
mov
jmp
mov
mov
cmpl
jae
push
push
pushl
push
call
inc
or
xor
sbb
xorl
sub
mov
mov
mov
addl
mov
and
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
jl
pushl
pushl
push
push
call
add
notl
or
movzbl
or
sub
add
mov
adc
jmp
lock
fidivs
push
push
call
loopne
jle
ret
push
sbb
sub
mov
inc
outsb
or
and
insl
push
push
jl
xlat
nop
scas
test
icebp
or
cmpsb
mov
pop
movsl
addr16
aaa
sub
out
aas
push
ret
jns
pop
cmc
cmpsl
cmp
mov
cmp
dec
inc
ds
adc
inc
xchg
add
or
adc
daa
fdivrp
mov
inc
mov
jbe
clc
and
push
adcl
or
pop
xchg
and
cmpb
hlt
lds
mov
popf
ljmp
push
ss
bsr
inc
pop
xchg
and
imul
xchg
mov
inc
jmp
pop
push
pmaddwd
cmp
cltd
sbbl
xor
daa
addb
in
cmp
sarb
cmp
pop
dec
cld
jo
insl
mov
adc
push
int
mov
pcmpgtw
and
pop
popf
and
mov
pop
lock
or
xchg
add
in
inc
add
std
cmc
pop
loopne
adc
icebp
fbstp
cmpsl
stos
fwait
pop
sti
enter
clc
push
sub
ficompl
es
mulb
and
sbb
out
add
and
push
bound
scas
xor
and
mov
sti
mov
pop
push
mov
cmp
pop
ljmp
das
inc
jmp
loopne
sarl
xlat
shrb
xchg
mov
mov
sbb
push
xor
test
lret
cwtl
ret
mov
call
dec
call
mov
xchg
mov
jg
jno
sub
ss
jne
filds
test
pop
js
jle
lcall
cltd
jb
cmpsl
jg
adc
ficoml
add
sub
cmp
inc
icebp
insb
arpl
ljmp
xchg
das
xchg
in
test
idivl
ror
bound
inc
adc
add
mov
les
neg
scas
fmull
icebp
loope
insb
nop
clc
dec
enter
cmp
push
sub
sbb
or
sub
sahf
pop
dec
cmp
roll
test
xor
popf
cmp
xchg
bnd
jae
mov
mov
repnz
pop
cld
add
insl
inc
out
out
scas
mov
mov
testl
xorb
rcrl
int
add
insl
in
leave
mov
dec
lret
cli
cmp
adc
push
out
in
test
inc
jp
scas
and
or
imul
pop
mov
inc
shll
lea
mov
scas
out
lds
lea
cmp
mov
fidivrl
mov
pop
sub
mov
fidivl
cmc
xor
sbb
lea
stos
jp
push
jno
test
jmp
js
push
inc
cmp
jge
inc
sbb
jge
cmp
sbb
cmpsl
adc
fiadds
xchg
xchg
rorb
or
jg
dec
test
xchg
add
ss
movsb
rorl
aam
arpl
pop
sbb
push
ljmp
inc
lret
scas
ret
lods
enter
andb
xchg
push
sbb
dec
or
stos
fdiv
and
cmpsl
mov
mov
rolb
scas
xor
mov
push
cmp
cld
jg
adc
pop
in
outsb
rclb
sbb
jo
mov
mov
push
mov
push
orb
add
lods
enter
incl
sbb
not
not
jmp
mov
movl
cmpl
jae
push
call
movl
mov
mov
sbb
movl
or
and
cmpl
movl
mov
mov
movl
jmp
movl
movl
cmpl
jge
push
push
push
call
adcl
xor
xor
movl
adc
decl
shr
mov
xorl
mov
xor
xorl
xor
or
cmpl
movl
movl
movl
jmp
movl
mov
cmpl
jne
push
push
call
adc
andl
add
andl
add
mov
andl
push
pushl
lea
subl
push
subl
shl
andl
call
lea
orl
push
mov
mov
lea
push
negl
mov
lea
addl
mov
mov
adcl
mov
sbbl
push
negl
call
push
andl
push
sbbl
pushl
sbbl
call
sub
mov
movzbl
sbb
mov
adcl
mov
mov
shr
add
shl
and
or
adc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jbe
pushl
call
movzbl
adc
movzbl
add
and
sub
orl
xor
cmpl
mov
mov
jmp
mov
cmpl
jb
push
push
push
pushl
pushl
call
subl
addl
addl
mov
xor
add
sub
sub
sbb
add
and
mov
lea
neg
mov
add
lea
or
mov
cmpl
not
movl
mov
jmp
movl
movl
cmpl
jge
push
push
push
pushl
call
adc
add
and
mov
mov
sub
or
xor
cmpl
movl
movzwl
notl
jmp
mov
cmpl
jne
call
sbb
notl
and
mov
sbb
orl
adc
and
mov
sub
mov
xor
xor
sub
or
lea
cmpl
mov
not
not
jmp
movl
movl
cmpl
jne
push
pushl
pushl
push
pushl
call
sbb
add
sbbl
subl
movzbl
sub
mov
cmpl
movl
mov
movl
movl
jmp
mov
cmpl
jge
push
push
call
sub
mov
sbb
adc
and
adcl
sbb
xor
xor
mov
xor
movl
add
movl
sub
movl
movl
mov
jmp
xchg
inc
sub
mov
push
sbb
inc
daa
outsl
ss
and
lods
cmp
fldenv
out
push
xchg
add
fnstcw
in
inc
scas
ret
xor
lea
test
ficomps
in
push
insl
cltd
adc
loope
adc
xchg
flds
stos
stos
pop
pop
jae
xchg
out
sub
aaa
lds
rcrb
sti
lds
imul
adc
mov
pop
gs
call
ret
xor
pop
mov
punpcklbw
mov
imul
or
adc
aam
cwtl
mov
mov
add
in
mov
int
jmp
push
stos
add
xchg
dec
push
cmp
inc
xchg
xchg
push
in
loope
sbb
in
add
push
xchg
ret
aam
dec
int3
cmp
jb
shll
ds
push
push
loope
inc
cwtl
out
iret
xor
call
inc
xorb
push
inc
cwtl
movsb
cld
mov
ret
sbb
cs
mov
sbb
sub
xchg
xlat
dec
fcoms
fistpl
hlt
lods
hlt
push
mov
lock
adc
cs
sbb
std
pop
mov
addl
and
daa
sub
fsubrs
or
int
pop
mov
hlt
add
loop
fs
and
lods
mov
pop
cmc
fsubl
push
or
outsl
xchg
pop
fistps
push
pop
inc
and
test
sub
adc
popf
scas
xchg
aas
icebp
hlt
js
int
dec
mov
lcall
out
movsb
xor
sbb
or
jp
es
aas
dec
mov
push
lods
adc
jg
nop
testb
mov
scas
imul
and
fidivl
push
sub
xor
inc
das
pop
mov
scas
pop
mov
inc
mov
push
lds
cmp
hlt
push
rcrb
sahf
adc
inc
xchg
sbbb
ss
pop
add
dec
mov
adc
mov
inc
icebp
test
cmp
ds
fnstcw
enter
mov
cli
mov
popf
xchg
icebp
sub
loope
mov
sub
sbb
out
orl
push
pushf
cmpsl
mov
mov
xchg
jge
mov
ds
adc
xchg
sbb
negb
rolb
insb
add
fdivl
lret
aad
and
daa
xor
in
jnp
repz
shlb
insb
lea
sub
sbb
cmp
cmc
jmp
mov
add
iret
add
movsb
add
cmc
or
out
in
xor
xchg
cmp
and
jae
ret
push
lahf
inc
insb
cmp
push
and
aam
and
push
dec
lea
scas
sbb
cld
sti
dec
and
add
in
popa
loopne
mov
push
stos
adc
addr16
lret
jecxz
lret
jo
fmulp
push
cwtl
push
add
dec
pop
and
push
faddl
imulb
iret
cwtl
fwait
xor
dec
adc
lret
jge
enter
int3
outsb
mov
push
aad
out
cltd
loop
xor
cmp
es
hlt
sar
inc
push
dec
cmp
fdivl
testl
popf
or
xchg
mov
ss
or
and
mov
mov
add
adc
xor
xor
jmp
pop
es
sub
pusha
in
mov
xchg
sbb
loope
sub
lds
clc
pop
jbe
inc
mov
push
mov
scas
sub
xchg
mov
ljmp
mov
mov
cmpsl
sbb
jl
lret
fmul
cmp
sub
notb
js
ror
sbb
push
popf
test
mov
idivb
jl
mov
cmp
xor
adc
inc
je
lods
sub
sub
pop
and
imul
cli
mov
fstl
xchg
rcl
pusha
daa
loop
sbb
stc
ffree
std
push
push
mov
int3
fstl
xorl
xchg
insl
icebp
popf
push
in
push
repz
mov
popf
cmpsl
adc
xchg
mov
popa
sbb
push
push
pop
in
enter
mov
pop
rorb
dec
je
pushf
adc
sub
enter
aad
scas
stc
cld
jp
xor
sarb
mov
or
inc
in
mov
jbe
cltd
xor
xor
aas
scas
loop
sbbb
movsb
outsl
jb
push
and
mov
fisubs
dec
fs
push
shll
cli
cmpb
dec
dec
les
out
sahf
push
mov
sarl
cmp
jl
sbb
pop
test
xchg
cli
cmp
test
or
ret
mov
adc
or
shll
cld
and
fs
adc
cmp
clc
or
add
test
hlt
sbb
leave
mov
out
dec
mov
sbb
pop
inc
pop
mov
push
lret
xor
jmp
out
subl
cld
mov
adc
pop
sbb
xchg
pop
cltd
pop
test
scas
jge
arpl
dec
popa
test
xchg
fcomps
xor
enter
jne
ljmp
ficompl
inc
hlt
gs
ret
lret
fistpll
leave
add
xchg
and
push
arpl
inc
push
adc
loop
push
sbb
ds
mov
sbb
xchg
sahf
andl
adc
loop
movsb
xchg
rcrl
xor
push
fstpl
ss
xorb
pop
xchg
sbb
push
inc
mov
mov
pop
push
xor
push
test
inc
and
add
pushf
pop
rorl
cmpsb
std
inc
subl
lods
xor
je
jge
mov
enter
mov
cmp
lahf
inc
jle
and
out
or
fs
dec
aam
scas
loop
push
mov
cs
outsb
mov
push
gs
test
repnz
aaa
xchg
test
or
inc
out
in
xor
mov
es
and
rclb
aaa
mov
ficoms
xor
in
fmull
fldcw
mov
cli
pop
les
test
sbb
push
int3
inc
ja
mov
cmpsb
imull
test
sbb
xor
outsl
mov
rdtsc
mov
mov
aas
add
fdivrl
pushf
cmp
pop
and
pop
push
in
sti
jae
shrl
mov
push
add
or
inc
shrl
outsl
jb
mov
popf
dec
in
jns
xchg
or
mov
inc
cmp
pop
or
shlb
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
jmp
lcall
es
lret
lock
test
push
sbb
rcr
cmpsl
insl
fdivl
xor
nop
or
or
jecxz
mov
popa
sbb
aam
mov
jp
jecxz
push
inc
test
call
inc
sbb
aad
adcb
dec
aas
dec
mulb
out
popa
cmp
into
mov
fcompl
into
sub
cmpb
mov
dec
pop
xchg
fnstcw
je
mov
jecxz
inc
lea
bswap
mov
in
jae
mov
aad
push
xchg
sbb
push
fsubs
xor
test
cmc
push
callw
mov
lods
sahf
cmp
jb
push
repnz
imull
fstl
mov
es
outsl
xor
add
mov
repnz
mov
ljmp
loope
dec
mov
pop
push
push
mov
sti
scas
shlb
mov
jnp
and
ret
movsb
rol
icebp
xchg
xchg
mov
enter
jo
loope
outsl
jnp
test
and
push
adc
push
mov
bound
movsl
dec
fdivrs
cmc
mov
lahf
out
arpl
cmp
pusha
dec
stc
sub
stos
push
arpl
jecxz
mov
mov
lret
stos
cmp
xlat
lods
int
add
les
call
mov
in
xchg
stos
jno
xchg
movsl
outsb
popa
xor
and
aam
insb
fiaddl
jl
sub
push
pop
inc
xchg
xor
test
ss
push
dec
cmc
call
and
icebp
mov
ljmp
and
jle
add
sahf
and
mov
out
fstl
clc
bound
jp
jecxz
dec
mov
inc
mov
out
sbb
or
jnp
and
mov
movsl
ret
pop
or
int3
push
jle
stos
jne
mov
or
lock
lahf
or
mov
push
push
inc
inc
lahf
xchg
push
ror
mov
xchg
addr16
pop
fldenv
fs
int
or
mov
inc
in
lahf
sti
or
sub
pop
imul
inc
jb
out
jne
or
mov
xchg
xchg
mov
popa
cmpsl
fcomps
xlat
dec
jb
sub
aas
fsubl
fidivrl
mov
cmp
xchg
mov
popf
icebp
shlb
dec
jno
jmp
pushf
mov
pusha
mov
dec
fmuls
push
mov
shl
aam
push
pop
adc
adc
and
adc
shll
mov
mov
aas
sbb
lahf
mov
cmp
adc
xchg
xor
inc
sub
or
push
mov
and
sub
xor
sub
cmp
jno
fnstsw
jns
les
in
lods
adc
fidivrl
fst
inc
gs
lahf
insl
sbb
cmp
daa
int
fwait
sub
lods
adc
jecxz
aaa
sar
fistpl
pop
inc
fsubr
sbb
fidivl
mov
xor
cmc
out
inc
sbb
or
push
add
mov
loope
lods
dec
jmp
loope
fs
push
pop
mov
xor
xchg
inc
notb
ffree
cmpsb
aas
cli
je
iret
imul
pop
jle
mov
dec
and
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
jmp
cmp
arpl
add
loop
out
mov
mov
loopne
clc
mov
outsb
cli
add
sub
xchg
in
and
data16
repz
std
push
push
adc
mov
adc
rcr
or
mov
std
pop
adc
ret
lods
jl
mov
lods
push
push
roll
js
jne
sbb
sub
jmp
lea
inc
scas
xchg
sub
add
je,pn
ficoml
arpl
jnp
popa
mov
mov
xor
fcmove
mov
dec
xlat
jo
nop
stc
imul
je
lds
clc
dec
bound
ret
test
or
iret
mov
fisttpl
add
push
fdivs
mov
outsl
mov
xor
xlat
loopne
and
xor
testl
mov
and
mov
fucomi
jb
dec
add
push
test
mov
lock
lea
outsb
imul
jp
insl
xor
repz
dec
movsl
sbbb
mov
addb
arpl
je
std
sub
jecxz
loope
dec
fcmovu
pop
adc
enter
fwait
push
out
data16
negl
loopne
mov
inc
push
lret
jne
into
add
mov
test
ja
pop
mov
add
mov
enter
aam
inc
loop
jge
xchg
pop
fs
pop
xor
and
or
out
or
sbb
inc
movsb
clc
adc
test
and
adc
js
mov
sub
pop
xchg
jl
aas
clc
ljmp
push
jb
stos
mov
sti
inc
dec
mov
add
add
mov
push
sar
imul
sarl
repz
xor
xchg
iret
aam
adc
adcb
mov
lods
mov
mov
aam
pusha
adc
cmp
adc
dec
jl,pt
call
int
mov
mov
lods
mov
mov
cltd
pusha
sahf
or
stos
addr16
or
cli
or
cld
test
popf
movsb
insl
jns
rcr
imul
sub
add
pop
adc
int3
jns
sbb
pushf
insl
cmp
xor
push
lea
dec
fidivs
mov
fists
outsb
popa
cmc
dec
inc
adc
jo
mov
je
cmpxchg
mov
mov
andb
xchg
daa
aam
mov
je
jmp
pusha
je
cmp
fistps
andl
jb
shlb
cld
cmp
sub
xor
scas
fsubrl
mov
aaa
xchg
mov
movsl
pusha
aad
aam
push
fs
out
repz
push
mov
fnstcw
jp
dec
mov
call
mov
ja
mov
cmc
cs
mov
outsb
stos
into
mov
js
mov
inc
mov
inc
lods
lock
pop
inc
jle
lcall
pop
outsb
sbb
in
mov
dec
add
dec
sbb
hlt
cli
popf
pop
fisubs
inc
mov
push
stos
adc
inc
push
aas
sti
loop
sbb
jle
pop
xor
sub
loop
rclb
adc
push
fldl
pushf
lds
mov
pop
and
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
jmp
xchg
loope
gs
fs
aam
imul
lahf
push
sbb
hlt
stc
divl
test
push
aas
icebp
jge
or
xchg
icebp
int
push
and
or
jb
ret
push
insb
inc
pop
sub
shll
fistpl
es
fnsave
sti
sbb
das
nop
adc
sub
sub
cwtl
scas
sbb
and
jp
jmp
call
shll
mov
imul
mov
push
xor
adc
and
push
push
or
test
fstpt
inc
mov
pop
sbb
int3
pop
pop
mov
ss
xorl
push
push
out
data16
push
mov
cmp
pop
imul
cmpsl
cmp
in
xchg
out
int3
imul
push
cs
jmp
shlb
sub
sbbl
fcoms
and
call
mov
dec
rorb
pop
out
leave
orb
das
test
ljmp
aas
pop
sub
movsb
out
mov
fwait
pop
aaa
iret
fcomps
cli
das
lret
test
call
shrl
lahf
dec
repnz
jb
adc
push
loopne
xor
or
insb
xor
xor
mov
les
fwait
jbe,pt
test
mov
inc
movsb
push
cmp
mov
out
sub
cmp
sub
or
ss
inc
in
cmp
and
or
or
dec
xor
pop
scas
pop
pop
mov
pop
sbb
incl
xchg
lock
jne
add
and
jl
xchg
rcl
shlb
push
xlat
sbb
ja
jo
orb
xor
sub
fsubrs
push
add
data16
xchg
mov
in
jle
push
dec
leave
ret
call
sbb
xchg
jo
lret
or
jg
adc
dec
xchg
je
xchg
sahf
mov
lods
jle
cmpsb
shlb
fmuls
inc
test
lcall
cmp
shrl
mov
andb
pop
jmp
arpl
mov
push
mov
sub
mov
icebp
dec
jnp
arpl
enter
inc
lahf
mov
ja
jmp
subl
or
mov
scas
lcall
into
add
inc
lock
les
sbb
outsl
xchg
push
jp
imul
push
or
mov
loopne
mov
roll
jb
fdivl
subl
ljmp
xor
or
inc
add
add
mov
rcrl
stos
fimuls
and
popa
lea
mov
fcomi
mov
lret
popf
popa
push
or
push
lods
mov
mov
in
inc
jl
enter
cmpsl
mov
sub
and
enter
jle
xchg
dec
sbb
sub
negb
push
enter
dec
push
adc
arpl
sbb
rol
popa
xorb
mov
inc
add
xchg
pop
jno
popa
dec
pop
mov
jg
and
fsubrs
std
jmp
ret
jecxz
push
and
imull
dec
cmpsl
int
int3
sbb
jle
cmpsl
or
ret
xlat
sub
mov
call
or
adc
mov
out
out
dec
loope
test
xor
loop
test
pop
lahf
sbbb
push
mov
icebp
push
mov
add
add
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
jmp
popa
cmp
cmpsb
stos
and
insl
jnp
jl
push
inc
push
xchg
push
sbb
es
scas
hlt
sbb
fwait
mov
pop
ret
mov
sub
pop
xor
and
ss
sub
cmp
pop
sbb
add
or
or
in
sbb
dec
leave
pushl
pop
out
lahf
lret
popa
ficompl
fldenv
cltd
adc
decl
in
jl
xor
push
fdivl
xchg
inc
push
fwait
mov
inc
jno
rorl
mov
cmpsb
xchg
adc
lea
xchg
pop
xchg
into
addb
mov
jle
push
adc
insl
xorl
cmp
fldcw
fucomp
and
lea
jne
sub
test
add
jl
xchg
and
sub
insl
xor
pop
ja
ret
fistpl
jns
jl
hlt
dec
mov
dec
mov
ss
xor
scas
jl
orl
stc
cmp
int3
sbb
aam
cmp
arpl
sbb
xchg
push
popf
dec
es
and
dec
fucomp
adc
xchg
dec
add
xor
pushf
jnp
or
mov
test
inc
inc
xchg
xchg
mov
cmp
cwtl
sbb
pop
outsl
mov
inc
pop
lea
loope
jecxz
cmc
mov
cmp
cmp
mov
int
jmp
mov
ja
movsl
push
sbb
fs
bound
mov
pusha
mov
insb
in
push
adc
in
imul
lock
std
les
rol
lock
mov
icebp
andb
xchg
adc
mov
push
cmp
sbb
xchg
or
test
sbb
and
adc
mov
pop
push
xor
stc
xlat
push
mov
notb
cs
stos
lods
fistpl
jb,pn
pushf
sbb
adc
icebp
add
mov
imul
fs
fisttpl
jo
out
xor
push
add
xchg
push
imul
cwtl
lahf
pop
lock
mov
imulb
shl
test
lahf
jp
adc
lock
push
jmp
insb
mov
inc
dec
out
mov
jbe
push
sti
pop
dec
cmp
pop
sbb
sbb
and
jg
roll
fidivl
cmp
xchg
adc
mov
bound
pop
jg
loopne
nop
sbb
rorl
xchg
pop
pop
push
aas
or
lods
jne
or
jg
push
stos
inc
cmpsl
sahf
out
lcall
jae
xchg
fstpl
xchg
and
xchg
xor
xchg
pushf
lea
push
jmp
ret
jo
fwait
mov
scas
lret
xor
ss
xchg
push
xor
mov
ud2
lods
stos
sbb
pop
add
enter
shrl
shlb
adc
xor
adc
mov
and
in
decb
dec
jp
ss
or
jo
popa
es
hlt
ja
in
push
mov
inc
sti
xlat
dec
shrl
push
lret
dec
xchg
xchg
mulb
pop
in
lret
repnz
clc
cmpl
repnz
pop
repz
aas
sbb
ret
dec
fisttpl
jbe
test
jno
dec
cmpsb
lds
loopne
insb
daa
outsl
or
pop
push
jecxz
or
xor
fdiv
pop
stos
jle
in
jmp
leave
and
imul
mov
int
bound
les
imul
xlat
in
scas
or
scas
rolb
shrd
shr
mov
mov
mov
jmp
push
or
sbb
inc
sbbb
mov
adc
sbb
mov
adc
fistps
cmp
scas
movsb
push
adc
dec
dec
cmpsb
sbb
jne
mov
mov
xor
insl
dec
xor
jbe
xor
test
out
xchg
xor
ja
mov
mov
ljmp
pop
xchg
fstpl
scas
das
xchg
adc
adc
push
mov
outsl
mov
mov
std
adc
jg
repnz
jmp
nop
bound
ret
push
inc
add
roll
sub
or
jmp
insb
out
insb
mov
adc
sub
xchg
aad
dec
sahf
xchg
or
imul
lds
dec
inc
and
sub
sahf
dec
jmp
jae
xchg
out
dec
jne
push
push
sbb
cmp
jae
pop
jp
mov
xchg
cmp
mov
cmp
push
mov
sahf
jmp
and
adc
jmp
jno
mov
adc
outsb
fsub
adc
imul
lahf
in
dec
sbb
test
out
xor
nop
push
aaa
mov
scas
dec
or
inc
jo
arpl
mov
mov
push
decl
mov
mov
mov
addl
mulb
repnz
or
adc
add
xorb
fisttpll
lea
cmp
or
xor
ja
scas
sub
adc
pop
out
nop
mov
pop
jecxz
dec
push
int
fnstsw
push
push
fdivp
pop
xor
xor
add
cmp
mov
xor
sub
data16
rorl
pop
cmc
and
int
mov
mov
cli
shrb
xchg
xchg
xchg
enter
repz
and
dec
cmpsl
or
and
pop
subb
sub
mov
mov
push
movsl
lods
in
sub
sub
test
pop
inc
ficoms
jb
and
jge
icebp
in
pop
and
inc
xor
aaa
incb
push
lods
mov
test
stc
sub
mov
arpl
stos
psubusw
sbb
cmp
jmp
jnp
fcomip
lea
mov
mov
push
enter
movsb
scas
cmc
sbb
pop
or
into
pop
ja
in
push
std
loopne
or
inc
and
pop
daa
xor
cmpb
cmpb
pop
adc
adc
dec
sub
mov
clc
fwait
pusha
lea
push
add
lods
ljmp
pop
enter
cmp
sub
loopne
xchg
cmp
mov
cmc
scas
sub
aam
pusha
push
imul
fst
movsb
inc
xchg
movb
clc
rclb
and
pop
xor
adc
nop
loop
or
out
sti
faddl
daa
into
insl
arpl
mov
hlt
inc
mov
cltd
fs
sahf
pmulhuw
cmp
push
sti
add
out
xchg
out
mov
xchg
out
jns
push
inc
cmp
or
mov
push
jne
fs
subl
xchg
pop
mov
mov
pusha
movsl
cli
rcl
mov
mov
roll
pop
js
dec
adc
and
dec
bound
loopne
sub
jae
jns
xor
test
sub
imul
push
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
jmp
push
and
and
sub
push
sbb
push
filds
and
xor
inc
subb
add
jg
cld
adc
cmp
sbb
scas
aaa
mov
cmpb
sarb
push
fcmovb
xchg
and
inc
xchg
mov
fnsave
nop
xor
cwtl
shrb
or
iret
leave
mov
mov
pop
mov
push
or
jmp
adcl
mov
jl
imull
es
pop
mov
inc
decl
in
cmp
pop
jne
dec
ret
sbb
sub
xchg
xchg
lods
push
sbb
and
sub
out
xor
lods
push
daa
pop
xchg
gs
idivl
outsb
pop
xlat
in
fsubp
icebp
mov
adc
xchg
mov
and
scas
cmp
jae
mov
pushf
je
int3
push
xchg
or
clc
mov
sbb
sub
imul
loop
mov
jbe
inc
call
sbb
push
mov
insb
adc
and
fwait
xchg
jb
push
idivb
jecxz
movsl
scas
cmp
inc
adc
sarl
mulb
rorl
lods
and
nop
xchg
jp
sub
inc
xchg
test
xchg
sbb
jns
mov
cmpsl
xchg
and
rcrb
fwait
mov
sahf
add
bound
push
mov
xchg
or
mov
scas
xchg
mov
outsl
and
in
jb
arpl
ljmp
lods
and
jno
inc
or
jbe
mov
fldt
adc
mov
add
pop
sbb
loop
adc
sub
mov
or
add
inc
jns
stos
inc
mov
lock
scas
xchg
fnstenv
pop
mov
pop
popa
stc
js
mov
fimuls
stc
and
and
jg
fs
repz
and
popa
mov
adc
popa
movsl
mov
adc
aas
cmp
popa
jl
lret
lcall
mov
sti
loopne
jo
fdivs
fadd
js
add
xchg
or
jb
sub
ss
mov
out
sbb
imul
cmp
ror
cmp
jne
gs
mov
sbb
sub
and
bound
mov
push
mov
xor
ja
rcr
stc
jno
insl
pop
sub
out
fldlg2
addb
das
push
mov
rcr
push
insl
jo
icebp
pop
rorb
jp,pt
loop
jns
jecxz
mov
mov
test
leave
mov
aaa
mov
fbld
loope
inc
outsl
fwait
hlt
mov
xlat
jne
cs
xchg
cltd
dec
push
dec
enter
test
jmp
fcomps
out
cli
out
push
add
loope
push
push
fldt
pop
or
adc
mov
pop
xor
ret
push
lock
mov
sbb
es
cmp
fdivrs
mov
ljmp
sbbl
push
mov
hlt
xor
or
jl
mov
cmp
and
jp
mov
pop
pushf
dec
push
cmpsl
inc
insl
inc
mov
test
mov
sar
fbstp
and
mov
in
xor
xor
rorl
mov
fistl
adc
xor
lahf
ljmp
ret
fdivp
out
cs
inc
and
mov
or
mov
add
or
mov
jmp
inc
pop
push
fwait
xor
pop
stos
cmp
adcl
sbb
sti
mov
jge
jg
hlt
adc
into
mov
adc
xorl
mov
cmpsb
pop
clc
out
lret
sbb
mov
adc
mov
sbb
sub
sbb
clc
xchg
xchg
lods
daa
xchg
leave
adc
adc
xchg
pop
add
pop
jp
shll
push
lods
xor
scas
data16
cmp
sbb
sti
popl
insl
aaa
mov
mov
clc
cwtl
xlat
push
push
movsb
xchg
or
mov
shlb
or
iret
scas
adc
mov
jge
mov
int
add
lods
lcall
scas
mov
adc
adc
imul
in
andps
jb
lods
mov
cmpsl
enter
divps
mov
hlt
push
cmp
xor
leave
in
jg
shlb
roll
pop
and
ficoml
jg
xchg
jge
inc
es
jl
add
xor
fiaddl
cmp
sub
jmp
in
and
out
cmpsb
pop
add
pop
incb
or
xlat
and
ljmp
mov
jne
jp
sbb
inc
sub
jg
add
popf
xchg
leave
in
jno
add
outsl
jle
jecxz
insl
call
pop
sbb
or
cmc
pushf
mov
mov
les
sub
mov
adc
pop
and
cwtl
std
popf
pop
add
insb
rorb
jns
int
fs
enter
sub
jbe
push
jmp
push
rcl
cmp
imul
push
fdivs
xchg
stos
loope
mov
push
xor
sbb
mov
add
or
je
fs
sysret
adc
cwtl
pusha
sub
jb
rcrb
mov
sub
mov
mov
push
sbb
cmc
insb
js
pop
bound
stos
and
rorl
test
fdivrs
push
clc
xchg
jb
xchg
mov
test
mov
enter
in
mov
pushf
mov
cmp
nop
cmp
xchg
and
mov
mov
mov
es
sub
out
cld
shrb
bound
adc
xchg
pop
jne
pop
movsb
fstps
push
ret
loop
testl
jb
sub
stc
sbb
in
push
pop
cli
or
cs
adc
stos
xchg
xchg
sbb
jl
cld
cmp
push
mov
cmp
mov
out
leave
in
lahf
push
das
ss
pop
popa
mov
mov
lcall
xlat
add
pop
push
scas
sub
loop
and
cmp
mov
gs
les
inc
addr16
inc
sahf
movsb
mov
adc
outsb
int
imul
and
push
mov
cmpsl
enter
xor
negb
add
add
test
adc
cmpsb
adcb
in
mov
mov
test
mov
movsb
mov
repz
ret
push
xor
dec
out
leave
in
movsb
sti
xor
sbb
insb
mov
popf
aad
jecxz
enter
and
dec
bound
call
mov
dec
mov
test
lret
pop
dec
lahf
cltd
popa
mov
xlat
xchg
push
xor
push
sti
lahf
cs
dec
xchg
pop
or
pop
xor
mov
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
jmp
in
sarb
dec
sbb
icebp
scas
mov
cmp
push
sbb
jmp
shlb
pop
xchg
ds
lcall
js
movb
pop
stos
mov
dec
inc
stc
and
adc
or
test
ret
scas
cmpsl
dec
mov
pop
loope
adc
cmp
mov
or
in
in
jne
xchg
push
js
mov
xchg
xor
aam
or
mov
in
push
fwait
mov
jp
dec
insb
mov
pop
test
and
xor
mov
mov
ss
incb
loope
inc
xchg
mov
clc
or
sbb
cmp
cmc
xchg
sbb
adc
push
mov
inc
lret
rcll
shlb
loopne
cmp
mov
cli
add
data16
xchg
addr16
sub
or
fildll
sbb
scas
pop
and
test
jbe
aas
adc
inc
arpl
jg
jl
shrb
mov
pop
adc
cli
dec
dec
xchg
dec
adc
dec
pop
mov
and
lock
loop
aam
xor
jo
sbb
bound
jo
dec
call
jle
arpl
insl
inc
xchg
cltd
push
inc
or
cmpsl
jmp
jb
cmp
cmp
pop
inc
sub
lahf
lock
loope
mov
mov
sub
addr16
stos
add
pop
xor
fcomip
adc
jge
pop
mov
dec
daa
gs
jmp
push
pop
pop
xor
jns
iret
adc
xor
imul
insb
jbe
dec
test
shrl
xor
dec
xchg
in
mov
cwtl
cs
push
inc
push
rcrl
sub
cmc
sub
inc
loope
cmp
push
das
out
das
xchg
add
cmp
test
mov
and
cwtl
add
jb
cld
movsl
sbbl
xor
mov
jmp
fcomi
orb
dec
aas
inc
adc
or
xor
dec
mov
pusha
dec
xor
movsl
mov
jle
push
fsubrs
cmp
iret
adc
adc
dec
inc
mov
mov
dec
and
mov
stc
imul
iret
sarl
scas
enter
out
inc
es
in
pop
cld
cmpsb
jp
adc
nop
pop
mov
lods
mov
dec
mov
sub
jne
cld
mov
push
lods
jp
pop
inc
push
jno
xchg
insl
aam
sahf
aad
sub
push
mov
xor
mov
shll
enter
mov
adc
mov
jns
insl
addr16
lret
cli
ret
xor
cmpsb
push
cmc
inc
inc
jb
jle
js
rorb
jecxz
and
mov
mov
mov
shlb
loop
adc
out
ds
lcall
in
xor
sub
int
imulb
sahf
insb
fs
cmp
sbb
test
sub
scas
xor
aaa
movsb
aaa
jle
dec
je
or
orl
lret
loopne
mov
cmp
lds
mov
mov
pop
pop
or
aam
data16
nop
pusha
imul
rcll
jp
push
outsb
mov
aad
xor
lcall
test
mov
into
pop
push
shlb
dec
sti
jns
dec
setp
inc
ret
call
jmp
inc
and
sbb
daa
and
cltd
lahf
jo
xlat
lea
jae
sbb
lods
dec
xchg
mov
daa
xchg
ds
cmp
push
mov
es
lds
mov
pop
rcll
vphaddbw
mov
ja
or
nop
lods
xchg
jge
enter
les
xor
mov
lret
pop
fisttpll
enter
xchg
in
sub
jb
xchg
xchg
shlb
add
lods
mov
lahf
xor
jmp
dec
cmpsl
dec
mov
mov
xchg
pop
shll
je
insl
adc
or
or
imul
xchg
jg
stos
cmp
pop
lahf
adc
cwtl
dec
mov
sbb
push
push
fsubrp
pop
dec
jns
scas
lds
out
mov
pushf
pop
fwait
shr
mov
fisubrl
jge
mov
insb
dec
sub
repnz
cwtl
sbb
ja
rcrb
cmp
xor
xchg
push
push
mov
cmp
inc
popf
adc
push
pop
jle
add
xor
mov
lods
stos
mov
push
imul
jns
out
test
lods
mov
xor
jbe
lds
test
out
jae
shrb
pop
push
push
lods
dec
mov
scas
mov
out
cld
fildll
jp
insb
push
sbb
sub
sbb
outsb
idiv
mov
or
push
cmp
insl
inc
mov
push
mov
pop
push
jp
inc
jne
loop
in
sbb
xor
cli
or
jl
imul
cmp
popf
inc
jb
jl
movsb
jne
test
pop
clc
fs
xor
sbb
and
daa
dec
and
xor
mov
movsl
scas
dec
in
dec
mov
or
mov
inc
fsubrl
inc
dec
in
sub
sub
or
cli
mov
jno
add
mov
sti
test
ds
lea
jp
imul
movb
xor
push
jb
add
mov
add
mov
mov
push
imul
xchg
sbb
push
mov
mov
in
jge
jmp
cwtl
mov
add
cmp
inc
lahf
lret
push
pop
sub
jne
imul
lods
in
lahf
scas
adc
dec
and
dec
popa
sbb
int
stos
daa
xchg
sub
pop
cmp
lods
rorl
inc
filds
enter
iret
jns
ljmp
outsl
leave
cmpsb
in
fistpl
lock
in
fimull
popf
cld
shrb
dec
add
mov
push
std
dec
lods
cmp
jmp
jl
sbb
ljmp
inc
inc
pop
mov
adc
out
out
nop
or
int
sbb
je
pop
pop
repnz
dec
es
sub
stos
adc
dec
add
xor
inc
mov
add
lods
add
dec
jecxz
mov
outsl
shlb
mov
inc
mov
and
add
movsl
cmp
enter
mov
inc
pop
scas
push
pop
mov
xor
pushf
adc
data16
dec
jo
pop
pop
loopne
jecxz,pn
and
push
pop
hlt
mov
cmpsb
xchg
inc
mov
bound
adc
shr
jmp
push
and
shll
fldenv
adc
lret
mov
pop
xor
daa
std
cmpsl
fdivrs
pusha
xchg
dec
or
push
dec
xor
xorb
add
ss
and
je
je
je
je
je
and
je
and
imul
and
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
jmp
push
and
shll
push
and
jmp
call
imul
mov
cmp
push
jo
dec
pop
pushf
mov
xchg
sbb
out
sti
insb
mov
jp
jne
push
jae
std
js
sub
mov
jns
dec
out
pop
es
sub
loope
int3
hlt
pxor
leave
cmp
lcall
pop
sbb
lods
repz
test
jmp
out
bound
loop
add
dec
cmp
cld
es
add
mov
iret
rcr
inc
and
and
in
std
and
sub
sub
jg
into
scas
cmpsb
imul
rcrb
cmp
sahf
repnz
inc
sub
adc
cmp
jl
not
loop
xor
divb
aas
push
testl
xor
jnp
mov
xorl
cmp
lods
sbb
fildll
dec
das
adc
adc
outsb
test
add
icebp
lods
imul
scas
stos
out
pop
xchg
out
sbb
cltd
fcompl
xchg
mov
gs
mulb
es
cmp
int
bound
popf
test
sbb
stos
movsb
xor
mov
lock
imul
adc
mov
or
mov
inc
and
fs
test
call
mov
xor
clc
cmp
in
mov
mov
pop
in
fidivrs
sub
movsl
jecxz
xchg
pushf
out
xchg
jge
inc
and
add
inc
xlat
jne
jns
jmp
fstpt
sub
inc
pop
call
jns
mov
mov
gs
lcall
mov
cli
test
out
shlb
jg
dec
cltd
mov
cwtl
adc
sbb
out
imul
inc
mov
pop
and
sbb
mov
fcompl
sbb
push
into
cmp
pop
jmp
xchg
sub
je
clc
ljmp
add
stc
mov
pop
mov
xor
ja
mov
cs
bound
idivb
xchg
ffreep
pop
repz
sub
and
std
adc
sub
fs
loopne
adc
sub
ja
add
andb
add
test
fs
push
inc
repz
cmp
push
pusha
shll
inc
fdivrs
insb
cmpsb
popa
nop
push
push
es
js
stos
lock
mov
push
inc
push
mov
fcomi
fwait
je
mov
push
mov
shrb
pop
sub
cs
jg
cmp
ja
popf
adc
jge
dec
jno
ret
and
cwtl
lret
mov
and
sub
stc
popf
pop
xor
mov
pop
sbb
in
shlb
inc
inc
jle
sbb
sub
cmc
push
and
cli
rclb
cltd
lret
movsb
addr16
mov
pop
jns
sub
xor
pop
jno
insl
adc
fcomi
add
push
cmpsb
test
mov
pop
mov
or
push
jp
or
repz
test
scas
mov
inc
jo
xchg
sbb
bound
sub
pop
inc
sbb
cmp
pop
adc
addb
sbb
lcall
lret
add
jmp
or
adc
dec
pop
ss
push
mov
push
mov
push
mov
or
push
mov
pop
aas
loop
xor
adc
jecxz
hlt
aam
sti
inc
mov
or
jmp
fimuls
jle
ds
je,pn
xchg
mov
xchg
arpl
sbb
mov
xchg
add
pop
rclb
xchg
sbb
sbb
fistpl
popa
sbb
shrl
jae
xchg
cmp
cmp
cmp
int3
pop
sbb
sbb
inc
out
je
call
subb
mov
xor
pusha
pop
shll
lds
data16
dec
ljmp
pushf
push
xor
cmpsb
jbe
xlat
inc
int
adc
sub
leave
test
add
sub
mov
stc
and
and
ret
push
int3
pusha
fiaddl
mov
mov
push
jbe
mov
aam
mov
cmp
sbb
and
jne
dec
lahf
vmovss
jp
sbb
insb
aaa
jecxz
jge
pop
adc
adc
ljmp
outsb
pop
sub
test
js
pop
jnp
aad
arpl
push
lds
ljmp
mov
xchg
jbe
inc
in
call
bnd
xchg
xor
pop
jne
pop
jnp
jmp
dec
into
clc
xchg
ljmp
ud0
repnz
mov
mov
outsb
pop
imul
sar
in
mov
test
cmp
mov
mov
xor
adc
test
test
into
shrl
and
cli
pop
adc
lret
mov
xor
xor
xchg
adc
shll
pop
inc
xchg
xor
icebp
mov
push
pop
lret
pop
stos
shll
jae
xor
dec
fs
in
shr
fs
stc
loop
stc
push
fidivs
jo
sub
in
xor
add
je
pop
lods
sub
dec
fcomi
xchg
jno
jmp
in
jl
ror
jbe
mov
xchg
xchg
xor
adcl
add
sbb
shl
scas
scas
scas
ss
xor
mov
push
mov
sub
jle
adc
into
pop
pop
aas
lcall
adc
pusha
les
movb
scas
fidivrs
aad
inc
rolb
stc
shl
xor
lock
int3
lock
cmp
mov
dec
jp
mov
dec
lods
and
adc
sbb
sbb
fdivrl
cmc
lcall
jne
pushf
repnz
js
nop
and
pop
fcomi
or
push
mov
push
or
notb
imul
pop
and
or
jg
or
push
stos
sub
xor
mov
mov
dec
lret
and
out
ds
sbb
mov
ret
aam
stos
mov
test
push
das
pop
adc
cwtl
push
pop
fwait
cs
hlt
add
repz
in
sarb
xorl
mov
xor
xor
mov
repnz
leave
xor
out
sbb
jmp
adc
push
mov
hlt
jl
lahf
inc
inc
pop
cmp
xchg
push
std
pushf
fcompl
dec
roll
jnp
stos
lods
push
mov
stos
jmp
rcrl
ret
push
scas
int
push
jge
loope
push
xor
outsb
mov
popa
mov
xor
or
push
inc
cwtl
sub
mov
sub
and
pop
xor
add
mov
jle
mov
arpl
push
incl
call
cmp
faddp
mov
popf
das
xor
cmp
or
dec
outsl
push
hlt
xchg
imul
aaa
mov
int
mov
pop
dec
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jmp
lahf
cmpsb
out
cltd
out
inc
push
push
mov
xchg
sbb
mov
stc
or
js
imul
sub
insb
cmp
imul
scas
and
mov
mov
int
mov
in
mov
mov
or
jno
cmp
adc
dec
jp
sahf
fdiv
aaa
inc
les
mov
dec
jae
test
leave
or
inc
inc
cmpsl
sub
enter
lret
mov
mov
mov
mov
cwtl
cmc
add
mov
stc
iret
xor
nop
xlat
dec
xchg
sbb
mov
int
inc
xchg
xchg
call
pop
imul
mov
lret
addr16
xor
ret
pop
mov
xor
popf
dec
aad
pusha
push
stos
ja
dec
push
dec
push
sbb
sbb
add
rcl
orl
test
out
test
imul
bound
cmp
pop
fisttpl
ss
aas
fs
ficoml
cmp
sub
outsl
cmp
lcall
fnstcw
sub
mov
push
cmp
cwtl
lahf
aaa
aad
adc
rcll
mov
out
jle
add
idiv
xor
xor
mov
loop
stc
mov
pop
dec
testl
in
xchg
into
mov
lcall
mov
les
fstp
test
jno
test
pop
andl
lcall
test
xor
mov
mov
inc
push
push
cli
out
fdiv
cmp
lret
add
das
jmp
shll
ss
push
lea
adc
pop
loop
loopne
mov
outsl
fs
mov
and
jb
add
pushf
lret
pop
hlt
mov
test
sbb
mov
inc
sub
dec
mov
jnp
add
mov
and
inc
scas
xor
push
mov
pushl
mov
mov
cmp
mov
stos
jle
rol
lcall
mov
dec
adc
loop
jl
rcr
sbb
orl
push
pop
cmp
xor
xchg
fmuls
lock
mov
sbb
shlb
js
test
dec
mov
and
jecxz
cmp
push
inc
lods
lahf
out
mov
outsl
pop
push
adc
in
icebp
adc
pop
mov
push
pop
sarl
por
stos
push
ljmp
mov
push
or
add
add
push
and
jg
cmp
int
out
rclb
ret
pop
pop
lcall
imul
pop
scas
jno
dec
sbb
xor
cmpsl
daa
xor
xchg
mov
and
sahf
sbb
mov
or
ljmp
pop
ljmp
test
jb
sbb
movsb
aam
mov
addb
xor
pop
lods
cmpsl
cs
imul
decl
out
add
jns
dec
test
fs
sbb
xchg
dec
pop
sbb
pop
idivb
scas
insb
adc
adc
add
sahf
inc
push
lret
ret
outsb
cbtw
pop
sbb
and
imul
popf
movsb
loop
and
push
sbb
orb
hlt
sbb
sti
cmpsl
pop
or
pushf
ljmp
cmp
outsl
js
sar
das
shrb
sub
mov
mov
test
add
cmp
jne
xor
jmp
mov
mov
jmp
ss
xchg
sbb
sbb
fwait
push
out
jl
ds
ficoml
sbb
jle
jl
shlb
lahf
mul
dec
lea
cmc
xchg
add
iret
add
aaa
rorl
xlat
in
mov
adc
test
add
fdivs
sbb
out
mov
aaa
cli
push
inc
int3
fwait
inc
aas
movsb
mov
dec
lret
inc
xor
into
xchg
xor
pusha
sbb
pop
pop
mov
jg
xor
mov
jbe
mov
mov
iret
push
insb
stos
mov
push
and
jbe
add
outsb
sub
cmp
stos
test
mov
fmul
xorl
push
js
fcmovne
lods
mov
iret
stos
mov
mov
pushf
jp
shl
adcl
mov
loop
mov
xchg
lods
push
add
jle
and
lods
and
pop
xor
fldln2
push
add
or
cmp
dec
movsb
cwtl
xchg
enter
mov
aam
adc
insl
xchg
cli
xchg
jmp
mov
aad
shll
stos
inc
mov
cmp
dec
inc
dec
je
fwait
adc
addr16
in
aaa
pop
cmc
xchg
popa
popf
sbb
mov
mov
fisttps
push
and
repnz
sbb
push
dec
loopne
call
rclb
in
ds
stc
divb
push
xlat
cmp
cmc
adc
fcoml
cmpsb
aaa
aad
daa
push
test
mov
mov
pop
decb
int
adc
test
clc
insl
and
mov
adc
mov
mov
jecxz
in
push
mov
mov
push
adcl
aas
out
cs
lret
int3
pop
or
add
push
cmp
std
xor
daa
push
adc
push
andl
dec
pop
cwtl
add
mov
add
cmp
jae
inc
cltd
test
pop
cmp
lods
cmp
inc
xchg
aam
aam
jecxz
ljmp
push
jne
nop
mov
sub
cli
daa
xlat
pop
dec
scas
sub
and
loop
inc
and
push
lock
mov
sbbl
jns
mov
sbb
ss
mov
adc
es
sbbb
fidivrs
xchg
hlt
sub
xor
cmpsb
div
adc
push
lahf
mov
add
adcl
js
mov
sarl
pop
loope
repz
iret
push
sbb
mov
ja
xor
xor
mov
fnsave
and
aaa
or
iret
mov
out
lret
or
cmp
add
push
xlat
ljmp
lds
loope
lods
dec
pushf
shrb
fs
inc
push
push
mov
insl
sub
mov
mov
pop
inc
pop
add
lahf
stos
mov
fldcw
fsts
jmp
fsubs
xor
xchg
pop
mov
fdivs
decb
pushf
jp
pop
imul
rorl
ljmp
pop
push
pop
cmp
mov
push
sbb
mov
or
mov
iret
js
jmp
cmc
stos
sbb
inc
mov
gs
add
xchg
dec
cld
insb
cmp
add
popa
daa
or
out
test
or
insl
and
fildll
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
jmp
mov
cltd
lahf
bound
mov
mov
mov
pop
gs
xchg
or
xchg
test
pop
andl
mov
lds
mov
shrl
xchg
mov
jo
dec
mov
int3
test
push
xor
loopne
push
ret
insb
mov
lods
xlat
repz
mov
push
insb
out
aas
fwait
popa
mov
sbb
lods
lods
mov
add
dec
ja
in
jno
push
std
and
and
fildl
adc
pop
or
jecxz
loopne
lds
sub
xor
xor
lds
sbbb
arpl
push
mov
cld
stos
test
icebp
pusha
mov
stos
adc
xchg
dec
gs
cli
les
nop
sub
mov
movsl
adc
mov
fdivr
or
lds
test
ds
mov
mov
pusha
jle
xchg
aaa
dec
pop
test
mov
mov
sub
push
lcall
dec
jnp
in
in
jo
mov
test
xlat
dec
push
mov
lods
mov
jb
lock
in
out
inc
add
xchg
cld
sbb
xlat
addr16
sti
outsl
mov
lahf
cmc
mov
sub
sbb
mov
in
and
nop
pop
cmp
push
test
jge
or
jns
inc
add
addr16
fdivl
mov
add
and
mov
push
icebp
xor
xchg
sub
mov
rcl
shl
punpckhdq
dec
js
sbb
dec
sbb
ds
cmpsb
call
cwtl
hlt
out
mov
xor
and
jae
scas
pop
mov
and
pushf
fs
cmpsb
or
cli
cmp
push
xor
mov
sub
jno
dec
adc
clc
jmp
pop
push
lcall
mov
pop
mov
and
enter
stc
scas
scas
test
cmp
mov
das
xor
jo
sbb
ret
adcb
xor
pusha
lea
sbb
mov
adc
ja
push
scas
xor
xor
xchg
test
out
xchg
adc
sti
mov
fimuls
xchg
add
cmpsb
sbb
in
ror
mov
out
and
and
call
sbb
add
xchg
shrb
add
mov
imul
fdivl
inc
mov
jp
loopne
mov
stos
or
sub
sbb
add
inc
mov
jno
mov
dec
cmp
test
arpl
sub
push
sahf
xor
xchg
mov
mov
pop
jge
pop
pushw
mov
sub
or
test
shlb
mov
mov
ret
xchg
mov
mov
or
divl
mov
in
mov
faddl
ret
int3
mov
nop
and
test
jg
test
push
sub
and
jnp
cmp
xor
faddl
mov
imul
and
mov
sbb
aad
sbb
mov
call
and
fsubrp
rcll
lea
cmp
mov
push
push
jo
push
clc
mov
stc
mov
pushf
push
sub
xchg
daa
je
int
decb
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
jmp
dec
inc
mov
push
push
push
or
sbb
xor
adc
or
loope
mov
dec
jae
add
lret
sbb
cmp
sahf
mov
pushf
dec
arpl
dec
mov
xor
sbb
and
rcrl
mov
scas
out
sar
int
or
push
imul
jns
out
lcall
cmpsl
and
iret
inc
fimull
dec
ss
lods
jns
into
fcmovnu
sbb
jno
insb
jecxz
pop
push
in
movsl
push
repnz
and
mov
lcall
addb
sbb
sahf
std
into
or
add
add
jecxz
dec
adc
out
add
and
popa
dec
mov
sbb
ret
fstl
xor
xchg
fildl
jmp
cwtl
jle
or
fs
adc
shr
fmull
and
outsl
andb
fbld
aad
daa
js
jns
jbe
ror
ljmp
and
ja
adc
shr
in
jno
int
lret
rcll
cld
mov
xchg
sub
iret
rcr
scas
push
es
stos
sub
pop
lret
test
jae
mov
into
mov
iret
sti
stos
je
pop
out
cwtl
movsb
and
inc
into
inc
out
adcb
loop
and
popf
mov
shll
leave
scas
data16
int3
jo
test
fcmovne
push
out
and
add
ja
sbb
mov
sbb
pop
jp
jle
fldl
outsb
mov
aas
fwait
pop
jne
lock
mov
inc
adc
fcmove
popf
js
jle
mov
sahf
push
or
cld
data16
xor
imul
popf
mov
pop
add
xchg
mov
jmp
sub
cmc
orb
rcr
pusha
xorb
sub
aad
adc
aas
pop
pop
sub
cmp
sarl
xchg
adc
lea
mov
subl
cmp
xchg
sti
and
dec
mov
je
aad
adc
dec
pop
sub
fldt
test
les
es
adc
in
loop
jle
or
scas
mov
dec
movsb
cld
xchg
subl
dec
lods
add
clc
outsb
jo
xor
in
pusha
cld
into
xor
insl
push
psubsw
out
inc
add
fsts
mov
inc
xchg
loope
sub
sub
enter
in
jmp
pop
pop
std
dec
jns
inc
pop
dec
shlb
adcl
arpl
and
repz
fisubl
dec
and
cli
rcll
push
aad
sbb
xor
int
dec
stc
out
jg
enter
xchg
scas
sub
adc
js
icebp
jno
pop
int
push
aad
mov
inc
cli
call
das
push
dec
pop
mov
dec
add
rcrl
ja
sub
inc
ljmp
test
loope
ds
imul
mov
adc
mov
jae
xchg
fisttpll
xchg
adc
ret
mov
and
scas
std
ror
adc
repz
in
rolb
ror
clc
mov
mov
lock
lods
push
fwait
test
in
mov
cli
test
adc
ljmp
push
sbb
add
fs
inc
add
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
jmp
inc
mov
and
sbb
movsl
mov
mov
ja
loope
nop
lock
jb
out
div
adc
ja
mov
push
or
mov
fildl
ds
nop
jae
test
xor
movsb
or
shl
lret
std
insb
or
jge
sahf
sbb
repnz
incl
sbb
lock
bound
stc
out
mov
cmp
mov
into
lds
fsubrl
dec
sub
lods
out
fadd
lods
inc
sti
rolb
mov
movl
adc
cmc
mov
xchg
pop
add
test
test
pushf
ja
int3
mov
or
dec
mov
mov
cltd
loopne
push
mov
repnz
inc
mov
shrb
cmp
inc
and
insb
pop
cs
ds
pop
pop
sbb
call
shll
jmp
inc
mov
sarl
in
out
scas
mov
punpcklwd
sub
or
adc
fisubs
mov
xor
mov
cltd
push
xchg
xchg
arpl
fbstp
push
jb
sbb
enter
mov
cmpsl
shll
enter
pop
xchg
inc
cli
ror
insb
xor
adc
push
fidivrs
jo
std
shlb
das
stos
rcrl
stos
sub
insb
inc
cmp
jmp
insl
notl
sbb
pop
arpl
das
mov
ficompl
cli
mov
cmp
jg
mov
insb
jo
adc
cmp
mov
jne
adc
cmpsl
mov
ss
aad
mov
test
fs
xchg
aam
fwait
mov
cmp
push
mov
dec
cmpsb
sti
dec
enter
sub
jns
mov
xorb
cmp
sahf
nop
int3
out
xchg
insl
jge
insl
fsts
scas
push
sti
and
mov
lret
fistl
cmpsb
ljmp
xchg
adc
sbb
xor
leave
mov
out
ret
js
cmp
push
jbe
xlat
fistps
add
push
xor
sub
xchg
cld
cmp
shll
sub
xor
push
jecxz
mov
or
aam
pop
mov
xor
sub
and
pop
lea
stc
mov
hlt
dec
sub
mov
je
mov
ret
testl
call
out
lret
data16
xor
jle
sub
push
mov
and
icebp
pop
lcall
lods
inc
popf
arpl
movaps
jns
imulb
lods
std
dec
fs
rolb
mov
push
jmp
xor
sub
iret
data16
lea
mov
sub
imul
push
movsb
mov
push
in
arpl
xor
xchg
fld
inc
lea
lock
sbb
out
lahf
add
mov
add
push
push
jl
mov
sbb
lret
inc
sub
popf
andl
shlb
mov
cmp
jns
in
pop
jle
std
mov
or
fsubrl
jne
repnz
int3
aad
jb
push
popa
imul
xor
mov
push
adc
mov
sub
pop
mov
cmp
daa
dec
cmpsl
push
mov
dec
clc
hlt
xchg
es
add
inc
sbb
mov
loopne
or
jmp
test
nop
lahf
jp
and
xor
dec
outsl
mov
aaa
push
sbb
ja
test
out
addr16
dec
xchg
cmpsl
cmpsb
lcall
insb
rcl
lea
pop
mov
add
insl
inc
mov
and
int
jl
ret
aam
in
cmp
sysret
jecxz
xor
repz
ja
stc
fs
loope
fnstcw
aam
push
gs
push
inc
mulb
inc
imul
shl
xor
mov
daa
and
out
cmp
sahf
jecxz
cmp
scas
std
fwait
xchg
pop
shrl
add
lahf
mov
add
pop
mov
jp
mov
lods
mov
add
fldcw
push
xchg
lahf
js
mov
adc
mov
je
test
repz
call
lret
jo
pop
ljmp
stos
mov
add
xchg
push
sbb
scas
mov
divl
stos
std
or
xchg
pop
mov
xchg
int3
add
or
mov
inc
rclb
out
mov
mov
dec
movsb
cld
xchg
xor
sbb
xor
fxch
pop
fs
xchg
loopne
sub
ljmp
jb
call
jae
sbb
scas
push
popf
pop
cmp
push
jno
or
dec
inc
dec
ret
inc
mov
pop
icebp
or
xchg
arpl
sub
cmp
inc
dec
das
movb
pop
sbb
loop
mov
aad
icebp
fadds
jnp
sbb
mov
enter
je
mov
fsts
adc
out
ss
push
adc
jns
push
into
rclb
xchg
incb
add
cmp
dec
jae
push
call
cltd
push
fisubs
cmp
cli
popf
clc
sbb
loop
popf
ret
jl
pop
pop
loope
pop
or
xor
and
aaa
and
pop
lods
inc
pop
adc
adc
shrl
or
xchg
or
loopne
sub
scas
adc
aaa
test
adc
pop
fcomp
in
xchg
stos
push
dec
iret
mov
xor
cmp
loopne
stos
lea
xor
mov
jmp
pusha
pop
movsl
xor
int
and
call
cmp
icebp
stc
dec
out
inc
push
mov
inc
push
es
pop
out
xchg
pop
xor
movsb
dec
mov
sub
ret
cmp
jns
cmp
sbb
mov
dec
inc
mov
xchg
imul
pop
inc
icebp
ds
rolb
xlat
sbb
mov
mov
out
cmpsb
jbe
xchg
xor
or
out
xchg
mov
add
mov
aaa
icebp
lcall
mov
out
fdivr
mov
in
fstp
outsb
xor
mov
into
nop
add
add
or
ret
lods
pushf
xor
lods
ja
jmp
in
mov
fnstcw
int
sub
jae
sub
popa
add
fs
or
or
dec
cmpsb
and
cmc
jae
in
jne
mov
aaa
pop
mov
cmc
sti
and
icebp
cltd
es
push
inc
xor
dec
sbb
pusha
cmpsl
cmc
cmc
mov
lret
xchg
jns
cmp
lods
es
icebp
push
data16
pop
in
lret
push
sbb
mov
lods
xchg
lds
lret
scas
cmpsb
or
insl
popf
icebp
adc
mov
xchg
xor
mov
push
jmp
stos
out
dec
int
jg
jg
stc
adc
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
or
push
cmpl
movl
mov
mov
movl
jmp
mov
cmpl
jg
push
push
call
sbb
mov
xor
mov
sbb
neg
xor
adc
mov
mov
and
push
mov
mov
sub
imul
push
add
movl
sub
movl
xorl
movl
mov
add
mov
xor
sbbl
div
xor
imul
neg
mov
orl
xor
and
xor
mov
xor
andl
div
orl
sub
cmpl
mov
mov
notl
jmp
movl
notl
cmpl
je
pushl
push
push
pushl
call
add
add
sub
adc
sub
movl
and
mov
mov
mov
sbb
movl
addl
movl
xor
movl
or
jmp
ret
push
sbb
mov
mov
sub
push
sbb
mov
jle
in
cmpsb
je
sti
push
push
andb
out
push
add
jle
out
and
scas
insl
daa
jbe
adc
and
push
cs
insl
pop
into
sahf
push
xor
inc
cmp
sbb
mov
es
ja
sbb
cmp
shlb
dec
xor
fsubr
f2xm1
xor
sahf
lods
imul
mov
mov
jmp
mov
pop
aaa
push
lcall
cmp
push
xorb
data16
and
cwtl
inc
and
push
cmp
popa
aad
dec
jne
lods
push
popa
cltd
mov
pop
inc
scas
push
inc
push
cwtl
sub
jo
push
xchg
fsub
xor
fs
jnp
inc
adc
lret
mov
mov
sub
cld
movsb
cmp
cmp
push
push
or
call
cmpsb
pop
int3
lock
or
into
ret
notb
out
lock
sbbb
test
jbe
cmpsl
sbb
loope
shl
hlt
lret
sahf
adc
lock
xchg
dec
inc
lahf
ja
data16
mov
es
fcmovb
pop
lods
out
xor
mov
outsb
aad
or
pusha
test
divb
pop
xchg
movsl
popf
cmp
mov
aad
and
sub
mov
mov
mov
add
inc
enter
jne
divb
jmp
add
fstl
mov
js
iret
out
xchg
int
call
jmp
and
ret
sbb
adc
adc
or
xchg
add
data16
mov
arpl
or
add
dec
nop
int
xchg
sti
jg
xor
adc
cli
jbe
jb
shrl
jo
cmpsl
or
idivb
push
pop
lds
roll
rorl
push
push
fadds
xchg
sub
pop
and
sbbl
add
jno
in
fnstcw
insl
adc
adc
sbb
jnp,pt
sub
daa
xorb
inc
in
jmp
jo
out
push
and
cmpsl
in
sub
jecxz
add
cmp
sti
es
sub
adc
inc
sbb
or
lods
mov
loop
mov
push
adc
dec
sbbl
mov
stos
xor
icebp
dec
aaa
pop
aaa
rcrb
cltd
push
inc
mov
jmp
cmpl
int
fistps
jno
xchg
scas
jmp
jns
sbb
ss
or
icebp
sub
aad
mov
inc
xchg
insl
sar
es
push
pop
ret
inc
mov
inc
sbb
mov
xor
mov
adc
mov
pop
push
xchg
jmp
or
push
adc
cmp
ret
shrb
repz
shlb
push
ret
jl
fimull
or
jbe
or
bound
das
addl
add
xor
xor
sbb
xor
movzwl
sbb
imul
and
mov
cmpl
mov
mov
mov
jmp
movl
cmpl
jb
pushl
push
push
call
sub
inc
and
movl
and
xor
and
and
sub
mov
jmp
adc
fstps
and
cmpsl
repz
push
sub
sbb
and
sbb
pop
pop
cs
pushf
mov
adc
movsl
push
call
sub
repz
cmpsb
mov
addr16
popf
add
and
pop
pop
popf
xor
cmp
cmp
add
dec
cmpsb
ja
shlb
mov
jmp
insl
xor
insl
add
xchg
shl
or
sbb
in
aaa
les
pop
lcall
popf
push
inc
sub
pop
add
rol
inc
movl
ret
int
mov
push
xor
jmp
push
ret
cs
sub
xor
sub
mov
lods
shlb
dec
jp
mov
jmp
ret
xor
sti
cmp
sub
cli
sub
pushf
push
cmp
out
in
jp
popa
dec
push
push
xchg
jl
jecxz
rorb
dec
sbb
out
jmp
test
call
pop
jae
pusha
lahf
or
push
jecxz
inc
aam
sub
dec
pop
lock
enter
pop
lret
es
mov
push
addr16
mov
neg
int3
xor
xor
and
test
cmp
xchg
pop
add
nop
xor
and
dec
mov
pop
fldcw
xchg
mov
xor
add
bound
fs
sbb
cmp
aad
filds
dec
mov
mov
fucomi
test
out
rcll
stos
push
pop
shrb
push
sbb
test
fcmovbe
or
fwait
imull
insl
fs
mov
inc
sti
aad
sti
jl
scas
decl
lahf
nop
adcb
cwtl
cmp
and
enter
and
cmpsb
jae
jae
icebp
jnp
mov
nop
std
push
shll
jp
or
arpl
sub
xor
xor
aas
mov
pop
or
and
xchg
hlt
xor
das
push
jge
inc
xor
sbb
fs
dec
dec
bound
jno
or
bound
lods
mov
insl
sbb
out
out
or
adcb
sbb
cmpsl
loop
bound
lret
loopne
in
ret
add
add
mov
ss
dec
xchg
out
mov
cmp
hlt
mov
ret
cli
test
adc
or
pop
aam
pop
sbb
in
add
push
mov
mov
bound
aad
arpl
test
std
sbb
imulb
sarb
ljmp
sbb
mov
ss
jb
test
movsb
gs
jne
xchg
add
and
daa
fisubl
fstps
movsl
loope
je
and
insl
aad
inc
push
lcall
stc
notl
adc
and
jmp
jnp
out
and
lea
lret
sub
or
or
mov
xor
jmp
push
aas
sbbb
cmpb
push
jb
and
mov
jo
inc
push
cmp
orl
nop
mov
add
add
movzwl
mov
mov
jmp
not
mov
cmpl
jbe
pushl
pushl
pushl
push
push
push
push
call
sub
movl
and
or
xor
or
mov
sbb
movl
movl
movl
orl
mov
imul
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
ja
pushl
push
call
sub
incl
add
or
sub
mov
cmpl
not
movl
movl
mov
jmp
movl
cmpl
ja
push
pushl
call
negl
andl
and
movzbl
sbb
mov
subl
and
imul
and
imul
mov
sbbl
and
cmpl
movl
mov
not
jmp
movl
notl
cmpl
jg
push
pushl
push
pushl
push
pushl
push
push
pushl
pushl
call
inc
adc
and
movzwl
add
mov
addl
adcl
dec
subl
or
movl
mov
adcl
xor
or
mov
adcl
mov
xorl
lea
cmpl
mov
mov
mov
notl
jmp
movl
cmpl
jae
push
call
dec
orl
mov
add
sbb
mov
adc
and
mov
mov
mov
xor
movl
not
movl
subl
movl
xor
mov
cmpl
movl
notl
mov
jmp
movl
mov
cmpl
jb
push
push
call
movzwl
xor
mov
add
mov
mov
adc
inc
xor
sub
andl
xor
add
mov
addl
or
andl
add
or
mov
addl
or
add
add
or
xor
mov
cmpl
mov
mov
movl
jmp
movl
mov
cmpl
jne
pushl
push
push
call
sub
xor
add
mov
add
adc
andl
movl
cmpl
mov
movl
movl
mov
jmp
mov
cmpl
jge
push
push
push
call
and
add
adcl
and
sub
subl
movl
or
movl
movl
mov
add
xorl
mov
subl
sub
decl
mov
lea
or
adc
sub
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
je
call
sbbl
xorl
add
andl
or
movl
movl
xor
mov
movzwl
or
add
cmpl
movl
movl
jmp
mov
cmpl
jg
push
call
adc
sbb
movzwl
add
addl
orl
mov
and
imul
mov
addl
imul
xor
mov
div
or
sub
mov
cmpl
mov
mov
jmp
mov
movl
cmpl
jb
push
pushl
call
adc
dec
movzbl
sbb
mov
xor
movzwl
or
xor
add
add
and
movl
cmpl
mov
mov
mov
movl
jmp
not
cmpl
jne
push
push
call
and
mov
or
mov
mov
add
mov
sbb
adc
movl
xor
movl
or
mov
sub
mov
orl
xor
xorl
div
imul
add
cmpl
mov
movl
jmp
movl
movl
cmpl
jne
push
call
and
adc
sub
mov
sbb
mov
andl
add
mov
adcl
xor
or
xor
or
mov
subl
div
cmpl
mov
mov
movl
mov
jmp
movl
cmpl
jbe
push
push
pushl
call
neg
sbb
andl
mov
xor
movzbl
sub
movl
xor
adc
mov
movl
mov
add
mov
movl
xor
movl
cmpl
mov
mov
mov
movzwl
jmp
mov
mov
cmpl
ja
pushl
call
and
xorl
add
or
mov
mov
sbb
sbbl
mov
mov
sub
shr
sub
xor
mov
imul
mov
sbbl
and
xor
mov
sub
mov
movl
movl
sub
mov
xor
or
xor
add
xor
mov
or
sub
mov
adc
movl
sub
movl
movl
cmpl
notl
mov
jmp
mov
cmpl
jne
pushl
call
andl
add
movzwl
and
and
add
mov
mov
sub
and
movl
not
movl
movzbl
or
movl
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
push
call
or
and
adc
adc
sbb
movl
mov
and
add
jmp
test
cmp
pop
cmp
mov
jle
jo
and
sbb
ret
in
in
xchg
test
sub
imul
cmp
inc
inc
mov
rcll
in
int
cltd
sub
repnz
or
inc
pop
adc
xor
cmp
cwtl
dec
push
je
ret
lock
loope
lahf
xchg
int
push
dec
gs
push
or
adc
or
xchg
stos
cwtl
pop
jle
cld
mov
fnstsw
pop
mov
pop
movsb
std
jbe
bound
ret
jo
in
lods
js
cmp
sub
outsl
pop
addr16
inc
lret
mov
stc
stc
pop
je
jmp
call
push
pop
or
sub
enter
mov
dec
sahf
dec
pop
call
and
lds
out
movsl
clc
cltd
inc
nop
repz
cmc
push
js
sub
aaa
inc
mov
mov
test
lcall
inc
sbb
adc
andb
dec
sbb
cmpsb
sbb
xchg
clc
iret
les
mov
lret
aam
ret
dec
xchg
add
adc
scas
mov
jl
fdivrl
dec
frstor
in
jecxz
push
cmpsb
mov
inc
cmp
xor
scas
pushf
jp
sub
pop
sbb
aas
add
fs
or
dec
pop
pop
push
shll
or
and
jne
xchg
mov
xchg
fnsave
cld
mov
xor
xchg
jge
mov
or
xorl
addb
in
and
pop
mov
mov
test
orb
fcmovne
je
inc
sub
or
pop
repz
dec
or
jns
mov
incb
iret
es
ret
add
pop
sub
add
call
jl
sbb
shrl
pop
pushf
das
sub
sub
jne
out
addr16
jbe
xchg
xor
mov
ret
mov
inc
outsb
jno
add
movsl
add
or
adc
sub
rorl
inc
test
xchg
sub
cli
xor
lods
ljmp
pop
mov
ja
sub
int
lods
lcall
adc
inc
xor
cmp
xchg
pop
dec
loope
sub
sbb
stos
and
mov
rcrl
leave
in
cmpsl
jne
cmp
lret
sub
pop
sub
add
shr
cld
inc
outsb
rcll
jo
mov
sbb
addl
cmp
pop
sub
arpl
fwait
push
into
enter
mov
popl
cmpsb
lods
xchg
or
out
out
sbb
sbb
mov
jge
dec
dec
push
jp
hlt
xor
mov
mov
push
cmp
fstpl
adcl
push
mov
adc
outsb
andl
ret
outsl
dec
cmp
jle
push
fs
adc
cwtl
int3
loope
pop
mov
xchg
test
jnp
jmp
mov
orl
sub
mov
add
mov
imul
imul
mov
or
and
mov
subl
lea
addl
push
addl
call
cmpl
mov
mov
mov
movl
jmp
movl
notl
cmpl
jae
pushl
push
pushl
pushl
push
call
adc
xor
add
mov
mov
sub
and
sbb
mov
mov
add
imul
sbb
add
and
cmpl
mov
mov
movzwl
jmp
movl
mov
cmpl
jae
push
call
movzwl
add
adc
addl
and
or
sbb
sub
cmpl
movl
movl
movl
notl
jmp
mov
cmpl
je
push
pushl
call
subl
movzwl
xor
mov
mov
or
xor
add
orl
xor
addl
mov
div
xor
xor
add
adc
mov
sbbl
movl
movl
cmpl
movl
mov
jmp
movzwl
cmpl
jne
push
pushl
push
push
pushl
call
mov
sbb
and
sbb
mov
or
mov
mov
sub
and
adc
movl
movl
adc
movl
cmpl
not
movl
jmp
movl
notl
cmpl
jge
push
push
push
pushl
call
xor
mov
or
mov
mov
and
and
and
mov
xor
movzwl
and
mov
sub
movl
xorl
movl
sbb
movl
jmp
movsl
mov
push
and
stos
popf
push
push
sbb
sbb
sub
push
mov
outsb
inc
mov
fsubrs
sbb
dec
jne
jg
mov
inc
arpl
push
sub
sub
addb
aam
push
push
lea
sub
movsl
pop
xor
sbb
xor
dec
xor
sub
sub
sbb
fadds
fcomps
or
jae
dec
icebp
push
sub
movsl
mov
pop
jne
xchg
cli
inc
sub
adc
add
dec
jo
pop
fidivrl
xor
movsl
lret
and
dec
xor
inc
test
daa
or
and
out
mov
jns
add
adc
adc
xor
lcall
mov
mov
int3
push
in
outsl
es
aam
in
push
push
or
sbb
cmp
jne
jnp
pop
jmp
je
mov
mov
dec
mov
jne
enter
in
inc
fisubrs
jle
dec
addr16
arpl
fiadds
fdiv
xor
movsb
imul
fisubs
or
pop
daa
fiadds
xchg
lret
push
push
lods
mov
ja
sbb
sub
xor
clc
cld
sbb
push
push
mov
cli
das
shlb
fimuls
adc
or
nop
movsl
cmp
xchg
test
push
mov
mov
adc
xchg
ret
cld
push
std
popa
dec
lock
or
add
mov
cmc
mov
into
or
fsts
std
add
lret
push
jecxz
int
cmp
inc
xor
jb
gs
out
mov
xchg
nop
dec
mov
or
out
push
fadds
sub
loope
push
in
inc
clc
push
dec
xor
inc
js
mov
ljmp
into
jns
sbb
sub
aas
test
ljmp
andl
jo
cli
shl
jmp
mov
sub
sub
test
mov
xchg
lea
mov
dec
in
inc
sahf
or
or
testl
sub
scas
and
push
decl
mov
sub
loope
ljmp
ret
shrb
cmp
sub
pop
mov
mov
repnz
xchg
dec
stos
lcall
adc
shll
outsb
lods
mov
enter
scas
int3
test
movsb
pop
lds
int3
pop
xor
pop
mov
rclb
cmp
dec
out
push
mov
popa
movsb
mov
jmp
push
sbb
fwait
xchg
clc
insl
aas
fistl
adc
mov
mov
fsubp
scas
outsl
popf
fistl
adc
lds
mov
and
popf
mov
xor
insb
into
jmp
icebp
std
stos
push
mov
hlt
repnz
sub
or
in
scas
jb
lret
scas
inc
enter
mov
adc
xor
dec
jno,pt
iret
pusha
push
sarl
or
out
adc
movl
movl
movl
xor
movl
xorl
mov
cmpl
movzwl
mov
jmp
movl
movl
cmpl
jne
push
push
call
subl
inc
inc
and
and
sbb
and
mov
adc
mov
mov
sub
and
add
sub
cmpl
mov
mov
jmp
movl
cmpl
je
pushl
push
pushl
pushl
call
mov
or
xor
add
mov
sub
or
mov
or
add
sbb
sub
or
jmp
mov
lds
stos
xorb
inc
adc
ss
push
sbb
lods
cli
sub
out
inc
push
divl
test
in
sbb
mov
aaa
ds
sahf
ja
fdivr
aam
orb
pop
push
enter
xchg
jnp
mov
jae
das
jae
lcall
sbb
xlat
scas
pop
jmp
outsb
mov
fwait
push
adc
jbe
or
repnz
jns
mov
push
negb
gs
flds
stos
cmp
sbb
add
sub
inc
fisubl
mov
fwait
cmp
cmpsl
out
adc
imul
push
jbe
jg
hlt
mov
testb
loope
popa
adc
fidivl
mov
in
adc
subl
sbb
mov
loope
xor
or
mov
dec
ja
inc
mov
adc
push
push
cmp
mov
shll
lcall
xchg
add
scas
jno
loope
mov
fwait
push
add
shlb
aam
cmp
push
outsb
mov
cld
inc
in
pop
hlt
nop
arpl
rcrl
and
push
push
cld
aaa
dec
pop
mov
adc
mov
mov
or
imul
sbb
xor
sbb
popf
inc
xchg
ds
jns
xchg
cmc
cmp
cmc
and
sub
add
fildl
fdivs
jge
and
test
pop
mov
ret
pop
pushf
or
jne
outsb
ret
call
gs
mov
jl
jl
cli
jno
imull
pop
xor
push
inc
dec
lock
nop
in
clc
mov
mov
in
xchg
fs
into
mov
lret
mov
std
adc
fistpl
call
inc
cld
add
inc
xchg
loope
movsb
jne
in
test
test
push
xchg
jge
adc
pop
or
movsb
xchg
rcr
arpl
or
mov
in
mov
repz
js
pop
xor
mov
loop
xchg
xchg
fsubrl
mov
push
jl
cmpl
jmp
and
inc
jne
hlt
cmp
fs
mov
es
mov
mov
sti
into
sbb
cwtl
adc
jmp
loopne
dec
sbb
jns
in
cmpl
xchg
push
or
adc
fwait
push
in
inc
insl
lcall
insl
inc
mov
and
mov
enter
pop
dec
popf
in
add
fwait
das
cmpsb
call
inc
cmp
das
sbb
xchg
and
xlat
pop
or
into
testl
popa
jo
jmp
mov
test
test
push
call
daa
lods
loope
adc
push
pop
gs
ljmp
pop
adc
sbb
cli
lods
push
popf
push
xchg
inc
jp
cmpsl
imul
in
pop
das
or
xchg
inc
test
lds
out
and
and
movsb
adc
mov
lods
mov
jge
inc
adc
sbb
jp
xorl
fs
es
addr16
mov
sbb
imul
cmpl
mov
movl
jmp
mov
movl
cmpl
jle
push
push
call
add
xor
adc
xor
mov
or
mov
and
negl
dec
movzwl
sbb
mov
mov
xor
add
xor
add
sub
xor
lea
cmpl
movl
mov
mov
jmp
movl
cmpl
ja
pushl
pushl
pushl
call
neg
xor
or
xor
add
sub
or
sub
mov
sbb
mov
add
subl
cmpl
mov
movzbl
movl
mov
jmp
movl
cmpl
jle
pushl
call
xor
add
xor
mov
sbb
movzwl
or
mov
decl
subl
mov
mov
mov
add
mov
neg
xor
cmpl
movl
movl
movl
mov
jmp
movl
cmpl
jae
pushl
push
pushl
push
pushl
call
sbb
adc
and
sbb
add
mov
lea
and
mov
sub
add
mov
movl
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
test
fdivr
and
lcall
inc
mov
rorl
sbb
sbb
aas
movsl
and
xchg
cmp
call
and
sub
add
scas
out
outsl
xchg
inc
jno
mov
sbb
lret
aas
jg
out
push
mov
sbb
in
jbe
stos
mov
int3
adc
and
loop
cmpsb
push
cmp
idivb
mov
xchg
jns
pop
pxor
fwait
add
add
shll
test
fstps
scas
push
xchg
and
push
inc
jb
or
mov
orb
mov
js
sbb
inc
hlt
xchg
subb
jge
and
cld
inc
int
or
out
leave
dec
mov
or
out
cltd
nop
mov
inc
sub
and
adc
or
adc
inc
cmp
in
sub
flds
cmpsl
xchg
shrb
xchg
in
xor
adc
ljmp
imul
lea
mov
push
call
inc
jecxz
and
mov
aam
subb
lret
loopne
sahf
jns
pop
call
mov
inc
insb
sub
fildl
xchg
scas
push
cmp
sbb
repnz
mov
dec
es
cmpsl
stos
aam
mov
clc
test
lods
add
pop
and
sub
mov
bswap
test
mov
loop
jne
sbb
mov
sbb
movsb
out
cmc
jne
cwtl
jp
fists
hlt
int
cmp
mov
or
stos
push
cmpsl
aaa
mov
xor
mov
dec
mov
inc
idivb
mov
seta
adc
sbb
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
movl
movl
jmp
mov
cmpl
jbe
push
call
incl
subl
incl
adc
orl
not
push
push
sbb
mov
or
jne
mov
mov
xor
div
xorl
mov
mov
div
mov
mov
jmp
mov
sbb
mov
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jle
push
call
xorl
sub
sbbl
dec
not
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
orl
subl
movl
cmpl
movl
je
xor
add
mov
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
orl
shld
movl
shl
ret
inc
mov
subl
xor
and
shl
ret
xor
xor
ret
add
add
add
cmp
cmp
sub
jno
ja
int3
fsubrl
jo
popa
insb
push
lods
xor
insb
popa
outsb
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
outsl
add
add
jne
je
xor
xor
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
in
and
dec
insb
gs
arpl
push
outsl
inc
jne
jae
jb
je
inc
add
daa
inc
add
daa
inc
add
and
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
mov
and
inc
add
inc
add
and
inc
add
es
add
inc
add
inc
add
daa
inc
add
and
push
movsb
scas
or
movsb
mov
inc
add
inc
add
add
es
add
and
inc
add
es
add
and
inc
add
inc
out
sbb
inc
add
es
add
loopne
jbe
pop
cmpsb
add
inc
add
rcl
pop
jle
add
outsl
arpl
pop
xor
cmpsl
mov
xchg
test
and
push
movsb
stos
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
xchg
and
test
inc
add
loop
js
lcall
and
add
nop
and
and
addb
add
hlt
clc
sarb
sub
jle
add
add
jl
add
jmp
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
mov
jb
pop
sub
inc
add
fbld
adc
popa
arpl
popa
outsl
gs
jae
outsl
insb
gs
in
jg
ja
jp
inc
push
movsl
push
dec
gs
popa
push
jne
jae
imul
inc
jae
imul
jb
gs
lds
xor
fs
push
gs
popa
insl
imul
add
add
push
mov
jb
jno
or
lods
repnz
je
je
js
cmc
outsl
insl
popa
imul
popa
jb
push
imul
mov
jns
outsl
addr16
add
sub
icebp
gs
jae
popa
je
insl
add
in
mov
insl
imul
gs
add
jne
popa
or
popa
push
loope
stos
je
push
popa
jb
jae
imul
loope
aad
jb
imul
je
adc
outsl
gs
imul
outsb
shrl
ja
outsl
popa
outsb
gs
imul
imul
inc
jb
sbb
jo
addr16
jo
fs
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
insb
jae
bound
bound
add
insb
popa
inc
gs
fs
add
push
outsl
jns
add
jns
popa
outsl
bound
add
push
add
arpl
popa
insb
jne
gs
insl
imul
outsl
jb
jo
ja
gs
jb
bound
add
outsb
addr16
outsb
arpl
add
jne
je
outsb
push
popa
jb
add
jb
popa
insb
insl
je
outsl
ja
jb
jo
insl
jns
push
outsb
push
imul
inc
outsl
popa
insb
popa
imul
je
outsl
outsb
gs
inc
push
jns
jns
jne
imul
outsl
je
gs
outsl
je
imul
jo
popa
insb
dec
outsb
popa
jo
add
je
gs
jae
js
popa
data16
insb
popa
imul
gs
jb
inc
insb
popa
bound
je
insb
jns
push
popa
inc
popa
insb
insb
push
outsl
insl
outsl
jb
data16
jae
bound
add
outsb
gs
je
gs
add
outsl
inc
popa
imul
jo
fs
je
imul
outsl
add
jne
add
popa
add
add
add
insl
add
add
jb
ja
imul
outsb
add
add
ja
imul
push
add
je
jbe
add
je
add
insb
add
imul
outsl
add
je
popa
add
push
add
arpl
imul
add
outsl
add
add
jns
add
insb
add
jns
jbe
popa
add
popa
add
outsl
add
add
jb
jae
imul
imul
bound
outsl
add
imul
js
jae
outsl
add
popa
add
je
add
bound
jns
add
add
add
add
js
imul
imul
popa
add
add
add
ja
insb
add
popa
add
jo
popa
add
imul
add
jbe
add
jb
jne
je
insl
add
arpl
jne
jo
add
jae
outsl
add
imul
outsl
add
jb
jae
outsl
add
add
outsl
add
popa
add
jae
data16
jb
popa
add
add
add
adc
out
adc
js
adc
test
adc
fs
adc
jp
adc
enter
loop
adc
ja
adc
cmp
adc
rclb
adc
sbb
add
add
add
adc
mov
adc
out
sbb
adc
add
jbe
add
addl
sbb
inc
add
addl
sub
inc
add
addl
cmp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
addl
repz
sti
addl
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
or
add
push
adc
cmpsl
outsl
adc
push
popa
adc
add
add
jle
add
adc
mov
adc
aas
inc
adc
pop
and
add
jl
add
adc
inc
push
adc
mov
pop
adc
sub
add
ja
add
sbb
add
adc
or
adc
sbb
data16
xchg
bound
add
dec
adc
in
adc
sub
add
adc
imul
rolb
in
adc
mov
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
and
add
push
adc
testb
add
sbb
add
or
add
pop
adc
adc
cmp
add
sbb
add
adc
push
adc
mov
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
pusha
adc
pop
js
add
dec
adc
cmp
adc
aam
adc
or
adc
pop
push
adc
mov
xor
add
and
adc
adc
add
dec
adc
jae
adc
dec
add
inc
add
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
cmp
dec
add
add
adc
add
add
add
add
add
loopne
add
add
add
test
add
les
add
call
xchg
add
add
xchg
add
add
add
add
outsb
xchg
add
add
xchg
add
add
rolb
add
lock
add
xchg
add
xchg
add
xchg
add
xchg
add
add
push
xchg
add
add
add
addb
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
sbb
add
mov
add
add
pop
mov
add
add
jl
add
mov
add
lods
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
mov
add
mov
add
mov
add
add
pusha
mov
add
add
orb
add
add
add
add
lret
add
mov
add
mov
add
add
push
mov
add
mov
add
mov
add
add
data16
add
add
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
xor
add
dec
mov
add
add
mov
add
add
add
add
cwtl
mov
add
mov
add
add
fimull
add
lock
add
mov
add
mov
add
mov
add
add
add
add
add
mov
add
add
mov
add
add
fs
add
add
je
outsl
jns
jb
jo
jb
jns
push
popa
add
pop
add
outsl
jo
jb
jns
push
add
pop
add
outsl
jo
jb
jns
push
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
je
outsl
jns
inc
add
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
dec
add
popa
addr16
imul
outsl
jbe
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
push
add
gs
je
inc
imul
imul
jb
insl
push
add
xor
push
gs
popa
jb
je
outsl
jae
cmp
inc
gs
gs
popa
addr16
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
arpl
outsl
jo
jo
outsb
jne
add
add
outsb
imul
push
arpl
add
popa
jb
jo
gs
add
add
je
insb
addr16
je
insl
push
gs
inc
add
push
outsb
gs
outsl
jo
jo
add
add
insl
outsl
jbe
push
jb
jo
add
push
push
outsb
outsl
ja
add
add
insb
insb
push
imul
outsl
arpl
mov
dec
outsl
popa
fs
outsb
jne
add
arpl
outsl
push
push
outsb
outsl
ja
add
add
jb
insb
insb
push
imul
add
popl
inc
gs
imul
outsl
arpl
add
add
popa
jb
jb
jbe
add
fs
je
push
arpl
xor
inc
gs
outsb
jne
je
insl
dec
inc
add
fs
outsl
je
data16
gs
popa
addr16
add
mov
dec
outsl
popa
fs
arpl
push
add
imul
popa
bound
add
inc
outsl
jb
addr16
jne
fs
imul
add
je
imul
js
inc
add
add
je
gs
popa
addr16
add
add
outsb
fs
gs
popa
addr16
add
das
add
je
arpl
gs
imul
add
imul
popa
jae
inc
js
add
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
dec
gs
popa
addr16
imul
inc
popa
jae
popa
fs
imul
add
add
imul
jae
js
repnz
jae
dec
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
test
fs
imul
add
ja
je
je
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
inc
push
jo
jb
jne
push
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
inc
gs
jb
jo
add
dec
add
jo
push
arpl
sub
jb
gs
push
add
push
ja
jb
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
fs
je
imul
inc
gs
imul
outsb
addr16
add
leave
add
jo
imul
imul
inc
push
dec
gs
push
add
push
push
inc
push
xor
cs
insb
add
xchg
add
insb
dec
outsb
imul
jb
outsb
add
fs
insb
cs
insb
add
dec
outsl
arpl
gs
outsb
outsw
push
add
inc
add
je
jb
arpl
fs
jae
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
sub
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
gs
je
dec
popa
imul
popl
inc
gs
je
insl
dec
popa
insl
gs
add
pusha
add
je
jns
je
insl
push
imul
imul
jns
add
aas
add
fs
imul
add
xchg
add
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
jne
jb
add
testl
imul
jb
inc
imul
jne
arpl
add
add
jbe
inc
imul
popa
imul
jo
imul
inc
gs
imul
jo
inc
add
and
gs
imul
bound
gs
add
add
jbe
inc
imul
add
jo
inc
imul
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
sub
gs
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
push
add
je
jb
jb
je
arpl
push
arpl
outsb
add
jg
inc
outsl
insb
fs
je
imul
insb
jae
jb
outsb
inc
add
sahf
add
je
outsl
insl
insl
push
imul
add
gs
push
push
imul
inc
push
dec
inc
dec
xor
cs
insb
add
mov
push
outsl
insb
jns
outsl
outsb
add
gs
bound
arpl
add
gs
inc
inc
add
roll
push
gs
arpl
push
arpl
jmp
push
gs
popa
jo
outsl
fs
leave
add
jne
fs
arpl
add
je
insb
je
add
insb
imul
je
add
jge
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
push
gs
inc
js
outsb
je
outsl
imul
push
arpl
gs
imul
inc
js
inc
js
add
add
insb
arpl
imul
add
je
gs
inc
outsl
insb
outsl
jb
add
push
imul
inc
outsl
insl
bound
gs
outsb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
outsl
add
mov
popa
je
dec
inc
push
add
je
imul
movsl
add
gs
je
push
popa
insb
gs
add
dec
xor
cs
insb
add
add
add
lea
add
js
outsl
arpl
add
je
outsb
arpl
jb
jb
imul
add
add
add
test
add
test
add
test
add
xchg
add
add
xchg
add
add
add
add
outsb
xchg
add
add
xchg
add
add
rolb
add
lock
add
xchg
add
xchg
add
xchg
add
xchg
add
add
push
xchg
add
add
add
addb
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
sbb
add
mov
add
add
pop
mov
add
add
jl
add
mov
add
lods
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
mov
add
mov
add
mov
add
add
pusha
mov
add
add
orb
add
add
add
add
lret
add
mov
add
mov
add
add
push
mov
add
mov
add
mov
add
add
data16
add
add
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
xor
add
dec
mov
add
add
mov
add
add
add
add
cwtl
mov
add
mov
add
add
fimull
add
lock
add
mov
add
mov
add
mov
add
add
add
add
add
mov
add
add
mov
add
