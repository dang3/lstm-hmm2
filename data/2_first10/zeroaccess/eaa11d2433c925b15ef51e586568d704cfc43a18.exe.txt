push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
subl
mov
sub
mov
xor
movl
add
movl
sbb
mov
push
movzbl
sbb
mov
push
mov
xor
push
or
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
movl
movl
movl
orl
movl
mov
subl
xor
add
mov
sbbl
movl
movb
mov
xorl
xor
add
jmp
jb
fsubs
lock
push
in
or
jle
jle
jg
jle
xlat
cmp
rol
pop
add
add
rdpmc
xadd
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
test
outsl
stc
fsubr
test
cmp
mov
xchg
add
lahf
mov
xchg
add
shll
sub
fisubrl
pinsrw
arpl
mov
mov
aad
dec
push
add
push
lahf
adc
jne
sbb
dec
iret
pop
sbb
add
out
ret
dec
mov
mov
jno
flds
xor
adc
and
aad
xor
pushf
push
adc
cmpsl
loop
imul
fdivrp
dec
clc
cmp
push
fs
stos
out
fdivrp
xchg
stos
jge
cmp
mov
addb
imul
pop
imul
jp
ljmp
push
adc
jecxz
cmp
inc
hlt
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
orl
jmp
dec
push
push
push
repnz
icebp
cli
jg
jle
jg
jle
pop
dec
xchg
and
add
or
xor
fs
lock
ret
xor
sub
xlat
xchg
je
cmp
dec
xchg
mov
sti
inc
mov
imul
lea
cld
and
and
push
repnz
pop
xchg
sbb
in
xchg
pop
cmpl
test
lea
dec
mov
clc
or
jg
sub
stc
and
leave
outsb
cmpsb
jl
sub
push
xchg
aaa
mov
cli
push
push
add
xor
data16
xchg
hlt
out
stos
es
popf
ret
mov
or
jbe
add
in
movsb
in
movsl
push
mov
pop
nop
testl
stc
aaa
push
jo
dec
push
es
sti
inc
cmc
cmp
mov
inc
sahf
mov
inc
pusha
ljmp
xchg
sub
or
inc
dec
inc
inc
mov
push
inc
inc
cmp
call
sub
and
add
lahf
sti
in
xchg
rcrl
in
mov
ds
lcall
bound
or
ret
xchg
js
test
repnz
jb
lods
jle
loope
aam
jb
xchg
fdivrs
xchg
push
gs
pusha
enter
pop
inc
lock
push
fucomi
mov
jle
mov
mov
inc
jnp
push
add
inc
les
sbb
xor
neg
jmp
cli
fcompl
jno
cmp
aad
jge
jle
jg
jle
in
pop
shl
mov
pop
cmpl
and
pop
shr
ja
xchg
jns
mov
sub
pop
and
test
sbb
je
lea
jnp
fcmovnb
rorb
fwait
cmpsl
lea
ja
mov
adc
mov
inc
dec
incb
pusha
add
das
ss
repnz
xchg
fcomps
jecxz
cs
pop
pushf
xchg
xchg
aas
mov
or
xor
repz
sub
shrb
sub
pusha
mov
aad
inc
or
push
ja
jno
enter
push
imul
pushf
cmp
push
rorb
xor
adc
push
pop
push
jnp
inc
ja
add
jne
fstpl
cmp
cmpsl
pop
aad
imul
dec
inc
jae
insl
fiadds
out
loope
fsub
jmp
lods
xor
in
cld
xor
jecxz
rcl
cmp
mov
lret
xchg
sarl
push
cmp
outsl
addb
outsl
rcr
leave
add
jae
mov
adc
mov
sbb
fs
lock
int3
out
jecxz
or
xchg
fists
inc
jle
jmp
out
pop
pmaxsw
and
and
or
xor
jmp
push
lahf
add
xor
cmp
xchg
std
pop
push
cmp
mov
push
daa
add
test
cmpsb
mov
inc
int3
mov
xor
sbb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
sbbl
add
decl
mov
lea
mov
movzwl
and
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
or
out
jecxz
icebp
int
add
adc
jg
jle
jnp
xchg
iret
clc
fucomi
mov
sbb
jne
pop
jne
outsl
xlat
push
xor
jae
lcall
push
pop
enter
pop
xchg
xor
cmp
add
into
dec
and
ret
vmulsd
xchg
add
adc
fistps
test
add
xchg
pop
push
xlat
inc
into
adc
cmp
popa
imul
xchg
test
in
or
xchg
std
dec
lock
inc
imul
sub
std
mov
push
sbb
rclb
mov
push
inc
jmp
outsb
xlat
jmp
sbb
inc
xor
inc
or
cmpsb
push
pop
mov
sbb
adc
mov
aas
shll
int
xchg
ret
lret
adc
fwait
mov
mov
cmc
inc
jne
pop
cmpsl
jl
in
sub
addr16
ds
into
int3
test
cmc
inc
ljmp
sbb
mov
test
inc
iret
sti
cmp
mov
jmp
pop
xchg
loope
xor
int3
pop
test
adcb
int
pushf
aas
aas
jge
in
cwtl
sub
call
or
push
mov
movl
roll
aaa
pop
push
ds
mov
lock
out
aad
xor
mov
mov
rolb
add
xchg
jae
pop
add
pop
mov
pushf
add
add
jmp
push
dec
dec
jl
pop
push
js
jle
jg
jle
add
cmp
mov
nop
dec
mov
inc
xchg
jge
mov
lahf
lret
fwait
xchg
fsubrs
and
shl
aam
in
jne
jmp
sub
das
pop
dec
or
dec
adc
xor
jbe
aam
call
mov
sbb
add
addr16
push
pop
mov
mov
outsl
and
imul
loop
not
inc
rcr
insl
sbb
push
inc
lcall
pop
or
in
imull
lret
mov
inc
daa
pop
arpl
xor
insl
and
dec
js
push
and
xchg
push
hlt
mov
daa
mov
sub
xchg
inc
loope
mov
sub
stc
and
mov
mov
xchg
fisttps
pop
gs
mov
rorb
out
fcompl
mov
rorb
stos
pop
jge
push
sbb
sub
lcall
outsl
int3
adc
testl
sbb
jnp
mov
repz
repz
nop
call
add
mov
mov
test
test
push
js
out
es
test
or
adc
xchg
les
jl
std
lcall
pop
sarl
jp
lock
daa
dec
ja
negl
sbb
lret
lcall
ficompl
mov
mov
mov
xor
add
mov
mov
mov
xor
jmp
pop
xor
mov
mov
mov
lahf
cmc
xchg
and
jle
cli
jg
jle
xor
sbbb
lock
mov
xchg
mul
or
testl
mov
xchg
mov
outsl
and
sub
sub
inc
inc
mov
scas
jo
xchg
in
mov
mov
imul
cltd
xlat
push
mov
testb
push
mov
and
mov
cli
dec
psrld
fiaddl
cmp
inc
and
jge
stc
adc
loope
pop
mov
iret
sub
push
pop
push
dec
or
push
add
int3
mov
push
lods
mov
repz
addr16
cltd
lock
cmpsl
dec
mov
rolb
push
insl
mov
dec
xchg
test
push
fisubl
jb
loop,pn
pop
inc
push
xchg
xor
xor
or
iret
arpl
mov
pop
mov
stc
mov
jb
mov
das
mov
lcall
jmp
aas
cmpsb
or
cmp
out
inc
aas
sti
pop
outsl
or
jle
sub
icebp
in
sahf
fimuls
pop
mov
icebp
in
jbe,pn
add
and
test
call
mov
mov
adc
pop
insl
icebp
sbb
jno
in
orb
xchg
add
dec
loopne
es
sbb
jmp
dec
adc
xchg
shl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
les
loopne
mov
xor
rcll
jle
cli
jg
jle
test
sbb
cmovb
dec
mov
xchg
repz
call
outsb
cmp
dec
add
pop
js
cltd
sub
sahf
je
xor
pop
ret
xchg
stos
xor
cmpl
leave
out
push
shrb
les
out
popa
and
mov
inc
mov
movsl
add
out
cmp
ss
sarb
fdivs
adc
mov
cmpsb
nop
je,pn
xchg
rcr
notb
jae
sub
add
fcmovnu
mov
xchg
iret
mov
push
inc
xor
inc
xor
les
push
imul
fidivl
fwait
leave
push
lret
jo
push
and
cmpsb
addb
adc
lcall
jecxz
mov
rcrl
mov
mov
or
dec
dec
cltd
cmp
dec
fisubs
inc
subl
aaa
mov
mov
in
sarl
ret
fcompl
or
sbb
xchg
sbb
dec
lret
add
frstor
shl
sbb
movsl
inc
jl
jne
jmp
cmpl
arpl
rcrl
mov
imul
mov
ljmp
aaa
insb
orl
std
stc
into
mov
loopne
mov
std
xor
data16
dec
repz
dec
and
test
jbe
inc
movq
and
test
add
lea
push
mov
xor
add
jmp
pop
and
aas
jno
imul
xchg
add
jle
jg
jle
std
pop
add
pop
mov
sti
jge
and
ror
scas
and
fwait
inc
xchg
sbb
js
sbb
fs
xor
out
ret
mov
dec
cmpsb
repnz
ljmp
es
jae
bound
cwtl
pusha
subl
fucomip
pop
or
sbb
test
jge
jns
in
sarb
test
add
mov
neg
xor
jle
mov
outsl
xor
rcrl
ret
jae
lret
sbb
loopne
push
push
xchg
push
leave
insl
stc
push
pusha
aad
inc
fldt
push
xor
imul
std
outsb
cmpsb
aaa
jnp
mov
mov
stc
and
loop
int
repnz
sahf
add
lea
popa
ljmp
aas
clc
xor
mul
push
adc
aaa
adc
mov
and
cwtl
movsb
dec
sub
xor
xor
mov
cmp
sbb
xchg
jecxz
xor
add
mov
sub
add
xchg
enter
pop
add
pop
sti
jecxz
pop
test
divl
movsl
call
into
mov
in
rorb
scas
xchg
sub
in
dec
jns
outsl
jmp
jmp
outsb
pushf
adc
sbb
in
cltd
clc
adc
lcall
dec
fdivr
jg
enter
call
add
pushf
add
add
dec
and
jno
push
mov
stc
inc
jae
push
add
cli
jg
jle
ljmp
or
inc
pop
icebp
gs
fcmovb
nop
imul
dec
lahf
aas
mov
fsubl
fcom
inc
inc
mov
add
xchg
lcall
adc
push
stc
mov
adc
xchg
mov
mov
push
mov
jg
jbe
xor
cmp
lods
adc
push
push
mov
cltd
flds
pop
loop
lret
lock
xchg
cmp
cwtl
and
test
test
adc
sbb
inc
mov
jmp
rcl
sub
fnsave
lcall
sbb
inc
pop
dec
lods
or
pop
aaa
xchg
xchg
test
in
push
xor
pusha
outsl
or
repz
nop
jmp
inc
mov
push
bswap
xlat
mov
aam
pusha
testb
subl
ficoms
and
cmpsb
mov
lds
lods
fadds
and
lret
mov
fs
data16
fiaddl
cmp
stos
das
fadds
mov
sbb
sbb
out
jo
xor
jbe
adc
outsl
mov
pop
out
cmp
ds
test
sub
jge
push
or
aam
mov
mov
cs
dec
loope
stos
cmpsb
xchg
pminsw
jne
xchg
je
iret
mov
ds
cld
sub
inc
xchg
sbb
cs
out
dec
sbb
inc
call
add
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
bound
fadds
cld
addl
add
cli
jg
jle
pop
xchg
mov
cld
cmp
jmp
mov
push
aam
and
push
dec
lds
pop
iret
mov
adc
pop
mov
mov
cmpsl
jmp
sbb
adc
cmpsb
ficoml
les
mov
pop
je
in
or
inc
loopne
cmp
idivl
lds
and
sub
sub
pop
in
dec
pop
inc
ss
ret
iret
repnz
es
pop
xchg
jne
and
movsb
cmp
dec
sub
add
dec
add
sbb
push
dec
jne
data16
xchg
and
mov
lahf
adc
pop
imulb
cs
in
or
pop
xchg
push
sti
cs
shll
mov
and
aad
or
mov
fnstcw
pop
es
inc
mov
cld
sbb
lcall
add
mov
adc
mov
cmp
mov
xor
pushl
fsts
fdivl
push
mov
testb
in
lcall
sbb
xchg
jns
sub
push
ret
mov
fimull
idivl
fsts
repnz
sbb
in
in
stos
lahf
leave
add
ret
lods
inc
or
popa
scas
sub
aam
jge
xchg
jne
adc
in
cmp
sbb
sub
lock
mov
mov
mov
mov
jmp
push
shlb
push
stos
rol
dec
ds
add
cli
jg
jle
lahf
or
out
test
dec
push
fisubrs
and
in
ficoml
xlat
in
inc
scas
lea
sbbb
rolb
dec
pop
mov
push
jle
sub
push
dec
cwtl
push
push
sbb
sysret
data16
jmp
mov
jmp
aaa
jle
push
mov
xor
jbe
inc
push
cli
mov
ja
fwait
mov
std
adc
repnz
aaa
stc
lds
hlt
mov
outsl
movsb
in
pop
sbb
dec
mov
sbb
dec
pop
outsb
bound
cmp
adcl
xor
xor
mov
or
sub
pushf
gs
hlt
push
push
ds
rorb
imul
pushf
scas
and
push
add
inc
mov
jnp
dec
mov
push
and
hlt
mov
push
sbb
mov
and
int3
out
lahf
sub
popa
faddl
call
cmp
jl
loope
stc
fstpt
sbb
jae
pop
movsl
dec
fwait
jo
hlt
std
rolb
cmp
into
jl
lret
cmp
mov
dec
int
mov
sysret
add
dec
xor
xor
push
and
gs
addb
dec
out
test
xchg
mov
jo
push
jg
xrelease
imul
cli
aad
enter
push
popf
movsb
pushf
insl
adc
lea
or
pushl
movb
add
clc
mov
mov
mov
mov
mov
mov
mov
jmp
les
rorl
mov
popa
adc
jg
jle
lods
lret
or
xchg
cmpsl
outsl
frstor
dec
fsubl
pop
push
inc
les
movsl
andl
pop
jg
cmpsb
shrl
movsl
jle
je
and
push
jnp
sbb
test
outsb
and
or
es
jo
ljmp
cmpsb
sub
mov
rcll
xchg
popf
sub
sbb
push
mov
lahf
bnd
mov
std
jo
test
push
push
mov
popa
les
xchg
mov
or
pop
xchg
scas
inc
enter
in
mov
aam
push
jle
rclb
pusha
or
xchg
xchg
rorb
mov
mov
add
or
lods
and
push
fists
adc
adc
fisubs
icebp
inc
jle
mov
insb
dec
popa
cmp
sub
xchg
push
in
and
jl
jecxz
outsl
shrl
jg
ror
mov
shrb
into
stos
sub
cld
leave
jg
fistps
mov
xor
cmp
sbb
jne
or
push
or
shll
cmp
int
mov
jle
push
and
push
jbe
pop
icebp
cltd
mov
mov
jg
cli
adc
adc
pop
dec
arpl
imul
aad
jb
xchg
movsb
out
mull
xor
movsl
fidivl
or
mov
arpl
loopne
scas
mov
mov
mov
mov
mov
test
jmp
inc
push
jnp
or
push
adc
nop
dec
fidivs
enter
jle
jg
jle
xchg
adc
scas
mov
imul
add
iret
scas
mov
sub
movsl
outsb
call
sub
test
loope
rolb
cmp
inc
daa
dec
push
jp
pop
fstl
imul
dec
cltd
sbb
dec
rorb
cmp
arpl
rclb
add
das
xlat
in
test
pop
or
out
inc
shll
cmpsb
aas
out
aas
cltd
mov
ss
mov
xlat
mov
addl
fidivl
incl
fstpl
sti
lret
mov
or
and
repz
hlt
or
clc
repz
outsb
mov
stos
cmpsb
dec
xchg
jno
pop
fdiv
dec
add
jo
out
sbbb
enter
xor
int3
test
mov
and
xchg
adc
xchg
rcl
pusha
mov
mov
dec
push
jmp
shlb
inc
out
push
jae
das
fstl
pop
icebp
dec
loopne
cwtl
adc
jle
aam
stos
pop
fsubr
sbb
pop
testl
rolb
cmpsl
pop
popf
add
and
loopne
imul
pop
pop
inc
pop
cmpsb
cs
insb
and
negb
or
lods
jp
mov
dec
lret
pop
movsl
bswap
cmp
test
int
push
fisubrl
bound
gs
sub
cwtl
ds
ds
mov
subl
inc
aam
test
add
add
add
jmp
or
lret
jecxz
jecxz
icebp
loop
mov
jnp
lcall
jg
jle
dec
test
insb
ret
sbb
retw
pop
cmpsb
cld
jb
cmp
out
pop
jno
mov
inc
enter
add
sbb
push
or
jp
adc
push
das
aam
push
fcoml
popf
mov
dec
inc
mov
and
out
mov
data16
repnz
inc
cmpsw
mov
xchg
pop
push
pop
scas
inc
movsl
cwtl
adc
notl
daa
push
daa
into
xlat
int3
aaa
adc
mov
imul
xchg
sub
jg
int3
inc
shr
or
jmp
dec
js
popf
scas
es
ficomps
or
cld
int
rorb
addr16
add
pop
loope
sub
and
xor
shlb
inc
adc
push
sbb
and
inc
in
cmp
sbb
mov
pop
insl
popf
jl
movsl
ds
test
mov
mov
mov
std
pop
stc
mov
ror
dec
out
cltd
fildl
fdivrl
cmpb
dec
push
in
repnz
fistl
mov
cld
mov
cmp
movsl
lock
cmp
mov
cmp
negl
adc
dec
call
push
repnz
xchg
clc
repnz
inc
movb
dec
mov
mov
inc
adc
pushf
loop
mov
sbb
or
pusha
shll
insl
shll
sub
add
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
ja
cmpsb
int
or
cli
jg
jle
xor
pop
insb
mov
inc
int3
xor
inc
mov
cmp
dec
stos
xor
jmp
outsb
mov
lret
ds
xor
enter
jl
inc
jne
lret
push
add
or
dec
pop
icebp
dec
inc
sbb
lods
mov
xchg
sahf
fwait
inc
pushf
repnz
and
and
jne
lahf
cltd
sar
push
pop
pushf
mov
xor
sub
lcall
loop
pop
pop
mov
call
scas
stc
jmp
mov
syscall
rorb
add
adc
mov
cmp
mov
stos
pop
push
mov
ficomps
iret
sub
insb
and
ret
cmp
sti
out
imul
pop
mov
fdiv
sti
lret
mov
adc
pop
xchg
sti
xchg
data16
sub
or
mov
mov
inc
xor
xor
lea
xor
jecxz
or
or
sub
dec
jecxz
aas
scas
popa
out
out
cmp
jg
js
jp
shrl
push
ror
dec
or
mov
mov
sahf
jne
mov
rorl
add
nop
pop
out
rcr
lds
in
xchg
xchg
xor
or
fisttps
push
mov
into
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
jmp
jmp
xchg
push
arpl
nop
push
rorb
cmc
and
jg
jle
mov
cmp
fstpl
stc
insb
vzeroall
mov
mov
or
inc
add
shl
in
into
into
ret
test
repz
int3
sarl
ja
mov
rcl
jne
rclb
mov
sbb
insb
outsl
push
ss
and
add
xor
sbb
sub
arpl
fldcw
aaa
movsl
pop
jne
iret
cld
xchg
loop
rcll
arpl
cmc
push
hlt
pop
xor
push
xlat
mov
xchg
insl
push
xor
mov
cmp
adc
jp
stc
cltd
inc
push
idivb
repnz
and
xchg
incl
ds
mov
xor
xorl
jb
test
jl
into
dec
iret
js
jb
sbb
pop
sbb
or
or
in
fnstsw
adc
cs
mov
cwtl
test
or
in
lcall
xor
mov
xchg
enter
xchg
mov
cmp
dec
insl
mov
dec
push
fldcw
adc
mov
mov
movsb
xor
ffreep
rcrb
push
cli
add
cmp
fwait
and
in
and
cli
fsubrl
jo
xchg
push
dec
xchg
enter
push
stos
sub
inc
pop
test
dec
cmp
xchg
mov
xchg
mov
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
push
pop
jmp
cmc
mov
icebp
insl
sbb
sbb
ds
jle
cli
jg
jle
test
lret
rcr
outsb
cmpsb
xor
mov
test
nop
mov
fwait
inc
mov
dec
jbe
je
arpl
sub
leave
push
ss
rcrb
inc
leave
mov
mulb
adc
les
pop
in
stc
fstl
test
data16
test
cmpsb
sub
inc
rorb
dec
push
or
adc
orl
int
xchg
add
insl
sbb
sub
daa
test
test
cmp
dec
int
xchg
in
sub
and
scas
mov
test
jbe
mov
adc
and
std
jle
pop
and
cli
stos
adc
daa
and
mov
cmp
or
pop
inc
std
out
jne
push
fmuls
insl
ret
push
shrl
lods
fbstp
push
mov
sub
pusha
pusha
mov
mov
adcb
aas
xor
cmpl
mov
push
sbb
fcomip
in
adc
mov
sub
repz
jl
test
adc
lahf
imul
loopw
fisubs
xorl
adc
daa
add
push
jb
jp
push
hlt
dec
push
xchg
dec
xlat
imul
mov
sbb
mov
add
cmpsl
in
hlt
in
lret
shll
jg
cmp
enter
cmp
add
pop
jmp
add
mov
adcb
sub
jg
jle
xor
dec
addr16
ss
jmp
iret
adc
cmp
add
sub
jle
call
and
mov
repnz
shl
js
or
mov
xor
insb
mov
add
int3
sti
push
pop
xor
sub
push
jg
sub
dec
fisttpl
jg
lret
leave
in
xchg
ljmp
pop
jmp
and
mov
movsl
jnp
hlt
sarl
dec
out
xchg
fsts
jle
cmpsb
call
mov
lods
push
push
and
mov
push
outsb
lret
pop
out
jp
imul
sub
negl
mov
out
push
insb
jne
cwtl
mov
xor
ds
jp
jle
mov
mov
out
fwait
cmp
push
stos
cmp
push
stos
xchg
pop
lock
pop
xor
aaa
cmpsb
inc
ljmp
lods
mov
xchg
jae
aaa
pop
mov
roll
mov
push
ds
es
jns
sub
adc
lea
push
pop
and
xor
gs
dec
aaa
shll
adc
push
and
lahf
es
inc
jl
dec
jno
mov
outsl
cmpb
cmp
dec
mov
ds
xchg
dec
aad
popa
data16
insl
loope
jno
fmull
pop
andb
and
leave
ret
push
mov
sub
leave
ret
push
mov
sub
push
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
not
mov
xorl
mov
sbbl
movl
mov
add
movl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
decl
mov
xor
mov
mov
sub
imul
mov
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
not
mov
not
movl
movl
mov
adc
movl
adc
movl
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
and
jmp
sbb
add
lock
icebp
mov
sbb
adc
jle
cmp
sbb
adc
fdiv
hlt
ret
fldt
push
inc
std
cmp
pop
dec
cwtl
lods
lret
insl
jno
je
xchg
inc
inc
pop
mov
dec
and
popa
or
pop
or
filds
add
adc
jge,pt
lcall
aas
cmp
sbb
dec
dec
cs
mov
lods
cli
mov
mov
es
ror
push
sub
mov
ret
mov
mov
dec
inc
movsl
xchg
out
mov
mov
pop
pop
fmuls
inc
dec
js
std
shrl
sbb
cmpsl
sahf
loop
sbb
xchg
and
movsb
pushf
cmp
sbb
loopne
andl
pusha
enter
je
cmpb
pop
jmp
pop
xor
test
add
rol
sahf
movsl
jo
and
lret
cltd
iret
sub
adc
push
mov
pop
sbb
push
adc
or
sub
dec
mov
stos
insl
test
and
popa
or
in
insb
xor
mov
jg
pop
rclb
pop
mull
lea
mov
shlb
mov
insl
dec
stc
push
loop
ds
mov
daa
push
outsb
iret
dec
mov
lret
xchg
scas
mov
daa
cmpsb
int
rorl
iret
xchg
jnp
repnz
xor
cli
and
push
test
lcall
fstl
jns
inc
inc
cmp
jle
call
out
int
dec
sub
or
jle
mov
mov
sub
into
cmp
mov
cmpb
add
xchg
pop
les
dec
push
roll
push
lss
dec
mov
add
jo
push
into
lret
cmpsb
in
fstp
loop
je
sbb
sti
jmp
inc
push
sub
addr16
lock
mov
cmp
lcall
mov
sub
in
js
in
out
into
popa
enter
aaa
std
dec
lods
xor
mov
in
cmp
leave
rcrb
xor
push
movsb
lock
or
mov
lods
mov
hlt
jnp
mov
adc
jnp
cmp
sbb
andb
or
adc
gs
aam
and
pop
adc
and
les
mov
xor
psadbw
pop
sub
mov
push
mov
out
jmp
int3
xlat
xchg
xchg
jecxz
leave
iret
in
push
out
scas
and
sub
mov
gs
inc
or
mov
mov
mov
push
cmp
jg
ret
pop
cmp
andb
mov
imul
out
inc
les
test
inc
add
stos
aaa
inc
add
rolb
add
add
add
incl
cmp
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
subl
add
movl
cmp
movl
je
movl
push
jmp
xorl
mov
sub
mov
sub
xor
mov
xorl
xor
movl
add
cmp
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
negl
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
add
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
pop
cli
mov
jno
gs
or
scas
loopne
ss
and
adc
pop
jl
jle
bound
out
cmpsb
fcomip
push
rorl
cmp
fnsave
or
cmp
cli
dec
in
pop
xor
sub
jns
notb
add
dec
cmp
mov
xorl
adc
in
test
popf
dec
nop
daa
cmp
es
lret
push
add
jp
jmp
sub
ja
pop
push
in
xor
lods
add
out
pop
lea
and
pop
cltd
mov
mov
adc
mov
inc
cmp
ret
fdivrs
popa
sbb
orl
ss
lret
push
test
lahf
imul
mov
fsubr
jno
jbe,pn
inc
cmp
and
adc
shrl
repz
cmp
xchg
icebp
int3
and
sub
shlb
test
roll
dec
ja
in
repz
insl
cs
inc
iret
sub
add
scas
mov
mov
iret
cltd
in
jo
and
leave
jle
loope
enter
in
lahf
gs
lahf
aaa
icebp
fimuls
fadds
mov
sub
xchg
push
aam
fstpl
pop
aad
adc
ds
movsb
loop
pop
lcall
mov
or
inc
sbb
xor
push
hlt
and
mov
int3
pop
icebp
push
stc
dec
lock
call
ret
cli
pusha
sub
addl
pop
fistpll
push
addr16
test
or
imul
add
addb
and
test
cmp
mov
faddl
sub
mov
std
fnstcw
aaa
stos
insb
and
mov
push
outsb
sub
out
add
xchg
loopne
sub
fidivrl
and
dec
cmp
mov
sub
mov
jg
xchg
sahf
test
and
dec
popf
xchg
out
adcb
or
pop
inc
add
addr16
out
mov
sbb
push
push
gs
pop
pop
jg
in
movsl
icebp
je
dec
mov
call
dec
cmc
sub
adc
xchg
dec
jmp
add
pop
test
xor
push
add
adc
and
or
adc
movswl
pop
test
fs
stos
mov
xorb
cmp
popa
scas
add
ja
mov
inc
jae
sbb
inc
cmp
xor
sbb
mov
cmp
push
cmpl
adc
dec
pop
or
jns
push
adc
xor
mov
repz
xor
in
dec
xchg
push
adc
xor
rclb
jmp
out
xchg
shrb
xor
cmp
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
xchg
xorb
jno
cs
nop
cltd
xchg
or
jle
pop
jl
jle
jl
rcl
inc
clc
pushf
mov
cs
or
add
ds
scas
mov
ret
sbb
jns
insb
sbb
pushf
repz
mov
add
dec
jecxz
das
nop
pop
repz
aaa
in
jl
pushf
ljmp
fucomi
mov
clc
inc
push
in
jmp
dec
mov
in
mov
fnstsw
pop
fisttpl
sar
lea
fldt
inc
pushf
mov
ljmp
cmp
push
mov
cmp
inc
js
out
rcr
cmpsb
hlt
adc
cmc
jo
fildl
xchg
enter
jnp
call
push
pop
insl
fdiv
sarl
mov
aas
rorb
jmp
sbb
sub
mov
push
jnp
push
push
cmp
push
insl
xor
cmpsb
mov
pop
add
mov
pop
jp
sub
dec
loope
out
in
loop
stos
call
push
mov
mov
fmull
lcall
adc
js
and
push
mov
scas
das
and
xor
daa
out
mov
les
movsl
xchg
jmp
stos
inc
scas
jae
mov
aaa
adc
fldcw
popf
add
sub
std
sub
pop
test
gs
xchg
in
popf
sbb
push
fiaddl
mov
scas
cmp
cmp
jne
fimuls
cmp
mov
fildll
mov
mov
orb
rorb
stos
dec
cmpsl
out
dec
orb
pusha
xor
add
dec
push
xchg
hlt
xor
es
mov
repnz
jae
stos
xor
imul
lods
sub
sub
fdivrs
pop
cmc
scas
mov
fadds
fimull
push
and
pusha
push
mov
testb
mov
mov
xchg
flds
fwait
mov
out
arpl
dec
clc
lods
daa
inc
xchg
fwait
out
in
pop
sbb
popf
out
dec
xchg
jo
movsb
cmc
icebp
popf
sbb
fwait
jl
pusha
sbb
mov
dec
or
popf
ljmp
push
mov
push
shlb
mov
ss
pop
xor
in
out
xchg
flds
push
in
movsb
adc
ret
je
sub
push
or
xchg
sbb
scas
cmpsl
push
sahf
repz
mov
sub
arpl
fiadds
xchg
jo
repnz
and
or
and
gs
fwait
insb
lods
loopne
mov
cli
loope
push
leave
clc
xchg
negb
push
aad
jl
cmp
jmp
in
out
shrl
push
mov
xchg
les
sbb
jge
mov
sub
out
rcrb
cmp
jg
aam
test
aam
in
aaa
arpl
jo
cmpsb
jbe
int
insl
sub
cmp
mov
jbe
mov
mov
jmp
mov
aaa
or
mov
subl
xor
jo
stos
je
jle
pop
jl
jle
inc
mov
mov
in
adc
mov
jb
sbb
hlt
loope
dec
inc
test
and
mov
mov
cs
mov
dec
jnp
enter
mov
es
inc
fstl
add
jnp
rcrl
push
cmc
fisubs
xor
cmp
les
push
inc
fildll
inc
incl
aaa
test
lahf
xchg
mov
jecxz
xchg
jns
fs
inc
in
jge
stos
dec
inc
push
stos
jg
jmp
outsb
pop
mov
std
into
ffree
daa
inc
xchg
fdivrs
mov
lock
sbb
bnd
bound
lcall
and
sbb
shl
pushl
fimull
cli
jns
cmp
imul
xchg
loopne
js
lret
test
leave
fidivs
pop
jb
mov
adcl
jbe
sub
fnsave
mov
js
sti
movl
sub
mov
mov
dec
add
jne
or
add
pop
pushf
ja
adc
xchg
jns
int
pop
sub
push
add
xchg
sub
out
test
test
inc
xchg
mov
or
cli
cmp
mov
push
adc
pop
lock
xchg
out
push
testl
dec
subl
ljmp
or
dec
mov
jno
sbb
icebp
xchg
repz
sbb
add
and
jge
fsub
arpl
jb
mov
and
insb
jbe
loopne
jne
inc
sub
sar
jmp
xor
sbb
sub
push
mov
push
out
imul
mov
loopne
scas
jne
sub
mov
push
daa
cmc
and
xor
cmp
push
aam
dec
pusha
jnp
in
jle
lods
lea
sti
mov
push
fadds
aaa
lods
cmpsl
add
inc
adc
jl
movsl
lods
leave
test
aam
sbb
cs
out
mov
mov
pop
inc
pop
mov
js
xchg
outsl
scas
pop
add
mov
push
add
lret
mov
lods
popa
push
sbb
lahf
fnsave
insl
or
add
js
cs
inc
pop
cmovo
mov
mov
sbbl
sbbl
in
pop
fwait
push
out
mov
insl
mov
lahf
add
in
pop
pop
addr16
lret
dec
mov
pop
popf
xchg
xor
movb
dec
shrb
push
and
dec
xlat
in
repnz
bound
icebp
popa
mov
push
int3
pop
inc
or
hlt
repnz
lods
sub
sbb
imul
ja
xchg
in
jg
test
mov
out
int
scas
iret
mov
adc
sbb
mov
shll
clc
jmp
add
dec
popa
jno
jne
xor
jle
cmpsb
adc
jle
pop
jl
jle
push
jne
mov
lret
push
scas
rclb
or
movsl
iret
mov
iret
mov
jne
ja
sub
add
out
test
jecxz
imul
test
sub
stos
mov
mov
mov
push
jp
mov
jno
es
inc
push
xchg
push
cmp
ret
adc
adc
mov
cld
mov
jge
js
fists
stos
fucomi
in
fistpll
xchg
push
adc
iret
mov
lock
jp
push
mov
inc
popf
adc
mov
addb
adc
cld
rolb
aad
lahf
fwait
in
call
fwait
push
test
mov
in
jmp
cmp
nop
cmp
jp
movsl
sbb
xchg
lret
mov
aas
add
pop
repnz
push
mov
push
adc
pop
sub
iret
divb
rolb
ror
outsl
and
shr
clc
inc
xorl
push
mov
test
orl
mov
jp
dec
jg
dec
popf
popa
add
inc
je
leave
cmpsb
dec
mov
test
punpckhbw
pop
push
dec
inc
add
jle
out
in
pop
loopne
es
push
mov
iret
and
les
push
adc
add
das
xchg
scas
fimuls
adc
push
xor
mov
dec
test
pop
ret
mov
jecxz
cmp
test
arpl
xor
push
out
rcrb
ret
mov
test
adc
in
mov
sub
addr16
sbb
or
mov
imulb
sbb
xchg
sbb
leave
push
adcl
jg
int3
adc
or
mov
sub
fadds
out
dec
jg
fidivrl
push
sahf
aaa
inc
mov
mov
push
or
dec
imul
mov
pusha
cmpsl
in
icebp
shl
movsb
dec
inc
cmp
fidivrl
or
out
jp
mov
int
out
sarl
cs
inc
sbb
imul
xchg
xor
dec
add
bound
push
nop
jle
mov
test
or
mov
stos
mov
dec
adc
insl
pop
dec
cmc
lds
xchg
es
sbb
jp
icebp
lods
cmp
pop
das
dec
clc
adc
imul
hlt
cs
and
sub
pop
push
mov
cmp
cwtl
push
das
xchg
fsubl
ja
stos
orb
push
mov
mov
ret
push
mov
sub
and
xchg
in
xor
jle
adc
jo
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
jmp
sub
test
or
inc
lds
jl
jle
push
arpl
mov
inc
es
scas
mov
test
adc
or
aas
push
out
inc
adc
imul
aad
cmc
gs
mov
js
ljmp
jecxz
dec
out
and
mov
fs
out
adc
mov
pop
loop
mov
inc
add
jmp
fucom
cmp
jl
pop
mov
sbb
pop
inc
mov
leave
xchg
dec
popa
std
scas
cmp
sahf
clc
mov
cltd
and
scas
scas
roll
fisttpll
sbb
cmpsb
orl
cmp
cltd
xor
addr16
adc
shlb
test
jnp
cmp
fbld
in
sbb
cmovg
push
je
ffreep
ss
inc
xlat
inc
lds
jp
xchg
add
xor
mov
jbe
jbe
lret
sbb
cmpsl
imul
mov
lret
mov
add
mov
fadds
ja
clc
aam
mov
idivl
ds
adc
sahf
and
mov
lret
xor
mov
pop
fadds
sub
outsl
adc
sub
enter
in
add
pop
test
fdivrl
dec
outsl
mov
mov
inc
cmp
aam
push
cmp
jle
fwait
in
scas
arpl
jns
lcall
sti
fildll
pop
xchg
mov
fs
data16
cwtl
push
mov
lcall
adc
ret
test
pop
mov
pop
jecxz
push
pop
jns
insb
jmp
addr16
mov
or
mov
pop
insl
movsb
movl
ss
dec
xchg
rorb
loope
or
mov
fld
lods
mov
mov
mov
in
insb
xchg
or
fs
jns
enter
jge
js
mov
pushl
xchg
loop
mov
adc
dec
bound
jne
add
inc
pop
xchg
in
dec
les
aaa
or
stos
out
cmp
inc
push
sbb
cmp
push
pop
int3
mov
sub
ret
sbb
negl
es
sbb
mov
and
shll
push
pop
dec
cmpsb
or
call
sbb
lock
out
out
sbb
push
or
inc
adc
int
es
lahf
mov
out
fsub
adcl
test
xchg
xchg
pop
mov
cmc
mov
mov
daa
lret
ds
jbe
mov
outsb
xchg
clc
daa
push
add
imull
in
aas
xlat
cmp
inc
hlt
xor
mov
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
xor
adc
shl
icebp
repz
push
scas
cmp
pop
jl
jle
inc
mov
push
shlb
sti
fwait
in
mov
xchg
mul
jge
push
pop
cmpsl
xor
xchg
mov
imul
insb
adc
cltd
clc
rcll
jae
jg
push
pop
cmp
sbb
jle
jp
dec
daa
adc
aad
mov
cs
popf
fwait
mov
xor
pop
rcr
mov
jbe
push
mov
sbb
mov
xlat
imul
out
imul
scas
adc
popf
add
xor
adc
cmp
imul
cltd
ljmp
xchg
mov
loop
lea
dec
push
aas
inc
sub
and
jmp
inc
mov
leave
add
cmp
xchg
xor
adc
xchg
fstpt
pop
and
mov
sbb
inc
inc
addb
cs
push
lods
or
xchg
mov
jne
jmp
push
jle
idivb
cltd
mov
scas
jle
loopne
add
mov
mov
and
or
aad
mov
add
int
jecxz
jnp
clc
mov
add
and
mov
leave
mov
xlat
sbb
movsl
stc
inc
out
adc
jmp
sbb
adc
pop
add
xchg
xor
sbb
cwtl
sarb
xchg
outsl
mov
xor
pop
loopne
push
aas
xlat
add
or
fwait
sbb
sub
cli
roll
das
insb
xchg
divb
orl
out
aaa
mov
iret
lahf
mov
ss
pop
and
lods
subb
icebp
popf
ljmp
js
call
mov
repz
cli
insl
jge
es
cmp
stos
call
ficoml
test
data16
xlat
loope
mov
or
inc
movsl
and
loopne
sub
push
add
adc
leave
pop
aas
int
out
mov
sub
call
xor
or
stc
test
ficoml
and
imul
adc
jge
add
cli
mov
cmp
and
ds
call
aas
push
not
dec
jmp
pushf
jecxz
mov
mov
cmp
cmp
cli
nop
sbb
nop
psllw
hlt
xchg
xor
mov
aaa
pop
mov
arpl
mov
sbb
xor
popf
outsb
push
jns
xor
shr
cltd
sub
add
xchg
outsb
fistps
push
add
dec
mov
inc
xchg
lds
adc
scas
daa
outsl
and
push
add
outsb
xchg
call
pop
lcall
xchg
jae
or
pminub
push
hlt
sti
jne
stc
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
xlat
pop
mov
jno
stc
hlt
jb
aam
jb
and
pop
jl
jle
or
cmc
addl
inc
inc
out
dec
pop
inc
out
addr16
xchg
cltd
pop
sarb
jmp
lock
movsb
jmp
push
cwtl
in
add
mov
int
popa
int
inc
dec
jle
sahf
xchg
jnp
pop
into
mov
rorl
rcrb
cwtl
xchg
lock
inc
and
scas
iret
push
das
dec
jecxz
add
fstps
emms
pushf
mov
jnp
xchg
sti
xchg
aad
pop
jae
pushf
in
mov
decl
and
loope
stos
ss
shlb
push
dec
dec
push
fidivrs
jb
pop
or
or
mov
pop
pop
ret
jge
loopne
pop
jl
iret
cmp
ja
cli
popa
out
fimuls
and
cmc
jb
iret
inc
cmp
lods
sti
mov
lea
popa
sub
lock
xchg
adc
arpl
jo
pop
dec
mov
xor
ret
push
movsl
jo
or
adc
add
int
sub
ret
or
add
add
mov
xchg
pop
inc
out
xchg
inc
pusha
mov
push
pusha
scas
int3
jl
mov
push
mov
jo
fs
jno
test
fldenv
les
jle
xlat
xchg
movsl
hlt
cmp
lds
xchg
aas
or
packssdw
cmp
jmp
mov
roll
adc
icebp
repz
lea
dec
fistpl
cmp
popa
loop
arpl
dec
out
dec
je
jae
ret
pop
xchg
nop
repz
cmpsb
add
dec
pop
aad
stos
hlt
inc
sbb
insl
enter
in
ljmp
jmp
roll
nop
pop
xchg
dec
ret
stc
dec
push
arpl
pop
dec
xlat
mov
push
test
ret
cli
in
xlat
inc
loopne
dec
movsb
or
andb
and
push
rcll
shrl
mov
aad
xchg
in
repnz
xorl
loopne
pop
mov
out
adc
scas
adc
push
fcoml
add
xchg
jmp
sbb
cmp
xor
lds
cli
sub
imul
aad
outsl
mov
cmp
out
fs
shll
push
aad
cmpsl
or
inc
lcall
mov
add
cwtl
enter
outsb
rcll
mov
sti
push
inc
jnp
and
leave
outsl
arpl
jl
jno
daa
push
push
jmp
andl
jo
lock
mov
int
sahf
cmpsl
pop
stos
push
bound
pop
data16
xchg
push
ror
cmp
cmp
test
adc
enter
inc
jg
imul
mov
xor
sub
lea
jmp
pusha
das
sti
pop
push
push
out
in
rolb
jle
jl
jle
loopne
scas
loopne
cmp
int3
leave
cmp
jle
js
enter
adc
xchg
sbb
or
jne
fwait
push
push
cmp
in
mov
push
xor
adc
arpl
inc
jl
rcrb
imul
xchg
lret
in
or
inc
xor
outsb
daa
pop
lock
imul
push
jne
leave
mov
jecxz
fsubrl
add
jo
loop
lods
js
inc
or
mov
xor
mov
aad
out
ds
dec
scas
mov
int3
es
sub
adc
mov
icebp
out
dec
xchg
cmp
mov
movsb
mov
push
push
mov
mov
insl
les
adc
into
or
test
add
xchg
dec
pop
sub
lds
int3
jp
sub
ja
xchg
mov
loope
sbb
mov
inc
lock
int3
js
xchg
es
lret
pop
fiaddl
in
jp
into
mov
cmp
sbb
mov
xor
jmp
push
rclb
mov
xchg
mov
pop
insl
cltd
mov
dec
jne
and
sbb
dec
pop
lds
rcll
sahf
push
pop
cmp
jmp
jbe
call
in
xor
mov
mov
leave
sub
out
lds
addb
cmc
add
mov
lcall
adc
jno
das
ret
xor
lcall
push
in
xor
mov
aaa
and
stos
out
xchg
jle
sbb
mov
mov
sub
add
xchg
sub
jg
test
fiadds
lods
mov
in
cmp
push
gs
std
xor
cltd
loopne
mov
add
sahf
repz
push
and
aas
lcall
mov
fstpl
cmp
xchg
xor
adc
mov
push
mov
jmp
inc
addr16
aad
add
cmc
dec
leave
insb
pop
test
mov
movsb
jge
jno
ja
jb
repz
fs
xchg
add
dec
insl
lods
dec
mov
ud0
fwait
std
cwtl
movsl
xor
jnp
or
pop
data16
sbb
les
xlat
and
leave
jmp
jmp
pop
outsb
ret
mov
mov
mov
fs
fstpt
shll
icebp
dec
jecxz
pushf
inc
movsb
rcrl
inc
mov
mov
hlt
neg
xchg
pop
add
sub
cmp
sbb
or
mov
sbb
jns
daa
lret
cmp
cli
jbe
mov
mov
jmp
outsl
fisttpll
pop
fmull
dec
shrb
jle
pop
jl
jle
cwtl
mov
push
das
in
cli
das
pop
les
add
test
testb
js
int3
cmp
pop
shlb
mov
rclb
jo
pop
push
outsl
aad
xor
iret
shr
ljmp
mov
pushf
cmp
mov
sub
adc
add
mov
jge
add
push
rorl
jp
or
adc
jle
cmp
cmp
sti
hlt
sti
pop
dec
push
push
xor
imul
xor
pop
gs
sahf
fmuls
popf
subl
in
xor
out
push
add
fwait
xlat
xchg
sti
lahf
aas
decb
in
icebp
and
pusha
xor
leave
rcr
aas
sbb
adc
loope
ret
insl
xorl
sbb
hlt
shl
sbb
push
enter
cli
push
nop
jo
push
call
adc
hlt
fsub
leave
sahf
push
sbb
sub
fwait
lds
scas
fdivp
mov
nop
dec
jne
jo
sbb
pop
mov
push
inc
pop
insb
sarb
cmpb
jmp
movsl
add
jp
push
jns
in
out
lahf
inc
xchg
cmp
insb
icebp
cmpsl
aaa
dec
jnp
mov
cwtl
enter
dec
pop
pop
or
mov
add
not
push
nop
imul
mov
push
je
sub
jg
xor
mov
mov
lret
in
dec
ror
sub
test
or
jge
fs
mov
sub
stos
test
lahf
cld
mov
jp
stos
push
mov
decl
ficomps
adc
fidivs
fists
ret
jge
aaa
out
test
xchg
jmp
sarb
and
mov
and
pop
xchg
xor
mov
xor
ret
in
shlb
cwtl
dec
pop
mov
lret
or
push
fisttpl
lahf
loope
lods
mov
push
mull
scas
js
cs
stos
cmp
idivl
sbb
adc
test
fsubs
push
outsl
clc
cmc
pop
dec
in
sbb
cmp
pop
add
loop
inc
cmp
negb
ffreep
arpl
outsl
xchg
cltd
iret
addr16
mov
lahf
xor
fisttpll
cltd
adc
mov
and
inc
iret
inc
in
sbb
fisttpll
jnp
jp
cli
cmp
les
loop
pop
sbb
dec
pop
mov
into
fnstcw
cld
in
in
into
inc
xchg
imul
icebp
mov
push
xor
adc
addl
jmp
insl
ret
pop
jl
iret
aam
adc
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
and
mov
xorl
xor
notl
add
jmp
scas
incb
jne
lods
jbe
loopne
mov
lret
inc
push
cmp
jle
sub
jle
sbb
mov
cmp
outsl
inc
mov
shrb
push
push
js
test
xchg
or
mov
inc
sub
test
push
enter
xor
shrl
ljmp
insl
imul
mov
popf
pushf
js
mov
inc
mov
push
shr
pop
into
or
mov
pop
pop
inc
popf
or
cs
or
aam
mov
jmp
mov
mov
jecxz
add
mov
mov
push
jp
aad
xchg
stos
cmp
xor
ret
insb
sarb
push
cmp
xchg
fwait
out
pop
popa
bound
fisttpll
cwtl
lcall
test
dec
rorl
xchg
int3
in
jno
out
sub
aad
lods
aaa
call
test
push
dec
sbb
shrb
aad
xor
jle
clc
sub
in
addb
sahf
fistpll
pushf
xchg
ret
jne
out
cmpsb
repz
fcmovnbe
or
into
pop
aaa
jnp
sbb
imul
out
add
aad
gs
pop
xchg
push
sub
or
test
jb
dec
inc
sti
rol
xchg
lahf
pop
pop
or
add
cmp
xchg
das
in
mov
in
inc
popf
jo
pusha
gs
xchg
xchg
ret
movups
stc
sbb
and
lcall
aad
xchg
mov
adc
xor
jne
js
outsl
ljmp
dec
sbb
xchg
adc
sub
mull
js
out
aas
pop
xor
test
add
in
imul
fs
add
pushf
mov
xchg
or
imul
cs
jle
inc
and
in
sbb
test
loope
in
jp
lahf
mov
xchg
jmp
pop
ficomps
mov
sub
clc
ss
jecxz
pop
in
in
scas
test
fs
jbe
lea
xchg
jns
jnp
or
jl
lahf
xor
inc
sbb
dec
xchg
fmul
mov
clc
jmp
push
pop
leave
or
into
cmp
jle
cmc
cmpsl
fwait
std
popf
pop
or
dec
jbe
adc
and
or
imul
ja
sub
pop
lret
cmp
dec
cwtl
aam
add
push
or
int3
insb
popf
testb
test
push
xor
repz
cs
repnz
jle
outsb
loope
pop
add
insb
jmp
mov
xchg
mov
mov
enter
xchg
mov
xor
packsswb
cmpsl
cmp
or
mull
test
ja,pt
mov
jle
xchg
inc
inc
jbe
push
push
cmp
ds
sbb
rcr
cmp
js
jbe
mov
pop
lret
subb
aam
arpl
sub
movsl
lods
into
test
mov
pop
push
repnz
insb
fs
in
hlt
or
lahf
mov
mov
movl
movl
mov
push
mov
movl
mov
cmp
je
mov
xor
xorl
xor
lea
xor
cmp
jne
movl
jmp
add
mov
xor
add
movl
mov
mov
movl
jmp
jmp
fldcw
les
adc
call
jge
jle
and
pop
inc
xor
pop
push
xchg
movsb
decb
dec
sub
ficomps
add
popa
daa
int3
clc
mov
mov
mov
push
ror
movb
or
movsl
cmp
icebp
xor
or
dec
pusha
push
sub
scas
lea
leave
or
test
or
and
dec
shlb
sub
lods
loopne
add
ss
aad
jge
pop
daa
xor
icebp
xchg
mov
xchg
popf
xor
out
movsl
aaa
add
inc
push
cmpsb
fdiv
lods
fildl
adc
push
pop
out
xor
stos
inc
push
fs
int3
mov
insb
jb
mov
inc
push
add
sub
sbb
in
xchg
mov
outsb
add
adc
dec
daa
mov
int
cmp
aad
dec
mov
mov
out
mov
cld
cld
js
icebp
adc
dec
or
mov
rorb
lcall
sub
dec
test
xorb
jb
or
inc
push
lods
pop
xor
pop
push
sbb
and
and
xchg
in
into
and
xor
lcall
jge
shrl
pop
pushl
lods
nop
add
subb
inc
addb
or
clc
out
popf
rcrb
repz
shr
lcall
push
movsb
ja
insl
inc
fdivs
mov
jle
lahf
or
mov
mov
jns
mov
mov
stos
pop
ds
mov
arpl
xlat
sbb
int3
fdivrl
fxch
inc
shrl
jbe
or
mov
or
inc
lock
inc
sarb
inc
cmp
test
in
mov
and
pop
xor
lock
dec
test
cvtpi2ps
daa
repnz
push
adc
popf
les
std
into
sarl
pop
fidivrs
fnstenv
dec
pop
out
fldt
pop
add
les
movsl
stos
rolb
scas
lret
lods
xor
mov
xor
adc
movsb
stos
mov
rorb
popf
adc
in
in
jg
xchg
into
xchg
sub
dec
movb
and
mov
push
lds
or
cli
stos
fnstcw
gs
sub
imul
std
cs
fnstsw
cli
ss
sub
sarb
lahf
adc
add
lret
mov
imul
mov
rcrb
fwait
loop
leave
lcall
push
dec
sub
xor
jle
and
icebp
daa
ret
out
pop
arpl
ror
dec
popa
out
sbb
pop
push
in
loopne
int
dec
outsb
sub
dec
add
xchg
mov
ficomps
notb
pusha
xchg
lret
mov
scas
inc
and
stos
mov
ret
hlt
mov
sub
cmp
dec
mov
xchg
push
ds
push
cmc
cmp
sub
fldl2t
dec
add
add
sub
test
test
mov
mov
jle
jge
jle
xlat
aas
cmp
add
ds
cmc
dec
sbb
popa
loop
test
pop
xchg
fsubrl
nop
xchg
cmc
push
mov
ror
lea
sub
push
dec
pop
pop
aaa
nop
adc
cltd
test
cmp
add
jb
mov
loopne
gs
adc
pop
sub
je
cmpsl
sbb
out
sub
jle
lcall
std
inc
push
mov
adc
mov
ror
outsl
cs
mov
dec
pop
in
mov
lods
sbb
pop
loopne
cwtl
pop
fnstsw
iret
pop
inc
pop
dec
xchg
aam
sahf
push
push
or
ljmp
xchg
add
test
fadd
jl
scas
repz
inc
decl
fcomps
adc
and
jnp
fistps
sbb
fs
adc
paddq
scas
jnp,pn
xor
ja
or
xchg
fidivl
test
xlat
adc
rorl
fiadds
shlb
jp
leave
jo
les
cmp
pop
mov
cmp
push
insl
push
ljmp
xor
mov
adc
adc
mov
loopne
mov
in
decb
in
and
jp
inc
das
dec
push
xchg
outsl
mov
jne
in
loopne
fiaddl
cs
fildl
and
addr16
shlb
aad
jo
repnz
mov
inc
ljmp
cwtl
stos
sbb
sub
pop
imul
stc
mov
cmp
icebp
fldt
and
jl
push
out
mov
mov
cmc
push
mov
loop
or
pop
inc
ret
mov
adc
idivb
xlat
out
xchg
adc
cltd
es
add
cmp
movl
js
outsl
fldl
loopne
mov
jl
pop
sub
xchg
or
stos
repnz
testl
cmovg
mov
mov
fmuls
add
iret
mov
out
xchg
xchg
mov
jo
sub
or
dec
sub
push
sub
dec
xchg
pop
ficoms
or
mov
pop
cs
loop
pushf
ds
sub
push
cli
lea
scas
rcrb
xor
adc
xor
jmp
rorl
mov
test
xor
xchg
gs
adc
idivl
pop
jae
rclb
fstpl
and
and
pusha
sbb
popa
pusha
rolb
cmpsl
stos
insb
jecxz
mov
shll
jp
push
sub
sbb
cmpsb
icebp
lret
icebp
xchg
or
scas
das
fs
fs
les
lret
fisttps
mov
add
mov
or
add
push
cmp
dec
dec
pushf
scas
xor
push
mov
mov
add
jns
pop
inc
rcll
sub
mov
fs
mov
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
jmp
lahf
cmp
push
pop
fcomps
cmc
sahf
insb
fists
jle
jge
jle
ds
adc
cs
sete
inc
sub
or
xchg
rorl
jl
imul
add
scas
sbb
xor
mov
movsl
imul
adc
aaa
pop
fcomps
inc
mov
jno
push
add
lret
out
je
dec
test
adc
jo
hlt
xchg
mov
mul
sbb
lret
call
pop
pop
jbe
jbe
xchg
and
xor
scas
xor
fwait
arpl
shl
rorl
in
iret
je
dec
sbb
xchg
mov
mov
fld
xor
mov
aad
pop
add
pop
push
cmp
xor
arpl
mov
jne
out
cmp
dec
pop
int
dec
enter
in
pop
push
pop
push
or
pop
imul
dec
outsl
mov
enter
data16
movsl
and
cld
insl
or
ss
push
and
pushf
shrb
xchg
ret
or
mov
cmp
js
aas
adc
mov
rcrl
decb
loopne
in
pop
dec
stc
add
test
and
ss
and
push
adc
cli
sbb
xlat
repz
add
jmp
sbb
adc
jbe
lret
scas
xchg
pop
sbb
leave
jbe
or
out
add
jo
mov
xchg
jl
mov
dec
inc
inc
mov
test
fsub
das
int3
mov
inc
lahf
in
adc
cs
pushf
fnstsw
call
mov
fldl
and
pop
cmove
push
or
popf
adc
stc
lods
cmp
std
ljmp
jno
jb
hlt
dec
stos
sub
shrl
test
sti
cmpxchg
out
ret
fildl
mov
sti
xor
fcoml
mov
mov
xchg
fcomi
or
mov
test
fsubp
lahf
jne
lock
mov
xchg
addr16
push
pop
dec
jno
in
jle
mov
xorl
add
dec
xor
nop
aas
into
clc
test
xchg
sub
push
mov
pop
push
daa
andb
sub
push
push
mov
jmp
jge
sbb
fidivrl
mov
in
lods
xorl
fwait
aad
mov
jmp
dec
mov
out
in
out
data16
push
push
inc
sub
pop
or
mov
or
movsl
sub
je
fnsave
pop
rclb
sbb
repz
push
cmc
sbb
scas
cmp
ds
add
add
in
fwait
or
cmp
push
push
mov
cmp
sbb
fimuls
rclb
aad
repz
mov
jecxz
push
sub
adcb
mov
xor
push
ljmp
fisttpll
gs
shll
cwtl
push
mov
jae
mov
mov
add
dec
test
pop
adc
adc
cmp
repnz
push
sti
es
jmp
mov
leave
ret
push
mov
sub
push
call
movl
cmpw
jne
push
call
movl
cmpb
movl
jne
movl
movl
lea
mov
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movzwl
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
subl
xor
adcl
push
mov
add
mov
mov
mov
cmp
mov
mov
je
or
mov
sbbl
xor
add
sbbl
imul
mov
movl
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
addl
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbbl
xor
adcl
add
cmp
movl
jne
subl
push
orl
pushl
pushl
call
mov
mov
andl
mov
mov
mov
orl
mov
subl
mov
subl
movl
andl
mov
decl
movl
mov
adcl
xor
add
jmp
notl
mov
xor
lea
push
mov
xor
lea
push
adcl
mov
xorl
pushl
call
mov
add
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
ret
push
mov
push
movl
push
mov
mov
mov
mov
movl
movl
movl
cmp
jne
or
mov
sbb
mov
movl
jmp
cwtl
sahf
inc
mov
ja
mov
movl
dec
add
jle
mov
sahf
adc
fists
cmp
sub
ret
cmpb
pop
mov
mov
or
or
jmp
stos
insl
sub
out
xor
mov
cmp
mov
xor
mov
xchg
pushf
pop
js
add
xchg
dec
shrb
xchg
cmp
xchg
xchg
ffreep
scas
mov
mov
insb
push
loop
jo
xor
jb
cli
cmp
not
inc
mov
jle
cli
mov
sbb
aam
push
push
lock
inc
push
inc
test
rcl
sub
jmp
xchg
cld
pop
or
cld
jne
mov
mov
lea
pop
nop
xor
sub
mov
mov
icebp
insl
xchg
arpl
aam
mov
ret
add
pop
pop
add
inc
in
jne
jmp
push
movsb
cmp
les
adc
sarl
inc
mov
pop
nop
addb
subl
jns
mov
cmp
jne
cli
mov
hlt
cwtl
adc
mov
fisubrl
data16
add
jg
mov
cld
sbb
imulb
jmp
mov
sub
xor
stos
das
je
jo
imul
adc
subb
and
mov
inc
imul
stos
test
fldt
jbe
add
pop
xchg
lods
mov
and
mov
mov
rcrb
mov
jae
lock
pop
out
or
sarl
sbb
adc
inc
add
roll
push
jge
add
rolb
getsec
inc
add
fiaddl
add
cmp
es
repz
movsl
pop
xor
popa
out
inc
cmp
mov
sbb
sub
mov
jle
int3
xor
shll
push
pusha
mov
inc
cmpsb
xor
push
movsb
mov
cmpsl
adc
hlt
adc
push
sbb
int3
test
mov
or
repnz
outsb
into
cs
sarb
lret
out
cmpsl
pop
dec
shl
ljmp
shll
popf
add
hlt
sbb
mov
mov
int
sub
clc
scas
xchg
sbb
cmp
sub
imul
adc
xchg
add
cmc
test
and
or
add
lcall
insb
dec
rcrl
push
xor
mov
mov
arpl
enter
pop
movsb
inc
cmp
roll
call
daa
ss
js
scas
push
cmp
push
mov
js
outsl
cmp
cld
sahf
fwait
negl
mov
in
push
iret
sbb
dec
out
adc
stc
cmp
fidivl
xchg
pusha
lock
aaa
in
arpl
xchg
push
pushf
lock
aas
pop
mov
xchg
aas
ret
cld
mov
adc
ret
jno
test
pop
test
mov
push
xchg
jle
jns
jnp
ret
jge
cmp
cmp
jmp
mov
loop
push
add
insb
jne
pop
or
out
std
bound
lret
dec
inc
dec
mov
arpl
xor
mov
jg
rclb
pop
sbb
sbb
mov
jge
mov
shl
testl
mov
rcl
mov
cmpsl
in
in
cmp
outsl
dec
xchg
ret
add
mov
adc
fldenv
add
not
andl
and
mov
mov
jmp
xorl
mov
jmp
dec
rcrb
mov
push
loope
sahf
adc
mov
jle
mov
fcompl
out
ret
outsb
mov
jne
mov
adc
dec
xor
les
out
andb
push
xchg
es
int
sub
push
insl
int
cmc
mov
mov
out
xor
ds
xchg
push
mov
andb
sub
xor
fisubrs
mov
xchg
addb
jnp
es
mov
or
and
pop
lcall
out
lahf
aad
in
popa
test
rcrl
xchg
sbb
lret
add
dec
mov
cmpsb
fisubrl
movl
rorb
adc
std
scas
fmull
and
xchg
mov
movsb
sahf
inc
jge
in
cmp
icebp
cmc
mov
mov
or
and
and
or
leave
icebp
iret
ret
pop
cmp
mov
popa
or
mov
psrlq
mov
sarl
rcrl
subb
loope
shl
test
aam
mull
pop
dec
inc
sub
mov
push
in
icebp
mov
outsb
mov
in
xchg
ss
cmp
dec
stos
adc
mov
lcall
jnp
out
sub
or
mov
and
es
je
sub
into
stos
scas
dec
movsb
or
jb
xchg
mov
jg
adc
lret
daa
xchg
jl
std
pcmpgtd
fmuls
jg
add
xor
pushf
jl
push
jg
sar
mov
outsb
out
lds
push
mov
jno
in
movsl
push
out
imul
push
push
cmp
cld
xchg
orb
stos
loope
dec
loopne
inc
stos
pop
arpl
jne
call
test
jmp
and
in
popa
push
lret
xchg
sti
jne
push
int3
les
mov
pop
xor
and
dec
sub
jge
or
mov
popf
sbb
sub
mov
adc
fsubrs
and
fwait
cli
rcll
leave
or
jmp
fsubp
mov
add
pop
mov
inc
push
roll
aas
sub
rorb
bound
jae
mov
pop
jbe
pop
lock
enter
out
sarl
dec
aas
adc
jl
xchg
pop
sbb
push
inc
idiv
jl
adc
pop
mov
into
adcl
push
xchg
out
outsl
mov
movsl
and
lods
push
leavew
mov
shlb
js
lods
mov
sub
mov
in
je
ret
or
insb
outsl
inc
cld
xchg
pop
xor
mov
ret
jl
rcl
clc
and
shrl
dec
mov
mov
xor
outsb
xor
sub
add
shl
xchg
mov
xchg
push
push
jo
push
fldenv
dec
xchg
fnstenv
jns
ret
dec
jns
int
icebp
sbb
cmpsb
cmp
adc
rolb
xor
push
gs
xchg
rorl
add
in
leave
daa
pop
insl
mov
add
xchg
out
inc
push
dec
xor
loopne
push
push
adc
pop
std
mov
mov
and
and
scas
push
pop
sbb
ret
sarb
mov
in
ljmp
outsl
sbb
rcrb
jno
ret
pop
call
mov
xchg
xchg
es
cmc
out
xchg
test
cld
dec
ret
push
mov
sub
andl
movl
mov
or
jmp
pop
cmp
inc
pop
arpl
js
push
loope
movsb
or
or
jle
add
push
test
xchg
inc
xchg
aam
mov
pop
lret
pop
xor
mov
fisttps
or
xor
sarl
push
pop
push
mov
pushf
insl
cmpsb
pop
rcrl
mov
xchg
bound
jmp
das
cmc
fisttps
in
outsl
fisubrl
xor
mov
mov
xor
jecxz
lds
push
or
dec
cmp
jno
mov
jmp
and
mov
cwtl
pop
hlt
push
arpl
in
pop
sbbl
fwait
cmp
mul
cltd
mov
mov
jne
rcrb
aam
pop
xchg
lret
or
orb
mov
mov
int3
enter
adc
xor
imul
add
adc
fists
mov
push
cmp
or
nop
jno
mov
adc
das
sub
mov
stc
leave
sti
xchg
sbb
int3
add
dec
or
push
mov
add
mov
cmp
insl
loope
imul
testb
dec
push
mov
hlt
mov
lret
xchg
pop
cmp
xchg
ss
inc
lcall
pop
dec
sub
fidivrl
jo
xlat
aam
or
addb
inc
in
dec
or
imul
sbb
cwtl
aas
add
jge
mov
ja
xchg
adc
ljmp
ds
pop
loope
repnz
xchg
aam
fmull
push
ljmp
inc
fisubl
call
cltd
in
pop
push
sub
das
out
mov
mov
lods
dec
add
sub
ljmp
sbb
outsb
js
cmp
loop
fs
sahf
insb
pop
jno
push
xchg
bsr
sub
movl
xor
mov
mov
sub
mov
and
lea
sub
mov
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
pushl
call
jmp
xor
push
lea
mov
mov
jmp
aad
shlb
dec
js
js
mov
ret
and
sarb
jl
jle
ljmp
fistps
js
gs
cmp
pop
mov
xor
cmp
mov
je
and
or
lcall
movsl
xor
mov
jmp
mov
int3
mov
or
test
jno
fdiv
xor
sbb
loop
inc
andb
jge
jge
ljmp
fidivrl
push
pop
loopne
jnp
mov
out
inc
movsb
mov
ss
popa
sub
pop
mov
sti
mov
inc
and
or
ja
pop
sahf
enter
adc
aaa
popa
mov
aaa
inc
push
inc
pop
movsl
mov
in
mov
sbb
add
test
dec
and
xchg
jno
pop
sub
out
push
xor
cmp
inc
and
inc
outsb
inc
idivb
sbb
repz
js
sub
inc
lods
pop
rorl
aaa
imul
rorl
and
jbe
fdivrs
and
dec
ljmp
test
inc
inc
cmp
mov
jmp
cld
lods
xchg
mov
inc
push
adc
mov
cld
cwtl
repz
xchg
insb
js
pop
notb
mov
test
lods
lret
fistpll
movsl
pop
pop
jns
cwtl
pop
lahf
in
xor
loope
add
out
or
dec
lds
arpl
mov
sar
push
xchg
sbb
je
icebp
jnp
sbb
mov
pop
push
xor
adc
dec
or
xchg
push
sbb
loope
and
mov
mov
in
mov
arpl
movsl
adc
xchg
fsub
movsb
ljmp
mov
mov
mov
add
or
cmp
or
sbb
cltd
sbb
push
adc
ret
push
sub
push
mov
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
neg
jmp
loopne
test
cmp
pop
out
hlt
fldz
and
jle
add
cld
pop
push
stc
add
pop
pop
mov
cmpsl
mov
cltd
arpl
pop
rorl
pop
in
dec
in
out
hlt
sbb
and
cmp
or
sahf
call
xor
push
lahf
lcall
sub
adc
ss
mov
scas
outsb
xor
test
dec
clc
cmp
outsl
std
sarl
mov
outsl
int3
add
push
jno
andl
pop
cmpsl
mov
add
shlb
pop
dec
add
push
xor
sarb
mov
adc
lea
cli
stc
cmp
jns
test
in
cmp
xor
lds
cmp
sbb
inc
into
add
ds
pop
mov
jo
sub
mov
xor
and
and
js
int
ja
xchg
jno
sti
mov
jle
faddl
sub
jae
inc
and
fisubl
push
mov
xor
arpl
in
sbb
xchg
lahf
sbb
xchg
push
inc
mov
sbb
hlt
sarb
lods
add
mov
xor
pop
mov
xchg
lds
in
pushf
cmp
push
cltd
out
test
inc
in
sub
push
pop
and
mov
test
adc
mov
push
out
std
mov
clc
std
rorb
sbb
and
inc
sub
js
inc
testb
call
jl
jo
stc
daa
sub
jmp
cld
cmpsl
clc
mov
div
shl
inc
add
lcall
aaa
xor
rorl
and
xorb
pop
sbb
sub
or
movsl
fimuls
movsl
cltd
pop
adc
mov
cmp
inc
bound
inc
inc
xchg
ljmp
jmp
out
dec
pop
stc
mov
loop
push
test
dec
sub
adcl
mov
movl
xor
addl
xor
andl
add
negl
add
incl
div
mov
movl
movl
movl
cmp
je
movl
movl
andl
lea
xor
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
and
out
je
inc
adc
sbb
mov
int3
jle
add
sub
sub
adc
mov
jbe
jp
xor
sti
mov
loopne
cmp
fimull
addl
hlt
jnp
xor
loopne
xchg
mov
in
xor
adcl
out
in
out
xchg
movsl
wbinvd
popf
mov
xor
inc
js
dec
or
push
jge
or
fldcw
add
inc
ja
and
sub
movsl
orb
lret
sub
xchg
mov
addr16
cltd
lods
mov
jnp
ja
loopne
cmpsl
xchg
sahf
mov
ljmp
sbb
add
into
mov
sub
mov
shll
in
js
lea
scas
iret
loop
addr16
dec
adc
dec
sub
mov
xchg
pop
xchg
jnp
pushf
cltd
sub
jne
mov
xchg
sbb
sub
lods
xchg
test
arpl
xchg
in
clc
dec
jne
adc
dec
adc
jmp
lds
pop
pop
mov
movsb
andl
inc
push
and
jbe
xchg
ja
adc
xor
leave
xchg
repnz
add
add
fistpll
ror
ljmp
and
xchg
cmp
aad
call
dec
test
add
pushl
push
add
lea
jle
add
pusha
test
or
mov
fisubrs
mov
jno
movsl
stos
mov
xor
addb
mov
jecxz
adc
mov
in
inc
cli
stc
fisttpl
adcb
fcoms
mov
jo
pop
test
mov
add
push
arpl
sub
xchg
pop
test
dec
add
xor
sbb
ljmp
mov
and
push
sbb
fisubs
rclb
ret
jle
sub
pop
xchg
icebp
iret
xchg
popf
or
in
jp
cmp
out
cmp
inc
hlt
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
mov
mov
movzbl
or
mov
orl
mov
mov
orl
push
xor
xor
sub
push
mov
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
sub
add
mov
addl
lea
not
mov
mov
mov
and
mov
andl
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
lea
jmp
ss
lods
jmp
push
mov
cmpl
jl
jle
fsubs
js
mov
je
ret
pop
lea
mov
jo
sub
cmp
sbb
push
test
fs
pop
gs
loop
int3
lods
and
jae
push
nop
pop
inc
add
or
cwtl
xor
push
out
cmpsl
cmp
fisubl
rcrl
pusha
into
jae
lea
in
fucom
leave
aad
shr
or
arpl
jne
mov
inc
jg
push
loope
loopne
dec
hlt
add
out
mov
test
adc
push
mov
adc
jne
test
fwait
xor
cmp
lcall
fcoml
sbb
dec
outsl
and
push
jb
pushf
lock
bnd
scas
or
mov
xor
push
mov
insl
fldcw
shll
out
mov
mov
cmp
mov
fnstsw
cs
sahf
mov
sarb
ja
incl
pusha
lret
outsb
lds
fdivrl
neg
sub
push
orl
push
leave
sub
bnd
sbb
and
xor
mov
mov
ss
pop
call
and
clc
dec
out
xchg
dec
add
pop
jno
into
dec
sarl
iret
test
xchg
inc
divb
dec
cmp
adc
ss
inc
loopne
cltd
xchg
jecxz
mov
fisttps
dec
insb
mov
idiv
mov
mov
push
negl
add
repz
popl
jb
jnp
test
mov
jl
sbb
jns
ss
xchg
mov
ds
and
mov
pusha
insl
lods
mov
push
cmp
cld
adc
shl
mov
int
repz
pop
jbe
pop
pop
xor
ljmp
xlat
push
push
loop
loopne
movsl
int3
and
cltd
pushf
mov
adc
push
icebp
scas
call
cmp
cltd
push
push
sub
loop
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
inc
mov
orl
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
xchg
inc
in
mov
das
std
sbbb
in
jle
and
jle
sub
jno
add
push
fistpll
mov
xchg
fcoms
popf
shlb
mov
ljmp
mov
jnp
add
push
dec
fadd
out
gs
ja
gs
pmulhuw
lret
adc
out
xor
int3
in
ljmp
aaa
movsl
out
pop
lret
popa
sbb
add
mov
jbe
push
mov
jae
dec
data16
jne
pop
rol
lock
in
dec
mov
jb
xchg
jmp
enter
push
push
test
gs
aad
pop
mov
cmp
insb
popa
mov
pmullw
push
mov
push
push
push
inc
in
push
push
repnz
xor
daa
shll
in
cmp
pop
cmc
jg
or
and
clc
xchg
inc
fwait
adc
ret
or
sub
jl
adc
subl
clc
cmp
add
and
repnz
jno
inc
rcll
out
dec
sub
aad
sub
lds
inc
sub
push
pop
aas
mov
cmpl
in
mov
sub
jmp
adc
mov
sahf
or
sub
pop
and
int
cmp
idivb
mov
dec
push
push
xchg
push
pop
pop
mov
insb
adc
arpl
sbb
je
mov
push
prefetch
or
and
pushf
mov
mov
adc
aad
jmp
sbb
xor
cltd
xlat
fisubrl
dec
dec
jne
mov
sbb
add
aaa
push
dec
sub
and
fucomip
push
sbb
xor
fs
aam
and
sub
fsts
in
loopne
subl
and
sub
push
sti
stos
nop
cmp
cmpsl
sarl
inc
sub
push
adc
cltd
std
cmp
cmp
orb
cs
aaa
ss
in
int3
ss
lock
mov
adcl
mov
sbbl
jmp
pop
push
jg
xor
add
push
jle
and
jle
in
sarl
arpl
mov
imul
imul
sbb
cs
sbb
and
xor
mov
xchg
jb
gs
outsb
ljmp
fists
data16
push
cltd
outsl
sarb
or
mov
lods
mov
hlt
enter
or
test
in
outsl
shlb
xorl
pop
pop
jno
cld
pushf
sub
mov
out
mov
ficomps
jb
push
ret
pop
stos
mov
iret
test
pop
in
imul
mov
pop
xor
and
lds
outsl
in
ja
test
mov
dec
in
addr16
sub
sbb
cmp
and
out
fndisi(8087
sbb
push
xchg
push
in
push
mov
into
xchg
cli
sbb
adc
ja
jmp
or
inc
out
mov
in
jp
mov
cwtl
leave
dec
and
pop
imul
mov
sbb
pop
out
insl
mov
mov
or
and
push
dec
jl
pop
and
sub
sti
or
sar
hlt
popf
dec
lahf
stos
ja
sbb
leave
adc
push
inc
fsubrs
movsl
mov
sarl
outsl
stos
pop
sahf
xchg
pop
pop
pop
lret
outsl
arpl
xor
mov
jmp
pop
daa
xor
jb
pop
push
int
inc
add
mov
pop
cld
sahf
addr16
add
jae
outsb
pop
stos
repz
jge
jp
and
jno
jae
lret
shll
add
jmp
mov
jae
ds
movsl
scas
mov
arpl
add
mov
mov
pop
in
int3
xor
daa
mov
sub
int
lock
push
and
aaa
xchg
mov
cmp
mov
mov
inc
ja
cmp
mov
andl
rclb
stos
js
sub
clc
cltd
and
lret
mov
xorl
mov
adcl
movzwl
xorl
add
notl
mov
mov
or
mov
xor
add
cmp
jne
dec
mov
mov
xor
add
cmp
jmp
stos
adc
inc
jno
stos
icebp
jl
and
sbb
and
jle
sbb
pusha
sub
cmp
mov
lret
mov
pop
inc
cmovge
into
mov
push
dec
aaa
repz
mov
pop
mov
adc
inc
add
inc
cld
jle
xchg
cmp
pop
sub
mov
pop
sbb
cmp
repnz
mov
je
inc
divb
adc
and
sub
pop
lahf
mov
or
push
fs
cmpl
cmp
clc
pop
aad
shll
fmuls
sbb
pop
mov
into
push
xchg
clc
fwait
mov
jecxz
pop
repnz
sar
pextrw
xchg
jmp
push
ret
push
out
hlt
adc
testl
xor
shlb
gs
subl
cmpsb
jle
ret
xor
mov
pop
andl
enter
je
add
xor
dec
fcomi
mov
sbb
sub
dec
sub
in
and
or
mov
push
push
inc
loop
inc
scas
push
xor
xor
in
dec
les
fstpt
pop
cli
inc
mov
sbb
jmp
rcr
push
lds
cmp
sbb
jns
mov
jbe
mov
shll
mov
pand
fwait
or
das
pop
in
loop
sti
and
cmp
or
pop
and
xchg
sbb
push
hlt
xchg
mov
cmp
repnz
xchg
cmp
imul
pop
in
push
test
outsb
sbb
fst
mov
lcall
and
fs
cmp
popa
xor
jle
pop
mov
clc
inc
adcb
xlat
mov
mov
pop
leave
jl
std
cmpsb
das
out
psubd
sti
xchg
icebp
cmp
pop
pop
scas
push
xor
xchg
gs
mov
lds
jns
fdivrl
or
add
add
lock
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
jmp
xchg
or
jmp
ret
mov
jle
and
jle
jns
mov
xor
mov
push
jmp
call
pop
add
ret
cltd
int
jae
and
push
imul
sbb
or
jbe
jno
sbb
sbb
neg
ss
mov
ror
sub
xor
and
mov
scas
ret
xchg
mov
dec
xchg
ds
mov
sti
lea
inc
insl
mov
sbb
js
adc
sub
stos
jle
fcomps
ret
imul
xchg
ss
ja
daa
push
fisubl
mov
xor
lock
mov
in
xor
mov
pop
inc
int3
push
cltd
out
cmp
jns
add
call
stos
push
mov
in
push
or
loope
inc
jge
inc
pop
ret
cmp
jae
mov
dec
cmp
sarl
mov
dec
xchg
lret
imul
cmc
add
xor
mov
xor
sub
mov
xchg
xchg
and
and
in
das
fwait
sub
jnp
pop
mov
or
ret
outsl
inc
popa
negb
xor
push
inc
in
lret
mulb
fwait
jmp
adc
and
cmc
push
jne
mov
push
adc
sub
mov
int3
sti
sbb
idiv
test
fnstcw
sbb
or
rcrb
sbb
mov
push
cmp
notb
test
mov
adc
push
cmpsl
cmc
stos
mov
adc
imul
arpl
jnp
pop
dec
lds
cmp
dec
punpcklwd
lods
xlat
and
xchg
sarb
xchg
xchg
sub
cld
stc
jl
subb
fwait
orl
or
push
in
cmp
sub
pop
test
int
xor
cmp
sbb
lret
sti
cmc
ja
add
jl
push
arpl
cltd
xchg
inc
incb
lret
fbld
inc
cld
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
je
and
adc
or
jle
and
jle
jmp
jg
aad
push
loope
lret
ja
imul
and
and
jp
xor
cld
jae
out
dec
adc
std
mov
dec
sbb
paddd
mov
or
enter
fadd
scas
mov
aad
fsubr
cmpsb
dec
call
xor
jmp
pop
pop
xchg
jno
dec
stos
repnz
sbb
inc
jp
push
cmc
stos
je
cmp
ss
insb
xlat
call
lret
mov
mov
jg,pt
mov
push
ds
push
inc
ret
mov
das
and
mov
rcr
int3
dec
push
hlt
clc
retw
outsb
out
inc
icebp
sarl
insl
inc
pop
in
inc
outsl
mov
bswap
or
jae
shlb
int
push
pop
sbbb
cmp
xor
imul
sbbl
dec
push
and
cld
and
or
fdivrl
inc
das
pop
sbbl
inc
push
ret
or
stos
xchg
addr16
lods
mov
sub
je
dec
adc
inc
les
sbb
jno
fistl
push
outsb
push
sbbb
sub
sti
mov
icebp
orb
test
push
gs
cwtl
inc
nop
and
lock
cmp
lds
aad
out
hlt
jne
xor
insl
adc
les
mov
push
outsl
lods
je
cs
fucomip
push
leave
xchg
in
std
sub
xchg
add
std
dec
cmp
cmpsl
roll
xrelease
rcrl
cld
jle
loope
dec
mov
ds
xchg
mov
pop
and
in
push
pop
stos
clc
int3
inc
ret
xchg
and
sub
movsl
arpl
cmp
and
dec
scas
lret
int3
cmpb
jg
popf
mov
rcrl
adc
rcrb
jno
mov
dec
lcall
inc
dec
or
mov
sbb
jl
test
jbe
jo
dec
les
mov
ret
fisubl
adc
fldl
cmp
popf
pop
loope
movb
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
jmp
sbb
outsl
jno
out
jne
mov
mov
jle
and
jle
sub
imul
movsl
jl
fildl
and
inc
jb
or
push
cs
jl
and
imul
mov
popf
idiv
enter
or
pop
sub
xchg
pop
jge
dec
aaa
icebp
add
hlt
aam
into
push
jne
cli
test
ficomps
mov
cmp
sub
sub
pushf
lcall
and
inc
cmp
or
or
popf
incl
and
ret
aas
sarl
mov
inc
js
testb
mov
cmp
push
ret
dec
push
cltd
sarb
sbb
jb
in
mov
adc
fs
mov
cmp
mov
push
xchg
pop
ret
xorb
add
std
or
cmp
push
jo
xchg
lcallw
arpl
lret
xchg
push
sub
mov
pop
adc
pusha
mov
cmp
inc
sbb
jae
or
xchg
stos
cmp
sub
push
ljmp
aaa
hlt
pop
and
sbb
or
std
pop
pusha
popa
in
mov
in
cmp
js
adc
sbb
cmp
in
pop
mov
out
inc
pop
jmp
add
adc
xor
pop
insb
orl
sti
int
cmp
sub
sarb
lock
lds
insb
xor
cld
scas
mov
cmp
and
fisubs
mov
xor
cmp
jns
cmp
out
push
mov
std
push
jb
jb
lret
hlt
mov
addr16
cmp
loopne
cmp
dec
xchg
call
cmpl
add
adc
leave
cwtl
pop
loop
inc
adc
sub
push
jge
adc
fsubp
nop
daa
jmp
gs
ja
pop
adc
incl
mov
mov
pushl
jmp
lods
mov
outsb
xorl
pop
xchg
jle
jl
jle
add
je
sbbb
stc
inc
movsl
push
mov
pop
push
jg
repz
mov
xchg
cmpsl
add
jnp
call
scas
dec
xor
push
pop
out
in
and
inc
adc
int3
shrb
sbb
imul
lods
std
insb
pop
xor
jmp
out
movsb
ss
icebp
ja
lock
stc
push
mov
aaa
clc
push
lock
adc
mov
xchg
jecxz
jns
sbb
loopne
fs
stos
insb
pop
lret
pop
test
mov
mov
push
adc
xor
jle
fwait
or
xor
pop
and
cmp
aas
lods
jne
xchg
cwtl
cmp
jae
loop
add
pop
jno
and
push
je
clc
loope
insl
or
fists
pusha
test
dec
cmp
xchg
loop
ret
sarl
dec
ficomps
sbb
mov
loope
testb
push
pop
jmp
out
gs
pop
and
or
adc
test
cs
pop
insb
xchg
je
or
ret
dec
test
or
xchg
inc
jno
mov
push
in
sbb
mov
xor
bound
mov
dec
push
xor
mov
xor
push
xor
icebp
dec
addr16
or
push
sub
mov
cmpsl
sbb
fwait
pop
sarb
mov
xchg
out
shl
cmp
xchg
nop
inc
sub
or
movsl
sbb
mov
sub
sub
imulb
std
cld
jbe
into
call
and
mov
in
mov
pusha
and
rorb
add
stos
add
in
dec
das
pop
ret
pop
mov
negl
mov
xor
pop
sbb
mov
jecxz
pushf
mov
mov
rolb
loopne
xor
ja
and
jmp
loope
ljmp
clc
ljmp
fstpt
and
jle
dec
sahf
scas
jno
ljmp
push
adc
mov
movsb
test
adc
daa
xor
aas
out
mov
call
mov
mov
add
cmp
scas
pop
inc
aaa
dec
stos
js
add
push
pop
or
mov
rcl
mov
xchg
xor
xor
scas
lds
testl
int3
dec
or
imul
cmpsb
or
lret
subl
cmp
mov
mov
js
sbb
mov
xlat
cmp
in
pop
mov
cltd
cwtl
inc
in
sbb
dec
cmp
jbe
inc
xor
xor
jge
xchg
dec
sub
int3
das
sub
mov
shll
xor
pusha
pop
mov
adc
outsb
mov
dec
pop
push
bound
cli
pop
leave
out
dec
daa
push
and
daa
sub
pop
ss
lahf
dec
adc
test
mov
les
int3
mov
sub
fnstsw
enter
out
jmp
movsb
mov
adc
fisubs
sub
ds
cs
lcall
mov
mov
add
in
pop
lock
clc
and
loope
add
mov
data16
sbbl
xchg
mov
jns
lods
fcmovnu
into
jp
ja
mov
jg
mov
jecxz
xor
xor
movl
cld
push
test
in
jle
mov
fistpl
or
sub
cmp
scas
icebp
jb
shl
push
cli
mov
or
or
pop
pushl
jbe
sub
stos
dec
inc
movsl
sub
add
lods
sbb
bound
adc
xchg
nop
ret
add
jae
sbb
dec
test
mov
add
and
sti
xor
xchg
jne
push
xor
scas
sbb
insl
popa
mov
fcmove
call
adc
mov
ret
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
add
movl
xor
xor
xor
mov
push
sub
mov
addl
xor
mov
add
orl
mov
mov
sub
mov
jmp
shrl
stos
fadd
cwtl
pushf
fbstp
adc
fnstcw
cmp
ret
lcall
mov
out
rcll
xorl
lret
cmpb
int3
jl
aas
add
cld
movb
or
inc
inc
fstl
ja
fcompl
xchg
lock
dec
rcrb
les
fiadds
loopne
test
dec
push
ds
jecxz
das
and
sub
adc
add
shll
lea
xor
ja
fimuls
and
pop
inc
or
mov
jmp
jb
sarb
mov
push
adc
mov
mov
adc
inc
mov
mov
faddp
movsb
enter
xor
cmpsl
mov
or
sarb
sub
rcrl
adc
movsl
and
sti
aam
mov
add
xlat
xchg
xorb
add
push
jg
cld
ret
aam
test
orb
inc
lahf
stos
sbb
rcr
jge
fucomip
mov
loop
je
jg
xchg
mov
js
in
sbb
and
shll
xchg
jno
fcmovu
xor
test
jl
push
pop
jecxz
insl
and
test
cli
stc
testl
sub
pop
xchg
cmpsb
cmp
fldl
mov
xor
lea
push
mov
cmp
mov
cli
or
imul
out
out
sbb
fsubp
jp
xchg
dec
cmp
sti
fistpll
push
fsub
scas
pop
orl
addr16
add
cmpsl
jl
mov
and
aaa
mulb
loopne
mov
fadd
mov
in
adc
popa
ds
sub
push
sti
xchg
mov
enter
pop
xchg
lds
cmp
mov
repnz
jae
ss
ljmp
or
xor
es
or
stos
xchg
daa
lret
inc
jmp
in
inc
jge
xchg
stos
stos
push
pusha
cmp
add
adc
add
ds
adc
or
pop
dec
mov
sub
pop
xchg
cli
pop
add
idivb
and
pushf
sbb
popa
loope
xor
andl
cmpsl
sbb
push
sbb
pop
push
push
sbbl
jmp
lds
popa
mov
fisttpll
dec
jle
jle
cmp
add
inc
repz
or
jno
fwait
cmc
push
aam
into
and
lea
hlt
mov
call
or
fwait
xor
fucom
aas
mov
jecxz
hlt
adc
out
fisttpll
add
sbb
lods
ret
cmp
ret
jo
push
cs
xchg
mov
push
push
sbb
mov
test
pop
adc
fidivl
pop
or
cmp
push
pop
cmpl
insb
xor
mov
scas
out
adc
dec
and
mov
add
dec
add
jmp
mov
mov
push
jl
dec
adc
cld
std
out
and
pop
mov
pop
pop
ret
inc
cmp
jge
nop
sbbl
and
out
mov
ret
pop
fucomp
les
xlat
sti
mov
cld
jle
aam
int3
or
sub
push
or
jg
xchg
sbb
sbb
mov
sahf
mov
rcrl
lret
nop
lahf
in
lcall
cwtl
push
push
mov
arpl
mov
insb
bnd
inc
shlb
push
cmpsl
mov
iret
rcl
sbb
aad
outsl
sbb
sahf
mov
add
push
daa
in
jmp
xor
mov
jg
jae
lods
outsb
xchg
nop
data16
out
jp
das
repz
dec
add
xchg
mov
js
jle
divb
mov
inc
outsl
cmp
xchg
into
or
xchg
movsl
test
mov
addr16
aam
dec
fcmovu
sbb
xchg
roll
popf
nop
ljmp
xchg
cld
sub
inc
test
or
stos
pop
cwtl
in
ss
inc
adc
aaa
fldl
dec
mov
out
enter
pushf
mov
or
lret
dec
es
fwait
arpl
mov
xchg
js
and
cmp
push
out
mov
mov
int
xchg
jmp
mov
iret
sbb
xor
shrb
sub
gs
sub
xchg
rcrl
pop
test
movl
je
mov
mov
sub
mov
mov
or
jmp
push
lcall
cmpsl
or
inc
pop
loope
xchg
cmpsl
cmp
jle
cmp
adc
in
push
dec
imul
out
loop
mov
cmc
sbb
mov
in
rcrl
jae,pn
je
adcb
adc
adc
xor
mov
shl
adc
fcompl
or
mov
mov
inc
and
pop
icebp
sbb
in
jmp
push
push
jg
jp
jge
pop
int
cmpsb
cmp
push
xorl
addr16
push
dec
scas
push
rcrl
movsl
mov
insb
loopne
dec
fwait
mov
lret
cmp
pusha
fbld
jmp
loopne
jnp
in
jne
dec
pusha
xor
ret
bsr
es
or
out
mov
adc
sbb
fimull
fldt
fisubl
xlat
cmp
mov
enter
nop
push
aam
inc
fisubrs
lret
jge
add
rcrl
dec
lret
dec
ret
ret
divl
pusha
cmp
push
in
bnd
out
andb
ds
cmc
pop
test
data16
xchg
inc
cmpsb
int
aam
sbb
inc
in
dec
pop
or
and
movsb
adc
mov
in
push
lods
adc
sbb
int3
imul
adc
and
add
sbb
bound
inc
into
xor
push
cltd
outsl
fsubrs
inc
pop
sub
sbb
dec
adc
mov
mov
scas
mov
pop
cwtl
sahf
and
in
mov
pop
cmpsl
jg
inc
rolb
pop
ret
sbb
adc
es
loopne
inc
movsb
jnp
jne
in
xchg
sub
pop
dec
out
jge
xchg
dec
aas
mov
sub
adc
push
and
sti
or
fidivl
inc
aas
lods
popf
outsl
mov
sbb
cmp
dec
gs
loopne
jge
push
sti
adc
shl
cwtl
fstpl
lock
rorl
cltd
bound
sbb
sub
icebp
out
scas
in
shll
fldl
into
pushf
add
or
inc
cld
dec
xor
jp
cli
and
mov
mov
imul
mov
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
orl
mov
jmp
mov
data16
gs
jmp
arpl
jle
cmp
pop
jg
jb
sbb
fstpt
popf
xchg
loope
sub
lds
add
dec
ja
xchg
ficoml
add
icebp
out
mov
jle
xchg
hlt
mull
jo
sub
loope
adcb
xor
stos
cltd
ret
leave
fdivrl
in
in
jno
adcl
cs
sub
push
sbb
test
in
add
stos
gs
inc
and
aad
mov
mov
or
jmp
mov
es
cmp
and
jl
mov
pop
push
shl
cld
aas
push
stos
mov
div
pop
inc
sub
pop
and
dec
jl
ss
cs
mov
test
mov
rolb
and
add
int
lahf
imul
pop
dec
cmpsb
sbb
push
rol
ret
in
in
imul
mov
cmp
sub
ret
icebp
push
jb
mov
lds
mov
cmp
and
push
loop
aam
jne
xchg
cld
ret
add
fcoml
or
shrb
test
fisubs
pushf
adc
xchg
jl
adc
leave
imul
shrl
loope
ret
mov
push
test
sub
leave
xchg
xor
inc
xchg
lods
mov
cmp
in
mov
arpl
pop
xchg
int
cld
andl
xchg
fisubl
adc
faddl
sti
sub
shrb
inc
pop
dec
jmp
movl
mov
xchg
pop
dec
fisubs
cmp
test
xchg
test
mov
insb
cwtl
jno
fmuls
push
push
or
test
int3
movsb
and
cmp
outsb
pushf
ljmp
inc
js
sbb
push
into
jmp
rcrl
stos
mov
lcall
into
scas
and
adc
test
test
ret
mov
push
test
push
stos
and
mov
lahf
rcr
int
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
add
movl
mov
mov
mov
je
mov
xor
sbbl
add
movl
jmp
imul
jno
dec
test
pusha
lock
or
jle
jl
jle
out
stos
sahf
mov
shrb
repz
insb
ljmp
out
cmp
and
int
mov
jo
test
call
xor
mov
mov
jg
xlat
cmpsl
mov
lcall
lock
clc
jle
mov
shl
jae
and
push
shl
mov
ret
push
out
test
adc
cmpsb
jecxz
mov
pop
or
pop
push
or
js
clc
test
faddl
jmp
aam
dec
mov
mov
cli
repnz
nop
xlat
jl
shll
fcomps
outsb
sahf
cmp
sbb
out
mov
mov
dec
xor
roll
dec
faddl
lea
ss
push
shrl
ljmp
ss
xchg
adc
mov
pop
cltd
cmp
xor
and
cli
lods
inc
pushf
out
mov
inc
lods
hlt
cmp
mov
sub
inc
xchg
faddl
push
dec
aas
cmpsb
hlt
jg
popa
adc
sub
mov
push
xor
pop
popa
aas
jl
out
js
push
imul
jge
sbb
scas
repnz
xchg
cmp
pop
add
add
fs
jnp
xor
adc
popa
inc
shll
mov
sahf
out
je
and
xchg
stos
jg
mov
xchg
push
ss
lock
xchg
sti
movsl
clc
mov
jae
jmp
sbb
stos
int
es
inc
mov
inc
jmp
movsb
dec
test
mov
cld
cld
or
push
dec
test
mov
adc
dec
pop
sub
push
jb
jg
jo
nop
mov
cwtl
mov
xor
lahf
inc
add
xchg
out
mov
pop
jp
lods
bound
sbb
push
mov
add
mov
push
mov
testl
xchg
cmp
sbb
sbb
in
popw
das
or
inc
push
push
pop
sbb
pop
cmpb
out
cwtl
pop
mov
repnz
cmp
clc
movl
jne
adcl
pushl
addl
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
addl
add
movl
cmp
movl
je
addl
pushl
xorl
pushl
decl
call
movzwl
sub
jmp
or
and
loopne
shl
sti
and
jns
push
in
jle
cmp
movsl
call
push
xorl
push
and
fcmovbe
and
adc
repz
es
dec
and
cmpl
jb
mov
jmp
jl
push
adc
xor
inc
sbb
lahf
adc
cmp
push
xor
addr16
ds
sub
dec
call
mov
into
hlt
nop
jno
test
sbb
hlt
outsl
xchg
clc
fcmovnu
pop
push
inc
in
mov
mov
stc
fisttpl
jle
int
add
xor
adc
mov
mov
cmp
rcrl
cmp
xchg
adc
cmpsb
insl
sbb
icebp
xchg
insb
pop
std
adc
and
mov
nop
and
sub
imul
xchg
xchg
inc
jecxz
jle
jo
lods
dec
inc
test
dec
in
icebp
mov
pop
mov
test
mov
fwait
mov
std
aaa
in
mov
cwtl
sbb
js
lret
sub
jp
pop
and
mov
movsl
pop
shl
je
add
and
nop
mov
add
xor
mov
and
or
loop
inc
test
loopne
push
lods
and
je
imul
dec
add
loope
xchg
xlat
fidivs
scas
enter
inc
aad
les
push
xor
cs
aad
hlt
call
mov
ror
jne
ret
jg
sbb
fisttpl
push
dec
into
xchg
sbb
sub
jae
fcmovnb
sbb
add
cli
inc
xor
pop
adc
inc
out
adc
and
loope
push
xchg
cmpl
jecxz
dec
mov
ja
or
outsl
fcoms
iret
xor
fidivl
lods
mov
rolb
popf
mov
enter
inc
push
std
test
mov
nop
fsubrl
dec
ret
xor
rolb
jo
int
mov
push
push
lcall
push
push
lock
pop
bound
ret
dec
addr16
push
subl
xor
js
xchg
xor
xor
add
inc
cld
xor
mov
xor
adcl
add
movl
jmp
dec
ret
xchg
push
nop
push
dec
ret
mov
add
ret
shr
jle
cmp
movsb
insb
fistpl
test
mov
jle
jbe
fisubrl
sbb
mov
lds
push
pusha
loope
loope
in
out
outsl
das
pop
inc
xor
or
paddsb
xchg
sti
or
sub
gs
jo
inc
jns
push
sub
popf
pop
add
std
nop
fwait
pop
call
pop
adc
fnstenv
clc
jbe
lods
adc
movsb
pop
pushf
mov
mov
mov
add
mov
negb
bnd
cmp
dec
int3
jbe
aad
jbe
sub
aam
hlt
fs
add
loopne
icebp
push
fcom
dec
push
cmp
bound
ret
mov
xchg
outsl
push
push
int
out
das
jmp
cmp
push
push
pop
push
jp
push
arpl
mov
outsl
xorl
sub
mov
cmp
je
push
das
jae
movsb
jle
or
loope
in
inc
hlt
mov
mov
adc
std
aas
jnp
or
cs
cmpsb
push
cmpsb
in
xchg
mov
sbb
dec
popf
xchg
rcrb
subl
mov
push
or
mov
adcb
jne
lea
pop
mov
sbb
or
xor
aas
inc
jge
inc
mov
adc
sub
test
xor
cli
add
pop
fcompl
mov
aas
fnstsw
inc
ret
jae
xchg
fmull
adc
cmp
out
daa
sbb
inc
push
sbb
outsl
push
cs
dec
jp
sbb
inc
xchg
leave
xor
cmc
inc
mov
xchg
or
ficoml
and
vpmaxub
mov
bound
mov
jg
or
xchg
test
insl
mov
ret
int
das
cmp
or
sub
cmpsl
xchg
int
inc
mov
mov
jle
arpl
or
pop
call
sub
dec
xor
push
jno
jge
in
stc
jmp
mov
jmp
dec
dec
ret
push
jo
in
pop
lods
pusha
push
stc
jns
mov
and
push
pop
or
imul
add
je
add
out
aaa
inc
add
add
add
leave
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
adcl
jmp
stos
adc
imul
adc
lcall
jle
push
xchg
and
mov
jp
cmp
mov
mov
inc
pop
pop
fs
lds
dec
stos
lret
les
hlt
sub
cmp
and
xchg
fdivl
sarb
add
or
xor
mov
sbb
mov
jns
xor
push
or
in
jb
lcall
popf
pop
int
das
and
xchg
xlat
outsl
pushf
data16
addr16
cmp
clc
jb
ljmp
or
cmpsl
fiaddl
jmp
addr16
movsl
jecxz
aad
mov
rorl
mov
es
xor
test
pusha
jmp
orb
rcrl
dec
insl
or
push
lret
or
mov
adc
mov
scas
mov
lret
mov
fists
lret
out
call
in
adc
mov
push
fdivr
mov
out
lock
jb
addr16
clc
faddl
jae
movsl
cwtl
movsb
mov
ffree
cli
shlb
scas
outsl
inc
lods
clc
call
push
shlb
push
lea
and
in
in
dec
sub
sti
jecxz
push
jge
cmc
jp
xchg
or
hlt
cmp
inc
stos
add
or
xor
test
int3
push
sti
add
mov
xor
popa
cld
push
orb
lret
insl
shrb
pop
add
inc
enter
aas
scas
int
cmp
enter
inc
in
out
sar
xor
mov
stos
cltd
sub
insl
out
in
addl
lock
enter
loop
aaa
js
enter
movsl
pop
jg
loope
jo
xor
sub
insl
mov
lock
xchg
stos
bound
insb
pop
mov
hlt
push
dec
fmuls
cwtl
push
pusha
inc
fisttpl
or
stos
stos
xchg
cmp
fabs
sbb
lret
xor
call
in
jne
cmp
pop
fildll
mov
or
mov
mov
mov
notl
add
movzbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
jmp
push
fsubrs
push
inc
orl
jle
jl
jle
in
cmpw
mov
divb
mov
fcmovnu
out
sub
ljmp
or
add
hlt
add
xor
push
pop
xor
adc
push
das
sub
sub
ret
push
outsl
add
mov
sbb
and
loopne
mov
xchg
outsl
sbb
insl
xor
adc
repnz
mov
int3
jno
cmpsl
roll
lret
cmp
repz
jge
fwait
insl
mov
sub
outsl
movb
xor
imul
lock
mov
jmp
mov
ljmp
popf
inc
mov
and
dec
inc
xchg
int
addl
pop
lret
int
jg
and
test
pop
loope
cmp
push
sbb
mov
push
pop
sub
adcb
enter
gs
xchg
pop
mov
sti
push
and
into
hlt
mov
shrl
xchg
or
add
push
mov
pushf
es
ds
and
adc
shll
dec
mov
mov
call
mov
dec
out
mov
popa
push
stos
jmp
pushf
dec
nop
mov
les
mov
dec
push
sets
pop
jle
testl
push
xor
pop
das
scas
or
push
mov
cld
aaa
jbe
dec
aad
aaa
mov
xchg
dec
test
mov
aaa
mov
sti
call
incb
outsl
mov
push
inc
call
fsubl
scas
lret
or
sub
ja
les
mov
mov
mov
insl
pop
xlat
push
stos
add
seta
idivb
scas
cmpsl
jmp
in
mov
and
nop
in
jo
and
lock
mov
dec
out
sub
adc
ss
sar
test
dec
add
inc
push
push
adc
addr16
mov
test
stos
dec
testl
jle
sbb
jl
mov
mov
sbb
sar
out
loopne
ja
inc
in
mov
add
jmp
jno
push
clc
jno
jno
pop
repz
push
ja
jecxz
bnd
cmp
mov
mov
daa
dec
sub
lretw
lock
fs
cmc
jecxz
cld
stos
sbb
pop
pushf
dec
jns
fnsave
or
imul
jo
jne
dec
mov
fisubl
xchg
or
mov
into
add
xor
hlt
add
adc
ret
mov
xchg
divps
lods
cmpsl
mov
sub
aam
iret
in
mov
mov
mov
sub
sahf
xor
shl
xchg
or
mov
dec
sarl
mov
mov
mov
pop
adc
or
jno
fiaddl
adc
arpl
push
xchg
inc
pop
jecxz
jp
jb
insb
ss
sub
popf
fnstcw
or
xchg
or
sub
dec
loope
mov
out
test
xor
pop
mov
inc
inc
jb
pop
cmp
das
cmp
and
fdivs
js
push
test
test
in
jno
jbe
dec
adc
sub
mov
mov
in
fildll
bound
add
or
sbb
add
xchg
push
or
cs
lahf
xor
scas
sub
in
incb
fisubl
dec
pop
out
or
sarb
jo
loope
scas
dec
pop
add
jl
cmp
addr16
insb
in
add
je
push
aas
les
outsb
ja
pop
icebp
jle
pop
xor
mov
out
les
and
jnp
pop
cmp
out
pop
and
in
cli
enter
xor
jge
adc
add
into
pop
lock
rorb
cmp
adc
xchg
cmc
lock
adc
dec
or
hlt
cmpsb
jno
sbb
dec
je
and
neg
push
and
jbe
xchg
enter
cltd
jp
into
or
mov
nop
rcl
mov
xchg
push
sbb
sub
pop
adc
ljmp
stos
pop
inc
mov
add
leave
andb
push
cld
call
push
adc
sub
stos
cmp
cltd
pop
and
and
xor
nop
std
ds
sbb
lahf
xchg
xchg
inc
in
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
pop
sub
imul
rcll
add
call
jl
jle
push
dec
lret
mov
mov
xchg
out
xlat
popa
sahf
dec
lret
xchg
xlat
mov
push
jg
jns
addr16
roll
mov
dec
and
sub
cmp
lods
or
out
dec
sahf
in
lods
mov
xchg
or
test
and
ficomps
test
outsl
cmp
inc
stc
sbb
add
adc
outsb
adc
xor
dec
test
pop
flds
jnp
mov
in
push
scas
aad
test
rcrb
or
cmp
popa
add
or
lods
addr16
cltd
mov
xchg
addr16
loop
insl
fisubrl
adc
and
pusha
inc
jo
jg
sbbb
cmp
fsubr
fisttps
fnstcw
inc
push
pop
xchg
data16
pusha
imul
xlat
xchg
adc
pop
scas
aad
loop
inc
imul
pop
sarb
test
mov
scas
xor
in
pop
xlat
dec
out
pop
imul
shl
sbbb
push
aam
and
into
mov
scas
pop
jmp
fsubrs
inc
iret
sbb
inc
jg
jmp
add
aaa
aad
fldcw
adc
mov
lock
inc
pop
insb
xchg
fsubs
push
orl
jae
mov
cwtl
scas
imul
jl
sbb
sar
push
fdivl
stc
not
and
mov
das
repz
jb
push
lock
mov
movsb
into
or
ds
sbb
das
ss
push
pop
ret
out
cmp
push
mov
lods
sbb
pop
xlat
xchg
inc
push
cli
or
xchg
cmp
mov
push
ret
push
and
push
xchg
testl
adc
or
jno
mov
mov
dec
sbb
scas
pop
cmp
and
stos
add
aam
jecxz
inc
insl
xchg
out
stos
push
out
mov
scas
jne
cmpsl
lds
adcl
fstpl
pop
test
insl
in
jno
pushl
pushl
call
mov
mov
xor
add
cmp
jne
jmp
mov
jo
das
pushf
dec
je
int
in
mov
jle
cmp
mov
in
aaa
or
addr16
gs
pop
subb
imul
mov
or
jbe
lret
fwait
jbe
sub
jno
call
rcl
insl
dec
dec
lods
dec
pop
sbb
mov
movsb
cs
mov
jmp
cbtw
add
out
push
jae
jne
lret
scas
loopne
pop
fldz
xor
dec
das
out
cmp
dec
std
adc
xor
data16
jl
xchg
mov
mov
js
sub
fistpll
jmp
nop
and
jp
repnz
lret
mov
or
ss
adc
shll
fldt
bound
stos
test
pop
mov
dec
out
jae
pop
inc
mov
call
inc
in
cltd
sbb
repz
js
or
movsb
pop
fcoml
xchg
out
ret
mov
lods
pop
mov
cmc
out
pop
lret
mov
clc
insl
out
stc
popa
popf
mov
inc
repnz
xchg
xor
mov
test
pop
pusha
jmp
ss
lock
xor
shll
push
xchg
pop
daa
addr16
jp
movsl
int3
mov
divl
jl
les
xor
mov
outsb
xor
pop
scas
mov
shlb
loope
push
xor
fsts
rcll
sbb
mov
fcmovne
mov
fsubrp
jge
dec
push
mov
or
fiaddl
mov
jns
aad
outsl
sarb
adc
int
sub
sub
jp
xorl
adc
pop
jne
popf
mov
vmptrst
out
hlt
jecxz
cmp
movsb
and
push
call
test
or
inc
or
mov
inc
in
popf
pop
sbb
lods
into
arpl
repnz
fs
clc
inc
sub
pop
int3
or
fstpt
popa
jge
pop
and
and
and
add
pop
cmp
aad
and
jne
jnp
stos
pop
cltd
addl
fwait
cmpsl
push
push
jp
sbb
xlat
outsb
js
jno
push
pop
dec
jg
test
scas
ljmp
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
test
popa
lahf
jno
inc
xor
bound
jl
jle
aaa
clc
aad
mov
jmp
icebp
jns
pop
test
inc
mov
stos
mov
out
cmp
mov
addb
pop
in
and
jp
shll
rolb
dec
cmp
les
jecxz
inc
ficompl
movsl
cltd
fisubs
movsl
push
lcall
mov
std
push
movhps
sbb
jmp
cmpsl
mov
negb
iret
pop
cmp
jne
mov
stos
jnp
adc
aam
pop
cmp
jnp
jmp
or
dec
dec
push
inc
mov
add
lahf
jns
lahf
cmp
adc
cwtl
pop
mov
push
cmp
aad
movb
scas
pop
jae
xor
jne
ss
inc
scas
scas
sbb
ljmp
xchg
fs
pop
pop
jecxz
rcll
cli
sbb
inc
lock
mov
inc
cwtl
xchg
jbe
mov
xchg
fdiv
int
lret
sarl
adc
scas
lret
popf
add
enter
xchg
adc
cmp
sbb
adc
out
vpmacssdqh
push
out
shrb
int3
push
add
insl
data16
gs
add
sbb
jae
into
pop
loope
mov
push
out
scas
scas
iret
movsl
aas
ror
cmpsl
notb
inc
mov
stos
inc
pop
popa
shlb
adc
xchg
lods
jg
sbb
stos
sbb
test
jl
aam
lock
mov
adc
lods
push
mov
xorb
cmp
ret
cmp
push
mov
mov
je
lret
sbb
sub
mov
js
jp
push
or
or
dec
jne
mov
sbb
shrl
aas
movsb
sbb
cmp
test
sbb
sbb
es
xchg
outsb
test
fwait
mov
mov
gs
lcall
mov
jl
lods
lods
stos
add
ret
push
dec
imul
mov
popa
dec
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
into
mov
shlb
stos
mov
arpl
sbb
sti
jle
cmp
sub
pop
dec
int
lock
divb
out
insl
add
cmpl
lahf
frstor
lahf
cmc
lret
push
xchg
rolb
in
jne
mov
pop
sub
push
jo
pop
arpl
ret
push
insl
sub
dec
clc
jle,pn
mov
test
pop
ss
sbb
jg
scas
cs
sarb
jp
mov
sar
lcall
outsl
fstps
int3
push
pop
test
jbe
mov
or
dec
cltd
add
ficomps
insl
push
setle
std
xchg
add
xor
imul
mov
enter
enter
iret
mov
popa
mov
push
sub
xchg
dec
xor
movsl
mov
pop
not
in
das
jg
sbb
rcrl
scas
imul
aam
push
fcmovnbe
pop
dec
fwait
arpl
xor
mov
cwtl
push
fisubs
jle
dec
mov
adc
arpl
dec
sub
adc
scas
mov
or
mov
or
mov
mov
pop
mov
sarb
xchg
sti
sbb
clc
cmpl
mov
mov
daa
sahf
and
stos
pop
push
mov
pop
jmp
outsl
fcmovb
lods
jbe
subb
push
mov
ficoml
sbb
inc
inc
adc
insl
jge
lods
std
popf
add
sarb
mov
and
cmp
xlat
jge
mov
xor
lods
jae
push
dec
dec
or
sub
xchg
mov
xor
mov
mov
mov
cwtl
test
cmp
xchg
add
out
pop
testl
jo
out
mov
mov
sbb
dec
mov
cwtl
adc
mov
mov
xor
or
mov
add
inc
xor
in
jbe
push
popa
popf
mov
mov
fbld
cmp
or
jb
jnp
jae
mov
xor
push
mov
movsb
mov
sub
adc
mov
push
pop
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
jmp
pop
jbe
push
scas
or
aam
stc
jle
cmp
xchg
push
push
cmp
mov
nop
imul
mov
cmpsl
shrl
mov
xlat
testl
out
je
mov
pop
pop
jp
xchg
jo
inc
add
xor
and
and
bound
test
add
in
ficoml
mov
test
and
adc
ss
clc
lds
popf
mov
xorl
xor
sbb
ds
lret
push
jne
out
pop
call
mov
jg
out
or
ds
int3
iret
push
pop
mov
pusha
pop
adc
add
xchg
mov
out
jge
es
xor
push
xlat
jb
in
arpl
into
xor
loop
fdivrs
cmp
push
rclb
ret
icebp
mov
mov
in
std
pop
aam
fsubrs
xchg
in
xchg
push
jge
mov
out
jno
add
mov
cmp
call
push
hlt
dec
adc
mov
cmp
xor
jno
sub
dec
add
adc
push
jno
mov
inc
push
das
add
cmpsl
dec
mov
xacquire
pop
gs
out
mov
inc
add
sahf
dec
jg
out
dec
lret
shlb
mov
add
cmp
add
xor
xchg
inc
mov
sbb
push
jmp
push
dec
inc
lret
pusha
dec
stos
outsb
scas
insl
sbb
fisubs
dec
pop
lahf
sbb
push
les
mov
pop
add
aam
or
dec
out
sbb
scas
jne
cmc
jb
add
lds
or
repnz
add
sub
cmp
jns
add
push
add
sub
and
mov
xor
xor
mov
cld
adc
fsts
in
cs
and
dec
mov
push
test
or
push
xchg
dec
mov
imul
sub
mov
jmp
dec
loop
lds
push
jo
mov
sub
jl
rorl
jle
cmp
fwait
add
mov
ret
scas
shrl
mov
jg
push
gs
or
or
mov
scas
jp
mov
ret
adc
cmpsl
inc
mov
cmp
push
daa
or
or
mov
cmpsl
cmpsb
push
add
cmc
jle
xlat
cwtl
fistl
push
outsl
push
test
xchg
imul
clc
popf
push
roll
scas
into
mov
stos
sub
cmp
inc
inc
lods
mov
cmpsb
xor
jmp
and
push
push
imul
sti
jp
mov
imul
pop
ja
cmp
mov
sub
insb
ja
sbb
jns
mov
cwtl
ficoml
lods
or
in
xor
sub
push
adc
fisttps
xchg
fwait
add
xchg
xchg
mov
mov
pusha
icebp
loop
cmp
fidivs
enter
mov
jo
push
popa
icebp
mov
cmp
xchg
xor
sti
out
icebp
icebp
jp,pn
gs
out
popf
cmp
dec
ljmp
add
mov
mov
testb
and
and
aaa
into
arpl
fs
sub
lock
cmpsb
xorb
addr16
loope
mov
mov
cmpb
and
sahf
xor
cmp
scas
adc
shlb
hlt
aaa
aam
jns
push
ss
xchg
and
pop
aas
cmp
or
push
jmp
push
jp
pop
push
mov
ss
xor
adc
inc
sub
daa
clc
test
shrl
inc
shlb
inc
cmp
push
dec
xchg
pop
jb
pusha
ss
out
xchg
mov
fnstenv
scas
cmp
cmpsb
dec
sbb
hlt
fsubs
sbb
sub
mov
jle
xchg
push
test
es
or
fimull
out
pop
push
adc
and
mov
addr16
pop
shll
jmp
push
aad
add
cmp
mov
mov
push
out
and
jne
repz
testb
cld
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
dec
scas
push
pop
cmc
arpl
pop
clc
push
shll
mov
cmp
xchg
xor
cwtl
add
gs
sub
cmp
loope
xchg
cmp
aad
jp
outsb
shl
sbb
imul
jge
mov
cmp
sbb
mov
out
jp
nop
dec
sbb
lock
pop
xor
shrl
or
subl
cs
shl
jp
in
fwait
popa
inc
test
int3
out
jp
repz
mov
or
inc
fldl
clc
jno
mov
mov
pop
enter
add
dec
mov
jle
popa
icebp
cwtl
push
cld
repnz
insl
pop
adc
xchg
cld
mov
mov
daa
jmp
mov
icebp
stos
push
add
mov
out
outsb
cmp
push
fcmovbe
stos
mov
int3
aam
int3
jp
pop
push
mov
ret
movsl
mov
cmp
mov
pop
jno
cmp
fisttps
mov
mov
mov
mov
nop
push
das
sbb
in
lret
mov
fmulp
stos
les
sub
cmp
cmp
sahf
lcall
cmp
notl
cmp
divl
pop
xor
dec
insb
test
mov
int
jle
ret
dec
incb
and
andl
jb
movsl
sahf
data16
or
cmp
cwtl
lret
push
or
cmpsl
ljmp
mov
push
pop
fnstenv
xchg
ljmp
shr
pop
push
addr16
nop
adc
push
aas
stc
and
xchg
int3
mov
test
adc
roll
aas
xorb
or
insl
into
nopl
cmp
mov
mov
adc
cmp
push
cmpb
jns
stos
mov
mov
sbb
pusha
lcall
and
test
lahf
aad
jno
sub
jnp
mov
xchg
pop
push
or
mov
xor
out
dec
je
lret
pushf
in
push
xor
in
cli
jbe
mov
out
leave
inc
adc
sub
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
adc
cmp
xor
lcall
jl
jle
adc
aad
repnz
lret
sbb
xchg
outsb
sub
stos
aad
push
test
pop
xchg
out
xor
sub
cmp
adc
cld
test
fdivr
jge
sahf
or
pop
sahf
adc
ds
mov
push
rcr
mov
cs
dec
mov
mov
mov
push
inc
cld
enter
idivb
jns
xchg
mov
lock
or
jge
sub
adc
jl
movsb
cmp
sete
push
popa
inc
addl
mov
stos
bound
sbb
loop
or
subps
sbb
and
outsl
and
lret
fimuls
sarb
jb
testb
mov
xlat
mov
test
nop
cltd
xchg
pop
mov
scas
fidivrs
sbb
mov
pop
mov
aad
out
or
ds
jo
pop
int
fidivrl
add
and
sbbb
rolb
mov
arpl
addl
and
repnz
movsb
xchg
repz
adc
or
into
sub
sbb
and
loop
insl
mov
inc
nop
pop
mov
mov
mov
xor
mov
pop
cld
mov
imul
dec
push
leave
xchg
popf
dec
sub
cmpsb
arpl
add
mov
adc
xchg
js
ret
mov
xor
insb
imul
fstpt
jmp
arpl
insl
push
jp
cmp
mov
inc
insl
dec
jbe
lds
jne
mov
hlt
bound
ret
aas
sub
clc
sub
push
mov
int3
mov
push
shrb
and
or
sahf
xchg
mov
jb
in
dec
fs
jg
stos
inc
mov
jle
scas
movsb
stc
out
dec
mov
in
push
push
sbb
inc
cmc
mov
test
inc
inc
xor
mov
xor
jmp
pop
mov
cwtl
mov
mov
cmp
test
add
jl
jle
jg
inc
sub
pushf
hlt
push
pop
clc
mov
in
adc
xchg
pop
test
xor
pop
jnp
fwait
and
xchg
mov
test
cmc
mov
pop
fcoms
and
dec
scas
xchg
scas
and
xchg
adc
icebp
xor
mov
sub
sub
xchg
call
add
jae
xor
sub
lods
inc
jmp
mov
add
cmc
mov
les
pop
dec
mov
mov
xchg
out
or
test
push
or
or
xchg
sbb
sarb
imul
jno
mov
jo
int3
and
lods
jno
mov
and
xchg
fstpl
or
pop
or
iret
les
in
ljmp
push
loope
xchg
dec
inc
mov
and
or
arpl
in
lahf
leave
je
dec
clc
sbb
stos
aas
jmp
mov
push
adc
xchg
imul
add
addr16
pushf
aad
adc
cmpb
pop
dec
mov
je
test
fisttpll
xchg
clc
jmp
push
movsb
sbbb
fsubrs
cwtl
xchg
ror
int
ds
insw
xchg
mov
jnp
adc
shrb
push
iret
jecxz
xchg
inc
adc
popf
cli
cs
mov
ljmp
cltd
jno
inc
adc
test
call
insl
hlt
fwait
test
jecxz
jno
mov
bound
adc
inc
les
push
pop
repnz
mov
mov
lock
or
ljmp
push
inc
arpl
add
shlb
pop
jle
jnp
adc
xor
push
add
mov
sbb
insb
jle
scas
xchg
ficoms
dec
shlb
add
jns
loopne
insl
decb
xor
lret
sbb
aad
addr16
dec
ss
xchg
jmp
sti
push
inc
ret
imul
sub
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int3
xor
fs
jle
cmp
jno
imulb
mov
insl
jg
sbb
sbb
xor
jg
dec
dec
adc
sub
mov
cli
or
or
das
push
hlt
mov
and
mov
push
enter
shl
bt
xchg
aam
xchg
cwtl
and
mov
xor
aad
test
cwtl
int3
leave
std
data16
xchg
xlat
dec
cmp
lcall
or
mov
aaa
aam
sub
pop
xchg
lcall
ljmp
inc
add
loop
or
insl
movsb
sbb
xchg
aas
popa
adc
pop
in
pop
lods
and
jno
adc
xchg
xor
aaa
lret
mov
pop
push
les
loop
pop
pop
lock
pop
dec
fadds
jl
jns
inc
xor
repz
es
imul
mov
int3
lret
or
loopne
movsl
cmp
pop
imulb
mov
mov
adc
mov
test
jge
push
push
dec
lds
cltd
xor
xor
or
add
and
aad
dec
jmp
add
scas
cmp
xor
filds
lods
add
jne
xchg
mov
ss
jns
loop
jne
jle
xor
outsl
daa
lret
mov
and
mov
push
jmp
daa
cltd
pushaw
pop
std
cmp
mov
jno
iret
cs
mov
int
jmp
outsl
mov
mov
ficompl
mov
js
pop
rorb
push
fnstenv
dec
cmp
mov
popf
jns
pop
push
mov
mov
jl
adc
xor
out
fmuls
and
movsb
es
sarl
arpl
push
mov
push
subl
dec
inc
mov
pop
stos
enter
bound
es
out
call
inc
dec
push
sbb
or
or
rolb
cs
dec
and
test
std
rcrb
xchg
iret
inc
into
push
stos
fsub
in
mov
xor
int
iret
jl
inc
mov
inc
inc
jl
sbb
xor
cmc
lcall
add
add
dec
sahf
push
push
add
into
shll
jle
jl
jle
std
shl
xchg
jp
push
in
or
loop
int3
mov
inc
jo
test
gs
insl
dec
ss
fnsave
lods
and
outsl
pop
shlb
mov
stos
aas
inc
dec
cmp
outsb
dec
jmp
jle
pop
mov
sbb
ljmp
clc
iret
push
repz
or
sub
popa
dec
pop
stos
xchg
loopne,pn
or
add
repnz
and
dec
cmp
pop
hlt
lea
je
fsubrs
insl
pop
and
mov
pop
enter
lds
mov
sbbb
lcall
imul
ss
ss
cmpsb
and
mov
js
insl
pop
xor
cmp
cli
out
arpl
out
dec
xchg
xchg
mov
int
inc
or
loop
adc
jmp
in
cmc
shlb
jle
pop
mov
push
jns
xor
rolb
pop
jo
ja
daa
mov
dec
ljmp
fidivrl
inc
call
sub
push
or
or
mov
daa
into
adc
pop
fildll
xchg
cmp
push
jns
push
and
pop
iret
movsb
and
imul
in
dec
and
or
xor
je
xor
out
divb
mov
jg
pop
std
dec
adc
cmp
cmp
fs
std
cwtl
xchg
or
xor
cli
xlat
jno
mov
lds
push
adcb
ljmp
cmp
pop
fs
loop
xchg
add
mov
movsb
nop
cmp
mov
es
push
and
fmul
add
sbb
es
push
adc
sbb
mov
jle
lret
jo
fadd
mov
jns
imull
enter
xor
das
cmp
scas
frstor
jb
add
inc
scas
arpl
sbb
enter
js
or
jb
lret
ret
xor
mov
xchg
xchg
lds
inc
in
scas
roll
xchg
jmp
sahf
testb
push
repz
jae
ficoms
mov
mov
cmp
push
rcll
into
imul
enter
out
lods
lahf
and
aam
inc
ret
or
js
add
mov
mov
jle
movsb
cmc
mov
jl
test
call
test
push
cs
insl
into
out
aam
fucomi
push
pusha
cwtl
scas
or
jle
int
dec
or
lcall
orb
or
xlat
or
rcrl
sub
lock
mov
push
sbb
push
xor
push
cld
cli
bound
sbb
arpl
ljmp
xor
leave
fiadds
sbb
xor
int
inc
mov
push
fdivr
dec
inc
mull
cltd
pusha
dec
push
fwait
iret
mov
adc
pusha
repz
xor
loopne
push
xor
andb
xor
rcr
push
pop
leave
cld
add
stos
push
cmp
adc
lret
stc
fwait
insl
imul
stos
mov
or
inc
aad
mov
and
xchg
sub
and
push
in
xchg
into
add
aaa
cltd
sbb
push
push
add
lock
mov
shl
cmc
mov
lahf
jno
divb
adcb
ds
fisubrl
xchg
leave
cmpsb
push
jle
pop
icebp
push
imul
xlat
loopne
imul
pop
adc
inc
mov
mov
fldcw
mov
testb
dec
sub
fsubrs
aam
cwtl
stc
fstpl
pusha
std
faddl
cmp
mov
push
jg
int
lcall
xchg
fiadds
pop
negw
out
cmc
jmp
and
sbb
adc
fdivrs
push
mov
stos
inc
add
insl
xor
andl
fisubrs
out
outsl
cwtl
out
sub
dec
pushf
mov
dec
out
push
push
cmp
sahf
xorb
xchg
in
sub
cwtl
push
mov
stc
mov
sbb
jbe
clc
inc
xor
pop
adc
sbb
call
test
imul
stos
xchg
jno
int
jg
mov
ret
incl
popf
aad
sbb
incb
dec
sarb
push
xor
mov
dec
jmp
fwait
push
mov
mov
mov
pop
or
sub
mov
jle
cmp
fadd
jp
mov
mov
push
xchg
sub
neg
in
aas
sbb
aaa
xor
jl
mov
pop
icebp
cmp
push
xchg
lods
bound
lock
add
push
test
std
push
imul
add
xchg
ret
hlt
add
fsubrs
out
data16
les
xchg
mov
xor
push
mov
test
lock
jo
cs
subb
jne
push
jne
inc
mov
call
lcall
xchg
ret
mov
mov
leave
or
iret
ret
xchg
sti
lret
mov
or
es
pop
ficompl
dec
ljmp
push
std
push
push
and
sbb
lahf
divl
sbb
enter
dec
hlt
lds
cld
push
mov
jge
das
cmp
push
pop
test
mov
andl
sahf
int3
mov
shl
imul
xchg
mov
inc
xor
scas
pop
test
jno
mov
cmp
adc
in
mov
stos
aas
insl
outsb
mov
push
mov
sbb
jl
or
flds
xchg
sub
cmp
rorl
fistpll
sub
arpl
rorl
pop
push
cmp
mov
jp
cmc
rolb
cmp
and
pushf
or
adc
xor
insl
int
mov
mov
xchg
mov
out
popf
jecxz
sbb
jae
mov
cs
push
mov
dec
fistl
int
xchg
mov
gs
je
add
adc
out
dec
aaa
push
scas
pop
aas
fbstp
sub
adc
xlat
and
ljmp
sbb
addb
cld
out
jle
lret
lds
cmp
mov
sbb
add
mov
mov
cmp
xor
and
into
push
addr16
xchg
popa
sbb
jp
sti
shl
and
mov
pop
scas
addb
cmp
test
sbb
rolb
pop
hlt
pop
mov
pop
pop
pop
leave
ret
push
mov
push
not
push
mov
mov
movl
mov
push
movl
mov
movl
mov
push
not
mov
notl
mov
movl
cmp
movl
je
mov
mov
subl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
add
mov
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
mov
jo
adc
in
adc
jl,pt
jle
aaa
ds
rorl
push
mov
sbb
ret
cmp
sti
sbb
push
ljmp
clc
push
popa
cmpsl
jecxz
sub
fcoms
inc
and
inc
push
jecxz
dec
rol
push
inc
xorl
sub
movsl
sbb
movsb
mov
fistpl
push
leave
jb
int
xchg
and
mov
out
ds
out
movsb
aaa
push
rcrb
cmc
lret
or
stos
test
push
mov
sbb
xchg
rcrb
adc
pop
dec
inc
xchg
push
shll
push
xchg
mov
cmp
mov
sub
je
mov
shlb
add
popa
add
icebp
dec
mov
xor
es
add
dec
lods
fsub
test
mul
cmp
push
pop
outsb
out
xor
stos
jb
mov
aaa
lret
ret
lret
ret
enter
jb
xor
mov
cmp
es
cmp
outsl
loope
xor
mov
arpl
enter
sub
and
ss
sar
mov
jns
in
dec
or
push
pop
sbb
xchg
dec
or
scas
jl
nop
add
xor
adc
cmp
ja
loop
cmpsb
push
clc
cld
js
loop
sahf
jno
mov
nop
pop
mov
jmp
rcr
enter
jae
loopne
adc
dec
mov
ret
mov
gs
inc
in
mov
in
and
push
icebp
add
orl
je
repz
call
dec
insb
cmp
out
adc
ret
stos
shll
je
adcb
sahf
lods
outsl
xor
lahf
pusha
push
notl
repz
ret
xor
sbb
and
rclb
iret
out
fnsave
pop
xor
and
push
iret
outsb
xchg
mov
shrb
sti
and
imul
movsb
xor
leave
sbbl
mov
orb
cltd
mov
ficompl
fsubl
int3
mov
lods
or
aas
adc
cmp
xor
cli
mov
add
add
add
adc
movl
add
orl
imul
pop
xlat
mov
nop
jle
jl,pt
jle
pop
jnp
loop
or
fimuls
jecxz
lahf
jl
leave
popf
adc
je
fsubrs
jecxz
in
pop
das
push
loop
fmul
mov
mov
mov
js
push
int3
add
call
xor
push
push
sub
mov
shlb
xchg
and
or
push
ficoms
cli
or
sub
push
adc
aam
add
xor
leave
pop
xor
sub
mov
sbb
loope
test
call
add
inc
in
cmp
js
std
std
loope
mov
mov
pop
add
sahf
add
pop
fdivs
pop
pop
pusha
in
add
xchg
je
mov
cli
enter
and
xor
lods
cmp
ret
insl
movsl
mov
scas
cmc
inc
mov
fcmovb
aad
or
shr
dec
ret
aad
int3
lcall
movsl
and
movsb
cmpsw
ret
mov
std
and
cmpsl
mov
arpl
jecxz
jmp
cmp
imul
leave
jle
jmp
mull
xor
out
mov
in
insb
and
sbb
pushf
addb
fwait
pop
pop
test
or
es
xor
mov
sbb
and
ret
and
push
and
sub
pop
popa
xchg
aad
mov
call
in
push
lds
in
dec
call
outsl
xor
popf
or
sahf
push
sarl
sbb
sub
mov
fcomps
inc
dec
and
or
loop
int3
fidivrs
jo
mov
call
into
pop
xor
lods
mov
pop
sub
pop
pop
xor
xchg
sub
xchg
aaa
add
lds
mov
mov
add
loop
rolb
adc
notb
enter
xchg
adc
sbb
and
ljmp
sarb
jae
popa
mov
addb
add
jmp
mov
loopne
adcl
sahf
jle
jl,pt
jle
cltd
cmp
icebp
mov
stc
pop
mov
jns
sbb
cli
stos
lods
insl
dec
mov
push
cmp
mov
jg
adc
pop
fxam
xor
cli
popa
xchg
outsb
js
sbb
lahf
or
pop
jle
test
pop
fdiv
xchg
ds
not
push
in
adc
adc
xchg
adc
dec
pop
sbb
or
outsl
push
xor
mov
or
push
sti
insl
in
lds
ljmp
and
xlat
add
mov
or
xor
add
mov
outsl
sub
dec
mov
out
cld
and
xor
adc
xlat
std
mov
addr16
lea
dec
mov
out
push
jnp
push
sbb
rcrl
jge
push
push
movsb
popf
mov
insb
add
ljmp
add
adc
xchg
je
jae
push
scas
jg
sub
dec
xchg
xor
rep
das
push
cmpb
xlat
push
pop
pop
jnp
mov
mov
mov
popf
in
xlat
cmp
jge
jae
pop
sti
std
xchg
push
aam
push
clc
cmpl
cltd
test
xchg
pop
mov
nop
or
dec
add
dec
ss
rcll
xor
lock
jne
pop
pop
mov
sub
mov
push
lods
sbb
adc
or
cli
mov
push
stc
clc
mov
mov
fsubrl
ror
fwait
xchg
sti
and
fistpl
or
jo
pop
iret
xor
out
scas
test
jg
add
mov
inc
push
and
repnz
dec
cmp
pop
push
dec
in
sbb
ss
aaa
sub
xchg
push
mov
sbb
cwtl
shlb
call
outsl
pop
inc
push
pop
inc
test
jns
xchg
xchg
je
xchg
imul
mov
xor
mov
push
mov
inc
cmpsl
inc
dec
shl
shrb
std
cmp
and
div
add
scas
es
in
or
jmp
rcll
or
out
xor
inc
popa
push
push
mov
int3
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xorl
jmp
push
inc
jb
jb
icebp
fisubrs
into
testl
jg
jle
cmp
fstl
jmp
or
add
ds
and
or
jg
imull
jmp
rolb
jne
enter
in
cmp
int3
add
outsb
jge
and
sub
cmp
or
fs
xchg
fsubrp
push
shll
push
mov
scas
iret
inc
and
dec
adc
negl
int3
push
mov
mov
mov
test
or
sti
jge
pop
andb
subl
loope
cmpb
mov
test
adc
pushf
repnz
and
and
sub
cmc
fidivl
imul
mov
aas
test
and
pop
pop
xchg
jecxz
push
fstpt
orb
cli
mov
notb
push
sbb
xchg
scas
js
filds
inc
cmp
push
out
out
push
nop
ds
cld
arpl
in
in
in
aaa
xchg
enter
repz
pop
xor
enter
xchg
add
test
mov
sbb
loope
cli
mov
inc
or
add
subl
push
or
mov
jmp
cmp
shll
xor
stos
mov
popf
jle
adc
jle
xchg
imul
and
test
aas
jae
insb
call
sbb
stos
popf
sub
fwait
adc
and
inc
xchg
push
loop
inc
sub
jl
push
js
jge
sub
enter
mov
loopne
int
test
cli
sub
sbb
push
aas
push
aam
jmp
fcmovnbe
sti
mov
loope
aas
outsb
sub
outsb
addr16
push
ffreep
loope
addr16
xlat
xchg
stos
ret
idivl
sbb
sbb
adc
sbb
adc
jmp
add
out
xchg
outsb
xor
mov
mov
arpl
inc
cmp
ljmp
sub
mov
inc
xor
mov
and
outsl
sahf
xchg
mov
cmc
iret
aam
pop
and
arpl
or
int
sbb
nop
mov
xor
pusha
jl
jg
ret
sbb
sub
inc
cmp
aaa
push
cli
xor
adcl
mov
xorl
add
push
jmp
pop
jecxz
call
and
out
sbb
xchg
jb
jle
adc
jle
dec
clc
xchg
xchg
lea
ljmp
out
dec
pop
repz
cmp
jmp
pop
lock
mov
xchg
hlt
fldt
and
jne
xchg
mov
insl
mov
cmp
orl
mov
pop
inc
xchg
mov
or
push
lds
inc
dec
gs
sub
adc
push
into
sti
sbb
mov
dec
xor
sub
repz
stos
fldt
in
call
shlb
gs
icebp
xchg
repz
mov
ljmp
mov
arpl
mov
mov
sub
pop
fwait
out
push
xor
aad
mov
mov
push
pop
std
hlt
xorb
popa
mov
adc
loope
insb
and
lods
addr16
mov
movsl
push
and
ljmp
popf
mov
jp
outsb
es
in
or
cmp
lock
push
xchg
push
jns
lods
or
sbb
imul
or
jnp
mov
push
push
loope
icebp
mov
mov
incl
xor
addl
movl
movl
decl
add
movl
jmp
cmp
jne
movzbl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
xorl
andl
mov
addl
sub
xorl
push
sbbl
mov
movl
add
push
call
movl
incl
cmpl
movl
jb
movl
jmp
movl
cmp
movl
jne
movzbl
and
movl
addl
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
ret
push
mov
jle
jg
jle
mov
xchg
sbb
cmc
dec
aas
push
sbb
inc
pop
jge
pop
sub
mov
pop
cmp
jb
xchg
fsubrl
fidivrs
adc
pusha
out
dec
mov
pop
xor
push
in
insl
dec
dec
lret
xor
push
int
mov
popf
and
and
jns
nop
call
xchg
test
inc
mov
adc
push
pop
push
xchg
xorb
cld
xchg
rol
ret
add
add
std
daa
int3
nop
cmp
mov
push
push
lret
or
pop
lea
add
cmp
sub
jmp
ljmp
pop
pop
push
push
lock
mov
leave
cmp
scas
bound
les
jg
pop
fldz
iret
mov
lret
mov
pop
sbb
scas
insl
imul
dec
sub
lahf
inc
loope
iret
adcb
jbe
les
nop
insl
call
inc
hlt
orl
xor
add
sbbl
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
jmp
shlb
sub
adc
sub
jle
mov
dec
dec
dec
lcall
pop
cs
insl
jbe
cmpsb
adc
inc
ds
mov
xchg
push
lods
jnp
cmp
dec
outsl
mov
jp
int
addr16
repz
pusha
mov
aam
mov
stos
inc
xchg
or
out
loope
sbb
and
aaa
xor
sub
pop
inc
lret
push
and
flds
mov
ljmp
popl
sbb
popf
imul
js
xor
pop
ljmp
lea
mov
pop
icebp
adc
push
push
inc
stc
into
icebp
lret
pop
mov
xchg
call
cmc
sbb
in
add
pop
outsb
cmp
ss
xor
inc
into
fbld
bound
jmp
pop
mov
bnd
sbb
ds
cmp
pop
xor
sub
cltd
aaa
and
popa
movsl
cltd
jno
pop
jle
jp
pop
or
and
outsl
scas
inc
mov
pop
xor
testl
xor
inc
add
in
jmp
jb
lods
ljmp
mov
into
cmpsb
jle
adc
jle
cmc
jp
mov
in
fidivrl
cwtl
cmpsb
dec
pop
push
cli
and
cmp
jecxz
cmpsl
in
int
jp
jl
ficoms
into
inc
out
ficoml
and
sbb
and
das
fisttps
sub
sbb
in
shrl
insl
pop
jp
xchg
pop
xor
dec
pop
mov
jle
iret
and
sub
xchg
pushf
imulb
pop
negl
loope
or
dec
lea
pop
fucomp
inc
mov
sub
dec
jnp
icebp
adc
les
mov
out
adcl
jno
jns
mov
sbb
daa
dec
cmpsb
xchg
push
lods
arpl
in
push
daa
pop
daa
into
push
push
pop
and
and
lahf
ljmp
mov
xor
sub
insb
ljmp
lods
out
lea
inc
dec
push
ja
cmp
mov
lock
add
into
dec
inc
sbb
sbb
push
bound
imul
inc
iret
cli
ret
in
loopne
mov
sbb
inc
xor
lock
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
xor
xchg
das
push
jne
loope
jecxz
loope
popa
mov
loop
jle
adc
jle
fwait
cmpl
pop
js
roll
cld
mov
test
fsubr
enter
xor
add
mov
dec
movsb
adc
mov
or
cmpsb
mov
adc
pop
enter
push
lcall
popf
cmpsb
adc
or
adc
in
and
and
adc
inc
lods
hlt
imull
push
pop
aad
adc
mov
stc
add
test
or
jne
sbb
mov
int
pop
mov
or
pop
fstl
and
push
les
adc
xchg
adc
imul
mov
jb
xchg
repz
out
cmp
push
fiaddl
lock
fstps
jb
sub
or
push
lcall
and
jmp
test
inc
cmp
xchg
xlat
dec
adc
add
scas
sub
sub
push
cltd
cmpsl
mov
mov
jae
push
adc
loope
jne
mov
pop
xor
pop
jmp
movsl
sbb
loope
icebp
mov
jns
add
pop
xchg
jle
jns
je
add
cltd
js
cs
xor
decl
dec
inc
test
scas
dec
mov
inc
sbb
lea
mov
xor
push
arpl
es
mov
or
bound
inc
xchg
pop
and
xlat
data16
ss
aas
ljmp
out
mov
cmp
lea
dec
jle
shll
and
pop
stos
insb
je
jp
ficoms
bound
cmpsl
lret
dec
test
outsl
mov
pop
clc
shlb
push
jnp
inc
aaa
push
jge
ss
inc
lods
push
mov
or
repnz
cmpsl
jae
cmp
cld
push
and
jmp
adc
xchg
les
sarb
inc
ror
sbb
mov
mov
mov
and
test
scas
pushf
nop
add
out
or
mov
push
dec
cmp
push
xchg
ret
adc
jecxz
into
call
inc
sbb
or
xchg
icebp
das
add
in
and
sbb
fimull
out
fstpl
or
push
hlt
pop
pop
cmp
add
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
push
movl
sbb
movl
mov
push
add
mov
adc
mov
jmp
imul
mov
jecxz
sbb
sbb
jle
jg
jle
mov
repnz
out
ud1
mov
test
ffree
subl
cmpsb
or
jno
dec
push
jae
gs
push
sahf
jmp
inc
repz
mov
xor
out
push
and
sub
pop
leave
icebp
inc
loop
leave
sbb
lret
out
test
std
dec
push
fstps
adc
jnp
and
cld
pop
insl
lods
lods
mov
push
aas
xchg
add
mov
movsl
pop
mov
fisubrs
and
cmp
outsb
jp
jne
sti
lret
add
pop
mov
jmp
out
popf
and
dec
fistl
jns
and
mov
jl
xor
add
nop
stos
shlb
xchg
popa
movsb
cli
sub
aam
aaa
mov
mov
cmp
and
sar
sbb
and
mull
jne
sub
mov
jbe
rolb
fistpl
mov
test
push
inc
insb
out
fwait
push
mov
out
inc
jb
xor
jge
sahf
outsb
pop
mov
mov
push
hlt
jo
popf
add
dec
daa
adc
frstor
pop
mov
fsubs
adc
push
adc
stc
lcall
gs
jge
aaa
arpl
mov
imul
lods
cmpsb
insb
push
ret
repnz
movsb
sub
pop
nop
inc
sbb
and
fdivs
sub
aas
and
cmc
icebp
or
inc
cmc
and
fsubs
xchg
pop
cltd
jns
and
sub
mov
lods
sti
jo
call
dec
xchg
cli
js
push
js
mov
or
mov
data16
incb
or
fsub
xchg
or
bswap
adcb
rolb
xchg
mov
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
jmp
mov
push
jno
mov
ja
sbb
lock
jle
cmc
cwtl
sub
push
cld
push
loope
jns
lds
jmp
outsl
pop
xchg
xchg
subb
bound
mov
insl
lds
bound
lods
lods
in
cli
and
lret
sbb
in
xor
test
pop
insb
mov
movsb
mov
movb
adc
lret
cltd
push
inc
sub
pop
inc
cmp
mov
addr16
ljmp
xlat
xchg
loopne
popa
stc
mov
pusha
or
dec
dec
aas
push
in
aaa
fdivrl
stos
pop
lds
or
push
add
dec
and
jns
add
repnz
imul
enter
push
push
xchg
mov
dec
test
mov
adc
sahf
mulb
cmc
xchg
and
and
mov
in
push
sbb
setne
xchg
loop
xchg
xor
lods
mov
hlt
aas
ss
mov
sub
push
and
enter
jo
sbb
or
mov
push
shrl
mov
movsl
xchg
jg
das
pusha
mov
pusha
je
aaa
push
arpl
lods
fldenv
dec
int
adc
daa
xchg
mov
andb
cli
and
stos
mov
xor
cmp
jecxz
sahf
xor
pushf
xchg
jecxz
ror
inc
xor
or
lret
rcll
pop
pop
dec
push
rorl
mov
daa
and
mov
lahf
outsl
xlat
add
cwtl
pop
cmp
popf
jge
dec
fwait
mov
lods
leave
insl
or
dec
cltd
pop
mov
test
fucom
dec
in
xor
and
ret
jg
inc
or
leave
ret
push
mov
push
push
incl
jmp
inc
iret
scas
mov
jno
sub
jbe
mov
jle
loop
inc
into
or
rcl
mov
sarb
jbe
xlat
xchg
loope
xlat
sub
negl
lods
xchg
movsb
mov
addr16
mov
dec
push
pusha
enter
mov
jno
dec
addr16
push
dec
adc
int
cmc
cmp
lret
jle
and
sbb
or
push
dec
push
mov
lret
in
mov
jno
scas
cmp
mov
and
ds
or
xchg
lahf
jae
pop
ror
cmp
das
decb
xchg
push
sub
call
jne
mov
imul
and
jo
insl
pop
jmp
and
ljmp
jl
scas
and
jno
push
xchg
test
pushf
imulb
outsb
mov
xor
push
lahf
adc
push
fsts
pop
adc
and
nop
push
xchg
cmpsb
fistpl
call
add
and
mov
pushf
js
add
push
cltd
rolb
cmp
orb
mov
inc
clc
sti
test
xchg
das
sub
mov
dec
xchg
aad
inc
sahf
out
daa
mov
pop
cld
mov
in
ljmp
and
int
mov
add
inc
and
dec
push
daa
outsb
in
loopne
movsl
hlt
adc
lock
mov
mov
push
pop
addl
mov
in
popf
std
xor
and
push
xchg
pop
xor
pop
push
mov
scas
add
adc
lcall
push
adc
fcoms
sub
lahf
add
inc
cltd
sahf
mov
daa
pop
out
es
mov
mov
inc
or
pop
dec
jge
into
mov
int3
jecxz
xor
sbb
stos
pop
faddl
into
cmp
mov
and
cmp
mov
pusha
push
mov
inc
test
jle
push
aad
int3
adcb
fcomi
pop
scas
jns
sub
pop
adc
aas
xchg
ss
ret
xor
mov
aaa
dec
push
mov
sbb
or
dec
xchg
fs
ds
dec
dec
cmc
test
inc
mov
mov
add
sbb
mov
dec
loop
or
sbb
sbbl
sub
test
xlat
mov
mov
hlt
sub
jmp
ss
enter
cmp
call
mov
jnp
xchg
adc
test
in
xchg
xor
ret
mov
sub
sbb
and
or
push
adc
aam
ret
push
push
xorb
cltd
pop
pop
shlb
and
mov
div
popa
shll
shrb
clc
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
adc
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
and
sbb
push
jo
dec
add
lods
jle
jl
jle
sarb
into
in
inc
push
js
push
insb
jecxz
xchg
movups
negl
dec
xor
mov
mov
pop
fisubs
and
xorl
icebp
inc
cs
mov
xor
cmpsl
add
or
jo
pop
loopne
popa
out
das
gs
push
adc
jne
shlb
push
cmp
push
inc
lods
inc
out
or
jle
or
sub
repnz
sub
inc
lods
and
xor
mov
clc
lahf
repz
mov
sub
lock
mov
push
ljmp
movsb
pop
out
and
push
xchg
loop
sub
adc
cmpsb
popf
and
cltd
rol
stc
jecxz
inc
fistps
mov
push
es
movsb
inc
lock
test
pop
pop
dec
mov
xchg
gs
orl
lret
jmp
mov
sbb
jl
dec
mov
ficoms
inc
cltd
push
pushf
loop
iret
scas
and
iret
adc
push
xchg
dec
je
ret
mov
aam
jecxz
mov
inc
or
insb
call
in
hlt
adc
lods
into
clc
testl
mov
pop
stc
cmp
call
imul
iret
xchg
cwtl
stos
aad
push
add
inc
push
pop
dec
mov
sub
push
test
pop
pop
sbbl
jl
dec
cmc
add
es
push
shll
ljmp
xor
jp
mov
xchg
dec
add
mov
gs
fwait
xlat
dec
or
mov
jmp
sub
imul
sbb
cmpsb
in
mov
mov
add
jo
push
leave
leave
adc
hlt
data16
movsb
jb
sub
cmp
inc
cmp
xchg
xchg
loope
push
pop
scas
ret
jecxz
imul
jo
add
in
pusha
push
ret
ficompl
insl
mov
cld
pop
jge
jo
jo
arpl
add
sub
add
sbb
or
dec
je
push
into
lods
sbb
inc
push
cmp
pop
out
in
xchg
push
int3
adc
pushf
sbb
xchg
mov
cli
mov
dec
jbe
sbb
popa
jae
bound
xor
dec
inc
add
push
inc
shll
movsl
mov
xor
mov
mov
lret
pop
xor
mov
ds
nop
jb
jns
stos
inc
sub
cmp
and
cmp
cmp
aaa
adc
imul
cmc
fistpl
or
sub
mov
jecxz
sbb
fisubrs
pop
dec
lret
dec
sub
push
ds
mov
shll
in
pop
gs
arpl
stc
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
andb
in
loope
arpl
adc
dec
shrb
jle
outsb
xlat
lock
push
push
or
ds
pushf
fisubrs
sbb
out
out
adc
jnp
push
cmpsl
cmp
push
std
pand
daa
sub
jp
jne
push
stos
push
mov
mov
push
cmp
xchg
push
into
mov
stc
ja
xchg
add
arpl
push
fcmovnbe
aaa
or
clc
mov
mov
jl
popf
lahf
fstps
xchg
inc
js
ret
and
into
ds
pop
sub
cmpsl
jb
fs
scas
leave
mov
lcall
jge
je
js
add
icebp
je
or
movsl
mov
jecxz
xchg
pusha
dec
xchg
adc
sti
xchg
jno
mov
xchg
in
pop
idiv
fcoml
xchg
mov
mov
mov
cmp
mov
add
subb
imul
adc
shll
popl
add
pop
or
dec
sbb
popa
inc
fdiv
inc
popf
xchg
xchg
pop
mov
js
adc
lock
adc
in
push
clc
jbe
cmpsl
inc
sbb
aad
mov
pop
mull
lret
ss
mov
loopne
push
out
mov
inc
pop
mov
push
jecxz
mov
jecxz
idivb
out
sub
int
and
loope
sahf
xorl
adc
mov
cmc
lret
testl
mov
sbb
sarl
call
dec
pop
mov
pop
sub
fbstp
je
push
test
cmp
sbb
or
loop
sbb
lahf
mov
sbbb
ffreep
cld
sti
testl
imul
or
shl
mov
push
add
ss
mov
fildl
and
add
nop
xchg
and
push
outsb
call
iret
loopne
xor
sbb
and
pushf
in
iret
jo
and
mov
push
int3
cmpsl
push
push
lcall
push
jmp
jge
xchg
jns
mulb
sbb
xor
cmc
sbb
cmp
imul
movsl
mov
mov
cmpsl
mov
stos
lock
xchg
fiaddl
jae
xor
repnz
xchg
imul
fisttpl
std
push
cmp
in
fdivrs
pusha
insb
add
mov
scas
mov
aas
gs
int3
mov
test
fcoml
jp
adcl
mov
pop
inc
and
cld
popa
sub
scas
cmp
or
out
fidivrl
ja
adc
jno
and
aam
lods
sti
movsl
cmp
movsl
pop
outsl
cmpl
rcrb
inc
xchg
nop
popf
jae
test
mov
push
insl
aas
jnp
inc
jbe
pop
mov
pop
pop
leave
ret
push
mov
jmp
shll
jno
aad
xor
movsb
xor
mov
jle
jge
jle
mov
pop
push
lahf
lods
sub
jno
cli
leave
mov
xor
arpl
stc
or
ror
movsb
cltd
mov
das
pusha
add
data16
push
mov
nopl
cmp
inc
mov
mov
icebp
ds
sub
add
rcrl
mov
inc
push
int3
dec
mov
and
push
mov
push
sub
push
rorb
lret
jae
sbb
lret
inc
add
inc
imul
jle
mov
mov
jg
insb
inc
jbe
pusha
aad
in
movsb
jmp
je
fidivs
inc
cmp
mov
fs
outsl
mov
mov
pop
jle
cmpsb
push
out
insb
push
inc
jl
movsl
scas
jle
cld
shlb
push
test
push
xchg
add
inc
sub
popa
jb
adc
cmp
fcmove
mov
xchg
ja
push
dec
out
stos
jns
and
test
xchg
lods
fs
jns
jp
sub
cmp
es
notl
insb
pop
jl
xchg
mov
add
loopne
cs
in
testb
pop
push
stos
aam
mov
adc
cwtl
js
xor
cmc
popa
sub
into
aam
cvtps2pd
stos
mov
xchg
xchg
jmp
add
jbe
addr16
jge
aaa
adc
fisubrs
pushf
dec
subb
ja
ljmp
outsl
pop
mov
cld
jne
push
mov
cmp
pushf
sub
lock
addr16
xor
icebp
aam
mov
in
test
testl
inc
sbb
cmp
dec
jl
xchg
ret
ror
sets
jne
jnp
push
mov
mov
mov
fst
jmp
out
popf
sti
xchg
imul
cmp
outsb
cmp
fidivrl
sbb
test
cltd
mov
mov
mov
push
pop
sbb
xor
inc
movb
shrl
mov
inc
imul
outsb
cmp
push
aas
push
cltd
xor
sti
js
cmp
cld
movsb
andb
inc
and
jmp
xlat
adc
sub
aam
pop
xor
or
faddl
push
sub
add
ljmp
mull
adc
cmp
repnz
and
add
inc
cmpsl
mov
jnp
mov
out
add
push
push
sbb
outsl
dec
pop
out
jb
aam
xchg
int3
scas
and
inc
mov
cmp
aam
jb
xchg
pop
cmp
mov
mov
bound
pushf
add
mov
xchg
je
add
jg
dec
push
cmpsb
fbld
push
pop
rol
loope
neg
mov
jns
out
or
and
inc
lock
das
daa
lock
scas
xor
hlt
adc
xchg
sub
fldl
xor
mov
jmp
or
pop
jno
xchg
add
push
pop
fidivs
jle
fabs
cmpb
lds
xor
sub
lea
cwtl
aad
outsb
xchg
push
mov
in
rorb
dec
int
sbb
fnsave
inc
jne
decb
xchg
inc
jl
hlt
mov
sbb
aaa
push
scas
fs
add
mov
jle
sbb
addr16
push
dec
add
mov
xor
lock
aam
out
orb
es
inc
dec
mov
addr16
inc
mov
mov
pusha
lods
xchg
jns
adc
inc
scas
jb
jnp
inc
es
stos
dec
xrelease
or
xchg
xlat
clc
test
and
shrb
mov
jp
cs
jmp
pop
lret
rcrb
mov
in
inc
jle
xchg
scas
in
xchg
sbb
test
lods
xchg
mov
stos
dec
push
das
sahf
lock
call
pop
inc
mov
mov
and
cmpsb
int3
sbb
dec
push
xor
lcall
inc
into
mov
jmp
or
jg
divl
cmc
push
shl
ret
mov
inc
leave
lea
divl
mov
adc
jl
xorb
neg
xor
mov
outsb
ret
ljmp
mov
insl
out
call
je
cmp
xchg
pop
stc
xchg
dec
out
add
mov
inc
psubw
mov
cmp
adc
jae
dec
jns
pop
add
ss
jp
fldt
fwait
leave
frstor
das
sub
sub
js
add
out
xorl
xor
xor
jl
sbb
ja
pop
jns,pn
or
in
or
aaa
inc
nop
je
cmp
fwait
jg
jo
sub
pop
je
adc
mov
rorl
fsubl
add
mov
fs
jne
dec
nop
jge
divb
push
fildl
daa
mov
imul
adcb
push
fstpt
out
sbb
mov
popa
faddl
inc
cmp
test
rcrb
xchg
adc
fdivrs
orl
gs
mov
add
xor
pop
sbb
addr16
es
and
pop
fisubrl
jb
mov
das
repnz
xchg
out
jl
enter
push
pop
shr
fmulp
dec
iret
mov
fs
mov
jo
ljmp
mov
push
out
jbe
cmp
jns
int3
adc
or
ja
inc
xor
clc
ljmp
and
mov
div
call
pop
xor
fcmovne
inc
push
div
mov
and
or
mov
pop
ret
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
orl
add
xorl
movzwl
and
mov
xor
xor
or
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
subl
xor
xorl
sub
mov
movzwl
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
sub
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
jmp
cltd
outsb
mov
outsl
or
push
out
movsb
cltd
movsl
fdivl
jle
test
mov
fidivl
jns
shll
mov
test
cmpsl
leave
xchg
add
inc
add
cmp
cmp
pop
outsl
lret
jmp
shll
push
sbb
fnsave
mov
repnz
push
push
clc
xchg
sbb
jge
xchg
mov
pop
xchg
or
stc
sub
cmp
in
mov
adc
add
shrl
test
push
data16
inc
xchg
jmp
xlat
xor
push
push
add
test
cmp
faddl
movb
pusha
mov
popf
xor
inc
dec
push
mov
dec
testb
jb
mov
xlat
leave
jbe
ret
cmp
xor
dec
dec
ljmp
int3
mov
sbb
sbb
jns
and
fstpl
mov
mov
dec
jg
stc
pop
je
or
sbb
cmpl
fwait
int3
and
adc
arpl
inc
movsw
fists
clc
ja
cmp
nop
mov
mov
or
or
fldenv
loop
rol
or
cmp
jo
test
and
inc
pop
mov
xor
push
jne
jbe
dec
out
cmp
cmpsb
mov
jb
repnz
call
arpl
sbb
aaa
push
push
shll
in
lcall
test
dec
xchg
push
aas
pop
cld
mov
dec
roll
push
mov
out
sub
movsl
arpl
ss
dec
inc
mov
xchg
popf
mov
dec
mov
adc
das
xchg
arpl
das
cmp
adc
aad
pop
mov
jmp
cmp
call
jo
or
xchg
mov
xlat
out
or
loop
rorl
out
or
lods
mov
fbstp
test
sub
fsubrl
loope
push
clc
es
sbb
popf
js
ss
pushf
int
push
das
in
jmp
xor
inc
sbb
ret
daa
mov
sub
pop
test
ss
mov
fildll
sbb
mov
jl
mov
in
dec
mov
xchg
in
cmpsb
and
fadd
out
in
mov
sub
push
push
lods
hlt
jnp
fldl
add
sbb
mov
fwait
push
mov
and
xor
xor
inc
mov
fsubrs
rorb
test
cld
lcall
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
repz
inc
xor
pusha
stos
das
xchg
bound
call
jae
ds
or
mov
int3
xlat
lds
xor
push
clc
data16
insl
jnp
adc
cmp
push
xor
inc
mov
mov
test
arpl
jbe
repz
inc
inc
int
ret
sub
movsl
jmp
jp
pushf
cmp
pop
and
test
xor
adc
in
sti
lahf
ret
fstl
loope
cmc
sub
push
out
mov
aad
sub
addb
cmp
lea
jno
adc
mov
add
addr16
xchg
test
xor
adc
int
jbe
int
sub
jae
jl,pt
icebp
push
pop
sbb
inc
sbb
insl
mov
add
enter
out
clc
mov
nop
fprem
dec
imul
in
cmpsl
out
lods
rorb
scas
test
hlt
sbb
fidivrl
cmp
cmp
add
push
push
inc
sub
je
bound
rcl
push
test
in
enter
inc
push
mov
sub
pop
inc
mov
jno
lcall
scas
inc
std
adc
mov
daa
pusha
imul
fsts
inc
mov
cld
test
icebp
mov
push
jle
lahf
mov
sub
imul
and
ss
les
push
push
mov
rcrl
jno
jae
inc
xor
in
fdivrs
dec
clc
cmp
or
and
sub
call
call
in
test
sub
adc
push
jnp
fwait
jmp
das
push
inc
mov
cmpsl
in
xor
jbe
or
mov
fucomi
or
out
xor
lods
idiv
add
js
push
or
daa
outsb
arpl
test
cmp
dec
push
jne
and
sahf
test
fisubrl
sub
sti
shll
push
cwtl
gs
fcoml
inc
es
xor
sub
mov
lahf
jg
out
or
subl
and
ret
lds
cmpsb
mov
inc
mov
xor
scas
out
jl
shrb
aad
jnp
out
or
iret
rolb
mov
jg
es
inc
out
sarl
jge
out
xor
pop
mov
icebp
sbbl
xor
in
pop
add
jmp
add
fdivl
lock
xchg
pop
push
sbb
xchg
mov
jl
jle
stos
mov
dec
lock
and
mov
or
sbb
mov
push
or
dec
outsb
xchg
pop
pop
sahf
adc
push
dec
test
and
cmp
sub
xchg
clc
lahf
cmovg
push
add
pop
jno
outsb
sub
ret
cmp
ja
jge
pop
pop
adc
push
adcb
arpl
push
pusha
jnp
outsb
test
mov
lcall
add
loop
das
popf
imul
int3
lea
sahf
leave
ret
mov
lret
je
repnz
mov
fsubrs
mov
xchg
imulb
jo
sbb
into
push
int
mov
mov
inc
in
cld
push
dec
jge
es
test
pop
mov
loope
cmc
stos
add
jg
in
xor
negl
mov
xchg
mov
fwait
jp
and
add
movsb
pushf
call
js
jb
scas
dec
sub
outsl
mov
push
es
pop
mov
adc
xchg
xor
lds
jne
xchg
jle
mov
subb
imul
xor
imul
lods
popa
dec
add
mov
and
dec
adc
cmpb
mov
jae
jmp
push
jl
scas
mov
loopne
adc
pop
cmp
aaa
rorl
into
mov
les
cmp
fmul
fnstenv
popa
js
in
adc
push
aas
xor
fisttpl
ja
mov
mov
xchg
jmp
test
shlb
mov
inc
fmull
push
cmp
imul
hlt
jg
cwtl
movsb
in
addb
icebp
enter
das
sub
mov
lea
mov
mov
dec
jg
les
insl
push
lods
das
das
pop
add
mov
inc
jmp
push
rorb
push
insb
adc
pop
pop
add
cmp
cmc
aaa
fucomp
or
dec
xor
je
sbb
jno
popa
jns
ss
ljmp
fbld
negb
psubq
out
ret
xchg
push
sti
adc
push
sub
movsl
test
mov
jne
scas
dec
int3
sti
xchg
pminsw
push
jmp
push
mov
or
sub
bound
js
cmp
ljmp
xor
xor
outsl
pop
xor
mov
inc
mov
mov
jmp
je
push
push
lock
outsb
dec
mov
shr
mov
jle
pop
lock
mov
dec
sub
dec
movb
inc
and
mov
inc
mov
push
xor
jno
mov
mov
leave
imul
inc
cmpsl
add
jle
clc
push
xor
and
lret
loope
mov
dec
inc
outsl
add
inc
sbb
xchg
or
mov
lret
imul
popf
clc
lcall
lahf
mov
cmp
addr16
ljmp
test
gs
or
insl
aas
int3
outsb
lret
xor
nop
push
mov
not
lret
push
cmp
stc
or
jb
arpl
int3
mov
push
adc
cli
lcall
leave
cli
std
lret
in
sub
lret
out
jmp
and
adc
adc
incb
push
rcrl
je
lods
data16
pop
dec
xor
cli
pushf
jnp
xor
jp
clc
push
sbb
outsb
sar
xchg
lahf
push
int3
xchg
cs
fsubrl
sti
pop
out
cmpsb
jge
pop
adc
dec
lods
mov
dec
mov
testl
xchg
mov
cmpsl
jb
shrl
inc
adc
dec
xor
xchg
out
imul
andl
push
in
xor
mov
xchg
xor
movsl
adc
xchg
mov
out
data16
sbb
fldl
lret
lret
adc
sub
lods
fstl
mov
repnz
stos
arpl
jnp
test
popa
fmull
inc
push
xor
dec
cmpsb
cmpsl
mov
push
xor
jp
mov
sbb
fcomps
cmpsl
ds
xor
subl
cmp
and
fdivl
jmp
out
insb
idivl
push
and
dec
loop
ja
add
out
pop
push
pop
adc
out
mov
xlat
aam
mov
fbld
pop
lahf
push
push
icebp
add
adc
inc
outsl
inc
aas
dec
and
mov
ret
lret
dec
rcll
or
mov
mov
mov
insl
daa
repnz
mov
out
add
xchg
hlt
loopne
ret
mov
or
push
jp
jbe
push
and
jb
mov
push
push
leave
insl
mov
xlat
mov
aad
mov
jecxz
arpl
insl
out
lds
inc
loop
sahf
addr16
daa
push
inc
inc
xchg
push
or
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
or
sbb
jle
jl
jle
mov
test
push
xor
cltd
push
aad
xchg
int3
sarb
sub
in
jo
outsl
push
enter
sbb
imul
daa
jae
lods
sti
dec
ror
mov
cwtl
out
cmp
mov
xor
or
mov
call
movsl
rclb
xchg
test
mov
jns
sub
shufps
jns
fnstenv
in
mov
pop
movsb
es
jecxz
xchg
xchg
push
movsb
jp
hlt
mov
rcl
enter
pop
xchg
cld
mov
dec
mov
fistpl
addr16
in
clc
mov
mov
movsb
jo
aas
in
out
pop
inc
movsl
push
xchg
xor
cmp
pusha
add
jl
iret
mov
and
add
ljmp
xor
rsqrtps
je
push
orb
or
dec
inc
xor
and
lods
es
sub
inc
stos
mov
inc
or
scas
push
cld
pushf
push
inc
xchg
nop
je
pop
cmp
inc
lret
lret
ret
ss
adc
mov
scas
ja
and
add
rcll
les
jns
aad
div
mulb
fisttpll
in
arpl
pop
pop
lock
rcrl
dec
jle
int3
fisubl
cmp
ret
sub
daa
rolb
fs
mov
or
xchg
pop
and
fdivrl
sbb
pushl
pop
lahf
movsl
xchg
shll
loope
loope
mov
inc
xchg
fwait
rclb
xor
dec
push
sbb
sub
inc
jnp
cmp
ror
nop
cmc
in
pusha
sub
test
ljmp
adc
les
lret
idivb
dec
sahf
sahf
sub
add
outsl
shlb
popl
sbb
lcall
in
stc
dec
int3
and
clc
movsb
mov
dec
add
test
sub
push
xchg
icebp
jb
flds
aam
add
mov
xchg
cli
rolb
movsb
lret
outsb
mov
jge
ds
stos
jo
sbb
pop
dec
mov
test
inc
mov
data16
leave
test
xchg
sbb
clc
les
loopne
push
jo
adc
mov
pushf
inc
sub
inc
mov
xor
jo
daa
insb
mov
div
xchg
and
bnd
test
add
add
inc
call
lea
mov
mov
addl
mov
jmp
sub
or
lock
inc
mov
and
jle
jl
jle
mov
lods
push
xor
out
hlt
movsb
sbb
push
xchg
push
out
arpl
fldcw
jg
cmp
pushf
mov
inc
jp
and
or
xor
and
cmp
xchg
ss
lahf
xor
cmp
es
sub
inc
jb
pop
lds
popa
cmp
push
sbb
jl
lret
push
dec
ss
cmp
pop
sbb
jbe
xchg
in
aad
fisttps
sahf
pop
xor
jecxz
cli
sbb
add
mov
push
pop
std
sbb
and
sub
dec
hlt
xlat
sub
je
rol
icebp
iret
sbb
pop
adc
pop
inc
sbb
mov
xor
mov
mov
js
cltd
cmpsl
mov
fsts
inc
aad
out
shr
clc
test
mov
fxch
push
cmpsl
icebp
je
out
data16
mov
mov
loope
fstl
pop
adc
in
sbb
sbb
sub
mov
cmp
jbe
jo
mov
cmp
cmp
push
icebp
xor
mov
inc
adc
xor
fdivl
cmp
loop
push
psubd
loope
fnsave
hlt
push
les
mov
adc
lds
orb
dec
leave
and
imul
mov
push
jge
xor
cmp
xchg
jne
mov
xor
pop
xchg
ss
cmp
std
fsubr
sbb
loope
movb
rolb
push
stos
xor
pop
pop
stc
add
mov
xor
and
jbe
movsb
dec
subb
push
add
dec
sbb
mov
roll
loope
outsl
dec
cltd
inc
sub
and
cli
mov
inc
add
into
mov
pop
sbb
mov
fdivrs
cmp
je
mov
es
nop
aam
dec
ret
lcall
mov
add
icebp
mov
mov
xchg
cmpsb
jns
arpl
gs
lahf
inc
sub
or
das
test
mov
aaa
xor
loopne
jecxz
adc
ss
mov
dec
pop
pop
sbb
repz
sbb
addr16
dec
jmp
mov
inc
jge
rcl
push
pop
jecxz
jge
jb
repz
xchg
xchg
jg
shrb
decb
cmc
inc
mov
popf
mov
mov
dec
or
outsl
jle
pop
out
dec
cmp
or
rorl
add
or
sti
stc
decl
mov
add
mov
pop
leave
ret
push
mov
push
movl
jmp
mov
xor
in
leave
outsl
sbb
pop
xchg
jle
jg
jle
cs
pop
jnp
int3
and
roll
outsb
enter
mov
pop
adc
lret
insl
add
hlt
lretw
add
push
shl
aas
or
nop
add
mov
inc
jno
es
jg
call
push
cmpsl
xor
aas
mov
roll
daa
pop
aam
cld
cwtl
fnstsw
fnsave
push
sub
pusha
jp
jmp
inc
and
aas
jns
rol
jb
stos
or
xchg
inc
pop
lock
mov
jne
jle
jl
mov
lret
xchg
push
jge
lods
mov
iret
test
test
cmp
xchg
dec
xor
sbb
lahf
and
movsb
cmp
in
insb
testb
lahf
scas
sbbl
gs
ja
jno
xor
loopne
fidivrl
sbb
mov
add
pop
adc
xor
in
aad
xchg
hlt
add
sahf
mov
pop
jb
int3
fldl
mov
lods
pop
addr16
cld
int
xchg
xlat
pushf
mov
int
sbb
cmpsl
test
jmp
lods
shrl
xchg
aaa
sbbl
mov
cmp
and
mov
fwait
mov
inc
push
ss
out
stos
ret
fcomi
add
fwait
inc
push
xchg
ja
icebp
enter
movsl
push
adcl
cwtl
lea
jp
sbb
imul
jp
pop
ror
lcall
xchg
daa
ljmp
mov
movl
mov
subl
add
xorl
xor
movl
cmp
jne
and
mov
mov
add
andl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
jmp
mov
gs
stos
repz
push
or
jle
movsb
jg
jle
add
mov
in
push
icebp
xor
mov
mov
popf
mov
mov
jmp
jns
aam
imul
icebp
pop
out
cltd
dec
inc
cs
xor
push
lods
mov
add
xchg
cmp
sub
stos
or
cwtl
mov
shrb
in
adc
push
addr16
cmpsb
pop
mov
jo
cmp
cmp
pop
ds
jbe
or
mov
leave
cs
enter
xor
or
loope
jbe
sarl
sbb
std
aas
addr16
xchg
cwtl
js
dec
testl
movhlps
sbb
cwtl
subl
or
sbb
xchg
enter
sub
jp
mov
xchg
fwait
stc
dec
xor
popa
mov
and
lock
or
out
dec
xchg
in
mov
push
or
fcmovnbe
in
div
jge
xchg
push
insl
dec
movsl
xchg
sbb
popf
mov
fstpl
fbstp
shlb
and
pushf
mov
dec
lock
mov
and
cmp
arpl
into
in
xorb
inc
inc
int3
out
add
fiadds
iret
jp
sbb
adc
mov
pop
loop
pop
rorl
pop
cmp
jl
push
jne
add
xchg
in
push
sub
pusha
jge
jecxz
and
movsl
fbld
out
data16
jo
add
pop
mov
sbb
jae
nopl
loopne
add
jmp
mov
xor
add
leave
ret
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
popf
dec
dec
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
lock
add
add
add
outsb
push
popa
addr16
push
js
outsl
ss
je
jo
aas
inc
outsb
gs
je
push
gs
push
inc
inc
pop
inc
push
inc
dec
pop
dec
cmp
add
add
sbb
add
adc
add
add
add
shlb
add
add
add
and
add
mov
add
test
add
scas
xor
add
add
mov
add
add
add
add
and
add
add
add
cmp
add
and
add
mov
add
add
add
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
xchg
add
imul
ja
jae
insl
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
jbe
add
jb
push
jae
jb
arpl
add
add
jb
jo
add
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
lds
jo
imul
add
outsl
jb
add
data16
outsl
outsl
jb
lods
add
js
imul
add
jo
pop
insw
outsl
fs
xor
je
insb
add
or
je
ja
jo
gs
add
add
jb
arpl
add
pop
pop
arpl
insl
outsl
fs
push
add
imul
addr16
add
xor
arpl
outsl
imul
test
jae
popa
arpl
add
js
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
jo
add
xchg
pop
imul
insl
add
outsb
jne
add
add
jb
bound
add
insl
bound
gs
add
sbb
jae
jo
imul
data16
add
pop
pop
arpl
inc
imul
ja
jae
arpl
add
add
js
je
imul
jae
add
call
js
je
add
add
je
add
fadds
jae
je
outsl
arpl
add
gs
jae
jb
popa
je
gs
add
mov
data16
imul
gs
outsl
jb
add
popa
je
insb
add
jb
pop
pop
addr16
popa
imul
sub
arpl
arpl
add
add
insl
outsl
jbe
add
dec
push
push
inc
push
push
cs
insb
add
mov
imul
outsl
ja
jo
popa
je
add
nop
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jne
jae
jb
mov
imul
popa
bound
add
outsb
fs
gs
popa
addr16
js
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
dec
outsl
popa
fs
arpl
push
add
bound
jbe
outsb
je
test
fs
imul
add
je
arpl
add
outsb
fs
imul
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
outsb
jo
je
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
jb
outsb
je
inc
add
imul
je
insb
popa
jae
dec
outsl
outsb
addr16
add
outsl
outsb
imul
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
ja
arpl
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
je
insb
imul
jb
movsb
add
pop
outsl
outsl
insl
gs
roll
outsb
popa
bound
imul
sub
inc
push
ja
jb
jne
push
add
inc
add
imul
arpl
outsb
add
add
inc
fs
jae
push
imul
arpl
add
icebp
add
jae
dec
gs
popa
addr16
add
out
add
imul
jae
addr16
add
dec
add
je
jb
jo
add
inc
add
outsl
jae
inc
gs
je
jo
add
add
jo
imul
imul
push
imul
popa
jae
inc
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
sahf
add
push
arpl
jo
jns
mov
push
outsl
push
outsb
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
gs
popa
jb
outsb
je
bound
inc
jb
popa
je
push
imul
inc
add
popa
insb
imul
je
add
push
gs
imul
outsb
addr16
add
adc
gs
jae
inc
inc
add
inc
push
dec
outsb
jne
add
add
arpl
outsb
jne
je
insl
add
add
outsb
dec
arpl
add
mov
imul
imul
add
jae
popa
addr16
outsl
js
add
ja
outsb
jne
popa
jb
inc
add
je
outsl
jb
addr16
jne
fs
imul
add
jae
jb
outsb
je
push
add
mov
imul
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
jae
outsb
arpl
jns
je
je
add
or
inc
imul
jae
push
outsb
imul
jo
popa
je
push
imul
or
inc
gs
inc
inc
js
stos
add
fs
jne
jae
jb
add
gs
arpl
insb
insb
push
popa
outsb
add
cmp
inc
push
jo
jb
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
insl
add
je
imul
outsb
addr16
add
addb
outsb
data16
popa
je
push
arpl
add
insl
outsl
jbe
dec
outsb
jne
add
ja
outsb
imul
arpl
das
add
je
arpl
gs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
popa
insl
gs
arpl
add
inc
imul
jae
popa
addr16
add
xor
inc
push
gs
add
inc
outsl
jb
addr16
jne
fs
imul
add
imul
jne
dec
fs
add
push
add
je
jb
jo
add
dec
add
je
outsb
jne
scas
add
fs
jne
jae
jb
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
add
je
popa
jb
outsb
je
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
gs
imul
sub
inc
push
ja
jb
add
out
add
imul
jae
addr16
add
jne
inc
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
jb
gs
push
add
push
je
imul
push
push
outsb
outsl
ja
jae
outsb
arpl
add
popa
jb
jo
gs
add
sti
add
dec
outsb
push
arpl
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
lahf
add
jo
je
push
popa
addr16
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
sub
push
outsb
fs
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
ja
je
je
push
add
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
fs
je
imul
push
gs
arpl
jo
jns
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
cmp
inc
push
jo
jb
jne
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
xor
jb
outsl
dec
gs
push
add
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
push
push
inc
push
xor
cs
insb
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
pop
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
popa
insb
gs
add
gs
arpl
imul
into
add
insb
arpl
push
arpl
jp
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jo
outsl
fs
pop
add
je
popa
jns
jne
add
add
je
imul
add
jbe
inc
inc
add
pop
add
je
popa
jo
outsl
fs
mov
popa
je
dec
inc
push
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
out
add
je
popa
insb
gs
gs
outsb
je
imul
gs
imul
outsb
jae
outsl
outsb
inc
js
add
add
jb
je
push
add
je
inc
imul
bound
imul
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
gs
outsl
add
clc
add
je
gs
inc
insb
imul
push
popa
je
insb
je
add
inc
imul
test
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
aam
push
gs
imul
outsl
jb
add
add
je
dec
push
xor
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
addr16
js
add
popa
je
push
outsb
add
push
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
outsl
insb
jns
outsl
outsb
add
popa
je
push
arpl
outsb
add
gs
inc
js
outsb
je
outsl
imul
jo
inc
fs
outsl
outsb
je
gs
jne
arpl
add
inc
add
je
gs
arpl
popa
jo
add
inc
gs
imul
add
je
gs
dec
jne
push
add
popa
je
push
popa
je
gs
inc
jb
jae
add
into
add
arpl
gs
insb
imul
lds
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
inc
dec
xor
cs
insb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
inc
imul
jb
popa
je
push
popa
imul
insl
gs
add
and
dec
popa
jo
imul
insb
add
push
gs
push
push
jb
outsl
jb
je
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
add
inc
popa
fs
gs
fs
je
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
push
push
inc
data16
dec
popa
jae
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
inc
imul
dec
push
dec
add
dec
popa
imul
outsw
add
add
gs
je
inc
jbe
outsb
je
add
outsb
add
outsb
fs
gs
jne
arpl
js
add
push
gs
fs
imul
gs
gs
jo
popa
je
inc
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
bound
inc
gs
gs
jo
popa
je
push
add
rolb
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
add
jne
push
gs
jne
arpl
popa
insl
gs
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
gs
outsl
je
push
push
add
jns
inc
gs
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
dec
add
jne
jo
outsb
fs
push
add
add
jae
jb
jo
outsb
push
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
insb
push
outsb
ja
outsb
add
je
insl
dec
popa
insl
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
popa
jb
push
inc
add
push
gs
imul
jne
push
imul
add
insl
outsl
jbe
inc
imul
jns
add
ret
add
jae
jb
insl
jo
add
dec
add
insb
gs
imul
arpl
inc
imul
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
addr16
pop
dec
popa
jns
push
imul
je
inc
push
insb
pop
add
add
or
inc
add
inc
add
cmp
call
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
mov
cmp
mov
ds
add
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
inc
add
inc
add
cmp
mov
cmp
add
cmp
sbb
inc
add
test
sarb
add
or
inc
add
ss
add
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
je
inc
add
imul
pushf
clc
sahf
jmp
add
lods
cmp
pushf
or
addr16
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
add
dec
add
imul
add
dec
add
add
insb
add
insb
add
add
dec
add
inc
add
imul
push
add
imul
add
add
imul
add
imul
add
add
dec
inc
dec
dec
push
fs
dec
dec
imul
push
inc
outsl
imul
data16
push
imul
add
add
add
add
inc
add
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
add
add
or
add
shll
and
inc
push
outsl
push
mov
cmp
add
add
add
popa
push
push
push
dec
je
push
jne
popa
jns
pop
je
push
jp
jp
js
imul
push
dec
dec
outsb
push
pop
dec
dec
dec
dec
je
add
add
insl
push
dec
jne
outsb
imul
pop
outsb
jbe
jns
dec
je
bound
push
arpl
push
imul
add
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
insb
jb
inc
push
push
inc
insb
inc
inc
jae
dec
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
dec
imul
inc
jp
pop
inc
jae
dec
dec
gs
jne
add
cmc
jnp
jnp
cmc
lcall
and
call
roll
add
and
mov
xor
dec
push
jecxz
cs
cld
das
outsl
aam
cltd
out
fs
mov
sbb
add
and
mov
out
xor
test
test
mov
insb
shl
mov
dec
pmulhw
test
scas
popf
jge
mov
cwtl
ret
jnp,pn
sbb
jl
scas
mov
test
sahf
jge
adc
cli
inc
imulb
mov
iret
stos
jg
pop
xlat
mov
out
in
jle
dec
pushf
cmp
repz
orl
filds
jbe
pop
fwait
and
mov
and
mov
cmc
adc
and
out
push
xchg
and
stos
adc
pop
or
test
or
inc
addr16
mov
lahf
inc
gs
pop
mov
inc
mov
imul
call
cmpsl
rcll
xor
inc
incb
mov
mov
mov
add
add
push
pusha
in
jle
lcall
movsb
loope
add
add
sub
int3
imul
inc
data16
cmp
das
clc
push
or
jge
mov
enter
push
pop
mov
lahf
mov
test
add
fisttps
in
insl
ss
aad
cmc
andb
fisubs
fldcw
xor
sub
push
xorb
fcompl
into
xor
mov
aas
aad
xchg
sbb
iret
jno
push
ds
ror
sbb
outsb
ror
shrb
ficomps
aaa
mov
mov
jmp
int3
and
xchg
add
pop
lds
icebp
cmpb
les
xor
adc
pushf
rcr
pop
lret
inc
cmp
mov
inc
ret
lods
jae
ret
pop
xchg
push
out
pop
push
hlt
sub
push
fldl
js
mov
insb
in
hlt
sub
mov
stos
jge
nop
xchg
mov
rol
mov
icebp
fadds
or
pop
or
cmp
mov
test
add
add
adc
mov
mov
push
nop
or
insl
out
add
add
cltd
push
aas
lcall
stos
enter
xchg
sub
mov
lds
xchg
in
ds
movsb
fwait
pop
mov
cmp
dec
cmp
out
jbe
lds
pop
lret
hlt
and
dec
mov
hlt
mov
mov
imul
enter
inc
cmc
ljmp
mov
adc
pop
loope
sbb
hlt
xor
fnstsw
xlat
popa
orl
cmp
mov
lea
enter
sbb
aad
negb
stc
or
add
hlt
test
into
sbb
test
push
lret
pop
mov
cwtl
ss
sarl
popf
ss
or
arpl
jle
aam
push
fwait
stos
push
hlt
push
fdivrs
jb
adc
fistpl
neg
int3
nop
cmp
repz
jns
pop
scas
mov
clc
add
aas
pop
stos
dec
push
pop
sbb
mov
push
xlat
cmp
pop
jbe
push
mov
add
add
mov
roll
jbe
adc
jmp
add
add
jb
in
je
nop
dec
je
arpl
jmp
std
lods
push
inc
daa
out
in
fidivl
xor
inc
push
cltd
mov
mov
sub
fstpt
mov
repnz
lahf
loope
aam
push
out
scas
or
cmp
test
fsubl
fidivl
into
or
out
add
das
addr16
je
sub
rcrb
fcomps
lret
push
push
mov
ret
jno
mov
sub
or
add
outsb
mov
sub
gs
jp
out
das
push
pushf
mov
lret
loopne
sub
cmp
insb
scas
mov
scas
or
hlt
cwtl
ljmp
stos
pop
sbb
in
je
insl
out
xor
pop
hlt
outsl
pop
cmc
popa
leave
cmp
and
push
and
xchg
add
jbe
mov
push
pushf
cld
cmp
pop
nop
test
aam
in
call
and
add
pop
jae
or
pop
dec
or
aad
sahf
lock
add
or
sub
dec
stos
jle,pt
jmp
leave
sub
dec
cmp
sbb
cmp
scas
jecxz
pop
js
shrl
stos
in
jmp
adc
fiaddl
cltd
fcmovu
dec
leave
dec
dec
hlt
mov
dec
pushf
xchg
data16
rcl
jmp
mov
cmp
xchg
sub
fistps
popf
push
sub
lods
push
sbb
xchg
loope
adc
cmp
gs
mov
cmp
inc
mov
idivb
aad
jb
mov
test
orl
clc
lea
stc
call
bound
mov
enter
xor
lahf
repz
mov
cmp
test
and
sbb
sub
add
adc
movsl
xchg
jmp
test
js
cmp
pushf
out
insl
lock
ds
daa
push
add
jg
cmc
insl
cmc
out
lcall
enter
andl
add
pop
cs
or
cmc
mov
add
addr16
cmp
test
mov
fs
mov
sbb
mov
push
push
pop
lea
std
lret
js
popf
test
repnz
add
loope
jecxz
adc
xor
gs
and
sub
out
xchg
jmp
mov
jg
xchg
ds
movsl
add
and
adc
mov
ljmp
jno
outsb
cmp
xor
mov
pop
mov
fs
cmpsb
inc
cmp
push
rep
out
jmp
popa
pop
addr16
mov
into
into
repz
xchg
sub
sbb
ss
fdivl
xchg
jno
cmpsb
mov
pop
aas
pushf
rorb
fsubrs
aam
adc
imulb
into
sbb
xchg
cmp
push
cmp
iret
jl
repz
sbb
pop
fimull
add
jle
add
outsl
jle
aas
mov
cmp
cli
xlat
add
add
jg
dec
cmc
cmpsb
fisubrl
ds
xchg
clc
and
add
adc
stos
jno,pt
daa
inc
icebp
iret
aad
incl
push
rclb
mov
push
int
gs
lods
push
mov
shl
jp
mov
scas
mov
addr16
cmpb
outsl
pop
lret
lock
mov
in
mov
push
jno
je
fists
push
or
inc
xorb
cmc
xchg
stos
movsl
mov
stos
and
jae
add
loopne
xchg
mov
loope
and
fdivrs
dec
lret
rcrb
sub
dec
lcall
adc
push
movsb
xchg
adc
imull
fcmovne
push
adc
mov
pop
xorb
repnz
cwtl
stc
cmp
rcl
and
cmp
mov
aam
popf
push
scas
pop
sahf
cmc
fbld
sbb
adc
cmp
js
std
mov
mov
sub
mov
or
and
mov
add
or
and
scas
sti
jle
pop
push
pop
in
sub
add
add
and
cltd
mov
mov
insl
scas
sbb
scas
addl
int3
lahf
rclb
sbbl
or
and
sar
mov
xor
add
jne
imul
repz
pushf
les
or
data16
mov
inc
and
jns
dec
mov
mov
loop
xlat
sahf
xchg
mov
shl
add
insb
mov
jno
pop
jb
mov
cwtl
add
push
cmp
jnp
xor
mov
or
lods
dec
and
hlt
in
scas
enter
pop
pop
jae
ficomps
dec
out
jno
roll
jbe
pop
inc
in
icebp
xor
stc
cmp
jle
fwait
test
out
jbe
adc
and
scas
fsubrs
rorb
fisubs
daa
stc
add
sbb
or
int
jno
hlt
pushf
test
leave
lea
repz
mov
or
ret
out
add
lahf
fnstcw
ss
lahf
stc
bound
jo
add
add
add
push
lahf
mov
or
hlt
rcll
jmp
and
lea
xchg
data16
cmp
fdivrl
cmc
mov
cmp
movsl
enter
jno
push
sub
add
fwait
mov
cmp
in
imul
xchg
xchg
dec
not
pop
and
mov
mov
xor
jne
js
cld
or
xor
sub
jb
mov
loope
push
add
enter
mov
mov
jmp
in
imul
jno
fidivrs
mov
jne
and
stc
mov
mov
fldcw
aam
jb
out
sbb
add
push
jne
pop
mov
cmp
dec
fsubl
xor
cmp
in
mov
push
pop
mov
add
repz
mov
xchg
je
dec
xchg
sbb
add
xor
push
jl
jle
insb
out
adc
or
fildl
add
mov
pop
or
loopne
or
cli
xor
dec
cmpsl
add
mov
jle
pop
ds
push
lock
out
cmpsl
xchg
or
test
xor
movsl
fxch
pop
dec
adc
jbe
js
orb
ss
mov
sbb
adc
loop
outsb
xorl
mov
cmp
dec
jl
daa
xor
repnz
je
push
xchg
je
shlb
aas
dec
mov
jge
jle
pop
xor
push
add
or
push
ret
fcompl
movsb
sbb
int
and
lea
push
fmul
sub
das
pop
pop
adc
mov
sbb
xchg
and
and
js
notb
hlt
mov
push
outsb
mov
dec
jge
push
dec
mov
inc
nop
fmuls
dec
out
mov
mov
loop
push
scas
inc
mov
or
enter
or
data16
add
fwait
mov
in
xor
adc
push
faddl
add
mov
xor
test
sbb
inc
or
push
or
lock
adc
mov
into
addb
push
mov
shrb
xorl
repnz
test
cmp
push
cli
xchg
xlat
dec
push
ja
lahf
int
push
cmp
repnz
jl
loopne
iret
and
fldl
sbb
cwtl
xchg
xor
mov
sub
mov
ss
fadd
pop
movsb
inc
xchg
mov
jecxz
dec
pop
arpl
sub
add
mov
push
xchg
loop
lods
loope
dec
ljmp
bnd
fsubl
xchg
add
iret
lods
pop
mov
aaa
test
xor
cld
mov
fsubr
fwait
jns
dec
scas
ds
push
outsb
lea
mov
adc
dec
leave
lods
int
sbb
xchg
repz
or
sahf
sub
andl
popa
push
lds
add
add
data16
jne
mov
lcall
add
add
jb
int
or
jecxz
imul
mov
xchg
fiadds
cmp
in
sub
loop
sub
or
dec
das
popf
cs
xor
jmp
adc
in
nop
mov
imulb
fidivs
push
je
adc
ds
jmp
mov
stos
imul
xchg
or
icebp
out
orl
mov
adcl
jl
sbb
mov
inc
mov
js
dec
push
leave
jmpw
shrb
push
pop
xor
sahf
add
mov
out
leave
hlt
out
mov
cmp
sub
outsl
xor
push
or
dec
xchg
fistpll
mov
push
xlat
jb
push
fdivs
call
mov
push
imul
fdivr
orb
cmp
loope
dec
jne
or
aaa
aas
pusha
mul
call
jnp
add
jnp
sti
xchg
lahf
mov
mov
add
fmull
mov
ds
daa
in
add
adc
dec
fcompl
test
mov
sub
in
pop
out
sbb
lds
or
mov
or
xchg
int
and
mov
push
ror
cmp
repz
mov
jmp
xor
jmp
je
inc
cmp
test
test
push
insb
sbb
sbb
mov
lret
insl
leave
push
sti
pop
fsubrl
adc
addr16
jecxz
int3
pop
pop
dec
int3
xor
test
lock
fnstcw
cs
mov
cld
adc
popf
testl
int
aaa
adc
cwtl
repz
lcall
add
inc
adc
xor
mov
popa
push
and
mov
inc
sub
mov
dec
cmp
hlt
inc
in
add
add
pop
sarl
mov
loope
filds
add
lods
lds
fisttpll
mov
xchg
jbe
sti
pop
push
sysenter
push
mov
cmpb
mov
bound
and
in
mov
jmp
xchg
je
addr16
inc
lods
add
mov
repnz
adc
mov
addl
inc
scas
jl
cmp
ret
sbb
or
pop
mov
jle
inc
movsb
xchg
js
dec
push
notl
sbb
inc
jecxz
fldenv
sub
add
mov
and
push
rolb
and
into
movsb
imul
mov
jp
int
jb
sub
cmpl
sub
xchg
jp
push
and
push
leave
lcall
push
adc
xlat
rolb
or
sar
xchg
cs
add
push
sbb
leave
movsb
xchg
fcmovbe
js
xor
addr16
aaa
shrb
dec
out
rorb
jb
cmp
add
add
repz
std
repz
mov
add
add
repz
lea
adc
ljmp
xchg
mov
adc
mov
mov
inc
dec
in
mov
imul
lcall
adc
call
xor
jmp
cmpsb
xlat
fbld
mov
mov
repz
bound
xor
mov
inc
cmp
mov
cmp
aas
das
pop
cmp
sbb
call
sub
imul
hlt
jae
dec
xor
popa
cmp
shrl
and
lods
mov
mov
testl
and
mov
mov
add
mov
mov
aas
stos
mov
add
push
in
mov
sbb
inc
xchg
divb
daa
sbb
ss
adc
xchg
fidivrl
push
adc
mov
adc
adcl
push
ret
or
daa
xor
lahf
int3
jle
add
add
lock
cmp
arpl
je
sti
daa
loope
add
inc
mov
push
cmp
test
inc
inc
mov
xchg
xchg
sbb
and
inc
ds
inc
leave
movsl
lcall
stos
jp
test
mov
test
out
popa
bound
lock
popf
pop
jl
testb
jg
xor
icebp
mov
sbb
ret
cmp
or
jmp
daa
sbb
ret
dec
lds
push
fldt
lds
xchg
xchg
pop
sub
xchg
loopne
sbb
or
iret
sbb
inc
jge
jecxz
lcall
insl
or
add
test
adc
dec
das
cmp
dec
or
cmc
imulb
jbe
cmpsb
repz
testb
adc
stos
insb
jecxz
dec
je
mov
data16
ret
sub
jg
fwait
popa
je
fiadds
jo
ljmp
fisttps
in
adc
or
das
dec
inc
jne
pusha
add
add
mov
mov
mov
mov
sub
add
add
xchg
jns
arpl
inc
test
enter
add
mov
adc
ja
enter
cmp
dec
jecxz
or
aad
fs
or
dec
movl
ss
xor
cmpsb
inc
clc
lret
or
int
adc
out
stos
punpckhdq
outsb
pushf
enter
mov
inc
jo
repnz
arpl
inc
mov
insl
or
dec
jge
and
xor
aam
pushaw
dec
cmp
out
mov
adc
xchg
insl
adc
js
cmpb
out
incl
add
sti
call
lds
mov
sti
mov
mov
xchg
fcompl
scas
test
movsl
pop
mov
rcrb
sbb
sbb
sbb
and
lea
fisubs
int3
das
xor
mov
cmp
add
lret
xchg
in
mov
incl
shrl
jecxz
add
xchg
sti
lahf
add
add
int
mov
xchg
lods
shl
sbb
aas
jmp
stos
mov
hlt
sbb
cmp
cmp
aaa
js
vmread
out
xchg
fisubl
dec
add
mov
mov
dec
leave
xchg
stos
jg
push
dec
out
and
scas
pop
fcom
xchg
test
cmp
inc
adc
jp
mov
cmp
xor
inc
sub
adc
in
insb
mov
sahf
xchg
jae
cli
or
jecxz
mov
sahf
hlt
adc
jp
pop
stos
pop
pop
jg
mov
and
or
jns
cmpsb
into
xchg
stc
scas
push
add
ds
outsl
ss
xchg
aas
dec
inc
cmp
adc
sbb
cmpsb
sbb
scas
nop
je
pushfw
or
adc
or
push
ds
andl
add
sub
in
negl
sub
movsb
adc
in
add
addb
lea
cmp
outsb
xor
push
xchg
push
pushf
sub
test
add
mov
in
aaa
and
sbb
pushf
cmp
fnstsw
bound
ret
xchg
mov
cmpsl
into
loop
jae
add
inc
inc
enter
mov
or
inc
insb
jmp
xor
mov
fisttps
dec
mov
mov
jo
cltd
push
pop
std
loopne
sub
in
mov
mov
fsubr
scas
dec
call
ror
mov
sti
adc
rcll
jns
pop
push
jle
filds
sbb
cmpb
inc
inc
pop
xchg
movsb
adc
in
ljmp
out
mov
cli
mov
cmp
shrb
ds
aam
into
leave
in
sahf
mov
cmpb
mov
test
inc
roll
add
jne
ss
xchg
lret
jp
and
add
add
mov
stc
dec
push
faddl
or
cmp
add
add
add
popf
adc
fs
sarb
push
jge
mov
das
rcrl
popa
dec
pop
out
push
sbb
cmp
add
jge
adc
movsb
dec
adc
int3
cwtl
xorb
mov
sub
xchg
mov
add
cs
and
ret
xor
inc
mov
inc
pop
mov
enter
lahf
fcmovne
or
push
jae
js
xchg
inc
xor
inc
loopne
push
ljmp
xchg
mov
shl
daa
push
add
jns
cmpsb
sub
es
movsl
enter
out
sbb
je
sub
jle
push
fidivs
dec
add
iret
push
jmp
push
rcl
mov
icebp
xor
outsl
inc
divb
lret
mov
xchg
roll
aas
fistps
cmpsb
aas
mov
loopne
in
nop
and
xchg
jge
push
add
add
adc
push
push
push
mov
je
out
add
fidivrs
test
jbe
mov
je
xor
jecxz
out
data16
in
and
pop
movsl
push
mov
adc
les
lods
xor
pop
test
pusha
adc
mov
mov
push
filds
inc
fxch
test
rolb
scas
test
adc
xor
mov
ja
fwait
lret
push
mov
aas
jp
cli
xchg
pop
push
stc
movsl
sbb
dec
stos
inc
cmc
fsubr
ja
or
clc
stos
lret
idivb
pop
leave
mov
adc
addl
es
inc
sbb
outsl
xor
data16
cmpb
aam
mov
add
mov
aas
add
adc
inc
add
push
inc
in
mov
hlt
addl
push
cs
mov
add
repz
dec
cmpsl
outsl
clc
test
push
jmp
mov
out
repnz
add
pop
lcall
les
stc
sarl
add
add
lcall
pop
mov
add
nop
stos
shlb
mov
mov
imul
scas
fldl
adc
imul
mov
dec
loopne
imul
pushf
mov
adc
inc
out
add
ljmp
jle
jns
insl
lcall
xor
mov
sarb
push
outsb
cmp
sub
imul
inc
mov
pusha
int3
mov
xor
imul
and
dec
adc
repz
shr
inc
mov
mov
xchg
std
ljmp
lods
into
adc
repz
mov
dec
jno
jne
movsb
xchg
push
fwait
call
scas
cmc
xor
loop
ret
xchg
mov
or
or
xchg
test
dec
les
dec
cmp
gs
jae
push
shlb
rcrl
fimull
mov
hlt
daa
shr
cwtl
inc
or
add
add
mov
push
decl
pop
xor
add
add
fwait
hlt
fiadds
cld
xor
movsl
shrb
dec
push
jno
sbb
ds
xchg
mov
shll
jae
pop
dec
int3
lahf
add
mov
jae
inc
sbb
mov
pusha
mov
cwtl
lock
enter
fisubl
pop
adc
sub
mov
xchg
in
insb
sbb
dec
mov
and
sub
adc
test
shr
mov
inc
ficompl
shlb
push
fstpt
mov
es
pusha
inc
and
dec
mov
inc
or
and
cmpsb
jnp
mov
ret
sbb
pop
shl
push
dec
loop
das
xchg
insb
orl
das
cwtl
inc
outsb
dec
das
jns
add
sub
movsb
cmpsb
fnstsw
cmp
scas
cmp
lods
mov
mov
arpl
xchg
adc
scas
repz
in
jo
cmp
jg
ja
lcall
dec
repz
xor
add
add
jmp
in
push
sub
movsb
dec
jmp
add
sbb
pop
fs
daa
stos
or
dec
stos
pop
pop
jnp
fwait
mov
jecxz
in
xchg
movaps
dec
inc
xor
inc
pop
and
inc
sub
rorl
sti
sub
mov
mov
test
dec
add
inc
pop
xor
mov
mov
adc
enter
mov
sti
adc
out
cmpsb
sbb
repnz
mov
mov
mov
jg
fmuls
daa
xchg
pop
push
pop
inc
out
mov
mov
shlb
mov
mov
sbb
das
int
pop
pushf
xchg
gs
xchg
or
sub
and
adc
pop
sarb
stos
push
xor
push
ja
xchg
push
cmpsb
or
pop
cwtl
enter
lds
xor
scas
iret
push
mov
xchg
hlt
sbb
aam
sub
dec
js
stos
mov
add
outsb
xor
mov
lcall
ljmp
jmp
call
lods
jb
xor
push
sbb
pop
flds
pop
shrl
sarb
dec
les
xor
repz
xlat
out
scas
popf
add
mov
xchg
jo
insb
cli
push
add
iret
xor
les
popf
aaa
testl
jmp
cli
std
sub
sub
cmp
lahf
pop
mov
sbb
adc
or
sbb
lret
cmpb
xchg
sbb
sbb
push
inc
or
push
mov
jl
push
sub
jb
xchg
xor
cmp
cmp
and
imul
xchg
stc
mov
push
repz
pushf
mov
jne
call
test
pop
cmpsl
sbb
cli
je
push
lret
int3
xchg
sar
adc
mulb
add
jmp
shll
xchg
shrl
mov
mov
add
add
inc
ror
lock
jnp
xor
xchg
loop
std
adc
jmp
add
aas
in
dec
mov
sbb
mov
repnz
jle
aam
or
cwtl
fsubs
mov
mov
je
adc
lods
add
in
inc
and
int
sbb
dec
mov
sub
xchg
and
scas
pop
fcompl
mov
adc
mov
mov
pusha
cmp
shr
cmpsb
add
xor
add
pusha
or
cmp
js
jbe
lahf
jle
inc
push
sti
cld
mov
inc
test
ljmp
fildll
adc
insl
pop
xor
popl
mov
inc
popa
cli
rorl
popa
mov
nop
mov
rorb
sbb
and
clc
cmp
outsb
lret
mov
out
xchg
pop
fstp
mov
in
or
or
lahf
or
daa
andb
inc
sbb
adc
lret
xchg
loop
icebp
or
ljmp
add
and
repz
fisubs
int
jp
in
add
add
frstor
mov
pop
aas
imul
out
cmp
ds
cmp
jo,pn
push
jl
adc
fwait
repz
pop
loope
iret
inc
in
insl
shr
in
pop
popa
jo
adc
or
jl
cwtl
fprem1
fsubrp
mov
les
mov
inc
and
pop
pushf
xor
push
sbb
jecxz
ljmp
es
mov
leave
cli
loopne
jne
cmc
test
cmp
and
or
sub
xchg
push
daa
cmp
andl
addb
fs
jp
call
sub
in
lret
and
mov
mov
scas
and
xchg
cltd
subl
jg
lahf
and
push
sbb
lea
sbb
ja
pusha
cmp
mov
xchg
pop
push
call
hlt
xlat
jmp
shlb
lds
adc
gs
sub
add
out
sbb
mov
add
add
int
mov
fsubr
cmp
xor
fldl
mov
filds
test
pop
dec
xor
push
dec
xor
pop
rdmsr
dec
pushf
fbstp
arpl
ss
sub
pop
xchg
jne
xor
or
fs
shlb
nop
xor
in
fsub
pop
xchg
cs
cwtl
adc
mov
dec
or
sbb
mov
imul
xchg
loop
dec
aad
add
or
lcall
push
sub
mov
rorb
xchg
outsb
inc
iret
or
or
mov
shrl
adc
add
stos
inc
ss
jle
cmp
cmc
addr16
testl
xchg
mov
sub
xlat
and
cwtl
insl
test
pop
pop
out
stos
mov
enter
aaa
ljmp
or
icebp
imull
mov
outsb
sbb
pushf
ret
add
add
scas
push
repz
cmc
scas
sub
mov
push
add
add
jle
pop
cltd
icebp
jge
push
xor
cmpsl
sbb
pop
fnstcw
sub
push
arpl
sbb
mov
dec
in
mulb
jmp
xchg
jae
xlat
xor
es
call
push
out
inc
scas
sub
je
adc
mov
xchg
add
jmp
adc
sbb
and
hlt
cwtl
xchg
daa
push
jne
rcr
pop
cmp
call
add
sarl
sub
lea
cs
rclb
ds
jp
xchg
mov
or
das
add
add
repz
cmp
jle
sub
dec
push
aas
outsl
outsl
push
xchg
into
call
dec
adcb
sub
push
cmp
adc
mov
push
mov
push
mov
xchg
mov
mov
nop
test
and
roll
mov
in
add
add
pusha
rorb
cmpsb
mov
hlt
sbb
add
add
sbb
jnp
lods
js
xor
or
sub
xchg
sub
pop
scas
jnp
adc
sbb
sub
jae
add
roll
mov
cmp
pop
out
push
out
cmp
xor
subl
jae
test
push
adc
xchg
repnz
bound
in
inc
sbb
push
insb
jl
and
mov
mov
cli
or
mov
cmc
rcl
jg
cmp
sbb
pop
sbb
add
sti
test
fwait
fwait
test
lret
cmp
negl
xlat
sub
dec
mov
stos
jo
xchg
xor
leave
lods
dec
and
mov
sbb
xchg
mov
js
icebp
icebp
cmpsl
sub
fpatan
pusha
fmuls
pop
mov
scas
fsubrl
mov
mov
push
hlt
stc
or
sar
add
jecxz
push
testl
cs
jb
add
add
xchg
or
mov
sbb
insb
xchg
cmpl
dec
or
shl
pop
call
jmp
push
fsubrl
nop
mov
fcmovnu
inc
adc
rcl
inc
test
pop
lds
mov
adc
inc
pop
stos
popa
ficomps
repz
lret
mov
or
mov
xor
cltd
jmp
lods
push
test
or
outsl
and
lock
arpl
mov
fildll
jo
xor
lcall
scas
jl
fdivs
ss
int3
repnz
scas
test
repz
mov
mov
mov
rcl
jnp
jmp
jns
aad
sub
push
data16
ret
les
ret
je
movsb
jno
and
rorl
add
mov
push
mov
rcll
inc
imul
add
fucomp
xor
notl
inc
push
add
inc
cmp
sbb
add
xchg
mov
mov
pop
das
push
pop
fbld
add
add
sbb
cmpsb
outsb
repnz
jecxz
adc
push
sbb
and
sub
sbb
inc
xchg
mov
jle
xor
popa
mov
mov
stos
sbb
cmpb
lods
in
xor
enterw
data16
dec
rolb
xchg
imul
adc
dec
out
adc
cmp
adc
dec
jge
mov
add
xor
lret
shl
cld
fisubrs
push
dec
imul
andl
mov
fadd
ljmp
out
sbb
adc
icebp
pop
repnz
xchg
imul
arpl
faddl
adcl
adc
xchg
mov
inc
test
gs
stc
shll
ja
movsl
cmp
fcomps
lock
sarl
xchg
mov
dec
xchg
sbb
add
mov
fucomi
xor
mov
add
xlat
test
sbb
sub
mov
ja
sub
scas
push
jnp
or
fisubs
xor
icebp
repnz
imul
int3
adc
pop
pop
lods
testl
sbb
inc
pop
sahf
sbb
xchg
nop
jecxz
xor
push
out
sbb
adc
popf
sar
fldcw
fwait
cmpsb
inc
addl
pop
fisubrl
test
sbb
aad
sub
jp
aas
rol
out
sub
adc
sbb
out
sbb
mov
mov
pop
add
dec
jnp
xor
sbb
arpl
icebp
adc
add
mov
sbb
or
sub
pop
mov
fmuls
dec
shr
cmovp
mov
nop
mov
roll
sarb
cmp
xchg
xchg
je
cli
stos
fsub
mov
mov
adc
movsb
jle
pop
push
push
popa
dec
pop
or
add
add
push
inc
pop
jns
aas
loopne
sub
lods
pop
bound
add
add
fsubl
dec
cmc
out
cmpsl
push
cltd
imul
and
dec
in
mov
push
pop
in
cmpsl
ret
jmp
sub
test
adc
lds
xchg
pop
mov
xlat
mov
out
xlat
mov
clc
or
sbb
fldl
push
or
ss
sbb
aas
push
inc
xchg
push
sub
enter
mov
loop
jae
shrb
nop
mov
or
mov
mov
adcb
cwtl
sub
mov
mov
mov
jmp
adc
mov
out
cld
sub
mov
rclb
push
adc
stos
mov
into
leave
inc
mov
lea
jbe
and
aas
mov
jo
mov
icebp
iret
adcw
lods
rolb
push
outsb
imul
mov
shll
clc
lahf
add
add
jnp
mov
cmp
rcrb
xchg
add
add
sub
cmp
fsin
sbb
icebp
shll
sbb
xor
in
out
leave
xchg
int3
mov
pop
gs
fisttps
insb
cs
ss
dec
repz
mov
arpl
addr16
fs
xor
je
xor
clc
ret
outsb
ljmp
out
jne
push
cmp
push
inc
repz
pop
repnz
and
lret
adc
movsl
pop
popl
fcmove
lods
and
cli
dec
jle
sbb
dec
ret
mov
gs
addr16
les
mov
cltd
aas
pop
into
push
xchg
mov
dec
leave
ret
xchg
fdivrl
xchg
xor
repnz
xchg
jae
ss
int
shrl
scas
sub
push
mov
push
xchg
inc
out
out
test
std
and
sbb
daa
faddl
xchg
or
cltd
sarl
xor
insl
dec
sub
add
add
xlat
pop
xlat
jg
mov
and
add
hlt
and
je
sub
lea
mov
aas
inc
push
sub
or
in
and
pop
push
push
rolb
adc
imul
shrb
pop
pop
xchg
push
inc
sbb
mov
les
jecxz
aad
shlb
test
jg
xchg
imul
xchg
insl
in
jo
repz
xorb
or
mov
sbb
adc
hlt
push
xor
and
ret
lcall
xor
ss
aas
addr16
push
aam
iret
lods
dec
inc
insl
jp
cmpsl
sbb
jno
push
imul
inc
push
cmp
cmp
fwait
and
sbb
jbe
xchg
add
imul
sbb
ret
pusha
cmp
mov
ret
js
bound
cmp
pop
pop
sub
imul
hlt
sub
scas
stos
repnz
roll
or
ja
stos
inc
lret
mov
cmp
jp
add
xchg
mov
idivl
jl
aad
nop
testb
add
ror
jnp
fs
pushf
xchg
pushl
rcrl
mov
push
xchg
lods
fbstp
mov
in
lock
loopne
mov
addr16
or
xlat
fbstp
sbb
adc
data16
clc
sub
shll
movsl
shrb
jae
out
jbe
fnsave
lahf
add
aad
mov
test
push
mov
adc
outsl
in
jb
or
pop
popf
idivb
repz
dec
push
push
jge
es
dec
aad
sub
xor
mov
out
cli
dec
fldcw
adc
in
mov
outsb
in
push
jbe
inc
or
push
ss
or
daa
sti
sbb
sub
dec
loopne
or
out
adc
aam
or
add
add
push
xor
mov
iret
lret
repz
aas
sub
push
ret
jae
cmp
xchg
adc
lods
sbb
mov
test
mov
fcmovbe
insl
scas
and
add
add
inc
imull
pop
lods
aas
xchg
je
xchg
enter
pop
sar
ja
jne
jge
stc
clc
mov
xchg
sub
mov
dec
cmp
aas
mov
fwait
jp
inc
add
pmullw
mov
inc
in
mov
jb,pn
cmp
je
pop
cmc
repz
stos
int3
lods
xor
jle
push
test
adc
mov
push
xor
cmp
in
ja
cli
pop
push
mov
or
adc
ret
popf
cmpsb
lock
enter
lock
jno
pop
pop
je
adc
adc
lods
cmp
mov
arpl
popa
loop
out
add
fcmovnb
pop
pop
xchg
push
sbb
adc
shlb
popf
mov
sti
aas
sub
into
fdivrp
frstor
push
out
or
dec
xchg
aas
popa
cmp
pop
popf
adc
push
test
insl
roll
add
jmp
imul
lahf
repnz
sub
lcall
add
cmp
mov
sbb
outsb
jg
mov
cs
lret
fs
jns
adc
and
clc
in
data16
call
cmpsb
cwtl
es
sti
lret
add
xchg
fidivs
mov
insb
mov
jg
shrl
insb
xchg
imul
sub
xor
nop
cmpsb
in
xor
add
mov
xchg
orb
add
cld
and
add
mov
mov
stos
cwtl
imul
mov
jo
xchg
cltd
imul
jp
imul
cmp
fs
add
lods
jo
mov
insb
int
mov
jp
jo
subl
ja
mov
add
mov
mov
push
mov
fidivs
cli
lds
testl
nop
iret
xor
xchg
pop
sbb
cmpsl
add
push
xchg
xor
lock
add
add
pop
lods
pop
cli
cmc
cmpsb
lret
cmc
lds
add
nop
bnd
push
pop
jmp
or
xchg
pusha
xor
je
push
test
mov
mov
xor
pop
jge
imul
fcomi
mov
or
cmove
mov
and
lock
fsubrs
in
mov
sub
xchg
xchg
mov
mov
jg
fists
cltd
js
inc
rclb
or
push
mov
sbb
inc
fs
in
push
add
in
jb
jne
lret
lret
lock
in
push
push
call
lods
bound
jmp
scas
clc
sarb
shll
jecxz
inc
mov
mov
adc
lds
lock
sub
test
shl
mov
in
scas
or
adc
pop
fnstsw
push
and
aaa
lea
jno
dec
scas
add
in
dec
movsl
out
sub
jbe
cmpsl
add
add
stos
cltd
inc
popf
jae
out
xor
movsb
cli
add
add
js
ficomps
ja
test
out
inc
lods
cmpsl
pop
sbb
lock
in
sti
push
out
test
cld
or
xor
loop
ja
jmp
ds
rcll
sub
mov
add
gs
movsl
test
adc
std
push
push
jnp
lcall
popf
movsl
push
sbb
cmp
mov
jmp
bound
scas
inc
or
pop
pop
mov
ja
jb
xor
mov
cli
mov
jmp
ja
fldcw
popf
pop
pop
xchg
jbe
mov
loop
mov
jp
lcall
ljmp
xchg
mov
outsl
loope
inc
incb
movsb
notl
out
sbb
sub
xchg
xchg
adc
sub
or
in
dec
push
mov
jbe
mov
inc
push
adc
ss
add
add
aam
int
aaa
das
aam
sti
loope
test
add
add
scas
cmpsl
xchg
mov
outsl
xor
add
xchg
imul
push
rorb
mov
pop
repnz
mov
cmp
repz
xor
repz
dec
pushf
cmpsl
xchg
or
stc
mov
nop
sbb
mov
cmp
or
test
int
rcr
xor
and
xchg
les
jl
xchg
into
mov
repnz
xlat
insb
adc
push
fcoms
js
nop
mov
fwait
sbb
push
out
repz
inc
imul
fwait
fs
xor
push
mov
jno
out
stc
std
xor
mov
sub
inc
adc
xchg
sbb
in
sub
pop
bound
sahf
dec
jmp
jo
xor
cmp
mov
xchg
inc
pop
aaa
push
cmp
xorb
das
inc
ds
loopne
inc
sub
popf
jnp
push
push
sub
ljmp
add
add
arpl
addr16
sub
out
sub
scas
cld
add
add
and
dec
jb
sahf
pop
fldl
movsb
lahf
dec
movsb
pop
sti
ds
pop
insb
ret
fwait
cld
xor
out
in
incl
jle
imul
adc
lea
imul
cmpsb
test
xchg
loopne
mov
mov
cmp
inc
adc
sti
fsubs
cs
xor
mov
mov
or
add
sub
adc
lock
or
inc
cld
fstpl
adc
xor
js
dec
mov
xchg
push
and
addb
jle
mov
in
jle
clc
jnp
dec
or
cs
fisubrl
dec
scas
es
inc
jb
mov
out
scas
fisubrl
iret
cmpl
daa
or
mov
popa
mov
pmulhw
out
xchg
push
mov
mov
call
and
out
adc
outsb
xor
xchg
scas
mov
xchg
adc
dec
shll
jp
out
add
add
out
out
pushl
xchg
xor
mov
std
add
add
adc
loopne
inc
imul
xchg
popf
dec
xchg
lret
jne
test
ror
sub
and
add
call
iret
ss
in
aam
and
inc
jnp
mov
dec
or
daa
pop
dec
ljmp
movsl
mov
and
ljmp
cmpsl
lcall
ss
or
or
stos
adc
mov
pop
mov
scas
stos
lret
mov
inc
enter
jns
shlb
stos
and
jae
pusha
test
mov
pop
lret
lret
sti
leave
lahf
loope
push
adc
push
inc
dec
daa
mov
insb
push
push
mov
mov
jg
jp
lahf
xor
enter
in
push
or
testl
and
cmp
sub
xlat
pop
cmpsb
iret
rol
fmul
jae
or
cmp
add
add
push
scas
mov
incl
add
mov
mov
xchg
dec
jecxz
lcall
mov
gs
imul
andl
inc
adc
fdivs
xchg
sub
dec
sub
shlb
jne
adc
imul
jns
lret
test
jae
pop
leave
imul
sti
pop
jb
cmp
mov
xchg
aam
stc
inc
add
sub
fistpll
cmpb
adc
in
dec
jae
fs
and
and
mov
push
inc
aad
adc
cmp
loopne
xchg
pop
jne
cmp
out
push
lods
xor
lea
inc
outsl
mov
mov
add
fists
cmp
push
pop
push
jge
dec
popf
sub
push
fs
cmp
repnz
inc
xchg
jg
xlat
jge
jg
in
daa
adc
xchg
ja
adc
pop
jne
pop
add
add
xchg
and
movsl
mov
mov
mov
pop
push
mov
add
add
dec
push
inc
je
jb
in
push
xchg
daa
mov
shlb
lods
loope
xchg
imul
push
testb
test
mov
jns
xor
mov
fisubl
je
ss
jbe
ret
jmp
or
dec
mov
insl
add
divl
popf
leave
mov
pop
add
jbe
jmp
jbe
add
sahf
sbb
mov
inc
popf
sub
or
push
add
sti
loopne
int
adc
mov
imul
pop
adc
aas
dec
ror
mov
jne
repnz
cld
xchg
and
mov
aam
cmp
into
xchg
test
add
sub
lds
xchg
cmpb
sbb
or
push
mov
dec
pop
and
cltd
push
repnz
jp
loopne
sti
xor
mov
sbb
add
mov
push
jg
mov
les
add
add
int3
sbb
and
fimull
adc
mov
sub
mov
mov
adc
jmp
sbb
imul
dec
adc
inc
ret
daa
fldcw
andb
cmpsb
mov
daa
xchg
jnp
lea
inc
leave
and
fisubrs
stos
push
pop
fwait
test
cmp
xchg
and
mov
sbb
fs
jp
sbb
and
int
mov
cli
fildll
and
inc
out
pop
or
cmc
and
mov
lods
mov
push
insl
negl
cwtl
or
add
out
test
or
cmp
jb
in
fwait
push
jle
movsb
jp
xor
call
fldcw
cmpsb
inc
aad
mov
cs
sti
pop
add
inc
adc
pop
add
addr16
sbb
and
sar
dec
push
js
add
inc
stc
mov
mov
lods
imul
je
not
movl
add
adc
test
iret
jns
mov
mov
in
sbb
out
jle
pushf
add
sub
xor
cmp
pushf
in
cmc
mov
cmc
lea
std
pop
in
adc
mov
iret
cmc
out
xor
adc
aas
rcl
jbe
movsb
pop
adc
es
lret
add
shll
jbe
pop
jl
icebp
out
dec
aas
pusha
sub
aas
in
mov
sub
fwait
xor
ret
pop
in
imulb
mov
fildll
cmp
imul
mov
push
and
sbb
in
jae
lea
jle
in
test
and
into
test
dec
in
rcr
push
pop
imul
pop
jne
sbb
movsb
cwtl
xor
push
xchg
xchg
shlb
pusha
sahf
sub
push
filds
pop
jmp
mov
xchg
mov
cmp
add
xchg
sub
scas
or
cmp
push
outsl
push
or
add
add
adc
xchg
sarb
add
test
sbb
inc
push
cltd
push
xchg
rcl
outsb
mov
scas
sub
xchg
les
loopne
fs
push
pushf
jg
fsubs
and
cmp
push
ret
mov
dec
aam
and
adc
enter
fisttpll
loop
xchg
ret
aas
sub
repnz
push
insb
mov
push
fadd
les
push
mov
mov
push
adc
jns
or
adc
sub
outsb
flds
push
scas
mov
and
mov
loope
cld
movsb
xchg
add
jg
and
sub
enter
xchg
xchg
pop
lds
imul
ss
bound
and
jmp
xchg
test
ss
stos
cld
sbb
ror
and
add
xchg
enter
push
fbld
cs
add
xor
iretw
or
cmp
lods
jge
or
movsl
cmp
int
cs
aam
addl
mov
pop
xchg
sub
ja
add
sbb
bound
sti
xor
push
push
repnz
pop
sub
icebp
pop
sbb
fadds
xor
inc
dec
mov
cmp
aaa
mov
pop
xchg
lods
mov
cmp
push
xor
std
mov
xor
mov
add
shlb
xchg
js
in
jne
clc
push
push
inc
jmp
aam
bound
stos
add
imul
fwait
sub
enter
lret
cmp
subl
adc
push
push
cli
fnstenv
jnp
xchg
mov
rcrb
addb
sub
mov
cmp
jle
mov
ficompl
push
popa
outsl
imul
mov
or
bound
mov
dec
movsb
pop
pop
add
add
into
fwait
add
mov
lcall
add
inc
stos
mov
or
mov
pusha
push
mov
leave
jl
push
cmpsb
xchg
scas
push
arpl
cmp
adc
int
cltd
mov
add
inc
fists
sub
sti
adc
inc
shll
jb
dec
push
ret
lret
mov
add
pop
cli
lret
add
sub
xor
sub
push
pop
loopne
xor
or
das
push
daa
dec
dec
inc
stos
pop
sub
fldcw
scas
add
xchg
nop
cltd
add
adc
mov
ret
mov
lods
bound
mov
sti
pushf
scas
push
lea
fisubl
es
sub
push
jae
inc
addl
movsb
cmp
pop
add
lea
push
notb
lea
ret
adc
sub
mov
and
inc
sub
add
jl
test
out
mov
pop
sarb
in
inc
out
in
fildl
add
das
mov
add
lods
sub
out
fbstp
fisubs
dec
jbe
mov
test
cmc
mov
mov
cmc
or
mov
push
andb
ficompl
mov
sub
ficoms
sub
inc
or
push
mov
or
out
xchg
xchg
mov
into
fdivrl
out
lock
sub
jns
mov
pop
mov
test
es
sahf
cmpsl
cli
mov
pushf
sub
xor
test
sbb
cmp
mov
pop
les
cs
leave
jp
pop
adc
ds
repz
cmp
add
aam
lock
or
jne
in
test
inc
rcr
das
add
add
in
mov
push
xchg
std
js
xchg
xchg
int
mov
jae
jl
and
stos
nop
push
xchg
lret
jmp
sub
lods
mov
iret
add
add
inc
out
aas
mov
shrb
add
add
and
or
inc
sbb
dec
adc
lds
and
aaa
loop
cmpsb
scas
out
imul
mov
mov
or
push
jmp
add
lods
add
adc
fstps
bound
sub
adc
mov
sub
lret
pop
stos
in
jle
xchg
icebp
lea
out
xor
shrb
push
je
rorb
arpl
mov
testb
cltd
jle
xchg
ret
stc
sub
jmp
sub
xorl
dec
popa
cltd
sbb
jae
mov
ljmp
and
outsl
mov
mov
pop
inc
add
cmp
mov
daa
stos
cmpsb
dec
dec
aam
jge
ficomps
cwtl
jle
xchg
cmp
and
jl
xchg
and
mov
aad
pop
pop
push
shrl
dec
dec
mov
fs
inc
ja
inc
add
mov
xchg
js
les
cs
adc
je
add
add
add
bnd
dec
leave
and
xor
add
add
mov
sub
fldcw
ret
frstor
nop
jae
jmp
mov
inc
stos
jl
sbb
out
pop
mov
add
fidivs
out
push
nop
fimull
sti
out
jbe
xor
sbb
jmp
retw
sub
mov
xor
or
ret
test
test
out
ljmp
push
lock
pop
out
adc
push
dec
rcl
cmpb
fcmovu
inc
insb
pop
loope
out
inc
imul
arpl
testl
xchg
pop
jge
jno,pt
mov
add
rep
or
cmpsb
inc
leave
pop
movsb
mov
call
orb
jae
movsl
add
pusha
test
in
ror
fisttps
xor
push
pop
out
popl
pop
or
daa
cltd
pop
mov
mov
enter
or
scas
rcl
sti
dec
clc
iret
shrl
add
in
out
ja
filds
data16
or
add
push
scas
pop
divb
ret
popf
or
inc
sub
sti
pop
mov
push
fs
mov
xchg
pop
nop
xor
mov
push
sahf
xchg
sbb
sbb
push
pusha
adc
fmul
xorl
inc
pop
lret
add
dec
adc
rcrb
jbe
mov
sub
sub
pop
cwtl
pushf
push
inc
push
movsb
sub
add
sbb
imull
repz
callw
rol
stos
add
or
cmpsl
xor
aam
xchg
enter
push
movsl
mov
nop
and
sub
loopne
nop
and
pop
jmp
int3
test
out
cmp
mov
mov
ret
mov
mov
out
xorl
sub
scas
jge
test
les
outsl
in
insb
inc
add
test
jbe
add
scas
test
in
inc
push
or
xor
add
popf
aad
sbb
push
imul
repnz
cli
sub
das
out
lret
scas
psubb
outsl
push
cmp
jecxz
ljmp
scas
std
mov
and
mov
call
cli
jb
sbbb
aas
scas
lods
iret
mov
jmp
in
rcrl
mov
pop
jne
mov
sub
push
fbld
mov
add
shll
dec
adc
xchg
mov
cmp
xchg
lock
dec
das
pop
dec
jbe
lret
xor
andb
xchg
xchg
push
cltd
inc
mov
ficompl
icebp
mov
push
movl
and
cmpsl
shrb
nop
roll
adc
jae
push
pop
repz
in
xchg
test
shlb
mov
mov
test
mov
scas
scas
test
pop
es
jmp
jecxz
mov
push
mov
push
mov
rcll
sub
add
mov
jg
neg
pop
daa
inc
fcoms
pop
xlat
hlt
or
add
mov
dec
xchg
pushf
mov
rcll
mov
cmp
fistps
imul
ret
push
shlb
sub
mov
int
sbb
sub
pop
popa
out
adc
or
inc
dec
aas
pop
shll
and
sti
dec
xchg
jp
addr16
adcw
loope
xor
clc
dec
cvtps2pd
and
jmp
popa
xlat
sbb
dec
cmc
jno
loope
pusha
add
notb
inc
cltd
jecxz
in
gs
xor
fwait
and
mov
push
lods
sub
push
lret
inc
push
sub
xchg
push
xchg
rorb
inc
mov
push
sarl
clc
loop
xor
arpl
mov
sub
cmp
mov
popa
ja
xchg
xchg
sbb
adc
adc
data16
push
xor
mov
jbe
jbe
loopne
fmull
sahf
mov
iret
add
add
sti
jg
cmp
je
mov
add
jno
and
mov
cmp
inc
insb
test
add
mov
ds
push
paddd
inc
xchg
pop
out
je
js
xchg
push
repz
in
fldt
lahf
fwait
std
loope
xor
push
dec
cmp
mov
cltd
fs
adc
or
cmp
icebp
clc
xor
movsl
mov
rcl
push
loop
sbb
and
adc
andb
jg
out
mov
mull
ret
cli
movsl
push
insb
mov
int3
sbb
test
pop
adc
pop
stos
sub
sbb
push
cmp
fwait
inc
sahf
cld
cs
inc
orl
gs
jno
jl
das
mov
dec
xor
push
pop
int3
stc
cwtl
cmpb
daa
ficompl
cmpb
iret
addb
dec
pop
add
iret
push
adc
add
add
jnp
fstp
fcompl
arpl
js
or
add
std
in
outsb
mov
int3
pop
mov
shll
and
es
dec
push
jo
aaa
xchg
pop
push
subb
sbb
sub
bound
mov
in
xor
arpl
and
loop
push
or
ljmp
or
faddl
inc
js
push
imul
insl
iret
repnz
lret
xor
test
pop
loope
cmp
or
fldenv
pushf
scas
push
test
imul
mov
lret
add
and
out
mov
mov
add
nop
lahf
xor
and
cmp
sbb
dec
testl
jbe
into
xor
mov
rcl
lret
into
xor
inc
out
jb
pop
or
sbb
mov
cs
rclb
movsl
push
adc
mov
mov
jmp
xchg
dec
mov
fstpl
std
fisttpll
test
inc
ficomps
mov
add
mov
jno
std
outsl
mov
add
or
imul
add
add
cwtl
cmp
stos
adc
jle
fdivrl
mov
cmp
pop
adc
mov
stos
sar
pop
bound
cmp
jmp
loop
adc
in
pop
dec
sbb
push
xor
or
cmp
xor
mov
lock
push
fcmovne
or
pop
sub
xlat
push
dec
test
ds
fcmovu
sub
jae
out
imul
adc
inc
inc
js
stos
shl
pop
dec
leave
xor
adc
shlb
lret
outsb
frstor
sub
xchg
jbe
cmp
rorl
rcll
iret
enter
mov
imul
push
das
in
push
xor
leave
das
fstpt
jecxz
sub
test
dec
pusha
push
add
es
jbe
stos
adc
incb
jl
stos
idivb
out
test
mov
dec
xlat
xchg
rcl
dec
add
pop
pop
and
add
add
clc
fisubl
fcomip
add
add
jmp
fnsave
sgdtl
add
cmpb
cld
pusha
push
outsl
adc
mov
insl
dec
adc
dec
insl
hlt
ljmp
pop
xor
call
mov
pop
sti
hlt
mov
lods
inc
xchg
pop
and
inc
mov
push
xchg
scas
call
dec
sbb
fwait
jmp
into
mov
rorb
xor
mov
enter
pop
nop
and
int
jne
add
mov
mov
sub
jns
push
dec
adc
sub
dec
mov
xchg
mov
cwtl
sub
adc
adc
sbb
pop
push
add
shlb
data16
mov
out
pop
js
in
ret
dec
loope
and
lock
jp
mov
inc
fldcw
xchg
in
add
mov
xchg
jp
ficompl
dec
mov
xchg
sub
out
mov
test
fsubrs
test
pop
and
pop
pop
push
xor
xchg
das
and
mov
stos
add
add
xor
test
push
mov
or
add
add
jl
fldcw
mov
pop
dec
jl
jo
push
cltd
push
xchg
rcll
ret
mov
std
jge
insl
sbb
insl
jg
lahf
xchg
imulb
lcall
push
popf
dec
pop
into
lds
cmp
sahf
and
insb
movsb
in
pop
cwtl
mov
mov
mov
int3
jmp
sti
dec
leave
pop
mov
insb
or
or
pop
and
dec
fs
nop
mov
fnsave
ret
shrl
and
push
rorb
push
mov
fwait
adc
out
subl
sbb
fmuls
mov
mov
popa
stc
test
fisubrs
out
fnstenv
pop
xchg
fs
mov
enter
or
loope
xchg
call
adc
mov
and
mov
jbe
fildl
sbb
pop
out
lods
div
sub
movb
add
dec
cli
inc
jg
int
xchg
lods
or
aam
inc
adc
add
add
jne
mov
movsb
imul
rol
pop
mov
movsl
push
pop
mov
jae
pop
mov
jp
test
xor
add
repz
xchg
in
add
ret
pop
xchg
fsts
mov
cld
push
and
bound
test
rolb
xor
insl
mov
test
adc
push
in
iret
xor
cs
inc
fsubl
sub
jmp
ja
adcl
sub
mov
rcrl
xchg
push
iret
loop
cltd
movsl
out
add
push
aaa
pop
jb
cmp
or
xor
jp
cmpsl
rolb
jo
mov
push
inc
cmc
jmp
adc
dec
inc
das
lahf
pop
fisubs
mov
test
bound
pop
push
pop
jnp,pn
push
clc
push
out
lcall
add
addr16
outsl
lahf
pop
daa
xchg
mov
sub
push
pushl
jne
jge
addb
add
jb
add
add
xchg
std
cmp
jle
fistpll
ss
shrl
pop
adc
add
out
test
cmpb
push
push
jns
push
testb
shlb
testb
loopne
std
jge
and
push
addl
sbb
sub
mov
loope
xor
fstl
sub
push
jp
inc
jle
fbstp
rcll
dec
cmp
cmp
mov
leave
mov
aam
ja
and
test
cld
xor
out
sbb
es
scas
dec
das
adc
std
repnz
rorl
and
xchg
je
dec
lcall
icebp
or
pop
sar
xor
hlt
iret
push
cmpsl
xor
js
insb
push
pop
fildll
pop
add
mov
fcomip
lock
xchg
std
call
sbb
cmc
and
sbb
dec
adc
je
fistpll
fistpl
dec
mov
movsl
outsb
bswap
inc
and
aas
ds
mov
mov
push
push
or
dec
or
add
add
iret
xlat
ficompl
inc
mov
adc
add
roll
mov
jecxz
repz
addr16
inc
out
or
cmp
mov
or
repz
add
or
out
jne
jne
cmp
push
mov
pop
and
into
sbb
adc
int
test
in
jg
sbb
mov
dec
mov
imul
push
jp
mov
xchg
aas
sbb
fisttpll
lea
xchg
inc
stc
insl
insl
mov
pop
cmp
cmp
xor
pop
dec
mov
mov
mov
mov
pop
icebp
cmpsl
adc
xchg
push
jle
pop
aam
rclb
out
jmp
jp
and
pop
outsl
imul
pop
shl
mov
mov
sti
movsb
xor
dec
mov
xor
inc
xor
iret
dec
popaw
nop
push
mov
arpl
push
clc
insb
sub
iret
xchg
cltd
inc
notl
test
test
add
add
sub
iret
outsb
jmp
push
test
enter
adc
add
lahf
outsb
xchg
xchg
daa
mov
outsl
jb
sbb
xlat
int3
dec
ljmp
mov
cmp
nop
mov
sub
shr
shl
cmpl
out
fnstenv
aad
in
xor
mov
dec
mov
std
cld
sub
clc
pop
jae
cmp
lret
mov
sbb
mov
fcmovb
test
lcall
fstl
js
or
int
cltd
dec
fdivs
inc
lcall
ss
mov
test
cmp
jle
fdivl
mov
loop
cld
shr
in
fldcw
inc
add
xor
mov
sarl
fsubrl
arpl
std
xor
fdivr
scas
mov
sbb
movsb
dec
popa
mov
xor
and
sub
nop
mov
movsl
xlat
das
imul
aad
popf
imul
ret
add
sbb
std
sbb
stc
cld
or
lods
xchg
or
add
mov
mov
or
icebp
push
lods
xor
out
int3
jmp
push
enter
jns
aaa
arpl
aad
jae
pop
inc
adc
clc
mov
outsb
cli
jb
lcall
lock
pop
shrl
add
nop
sub
dec
jbe
mov
mov
addr16
sbb
push
pop
xchg
inc
and
cmpsb
dec
fst
or
aam
and
jle
sub
movsl
jne
or
mov
jle
call
jge
mov
rorb
jb
mov
int3
adc
sbb
test
jge
lods
dec
rsqrtps
ss
je
sbb
sub
out
scas
pop
jp
loop
sbb
pop
inc
adc
pop
lret
cs
int3
adcl
shrl
dec
mov
test
mov
pusha
lret
dec
out
cmpsl
idivb
push
icebp
jle
inc
pop
dec
xor
add
add
pop
test
scas
repz
cld
adc
loop
js
push
add
add
sbb
pop
jecxz
pop
stc
xchg
dec
shll
sub
iret
mov
mov
push
cmc
sarb
xchg
sub
bnd
sar
mov
inc
mov
pusha
lods
xorb
in
add
hlt
sub
negl
mov
xlat
push
test
stos
push
add
ljmp
clc
xor
sub
cmc
and
inc
mov
imul
cmpsl
jg
ds
sbb
sub
enter
pop
xor
outsb
xchg
orl
out
xchg
cld
push
andl
pop
outsl
insl
in
adc
int3
mov
dec
push
mov
into
icebp
push
sbb
or
and
pusha
stos
inc
pop
sahf
loop
pop
fcomps
jmp
mov
pop
lret
adc
outsl
jmp
cmp
arpl
adc
jp
and
or
or
lods
scas
fdivrp
loop
add
add
dec
pushl
aam
xor
pop
add
add
and
sbb
sub
fdivrs
enter
mov
out
andl
xchg
xchg
push
mov
cltd
xchg
fcmovnb
fwait
xchg
bnd
ja
test
fsub
jno
mov
mov
lods
adc
ja
inc
xchg
sbb
iret
mov
adc
mov
cmp
push
out
pop
icebp
inc
dec
xor
fiaddl
push
aam
cwtl
sbb
push
mov
mov
adcb
jnp
mov
icebp
lcall
daa
pop
mov
pop
stos
mov
mov
mov
xor
inc
fstps
xor
sub
add
scas
loop
mov
jnp
xor
sti
cli
cwtl
jecxz
push
xor
jno
pop
xchg
xchg
push
and
int
into
xchg
jbe
cmp
cmpsb
pop
add
add
inc
ja
pop
aas
dec
push
scas
cmp
add
xchg
push
insl
jge
add
xchg
dec
imul
popa
movsb
push
outsb
fcoml
ret
in
cld
mov
dec
imul
shrb
insl
xlat
shrb
aas
and
mov
or
mov
and
aad
mov
inc
sbb
add
lds
mov
inc
testb
in
cmpsl
mov
loop
sahf
out
out
ret
xchg
sub
jne
xchg
jne
loop
cwtl
mov
mov
mov
fmuls
in
lods
enter
push
leave
subl
popa
lods
xlat
lds
bound
and
lock
fldt
ja
nop
or
dec
es
adc
mov
inc
xor
jae
pop
cltd
and
out
push
xor
mov
push
jo
mov
jle
mov
push
mov
popa
add
dec
add
add
xchg
jae
ja
div
mov
movsl
sahf
pop
cmp
add
add
inc
stc
fs
aad
sbb
dec
cmp
lods
lods
sbb
push
mov
filds
pop
sahf
push
imul
inc
enter
imul
or
bound
in
loop
imul
test
test
es
in
inc
cld
xchg
aaa
jbe
adc
xor
mov
test
out
and
popa
sub
repnz
imul
into
mov
and
push
outsb
test
cli
xlat
jmp
clc
mov
cmp
xchg
inc
lods
test
loope
rorl
test
sti
push
xor
imul
inc
aaa
movsl
fstl
jge
mov
cli
mov
stos
sahf
int3
call
js
repz
push
pop
pop
int
add
in
jle
dec
fdiv
sub
inc
cld
push
cmpsb
aas
dec
mulb
adc
or
in
push
sti
rcrb
rcl
inc
lahf
jne
push
je
mov
mov
pushf
cmp
add
add
cli
std
jg
push
pushf
dec
jecxz
cmpb
add
add
pop
sbb
dec
sub
sub
sbb
ljmp
cmp
subb
das
mov
and
mov
mov
mov
mov
push
pop
jp
push
and
rolb
adc
mov
outsb
test
push
aad
insl
aam
nop
xor
cwtl
rorl
icebp
jp
and
add
scas
scas
loop
mov
mov
pop
in
test
jl
push
lret
inc
out
pushl
mov
mov
ljmp
sti
dec
fmull
fcomps
jnp
imulb
adc
pop
inc
adc
insl
sti
ret
jge
js
mov
pop
aaa
and
xorl
repnz
xor
test
or
jg
ret
ret
inc
scas
fists
inc
and
inc
mov
movsl
mov
test
cmp
repnz
xchg
pop
mov
xchg
dec
mov
dec
pop
imul
mov
adc
or
adc
add
testl
incl
sbb
dec
stc
int
inc
sbb
add
stc
jns
mov
in
cmp
fdivrl
xor
fisttps
jno
pusha
and
jbe
pop
push
adcl
clc
dec
shrb
lcall
call
add
mov
test
movsb
fld
mov
addl
xchg
jge
loope
sub
dec
pop
jno
mov
in
push
inc
fwait
insl
aam
scas
mov
daa
push
inc
xor
ud0
or
scas
in
xorl
adc
leave
dec
int
mov
loopne
or
shll
inc
pop
imul
adc
movsl
movsl
add
jp
fsubrs
rorl
push
and
mov
mov
xchg
push
add
test
jae
xor
bound
dec
sarl
imul
pop
ss
movsb
and
xlat
stos
int3
scas
out
bound
push
es
jg
pop
or
xor
imul
add
std
lods
xchg
fstpl
push
repnz
gs
loop
fstl
dec
push
inc
mov
fildll
decl
lahf
pop
leave
sub
pop
sbb
adc
in
jp
push
mov
jnp
test
or
sti
fimuls
dec
sub
cld
js
or
dec
xchg
sbb
iret
jno
std
mov
ja
int3
push
xchg
mov
or
mov
insl
push
push
jne
sbb
repz
push
ret
jns
mov
dec
mov
pop
mov
mov
push
pop
lret
out
in
mov
mov
bound
sti
icebp
ret
add
xor
js
push
sub
cs
in
push
jno
cli
cs
add
rcl
inc
out
push
pop
sub
sahf
lea
jecxz
dec
sbb
mov
sbb
scas
jl
sbb
scas
and
dec
in
jb
repz
cmc
lods
xchg
add
add
or
dec
push
cmp
sbb
add
push
xor
jecxz
fldenvs
insl
jg
mov
inc
pop
outsb
adc
mov
mov
scas
das
lds
sbb
inc
shl
pop
in
into
cmpsl
shlb
stos
push
packsswb
mov
inc
hlt
int
add
movsl
jge
jae
push
adc
sbb
mov
sub
popa
in
sbb
cmp
push
or
mov
cmpsl
int
sbb
cmc
pop
out
jbe
dec
push
adc
or
mov
add
sub
jb
es
mov
xor
dec
dec
cltd
fdivrl
mov
push
and
xor
or
std
in
pop
shl
imul
lds
adc
jecxz
enter
jl
sahf
add
sysexit
jmp
out
sub
sub
shl
cltd
lds
clc
movsb
add
add
stc
lods
xor
mov
movsb
cmp
add
add
mov
sbb
xorb
lods
xor
jecxz
fucomip
rclb
les
jge
sbb
aas
push
imul
call
in
xchg
pop
sub
jnp
mov
fcoms
push
sub
adc
cs
les
jecxz
mov
jp
cmp
or
xchg
lcall
shrl
dec
icebp
push
push
mov
clc
sbb
in
jne
outsb
and
mov
jle
lret
stos
jle
je
mov
pushf
adc
fucompp
xchg
dec
cmp
fists
dec
lcall
jbe
mov
jmp
jp
sub
pop
push
shll
fs
push
mov
xor
mov
or
popa
aas
pushf
movl
cmpsb
mov
dec
dec
mov
decb
out
dec
lds
das
leave
mov
dec
push
iret
pop
add
adc
add
add
ficoms
stos
sbb
call
mov
pop
pop
add
add
mov
je
adc
xchg
fs
mov
cwtl
rorb
clc
xchg
mov
push
sub
popf
dec
ret
inc
pop
jl
pop
jp
call
sub
stos
test
and
popf
inc
in
in
loop
sub
mov
scas
repnz
and
fildl
fisubrl
aas
rolb
xor
pop
lock
cmp
push
push
mov
cwtl
ffreep
popa
movsb
fmul
add
sub
xchg
movsl
cmp
sbb
imul
mov
scas
out
insl
cli
pop
and
inc
addr16
fisubl
stos
fnstsw
scas
push
mov
cmp
mov
mov
insl
push
xchg
fidivl
mov
loope
ss
cmp
mov
mov
scas
lds
in
in
jecxz
rorb
adc
and
push
fsubl
jmp
notl
add
in
out
stos
jge
or
push
xchg
pop
and
add
aas
js
cmp
adc
popa
cmp
push
pushf
out
ds
into
sub
in
sbb
mov
in
fildll
popa
iret
pop
dec
lret
mov
sub
push
pop
insb
or
cmp
mov
jle
fisttps
mov
push
ja
fdivrs
lret
insl
mov
xchg
push
ret
sahf
clc
xor
push
and
sbbl
mov
sub
int
daa
push
mov
leave
pop
shrl
int3
cmp
insl
jb
popa
movsl
aad
dec
aad
or
cmp
push
cmpsl
scas
sbb
xchg
mov
adc
sub
dec
xchg
stos
push
push
sbb
xchg
ret
cmp
aaa
and
push
xchg
psrlw
mov
fs
outsl
in
mov
pop
mov
inc
jg
mov
dec
sbb
fdivl
lds
xchg
lcall
sti
pop
or
dec
or
out
xchg
iret
push
aas
enter
bound
add
add
push
mov
les
inc
pop
cltd
pop
insb
insb
xor
and
sbb
or
mov
sbb
dec
stc
and
jmp
pop
xor
fisubrl
out
cmpsl
sub
sub
adc
push
sbb
fcompl
mov
lods
stos
sti
jo
dec
lods
sti
push
inc
cld
fimull
pop
inc
xchg
imul
bound
addr16
ljmp
adc
sub
loopne
xchg
inc
cmp
call
mov
scas
push
adc
sub
andb
lods
cmc
inc
cmp
jmp
push
mov
mov
stos
sub
or
out
push
shrl
aas
cmp
stos
cmp
data16
or
push
inc
jno
and
imul
lods
fsubs
or
jmp
neg
lock
sbb
xchg
and
shrl
xchg
cmp
jge
bound
insl
mov
add
add
in
add
cmp
out
loope
jns
roll
ja
and
add
in
test
or
icebp
sar
pusha
adc
jno
and
insl
push
add
mov
fcmovu
dec
and
outsl
aas
mov
scas
mov
shl
ljmp
pop
mov
out
xchg
dec
push
jo
add
adc
dec
xor
stos
popf
repz
int
mov
enter
sbb
push
jns
mov
jl
push
insl
cmpsb
in
lds
adc
mov
fdivs
jo
push
mov
pushf
ljmp
mov
int3
or
pusha
sbb
add
addl
ljmp
inc
mov
push
mov
pop
mov
pop
inc
cmp
xorl
decl
or
in
int
arpl
outsb
fimull
mov
pop
movsl
or
pop
xor
inc
jge
daa
fwait
loopne
mov
cs
sub
add
add
lods
jg
push
mov
int3
sbb
add
sbb
mov
xchg
lret
add
mov
push
jae
mov
imul
mov
dec
popf
hlt
and
jae
mov
adc
pop
push
cmp
push
mov
fiadds
and
lods
sbb
cmp
incb
pop
enter
loope
ja
mov
jp
scas
fidivs
sarl
sahf
xchg
bt
in
outsl
mov
sbb
jb
mov
jb
cltd
cld
call
insl
jno
mov
push
ficomps
aas
sbb
data16
cli
pop
sub
fstpl
pmaddwd
push
jge
lret
push
fcomps
js
in
es
stos
imul
inc
sti
dec
add
repnz
dec
push
sbb
negb
inc
or
mov
fistps
mov
cltd
sbb
pop
xchg
cmp
cmp
jg
add
add
jg
cld
ret
add
sub
jno
add
add
out
mov
cld
into
pushf
jg
ds
cmp
cmovl
orb
xlat
or
daa
jge
jl
in
insl
adc
pop
pop
dec
dec
xlat
xchg
repnz
das
dec
push
scas
scas
js
int3
inc
xor
fidivs
addl
outsb
fsubl
lahf
daa
movsb
jmp
dec
mov
mov
inc
negl
lcall
hlt
mov
insl
in
pop
addl
outsl
dec
lea
out
push
fmuls
das
push
mov
test
xchg
cmp
mov
xchg
stos
push
mov
jl
sbb
adc
ss
repnz
pop
stos
adc
cld
xor
rcrl
jmp
add
mov
adc
cmp
push
xchg
pop
or
fimull
andb
xchg
sbb
divl
ds
xlat
jo
out
in
nop
mov
inc
mov
popf
xlat
push
ret
mov
iret
mov
mov
add
add
adc
jg
push
test
cli
pop
dec
push
mov
inc
lahf
push
jmp
mov
cmp
xor
mov
and
jns
xchg
nop
fidivrs
outsb
ret
xor
iret
inc
ljmp
mov
mov
adc
lret
jmp
pop
out
jne
xchg
mov
sub
enter
sti
stos
xor
mov
dec
dec
lcallw
sbb
xchg
mov
stc
sbb
jle
mov
jg
outsb
cmp
lods
lahf
mov
xor
fcmovnu
xchg
bound
adc
xlat
fisttpl
dec
jnp
in
lods
jb
sub
pushf
inc
imul
mov
bound
jp
in
lds
movsb
mov
shll
fisubl
or
leave
lahf
sahf
mov
call
mov
pop
out
add
test
stc
xor
jnp
add
fsubp
ja
cwtl
arpl
mov
out
fxch
jbe
js
add
or
jg
arpl
jo
sub
add
add
repz
mov
sti
dec
dec
or
mov
addr16
pusha
enter
stos
out
cli
movsb
inc
mov
or
inc
push
jbe
in
xchg
movsb
cwtl
shlb
int
lret
xchg
cld
and
or
mov
scas
and
xlat
push
xchg
jne
add
xor
xchg
add
stc
mov
popf
and
int
inc
mov
adc
fistpl
ss
cmp
fldenv
arpl
jns
mov
adc
rcll
sarl
jno
fwait
xor
cmp
add
mov
mov
dec
mov
movsl
cmp
nop
mov
cmp
shl
mov
fldcw
lds
mov
fistpl
inc
or
push
mov
scas
push
cltd
sti
mov
movsb
popa
hlt
push
inc
sub
cmp
xor
jbe
xor
ds
arpl
pop
aad
pushf
out
adcl
lcall
shlb
cli
clc
cli
clc
sarb
sti
mov
mov
add
cmp
out
pop
out
cmp
fstl
imul
jb
cmp
cld
hlt
std
ret
out
movl
sbb
imul
fiaddl
sub
rolb
add
mov
ret
in
jb
loop
xor
xor
mov
xor
jle
in
lret
mov
pop
cmp
enter
into
in
adc
aad
or
xchg
jnp
into
and
repz
mov
mov
pop
cmc
sbb
sbb
ja
or
xor
sbb
mov
notl
or
icebp
mov
or
cmp
pop
int
mov
mov
std
mov
dec
sbb
iret
scas
adc
icebp
sub
or
ficoms
or
add
stc
sub
repz
adc
out
cmpsl
fcomp
jbe
shll
mov
test
imul
mov
clc
ja
sub
add
cmp
pop
xchg
flds
test
dec
scas
cld
and
nop
mov
and
cmpsb
jae
jecxz
pop
ljmp
mov
sahf
or
pop
test
in
cwtl
cmp
adc
lods
push
push
cmc
leave
mov
cmp
xchg
movsb
mov
loopne
dec
sub
adc
mov
sbb
cmpsb
pop
outsl
bound
add
and
push
leave
xor
mov
roll
sbb
xchg
push
mov
shll
ss
roll
and
cltd
mov
std
or
push
push
jl,pt
sbb
and
fs
jne
cli
push
mov
xchg
or
cmpsb
jne
movsb
rcr
cs
cli
sub
cli
mov
dec
and
sahf
js
pop
jecxz
stos
insl
outsb
mov
in
fmulp
xchg
push
lods
pop
lods
lret
loopne
aad
mov
push
std
lahf
movsl
add
add
es
data16
insb
daa
mov
lret
xor
add
insb
jge
inc
mov
dec
mov
push
scas
loope
cmp
jns
pusha
mov
addb
shll
hlt
add
pushf
xchg
seto
push
inc
stos
js
aas
jb
sbb
and
or
sub
incb
ja
and
jbe
jne
test
pop
addr16
int
jae
push
insb
adc
jmp
mov
dec
mov
ds
sbb
pop
add
lock
xchg
mov
xor
mov
mov
xor
sbbb
test
adc
mov
pop
iret
cmpsl
pop
lahf
fcomps
scas
popf
sar
cmpsb
xor
clc
cmp
push
insb
inc
or
mov
into
jmp
pop
or
enter
mov
pop
mov
jle
daa
push
lret
pop
lret
xorb
push
mov
adc
test
cmp
loop
outsl
jbe
xchg
arpl
popf
and
or
push
lds
dec
enter
movb
add
dec
mov
imul
aam
add
push
pushf
das
imul
in
and
arpl
push
movsl
stos
repnz
aas
pop
js
mov
fisubrs
xchg
adc
mov
ficoml
or
das
inc
ret
mov
push
lds
into
iret
pop
int3
outsb
mov
xor
lock
loope
lds
cmp
cli
stos
xchg
or
dec
and
sbb
fdivrp
mov
adc
fmull
fcoms
jo
cmpsb
add
jb
xor
test
inc
jno
repnz
adc
mov
adc
cmp
adc
idiv
jge
xchg
sub
dec
cmp
scas
inc
ffree
mov
sbb
pop
xorb
stos
das
jge
sahf
comiss
add
ss
lahf
lods
xorl
cmpsl
sar
fsubrl
and
mov
lods
cli
xchg
pop
rcrb
mov
ja
xorb
inc
scas
fsubr
lods
pop
aaa
sarl
add
and
push
sti
cmpsl
enter
bound
mov
add
out
int
xchg
pop
out
mov
call
nop
shrb
xchg
adc
pop
loope
js
repz
push
fcmovnbe
hlt
das
push
sbb
mov
adc
push
mov
movsb
jle
xchg
scas
loopne
pusha
mov
or
ss
add
shlb
xchg
sarl
std
push
push
mov
push
cmpsl
aad
dec
ret
loopne
mov
or
mov
jl
into
xchg
cmp
rorl
dec
mov
je
addr16
loopne
mov
ss
mov
das
adc
cmc
xchg
cmc
mov
pop
xor
std
mov
and
mov
mov
mov
sahf
cli
imul
std
scas
int
insl
xor
push
int
aas
dec
jne
dec
out
js
test
push
and
adcl
clc
je
les
push
mov
popa
mov
adc
sahf
or
mov
sbb
add
add
mov
std
mov
dec
push
lret
addr16
sub
add
icebp
es
pop
push
mov
xlat
jb
imul
jl
js
inc
mov
jo
mov
dec
daa
fs
scas
xchg
neg
jb
loopne
sbbl
jmp
sbb
push
sbb
out
mov
mov
mov
jb
jb
push
pusha
cld
xchg
adc
mov
mov
ss
rcrl
sbb
lods
in
leave
mov
movsb
out
sti
mov
dec
xchg
inc
popf
xchg
xchg
fldenv
dec
adc
aaa
test
je
pop
push
test
ret
sbb
sub
jbe
sub
out
mov
scas
xor
insb
nop
xor
jmp
lar
and
add
or
adc
sbb
int3
xchg
inc
cld
lret
or
hlt
adc
jo
andl
push
bound
and
or
mov
stos
add
jge
adc
sbb
mov
add
lds
xchg
and
inc
and
lcall
add
add
jl
mov
jb
mov
dec
add
aam
out
rolb
mov
mov
inc
and
or
and
pop
mov
ret
cwtl
in
mov
sub
xchg
sub
or
lahf
push
mov
inc
dec
rcrb
dec
mov
stos
inc
push
pushf
add
add
cmp
test
sbb
push
push
jecxz
jnp
mov
lds
ret
inc
xor
and
jo
xor
in
std
xchg
out
test
or
lahf
pop
je
arpl
sub
mov
sub
adc
daa
test
sub
fimuls
jge
stos
push
cwtl
iret
in
or
lods
sahf
jmp
pusha
in
xor
add
add
scas
es
clc
imull
addr16
or
pop
dec
iret
jg
pop
pushf
imul
push
pop
data16
ds
cmpsl
jae
add
add
add
xchg
ficomps
cmp
lahf
pop
mov
add
add
test
sub
push
push
nop
das
mov
fcmovnbe
cmp
push
scas
jae
xchg
xchg
xchg
pusha
push
mov
jecxz
popa
xchg
xchg
stos
frstor
stos
xchg
out
rcrb
arpl
ret
rcrb
ja
lcall
dec
lods
jnp
std
call
mov
mov
jnp
pop
cltd
stos
add
add
lret
and
mov
ja
xlat
je
ja
lret
cmp
mov
jmp
rcrl
mov
jp
mov
mov
mov
insb
flds
inc
jb
push
or
fnclex
rorl
ljmp
and
mov
pop
inc
jbe
adc
push
insl
aam
pushf
movsb
movsb
scas
mov
push
mov
xor
aad
hlt
push
push
test
pusha
ds
mov
aam
inc
sti
ss
leave
pop
int3
jne
jecxz
bound
sub
addr16
sbbl
add
add
lods
xor
mov
cmp
cwtl
or
add
insl
es
in
and
xor
add
adc
loope
cmp
pop
fldenv
or
mov
mov
mov
pop
loop
imulb
dec
lea
mov
or
mov
inc
inc
jp
daa
imul
in
int3
push
out
sbbl
jns
xor
stos
repnz
xlat
jecxz
push
push
fdivr
mov
cld
negb
inc
dec
es
repnz
pop
xchg
inc
push
leave
jp
jne
dec
pushf
mov
xchg
std
push
dec
pop
lcall
dec
out
xchg
test
adc
xor
pop
push
push
and
add
inc
mov
xor
cmp
jbe
pop
fwait
mov
or
lock
fs
jecxz
dec
sub
mov
stc
jp
add
jae
cmpsl
stc
mov
push
or
add
add
lock
mov
or
mov
xor
add
cmp
push
mov
sub
sarl
xchg
and
jne
jnp
pop
cmp
mov
xchg
mov
sub
mov
xor
call
shll
adc
or
cmp
std
lret
or
xlat
jecxz
data16
inc
into
movsb
xor
aaa
cmpsl
dec
loope
jmp
dec
sbb
fcoml
or
aas
adc
sbb
test
mov
pop
xor
jle
cmpsl
mov
add
jecxz
lods
stos
loop
andb
xchg
or
adc
mov
mov
cltd
xchg
pop
jecxz
lock
xor
mov
out
and
pop
arpl
push
and
add
jb
aad
cmpl
sbb
add
out
xlat
push
lahf
dec
rcrb
dec
fidivrl
mov
lea
gs
sbb
test
mov
adc
add
sub
sti
pop
jge
neg
hlt
add
xchg
add
add
or
mov
mov
mov
add
and
sub
sbb
into
xchg
fistpll
mov
in
je
jge
xor
in
sbb
in
push
fwait
fs
mov
pop
inc
and
lea
mov
xchg
inc
mov
sbb
pop
sub
push
inc
mov
pop
sti
push
stc
fs
add
mov
xchg
push
insl
inc
lea
xchg
add
add
push
cmpsb
das
dec
in
lea
xchg
mov
adc
pop
xchg
and
pushf
sahf
push
jle
sub
fdivr
jae
and
cmp
mov
les
insb
imul
dec
scas
push
rcl
add
fucom
pop
cmpsl
or
cmp
sahf
ljmp
xor
sbbb
pop
shrl
mov
je
cwtl
rcll
scas
movsb
sbb
insb
out
jae
lcall
add
add
fsub
std
in
popf
in
stc
jmp
mov
xor
add
gs
xchg
push
rclb
sbb
fwait
shlb
xchg
faddl
pop
dec
stc
ret
mov
inc
or
dec
xorb
orl
add
mov
mov
dec
or
mov
rcrb
sub
in
fisubrl
aas
arpl
xchg
lock
addr16
fidivrl
movsb
and
fxch
rcll
mov
nop
filds
fmull
push
lcall
xchg
xchg
mov
jnp
mov
pop
mov
loope
jle
xor
mov
out
push
adc
scas
sub
repnz
xchg
sbb
inc
lret
cli
ja
es
fcomps
mov
cmpsl
cmp
je
rolb
cli
cmp
addb
mov
lods
cmpsl
dec
add
fstp
cmp
cmpsl
lea
gs
and
jge
add
add
jp
jnp
sti
xchg
jle
jp
lods
sbb
xor
add
inc
enter
cmp
pop
pop
rorb
sbb
cmp
pop
addr16
adc
and
push
in
jg
lods
xchg
repnz
dec
push
arpl
xchg
pop
lods
mov
xor
jo
jecxz
ss
nop
pop
ja
xchg
jne
das
mov
xor
cmpsb
js
xchg
and
fistpl
ds
jge
jbe
std
push
add
jbe,pt
and
xchg
xchg
mov
adc
fwait
push
push
dec
ret
scas
out
leave
test
and
jmp
ret
and
out
scas
gs
mov
loopne
int3
inc
out
jb
es
xor
int
mov
xorl
mov
xchg
inc
sbb
jno
data16
adc
sub
aas
nop
and
jmp
inc
fucomp
sub
inc
jmpw
inc
roll
inc
repz
pop
push
int3
cmpsl
scas
pushl
ret
es
add
mov
and
aam
add
add
push
sti
decb
mov
enter
add
insl
dec
aad
jmp
cld
inc
fs
push
mov
lea
pop
lret
adcb
or
xchg
mov
push
xchg
orl
and
rolb
clc
arpl
mov
pop
cmp
cwtl
push
aaa
cltd
in
pop
dec
popa
aam
out
push
loopne
ss
or
adc
pop
mov
mov
les
lea
sub
sbb
in
pop
mulb
std
sbb
into
xchg
imul
jmp
push
adc
inc
adc
orl
ret
and
cmpsl
popf
mov
add
pop
push
ret
popa
sbb
into
adc
insl
lods
adc
and
loope
pushf
daa
iret
jne
dec
sub
je
mov
adc
xchg
and
mov
rorl
jmp
lds
enter
cmp
xor
xchg
call
adc
adc
cmpsl
push
mov
cwtl
add
pop
mov
add
add
cmp
xor
hlt
push
jae
fcmovb
xor
add
mov
enter
jnp
mov
outsl
imul
or
mov
cmp
dec
adc
test
lea
xlat
fs
fisubrs
push
or
inc
leave
add
lret
xchg
call
jnp
mov
dec
mov
icebp
jmp
in
enter
push
fmul
adc
cwtl
cmc
stos
xchg
dec
inc
mov
fs
cmp
mov
lcall
aaa
pop
xor
pop
lods
das
stos
repnz
xor
push
sti
adc
loopne
or
ds
adc
mov
dec
cmc
lret
stos
inc
outsb
js
push
sbb
xchg
ss
aad
orb
in
cmpsb
jmp
lret
xor
cmp
jb
mov
jns
aas
aad
lahf
arpl
adc
int
lahf
cltd
sahf
test
jnp
test
mov
or
adc
or
out
jle
fcmovu
call
inc
jo
pop
add
add
cmp
jge
stos
lea
shrb
push
mov
add
rcrb
inc
jne
pop
mov
push
jb
mov
pop
jle
dec
enter
dec
dec
push
out
jne
out
mov
inc
xchg
mov
mov
mov
pop
jo
inc
cmp
mov
sub
adc
repz
fadds
pop
or
mov
mov
xchg
in
sarl
lods
mov
cmpsl
mulb
call
mov
mov
mov
fxch
or
pop
sub
inc
sbb
adc
mov
outsb
hlt
push
add
pop
cmp
pop
sub
pop
mov
pop
fisubrs
jp
pop
lahf
enter
sub
mov
sahf
je
dec
mov
mov
mov
cmp
push
inc
sub
sbb
popf
mov
orb
sbb
adc
test
rorb
and
fcompl
xchg
inc
cmpsl
fiadds
add
divb
rclb
nop
lcall
aaa
add
add
hlt
pop
sbb
add
cwtl
push
add
sub
jmp
sbb
jmp
sbb
add
icebp
xor
xchg
cwtl
dec
jns
mov
mov
ljmp
inc
setg
xchg
ror
andb
push
shl
inc
ss
fcmovnu
icebp
push
xchg
je
roll
mov
push
icebp
shlb
jl
std
gs
fmull
xchg
sub
xchg
pop
push
mov
cli
pop
cmp
mov
mov
lret
pushf
sbbb
jl
data16
mov
jb
push
mov
xor
les
mov
mov
cmpl
cmp
cmp
movsl
outsb
or
inc
add
jmp
sub
mov
and
cmpsl
sbbb
jl
add
imul
add
add
jbe
idivl
or
mov
add
add
orb
lea
arpl
adc
mov
mov
shrl
pop
add
add
orl
les
sub
aaa
sarl
int
sbbl
cmp
out
push
jg
lea
sbb
in
mov
sbb
mov
lret
push
movsl
outsb
mov
lcall
or
ror
popa
fidivrl
mov
and
mov
xchg
std
mov
inc
xchg
test
cwtl
hlt
shl
movsl
dec
xchg
pop
inc
cmp
sub
maxps
arpl
jno
mov
add
jp
dec
enter
mov
out
scas
add
jecxz
xlat
dec
pop
jmp
mov
fildll
inc
jmp
mov
cmpsl
les
jge
inc
mov
add
outsb
sub
stos
fs
jmp
leave
aas
mov
cmp
add
xor
fildl
iret
sti
aas
fistpll
adc
sbb
andl
mov
mov
pop
sub
repnz
imul
movntq
dec
or
aaa
jne
movsl
or
ljmp
push
xchg
cli
in
stc
lcall
xchg
adc
sub
scas
jg
bound
call
xchg
popa
xor
mov
xor
bound
add
adc
std
fildll
divl
jnp
pop
jnp
std
dec
inc
insl
dec
fs
icebp
inc
add
fisubrs
fstpt
pop
xchg
cmp
stc
rclb
inc
loop
dec
sti
divl
pop
bound
pop
pmaxub
push
inc
scas
pop
jb
xlat
or
jae
pop
and
adc
mov
jmp
dec
pushl
xlat
sbb
cmp
bound
mov
ss
arpl
xchg
hlt
and
cmpsb
jmp
add
les
scas
fistpll
outsl
mov
cmp
add
mov
xor
pop
cmp
sub
xchg
adcl
push
int3
xor
pusha
mov
bnd
mov
add
push
les
frstor
shll
aaa
push
jl
rcll
dec
dec
cmp
xor
outsl
mov
xchg
pusha
adc
imul
xchg
aas
sahf
push
cmc
ja
ljmp
ret
pop
test
rcll
cmp
pushf
sbb
fistpll
mov
mov
pop
jmp
and
jge
and
lods
or
fnstsw
or
outsb
xor
cmp
mov
outsl
test
push
lea
pop
jp
arpl
xchg
adcl
pop
adc
and
adc
ffree
jecxz
jb
or
in
dec
push
add
fcomip
inc
sbb
jge
mov
mov
pop
daa
jno
fiaddl
add
sbb
jnp
jnp
cmp
movsb
push
sbb
test
add
test
add
add
loop
sbb
stos
xor
insl
mov
mov
inc
repnz
stos
shl
sahf
cltd
stos
and
out
pop
mov
cmc
push
outsb
jle
add
fwait
test
or
repnz
xchg
mov
test
das
scas
cmp
xor
adc
stc
cmpsl
loope
xor
pop
xchg
mov
movl
test
lods
adc
push
shl
dec
push
xchg
sbb
or
loop
add
jg
cmpsb
cmp
leave
aas
xlat
andl
out
inc
add
xor
adc
and
ret
out
pop
sbb
and
xchg
sbb
jle
or
sub
aad
mov
stos
test
jo
das
push
ja
inc
test
xchg
int
xor
mov
mov
ret
insb
add
cmp
push
rcl
fnstsw
dec
inc
xor
jecxz
mov
aaa
jb
sahf
and
mov
or
add
outsl
lret
mov
out
jmp
mov
add
add
das
fwait
xchg
stos
jp
push
daa
notb
cli
xchg
push
hlt
mov
and
mov
xchg
pop
imul
dec
lods
inc
jge
mov
scas
cmpsb
dec
sbb
inc
mov
lret
cmp
ss
mov
movsb
pop
lea
cld
sbb
sub
or
add
xchg
iret
into
mov
or
push
daa
data16
lret
adc
and
imul
xchg
dec
or
into
jns
sbb
iret
jo
jl
push
insb
js
sbb
aad
inc
dec
xchg
xor
and
or
mov
dec
sub
or
cmp
inc
cmpsl
lock
test
repnz
test
ss
or
sub
mov
out
push
arpl
xor
mov
mov
inc
mov
dec
mov
jbe
jns
fcmovnb
cld
pop
jecxz
and
dec
push
xchg
notl
dec
xchg
daa
and
rorl
cmc
xchg
add
add
repz
cmp
lods
repz
mov
mov
cmp
add
sbb
sbb
test
faddp
shl
pop
push
lods
shll
mov
stos
sbb
call
movsb
jbe
data16
add
inc
mov
push
ret
stos
leave
in
pop
add
xchg
cmp
add
ja
addl
test
add
sub
or
mov
clc
mov
cs
adc
mov
test
movsl
dec
rcll
fisttpl
aaa
xor
icebp
pop
sbb
dec
jp
popf
ret
outsb
mov
into
dec
pop
andl
fildl
addr16
pop
sub
jg
add
loop
pop
andb
ret
add
int
xor
adc
or
jp
ret
adc
lock
xor
lods
ret
aam
loope
pop
pop
incb
jne
rolb
sub
fisttpl
mov
sub
cmpsl
out
cmp
out
clc
push
pusha
test
repnz
neg
fstps
xchg
in
pop
add
add
daa
push
cld
push
std
jmp
dec
push
out
mov
add
add
ljmp
sub
xchg
add
adc
push
repnz
cld
or
mov
nop
test
add
cmp
stos
inc
insb
hlt
sub
add
xchg
xor
fs
xchg
sub
adc
aas
pop
xchg
dec
adc
jp
mov
xchg
add
fistpl
jae
cmpsb
sbb
js
dec
mov
dec
adc
inc
imul
jbe,pn
orb
lea
mov
mov
sahf
mov
jmp
cmp
fadds
jne
mov
xchg
sub
sahf
sub
fsubp
ret
mov
xor
or
push
sbb
lret
stos
aad
push
push
ret
cmpsl
ljmp
js
jmp
insb
popa
or
inc
divb
xchg
mov
mov
mov
push
jle
jg
scas
mov
aaa
inc
in
inc
push
out
jg
push
xlat
dec
out
add
add
add
sbb
dec
push
out
aad
mov
jb
clc
aas
add
add
imul
add
and
cltd
mov
insb
push
stos
aas
push
xlat
sar
sbb
push
and
icebp
out
shlb
pushf
xor
xchg
test
out
ficomps
xchg
data16
ret
jle
movsl
inc
rcr
and
mov
fbstp
cmp
dec
jae
movsb
call
sbb
mov
std
clc
lret
arpl
test
inc
or
test
int3
xchg
out
or
fisttps
mov
dec
push
scas
mov
test
pop
aam
shll
addr16
cmp
push
mov
insb
lods
fadd
jl
or
push
mov
aaa
loope
loope
sbb
push
push
mov
xchg
iret
push
leave
push
mov
push
inc
sub
imul
das
adc
adc
push
lret
inc
test
add
stos
ljmp
push
jg
cmp
movsl
rcl
pop
mov
xchg
iret
xchg
pop
std
in
into
out
ljmp
mov
add
add
idivl
or
and
data16
inc
add
add
scas
or
in
cmp
adc
inc
mov
popa
xor
out
jle
xchg
jg
les
movsb
push
lock
imull
add
fcoml
int
adcl
lret
jbe
pop
clc
add
fwait
or
mov
shll
push
repz
sbb
mov
push
mov
loope
push
adc
push
add
cmp
ret
cmp
outsl
adc
and
shl
xor
repz
movsl
sbb
ljmp
idivl
insb
sbb
dec
push
jno
lret
loop
mov
or
mov
mov
pop
in
cmp
lcall
pop
popa
arpl
in
sbbl
pusha
enter
cmp
ret
bound
and
lcall
ja
xchg
push
cmp
sti
out
add
add
jg
xchg
orl
in
add
add
ja
in
in
push
sbb
xchg
dec
sub
xchg
cmp
movsb
mov
pop
pusha
jo
fnstenv
push
push
dec
cmp
fsubp
dec
mov
jp
lods
mov
mov
or
sub
xor
push
add
hlt
jb
jg
test
ror
mov
fisubs
dec
in
and
push
div
fidivs
das
adcl
leave
mov
xlat
push
or
or
mov
notl
and
cld
jl
and
xlat
in
sahf
and
pop
mov
mov
xchg
jmp
fdivrl
jne
or
sbb
fldt
xor
movsb
clc
mov
mov
cwtl
dec
add
xor
dec
in
fsubrs
lock
das
fldt
call
and
hlt
xor
and
inc
xchg
shrb
jnp
mov
lea
out
fadd
xchg
push
add
add
push
dec
lret
jmp
imul
aaa
je
nop
out
cmpsb
pop
inc
add
add
xor
or
xchg
push
popl
stos
in
inc
jae
test
jmp
les
mov
dec
scas
jecxz
movsb
dec
add
jl
sub
mov
sbb
xchg
movsb
imul
fadd
xchg
xor
into
push
int3
xorb
push
mov
mov
cmp
mov
inc
mov
push
lea
aad
stc
mov
scas
lods
sbb
test
jmp
mov
pushf
pop
andl
mov
sbb
nop
push
xchg
test
push
dec
xor
push
xlat
dec
test
push
add
push
idivl
mov
mov
sbb
fmull
sbb
nop
push
mov
lretw
mov
es
pop
loop
out
lret
cmp
cmc
shlw
in
pop
dec
jbe
ss
rorl
mov
inc
jmp
adc
insl
aaa
pop
lods
mov
sbb
shr
and
out
xchg
jne
mov
dec
ficomps
adc
add
add
cwtl
loope
std
jge
cwtl
xchg
push
sub
nop
sahf
cld
or
add
add
jmp
fst
test
enter
mov
push
lret
jne
xor
push
jne
add
fcomp
lock
lret
shll
and
add
mov
sub
mov
imul
sub
es
pop
leave
lcall
xor
scas
mov
aad
rorb
jecxz
dec
in
test
mov
stos
fisubl
ret
pop
cwtl
adc
mov
popa
push
notl
lahf
mov
repnz
mov
dec
dec
fsubrs
hlt
lcall
outsb
mov
jmp
fnstenv
mov
push
cs
adc
push
jp
xchg
dec
xor
scas
arpl
adc
aad
fldcw
sahf
push
jecxz
test
test
xchg
rorb
ror
add
dec
adc
jb
and
mov
test
xchg
sub
jns
xor
jg
outsl
sbb
add
pop
adc
and
jns
push
mov
push
mov
movsb
fs
pop
ret
mov
pop
pop
xchg
mov
inc
ds
adc
xor
xlat
or
xchg
push
negb
add
jp
add
inc
cli
mov
inc
addr16
mov
pusha
push
push
mov
push
xchg
cli
fnsave
xor
inc
mov
sub
jb
sbb
jae
sub
lcall
xchg
push
jbe
lea
into
jno
pop
outsl
loopne
xor
ret
sbb
xchg
int
std
js
add
lock
xor
lret
jbe
xchg
push
push
mov
add
pop
iret
and
inc
dec
mov
loope
std
mov
outsl
mov
sub
sbb
jns
test
imul
mov
jb
push
xchg
lcall
push
mov
and
mov
and
xchg
imul
outsb
jmp
je
pop
sub
add
js
ret
jg
decl
rol
or
inc
add
add
into
mov
arpl
mov
rcll
xor
dec
mov
add
inc
addr16
xchg
in
rclb
jno
inc
rorl
pop
mov
push
das
lret
sbb
push
xor
xchg
bt
jmp
lret
or
sbb
out
pop
daa
mov
mov
xor
inc
mov
mov
hlt
xchg
jg
lret
mov
jb
mov
test
sarl
outsb
jge
sub
iret
cld
test
lea
mov
pop
push
cwtl
fnstenv
test
add
cmp
insl
sti
xor
fmull
mov
pop
jg
cmp
sub
or
mov
mov
sarb
sbb
dec
dec
jmp
sti
adcb
jmp
inc
out
pusha
notb
pop
dec
mov
bound
arpl
jae
pop
cmp
or
xor
add
add
das
mov
out
aad
dec
clc
rcrb
inc
add
add
dec
jmp
mov
push
mov
push
mov
sbb
mov
push
fsub
adc
or
test
or
push
mov
aad
in
push
lahf
push
aas
or
mov
cmpsb
jb
mov
mov
jp
or
and
sub
into
sar
pop
cmp
scas
imul
js
sub
daa
in
outsb
imul
mov
sub
jne
xor
stos
jmp
inc
jne
jle
push
sarl
das
push
in
xor
mov
cmpsl
and
pusha
cmpsl
inc
xchg
icebp
xchg
xor
sbb
mov
and
mov
jne
pop
pushf
das
cmp
sbb
out
sub
cmp
sarl
cmp
xor
xchg
xor
xchg
cld
jno
ret
jmp
xor
sbb
loopne
lds
call
inc
icebp
hlt
gs
dec
adc
jl
and
add
cmp
aaa
inc
repnz
fsubrs
mov
jg
push
lods
insl
loop
movsb
in
ficoml
fmuls
or
cwtl
dec
jae
sbb
cmp
repnz
adc
pop
fwait
scas
aas
push
stc
mov
mov
out
or
push
in
xchg
jno
ja
add
ficoms
push
jnp
ljmp
xchg
add
in
pop
mov
in
and
cmp
int
mov
lods
into
mov
int
jae
scas
push
cmpsb
sahf
cwtl
int
fnstsw
fcomps
dec
sbb
scas
fucomi
and
push
scas
mov
xchg
xchg
mov
push
js
nop
in
ret
jo
jg
jp
stos
or
or
push
mov
xor
into
xor
mov
stc
push
mov
add
cmp
pop
add
imul
push
incb
push
add
fsubl
mov
mov
add
add
aas
gs
pop
repnz
dec
add
add
popf
or
or
sarl
mov
cmp
dec
adc
jge
ret
jno
sti
inc
in
add
mov
fldcw
cmp
dec
sbb
cmpb
leave
js
xchg
movsb
jns
icebp
mov
jae
test
mov
xchg
test
lcall
cmp
movsl
dec
pop
sbb
push
mov
cltd
adcl
out
rcl
outsb
es
push
cltd
repnz
jecxz
lret
loope
add
loope
cmc
ljmp
sbb
mov
shrb
or
cld
jb
and
jg
sbb
mov
and
inc
push
insb
jmp
jecxz
push
fcomi
mov
leave
addr16
sub
mov
mul
pop
sbbb
ss
xor
mov
stc
mul
or
mov
in
mov
sbb
mov
jg
mov
add
add
mov
out
fisttpll
lock
sbb
add
pushf
call
aas
loope
mov
fsubp
mov
xor
ret
xlat
add
lahf
ret
arpl
xchg
repz
mov
imul
cmpb
sbb
scas
inc
es
outsb
pop
push
and
lea
mov
scas
push
jp
outsb
jno
sti
mov
add
aas
pop
add
mov
icebp
loopne
jmp
lds
and
and
test
mov
imul
loop
jnp
adc
mov
aad
fnsave
mov
xchg
mov
jnp
out
ret
std
add
mov
aas
adcb
cmp
insl
stos
pop
mov
mov
push
std
pop
decl
add
fcmovnu
lea
jno
adc
call
fsubrl
or
addr16
jno
aas
dec
cmpb
push
pop
fsubrs
mov
in
inc
mov
lock
add
mov
ljmp
add
add
adc
lahf
in
iret
push
and
and
pusha
je
out
std
sub
stc
popf
lods
jb
push
or
dec
mov
cmc
cmpsb
cmp
xchg
dec
mov
jne
es
in
sbb
ja
mov
pop
movsl
pop
into
into
popf
or
cmp
iret
dec
sbb
and
and
xchg
adc
jecxz
cmp
push
mov
addr16
cmp
mov
imul
adc
cmp
sbb
dec
cwtl
ret
cs
cwtl
xor
lahf
cmp
lock
push
jbe
fistpll
push
and
pop
lcall
pusha
jecxz
dec
mov
adc
adc
push
out
mov
adc
jge
loopne
aam
sahf
cmp
adcl
xor
and
aad
mov
es
imul
jb
addr16
cmp
push
ja
movsl
add
add
push
sbb
jmpw
fnstcw
jo
sahf
jb
and
add
inc
incb
jmp
mov
xor
outsb
xchg
sbb
sbb
cld
cmpb
adc
stos
imul
ja
push
mov
imul
fwait
dec
push
call
mov
test
popf
outsb
std
pusha
jmp
lahf
data16
jno
cmp
repnz
fsubl
loop
out
xchg
sbb
sub
imul
push
stc
mov
sbb
sub
and
mov
push
sbb
jge
arpl
aam
add
in
insb
ret
xchg
subl
jo
pop
jnp
mov
lahf
mov
imul
adc
sub
cmp
fbstp
fadd
inc
dec
loope
mov
cld
sub
test
nop
out
in
outsl
or
mov
je
stos
imul
xor
jl
pop
cmp
lret
fbstp
add
cmp
imul
out
mov
mov
mov
cmp
add
dec
jb
inc
outsb
pop
popa
shl
adc
mov
fistps
cwtl
shll
outsb
les
dec
out
rorb
std
repz
popf
add
iret
mov
sbb
inc
sbb
pop
leave
dec
ret
cmpsl
sub
cmp
push
cltd
cwtl
jg
jns
movsb
sbb
addl
push
test
int
int
sub
lods
jnp
jno
ret
mov
sbb
loop
fwait
in
jp
xchg
loopne
mov
lock
enter
fwait
cli
pop
pushf
mov
adc
fmull
add
jp
ret
mov
mov
jne
sbb
dec
inc
sub
mov
into
mov
test
in
mov
fcmovnb
xlat
xlat
dec
rcll
jb
aad
jle
adc
cmp
testl
sbb
add
js
add
dec
stc
mov
ljmp
ds
add
add
fsubl
pusha
sbb
push
sub
ljmp
rcr
fmuls
imul
inc
nop
inc
ret
push
test
ljmp
pop
pusha
jb
push
jecxz
jg
mov
xchg
dec
sbb
das
jno
dec
jb
or
push
xchg
popa
fsubr
out
sahf
decl
inc
mov
imul
fstpl
mov
cmpsb
out
inc
xchg
push
daa
xor
loope
jo
cs
pop
jno
lea
dec
cmpsl
lret
mov
mov
push
orb
push
std
push
div
dec
je
cltd
jno
fdivp
sub
pop
imul
adc
addr16
jno
int
icebp
aas
mov
dec
mov
jmp
jmp
scas
xchg
dec
cmp
dec
xchg
sub
xor
dec
int
sub
jae
filds
pop
fdivs
fstp
jno
scas
dec
arpl
xchg
fcomi
add
add
jg
cld
lcall
xchg
inc
dec
add
add
mov
mov
inc
mov
stos
ljmp
pusha
jae
jb
sbb
fildll
adc
mov
insb
adc
ds
mov
or
xorl
mov
test
adc
daa
por
pop
rcrb
cmp
push
cmc
test
jge
clc
cmp
push
insb
mov
loope
je
or
incl
inc
icebp
nop
mov
scas
inc
sbb
loop
push
adc
inc
test
clc
cmp
add
xor
int3
int
stos
scas
and
add
or
pop
into
dec
pop
dec
lea
int
fwait
imul
dec
fnstsw
das
mov
jmp
mov
jmp
mov
fisubrl
fwait
leave
fnsave
dec
mov
push
es
add
or
fwait
sub
test
mov
in
push
cmpsl
bound
and
lock
aas
jbe
inc
out
cmp
add
mov
xchg
mov
pop
jne
push
xchg
dec
push
add
add
imul
inc
push
gs
int
popf
and
jae
pop
jl
fnsave
jnp
sbb
sbb
mov
gs
mov
xor
cltd
js
xchg
ret
mull
jge
xchg
cmp
cwtl
sahf
fwait
cmp
push
leave
jle
lret
sbb
cmp
mov
jbe
mov
mov
jl
je
lahf
dec
add
mov
lahf
xchg
scas
clc
push
mov
stos
mov
cmc
fdivrs
imul
cmp
into
mov
sub
pusha
pop
adc
mov
fstpl
sub
jmp
les
cld
jmp
imul
rolb
or
cld
cmp
clc
outsb
mov
jb
outsb
aam
aad
push
popf
call
repz
xchg
daa
adc
movsb
lret
push
out
mov
mov
adc
xchg
dec
xchg
es
xor
and
pusha
xlat
cmpsl
stc
add
add
inc
mov
push
push
jmp
push
mov
aaa
dec
push
add
add
arpl
xchg
pop
fwait
pop
inc
jmp
ffreep
repnz
and
cmp
add
add
pop
popa
xchg
mov
call
lret
ja
jle
and
ljmp
js
or
shrl
iret
push
mov
pop
ds
pop
or
add
cmp
xchg
xlat
stos
jbe
xchg
inc
xchg
add
fnsave
mov
sub
pop
lcall
jns
rcl
adc
sub
shrb
fldt
mov
adc
imul
push
push
orb
jns
ljmp
lahf
add
call
popf
adc
fisubrl
sbb
adcb
sti
imul
leave
or
lret
ja
lahf
lds
dec
mov
cld
sarb
shll
add
popa
or
fdivrs
fadd
es
pop
xchg
cli
xchg
mov
pop
mov
in
add
fsubrl
mov
out
cmp
ret
or
das
lock
fsts
add
add
test
mov
xor
mov
mov
jge
sub
bswap
mov
test
cltd
pushf
adc
cmpsl
fdivl
push
roll
mov
xor
dec
push
jge
xchg
lahf
out
jo
mov
cli
and
sub
push
cwtl
fwait
pop
xchg
jno
inc
sub
cltd
or
je
pop
jp
sub
cld
iret
sahf
mov
add
int
out
ljmp
cmp
test
xchg
inc
fsubrp
sub
or
mov
or
jns
cli
into
xchg
dec
fadds
push
outsl
pop
popf
push
ss
fsts
adc
fmull
ja
jg
xchg
outsl
lahf
inc
notl
mov
daa
fwait
or
neg
add
xor
xchg
inc
mov
pop
add
pushf
mov
test
or
or
rclb
dec
inc
pop
sbb
in
fildl
add
or
push
shll
out
pop
pop
pushf
push
icebp
daa
fstl
add
add
imul
fimull
lods
and
test
stos
movsl
dec
aas
lahf
push
enter
jg
sti
push
inc
pop
addb
ljmp
mov
aas
scas
pop
add
pop
dec
sahf
add
mov
aas
pop
xor
idivl
push
jmp
sub
pop
lds
lret
clc
mov
pop
cwtl
xchg
pop
gs
adc
jmp
loope
jge
lea
push
mov
imul
push
enter
push
push
lods
cmpsl
lret
push
fsubl
cmpsl
pop
roll
cmpsb
pop
flds
cmp
mov
push
rcrl
mov
xchg
stos
fwait
add
pop
push
test
and
xor
loopne
xor
in
daa
xor
cmp
fs
sub
mov
addr16
fstpt
and
jae
gs
and
mov
add
add
out
lcall
hlt
mov
subb
pop
push
add
add
loopne
mov
push
lahf
sub
cmpsl
jp
and
xor
sarl
cmp
out
xlat
popf
fld
loop
in
loop
fwait
popa
fbld
or
push
imul
adc
xchg
call
jmp
imul
sub
pop
xchg
icebp
cmp
repnz
das
gs
xlat
add
mov
imul
sbbb
mov
es
lods
xchg
push
dec
jp
in
loop
sbb
push
xor
sub
lods
mov
stos
in
and
in
sub
leave
adc
jmp
cmpsb
enter
lcall
insb
lods
pop
enter
lods
inc
push
xor
xor
xlat
ljmp
fadd
cwtl
scas
sbb
jne
aaa
enter
dec
push
bnd
cmp
ficomps
movsl
xchg
inc
dec
cwtl
jmp
mov
in
dec
add
gs
add
bound
imul
add
add
in
stos
push
sub
in
mov
mov
sub
loop
mov
push
aas
adc
outsl
adc
lds
movb
out
adc
dec
fildl
pop
pop
push
cwtl
xchg
inc
jns
lret
cmp
fisttps
fnsave
shl
lahf
pop
mov
push
mov
cmp
test
inc
jg
in
nop
repz
xchg
mov
jp
adc
add
jb
mov
cmp
nop
insl
cmp
into
pop
cld
adc
jl
pushf
adc
iret
aaa
cmp
fs
rcl
dec
xchg
sahf
je
psubw
sahf
stos
repnz
jo
cld
int3
mov
cmpsl
mov
push
inc
test
xchg
inc
rorb
sbb
cmpsb
pop
or
fimuls
dec
cmp
sub
cld
inc
andl
popf
push
loopne
or
mov
mov
add
jae
fwait
cmp
stos
sarb
push
add
add
and
push
push
dec
push
xchg
lock
adc
push
jl
repnz
fiaddl
push
cwtl
outsb
sub
cwtl
aaa
xchg
and
mov
loop
push
cmp
jl
cmp
xor
pop
mov
push
add
mov
mov
clc
fildll
mov
xchg
add
cwtl
adc
fldcw
cltd
mov
jnp
outsl
jbe
nop
hlt
xlat
jle
xor
test
sbb
std
fnstenv
in
fbld
push
rcll
ret
mov
mov
cmp
pop
insl
lret
out
loop
movsl
in
sbb
or
cmc
sti
inc
fidivrl
sub
push
push
lods
xchg
loope
pop
lods
repz
push
dec
ds
xor
and
cmp
xchg
inc
and
lods
xchg
xlat
mov
sarl
push
dec
or
sbb
cmp
inc
mov
popf
dec
outsb
pop
out
mov
dec
jbe
lods
add
add
inc
push
clc
mov
and
hlt
jle
repnz
imul
add
xchg
repz
cmp
xor
enter
sbb
and
ljmp
mov
xchg
cmp
lock
in
ds
dec
in
std
mov
out
incl
push
insb
in
ss
mov
shrl
loopne
shrb
ss
pop
out
js
and
pop
popa
mov
xlat
mov
fsts
movsl
js
sub
jmp
arpl
mov
subl
xchg
pop
shl
jp
jo
sti
rcrl
sbb
in
jb
incb
stos
sti
les
les
andl
clc
xchg
mov
inc
loopw
jae
inc
dec
push
mov
jns
and
add
cmp
sbb
jns
syscall
mov
into
push
out
or
imul
aaa
jne
mov
movsl
dec
inc
shlb
test
testb
sahf
xchg
bound
add
scas
xchg
push
adc
out
mov
jge
cmc
dec
jo
add
add
and
lret
sbb
cli
std
in
std
and
mov
loope
xchg
push
jp
cli
mov
iret
andl
xchg
scas
fcomp
push
lods
in
mov
mov
cli
add
mov
push
or
push
or
pop
pop
lcall
popf
daa
xor
ljmp
stos
push
mov
sub
cltd
inc
lret
loope
mov
enter
sub
repnz
push
sub
jb
mov
jmp
dec
inc
xor
xchg
add
jmp
fmull
jne
daa
cmp
xchg
decb
xchg
xchg
cmp
les
data16
mov
bound
cmp
inc
xchg
sbb
push
aad
lret
mov
dec
sbb
cli
out
mov
and
iret
jle
lcall
mov
dec
ret
or
test
xchg
pushf
or
xorl
jmp
sub
push
dec
mov
test
or
fdivs
pop
xor
jne
add
add
fbld
test
out
xchg
adc
gs
lret
cmp
aad
arpl
xor
push
rcrb
ret
add
lds
sub
sbb
cmp
aam
lahf
mov
movsb
push
fldenv
xchg
xor
jp
in
or
sbb
leave
sub
xor
outsb
mov
dec
popf
sahf
and
stos
dec
xchg
mov
dec
lret
xlat
test
jmp
mov
or
jecxz
xchg
outsl
jae
das
jnp
lret
jo
sub
lcall
or
push
mov
mov
mov
testl
enter
mov
xchg
push
jle
push
fld1
loope
cmpsb
rclb
add
test
cmc
push
mov
test
js
scas
xchg
clc
nop
rclb
xchg
test
sub
out
mov
int
pop
pop
loope
bound
in
ficompl
add
add
mov
pusha
pop
mov
sub
add
add
push
rclb
jnp
cld
pop
es
mov
out
ljmp
xchg
push
cmpsl
cmpsb
pop
out
xor
sub
cmp
add
jg
sub
sbb
int3
in
pop
pop
and
sub
cmc
push
or
in
sbb
mov
mov
call
lods
xchg
sti
jge
push
je
push
call
xor
outsb
pop
ret
mov
insl
mov
dec
jl
and
pop
push
adc
cld
popa
push
or
adc
stos
sbb
loopne
cmp
sahf
in
dec
cmpsb
cmpsl
xor
arpl
test
icebp
jecxz
test
cmp
xor
sbb
and
imul
mov
mov
or
loop
pusha
out
andl
inc
imul
call
cli
icebp
jb
adc
push
push
pop
sub
push
mov
push
mov
sub
add
movsb
jae
jnp
mov
ja
mov
xchg
sarb
add
jl
nop
ljmp
loop
xchg
sub
mov
and
cmp
xor
lahf
sub
pop
jbe
add
mov
mov
scas
inc
cli
ret
popa
xchg
adc
xchg
and
add
cmp
leave
loope
cmp
adc
fwait
dec
cmp
es
icebp
xlat
cmc
xchg
call
lock
je
mov
push
mov
sahf
pop
or
in
jl
imul
cltd
jb
int
push
or
int
lods
cmc
jnp
nop
push
shl
repz
sbb
sbb
pop
nop
or
sub
call
xchg
adc
fcmovnbe
mov
scas
out
add
jb
xor
shll
xor
add
cli
mov
inc
cmp
cmp
mov
inc
xor
dec
faddl
jl
push
mov
xchg
sbb
jg
stos
push
pop
cwtl
sbb
aas
add
add
xor
xlat
out
cld
cli
mov
add
add
jl
pop
mov
dec
outsl
aaa
mov
add
shrb
sub
mov
xchg
mov
ss
xchg
mov
add
add
scas
movsl
dec
std
jl
loop
adc
adc
bnd
fbstp
dec
in
in
ss
in
pop
fmulp
sbb
fisubl
inc
les
mov
inc
out
pop
iret
pushf
mov
mov
enter
xchg
cltd
scas
adc
and
sub
pusha
sub
xchg
mov
gs
xchg
imul
mov
cmp
and
es
ds
cmpsl
call
sub
ret
loopne
neg
fs
mov
sub
dec
sub
es
idivl
out
popf
xchg
pusha
fidivs
push
nop
inc
push
pop
into
or
aas
or
push
insb
movl
lcall
and
mov
mov
in
lock
pop
add
add
in
repnz
ja
jmp
out
pop
add
in
mov
shl
push
cmp
stc
and
gs
push
xor
mov
and
out
movsb
jg
fucomi
data16
adc
xchg
or
mov
xor
fildl
sbb
dec
dec
lahf
in
fs
pop
fidivrs
das
nop
in
andl
outsb
je
and
not
jns
pop
arpl
adc
test
push
mov
and
enter
ror
aas
dec
imul
inc
ficoms
in
mov
mov
xchg
mov
fwait
shlb
add
shr
mov
les
pop
or
cmpsl
adc
lcall
ret
pop
push
push
or
xor
pop
cli
push
add
cmpsl
movsl
mov
xchg
gs
dec
or
fwait
jge
push
inc
cli
add
add
push
into
push
push
inc
lahf
mov
mov
add
adc
icebp
add
loop
stos
mov
lods
sbb
fwait
dec
fs
stos
daa
lcall
loope
imull
sub
mov
jle
cmp
and
nop
xrelease
cmp
mov
loop
in
bound
sub
and
stos
cmp
mov
add
in
mov
outsb
or
xchg
dec
popl
adc
cmc
cli
out
shll
out
jmp
and
gs
aas
dec
xchg
or
xor
bound
nop
or
icebp
sub
leave
out
xchg
aad
mov
mov
adc
in
lahf
adc
jo
mov
xor
xchg
push
jb
not
lods
sub
test
repz
aad
jo
jo
xor
push
imul
dec
dec
leave
sti
push
ret
lods
stos
std
inc
sbb
or
fwait
and
popa
pop
mov
lea
jg
add
and
mov
jg
or
xchg
pop
add
add
sbb
mov
push
mov
mov
inc
int
mov
jle
fsub
pop
push
sahf
xlat
or
test
adc
or
xchg
mov
test
sbb
shr
dec
adc
out
cmp
jns
movsl
jmp
test
pop
pusha
or
sub
insb
movl
dec
pop
insl
andb
int
jge
sbb
dec
mov
loop
adc
or
imul
js
pop
and
inc
adc
mov
clc
mov
imul
jns
xchg
adc
sub
in
ja
and
cmp
xchg
ret
xor
mov
and
add
sub
inc
and
fdivrl
mov
sub
mov
add
push
mov
lods
cs
push
ja
out
call
mov
sub
jns
jb
movsl
push
enter
xor
or
jmp
inc
cmp
popf
loopne
add
lahf
pop
fcmovb
fcmovnb
lahf
pop
cmpsl
jne
mov
dec
cwtl
pusha
add
add
stos
int3
hlt
jl
insl
inc
jl
jo
insb
ds
fnstsw
mov
sbb
sbb
jne
dec
loope
rorb
ret
imul
dec
jle
xor
jns
mov
inc
mov
jnp
mov
pop
fdiv
pop
popf
jge
movsb
inc
js,pt
aad
and
dec
cwtl
sbb
fidivl
push
rcrl
les
jge
ja
les
iret
cwtl
push
push
lahf
add
pop
jmp
out
jns
xchg
repz
and
pop
lret
addr16
imul
aad
stos
dec
repnz
adc
xchg
inc
cmp
test
out
adc
mov
push
xor
js
xorb
xor
rorl
rcrl
sbb
stos
jno
and
lods
sub
jle
jnp
lret
add
lods
pushf
push
jmp
adc
pop
jne
jne
add
sub
stos
add
add
idiv
jg
sub
mov
add
loope
pop
pop
sub
addb
loope
popf
loop
jbe
push
sbb
sbb
les
pusha
nop
adc
cwtl
movsl
adc
andb
xchg
repnz
and
lea
aam
and
imul
inc
mov
pop
push
xchg
pop
mov
mov
pushf
jmp
xchg
jo
test
pop
xor
js
lret
inc
cld
jle
add
and
int3
pop
push
push
ss
dec
into
sbb
jp
jp
or
insb
div
mov
icebp
addb
int
call
sbb
jns
lret
stos
mov
fwait
mov
mov
movsl
adc
sub
sti
lods
mov
mulb
jmp
ss
jno
adc
insb
out
addr16
pop
push
mov
out
inc
aas
icebp
rcll
sub
or
and
fdivrp
dec
mov
ljmp
dec
xlat
pop
sbb
pop
xlat
add
dec
mov
add
add
pop
mov
fstps
sbbb
add
add
push
arpl
cmc
cmp
js
jl
lret
ss
pop
and
mov
adc
push
int3
nop
mov
push
iret
dec
in
leave
mov
pushf
pop
or
xchg
outsl
sub
repz
jecxz
rolb
mov
sti
loopne
push
pop
out
jp
dec
dec
mov
pop
shll
sbb
xor
fldenv
pop
insl
dec
cld
mov
push
xchg
mov
cmc
or
dec
cmp
and
add
sub
lret
inc
adc
lds
mov
cmp
imul
xor
add
pop
popf
scas
arpl
sti
hlt
pushf
jnp
rcrl
dec
xor
sbbl
or
inc
int3
pusha
mov
xlat
mov
scas
dec
mov
aad
enter
xlat
add
cwtl
mov
jecxz
jecxz
out
xchg
dec
mov
in
xchg
xor
stos
cmpsb
fidivs
iret
pop
sub
data16
xchg
cmp
push
xor
add
add
repnz
movsb
jle
arpl
cmp
cmpsl
arpl
add
adc
lahf
mov
subl
dec
in
xchg
pop
sbb
hlt
iret
inc
nop
outsb
sub
jo
push
xor
ret
xchg
hlt
repnz
sub
rcrl
shlb
gs
repnz
cli
push
ficoms
scas
lock
test
sub
imull
mov
bound
popa
pop
mov
lahf
shlb
mov
sbb
adc
cmp
xchg
or
mov
test
or
jl
daa
imul
sar
jl
ja
insl
dec
adc
sub
pop
fs
ffree
mov
cvtdq2ps
ficomps
mov
add
mov
mov
movl
mov
push
dec
pop
sub
push
sbb
add
pop
inc
or
mov
shll
rclb
fcmove
pusha
pop
or
cmp
sti
jge
sub
popf
jge
xchg
mov
mov
mov
mov
dec
push
jae
sldt
add
jmp
sub
cld
data16
lods
add
add
or
lret
out
ficoms
inc
or
add
xor
pop
or
test
fwait
iret
cmc
outsl
mov
lcall
adcl
adc
or
imul
inc
imul
out
test
repnz
jne
mov
stos
xor
jmp
xor
sbb
lea
adc
in
cli
fwait
pushf
daa
or
cs
loope
jecxz
repnz
push
incb
or
test
mov
add
pop
adc
mov
xor
push
cmp
xchg
fwait
mov
and
arpl
lods
jne
bound
and
fcoms
rcrl
out
xor
xor
stos
gs
jae
shr
testb
ret
jmp
jg
popf
in
loop
mov
adc
out
roll
add
sahf
push
adc
fadds
loope
int
xor
add
add
mov
fnstenv
pop
popa
and
add
in
sbb
mov
loope
lret
or
sahf
inc
pop
sub
fmul
cli
in
add
adc
jo
jmp
test
add
jmp
add
jo
pop
nop
or
sbb
imul
fldt
dec
sbb
arpl
mov
mov
popa
pop
cld
arpl
and
jbe
cltd
sbb
cwtl
fcmovnu
or
mov
movsl
aas
mov
insb
sbb
push
fidivs
push
or
cmp
mov
adc
or
cmp
out
xchg
mov
mov
out
push
jle
in
sub
sub
jp
xchg
jle
xchg
loopne
test
jb
cld
sub
fisttpll
addr16
adc
cmp
xchg
pop
ffreep
inc
out
pop
daa
pusha
mov
fnstenv
imul
in
sbb
inc
cltd
inc
data16
mov
int3
or
in
lret
hlt
shl
mov
sbb
push
add
add
cld
je
jbe
jns
sbb
sbb
add
add
pushf
fidivl
hlt
imul
cs
and
fs
subb
test
jb
adc
movsl
orb
add
data16
ret
imul
pop
xor
fidivrl
idivb
mov
sbb
aaa
sub
xchg
insl
ljmp
xlat
jmp
sub
xchg
sbb
cmp
jne
dec
imul
dec
push
xchg
push
sub
nop
lods
repz
out
sub
jle
xor
add
shrl
shlb
mov
push
adc
sbb
dec
nop
sbb
and
jl
ja
push
pop
dec
mov
mov
out
rcrl
leave
das
jns
xchg
pusha
and
repz
sub
adc
sub
in
push
add
and
or
xor
loope
dec
or
add
jbe
mov
inc
jecxz
add
push
cltd
jmp
fildl
or
cld
test
add
add
pop
jl
inc
imul
push
loope
sub
xchg
jno
stos
out
test
icebp
ja
in
or
push
xchg
adc
jno
mov
lahf
pushaw
adc
mov
fwait
jno
and
je
add
inc
mov
cld
and
outsb
xchg
xchg
inc
and
call
outsl
push
push
packuswb
jno
add
ss
mov
outsl
sub
dec
cmp
jne
stos
stos
and
mov
in
lahf
stc
lahf
es
lahf
push
int
mov
jmp
in
xchg
pop
in
adc
int3
push
sub
cmp
add
cmp
inc
jl
cmp
fdivrp
mov
std
and
rclb
imul
or
insb
dec
cmpsl
push
push
dec
stc
xchg
test
movsl
loopne
aad
dec
inc
dec
lahf
mov
jae
ja
inc
mov
jno
add
add
push
jg
dec
xchg
dec
adc
add
add
iret
and
jb
dec
add
ret
sbb
add
pop
movsb
xor
adcl
mov
fcomps
ds
adc
loopne
push
mov
mov
sub
cmc
stc
in
daa
mov
dec
adc
fs
shlb
fnsave
sub
andl
mov
vmovhps
push
mov
xor
mov
jmp
or
push
lret
cmpl
lret
popf
jno
ljmp
ljmp
lock
sbb
pusha
mov
mov
negl
mov
aas
scas
js
push
fwait
call
andl
mov
mov
les
shll
push
fistl
or
mov
ss
jb
inc
jb
pop
leave
fcoms
orl
push
mov
inc
ss
mov
add
add
mov
fucomip
push
insb
xor
outsb
ljmp
add
add
push
shl
fs
push
xor
xchg
mov
shrl
and
cmpsl
arpl
outsl
test
arpl
scas
dec
popa
sub
sbb
pop
incl
xor
pop
adc
cli
ficompl
rorl
push
ret
sbb
movsb
mov
out
movsl
loope
cmpsl
icebp
push
pop
sub
fldt
in
ja
mov
stc
and
or
cmp
lea
inc
dec
gs
bound
push
popa
dec
in
jae
and
clc
inc
ror
mov
and
mov
dec
cmc
dec
fadd
xor
jmp
or
inc
sbb
xchg
mov
and
std
push
mov
and
ficompl
loop
mov
push
pop
shl
mov
movsb
pop
imul
out
xchg
mov
jb
pop
clc
cmp
and
shll
in
pushf
add
clc
mov
pop
sbb
roll
add
add
dec
out
iret
jmp
aas
in
push
data16
push
lret
add
pop
and
and
test
popf
push
rcr
hlt
nop
call
mov
mov
sbb
pop
lods
data16
pop
mov
mov
xchg
xor
test
hlt
mov
lret
add
fwait
push
and
shlb
cwtl
sub
cmp
inc
mov
inc
mov
dec
fildll
cmovp
or
hlt
jae
stc
dec
mov
add
and
push
inc
fwait
aad
inc
and
or
jno
idivl
add
rcrb
or
mov
inc
cmp
cmp
add
test
push
scas
sahf
loope
decb
sahf
sbb
aas
pushf
mov
scas
push
ss
adc
add
xor
fstl
xchg
xchg
loop
into
adc
inc
cmp
pusha
add
add
std
cmpsb
pop
dec
sub
sub
imul
add
ljmp
jno
xchg
mov
or
push
add
ja
leave
hlt
lods
pop
mov
popa
pop
jp
sub
lods
loop
sub
pop
jmp
loope
aam
scas
out
mov
cld
cwtl
ret
in
out
outsb
sbb
xor
es
xor
pop
insl
xchg
fcmovu
sbb
addr16
jns
mov
dec
fisubrs
push
add
repnz
notl
sub
sub
sbb
mov
lods
add
pop
xlat
in
call
sub
xchg
loopne
andl
les
in
adc
scas
outsb
or
in
dec
mov
sbb
push
or
mov
mov
outsb
mov
lret
sub
pusha
sti
dec
jmp
adc
and
fdivl
hlt
jo
ljmp
dec
push
pop
iret
loopne
add
stos
lahf
or
sti
xchg
insl
stos
add
add
neg
std
sub
dec
mov
mov
aam
add
add
push
ret
shrl
jmp
mov
pushf
jne
leave
xlat
xchg
push
push
cld
and
cltd
mov
vphsubbw
xchg
andb
das
test
cmp
mov
cmp
outsl
or
outsl
or
inc
add
push
cld
rcrl
push
xor
fidivrs
add
lea
and
clc
shll
inc
or
jmp
mov
into
and
inc
sti
mov
add
xchg
mov
in
mov
xor
adc
mov
cmpsl
pop
mov
dec
add
mov
jl
and
jae
fdivrs
jns
mov
mov
inc
ret
sbb
enter
dec
ret
call
xchg
cld
sbb
scas
ljmp
mov
mov
dec
inc
mull
pop
sub
mov
jnp
sub
iret
dec
adcl
jne
fsubrl
lds
add
push
subb
in
push
mov
adc
insl
add
add
and
pop
jnp
movsb
popf
testb
xchg
stos
push
in
cmpsl
push
sub
jno
cmpps
aad
fidivrs
pop
std
int
test
sub
inc
mov
pop
dec
and
mov
mov
mov
daa
into
dec
sbb
push
out
adc
insl
or
or
xchg
fucompp
lret
daa
inc
inc
fldcw
jp
pop
cwtl
out
or
mov
mov
fcompl
adc
cli
test
es
cld
jo
push
xlat
add
push
scas
and
andl
dec
jle
das
push
push
popf
cli
repz
cmp
pop
mov
stc
mov
test
mov
sbb
pop
jnp
and
mov
rolb
push
mov
inc
dec
pusha
inc
flds
and
les
xchg
pushl
and
fwait
cli
lret
imul
pop
push
pop
mov
loop
shlb
inc
ljmp
add
lcall
out
sbb
mov
add
add
inc
dec
stc
fcoms
jecxz
sub
adc
movsl
enter
mov
push
xchg
jp
or
cmp
shlb
pop
inc
daa
jg
rclb
pop
out
inc
or
push
or
icebp
inc
pop
xchg
lods
inc
jno
push
push
sarl
mov
pop
fisubrl
xor
mov
cmpsb
inc
clc
jb
dec
sarl
mov
flds
shlb
mov
popa
jnp
jg
jge
test
ror
mov
inc
pop
sub
js
sbb
jno
pop
hlt
pop
int3
sbb
inc
mov
fwait
and
fs
scas
mov
sbb
xorl
add
cmp
inc
popf
loopne
in
add
loope
js
jl
movsl
les
jle
in
and
pop
xor
jne
dec
add
sub
cmp
adc
fwait
mov
jb
hlt
xor
in
or
jns
mov
in
fstpt
bound
das
aaa
imul
add
daa
sub
ja
mov
and
jecxz,pt
add
add
hlt
sarl
nop
enter
mov
das
nop
xor
das
sub
xchg
mov
test
cmp
dec
pop
xchg
jno
mov
xchg
icebp
sub
sbb
jns
mov
lcall
out
aaa
icebp
push
push
shr
add
into
fmulp
sbb
fcmovbe
stc
lahf
stc
cld
mov
jl
pushf
loope
adc
sti
jnp
insl
insb
dec
add
pop
popl
adc
xor
sbb
mov
fcmovbe
push
movsl
scas
add
das
dec
push
lods
movsb
ss
dec
jg
in
in
sub
subl
mov
dec
push
lret
sbb
or
mov
out
leave
in
mov
dec
mov
sti
lcall
out
aaa
lods
mov
ficompl
push
stos
pop
mov
sbb
rcl
std
inc
lea
fisttpll
jp
test
xor
inc
daa
and
stos
pop
xor
xlat
daa
dec
push
sarl
sbb
add
add
cmp
jnp
outsl
cmpsb
loopne
rcll
add
or
mov
incb
and
imul
scas
clc
and
push
cmp
mov
inc
loope
ljmp
xchg
inc
in
sub
icebp
and
ds
push
jg
sub
pop
fistpll
push
lods
dec
fidivrl
arpl
inc
mov
sahf
in
jo
jo
push
enter
xchg
xchg
pop
sbb
xor
mov
and
cmp
fsubl
lret
insl
mov
mov
mov
push
mov
loop
inc
je
mov
mov
bswap
jbe
lahf
test
mov
mov
mov
lds
adc
lods
jle
mov
gs
ljmp
mov
in
arpl
cmp
cwtl
cmpl
repnz
rclb
lret
jg
mov
popf
xchg
push
or
test
push
jnp
mov
adc
arpl
lret
add
and
cmp
dec
aam
inc
adc
adc
add
add
cli
xchg
jle
push
je
adc
mov
add
repz
rcl
imul
and
icebp
mov
or
out
sub
jae
cli
fld
jo
push
fwait
xor
pop
jae
ficoms
and
in
loopne
jmp
ljmp
and
out
mov
lcall
cmp
loopne
outsl
and
jge
outsl
push
enter
imul
dec
push
fistps
jbe
pop
paddd
mov
incb
fst
arpl
fists
sbb
insl
sub
and
jl
cs
add
es
cmpsb
mov
mov
push
adcl
xchg
stos
movl
xor
pop
sar
addr16
iret
or
mov
test
lret
ja
sub
jmp
cli
jg
push
and
mov
rolb
xor
push
cmp
jbe
rcll
mov
lret
test
sub
pusha
call
xor
das
push
sub
add
add
fwait
jnp
aad
sbb
pop
jp
jb
add
xor
jl
icebp
sbb
sbb
repnz
les
insl
cmpsl
dec
jmp
xor
leave
mov
aam
push
sbb
add
mov
lsl
shl
cmp
push
xchg
inc
dec
dec
fmul
inc
push
push
cmp
mov
xchg
pop
rorl
inc
sbb
sbb
sahf
andl
adc
je
xlat
adc
adc
aas
pop
loope
ret
aad
pop
jmp
fs
sub
pop
and
es
mov
lock
xchg
je
je
sub
jecxz
hlt
movsl
and
push
loope
pop
nop
loope
scas
roll
pusha
mov
rolb
and
fsubrl
and
fs
mov
dec
rol
push
fisttps
push
test
sub
sbb
imul
cltd
in
lds
add
mov
std
mov
sub
jae
add
loop
inc
ficomps
inc
xchg
pusha
inc
fwait
cli
adc
insl
lds
dec
lods
int
mov
daa
into
and
cmpsb
movb
mov
mov
add
movsb
mov
xor
mov
stc
pop
into
aaa
stos
sarl
daa
mov
repz
and
push
sbb
leave
das
add
mov
fdivl
stos
xchg
and
insb
inc
mov
pop
pop
dec
adc
xchg
mov
negb
and
jns
and
pop
xchg
xchg
xchg
jo
lcall
idivl
jns
scas
push
jp
andl
outsb
mov
daa
sub
mov
stos
lds
lock
daa
push
xchg
sbb
dec
adc
loop
xor
jecxz
fdivs
jg
cld
cmc
data16
and
lods
add
ljmp
jle
and
push
inc
sub
movsb
getsec
in
add
add
fstl
lret
xchg
cmp
je
add
adc
dec
xchg
clc
mov
fsubrs
push
jg
fsubrp
mov
jmp
outsb
sub
out
pusha
push
dec
addb
push
or
test
insl
jg
stos
nop
jnp
xor
pop
or
adc
inc
or
sub
loop
insl
fildll
add
fildl
sub
jne
vmread
lock
adc
std
and
jmp
ffree
mov
add
ss
adc
scas
sti
fwait
push
dec
xor
sahf
sub
test
xlat
and
fisttpll
outsl
mov
sub
cltd
mov
push
and
pop
and
add
fwait
inc
xchg
nop
sbb
cli
add
es
into
out
cmp
psrld
add
cs
mov
fs
pusha
js
in
lahf
andb
int
je
icebp
add
test
movaps
inc
lret
aaa
ret
cmpsb
fsubrl
add
inc
in
mov
mov
out
sub
sbb
jbe
add
pop
add
idivb
mov
mov
cmp
lock
das
lret
add
cltd
sbb
push
mov
inc
pusha
outsl
in
adc
sub
pop
dec
out
fsubs
mov
dec
mov
fs
mov
pop
pushf
bnd
push
dec
sub
and
std
arpl
mov
pop
mov
in
ret
pop
sbb
roll
ja
adc
lods
fmull
sub
fldcw
add
sahf
ljmp
cmp
imul
out
and
imul
jp
and
push
daa
in
js
gs
sahf
hlt
pop
dec
adc
dec
inc
rolb
inc
mov
orl
sbb
or
mov
fiaddl
dec
mov
lds
mov
dec
sub
dec
aam
and
push
fstl
leave
add
add
divl
in
sub
push
ja
add
ret
or
es
sub
xchg
int
pop
push
mov
inc
jbe
lahf
les
setb
xchg
fildl
arpl
inc
mov
push
mov
sub
movsb
jge
sbb
inc
call
mov
sub
mov
orl
adc
adcb
fnstcw
dec
lock
jge
insb
jecxz
mov
into
enter
jle
pushf
das
pop
mov
dec
jns
mov
ret
adc
sbb
jns
imul
sub
mov
mov
cmpb
dec
push
frstor
adc
mov
sub
mov
and
enter
mov
fs
push
imul
jmp
lcall
xchg
sbb
int
pop
dec
xchg
mov
xor
btc
xorb
fsub
lods
mov
mov
push
aam
jle
sbb
mov
inc
and
xchg
mov
add
clc
fisubs
mov
mov
adc
add
outsb
jno
dec
mov
pop
insb
shr
pushf
jnp
arpl
mov
ror
add
add
and
xor
sub
shr
mov
xor
hlt
mov
dec
push
lret
test
shl
xchg
icebp
lock
jae
pop
arpl
mov
or
xor
in
hlt
imul
aam
js
nop
xor
mov
insb
push
paddsb
insb
insb
lahf
mov
adc
push
in
ljmp
mov
mov
inc
stc
inc
jmp
pop
mov
fs
stos
jge
jb
mov
cmp
pop
and
dec
loop
mov
sbb
fisubrl
sbb
mov
add
ss
add
call
mov
xchg
int
sbb
add
inc
dec
jp
in
adc
lcall
out
shll
call
inc
xor
add
jle,pn
add
aas
push
sarb
mov
pop
dec
jnp
add
add
mov
outsl
jne
ljmp
sub
lcall
add
inc
movsb
push
mov
lret
adc
push
ss
dec
pop
and
sahf
xchg
cli
pushf
add
push
aad
scas
fisubrl
movsl
sub
cmp
xchg
cmp
fisubrl
pop
push
inc
cmc
sub
popa
xor
das
in
add
add
inc
sub
mov
jae
pop
pop
mov
push
popf
pop
bnd
cmc
inc
push
mov
jg
mov
add
cwtl
cmp
popa
jne
shlb
rorb
xchg
data16
in
cltd
cwtl
inc
mov
xchg
push
repnz
pop
sub
sbb
add
ds
lret
lret
mov
jecxz
or
cmp
mov
cmpl
mov
mov
addb
pop
xlat
sarb
lds
push
dec
pop
scas
xchg
mov
sub
or
xchg
sbb
or
fwait
leave
add
and
pusha
dec
ds
xchg
add
add
testl
dec
adc
add
add
repnz
or
jecxz
roll
cmp
xchg
pop
jl
loopne
sbb
mov
rcl
cld
mov
leave
lret
shlb
out
sub
jnp
inc
jbe
adc
inc
cmc
sub
mov
push
lods
push
add
dec
fcoms
sbb
xchg
sub
stos
je
lock
out
mov
lods
cmc
jle
jae
scas
ljmp
mov
or
sub
or
rcl
das
xchg
fcoms
cld
or
sbb
dec
sar
inc
mov
orl
xor
pop
lret
ja
cmp
pop
pop
fnstcw
aaa
stos
mov
sbbb
push
clc
cmpsl
push
ret
or
imul
push
sub
jne
scas
negb
mov
xor
cmp
in
rcll
xor
cmp
cltd
ret
and
mov
pop
rorb
loope
aad
add
add
jo
ja
std
stos
sbb
ljmp
add
add
std
icebp
pop
dec
xchg
push
cmp
xchg
or
daa
push
xchg
pop
pop
test
or
mov
or
and
inc
scas
jae
aam
or
rolb
push
push
sub
or
and
dec
rorb
sbb
adc
add
mov
mov
aad
jne
xchg
xor
sub
fs
pop
pushf
mov
loope
inc
mov
pusha
dec
test
iret
pop
cmpsb
iret
cmp
ret
test
loop
push
add
dec
push
fucomip
and
imul
arpl
js
lret
sub
cmp
outsb
out
arpl
mov
pop
and
xchg
aam
xchg
dec
lahf
mov
loope
stos
sbb
lahf
pop
inc
mov
imul
mov
gs
in
push
add
add
cmpsb
push
sbb
pop
aad
jl
add
repz
sub
pusha
cmp
enter
add
mov
push
lret
mov
cmp
push
xor
loope
stc
fstpt
test
out
xor
push
dec
push
stc
scas
fisttpl
jp
popa
cld
imul
lret
push
cmpb
popf
xor
pop
cmp
jmp
aad
mov
mov
add
fldt
push
add
or
xlat
incb
in
fisubrl
loopne
pop
push
stos
shll
xor
mov
inc
lea
mov
lret
dec
hlt
mov
sub
cmp
cmpb
mov
std
fldcw
adc
pop
outsb
cwtl
dec
xchg
push
adc
int
pop
lret
lea
int3
xchg
jp
dec
xchg
dec
std
jg
and
push
mov
mov
inc
and
cmp
mov
mov
scas
stos
cmp
add
xor
cli
mov
call
jge
add
mov
testl
push
out
add
fistl
fmuls
cmp
ljmp
inc
xchg
mov
inc
dec
in
movsl
scas
sub
push
adc
sbb
sub
add
jg
shrl
scas
fistpll
push
mov
sarl
mov
lret
fs
je
roll
mov
in
cmpl
xor
out
outsb
arpl
add
cli
es
pop
mov
sub
or
or
jns
inc
addr16
imul
bnd
in
shl
test
adc
add
or
or
sbb
add
cmp
add
fdivs
pop
rcl
cs
push
or
push
xor
fists
cs
dec
xchg
aam
lea
imul
push
xchg
mov
call
sbb
push
popf
test
xchg
scas
mov
add
add
add
test
lcall
jmp
add
add
lock
cmp
cmp
repz
pop
inc
push
push
lret
xor
xchg
loop
push
pop
inc
in
mov
or
jge
xor
push
rcrb
mov
enter
and
or
jecxz
xor
ret
push
enter
xor
jle
or
jnp
dec
aaa
mov
shll
lea
outsb
out
loopne
xchg
xchg
js
imul
xchg
int3
adc
push
sti
xchg
inc
test
hlt
jnp
movsb
repnz
loopne
je
sbb
int3
add
inc
stos
jp
jmp
xor
loope
sbb
or
pop
cs
fistl
aad
jns
cmpsl
inc
sahf
fstpt
adc
cmpb
outsl
jmp
adc
sub
inc
sub
or
aad
adc
mov
cmp
mov
test
mov
inc
jmp
aaa
ud0
lcall
pop
xor
sbb
jmp
add
add
xchg
xchg
jns
jmp
mov
xor
jg
add
jo
xchg
mov
pop
mov
loope
ja
shll
les
call
out
mov
in
push
cmp
out
xor
sub
out
pop
dec
jb
daa
sub
nop
hlt
mov
stos
cmp
cwtl
adc
lds
das
push
cmpsl
add
pop
add
rcrl
fwait
xor
add
out
adc
sbb
push
pop
in
cld
ja
in
xor
subb
jge
mov
pushf
sbb
mov
dec
mov
jb
sub
push
clc
or
mov
das
les
ret
mov
lock
pop
addb
xchg
jmp
cli
push
shrb
scas
sbb
in
imul
inc
ret
out
les
insb
lahf
ret
ret
push
or
and
stos
pop
loopne
ds
bound
lods
adc
movsb
fs
cltd
lods
outsb
pop
in
push
cmc
push
add
add
lcall
fimull
mov
add
pop
push
lods
xlat
sbb
dec
out
pop
inc
xchg
xchg
xor
outsl
jmp
into
mov
mov
mov
int3
stc
fdivl
outsb
push
jle
push
cmp
mov
cltd
ss
test
fsubr
mov
and
test
imul
dec
in
movsb
das
outsb
out
push
fbld
sub
and
mov
rcll
jmp
xor
add
mov
and
mov
pushf
or
lods
aas
fsts
jmp
pop
repnz
movsb
js
xorl
sub
test
mov
movsl
cmp
sub
mov
mov
cmp
dec
out
gs
push
fwait
out
out
popf
push
cmp
dec
ljmp
cld
lds
leave
aaa
mov
jmp
into
jno
cmp
push
loop
int
or
inc
push
mov
pop
sbb
ficompl
addr16
stos
push
pop
loopne
mov
add
add
mov
idiv
jne
iret
sub
xchg
cmp
add
mov
test
stos
jnp
mov
movsl
xchg
or
loopne
and
mov
xchg
adc
xor
inc
fwait
sub
adcb
xorb
ret
pushf
xchg
lcall
mov
sub
inc
jbe
dec
push
int3
fildll
jne
inc
int
daa
jmp
ret
add
mov
out
cmp
popa
jge
in
inc
jg
out
lea
add
sub
arpl
out
cwtl
nop
das
out
gs
mov
pop
rorb
scas
push
sbb
xor
inc
pop
cmp
mov
dec
js
add
pop
cmp
pop
push
cmp
mov
adc
add
and
aad
stos
psubsb
or
sbb
fstpl
js
xor
sub
stos
push
fidivl
add
in
rcll
add
call
mov
out
cmp
mov
test
cltd
sti
inc
mov
into
fbld
xchg
pushl
sub
inc
jecxz
sbb
add
add
jo
pop
ss
jbe
jecxz
std
add
enter
jl
xor
inc
xor
ret
ja
fisubs
and
xlat
jnp
jmp
sbb
in
cmp
push
outsb
sarl
lock
movsw
inc
clc
out
jmp
jnp
adc
insl
cli
xchg
aad
cmpsb
or
push
test
clc
mov
aaa
loopne
push
ds
mov
mov
addr16
cmp
pushf
jge
repz
je
les
xorl
imul
push
out
jb
xor
jne,pt
and
add
and
insb
shll
loop
inc
cs
pop
xchg
add
sbb
iret
lret
popa
mov
and
jnp
sbb
into
aas
movsl
in
cld
dec
data16
mov
ja
mov
cmp
stos
adc
mov
jmp
in
cltd
mov
sahf
std
and
ss
mov
mov
jge
std
sti
iret
ss
push
jno
push
scas
mov
add
adc
cmc
jae
dec
lods
mov
xchg
mov
scas
nop
enter
icebp
fs
sbb
fs
jmp
pop
popf
or
mov
cmc
sbb
scas
arpl
aas
cmc
dec
cmp
xchg
imulb
and
pop
jl
ret
push
inc
add
jno
add
jl
shlb
xchg
xlat
cmpsl
aam
sarl
and
rorl
jbe
and
cmp
mov
ljmp
repnz
movsb
lret
imul
jmp
cltd
mov
cmp
jge
dec
adc
dec
les
rcrl
pushf
pop
fmul
push
lock
addr16
ret
call
das
sub
mov
pop
aad
dec
lods
je
mov
inc
fstpl
and
mov
popa
insl
inc
cmp
mov
dec
mov
mov
inc
test
pop
pop
movsb
fmull
add
loopne
xchg
inc
lahf
sti
hlt
out
dec
roll
xchg
fisubs
add
cmp
push
call
test
stos
cli
jno
mov
movsl
adc
movsl
arpl
jmp
jge
stos
mov
push
je
out
lds
je
pop
or
ljmp
cmpsb
and
int
rorb
test
mov
jmp
insl
and
xchg
add
int
jb
mov
cld
xchg
iret
cmpl
sub
mov
aaa
and
sbb
adc
cs
pop
and
sti
xor
jle
adc
iret
jns
cmc
xor
call
in
add
adc
out
shlb
cli
loope
mov
cli
mov
les
mov
addl
xchg
cld
dec
mov
gs
or
and
push
insl
or
pusha
lods
cmc
mov
xchg
addl
lock
inc
xor
insl
pusha
aad
mov
dec
jg
popf
inc
mov
in
add
mov
mov
mov
ret
pop
je
test
add
push
xorl
mov
push
jmp
iret
scas
pop
jae
lahf
dec
js
mov
cmpb
push
push
inc
loope
inc
lock
add
xchg
inc
adc
pop
mov
and
bound
mov
add
jo
add
data16
dec
xor
lcall
dec
stos
inc
out
or
lret
xchg
ss
or
icebp
test
add
jp
adc
pop
out
or
rolb
pushf
addr16
xchg
mov
add
xchg
shll
sbb
ret
subl
dec
loope
lahf
dec
sti
push
loop
test
mov
mov
jmp
test
ret
cmp
es
cmc
mov
sahf
out
mov
mov
pop
nop
arpl
in
cli
inc
divb
insl
xor
jp
sbb
mov
pop
loop
lar
mov
xchg
push
adcl
jo
pop
pop
add
add
pop
test
ljmp
lock
xchg
cmpsb
mov
and
xchg
add
mov
dec
jle
cmp
loope
mov
xchg
fnop
pop
imul
mov
inc
jmp
mov
fwait
sub
mov
dec
out
mov
into
daa
stos
test
in
dec
test
repnz
jbe
mov
mov
andb
xchg
fdivr
lds
adc
movsb
push
and
inc
std
jnp
lret
ficoms
or
cmp
push
pusha
xor
push
loopne
je
ret
imul
xor
dec
enter
pop
xlat
dec
cmp
push
push
sbb
add
roll
sbb
adc
jl
fldenv
icebp
cmp
inc
and
adc
sub
cld
das
inc
out
push
loop
xchg
cmp
je
mov
sub
adc
movsb
andb
roll
add
add
arpl
jnp
sbb
push
xor
sarl
add
add
adc
dec
out
ret
stc
pop
pop
loopne
daa
jbe
inc
xrelease
sbb
adc
in
icebp
pop
mov
ret
fs
sub
loop
mov
pushf
lock
fs
jns
pmaxub
xorps
inc
aam
loopne
fbstp
icebp
and
mov
insb
and
lea
mov
add
mov
mov
xchg
xchg
daa
and
ja
xchg
mov
test
lret
add
sub
scas
sbb
mov
xchg
add
sbb
stc
andb
xlat
mov
cltd
dec
sti
jecxz
sbb
jmp
xorb
or
pop
mov
jmp
sahf
call
cmp
inc
mov
add
setge
mov
add
jne
lea
lret
pop
xor
or
jne
cmpsl
pushf
jle
jo
pminsw
add
push
aas
or
mov
cmc
jmp
add
add
fldenv
jg
xchg
lea
enter
test
mov
jns
ret
outsl
sti
mov
add
lea
test
inc
add
pop
add
jle
mov
stos
xchg
sub
es
jg
jmp
ja
adcl
mov
repz
jmp
insl
add
test
rclb
clc
pop
sbb
ljmp
mov
add
ret
pop
into
iret
adc
adc
in
inc
mov
stos
rorl
data16
andb
xorl
gs
imul
clc
push
ss
xchg
ja
or
adc
xchg
add
dec
mov
mov
jae
mov
mov
push
or
sbb
pop
ds
push
aas
jne
jp
fcomp
stos
sub
popf
mov
dec
push
test
and
xlat
movsb
jle
loop
or
imul
push
sub
jbe
jo
add
add
push
outsb
fisubs
test
gs
enter
add
adc
xor
cmp
test
das
mov
cmp
inc
jle
out
rep
rcll
dec
xchg
lcall
adcb
cmc
into
cmpsb
adc
in
jmp
scas
stos
mov
fistl
xor
fdivrp
add
jae
aam
inc
test
mov
pop
cli
pop
jne
out
cmpsb
and
cmpl
or
loopne
rcrl
xchg
daa
add
sbb
ds
roll
orb
mov
mov
leave
lcall
xor
jp
push
mov
or
imul
fldenv
add
ficomps
lret
jecxz
inc
mov
je
icebp
movsl
cld
in
int3
and
push
mov
sti
jo
xchg
leave
pop
frndint
daa
push
mov
mov
data16
add
mov
jns
mov
push
mov
add
jbe
aam
dec
aam
arpl
mov
xchg
ja
in
jl
jb
mov
cmp
scas
sub
js
push
sub
xor
cmpsb
sub
mov
ret
cs
sub
pop
ja
pushf
fstps
jae
sbb
vmwrite
bound
jp
mov
daa
add
inc
pop
sbb
in
and
je
and
nop
call
jecxz
fwait
insl
clc
sub
pop
jl
push
or
shlb
mov
add
dec
xchg
jne
cmpsb
mov
jb
or
bound
ds
pop
inc
xlat
test
nop
clc
sbb
xchg
in
insl
and
aaa
stos
out
jb
pop
clc
mov
push
cmp
std
inc
xor
mov
mov
push
lds
test
imul
add
or
inc
aad
adc
sahf
in
popf
jge
sti
and
add
dec
push
int
fstp
iret
push
cmpsb
fadd
dec
and
mov
add
fwait
cmp
lea
shl
sbb
xchg
xor
xchg
push
jmp
int3
mov
out
push
shr
dec
pusha
dec
scas
push
test
mov
cltd
or
test
ret
adc
sti
push
mov
pop
push
lcall
stos
add
ja
stc
jo
mov
imul
ret
shlb
filds
push
notb
imul
push
or
add
test
jl
mov
addl
add
nop
imul
aaa
jnp
aam
jg
ljmp
ret
movsl
sbb
inc
negl
mov
xor
pop
lcall
mov
loopne
adc
jb
imul
or
popa
ljmp
mov
pop
mov
mov
fdivl
sbb
addb
add
adc
std
out
ljmp
outsl
mov
add
add
shrl
sbb
mov
shll
les
popf
sti
add
push
sti
fsubrs
mov
sarl
jnp
sarb
outsl
adc
push
inc
dec
and
leave
imul
and
lret
ds
je
adc
iret
dec
cmc
cmpsb
mov
xchg
sar
fidivs
sub
ret
adcb
or
push
push
mov
mov
mov
aam
xchg
int
daa
negl
and
int
arpl
pop
nop
mov
aaa
dec
idivl
push
incb
mov
mov
xchg
add
mov
adc
popl
xchg
repnz
jp
xchg
pop
cmp
jmp
fsts
mov
inc
in
xor
mov
push
mov
ret
jmp
adc
jmp
loopne
inc
and
xchg
or
push
mov
add
add
mov
icebp
jb
inc
lahf
je
add
add
pusha
loope
lock
xor
push
lcall
xchg
xchg
cmp
adc
fyl2xp1
cwtl
lret
ret
data16
sbb
xor
inc
adc
push
addb
test
cmpl
add
ret
mov
cmpsb
gs
xchg
cmpsb
cwtl
dec
ljmp
xor
repz
mov
orps
movsb
and
test
push
mov
xchg
outsb
push
cmp
push
cmpsb
pop
or
xchg
fsubrs
data16
fs
jmp
std
loope
push
mov
xchg
mov
or
aaa
jmp
and
xor
mov
and
std
add
sbb
mov
inc
xchg
cli
arpl
sbb
jne
fisttpl
leave
cmp
lahf
aam
les
pop
cmp
push
icebp
dec
dec
mov
dec
push
mov
inc
outsl
xchg
pop
popf
movsl
shr
out
cwtl
cmp
add
cmp
pushf
cmp
jl
add
inc
or
test
fcomps
add
mov
add
fcmovnu
jne
into
es
cmp
push
sub
mov
icebp
sbb
pop
push
daa
popf
es
cmp
add
jecxz
mov
fsts
arpl
dec
inc
mov
mov
cmp
add
imul
or
push
mov
push
sub
xor
push
push
xchg
sub
sbb
cwtl
fcoms
push
sub
mov
add
decl
ds
push
sti
sbb
pop
mov
outsb
pop
sarb
pusha
mov
xchg
mov
jmp
call
mov
fmuls
test
roll
or
sbb
stos
inc
psubd
push
nop
aaa
and
faddl
lock
sbb
and
dec
cmp
add
imul
scas
jle
xor
rolb
xor
add
ljmp
dec
mov
fisubl
popl
add
cmc
shl
lea
xor
rcl
xor
imulb
mov
in
xchg
jae
push
xchg
xchg
and
ljmp
dec
sbb
dec
push
mov
cli
sbbl
pop
xchg
cmpsb
pop
idiv
sub
loop
dec
pusha
fsub
popa
fbld
sbbb
cmp
stc
enter
fildl
fdivr
sbb
push
mov
imul
push
jl
push
imul
cmc
add
in
shll
sbb
dec
xchg
jnp
adc
lock
in
out
mov
scas
fs
cmc
add
jmp
inc
aad
inc
inc
sbbb
mov
add
push
outsl
add
xchg
addr16
dec
movsl
fdivp
into
pop
cmp
push
xchg
stos
loopne
and
mov
rcll
in
aas
repz
and
mov
or
shlb
jo
setp
jnp
pushf
or
mov
sbbb
push
in
jg
add
aaa
shlb
cmc
div
testl
addl
add
mov
mov
rclb
sbb
lock
mov
aas
leave
adcb
into
in
fsubs
push
push
push
fnstsw
fnstenv
mov
insl
jb
xchg
inc
loopne
sbb
pop
sar
adc
mov
imul
add
push
pop
pop
aam
pop
xor
sub
or
lea
mov
jb
scas
jecxz
ljmp
pop
js
xchg
inc
cltd
inc
nop
pushf
adc
pop
cmp
push
fisubs
mov
lret
sbb
cmp
aaa
and
gs
imul
test
mov
adcb
inc
inc
add
pusha
cmc
mov
push
inc
mov
lock
mov
push
jnp
jo
repnz
xorb
lods
mov
sti
lds
mov
inc
fwait
xor
mov
imul
enter
and
mov
add
add
push
sahf
rcr
pop
adcb
ja
es
mov
add
js
scas
pop
xorb
ret
mov
add
int3
lock
ljmp
lret
popf
idivb
xchg
pusha
andl
mov
sbb
sbb
int
scas
xor
call
out
cwtl
sub
add
push
jb
out
fidivrl
movsb
fcoml
adc
ret
pop
popf
dec
fs
dec
add
sarl
addr16
icebp
inc
scas
std
lock
fst
mov
dec
clc
mov
sbb
xchg
repnz
adc
das
jbe
mov
rclb
dec
dec
adc
sbb
pop
push
cmpsl
mov
mov
jecxz
jmp
or
icebp
stos
push
lcall
and
mov
int
out
jp
xchg
and
jle
aaa
imul
mov
push
xor
bound
mov
or
loopne
pop
in
push
sbb
loop
sbb
add
add
arpl
cmpsb
jcxz
fimull
lea
add
sbb
dec
add
stos
lea
mov
jecxz
jl
call
sbb
jae
iret
daa
or
cs
push
std
cmp
sbb
inc
es
xlat
dec
fwait
mov
mov
xor
jno
pop
scas
cwtl
fcmovnu
notl
jmp
adc
sbbb
aaa
or
mov
adc
fstpl
mov
stc
or
xor
xor
dec
pop
clc
bound
mov
popf
out
rcrl
mov
xchg
out
mov
mov
dec
dec
out
dec
test
test
ret
fwait
jl
addr16
mov
mov
fidivs
sarb
inc
sub
and
pop
add
inc
mov
aaa
inc
std
icebp
pop
jle
push
pusha
inc
sub
lock
out
push
out
sbb
xor
movsl
xorl
cmp
pushf
pop
psrad
add
clc
jnp
jg
in
cli
enter
push
add
add
add
jbe
pushf
xor
mov
loop
sub
jl
cli
mov
stos
movsl
leave
pop
push
mov
mov
hlt
mov
pop
lcall
mov
mov
mov
fisttps
sbb
out
mov
xor
and
mov
fucom
dec
jbe
into
in
shll
icebp
inc
push
jmp
aam
mov
jp
gs
data16
adc
aam
ficoms
scas
xchg
adc
mov
pusha
push
mov
or
imul
cld
idivl
mov
and
jb
popf
adc
leave
fadds
outsl
push
push
movsl
cltd
clc
mov
and
testl
dec
test
stos
lods
push
add
ljmp
jg
sbb
lock
or
stc
mov
or
stc
adc
add
cld
cmp
cmpsb
fldl
sbb
fsts
add
add
lods
faddl
fbstp
cld
gs
mov
xchg
xchg
add
add
adc
mov
cli
imul
push
shlb
gs
and
scas
mov
pop
add
daa
xor
or
xor
mov
lret
pop
mov
out
xchg
fsub
roll
sarb
jecxz
sbbb
mov
adc
push
xor
jp
mov
or
out
aas
dec
push
cli
pop
and
rorl
stos
sub
cmp
jae
xor
sub
lret
repnz
pop
pop
aam
jle
ja
or
jne
inc
mov
stos
jb
clc
outsb
jmp
fdivl
mov
cmp
dec
movsb
iret
add
lods
cmp
pop
xchg
fs
mov
sbb
mov
and
inc
iret
add
push
inc
arpl
cmp
mov
mov
lods
jo
lods
inc
cmp
test
xchg
std
test
fisubl
jge
add
add
add
jl
sar
std
jle
pop
popf
scas
cli
mov
jl
xchg
add
add
outsl
mov
mov
pop
jecxz
cmpsl
mov
aam
stos
cmp
arpl
cld
shll
ljmp
add
movsb
xor
push
fsts
mov
mov
push
add
in
lock
mov
ss
test
int
jo
popf
ret
cwtl
pop
pop
sbb
int3
mov
push
add
enter
std
mov
sub
aaa
incl
fldenv
mov
out
iret
loope
fisttpl
loopne
nop
inc
pop
dec
xchg
or
inc
xor
mul
mov
cmp
xchg
cmpl
jl
fdivrl
pop
mov
ficomps
in
mov
or
jae
sarl
cmp
nop
ret
sbb
sahf
cmp
or
and
fimull
dec
sub
mov
add
add
add
cwtl
or
stos
xchg
cmp
in
sahf
sub
xchg
add
add
mov
xor
stos
cmpsb
clc
xabort
push
xor
mov
inc
add
es
adc
xchg
test
push
xchg
xchg
ja
sbbb
jp
mov
repnz
pop
lret
dec
mov
jp
in
ja
push
mov
pop
rolb
or
pusha
mov
sbbb
test
inc
cmp
data16
mov
sub
pop
dec
fxch
mov
xor
pusha
stc
mov
fcoml
pop
xchg
push
mov
enter
icebp
xor
sub
add
adc
and
xor
xor
loop
ds
fistps
xchg
movsb
jns
in
aad
xor
arpl
mov
stos
aaa
mov
or
mov
daa
xchg
ja
sbb
es
outsb
movsl
jbe
inc
mov
jbe
push
jecxz
and
mov
push
xor
add
outsl
sti
mov
mov
fidivrl
add
add
add
rcrl
mov
inc
xchg
sub
add
lret
outsb
addb
cmp
test
cmp
inc
dec
push
dec
rclb
jl
fiadds
popa
loope
es
jns
jb
clc
scas
pop
jbe
and
ja
cmp
in
fildl
adc
sbb
or
xchg
or
pop
lea
push
dec
xchg
xor
dec
inc
xchg
ja
dec
cmp
outsb
pop
lret
jg
pop
stos
lret
int
daa
lret
enter
test
bound
js
adc
ja
fwait
ss
mov
enter
mov
sti
and
das
and
cmp
into
jnp
jmp
pop
push
fwait
inc
push
and
sub
add
stos
test
repnz
idivb
aas
mov
cmc
icebp
fwait
sbb
in
mov
push
mov
fildl
add
push
and
xlat
aas
dec
sbb
or
stos
cwtl
add
add
fsubrl
mov
dec
inc
cmp
lea
rclb
pop
dec
pop
inc
jo
cltd
loop
iret
xchg
jle
xor
dec
enter
pop
jg
push
movsb
divb
jp
jo
jmp
arpl
stos
sbb
adc
notb
xchg
ret
rclb
cmp
and
xchg
sbb
mov
xchg
fimull
aam
stos
and
mov
or
ss
lea
sbb
popa
cmp
ss
into
fmull
sub
pop
xchg
insb
fcoms
outsl
nop
jno
xchg
pop
loopne
clc
pop
mov
and
xor
xchg
lret
out
dec
mov
adc
push
frstor
adc
lea
xor
push
mov
inc
ss
movsb
ret
ljmp
repnz
mov
mov
add
add
mov
mov
jmp
test
inc
movsb
mov
add
add
test
push
out
test
mov
sub
lcall
pop
add
out
leave
inc
jmp
push
adc
and
leave
pushf
aad
pop
enter
pop
ss
mov
jp
aas
pop
push
push
or
call
push
push
pushf
call
dec
loope
mov
shr
js
lcall
ja
xor
movsb
imul
dec
movsb
sub
mov
gs
xchg
mov
lds
fldcw
push
push
out
push
dec
jne
jne
xor
sahf
outsb
push
in
data16
push
mov
mov
mov
mov
int3
mov
loopne
adc
mov
popa
mov
nop
or
pop
inc
mov
pusha
stos
sbbb
xor
mov
je
jno
sub
adc
fidivl
jg
enter
adc
cld
and
dec
lcall
add
lret
sbbl
popl
xchg
mov
add
dec
pop
sbb
dec
popf
and
or
arpl
icebp
push
jo
imul
or
and
xchg
test
lock
jno
stos
fsubrl
push
sub
stos
decb
aad
std
mov
mov
dec
es
std
jns,pn
jo
shlb
and
cmc
mov
push
push
jle
out
lock
xor
cwtl
inc
cmp
mov
pop
mov
clc
mov
and
or
clc
add
in
sti
shl
lret
push
push
data16
push
mov
inc
bound
fimuls
xchg
mov
push
adc
xor
sbb
rorb
xor
jnp
cli
push
cmc
aaa
movsb
sahf
fcompl
add
daa
add
pop
mov
push
cmp
add
iret
cmp
hlt
mov
jnp
mov
fsubl
hlt
push
mov
mov
cmpsl
int
idivl
add
add
imul
movsb
and
pop
xchg
pop
sub
add
add
addr16
ja
call
dec
cmp
inc
mov
mov
scas
out
sub
mov
or
xchg
xor
xor
pop
cmp
mov
int3
xor
xor
jnp
sahf
pop
shlb
inc
dec
incl
xchg
dec
sbbb
push
add
call
insb
cmp
loop
pop
punpcklbw
movsb
lcall
sbb
cmp
cmp
fwait
mov
mov
or
jl
data16
adc
ret
sbb
int
ffreep
dec
data16
add
jne
inc
call
insl
sub
hlt
sarb
lock
push
lcall
pop
jl
std
lcall
out
in
and
or
and
fdivs
or
fs
int
aaa
jp
mov
or
push
sahf
clc
or
cmp
out
dec
popf
mov
push
cmp
shr
test
cli
xor
cmp
add
mov
jge
jg
ljmp
in
lahf
mov
mov
lahf
mov
add
add
mov
jmp
cli
xlat
sub
addr16
sbb
jb
add
or
push
test
inc
test
in
or
js
jno
jo
enter
fdivrs
fld
or
xchg
mov
cmp
fisttpl
mov
adc
aas
test
jle,pt
sbb
stos
inc
jg
pop
or
sub
icebp
outsl
jne
xor
stos
mov
sub
orl
add
subb
add
jne
fldl
add
repnz
xchg
mov
mov
arpl
rorl
and
imul
shl
inc
loope
loope
pop
inc
not
dec
xor
mov
insb
adc
fwait
dec
insb
cmp
sbb
mov
pop
scas
push
adc
inc
push
and
and
adc
lret
cmpsl
push
ljmp
add
ja
out
inc
sub
or
jl
adc
popf
add
add
dec
pop
xchg
add
pop
je
jno
std
movsb
scas
mov
mov
std
cmp
cwtl
sarb
adc
mov
xor
daa
push
out
mov
repz
repnz
loop
jp
push
cmp
pop
xchg
stc
mov
sar
and
imul
lods
sub
aad
jb
jno
outsl
ret
cmp
scas
sub
push
pop
fs
adc
cmpl
outsl
and
aas
test
jb
dec
mov
inc
jae
nop
jmp
data16
cltd
jecxz
clc
mov
shrb
push
and
add
jmp
dec
mov
fsubs
jp
adc
pop
sbbb
xchg
mov
or
sbb
das
pushf
or
add
scas
xchg
mov
call
pop
arpl
pop
mov
xchg
outsl
lds
mov
das
sub
addr16
mov
xchg
sarb
iret
xlat
add
add
pusha
test
mov
cld
mov
leave
sahf
add
add
xchg
push
mov
xlat
xor
or
push
push
jns
push
test
inc
jecxz
xchg
jb
add
rcll
mov
je
xchg
lahf
push
pop
inc
stos
push
lods
sub
xchg
scas
fwait
cmp
cmp
cmpsb
pop
inc
into
adc
add
aas
or
sbb
inc
fwait
sub
ljmp
xor
xor
data16
mul
stos
frstor
lods
repz
mov
aaa
sub
daa
dec
out
mov
inc
icebp
out
inc
into
out
xchg
jno
sbbl
iret
imul
or
xchg
cmpsb
add
into
and
std
mov
aad
jl
push
jp
das
cld
std
nop
xchg
jg
outsl
fistps
wbinvd
sbb
inc
sbb
sub
leave
inc
hlt
lock
xacquire
push
lea
outsb
adcl
xor
add
add
mov
repz
repz
pushf
sbb
into
lahf
add
add
arpl
jae
dec
loope
dec
in
fadd
pop
int
sbb
das
xchg
mov
xchg
icebp
add
or
in
clc
stc
adc
pop
lds
xor
arpl
stos
mov
data16
into
mov
fs
gs
or
and
sub
cmpsb
jecxz
inc
cmp
mov
mov
mov
in
jb
adc
lods
add
cmpsb
adc
mov
sar
imul
sub
and
aaa
popa
dec
test
stc
out
xor
or
out
in
pop
pusha
xchg
sbb
sbb
jp
fnsave
mov
ds
dec
nop
adc
dec
sahf
insl
int
jb
jne
push
mov
adc
push
fimull
or
test
in
fisttps
adc
mov
inc
or
dec
mov
pop
stos
mov
imul
pusha
pop
inc
mov
pusha
int3
sarl
icebp
ret
lcall
jb
add
movsb
mov
mov
inc
inc
add
mov
add
mov
and
inc
push
inc
push
test
add
xor
test
mov
popf
into
xchg
sub
lds
push
mov
gs
adc
test
iret
jns
xchg
jb
imul
jb
div
repz
arpl
or
aam
mov
enter
and
mov
mov
bound
icebp
test
aas
das
mov
scas
pop
das
mov
mov
int
sbb
xchg
ss
jecxz
orl
shrb
jle
sar
mov
mov
imul
test
cwtl
and
leave
add
aas
or
hlt
inc
or
mov
and
jnp
or
dec
cmpsl
sahf
jae
dec
mov
nop
mov
push
pop
mov
mov
daa
mov
jle
pop
push
cmc
dec
stc
sbb
mov
push
add
add
std
inc
mov
push
rcr
mov
add
sub
dec
jne
jns
gs
pop
pop
jle
sub
pop
in
sbb
mov
lods
cmc
sub
and
loopne
pop
out
ret
leave
mov
cmp
imul
jno
aas
push
pop
out
inc
arpl
push
sbb
sub
pushf
push
cld
push
sti
add
mov
push
inc
push
jp
hlt
sub
push
xlat
daa
sub
fdivs
pop
inc
jl
popf
ljmp
dec
repnz
lret
push
sbb
f2xm1
or
popa
repnz
pop
in
jbe
xor
je
xchg
adc
js
jl
test
mov
pop
lea
mov
dec
fdivr
pop
mov
xor
inc
movb
cli
sbb
push
pop
cld
inc
imul
sub
ret
lcall
scas
daa
cmpsb
push
push
sub
cmpsb
push
ficoml
cltd
lds
stc
fmuls
cmc
push
stc
jnp
add
add
inc
fdivl
push
dec
mov
frstor
add
mov
jne
stc
mov
or
xchg
cmpsl
xor
in
cmp
sti
dec
imul
sbb
jl
jle
xchg
or
push
addr16
push
cmp
jne
scas
xor
lock
mov
fistps
nop
mov
iret
nop
int3
addr16
xor
out
clc
mov
dec
xchg
adc
leave
push
xchg
add
push
insl
in
outsl
pop
stc
push
pusha
adc
hlt
mov
cli
fsubrl
shrb
jns
push
movsb
cmc
stc
xchg
add
addr16
mov
pop
int3
fsubl
movsl
jg
inc
jo
xchg
add
mov
lret
in
sub
in
inc
push
in
jge
cmpsb
lahf
and
push
or
mov
xor
xor
das
mov
mov
inc
enter
mov
adc
mov
mov
fsubrs
mov
jge
or
adc
pushf
add
inc
adc
jb
add
adc
mov
sbb
push
loop
add
add
push
sbb
loopne
push
and
pop
add
cwtl
jle
jae
mov
sti
push
cmovp
cmp
jae
adc
in
lea
js
cmp
and
jbe
pop
sbb
inc
lea
shl
push
add
out
sbb
roll
rclb
cs
roll
repz
adc
and
ds
repnz
and
xchg
mov
mov
dec
cmp
je
test
clc
fdivrs
jbe
mov
leave
ficoml
adc
cmp
aam
sbb
xchg
and
mov
fidivs
pop
sub
es
flds
add
in
xchg
dec
ret
clc
sbb
cmpsl
into
cmp
imul
stc
gs
lods
test
test
fistpll
inc
jmp
popl
rcr
mov
pop
cmp
sbb
test
dec
add
adc
add
add
stos
hlt
jmp
cmp
jbe
mov
das
out
add
add
pop
pushf
out
adc
pop
pop
orb
test
outsl
fmul
and
add
sub
cmp
outsl
cmp
push
fdivl
jle
add
push
mov
imulb
shll
mov
daa
test
push
jecxz
cmc
push
lret
test
and
fwait
and
cmpsl
call
add
push
test
iret
inc
inc
jg
ret
stos
or
mov
or
sub
inc
adc
aad
mov
pop
jp
cmp
leave
xchg
xchg
das
out
mov
push
dec
leave
cltd
cmp
cmp
test
mov
rcrl
and
inc
mov
out
incb
sub
push
xchg
test
sub
loopne
pushf
fistps
popa
mov
mov
dec
cld
and
adc
add
add
push
nop
out
xlat
out
jg
in
xor
flds
movsl
add
add
push
inc
push
cmp
jns
sub
dec
insb
popl
xor
mov
jge
pop
and
dec
pop
aad
out
mov
cs
ljmp
and
pop
pop
jno
cmp
jmp
repz
and
or
mov
cmp
roll
enter
rorb
mov
out
repz
add
add
repz
aas
in
add
out
inc
sbb
jo
sub
nop
scas
mov
mov
sbbb
jo
add
repnz
adc
test
jno
fs
sub
leave
mov
xchg
sub
int
insb
fdivrl
fwait
sbbb
add
imul
jl
leave
dec
jns
or
sub
push
dec
das
icebp
jp
andb
aas
xor
adc
cmp
cwtl
dec
mov
inc
mov
cmp
xchg
pop
cld
mov
add
mov
inc
fwait
lds
jo
fldl2e
into
xchg
jp
icebp
cmpsb
add
add
xorl
lea
pushf
ljmp
and
pop
cmp
notl
cli
and
jge
es
mov
mov
cmp
xor
sub
cmp
mov
imul
popf
mov
and
lea
adc
nop
insb
fs
pop
push
notl
sbb
movsb
addr16
outsb
sbbb
adc
mov
sub
rcll
dec
mov
cli
sti
fstpl
or
call
inc
jecxz
cmp
out
inc
int3
adc
cltd
pop
xchg
xchg
push
sti
test
cmp
jb
xor
out
lds
push
jbe
fidivs
outsl
stos
dec
movsl
and
add
imul
xor
cmp
sbb
aas
sub
and
sub
add
lcall
std
inc
jne
xorl
add
add
mov
dec
pop
mov
push
fistl
and
mov
push
push
inc
ret
hlt
jg
cld
inc
mov
sti
out
xor
iret
andb
xor
ficompl
pop
cmp
nop
xchg
lea
jbe
call
icebp
pop
jb
cmp
xchg
aas
inc
sbb
push
mov
sub
add
int
dec
adc
je
push
add
jle
dec
push
sub
jno
jmp
mul
jns
mov
into
pop
or
sbb
loop
push
insl
pop
in
inc
mov
mov
mov
cmp
xlat
or
scas
xor
repz
lods
sbb
or
stos
pop
jae
and
xchg
int3
pop
xchg
jae
jne
ds
jmp
xor
xor
jmp
and
inc
jp
aad
or
add
lods
cmc
or
sbb
sbb
mov
and
loopne
adc
add
lret
jnp
sti
jmp
push
mov
divb
add
add
jmp
loop
jb
lcall
inc
xchg
shlb
jns
outsb
sub
jns
icebp
fstpt
hlt
xchg
ret
and
repnz
adc
or
pop
ret
js
xchg
ljmp
dec
jbe
pop
rorb
pop
ljmp
add
scas
dec
outsb
cmp
lea
mov
in
pop
daa
imul
cwtl
shrl
out
jmp
pop
sub
dec
cmc
mov
lea
cmp
addl
pop
dec
sub
xor
or
mov
cmp
lods
sahf
jne
out
outsl
push
scas
jl
fistl
lods
les
mov
test
fwait
xchg
mov
sbb
add
addr16
fstpl
pop
stc
mov
lret
movsl
imul
xchg
ss
xor
scas
scas
jns
pop
scas
xor
test
cmp
jo
lock
sbb
into
mov
add
jecxz
lock
xchg
mov
stos
add
add
xor
outsl
xchg
dec
xchg
mov
or
js
jl
adc
mov
in
iret
aas
and
inc
ja
popf
repnz
clc
leave
cmp
ret
cld
pop
mov
jb
hlt
out
cltd
jecxz
cmc
imul
nop
jl
inc
push
aaa
push
rorl
or
cmp
xchg
mov
enter
repnz
dec
jb
addl
xor
inc
popa
mov
or
in
adc
add
sar
push
or
xor
lods
adc
or
rorl
int3
lods
xor
cmp
push
inc
xor
lds
lods
mov
sbb
lds
push
xchg
cmpl
je
aaa
stos
sahf
ja
jmp
adc
or
ljmp
pop
stos
jns
xchg
pushf
scas
idiv
mov
movsb
int3
cmpsl
pop
in
xchg
dec
hlt
aam
add
add
cld
mov
leave
inc
cmp
jno
stos
add
add
xchg
js
stos
jl
enter
rorl
roll
jl
rolb
mov
movsl
js
mov
dec
repz
sbb
fdivl
ret
aad
stos
mov
pop
insl
dec
jge
mov
adc
jecxz
stos
push
or
imul
gs
adc
and
dec
call
mov
in
jb
jle
fcomps
ds
rolb
cmpsl
sbb
in
aad
and
add
pop
mov
mov
adc
mov
sbb
push
push
xchg
sbb
or
cmp
aam
rcl
push
mov
cltd
aam
jl
loope
sub
push
test
fistl
add
mov
cmc
push
and
sub
test
mov
iret
das
push
pop
mov
xchg
dec
ja
xor
shrb
imul
jecxz
das
dec
pop
fcmovnb
xchg
jno
out
add
add
out
cmc
mov
add
cmpsb
or
add
lea
lret
mov
test
xchg
and
cmpsl
push
mov
fcomip
sbb
mov
lds
cmp
xchg
mov
scas
fs
and
dec
aad
popf
in
mov
adc
out
out
sbb
sub
xchg
addr16
lds
sbb
iret
push
jle
clc
xchg
out
mov
mov
shll
add
mov
loope
enter
pop
cld
dec
mov
into
xchg
push
add
insb
pop
adc
adc
test
mov
pop
notl
test
or
cmp
xor
mov
ja
xor
cmc
imul
mov
test
dec
jmp
dec
or
fmull
jg
push
adc
cmp
pop
xchg
cs
push
fidivs
mov
cli
popf
ds
out
nop
inc
in
pushf
mov
mov
pop
cmp
adc
push
and
pushf
inc
dec
mov
je
in
imul
fucomip
std
dec
std
pop
lcall
xchg
pop
push
std
icebp
push
cmp
lods
add
add
rcr
mov
dec
insl
test
push
loopne
mov
xor
dec
inc
mov
sub
mov
adc
cmp
xor
les
pop
lods
jbe
jg
mov
ficomps
pushf
mov
or
add
in
xchg
inc
inc
fistps
es
out
icebp
xchg
mov
fdivrs
add
dec
sbb
inc
xor
mov
scas
pop
jmp
push
mov
call
loope
popa
pop
mov
fsubs
mov
push
sub
aad
push
inc
sbb
inc
xor
out
jno
in
sbb
xchg
inc
push
repnz
xchg
and
test
adc
fcompl
cmpsb
roll
movsb
mov
or
dec
ljmp
jne
add
icebp
sbb
lods
ret
jl
xchg
inc
jle
push
jbe
mov
in
mov
das
lock
add
add
fidivs
loop
ljmp
fsubr
xlat
sub
add
add
andb
addr16
add
pop
cld
lods
xor
and
xchg
fists
jmp
adc
test
or
inc
sahf
test
add
pop
arpl
and
imul
repnz
ret
and
inc
jecxz
pusha
mov
out
add
loop
add
mov
stos
pop
filds
jg
and
movsl
push
dec
xchg
das
fmuls
jo
mov
daa
xlat
in
test
inc
cmp
mov
aam
rclb
repz
test
jl
jl
gs
dec
or
icebp
jno
dec
inc
cmp
mov
std
or
cltd
mov
loop
cld
dec
into
mov
push
jae
dec
push
int
test
les
xchg
out
adc
mov
mov
ret
jge
push
pop
jne
and
fmuls
and
sbb
loop
mov
mov
jno
fdivp
ret
aad
sahf
pop
into
into
mov
and
add
push
xchg
jg
jmp
std
mov
push
aad
scas
add
add
in
add
orb
fstps
push
xor
lahf
or
pop
call
xor
subl
mov
cmp
or
lds
repz
push
int
xor
movsb
cmp
dec
cmpsb
mov
dec
push
mov
inc
and
or
mov
xchg
and
sbb
outsb
xlat
rcrl
and
pop
xchg
into
iret
stos
cmp
inc
ljmp
sbb
cmp
aad
sub
lea
stos
imul
cltd
sahf
mov
fnstsw
pop
push
lcall
cmp
cmp
sbb
push
mov
adc
push
cmpl
mov
xchg
cmp
leave
mov
out
xlat
or
adc
inc
mov
cwtl
mov
enter
out
outsb
or
sub
bound
or
movsb
add
add
xor
inc
mov
iret
and
mov
add
mov
sbb
add
in
and
xchg
xorb
mov
sub
xor
jecxz
mov
in
mov
addb
push
and
mov
gs
push
pop
pusha
icebp
lea
enter
faddl
punpcklwd
into
jbe
rol
cmpsl
jno
add
scas
rorb
outsb
and
jmp
mov
pop
jp
jecxz
cmpsl
mov
xor
mov
cmp
mov
test
adc
mov
out
mov
imul
sbb
je
scas
shll
jae
lahf
in
stos
iret
psrld
sub
dec
dec
fstpl
mov
or
ret
stos
adc
ja
loopne
shll
sbb
mov
xchg
jmp
pop
and
pop
mov
addl
loop
cs
lds
icebp
xor
pop
dec
movsl
mov
into
sahf
loope
adc
cwtl
add
add
xor
cmp
inc
call
push
and
add
cli
incl
mov
add
test
add
movhlps
jg
inc
arpl
sbb
cmpl
xchg
cmp
sub
ret
std
sarb
pop
imul
lods
jbe
clc
sub
std
inc
pop
inc
insl
push
test
mov
xorl
in
add
loope
adc
data16
outsb
xor
insb
js
dec
arpl
mov
iret
rorb
push
loopne
stos
xchg
push
into
enter
testl
inc
push
add
outsl
dec
subb
enter
mov
cmp
ljmp
outsl
ds
add
fnstsw
or
nop
dec
push
and
aad
or
dec
sbb
test
push
subb
xor
sub
adc
psubq
mov
enter
enter
jge
cmc
inc
data16
add
jp
les
mov
arpl
mov
add
push
push
dec
pop
mov
mov
dec
std
repnz
inc
pop
cmpsb
inc
xor
pushl
movsl
push
fildl
les
fwait
cmp
aam
jle
pop
xchg
mov
jecxz,pn
icebp
pop
cmp
fildll
int
cmp
lock
cmp
or
inc
imul
data16
add
lahf
cld
jle
jns
sbb
jno
xchg
nop
outsl
inc
push
push
popa
push
sub
cli
sbb
push
mov
mov
mov
xchg
int
push
cmp
std
pushfw
or
mov
jno
shl
insb
or
cwtl
sahf
and
hlt
mov
sub
adc
pop
lret
mov
cmp
xor
dec
lods
adc
fdivrs
cltd
out
xor
jge
sbb
sbb
aad
cmp
dec
xlat
gs
mov
fsubr
rol
and
ljmp
dec
or
pop
stc
out
push
pop
bound
imul
cmc
mov
mov
pop
fstpt
leave
test
push
xor
mov
sub
mov
xor
jl
mov
in
or
or
bound
lea
dec
xor
xchg
adc
or
pop
jne
fsubp
pop
repz
daa
mov
test
repz
inc
xor
mov
jb
leave
loopne
xor
iret
sub
arpl
loopne
and
cli
fstps
adc
and
test
or
pop
and
adc
push
ret
xor
sub
cmp
popl
mov
pop
pop
lds
jne
xchg
push
inc
jb
fsubp
push
adc
out
in
fldt
cli
mov
mov
imul
mov
add
mov
cld
aaa
push
mov
or
xor
cmp
out
sbbl
ja
sbb
adc
icebp
fildl
sbb
add
add
push
mov
lcall
push
xor
add
push
mov
cmp
insb
hlt
or
iret
cld
aaa
int
mov
or
fistl
mov
cmp
jne
xlat
lock
and
aaa
in
adc
inc
mov
add
mov
test
and
mov
imul
sub
bound
pop
aad
jge
lods
lahf
cmc
add
xchg
jnp
inc
dec
fwait
cmp
dec
orb
xlat
jno
sbb
sahf
push
into
mov
popa
cmp
pop
mov
ss
mov
imul
push
mov
and
int3
push
pop
leave
imul
fcomps
xor
sub
push
shrb
inc
into
out
scas
popf
jbe,pn
repnz
lods
loope
adc
or
cwtl
in
push
mov
loope
rclb
mov
xchg
repz
stos
mov
xchg
stc
xor
dec
xor
fidivl
inc
jg
in
rorb
pop
xor
hlt
sub
hlt
add
add
jne
mov
int3
insb
lret
mov
add
call
imul
js
out
mov
pop
dec
inc
inc
lods
and
sub
jne
mov
xchg
mov
pop
xor
add
xchg
sahf
lods
out
aad
push
sub
iret
and
enter
mov
jns
or
dec
mov
or
jns
xchg
gs
mov
mov
outsb
fldenv
mov
daa
mov
xor
jo
push
push
push
or
cld
les
scas
and
out
xchg
xchg
rorb
out
xchg
adc
jle
cmp
pushl
lahf
mov
jp
cs
mov
xchg
or
ret
lret
loope
xchg
pop
xor
roll
test
cmp
xlat
inc
push
repnz
call
scas
lods
push
aad
lahf
test
xor
sbb
daa
fwait
push
out
xor
fstpl
insl
cmc
xchg
data16
lret
mov
insb
add
add
pop
sbbl
fstp
rorl
and
cmp
add
add
push
xor
loope
mov
xchg
dec
mov
xchg
xchg
mov
sbb
push
leave
rcrl
popf
pop
jge
xor
ds
jl
popa
sbb
faddl
push
insb
mov
mov
sub
fwait
sub
pushf
test
into
stc
fs
mov
pushf
movsl
test
cmp
fcomps
xchg
jbe
push
add
pop
pusha
mov
mov
cwtl
xor
pusha
stos
jb
sub
out
xchg
push
out
pop
dec
leave
std
jns
subps
stos
jne
pop
xchg
fisubl
jmp
cmp
and
mov
pushf
in
cmpb
insl
mov
mov
cltd
jl
mov
sub
jle
shlb
arpl
cmp
arpl
aaa
sbb
pop
rolw
sahf
out
mov
xor
adc
push
xchg
insb
pop
lock
and
mov
adc
sub
adc
test
sahf
adc
mov
out
lret
and
add
add
in
mov
jecxz
out
mov
inc
push
cmovno
add
xchg
and
popf
cmpsb
loope
fnstcw
popf
test
jmp
lods
sub
xchg
mov
dec
and
hlt
mov
aad
mov
mov
js
cmpsl
xlat
push
cwtl
push
pop
or
data16
sahf
pop
in
inc
sbb
mov
icebp
or
inc
rcrl
fildl
fcomi
or
out
push
sti
das
insl
popf
sbb
dec
or
mov
push
and
jecxz
adc
fidivrl
pop
jl
xchg
sbb
xchg
icebp
xchg
jnp
sahf
jge
sbb
test
addr16
jbe
sbb
and
cmp
xchg
push
out
aam
or
loop
inc
mov
test
pop
xchg
mov
mov
xor
xchg
insl
xlat
mov
push
lods
mov
test
pop
scas
dec
dec
sub
sub
add
inc
cmp
sahf
push
cmp
cmpsb
jmp
les
outsl
nop
pop
sbb
adc
mov
mov
add
add
std
test
jg
into
lret
orl
add
add
mov
sub
hlt
fnstsw
cltd
mov
loop
jbe
jl
xor
push
push
fcoms
sbb
inc
pop
mov
and
and
jmp
dec
in
or
inc
sub
and
stos
mov
xor
outsb
xchg
push
jae
movsb
stos
lret
dec
xchg
push
push
in
shr
popa
gs
jo
sarb
add
aam
aas
mov
push
mov
jno
ja
fdivrl
repz
sbb
ljmp
dec
bound
dec
rorb
push
enter
cmp
test
cmp
imul
test
xor
mov
mov
xchg
mov
sub
jns
jmp
ja
jge
jecxz
iret
popf
jne
arpl
sbb
mov
push
push
loopne
sahf
add
and
rorb
push
mov
xchg
fildll
mov
add
add
adc
in
lcall
jae
dec
mov
out
ror
dec
mov
add
shrl
adc
loope
das
pop
push
clc
enter
cltd
test
lcall
add
jns
xchg
test
test
lock
enter
and
popa
outsl
loope
xchg
cmc
pop
and
pop
mov
dec
ret
mov
or
mov
cmc
inc
div
xchg
scas
outsl
mov
push
loope
rcll
imul
repnz
stc
sbbb
daa
cmp
lcall
fs
jo
bound
mov
mov
orl
cmp
adc
ds
js
add
jnp
setbe
mov
outsb
adc
and
pop
lods
mov
lea
insb
in
adc
pop
jge
jge
ss
aad
fs
push
mov
ret
jge
lret
pop
jmp
pushf
repnz
mov
jge
adc
push
mov
hlt
mov
out
lds
xchg
cmp
nop
add
add
sub
jg,pt
dec
arpl
cmpsb
push
mov
add
add
sbb
mov
loopne
pop
jg
leave
cli
mov
jl
pop
jb
sarb
adc
dec
push
push
into
insl
ds
pop
addb
and
sahf
jnp
popf
mov
cmp
sub
push
test
sti
ljmp
stos
jae
inc
insl
rcrl
fiaddl
lahf
lcall
mov
pop
sub
cmp
pop
stos
push
mov
mov
packssdw
and
lods
das
jno
lds
push
and
and
arpl
xor
add
push
sarl
or
stos
aam
xorl
xchg
push
xor
dec
inc
adc
testb
int3
jp
cmp
jns
mov
pop
sub
xchg
lds
fidivrs
jns
sub
rcl
mov
and
lods
movsl
int
shlb
cld
add
push
ret
or
and
insl
sbb
outsl
mov
decb
add
add
jle
mov
sbb
push
inc
shrb
loop
adc
jle
outsb
cmp
lcall
push
jno
jg
lahf
roll
xchg
or
xchg
les
push
iret
shlb
shlb
push
cmpsl
sbb
cmp
fcoml
les
aas
aad
sbb
and
dec
adc
pop
xchg
pop
es
cmp
pusha
les
push
xor
mov
addb
cltd
orl
divl
imul
test
inc
lock
mov
mov
mov
scas
cwtl
pop
xchg
sbb
mov
mov
mov
add
pop
dec
push
aaa
fwait
push
shrl
movaps
rol
add
cwtl
js
mov
pushf
lahf
out
xchg
mov
mov
sub
outsl
dec
out
imul
in
xor
stos
testb
addb
lods
rol
sbb
xor
xor
mov
pop
xor
adc
pop
mov
add
gs
adc
mov
inc
mov
jge
jbe
xchg
mov
repz
hlt
or
pop
ja
xchg
jmp
xchg
outsb
lock
or
xor
cwtl
scas
sbbl
xor
fwait
mov
mov
shll
pop
inc
pop
cmc
adc
sbb
shll
dec
add
fbld
daa
push
in
std
arpl
or
cmp
cmpsb
jg
sub
lods
daa
jbe
adc
xchg
push
incb
pop
dec
or
xchg
push
js
lret
push
mov
loop
ja
pop
mov
push
pushf
dec
jle
fstl
fimuls
icebp
adc
xor
mov
lahf
lds
xlat
xlat
mov
out
push
jae
cmp
and
shr
sti
insl
lea
cmpsb
jo
fdivp
adc
inc
adc
dec
add
inc
inc
insl
xchg
or
in
inc
cmpsb
and
outsb
fistpl
add
fistpll
call
and
jp
pop
mov
add
inc
cmp
insb
sub
adc
xor
mov
or
decl
imul
jnp
rcll
scas
dec
or
dec
jno
and
mov
cwtl
mov
cmp
iret
xchg
xchg
add
xor
js
ja
imul
xlat
flds
adcl
pop
lea
stos
es
fsubs
les
lods
pop
push
pop
roll
push
dec
es
push
aad
in
mov
or
pushf
lcall
mov
mov
ficompl
xlat
push
ljmp
push
sbb
icebp
sub
jmp
jmp
inc
mov
jge
int
sbb
pop
lahf
mov
xor
adc
repz
sti
mov
push
imul
jb
pop
xchg
mov
scas
mov
rorl
add
icebp
and
mov
xor
dec
xor
cmp
add
into
std
sti
leave
sti
iret
jmp
int3
dec
pop
fs
add
xchg
inc
or
inc
imul
push
test
mov
push
cmc
aad
popf
es
push
fsub
fs
test
lea
sbb
xchg
scas
das
fcomps
adc
stos
adc
and
sub
adc
cmp
or
push
lods
dec
cmp
sbb
repnz
stc
inc
shr
inc
repnz
cmpsl
mov
xchg
jnp
test
aam
cmpsb
xchg
aaa
or
push
mov
roll
sahf
in
push
stos
push
sub
stos
cmpsl
inc
inc
xor
test
sbb
mov
pop
cmc
loop
or
testl
and
xchg
shr
out
or
std
and
fmull
jns
xchg
push
and
mov
into
mov
daa
push
rcrl
insb
cmp
imul
popa
jbe
cmp
mov
add
or
sub
sub
cmc
mov
sub
add
mov
mov
xor
mov
add
insl
xor
push
or
out
pop
stos
sbb
mov
add
ss
jecxz
mov
sbb
sbb
test
lock
fcompl
and
arpl
mov
pushf
dec
fwait
add
xor
lods
cmp
xor
repnz
sbb
pop
pop
xchg
xchg
lret
or
or
in
xchg
in
add
stc
xor
sbb
jmp
out
pop
mov
dec
xchg
lds
fistpll
add
fwait
sbb
mov
inc
pop
push
inc
dec
imul
movsl
pop
mov
push
das
xor
inc
jbe
mov
into
in
clc
add
in
mov
test
shrl
dec
xchg
sarb
xor
sbb
mov
movsb
shll
stc
popa
fcoms
xchg
or
dec
pop
cltd
adc
sbb
xchg
adc
sbb
daa
mov
fwait
mov
or
jg
mov
sahf
loop
and
push
add
xchg
xor
sub
push
outsb
scas
test
icebp
dec
movsb
cltd
sub
xchg
call
jno
fs
lds
sub
ret
pextrw
dec
or
xlat
stc
out
shrb
xchg
xchg
push
aas
repnz
nop
inc
in
jg
aas
sbb
movsb
stc
xor
mov
mov
push
sub
jg
lcall
mov
and
adc
jno
pop
adc
sub
movsb
pop
mov
push
sbb
ljmp
cs
pusha
xor
aaa
aam
cld
xchg
scas
jge
mov
sbb
lcall
dec
int
in
push
in
mov
subb
cltd
insb
ss
sub
out
ds
lods
fcomps
xchg
sub
xor
in
push
into
sub
mov
idiv
rcll
ds
int
cli
icebp
push
mov
jle
les
push
add
xor
push
cld
pushl
cld
sbb
jae
add
add
lcall
dec
pushf
or
orb
add
dec
sbb
fildl
imul
insb
std
mov
pop
into
mov
rcll
sub
and
bound
stc
mov
lahf
popa
xlat
aas
les
hlt
or
ds
sahf
cli
repz
inc
orb
push
scas
push
adc
stos
test
xchg
adc
or
repz
jmp
mov
fmuls
add
pop
fcmove
and
rolb
hlt
push
mov
mov
fcompl
hlt
inc
mov
dec
pop
inc
mov
sub
inc
xor
mov
orb
xchg
xchg
inc
pop
add
mov
int3
enter
ficomps
iret
sub
mov
cmpsb
sti
clc
and
and
add
sbb
rcrl
shll
jns
push
lods
loope
cmpl
lahf
sub
and
sub
mov
add
add
pushf
shrb
lcall
push
push
xor
js
add
add
bound
dec
mov
arpl
cmp
xor
popf
fnstsw
push
les
iret
lods
and
inc
outsb
sbb
xchg
cmc
pop
loopne
iret
mov
pop
lcall
icebp
xor
test
ds
inc
adc
jg
cli
cmp
cld
or
fwait
push
xor
testl
add
sbb
fdivrl
hlt
adc
mov
sbb
or
sbb
or
xchg
push
lods
gs
xor
and
nop
and
push
xor
sti
pop
adc
jg
jmp
jno
out
loop
sub
imul
cmp
fisttps
test
cli
inc
ljmp
xor
call
mov
pop
ljmp
and
push
cld
in
pop
jae
xlat
sbb
sti
hlt
lea
pop
add
mov
sbb
out
add
sub
scas
mov
aas
scas
fldcw
ret
add
add
inc
jmp
adc
mov
pop
and
jl
loope
call
pushf
and
and
scas
arpl
ret
jne
js
push
shlb
imul
mov
push
ret
repnz
jns
lea
in
jp
push
xchg
mov
dec
xor
jbe
call
in
lods
imul
int3
mov
xchg
sarb
lret
aaa
mov
jo
jle
xchg
js
leave
fcmovnbe
gs
mov
rclb
jp
ret
adc
sub
adc
popa
jmp
push
mov
stos
out
pop
aam
loopne
into
add
xor
cli
insl
les
repz
movsl
aam
scas
pop
lods
or
in
cs
xchg
jbe
daa
xchg
fwait
mov
mov
cmc
inc
outsl
mov
insb
lahf
adcb
jmp
dec
or
mov
add
test
movsl
jl
cmpsl
test
push
fcmovne
mov
fisubrs
test
lods
mov
sub
add
jg
jne
jne
jg
loop
mov
leave
add
add
sub
jb
out
mov
adc
scas
daa
imul
lcall
nop
xor
jnp
and
xor
mov
mov
xchg
lds
ret
xor
std
pop
adc
insb
adc
lods
mov
cld
lahf
dec
xchg
adc
xchg
fmulp
leave
imul
jae
int
push
xchg
cmp
loopne
jmp
fidivrl
iret
call
or
cmp
xor
gs
cli
add
lds
sbb
test
jo
jmp
out
or
mov
lock
lret
or
xchg
popf
jmp
cld
xchg
dec
jne
addr16
cmpsl
adc
fisubl
mov
jmp
cmpsb
mov
fsts
or
inc
xchg
stos
fimull
sub
jno
aad
mov
adc
ja
sub
out
jno
stos
mov
negl
add
dec
pop
mov
cmc
mov
call
add
cltd
adc
sub
add
in
ss
sub
aam
xor
pop
popf
mov
subb
scas
inc
insb
incl
mov
fcmovb
sub
dec
dec
rcl
lret
xor
mov
dec
cmc
rclb
sbb
sbbb
pop
fldl
mov
shrl
fstpl
jge
bound
ja
sub
and
cmp
mov
adc
in
movsb
mov
cwtl
subl
popl
outsl
cmp
xchg
push
imul
dec
mov
xchg
mov
jae
cmpsl
aam
cmp
addr16
cmp
sbb
pushf
cmp
aad
pop
lcall
mov
xor
gs
pop
mov
out
icebp
or
testb
adc
inc
jbe
daa
inc
ret
xor
add
outsb
jle
lods
testl
movb
add
je
pop
out
stc
dec
pop
dec
adc
sub
ljmp
xchg
lods
fstpl
xchg
insl
jp
int3
out
jb
mov
ret
inc
xor
inc
loop
lret
scas
mov
inc
ret
nop
and
xchg
out
lods
gs
xchg
lret
dec
stc
mov
pop
or
cmp
stos
data16
fcompl
lret
dec
adc
and
jp
dec
push
jae
jne
inc
outsb
test
inc
fs
jno
jae
xor
mov
int
mov
fucomp
jl
sbb
or
xchg
cmp
or
pop
inc
mov
lea
mov
adc
in
aad
mov
mov
loope
mov
mov
dec
rorl
movsl
sbbl
hlt
mov
jo
test
and
int3
fwait
dec
inc
push
cmpsb
sbb
mov
cmc
mov
insb
adc
fs
pusha
mov
aad
jmp
cwtl
jne
insb
mov
test
sub
add
mov
mov
add
out
xchg
movl
add
sub
mov
or
int3
xchg
pop
and
or
test
inc
sbb
xor
lret
or
ss
lods
add
test
xchg
outsl
lret
mov
mov
test
dec
or
lahf
inc
stc
divl
pop
dec
add
xchg
dec
mov
int3
movsl
xorps
push
mov
jg
mov
adc
cwtl
icebp
sub
cmp
ljmp
jnp
repz
into
mov
cld
jbe
xorb
xor
push
lret
test
pushf
sahf
iret
sub
outsl
sub
mov
adc
mov
pop
movsl
stos
lgs
lds
pop
stos
call
ss
bound
cmc
lahf
imul
fs
cmpsl
lret
insl
jl
push
push
out
add
lods
cmp
lea
sbb
push
add
add
test
sbb
xlat
in
aad
scas
inc
dec
pop
xchg
enter
add
add
lcall
in
push
mov
ret
mov
add
aaa
lret
sbbl
cmpsl
lods
enter
mov
xchg
push
mov
xor
cmp
push
enter
and
mov
pop
cmp
bound
mov
push
inc
dec
loop
mov
xchg
jae
pop
dec
je
dec
enter
cmp
mov
pop
mov
pop
mov
scas
test
pop
and
mov
xchg
imul
mov
in
and
and
dec
sbb
das
add
in
mov
dec
arpl
daa
int3
lret
jno
jb
mov
inc
mov
ffreep
subl
pop
rcrb
mov
xor
nop
dec
cmp
cmp
xor
adc
ss
aaa
adc
fs
mov
and
mov
push
ss
repnz
pusha
lods
push
fists
and
bound
lret
and
int3
outsl
and
add
add
push
sub
cmp
jg
and
mov
js
adc
fwait
leave
add
add
lea
mov
ret
outsl
mov
arpl
popa
in
pushf
stos
dec
or
push
mov
out
adc
ja
fistl
shlb
test
inc
ljmp
fwait
testb
cmc
push
and
data16
adc
mov
jb
test
andb
iretw
imul
inc
cmpsl
add
scas
das
sbb
add
sub
int3
xor
unpcklps
lea
jg
push
and
sub
push
clc
ljmp
int3
jmp
add
adc
cmc
push
mov
xchg
ficomps
inc
mov
add
inc
push
xor
mov
loope
lea
or
imul
or
sbb
add
lret
outsb
ljmp
push
push
imul
pop
sub
mov
push
jns
cli
cmp
inc
ja
lret
mov
inc
js
add
add
xor
fistpll
out
repz
fcoms
sub
add
add
int3
inc
into
sub
nop
lds
les
test
push
daa
ds
mov
xor
aaa
out
dec
shrb
xor
sub
mov
push
lods
push
mov
xchg
bound
inc
loope
leave
pop
xchg
lahf
mov
int
xchg
or
cmpl
out
aad
jle
loopne
mov
repz
popf
dec
pop
int3
andb
adc
xchg
rcl
es
clc
ja
insb
fcomi
push
or
decl
out
push
inc
iret
push
roll
aas
jb
xlat
gs
movsl
call
test
xor
mov
cwtl
bound
xchg
lods
pop
or
sub
inc
ret
dec
mov
mov
stos
mov
mov
nop
cwtl
inc
cli
stc
int
nop
in
and
scas
lods
mulb
xchg
jo
stos
dec
jns
mov
scas
or
icebp
adc
mov
testb
add
mov
mov
mov
adc
movsl
lret
add
add
dec
insl
mov
inc
adc
xchg
stos
mov
mov
pop
pop
pop
jmp
add
es
xchg
push
rorl
and
mov
cmp
jbe
lret
mov
adc
je
and
leave
jnp
aas
jae
adc
fsubrl
cmp
popa
mov
xchg
fmulp
dec
das
add
push
dec
mov
fs
xor
notb
jno
pop
aam
rorl
sub
mov
mov
lock
xchg
mov
jno
scas
sub
add
mov
repz
iret
lods
and
add
cmc
inc
dec
in
repnz
nop
cmp
stc
mov
sbb
sti
pop
jl
add
subb
not
mov
xlat
add
lods
jno
mov
fcmovb
push
or
out
jl
pop
dec
aas
xchg
clc
bound
sti
push
mov
ds
les
add
enter
in
sbb
push
inc
push
scas
cwtl
fldcw
add
add
xchg
lods
sahf
imul
or
add
fldl
shrb
lods
mov
dec
nop
and
imul
test
mov
out
jnp
lret
mulb
repz
mov
sub
std
lds
jg
addr16
mov
loopne
or
stc
xor
or
je
popf
lods
insb
and
dec
inc
scas
rcrb
loop
dec
cmove
aas
adc
stc
cld
bnd
rcl
rcrl
sbbl
mov
sub
es
mov
adc
dec
cwtl
lods
xbegin
push
mov
mov
into
pop
test
sarb
shll
enter
fildll
push
cltd
xor
ret
mov
fmulp
imul
leave
leave
adc
push
mov
int
cwtl
pop
push
movl
data16
mov
add
jne
imul
cmc
call
inc
push
popa
fs
sti
pop
scas
int
add
clc
cmc
dec
push
push
lods
push
cmp
xor
or
ret
repz
dec
pop
pop
inc
jl
es
int
aad
and
lret
mov
push
int3
lock
add
imul
dec
cwtl
jge
mov
loopne
es
leave
inc
imul
hlt
into
dec
push
and
push
fcomi
scas
fadd
js
je
fisubs
add
and
jge
mov
xchg
es
lcall
inc
shrb
or
pushf
and
jp
adc
cs
and
nop
xlat
lcall
push
or
fisubs
leave
xor
vpmullw
jge
int3
icebp
pextrw
lcall
in
leave
jb
imul
fisttps
mov
dec
mov
arpl
jnp
push
dec
sarl
or
cltd
jno
cmp
pop
mov
or
add
movsl
mov
iret
sub
test
add
add
jo
pop
inc
data16
ljmp
inc
pop
add
imul
jmp
push
add
pop
scas
sub
add
pop
sub
nop
sarb
mov
push
out
mov
stc
rcrb
sbb
fists
mov
mov
xchg
pop
add
jg
add
push
adc
into
arpl
pop
xchg
xor
mov
mov
dec
repz
sbb
pop
lcall
adc
jl
push
sti
mov
mov
out
shr
add
ja
into
cmc
movl
sti
and
mov
or
or
adc
xor
sub
pop
add
stos
mov
and
xchg
pop
les
adc
aam
hlt
pop
adc
jns
lea
cli
leave
stos
mov
daa
mov
cld
leave
add
add
out
into
gs
cld
test
pusha
imul
add
or
or
pop
sbb
pop
fucomi
pop
sub
cld
or
xorb
test
aaa
sub
js
jnp
xchg
cmp
push
jmp
inc
add
in
cld
ret
cmp
inc
dec
jns
push
inc
fld
xlat
imul
cmc
jmp
stos
sbb
xor
inc
cmpsb
ss
mov
mov
inc
les
mov
sub
popf
arpl
dec
cmp
cli
add
push
lds
pop
dec
or
jle
clc
dec
and
mov
push
lret
cmp
pop
int3
inc
push
sub
jne
je
stc
sbb
dec
rsqrtps
addr16
insl
push
sub
jo
outsl
dec
cs
jns
xor
scas
test
psrld
adc
out
sbb
cs
push
out
lret
adc
dec
cld
sub
cmc
movl
add
loopne
and
je
out
mov
sahf
rcll
add
into
lods
xchg
add
icebp
imull
xchg
mov
sbb
pop
shlb
inc
sub
inc
xor
pop
or
fs
les
aas
fsubrs
inc
mov
ret
aas
in
test
or
loope
jge
in
lods
dec
sahf
lahf
xabort
or
mov
cmp
sbb
dec
mov
int3
rcr
movsl
cld
push
sbb
pop
rcrb
lret
or
sti
ja
pusha
lods
lods
inc
fwait
jbe
adc
je
cmpsb
int3
notl
jb
sbb
mov
mov
test
add
enter
sub
scas
gs
add
or
das
pop
sub
lcall
mov
inc
and
fdivrs
mov
jmp
cmc
roll
mov
cmp
jo
mov
xlat
cmp
les
dec
jp
and
add
dec
daa
dec
das
outsb
imul
push
xchg
pushf
inc
gs
ret
roll
add
or
sbb
mov
stc
jb
into
push
dec
xchg
xor
cmp
dec
movsb
test
sbb
inc
or
shrb
jge
inc
sarb
in
out
icebp
hlt
rol
mov
mov
cmc
enter
mov
push
pop
mov
fcomip
xchg
mov
in
jl
adc
sbb
jbe
xchg
ja
and
cli
pushf
push
or
jmp
fcompl
mov
cmp
popa
mov
movsl
lret
cli
sbb
movsb
mov
mov
pushf
and
mov
lods
cltd
ret
pop
jno
adc
mov
push
shlb
or
push
repnz
shlb
mov
cmp
mov
ss
jl
jae
inc
sbbl
or
mov
mov
loope
mov
cmp
ljmp
mov
cmp
movsb
jo
add
call
out
lahf
ret
or
rolb
add
pop
nop
leave
dec
pop
clc
dec
cmp
sub
roll
dec
call
ret
rcl
fcompl
push
xchg
jg
mov
sti
cmp
lods
or
adc
lahf
aad
iret
xchg
mov
cmp
xchg
insb
lea
lods
call
mov
dec
push
and
imul
cltd
xchg
lock
int
adc
sub
adc
imul
adc
mov
push
cmp
sub
or
add
push
ret
mov
das
xchg
popf
push
lds
mov
inc
mov
in
out
lods
ret
inc
bound
adc
add
jbe
mov
lods
pop
js
mov
sti
mov
jg
cmp
mov
jae
push
or
and
ja
pop
sbb
sbb
fcmovu
jg
bound
ds
pushf
add
inc
mov
into
push
gs
add
add
neg
outsl
push
xchg
or
roll
add
out
ds
push
xchg
stos
inc
imul
sbb
mov
or
add
bound
jecxz
aad
pop
push
pop
mov
out
dec
dec
xchg
data16
hlt
sub
pop
mov
mov
push
jae
inc
xchg
sub
sub
cmp
movsb
add
ret
je
dec
lods
lods
jmp
sbb
popf
mov
jp
add
and
ret
sahf
mov
or
mov
into
test
daa
cld
jns
rclb
inc
dec
cmp
pop
ret
rcrl
out
mov
shl
cmp
call
inc
and
push
mov
push
in
adc
insl
test
dec
jge
inc
cmp
push
iret
and
insb
jl
ret
out
aaa
sub
es
mov
pop
sbb
push
and
repnz
cmp
mov
ds
and
push
inc
mov
mov
lock
push
pop
out
jae
adc
or
cmp
add
add
add
sbb
sub
dec
shrl
add
add
inc
stos
mov
insl
mov
fisubs
xchg
in
outsl
pop
cld
shr
push
fstl
scas
mov
adc
call
scas
roll
xlat
or
and
pop
mov
int3
cltd
push
mov
mov
sbb
sbb
ret
lods
cwtl
sbb
xchg
sarb
fld
out
pop
push
fbstp
jmp
xchg
xchg
inc
idiv
stos
testb
push
jnp
and
or
sub
cltd
cmp
mov
loope
dec
scas
aas
idivb
jns
jecxz
jg
sub
shlw
adc
aad
fstpt
popa
mov
cmp
ljmp
or
add
std
jno
mov
mov
sbb
jae
lret
lods
mov
jl
andb
sahf
daa
aaa
push
xchg
pop
addr16
iret
test
je
cmp
inc
push
add
add
ds
jae
fs
leave
xlat
aad
add
jg
mov
outsb
or
dec
in
cmpb
inc
or
loop
out
and
xchg
js
inc
add
test
xor
push
scas
inc
dec
scas
or
xchg
sub
repz
fwait
mov
pop
jle
repz
movsb
int
iret
pop
mov
es
and
call
sti
mov
aam
and
dec
lret
sahf
sbb
pop
xchg
pop
icebp
std
xchg
sub
xorb
cmp
add
sbb
imul
popa
adc
cltd
inc
outsb
jae
scas
adc
jge
add
sbb
inc
ret
pop
xor
jns
pop
push
out
data16
enter
add
cmp
fdivl
push
mov
ret
cwtl
test
leave
insb
gs
adc
xor
jl
test
add
add
lcall
jnp
cmpsl
add
sar
dec
pop
pop
adc
jae
movnti
mov
lahf
das
jl
jno
das
aam
stos
hlt
inc
cwtl
adc
pop
push
sub
mov
fs
ljmp
imul
out
je
jmp
push
jno
std
inc
rol
sbb
icebp
jbe
aas
shrl
and
cmp
jno
add
xor
out
aam
in
sbb
xchg
and
outsl
xchg
jo
dec
popf
outsl
jmp
push
js
and
stos
popa
jp
cli
sbb
daa
jb
iret
test
jo
xor
and
jb
mov
insb
add
mov
and
pop
inc
mov
mov
mov
popf
movsl
mov
sub
dec
xor
enter
icebp
sbbl
callw
add
fmull
mov
js
shll
dec
inc
les
gs
rolb
aaa
lret
fiaddl
add
cmp
jg
leave
or
dec
inc
pop
or
xlat
add
add
xorl
mov
fisubrs
sti
jne
xchg
lods
ret
loopne
cltd
ret
sub
xchg
scas
jge
sub
mov
xchg
fldt
test
fnstsw
mov
and
xor
fldt
mov
and
xchg
shrl
pop
xor
fldl
cwtl
push
jo
sti
repz
push
xor
in
test
shll
je
adc
xchg
mov
and
out
aaa
notl
add
mov
popa
mov
xchg
loop
clc
pusha
iret
aas
aam
daa
int3
sub
fmul
or
sbb
pusha
push
pop
mov
jne
imul
xor
loop
enter
mov
shll
sbb
rcrl
test
addr16
jp
and
js
xchg
inc
in
pop
sbbb
mov
add
add
int
out
out
imul
nop
xchg
movsb
xor
mov
out
add
add
sub
mov
loop
icebp
daa
and
ret
mov
mov
jmp
xlat
mov
inc
dec
pop
cs
dec
xchg
fs
cmpsl
arpl
enter
addb
xchg
int
les
aad
in
push
mov
mov
xor
fisubrs
leave
cmp
cvtpi2ps
lock
fmulp
add
cmp
sub
gs
hlt
test
mov
fildll
push
xchg
imulb
iret
dec
mov
sub
cld
mov
cmpsb
repz
insl
sub
lds
and
dec
or
xor
lcall
aaa
not
fisttps
pushf
sbb
pop
fmuls
cmp
lods
fisttpl
bnd
cwtl
and
stos
movsl
stos
das
sub
sub
dec
jge
push
roll
add
dec
mov
push
cmp
jnp
add
mov
mov
ficompl
sbb
push
dec
mov
add
add
psubusw
push
in
sub
imul
add
add
sbb
xchg
es
sub
andb
push
loopne
aam
leave
std
test
sbb
sub
pop
in
stos
jo
aad
and
mov
in
cmp
inc
mov
sub
adc
xchg
sbb
hlt
mov
add
jge
mov
and
add
push
int
xchg
jge
subl
or
cmpsl
popf
int3
repnz
out
jge
push
sub
lret
pop
and
aas
inc
fstpt
shll
sub
jmp
cmp
rcll
stos
mov
xor
movsl
jb
aaa
pushf
xor
adc
int
xchg
or
and
jge
into
ja
mull
scas
mov
cmpsl
jno
mov
insb
out
mov
xchg
xor
mov
mov
jno
lods
insl
push
fcomps
sub
fildll
loop
mov
and
sub
daa
cmp
inc
mov
add
add
sbb
sahf
cmc
fsubrp
jnp
sti
enter
fcmovb
lock
add
repnz
movsl
dec
mov
and
aad
ret
insb
repnz
or
test
add
inc
popa
aaa
push
stos
adc
aad
jno
scas
pop
lcall
andl
inc
and
push
push
ret
fsubrs
ds
mov
lock
aaa
cmp
dec
push
pushl
or
and
push
push
sbb
sahf
pop
xlat
in
push
sbb
mov
mov
pop
sub
icebp
xchg
loop
pop
dec
jae
fidivs
xchg
mov
repnz
mov
jb
lahf
cmp
mov
cmpsb
fisttps
ds
rorl
mov
fwait
push
mov
faddl
jbe
or
sub
clc
lcall
outsb
movsl
and
nop
fnstcw
lahf
inc
push
pop
sbb
cltd
lods
pop
fiaddl
rolb
shrl
imul
add
jnp,pn
fsubrs
fs
pop
lret
rolb
cmp
add
pop
dec
jle
jg
std
fstpt
ds
cmc
fildl
add
cmp
je
icebp
pop
aad
rclb
mov
inc
bound
adc
or
ja
xchg
add
push
popf
jg
aaa
xchg
xorl
push
clc
pop
cmp
mov
xchg
lods
add
push
dec
ljmp
sbb
ror
call
cmp
in
mov
daa
mov
aam
or
mov
outsl
cmp
test
xor
ret
pop
out
inc
push
mov
outsl
xchg
pop
adc
xor
adc
jnp
cmp
jl
push
loope
pop
ljmp
in
aad
mov
call
mov
into
push
push
or
mov
push
lods
pop
mov
push
and
jle
inc
sub
hlt
out
ss
add
mov
add
idivl
inc
jae
cmpsb
mov
mov
mov
push
inc
and
cli
pop
in
mov
push
xchg
andb
rorb
jno
loop
adc
jne
add
cmp
ljmp
pop
and
cli
faddl
add
aaa
arpl
inc
scas
call
mov
mov
pop
arpl
fs
xchg
push
js
jno
int
fstpt
out
dec
pusha
mov
dec
push
inc
cmp
das
test
fwait
adc
pop
mov
add
sti
aad
mov
andb
or
add
push
or
addr16
repnz
mov
pushf
sub
cs
jmp
mov
xchg
cwtl
mov
out
sub
push
mov
pop
mov
inc
mov
inc
cmp
adcl
fiadds
mov
mov
out
jne
push
sbb
cmpsl
xchg
addl
push
dec
lcall
xchg
mov
cwtl
cmp
jb
in
fldl
adc
cli
push
xchg
cmp
in
push
je
cld
pop
pop
add
jmp
in
nop
mov
inc
push
lds
or
add
sbb
jmp
scas
inc
call
fldl
add
test
loopne
xchg
or
lret
mov
arpl
outsl
jno
test
mov
add
lea
hlt
bnd
shl
xlat
xor
cwtl
int
jmp
insb
jp
xchg
inc
mov
arpl
cli
cwtl
lock
jle
inc
daa
mov
push
orb
iret
fbld
mov
or
pop
cmp
ljmp
sbb
repz
sbb
out
loopne
jmp
mov
pop
xor
pop
cld
sub
test
add
sahf
shll
pop
addr16
ja
sbb
push
mov
xor
test
iret
mov
leave
pushf
jnp
jbe
in
ljmp
and
bound
hlt
or
or
fisubs
fldl
and
push
adc
jg
clc
sbb
repnz
mov
push
popf
fwait
bound
add
push
out
faddl
lahf
add
add
add
xchg
fcomp
and
cld
mov
imul
fs
les
xchg
hlt
dec
scas
or
sub
sub
sti
or
out
filds
xchg
xor
cmp
movsl
inc
cs
sarb
xor
xor
or
into
mov
push
sbb
dec
push
pop
dec
test
loop
or
sbb
mov
loope
addl
and
mov
dec
jne
inc
mov
jmp
ja
add
sbb
aaa
mov
add
adc
sahf
dec
shl
aam
pop
daa
jle
ficoms
lahf
ds
xor
xor
mov
adc
lret
mov
add
rcll
cmp
lret
imul
add
jl
add
divb
sub
in
ret
jmp
or
xor
add
dec
jl
xor
jle
int
pop
cs
scas
add
add
mov
lcall
fisttps
or
or
add
add
pop
and
test
adc
mov
dec
xchg
addr16
push
loope
sbb
cmpsl
subl
test
inc
push
les
popa
lods
addl
or
mov
int3
xchg
int3
outsb
dec
mov
outsl
scas
popa
or
push
fnstcw
mov
cmc
sbb
sub
nop
xlat
sbb
and
pop
fsub
loopne
jo
or
mov
lods
xor
dec
dec
dec
mov
xchg
outsb
iret
test
push
mov
pop
add
mov
decl
cld
mov
je
cmp
mov
stc
push
jle
or
leave
hlt
push
jnp
cmpsb
jbe
mov
popa
jl
pop
mull
mov
xor
and
dec
mov
cli
fimull
sahf
pop
push
jecxz
lcall
mov
sti
stos
or
jp
fisubrs
mov
mov
adc
dec
jle
jns
add
sbb
jns
xchg
xchg
mov
mov
pushw
loope
add
pop
mov
outsb
cmpsl
imul
in
jg
pop
mov
rcll
into
pop
test
and
imul
loopne
daa
in
out
sbb
mov
scas
adc
stos
push
ja,pt
ljmp
xchg
mov
daa
cmp
mov
xchg
pushf
sbb
je
dec
lods
mov
inc
lret
or
cmpb
stos
or
cmpsl
nop
cltd
cmp
cmp
jae
movsl
dec
lock
push
stos
push
incl
xchg
inc
into
cltd
cs
inc
sub
adc
repz
jmp
ss
jg
adc
pop
mov
cmp
inc
or
add
push
ja
mov
mul
orl
and
shr
add
aas
fnstcw
inc
movsb
sub
enter
inc
inc
sub
clc
aad
add
gs
jl
cltd
into
push
pop
inc
push
add
call
add
fadd
fsubp
jnp
or
cld
les
jl
loop
add
cmc
xchg
push
sahf
test
dec
dec
add
and
stc
mov
loope
xor
hlt
test
jns
or
fs
lret
mov
cmp
movsb
mov
test
cmp
xor
int
lcall
fldcw
mov
daa
sbb
in
jne
xchg
mov
in
ret
or
lea
mov
adc
nop
ret
push
lods
pop
call
add
pop
fildll
adc
adc
incb
push
xor
mov
lcall
in
outsb
les
dec
cmpsl
int
sbb
or
lods
jle
into
into
lods
inc
mov
push
lcall
jg
push
out
dec
fcmove
shl
cmp
out
fisubs
and
inc
jbe
pop
call
jmp
daa
jle
addr16
dec
sbb
lcall
push
push
cmp
sub
cld
cli
jle
dec
nop
xor
sarb
sbb
add
add
cmc
int3
test
scas
or
push
mov
push
pusha
push
dec
push
ja
mov
and
das
jg
or
mov
in
fstpl
enter
push
lock
idivl
in
inc
jno
cmp
cmpsl
stc
and
in
ljmp
cwtl
outsb
mov
or
cmpsl
std
jmp
xor
fcmovnbe
frstor
imul
test
dec
in
dec
rcrb
dec
mov
jecxz
jg
sti
xchg
inc
cltd
mov
nop
adcl
addr16
test
push
ficompl
in
mov
fucomi
rcrl
movsl
dec
cmp
xor
inc
xchg
fdiv
xchg
insl
pushf
cmp
out
cli
out
daa
mov
add
inc
nop
sahf
pop
sub
pop
sbb
cmp
imul
or
xlat
xchg
call
dec
das
ss
int3
push
sbbl
jns
xchg
sub
fbld
push
clc
cmp
pusha
jae
xchg
cmpsb
lret
stos
add
add
ja
sti
aaa
out
ja
notb
sbb
add
add
xchg
scas
arpl
sub
sub
adc
mov
sarb
pop
imul
push
sub
mov
enter
pop
roll
push
aas
pop
lds
xor
mov
out
fdivrs
mov
cmp
jmp
stos
mov
cmp
pop
mov
inc
pop
roll
mov
dec
jbe
inc
inc
cmpsb
shll
push
dec
xchg
sub
mov
lods
out
or
dec
icebp
xchg
jnp
mov
push
into
jno
push
out
insl
inc
ret
rcrl
sub
test
mov
xchg
mov
test
adc
ret
mov
testl
stc
lea
roll
xor
pop
mov
jp
xchg
das
shrl
sbb
or
mov
cld
xchg
xchg
ljmp
cmp
jmp
mov
xor
nop
out
testb
add
into
arpl
pop
xchg
aaa
pushf
ret
lret
add
add
lret
dec
inc
sub
jge
out
xchg
ds
cs
push
push
in
sub
mov
cmp
lods
daa
aas
pop
ret
dec
arpl
xchg
mov
hlt
clc
sbb
stos
push
pop
jp
and
aam
inc
xchg
pop
cmp
inc
jo
mov
in
adc
out
lcall
leave
adc
cmp
iret
enter
pop
scas
test
mov
sbb
inc
xchg
out
cmp
push
enter
inc
mov
loop
pop
mov
rclb
mull
popa
jb
push
xchg
rcrb
push
loope
imul
ljmp
xchg
xor
inc
movsb
fdivs
cmp
or
lret
repz
cwtl
adc
sbb
ret
daa
ja
inc
aam
push
add
pop
push
cmp
aaa
mov
fisubrl
pushf
dec
sbb
mov
add
jae
subl
add
add
ja
lcall
mov
imul
add
add
or
sti
push
and
sbb
js
push
popa
push
sbb
cmp
out
sub
push
cmp
push
int
filds
add
jne
sbb
pop
push
idivl
fisttpll
lahf
adc
push
stos
pop
mov
dec
icebp
sbb
dec
push
and
cmp
repnz
test
mov
pop
insl
dec
add
or
aam
cmp
cmpsl
lcall
gs
and
inc
in
sti
push
in
andl
adc
pop
rorl
sahf
gs
dec
push
push
cld
cmp
lret
pop
lds
or
mov
in
aas
scas
loop
cmc
jbe
fisubs
sbb
mov
adc
sti
mov
movsl
adc
mov
or
sub
pop
loope
ret
cmc
xchg
notb
xchg
mov
dec
outsb
inc
lahf
or
mov
mov
add
add
add
lock
jg
in
and
dec
adc
out
add
mov
sbb
insb
enter
popa
sbb
add
xor
das
pushf
clc
movsb
sub
aam
outsb
mov
sti
aad
cmp
dec
subl
fbld
ds
sub
enter
lret
add
mov
and
iret
mov
push
jge
insb
bound
mov
lds
xchg
pop
sarb
push
xlat
push
rorb
cwtl
and
add
fldenv
stos
loope
pop
jle
enter
pop
inc
imul
jmp
outsb
sbb
loope
and
mov
stos
fildl
xor
test
lods
clc
pop
mov
test
rorl
or
ss
pop
xor
mov
and
lds
lods
push
imul
lret
pop
push
xor
or
fmulp
data16
add
pop
xlat
fistpl
sub
pop
xor
add
add
sub
mov
roll
rorb
fs
mov
fst
lcall
fsub
adc
xor
sub
xchg
pop
out
fistpl
and
mov
pop
fistpll
jecxz
push
sub
je
or
jno
xchg
out
out
int
ds
add
shlb
ret
cmp
shlb
jecxz
enter
adc
jl
pop
xacquire
rol
hlt
fdivs
push
stos
jecxz
popf
adc
testb
shl
sbb
es
bound
and
jbe
nop
andb
outsb
in
sbb
outsb
sar
inc
push
mov
shrb
jnp
jne
mov
loope
jg
jmp
xchg
and
mov
mov
mov
shlb
fwait
call
shrb
pop
sti
test
lret
push
sbb
imul
add
add
mov
dec
js
stc
mov
dec
int
sti
and
pop
ss
add
lds
pop
rorb
std
mov
cmp
insb
cld
out
pop
fcomi
mov
jl
pminsw
inc
ret
adc
dec
jle
adc
push
scas
xchg
lods
xchg
shrl
movsb
loope
insb
int3
sbb
ret
aaa
push
and
jae
pop
push
das
push
int3
sbbb
or
loop
adc
fwait
stos
add
dec
inc
lock
push
xor
lahf
pop
ret
sub
push
mov
pop
pop
es
adc
out
lret
loop
mov
add
pop
out
jns
repnz
mov
dec
and
mov
out
lret
mov
loopne
movsb
cmp
cltd
hlt
pop
sbb
add
gs
pop
out
cwtl
outsb
mov
daa
add
nop
outsl
cmpsl
pop
add
or
test
or
push
adc
addr16
xor
leave
mov
cld
in
add
and
inc
fdiv
movl
mov
pop
insb
fildll
fwait
jns
jns
add
aam
ljmp
mov
icebp
adc
subl
stos
and
test
clc
lahf
vmread
ret
and
or
add
pop
cmpsb
addb
mov
xor
js
dec
pusha
gs
call
inc
adc
mov
jb
insl
testb
out
adc
jbe
sub
testl
xor
pop
adc
aas
stos
mov
stos
adc
outsl
jle
ds
mov
xor
les
or
lret
adc
addr16
pop
or
or
mov
xor
out
lahf
dec
cmc
pop
xor
arpl
in
ja
imul
mov
xlat
mulps
aaa
sti
shll
ds
or
xor
push
in
pusha
bound
arpl
mov
in
xchg
aas
mov
outsl
mov
xchg
cmp
xor
stc
or
lahf
dec
and
movb
fnstsw
mov
add
cmp
jnp
adc
jne
or
int3
xchg
inc
jmp
add
ror
mov
mov
mov
push
cwtl
mov
or
push
push
insb
aas
in
into
cmp
add
sbb
inc
loope
dec
aad
movsb
test
test
jg
inc
xchg
jnp
adc
imul
or
adc
and
jle
sub
iret
inc
nop
out
dec
pop
loopne
mov
addr16
hlt
lds
push
movb
inc
cmp
xor
xchg
and
loopne
jmp
insl
outsl
xchg
outsb
mov
push
lock
cmpsb
in
in
xchg
push
inc
lock
popa
outsb
lret
mov
push
dec
js
mov
xor
push
mov
ret
inc
fdivrp
jmp
nop
sub
loope
sub
mov
xchg
icebp
addr16
xchg
inc
xor
in
cmp
xchg
les
icebp
xchg
cmp
adc
push
repz
cltd
aad
push
cmp
vpshuflw
addr16
je
sbb
add
out
lods
xor
aas
xlat
fistl
das
decb
enter
add
mov
pop
mov
mov
loopne
ja
mov
movl
or
sarl
adc
movsb
adc
lods
out
fstpt
mov
jl
and
mov
push
shlb
movsl
pop
ds
mov
push
mov
inc
enter
pop
fadds
lret
xor
cs
pop
mov
icebp
inc
das
and
mov
mov
pop
cmp
jb
int3
xchg
sti
cmpb
lret
xor
pop
mov
orb
adc
jbe
ror
scas
jbe
or
mov
jns
or
mov
add
and
into
testl
pop
pop
adc
push
cli
fwait
jno
push
push
jnp
push
add
mov
push
js
mov
aad
cli
fdivr
xchg
push
cmpsb
or
inc
rcr
and
adc
mov
leave
jb
cld
fsubrl
push
xchg
pop
dec
add
add
add
jb
scas
decb
fisttps
inc
mov
dec
in
add
add
rorl
sub
xor
bound
mov
rcrb
fidivrl
xor
stc
dec
and
jnp
mov
popaw
lods
subb
mov
fldenv
aad
and
and
insb
repz
cmp
lea
push
cmp
push
sarl
mov
notb
clc
aas
out
movsl
dec
lds
cli
ds
mov
cli
sub
ret
mov
cmp
inc
out
cmc
outsb
xchg
out
dec
pop
scas
fstps
cmp
mov
sbb
xchg
adc
add
xchg
dec
data16
cmp
cltd
loop
pop
mov
jmp
fs
xor
aad
jle
jo
push
inc
je
int3
int3
sbb
enter
dec
xlat
mov
scas
popa
out
jne
stos
fsubr
fs
xor
push
jbe
in
nop
insl
outsb
out
rcr
push
fucom
addr16
imul
mull
inc
jle
xchg
and
add
mov
xlat
mov
xchg
cs
mov
add
imul
dec
sbb
mov
push
sub
call
pop
sbb
jg
inc
hlt
jle
mov
ss
pop
cmp
flds
rcl
movsl
lcall
stos
popa
jno
mov
or
cs
push
cmpl
cltd
fldcw
in
fisttpl
dec
push
cmp
add
mov
fildll
sbb
mov
in
stc
cwtl
push
adc
cmp
jne
jg
and
clc
fsts
xor
jge
int3
jmp
or
cwtl
daa
ja
fnstenv
xchg
inc
fwait
jmp
fcmovnbe
fs
push
cmp
cmpsb
hlt
int
jb
gs
xlat
jmp
jb
dec
pop
sbb
js
out
mov
scas
jbe
adc
scas
xor
les
pusha
and
mov
repnz
imul
fadds
sbb
jmp
jae
aam
pop
sub
pop
insl
dec
pop
xchg
add
lods
cmp
lods
aas
mov
stc
nop
push
out
add
add
aam
jp
loop
mov
mov
and
adc
dec
xlat
cld
or
add
mov
clc
rcll
inc
popa
movsb
div
sbb
mov
arpl
fisttpll
orb
stc
jnp
mov
xor
cmp
frstor
clc
mov
inc
inc
test
xlat
xchg
mov
pop
iret
call
jle
dec
outsl
jle
into
and
iret
mov
inc
push
cmpsl
repnz
test
mov
mov
sub
popf
add
cmpsb
push
std
je
fucomp
test
andl
push
dec
movsb
aam
pop
inc
in
bndstx
sub
xor
mov
in
mov
adc
xchg
nop
les
jge
outsl
insl
and
outsb
xchg
adc
or
push
fistl
addl
sbbb
insl
mov
xchg
mov
jb
movsl
imull
mov
sub
cmp
inc
ss
add
add
mov
sti
mov
test
scas
dec
pop
lock
add
test
movsl
pop
jecxz
stos
leave
mov
loopne
dec
insl
mov
gs
testb
mov
dec
stos
scas
hlt
xchg
inc
mov
pop
sbb
ja
jo
add
loope
cmc
cli
daa
out
jecxz
and
dec
mov
sahf
jbe
adc
aad
push
aaa
lret
mov
movsl
sub
mov
or
dec
repz
push
lds
sub
addr16
and
sbb
cmpsl
pop
xor
add
sbb
aam
pushf
mov
xor
or
repnz
inc
ljmp
testl
enter
mov
cmp
mov
ret
cli
lcall
ss
fbstp
mov
xchg
aas
xchg
insb
push
xchg
push
and
js
je
push
jns
push
popf
adc
jp
xchg
outsl
rorl
cwtl
inc
cmp
pushf
lods
dec
mov
sub
add
add
into
adc
neg
jge
xchg
jns
xor
add
dec
mov
sub
adc
std
jns
mov
fst
pop
pop
cmp
or
and
loop
cmpsb
repnz
pusha
inc
add
loopne
nop
and
gs
sub
cmp
add
cli
jle
imulb
sub
sti
pop
adc
push
mov
popf
lea
pop
adc
jle
xor
into
inc
mov
mov
roll
mov
mov
add
pop
sbb
and
fsts
push
loop
jmp
ret
dec
mov
mov
ja
scas
mov
adc
sub
mov
mov
pop
inc
pushl
and
mov
mov
jbe
mov
cmp
xor
mov
loopne
imul
data16
fs
mov
pop
hlt
jns
mov
mov
call
inc
lock
les
adc
jmp
add
pop
cmp
outsl
jg
jg
sub
fiaddl
repnz
add
or
daa
call
pushf
pop
fs
pop
push
icebp
jecxz
mov
push
js
xchg
dec
in
mov
adcl
xchg
cmp
mov
sarl
imul
stos
es
rorb
test
pop
dec
inc
pop
and
pop
mov
aam
push
jno
sbb
pop
sahf
xchg
mov
ja
jbe
test
notl
sub
and
fimuls
ret
or
scas
hlt
cld
mov
xchg
int3
seta
mov
lcall
loop
pop
ljmp
jle
popf
into
inc
iret
pop
sahf
fwait
lods
add
lcall
mov
jb
inc
in
rcr
cmp
aam
imul
mov
push
dec
lea
addl
jmp
xchg
inc
add
jecxz
sub
jns
sub
sub
icebp
fidivrl
ret
ja
and
aaa
divl
sub
push
push
add
add
loopne
das
or
loope
nop
xor
sbb
xor
les
sti
jbe
xor
and
pop
mov
mov
sbbb
sbb
sub
data16
cltd
addl
jno
mov
fstp
movsl
sub
sbb
xchg
add
xchg
mov
sub
shlw
xchg
mov
add
fadds
jns
xor
fnstenv
cld
inc
imul
test
imul
pop
subb
out
addr16
mov
mov
orb
sbb
mov
jb
and
inc
lret
mov
loop
pusha
aas
mov
outsb
scas
ds
out
push
popf
mov
mov
jle
mov
stos
sbb
mov
mov
xlat
add
adc
filds
add
add
mov
cmc
mov
sub
cld
insl
hlt
add
add
lea
stc
aad
enter
loopne
jmp
mov
inc
je
mov
push
push
jno
flds
pop
xor
ljmp
sub
dec
negb
add
fstpl
sar
pop
mov
jecxz
mov
xor
es
xor
leave
fadds
inc
ret
imul
sbb
rcrb
imul
decl
shl
jl
rcrb
or
loope
addb
cmp
mov
subb
inc
shll
dec
xchg
rcrl
je,pt
pop
mov
pop
mov
dec
and
sub
cwtl
stos
pusha
ja
decb
nop
cli
cmp
inc
xor
lret
ret
lret
outsl
and
cs
je
jecxz
cmc
jbe
les
jno
xor
jns
sbb
pop
or
repz
sub
jae
and
add
jle
jne
pusha
popf
pop
add
cmc
add
add
insb
xchg
hlt
mov
pop
sub
inc
cmp
fistl
pusha
xchg
push
int
add
in
lock
std
pop
jl
cmc
xchg
pop
scas
hlt
xor
shr
shr
stos
inc
push
pop
pop
je
adc
ficomps
sti
out
pop
mov
aaa
mov
jo
les
ja
mov
rorl
push
gs
jns
out
mov
inc
mov
rol
nop
dec
and
cli
ds
and
and
cmp
pop
rcrl
loope
or
inc
sbb
addr16
jg
add
mov
fwait
jb
out
icebp
xor
into
adc
lret
js
push
out
pusha
hlt
mov
repz
and
shr
adc
lcall
addr16
testl
scas
les
mov
dec
xchg
add
xchg
ret
jl
fwait
out
xor
ret
dec
rorb
add
add
imulb
mul
xor
or
add
add
jle
adc
pop
in
xchg
xchg
scas
stos
cmp
mov
addr16
loope
adc
pop
sub
lret
xchg
inc
fmul
push
push
insl
mov
test
xchg
pop
mov
mov
jg
loope
ds
xor
loope
out
xor
sub
loop
adc
xchg
mov
mov
js
mov
out
pop
cmp
mov
imul
leave
pusha
add
cmp
stos
test
clc
incb
dec
ja
inc
out
orb
lret
jecxz
das
push
repz
xor
or
or
lds
loop
inc
bound
push
adc
mov
jl
jmp
insl
in
mov
test
dec
jnp
cmpsb
mov
push
mov
ss
add
lret
mov
rcll
sub
adc
arpl
cmc
leave
popf
stc
fidivs
popa
add
add
add
xor
jb
jae
ljmp
add
mov
scas
roll
cli
jg
fucom
dec
mov
sub
fcomi
push
ret
dec
fs
push
xor
mov
push
movsl
inc
lds
stos
loope
loope
push
sub
or
sub
sub
xchg
aam
sub
sbb
mov
sbbl
inc
sbb
xchg
cmp
pop
pop
jae
cmp
cld
dec
sub
cmp
sub
lret
mov
scas
hlt
aad
inc
mov
push
and
lods
ret
or
lods
in
das
dec
fcomps
ss
rorl
push
mov
mov
mov
out
inc
inc
xlat
int3
cmp
xor
inc
addr16
jle
push
jae
jg
into
adc
outsb
or
push
pop
daa
cld
dec
jle
dec
hlt
sub
mov
adc
inc
push
jmp
dec
pop
mov
mov
outsb
adc
aad
lods
test
pop
sub
stos
lock
insb
movsl
xchg
adc
int
in
idivl
js
mov
clc
int3
xchg
arpl
add
add
mov
das
invd
mov
cmpsb
mov
ljmp
shll
cltd
add
push
mov
xchg
mov
and
xor
xchg
out
mov
and
in
cli
inc
pop
push
iret
mov
mov
icebp
shll
xchg
sub
cli
sbb
mov
and
sbb
cmp
loope
ret
pop
shrl
push
dec
insb
mov
dec
out
into
je
mov
icebp
sub
sub
mov
adc
popa
or
inc
add
bound
cmpsl
adc
add
gs
gs
adcb
mov
jae
inc
lret
lahf
sarb
cmp
popf
mov
out
mov
xchg
les
push
dec
push
and
and
and
xor
jb
lret
xchg
roll
lret
xor
fst
xor
add
add
jecxz
inc
cli
aas
into
lret
out
out
addb
add
push
call
pusha
jecxz
int3
roll
sub
pop
rcrl
and
xor
pop
dec
loope
add
sar
jmp
out
jp
ds
fs
jo
nop
pop
pop
xchg
mov
dec
adc
hlt
shrl
loop
mov
inc
pop
lret
fstps
jle
or
add
cld
sub
add
jle
cmc
dec
jb
lahf
scas
lods
xor
sbb
hlt
out
or
jp
cltd
scas
scas
sub
in
mov
xor
lods
outsl
jmp
mov
xchg
dec
adc
test
pop
dec
mov
push
or
notl
mov
int
int3
jl
lods
insb
call
cmpsb
add
sbb
js
lcall
out
lcall
out
aad
out
and
movb
fwait
outsb
pushf
cli
xchg
cmp
imul
jo
test
jae
stc
subb
popf
xor
mov
jnp
add
mov
lcall
push
lcall
add
pop
adc
sbb
test
push
cli
xchg
movsb
jb
or
insb
mov
pop
mov
or
ret
rolb
cltd
xchg
popa
js
pop
xor
out
jl
test
or
pusha
pusha
inc
xlat
fstp
push
punpckldq
mov
scas
stos
jg
out
mov
cmp
ret
lret
orl
sbb
bound
shl
mov
pop
test
fsubp
dec
insl
add
rcll
mov
mov
add
dec
repz
dec
xchg
push
xor
stos
in
popf
jbe
inc
outsl
adc
pop
repz
call
inc
mov
insl
int
outsb
bound
hlt
inc
xchg
shlb
ret
cmpsb
sub
sub
imul
sub
hlt
notb
icebp
cmpsb
cli
cltd
push
or
xlat
sbb
sub
out
push
or
mov
int
add
add
jae
cltd
dec
mov
jno
insl
sub
add
sub
push
pop
mov
mov
rorl
cmpsb
pop
and
ljmp
sbb
loop
or
inc
jl
clc
mov
popa
loope
mov
mov
sbb
mov
stc
mov
xchg
vpsubw
cs
cmp
das
fmuls
outsb
test
test
inc
orb
ss
or
addr16
mov
jae
nop
ret
lret
dec
ss
jmp
adc
sub
rcl
or
stc
ret
outsl
xor
xchg
mov
push
cli
in
adc
and
lds
loope
outsl
xchg
mov
dec
pop
or
fldl
aam
push
jbe
xchg
cli
popa
cmpsb
loope
ljmp
add
dec
scas
xchg
insb
sub
push
addb
mov
mov
push
testb
jo
outsb
push
sub
into
std
and
mov
mov
sbb
ja
inc
add
add
push
into
nop
out
cwtl
jle
push
sub
dec
stos
shrb
xchg
cld
add
add
adc
and
movzbl
jle
fcomi
mov
mov
mov
mov
mov
pop
push
aas
sub
rclb
leave
jg
push
adcb
iret
loopne
push
dec
mov
cmp
sbb
or
dec
icebp
orl
xchg
sub
in
incl
pop
inc
pop
lret
xchg
stc
aaa
fmul
repnz
mov
xlat
leave
popf
outsl
or
jle
fs
fstpt
and
icebp
xchg
insl
and
push
cmp
cmp
insb
lret
jno
out
push
pop
adc
sbb
aad
scas
push
cwtl
add
push
push
jmp
push
lret
lods
ds
sub
and
and
push
sarb
orl
xchg
xchg
push
xor
fwait
adc
fwait
xchg
xchg
dec
ljmp
cwtl
inc
and
cld
dec
mov
mov
daa
jno
leave
popf
add
inc
std
add
add
test
jg
push
pop
push
mov
lcall
add
shlb
fcoms
inc
pop
xchg
iret
and
outsl
orb
fiadds
scas
insb
jge
cltd
sbb
sub
aad
ss
jb
mov
inc
or
dec
imul
out
out
sub
sbb
lcall
out
in
lahf
cmc
test
aas
insl
aad
lds
test
dec
pop
jbe
fs
scas
out
leave
repnz
inc
add
add
pop
fisttpl
or
jmp
popf
das
imul
xorb
lds
addb
mov
and
mov
adcl
and
es
xchg
mov
pop
and
mov
mov
sub
cmpsl
outsb
enter
and
pop
es
ja
sbb
mov
aas
add
add
movsb
push
in
cmc
jne
sbb
js
shrl
add
out
inc
dec
sbb
stc
mov
iret
dec
sbb
push
mov
inc
mov
lahf
xor
jae
daa
push
daa
cltd
lods
pop
test
add
mov
je
rcll
in
xor
push
popf
cli
hlt
mov
or
movsl
movsl
jmp
push
mov
outsb
fbstp
cmpsl
fmull
out
call
push
iret
loopne
lahf
jle
add
dec
imul
mov
in
xorl
sbb
pop
push
pusha
push
mov
cmp
xor
js
arpl
sbb
lret
stos
loopne
fadds
decb
dec
xchg
mov
push
ret
mov
mov
out
jle
movsl
or
insb
cmpsl
mov
jecxz
or
shl
cmp
rolb
inc
sarb
loopne
mov
aas
push
mov
fisttpl
mov
jecxz
sbb
div
cmp
test
dec
inc
sbb
or
sub
test
scas
push
add
add
out
shlb
aas
out
int3
mov
in
iret
cmpsb
sub
incl
add
lods
dec
jl
js
out
mov
mov
mov
cmp
sub
das
movsl
adcb
fldenv
inc
dec
out
lock
push
int3
sbb
icebp
jne
enter
adc
lods
test
xor
into
lret
or
add
sub
mov
sbb
daa
lcall
rorl
pusha
and
push
inc
mov
call
sbb
gs
enter
fwait
push
out
insb
cmpsl
push
in
loope
jbe
or
xchg
jg
movsl
insb
push
mov
cmc
cmp
daa
fst
pop
add
pop
and
pop
popa
xchg
daa
lods
mov
dec
pop
out
add
mov
stc
jmp
fldl
adc
mov
rcrl
sbb
popa
mov
mov
les
notl
mov
sbb
cltd
test
add
or
mov
and
jmp
add
add
imul
sbb
test
or
call
jbe
push
pop
leave
adc
fstl
pushf
mov
and
je
out
push
push
xchg
scas
push
push
cmp
sbb
cltd
mov
mov
adc
mov
pop
jge
lods
and
xchg
lock
inc
subl
inc
fcoml
gs
fwait
adc
xchg
adc
out
xchg
jns
jge
clc
xor
fstpt
jbe
pop
vpmacssdql
in
mov
stos
into
mov
inc
jae
pop
bound
rdpmc
sahf
repz
fsts
out
xchg
sub
pop
rclb
jmp
pop
and
es
fsub
pop
xchg
xchg
lret
jle
jmp
sbb
cmc
imul
add
mov
jne
negl
scas
inc
in
in
loope
mov
gs
add
dec
rol
lret
clc
cmc
inc
stos
rep
pop
adc
scas
add
add
mov
jp
inc
fwait
pop
and
shrl
dec
xchg
dec
add
lea
loopne
insl
add
mov
sbb
out
es
xchg
insb
ljmp
adc
jae
leave
out
xchg
lds
push
fcoml
pop
dec
fistpl
cmp
dec
xor
es
push
pop
mov
les
and
jo
xor
movsl
rcrl
sbbb
test
test
xchg
fwait
scas
sahf
jle
idiv
inc
fdivr
pop
mov
push
push
xchg
or
rorb
jg
cmp
popf
or
dec
mov
aam
int
xor
insl
cli
lods
sarb
sub
fbstp
push
out
sub
pop
faddl
into
jo
add
in
adc
clc
mov
mov
jle
aas
add
push
sub
jb
dec
cwtl
je
push
repz
sub
mov
pushf
inc
imul
pop
push
mov
mov
add
add
std
aaa
mov
shll
adc
add
insl
inc
repnz
xchg
and
iret
dec
addb
cmp
push
stos
mov
cwtl
xchg
mov
int3
inc
movb
repz
cmp
aaa
push
roll
sub
loop
dec
insl
loope
adc
mov
mov
adc
lods
das
sahf
xchg
xchg
jle
mov
fidivs
fisubs
repnz
adcb
add
out
outsl
jmp
into
pop
push
out
push
mov
mov
dec
aam
adc
sub
push
test
stc
lahf
add
pop
inc
nop
sbb
sarb
pop
mov
mov
xchg
mov
mov
mov
or
stc
sub
fnstcw
xor
push
insb
push
aam
inc
and
jbe
push
and
out
shll
ret
bswap
mov
lcall
std
ret
push
sbb
add
insl
aam
mov
scas
add
sub
mov
add
add
outsl
push
imul
in
into
sbb
movsl
cmp
sub
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
lret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
call
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
push
decl
mov
test
add
xor
add
mov
or
inc
mov
arpl
sub
incl
lea
or
incl
mov
cld
add
xchg
fdivr
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
adc
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
call
out
test
in
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
add
add
inc
inc
mov
decl
add
inc
fmull
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
fsub
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
jb
add
push
fildl
mov
inc
add
or
inc
call
jge
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
enter
mov
xor
add
xchg
call
mov
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
loopne
sub
int
sub
inc
push
cmp
movaps
cld
faddl
jne
push
loopne
inc
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
daa
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
int3
inc
inc
add
add
xor
pushf
lea
add
inc
mov
xor
add
mov
fmull
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
add
xor
cmovge
add
jmp
jb
add
xor
xor
add
clc
int3
add
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
enter
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
in
scas
inc
mov
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
in
jge
sub
mov
mov
mov
mov
in
ror
push
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoms
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
enter
mov
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
int3
pushf
add
add
add
clc
int3
inc
add
push
pushf
mov
enter
aas
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
enter
clc
incl
cmp
pushf
pop
lods
incl
mov
rcrb
test
sbb
add
push
loopne
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
loopne
test
xor
mov
rolb
inc
add
clc
inc
lret
mov
loopne
lret
into
into
scas
dec
mov
sub
cmp
mov
enter
add
xor
xor
lret
mov
inc
add
mov
xor
mov
in
add
bswap
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoml
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
jmp
ror
or
add
not
adc
inc
push
mov
push
mov
in
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
add
push
clc
xor
add
hlt
or
mov
hlt
dec
add
mov
add
leave
push
push
mov
fcoml
inc
xor
iret
cld
lret
loopne
mov
mov
mov
cld
jne
movb
add
test
inc
incl
mov
cld
add
leave
xor
in
mov
inc
add
int3
cld
jne
call
mov
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
and
call
in
jmp
je
call
and
call
and
push
or
pop
mov
and
mov
and
mov
jne
test
decl
sbb
jl
adc
dec
mov
mov
and
xor
or
add
clc
jmp
adc
inc
je
and
je
mov
decl
sbb
add
add
adc
mov
adc
add
add
adc
sub
add
imul
add
ss
add
ss
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
jo
add
pop
adc
push
adc
add
insb
adc
jb
adc
push
aaa
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jge
add
or
add
sub
add
insb
adc
addr16
add
adc
lds
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
clc
cmp
add
pop
adc
mov
adc
add
adc
cmp
shll
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
fwait
pop
adc
jnp
adc
pop
adc
popf
jno
add
inc
adc
sbb
add
cmp
pop
cmp
sbb
inc
add
cmp
and
inc
add
cmp
sub
inc
add
cmp
push
xor
aaa
pop
inc
dec
xor
push
add
xor
pop
inc
push
pop
dec
xor
push
add
cmp
xor
xor
pop
inc
add
dec
cmp
xor
pop
pop
xor
inc
add
inc
pop
cmp
push
inc
xor
xor
inc
inc
inc
cmp
dec
inc
add
push
xor
push
aaa
dec
pop
xor
dec
add
inc
xor
push
pop
push
inc
add
xor
cmp
push
push
push
pop
inc
push
push
add
inc
pop
pop
push
inc
pop
inc
add
cmp
inc
xor
pop
pop
cmp
inc
xor
dec
add
pop
cmp
xor
cmp
dec
dec
cmp
pop
dec
xor
xor
pop
inc
push
inc
inc
add
cmp
push
inc
xor
pop
dec
dec
ss
pop
push
cmp
pop
push
dec
add
inc
cmp
dec
xor
inc
xor
xor
push
add
xor
push
cmp
ss
pop
push
inc
xor
dec
inc
xor
dec
pop
push
add
inc
add
pop
add
add
add
xor
add
add
push
add
xor
add
inc
add
xor
pop
add
add
xor
add
xor
add
push
add
dec
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
add
dec
add
cmp
pop
add
add
add
add
add
push
add
cmp
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
add
dec
add
inc
add
dec
add
add
add
push
add
add
push
add
add
pop
add
add
inc
add
add
push
add
add
push
add
dec
add
add
aaa
add
add
pop
add
inc
add
xor
push
add
push
add
add
push
add
add
add
inc
push
inc
addr16
pop
xchg
jecxz
inc
mov
jnp
outsb
int3
mov
push
cmp
addr16
bound
outsb
pop
je
ja
imul
js
jp
jns
jp
je
jp
jo,pn
bound
