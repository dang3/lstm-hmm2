push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
call
adc
int
adc
mov
lea
push
xor
sub
lods
add
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
sbb
add
push
divl
in
enter
repz
outsb
loop
and
notb
lea
mov
mov
in
icebp
push
outsb
bnd
fldenv
pop
mov
mov
push
inc
push
rol
mov
xchg
sub
sbb
mov
jg,pt
jecxz
fdivrs
xor
adc
cmp
jg
mov
shl
ret
ds
loopne
add
das
loop
outsl
and
aad
push
mov
loop
js
stos
mov
test
and
out
xor
sahf
and
jne
es
or
sub
sub
test
mov
std
jno
out
hlt
xchg
xor
in
mov
outsl
movsl
in
pop
sub
test
xchg
in
pop
fildl
pushf
push
mov
nop
mov
leave
mov
ret
cmp
cmp
ret
dec
imul
stos
xchg
sub
in
xor
adc
mov
jge
mov
aaa
mov
loope
xchg
sub
pop
test
hlt
cltd
jmp
xor
push
arpl
cmp
xlat
lret
mov
les
and
xor
iret
pop
dec
jmp
xchg
popf
adc
cltd
mov
stos
jg,pn
or
dec
mov
int3
cmp
sti
imull
xor
enter
enter
xor
iret
xor
or
jle
mov
and
adc
adc
fildll
jns
jo
fs
loope
mov
das
push
xchg
loopne
cli
jns
cs
sbb
inc
loope,pn
outsb
cmpsb
and
jmp
jae
loop
popa
test
popf
gs
imul
sahf
or
sbb
pop
hlt
hlt
movsl
test
sbb
mov
icebp
jmp
lock
ss
xchg
enter
in
jbe
xor
cmpl
dec
jns
or
xchg
or
dec
adc
outsl
and
and
mov
mov
fs
out
out
mov
push
ja
sub
roll
movsl
pop
dec
mov
ljmp
pop
or
sbb
mov
push
int
into
cmc
add
movsl
fsts
mov
jno
adc
popa
and
dec
leave
mov
outsb
dec
push
pusha
movsb
shrl
movq
int3
testl
popf
pop
fwait
xchg
cmc
ss
sti
stos
xor
sahf
arpl
jb
xor
push
lods
cwtl
dec
icebp
adc
shr
fwait
push
ss
ret
orl
push
or
pop
aad
fldenv
mov
and
and
push
lea
jb
lds
scas
lret
add
dec
data16
outsb
xchg
shlb
adc
jno
push
into
clc
push
clc
inc
sub
cmp
pushf
hlt
lea
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
xor
push
adc
adc
adc
adc
push
loope
out
mov
cmp
cmp
int3
sbb
pusha
sbb
addr16
cli
mov
outsl
mov
fisubl
in
ss
movsl
pop
ss
adc
cltd
frstor
lods
adc
sbb
push
sub
add
xor
cwtl
aam
mov
xor
sub
test
pop
pop
and
popa
push
pop
add
outsl
xlat
cmp
push
xor
dec
dec
inc
insb
pop
adc
inc
mov
shlb
mov
xor
mov
dec
out
mov
and
imul
dec
add
lahf
xor
icebp
notb
push
lods
push
sub
add
push
adc
jns
adc
lret
xchg
cmp
pop
hlt
xchg
sub
mov
adc
or
es
das
sbb
jns
sbb
cmpb
outsb
cld
xchg
rclb
lock
aad
popf
mov
xchg
dec
subl
movsl
mov
fnstenv
out
loop
push
push
std
cmp
inc
pusha
or
lods
add
mov
mov
rcl
sub
jnp
out
mov
mov
std
and
lahf
sbb
xor
outsl
outsl
cli
orb
mov
add
imul
sbb
mov
pop
or
dec
mov
inc
pop
mov
and
movsl
or
dec
sti
mov
xor
mov
jbe
pushf
fisttpll
and
imul
flds
lret
ret
add
sub
sbb
xor
es
ja
scas
xchg
xor
cmp
sti
std
lahf
in
fcoml
xchg
cmp
add
enter
mov
add
test
sbb
push
adc
dec
cmpsb
xor
dec
inc
outsb
outsl
jnp
shlb
mov
mov
out
addl
push
fcoml
mov
call
sbb
sarl
lock
xchg
xlat
inc
jl
sbb
mov
stos
test
adc
sbb
mov
add
es
xlat
cltd
mov
pushl
xlat
xor
mov
push
xorb
jo
xor
cmp
faddl
jg
push
ljmp
fs
jns
rcrb
cmpsl
push
jnp
jle
movl
hlt
inc
bound
inc
out
or
aad
test
xchg
movsl
mov
shr
mov
out
ss
cwtl
repz
scas
daa
fs
cmp
movsb
sub
lret
mov
loope
ret
icebp
mov
dec
iret
dec
sarl
movsl
ds
jo
out
pusha
inc
jnp
clc
add
pusha
and
test
out
into
std
fwait
ret
shrb
out
in
sub
gs
add
or
clc
lahf
xor
lret
dec
push
cltd
mov
jb
rcrl
fisubrs
push
fwait
outsb
dec
sbb
xchg
jl
addr16
cmp
inc
push
test
xchg
adc
ljmp
sub
icebp
xchg
std
fcmovne
daa
pusha
push
sahf
rolb
mov
mov
orb
scas
sbb
enter
cli
inc
push
insl
or
out
jle
ret
insl
add
sub
push
lods
pop
jl
icebp
pusha
or
push
mov
jmp
xchg
and
mov
add
nop
int
cs
mov
cmpl
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
inc
in
and
or
adc
adc
adc
hlt
pop
and
sbb
scas
hlt
jg
aaa
add
insb
mov
inc
insb
out
shll
or
inc
mov
jo
mov
test
sub
or
movsl
push
faddl
mov
lods
sti
jle
inc
push
aam
push
sub
iret
adc
xor
in
jg
stos
jnp
pop
nop
fldcw
and
jns
dec
into
imul
xor
daa
mov
push
movsb
test
movsl
test
enter
inc
inc
jns
fs
das
mov
outsl
out
sbb
dec
incb
jl
rorl
add
add
push
rcll
jno
xchg
sub
add
fistpll
or
pop
aad
push
mov
stc
mov
push
mov
out
and
mov
adc
out
into
add
add
arpl
mov
cli
lods
out
in
push
or
flds
jne
jecxz
icebp
sahf
mov
and
test
mov
pop
xchg
push
mov
stos
addr16
cmp
mov
leave
mov
icebp
lahf
sbb
mov
sub
dec
xchg
loop
orb
popf
mov
aaa
nop
sbb
sub
push
dec
lds
imul
mov
jnp
repz
aas
outsl
push
adc
popa
fs
sbb
mov
cmpl
neg
fwait
dec
loop
mov
pop
push
cli
add
jmp
jmp
es
test
fmuls
fs
and
mov
loopne
into
jo
pop
sub
cmc
add
jmp
sub
pop
ja
leave
icebp
mov
outsb
les
dec
cmp
and
pop
pushf
popf
subb
aaa
mov
test
push
mov
jmp
cmp
jo
dec
pusha
popf
cli
movsl
loope
popa
sbbl
and
xchg
in
fsubr
shr
in
inc
iret
scas
and
sahf
xor
je
cmc
adc
or
aaa
repnz
xor
xor
add
pusha
outsb
add
stos
std
sbb
adc
or
popa
push
xchg
sub
out
mov
jg
push
or
push
sbb
imul
xchg
sahf
mov
dec
push
cmp
testl
push
xchg
lcall
mov
mov
add
out
scas
or
add
adc
call
enter
xor
nop
push
mov
sub
shrb
ret
stos
xor
lret
sub
or
in
sarl
ljmp
jnp
ds
fimuls
imul
ss
fstps
mov
idivl
sbbl
sbb
jo
dec
cmp
fisubrl
movsl
add
pop
popf
inc
out
imul
cmp
ret
pop
push
pop
cmp
mov
leave
out
in
push
inc
mov
mov
mov
jb
inc
movsb
je
pop
mov
fs
out
pop
sbb
jne
jo
fs
and
cmp
call
aaa
rcll
mov
sub
hlt
out
mov
mov
rcll
mov
xchg
mov
mov
add
xchg
pop
movsl
xchg
cmp
ds
inc
dec
jnp
add
inc
loop
mov
decl
add
inc
add
add
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
or
into
imul
and
inc
pop
push
jmp
and
bound
popf
fs
adc
mov
mov
xchg
and
loopne
js
dec
psubq
mov
ret
jns
xor
cmp
test
ficoml
sub
sub
xchg
mov
leave
push
gs
repnz
mov
ja
jo
or
mov
das
jne
mov
fdivrl
mov
xchg
test
push
push
sbb
stos
out
cmp
push
sbb
adc
les
sahf
mov
jp
mov
ljmp
out
xchg
icebp
and
or
orl
add
fists
jno
mov
push
pop
or
mov
fwait
cmp
fsubr
inc
repnz
out
mov
pushf
into
inc
mov
mov
pop
test
out
fiaddl
pop
pop
fists
jno
repz
jne
inc
xchg
inc
fstl
inc
sti
add
addr16
xor
xor
adc
mov
rcll
mov
int
dec
popf
sahf
cmpsl
mov
out
mov
movsb
enter
jo
dec
lahf
mov
dec
andb
xchg
cmp
cmp
add
std
lahf
add
lret
inc
pop
sub
push
lds
sbb
dec
or
movsl
and
cmp
or
loope
xor
orb
adc
iret
in
or
leave
xchg
sbb
loope
jge
cmp
sub
jo
es
dec
mov
push
mov
xchg
sbb
popf
mov
add
xchg
dec
mov
dec
lcall
mov
and
cli
push
push
call
adc
pop
mov
popf
pop
mov
jle
mov
adc
cmpb
push
hlt
or
je
sbb
imul
cmp
fisubs
sub
push
jbe
popa
dec
and
out
adc
adc
imul
or
testb
fwait
movsb
push
xchg
je
test
fisttps
insb
mov
jae
sbb
jnp
push
mov
push
inc
cmp
imul
loopne
arpl
iret
call
mov
stos
clc
cwtl
scas
in
cld
sub
lcall
movsl
sbb
outsl
ret
pop
call
pop
xchg
lret
das
xor
push
add
mov
loop
std
ret
rcrb
in
inc
pop
jbe
xchg
and
xchg
mov
mov
and
mov
orb
or
out
cmp
dec
mov
scas
repz
jmp
jns
jecxz
inc
negl
push
dec
push
out
cli
xor
les
sub
dec
pusha
or
fwait
iret
in
mov
fcmovnu
sub
push
test
les
mov
retw
inc
lahf
add
jecxz
mov
hlt
sarb
jbe
jnp
pop
inc
je
cmp
ljmp
cmp
sbb
notl
ds
nop
mov
mov
mov
out
lahf
jae
add
push
dec
cmp
ret
cmp
sub
test
ror
movsl
xor
pusha
add
popa
inc
in
lock
xor
bound
test
pusha
add
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
jno
mov
int
adc
jo
push
ljmp
test
int3
push
inc
sbb
mov
inc
rolb
add
sbb
movnti
cmp
test
jns
add
jle
pop
pop
clc
imul
cmpsb
sbb
lahf
push
std
or
out
in
mov
rol
mov
mov
sbb
pop
push
cmp
adc
sahf
sub
hlt
stos
dec
xchg
ljmp
mov
ljmp
sub
lret
mov
rorl
xchg
add
cli
push
jge
mov
mov
es
out
gs
jno
jae
pop
gs
add
xchg
xchg
dec
pop
cmp
push
fcoml
sub
lret
sbb
or
in
aam
lret
aaa
in
rorb
push
mov
sbb
fstpl
or
dec
or
dec
pushf
mov
push
fidivs
xchg
imul
pop
mov
nop
pop
aam
mov
cmpsb
pushf
mov
fs
loopne
sub
mov
and
sub
shrb
cld
jns
leave
mov
fsts
inc
and
pushf
enter
out
arpl
mov
insb
insl
jmp
mov
add
leave
and
pop
adc
jg
or
sahf
fcomps
sbb
pop
jnp
in
mov
xchg
fmuls
out
mov
rcll
repz
push
rcrl
nop
sub
mov
push
adc
enter
push
lcall
adc
pop
out
scas
dec
fcoms
jg
outsb
fiaddl
test
add
in
mov
lods
pushf
imul
loop
push
into
pop
or
adc
scas
and
push
sbb
cld
mov
sub
clc
push
mov
lds
pusha
test
gs
xchg
sbb
dec
add
gs
aam
call
aas
pop
addr16
movsb
mov
shr
incl
scas
ficomps
pop
ja
insb
inc
inc
inc
xchg
add
pop
mov
scas
fcoml
and
pusha
mov
push
lahf
adc
stos
inc
jmp
push
push
imul
sbbb
ficoms
fildll
push
pop
sub
xor
lods
pop
mov
cld
mov
jns
dec
push
in
imul
imul
icebp
dec
stos
ficoms
lahf
bnd
adc
mov
jge
fst
push
std
test
jge
stos
fstpl
mov
outsl
clc
aad
in
in
push
aaa
lahf
and
into
es
cmp
adc
int3
pop
mov
push
dec
add
in
nop
push
scas
stc
fs
push
dec
repnz
dec
ss
aad
test
std
mov
and
dec
call
fwait
lods
inc
stos
bound
loopne
add
cld
popf
shll
test
sahf
push
sub
add
pop
int3
insb
mov
dec
mov
pop
xor
xchg
test
push
adc
push
mov
push
pushf
je
ficompl
andl
add
push
inc
fistpl
cltd
jg
popa
jge
aaa
mov
add
stc
cltd
jns
ds
out
push
test
lret
jl
push
cmp
mov
xchg
rolb
sub
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
pop
inc
mov
int
adc
dec
stos
jb
mov
int
push
mov
push
sbb
cmp
repnz
test
inc
cmpl
adc
pop
pusha
pusha
mov
and
mov
mov
dec
aas
enter
adc
xor
insl
addr16
adc
jbe
hlt
jle
lds
popf
adc
rorb
add
das
pop
add
sbb
pop
fildll
xchg
cmc
xchg
lods
push
nop
jl
clc
xorl
mov
sbb
cmpl
fsubr
jle
cvtpi2ps
outsl
clc
imul
inc
in
mov
push
jo
lods
subl
dec
xor
jae
jno
or
js
push
jmp
xchg
adc
jg
push
adcl
dec
adc
loope
int3
push
ds
dec
ljmp
pop
fs
es
jecxz
lea
ljmp
gs
cwtl
adc
ret
push
sbbb
lods
test
mov
lahf
jno
cmpsb
dec
in
test
ja
xor
lods
xchg
push
inc
xor
dec
push
lahf
lahf
filds
std
push
aaa
xchg
cltd
das
lret
test
fildll
fcoml
out
hlt
arpl
push
faddp
icebp
push
sbb
rcr
mov
add
xchg
popf
ret
lods
push
cmpsl
ljmp
pop
imul
dec
sbb
fcoms
jge
cli
iret
das
sar
dec
fbstp
stc
lcall
dec
shlb
ret
mov
leave
fisubrs
mov
cmp
add
cmpl
stc
push
sarl
stos
push
fstpt
push
xor
mov
xchg
lret
adc
and
lds
int
mov
lret
or
movsl
sbb
outsl
negl
lds
lret
xchg
pop
ss
mov
mov
xchg
stc
fbstp
mov
je
xchg
arpl
and
mov
das
mov
call
or
data16
inc
cmp
jp
mov
push
cmpsl
mov
sbb
and
mov
fisubl
les
ljmp
mov
lret
mov
sbb
mov
push
xlat
push
in
or
cwtl
idivw
jp
sbb
fwait
sub
dec
movsl
ja
aad
pop
dec
jb
push
cmpsb
ljmp
repz
pusha
xchg
sub
mov
or
inc
int
mov
sbb
rcll
pop
and
lahf
jno,pn
rcr
aam
jecxz
cwtl
push
incl
scas
lret
scas
xchg
inc
mov
jecxz
leave
test
push
push
or
dec
cltd
addr16
cmpl
dec
inc
mov
shlb
icebp
or
sarb
pop
lea
mov
call
clc
out
shll
xchg
fnstsw
sub
jb
or
xchg
xchg
in
jns
jle
in
ret
fs
aas
mov
add
adc
idiv
in
add
jl
adc
cmc
out
add
pop
lods
movsb
ss
xor
pop
xchg
push
ja
and
scas
sbb
cmpl
rep
jg
daa
cmpsl
lret
out
xorb
jo
insb
inc
ss
out
adc
mov
cmp
rcrl
mov
insl
jbe
mov
call
mov
pushf
push
pop
test
outsl
divb
mov
pop
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
mov
loop
push
in
adc
int
adc
jb
fistps
add
push
and
mov
xchg
insl
xchg
nop
inc
insb
sbb
mov
mov
cmpsl
mov
dec
out
add
stos
push
sbb
mov
repnz
cmp
or
ss
add
cmp
ret
mov
add
stc
test
jae
das
xchg
and
dec
pop
pop
das
sub
push
push
xlat
mov
mov
in
mov
loop
cmp
int
call
and
je
mov
vandpd
adcb
rcl
fmul
add
adc
sub
pop
xor
idivb
push
mov
lock
cs
int3
jle
cmp
sbb
nop
inc
leave
xor
sub
mov
sub
test
xor
pop
fimuls
mov
pushf
pop
mov
das
mov
test
loop
push
into
cmc
push
aam
jne
xchg
int
xchg
cmpsb
mov
xchg
pop
push
sbb
or
lahf
xchg
pop
js
out
push
insb
inc
dec
scas
push
push
mov
fdivl
pop
movhps
rorl
jecxz
test
out
test
orl
shlb
imul
pop
cmp
out
fiaddl
lds
push
pop
jne
sbb
andl
cltd
cmc
add
decl
std
out
pop
test
aas
les
hlt
or
ds
shrl
dec
fnstenv
ds
xor
jne
aam
outsb
data16
pop
pop
lahf
push
lcall
adc
je
mov
mov
cmpl
repnz
jmp
sahf
stos
jecxz
in
insb
sbb
pop
push
pop
adc
rorb
lcall
stos
orb
fdivl
filds
test
popa
dec
stos
ljmp
inc
daa
mov
repz
mov
out
adc
adc
sahf
push
push
pop
sub
cmp
push
in
pushf
push
sahf
pop
popl
nop
enter
jecxz
push
adc
cmp
idivl
push
test
mov
xchg
xor
xor
cmp
lcall
jmp
xchg
fwait
or
test
jmp
cmp
flds
sub
out
popf
sbb
cmc
int3
mov
mov
push
sub
push
mov
push
popf
cmp
pop
mov
mov
sbb
fs
push
pushf
mov
pop
sti
xor
adc
iret
mov
push
dec
adc
aas
mov
cld
xor
xchg
push
sub
jle
mov
add
and
xchg
mov
rorb
push
adc
es
adc
lock
add
ljmp
jne
scas
xchg
into
test
sti
fnstsw
and
negb
mov
push
int3
xchg
std
pop
scas
scas
test
jp
dec
jge
mov
mov
fldenv
adc
sbb
dec
mov
and
fsubrp
mov
sub
lret
je
push
push
pop
xlat
push
jle
in
lret
push
mov
adc
mov
mov
add
pop
loop
inc
cmp
push
dec
hlt
xlat
or
pop
fwait
jbe
ljmp
dec
sub
outsl
sbb
xor
mov
fs
push
lcall
int
stos
inc
or
mov
push
gs
jmp
mov
ffree
pop
mov
movl
mov
movl
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
sahf
sbb
lods
adc
adc
int
adc
inc
cmp
xor
push
sbb
xchg
aad
mov
add
movsb
adc
incl
ja
mov
aas
dec
xchg
inc
leave
add
cli
vcvtsd2ss
jae
mov
pop
xchg
jl
add
add
add
aaa
mov
into
jo
lcall
bound
aaa
aam
push
mov
shrl
stos
push
push
cmc
cld
push
push
xchg
mov
fistpll
in
mov
imul
add
enter
add
jp
push
dec
pop
or
dec
call
pushf
mov
jge
add
leave
cmp
cmc
insb
pop
push
jg
jp
fmuls
lock
xor
pop
lea
lods
arpl
xchg
inc
imul
cmp
pusha
cli
inc
jne
sub
sbbb
push
or
mov
sbb
mov
jo
dec
add
gs
cs
dec
mov
in
jb
pop
insb
xchg
das
sbb
jnp
int
mov
jp
shll
popf
std
aaa
repz
cmp
cmpsl
mov
or
cld
inc
das
xchg
popa
insb
shlb
sbb
arpl
mov
pop
outsb
adcb
sbb
add
mov
sbb
sahf
mov
into
shrl
jmp
movsb
push
arpl
add
push
dec
pop
aam
fistpll
cmpsl
aad
xchg
adc
jle
jmp
adc
gs
std
dec
cld
pop
fidivl
lcall
push
insl
pop
inc
mov
fsubrp
push
mov
mov
sub
cmc
popf
notl
negl
lods
pop
and
je
xor
jb
lret
pop
xor
cltd
add
test
xchg
pop
cmc
jbe
nop
fbld
divb
cmc
pushf
dec
adc
cwtl
js
jecxz
stos
aaa
outsl
stc
shr
inc
jb
jae
out
shll
cmpsl
and
push
int
and
lock
xor
push
xorl
jno
test
std
roll
jecxz
add
fidivrs
adc
cmp
bound
adc
push
mov
test
insb
divb
add
in
mov
xchg
ret
fisubs
hlt
clc
sti
sahf
mov
mov
sbb
insl
jge
in
jmp
test
subl
fistpl
sbb
dec
add
lds
daa
sahf
lods
mov
jns
dec
jns
xchg
insl
shl
daa
sub
jne
push
icebp
lret
dec
leave
dec
lock
imul
incb
insl
aad
pop
inc
adc
xchg
adc
jo
sub
rolb
mov
fisubrl
adc
add
push
add
cmp
sub
and
dec
orl
mov
push
popf
sbb
rcr
xchg
sub
mov
flds
test
dec
scas
xor
dec
leave
sbb
mov
stos
xor
popf
lods
cmpsl
icebp
popl
push
mov
setg
inc
pop
push
sub
je
and
fildl
xor
lds
daa
mov
mull
mov
adc
andb
inc
test
xor
sub
or
pop
pop
mov
popa
aam
outsl
xchg
ljmp
rcr
add
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
imul
js
ficoms
adc
adc
adc
icebp
loope
mov
lret
pop
test
repz
repz
testl
add
pop
outsl
mov
and
sahf
iret
mov
insb
xor
int
dec
adc
cmp
or
fiadds
test
dec
pop
imul
daa
movsbl
mov
mov
out
xor
push
mov
aam
jmp
or
imul
clc
mov
js
jnp
xchg
cli
cmpsl
ds
sar
mov
stos
jge
fisubrl
jl
fld
dec
mov
stos
and
mov
mov
cmp
repz
fdiv
pop
jne
cwtl
ss
call
xchg
pusha
xchg
cmp
adcl
fildl
jb
cmpsl
in
sbb
push
mov
push
push
sub
sbb
adc
dec
repnz
cmp
or
ret
les
sbb
inc
xor
xor
repnz
jnp
xchg
sahf
mov
shrb
stos
adc
sbb
insb
jge
add
pop
in
xlat
nop
hlt
jbe
mov
pop
int
lods
inc
sub
shrb
or
cmp
fdivrl
aas
popaw
cmpsb
cli
ret
lods
js
xchg
mov
dec
inc
xor
insb
sti
mov
and
fst
push
adc
adcl
inc
sbb
sub
mov
xchg
xor
or
movsb
add
push
mov
and
in
retw
jecxz
sbb
mov
aas
dec
add
sbb
or
pusha
outsb
test
pop
pop
lods
adc
adc
mov
je
cwtl
into
enter
lcall
inc
fdivrs
push
mov
outsb
push
mov
xchg
incl
and
bnd
rcr
xchg
lea
sub
bound
dec
jp
dec
and
outsl
outsl
mov
repz
xchg
nop
ror
pop
mov
jo
xchg
jl
hlt
dec
jno
dec
sub
in
out
mov
push
insl
mov
sarl
test
movsb
lahf
popa
sbb
fistl
out
push
test
aaa
push
push
pop
push
ret
scas
and
iret
cld
dec
cld
dec
dec
popa
fwait
and
sub
xorl
pop
xchg
es
sarl
jo
xchg
or
fsubr
inc
in
test
js
fstps
inc
filds
icebp
mov
pop
inc
sbb
mov
lahf
cmp
jmp
cmp
movsb
adc
out
loope
xor
mov
dec
inc
pop
out
call
adc
and
rclb
or
es
shll
mov
repnz
ljmp
mov
or
cld
nop
xor
cltd
inc
test
sub
fstps
push
inc
aas
outsb
xchg
pop
push
in
and
cltd
jo
cli
lods
pop
xor
insb
jnp
sbb
mov
loopne
and
add
pop
jae
xlat
loope
shrb
ja
inc
les
daa
loopne
shrb
and
add
cmp
and
mov
inc
mov
lock
test
adc
stos
and
xchg
dec
into
add
daa
test
addl
lds
dec
add
mov
add
in
loope
jmp
fmuls
sbb
pop
scas
jle,pt
aam
adc
adc
adc
xchg
out
bound
sti
add
mov
push
in
or
adc
cltd
lret
fcoml
lcall
push
dec
out
dec
dec
add
push
inc
es
outsb
pop
out
cmpsb
mov
jg
push
imul
xor
or
lea
add
lret
imul
mov
loope
or
out
and
fldt
into
leave
lcall
pop
and
pop
test
jl
dec
push
out
mov
xor
mov
xchg
inc
sbb
add
rcrl
mov
or
icebp
adc
fistpl
out
add
ret
fidivrs
rcrb
hlt
lret
pop
xchg
sub
sbb
mov
mov
lods
mov
lret
imul
xor
mov
rcll
stos
cmp
in
and
push
mov
fcmovbe
dec
mov
adc
pop
mov
jns
lods
jp
addr16
mov
mov
push
dec
jno
xor
xor
and
mov
repnz
pushf
inc
mov
and
add
xor
mov
jl
lret
inc
jb
mov
pop
push
push
or
movsb
mov
call
aaa
outsl
mov
mov
lahf
inc
pop
sbb
lret
mov
push
hlt
in
fnstcw
mov
jae
dec
mov
xchg
enter
ss
int3
jmp
push
push
and
decb
push
loopne
ja
fldenv
sub
jb
mov
out
push
xorb
js
pusha
fwait
daa
or
mov
in
enter
loop
scas
bsr
cwtl
fwait
das
sahf
inc
fwait
call
xchg
push
xor
imul
mov
lods
jns
push
stos
jg
jo
cmp
adc
loop
add
fdivl
adc
pop
out
push
dec
mov
adc
mov
cltd
add
xchg
pop
pusha
ja
jae
rorb
mov
fsts
mov
outsl
cs
iret
push
mov
sbb
sub
push
dec
out
pop
mov
pusha
scas
test
inc
test
sbb
and
xchg
jae
add
hlt
inc
dec
jmp
and
in
fwait
jp
mov
push
jecxz
mov
scas
push
mov
shll
inc
sub
xlat
adc
lret
ret
mov
sbb
hlt
dec
sbb
push
xorb
in
pop
cmp
pop
dec
mov
cmp
clc
int
push
or
sbb
jne
xchg
outsb
fbld
jmp
sbbl
pusha
and
or
jne
mov
int3
pop
lods
jnp
cmp
pop
xor
out
testb
outsl
inc
mov
cmp
sbb
mov
sbb
sub
adc
sti
jnp
cmp
outsb
insb
xlat
inc
add
stc
nop
into
aaa
inc
inc
out
aad
mov
js
mov
stos
rclb
pop
mov
ficomps
jno
cmp
cmp
jge
cltd
imul
adc
adc
fadds
jecxz
pop
cmp
xor
into
xchg
pop
or
inc
push
cmpb
mov
cmpsb
push
dec
cmp
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
sub
stos
xor
adc
int
adc
xchg
xchg
cmpsl
sbb
cmc
outsl
sbb
sbb
addb
hlt
xchg
int3
gs
xchg
or
jecxz
pop
xor
and
fs
xchg
fndisi(8087
fsqrt
inc
loopne
mov
mov
xchg
lret
pop
pop
test
shl
pop
jmp
adc
test
movsb
aad
push
aaa
mov
movsl
cwtl
inc
les
insl
rcrl
pop
icebp
jbe
cld
sub
lahf
push
lods
in
add
int3
or
xchg
aam
negl
imul
pop
loopne
test
dec
cmc
inc
mov
push
cs
mov
mov
jg
les
push
mov
daa
sub
cwtl
test
iret
aad
jge
and
jecxz
push
push
cli
inc
lds
stos
dec
jnp
cmp
cwtl
jp
xchg
sub
add
pop
jbe
or
jp
or
ljmp
cmc
cmc
inc
mov
loopne
pop
pusha
add
jecxz
sub
mov
pop
jecxz
sub
or
sub
mov
xchg
sbb
mov
lds
jbe
and
ljmp
inc
movsl
ja
test
xchg
add
loope
call
sarb
xchg
pop
shll
int3
mov
mov
jp
inc
enter
xchg
cmp
out
mov
mov
test
add
aam
add
sbb
push
lock
test
inc
bound
mov
mov
sbb
cmp
xchg
iret
adc
or
out
add
dec
pop
into
inc
lea
and
cmp
ja
stos
dec
push
test
int3
dec
or
xchg
arpl
push
xlat
xor
jno
fdivl
cli
pop
lea
jb
xor
inc
and
cmp
movsb
and
mov
jne
jg
es
sub
pusha
cmp
js
mov
pop
dec
enter
add
or
jo
sbb
mov
dec
ja
dec
add
addr16
int
and
mov
jbe
outsl
mov
jns
or
inc
push
mov
negb
ret
fisubrl
ret
xor
mov
inc
cmp
mov
and
sti
pop
fsubrl
in
lret
cs
and
loope
cmpsw
repz
jl
lret
xor
lret
pop
shlb
rcl
and
pop
jg
sbb
mov
lods
lds
das
xchg
ljmp
pop
fstl
inc
cld
daa
pop
fidivrs
and
popa
addr16
cli
push
sbb
adc
mov
add
push
insb
loope
shrl
test
pop
je
fbld
push
push
repz
push
pop
jge
pop
jl
jne
add
pop
mov
out
jle
push
lcall
pop
mov
and
add
adc
jmp
ljmp
enter
imul
xlat
add
rcrl
dec
and
ja
fidivrs
jno
cmp
push
clc
cmc
lret
pop
lret
sub
push
lahf
sub
ret
jb
bound
lret
pop
pop
sub
out
xchg
jo
add
imul
ds
sbb
es
add
sbb
xchg
dec
jb
mov
sbb
movsl
adc
xchg
mov
pop
arpl
aaa
into
xchg
lea
loopne
shr
mov
mov
xor
mov
xor
or
mov
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
xchg
inc
cwtl
lods
ljmp
adc
std
xor
jmp
xchg
repz
jnp
fmull
mov
testb
jno
dec
stos
sub
daa
pop
mov
repz
cmc
mov
dec
fwait
daa
mov
mov
mov
fnsave
jmp
leave
pop
mov
adc
rorl
cmp
jno
inc
mov
in
clc
sahf
lock
push
movsb
out
sub
aad
add
dec
dec
adc
pushf
jne
bound
subl
scas
clc
in
stos
cmovnp
mov
jno
or
stc
jnp
inc
and
stos
mov
pop
pop
lods
pop
dec
fwait
test
sub
xchg
ret
dec
imul
loope
jo
mov
insb
xor
cltd
mov
xchg
mov
in
xchg
aad
pop
adc
adc
rorl
xchg
add
mov
fcoml
inc
pop
pop
call
dec
rcrb
nop
inc
stos
and
lcall
xchg
cld
mov
push
add
inc
push
clc
ljmp
rcrl
movsl
xchg
xlat
push
push
cs
frstor
ja
adc
push
into
fdivl
es
xchg
lahf
daa
xchg
stc
lds
adc
cmp
jge
mov
ret
lea
incl
jl
adc
add
mov
data16
js
fildll
adc
shrb
push
mov
int3
mov
xchg
addr16
pop
push
sarl
stc
pop
xlat
scas
das
and
int
add
xchg
push
divb
stos
lret
add
in
xor
shll
dec
adc
cmc
js
cwtl
push
cmc
push
dec
jg
imul
push
inc
nop
dec
cli
or
push
xorl
mov
cltd
mov
test
divb
test
mov
faddp
push
xor
leave
stc
or
popf
shll
push
aam
or
push
jmp
int3
sub
or
push
ds
or
or
add
dec
pop
and
jae
cmp
cmpsl
addr16
cmp
in
or
mov
sub
pop
jae
inc
test
bound
fcomps
push
ds
lcall
mov
insl
movsl
pop
mov
lods
ljmp
push
mull
div
push
cld
mov
fidivs
cld
push
cwtl
iret
cmp
sti
imul
push
push
cwtl
pop
in
cmp
mov
mov
clc
pop
aas
int3
scas
sbb
int
cmp
rcrb
mov
push
loopne
aad
push
arpl
outsl
sub
insb
lea
jbe
dec
or
jmp
enter
mov
lcall
popa
push
aaa
or
jge
inc
sub
bound
in
arpl
out
shl
int3
mov
aad
lock
inc
add
out
call
sbb
cltd
sbb
adc
hlt
loop
std
xor
jne
or
outsl
movsb
ret
jnp
push
pop
mov
rorl
fs
js
jns
pop
push
call
cmp
lods
add
lock
xor
add
mov
jbe
cmp
pop
sub
sub
out
pop
scas
sub
outsl
insb
rorb
dec
sbb
xchg
xchg
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
ss
push
ret
int
adc
loop
mov
jl
sub
cltd
and
jne
inc
rolb
cmp
or
mov
ljmp
in
mov
inc
jge
clc
add
lcall
faddl
shrl
sub
fiaddl
push
xchg
std
lods
add
aad
mov
and
push
adc
pop
out
pop
ja
out
js
sbbb
sub
pop
cmp
xchg
mov
dec
mov
or
jl
mov
cmp
cmp
cmc
push
adc
xchg
cmp
jg
ret
mov
lods
mov
add
jb
mov
repnz
repnz
jle
xchg
dec
jecxz
sub
aaa
or
test
shrb
in
jnp
xchg
push
ret
into
xchg
or
cmp
mov
negl
adc
adc
jmp
mov
dec
jne
pop
xchg
insl
lods
scas
pop
imul
outsb
or
mov
test
sub
test
lret
mov
pop
mov
fsubl
xor
cmp
mov
daa
mov
dec
fiaddl
push
loopne
sarl
mov
jmp
in
data16
inc
xor
add
aam
adc
push
mov
jae
adc
mov
xchg
and
jecxz
clc
xchg
shll
mov
pop
jbe
leave
data16
mov
mov
xchg
notb
in
add
imul
movsb
cmc
xchg
shl
add
mov
pop
push
or
cltd
mov
cmp
pop
inc
jnp
jb
aas
xchg
sub
xor
jle
sbb
jecxz
xor
loopne
loope
ret
rcrl
insb
hlt
adc
addl
pause
sbb
push
ja
mov
dec
xchg
mov
repz
mov
inc
sbb
jl
js
xchg
or
loope
fisttps
out
and
jge
push
mov
aad
inc
sbb
sbb
mov
shl
cmp
jg
fnstsw
pop
mov
outsb
pop
add
std
dec
xor
add
xchg
ret
aam
xor
mov
fdivrs
sbb
push
dec
daa
adc
xor
pop
sub
dec
pop
jb
or
imul
mov
jmp
mov
cmpsb
add
sti
cmp
cmpl
push
out
fisubrl
cs
pop
fstl
mov
add
pushf
pusha
add
sbb
popa
cmp
lret
jno
rcl
mov
test
and
cmc
aam
js
das
mov
fisubs
repnz
xor
arpl
loop
jl
aam
clc
mov
xchg
inc
inc
adc
jle
leave
and
aas
dec
sub
mov
cli
jge
clc
adc
dec
shlb
jge
inc
pop
movl
lahf
ss
mov
popf
xchg
mov
hlt
lea
mov
sub
bound
or
test
jle
rcrb
rcrb
pop
fdivs
adc
iret
cltd
xchg
xor
fs
sbb
js
dec
xor
adc
cmpsl
insl
insb
aad
adc
fsubrp
mov
push
hlt
addr16
inc
inc
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
and
mov
int
adc
pop
ss
push
dec
adc
cmp
cmpsb
and
inc
into
pop
sbb
loopne
or
mov
xchg
fwait
ljmp
bound
cmpb
xor
cltd
pop
add
cmp
pop
xor
pop
adc
cmc
sbb
jl
mov
mov
sbb
or
xor
jmp
repnz
nop
sti
xchg
jle
imul
roll
rclb
push
mov
int
popf
movsb
outsb
in
mov
and
xor
shr
adc
fmuls
jno
mov
stos
cltd
adc
leave
sahf
lods
mov
adc
sbb
movsl
ss
loop
fdivr
icebp
fistpl
andb
push
add
mov
or
pop
and
xor
mov
orl
xor
aam
mov
add
add
insl
sub
addr16
push
adc
imul
push
or
jmp
xchg
test
pop
mov
sbb
jne
mov
xor
xlat
nop
jb
pop
xor
jne
cwtl
sti
xor
mov
mov
loopne
fsubr
testl
je
cmp
adc
inc
fwait
adcl
cs
lcall
xor
pop
mov
push
cmc
pop
inc
test
jo
push
pop
push
and
ljmp
in
lret
mov
loop
push
dec
notb
cmp
dec
cld
popf
dec
mov
xor
push
ror
cmp
xchg
sub
pop
sahf
dec
dec
fisttps
call
and
sbb
out
imul
roll
pop
xchg
aam
daa
mov
inc
xchg
ljmp
or
stos
mov
ljmp
movsb
icebp
sub
dec
sub
pop
sub
dec
jge
mov
scas
leave
xchg
daa
popa
stos
in
adc
in
aas
inc
push
mov
adc
dec
push
sub
xchg
dec
mov
cwtl
shl
enter
xor
fsubrl
adc
mov
lret
inc
inc
push
mov
dec
clc
xchg
cmp
int
ljmp
sahf
add
pop
sbbl
fwait
popf
movsl
jle
mov
dec
cmp
sbb
mov
out
push
aad
push
mov
xchg
xchg
lods
pop
dec
imulb
icebp
jno
jno
jge
and
xor
push
and
jg
out
mov
xchg
cmp
jo
sbb
std
jbe
push
or
aaa
pop
dec
je
popa
mov
jg
cs
inc
pop
mov
xlat
mov
mov
mov
dec
test
add
and
ljmp
mov
cwtl
fsubrs
push
enter
jnp
pop
pop
lods
movsb
movsl
sbb
jae
outsl
outsl
cwtl
mov
gs
or
pop
lret
imul
lds
cli
mov
cmp
std
incl
call
enter
popf
xlat
pop
sbb
in
inc
mov
push
add
sbb
pop
negl
popf
mov
in
jns
inc
rcrl
cmp
pop
pop
inc
popa
mov
out
cs
or
jmp
mov
out
dec
push
cs
in
pop
in
cs
popa
daa
mov
mov
and
ds
mov
or
sbb
pop
leave
stos
lea
push
add
fmuls
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
shlb
mov
adc
adc
adc
int
jecxz
push
insb
das
daa
sub
ror
test
lahf
jb
jmp
xor
test
dec
push
sti
std
clc
imul
hlt
pushf
subb
lods
int3
mov
xchg
or
lods
aaa
xor
lahf
call
xchg
rorb
pop
fnstcw
jmp
sub
sahf
divb
mov
pop
jle
mov
hlt
xchg
xchg
mov
stos
cmc
pop
jb
sbb
adc
call
lock
add
mov
mov
fs
jo
pop
inc
fisttpll
pop
xchg
push
ret
ja
add
sbb
scas
mov
nop
dec
inc
jecxz
ret
addb
insb
movsl
sub
das
push
jg
xchg
mov
pop
aas
movsl
add
enter
ret
add
data16
mov
push
inc
int3
sbb
lahf
cmp
sub
pop
cmc
and
scas
xor
filds
outsb
and
daa
add
dec
mov
icebp
ret
or
loopne
icebp
inc
popa
sub
out
jb
mov
loopne
rorl
mov
xor
lret
negl
jl
mov
pusha
add
out
xor
imul
xor
scas
out
pop
es
int3
mov
push
fnstcw
outsl
cli
cmp
or
push
lea
das
cli
and
and
dec
mov
xchg
mov
jg
scas
gs
and
dec
mov
dec
dec
es
je
js
push
cs
xchg
aaa
cwtl
and
aam
fwait
mov
pop
push
pop
adc
addl
imulb
setno
pop
jl
fidivl
shrb
loopne
loop
incl
fcmovb
test
adc
xor
cli
aam
xchg
cmp
dec
test
pop
adc
andb
jns
push
mov
lret
mov
data16
xor
scas
dec
mov
shr
out
out
stos
mov
ds
bound
sub
mov
or
xchg
shrb
sub
sbb
bound
aam
cld
lds
stos
cmp
sbb
adc
enter
ljmp
in
loopne
js
dec
jmp
in
and
outsb
jmp
jle
sbb
jno
xchg
cmc
std
mov
mov
mov
sub
int3
mov
shrb
arpl
lea
cmp
adc
icebp
cld
test
lahf
loope
mov
stos
jl
cwtl
cwtl
sarl
mov
mov
add
cmpsl
cmp
and
or
enter
xor
gs
xor
pop
gs
and
int
pop
pop
push
mov
in
repz
mov
mov
jle
jmp
push
mov
sarb
shr
cmpxchg
xchg
cli
aas
popa
xchg
std
out
and
jle
mov
push
daa
xor
add
jnp
fistpl
jb
inc
lcall
popa
push
add
lods
out
sbb
jo
inc
test
or
pusha
jae
sahf
jle
pusha
scas
cli
dec
push
jns
cmp
xchg
or
lods
pusha
nop
sub
jg
bound
or
jbe
std
mov
ljmp
mov
xchg
inc
cmp
stos
out
mov
outsl
repz
lahf
movsl
icebp
push
and
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
les
shrl
adc
sahf
mov
mov
push
or
cmp
or
xchg
or
add
lods
add
aam
push
mov
jnp
dec
adc
pop
xlat
lods
lret
jno
es
aas
mov
lods
loop
fistl
push
lahf
dec
dec
pushf
xorl
mov
jp
sbb
push
sarb
inc
xchg
xchg
pop
cli
jmp
ret
test
xchg
cmpsb
pop
inc
cwtl
mov
dec
mov
inc
cld
aad
nop
adc
call
xchg
push
sbb
mov
adc
in
addr16
push
dec
je
and
pop
test
xor
cmp
outsb
shl
bndldx
insb
ljmp
sub
aad
mov
sub
mov
inc
stos
fiaddl
aaa
outsb
in
in
ds
push
pop
jl
idiv
arpl
stc
push
mov
push
inc
imul
aad
push
jge
jp
sub
cmp
test
daa
pop
ficoms
dec
mov
rorl
cmp
mov
mov
shlb
movsb
adc
jbe
or
dec
imul
and
mov
out
jne
jmp
jl
inc
mov
mov
in
mov
jne
xor
fldcw
testb
xor
sarb
in
jle
in
cwtl
xchg
dec
add
sbb
pop
jae
cmpsl
das
mov
in
addb
mov
xor
xchg
ja
lahf
jo
iret
add
scas
sub
sarb
ja
cmpsb
lret
or
cmpsb
cli
pop
and
push
mov
popa
pop
jecxz
xlat
mov
fs
pop
pop
lods
sub
mov
hlt
mov
js
jns
stc
mov
and
pop
dec
mov
pushf
sarl
movsb
push
xchg
push
cwtl
cmp
hlt
insb
sub
sub
fwait
loope
sbb
icebp
sbb
jp
fidivs
sub
xor
dec
sahf
sub
cmpsb
outsb
jns
cmp
mov
cmp
shl
inc
jle
mov
call
jnp
lret
xchg
jo
dec
ja
xchg
gs
mov
les
jg
cli
cld
int
outsl
push
adcl
inc
adc
loopne
mov
push
inc
pop
dec
dec
aas
call
loopne
push
xor
mov
mov
iret
sub
sub
into
dec
ret
xor
sbb
fstps
push
popa
out
push
xchg
xor
and
sbb
jno
push
scas
mov
gs
getsec
mov
lret
mov
loope
push
daa
or
cmp
cmp
divb
lret
jmp
mov
jge
push
adc
xchg
out
cmpsl
mov
fistpl
cs
sbb
push
mov
icebp
xor
decb
fnstcw
sub
repz
lahf
mov
pop
xor
fistl
or
cmp
lcall
out
pop
aad
movsl
or
mov
dec
cltd
push
out
loop
push
jae
es
mov
aam
jg
rcrl
jp
jecxz
pop
imul
mov
sbb
and
and
fucomip
push
stos
xchg
ss
int
pop
cmp
scas
mov
jbe
xlat
jle
ficomps
jb
adc
rclb
jle
loopne
sub
dec
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
sbb
insb
je
adc
int
adc
push
mov
sarl
push
dec
daa
into
repnz
loop
jl
in
aas
push
jmp
lret
js
shr
js
out
and
dec
pop
mov
into
mov
not
sub
jmp
or
int3
leave
repz
jg
out
ja
jno
push
xor
lahf
push
mov
add
jl
adc
out
dec
jle
jge
mov
mov
mov
pop
xchg
pop
xor
adc
pop
int3
xor
mov
mov
pop
rcr
shrl
mov
outsb
push
addr16
mov
sbb
vmwrite
imul
push
cmpsb
push
adc
pusha
jae
stos
mov
pop
outsl
enter
ja
notb
xchg
pop
and
aam
imull
aad
jns
ret
mov
dec
fildll
add
inc
xchg
pop
popa
or
jg
or
cmc
mov
into
jl
daa
push
pop
scas
std
dec
mov
cmc
push
mov
or
jne
cmpsl
adc
adc
push
adc
enter
fnstsw
int
sbb
and
mov
out
push
lea
sbb
aad
call
mov
inc
inc
push
push
daa
inc
pop
pop
xchg
dec
leave
sub
sahf
push
adc
push
jle
shlb
mov
push
hlt
mov
xchg
enter
sbbb
pop
adcb
adc
cmp
gs
push
cli
cld
push
and
loope
leave
mov
push
mov
sti
imul
jbe
das
hlt
push
call
int3
jbe
dec
sub
push
rcrl
aas
insl
cmpl
jb
adc
push
mov
pusha
enter
stc
push
dec
lods
int
and
dec
mov
stc
jns
push
insb
and
sbb
fbld
test
or
mov
bound
xchg
fldl
idivb
insl
std
in
lcall
mov
scas
pop
sbb
ret
xchg
pop
cltd
xchg
push
dec
mov
xor
and
test
jp
pop
loopne
xlat
test
mov
nop
cmp
sti
mov
cmp
pop
mov
out
adc
dec
lahf
inc
jl
mov
das
push
loope
jle
cmp
pop
out
jo
cmc
test
imul
ss
dec
and
dec
push
and
stc
push
jbe
cmp
pop
js
mov
imul
mov
fs
jmp
jno
xor
leave
daa
add
mov
mov
xor
xchg
mov
push
enter
lret
insl
jo
push
xlat
nop
addb
out
add
mov
and
out
adc
add
push
mov
je
cmp
pop
ss
jb
adc
scas
dec
aas
pushf
jp
pop
in
mov
push
xchg
int3
dec
rcll
pop
or
pop
enter
mov
daa
in
push
add
push
loope
mov
scas
in
test
or
sbb
or
loop
mov
pop
push
mov
or
jecxz
mov
test
cmpsl
cltd
jns
sti
out
mov
add
jae
pop
movsb
or
arpl
mov
mov
dec
into
inc
mov
call
cmp
ljmp
mov
mov
xchg
xchg
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
rcll
adc
adc
adc
sbb
daa
or
push
xchg
jae
cmp
mov
in
imul
in
loop
daa
sub
xchg
and
jae
push
call
notl
loopne
fldt
push
dec
rorb
or
das
mov
pop
mov
std
lret
dec
cmp
inc
aad
pusha
pop
arpl
xlat
lds
les
test
scas
mov
adc
loopne
mov
pushf
sbb
jae
inc
sbb
mov
xchg
loopne
aaa
data16
jmp
pop
jle
shll
xor
add
enter
sbbl
sub
cmpsb
int
or
lea
cmp
pop
ljmp
inc
sbb
cmp
jns
mov
outsb
mov
cmc
sub
js
add
sbb
mov
ret
mov
sbb
mov
fcmovnb
sbb
shr
aad
jne
jnp
pop
xor
or
pop
push
lea
out
mov
cmp
mov
cmp
in
aam
in
mov
mov
jae
arpl
sbb
push
jnp
mov
lods
mov
add
xchg
mov
inc
jns
bound
movsl
xchg
stos
into
pop
push
or
jle
std
mov
cmp
sarb
jb
lods
adc
cwtl
int
xchg
flds
out
in
fdivl
inc
ud1
push
cmpsb
jae
cs
imulb
xor
dec
xor
sub
test
mov
or
add
or
xchg
or
lcall
cli
fld
mov
dec
ja
mov
sub
and
xor
in
sub
cmp
dec
cmp
stos
jmp
shl
sahf
ret
es
outsl
cmp
add
cmp
dec
jle
mov
jge
imul
dec
js
je
xor
add
stos
jge
sbb
xor
inc
or
cmc
adc
push
push
dec
sub
jg
fadds
int3
adc
pop
gs
push
jle
cmp
int3
icebp
into
xchg
xlat
jl
std
inc
popa
cmpsb
sub
mov
sub
mov
push
lret
sbb
inc
push
data16
mov
test
dec
call
add
cmpsb
pop
add
ret
in
inc
stos
xor
push
pop
jp
pop
out
dec
imul
cld
fistps
mov
jmp
add
mov
or
in
scas
push
dec
inc
sub
fst
lret
pop
lret
cmpsl
and
icebp
jae
cmp
jp
int
pop
and
not
pop
or
adc
shr
xorl
test
loop
ret
jne
sub
repz
movsl
lods
shll
les
push
add
aas
aam
addr16
inc
lahf
mov
mov
push
sbbl
repnz
les
pop
jno
jle
fdivrl
jbe
mov
mov
test
testl
and
xlat
aad
adc
into
mov
push
inc
movsl
jmp
push
push
push
cmp
loopne
sub
int
xchg
mov
mov
pop
push
pusha
les
stos
in
insl
pop
out
aas
mov
lods
sub
pop
test
pushf
test
std
fstps
stc
mov
mov
shll
stc
xor
xor
xor
mov
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
icebp
test
sbb
iret
cmp
mov
add
popa
dec
dec
in
out
in
imul
ss
aad
adc
jecxz
add
in
in
arpl
cmp
xchg
mov
mov
and
mov
loop
mov
inc
aaa
mov
sti
lock
inc
cmp
cmp
lods
ds
cmp
sbb
sub
or
lock
pop
push
fsubrp
xor
inc
cmpsl
das
adc
mov
cmpsl
js
pop
out
stos
rorb
push
lods
add
insl
sbb
scas
jmp
daa
mov
movsl
rcrl
push
and
repz
andl
push
ret
ficompl
jno
xchg
movsb
movsl
out
adc
les
scas
xchg
mov
ds
sbb
mov
mov
shlb
or
or
pop
cmpsb
cmp
and
xor
jp
aaa
test
inc
hlt
xchg
cli
in
sbb
bound
inc
leave
adc
icebp
cmp
sbb
fmull
ficompl
leave
insb
dec
xchg
out
ret
or
mov
jbe
cmp
cmpsl
mov
jge
xchg
fwait
sub
mov
add
or
jno
sarb
out
sbb
cltd
lods
movsl
test
mov
and
xor
cmp
push
int3
fsubs
in
sbb
dec
add
inc
psadbw
orl
fisubrl
loop
xor
repz
mov
jmp
cmpsb
pop
pop
cmp
xchg
hlt
subps
push
push
xor
xchg
not
cltd
daa
pop
ss
sahf
adc
lret
adc
ja
xchg
dec
inc
test
mov
data16
rol
repnz
nop
sub
jns
cmp
je
sahf
jb
xor
int
fldenv
and
inc
jnp
pop
imul
adc
jmp
inc
push
pop
sbb
sti
in
loope
lods
add
pushf
sub
add
imul
mov
cmc
cmpsl
mov
mov
mov
inc
shlb
mov
je
or
jnp
lret
repnz
out
pop
mov
roll
fcmovbe
sub
insl
aad
fdivrp
stc
ret
fdivp
add
dec
and
imul
clc
pop
sub
and
cltd
xchg
lods
and
int3
outsl
add
pusha
scas
test
pop
dec
push
push
insl
iret
ret
xor
and
sub
jbe
loope
outsl
pop
push
jge
inc
fisttpll
icebp
aaa
xchg
xor
insl
cltd
out
aaa
cmp
mov
std
and
loop
sbb
int
inc
adc
push
cld
rcll
in
and
and
mov
mov
jo
fdivl
or
divl
movsl
inc
and
cli
das
pop
xchg
das
jbe
lock
xchg
js
mov
daa
mov
push
fs
imul
shll
mov
pop
pop
mov
and
dec
jmp
dec
xchg
jae
pop
les
push
sub
cmpsb
xadd
or
xchg
xor
pop
loop
pop
out
pop
mov
cmp
push
ds
out
xlat
std
js
je
sahf
push
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
and
lcall
adc
mov
pop
pop
lret
ret
and
adc
jno
popf
sub
jne
mov
test
popa
addr16
loop
adc
sub
jp
int
ja
push
vphaddbq
lea
fadds
imul
loope
and
inc
jge
push
test
xchg
insl
push
add
pop
xchg
push
mov
int3
push
inc
pop
dec
or
cwtl
xchg
cmp
sbb
pop
sarb
movsb
outsl
decb
outsb
idivl
mov
mov
mov
jae
sahf
mulb
loopne
lods
and
xlat
or
sarb
mov
iret
mov
or
cmpsl
or
mov
jbe
pushf
sti
cmp
or
call
es
sbb
sbb
jb
push
lods
leave
sbb
mov
and
inc
nop
je,pn
es
fstpl
stos
mov
inc
movsl
xor
dec
insb
pop
imul
repnz
pop
add
pop
cmpsl
xor
mov
mov
pop
lds
lea
out
test
xchg
mov
pop
ja
inc
iret
stc
cld
cmp
jp
mov
mov
stos
loop
push
repnz
mov
xorl
sub
or
fdivrs
add
jnp
ret
xor
or
repz
lret
sar
dec
xchg
clc
std
or
adc
out
adc
inc
xorl
dec
pop
mov
and
and
stos
ds
jl
jbe
mov
in
adc
adc
cli
xor
sbb
std
jge
lock
jbe
and
mov
pusha
sub
inc
dec
inc
mov
sub
mov
mov
rclb
mov
test
leave
cmpsl
loopne
inc
stos
sbb
sub
pop
in
stos
or
cli
adc
sbb
pop
je
fucom
or
mov
xor
mov
cmp
rolb
cmpsl
mov
adc
xor
pop
xchg
fs
mov
aad
pop
das
mov
test
cmc
mov
sub
xor
mov
loopne
lock
mov
movsb
sti
add
pop
mov
stos
lock
xor
push
cmp
jne
inc
int
les
mov
lret
adc
roll
add
and
fdivrs
mov
xchg
call
rorb
push
imul
test
mov
cmp
sub
mov
and
sti
movsb
sub
stc
jge
insl
adc
add
in
xor
xchg
mov
clc
or
ja
or
inc
sbb
cmp
sbb
stos
jp
test
pushf
movsb
pop
and
and
xchg
call
inc
push
sbb
mov
data16
sub
repnz
adc
les
jb
outsb
push
add
pop
adc
cmp
mov
pop
xchg
cmpsl
lret
xchg
in
bound
mov
es
pop
mov
xchg
pop
or
sbb
popa
fsubrs
outsl
jmp
jnp
ja,pn
xchg
sbb
add
stc
fwait
add
cmc
jns
leave
sub
in
sbb
scas
insl
mov
popa
mov
adc
out
mov
pusha
cwtl
adc
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
cwtl
mov
adc
int
adc
dec
enter
std
hlt
andb
mov
inc
xor
sarb
fsubrp
icebp
lods
xor
sti
jne
xor
add
jl
mov
xchg
into
leave
cmp
fwait
pop
lds
ja
pop
loop
icebp
and
fdivs
and
ljmp
mov
mov
in
jns
jmp
push
iret
movsl
popf
int
or
xor
jnp
stc
std
stos
sbb
mov
lahf
mov
push
in
out
mov
jmp
pop
movsl
ss
mov
fwait
add
xor
test
fidivrl
cwtl
int3
xchg
enter
xchg
icebp
and
mov
pop
lret
xchg
sub
es
das
clc
xor
mov
sub
repz
or
aad
leave
mov
ja
xor
xchg
jo
mov
push
jmp
sub
out
int3
jge
sbb
sbb
out
jmp
incl
or
pop
mov
cmpsb
inc
outsl
dec
jno
sub
mov
testl
push
lret
cmpsl
jmp
scas
sbbl
insb
and
adc
jno
arpl
pop
sti
or
testl
iret
xor
mov
icebp
mov
in
mov
pop
movsl
sub
ror
ret
jmpw
and
dec
mov
into
mov
inc
hlt
iret
out
ss
pop
inc
gs
outsl
sbb
pop
add
ja
cltd
mov
push
mov
pop
test
jp
adc
or
popl
cwtl
xchg
or
add
lock
pop
in
xchg
dec
mov
sub
cmp
inc
inc
sbb
mov
xor
stc
xchg
iret
rclb
pop
arpl
jecxz
ror
cli
inc
or
stos
jl
adc
jno
push
push
jno
mov
adc
mov
iret
fs
push
pop
cmpl
insl
inc
inc
mov
jle
subl
jno
stc
cwtl
popf
lcall
xor
in
loop
lcall
push
sbb
not
out
jp
mov
testb
push
icebp
cmc
scas
pop
cmc
fmul
into
inc
push
add
movl
lods
test
add
in
fsubs
pushf
pop
insb
loopne
adc
popa
inc
mov
lahf
push
int3
xchg
mov
push
stc
cmp
push
jle
adc
roll
std
insl
xchg
fwait
popf
dec
inc
add
call
push
xchg
mov
jo
popf
rcrl
inc
out
jns
fwait
out
lret
lock
xor
inc
fsubrl
cmp
sub
test
jb
dec
fbstp
out
js
xor
cmp
cmp
out
fs
pushf
scas
sahf
shll
nop
or
push
mov
push
dec
lea
mov
add
dec
dec
add
mov
cmp
mov
and
cmp
cmp
pusha
dec
ret
call
inc
fcomps
mov
xor
out
icebp
mov
or
and
addl
sbb
loope
dec
xor
xchg
and
adc
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
imul
adc
adc
adc
mov
orl
js
dec
fwait
hlt
rcrb
sahf
jbe
loope
jae
mov
push
pop
inc
mov
movsl
out
pop
aas
data16
addr16
hlt
data16
or
loope
adc
outsb
mov
jno
jb
cs
jnp
cmp
lahf
pop
mov
inc
std
jae
bnd
aas
sbb
faddl
into
or
fs
jmp
mov
mov
jg
test
outsl
jmp
out
mov
jne
sub
adc
mov
sub
xchg
out
mov
add
xchg
dec
mov
fs
ljmp
gs
nop
lcall
subb
cmp
adc
imulb
nop
push
jns
sbb
mov
fs
outsl
or
out
stos
sub
sahf
leave
mov
hlt
in
pushf
fdivp
iret
cmp
sub
cli
xchg
popf
int
fdivp
adc
shlb
xor
je
popf
int
push
pop
out
out
sti
lcall
aaa
call
aam
jl
jl
jnp
rcrb
cmc
out
pop
mov
imul
mov
lcall
call
jb
and
arpl
mov
mov
ljmp
xor
cs
and
int
pop
dec
mov
push
dec
mov
or
xor
ja
idivl
cmp
ror
pop
loop
out
sbb
sbb
clc
cmpsb
in
mov
sbb
adc
or
push
shlb
repnz
xchg
jmp
inc
imul
enter
mov
cltd
xchg
sub
pop
inc
mov
mov
cmp
sub
jmp
sub
sbb
pop
xchg
incb
xchg
lods
cmp
lret
stc
dec
push
leave
out
jp
xchg
sti
mov
rorl
lret
push
cli
mov
mov
and
aaa
test
popf
push
lahf
jbe
pushf
test
fldl
cwtl
repnz
popa
rorl
pop
popa
lcall
pop
inc
ret
mov
adc
imul
jnp
popa
lahf
cmp
xchg
fldl
fmull
jb
shlb
test
out
inc
mov
in
mov
aad
loop
outsl
fstps
sub
pop
sub
dec
sub
dec
ljmp
sub
imul
mov
jge
fstpl
loop
sub
repnz
dec
std
loope
or
mov
popl
mov
mov
js
and
cmpsl
add
insl
and
lods
divl
mov
mov
sub
aad
iret
jecxz
loop
mov
mov
vprotq
das
sub
cs
repnz
std
adc
cmp
fistpl
xchg
mov
repz
clc
cmp
outsl
sub
and
movsb
adc
sti
fstps
out
push
mov
rcl
nop
mov
pop
divl
sub
push
mov
insl
pop
inc
jo
repnz
jle
jl
movsb
inc
jnp
xchg
sarb
xor
cltd
int3
movsb
xor
hlt
lds
add
adc
push
ret
repnz
jecxz
pop
sbb
ja
mov
sub
add
pushl
push
push
call
mov
jmp
xor
sbb
stos
or
mov
adc
adc
imul
aas
jb
jl
jecxz
xchg
cld
insb
mov
sub
cmp
and
xlat
ljmp
add
push
dec
inc
mov
bound
dec
scas
fldt
xchg
cmp
fwait
in
xor
in
mov
inc
js
sti
ja
pop
loopne
jle
div
fld
test
popa
mov
xor
jno
out
push
cmpsb
cmpl
vcvttpd2dq
add
ficompl
pusha
arpl
mov
fidivl
jmp
sbbb
stos
sub
movsl
cli
push
dec
xchg
imul
mov
dec
sar
dec
push
mov
mov
or
aam
dec
enter
fs
flds
mov
addb
stc
cltd
dec
xchg
sub
jle
sbb
cmp
xor
fidivrl
shl
cld
sarb
outsb
cmp
es
sbb
insl
popa
mov
iret
adc
fadd
gs
hlt
push
or
stc
lods
xor
aad
gs
jmp
pop
pop
inc
mov
mov
mov
fiaddl
test
jg
addr16
scas
das
jnp
xor
push
xchg
add
jns
in
pop
sbb
in
inc
fs
push
popf
adc
out
sahf
andb
inc
mov
call
in
inc
into
rcrb
and
mov
inc
cpuid
dec
cld
rcll
cli
cmp
mov
pop
loopne
iret
fsubrl
aaa
enter
adcb
dec
in
das
push
dec
stos
push
test
cmp
mov
xchg
xchg
pushw
cs
xor
ret
adc
mov
call
add
mov
enter
pop
in
push
scas
cmc
dec
or
xchg
fimuls
jnp
xchg
sub
jmp
loop
push
jne
lea
mov
les
push
cs
push
push
aad
cs
les
fcompl
mov
jge
jle
add
fsubs
clc
pop
test
std
cld
inc
bndstx
test
into
push
mov
sub
xor
sarl
sbbl
into
iret
cwtl
xor
jne
mov
push
mov
mov
test
popa
aas
xchg
mov
mov
mov
out
sbbb
xchg
cmc
dec
jno
add
cli
pusha
cmp
pop
int
das
jb
mov
insl
in
xchg
cltd
adc
cmp
fsts
add
int3
xor
and
movl
decb
cmpl
test
sub
std
dec
xor
mov
in
mov
inc
inc
das
jae
xchg
sti
adc
sub
mov
nop
mov
and
cld
xor
sbb
sub
lods
cltd
pop
insl
subb
enter
fnstcw
hlt
push
pop
fisttpll
cli
out
adcl
hlt
mov
pop
push
add
inc
jmp
mov
adc
sub
adc
lret
shrd
xchg
lock
aas
imul
or
inc
adc
sub
imul
push
mov
repnz
int
adc
repz
mov
aad
cmp
mov
or
dec
and
jl
push
inc
lret
jl
pop
xchg
pushf
dec
xchg
jo
es
mov
mov
sbb
sub
push
pop
icebp
or
adc
shrd
jmp
ja
jle
sub
xchg
mov
int
xchg
js
jb
adc
adc
adc
mov
aad
or
ret
lea
mulb
cli
xchg
add
push
mov
adc
mov
mov
jb
sbbb
popf
outsl
inc
jno
movsb
shlb
arpl
fistpl
ja
insl
jb
out
mov
jne
jno
mov
lods
xchg
popa
sbb
inc
mov
mov
sub
out
sti
xor
sti
lcall
add
out
adc
ljmp
pushf
xchg
scas
dec
iret
pop
push
fstl
mov
out
jno
cli
aad
dec
mov
inc
jl
mov
adc
pop
stos
sub
cwtl
jp
outsl
and
in
push
aaa
adc
imul
xor
xor
xor
cmp
inc
sbb
sub
dec
inc
sbb
out
test
popa
xchg
jg
mul
das
or
xchg
or
dec
ds
mov
mov
sbb
aas
stos
fidivrl
dec
es
loopne
jmp
les
xchg
decl
imul
mov
lahf
je
test
mov
pop
adc
in
ficoms
aaa
ret
shlb
scas
popa
ret
inc
pop
xor
mov
add
push
inc
push
outsb
xchg
jnp
cwtl
xchg
jae
and
pmuludq
pushf
sahf
lods
xor
cmp
inc
xchg
les
jo
xor
push
cmovle
icebp
mov
into
clc
scas
sub
cmp
sub
cmp
and
xlat
jae
xor
out
mov
lds
jno
ror
aaa
cmp
arpl
into
outsl
inc
sar
and
int3
sub
mov
ret
dec
pop
shlb
fildll
rolb
cmpsb
cmp
cmp
add
addr16
xor
outsl
pop
dec
scas
sbb
adc
std
sub
sub
cmpb
gs
push
lods
int
insl
arpl
mov
cmp
jle
adc
adc
fstp
adc
inc
sub
cld
push
jle
imul
sbb
pop
nop
pop
test
lcall
lea
jmp
xor
inc
outsl
popl
mov
push
push
mov
insb
iret
jne
push
push
inc
mov
inc
mov
pop
xor
fdivs
mov
cltd
cmp
jle
in
push
call
push
arpl
loop
fwait
into
pushf
into
push
dec
mov
mov
pop
lods
ja
add
and
or
repz
jl
mov
in
push
push
rorl
mov
sbb
jnp
jae
js
xchg
lods
add
sub
outsb
inc
imulb
in
adc
sub
rorl
daa
ficompl
push
push
dec
pop
stos
xchg
fwait
mov
jae
enter
sub
cltd
and
pop
test
jmp
popf
rcrb
dec
dec
jnp
sub
cmpsl
or
int
nop
and
jle
lds
fnstenv
leave
in
pop
push
sub
cltd
neg
rcrb
pop
mov
imul
inc
ds
sub
iret
jg
dec
sar
push
arpl
sbb
and
mov
mov
je
mov
xor
sub
popa
jp
sti
pop
lcall
inc
pop
xor
and
jmp
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
cmp
and
adc
int
adc
sar
popa
sbb
cwtl
cmp
mov
movsl
jmp
pop
lret
xchg
adc
xchg
cs
arpl
leave
jg
jl
mov
ret
jo
mov
pop
lods
jp
inc
or
addr16
xchg
daa
adc
scas
dec
dec
cmp
ds
mov
in
or
out
pop
stos
pop
pop
stos
dec
scas
rol
in
in
jmp
fisttpll
ja
xor
enter
pop
mov
and
test
xor
or
shrb
in
movsb
addr16
add
loopne
dec
sub
shlb
add
pusha
popl
xor
push
std
jp
adc
in
inc
push
in
test
and
fsubrl
cmp
test
cmpsb
sub
adc
orb
stos
jbe
icebp
dec
add
repnz
mov
jmpw
mov
xchg
adc
pop
lods
sub
movsl
mov
and
lret
sub
pusha
jge
shr
mov
inc
jns
jb
call
adc
add
mov
loope
bound
xchg
fdivrp
shrb
adc
mov
pop
incb
xchg
jns
dec
add
pop
xchg
mov
scas
rcll
pop
sbb
lods
push
xchg
cmpsb
mov
and
loop
leave
jb
xor
data16
shrb
xor
xchg
in
adc
shlb
lea
fisttps
mov
cmpsb
or
testb
dec
pop
cmc
jne
mov
xor
pop
push
ds
nop
cmp
add
sbb
imul
aad
xchg
sub
scas
clc
pop
xchg
fstpt
xor
pop
ds
mov
inc
sub
jmp
cmp
push
xor
enter
inc
out
fs
lds
mov
sbb
lock
cmpsb
std
ljmp
xchg
xchg
mov
dec
jmp
popf
lret
in
pop
mov
scas
add
xlat
jo
xchg
add
inc
scas
in
mov
insb
int3
out
mov
sbb
arpl
leave
orl
mov
mov
insl
cmpsl
repz
dec
ja
push
aas
ficoms
std
gs
dec
add
cmc
arpl
add
and
nop
sub
mov
adc
xchg
xchg
je
pop
mov
jne
push
lods
sbb
cltd
mov
mov
pop
ret
mov
mov
push
out
repz
add
and
xchg
jmp
clc
mov
mov
insb
leave
mov
cmp
mov
sub
lea
movl
jge
pop
insb
fwait
mov
mov
test
and
push
dec
add
repz
pop
xchg
xor
dec
cmp
clc
xorb
mov
jl
je
aas
push
jo
out
aam
dec
mov
mov
cltd
jg
push
push
inc
jb
addr16
mov
or
fnstcw
mov
enter
mov
adc
mov
add
out
into
and
aaa
inc
fwait
sti
dec
dec
dec
sbb
xchg
adc
sub
inc
xchg
dec
xchg
jle
sbb
fcmovu
push
outsb
lret
aas
lods
and
push
xchg
push
icebp
cs
stos
fldenv
fists
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
sbb
js
bound
adc
adc
push
out
loope
add
das
cmc
pop
fstpl
fs
jbe
cmc
je
nop
add
xchg
arpl
mov
xchg
rol
cmpsb
mov
lret
mov
mov
xor
add
dec
mov
inc
mov
call
cmp
mov
orb
push
scas
push
cmp
movzwl
mov
add
push
aam
shrl
ret
mov
jg
daa
or
dec
ret
shll
mov
cmp
notb
cld
jb
fildl
jne
pop
outsl
in
pop
repz
xlat
fldl
shrb
ffree
inc
or
add
lahf
pop
sbb
lea
loope
mov
popf
test
cli
jae
inc
adc
inc
push
mov
enter
cmp
cmp
lds
push
stos
jle
imul
pusha
dec
xchg
shrb
pop
sbb
out
call
daa
mov
lods
aam
sbb
loope
shll
mov
fistps
add
and
pop
xorb
icebp
pop
cmpsb
jp
or
cmp
jae
add
les
jecxz
insl
push
cmp
nop
cvtps2pd
fs
jp
mov
add
and
fstps
pop
loopne
and
sti
dec
es
dec
fistpl
aad
ja
cli
fsubrs
jl
sbbb
lret
cmpsl
sbb
cmp
cmp
jp
dec
dec
push
inc
xchg
shrl
dec
sti
sub
xor
addl
imull
xlat
inc
stos
pop
jno
sbb
mov
aaa
fildll
push
sbb
loope
andl
pop
adc
lret
lahf
test
je
mov
xchg
cld
stos
lods
lret
pop
and
hlt
sti
repnz
jge
pop
test
int
mov
inc
sahf
jae
adc
cld
push
adc
ds
sahf
xchg
cmp
mov
shrb
lahf
xchg
xlat
jno
test
jmp
xlat
inc
adc
pop
pop
lret
and
or
leave
insb
dec
fcomps
shrl
out
cmp
and
lahf
xchg
pop
subb
fimull
in
xchg
mov
or
pop
aaa
loopne
insl
dec
push
inc
mov
repnz
dec
loop
adc
daa
mov
push
pop
movsb
add
ljmp
or
inc
sbb
sub
pop
call
rcl
mov
fisttps
std
inc
or
jns
jno
pop
mov
cmp
cmp
xor
pushf
lea
clc
sub
dec
popf
xchg
jle
ret
dec
in
push
pop
pop
testb
rcll
adc
adc
mov
lret
dec
cmpsb
mov
fcoml
fidivl
sbb
push
xchg
inc
movsb
out
pop
test
cmpsl
or
aad
lahf
fcompl
das
mov
mov
sbb
push
scas
push
cmpsb
cld
jp
jmp
das
daa
xchg
fisttpl
jle
jae
lock
leave
pop
xor
lcall
pusha
or
pop
mov
insb
pop
jae
or
xlat
inc
fcmovnbe
jg
enter
mov
xchg
les
add
add
push
cltd
sub
cmp
jmp
sub
jmpw
enter
fisubs
pop
sti
inc
loopne
ret
mov
loopne
mov
mov
push
add
or
or
inc
and
push
and
out
iret
jns
hlt
ljmp
ret
repz
inc
dec
xor
lcall
add
dec
daa
out
nop
stc
mov
xlat
sub
cmp
shrd
movl
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
mov
mov
xor
adc
or
call
xor
xor
jle
fildll
mov
sbb
add
icebp
cli
xchg
add
cmp
push
mov
pop
or
stc
xor
shrl
sahf
push
lcall
sub
movsb
popf
jl
lret
mov
inc
and
and
sarb
js
or
inc
jecxz
inc
idivl
mov
mov
and
xchg
push
xchg
mov
dec
rolb
andl
ds
call
out
pop
mov
sarl
lcall
popa
or
pusha
pop
adc
icebp
iret
pop
leave
sahf
mov
daa
test
adcl
sbb
aas
aam
push
lds
push
mov
jbe
repz
jmp
jo
frstor
pop
adc
sbb
cmpsl
fildl
fldl
jno
mov
mov
xchg
mov
pop
jbe
push
xor
pop
jl
sahf
ljmp
mov
in
cmpsl
pop
xor
in
mov
into
sahf
cmp
andl
mov
loop
inc
mov
xchg
test
ret
popf
insl
clc
daa
movsl
cmp
js
incl
xchg
shlb
imul
pusha
jg
rcrb
dec
push
sub
dec
cmpsl
cmpsl
cmpsb
sbb
outsb
je
sub
dec
call
mov
sbb
mov
pop
sbb
ljmp
push
sub
mov
xor
arpl
cmpsb
xlat
push
mov
sbb
or
xchg
sub
cs
xor
mov
adcl
cmp
sub
repnz
mov
scas
adc
or
cmc
dec
nop
fdivl
dec
test
push
frstor
sbb
popa
movsl
aaa
ss
add
jp
jle
mov
mov
int
xchg
into
cmp
jno
sub
ret
mov
out
lcall
pop
xchg
push
fisubl
push
rcll
jge
fnsave
and
xchg
cmp
xchg
in
lret
test
scas
and
dec
xor
fldl2t
mov
bound
lret
aad
ds
lret
pop
jne
or
ljmp
out
xchg
jns
xchg
inc
jp
mov
jle
lcall
outsl
add
pop
mov
aam
aam
cmp
cmpb
pop
lahf
ret
jae
xor
jmp
mov
cltd
xchg
sub
sbb
lcall
mov
xor
rcrl
mov
or
cmp
pop
jmp
adc
into
sbb
pop
lret
addr16
movsl
push
ss
dec
je
sbb
jmp
scas
fldl
push
or
jecxz
out
push
dec
lret
xchg
inc
mov
in
enter
fidivrs
lret
arpl
push
adc
jns
xchg
icebp
popa
pop
jecxz
das
in
mov
pop
dec
mov
sbb
call
jno
xchg
cld
les
cmp
out
adc
cli
push
push
lret
cmpsl
cmc
pushw
jb
stc
aad
int3
push
addr16
in
orb
xor
cmp
cmpb
mov
xor
mov
ficoms
xor
adc
inc
lret
iret
int
mov
adc
insb
or
int3
mov
jns
call
push
in
loopne
mov
stc
aad
out
ds
add
xor
inc
stos
mov
jb
into
mov
pop
ficomps
fnsave
repz
fdivl
jg
aas
sbb
movl
cmpl
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
jp
push
push
adc
xor
adc
loop
sub
cltd
lods
mov
jne
or
push
insb
mov
nop
fld
pop
xchg
inc
pminub
pop
jae
sbb
nopl
pop
fnsave
sbb
or
push
push
jecxz
push
cmp
mov
es
xlat
out
bound
or
das
mov
xchg
fiadds
lods
or
xor
in
sbb
add
xor
add
stc
fisttpl
push
sub
cmp
mov
jle
inc
lahf
jge
cmpsl
sbb
push
sbb
out
mov
mov
push
lods
xchg
stos
test
in
and
ffreep
hlt
pusha
sub
out
mov
mov
inc
in
ret
call
ror
lock
clc
enter
sub
xor
fistps
js
and
dec
lahf
addr16
mov
dec
into
dec
pop
js
nop
pop
pop
pushf
test
out
lods
ja
loop
into
and
add
xchg
rcll
imull
lock
mov
test
and
lods
dec
xchg
cmp
dec
cmp
fistps
enter
pop
popf
pusha
in
dec
int3
cmpsl
jnp
sub
adc
push
push
scas
data16
outsb
in
imul
mov
lret
mov
push
jmp
jge
in
shlb
fwait
adc
lods
push
jne
or
movl
bnd
sbb
xlat
xchg
mov
xchg
mov
add
rcll
stos
push
and
imul
mov
fisubrl
mov
inc
mov
mov
xor
or
xchg
xchg
jmp
jmp
add
xchg
cmc
mov
icebp
sbb
dec
adc
inc
es
and
stc
out
jge
jecxz
or
jb
fs
jne
lcall
sub
adc
jae
dec
dec
stos
push
push
mov
cmc
mov
adc
outsb
xor
outsb
cs
adc
mov
xchg
dec
dec
push
mov
push
mov
sbb
push
push
cmp
out
mov
clc
jl
mov
sub
ret
or
out
push
test
vshufps
arpl
add
lock
push
dec
cmp
in
mov
andb
js
add
cmpsl
mov
jnp
sysexit
xchg
or
movsl
adc
pusha
add
push
xor
fbstp
stos
xor
in
adc
push
pop
ds
sbb
jbe
ss
hlt
nop
arpl
lock
mov
dec
cli
lods
in
or
movsb
cmp
das
lds
xchg
jmp
inc
lods
repz
push
mov
fisubs
sarl
int
jge
movsb
cmc
adcl
xor
xlat
ss
pop
repnz
adc
push
mov
or
scas
dec
dec
sbb
les
mov
jae
mov
repz
dec
cmp
add
sub
pushf
jmp
jne
call
push
mov
push
sbb
loope
cmc
inc
mov
inc
dec
movsb
xor
cmp
jnp
jmp
push
mov
test
pop
icebp
inc
test
daa
aaa
pop
jo
cltd
out
push
jnp
test
fsubs
xor
or
mov
imul
sub
orl
xchg
ret
mov
push
shll
and
pop
jns
inc
mov
sub
inc
cmp
int
fmull
sub
mov
mov
mov
pop
fcoms
ss
call
add
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
cmpsl
inc
stos
inc
dec
adc
xor
adc
mov
popf
jns
mov
push
in
xchg
and
or
test
add
mov
pop
or
sbb
divl
lock
inc
mov
rcl
or
nop
mov
vminpd
rolb
call
inc
out
adc
xchg
xlat
addr16
pop
dec
or
and
mov
arpl
sbb
insl
pop
cmpsl
pushf
sarl
pop
push
outsb
xor
int3
xchg
jmp
loopne
add
mov
inc
pop
aaa
pop
rcll
jg
or
nop
fcmovu
or
push
mov
xchg
mov
pop
xchg
push
decb
cmp
fimull
push
inc
lret
mov
xor
mov
cmp
mov
clc
or
inc
lahf
bound
pop
cmc
mulb
ficompl
fimuls
mov
mov
ret
cmp
out
fstp
in
sub
je
inc
ds
xchg
stos
pop
xchg
and
cwtl
pop
xor
fiadds
popf
pop
rcll
sub
sbb
xchg
dec
rcll
bound
cs
push
push
daa
movb
sbb
cmp
pop
stc
sub
mov
and
xor
out
pop
idivl
sbb
mov
test
adc
fs
pop
sbb
adc
pop
dec
lret
arpl
rcrl
inc
fmulp
lock
inc
mov
cmp
cmpsb
and
jg
dec
push
cmc
adc
inc
pop
outsl
jge
mov
or
xchg
ret
inc
popf
cld
push
cmpxchg
sarb
ljmp
jle
loope,pn
sarl
sti
xorl
sub
xchg
test
fwait
outsb
inc
ret
pop
mov
jg
jno
testl
mov
or
jne
lods
jns
jns
sub
cmp
roll
mov
in
jno
in
ret
mov
stc
adc
fsubrl
mov
mov
outsl
rorb
inc
pusha
out
in
bound
cli
cs
xor
or
iret
add
push
pushf
call
sti
cmpsb
xchg
xor
mov
jne
lahf
ret
ffreep
inc
add
pop
fdivp
or
cli
sbb
out
ret
mov
dec
adc
xchg
fwait
mov
xchg
xor
push
fistl
mov
inc
ljmp
pop
jne
xchg
inc
ljmp
aad
cli
adc
jecxz
cmp
mov
ja
inc
cmp
nop
mov
test
jge
nop
push
mov
std
mov
mov
ds
cmc
fadd
or
icebp
clc
in
jns
hlt
push
sbb
mov
out
mov
clc
dec
mov
dec
lret
rclb
out
cmp
inc
xor
iret
or
test
sub
sub
fcompl
push
sar
imull
pop
jae
or
mov
add
push
dec
fwait
ds
cmp
mov
sti
xacquire
arpl
stc
fs
jecxz
sub
jmp
and
mov
sub
and
in
inc
in
int
icebp
icebp
ja
add
push
pop
or
jb
xor
insb
shrb
int
pop
cmpsl
cmp
xchg
rcrb
aad
add
daa
cmp
push
pop
push
sahf
movsb
and
adc
leave
scas
inc
xor
test
adc
xchg
fisubl
test
xor
cmp
xchg
daa
mov
jb
pop
scas
ret
mov
mov
cmp
pop
js
dec
mov
addr16
pop
xor
iret
ljmp
call
lods
enter
push
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
xchg
das
or
xchg
xor
push
mov
into
and
xchg
inc
nop
rcr
notb
jg
pop
dec
leave
daa
repz
xchg
pop
pop
mov
and
xor
dec
js
and
cmc
lds
test
push
pop
stos
mov
pushf
inc
stos
jge
fbld
int
sub
into
sbb
xchg
pop
push
jge
xor
lcall
sahf
incl
mov
mov
lret
andl
int
sbb
insb
jge
stos
scas
aam
jl
adc
nop
lret
and
shlb
std
cmc
push
xor
je
clc
cmpsb
mov
xlat
movsb
dec
ds
pop
jo
in
xchg
dec
mov
add
icebp
mov
aam
adcl
pop
out
stos
scas
jns
stc
ljmp
jecxz
stos
mov
cld
mov
mov
into
mov
xchg
in
xchg
enter
aam
adc
and
push
adc
jb
arpl
add
icebp
push
push
jmp
push
jb
or
stc
fmul
or
sbb
insl
mov
jbe
jmp
fldl
cmp
cmpsb
xchg
jno
jg
push
out
ljmp
xor
je
arpl
pop
mov
leave
inc
cmp
decb
movl
aas
push
inc
jns
gs
cltd
mov
ror
mov
hlt
inc
and
add
push
xchg
push
pop
mov
push
test
addl
imul
push
rorb
and
sub
jecxz
test
mov
add
mov
and
xchg
push
sar
cld
lock
lret
ffree
dec
lret
or
xchg
out
sbb
xor
es
push
test
loopne
mov
ljmp
push
into
mov
jmp
add
cmpsb
jmp
push
push
adc
data16
inc
cmpb
push
out
insb
inc
int
adc
es
pop
and
xchg
fsts
add
cmp
sti
sbb
jne
sbb
push
cmp
add
sbbl
fs
push
jmp
and
sbb
jo
dec
adc
mov
imul
loope
mov
bound
enter
aad
xchg
pop
jns
xor
shlb
lret
ds
es
add
ret
pop
adc
inc
fdivrl
cmp
jbe
adc
sub
mov
push
jb
lret
inc
int3
mov
dec
pop
mov
mov
fndisi(8087
push
jle
inc
push
jb
in
xchg
int
movsl
mov
cld
cmp
insl
xor
mov
dec
andl
into
xchg
fcomp
out
mov
in
jne
shlb
in
lods
lcall
in
int
cmp
jae
mov
dec
adc
pop
xor
xchg
js
shlb
mov
jl
dec
push
or
sub
int3
xor
fnsave
push
movl
sub
cmp
xor
inc
xor
sbb
sub
jae
dec
mov
cmpsb
nop
sarl
nop
pop
test
ror
xchg
pusha
loop
gs
or
add
pop
rcrl
fbstp
and
push
or
repnz
push
pop
xchg
inc
cwtl
mov
daa
jge
mov
jno
out
push
ret
push
sarb
sub
or
cmp
jmp
add
xchg
pop
clc
inc
jo
movsl
fisubrl
sub
adc
push
jl
ret
xchg
mov
jle
cmp
and
call
cmp
push
adc
daa
fistpll
adc
fwait
imul
stc
shll
stc
mov
adc
jg
imul
add
in
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
adc
adc
adc
adc
jae
sbb
negl
adc
push
lods
xor
dec
ds
sahf
mov
sahf
int
jmp
pushf
and
inc
hlt
rcrl
call
filds
dec
or
aad
dec
add
cmp
or
outsb
fcoml
push
popa
movsb
mov
sar
xchg
call
in
xor
mov
mov
or
int
ret
shl
cwtl
inc
xor
int
pop
popa
insb
mov
push
aaa
jae
push
push
mov
fists
jecxz
bound
push
popf
inc
fsubs
xchg
fiaddl
push
push
dec
and
stos
mov
mov
cltd
mov
iret
cs
cmp
fbstp
cmp
lret
mov
mov
and
rorb
aaa
in
sub
int3
or
and
mov
mov
add
sbb
push
mov
pop
int3
out
cmpsb
arpl
cs
push
sub
mov
rol
sarl
or
cmp
mov
rorb
inc
push
cld
cmp
lods
mov
shlb
loope
outsl
push
jns
xchg
mov
mov
in
scas
pop
xor
lcall
inc
sti
sub
leave
inc
dec
push
roll
gs
icebp
add
std
insb
add
iret
mov
inc
dec
mov
cs
sub
fdiv
std
jge
adc
jle
push
push
mov
ret
add
loopne
add
sub
in
cmp
pop
and
jp
rcll
mov
inc
cwtl
xor
in
and
pop
sub
sarb
mov
aam
dec
adc
loop
test
nop
ret
pop
in
xchg
es
cltd
sbb
sbb
hlt
dec
scas
out
xor
call
enter
xchg
pop
xor
dec
dec
jl
or
rorb
pushf
mov
or
leave
ficomps
mov
dec
sti
shl
adc
cmp
mov
movsl
push
jle
shrl
or
shl
xchg
push
inc
xor
out
cmpl
popf
lods
dec
lds
xor
cmpsb
inc
je
sti
jo
xchg
mov
lret
test
popa
fstl
xchg
insl
shl
and
push
pop
xor
xor
mov
xor
xor
mov
dec
flds
jns
pop
mov
dec
icebp
loop
jne
mov
adc
jae
or
in
push
jecxz
je
and
loop
mov
ret
cmp
enter
pop
gs
adc
mov
sub
aam
dec
adc
and
xor
pop
jge
add
add
add
mov
call
pop
sub
insb
mov
out
pop
rcll
mov
imul
or
inc
mov
pop
jg
adc
insl
sub
xor
push
sbb
jmp
sub
or
sbb
fwait
cltd
out
sub
rol
jl
pop
pop
lods
mov
call
pop
test
or
int
ja
stc
shll
add
int
jns
in
dec
or
pop
imul
push
adc
jb
shlb
xorb
arpl
fmull
icebp
in
mov
dec
rol
sti
in
orl
aam
jb
sti
pop
adc
mov
repnz
pop
push
sahf
call
adc
test
xlat
mov
sarb
aam
aad
push
stos
cmpb
pop
mov
popa
ret
and
mov
insb
dec
lcall
dec
inc
popf
jno
mov
add
int
decb
mov
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
pop
sbb
xchg
jge
leave
loop
mov
ljmp
adc
inc
lahf
add
sbb
cld
ror
or
leave
mov
iret
pusha
sbb
jle
jnp
sarl
mov
or
aam
repz
jo
xor
and
and
ret
or
push
push
subl
jl
xor
jns
popa
sub
or
hlt
stc
sar
fildl
mov
sub
in
shlb
and
bnd
in
sub
and
in
cmc
fdivl
fistl
fcomp
std
lret
repz
outsl
xor
mov
inc
sub
dec
test
pop
mov
pop
mov
sub
pop
repz
mulb
into
push
jle
outsb
dec
in
adc
aaa
jp
dec
sahf
adc
dec
mov
xchg
hlt
scas
daa
outsl
mov
sbb
ret
int
jno
adc
add
movsb
and
push
jecxz
jno
aas
or
jmp
sub
cmp
andl
cmp
mov
popa
xchg
int3
mov
sarl
fildl
cmpb
lea
shl
jns
or
or
sbb
cmp
jno
adc
cli
stos
call
pop
int
cmpsb
aaa
push
cmpsl
out
sahf
cwtl
add
ret
popf
add
sub
pop
mov
ret
mov
mov
sbb
dec
es
std
cmp
add
mov
loop
sub
btc
sbb
cmp
aad
mov
sub
inc
pop
cltd
es
ret
clc
inc
sub
test
into
ficompl
mov
andb
and
push
pop
movsl
xor
jo
xchg
mov
gs
enter
lcall
pop
stos
stos
rol
sub
fs
inc
mov
mov
lcall
mov
sub
mov
imul
dec
mov
loop
mov
ret
adc
sbb
cmp
and
xlat
test
mov
popf
pop
out
mov
inc
cltd
stc
and
sbb
mov
sub
mov
ret
in
xchg
test
cwtl
pop
scas
jb
cli
mov
jle
lds
cmpl
cld
lahf
out
adc
adc
repnz
pop
jp
inc
push
pop
jne
push
clc
jno
scas
push
enter
lret
jl
dec
pop
push
dec
fdiv
scas
call
xchg
insl
scas
lods
icebp
pusha
mov
xchg
cmc
bswap
sub
jg,pt
xchg
dec
stos
enter
cmp
ljmp
xor
xchg
xchg
cld
adc
push
iret
repnz
and
or
pusha
and
fcmovnbe
in
mov
orb
aas
inc
jecxz
sbb
scas
mov
sbb
idivl
lods
inc
jb
fistps
sub
std
leave
cmp
cmpsb
not
movsb
fcoms
gs
stc
outsb
sarl
dec
mov
shld
mov
fdivl
lea
psrlq
pop
dec
dec
test
ret
push
insl
out
out
dec
cmp
mov
aas
stos
or
repz
rcl
aaa
push
aaa
sarb
push
arpl
stos
cmpsl
mov
sahf
test
dec
das
lea
arpl
pop
mov
jno
mov
lods
push
dec
adc
mov
xchg
pop
imul
in
popa
jns
test
in
js
clc
es
lea
push
pushf
or
mov
dec
and
dec
fdivs
push
sahf
push
test
adc
shrd
xor
jmp
mov
popa
lcall
decb
push
sub
adc
adc
adc
sbb
xor
cmp
icebp
rcl
jmp
cmp
push
cmpsl
mov
mov
out
cmp
shlb
pop
rcrl
sahf
rorb
add
rcl
insb
scas
leave
je
dec
xor
pop
in
je
sub
rcr
sbbl
pop
or
loopne
and
mov
aas
mov
je
and
cli
or
cmp
inc
into
lds
scas
push
pop
and
inc
ljmp
add
sbb
adc
mov
fldz
jne
stc
movsb
clc
cmp
sbb
adc
xor
lods
inc
loop
sub
push
nop
jp
add
or
sahf
je
lock
leave
roll
test
into
popf
pop
lcall
push
loope
sti
pushf
stos
jns
lods
xchg
or
movsb
mov
jle
popf
outsb
fcmovb
cmp
fiaddl
pop
test
mov
aaa
mov
push
and
dec
push
lock
and
imul
cltd
push
inc
mov
fldl
cmp
mov
mov
add
inc
adc
dec
idivb
sbb
sbb
icebp
js
or
mov
xchg
dec
pop
fists
les
jo
leave
xrelease
les
bound
inc
sub
dec
ljmp
xchg
test
lods
and
xchg
scas
popa
pop
or
cmp
aaa
fcom
push
cmp
lock
std
cld
push
dec
cli
cmc
movsb
mov
xchg
movsb
gs
das
adc
lret
lret
test
sti
add
mov
xchg
or
js
test
lods
and
xchg
or
arpl
outsb
fildl
mov
hlt
push
pop
lock
lods
cld
popl
sub
test
pop
push
ficompl
ret
and
dec
ficoml
aad
enter
add
shl
mov
pusha
push
mov
sub
mov
ror
pop
imul
or
push
clflush
cmpsl
in
cmp
ja
cmc
mov
xor
push
aaa
repz
cmp
shll
cli
mov
mov
es
repnz
ret
rcrb
xchg
inc
in
lods
mov
sti
xchg
and
and
inc
aad
sub
sbb
mov
pop
add
lret
sahf
loop
or
cvtps2pd
mov
aad
mov
push
sbb
jno
ja
xor
xor
jmp
popf
push
mov
clc
and
sub
rorl
or
mov
cmp
adc
aad
cmc
jmp
repnz
imulb
in
ret
fsubs
and
inc
pop
sub
repz
lret
lock
pop
xchg
inc
sub
inc
mov
lcall
push
mov
bound
push
test
icebp
sub
mov
mov
mov
adc
ja
mov
xchg
je
dec
mov
fcompl
pushf
push
mov
dec
aad
jge
repz
sub
mov
or
gs
mov
xchg
ljmp
mov
loope
inc
adc
lret
das
fsub
inc
dec
leave
or
negb
movsl
mov
mov
je
call
and
cmp
xor
sub
fcoml
pusha
mov
outsl
mov
imul
sbb
sub
scas
fsubs
in
or
fstpl
out
and
mov
jmp
in
xor
mov
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
mov
js
and
adc
movlps
mov
loope
sbb
call
lock
and
inc
cs
lock
adc
and
iret
xchg
mov
rorl
mov
hlt
fmul
fwait
cmc
lea
mov
add
add
cmp
sub
mov
cmpl
cmp
fimull
scas
and
inc
mov
gs
enter
movsl
push
sbb
xor
and
leave
bound
mov
inc
and
push
adcl
cld
jecxz
idivl
iret
imul
lock
bound
mov
fistpl
push
xlat
lret
mov
dec
and
cmp
lcall
in
mov
jle
in
mov
jecxz
cmp
fdivrl
mov
jecxz
lret
ror
sbb
sub
test
lret
add
cmc
jne
enter
ja
dec
dec
pop
adc
or
dec
fbstp
stos
mov
scas
ja
pop
sbb
jl
jae
adcl
xchg
cwtl
rol
pop
and
pop
divl
mov
mov
test
mov
xchg
dec
mov
dec
imul
mov
pusha
jnp
mov
fsubl
das
cltd
cmp
mov
lcall
std
inc
xchg
jge
outsb
nop
adc
cmpsb
adc
sar
testb
jne
sub
cmc
pop
pusha
and
test
xor
xor
mov
lret
push
out
leave
jp
je
inc
dec
push
sar
scas
andl
push
pop
lcall
fwait
sbb
xlat
in
dec
and
insb
xchg
daa
or
push
jecxz
gs
xchg
stc
and
rolb
rcrb
out
mov
cmp
insb
jp
xchg
test
cltd
out
xor
xchg
in
xchg
loope
popf
in
or
in
andb
rol
jns
inc
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
jmp
adc
movlps
mov
dec
push
cmpsl
or
cmp
lahf
xor
jg
stc
inc
shlb
pop
repnz
aad
lock
mov
or
aaa
dec
add
push
pop
push
orl
adc
inc
fiadds
fldcw
xor
shl
xchg
ljmp
mov
pop
aaa
aaa
adc
mov
adc
adc
mov
aaa
outsb
or
and
cmc
mov
imul
dec
je
sbb
insb
or
fcoms
or
pop
dec
pop
loopne
scas
adc
jg
inc
mov
add
jge
push
out
push
pop
and
inc
and
sahf
flds
pop
das
xchg
out
in
cmpsl
shll
jnp
mov
mov
jo
xrelease
int3
lds
mov
sub
sub
repz
imul
aaa
pushf
pop
mov
loope
insl
sub
mov
sbb
xchg
jno
pop
imul
dec
pop
xchg
mov
xor
scas
mov
mov
dec
out
arpl
jno
bound
lods
mov
or
mov
xor
push
sbb
test
into
cwtl
das
icebp
fidivrl
scas
lahf
fildll
fnstenv
in
incl
push
mov
hlt
into
xor
inc
aas
movlps
js
aas
sub
xlat
and
xor
ds
dec
jbe
enter
push
je
xor
and
mov
dec
inc
sbb
or
adc
iret
inc
adc
icebp
das
icebp
adc
jmp
ret
xchg
cld
pop
imul
out
enter
iret
push
call
adc
sub
js
mov
mov
or
inc
sub
xchg
push
and
iret
adc
addr16
aam
inc
ret
jg
push
xchg
mov
sub
lds
push
xor
sub
imul
push
movl
movl
movl
movl
mov
jmp
outsl
or
or
popa
imul
nop
js
cmpsb
js
sbb
adc
movlps
pop
pusha
icebp
loope
incl
pop
enter
icebp
dec
pop
mov
cmp
xchg
sbb
mov
repz
lods
xor
xchg
popf
jno
out
cmp
dec
dec
cmpb
outsb
bound
iret
in
ds
imul
xchg
scas
xor
pop
inc
ja
popf
icebp
xlat
mov
loopne
and
sub
ret
add
jne
cmp
int
mov
das
lret
or
and
pushf
pmulhw
push
bound
in
and
enter
out
je
shrl
cltd
shr
test
mov
pop
or
push
shrl
ljmp
ljmp
pop
push
mov
in
and
jmp
jb
rcll
sub
clc
adc
mov
aam
nop
xchg
jmp
pop
daa
push
push
lret
sub
and
push
flds
sbb
jno
cli
aam
dec
xor
sbb
adc
add
insl
out
call
ljmp
ja
sarb
dec
test
inc
scas
xor
push
pop
xchg
subl
dec
rolb
fdivrs
dec
xor
daa
xchg
cld
mov
decl
jg
clc
les
lock
incb
mov
imul
inc
loope
adc
mov
xor
rclb
mov
mov
xchg
call
cmp
mov
out
jl
outsb
clc
push
aad
pusha
cmp
sub
xchg
popa
and
aam
loop
lahf
jge
jge
mov
das
sub
ja
sarl
fcmovnb
inc
pop
gs
cltd
adc
push
in
movsl
out
icebp
std
or
roll
sub
test
scas
imul
jg
jg
lds
xchg
stos
sub
es
inc
arpl
adc
push
mov
cmpsl
sar
fwait
dec
jbe
leave
jae
dec
inc
xchg
das
or
test
xor
cmp
mov
xor
adc
add
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
stos
cmp
and
movlps
adcl
lea
or
dec
xchg
cmp
test
push
and
mov
pop
jge
and
pop
cmp
and
jae
or
push
out
push
sbb
inc
std
pusha
mov
ss
jmp
fs
iret
fldcw
xchg
jge
fs
aaa
mov
add
movsl
fnsave
adc
sbb
aas
ret
pushf
inc
xor
and
sti
push
xor
mov
xchg
inc
bound
repnz
cmp
adc
dec
stc
xchg
rcrl
xchg
pop
add
mov
mov
xchg
mov
in
lds
cmpb
out
mov
mov
or
dec
in
mov
aad
inc
add
cwtl
testl
sub
lods
add
mov
mov
lods
inc
sbb
inc
dec
mov
or
sub
aad
jmp
scas
es
mov
push
mov
sbb
mov
jnp
int
add
scas
jge
hlt
and
jno
adc
jns
mov
mov
cmp
stos
dec
sbb
mov
aad
cmpsb
mov
lods
pop
adc
or
and
cltd
and
jb
mov
int3
call
adc
enter
add
pop
or
cmp
in
in
imul
out
add
mov
gs
movsb
movsl
mov
pusha
adc
repz
aam
out
sub
jne
push
fidivrl
jne
adc
pop
adc
icebp
mov
std
cltd
dec
rcrl
xchg
call
loop
test
push
dec
cld
loopne
pop
push
test
leave
popf
lods
or
cs
mov
test
and
scas
pop
movsb
xchg
or
leave
push
mov
pop
or
mov
add
ret
jb
cld
rorb
dec
and
jp
pop
mov
jmp
shlb
stos
hlt
das
clc
or
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
jle
mov
fmull
adc
or
or
enter
fcoms
lock
jge
lods
movsb
push
adc
andl
adc
xchg
fwait
movsb
aaa
xchg
mov
std
mulb
adc
mov
mov
sub
stc
loopne
cmpsl
rcrb
ret
dec
std
ds
pop
insb
jmp
cmp
sti
imul
in
push
call
and
inc
fimuls
popf
pop
rolb
insb
negb
sbb
test
insb
lahf
or
mov
scas
sbb
mov
movsl
cmp
out
cli
push
dec
xor
stos
repz
ret
mov
insb
mov
dec
lods
add
dec
mov
xchg
inc
lret
imul
fnsave
sub
pop
dec
dec
or
aaa
icebp
dec
or
popa
mov
jae
stos
stos
repz
ret
push
add
repz
push
mov
shrb
jle
repnz
pop
dec
mov
pop
repz
data16
aaa
xchg
inc
xor
stos
or
jp
cmp
mov
mov
ja
rolb
mov
push
xchg
pop
scas
test
imul
cltd
arpl
add
inc
fs
and
leave
pop
movb
ret
adc
fs
mov
negl
sbbl
push
mov
loope
push
in
lcall
mov
cmp
cwtl
mov
lret
lahf
aad
daa
jns
data16
in
fsubl
out
pop
push
out
iret
add
cmp
sbb
push
dec
rorb
sti
dec
bound
and
arpl
push
loope
jb
xchg
push
xchg
sbb
add
dec
sub
dec
out
bound
dec
pusha
shl
lahf
mov
mov
nop
jns
and
dec
push
test
mov
jmp
roll
mov
cs
dec
jae
mov
mov
adc
fmull
adc
ljmp
mov
je
mov
pusha
sub
fcompl
in
ror
lock
fdiv
add
pop
mov
or
mov
mov
adc
sub
insb
pusha
xchg
ja
push
out
adc
fs
enter
inc
cmp
cmp
and
sbb
cmpsl
les
or
xchg
cmpsl
mov
inc
sbb
dec
push
mov
mov
jb
repnz
pop
mov
xor
mov
dec
sbb
sbb
mov
scas
xor
sbb
ficoml
push
je
orb
aas
adc
fcompl
mov
ret
enter
je
pop
adc
gs
cmp
pop
ljmp
dec
push
cmpsl
test
dec
mov
into
call
lods
mov
clc
repz
mov
roll
jnp
or
xor
push
es
test
popf
add
dec
iret
rcl
dec
add
mov
decb
sbb
mov
jns
adc
mov
push
pop
pop
pop
subb
inc
mov
movsb
aas
or
fbld
aad
cmp
xchg
adc
cmp
daa
xchg
mov
cmp
xchg
xchg
mov
fnstenv
dec
cs
jno
addr16
aam
into
jecxz
das
mov
mov
fcompl
inc
imul
loop
push
notb
xor
jnp
ds
jp
adc
or
mov
jnp
inc
push
mov
and
fdivrl
fwait
xor
jge
int3
mov
mov
sub
in
addl
lods
and
mov
push
enter
mov
lret
jg
xor
push
shrl
aas
cltd
sbbb
and
popf
inc
xchg
outsl
and
and
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
mov
adc
movlps
daa
cld
mov
pushf
xchg
xor
lret
mov
rorb
fcomps
and
stc
in
shlb
sbb
xchg
mov
jle
jb
shll
jbe
subl
xor
xchg
fs
das
test
jp
cli
repnz
mov
jg
inc
outsb
stc
cs
insb
push
dec
gs
inc
cltd
ficoml
pop
jne
jp
cmp
int3
dec
sub
push
jns
mov
inc
inc
add
scas
jno
jb
jecxz
clc
out
movsb
xor
les
inc
mov
dec
or
cmp
js
lea
fistps
push
lds
cmc
xor
fstps
mov
or
addr16
clc
imul
sub
mov
sahf
rcl
test
cltd
inc
hlt
fnsave
cltd
xchg
int3
jns
addb
and
push
pop
dec
add
inc
jne
add
push
mov
adc
repz
into
test
mov
pop
nop
outsl
loopne
pop
sub
xor
ss
jo
dec
stc
jp
mov
jo
lds
push
je
cmp
iret
push
lods
sahf
in
inc
les
lret
and
pop
lods
jmp
xlat
lds
cmc
inc
xchg
popf
nop
jge
iret
cmp
std
std
sbb
fstl
movsl
icebp
mov
push
sub
mov
jnp
sahf
dec
push
filds
pop
sub
xchg
or
or
mov
bound
ret
fcmovu
dec
adc
repnz
repz
fiaddl
sahf
lods
mov
jl
jbe
push
mov
nop
and
pop
inc
lods
ja
lock
add
sar
inc
sbb
xlat
cmp
fidivrs
ja
lock
mov
nop
jns
ljmp
push
add
rolb
pop
pop
mov
pop
fdivs
mov
xlat
ds
mov
dec
jecxz
push
jno
sarl
andl
cmp
in
test
add
in
sub
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
dec
mov
xchg
dec
push
fimull
or
cltd
fs
fidivl
lods
push
sub
sub
out
stc
inc
jne
dec
div
outsb
imul
inc
pushf
in
xchg
test
loope
ja
xchg
inc
sbbb
mov
cmpsl
out
mov
imull
cmc
addr16
add
or
xor
clc
push
test
xor
xchg
test
mov
add
sbb
xchg
outsl
push
inc
push
push
sub
mov
out
fucomi
testl
into
dec
inc
mov
iret
test
adc
xchg
in
enter
xchg
or
adcb
xchg
lcall
cmp
sbb
mov
test
inc
movsl
imul
adc
rorl
pop
out
pop
clc
stos
or
cmp
jbe
mov
or
dec
pop
pop
inc
mov
inc
aaa
aaa
aas
mov
out
cmp
sarb
xor
not
out
mov
dec
out
ficompl
fidivrs
push
xlat
cmpsb
sub
jecxz
pop
jns
pop
sbb
push
in
jmp
sbb
adc
lahf
push
andl
jne
jmp
imul
pop
xor
and
cmp
movsl
push
mov
jnp
xchg
jmp
dec
inc
orb
xor
lret
inc
mov
repz
lods
push
imul
sub
xor
aam
inc
pop
or
xchg
int3
popa
inc
jl
lret
sub
add
fwait
pop
and
orb
fmuls
pop
leave
aad
aaa
push
push
jae
adc
and
or
xchg
push
pushl
scas
ret
fisubrs
in
cmpsl
fldcw
mov
int
dec
lock
orb
inc
out
jg
xchg
push
flds
scas
mov
movsl
mov
loopne
xor
push
mov
mov
push
fwait
div
add
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
xchg
aam
out
pop
mov
push
in
ret
inc
imul
jecxz
incl
mov
and
mov
mov
out
xchg
hlt
sbb
sbb
add
popa
inc
jecxz
and
test
lret
mov
aas
sbb
stc
add
mov
push
lret
or
sbb
jecxz
and
and
testl
xor
dec
das
adc
inc
ds
inc
push
test
mov
arpl
push
lds
outsl
pop
cs
jl
leave
xchg
jns
pop
outsb
inc
repz
pop
mov
sub
xchg
adcb
pop
push
xchg
add
adc
out
lds
or
fisubrs
cmp
pop
dec
cmp
sbb
push
dec
and
cs
stc
leave
pop
aaa
cwtl
cld
icebp
xadd
push
loop
lods
mov
sbb
stc
or
popa
push
mov
xchg
sbb
sti
xor
mov
data16
pop
mov
pop
pop
dec
scas
sbb
enter
movsb
xor
fs
adc
outsl
shrb
jp
addr16
sub
fucomp
mov
pop
push
xor
adc
add
ret
dec
mov
sub
push
push
mov
cmpsb
inc
dec
fdivr
mov
gs
push
test
cs
in
shlb
imul
push
lahf
hlt
sub
and
jbe
sub
int3
jg
sub
xor
jg
pop
lods
aad
outsl
adc
std
cli
push
scas
aas
sub
add
mov
int3
lahf
daa
loop
dec
mov
aad
fistpll
fwait
inc
or
adc
adc
xor
dec
lds
imul
into
mov
in
jno
xor
fs
inc
mov
negl
xchg
das
and
adc
mov
pop
lret
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
or
idivl
adc
fmull
adc
cli
sarb
xor
push
xor
inc
push
push
popa
add
lds
sub
aas
mov
xor
sub
xchg
xchg
lea
in
dec
movsl
sbb
push
sub
mov
nop
xchg
ja
cmp
push
js
iret
xor
dec
pop
lea
lahf
add
out
test
push
dec
xor
sbb
push
stos
hlt
in
cmpsl
jmp
cwtl
cld
loopne
xor
data16
and
sti
fdivl
adc
fadd
xlat
mov
popa
ljmp
fisubl
and
pop
sahf
sbb
cmp
in
add
sub
stc
xor
insb
adc
cmpsl
pop
cwtl
fcmovu
mov
lret
out
and
nop
stos
pop
xchg
fldt
imul
add
popl
aam
xchg
inc
loope
fwait
push
dec
or
leave
cltd
mov
dec
push
xor
in
hlt
out
dec
sahf
dec
add
cs
nop
test
pop
xchg
mov
lods
mov
xor
mov
sbb
sbb
and
adc
popf
hlt
mov
incl
pop
mov
sub
or
mov
jecxz
repz
jns
xchg
inc
sbb
mov
cmpsl
push
lods
fiaddl
je
test
cld
imul
movsb
subb
divl
mov
mov
inc
sbb
je
jae
icebp
and
cmp
roll
mov
adc
int3
sub
lds
xchg
leave
stos
fldt
pop
mov
dec
and
lcall
in
push
inc
or
push
jo
cmp
sub
sub
xchg
mov
jg
xor
clc
fidivs
lret
add
add
pop
and
mov
sbb
daa
in
fs
jp
orl
and
cli
jmp
ret
cmpb
imul
insl
xor
add
jbe
in
stos
jp
add
enter
rorl
add
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
popa
pop
lods
popf
cli
adc
fmull
adc
das
lds
adc
push
rolb
jne
pop
outsb
mov
loope
mov
jmp
fmuls
add
shll
movsb
lods
jp
cltd
add
mov
adc
mov
daa
add
cmp
mov
loopne
repnz
mov
int3
lock
and
shr
popa
pop
inc
mov
mov
sahf
negl
dec
inc
test
jg
and
sub
cwtl
pusha
mov
jne
aaa
or
push
ds
cmp
push
xchg
int
mov
loope
mov
repz
jbe
fidivl
mov
std
sub
xor
cs
int3
cli
mov
int3
sub
mov
scas
cld
test
mov
pusha
rcrl
push
loop
jle
mov
test
outsl
pop
rcll
sbb
mov
mov
jb
or
dec
loopne
aaa
push
push
mov
pop
mov
cld
xchg
in
cld
pop
push
dec
div
popa
mov
mov
mov
or
inc
xchg
mov
test
inc
lcall
and
pop
jno
push
shrb
stc
stos
outsl
fsubrl
xchg
xor
push
pop
addb
lods
shlb
push
test
shlb
cmp
fucomp
imul
dec
sbb
repnz
xor
repz
in
jg
adc
adc
cmp
sub
cli
mov
and
dec
or
dec
out
mov
xlat
sahf
jbe
cli
mov
jle
lahf
stc
mov
xchg
xor
aam
mov
loop
loop
out
add
fisttps
xor
enter
cmpsb
movsb
sbbb
jp
scas
add
xor
sti
cli
pop
fnstenv
test
inc
xchg
popa
aam
mov
mov
into
subb
lahf
sub
mov
xchg
shll
ucomiss
jmp
stc
mov
popf
sahf
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
push
loopne
push
notb
adc
movlps
loop
call
xchg
test
loope
aam
add
jmp
mov
js
adc
loopne
jmp
repnz
roll
in
popa
cmpsb
jle
gs
rorb
out
es
enter
jne
not
out
push
jg
push
stos
or
and
xor
test
mov
jg
cmp
test
mov
std
cli
dec
rorl
roll
and
or
dec
add
mov
imul
adc
aas
jns
dec
sub
test
cmpsb
mov
inc
cwtl
test
fwait
dec
mov
adc
test
movsl
pop
and
and
sub
cmpsb
loopne
push
fwait
dec
dec
pop
cwtl
dec
push
mov
inc
jg
pop
push
pusha
sub
jmp
test
rcll
sbb
inc
xchg
or
dec
dec
and
pop
sbb
cmc
inc
xlat
sbb
adcb
or
and
mov
cmp
dec
sbb
enter
add
cmp
adc
sub
outsb
mov
push
xchg
cwtl
add
xor
lcall
aas
and
push
in
pop
push
mov
fisubrs
mov
insl
mov
into
lcall
mov
test
or
inc
adc
rorl
leave
jle
js
jle
jg
outsl
xchg
call
mov
mov
jbe
ja
cmp
push
inc
int
push
cld
cmp
dec
xor
js
pop
loop
cmpsl
or
mov
faddl
loope
push
jg
and
fnstcw
add
push
mov
dec
je
add
ficomps
shll
push
jl
sub
fst
xor
sub
push
jecxz
or
mov
ficomps
mov
lea
push
test
in
loope
mov
xlat
sub
and
xchg
lods
aad
inc
clc
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
add
out
fistps
dec
fdivp
out
inc
and
mov
inc
paddsb
mov
push
sahf
mov
aaa
adc
int
fnsave
gs
inc
jmp
adc
inc
mov
pop
repz
movsl
inc
jno
pop
leave
push
sub
pop
or
out
sub
jp
inc
outsl
insb
mov
gs
mov
dec
pop
xor
dec
repnz
test
cld
pop
xor
cltd
add
in
dec
fdivr
pushf
out
sub
icebp
mov
insb
fidivrl
xchg
sbb
add
subl
dec
hlt
pop
in
push
subl
or
mov
xchg
push
or
inc
stc
ss
popf
push
mov
mov
xchg
pop
test
ffreep
jo
mov
bound
aaa
sub
mov
fdivrl
inc
mov
cltd
dec
in
call
fidivs
jge
mov
add
jmp
pop
xchg
adc
xchg
scas
xchg
addl
pop
sbb
add
add
out
repnz
cld
sbb
pop
xchg
cld
xchg
adc
push
pop
adc
imul
jnp
push
lret
loopne
cltd
mov
in
gs
cmp
fisubrs
and
mov
shl
xacquire
outsl
test
dec
dec
inc
pop
mov
dec
movsl
test
repz
cmpsb
cli
aas
je
divb
in
divb
lods
jne
je
xchg
lret
xlat
sbb
div
adc
insl
ja
push
xor
stos
inc
hlt
mov
ljmp
jle
xor
mov
hlt
xor
call
xor
out
jnp
out
push
cltd
out
stc
jg
lcall
fwait
ss
inc
sbb
cmc
insb
rcrb
pop
inc
sbb
mov
inc
xorb
pop
inc
testl
and
roll
pop
jp
rclb
outsl
jnp
in
fsubrp
in
shll
jp
ficoml
out
push
lfs
out
jae
clc
clc
dec
inc
popf
test
rcr
fildll
in
push
inc
push
fistpll
fisubrs
arpl
gs
pop
fidivrs
lods
cmpsb
add
fcoms
xor
fwait
mov
pop
int3
adc
mov
add
stc
mov
sub
mov
xlat
xchg
xchg
fs
fwait
adc
jecxz
dec
jae
shlb
out
sub
dec
sbb
push
push
mov
jp
fucomip
pop
jbe
mov
pop
repnz
mov
adcb
inc
shl
push
push
inc
cwtl
sub
sub
push
sub
push
cli
lret
lock
add
adc
popa
cld
lods
add
aam
cmp
iret
sub
arpl
in
mov
imul
mov
or
pushf
jge
call
mov
mov
xor
lahf
hlt
xor
cmp
gs
and
cmc
mov
pushf
adc
dec
int3
cs
xor
call
leave
or
add
inc
jno
aad
daa
mov
icebp
adcb
push
adc
mov
add
sarl
enter
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
pop
rep
mov
adc
jo
adc
addr16
lods
sbb
icebp
movsl
push
mov
aaa
jge
push
nop
jle
mov
sub
add
mov
cmp
jmp
popf
pop
add
cmp
aaa
mov
xor
iret
lret
scas
les
outsl
jno
mov
inc
adc
add
loope
outsb
shrd
out
fstpt
jl
or
in
mov
sarb
jne
out
in
roll
fcmovu
outsb
inc
fldl
sub
jo
jle
pop
addb
sbb
mov
js
push
rolb
pop
cmp
sbb
dec
pop
and
push
mov
cmp
sbb
mov
dec
cmp
cmp
jo
cwtl
inc
or
mov
jmp
repnz
jl
lea
outsb
roll
popa
in
repz
push
jbe
push
les
fistps
outsl
or
push
out
aam
in
ret
push
push
test
xor
mov
xchg
js
mov
sbb
scas
xchg
iret
hlt
imulb
add
cld
push
insb
movsb
inc
cmp
aam
xchg
outsl
and
xchg
add
sub
mov
cmp
fisttpl
imull
inc
xor
adc
out
or
jbe
pushf
aaa
mov
inc
stos
xchg
stc
jl
sbb
test
mov
mov
sbb
inc
mov
repnz
pop
sti
adcl
dec
mov
or
test
adc
shlb
mov
cwtl
or
aad
aam
mov
pop
cli
xchg
push
push
pop
addr16
loop
in
jnp
mov
push
push
lods
int
sub
add
push
js
outsb
cli
loope
movsl
scas
push
jg
unpckhps
or
mov
xor
in
loopne
jns
xchg
movsb
adc
test
or
leave
jmp
lea
jmp
pop
jo
sbb
jl
push
push
jo
xadd
sbb
pop
mov
mov
jne
ja
inc
subb
es
xchg
xchg
out
mov
test
test
idivb
jmp
adc
adcl
pop
push
jl
or
fwait
mov
push
sti
gs
clc
dec
stc
outsl
testl
jmp
je
loope
jp
repnz
sub
data16
or
sub
rcrl
mov
jl
outsb
dec
xchg
mov
in
push
xchg
mov
int3
outsl
add
fisttpll
xor
das
gs
sahf
xchg
test
add
or
lods
test
dec
cmc
xor
leave
or
loop
mov
movsl
push
idiv
xor
and
ror
mov
dec
shld
inc
out
pop
lock
sub
mov
add
clc
xor
inc
mov
ficompl
xchg
ret
in
std
sahf
sub
scas
adc
jo
mov
adc
xchg
jmp
clc
lods
push
add
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
incb
in
adc
jo
adc
rol
je
lds
leave
sub
loopne
outsl
repz
test
cmpsl
pop
in
int3
or
decb
jg
push
fwait
in
outsl
shll
mov
andl
mov
repnz
or
push
mov
mov
mov
push
jae
test
mov
nop
xchg
mov
pop
lahf
cmp
adc
or
arpl
jmp
iret
adc
mov
xchg
rolb
and
popa
adc
add
lea
mov
rol
addb
push
jg
enter
loop
hlt
jp
dec
push
and
mov
je
ds
loopne
add
out
flds
repz
push
push
xlat
sarb
sub
data16
cltd
call
dec
enter
fdivl
pop
bnd
cltd
call
ds
cmpsl
sub
outsb
int3
sarb
xchg
pushf
inc
sbb
mov
leave
testl
mov
packsswb
lds
or
lock
add
push
mov
mov
add
and
push
jg
test
out
sub
cmpsl
pop
dec
xchg
mov
cmpsl
dec
mov
dec
xchg
or
mov
in
iret
adc
lahf
out
nop/reserved
or
push
lods
xor
mov
and
add
lret
aaa
push
mov
add
lcall
mov
in
xchg
or
int3
dec
push
sahf
in
sbb
sbbb
dec
fsts
pop
addb
aam
sub
int3
es
mov
imul
mov
mov
imul
inc
sbb
sbb
nop
pop
dec
fisttps
add
ja
test
sub
or
sarl
mov
mov
xor
dec
jnp
xorl
jae
push
mov
cltd
imul
pop
cmp
mov
pushf
inc
mov
loope
lcall
add
scas
dec
data16
mov
push
and
in
push
xor
sbb
mov
mov
jbe
jge
mov
adc
adc
sbb
mov
je
sbb
loopne
das
rolb
sub
push
push
insb
and
inc
and
mov
jb
sub
dec
test
test
ljmp
mov
sub
pop
jp
pusha
rcll
mov
sub
test
sbbl
pop
inc
lea
scas
cmp
mov
out
aam
sub
sub
push
lret
xchg
sbb
rorl
imul
push
hlt
ljmp
add
inc
dec
ja
je
and
test
add
add
or
or
cmp
out
jge
arpl
inc
aam
cmp
add
inc
cld
xor
add
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
sub
inc
fstl
adc
adc
xchg
cmp
pusha
pop
mov
jae
insl
pop
cmp
cmp
insl
pop
add
xor
in
lods
ds
aam
push
shll
stos
adc
cmp
stc
fucomip
push
mov
ret
in
xchg
inc
mov
ficompl
sti
push
push
daa
pop
mov
sbbl
lcall
adc
push
dec
xchg
int3
dec
fmuls
pop
in
lods
icebp
shrb
cmp
and
cld
mov
popa
xor
mov
aad
lds
dec
mov
fimull
jmp
lea
in
mov
test
dec
test
fdivrl
repnz
mov
dec
xchg
jo
adc
add
xchg
pop
xor
mov
mov
arpl
movsl
jns
xor
and
cmp
pop
dec
fdivrl
scas
test
sbb
sub
mov
lret
imul
adc
pop
leave
fld1
or
or
sahf
adc
popa
lds
xor
dec
jecxz
stos
or
dec
rorb
pushf
es
xor
lock
jl
push
in
sbb
std
sub
cwtl
jmp
push
xchg
js
stc
jns
scas
push
loop
push
mov
in
and
into
insb
jno
sub
loopne
rcll
loope
movsb
int3
out
sbb
popa
push
xchg
sbb
or
push
xlat
cmp
sbbl
adc
push
cmp
mov
mov
adc
sbb
dec
jle
xlat
les
cli
cmpsl
pop
das
orb
mov
mov
mov
sub
int
adc
or
std
adc
dec
ss
imul
in
cmp
jmp
pop
pop
sub
lret
test
scas
imul
sub
adc
xlat
dec
or
add
scas
in
sbb
mov
adc
inc
fs
sbb
pop
mov
mov
shl
ror
and
cmp
mov
ljmp
outsl
adc
mov
sbb
ret
pop
dec
or
test
incl
add
inc
in
js
out
adc
rol
in
loopne
mov
test
push
xor
aam
mov
lret
sub
mov
xor
lret
arpl
jne
mov
inc
rcrl
jbe
dec
lret
sbb
pop
test
ja
cmc
rol
mov
mov
popf
lret
and
outsl
ljmp
mov
mov
dec
inc
loopne
xor
idiv
cli
mov
lcall
lahf
xor
hlt
cmp
subl
dec
scas
mov
xor
xchg
popf
mov
imul
xor
inc
mov
sub
mov
xchg
arpl
arpl
mov
subl
mov
mov
shrb
pop
out
cmp
pushf
push
pop
push
jge
sti
jl
enterw
dec
pop
cmp
cmp
loope
movl
mov
mov
jmp
jg
inc
dec
and
cwtl
lods
popf
push
lret
aad
adc
adc
inc
repz
xor
stos
pop
push
dec
add
and
jp
jae
ret
mov
push
out
out
jnp
orl
ret
ljmp
imul
movsb
stos
test
adcl
aad
outsl
leave
movsb
or
sbb
das
jmp
fdivrp
push
inc
gs
mov
lea
add
dec
cmp
xor
push
sub
mov
idivl
out
pop
bound
icebp
mov
psubb
dec
xchg
dec
ror
jae
sti
jge
insb
imul
mov
inc
sub
push
inc
push
adc
mov
int3
mov
adc
clc
cmpsb
sbb
jle
test
add
out
sbb
enter
jp
lcall
ret
imul
sub
jmp
xor
out
stc
test
leave
sub
sbb
hlt
adc
jle
inc
cmc
mov
xchg
inc
outsl
xchg
cli
rcrb
cwtl
mov
or
mov
add
fists
and
mov
jl
stc
push
mov
and
aad
out
es
idivl
movsl
adc
fs
popa
pusha
hlt
sbb
sub
popf
aad
jne
pop
xor
inc
xchg
in
xchg
mov
stc
mov
lret
stos
pusha
jp
lds
shrl
lds
sarl
js
shlb
int3
sbb
icebp
lcall
outsl
and
jl
test
outsb
push
rep
push
fs
jnp
mov
sbb
outsl
inc
outsb
or
pop
repnz
push
jg
jo
adc
je
mov
mov
shl
jo
loope
mov
mov
out
add
bound
push
sub
or
jge
cld
andb
out
rep
lods
divl
mov
in
push
push
sub
data16
mov
ss
divl
mov
test
cltd
movsb
mov
fsubrl
cmpsb
cmp
pop
aas
fmul
mov
and
sub
jo
enter
dec
leave
ss
adc
out
mov
mov
sub
icebp
cmp
imulb
hlt
mov
cmp
dec
pusha
addr16
inc
ret
hlt
sub
repnz
popf
rclb
out
sub
push
je
jl
je
jno
jl
in
cmp
mov
xchg
outsl
or
inc
inc
mov
insb
loope
mov
in
pushf
xchg
sarb
sbb
push
adc
std
pusha
pushf
xlat
out
jge
sbb
pop
repz
push
sbb
stc
add
cmp
pop
jns
sbb
pop
ljmp
push
loopne
xchg
inc
pop
sub
add
add
scas
lcall
test
dec
pop
pop
mov
mov
xchg
clc
add
rclb
and
out
mov
mov
mov
mov
test
enter
cmc
and
loopne
loope
and
jl
mov
cmc
popa
sub
xchg
push
add
jne
mov
add
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
mov
cmpb
adc
adc
arpl
or
daa
add
lcall
push
cli
mov
xchg
push
pushf
movsl
or
jg
push
out
movl
add
sub
cmp
inc
inc
imul
sub
test
fwait
cmc
fcmovne
jae
sbb
shrb
outsb
aas
lods
adc
rorb
mov
pop
aas
cltd
pop
inc
arpl
loope
xchg
ds
sub
mov
adc
enter
fnstcw
xchg
mov
add
ljmp
lret
or
mov
add
sbb
js
insl
mov
sqrtps
push
clc
cwtl
and
push
mov
adc
bound
enter
mov
mov
loope
add
pusha
xchg
inc
inc
push
pop
inc
inc
sbb
adc
mov
aad
pop
mov
sbb
mov
imul
xor
and
push
adc
std
mov
in
aaa
adc
jp
inc
and
out
mov
stos
gs
jbe
mov
jecxz
or
test
xchg
dec
sub
loop
or
or
shrl
cli
fmul
and
pop
mov
cwtl
inc
jb
and
sti
stos
lods
repz
or
pop
pop
pushf
movl
notl
add
das
imul
mov
xchg
cs
lahf
mov
push
sub
cli
outsb
enter
jns
inc
int3
pop
sti
sub
adc
pop
roll
xor
or
fxch
data16
add
icebp
stos
addb
xchg
cwtl
fsubl
push
push
rorl
fdivl
or
cmc
sbb
rorb
fistpl
inc
movswl
loopne
sub
daa
aaa
add
or
stc
mov
mov
nop
in
loope
dec
lcall
jo
add
flds
lret
mov
add
mov
sbb
lods
add
cmp
sti
cld
add
call
sbb
and
loop
shrb
mov
mov
add
add
fsubr
xor
add
cmp
mov
les
mov
sarl
shlb
rcr
push
mov
pop
hlt
cmp
nop
xchg
push
lods
out
cli
lods
subb
popf
js
scas
mov
add
mov
sub
sbb
pop
push
xor
inc
mov
sub
add
enter
daa
inc
fisubl
jp
cltd
cs
add
addr16
mov
popf
rcrl
ljmp
dec
mov
inc
int
mov
jb
lret
add
xchg
out
or
jp
call
fwait
out
mov
push
xchg
test
xchg
pop
jle
lock
jno
fcoml
cmp
les
add
fmulp
aaa
and
sahf
inc
es
rcrb
cmp
adc
out
pop
andl
insb
mov
imul
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
sbb
out
sbb
sub
mov
inc
sti
mov
cmp
cmp
test
sub
enter
lcall
das
and
inc
fwait
sbb
xchg
in
aaa
xlat
dec
movsl
mov
push
jg
or
xchg
ret
inc
lods
mov
cltd
outsl
daa
mov
test
lret
push
in
faddl
inc
scas
cld
pop
adc
add
ret
sti
cmc
or
jp
loope
jmp
jle
andl
popf
and
jecxz
push
xor
cmp
sub
dec
shlb
loopne
inc
cmpsl
adc
js
xchg
sbb
adc
xchg
or
push
jle
int3
fnstsw
stos
cmpsb
inc
push
jl
out
push
xchg
xchg
cld
pop
fstl
add
push
shrl
hlt
cmpsb
push
jbe
xlat
cld
stos
bound
pop
arpl
xor
mov
and
mov
jae
into
sti
ljmp
xor
pop
cmpsl
ret
sub
push
movsb
out
sbb
nop
add
xchg
aas
sub
ss
or
movsb
je
pop
rclb
mov
xor
jb,pt
jae
ds
sub
cli
jae
jmp
and
sub
push
mov
push
mov
andb
adc
sahf
add
sbb
xchg
dec
ror
sub
test
std
push
mov
fimuls
outsl
pop
mov
mov
sarb
out
dec
jge
data16
enter
les
xchg
dec
dec
mov
lock
cmp
pop
repnz
push
cmc
std
pop
cli
ret
nop
mov
aam
int3
sbb
lock
cmpb
dec
js
fisttpll
fsubrl
mov
scas
xlat
popa
xor
mov
mov
inc
sub
push
jge
cmpsb
adc
sahf
test
fnstsw
icebp
cmp
fisubrl
bound
test
test
pop
push
jg
xor
outsl
jg
mov
cmp
and
xchg
jle
fcmovne
and
xor
xlat
dec
sub
sti
add
cmp
scas
loop
and
push
inc
popa
mov
add
xor
daa
xor
or
cmp
sbb
ja
push
std
popf
push
out
or
sbb
fcomip
push
lahf
or
add
mov
or
pop
aad
out
stc
cli
cltd
pop
xor
lods
rorb
jne
inc
and
les
jo
popl
push
int3
xchg
out
add
repnz
mov
cmp
push
pop
cmpsl
das
push
cld
dec
inc
inc
xor
xchg
out
ficompl
leave
orl
rorl
xchg
inc
xchg
mov
inc
push
shl
pop
sbb
test
push
xor
push
inc
hlt
sbb
cmp
fidivs
sbb
mov
hlt
fwait
inc
cmp
aam
push
push
ja
pop
shll
mov
inc
mov
js
lcall
add
test
call
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
push
and
mov
adc
jo
adc
ficompl
lds
sub
jne
adc
pop
inc
mov
dec
jbe
and
mov
ja
pop
js
sub
xchg
mov
inc
mov
adc
imul
or
mov
dec
je
fstps
out
or
push
mov
or
lahf
sbb
inc
fsub
subl
stos
sub
cmp
cmp
or
sbb
repnz
sarb
lret
sti
sbb
loop
out
jne
xchg
xchg
jle
mov
mov
push
out
shll
sbb
dec
in
mov
mov
aam
aad
in
pop
test
ficomps
push
aam
sbb
ror
inc
jne
inc
cltd
push
int
sub
mov
push
ss
and
clc
push
pusha
aaa
and
pop
iret
imull
sahf
mov
cmp
je
arpl
sub
adc
data16
and
xor
ret
in
cld
and
sub
mov
aam
pop
cmp
iret
and
sub
ret
cmp
xor
lods
in
leave
add
loopne
jne
pop
xor
int3
lods
xchg
pop
pop
inc
data16
loope
inc
adc
mov
cli
je
inc
push
fwait
stos
cwtd
fwait
stos
data16
pop
mov
sbb
dec
jle
fucompp
das
testb
cmp
push
roll
and
xor
mov
sbb
pop
testb
aas
push
test
js
sti
add
shrb
lods
shrl
call
push
jecxz
dec
fsub
jle
pop
inc
leave
mov
push
cld
std
xchg
testl
adc
ja
aam
sbb
lret
in
sbb
cmpsl
adc
or
lcall
xchg
fbld
mov
test
pop
adc
vhaddps
or
xchg
mov
rolb
mov
fld
sub
in
cld
sahf
mov
dec
aad
push
ret
cld
pop
push
mov
imul
data16
jmp
pop
test
add
in
sbb
cmpsl
pop
loop
mov
add
jnp
xchg
adc
push
add
scas
ja
pusha
mov
push
inc
aad
xchg
mov
add
jnp
movsb
inc
or
xor
sub
adc
and
pop
xchg
lahf
mov
xor
xor
stos
mov
ret
lds
sub
icebp
push
xor
dec
cmp
icebp
outsl
or
inc
xor
jecxz
clc
sbb
cmp
ds
icebp
gs
into
xor
daa
aad
lods
clc
mov
sub
icebp
or
jl
dec
inc
fcom
pop
jbe
mov
cld
ror
pop
dec
loopne
ror
mov
div
cmp
mov
dec
xchg
xor
sub
jp
mov
or
sbb
shlb
xchg
test
test
stos
sbb
add
add
dec
mov
or
movsl
mov
imul
xor
jnp
inc
ljmp
sub
rorb
scas
dec
mov
or
ja
add
inc
add
gs
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
dec
sbb
adc
jo
adc
ljmp
mov
adc
in
fldl
jnp
push
dec
std
inc
xor
lds
out
cmp
rclb
iret
mov
mov
add
cmpsl
jno
stos
xchg
fisubrs
fmulp
outsb
mov
mov
or
dec
std
stos
sahf
or
push
and
idivl
aad
xchg
xor
imul
fiaddl
inc
adc
or
dec
pop
xchg
jecxz
mov
jae
xlat
push
jg
nop
xchg
lahf
pop
adc
add
insb
mov
nop
xchg
fwait
cmp
jnp
sub
jmp
mov
mov
cli
cmpsl
mov
imul
mov
lods
lahf
xorb
mov
pop
push
ret
lods
not
sbb
push
arpl
xchg
add
inc
int
movsb
movsb
inc
inc
sub
repz
pop
in
push
in
les
adc
nop
les
cltd
js
mov
inc
dec
sub
mov
sahf
mov
pushf
cmc
mov
lea
aad
sbb
adc
sub
pop
std
lahf
add
ljmp
rcr
popf
in
mov
push
push
add
push
sbbb
mov
notb
xchg
xchg
cld
je
adc
xor
ja
pushf
sbb
cli
sahf
aaa
cmp
xor
sbb
cmpsl
inc
or
cmpsl
mov
pop
cmp
pop
imul
push
rcll
outsb
mov
add
xchg
push
mov
and
fwait
enter
mov
out
dec
sbb
hlt
in
bound
icebp
xlat
aas
out
adc
push
scas
popf
mov
dec
xchg
add
loope
sbb
subl
je
xchg
orb
push
imul
sbb
dec
and
in
push
and
cltd
cmp
mov
insb
mov
imul
imul
in
hlt
fdivrs
xor
mov
pusha
mov
out
jne
int3
mov
push
stos
cmp
dec
dec
sbb
ja
pop
pusha
sub
jno
cmc
aaa
mov
clc
sub
push
not
or
in
push
aam
addr16
out
push
cltd
mov
push
ss
rcl
sub
pop
mov
cld
das
push
jbe
sar
xor
or
cld
push
fwait
sbb
push
inc
mov
out
sbb
push
xchg
sub
stc
jbe
loop
xor
out
test
dec
aas
int
repnz
mov
push
in
outsl
cmpsb
xor
xchg
mov
push
mov
or
fistpll
scas
mov
mov
clc
sub
jp
mov
cmp
mov
imul
call
adc
pop
outsl
in
push
adc
aas
insb
cmp
into
je
ja
cld
pop
pop
jne
cmp
jge
or
mov
cmpsl
pop
xor
or
outsb
mov
je
sub
imul
push
cmp
mov
sub
cld
pop
daa
pop
mov
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
lock
cmp
add
stos
sub
cmc
or
push
add
rorb
jmp
out
sarl
enter
push
dec
sbb
insb
ret
inc
cmp
mov
push
dec
in
pop
cmp
cld
pop
insl
jl
in
js
jp
sahf
fwait
arpl
inc
adc
outsb
stc
into
ljmp
push
sub
aas
pop
iret
jmp
rcrl
movsl
jmp
or
push
or
mov
inc
lods
and
and
aas
jae
or
jnp
xchg
je
imul
jl
in
pop
and
mov
mov
push
out
cmp
adc
fistps
or
mov
pop
xor
aam
test
mov
lret
and
test
orl
push
add
push
mov
popa
xor
sbb
mov
mov
mov
jnp
and
dec
cmpb
cmpsb
insl
daa
sbb
test
std
mov
call
push
sbb
cmp
push
mov
or
and
es
inc
sub
mov
dec
aad
pop
pop
mov
and
pop
pop
mov
inc
add
mov
mov
int3
mov
push
js
mov
scas
mov
arpl
jns
iret
xchg
pop
idiv
adc
dec
subl
stos
jne
rolb
outsl
pop
iret
mov
mov
rorl
push
fs
inc
dec
pusha
ljmp
mov
ret
outsb
pop
out
adc
imul
jl
and
fnstcw
cmp
mov
or
jg
pushf
jnp
test
inc
pop
adc
xor
int3
les
dec
fildl
xor
sub
xchg
jns
push
push
loope
mov
dec
dec
sub
aaa
lods
out
movsb
cld
cmp
jge
push
mov
rolb
xor
mov
popf
jo
out
fimull
sub
in
and
add
pop
shlb
bound
add
in
rorl
push
add
push
jmp
push
pop
push
js
lock
stos
movlps
pop
imul
jl
scas
lret
push
pop
mov
fcmovne
jne
movsl
out
pop
dec
bnd
and
ja
test
jl
mov
pop
popa
pop
leave
mov
fwait
inc
ja
cwtl
mov
sub
xor
xlat
scas
out
push
add
negb
push
ss
fcmovnb
ss
lea
nop
or
hlt
ja
sbb
test
rolb
and
out
dec
adc
roll
xor
and
scas
decb
adc
imul
nop
inc
dec
push
cltd
mov
sbb
sub
inc
popa
adc
hlt
popa
cs
scas
inc
es
xchg
ss
addr16
push
repz
lcall
fimuls
and
jmp
and
xor
repz
jno
fcoml
adc
sbb
stos
cmp
xor
pop
fcomps
jge
inc
cmp
movzbl
lahf
mov
mov
mov
inc
and
mov
push
test
fucomip
lret
dec
jmp
inc
jecxz
into
loope
cwtl
loopne
jg
div
dec
dec
jb
outsb
lahf
loop
ror
jle
mov
loope
mov
fisubrs
sub
cmp
insb
mov
lods
je
jno
cmpsb
jne
inc
movsl
int
fsubl
leave
dec
jne
pushw
cmpsl
dec
mov
repnz
or
adc
xor
or
dec
cld
mov
inc
lcall
sbb
aas
std
inc
lahf
or
ja
cmp
rol
jmp
out
addr16
scas
push
dec
stos
sub
nop
es
rcll
push
jno
inc
rorl
and
pop
xchg
sbb
orb
les
xchg
stos
out
pop
stc
mov
inc
xor
imul
jge
xchg
js
lock
in
ret
xor
xor
mov
xchg
cmp
push
pop
rclb
cmp
fadds
mov
mov
mov
jp
outsb
inc
mov
lods
repnz
jle
add
mov
stc
or
fcmovne
or
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
xor
adc
stos
movlps
adc
ljmp
mov
movups
rcrb
pop
mov
push
jns
pop
les
xlat
fwait
ret
xor
pop
push
mov
icebp
sub
xchg
and
inc
lods
jno
cmp
jecxz
les
lods
adc
dec
and
pusha
or
pmullw
stc
sub
push
sbb
call
rorl
pop
and
cmpsb
cmpsl
jne
fistl
adc
sub
mov
xor
jl
fwait
mov
add
sub
lods
mov
das
sbb
jge
or
inc
cs
sub
sbb
jb
cwtl
jp
aas
jns
in
jns
mov
cmpsb
inc
pop
aad
add
xchg
mov
mov
rcrb
mov
or
shll
dec
iret
lcall
ja
jnp
jmp
sbb
push
gs
mov
or
pop
test
iret
mov
sar
int3
pop
pop
mov
jo
xor
out
dec
push
imul
mov
mov
stos
ds
scas
sub
xor
fildl
enter
es
sti
jo
cmp
inc
gs
mov
enter
mov
jb
aas
sbb
push
dec
xor
insl
faddl
movsl
fs
stos
inc
lcall
cs
jo
loop
mov
push
mov
xchg
mov
test
mov
loop
test
pop
pop
and
adc
cmp
mov
xchg
lock
pand
xlat
cwtl
fiadds
je
cwtl
jl
pop
xchg
aam
add
rolw
pop
addl
cmove
imul
mov
jbe
in
sbb
sbb
mov
mov
test
fs
stc
push
cmp
leave
dec
sbb
popf
jle
leave
push
inc
adc
pop
mov
lcall
or
in
rcrl
sub
inc
dec
leave
xchg
jmp
cs
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
xchg
stc
mov
sbb
adc
stos
movlps
xlat
aad
loop
in
hlt
dec
frstor
mov
loope
clc
lea
incb
or
das
popf
lock
lcall
sbb
iret
aaa
lds
dec
icebp
ret
ret
push
jno
loop
pop
cmc
pop
pop
jecxz
enter
out
test
cld
sbb
testb
xor
cmp
cwtl
fucom
lret
js
xor
sub
lea
bound
pop
shrl
add
fisubs
lock
dec
sahf
mov
imul
xchg
pop
lods
dec
ljmp
jecxz
in
mov
das
sub
cld
inc
sbb
loop
mov
mov
xchg
push
mov
scas
add
test
mov
fimull
xor
scas
xchg
dec
in
mov
ds
es
sub
or
fdivl
dec
inc
insb
sub
xchg
lods
inc
popa
sub
das
call
hlt
push
or
in
sub
pop
cmp
mov
pop
add
xchg
lock
gs
call
gs
or
arpl
aas
mov
jae
push
push
clc
adc
ljmp
and
cmp
or
cs
popa
and
or
lret
sub
loop
popf
repz
gs
mov
inc
adc
xchg
fadds
lret
dec
outsl
mov
arpl
xlat
ss
mov
jl
xor
mov
cwtl
cli
lret
xor
out
insl
push
jmp
fdivl
lcall
and
push
repnz
dec
mov
cmp
clc
ja
pop
mov
xchg
fstpt
clc
jns
loope
lods
cmp
xlat
aad
mov
inc
mov
into
mov
jmp
into
jns
xchg
jl
lds
aam
ds
daa
rol
inc
loopne
imul
xchg
jno
shrl
cmp
adcb
cmp
out
popf
pop
fs
ds
jb
call
iret
mov
outsb
dec
jbe
pop
pop
ja
inc
out
sbb
pop
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
pop
aas
and
mov
adc
stos
movlps
cmp
jecxz
cmp
popl
in
inc
repz
daa
pop
sbb
mov
cmp
popa
sbb
xlat
in
pop
pusha
dec
jns
iret
or
push
dec
fwait
fs
xchg
jle
movsb
and
ret
pop
jp
xchg
jecxz
jg
push
leave
xchg
pop
sbb
push
fildll
movsl
pop
subl
inc
adc
sbb
jns
mov
and
sub
or
pushf
int
jmp
out
dec
jg
xor
sub
pop
xlat
and
jmp
bnd
out
or
jns
cltd
adc
pop
mov
popa
push
pop
jmp
push
fldt
dec
inc
xchg
out
xlat
and
leave
out
repz
aad
inc
mov
aas
adc
inc
mov
rcl
jnp
jle
por
sti
pop
push
push
ret
je,pt
dec
xchg
push
dec
mov
aam
xchg
lret
fs
std
mov
or
inc
mov
or
aaa
cmpsb
cld
incb
out
testl
mov
iret
sub
stos
adc
shlb
and
repz
mulb
ficomps
into
faddl
cmp
mov
and
cmp
test
mov
fldt
or
ds
add
inc
inc
push
adc
mov
lock
pop
mov
pusha
in
outsb
cltd
pop
gs
push
cmpsb
cmp
lds
insb
adcl
and
xor
cmpsl
xor
jne
pop
pop
fcomps
addb
stos
sbb
dec
adc
jno
and
mov
rclb
cmp
inc
inc
test
divb
adc
jmp
lret
push
dec
cld
orl
std
pop
push
xor
add
xor
adc
push
sbb
lock
inc
sub
mov
mov
movsl
out
jmp
pop
adc
leave
shll
mov
lds
movl
mov
mov
and
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
ja
push
xor
xor
fcmovnb
shlb
movl
aaa
ja
inc
ss
addr16
lcall
cmp
cmc
test
out
xchg
outsl
cwtl
call
sub
test
repz
mov
adc
mov
add
jns
cli
xchg
mov
mov
push
adc
jl
jecxz
pop
jo
adc
sub
cmp
outsl
jecxz
int
pushf
lret
mov
into
and
xor
jge
pusha
cmp
lods
mov
or
or
flds
lcall
aas
icebp
ret
sbb
dec
xor
sub
mov
sub
pop
push
and
ret
xchg
sub
jle
fsubrs
inc
cwtl
add
call
cld
mov
adc
pop
push
in
xor
jmp
mov
fldcw
loopne
cli
dec
lds
icebp
lods
js
jnp
cmc
add
xor
jl
pop
dec
pop
mov
sbb
cmc
addr16
push
adc
aas
jbe
aad
cmp
ret
mov
adc
aam
pushf
lcall
cmp
lock
out
xchg
xchg
ror
std
inc
loope
jae
xchg
aas
adc
outsl
into
xorl
and
dec
fwait
push
leave
je
xchg
mov
fcomps
xor
sub
in
add
push
pop
sub
mov
mov
inc
adc
push
les
jp
and
aad
xchg
fidivrl
jp
dec
fs
sbb
clc
push
ljmp
inc
cmp
inc
and
mov
xor
push
lcall
mov
int3
lock
jo
inc
lds
push
sub
fidivrs
and
jmp
xor
lea
cli
aas
xor
adc
jmp
push
jge
punpckhdq
les
aad
repnz
mov
lahf
dec
cmp
push
jne
faddl
cmp
mov
mov
es
sbb
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
jno
iret
loop
es
std
add
in
cmpl
inc
lea
cwtl
fwait
ss
fldl
lock
xor
sbb
add
stos
das
mov
jecxz
daa
jp
mov
sub
push
sub
mov
push
dec
iret
jbe
xchg
pop
imul
jmp
out
lahf
or
movsb
gs
push
arpl
and
add
repnz
in
mov
jnp
dec
push
int3
and
popa
nop
xchg
rcl
pop
lods
xor
fstp
sbb
rol
adc
sbb
cmp
into
pop
ds
aaa
fisubrs
or
pop
call
fadd
adc
orb
sbb
testb
adc
inc
jne
cmpsb
icebp
fistps
sti
clc
stos
xchg
dec
push
pop
test
push
aaa
nop
in
xchg
mov
daa
sbb
mov
xchg
sahf
mov
or
mov
movsb
cmp
ret
in
push
dec
jl
mov
sub
xchg
mov
je
inc
es
mov
aaa
bound
push
mov
xor
jnp
popa
fsubrs
xchg
lcall
dec
inc
pop
mov
in
lret
mov
dec
daa
mov
sub
repz
cli
mov
stos
mov
sbb
loop
orb
aad
xor
or
jnp
ror
stos
push
pushf
dec
mov
cmp
popf
popa
xor
jbe
call
and
aad
cmp
ret
dec
imul
repz
test
clc
loopne
out
jge
outsl
test
ja
add
jp
mov
sub
sbb
push
out
jae
sbb
push
add
mov
push
test
cli
or
inc
pop
cmp
and
pop
outsb
cltd
jne
and
ret
cmp
pop
add
lods
dec
sete
sbb
aad
xlat
sbb
fsub
fisubrs
push
imull
shrl
mov
pop
sbb
push
or
mov
sbb
lar
adc
mov
sbb
into
je
sbb
lcall
iret
rorb
dec
push
out
pop
movsl
movsl
or
jo
fisttpll
pop
cmpsl
mov
jg
lock
jg
or
xchg
xchg
pop
iret
popf
sbbl
out
stos
push
xchg
adc
xorl
hlt
mov
aas
or
and
incl
cld
sub
nop
jnp
dec
out
adc
inc
out
sub
pop
rcll
and
xor
add
aad
xchg
mov
int3
loopne
out
cld
mov
pusha
push
mov
mov
mov
push
call
icebp
jecxz
jne
in
in
push
mov
aad
sub
cmc
popa
fwait
inc
scas
xchg
aaa
or
fcomps
xchg
test
insl
dec
sub
outsb
fwait
xor
lds
arpl
inc
dec
rorl
ret
jnp
inc
push
and
mov
push
ds
cvtdq2ps
pusha
movsb
jp
andl
in
fsubs
ret
mov
shll
rclb
int3
je
jnp
dec
push
andb
and
dec
fildl
stc
xchg
and
push
sahf
xchg
mov
psubsb
lret
xchg
jae
push
push
cmp
push
xchg
int3
inc
xchg
dec
in
test
sub
jns
lret
xor
jnp
in
mov
inc
xchg
mov
mov
push
xchg
jo
and
inc
movsb
or
insb
test
or
decl
ljmp
rorb
lcall
icebp
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
mov
adc
adc
adc
add
ffreep
sub
test
repnz
lods
mov
jg
pop
sti
cwtl
ret
xchg
mov
push
xor
or
ja
into
push
inc
inc
dec
sub
insl
add
out
cmovb
hlt
push
cmp
nop
inc
int3
sti
les
ja
call
mov
dec
gs
sbb
fwait
lods
add
push
imul
stc
fs
sub
jecxz
cmp
xchg
repnz
in
inc
pop
cs
fstl
mov
or
filds
pop
in
xlat
jmp
arpl
dec
xor
jo
dec
cwtl
xor
xchg
mov
dec
mov
cld
push
inc
popf
int
aas
mov
mov
iret
xchg
adc
jmp
daa
stos
jge
and
push
cwtl
sbb
insl
std
dec
das
orl
push
cmp
xchg
push
mov
cmp
dec
or
adc
add
scas
xchg
popa
mov
cmp
add
insl
in
addl
push
sub
dec
mov
jecxz
jmp
sub
mov
repnz
mov
cmpsb
aaa
mov
push
push
mov
xchg
js
stc
xchg
jae
inc
lods
bound
inc
vcmpss
jle
pcmpgtd
test
leave
push
lods
cmpsb
pushf
mov
lret
mov
mull
pop
popa
inc
push
pop
fcmovu
cmpsl
insl
test
jl
in
add
mov
mov
pop
fldl
and
mov
insl
notl
and
pusha
cmc
mov
mov
repz
xor
dec
add
dec
xor
pop
mov
js
xchg
dec
mov
add
xor
das
jge
adc
js
sub
lods
fs
pop
and
dec
push
shl
adc
add
adc
xor
out
popa
adc
jge
movaps
inc
push
mov
pop
dec
repnz
maskmovq
divl
mov
imul
cwtl
and
insl
imul
push
repz
mov
and
mov
mov
fs
xchg
das
das
xchg
in
pop
add
mov
sub
xchg
inc
push
add
add
cmp
shrb
lods
inc
aad
lods
aas
jl
les
cmp
or
enter
ljmp
add
hlt
jecxz
jle
mov
jnp
stos
mov
loope
pop
push
scas
xorl
aas
xor
test
lods
clc
aas
call
cmp
pushf
cwtl
lods
jo
xchg
sbb
push
data16
rorb
lods
cmp
jl
stc
pop
push
xor
movsl
into
jg
jl
ljmp
fwait
das
adc
or
dec
inc
xchg
mov
lret
fs
les
mov
sub
cmp
std
aaa
mov
push
pop
mov
mov
daa
addr16
add
leave
rclb
dec
push
daa
sbb
aas
inc
test
js
inc
mov
cmp
int
adc
into
pop
sbb
mov
mov
daa
faddl
lret
xor
inc
lahf
mov
sbb
mov
push
movsl
outsb
es
mov
jge
arpl
push
and
shrl
jmp
mov
rorl
jge
jle
sbb
out
orl
inc
mov
add
std
test
iret
adc
dec
add
xchg
xor
rcrb
mov
sti
pop
stos
rolb
imul
jge
xchg
push
pop
mov
testl
or
push
cmp
inc
adc
out
ss
popf
roll
loopne
das
pop
and
std
into
dec
lea
fnstcw
fs
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
inc
dec
and
mov
adc
movlps
lcall
outsw
mov
adc
daa
ret
add
lods
call
push
and
dec
lahf
xorb
xchg
mov
cmp
andb
lea
xchg
insb
testb
aam
or
loop
push
dec
pop
out
loopne
push
fists
cmc
jge
pop
pop
fisttps
xchg
xor
addr16
adc
pop
or
not
adc
xchg
scas
mov
sarl
inc
push
lea
outsb
pop
subl
push
sub
fdivrs
popf
xlat
pop
repnz
outsl
mov
jp
scas
dec
stos
out
fwait
or
sbb
das
push
cmp
rcrl
gs
std
mov
lcall
repnz
push
jnp
push
jmp
sahf
mov
add
stos
or
loopne
cltd
lcall
adc
lcall
xor
mov
xchg
pop
push
loop
fwait
outsb
sbb
popf
enter
dec
imul
pop
pop
cs
and
aas
inc
scas
cmp
pushw
daa
js
xor
sub
mov
push
fdivr
mov
pushf
lods
or
cmp
pop
daa
lods
adc
nop
fisubs
ja
arpl
out
lock
scas
xorl
into
push
daa
adc
xchg
test
mov
mov
pop
mov
cmp
or
mov
xor
mov
adc
push
xchg
jecxz
sbb
sub
mov
popf
pop
fmull
fcompl
sti
leave
pop
repz
loopne
clc
jno
aam
push
in
dec
inc
jae
leave
sbb
push
xchg
jns
xchg
test
test
and
fists
pop
xchg
popf
jns
out
fcoms
mov
jp
sbb
jb
sbb
dec
pop
pop
cmp
bound
adc
out
mov
dec
dec
mov
push
ret
mov
xor
push
repnz
nop
jmp
dec
push
jle
movsl
jnp
lods
nop
je
xchg
jg
sub
jnp
aaa
cmp
jle
test
mov
cmpsb
or
mov
lods
and
test
call
mov
xchg
pop
dec
gs
cli
std
repnz
push
push
adc
adc
push
sub
stc
insl
push
push
mov
jg
sti
adcb
fadd
push
out
es
outsl
lods
jnp
dec
lahf
mov
pop
adc
xchg
jg
daa
sub
mov
or
addr16
pop
mov
insl
std
mov
jl
adcb
inc
xor
jne
or
data16
dec
mov
test
cmp
rcrb
sub
or
or
add
inc
enter
add
inc
int3
cmp
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
mov
andb
sbb
sbb
jns
js
outsb
cltd
sub
fimuls
out
mov
in
adc
add
inc
add
xchg
cmp
or
push
shrl
sbbb
pop
int
hlt
imul
pop
aam
and
in
adc
mov
sub
cmc
imul
pop
sub
mov
and
xchg
pop
lcall
es
icebp
dec
sub
loop
ja
mov
pop
push
xor
mov
je
push
fld
in
or
mov
inc
xchg
mov
mov
ret
add
sub
in
cmpsl
dec
inc
cs
imull
call
pop
addl
adc
xchg
xchg
pop
ret
xlat
add
mov
jl
sub
loop
sub
ret
sti
sbb
dec
adc
out
popa
rcr
cmp
stc
pusha
xor
ljmp
jl
xor
adc
mov
push
in
lock
cmc
imul
fwait
adc
mov
lds
gs
lea
mov
cmp
jp
dec
stos
sub
movsl
mov
ret
pop
sti
lret
dec
xchg
mov
cmp
movb
cmpsb
dec
in
mov
jb
push
popl
rorb
push
push
or
pushf
lea
test
int
lahf
out
pop
and
dec
push
jl
mov
xlat
shll
mov
shlb
inc
data16
adc
or
add
xor
pop
sub
fcoms
inc
cmp
and
pop
and
push
dec
stc
adc
adc
leave
repz
in
outsb
or
dec
pop
sarl
imul
ret
mov
push
mov
jecxz
int3
jg
inc
stos
fsts
push
addb
and
sub
push
das
or
fildl
test
aad
sub
sahf
add
loopne
jb
movsb
andl
mov
push
lods
push
sub
push
loopne
push
inc
arpl
insl
jp
mov
paddusw
fisubrs
xchg
or
shll
add
jl
jae
xchg
loopne
xchg
sub
scas
jl
inc
rolb
and
jle
add
andb
rclb
dec
pop
or
mov
pop
cmp
push
ljmp
mov
inc
cmp
jle
scas
out
ss
imul
sbb
hlt
leave
into
add
hlt
sbbb
jg
leave
rclb
test
sub
out
inc
popa
cld
repnz
mov
out
jge
mov
cmp
mov
int
or
dec
mov
push
test
xchg
xchg
test
enter
fstps
mov
push
cmp
fnstsw
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
mov
movlps
scas
xchg
push
xor
and
mov
test
jae
scas
xor
cmpsl
push
adc
adcb
imul
and
xor
dec
clc
pushf
inc
mov
xor
jbe
mov
ret
add
jge
cmpsb
out
sbb
pop
les
inc
int3
or
iret
mov
mov
jmp
mov
inc
jb
cmpsb
cli
mov
xorl
test
popa
lods
stos
cld
aaa
push
push
push
inc
sub
enter
and
loop
addb
xchg
ja
int3
cmp
scas
fisttps
lret
aam
mov
leave
pop
adcb
inc
je
lods
mov
inc
jle
xchg
sbb
lea
mov
pop
xchg
out
lcall
push
clc
testb
and
sti
dec
sbb
xchg
inc
ja
fildl
data16
inc
and
xchg
imul
mov
jno
ljmp
in
sub
cmp
cmp
push
inc
enter
jle
or
jmp
mov
sub
sub
sub
jns
iret
lds
mov
mov
sahf
inc
pusha
shll
and
outsb
int3
lea
sahf
pop
popf
aad
jecxz
rolb
jp
outsb
decb
aad
call
jmp
dec
repz
movsb
or
daa
jp
mov
push
jb
sub
aam
movsl
push
sbb
pop
pushf
fsubl
cltd
pop
das
xchg
out
xchg
aad
mov
ljmp
mov
out
sub
add
xor
aam
loopne
daa
push
or
add
xchg
pop
push
xchg
mov
in
bound
in
std
mov
scas
mov
xchg
push
fisttps
dec
ret
and
ret
cmp
fidivrl
jae
aam
iret
cmc
and
shlb
icebp
add
jge
jecxz
sub
jge
lock
ljmp
popa
pop
pop
mov
fdivs
shll
push
add
jno
movsb
stc
xchg
add
xchg
pop
push
pop
or
jae
cld
lea
inc
dec
lods
add
nop
les
pop
sarb
cmp
call
fildl
or
dec
sbb
adc
aas
stc
jae
in
lcall
mov
push
and
inc
pop
sbb
xchg
inc
push
lds
lods
adc
mov
out
js
inc
cmp
push
or
out
and
mulb
or
sub
pushf
mov
iret
xor
mov
inc
or
jae
mov
sbb
push
inc
and
idivb
mov
mov
jp
in
inc
sub
push
mov
and
decl
jns
push
lret
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
in
cmpsb
js
jae
adc
test
loope
mov
and
shlb
mov
les
out
xlat
xor
movsb
adc
lock
les
dec
lret
neg
xor
xchg
mov
fs
mov
adc
insl
ret
mov
les
xchg
lahf
rcrb
inc
lcall
jnp
cld
mov
jle
popf
pop
sub
adc
mov
cmp
stc
and
sbb
in
xlat
xor
out
sbb
and
fwait
aaa
scas
pop
mov
mov
lods
enter
testl
imul
cmc
stc
subb
pusha
cltd
push
ljmp
xchg
aam
ss
into
push
and
mov
into
in
in
inc
adc
test
in
gs
cmc
push
fs
movb
enter
incl
test
pop
cmp
rcrb
imul
lcall
dec
ret
jg
subb
cwtl
int3
sub
cmp
xor
shrb
iret
jp
xor
adc
mov
fsubrl
pop
into
fistps
adc
aaa
cli
add
inc
pop
mov
movsb
jmp
cltd
pop
sub
fbld
dec
outsl
xor
enter
push
shl
jl
movsb
jg
daa
push
mov
push
lods
xchg
int
test
test
test
imul
adc
int3
dec
push
push
xchg
shl
xor
push
cwtl
lret
jg
add
cli
and
repz
lds
inc
cvtps2pi
xlat
clc
mov
adc
mov
mov
pusha
mov
mov
rcl
push
add
mov
mov
orl
pop
mov
insb
test
sti
rcll
mov
sub
addr16
pop
aam
pushf
sbb
insb
push
dec
push
lahf
pushf
lret
mov
mov
sub
xor
jnp
cli
outsb
es
cmpsl
fs
xor
mov
call
pop
push
mov
mov
sub
out
mov
cmpsb
and
data16
clc
lds
in
sub
sub
mov
xlat
cmp
add
pop
into
sbb
insl
inc
or
lds
fmull
add
arpl
in
es
push
dec
das
mov
ret
add
inc
xchg
mov
mov
push
push
movsl
aas
xchg
sti
mov
roll
mov
arpl
pop
test
xchg
dec
add
sti
lahf
jge
aas
mov
push
mov
ret
orb
pop
mov
mov
xchg
stc
xchg
clc
test
cmpsb
inc
push
test
cmp
cmp
pop
arpl
inc
mov
movsb
mov
roll
xchg
daa
rcl
in
in
lods
test
shrl
pop
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
sbb
fwait
jb
and
aaa
inc
cmc
outsl
ret
pop
in
xchg
mov
push
or
add
ds
int3
mov
outsl
arpl
mov
iret
sub
jae
jae
out
aad
pop
in
aam
adc
mov
cld
sbb
xchg
pop
cmp
inc
mov
cmpsb
add
add
popa
or
outsl
and
test
lahf
sbb
mov
repnz
mov
xor
call
dec
out
pop
nop
clc
adc
je
jne
fistpl
cld
sbb
out
xor
clc
push
and
push
imul
enter
jmp
frstor
jmp
les
pop
jns
cmp
xor
and
mov
cli
cs
test
jl
mov
mov
xlat
jmp
cmc
jp
inc
lds
cmp
cmp
jl
ret
scas
sbb
imul
mov
mov
adc
enter
ds
and
orb
or
and
sti
adc
push
icebp
stos
mov
int3
daa
dec
push
pop
pop
jmp
xor
xor
xchg
pop
subl
es
inc
and
stos
mov
hlt
push
out
test
hlt
aas
lret
ret
ss
mov
lcall
xchg
aas
into
mov
out
iret
sarl
nop
pop
rcrl
sub
cmp
imul
xlat
or
lds
dec
mov
xor
jno
sbb
cmpsb
imul
push
mov
push
test
cmc
fisubrl
push
sti
aaa
sub
inc
ljmp
dec
iret
cmp
je
xor
push
cltd
out
dec
lock
fwait
out
sbb
fcmovnbe
sub
or
daa
aas
sub
ficoms
mov
mov
in
and
inc
sbb
adc
jb
std
outsl
outsb
pop
fcmove
xchg
sub
imul
dec
mov
push
int3
pop
cltd
pop
imul
rcrl
leave
inc
lret
popa
dec
mov
mov
in
lods
sti
mov
inc
adc
cwtl
call
in
ljmp
sbb
ja
xchg
pop
xchg
loope
xor
leave
stos
outsl
fsubrl
mov
out
add
and
xchg
dec
jge
imul
push
clc
insl
push
mov
dec
ljmp
test
xchg
icebp
ret
popa
sbb
pop
in
int
ds
cwtl
sub
adc
mov
sub
add
loope
pusha
aam
rol
shll
xchg
sub
mov
loop
sbb
repnz
and
fistpl
nop
ffreep
mov
ret
ret
xchg
hlt
xor
xlat
fimull
xor
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
push
mov
adc
or
mov
jnp
or
or
cs
xchg
add
mov
cmp
iret
js
inc
lcall
dec
sbb
push
aad
loop
lds
mov
enter
xchg
mov
cld
lret
aad
in
aaa
mov
push
mov
jmp
nop
dec
mov
dec
ja
je
popa
push
and
fldcw
cmp
scas
push
xor
cmp
fs
loope,pn
xor
pop
xor
and
jnp
sub
mov
jl
mov
jno
pop
cmpb
pop
dec
or
cmp
hlt
lret
xchg
imul
xlat
incb
test
dec
mov
xlat
push
jecxz
push
mov
lea
jp
test
mov
dec
mov
movsl
data16
push
xchg
test
jl
sub
dec
outsb
jno
push
jge
ficompl
pop
mov
or
hlt
sub
adc
dec
into
out
jb
into
sbb
daa
ss
and
mov
cmp
int3
push
paddq
mov
cwtl
lock
cli
pop
sbb
xlat
verw
pop
in
clc
lock
sbb
pop
pop
xchg
fisubrl
pop
dec
sbb
xlat
and
stos
iret
mov
roll
pop
dec
stc
push
xchg
in
and
ret
jne
push
and
inc
lahf
push
cwtl
mov
mov
or
pslld
ljmp
pop
jl
leave
movsb
cwtl
cwtl
mov
ds
ret
inc
stos
mulb
out
dec
movsl
stos
xor
cwtl
and
add
push
inc
popa
out
arpl
sbb
rcrb
xchg
jo
in
out
arpl
repz
lret
mov
inc
sub
fildl
xor
pop
loope
fwait
test
popf
fxch
fiaddl
inc
mov
add
add
or
sub
mov
es
fistl
and
jbe
fisubrs
out
std
test
and
pop
mov
pushf
xchg
and
adc
inc
push
and
outsb
xor
orl
insb
xor
mov
imul
dec
sbb
xor
pop
cmp
scas
jge
out
cmp
add
std
aas
sbb
mov
cmp
cmc
xchg
ds
ret
movsb
mov
sahf
out
add
inc
shll
stos
xor
jae
aas
inc
xor
jmp
aam
lock
fwait
imul
arpl
fisttpll
mov
push
out
mov
jb
pop
jno
bound
xchg
pop
xchg
addr16
dec
fwait
lods
fsub
add
pop
mov
push
push
lcall
xchg
jne
xor
mov
xchg
pop
ffree
xor
mov
sub
sarl
test
add
add
add
add
push
add
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
add
cs
xor
inc
loopne
sub
shlb
xchg
and
sbb
push
icebp
or
xor
push
lret
push
cmpsb
lods
loopne
or
xchg
inc
sbb
loopne
mov
out
mov
mov
adc
ret
inc
inc
scas
fidivrl
pop
mov
add
lahf
add
aad
test
test
jo
hlt
js
cli
cmpsl
or
inc
jnp
stos
sbb
clc
jmp
sub
adc
aas
lret
xchg
mov
push
sub
icebp
sbb
or
push
clc
jo
ds
pop
fstps
mov
gs
iret
cmpsb
aaa
sub
movsb
mov
mov
dec
jl
sbb
jne
popf
fsubrs
call
shr
mov
nop
adc
mov
lahf
cmp
repnz
call
mov
xorl
mov
dec
jecxz
scas
cmpsb
inc
xor
imul
cmp
push
xchg
mov
xlat
cmpsl
and
aaa
xor
les
in
sub
mov
mov
sub
cmc
mov
cmp
cmp
cmp
cmpsl
xchg
jbe
pop
ret
stc
daa
jns
imul
jb
inc
hlt
pop
xor
pop
mov
sub
lods
jle
and
rorl
insb
int3
push
in
lods
loope
inc
lds
loop
loope
mov
jb
and
xchg
mov
xchg
push
push
add
xor
roll
ljmp
add
out
decb
repz
ss
inc
lods
popa
incb
mov
and
adc
mov
dec
xlat
mov
push
jb
out
ret
add
xor
hlt
or
sub
or
in
add
cmp
push
jb
ds
jle
jge
or
clc
xchg
or
sbb
movsl
add
push
inc
jecxz
cwtl
out
out
mov
mov
or
mov
xchg
lret
test
popf
stos
loopne
mov
sbb
jl
pop
push
mov
mov
cmpsl
rorb
cmpsl
fildll
test
adc
mov
add
and
mov
test
arpl
lea
lock
cmp
xchg
xor
jge
mov
jnp
mov
ja
dec
imul
mov
pop
jb
addr16
sbb
push
inc
inc
pushl
mov
test
or
and
sub
pop
push
orl
les
sub
adc
pmullw
int
or
call
flds
pop
test
call
sub
pop
clc
and
adc
test
push
lock
pxor
leave
imul
sub
cmpsb
ret
dec
shl
inc
mov
and
nop
iret
repz
jp
shll
jnp
cmp
fbstp
cmp
lret
inc
push
and
and
or
push
or
clc
sbb
test
mov
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
sbb
insb
inc
pop
adc
jp
adc
push
cmc
lds
cmpsb
xlat
xchg
scas
hlt
dec
adc
and
pop
cmp
ss
jl
fstpt
push
das
ljmp
std
pusha
dec
sti
iret
mov
test
xchg
sbb
repnz
cltd
loope
mov
push
das
jns
mov
mov
fisttpl
scas
rol
adcb
in
dec
lahf
mov
aam
outsl
movsb
sbb
pop
add
popa
add
and
insl
test
jg
push
jae
frstor
jo
std
mov
add
frstor
insl
subb
sti
push
adc
aam
inc
out
cmp
inc
jle
sahf
aaa
add
push
sub
mov
xchg
roll
mov
aam
xor
adc
mov
push
test
popf
add
push
movsl
dec
arpl
inc
jnp
fwait
icebp
test
aas
fisttpl
outsb
push
fldt
hlt
push
fcompl
mov
xor
gs
or
fsts
dec
ficoml
addl
lea
cmp
or
subl
xchg
pushf
repz
nop
loopne
dec
popf
mov
pusha
sarl
xchg
es
shlb
pushf
xchg
pop
hlt
push
pop
mov
test
clc
addb
rol
xor
lcall
mov
popf
add
mov
inc
je
inc
xor
cmpl
jno
inc
adc
sahf
dec
adc
mov
aaa
lcall
inc
fimuls
call
sub
or
or
sbb
lret
and
pop
cmp
pop
sub
xor
sti
mov
sub
pop
sub
gs
add
inc
sbb
dec
pop
xchg
xchg
dec
sbbl
add
repz
add
sahf
jecxz
add
outsl
jl
or
add
in
mov
xor
in
cmp
jae
daa
and
or
pop
pop
icebp
adc
push
out
andl
dec
or
pop
outsl
stos
jbe
repnz
xchg
adc
mov
and
aam
rcll
bound
shrd
out
out
pusha
fcmovu
aaa
movsb
hlt
push
sahf
aas
mov
ret
outsb
jp
or
repnz
inc
add
adc
mov
add
jno
push
shrl
xor
outsl
and
mov
hlt
enter
divl
iret
jno
andl
xchg
xor
mov
jns
inc
dec
sbb
and
imul
lret
loop
insb
cli
push
sbb
inc
fstl
inc
imul
inc
adc
adc
insl
jo
jge
loopne
loopne
mov
cmp
or
gs
jae
je
ret
push
stos
xchg
inc
mov
push
loope
mov
push
insl
jl
sub
js
mov
xorl
call
jl
or
fstl
gs
push
aad
pop
or
popa
xchg
mov
or
mov
leave
scas
dec
stos
js
popa
sbb
shlb
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
inc
cmp
jp
adc
mov
mov
outsb
inc
add
in
inc
dec
adc
pop
sbb
cmp
cwtl
dec
add
adc
or
mov
jge
push
dec
aad
dec
pop
sar
mov
mov
xor
sub
jbe
push
dec
loopne
ss
sub
and
test
rorb
shrb
push
cmp
movsb
xor
loope
test
out
xor
mov
cltd
sub
mov
push
mov
push
xchg
rcrl
xchg
into
pop
pop
sub
mov
gs
leave
jp
icebp
das
fs
cld
mov
aam
test
in
mov
or
xchg
daa
cltd
into
sub
xor
mov
sbb
je
sar
dec
sub
jns
test
pushf
jle
mov
mov
and
mov
popa
nop
mulb
add
pop
jle
ret
lock
mov
lea
mov
lods
je
lea
dec
mov
xor
stos
sahf
mov
and
leave
dec
daa
in
push
ss
mov
repnz
ljmp
outsb
mov
cmpb
popa
fisubl
testl
stc
ljmp
test
int
inc
rolb
jb
js
adc
test
out
sbb
cmp
dec
aaa
jo
in
add
xchg
jae
push
fwait
dec
fildll
pop
js
sub
ret
mov
add
cli
test
add
scas
and
mov
aad
enter
js
stc
and
cltd
pop
mov
add
sbb
push
lret
inc
aaa
hlt
mov
inc
cmp
fs
movsl
loop
mov
rorb
lds
pop
push
icebp
movl
shrl
jno
fisttpll
aam
test
pop
out
mov
or
imul
push
out
mulb
cwtl
cmp
ret
mov
fdivr
mov
out
cltd
scas
xchg
sub
std
lods
pop
jmp
std
cmp
sub
addr16
pop
icebp
dec
nop
push
and
ret
arpl
push
or
adc
hlt
jno
das
fsubr
jb
mov
scas
shl
scas
aam
scas
jle
imul
mov
push
stos
push
mov
dec
rcl
fwait
adc
push
pop
dec
pop
mov
cmc
mov
mov
test
in
ret
cltd
into
sarb
sub
lods
rcrl
mov
cwtl
aad
or
fwait
js
pop
subb
xchg
mov
fcomp
imul
jmp
mov
adc
adc
sbbl
lcall
shll
les
test
fildl
bound
ret
adc
push
push
mov
jl
lahf
dec
push
fcoml
rorb
mov
and
xor
insb
addr16
fwait
das
jb
cmp
cbtw
lcall
out
and
pop
push
mov
adc
lcall
stos
test
sub
jae
dec
sbb
aam
loop
sub
add
decl
or
mov
jmp
pop
pop
mov
push
fisttpll
dec
mov
jp
adc
out
push
call
ret
lods
imul
pop
add
movsb
xor
sbb
cmp
dec
adc
and
test
pop
outsl
pop
xor
mov
adc
or
sbb
bound
lods
and
in
mov
inc
xor
sub
xchg
sti
mov
int3
mov
pop
pextrw
inc
scas
mov
pop
jnp
add
fiadds
mov
jbe
xor
dec
repz
cltd
sbb
mov
das
add
insl
lds
or
mov
inc
sbb
int3
imul
jne
mov
jae
rclb
ss
or
pop
push
sub
jnp
sbb
mov
pop
mov
mov
shll
xor
dec
loop
jmp
xchg
adc
dec
cmp
ljmp
in
daa
or
arpl
push
dec
std
jg
dec
dec
addr16
loop
jae
test
and
fmull
adc
push
cltd
ss
jp
inc
cmpl
mov
in
rcrb
adc
ficoms
cmpsb
push
fnstenv
repz
daa
inc
adc
jbe
es
ljmp
test
insb
aam
inc
mov
inc
outsl
pop
pop
inc
dec
rclb
add
push
fldenv
dec
add
out
cwtl
leave
arpl
sub
push
int3
gs
int3
shrl
clc
cmp
jmp
xor
add
rolb
pop
loope
icebp
xor
and
pop
shlb
pop
mov
scas
jmp
mov
jle
xor
add
gs
das
cli
lods
rorl
cmp
adc
fsts
sub
sub
lock
push
rol
test
lahf
arpl
mov
inc
leave
or
sbb
mov
lret
jge
out
jmp
mov
ljmp
push
xor
gs
mov
jle
std
inc
mov
lret
jae
push
inc
cmp
pop
repz
xor
dec
pop
in
pop
lahf
fwait
or
stos
test
mov
inc
mov
ror
scas
or
leave
pusha
mov
lods
mov
jl
cld
ljmp
arpl
and
push
add
adc
add
pop
test
ret
sahf
lods
xor
or
push
lret
mov
bound
lcall
mov
pop
mov
repnz
insb
sahf
sub
push
das
repnz
js
jb
fs
mov
std
pop
dec
dec
imul
mov
xchg
inc
pop
icebp
fstps
movl
hlt
jcxz
scas
int
imulb
pop
lock
xchg
fimuls
push
xchg
in
sbb
pushf
xchg
pop
ret
in
inc
inc
out
lret
pop
mov
mov
call
das
aad
test
xor
xor
jnp
jnp
lret
add
mov
adc
mov
add
adc
jl
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
stos
fdivrs
lea
adc
inc
jp
ljmp
movsl
jge
jle
jno
pusha
mov
sahf
push
mov
addl
pusha
mov
out
jae
jne
dec
scas
push
ret
jns
out
arpl
js
jle
aad
adc
divl
mov
mov
bound
xor
add
popa
xor
mov
sahf
sub
or
fnstsw
lret
mov
subb
jp
inc
scas
jns
repnz
pop
std
mov
out
inc
mov
xorl
movsb
adc
es
inc
shrb
ffreep
dec
pop
mov
inc
pop
mov
jp
enter
mov
hlt
jg
testl
sub
aaa
jno
and
inc
aam
lods
in
gs
xor
fcoms
pop
ja
mov
rcll
or
mov
hlt
pop
popf
mov
xchg
insb
inc
mov
out
xchg
idivl
sbb
mov
mov
mov
movsl
xchg
pop
sbb
hlt
jge
nop
mov
ret
adc
nop
ja
shrb
or
inc
push
sti
inc
mov
les
loope
nop
ficoms
and
mov
ret
lret
je
jae
ficomps
iret
jg
xchg
cmp
aad
cmpsl
sti
sub
fs
push
mov
std
xor
mov
xor
jnp,pn
incb
jle
cmp
rcl
sbb
ljmp
jg,pn
pop
xchg
xor
fmul
mov
iret
mov
fs
cmc
ret
in
inc
jecxz
sbb
mov
cltd
cmp
adc
aaa
or
fsubr
jne
inc
daa
mov
adc
sub
scas
dec
inc
xlat
or
inc
test
mov
sub
jge
insl
adc
jne
std
or
pop
push
es
adc
push
ss
lcall
push
movsb
in
in
sub
sbb
pop
xlat
sbb
sbb
mov
aad
push
jmp
loopne
shl
xchg
ljmp
dec
cltd
push
jo
sbb
inc
inc
mov
popa
repz
aam
es
testl
adc
cs
or
fisttps
push
mov
sbb
cmp
aad
lea
cli
inc
into
or
mov
and
sbb
pop
adc
xchg
orb
popa
adc
mov
sbb
lds
outsl
stos
dec
lret
pusha
xchg
in
sub
mov
inc
xor
rcrb
mov
fs
lock
mov
mov
ds
xchg
mov
adc
jmp
xchg
mov
sub
les
loopne
adc
lea
adc
jp
enter
fidivrs
movsl
mov
roll
jg
inc
mov
cmp
sti
lret
pop
sub
in
push
orb
int3
rorb
icebp
rcrb
lret
out
cmp
fisubrs
out
jbe
inc
sub
imul
add
pushf
cltd
jmp
shrl
push
dec
cmp
or
sbb
lret
sub
repnz
dec
adc
pop
iret
repz
stos
adcl
sahf
ja
inc
adc
xor
add
cli
mov
std
out
xchg
xlat
mov
test
in
int
sbb
movsb
fcompl
mov
mov
or
xor
in
fwait
popa
rorl
cmp
or
sti
rclb
aam
mov
mov
and
scas
jl
lods
test
push
jb
inc
xor
pop
lea
xchg
dec
fldcw
addr16
xor
mov
or
adc
out
test
lds
out
adc
push
mov
test
mov
dec
dec
and
xchg
xchg
cmpsl
mov
dec
clc
inc
outsl
popf
orl
jl
pop
xchg
pop
mov
sahf
adc
mov
pop
cmp
js
sti
repz
mov
loop
lahf
dec
push
or
scas
mov
cmp
repz
cwtl
ffree
popf
or
dec
push
xchg
cmpsl
xchg
inc
push
rcll
xlat
pop
mov
movsb
inc
jo
das
rorb
cmp
push
int
outsl
xchg
push
mov
data16
cmp
dec
fstpt
sbb
xchg
ja
call
cmp
dec
dec
or
dec
out
add
mov
cmp
xchg
popf
fldcw
in
and
push
leave
push
ljmp
scas
test
and
mov
aad
sbb
dec
sub
xchg
pop
add
mov
jmp
das
hlt
nop
or
xchg
repnz
jge
ret
mov
addr16
call
cmpb
leave
push
cmp
sbb
inc
jecxz
int
ds
and
ja
xchg
movsl
adc
cld
shrb
cmp
testb
pushf
mov
lahf
pop
push
cmc
ss
cs
pop
mov
dec
add
cmp
not
js
sub
jnp
notb
orb
loope
ss
and
sub
arpl
add
cmp
push
ds
jnp
cmp
mov
sbb
cli
pop
in
std
arpl
cmpl
movl
not
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
loopne
cmpsb
loop
pop
cwtl
aad
imulb
fistps
mov
jge
jle
dec
popa
xchg
dec
je
sbb
adc
inc
jl
movsl
dec
cmpsl
mov
out
sbb
pop
dec
add
js
or
es
sahf
xor
push
arpl
scas
add
sbb
aas
sbb
fisubrl
popa
xchg
sub
jg
xchg
sbb
je
test
cmp
mov
rcl
fiadds
xor
mov
xor
fsub
and
jbe
cmpsl
mov
mov
pop
jl
sbb
or
add
xor
lea
add
pop
ljmp
out
int3
jmp
lods
xlat
cmp
aaa
leave
lock
jle
add
hlt
mov
jae
ret
push
jecxz
add
fimuls
in
and
mov
lahf
outsb
movsl
movl
cli
pop
jg
sub
daa
push
push
sti
add
pusha
lea
hlt
in
inc
add
clc
push
jno
sbb
cli
test
fidivrl
call
cmp
testb
inc
les
and
jle
das
pop
jbe
xchg
inc
adc
and
inc
movsb
add
aas
add
outsl
inc
xor
incb
adc
push
test
test
stos
mov
fsubs
cltd
fcoms
push
dec
roll
sub
dec
fcoml
dec
xlat
pop
inc
dec
cmp
sbb
aaa
addr16
cwtl
int3
in
mov
and
mov
shrb
mov
adc
das
pop
add
bound
lcall
mov
popf
pop
fldt
movsl
lahf
mov
lods
sbb
jbe
inc
loope
add
ds
jle
sub
xor
repnz
out
pop
in
sarl
sub
pop
cli
in
int3
inc
jg
testl
xor
push
sub
sar
xchg
shll
xchg
pop
adc
mov
jmp
mov
mov
dec
repnz
cmovnp
outsb
add
pusha
mov
pop
outsl
les
jp
add
jns
mov
lods
mov
inc
je
rcl
bound
sbb
aam
adc
mov
mov
loopne
cmp
ja
dec
in
imul
mov
cltd
mov
lods
mov
decl
dec
pop
test
fnstcw
push
lds
push
pminub
fisubs
scas
out
jle
inc
stos
jbe
leave
loope
mov
xchg
adc
aam
add
sub
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
inc
push
sub
aaa
adc
lea
adc
stos
dec
out
out
cwtl
mov
popa
rcll
mov
xor
cmpsl
xchg
leave
pusha
add
sbb
ljmp
bound
add
jbe
mov
cmp
inc
mov
in
push
data16
lahf
mov
mov
mov
in
clc
repz
mov
mov
lods
inc
fistpl
mov
xlat
add
dec
out
aam
ss
add
mov
movsl
jecxz
mov
jle
in
and
bound
push
xchg
outsl
pop
ds
and
sbb
mov
or
pop
lret
push
das
stos
hlt
fbld
mov
push
int
jge
hlt
fstpt
xchg
je
sub
sbb
xchg
sbbb
inc
mov
leave
push
dec
xchg
dec
pop
sbb
xchg
icebp
add
and
adc
sub
mov
sbb
push
add
test
cmp
xchg
in
cmp
dec
imul
pop
mov
inc
push
mov
mov
mov
cmpb
adc
fxch
cmp
insb
or
or
push
pop
in
xor
dec
imul
repz
cmpb
inc
push
xchg
jne
xchg
mov
dec
mov
pop
aad
adc
xchg
enter
push
adc
in
inc
sbb
mov
mov
test
nop
inc
mov
push
fcompl
test
sub
popa
cmp
xchg
pop
adc
and
adc
xchg
inc
inc
cld
enter
sarl
jg
sarb
push
jmp
inc
or
push
push
sbb
add
lods
movsl
xchg
ja
xor
repz
into
xchg
mov
hlt
sbb
push
insl
push
push
xchg
mov
and
jg
js
imul
sarl
jmp
imull
aam
push
push
out
inc
cmpsl
dec
insb
xchg
push
in
jg
inc
mov
mov
cld
loop
pop
into
cmp
mov
std
sub
mov
jg
bound
lret
adc
movsl
pop
fldenv
cmp
lods
xchg
xlat
loope
andl
sub
in
aad
pmaxsw
mov
sti
aad
into
ret
adc
test
imul
out
dec
int
mov
in
lret
ljmp
and
je
ret
les
mov
add
lea
add
fdivl
pop
jecxz
stc
fwait
xchg
or
ret
stc
fsts
dec
pusha
jl
rclb
jecxz
fdivrs
adc
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
lock
xor
adc
sbb
out
mov
scas
je
nop
push
rcrb
pop
xchg
adc
jg
push
jge
test
mov
pop
lcall
test
lret
data16
or
sbb
jo
xor
cs
add
fbld
push
fcoms
and
std
inc
ret
cmp
setnp
imul
xchg
push
sbb
dec
nop
mov
sub
and
fbstp
ljmp
imulb
fstpl
in
cmpsb
mov
push
mov
push
mov
sbb
mov
in
movsl
mov
scas
pusha
ja
notl
clc
mov
hlt
loope
cmp
loope
mov
pop
rolb
fs
xchg
rorl
aam
int
jle
sbb
xchg
mov
jl
xchg
pushf
or
ds
xchg
inc
dec
sbb
mov
pop
jns
mov
mov
xchg
add
ss
or
fists
push
or
add
call
mov
imul
inc
pop
subl
inc
fldenv
sbb
stos
dec
mov
int
or
push
pop
push
rolb
loop
dec
mov
xchg
dec
mov
push
add
push
jnp
push
fimuls
pop
popa
and
cltd
adc
cmp
and
outsl
push
and
dec
adcb
and
sbb
mov
inc
mov
jae
and
push
js
andb
movsl
arpl
cmp
mov
orb
mov
lods
jmp
imul
in
mov
jbe
das
incl
pushf
call
push
out
push
clc
orl
push
cmp
loope
ret
xor
dec
jg
sbb
call
inc
fwait
insb
dec
and
dec
sub
test
test
jae
sub
frstor
jecxz
adc
dec
lea
pusha
cmp
int
inc
xchg
sahf
add
gs
or
aam
xchg
push
dec
js
dec
lock
ja
push
mov
xlat
push
arpl
aad
push
or
outsl
aam
in
pusha
mov
jae
js
mov
imul
mov
adc
clc
cmp
popa
out
gs
sub
lahf
lods
test
sub
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
testl
adc
aaa
xor
cmp
inc
cli
adc
cld
ret
dec
int
dec
jle
ror
dec
test
sub
jnp
xor
cltd
jb
xchg
test
and
mov
jmp
iret
pop
rorl
fwait
in
push
push
pop
mov
pop
cltd
mov
push
cmp
mov
and
in
push
fidivl
pop
nop
sub
fsubs
ljmp
mov
add
xor
cmpsl
sbb
ret
addr16
pop
fnstenv
js
pop
inc
cmc
jbe
add
mov
imul
lock
aad
push
sub
push
mov
cmovl
ljmp
addr16
daa
inc
xchg
call
inc
sub
out
push
inc
adc
shl
sbb
xor
mov
out
rcl
cld
mov
mov
or
adc
dec
push
jns
inc
sahf
je
sub
inc
xchg
cmp
xlat
icebp
pop
pop
xor
jle
push
and
pop
adc
sub
xor
sbb
xor
jne
fcmovne
adc
cs
pop
js
imul
shlb
ficomps
and
stos
fnsave
stc
xchg
negl
ds
cltd
js
outsb
movsb
fsub
mov
aas
shl
enter
cmp
cmpsb
ljmp
in
je
clc
aam
inc
and
pop
or
mov
xlat
inc
xor
shrb
pop
jge
pop
mov
fisttpl
xchg
lahf
and
pop
pop
push
xchg
stc
xor
adc
cli
mov
fistps
in
lcall
stos
sbb
sbb
push
mov
faddl
loop
sarl
cmc
and
call
jb
aas
cmp
shlb
pop
jg
test
pushf
sub
jne
test
xchg
or
fucomi
loop
sbb
scas
dec
jl
imul
sub
in
and
icebp
jae
add
jge
imul
xchg
in
dec
add
and
mov
inc
dec
icebp
mov
loopne
jbe
cmpl
pop
test
popf
add
bswap
mov
jno
sub
dec
inc
inc
cmp
lret
or
lea
call
mulb
cmp
mov
stos
push
lea
pop
fsts
push
out
pop
push
imull
dec
cli
popa
scas
faddp
stos
ret
adc
in
call
ficompl
jmp
ljmp
and
je
mov
mov
xor
xor
or
push
add
jmp
and
lods
and
js
icebp
xchg
lea
adc
push
jno
loopne
lock
mov
vmovups
fcoml
arpl
scas
test
jg
add
into
int3
hlt
lds
cmp
xor
jnp
data16
xor
push
sub
iret
inc
dec
std
mov
out
jl
mov
or
ror
jl
fs
cs
push
sbb
push
dec
test
push
pop
cmp
cltd
and
cmpsb
cmp
iret
cmp
lahf
jne
shrl
movsb
inc
rcll
mov
xchg
mov
out
pop
jecxz
dec
xor
rcll
clc
test
add
pop
faddl
sub
mov
lahf
test
inc
test
call
jl
lock
addr16
xchg
test
cs
mov
xchg
pop
or
roll
int
inc
mov
jge
nop
mov
hlt
mov
cmpl
test
mov
adc
mov
arpl
jle
nop
mov
aad
lods
adc
cmc
sbb
test
mov
adc
movsb
not
out
adc
aad
lods
mov
std
mov
les
jp
mov
popf
cli
or
dec
mull
jns
mov
andb
in
sbb
xchg
ret
movsb
push
jns
pushf
loope
inc
scas
fmull
mov
inc
jb
lcall
pop
fwait
mov
fwait
and
loop
ret
xchg
ss
dec
scas
aas
add
rcl
mov
xor
mov
and
cmp
icebp
jae
testl
jmp
lock
or
ja
pop
jae
dec
outsl
mov
imul
mov
jp
mov
adc
jg
movsb
outsl
push
je
sbb
xor
adc
add
outsl
jp
adc
xchg
jbe,pt
movsl
loopne
lods
fcom
aaa
aaa
iret
outsl
dec
lds
cmp
int
stos
adc
or
or
hlt
scas
sti
iret
cltd
fistpl
into
mov
mov
cmp
or
mov
scas
enter
aaa
dec
std
or
mov
daa
or
pop
loopne
std
mov
adc
push
jl
adc
sbb
cwtl
lret
and
xchg
insl
mov
xor
mov
xor
stc
mov
lock
mov
push
xor
cmpsl
aas
es
xor
inc
cmpsb
fldcw
lods
je
xor
into
popf
and
mov
scas
add
les
lea
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
lret
pop
jmp
mov
mov
mov
xor
or
inc
push
sahf
es
popf
shrb
jle
pop
sahf
test
shlb
aas
jle
xchg
jle
inc
out
sahf
push
push
cmp
dec
mov
aas
stc
rclb
imul
icebp
dec
pop
add
loope
sbb
add
adc
es
fcomp
pop
inc
pop
mov
xchg
test
out
jmp
es
out
shll
mov
mov
mov
divb
fdivrp
push
inc
add
in
mov
mov
or
adc
dec
mov
out
std
jl
insb
movsl
dec
fs
mov
xlat
pop
aaa
jns
leave
lock
pusha
adc
fildl
pop
insl
scas
lods
jae
dec
pop
jno
fs
jno
scas
sub
sub
xor
fcmovb
push
push
cwtl
xchg
mov
sub
clc
lods
xchg
mov
sub
adcb
jne
cmp
repnz
sub
sarl
sti
and
ja
inc
or
jge
jbe
cwtl
pushf
inc
js
add
xchg
mov
iret
mov
mov
lods
or
shlb
sub
negb
insl
mov
push
adc
lock
icebp
mov
and
outsb
dec
fwait
push
dec
xor
lret
xor
add
push
mov
loopne
xor
sbb
jmp
jnp
mov
and
inc
push
ja
sbb
scas
jmp
pop
lcall
mov
adc
jecxz
les
push
pop
push
das
sbb
xchg
pop
xchg
push
idivl
hlt
and
sub
addb
je
sbb
mov
adc
pop
xchg
jne
xor
cmc
xchg
push
push
xor
xor
mov
outsl
jae
and
xor
jmp
dec
movsl
out
out
pop
int3
and
jl
out
inc
mov
xor
fwait
jbe
sarl
sbb
das
and
pop
add
popa
xor
out
adc
aad
pop
ret
nop
sub
mov
mov
movsb
sub
inc
push
cmp
cmc
or
jno
mov
sub
adc
shrl
push
and
jnp
xchg
xor
jb
je
fcmovnbe
pop
fwait
cltd
jnp
cmpsl
mov
mov
lret
dec
rcrb
pop
jbe
inc
pop
icebp
sbb
jo
inc
ja
sub
push
xlat
pop
shlb
inc
ret
jb
fcoms
push
add
inc
add
inc
lret
pushf
das
pop
mov
xchg
lret
ret
lods
testb
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
es
sbb
adc
push
out
pop
test
mov
lahf
cmp
out
sub
shlb
push
pushf
ja
shlb
iret
fisttpll
and
push
pop
inc
jmp
ds
pop
fists
xor
dec
xchg
inc
lret
shll
jbe
gs
dec
mov
sahf
pop
fwait
xorl
imulb
push
or
mov
popf
pop
fisubs
and
xchg
sub
daa
jae
les
jnp
popa
mov
sub
repnz
jne
es
rcl
test
xchg
es
xor
orb
popa
and
adc
sbb
pop
xchg
js
loope
mov
xchg
cli
adc
mov
mov
in
sbb
or
sbb
cli
cli
push
mov
cmp
mov
fnstcw
cwtl
enter
shl
shll
adc
test
bound
dec
add
cmp
pusha
add
enter
inc
testb
scas
fistl
out
dec
std
popf
dec
out
dec
nop
pushf
fdivp
das
cmp
push
mov
xor
jecxz
xchg
xor
lods
lods
dec
ljmp
imul
xor
call
movsbl
ficoml
push
or
ja
cli
iret
cltd
clc
inc
ret
add
sub
std
push
fmuls
lret
shll
jmp
pop
jl
cld
das
and
and
push
das
pop
xchg
add
xor
pop
pop
cmp
adc
pop
pop
lea
cli
pusha
in
icebp
jae
clc
cltd
fcomi
pop
xchg
arpl
dec
lds
inc
test
stc
jnp
xor
ss
jno
mov
or
pop
xchg
pusha
sub
xor
push
mov
lods
and
and
add
popa
js
dec
repz
arpl
pop
in
push
repnz
add
jbe
in
into
in
fwait
aaa
test
jnp
ss
scas
cltd
pop
cmp
test
mov
and
lret
inc
jp
adc
cmp
ds
das
lock
ljmp
cmp
lods
mov
pushf
filds
xlat
fcoml
sbb
in
dec
add
adc
jl
out
movsb
xchg
jle
fwait
inc
cmpsl
push
cli
out
js
lret
ret
and
fimuls
and
iret
jg
pop
int
repnz
dec
dec
pop
push
loop
sbb
aaa
mov
movsl
sbb
fcoms
lahf
imul
dec
adc
or
add
cmpsl
in
lea
cmp
lock
mov
add
xor
xor
das
jle
xchg
icebp
push
inc
mov
aad
xchg
xchg
push
int
stos
les
jle
imul
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
or
mov
mov
mov
ljmp
jne
pusha
sub
lea
mov
xchg
aaa
xchg
aam
fidivrl
or
xchg
cmpsb
push
jle
adc
and
and
scas
shll
popf
pusha
mov
xlat
xchg
mov
xchg
stos
into
in
out
adc
inc
ss
xor
dec
xchg
mov
ss
test
mov
into
xchg
test
loope
inc
ficompl
out
dec
cmp
xchg
jmp
mov
jl
or
sub
mov
stos
mov
imul
xchg
dec
enter
push
movsb
daa
imul
stos
in
or
sahf
mov
gs
fidivl
test
mov
xchg
mov
out
out
sub
aam
or
sbb
xor
add
aas
mov
mov
mov
test
arpl
push
add
mov
rclb
lcall
outsb
jp
pop
adc
adcb
jg
fdivrs
loope
and
inc
xor
fnsave
rorl
jg
jnp
add
popf
xchg
mov
hlt
push
push
pop
lahf
mov
out
addr16
cli
xlat
pop
or
and
lcall
into
in
scas
pop
sub
lods
lahf
xchg
or
testl
pop
fs
mov
or
xor
cmc
xor
popa
pop
add
lods
xchg
jns
mov
test
mov
lahf
push
adc
adc
mov
mov
jnp
push
dec
call
jns
mov
pop
mov
sbb
mov
xchg
pop
pop
inc
add
lds
add
sub
xchg
aaa
or
mov
enter
rcrl
mov
and
inc
ds
and
pop
xor
andb
lds
xor
outsl
out
or
xor
add
inc
or
and
cmp
mov
cmp
mov
stc
sahf
mov
pop
sub
lret
loope
lock
lcall
pop
cmp
pop
sub
enter
scas
ja
fwait
mov
arpl
ffreep
js
jp
inc
push
xor
rcrl
inc
add
mov
push
clc
push
xlat
cmp
add
ss
mov
pop
pinsrw
insb
imul
add
clc
lods
fdivrs
and
sbb
mov
push
hlt
mov
inc
dec
in
xchg
in
pop
pop
mov
out
ja
jle
insb
and
sbb
jp
cmp
inc
ljmp
mov
or
or
pop
rcrl
loopne
out
xchg
sub
mov
cmp
mov
jle
sbb
insl
imul
jg
jns
push
sub
scas
iret
ret
xchg
adc
cmp
push
loop
fisttpll
ret
out
mov
out
out
arpl
inc
jns
adc
mov
iret
or
jmp
xchg
lret
ret
sbb
or
notb
test
add
jp
cmpsl
cmp
lret
mov
in
js
xor
push
push
adc
loope
sbb
dec
movsb
lcall
or
add
inc
mov
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
sbb
jle
unpckhps
mov
cmp
jmp
movl
pusha
pushf
stos
inc
dec
xchg
pop
fidivrs
mov
andl
bound
incl
inc
ss
cltd
and
loope
shrb
sbb
inc
rorb
in
adc
dec
testl
pop
icebp
xchg
loope
mov
mov
jbe
jl
insl
mov
fldt
cmp
insb
shlb
rcrl
loopne
shr
add
dec
in
je
mov
call
add
int3
mov
inc
movsl
or
std
lock
mov
imul
dec
in
outsb
xlat
inc
ss
mov
out
dec
xor
add
push
jmp
xchg
test
ja
jmp
aas
jge
dec
lret
loope
lcall
push
pusha
jbe
mov
fcmovu
dec
gs
cmp
cld
mov
jp
pusha
mov
sub
pushf
pusha
imul
push
xor
mov
inc
out
shrl
sub
cmp
cmovb
les
in
pop
push
pop
sbb
lret
xor
mov
pop
cmpsb
stos
jne
cmp
clc
jl
jo
pop
and
and
test
setbe
cmp
mov
inc
add
stos
hlt
jns
inc
jg
pusha
lods
mull
or
jl
jl
imul
jo
sbb
lods
mov
mov
or
pop
jne
cwtl
inc
aas
pop
popf
mov
out
dec
push
fimull
cmp
mov
pop
mov
add
shll
cmp
push
adc
movsl
mov
pop
xor
push
sub
bound
jnp
loop
mov
clc
fsubrs
add
stos
mov
sti
xlat
add
clc
in
rorb
mov
test
dec
push
xchg
in
add
shr
or
fnstcw
into
pop
inc
fnstcw
in
daa
push
inc
or
inc
cmc
cmp
sub
outsb
push
gs
cltd
pop
pop
sti
data16
pusha
sbb
clc
xchg
push
das
outsb
lods
leave
push
mov
mov
shlb
inc
or
int
push
or
mov
mov
xor
cmpsb
xchg
cwtl
and
and
adcb
leave
lods
prefetchw
shll
jl
sbb
imul
and
inc
aam
movsb
pusha
int3
and
dec
loop
inc
adc
in
int
fcmovne
je
frstor
cmp
mov
clc
aaa
mov
fwait
cwtl
pusha
rcrl
adc
popa
sti
mov
or
insl
mov
fsts
mov
cwtl
cs
jecxz
loopne
dec
jge
cmp
dec
ret
xchg
outsl
outsb
push
lcall
add
or
cmpsb
adc
les
scas
lret
mov
jecxz
iret
fistpl
mov
mov
mov
movsb
mov
or
cli
sarb
iret
in
repz
jnp
fistpll
pop
or
movsb
xorb
out
adc
andb
data16
mov
xor
pop
or
stos
sbb
stos
mov
insl
and
in
pop
lds
xchg
or
movsl
test
into
popf
mov
repnz
xor
mov
scas
xchg
mov
loopne
pop
mov
ficomps
aam
jg
sub
or
xorb
lcall
add
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
jle
pop
adc
adc
cmp
dec
test
dec
ljmp
xchg
je
adc
loope
sub
lcall
mov
push
add
and
or
jns
sub
shll
push
in
aad
insl
scas
rcll
outsb
mov
mov
add
jbe
xlat
mov
dec
push
lods
ret
dec
inc
lret
sbb
cwtl
movsb
pop
outsb
test
pushl
jns
sbb
push
pop
adc
ret
push
roll
xor
sbb
jmp
xor
mov
int3
xchg
jae
xchg
pushf
loop
mov
imul
nop
pop
sub
aad
aas
jb
dec
insb
or
shll
xchg
jne
data16
push
punpcklbw
ret
push
dec
hlt
sub
scas
fstl
push
leave
mov
push
shll
jns
ret
xchg
in
arpl
or
lods
nop
inc
lods
sub
mov
pop
test
or
push
fisttpll
pop
add
and
cmp
fdivp
negb
jbe
adc
sbb
and
add
dec
cmp
push
add
stos
loope
jecxz
ss
push
or
dec
movsl
ja
adc
bound
jl
dec
fnsave
jl
popf
lods
movsb
and
mov
jle
sub
nopl
pop
pop
and
mov
add
std
shrb
adc
and
ret
push
lock
and
mov
loopne
cmp
lea
je
mov
enter
repz
push
inc
jmp
xchg
btr
out
pop
jmp
mov
fsubl
outsb
push
pop
cmpsl
pop
inc
mov
das
in
popf
outsb
xchg
mov
xchg
bound
push
movsl
pusha
mov
stc
int3
sbb
pop
clc
mov
loope
loope
fldl
stos
mov
sbb
jne
lds
cmpsb
imul
dec
cmp
dec
mov
icebp
mov
cs
push
test
lods
or
fisttps
sub
xchg
mov
dec
jns
std
rolb
fmuls
arpl
adc
jns
dec
sbb
in
ficomps
idivl
out
addl
sub
lds
cmp
xor
sti
sti
call
out
and
mov
lock
gs
cmp
test
add
sahf
faddp
pop
testl
mov
push
inc
rcll
aas
scas
pop
fsubrs
cli
out
mov
insl
test
xor
mov
and
out
xor
shll
jae
push
hlt
leave
les
stos
fimull
xor
out
mov
add
xchg
insl
cs
sub
imul
adc
pop
push
or
cmp
adcl
movsb
decl
jb
jle
es
xor
adcb
add
ret
movsl
icebp
cltd
ljmp
les
ret
lock
lds
in
lock
mov
mov
push
mov
dec
mov
mov
clc
xor
xchg
push
outsb
aas
cmc
xchg
mov
loope
mov
ficomps
aad
stc
lds
aad
sub
movl
in
js
shrb
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
repnz
adc
lret
mov
stc
cmp
lahf
push
popf
movsl
out
mov
test
into
insb
and
mov
mov
cmp
btc
mov
mov
cmp
aas
sbb
test
jl
sub
mov
inc
es
mov
lods
add
xor
jno
sub
push
sbbb
cmp
jns
iret
out
inc
jmp
into
stc
push
mov
into
mov
fldenv
into
sbb
mov
and
dec
jmp
adc
bound
sub
mov
mov
push
mov
cmpsb
test
jp
cltd
pushf
xchg
insl
push
sub
ss
out
mov
sbb
iret
test
cmp
int3
xchg
jecxz
jl
int
xor
mov
push
ds
mov
repz
mov
jp
jnp
in
mov
inc
mov
add
or
setbe
pop
insb
add
dec
decb
pop
cs
ljmp
lcall
aad
test
mov
xlat
xchg
es
int3
sti
rorb
inc
push
pop
loopne
sbb
jne
or
mov
out
xchg
mov
mov
into
notb
sbbb
rcr
movsl
push
jne
pop
lods
xchg
or
cmp
stc
jg
dec
mov
push
xor
nop
mov
rorl
adc
cmp
dec
xchg
shlb
sbb
call
or
mov
sbbl
push
xor
test
out
dec
mov
frstor
adc
mov
lret
pop
hlt
mov
adcb
scas
mov
xchg
inc
inc
mov
jnp
or
cmpsb
cltd
pop
loope
sarb
cld
sti
dec
mov
jne
dec
rclb
pop
clc
imul
cmpsb
movl
fdivrl
sub
out
add
add
push
rol
mov
int
mov
mov
jbe
js
lds
std
jns
or
pop
add
xchg
arpl
push
and
mov
sahf
cmp
inc
ret
rorl
sti
sbb
mov
xchg
xor
push
ds
jns
mov
aas
ljmp
add
push
sbb
jg
ficompl
jecxz
inc
mov
ds
adc
test
push
test
mov
push
and
add
sub
mov
jle
jo
mov
add
mov
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
arpl
adc
sbb
jg
stos
sbb
add
ss
loopne
xchg
ss
ss
dec
add
cld
or
imul
sbb
out
and
pop
xchg
jbe
adc
push
pop
dec
daa
xorb
xchg
notl
cmp
sub
ss
sarb
sti
and
daa
jb
cmc
jb
mov
jae
sbb
xlat
xor
sub
roll
pop
outsl
add
and
mov
push
outsb
dec
cmp
xor
mov
cmp
in
mov
pop
mov
out
or
sub
xor
push
push
nop
pop
shlb
or
int
dec
sbb
mov
add
stc
cmp
hlt
popl
push
je
sub
push
pop
cmc
inc
xlat
xorl
je
push
fidivrl
push
jmp
add
xchg
add
xor
lods
and
fwait
adc
mov
mov
mov
stc
add
mov
repz
sub
vcvtsd2ss
js
mov
add
add
adc
dec
sahf
xlat
mov
cmp
jmp
cmp
push
hlt
out
jmp
imul
notl
ss
repnz
ret
and
jl
jmp
pop
in
ret
push
ret
sbbl
movsb
jg
insl
xchg
scas
mov
adc
pop
mov
pop
mov
jb
add
xchg
in
add
insl
mov
jmp
cmp
xchg
push
cmc
jg
shrb
popa
pop
ja
rcrl
aam
jns
iret
ror
rorb
lods
test
aaa
test
mov
in
jmp
sti
cli
xchg
lock
pop
or
xchg
sahf
clc
out
lock
orl
dec
stos
mov
shll
or
into
add
dec
or
mov
add
repz
cs
jns
cs
mov
sbbb
cmp
adc
cmp
pop
jle
mov
orb
cli
adc
mov
xor
sbb
int3
test
scas
stc
int
mov
cmp
push
pusha
pop
pop
clc
and
roll
movsb
jecxz
stos
inc
cmp
sbb
inc
cs
stos
test
push
stos
sti
xor
fdivrl
xchg
lock
in
xchg
pop
jo
loopne
stc
mov
sub
movl
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
xchg
in
cmp
adc
fldz
sbb
orl
xchg
xchg
mov
popa
test
in
out
dec
loopne
mov
aas
repnz
pusha
test
jns
jns
shlb
dec
push
jmp
xcrypt-ecb
cmpsl
popl
popf
pop
mov
out
fs
lock
mov
gs
add
les
shrb
xchg
jno
xchg
sarl
bnd
mov
sub
ret
movb
sbbb
sub
jae
sbb
jbe
out
adc
std
jno
push
cmp
jge
xor
dec
push
mov
sbb
out
add
loopne
cmpsb
adc
rsqrtps
jle
jl
mov
jg
loope
jg
in
je
push
mov
xchg
lea
in
mov
jmp
and
mov
mov
int3
int
std
sti
lret
data16
stos
ss
incl
mov
movsl
adc
xlat
mov
cmp
sbb
mov
pop
or
sub
push
add
jne
inc
jae
movsl
out
sbb
pop
dec
sub
int3
or
sbb
inc
nop
ret
outsl
pop
push
mov
out
call
test
fiadds
imul
sbb
sbb
lcall
pushf
stos
cmp
outsb
stos
nop
stos
loope
jo
xchg
in
cs
clc
mov
jecxz
add
mov
lcall
popa
jb
adc
mov
aas
loope
cmp
cmp
sar
mov
or
xor
sbb
mov
adc
mov
mov
pop
dec
ja
push
stos
testl
cs
pop
add
imull
cmp
fdivs
jnp
dec
jmp
andl
adc
lds
cld
stos
fwait
mov
dec
inc
jl
in
icebp
lret
add
cmp
mov
rcll
stos
stc
pop
pop
test
cmp
push
ret
inc
outsl
lock
js
and
movsb
jo
sub
fdivl
xor
lods
divl
ljmp
cmp
xor
stos
aas
fisubs
popf
shl
mov
inc
xchg
cmc
mov
addl
repnz
test
dec
xchg
and
jne
mov
and
or
xchg
jmp
jns
fwait
sub
roll
xor
addr16
sub
jnp
push
mov
addl
sub
movl
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
push
and
push
out
adc
adc
in
pop
push
stc
insl
mov
mov
jns
sbb
adc
pushf
cli
cmpsl
mov
shlb
pop
xchg
clc
xchg
sub
or
mov
test
jnp
add
rol
inc
mov
imul
dec
rorb
out
arpl
loop
sbb
adcl
gs
pop
mov
loopne
test
mov
pushf
and
jp
enter
inc
movsl
mov
cmpl
stc
jl
ja
mov
sub
sbb
push
out
enter
pop
mov
adc
mov
dec
sahf
push
in
inc
out
cltd
fnstcw
mov
inc
mov
sahf
xchg
xchg
inc
mov
push
fadds
push
dec
xlat
fidivrl
sar
mov
test
cltd
fcoml
mov
lahf
xchg
inc
loopne
fcoms
cmp
outsb
iret
out
cld
xchg
and
jae
mov
leave
dec
cmpsl
push
ds
loope
pusha
ja
jnp
cmpsb
ljmp
add
mov
sbb
popa
cld
shrb
jb
fsubs
adc
aaa
test
mov
mov
out
pop
pop
mov
ss
rcrb
and
sub
fisttpl
js
push
inc
les
test
lods
xchg
dec
mov
pop
push
xchg
clc
inc
xchg
inc
ja
std
jnp
gs
sub
push
cwtl
mov
cmpl
hlt
adc
lds
lcall
decb
mov
psubusb
lock
push
mull
add
arpl
adc
movl
or
hlt
push
dec
pop
jnp
dec
push
inc
inc
mov
stc
or
xor
addb
cltd
sbb
cmc
ror
subl
sub
mov
mov
imul
lods
les
adc
dec
aas
sub
mov
cwtl
insl
inc
das
lock
fs
mov
push
lret
dec
jns
mov
ss
mov
or
in
loopne
push
and
shl
cmp
jl
cmp
add
mov
out
lcall
imul
icebp
outsb
jge
cwtl
loop
pushf
and
outsb
sbb
sbb
dec
stos
pop
decl
das
test
lock
rep
mov
nop
and
adc
sbb
sub
mov
inc
or
sbb
daa
xor
stos
pop
sub
fimuls
testb
sbbb
jo
sbb
das
push
fwait
js
pop
sbb
dec
stos
insb
adc
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
sbbl
adc
adc
pop
inc
movsb
test
ret
inc
and
fwait
sub
adc
ret
add
mov
in
nop
cli
xchg
or
lds
mov
pop
inc
js
icebp
jne
orb
pushf
jge
inc
mov
inc
ja
pusha
pop
push
ficoms
aas
addb
sub
bound
shlb
aas
inc
sub
adc
or
insl
repz
sbb
fs
jnp
add
int
negl
dec
sbb
xchg
mov
push
popf
inc
sub
adc
xchg
shrb
xchg
push
push
sub
scas
dec
mov
pop
add
xor
sbb
sub
negb
dec
xor
push
jmp
sub
inc
mov
lods
xor
cli
xorb
stos
xor
ds
scas
in
insl
test
mov
dec
lret
fdivs
fistl
dec
adc
cli
jbe
sbb
inc
mov
stos
arpl
xchg
mov
lods
lds
mov
nop
mov
fisubrl
sbb
adc
dec
out
jecxz
or
or
inc
loopne
cmpsb
mov
jp
adc
cs
scas
or
mov
roll
pop
repnz
pop
nop
jmp
das
sub
fcmovnbe
xchg
sub
shlb
sub
das
cmc
insl
lods
mov
or
pause
ss
pop
lret
loopne
push
or
mov
inc
pop
inc
xlat
mov
shl
pop
movsb
jecxz
jl,pt
jno
and
je
inc
and
mov
test
add
push
push
fs
sbb
dec
scas
add
jno
jge
int
dec
pop
fwait
xchg
call
bound
dec
mov
sub
mov
jl
dec
dec
xchg
loop
pop
mov
popf
fldenv
leave
inc
sub
jnp
add
mov
mov
or
xchg
imul
leave
stos
gs
in
stos
stc
cmp
or
xor
into
push
shrl
dec
in
adc
ficompl
iret
inc
pop
xchg
daa
movsl
aam
iret
popa
ss
fiaddl
dec
popa
sbb
jne
call
or
jge
mov
fs
adc
mov
jno
outsl
mov
mov
enter
bound
jge
std
push
sub
mov
jne
js
ja
sti
mov
or
xchg
jne
mov
push
xchg
insb
mov
and
negb
dec
int
jmp
gs
cmp
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
and
insb
add
adc
adc
dec
mov
popf
out
test
sbb
insb
outsb
pusha
pop
cmc
inc
xchg
jle
les
xchg
mov
mov
int3
cmp
scas
sbb
fmul
pop
sbb
pop
mov
xor
inc
sub
in
and
xor
and
push
sub
cld
outsb
pop
or
ret
lea
inc
mov
jo
add
inc
sbb
pop
lcall
loope
or
sahf
push
scas
mov
inc
aad
call
mov
pushf
addr16
int3
push
jae
xor
mov
incl
pusha
ret
sub
leave
push
loop
subl
jecxz
je
movsl
xor
or
int
cmp
scas
cwtd
sub
sti
out
pop
pop
pop
and
mov
cmp
mov
push
cmpl
out
fdiv
mov
jb
add
or
mov
fbstp
mov
gs
testb
fistps
shlb
das
adc
xchg
insb
ss
jne
imul
insl
out
mov
fdivs
xchg
cwtl
jno
xor
cmp
mov
mov
les
mov
jb
jae
inc
addr16
lret
add
mov
lcall
sahf
push
insl
mov
lret
ljmp
sub
int3
ror
pop
mov
addl
imul
call
sarb
pop
data16
fwait
jb
add
pop
pop
push
or
lock
cmp
push
mov
dec
leave
sahf
xchg
sbb
dec
sub
or
notl
add
jno
mov
test
xchg
cwtl
cwtl
and
cmp
jmp
jae
fiadds
dec
cmp
outsl
push
inc
lods
pop
add
mov
xlat
pop
scas
hlt
fdivs
cmpsl
inc
rcr
sahf
pop
adc
outsl
dec
sbb
jge
cs
xchg
dec
mov
and
test
test
cmpsb
popl
jmp
jne
xchg
xchg
pushf
xor
cwtl
repz
jge
into
test
jp
xchg
fsubl
imull
or
inc
addr16
popf
sub
popl
rolb
mov
cmp
int3
pop
mov
int3
push
add
pop
test
es
fcomps
movsb
out
add
push
lods
jnp
lds
dec
lds
ret
fmuls
pop
sti
mov
mov
and
jecxz
cmp
add
xchg
ret
jo
xor
pop
outsl
jb
fucomi
lods
test
push
xchg
loop
test
jg
hlt
nop
inc
mov
rclb
add
fsts
sub
or
das
push
mov
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
lea
jnp
adc
adc
add
and
lret
clc
xor
xchg
stos
cltd
jnp
fld
sbb
repz
push
out
jg
pop
scas
sub
rcr
push
xchg
ss
xchg
dec
sub
inc
mov
sub
call
cmp
scas
out
mov
ret
inc
mov
xor
push
fiaddl
in
lods
test
and
std
cmp
lret
lahf
je
vmread
scas
push
sbb
orb
sbb
insb
and
ds
ror
imul
movsl
data16
mulb
dec
xchg
je
mov
push
xchg
sub
sub
mov
loope
addr16
mov
xchg
rol
or
or
cli
in
daa
sti
gs
out
fidivs
lretw
dec
jno
add
pusha
or
push
push
ss
outsl
dec
push
adc
inc
pop
jp
adc
push
mov
test
imul
adc
ljmp
sub
sbb
jbe
pop
je
scas
inc
push
test
aaa
insl
dec
notb
pop
repz
mov
es
inc
xor
cmpl
loopne
js
jecxz
pop
sbb
jnp
out
mov
sbb
fmulp
pop
loop
or
ds
loop
push
fcomps
and
leave
sbb
pop
sahf
mov
push
ljmp
and
mov
pop
sbb
xor
cs
cs
lcall
inc
cmp
shlb
jle
sub
std
xchg
enter
xchg
cwtl
dec
fidivrs
das
addr16
mov
pop
push
pop
inc
push
pcmpeqd
xchg
cmp
mov
in
adcb
pop
stc
mov
aas
cmp
cltd
ljmp
outsl
pop
push
inc
test
xchg
fsubrs
addr16
add
in
lahf
aam
jmp
out
sub
sub
and
cmpsb
add
clc
popf
sbb
ffreep
mov
arpl
in
clc
mov
mov
push
test
ds
lahf
xlat
pop
pop
or
add
xor
test
pushl
cmc
ljmp
jg
cs
loopne
or
loop
mov
jb
mov
push
andl
adcb
mov
inc
cmp
xor
popa
ret
xor
orl
pushf
jp
sbb
or
inc
jp
iret
andb
cmp
fwait
jae
mov
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
mov
xchg
movlps
xchg
dec
ljmp
xchg
sar
adc
lcall
push
xchg
add
sbb
out
inc
movsl
dec
cmp
fstpt
je
inc
sahf
stos
fabs
in
filds
daa
sbb
pusha
lcall
mov
nop
popf
pop
xchg
xchg
ror
jge
aam
cld
sti
fistpl
shl
fs
daa
lret
pop
xchg
std
imul
xchg
cli
je
push
das
push
loope
push
lock
in
sahf
pop
xchg
mov
pop
pop
lret
mov
rol
mov
dec
mov
add
lcall
lea
or
sbb
mov
into
and
repz
les
jp
jg
push
sbb
dec
ret
dec
xchg
push
ljmp
push
jle
jnp
pop
pusha
ret
divl
in
jge
repnz
les
xor
add
inc
push
lock
xchg
iret
add
and
mov
insl
sub
dec
fsubl
sub
fstpt
icebp
push
or
mov
cmp
push
std
jmp
dec
xchg
mov
test
inc
pusha
dec
jb
push
sub
and
xchg
clc
test
pop
jns
pop
jp
sbb
les
rcll
mov
mov
out
and
icebp
stc
xor
or
lahf
sub
out
xchg
sbb
loopne
pusha
mov
mov
jecxz
pusha
shlb
cmp
bound
fwait
insl
inc
add
sub
jmp
cli
push
popf
lcall
and
jecxz
add
push
rcrl
aad
addr16
dec
insl
pop
std
and
sub
xchg
and
push
adc
add
and
mov
sarb
adc
mov
in
xchg
jnp
mov
mov
pop
pop
lea
fnstcw
pop
imul
mov
inc
xor
push
dec
out
nop
fucomp
xchg
add
mov
adc
pop
add
sbb
cmp
out
movsl
xor
bound
dec
in
xor
push
in
fwait
dec
stos
mov
xorl
push
xor
mov
jb
cmpl
jns
je
xor
lret
adc
adc
aas
subl
cmpl
sub
xchg
sub
mov
push
je
arpl
xchg
push
iret
sub
mov
fisttps
push
test
cs
bound
test
mov
or
int
nop
sbb
jecxz
fcmovne
in
std
pushf
call
sbb
dec
fstl
mov
cmpb
lret
decb
shll
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
sub
mov
js
adc
adc
vcvtss2sd
je
inc
pusha
ss
lds
xor
add
adc
imul
jg
addr16
jle
cmpsl
fcmovnbe
repnz
pusha
fprem
xchg
dec
lea
cmp
mov
pop
push
loopne
add
pop
lahf
sahf
ss
mov
sarl
mov
mov
movsl
sti
and
xor
adc
pop
mov
ljmp
mov
inc
into
mov
sub
clc
jle
lcall
jmp
imul
loop
ja
outsb
leave
ljmp
sbb
test
jp
mov
idiv
jp
dec
in
inc
mov
pop
adc
testl
push
mov
jae
pop
mov
push
mov
xor
pop
jp
push
cmp
push
outsl
or
sarl
cmp
fnsave
int3
push
add
mov
add
add
mov
outsb
cmp
push
xchg
shrl
int
xlat
and
mov
or
fwait
mov
sbb
cmpsb
xor
sti
lods
mov
inc
imulb
mov
jns
cmpsl
xchg
push
repnz
fadds
adc
add
ljmp
addr16
sbb
fldt
mov
lahf
ret
pop
jg
int
fidivrs
cli
jg
cltd
in
sbb
lods
mov
test
cmc
dec
mov
je
cmp
ss
xor
in
jge
fwait
dec
in
dec
cld
mov
in
push
pop
repnz
mov
or
pop
movsb
sub
fsubrl
mov
ja
push
sub
stos
fsubrp
jae
and
jg
xchg
xchg
scas
sub
push
loope
daa
sbb
mov
add
xor
or
lds
dec
aas
in
fsubr
xor
pop
mov
js
ds
imul
out
sub
sub
mov
push
jne
out
stos
xor
insl
or
outsl
stc
xor
push
stos
cltd
out
cwtl
fsts
test
mov
sbb
call
enter
repnz
dec
mov
dec
xchg
cmpsl
scas
push
ds
iret
movsl
mov
push
and
aaa
cs
lret
negb
cmp
sbb
push
xchg
shl
cltd
repz
popa
adc
pop
mov
leave
repnz
add
sti
push
lret
aad
or
imul
rcll
fwait
ljmp
enter
andl
xchg
out
cmp
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
pop
and
ret
lea
mov
loop
mov
cltd
adc
mov
mov
push
daa
cltd
frndint
xor
sub
push
sahf
xor
adc
adc
push
loopne
daa
out
dec
add
pushl
ret
incb
push
xchg
js
jle
and
lahf
lahf
bound
pop
ret
rclb
sar
jl
rcrb
and
sub
sbb
roll
add
fildll
sub
mov
inc
sbb
aad
in
mov
pop
inc
add
in
jb
jecxz
cmp
and
xchg
nop
aam
push
mov
jb
or
jb
das
sbb
jmp
jnp
fiadds
jb
inc
aam
adc
stos
add
scas
clc
out
mov
mov
adc
mov
jne
pop
xchg
fwait
int
xchg
adc
cmp
shrb
cltd
push
pop
js
push
scas
mov
lcall
into
movsb
aad
xor
mov
lds
mov
and
mov
add
arpl
rclb
icebp
fcoml
fimuls
inc
out
test
aaa
fnstenv
mov
inc
mov
dec
das
and
mov
pop
pop
adc
divl
daa
cmp
and
dec
sbb
push
adc
fstpl
aas
xchg
out
aad
or
ss
inc
xchg
jno
mov
xchg
fimull
pop
push
sbb
rcll
decl
jb
sbb
cmp
lock
xchg
inc
loopne
mov
sub
xor
mov
nop
into
push
push
rcll
sbb
ds
sub
xchg
mov
pop
repnz
loopne
xchg
add
add
push
mov
xchg
cmp
int3
testb
dec
out
enter
xchg
lock
ret
mov
jne
loopne
repnz
ror
pop
sbb
inc
mov
jge
fildl
pop
nop
dec
jg
imul
xchg
xor
incl
add
inc
add
lret
leave
and
add
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
enter
into
adc
adc
and
sub
cltd
pop
mov
xchg
adc
imul
pop
jp
int3
mov
je
adc
sti
jno
pop
xchg
dec
and
xorl
push
sbb
or
or
ret
cmp
mov
fdivrs
sub
outsb
cmp
mov
fisubs
enter
xor
ja
lea
fists
fs
pop
gs
jle
lret
mov
popa
hlt
and
roll
cmpsl
push
adc
jne
add
fwait
das
lcall
fldl
repz
adc
pop
xchg
push
and
mov
adc
mov
xor
imul
jecxz
iret
aam
mov
enter
dec
inc
jl
cmp
mov
out
lret
inc
xchg
cwtl
mov
outsb
xchg
int3
aad
pop
mov
fisubl
mov
jbe
cmpb
lds
xor
or
xchg
inc
lcall
fwait
mov
pop
jmp
js
or
test
pusha
jno
shl
ret
das
dec
jae
dec
loopne
and
jno
lods
rclb
pop
gs
or
adc
fdivrl
ret
mov
add
mov
jmp
mov
xchg
test
cmp
fnstenv
out
cmp
jbe
cli
fadd
in
repz
movsl
or
cmp
pop
rol
loopne
repz
mov
data16
repz
push
stos
jle
jno
mov
xchg
movntps
cli
clc
jl
outsb
adc
les
test
mov
das
imul
inc
sub
mov
les
inc
push
ds
aaa
sub
dec
mov
push
popf
popa
test
xor
fcomps
xor
and
lea
add
and
js
imul
sbb
sahf
insb
cmpl
andl
in
add
decl
rol
fcom
push
add
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
sbb
adc
movlps
push
inc
out
insl
out
pop
shlb
dec
and
jg
ret
push
js
lds
xor
adc
cmp
js
cmc
mov
add
sub
out
mul
arpl
or
pop
imul
jo
lahf
bound
stc
out
movsl
xor
add
mov
mov
mov
mov
mov
test
and
or
fwait
fwait
mov
lods
xchg
inc
pop
dec
loopne
repz
jle
add
dec
mov
shl
insl
jmp
pop
dec
mov
testl
xlat
out
add
mov
fnsave
pop
fisubs
or
int
jge
pop
int
cli
push
ret
cld
jmp
out
inc
xchg
push
ret
cmpsl
or
rolb
adc
jl
pop
dec
xor
jle
xor
xchg
add
inc
mov
xlat
cltd
fsts
fistl
flds
xor
movsb
or
lahf
jg
pop
addr16
test
cs
sub
mov
pop
lds
roll
mov
jbe
and
sbb
mov
inc
xchg
in
clc
loope
xor
fs
mov
add
shlb
sahf
push
dec
xchg
in
pushf
and
pushf
lods
out
push
clc
pop
xor
mov
mov
mov
dec
jne
je
ljmp
jmp
jge
pop
decl
iret
out
xor
push
push
hlt
adc
jp
insb
mov
push
adc
inc
pop
lret
add
lods
mov
or
xchg
mov
insl
pop
out
and
pushl
cltd
mov
pop
in
mov
jae
jmp
mov
add
inc
push
inc
push
inc
sbb
dec
je
pop
push
jno
pop
mov
jmp
daa
dec
lds
ja
dec
sub
pop
repz
mov
cmp
xor
xor
in
out
dec
fldcw
mov
or
pop
imul
add
cmpl
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
les
stos
push
adc
adc
mov
inc
pushl
div
add
xchg
sbb
sti
inc
cwtl
cs
mov
xlat
xor
jno
pop
mov
adc
mov
rol
enter
imul
add
js
or
pop
inc
xchg
jmp
jnp
scas
and
push
repnz
xchg
dec
jbe
aam
mov
xchg
push
jae
pop
inc
mov
inc
sbb
inc
fwait
pusha
enter
clc
jae
pop
call
nop
cli
cmp
out
std
movsb
mov
add
mov
pop
daa
mov
popa
faddp
decb
addl
push
push
jmp
and
out
sbb
cmp
xor
xchg
scas
mov
mov
or
xchg
cli
xchg
inc
add
fdiv
jnp
mov
push
js
shl
sbb
jmp
xchg
lret
cmp
jl
pop
xchg
ljmp
push
daa
ja
mul
mov
xchg
or
shrl
ja
aas
pop
xchg
stos
ds
pushf
xor
xor
out
cmp
aaa
sahf
mov
cs
lods
pop
adc
inc
mov
je
aad
push
ja
pop
adc
mov
or
cwtl
pop
and
pusha
shll
push
mov
loop
iret
or
lret
pop
clc
fildll
loope
mov
xor
mov
andb
xchg
fcoms
test
ss
cmc
outsl
shr
imul
xchg
jnp
cmp
enter
sti
in
and
mov
xchg
fcmovnu
mov
and
pop
sub
rcll
shrl
stc
add
test
loopne
xchg
cmpsb
push
mov
arpl
das
into
add
imul
pop
jns
addb
ret
dec
lods
dec
jbe
mov
dec
sbb
subl
mov
paddusb
adc
cld
mov
sub
jle
inc
in
mov
pop
add
push
jl
pop
loopne
mov
push
fadd
test
pushl
jp
add
inc
mov
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
jmp
adc
adc
xchg
adc
lcall
cmp
loope
mov
aas
insl
shr
shll
stc
in
pop
or
addr16
inc
test
adc
cs
jle
xor
dec
dec
lahf
xchg
inc
outsb
clc
jmp
inc
das
pop
das
repnz
imul
lds
jg
into
xchg
pop
int
mov
fwait
fwait
popa
ret
nopl
enter
fsub
dec
xchg
test
jnp
test
jg
imul
mov
in
sbb
orb
cli
out
push
stos
mov
pop
cmc
xchg
mov
sbb
ljmp
arpl
pop
pop
out
xor
lea
adc
or
push
aam
and
push
repnz
sbb
pop
bound
xor
xor
fwait
xor
and
jg
mov
lods
nop
cld
sub
cli
rorl
arpl
leave
jle
or
mov
lds
cli
add
mov
dec
push
es
sub
setns
xor
int
or
mov
aam
std
cmp
mov
jg
sbb
ljmp
mov
pop
ja
out
sbb
mov
fbstp
mov
test
adc
xor
je
shlb
mov
cwtl
adc
xchg
cmp
push
aam
cli
in
cmovnp
mov
aad
push
pop
sub
and
gs
pop
and
in
rolb
jp
push
mov
cli
rorb
cs
ss
sarl
je
rorl
cs
test
ret
out
imulb
test
and
pop
fisubl
jno
clc
or
add
push
es
pop
dec
ds
xor
test
mov
out
cld
in
fs
push
ror
push
movsb
lea
fnstsw
pusha
adc
push
mov
dec
std
sub
cmp
sub
cmpl
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
call
jge
adc
adc
stos
and
xchg
xchg
sub
rorb
je
repnz
out
stos
mov
xchg
add
xchg
adc
flds
add
loope
leave
jns
inc
adc
push
arpl
lods
or
out
sahf
xor
mov
xor
lds
xor
or
push
pop
cwtl
add
enter
push
xchg
test
bound
cmp
jb
sahf
les
lcall
add
test
pop
enter
stos
mov
push
ja
add
mov
shrl
mov
test
xor
out
push
rol
stos
sbb
addl
cmpsl
vxorps
add
ja
or
xchg
movsb
push
mov
xor
insl
test
add
repz
outsb
add
addb
or
aam
stos
cmp
lods
cli
mov
cli
fsubrl
int3
in
mov
daa
test
xor
test
sub
push
pop
call
dec
lods
mov
popa
mov
and
cmc
ss
push
lcall
xchg
jnp
mov
lret
pop
add
outsl
aaa
jns
add
xor
fstps
ror
jl
push
cmc
js
push
je
mov
call
xor
dec
cltd
jg
lcall
dec
push
shll
push
xor
rclb
divl
push
in
and
mov
push
sbb
push
push
nop
out
cmp
rorl
lret
pusha
out
or
xor
lock
mov
test
push
int3
jnp
out
adc
xchg
mov
cmp
fst
xchg
or
push
popa
mov
ljmp
in
push
rcll
rcrl
push
jo,pn
ss
or
bound
and
shl
hlt
dec
dec
fists
mov
xor
xor
out
sub
mov
fisttpl
ficompl
dec
std
out
in
cmp
out
ret
sub
jns
adc
dec
push
pop
mov
add
lea
mov
and
mov
cmpl
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
cmp
mov
adc
icebp
aam
out
mov
adc
aaa
out
mov
pop
shlb
inc
rcrb
popf
mov
imull
push
aas
out
leave
jmp
push
lock
repnz
mov
dec
dec
cmpsl
test
sub
cmpsl
fistl
or
push
xchg
adc
jmp
out
pop
and
xor
je
test
add
mov
cld
ljmp
mov
ret
int
inc
lds
scas
adc
scas
inc
add
neg
add
mov
or
es
sahf
ror
or
inc
sbb
or
test
xor
xchg
mov
cwtl
adc
rorb
jle
addr16
cmp
jl
inc
xor
sub
push
rcl
popa
ja
pop
mov
in
sub
scas
pop
mov
ret
inc
inc
aaa
xor
lret
or
rclb
aaa
adc
push
dec
pop
ret
pop
pop
sbbb
push
cmp
push
cmp
sbb
jb
xlat
push
jle
enter
loope
repz
and
mov
adc
aas
or
mov
cs
jno
xchg
xchg
mov
insl
aad
cmp
inc
push
sbb
addr16
aaa
out
stc
add
cmpsb
pop
dec
mov
shl
jl
rorb
mov
sub
mov
test
adc
xchg
add
mov
mov
cwtl
insl
and
imul
ret
pop
and
aas
dec
popa
add
mov
fst
enter
inc
cli
and
ret
je
std
sub
cltd
mov
xchg
mov
test
inc
mov
hlt
sti
les
jg
popf
insb
idivb
gs
xor
mov
sub
mov
jo
push
int3
xor
add
sbb
insl
pop
loope
push
sub
into
insb
out
filds
jg
ror
inc
aas
jns
add
mov
pusha
xchg
sbb
pusha
out
mov
xor
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
pop
jle
out
adc
adc
cmp
mov
xor
or
aad
fmull
dec
out
sti
cmpsl
test
lcall
inc
aaa
mov
inc
cmpsb
ret
mov
mov
jmp
xorl
xchg
sahf
lret
imul
fs
push
mov
fisubrl
lcall
xchg
adc
in
jecxz
in
clc
test
jle
data16
or
or
xchg
ss
loope
fldt
inc
loope
ret
xor
push
int3
out
sarl
mov
sbb
or
mov
mov
fsub
xor
sub
jp
subl
xor
push
push
test
push
cmp
mov
or
inc
xchg
pop
shlb
hlt
call
std
sub
dec
sub
push
fildl
dec
outsb
or
aam
mov
or
out
mov
cld
jbe
sahf
hlt
xor
add
out
cmc
pop
mov
cli
xor
mov
into
sbb
cmp
dec
repz
mov
inc
sbb
loop
aad
sbb
into
test
push
not
mov
mov
repnz
pop
pop
lret
out
dec
fdivl
dec
adc
xor
mov
pop
mov
xchg
push
inc
jle
dec
movsl
fcoml
cmpsb
cmpsb
mov
in
push
xchg
adc
mov
add
arpl
jnp
out
dec
mov
mov
and
outsl
rorl
cmp
mov
mov
fadd
std
rorl
jg
xor
inc
xor
push
outsl
les
sub
imul
sbb
bound
arpl
cs
daa
adc
or
incl
inc
and
in
iret
push
push
stos
fsubrs
mov
adc
cmpsl
pop
jle
or
rclb
loopne
ja
pop
cmp
imulb
or
decl
pushf
inc
add
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
cmp
pop
lods
lcall
adc
and
xor
stos
adcb
xchg
and
xchg
std
push
mov
scas
jae
cmpsb
pop
shr
and
sbb
rclb
jmp
andb
mov
cltd
adc
xchg
enter
es
out
testl
bound
mov
or
add
test
in
loope
push
inc
and
adc
xor
adc
data16
pop
popf
jecxz
or
imul
cmp
pop
pop
cmp
dec
mov
pop
xor
imul
add
xchg
or
fcompl
sahf
xchg
sar
inc
add
pop
fcoms
push
xchg
je
adc
pop
addr16
popa
and
push
mov
pop
add
adc
arpl
aad
incl
jns
aas
mov
add
jecxz
cli
fisubs
ds
in
add
sub
fdivrs
adc
jb
mov
xor
les
inc
or
mov
sub
and
fcmove
icebp
bound
or
dec
popf
mov
stos
push
jp
sbb
repz
inc
js
in
gs
popf
sub
sub
cmpsl
mov
or
push
push
push
out
mov
outsl
pop
ret
xorl
fcomps
xor
insb
adc
iret
push
adc
hlt
cmp
jae
cmpsl
cmp
xor
cmp
std
cmp
mov
dec
test
xchg
rolb
and
push
loop
aas
jle
cmpsl
push
cmp
sbb
push
push
imull
mov
sub
dec
arpl
mov
jno
sbbl
fstps
push
mov
andl
sbb
sbb
data16
mov
mov
or
in
sub
add
arpl
icebp
sahf
lcall
rorl
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
xor
test
adc
movlps
pusha
xchg
cltd
and
jmp
stos
das
mov
xor
mov
mov
ret
mov
mov
lret
adc
mov
jae
pop
out
mov
test
mov
sbb
xor
out
aaa
pop
add
iret
dec
mov
das
lods
popa
outsl
js
xor
enter
xor
and
add
fucomip
call
mov
sub
lcall
adc
and
aad
jp
movsb
dec
xchg
xchg
or
jne
and
xchg
in
dec
mov
cmp
das
pop
imul
xor
push
ss
and
or
lret
or
stc
or
xchg
cli
in
sbb
outsb
pop
push
mov
and
cmp
jns
ret
sbb
or
aaa
jbe
xchg
mov
cld
inc
lcall
mov
jmp
dec
scas
and
leave
push
and
cs
mov
pop
pop
into
fildll
cmpsl
scas
loopne
test
jbe
and
push
push
push
insl
dec
subb
push
or
or
cmc
sbb
nop
divl
ret
adc
mov
jb
push
lea
add
mov
cltd
ja
sbb
pop
cli
or
and
jle
js
sbbl
pop
push
or
xor
in
push
push
ffreep
test
rcll
jmp
cli
arpl
insl
jbe
sub
push
mov
inc
inc
inc
mov
fpatan
decl
in
pop
xorb
insb
and
lcall
inc
mov
std
mov
sbb
ja
xchg
pop
les
test
jg
add
iret
and
xchg
mov
out
imul
xor
push
ljmp
aas
mov
adc
sub
repnz
movsl
mov
or
dec
jo
fldt
jle
mov
incl
lods
adc
decl
decl
decl
incl
lret
fmuls
aam
decl
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
in
stos
add
adc
mov
inc
int3
mov
jle
xorb
cs
inc
nop
xchg
in
dec
inc
test
imul
jmp
das
push
cld
or
insl
or
or
ret
cmp
sbb
inc
mov
push
pushf
sbb
and
cmp
pop
jns
mov
rolb
lods
out
cmpsb
outsb
test
and
popa
lret
fs
data16
mov
mov
add
cmp
push
fistpl
hlt
pop
std
jns
ret
das
mov
mov
stos
rclb
es
lcall
cmpsl
push
test
adc
in
rcrl
inc
enter
and
in
push
scas
cmpsb
push
mov
ret
jne
push
enter
xor
add
icebp
push
cmp
push
pop
mov
xchg
xor
pushf
test
inc
outsl
rcrb
hlt
shl
xchg
mov
mov
jecxz
jmp
pop
leave
addb
dec
jg
xchg
sub
cmp
sti
dec
mov
jle
mov
dec
stc
adcb
pop
and
xor
sar
in
fidivrl
jbe
test
mov
dec
test
jne
ror
dec
mov
out
jge
xorl
mov
negl
ret
cmp
test
insl
xor
iret
push
inc
outsl
cmpsb
pop
push
adc
dec
out
fsubrl
roll
mov
lret
mov
push
mov
mov
adc
and
es
xchg
test
sbb
pop
lods
mov
call
xchg
out
call
imul
mov
fs
adc
mov
mov
gs
dec
clc
lcall
hlt
and
mov
fwait
int3
in
add
mov
stc
add
xchg
jns
adc
pop
out
jecxz
mov
repz
xor
mov
or
dec
rclb
enter
fwait
mov
mov
fidivrl
fmuls
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
sub
adc
adc
sbb
inc
and
cmp
cmp
call
jle
fiaddl
pop
mov
mov
pop
test
or
cmp
ret
aam
in
jge
pushf
cmp
and
je
jp
jb
pop
adc
clc
sub
dec
loop
dec
sbb
insl
push
xor
in
je
mov
mov
and
scas
mov
sbb
mov
out
inc
sbb
or
cmp
fstpl
push
cs
inc
pop
fs
test
xlat
testb
cmpb
stos
push
cmp
enter
xor
dec
aaa
stc
clc
jb
pmaxsw
adcl
xchg
stos
xchg
pusha
movsb
mov
xor
js
cli
lahf
xchg
in
fimuls
or
test
mov
mov
in
ret
lret
fdivrl
imul
inc
gs
cmp
or
jns
or
sbb
rcrl
andl
or
testb
mov
xorb
cwtl
ds
lock
popa
rcl
lret
push
push
movsl
mov
rcll
in
pop
dec
xchg
cmp
inc
dec
fwait
ss
ret
std
fwait
je
add
enter
push
push
push
rcr
fildl
jnp
insl
inc
add
test
jecxz
mov
mov
mov
xor
imul
jge
pop
sti
lods
ljmp
les
stos
adc
lock
dec
dec
mov
int3
cmp
xchg
xor
xlat
push
lods
ja
push
pop
push
sbb
or
leave
xor
ja
xchg
addl
popf
arpl
test
adcl
aam
das
pop
xlat
inc
mov
fstps
es
xchg
jno
rcl
and
cs
adc
jne
int3
xchg
push
xchg
jg
fcmovne
in
jnp
xor
in
out
imul
pop
sub
pop
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
stos
imul
sbb
sarb
dec
mov
cmp
out
imul
call
xchg
aas
inc
push
mov
out
cmp
mov
subb
rclb
mov
testl
movsl
mov
pop
inc
add
sbb
filds
popa
jl
mov
or
mov
mov
or
repz
push
xor
mov
ret
fwait
mov
pushf
jae
clc
inc
ret
call
mov
in
data16
jae
adc
lcall
sbb
addr16
and
adc
icebp
outsb
aaa
mov
xchg
scas
shrl
nop
loope
idivb
xchg
jb
sbb
xchg
mull
xchg
inc
shrl
xchg
sbb
imul
jb
inc
out
enter
cwtl
shl
dec
mov
jne
lret
incl
pop
dec
or
fnstcw
jnp
imul
push
inc
jge
cli
mov
ja
mov
push
ss
pop
arpl
jb
lods
mov
adc
inc
pop
mov
rorb
dec
ds
jo
xchg
sarb
inc
cmp
outsl
pop
push
xorl
mov
or
push
add
movsb
xchg
sbb
mov
fnstcw
lds
insb
adc
mov
outsb
orb
push
popf
cmp
add
push
aad
inc
pushf
mov
jg
pop
je
dec
pop
aam
fcomp
nop
das
pop
mov
gs
repz
push
std
push
ja
aad
lahf
insb
stos
addr16
push
daa
es
inc
and
hlt
ss
and
sub
mov
cmp
icebp
sub
ss
sub
push
das
inc
frstor
xor
xchg
stc
pop
mov
pop
sbbb
xchg
mov
dec
cmc
es
mov
stos
stos
out
cmpsb
icebp
mov
pop
scas
xor
lret
mov
lods
xchg
scas
push
stos
imul
dec
mov
test
stos
cs
push
sbb
sub
decl
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
mov
adc
adc
mov
vcmppd
gs
push
addr16
aad
lcall
xchg
push
not
enter
xor
mov
fnsave
popa
sub
inc
lock
xor
fsubs
out
jne
pop
iret
dec
push
xchg
cmp
out
pop
mov
push
xchg
mov
ror
es
xchg
lret
inc
adc
and
out
jmp
loope
bound
call
fcmove
scas
mov
cmp
mov
push
dec
inc
mov
lea
push
push
insl
add
loope
testb
movsb
stos
repz
data16
ror
xor
ret
push
push
movl
outsb
test
cmpsl
lret
and
and
scas
push
xchg
jbe
dec
mov
mov
sbb
lret
in
and
xorb
sbb
nop
dec
add
jl
cmp
push
pop
arpl
insb
and
je
adc
sbb
mov
mov
cmp
iret
fs
push
psllw
test
xchg
sub
xchg
leave
xchg
xchg
mov
fs
sub
and
test
sub
sbb
mov
stc
mov
pop
nop
fldt
pop
jae
mov
push
es
lods
out
int3
adc
js
adc
jecxz
add
mov
mov
stc
dec
lea
sti
and
cmp
add
lret
mov
dec
jno
ret
xchg
testl
mov
test
mull
add
into
and
inc
iret
mov
sti
adc
jp
jmp
cli
and
pop
int
jne
mov
mov
cmpsb
cld
mov
jmp
ds
ds
pop
cli
aad
xlat
sbb
cmpsb
jo
popf
cld
rcll
mov
mov
jbe
gs
pop
jg
lods
arpl
sub
inc
pop
cmp
sarl
add
sbb
or
imul
push
add
adc
daa
shlb
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
push
call
adc
movlps
shll
mov
mov
adc
pop
outsl
les
daa
subb
mov
test
inc
lods
xchg
xchg
adcb
sbb
fwait
cmc
cmpsb
xchg
xchg
scas
out
inc
cmpsl
xchg
mov
adc
pop
int3
dec
test
dec
xchg
iret
iret
inc
test
int3
stos
out
insl
cmp
xor
dec
push
mov
mov
mov
mov
add
repnz
push
popa
cmp
sub
lds
jnp
fwait
or
mov
adc
jae
pushf
cltd
bnd
add
add
cltd
inc
ficoms
call
cld
aaa
rcr
or
mov
outsb
and
stos
sbb
movsl
mov
jns
xor
stos
adc
insl
frstor
jg
add
mov
pop
cltd
scas
mov
push
call
pop
mov
addr16
add
loope
pusha
push
add
add
lret
push
mov
inc
leave
or
push
xchg
add
inc
and
xchg
gs
mov
test
arpl
int3
clc
popf
inc
loop
out
lret
jg
adc
shrb
cli
insl
incb
stc
int
rclb
jae
dec
test
imulb
in
cmp
aam
je
mov
clc
inc
add
outsb
push
inc
mov
fs
test
xor
pop
add
out
jmp
enter
stos
jp
enter
push
ljmp
add
sub
divb
sbb
aas
mov
cmpsl
push
pop
dec
clc
xlat
fidivs
push
adc
add
insl
es
out
data16
sarb
xchg
jge
pop
outsl
std
and
ret
lods
cli
stos
mov
jns
jge
mov
mov
and
lahf
inc
cmp
lret
cmp
rorl
push
push
pop
roll
xor
mov
outsb
add
nop
test
jo
sbb
add
fsubr
add
sbb
mov
out
push
mov
mov
and
or
test
pushl
lret
adc
fmuls
and
pushl
imul
fmuls
sbb
decl
decl
decl
mov
and
inc
add
add
pop
lods
mov
and
pop
mov
aas
aam
xchg
adc
inc
scas
loope,pn
testl
lock
fimuls
lret
xlat
out
addr16
jo
mov
and
cmp
sbb
dec
mov
pop
fs
mov
addr16
std
fcom
lahf
push
lods
ja
lods
sub
in
popa
data16
stc
lahf
push
add
insl
daa
aad
jmp
dec
ret
jecxz
pop
mov
repz
mov
aam
lea
cmp
push
cmp
icebp
pop
adc
dec
gs
sti
ss
psubsw
cld
mov
lds
mov
aam
inc
call
stos
mov
mov
jge
outsb
or
fldcw
int
jne
sub
je
negl
lods
pop
mov
popf
inc
testb
daa
pop
div
jno
pop
scas
xor
cmc
pushf
imul
push
in
data16
lods
push
das
cmp
jge
cmp
shlb
shlb
cwtl
lock
and
push
sub
rcrl
pushf
fistpl
mov
cmp
or
dec
lds
pop
inc
pop
pop
stos
jo
xor
movsl
dec
dec
sbb
lods
pop
mov
popf
adc
js
jno
into
jmp
jle
jge
inc
lea
xchg
xchg
ror
popa
jns
sbb
jnp
and
insb
jl
cmp
fistps
jae
mov
rcrl
mov
cmc
stos
pop
icebp
push
mov
stos
pop
xchg
mov
insl
push
addb
les
push
test
bound
mov
xchg
sub
fcomps
repz
aam
sub
push
bndstx
xor
test
leave
jle
push
popa
inc
pcmpgtd
mov
cmp
data16
jo
fisttpll
idivb
ja
xlat
movsl
ret
test
ret
sub
sarl
in
push
push
lock
mov
jp
loopne
or
xchg
rcl
test
push
xchg
outsb
dec
and
cmpsb
stos
mov
mov
adc
popf
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
pop
clc
jle,pn
mov
adc
aam
pop
cltd
pop
addr16
loopne
icebp
xor
jo
aaa
lcall
lret
cltd
pop
xor
fisubl
icebp
or
sbb
adc
xchg
fdivp
lret
std
test
enter
repz
mov
or
frstor
mov
push
mov
jo
add
jno
jnp
inc
cmp
mov
sbb
pop
lea
daa
fildll
jg
or
mov
cmp
and
xor
adc
test
jmp
sahf
rorl
pop
cmp
mov
aam
or
loop
xorb
mov
pop
hlt
js
das
out
xor
push
in
sbb
push
dec
std
adc
push
idivb
sbb
cltd
popf
aas
lock
or
enter
je
mov
inc
or
xchg
pop
ja
mov
iret
xor
pop
js
pop
sbb
lds
or
in
mov
loope
add
repnz
sbb
stos
fcom
inc
pop
and
lock
sub
ss
mov
add
jne
mov
fsubrs
push
loope
add
popf
push
and
xchg
pop
out
popf
repz
nop
arpl
scas
test
sti
and
mov
push
jmp
mov
mov
mov
jns
mov
dec
ret
and
push
sbb
rcr
pop
js
test
push
mov
aaa
xorb
out
mov
or
and
shrl
and
sbb
jmp
mov
dec
pop
xor
adc
mov
out
fst
aaa
and
test
adc
dec
and
ds
sbb
lods
mov
fadds
cltd
sub
cmpsl
fcompl
cli
jo
add
aas
push
or
out
sub
call
jae
adc
iret
mov
je
imul
or
decl
test
decl
pushl
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
mov
xor
mov
xchg
ret
cmpsl
inc
cmp
fmulp
leave
mov
pop
inc
xchg
insb
je
int
inc
sub
scas
pop
mov
sub
or
arpl
data16
sub
adc
cs
fstpl
lret
jo
movsl
jbe
scas
mov
mov
mov
pop
sub
popf
das
add
mov
sub
flds
mov
inc
mov
jne
add
ret
rclb
lcall
or
jbe
data16
inc
mov
into
lods
xchg
ljmp
fdivrl
mov
inc
and
jae
jne
repz
jne
or
adc
xchg
cmp
push
xor
int3
mov
add
xchg
mov
inc
out
aam
jnp
in
xchg
or
lods
int3
cmpsl
xchg
xchg
pop
pop
fstpt
test
pop
xor
mov
mov
pop
add
dec
rorb
dec
imul
jmp
call
adc
fmull
cmp
sahf
xchg
pop
divb
cwtl
adc
mov
outsl
lret
repz
jmp
push
out
into
push
in
xchg
popf
gs
sahf
mov
test
jecxz
es
push
js
xor
lods
les
push
xchg
outsb
mov
aas
adc
adcb
sbb
sbb
andl
jge
dec
push
mov
js
xchg
arpl
mov
nop
mov
xor
cli
mov
pop
popa
mov
mov
sub
hlt
xor
sub
pop
das
sbb
cmp
sub
pop
fwait
repnz
pop
lret
mov
je
or
mov
sub
jecxz
cli
test
jg
je
pushf
aad
insb
jne
xor
les
mov
xchg
clc
movsb
scas
loop
fimuls
lcall
mov
es
outsb
mov
lcall
jp
or
testb
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
jno
mov
adc
movlps
jno
fsub
mov
imul
xor
xor
pop
outsb
mov
das
in
lahf
push
fmull
pop
rclb
je
rorl
pop
inc
in
cmp
fadds
cmc
shll
addb
lret
mov
nop
leave
xchg
cmpsb
out
xlat
cs
cld
xchg
lock
mov
push
cld
fbld
in
stc
lods
test
ret
in
outsl
mov
and
aad
push
sbb
sbb
lret
stos
sbb
cli
in
and
xchg
sub
xor
adc
insl
or
ss
jmp
xor
adc
sbb
int
cmp
pop
das
push
dec
mov
jmp
clc
lahf
pop
push
loop
mov
sub
aam
orb
sbb
popf
adc
push
enter
pop
jle
shrl
inc
sti
in
fnstcw
push
aam
pop
std
imul
jne
fnstenv
lret
lods
gs
lret
mov
cmp
into
icebp
pop
mov
jmp
lret
in
xchg
nop
xor
inc
aam
lahf
mov
and
es
and
das
ret
sbb
pop
nop
sbbb
out
inc
ror
out
or
jae
sbb
shll
test
out
into
push
or
cmpsl
rcrb
push
ds
and
fsubr
les
sub
stos
fdivrl
xchg
popf
pop
shll
imul
xchg
cli
jle
outsb
pop
adc
mov
fcmove
js
mov
jno
bound
adc
push
sbb
cmpsl
popf
stc
lret
subb
and
repz
fsubs
rorl
dec
imul
mov
mov
test
add
jb
dec
cmp
inc
dec
outsb
dec
mov
movsb
adcb
inc
pop
cmp
inc
repz
mov
cmp
push
stc
loope
shlb
in
adc
lret
std
es
dec
add
mov
xchg
mov
mov
mov
xor
xor
mov
call
or
jmp
mov
or
mov
push
push
cmp
adc
adc
ret
ljmp
sbb
adc
out
pop
cmp
insl
divl
adc
dec
out
push
stc
notb
loop
xor
fwait
imul
lods
icebp
pop
or
sahf
lods
out
test
xor
xor
push
repnz
jns
call
lcall
insb
or
call
rolb
xor
mov
inc
sbb
xor
mov
push
adc
sub
inc
in
push
lret
loope
cmp
sub
popa
popf
jb
hlt
ds
sub
and
sbb
or
testl
cwtl
aad
push
repz
aad
ds
push
jbe
popf
call
dec
xor
out
pop
pop
movsb
or
xchg
lds
xchg
sub
dec
das
xor
cli
std
cmpsb
jle
popa
mov
lcall
inc
pop
jo
or
dec
xchg
sbb
dec
push
pop
sbb
add
or
jp
or
cmpsb
fldcw
push
leave
rcr
lea
out
mov
add
xchg
clc
movsb
mov
shr
dec
mov
jns
repnz
pop
cltd
and
test
xor
adc
out
xor
aam
imul
and
and
jb
sbb
movl
aaa
push
mov
stos
loopew
sbb
dec
jo
jno
pop
stos
mov
mov
fstp
ret
fmulp
aaa
pushf
sub
fidivrl
stos
xor
stos
and
or
jo
jb
xor
mov
sub
jbe
gs
ljmp
pop
shll
test
push
mov
jo
clc
out
fnstcw
mov
xor
add
frstor
insb
sub
mov
pusha
inc
and
dec
out
jge
bound
xorb
hlt
mov
out
gs
fldl
jb
popf
punpckhwd
mov
arpl
or
mov
decl
decl
cmp
jmp
stos
js
pop
and
mov
subl
js
adc
movlps
cltd
jge
jmp
fcmovbe
inc
jle
scas
xchg
adc
es
rol
mov
std
adc
pop
push
inc
call
mov
adc
mov
jg
clc
test
mov
das
add
movsb
aaa
sub
add
jp
shr
xchg
cmp
fs
jge
pop
cmp
mov
mov
jb
pop
dec
daa
push
subb
xchg
mov
sbb
add
mov
mov
sub
dec
pop
mov
fmull
ss
mov
mov
out
or
call
xor
dec
outsb
pop
sub
fimull
and
fs
sbb
test
clc
mov
lock
pop
jl
add
in
push
adc
jmp
sub
cmpsl
ret
dec
mov
push
int
clc
sarb
setae
cltd
or
lret
mov
addr16
paddusb
ds
je
sub
jg
in
loope
stos
movsb
mov
loope
jge
push
nop
mov
push
rorl
dec
scas
mov
and
pop
inc
mov
jp
pusha
sbb
push
call
or
and
xor
hlt
in
dec
out
shll
gs
out
xorl
mov
xor
nop
inc
jno
pop
les
and
dec
movsb
sbb
test
mov
xchg
ds
sub
xchg
filds
cmpsl
pop
cmc
cmp
aad
pushf
movsb
jp
inc
cli
ss
push
ret
daa
inc
mov
xchg
int
fucom
or
movsl
out
add
push
idivl
test
push
push
dec
or
mov
repz
es
sub
or
fnop
outsl
cmc
xor
mov
sub
aam
add
mov
mov
movzwl
xor
movzwl
sar
jmp
ds
in
mov
xchg
js
inc
push
mov
movlps
mov
mov
jmp
sbb
popf
push
mov
xorb
fbstp
mov
lods
rorb
mov
sub
jns
jbe
mov
and
pop
movsl
add
pop
push
mov
push
icebp
jmp
ret
insb
in
hlt
mov
movsb
jne
or
shlb
testl
jp
repnz
xchg
loope
fsubr
mov
push
cmpb
popf
jl
sbb
adc
and
pop
int
clc
add
and
mov
cmpb
dec
int3
mov
addr16
xchg
int
xlat
pop
test
pop
jbe,pn
mov
imul
idivb
pop
shrb
arpl
and
aad
push
mov
cmpsl
mov
sub
inc
call
movsl
push
xchg
test
dec
inc
pop
lret
or
mov
inc
mov
xchg
and
push
and
ss
mov
stos
popf
sub
test
mov
lods
xor
pop
sub
or
push
jns
push
add
data16
mov
add
out
bound
cltd
xchg
jg
es
icebp
xor
adc
ret
sbb
jle
fs
adc
pop
sbb
or
fidivl
mov
sub
inc
lock
sbbb
pop
aad
and
movsb
xchg
subl
loop
ret
mov
fsubl
xor
mov
xor
mov
jne
inc
test
mov
adc
push
mov
fildl
sbb
mov
mov
enter
ljmp
fs
out
push
pop
jl
mov
jp
fldenv
cmpsl
push
mov
cwtl
pop
js
outsb
test
test
adc
add
jbe
mov
iret
clc
inc
pop
jnp
adc
inc
ds
sti
jecxz
loopne
imul
mov
xlat
push
xchg
cmp
decl
decl
mov
mov
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
sub
jb
adc
adc
nop
push
call
sub
jne
cmp
inc
xchg
pushf
or
push
lds
adc
test
mov
cld
add
sub
sbb
in
mov
insb
lret
cmp
in
rorl
mov
push
push
sub
stc
jns
jecxz
je
into
jle
mull
mov
ljmp
sar
jmp
cltd
stos
push
push
inc
aaa
lea
mov
test
mov
xor
imul
and
push
cltd
sub
rcl
sbb
rclb
jnp
mov
jbe
fcmovnbe
adc
jge
popa
subb
test
push
lock
ret
insb
mov
push
lods
sti
or
mov
mov
push
inc
lcall
pushf
pop
or
add
dec
xchg
add
mov
jae
add
sahf
stc
mov
iret
or
fstpl
outsl
sbb
mov
stos
push
add
xor
and
loope
lahf
mov
ss
test
dec
and
inc
hlt
lods
xor
iret
push
xor
jecxz
aam
add
icebp
fldt
inc
pop
cmp
fstps
popf
sbbb
cmpb
sti
les
pop
addb
fdivl
call
dec
nop
lea
pusha
dec
test
inc
jne
or
pop
insb
jae
cld
stc
sub
dec
subl
fldt
ret
sub
mov
adc
loope
pop
push
pop
lret
mov
xor
sub
or
cmp
pop
data16
jmp
mov
adc
aad
xlat
xorb
push
sete
mov
xor
lods
iret
in
movsb
cmpsb
popf
push
lret
lds
popa
sahf
cmpsb
mov
push
sub
cmpl
cs
jg
sti
sahf
jbe
out
fistpl
outsl
fistpll
in
ret
inc
enter
sub
insb
mov
add
imul
and
decl
pushl
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
roll
mov
enter
out
lods
cmp
cmp
outsl
jge
rol
movsl
push
mov
jbe
aaa
fisubs
int
pusha
mov
mov
in
pop
mov
je
or
adc
sbb
movsb
cmpsl
stc
stc
subl
aaa
mov
push
int3
mov
outsl
mov
and
bswap
sub
mov
nop
jge
cmp
mov
mov
mov
and
mov
adc
sahf
dec
sbb
mov
and
iret
adc
jle
xchg
jp
jo
mov
jne
mov
add
or
fldl
lds
sbb
push
pop
popf
adc
mov
cltd
or
dec
mov
test
mov
shrb
xlat
fwait
mov
in
leave
add
lds
push
movsl
je
dec
fstps
clc
subb
icebp
popa
push
sbb
jge
cmp
xchg
das
add
cmpsb
cli
jbe
adc
mov
enter
outsb
adc
into
std
jmp
rorb
jmp
mov
lahf
mov
pop
push
loop
jns
mov
fidivs
xchg
adc
dec
in
les
mov
ret
jl
fst
mov
mov
pushf
push
inc
aam
rep
sub
stos
pop
shll
ljmp
je
inc
gs
fmull
mov
inc
and
xor
ljmp
in
push
xchg
dec
pop
sub
mov
sbb
mov
popf
fisubrl
fs
cmp
test
out
call
orl
daa
lock
bound
sbb
sahf
in
aas
pusha
adc
ds
int3
daa
aas
lock
pushf
inc
pop
push
addb
out
push
stos
ficoms
movsb
sub
adc
pop
or
les
inc
cli
out
mov
out
fbld
es
mov
jge
stos
test
xor
fistl
test
pop
loope
mov
sub
cmc
push
add
fsts
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
adc
ljmp
enter
xlat
test
sbb
xchg
pop
fwait
dec
imul
jle
cmpsb
pop
xchg
and
push
mov
popa
icebp
in
icebp
adc
mov
insb
inc
ret
add
inc
pop
fidivrl
test
ljmp
adc
push
ss
icebp
mov
rcl
aaa
mov
sub
jo
or
sbb
sbb
gs
orb
xlat
rcr
test
test
inc
repnz
xchg
or
sub
push
lcall
xlat
mov
insb
pop
adc
adc
les
and
jecxz
or
jns
and
fbstp
test
xor
rorb
push
jns
xor
es
mov
pop
inc
lods
push
repnz
mov
jle
adc
add
mov
pop
popa
pop
packsswb
inc
outsl
push
or
pop
dec
and
sbb
dec
add
dec
push
sbb
add
pop
std
add
xlat
ficoms
lgs
fcmovb
hlt
xor
sub
outsl
repz
cs
jp
scas
daa
jne
ljmp
and
sahf
cmp
scas
cmp
mov
pop
fsubrs
lods
jmp
fidivrl
shl
cmp
lock
sqrtps
mov
pop
mov
aas
add
push
cli
push
sarb
lock
aad
mov
sbb
mov
push
rorb
mov
fidivrl
xchg
jecxz
inc
jnp
enter
mov
pop
loopne
es
std
dec
xchg
mov
push
sahf
jbe
and
cmp
xor
mov
inc
ss
fs
mov
ljmp
popf
sub
or
mov
mov
inc
pop
pop
mov
mov
mov
movsl
prefetch
mov
sbb
loope
push
out
outsb
subb
jbe
push
mov
popf
mov
vpmacssww
decl
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
out
stos
lea
enter
xchg
aaa
fwait
sbb
scas
pop
das
sub
loopne
fwait
xchg
lcall
stc
push
scas
adc
fcomps
out
and
dec
cmp
sub
push
int3
inc
mov
inc
or
and
or
jge
or
xchg
rcll
and
jae
mov
in
ret
loopne
fistps
sub
es
mov
inc
scas
cmp
sub
sub
popw
or
jge
cmp
cmp
and
jns
add
das
inc
push
repz
packssdw
test
mov
jle
pop
call
out
add
push
or
add
mov
testb
mov
stos
adc
inc
stc
push
mov
rcrl
daa
sti
add
mov
or
inc
sahf
outsb
dec
jno
jg
fidivrl
repz
out
dec
loope
mov
cmpsb
mov
inc
push
movlps
push
push
cltd
push
push
popf
js
clc
and
jl
jo
xor
in
adc
mov
mov
pop
cmc
mov
and
and
pop
out
pop
into
inc
pusha
leave
and
jo
sub
test
xchg
pop
push
adc
je
mov
add
aam
fs
inc
stos
sub
sti
xchg
cmp
and
push
push
mov
lods
inc
nop
les
iret
int3
ret
out
aas
mov
in
pop
insb
mov
ss
cli
and
push
fdiv
leave
mov
and
stc
push
outsb
dec
fwait
stos
mulb
fwait
push
adc
lahf
pop
out
flds
mov
aaa
subl
lock
gs
mov
mov
ss
push
jnp
or
add
xchg
mov
xchg
lods
xchg
jl
out
out
cmp
mov
add
mov
dec
and
std
sbb
loop
popf
in
push
cmp
ljmp
sbb
xchg
push
add
lock
pop
xor
fidivs
decl
test
decl
pushl
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
outsl
out
cmp
fstpt
jo
mov
mov
pushf
jecxz
aas
push
sub
inc
mov
cli
xchg
pop
mov
cmp
call
cmc
lods
idivl
adc
and
bound
ficoml
loop
in
xchg
loopne
inc
push
into
lock
std
aas
sub
addr16
jg
xorl
dec
cmp
mov
rolb
mov
sbb
repz
pop
cmp
mov
outsb
inc
gs
add
popf
pusha
push
adc
leave
xchg
dec
or
pop
dec
xor
mov
leave
out
jg
sbb
sbb
inc
jl
push
xor
mov
cli
mov
push
lds
add
outsb
enter
sub
ljmp
ss
jns
outsb
add
cwtl
and
cmc
add
push
xchg
pop
cmpsb
test
add
pop
jae
enter
into
ss
cmp
das
cli
in
pop
int
pop
aad
mov
test
test
outsl
jg
repz
jns
mov
shlb
xchg
jbe
add
dec
int3
jnp
jmp
xchg
jo
ds
xchg
rcrb
je
mov
fnstsw
bound
push
adc
push
inc
push
adc
out
js
mov
enter
in
clc
out
in
dec
shlb
adc
fcompl
in
rolb
and
or
push
ret
inc
aam
scas
pop
adc
sarl
repz
mov
outsl
es
out
sub
pop
sub
insl
and
sub
xor
ret
jecxz
jg
rcll
push
js
xlat
leave
fucomip
stc
add
and
push
push
rcrl
popf
lahf
hlt
jbe
push
sub
pop
ja
shll
popl
rolb
lods
jne
iret
mov
mov
mov
dec
ret
ficompl
es
out
insb
fcompl
lret
push
aam
lahf
outsb
and
mov
incl
add
add
mov
inc
test
add
add
inc
add
add
jbe
add
jnp
bound
ss
xchg
push
adc
adc
mov
jbe
pop
dec
xchg
sbb
pop
stc
sub
les
shl
pop
leave
push
push
rorl
fwait
enter
std
imul
cmp
jae
pop
test
stc
std
mov
cmp
sbb
push
test
pop
ds
loope
cmpsb
jle
lds
dec
arpl
cs
lea
mov
test
das
pop
je
jne
fcmovnbe
leave
int3
sbb
fadds
inc
push
or
pop
sub
mov
mov
jge
out
push
adc
fisttpl
sub
pop
mov
out
sub
push
pop
or
rcll
jns
subl
fiadds
fldcw
sub
repz
push
dec
jno
jae
cld
insl
xor
js
add
push
lods
cs
enter
out
adc
pusha
fs
sbb
adc
add
and
lcall
in
xchg
shlb
mov
xchg
sub
push
push
mov
sub
imul
leave
cmp
ss
pop
call
std
pop
and
mov
ret
add
idiv
jbe
into
xchg
popa
adc
jg
std
enter
lds
orb
data16
sbb
pop
cmp
pushf
sbb
sub
arpl
mov
cmpsl
lret
cmovs
repnz
dec
phsubsw
xor
scas
cmp
sub
inc
sbb
dec
pushl
clc
and
mov
pop
shll
inc
sbb
adc
jbe
cltd
testl
push
ljmp
push
std
cmp
xchg
mov
je
xchg
add
xchg
lcall
push
add
ficomps
and
jl
bound
push
mov
sbb
jmp
fstps
dec
out
inc
outsl
das
cli
in
lods
add
add
out
mov
inc
jns
cmp
cli
cmpsb
lret
andl
jg
idiv
aad
and
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
mov
adc
adc
loope
sbb
jg
mov
es
aam
loope
les
aas
jp
loope
popf
jae
and
sbb
xor
mov
pop
lods
aas
push
ja
and
add
and
test
push
dec
call
dec
arpl
adc
sub
lock
fmul
movsb
mov
in
popf
sbb
notrack
xchg
add
in
aaa
cwtl
ja
dec
test
cmp
cmpsb
lahf
mov
sbbl
cwtl
in
or
adc
dec
flds
out
push
ret
xchg
stos
in
push
jnp
popa
mov
add
and
lret
iret
inc
mov
divb
push
repnz
push
inc
xor
jmp
jg
adc
adc
lods
fistl
and
fbstp
dec
pop
negl
sub
pop
fs
aad
iret
ljmp
add
dec
xchg
jmp
and
xor
ja
gs
push
mov
mov
sub
mov
popa
mov
sub
scas
std
rcrl
mov
lea
bound
sar
jl
lahf
inc
push
push
int3
dec
mov
sbb
pop
mov
aad
xor
int
jns
pop
je
lcall
pop
sub
pop
push
add
test
dec
dec
pop
mov
mov
jo
loopne
jg
fists
dec
icebp
cwtl
xlat
jmp
dec
inc
loopne
xchg
cmp
inc
pop
cs
shlb
dec
xor
xor
stos
xchg
jae
cmp
xchg
jae
enter
ret
xor
fdivr
mov
or
ss
mov
adc
fisubs
les
inc
jp
dec
insl
lds
movq
inc
das
nop
mov
movsb
bound
mull
mov
cmp
nop
xchg
dec
mov
rclb
call
push
adc
dec
test
jnp
hlt
mov
out
ret
push
dec
sub
mov
sbb
mov
aaa
cs
xor
sub
jo
in
jecxz
xchg
bound
push
sbb
outsl
iret
or
imul
and
aaa
cli
cmpsl
sbb
cmp
dec
movsb
addr16
mov
sub
mov
testl
push
lret
adc
xchg
mov
in
jno
push
pop
scas
mov
lret
test
xor
in
dec
cltd
xchg
insb
and
pop
sar
adc
outsb
mov
test
jmp
xchg
fs
push
mov
and
hlt
out
dec
shlb
add
inc
mov
stos
test
xor
mov
add
xor
and
les
or
iret
repz
lahf
hlt
push
mov
adc
push
mov
lods
xlat
loop
jnp
pop
mov
test
xorl
pop
mov
notb
inc
and
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
mov
adc
adc
cwtl
xchg
arpl
insl
add
jmp
inc
mov
icebp
pop
push
mov
mov
shrw
mov
idivl
data16
bound
daa
loopne
mov
dec
cmpsl
mov
push
imul
and
push
mov
sarl
aas
dec
loopne
in
in
push
inc
sbb
cmp
push
cmp
or
cmc
jns
lcall
int3
mov
js
pop
cmp
fwait
ljmp
das
or
adc
xor
out
lret
popa
sarb
pusha
sub
cmpsl
in
test
sub
enter
mov
cwtl
std
inc
and
add
dec
jno
stos
fiaddl
dec
pop
sarb
jge
enter
cmpl
fwait
xorl
cli
inc
dec
loopne
shrb
std
push
cltd
and
test
add
scas
arpl
adc
mov
js
mov
nop
and
aaa
cmpsb
xchg
dec
xchg
or
outsb
ret
or
xchg
fistl
or
int
jno
aam
jle
xlat
push
xor
call
lahf
xor
fmull
cmpl
stos
add
cmp
cmpsb
hlt
push
or
std
dec
pop
mov
adc
aad
rolb
add
aad
sbb
dec
mov
sub
paddsw
fstpt
fnstsw
and
xor
mov
cmp
adc
aam
mov
jbe
adc
notb
mov
inc
or
push
pop
jle
inc
jmp
mov
mov
dec
std
repz
dec
pop
in
xor
sub
mov
daa
dec
movsl
fwait
icebp
pop
jle
push
or
leave
bound
shl
cmp
cld
jg
sti
movsb
fidivrs
dec
stos
cmpsb
pop
mov
jb
mov
jns
inc
pusha
mov
sarl
pop
in
cmp
dec
cmpl
fwait
sub
mov
mov
arpl
mov
adc
in
xchg
mov
test
bound
sahf
in
clc
test
xlat
sti
xchg
neg
mov
sub
push
xchg
cs
les
mov
mov
cltd
ret
cmp
cmpsb
imull
jo
daa
push
bound
push
push
xchg
xor
sub
outsb
xorb
clc
mov
mov
mov
sub
push
addr16
cmp
imulb
mov
adc
shrl
mov
stc
mov
dec
inc
pop
jl
push
cmp
jbe
add
jae
inc
pop
aam
cmp
jb
mov
mov
lds
sbb
rorb
cmp
push
mov
jne
sub
push
and
push
sub
loope
xor
fucomp
adcb
sbb
xchg
scas
ds
mulb
pop
jne
xchg
dec
inc
inc
jns
mov
mov
push
mov
aas
mov
mov
fimuls
xorb
and
inc
lods
imul
mov
xchg
mov
pop
or
stc
inc
and
out
add
adc
mov
icebp
push
mov
not
mov
pop
movl
pop
pop
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
