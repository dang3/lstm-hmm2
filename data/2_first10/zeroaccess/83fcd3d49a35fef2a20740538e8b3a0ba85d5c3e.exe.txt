push
mov
sub
mov
mov
mov
addl
sub
mov
push
mov
mov
not
sbb
incl
mov
orl
sub
orl
mov
xor
mov
jmp
mov
cwtl
mov
fsubrs
sahf
mov
les
mov
ds
inc
pop
mov
lds
mov
repnz
adc
out
ss
test
repz
fisubs
mov
int
cmp
icebp
arpl
call
pop
rcl
inc
dec
shll
jmp
cmp
dec
in
inc
lds
dec
xor
jnp
cmp
outsl
cmp
leave
xchg
rcrb
sbb
sarb
sti
loop
jge
loope
lret
mov
add
movsb
rcr
jl
mov
adc
repz
je
rorb
jnp
pop
and
or
leave
mov
shlb
jmp
xchg
jl
inc
mov
mov
adc
pop
lods
xchg
ss
aas
fisttpll
int3
wbinvd
rcll
mov
sub
in
inc
and
out
pop
div
mov
sahf
stc
leave
jmp
cltd
or
inc
leave
inc
mov
mov
int
cmpsb
test
mov
inc
cmpsl
pop
add
popa
jae,pt
push
sbb
dec
mov
in
adc
pop
gs
xor
aam
lds
inc
cli
jge
out
jae
or
or
fcomp
and
push
or
js
hlt
testl
push
xchg
jl
mov
xor
fdivrl
push
mov
xchg
repz
inc
mov
xchg
or
pusha
scas
mov
shrl
adc
cmpsb
and
adc
push
fdivrs
xchg
jne
sbb
sbb
jge
mov
stos
push
xor
rclb
daa
dec
pusha
mov
mov
push
incb
ret
mov
jne
sbb
dec
ret
sahf
mov
dec
pop
fldt
enter
movsl
popf
push
mov
add
hlt
stos
iret
fidivrs
push
repnz
cmp
cmp
pop
movsb
jnp
xcrypt-ecb
cmpsl
leave
mov
into
pop
and
or
pop
dec
leave
inc
leave
ret
loopne
enter
pop
out
add
push
mulb
sbb
and
cmp
ljmp
jmp
lea
rorb
pusha
jbe
mov
and
lret
loopne
mov
movsb
test
sub
adc
sub
mov
repnz
or
and
pop
test
adc
push
inc
cld
orb
sub
mov
and
cmc
mov
iret
cmp
pushf
inc
push
pop
sbb
add
or
jns
sub
jl
add
jp
addr16
pop
sbb
scas
in
cmp
xor
rorl
add
fists
mov
mov
pop
push
sbb
lods
fcoml
repz
movsl
dec
mov
int3
jbe
xchg
es
pushf
xchg
xchg
fistl
ficoms
aas
or
imul
add
in
cltd
pop
lea
adc
sbb
and
add
ja
ds
mov
loopne
arpl
mov
repz
adc
popl
dec
sub
dec
mov
push
mov
cmpsl
int
sbbb
fiaddl
mov
arpl
roll
sbb
mov
subl
sub
movzbl
jmp
testb
mov
rcll
mov
les
mov
dec
out
cmp
mov
sub
mov
bound
test
scas
shll
lock
inc
pop
jecxz
xor
repnz
mov
push
pop
push
mov
nop
pop
mov
lret
jg
mov
insb
shlb
sub
imul
js
fstl
test
shrb
sbb
cld
jno
jl
inc
and
add
scas
jmp
mov
in
and
insb
sahf
jg
daa
push
mov
loope
pop
popa
xlat
fwait
cmp
fildl
enter
sub
pop
jmp
repnz
std
inc
mov
outsl
mov
insl
xchg
es
icebp
lcall
push
inc
ss
outsb
jg
es
enter
mov
dec
sahf
jle
aam
sub
pop
int
fdivr
sbb
cmp
xchg
and
pushf
xchg
sbb
dec
aaa
mov
cmp
andb
add
movsl
add
push
inc
xor
xchg
inc
in
dec
ret
push
aaa
cmpsb
mov
icebp
sub
cmp
mov
jl
xor
call
xor
dec
or
loopne
in
cwtl
push
and
sbb
jg
mov
je
push
sbb
pop
imul
cmpsl
or
jns
jle
gs
ret
cmp
push
icebp
icebp
and
sarl
popa
jl
inc
icebp
dec
mov
cmpsb
ficoml
cltd
cs
lret
imul
gs
fcoms
mov
push
adc
lcall
mov
push
ret
push
gs
sbb
pop
dec
pop
sub
pop
lret
xor
mov
xchg
xchg
pop
push
repnz
mov
fisttpll
xor
push
in
ret
pushf
test
sbb
mov
sub
sarl
mov
iret
test
mov
sub
mov
stos
lea
dec
inc
jle
dec
rcr
pop
sub
addb
adc
add
lock
cmpsb
jns
cmpsb
ja
stc
and
aas
sbb
push
into
leave
scas
sub
repz
imul
jge
mov
adc
das
bnd
dec
add
into
push
int
xor
aam
mov
js
jno
inc
ljmp
lock
sub
mov
mov
ja
test
jge
xlat
cltd
fs
xchg
cmpsb
loope
dec
xor
pop
mov
fnstenv
mov
jbe
ja
xor
imul
pop
mov
mov
dec
push
dec
stos
jg
cmp
int3
mov
jle
aam
mov
mov
repnz
jo
mov
cld
test
movsl
sti
jl
mov
sarb
mov
sbb
xchg
lret
mov
cmp
or
jp
out
mov
popa
nop
cltd
cltd
cmc
loopne
pop
cmc
mov
loopne
das
or
bound
enter
and
mov
je
stos
repnz
es
xchg
daa
int
aad
adc
jl
xor
jbe
sbb
ja
fidivs
lcall
inc
lret
push
out
fstpt
addl
iret
mov
or
orl
adc
orl
lea
cmpl
mov
movzwl
mov
jmp
mov
cmpl
ja
push
call
xor
or
xor
mov
or
orl
sbbl
movl
incl
mov
mov
mov
sbbl
mov
xor
add
mov
mov
sbb
mov
cmpl
not
movl
mov
jmp
movl
mov
cmpl
jle
pushl
push
push
call
add
orl
and
sub
xor
sub
mov
mov
cmpl
movzbl
mov
movzwl
jmp
movl
cmpl
jge
pushl
pushl
push
push
call
neg
add
sbb
adc
subl
shrd
shr
cmpl
mov
mov
not
jmp
mov
movl
cmpl
je
push
push
call
neg
xorl
sub
not
and
mov
mov
addl
xor
xor
or
and
mov
jmp
incl
pop
mov
fisubrl
movsb
mov
les
xchg
popa
imul
cmpsl
mov
push
dec
mov
insb
adc
jnp
sbb
fsubrs
xor
shll
xchg
sti
jbe
pushf
mov
add
mov
push
in
into
fcom
sub
out
or
lods
outsb
or
push
out
fdiv
mov
pop
adc
lods
mulb
push
pusha
jge
push
or
dec
add
mov
lcall
xlat
cmp
andb
push
js
iret
lea
jno
bound
or
adc
aam
test
push
imul
or
pop
inc
fcoml
sarl
shlb
vmwrite
outsl
test
stc
into
fisttps
pop
mov
and
pop
mov
cmp
inc
mov
jle
pop
loope
loop
and
mov
pop
mov
push
sub
xchg
sub
and
push
sbb
int
xor
push
cmp
into
mov
add
mov
in
outsl
pop
lcall
push
shl
lea
lea
ror
or
xor
cs
test
andb
push
out
js
sarl
hlt
inc
fildl
test
push
dec
mov
mov
adcb
repnz
and
cmp
stos
scas
xor
pop
in
and
addl
mov
pop
sahf
inc
mov
add
repz
pop
mov
lahf
push
divb
ds
mov
hlt
js
dec
inc
dec
pop
scas
mov
ffree
int
shrl
repnz
mov
mov
lods
xorb
sbbb
pop
xlat
iret
mov
push
dec
cltd
or
mov
shlb
test
int
fwait
add
inc
imul
sahf
in
nop
sahf
sbb
push
loopne
test
jl
pushf
test
scas
aas
negl
cmp
aaa
mov
stc
and
xchg
out
mov
xor
adc
pop
inc
iret
fs
xchg
dec
iret
adc
jg
das
sarb
ficompl
je
lock
sub
mov
xor
jnp
les
sub
aaa
cmpsl
pop
mov
popf
fidivrl
pop
stos
mov
adc
out
adc
mov
lret
out
mov
jae
mov
in
out
push
inc
std
fnstenv
or
decb
lret
out
sbb
pop
add
adc
cmp
lret
cmpsl
repnz
cmc
flds
iret
jg
paddusw
frstor
adc
fcompl
movsb
out
jl
pop
mov
and
or
and
sbb
jo
and
imul
mov
sub
cmp
outsl
ljmp
rorl
xlat
push
repz
xor
push
shlb
imull
daa
ljmp
mov
or
shlb
adc
popf
jge
rclb
dec
inc
popf
fs
adc
mov
push
sub
add
inc
xchg
outsl
inc
add
movl
movl
sbb
movl
movl
addl
movl
add
movl
sub
movl
movl
movzbl
and
movl
movl
cmpl
movl
movl
jmp
movzwl
mov
cmpl
jle
pushl
push
push
push
call
xorl
sub
sbbl
addl
sbbl
adcl
subl
addl
addl
movl
xor
movl
or
movl
movl
movl
xor
movl
movl
xor
add
or
mov
movl
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
jg
push
push
pushl
push
pushl
call
adcl
sbbl
adcl
addl
cmpl
movl
movl
jmp
mov
cmpl
ja
push
call
andl
sbbl
xor
andl
xorl
addl
movl
movl
mov
addl
shl
mov
addl
push
adcl
push
orl
push
sbbl
jmp
mov
jl
mov
lods
jmp
sahf
mov
les
mov
ret
testb
clc
cmp
clc
stos
lock
add
jl
add
repnz
std
shrb
out
adc
cltd
scas
lret
addr16
std
scas
mov
sbb
pop
dec
inc
lahf
adc
inc
mov
inc
xchg
push
adc
dec
int3
aad
sbb
cltd
pop
push
push
jmp
dec
outsl
xchg
mov
sahf
mov
jb
in
ret
sub
movsb
fdiv
enter
add
push
mov
sti
inc
call
test
dec
test
push
push
push
jns
add
dec
jb
cmp
add
xlat
movsl
sbb
test
in
jb
into
int
and
pop
fmuls
push
push
fimull
sbb
mov
cltd
jne
out
push
lea
xor
pop
sbb
adc
sub
fbstp
jle
sub
jmp
jbe
outsb
fsubrs
lret
loopne
leave
mov
pusha
insb
test
cmp
mov
xor
add
inc
out
and
sbb
mov
out
and
or
ljmp
jo
fnstcw
shr
mov
pop
sbb
repz
fsubl
sbb
int3
ret
jg
pop
or
push
ljmp
push
adc
enter
jle
ret
xchg
push
add
xchg
push
daa
jns
je
out
mov
dec
push
cmp
fimuls
mov
cs
or
xor
jnp
add
sub
inc
or
insb
int
inc
rcrl
cmpsb
arpl
fiadds
sub
add
mov
mov
cmp
or
add
adc
push
push
js
mov
fistps
lcall
cmp
orl
and
cmp
das
add
insb
sub
int
mov
fbld
lods
orl
cmp
popa
mov
shll
pusha
xchg
gs
lds
jl
cmp
dec
mov
call
or
outsl
jbe
call
int
xchg
or
push
cmp
cmp
js
clc
adc
and
sti
push
cmpsl
scas
js
and
scas
in
daa
les
cmp
adc
and
std
and
idivb
mov
mulb
xor
pop
xor
std
push
push
arpl
in
xchg
sub
int
roll
shlb
orl
stos
add
repnz
xor
push
mov
lcall
pop
push
xor
inc
jno
jnp
das
sbb
fiaddl
mov
ja
dec
jo
addr16
adc
std
cmpsl
adc
or
fmulp
ja
daa
daa
es
gs
dec
lock
mov
movl
mov
stos
inc
in
ds
test
pushf
mov
and
mov
add
lret
in
lahf
xchg
imul
insl
lret
dec
xchg
fcoms
outsb
push
shlb
pop
lret
jno
fstpt
pop
jge
lahf
jmp
mov
inc
inc
inc
outsb
test
daa
push
pop
outsb
push
push
das
xor
xchg
repz
xchg
pop
ljmp
add
sbbl
call
mov
mov
add
mov
sub
xor
sub
mov
mov
negl
sub
mov
lea
not
mov
adc
mov
negl
or
and
cmpl
mov
mov
jmp
movl
cmpl
jg
pushl
pushl
call
xor
adc
add
orl
negl
adc
sbb
sbbl
mov
or
xor
cmp
movl
jne
mov
cmpl
mov
not
movl
jmp
mov
mov
cmpl
je
push
pushl
push
push
call
sbb
xor
and
movl
add
inc
and
or
mov
shrd
shr
adc
mov
movzbl
or
mov
shl
xor
xor
or
jmp
cmp
ja
jl
mov
iret
or
xor
mov
les
mov
mov
fdivr
pop
loopne
xchg
jno
aaa
sbbb
ja
js
jle
inc
and
loop
andl
rcll
push
mov
or
hlt
repz
pop
adc
cs
aad
punpcklwd
push
iret
fnsave
push
sti
popf
sub
add
jg
mov
inc
or
out
push
shll
nop
lock
push
fadds
adc
adc
push
push
gs
or
dec
cli
cmp
sbb
insl
lret
pop
xchg
mov
mov
ficompl
std
cltd
rcrb
nop
into
fistpl
in
pop
fbstp
mov
jmp
rol
int3
icebp
xchg
pop
sbb
pop
sub
xchg
lock
push
xor
loope
push
mov
ret
and
das
out
pop
sub
mov
mov
xchg
in
aam
inc
jns
inc
gs
adc
mov
xor
jbe
mov
ret
es
pop
test
leave
sbb
add
mov
popa
add
adc
out
adc
jno
sub
mov
xchg
xchg
idiv
sub
pop
adc
jo
fmuls
adc
lods
add
popfw
pop
or
pop
push
mov
dec
push
out
dec
push
push
jmp
dec
push
cmpsb
sti
sahf
push
out
sub
mov
sbb
pop
mov
mov
addr16
mov
movsb
js
push
push
insl
add
and
shll
aad
sub
arpl
movsb
pop
fisubl
or
cmpsb
cmc
dec
and
pop
push
jbe
push
ljmp
imul
test
pop
nop
les
imul
cmp
jmp
cmp
jne
out
add
mov
xchg
mov
dec
pop
push
filds
push
jecxz
imul
aas
daa
mov
nop
orb
out
loop
or
in
loop
mov
sti
aam
lcall
push
mov
fimuls
cli
pop
scas
test
cwtl
jae
mov
mov
inc
push
cbtw
cmp
dec
xchg
das
sub
xor
das
shll
add
or
or
cli
mov
popa
inc
stos
shll
sub
xchg
xchg
loop
cmp
mov
xchg
hlt
cmp
xchg
mov
adc
sub
fldt
addr16
dec
sbb
xchg
ret
cmp
outsb
pushf
xchg
leave
or
mov
xor
xor
repz
outsl
fimull
scas
ja
les
std
frndint
test
and
xchg
jp
xor
pop
xor
add
pop
es
aad
ret
or
mov
jno
es
jmp
subb
cmp
mov
mov
mov
das
sbb
jbe
or
cld
adc
mov
insl
js
imul
and
repnz
pop
dec
into
mov
add
push
js
or
jne
and
xor
lds
mov
iret
test
sar
or
add
sbb
aad
cmp
dec
xchg
les
movl
jne
cmpl
mov
mov
mov
jmp
movl
mov
cmpl
jl
push
call
and
andl
sub
andl
mov
mov
add
mov
mov
sub
xor
mov
or
mov
or
mov
addl
shrd
subl
mov
mov
xor
shr
xor
mov
sbbl
xor
andl
or
orl
shl
xor
sub
xor
add
mov
sub
add
mov
add
mov
cmpl
not
notl
movzwl
jmp
mov
cmpl
jg
push
pushl
call
movzwl
sbb
mov
movzbl
adc
or
and
orl
add
or
adcl
mov
cmpl
movl
mov
movl
jmp
mov
cmpl
ja
pushl
push
pushl
push
pushl
push
call
mov
sub
sbb
movzbl
adc
add
xor
or
xor
mov
add
add
sub
mov
or
mov
mov
shrd
cmpl
movl
mov
mov
jmp
movl
movl
cmpl
jle
push
call
sub
and
mov
xor
mov
mov
xor
andl
cmpl
movl
not
mov
jmp
mov
cmpl
jl
pushl
push
call
sbbl
sub
sbbl
sbbl
mov
mov
adc
xorl
sbbl
shr
cmpl
movl
movl
mov
mov
jmp
mov
movl
cmpl
jbe
push
push
call
sub
sbbl
sbb
dec
inc
and
mov
mov
decl
xor
shl
xor
xor
sub
or
mov
cmpl
movl
mov
mov
jmp
movl
cmpl
je
pushl
call
dec
xor
or
sub
mov
xor
xor
notl
mov
addl
shrd
shr
mov
sbb
mov
mov
xor
mov
xor
andl
xor
subl
or
shl
lea
mov
xor
xor
sub
add
mov
xor
mov
orl
shrd
shr
cmpl
mov
movl
movzbl
jmp
movl
movl
cmpl
jle
pushl
call
subl
sub
adc
and
mov
mov
xor
mov
notl
mov
addl
jmp
cmp
inc
ss
mov
movsb
aas
mov
les
xchg
cmp
into
inc
ja
je
adc
in
cltd
cld
fdivrl
xorl
ret
mov
mov
dec
cmp
cwtl
dec
in
imul
dec
aad
aaa
mov
cltd
mov
hlt
dec
cli
adc
dec
lret
mov
push
fidivl
scas
push
hlt
inc
sub
push
sarb
test
fcmovnb
popf
lret
xor
imul
xlat
sub
jnp
stos
bound
inc
mov
ret
add
mov
jg
lcall
xchg
and
mov
and
wbinvd
shrl
rcrl
ror
pop
xchg
cli
adc
mov
lahf
movsb
or
jae
push
std
jle
or
pop
xor
cwtl
lret
fnstcw
scas
xlat
fimull
sub
mov
ror
mov
push
arpl
test
in
rcll
test
loop
or
jnp
xor
inc
and
pinsrw
or
dec
pop
sbb
test
mov
fs
dec
push
xchg
call
frstor
pop
stos
pop
dec
xchg
movsl
lock
in
mov
and
xchg
pop
jns
shrl
fcoms
aas
sub
inc
adc
jae
xor
jge
int
int3
and
ret
pcmpgtd
jne
iret
shlb
xor
lahf
packssdw
jmp
xchg
inc
insb
xorl
mov
cltd
adc
mov
aaa
push
cmp
lods
xchg
push
add
shrb
sbb
popf
test
movsb
ficomps
in
fcmovnbe
inc
neg
inc
xchg
enter
fbstp
xchg
je
or
cmp
adc
lods
jmp
xchg
xchg
cltd
and
xor
lds
leave
mov
lea
push
lahf
or
dec
lods
int
lcall
jp
inc
lret
push
and
inc
daa
mov
mov
add
jbe
lcall
andl
xlat
mov
mov
bound
xchg
decb
aad
inc
xchg
jecxz
mov
push
into
xor
inc
inc
jo
clc
cli
cmp
into
movsb
xlat
mov
sbb
mov
dec
inc
xchg
sbb
mov
pusha
fs
dec
mov
xchg
mov
xor
mov
fdivl
cmp
sbb
movsb
adc
push
and
xor
leave
push
imul
push
into
push
jp
in
in
addr16
in
fs
pusha
add
inc
out
mov
cwtl
imul
xor
std
es
cmc
and
xor
adc
sub
and
imulb
lods
aad
orl
sbb
scas
stc
repz
popf
fcmovnu
jo
sbb
lahf
icebp
fldl2t
movntps
mov
xchg
pop
mov
dec
xchg
mov
arpl
inc
in
cwtl
cli
sbb
inc
push
cltd
notb
mov
jne
shr
cmp
out
dec
dec
gs
movsb
shl
jg
lcall
jmp
mov
call
mov
sbb
int
adc
mov
and
push
push
leave
mov
into
lret
lds
cmp
test
mov
xor
sub
mov
subl
xor
or
shl
mov
xor
imul
subl
mov
add
mov
shrd
mov
mov
orl
xor
movl
shr
cmpl
movl
mov
jmp
movl
cmpl
jge
pushl
call
add
sub
xorl
sbb
inc
not
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jb
call
adcl
adc
and
sub
mov
or
mov
addl
xor
adcl
or
subl
shl
add
sub
movl
mov
cmp
movl
mov
mov
mov
mov
jg
andl
shrd
xorl
mov
xor
mov
xor
shl
movl
xor
or
shr
subl
mov
cmpl
movl
mov
mov
jmp
movl
mov
cmpl
jae
pushl
push
push
pushl
pushl
pushl
pushl
push
call
movzwl
sub
mov
movl
sbb
mov
and
incl
mov
xorl
mov
mov
andl
shrd
movl
shr
addl
mov
sub
mov
subl
mov
xor
subl
xor
or
addl
shl
adcl
imul
andl
sub
jmp
jmp
pop
movsl
out
js
cwtl
movsl
lret
mov
fucomp
fists
mov
pop
je
ret
fwait
pusha
mov
pop
lds
xlat
psubd
pusha
adc
add
icebp
xchg
ljmp
mov
adc
imul
jge
xor
daa
rcrl
push
int3
leave
sub
pop
adc
dec
mov
sub
inc
sti
fsubr
xchg
add
mov
int
pop
loope
decb
lahf
test
push
jle
sahf
in
fucom
iret
gs
cmp
inc
and
sti
imul
lock
fistl
and
add
dec
repz
sub
mov
jl
add
fmuls
cmp
or
flds
xor
insb
inc
mov
aad
add
cmc
xor
aad
rcrl
mov
mov
sub
jne
cmp
xchg
je
mov
xchg
xlat
cmp
repnz
lret
int
pushf
dec
add
xor
daa
mov
and
mov
enter
pop
pop
xchg
sbb
imul
adc
push
sub
in
xor
rcrb
sbb
dec
mov
fldt
xor
mov
pop
inc
push
add
rorb
jno
mov
mov
sbb
add
or
js
fisubl
ds
in
call
movsb
pop
adc
stos
cs
aas
ret
aaa
loopne
xlat
mov
mov
dec
jle
dec
inc
xchg
dec
xor
dec
std
out
xchg
sub
dec
aaa
pop
subb
add
xchg
aas
call
das
bound
pushl
jecxz
stos
pusha
xchg
sbb
clc
jecxz
lds
clc
icebp
lock
fwait
rcr
mov
lcall
mov
sub
mov
push
mov
or
xor
mov
stos
mov
shll
dec
roll
adc
adc
sti
sub
xor
push
inc
and
mov
mov
dec
and
inc
and
or
clc
push
or
sarb
mov
insl
xor
adc
pop
icebp
mov
icebp
addr16
sbb
test
mov
testl
jno
sarl
ljmp
jo
or
pop
push
or
xor
inc
je
xchg
jo
aam
push
imulb
nop
lahf
push
dec
std
push
jp
cmp
mov
imul
ficoms
fiadds
ffree
add
mov
mov
cmc
mov
adc
xchg
push
pop
mov
and
pop
mov
cli
xor
out
mov
mov
inc
and
pop
sbb
aam
lods
add
lret
sahf
ljmp
lods
sub
sbb
jp
fstps
mov
or
iret
sub
and
pop
mov
int
cmp
inc
ss
lcall
dec
jns
xchg
jmp
mov
stc
add
in
sti
or
or
std
push
idivl
adc
sub
cmp
push
imulb
mov
jge
stos
push
jbe
push
adc
jmp
push
xchg
mov
xor
pop
xchg
test
movsb
adc
cwtl
cwtl
or
cmp
sarb
xorl
mov
mov
xorl
xor
adcl
shl
notl
xor
subl
or
jmp
cltd
jbe
fidivrs
mulb
in
mov
mov
xchg
jg
xor
inc
fadds
test
add
dec
mov
sub
push
sbb
in
out
push
jle
leave
push
jecxz
sbb
ss
xchg
xor
in
movl
das
sub
cmc
leave
pop
or
cmp
pop
pop
ds
adc
pop
icebp
push
gs
repz
cli
fnsave
jb
fldt
cmp
mov
push
or
mov
mov
fsubrp
shlb
xchg
in
call
mov
repnz
lcall
sub
imul
int3
or
outsl
xchg
mov
mov
in
ds
and
mov
in
loop
dec
adc
test
dec
push
fwait
lret
mov
cmp
xor
shlb
sbb
movsl
cmp
subb
push
and
loopne
adc
fstpl
adc
stos
movsl
pusha
cmc
cwtl
cmpb
jne
cmc
je
xchg
adc
pop
jecxz
and
mov
decb
adc
addr16
cmpsl
cmp
bound
movsb
xor
aas
push
and
out
jae
push
fistl
mov
rclb
xor
add
inc
xlat
arpl
ret
call
test
inc
jo
cli
inc
mov
push
mov
xchg
xor
loop
inc
and
push
cmp
lock
inc
xor
push
and
cmp
adc
outsl
jmp
lahf
iret
filds
or
dec
xchg
sub
fstl
and
out
insl
stos
cli
fidivrs
mov
out
out
mov
mov
lods
pop
jno
push
loopne
push
fistpll
aad
sbb
jmp
jne
test
and
fwait
and
and
jecxz
pop
rclb
inc
adc
jle
xchg
dec
imul
dec
sbb
or
subb
movsl
mov
mov
dec
mov
push
add
mov
add
push
cld
pop
out
jecxz
inc
mov
push
cmpsb
outsl
cltd
fbstp
jno
popl
loopne
cmpsl
mov
push
add
jg
ret
mov
ds
lea
nop
outsb
adc
lock
aad
xchg
int
cmp
inc
jbe
int3
rorl
rclb
add
in
jnp
xchg
mov
inc
ret
test
xchg
mov
mov
xorl
fmuls
push
test
mov
push
jo
lds
nop
sarl
mov
arpl
xlat
out
subb
daa
aas
cmp
jmp
xlat
xor
pop
in
mov
stc
mov
pop
lock
test
icebp
sub
mov
push
push
shll
out
insl
adc
insl
lret
mov
xchg
js
cmc
pop
or
fcoms
xor
leave
inc
add
sbb
adc
rcll
jge
and
fs
cmp
aas
enter
fs
inc
mov
push
inc
pop
push
mov
mov
mov
add
xor
lret
adc
mov
or
xchg
sahf
and
adc
jb
cmp
rorb
ret
and
or
movzwl
and
mov
cmpl
mov
notl
jmp
movl
movl
cmpl
jae
push
push
push
push
pushl
call
xor
xor
xor
sub
sbbl
sub
xor
cmpl
mov
not
jmp
mov
mov
cmpl
jle
push
call
mov
mov
and
adcl
dec
and
sub
mov
mov
add
mov
orl
shrd
xorl
shr
and
mov
mov
mov
xor
xor
or
subl
shl
sbbl
add
jmp
bound
push
cmpsb
push
ror
lods
movsb
mov
les
xchg
cmpsl
fnstsw
xchg
or
out
add
inc
into
mov
lock
fmuls
push
test
cmp
lock
mov
sub
addr16
xchg
push
or
jmp
push
fadds
ja
aad
push
push
cmpsl
jg
mov
repz
mov
dec
mov
mov
push
js
jb
add
pop
add
lods
fcoms
xchg
in
rcl
xchg
xor
negb
and
or
jg
mov
lahf
decl
fstpt
sub
gs
fcoml
sahf
mov
addr16
cmp
inc
loope
jecxz
jle
into
jo
jne
mov
xlat
aaa
imull
int
sbb
scas
xchg
into
ret
fisubs
inc
mov
into
mov
xchg
int
mov
add
jle
mov
aas
jmp
xor
or
mov
jo
mov
mov
stos
cmp
cmpsl
mov
sar
add
mov
pop
movsb
scas
or
and
insb
push
inc
lret
adc
sbbb
jg
imul
mov
xchg
lods
aaa
xchg
pop
sar
lds
sbb
xor
cmpl
mov
mov
xchg
ficoms
mov
push
or
imul
ret
push
fsubl
lods
testl
mov
rcr
stc
xlat
cmp
in
cmp
dec
dec
mov
ficoml
cmp
scas
xchg
iret
outsl
inc
lret
and
dec
addr16
cmp
lret
push
sub
jle
dec
punpcklbw
dec
mov
pop
rorl
dec
mov
mov
rcrl
in
add
jbe
addl
jmp
into
es
sti
and
inc
dec
adc
mov
ljmp
and
popa
call
sub
call
bound
mov
sti
xchg
xchg
xor
inc
movsb
out
test
mov
xchg
mov
add
sbb
rcrb
test
scas
mov
arpl
outsl
add
test
pop
test
mov
les
mov
lock
mov
pop
jge
nop
pop
rorb
mov
ja
mov
mov
stc
and
icebp
stos
lods
mov
sbb
xor
insl
xor
xchg
dec
adc
mov
test
fcompl
shlb
popa
es
pop
pop
cmc
dec
sub
or
mov
inc
mov
add
or
ret
sub
jns
lea
or
xchg
iret
test
jae
stc
daa
sub
test
pop
std
jae
mov
cmpb
cmp
adc
mov
add
inc
lcall
pop
push
or
cmp
xchg
roll
pop
repnz
aaa
sub
imul
and
icebp
sbb
les
jo
in
push
mov
mov
dec
jae
adc
add
not
movl
jmp
mov
cmpl
jne
pushl
push
push
call
mov
xor
mov
or
movzwl
and
xor
add
add
mov
mov
sub
imul
mov
cmpl
movl
mov
jmp
movl
cmpl
jb
pushl
call
adc
xor
add
mov
sub
xor
addl
sbb
sub
movzwl
xor
mov
mov
shrd
shr
cmpl
mov
movl
jmp
movl
cmpl
jae
call
adc
mov
and
mov
sbb
sbbl
add
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
jmp
cmp
cmp
mov
mov
sti
mov
mov
cmpsl
adc
cmp
lahf
sbb
xor
ja
stos
stos
xor
jb
scas
incb
call
out
cmp
push
jmp
loope
inc
cmp
inc
mov
bound
or
cmp
repnz
aam
dec
pushl
pushf
lds
dec
call
pop
ljmp
adc
mov
inc
cmp
outsb
rol
and
in
lret
cmp
imul
ret
rolb
dec
sbb
push
inc
mov
cltd
test
lock
jno
jp
push
sbb
gs
inc
add
mov
test
mov
cmc
sub
jns
mov
repnz
or
movb
mov
in
ds
dec
loop
push
inc
add
mov
sbb
push
or
mov
ja
in
popa
xor
fsubl
adc
movsl
or
lods
lret
dec
sti
in
xor
mov
adc
pop
xchg
test
pop
lret
push
je
insb
test
rcrl
js
or
scas
pop
dec
inc
mov
pop
movsb
ficompl
out
imul
xchg
ret
adc
fld
daa
sbb
lods
pop
dec
dec
cmc
adc
xchg
mov
aad
mov
dec
test
jo
push
orb
cs
xchg
iret
test
int
bound
loop
loopne
nop
test
jle
ds
mulb
and
mov
pop
mov
xor
out
aad
push
cmp
das
loopne
inc
bound
out
ss
je
mov
or
pop
mov
dec
testb
pop
or
push
lea
les
adc
sti
aam
popa
fldcw
pop
test
ds
int
pop
sbb
filds
lret
out
sub
and
adc
movsl
cltd
int
push
out
push
mov
push
push
js
cmpsl
mov
push
jbe
adc
xor
int3
sahf
mov
shlb
mov
es
or
loope
aas
insl
arpl
pop
mov
adc
inc
add
mov
int
sub
loop
xorb
outsb
push
aad
mov
xlat
jg
pop
fs
mov
add
mov
ret
enter
add
jbe
shl
gs
sbb
add
inc
mov
test
cmc
mov
fdivrp
mov
les
mov
es
dec
shrl
push
stos
xchg
ljmp
pusha
mov
inc
outsl
jmp
jg
mov
jo
dec
mov
sub
mov
jecxz
iret
sbb
movsl
xor
das
mov
and
adc
aam
xor
ret
mov
xor
jmp
push
inc
or
movsl
nop
sub
rcr
jno
inc
xorb
outsl
xchg
fs
test
arpl
mov
lea
push
fs
out
lret
pop
mov
mov
or
enter
jge
outsl
std
push
and
pop
rcrb
inc
xlat
mov
and
dec
push
or
inc
rorb
enter
add
aam
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
jmp
xchg
mov
fwait
or
cli
movsb
loope
mov
mov
mov
ds
sub
push
out
add
fdivr
jb
in
cmp
mull
xor
or
repz
jle
inc
sbb
push
das
push
idivl
add
sub
repz
jmp
aas
aaa
rolb
mov
fnstcw
frstor
cmp
movsb
pop
add
js
or
fisttps
in
adcl
jg
pop
and
add
cld
dec
ja
shll
jmp
pushf
mov
pop
push
aam
and
pusha
cmpsl
mov
out
outsb
fcoml
jmp
aam
sar
xchg
adc
jnp
adc
into
lret
mov
mov
out
cld
shl
fbstp
in
jmp
cmp
sbb
cwtl
and
xchg
popf
add
push
mov
sub
inc
xchg
subl
dec
scas
notb
dec
sbb
inc
ja
icebp
push
sahf
lahf
xor
hlt
iret
ficomps
pop
fildll
out
cmpsl
fcmovnbe
xchg
cld
adc
gs
popa
and
call
clc
mov
pop
push
rcrl
jge
or
push
aam
fs
jl
xchg
stos
je
insb
mov
jp
fcompp
insl
fldt
mov
dec
rol
add
loope
imul
cwtl
loopne
cmc
adc
add
and
mov
add
sbb
shll
inc
jo
or
mov
jle
mov
xchg
lods
stos
and
andl
dec
xchg
inc
arpl
loop
movsb
mov
jne
xchg
adc
movb
or
push
xchg
out
gs
std
and
es
mov
and
xor
jecxz
test
ret
mov
dec
adc
out
aam
xor
inc
inc
add
arpl
xlat
in
sbb
mov
jbe
jnp
aam
adc
dec
ss
dec
enter
xor
sbb
xchg
pop
popa
sub
sbb
test
and
test
add
sub
in
adc
aaa
sub
scas
push
and
lahf
sbb
jle
sub
add
mov
lret
pop
mov
aas
inc
loop
and
jecxz
xchg
add
pop
test
sbb
or
xor
xor
cmp
mov
dec
cmp
and
out
jl
dec
in
and
pop
loopne
out
insl
scas
rol
mov
ficomps
adc
in
sub
mov
jno
int
and
cmp
fs
das
push
mov
adc
mov
adcl
add
pop
insl
scas
hlt
mov
push
sub
enter
pop
outsb
fstp
cmp
pop
inc
icebp
mov
into
orb
sbb
in
lret
movsb
mov
cld
les
ja
xor
xor
mov
cwtl
push
inc
mov
fwait
jecxz
loope
jbe
bound
inc
add
roll
cmp
and
pop
mov
pop
fists
arpl
pop
aaa
fcompl
ljmp
add
in
push
mov
lods
push
adc
mov
pushf
inc
shlb
xchg
jbe
sub
pop
sbb
rol
data16
ds
or
and
in
es
pop
fidivrl
out
push
cmp
mov
movsb
ret
subl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
jmp
cmp
push
jl
cmp
dec
jle
xchg
mov
les
fcompl
sbb
iret
aaa
shr
cmpsb
xor
sub
scas
add
sbb
mov
call
or
aas
and
roll
inc
push
push
daa
mov
movsl
jo
imull
mov
repnz
pop
cmp
sub
adc
mov
movsb
cmp
push
jmp
sbb
rolb
fdivr
lahf
inc
cmovs
sahf
dec
mov
inc
cmp
pop
test
jae
mov
addr16
cmc
pop
pop
enter
in
out
stos
mov
imul
lahf
clc
fsqrt
pop
and
lcall
lock
repnz
ja
jge
popf
stc
test
loop
outsl
insl
imul
scas
out
stc
lock
mov
mov
cli
ret
je
pop
adc
jbe
lahf
dec
mov
insb
xlat
cmpsb
sub
mov
push
ljmp
add
dec
ja
sbb
pop
int3
dec
xlat
sub
fcmovbe
dec
data16
das
rorb
inc
add
sub
adc
xor
jp
test
insb
mov
adc
dec
lahf
in
outsl
or
jecxz
addb
adc
push
xchg
xor
jge
insb
dec
sub
stos
clc
in
jp
lock
pop
cmpsb
xor
ret
lods
xchg
lahf
push
pop
and
insb
dec
mov
lock
pop
inc
add
test
jne
repz
nop
jl
insl
add
pop
lds
fnstcw
cmp
in
loopne
lods
ror
push
add
scas
xor
ret
sub
jae
dec
jnp
stc
cltd
mov
fcomip
popa
xchg
fcmovbe
lods
fdivr
imul
jp
jne
mov
enter
jns
add
xchg
ja
mov
ljmp
pop
rcrl
loope
or
push
mov
loope
cmp
jecxz
sbb
push
das
hlt
jbe
stos
jo
sub
mov
mov
mov
jns
and
das
fs
and
xchg
je
aaa
mov
inc
mov
lea
inc
mov
adcl
lds
push
sti
or
dec
push
cmc
aas
mov
gs
sbb
rclb
sbb
mov
mov
test
inc
mov
dec
push
xchg
loope
dec
dec
pop
stos
clc
mov
icebp
sub
loope
mov
dec
aam
inc
cwtl
in
jno
sub
mov
mov
inc
or
dec
dec
scas
aam
mov
or
mov
nop
stos
in
mov
daa
mov
xor
mov
jb
loope
out
add
arpl
adc
es
call
jne,pn
inc
rcll
dec
dec
lahf
dec
ss
or
lcall
mov
icebp
push
filds
push
mov
adc
in
lahf
imul
push
jne
fld
int3
fmul
jb
sub
in
dec
sbb
orb
loope
adc
xchg
jl
xchg
mov
push
lods
dec
sbb
dec
sbb
aad
enter
ss
aas
iret
cltd
or
movb
dec
xchg
cmpsl
mov
adcb
fidivrs
das
js
lahf
push
jl
xchg
mov
sti
jb
popf
xchg
mov
ljmp
mov
fbld
or
sub
sbb
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
jmp
mov
push
mov
dec
cmpsb
jecxz
adc
mov
shr
xor
out
out
jp
dec
dec
inc
cltd
movsb
or
mov
jge
xchg
mov
add
mov
pop
bound
lods
in
arpl
cltd
pop
adc
sub
repnz
bound
fsubs
add
aaa
sub
call
mov
mov
call
mov
jbe
mov
aas
pusha
cli
sbb
add
add
adc
movsb
dec
inc
adc
iret
cmpsb
lcall
les
hlt
and
or
jne
lea
shlb
jg
testl
cmp
dec
int
pop
xchg
sbb
dec
dec
cmp
mov
pop
or
lock
addl
and
xchg
mov
aad
add
stos
daa
cld
jge
pop
xor
add
cmp
das
push
out
sub
scas
jl
jp
mov
ljmp
cltd
mov
push
push
test
jle
pushf
push
sbb
and
enter
jno
jnp
in
xor
sti
push
pop
div
test
and
gs
lock
adc
lods
cmpsb
dec
inc
jns,pt
xchg
daa
divl
std
mov
inc
jo
std
mov
mov
jnp
aam
and
orb
mov
test
adc
mov
cli
fdivrs
pop
jno
pop
insb
mov
push
pop
out
out
loope
cmpsl
mov
sbb
dec
jnp
mov
mov
mov
jno
das
rol
dec
cmpsb
push
in
mov
scas
in
mov
push
adc
cmc
loope
testl
adc
loopne
pusha
test
clc
pop
movsl
movsb
mov
mov
sbb
jb
jge
adc
stos
adcb
or
scas
xor
pop
mov
shrl
inc
sub
or
mov
mov
lea
stos
jne
push
cmpsb
xor
cwtl
pushw
dec
lods
jl
cmp
in
imull
in
mov
outsl
sub
outsb
sarb
in
les
mull
jb
sbb
xor
sub
push
push
setbe
dec
ds
aad
cwtl
fisttpll
jne
sbb
xchg
add
mov
push
ljmp
cwtl
pop
lods
or
pop
cmp
or
mov
xchg
dec
inc
jg
data16
jmp
and
sbb
sub
add
fnsave
fwait
mov
movb
inc
imul
jmp
push
pop
mov
stos
adc
mov
lahf
cwtl
inc
push
adc
xlat
test
ljmp
adc
and
add
fwait
sbb
dec
mov
pusha
nop
popa
ret
adc
push
cmpsb
sub
pop
adc
adc
and
test
adc
jno
das
fs
loop
dec
out
push
in
push
jmp
scas
hlt
mov
mov
stos
inc
sub
sub
or
pop
jno
shll
mov
adc
cmpsb
dec
aam
adc
sub
je
imul
mov
inc
mov
mov
shrd
shl
shr
mov
mov
xor
mov
jmp
sub
jnp
mov
cmp
mov
les
xchg
ror
sub
add
cs
outsb
je
mov
insb
and
mov
add
negl
xchg
xchg
movsl
stc
sbb
mov
int
sti
push
mov
sti
inc
dec
mov
xchg
out
jne
loopne
jge
inc
pop
dec
scas
int
jle
repz
sbb
sbb
and
lcall
push
lea
stos
dec
inc
iret
xchg
mov
dec
push
cmp
shlb
mov
fldl
cmpsb
jle
add
push
test
xlat
or
jmp
sti
cmp
gs
fcmovnu
push
in
push
push
pop
mov
mov
into
push
popa
shrb
cmp
data16
mov
mov
inc
inc
mov
or
push
cmp
pushf
jmp
adc
cmp
or
xlat
jns
sub
or
and
inc
adc
adc
or
mov
inc
xchg
xor
xchg
shrb
movl
xor
shrl
sbb
fsubl
sub
and
cwtl
jg
sbb
nop
lret
outsl
or
mov
sub
adc
les
jae
mov
cmc
std
dec
int3
aad
lahf
sbb
test
stos
imul
cmp
loope
pop
outsl
outsb
mov
sub
arpl
mov
mov
xor
out
mov
addr16
dec
loopne
or
mov
jecxz
jae
outsl
mov
add
sbb
sti
mov
cmp
push
bound
call
icebp
imul
mov
mov
or
push
stos
add
inc
pop
adc
cvtps2pi
xor
repnz
movsl
mov
imul
adc
dec
ljmp
pusha
mov
movsb
hlt
pop
cmp
mov
jp
insl
push
add
lahf
push
pushf
aas
test
dec
xchg
cmc
mov
inc
or
add
dec
popf
test
cmpl
cltd
mov
arpl
pushf
add
mov
daa
mov
push
push
gs
in
cs
clc
mov
int
outsl
es
and
insl
xor
iret
mov
mov
mov
dec
fisttps
mov
jno
mov
test
into
push
jmp
out
lods
ret
fcoms
movsb
xchg
pusha
adc
push
std
aam
insb
sbb
insb
aas
call
in
stc
and
sbb
hlt
js
add
push
add
mov
pop
aam
jecxz
loope
dec
or
pushf
xchg
jno
cwtl
jno
jns
movsl
hlt
lcall
out
mov
lret
jb
or
std
xchg
sub
stos
jle
scas
es
scas
push
lock
push
jb
xor
push
sub
push
pop
jae
addr16
xlat
hlt
bound
or
mov
xor
mov
push
pop
jp
lahf
push
and
or
fiadds
jo
mov
sub
xor
add
mov
lods
cwtl
xor
push
sbb
outsb
mov
decb
sbb
or
mov
dec
not
jmp
int
mov
sbb
mov
shll
xchg
nop
mov
les
ret
test
or
mov
int
sbb
ss
pop
test
repz
cmpsb
fs
pop
movsl
bound
fmull
sub
push
jge
xchg
outsb
pushf
pop
out
adc
lock
xchg
stc
inc
mov
mov
popa
bound
add
xchg
inc
aad
rcrl
push
outsb
pop
loope
sbb
xchg
jns
adc
dec
jg
sti
ds
aam
mov
push
pop
ljmp
or
pop
jb
fldlg2
mov
mov
mull
cmpsb
repz
or
les
loopne
sbb
fdivrl
cmp
jae
outsl
insb
aam
fwait
and
stc
shrb
cwtl
mov
pop
loope
fadds
inc
add
sub
rcrb
and
aad
call
mov
and
ud0
imul
mov
push
lret
sahf
aad
cmp
fcomps
add
add
in
movsb
faddp
aas
loope
sbb
push
lret
adc
mov
sbbb
int
stos
call
adc
mov
pop
out
call
arpl
adc
or
sub
cmpsb
xor
ret
dec
xor
or
mov
hlt
sub
fildl
xchg
movsb
rcll
fidivl
mov
mov
int
adc
mov
and
fimuls
add
pop
fbstp
sbb
pop
inc
cwtl
dec
dec
adc
jp
sbb
mov
test
pop
pop
shll
ret
mov
cmp
inc
ret
call
dec
xchg
pusha
in
mov
and
insb
adc
inc
xchg
das
insb
out
inc
call
fmul
pop
stos
icebp
out
mov
aas
xor
sub
xchg
in
scas
andl
mov
xchg
push
lods
lods
mov
icebp
xlat
jb
mov
mov
mov
push
inc
ljmp
ret
insl
xchg
int3
insb
sub
mov
cli
leave
add
scas
roll
cmp
fidivl
scas
jns
je
out
adc
jl
out
wbinvd
icebp
cwtl
jae
leave
inc
inc
imull
dec
sbb
test
cmc
into
lret
lret
int3
mov
daa
stos
mov
ror
mov
faddp
iret
jecxz
push
aad
je
frstor
mov
jb
rorl
xor
aaa
push
mov
test
ffree
or
lret
inc
cwtl
xor
mov
sbb
ret
inc
sbb
int3
icebp
icebp
scas
cmp
movsl
sti
repnz
jbe
add
dec
test
adc
iret
lods
cld
or
mov
rorl
sbb
jmp
addl
outsb
cwtl
test
fldenv
jg
addps
dec
pop
and
nop
cmp
cmp
ss
nop
fcmovu
shlb
sub
and
xchg
std
xchg
jl
add
cmpsb
add
push
sub
sti
iret
xchg
mov
and
mov
or
insl
cltd
daa
pushf
ret
xchg
xor
sar
outsl
pop
inc
dec
and
or
out
jbe
arpl
xor
mov
negl
adc
sbb
dec
add
jae
loop
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
jmp
cmpsb
test
mov
xchg
inc
jl
jecxz
and
mov
xchg
pushf
imul
push
repz
pop
jecxz
in
imul
aaa
sbb
sub
ret
shr
fwait
pushl
inc
inc
call
rcl
test
arpl
inc
jno
mov
ljmp
aad
add
sbb
xchg
repz
add
mov
mov
inc
mov
jno
ss
mov
out
std
sti
rorb
inc
dec
push
and
cwtl
jg
ret
mov
test
adc
insb
jge
test
adc
subb
add
add
daa
ficoml
imul
jg
js
mov
arpl
xor
mov
dec
fcomp
xchg
hlt
jl
cmc
push
test
add
negl
xlat
std
jbe
and
shrb
add
or
outsb
lea
xchg
dec
and
add
rcrb
repnz
adc
repz
cwtl
stos
cld
jg
scas
add
fistps
sbb
cmp
inc
cmp
in
xor
in
shl
inc
sahf
and
sbb
imul
dec
push
imul
xor
or
jecxz
push
lcall
int3
outsl
mov
jp
xchg
outsb
dec
sbb
dec
pop
in
lret
out
test
jmp
jmp
adc
les
shlb
add
rcr
xchg
pusha
inc
out
je
leave
mov
pop
mov
scas
cld
push
push
test
mov
cli
hlt
cltd
mov
bound
out
cmpsb
aad
or
or
repnz
pop
push
sub
push
pop
xchg
jne
adc
inc
adc
sbb
aad
sbb
inc
adc
mov
out
add
arpl
fucomi
push
pop
and
push
data16
sbb
popf
adc
sbb
les
push
xor
mov
lret
into
jae
cwtl
jmp
jg
movsl
and
outsl
test
sbb
ret
es
stos
or
push
setg
lret
dec
test
cmp
daa
push
or
fistl
push
test
push
sub
adc
dec
or
mov
in
ret
xchg
push
or
cmp
andl
adc
test
pop
mov
aam
push
mov
dec
push
imul
mov
mov
sub
shl
jg
popf
sbb
fyl2x
sub
push
fsubrs
das
and
adc
sbb
lahf
scas
pop
xchg
cmp
lea
pop
dec
and
mov
sbb
leave
cmc
mov
aas
les
lret
clc
and
adc
xor
inc
pushf
jl
xor
pop
sahf
mov
dec
repz
stos
out
mov
mov
mov
adc
mov
pop
lea
repz
movsl
cmp
xchg
lea
add
insb
enter
ffreep
lcall
repz
sbb
mov
aad
stc
push
xor
mov
dec
inc
inc
mov
adc
or
pop
jnp
mov
mov
shl
xor
mov
mov
mov
jmp
pusha
adc
adc
pop
fnstsw
sub
mov
mov
cmpsb
push
repz
mov
inc
sbb
divb
pop
scas
push
daa
pop
mov
push
int3
jecxz
test
mov
push
mov
xchg
xchg
xchg
outsb
add
aad
cmp
cmpsl
scas
cld
sub
and
movsl
std
inc
sbb
mov
loope
mov
jg
mov
pusha
mov
inc
pop
into
loop
push
push
cmpsl
je
arpl
fiadds
mov
popa
mov
std
sbb
mov
xor
dec
sub
repnz
dec
and
mov
inc
loopne
mov
pop
mov
out
andb
mov
adc
sub
sbb
movsb
icebp
daa
pop
leave
mov
dec
das
pushf
arpl
cmp
cmpb
int
mov
test
lock
or
push
lea
adc
adcl
inc
add
mov
call
pop
push
jo
xor
test
xor
push
sub
test
jle
cli
mov
mov
out
adc
divl
insb
pop
mov
lret
mov
ret
and
insb
clc
sbb
dec
scas
adc
cmp
clc
jle
push
or
jo
sbb
call
cmp
mov
clc
mov
addb
adc
out
cmc
push
sub
xor
push
mov
xchg
and
cltd
push
addl
jmp
dec
add
inc
push
adc
and
push
shlb
gs
and
mov
xchg
insl
sahf
cmp
shr
test
dec
mov
dec
aas
mov
lret
and
in
adc
fmull
jbe
xchg
jle
sarb
jg
ficomps
aam
or
xchg
push
negl
mov
or
in
divl
push
in
push
aam
in
xchg
push
push
push
out
jb
imul
or
or
addr16
and
clc
ds
cmp
repnz
mov
or
paddd
push
mov
push
nop
adc
mov
jne
pop
sbb
imul
lahf
mov
inc
sbb
sub
cmp
fsub
jl
test
xchg
in
jle
xlat
stos
fdivp
bnd
sbb
pop
mov
outsl
mov
addl
les
pop
or
mov
fnstsw
mov
mov
cld
popf
jle
test
pop
test
pop
jne
rcrb
in
call
adc
lahf
pop
jl
subb
hlt
push
push
fcomp
inc
in
ret
cwtl
mov
mov
xchg
add
push
pop
rcr
lret
push
inc
imul
push
jae
sahf
addr16
jbe
lods
mov
lcall
sar
rcrl
sti
into
das
fcomps
aad
cmpsl
fldl
and
mov
fs
add
add
pop
jno
and
frstor
push
mov
icebp
mov
outsb
rorb
in
jecxz
or
les
pushf
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
jmp
aas
jne
arpl
jl
jns
das
inc
xchg
call
xor
mov
or
pop
outsb
cmp
push
mov
jo
loop
outsl
aas
fld
jmp
cmp
jmp
mov
stos
and
mov
jno
repz
jmp
lahf
push
lods
addr16
adcl
les
mov
cld
pop
jg
xchg
aam
subl
stc
cwtl
mov
push
pop
and
jl
cmp
and
mov
adc
cmpb
mov
shlb
mov
sbb
cmp
xorl
int3
push
lock
subb
pop
adc
jbe
sbb
rorb
xchg
sub
dec
fistpl
add
sbb
out
gs
ja
lods
xchg
adc
pop
cmp
mov
pop
in
les
xchg
ljmp
inc
cmp
add
push
dec
stos
lahf
lds
pusha
imul
cmpsb
stos
popa
js
cmpsl
sub
int3
xchg
cli
bound
mov
pop
adc
pushf
and
lock
es
mov
bound
sub
pop
cmp
aad
xor
inc
int3
inc
iret
xlat
addl
cmp
aas
xchg
inc
lcall
fisttpll
pushf
mov
arpl
popf
jae
iret
aaa
jle
lock
sub
xor
lds
gs
outsl
cmc
sbb
mov
and
insl
outsb
sbb
jns
pop
sub
jg
push
lahf
clc
gs
xlat
jecxz
andb
mov
push
sub
pop
jo
sub
lcall
dec
leave
andl
rorl
test
les
shrb
xchg
xchg
mov
filds
mov
ret
outsb
mov
push
cmp
inc
subb
xor
ss
stc
out
jbe
pushl
inc
pop
push
or
lcall
mov
ljmp
cmpsl
inc
movsl
inc
lock
data16
pushf
xchg
add
mov
add
jl
hlt
sarb
or
push
fldcw
mov
sub
mov
xchg
inc
cld
inc
imul
out
pop
cld
fists
js
popf
rorb
ja
enter
movb
ja
fs
sub
or
mov
pop
adc
sbb
imul
pop
pop
loopne
out
add
add
push
repnz
jb
mov
jb
and
movl
xor
fwait
cmp
lods
sub
pop
clc
xor
pop
mov
and
lret
adcl
clc
and
shr
mov
cwtl
xchg
sub
xor
pop
and
adc
popa
jge
xchg
fcoms
adc
int
test
jo
xor
push
out
mov
push
fadds
or
mov
leave
lahf
paddd
lahf
jle
jno
xor
sahf
cld
movsl
mov
icebp
jo
xor
and
into
leave
push
mov
mov
movsl
pop
repz
insl
ljmp
sbb
fs
repnz
outsl
sbb
mov
xor
mov
push
add
ljmp
cmp
mov
cmpb
jg
bound
add
ja
jns
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
jmp
xchg
cld
pop
cmpl
inc
fnstsw
les
mov
test
pop
daa
inc
call
pop
mov
pop
sbbl
xchg
and
sbb
bndstx
jb
xor
ret
cwtl
in
add
pop
add
loop
sbbl
rcrl
inc
cmpsl
je,pn
xor
lods
ja
push
movl
outsb
movsl
or
or
mov
das
test
in
fs
shll
pop
push
fcoml
cwtl
pop
inc
add
scas
jb
inc
mov
or
mov
test
insb
int3
push
add
pusha
sub
xor
test
jmp
add
int3
stc
dec
addr16
jns
jae
sbb
jnp
in
pop
pop
in
mov
xor
lock
sbb
test
mov
push
push
mov
pop
inc
test
rorl
jbe
vpsllw
pushf
dec
int
cwtl
lea
xor
mov
aad
sub
xlat
or
dec
xor
cmp
stos
shll
xchg
adc
dec
movsb
mov
les
jne
xor
xor
mov
mov
mov
mov
shll
mov
loop
int
inc
popf
xor
mov
dec
cmp
aas
push
mov
imul
loopne
push
sub
mov
les
mov
push
aas
aaa
out
sbb
adc
in
push
stos
mov
cmp
aam
xorb
cwtl
incl
mov
sbb
add
xchg
jp
test
or
pusha
inc
fidivrl
pop
sub
leave
test
pop
mov
sbb
in
sahf
adc
jecxz
jg
mov
sahf
mov
cltd
pop
jp
rcrl
gs
push
add
shr
mov
les
sbb
les
data16
out
jg
fsts
test
and
pusha
movsl
push
dec
lret
shll
fsubs
mov
lcall
jecxz
cmp
xchg
addb
in
xchg
mov
je
mov
jae
jb
lret
add
push
push
clc
fimull
cmovb
lret
arpl
pop
jmp
fwait
dec
mov
jo
mov
jnp
dec
daa
std
movsl
or
sbbl
adc
dec
dec
out
dec
addl
xor
pop
xchg
or
xchg
mov
push
mov
add
fistl
adcb
in
rcl
fisubs
fidivrs
xchg
xchg
ret
mov
jo
insl
fnstcw
test
test
lea
mov
mov
cld
out
xlat
pop
adc
fcomp
sub
pushf
aam
sub
add
lcall
call
shrl
push
out
sbb
adc
mov
add
or
push
adc
es
repnz
aaa
jno
pop
and
push
test
jle
mov
arpl
cld
and
inc
cld
add
aam
leave
shll
xchg
sub
xchg
jl
lcall
jmp
mov
cmc
std
inc
push
jecxz
sti
ret
inc
xchg
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
jmp
stos
outsb
jne
mov
add
cmp
mov
mov
add
paddd
jmp
push
xchg
sbb
inc
xor
xchg
shr
clc
adc
ljmp
out
ds
push
scas
std
pop
jae
push
jbe
jno
jns
xlat
imul
ljmp
ret
cmp
sbb
xchg
fidivrl
pop
loopne
sub
lea
xchg
xor
mov
adc
mov
mov
int3
das
mov
add
push
mov
pushf
cmp
pop
pop
bound
sbb
pop
cmp
rclb
push
dec
roll
jb
xlat
into
shlb
and
rcl
adc
cmp
xor
and
test
push
add
push
mov
sarb
orb
pop
pushf
dec
popa
push
scas
fwait
add
or
sub
loopne
hlt
shrb
xor
jge
cltd
ss
sbb
mov
pop
lret
sub
jge
add
xchg
sub
jmp
int
push
pushf
ja
add
cld
fsubrp
js
insl
jge
dec
cmpsl
mov
jbe
nop
xorl
stos
ljmp
imul
dec
loop
mov
adc
pop
ja
inc
lea
cltd
and
aas
test
inc
iret
repz
mov
scas
cmp
movsb
sub
sbb
lahf
add
mov
hlt
loopne
xor
jle
fldcw
push
shlb
mov
adc
sbb
outsb
or
pushw
fdivl
jo
inc
cwtl
inc
imul
fstps
int3
lret
or
pop
outsl
out
punpcklbw
icebp
aas
and
and
aam
jge
adc
aam
mov
in
mov
insb
pusha
jne
scas
fsts
nop
cmp
shlb
popa
out
btc
iret
push
push
jle
dec
cmpsl
popf
dec
cmp
test
aam
push
cld
push
jmp
in
and
add
xor
push
xor
shlb
sub
in
and
aaa
mov
lcall
loop
rolb
cwtl
xor
sub
fsubl
mov
mov
mov
lods
add
fnsave
jb
mov
enter
das
pop
mov
fildll
out
xor
xchg
loopne
mov
div
inc
push
lret
adc
sub
and
jae
imul
pop
and
jle
sbb
or
adc
scas
jno
pop
mov
in
testl
add
arpl
sub
out
inc
xchg
jge
fsubs
jns
testl
dec
aaa
sub
mov
inc
jg
adc
cmc
add
hlt
lock
dec
or
jl
xor
mov
negl
shl
stos
scas
cli
push
dec
xchg
out
jp
jne
jae
rol
loope
push
lods
test
aad
cmpsl
out
bound
cmpsl
nop
cmpb
inc
stos
xchg
push
add
add
imul
dec
dec
add
jns
push
cld
or
nop
and
in
imul
in
xor
adc
mov
ss
rcr
orl
enter
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
jmp
test
lea
mov
test
sahf
cld
lds
dec
mov
mov
shlb
call
mov
add
xchg
pop
lods
mov
insb
orl
bound
push
push
int
mov
gs
xchg
lods
test
sbb
and
int3
mov
js
pop
roll
adc
cmp
clc
sti
rcrb
xor
jo
jns
push
ret
dec
std
jb
cli
rcl
icebp
adc
rclb
das
jno
xor
jbe
inc
cmp
mov
pop
lret
ljmp
out
movsl
scas
loopne
shrb
dec
sbb
lds
enter
mov
mov
and
mov
jno
xlat
leave
and
shl
pop
xchg
das
add
lahf
mov
xor
test
fldenv
adc
xor
loope
sub
xlat
outsl
jle
repz
jns
push
jo
and
mov
daa
fisttps
add
inc
dec
mov
lock
cmp
flds
add
mov
cmc
mov
sub
inc
rolb
xchg
clc
xlat
mov
push
xchg
xchg
and
inc
stos
jae
cmp
adc
stc
fs
jne
adc
fdivr
in
imul
cwtl
dec
push
push
mov
in
dec
sbb
mov
ja
inc
or
add
add
shlb
push
int3
testb
adc
pop
ret
dec
add
dec
jecxz
andl
add
les
cmp
stos
add
mov
cmp
ds
pop
mov
adc
inc
and
mov
jae
sub
shrb
xor
daa
fdivl
ret
shlb
std
lcall
shrb
mov
dec
rorb
lret
iret
cmp
mov
pop
fidivl
lahf
popf
xchg
dec
push
rcr
push
call
movsl
ljmp
out
mov
nop
add
cli
divb
dec
mov
mov
adc
lahf
andl
mov
lret
cld
mov
scas
pop
xchg
out
mov
jo
ja
jns
sahf
js
or
push
sub
addr16
mov
jg
cwtl
pop
sti
lret
sbb
jg
jne
std
sub
dec
ljmp
jle
or
dec
jbe
pushf
lcall
icebp
mov
cmpsl
xchg
mov
fwait
jecxz
dec
jg
push
pop
sub
subb
std
fisubs
xchg
daa
xchg
add
imul
sbb
jecxz
addr16
lock
in
shlb
ds
and
dec
sub
xchg
lock
test
addr16
lcall
and
xchg
cs
xlat
mov
sbb
out
inc
mov
or
and
mov
and
adc
cmp
mov
test
jmp
gs
daa
imul
cwtl
jbe
nop
iret
loopne
jne
mov
mov
inc
repnz
jae
or
ficoms
cmp
jp
sub
cmpsl
leave
nop
les
jle
mov
iret
sar
dec
xchg
pushf
int3
cmp
movsl
add
sub
xorl
xor
xor
xor
mov
jmp
mov
ds
pushf
test
stc
jo
inc
jmp
mov
mov
xor
cli
pop
inc
push
jb
mov
push
sarl
add
jmp
sti
shll
xchg
xchg
aad
pop
mov
sbb
xor
jns
mov
mov
aad
mov
insb
or
mov
adcl
dec
push
ljmp
mov
fbld
mov
mov
xchg
shlb
outsl
inc
dec
dec
dec
imul
into
xchg
aad
pop
int3
xor
push
cmc
dec
cmp
dec
rorl
push
hlt
shl
xchg
mov
mov
mov
and
popf
loopne
pop
loope
gs
outsb
in
cmp
push
xchg
dec
in
jns
cwtl
in
int
add
add
lcall
cltd
enter
xchg
test
jle
jno
pop
jno
inc
out
pop
mov
sarb
leave
roll
scas
xchg
jp
push
or
cmp
xor
or
lods
inc
es
loop
outsb
push
lods
popa
lret
insb
inc
inc
mov
out
jge
mov
mov
mov
mov
xchg
push
cmp
adcb
cmp
out
fneni(8087
mov
lahf
xor
or
addr16
dec
fstl
add
je
repz
aas
std
not
mov
push
xor
outsb
fcoms
enter
mov
aam
cltd
das
and
mov
mov
jno
jp
and
js
pop
mov
daa
mov
adc
sub
and
loop
sbb
ret
lldt
push
sub
dec
ret
mov
sahf
test
and
scas
test
dec
cmc
jb
clc
fld1
sub
add
iret
pop
bound
fsub
lods
adc
out
push
jno
jle
jg
mov
lods
sub
and
and
add
dec
ds
adc
test
sub
insb
movsl
push
lds
mov
scas
sti
jns
or
lods
out
in
xlat
push
add
lds
jg
add
fstpl
aam
js
push
adcl
adc
dec
dec
sub
das
push
pop
leave
das
pop
xor
lock
and
scas
adc
mov
js
jmp
push
mov
pop
test
sbb
sti
pop
les
std
into
je
fs
and
lea
test
xchg
ret
pop
mov
jne
cwtl
inc
cmpsl
mov
jecxz
ja
xor
out
jns
inc
mov
mov
test
divl
sbbb
cmp
and
mov
outsl
loope
outsb
lret
add
aaa
enter
lds
sub
imul
subb
sub
outsl
test
mov
outsb
push
dec
inc
shrl
mov
mov
or
jecxz
sub
cmpsl
pop
jo
pusha
cmp
xor
pop
addr16
sub
fsub
in
jnp
xchg
jge
ds
pop
or
adc
push
outsb
and
aas
cs
nop
jb
bound
push
mov
push
call
xlat
mov
aam
ret
jge
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
jmp
sbb
pop
lcall
fldl
push
mov
mov
mov
ret
jp
ds
pop
rcrl
sti
add
mov
js
mov
imul
sbb
inc
and
xchg
lea
cld
xchg
mov
ret
movsb
outsb
sub
es
jl
xchg
inc
loope
xlat
sub
dec
pop
insl
jge
mov
xor
xor
xor
popl
xchg
inc
test
and
cwtl
adc
mov
out
cmpsl
fwait
push
imul
adc
icebp
out
repz
lret
and
test
push
or
in
shll
push
les
sarl
into
jnp
lret
xlat
mov
xor
mov
pop
cltd
enter
dec
fwait
aam
and
incb
xchg
in
or
mov
xor
es
mov
movsb
sbb
fs
fsubp
xchg
adc
inc
pop
bt
stos
and
insb
adc
pop
data16
decb
or
dec
xor
xchg
xchg
test
and
xlat
fisttpll
jns
inc
mov
mov
sti
ret
int3
xchg
adc
push
shr
jge
or
mov
sbb
mov
sub
mov
lahf
xor
int3
mov
mov
lds
mov
pop
iret
lcall
imull
pusha
bnd
jae
into
xchg
jecxz
mov
pushf
xchg
out
jae
adc
dec
mov
jmp
rcrl
sbb
test
das
adc
pop
pop
lret
mov
dec
xchg
loope
int
mov
or
lret
lock
out
inc
push
push
sbb
mov
jb
mov
or
xlat
dec
sarb
loopne
mov
push
mov
rorl
pushf
movsl
jb
jl
xchg
mov
cmp
aas
je
push
lcall
mov
clc
or
popf
idivb
and
jo
pop
pop
cltd
mov
inc
je
cs
sbb
repz
popa
imul
push
iret
addr16
mov
in
out
and
std
push
mov
jnp
loope
leave
cltd
mov
addl
push
mov
mov
fwait
add
mov
and
inc
loopne
push
xorl
xor
hlt
testb
test
lahf
movsb
and
int3
sarl
mov
in
inc
pop
inc
faddp
inc
movsl
sbb
xchg
aad
mov
aam
lcall
test
pop
icebp
dec
mov
aas
add
mov
jg
mov
bound
subb
mov
push
jmp
lds
add
inc
sub
pop
mov
icebp
inc
dec
movsl
rolb
or
incb
fidivl
imul
cmpsb
clc
stos
pop
pop
pop
or
bts
xchg
jno
push
int
xchg
xor
call
inc
sbb
cmp
enter
push
xor
test
cli
scas
push
jne
sbb
sbb
ret
jnp
pop
cmp
push
xor
pop
imul
sbb
inc
ficoms
ficoms
andb
xchg
mov
sbb
xor
int
orl
adc
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
jmp
cmp
movsb
inc
movsb
ret
xchg
or
dec
xchg
mov
les
ficompl
xchg
inc
pop
in
mov
ljmp
imul
add
mov
xchg
mov
xor
cs
cmpsb
je
scas
mov
or
icebp
jg
test
adc
adc
sub
bnd
sti
mov
fs
inc
push
imul
adc
iret
lods
mov
jbe
pop
lret
dec
sub
enter
sub
xchg
or
scas
pop
jne
inc
inc
jnp
in
push
insb
cmp
cmpsb
gs
sbb
adc
xlat
push
lock
notl
cmpsl
lcall
jmp
rclb
push
add
xor
sub
dec
in
jo
mov
outsl
stc
sub
adc
out
cmpsb
jns
xor
sar
push
leave
fcoml
dec
push
in
pop
xchg
fdivrs
out
icebp
xchg
daa
divl
sti
sub
gs
mov
les
iret
dec
push
mov
lret
sub
sbb
addb
xor
fmuls
fidivs
test
movsb
inc
mov
cmp
cld
movsb
xchg
lock
and
mov
push
fcompp
inc
imul
sbb
sarb
xor
cmp
rcrl
gs
mov
test
push
and
or
ljmp
call
xchg
or
and
mov
fwait
or
inc
aam
shrl
in
lcall
push
push
xchg
pop
add
jge
cmp
adc
sti
adc
aad
cmp
jg
sub
bound
out
cmp
js
jns
lret
ljmp
inc
add
outsb
xchg
or
mov
hlt
cs
mov
out
lea
pop
push
jl
movsb
cmpsl
and
xchg
sub
inc
jp
ds
pop
cmp
mov
dec
push
int3
fiaddl
movsb
repz
ret
dec
inc
repz
add
pop
dec
mov
loop
and
test
xchg
aam
dec
sbb
pop
push
stos
xchg
fwait
pop
xchg
mov
fldt
je
pop
lahf
out
cmpsb
sub
ja
std
push
add
and
and
popf
popf
push
add
mov
popa
mov
ret
inc
imul
cmp
mov
aas
adc
pusha
cmp
pusha
lret
decb
mov
xchg
pusha
pop
loop
push
jo
rclb
ret
adc
loopne
cmp
popa
bound
sub
xlat
add
and
sbb
jle
aaa
fcmovnb
enter
stc
mov
arpl
shr
iret
pushf
adc
pop
jnp
js
push
in
or
imul
mov
dec
stos
xorb
test
ja
lock
jbe
pop
dec
jg
dec
dec
jno
dec
out
adc
rcll
and
inc
fisttpl
add
mov
and
scas
frstor
adc
add
fdivs
push
dec
mov
mov
in
sbb
dec
dec
std
test
dec
mov
lahf
add
leave
movsl
jns
push
push
and
adc
xor
int3
xchg
add
and
je
jnp
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
jmp
out
pop
jns
jns
mov
repz
shll
mov
mov
xchg
push
mov
addr16
jg
xchg
lods
jge
sti
out
lahf
fisttps
cwtl
and
sbb
out
push
fisubrl
xor
outsl
aaa
ffreep
insl
mov
shlb
adc
xor
xor
pop
adc
dec
or
iret
addr16
push
loope
stc
mov
cmp
test
xchg
mov
cmp
repz
mov
imul
rcll
lret
in
repnz
jp
jno
subl
dec
aam
arpl
arpl
testl
loop
jae
cmpsl
xorb
xlat
fcompl
bound
xchg
jno
xchg
out
fstps
cmpsb
cs
pusha
incb
sub
jb
lahf
xor
addr16
dec
adc
fisubrs
popf
xchg
sbb
dec
pop
leave
inc
mov
jle
fldl
inc
ja
pop
in
sbb
stc
sub
pusha
mov
mov
xchg
push
push
push
out
jg
mov
in
push
imul
scas
out
mov
dec
adc
sbb
fnsave
jae
imul
jge
cli
push
rcl
mov
stos
fcoml
mov
cmp
es
jecxz
sub
xchg
inc
sbb
jg
mov
adc
sti
add
mov
cmp
sub
mov
dec
loop
cmp
xor
and
iret
movsb
ljmp
fimuls
push
popa
lea
mov
test
push
dec
rorl
cmp
push
xchg
mov
lret
xor
aaa
mov
pop
rolb
jl
lret
pop
mov
cmovs
cmc
in
mov
arpl
inc
xor
mov
and
xchg
ja
pop
sbb
adc
lret
pop
xor
ret
nop
inc
iret
ljmp
push
je
push
jb
mov
or
rcr
mov
mov
jb
les
sbbb
out
push
jae
std
fisttps
test
dec
jp
jecxz
shlb
sub
inc
scas
scas
pop
les
out
test
in
movsl
outsb
clc
cmpsb
mov
cmpsl
addr16
mov
icebp
mov
cmpb
inc
out
aam
loopew
std
xlat
loope
data16
cmp
stos
and
stos
ss
jo
les
sarb
mov
lret
add
sti
push
cmp
xchg
jg
or
jl
aad
in
in
decb
xchg
lea
push
adc
lahf
mov
dec
mov
enter
test
dec
cmp
gs
arpl
sub
push
xchg
fstps
aas
negl
movb
or
pop
add
or
jge
loop
or
push
sar
js
lock
cmp
insb
movaps
push
es
repnz
sahf
insl
jne
sbb
push
and
sbb
push
jae
aam
adc
test
decb
sbb
cmc
jno
xchg
nop
cli
xchg
stc
xchg
stos
add
push
push
inc
ret
arpl
test
in
js
movsl
test
js
es
xor
ret
jo
inc
in
pop
subb
nop
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
jmp
xor
cmp
pushf
pop
out
push
pop
scas
xor
mov
les
mov
aaa
addb
hlt
ss
fwait
stos
xchg
leave
test
imul
inc
addr16
sahf
lds
mov
iret
pop
xlat
ret
ret
leave
jb
popl
jg
and
sub
xchg
pop
call
and
ret
lea
pop
sub
sub
or
fsubrl
ja
stos
mov
pushf
dec
sbb
xchg
mov
xchg
rep
push
js
sbb
repz
inc
insl
and
push
lock
and
int3
jb
shlb
dec
out
mov
fisubs
jmp
ficoml
jg
mov
mov
xchg
inc
sbb
out
sbb
mov
ja
cmpsl
scas
inc
into
mov
push
aam
xorl
pop
inc
mov
mov
subl
dec
push
fcmove
jne
xchg
mov
xchg
cli
push
sbb
xchg
mov
shll
scas
into
loopne,pn
test
push
cmc
shl
fdiv
subl
rcr
and
inc
cmp
icebp
inc
sub
pop
pusha
test
daa
jl
pop
pop
sub
enter
sti
lods
ljmp
in
cmp
cmpsb
jmp
stc
mov
push
int
gs
ror
xchg
fstpl
aas
xor
out
xchg
fadds
pop
in
jl
push
lea
loopne
xchg
and
pop
sbb
aas
les
fs
mov
pop
icebp
cmpsb
cmpsb
xor
sub
pushf
loop
aad
and
gs
faddl
arpl
xchg
and
scas
jecxz
lds
aas
ljmp
cld
cld
addr16
fwait
lret
push
negb
dec
or
push
shll
jno
jnp
inc
adc
mov
faddl
pushf
xchg
sbb
xor
inc
outsl
mov
insl
adc
stos
mov
xchg
dec
xor
add
xor
jo
add
xor
in
dec
cmp
sub
cwtl
xchg
jne
fisubl
mov
fwait
hlt
dec
pop
and
xchg
cmp
and
jnp
cli
inc
cmp
fimuls
xchg
xchg
push
inc
mov
sbb
subl
lds
popf
pop
std
pop
lret
jns
mov
jno
nop
or
xchg
pop
inc
sti
lea
pop
int
xchg
add
and
jae
add
in
fdiv
ljmp
cmc
sub
std
xor
idivb
pop
ds
cwtl
jge
add
lea
jmp
jnp
pop
into
jae
mov
sbb
call
movsl
jns
js
or
xchg
adc
push
sbb
aad
inc
mov
adc
mov
pop
push
pop
sbb
fs
mov
call
cli
cmp
test
bnd
jae
xor
lret
ljmp
test
je
in
std
scas
and
sbb
inc
pop
pop
mov
mov
pop
pop
cmp
adc
scas
daa
jnp
mov
and
xchg
ret
pop
xchg
cmpsb
mov
jge
fisubl
dec
xchg
mov
lret
sbb
imul
mov
pushf
mov
shrd
or
shr
or
jmp
sbb
insl
xchg
mov
cmp
xchg
nop
roll
mov
les
mov
in
lods
dec
and
xor
pop
shll
cmpsb
test
xchg
jecxz,pn
aad
push
push
call
insl
shll
jl
rcrl
out
xor
mov
das
mov
cmp
sahf
filds
inc
push
lods
movsb
add
mov
addr16
enter
dec
pop
in
loop
xchg
inc
mov
pop
mov
inc
repnz
fcom
test
sbb
or
stc
test
or
fisubrs
mov
lahf
adc
leave
sub
and
mov
into
jb
movsb
lret
ds
fisubrl
mov
dec
cli
fldenv
mov
sbb
jecxz
mov
arpl
shl
int3
push
dec
jnp
xor
pop
push
and
mov
cmpsb
dec
mov
xchg
adc
pop
xchg
iret
lods
mov
aam
jae
dec
pop
mov
imul
lods
gs
imul
out
inc
daa
jg
sub
and
adc
in
xchg
mov
jnp
stos
dec
ret
jp
loop
xchg
jmp
pop
jae
jmp
sbb
insl
shr
repz
inc
rclb
xchg
out
notl
sbb
xor
cld
aas
xchg
and
xchg
jne
dec
aam
jge
imul
pop
jbe
hlt
fsubs
sarl
fisubrl
xchg
xor
jns
sbbl
push
jecxz
adc
sub
les
dec
movsl
and
loopne
in
push
jle
add
mov
fidivrs
sub
or
pop
int3
xchg
icebp
add
dec
sbb
fs
popf
jo
add
fucomp
adc
mov
mov
mov
pop
mov
or
nop
shrb
mov
adc
cmp
enter
roll
adc
popa
mov
mov
cli
jne
pop
adc
ret
aaa
adc
stos
mov
push
pop
cmp
stos
or
out
dec
and
in
test
jg
push
pop
test
insl
mov
pop
pop
or
rclb
pop
and
pop
les
inc
aad
fs
cld
loope
lret
std
push
lds
jg
pop
add
mov
aad
rcrl
loop
mov
dec
sbb
mov
enter
arpl
mov
push
lds
rcr
sbb
mov
scas
shl
mov
cs
or
jae
dec
dec
push
cld
mov
or
stos
dec
xchg
mov
rcrl
adc
mov
push
insb
aam
insb
leave
jnp
fsubrl
loope
nop
adc
ret
test
outsb
es
jecxz
into
movsl
sbb
in
int
and
cmp
enter
rol
or
cmc
dec
or
bnd
leave
jae
xchg
ret
jbe
psubd
and
push
cmp
movb
outsb
jnp
or
add
testb
test
imul
xchg
push
lret
cmp
sub
adc
cmp
mov
or
pusha
in
into
test
dec
ret
jle
fs
stos
loopne
int
or
cmp
push
xchg
jnp
pop
lret
fistpl
call
xchg
subl
or
add
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
jae
cmp
movl
jae
xorl
shrd
shr
ret
mov
xor
and
movl
shr
ret
xor
xor
ret
push
mov
jmp
addr16
js
jl
jnp
dec
xlat
pop
sahf
cwtl
sahf
ror
jns
mov
in
jne
ret
ret
std
mov
add
inc
je
bound
fistpll
loopne
daa
push
pop
sbb
loopne
mov
cmp
in
repz
out
push
fidivrl
and
xor
je
cmp
add
and
and
icebp
imul
mov
es
xor
repnz
fldl
int
rorl
and
pop
sub
dec
imul
pop
sub
aad
mov
outsl
jno
nop
adc
inc
lea
stos
add
fadd
insl
pop
inc
pop
pop
es
mov
cmp
jne
js
andb
mov
pop
adc
mov
aad
stos
or
or
jmp
xchg
jnp
sub
xlat
and
cmpsb
movsb
mov
orb
test
adc
cmp
std
std
jno
inc
and
sbb
daa
jbe
xchg
gs
sti
cs
pop
ret
jp
cwtl
aad
shll
push
sahf
clc
sahf
popa
jge
push
loope
push
sahf
xor
inc
ds
xor
std
xchg
aas
jae
or
mov
xorb
sub
fistpll
sub
cwtl
aas
sub
dec
add
insl
test
faddl
fcoms
push
sub
xor
paddb
mov
shll
out
aas
inc
and
leave
mov
sbb
shrb
xchg
dec
popf
push
in
lods
lea
sbbb
insl
movsl
sbb
mov
clc
lret
adc
or
and
lret
ror
pop
jns
adc
sub
and
xchg
mov
clc
bound
test
ficoml
icebp
mov
sbb
xor
and
add
notb
inc
sbb
sub
add
dec
mov
add
dec
mov
mov
loope
or
sub
jg
lcallw
pop
jge
jmp
and
or
dec
dec
xor
push
jbe
xchg
sbb
xchg
jmp
aaa
and
repz
pop
cld
and
into
push
scas
popf
dec
outsb
inc
nop
xchg
call
mov
neg
mov
adcl
jmp
outsl
in
rcrb
retw
dec
jo
decb
jns
mov
xchg
inc
mov
fimull
icebp
xchg
rol
or
ss
and
idivl
sahf
mov
cltd
dec
in
push
repz
mov
int3
lods
mov
outsl
jne
xor
dec
aaa
jp
fldcw
push
sarb
loopne
fisubrs
xor
and
add
dec
jnp
dec
icebp
dec
cmp
loope
mov
inc
fstps
mov
adc
cmpsb
out
fdivs
imul
add
or
test
fisttpl
ss
popf
jae
bound
insb
lods
addr16
pushl
cld
jae
iret
jg
pop
sti
mov
xchg
je
add
add
bound
sub
jmp
jp
or
jo
cmp
in
hlt
ret
lret
inc
test
dec
mov
stos
push
decl
or
lcall
and
push
fwait
jg
pop
cwtl
cmp
les
dec
jle
in
mov
std
mov
and
dec
dec
dec
arpl
xor
dec
int
lods
hlt
sbbb
dec
mov
iret
inc
jbe
jno
lret
inc
jg
insl
popf
int
dec
rcrb
aas
jne
insb
xor
lock
imul
xor
lcall
adc
stos
pop
adc
in
sbb
cmp
sub
and
pop
xchg
ret
xor
fstl
fld
mov
inc
push
sub
int
xlat
jmp
pop
and
push
aaa
add
pop
xchg
and
mov
sub
fildl
das
push
or
jg
fists
or
jg
xor
add
sar
jmp
dec
xor
dec
stos
xchg
pop
int3
mov
ds
pusha
insl
jge
shl
movsb
xchg
jge
xchg
xlat
inc
sub
pop
insl
sbb
les
xor
xchg
sbb
or
push
jno
jno
jae
test
sub
cmp
stos
or
lcall
or
push
push
sar
sub
int3
in
rcr
das
push
sbb
jge
push
iret
and
xchg
cmc
pusha
cmp
repz
insb
hlt
xchg
xchg
sub
add
inc
out
je
sbb
pusha
add
clc
test
mov
lret
mov
cmpl
movl
movl
jmp
not
movl
cmpl
jae
push
push
push
call
sub
and
adc
mov
add
negl
xor
orl
movl
movl
movl
sbb
push
movl
xor
xor
mov
sub
or
movl
push
or
movl
and
mov
and
mov
subl
push
orl
push
sbbl
push
call
and
mov
mov
andl
push
andl
or
push
or
xor
xor
xorl
push
push
orl
call
mov
xor
mov
mov
and
jmp
aam
jp
mov
ret
leave
mov
mov
mov
add
or
sub
in
lods
pop
xchg
jp
sbb
pushf
push
call
cmp
cmc
and
sub
xor
dec
jge
imul
ficomps
mov
and
sub
cmc
dec
andb
add
loop
adc
add
lcall
es
push
xchg
test
clc
iret
xor
pop
sahf
pop
sahf
lock
pop
jb
pushf
xlat
imul
jg
push
call
lds
and
mov
xor
push
and
stos
jp
xor
clc
xor
sarb
xor
mov
daa
or
mov
adc
lods
jns
sahf
xor
pop
sub
loope
mov
push
enter
mov
pusha
das
add
fisubl
xor
dec
frstor
adc
test
cmpsl
pop
rolb
jp
jmp
and
mov
js
lock
sarb
and
pop
jl
mov
jnp
mov
test
push
test
das
xchg
lret
sub
and
or
fldenv
in
outsl
adc
stc
sbbb
mov
mov
push
adc
jp
push
and
jle
cli
ljmp
sbb
mov
testb
jmp
movsl
sbb
ret
xchg
mov
cmp
outsl
mov
stc
divl
lret
mov
push
xor
stc
arpl
das
and
popa
adc
int3
xor
daa
cmp
fistps
mov
mov
lahf
xchg
sbb
enter
in
and
and
test
jb
push
or
jbe
movsb
fcomp
and
hlt
cld
jbe
fcompl
mov
pop
into
pusha
mov
xchg
push
sub
cli
and
and
nop
pop
jge
outsb
rclb
fstps
nop
fdivr
aaa
ret
sti
and
xchg
in
cmp
mov
push
sbbl
into
inc
mov
sub
cmp
cvtps2pi
ss
mov
mov
mov
or
ret
xchg
js
or
and
adc
xchg
inc
adc
jne
adcl
push
decl
push
notl
push
adcl
push
sbbl
call
mov
cmpl
mov
movl
mov
jmp
movzbl
mov
cmpl
jb
push
push
call
andl
add
or
adc
sbb
sbbl
add
mov
movl
movl
orl
movl
sub
movl
mov
mov
adc
movl
orl
movl
mov
adc
mov
add
mov
cmpl
mov
mov
movl
jmp
mov
mov
cmpl
jg
push
call
xor
sbb
decl
mov
xor
and
dec
cmpl
movl
movzbl
mov
jmp
movl
cmpl
jae
pushl
push
pushl
call
or
sbb
and
decl
or
addl
sbbl
mov
add
movl
adc
xorl
or
movl
mov
or
subl
mov
or
movzbl
xor
mov
mov
or
mov
or
negl
or
movl
cmp
movl
jne
movl
cmp
movl
je
xor
or
adc
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
jmp
and
sub
dec
test
xchg
stos
sub
xacquire
mov
shrl
or
popf
push
jo
das
push
pop
subl
dec
sbb
add
mov
mov
sbb
and
sar
pop
sub
or
mov
arpl
fiadds
mov
jnp
jl
add
enter
xchg
loope
mov
xor
fldt
jecxz
mov
sbb
jno
sbb
aam
in
dec
mov
push
popf
rorb
pop
inc
jnp
cmp
xchg
xor
and
xchg
xchg
or
dec
hlt
fildl
into
push
mov
push
mov
jne
or
pusha
sbb
outsb
out
movaps
ja
lods
loope
mov
xchg
pop
mov
jbe
rcr
or
imul
loop
cmp
ss
into
bound
jno
sbb
enter
dec
outsl
lret
mov
xlat
outsb
negl
lds
pushf
jb
ret
mov
cmpsl
inc
push
push
inc
nop
add
sarb
or
jne
sub
mov
lock
dec
aas
inc
pop
and
and
icebp
jno
cmp
fcomps
sbb
xchg
pop
jp
sarb
sti
pop
xor
mov
fisttps
es
adc
aam
loopne,pn
dec
and
popf
stc
cwtl
sbb
imul
jb
pop
sahf
xchg
jmp
xor
imulb
mov
std
ficomps
push
repz
std
repnz
jbe
pop
lds
jge
ss
ror
test
leave
jae
andb
popf
jmp
push
lea
xchg
or
inc
ffree
cmpsl
dec
and
stos
fiaddl
test
add
dec
movsl
inc
decb
popf
loope
pop
cmp
mov
push
and
pop
sbb
ret
mov
dec
and
sub
mov
add
jnp
sarb
pop
scas
inc
pop
pop
ds
shrb
pop
mov
sarb
test
mov
xchg
sbb
call
xchg
jne
imul
sbb
lea
pop
icebp
pop
jne
dec
les
popf
adc
xor
mov
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
jmp
mov
mov
mov
mov
jecxz
xorl
scas
mov
mov
xor
sarb
mov
push
cli
push
mov
testl
push
mov
sbb
xor
sti
std
xchg
movsb
cmpsl
dec
test
jb
repnz
fldl
mov
cbtw
cmpsl
lea
aaa
sub
cmp
add
xchg
test
push
xor
das
jbe
mov
mov
and
sbb
mov
jle
cld
push
sti
add
and
pop
repz
add
js
in
and
imul
imul
int
sbb
add
and
and
mov
and
mov
pop
mov
int3
lahf
mov
and
daa
or
ret
xor
sbb
shrb
mov
dec
xchg
or
push
jb
push
daa
loop
popf
mov
dec
add
dec
ret
imul
xor
fisttpll
in
ja
shlb
ds
dec
scas
in
inc
jle
mov
je
sub
jl
cmp
adc
ficoml
xchg
xchg
mov
dec
lea
arpl
xor
xchg
insl
jmp
pop
ret
or
icebp
aad
inc
mov
add
mov
dec
mov
fistl
rcll
mov
sbb
lock
sbb
mov
loope
push
mov
sarb
cmp
mov
push
dec
lods
jbe
movsl
mov
pop
add
lret
fcmovnbe
and
cmp
fstpl
push
lods
cmpsl
es
mov
jns
sub
aad
and
mov
and
sub
cld
stc
mov
out
cmp
dec
jle
push
ja
int
cld
xchg
imul
pop
and
mul
jne
gs
jnp
aam
push
dec
inc
movsl
push
into
ret
je
inc
inc
addps
movl
push
add
pop
cmpl
jp
outsb
push
adc
roll
sahf
aas
test
jno
pusha
push
cmp
ret
or
mull
add
jmp
and
mov
cmp
stc
sbb
inc
cwtl
adc
cli
add
add
std
addr16
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
popa
nop
popf
cmpsl
mov
imul
mov
mov
mov
dec
mov
xchg
fstl
mov
mov
jbe
outsl
xchg
jge
pop
stos
pop
mov
add
cmp
stos
fimuls
push
adc
cmpsb
sub
popa
popa
inc
add
cli
push
jecxz
or
movsb
fidivrs
and
mov
push
mov
mov
fcomi
stos
xchg
push
mov
fmuls
add
arpl
adc
push
out
aas
jg
sub
mov
pop
jo
enter
mov
je
push
mov
lds
add
popa
and
rcl
ds
push
mov
arpl
xchg
roll
inc
add
jmp
mov
inc
push
lock
dec
iret
into
sub
cmp
test
and
mov
lods
pop
decl
fwait
cli
push
push
sbb
inc
rol
add
arpl
xchg
cmp
adc
mull
js
out
clc
xor
xor
dec
sbb
inc
dec
cmpsb
cmp
mov
shl
sbb
xor
bound
dec
cs
mov
mov
enter
mov
movsb
pop
ss
jne
lret
inc
xchg
outsl
cltd
dec
mov
lods
in
mov
mov
push
jbe
cmp
movsb
dec
xchg
icebp
push
je
shrl
xor
mov
addr16
mov
or
jb
mov
pop
stc
mov
pushf
xchg
push
inc
sti
xor
and
mov
pop
xor
notb
es
loopne
ficoms
sub
and
sarl
mov
xor
xor
repz
cli
lock
mov
inc
scas
ljmp
pop
cmp
lret
inc
and
and
in
xor
repnz
or
repz
nop
sahf
jnp
add
out
cmpsb
repz
je
mov
jle
mov
lds
bound
inc
movsl
gs
cs
dec
or
cwtl
mov
inc
jmp
push
les
xor
or
mov
push
mov
add
in
aam
popa
mov
push
or
jge
ljmp
lods
rolb
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
mov
pushf
mov
jecxz
push
push
sahf
es
mov
mov
out
cmp
cli
pop
mov
or
add
imul
imul
dec
out
and
push
movsl
repz
stos
lahf
xchg
inc
xchg
push
movsl
int3
adc
xor
dec
xchg
sub
pop
jnp
cmp
leave
or
xchg
in
les
adc
inc
xor
lods
push
jecxz
add
xlat
dec
lcall
xchg
cmpsl
push
push
pop
cmp
bound
lea
xchg
xor
xor
insb
add
jnp
mov
je
mov
sahf
and
out
cmp
cmp
pop
icebp
ljmp
pop
push
aad
xchg
loop
aad
inc
mov
xor
aad
mov
pop
adc
sbb
cmovb
loopne
movl
leave
lahf
pop
stos
sub
test
shr
int3
cmp
imulb
xchg
lds
mov
adc
lods
into
mov
jge
repnz
aaa
or
push
sub
inc
movsb
mov
mov
insb
int
das
test
lock
ja
pop
leave
jp
cmp
test
jmp
mov
xor
addr16
adc
out
hlt
xchg
inc
push
inc
xchg
sub
dec
insl
sbb
out
out
or
out
dec
inc
and
or
test
dec
out
ret
aas
in
push
lds
sbb
inc
sar
loope
cmp
cmpsb
jle
int3
pop
jge
cmpsl
neg
lea
and
mov
dec
addr16
out
imul
aam
push
dec
imul
xor
mov
mov
mov
pop
stos
sub
ret
and
sbb
and
pop
aaa
ret
push
and
xor
jb
out
push
dec
call
icebp
dec
pop
sbb
sbb
imull
cmp
lcall
in
add
lods
cs
mov
jp
mov
js
adc
clc
and
mov
sub
or
mov
test
jl
pop
adc
inc
jl
dec
cmp
stos
imull
inc
dec
test
mov
sub
dec
mov
inc
out
rcrl
aam
scas
lahf
xor
sbb
loop
adc
mov
inc
fwait
inc
cmp
lds
cmpsb
cmp
inc
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
jmp
insl
shr
jl
scas
sub
movsb
int
mov
adc
mov
sarl
sub
push
push
cmpsl
push
jne
push
test
lods
xchg
aas
popa
or
jno
adc
mov
enter
and
jb
push
adc
loope
imul
aad
call
andl
nop
push
mov
stos
inc
pop
add
push
push
dec
imul
pop
mov
mov
lret
or
mov
stc
jp
xchg
adc
mov
mov
dec
out
or
sbb
inc
xchg
enter
lods
pushf
push
add
xchg
mov
mov
pop
sub
sahf
into
je
xchg
fadds
add
sbb
das
je
orl
fiaddl
lds
icebp
test
pushw
loope
sarb
xor
out
mov
jae
ds
sbb
ret
shl
test
test
mov
lea
test
fiadds
movsb
imul
addr16
outsb
cmc
and
adc
test
dec
je
add
adc
int3
aam
les
fwait
out
sub
adc
pop
jnp
cmp
cmc
insb
dec
call
push
or
mov
dec
cltd
mov
dec
mov
fbstp
imul
fcoml
adc
in
pop
mov
mov
or
jg
ja
adc
xchg
aad
imul
inc
fwait
sub
loopne
sub
sub
inc
sub
sub
into
cld
dec
daa
rcrb
add
push
les
mov
jle
data16
mov
out
inc
shl
repnz
sub
xchg
push
sarb
es
push
inc
dec
int
pusha
leave
test
movsl
xchg
test
sarb
out
jecxz
sbb
mov
popa
fisubl
mov
mov
icebp
outsl
jo
es
push
test
lds
not
and
sub
mov
cmp
out
lea
cli
pop
sbb
and
movsb
sub
cmp
pop
shrb
jge
stc
mov
jae
movsl
pop
lret
ret
lahf
movsl
xor
sahf
or
cli
lds
dec
loope
mov
mov
jg
lock
add
ljmp
mov
dec
insl
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
jmp
lds
mov
and
sahf
xor
test
lahf
mov
mov
movsl
sub
inc
xchg
mov
call
aaa
pop
mov
xchg
data16
mov
push
nop
mov
insl
cmp
or
jg
mov
sbb
test
pop
rcrl
pop
scas
pop
ds
cmpsb
sbb
jp
mov
ja
jecxz
lock
aad
xor
call
stos
iret
cmpsb
aad
and
sub
cmpl
ret
in
in
out
pop
loopne
or
pop
insb
cmp
push
xor
insl
xchg
ret
cmp
out
pop
lock
inc
les
sub
es
adc
lods
mov
imul
xor
xor
mov
add
and
mov
xchg
push
xchg
xor
and
mov
lods
pop
mov
mov
clc
or
jmp
test
sbb
push
insb
mov
roll
cld
rclb
in
pusha
in
lret
jne
mov
in
in
adc
rclb
jne
shlb
mulb
mov
loope
mov
pushf
ret
adc
lahf
jns
and
mov
xchg
pusha
in
js
sub
mov
and
jmp
enter
inc
leave
negl
stos
fadds
mov
loope
jbe
mull
push
jbe
stc
je
fisubl
imul
repnz
add
inc
gs
inc
adc
push
int3
lret
or
cmpsl
or
sbb
push
jo
sub
sar
inc
xor
mov
lods
in
push
out
dec
in
cmc
cmc
into
dec
hlt
mov
mov
ss
inc
adc
leave
xchg
add
xor
pop
mov
sarl
cwtl
outsb
mov
xlat
mov
int
nop
mov
addr16
out
pop
inc
mov
aaa
sub
ljmp
jecxz
enter
imul
push
add
sti
xor
xor
xorb
xchg
mov
fs
lods
leave
add
ljmp
mov
movsl
call
jp
mov
mov
test
adc
repnz
addb
jns
inc
mov
or
push
push
jmp
mov
add
mov
cmp
dec
repz
sbbb
xchg
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
jmp
popa
clc
jnp
jl
imul
xchg
icebp
test
ljmp
mov
or
or
cmc
jbe
and
insl
fmul
sbb
add
xor
and
loope
jne
push
adc
not
push
shlb
add
imulb
push
divl
cmp
push
imul
mov
mov
inc
in
sti
cmpb
cli
or
adc
xchg
std
icebp
fdivrs
jmp
and
popa
icebp
outsl
clc
mov
std
in
dec
mov
add
cli
fldl
push
mov
rcrl
xor
out
repz
xlat
ror
lret
add
xor
fwait
sahf
xchg
push
pushf
movsb
mov
rcrb
stc
mov
shl
jge
push
stc
lods
icebp
adc
inc
sbb
dec
call
fcmovnb
pop
sbb
dec
cltd
clc
sbb
outsb
je
add
jo
add
arpl
dec
dec
andb
pusha
faddl
inc
into
mov
outsl
inc
lock
add
jmp
or
pop
inc
hlt
mov
jecxz
test
push
adc
in
insb
push
jmp
mov
dec
push
cld
loopne
pop
cli
adc
movsb
xor
pop
xchg
lcall
test
cmp
repz
dec
and
mov
inc
jp
std
andb
sbb
aad
push
in
enter
jbe
mov
or
mov
and
out
fisubrl
xor
adc
orb
lret
int3
aaa
sub
or
lods
test
add
lea
ret
xor
mov
ret
adc
or
insb
rcl
cs
or
cmpsb
xchg
shlb
rolb
mov
sbb
mov
add
ficoml
jmp
inc
push
imulb
leave
xor
mov
ret
pop
cmp
fisubrs
iret
lods
pop
jnp
jo
adc
stos
or
out
cmp
cs
mov
xlat
push
movsb
pusha
sub
cmp
ret
xor
xchg
jmp
sbb
test
fldt
push
aas
call
ds
adc
or
sbb
cs
ljmp
ror
les
push
and
jbe
dec
fdivrl
xor
jg
cmp
push
flds
push
sub
jge
aas
ja
rcll
pushf
out
add
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
jmp
dec
sub
test
and
rcl
test
mov
fildl
movsl
jnp
addr16
lea
iret
add
mov
gs
leave
sarl
js
call
loopne
std
adc
add
sub
mov
popa
and
or
adc
lret
pop
mov
xor
prefetchwt1
scas
repnz
je
mov
xor
popf
xor
mov
gs
test
rcrb
clc
fnstsw
sbb
push
dec
hlt
push
movsb
xorb
sti
int
adc
dec
stos
sbb
in
rcl
sbb
push
bound
sbb
or
out
dec
or
jnp
lds
sbb
cltd
push
xchg
and
cld
mov
jle
faddl
xor
and
test
iret
ret
or
lcall
test
adc
push
push
shll
inc
shll
pop
jo
jle
stos
inc
or
cmp
test
dec
repnz
or
adc
inc
xchg
or
xor
into
jns
mov
cmpsl
xchg
in
xor
inc
xor
fs
mov
aaa
jb
dec
xchg
popl
sahf
addr16
mov
sub
aas
mov
test
mov
sbb
mov
pushf
out
stos
cmp
or
cmpsl
jg
fstps
leave
pop
adc
fistpl
lret
and
mov
push
or
lods
out
imul
push
mov
js
out
pop
push
iret
scas
pop
mov
cli
sbb
loope
mov
mov
sub
push
inc
sub
insl
xorb
loop
cmpsb
scas
inc
rcrb
adcb
psubw
jmp
mov
inc
xor
test
pop
shlb
dec
pop
jge
mov
popf
dec
fnsave
fmuls
push
aam
lcall
adc
mov
test
push
cmp
popa
sahf
rol
out
mov
bound
and
mov
sti
inc
push
add
dec
icebp
ja
lret
cmpsl
lcall
push
pop
cli
inc
mov
pop
hlt
xchg
cmpl
xor
stos
or
cmp
or
enter
pop
mov
mov
inc
mov
dec
mov
ret
mov
and
sbb
repnz
xchg
dec
inc
jo
daa
test
pop
loopne
scas
rorl
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
jmp
stos
mov
sub
inc
fstp
jg
rol
scas
mov
mov
fcompl
popf
mov
push
lods
pop
rcr
out
lods
cmp
xor
es
jne
mov
rorl
mov
fldcw
push
in
fs
xchg
and
mov
lods
and
jg
clc
sub
jl
cld
mov
pop
stos
sahf
lret
sub
lock
pop
jl
inc
popf
loopne
mov
push
push
es
pop
insb
dec
lcall
leave
shr
cli
rcrb
mov
jbe
xor
xor
cs
cs
stc
scas
pop
je
sbb
push
lahf
pop
out
push
jg
daa
jbe
sbb
xor
mov
pop
sbbl
push
hlt
cmp
jae
popf
fldenv
test
xchg
hlt
fildl
mov
or
out
mov
jno
fwait
jl
dec
loopne
or
popf
cwtl
fcom
dec
push
sub
cmp
jns
je
sub
popf
mov
icebp
ret
pop
sub
and
xor
pop
dec
pop
lret
loopne
pop
scas
shrb
or
adc
rcrb
mov
subl
in
adc
push
cmp
add
mov
cmp
pop
nop
cli
or
mov
push
jecxz
into
sarl
sahf
test
fnstsw
jb
pop
pop
ljmp
sarl
inc
outsl
pop
mov
pop
jnp
testb
cltd
insb
sti
adc
pop
scas
fsubl
jae
iret
push
mov
rcll
sbb
xchg
pop
lods
clc
call
sahf
test
out
ja
mov
outsl
xor
and
nop
insb
pop
xchg
int3
mov
lret
xchg
fldt
sbb
pop
mov
xor
aam
popf
enter
mov
sub
iret
mov
push
lods
leave
out
mov
jo
adcb
fmull
loop
push
add
pop
call
push
push
jp
fs
ds
stos
sub
pop
bound
icebp
pop
fwait
mov
push
stos
jo
outsl
and
or
adc
mov
sub
in
popf
mov
loope
cli
inc
and
cltd
faddp
in
scas
mov
pop
mov
xor
mov
mov
in
lret
shlb
xchg
and
leave
pop
clc
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
jmp
dec
mov
push
mov
pushf
mov
xor
mov
mov
jne
cmp
test
notb
out
imul
addr16
fcomp
push
or
cmp
dec
int
adc
cltd
pop
scas
push
out
fildl
mov
imul
testb
insb
arpl
in
dec
enter
mov
push
ja
cmp
or
fst
lea
jecxz
dec
cmp
mov
pop
fcoms
bound
sbbl
lcall
sbb
push
loope
jmp
aad
aas
or
xor
cs
cmp
cli
test
cmp
sbb
int3
jnp
sahf
gs
mov
mov
iret
inc
test
je
sti
fidivl
out
sub
aad
enter
sti
mov
cmp
test
scas
jne
and
sbb
add
and
or
mov
rcl
insb
movsb
or
lods
xor
mov
mov
pop
cmp
jne
push
test
mov
pop
push
enter
inc
inc
stos
and
jmp
push
addr16
dec
ljmp
sti
aas
popf
add
push
and
loope
jno
shll
in
pop
sub
or
inc
mov
xchg
into
jno
or
test
pop
xor
scas
inc
sbb
rcrl
fsubrl
inc
and
or
dec
xor
hlt
and
mov
cmp
in
outsl
cmp
push
ror
les
push
movsb
pop
dec
mov
dec
fisubs
jno
fcom
xchg
stos
fwait
jge
es
xor
sbb
push
xchg
gs
mov
scas
mov
jae
insl
jl
icebp
mov
adc
test
mov
inc
or
cmp
push
sub
cld
pop
adc
jbe
pop
pushf
jno
add
dec
jns
lret
sbb
ss
mov
outsl
sarl
fdivrl
dec
adc
notb
xchg
adc
sbb
jle
jb
xlat
xchg
push
call
fstl
adc
pop
or
jb
inc
and
pop
add
or
popf
jecxz
hlt
sar
mov
add
outsb
push
loop
popa
fcmovu
push
outsb
repnz
dec
xchg
into
dec
lock
inc
adc
sbb
dec
jnp
xchg
vmovss
test
int3
jbe
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
or
or
sbb
or
mov
xor
lcall
mov
dec
mov
inc
es
sub
or
outsl
in
lods
jecxz
fnstcw
test
inc
mov
mov
scas
cmpsl
gs
and
iret
popf
jbe
aad
sbbl
cmp
in
sar
cmpsl
aas
aas
push
or
cwtl
cmpsl
stc
and
stos
rorb
inc
lret
xchg
add
cmp
mov
bound
fdivrl
inc
hlt
push
adc
mov
mov
inc
mov
insl
mov
test
dec
mov
add
fstl
stos
xor
es
bound
cli
or
dec
cmp
push
dec
fadd
dec
in
jne
fsts
test
sti
imul
inc
sti
icebp
daa
mov
outsl
arpl
sbb
dec
data16
ficoml
cmp
gs
adc
int3
pushf
jmp
inc
fistl
cmc
mov
pop
fdivl
xchg
push
pop
sarl
jmp
pop
pop
pop
push
shlb
fimull
ja
mov
enter
lock
push
decb
mov
jne
mov
mov
or
push
jge
leave
cmp
cli
mov
negl
jecxz
xchg
decl
add
pop
mov
arpl
xchg
sbb
and
mov
and
fwait
cmc
or
outsb
or
pushf
and
dec
je
fs
push
sarb
rcrb
push
pop
add
popa
inc
clc
xchg
ljmp
iret
outsb
fdivl
sbb
or
jae
inc
insb
cmc
xchg
pop
mov
sarl
dec
cmp
stc
jge
repnz
push
insl
xor
add
inc
daa
or
and
sarb
sub
xor
jbe
dec
dec
sar
or
inc
fcomps
inc
mov
mov
int
mov
movsl
js
and
ret
pop
outsb
in
jmp
ds
pop
lods
fwait
es
add
lods
cmpb
mov
mov
add
xor
int
insl
or
xchg
insb
repz
aam
out
cmpsb
lcall
sub
add
xchg
push
lret
stos
orb
aaa
mulb
outsb
mov
dec
pop
xorl
clc
dec
cmp
outsb
xchg
inc
pusha
mov
dec
add
sbb
rclb
jl
dec
mov
pop
jne
ror
pop
adc
mov
adc
sti
ljmp
shll
loop
xchg
loop
jg
lds
mov
or
push
inc
push
jnp
push
xchg
dec
in
push
mull
inc
mov
aam
cmpb
push
xchg
dec
add
sahf
cltd
shlb
mov
insb
pop
add
leave
mov
adc
push
xchg
fsincos
xor
loopne
dec
mov
test
lret
sbb
jg
outsl
add
mov
cltd
pop
add
fcomip
push
xchg
rsqrtps
outsb
hlt
adc
sbb
add
xor
gs
and
mov
stos
in
or
cld
es
adc
in
arpl
test
adc
das
mov
sbb
fwait
scas
out
dec
xor
stos
sub
daa
int
addl
mov
dec
inc
cwtl
ljmp
fsts
insl
rcll
lods
sti
lods
mov
clc
dec
aas
jecxz
push
shl
faddl
dec
push
mov
xor
push
push
mov
or
cmpsl
mov
into
ud0
pop
leave
add
xchg
mov
adc
gs
rol
in
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
jmp
lret
leave
hlt
fsincos
out
and
imull
iret
outsb
mov
mov
ret
xor
jg
add
sub
andps
cmp
dec
cwtl
lea
gs
mov
or
pop
cmpsl
int3
pop
ret
pop
dec
notb
cmpsb
adc
ljmp
faddl
mov
cmp
ja
aas
inc
cmp
repz
cmpsb
shrb
or
fsubrl
or
and
mov
lcall
mov
lods
shll
shl
push
xchg
sbb
idivb
inc
into
mov
xor
nop
les
cli
lods
dec
out
push
aas
shlb
fwait
cmp
ljmp
inc
mov
loope
or
pop
jl
push
adc
dec
xor
jge
push
div
push
jns
push
adc
inc
jmp
mov
and
dec
sbb
mov
cmpsb
add
adc
fwait
stos
cwtl
aas
jmp
in
das
xor
mov
xchg
add
cmp
das
es
and
or
add
mov
mov
and
in
cwtl
movsb
or
sbb
es
rolb
dec
pop
icebp
pop
add
push
xor
push
lds
push
data16
sub
or
int3
push
int3
pop
xchg
push
jne
push
cltd
cwtl
xchg
push
decb
jecxz
mov
mov
aam
jge
sbb
call
jmp
sbb
mov
in
inc
and
ret
repz
push
les
jbe
shrb
mov
call
mov
sbb
mov
aad
je
imul
in
gs
mov
and
pop
iret
shl
rcr
cmp
sub
add
scas
cvtps2pd
dec
jl
inc
iret
das
push
jg
rorl
imul
lock
cmpsl
mov
push
mov
ss
sub
mov
hlt
pusha
xor
jne
or
jle
dec
adc
mov
mov
jns
inc
dec
pop
pop
push
pop
adc
mov
fistpl
xchg
in
in
jno
xchg
subl
dec
stc
add
test
or
stos
sar
rolb
movsb
add
test
cmp
inc
add
jecxz
stc
adc
cmpsb
or
cmp
adc
call
ret
sub
ret
fisttpll
cmp
cmc
dec
fildll
ja
jb
out
pop
cltd
jne
dec
loop
outsl
iret
shr
data16
sahf
mov
or
or
lods
xchg
dec
pushl
mov
negl
push
push
and
push
dec
out
ljmp
lcall
cld
sub
mov
add
int
and
repnz
dec
jno
in
std
sbb
mov
push
cmc
jbe
dec
rcrl
mov
out
pop
fwait
mov
add
xchg
cmc
inc
or
mov
xor
and
add
mov
cld
out
dec
xchg
sahf
inc
cs
cmp
push
mov
jo
cs
pushf
je
pusha
sbb
sarl
out
inc
stos
mov
mov
outsb
mov
decl
cmp
mov
cmp
leave
cmp
iret
movsl
sti
mov
mov
popa
aad
mov
jecxz
dec
stos
fiaddl
loope
fdivr
jmp
dec
xor
rcrl
xor
in
sahf
loope
mov
pop
jo
mov
in
into
xchg
jl
sarb
cmp
add
or
sbb
mov
sbb
xchg
das
test
adc
jle
cs
bound
pushf
in
xor
rolb
inc
cld
test
add
inc
clc
lahf
jl
add
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
jmp
std
jno
dec
mov
rcrl
nop
inc
mov
mov
mov
cmp
mov
mov
push
mov
xchg
out
xchg
push
xor
aam
add
pop
stc
jbe
pop
jmp
push
in
jb
jb
sbb
les
mov
adc
adc
pop
arpl
scas
mov
push
aad
push
cmp
mov
add
dec
sub
jno
daa
lahf
rorl
and
adc
xchg
fcmovnu
xchg
bound
mov
jbe
fldenv
sub
dec
push
cmp
xchg
sbb
divl
or
adc
mov
jne
sub
out
testb
movsl
inc
sbb
dec
int
xchg
mov
decl
iret
cmp
xlat
int
in
shlb
mov
aam
cmc
sub
insb
insb
lret
mov
and
lods
dec
cmp
out
rorl
or
mov
and
xchg
pop
mov
shrl
mov
popa
jbe
xor
cmp
jg
pop
sbb
dec
or
fstpt
fnsave
in
or
mov
pop
pusha
inc
or
add
mov
sbb
ret
or
lret
mov
das
cmpsl
push
out
pop
test
int3
fists
repz
jae
push
jns
mov
arpl
adc
xorl
pop
sti
adc
pop
pop
in
xchg
inc
cli
adc
loopne
aas
dec
outsb
movb
pop
es
fstenv
inc
prefetchwt1
int
push
push
or
xchg
sub
push
fwait
mov
ret
out
push
jl
outsb
adc
dec
xchg
sub
sbb
imul
inc
in
call
mov
xor
insl
in
hlt
mov
pop
js
xor
aas
sbb
or
pop
push
push
jnp
jg
in
roll
or
je
sub
testl
sahf
jmp
dec
imul
outsl
push
inc
mov
cmpl
cmp
mov
in
mov
mov
cmpsl
daa
jecxz
inc
in
outsb
std
mov
xor
sub
sbb
test
arpl
rcl
lods
outsl
xor
mov
loop
rcll
sbbb
adc
aas
mov
cmc
out
lret
inc
mov
cmpsb
mov
mov
loope,pt
jo
cs
pusha
jae
ret
icebp
dec
test
enter
push
movsb
rcr
cmc
in
and
push
add
ror
and
mov
pop
push
in
dec
data16
push
xchg
and
cltd
inc
scas
jl
xlat
enter
movsl
pop
ja
inc
movsl
mov
and
dec
jp
in
mov
mov
inc
and
xchg
jge
mov
and
in
fnsave
ljmp
mov
adc
repz
push
dec
sarl
fstl
jnp
pushf
cld
pop
insb
movsb
pop
cmpsb
stc
push
test
mov
xchg
sub
inc
jmp
sub
pop
std
pushf
mov
mov
dec
js
inc
xchg
push
xchg
fldenv
cmpsb
repnz
xchg
xchg
imul
leave
shrb
test
or
pop
cli
gs
push
xchg
fucom
mov
jae
push
push
in
or
cmp
sbb
jge
sbbb
and
scas
sub
fwait
movsl
out
mov
gs
add
xor
xchg
mov
pop
sub
sub
push
dec
mov
cmp
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
outsl
mov
ja
or
jecxz
iret
mov
mov
jcxz
movsb
jl
mov
pop
xchg
cltd
xchg
cmp
test
xlat
mov
cmp
jmp
jle
dec
push
mov
aaa
pop
out
mov
xor
add
jge
scas
pop
sbb
or
mov
insl
push
push
mov
popf
cmpb
stos
gs
cmp
insb
pop
cwtl
fwait
inc
ficoms
popa
cld
clc
out
aad
pop
dec
sti
xor
mov
movl
pop
adc
lods
pop
and
cmpsb
mov
call
sar
jo
adc
pop
jmp
push
leave
jge
dec
and
popa
insb
inc
or
pop
cmpsl
in
repz
xor
movsb
jmp
pop
xchg
xchg
sbb
int3
js
je
icebp
and
imul
incl
cld
divb
das
jne
xlat
xchg
lret
jnp
je
jecxz
mov
stc
sub
push
lock
rolb
mov
push
imul
jb
mov
fs
mov
outsl
pop
stos
mov
jmp
out
pusha
out
jns
fcomip
sbb
jno
test
jecxz
lock
in
divl
and
sbb
les
add
inc
xchg
push
push
push
mov
inc
outsl
sbb
xorb
ucomiss
fstl
and
cmp
mov
push
aam
lret
cmp
dec
inc
jecxz
mov
icebp
faddp
push
shrl
push
jne
and
ja
pop
cmp
lret
mov
cmc
sbb
dec
or
or
sahf
mov
iret
dec
add
outsb
pop
sbb
dec
rorl
inc
jge
loop
mov
fnstenv
lea
popf
ret
je
add
outsl
repnz
push
daa
dec
stc
pop
mov
ds
fcompl
xchg
daa
icebp
fstpl
ja
mov
stos
lds
addb
pop
cld
xor
sub
faddl
subb
ret
mov
call
test
imul
xchg
icebp
dec
ret
mov
mov
xchg
cmpsl
add
repz
outsb
loope
stos
push
testl
add
int
loope
stos
int3
test
mov
adc
popa
push
mov
and
in
lcall
or
mov
adc
push
nop
inc
jno,pn
pop
dec
and
mov
jmp
adc
inc
clc
inc
lods
pop
dec
pusha
jmp
pop
push
lret
popa
cmpsb
inc
sahf
lods
sub
cmpsl
lock
fcmove
les
push
dec
shrb
faddl
and
popa
push
jo
push
and
cmp
and
sub
jo
inc
loopne
imul
testl
jno
rclb
jnp
enter
pushl
jno
stc
pop
mov
mov
sbb
cltd
inc
dec
adc
add
push
shll
xchg
mov
not
ror
jnp
sub
dec
pop
shlb
bound
sub
push
adc
jnp
push
or
adc
pop
adc
xchg
shrl
xchg
add
adc
mov
jle
bound
shll
fs
xor
subb
notl
movsb
xor
or
addl
jge
lods
pop
mov
mov
cmp
into
or
inc
dec
xor
and
inc
scas
add
jle
imul
js
ret
mov
repnz
popl
or
dec
mov
lock
sbb
jo
mov
dec
sbb
jne
sbb
mov
pop
test
mov
sbb
sub
add
inc
in
jno
add
add
add
fisubrl
mov
or
ror
xlat
mov
mov
sbb
jmp
sub
cmpsl
xchg
test
clc
lock
rolb
push
push
pop
lods
and
sbb
push
push
faddp
add
mov
adcb
mov
jg
std
addr16
mov
outsl
push
adc
std
pop
movsb
dec
dec
mov
arpl
in
jno
jmp
pusha
sbb
nop
or
and
insl
pop
mov
jne
jp
add
inc
outsb
in
enter
xchg
add
in
movsl
aam
ds
jne
add
jmp
ret
mov
mov
jecxz
sti
sarl
mov
add
je
jge
std
jnp
xchg
adc
cs
out
dec
mov
fstl
push
dec
into
popf
pop
xor
jl
mov
mull
add
inc
mov
or
jae
outsb
mov
out
mov
testl
cmpsb
mov
fadds
mov
test
add
pop
mov
sti
adc
push
fsubs
fisubrs
and
or
sbb
mov
call
or
call
gs
push
out
js
pop
stc
dec
push
inc
leave
or
or
lcall
call
mov
lahf
cmp
mov
das
leave
mov
xchg
push
push
jmp
out
lcall
and
mov
fstl
and
ja
enter
mull
inc
sbb
lret
push
test
jb
or
movsl
cwtl
jp
inc
push
xor
xchg
negl
jmp
xchg
pusha
jo
sub
push
cmp
inc
xchg
mov
pop
jae
out
and
pop
rolb
roll
call
mov
sbb
add
jmp
loopne
stos
xor
das
xor
mov
cmc
gs
or
daa
imul
lea
mov
shl
jne
pop
enter
add
shrl
popf
into
jbe
movsb
in
push
pop
js
bound
inc
jno
inc
in
scas
mov
leave
jo
and
push
pop
roll
icebp
pop
std
jle
mov
dec
rcr
cmp
push
cmp
jne
fistpll
xor
adc
in
ret
incb
aam
and
mov
mov
mov
dec
lods
subl
gs
rorb
mov
jp
inc
inc
pop
xchg
cmpl
xor
in
arpl
or
push
add
mov
and
shll
xchg
idivb
aad
lcall
and
xchg
sub
add
sub
mov
popf
add
out
add
push
push
adc
sub
adc
movsl
mov
jnp
roll
insl
mov
mov
inc
inc
push
add
push
inc
std
mov
mov
inc
enter
test
movsb
int
mov
lret
jae
ss
add
pop
addr16
icebp
mov
shrb
or
cld
jne
call
test
mov
sub
rcll
push
scas
jne
add
pop
das
and
arpl
ljmp
mov
xorl
mov
xchg
jp
mov
push
push
test
pop
stos
jno
add
cmc
sub
xor
cmpsl
cs
mov
cs
test
les
or
xchg
cmpsb
xchg
ret
je
xchg
cmp
pop
adc
jp
xor
inc
dec
lods
xchg
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
jmp
popf
lcall
pop
out
jecxz
cld
xor
mov
les
mov
jmp
sti
mov
xor
mov
mov
je
jno
andl
pop
cmp
and
jp
ret
lock
scas
out
dec
push
in
inc
jns
mov
sbbl
inc
push
jmp
daa
or
test
lds
or
test
and
adc
mov
dec
insl
jmp
pusha
sub
xor
add
not
pop
fisttpl
add
push
mov
sub
movswl
dec
enter
and
lret
adc
dec
and
cltd
add
cmp
outsb
movsl
sub
jg
cmpsb
jo
aas
pusha
jg
stc
inc
mov
lods
mov
pusha
mov
lahf
cwtl
dec
punpcklbw
mov
xlat
push
sub
in
mov
push
jle
push
ja
in
addr16
mull
ss
mov
mov
shlb
dec
divb
ret
stc
outsb
xchg
sti
into
mov
pop
cmp
sub
mov
je
jb
aaa
scas
xorb
adc
lea
das
cli
jmp
or
iret
data16
xor
push
fbld
pop
call
sbb
rcl
leave
ljmp
out
and
push
jl
mov
inc
fcompl
pushf
ficompl
mov
or
sahf
cltd
add
cmpsb
pop
and
push
pop
je
push
jmp
cltd
mov
jg
sbb
aam
int
sbb
sbb
bound
pop
xor
and
jo
mov
mov
test
outsb
xchg
push
push
pop
ljmp
mov
insl
xchg
xchg
adc
aaa
ret
or
fistl
mov
cwtl
and
or
lret
clc
dec
movsb
and
mov
dec
cmpsb
out
sub
mov
push
mov
cmp
xor
sbb
in
movsb
jae
xchg
clc
pop
rcrb
mov
mov
insb
fdivr
cmpsl
repnz
or
mov
mov
adc
cmpsl
cmp
push
cmpsb
mov
imul
ljmp
rorb
scas
mov
jb
ret
pusha
push
jns
inc
nop
mov
rcll
ljmp
cmp
cmp
and
addr16
cs
xor
scas
aaa
push
fs
leave
rcll
cmp
sbb
sub
shlb
mov
mov
loop
xorl
push
sub
enter
pop
cmpsb
cmp
and
fdivl
aam
cmp
cmp
mov
xchg
mov
jge
jl
pop
cmp
jg
add
loop
leave
popl
iret
cli
push
add
nop
mov
outsl
sbb
mov
ret
mov
inc
xchg
mov
gs
aaa
pop
icebp
push
call
mov
mov
popa
aas
inc
clc
sbb
fcmovb
fmuls
mov
or
fmull
mov
ret
xor
ret
stos
mov
outsb
pop
jge
addr16
jne
nop
test
sub
xlat
fbld
out
andl
cmc
call
aad
lds
lock
or
xchg
xchg
or
ret
mov
sarb
push
mov
andl
sub
mov
sub
hlt
shrb
ret
in
sahf
out
pop
jle
jnp
mov
inc
mov
or
pop
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
jmp
imul
lods
xchg
adc
nop
cltd
ret
xchg
out
mov
call
and
mov
mov
and
sub
lcall
inc
xchg
push
sub
mov
insb
inc
xchg
pop
insb
cld
xor
inc
pop
and
and
pop
inc
cmp
jo
into
push
fnstsw
ret
int3
cmp
and
gs
sub
mov
fcomp
idiv
leave
frstor
mov
xor
aad
imul
in
in
je
dec
fsubr
or
jle
pop
cmp
add
add
dec
iret
pop
xchg
mov
jl
repnz
shrl
lock
inc
xor
sbb
idivl
xchg
mov
call
add
cmpsb
mov
xchg
or
push
js
test
or
call
popa
jg
or
xchg
sti
data16
add
cmp
or
mov
lock
mov
lea
mov
mov
rcrl
pushf
mov
cmpsl
outsb
or
xlat
jns
cmc
lretw
movsb
or
jbe
or
sub
cli
push
dec
mov
lcall
test
dec
jae
jp
add
lea
jl
xor
popf
loopne
mov
push
jo
popa
add
sbb
bound
sbb
xchg
jle
daa
jecxz
imul
fimuls
ficompl
dec
scas
sbb
or
sbbb
mov
imul
movsl
sbb
mov
jo
xchg
je
rcr
gs
adc
mov
cmpsl
inc
orl
sbb
mov
jne
mov
cmp
or
out
inc
push
fidivrs
jb
lea
and
jecxz
call
mov
ret
repnz
fs
lcall
jge
dec
pop
jne
jl
adc
mov
je
adc
ret
stos
cmp
dec
mov
adc
lock
dec
jb
ret
inc
and
int
pop
jmp
or
aas
outsl
mov
loopne
enter
sbb
pop
pushf
xchg
fistl
jecxz
inc
inc
out
pop
imul
loope
adcb
pop
push
inc
sbb
and
cwtl
push
dec
pop
aas
lret
mov
testl
clc
and
movsl
pop
pushf
adcb
repnz
ficomps
jnp
mov
scas
mov
aas
roll
mov
inc
mov
mov
out
xor
and
ret
jne
or
dec
dec
xor
addr16
aaa
aaa
xchg
stos
mov
in
and
lock
incb
add
mov
mov
rcr
xchg
sub
repz
daa
clc
pop
xchg
inc
call
sbb
lret
push
pop
mov
adc
call
xor
push
movsl
cmp
mov
jge
mov
and
add
mov
psraw
xchg
sahf
fs
out
aas
mov
push
cmpl
cwtl
xchg
push
call
ret
mov
cmpb
test
mov
add
lods
sarb
adc
lcall
xchg
xchg
mov
outsl
loopne
hlt
scas
dec
sub
jae
imul
iret
adc
out
out
das
mov
mov
stos
lret
loop,pt
out
jno
lahf
jo
call
loope
cmp
push
xchg
xor
rorl
fistpl
mov
imul
add
xchg
clc
push
cli
xchg
mov
inc
hlt
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
jmp
hlt
scas
je
mov
cld
mov
pop
test
mov
mov
inc
in
lock
js
xchg
jle
dec
xchg
push
lock
inc
cmp
add
ljmp
pop
addr16
dec
leave
xor
jp
xor
test
out
out
arpl
fmuls
xchg
pop
pop
pop
sub
in
xchg
xlat
je
out
out
inc
test
push
ds
repnz
out
add
dec
imul
mov
adc
mov
pop
dec
incl
jl
mov
add
call
cmp
jnp
push
les
mull
out
dec
pop
cmpsb
lea
jo
cmp
in
outsb
inc
mov
xor
stos
rcrb
clc
jecxz
cmpsb
mov
in
mov
jo
stos
push
mov
jns
sbb
mov
outsb
add
mov
ret
xor
jnp
pop
adc
ficoml
xchg
int
mov
add
adc
xlat
inc
fcoml
xchg
jo
or
stc
and
mov
loope
jle
leave
lock
shlb
outsl
cmp
dec
inc
fwait
sbb
inc
pop
enter
lcall
cmp
vcvttsd2si
insb
pop
xor
insl
nop
inc
cmpl
dec
xor
jge
out
jecxz
push
adc
icebp
fmull
loope
not
or
pop
cmp
in
jnp
sbb
in
cwtl
lcall
fcomi
pop
pop
dec
arpl
adc
dec
and
or
ss
jnp
or
in
aas
movzbl
sbb
push
lcall
pop
out
out
jnp
fs
cmp
inc
xchg
popa
popf
jnp
pop
inc
jmp
jb
scas
mov
imul
mov
and
ret
test
inc
inc
je
inc
inc
or
adc
sbb
ljmp
testb
pop
inc
dec
mov
nop
fwait
mov
in
pop
test
jns
or
jecxz
adc
inc
inc
inc
jnp
push
rcl
addr16
in
cld
pop
xor
lret
adc
stos
in
ret
insl
sbb
push
pop
shrl
dec
mov
mov
iret
imull
loope
cs
out
mov
dec
mov
js
mov
inc
mov
lahf
lea
scas
dec
push
jne
xchg
lret
mov
mov
aam
mov
fcoml
push
cmp
adc
iret
int
fimuls
mov
pop
scas
xor
mov
sub
sub
mov
ja
mov
fldl
xor
jbe
test
fwait
xor
jmp
sub
dec
adc
dec
outsb
loop
mov
aam
add
jp
push
ret
fldl
popa
pop
cwtl
daa
mov
out
cmp
push
mov
adc
filds
test
jmp
popa
pop
es
insl
lret
dec
aaa
adc
leave
push
call
or
push
xchg
out
pop
rcl
xor
xlat
out
inc
pop
dec
inc
hlt
mov
fs
imul
mov
or
push
in
data16
mov
pop
mov
enter
iret
adc
dec
dec
push
sahf
stos
sbb
repz
pop
sbb
pushf
pusha
aad
rolb
or
mov
arpl
fildl
movb
mov
fcmovbe
popf
cmp
enter
mov
lahf
dec
int3
jno
cmpsl
cld
ret
aam
xor
dec
adc
fstl
sub
xchg
sub
push
dec
aaa
cmpsl
dec
pop
jnp
orb
jne
mov
and
scas
add
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
jmp
dec
pop
xchg
idivl
push
shll
clc
mov
mov
mov
xchg
icebp
sub
cmp
fisubrl
mov
pop
jp
mov
sti
pop
xchg
cmp
sub
cmp
fwait
pop
mov
adc
adc
mov
and
dec
dec
or
lods
mov
nop
bound
pop
push
pusha
and
pusha
scas
iret
xchg
push
lock
test
pop
mov
xchg
xchg
loopne
sbb
test
out
pushf
dec
mov
mov
pop
in
add
dec
xor
lock
ja
cmp
push
sbb
pop
cmpsl
dec
xor
pop
and
movsb
push
xor
sbb
mov
outsb
lret
jl
inc
pop
jle
pop
xchg
mov
pop
popf
clc
mov
mov
sub
cmp
fsubr
addr16
das
sahf
or
mov
sbb
xchg
shll
inc
adc
cmp
mull
mov
dec
cmp
cmp
fldenv
test
cmpsl
xchg
pop
int3
push
cmp
add
in
and
stos
mov
dec
add
pop
sub
fbstp
ljmp
ror
xchg
jecxz
jo
insb
mov
push
pusha
fstl
int3
imul
loop
or
adcl
ret
add
sarl
shlb
popl
bound
out
and
idivb
orb
std
jecxz
enter
in
rcrl
mov
fadds
in
repz
mov
dec
xor
mov
mov
fsubrl
fdivl
xchg
popa
jg
push
mov
out
addr16
mov
xor
and
inc
or
jecxz
aas
rolb
jnp
fs
push
xchg
jnp
mov
leave
ljmp
loopne
push
test
or
push
add
out
pop
pop
mulb
cmpsb
jecxz
cmpsb
inc
jo
adc
xorb
push
enter
inc
lock
jbe
sub
mov
and
mov
loop
or
mov
or
sarb
stos
xlat
lock
mov
dec
cmp
add
jle
and
insb
cwtl
mov
sbb
or
shll
and
sbb
cmp
xchg
sbb
and
xchg
gs
inc
jg
mov
arpl
mov
mov
xchg
call
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
jmp
and
jnp
scas
fs
nop
mov
bound
cltd
ret
ja
pop
mov
jg
push
or
mov
xor
js
js
loopne
sub
repz
jbe
jns
jge
fisubl
popa
add
mov
aad
adc
mov
mov
and
loopne
jnp
popa
das
and
fcomi
dec
ds
mov
or
mov
into
stc
mov
insl
andb
les
movsb
mov
mov
pop
xor
bound
and
mov
sub
stos
push
rclb
sbbb
dec
loop
pop
or
clc
rol
mov
mov
jle
cmp
push
inc
sbb
movsl
mov
in
sub
subb
add
and
cwtl
mov
ficompl
call
inc
loop
mov
and
jp
dec
sbb
xor
mov
les
lea
enter
cmp
push
scas
cli
sbb
in
mov
mov
mov
sbb
mov
push
pop
leave
mov
push
add
inc
es
lret
pop
lea
out
sbbb
or
popf
orl
mov
fdecstp
xchg
and
adc
xor
les
movsb
setl
scas
add
les
lods
pop
jle
stc
pop
jns
sahf
push
cmc
jge
inc
iret
jne
xor
mov
jmp
lods
mov
aam
adc
aas
sub
mov
cwtl
jl,pn
pusha
mov
lea
sarl
mov
lahf
outsb
rcrl
add
jmp
repnz
xchg
adc
jb
fistps
les
adc
mov
and
imul
sahf
push
roll
ror
inc
shrb
xchg
mov
xchg
out
push
pushf
xchg
arpl
loopne
roll
add
pop
aaa
into
insb
and
mov
addr16
fdivs
cmp
fs
sti
in
mov
movsb
xor
mov
pop
loope
cmp
ret
cmp
pop
xchg
mov
loop
xchg
jl
scas
mov
out
cld
mov
cli
popa
jo
mov
lahf
sbb
addr16
lcall
movsb
pop
jp
into
jmp
push
sub
inc
loopne
xor
add
inc
in
jge
add
inc
call
movl
xor
movl
push
jmp
jecxz
fscale
pop
mov
lods
je
push
sahf
hlt
inc
out
icebp
add
mov
pushf
addr16
jnp
push
pop
mov
mov
and
mov
inc
xor
scas
push
sbb
loope
pop
xor
cmp
jae
rcrb
ss
adc
in
ja
jae
mov
or
pop
icebp
pop
add
xchg
outsb
dec
data16
mov
std
push
sub
adc
cltd
add
rolb
dec
aaa
outsl
scas
xchg
insl
rcl
test
sbb
or
mov
jl
dec
push
mov
push
pusha
sbb
and
in
jo
je
cmp
dec
rorl
test
xchg
adc
in
or
roll
mov
inc
mov
mov
repz
cli
or
jg
sahf
adc
das
pop
std
or
inc
adc
sahf
fisubs
pop
sbb
push
testl
adc
pushf
or
data16
mov
hlt
lahf
pop
xchg
push
mov
lahf
dec
pop
add
push
mov
mov
xlat
int3
push
sub
adc
movsl
mov
aaa
inc
dec
add
and
outsb
pop
ret
mov
push
xor
push
add
jp
or
jo
cmp
lcall
jnp
movsl
pushl
xlat
mov
dec
outsb
push
ds
pop
sbb
stos
js
lahf
xor
call
sbb
lret
mull
xchg
push
adc
inc
outsl
rclb
aam
es
sub
mov
or
and
jle
mov
shrl
add
pop
sbb
aaa
insl
into
cs
imul
aas
mov
sbb
es
lods
leave
stc
out
lea
or
je
push
inc
inc
mov
shlb
pusha
lds
outsb
add
shrl
add
push
and
mov
sub
dec
lcall
in
or
cli
filds
stos
jle
jnp
jge
hlt
data16
popf
fldcw
cmp
jne
shll
push
loope
adc
dec
mov
push
in
lds
je
or
in
cmp
xchg
js
jnp
in
movsl
and
xchg
add
sbbl
aad
push
mov
cld
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
jmp
movsl
jno
into
mov
jb
fnsave
sub
int
mov
mov
scas
mov
jno
gs
loop
cmpsl
jp
add
mov
repnz
mov
mov
or
cs
mov
out
lods
idivb
dec
mov
sbb
xor
lcall
daa
popa
mov
mov
lret
jp
arpl
xlat
mov
push
daa
xor
pop
sub
mov
sub
fists
push
mov
js
or
arpl
in
fstps
cwtl
loop
jp
fs
adc
jns
mov
xor
mov
inc
inc
sahf
enter
in
pop
inc
or
aam
pop
iret
pop
pushf
inc
cmpsl
movsl
cmp
shrl
aam
loopne
xor
cld
push
xchg
out
xchg
into
mov
mov
shlb
dec
mov
fsubrl
loope
sbb
loop
int3
cmp
insl
aad
notl
loop
push
or
fmuls
popa
xchg
aam
pop
scas
xor
insb
mov
push
pushf
mov
sarb
mov
movsb
mov
dec
or
pop
jmp
dec
out
sbbb
cmp
jge
fs
lock
mov
fdivrl
push
subl
les
xlat
jp
ret
pusha
scas
pop
push
mov
hlt
sub
lret
adc
movsl
mov
xchg
push
pop
data16
fnstenv
and
aaa
in
pop
xchg
outsl
xchg
push
xor
aaa
xchg
imul
std
push
sbb
sub
icebp
cltd
pop
test
addl
mov
xor
pop
sbb
into
int3
fcmovnb
insl
jle
add
sarl
out
xchg
decl
pop
jl
rcrb
ljmp
ss
aam
fstpt
push
call
sbb
in
loope
sbb
je
xlat
add
jno
repnz
movsb
addr16
and
add
pop
xchg
cmpsl
pushf
sti
dec
clc
jns
pop
lds
cmp
dec
jle
out
loope
push
movsb
fisubrl
dec
cmpsl
int
inc
out
movsb
lock
inc
sbb
jnp
and
fbstp
push
mov
lret
pop
sub
data16
cld
push
out
fstpt
mov
outsl
ret
cmp
test
sbb
or
rolb
add
roll
or
rolb
inc
in
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
jmp
xor
sub
sub
mov
sahf
mov
les
mov
hlt
jb
in
push
ljmp
in
sbb
or
pop
out
nop
sbb
insl
shlb
pop
jnp
cmp
dec
inc
sub
add
cwtl
add
stos
cmc
out
in
addb
mov
fcoms
ss
or
repz
sbb
and
push
mov
jns
scas
movsb
mov
xchg
icebp
aam
lea
pop
test
sub
popf
and
cmpsb
inc
leave
jo
jl
dec
lock
movb
dec
mov
dec
jl
imul
fsubs
icebp
dec
icebp
ret
insl
imul
mov
ficompl
std
shlb
inc
sub
in
sbb
mov
aaa
stos
cltd
lods
fs
into
insb
push
xchg
xor
inc
fadds
jb
xor
mov
shll
int3
ds
add
enter
and
int
loopne
jp
or
out
xor
mov
in
nop
scas
mov
pop
shrb
lods
cmp
nop
add
and
mov
lock
test
inc
sahf
lcall
xor
adc
cwtl
or
ljmp
mov
sub
out
gs
fdivrl
xchg
insl
popf
inc
and
sub
pop
das
imul
es
in
mov
push
fiadds
cli
jl
mov
fsub
xrelease
mov
fistl
jbe
mov
loope
dec
mov
out
jmp
and
xchg
jno
add
inc
sub
jno
jne
sbb
jle
adc
out
push
hlt
mov
add
sbb
mov
xor
pop
and
push
pop
push
xor
cmp
lcall
jae
add
push
or
dec
xchg
popa
mov
inc
popa
rolb
mov
push
jns
push
int
adc
push
inc
push
inc
pop
or
pusha
enter
mov
lcall
mov
jp
sub
cmp
out
stos
add
jle
sub
int
bound
mov
inc
hlt
out
jle
adc
cli
and
jne
inc
mov
scas
mov
fninit
or
jne
pop
pushl
mov
out
mov
pop
inc
loop
femms
dec
imull
adcl
sahf
movsb
decl
cs
mov
jl
pop
lret
pop
mov
enter
in
xor
pop
xor
fdivs
xor
xor
inc
cmp
dec
sti
mov
jecxz
sbb
cmc
dec
cld
inc
add
int
sbb
jmp
jecxz
push
daa
xor
rcll
call
mov
xor
sahf
jl
or
ds
inc
loope
fldt
sub
xchg
lock
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
jmp
mov
lods
xchg
mov
pop
xor
int3
repnz
adc
mov
pop
fsts
sbb
add
aaa
subb
pop
mov
in
call
lea
xchg
testl
xor
adc
icebp
cmp
loop
cmc
push
push
xchg
out
test
js
xchg
arpl
bound
mov
mov
lret
inc
mov
pop
xchg
mov
movsb
sti
mov
imul
cmpsl
mov
inc
imul
inc
repnz
cmpsl
lcall
add
popf
jecxz
into
dec
ret
fstsw
add
and
in
dec
test
mov
fmuls
xchg
dec
cmp
push
pop
jno
xor
mov
jb
mov
xchg
stos
lret
mov
push
clc
or
push
adc
mov
lea
jg
xchg
out
test
add
popf
iret
loop
nop
push
out
inc
push
push
jns
jo
lock
push
hlt
js
daa
aas
cmpsl
add
push
cmc
shlb
ds
loop
pop
fimull
hlt
push
dec
lahf
rcl
nop
fucomip
sarb
mov
mov
addr16
jnp
push
aaa
lret
mov
test
roll
lret
inc
xor
bound
mov
mov
ret
sub
pop
imul
stos
jge
rcll
pop
sub
les
jne
and
xor
pushf
sbb
mov
sahf
push
sti
daa
and
int
cmp
add
popf
or
jnp
stos
and
jnp
iret
xlat
dec
in
mov
ret
leave
cld
cmpsb
adc
mov
push
fists
fs
push
mov
pop
cs
call
clc
cltd
add
sti
sub
imul
les
dec
or
mov
int3
jnp
iret
subb
xchg
aad
scas
fs
mov
pop
les
jecxz
in
cmp
out
dec
callw
mov
sub
movsl
loopne
pop
mov
int3
push
xchg
fisubrl
out
loop
pop
cmp
dec
push
sbb
fcmovb
je
sbbb
scas
inc
mov
icebp
inc
shr
insb
cmp
mov
sbb
sti
inc
jg
scas
add
not
sub
lods
dec
add
inc
mov
stos
push
inc
cmp
jge
ret
sbb
pop
mov
int3
test
push
push
jge
je
leave
xchg
nop
sub
pop
mov
add
cmp
or
outsl
fbld
xor
in
repz
add
jle
pusha
mov
pop
push
and
hlt
sti
dec
loop
scas
test
push
inc
test
xor
add
pop
imul
out
push
lahf
mov
mov
cmp
pop
jae
xor
cld
in
mov
int3
xor
xchg
je
sub
incl
outsb
add
test
lock
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
jmp
jne
mov
je
fsubrl
imul
sbb
mov
nop
sub
adc
insl
dec
mov
or
in
jbe
jno
decb
cltd
mov
outsl
sbb
mov
mov
mov
jl
stc
es
daa
scas
movsb
and
and
jo
das
repz
inc
cltd
loope
incl
or
fiadds
adc
aaa
bound
adc
pop
nop
pop
mov
push
mov
sbb
stc
push
cmp
bts
lods
andl
jbe
or
xchg
daa
nop
inc
push
dec
mov
outsl
test
push
mov
jle
add
pop
push
lods
jb
jns
and
out
lds
aad
inc
xor
jae
inc
ret
xchg
jmp
movsl
inc
dec
out
cmp
shlb
cli
pop
rcll
iret
jo
pop
push
in
mov
cli
mov
xchg
push
fdivl
xor
lret
test
pop
nop
pop
jle
sar
xor
adc
stos
sub
xchg
call
outsb
cwtl
ror
jp
mov
cmp
leave
add
sub
and
add
das
addr16
nop
lock
in
std
aad
bound
mov
lret
mov
into
jle
aas
test
pop
jns
sahf
outsl
push
and
and
pop
ret
loopne
cmpsb
jbe
repz
mov
push
inc
push
popf
rcrb
add
imul
fbstp
outsb
adc
loope
fidivl
add
mov
adc
stos
sub
outsl
adc
or
and
push
mov
test
push
adcb
jg
sbb
xor
add
cmp
lcall
dec
mov
dec
orl
lahf
std
inc
inc
mov
pop
sbb
in
cmp
adc
insb
loop
stc
jo
shll
rcll
mov
jg
shrl
dec
sub
xchg
lcall
and
jnp
push
ljmp
push
pop
dec
leave
mov
cmp
adc
push
insb
cmp
pop
stos
add
call
icebp
filds
mov
add
test
sbb
push
xlat
test
inc
je
push
or
pop
xchg
xor
cltd
movsl
rcrl
out
jno
idivl
cltd
jl
test
inc
lods
inc
jecxz
les
mov
add
fcomps
inc
fs
popa
lcall
mov
fsubl
push
loop
push
add
imul
push
jo
rcll
cmpl
mov
fidivrl
or
add
xchg
add
xor
inc
mov
cli
mov
dec
test
mov
mov
dec
cs
xchg
adc
scas
jmp
in
test
hlt
cltd
je
jle
inc
lds
imul
scas
mov
mov
sbb
push
mov
and
mov
xorb
cs
jo,pt
aaa
aam
mov
mov
dec
int
lcall
nop
hlt
hlt
mov
out
cmp
outsl
mov
push
gs
das
mov
insb
in
stos
loop
xchg
popf
mov
xor
outsl
outsl
lahf
out
pop
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
jmp
pusha
and
push
xchg
jns
cmp
aas
pop
loope
rcrl
mov
mov
stc
dec
cmp
rcll
push
push
mov
imul
xchg
mov
clc
or
shll
mov
stos
mov
and
ret
xor
ss
sbb
arpl
test
add
dec
xchg
push
inc
pop
pop
add
pop
xchg
ret
bound
popa
pop
insl
inc
outsl
jb
inc
aam
les
add
bound
sbb
popf
in
sub
mov
cmp
jo
stos
push
push
shlb
loopne
push
pop
call
push
push
test
ret
fildll
pop
mov
xor
push
stos
add
pop
mov
frstor
sbb
popf
into
and
cltd
mov
pop
sarb
xchg
cmp
pop
sti
popa
push
xchg
lret
mov
xchg
sahf
or
push
or
ret
jle
mov
lcall
test
mov
inc
adc
dec
jbe
fnstsw
or
dec
rcll
sub
fdiv
dec
or
test
insl
cli
lock
add
pop
inc
addb
cld
xchg
out
dec
inc
cltd
sbb
int
adc
mov
lret
xor
sbb
or
add
mov
js
popa
mov
sti
cwtl
aaa
and
outsl
cmp
int3
inc
add
mov
push
adc
mov
mov
xor
idivl
mov
int
cmp
inc
xorl
fsub
rclb
loope
les
int
std
mov
push
push
dec
or
sbbl
mov
sbb
gs
insl
push
add
cmp
shrb
or
or
pop
mov
adc
mov
aas
lds
jbe
test
into
cmp
push
lods
mov
inc
movsl
or
push
and
jmp
in
and
aaa
push
add
aas
xchg
sbb
pop
jb
adc
pop
mov
jnp
test
and
cmc
mov
xchg
jl
sub
mov
cmp
ficompl
cmp
insl
pop
int3
repnz
in
enter
outsb
aad
daa
pop
test
sub
dec
mov
test
xchg
push
jl
test
mov
addr16
add
mov
adc
jne
bound
pop
cmp
push
sbb
nop
cmpsb
adc
push
mov
mov
sbb
ljmp
cmp
cld
inc
dec
inc
mov
push
divb
btc
xor
dec
cmp
pop
in
or
push
fldl
mov
xchg
mov
movsb
scas
cmp
jecxz
and
pop
mov
lret
repz
and
test
stos
push
fldl
jbe
scas
adc
icebp
inc
dec
into
push
or
adc
pop
mov
test
pop
in
inc
sub
push
jecxz
int3
xor
sbbl
push
shr
pop
out
mov
test
cmp
mov
or
sub
xor
sub
sub
outsl
daa
push
xchg
mov
and
repz
or
adc
xor
lret
xchg
pop
push
popf
mov
cmpsl
jae
lods
inc
mov
and
adc
jne
xor
addl
pop
iret
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
jmp
js
cld
jb
pop
dec
lods
push
sahf
dec
mov
jge
mov
mov
mov
leave
mov
outsl
fwait
jl
decl
adc
pop
adc
mov
lahf
mov
movsl
jnp
loop
outsb
ret
mov
les
sbb
push
mov
loope
or
insl
shlb
popf
lret
lds
sbb
pop
inc
bound
mov
div
sbb
jnp
push
outsb
rcll
jmp
xchg
daa
bound
jp
leave
mov
jns
ret
xchg
fcmovnbe
and
xor
dec
dec
ds
mov
pop
xlat
push
fwait
test
lcall
addr16
aam
outsb
sub
and
nop
xchg
jmp
xchg
out
divb
push
mov
out
das
ljmp
cs
imul
pop
mov
sti
xchg
push
dec
jo
out
inc
push
mov
xchg
call
xor
sbbl
inc
fwait
push
out
mov
in
aam
lds
pop
jg
mov
in
stos
or
mov
jle
or
jo
dec
xor
fdiv
mov
scas
jae
adc
jge
xchg
in
or
fldl
push
out
xlat
push
inc
mov
ds
pop
sarl
and
or
stos
xor
cmc
in
adc
nop
icebp
aaa
pop
lret
pop
mov
pop
xor
fistps
pop
addr16
mov
mov
ret
or
adc
insb
fistpll
shlb
sub
push
jp
pop
std
xchg
nop
lds
mov
adc
mov
test
les
imul
dec
arpl
inc
lds
in
rcrb
mov
jo
cld
or
aam
or
ss
mov
addr16
mov
push
cli
lcall
push
imul
sbb
xlat
fsubs
out
dec
pop
outsb
in
xor
clc
sub
cmp
in
imul
dec
imul
sbb
sbb
das
movsb
push
lret
cwtl
ljmp
and
mov
add
hlt
loopne
add
inc
jmp
mov
es
aas
stos
cmp
inc
cmp
lcall
test
int
es
pop
stos
subb
mov
mov
sbb
cmpsl
cli
sbb
fnstsw
inc
fsubrl
lcall
push
shlb
mov
insl
add
cmpsb
cmp
movsl
ja
into
std
inc
adc
adc
mov
pop
and
inc
add
mov
shlb
ret
pop
push
cld
push
lahf
out
idivb
sub
lock
sub
jl
and
outsl
gs
subb
out
fisubs
pop
lret
mov
stc
or
adc
ss
xlat
adc
jbe
cs
push
sub
cmp
fsubl
pop
rclb
imul
gs
repz
xor
pop
hlt
cmpsl
aaa
pop
cmpsb
push
fsubs
movsl
inc
inc
or
out
xor
and
test
add
ss
divl
gs
test
cli
add
sbb
sbb
add
cmovbe
std
lods
scas
repnz
adc
ljmp
xchg
mov
out
sbb
or
test
pop
push
es
add
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
jmp
out
insb
and
or
mov
mov
push
lret
push
xchg
cmp
sub
and
fistpll
inc
sub
sbb
mov
out
sbb
fwait
jl
fstps
jbe
push
pop
pop
mov
or
icebp
icebp
stc
cwtl
imul
sbb
dec
loopne
jl
sub
test
add
cmpsb
inc
mov
cmp
fists
stos
sub
or
xchg
sub
outsb
in
aam
xchg
bound
fmul
out
gs
jb
mov
leave
mov
or
mov
dec
push
cmpsl
movsl
test
and
call
xor
insl
cmp
je
mov
insl
mov
dec
iret
lahf
mov
inc
fiaddl
sub
mov
pop
pop
imul
lock
cmp
xchg
mov
sub
cltd
sarb
pop
insb
pushf
test
and
jge
pop
add
jmp
dec
sbb
pop
xor
iret
imul
out
or
mov
arpl
xor
shll
je
pop
mov
loopne
test
fnstsw
mov
lock
push
call
and
leave
daa
mov
push
dec
jecxz
inc
lea
shll
scas
cli
xor
dec
jmp
sub
mov
sti
int
adc
mov
push
jne
and
mov
loop
add
mov
mov
insb
dec
jge
mov
xor
mov
xchg
cmp
xor
adc
pop
xor
or
and
dec
test
xchg
jecxz
pop
xlat
ficompl
jge
dec
xor
jge
nop
out
icebp
shll
into
jecxz
jb
push
clc
lret
inc
jns
cmpsl
push
add
daa
inc
js
jae
out
in
jecxz
roll
xchg
cmp
mov
adc
push
jmp
lock
je
mov
test
pop
sbb
xchg
mov
popf
sub
push
xchg
add
insb
sahf
dec
loopne
xchg
adc
test
mov
jo
das
push
cmpsl
push
outsl
xchg
push
dec
add
push
push
popa
or
ja
cwtl
or
xchg
in
mov
xor
xchg
jmp
and
shll
xor
sbb
out
jp
movsl
add
stos
or
imul
lea
dec
aad
dec
pop
mov
fprem1
gs
add
or
sbb
popa
ja
sbb
lahf
and
fisubs
das
adc
cmpsl
cmp
and
and
mov
outsl
int3
sub
enter
and
movsl
mov
add
aas
mov
fldcw
and
fwait
dec
push
lahf
lcall
pop
in
popa
mov
ljmp
sbb
jmp
test
or
shrb
std
cmp
pop
jmp
je
dec
mov
mov
xorl
filds
or
mov
pushfw
test
sahf
stos
cmp
movsl
pushf
sub
push
mov
insb
dec
out
ljmp
mov
mov
cwtl
test
jecxz
enter
aam
sbb
mov
pop
inc
negb
push
pop
and
cmp
imul
popa
notl
frstor
stos
out
mov
mov
das
xchg
push
daa
insl
iret
pop
sub
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
jmp
sub
cmp
lds
xchg
leave
xor
mov
cmp
sti
ficoml
decb
cmp
jno
cli
lahf
xchg
mull
jg
dec
push
pop
lods
stos
pop
stos
xchg
test
cmp
mov
jo
adc
out
dec
inc
lods
popl
out
aad
adc
xor
fsubp
imul
sub
punpckhwd
aas
pop
jb
push
or
movsl
fbstp
cmp
sub
mov
sub
jne
xor
add
add
es
mov
pop
movb
imul
push
lock
xor
insb
jge
icebp
dec
addr16
repnz
aaa
in
cltd
rcrb
in
adc
fisubl
xor
ret
outsl
sbb
mov
sub
push
and
add
pop
je
cmpsb
lods
addr16
flds
jne
icebp
daa
sbb
and
loopne
jae
shlb
out
icebp
shlb
push
push
push
push
imul
ror
pushf
push
xchg
sub
inc
jno
push
fs
movsl
xchg
addr16
mov
push
test
ss
sub
adc
dec
aad
ljmp
data16
push
dec
test
leave
test
xchg
mov
roll
mov
xor
push
and
jp
pushf
mov
fwait
add
mov
arpl
push
int3
xchg
and
cmpsb
roll
orl
nop
icebp
ljmp
xchg
lret
jo
fisubs
popa
pusha
xchg
mov
mov
notl
mov
sub
xlat
nopl
scas
pushf
scas
mov
data16
adc
mov
in
mov
lods
mov
adc
fnsave
notl
lcall
xor
push
out
xchg
dec
cmp
int3
sub
fildl
dec
add
inc
ret
movsb
lahf
and
into
in
cltd
ret
pop
jmp
jg
jle
jecxz
data16
jmp
push
in
push
movsl
or
dec
es
dec
xchg
int3
pop
add
adcb
ds
aas
lods
cmp
movsb
push
jnp
push
jg
jnp,pt
ja
outsb
xchg
gs
sbb
xor
jae
mov
mov
sbb
int
mov
or
in
loopne
sbb
mov
add
mov
sarl
or
popa
bound
mov
scas
jle
jns
andb
mov
frstor
clc
push
sbb
scas
sbb
div
inc
out
sbb
jae
idiv
divl
outsb
movsl
push
imul
loop
jg
test
cmp
cmp
mov
lds
push
jp
adc
lcall
stc
popa
scas
push
sahf
jp
add
mov
xchg
push
sbb
je
scas
xchg
int3
mov
lahf
stos
xlat
cwtl
ret
pop
rcrl
mov
or
mov
jne
notl
insb
fstps
jl
and
ret
imulb
adc
push
inc
imul
cs
xchg
cmpl
jl
or
loop
sbb
jae
cmp
mov
mov
sub
xchg
fsubl
mov
arpl
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
jmp
pop
icebp
lds
ror
fisttpll
lret
cld
movsb
out
cmp
mov
rol
lods
xchg
pop
inc
ja
mov
mov
mov
hlt
test
xor
out
dec
outsb
mov
mov
aas
or
pusha
fldcw
xchg
sti
jp
push
pop
jecxz
or
rorb
adc
lret
loop
imul
rorl
push
mov
in
cmpsb
mov
cmp
mov
mov
stos
stc
inc
xchg
ret
add
sti
jnp
xchg
dec
shl
cmc
nop
push
push
fidivs
das
out
push
jle
push
add
testb
sti
xchg
jb
pop
addr16
dec
mov
loop
inc
rorb
mov
loop
adc
jecxz
adcb
jle
lods
mov
sbb
int3
mov
or
adc
jecxz
mulb
daa
lret
inc
or
fcoms
in
pop
idivl
or
ja
cltd
repz
loope
loopne
mov
lods
cmp
pop
pop
mov
mov
cmpsb
xor
sbb
in
scas
mov
inc
xor
dec
lea
pusha
jno
ljmp
push
cli
add
in
pop
jno
cmp
pushl
addr16
or
fidivs
movsl
mov
cwtl
out
mov
mov
jne
aas
stos
enter
cs
xchg
cmc
fwait
mov
jnp
das
and
inc
pop
lcall
push
popf
lret
pop
addl
sub
popa
loop
jmp
outsl
inc
pop
roll
call
xlat
mov
aas
sub
mov
lds
add
data16
mov
mov
cwtl
or
pop
pop
pop
cmpsl
mov
mov
ss
scas
jg
adc
dec
mov
dec
mov
ss
add
push
ror
hlt
pushf
adc
pop
sub
repz
roll
movsl
pop
jns
stos
repnz
orl
sub
fincstp
je
arpl
mov
or
leave
test
mov
scas
insb
popa
fstpl
jo
adc
cmpl
dec
icebp
push
add
daa
and
inc
adc
jns
pop
xchg
les
sbb
pop
xchg
add
push
popa
enter
xchg
nop
scas
xor
cmp
adc
cmp
and
outsl
push
push
mov
adc
cmp
mov
sbb
popa
in
mov
xor
scas
popf
insb
scas
into
cmp
inc
push
jno
repz
int3
xor
call
iret
out
je
cmp
jb,pn
sub
out
sub
xor
clc
addr16
cs
scas
pop
mov
xchg
aad
push
das
aas
daa
ja
push
and
pop
ljmp
sbb
add
or
aam
data16
out
in
sbb
cmp
clc
lahf
xor
icebp
je
mov
pop
xchg
lods
lods
xchg
adc
mov
outsb
fisubrl
xchg
dec
xchg
aas
cmp
shr
mov
dec
or
jmp
mov
data16
sub
repnz
decl
mov
fisubl
sbb
or
and
pop
or
add
cmp
aaa
ret
push
pop
stos
fbstp
popf
xchg
cmp
jno
ficoms
and
push
and
fidivl
cs
jmp
xor
ss
in
mov
jne
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
jmp
pop
sub
shrb
mov
rcll
inc
mov
mov
cli
cmpsb
icebp
sbb
gs
mov
ret
mov
out
lea
insl
mov
add
stos
cmc
mov
jno
mov
scas
mov
lcall
pusha
imul
test
nop
or
pop
xchg
test
pop
test
inc
adc
push
push
adc
mov
xchg
push
leave
or
insw
movsb
cmpsl
test
dec
xor
cs
sub
sub
push
or
aaa
dec
arpl
xor
outsl
lcall
mov
jno
mov
jbe
inc
movsl
clc
jno
sbb
insb
fwait
or
xchg
ffreep
in
jle
mov
jnp
inc
adc
fcoms
jmp
and
inc
or
mov
movsb
sub
push
or
and
jno
inc
cmp
sub
adc
loopne
dec
fdivrl
adc
xchg
inc
rcll
mov
mulb
in
notl
sbb
inc
pop
lahf
repnz
add
lret
movsl
and
stc
adc
out
push
out
fimull
xorl
sub
lret
push
xor
movsl
push
ja
jne
xor
mov
test
sahf
adc
add
mov
xor
popa
test
test
popa
popa
stos
inc
mov
ds
imul
sub
sbb
mov
jae
mov
mov
push
mov
aam
adc
jp
insl
enter
in
leave
outsb
repnz
mov
cmp
xorl
fsub
sub
dec
pushf
adc
ds
sbb
mov
mov
xor
pop
pop
std
and
sub
pushf
mov
ss
out
enter
fistl
inc
mov
sbb
das
gs
sub
xor
daa
or
xchg
sahf
sarb
push
ja
cmp
std
push
ficomps
jnp
and
fcoml
add
into
cli
jmp
dec
sbbl
inc
mov
push
mov
inc
popf
xor
xabort
fsubs
repz
movsl
std
aaa
lods
pop
push
mov
mov
stos
adc
out
mov
insb
aam
mull
mov
xlat
cmc
push
sahf
adc
daa
sahf
cmpl
cmp
mov
mov
jle
fmulp
jg
sub
into
fwait
pop
aas
mov
inc
dec
cmc
and
movsl
sti
hlt
xor
movsb
lret
cwtl
sbb
int3
mov
sub
cli
xor
mov
mov
dec
addr16
in
inc
roll
jnp
pop
mov
sbb
mov
leave
pop
sti
jmp
test
push
xchg
xlat
mov
push
and
push
mov
jp
addr16
addr16
mov
xor
sub
jmp
inc
fst
mov
int3
mov
jo
cmc
insl
jge
mov
dec
push
mov
inc
nop
inc
call
sbb
mov
adc
jecxz
jge
scas
mov
cmp
repnz
cmp
test
xor
adc
pop
shlb
and
jo
pop
popf
imul
pusha
mov
mov
sbb
push
ret
adc
inc
xlat
dec
fistps
ret
sub
insl
rcrb
xor
push
in
xlat
inc
and
inc
and
add
cs
mov
pushf
ja
pushf
adc
call
lock
wbinvd
mull
lcall
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jo
fldl2e
cmp
jo
out
mov
dec
mov
mov
sahf
xchg
rorl
es
nop
aam
call
daa
pop
mov
shrb
mov
fdivl
scas
testb
push
loop
shr
xor
sbb
jl
pop
in
clc
push
inc
lods
popa
repnz
daa
adc
fsub
outsl
adc
adc
sub
andl
push
pushf
addr16
fstp
bound
or
inc
in
adc
dec
jno
lods
inc
xchg
negl
sub
sahf
sbb
jmp
testl
lret
cwtl
mov
mov
filds
mov
xlat
pop
dec
pop
mov
sub
xchg
push
popf
bound
movsb
into
mov
pop
mov
pop
in
jecxz
push
jg
imul
and
sahf
sub
icebp
insb
xlat
xchg
mov
sbb
outsb
or
cwtl
or
sbb
shlb
lea
or
xchg
enter
movsb
xor
fldenv
jmp
mov
fcmovbe
dec
adc
daa
scas
outsb
lret
jp
push
fldt
mov
sbb
jp
loope
jge
pop
mov
pop
cwtl
cmpl
dec
movsl
sub
shll
and
lcall
jg
xchg
rclb
mov
adc
cld
imul
les
cwtl
jo
ret
or
mov
mov
cltd
divl
jne
cmp
nop
xchg
jmp
pop
pop
or
sbb
cmpsb
inc
lods
pushf
popa
sub
sbb
pop
fsubrs
fcomp
mov
or
pop
dec
cltd
fiadds
mov
repnz
gs
in
aam
or
lods
mov
sbb
xor
movsl
iret
and
sub
fwait
imul
hlt
and
incl
and
jae
inc
push
xchg
push
in
cmp
push
outsb
fstpl
jno
mov
loop
aas
adc
inc
test
jo
in
mov
test
les
shlb
sub
stos
fsubs
aam
mov
mov
mov
jle
mov
insb
sub
cs
cmc
daa
mov
call
cmp
fwait
xchg
movl
movl
movl
jmp
pop
daa
fcompl
mov
aad
imul
mov
mov
ret
pushf
mov
pop
jnp
or
int
cli
jae
js
fisubrs
lock
mov
int
jl
mov
aad
cmp
jecxz
insl
fstpt
jl
stc
sub
xor
dec
xchg
or
bound
lcall
sar
mov
aam
mov
outsl
jns
cwtl
stos
inc
jge
in
dec
mov
rcrl
inc
pop
bound
insl
idivb
xchg
mov
icebp
jo
jnp
test
adc
int3
jp
mov
mov
sbb
push
leave
test
push
inc
dec
dec
mov
mov
sub
mov
inc
cltd
xchg
fdivl
out
icebp
dec
xlat
test
fcompl
insb
std
push
mov
lahf
push
aaa
clc
pop
adc
lea
pop
dec
lahf
jbe
outsl
roll
jo
mov
xor
scas
sub
pop
cmp
inc
and
iret
jbe
add
inc
jno
push
popf
movsb
outsb
mov
lcall
add
ljmp
repnz
xchg
push
fwait
xor
dec
iret
adc
addr16
push
xchg
sbbb
pusha
adc
testl
repz
push
sbb
das
lret
jl
mov
dec
ds
sub
sub
pop
insl
push
sub
imul
inc
jno
loope
or
hlt
je
aaa
push
subb
loope
imul
mov
bound
jl
lahf
das
pushf
jge
jne
imul
push
stos
add
jl
push
jae
push
add
sbb
pop
imul
inc
aad
repnz
outsl
add
and
test
out
syscall
mov
mov
repz
scas
fcompl
mov
int
and
idiv
add
cmp
adc
mov
rcrl
sub
mov
stos
std
scas
ret
imul
or
aam
jnp
test
inc
lret
or
push
jg
sahf
mov
mov
mov
pop
fsts
test
pop
push
call
insl
pop
push
sub
in
mov
adc
push
adc
adcl
int3
mov
add
inc
rcr
jg
add
inc
aam
sub
add
inc
fmuls
sldt
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
jmp
test
or
lods
mov
std
nop
mov
les
xchg
insb
sub
in
scas
int3
add
xchg
or
aam
cmp
cmp
les
cmpsb
mov
push
pop
or
push
sub
pop
mov
pop
mov
hlt
mov
sub
pop
push
ss
mov
adc
jecxz
imul
mov
lea
cmpsb
push
aad
jns
lcall
outsl
cmp
xchg
dec
pop
inc
push
inc
cmp
xchg
cmpb
cwtl
mov
cmp
xor
sub
out
loopne
pushf
fcoml
mov
jne
xchg
lret
ficoms
push
mov
shrb
lahf
pushf
sahf
nop
arpl
sbb
out
repz
nop
sbb
jg
xchg
mov
xchg
xor
push
popa
repz
test
inc
xor
and
mov
inc
xchg
jl
stos
jmp
inc
add
lcall
in
cmpsl
push
cmp
fmull
pop
pop
out
lcall
or
xor
jmp
test
adc
push
fistpll
pop
aas
pop
popf
inc
popf
and
insb
aad
fucomp
popf
push
mov
xchg
into
icebp
add
iret
in
or
int3
fisubs
jo
popf
inc
sub
xor
in
notb
xchg
aaa
jge
gs
mov
inc
aaa
mov
das
test
mov
jno
inc
add
insl
shl
lock
scas
addr16
stos
sub
cli
push
pop
jge
aaa
enter
notb
and
mov
lods
movsl
ficoml
cmp
cltd
push
int
xchg
inc
sbb
inc
xchg
shll
mov
shrb
int3
in
jno
inc
dec
pop
sbb
stc
push
sub
hlt
repnz
add
xchg
outsb
ret
pop
jnp
xor
repz
out
mov
sub
leave
jge
cmp
mov
repnz
test
add
sub
mov
cmp
imul
jp
movsb
jne
dec
bound
fidivrs
push
call
test
sbb
adcb
xlat
aaa
push
xchg
test
jl
xor
cmp
loope
xchg
gs
cld
mov
pop
xor
mov
orl
pop
add
mov
push
jae
out
or
jno
and
fwait
mov
push
sahf
hlt
jo
lahf
mov
shr
xor
mov
daa
push
or
cmp
call
cmp
xor
aad
insl
shrl
repz
pusha
ds
jecxz
inc
decl
mov
mov
mov
push
stc
or
dec
movsb
sub
loope
test
pop
jmp
cmp
jnp
inc
xlat
in
mov
mov
xor
fcoms
fldl
pop
cmp
dec
fs
test
subl
lahf
into
ret
sub
popf
cmpl
xlat
lods
daa
imulb
mov
dec
ret
out
push
outsl
mov
jmp
mov
imul
xchg
decl
dec
aad
sbb
lock
sbb
incb
or
sbb
arpl
or
xor
ja
aam
pop
inc
pop
dec
lret
dec
gs
pop
push
cmp
push
jmp
xlat
xchg
push
lcall
fists
jecxz
pop
mov
mov
cltd
jns
and
ds
or
outsl
ret
add
inc
out
mov
or
lret
test
daa
js
and
sub
mov
sti
test
les
imul
mov
jp
sbb
rol
ret
aad
gs
mov
cmpsb
inc
jae
cltd
nop
in
out
sub
cwtl
push
stos
mov
dec
adc
not
sbb
and
dec
xchg
in
sub
mov
out
dec
bound
sub
sub
ljmp
movsb
inc
ljmp
clc
mov
repz
and
sahf
add
cltd
add
mov
sbb
aam
or
push
xchg
fisttpll
out
push
mov
push
sahf
test
cmpsb
adc
cmp
leave
sbb
push
popa
into
das
sbb
std
adc
fisubrl
popl
cmp
enter
sti
in
dec
jge
and
call
adc
in
mov
xor
repz
xor
movsl
add
xchg
pop
rcrb
xchg
pop
jle
lahf
pop
int3
sub
cmp
lds
mov
loopne,pn
cmpsb
cltd
mov
mov
sbb
ficompl
inc
mov
add
sahf
adc
inc
test
ss
mov
ds
xchg
cld
mov
add
in
push
pop
xchg
push
in
xchg
sbb
faddl
xor
sbb
xorb
pop
sbb
shr
sub
mov
push
das
jge
das
inc
cld
pop
push
lock
lea
je
pusha
or
mov
int
call
sti
push
scas
js
adc
jl
mov
jecxz
adc
lcall
xchg
jp
lock
fisttpl
lds
test
scas
inc
sti
aad
outsb
jo
cmp
mov
ljmp
mov
dec
push
cwtl
adc
sbb
movsb
insb
cmp
xchg
sub
stos
pushf
sub
adc
cwtl
stos
shlb
test
shll
cmc
lock
pop
and
fistpl
bound
repz
xchg
outsb
test
iret
add
sbb
xchg
cwtl
cmp
jge
outsl
pushf
sub
adc
lret
mov
xchg
and
adc
fiaddl
sub
xchg
pop
push
shl
cmc
cmpsb
xorb
xchg
add
adc
sub
dec
cltd
insb
and
add
sbb
inc
add
int3
ljmp
cltd
xor
inc
mov
mov
adc
pop
xlat
iret
dec
in
mov
loopne
lods
sub
xchg
std
jp
out
js
out
dec
and
pop
lcall
sub
jbe
mov
ret
or
sub
mov
jae
fisttps
aaa
add
mov
arpl
mov
int
push
int
inc
cmp
inc
rcrb
adc
mov
push
out
fcomip
rolb
sub
roll
cli
in
sbb
push
push
inc
inc
rorb
jnp
xchg
jne
add
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xchg
mov
push
xor
push
ret
aas
fstp
nop
mov
mov
adc
les
bnd
sub
ljmp
test
and
fstpt
jle
hlt
jne
sbb
push
ljmp
bound
cld
add
add
cmp
test
lea
push
inc
jl
mov
movsl
sbb
sub
bound
ja
sbb
movsl
xchg
mov
test
les
fsubrl
xchg
and
insb
test
out
rcl
clc
movsl
jl
insl
shr
enter
mov
out
jno
mov
xchg
cmp
aad
fwait
pop
pop
mov
pop
out
pop
ja
icebp
adc
jae
stos
test
mov
mov
fcomip
or
cmp
cld
insl
push
lds
and
xchg
mov
sarb
xchg
nop
jmp
jo
push
xor
insl
and
loope
pop
cmc
das
vpsubsb
outsl
test
push
bound
inc
sub
mov
sbb
in
dec
icebp
bound
lods
sbb
mov
inc
inc
outsl
js
sub
cmp
or
outsb
jnp
es
inc
insb
bound
mov
pop
and
adc
or
jge
or
cmp
dec
aas
imul
xchg
movsb
mov
js
rcll
push
sbb
adc
mov
mov
xchg
leave
clc
mov
pop
inc
out
mov
mov
ret
aam
lcall
sub
sub
sub
sbb
xor
add
mov
dec
test
test
dec
dec
mov
mov
ret
jae
fcomp
and
imul
insl
out
add
dec
mov
in
mov
andl
jno
in
out
xchg
loopne
adc
sub
subb
gs
xchg
sub
pop
fisttps
xchg
mov
stc
fidivrl
jg
jnp
xlat
arpl
les
jno
mov
and
imull
adc
push
inc
fucomi
adc
dec
je
pushf
and
pop
ret
shrl
dec
inc
pop
push
ffree
inc
inc
dec
data16
mov
pop
in
aas
lahf
daa
mov
jmp
xlat
pop
loope
jl
and
push
mov
xchg
xlat
arpl
adc
add
jns
sub
ds
push
adc
int
pop
loope
cmp
cld
into
sub
jo
repnz
call
lock
pushf
test
mov
inc
cmp
lea
cmp
xor
into
xchg
xchg
aad
shlb
add
out
mov
enter
push
jp
mov
pop
pop
mov
fisttpll
jp
fs
pop
or
nop
sarb
add
ret
sbb
add
add
mov
mov
sub
add
mov
xor
mov
and
mov
jmp
icebp
orl
nop
dec
pop
xchg
ret
xor
mov
mov
rol
hlt
insl
cmp
adc
repnz
mov
pop
sub
push
push
lret
add
push
ljmp
mov
mov
push
inc
dec
subl
lret
int
cltd
popf
ljmp
outsb
mov
shll
dec
push
das
jnp
in
add
jb
orl
lds
mov
mov
adc
mov
sub
sets
add
xchg
xchg
cmpsl
jo
jg
adc
or
in
mov
daa
test
mov
inc
movsl
xor
mov
out
mov
rolb
pop
fcoml
pop
jae
ret
addr16
adc
xor
jl
sbb
cli
cwtl
adc
enter
sarl
leave
inc
idivl
push
jne
shll
lret
stos
cli
mov
dec
sbb
test
je
repz
loop
lret
xor
add
daa
jnp
jge
lods
inc
icebp
push
in
mov
ds
cwtl
insb
jmp
aam
loopne
inc
xlat
addl
mov
mov
loop
fisubs
xor
mov
jo
gs
xor
cmp
jle
pop
inc
and
mov
popf
xor
subb
and
mov
in
mov
ljmp
add
dec
pop
mov
repz
mov
and
ljmp
ret
cltd
pop
sbb
push
cmp
js
dec
call
jmp
adc
fldl
call
gs
mov
mov
ljmp
and
inc
adc
sub
mov
sub
add
icebp
je
aaa
pop
mov
insb
movsb
or
aad
int3
movsb
outsl
dec
out
test
inc
popf
stos
fstps
mov
xlat
mov
or
sahf
sub
cmp
outsb
cmp
mov
mov
insl
mov
dec
jb,pt
adc
ret
push
cmc
stc
xchg
loop
mov
filds
cmpsb
sbb
inc
push
lock
je
sub
sub
out
adc
sub
dec
adc
fwait
jp
sub
jl
rcrb
cmp
test
leave
xchg
jmp
lea
mov
or
sbb
xor
push
fisubrs
add
dec
push
lret
je
and
sub
icebp
inc
xor
cwtl
sub
lret
and
dec
lahf
call
repnz
ret
fmuls
jnp
add
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
push
jmp
push
jnp
jl
mov
nop
push
jb
movsb
sub
mov
mov
jo
pop
loop
mov
sbb
mov
cmp
int3
push
xchg
ljmp
sahf
lock
lds
aaa
or
out
push
addr16
ss
in
shr
mov
les
lahf
clc
imul
aas
out
leave
mov
outsb
icebp
data16
cmc
pop
pop
rcl
xor
jp
jle
xor
jae
es
dec
mov
ret
mulb
je
mov
jg
xor
sub
aaa
cmpl
ljmp
scas
mov
icebp
orb
inc
lcall
test
sub
cmpsb
inc
mov
call
push
iret
xor
cmp
add
push
push
and
xchg
stos
mov
test
popa
push
adc
cmpb
xor
popf
xor
inc
push
gs
dec
sbb
mov
dec
dec
stos
sbb
fs
mov
mov
inc
adc
dec
mov
sub
xlat
cwtl
ss
adc
fsts
std
adcl
push
adc
imul
cmp
push
push
repz
arpl
cmpsb
scas
or
ja
pop
lcall
push
dec
dec
cmp
push
sbbl
int
and
int3
jb
mov
hlt
out
aad
sti
mov
mov
jge
xchg
mov
arpl
cmp
mov
mov
mov
jmp
and
shlb
loope
inc
jge
lret
ljmp
jmp
pop
dec
push
cmp
dec
outsl
nopl
add
icebp
repz
cld
enter
mov
cmpsl
jnp
rcrl
push
dec
out
cmpsl
into
mov
test
and
flds
subb
in
jnp
mov
daa
scas
mov
imul
cmpsb
xchg
jbe
sub
fistpll
dec
pop
sub
push
movsl
fs
inc
cmp
xor
and
mov
push
cmpsb
mov
sbb
mov
cmpsb
mov
sbb
jnp
popw
cmpsl
mov
mov
stc
cltd
outsl
push
nop
shl
sbb
inc
fwait
adc
cmp
mov
jno
mov
sub
dec
adc
add
push
mov
sti
push
xor
shll
jns
test
decb
mov
shlb
adc
inc
jg
jecxz
movsb
bound
push
mov
xor
rcll
add
movsl
test
xor
pop
inc
xor
int
cli
or
jg
movsb
stos
adcb
lea
imull
pop
fs
enter
xor
adc
mov
jne
mov
push
push
cltd
mov
push
push
xor
mov
add
mov
and
shrd
xor
shr
mov
cmpl
not
mov
movl
movl
jmp
mov
movl
cmpl
jg
push
push
call
and
xor
add
and
mov
and
adc
add
movl
mov
cmpl
movl
not
movl
mov
jmp
movl
cmpl
jne
push
pushl
call
and
negl
not
sbb
sub
or
xor
or
xor
mov
sub
xor
or
mov
cmpl
not
mov
mov
mov
jmp
mov
cmpl
jbe
push
call
and
inc
adc
mov
or
mov
mov
shl
mov
shrd
xor
addl
shr
cmpl
movl
mov
jmp
movzwl
cmpl
jl
pushl
call
sub
xor
or
mov
sub
sub
inc
inc
orl
adc
sbb
cmpl
movl
mov
jmp
mov
movl
cmpl
jae
push
pushl
call
xor
or
mov
sub
add
xor
add
sub
neg
sub
mov
cmpl
movzbl
mov
jmp
movl
movl
cmpl
jbe
push
pushl
push
pushl
pushl
call
and
and
sbb
inc
addl
mov
xor
add
mov
sub
or
xor
xor
or
adc
mov
sub
mov
mov
mov
mov
mov
xor
mov
mov
mov
sub
mov
mov
xor
mov
movzbl
sbb
shl
mov
adc
xor
and
shld
jmp
scas
cltd
and
sub
push
mov
outsb
fstpl
mov
xchg
je
outsl
aas
cli
into
test
jae
sbb
and
lods
xchg
std
scas
pop
cmpsb
loope
and
add
clc
inc
pusha
add
mov
stos
dec
add
aam
ret
cmc
adc
outsb
and
mov
xor
pop
jne
sub
out
icebp
dec
dec
popf
cmp
pushl
rolb
test
fcomps
sbb
or
fwait
movd
jge
testl
imul
pusha
push
mov
fs
xchg
inc
imul
add
sub
sbb
add
rcl
xchg
in
aam
lahf
push
fmull
lahf
inc
imul
xlat
addr16
cmc
les
sub
test
add
insl
dec
xchg
sub
hlt
iret
scas
out
std
jne
jp
cld
andb
inc
mov
push
pusha
pusha
rclb
repnz
xor
or
sbb
mov
xor
fs
fcoml
inc
sbb
mov
xor
add
add
cmp
sbb
cltd
stos
dec
test
lods
xchg
sbb
add
sub
push
in
cmc
in
add
cmp
xchg
mov
aad
mov
rcr
jge
mov
outsl
jno
and
sub
roll
xchg
inc
cmp
mov
es
fnsave
inc
jb
out
and
outsl
xor
mov
jo
xchg
int3
xor
jle
and
shl
pop
shrb
inc
mov
sub
into
mov
clc
pop
test
sub
cmp
add
mov
push
je
mov
mov
cmp
pushf
ret
shlb
mov
fidivs
scas
inc
push
jecxz
pop
xchg
mov
stos
jno
inc
lock
ficomps
popf
mov
out
and
cmc
add
sti
and
inc
scas
add
aad
fidivl
or
mov
xorb
push
lock
mov
rorb
movsl
pop
mov
jae
arpl
mov
lahf
xchg
sub
pushf
push
fiaddl
popa
push
orl
push
push
mov
mov
stos
xor
pop
insl
mov
mov
add
cmp
call
jmp
jns
scas
or
sub
mov
icebp
pusha
inc
cltd
in
jecxz
mov
or
imul
outsl
xor
daa
xchg
adc
movsl
cld
xchg
arpl
mov
xchg
mov
pop
ficompl
shll
pusha
xchg
inc
dec
shll
mov
rcl
lds
subl
cli
jb
mov
adc
movsl
scas
cmp
add
out
mov
pop
inc
lock
add
push
adcl
das
jne
addr16
in
test
js
push
loopne
loopne
and
mov
mov
mov
movl
mov
xor
xorl
xor
movl
movl
movl
movl
mov
movl
cmp
jne
cmp
je
mov
sub
mov
xor
shld
xorl
shl
addl
xor
cmpl
not
not
jmp
mov
not
cmpl
je
push
pushl
call
mov
xor
mov
sub
inc
adc
xor
xor
adc
mov
xor
mov
movl
cmp
movl
jne
cmp
movl
je
add
mov
negl
mov
push
and
pop
or
jmp
imul
and
mov
mov
push
das
mov
or
cmp
cli
jl
int3
sub
or
into
pop
add
lds
add
test
rcrl
mov
int3
or
pop
pop
push
clc
and
jae
shlb
mov
mov
hlt
xchg
adc
xor
mov
inc
or
pop
addl
pop
or
add
int
push
icebp
jle
sub
lret
adc
rcrb
movq
jl
sbb
lret
xchg
inc
xchg
jecxz
rep
and
or
push
pop
jnp
fs
mov
xlat
adc
icebp
cmpsl
pop
inc
cmp
mov
outsb
sub
in
add
cmp
sbb
lret
jl
test
or
mov
cli
sub
mov
mov
pop
loopne
xchg
shlb
mov
mov
pusha
bound
mov
insb
jmp
ret
cmp
mov
mov
mov
jecxz
sbb
repz
fiaddl
jle
and
mov
dec
jl
aad
push
mov
push
daa
mov
icebp
fstpl
mov
lods
inc
sbb
sub
push
imul
popa
js
cmp
add
outsb
icebp
fmull
iret
dec
test
or
stos
mov
cli
les
jp
fsubrl
dec
sub
subl
and
lods
sub
mov
scas
out
addb
jge
mov
lods
sbb
out
inc
push
in
js
mov
adc
imul
push
push
pop
sbb
in
leave
movsb
sti
fsubl
pop
jp
bound
insb
jo
jecxz
repz
lea
loope
add
or
mov
enter
push
and
ss
enter
cmp
stc
sub
xor
inc
xchg
nop
into
pushf
mov
imul
divb
scas
sti
cwtl
pop
sbb
sbb
leave
mov
mov
push
iret
aaa
jmp
pop
in
out
cmp
inc
out
cmp
ret
mov
cmp
xchg
inc
dec
fsubr
xlat
stos
xchg
sub
int
cmp
mov
and
push
iret
sbb
push
pop
cmp
rol
push
out
fstps
mov
repz
mov
nop
negb
jg
dec
lods
popf
inc
pop
loopne
pop
xchg
pop
push
sbb
add
sbb
dec
mov
add
xchg
mov
jbe
fwait
lods
xchg
and
sbb
dec
sbbb
sbb
pop
mov
sbb
and
rolb
push
popa
idiv
jns
fs
in
js
scas
mov
sub
shr
insb
sub
aas
cmp
roll
call
mov
jno
test
xchg
push
idivb
loop
call
iret
loop
fisttpll
fs
lret
test
inc
pusha
movl
in
xor
xor
add
sub
shl
xorl
mov
xor
shr
jmp
jmp
mov
push
repnz
in
les
xchg
cwtl
fiadds
fmuls
xchg
jmp
mov
out
pop
movsb
sti
adc
ficomps
fdivl
xchg
cmp
mov
in
repnz
xchg
and
mov
xlat
mov
fnsave
js
cmp
push
pop
inc
and
adc
sbb
repz
xor
outsl
push
cmp
xor
sbb
cmp
lea
rolb
xor
sub
mov
mov
std
jmp
js
lea
inc
movsb
aam
and
test
leave
in
xchg
jle
scas
xchg
mov
rcrb
out
xor
imull
pop
xchg
xor
xchg
roll
pop
add
pop
daa
adc
and
out
xbegin
mov
clc
sbb
sub
fistpll
pusha
aas
xchg
out
dec
fisubl
push
and
sbb
bound
js
push
sub
fdivs
and
jmp
dec
ret
es
cs
dec
cmp
adc
inc
lret
popa
mov
repz
das
mov
mov
shll
mov
sti
push
dec
div
enter
push
dec
xor
dec
mov
repnz
jg
clc
rcrb
dec
adc
or
mov
cmp
and
jecxz
ljmp
inc
adc
ja
or
adc
mov
adc
dec
sarl
adc
jmp
ss
orb
neg
and
dec
cmp
pop
bound
add
popf
jmp
adc
into
insl
iret
repz
es
cmp
add
orb
das
sbb
cmpl
fwait
sub
dec
add
inc
inc
shl
frstpm(287
xchg
and
rcrb
popa
and
jno,pn
pop
add
popf
inc
lahf
inc
aam
scas
movsb
inc
pop
adc
sahf
imul
repz
mov
jmp
fists
mov
aas
push
ret
jmp
mov
outsl
roll
sbbb
adc
push
leave
mov
sbb
movl
jbe
pop
nop
pop
xor
cmp
xchg
sbb
les
jbe
sub
fsubrs
sub
clc
stos
dec
push
mov
sbb
int3
pusha
xor
stos
pop
mov
mov
cmp
test
pop
jle
scas
and
daa
jmp
xor
fcmovb
jb
sbb
jb
scas
test
mov
xor
xchg
mov
ret
lcall
mov
add
jge
jecxz
les
xorb
add
mov
xorb
mov
movsb
jo
lock
in
sbb
ret
mov
std
mov
out
xor
xchg
adc
cwtl
movsl
push
dec
jge
in
sbb
push
and
roll
add
add
or
add
mov
pop
addl
flds
add
movl
cmpl
ja
push
push
pushl
push
push
pushl
call
adcl
or
mov
xor
addl
xorl
cmpl
mov
movl
movl
jmp
mov
cmpl
jl
pushl
pushl
pushl
call
adc
mov
and
and
mov
xor
mov
dec
mov
cmpl
movl
mov
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
push
call
movzbl
and
sbb
and
mov
add
andl
mov
adcl
mov
cmpl
movl
mov
jmp
movl
movl
cmpl
jbe
push
push
push
call
and
mov
mov
add
or
sbbl
sbb
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
cmpl
jle
push
call
addl
sub
mov
xor
mov
inc
movzbl
sub
mov
cmpl
not
movl
jmp
movl
cmpl
jle
push
push
call
sbb
xor
and
incl
addl
or
mov
mov
push
subl
pop
sbbl
sub
cmpl
mov
not
movzbl
mov
jmp
movl
cmpl
je
push
push
call
orl
movl
sub
or
neg
mov
add
mov
lea
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
jmp
in
dec
ret
in
fs
pop
push
aaa
scas
iret
in
xchg
mov
xchg
cmp
mov
bound
jbe
imul
mov
cmp
sbb
popa
loopne
sub
and
push
lods
jl
or
xor
lahf
js
pusha
xchg
push
push
mov
push
add
movsl
inc
cmpsb
pop
mov
push
imul
mov
and
jge
out
or
push
fstpt
push
push
jne
leave
out
push
cmp
jg
imul
push
jno
xlat
sbb
xchg
or
jl
loopne
jo
movsl
daa
outsl
fucom
cli
sub
cmpsl
inc
aaa
add
push
mov
add
adc
xor
les
lods
adc
and
or
sbb
push
call
pop
lods
hlt
xor
push
mov
mov
es
jg
mov
xchg
into
test
cmp
jecxz
pop
adc
pop
cli
lods
shrb
mov
stos
mov
jns
loop
push
test
adc
movsl
mov
pop
sahf
xor
jle
add
jge
jg
out
lcall
inc
inc
insb
sbb
cwtl
dec
add
mov
std
pop
mov
and
shl
lock
jnp
ja
add
inc
rcrl
out
xor
aaa
ret
es
sub
test
jp
sbb
lret
push
in
lahf
add
rcll
xchg
mov
test
and
pop
xor
hlt
xor
sbb
xchg
sub
sar
pop
add
pop
mov
imul
pop
push
lods
scas
jp
add
and
imul
jg
dec
inc
arpl
scas
sbb
nop
add
inc
push
fldt
fwait
ja
rcrl
loop
addr16
push
cmpsl
es
mov
js
and
mov
enter
ds
sbb
ss
mov
pop
fistps
pop
gs
adc
mov
ss
xor
pop
sbb
aaa
ja
cmc
inc
xor
pop
sbb
flds
push
cld
xchg
clc
inc
pop
subl
push
fmull
icebp
mov
push
das
cmp
bound
mov
jmp
and
enter
std
push
icebp
cmc
inc
stos
out
shl
out
out
dec
inc
inc
jecxz
inc
push
repz
inc
aaa
mov
les
pop
cltd
xor
in
sti
and
jb
push
adc
leave
test
popf
push
mov
int3
sbb
pusha
push
lods
ret
xchg
cli
xor
popf
pop
xlat
inc
cmpb
xor
out
dec
jge
pop
mov
cltd
sub
add
std
sbb
xchg
cmp
xor
or
daa
jmp
movsb
cmp
call
add
sarl
shlb
cmp
addr16
gs
inc
test
add
cmp
out
mov
popa
shrd
cmc
add
pop
xchg
jnp
movsl
xor
cmp
mov
fldl
sub
leave
sub
out
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
lock
dec
mov
xor
movsb
cmp
jbe
sbb
mov
push
sbb
cwtl
pop
or
xchg
jb
scas
inc
bswap
dec
test
push
aaa
test
push
pop
mov
test
cwtl
cli
jle
and
cmp
mov
and
xchg
jne
lea
jne
push
or
mov
cmp
fwait
lahf
add
ret
or
inc
adc
lahf
dec
ret
mov
bound
out
xchg
sbb
fiaddl
notl
pop
test
clc
jae
cmpsl
lahf
and
adc
rolb
push
insl
mov
jle
xchg
jae
std
aas
mov
xchg
in
pop
sbb
xchg
xor
cltd
ljmp
imul
ja
sub
push
xchg
pop
mov
scas
pop
test
jge
ja
push
push
aas
out
arpl
push
or
repz
mov
or
shlb
jg
sbb
hlt
aad
rcrb
addr16
cmpsb
mov
rorl
cmp
pop
fyl2x
icebp
call
mov
inc
testl
pop
fmuls
xor
ja
mov
insl
inc
xlat
push
sahf
and
loope
sahf
pop
aad
mov
mov
lahf
aas
or
or
sub
fmuls
clc
ret
mov
and
es
push
xor
imul
mov
adc
outsl
test
sbb
pushl
mov
pop
xchg
xchg
push
fstl
pop
sub
scas
add
xchg
push
mov
sbb
loop
jl
loope
cmp
dec
jns
jl
sbb
data16
mov
or
jb
jbe
int3
or
ja
push
roll
jge
xor
sbb
gs
fimuls
fdiv
mov
push
aas
mov
xor
mov
outsl
call
inc
lcall
fldl
pop
mov
fdivrs
fistps
and
decl
add
push
sub
inc
arpl
xchg
pusha
movsl
shll
movsb
xor
jecxz
int3
mov
push
int3
jp
dec
sub
xchg
mov
loopne
pop
xor
mov
cli
mov
pop
push
cwtl
cwtl
sub
xchg
and
test
out
hlt
jnp
inc
out
push
adc
xor
popa
orl
stos
jae
les
cmp
sti
daa
mov
stos
and
pop
lea
adc
mov
popf
test
ljmp
jmp
sub
sbb
jnp
xchg
mov
cmp
sarb
jle
in
and
sub
addr16
sub
fsts
adc
fwait
aam
sarl
rclb
insl
sub
adc
jnp
movl
lret
div
lods
ret
pop
xlat
enter
push
inc
mov
xor
push
clc
adc
outsl
push
hlt
shlb
adc
rol
loope
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
jmp
pop
add
jl
fisttpl
push
rorl
mov
mov
and
lods
bswap
outsb
adc
cmp
cwtl
test
and
fiaddl
imul
push
std
cmp
push
jge
jle
add
bound
repz
pop
jnp
ja
subl
cmp
sub
loope
cld
xor
cwtl
lret
js
fsubrl
xchg
je
aas
pop
and
mov
sbb
cltd
pop
in
mov
out
pushf
mov
xchg
in
call
insb
shll
xor
ds
aam
push
fadds
dec
pop
sahf
or
or
test
lret
jp
lahf
add
jge
xorl
into
lea
lods
sub
iret
mov
mov
push
xchg
mov
push
dec
dec
add
jnp
andb
mov
test
fnstenv
inc
cmp
sub
lea
imul
sbb
adc
icebp
jae
out
push
fisubrs
fwait
mov
inc
mov
pop
loope
add
js
pop
nop
mov
lret
lcall
cmp
lods
mov
xchg
test
mov
das
ja
nop
sub
inc
mov
adc
stos
or
std
xlat
ss
cmp
or
xchg
rorb
xchg
mov
pop
les
loop
add
cmp
sarb
xchg
addr16
pop
fsub
out
or
fcoms
push
sub
or
cmp
xor
xchg
dec
and
lods
scas
push
negb
and
js
cs
adc
fbstp
mov
inc
gs
insl
in
inc
add
stos
leave
filds
pop
sub
mov
sti
jns
loope
inc
mov
insl
sbbb
or
in
pop
adc
testb
push
adc
pop
mov
mov
jae
pop
jno,pt
mov
sar
and
fimuls
nop
pop
xchg
jno
mov
pop
jge
stos
sub
cli
xchg
mov
stos
loopne
inc
xor
movsl
fdivl
xchg
jl
lea
loop
andl
inc
loopne
cmp
xchg
pop
jnp
or
mov
mov
cmp
dec
mov
push
add
jl
out
mov
pop
std
in
and
jae
xchg
xchg
icebp
cmp
mov
mov
or
adc
in
adc
popf
mov
jae
leave
sarb
into
mov
mov
movntq
fmull
push
cwtl
imull
xchg
insb
out
outsl
ficoms
adc
jne
enter
lds
jo
daa
adc
out
lock
cmp
inc
mov
jge
test
hlt
cmpsb
and
push
out
stos
rolb
cmp
adc
jle
popa
push
rolb
or
sti
pop
cwtl
arpl
rorl
shrd
shr
xor
jmp
cmp
sub
xchg
push
push
mov
in
les
ret
mov
push
sub
pushf
push
je
sub
pop
out
mov
inc
test
inc
fcompl
das
jmp
cmp
mov
jl
jbe
imul
cmp
jp,pt
jmp
js
out
mov
xor
xchg
aad
pop
xchg
mov
push
pop
jae
loope
sahf
leave
push
adc
and
into
add
xor
sub
adc
js
cmp
rolb
dec
sub
je
loop
pop
lahf
sarl
xlat
es
cmp
push
fwait
xchg
mov
cmp
and
jbe
cltd
xor
inc
push
mov
aas
push
cmp
and
pop
push
jge
gs
xchg
int
mov
test
xchg
fcoms
lret
cmpsb
mov
or
mov
mov
sbb
mov
jge
cld
cmp
dec
or
add
mov
push
stc
rclb
int3
cwtl
lcall
and
int3
pushf
aam
mov
in
pop
xor
dec
adc
jbe
lcall
shlb
subb
mov
cli
jb
or
clc
arpl
test
maxps
jle
stc
jno
cld
aaa
jmp
fildl
and
cmp
or
setle
aad
mov
push
push
fwait
cmpsl
call
mov
fnstenv
pop
adcl
mov
clc
leave
loopne
mov
jae
in
dec
icebp
fnstsw
fiaddl
pushf
pop
cmp
jne
loop
in
push
and
lock
clc
mov
or
adc
movsb
inc
adc
movb
outsb
push
ds
gs
and
xchg
sub
inc
ret
or
inc
jmp
mov
movsb
dec
gs
add
insl
and
in
faddl
aam
daa
and
fidivs
imul
xchg
push
xchg
in
mov
dec
jmp
inc
jecxz
bound
jp
add
mov
mov
in
xchg
loope
or
xor
das
es
add
cmp
pop
jne
pop
outsb
loop
cli
ljmp
adc
mov
dec
test
es
into
lcall
push
mov
fcomip
pop
pushf
sbb
mov
mov
shl
pop
int
xor
push
aad
pushf
nop
mov
enter
pop
cli
std
mov
clc
out
test
lods
jl
dec
and
pop
jl
into
mov
mov
mov
sbb
nop
sbb
or
inc
push
mov
insl
outsb
or
fmuls
scas
arpl
dec
add
inc
nop
lea
rclb
dec
add
repnz
loopne
or
in
cmc
in
xchg
lcall
adc
fisttpl
lret
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
jmp
pop
cmp
das
lods
sbb
or
in
les
faddl
mov
jle
aad
test
lahf
cmp
sub
inc
push
jno
sub
push
xor
jmp
adc
cmpsl
inc
fldl
pop
das
push
jg
scas
dec
push
loope
lahf
or
test
pop
mov
sub
add
jmp
ret
or
repz
daa
jp
shlb
mov
test
pop
adcl
adc
mov
push
adc
pop
and
cltd
xchg
mov
sbb
sub
ja
test
jle
xlat
cmp
orb
in
mov
lds
xchg
jmp
fsubs
xchg
iret
mov
or
adc
push
testl
outsl
sbb
sub
push
push
aam
or
or
add
ljmp
mov
int
pand
adc
jnp
sbb
jb
aad
jp
nop
push
add
cli
xor
js
inc
sub
fstp
cltd
daa
adc
adc
inc
mov
int3
cmp
push
push
xor
lcall
sahf
dec
mov
fiaddl
out
aad
fs
gs
ret
xor
sub
push
xor
sub
cltd
push
dec
movsl
in
fs
test
xchg
pop
pop
daa
mov
stos
mov
ljmp
dec
idivl
pushf
or
fimuls
mov
dec
add
sub
mov
jmp
push
jnp
lss
push
jnp
xorl
xchg
or
insl
sub
out
jne
mov
mov
imulb
cmp
sub
mov
sub
and
lret
nop
ficomps
and
mov
jne
in
je
xor
push
fimull
cmp
lods
ja
and
push
fs
mov
xchg
out
jno
out
sub
mov
xchg
sub
pop
data16
push
mov
jmp
fdivp
add
mov
jg
mov
cmp
lcall
imul
xor
lods
push
jle
xchg
xor
das
gs
es
shrb
push
pop
repnz
aam
and
test
push
loop
cmp
push
loop
leave
ljmp
sbbl
pushl
fcmovnu
lcall
jbe
ja
ficomps
xor
push
dec
mov
aam
adc
dec
std
jmp
pop
das
hlt
outsl
adc
jnp
outsl
pop
nop
and
dec
jae
int
push
inc
loope
inc
addb
aas
and
bound
in
enter
or
and
xor
cmp
mov
data16
jmp
ds
jb
jb
push
cmp
jmp
cmp
cli
sahf
pushf
push
jne
outsl
das
loopne
or
cs
add
stc
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
jmp
fisttps
xor
mov
nop
mov
lret
repz
xchg
sarb
dec
xor
add
push
mov
pop
repnz
clc
ret
lds
shl
cmp
xchg
sub
lods
mul
js
ds
dec
cmp
sub
mov
push
in
test
mov
lret
sahf
shrb
mov
inc
xchg
repz
enter
rorb
icebp
cmc
push
les
dec
mov
xchg
mov
imul
sbb
mov
push
xchg
push
into
push
or
xor
fs
push
xchg
and
lods
inc
loop
inc
push
cmp
jbe
mov
mov
push
lcall
testl
mov
shlb
cmc
jnp
leave
stos
into
or
fdiv
or
inc
dec
cmp
mov
ds
xchg
xor
mov
cmp
scas
scas
or
push
add
cmp
stc
int3
fsubrs
sbb
push
and
pop
sub
inc
xorb
xchg
mov
test
nop
cli
dec
fldl
push
jb
pop
inc
fists
out
jl
cmc
jae
aam
dec
mov
imul
movsb
or
add
gs
and
clc
mov
jp
mov
js
aam
mov
lock
push
push
adcb
jb
pop
jp
dec
mov
sti
mov
les
xlat
adc
icebp
mov
or
cmc
jge
test
sub
or
sub
xchg
out
pusha
mov
xor
cmpsl
pop
inc
in
test
jle
fidivs
sbb
fnstcw
or
test
dec
cmp
loop
push
pop
mov
mov
push
hlt
mov
jno
push
fwait
loopne
add
test
fwait
pop
xor
lods
inc
lea
push
push
add
adc
ja
aaa
xchg
dec
out
jmp
lret
mov
ja
or
in
shrl
lock
loop
mov
pop
pop
jge
repnz
fcompl
sbb
mov
andb
push
mov
rcll
das
aaa
and
icebp
xlat
dec
or
test
dec
rcr
add
pushw
imul
jbe
sbb
jae
inc
or
in
xor
imul
add
cltd
sti
gs
test
push
lods
insb
sbb
adc
and
sahf
hlt
xchg
clc
iret
adc
and
je
je
fdivl
mov
sti
xchg
jle
ret
sub
popf
or
cs
mov
ds
nop
inc
inc
sbbl
sbb
mov
loopne
iret
or
sbb
inc
rolb
push
js
push
lret
stc
lods
xor
popf
rclb
int
dec
push
popf
pop
push
gs
repnz
and
loope
mov
ret
ja
loopne
jl
push
jmp
call
mov
mov
and
xchg
or
mov
mov
inc
test
cwtl
shrb
cltd
push
aaa
pop
loop
sbb
sti
inc
out
dec
push
xor
iret
and
xor
cmp
insl
pop
add
jo
mov
lock
xor
xchg
stos
xor
insb
cld
pusha
push
pop
dec
out
mov
push
mov
push
bound
inc
iret
test
clc
gs
and
and
mulb
adc
lret
pusha
push
fistpll
dec
sub
mov
and
or
add
xor
iret
xlat
fwait
sti
xchg
aaa
lahf
addr16
jmp
lcall
jns
push
sub
jmp
sub
pop
add
mov
fucom
repnz
dec
lret
test
repnz
mov
adc
or
sub
repz
xchg
xchg
rclb
push
xor
lods
sub
xor
les
add
sbb
fcmovb
scas
repz
insl
ds
mov
pop
out
jp
std
stos
fadds
rcrb
sbb
fists
xlat
bound
or
xchg
out
jns
push
mov
push
scas
pusha
pop
mov
or
out
lds
mov
in
jne
mov
subl
test
cmpsl
mov
shr
lret
shlb
xchg
sahf
addr16
or
push
push
pop
jo
popw
jg
dec
sbb
jecxz
into
lret
bound
cld
cmp
push
in
shl
rcrl
lods
sbb
cld
push
pushf
fldenv
xor
push
das
pop
and
int3
ja
xchg
adc
mov
jge
dec
adc
mov
mov
aam
mov
cmpb
pop
mov
gs
mov
je
or
xlat
dec
xor
xor
ds
ret
adc
pop
loope
pop
dec
movsl
dec
sbb
out
ja
out
adc
lret
dec
sti
or
inc
jnp
jecxz
shlb
std
adcl
add
push
lcall
xor
cs
cmp
mov
adcb
mov
jbe
call
hlt
adc
iret
and
xchg
out
stc
clc
sahf
int3
test
xchg
test
jae
orb
ficompl
add
jmp
fcomps
dec
movsb
repz
mov
adc
iret
pop
hlt
inc
inc
pop
add
ret
negb
add
jb
addr16
ret
jae
sbb
mov
push
daa
xchg
outsb
cwtl
fildll
pop
call
mov
scas
lret
cmp
scas
cli
ds
jecxz
cmp
xchg
bound
out
and
cmp
mov
push
out
cmpb
mov
stos
test
gs
and
xchg
jns
push
out
in
sub
adc
push
sub
dec
and
dec
dec
push
in
xchg
inc
push
push
xchg
add
notb
pop
mov
je
movl
mov
xor
test
jmp
jno
mov
fs
sub
xchg
insl
sbb
sarl
mov
mov
jg
pop
loop
jmp
je
aas
inc
btc
ret
cmc
repz
je
lcall
push
rcrb
dec
cmpsl
mov
mov
sub
mov
mov
sahf
pushf
jb
mov
loop
jp
fcomps
pop
dec
vmwrite
cltd
fwait
push
sbb
sbb
lea
sbb
add
mov
fcompl
pop
inc
movsl
jge
inc
imul
and
ficoml
mov
dec
sbb
inc
stc
jg
fldl
rcrb
mov
inc
dec
cwtl
mov
lcall
add
adc
jae
clc
icebp
stos
into
data16
inc
inc
cli
adc
outsb
scas
push
pop
stos
and
mov
mov
mov
pop
pop
xchg
adc
xor
clc
dec
sbb
and
or
lret
fisttpll
int3
popf
xchg
cwtl
fmull
fcom
insb
ljmp
in
cmp
aas
xor
add
pop
mov
call
push
repz
jp,pn
fsubrs
sahf
sti
add
cs
mov
pop
inc
lahf
cmpsl
xor
sarb
jne
stos
nop
sbb
or
lods
push
pop
dec
pusha
loop
mov
and
fs
test
mov
insb
push
add
lcall
push
fsts
fs
mov
into
pop
jbe
dec
ljmp
mov
add
sub
mov
jp
rcl
ljmp
xchg
sub
test
adc
aam
xor
adc
adc
and
ret
pop
mov
mov
push
pop
out
cs
out
pushf
out
mov
mov
add
jge
leave
sub
pop
pop
aam
test
jmp
fadds
mov
mov
es
lds
mov
xchg
in
js
test
jmp
fsubrl
dec
orb
dec
bound
jns
pop
sbb
adcl
sub
inc
xor
rol
xchg
aad
mov
enter
sbbl
adc
pop
pop
nop
jbe
xchg
push
shr
xorl
shll
push
or
mov
sahf
rorl
inc
add
rcl
pop
lret
jb
mov
xchg
stos
clc
mov
test
loope
add
das
push
dec
repnz
test
seto
imul
mov
jecxz
cwtl
mov
add
jp
pop
test
ljmp
add
fbstp
outsb
inc
and
sub
jnp
pop
pop
shl
cld
out
subb
inc
addb
sbb
push
and
adc
cmp
push
pop
jl
clc
inc
push
cltd
je
mov
mov
movb
movb
movb
movzbl
movzbl
or
and
movzbl
and
mov
movb
movb
movb
movb
movb
mov
mov
or
mov
sub
mov
imul
mov
sub
mov
cmp
ja
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
cmp
inc
mov
cmp
mov
fnsave
mov
mov
jne
or
ss
cltd
mov
pusha
fdivs
xor
xlat
orl
fcoms
pop
dec
inc
cmc
mov
je
unpcklps
mov
jns
das
add
bnd
push
xor
pop
xor
loope
nop
lahf
data16
stos
xchg
rorb
add
cltd
scas
pop
xchg
jl
popa
lods
sub
mov
imul
aas
pop
dec
jmp
cld
shll
xchg
pop
mov
push
lods
add
jg
pusha
adc
mov
iret
repz
fisubrl
or
adc
jns
cmp
sbb
sub
push
outsb
addr16
cmp
jle
cmp
add
dec
fs
push
cmp
cmpsb
out
cmp
incl
cmp
aas
push
fcmovnu
fdiv
jns
jp
dec
imul
xchg
das
scas
insl
lds
cmpsl
enter
xchg
imul
mov
pop
stos
xchg
cmpb
push
cwtl
cmp
add
test
cltd
cmp
push
in
pop
push
push
loope
data16
aam
int
sub
addr16
cmp
pop
cltd
add
jmp
sub
or
push
sub
adc
adc
xor
mov
adc
add
mov
and
insb
hlt
mov
idivl
adc
mov
cmp
lods
test
mov
std
jecxz
shl
mov
xchg
xor
lods
xor
in
mov
ja
inc
imul
lahf
jge
scas
sbb
cltd
in
imul
lock
mov
ret
lds
shrb
stc
cld
js
push
cmpsb
or
dec
sbb
jle
xchg
xchg
mov
pop
pop
hlt
aad
mov
push
les
jb
scas
insb
pop
push
jmp
mov
dec
adc
xor
daa
cwtl
iret
ss
pop
push
lahf
mov
jne,pt
dec
outsl
pop
mov
pop
nop
mov
push
in
test
adc
jb
in
ss
jl,pt
add
adc
mov
shrl
pop
sub
sbb
cltd
dec
sahf
pop
mov
lcall
adcb
pop
stos
clc
inc
out
outsl
xor
mov
sub
adc
and
icebp
gs
test
sub
fcomps
xor
cwtl
je
sbb
adcb
movsl
push
fcomi
cli
roll
or
aam
mov
cs
sub
cld
mov
jnp
adc
sub
pusha
jne
loopne
or
nop
jp
frstor
out
in
or
nop
mov
jo
ds
xor
cwtl
lods
push
or
xchg
or
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
orl
mov
or
movl
mov
jne
cmpl
movl
movl
jmp
mov
mov
cmpl
jne
pushl
call
adcl
subl
and
movl
adcl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
jmp
push
inc
cmp
mov
push
mov
nop
pushf
mov
mov
les
inc
inc
cltd
ret
and
pushf
arpl
jb
cmpsl
inc
inc
pop
or
fwait
scas
leave
inc
add
loop
pop
jb
jle
pop
addl
mov
ds
outsl
push
test
fsubrs
in
push
out
mov
push
jmp
in
aam
outsl
pop
imulb
stos
hlt
mov
das
std
clc
xor
adcl
mov
js
xor
cmc
popa
push
and
in
dec
jmp
das
inc
in
adc
push
jge
jecxz
jne
negb
idiv
and
lea
clc
fmul
dec
add
and
fs
xchg
pop
loop
addr16
mov
jbe
push
notb
outsl
xor
cmp
adc
mov
ret
pop
inc
pop
sub
mov
repz
roll
mov
mov
sbb
or
imul
mov
cld
test
or
jmp
jecxz
push
sub
stos
xchg
into
push
pop
and
jo
and
pop
jmp
fsubrs
popa
adc
or
sub
cmpsl
adc
push
fldl2e
loopne
inc
push
pop
imull
cmp
inc
or
bound
sub
pop
dec
mov
push
pop
adc
mov
and
lods
inc
fcomps
dec
aam
clc
jg
fadd
mov
data16
rorb
nop
lahf
es
jns
mov
movsb
or
cmpsb
adc
inc
push
jnp
mov
mov
popa
mov
cmp
das
icebp
xchg
sbb
push
mov
mov
into
push
out
pop
adc
adc
std
pop
lcall
ret
adc
push
mov
add
xchg
xlat
inc
or
aam
and
mov
mov
mov
sahf
pop
pusha
push
fistl
loope
out
fnstsw
xchg
pop
xor
aas
adc
sbb
int
cltd
mov
int3
dec
push
jno
sbb
filds
sarl
adc
popf
addr16
sbb
hlt
sub
inc
jno
jne
out
clc
les
jne
jmp
cmp
lea
mov
into
jmp
lret
add
sbb
mov
dec
jae
inc
sub
and
mov
icebp
pop
les
test
push
std
stc
push
sahf
dec
aad
sti
addr16
jne
cmpsl
pushf
int
and
sbb
repnz
push
shl
mov
mov
jb
arpl
movsb
sahf
jge
shl
add
test
lds
fstpl
cwtl
out
ja
popf
icebp
sub
jns
pop
sbb
or
or
xchg
and
sbb
add
outsl
mov
cld
dec
jne
out
push
repnz
js
inc
add
sbb
xchg
sub
mov
insl
pushf
pop
pop
or
xchg
pop
fs
push
sbbb
adc
out
jae
xchg
push
push
dec
shrl
incb
xchg
jg
xchg
ror
bound
adc
in
bound
or
jno
lret
daa
sub
push
adc
lods
int
je
push
jmp
clc
mov
std
out
jae
pop
xlat
loope
jbe
lods
arpl
jbe
xor
pop
add
hlt
fwait
cwtl
or
rclb
loopne
aad
lods
adc
pop
push
ss
stos
fstpt
xor
js
pop
fwait
pop
pop
aam
push
or
in
ret
cmp
enter
lcall
rorb
sub
inc
ret
sar
adc
sarb
fimull
xchg
or
add
add
add
mov
movl
movl
movl
jmp
dec
pop
xor
inc
imul
movsb
insb
sarb
outsb
out
xchg
jae
mov
sub
cmp
stos
jmp
lods
dec
inc
lds
mov
out
cmc
ds
and
sub
nop
jle
or
pop
loope
jne
jg
das
aas
or
movsl
mov
sub
in
movsb
push
or
mov
cmc
pop
pop
and
mov
mov
shll
sbb
or
je
repnz
sub
daa
lea
aad
std
in
repnz
xchg
xchg
xor
inc
mov
cs
rclb
mov
or
sbb
pop
xor
sub
add
jecxz
jge
and
xor
jmp
iret
sub
add
push
aam
mov
push
mov
sbb
jne
nop
pop
out
movsb
add
xchg
adc
mov
sahf
jge
lahf
adc
fistpll
daa
pushf
fsts
ffreep
inc
ficoml
or
xlat
outsb
leave
xor
cmp
pop
jo
test
jg
bound
rol
outsl
repz
in
fcomp
xlat
jecxz
xchg
repnz
inc
sbb
dec
test
rorb
int3
mov
sbb
mov
mov
in
or
pop
popa
mov
push
sbb
cmc
sub
dec
dec
lahf
jb
push
cmp
les
xor
es
sbb
push
push
jmp
xor
jecxz
popf
movsb
cld
mov
push
or
lret
in
jl
pop
insb
aas
cmp
push
jl
jmp
push
scas
mov
xchg
enter
pop
loopne
push
hlt
xor
ljmp
hlt
push
out
out
mov
ficompl
push
insl
mov
out
es
and
fsub
mov
jnp
test
xor
adc
fdivrl
mov
cmc
outsb
test
mov
xor
out
ja
dec
scas
in
test
sbb
and
repz
cmp
insb
bound
sarb
cmpsb
jle
lods
int
rcrb
cmp
push
sbb
xor
cmpsb
dec
in
cmp
jp
lock
xchg
aaa
cmp
repnz
push
rolb
mov
or
add
push
ja
std
pop
pop
add
sarb
dec
sub
add
dec
fs
xorb
ja
aad
icebp
dec
stc
xchg
add
mov
loope
pop
jge
clc
insl
add
adc
out
les
mov
popf
lods
jo
icebp
push
mov
out
cld
notl
aam
gs
mov
xlat
sbb
mov
jl
push
add
jb
popa
dec
mov
mov
movsb
jno
add
aad
addr16
mov
repnz
pop
push
out
mov
nop
hlt
pop
xchg
xchg
pop
icebp
hlt
jge
fistpl
xchg
lods
leave
push
sbb
mov
dec
lahf
jg
xchg
and
mov
rolb
fildl
imul
dec
sub
cs
outsl
dec
mov
pusha
shl
jae
and
add
or
cmp
stos
sbb
out
imul
adc
pop
into
sbb
sbb
hlt
loopne
rorb
pop
sub
outsb
and
or
inc
lcall
lods
jo
xchg
fwait
jle
mov
shlb
aam
ss
pop
fwait
daa
lahf
mov
push
add
test
movsl
loopne
inc
fsub
cltd
jmp
adc
loopne
adc
sti
pop
xor
mov
fidivrs
mov
xor
faddl
aas
int3
enter
adc
cmc
inc
sbb
and
jp
jno
movb
mov
icebp
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
jmp
mov
cmp
nop
dec
loope
jecxz
int3
sarb
push
xchg
pushf
inc
jl
inc
pusha
inc
clc
mov
ja
std
xor
inc
xor
inc
arpl
dec
mov
or
add
fisttpll
outsb
repnz
in
lds
jge
xchg
pop
mov
rorl
lret
cld
in
sbb
xchg
ret
out
idivb
psubusw
lahf
cli
inc
cs
out
push
jns
xchg
cmpsb
xor
jle
cmp
jns
fwait
inc
xorb
mov
outsl
add
mov
mov
jb
sub
cld
sub
push
cmp
sub
jns
lods
pusha
mov
add
arpl
lret
adc
loopne
mov
mov
xor
jecxz
push
inc
xor
mov
and
sub
jle
push
sub
movsl
mov
adc
sahf
test
or
or
jne
scas
xchg
dec
mov
push
and
sbb
aaa
dec
ss
enter
xor
popl
xor
add
mov
outsl
cmpsl
cmp
fcompl
mov
push
sub
cmp
lock
push
stos
and
popa
push
aas
pushf
cld
stc
lea
and
call
jae
fmuls
outsl
xorps
movsb
dec
pop
rolb
ret
xchg
or
cmc
inc
stos
movsb
cs
stos
mov
stos
jecxz
mov
mov
jl
cltd
push
imul
movsb
xor
lcall
shrl
jle
jnp
pop
jnp
ret
icebp
pop
adc
mov
insl
jne
mov
mov
fcompl
mov
lahf
pop
inc
dec
mov
jecxz
cmp
inc
dec
xor
sbb
push
xor
bound
pop
pop
sahf
daa
iret
leave
adc
cmovbe
add
shll
jecxz
repnz
ja
pusha
out
stos
push
pop
into
aad
mov
jbe
enter
lret
push
in
jmp
dec
ret
pushf
xor
mov
xchg
out
mov
pop
cmp
jmp
add
adc
sarb
or
pop
and
ret
stos
dec
outsl
shl
lahf
push
add
adc
nop
inc
fcmovnu
std
dec
movsb
data16
xchg
sbb
inc
dec
fiaddl
xchg
je
nop
mov
loope
inc
sbb
mov
test
dec
sbb
lahf
jns
xchg
sub
fcoml
movsb
outsl
inc
jmp
mov
mov
lret
adc
jp
xchg
mov
sbb
loope
cmpsb
ja
and
and
cmp
xchg
loop
mov
add
jae
pushl
aam
dec
inc
push
mov
ficomps
cmpsl
les
cmpsb
loope
fwait
jo
in
rol
sbb
subl
fnclex
das
scas
add
pop
sahf
je
inc
in
sbb
daa
dec
es
outsl
hlt
inc
outsl
mov
je
inc
mov
jnp
sub
xor
adc
and
rcrb
and
xchg
int
aad
fcompp
sub
jne
jecxz
add
sbb
lock
push
pop
xchg
pop
into
sub
or
push
mov
incl
mov
mov
xchg
std
mov
sub
dec
leave
sbb
jo
scas
mov
fs
and
sbb
shll
pop
push
add
push
test
fnsave
and
lahf
movsb
push
mov
data16
adc
into
xchg
dec
movsb
ss
enter
icebp
decl
in
hlt
mov
pop
sub
mov
lahf
cwtl
sub
jle
push
ret
push
xor
out
cmp
xor
movsb
and
mov
cmp
out
and
add
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
lea
push
call
pushl
pushl
call
push
call
cmpl
mov
mov
not
movl
jmp
movl
cmpl
jbe
push
call
inc
adc
andl
mov
sub
mov
mov
andl
push
andl
pushl
andl
call
mov
xor
movl
movl
cmpl
mov
movl
movl
mov
jmp
movzbl
movzwl
cmpl
jge
pushl
push
call
not
adc
xor
or
mov
mov
orl
xor
andl
imul
orl
and
sub
or
mov
dec
movl
movl
or
movl
xor
movl
mov
sub
mov
sub
xor
mov
orl
and
orl
mov
xor
sub
addl
imul
mov
movl
cmp
movl
jne
movl
sbb
movl
movl
jmp
and
xchg
jmp
int
mov
or
sarb
idivb
mov
add
stos
adc
and
std
jno
mov
adc
sub
fimuls
arpl
pop
inc
or
mov
cld
enter
xchg
stos
pop
xchg
outsl
jmp
dec
subl
clc
xlat
xchg
stos
jo
cmc
outsl
fwait
sbb
sbb
and
mov
ja
dec
jmp
xbegin
pop
add
das
xor
insl
pop
xchg
pusha
stos
jne
pop
adc
push
cld
xchg
das
scas
std
inc
jnp
sbb
mov
xchg
sbb
dec
int
pop
pop
jbe
push
imull
mov
cld
xchg
inc
push
pop
push
fdivs
sbb
test
sbb
inc
pop
pop
xor
cmpsl
gs
mov
xor
in
xchg
int3
jge
fs
inc
mov
jle
ret
cmpsl
or
stos
inc
shll
pushf
mov
sub
stos
popa
jl
pop
mov
push
add
test
arpl
outsb
sbb
mov
mov
icebp
std
cwtl
dec
mov
jp
mov
cltd
lods
cmp
pop
cmc
pop
adc
cwtl
mov
dec
jbe
outsl
stc
push
aad
cmp
fistpll
inc
xchg
nop
and
adc
pop
xchg
out
cmpsl
dec
outsb
and
andb
insl
es
out
insl
mov
xchg
fdivs
cmp
popf
push
pop
xlat
sub
pop
sbb
lcall
jo
inc
loop
push
call
cli
hlt
loop
into
xor
mov
cli
loope
fcos
loop
fstpt
aas
cmp
push
ja
outsl
mov
lcall
mov
cmpsb
or
add
pop
adc
adcl
xor
dec
jmp
and
das
insb
push
gs
clc
nop
fnstenv
push
test
sub
lcall
mov
inc
test
adc
push
inc
sbb
inc
xor
sub
adc
push
aas
out
adc
sbb
in
push
sub
mov
jg
pop
push
idivb
movsb
arpl
xor
int
repz
dec
clc
and
inc
and
lds
add
or
pushl
not
movl
movl
adc
movl
movl
dec
movl
inc
movl
movl
mov
mov
sbbl
imul
sub
or
xor
movl
pushl
cmpl
mov
movl
mov
movl
jmp
movl
cmpl
jg
push
call
andl
adc
xor
and
and
or
movzbl
adc
cmpl
mov
mov
movl
movl
jmp
mov
cmpl
jg
push
push
call
mov
mov
adc
sbb
mov
and
sub
sub
addl
add
adc
mov
add
push
add
pop
xor
div
mov
xor
or
sbb
mov
incl
or
or
mov
div
xor
cmpl
movzwl
mov
jmp
movl
cmpl
jg
push
call
xor
andl
mov
or
add
orl
adc
subl
sbb
xor
cmpl
movl
mov
jmp
mov
cmpl
jne
push
push
call
adcl
andl
movzbl
adc
mov
adc
orl
adc
orl
orl
pushl
adcl
mov
mov
or
mov
mov
pushl
sbbl
add
pushl
imul
pushl
addl
mov
mov
subl
xor
subl
mov
orl
div
sbbl
and
xorl
or
addl
pushl
xorl
call
orl
dec
movl
jne
movl
cmpl
notl
movl
jmp
movzbl
cmpl
jae
push
push
pushl
pushl
pushl
push
call
or
xorl
sbb
subl
mov
mov
or
movzbl
add
mov
mov
subl
mov
movl
mov
call
sbb
jmp
add
popf
jmp
sub
cmpsb
scas
xchg
jecxz
xchg
mov
scas
aam
rcr
inc
cmpsb
push
lea
mov
jle
sahf
xor
jns
xchg
fwait
mov
inc
cld
pop
fistpll
xchg
sub
shl
jo
dec
lods
sahf
data16
mov
xorl
cmp
xor
inc
mov
je
push
out
scas
adc
jl
mov
ret
xor
inc
or
lds
and
clc
inc
jne
mov
jns
addr16
push
jne
jmp
icebp
add
fcmovu
xor
mov
lret
inc
or
push
adc
push
push
out
stc
xchg
or
ds
xlat
mov
push
fdivs
adc
mov
loop
imul
mov
push
push
pop
sub
in
mov
sub
mov
jb
xchg
lret
mov
sahf
sub
inc
adc
or
pop
fwait
inc
dec
sbbb
jno
fsin
jecxz
pusha
and
ja
jno
adc
mov
push
mov
in
cli
jp
adc
fpatan
and
lret
xlat
mov
mov
cmp
xor
sbb
push
mov
call
inc
inc
cmc
jo
cmp
jmp
mov
push
test
sbb
mov
in
imul
push
enter
dec
cmp
pop
pop
sbb
dec
add
xor
leave
mov
outsb
movsb
xchg
outsb
xchg
call
arpl
push
cmp
lret
mov
in
sbb
fistps
cmp
out
xchg
mov
fldcw
test
and
das
jno
sbb
mov
nop
sbb
nop
cmp
outsb
push
inc
xor
mov
mov
jecxz
mov
mov
outsb
std
add
cmc
dec
ret
jno
movsl
out
add
bound
push
nop
cmc
out
int
xchg
fwait
push
in
sbb
and
aaa
xchg
fsubs
sub
movzbl
push
mov
stc
lcall
add
mov
pop
sbb
and
mov
cmpl
mov
mov
jmp
movl
movl
cmpl
jl
pushl
pushl
call
xor
or
and
and
xor
add
mov
sub
or
inc
cmpl
movl
movl
mov
movl
jmp
mov
cmpl
jl
pushl
push
call
sbbl
addl
add
xorl
addl
lea
xor
or
xor
mov
sub
mov
sbb
mov
cmpl
mov
mov
jmp
not
cmpl
jg
pushl
push
call
andl
xorl
add
subl
mov
or
adc
mov
mov
mov
sub
or
mov
xor
xor
or
sub
mov
xor
shl
and
shr
or
mov
inc
mov
xor
mov
mov
mov
cmpl
movzwl
movzbl
jmp
not
cmpl
jb
pushl
push
push
push
pushl
pushl
call
movzbl
add
mov
xor
xor
xor
xor
sub
sub
add
xor
sbb
adc
mov
or
mov
cmpl
mov
movl
mov
jmp
movl
cmpl
ja
pushl
call
sbb
adcl
sbb
xor
or
xor
add
add
sub
shrd
cmpl
mov
movl
mov
jmp
mov
mov
cmpl
jae
pushl
call
subl
mov
or
sub
dec
dec
notl
movzwl
sub
shr
mov
mov
addl
xor
adcl
xor
orl
or
mov
adc
mov
orl
push
orl
pushl
lea
push
sbbl
shl
call
orl
lea
addl
push
orl
mov
mov
addl
lea
sbbl
push
adcl
mov
lea
mov
subl
jmp
cmp
lret
mov
out
push
xchg
outsl
in
iret
sti
faddp
mov
dec
pop
mov
xchg
mov
sub
or
add
xchg
jle
push
add
js
fildll
sbb
ljmp
icebp
jae
cmp
movsb
mov
sbb
je
cmp
fiadds
popa
pop
sub
es
je
shl
mov
and
add
lods
ljmp
outsb
sub
pop
sub
pusha
mov
sbb
add
ret
test
test
in
sbb
pop
sahf
andl
in
jns
sbb
leave
movsl
cmp
xor
sbb
adc
push
fs
sub
das
lret
fidivl
mov
imul
adc
pop
fs
stc
std
add
and
in
mov
sub
mov
mov
shll
sbb
add
pop
cmpsl
inc
push
pop
cmp
xchg
mov
daa
add
jnp
pop
js
adc
push
sub
cmpsb
mov
pop
mov
add
ret
xchg
push
movsl
out
push
xlat
int
adc
push
dec
test
inc
pop
pusha
sub
xchg
push
sub
mov
fistps
cs
test
cli
bound
sbb
sbb
arpl
das
xor
mov
xchg
aas
push
ss
outsb
rorb
mov
gs
xor
inc
jno
pushl
jmp
add
ss
out
jo
ja
inc
fadd
lahf
enter
in
push
dec
mov
xchg
ds
popa
mov
sub
pusha
ss
call
daa
in
and
xor
arpl
mov
in
movsb
xor
scas
or
push
shll
je
cmpsl
sub
repz
mov
adc
into
xchg
and
mov
xchg
xchg
outsb
and
movsb
xor
push
stos
inc
sbb
add
imul
aaa
scas
lret
je
and
xchg
popf
mov
js
pop
xchg
cli
mov
cld
sbb
fmulp
stos
jns
fldl
lret
imul
arpl
sbbl
lret
and
jb
mov
xlat
xchg
fdivp
add
sbb
add
inc
add
pop
add
add
add
xchg
jecxz
mov
jb
sahf
nop
mov
mov
mov
pop
jmp
mov
cmp
lea
mov
repnz
addb
out
and
pop
shll
fnstenv
cli
dec
in
pop
push
push
mov
mov
stc
inc
sarl
or
or
jmp
loopne
shll
cmp
pop
out
je
call
or
cmp
loope
jb
mov
xor
xchg
ret
scas
std
pop
mov
insl
mov
scas
fsts
scas
adc
fwait
mov
cmp
out
lods
lret
das
mov
es
jmp
cmp
xchg
test
loope
dec
add
push
add
inc
dec
xor
mov
out
or
std
out
shrl
mov
cmp
push
test
mov
and
inc
xor
call
or
inc
jge
sub
add
dec
mov
loope
jl
out
xchg
push
adc
nop
outsl
xchg
cwtl
dec
push
mov
jge
cmp
loop
push
or
mov
and
jecxz
xor
andb
mov
adc
mov
mov
push
dec
sub
sahf
jecxz
pop
xchg
or
xchg
stc
enter
jns
cmp
mov
mov
lods
cmp
adc
mov
fstps
pop
stc
jns
adc
mov
xor
fstpl
xchg
imul
lret
aas
jle
mov
ja
dec
mov
and
pop
std
adc
sbb
gs
jecxz
jg
movsb
icebp
scas
cld
outsb
imul
dec
sbb
nop
jnp
mov
sub
mov
lds
outsb
test
jbe
and
dec
test
sub
iret
sub
inc
dec
cmpsl
mov
adc
and
cmp
mov
xchg
and
and
dec
orl
adc
data16
les
repz
inc
stos
dec
sbb
adc
ja
mov
cmp
aad
popf
dec
or
and
addl
push
andl
call
andl
push
push
pushl
call
mov
mov
xor
mov
mov
cmpl
movl
mov
not
mov
jmp
movl
cmpl
jle
push
push
pushl
pushl
call
xor
andl
mov
and
adc
negl
mov
mov
sub
imul
shr
shl
cmpl
mov
movl
movl
jmp
mov
cmpl
ja
pushl
push
pushl
call
sbb
or
movl
and
adcl
xor
or
and
mov
xor
and
mov
lea
sbb
mov
jmp
or
scas
and
inc
lods
jecxz
out
sahf
jmp
sarb
pop
dec
mov
sub
mov
test
in
pusha
sbb
test
xchg
bsf
inc
ja
ds
insl
cmpsb
mov
push
pop
pop
cld
push
mov
push
or
inc
sub
xchg
push
xlat
test
cmp
add
push
mov
add
mov
pop
icebp
imul
pushf
mov
push
addb
int3
hlt
insb
leave
or
cwtl
mov
mov
fwait
adc
inc
add
lret
lods
xchg
test
test
and
sbb
insb
cmp
sub
add
std
dec
mov
cmp
sar
ret
call
leave
pop
and
ret
jecxz
mov
test
push
loope
sub
out
call
sub
arpl
fstp
sarl
or
int3
in
inc
das
jp
push
mov
sti
inc
shrl
dec
outsb
and
push
dec
mulb
roll
push
loopne
enter
jae
push
jne
cwtl
rcll
loopne
dec
and
popa
call
xchg
les
pop
pop
pop
ja
mov
xlat
lret
lods
dec
insl
gs
push
xchg
jle
jne
dec
dec
rcll
adc
adc
scas
repnz
cld
mov
aam
sbb
call
into
sbb
std
add
and
or
decl
sub
push
test
scas
mov
daa
mov
adc
loopne
addr16
ficompl
mov
sbb
int
repnz
xor
sbb
fs
arpl
dec
or
popa
jl
sub
iret
jge
out
rcrl
push
cltd
dec
pop
sub
push
mov
push
in
mov
inc
lret
mov
xor
adc
jno
repnz
dec
int
in
mov
sbb
mov
push
jle
mov
adc
jl
sub
add
iret
lea
cmpl
movl
movl
movl
jmp
mov
movl
cmpl
je
push
push
call
mov
xor
or
sub
and
mov
adc
inc
and
adc
xor
or
mov
sub
xorl
cmpl
mov
mov
jmp
mov
cmpl
jg
push
push
call
or
adcl
not
sub
mov
mov
sub
sub
or
mov
mov
sub
or
mov
and
mov
sub
mov
sub
lea
cmpl
movl
mov
jmp
mov
mov
cmpl
jge
pushl
push
call
sub
addl
mov
sbb
mov
mov
mov
sub
add
mov
and
mov
not
xor
movl
cmpl
movl
mov
jmp
mov
cmpl
ja
push
push
call
and
not
or
sbb
xor
xor
adc
xorl
subl
jmp
inc
inc
in
xor
mov
test
inc
add
fs
add
sbb
xchg
or
dec
stos
push
dec
cmp
mov
xchg
mov
in
adc
and
and
ret
add
cmp
pop
fldcw
lcall
xchg
mov
mov
xchg
or
ja
in
xchg
out
dec
fs
sbb
xchg
clc
inc
push
es
push
dec
std
jnp
dec
mov
sub
call
shlb
js
sbb
repnz
repz
dec
inc
rcl
xor
in
or
push
sub
aaa
imul
cmp
imul
dec
mov
insb
mov
inc
enter
callw
aas
add
js
fst
ds
sbb
fsubrs
in
aam
repz
push
out
lret
jnp
loope
cmp
lahf
scas
roll
icebp
loop
outsl
mov
fldt
sbb
cmpl
cmc
insb
repnz
xor
fwait
push
hlt
add
repnz
xchg
cmpsb
fnstenv
repnz
loop
vmread
inc
cmpsl
xchg
xchg
mov
xchg
fwait
lea
mov
push
or
jp
sahf
jb
sbb
addb
mov
lods
aas
inc
mov
jmp
lods
dec
loop
xchg
adc
lahf
push
inc
idiv
and
jecxz
mov
jmp
cli
push
xor
aaa
pop
push
and
xchg
out
mov
cli
push
mov
stos
jmp
orb
sub
je
in
loope
mov
add
mov
cmp
cltd
pop
mov
mov
jo
ret
mov
cld
dec
push
out
data16
stos
pop
push
pop
mov
mov
push
decb
in
xchg
adcl
push
inc
mov
int3
mov
mov
mov
push
cmp
mov
aas
cmpl
and
mov
push
xchg
sbb
sub
stc
push
mov
lahf
add
or
jl
cmp
inc
push
push
les
pop
xchg
add
push
inc
dec
sarb
callw
movsb
in
dec
hlt
push
push
xor
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
jmp
inc
pop
sti
daa
sti
mov
mov
jecxz
out
sarb
push
xor
jg
in
fwait
and
sub
cmpsl
add
inc
dec
stc
pop
fwait
and
jns
add
sbb
xchg
mov
fadds
inc
std
and
xchg
ret
fldt
pusha
jo
cmpsb
cli
mov
xchg
pop
enter
add
fisubrs
dec
push
mov
or
fs
dec
push
cwtl
jmp
aas
not
push
mov
mov
inc
popf
mov
pop
daa
push
cld
cmpsl
out
les
add
test
fsubl
enter
push
stos
mov
sbb
pop
lret
subl
insl
sub
insl
mov
mov
pop
js
enter
out
js
in
dec
push
inc
or
call
sbb
es
xchg
jl
mov
adc
add
popa
or
fs
cwtl
jne
cltd
sbb
jo
das
jg
scas
std
out
and
cmc
xchg
adc
daa
push
dec
cmp
lds
inc
cmpsb
bound
lods
movsl
insb
movsb
outsl
mov
add
sbb
sub
xchg
inc
and
outsb
jp
mov
loope
jne
push
or
sub
cltd
mov
scas
fcomi
cmp
jne
out
jge
or
pop
test
mov
push
sbb
mov
mov
lret
mov
notl
stos
rolb
lods
xor
pop
inc
imul
mov
add
push
imul
mov
push
repz
sbb
call
jle
dec
dec
shll
mov
scas
inc
std
mov
mov
scas
and
or
ficoms
mov
mov
in
call
xchg
out
pop
sbb
out
push
xorb
in
cmpsb
jbe
pop
test
cmp
cmpl
dec
jbe
cld
xlat
push
inc
std
sbb
and
incb
adc
dec
cmp
push
mov
out
or
adc
fsubr
dec
shll
push
jge
lahf
mov
call
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ljmp
adc
rcll
sarb
into
pop
fldt
mov
adc
sahf
push
inc
pop
push
and
repnz
fldl
push
sub
dec
adc
out
out
cmp
ss
movsb
add
push
mov
mov
loope
mov
imul
out
les
sti
mov
mov
xor
mulb
insb
adc
popa
cmp
sti
test
cmp
in
pop
es
ja
adc
mov
imul
pop
outsl
shrb
jne
cli
sbb
test
push
xchg
ds
repnz
lds
cs
pop
cmp
push
test
cmp
ret
popf
sub
xor
xor
or
out
mov
jl
cli
cmpsl
xlat
push
pusha
clc
mov
cmp
scas
mov
sbb
das
add
call
data16
pop
jb
cwtl
adc
mov
imul
fs
xchg
out
test
mov
sub
pop
jb
cmp
dec
imul
mov
push
pop
push
sub
xchg
sbb
inc
rclb
mov
and
call
inc
pushf
nop
outsl
shlb
add
xor
pusha
mov
jo
pop
cwtl
test
je
xchg
ja
mull
ljmp
ds
not
cmpsb
sub
addr16
leave
out
xchg
push
icebp
mov
dec
mov
ret
pop
or
adc
jl
push
int
lahf
dec
dec
push
and
and
fisubrs
popf
out
sub
pop
mov
mov
gs
test
leave
pusha
and
cmp
inc
mov
and
dec
call
out
xor
iret
in
mov
push
out
cmp
repz
test
or
push
js
insb
jg
add
jns
inc
clc
xor
pop
call
fcoms
xor
sub
lcall
cmp
sub
fstpt
cmp
xchg
outsb
bound
dec
and
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
jmp
jp
cld
dec
cmp
jp
js
push
sahf
push
jo
nop
lret
test
mov
arpl
or
jmp
pop
sbb
scas
and
adc
push
add
mov
je
fisttps
scas
rorl
dec
out
pop
jo
add
fstpt
lock
xchg
pop
fidivrl
mov
push
testb
inc
rclb
cmp
movsl
push
jge
pop
lds
fidivrl
xchg
shl
pop
sar
inc
push
dec
and
rorb
dec
mov
cmp
pop
dec
lods
sbb
mov
and
push
fadd
imul
push
scas
push
push
jp
stos
insl
shrb
dec
push
outsb
or
sbb
mov
in
orb
ja
inc
fdivrl
or
add
mov
xchg
hlt
cwtl
mov
fwait
push
push
outsb
dec
adc
insl
jns
jo
stos
stos
dec
icebp
mov
loope
daa
mov
and
lahf
out
or
ror
adc
cmp
pop
fisubs
push
sub
test
sahf
cmpl
mov
nop
aas
test
lret
jmp
add
stos
and
inc
sahf
out
imul
xor
scas
pop
or
pop
imul
fisubl
pop
repnz
push
jmp
imul
out
cld
sahf
rcll
cmp
xchg
inc
or
in
pop
or
push
outsb
sub
sti
mov
jb
out
jl
bound
loop
adc
or
mov
sub
pop
cmp
outsb
xchg
adc
jmp
lds
jbe
xor
setae
adc
pop
cmp
ljmp
xor
adc
test
inc
or
push
fcompl
sub
mov
sahf
dec
clc
pop
push
aas
imul
xor
loopne
or
pmaxsw
sub
mov
in
xchg
cmc
pushf
cltd
adc
push
iret
push
stc
pushf
nop
mov
in
lods
xchg
mov
jp
and
insb
lods
dec
jne
sbb
cmp
inc
mov
arpl
iret
add
mov
lds
in
mov
lahf
or
push
push
push
call
mov
mov
add
mov
adc
jmp
ljmp
mov
cmc
mov
jecxz
sti
sarb
enter
sbb
mov
sub
xor
ret
leave
mov
scas
int
push
cmp
ret
inc
sub
cmp
dec
push
aad
xchg
lds
hlt
aaa
adc
mov
daa
in
shll
adc
sbb
cmpsl
and
xchg
mov
xchg
std
adc
nop
les
lods
sub
cld
mov
sti
out
iret
je
fs
bswap
pop
xor
leave
lret
out
out
jle
out
fisttpl
incl
fcompl
mov
iret
mov
bound
cld
push
ret
lods
add
jb
stc
flds
inc
loopne
and
test
dec
xor
mov
popa
mov
jp
in
push
lods
jo
fldt
jbe
into
pushf
dec
xchg
inc
idivl
mov
fs
adc
lret
mov
jo
fists
fdivrl
mov
insb
jmp
clc
xchg
mov
jns
pop
in
movsl
mov
push
addr16
into
dec
mov
cmc
pop
pushf
fistpll
stos
cmp
jbe
ss
into
pop
repz
dec
xchg
xor
pop
es
jecxz
mov
jne
push
jle
data16
dec
jg
or
les
popf
or
testb
or
nop
mov
sbb
cmp
js
mov
les
xchg
jae,pt
dec
pop
shll
inc
pop
jo
mov
mov
aam
das
sub
jo
adc
jp
shlb
pop
mov
cmp
movsb
push
xlat
and
movsl
out
push
xchg
adc
push
fisubrl
rol
sbb
or
dec
fucomp
fnstenv
inc
int
adc
xchg
ss
or
inc
arpl
cmc
push
dec
jg
test
ss
mov
xchg
and
lahf
cmp
sbb
sbb
inc
hlt
ret
shll
xchg
inc
pop
pop
mov
xchg
dec
xchg
test
int
pop
inc
sub
lea
popa
xchg
jnp
push
js
or
mov
mov
shlb
xchg
mov
cmp
jne
cmp
je
mov
mov
xor
shld
jmp
lret
repnz
xchg
xor
imul
sarl
mov
fnstenv
test
sbb
or
fcoml
rcrb
out
sarl
bound
stc
ret
sti
push
or
jp
lods
scas
xchg
mov
cmpsb
in
jge
push
adc
and
arpl
ja
loope
sbb
faddl
xchg
in
cmp
icebp
pop
jmp
sub
cld
push
inc
mov
push
mov
sub
dec
pop
sbb
mov
jp
repz
push
xchg
cmc
dec
js
iret
jg
xchg
xchg
sbb
insl
xchg
imul
mov
out
xor
dec
dec
and
jbe
repnz
cli
fildl
dec
mov
xlat
sbb
xchg
push
pop
aas
out
dec
rcrb
xor
jmp
fmuls
jg
fmul
jecxz
inc
jo
mov
outsb
jl
sub
mov
dec
aas
push
js
jno
adc
dec
cmpsl
ja
mov
insl
push
out
stc
fcomps
lahf
cmc
or
xor
add
mov
push
xchg
or
sbb
cmpsl
leave
cld
add
mov
out
daa
lock
add
push
cmp
xlat
ret
mov
sub
imul
cmp
mov
mov
frstor
push
out
cwtl
hlt
adc
leave
adc
sub
or
out
dec
push
sub
inc
lret
outsb
movsb
movsl
loop
cmp
pop
sub
stc
loopne
jno
pusha
out
cltd
cmp
arpl
push
andb
jp
aam
stos
mov
mov
sub
cmpsb
push
clc
leave
mov
dec
jne
stc
add
test
dec
mov
push
imul
or
xlat
push
push
andl
loope
insb
popf
cli
push
lds
sbb
push
lock
fists
cli
or
mov
sub
mov
fs
or
jb
cli
or
or
addr16
enter
xchg
lret
loop
or
or
adc
aam
cmp
mov
add
mov
scas
stos
loop
ljmp
gs
cmp
popa
and
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
gs
decb
sbb
mov
pop
adc
jecxz
add
mov
xchg
mov
insb
int
jecxz
sub
jnp
mov
push
pop
into
out
fldenv
mov
movsb
xor
or
in
arpl
divb
test
test
cmc
xlat
sbb
pop
stos
shl
jg
das
pop
std
int
fists
cmp
mov
rcrb
or
js
lods
pop
test
mov
xor
fwait
inc
sbb
pop
jle
or
hlt
add
cld
pop
fs
lret
bnd
into
in
or
dec
sub
mov
mov
jge
out
pop
pop
xor
cltd
sbbb
mov
add
stos
rcll
and
mov
mov
pop
jb
dec
cmp
loope
jnp
mov
push
popl
jp
xchg
pop
movaps
sbb
out
iret
inc
ret
adc
pause
push
pop
in
push
insb
clc
jne
lock
mov
test
dec
cli
or
loop
inc
mov
decl
dec
insb
adc
add
mov
xchg
xor
lods
mov
jo
lea
cmpsl
xchg
shl
pop
insb
xor
sbb
lahf
pop
or
ds
test
or
js
mov
stos
inc
repnz
pushfw
bound
or
ret
adc
adc
in
jae
or
mov
lret
adc
sub
aad
sahf
cmp
xor
push
inc
add
mov
cmp
inc
dec
xchg
jo
int
pop
mov
clc
sbbl
lret
cwtl
pusha
dec
jnp
in
ret
cmp
add
xchg
pop
mov
cmp
pusha
es
sub
add
outsb
addl
add
icebp
jg
pop
call
xor
and
movsb
dec
out
fidivrs
mov
mov
push
cmp
and
inc
xor
mov
add
mov
pop
cli
lds
call
inc
sub
pop
daa
std
pop
fldenv
fstpt
inc
fimull
cmpsl
push
fmulp
scas
das
fwait
insl
js
xchg
movsb
and
add
lret
push
and
sub
mov
sub
mov
cmp
jbe
mov
jmp
xchg
sub
jae
mov
jo
add
sarb
xchg
inc
ret
popl
fwait
add
sarb
shrb
ss
sbb
mov
add
jno
scas
lret
gs
push
stos
add
sbb
push
jbe
adc
or
xchg
test
lret
sbb
xchg
fdivrl
test
lcall
jbe
xor
or
scas
and
test
cs
inc
cmp
or
notl
jae
or
sbb
mov
outsb
popa
pop
andb
or
sbb
adc
ret
stc
cmp
or
xchg
loope
add
aas
xchg
cmpsl
sbb
inc
in
cltd
mov
mov
jl
out
xchg
fildl
push
call
outsl
in
mov
lods
pushf
leave
inc
cmp
sub
or
pushf
pop
call
jecxz
and
or
and
cmpsb
insl
lret
mov
out
add
pushf
or
jl
mov
inc
inc
pop
jmp
jbe
lcall
add
loopne
xor
adc
lret
cmpl
pushf
push
loopne
and
adcl
int
or
clc
pop
xchg
out
and
fsubp
cmp
mov
cld
push
inc
lods
nop
mov
rcrb
clc
push
ljmp
cmp
idivl
lea
negb
cltd
adc
push
scas
mov
xchg
dec
nop
pop
lahf
fadds
add
test
cmc
pop
adc
mov
dec
mov
pop
repnz
imull
cmp
mov
rorb
xor
or
add
mov
inc
test
stos
jnp
jo
fisubrl
push
sub
sbb
jnp
xor
adc
mov
mov
arpl
mov
fisttpll
dec
mov
dec
sub
and
adc
jns
movsl
inc
scas
inc
mov
mov
jg
xor
fildll
dec
jp
cmp
push
pop
sahf
push
mov
jecxz
push
push
push
hlt
stos
sbb
mov
cmp
or
test
xlat
xrelease
arpl
dec
and
mov
mov
movzwl
mov
or
mov
sub
jmp
loop
push
xchg
je
and
jp
jl
and
sarb
scas
mov
es
mov
mov
lods
fcompl
int3
xor
shll
dec
mov
out
dec
jge
imul
pop
sbb
jb
inc
xchg
and
jbe
mov
inc
inc
sbb
int
ror
lods
xchg
jnp
mov
ja
pusha
mov
shlb
cmp
add
mov
popf
add
mov
mov
pop
xor
ja
mov
jle
sub
rcr
sbb
mov
pop
and
jmp
loope
dec
imul
jne
jbe
dec
outsl
mov
sub
test
push
cmpsl
cld
jnp
adc
call
adc
leave
xor
pop
aas
cmp
fadds
stos
rolb
shlb
xor
inc
dec
push
popf
pop
test
xor
xchg
fcmovne
notb
add
xor
sub
inc
bound
mov
sbb
and
inc
jle
add
mov
lret
lret
mov
outsl
xchg
cmp
push
test
jge
mov
xchg
cltd
loopne
xor
fnstenv
scas
mov
test
inc
mov
inc
pop
jmp
test
movsl
fisubl
sub
movsb
mov
ds
out
mov
or
ret
out
dec
mov
push
inc
inc
movsb
mov
fwait
bound
inc
add
out
and
loopne
aam
or
fs
stos
jb
movsl
add
pop
cmp
xor
les
rorl
out
jp
call
lods
popa
mov
fimuls
fnstsw
notb
fwait
lahf
jo
pop
test
pop
dec
xchg
dec
jbe
or
jnp
les
movsb
jnp
adc
outsb
sub
rclb
arpl
cmp
and
jecxz
mov
out
push
sbb
fcoml
adc
xchg
push
cmp
cld
fstps
jecxz
mov
loop
scas
inc
pushf
push
pop
xor
enter
pop
dec
gs
xchg
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
jmp
jge
into
movsb
mov
iret
mov
stos
jecxz
adc
mov
cmp
lods
lcall
aam
cli
pop
js
inc
dec
xchg
push
gs
test
lret
and
lret
sbb
sbb
fadds
mov
mov
xchg
push
mov
loopne
add
dec
repz
sahf
mov
dec
clc
mul
ret
icebp
pop
iret
negb
and
sub
push
ss
push
adcb
cli
adc
push
shrb
sub
cmp
sahf
inc
in
sahf
push
aad
mov
cli
jecxz
lcall
pop
fwait
inc
inc
mov
in
push
dec
fwait
push
int3
outsb
int3
sbb
repz
js
das
mov
insl
xchg
shll
push
xchg
xchg
sub
push
popa
sbb
dec
xor
mov
lods
cmpsl
mov
push
test
es
cmp
test
jne
xchg
adc
rcrl
xor
xchg
in
cmp
jno
outsl
sti
push
stos
adc
cmpsl
insl
mov
adc
loope
icebp
mov
fst
cmpsl
leave
dec
bound
inc
in
pop
or
stos
mov
lods
adc
cltd
lock
cld
push
pop
cmp
sbb
jnp
pop
push
pop
popf
out
jecxz
adc
push
push
dec
cs
mov
jae
mov
aaa
or
in
push
push
pop
lret
lcall
and
dec
jg
push
push
cmp
adc
inc
push
mov
dec
scas
insl
adc
and
jmp
xor
ss
clc
sub
push
jne
mov
std
jg
inc
mov
adc
mov
roll
dec
inc
jl
das
mov
test
iret
mov
adc
xchg
xchg
sbb
lahf
or
pop
mov
xchg
or
inc
xlat
dec
mov
adc
adc
lahf
std
jp
inc
xchg
add
pop
push
jmp
lahf
aaa
adc
andl
cltd
pop
shlb
fwait
cmpsl
jb
repz
cmp
int
jae
fwait
aas
aam
xor
gs
test
sub
js
jl
dec
xchg
stos
fyl2xp1
add
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
jmp
add
cmp
loopne
inc
fisttpll
jecxz
adc
sarb
or
dec
mov
cli
dec
dec
adc
cmp
js
mov
xchg
jp
lret
fmulp
mov
xor
icebp
imul
xor
or
jle
push
jmp
jbe
ficoml
lret
std
fnstsw
pusha
inc
test
add
test
mov
nop
shrb
fnsave
jge
xor
xor
out
lock
cmpb
xlat
sbb
xchg
add
jae
lods
stc
ljmp
loop
sbb
addl
repz
sub
leave
iret
jecxz
into
and
pop
rorb
pop
mov
out
repz
popf
mov
idivl
inc
dec
pop
push
inc
mov
dec
mov
cmp
dec
addr16
in
out
dec
nop
aad
push
jb
pop
rclb
mov
push
lock
int3
es
int3
lret
inc
mov
popa
and
jb
pop
jle
mov
rcrb
lcall
std
mov
movsb
jb
or
and
or
scas
ret
mov
sbb
jmp
sti
adc
sub
cmp
dec
es
xor
les
cmpsb
shrl
popa
mov
js
cmpsl
in
pop
lret
xchg
sarb
adc
and
push
and
or
mov
dec
aad
leave
rolb
pop
popa
and
dec
jne
cmc
mov
fwait
adc
sub
dec
cmp
mov
ja
imul
dec
adc
shrl
cld
mov
sub
sti
mov
sub
fnstsw
sub
dec
ja
cmp
adc
pop
cmpb
or
pop
jns
aas
pop
mov
fdivs
jge
xchg
test
fwait
adc
div
pop
test
jl
cmc
mov
mov
xchg
dec
cld
xor
xchg
push
ljmp
imul
adc
imul
in
dec
adc
mov
stos
pop
push
mov
xor
add
and
add
enter
sbb
ljmp
shr
pop
add
add
xchg
mov
mov
pop
roll
outsl
sahf
nop
mov
sarb
mov
ret
mov
int3
lock
mov
in
pop
cmpsl
cltd
out
xchg
mov
mov
lret
mov
in
in
jae
bnd
adc
enter
fcomi
push
test
xchg
lret
or
inc
mov
mov
pop
rclb
jl
addr16
leave
pop
xchg
sub
sub
or
iret
adc
adc
inc
int
sub
popf
xor
cmp
or
ss
loope
xchg
inc
mov
fisubrl
jae
sub
movsl
push
and
fs
xor
lds
cwtl
fdivr
push
inc
push
icebp
enter
pop
int
adc
pop
shll
ljmp
mov
inc
dec
nop
xchg
jle
sbbb
in
in
cmp
add
pop
lea
jnp
mov
dec
pop
scas
sub
add
dec
test
cld
dec
jle
push
loopne
fbld
xor
dec
das
imulb
in
mov
or
call
sahf
iret
sub
xchg
lret
xchg
push
popf
fs
test
push
push
or
jnp
nop
in
mov
add
lea
adc
mov
loope
push
lods
div
and
xchg
inc
pop
pop
add
mov
xchg
ljmp
pop
xchg
mov
jo
je
or
sub
mov
cmp
ljmp
mov
pop
and
push
adcb
jne
idivl
mov
mov
cmp
subb
pop
pusha
loope
push
push
jl
pop
mov
into
xchg
push
loopne
mov
ljmp
adc
push
xor
pop
cmp
popa
mov
or
inc
leave
stos
jo
xchg
fidivrs
sub
pop
fnsave
or
arpl
xchg
fiadds
mov
js
cld
cmp
jp
mov
or
or
mov
cli
jle
sbb
loop
adc
cmpsl
and
pushf
faddl
test
add
push
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
jmp
repz
mov
shl
iret
daa
pop
jbe
add
sarb
or
fimull
dec
jnp
mov
loopne
mov
aad
and
mov
mov
movsl
add
mov
inc
push
cmp
negb
cmp
sbb
out
sbb
pop
push
cmc
loop
pop
call
arpl
adc
ret
ret
out
add
shl
pop
lahf
fistpl
cli
mov
clc
jmp
lcall
ret
ficoms
cmp
mov
sbb
daa
lock
xchg
mov
jg
pop
xor
mov
test
adc
icebp
pop
push
test
mov
ljmp
xor
dec
cld
or
xchg
cmc
xorl
cmp
out
mov
dec
loop
std
mov
notl
push
or
or
mov
roll
xchg
dec
push
sub
push
jecxz
insl
sbb
add
jl
lcall
cmp
inc
xor
cmp
in
push
jo
shll
movsb
jl
pop
push
and
dec
sub
cmp
movsl
aas
dec
pop
inc
mov
cmp
jp
cltd
andl
repnz
and
sti
imul
or
stc
dec
out
insb
sub
or
mov
cltd
sbb
stos
mov
sbb
xchg
push
lret
sub
push
dec
aad
js
cld
lods
xor
fistps
stc
mov
pop
adc
add
aad
mov
aad
rclb
ljmp
xchg
je
movsl
cli
out
push
push
decb
lea
xchg
lahf
xchg
jp
sbb
xchg
pop
or
stos
push
jno
xor
call
lods
movsl
lcall
notl
pop
shrb
sbb
pusha
jnp
mov
call
cmp
lahf
push
cli
shll
out
lea
rcrl
sahf
repz
fnstenv
stos
pop
lds
stos
mov
fstl
sbb
out
xor
sbb
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
jmp
cs
jne
js
mov
je
jl
jl
sarb
mov
fisubl
dec
inc
sbb
xchg
in
add
stc
mov
mov
ret
xchg
jbe
jg
dec
mov
dec
xchg
fisttpl
adc
pop
lods
xchg
mov
push
jb
xchg
sbb
cs
push
shlb
pop
int
pop
data16
push
xchg
and
dec
push
test
jmp
or
scas
iret
ret
fnstsw
ret
rclb
fidivrl
mov
xor
fdivp
lock
adc
in
mov
pop
push
dec
or
or
nop
adcb
push
out
inc
adc
mov
in
xchg
sbb
jno
mov
push
test
cltd
inc
jmp
pop
rdtsc
push
loop
ljmp
xor
inc
int
xchg
xor
mov
loopne
out
dec
dec
dec
fwait
push
sub
jb
ficoml
adc
inc
dec
aam
cltd
mov
lea
xchg
adc
cltd
xchg
int3
xor
push
mov
int3
loope
mov
or
iret
loopne
inc
in
add
jae
mov
or
popf
cmpsl
stc
dec
aaa
add
mov
add
rol
push
movsl
stc
pop
jns
mov
and
notb
fwait
pop
sub
fcmovnu
orb
in
mov
inc
std
pop
sbb
mov
enter
pop
cmp
cmp
ror
mov
mov
mov
mov
hlt
insb
xchg
push
lcall
and
push
pop
mov
pop
jecxz
mov
repnz
fsubs
or
fisubs
mov
cmp
inc
ljmp
pop
sbb
adc
jl
ljmp
mov
cmp
mov
mov
adc
xlat
stc
mov
das
and
sbb
aad
push
repnz
imul
xor
imul
fs
fmull
lahf
cmpsl
xor
insb
orb
int
int3
out
nop
sbb
int3
out
in
push
inc
push
adc
cmpsb
ffreep
inc
and
insl
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
jmp
add
adc
sub
lock
repz
mov
dec
mov
xchg
das
cmpsl
adc
js
xchg
xor
and
out
stc
mov
outsl
mov
data16
out
xor
push
adc
cld
dec
stos
mov
inc
sub
xor
mov
in
loopne
stos
out
inc
inc
pop
lock
jmp
mov
fildl
push
stc
adc
sub
lods
xchg
popf
iret
push
ja
xor
push
xor
hlt
pushf
rcrl
jb
mov
test
add
sar
mov
dec
xor
int
std
mov
cmpb
jecxz
test
cmp
mov
mov
lcall
jnp
inc
aad
rclb
loopne
dec
mov
addl
sub
fiaddl
xchg
adc
inc
gs
sbb
sbb
rcrb
addb
inc
mov
mov
into
xchg
addr16
and
cs
movsb
dec
das
xchg
and
gs
sbb
cmp
gs
cmp
xor
test
add
subl
or
jp
lods
mov
test
add
push
std
or
cli
test
sub
fadds
fs
stc
dec
adc
pop
jne
sbb
mov
scas
jle
xchg
push
fidivs
mov
or
imul
jge
xchg
lahf
jo
inc
addb
popf
cli
psubb
add
rol
fiaddl
insb
popl
pop
mov
int
iret
push
insl
sbb
repz
adc
rol
dec
sub
jns
movsb
in
jg
dec
xchg
pop
mov
xor
rcrb
xchg
pop
not
pop
cs
pushf
adc
hlt
testb
and
shrb
sub
fistl
xchg
mov
aad
lock
jmp
pop
push
mov
ret
lea
inc
jnp
mov
mov
fildl
ret
dec
cmp
cs
fcom
rorb
incl
inc
and
and
jmp
xor
frstor
test
push
mov
nop
imul
mov
mov
jo
test
scas
push
sbb
popa
mov
cs
repz
enter
sub
mov
popa
mov
mov
xor
mov
sti
xchg
pop
decl
xor
sahf
jne
mov
mov
rclb
cmp
ret
xchg
push
pop
rcrb
jmp
aad
aam
or
in
js
inc
mov
cltd
movsl
in
jbe
lock
adc
test
jne
out
xchg
ds
aam
xchg
lods
int
sub
movsb
lret
and
bound
jnp
cs
adc
out
pusha
or
push
ja
daa
push
mov
adc
lret
pop
push
popa
sbb
addr16
cmpsl
adc
xor
jmp
lds
jb
inc
mov
cmovnp
ds
sahf
fcom
cmc
push
jl
fs
pop
movsl
jecxz
dec
stos
loop
adc
push
into
je
iret
lret
add
ja
hlt
sub
jge
out
ljmp
leave
jae
push
nop
and
lcall
or
pop
lcall
dec
daa
repz
dec
clc
or
in
mov
xor
push
orb
xchg
and
jo
addr16
clc
cmpl
pop
add
pop
add
pop
test
dec
jge
enter
mov
jae
mov
out
jle
xchg
inc
pop
jo
shl
pop
and
roll
cmp
xor
push
sub
shlb
mov
adc
movsl
cmc
scas
shrl
in
sub
stc
int
add
and
dec
xchg
xor
lds
mov
iret
adc
push
movb
sub
fistpl
cltd
xchg
mov
jle
push
iret
rclb
in
or
aas
mov
pop
std
push
gs
shl
inc
xor
popf
cmc
jbe
xchg
fidivrs
cmp
or
xchg
icebp
insl
vorps
mov
and
mov
movl
mov
jmp
sub
ljmp
in
xchg
push
movsl
jmp
mov
notb
xchg
pop
mov
movsb
dec
adc
mov
cmp
mov
imulb
jae
cs
mov
decb
xor
push
and
mov
cmp
dec
mov
mov
lods
dec
shl
outsb
fistl
inc
js
ret
leave
jl
adc
lods
pop
add
adc
lcall
fldcw
ficompl
cmc
xor
loop
xchg
outsl
inc
sub
sbb
hlt
outsl
lea
je
movsl
cmp
mov
mov
xor
jne
mov
xchg
adc
hlt
je
ds
call
adc
sub
shrb
test
stos
mov
adc
movsl
adc
mov
mov
mov
cli
mov
rcl
cli
fsubrl
std
mov
aaa
ss
add
test
mov
fwait
pop
out
mov
inc
mov
add
gs
ret
mov
mov
test
dec
mov
xchg
push
pop
les
pop
sub
xchg
daa
mov
mov
inc
in
aas
lods
pop
sbb
rorb
cmpb
rorb
push
adc
cmpsb
push
pop
in
jl
dec
push
fdivl
push
sbbl
jg
jg
shll
pop
pop
xor
sbb
xchg
push
add
dec
pop
jl
aas
xor
js
sub
mov
sti
clc
sbb
int
jbe
mov
pop
jbe
fnstcw
add
push
js
ret
pop
addb
add
xor
mov
sub
xchg
aad
outsl
mov
rorb
xor
sbb
xchg
mov
aas
push
and
bound
sahf
fnsave
cmc
int
jne
pop
sbb
test
and
lods
xchg
daa
jnp
loopne
push
loope
xchg
sub
or
lcall
cmp
mov
cltd
add
mov
adc
jns
dec
loope
push
and
jle
popf
or
mov
add
dec
xor
and
adc
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
jmp
repz
lea
jnp
mov
lods
dec
xchg
jo
pop
sahf
pop
xor
mov
mov
mov
int3
xchg
sub
mov
scas
rclb
loope
insl
sahf
aaa
rclb
bound
mov
xor
mov
push
push
cmp
in
xchg
dec
popa
fidivl
je
cmp
xchg
adc
jnp
push
push
test
jecxz
aad
jmp
lret
cld
xor
data16
std
sbb
or
add
sbb
sub
or
add
lcall
or
fsubs
mov
jae
xchg
mov
pushf
inc
push
aaa
add
inc
sahf
adcb
into
lods
xor
movsb
sbb
out
jnp
jecxz
sub
stc
jns
dec
pusha
lods
hlt
into
in
cmpsl
je
paddd
mov
mov
xor
andb
outsl
or
mov
mov
gs
add
xor
dec
mov
push
rorb
fmuls
imul
and
dec
pop
sub
frstor
mov
sub
sbbl
mov
ja
cmp
add
push
or
push
jle
popa
ret
and
cmp
in
lods
inc
jns
push
cmpsb
push
aam
dec
inc
mov
xor
and
lret
xor
push
xchg
es
adcl
sarb
add
stos
adc
pop
mov
sub
sarb
std
nop
cmp
mov
inc
mov
addb
dec
add
inc
sbb
ds
mov
jmp
test
cltd
test
inc
jnp
call
ficoml
mov
mov
loopne
cli
les
cmp
cmp
jmp
aam
push
fimuls
push
mov
stc
mov
shld
test
xchg
rorb
cmpsl
pop
jle
xlat
testb
inc
xchg
scas
int3
mov
addr16
mov
xor
not
popa
in
xorl
stc
dec
ficomps
jecxz
fdivl
loope
js
pop
push
sbb
scas
fwait
push
movsl
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
cmpl
movl
mov
mov
not
jmp
mov
cmpl
jge
push
pushl
push
pushl
pushl
call
neg
movzwl
sbb
mov
and
xor
or
or
adc
xor
movzbl
or
push
push
cmpl
mov
mov
mov
mov
jmp
movl
cmpl
jae
push
pushl
pushl
push
pushl
push
call
xor
movzbl
or
mov
add
adc
addl
decl
movl
cmpl
not
movl
jmp
movl
mov
cmpl
jl
pushl
call
adc
sbbl
and
and
orl
sbb
subl
movl
xorl
movl
mov
mov
xor
div
cmpl
movl
movl
movl
jmp
mov
movzwl
cmpl
jle
push
push
push
call
xor
movzbl
sub
mov
adc
adc
and
or
mov
mov
sub
imul
sub
mov
addl
xor
adc
and
sbb
mov
subl
xor
div
sbb
sub
mov
sub
mov
movl
movl
cmpl
movl
movzwl
jmp
not
mov
cmpl
jne
push
call
movzwl
xor
and
sub
mov
xor
mov
andl
adc
movl
adc
mov
and
add
xor
add
xor
add
imul
mov
cmpl
mov
mov
jmp
mov
cmpl
ja
pushl
push
push
push
push
call
inc
mov
sbb
or
and
sub
and
adcl
sub
mov
mov
sub
add
mov
movl
movl
movl
sbb
movl
cmpl
movl
mov
movl
jmp
mov
movl
cmpl
jge
pushl
call
adc
add
sbb
andl
and
mov
imul
xor
mov
mov
or
mov
imul
xorl
imul
mov
and
or
orl
mov
xor
andl
mov
orl
mov
orl
lea
mov
add
movl
movl
sub
movl
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
jle
pushl
push
push
call
sub
xor
sbb
movzbl
adc
addl
sbbl
mov
xor
cmpl
mov
mov
jmp
movl
cmpl
jl
push
push
pushl
pushl
call
sub
sub
sbbl
sub
mov
adc
mov
adcl
movl
neg
mov
addl
or
xor
add
sub
mov
or
cmpl
mov
movl
jmp
movl
cmpl
jne
push
push
push
call
andl
sub
add
mov
xor
sbb
cmpl
mov
mov
mov
mov
jmp
not
cmpl
jne
push
push
push
push
call
or
negl
movzwl
sbb
orl
add
cmpl
movl
mov
mov
jmp
not
cmpl
jbe
push
push
push
call
movzbl
adc
sbb
sbb
adc
mov
sub
add
xor
sbbl
mov
movl
subl
movl
or
movl
cmpl
mov
movl
jmp
mov
cmpl
jb
push
pushl
call
add
movzbl
add
sub
xor
add
or
add
mov
add
sbb
mov
sub
mov
xorl
lea
or
cmpl
movl
movl
mov
jmp
movl
not
cmpl
jbe
push
call
mov
sub
mov
sbb
mov
movzbl
or
sbb
neg
mov
xor
mov
sub
sbb
mov
xor
movl
movl
inc
mov
movzbl
sub
mov
add
sbb
imul
add
mov
imul
xor
adcl
mov
div
sub
sbb
mov
xor
add
sbb
mov
movl
xor
or
xor
mov
movl
or
movl
and
mov
and
mov
xor
addl
div
imul
cmpl
movl
movzwl
mov
jmp
movl
cmpl
jge
pushl
call
sbb
xor
xor
sub
and
xor
xor
xor
orl
xor
adc
add
mov
addl
xor
mov
and
mov
xor
notl
mov
div
jmp
xchg
dec
in
movsb
lods
stos
test
movsb
aam
sarb
mov
push
sbb
pop
mov
les
fidivrs
fadds
jae
dec
xor
push
or
inc
stos
mov
dec
bound
pop
sahf
dec
clc
clc
outsb
stc
sub
enter
inc
xchg
or
dec
jne
xchg
in
cmp
mov
scas
inc
idivb
xchg
loope
pop
mov
into
hlt
in
inc
or
xchg
enter
mov
out
xchg
mov
xlat
aam
sbb
or
jecxz
lea
andb
fsts
fldt
pusha
xchg
sbbl
hlt
sbb
sbb
mov
and
test
cltd
lods
into
outsb
test
or
mov
test
out
in
loopne
sbb
xor
adc
gs
movsb
jge
inc
sbb
push
test
mov
cmp
pusha
jg
mov
jo
mov
and
inc
jle
clc
cmp
jne
mov
mov
imul
aam
mov
pop
mov
mov
cld
pushf
add
rol
inc
xor
out
andl
fisttpll
sbb
xor
cmp
lcall
mov
xchg
pop
popf
cmp
aas
xchg
int
loope
loop
inc
or
and
xchg
mov
aam
inc
out
nop
jmp
pop
xchg
leave
stc
pushf
in
jmp
and
vunpckhps
pop
into
jnp
xchg
mov
js
popa
and
int
int
inc
jnp
xor
iret
in
inc
mov
popa
incb
sub
xchg
daa
addr16
stos
aaa
bound
add
or
das
shrl
xchg
mov
out
push
add
sub
cmp
fs
jp
sbb
jmp
mov
imul
cmp
pushf
das
inc
inc
ficoml
orl
pushf
lock
stos
mov
mov
fisubrs
lods
std
sbb
xor
fs
inc
fstpl
fnstcw
add
scas
sub
jne
sub
in
xor
cmp
cltd
out
inc
jns
jge
std
xor
lock
mov
sahf
test
inc
in
mov
lods
cmp
cmc
sbb
ret
mov
mov
dec
pusha
outsl
and
into
leave
ljmp
mov
push
mov
sub
sub
dec
imul
test
push
rcll
test
mov
pop
movl
xchg
in
or
mov
mov
enter
or
scas
xor
sub
jbe,pt
mov
xor
ffreep
xchg
sub
nop
ss
jno
pushf
dec
outsl
aad
mov
mov
pop
pop
pop
mov
nop
aaa
xchg
cwtl
pop
pushf
add
mov
stos
mov
idiv
jmp
mov
cltd
in
scas
js
push
mov
lods
and
add
add
out
adc
pop
ljmp
push
xchg
lods
mov
mov
sbb
out
lretw
pop
test
fdivl
mov
adc
insb
out
shll
add
aad
lret
lret
cld
pusha
xchg
fs
js
daa
jecxz
sub
mov
std
sub
mov
out
imulb
aaa
shr
cmp
outsb
inc
ss
mov
in
std
sbb
pop
sbbb
push
mov
mov
fbstp
mov
sbb
movl
movl
movl
sbb
mov
adcl
mov
sub
and
shr
cmpl
movl
movl
movl
jmp
mov
cmpl
jge
pushl
pushl
pushl
call
and
subl
andl
or
sbbl
cmpl
movl
movl
movl
movl
jmp
mov
movzwl
cmpl
ja
pushl
pushl
pushl
pushl
push
pushl
call
add
notl
adcl
addl
add
sub
sub
mov
xorl
imul
mov
add
mov
and
cmpl
movl
movl
movl
jmp
movl
not
cmpl
jg
push
pushl
pushl
call
andl
add
xor
sbbl
movl
add
jmp
sub
sbb
pop
and
jae
fninit
pusha
inc
sarb
add
xchg
inc
leave
frstor
push
jne
cwtl
jl
lret
mov
sbb
dec
mov
aad
xchg
rcrb
cmp
mov
cmp
xorl
mov
dec
mov
out
push
call
lods
lock
std
cltd
faddl
mov
sub
adc
lods
sub
or
data16
arpl
insl
dec
popf
jnp
in
sub
or
lahf
imul
in
mov
fadd
or
rolb
fdivl
and
sti
sub
popf
outsb
dec
dec
sub
inc
xor
and
mov
and
in
fisubl
sbb
fcoml
ret
jns
jecxz
cmp
push
mov
outsl
push
jne
insb
mov
test
mov
mov
xchg
cmp
mov
push
lods
movsb
push
inc
fldcw
testl
arpl
jl
xor
lock
insl
add
repnz
xchg
push
jmp
pop
push
jmp
inc
imul
out
int
or
mov
movsl
push
push
xlat
pop
mov
fmuls
add
xor
jae
mov
les
addr16
clc
into
xchg
push
rorl
dec
cmp
inc
inc
mov
sub
loope
pop
dec
add
outsl
jge
popf
push
adc
xor
ret
adc
add
push
sbb
mov
jbe
pop
sbb
nop
rorl
incb
cs
bnd
and
fstpl
pop
push
mov
mov
adc
imul
mov
lahf
mov
push
mov
dec
and
push
adc
lret
icebp
cmp
fistps
sub
sbb
push
insb
and
fidivrs
mov
out
push
lret
inc
cli
xchg
jnp
add
inc
mov
stc
add
out
int3
mov
stc
pop
aam
inc
testl
sbb
leave
data16
cmp
enter
push
lock
add
xor
mov
adc
sbb
pop
imul
jl
pop
or
jge
stc
test
mov
dec
pop
xor
js
lret
mov
mov
push
pop
dec
rclb
ja
arpl
fstl
jmp
mov
push
mov
dec
mov
les
jmp
adc
xlat
fldt
mov
push
ror
fisubrs
inc
fisttpl
inc
test
repnz
mov
stos
negb
cmpsb
lods
or
mov
lcall
sahf
xlat
mov
push
sub
mov
orb
into
and
push
push
fnsave
pminub
lret
or
mov
or
cmp
mov
mov
jo
movsb
inc
loopne
addr16
in
cmp
mov
dec
pop
insb
repnz
mov
pop
xor
mov
lods
ds
outsb
sbbl
orl
push
xchg
or
movsb
fistl
or
jle
out
fidivrl
testb
xor
daa
sar
loope
push
loope
pop
call
push
repnz
dec
das
pop
push
test
inc
push
mov
sbb
push
fnstcw
adc
out
adc
ss
mov
cli
sbb
xchg
jb
sbb
call
or
lock
addr16
adc
sbb
jae
xor
stos
add
xchg
int
pushf
xor
sub
orl
sub
mov
sbb
mov
mov
movzbl
sub
mov
movl
movl
mov
cmpl
mov
movl
jmp
mov
cmpl
jl
push
call
movzbl
sbb
xor
movl
adc
xor
subl
or
cmpl
mov
mov
mov
mov
jmp
movl
cmpl
jae
push
push
call
add
sub
xor
adc
adc
not
mov
orl
or
xor
xor
xor
sub
mov
sub
mov
mov
subl
movl
cmpl
mov
mov
jmp
mov
mov
cmpl
jbe
pushl
call
sub
xor
add
mov
adc
and
sub
xor
or
and
mov
adc
or
movl
movl
jmp
pop
cmpsb
ljmp
add
jecxz
dec
insb
shr
dec
sarb
int
fsts
repz
adc
adc
leave
test
hlt
mov
out
mov
in
into
lcall
movups
je
aaa
push
aaa
push
adc
loop
repz
mov
fistpll
test
test
rolb
or
mov
dec
cmp
sub
xor
into
and
iret
jb
xor
xchg
into
pop
testb
mull
pop
dec
in
adc
mov
test
nop
or
cmpsb
dec
sbb
vaddss
test
sbb
mov
sbb
or
scas
into
cltd
lcall
in
aad
add
dec
rcll
loope
stos
popa
pop
inc
dec
push
dec
repnz
fbstp
stc
push
rcrl
add
add
stos
inc
mov
push
jb
test
adc
and
scas
xor
in
mov
mov
cmp
iret
shlb
addl
int3
aaa
xchg
movl
jmp
mov
jle
xchg
or
xchg
dec
mov
das
jle
dec
aad
xor
mov
adc
mov
add
jmp
adc
xor
xchg
mov
jbe
jb
sarb
jl
push
sub
sahf
dec
jbe
add
xchg
xor
add
xchg
or
inc
push
les
rcrl
sub
mov
pop
mov
ja
test
stc
mov
mov
pop
aaa
mov
lds
in
dec
mov
xchg
outsl
adc
adc
cmpsb
mov
or
mov
scas
fists
cmp
setge
mov
in
leave
push
lret
lea
pushf
imul
inc
shl
outsb
lds
xchg
scas
mov
test
loopne
mov
js
in
xor
push
push
fcmovnb
out
icebp
xor
dec
fwait
mov
sbb
or
jle
lods
jnp
ds
mov
lock
cmp
dec
lea
fdivs
sbb
out
loopne
xor
shll
dec
sarl
jno
xchg
pop
out
mov
pushf
loop
popa
push
fdivrl
and
sub
add
or
and
out
push
rorl
mov
out
enter
sti
cmp
lret
das
fisubl
dec
shrb
test
aaa
int3
cmp
movsb
test
outsl
cmpsb
addr16
into
ret
push
fdivrl
pop
shr
aaa
or
cmp
cmp
jmp
and
ficomps
fistpl
pop
cmp
popa
jne
or
and
xor
mov
loope
bound
inc
stc
das
pusha
dec
mov
fbld
sub
mov
push
int
dec
cmp
out
mov
ss
aad
incb
mov
push
ljmp
mov
adcl
lods
or
pop
lahf
push
mov
fwait
jae
and
add
orl
dec
xor
adc
xor
sarl
je
cmc
out
or
pop
push
or
movsb
or
in
cmc
mov
icebp
aaa
xor
push
or
mov
jae
mov
dec
mov
jl
xchg
test
aaa
shrl
add
push
inc
push
sub
sub
lret
adc
jae
js
add
sub
xchg
stos
aam
ljmp
fs
sti
jne
inc
cmp
and
push
loope
and
stc
sub
pushl
jne
add
adc
movl
and
movl
orl
movl
mov
and
add
mov
sbbl
sub
xor
mov
imul
cmpl
movl
mov
mov
mov
jmp
mov
movl
cmpl
ja
push
push
pushl
push
call
mov
sbb
sub
notl
xor
movl
xor
imul
mov
or
mov
adcl
lea
addl
push
call
mov
cmpl
mov
movl
jmp
movl
mov
cmpl
jbe
push
call
and
and
mov
mov
xor
xor
add
movzbl
sbb
sbbl
or
cmpl
movl
mov
mov
jmp
mov
mov
cmpl
jg
push
pushl
pushl
call
and
xor
sub
sbbl
sbb
add
mov
imul
cmpl
mov
movzbl
mov
mov
jmp
movl
not
cmpl
jb
push
push
call
mov
add
mov
mov
and
mov
sbbl
mov
add
movzwl
adc
mov
xor
add
and
sub
xor
sbb
mov
orl
div
cmpl
movl
movl
mov
jmp
movl
mov
cmpl
jne
push
push
push
push
call
sbb
add
movzwl
adc
sub
inc
xor
addl
add
cmpl
movl
mov
mov
jmp
mov
movzwl
cmpl
jb
push
pushl
push
pushl
push
pushl
call
movzbl
xor
xor
orl
xor
adc
addl
mov
mov
sub
sub
mov
movl
movl
movl
movl
cmpl
movl
movzbl
mov
jmp
movl
mov
cmpl
jge
pushl
pushl
pushl
call
mov
mov
sub
sub
sub
mov
mov
sub
imul
sbbl
sub
xor
add
mov
sub
add
movl
movl
mov
xor
or
sub
sub
movl
movl
add
movl
movl
movl
mov
xor
movl
movl
adc
mov
add
mov
adcl
mov
neg
and
andl
sub
sub
cmpl
movl
movl
mov
mov
jmp
mov
cmpl
jbe
push
push
push
pushl
push
call
or
xor
add
mov
sub
and
orl
xor
imul
sbb
mov
lea
add
mov
mov
mov
mov
or
xor
add
not
mov
lea
and
add
mov
or
sub
adc
add
cmpl
movl
mov
movl
jmp
movl
cmpl
jae
pushl
push
pushl
push
pushl
pushl
pushl
push
call
adcl
sbb
xorl
mov
add
mov
sub
movzbl
add
mov
movl
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
sbb
mov
mov
bound
ja
sarb
sti
fstl
dec
lret
jle
cmp
insb
mov
lret
xchg
cmp
add
nop
pop
repz
sbb
sub
pusha
loope
and
pop
loop
cltd
dec
jb
add
or
mov
mov
and
adc
and
pop
popa
add
leave
sbb
sub
lds
adc
pop
jae
lods
add
clc
adc
cmp
xorb
ret
pop
or
idivb
xchg
js
cmpsb
imul
mov
andl
xchg
bound
add
add
insl
or
and
lea
in
adc
dec
pusha
sbb
test
inc
cmp
sub
aas
scas
fmulp
xchg
push
cmp
mov
test
pop
jne
lds
sahf
pushf
sub
iret
in
js
lock
cmp
imul
sahf
imul
push
andb
scas
lds
mov
test
ret
fstps
aam
push
xor
stc
jmp
and
mov
mov
adc
popa
popa
loop
adc
loop
sahf
xchg
loope
jno
dec
out
inc
out
sarl
insb
lcall
pop
test
jg
mov
mov
movsb
and
sbb
imul
mov
in
pop
inc
mov
test
test
cwtl
pop
jbe
mov
pop
int3
mov
lcall
outsl
push
in
mov
inc
js
push
sub
xlat
stos
cmp
pop
xchg
push
mov
aam
pop
jbe
sub
ret
daa
popa
add
test
in
xor
xlat
out
xchg
stos
mov
cmp
int
std
and
jno
nop
fists
adc
neg
mov
lods
js
mov
xor
std
sbb
xchg
sub
outsl
xchg
pop
enter
or
cs
mov
ljmp
sbb
fidivs
stos
mov
pop
or
lock
pop
out
push
mov
dec
seto
sar
xor
dec
jle
imul
pusha
sahf
ss
xor
xor
mov
sbb
mov
xor
daa
lret
mov
jp
lods
std
jno
sbb
sub
cmp
lret
mov
sti
adc
add
pmaddwd
pop
fsts
jns
pop
cli
outsb
mulb
and
pop
mov
je
mov
fwait
dec
push
or
shll
mov
pop
mov
dec
jp
and
or
mov
sbb
fsts
imul
bound
std
sbb
and
in
xchg
mov
xlat
ficoml
das
mov
push
push
and
fsubs
or
push
mov
mov
les
dec
mov
sub
mov
push
sbb
pop
fcoms
xchg
in
mov
or
clc
mov
cli
add
push
mov
movsb
imul
lock
inc
cli
ss
sbb
lahf
rol
cltd
lods
xchg
popf
divb
inc
sahf
mov
inc
andl
ljmp
mov
lea
int
stc
inc
mov
xor
xor
mov
call
or
or
mov
mov
jmp
outsb
cltd
bound
xor
fstps
sarb
pop
add
pop
mov
cmc
or
mov
lcall
roll
scas
pop
sbb
push
pop
mov
pop
mull
push
adc
test
mov
mov
lea
xchg
pop
gs
aad
test
adc
fcmovnu
jns
aad
fidivs
rcrl
mov
xor
fldcw
or
mov
sti
repz
push
push
call
mov
fs
ss
jg
sahf
sub
in
xor
jb
and
fwait
or
into
inc
push
int
add
push
mov
mov
imul
repnz
push
imul
out
xor
dec
repnz
das
repz
in
lcall
test
test
data16
sahf
test
mov
leave
or
int
insb
mov
push
dec
in
sbb
iret
xchg
daa
fwait
add
lock
fsub
addb
cmp
test
push
jns
ror
xor
enter
and
pop
aam
mov
xchg
mov
and
mov
inc
lret
sub
inc
mov
jl
and
xchg
pop
sbb
int3
sub
cld
or
pop
imull
aaa
inc
or
xor
add
das
std
rcll
pop
stos
dec
cwtl
cltd
push
popa
pushf
rorl
stos
adc
and
xor
popa
scas
je
cld
int
mov
cmc
and
and
mov
sahf
push
push
aam
dec
push
add
lds
sahf
sbb
mov
call
mov
test
add
push
pop
out
mov
sbb
mov
inc
cmp
js
push
std
iret
daa
cs
outsb
pop
mov
rcrb
stc
icebp
pop
lods
mov
shl
xchg
insl
mov
fidivrl
imul
testl
mov
lods
xor
out
sahf
sbb
insb
lret
jmp
inc
add
adc
push
repz
cmp
sub
push
dec
aas
pop
mov
addr16
and
pop
ds
ds
addr16
fstl
cmp
sbb
shll
add
mov
xorl
fiaddl
cmp
mov
ja
or
int3
mov
std
mov
inc
xor
in
negl
test
mov
mov
adc
add
jp
bnd
out
xchg
jecxz
dec
add
xchg
inc
push
push
out
jmp
fistps
shl
xchg
mov
es
pop
pop
and
jns
xchg
pop
pop
cli
lcall
add
push
nop
adc
out
cmpsb
int
mov
lds
sbb
adc
xor
xchg
cmp
imul
mov
iret
scas
leave
mov
jns
dec
mov
and
or
dec
dec
ret
push
xor
mov
int3
push
add
in
cmp
xchg
into
or
std
mov
mov
loop
inc
push
mov
mov
dec
cmp
lret
in
ds
fistps
sbb
adc
mov
push
sbb
cmp
cli
pop
repz
out
ret
rclb
sbb
jo
mov
leave
roll
dec
enter
insb
stc
and
scas
out
ret
scas
lahf
xor
hlt
sbb
jle
aam
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
mov
mov
mov
iret
jge
iret
nop
pop
sarb
test
adc
xchg
xor
test
jo
mov
xor
mov
ss
aas
ret
jnp
cwtl
pop
xor
pop
mov
lret
pop
nop
cmp
jmp
xchg
jns
int3
jp
popa
inc
mov
in
lea
jo
xchg
notb
add
push
in
jg
jp
hlt
push
jb
and
xor
jno
and
jle
push
sbb
lret
mov
add
sbb
cld
pop
fstl
fcmovu
hlt
xlat
lret
add
mov
lahf
rclb
out
ja
arpl
test
stos
incl
mov
mov
shrb
ja
mov
sbb
sub
sbb
das
and
aam
pop
jmp
xchg
pop
iret
int
xor
dec
jbe
das
aas
out
fiadds
pop
jge
cwtl
adc
clc
mov
dec
loope
aam
inc
jmp
mov
jbe
stc
aam
xchg
mov
in
lds
fsqrt
mov
cmpsb
and
cmc
mov
jno
dec
js
sbb
jl
loopne
push
stc
xorl
icebp
cmp
and
mov
mov
cwtl
outsl
fstps
ret
jl
lret
add
hlt
inc
xchg
lock
sub
sbbb
cmp
stc
jge
cmp
jecxz
xchg
lcall
nop
cmpsl
dec
add
dec
and
mov
pop
popa
ret
push
add
cmp
mov
mov
mov
and
mov
sahf
sbb
add
mov
lret
cmp
push
leave
jle
lods
mov
cli
jo
test
movsl
or
jbe
lahf
xor
enter
fstl
mov
into
fld
shlb
cltd
roll
lret
cld
push
shl
and
dec
mov
or
push
xor
cmc
shlb
insl
jle
out
les
ss
pop
leave
and
loopne
cmc
pop
inc
dec
add
repz
lret
xorl
ljmp
xlat
mov
pushl
imul
xchg
xchg
cmpsl
shl
xor
fisubrl
cli
test
jle
jno
sbb
cmpsl
jbe
mov
aad
cmp
ja
sub
and
sarl
add
and
jbe,pn
sti
fdivr
mov
add
or
jbe
int3
mov
push
mov
sti
cmpsl
pop
faddl
cmpb
rcl
add
inc
popa
pop
loopne
add
jns
jnp
dec
fbld
fnstenv
mov
fistpl
mov
jecxz
test
test
mov
add
ret
inc
sbb
xor
xor
adc
lea
mov
sub
dec
push
ljmp
pop
frstor
cmpsl
cmp
and
popa
inc
sarb
fidivrl
adc
pop
aam
dec
sarb
stos
ss
adc
sbb
mov
jae
insb
or
mov
inc
out
xor
pop
cwtl
in
pop
mov
mov
adc
xchg
mov
pop
push
jae
nop
cmp
and
jno
pop
fiadds
test
and
ror
mov
jae
pusha
cmc
lret
dec
mov
and
xor
loopne
or
pop
push
and
xchg
out
or
das
fsubr
xchg
add
xor
icebp
cmc
mov
cli
push
push
test
stos
cwtl
add
dec
loop
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
jmp
rclb
cmp
mov
scas
xor
mov
test
sbb
sarb
leave
iret
shll
inc
xchg
pushf
mov
xorl
or
or
ja
jle
frstor
sbb
add
mov
fbld
or
loopne
or
pop
rclb
or
or
ret
inc
xor
mov
adc
testb
mov
mulb
xor
loop
les
sub
in
adc
cli
mov
leave
sub
mov
dec
dec
xchg
leave
lret
pop
ret
mov
and
ret
cmp
ljmp
add
add
sub
push
mov
inc
out
sbb
or
cmp
xor
xchg
lods
ds
fadd
int
add
repz
sub
or
test
inc
lods
sbb
in
mov
xor
mov
rcr
aaa
sub
das
fs
mov
sub
push
xor
scas
push
sub
mov
adc
sub
cmpsl
movsl
jo
push
stos
mov
push
xor
xor
sarb
push
jne
sbbl
mov
adc
dec
cmp
pop
pop
out
fwait
test
sub
add
mov
fadds
into
xlat
ret
lods
int
xchg
fidivs
mov
push
insl
arpl
xcrypt-ctr
cmpsl
pop
leave
enter
sbb
xor
inc
out
mov
test
cmp
call
cmpsb
sbb
stos
inc
xor
popf
leave
mov
jmp
adc
lods
scas
xor
dec
inc
jp
xchg
imul
out
mul
movb
lea
adc
inc
mov
sti
xor
mov
in
stos
mov
dec
out
lret
int
sub
push
cmp
mov
push
xchg
cld
jl
vmovdqa
add
ret
cli
aaa
jle
jne
sbb
push
test
push
adc
pop
sub
scas
push
in
sbb
sbb
xor
cs
iret
cmp
cltd
test
loop
bnd
sub
pop
add
loopne
aas
shlb
add
or
popa
aaa
imul
xchg
rcrb
test
lahf
iret
lods
mov
nop
sub
shrb
xor
lock
pop
rcll
xchg
inc
aas
jecxz
addr16
filds
lods
xlat
mov
sahf
cmp
cmpsb
and
hlt
sub
cli
push
pop
out
repz
lret
xchg
push
inc
sbb
mov
sub
and
in
mov
repz
mov
adc
pop
stos
jo
nop
inc
mov
in
bound
jge
dec
sub
test
pop
sbb
daa
fsts
aaa
xor
aam
sbbb
js
pop
mov
xchg
mov
mov
mov
inc
cmp
sub
inc
mov
rol
mov
cmp
jg
mov
xor
push
mov
mov
cmp
xchg
xchg
cs
jl
xchg
mov
xor
xor
inc
into
jne
out
dec
jmp
pop
lret
or
fcmovnbe
jg
int3
into
roll
rcrb
sbb
lahf
mov
adcl
pop
mov
decl
xchg
cltd
mov
out
out
lret
cli
pusha
test
mov
repz
loope
push
call
mov
cmp
jmp
mov
xor
mov
mov
nop
call
sarb
push
jno
out
xor
incb
lods
jle
inc
std
fdivrl
mov
push
adc
pop
jae
mov
and
out
cltd
push
outsb
int3
je
call
int
in
sbb
or
test
int
sbb
leave
imul
in
lock
inc
mov
in
out
xchg
aad
push
insb
fcmovbe
movsb
pop
aam
cli
cmpsl
push
add
das
or
push
sbb
xlat
icebp
rcrb
cmc
rcll
ja
pushf
mov
sarl
adc
std
movsl
adc
sahf
mov
leave
out
and
outsl
cltd
pusha
int
xor
mov
fistl
jae
xlat
in
inc
jmp
sbb
mov
sbb
adc
dec
mov
fcompl
inc
fcmovnb
ja
movl
add
ficompl
dec
insl
pushl
pushf
lock
rorl
pop
aaa
adc
mov
popa
jg
mov
popa
filds
addr16
jae
pop
ds
adc
rolb
loopne
or
scas
xlat
mov
fbstp
cmpsl
movb
push
dec
jae
fldenv
insl
xchg
adc
mov
pop
pop
and
aas
mov
add
outsb
xchg
addb
mov
push
fs
push
lds
pop
cmp
sub
inc
test
popa
std
pop
mov
pop
jl
or
iret
loope
fwait
add
icebp
mov
sbb
rolb
cld
sbb
cmp
xchg
mov
fisttpl
aaa
outsb
dec
adc
dec
enter
mov
fildl
fdivs
xor
mov
faddl
pop
jle
mov
push
xchg
mov
or
xchg
cmp
sub
imul
pusha
push
lret
pop
in
cld
xchg
popa
out
insl
lea
and
mov
shll
and
dec
pop
or
push
dec
outsl
loope
in
aaa
jg
lods
push
push
adc
jo
adc
outsb
gs
sti
or
mov
out
cli
das
mov
sbb
call
mov
testl
pop
ret
push
inc
push
push
add
jne
shll
ret
ljmp
and
repnz
cmp
scas
xchg
sub
test
xchg
icebp
add
adc
push
inc
add
and
mov
sbb
test
aaa
cwtl
iret
scas
xlat
pop
dec
xor
roll
push
lret
sbb
cmpl
xchg
xchg
es
faddp
lahf
clc
outsb
fiaddl
popa
stos
imul
dec
mov
adcl
test
dec
mov
gs
push
pop
lods
xchg
or
xchg
push
sub
and
adc
xorb
lahf
js
and
pop
in
pop
ss
push
lds
pusha
mov
fdivl
add
clc
jb
lods
dec
out
and
sub
lds
mov
popf
or
xchg
and
push
pop
in
dec
pop
dec
ret
pop
pop
loope
sbb
bound
add
and
and
cmp
lock
pop
ljmp
sti
adc
fisubrl
jge
jae
sub
out
cmp
pop
test
addr16
mov
xchg
adc
jle
sub
mov
inc
sbb
es
mov
xchg
push
fistpl
jno
jmp
cmp
ljmp
adc
fiaddl
outsb
aas
push
pop
inc
xor
inc
pushf
xchg
xchg
data16
mov
daa
and
pushf
mov
add
mov
jmp
cld
sbb
mov
sahf
es
xor
mov
mov
pop
out
cs
dec
ret
sbb
xchg
mov
das
add
addr16
xor
jns
insb
inc
je
je
rorb
mov
cld
fs
les
push
loope
jne
and
loop
xchg
or
and
cmp
sbb
repnz
sub
out
mov
jae
imul
pop
insl
sbb
popf
push
lret
jmp
out
pop
jle
add
in
out
sbb
jmp
daa
jae
aam
movsb
rcrl
mov
cmp
clc
jae
in
sti
xchg
in
cmp
icebp
addl
or
pushf
add
scas
out
pop
icebp
adc
sub
xchg
out
cmc
fwait
adc
rcl
repnz
jecxz
test
sub
sbb
mov
jmp
cmpsl
fisttpl
jnp
jne
icebp
add
notl
adc
dec
xchg
fstl
add
lods
adc
jo
leave
xchg
pop
xor
or
xchg
stos
inc
testb
mov
jmp
dec
xor
push
or
mov
add
push
sti
push
add
inc
xchg
push
cltd
jbe
push
mov
xor
add
gs
pop
imul
imul
dec
out
mov
lcall
ret
daa
repz
inc
rcrl
adc
insb
xor
cld
or
add
push
and
imul
inc
out
mov
rcl
inc
gs
sbbl
pop
adc
sbb
inc
lret
push
dec
mov
call
leave
addr16
jbe
outsl
movsl
pusha
je
test
push
call
or
jmp
jns
out
pop
dec
mov
daa
dec
mov
dec
repz
das
icebp
jp
emms
fisttpll
test
push
pop
outsl
rol
mov
jne
jbe
popl
push
decb
push
stos
faddp
cmc
sub
push
push
sub
jno
cmp
pop
sbb
ds
mov
test
cmp
mov
add
xor
cmpsl
mov
and
adc
scas
scas
stos
fstpt
pop
negb
pop
int
in
cmp
mov
push
adc
inc
outsl
adc
pop
aas
jg
mov
daa
inc
adc
mov
outsl
cmpsb
add
ss
cli
shrl
mov
call
mov
mov
aam
mov
mov
xchg
mov
cmp
sbb
fcmovb
mov
fs
ret
cmp
scas
push
sbbb
fstp
pop
mov
lods
mov
sbb
jae
loop
pop
mov
pop
mov
or
xchg
js
jg
push
dec
adc
adc
lds
fisubl
xor
lods
call
lods
les
aas
shll
and
aad
sub
mov
cmpsb
adc
cmc
aad
mov
mov
pop
cmpsb
adc
out
mov
repz
aas
cmpsb
arpl
inc
mov
pop
dec
mov
jmp
push
into
out
xchg
rcrl
movsb
pop
das
push
sub
inc
fsubrs
iret
and
popf
je
inc
aas
adc
ret
mov
fmuls
add
push
nop
scas
cs
mov
mov
notl
xor
jmp
divl
xchg
insb
int
fwait
out
jns
addb
sub
push
cmp
inc
fdivs
adc
lret
cmpsb
test
xchg
or
jne
jmp
mov
mov
cmp
sbb
xorb
scas
mov
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
jmp
push
inc
sbb
pop
or
cld
movsb
jge
sub
sarb
dec
les
fcmovnbe
in
xchg
push
mov
push
jg
and
pop
pop
in
icebp
sub
push
fiaddl
or
dec
jmp
and
mov
out
lahf
cmpsb
sbb
xlat
add
push
fcmovb
mov
inc
pop
mov
dec
mov
dec
jle
shll
adc
xchg
icebp
fnstenv
or
popw
jle
push
cmp
sbb
test
jae
jno
jns
jno
and
aaa
pushf
cmpb
xchg
jmp
xchg
xor
jno
mov
or
nop
cld
xlat
cvttps2pi
and
mov
pop
jg
loop
mov
fisubrl
inc
fdivs
xchg
test
mov
jg
pop
push
xor
stos
sub
es
sbb
jo
dec
out
shl
push
mov
fcompl
mov
xor
mov
js
mov
testl
cmpb
movsl
stos
cmc
and
jbe
sahf
ficompl
pop
cmp
aam
aaa
hlt
mov
jmp
mov
loopne
inc
add
add
dec
push
mov
push
mov
fmuls
cs
ret
sbb
subb
xor
and
arpl
or
out
mov
insb
ret
aas
adcb
mov
ret
repnz
mov
sub
gs
pusha
sbb
popf
ss
jl
mov
xor
cld
xchg
int3
push
mov
les
pop
mov
adc
iret
and
movsl
cli
stos
adc
pusha
mov
icebp
jnp
cmp
in
dec
jns
add
mov
inc
xchg
adc
test
fwait
adc
xor
stos
jno
fwait
lds
pop
mov
jge
and
cmp
xchg
push
add
mov
lahf
pop
adc
in
xorb
jg
xchg
test
mov
smsw
sbb
cs
leave
fdivs
rorb
mov
lods
xchg
dec
in
jbe
jg
add
aas
push
cmp
xchg
subb
aam
and
lods
cmp
add
or
bound
pop
frstor
lret
mov
jg
xchg
iret
ret
and
into
in
add
add
push
lret
push
push
test
loop
sub
mov
je
or
jb
cli
scas
xchg
dec
test
movsb
adc
mov
std
ss
adc
or
es
aaa
cwtl
jb
ljmp
int
xchg
fiaddl
jo
icebp
lret
int
es
int3
mov
xor
loopne
sbbb
jbe
xchg
scas
inc
fildll
imul
add
mov
add
mov
insb
scas
imul
adc
inc
dec
test
out
repz
mov
or
je
dec
pop
hlt
cmp
xchg
ja
dec
sub
fisttps
std
mov
push
adc
leave
add
aas
and
mov
pop
daa
ds
iret
or
hlt
pop
cli
mov
shll
push
clc
xchg
js
aaa
aam
in
lret
push
mov
push
mulb
push
decl
fists
add
repz
add
lea
cld
fdivrl
mov
mov
jmp
mov
pusha
repz
pop
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
jmp
cmp
mov
sahf
jno
and
dec
test
mov
dec
jns
mov
push
add
mov
lret
mov
adc
nop
insb
rol
clc
pop
enter
mov
xchg
imul
adc
mov
mov
push
jnp
outsb
pop
test
js
es
test
test
jle
add
push
iret
adc
insb
mov
lock
xor
sbb
inc
fcmovbe
mov
cmpsl
pusha
cmc
xchg
loope
sbb
inc
fisttpll
int3
jae
sub
add
scas
mov
mov
aam
shrb
lcall
sub
rcrl
lods
mov
popf
cmp
pop
adc
dec
add
repnz
ret
lock
jb
sarl
insb
xchg
les
and
loop
or
test
or
jns
lods
mov
adc
inc
lahf
mov
stos
out
add
sbbl
data16
gs
sub
push
dec
cld
jo
cwtl
fimull
fcoml
andl
jbe
repnz
cli
mov
xchg
lret
mov
jae
aas
jp
in
fsubl
test
add
cmpsb
ss
dec
xchg
ds
data16
call
pop
les
das
mov
fildll
mov
mov
test
fstl
lods
cli
das
mov
and
xchg
cmp
dec
sbb
push
movsl
push
jle
in
mov
add
hlt
mov
add
outsb
and
int
or
push
mov
in
sbb
outsb
jg
jo
dec
roll
mov
mov
cmp
pop
inc
bound
std
pusha
jne
xchg
jne
ss
sub
inc
add
fisubl
bound
insb
xchg
xor
adc
dec
or
les
xor
mov
and
sarl
push
pop
es
jg
adc
mov
lock
popf
sub
cmpsb
test
jae
fdivl
and
mov
std
sub
out
jp
shrb
xlat
aam
xchg
mov
jae
test
in
jp
push
add
pop
int
lock
jbe
jns,pn
aas
jg
or
jns,pn
divb
pusha
test
lret
out
mov
mov
cli
adc
cmp
divl
ret
cmpsb
and
daa
jmp
xchg
orb
in
pop
mov
push
imul
add
push
cwtl
aaa
das
mov
mov
icebp
cmp
xchg
mov
lock
add
repz
popa
int
mov
push
imul
pusha
xor
dec
lahf
jmp
movsb
fnstsw
pop
in
gs
cmp
inc
mov
ror
xchg
bound
lods
sub
int3
scas
clc
test
dec
cltd
cmpsl
outsl
stos
cmp
jnp
cmc
cli
jo
mov
aad
cs
jno
inc
ds
les
sub
popa
imul
pop
sti
jle
gs
cmp
notb
adc
pusha
jno
xchg
inc
and
ja
xchg
fs
xchg
add
mov
fwait
std
dec
aaa
sbb
arpl
xchg
lret
push
lock
pop
fistl
data16
or
add
mov
mov
sarl
leave
xor
jge
xor
aad
lods
jle
fldcw
fwait
xor
xchg
xchg
push
or
stos
sub
pop
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
jmp
cwtl
push
popa
pop
stos
jl
xchg
mov
repnz
lods
faddl
mov
push
add
shrl
xchg
sbb
out
ret
push
ret
in
ficoml
in
sub
pushf
imul
pop
cmp
xor
xchg
jns
popa
mov
sbb
pop
push
sbb
jno
jnp
adc
pop
rol
dec
sub
mov
add
dec
loop
jge
adcb
iret
pop
jecxz
enter
fsubp
fimuls
cmpsb
popa
nop
inc
aaa
cmp
dec
adc
dec
push
iret
xchg
mov
add
or
mov
adc
sbb
push
dec
addb
add
inc
out
lds
sub
lcall
aaa
fldt
pop
popf
mov
cmp
or
fsub
or
lock
enter
imul
jb
movsb
addr16
or
xor
xchg
and
aad
cmp
mov
fiaddl
fiaddl
jne
and
out
sbb
jno
mov
xchg
and
cld
nop
movb
in
add
fisttpl
mov
add
dec
and
dec
mov
icebp
popa
loopne
mov
push
imul
shlb
scas
xchg
adc
add
es
stos
xor
xor
xor
mov
fcoms
stos
xchg
movsb
out
dec
jno
jb
adc
push
sub
push
jns
sub
cli
xchg
or
repnz
xor
inc
shll
insl
scas
mov
repnz
rorl
sbb
leave
test
inc
popa
adc
jmp
call
cmp
xchg
into
dec
cmpsl
nop
cmpsl
fs
dec
xchg
jmp
cmp
add
fisubrl
jg
cmp
lea
in
inc
adcb
call
push
cmp
lods
mov
pop
insb
pop
mov
nop
inc
pop
das
xorb
and
pop
enter
push
pop
dec
jle
in
scas
sbb
push
fcmovnbe
rcr
or
inc
insl
cmpsb
lret
lock
cs
flds
stos
mov
icebp
and
mov
sbb
dec
push
popf
fidivs
mov
imul
jnp
loope
mov
lahf
mov
js
pop
popa
in
or
out
ret
clc
mov
daa
cmp
mov
mov
repz
jp,pt
and
dec
inc
dec
jle
data16
jns
mov
ss
lcall
push
cmp
sub
aas
adc
mov
and
cs
movsb
fildll
cmp
xchg
shlb
xchg
xchg
cltd
aad
sbb
xor
fcomps
stos
lea
inc
orb
iret
push
roll
push
pop
out
adc
mov
lods
ljmp
lods
lea
xor
mov
clc
jecxz
mov
mov
xor
loope
pop
mov
sti
leave
pop
pop
dec
jmp
sbb
ja
pop
push
inc
nop
xor
stc
leave
leave
ret
cmp
cmp
in
std
cmp
sbb
fmuls
aaa
stos
xor
add
ret
mov
and
add
xor
dec
scas
adc
in
shl
popf
leave
es
add
divl
cmp
dec
pop
push
icebp
daa
sub
mov
mov
je
mov
mov
add
xchg
fwait
jne
jns
pop
dec
jo
dec
xchg
xor
push
pop
div
mov
or
mov
xor
div
imul
jmp
xor
in
scas
imul
mov
xchg
sarb
stos
mov
cltd
scas
mov
xchg
inc
xor
inc
aaa
into
popa
mov
jl
mov
dec
psraw
or
ds
pop
insb
fnstsw
push
sbb
mov
mov
std
xchg
inc
dec
jo
gs
cmp
jo
das
xchg
jbe
cmp
fstpt
mov
cs
sub
xlat
jmp
call
imul
add
es
cmpsl
pop
fdivrp
aad
cli
push
jecxz
jns
fnstenv
dec
mov
iret
sub
psubq
stos
negl
add
cli
test
pusha
and
ret
sub
mov
insb
or
outsb
add
out
pop
sub
jg
daa
jmp
mov
and
sub
inc
dec
test
and
sub
mov
xchg
sbb
rcrb
lret
push
mov
scas
mov
out
stos
pop
andl
jo
repz
fwait
or
inc
out
decl
and
mov
mov
aas
movsl
lods
subl
lcall
test
test
shlb
mov
mov
push
clc
inc
jge
into
mov
fstpl
inc
mov
sub
nop
mov
pop
xor
or
mov
and
out
fcompl
mov
jp
pop
mov
xor
inc
push
rol
lcall
mov
xlat
mov
push
icebp
sahf
jnp
ret
add
subb
repnz
sub
and
sbb
es
and
and
push
aad
out
imul
je
out
push
dec
cmp
les
inc
mov
hlt
sti
or
cmp
scas
xchg
mov
lret
jp
lcall
or
das
inc
dec
lret
call
insb
ret
repnz
fisttpl
pusha
xor
pop
fwait
and
das
movsl
and
mov
inc
cmp
fadds
test
push
push
repz
pop
dec
xor
pushf
in
mov
push
pop
cmp
jp
inc
popf
inc
xor
ret
ja
fstps
cs
jne
cmpsl
mov
dec
cmp
in
outsb
sbb
outsl
jge
and
adc
mov
sbb
repz
xlat
ficompl
mov
cmpsl
jnp
mov
test
icebp
mov
cmp
call
in
rolb
xor
xchg
rol
adcl
xchg
in
jl
ret
icebp
xchg
push
clc
mov
loop
cmc
dec
in
mov
adc
mov
ror
fiaddl
mov
sbb
fcompl
adcb
test
icebp
pushf
adc
rorl
sbb
insb
fldl
jmp
loope
push
or
adcb
xor
inc
mov
hlt
lock
add
xchg
cld
test
add
cld
aaa
repz
shrl
xchg
popf
loop
test
jp
das
fistpll
sarl
test
jg
sbb
daa
fsubs
cmp
fnstsw
xor
stos
mov
mov
sahf
outsl
inc
mov
push
push
mov
es
fxch
dec
aaa
mov
push
push
cltd
push
sar
ja
divb
arpl
mov
mov
dec
or
lods
loopne
lea
incl
add
add
add
add
jmp
pop
dec
xchg
jmp
cmp
jns
inc
aad
mov
popf
sarb
fisttpl
adc
testl
in
call
or
or
mov
mov
dec
or
iret
add
mov
mov
push
pop
or
sbb
cmpsb
cli
movsl
test
cmp
push
inc
inc
add
push
jbe
mov
stos
sub
sbb
in
test
pop
pop
dec
jmp
xchg
gs
adc
sbb
xchg
add
sub
in
sbbb
ret
enter
mov
lods
dec
mov
push
loopne
jmp
in
cmp
aaa
sbb
call
les
adc
jge
cmp
sbb
adc
inc
mov
imul
fisubl
test
dec
insl
pop
lahf
shl
flds
rorb
add
xorb
dec
or
shrb
ficoml
xchg
mov
je
mov
leave
fstpt
cwtl
psubq
fsubrs
push
nop
cmc
xor
jnp
es
pop
sub
push
sub
fcomps
and
insw
hlt
bound
dec
cmpb
ss
dec
xchg
mov
sbb
or
je
cmpsb
jecxz
loop
adc
ret
add
incb
dec
shl
arpl
jbe
add
insb
out
aaa
xchg
call
jmp
jmp
mov
scas
ja
and
pop
pop
xor
stos
jmp
ljmp
push
clc
pop
or
pop
hlt
cmpsb
fs
mov
gs
in
sub
sbb
imul
paddw
mov
push
divl
cmpsb
or
mov
mov
mov
push
mov
loopne
pop
out
pop
test
aaa
cmp
dec
jns
pusha
pop
cmpsb
push
jp
pop
xchg
daa
pop
mov
jmp
xlat
inc
repz
in
popa
repnz
insl
dec
fcmovnu
and
add
filds
mov
lods
movsl
jno
mov
mulb
jns
scas
sub
in
out
inc
mov
repz
cli
add
mov
stc
enter
inc
mov
push
jno
cwtl
mov
dec
outsl
push
or
js
gs
jg
pop
mov
adc
scas
inc
stos
xor
pop
imul
mov
sbb
popa
lret
mov
or
rorl
lods
mov
gs
ljmp
je
push
push
ret
mov
push
cmp
cmpsb
int
insb
mov
arpl
add
jle
into
fwait
pop
out
dec
pop
movsl
lea
outsl
imul
cmp
sbb
movsb
inc
add
scas
cltd
pop
push
fimuls
shlb
int3
mov
popf
subl
movsb
mov
fwait
jecxz
lret
xor
cmp
test
js
xchg
int
clc
jb
pop
lret
filds
out
in
push
mov
cmp
js
aam
mov
xchg
mov
lret
fwait
add
ret
xchg
movsl
mov
or
loopne
push
sub
dec
mov
jnp
cmp
lea
das
or
push
out
pusha
fsin
pop
pop
xadd
mov
cmc
sti
pop
or
push
push
aaa
push
pop
adc
add
pop
sbb
push
xchg
inc
jmp
sub
push
mov
and
stos
jmp
jmp
xchg
or
fisubrl
add
jmp
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
jmp
daa
cmp
cmpsl
xchg
dec
sahf
mov
mov
mov
les
loope
cmp
add
dec
or
movsb
outsb
and
and
shlb
fnstenv
push
sbb
xchg
sub
in
out
xchg
or
imul
or
push
add
daa
jae
add
cltd
loope
sarb
movsb
xchg
dec
xor
xor
sahf
adc
ret
sub
lahf
cmp
sub
jmp
jae
mov
imul
mov
insb
mov
je
dec
cmp
and
insl
mov
int3
push
cs
mov
lock
das
lret
adc
ror
rcrb
ret
adcl
stos
mov
cmpsl
jmp
test
push
adc
fisttpll
fsubs
outsb
dec
js
aaa
enter
push
sub
test
into
popf
loope
rorb
imul
xchg
pop
sub
mul
sub
es
push
push
fldenv
add
push
sbb
fadds
and
ljmp
fstp
jmp
sub
push
inc
or
mov
lret
xchg
hlt
test
jg
sub
jns
scas
push
jmp
fstl
mov
add
outsb
sahf
inc
lods
xchg
mov
push
repnz
mov
cmp
jge
fbld
mov
call
jge
outsb
pshufw
mov
dec
adc
mov
dec
push
in
aad
adc
not
mov
std
sbb
stos
inc
cmp
ss
pop
aad
push
inc
xchg
enter
jne
pop
sbb
xchg
dec
fstp
sti
mov
jmp
mov
imul
fcoml
sbb
repnz
pop
leave
stos
popf
adc
xor
xor
adc
mov
or
mov
test
inc
push
inc
push
add
add
or
mov
jb
imul
lock
push
add
and
mov
in
clc
bound
pop
add
sarl
enter
dec
call
jg
mov
rclb
in
stos
fldcw
sbb
jg
fiaddl
sub
movswl
pop
rorb
nop
xchg
xor
xor
cmc
xchg
mov
and
adc
mov
push
xchg
in
ss
cltd
cmp
jle
and
stos
dec
sbb
inc
dec
adcb
push
scas
adc
push
cmp
cs
les
adc
out
jmp
dec
jge
adc
push
fsubrs
mov
rorl
xor
push
xlat
push
orb
cwtl
outsl
jmp
or
adc
sub
cmp
aas
jl
mov
sahf
dec
mov
stos
scas
sbbb
push
mov
call
push
or
stos
pop
aam
mov
mov
scas
xor
xor
and
addr16
pop
push
cmp
pushf
inc
pop
stos
lds
imul
jae
sbb
fwait
shl
int3
jmp
jl
mov
cltd
dec
rcll
lret
les
and
mov
sub
mov
adc
daa
fwait
out
fildll
mov
pop
shrl
out
xlat
les
seto
mov
in
pop
dec
in
push
jle
lret
jmp
add
mov
jne
xchg
cmp
mov
sub
movsl
mov
mov
jmp
jo
mov
mov
rcl
mov
stos
sarb
in
add
rcrb
ds
test
loope
add
pop
in
stos
outsl
mov
stc
mov
sti
js
test
or
jae
sbb
add
in
outsl
jp
sbb
inc
and
es
push
popf
mov
stos
jo
inc
aad
jns
xor
sub
mov
mov
mov
sbb
lods
adc
fstl
lahf
jle
xor
jb
push
pusha
call
out
xor
and
hlt
pop
cmp
push
xor
int3
xchg
adc
mov
cmp
call
gs
push
rol
fs
aad
ss
dec
pusha
mov
push
mov
subb
cmp
leave
cli
out
push
test
fs
insl
sti
test
cwtl
ficoms
xlat
test
jne
loop
sub
pop
mov
jnp
mov
push
inc
outsl
and
imul
xchg
outsb
jb
push
iret
mov
insl
imul
adc
int
jp
repz
dec
xchg
ja
stc
mov
lea
push
pop
imul
cs
lock
jnp
loop
out
mov
dec
jb
outsl
push
scas
xchg
mov
mov
mov
mov
int3
dec
test
dec
cmp
mov
or
lahf
mov
mov
addr16
push
inc
jg
add
jg
mov
and
insb
shlb
enter
into
jge
pushf
pop
and
and
cwtl
xchg
add
mov
adc
jp
out
arpl
mov
lahf
ss
pop
or
popf
test
sbb
pop
rcr
cmc
rol
in
int3
insb
pusha
in
push
hlt
cmpsb
jbe
fiaddl
lret
mov
jecxz
inc
cli
daa
ret
aad
or
cmp
loope
mov
push
imul
mov
sbb
hlt
pop
into
jge
mov
sbb
pop
push
xor
jnp
fldl
stc
xor
int
icebp
jnp
mov
xchg
dec
or
jb
or
pop
mov
loop
mov
push
or
mull
call
ja
fcomi
jl
mov
sbb
pop
mov
mov
pop
fs
adc
rcr
les
xor
mov
ljmp
inc
mov
fcoml
cli
sarl
jae
push
sti
fwait
or
and
je
cld
cmp
mov
xor
pushl
mov
nop
xor
add
sti
push
xor
ror
fdivrs
mov
popa
push
mov
xor
mov
or
and
sbb
mov
les
imul
leave
jmp
in
ljmp
dec
add
xchg
mov
cwtl
lcall
push
add
test
movsb
addl
cli
xchg
sti
xor
fstl
and
popa
mov
pop
daa
scas
sbb
stos
push
push
inc
imul
addr16
lods
in
push
cs
mov
test
fnsave
and
insl
stc
xor
xor
aaa
dec
inc
xor
push
sbb
push
gs
cli
fwait
ja
lahf
adc
mov
lods
call
sbb
inc
add
int3
stc
test
sbb
push
lret
psadbw
sahf
lcall
scas
cmp
cmp
gs
aam
sub
add
test
cli
pusha
push
shr
ja
dec
sbb
test
add
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
xchg
or
mov
pop
push
push
sahf
xchg
mov
mov
lock
dec
mov
xor
int3
loop
sbb
inc
fwait
add
jle
push
mov
and
xor
mov
sub
stos
jmp
xchg
and
sub
push
jecxz
in
cmp
stc
mov
sbb
scas
incl
cmpl
pop
test
push
movsb
mov
mov
xor
add
mov
jle
rep
sbb
pop
leave
test
adc
je
mov
out
int
imul
dec
cmpsl
rol
je
dec
push
adc
in
sub
faddp
out
mov
call
sarb
lahf
jecxz
mov
xor
dec
jle
cmp
xchg
repnz
scas
push
sub
std
jecxz
loope
hlt
mov
movsl
mov
daa
push
cmc
push
leave
cmp
lock
mov
enter
dec
aas
loop
mov
and
add
pop
sbb
and
test
xchg
mov
inc
in
jmp
in
lds
xor
jns
push
mov
mov
xchg
mov
mov
inc
xchg
stc
mov
loope
out
movsb
int3
jnp
and
jg
stos
and
hlt
jle
xor
push
jnp
js
dec
dec
xor
test
dec
xchg
out
mov
fdivrs
je
xchg
jmp
out
mov
cmc
xor
arpl
test
dec
xchg
aas
test
xor
ljmp
ja
into
dec
cmpsb
or
shl
pusha
mov
loope
out
push
jg
cmp
les
cmp
gs
sub
pop
frstor
into
popl
add
ret
mov
test
push
mov
mov
mov
and
out
add
add
jl
std
test
push
out
cltd
jmp
add
xor
xchg
in
jo
adc
insb
inc
loopne
cltd
insb
mov
ret
inc
adc
lcall
mov
rcr
test
pop
cld
push
popf
movsb
enter
decb
sub
ds
fdivrs
adc
call
mov
mov
nop
cmpsl
or
xor
scas
mov
pusha
push
push
test
data16
adc
stos
push
cmp
inc
mov
jg
sbb
dec
adc
mov
push
xchg
rcl
nop
inc
mov
insl
dec
xchg
nop
sub
ret
xchg
add
push
test
insl
sbb
das
mov
lret
scas
rorl
mov
fdivl
jmp
sub
sbb
sti
jle
js
mov
mull
add
jle
add
mov
xor
nop
cli
pop
mov
outsb
mov
movsb
fdivs
loopne
mov
mov
or
adc
dec
icebp
insl
pop
or
sbb
inc
mov
sub
out
jge
insl
pop
jb
scas
mov
or
movsl
aad
push
bound
in
out
stc
sbb
mov
shlb
mov
jne
fildl
clc
add
add
lods
lock
cmp
scas
cmp
sbb
jg
cmpsl
out
or
mov
inc
and
movsl
lret
inc
test
mov
pop
pop
add
outsb
sub
movsb
mov
aaa
dec
xchg
inc
iret
loope
push
rorl
cli
int3
mov
inc
test
fsubrl
dec
loop
mov
cli
test
aam
sbb
sbbw
cld
mov
and
pushf
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
push
sub
mov
movsb
scas
cmp
pop
mov
mov
fisubl
jae
add
cmp
jne
push
aad
and
mov
sbb
push
dec
xor
dec
bound
aad
addl
cmp
pushaw
sub
mov
daa
aas
or
mov
fdivl
adc
scas
in
sahf
mov
sub
xchg
scas
in
inc
mov
lret
test
out
test
stc
test
ret
push
in
pop
lcall
and
data16
mov
pop
mov
mov
fnstsw
je
cltd
fcomps
movsb
push
in
jg
lret
nop
bound
std
fistps
out
cmp
into
movsb
sahf
jge
adc
das
data16
mov
femms
cmp
jns
in
adc
adc
lods
hlt
adc
out
and
dec
xchg
out
repnz
aaa
int3
std
or
bound
jg
jecxz
lahf
pop
adc
out
push
pushf
aaa
adc
mov
cwtl
out
out
cmpsl
adc
test
or
pop
jg
js
jbe
add
repz
adc
push
cltd
stos
pop
ds
inc
add
or
xor
daa
pop
imul
cwtl
stos
and
scas
jecxz
in
dec
out
int3
push
push
lods
imul
push
dec
jmp
sub
fisubrs
jl
outsl
bound
insb
cmp
vzeroupper
xor
add
inc
loope
xor
sarl
jl
icebp
push
lock
repnz
imul
add
cld
jo
idivb
nop
xchg
cli
mov
js
sahf
push
and
daa
les
stos
dec
negb
imul
mov
add
popa
sub
lret
jecxz
sbb
movsb
push
push
or
data16
pop
xlat
mov
sbb
xor
xchg
imul
mov
lahf
rcrb
pop
jae
adc
imul
sbb
jae
aas
stc
xchg
xor
sbb
pop
and
inc
push
dec
jmp
std
xlat
xor
add
pop
or
sbb
xor
insl
loopne
inc
jnp
test
out
lock
mov
or
enter
stos
sbb
rep
or
jge
outsb
mov
jmp
arpl
addr16
mov
sbb
mov
out
or
in
lock
mov
lret
xor
jbe
ret
mov
xchg
ror
xorb
icebp
sahf
popf
dec
adc
call
lods
les
push
hlt
pop
xor
and
jmp
dec
adc
mov
leave
fisttpll
xor
rorb
mov
leave
sbb
nop
mov
jmp
push
xchg
adc
test
xor
add
jns
mov
dec
or
jl
shl
outsl
rolb
les
fwait
pop
adc
jmp
jge
sub
mov
test
xchg
or
popa
mov
mov
fildll
loop
xor
rcll
pusha
nop
or
stc
cmp
mov
shl
mov
add
jno
jne
add
and
fldcw
nop
movsl
stc
ficoml
and
mov
mov
test
sub
mov
mov
sub
inc
xchg
into
jle
bound
xchg
movsl
cmpsb
movsl
je
push
mov
xorl
hlt
call
adc
cmpsb
aaa
bound
pop
push
in
and
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
sbb
shrl
daa
xchg
pushf
enter
rol
dec
les
fidivrl
jae
jle
or
andl
xor
add
xor
ja
dec
inc
jp
and
xchg
arpl
pop
int3
inc
ret
mov
fdivl
loope
les
ljmp
or
in
sahf
jp
xchg
in
jo
lods
sub
js
cltd
fsubs
or
and
dec
sub
xchg
mov
mov
mov
cli
and
icebp
pop
cld
xchg
jno
jle
push
cltd
xchg
mov
les
fnstsw
jp
xor
jae
xrelease
pop
dec
das
or
scas
push
popa
mov
aaa
xchg
roll
inc
hlt
and
pusha
out
push
mov
idivl
jle
push
cmc
mov
adcl
jns
outsl
into
add
mov
xchg
iret
add
sbb
adc
cmp
pop
adc
sub
fadds
mov
sub
outsl
push
or
insb
aas
pop
data16
push
or
daa
ret
mov
test
mov
rcrl
mov
fidivl
outsl
fildl
mov
and
add
jne
aam
sub
cs
and
xchg
add
popf
test
mov
setno
mov
inc
mov
adc
cmp
fdivl
and
lds
lods
inc
inc
mov
stc
ret
or
cld
adc
lds
and
insl
shlb
jno
xor
mov
xor
jbe
out
ret
sbb
stos
idivl
cmp
sub
lcall
int
mov
stos
cld
nop
in
xor
cmp
mov
adc
push
loopne
sbb
int
pop
pop
mov
mov
push
cmp
ljmp
xchg
idiv
inc
lcall
push
test
or
shl
sbb
test
jo
aam
mov
and
test
aam
push
sub
mov
sti
push
int3
fisubs
cmp
xlat
xchg
xchg
cmp
popa
jecxz
mov
push
jno
mov
pop
rcll
mov
add
inc
pushf
mov
or
adc
out
xor
je
cmpsl
sti
pop
ret
mov
dec
jecxz
and
push
lret
pushf
or
aam
pushf
out
imul
add
jecxz
push
inc
cmp
inc
jne
stc
ds
jp
ret
fnop
and
and
pop
and
gs
out
jns
mov
sub
fldcw
stos
data16
outsl
inc
push
fsubrs
cld
loope
testb
mov
loop
mov
or
outsl
and
xchg
mov
xchg
push
xchg
int
daa
jl
repnz
lcall
xor
mov
adc
shrb
push
sbb
adc
jo
fcmovnbe
jp
jbe
xchg
jg
call
mov
lcall
xor
jno
movsl
repnz
jae
sub
add
xchg
add
sbb
add
mul
insb
xchg
cmp
lret
adc
mov
or
into
test
xchg
sbb
lret
mov
stos
sub
jnp
je
pop
inc
sahf
cltd
pop
cld
push
in
adc
xor
sahf
std
stos
mov
decl
decl
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
jmp
jg
sbb
outsb
mov
hlt
iret
cmp
sarb
mov
ret
rcrb
je
sti
pop
mov
mov
add
xor
mov
mov
fs
fwait
jnp
xor
shr
or
bound
pop
sub
insb
fldt
sub
jns
adc
sti
cmp
sub
cltd
add
mov
cld
dec
scas
insb
loopne
xor
cwtl
mov
je
push
jle
mov
push
pop
lahf
movsb
test
into
pop
faddl
sbb
out
inc
mov
loopne
add
adc
out
add
adc
cld
cltd
insl
inc
fwait
call
jle
out
sbb
mov
pop
cmp
mov
fs
sti
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
notl
movl
movl
jmp
not
cmpl
jl
push
call
addl
andl
sub
or
sub
push
dec
push
mov
or
movl
jne
mov
mov
xor
inc
div
sbb
mov
mov
adcl
div
movl
mov
jmp
mov
mov
xor
mov
mov
movl
shr
movl
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
mov
sbb
add
mov
mov
movl
pop
pop
pop
leave
ret
cmp
movl
jae
cmp
movl
jae
shld
shl
ret
movzwl
add
mov
xor
movl
and
shl
ret
xor
xor
ret
add
add
add
add
xchg
push
into
jns
push
xor
jne
and
mov
popf
bnd
add
add
gs
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
outsl
add
add
jne
je
xor
xor
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
fsubl
add
gs
arpl
push
outsl
inc
jne
jae
jb
fs
add
add
add
and
inc
add
sub
loopne
inc
add
inc
push
lea
movsl
popf
movsl
jno
xchg
movsl
or
andl
movsl
mov
lea
movsl
add
xchg
movsl
or
andl
movsl
mov
in
xchg
movsl
adc
movsl
popf
movsl
sbb
movsl
fwait
movsl
xchg
icebp
sub
adc
movsl
fwait
movsl
add
xchg
movsl
sbb
andl
or
adc
movsl
fwait
movsl
add
xchg
movsl
xor
movsl
andl
insl
imull
dec
adc
movsl
fwait
movsl
jae
popf
movsl
sbb
movsl
fwait
movsl
andl
dec
testl
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
pop
movsl
xchg
movsl
push
movsl
mov
roll
dec
lock
imulb
xchg
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
cmp
movsl
fwait
movsl
xchg
lock
testb
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
cmp
movsl
fwait
movsl
andl
in
imul
push
iret
adc
xchg
movsl
cmp
movsl
popf
movsl
jnp
xchg
movsl
fwait
movsl
xchg
movsl
shl
shr
lock
iret
push
das
adc
push
unpcklps
xchg
movsl
adc
lahf
movsl
cmp
mov
shlb
shrb
push
outsl
adc
xchg
movsl
add
nop
and
inc
add
inc
add
daa
inc
add
jle
add
inc
add
sub
test
inc
add
sub
in
daa
inc
add
push
movsl
scas
or
inc
add
inc
add
add
inc
add
daa
inc
add
inc
add
daa
inc
add
sub
scas
fwait
push
movsl
cmp
mov
adc
inc
add
loopne
jbe
pop
cmpsl
add
inc
add
lret
arpl
addl
ja
pop
xor
cmpsb
mov
xchg
test
stos
fildl
movsl
stos
filds
movsl
cmpsb
fildl
movsl
mov
fildl
movsl
mov
fildl
movsl
mov
push
movsl
mov
push
movsl
mov
push
movsl
out
fildl
movsl
decl
adc
test
inc
add
push
movsl
cmp
xlat
movsl
dec
add
andb
addl
add
hlt
stc
sarb
inc
pop
jg
add
add
jle
add
inc
add
push
movsl
jg
inc
movsl
push
movsl
inc
movsl
std
movsl
jmp
push
movsl
push
movsl
dec
movsl
std
movsl
jmp
jge
push
movsl
jg
std
movsl
jmp
jge
dec
movsl
inc
movsl
jne
pop
movsl
jnp
dec
movsl
fwait
movsl
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shll
rclb
iret
xchg
dec
xor
sbb
imul
je
mov
imul
enter
popf
mov
dec
xchg
lock
inc
or
or
js
popa
pop
jecxz
movb
cs
inc
stos
inc
ds
enter
movsb
sbb
fdivrs
inc
add
ja
mov
inc
add
daa
inc
add
fbld
add
add
add
add
push
cmp
push
imul
jb
gs
jecxz
shrl
cmp
jno
outsl
jae
popa
je
bound
je
outsl
test
in
jne
bound
popa
jbe
outsw
jns
imul
pusha
and
gs
insl
ja
gs
jns
jb
add
add
and
imul
imul
fldcw
fimuls
cmp
fldcw
lods
repnz
inc
outsl
je
dec
popa
jp
push
imul
push
lds
add
mov
jle
data16
jne
add
add
fstps
popa
jae
popa
js
outsl
add
mov
popa
insb
je
jne
imul
dec
loope
out
test
popa
jb
jne
outsl
bound
add
jne
outsl
js
add
or
add
gs
jns
jo
je
push
jns
outsl
popa
jns
cmpsl
scas
or
adc
popa
jns
jne
jae
imul
jb
imul
out
push
popa
arpl
imul
xchg
push
ja
cltd
adc
pop
fldenv
adc
arpl
test
cmpsb
xchg
fsubr
arpl
fsubs
cltd
jo
xchg
addb
push
ja
adcb
cmp
adcb
xorb
xchg
xor
cld
xchg
outsl
mov
jo
out
lea
add
push
ja
adcb
hlt
push
or
xchg
mov
xlat
out
cld
xchg
mov
xorb
xchg
cmp
jo
out
lea
add
push
ja
cltd
adc
pop
fsubp
xor
outsl
adc
arpl
test
out
fwait
mov
fwait
cld
or
jo
xchg
addb
push
ja
adcb
cmp
adcb
xorb
xchg
out
mov
cld
xchg
das
stos
jo
out
lea
xchg
cmp
sbb
adc
dec
shrl
std
dec
xchg
test
or
xchg
test
or
orb
insl
or
or
or
adc
in
lea
pop
mov
out
mov
movb
xchg
lea
add
out
xorb
out
xor
xchg
xchg
dec
repnz
xor
xchg
mov
or
mov
out
mov
mov
cli
lea
lea
push
and
inc
out
or
imul
push
xor
push
add
lock
cmp
mov
in
mov
lea
lea
in
les
add
xchg
or
loop
scas
in
sti
in
ret
cmp
mov
subb
subb
scas
fsubr
test
fiaddl
in
test
fimull
out
mov
leave
bound
or
xlat
adc
scas
lahf
dec
push
xor
outsl
lea
bound
or
xlat
dec
bound
or
xlat
xchg
popf
mov
in
decl
adc
inc
xlat
andl
or
mov
lea
cmc
mov
bound
lea
stc
xchg
cmp
aad
adc
xor
push
lock
push
lock
popf
stos
lahf
icebp
mov
out
in
pushf
stos
fwait
mov
in
or
cmp
ja
and
mov
in
inc
jo
out
test
les
scas
in
js
xchg
cmp
ja
and
mov
in
loop
lahf
loop
test
cmp
out
or
in
out
loop
lahf
cli
lea
lea
push
andb
cmp
push
in
cmp
stc
in
out
out
or
bound
jbe
xor
in
lret
out
in
loop
lahf
and
mov
outsl
inc
push
loop
test
in
lea
cmp
push
in
push
lock
sub
out
in
addb
mov
lock
lret
mov
or
lea
adcb
sub
xorl
ja
les
mov
xchg
lea
mov
pop
cmpsl
test
outsl
dec
ja
aas
cmpsl
test
outsl
lea
ja
mov
sub
out
test
jl
scas
xchg
lea
in
xor
xorl
lea
addl
and
cmpb
pop
ja
fcmovnu
orb
addl
test
in
jg
dec
push
out
or
xor
cmp
dec
dec
xchg
lea
lds
adc
inc
xlat
sbb
inc
and
inc
out
push
jo
test
test
les
lea
in
je
mov
cltd
adc
arpl
and
test
ja
push
xlat
mov
or
push
mov
in
mov
outsl
or
push
ja
add
add
ja
inc
push
lds
mov
cmp
and
mov
xor
xor
push
dec
jne
pop
mov
out
adc
or
mov
decl
and
pop
xor
mov
lea
mov
das
mov
push
lds
das
aas
xor
aas
xchg
in
push
push
add
xor
sub
sbbb
repnz
dec
dec
cltd
subb
jns
stos
xchg
cld
jns
mov
dec
cld
jns
cltd
cmpb
test
xchg
addb
lea
mulb
cmp
cmc
and
cmp
out
xorb
xchg
mov
lahf
push
mov
clc
sub
outsl
cmp
mov
or
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
jl
mulb
cmp
mulb
es
and
cmp
cmp
push
ja
loop
popf
push
ja
push
ja
jl
bound
lea
jns
lea
xchg
mov
push
mov
xchg
clc
sub
sti
push
ja
xorb
xchg
mov
push
mov
xchg
clc
sub
sti
push
ja
jl
jp
or
lea
pop
lea
out
lea
dec
dec
add
or
or
scas
xlat
pop
dec
lock
add
lock
jb
ja
mov
ja
xor
push
je
xchg
or
mov
ja
xorb
lock
mov
lea
mov
or
push
mov
sub
mov
ja
mov
sbb
ja
subb
ja
subb
ja
xorb
lock
cmp
add
xchg
push
cmp
dec
xlat
out
add
xor
pop
cmp
lea
xchg
mov
push
jle
mov
arpl
or
in
lea
int
cmp
ja
or
cmp
xchg
gs
adcb
lea
dec
dec
stos
adcb
lea
adc
dec
bound
lea
push
push
dec
push
dec
dec
dec
outsb
mov
pop
dec
dec
dec
jg
push
fwait
jl
gs
dec
dec
stos
lock
aas
cld
dec
insl
dec
dec
dec
xchg
push
inc
mov
jl
sub
mov
xor
scas
push
fwait
jl
cmp
lock
imul
inc
dec
dec
dec
xchg
push
inc
mov
out
or
cmp
in
push
push
ja
xorb
int
cmp
xchg
mov
lldt
ja
aas
xchg
dec
dec
dec
outsb
mov
push
dec
dec
dec
jg
aas
xchg
jl
aad
dec
dec
popf
or
jl
fisttpll
dec
cmpsl
xchg
lock
jl
in
dec
dec
xchg
add
xchg
dec
dec
dec
outsb
mov
movsl
dec
dec
dec
jg
aas
xchg
jl
lods
dec
dec
dec
popf
or
jl
mov
dec
dec
cmpsl
xchg
lock
jl
mov
add
xchg
lea
dec
jno
ja
xor
push
je
push
mov
sub
xor
arpl
lea
lock
push
je
push
mov
sub
xor
inc
std
xorb
mov
into
xchg
cmp
lea
out
andb
lea
ja
or
cmp
lea
xor
adcb
lea
out
sbbb
lea
push
sbb
fwait
cmp
ja
or
cmp
fwait
out
push
ja
xorb
pop
xor
lea
push
sbb
dec
dec
dec
xchg
lea
or
cmp
fwait
out
xorb
pop
xor
lea
push
sbb
dec
dec
xchg
cmp
ja
or
cmp
fwait
out
in
mov
lea
xorb
pop
push
jb
dec
add
loopne
or
ss
push
arpl
mov
push
or
push
dec
push
rolb
xor
lea
push
xchg
int
and
lea
or
cmp
fwait
out
push
ja
out
in
mov
lea
pop
in
out
sub
stc
xor
adc
loop
stos
push
je
sub
sub
mov
sbb
or
cmp
mov
out
push
je
sub
sub
mov
sbb
dec
dec
xchg
cmp
scas
xor
adcb
mov
or
clc
sub
arpl
xlat
mov
cmp
stc
xor
push
je
xchg
sub
in
ja
push
ja
xorb
push
sbb
lock
push
je
sub
sub
mov
ja
push
ja
xorb
lock
push
je
sub
or
mov
lock
xorb
mov
dec
orl
xor
arpl
xlat
push
dec
xlat
out
add
or
push
ja
les
xorb
lock
adcb
mov
or
clc
sub
outsb
out
xorb
lock
push
push
mov
sub
xor
arpl
lea
lock
push
push
mov
sub
xor
arpl
lea
lock
push
push
mov
or
mov
adc
xchg
stc
push
adc
mov
or
clc
sub
in
mov
lock
in
xorb
ja
xorb
ja
insb
mulb
cmp
inc
jl
xor
outsl
cmp
inc
push
je
push
mov
or
mov
ja
xorb
lock
push
je
push
mov
or
mov
ja
jl
ds
and
cmp
fisubs
cmp
inc
push
je
push
mov
sub
xor
arpl
or
pop
in
lea
lea
adcb
mov
sub
xorb
sti
push
jb
add
ja
xor
push
je
push
mov
sub
xor
arpl
fsts
xorb
lock
push
je
push
mov
or
mov
ja
xorb
lock
je
push
mov
or
mov
lock
and
ja
xor
push
je
push
mov
sub
xor
arpl
or
or
lea
scas
xorb
ja
push
out
push
ja
pop
cmc
and
cmp
pop
jl
push
hlt
and
cmp
repz
cmp
testl
push
mov
or
mov
ja
subb
cmp
dec
or
dec
ljmp
dec
xchg
dec
dec
dec
or
cmp
ja
xor
push
je
push
mov
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
sub
xor
or
mov
lock
adcb
mov
or
clc
sub
in
mov
lock
loopne
out
orb
dec
dec
sbbb
dec
dec
dec
push
je
jle
xchg
clc
sub
sti
in
mov
loopne
add
std
adc
add
push
ja
xor
adcb
mov
sub
adcb
xchg
push
out
push
subb
testl
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
push
mov
sub
mov
lock
or
mov
lock
adcb
mov
or
clc
sub
in
mov
lock
loopne
out
orb
dec
dec
sbbb
dec
dec
dec
push
je
jle
xchg
clc
sub
sti
in
mov
loopne
add
std
adc
add
push
ja
xor
adcb
mov
sub
adcb
xchg
push
out
push
subb
ss
push
push
push
je
mov
pushl
xchg
pop
push
adc
mov
or
clc
sub
decb
and
ja
xorb
lock
arpl
or
or
pop
xor
push
push
mov
sub
mov
or
mov
lock
or
mov
lock
adc
xor
push
push
mov
sub
mov
ja
xorb
lock
mov
xchg
mov
lock
mov
clc
sub
in
lock
std
in
lock
push
lock
les
lock
push
mov
or
mov
ja
push
ja
xorb
lock
xchg
push
mov
sub
mov
lock
xorb
xchg
adcb
jle
clc
sub
adcb
mov
dec
xor
mov
mov
xorb
lock
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
adc
mov
or
clc
sub
xchg
dec
or
xchg
mov
push
jle
mov
push
ja
arpl
or
cmp
lea
lock
cmpsl
test
or
cld
mov
sub
mov
lock
and
adc
jno
lock
xor
adcb
mov
sub
adcb
test
in
test
mov
mov
jl
lock
or
mov
pushf
arpl
xlat
sub
ja
xor
adcb
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
ja
xorb
ja
xorb
jo
xchg
aad
xorb
adc
sub
push
cld
push
xchg
mov
sub
adcb
ja
in
mov
in
xchg
arpl
in
xorb
jo
xchg
aad
xorb
adc
sub
push
cld
push
xchg
mov
sub
adcb
ja
in
mov
in
xchg
arpl
in
xorb
lock
push
ja
xorb
adc
mov
sub
xorb
lock
inc
insl
pop
insl
aas
jl
pop
insl
inc
insl
push
push
ja
fsubl
outsl
cmp
jg
xchg
scas
cmp
adc
test
cld
mov
sub
ja
push
lock
cli
out
jno
add
or
jo
mov
fiaddl
stc
xorb
xchg
stc
push
cld
push
adc
or
std
xorb
cld
mov
sub
ja
push
xchg
in
std
xorb
test
mov
push
sub
fsubl
outsl
cmp
add
xor
xorb
adc
mov
or
test
std
xorb
xchg
mov
push
jle
xchg
clc
sub
sti
arpl
lea
insl
out
push
out
jl
es
cmp
hlt
and
cmp
mulb
test
and
cmp
nop
shrb
push
ja
xorb
lock
mov
or
jle
clc
sub
xchg
xor
adcb
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
or
ja
xor
adcb
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
adc
mov
or
clc
sub
xchg
dec
or
ja
xorb
adc
mov
or
test
std
xorb
std
or
cmp
lock
adcb
mov
or
clc
sub
arpl
test
bswap
das
lea
lock
or
add
lock
xor
mov
or
add
xor
xor
mov
or
add
in
cmp
in
cmp
add
and
dec
xlat
add
sbb
xlat
test
sahf
and
jno
or
push
ja
xorb
lock
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
dec
or
push
push
jl
jl
ja
xor
or
cmp
xlat
push
push
adc
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
ja
xorb
ja
les
push
adc
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
test
sbb
ja
xorb
out
push
ja
jl
xor
outsl
cmp
push
push
cld
push
adc
or
mov
ja
xorb
lock
push
cld
push
adc
or
mov
ja
jl
jp
and
cmp
fisubs
cmp
push
push
cld
push
adc
sub
mov
lock
arpl
or
pop
in
lea
lea
jp
xchg
inc
push
je
push
mov
or
mov
ja
inc
sti
push
jb
add
ja
xor
push
cld
push
adc
sub
mov
lock
arpl
fsts
xorb
lock
push
adc
or
mov
ja
xorb
lock
cld
push
adc
or
mov
lock
or
mov
ja
xorb
lock
push
cld
push
adc
sub
mov
lock
arpl
or
or
lea
scas
xorb
ja
push
out
push
ja
pop
cmc
and
cmp
push
ja
hlt
and
cmp
repz
cmp
testl
adc
or
mov
ja
subb
cmp
dec
xor
dec
ljmp
dec
jge
dec
dec
or
cmp
ja
xor
push
cld
push
adc
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
or
test
pushl
and
xchg
push
push
push
xchg
mov
sub
in
mov
lock
or
and
orb
dec
dec
sbbb
dec
dec
dec
push
cld
push
xchg
mov
sub
in
mov
loopne
lods
push
std
adc
lods
subb
lods
xor
adcb
mov
or
mov
xchg
std
or
incb
push
subb
testl
sub
xor
or
mov
lock
out
out
adc
subb
testl
adc
xor
or
mov
lock
xchg
push
push
push
xchg
mov
sub
in
mov
lock
or
and
orb
dec
dec
sbbb
dec
dec
dec
push
cld
push
xchg
mov
sub
in
mov
loopne
lods
push
std
adc
lods
subb
lods
xor
adcb
mov
or
mov
xchg
std
or
incb
push
subb
es
push
adc
mov
or
test
pushl
xchg
push
push
push
xchg
mov
sub
or
mov
ja
push
ja
xorb
lock
arpl
or
or
push
lock
adc
mov
sub
mov
lock
or
mov
lock
push
mov
sub
mov
lock
adc
push
ja
xorb
lock
mov
test
pushl
xchg
adcb
mov
pop
or
in
lock
std
in
lock
push
lock
les
lock
adc
or
mov
ja
push
ja
xorb
lock
test
push
adc
xor
inc
std
xorb
xchg
adcb
xchg
mov
or
test
sti
adcb
mov
dec
xor
out
dec
xlat
and
ja
dec
xlat
out
or
jp
lea
out
or
cmp
xlat
mov
jbe
test
ja
xorb
lock
push
push
mov
sub
xor
arpl
out
xor
adcb
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
sti
out
lea
and
mov
in
pop
lea
cmp
cmp
jne
dec
adc
or
mov
cli
inc
lea
add
push
or
mov
lea
lea
cmp
mov
or
push
lock
or
in
decb
psadbw
adc
cli
dec
dec
dec
jmp
dec
outsb
aad
orb
mov
lea
jle
testl
pop
scas
and
push
aad
add
adc
outsb
aad
xorb
mov
lea
push
in
std
or
or
in
push
aad
add
adc
out
subb
aad
andb
pop
fbld
dec
ja
in
ja
out
in
push
pop
out
in
or
or
xor
dec
ja
in
mov
in
push
push
lock
enter
lock
pop
or
dec
ja
in
mov
in
pushf
push
lock
xor
ljmp
push
push
les
push
jo
xchg
addb
lea
jno
push
movsb
cltd
fwait
pop
pop
or
ljmp
call
das
push
push
flds
out
cmpb
or
fstpl
xchg
out
push
xlat
mov
fucomi
push
out
push
cmpsl
mov
mov
mov
popf
adc
push
scas
les
movb
mov
aas
in
out
push
out
arpl
and
arpl
shr
sbbb
inc
out
push
imul
mov
cmpsl
mov
mov
pop
into
push
push
test
lea
adcl
mov
cmc
and
cmp
mov
cmp
mov
or
push
lods
mov
sub
adc
xchg
mov
mov
mov
mov
mov
fsincos
lods
pop
xor
andb
mov
sub
andb
lea
sbb
lea
cmpsl
mov
push
lods
mov
or
mov
call
arpl
or
jecxz
lea
lea
cmpsl
mov
push
lods
mov
or
mov
call
in
lea
lock
pop
or
mov
call
xor
aad
xorb
xchg
mov
push
cld
mov
sub
adcb
out
cmpsb
xlat
rolb
push
pushf
push
cld
mov
sub
adcb
jne
jno
push
or
lea
mov
mov
push
add
test
mov
or
addb
in
mov
jge
in
lock
push
lock
mov
push
pushf
mov
or
clc
sub
incb
jp
out
push
lock
xor
push
jle
sub
or
mov
lock
arpl
aad
in
lock
push
lock
lock
push
pushf
mov
or
clc
sub
in
jge
jl
xor
outsl
cmp
lock
push
lock
in
xor
xorb
int
cmp
xorb
xlat
xchg
lea
and
add
jne,pn
ja
cmpsb
push
outsl
cmp
mov
push
pushf
mov
or
clc
sub
push
ja
arpl
xlat
pop
xorb
lock
push
sub
or
mov
lock
push
mov
sub
addb
cmp
pushl
dec
or
lock
push
sub
sub
mov
ja
xlat
mov
ja
xor
push
sub
mov
or
mov
mov
dec
dec
xorb
lock
push
sub
sub
mov
ja
xlat
mov
ja
xor
push
cld
push
sub
sub
mov
ja
mov
jl
xchg
ja
flds
mov
push
jl
les
test
incl
lea
mov
push
sub
sub
mov
ja
xorb
lock
push
sub
sub
mov
ja
xor
xorb
push
push
jl
test
mov
or
std
xorb
std
aad
sub
push
ja
xorb
out
push
push
ja
xorb
lock
push
sub
or
mov
lock
aad
xorb
lock
push
cld
mov
sub
xor
mov
sub
aad
xor
xorb
int
cmp
xchg
dec
xlat
stc
dec
or
les
xorb
ja
xor
adcb
lea
dec
xlat
stc
dec
xchg
out
push
ja
xorb
lock
push
sub
or
mov
lock
ja
xor
xlat
push
push
cld
push
sub
sub
mov
ja
les
mov
sub
xor
or
mov
lock
and
mov
push
sub
sub
mov
addb
push
sub
mov
sub
xor
pop
out
and
dec
adc
xor
xchg
add
add
lea
lock
and
cmp
xorb
lock
push
sub
sub
mov
ja
xlat
out
xorb
lock
outsl
xorb
lock
push
cld
stos
mov
sub
mov
jo
out
lea
xor
and
cmp
cmc
and
cmp
and
mov
pusha
and
cmp
test
sub
adcb
loopne
lea
xchg
out
in
or
push
xchg
enter
icebp
and
cmp
mov
mov
sub
mov
or
sti
adcb
mov
or
pop
or
pushf
and
pop
xchg
jl
or
mov
lea
ja
in
ljmp
out
and
inc
fwait
push
and
xchg
andb
mov
or
mov
incl
push
xchg
andl
jns
xchg
mov
push
or
mov
xchg
xor
repz
cmp
mov
push
or
mov
add
xchg
mov
or
sub
add
mov
in
jmp
ret
or
push
xlat
stc
or
clc
dec
or
adcb
xchg
xorl
pop
sbb
mulb
cmp
xchg
xchg
xchg
in
or
add
jle
xchg
out
push
xchg
xchg
and
in
or
pop
or
jle
xlat
xchg
xlat
rolb
push
mov
or
pop
or
jle
xlat
xchg
xlat
out
adcb
aam
jl
dec
lock
or
dec
dec
dec
cmp
adc
push
mov
or
pop
or
jle
xlat
xor
pushf
in
sub
xlat
mov
in
or
add
in
je
jle
popf
out
arpl
or
dec
dec
dec
mov
mov
lock
add
xorb
mov
lock
mov
sub
test
xchg
addb
lea
mulb
cmp
cmc
and
cmp
mov
and
cmp
mov
or
push
mov
sub
mov
ja
xorb
lock
mov
or
mov
sub
mov
ja
and
xorb
lock
push
ja
mov
outsl
cmp
enter
ja
mov
outsl
cmp
xor
push
ja
mov
outsl
cmp
stc
push
mov
ja
mov
out
cmp
jmp
ja
dec
push
movd
lea
push
das
lea
push
mov
lea
ja
xor
mov
or
hlt
lea
dec
cmp
lea
lock
mov
or
mov
sub
mov
ja
xorb
ja
xorb
lock
in
jge
adcb
push
cvtpi2ps
lea
and
cmp
cmpsl
jp
cld
push
add
sub
adcb
xorb
ja
or
cmp
stos
gs
jno
ja
xorb
into
cmp
xchg
and
xlat
imul
cmp
stos
adcb
or
clc
sub
mov
lock
dec
or
xchg
xchg
cmpb
std
xchg
in
je
xchg
lock
lea
xchg
dec
xlat
out
xchg
xchg
xchg
gs
xchg
or
add
sbb
ja
xor
push
cld
in
add
mov
or
mov
pop
fisubrl
xchg
and
mov
ja
xor
push
cld
in
add
mov
or
mov
ja
xorb
lock
add
mov
pushl
inc
std
pop
lock
and
sbb
lock
sbb
push
push
ja
jge
not
xor
xor
in
ja
les
sti
or
or
xorb
jge
push
lock
push
push
in
ret
mov
pop
lock
xor
in
jge
dec
xlat
addb
or
xorb
lock
mov
or
ret
push
mov
sub
cmp
addl
xorb
lock
add
mov
pushl
pop
jg
inc
std
pop
lock
movsl
dec
dec
dec
or
cmp
push
xor
or
cmp
stos
adcb
or
clc
sub
mov
lock
dec
or
pushf
or
lea
cmpb
lea
push
in
xor
test
std
or
jb
lea
lock
in
add
mov
sub
mov
ja
pop
imul
test
pop
push
lock
inc
sbb
outsl
cmp
call
ja
jl
push
and
cmp
adcb
mov
lea
dec
dec
dec
xchg
in
lret
outsl
in
pusha
mov
dec
xchg
dec
dec
dec
push
dec
mov
ja
push
ja
add
push
ja
push
ja
jl
or
dec
bnd
popf
dec
dec
dec
push
sbb
dec
lods
dec
dec
dec
cmpsb
jmp
mov
dec
dec
sbb
outsl
cmp
dec
dec
dec
icebp
jmp
push
dec
dec
dec
sbb
outsl
cmp
dec
dec
dec
call
add
dec
dec
dec
jl
in
dec
dec
fucompp
outsl
cmp
int
ja
nop
jmp
adc
cmc
jmp
push
jl
es
jmp
mulb
cmp
addb
dec
dec
dec
mov
or
add
inc
dec
dec
dec
insl
in
mov
in
or
cmp
dec
dec
dec
xchg
dec
or
sbbb
cmp
dec
dec
dec
stos
or
out
push
ja
add
or
lea
xorb
testl
add
mov
sub
mov
ja
xor
xorb
push
in
xor
mov
ja
arpl
jbe
or
push
ja
xorb
mov
iret
orb
sbbb
cmp
stc
sbbb
cmp
arpl
xlat
cmp
lea
cmp
and
lock
in
add
mov
sub
mov
ja
adcb
enter
push
movd
and
sub
push
pcmpeqb
and
xchg
push
mov
lea
mov
dec
push
ucomiss
cmp
sbb
lea
lock
lock
xchg
xchg
dec
or
lea
push
push
in
xor
test
std
aad
jl
out
mulb
outsl
cmp
out
xorb
mov
hlt
lea
subb
lock
adc
in
lea
push
popf
out
xorb
lock
ja
xor
push
xchg
and
adc
insl
cmp
je
xchg
adc
sub
cmp
testl
or
push
test
xchg
addb
adc
or
xchg
fwait
jl
mov
and
cmp
mov
aad
icebp
and
cmp
out
in
lret
pop
out
in
sbb
in
lret
in
out
pop
out
in
xor
and
push
in
dec
or
mov
push
in
mov
in
push
jnp
popa
sub
lret
mov
cmp
out
xor
and
push
in
dec
or
mov
lock
dec
push
push
mov
xchg
addb
cmpl
stc
in
rorl
rorb
lcall
stc
lods
lea
decl
dec
aam
lea
in
lea
mov
lea
xchg
lea
mov
lea
fimull
lock
dec
add
mov
lea
lea
lea
lea
div
lea
aad
lea
sbb
lea
mov
dec
popf
lea
enter
jnp
lea
mov
out
adcb
nop
adc
ja
adcb
lea
adcb
ja
in
icebp
test
lea
test
jno
out
mov
lea
testl
inc
ret
dec
dec
adcb
lea
sti
xorb
fmuls
dec
mov
test
xchg
addb
fwait
jl
xchg
xor
jg
lea
pusha
xchg
lea
xchg
lea
sub
sbb
lea
out
lea
xor
sbb
lea
pop
leave
lea
lea
iret
cmp
and
lea
iret
lea
sbb
test
xor
lea
lea
and
mov
xorb
xchg
mov
sti
adcb
lea
adcb
xchg
sti
push
jb
pushf
insb
dec
dec
dec
or
pop
lea
xchg
or
cld
cli
mov
icebp
lea
sbb
lea
leave
lea
movsl
lea
lea
push
jb
fwait
leave
lea
test
adcb
jp
cmpsl
orl
sub
jp
ja
adcb
adcb
and
xorb
mov
lea
cmpsl
push
jb
movb
dec
dec
aaa
cmp
lea
push
adc
dec
in
std
xorb
xchg
mov
sti
adcb
lea
adcb
xchg
sti
push
jb
movb
ja
andb
je
mov
arpl
or
dec
dec
stos
test
lea
or
in
fists
pop
xchg
push
jl
pop
loop
fists
push
ja
jl
push
pop
fists
push
ja
xchg
jl
std
rcrb
adc
scas
cltd
fwait
jl
negl
ja
push
jb
dec
pusha
mulb
cmp
call
push
ja
xorb
stc
add
mov
sub
sti
add
bound
or
or
les
sbb
push
ret
add
push
push
xchg
mov
mov
sub
and
into
lea
in
mov
lea
xor
aad
push
push
out
adcb
gs
xchg
out
in
pushf
push
xchg
test
adcb
mov
cmpsl
test
adc
mov
lods
and
adc
insl
in
clc
mov
out
sti
push
mov
ja
outsb
xlat
enter
in
xor
test
sti
adcb
push
dec
jnp
ja
adcb
test
xchg
mov
adc
mov
sub
sti
push
mov
ja
outsb
xlat
xor
or
test
sti
adcb
push
ja
arpl
leave
dec
dec
dec
xorb
xchg
stc
in
clc
mov
sti
out
mov
sub
sti
push
mov
addb
or
xchg
stc
mov
or
cmpsl
xchg
xchg
xchg
out
outsl
or
jp
dec
dec
stos
test
lea
adc
ja
mulb
cmp
cmc
and
cmp
ja
jl
enter
cmp
sbb
adc
mov
or
cmp
sub
mov
or
add
xchg
xor
push
pushf
mov
or
clc
sub
decb
and
lea
mov
mov
sub
mov
or
incb
mov
push
lods
mov
or
mov
call
xor
aad
push
sub
mov
or
mov
lock
push
lods
mov
or
mov
call
xchg
pop
xor
andb
mov
or
mov
call
push
mov
sub
sub
mov
or
mov
lock
push
lods
mov
or
mov
call
xchg
pop
push
xchg
mov
mov
push
pushf
mov
or
clc
sub
in
add
xchg
enter
std
mov
sub
adcb
notl
mov
sub
inc
arpl
dec
dec
xorb
lock
stos
test
mov
xchg
addb
lock
in
lock
out
outsb
adc
cld
ja
aad
ja
sbb
ja
rorb
loopne
dec
or
xchg
or
lea
sti
or
xchg
int3
xor
adc
cld
ja
or
cld
ja
jl
ja
sar
ja
push
ja
xchg
or
dec
sar
xchg
mov
pop
xchg
push
sar
xchg
test
neg
or
loopne
or
lea
div
or
outsb
xchg
arpl
out
in
dec
xlat
out
cltd
xchg
dec
dec
jo
out
lea
cmp
cltd
mulb
cmp
xor
cmc
and
cmp
imulb
cmp
xchg
mov
scas
xorb
lock
cmp
mov
or
mov
ja
jl
sbb
outsl
cmp
inc
sbb
adc
out
lea
ja
xor
push
sub
mov
or
mov
lock
push
pushf
mov
or
clc
sub
decb
and
enter
mov
sub
push
je
ja
add
or
push
ja
xorb
lock
addb
dec
xorb
lock
push
sub
sub
mov
ja
push
ja
xorb
lock
mov
sub
mov
or
mov
lock
push
pushf
mov
or
clc
sub
incb
xor
arpl
fstps
xorb
lock
push
cld
push
sub
sub
mov
ja
jl
xchg
movsb
mov
xor
xorb
jl
test
push
push
mov
or
std
xorb
xchg
addb
ja
ja
xor
or
push
mov
ja
xorb
lock
mov
or
sub
xor
xor
push
dec
dec
xor
push
mov
ja
xorb
lock
push
sub
sub
mov
ja
xorb
lock
push
sub
sub
mov
ja
xorb
lock
push
cld
mov
sub
xor
arpl
or
dec
dec
dec
xorb
lock
push
cld
push
sub
or
pushl
push
mov
jo
out
lea
jno
jo
fwait
pop
lock
or
pop
lea
mov
lea
pop
and
lea
lock
push
lock
jo
dec
jl
enter
dec
mov
mov
mov
mov
lock
and
mov
pop
or
lock
xlat
iret
or
andb
aad
or
andb
pop
mov
std
mov
and
xchg
dec
dec
ja
cmp
push
mov
mov
lock
cmc
les
ja
mov
pop
out
andb
sub
pop
dec
ja
in
out
xchg
dec
rorb
dec
push
push
mov
xor
mov
std
push
push
arpl
les
xchg
addb
fwait
loop
dec
xlat
out
xorb
inc
mov
add
push
ja
add
push
ja
add
push
ja
add
lea
dec
cmc
lea
add
lea
dec
mov
push
add
lea
dec
aam
lea
xlat
push
add
lea
dec
cmp
jb
xchg
notl
jp
xchg
adcb
jl
std
popl
push
ja
xor
and
push
mov
adc
inc
lret
or
popa
or
out
and
andb
push
test
and
icebp
lea
incl
ljmp
push
xlat
mov
lea
rcr
outsl
pusha
mov
lock
ja
rcr
or
lock
and
andb
fistpl
adc
inc
add
mov
or
movsb
push
test
adc
dec
in
mov
in
jle
push
lock
push
xlat
scas
xor
push
jp
and
cmpsb
lret
pusha
sbb
jp
push
lock
ja
sti
jl
int3
push
lock
mov
xchg
ja
mov
push
ljmp
es
xor
and
andb
mov
sub
inc
mov
or
sub
adc
std
push
xor
scas
xor
adc
and
andb
fistpl
adc
inc
add
mov
or
movsb
push
test
adc
dec
call
dec
rorb
adc
dec
or
mov
lea
in
fucomp
or
leave
and
stos
sbb
scas
sbbb
push
lock
jp
xchg
enter
in
push
cmpsl
enter
xchg
sbbl
in
xorb
cmpsl
scas
or
arpl
stos
adc
pop
adcb
xchg
mov
cld
add
xchg
out
push
ja
push
xchg
jbe
ja
decl
mov
xlat
sub
xorb
push
jno
movsb
mov
adc
xor
dec
push
das
xorb
sbb
ja
out
dec
lock
xlat
mov
xchg
sbb
xchg
andl
in
stos
cmp
mov
xchg
addb
loopne
cmp
xchg
int3
dec
dec
orb
lea
pop
out
test
mov
sti
out
lea
lea
and
lea
mov
cmpsb
in
sti
or
cld
or
pop
mov
pop
push
push
mov
push
cmp
orb
lea
les
mov
fmuls
xlat
popa
cld
lea
lea
xchg
addb
lea
es
fwait
jl
enter
adc
mov
fstps
adc
xor
jl
xchg
and
cmp
cmc
and
cmp
call
lock
ja
out
fists
push
lock
xchg
xor
inc
testl
xchg
sub
add
push
jl
or
cld
push
ja
add
push
ja
xorb
and
cmp
pop
fists
push
jge
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
push
add
dec
dec
xor
adcb
mov
sub
adcb
jle
xorb
call
dec
dec
xor
xorb
xchg
mov
or
push
jle
pop
or
mov
call
dec
dec
xor
adcb
mov
sub
adcb
addb
pop
or
mov
call
mov
or
or
je
testl
dec
xor
in
add
push
cld
mov
or
mov
lock
or
sub
adcb
jle
or
mov
call
andb
or
pop
or
xchg
in
push
xend
dec
dec
dec
add
dec
dec
dec
or
mov
or
adc
sub
mov
xorb
adc
lea
cmp
xchg
and
cmp
stc
or
or
mov
adcb
push
stos
dec
xlat
xor
xlat
inc
xchg
add
test
std
or
mov
adcb
push
stos
dec
xlat
push
mov
sub
cmp
dec
xorb
lock
mov
sub
mov
or
mov
lock
mov
or
xchg
mov
sub
in
mov
lock
mov
or
xchg
mov
sub
in
mov
lock
mov
or
xchg
mov
sub
in
mov
dec
push
dec
dec
dec
xorb
lea
xchg
push
xchg
mov
or
clc
sub
push
xend
dec
dec
dec
xorb
lea
mov
mov
or
insl
or
mov
sub
push
xend
dec
dec
dec
xorb
lock
sub
mov
or
mov
lock
push
push
mov
sub
adcb
jle
pop
or
or
xchg
in
push
xend
dec
dec
dec
xorb
lock
add
push
cld
mov
or
mov
lock
or
sub
in
mov
lock
or
sub
add
push
dec
dec
dec
stos
adcb
mov
jle
lock
aad
dec
dec
xorb
or
mov
call
lea
lea
xchg
and
xorb
lock
inc
std
or
mov
std
xorb
xchg
xor
push
sub
and
incb
adcb
andb
and
xor
or
or
mov
andb
mov
sub
in
std
xorb
sbb
lock
jl
outsl
adcb
cmpsb
xorb
sbbb
lea
andb
andb
andb
xchg
scas
xor
or
or
mov
andb
mov
sub
je
ja
xorb
lds
lea
lock
inc
std
or
mov
andb
lock
in
mov
pushl
arpl
lea
movsl
jae
inc
std
push
cmpsl
xor
lock
or
ja
andb
ja
push
sub
call
andb
push
ja
xorb
out
in
mov
mov
or
cmpsl
mov
xor
andb
inc
adc
test
xorb
mov
push
jo
test
xorb
lods
jmp
pop
xor
xor
ja
xorb
inc
mov
mov
or
ja
andb
ja
or
add
adc
mov
xchg
xchg
xchg
mov
mov
or
fstps
adc
addr16
fists
xlat
aaa
arpl
xlat
dec
orb
jno
cmp
out
aad
orb
jno
cmp
push
xorb
out
in
ja
or
lock
dec
dec
les
xchg
adc
ja
rcrb
adc
jbe
ja
xor
or
or
mov
andb
lock
movsb
pushl
mov
xor
arpl
rcll
ja
in
ja
push
ja
subb
ja
xorb
lock
inc
std
or
mov
andb
pushl
sub
adc
dec
dec
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
mov
push
xorb
call
dec
dec
dec
xor
adcb
jle
xorb
call
dec
dec
xor
xorb
xchg
mov
or
push
xorb
call
dec
dec
xor
adcb
sub
mov
or
incb
mov
xorb
jle
mov
mov
or
xchg
andb
or
mov
pushl
push
inc
sbb
dec
dec
dec
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
xchg
adcl
aad
dec
dec
add
push
dec
dec
dec
xchg
xor
adcb
sub
or
clc
sub
xchg
add
lea
cmp
xchg
and
lea
ja
sub
lock
and
mov
inc
mov
mov
or
xchg
enter
push
or
enter
push
adc
or
or
mov
xlat
enter
push
pushf
push
movsb
call
mov
sub
ret
mov
xlat
enter
push
pushf
push
movsb
call
mov
sub
ret
mov
xlat
enter
out
push
dec
lcall
xlat
and
xchg
xorb
test
lea
inc
xchg
cltd
fwait
push
movsb
push
jo
ja
fstps
adc
popl
push
ja
jl
xchg
pop
fists
push
ja
jl
xchg
mov
enter
cmp
cli
and
cmp
hlt
and
cmp
mulb
cmp
ja
push
ja
xorb
bound
cmp
xor
or
cmp
pop
in
out
adcb
lea
out
or
or
popa
or
out
andb
add
push
movsb
mov
sub
pushf
xlat
push
sbbb
xchg
mov
jno
xchg
and
xchg
test
or
ja
dec
xlat
out
dec
xlat
enter
dec
xlat
xchg
add
or
push
ja
xorb
lock
ja
jl
in
lea
xor
push
xchg
out
xorb
lock
ja
xor
push
xchg
and
and
les
xorb
lock
lea
lea
push
ja
xorb
test
lea
and
lea
and
cmp
dec
mov
ja
addr16
and
cmp
dec
movsb
cmpsb
lea
pop
fists
pop
xchg
xor
in
fists
push
ja
xorb
ja
xorb
int
cmp
lea
mov
cmp
lea
in
push
mov
mov
push
ja
pop
int3
cmp
push
xchg
loope
push
or
lahf
stos
cmpb
xchg
push
adcb
jle
push
xchg
int
xchg
push
addb
jl
mov
fistps
push
out
mov
push
xlat
popl
inc
mov
dec
dec
in
push
mov
dec
dec
add
jne
dec
dec
in
push
mov
dec
dec
add
jge
dec
dec
in
push
mov
dec
dec
mov
dec
dec
xorb
mov
dec
dec
xorb
lock
inc
std
or
mov
adcb
aam
jl
jb
mov
xchg
add
ja
mov
sbb
pop
jo
adc
lea
adc
orl
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
icebp
xorb
lock
inc
std
or
mov
adcb
mov
sub
sti
les
mov
sbb
pop
jo
adc
lea
adc
inc
or
stc
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
xor
or
or
mov
adcb
mov
sub
sti
les
push
ja
dec
dec
dec
mov
sbb
pop
jo
adc
lea
adc
prefetchw
xor
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
xlat
pop
add
or
mov
cmp
icebp
outsb
sub
sub
out
orb
dec
dec
sbbb
dec
dec
push
xlat
xchg
and
cmp
or
cmp
or
cmp
lea
or
mov
dec
dec
pop
daa
cmp
mov
cmp
or
pop
cmp
lea
dec
in
push
cmp
push
add
jno
jae
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
push
cmp
out
dec
dec
dec
in
mov
mov
dec
dec
adcb
push
add
dec
dec
dec
pusha
in
cmp
mov
cld
pusha
xor
lea
dec
dec
mov
or
sbb
lea
dec
dec
dec
pusha
fwait
xchg
adc
lock
add
pushl
dec
dec
xorb
lock
mov
or
add
pushl
or
lea
dec
dec
or
jno
cld
mov
or
add
pushl
or
ja
or
cmp
dec
dec
dec
sar
sbb
dec
addl
ja
dec
push
cmpsb
mov
in
fstp
mov
adcb
popf
push
divl
or
incb
cmp
dec
push
lock
mov
or
divl
adcb
lea
and
mov
or
divl
adcb
lea
cmp
and
adc
dec
dec
pusha
daa
cmp
sub
sub
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
adc
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
sbb
lea
dec
dec
dec
adcb
push
add
dec
dec
pusha
sbb
lea
dec
dec
dec
pusha
daa
pop
lea
dec
dec
dec
pusha
push
xor
aam
dec
dec
cld
ja
mov
lea
dec
dec
in
mov
mov
dec
dec
cld
ja
or
ja
xchg
cld
ja
stos
pusha
lea
dec
dec
dec
cld
ja
jg
fistpl
lea
dec
dec
cld
ja
popf
cld
ja
xchg
pusha
inc
cmp
gs
dec
dec
cld
ja
xchg
jno
push
push
divl
sub
inc
fwait
adcb
jle
pop
or
mov
inc
decb
loopne
iret
addl
push
jle
pop
or
mov
and
mov
lea
lea
adc
addl
lock
jle
std
mov
sub
xor
in
incb
jno
jle
mov
sub
pushf
in
sti
out
push
lock
in
xor
adcb
mov
or
clc
sub
push
add
or
and
push
divl
or
incb
xchg
adcl
push
or
cmp
push
lock
mov
or
push
out
add
add
push
out
in
jl
mov
out
mov
jl
mov
lret
mov
test
push
mov
test
lret
mov
out
mov
jl
mov
out
mov
jl
mov
push
lock
cli
adcb
push
lock
lock
push
push
mov
sub
adcb
jle
pop
or
xor
bound
mov
sub
pushf
or
pushf
mov
and
push
divl
sub
incb
lock
jle
out
mov
or
mov
or
pushf
mov
and
mov
sub
mov
or
incb
and
mov
or
mov
mov
or
and
mov
sub
mov
or
incb
and
mov
or
mov
mov
or
jno
xchg
jno
notl
mov
sub
adcb
jle
mov
sub
pushf
in
push
add
or
and
out
push
notl
mov
or
clc
sub
incb
dec
push
or
add
or
bound
xor
adcb
stos
push
pushf
mov
or
clc
sub
push
lidtl
or
and
mov
or
sub
aad
add
or
ja
xor
push
cld
mov
or
sub
or
dec
and
xorb
lea
xorb
lock
push
sub
or
mov
add
inc
dec
push
or
xchg
lock
xchg
jno
push
mov
or
ret
clc
sub
push
lidtl
or
cmp
lea
dec
dec
dec
add
jno
push
add
popa
cmp
stos
dec
dec
dec
cmp
push
dec
xchg
dec
dec
dec
xorb
dec
dec
in
push
cmp
push
add
fisubrl
mov
dec
dec
in
mov
mov
dec
dec
add
cmpsb
mov
dec
dec
orb
dec
dec
add
scas
pusha
dec
cmp
rorl
add
or
dec
dec
dec
mov
dec
dec
in
jl
mov
dec
dec
orb
mov
dec
dec
cmp
push
add
dec
dec
dec
xorb
out
dec
dec
push
push
push
push
add
dec
dec
dec
jl
lods
dec
dec
dec
out
xor
jl
dec
ret
cmp
ja
xor
adcb
mov
xchg
mov
lock
add
mov
pushl
sbb
jo
dec
arpl
or
and
arpl
or
cmp
jno
xchg
jno
push
mov
or
ret
clc
sub
in
std
adcb
dec
dec
xor
and
push
push
mov
or
dec
or
sub
std
mov
dec
dec
dec
mov
mov
mov
jno
out
push
push
mov
or
dec
or
sub
std
mov
dec
dec
dec
xor
adcb
or
clc
sub
incb
xor
in
add
mov
pushl
sbb
jo
dec
arpl
or
lcall
dec
dec
dec
insb
cmpsl
movl
ja
xorb
mov
sbb
popl
xorb
lock
or
or
mov
adcb
push
xorb
das
cmp
enter
or
mov
xchg
std
or
mov
adcb
add
or
push
jl
jb
sti
arpl
or
lea
jl
scas
fsts
adc
popl
push
ja
push
cmpsl
jp
ja
xorb
lock
std
or
mov
adcb
push
stos
dec
xlat
xor
loopne
cmp
dec
dec
xorb
lock
std
or
mov
adcb
push
stos
dec
loopne
cmp
dec
loopne
cmp
dec
dec
orb
lea
in
out
push
lock
xor
xorb
inc
mov
mov
or
ja
adcb
sub
pushl
pop
jg
dec
std
aad
orb
lea
and
cmp
jno
xlat
cmp
xlat
sub
xlat
sbb
cmp
dec
dec
push
dec
xor
cmp
aad
xorb
frstor
dec
xor
cmp
decl
cmp
mov
dec
stos
test
lea
and
and
cmp
cmc
and
cmp
mov
or
cmp
scas
push
ret
or
add
cld
adc
arpl
xorb
sete
mov
push
ret
sub
adc
arpl
or
loopne
lea
xchg
and
dec
push
ja
dec
jb
cmovb
out
pop
adc
cld
ja
aad
ja
sbb
ja
rorb
loopne
decl
loopne
adc
jp
lea
cmpsl
dec
xor
mov
ja
or
cld
ja
jl
ja
sar
ja
push
ja
cmpsl
adc
shlb
or
int3
shlb
mov
sbb
in
out
lea
loopne
or
or
lea
lea
incl
lea
div
or
pop
jnp
test
ljmp
ja
push
mov
lock
stos
les
mov
lock
mov
sub
test
xchg
addb
mov
and
cmp
cmc
and
cmp
mov
adc
int
cmp
orb
lea
xchg
push
lock
xorb
lock
out
push
jl
xchg
push
adc
push
ja
xorb
lock
mov
or
adc
push
ja
xorb
insl
or
xchg
push
ja
xorb
insl
pop
xor
jge
xchg
xchg
xorb
sbb
lock
cmpb
dec
divl
std
xorb
insl
pop
in
mov
in
subb
ja
xorb
lock
push
adc
sub
mov
ja
xorb
lock
push
adc
or
mov
ja
xorb
lock
push
jl
mov
pushl
cmp
adc
and
cmp
repz
cmp
cli
and
cmp
xorb
lock
push
adc
sub
mov
ja
xorb
ja
push
ja
dec
xlat
orb
xor
xchg
ja
xorb
push
xorb
ja
xorb
lock
push
ja
xorb
lock
xchg
and
in
xorb
insl
and
out
xor
inc
mov
and
lea
cmp
scas
jl
std
cmc
and
cmp
hlt
and
cmp
repz
cmp
ja
push
ja
add
push
ja
add
push
ja
add
push
ja
xorb
lock
push
adc
sub
mov
ja
mov
mov
cmp
shld
loop
dec
xlat
addb
bound
xchg
test
dec
xorb
lock
push
adc
or
mov
ja
push
xlat
jp
out
xorb
xchg
mov
sub
xor
addl
push
adc
mov
or
mov
lock
push
xchg
mov
or
clc
sub
in
mov
lock
arpl
xlat
sub
mov
push
adc
sub
mov
loop
add
or
xorb
lock
push
adc
or
mov
lock
sub
mov
push
adc
sub
mov
loop
add
or
xorb
lock
lea
push
jl
mov
pushl
xor
adcb
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
push
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adc
mov
or
xchg
mov
sub
decb
mov
lock
xchg
enter
sub
mov
or
clc
sub
decb
std
or
cmp
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adcb
push
xchg
mov
sub
decb
mov
lock
adcb
mov
decb
std
or
lea
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
xchg
enter
sub
mov
sub
decb
mov
lock
adc
push
xchg
mov
or
clc
sub
decb
std
or
lea
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adcb
push
xchg
mov
sub
decb
mov
lock
adcb
mov
decb
std
xlat
jno
ja
or
xor
arpl
mov
push
jl
mov
pushl
ja
adc
xorb
lock
push
je
mov
test
pushl
in
xlat
data16
sub
mov
mov
sub
std
incl
outsl
cmp
mov
push
jl
mov
pushl
std
or
pop
mov
xorb
lock
push
adc
or
mov
lock
xlat
sbb
mov
push
adc
sub
mov
jg
lea
dec
xlat
addb
push
or
xorb
lock
push
adc
or
mov
lock
xchg
xorb
lock
push
adc
or
mov
lock
daa
xorb
lock
push
adc
sub
mov
cltd
add
or
xorb
lock
push
adc
sub
mov
cltd
add
or
xorb
cld
push
ja
dec
xlat
ds
xlat
adc
ja
or
xorb
lock
push
adc
or
mov
lock
cmpsl
xorb
lock
push
adc
or
mov
lock
rolb
push
jl
xchg
adc
or
xorb
ja
or
xorb
lock
mov
or
adc
or
xorb
ja
or
xor
xorb
je
sub
sub
mov
lock
mov
lea
lea
int
lea
dec
xlat
ds
in
xlat
out
xchg
ja
xor
cmp
xorb
ja
push
ja
xorb
lock
mov
sub
mov
or
mov
lock
and
xchg
mov
push
xchg
mov
or
clc
sub
in
lock
or
hlt
lret
dec
dec
xorb
test
lea
adc
push
ja
or
cmp
orb
out
andb
fistpl
adc
pop
xchg
or
or
mov
lea
push
movsb
decl
out
call
xlat
or
push
sar
adc
mov
adcb
xchg
out
adc
adcb
out
andb
or
or
mov
lea
xchg
mov
or
dec
and
andb
jno
lret
xor
or
or
test
push
jo
lret
push
lea
or
addb
movb
out
andb
mov
push
jb
aad
fists
mov
mov
adc
es
jl
std
jle
xchg
fstps
adc
mov
adc
adc
xlat
or
loope
enter
lea
xlat
and
and
pusha
fistpl
adc
or
or
mov
dec
mov
sub
enter
out
cli
lea
incl
andb
xor
xlat
outsl
push
jb
pushf
aad
dec
xlat
xor
xlat
sub
pop
xchg
dec
dec
dec
push
outsl
mov
adcb
mov
or
or
popa
or
out
and
andb
or
movsb
decl
out
push
lret
call
cmpb
adcb
cmpsl
adc
mov
sub
mov
or
dec
lea
ljmp
arpl
xlat
sbb
xlat
nop
dec
push
test
jne
push
outsl
movsb
jbe
push
test
jne
stos
xorb
lock
and
es
fistpl
adc
inc
std
or
ret
push
jb
add
push
test
lea
call
ja
xlat
out
arpl
fisubrs
mov
les
adc
pop
js
xor
sub
in
xchg
xorb
lock
inc
std
or
mov
adcb
xor
cli
cmpsl
movl
sti
push
cmp
cmp
ja
or
cmp
xchg
gs
adcb
lea
out
mov
dec
push
or
xorb
lock
inc
std
or
mov
adcb
cld
push
jb
sti
push
ja
add
or
mov
dec
xlat
jno
xlat
and
out
xchg
int3
dec
dec
xorb
lock
inc
std
or
mov
adcb
mov
sub
std
aad
xorb
lock
mov
or
lock
xchg
adc
mov
sub
or
ja
push
cmp
xchg
addb
push
xlat
cmp
out
pop
xchg
pop
fists
arpl
or
dec
lea
in
arpl
arpl
xlat
out
arpl
or
pop
or
lea
adc
out
arpl
or
das
or
lea
adc
out
arpl
or
dec
lea
pop
fists
xlat
out
arpl
aad
mov
adc
out
arpl
or
mov
or
or
cmp
lea
lea
xlat
sub
xlat
jno
xlat
and
out
xchg
or
cmp
pop
fists
xlat
out
arpl
or
loope
lea
fists
xlat
out
arpl
or
mov
lea
fists
xlat
out
arpl
aad
mov
adc
out
arpl
or
aam
lea
fists
les
adcb
out
andb
or
or
mov
lea
push
movsb
decl
out
call
adc
push
xchg
out
push
xlat
and
and
and
push
mov
inc
ret
mov
mov
dec
lea
decl
xchg
jno
xlat
adc
xlat
inc
adcb
xchg
jno
xlat
adc
cmpsl
adc
or
or
mov
dec
lea
or
dec
and
call
push
addb
or
or
jo
test
push
lea
xor
mov
or
sub
adcb
mov
mov
adc
es
andb
dec
aad
fists
mov
es
sub
sti
push
xchg
add
fists
cltd
dec
xlat
xor
dec
xlat
sbb
xlat
jno
xlat
and
out
xchg
int3
dec
dec
push
mov
jo
cmp
adc
and
andb
or
or
mov
lea
push
movsb
call
andb
push
xchg
jno
xlat
adc
xlat
inc
adcb
xchg
out
adc
adcb
out
andb
or
or
mov
lea
xchg
mov
or
dec
and
andb
xorb
lock
push
jo
lret
mov
sub
lea
incl
lock
in
pushf
and
adc
andb
inc
es
fistpl
adc
inc
std
or
mov
push
movsb
mov
int
sub
je
notl
add
xchg
and
adc
mov
pop
fists
mov
adc
mov
mov
es
sub
xchg
mov
xchg
addb
fstps
adc
xor
popl
push
ja
jl
xchg
pop
fists
push
ja
adcb
or
or
mov
xlat
xor
ret
add
push
dec
xchg
lcall
and
and
and
ja
dec
xlat
out
mov
sub
dec
xlat
and
xchg
xchg
enter
xchg
mov
stos
push
ja
xorb
jo
out
lea
mov
xchg
jl
xor
lea
inc
lea
xor
xor
xlat
and
xlat
adc
xlat
and
out
xchg
mov
out
push
jne
out
xorb
dec
push
prefetcht0
xor
lea
and
dec
aad
and
dec
testl
jne
out
add
push
jne
out
xorb
in
jne
out
push
jne
out
xorb
xorb
xorb
out
adcb
lea
xor
cmp
ljmp
addb
sbb
subb
in
jle
aad
out
pop
sbb
in
fstpt
lea
subb
orb
or
sarb
lea
dec
push
dec
cltd
cmp
out
or
cmp
jne
and
int
cmp
jne
and
int
cmp
lea
xor
out
or
cmp
lea
xor
out
xorb
out
or
cmp
cmp
xor
and
cmp
in
add
mov
sub
std
push
xor
out
lea
xor
ret
xorb
in
xchg
push
jge
aad
jge
fmuls
xor
sub
dec
aad
sub
dec
test
and
dec
aad
and
dec
test
adc
dec
test
xor
xor
and
aad
xorb
jl
test
lea
xorb
xorb
out
adcb
lea
xor
cmp
xor
add
mov
or
mov
xor
and
xor
cmp
int
cmp
les
add
push
jne
and
xor
cmp
out
xorb
or
cmp
xor
cmp
out
mov
adcb
lea
cmp
test
sub
imul
popa
push
insb
outsl
ja
popa
insl
imul
push
outsb
bound
push
outsb
jne
outsl
popa
push
add
insl
imul
jo
je
dec
gs
insb
outsl
dec
js
outsb
outsl
jb
add
ja
dec
imul
imul
imul
jae
popa
fs
imul
imul
bound
add
outsl
jo
jns
imul
jne
popa
gs
imul
dec
outsl
jne
push
add
outsl
jo
ja
bound
jns
pop
gs
jo
jne
gs
popa
add
popa
inc
imul
outsb
je
add
dec
imul
insb
outsl
bound
push
bound
jo
inc
outsl
jb
popa
js
data16
imul
fs
outsl
jae
jne
inc
add
add
dec
add
jbe
popa
add
add
popa
add
jne
outsl
add
push
add
popa
add
add
insl
add
popa
add
js
imul
insl
add
insb
add
outsl
add
popa
add
jo
add
popa
add
popa
add
outsl
add
push
add
add
add
add
add
popa
add
add
imul
arpl
popa
add
add
imul
add
popa
add
outsl
add
je
add
jb
jne
add
insb
add
add
insl
add
add
add
imul
ja
outsl
add
popa
add
insb
add
add
jne
insl
add
outsl
add
bound
popa
add
outsl
add
bound
add
add
add
sub
add
aaa
adc
and
adc
rolb
add
xor
add
cmp
add
insb
adc
sub
push
inc
adc
mov
adc
aas
or
add
and
add
adc
test
add
add
push
adc
cmc
push
adc
imul
add
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
test
or
add
test
adc
test
sbb
test
and
test
sub
test
xor
test
cmp
test
arpl
adc
push
xor
add
add
aaa
adc
pop
adc
lcall
add
adc
xor
adc
mov
adc
andb
clc
ja
add
xor
add
adc
mov
add
daa
adc
mov
sub
adc
xor
adc
outsb
dec
adc
adc
bound
add
and
add
adc
mov
add
pusha
adc
pop
adc
adc
inc
test
dec
test
dec
test
push
test
push
test
pop
test
pop
test
popa
test
test
imul
add
inc
add
inc
add
inc
add
das
adc
add
add
adc
add
pop
adc
dec
jne
add
pop
adc
push
cmp
adc
pop
cmp
add
xor
adc
adc
add
adc
jmp
adc
lds
add
test
roll
add
test
fldl
add
test
jmp
test
icebp
test
cmc
test
stc
test
std
test
add
adc
xlat
pusha
adc
lea
hlt
add
add
adc
out
adc
dec
bound
add
adc
cmp
adc
inc
pop
adc
imulb
add
arpl
add
sbb
add
adc
xchg
push
adc
inc
test
dec
test
dec
test
push
test
push
test
pop
test
pop
test
popa
test
test
imul
inc
add
inc
add
inc
add
inc
add
add
sub
mov
add
add
inc
xchg
add
add
add
add
add
add
add
adc
add
and
add
add
add
adc
add
mov
add
add
pop
mov
add
add
jbe
add
mov
add
mov
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
add
and
add
mov
add
add
pop
mov
add
add
jo
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
add
add
pushf
mov
add
add
loop
add
lock
add
add
adc
add
mov
add
mov
add
add
pusha
mov
add
add
nop
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
add
inc
lea
add
add
lea
add
add
mov
add
movsb
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
add
xor
add
inc
mov
add
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
popl
add
add
and
add
push
popl
add
add
je
add
mov
add
mov
add
lret
add
popl
add
popl
add
popl
add
nop
add
sbb
add
cmp
add
dec
nop
add
pop
nop
add
jb
add
mov
add
mov
add
enter
ficoml
add
cld
nop
add
or
add
sbb
add
ds
add
dec
xchg
add
pop
xchg
add
jo
add
jle
add
mov
add
scas
xchg
add
rclb
add
xchg
add
lock
add
cld
xchg
add
or
add
sub
add
dec
xchg
add
pop
xchg
add
push
xchg
add
add
add
xchg
xchg
add
movsb
xchg
add
mov
add
into
xchg
add
loopne
add
repnz
add
or
add
sbb
add
es
add
cmp
add
pusha
xchg
add
jo
add
adcb
add
add
mov
xchg
add
out
add
cld
xchg
add
adc
add
xchg
add
inc
xchg
add
push
xchg
add
jb
add
mov
add
xchg
add
ficoml
add
xchg
add
adc
add
xor
add
push
xchg
add
xchg
add
jl
add
mov
add
lods
xchg
add
mov
xchg
add
fcoml
add
add
add
xchg
add
insb
dec
outsb
imul
jb
outsb
add
fs
insb
cs
insb
add
push
imul
dec
jb
inc
js
add
push
gs
inc
js
outsb
je
outsl
imul
push
gs
gs
inc
insb
imul
inc
js
push
gs
dec
jne
push
add
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
pop
add
fs
push
popa
je
add
popa
je
inc
outsl
insl
jo
je
bound
inc
add
mov
push
outsl
insb
jns
imul
inc
gs
imul
addr16
js
add
add
je
popa
jns
jne
add
add
je
bound
je
jb
arpl
add
add
jb
je
push
je
add
inc
gs
dec
inc
imul
je
popa
jo
outsl
fs
daa
add
je
imul
add
jae
je
outsb
add
jo
gs
add
popa
insb
gs
imul
je
js
add
inc
gs
je
arpl
bound
arpl
lcall
outsl
add
mov
push
outsl
insb
jns
outsl
outsb
add
inc
gs
gs
inc
insb
imul
inc
gs
gs
inc
popa
arpl
add
mov
insb
imul
je
add
movl
jp
push
popa
insb
gs
add
bound
gs
outsb
add
push
add
je
jne
inc
add
testl
arpl
outsb
add
movsl
add
gs
je
push
popa
insb
gs
add
inc
gs
imul
jae
movl
inc
outsl
outsb
je
push
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
inc
inc
add
add
je
imul
jae
mov
inc
jb
popa
je
inc
imul
imul
mov
inc
gs
gs
dec
gs
imul
push
gs
jb
jae
dec
jb
inc
js
mov
je
outsb
push
imul
inc
jae
popa
jo
add
scas
add
insb
jns
gs
gs
add
popa
je
push
arpl
outsb
add
popa
je
inc
inc
push
add
inc
jne
jb
outsb
je
bound
arpl
inc
inc
dec
xor
cs
insb
add
outsb
jae
insb
gs
insb
add
add
popa
jb
jo
gs
add
dec
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
scas
add
fs
jne
jae
jb
add
inc
jb
popa
je
inc
imul
jb
insl
inc
add
popf
add
dec
outsb
jne
add
inc
gs
imul
add
je
outsl
jo
imul
mov
imul
jae
bound
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
add
insb
insb
push
imul
outsl
arpl
repz
je
popa
jb
je
outsl
jae
ret
jbe
jo
imul
test
dec
outsl
popa
fs
arpl
insb
gs
je
jb
push
add
add
imul
outsl
ja
outsl
push
outsl
jo
add
inc
jb
insl
gs
jb
arpl
mov
ja
gs
inc
js
add
insb
popa
je
push
arpl
add
imul
popa
jae
push
add
inc
add
je
popa
jae
inc
jb
outsl
jb
js
add
push
jo
jb
add
inc
add
imul
arpl
outsb
add
push
add
je
popa
jb
outsb
je
xchg
add
arpl
outsl
jo
jo
outsb
jne
js
add
add
je
gs
outsl
popa
jb
dec
popa
jns
jne
add
add
je
insb
popa
jae
dec
popa
insl
gs
add
add
jne
insb
push
arpl
add
je
popa
jb
je
outsl
jae
and
inc
push
dec
outsb
jne
add
je
outsl
jns
imul
add
jae
push
push
dec
gs
popa
addr16
add
push
add
je
jb
jo
add
mov
dec
outsl
popa
fs
arpl
push
add
add
dec
outsb
push
arpl
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
sti
add
arpl
outsl
jo
jo
outsb
jne
add
popa
je
push
imul
push
add
insl
outsl
jbe
dec
outsb
jne
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
mov
dec
outsl
popa
fs
insl
popa
addr16
add
add
inc
fs
jae
push
imul
arpl
addl
outsb
fs
gs
popa
addr16
js
xchg
dec
outsb
jae
jb
dec
outsb
jne
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
addb
ja
jo
outsl
jne
gs
jne
je
outsb
add
add
imul
jae
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
stos
add
fs
imul
add
dec
gs
arpl
push
add
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
inc
gs
jne
dec
outsb
jne
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
gs
je
jo
imul
sub
fs
outsl
je
data16
gs
popa
addr16
add
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
popa
jb
outsl
ja
jb
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
inc
insb
addr16
je
insl
dec
outsb
je
mov
imul
mov
imul
imul
add
outsb
inc
gs
je
jo
add
cmp
inc
push
insb
addr16
jne
je
outsb
add
mov
dec
outsb
jbe
jb
push
arpl
popl
inc
gs
imul
outsl
arpl
add
inc
imul
jae
push
outsb
imul
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
insb
addr16
jne
je
outsb
inc
push
add
insl
add
je
imul
outsb
addr16
add
popa
add
gs
je
push
outsl
jo
jo
outsb
jne
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
stos
add
ja
outsb
imul
arpl
sahf
add
push
arpl
jo
jns
incb
inc
gs
insb
imul
jb
lds
inc
outsb
fs
popa
imul
inc
outsb
jne
push
imul
xchg
dec
outsb
je
jb
popa
insb
inc
gs
imul
js
add
push
ja
jb
add
aad
dec
gs
popa
addr16
outsl
js
add
imul
outsl
ja
jo
popa
je
add
add
popa
jb
outsl
ja
jb
add
lcall
push
arpl
add
je
outsb
jne
je
imul
add
outsb
imul
push
arpl
add
je
imul
outsb
addr16
add
or
inc
imul
push
imul
jae
add
popa
jb
jb
jbe
add
add
jbe
push
imul
mov
dec
outsl
popa
fs
outsb
jne
add
bound
jbe
outsb
je
pop
add
je
jns
je
insl
dec
gs
imul
dec
outsl
popa
fs
arpl
inc
add
inc
gs
gs
inc
insb
addr16
popa
bound
gs
add
ja
arpl
add
std
add
je
insb
imul
je
add
je
gs
popa
addr16
add
inc
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
gs
jae
inc
inc
add
inc
push
xor
cs
insb
add
add
jbe
inc
imul
add
outsb
fs
gs
jne
arpl
js
add
add
gs
jne
jb
outsb
je
imul
jns
add
sub
gs
popa
outsb
fs
gs
outsl
jne
je
add
jo
jb
push
je
imul
add
insb
gs
imul
arpl
inc
imul
cmp
gs
jns
je
insl
push
imul
gs
inc
push
add
arpl
inc
imul
je
imul
dec
outsl
popa
fs
imul
add
push
add
je
jb
jb
je
arpl
push
arpl
outsb
add
cltd
add
je
outsl
insl
insl
inc
outsl
outsb
imul
inc
jb
gs
gs
jne
arpl
add
inc
imul
je
imul
inc
gs
imul
jo
push
add
fiadds
jae
jb
outsb
push
add
pop
add
popa
insb
push
imul
gs
jns
je
insl
inc
imul
jns
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
lret
jb
popa
je
inc
imul
jns
add
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
add
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
xor
gs
imul
gs
outsl
insl
insl
push
je
je
add
mov
push
imul
imul
insb
gs
bound
arpl
add
je
jns
je
insl
push
imul
jae
insl
outsb
je
add
inc
gs
gs
inc
imul
gs
push
popa
je
dec
popa
insl
gs
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
je
dec
popa
insl
gs
imul
add
inc
popa
fs
gs
fs
je
add
jnp
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
inc
add
je
jb
arpl
fs
jae
add
movb
gs
je
jbe
outsb
je
add
popa
jb
outsl
insl
insl
inc
jb
outsl
jb
add
jo
outsb
insb
outsl
arpl
add
add
je
outsl
insl
insl
push
je
je
add
out
add
je
imul
bound
gs
add
sub
inc
outsb
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
sub
dec
outsl
arpl
push
imul
inc
outsb
jne
push
gs
jne
arpl
popa
insl
gs
add
imul
gs
add
gs
imul
gs
add
inc
imul
jne
arpl
add
gs
inc
imul
gs
outsl
insl
jo
je
jb
popa
insl
gs
js
add
cmp
dec
outsl
jbe
inc
imul
dec
inc
dec
xor
cs
insb
add
add
add
jl
add
dec
xchg
add
imul
outsl
insl
add
je
push
inc
js
inc
cmp
