push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
mov
orl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
incl
add
movzwl
adc
mov
mov
mov
sub
movb
and
lea
sbb
mov
xor
xor
adc
mov
mov
mov
sub
mov
xor
xorl
sub
mov
adcl
movl
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
push
and
movl
mov
push
mov
or
xor
andl
mov
subl
push
andl
add
jmp
mov
mov
inc
movl
cmp
movl
jb
mov
xor
add
movl
jmp
adc
mov
sbb
mov
subl
xor
xor
mov
andl
add
addl
movzwl
sbbl
mov
subl
mov
xorl
movzwl
orl
xor
sbbl
add
mov
mov
mov
movzbl
inc
mov
movl
cmp
movl
jne
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
pushl
call
mov
dec
mov
jmp
xorl
mov
addl
xor
orl
add
mov
sbbl
mov
xor
add
mov
movl
movl
movl
mov
mov
movl
jmp
movzbl
sbb
mov
xor
xor
or
mov
mov
xor
movl
xor
addl
sub
subl
sub
xor
or
sub
xor
mov
mov
mov
lea
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
and
mov
or
mov
sbbl
lea
inc
mov
mov
mov
subl
lea
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xorl
lea
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
or
mov
andl
mov
lea
mov
xor
mov
xor
add
jne
movl
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
orl
xor
addl
xor
sub
sub
xor
movl
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
jmp
cmpsl
js
movsb
mov
je
stos
mov
lods
adc
bound
pop
bound
xor
cmp
jns
jbe
cmpsb
jb
jno
fld
std
dec
push
jae
inc
mov
scas
inc
push
cmp
loop
data16
lcall
hlt
xor
dec
and
std
pop
int
xor
test
mov
clc
cmp
mov
mov
mov
idivb
push
arpl
push
jne
and
stos
adc
cmp
mov
dec
ret
adc
and
jmp
fwait
into
or
divl
mov
add
retw
sti
lret
xor
or
and
or
mov
inc
pop
outsb
dec
adc
fucomip
push
lods
cmpl
mov
ljmp
cmp
pop
jg
xchg
mov
ss
out
imul
dec
wrmsr
mov
push
lahf
add
stos
cmc
or
out
cmpsb
jnp
adc
insl
jle
or
push
sbb
rol
and
cltd
sub
insl
inc
pop
sbb
mov
add
imul
les
aas
xchg
sbb
ljmp
mov
add
stc
cmpsb
push
jge
pop
lret
jne
ljmp
mov
jle
sbb
fdiv
push
std
mov
sbb
xor
inc
les
push
fisttpll
mov
mul
xchg
mov
scas
ljmp
jge
jnp
fimull
aaa
sub
xchg
insb
insl
jle
rclb
lods
mov
arpl
nop
push
add
movsl
mov
insl
and
cld
xor
mov
jns
test
mov
scas
mov
fidivl
arpl
stos
mov
addr16
movsl
out
inc
fnsave
pop
outsl
pusha
jne
xchg
mov
cmp
movsl
xchg
mov
or
xchg
jge
jne
mov
mov
dec
fidivl
sbb
into
mov
push
push
add
push
inc
ret
mov
add
xchg
jecxz
or
lds
mov
das
mov
in
push
sub
cmp
mov
outsl
sahf
scas
dec
inc
push
mov
iret
mov
dec
scas
add
in
arpl
scas
gs
icebp
or
enter
decb
push
test
lahf
xor
cwtl
dec
fidivrs
je
and
xor
jns
js
jl
mov
js
push
push
fcomps
inc
test
sbb
test
popa
mov
push
inc
fsts
iret
lret
jne
add
aad
stos
repnz
stc
xor
sbb
fwait
mov
adc
and
mov
add
les
xor
lret
inc
stc
fldl
test
mov
pop
mov
push
shl
xchg
dec
push
push
inc
cmp
pextrw
movsl
and
inc
pop
mov
push
jmp
and
sar
xchg
popf
jae
lds
dec
stos
std
jae
lret
ss
andl
cwtl
testl
std
pop
mov
daa
inc
lea
push
out
dec
scas
imul
jmp
je
mov
mov
mov
aam
mov
retw
cmc
aaa
mov
cmp
lret
aam
inc
cmp
push
shll
daa
out
inc
inc
in
add
int
aaa
push
xor
mov
mov
int
insl
xor
fdivs
pop
mov
inc
outsl
jbe
pop
sahf
out
movsb
daa
sub
mov
movsl
xchg
or
das
xchg
xor
push
aad
sbb
jo
outsb
shr
xor
xchg
xlat
push
mov
repnz
push
mov
sbb
or
xchg
xchg
push
push
out
cwtl
roll
call
push
xorb
lcall
inc
dec
enter
in
cmp
add
mov
pop
mov
xchg
mov
dec
push
fs
pop
dec
mov
add
add
cmpb
cwtl
add
movsb
data16
jmp
cltd
mov
pop
cmc
test
sub
push
rolb
inc
mov
imul
ret
cmc
mov
popa
sti
or
sub
pop
add
lcall
inc
fnstcw
cmpsl
mov
fwait
and
mov
xchg
in
and
outsl
adc
lock
nop
stc
xchg
pop
mov
sbb
ret
push
leave
daa
sti
mov
sbb
xchg
imul
fxch
ret
sbb
cmp
jbe
mov
pop
push
mov
ss
push
popa
push
inc
adc
sub
or
xor
xor
dec
mov
or
lcall
add
adc
cwtl
jmp
pop
movsb
sub
or
in
pushf
nop
sub
inc
scas
jmp
fimull
sub
lock
mov
adc
loop
imul
pextrw
movsl
jnp
mov
decl
lcall
jp
fs
adc
repz
mov
call
push
jns
mov
int
rcll
fisubrl
xchg
mov
jne
fadd
data16
inc
out
sti
inc
pop
dec
rorb
aad
test
xchg
nop
lds
pop
mov
jle
mov
cmp
lds
and
xor
inc
in
add
push
add
mov
push
xchg
test
sti
insb
scas
aam
cmpsl
mov
or
pop
inc
aam
mov
insl
imull
jmp
pop
fcomps
loope
cmp
imul
sub
jb
push
pop
pop
cmpsl
mov
mov
enter
xchg
jne
xchg
sub
inc
add
sbb
mov
jl
or
pop
arpl
inc
xor
test
push
loopne
testl
in
imul
out
xchg
cld
mov
dec
dec
ret
jns
mov
mov
and
inc
subb
push
in
pop
xchg
and
fisubrs
lret
mov
pop
emms
iret
mov
fisttpll
lahf
out
js
maskmovq
testl
jbe
sub
xor
bound
mov
inc
in
add
dec
and
test
addr16
js
clc
mov
inc
push
sbb
pop
repz
std
xor
mov
mov
and
mov
jno
cwtl
test
mov
inc
xor
mov
or
pusha
sbb
sti
out
xchg
repnz
imul
lods
test
cwtl
cmpsb
mov
sub
xor
nop
test
mov
fs
lret
pop
pop
call
js
jne
lods
rcrl
or
and
ljmp
jns
sahf
jle
leave
mov
push
add
mov
sub
dec
mov
sbb
out
into
fnstcw
xor
sbb
xor
dec
int3
in
xchg
mov
pop
cmpl
popf
jecxz
lods
std
out
orb
ret
push
sbb
fistps
pop
inc
mov
xchg
aad
arpl
into
add
aas
dec
adc
cs
jmp
aam
je
cmpl
in
mov
jns
or
int
pop
cwtl
pop
imul
ret
sub
stos
jae
fst
mov
sub
notb
adc
lods
mov
pop
cltd
mov
into
fcmovb
push
outsb
push
mov
cmp
sbb
mov
cmp
subb
test
fcmovnbe
adc
xchg
jo
push
std
xchg
sbb
mov
push
adc
push
in
lcall
sbb
xor
dec
enter
mov
fwait
outsl
iret
repz
cld
call
sub
outsl
pop
xchg
mov
mov
leave
scas
sarl
fisttps
xchg
dec
out
pop
sti
lahf
pop
inc
test
ret
adc
pop
aad
adcb
ss
push
mov
sub
cmp
popf
negb
cs
mov
xlat
sbb
sbb
call
jge
push
popf
dec
mov
dec
testl
push
inc
lds
lcall
jb
enter
stos
mov
mov
lods
push
pop
adc
inc
cmp
arpl
xchg
sbb
incl
xchg
mov
dec
cld
mov
cmp
addr16
adc
aas
sbb
mov
add
dec
sarl
cmc
lretw
rolb
push
inc
push
push
imul
jae
popf
mov
xor
mov
pop
std
push
hlt
out
movsb
xor
cmp
pop
mov
sub
ds
rcrb
mov
je
arpl
repz
dec
shlb
test
add
sbb
sub
into
xor
outsl
movsl
jle
lds
lahf
mov
aam
das
test
dec
mov
in
aad
mov
lea
insl
add
testb
push
icebp
xchg
mov
dec
movsl
insl
imul
sti
xor
stc
into
pop
je
sahf
and
test
xchg
fwait
mov
mov
mov
call
insl
mov
add
jmp
and
or
xchg
mov
nop
mov
push
xchg
mov
test
jb
sub
into
cmp
cmp
jno
aad
and
scas
popa
xlat
add
out
or
add
lods
xor
mov
ss
enter
and
cmpsb
pop
repnz
or
push
pop
xchg
pop
fbstp
add
and
dec
add
xchg
scas
sahf
push
cmp
setae
jmp
das
in
out
fsubr
push
ret
ja
jno
aam
adc
push
mov
push
cmpsb
pop
bound
mov
jno
in
xchg
lret
or
es
mov
jge
out
add
cmpb
cmp
or
cmp
addr16
outsl
lods
or
rol
stos
out
je
fwait
sbb
adc
fidivl
lea
lods
fnstcw
jmp
dec
je
repnz
push
aas
test
cmp
adc
les
notb
enter
dec
stos
into
push
rorl
add
lods
rol
je
test
icebp
xchg
inc
aad
in
addr16
js
sub
push
xor
aam
mov
repnz
cmc
rorl
mov
push
mov
into
mov
and
push
inc
mov
mov
xor
movsb
cmpb
and
loope
xchg
pop
shrb
add
pop
ds
mov
cmpsl
or
mov
inc
mov
adc
out
ss
adc
mov
mov
jbe
dec
stos
rcrb
xor
bound
mov
lret
mov
adc
sub
pop
push
push
repz
pop
pushf
mov
ret
push
mov
popa
cmp
test
jno
jge
aaa
hlt
bound
inc
std
negl
aad
jmp
jb
sahf
mov
pop
jg
cmp
cmp
add
lock
gs
iret
sahf
aaa
or
xlat
sbb
jo
aaa
lock
sbbb
cmpsl
and
xchg
mov
fs
call
add
mov
pop
adc
loopne
jmp
xchg
xchg
andb
aas
test
test
jp
mov
dec
out
xor
add
cmp
movsl
mov
cmpsb
fdivp
pop
js
pop
cmp
into
fstpl
cmp
xor
faddl
or
and
in
adc
sub
or
ja
mov
cmpsb
sbb
outsl
and
and
pop
cmp
mov
jae
daa
out
inc
jl
inc
insb
push
fisubl
adc
push
dec
push
mov
ds
jae
mov
adc
add
nop
sub
cltd
sub
aas
mov
and
mov
call
xchg
adc
sti
dec
fbstp
mov
nop
pusha
push
jecxz
xor
jne
dec
dec
jbe
lahf
jne
fs
insb
sahf
pop
inc
aaa
or
push
fsubrs
lods
sub
in
dec
jp
ss
scas
clc
mov
xchg
push
aad
shll
xor
fs
adcl
stos
inc
mov
imul
mov
popa
fsqrt
fs
adcl
sub
cmc
std
xor
and
in
rclb
pop
cmp
or
pop
adc
push
push
xor
push
aaa
test
loop
loope,pt
in
lret
bound
sub
insl
aad
sbbl
xor
cmp
lret
xlat
xor
jge
cli
cmc
aaa
pushf
xor
mov
mov
outsl
xor
dec
jae
xlat
cmp
jg
mov
add
repz
pop
pop
and
mov
inc
or
sub
sub
push
popa
jo
lods
mov
push
xchg
sub
int
insb
cmpsl
mov
add
pop
rcl
jnp
push
loopne
mov
es
stc
adc
add
jne
pop
mov
sbb
loope
push
inc
stc
jne
sub
sub
xchg
in
lret
loop
pop
fdivrs
dec
nop
cmp
mov
data16
hlt
and
fstpt
imul
mov
enter
push
in
push
mov
in
sub
and
popa
stc
xchg
fsubl
jmp
std
sbb
pop
mov
arpl
vphadduwq
xchg
bts
add
adc
jo
nop
inc
dec
fmuls
pop
je
jno
cli
movsb
adc
cmp
test
data16
mov
lods
les
loop
lahf
and
outsb
inc
test
jecxz
pop
lods
dec
jo
sbb
movsl
stos
pop
fistl
insl
pop
fsts
inc
sbb
ja
clc
sbb
push
push
or
mov
shll
stos
js
repnz
cmpsb
stc
inc
repnz
bound
in
jp
jecxz
dec
stos
sbb
mov
icebp
iret
adc
jno
push
jns
sub
scas
push
or
pop
popa
std
out
xchg
adc
enter
xchg
mov
mov
pop
dec
mov
jb
inc
jg
mov
into
mov
cmp
or
fwait
shlb
iret
jb
mov
outsb
xor
jae
mov
in
xor
lret
mov
inc
cld
testb
sub
pop
dec
push
fucomip
clc
xchg
dec
cltd
insl
leave
push
inc
add
sub
stos
jecxz
insl
push
aaa
stos
and
in
out
test
lret
scas
adc
sbbl
or
pop
insb
adc
addb
sub
je
out
add
and
ds
lea
lret
cmp
adcb
addr16
scas
mov
jns
lock
cmp
in
push
xorb
pop
jl
inc
sti
shrb
xchg
cmp
mov
and
mov
pop
in
call
jmp
xor
loope
fwait
insb
jmp
std
add
inc
pop
mov
xor
add
scas
dec
sahf
leave
or
sub
leave
xchg
or
jge
pop
push
mov
mov
rcrl
in
mov
mov
das
or
xor
dec
popa
ss
loopne
push
lock
or
or
inc
jp
jecxz
cmpsl
jo
mov
push
test
sub
adc
cs
leave
into
ja
adc
ret
jmp
gs
repz
inc
dec
dec
or
aas
in
adc
dec
jb
mulb
inc
sahf
inc
lahf
fidivs
cli
in
sbbl
xlat
sub
fldl
sub
movsb
clc
popf
andl
xlat
xorl
adc
loope
mov
xor
adc
pop
arpl
dec
std
add
inc
mov
jmp
fwait
inc
cmp
adc
pmaxsw
or
out
lods
mov
mov
lahf
xchg
adc
fwait
push
pusha
addr16
loop
pop
test
pop
and
adc
jp
jmp
mov
cmp
mov
sub
push
out
push
cwtl
mov
push
push
es
out
cltd
js
fisttpl
mul
mov
loopne
outsb
dec
pop
addr16
inc
dec
lods
fsubl
stc
inc
pusha
mov
lahf
pushf
add
and
mov
inc
mov
xchg
into
pop
lds
aam
adc
push
leave
sti
mov
sbbb
sbb
adc
cmp
outsb
mov
rcl
cmp
and
lret
insb
sub
scas
aam
xlat
popf
iret
sahf
cmp
inc
mov
scas
data16
int3
xchg
and
pushl
daa
pop
mov
ret
push
pop
add
mov
jb
pushf
sbb
sub
pop
int3
hlt
pop
xchg
sub
cltd
add
inc
nop
push
je
mov
mov
shll
mov
popa
in
push
mov
jns
dec
cmp
das
mov
aas
movsl
insb
mov
xor
push
orl
aad
loop
xchg
sbb
xchg
stos
inc
iret
jne
lea
sub
addr16
or
data16
rcr
outsl
mov
jge
adc
filds
jg
sti
sub
or
sarl
jnp
push
jl
or
in
cwtl
cmpsb
ficoms
mov
jg
sbb
jb
inc
cmp
jmp
dec
lret
add
sub
loope
cmp
adc
jnp
imul
icebp
mov
shl
mov
gs
push
jbe
movsb
in
push
mov
fsts
or
lahf
cld
movsl
or
mulb
mov
ret
inc
pop
mov
test
cld
stos
in
xor
fstpt
dec
xchg
sbb
mov
movsb
jg
adc
pushf
xchg
lret
mov
addr16
mov
ja
aad
sbb
xchg
fiadds
out
and
out
out
jmp
in
lcall
xchg
notb
int
cld
icebp
push
in
jmp
mov
loope
movsl
pop
mov
loop
xchg
and
cs
imul
adc
xor
sub
cmpb
test
pop
pushf
jmp
leave
push
pop
shll
or
mov
and
inc
cmp
and
and
out
mov
enter
ret
aas
sbb
lahf
mov
push
jmp
or
sbb
sub
jne
mov
int3
mov
sbb
repnz
pop
ss
repnz
divb
and
pop
dec
fdivrl
stos
mov
scas
ret
movsl
in
push
dec
dec
adc
push
insl
mov
xchg
pop
mov
push
fisttpll
add
stc
out
inc
adcb
pop
rol
insb
inc
and
bnd
int
adc
andb
pop
xor
es
inc
call
aam
or
ficomps
mov
inc
pop
xorb
cwtl
ljmp
int3
subl
pop
clc
fadd
xchg
add
and
mov
cmpb
jnp
adc
sub
insl
adc
xchg
jbe
pop
sub
pushf
lds
movsl
push
lret
aam
aas
xor
pop
shlb
clc
ss
dec
cmpsb
sarl
mov
fistpl
mov
das
adc
call
mov
pop
xchg
nop
sbbb
sub
aam
adc
ss
push
sbb
push
jl
fiadds
jns
bnd
jmp
sbb
push
jl
add
xor
ljmp
mov
ffree
fwait
xchg
mov
gs
push
inc
insl
rolb
push
add
stos
inc
fcoms
push
dec
mov
jne
test
iret
add
in
and
xlat
cmpsb
vpavgw
inc
sbb
mov
mov
jge
adc
add
imul
push
jmp
aad
sahf
cs
sbb
lret
pop
cmc
int3
push
pop
dec
je
dec
sbbl
dec
sbb
movl
mov
aaa
dec
sti
sub
fnstcw
jb
sub
dec
push
test
jne
aas
jge
sub
push
fdivl
push
shrl
add
jmp
cwtl
paddb
scas
out
sbb
or
xlat
fcompl
movl
lds
push
in
or
dec
fmuls
jmp
out
cmpsl
and
xchg
or
pop
mov
cld
jmp
mov
sub
mov
test
ficomps
xor
cld
push
add
cmc
jge,pn
push
mov
les
xor
push
lcall
mov
out
shl
and
pop
filds
xchg
loop
mov
dec
cli
push
sbb
ret
mov
xor
fstp
mov
stc
arpl
or
push
into
fwait
dec
lcall
loop
stos
dec
mov
xlat
movb
cmp
lret
pushf
fnsave
add
je
jp
cmp
nop
inc
xchg
jne
jmp
cmp
sub
push
cmpsl
gs
jp
icebp
fstl
cmp
jmp
sbb
mov
das
push
cmc
cmpsl
xor
js
nop
mov
iret
xor
int
pop
outsl
add
cmp
test
fistpll
rclb
fisubrs
adc
ret
iret
inc
adc
pushf
inc
into
inc
jp
loopne
pop
repz
lds
out
xchg
jp
mov
sub
cwtl
xchg
in
in
pavgw
test
add
push
imul
jmp
cmp
fsqrt
xchg
fcmovnb
pusha
sub
pushw
jmp
roll
faddp
xchg
sbb
sub
out
inc
lods
aam
push
outsb
jbe
nop
test
mov
jb
test
bound
inc
scas
sub
jecxz
clc
enter
mov
mov
stos
cmpsb
xchg
adc
pop
loope
movl
sbb
bound
inc
lods
leave
inc
rolb
mov
xchg
cmp
cwtl
iret
fbstp
insb
inc
js
mov
and
outsl
jmp
popf
xchg
jno
dec
into
and
dec
nop
aam
dec
pop
mulb
popf
imul
dec
pop
cmp
out
mov
in
cli
or
jecxz
lret
adc
out
call
sbb
and
dec
repnz
test
lock
int3
sbb
adc
inc
cmp
das
gs
inc
cmc
testb
add
adc
std
pop
and
idivl
shr
cmp
fcom
xor
sub
outsl
cmp
xchg
stos
int3
sub
notl
popf
mov
adc
adc
xchg
xchg
ljmp
insl
ds
leave
inc
add
dec
jno
mov
push
popl
dec
adc
stos
jo
cmp
dec
test
out
mov
mov
aas
dec
xchg
pop
je
adc
mov
sti
add
movsl
in
mov
cmp
or
cmc
pop
icebp
loope
mov
into
mov
scas
lods
fdivs
rdpmc
pop
fdivr
icebp
popa
or
fsubrl
lods
jo
loope
ret
popf
inc
mov
aam
fnstsw
or
out
in
jg
lods
mov
insl
push
and
movsb
repnz
jmp
add
push
cmpl
into
es
int3
add
out
mov
lods
xor
shr
dec
ljmp
inc
scas
stos
cmpsl
mov
dec
adcb
cmc
in
push
and
xchg
in
inc
pop
icebp
cs
push
sbb
jge
and
mov
jle
fmull
lds
cmovp
xor
mov
mov
jle
fiaddl
jge
je
cs
cltd
clc
jg
xchg
filds
iret
loope
push
or
mov
inc
mulb
scas
lret
xchg
cmp
in
jns
bound
sbb
cwtl
in
mov
sub
dec
push
aam
dec
adc
mov
pop
clc
enter
test
pushf
shrb
jnp
push
jge
push
rcrb
mov
inc
pop
inc
test
addr16
sbb
jno
inc
lret
pusha
push
ljmp
dec
scas
mov
aas
sub
sbb
stos
in
mov
mov
jns
dec
test
mov
sbb
inc
xor
sub
test
in
push
punpckhbw
pop
inc
xor
sbb
fiaddl
into
movsb
and
adc
bound
and
and
mov
into
push
mov
add
push
fcomps
xchg
in
fsub
pop
out
out
loop
js
push
fisttps
orb
lods
xchg
idivb
enter
and
cmpsl
cmp
sub
mov
mov
das
data16
adc
xchg
outsl
pushf
aaa
dec
dec
pop
iret
mulb
xlat
or
mov
ds
lods
das
and
pop
pop
testl
dec
lret
push
mov
rcll
gs
aas
xor
out
lea
mov
xchg
mov
lock
enter
cmp
shlb
or
clc
pop
nop
and
mov
daa
lock
jae
add
xchg
int3
mov
js
sub
fidivrs
xor
push
xchg
insb
icebp
frstor
pop
loopne
xchg
pop
adc
jo
dec
sub
stc
outsb
in
sbb
mov
bound
mov
rcll
sub
push
roll
jmp
shlb
xor
stc
call
lcall
roll
das
ljmp
insb
sbb
sbb
lea
inc
pushf
sti
scas
lock
jnp
ja
insb
enter
mov
mov
xor
adc
std
cs
shrl
pand
adc
sub
in
loope
fsubr
stos
pushf
fstpt
jmp
stos
jns
xchg
sarb
fldl
mov
clc
pop
es
add
dec
xchg
les
imul
mov
addr16
int3
mov
mov
jge
push
push
loop
push
add
lcall
lret
clc
pop
xchg
mov
sub
je
sbb
xor
roll
into
in
orb
add
aam
lds
pop
or
stc
mov
fdivl
jecxz
notl
mov
sarl
movsl
inc
leave
test
and
xor
mov
cmc
sbb
sti
ficoml
jecxz
aaa
and
ret
xor
rclb
orb
cmp
mov
and
push
adc
dec
imul
shll
xlat
mov
and
lret
or
push
popa
aaa
outsl
push
movsl
mov
xor
fidivrs
gs
jns
jg
push
outsb
cmpsb
lret
mov
inc
pop
jge
pop
jmp
fnstcw
outsb
pop
jnp
jo
addr16
fdivs
mov
dec
mov
nop
ss
xor
shll
mov
sbb
dec
xchg
fxch
lds
je
mov
test
mov
mov
mov
ret
push
ss
or
jp
jae
shlb
into
add
std
std
es
jnp
mov
lods
mov
loopne
dec
add
mov
cmp
push
adc
push
repz
fsubrl
push
clc
clc
rclb
jge
int
add
arpl
enter
popf
or
data16
mov
inc
das
adc
test
addb
js
aam
mov
dec
xor
aaa
rcl
mov
jg
adc
jge
leave
pusha
dec
add
mov
stos
push
and
sbb
xchg
lcall
stc
incb
inc
mov
out
lea
jbe
push
cmp
shrb
pop
shll
ja
push
xchg
in
addl
xor
negl
adc
dec
sbb
xchg
in
dec
cs
testb
scas
mov
xchg
jp
adc
push
add
sbb
fcomi
arpl
call
ja
xor
daa
inc
jb
negb
or
repnz
dec
out
dec
outsb
mov
pop
testb
cwtl
xor
and
cmp
mov
cmp
and
mov
mov
pop
cmp
sub
lods
mov
mov
scas
out
cmp
mov
js
adc
and
testb
pushf
inc
insl
push
xchg
or
dec
out
mov
mov
pop
addr16
in
and
lret
ja
mov
mov
jmp
mov
lds
int3
xor
pushw
add
fldl
adc
push
adc
add
xchg
cwtl
std
xor
dec
dec
fcmovnu
jecxz
insl
sub
cld
xor
xor
mov
ss
add
shl
ss
adc
cld
xchg
xor
lock
popa
outsb
movsb
xchg
sbb
mov
xchg
daa
rclb
out
jb
inc
into
ret
and
xchg
ret
and
add
scas
and
dec
xor
push
adc
dec
leave
mov
jl
inc
cli
push
cltd
jp
ljmp
scas
inc
add
sti
xor
ds
sub
mov
int
sbb
sbb
push
bt
nop
xor
xchg
pop
inc
mov
sub
dec
adc
and
out
std
push
jmp
imul
push
fwait
push
lock
cmpsb
in
mov
mov
xchg
js
mov
mov
pop
jnp
leave
hlt
xchg
rclb
or
out
add
mov
fidivs
mov
push
fmul
loope
pop
jge
mov
cmp
inc
movsl
pop
aad
lods
stc
xorl
fistpl
in
pop
push
sbbl
rcr
dec
jbe
sub
flds
lahf
cmp
and
sti
mov
lret
fwait
push
pop
shl
jb
or
cmp
scas
and
out
sub
addb
xchg
push
jl
cmp
lret
inc
into
xchg
clc
mov
fldcw
jg
push
imul
cmp
data16
jecxz
cli
inc
mov
out
mov
and
cmp
fcoms
inc
mov
add
push
fs
popa
push
dec
sbbb
mov
dec
jnp
push
xchg
hlt
popf
or
fsubrs
sbb
dec
lea
mov
sti
xor
nop
scas
es
ficoms
and
sub
je
andb
addr16
and
pop
xchg
push
ljmp
fs
loope
hlt
and
or
xor
xchg
ret
test
incl
inc
and
rorl
adc
jecxz
mov
xchg
aaa
jmp
sub
mov
lcall
rcrb
insl
mov
scas
cld
fxch
out
lds
add
cmpsb
or
jmp
pop
scas
std
sbb
and
cmp
pusha
icebp
push
fs
adc
dec
inc
jecxz
or
daa
xchg
je
bound
xchg
stc
insl
sbb
js
mov
outsl
mov
adc
pop
and
mov
pop
in
xor
inc
lahf
addl
xchg
mov
cmp
lods
inc
hlt
clc
inc
ljmp
mov
push
scas
add
in
jmp
mov
xchg
pop
sahf
btc
fisubrl
jo
test
xchg
fadds
adc
adc
aas
mov
aaa
popf
test
out
mov
adc
fnstsw
lret
add
lea
insb
or
vpmulhuw
or
jmp
loopne
inc
adc
repnz
aam
sub
sbb
dec
xor
mov
fsubl
cmp
push
pop
pop
push
sub
jge
xchg
xor
js
popf
leave
mov
cli
mov
dec
outsb
and
lcall
or
jg
icebp
scas
add
outsb
ret
insb
xchg
and
cs
adc
or
imul
cmp
sbb
cmp
fldl
sub
cmc
push
dec
mov
rclb
jge
push
daa
das
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
movl
pop
movl
jmp
sbb
mov
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
mov
dec
mov
jmp
xorl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
adc
push
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
sub
xor
mov
push
sbb
mov
add
movl
cmp
movl
je
mov
sub
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
adcl
push
push
push
push
subl
lea
sbbl
push
addl
push
subl
call
push
andl
call
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
push
push
call
cmpl
jb
add
movl
movl
orl
mov
adc
mov
xor
xor
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
adcl
test
movl
je
mov
mov
mov
mov
imul
orl
mov
sbbl
add
xchg
or
mov
sub
xor
mov
xorl
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
sbbl
add
mov
sbb
mov
sub
mov
movl
xor
add
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
neg
add
adc
mov
orl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
sub
mov
orl
sub
jmp
div
and
xchg
lods
mov
push
dec
and
pop
bound
pop
bound
lcall
xchg
loopne
sub
in
xor
jp
out
test
in
sbb
dec
mov
sbb
or
push
push
aam
jg
cwtl
data16
insb
ret
inc
pop
push
mov
add
push
sub
int
pop
ja
cwtl
or
cmp
outsb
jle
xor
mov
fdivl
popf
dec
push
mov
cmpsl
gs
inc
xor
mov
dec
arpl
pop
or
rcll
arpl
or
dec
rcrl
add
cmp
idivl
mov
lret
push
push
lret
or
fcmovnb
repz
xchg
fildll
adc
sub
cmp
xor
xor
push
int3
bound
clc
pop
pusha
jecxz
and
mov
mov
mov
add
dec
mov
out
mov
push
pop
adc
cltd
cmp
popa
cs
pop
fld
mov
xchg
sbb
push
push
mov
cmpsb
push
mov
jge
push
fs
lock
test
ja
out
out
out
add
fldenv
xor
mov
popa
jmp
mov
xchg
andb
ds
push
adc
or
mov
pop
jo
xor
pusha
in
cmpsl
ss
stos
in
popa
lea
aas
sub
pop
pushf
lcall
mov
push
jp
mov
arpl
es
or
dec
sar
push
arpl
nop
movsb
xor
mov
sub
loope
push
call
aad
xchg
adc
pop
mov
sti
and
add
sti
faddl
out
pop
cmpsb
xorl
enter
inc
mov
cmp
pop
ss
pusha
test
pop
into
mov
mov
xorl
push
enter
mov
lret
dec
jmp
xchg
add
cmpsb
push
and
pop
cmp
or
imul
aad
push
mov
int
mov
pop
jae
sbb
mov
adc
xchg
cli
cld
mov
scas
lods
stc
and
pop
sub
mov
arpl
stos
rcl
or
jg
sbb
nop
cmp
mov
dec
dec
pop
push
scas
pop
lods
mov
pop
inc
imul
hlt
or
mov
bound
push
clc
lret
fldl
aas
jl
jo
sahf
ja
and
jno
fwait
lret
xor
mov
push
mov
xor
add
and
fadd
sub
out
xchg
jo
aad
pop
pop
mov
rep
cmp
pop
adc
insl
and
rcl
cmp
mov
cmpsb
xchg
sti
roll
or
xchg
inc
cmp
pop
test
fldenv
gs
push
je
sbb
mov
dec
mov
enter
jge
fcoml
outsl
and
nop
mov
int
jb
fsubs
fmull
aad
jo
es
mov
fxam
sub
adc
mov
arpl
jbe
std
aam
add
daa
mov
rolb
dec
in
fmul
jne
inc
das
xchg
lods
and
jp
out
rorl
orb
enter
clc
mov
push
aad
push
nop
insb
dec
push
int3
aas
adc
mov
xchg
mov
adc
xor
lcall
jmp
fcomp
and
or
cmp
add
mov
mov
push
mov
mov
mov
int3
cmpsb
add
frstor
int
mov
test
fwait
lea
push
ds
stos
jecxz
cmp
fsubrl
push
ja
clc
mov
daa
sbb
stos
xchg
sub
push
jae
insb
pushf
push
mov
loopne
mov
xchg
xor
stc
pop
jnp
movsb
stc
insb
push
sbb
xchg
out
sbb
mov
pop
vrcpss
and
or
lea
jmp
mov
jmp
sub
xchg
dec
inc
fsts
sbb
loope
lcall
inc
or
out
xchg
insb
xor
xchg
mov
sub
mov
push
leave
sbb
cwtl
sbb
mov
fistps
loopne
repnz
aad
mov
mov
jmp
ret
mov
outsl
call
imul
mov
fucomp
sub
xor
scas
sbb
cbtw
mov
in
cltd
xchg
arpl
jb
mov
fdivrs
scas
cmp
clc
popf
fiaddl
jecxz
popf
popf
out
jno
loopne
cmc
icebp
sahf
scas
insb
xchg
inc
lds
adc
dec
test
flds
les
idivb
inc
jne
rclb
iret
push
jl
jecxz
cmp
aad
ja
mov
pop
in
inc
xchg
xor
sti
into
dec
pop
adcl
sbb
xlat
pop
loopne
loope
repnz
es
cmpsb
scas
cmp
push
out
shll
jbe
mov
xchg
sub
lahf
ret
mov
mov
xor
aad
aam
lock
cmp
cmp
pop
popa
rolb
and
dec
int
ljmp
pop
sbb
inc
loopne
leave
hlt
xlat
xor
lahf
bound
fwait
adc
jno
call
es
inc
cmc
js
jp
mov
popw
stos
add
cwtl
jp
push
xchg
in
mov
inc
sub
les
sub
or
rclb
js
push
fcoml
pop
mov
imul
test
jge
xor
shll
jl
push
jmp
das
jecxz
jmp
bound
stos
movsl
mov
pop
scas
jmp
or
je
sahf
and
add
xor
and
in
out
sbb
cmpsl
scas
into
dec
pusha
adc
in
loope
adc
mov
jl
add
cmp
jge
shll
cmp
jno
gs
or
int
outsl
shll
stos
pop
into
lock
repnz
aam
lds
sahf
in
mov
adc
lret
outsb
inc
dec
hlt
rclb
popa
add
sub
cli
enter
mov
mov
sbb
rcrl
dec
mov
loop
std
adc
jecxz
pop
jb
cmpsb
dec
mov
loope
std
lods
sahf
cmp
les
jmp
jle
fs
je
sub
dec
test
push
inc
mov
or
xor
mov
rcl
mov
nop
scas
leave
int3
popf
stc
mov
popf
es
add
pop
or
dec
stos
enter
aad
fisubl
pop
mov
mov
leave
jbe
add
insl
scas
sub
xlat
sbb
imul
mov
mov
push
add
mov
or
rorl
adc
stos
or
push
mov
in
imul
rol
and
aam
xchg
push
inc
pop
cmp
cltd
xchg
addr16
inc
pop
and
ret
addr16
stos
out
arpl
and
outsl
push
push
sub
call
push
pushf
add
insb
cmp
les
ja
scas
push
pop
adc
cmp
mov
mov
cmp
and
sbb
mov
and
xor
gs
dec
push
mov
or
stc
jae
xchg
cmp
and
dec
bound
xchg
pop
sub
lahf
inc
enter
dec
adc
or
loop
mov
adc
push
scas
dec
sbb
jae
data16
iret
xchg
xchg
mov
shll
jne
notb
aad
int
jmp
es
fwait
addl
adc
pop
add
aaa
cmpsl
addr16
sub
pop
xlat
jmp
lock
mov
xchg
lahf
sub
lahf
adc
xchg
sbb
fs
cmc
mov
pop
cli
xchg
fdivs
xchg
dec
xchg
xchg
repnz
inc
mov
mov
movsb
pop
cltd
jmp
pop
jne
sbb
inc
addl
inc
and
movsl
test
adc
xorb
pop
cmp
dec
mov
fstps
push
add
xchg
ror
arpl
and
pop
add
cmp
notb
ja
loopne
int
push
fdivrs
rcrb
jns
mov
inc
pushf
push
adc
outsl
push
xlat
inc
mov
das
addb
push
aad
or
lahf
ja
mov
inc
ret
je
xchg
pop
pop
fnstsw
fnstenv
dec
pop
daa
scas
loopne
imul
lods
mov
adcb
jmp
popa
sub
das
mov
icebp
repnz
or
add
sbb
mov
rorl
idivb
js
push
ljmp
inc
ret
imul
test
addl
inc
inc
stc
sub
scas
inc
outsl
enter
and
lock
cmp
rorb
sbb
icebp
lcall
fsts
ficompl
pusha
lcall
mov
cmc
pop
adc
mov
jno
sbb
mov
jno
mov
sti
js
mov
xchg
adc
mov
iret
inc
call
mov
adc
jo
ret
jle
shrb
cmp
test
mov
insl
out
fidivrs
in
pop
sarb
call
xchg
cmp
lcall
add
add
mov
xor
fsubs
scas
push
out
lret
rclb
sub
popa
das
sbb
rol
or
mov
std
xor
mov
dec
jae
push
scas
fistps
cltd
les
mov
pop
or
leave
jl
pop
add
inc
mov
mov
pop
leave
jmp
das
push
testb
popl
dec
outsb
cmpsb
or
in
mov
pop
in
push
in
push
mov
stc
xlat
int
jns
xchg
xor
stc
test
push
gs
in
fimull
mov
outsl
pop
jmp
stos
pop
pop
testb
les
iret
nop
cmpsl
in
push
adc
mov
dec
sbb
sbb
lds
icebp
aas
jbe
add
sbb
push
dec
icebp
jmp
scas
or
lret
imul
test
std
daa
loop
sbb
testl
cltd
mov
into
xchg
out
loop
bound
in
aaa
dec
inc
fsubrs
lods
add
inc
sub
inc
mov
jmp
or
jmp
movsl
sbb
es
inc
jge
in
jmp
sub
jmp
test
inc
adc
jbe
arpl
inc
movsb
aam
scas
ret
pop
out
and
jns
push
xor
gs
das
sub
sub
mov
lret
mov
mov
insl
cmp
outsl
and
xlat
jns
pop
xchg
fwait
mov
loope
mov
mov
lret
fisttps
in
sahf
mov
mov
fcomp
in
orl
mov
idivl
xchg
sbb
lcall
in
adc
dec
push
lods
dec
js
sbb
inc
hlt
mov
aas
nop
mov
in
push
shlb
jno
xor
cmp
scas
adc
mov
movsb
inc
mov
stos
jno
pop
jne
sbb
insb
pop
and
test
jp
xor
mov
mov
test
inc
dec
shl
lea
rorl
int
lahf
and
inc
pushf
mov
sahf
lret
shr
inc
cmpl
daa
or
pop
jmp
lret
movsl
das
fwait
and
mov
jne
rcrl
mov
mov
lds
loop
inc
mov
dec
cld
push
ficoms
mov
clc
dec
adc
gs
xor
fmul
cmc
add
pop
dec
inc
cmpsl
loope
pop
mov
inc
cmp
ds
out
ret
sbb
fstpt
pop
leave
cmp
pushf
in
push
or
lds
cmp
pop
lret
cmp
cmp
out
push
or
dec
dec
pop
push
dec
es
xor
sub
jnp
and
push
sub
lahf
or
mov
xchg
sbb
mov
mov
out
xchg
fbstp
test
out
clc
jge
inc
arpl
sub
rcr
cmp
mov
cli
and
movsb
sbb
pusha
inc
dec
xor
js
fdivr
enter
mov
inc
sub
les
and
mov
sub
pop
aaa
bound
mov
cli
sub
clc
mov
ja
xor
leave
test
call
sub
sbb
sub
xchg
or
imul
mov
mov
mov
popa
mov
mov
bound
cwtl
xorl
and
shlb
insl
inc
ja
loop
loop
hlt
lret
add
orl
xchg
imul
adc
fwait
jnp
fimull
sub
cmc
push
jp
jmp
out
pop
push
das
stos
filds
data16
cld
push
jb
or
jns
jnp
jl
jb
sub
sub
icebp
sahf
push
jns
pusha
jno
dec
and
fwait
push
movsl
pop
mov
push
mov
loopne
jecxz
ss
xor
sub
nop
shrl
loop
cli
inc
mov
mov
mov
inc
imul
sbb
movsb
jne
test
sti
lret
push
push
dec
test
or
mov
test
cmp
jne
sub
mov
fdivrs
insb
mov
addr16
lock
ljmp
sbb
dec
jge
sub
mov
and
repz
roll
and
jl
lods
popf
in
mov
pop
cli
enter
xchg
aaa
and
xor
dec
lcall
int
mov
jecxz
mov
shrb
lret
call
pop
adcl
imul
in
jno
and
cmp
xchg
jmp
pop
insb
or
sub
pusha
clc
push
hlt
outsl
jp
fcoms
enter
dec
mov
fldt
rcll
imul
iret
push
mov
xlat
jecxz
mov
inc
cmp
and
shl
inc
mov
mov
popa
mov
movsb
loop
dec
dec
testb
sbb
ds
stc
add
jno
inc
stos
mov
mov
fs
or
scas
imulb
ljmp
or
pop
ljmp
adc
imul
fildll
jns
cmpsb
inc
mov
cmp
xchg
ds
pop
ljmp
mov
jmp
insl
cmc
sub
cmp
fistl
push
push
jmp
dec
pop
andb
scas
add
or
ret
pop
and
inc
xlat
adc
mov
sbb
or
add
test
loope
idivb
mov
notl
rcrl
add
lods
testb
xchg
stos
test
ss
out
insb
dec
cmp
push
and
cmp
aam
data16
pop
inc
and
or
clc
add
decl
fisubrs
rorb
mov
sti
mov
jmp
push
mov
or
sbb
std
adc
je
mov
xlat
nop
push
push
pushf
nop
mov
and
shrb
daa
jl
jge
std
push
jbe
out
push
and
lret
lea
cmp
mov
and
repz
fldcw
stos
notl
jecxz
dec
push
inc
in
xchg
loope
aaa
add
push
test
cpuid
shl
or
sub
dec
fwait
sub
enter
hlt
loop
sahf
sarb
mov
cmp
add
and
ret
xchg
test
sub
test
lahf
pop
repz
jne
cmp
cmp
fsubr
shlb
stc
arpl
mov
mov
adc
xor
xchg
xor
cli
cmpb
lods
sub
cli
pushf
rorl
mov
orl
lcall
mov
jno
sbb
sbb
xor
stos
sbbb
lods
cmpsb
nop
jnp
dec
dec
sbb
xchg
mov
inc
add
leave
or
ret
aaa
inc
arpl
insb
adc
movsb
aas
call
xor
iret
pop
add
jle
bound
cmp
aas
rcrl
dec
into
inc
incl
cmp
loop
stos
dec
cli
icebp
jp
int
lods
scas
fwait
xor
mov
mov
xchg
jno
vfrczps
dec
pop
inc
dec
mov
jae
popa
xchg
pop
shlb
out
enter
fdiv
stos
ror
cmp
mov
xchg
in
sub
pop
and
call
mov
pushf
adc
jl
add
leave
or
lods
gs
sbb
mov
ret
imul
inc
fadd
test
inc
cltd
dec
sbb
enter
push
mov
or
nop
mov
and
push
mov
popa
out
jno
add
dec
pop
popf
je
cmc
sub
pop
xchg
and
and
icebp
sbb
ljmp
dec
cmp
stos
aaa
test
pop
arpl
mov
sbb
sbb
fs
inc
mov
dec
pop
jno
je
sahf
mov
ret
je
pop
mov
dec
dec
ret
add
fisubl
leave
inc
cs
mov
pop
outsb
jnp,pt
adc
mov
push
stc
sub
or
hlt
dec
lcall
xchg
icebp
sub
fidivrs
jo
pop
movsb
mov
adc
sub
shlb
lock
pushf
cmp
sbb
xchg
call
fisubs
push
mov
inc
fcomi
icebp
cltd
xor
dec
mov
imul
adc
out
jne
mov
aam
xchg
mov
add
rcrl
adc
push
xchg
aad
sahf
gs
push
sbb
ret
adc
mov
fsubrl
add
push
jo
or
add
pop
mov
clc
cmp
pop
pop
adc
rcll
ljmp
fs
imul
push
dec
mov
lock
outsl
sbbb
fidivrs
scas
out
les
dec
jb
and
stos
icebp
pop
push
stc
mov
mov
xchg
inc
sbb
ret
push
mov
lods
xchg
or
jge
filds
int3
ret
fidivrl
shll
lret
cmp
mov
ljmp
rcrb
mov
adc
dec
inc
lcall
repz
sarl
xchg
and
sub
mov
out
outsb
xchg
inc
jnp
fidivrs
out
sarb
adc
or
cmp
or
mov
test
cmpxchg
adc
cmp
ljmp
and
pusha
gs
mov
mov
sub
cmpsl
cli
pop
jge
loope
jne
sbb
stc
add
sub
sub
daa
imul
pop
mov
pop
jecxz
mov
add
test
test
inc
or
lret
aam
stos
ret
mov
xlat
js
and
popf
addl
outsl
lea
xor
inc
aaa
imul
outsb
sub
testl
dec
mov
or
inc
jb
jmp
insb
das
shrb
loopne
addr16
pop
add
scas
mov
data16
and
leave
out
and
lods
add
xchg
xchg
stos
add
jmp
inc
sub
jbe
movsb
je
inc
xchg
pop
jge
xchg
fidivrs
std
jae
imul
cld
mov
mov
lahf
test
cltd
lahf
out
js
mov
and
xor
sar
movsl
cltd
ja
das
dec
xchg
repz
cwtl
push
adc
mov
dec
push
insb
stos
icebp
les
jle
nop
rcl
push
shr
xor
mov
and
sbb
loope
add
stos
enter
cltd
sub
cwtl
imull
bswap
sarb
insb
std
mov
ret
iret
lds
aam
xchg
mov
int3
xchg
dec
jo
shrb
sbb
sbb
psubb
push
or
cmp
mov
and
das
push
mov
jae
sub
test
mov
xor
fbstp
xchg
lea
bound
jae
mov
mov
xchg
in
aad
jnp
inc
jno
jbe
sbbl
pushf
insb
aam
add
mov
sbb
pop
dec
sbb
dec
pop
xchg
jno
mov
jmp
or
sub
loopne
or
mov
popf
jge
adc
sbb
mov
mov
int
negb
push
loope
mov
sbb
gs
fisttpll
test
jae
xchg
leave
jg
popa
stos
mov
call
inc
iret
inc
adc
dec
cld
pop
mov
push
adc
add
test
ds
dec
or
test
jb
cmpsb
fldcw
gs
subl
lret
mov
push
lahf
pop
pop
push
push
sbb
sbb
lods
les
addr16
nop
rcrb
mov
push
mov
test
mov
ljmp
adc
test
dec
pop
add
mov
outsb
pop
leave
mov
add
into
inc
mov
cmp
dec
cltd
adc
outsl
sbb
sub
nop
xor
mov
es
and
push
fbld
push
cmp
or
mov
repz
mov
ds
lds
pop
xchg
inc
aad
popa
dec
cld
out
rcll
jno
and
dec
orb
mov
mov
cmp
test
std
fstps
mov
rcrl
insl
mov
lods
pop
add
mov
mov
push
jmp
lea
js
cltd
fwait
push
lahf
inc
dec
mov
cmpsl
lret
dec
ja
adc
cmc
dec
fiadds
in
jno
mov
pop
les
xor
inc
lds
arpl
push
xchg
fisttps
divb
loop
into
add
int3
adc
add
mov
aas
jge
pop
cmp
out
rclb
or
mov
popf
dec
xor
and
and
popf
out
or
xchg
xorl
popf
sub
stos
inc
rolb
sub
xor
ficoml
mov
pusha
xor
cmc
pusha
test
inc
push
inc
xchg
xor
cmp
jnp
ficoml
out
fadds
jmp
mov
mov
imul
sbbb
stos
imul
dec
mov
clc
xlat
push
icebp
mov
mov
xlat
int3
sbbl
out
scas
int3
xor
stc
sbb
loopne
mov
pop
cmp
sbb
jge
pop
call
xor
idivl
adc
mov
pop
and
aas
mov
add
jp
sub
aaa
out
xor
js
es
lret
lock
sti
cs
in
pop
sarl
and
mov
mov
cmp
outsb
xor
pop
dec
jno
sub
jl
lock
out
jae
inc
add
fcoms
test
pop
popf
mov
inc
out
jo
daa
enter
inc
push
pop
mov
and
jp
out
push
js
into
fsubl
add
loop
in
outsb
and
mov
jg
xchg
repz
mov
push
or
iret
jne
ret
sbb
fsubl
mov
rorl
icebp
pop
sub
aad
cwtl
xor
loopne
sub
repnz
fdivrl
xchg
ret
mov
mov
mov
cli
pop
or
sti
sahf
test
push
sbbb
fsubrl
or
lods
pop
fld
add
lahf
mov
fdivrl
mov
shll
push
mov
xchg
inc
mov
sbb
xchg
flds
and
jb
xor
jne
cwtl
adc
ja
arpl
aad
cmc
cmpsl
repnz
leave
inc
movl
mov
loopne
sub
xor
push
shlb
push
repnz
mov
pop
aad
xor
and
stos
in
jmp
mov
inc
clc
mov
cli
subb
aad
test
into
xor
movsl
xor
popa
pop
daa
fwait
or
aas
mov
stos
and
xor
mov
dec
enter
xchg
mov
aas
dec
cmp
xor
jae
es
mov
fs
movsl
popf
xor
jg
daa
mov
stc
test
outsl
inc
scas
add
je
inc
repnz
fs
popf
push
push
pop
add
repz
aas
fstl
decb
jno
mov
dec
sbb
lret
outsl
fcoml
cmp
sarl
lcall
inc
bound
pusha
mov
mov
push
mov
daa
pop
and
jg
call
lret
xor
pusha
mov
xchg
cmpsl
int
sarl
xor
push
je
add
xor
adc
in
sar
ja
sbb
xchg
std
inc
std
fnstsw
dec
jbe
aad
jno
nop
pop
out
jno
jo
xor
shr
and
mov
push
cmp
cmp
jmp
jno
loop
ret
jns
pusha
fwait
push
inc
xchg
push
lahf
fldenv
outsb
idivb
lock
push
and
in
mov
fdivrs
lret
test
sub
out
xlat
pushf
negl
push
or
adc
pop
jns
and
mov
dec
inc
cmpl
mov
push
mov
and
notl
xlat
pop
sub
sub
test
out
cmp
test
popf
xor
pop
and
jne
repz
inc
rcr
stos
mov
inc
dec
rcl
adc
push
jle
iret
xchg
xchg
pop
xchg
pushf
fwait
pushf
push
xchg
movsb
jge
sub
test
ret
xor
mull
inc
push
dec
jnp
push
insl
mov
cmp
pop
push
cmp
adc
pop
cmp
push
aaa
inc
fdiv
inc
inc
mov
loop
xchg
jmp
ljmp
xor
sarl
in
xor
sub
nop/reserved
jl
mov
mov
add
bsf
fmull
popf
cmp
push
adc
mov
inc
icebp
push
and
cmp
push
arpl
xor
pop
clc
aas
push
movsl
rcl
push
sti
clc
mov
mov
mov
in
mov
rorb
rcrl
in
sub
and
jg
sub
mov
pop
lds
sbb
dec
cmpsl
out
jp
popa
ret
arpl
fsts
pushf
stos
mov
out
andl
mov
scas
jecxz
jnp
cwtl
sub
std
fsqrt
xor
inc
cwtl
pop
lea
mov
jmp
lods
push
cmpxchg
das
clc
sti
int3
ret
sahf
push
jg
add
fwait
push
push
mov
xor
sbb
shr
pop
pushf
cmp
pop
push
ljmp
stc
inc
push
notl
fiadds
in
jle
add
test
push
sbb
mov
adc
pop
iret
scas
sbb
stc
out
out
cmpb
repz
nop
stos
loop
xor
pop
mov
mov
movsb
ret
test
jmp
jae
pop
or
repz
cmc
cwtl
aaa
push
or
xchg
dec
ss
push
xchg
jb
gs
add
mov
cmp
or
sahf
sbb
cmpsl
fmull
sbb
cld
adc
loopne
lock
cmovo
add
ljmp
pop
push
cmpsl
jo
sub
adc
xor
dec
pmaxub
cs
cwtl
stos
fbld
or
sub
lods
inc
loope
lea
cmp
dec
loopne
xchg
push
leave
aad
imul
and
and
xchg
xor
jge
sub
repz
rcll
in
push
jge
fisubs
cmpsb
sti
icebp
ret
jge
mov
pop
jo
lret
jo
cli
jmp
jmp
adc
call
loop
call
inc
push
addr16
fdivp
mov
pop
inc
enter
les
cmp
mov
push
movsb
xor
mov
push
xor
pusha
insl
repnz
arpl
add
jg
inc
pop
imul
or
sarl
in
xor
sti
pushf
js
daa
arpl
pop
cmp
jae
test
inc
mov
pusha
cs
lret
pop
call
mov
orb
leave
jle
shll
pop
into
dec
popa
fwait
sub
adc
insl
and
lock
sti
mov
mov
push
aad
repz
jecxz
mov
incl
pop
inc
jecxz
xor
sbbl
fs
mov
loop
jg
fists
jmp
jg
mov
cltd
cld
out
mov
and
cmp
fistps
in
inc
push
cmp
sbb
pop
roll
xor
xor
push
mov
scas
shlb
mov
or
lods
cltd
pop
dec
daa
in
movsl
jmp
push
cmc
mov
sbb
out
jp
mov
mov
xor
xchg
cmp
sbb
cmp
leave
push
and
imul
push
into
sub
sub
xorb
cmp
repz
xor
sub
fldt
push
in
mov
jecxz
cmp
lock
jle
push
sbb
sub
inc
pop
loope
frstor
lea
ljmp
arpl
bound
jo
sub
pop
inc
jo
add
aas
aad
int3
add
ja
xchg
inc
adc
cmp
xor
sbb
mov
adc
jmp
or
aas
inc
paddd
mov
mov
mov
cs
ss
jbe
das
push
dec
fists
push
xor
pop
pop
pop
out
push
inc
cmp
mov
push
or
mov
out
jo
lods
xchg
pop
jle
pop
and
sbb
and
dec
sbb
cltd
jns
sbb
jnp
push
jl
and
out
inc
cmc
mov
mov
int3
jo
adc
cmp
xor
movsl
in
jl
stc
ss
in
jmp
lods
outsl
lea
les
aaa
dec
pop
and
insl
xchg
in
push
sbb
loop
xor
adc
jmp
jno
das
add
jb
fisubl
xchg
adc
push
mov
sub
sahf
and
cwtl
push
push
adc
mov
std
cmpsl
movsl
pop
mov
mov
pop
push
in
or
fcompl
dec
lret
inc
push
mov
stos
bound
cwtl
ja
xchg
js
aam
jmp
sbb
push
add
xor
mov
ljmp
mov
jno
mov
imul
pop
je
sbb
cs
pop
xor
sbb
adc
mov
and
sbb
mov
jb
dec
movsb
test
outsl
or
scas
xor
inc
xchg
jb
outsl
and
jmp
cli
rcll
test
ljmp
jno
mov
outsl
test
fildl
fldt
test
add
xchg
xlat
add
mov
call
sub
loope
mov
in
cmc
push
add
jae
pusha
cmpsl
mov
or
xchg
adc
cmc
sahf
insl
mov
adc
mov
cwtl
fcomps
jne
lsl
insb
cltd
fmull
mov
xchg
mov
stc
mov
or
sbbb
fsub
sub
add
xchg
and
xchg
dec
shlb
aas
cli
loopne
nop
sbb
push
inc
int
mov
push
stos
cwtl
mov
int
sbbl
xor
xorl
xor
movl
cmp
movl
je
mov
xor
adcl
add
cmp
jne
pushl
call
mov
mov
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sub
add
mov
xor
mov
add
movl
cmp
je
sbbl
pushl
pushl
call
sbb
mov
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sbb
mov
xorl
xor
subl
add
cmp
movl
je
mov
mov
mov
or
mov
mov
mov
add
mov
and
mov
and
mov
adcl
add
movzwl
sbb
mov
mov
or
mov
mov
sbbl
add
not
mov
mov
jmp
movzbl
add
mov
mov
xor
mov
andl
add
inc
mov
sub
mov
sbbl
mov
xor
decl
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jmp
into
mov
adc
shll
dec
cmp
cmp
bound
pop
bound
push
xchg
pusha
jnp
xor
in
push
test
push
in
in
sub
jmp
call
xor
rcrb
sbb
lcall
mov
fisttps
aaa
bound
cltd
call
lods
in
pop
ja
xchg
push
sub
or
mov
movsl
push
sub
cmpsl
movsb
scas
fstl
jge
and
xor
loop
test
sahf
sahf
inc
add
fdivrp
cs
add
add
int
mov
push
fwait
mov
xchg
sbb
rcl
orb
cmp
inc
push
ss
jnp
js
jp
insb
fcoml
sbb
push
inc
lcall
movsb
xor
dec
aaa
adc
pop
sbb
dec
shlb
das
cli
je
fists
shll
popa
cmp
push
movsl
or
cmp
sub
orl
enter
inc
fcmovne
push
daa
enter
mov
ret
sarl
or
mov
mov
inc
inc
and
or
jmp
call
push
inc
icebp
adc
dec
out
xorl
cld
out
mov
fstpl
fwait
mov
xor
nop
jb
push
ds
dec
jbe
pop
sub
jecxz
je
sbb
ja
xor
mov
js
and
dec
test
dec
xor
sub
cwtl
clc
inc
inc
sbb
sbb
cmpsl
mov
cmp
imul
sti
lock
dec
sub
cmpsw
jae
xlat
in
mov
inc
jecxz
adc
jae
pusha
add
dec
mov
mov
pop
rorb
or
or
out
and
xlat
fidivrs
pop
out
inc
xchg
sarb
test
dec
push
imul
lahf
mov
movq
stos
dec
or
mov
jge
dec
imul
test
xchg
packssdw
imul
add
aas
fstpt
cmp
sub
xchg
add
sub
or
pop
into
xchg
add
xor
push
mov
outsl
nop
decb
out
jae
mov
adc
les
xchg
sub
push
ret
mov
arpl
xor
xor
cmp
cmp
xchg
sub
in
movsl
dec
mov
orl
inc
aaa
add
and
inc
cmpsb
or
mov
pop
loop
cmpsb
mov
cmp
sbb
inc
inc
pop
and
adc
rcrb
imul
jne
adc
push
enter
mov
test
pop
bound
cwtl
sbb
pop
test
mov
cmpsb
adc
stos
mov
mov
in
sbb
daa
push
jp
fisubs
xor
fdivp
shrl
push
or
popf
sbb
jns
jb
push
test
xchg
mov
push
stc
in
sub
or
adc
loope
test
call
xchg
scas
les
mov
sbb
inc
lcall
gs
fidivl
jbe
dec
aam
dec
aam
add
test
cmc
leave
xor
das
xchg
lods
cmpsb
xor
subl
aam
ja
mov
sbb
jae
rcrl
xor
lcall
jge
mov
cmp
mov
pop
imul
lahf
xchg
popa
inc
in
lods
inc
test
mov
lock
les
dec
mov
push
and
cmpsl
and
xchg
mov
cmpsl
sub
fmul
and
ja
dec
sahf
or
sbb
popa
mov
mov
outsl
or
gs
jae
aad
or
cli
dec
cltd
push
sub
xchg
sbbb
lods
xchg
inc
repz
ret
rorb
jb
jnp
aad
scas
mov
inc
mov
out
cmp
xor
xlat
inc
mov
jo
mov
loopne
rcpps
lods
sahf
xlat
pop
jae
sbb
mov
pop
clc
cwtl
pop
push
push
aaa
add
adc
pop
jge
sub
xor
pop
lods
sbb
or
jp
mov
faddp
and
frstor
loopne
cld
mov
aaa
or
add
pop
pop
dec
mov
pop
push
jns
aaa
lea
sub
ljmp
mov
lret
frstor
fistpl
xchg
add
sbb
in
testb
jmp
test
mov
je
in
addr16
test
pusha
pusha
sbb
cmc
out
adc
imul
push
negb
mov
or
or
imulb
out
sub
jno
addr16
dec
arpl
dec
rclb
and
out
push
push
neg
inc
dec
orl
stos
mov
push
daa
lahf
sbb
imul
pushf
mov
mov
or
cli
sub
imul
cmpsb
aas
test
mov
jo
and
sub
sbb
push
aaa
aad
in
xor
push
push
popf
shrb
dec
xlat
jecxz
pop
mov
lods
add
sub
sub
lock
xchg
xchg
push
out
fwait
push
sbb
insb
add
or
dec
or
pop
loopne
fnstsw
cmp
sbb
inc
add
popa
push
inc
icebp
inc
add
mov
lret
enter
pop
lds
cmpsb
pusha
mov
sbb
js
out
push
ja
cli
int3
push
push
lods
call
mov
mov
pop
push
mov
push
xchg
data16
js
jnp
dec
repz
inc
out
cmp
dec
jmp
pusha
insb
mov
xchg
mov
add
push
in
mov
inc
fstl
ja
cli
push
sbb
cltd
mov
inc
jg
int3
popa
push
sub
xor
mov
js
sahf
xor
push
shl
and
divb
loopne
dec
aad
mov
dec
movsl
mov
leave
sahf
and
rcll
enter
loope
daa
aas
adc
sti
mov
dec
inc
inc
nop
xor
in
mov
or
fst
adc
ljmp
add
xchg
mov
pop
adc
or
push
mov
cwtl
xor
rcll
and
inc
sti
xchg
unpckhps
pop
flds
xorl
mov
push
rolb
jno
mov
movsl
gs
sub
mov
iret
fldcw
je
mov
xchg
cmp
stos
rcrl
scas
popf
aaa
ror
test
out
sbb
sbb
pop
mov
jae
xchg
repz
imul
fdiv
xor
push
popf
mov
outsl
rcrl
insl
test
fcoms
mov
inc
jmp
cltd
lds
arpl
pop
bound
bound
lcall
push
xor
sti
sub
xchg
jle
and
xchg
mov
movsl
pop
sbb
mov
dec
cli
mov
adc
je
sub
push
sub
std
mov
push
movsb
psubsb
mov
andl
jmp
in
loop
lds
daa
lea
mov
jo
push
mov
jg
movsl
xor
imul
pop
cmc
mov
call
dec
in
mov
inc
sub
sub
jnp
mov
sub
jns
addb
push
xchg
jne
pop
mov
adc
fstpt
or
movsl
dec
jecxz
cs
pushf
repnz
cmp
push
clc
repnz
xor
imul
into
sbb
dec
mov
xor
inc
push
push
setl
outsb
xlat
inc
add
push
imul
push
inc
inc
push
into
lods
cmpsb
sub
ljmp
cmp
cmp
loope
push
outsb
xchg
mov
pusha
or
lea
inc
in
mov
sbb
hlt
test
mov
ss
mov
sbb
xor
dec
scas
xorb
push
sbb
push
mull
push
push
and
mov
xor
aaa
movsl
sub
cmp
roll
sahf
mov
int3
dec
dec
sahf
insl
mov
outsl
adc
cmp
pop
and
xor
xor
mov
and
sbb
dec
pop
dec
push
lds
mov
cmp
add
fcmovnbe
addr16
pop
cmp
sub
sbbb
pop
xchg
rcl
cmpsl
ss
leave
mov
sbb
mov
aad
jae
fisubs
insb
std
pop
pop
dec
mov
out
push
sub
add
and
shl
xlat
insl
mov
into
and
shlb
cmpsl
and
dec
xor
mov
hlt
shlb
pop
fimuls
out
ja
mov
add
push
or
jo
pop
inc
fstpl
dec
gs
sub
movsl
mov
pop
sbb
in
pop
push
cmp
adc
dec
call
xchg
add
mov
repz
inc
jmp
jle
in
mulb
daa
adc
in
jecxz
jno
mov
xor
inc
jb
or
iret
and
add
nop
lea
gs
fs
aas
cmp
jge
scas
aam
dec
sbb
fldl
push
mov
xor
dec
rcll
cmp
cli
cmp
mov
pop
test
sbb
rolb
in
mov
inc
inc
aad
inc
mov
adc
cmp
jne
mov
clc
popf
push
std
mov
bound
xchg
mov
and
inc
cltd
cltd
sub
cs
aas
mov
add
inc
sbb
push
aaa
cmpsl
dec
mov
pusha
mov
mov
or
xchg
repnz
repz
and
xchg
push
repnz
mov
push
jp
push
lock
mov
xchg
sub
and
std
push
xor
pop
push
loop
movsb
add
xchg
mov
pop
push
xchg
xorb
dec
dec
mov
dec
loop
cltd
mov
clc
sarb
mov
fsubs
int
sub
loopne
loopne
test
sbb
daa
std
push
ja
sbb
aam
pop
mov
mov
into
xor
jp
pop
enter
loope
icebp
pop
loop
jae
inc
mov
inc
xor
mov
scas
adc
cmp
adc
xchg
cld
push
mov
fcom
cmp
adc
xor
sub
inc
out
and
add
lea
jle
or
loop
sahf
pop
cmp
xchg
mov
push
lods
inc
arpl
push
loop
and
push
jae
mov
mov
mov
in
dec
pusha
jbe,pn
lods
jl
cmp
and
mov
or
or
sbb
rolb
sub
jo
clc
gs
jl
adc
into
clc
pop
sbb
cmp
and
repz
cld
shll
pop
je
mov
xchg
xchg
out
imul
fstl
dec
idiv
jae
inc
out
cmpl
aam
stos
xlat
repz
hlt
arpl
pop
in
xor
mov
mov
sub
es
je
arpl
and
xor
cmc
mov
stc
rcrl
jmp
fwait
adc
mov
std
psrld
pop
adc
adc
xlat
repnz
imul
mov
jae
inc
adc
lods
sub
cs
cmp
mov
push
test
jbe
add
jp
pop
addr16
mov
scas
sbb
cmp
xor
stos
loopne
push
fadds
jg
fadd
int
mov
add
sub
cmp
lea
insl
push
cmp
xchg
in
inc
aas
cmp
sub
cmpsl
xor
lret
loop
andb
addr16
mov
je
lods
pushf
loop
movsl
inc
enter
fidivl
fwait
or
out
inc
mov
sbb
shll
xlat
jae
popf
hlt
in
mov
pop
jb
stos
lret
js
cwtl
jcxz,pn
fbstp
sbb
jle
mov
or
xor
inc
pop
jge
popf
pop
push
sbb
push
add
fldcw
insw
push
sub
int3
stos
insl
fistps
or
test
mov
sub
inc
dec
sub
jb
sub
pop
xchg
movsb
bound
sbb
shlb
imul
push
mov
adc
mov
subb
add
inc
pop
cmp
jae
cmp
fadd
loop
stos
adc
push
test
add
inc
lret
lods
dec
fwait
cmpsb
pop
mov
lcall
mov
and
lcall
andl
and
push
or
xor
xlat
std
pop
jp
pop
or
repz
cmpsb
hlt
imul
jp
xchg
repnz
jmpw
jl
std
scas
mov
shll
sbb
sahf
jle
call
cld
add
mov
dec
xchg
cmp
daa
das
ljmp
dec
adc
adc
jle
or
mov
aam
mov
dec
mov
cmpsb
cmc
pop
cltd
lea
cmp
ss
pop
push
fstp
inc
leave
add
movsl
dec
push
mov
and
sbb
xchg
cs
cmp
das
cmpsb
mov
lods
push
out
jo
fs
mov
jp
les
mov
repz
loop
iret
pop
mov
pop
in
xchg
aas
addr16
movsb
sbb
mov
dec
sbb
sbb
stos
test
sub
mov
addb
orl
movsl
cmp
sbb
cmpsb
add
gs
xor
add
movsl
xchg
push
int
btc
cld
test
cmp
pushf
insl
mov
push
xchg
ret
add
loop
test
leave
mov
test
in
test
lds
enter
cmp
aaa
fidivrs
inc
rcrl
dec
test
leave
nop
add
rolb
xchg
cmp
mov
cmpsl
or
push
jo
and
jns,pt
out
inc
in
leave
push
ficoms
in
dec
adc
cmp
mov
pop
mov
jmp
xor
out
lea
pop
jle
icebp
sahf
jae
pusha
adc
sti
inc
push
je
testb
insb
shl
jecxz
sub
stc
loopne
loop
das
push
testl
dec
adc
push
jle
std
lea
push
sarb
fildll
mov
cmc
inc
mov
fsub
mov
or
adc
mov
outsl
cmpb
sub
push
icebp
jns
scas
push
pop
loope
mov
xor
idivb
int
cmp
cwtl
or
push
push
aam
jno
mov
sti
cmp
push
add
sub
lcall
pop
pop
mov
xchg
sub
pop
xor
jmp
imull
cli
mov
add
dec
xlat
cmp
adc
cmc
fwait
ja
pop
jle
dec
ljmp
add
mov
or
negl
add
call
adc
mov
dec
dec
adcb
cld
adc
mov
mov
pop
push
mov
jmp
addr16
inc
jmp
xchg
scas
rol
mov
sub
mov
fsubrl
add
dec
test
dec
ljmp
push
pop
and
push
sub
pop
xor
adc
add
jle
or
inc
into
cmp
in
mov
js
cltd
fmul
ja
jo
fwait
loope
jo
inc
sub
and
dec
fwait
lods
push
adc
rorb
adc
loope
out
mov
inc
repnz
icebp
cmp
sbb
or
push
xchg
lahf
mov
enter
and
in
rcrb
mov
ret
push
xor
frstor
inc
inc
lea
pop
pop
ss
vmread
push
orb
jae
push
pop
data16
and
adc
push
sub
nop
sub
insb
cltd
icebp
outsl
aas
mov
in
fwait
xor
xchg
mov
cmp
pop
cmc
mov
icebp
jne
mov
js
push
jmp
stc
adcl
sub
add
inc
repnz
ficomps
out
test
scas
and
push
imul
je
sti
add
inc
adc
in
xchg
aaa
rol
dec
rclb
add
arpl
or
and
sub
pushl
mov
push
daa
outsb
daa
outsb
mov
orb
cld
push
add
mov
or
movl
les
xor
and
push
jno
lcall
xor
mov
jb
sub
sbb
xor
in
jae
mov
push
data16
jle
cmpsl
lgs
cmp
or
mov
pop
imul
push
out
xor
pop
add
add
jl
mov
pop
ss
mov
cld
test
inc
push
inc
insl
and
mov
into
fnop
call
mov
lock
out
shl
xchg
cmp
lahf
mov
aam
sub
mov
repz
add
fdiv
inc
je
fs
cmp
lret
mov
cmc
mov
pushf
aaa
mov
dec
nop
decl
aas
mov
pop
xchg
xchg
cmp
jae
popa
into
popa
test
push
xor
in
and
adc
mov
mov
cld
rcl
fcompl
mov
shrb
sbb
push
pop
cmpl
jno
ficomps
add
rolb
inc
sti
sbb
imul
nop
dec
inc
sub
shrb
mov
ds
out
andl
or
add
jbe
mov
insl
aas
sub
cmpsb
cs
test
mov
insl
lods
mov
jl
dec
arpl
dec
fdivrs
push
ja
adc
xchg
hlt
enter
lahf
xchg
call
pop
adc
leave
xchg
sub
scas
movsb
aam
lods
xor
jle
jecxz
and
pushf
mov
mov
test
mov
in
mov
mov
adc
mov
and
icebp
aam
jge
add
ret
sub
cmp
jb
repnz
lret
sti
mov
or
cmp
sbbl
ja
stos
hlt
rorl
js
xchg
pusha
inc
data16
jl
mov
pop
jae
push
and
xor
mov
push
and
ds
jo
fldt
jmp
stc
pop
mov
pop
sahf
outsl
sub
xor
add
inc
xchg
pop
mov
std
js
sub
fwait
cmc
dec
rcll
loop
inc
mov
aam
pop
mov
xchg
adc
adc
rorb
cmp
jne
dec
jge
inc
inc
pop
das
inc
mov
sub
out
xor
mov
das
popf
fdivl
cmp
int3
or
loope
sub
ss
add
sub
inc
cmp
fisubl
daa
in
fcompp
dec
fisubl
push
frstor
sbbb
pop
sub
mov
data16
adc
dec
add
clc
push
jge
rcrl
mov
sar
cmp
rcrl
mov
cli
mov
pop
jg
push
pop
push
aam
lret
arpl
fistpl
jbe
rcrb
cs
push
into
pop
lods
pop
dec
push
je
inc
cmpsb
jmp
sahf
or
mov
call
cmp
pop
push
jg
add
mov
mov
or
sarl
in
or
icebp
fsubl
and
adc
es
icebp
mov
out
xor
jbe
ficoms
lahf
stos
push
sub
mov
xchg
push
xor
cmp
imul
mov
adc
popl
insl
fdivr
xor
mov
leave
sbb
es
inc
push
mov
cmp
leave
jecxz
loope
or
imul
add
popf
icebp
rorl
dec
xchg
shrl
outsb
xlat
jnp
lea
lods
ret
lahf
pop
call
icebp
jl
neg
dec
pop
shll
out
repz
and
stos
push
xchg
test
add
mov
fwait
pop
in
testb
fwait
or
sub
lock
adc
push
ret
out
xorl
in
sti
lock
sbb
sti
sbb
or
lock
sub
add
fcmovu
lcall
lea
push
dec
xchg
mov
rclb
sbb
scas
aam
rolb
sub
loopne
shll
out
mov
aas
xor
jo
fiaddl
sbb
pop
repz
subl
sbb
pop
jmp
cmp
aaa
adc
imul
xchg
stos
xor
cli
or
paddq
xor
sbb
stos
mov
faddp
and
jmp
shrb
xor
test
test
nop
mov
or
je
mov
cmc
adc
inc
push
testl
inc
insl
push
loop
cmpsb
sbb
inc
pop
outsb
loope
push
sbb
cmp
les
dec
and
rcr
cmp
repz
aas
test
rcrb
mov
std
sbb
test
js
lret
mov
xchg
mul
outsb
movsb
inc
pop
add
int3
sbb
dec
mov
inc
pop
xchg
dec
nop
cmpsl
jbe
sti
jne
out
pop
enter
mov
divl
jl
out
aad
xor
fiadds
mov
pop
dec
mov
push
mov
add
sbb
inc
mov
ret
ljmp
ret
adc
fnsave
dec
push
mov
jne
sub
mov
fs
jmp
xchg
adc
mov
int3
add
test
aas
sub
lret
add
leave
mov
inc
mov
and
ud1
mov
adc
test
and
mov
adc
mov
pop
lret
outsl
test
jmp
mov
lret
sahf
add
cmp
mov
sub
fisubl
mov
pop
int3
cmp
lea
jno
mov
adc
ja
js
mov
mov
sbb
mov
mov
xor
push
lds
jecxz
mov
fidivl
and
cmpsl
mov
push
xchg
xchg
jecxz
ret
rclb
or
mov
or
jo
sarb
pop
rol
jmp
jmp
cmp
clc
sbb
adc
add
mov
std
nop
fildl
pop
test
jle
xor
into
dec
lock
pop
jb
fxch
mov
inc
pop
popf
push
mov
pmuludq
sbb
fsubrl
loope
fwait
repnz
and
mov
scas
mov
call
mov
mov
sbb
call
test
inc
paddw
add
fisubl
ret
pandn
cmp
popa
push
mov
mov
js
xor
sti
loop
pop
scas
mov
ljmp
out
xchg
xchg
or
leave
clc
sbb
out
push
jnp
repnz
les
and
popa
add
or
gs
jp
dec
hlt
pop
mov
mov
loope
movsb
fcompl
outsl
popf
repnz
dec
imull
in
or
cli
jns
mov
adc
mov
mov
mov
sahf
dec
clc
mov
jns
pop
push
push
xchg
mov
popa
add
mov
pushf
sub
add
out
mov
jbe
cmpsb
xchg
stos
jnp
mov
insb
add
pop
adc
sub
gs
pop
inc
data16
lds
jp
shlb
test
gs
mov
xchg
sub
jb
ds
rolb
cmpsl
push
movq
pusha
or
xor
inc
movb
add
sub
mov
add
or
or
dec
ds
ja
addr16
hlt
push
dec
xchg
fistps
and
in
sub
div
into
out
inc
inc
mov
or
movd
dec
inc
es
rcl
push
shll
hlt
pop
mov
push
jg
cwtl
mov
into
jmp
mov
push
mov
mov
cld
add
shrb
enter
cmpsl
and
aam
popf
cmp
dec
jmp
xor
lea
cmpsb
cmpsb
and
mov
jnp
sbbl
decl
lods
lret
dec
jmp
and
sbb
or
fwait
jecxz
jns
jae
mov
icebp
fistpl
xchg
data16
stc
in
add
dec
or
mov
ds
or
insb
adc
les
jno
out
popf
addb
mov
jecxz
iret
mov
cmp
stc
jge
mov
push
sbbl
nop
jmp
pop
jnp
sbb
scas
push
cltd
pop
mov
fmull
mov
push
add
adc
das
test
movsb
mov
jae
leave
inc
and
sub
jne
pushf
into
adc
cmp
add
jno
ja
fucomp
cltd
sbb
scas
adc
push
fnsave
adc
mov
xchg
ss
pusha
mov
mov
pop
sbb
xor
mov
xchg
inc
fisubl
and
push
mov
sbb
ret
imul
mov
popf
inc
xchg
dec
push
push
aad
outsl
out
and
xchg
cmp
add
lods
mov
pop
jecxz
nop
and
inc
and
fmull
insl
xor
add
scas
add
xchg
lcall
out
xchg
push
inc
aam
ret
mov
push
addw
and
call
pop
test
adc
js
fldcw
inc
imul
imul
inc
movsl
jp
and
fs
xchg
or
lret
pop
aaa
sarl
imul
fnstenv
xor
pop
out
xchg
stos
loopne
jmp
mov
scas
mov
shr
mov
pop
adc
lea
mov
lods
mov
testl
rcrl
mov
pop
addr16
lahf
pop
dec
test
push
out
sub
mov
test
outsl
adc
hlt
inc
xor
and
jae
ret
and
rcrb
ljmp
hlt
shrb
fcomip
sti
mov
mov
sbb
std
sub
push
stos
sarl
push
xor
mov
mov
iret
popa
adc
and
js
aam
jo
mov
pop
dec
xchg
fwait
bound
incl
repz
loopne
jns
pop
sub
mov
and
jmp
outsb
test
loop
in
or
out
push
lods
add
mov
mov
and
push
mov
movsb
in
ja
push
jae
popa
mov
inc
push
stos
xchg
mov
and
mov
mov
int3
lahf
aad
test
fnsave
mov
mov
in
mov
hlt
sub
ret
add
adc
test
lret
mov
xor
repz
test
ljmp
rorb
arpl
adc
push
repz
movsl
lea
jae
pop
mov
ret
cmp
std
sbb
sti
inc
stc
inc
pop
into
jbe
jg
add
mov
adc
pop
sahf
dec
cmp
mov
test
jp
subl
mov
popa
arpl
or
jno
mov
jno
gs
jmp
cmp
cwtl
jecxz,pn
fcoml
jmp
cmp
and
mov
cmp
lods
pushf
orl
fs
je
idivl
hlt
clc
mov
dec
xchg
cmpb
xor
push
mov
psllq
out
sub
lock
xchg
mov
shlb
loop
imul
incb
cmpsl
int3
lock
push
jge
loopne
fincstp
ret
jle
notl
mov
jbe
notb
jae
cmp
xor
pop
push
lods
sub
fmuls
in
pop
clc
xchg
aaa
iret
lret
sub
or
rcrb
sub
lret
adc
nop
and
or
fcoms
out
jp
adc
mov
mov
scas
or
enter
stos
mov
or
mov
inc
or
push
push
push
mov
clc
dec
jl
inc
pop
pusha
jb
loopne
push
movl
sbb
push
lods
or
jb
cld
jae
xor
jae
dec
mov
xchg
xor
mov
mov
aad
xor
sahf
aas
or
sbb
dec
sbb
dec
pop
dec
dec
xchg
mov
std
adc
pushf
mov
push
shr
or
mov
outsb
clc
dec
push
pop
scas
icebp
mov
jl
bound
movsb
or
mov
inc
push
cmp
xchg
push
stc
lods
movsl
cli
ret
iret
sar
cmpsl
test
icebp
adc
js
dec
sbb
xchg
sub
inc
orl
out
ja
inc
out
cmp
popf
cltd
pop
push
jmp
xor
cltd
lahf
negb
jo
int3
mov
mov
movsb
cmp
ljmp
mov
out
xchg
mov
call
jl
mov
and
sub
xchg
mov
ljmp
sub
sub
aaa
pop
out
cwtl
xorl
es
lcall
in
dec
cmp
dec
outsl
mov
addb
into
cmpsl
imulb
js
pop
out
or
repz
dec
adc
pop
sti
ret
cmp
jbe
aas
out
jl
inc
cs
repz
dec
sbbb
imul
out
xchg
push
mov
jl
dec
les
xchg
mov
add
in
jecxz
inc
idivl
or
mov
test
cmp
push
std
sub
test
mov
mov
xchg
inc
push
mov
cmp
add
out
add
jg
fidivl
jne
rorl
sub
jp
mov
pop
push
cld
loopne
shrb
adc
mov
je
adc
mov
cwtl
cwtl
popf
xor
std
stos
popf
pop
mov
outsl
dec
sub
dec
xchg
mov
mov
mov
mov
or
loope
pushf
sub
inc
rorb
imul
out
mov
popa
ret
ja
aas
lahf
push
cmp
icebp
jne
jne
pop
pop
pusha
int
dec
cmp
aad
in
hlt
lret
jg
xlat
sbb
xor
gs
cli
push
incl
daa
icebp
mov
or
jae
sti
lods
cmp
mov
pushf
or
dec
and
test
lahf
sbbl
es
mov
inc
push
cmpsb
sti
mov
dec
cli
fwait
test
pop
add
mov
pop
fimull
sbb
adc
cld
xor
or
rcr
ljmp
sar
lds
rorl
testb
movsb
hlt
mov
out
dec
xor
jne
hlt
add
nop
rcl
jnp
mov
pop
int3
je
and
cmpsb
std
jne
mov
mov
and
xor
icebp
inc
aaa
mov
inc
fdivr
decl
add
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
xor
xor
and
movl
mov
sub
mov
and
mov
xor
add
mov
movl
mov
sbbl
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
xor
push
mov
mov
add
mov
mov
mov
mov
jmp
push
add
mov
add
cmp
sbb
sub
bound
lret
sti
mov
cmp
mov
mov
lea
push
in
int
sbb
andb
adc
loop
cld
hlt
mov
sub
mov
out
outsl
jmp
mov
pusha
sti
lods
in
filds
push
cmp
xor
inc
mov
mov
jmp
int
and
xchg
xchg
or
xchg
mov
sbb
push
sarb
popf
xor
inc
add
or
lds
jne
nop
sbb
cli
insl
iret
mov
pusha
aad
push
push
sub
pop
dec
lahf
jle
lods
xchg
in
ja
add
test
mov
cmpsb
xlat
dec
mov
or
fstps
pop
push
mov
lret
cmpsl
xor
xchg
cmpsl
push
aad
iret
es
push
xchg
scas
xchg
push
xrstors
dec
xor
cmp
mov
movsb
add
jecxz
das
xor
out
mov
add
jle
pusha
cli
pop
cmp
sub
xchg
cli
add
mov
dec
roll
xor
mov
gs
seto
ds
pop
scas
pop
leave
jae
jo
sub
adc
jo
or
dec
sub
das
hlt
into
xchg
pop
out
push
mov
adc
out
into
mov
and
rclb
push
mov
js
fcomp
movsb
pop
mov
fldl
xchg
pop
cmp
and
lds
and
pop
inc
ljmp
out
or
mov
fnstcw
dec
cmc
mov
ljmp
cmp
es
mov
leave
gs
fcmovne
pop
xchg
pop
jnp
fsubr
mov
negb
movsb
push
jns
sub
pop
mov
add
in
pop
xchg
mov
inc
cmp
scas
out
dec
push
cmp
pop
stc
dec
or
and
and
scas
ror
sub
push
push
pop
dec
xor
lods
lret
clc
imulb
clc
push
xor
mov
sbb
xor
xor
inc
xchg
ljmp
aas
jne
nop
mov
xchg
xor
sbb
les
push
xchg
adc
andl
cmpb
mov
rcll
mov
xor
jns
push
cld
movsl
jno
fistpll
jnp
in
mov
xor
test
cmp
call
dec
js
sub
rolb
dec
test
repz
mov
jnp
adc
dec
push
rolb
imul
xchg
fdivp
jb
cmp
and
pop
mov
dec
shll
fisubl
aad
sbb
sub
pop
cmp
xchg
stc
xchg
arpl
insb
push
and
fmul
scas
xchg
sar
jge
js
pop
pop
inc
bound
dec
cmpl
mov
jb
es
cwtl
mov
inc
mov
mov
mov
ret
les
sub
fistpll
sub
push
adc
mov
add
jb
cmpsl
ret
icebp
and
lods
sbb
fucomi
and
negl
sbb
loope
call
pop
inc
icebp
push
pusha
xchg
xchg
in
dec
and
add
repnz
xchg
add
fnstcw
imul
int3
push
test
inc
push
decl
fnsave
test
mov
cmp
push
xor
pop
dec
push
push
add
pop
push
loopne
xchg
scas
mov
push
incl
xor
test
add
jle
push
movsb
pop
jne
mov
dec
lcall
mov
push
sbbl
jp
xor
mov
adc
lds
push
out
mov
in
pusha
hlt
cmp
sahf
pop
das
adc
sub
stos
and
rcrl
pop
jecxz
popa
sbb
add
data16
dec
add
dec
add
adc
mov
jbe
mov
sbb
mov
dec
mov
mov
out
stc
pop
movsl
call
push
mov
cmp
mov
sub
ds
adc
mov
lock
jl
pop
int
nop
mov
mov
call
and
clc
stos
out
ljmp
shrb
mov
dec
jge
xchg
scas
sbb
ljmp
add
sub
xor
xor
mov
sub
std
xchg
adc
aam
jb
mov
mov
pop
mul
repnz
ficoms
mov
dec
or
adc
fsts
bound
ret
aad
imul
lea
push
test
test
fnsetpm(287
sub
imul
and
mov
cmpsl
sub
pop
mov
jo
movsl
les
pop
or
ror
je
push
cmpsl
mov
test
mov
shlb
lds
add
and
and
jbe
xchg
pusha
pop
or
and
xchg
mov
jg
inc
pop
ss
mov
jp
and
xchg
imull
cmpsl
fidivrs
dec
ret
test
push
mov
jp
sbb
popf
popa
push
mov
or
cmp
or
test
repnz
mov
test
add
bound
and
int
adc
xchg
dec
aam
or
insl
xor
cmpsl
ljmp
je
push
int
mov
outsl
mov
add
negl
add
mov
movsb
ret
inc
imul
stos
dec
add
lret
in
in
pop
aad
movsl
mov
mov
test
pop
dec
test
mov
pop
xchg
sbb
in
jbe
lods
test
mov
pop
cmpl
in
dec
repnz
mov
sbb
insb
add
inc
jb
pop
cs
sarb
jge
push
nop
and
dec
sub
adc
insb
shr
push
cld
dec
sbb
loope
adc
dec
pop
shrl
je
push
mov
jns
insl
fsubrp
jno
sub
fstpl
clc
jnp
pop
cmpsb
movsb
mov
xchg
test
cltd
pop
push
mov
pop
adc
xor
or
cmc
cmp
rcrb
add
mov
sbb
xchg
je
in
pop
xchg
mov
xchg
mov
push
shl
mov
jno
mov
lret
shlb
xor
movsb
roll
mov
mov
outsb
add
das
testl
cmp
mov
rol
pop
hlt
sub
jp
sahf
scas
sbb
mov
mov
mov
pusha
popf
lods
dec
or
inc
fidivrl
es
dec
lods
cmp
data16
in
ss
jo
dec
cwtl
mov
pushl
arpl
sbb
or
fisubl
inc
or
xor
sahf
movl
sbbb
push
cmp
pop
ret
lds
sbb
popf
jne
xor
push
push
fidivrs
cs
pop
imulb
mov
mov
cmp
dec
xchg
adc
sahf
xor
jb
mov
insl
sbb
mov
js
xor
mov
dec
cmovnp
xchg
or
and
mov
push
lock
sub
jmp
xor
int3
mov
xchg
fimull
add
jge
push
ja
lods
sbb
inc
js
test
pop
xor
mov
xor
loop
ljmp
pop
cmc
mov
scas
stos
int3
out
pop
xor
cmpsl
cmpsb
ret
jl
push
jnp
mov
test
mov
jecxz
xchg
lods
xchg
in
adc
xchg
pop
sbb
stos
sub
ret
rolb
int
imul
mov
dec
ja
ror
push
loope
iret
in
and
xor
jns
dec
xchg
jmp
rcrb
lea
fsubl
adc
inc
push
fidivrl
stos
pusha
je
in
subb
les
cs
popf
sbbl
mov
inc
adc
push
push
leave
push
push
pushf
adc
xchg
jae
je
xchg
push
outsl
jmp
cmp
xchg
enter
sbb
push
xor
cmp
or
push
sub
in
inc
mov
lods
inc
fcomip
sbb
call
add
jl
cltd
aas
add
out
incb
sub
ret
and
inc
xchg
addb
mov
jne
frstor
inc
fadd
cs
lds
cmpsb
aas
pop
inc
mov
cmp
in
dec
xchg
and
lds
xchg
xchg
push
es
and
jne
jl
lds
aaa
test
push
test
cli
mov
pop
repnz
add
mov
or
int
jnp
lret
push
jbe
xor
mov
clc
and
jg
or
dec
mov
fsubrs
int
das
ja
pop
sbb
incl
addr16
or
pop
sub
mov
adc
xchg
push
push
and
pop
and
stos
inc
sub
cmpsb
pop
or
push
mov
mov
aas
adc
or
loopne
mov
mov
dec
cmp
sub
dec
xchg
shrl
jl
push
cmp
out
adc
leave
jge
lahf
test
cmp
push
ret
out
sub
xchg
mov
and
das
jl
or
lret
clc
outsb
das
mov
test
arpl
into
mov
mov
xor
pop
scas
or
gs
in
fwait
xchg
mov
mov
add
jmp
add
or
cmp
jb
stos
outsl
cmpb
iret
and
push
sub
aam
inc
xor
or
rcr
repnz
dec
push
lahf
cmc
es
in
clc
xchg
lods
cs
popf
jns
bound
fs
movsb
pop
fsubl
jo
cmp
int3
jae
enter
and
aam
js
jnp
pop
lock
push
lret
xchg
mov
roll
lock
mov
adc
xchg
push
pushf
lock
js
adc
add
mov
pushf
loop
nop
mov
in
adcl
cld
cmp
cs
dec
mov
pop
xor
push
and
out
sahf
jmp
je
ss
xchg
or
in
inc
adc
out
xchg
xchg
lods
je
pop
dec
mov
and
jns
lods
fsubs
push
dec
and
andb
cli
push
rcrb
lods
fstpl
jle
mov
push
test
shll
dec
or
jno
adc
cmp
push
add
int
lods
inc
dec
jns
sub
sbb
ret
mov
xchg
gs
lret
xor
out
aas
fwait
cld
add
cmpsb
dec
aad
cli
cmp
mov
jns
aas
push
jl
push
inc
out
jns
and
or
xor
adc
in
adc
lret
jg
stos
dec
xchg
push
mov
cmp
test
xor
push
mov
shll
int
pop
xchg
xor
into
out
les
fmull
test
out
fmull
xchg
xor
pop
sti
icebp
mov
rclb
mov
jno
sahf
es
jp
cmpsl
mov
in
ljmp
sub
xor
adc
in
adcl
push
popa
lahf
daa
or
outsb
imul
lcall
out
dec
aas
or
add
idivl
fbld
lret
and
xor
cwtl
cld
mov
and
dec
xchg
int
je
or
sbb
leave
popa
push
dec
fcos
sub
ds
lea
and
lea
or
xor
nop
hlt
inc
scas
das
repnz
xor
popa
cli
icebp
mov
push
push
fldcw
or
sub
mov
mov
xchg
in
icebp
push
jg
or
cli
je
lods
roll
mov
cmp
cmp
jge
shr
std
mov
imul
adc
sub
mov
stc
lods
or
imul
dec
mov
ja
lret
jbe
aad
imul
cmpl
and
mov
dec
pop
sbb
mov
jns
push
inc
test
dec
scas
rcrl
jb
cmp
lret
xlat
les
sarl
push
sahf
cmpsb
leave
push
jne
sub
jp
sar
cwtl
jl
sbb
fldenv
mov
pop
pop
mov
cmpsl
sbb
pushf
lret
dec
inc
pop
cmp
pop
inc
pause
cmp
xor
sarl
push
adc
call
mov
adc
xor
popf
cmc
sbb
lret
ds
inc
std
mov
inc
out
push
xor
xor
inc
xchg
lock
pop
ds
daa
filds
imul
insl
in
loop
xor
inc
leave
or
sub
or
cmpsl
test
mov
push
sbb
jl
fwait
mov
and
mov
mov
pop
outsb
je
rcrb
mov
aam
pop
push
clc
dec
add
stos
dec
mov
jne
or
cmp
pusha
or
in
cltd
cli
inc
fmuls
jle
outsb
test
push
test
sti
leave
mov
add
pop
movsl
loopne
mov
inc
je
lock
xchg
cmp
dec
repz
mov
lret
sub
ja
and
bound
jmp
fldenv
cld
bnd
mov
xor
mov
mov
cmp
insb
cmp
jmp
mov
je
repnz
loop
js
rorb
adc
pop
mov
aas
sahf
fwait
stos
pop
popf
insb
lret
xchg
inc
in
movsb
outsl
addb
std
push
xchg
aad
stc
xchg
movsl
mov
jge
enter
aad
lret
pop
int
imulb
mov
pushf
lds
clc
into
mov
xchg
jns
outsb
dec
iret
pop
in
xor
fcmovu
fisttpl
int3
mov
std
push
push
fwait
mov
daa
stos
bound
sbb
sub
jo
push
adc
enter
cmp
pop
adc
xchg
push
std
lret
shrl
mov
lahf
int
mov
jnp
dec
mov
mov
out
and
or
fldt
inc
cld
sahf
push
and
rsm
push
adc
and
add
mov
sbb
fcompl
movl
ss
fs
pop
dec
movsl
daa
out
adc
mov
cmp
ljmp
jle
push
sub
or
dec
in
jnp
fwait
xchg
adc
pop
call
fcmovnbe
imul
xchg
cltd
pop
push
outsb
mov
mov
jne
sbb
or
hlt
shrb
pop
roll
adc
mov
aas
mov
push
xlat
jns
fsubp
aad
dec
psubusb
mull
jbe
pop
pushl
xor
fisubl
nop
mov
sub
mov
stos
jmp
inc
stos
out
cwtl
or
mov
mov
xchg
sti
mov
nop
push
inc
idivl
sbb
es
inc
repz
aas
inc
test
shlb
cmp
push
jns
push
jg
dec
data16
subb
in
push
pop
xor
cmp
mov
jne
cmpsl
fwait
xchg
das
adc
adc
xor
aas
inc
adc
outsb
cwtd
in
cmc
loopne
ret
out
test
mov
xchg
out
cmc
sahf
insl
test
push
lock
movsl
sub
sub
fsubs
inc
jns
je
int
mov
inc
sti
xchg
es
push
cmp
imul
lods
adc
inc
cld
xor
sbb
imul
and
cmp
sub
int3
cmp
xchg
fstl
lock
popa
imul
jg
dec
pop
add
cmp
popf
shrb
mov
jmp
icebp
ret
lret
mov
mov
ds
pop
out
cmp
or
std
jge
int
mov
mov
into
mov
aad
pop
cmp
xchg
js
in
xchg
stc
jp
mov
xchg
out
pop
pop
dec
js
sbb
cmp
and
fadds
pop
and
inc
pop
ficoms
dec
xor
aad
insb
adcl
mov
mov
ret
fwait
inc
adc
sbb
fs
loopne
test
fidivl
adc
movsl
mov
mov
inc
dec
rcll
test
add
filds
popl
sub
repz
repnz
sub
fidivs
cmpb
lahf
add
inc
jle
inc
ss
inc
outsb
std
pop
sti
outsb
xor
mov
cmp
ljmp
cs
rcrb
xchg
pop
mulb
inc
dec
mov
lret
loopne
push
loope
pop
sub
shrl
inc
jge
mov
inc
push
adc
inc
fcmovb
xchg
bswap
mov
ljmp
dec
fcoms
mov
loopne
out
ss
aad
pop
inc
mov
push
daa
and
sub
fsubrs
rorb
cmpsb
sub
sub
jge
loop
cwtl
addr16
xchg
gs
and
sub
mov
push
xchg
out
loope
mov
adc
decb
mov
pop
inc
decb
cmpsb
outsb
cmc
jb
jecxz
xchg
mov
jle
imul
fwait
mov
outsl
jne
sbb
and
lods
inc
movsl
adc
mov
divl
mov
and
je
int3
xor
sbb
push
dec
jle
fadds
jle
loop
nop
or
pop
dec
aaa
les
mov
adc
mov
xchg
xchg
pop
pop
mov
xor
fwait
sbb
inc
xor
mov
sub
sbbl
pop
in
pop
fwait
pop
mov
roll
jmp
sahf
cli
fisttps
mov
and
xchg
mov
and
cltd
cs
movsb
xchg
int3
fwait
adc
jae
cmc
inc
jmp
mov
pop
mov
adc
cmovae
cmp
imul
xchg
jge
out
cmp
jp
je
cmc
dec
movsl
test
or
lods
pop
lods
sbb
rclb
mov
and
adc
cmp
mov
xlat
fs
cmp
fidivl
mov
sbb
dec
dec
mov
cmp
inc
mov
inc
mov
jo
cmp
or
ds
movsl
inc
jp
std
mov
in
fs
in
jp
jne
cmp
add
cmp
push
add
clc
sti
add
push
cwtl
test
cmp
movsb
in
and
jbe
aam
stos
push
push
cmp
add
adc
roll
sbb
pop
stos
in
pusha
adc
mov
repnz
rorl
pushf
arpl
dec
lret
mov
roll
les
cmp
pop
fisubrs
push
gs
dec
and
ror
aaa
movsb
out
fcmovbe
xchg
arpl
cmp
xorb
adc
mov
loope
mov
cs
scas
js
xor
shl
int
jecxz
fdivrs
lret
clc
outsb
sbb
adc
or
loop
xor
testb
int
iret
js
jne
push
cmp
xchg
add
xor
and
ret
out
mov
dec
rol
fldl
icebp
rcr
add
pushf
jl
bound
mov
cs
in
cmpsb
and
popf
add
int
fdivr
adc
ja
in
jecxz
cmp
jl
sub
mov
push
sbb
imul
loop
cltd
jno
xor
int3
lods
jmp
lods
mov
lock
push
ss
sub
sub
stos
fistpl
or
xor
rorb
cld
xchg
and
xor
and
xor
movsb
pushf
dec
aas
sahf
aad
mov
sub
xchg
pop
test
cld
loope
inc
jl
pop
gs
in
cmp
push
sub
mov
inc
pop
sbb
dec
jnp
jl
leave
idivl
lods
xor
mov
mov
call
inc
jb
jmp
in
add
dec
sahf
adc
mov
mov
xor
aad
add
xchg
adc
jns
sub
sub
or
or
and
arpl
jp
out
add
orl
sbb
or
rcr
mov
add
outsb
aaa
lods
decl
add
cs
insb
push
mov
sahf
cmp
lea
mov
mov
jb
dec
shll
mov
dec
inc
and
andb
shll
lret
js
icebp
loope
negl
jle
xor
jge
data16
ret
out
jl
push
leave
or
outsl
push
mov
in
push
stos
icebp
test
or
sbb
fisttpl
icebp
sbb
clc
mov
dec
push
cmp
push
cmp
push
mov
pop
fmuls
dec
jne
aam
jg
jae
scas
adc
dec
or
xchg
push
cmp
cmpl
sub
loop
dec
lahf
mov
xor
and
lea
xchg
shlb
xchg
les
mov
sbbb
popf
jns
dec
mov
repnz
mov
insl
ret
sub
push
inc
ficomps
into
sbb
sbb
nop
or
bound
jns
cltd
sarl
sti
pop
xchg
es
mov
jmp
jle
push
sub
adc
rorb
mov
dec
push
xchg
or
xchg
roll
in
add
xchg
cmp
dec
push
jmp
mov
add
add
mov
sti
add
adc
or
sbb
mov
mov
lcall
dec
mov
push
cli
cld
out
and
push
cmpb
add
fistpll
outsb
sahf
pusha
push
and
arpl
xchg
test
fldl2t
aas
mov
xchg
std
add
dec
add
push
dec
shr
into
int
mov
push
sbb
je
cmp
sub
mov
add
inc
scas
movsl
push
iret
dec
call
mov
iret
or
inc
aad
jmp
notl
ds
sbb
cmpsl
idivb
lret
nop
jo
dec
sub
loope
cmp
pop
or
jae
sbb
in
mov
mov
popa
fistl
cmc
rorl
lret
arpl
mov
fidivl
lcall
inc
jae
and
mov
lock
pop
roll
in
adc
push
and
adc
dec
mov
xor
fwait
pop
adc
mov
jl
repnz
and
out
jno
mov
cld
jbe
icebp
add
icebp
dec
cmp
or
test
dec
dec
push
or
mov
xorb
jo
dec
leave
insl
xchg
hlt
rolb
fnstenv
push
jb
imul
xchg
push
add
shr
fcomip
push
js
pop
sub
dec
or
out
les
js
pop
push
pushf
or
in
shlb
sub
idivl
or
pop
sub
lar
mov
sbb
out
adc
lea
ss
fcoms
push
mov
pop
loope
cmp
jmp
jbe
sbb
test
insb
jl
fadds
shufps
in
mul
rorb
mov
icebp
xlat
dec
mov
or
std
in
lret
cmpsb
push
adc
imul
add
daa
scas
int
lret
xor
mov
inc
stos
aas
pusha
jecxz
jl
lds
inc
insl
and
jp
in
stc
pusha
xchg
push
pop
rcl
mov
imul
jno
pusha
or
shr
pop
stos
sbb
cmpsl
mov
cmp
fiadds
repz
int
pop
push
mov
dec
ja
fiadds
call
pop
adc
jl
addb
lahf
outsb
xchg
cld
movsb
ret
add
ljmp
andb
inc
jo
jnp
loope
xor
mov
cmp
ret
imul
pop
sahf
leave
loop
adc
cmpsl
subl
int3
mov
sub
iret
xchg
mov
push
lock
repz
sbb
adc
movl
scas
lods
or
mov
mov
xor
icebp
dec
push
inc
jae
ljmp
dec
ss
push
loope
enter
pusha
test
cmp
cmpsl
fbld
out
into
and
das
xor
sub
xchg
mov
mov
mov
adc
xlat
lea
ljmp
mov
hlt
loopne
out
test
test
pop
test
int
jmp
inc
push
aam
mov
arpl
js
mov
test
adc
xor
out
adc
ret
add
adcl
imul
idivb
dec
xlat
mov
ret
loop
or
rorl
inc
inc
sub
shl
cld
in
mov
mov
xor
push
std
shl
fs
inc
lods
and
ds
pusha
dec
cmp
gs
and
mov
jmp
pop
mov
sbb
push
in
stc
cld
xchg
jle
inc
daa
shlb
xor
loop
fsubrl
mov
cmpsb
insl
pop
inc
stos
mov
ja
adcl
clc
sub
push
stos
sti
xchg
rcl
out
cli
mov
jecxz
jge
sub
mov
mov
ss
insl
jecxz
inc
clc
xchg
pusha
jns
les
and
xor
mov
xor
lock
shll
icebp
add
adc
ficomps
mov
ss
in
mov
hlt
cld
icebp
orb
dec
pop
outsl
jbe
push
cmp
mov
bound
jne
pop
aad
lcall
add
sbb
test
rclb
mov
jnp
mov
cld
cmc
jne
dec
leave
dec
lahf
and
cmpsb
ss
shrl
mov
jnp
fwait
enter
jbe
jmp
mov
pop
popa
pusha
test
int
pop
mov
fmul
or
ret
clc
shlb
and
inc
imul
push
push
adc
ret
dec
popf
popa
sbbl
in
and
push
lahf
pop
jmp
or
xchg
jne
rorl
pop
sbb
daa
and
cmpsb
fwait
mov
or
std
adc
or
insl
and
lock
cli
stos
mov
sub
cwtl
push
ss
jg
aas
pop
xchg
loopne
psubusb
mov
popf
jae
push
iret
fld
fwait
outsb
cmp
lret
outsl
sbb
js
shll
lods
mov
fildll
mov
clc
sub
xchg
pushf
jne
or
repnz
sbb
jp
xor
dec
andl
fwait
add
inc
cmova
sub
mov
scas
pop
dec
pop
jmp
fadds
and
jno
pushf
jnp
ss
mov
lods
push
adc
cs
lcall
xor
jae
push
add
test
xchg
adc
pusha
shrl
or
add
and
xchg
lock
movsl
jecxz
xchg
movups
jle
cmp
outsl
add
push
push
and
add
inc
rclb
ret
out
in
imul
cmpsb
cmpsb
xchg
loope
cld
and
add
jbe
add
cmp
pop
call
pop
adc
add
cmpsl
adc
push
mov
leave
aaa
es
pop
shrl
inc
xor
jge
xlat
scas
inc
xor
nop
add
push
mov
pop
mov
data16
and
loope
lret
mov
push
jle
xor
pop
sbb
sarb
jl
sarb
mov
and
or
xchg
xor
adc
shrb
inc
inc
push
fistpl
cmp
ljmp
adc
mov
xchg
and
fs
in
shlb
or
into
aad
lret
fmul
push
xchg
xor
rorl
xchg
push
shrb
or
clc
out
cmp
or
aam
add
xor
cmpsl
in
adc
rclw
push
sahf
and
cmp
sti
sub
les
xchg
stc
pop
shlb
mov
sub
sub
inc
xchg
pop
sbb
push
dec
mov
jno
mov
push
jb
xchg
mov
mov
inc
fs
ja
out
repnz
dec
inc
sub
insb
incl
mov
dec
cmp
push
sub
or
test
mov
ret
xor
add
cwtl
in
adc
pop
jle
xchg
lret
and
cmp
out
lret
xchg
add
pop
add
sti
sbbb
sub
daa
or
inc
pop
mov
pop
aaa
icebp
jae
xor
jecxz
out
sahf
popf
inc
adcl
mov
jno
adcl
fdivrp
push
pop
jb
mov
pop
or
push
push
out
je
push
pop
cmp
inc
es
pop
jbe
adc
ret
or
jg
ret
sub
jb
mov
dec
pushf
in
push
sbb
cmp
je
mov
inc
and
or
push
test
jp
sbb
ret
xchg
cmc
dec
sub
ja
icebp
sbb
push
std
out
js
mov
mov
mov
and
xlat
sub
push
mov
mov
outsl
shr
test
scas
loop
push
inc
in
call
addb
loope
test
aam
adc
loop
mov
or
inc
fs
mov
jno
mov
cmpl
mov
sub
scas
mov
arpl
jnp
cld
pusha
add
cwtl
dec
cmc
dec
fildl
dec
sub
aaa
push
and
fistl
mov
add
xchg
dec
xchg
insl
pop
sbb
push
sub
jp
sub
cmp
js
adcl
cmpsb
xchg
mov
scas
stos
jle
or
cmp
adc
xor
test
xchg
lock
cmp
f2xm1
sbbb
sub
test
jle
cmc
inc
call
sahf
popa
xor
inc
aam
or
cmpxchg
jne
int3
xorb
pop
mov
dec
add
daa
aaa
inc
arpl
cmpsl
ret
clc
outsb
int3
xor
xchg
ja
cmp
push
and
pop
test
sub
roll
inc
mov
jns
dec
jbe
cwtl
cmp
loopne
xorb
sub
inc
aaa
xchg
test
xchg
jno
repnz
test
xchg
cmp
lret
mov
sti
mov
in
fcomp
test
negb
or
xchg
movsb
push
outsb
in
out
fsubrl
add
shll
pop
xchg
and
or
push
mov
cld
out
pushf
mov
shll
inc
or
imulb
or
aam
daa
data16
outsl
push
sbb
pop
adcl
in
xchg
jbe
xlat
mov
lret
mov
inc
dec
fadds
ja
in
imul
adc
iret
sub
push
mov
xchg
mov
daa
or
mov
mov
pop
xchg
mov
pop
loopne
mov
xchg
sbbb
xlat
push
or
pop
push
pop
fdivrs
fnop
sbb
push
xlat
addr16
ret
mov
rcrb
in
mov
adc
je
push
fwait
sub
setnp
mov
inc
sbb
or
inc
sbb
jne
mov
mov
xor
add
pop
leave
ret
push
mov
mov
sub
mov
mov
subl
cltd
sub
push
add
mov
add
inc
adc
push
push
mov
movl
mov
mov
mov
xor
xor
orl
xor
adcl
add
movl
adc
xorl
xor
xorl
xor
movl
cmp
movl
jne
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
orl
mov
orl
mov
mov
orl
xor
adcl
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzbl
sub
push
or
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
and
mov
sub
mov
mov
andl
movl
addl
movl
andl
mov
xorl
mov
sub
xor
mov
mov
sub
sub
mov
orl
add
mov
xor
mov
or
xor
mov
addl
sub
mov
mov
xor
adc
mov
notl
addl
mov
mov
sub
and
mov
mov
xor
and
mov
addl
mov
mov
xor
andl
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
negl
xor
mov
add
xor
mov
sbbl
mov
xor
mov
sub
and
mov
addl
xor
mov
add
movzbl
movzbl
adcl
sub
mov
movzbl
xor
mov
or
mov
xor
add
andl
mov
andl
lea
adcl
mov
adcl
lea
mov
sbbl
lea
mov
orl
lea
andl
mov
adc
mov
sbbl
xor
add
andl
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
neg
mov
push
sbb
mov
mov
lea
add
mov
sub
mov
dec
mov
and
mov
orl
xor
add
subl
mov
xorl
mov
mov
mov
xor
mov
mov
andl
add
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
adcl
xor
mov
mov
and
mov
add
movl
cmp
je
movl
mov
movl
jmp
mov
mov
cmp
jne
movl
push
jmp
mov
notl
mov
movl
cmp
movl
jne
or
mov
add
xor
addl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
adc
mov
mov
orl
xor
add
xorl
imul
mov
sbbl
xor
addl
add
cmp
jmp
jl
lret
mov
test
rcl
ljmp
bound
pop
bound
pushf
xor
cmp
pop
in
pop
pop
aad
cmpb
aas
and
push
test
lret
lds
lods
aaa
cltd
scas
xchg
test
cmc
lretw
lock
or
outsl
out
dec
outsl
int
add
ss
fdivrs
push
xor
out
mov
test
push
sbb
lock
fistpl
jmp
or
xlat
out
daa
rcl
in
cmp
insl
fisubrs
pop
dec
fs
xor
push
roll
ror
dec
rorl
hlt
call
inc
cmp
das
xor
pop
push
mov
js
inc
pop
faddl
push
iret
sti
add
mov
xchg
in
ljmp
jbe
movsl
and
jb
je
popf
push
and
std
cld
and
pop
adcl
cwtl
xchg
mov
fdivr
pushf
rcrb
imul
inc
xchg
ret
mov
xchg
mov
sahf
or
and
sbb
or
cmp
and
dec
xor
out
into
adc
jg
push
lock
jns
push
and
and
test
cmp
cltd
movsl
notb
aam
stos
jge
stc
popa
pop
lods
push
mov
and
cmp
nop
xor
adc
pop
mov
push
mov
push
popf
ds
int3
jo
mov
jo
inc
cmp
add
leave
repz
repnz
push
mov
xor
xchg
rorb
aaa
mov
in
loope
enter
pop
enter
ljmp
nop
cld
xchg
popf
sbb
add
scas
rcrb
cmp
ret
and
push
mov
fiadds
das
xchg
adc
pop
dec
sti
jne
push
mov
mov
mov
shll
aad
add
lods
mov
outsb
push
in
xchg
push
cmp
mov
add
push
jg
pop
inc
push
daa
adc
push
pusha
mov
insb
push
nop
jns
cmp
ds
pop
sbb
mov
sahf
jle
sti
xchg
ljmp
xchg
sbb
fldenv
cli
stc
inc
mov
pop
lcall
int
fwait
mov
add
adc
push
aas
fisubrs
lods
clc
mov
mov
sti
xlat
ret
add
cltd
dec
lods
loopne
ja
lret
pop
push
cltd
out
insl
push
or
push
sub
repnz
push
xchg
push
xchg
mov
push
rcll
cmpb
dec
loopne
cld
mov
xchg
mov
mov
cmp
cmp
divl
cmp
sahf
adc
outsb
das
loop
cltd
and
push
mov
imull
dec
sbb
in
ret
cmp
pop
jns
sub
push
or
gs
push
sbbl
std
dec
inc
aam
cwtl
scas
xor
mov
push
push
sbb
mov
jae
lods
test
xchg
mov
push
inc
cmp
mov
adc
stos
pop
xorl
pop
jno,pt
jne
push
xchg
cmpsb
cmpsb
sub
aaa
sbb
cmpl
sbb
frstor
xchg
jb
pop
inc
push
arpl
mov
dec
cld
fadds
jns
ljmp
repnz
movsb
jg
scas
out
test
jmp
and
jae
aaa
or
ljmp
lret
lahf
imul
pop
hlt
xchg
push
mov
subb
int
ret
sbb
xchg
push
outsb
or
push
cmpsl
mov
fs
fwait
jbe
add
mov
dec
sbb
out
and
cld
pop
sbb
mov
sbb
add
sti
cs
imul
mov
pushl
xchg
sub
gs
sbb
cltd
sti
iret
clc
xchg
mov
mov
xchg
dec
inc
insl
stos
push
cltd
in
int
dec
mov
pop
ja
lods
xchg
std
aas
aas
xchg
sahf
cmp
inc
cs
pop
mov
or
out
xchg
imul
test
lret
jmp
data16
stc
adc
lret
jp
and
test
and
jmp
ljmp
out
inc
jbe
dec
add
push
and
sahf
lods
mov
scas
jl
addr16
xchg
adc
stos
sub
cmp
je
xor
push
xchg
dec
push
mov
sbb
icebp
or
push
or
loopne
hlt
or
cwtl
je
fdivl
mov
or
lea
mov
dec
gs
mov
ret
lea
mov
fimull
cmpsb
in
lahf
and
cltd
imul
dec
xchg
sub
xchg
inc
jbe
inc
push
into
add
pop
and
mov
adc
add
push
mov
daa
inc
aas
inc
cli
mov
mov
daa
int
repnz
sahf
sub
arpl
mov
push
stos
mov
xchg
jle
fs
adc
fldln2
iret
xchg
lcall
cmc
pusha
inc
lret
xor
test
adcl
push
data16
cltd
pop
jl
dec
mov
xchg
sbb
shr
clc
pusha
out
icebp
xor
bound
or
lcall
cmp
aas
pop
xlat
add
push
jbe
jo
popa
cmp
daa
sbb
jno
push
lret
movb
and
scas
cmp
js
xchg
lret
mov
int3
sbbb
mov
ret
jo
test
popa
jp
outsl
fnstsw
icebp
cmp
test
or
adc
nop
sahf
ficoml
push
or
stc
jne
xorb
cmp
out
jle
mov
xor
cld
mov
inc
enter
cmc
sbb
shll
aaa
adc
in
fsubp
test
outsl
arpl
ret
stos
or
or
leave
push
mov
or
adc
mov
sub
sub
insb
divl
js
jecxz
fiaddl
aas
mov
mov
mov
lods
push
gs
xor
fbstp
fstpt
mov
or
jo
xchg
negl
add
pop
or
mov
xchg
add
xor
rcll
in
and
jns
push
lcall
mov
mov
sbb
rcrb
and
cli
gs
or
push
fimull
lea
imul
mov
pop
push
es
push
lahf
xchg
out
adc
push
and
push
jp
jle
inc
inc
cmpsb
hlt
xchg
inc
jno
push
adc
adc
test
lcall
pop
sbb
and
xor
movsl
and
iret
out
in
rcl
cwtl
ljmp
in
and
lods
outsb
inc
pop
addr16
out
sbb
in
cmc
add
testb
test
dec
push
adc
pop
push
cmpsl
lahf
in
sbb
push
loopne
cli
aad
mov
mov
jno
lcall
xchg
mov
out
pop
in
jo
cmp
adc
arpl
push
ds
jae
loop
inc
mov
ljmp
sbb
xor
or
xor
enter
and
lods
mov
mov
call
js
scas
adc
sbb
xorb
pop
cmpsb
jmp
lahf
lock
rcl
sub
lods
mov
cld
mov
jae
jl
jp
mov
pop
pop
sarb
testl
mov
or
cmc
lods
jmp
jno
add
daa
pushf
pop
lret
fisttps
xchg
pop
xor
push
and
push
fimull
cmpsl
fdivr
mov
popf
cmp
mov
out
ret
stos
daa
push
mov
ret
inc
lret
mov
jg
in
adc
inc
sub
mov
mov
test
mov
leave
sbb
mov
xor
xor
lock
gs
mov
adc
inc
mov
sub
or
orl
shlb
add
xchg
and
out
adc
mov
ds
pop
or
dec
push
inc
cltd
mov
push
repz
add
test
roll
cmc
inc
mov
lods
dec
mov
xchg
jge
sbb
lock
mov
adc
js
cli
mov
add
popa
mov
adc
jle
mov
aam
aad
ja
test
push
mov
adc
ljmp
mov
xchg
das
fwait
cmc
cmp
shll
popa
add
fwait
clc
adc
idiv
loopne
mov
sub
inc
out
sub
stos
sub
push
jg
into
mov
adc
jns
push
pusha
jp
mov
inc
adc
xchg
lock
stos
push
cltd
push
imul
pop
cmp
movsl
rol
inc
subl
daa
inc
test
mov
loopne
push
ss
dec
add
pextrw
jl
je
sbb
jb
push
test
cmp
and
shl
stc
out
out
or
rcl
jbe
add
mov
add
ret
ret
sub
fdivrp
iret
mov
pushl
call
mov
std
adc
jmp
mov
xor
cmp
movsb
inc
xchg
mov
jne
inc
xor
shr
cmp
inc
jecxz
inc
inc
std
mov
adc
adc
jmp
outsb
mov
mov
mov
or
inc
mov
push
shlb
cmovae
or
out
mov
mov
push
jbe
jecxz
pop
jmp
cmpsl
pop
cmp
adc
dec
inc
push
inc
or
xchg
dec
gs
add
pop
bswap
leave
sbb
arpl
loopne
sbb
push
rcrb
jecxz
mov
sub
mov
stc
jno
stos
test
scas
not
icebp
sub
adc
push
divl
mov
pop
jg
outsl
xlat
sub
mov
cwtl
dec
sub
add
mov
cwtl
cmp
ds
push
inc
mov
push
enter
popf
jne
jge
cmp
aam
lret
pop
jg
jbe
stos
std
icebp
cvttps2pi
inc
mov
cmc
daa
mov
jl
aaa
jp
push
pop
in
mov
in
sub
sub
test
pop
rorb
aad
imul
push
or
dec
cwtl
cmp
fwait
jle
adc
and
ret
icebp
sar
dec
mov
daa
repz
lock
cmpl
repz
mov
sti
imul
fcom
xchg
xchg
dec
xor
daa
es
ds
in
sub
mov
mov
sub
cmp
adc
cld
or
xorl
popl
inc
jle
mov
xchg
fstl
mov
fists
out
sub
mov
rclb
mov
icebp
lcall
dec
push
cmc
adc
adc
cli
jge
and
add
xchg
in
in
mov
push
movsb
clc
stos
mov
mov
mov
enter
dec
mov
addr16
loopne
and
adc
mov
lret
pop
jnp
mov
cmp
xor
pop
mov
adc
dec
lock
rcrl
dec
ljmp
sti
and
bsf
cld
ja
push
or
add
mov
test
jno
push
test
xchg
sbb
imul
sahf
in
and
xchg
ss
imul
int3
sub
mov
inc
dec
mov
or
xor
inc
sbb
scas
add
fcmovbe
adc
push
loope
repz
push
aad
and
aad
pop
xor
insb
xchg
mov
add
pop
std
in
mov
icebp
sar
lods
sbbl
fucomi
or
mov
mov
bound
lea
testb
pop
sub
ret
push
andb
lahf
gs
jno
sub
xchg
pop
movsb
cwtl
out
mov
or
mov
insl
sub
cwtl
leave
cmc
and
and
loop
cmpb
data16
sbb
mov
pop
push
xor
mov
inc
addr16
cmpsl
ja
fldenv
xlat
cwtl
stc
mov
xchg
mov
popa
sbb
sub
repnz
cmp
fbstp
shll
adc
sub
push
sub
and
movsb
scas
mov
jg
jns
jle
push
mov
mov
or
xchg
or
add
out
add
inc
rclb
stc
aaa
mov
int
or
mov
jg
mov
lcall
stos
inc
insb
fistps
orb
jg
jnp
push
movsb
in
bound
cli
cltd
cmp
add
dec
movsb
aaa
ret
xor
sbb
sub
mov
arpl
dec
call
es
mov
adc
mov
pop
rcrl
sub
mov
mov
adc
loop
jl
shll
jne
fidivl
arpl
cmp
les
adc
fbld
adc
inc
add
cltd
stos
adc
out
cmpb
sahf
js
fcmovu
inc
push
pop
out
adc
loop
jns
lret
into
pop
into
scas
jmp
mov
jns
fsubs
jp
shr
out
lods
test
add
in
cmp
mov
pop
movsl
in
outsl
arpl
int3
dec
mov
shrl
adc
sub
rcr
dec
push
and
cmp
ja
ljmp
and
cmpb
test
lods
jmp
and
daa
cld
insl
movl
push
mov
stc
push
out
leave
and
or
jp
sbb
lods
pop
icebp
mov
mov
inc
insl
or
pop
dec
test
iret
mov
inc
mov
imul
shll
popa
and
imull
dec
inc
mov
add
mov
xchg
inc
pop
adc
lods
mov
and
ljmp
adc
cmp
fwait
dec
pusha
cmpb
xchg
mov
clc
in
rcr
fst
mov
fisubrl
inc
mov
mov
sub
xchg
push
inc
stos
sbb
and
xchg
int
cmp
pop
les
stc
imul
mov
iret
pop
mov
and
pop
add
sub
outsb
mov
jae
imul
or
mov
leave
pusha
and
leave
cli
jle
or
repnz
std
pop
sub
xchg
out
out
push
mov
ds
or
and
pop
pop
movsb
sbbb
jmp
movsb
xchg
in
cmp
and
sub
inc
sub
fs
xchg
cmp
aaa
ja
jbe
dec
rorb
or
pop
mov
or
xchg
sbb
stos
stos
pop
vmwrite
and
cltd
enter
xchg
cmp
test
outsl
mov
dec
cwtl
imul
in
mov
std
jae
or
hlt
push
mov
cmp
rcrl
movsl
repz
pop
iret
mov
dec
fnop
inc
push
sti
rcr
dec
push
aam
rorb
icebp
sbb
add
push
fistpl
fildl
pop
sub
ret
cwtl
rcrb
sahf
dec
push
jmp
xlat
dec
jnp
ret
mov
inc
inc
fs
cmp
mov
into
push
rolb
cwtl
mov
cltd
repz
repnz
jb
mov
xchg
cmp
dec
push
pusha
sarl
pop
xchg
clc
aaa
loopne
loop
dec
sub
fmull
mov
loopne
jnp
or
push
roll
fistpll
jmp
mov
xor
idiv
lret
fldcw
xorb
hlt
inc
fcompl
nop
jbe
pop
jb
stos
mov
mov
int
popa
push
jl
and
imul
or
inc
inc
adc
pop
enter
pop
dec
lcall
lock
les
sub
jmp
xorl
push
adc
adc
aas
clc
leave
aad
add
add
xchg
pop
enter
dec
jae
fstps
scas
ds
inc
adc
std
add
sub
xor
mov
mov
stos
cs
and
sbb
jl
bound
lcall
leave
cli
fimull
aam
push
orl
xor
cmc
xor
pop
pop
pop
cmp
cmpsb
mov
jecxz
sbb
pop
push
outsl
je
mov
lods
dec
or
in
aad
cmp
push
sbb
lret
and
pop
mov
dec
cmp
inc
xor
xor
out
addb
test
fildll
jmp
leave
dec
mov
xchg
fs
pop
push
dec
mov
outsl
outsb
push
lods
lods
popa
pop
loopne
or
mov
sbb
sub
cli
in
stos
push
cli
push
es
outsl
cmc
je
lret
lock
or
add
xor
aad
hlt
mov
xchg
js
mov
dec
push
mov
pop
fistl
add
jne
lods
loopne
shrl
add
sub
ret
repnz
orb
je
pop
out
push
lods
adcb
or
cs
out
rcr
lcall
cld
inc
ror
pushf
mov
sahf
and
adc
ror
mov
cmpl
ret
sub
daa
int
leave
or
mov
lahf
fcoms
push
pop
pop
mov
test
jo
xor
out
out
imul
push
mov
ljmp
push
psadbw
dec
xchg
mov
pop
ljmp
xor
lods
xchg
lcall
pop
subl
enter
outsb
js
inc
pop
push
add
pop
dec
mov
mov
sub
jecxz
pop
adc
int
sbb
in
enter
js
jne
mov
xor
aad
inc
test
adc
or
cld
xchg
movsl
xor
pop
adc
sbb
cmp
insb
in
jle
vunpckhps
xor
mov
cmp
sub
push
jmp
dec
jns
adc
mull
outsl
mov
icebp
hlt
dec
push
enter
int
adc
out
lret
repnz
sbb
push
mov
shll
xlat
adc
sub
int3
cli
stos
sub
xchg
and
bound
sbb
mov
inc
fsubr
nop
push
imul
adc
aam
push
and
sub
cwtl
gs
out
and
lret
ret
mov
push
fwait
ret
out
pop
movsb
faddl
insb
jmp
gs
lds
test
jae
mov
lock
jge
repz
aaa
lret
xchg
movb
cli
xchg
sbb
xor
pop
add
jnp
out
test
ss
testb
aam
into
ret
push
mov
ret
es
and
pop
popa
call
ja
mov
jmp
repz
ds
imul
fistpl
mov
pushf
imul
xchg
ret
daa
cmp
inc
sbb
pop
xchg
shrb
sub
adc
and
fucomp
adc
lahf
push
daa
in
mov
push
xorb
sub
mov
imull
jae
fistps
mov
jnp
push
lret
cmp
stos
dec
fdivs
loope
and
jo
jns
mov
sub
fnstenv
xor
imul
ret
lea
xor
call
shll
je
and
aaa
adc
je
fdiv
mov
push
rorl
dec
cmp
scas
pop
icebp
das
and
xor
das
notb
leave
mov
out
mov
adc
mov
push
adc
movsl
mov
xor
clc
pop
loop
jae
movsl
les
or
adc
xchg
mov
inc
pushf
add
sbb
dec
das
push
pop
push
sbb
clc
adc
sub
or
int
test
ficoml
adc
and
sbb
cltd
test
mov
push
lret
pop
mov
int
dec
cmc
popf
fstl
push
and
pushf
sbbl
add
inc
mov
rolb
cmp
add
inc
mov
xchg
add
xchg
pop
sbb
mov
sbb
sub
ret
in
add
mov
add
push
clc
sub
inc
test
ret
dec
lahf
xchg
xchg
imul
add
pop
jp
outsl
cmc
lret
inc
inc
shrb
and
mov
aam
pop
sbb
fisttpl
lret
in
stos
adc
mov
sarl
lret
out
popf
mov
add
pop
fdivl
lahf
jecxz
lcall
mov
test
add
push
mov
and
mov
mov
hlt
sub
out
xchg
mov
repz
cmp
addr16
pop
adc
xchg
mov
xor
pop
aaa
add
cmpsl
or
int
jg
pop
out
jo
jbe
sbb
jmp
sbbb
xor
and
mov
sub
jne
aad
ret
out
or
cmp
shlb
out
nop
imul
mov
scas
jmp
sti
push
mov
fisubl
fldenv
data16
push
push
or
pop
jmp
les
add
std
dec
imul
pop
call
sahf
dec
push
jge
lcall
xor
insl
push
push
push
es
lods
mov
int3
inc
jns
adc
jge
or
pop
inc
rorb
xchg
ljmp
xor
inc
push
xchg
xor
lahf
movsl
xchg
fldcw
push
out
mov
xor
icebp
lcall
add
shrl
cli
and
shl
neg
jnp
in
inc
mov
push
push
xchg
mov
push
adc
ficoms
mov
jns
lods
jl
mulb
push
hlt
leave
jbe
dec
mov
fnstsw
add
cld
cmp
test
xchg
ja
gs
test
or
xchg
xchg
fiaddl
fyl2xp1
sbb
add
shl
insb
xor
js
push
gs
mov
pop
mov
sub
xchg
sbb
sub
mov
outsb
in
xor
test
int
pop
mov
lock
int3
mov
mov
fcoml
cmp
rorl
or
in
sub
and
sahf
xchg
stos
mov
and
ss
insl
jno
roll
ret
daa
lock
add
add
aaa
scas
fsubrs
movsl
xorl
xlat
das
mov
ret
lcall
and
mov
push
adc
loopne
les
ret
mov
rorb
orb
xor
loopew
mov
jae
and
push
sub
pusha
call
push
movsb
sbb
lret
frstor
out
push
cmp
and
sbb
hlt
or
fwait
xchg
cli
fistpl
inc
lea
mov
pop
xlat
push
stos
addr16
add
mov
xchg
int
cwtl
xor
mov
cmpsb
shlb
loope
addl
mov
insl
and
mov
stos
movsl
mov
leave
xor
sbb
pop
out
jbe
outsb
xchg
xor
addr16
mov
nop
dec
add
mov
out
es
inc
mov
add
enter
or
mov
aas
aad
test
movd
fcomps
lea
outsb
pop
sbb
int
sub
fisttpl
inc
imul
sub
leave
lret
fisttpl
into
mov
lcall
mov
ret
pusha
pop
jecxz
out
xchg
mov
inc
int3
lods
stos
xor
push
fsubr
shlb
push
cmpsl
roll
cwtl
movsl
mov
mov
ljmp
mov
fucompp
in
call
addr16
inc
data16
and
xlat
mov
mov
mov
or
test
lea
xchg
int3
lret
cmp
pushf
dec
fdivrs
jmp
outsb
push
cmc
or
mov
push
jb
push
mov
dec
js
fidivrs
add
mov
cli
adc
lds
xchg
xor
adc
andb
addl
sbb
xchg
push
dec
shll
jecxz
repz
int3
xchg
xor
cs
sub
sub
mov
xor
aaa
stc
push
jle
sbb
movsb
orl
lahf
mov
push
push
xchg
inc
mov
mov
fistpll
cltd
and
xchg
daa
movsb
sbb
das
loopne
mov
push
jno
or
out
mov
loope
xor
inc
inc
js
in
clc
adc
shll
push
out
jge
inc
xchg
mov
nop
in
test
lds
cmp
xchg
ret
pop
gs
jmp
pushl
imul
js
mov
aaa
sti
dec
enter
pop
inc
aad
jno
int3
stc
cmpl
mov
add
mov
push
test
mov
xchg
push
ret
xchg
pop
xlat
pop
add
test
mov
loop
push
lock
push
jmp
push
pop
sarl
lea
nop
cmp
mov
push
dec
repnz
jne
lock
inc
pop
add
dec
jp
in
rcrl
mov
addr16
inc
sbb
mov
add
cs
rcrl
aam
push
into
xor
mov
mov
clts
adc
add
stos
aam
rclb
sub
xor
adc
mov
aas
xchg
call
adc
imul
pop
repz
dec
icebp
cld
mov
push
mov
inc
sbb
out
push
mov
fiaddl
adc
out
or
adc
lret
cmp
test
pop
pop
jmp
add
jns
add
jne
or
push
xchg
out
cld
mov
adc
imul
rolb
lret
xchg
fstpl
into
pop
inc
cltd
pop
jnp
shrb
jno
cmp
mov
outsl
and
enter
ss
les
pop
push
cmpsl
fisttpll
sub
and
cs
out
mov
nop
and
jmp
add
lcall
out
jge
sbbl
gs
dec
dec
gs
mov
icebp
nop
mov
std
jae
push
mov
mov
fmulp
fs
mov
lret
sbb
rolb
jg
push
or
push
ret
int3
cmp
sbb
cld
lret
dec
and
and
cmovne
cmp
nop
mov
scas
lahf
mov
xor
push
sarl
inc
jg
inc
mov
cs
add
pusha
sub
mov
leave
repz
fs
leave
adc
scas
xor
lcall
pop
lret
inc
daa
jae
dec
add
insl
cmp
sti
pop
pop
adc
inc
and
std
push
sahf
iret
jae
jl
mov
add
cli
mov
rcrl
in
mov
ret
push
xchg
fmuls
xchg
repz
out
mov
and
sbb
inc
out
jge
xor
data16
ja
lret
ret
and
xchg
je
cmp
push
aaa
stc
push
lret
mov
xor
mov
loope
sub
lea
ss
clc
dec
lods
das
sarb
and
js
mov
push
cmpsb
addl
out
enter
fbld
arpl
test
xsave
and
mov
enter
mov
mov
fcompp
adc
and
jbe
data16
popa
push
cmp
and
and
inc
add
subl
sbb
fnstcw
fcoms
or
cmp
mov
dec
mov
add
and
cmp
imul
das
xorb
sti
fsubl
jecxz
insb
test
in
pop
imul
or
lahf
sbb
adc
pop
inc
pop
sbb
aam
enter
test
mov
lea
aas
test
movsb
adc
fsts
push
push
repnz
jg
fst
test
pop
jmp
fadds
sub
scas
cmc
adc
pop
ret
outsl
ja
push
jne
fwait
mov
aam
inc
lahf
cmc
push
and
cmpsl
mov
rorb
push
mov
sub
cmpsl
and
data16
lret
sarb
dec
das
sub
sbb
push
lock
xor
js
pop
and
into
push
inc
stos
mov
jl
and
mov
addr16
pushf
adc
jae
pop
jle
push
sbb
stos
ljmp
and
ss
lret
insl
jb
test
pop
push
out
mov
push
cmp
xchg
bound
mov
pop
repz
imul
inc
push
xor
or
stc
xor
adc
pop
cmpsl
ret
add
adc
push
out
shlb
adc
cs
lea
mov
int
dec
xchg
xchg
sub
mov
fiadds
add
ds
popa
iret
xchg
popa
rcll
ljmp
outsl
lret
les
lret
mov
mov
or
jmp
pop
and
out
inc
pop
xchg
adc
xchg
mov
cmp
or
xchg
int3
adc
xor
jge
pop
lret
or
cs
lret
cli
ficoml
jle
inc
dec
in
cmp
scas
repz
mov
imul
movsb
insb
mov
cmpsl
lods
xor
enter
adc
loopne
fistl
cmp
lods
adc
gs
cmp
mov
pop
divl
ljmp
jns
mov
adc
imul
scas
pop
ljmp
or
jle
xchg
push
xchg
pop
adc
mov
dec
cbtw
jl
movsb
frstor
and
push
aad
out
cmovbe
idivl
inc
or
out
aam
jge
cwtl
incb
sub
mov
movsl
sub
xchg
movsl
xor
aaa
xchg
fimuls
ret
jbe
xlat
lea
xor
out
inc
nop
psrlw
rorb
out
cltd
incl
cmc
push
push
in
mov
shrb
fcmovnu
das
in
ds
fisubl
addb
shl
test
mov
fcmovbe
mov
stos
mov
test
push
sbb
in
shl
loop
mov
cmc
or
add
cmp
xor
rclb
dec
inc
iret
pop
xor
dec
cli
sub
mov
mov
sub
xorl
mov
or
push
add
pop
pop
cld
and
or
cmpsb
loope
lods
test
dec
loop
xor
xor
xor
cmp
lahf
and
ja
into
in
mov
ljmp
pop
mov
lahf
inc
push
or
ss
outsb
stos
jg
jl
jg
out
xchg
ja
addr16
aad
and
test
jecxz
jo
ret
in
cltd
cwtl
xor
xchg
sub
fstl
mov
lds
xchg
jb
pop
push
jg
inc
lock
ss
add
jle
mov
mov
or
mov
sbb
pop
movsb
xchg
loop
lahf
rol
pop
cmpsb
outsl
dec
test
cmp
dec
repnz
jno
fidivs
jle
xor
pop
and
out
out
mov
roll
ret
xlat
inc
das
push
shl
cmp
push
push
mov
mov
sub
out
xchg
jp
push
bound
ret
cmp
add
aam
add
je
or
mov
movl
add
mov
xor
or
or
mov
decl
xor
add
subl
imul
movl
mov
jmp
subl
mov
xor
sub
mov
andl
mov
add
xor
or
mov
decl
mov
sub
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
jmp
jge
xor
xor
add
mov
mov
push
xor
shlb
hlt
pop
bound
gs
fmul
push
mov
xchg
cmp
cmpsl
nop
jno
stc
add
hlt
push
faddl
lock
pop
push
jno
sbb
xlat
mov
ror
xchg
adc
mov
mov
sbb
movsb
lods
lea
dec
xor
nop
enter
gs
cmc
popa
jmp
and
fimull
daa
and
sti
das
pop
mov
out
xchg
leave
sub
int3
movsl
daa
enter
fsubl
xlat
bound
aaa
fdiv
mov
fistl
cmp
mov
pop
xchg
jl
jle
fidivrl
sub
out
jns
fistpl
dec
sbb
xchg
mov
test
xor
sahf
inc
cwtl
push
push
dec
xor
sbb
es
aam
iret
pop
je
loopne
or
lea
pop
out
add
add
lock
lods
jnp
insl
lock
cmp
fs
push
sarl
mov
sbb
pusha
clc
aas
xchg
jle
jnp
cld
sub
js
fnstcw
cwtl
lret
push
test
loop
jne
inc
push
in
aad
push
cwtl
sbb
lcall
lahf
mov
pop
or
movsb
push
je
mov
xor
mov
add
inc
sbb
push
lods
outsl
mov
jb
pop
into
addb
xchg
jns
mov
in
and
jmp
add
fnstcw
test
mov
cmp
sbb
arpl
loopne
xor
add
shll
rolb
adc
dec
ljmp
inc
pusha
pop
test
cltd
xchg
dec
cwtl
xor
sbb
and
loop
mov
cmpsb
mov
lods
add
mov
dec
mov
std
mov
push
ror
xchg
or
pop
pusha
push
mov
mov
xchg
fs
icebp
xor
loope
cmp
jl
and
jbe
mov
pop
fmull
sub
pushf
push
repnz
or
push
imul
xchg
jg
xor
in
in
jle
dec
mov
xchg
mov
cmpb
ljmp
ret
mov
lds
mov
dec
mov
in
call
mov
out
test
nop
pop
loop
gs
addr16
or
or
mov
movsl
sbb
jnp
and
fiaddl
xor
dec
cmp
scas
push
pushf
adc
jecxz
fidivrl
cmc
rclb
mov
lods
orb
mov
dec
adcl
and
lods
sbb
or
push
inc
dec
imul
xor
jmp
test
jne
mov
mov
lods
cltd
add
jo
xchg
push
adc
or
push
popw
shll
ds
jmp
fidivrs
adc
pop
fisubrs
arpl
jne
fdivr
pop
mov
or
mov
test
mov
lock
add
jae
scas
cmp
and
cmp
push
xor
mov
sbb
loopne
aaa
xchg
cmp
cmpsb
insl
popf
xlat
aaa
testl
sub
xchg
cmp
sub
mov
or
in
mov
imul
push
mov
cltd
lock
fidivrs
dec
jle
lock
fs
lods
inc
shrl
ret
stc
fstp
pop
push
sbbl
adc
hlt
xor
ret
fldl
mov
jmp
adc
mov
xor
ror
mov
dec
cmp
lea
leave
xchg
lcall
mov
dec
in
sub
ret
xor
xor
mov
in
or
adc
mov
and
iret
pop
push
divl
add
ret
pushf
fwait
xor
jae
push
pop
dec
test
fabs
mov
call
mov
sbb
inc
xchg
in
sbb
mov
mov
xor
out
aam
mov
unpcklps
add
cmp
rcr
and
sub
xchg
or
test
gs
mov
out
popf
sbb
xchg
jnp
ds
fwait
loop
out
xchg
sub
cwtl
test
xor
xchg
popf
outsb
mov
jb
jae,pt
loope
dec
insl
repnz
push
pop
cmp
adc
ret
movsl
inc
pusha
adc
loop
mov
scas
ret
push
inc
add
inc
jb
insl
arpl
inc
scas
lock
sbb
cmp
ret
sahf
cmp
aas
bound
les
mov
repnz
mov
stos
or
cmp
js
stos
jnp
cwtl
xchg
test
stos
aas
sti
mov
bound
fs
fdivrl
testb
movsl
add
lea
jl
sahf
jbe
or
scas
fdivr
inc
mov
bound
inc
xor
xchg
test
dec
and
sub
and
push
ljmp
xchg
imul
jg
dec
lods
dec
add
cmp
data16
sbb
mov
outsl
lds
cltd
cli
push
add
andb
sbb
pop
jno
fxch
jns
xorl
shll
scas
cmc
jnp
pop
into
pop
iret
sbb
test
xchg
inc
adc
or
clc
shll
testb
mov
mov
ret
insl
jge
pop
mov
loop
icebp
adc
mov
and
sarl
into
push
mov
add
jno
ret
lahf
pop
fwait
jmp
out
es
mov
cwtl
pusha
repnz
aad
cmpsb
xchg
inc
movsb
aad
mov
mov
or
in
sbb
cld
andl
dec
adc
jne
clc
repz
out
pop
pop
inc
pop
sub
dec
push
das
and
aam
pop
pop
les
scas
sahf
sub
fst
dec
sub
cmp
movsl
test
xchg
addb
pop
add
xchg
sub
dec
ss
loop
add
jmp
cwtl
xor
sbb
stos
push
sbb
out
insb
inc
xor
std
mov
mov
xor
aad
aas
mov
insb
ret
mov
das
popa
adc
sbb
lods
sub
xchg
stc
jae
push
js
adc
mov
and
xor
push
pop
rcll
sub
mov
xchg
fistpl
ret
jmp
jb
popl
lock
mov
loope
cmp
push
out
jg
out
mov
aad
mov
shr
sbb
mov
push
cmpsl
sbb
mov
cmp
jg
sbb
cmp
cmpsb
bound
popf
cltd
lds
push
jo
add
rcrl
inc
cltd
sub
inc
or
cli
jns
xchg
shl
xchg
icebp
rorl
outsl
jl
in
sbb
out
outsb
orl
negl
in
mov
stos
jb
and
jl
xchg
add
leave
stos
or
jae
mov
pusha
sbb
ficoml
dec
cs
pushw
mov
cmp
pop
pop
push
pop
inc
xchg
imul
lds
jg
jnp
sti
dec
pop
shll
ja
inc
push
leave
push
jns
outsb
add
mov
dec
mov
fwait
jmp
addr16
xchg
xor
jge
jns
pop
push
xor
xor
jmp
push
or
inc
xchg
test
test
cmp
les
fwait
mov
pop
pop
ljmp
xchg
pop
ds
jo
inc
jae
add
pop
push
sbb
in
and
xor
popa
cmpsl
out
mov
add
mov
sub
inc
pop
mov
jl
iret
sub
iret
lret
aam
mov
sub
sbb
jmp
fucomi
mov
sub
push
cld
jmp
dec
mov
test
fldl
int3
rolb
adc
mov
lret
cs
mov
andl
inc
sti
fldt
dec
out
fiadds
sub
sbb
gs
test
push
xor
jmp
xlat
movsb
dec
pop
xor
pop
dec
scas
pop
lret
leave
sbb
push
leave
mov
jp
and
or
sbb
xor
loopne,pt
lret
pop
sbb
mov
pop
lret
movl
adc
call
scas
out
scas
jnp
inc
cmp
aaa
dec
call
shlb
rorl
push
cmc
out
ljmp
sbb
bound
xchg
and
mov
mov
dec
cmc
iret
sbb
jl
jl
or
mov
mov
push
pop
pop
aas
imul
inc
repnz
cmp
mov
aad
aad
sti
xchg
icebp
jp
dec
mov
and
fsub
cmp
negl
and
ljmp
add
mov
cmp
cmpsb
pop
cltd
test
mov
xor
or
pushf
push
dec
jg
jae
stos
dec
push
and
cwtl
adc
sub
sub
out
mov
dec
or
cmp
test
mov
out
mov
lds
pop
ds
in
and
xchg
push
mov
inc
cwtl
mov
mov
mov
movsl
push
jnp
sarl
lds
sub
mov
lods
divl
hlt
hlt
fildll
lods
fs
movsb
mov
xor
mov
xlat
push
mov
mov
pop
dec
and
out
or
rcrl
out
push
mov
sbb
imull
and
test
xchg
cmp
cmp
inc
les
shll
xor
scas
fwait
push
sbb
mov
push
sub
sbb
shlb
daa
jnp
inc
sub
xchg
loop
pop
fdivs
push
test
insl
and
stos
insl
cmp
jmp
mov
dec
or
adc
lock
xor
in
out
sub
mov
push
shr
pop
mov
mov
adc
or
mov
int3
mov
ret
ds
mov
outsl
rcll
xor
push
cmp
cmpl
andb
inc
add
sub
loopne
add
aas
jmp
push
ficomps
cmp
lea
mov
into
test
out
pop
or
bound
sub
loopne
ret
imul
into
sbb
sub
lret
mov
or
and
scas
loope
les
jbe
cld
inc
mov
shrl
int
inc
inc
mov
aas
fldcw
stos
rcr
aam
add
sbb
dec
mov
nop
pop
cli
push
imul
jbe
cmp
sub
fsubl
in
imul
push
fs
and
sub
out
add
mov
shrl
cmp
xor
mov
fcoms
fadd
int
icebp
adc
jg
pop
xor
lods
mov
adc
adcl
test
dec
ret
push
jnp
mov
fstps
test
es
dec
inc
push
pop
and
repnz
sbb
mov
mov
xchg
ds
lods
adc
int3
inc
mov
mov
in
mov
jne
orb
test
mov
adc
xchg
fwait
push
lods
test
xchg
pop
outsl
mov
mov
imul
mov
cmpsb
cmp
mov
xor
add
cmp
ficompl
inc
lods
dec
mov
cwtl
add
insb
lret
cli
arpl
ja
lods
mov
fdivl
mov
movswl
leave
mull
mov
sbb
xor
negl
mov
add
xchg
inc
fmuls
pop
icebp
pop
fidivrs
mov
lcall
test
arpl
mov
movsb
sub
in
mov
mov
push
pop
lock
mov
push
cmp
jp
cwtl
cmpb
sti
pop
mov
repz
pop
push
enter
aaa
adc
and
lret
xlat
push
cli
pop
push
cmp
or
loope
mov
out
mov
test
cmp
jo
adc
sbb
rol
data16
sbb
dec
mov
call
ja
mov
lods
mov
mov
jg
xchg
mov
sub
out
xor
or
mov
dec
outsb
sbb
inc
fisubl
fs
popf
outsb
js
jmp
nop
push
notb
jnp
arpl
je
arpl
out
fmuls
cs
fldenv
push
sbbb
sbb
or
jecxz
push
cmp
adc
mov
outsb
scas
stos
out
xchg
lahf
adc
push
lcall
xchg
cmpsl
cmp
lret
insl
lds
add
add
xor
xor
mov
cmp
xor
jge
add
jo
ds
loopne
loope
and
mov
or
out
and
sahf
pusha
add
and
xor
or
xor
test
mov
jne
and
imul
mov
sarl
or
sbb
cmp
push
aaa
lret
aam
push
pop
add
out
rcrl
lret
leave
mov
jne
out
cmpsb
xchg
and
mov
sbb
jg
imul
push
push
inc
lahf
add
mov
add
mov
dec
pop
movsb
sbb
mov
and
mov
mov
jbe
iret
push
xlat
sti
test
add
xor
std
add
mov
decb
test
test
dec
rcrl
int3
inc
pop
mov
inc
ret
test
aaa
adc
fidivrl
nop
mov
fisubrs
xor
and
sub
jnp
js
mov
mov
loope
icebp
fs
mov
or
out
pusha
xchg
push
adc
dec
sbb
xchg
lods
rolb
sbb
sbb
negl
les
or
scas
sbb
aad
cmpsl
jbe
loop
mov
pusha
lret
push
dec
sti
jg
pusha
pop
orb
sbb
and
loopne
std
es
inc
lea
mov
push
dec
xchg
xchg
and
adcb
pop
je
add
cmc
pop
jecxz
imul
decl
or
shlb
jge
mov
rcr
inc
outsb
ror
lods
xchg
arpl
dec
cltd
test
or
loopne
sbb
stc
iret
clc
sbb
ds
into
xor
jbe
add
sbb
jmp
xchg
out
jb
fisubrs
cs
aad
int3
xchg
push
iret
add
mov
xchg
pop
pusha
cli
repnz
repz
imul
data16
sbb
fucomp
inc
lcall
xchg
in
cltd
ret
xchg
jecxz
std
das
pop
lea
jne
jmp
repz
jle
add
outsb
cmp
jge
sbb
cmp
cmpsb
lahf
lcall
jmp
sub
daa
push
xchg
add
and
mov
xchg
adc
inc
cmp
scas
test
jb
icebp
inc
sbb
lcall
daa
xchg
addl
leave
xchg
and
dec
fcoms
jne
js
mov
test
and
mov
scas
push
pop
sbb
lds
inc
arpl
jnp
fwait
hlt
int
xchg
xor
dec
lock
test
ss
push
daa
inc
or
aam
in
aam
push
in
int3
xchg
xor
mov
pop
ret
fistps
xor
in
rcrl
pushf
out
and
push
pop
push
ds
xor
popa
xor
enter
mov
push
pop
xchg
add
xchg
iret
xchg
sub
sub
xchg
loopne
push
test
xchg
hlt
ret
push
les
dec
nop
sub
pop
bound
add
add
pop
xchg
stos
mov
scas
and
or
test
mov
rorb
lods
outsl
dec
xor
insl
push
testb
push
pop
xchg
lds
cmp
mov
into
popa
jb
sbb
aaa
xor
lahf
insb
xchg
push
jne
ja
loop
faddl
adc
imul
mov
sbb
xor
xor
mov
mov
jb
jmp
sub
and
icebp
dec
xor
ficoms
dec
jg
iret
and
fadds
outsl
inc
mov
cmp
mov
add
cmp
in
pop
sub
mov
mov
xlat
jle
sbbb
adc
push
sub
imul
push
cmp
or
mov
dec
shl
mov
jp
or
andl
test
xchg
data16
fisttpl
sbb
shrb
imul
push
rcrl
mov
iret
xchg
rolw
cmp
js
pop
hlt
sbbb
pusha
adc
cwtl
jns,pn
xor
adc
je
inc
mov
popf
popf
adc
add
mov
js
jno
or
mov
daa
and
mov
cs
xchg
lods
push
in
daa
inc
outsb
push
pushf
addr16
movsb
leave
cli
fisubrl
pop
sub
mov
dec
add
mov
cmp
inc
loopne
sub
out
xor
add
mov
pop
jl
or
aad
xor
inc
sarb
push
dec
dec
mov
sub
je
push
icebp
fstl
add
imul
sub
adc
lock
das
mov
push
xchg
mov
shll
fidivs
in
xchg
and
addr16
testb
ret
cmp
stos
ja
xchg
push
insb
mov
xchg
adc
call
pop
scas
mov
mov
pop
fs
mov
cmpsb
push
xor
jmp
sbb
mov
fdivr
rcll
mov
mov
cld
repnz
dec
xlat
jo
mov
nop
mov
xchg
pop
fidivl
mov
cmpsl
lea
xchg
mov
mov
bound
bswap
or
jmp
in
push
dec
cld
cltd
adc
out
mov
rcrb
setle
push
imul
add
jb
fmull
mov
or
rorl
dec
stc
mov
dec
shll
xlat
lods
cmp
dec
mov
fs
add
hlt
fwait
imul
adc
cli
sub
lret
mov
adc
sbb
lods
jno
mov
or
data16
movsb
ja
in
fwait
sbb
jg
into
add
mov
xchg
pop
add
xor
xlat
in
imul
rcll
lock
aas
insl
lcall
movsl
leave
jp
jns
push
das
xchg
sub
aas
jae
out
cmpsb
and
mov
out
pop
rol
lods
dec
and
mov
xchg
xchg
jp
addb
and
imul
stos
push
xor
inc
pusha
xor
inc
iret
std
xlat
lahf
ljmp
add
popa
daa
jo
outsb
and
sbb
dec
inc
movsl
jge
imul
test
xchg
fchs
imul
mov
cli
xchg
push
pusha
stc
cmc
lcall
pop
cmp
adc
pop
jae
mov
mov
enter
mulb
inc
inc
mov
push
mov
sbb
mov
in
mov
pop
sahf
dec
dec
fisubs
add
xor
ja
setno
mov
sub
mov
inc
rorl
push
pop
dec
test
roll
push
lods
and
dec
shlb
stc
imul
adc
pop
and
insb
fdivrl
xchg
cmp
call
mov
mov
mov
insb
mov
inc
pop
int3
out
xor
fidivs
cs
mov
int
out
ja
aas
aas
inc
xchg
cmpsb
mov
push
fcmovu
fildll
jo
adc
hlt
dec
dec
xchg
incl
xchg
push
or
jmp
push
rorl
dec
pop
cld
push
stos
add
aas
repnz
arpl
lods
jg
or
sahf
xchg
cmp
out
cmp
adc
in
or
mov
cmc
jns
int3
push
add
push
xlat
jns
xchg
push
pop
js
jecxz
out
jecxz
lcall
das
jge
cwtl
scas
cmpsb
dec
hlt
cmp
cli
rcr
xor
arpl
pop
cmp
out
lods
xchg
fldenv
lahf
pop
add
cli
mov
dec
nop
mov
sub
sbb
pop
sub
repnz
fs
inc
iret
mov
xor
sbb
in
cmp
scas
icebp
pop
sub
call
jb
loope
ss
mov
in
push
popf
adc
sub
nop
adc
pop
cld
inc
setne
ds
testb
mov
sub
add
mov
pop
cmpsl
setne
adc
pop
insl
inc
xor
or
loope
gs
bound
fst
pushf
xor
dec
sbb
pop
jl
out
add
adc
pop
or
imul
xchg
dec
popl
test
mov
imul
daa
pop
out
loop
bound
out
gs
adc
jecxz
aas
leave
cs
int3
push
and
push
dec
sarl
dec
cmp
gs
test
cmp
mov
in
lret
scas
rorb
and
clc
xor
sbb
xchg
pop
shlb
fdivrs
mov
jle
inc
mov
push
cmp
fidivl
fxam
sub
dec
push
and
jo
cmp
outsb
sub
mov
push
mov
clc
push
push
pop
mov
aam
in
fbld
fs
jno
and
lods
cmpsl
inc
or
popf
lcall
xchg
xor
jp
push
and
push
and
sbb
jge
cmp
loopne
and
outsb
adc
lahf
stos
xor
fwait
lret
and
sbbl
insl
aam
fwait
mov
xchg
xchg
das
jo
outsl
or
outsl
add
jno
cld
test
push
repnz
adc
xchg
mov
lds
jg
sahf
mov
fsubrl
int
pop
mov
andb
test
enter
shl
inc
jmp
insb
dec
in
ja
stc
cmpsl
xchg
jg
sbb
movsl
sub
fisubrs
icebp
je
dec
adc
loopne
int3
push
push
stos
icebp
rclb
test
icebp
fs
fsub
test
ret
or
xorl
lods
add
outsb
push
jge
aaa
dec
mov
pop
sbb
pop
cmp
sub
xchg
aaa
outsl
loopne
test
or
jecxz
pop
cmp
lods
out
das
rol
push
sbb
mov
call
lcall
dec
enter
ja
inc
mov
inc
cmp
pop
sub
icebp
jecxz
jns
push
push
xor
fldt
mov
adc
mov
outsl
xchg
jns
movsl
mov
inc
outsl
out
jae
cmp
mov
testl
mov
push
outsl
cltd
fs
gs
jl
iret
push
out
adc
inc
add
stc
sub
dec
xchg
sub
dec
mov
movsl
dec
dec
xchg
enter
out
cwtl
fcmovnbe
xor
popf
iret
xor
mov
rep
mov
mov
dec
xchg
jl
cmp
in
loope
pusha
push
xchg
jb
loop
fs
rcll
ja
cs
scas
mov
out
mov
cmp
pop
arpl
xchg
xchg
xlat
dec
scas
out
movsb
or
push
out
jae
les
cmp
sbb
test
pop
filds
jno
out
iret
inc
mov
das
call
xchg
adc
ja
ficompl
leavew
cmp
testb
jle
orb
rcr
fidivrl
xchg
mov
sub
cs
stos
les
bound
mov
jmp
cmp
xor
ret
fstpl
in
cmp
cltd
push
pop
mov
xor
cli
jle
cmp
insb
jecxz
pop
mov
movsl
and
push
push
ja
sbb
inc
notb
jecxz
pop
mov
mov
and
aas
ret
stos
les
insb
movsb
xor
fldenv
ret
mov
pop
subl
out
adc
push
sub
jecxz
pushf
and
mov
outsl
sub
inc
pop
and
fwait
rcrl
jge
cmp
inc
pop
outsl
aaa
nop
packsswb
push
leave
aad
sbb
int
xchg
arpl
repnz
outsl
or
xor
jmp
pusha
imul
xchg
pushf
mov
fs
xchg
dec
pop
cmp
inc
ret
in
in
push
lds
push
outsb
jb
in
cmp
and
sbb
push
ficomps
xchg
xlat
pop
loope
dec
and
push
enter
dec
divb
hlt
dec
les
leave
inc
dec
stos
jo
int
addr16
sub
add
xor
and
cmp
mov
repnz
movsl
leave
cmc
xor
add
mov
mov
cmc
test
pop
cmp
mov
jnp
lods
enter
mulb
in
pop
add
nop
mov
mov
addr16
loopne
push
daa
in
lret
pop
mov
jp
mov
lods
push
pop
adc
pop
push
and
sti
jmp
add
mov
pop
stc
and
mov
out
push
push
cs
jg
sahf
ret
mov
dec
mov
add
jbe
out
add
xor
clc
out
adc
ror
pop
scas
repz
push
stos
sbb
es
sub
into
outsl
pop
mov
jo
mov
mov
fistl
psubq
push
add
fdivrp
dec
xchg
pop
cwtl
in
mov
jecxz
imul
xor
jge
mov
and
aad
call
mov
pop
cltd
lahf
mov
inc
xor
or
mov
data16
mov
nop
push
mov
pop
stos
sub
sbb
ds
stos
lret
mov
std
mov
cmp
lods
aad
lock
sbb
xchg
mov
in
mov
mov
sub
fistps
xchg
scas
dec
xlat
mov
mov
or
push
push
inc
repz
sbb
orl
push
push
jp
or
jb
push
int
stc
stos
andb
imul
out
jmp
pop
push
mov
mov
xchg
add
inc
push
icebp
sbb
sbb
pusha
das
stc
out
inc
push
shlb
xchg
jg
sahf
push
sbb
and
ljmp
add
ja
mov
in
sbb
add
cld
push
jmp
gs
inc
push
out
xchg
adc
jns
fsubs
imul
pusha
loopne
sub
lcall
xchg
pop
popa
test
negl
cltd
movsl
rcrl
mov
in
push
push
test
mov
and
xor
cmp
jle
test
mov
ret
mov
decb
pop
ss
mov
push
movsl
in
iret
dec
js
movsb
sbb
out
das
inc
and
imul
jo
jp
xchg
xor
mov
inc
cmp
mov
lcall
jne
inc
rclb
inc
mov
push
cmp
call
iret
sahf
mov
repz
xor
daa
or
daa
cmp
push
lret
sbb
nop
mov
fsubr
xchg
jo
andb
cs
xor
dec
mov
dec
push
xchg
pop
push
ficompl
mov
scas
insl
lahf
imul
cmc
jnp
sub
aad
mov
jns
jbe
xor
ljmp
add
push
xchg
test
xor
sub
lea
mov
jl
and
add
std
test
push
or
mov
push
pop
add
iret
addr16
shrb
scas
fs
loop
imul
js
bound
js
cmp
aam
cmpsb
iret
cltd
or
add
sbb
test
push
push
xor
sub
das
stos
and
outsb
scas
mov
lret
movsl
lret
hlt
push
sbb
test
cmp
push
mov
daa
fisubrs
clc
outsl
inc
pop
lcall
xchg
in
add
xchg
stos
loopne
fwait
in
lods
inc
push
dec
dec
adc
xchg
pop
mov
mov
in
les
ficompl
jae
adc
mov
test
mov
jne
pushf
jnp
mov
adc
inc
add
push
addr16
jbe
pushf
xor
pop
inc
pop
sub
test
adc
xchg
popl
jnp
pop
mov
mov
fistps
loope
push
lret
fdivrl
xor
jge
popa
jnp
ds
xor
and
mov
or
push
push
inc
je
jg
mov
notl
xor
add
cmc
test
stos
sub
jb
subb
popa
and
mov
sub
push
mov
mov
fs
cmc
into
idivl
cmp
lcall
inc
mov
data16
jo
test
jmp
and
add
and
inc
jnp
xchg
aaa
push
iret
jo
pop
pop
call
adc
mov
inc
adc
pop
jp
fadd
xchg
icebp
lods
adc
dec
jno
sbbl
icebp
fists
fisttps
pop
inc
andl
lock
jbe
and
stos
lods
sbbl
and
push
jae
lods
aad
shll
push
push
popa
push
andb
push
leave
iret
repz
imul
out
pop
lret
pop
imulb
cmp
addb
ljmp
cli
je
or
add
fsubrs
xor
shl
sbbb
js
in
dec
xlat
and
push
mov
inc
mov
mov
xchg
mov
add
adc
stos
jg
xchg
inc
jo
push
cmp
and
push
inc
xchg
pop
lods
mov
mov
adc
mov
repnz
cmp
test
ror
in
or
mov
sub
mov
inc
mov
cmpsl
mov
ret
les
dec
stos
mov
cmp
cmovs
cs
or
or
push
lds
jo
rcrb
jge
cmc
pop
mov
arpl
cmp
mov
inc
cmp
rorb
adc
xchg
sub
xlat
dec
jmp
lcall
ret
mov
cwtl
sub
mov
sarb
inc
mov
js
adc
jl
sbb
es
ret
es
sbb
iret
shll
mov
or
adc
pop
outsb
cmpsl
xor
push
jne
repz
mov
fsubrl
loopne
imul
cwtl
fwait
jmp
dec
sub
or
shl
mov
leave
into
xchg
clc
pop
xchg
inc
or
int3
out
test
or
cld
fidivs
mov
sub
fcmovnbe
lds
mov
jns
imul
adc
push
test
xchg
sahf
inc
xchg
dec
pop
lods
and
dec
xor
imul
cmp
mov
mov
jno
das
mov
or
ja
push
loop
je
mov
add
xchg
lods
pop
sbb
mov
dec
push
sub
jns
divb
mov
ljmp
shrl
das
mov
lahf
cmc
in
test
mov
mov
cmp
imull
jg
jp
lds
mov
mov
mov
popf
mov
lods
bound
jle
fisubrl
adc
sbb
movaps
add
push
in
cmp
jo
je
adc
push
icebp
insl
push
gs
out
fnstsw
xchg
add
in
and
in
xchg
nop
imul
sti
scas
or
loopne
mov
pop
mov
cmp
add
sti
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
push
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
movzwl
sub
mov
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
pushl
push
push
call
jmp
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
push
and
mov
add
pop
addl
push
call
push
andl
push
adcl
push
xorl
push
push
addl
push
push
call
xorl
push
addl
push
andl
push
notl
push
orl
push
push
call
dec
movl
jne
mov
mov
mov
cmp
movl
jne
orl
movl
addl
pushl
sbbl
pushl
pushl
call
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jb
mov
sub
mov
and
mov
or
mov
movl
lea
xor
mov
sbb
lea
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
mov
sub
mov
mov
mov
not
mov
xor
movzbl
add
mov
adcl
add
movl
mov
mov
mov
movl
cmp
jne
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
or
push
push
and
push
inc
mov
xor
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
call
jmp
mov
sub
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
inc
mov
mov
movl
sbbl
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
andl
add
mov
sbb
mov
sbbl
mov
add
mov
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
push
pop
sub
add
movl
mov
movl
or
mov
xorl
mov
sbbl
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
orl
xor
add
mov
lea
mov
xorl
mov
xorl
xor
add
adcl
mov
lea
adcl
push
adcl
mov
subl
xor
addl
add
xorl
push
movl
mov
andl
push
pushl
call
sub
mov
adc
mov
xorl
mov
mov
adcl
xor
addl
mov
add
movl
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
adc
lea
sbbl
mov
mov
mov
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
sub
xor
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
sbb
mov
or
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
jmp
cli
jl
popa
fs
repz
push
and
inc
push
mov
int
bound
nop
lahf
xor
fdivrl
call
popa
add
pop
sub
enter
push
mov
mov
das
push
sub
rclb
mov
push
pop
pushf
fs
and
mov
inc
das
inc
data16
fsubl
sbb
xchg
icebp
jecxz
mov
or
daa
push
mov
jg
mov
pop
pop
lea
push
pop
fld
pop
add
stos
aaa
add
xchg
fisttps
push
mov
movsl
test
pop
cmp
cli
and
lods
js
xchg
setae
push
fiaddl
cmpsb
mov
jbe
ljmp
xchg
sbb
pop
pop
pop
lock
xor
out
sub
pop
or
xchg
sub
pushf
mov
rcll
mov
dec
pop
pop
sbb
nop
popf
xor
pop
cwtl
and
shlb
sub
stos
sub
mov
js
jbe
cmp
ljmp
cltd
mov
push
xchg
sti
xor
inc
xchg
jae
add
std
xor
and
xchg
push
adc
loopne
rcll
add
jno
fdivp
and
and
push
in
cmpb
outsl
ja
shrl
stos
scas
je
and
pop
xor
out
mov
fcompl
add
dec
mov
out
stos
sub
lods
sub
leave
fistps
and
cmp
bound
outsl
mov
test
fistps
xor
nop
outsl
in
mov
or
stc
out
cltd
xor
ja
test
pop
lea
testl
sbb
mov
mov
pushf
jecxz
sbb
pop
jl
std
sub
mov
sub
roll
and
aaa
ret
pushf
add
into
lret
dec
out
xchg
je
ret
cli
inc
loopne
out
add
pop
inc
sbb
inc
mov
lcall
sub
les
jp
xor
ret
sub
xor
pop
vmovlps
pop
popa
dec
dec
pushf
or
mov
mov
push
sub
ds
jle
xchg
fimull
lds
ror
dec
mov
ficoms
jbe
pop
xor
mov
cmp
imul
aam
and
inc
insb
fisubrl
cld
push
in
fisubl
call
jae
ja
cs
into
fsubrl
lcall
jle
fisubl
icebp
sti
push
and
ss
sbb
fcmovb
pushf
xor
addr16
out
push
mov
jp
mov
stos
xor
jg
cltd
xlat
iret
movsl
cmp
lods
pop
stc
stos
cmp
mov
jecxz
stos
push
and
mov
cwtl
iret
sub
test
getsec
xchg
mov
scas
scas
imul
lock
mov
push
jg
in
enter
adc
xchg
jne
ss
dec
pop
adc
mov
inc
jns
cwtl
inc
mov
test
in
sahf
push
pop
or
outsb
loope
add
in
jge
leave
push
add
call
push
pop
imul
sahf
ss
popl
mov
pop
jns
or
or
imul
sub
push
std
adc
mov
mov
or
inc
imul
sbb
cmp
adc
sub
pop
rcrb
sub
or
jle
mov
push
fistpll
xchg
pop
ljmp
int
cmp
mov
sub
rcll
jecxz
repz
add
testb
ja
pop
dec
shll
push
js
or
popf
pop
in
icebp
in
les
mov
push
movsl
data16
idivl
std
notl
lods
jle
lcall
xchg
sahf
punpckhdq
test
mov
or
mov
sub
jp
xchg
sub
push
xchg
sbb
fcmove
mov
jae
rcl
sub
push
icebp
in
movsb
pop
cmp
inc
fucomip
sbb
mov
xchg
out
inc
lcall
lock
lods
std
xchg
enter
jp
xchg
inc
xor
imul
xchg
clc
xorps
leave
adc
je
sub
dec
cli
psubsw
testb
xor
subl
mov
xchg
lret
iret
mov
push
lcall
data16
int
mov
xchg
or
dec
add
xchg
sub
mov
call
into
mov
push
dec
lret
mov
mov
pop
pop
push
iret
daa
add
and
das
adc
sbb
movsb
addl
jbe
xchg
inc
dec
mov
sbb
xchg
or
enter
rdtsc
fisttpll
repz
hlt
and
in
xchg
dec
push
gs
fcompl
iret
leave
sub
movsb
mov
add
xor
ds
jmp
jle
or
sub
outsb
les
sbb
inc
push
mov
jns
icebp
cmpsl
xchg
ljmp
in
ljmp
pop
or
cmpsl
fdivrl
pop
xlat
rcr
mov
pushf
xor
adc
or
pushf
mov
movsl
scas
pusha
test
jmp
cmp
adc
adc
das
mov
or
xor
call
ja
test
dec
pop
mov
add
xor
mov
dec
outsb
push
neg
call
lods
mov
mov
es
mov
dec
push
push
inc
iret
mov
sub
mov
mov
add
adc
aas
fwait
xchg
adc
xor
cmc
int
mov
sbb
add
xchg
cmpsb
fdivl
mov
lds
mov
inc
lcall
pop
aas
notb
sub
arpl
movsl
shlb
xor
aam
adcl
insl
push
popa
pop
jbe
in
ret
or
shrb
push
mov
jbe
mov
into
cltd
out
dec
jmp
mov
out
cs
pop
adc
scas
sbb
xchg
jb
cmp
sbb
and
outsb
push
test
in
fdivrs
leave
jns
push
leave
cmpl
cmpsb
call
pop
insb
imulb
mov
scas
ds
sub
je
dec
rcl
fs
mov
xlat
push
cs
sub
sub
fisubl
dec
std
push
push
movsl
xor
nop
push
add
fs
enter
or
sub
push
sub
movsl
jecxz
adcl
pop
bnd
nop
fstps
xor
sbb
adc
aas
addr16
insb
gs
xchg
aaa
mov
mov
sub
jmp
scas
test
add
jnp
aaa
ret
pop
mov
mov
mov
dec
jno
cmp
aad
fstpt
jo
pop
js
stc
test
cmpsl
scas
inc
int
movsl
int3
sahf
add
cmp
mov
js
mov
fmuls
sbb
push
jns
sub
dec
mov
imul
xchg
movsb
jp
lret
adc
mov
mov
mov
cwtl
fcomip
mov
stos
mov
je
cmp
in
ljmp
fnstsw
mov
mov
imull
out
cmp
sub
in
sbb
mov
imul
pop
lcall
pop
jb
inc
enter
arpl
cmc
aad
stc
mov
test
adc
inc
jmp
mov
pop
push
jnp
push
mov
fsub
push
cld
pop
mov
adc
xchg
idivl
pop
test
arpl
mov
hlt
rcrl
icebp
int
jnp
shl
push
cmp
hlt
push
cli
xlat
jmp
jecxz
ja
or
xchg
popa
stc
mov
adc
jmp
icebp
sbb
jmp
lea
pop
mov
in
cmp
aaa
lock
add
push
jb
add
cmp
xor
clc
fdiv
mov
cmp
test
popf
cmp
inc
cld
es
cmp
mov
adc
xrelease
pop
jb
and
loope
ss
jp
sub
push
mov
pop
xchg
incl
ds
add
fisttpll
fadd
js
jb
mov
or
mov
nop
jae
lock
shlb
repnz
mov
fstpt
mov
dec
pop
arpl
sbb
xorl
dec
mov
popa
push
inc
std
fsubrs
xor
loop
mov
push
sarl
mov
fwait
mov
addr16
aam
or
out
sub
aad
cmc
leave
xchg
adc
mov
aad
xchg
dec
dec
jno
dec
jp
add
lahf
jne
insb
sysenter
mov
jo
and
shr
xor
pop
out
jl
sahf
clc
fsub
sarl
imul
je
add
arpl
pop
inc
mov
push
pop
xchg
int
lods
cmp
xor
loop
aad
fstl
cmp
idivl
mov
cmc
xor
add
jl
mov
adc
mov
js
jmp
ljmp
es
outsl
mov
dec
in
fmuls
inc
fcomps
loop
loopne
xchg
repz
daa
dec
cmpsl
test
bound
push
push
or
sbb
push
or
xlat
push
cmp
xchg
pcmpgtw
lret
push
neg
ret
lods
add
and
sub
insl
test
sbb
cld
cs
decb
jg
push
sub
pop
shrl
leave
mov
pop
mov
xor
jmp
test
in
cmp
cwtl
jns
lods
adc
jb
push
or
fsts
into
mov
lahf
xchg
notb
and
ja
mov
je
dec
add
push
jne
clc
in
or
xchg
idivb
jo
sbb
inc
testb
ror
fidivl
adc
cmp
sub
lahf
xor
clc
push
es
pusha
outsb
sub
stc
movsl
popf
inc
fsubr
and
push
lret
int
and
fnsave
mov
mov
sti
cmpb
dec
push
sahf
xchg
inc
push
sub
cli
mov
dec
addb
enter
clc
cmp
or
xchg
dec
les
test
inc
ret
jmp
xchg
rorb
sub
ret
fsub
adcl
or
mov
pop
inc
push
insb
fdiv
sbb
inc
adc
and
out
sti
adc
insb
fstpl
fxsave
ficomps
cmpsb
push
cwtl
dec
xchg
dec
jae
cmp
push
inc
dec
sbb
pop
mov
andl
sub
arpl
movsl
das
test
xor
mov
push
fmull
icebp
pop
icebp
push
movsb
cmp
inc
jno
dec
sbb
mov
mov
shrl
inc
adc
pop
pop
adc
push
mov
sti
jmp
or
in
ret
out
aam
int
clc
and
jns
sbb
sbb
inc
jo
lret
jle
sti
lret
mov
adc
arpl
mov
pop
movsb
int
push
aam
mov
xchg
jno
mov
jbe
ljmp
and
xchg
icebp
les
pmulhuw
ljmp
int
inc
leave
sbb
and
out
jge
inc
mov
sub
arpl
jbe
mov
sarb
es
fsub
les
das
mov
jns
cld
sahf
incb
dec
push
in
pop
lahf
xchg
mov
aas
mov
mov
cmpsl
sub
cltd
out
sbb
subb
xor
mov
daa
fcmovnbe
movsl
scas
push
outsb
mov
mov
sub
imul
mov
cmp
jge
sub
cmpsl
sub
imul
dec
idivb
push
out
clc
inc
pop
mov
ss
dec
std
mov
xorl
dec
dec
jnp
sbb
cwtl
inc
mov
ja
aam
sub
jmp
pop
cwtl
sti
fwait
xchg
gs
cwtl
mov
aam
adc
inc
add
push
add
in
ss
pop
xor
xchg
pop
mov
fs
adc
jne
mov
inc
xor
sbb
clc
mov
jb
rol
std
sarb
pop
mov
adc
pop
std
in
les
ds
cld
mov
out
hlt
mov
loope
sbb
lods
out
jnp
cwtl
jbe
scas
vcmpsd
fidivrl
fldl
pop
popa
loopne
cmpsb
push
jns
je
inc
fbstp
hlt
pop
sbb
fists
repz
aas
pop
add
dec
pop
popf
inc
ret
xchg
sti
and
mov
int3
out
call
add
data16
jecxz
repz
bound
je
cmp
mov
mov
dec
push
ss
jecxz
inc
mov
mov
addr16
lods
and
loop
xchg
mov
mov
xor
addb
jmp
testb
jns
das
decl
jns
int3
push
inc
clc
mov
mov
jno
leave
into
sub
inc
hlt
loopne
stos
adcb
mov
jp
mov
fcmovnb
inc
je
pusha
pop
mov
and
test
data16
push
arpl
movsb
jmp
int3
dec
sub
insl
ss
xor
and
dec
sbb
xchg
sbb
xor
dec
lahf
rorl
insl
out
mov
daa
or
pop
adc
pop
pop
push
test
cmp
js
ja
dec
jmp
cmpl
add
test
inc
arpl
or
movsl
or
push
cmovnp
stos
or
jp
scas
inc
pop
sbb
jne
mov
sub
inc
xchg
ds
arpl
push
xorb
lret
inc
push
clc
repz
mov
lcall
inc
mov
dec
pop
lret
dec
mov
mov
or
rcrl
nop
xchg
dec
cmpsl
jp
aaa
imul
test
fdivrp
movsl
fs
xor
inc
loopne
mov
mov
jmp
push
and
push
outsl
movsb
movsb
in
loope
arpl
cli
in
fists
ror
mov
sbb
adc
sti
aaa
inc
jecxz
outsb
fnsave
dec
test
bound
pop
jl
icebp
notb
mov
in
popf
call
jl
sub
dec
and
daa
adc
xchg
sub
or
dec
repz
leave
pop
addb
fistps
cmp
sbb
pop
aaa
sub
imul
push
push
xor
test
inc
sti
scas
orb
sub
or
ss
pop
orl
mov
sbb
inc
sub
mov
and
loop
ss
sbb
popa
inc
dec
scas
bound
xchg
inc
jo
insl
and
push
mov
xchg
popa
fs
inc
icebp
inc
dec
inc
aam
cmp
sbb
jle
add
sbb
pushf
mov
cld
mov
inc
sbb
shlb
int3
mov
pop
mov
in
dec
mov
jle
jle
loopne
mov
cmp
sbb
sbb
ss
std
ja
push
push
mov
jecxz
cmc
lahf
xchg
adc
cmpl
xor
pop
sahf
fisubl
pop
dec
xchg
test
lret
loop
ret
testl
push
movsl
int3
mov
enter
lods
aas
or
cs
std
aam
fiaddl
fwait
add
inc
add
js
pop
xchg
push
inc
pop
or
mov
in
dec
test
xchg
call
scas
in
aas
ret
jbe
xchg
movsl
xchg
stc
loope
inc
in
or
ret
cmp
or
mov
jbe
popf
dec
imulb
popf
outsl
sti
xchg
mov
ror
inc
cmp
inc
mov
arpl
dec
and
dec
sbb
scas
lds
mov
ds
add
cld
jns
jg
mov
iret
xor
dec
rorb
adc
mov
inc
pop
cmp
inc
dec
addl
jns
jle
jb
in
sbb
bound
lods
sub
add
aaa
push
repnz
mov
pop
iret
lcall
sbb
pmulhw
jns
jne
sbb
out
pop
jbe
mov
insl
xor
push
jnp
nop
sub
inc
sti
lock
fimuls
in
mov
aaa
sbb
push
ja
and
jne
add
jae,pt
mov
and
daa
jo
cmp
sbb
fcomp
mov
test
xor
lock
jno
pop
aas
incl
adc
pusha
push
mov
sub
flds
dec
int3
jae
fbstp
loope
push
pop
jbe
xchg
mov
push
mov
sti
jb
sub
and
add
adc
jecxz
inc
add
add
jecxz
into
xorl
lods
shr
popa
and
push
fcompl
lret
out
ds
stos
sbb
push
pop
cmp
aam
rcl
ljmp
lds
ss
cs
pop
ret
pop
repnz
jl
add
pop
inc
pusha
pop
addr16
pushf
jg
dec
xchg
pop
daa
lods
xchg
mov
xchg
or
mov
add
mov
lock
push
mov
jns
or
cmp
test
sub
lods
sbb
xchg
les
repnz
fstps
adc
lods
filds
insb
sbb
adc
jecxz
lret
mov
xchg
ja
pop
rcl
ljmp
repz
rcll
inc
stos
jl
adc
lock
dec
pop
xchg
inc
mov
test
insl
or
pop
fwait
sub
dec
xchg
rol
mov
scas
push
mov
psadbw
add
aas
mov
clc
or
and
outsb
sub
mov
dec
adcb
in
adc
dec
and
push
add
cmc
jne
jo
or
movb
mov
push
push
leave
lret
pop
out
cld
dec
inc
mov
aad
int
jno
test
lret
in
inc
pusha
lea
mov
ret
fcoml
repz
and
in
xchg
loopne
push
fwait
test
and
jbe
inc
in
dec
xabort
mov
dec
arpl
xchg
mov
test
loop
sbb
notl
mov
and
push
in
imul
je
xchg
push
in
gs
xor
scas
enter
mov
xchg
pop
test
pop
and
aad
in
int
ret
insb
dec
jbe
inc
add
jo
sub
lods
cmp
jle
arpl
mov
pop
insb
fcoms
pop
cmp
push
ret
adc
jae
inc
ss
std
or
mov
ficoml
adc
fisttpll
pop
xchg
pop
adc
aad
div
sbbl
push
jbe
icebp
mov
pop
out
jbe
inc
ljmp
mov
add
jbe
movsb
or
idivl
stc
sub
lea
std
pop
mov
aam
and
dec
sub
roll
lret
push
pop
xchg
xchg
out
xor
xchg
ds
cli
dec
es
pop
prefetchnta
dec
out
add
test
and
es
cli
pop
push
scas
mov
ficomps
sbb
mov
cmp
dec
pop
call
mov
in
dec
jo
xlat
mov
outsb
pop
insl
popa
sub
jno
mov
push
push
mov
push
fsubrl
sbb
mov
jne
inc
inc
mov
scas
pop
xchg
jl
je
sbb
or
in
lds
mov
pushf
rcrl
shll
jle
adc
pop
sub
xor
stos
add
jns
sbb
cmpsb
call
jb
inc
lret
jb
mov
movsb
dec
push
mov
js
gs
inc
sub
movsbl
xchg
jmp
stc
sbb
popf
mov
loopne
fimuls
sbb
fidivl
aaa
mov
rorl
jbe
mov
adc
push
mov
mov
aam
inc
and
aas
sub
jecxz
popf
xchg
pop
test
lock
mov
cwtl
jmp
xor
inc
or
xchg
insl
je
fistpl
bound
inc
mov
sub
ret
into
stc
inc
nop
in
xchg
lea
mov
jge
sbb
rcrl
test
push
in
fdivl
sbb
out
loopne
ror
int
cli
adcb
pop
pop
daa
pop
int
pop
lods
jo
enter
in
pop
xchg
out
mov
ret
out
jae
xchg
lahf
lock
cmc
cmpsb
mov
imul
dec
push
jo
icebp
dec
test
mov
scas
inc
xchg
sbb
out
lret
ret
mov
jle
xchg
mov
ja
mov
mov
repz
inc
push
sbb
fisttpl
je
mov
add
xchg
mov
add
bound
mov
mov
mov
push
ja
leave
test
je
push
lcall
daa
in
jecxz
xlat
mov
data16
cmp
mov
inc
in
in
jmp
sub
call
bswap
cmp
jmp
movsb
adc
mov
xchg
or
cmp
or
jl
insb
jl
gs
mov
shlb
xchg
js
sbb
push
mov
pop
fcomip
fistpll
mov
int
mov
jp
jge
lgs
xorb
rol
mov
scas
aas
inc
ret
sub
mov
mov
lret
mov
rcrl
sarl
addr16
pop
gs
data16
jb
sbb
mov
iret
or
jo
mov
xor
mov
lret
mov
push
aaa
aam
inc
je
cmc
sub
jb
lea
mov
sub
int
adc
mov
inc
jbe
adc
pushf
jbe
popf
or
dec
xchg
pop
lret
sbb
insl
movsl
lret
stc
jns
mov
rcll
gs
mov
rclb
cmpsb
ljmp
faddl
loope
inc
xor
jnp
cs
das
lock
or
pop
out
lds
sarb
mov
cmp
loop
testl
xchg
xchg
jmp
lret
add
cmp
loope
pusha
mov
in
ljmp
mov
dec
aas
inc
aad
jnp
jbe
dec
out
fwait
ret
inc
push
jmp
dec
push
mov
cltd
testb
sub
popa
test
jns
mov
and
cmp
xchg
inc
dec
ds
scas
enter
add
sti
pop
call
cmp
ja
cmp
in
pop
out
int
pusha
cmc
lods
popf
mov
xorb
out
clc
dec
dec
adc
or
add
pop
mov
or
das
ret
push
out
jp
rcrl
push
aad
mov
adc
xchg
mov
mov
aas
xchg
push
mov
cltd
push
sbb
add
cmpsb
orl
cwtl
ds
dec
sub
les
test
pop
rcrl
push
pop
fiaddl
mov
cmpsb
mov
andb
xor
pop
fsubl
test
pop
jmp
mov
xor
loop
sub
ds
add
sub
bound
mov
xchg
xor
or
pop
xor
ret
das
or
lcall
aas
iret
cmc
sub
and
jae
inc
jecxz
pop
jns
mov
pusha
repz
adc
mov
pushf
push
fidivs
negb
lahf
lahf
cmp
mov
loop
pop
popf
add
and
fisubl
aad
push
aad
pop
ss
arpl
insl
mov
andb
je
add
cmp
clc
fsubs
pop
xor
dec
sub
sbb
aad
ljmp
rcr
lods
mov
movsb
adc
push
mov
cmp
mov
enter
mov
mulb
mov
and
xchg
aaa
push
icebp
mov
fs
movsb
push
add
sub
lea
cmp
hlt
ficompl
fidivrl
inc
add
arpl
out
es
cmp
add
mov
cmp
pop
leave
xchg
lods
push
out
sti
adc
mov
sub
sbb
imul
xchg
pop
ljmp
sub
lock
insl
arpl
pushf
hlt
dec
inc
jle
jno
inc
lods
cli
fst
bound
movsb
xchg
sub
pop
cld
leave
pop
les
loop
dec
les
imul
pop
lds
sbbb
jmp
enter
mov
ret
repz
aaa
mov
lea
ret
mov
adc
lods
jae
sub
jo
mov
cltd
out
mov
push
push
add
fidivs
outsl
insb
pslld
neg
fucomi
shll
sahf
pop
in
xor
fstp
adc
jns
movsb
or
shl
push
nop
int3
adc
xor
push
mov
lcall
dec
mov
adc
out
mov
movsb
add
out
out
dec
inc
cltd
stos
lret
adc
sub
sub
mov
insl
inc
and
push
shll
xor
sbb
sub
dec
xlat
loope
icebp
pusha
xor
jo
push
push
mov
sub
jmp
jp
cmpsb
dec
adc
xor
nop
lahf
mov
add
dec
xor
sub
test
incl
popl
dec
inc
xor
xchg
push
dec
into
js
mov
sub
imul
mov
xchg
xor
cwtl
xchg
push
or
mov
mov
push
and
mov
mov
mov
add
xchg
xorl
aas
dec
mov
shll
cmpl
les
sbb
jo
mov
push
add
hlt
lds
outsb
dec
fsts
adc
jnp
int
scas
and
pop
and
push
mov
jg
push
lret
adc
jns
inc
rcrb
xchg
imul
add
pop
fbstp
in
inc
xchg
sub
dec
add
imul
incb
mov
ss
cli
in
mov
sbb
std
aam
imul
add
out
jnp
pop
or
inc
lds
setnp
mov
ss
cmpsb
mov
ror
mov
add
in
cmp
ljmp
inc
in
lods
xchg
shlb
adc
mov
or
add
pusha
ret
mov
scas
or
xchg
jmp
sti
js
subb
js
test
jle
inc
jecxz
sub
xchg
adc
cmp
test
lcall
push
and
aas
fisubrs
aaa
lds
mov
mov
xor
inc
xor
ljmp
push
mov
and
push
nop
lds
push
scas
xchg
repnz
das
xlat
mov
stos
add
or
jl
mov
jge
dec
das
push
hlt
mov
xor
out
adc
mov
cmp
out
mov
mov
and
dec
xchg
mov
pop
loop
aas
pop
roll
clc
test
cmp
jns
lret
and
mov
jp
mov
xorl
push
fyl2xp1
and
int
popf
out
cld
cli
loopne
fldenv
xchg
rol
xlat
jp
dec
mov
je
dec
push
shr
fwait
mov
xchg
sub
aas
std
mov
xchg
std
mov
ficomps
jmp
push
dec
mov
jl
int
pop
jp
enter
push
cmp
sbb
push
lods
mov
movsb
mov
xor
sti
sbb
mov
xchg
add
loope
iret
xchg
sbb
loop
mov
jecxz
cmp
pop
xchg
fs
das
xchg
clc
scas
clc
stc
or
add
adc
xchg
dec
push
test
lea
add
and
sub
jns
pushf
vminps
les
leave
insl
or
and
sti
outsb
adc
xor
test
inc
add
cmp
mov
xchg
mov
arpl
mov
icebp
inc
std
jne
xor
xor
inc
pop
xor
mov
jmp
fbld
and
ljmp
push
and
loopne
dec
inc
cmpsl
push
add
adc
push
xor
mov
aas
gs
lret
pop
mov
popf
out
pop
mov
in
mov
cmp
ljmp
popf
in
inc
fdivrl
stos
mov
out
ja
push
mov
out
push
dec
sbb
rol
das
mov
mov
dec
push
cld
test
jl
xchg
lret
movsb
xor
mov
mov
pushf
ja
jge
mov
lock
xor
xchg
pop
loope
xchg
or
enter
adc
movsb
lock
out
sub
mov
add
mov
mov
mov
sbb
testb
call
mov
or
dec
add
lds
imul
add
add
mov
stc
and
aas
jns
or
dec
adc
dec
pop
jb
in
arpl
cmpsl
insl
dec
sub
mov
mov
lods
dec
mov
push
push
pop
cli
movsl
inc
sbb
fisubs
jbe
mov
js
fwait
out
add
jno
js
or
jnp
add
cmp
xchg
adc
sbbb
dec
mov
icebp
aaa
pop
sbb
sti
pop
mov
mov
test
push
js
hlt
inc
jno
cmp
ja
daa
incl
and
jmp
or
dec
and
jo
mov
popa
out
cld
or
push
add
xchg
sbb
notl
sbb
or
xor
dec
adc
dec
lods
rcl
stos
or
mov
scas
sbb
ret
push
pop
cmp
into
or
ljmp
mov
push
popf
xchg
mov
dec
addr16
stos
or
sub
pop
add
dec
jl
add
sub
mov
jae
pop
insb
leave
sub
sbb
in
mov
inc
pop
or
sub
in
inc
inc
jle
orl
cltd
pop
xor
repnz
sbb
adc
mov
addr16
cwtl
ds
into
aad
std
sub
in
cmp
pusha
mov
or
ret
xchg
jecxz
jge
mov
scas
sbb
lea
pop
or
mov
xor
adc
ret
cmp
test
stos
outsb
out
or
or
cli
rorb
push
mov
sub
xchg
in
push
sub
push
add
mov
or
clc
fwait
mov
mov
notb
inc
mull
dec
pop
xor
and
lods
add
cmpsl
out
loopne
pop
out
addr16
ss
clc
xor
add
arpl
sbb
cltd
adc
mov
push
test
cmpb
fs
in
jg
psraw
in
inc
ss
fisubrs
mov
dec
xchg
shlb
je
int3
sub
jns
mov
adc
fs
stos
je
insl
scas
sbb
les
bt
out
lret
sbb
push
insb
push
mov
out
shrb
pop
mov
mov
mov
test
mov
aam
lea
mov
insl
and
clc
add
shl
adc
mov
adc
jae
jae
mov
int
mov
imul
push
sti
lea
mov
mov
aad
xchg
bound
jnp
popf
lahf
xchg
or
outsb
or
scas
inc
jno
inc
pop
xor
cmp
ljmp
notb
mov
movsb
aas
mov
jmp
les
jl
orl
or
jns
xchg
and
mov
in
popa
xchg
aam
in
sti
cmc
or
out
icebp
test
sbb
insb
imul
and
xchg
dec
sbb
mov
jbe
lahf
ja
ficoms
xchg
rolb
fcmovu
into
and
xchg
les
inc
cmp
add
dec
ror
sbb
push
loop
mov
sahf
shrl
mov
fnstsw
pop
imul
mov
lcall
dec
adc
dec
ljmp
inc
jecxz
pop
hlt
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
jmp
xlat
repz
xchg
mov
mov
mov
bound
pop
bound
xor
ret
push
stos
push
icebp
jne
or
push
test
xchg
hlt
mov
aam
cmp
std
mov
lret
cwtl
inc
xchg
xorl
rcl
cld
xchg
mov
xchg
inc
inc
movsl
dec
add
mov
rolb
adc
pop
test
scas
aad
mov
daa
push
cmp
or
aas
pop
lea
pop
icebp
xorl
xor
ja
cmp
roll
adc
pop
in
push
ret
iret
cwtl
dec
fs
repnz
sbb
push
adc
mov
adc
ret
mov
mov
fistl
rdrand
xor
push
and
xor
jnp
pushf
loop
sahf
out
pusha
incl
xor
xchg
sub
push
add
pop
xchg
push
dec
mov
loop
pop
sti
or
mov
negb
hlt
pop
inc
mov
test
mov
add
movsl
dec
xchg
lods
icebp
imul
sub
push
cltd
pop
mov
fld
out
ss
cmp
xchg
andl
negb
mov
or
inc
pop
out
movsl
fildll
sub
jl
ret
fidivs
dec
movsl
int
sbb
push
in
push
sti
lcall
sub
xchg
outsb
sub
hlt
xor
jae
add
and
mov
mov
popa
fsub
push
dec
bound
mov
mov
adc
and
pushf
mov
insb
pop
mov
mov
lea
fimuls
dec
fildll
add
icebp
jns
add
pop
cmc
adc
cs
and
mov
test
mov
int
jbe
push
clc
fdivs
pop
adc
and
sbb
jne
add
les
aad
lahf
shll
jg
arpl
dec
out
sub
movsl
mul
xchg
adc
mov
adc
push
dec
or
popf
fisubrl
pop
mov
dec
lock
out
shrd
int3
push
lods
mov
cbtw
mov
push
xchg
cmp
xchg
xchg
lret
scas
xchg
xchg
sub
das
sbb
dec
les
sbb
sub
and
addr16
or
jae
xchg
mov
mov
inc
mov
or
push
sbb
fimull
and
cwtl
in
mov
fidivl
jo
adc
mov
jae
rorb
sti
cmp
mov
xchg
cmp
cmp
out
inc
push
mov
cltd
cld
scas
or
xchg
cs
ja
outsl
rolb
dec
or
lret
or
mov
cmpsb
pop
pop
aad
and
popf
mov
ds
lcall
sbb
rorb
pop
shlb
in
lods
hlt
rcll
outsl
popa
out
dec
inc
divl
cmp
fnstsw
sbb
mov
inc
jg
sub
fwait
lret
adc
jle
rorl
in
sub
mov
mov
inc
lret
ja
dec
jo
imul
jg
sbb
stos
sub
mov
or
mov
jns
fneni(8087
insl
mov
lahf
leave
xor
dec
xchg
lods
mov
int3
sbb
rorl
adc
arpl
movsl
pushf
xchg
jb
loope
mov
out
push
lea
cld
es
mov
es
addb
mov
dec
stos
mov
cmp
xchg
jl
icebp
addr16
outsb
nop
cmp
cli
fstp
push
pop
ds
movsb
test
fadds
add
dec
mov
and
std
jb
les
pusha
sub
mov
jne
insb
out
jge
testb
loopne
rorl
fisubl
aas
mov
imul
jge
popf
subb
dec
or
jge
xor
jb
xchg
data16
mov
mov
inc
mov
sti
dec
xchg
fsubl
popf
or
or
cltd
jne
int3
cmp
pushf
add
into
std
xor
stc
adc
mov
pop
fcos
xchg
cwtl
cmc
jb
in
or
xchg
lods
bound
loop
outsl
xchg
pop
push
stos
mov
mov
sub
or
aam
xchg
xor
inc
mov
jno
insl
test
cmp
add
cld
sbb
shl
adc
lahf
dec
adc
sbb
movsl
movsl
enter
leave
or
outsl
mov
inc
lahf
int
mov
rcl
mov
adc
inc
mov
mov
mov
es
pop
and
or
test
cmp
sahf
dec
into
cmp
mov
fcomps
popa
loop
xor
test
fucomp
lea
leave
out
stc
jge
push
test
icebp
inc
jle
inc
push
nop
mov
pop
inc
scas
loopne
insl
push
lret
xlat
sub
xor
les
lds
xchg
cs
inc
cmp
fucomip
jl
xchg
lret
add
mov
mov
sbb
mov
jecxz
in
pop
fstl
aad
adc
cmpsb
das
pop
pusha
xor
push
xor
and
leave
lods
adc
fisubrs
loopne
inc
xor
mov
xchg
push
xor
mov
in
scas
pop
mov
pop
jl
pop
mov
sbb
gs
sub
xchg
std
push
outsl
cwtl
mov
fmuls
in
hlt
clc
xor
mov
pop
sub
or
mov
xor
adc
lahf
mov
daa
add
mov
jno
pop
imul
addr16
shl
popa
gs
icebp
popf
pop
imull
mov
mov
add
bound
xchg
pop
out
add
jns
pushf
rolb
test
xchg
out
mov
cmp
sub
je
mov
out
stos
repnz
xor
xor
push
movsb
dec
scas
fldcw
pop
lods
outsb
shll
out
fstl
adc
jmp
mov
enter
loop
fisttps
stos
movsl
xor
ljmp
popa
push
inc
jle
popf
pop
loop
bswap
fisubs
cwtl
adc
dec
xchg
ss
mov
or
push
add
mov
sbb
xlat
pop
mov
sub
shl
jge
sub
lock
test
fcomi
call
push
in
ficompl
inc
mov
ds
in
imul
test
dec
das
orl
push
mov
sub
loope
jge
push
mov
add
out
adc
pop
push
gs
bound
leave
shl
dec
mov
hlt
add
inc
or
jge
insl
vcvttsd2si
dec
shl
sub
lods
sbb
cmpxchg
jo
xor
leave
mov
lock
imul
mov
jge
addb
imul
add
xchg
shlb
push
pushw
dec
into
cltd
repnz
mov
test
ds
movsb
daa
into
ret
cltd
std
jle
xor
jge
into
jae
out
shll
xor
inc
call
mov
ljmp
sbb
add
pop
add
data16
mov
mov
mov
out
leave
jmp
push
cmp
push
imul
push
sti
and
setne
sub
pop
mov
rcr
dec
xchg
pop
std
xor
and
sarl
adc
rcr
loopne
shlb
out
sbb
pop
iret
clc
sbb
in
stos
fbld
push
adc
pop
or
idiv
mov
xor
jl
pop
and
adc
adc
sub
sbb
mov
lock
in
push
pop
ret
cmc
pushf
movsb
jns
lds
mov
pop
mov
mov
fldt
push
das
jp
in
loopne
popf
or
loop
stc
mov
xchg
push
fcmovnbe
lods
xchg
adc
push
or
jecxz
xor
dec
xorl
js
test
popf
pop
push
pusha
adcb
enter
mov
cwtl
mov
pushf
inc
mov
dec
cltd
sbb
sub
mov
dec
imull
call
call
pusha
add
mov
sub
xorl
shl
push
pusha
in
mov
jne
insl
aam
dec
mov
push
popa
push
lahf
mov
push
mull
dec
jns
adc
inc
push
sarl
add
xchg
sub
adc
mov
xchg
ret
sbb
cld
and
into
imul
lret
cmp
aaa
popa
xchg
cwtl
xchg
and
jg
xchg
or
ja
xor
cmp
xchg
inc
mov
enter
jmp
iret
mov
rcrl
or
aaa
cwtl
out
ret
dec
sub
repnz
cmp
aas
pop
or
dec
lahf
sbb
jmp
jnp
jmp
mov
ret
pop
imulb
mov
mov
pop
xlat
js
ljmp
and
mov
dec
sub
enter
sub
rorl
mov
inc
cmp
inc
call
pop
movsl
aaa
imul
data16
clc
mov
xchg
push
mov
pop
icebp
int
dec
cmc
cwtl
cld
mov
out
imul
add
js
mov
pop
jecxz
lds
aas
xor
pop
xchg
adc
cs
aad
xor
cmp
jecxz
ficoms
sub
notb
testl
xor
sbb
mov
push
ja
pop
jno
jl
movsl
leave
mov
dec
xchg
daa
mov
repnz
stc
call
fldenv
leave
scas
inc
sbb
jne
mov
mov
jno
mov
adc
sub
and
dec
je
push
pop
clc
mov
cmp
mov
lret
test
bound
cmc
sbb
sti
cmp
je
push
das
iret
dec
xchg
inc
das
ret
jmp
aam
fisubrs
fnsave
lea
sbb
rorl
leave
out
xchg
cmc
pop
pop
in
popa
or
mov
in
cmpsb
jno
sbb
insb
and
push
daa
xor
push
imul
repnz
aam
ja
test
mov
jmp
push
cld
inc
aam
imul
dec
xchg
clc
fsub
gs
ja
sub
lcall
push
rclb
rcl
xor
dec
push
aas
push
jecxz
gs
jecxz
jg
or
std
int
aaa
jnp
pop
lret
icebp
cmpsl
push
jns
sbbl
cli
xchg
fdivrs
loopne
xor
jbe
shlb
pop
jge
aas
lds
aas
nop
adc
pop
adc
mov
mov
jb
outsb
shll
pop
xlat
mov
jno
in
add
test
xchg
jnp
and
adc
cmpsl
imul
icebp
or
or
sbb
call
out
cmc
fistps
add
add
mov
jecxz
xor
xchg
repz
pop
enter
aas
and
sub
int
dec
inc
mov
mov
popa
rclb
stos
aas
pop
into
fbld
pop
sbb
loop
xchg
sub
cmc
fldl
dec
inc
push
jb
sub
push
popf
xlat
fsubs
jb
xchg
cmp
fs
ljmp
push
in
push
add
aas
insl
loope
pop
cld
aam
dec
outsb
sub
xchg
rcrb
out
and
jae
or
out
xor
ljmp
mov
adc
scas
add
dec
test
inc
test
cmp
mov
fmull
aad
jbe
mov
cmp
int3
nop
lcall
test
or
lret
test
push
insb
ljmp
dec
cmp
xchg
or
xchg
popf
lods
adc
or
or
xchg
mov
popf
mov
mov
movsb
aad
repz
jb
mov
adc
shll
and
or
scas
push
xor
pop
adc
mov
push
xlat
sahf
test
loop
jecxz
pop
jle
push
mov
adc
xlat
enter
inc
aas
loopne
lahf
jge
mov
orb
std
mov
bound
or
ds
mov
cmp
cmp
addr16
or
movsl
rcll
mov
loope
rorb
jg
int
jle
jb
push
pop
loop
xchg
sbb
int3
pop
jb
daa
inc
dec
adc
inc
jecxz
out
out
jmp
pop
mov
cwtl
lret
lcall
gs
outsl
out
sarb
daa
jle
cs
sbb
and
cwtl
fcmove
cs
dec
xlat
mov
jmp
in
mov
dec
jne
xchg
shlb
mov
loop
aad
xor
cld
rolb
in
jnp
xchg
lods
pop
sub
sub
mov
mov
xor
push
xor
test
in
into
mov
test
adc
push
notl
jmp
lcall
cmp
push
adc
sbb
adc
cmp
loopne
ss
bound
or
cld
mov
mov
mov
enter
loop
js
push
shl
iret
cli
sbb
testl
xor
in
inc
lock
mov
jne
stc
test
pop
push
jno
iret
mov
cmp
imull
or
mov
xchg
fwait
les
stos
push
jg
xor
xlat
push
jle
push
inc
mov
push
fisubs
mov
ret
inc
int3
add
inc
sub
and
add
add
cmpsb
aas
push
cmp
push
loopne
adc
sub
xor
and
add
adc
cmp
daa
xor
xor
popa
mov
push
pop
inc
xor
lods
dec
daa
add
or
push
ret
push
bound
mov
ss
inc
adc
jge
fucomip
orb
mov
out
cmc
xchg
pop
movsb
push
pop
jle
into
xchg
jl
sub
cmp
out
xchg
inc
mov
mov
xor
jno
fisttpll
jnp
sarb
int3
xchg
int
add
popf
lods
scas
imul
inc
adc
cmc
int
sub
popf
loope
and
mov
fwait
pop
sbb
lods
in
rcrl
in
push
bound
out
jmp
mov
outsl
sub
aas
mov
into
jns
sub
fcmovnu
xchg
outsb
cs
in
mov
into
jp
movsl
rorl
call
sbb
pusha
imul
adc
in
mov
jmp
cmp
jp
pop
dec
divl
xor
pop
xor
and
insb
jns
lock
lahf
pop
xchg
pop
sbb
mov
dec
add
push
js
add
inc
push
pusha
in
rcl
sub
jle
cmp
or
nop
dec
jnp
xor
mov
xchg
cmpsb
mov
add
les
sbb
or
shll
cmp
jb
testb
sub
push
mov
inc
xchg
sti
movsb
mov
fcomp
inc
test
cs
xor
fisubrs
movsb
stos
pop
pop
add
subb
jo
or
lcall
imul
sar
xchg
movsl
xchg
hlt
mov
mov
jg
test
lret
in
outsb
lods
xor
ret
push
xchg
add
cmc
ss
jne
aam
dec
arpl
pop
mov
popf
lods
hlt
daa
pushf
pop
jge
jns
cltd
cmp
push
sub
jne
jns
int
pop
pushf
addb
enter
aaa
xlat
inc
mov
ror
shl
fcompl
adc
ret
out
jb
movsl
or
popa
cmc
popl
or
jmp
dec
fidivs
adc
aad
pop
xor
fildl
jle
sbb
cmp
shll
iret
cmc
fucom
test
loop
inc
mov
shrb
add
push
jne
inc
js
ja
iret
loope
inc
cmp
rcrl
sub
jg
fcoms
jmp
mov
cmp
mov
scas
lcall
cmp
dec
test
loope
jno
jg
test
stc
popf
lods
mov
shl
pushf
jns
in
jge
xchg
sbb
outsl
call
sahf
push
icebp
cwtl
xor
jns
add
dec
and
pop
aad
pop
dec
mov
leave
xchg
add
in
or
int
mov
and
inc
pop
xor
push
pop
jmp
mov
push
sub
imul
push
jnp
mov
into
out
cmp
sbb
mov
lahf
pop
mov
negl
xor
jb
mov
push
pop
sahf
flds
dec
daa
cmp
out
mov
cmpsb
lahf
and
int
pop
jns
mov
dec
insb
cmp
mov
sub
loop
fistpll
cltd
clc
shl
popa
fbstp
xchg
das
es
pop
ja
inc
push
das
xor
addr16
mov
dec
popf
popw
int
cld
jmp
stc
loop
fsubl
lea
sub
pop
adc
in
sbb
popf
jp
mov
push
cmp
dec
hlt
and
pushf
add
cmp
dec
data16
ss
testl
cltd
mov
sub
adc
xlat
aam
xchg
add
lock
in
push
stc
orb
pop
ds
pop
popf
js
xchg
mov
pop
lcall
js
cmp
loope
leave
mov
mov
rorb
jne
test
repz
sbb
mov
pop
and
and
rclb
cmp
ss
insl
ja
and
add
shlb
jae
pop
dec
dec
xchg
test
xchg
jne
in
rclb
jmp
sub
xor
rol
out
inc
addr16
leave
or
xchg
sub
mov
push
call
xchg
dec
imul
mov
mov
ret
jmp
mov
imulb
push
neg
lds
shll
bound
rcrl
mov
fst
test
lcall
and
popf
push
dec
cmp
jne
adc
jl
pop
mov
sahf
push
pop
sub
fadd
pop
out
pop
xchg
sbb
lds
xor
loop
xchg
imul
daa
sub
inc
pop
add
mov
mov
push
pop
movsl
jg
or
mov
xchg
mov
mov
sbb
cmc
push
mov
mov
jg
jmp
pop
mov
xchg
out
jge
add
sub
jge
jmp
pop
add
outsb
add
sub
xchg
stos
cmp
jge
stos
mov
adc
xchg
mov
dec
imul
inc
mov
push
sub
decl
dec
adc
rcrb
cwtl
test
test
push
dec
cmpsb
jne
dec
je
das
in
pop
loop
arpl
dec
pop
mov
push
les
inc
adc
mov
lahf
push
in
je
sbb
mov
in
adc
and
lcall
adc
fs
das
xor
out
jge
in
cli
xchg
mov
les
cli
push
add
fwait
sti
imul
imul
or
lret
or
push
mov
repnz
sbb
jecxz
in
pop
jmp
fnsave
cwtl
negb
cmpb
mov
lods
pop
std
inc
mov
loope
mov
cmp
arpl
push
xchg
pop
outsb
xchg
fldt
xor
push
cli
dec
lea
lret
loop
adc
cmc
imul
test
test
mov
cmp
lret
jle
cmp
mov
and
fistps
mov
ljmp
add
mov
mov
mov
add
nop
lret
aad
mov
mov
into
repz
fs
push
int3
adcb
ret
jnp
sahf
cwtl
out
mov
sbb
cld
or
pop
pop
mov
xchg
fwait
or
outsl
jle
and
pop
inc
popf
and
fdivr
test
je
xchg
push
sub
pusha
cmp
out
xor
inc
mov
pusha
loope
out
pop
push
nop
adc
jne
sbb
push
push
lcall
jnp
sbb
add
xor
iret
push
sbb
nop
incb
shr
lea
pusha
add
arpl
loope
xchg
hlt
aam
mov
mov
sbb
int
or
xchg
or
in
fnstenv
push
xor
dec
xchg
iret
jmp
inc
sbb
and
sahf
adc
push
shrb
sub
mov
lds
inc
cli
jge
push
clc
loop
push
loopne
fcoms
leave
js
and
sbb
dec
data16
inc
sbb
loope
repz
cmc
out
mov
lods
pop
push
scas
cmp
lea
add
lret
dec
data16
aas
mov
jge
mov
jecxz
mov
and
popf
into
add
cmp
test
and
mov
dec
sub
mov
xor
js
cs
negl
xor
or
inc
push
int3
fidivs
cwtl
inc
sbb
mov
push
mov
xchg
lahf
negl
fld
and
aad
out
add
iret
test
dec
sub
dec
inc
add
add
pop
jle
push
cmpsl
lds
enter
aam
ja
fldl
das
test
loopne
std
in
push
ds
sbb
gs
inc
sbb
adcl
sbb
nop
js
inc
movsl
aam
or
mov
cmp
push
xchg
lahf
push
adc
je
push
mov
jle
or
movsl
mov
loope
cmp
into
mov
push
mov
push
mov
adc
push
fsub
jle
jmp
fs
int3
ret
cwtl
imul
lods
fidivrl
pop
pop
fstpt
mov
bound
rcll
xchg
and
push
popa
mov
cmp
subl
jecxz
lock
and
push
and
mov
ljmp
loope
push
pop
outsl
mov
ljmp
lret
hlt
dec
dec
bound
pusha
mov
add
jmp
pop
or
inc
xchg
xor
mov
mov
or
pop
add
in
mov
fisubrs
pop
inc
aam
es
sub
das
sub
mov
sub
add
cmp
push
jns
sub
aaa
aad
inc
adc
dec
xlat
fwait
or
inc
sbb
dec
mov
in
fnstenv
fcomi
sub
mov
and
add
xchg
adc
hlt
mov
xchg
pop
arpl
add
pop
or
or
jg
in
dec
xor
bound
sahf
and
pop
mov
mov
mov
xor
movsb
dec
push
int3
or
nop
cmp
pop
rorb
lds
pop
int
das
cmp
shrl
daa
xlat
mov
fwait
push
outsb
test
pop
cmpsl
sti
clc
lahf
std
sub
and
loop
xor
imul
mov
push
inc
or
imulb
enter
and
push
in
inc
fsts
mov
sbb
std
push
pop
aas
sub
mov
xor
xchg
test
inc
xchg
cmp
in
out
leave
enter
in
in
fcmovnu
push
lret
mov
cmp
pop
inc
sarl
jo
hlt
xor
icebp
rorb
fcoml
mov
push
xchg
cmp
pop
mov
dec
hlt
push
insb
leave
adc
cmp
mov
cmpsl
loop
lods
lock
in
push
mov
and
push
xchg
lahf
das
mov
jecxz
test
imulb
sti
or
dec
repz
push
inc
cltd
daa
mov
add
clc
test
lret
add
xchg
scas
push
enter
in
jl
inc
pop
cmp
add
add
jmp
pop
aam
stos
in
les
jae
fucomip
leave
aaa
das
pushf
cmp
and
and
mov
sub
push
pushf
xchg
cmp
xchg
iret
fsubrs
rorb
fwait
insl
push
mov
mov
cmp
popa
dec
sbb
cld
xchg
mov
dec
stos
add
cmpsb
sti
cmp
in
xchg
test
fwait
nop
in
out
leave
icebp
ljmp
dec
stos
xchg
sti
lock
aaa
outsb
push
dec
js
shrl
and
lock
lret
insb
std
out
or
jecxz
or
sub
fldl
pop
sub
insb
imul
jle
fiadds
imul
push
mov
nop
jp
enter
pop
divl
fstp
xor
inc
std
iret
cmp
or
xchg
cmp
nop
daa
test
ljmp
fidivrl
inc
mull
jbe
mov
subl
mov
je
int3
movsl
sub
jmp
dec
out
gs
push
addr16
xchg
add
in
mov
lods
mov
in
hlt
loope
nop
outsl
jl
out
add
pop
scas
popf
jns
out
mov
jnp,pn
scas
xchg
mov
sub
cmp
data16
cmp
mov
sub
cmp
enter
push
test
sub
in
enter
inc
add
cltd
mov
xor
lods
lret
stos
enter
dec
jp
dec
jp
jbe
push
stos
lahf
data16
ja
mov
ficoml
data16
mov
inc
dec
sub
or
xchg
aad
incl
push
lret
jp
mov
mov
push
bound
and
dec
test
ss
xchg
shl
inc
pusha
and
negb
pop
sub
std
aam
int3
stos
and
flds
fst
movsl
adc
sti
arpl
jl
and
int
jl
mov
sbb
mov
je
subb
cmp
stc
sar
mov
push
xor
and
movsl
lods
push
push
scas
cmpl
ja
lret
sahf
aas
mov
ja
mov
je
inc
iret
popa
add
push
fistps
sub
and
lahf
stc
test
fbld
or
clc
xor
ljmp
mov
xchg
push
jns
in
push
xchg
mov
push
popa
sbb
jbe
push
dec
sbb
adc
lea
mov
stc
mov
lret
std
int3
sbb
clc
mov
mov
add
push
pop
pop
ja
mov
or
adc
stc
fdivs
scas
aaa
pop
imul
jae
and
out
jae
push
lods
popf
adc
and
dec
push
movsb
mov
mov
mov
icebp
xor
fldl
or
sbb
rorl
sbb
sub
add
mov
insl
pop
ljmp
movnti
cmp
mov
sar
sbb
xchg
repz
iret
mov
pop
leave
sar
cltd
sub
in
pusha
mov
fisubrs
xor
icebp
cmp
or
push
jp
fbld
jns
and
icebp
arpl
out
and
lock
out
cmp
lods
jno
inc
mov
adc
fsubrs
dec
inc
iret
dec
std
out
dec
xchg
fsub
aas
xchg
bound
ja
loope
inc
cmp
rcrb
out
mov
jle
cwtl
cmc
sbb
shll
cmpb
sub
dec
insb
xor
fidivs
xlat
pop
cmp
clc
in
mov
shrb
jo
in
ror
dec
mov
jns
mov
jecxz
movlps
adc
into
jg
aam
cli
dec
movsl
clc
cmp
and
in
fdivrp
lods
cmp
lods
and
stc
pop
sbb
out
and
mov
push
outsb
fxch
mov
cs
sbb
not
test
push
jb
push
adc
gs
and
xchg
lret
ja
out
dec
lods
mov
ficomps
bound
inc
push
xor
inc
aaa
idivl
into
fcmovne
jg
inc
iret
data16
sbb
xchg
adc
inc
and
cmp
jge
mov
or
sbb
sahf
sti
xchg
inc
nop
and
orl
outsl
push
aad
pop
dec
or
mov
dec
dec
sub
mov
inc
cmp
addr16
pop
jbe
push
stc
and
popa
clts
push
push
inc
test
and
sub
xchg
xchg
cmp
out
lcall
aad
movsb
cmc
nop
pop
jbe
ds
or
cmpsl
ficoms
fildl
adc
lods
roll
iret
ret
xlat
filds
inc
dec
adc
cmpsb
fnstenv
lahf
mov
notl
jne
sbb
xor
outsl
xchg
popf
xchg
xor
pop
xlat
andl
and
add
jnp
xor
xchg
insb
lcall
push
pop
dec
xchg
call
call
mov
out
inc
sub
pop
xchg
xchg
je
rol
xchg
in
inc
in
mov
out
sub
add
mov
jbe
fsts
xorb
andb
add
add
mov
movsb
out
scas
mov
js
dec
js
xor
fwait
aaa
test
adc
pop
pushf
enter
inc
imul
mov
sub
stc
push
fldt
cs
pushf
xchg
arpl
nop
push
mov
jmp
add
pop
js
xchg
or
sbb
lds
and
das
lds
mov
bndstx
sahf
rol
sub
test
movsb
dec
inc
mov
push
in
xor
push
xchg
lret
sub
lcall
ret
mov
loop
scas
jmp
ljmp
pop
dec
push
test
mov
or
loope
push
aad
out
sub
add
add
xchg
int
into
push
into
push
mov
daa
mov
lahf
dec
ret
mov
imul
jp
je
push
ja
addr16
pop
xor
or
dec
dec
and
jo
fcoms
enter
test
mov
mov
shl
jle
mov
pop
cmp
cld
xchg
iret
and
cs
xor
push
mov
testb
pop
out
mov
je
rcl
mov
stos
aam
add
or
cltd
out
or
lahf
xor
test
adc
adcb
scas
dec
xchg
and
xor
stos
jl
jmp
bound
adc
jp
out
nop
cmp
icebp
mov
iret
pop
hlt
cmpsl
mov
mov
and
out
cwtl
or
adc
push
mov
stos
cmp
scas
mov
bound
loop
sub
repnz
out
xchg
int3
mov
arpl
sub
data16
push
mov
fistl
fwait
mov
jecxz
or
movsl
paddsw
pop
push
arpl
insl
sub
mov
fcomp
push
movmskps
xchg
xchg
fucom
rorb
sub
pop
addr16
cld
test
pop
sbb
mov
hlt
call
lcall
leave
jp
les
mov
add
ds
outsl
jl
cmp
mov
std
mov
sbb
and
push
xor
jmp
test
ja
in
xchg
pop
fsubs
pop
lahf
sub
inc
sbb
rcr
pop
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
push
pushl
push
push
push
pushl
call
jmp
movl
adc
mov
addl
jmp
into
or
jg
fildll
dec
mov
ljmp
pop
bound
or
sahf
inc
cmpsb
mov
insb
aad
lods
fstl
adc
pop
ja
adc
jg
mov
mov
xchg
dec
sbb
mov
xor
leave
xchg
ret
cmc
shll
rclb
push
insl
stos
ja
vmovd
dec
sar
ss
aaa
lock
push
aam
lret
jge
mov
sub
inc
mov
push
test
adc
fstl
insl
call
or
xchg
dec
fcompl
or
push
xchg
jae
mov
rol
dec
push
mov
jge
adc
inc
xchg
sbb
jg
imul
ret
xlat
push
lret
outsl
xchg
movsb
inc
cmp
dec
int
fstp
movsl
mov
aad
rcrl
xor
sti
sub
sahf
mov
add
xchg
lock
vaddps
lahf
imul
add
or
out
sbb
jmp
sub
mov
popa
sbb
pop
and
pop
add
es
inc
lret
aam
mov
pop
lock
stos
or
xchg
rep
cld
pop
xchg
mov
jp
xchg
adc
test
add
mov
sub
stc
loope
test
mov
testl
popa
addr16
xchg
sbb
out
mov
sbb
ja
sub
mov
and
movsl
xchg
cli
or
push
pop
mov
adc
jo
mov
push
bound
add
in
push
int
mov
fstl
xchg
ss
aam
push
mov
aas
data16
add
jnp
dec
xchg
popa
and
es
insb
or
enter
inc
xchg
leave
inc
in
sub
xchg
outsl
mov
mov
jmp
in
dec
mov
or
pop
fidivrl
lea
mov
pop
int
cmpsb
loop
and
sbb
arpl
xor
btc
sbb
sahf
das
shld
outsb
xor
pop
mov
mov
xor
mov
mov
xor
cltd
sub
fimull
cmp
cmp
ret
das
add
cmp
addb
mov
and
test
jo
pop
insb
outsl
adc
pop
in
test
xchg
les
inc
scas
dec
decl
dec
pop
test
mov
jbe
ficomps
call
arpl
add
cli
sbb
or
sbb
cmpsl
cli
dec
sbb
loope
jmp
lret
cwtl
outsl
scas
pop
dec
movsb
lret
ret
insl
push
movaps
insl
repz
in
mov
jecxz
mov
cli
push
pop
sub
enter
jl
das
repnz
test
in
mov
fistpll
and
fwait
aad
mov
inc
push
sub
and
mov
push
pop
mov
push
fisttpl
in
imul
neg
or
lcall
lret
mov
pop
xchg
clc
xor
sbb
rcrl
add
pop
lock
pop
jmp
daa
mov
enter
mov
clc
sub
mov
nop
lock
ja
mov
add
pusha
inc
xchg
xadd
outsl
das
pusha
mov
jge
add
sub
inc
cmc
xchg
and
jge
cmp
dec
std
sub
xor
sbb
stc
and
push
xchg
or
ljmp
loopne
xor
mov
jmp
pop
adcb
lret
xor
pusha
repz
xor
cmc
imul
fcomi
mov
fisubrl
sub
jl
ds
test
mov
push
jge
push
xor
cmove
mov
test
xor
push
movsl
xor
sbb
push
adcl
pushf
sbb
xchg
test
mov
sbb
xchg
adc
xor
sub
insl
push
cmp
loopne
jne
in
push
out
fistps
in
je
inc
jno
pop
sbb
imul
nop
mov
xor
out
ljmp
cmp
push
insb
jne
jle
mov
cld
mov
add
cmp
and
sub
inc
push
jecxz
and
xchg
call
xor
clc
icebp
xchg
and
ret
mov
add
mov
push
or
scas
adc
mov
aad
mov
jnp
dec
rcrb
xchg
mov
std
clc
repnz
mov
inc
xchg
das
cli
jge
sub
cltd
call
icebp
movsl
ret
repnz
sub
inc
jmp
stc
aam
mov
xchg
arpl
or
mov
fisubrs
sbb
push
mov
inc
lahf
cmpsb
jbe
or
cltd
cwtl
enter
adc
push
add
add
test
inc
sbb
mov
cmp
and
mov
clc
push
lret
les
mov
cltd
add
mov
mov
inc
sahf
mov
loopne
cs
inc
adc
xchg
std
insb
repz
lret
cmp
push
dec
call
lret
lahf
test
loopne
hlt
dec
int
cmp
test
fs
and
les
mov
roll
push
mov
mov
pop
sub
gs
add
repnz
out
dec
test
aas
cs
inc
and
loope
push
cmp
push
fnstcw
arpl
shrb
jae
mov
add
sti
jnp
push
and
adc
dec
enter
out
pushf
xchg
jbe
xchg
adc
repz
sbb
and
jle
dec
adc
sbb
popa
popa
aam
adc
and
dec
sub
xchg
pop
je
mov
fldlg2
repz
mov
js
cwtl
lahf
pop
fisttps
lcall
jb
stos
loope
and
sub
rcl
adc
mov
hlt
sub
or
xchg
mov
loopne
inc
fdivl
outsb
mov
sbb
push
iret
mov
inc
iret
cmp
je
xor
or
cmp
mov
mov
sbb
cmpsb
test
inc
popf
pop
test
push
push
mov
lods
addb
call
rcl
jo
loop
fmull
xchg
inc
std
fwait
push
inc
or
jb
test
xchg
or
push
insl
std
int
in
jo
mov
add
nop
and
lcall
sbb
leave
ffree
and
test
xor
lods
mov
cmp
adc
jle
jo
and
das
inc
imul
mov
outsl
push
pop
mov
cmpl
out
cltd
adc
xor
ret
mov
cmp
and
push
test
inc
inc
dec
dec
xor
mov
xor
lds
pop
cmp
jbe
adc
add
add
lea
inc
or
lock
or
mov
aad
je
sahf
pop
stos
push
je
pusha
cmp
push
inc
das
mov
mov
enter
out
adc
mov
mov
sbb
insb
leave
jl
mov
and
jp
cmpb
pop
cld
dec
add
mov
mov
dec
xchg
mov
xchg
sbb
or
push
js
push
and
add
aam
test
testl
das
cmp
inc
negl
mov
loope
add
cwtl
fsts
xor
jmp
dec
sub
into
mov
popf
mov
into
adc
lret
adc
lcall
xchg
push
mov
ja
ficoml
repz
inc
lret
orl
and
lods
add
call
cmp
adcb
in
out
sahf
jbe
xchg
mov
gs
push
jp
test
push
clc
mov
mov
pop
cmc
loopne
inc
pop
test
hlt
arpl
mov
or
addr16
pushf
jle
int3
xchg
notb
jo
cltd
nop
fidivs
or
popa
or
fcomp
mov
loop
call
push
push
sub
inc
ljmp
mov
daa
mov
jmp
das
push
test
add
mov
mov
add
repz
or
rcrl
hlt
lahf
cmpsl
mov
out
mov
sbbb
jnp
lea
lods
add
sahf
ds
lret
aas
inc
jb
lds
jb
jge
push
outsl
aas
data16
dec
jle
leave
pop
insb
jl
js
xorl
inc
cld
and
or
nop
subl
inc
repz
icebp
sti
fistps
xchg
pop
adc
mov
mov
pop
mov
bound
shl
sbb
movsb
jb
je
mov
out
sub
fnstsw
imul
test
add
mov
cli
test
lcall
mov
push
in
cs
mov
jmp
arpl
das
cmpsl
add
push
sbb
mov
mov
fstl
movsb
jge
push
sti
add
fdivr
fs
insb
xchg
in
outsb
ja
add
sbb
xchg
test
lods
in
mov
or
cmp
sar
int
test
xchg
mov
fs
cmc
dec
and
jl
adc
and
popf
jmp
loop
jbe
jbe
in
cli
fs
mov
lahf
sub
inc
pop
mov
icebp
xor
sub
or
in
push
stc
sbb
sub
pop
and
xchg
mov
push
dec
lret
lahf
cwtl
js
test
jg
jns
imul
mov
mov
into
add
and
sarl
scas
ljmp
add
lea
jns
fisttpll
out
repz
push
call
and
test
dec
xchg
sub
push
xor
pop
insl
push
mov
adcb
jmp
scas
push
scas
jg
xchg
cli
mov
dec
insl
ja
leave
cmp
mov
pop
repnz
gs
and
mov
push
sbb
popa
sbb
push
inc
mov
push
sub
jbe
push
ret
cmp
mov
movsb
js
das
fstpl
in
mov
xchg
mov
loopne
push
or
es
das
pop
pop
sub
add
add
outsl
and
lock
lds
sbb
lods
mov
mov
lcall
loope
sahf
fisubs
push
sub
add
pop
subb
xlat
call
cmp
or
mov
sbb
push
and
sub
push
xlat
loopne
xor
pop
aas
jne
mov
jo
pop
dec
cmpsl
imul
lret
lods
aaa
adc
cli
leave
mov
mov
jo
or
repnz
push
int3
xchg
mov
aad
push
xlat
imul
pop
mov
xor
daa
or
jno
push
gs
ret
clc
mov
cmp
shll
jg
mov
or
xchg
test
lcall
jbe
xlat
dec
dec
xchg
leave
lods
or
fsubp
dec
or
push
and
js
inc
mov
sub
mov
jmp
and
rorb
loope
pop
pop
jno
scas
xchg
mov
adc
sbb
hlt
loopne
bound
push
ds
and
stos
add
fstl
mov
lret
shlb
jno
jp
pop
sahf
les
inc
sbb
dec
pop
sub
sbb
data16
sbb
repz
pop
sub
add
pop
out
popf
ss
pop
loopne
xlat
es
sub
iret
or
ror
xchg
jle
mov
out
mov
outsl
jbe
lock
and
outsl
imulb
mov
sbb
loop
mov
pusha
dec
mov
bound
pop
sbb
xor
push
ljmp
int3
jge
pop
stos
mov
xor
push
inc
mul
cmp
adc
in
ffree
pushf
mov
mov
xor
cmp
or
push
jl
push
pop
add
repnz
lahf
in
inc
ss
rcr
lods
xchg
insl
cmc
out
test
xor
mov
mov
fidivs
rcll
inc
pop
or
xchg
into
mov
inc
and
mov
aas
mov
out
jno
pop
push
fildl
dec
mov
shrl
sbb
les
test
cmp
enter
and
test
pusha
popf
loop
callw
insl
inc
push
pop
lcall
push
stos
mov
cmc
adc
repnz
imul
shll
into
mov
inc
dec
outsl
jge
es
and
mov
jno
addr16
aaa
movsl
rolb
ja
adc
or
test
push
aas
mov
fdivrl
loopne
push
or
aad
inc
inc
mov
out
insl
adc
mov
movsb
ljmp
xchg
inc
sbb
mov
adc
sarl
scas
inc
sbb
mov
shlb
mov
sbb
mov
fwait
rolb
xorb
push
inc
and
gs
sub
imul
push
xchg
ret
inc
out
add
fmuls
mov
mov
inc
jge
or
test
sub
loopne
xchg
std
xchg
cmpsb
push
and
inc
inc
pop
jne
ret
push
pop
jns
jge
and
and
addr16
bound
daa
xor
xchg
push
or
mov
cmc
mov
mov
lods
push
add
push
inc
insb
mov
pop
cmpsb
iret
mov
and
mov
clc
and
fldenv
push
and
loopne
sub
sbb
pop
jae
mov
popa
repz
inc
xor
ret
in
and
dec
and
sub
xor
xchg
or
xchg
sahf
imul
lret
inc
in
fistps
ret
sbb
cld
outsl
xchg
fucomi
shlb
rclb
mov
add
ja
imul
xor
adc
xlat
mov
adc
shlb
adc
mov
popf
ficomps
mov
dec
mov
xor
mov
and
and
dec
data16
ljmp
lods
sub
add
jge
sub
int
test
fcmovb
lea
inc
je
std
arpl
testl
dec
fnstsw
in
mov
insb
out
repnz
xchg
pop
mov
push
pop
pushf
cmp
call
cmp
mov
aas
loope
cmp
cltd
add
and
addr16
sti
cmp
xchg
mov
push
sahf
mov
lods
and
leave
leave
lret
int3
jbe
sub
sbb
test
xchg
adc
out
int3
jl
dec
cwtl
push
mov
in
xchg
pop
movsl
movsb
iret
adc
adc
incb
mov
xor
shr
jo
dec
jmp
push
mov
mov
push
or
daa
orb
rcl
jns
mov
adcb
sub
mov
arpl
das
imul
sub
pusha
fiadds
sti
xor
imul
cmp
out
call
pop
sbb
jo
xor
xchg
mov
gs
sbb
push
test
adc
dec
push
push
sbb
gs
or
adc
jecxz
in
scas
fwait
xlat
aas
fdivs
clc
add
cs
and
inc
adc
imul
insl
popf
pop
xchg
out
aaa
sub
ss
and
push
aas
adcb
xchg
sub
xchg
push
out
jecxz
out
mov
pop
cld
aaa
jno
sub
clc
sub
hlt
fdivr
cld
jnp
push
ret
into
jns
out
cmp
cltd
push
or
xchg
push
jnp
aam
add
daa
pop
sub
ret
adc
stos
pop
les
or
xor
int3
mov
test
cmp
cwtl
rol
add
adc
xor
je
insl
dec
ss
mov
dec
imul
mov
push
testl
in
xchg
pop
inc
sbb
test
pop
sbbb
sub
aad
jmp
dec
inc
data16
adc
cmp
mov
mov
sbb
out
mov
ss
lret
push
es
pop
arpl
clc
jl
aaa
xchg
mov
mov
iret
add
into
shl
mov
in
sub
fildll
shlb
cltd
sub
and
daa
shlb
inc
pop
or
xchg
mov
add
mov
mov
mov
stos
and
fcmovb
xor
cmp
popf
jae
cmpsl
ret
das
subb
cld
out
sti
mov
sbb
jo
loope
jnp
fisttpl
ret
sbbl
out
outsl
mov
or
shlb
imul
testb
and
add
ss
aam
push
es
gs
jmp
or
scas
gs
mov
aaa
pusha
sbb
or
adc
test
xchg
dec
dec
add
andl
cmp
cmp
xchg
pop
imulb
loope
pushf
sbb
add
repz
and
fcompl
cmc
jb
jo
cwtl
mov
mov
mov
aam
mov
mov
dec
outsb
sahf
nop
jmp
addl
mov
and
sbb
jge
mov
adc
jb
add
movsb
push
sub
sar
sbb
in
in
dec
jb
cmp
sub
fcoml
push
mov
ret
outsb
stos
mov
mov
movups
xor
xor
icebp
outsb
sub
icebp
push
pop
mov
loop
xor
clc
inc
push
or
pop
fcmovne
pop
mov
bound
sahf
mov
inc
test
clc
into
lcall
repnz
clc
or
sahf
lret
mov
sbb
je
out
cltd
adc
push
fbstp
popa
and
xor
mov
cmp
jmp
lock
lahf
int
xchg
ljmp
mov
jb
iret
add
mov
push
loopne
int3
test
loope
out
shrl
cmp
or
and
inc
scas
or
push
ljmp
mov
add
sub
scas
fcmove
stos
sub
mov
push
and
idivb
lds
dec
imul
test
movsl
xchg
mov
pop
int
xchg
mov
mov
inc
popf
dec
and
cmc
das
dec
js
push
or
leave
scas
xor
scas
push
push
lret
test
xchg
ja
pop
lret
icebp
or
mov
xor
negb
out
or
test
shrl
xor
and
stc
sbb
jg
lock
pop
dec
insl
daa
inc
outsb
test
push
nop
aad
push
inc
mov
xchg
cwtl
out
lock
outsb
xor
cmp
in
daa
push
call
test
sub
shrl
fs
lds
jns
lahf
ja
push
sbb
pop
xor
es
add
mov
mov
mov
inc
adc
and
mov
mov
sahf
test
pop
adc
addl
popa
xchg
dec
xchg
jl
jg
movsb
lock
mov
testl
jp
jg
cwtl
jl
xchg
iret
les
lahf
xchg
and
jno
test
sbb
dec
stos
mov
mov
out
xchg
stc
jg
adc
adc
adc
cmp
mov
pop
fdivrs
adc
fs
push
xchg
pop
push
sbb
pop
fs
out
cltd
pop
into
andb
sar
mov
pop
mov
mov
std
add
outsb
in
inc
test
inc
cld
adc
mov
mov
fsubrs
iret
push
xchg
lods
pavgw
mov
sbbb
std
in
xchg
subl
fmull
inc
std
pop
scas
cwtl
sub
cmp
jo
mov
je
aad
cld
add
jg
mov
das
arpl
sti
out
orb
scas
dec
gs
imul
ljmp
pop
mov
xlat
imul
je
xchg
xchg
out
repnz
jecxz
orb
sti
mov
push
xor
divl
outsl
push
lret
outsb
imul
movsb
ret
xchg
mov
in
scas
or
mov
lret
cmp
arpl
cltd
test
push
divl
add
jo
scas
xor
pop
and
sub
inc
push
xchg
xchg
mov
add
rorl
xchg
jge
shlb
add
inc
test
inc
iret
add
cmp
lret
xor
pop
inc
dec
xchg
leave
jae
mov
mov
rclb
push
mov
fwait
jl
dec
push
cmp
scas
mov
xor
lock
inc
loop
lods
out
or
aaa
orb
mov
and
sub
ficomps
push
fildl
xorb
sbb
mov
pop
scas
jo
in
rcrl
ljmp
pop
push
outsb
movsl
jb
pop
jno
xor
dec
cmp
sti
dec
out
jl
cs
cmp
movsl
lock
mov
inc
xor
dec
pop
fld
xchg
test
enter
andl
or
sbb
mov
out
xchg
mov
push
sub
imul
pop
xor
outsb
out
cmp
outsb
insl
pop
inc
push
aaa
incb
stos
push
inc
mov
cwtl
mov
lock
inc
data16
sbb
and
xor
fidivs
dec
gs
cmp
jp
adc
sub
lock
push
repnz
sub
xor
cmpsb
scas
int3
or
mov
call
lcall
lods
std
add
insb
or
cmp
cli
daa
std
jae
pop
les
or
loopne
jnp
push
sbb
daa
push
rorl
xor
test
mov
aas
or
rorb
and
pop
rclb
push
clc
mov
push
imul
pop
aas
mov
sbb
mov
enter
iret
call
cmpb
cmpb
inc
test
loopne
cmp
push
test
xor
test
sub
daa
sub
test
in
adc
test
mov
fwait
xorb
mov
pusha
jns
dec
lods
test
bound
enter
mov
mov
adc
inc
popf
cmp
push
aad
mov
jno
outsl
fsubl
pushf
push
test
js
mov
dec
dec
rclb
mov
mov
in
lods
cmp
dec
imul
cld
and
cltd
mov
fwait
in
fdivl
test
fldcw
jns
lea
pusha
fbstp
mov
xor
mov
cmp
addb
lea
dec
sbb
bound
aam
sub
ret
dec
insl
js
mov
mov
out
bound
test
and
sarb
add
insl
mov
into
mov
adcb
inc
sti
pop
repnz
add
negb
vpsrlq
and
pop
jecxz
orl
mov
adc
mov
xchg
lods
sbb
popa
fdivrs
faddl
js
insb
sar
pop
cmp
mov
mov
fmull
call
or
pop
push
sbb
rcrb
dec
and
popf
and
loope
sbbl
mov
sbb
mov
push
xchg
bound
roll
mov
pop
xor
xchg
popl
jbe
jne
jp
ljmp
xchg
dec
mov
inc
scas
xor
and
jnp
mov
int
sub
sub
push
lock
add
add
outsb
jmp
xchg
lret
push
out
int3
dec
or
cs
pop
sub
push
push
cs
arpl
mov
sarb
inc
xlat
insl
in
cmc
fdivrl
lds
mov
jns
repz
repz
hlt
mov
loope
inc
xchg
jp
or
lret
ja
sub
jge
push
in
lret
mov
test
ljmp
loopne
das
insb
mov
bound
add
out
rcll
push
and
cmpsl
xchg
cmp
sti
mov
aad
hlt
jb
or
ret
arpl
ss
roll
cmp
sbbb
notl
std
mov
dec
jo
sbb
or
sub
popf
lcall
cmp
inc
add
inc
pusha
vcvttss2si
inc
iret
roll
lret
mov
mov
ficoms
mov
test
addr16
stos
push
dec
mov
movsb
jae
jg
push
pusha
adc
push
repz
xor
xchg
into
lret
ss
lret
out
xchg
arpl
sub
jp
xchg
sbb
fwait
push
pusha
in
jmp
out
aaa
xor
in
add
mov
shll
mov
lahf
fbld
lock
mov
push
cmp
and
imul
enter
fwait
incb
rcr
call
aaa
shrb
jns
jg
push
cmpsb
outsl
inc
xchg
flds
es
mov
inc
pop
insb
push
mov
gs
adcb
xor
mov
add
jmp
call
repnz
test
scas
fwait
jbe
lret
ret
sub
lock
push
jmp
push
push
scas
sarb
pop
cmpsl
cld
daa
cmpsl
xor
and
cmpsl
dec
insl
push
mov
mov
xchg
dec
ss
fimull
out
add
ljmp
dec
ret
ljmp
aad
mov
enter
mov
fcoml
sbb
add
das
mov
inc
std
loop
fnstcw
inc
clc
xor
imul
mov
clc
jge
push
aam
add
cltd
pop
test
out
arpl
std
sub
loope
jo
cmp
dec
in
inc
pop
pushf
lret
lret
inc
mov
mov
xchg
stc
lcall
inc
mov
shlb
push
xchg
mov
jb
daa
mov
push
mov
sub
jnp
out
jl
cmc
int3
repnz
ret
dec
in
add
adc
inc
lahf
xchg
ds
pop
jle
inc
cli
or
jb
mov
sub
xchg
xchg
sti
push
and
insl
lret
push
bound
push
cmpsl
inc
mov
adc
sbbb
rorb
jns
jg
int3
xchg
push
bound
pop
push
mov
jns
test
repz
sti
std
push
fs
dec
add
bound
popa
cwtl
arpl
or
add
rorb
mov
scas
sti
pop
dec
adc
cmp
std
rol
stos
xor
push
xor
stc
popa
mov
or
pop
dec
stos
xchg
icebp
cmp
mov
aaa
loopne
shlb
subb
cld
add
add
mov
shll
jno
cmc
out
cwtl
popf
dec
cmc
cltd
xor
sub
arpl
or
lock
fs
push
mov
and
lret
sbb
int3
imull
pop
mov
sti
dec
push
test
dec
jmp
fidivrs
xor
roll
mov
or
ljmp
add
pop
test
mov
loop
jno
mov
or
pop
sub
mov
addr16
outsl
addr16
cld
mov
cmpsl
mov
lods
ffree
mov
xor
aad
fcomps
aad
cmc
popf
sbb
sub
jmp
adc
cltd
in
jge
imull
pop
rep
adc
movsl
sar
lahf
sbb
jg
mov
mov
idivb
push
adc
gs
jl
or
pop
xor
lcall
popf
pop
or
xchg
add
out
imul
or
into
xchg
pop
mov
dec
sbb
out
out
push
dec
mov
bound
sub
mov
dec
ljmp
out
mov
jo
rcr
scas
movsb
movsb
test
jbe
stos
dec
xor
or
dec
pop
repnz
jb
lods
fcmovne
jne
fstps
inc
sub
mov
mov
mov
in
lea
rcll
mov
fisubrl
int
int
insb
hlt
call
mov
inc
stc
jge
lcall
mov
in
repz
lods
pop
mov
mov
or
movsl
sbb
aam
or
insl
imul
sbbl
sub
cli
frstor
mov
out
push
out
mov
mov
xor
or
out
adc
addl
and
pop
mov
inc
and
cmpsb
sbb
cli
aam
inc
imul
sub
push
xorb
mov
js
jle
stos
pop
mov
stc
pop
and
jae
jg
call
mov
xchg
test
mov
xor
in
lahf
lock
xor
xchg
fnsave
pop
jo
ds
and
mov
pop
lahf
into
test
cmp
dec
jae
scas
sbb
xchg
sbb
add
shlb
mov
jno,pt
mov
loope
jmp
mov
cmpsb
xchg
inc
movsb
std
les
jnp
sbb
stos
pop
leave
cwtl
jne
cmp
mov
cmp
cmp
jecxz
mov
or
adc
jmp
outsb
push
push
cmp
mov
pop
pop
shll
lods
adc
or
mov
mov
xlat
ds
mov
js
lds
push
pop
jmp
stos
or
xchg
jl
push
rorb
xor
add
adc
out
or
pop
inc
fcoml
lea
xchg
mov
test
pop
add
inc
dec
xchg
jno
sbb
lock
jg
mov
adc
mov
pop
in
stos
cmp
mov
cwtl
stc
dec
aaa
xor
sub
sub
lods
dec
loopne
mov
cmpsl
xchg
mov
mov
call
sbb
out
fmuls
aad
popl
loope
imul
jmp
push
pop
test
sbb
push
sbb
inc
fisttpll
mov
and
jae
pop
pop
mov
adc
test
xchg
and
dec
mov
jecxz
out
pop
push
inc
psubsb
ljmp
negb
push
or
fnstenv
cmp
jne
stos
pop
clc
cwtl
jnp
xchg
cmp
sti
dec
xchg
mov
movsl
test
ret
adc
test
sbb
fldl
ret
mov
mov
inc
pop
xchg
dec
pop
xchg
insb
lds
or
cld
mov
bound
inc
jb
adc
cmpsl
cwtl
jb
test
fimull
mov
rcl
repnz
test
loop
sbb
out
adc
andb
dec
sbb
fwait
pop
xor
dec
cmpsb
leave
or
dec
xchg
xor
lods
jns,pn
clc
mov
pusha
movsl
cmp
data16
stos
dec
xchg
arpl
jp
jnp
aas
testl
mov
sub
subl
jmp
test
repnz
jp
stc
pop
and
jecxz
repz
popa
xchg
lcall
mov
out
push
pop
out
sahf
sub
inc
lods
pop
mov
imul
repnz
mov
jge
lret
popf
movb
ret
xchg
arpl
faddl
mov
sahf
enter
mov
popa
push
lock
jae
pop
es
xchg
inc
ljmp
mov
or
inc
mov
mov
test
add
dec
and
add
inc
add
inc
add
movl
cmp
jne
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
push
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
add
dec
mov
jmp
movl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
movl
mov
add
push
mov
xor
add
sub
and
mov
addl
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
jmp
mov
subl
mov
cld
jp
push
std
and
int
bound
outsl
xchg
and
add
mov
jle
mov
pop
push
jno
lods
scas
ret
xchg
ss
or
fstpl
or
mov
ljmp
dec
mov
jg
inc
add
arpl
dec
repnz
push
aam
sbb
add
pop
sub
and
mov
jmp
jnp
sahf
in
mov
cmp
jb
fimull
sarb
mov
mov
mov
or
fcos
xor
mov
outsb
sbb
push
xor
mov
sub
ja
mov
outsl
sub
push
sub
mov
and
mov
test
scas
sbb
jns
repnz
xor
orl
outsl
test
js
repz
mov
jmp
xchg
cmp
sti
sbb
xchg
ja
xchg
loope
dec
mov
adc
fmull
je
pop
push
cld
es
push
es
stos
shll
add
mov
orl
out
add
pop
ja
fimull
or
xchg
mov
test
dec
push
and
sbb
sti
xchg
and
inc
xor
jle
cltd
inc
mov
lock
jg
cmpsb
lcall
xor
shll
adc
jmp
in
cmp
push
add
es
lods
lods
or
or
pop
pushf
add
sti
xchg
xor
cld
shll
aaa
lock
fcmovu
mov
lcall
push
mov
sub
fldenv
mov
cltd
fs
aas
dec
pop
andl
pop
mov
xchg
and
in
iret
shll
mulb
mov
push
mov
fs
cmp
mov
data16
or
and
jae
adc
jle
rcl
in
inc
out
insb
or
out
jno
cmpsl
insl
inc
cs
lcall
sub
mov
lret
push
jb
into
pop
inc
fucomp
jbe
shr
icebp
sqrtps
hlt
cmpl
xor
insb
xor
ja
sub
lret
popf
mov
lret
mov
inc
lret
roll
testb
lcall
push
lret
mov
or
mov
test
out
sahf
fdivrl
or
push
nop
ds
xchg
lret
lds
ja
jo
pop
lahf
cli
xchg
popa
xor
cmp
mov
xchg
mov
jecxz
xor
inc
addb
out
outsb
inc
xor
xchg
push
sub
lds
xchg
aas
lret
cmp
outsl
fstpl
jg
inc
adc
or
xor
xor
fldln2
jmp
mov
outsl
imul
jge
in
jns
cmp
xchg
movsl
mov
clc
icebp
pop
out
add
outsl
cmpsb
jl
insl
xchg
aas
pop
mov
xchg
clc
pushf
paddsw
add
jne
mov
js
or
cmp
mov
pop
sbb
jmp
jb
rcr
adc
addr16
stos
test
jbe
mov
in
sbb
sahf
je
repz
call
xor
fldl
out
iret
push
cmp
mov
cltd
jno
add
jmp
cmp
mov
and
pop
jle
imul
aaa
fisttpll
fidivl
and
addr16
inc
push
jecxz
insb
fwait
aad
iret
mov
xlat
and
or
std
inc
loopne
pop
int
je
cmp
into
xor
ja
xor
es
call
pop
out
xor
or
mov
dec
mov
inc
inc
leave
or
lret
movsb
lds
jmp
lret
or
pop
cli
push
jno
jns
pop
and
scas
or
inc
cli
inc
mov
mov
in
xor
loopne
push
and
test
jmp
pop
in
sti
push
ds
mov
xchg
popa
fistl
pop
sbb
je
mov
pop
sbb
fiaddl
mov
int3
and
jno
stos
push
mov
pusha
add
jmp
mov
mov
movsl
xchg
pop
sbb
or
push
mov
add
lcall
or
sub
lea
fcomps
mov
sub
xchg
cmp
sub
pop
or
idivb
sti
jbe
je
sti
dec
xchg
xor
mov
mov
mov
xor
roll
iret
das
cltd
sbb
mov
pop
int
pop
dec
push
jb
imul
xor
cli
lods
fstpl
gs
and
and
mov
add
mov
ret
sub
add
push
xlat
mov
insl
sbb
lcall
iret
jnp
sub
mov
scas
sub
mov
jae
sbb
in
lds
cmp
mov
jmp
mov
xchg
ds
cmp
ffreep
loop
xor
int
mov
data16
sub
icebp
xchg
and
dec
test
addr16
pop
sti
jae
sbb
rorb
sbb
or
jns
xchg
sub
xchg
xchg
cmp
xchg
dec
cmp
mov
inc
ja
movsl
mov
pop
leave
bound
in
stos
rcrb
divl
pop
aam
fcomps
jae
push
jg
fstps
ss
adc
lods
adc
ja
push
scas
mov
xor
mov
int3
xchg
mov
jae
test
hlt
int
xchg
and
cmpb
daa
add
clc
xor
leave
mov
xchg
pop
pop
addr16
shlb
out
ds
int3
pop
xchg
jg
sbbb
jbe
jp
jo
sarl
or
and
adc
in
adc
jge
or
and
pop
out
jmp
mov
js
pop
and
mov
jne
push
mov
pop
lcall
pop
mov
add
fsubs
stos
testb
in
rorl
lret
jnp
xor
mov
lret
sub
adc
cmp
xlat
loop
mov
sbbb
mov
cld
scas
fdiv
xchg
mov
xor
aam
adc
dec
sbb
cmpb
clc
fcompl
sub
rolb
adc
iret
int
aam
mov
aas
inc
push
loopne
out
xor
aad
ret
push
jnp
cmp
mulb
cltd
int
push
jp
jg
inc
fs
fnstsw
pop
mov
jge
jns
push
jl
icebp
imul
adc
jg
cmp
js
push
or
mov
loop
nopl
sbb
xchg
pop
push
mov
outsb
xchg
mov
xchg
and
add
int3
xor
testl
bnd
xchg
add
je
adc
ja
push
sub
pop
jge
loope
sub
je
mov
or
ror
aam
dec
addr16
mov
mov
test
sahf
test
mov
adc
sub
bound
std
sarb
mov
jp
pop
insl
in
jnp
stc
jmp
add
imul
js
stos
push
dec
gs
inc
out
xor
add
xor
pop
pop
mov
out
sub
rolb
loop
push
shll
hlt
jae
cmp
jp
mov
in
arpl
lods
je
outsl
inc
xchg
leave
lds
jbe
xchg
add
and
mov
es
inc
in
lea
outsb
mov
nop
js
push
fdivrl
les
inc
mov
je
in
jecxz
pop
aad
mov
jmp
push
xlat
xchg
xor
cmp
jge
xor
ret
pushf
ds
inc
adc
and
out
mov
add
add
icebp
cmp
adc
adc
lds
aam
xchg
xor
ret
xchg
mov
mov
sbbw
aad
xor
loop
and
daa
clc
mov
sub
imul
insb
sub
cmp
imul
add
das
add
inc
mov
mov
cld
adc
pop
fwait
jl
mov
sarb
std
or
lock
or
addl
mov
inc
or
insl
js
rolb
inc
pop
popa
mov
jns
fstps
int
mov
inc
jb
xchg
adc
xchg
mov
mov
xchg
std
jle
adc
push
xor
out
pop
cwtl
out
mov
orl
movsb
scas
pop
popa
shlb
addb
cltd
mov
adc
sbb
std
jge
adc
push
or
xchg
adc
rcrl
pop
mov
mov
sbb
push
sahf
in
pop
notb
imul
ror
movsb
outsl
jnp
push
repz
sbb
xor
push
insl
jb
dec
xchg
imul
sub
dec
pop
adc
stc
push
movsb
mov
mov
mov
inc
mov
outsl
mov
aam
ret
fcoml
jns
or
sub
lds
sbb
or
aas
add
mov
stc
lret
repz
js
rcrb
out
sub
js
mov
test
xlat
sbb
push
jae
pushf
xchg
pop
push
mov
and
add
or
xchg
jae
and
jp
mov
cmpsl
xchg
iret
idivl
sbb
dec
ret
cs
rclb
imul
fnstenv
sbb
arpl
incl
jnp
mov
xor
push
fcoml
ja
inc
inc
cmp
lock
jae
pop
bswap
gs
loopne
cmc
popf
or
mov
mov
mov
mov
xor
xchg
xlat
sbb
jns
sbb
jecxz
pushf
ja
pop
and
bound
xor
imul
in
js
dec
or
cld
xor
mov
adc
rorl
js
cmp
imul
inc
loope
sahf
repz
and
inc
jecxz
les
mov
jns,pt
adc
xor
nop
out
test
jmp
cmp
cs
push
loop
in
addl
pusha
xlat
in
mov
hlt
xchg
mov
adc
xor
mov
push
cmpsl
mov
por
aad
xchg
ss
mov
pop
das
adc
xor
sti
or
sbb
adc
xchg
addr16
bound
aaa
mov
cmp
mov
sahf
mov
into
fimull
and
sbb
jnp
ret
mov
fdivp
xor
fimull
in
add
lock
gs
jg
imul
mov
fdiv
test
mov
fwait
inc
xor
xchg
sbb
ljmp
or
and
stc
sbb
stos
rorb
sbb
pusha
mov
pusha
fstpt
push
pop
icebp
xchg
pushf
cmp
mov
xor
fnstsw
loopne
incl
nop
jg
in
loop
jp
lahf
ja
dec
call
pushf
push
call
mov
sahf
filds
dec
mov
inc
out
pop
push
lock
add
fdivrl
fcoml
jg
aad
jns
mov
mov
pop
pop
lcall
sub
jb
inc
xor
ret
xorl
stos
xchg
mov
add
xor
xor
lret
aaa
adcb
xchg
push
repnz
push
sbb
sub
pop
sub
and
pop
cli
xor
out
jno
add
int
cli
ljmp
adc
shrb
push
sti
ja
xlat
clc
call
push
loopne
jle
push
out
mov
xlat
pop
out
cld
pop
xlat
sti
pop
adc
push
sub
xor
xor
enter
in
rcrl
lahf
outsb
bound
loope
jmp
sub
pop
aad
std
jecxz
dec
iret
xor
mov
lahf
outsl
push
dec
fistps
pop
jg
or
sub
lods
or
adc
pop
and
int
lret
xchg
in
pop
jg
mov
ljmp
fs
mov
andl
xor
addr16
xor
sbb
jg
or
pushf
ret
adc
into
adc
pop
jbe
out
sarb
shlb
mov
push
pop
add
dec
jecxz
dec
dec
sub
ds
push
inc
stos
and
shrl
xchg
adc
dec
jle
mov
sbb
xchg
xor
icebp
sbb
xor
data16
mov
cmpsl
or
repz
scas
aaa
aad
mov
adc
cmp
mov
xchg
dec
dec
int
mov
bound
gs
push
fidivl
jl
xor
stc
lret
mov
ror
scas
mov
adc
xchg
jbe
in
pop
loopne
popl
inc
adc
test
and
call
dec
call
sarb
mov
and
mov
mov
pop
push
mov
jg
jecxz
pop
bound
mov
adc
in
or
push
inc
roll
push
mov
or
fcomip
lock
std
inc
or
push
cmp
imul
gs
lds
sub
jo
mov
mov
mov
imul
adc
leave
scas
add
sbb
sarb
jg
fs
pop
push
lret
or
ss
add
jno
cmpsb
jne
pop
mov
sbb
push
ljmp
inc
jp
lds
enter
call
inc
cmp
inc
out
nop
jl
pop
jnp
scas
mov
repz
adc
scas
xor
dec
push
fnstsw
sbb
xchg
dec
ljmp
stos
mov
push
jae
mov
xchg
js
outsb
pop
test
je
cmp
dec
repz
jne
insb
lock
xor
sti
mov
test
jge
adc
lret
not
lret
mov
cmpsb
inc
repz
and
adc
sarb
sbb
push
sub
ret
fcmovnbe
mov
or
inc
repz
rcrl
ss
movsl
adc
rolb
lods
cs
mov
xor
inc
fwait
ja
add
cld
shl
sbb
outsl
xlat
cmpsb
fdivrl
push
aas
rcrb
mov
push
in
inc
icebp
and
insl
mov
aas
adc
stc
inc
sub
fidivrl
jp
xor
or
mov
xor
mov
inc
add
outsb
mov
pop
xchg
cld
movsl
adc
outsl
add
jo
mov
insb
push
movb
test
pop
and
imull
lea
stos
roll
hlt
pop
mov
jb
jp
icebp
dec
pushf
dec
lret
icebp
xchg
push
iret
repz
in
cmp
stc
cld
pop
jecxz
fwait
and
daa
xor
addl
mov
sub
arpl
insl
cmp
mov
mov
frstor
movsl
clc
sbb
push
data16
jg
or
jno
mov
into
jno
test
lea
mov
adc
sub
xchg
add
inc
xchg
mov
mov
mov
cmpsb
sbb
enter
inc
push
pop
and
push
mov
push
iret
or
xchg
arpl
in
inc
loopne
mov
xor
nop
jns
scas
jno
mov
in
mov
push
pop
mov
inc
subb
xchg
adc
cmc
rcll
data16
int3
or
in
lock
adcb
fwait
and
ret
iret
adc
jecxz
inc
push
dec
adc
mov
or
add
test
cld
and
jl
ret
mov
or
cmc
mov
rcrb
push
add
sub
and
push
mov
sbb
adc
das
dec
addr16
iret
cltd
jge
push
jno
xchg
js
stos
xor
movsl
nop
aaa
mov
jl
int
ljmp
mov
push
mov
and
xor
push
adcl
or
pushf
or
shl
repz
sbb
leave
xchg
jle
adc
pop
sub
imul
mov
out
cmp
cmp
sbb
adc
and
in
sub
pop
repnz
in
test
sti
push
ror
cmp
xchg
data16
mov
in
mov
mov
cli
add
divl
cmp
ds
mov
push
push
lcall
icebp
xorl
pop
mov
mov
ljmp
out
pop
mov
ljmp
pop
xchg
dec
and
jmp
addl
and
testb
jnp
sub
das
pop
outsb
fldcw
int3
out
mov
jmp
rolb
in
outsl
pop
sub
sahf
jns
add
inc
ljmp
js,pt
jmp
and
pop
pop
je
sbb
xchg
sbb
and
pop
je
stc
ret
hlt
xor
fadds
xchg
xorb
out
insb
xor
mov
rol
jecxz
push
addr16
dec
dec
dec
sbb
nop
das
mov
xchg
sub
add
in
inc
sti
jbe
rclb
cvtps2pd
hlt
or
xchg
data16
inc
mov
pop
mov
xchg
xchg
rorl
call
bound
roll
jg
roll
add
int
cmpsl
xchg
mov
icebp
stos
jb
cmp
pushf
mov
out
repnz
test
mov
xor
xlat
xor
jg
mov
mov
dec
and
mov
mov
loopne
in
loope
jmp
loopne
insb
in
adc
nop
ds
cmp
mov
int
adc
int
sub
jns
dec
cmp
mov
cmp
mov
lcall
pop
and
shlb
es
in
dec
and
or
xrelease
lahf
andl
jge
outsl
pop
jb
js
imul
out
rclb
push
jnp
jb
cli
and
cmp
popf
imul
insb
cmp
sar
lea
mov
jl
xor
mov
iret
notl
flds
jle
xchg
out
lret
inc
loopne
jg
test
push
fwait
or
jbe
mov
xor
in
test
movsb
enter
jmp
in
cmp
dec
fidivrs
sti
adc
pop
movsl
shr
movsl
fprem1
sub
insb
cli
mov
or
mov
sbb
pusha
inc
in
scas
mov
jnp
jp
enter
xor
sbb
push
movsb
push
les
cmpsl
cltd
ss
jle
dec
mov
scas
js
xor
loope
loopne
data16
pop
sti
inc
int3
add
repz
pop
data16
jmp
js
cmpsl
cmp
sti
popa
imul
or
sbb
add
mov
lret
push
jge
adc
cltd
inc
js
repz
or
dec
iret
std
into
out
adc
std
xchg
aam
ror
sub
and
fmull
push
xchg
imul
xchg
cmp
repnz
ret
pop
cmp
mov
mov
mov
cld
adc
stos
jne
xor
enter
imulb
jb
rorb
xchg
pop
ret
test
mov
cmp
insl
in
mov
xchg
lcall
clc
test
jg
popa
add
js
push
lcall
sbb
fisttpll
mov
and
lret
mov
outsl
lods
adc
dec
mov
jmp
mov
pop
xchg
xor
lahf
lea
fdivl
insb
jnp
and
cwtl
jg
ja
lcall
popa
xchg
je
hlt
in
pop
mov
pop
pushf
xchg
call
mov
and
pop
adc
fcoms
xchg
std
mov
xchg
outsl
adc
stos
aam
into
clc
jae
cld
sbb
pop
fbld
xchg
or
daa
subb
push
and
cmc
fcmove
jg
pop
add
in
outsl
mov
cmc
fldt
jne
jp
jnp
mov
je
xor
bound
insb
inc
mov
push
sbb
mov
aad
pop
add
xor
out
or
insb
xor
fisubl
mulb
cmpsb
in
inc
mov
adc
xor
out
cld
adc
das
mov
sub
rorl
jg
xchg
xchg
fstpt
aad
and
arpl
scas
icebp
stos
je
add
xchg
xchg
mov
push
mov
push
adc
imull
js
test
popf
lods
xor
jns
arpl
xor
dec
int3
and
aaa
cmc
rorb
push
dec
jle
sbb
pop
pop
mov
pusha
adc
jnp
push
movsl
lock
cli
out
mov
xchg
pop
pop
inc
mov
mov
xchg
mov
insb
mov
adc
mov
push
loop
dec
pop
imul
lods
lret
in
test
cmpsb
inc
scas
mov
inc
pop
push
frstor
notb
stc
sbb
enter
fldcw
or
fidivl
popa
xlat
xchg
call
je
lret
pop
lods
std
push
jp
inc
push
popf
mov
iret
lea
addr16
adc
lods
arpl
in
stc
jno
mov
lcall
rcrl
fldenv
adc
andb
xchg
push
rorb
inc
pop
push
pop
jo
inc
mov
xor
js
sahf
jle
mov
ja
xchg
jbe
loop
or
sbb
cmp
xchg
cmpsb
mov
aaa
mov
jno
clc
dec
cs
insl
add
orb
fiaddl
and
or
mov
pop
out
inc
push
ds
add
cmp
mov
cmpsl
neg
lds
in
lcall
inc
mul
insl
mov
push
push
arpl
add
add
xlat
das
pop
mov
std
pop
xor
pop
insl
xor
test
in
loopne
icebp
cmp
inc
or
sbb
mov
out
fimull
or
dec
ja
lcall
mov
addr16
xor
ds
push
push
push
ja
xor
pusha
test
stos
mov
mov
push
push
idivb
aam
daa
push
xchg
sub
mov
rcl
add
xchg
aam
xorb
push
sti
int3
xchg
jb
out
mull
dec
adc
test
popf
mov
addl
fdivs
mov
sti
xlat
cmp
sub
dec
and
mov
jns
jecxz
je
test
push
int3
mov
push
addr16
in
loopne
xchg
pop
pop
xchg
clc
mov
out
ljmp
dec
imul
clc
cmpsl
jo
jb
jns
mov
sub
adc
mov
push
and
jp
and
jo
ret
aad
cmp
jno
movsb
sub
mov
in
adc
aas
and
and
loope
outsl
stc
cmp
add
mov
and
xor
repz
push
sbbb
xchg
lea
cwtl
and
pop
ret
xor
in
sub
daa
faddl
imul
bound
stos
mov
sub
push
push
mov
imul
andb
sub
cmp
push
mov
sbb
fistpl
mov
mov
shll
subl
jmp
push
inc
lea
xchg
inc
xchg
idivb
add
sub
xor
es
cs
stos
fisubrs
push
mov
pop
push
cmp
and
out
add
mov
pop
push
mov
mov
adc
dec
push
inc
fcomi
and
adc
cmp
sahf
iret
inc
cmp
xor
xor
bnd
xorl
or
out
in
mov
pop
and
mov
std
and
js
out
dec
mov
lret
push
add
push
gs
paddusb
pavgb
pop
or
and
sbb
xchg
cmp
mov
test
adc
lods
mov
jle
push
inc
stc
mov
mull
add
scas
mov
jns
pop
push
and
ret
adc
add
jl
mov
mov
mov
sbb
lods
push
fimuls
lret
push
lds
mov
add
push
shr
test
inc
ret
flds
fisubrs
pop
test
test
test
jb
xor
in
or
mov
xor
cmp
sub
mov
les
pop
xchg
lods
adc
mov
xor
adc
add
add
add
pop
cld
std
pop
pop
xor
jnp
dec
cmpsb
lods
inc
pop
mov
jl
mov
jecxz
inc
imul
out
lahf
repz
pop
sub
cmc
and
aaa
sar
test
inc
in
xchg
jno
sub
insb
cmpsb
std
push
inc
shll
and
in
test
frstor
jnp
dec
jecxz
lds
clc
js
add
or
adc
ss
sti
cmp
dec
aam
in
jne
jl
gs
pop
test
les
xlat
lds
je
sbb
sub
aad
lods
mov
mov
leave
xchg
out
jns
mov
xchg
cmp
sbbb
xor
popa
lock
or
mov
xchg
dec
push
loopne
add
mov
scas
mov
push
and
in
shll
in
jge
test
mov
bswap
and
jg
jns
movsb
inc
fists
or
ja
lcall
push
test
add
pop
test
mov
push
add
fcomps
adc
mov
cmp
push
outsb
cmp
std
inc
cmp
cmp
xor
notb
lods
add
inc
inc
shll
les
add
mov
xor
icebp
insb
sub
repz
pop
test
lcall
jo
sahf
hlt
push
mov
insb
adc
jp
push
jno
mov
xchg
outsb
in
jle
or
in
pop
mov
test
and
xchg
fdivrp
ds
and
mov
xchg
cli
add
pop
pusha
push
and
and
dec
mov
pusha
add
xchg
sbb
jne
js
adc
imul
ds
addl
push
popa
out
andl
and
pop
gs
sub
push
fwait
inc
sbbb
popf
test
jmp
fisttpl
lea
dec
fwait
call
fstpl
sbbl
jno
movsl
lods
sbb
mov
cmp
imul
in
cli
adc
xor
aas
imul
iret
mov
das
or
push
xor
mov
iret
cmp
add
cmp
mov
enter
shlb
and
xorl
and
xchg
ret
sub
imul
test
adc
movsl
xchg
pop
stc
imul
roll
inc
sbb
cmp
jp
cmp
test
cwtl
inc
daa
iret
jns
and
into
mov
cmc
mov
and
sbb
fstps
or
mov
stc
jbe
psraw
aaa
fidivrl
cmp
jo
lahf
mov
sbb
loop
daa
icebp
popl
jno
icebp
roll
cmpsl
sbbl
call
pop
xchg
mov
jle
decl
inc
mov
xchg
xorl
test
add
test
cwtl
jmp
mov
sub
sbb
sbb
cld
xor
ret
enter
lcall
pop
sub
push
cltd
es
push
test
inc
imul
pop
fdivl
sbb
push
jns
in
or
add
stc
movsb
popf
into
lods
jne
pop
cmp
sti
imull
bound
pop
inc
outsb
push
mov
jb
rorl
gs
mov
addb
cmpsb
ss
fistpl
scas
sar
cmp
mov
sub
jbe
inc
iret
push
out
mov
and
repnz
cli
or
and
cmp
push
pop
sbb
gs
mov
mov
sub
insl
and
leave
jl
lea
nop
mov
mov
xchg
lds
jmp
movsl
addl
mov
sub
mov
out
mov
xor
or
add
jmp
sbb
aam
fwait
pop
aas
scas
sbb
jno
adc
pop
aad
shlb
out
nop
pushf
cmp
je
pop
sbb
and
sub
and
push
fists
xor
cmpb
data16
dec
repz
cld
jns
stos
les
and
fisttpll
cld
cmp
mov
push
xchg
jne
je
push
aaa
adc
popa
and
xor
mov
fwait
std
and
mov
out
lods
xchg
mov
lahf
push
add
dec
js
stos
and
ss
inc
mov
pop
int
add
fisttps
icebp
xchg
sahf
lock
inc
in
or
imul
ja
dec
cmp
cmp
fisttpll
and
push
jmp
and
out
inc
jae
cmpsb
xchg
xor
dec
push
or
hlt
mov
push
cmp
mov
and
fbstp
mov
js
sub
adc
test
enter
ss
sbb
cmp
lret
stc
icebp
aad
lock
pop
mov
xor
inc
rol
xor
push
js
mov
mov
popa
mov
push
xchg
and
dec
mov
cmpsl
cs
jecxz
stc
mov
ss
jp
jecxz
xchg
scas
jge
and
ret
add
jmp
mov
jne
mov
xchg
sbb
dec
shlb
xchg
inc
je
xor
and
or
repz
pushf
sbb
dec
movsl
sti
cltd
cs
es
push
dec
mov
push
rorb
xchg
cwtl
xchg
jns
inc
and
and
or
loop
stos
adc
jl
insb
je
imul
push
add
pop
and
cli
xor
jne
mov
adc
xchg
pop
les
cli
dec
ret
sarb
sub
push
stc
inc
enter
stc
es
push
sub
sub
pop
cs
or
mov
sub
rclb
push
rolb
dec
andl
mov
jp
mov
and
dec
jbe
push
sahf
daa
clc
xor
aad
or
push
push
fistps
pop
ret
fsubs
rorl
mov
nop
cmp
mov
in
mov
leave
div
jmp
jge
or
hlt
pop
imul
les
rcrl
sbbb
mov
pop
divb
fnstsw
rol
cwtl
mov
inc
icebp
lcall
popf
add
hlt
mov
add
out
jp
xchg
cmp
cwtl
icebp
ja
fadd
jnp
dec
lahf
lock
cmp
cmp
mov
rclb
in
push
mov
xchg
mov
or
or
into
add
rcr
stos
mov
mov
std
int3
add
mov
mov
inc
outsb
mov
sub
pop
out
shlb
jl
mov
data16
pop
cmp
pop
xchg
jns
and
jmp
pop
icebp
mov
pop
mov
and
out
aaa
xchg
dec
ds
sub
fs
mov
cli
orl
aam
cmp
xor
repnz
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
jmp
aaa
dec
cmpsl
sbb
xchg
and
push
dec
add
int
bound
jge
or
jne
into
mov
adc
push
shrb
mov
and
repz
mov
push
les
loop
mov
iret
scas
ss
nop
cwtl
outsb
sub
mov
xor
push
test
mov
test
repnz
and
shll
mov
jne
pavgw
pop
add
pop
js
in
stc
movsl
sbb
into
push
sub
jl
outsb
xor
mov
adc
xor
cld
mov
mov
fnsave
mov
fwait
mov
mov
mov
insb
xor
ds
xor
or
or
adc
scas
icebp
stc
out
rorl
pop
in
xor
push
jmp
pop
push
push
mov
pop
adc
pop
addl
mov
xchg
or
or
testl
fisttps
xor
xor
lea
mov
pop
adc
cmpsl
mov
scas
hlt
jmp
nop
xchg
ret
sub
dec
hlt
loop
pop
daa
outsb
jb
les
jbe
imul
inc
out
mov
loop
fistpll
cltd
fwait
mov
movsl
repnz
in
push
stos
add
or
loope
lret
stos
and
pushf
ja
dec
dec
int3
mov
jbe
adc
lock
insl
jl
je
lcall
jl
sbb
stos
adc
jbe
or
mov
sub
inc
cmpsb
mov
pusha
xchg
push
ds
push
cmpsb
or
pop
outsl
xor
cmp
mov
paddq
fsubs
jmp
or
lret
imul
lock
inc
stos
sbb
nop
outsb
adcl
lods
adc
lahf
call
loope
inc
and
push
inc
jno
push
inc
cs
out
sub
pop
int3
sub
inc
or
xchg
inc
sbb
mov
mov
imul
sbb
jns
jae
outsb
mov
fisubl
arpl
sbb
imul
sbb
cmc
mov
pop
in
and
lcall
push
cwtl
jae
cmp
mov
push
lds
sahf
jl
pop
ret
dec
cmp
dec
rorl
pop
dec
gs
or
xchg
std
out
dec
mov
loopne
mov
cli
fwait
pop
push
sahf
xchg
fcomip
pop
adc
lds
imul
jl
xchg
mov
add
in
mov
scas
inc
mov
mov
rcl
jecxz
and
movsl
lret
xor
imul
frstor
xchg
jo
sub
jle
inc
add
inc
xor
cmp
jnp
xchg
add
ss
push
sub
sub
sahf
cwtl
rclb
repz
rorl
pusha
xor
add
fs
addr16
pop
call
subl
aas
lods
cmp
in
mov
pushl
push
jmp
cmp
dec
inc
scas
sbb
pop
xor
lcall
add
or
add
inc
jns
pop
arpl
inc
jmp
lcall
iret
int3
fs
js
adc
test
in
pop
cli
data16
addl
mov
push
sub
test
jecxz
stos
and
or
rcrl
outsl
mov
push
xor
stos
xchg
ret
mov
inc
push
jmp
data16
das
inc
imul
out
cmpsl
mov
mov
ljmp
xchg
negl
gs
dec
cmp
dec
rolb
mov
jns
lret
xor
sub
inc
scas
arpl
ficompl
sarb
andb
in
add
sbb
push
scas
and
pop
int
or
mov
lds
cmp
mov
sar
cld
push
leave
and
in
ret
iret
ret
icebp
xchg
popa
daa
mov
inc
cmc
mov
add
inc
ljmp
in
ret
repz
xchg
add
or
arpl
xchg
dec
xchg
push
in
and
clc
sbb
xchg
push
push
clc
sti
jp
xor
mov
jnp
xchg
mov
test
jne
jl
or
and
xor
add
das
stos
mov
adc
mov
es
ss
sub
pop
xchg
loopne
pusha
pop
jnp
jns
movsb
test
lods
sbb
jl
push
shrl
pop
out
into
call
je
sbb
inc
or
gs
xchg
aam
jne
lock
add
cs
sub
sub
adc
gs
xchg
sbb
test
shll
stos
jb
cli
xchg
xor
aam
sbb
ret
test
shll
mov
cld
mov
lods
cltd
jg
dec
je
loope
cmp
add
add
adc
xchg
int3
xor
lds
movsb
cmp
dec
cwtl
mov
arpl
jecxz
es
enter
imul
bound
jo
jmp
lock
je
test
push
icebp
mov
jmp
add
repnz
aas
jne
xor
push
inc
mov
ja
enter
cmpsl
cmp
sub
mov
clc
fmul
fld
pop
inc
xor
out
adc
int
jle
push
sub
out
aad
mov
lock
sub
sbb
push
sub
stos
out
lods
or
xchg
inc
in
sbb
test
inc
mov
insb
adc
sub
fwait
jns
cmp
shlb
jb
lods
fisubs
arpl
mov
das
adc
sub
fwait
jo
loope
mov
adc
pushf
outsl
and
push
subb
xchg
xchg
add
mov
mov
lods
mov
hlt
stos
bnd
sbb
sbb
cmc
dec
lea
mov
ficoml
clc
inc
fwait
mov
fisubl
shrl
cmp
jmp
lahf
mov
sub
daa
aas
jl
push
pushf
mov
fucomp
sub
ds
movsb
mov
xchg
xchg
sbb
adc
xchg
insb
test
push
sbb
incl
cld
adc
test
popl
scas
lahf
scas
push
mov
mov
push
andb
pop
jle
sub
sub
loopne
inc
ss
fsts
hlt
jne
sbb
addl
dec
dec
hlt
insl
jle
shlb
in
mov
popa
mov
or
mov
sbb
and
ja
ret
add
dec
sub
add
sub
xlat
jae
iret
sub
les
aas
mov
popa
pop
loopne
insl
dec
cs
in
aas
cmpsl
int
into
mov
popa
mulb
idivb
inc
fwait
push
imul
jg
fbstp
or
cmp
rolb
push
fnstsw
dec
movsl
mov
mov
das
and
inc
rclb
lret
mov
sarb
adc
mov
xor
add
cmpsl
mov
xor
xor
mov
es
bound
stc
mov
mov
lret
dec
std
adc
pop
enter
je
sub
sub
sub
jae
fs
cmpsb
out
ljmp
add
mov
sub
inc
mov
mov
mov
add
dec
adc
shll
pop
int
and
pusha
pop
mov
je
gs
dec
fdivrl
xor
and
movsl
mov
jmp
pop
jnp
lret
sahf
jne
sahf
mov
ret
pushw
push
cwtl
push
pop
pop
cmp
rclb
icebp
lock
adc
das
fxch
iret
inc
loopne
fcmovnbe
cmpsl
imul
cmpsl
fwait
inc
or
cmpsl
xchg
push
je
mov
dec
or
xchg
add
push
cltd
rol
shll
push
test
xchg
mov
jae
jo
cmc
xchg
cmpb
xchg
mov
xchg
add
mov
jb
or
cwtl
cltd
pop
adc
test
jmp
pop
sarl
sti
arpl
fistps
daa
outsb
shrb
mul
add
sub
xchg
pusha
push
ror
aas
inc
push
cmp
xor
cmp
add
xlat
jns
in
insb
dec
ret
je
jmp
mov
test
dec
cmp
pop
fsubs
sbb
aaa
push
inc
mov
jle
and
hlt
mov
cld
push
push
mov
bound
sbb
add
mov
xchg
insb
mov
mov
xorb
xor
pusha
xchg
rclb
loop
gs
das
dec
push
aaa
popf
fwait
push
sbb
in
popa
ljmp
push
lea
out
or
xchg
std
mov
lods
shl
mov
cmp
cli
into
in
adc
dec
shll
stos
push
mov
out
es
imul
lahf
sub
int
ja
cmp
push
xor
int
inc
or
leave
xor
clc
jb
jg
mov
je
ret
lods
das
cld
xor
sub
das
orl
data16
jno
test
pop
fsubl
daa
mov
push
sub
subl
movsl
insb
or
or
xor
lods
and
adcl
xchg
cmp
pop
mov
mov
push
aam
aas
push
pop
cmpb
push
out
scas
lahf
ja
popf
and
mov
sub
adc
std
sub
mov
movsl
outsl
pop
stc
xchg
loop
repz
sub
fdivs
or
stos
pop
jnp
xchg
jge
cmp
outsb
adc
cmp
data16
push
pop
inc
pop
repz
mull
cld
js
push
mov
call
addl
cltd
sahf
cmp
push
xor
stc
push
inc
cmp
sub
popa
xchg
inc
jnp
rcll
xchg
stos
cmc
pop
cld
in
xor
ja
das
insl
sub
dec
mov
mov
cmpsl
out
sub
subl
or
cmp
and
stc
xchg
mov
je
or
fmuls
stos
movsb
sub
rolb
dec
cltd
cld
sbb
shlb
out
shrl
mov
adc
ficoml
lahf
push
sbb
lock
xor
test
sub
aas
sbb
and
imul
jecxz
shlb
add
loopne
inc
popf
movsb
sarb
or
lds
test
fidivrs
int
inc
xchg
xor
jge
sub
and
bound
push
outsb
or
inc
mov
std
jns
scas
pop
pop
cs
insb
cmp
mov
add
jb
dec
lods
mov
into
leave
in
add
ljmp
sub
xchg
xor
xlat
cmpsb
pop
and
fistpll
cmc
into
cmp
push
outsl
cld
push
incb
cmc
jb
xor
fdivrs
faddl
or
js
cmp
lods
sbbl
jg
test
jnp
cmp
addr16
cmp
sbb
out
mov
jl
dec
lret
dec
adc
mov
out
push
push
mov
mov
lcall
adc
test
mov
xor
hlt
dec
aam
jle,pt
jg
add
dec
test
aas
dec
call
dec
push
outsl
inc
ret
inc
jne
bound
mov
jnp
jnp
sub
jno
adc
shrb
nop
mov
dec
cmp
cmp
cmp
mov
xor
shll
testl
xor
test
mov
add
add
push
and
lods
in
cs
leave
adc
xorl
movsb
imul
dec
push
imul
inc
mov
pop
bnd
sub
fwait
int3
in
xchg
into
mov
fucom
jge
xchg
mov
sub
jne,pt
jmp
daa
pushf
mov
xchg
xchg
mov
pop
sub
movsl
fmulp
cmp
sti
dec
mov
pop
mov
dec
mov
mov
bound
pop
loope
push
jl
or
mov
sbb
aaa
aam
test
xchg
and
pop
inc
fcmove
bnd
adc
mov
stos
inc
and
enter
loop
mov
inc
movsl
mov
adc
xchg
iret
add
push
add
shll
aam
lret
repz
push
dec
into
dec
sub
in
int
push
mov
out
ret
mov
fbld
jnp,pn
loope
add
jmp
push
lret
lds
aad
dec
rolb
pop
xchg
jo
test
push
add
dec
pusha
dec
xor
push
jecxz
dec
movsb
push
inc
cmpsl
adc
or
pop
mov
sbb
pusha
in
std
js
movsb
out
and
imul
sub
cmp
jecxz
rcrl
jl
test
sub
pop
mov
sub
cmpsl
mov
pop
pop
inc
fbstp
push
shr
mov
outsl
sbb
loope
jae
repz
add
pop
enter
or
adc
mov
cwtl
sub
fucomi
stos
cmp
sbb
xor
popa
ljmp
jnp
or
in
mov
aaa
stc
test
fsts
or
inc
mov
loope
je
fs
arpl
pop
mov
out
adcl
arpl
ret
scas
mov
not
jae
insb
xchg
mov
packsswb
cmp
push
mov
repnz
mov
shll
or
xlat
xchg
test
jb
enter
test
jge
sub
sub
xchg
dec
mov
xor
test
sub
adc
add
lret
add
pop
insl
mov
rorl
pop
rcll
hlt
stos
lods
je
jae
lods
iret
addr16
enter
cmp
cli
xchg
pop
jb
popf
inc
dec
ds
mov
jl
jecxz
lods
mov
out
shr
movsl
mov
ss
pop
stos
stc
faddl
adc
stos
jns
xchg
rcll
add
hlt
add
push
inc
push
mov
lock
adc
shl
xchg
call
push
loopne
xchg
mov
sub
ljmp
adc
add
mov
icebp
scas
insb
std
and
cmp
imul
fadds
inc
xchg
sahf
jmp
dec
test
xchg
iret
push
stc
das
lret
test
xchg
inc
mov
nop
js
push
and
sub
xor
adc
ljmp
inc
hlt
xor
and
ss
ret
pop
aad
dec
addr16
mov
add
mov
outsl
lfs
stc
add
scas
jl
imul
mov
fcompl
jne
push
sbb
ja
push
loopne
ds
xchg
sub
adc
pushf
mov
cli
notb
pushf
push
out
mov
and
fs
and
xchg
sub
jp,pn
inc
fsubrp
mov
dec
stos
cltd
fnstenv
and
cmpsl
stc
lea
mov
int3
push
jmp
pop
scas
add
cmp
ja
add
lret
pushf
inc
mov
add
int
jbe
loope
roll
pusha
pop
orl
scas
mov
pop
push
in
jmp
out
and
ds
mov
clc
arpl
cmp
push
rcrb
lods
sub
dec
stos
pushf
mov
and
fisubrl
inc
js
cmpsb
pushf
mov
sub
out
bound
or
add
xor
fbld
imul
aaa
sbb
js
das
pop
ds
test
add
push
pop
sub
adc
adc
push
gs
ds
insl
ficompl
movsl
mov
ja
inc
test
jg,pn
pop
sbb
push
imul
mov
mov
xchg
push
sbb
dec
dec
out
aad
dec
pop
ss
jno
xchg
sub
dec
and
dec
stos
add
jb
dec
mov
sbb
and
mov
inc
cmpsl
arpl
loope
fisubrs
mulb
jnp
inc
lahf
push
add
inc
mov
clc
je
sub
dec
gs
rorb
in
fcmovnu
dec
cmpsl
lock
adc
loop
mov
imul
jp
mov
add
hlt
adc
das
addb
xor
pop
dec
negb
into
idivb
mov
push
cld
xchg
mov
ja
imul
mov
ret
fnstenv
jae
int3
popa
jne
push
or
cmp
push
add
cmp
pop
insb
adc
shl
fprem
insl
push
or
sbb
repnz
popf
ja
pusha
lret
aam
add
fcmovbe
add
adc
add
sahf
cmpsb
test
divb
movsb
adc
mov
lret
cltd
mov
mov
repz
in
inc
movsb
add
cltd
pop
enter
or
ljmp
jb
or
inc
lock
insl
imul
add
mov
int3
cwtl
mov
jecxz
int3
sub
jp
dec
mov
mov
mov
into
push
add
pusha
das
mov
repz
jg
leave
enter
cmpsl
out
cld
jb
xchg
jnp
cwtl
inc
add
in
and
or
out
mov
jb
mov
fildl
mov
add
mov
subl
cs
mov
push
repnz
mov
mov
jmp
and
mov
cmp
aad
cmp
cmp
add
mov
movzbl
adc
inc
and
mov
pop
sahf
sbb
push
add
mov
dec
ffree
aaa
mov
ds
je
aas
jne
add
mov
js
sub
lret
scas
jnp
movsl
test
cmp
xor
xchg
cmpl
jb
fsubr
nop
lds
mov
imul
adc
lcall
cwtl
push
aas
push
ljmp
fwait
repnz
dec
movsb
inc
in
cld
adc
rcrl
and
fistpll
inc
jb
add
or
add
mov
arpl
test
cltd
loopne
ret
aad
lret
pop
xor
pop
mov
sub
or
and
js
je
test
sbb
in
or
dec
jne
shl
jo
xchg
fcoml
ficoml
lret
insl
out
jle
add
mov
cmp
mov
int
stc
and
dec
and
xor
xor
pop
add
mov
arpl
pop
mov
daa
testb
add
mov
nop
pop
add
inc
jg
pop
iret
mov
or
in
in
iret
mov
add
out
pop
mov
sahf
sub
mov
xor
pop
sub
shl
mov
movsb
jge
adc
insb
dec
pop
iret
dec
fidivl
ret
in
dec
sbb
mov
pusha
cltd
ja
rclb
loop
jnp
test
jecxz
js
loopne
mov
xor
inc
inc
xchg
int
in
into
mov
sbb
cld
loop,pt
and
cwtl
jge
testb
jno
sbb
cmpsb
stos
xor
sub
and
shrb
push
mov
mov
lods
pop
pop
repz
dec
hlt
or
mov
adc
inc
mov
roll
daa
outsb
dec
movsl
xor
and
xlat
subb
sbb
jle
and
dec
mov
add
ss
addl
push
mov
mov
pushf
push
cmp
pop
pusha
roll
into
mov
pop
push
aam
adcl
jns
orl
pop
arpl
imul
xor
test
lcall
roll
ret
js
data16
adc
mov
jl
xchg
pop
or
iret
pop
sbb
sub
jle
out
jle
jp
xor
xor
movsl
cmpsl
test
xor
test
pop
imul
aad
fldcw
adc
cmc
jg
lods
test
or
adc
pop
filds
jecxz
adcl
mov
jo
je
scas
add
mov
mov
mov
test
icebp
das
push
lea
xchg
sub
lea
push
mov
dec
lahf
jmp
aad
mov
adc
addb
cmp
or
in
xor
popf
mov
pusha
inc
ss
cmpsl
fs
mov
pop
or
pushf
in
inc
inc
push
sbb
fldcw
movsb
adc
xchg
mov
je
sbb
xchg
cltd
adc
add
or
xchg
in
xchg
mov
std
stc
mov
mov
sahf
push
lea
sbb
iret
inc
inc
sahf
clc
subl
dec
mov
aas
clc
jae
adc
push
pop
add
mov
mov
and
int3
cld
cmp
clc
cmc
jae
pop
mov
jo
imull
mov
iret
xchg
aas
gs
push
lods
xchg
daa
fnstenv
fisttpll
add
jp
sub
push
jnp
lds
xorl
lcall
out
cli
fwait
lock
pop
mov
mov
cmpsb
jne
push
push
cmp
fwait
movsl
mov
xor
inc
mov
mov
clc
call
cli
dec
dec
outsw
sbb
rcrb
dec
andl
fxam
daa
clc
int
xchg
mov
nop
jge
enter
mov
adc
sbb
idivb
inc
pcmpgtw
xchg
adcb
movb
sub
test
sbb
aad
fisttpll
es
insl
sbb
sub
mov
mov
out
out
rclb
in
popa
dec
lret
nop
int
test
int3
loop
pop
jbe
mov
xor
out
sub
mov
sbb
clc
xchg
push
sub
inc
mov
mov
and
imul
iret
fwait
out
loop
aad
in
or
inc
mov
jae
jo
adc
popa
jbe
jno
gs
mov
adc
shll
sbb
inc
adc
xor
out
test
and
stos
jns
int
jno
imul
dec
mov
add
jmp
sub
push
mov
iret
fdivrs
or
adc
jb
movsl
fwait
push
xor
sub
inc
ljmp
stos
leave
sub
or
insl
sbb
adc
bnd
push
sub
jo
pop
mov
lret
cltd
out
stos
daa
lea
pushf
adc
sub
lods
inc
stc
add
jnp
push
outsb
sti
dec
std
jmp
jmp
inc
in
js
ja
jnp
lahf
push
mov
lcall
aas
test
fstps
jo
sub
or
push
adc
cmp
sahf
jns
push
clc
dec
popaw
data16
out
push
dec
iret
jecxz
mov
fadd
or
add
jmp
shrb
popa
mov
scas
setnp
aas
imul
push
jle
leave
test
cltd
push
push
sub
xchg
push
arpl
aaa
fisubl
stos
popf
push
sub
popa
jb
jns
ror
fisubl
xchg
jp
mov
sarl
out
push
fisubs
or
cld
jl
pop
push
gs
popf
rorb
mov
loop
push
or
cmp
xor
xchg
pop
or
xchg
int
mov
mov
ljmp
mov
into
fdiv
xor
sub
and
mov
je
lahf
ret
fs
outsb
add
sub
push
fwait
push
jle
ljmp
test
lret
push
add
sub
pop
jne
sbb
pop
pop
sbbl
loop
rolb
inc
mov
mov
cltd
inc
lods
dec
scas
push
insl
jle
testb
pop
jb
inc
xchg
push
fidivs
test
add
aaa
push
xchg
xor
ror
out
xlat
fbld
test
pop
and
jae
pop
popa
xrelease
jge
dec
sbb
fadds
mov
ja
testl
mov
in
ljmp
lret
pop
pop
cld
pop
xor
fildl
jmp
in
xor
pop
adc
mov
xor
xchg
imul
and
jl
and
mov
cmp
out
rcr
add
add
sbb
adc
xor
sub
jmp
adc
ja
ds
jg
pop
loop
ds
leave
jle
aaa
in
mov
sbb
xchg
adc
in
mov
sarb
or
sbb
das
call
pop
roll
loope
js
inc
incb
dec
cwtl
push
negl
xchg
adc
ret
bound
fistpl
test
mov
iret
xor
jl
add
pushf
pop
aad
xchg
cmp
rorl
cld
jmp
push
fidivl
pop
and
les
adc
mov
jecxz
cmpl
or
enter
cmp
pop
push
jle
cwtl
scas
aaa
or
test
aaa
in
lret
push
int
push
fucom
jno
outsl
jp
cmp
and
cmp
popf
xor
movsl
inc
cmp
add
enter
sbb
ljmp
add
jmp
or
out
pop
nop
push
mov
dec
push
arpl
jp
negl
sub
lret
rcr
mov
push
fwait
push
pop
mov
push
icebp
mov
call
jecxz
dec
pop
fwait
push
enter
cltd
or
jle
ja
adc
popa
push
mov
les
xchg
jg
ja
pop
mov
dec
scas
adc
xor
and
dec
out
inc
shrb
test
aad
mov
mov
xchg
jp
ret
pop
pop
stos
test
push
leave
mov
dec
add
test
lret
lret
and
mov
inc
in
add
mov
sarb
sub
jmp
dec
cmpsb
stc
inc
xor
aas
pop
jp
lods
mov
jno
and
mov
jmp
mov
sub
or
lock
jmp
sbb
jb
mulb
stc
loopne
sub
pop
scas
add
mov
addr16
mov
mov
xor
je
pop
dec
leave
jl
sahf
pushf
in
dec
pop
push
mov
xchg
push
inc
or
and
pop
rcr
test
inc
repz
sti
mov
lret
and
or
in
enter
shl
fcompl
movsl
mov
imul
cld
sahf
xchg
sahf
cmp
fldt
push
mov
sub
jl
movsl
lock
les
movsl
cmc
mov
into
pop
adc
daa
cmp
add
and
xlat
aaa
shr
andb
mov
shll
sub
fisubl
enter
cmpsb
xlat
inc
ret
adc
and
push
dec
icebp
and
insb
in
inc
cli
cmp
jnp
push
cld
hlt
push
lcall
sbb
add
add
aad
loopne
or
xor
test
shll
add
ret
inc
dec
mov
sti
and
incl
out
xor
mov
filds
inc
adc
and
imul
mov
pop
cwtl
scas
pushf
or
lds
cld
dec
test
jb
jns
pop
roll
sub
cltd
insb
dec
popa
aad
in
vmovddup
mov
fidivrs
dec
sbb
sub
xlat
jmp
mov
nop
xchg
movsl
std
inc
data16
enter
add
inc
aad
and
dec
or
das
aas
mov
push
aad
stc
cmpsb
shrl
dec
shll
js
adc
add
lret
data16
inc
shlb
jne
cli
in
fs
gs
adc
mov
xor
js
xchg
mov
jne
push
movb
sub
mov
xor
pop
inc
xchg
mov
in
push
fldenv
jmp
fildll
sub
int3
sub
lods
incb
scas
insl
dec
pop
dec
jle
test
insb
jge
mov
cmp
das
pop
jg
repnz
loop
dec
pop
mov
lcall
cmp
call
in
mov
call
pop
sub
push
push
pop
insl
mov
out
adc
insb
adc
xchg
cli
scas
jne
xchg
xchg
inc
xorb
add
push
xchg
sub
les
aas
mov
pop
inc
pop
stos
mov
ja
cmp
xor
rclb
push
dec
je
lret
pop
mov
in
inc
adc
pop
dec
dec
fwait
aas
jae
xor
pop
adc
sbb
adc
and
sub
xor
or
mov
lea
ja
adc
sub
inc
cltd
add
push
cmpsl
pop
jl
mov
into
mov
xchg
call
sbb
fsubrs
loop
sub
push
and
sub
mov
lock
push
jno
fldenv
sahf
fnsave
shlb
pop
mov
cmc
enter
nop
es
out
enter
sbb
inc
fiadds
insl
shr
pop
xchg
sti
cmpsb
push
insb
adc
pop
adc
inc
adc
aaa
cwtl
aas
dec
cltd
xlat
ja
rcrl
mul
decb
pushf
cmpsl
mov
adc
lods
int
xchg
popf
sub
sbb
test
daa
jnp
in
push
js
insl
sub
dec
scas
jbe
xchg
xor
dec
hlt
data16
outsl
mov
sti
xchg
or
lcall
loopne
popf
xchg
jl
adc
sbb
stos
sbb
jns
mov
cmp
loopne
in
mov
sbbb
xor
jmp
pop
cmp
stc
sti
xchg
push
cmp
lods
jns
js
mov
dec
and
fsubl
mov
jne
sbb
adc
int
insb
xlat
ds
mov
popf
ret
inc
roll
sbb
mov
pushf
mov
mov
push
cmp
insl
imul
mov
xchg
ss
xor
mov
fcomps
inc
outsb
insl
dec
sub
jno
insb
dec
insb
jmp
xor
jmp
sti
cltd
adc
mov
or
nop
or
adc
jp
jns
push
sub
and
mov
xchg
add
pop
xor
test
gs
push
sarb
adc
int3
ret
jbe
cld
repz
jmp
jne
sti
psubb
bnd
scas
xchg
xlat
fdiv
test
es
xchg
call
nop
pop
cmp
pop
ljmp
jg
add
and
popf
fwait
dec
sub
jle
movsb
lahf
out
in
push
push
outsb
jb
xor
cmp
xor
daa
ret
adcl
adc
add
xchg
fcompl
stos
xor
scas
cwtl
enter
mov
jp
cld
fldcw
leave
adc
insl
aas
mov
into
push
mov
rorb
sbb
mov
fstpt
out
sbb
insb
sub
mov
out
cmovae
inc
fcoml
sub
sbb
clc
xchg
xchg
mov
pop
xchg
or
pop
lcall
test
mov
popf
cmp
ja
scas
daa
sbb
xchg
mov
jne
fisubl
lea
mov
inc
or
cmp
dec
js
js
daa
dec
push
lock
mov
imul
test
clc
mov
inc
add
sbb
mov
leave
mov
jle
cmp
cmp
cltd
or
push
es
lret
xor
aaa
out
jb
std
add
fs
into
lods
and
aam
arpl
out
je
add
lea
das
jecxz
adc
loopne
lock
mov
or
jo
arpl
dec
into
cmpsl
jne
andl
or
sub
add
cmp
scas
and
lret
sub
shrl
repz
test
insb
xchg
aas
ja
dec
pushf
xor
mov
push
cmp
test
xor
cmpb
out
imul
pop
sub
test
dec
shr
ljmp
fnsave
inc
in
push
or
and
xor
stos
add
inc
shlb
cmpsb
cs
clc
push
and
pop
jmp
add
sub
push
mov
xchg
in
pop
std
inc
xchg
xchg
frstor
shl
js
addb
rorl
add
mov
mov
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
shlb
add
lods
add
add
sbb
dec
ss
mov
pop
dec
insb
xchg
mov
lock
inc
mov
rolb
popf
cltd
jecxz
in
iret
incb
adc
bound
mov
or
lods
mov
outsb
test
adc
or
pop
xchg
movl
shr
xor
cmpl
stos
insl
leave
xchg
xchg
dec
mov
out
and
cmpsb
jge
push
bound
push
nop
push
in
sub
add
insl
jmp
fs
push
cmp
popa
fadds
cmp
and
js,pn
popa
push
test
add
sub
adc
cmp
out
pop
xchg
push
pop
xchg
add
mov
out
and
je
inc
mov
dec
inc
inc
xor
jg
filds
pop
jl
pop
insl
into
test
int
test
mov
push
cmp
pop
mov
dec
mov
lock
orb
ret
jmp
popl
std
shll
cmpsb
cmp
mov
mov
mov
faddl
xchg
jns
xlat
int3
dec
add
mov
xchg
inc
jg
mov
sbb
ret
pop
cpuid
pop
jne
inc
adc
fnsave
test
or
mov
loopne
jmp
cmp
jae
push
std
test
add
add
sub
sub
addb
xchg
add
or
xchg
stos
and
and
neg
test
test
bound
loope
add
aaa
inc
stos
add
mov
and
cli
cmc
dec
pushl
or
xchg
pop
dec
rclb
adc
mov
lcall
xlat
sbb
fsubs
mov
aam
sbb
test
popf
cmp
adc
fistps
fsts
jl
cmp
imul
push
push
jb
mov
sub
test
push
sbb
aaa
push
xor
inc
add
add
and
aam
aam
ljmp
je
push
lret
mov
add
lods
add
add
aad
mov
mov
adc
nop
jb
sti
call
xor
add
fmulp
outsl
hlt
xchg
cmp
test
rcrb
push
jge
sub
jl
mov
xor
imul
add
outsb
jbe
imul
inc
out
repz
js
jecxz
rorb
mov
sbb
dec
das
jg
pop
xchg
lret
mov
mov
js
idivl
lcall
fwait
push
jbe
test
mov
ror
rcll
fcmovne
test
mov
aam
xor
sti
inc
aad
or
add
lret
dec
jle
sti
cmpsl
mov
dec
mov
arpl
add
sub
aas
or
push
das
xchg
fstpl
test
leave
or
shr
sbb
xor
dec
cmpsb
fldl
jg
push
int
sub
xlat
or
mov
scas
lcall
xchg
lods
mov
movsb
or
pushf
push
stos
xchg
mov
into
mov
aas
mov
mov
scas
rolb
imulb
movsl
das
push
push
aad
lock
pop
insb
push
sahf
mov
sub
insl
lock
mov
cli
sub
rclb
popf
fiaddl
and
mov
sbb
dec
aaa
fnstsw
mov
out
lods
cmp
stc
stc
rcll
add
lods
add
add
or
incl
push
rclb
stc
insb
sbb
fcoml
outsl
add
gs
mov
jae
cmp
inc
jmp
xchg
and
pushf
stc
insb
lock
pop
sub
mov
mov
dec
in
or
rorb
int3
or
xor
inc
dec
push
test
fstpt
shrb
stos
cmp
fcompl
pop
hlt
inc
inc
dec
xchg
leave
xor
xor
call
mov
and
sub
mov
mov
outsl
fsub
jmp
jl
test
lds
aas
add
add
inc
gs
aaa
push
fiadds
mov
add
add
sbb
lcall
xchg
clc
ss
icebp
mov
imul
lock
xor
mov
aaa
add
stos
push
sub
lock
pop
fisubs
int3
out
sub
ljmp
outsb
es
xlat
pop
mov
mov
cli
push
mov
mov
out
mov
lret
mov
adc
jb
sbb
shll
ficoml
sbb
add
repnz
add
or
mov
mov
stc
lock
add
das
imulb
lods
ds
mov
lods
push
lock
push
mov
popa
lcall
add
add
add
sub
das
jle
jg
imul
push
mov
xchg
add
pop
dec
aaa
dec
or
xor
or
and
pop
xchg
jecxz
xor
push
cmc
dec
nop
ljmp
inc
jne
sbb
mov
fisubrs
mov
push
ds
sbb
stos
mov
int
mov
or
outsb
inc
loop
inc
mov
jg
cli
sub
fadd
or
mov
sub
cli
pop
lret
fimuls
xchg
adc
out
push
gs
cwtl
jle
lods
scas
cmp
jbe
cmp
jge
pushl
inc
push
in
inc
adc
push
inc
mov
sahf
mov
out
test
ror
idivb
pop
pop
test
xchg
hlt
add
add
and
mov
mov
mov
add
jbe
inc
loopne
cld
leave
jno
sbb
fmul
lds
jecxz
testl
imul
jl
cmpsb
mov
daa
movsb
mov
in
mov
adc
iret
les
and
sahf
pop
outsl
test
or
add
aam
lahf
fsubl
ljmp
clc
xor
dec
mov
xchg
push
or
sub
decl
xor
iret
push
outsb
addl
and
out
and
sub
dec
mov
or
xchg
pop
mov
test
lea
jo
scas
jge
xlat
sbb
push
sldt
add
or
ret
lods
sub
mov
daa
loope
add
lods
add
add
pop
sub
cld
out
push
fnstcw
repz
imul
or
outsb
mov
mov
pop
je
add
push
aam
mov
sbb
popf
mov
adc
aas
and
adc
sets
push
js
and
insb
insb
push
lock
pusha
mulb
repz
push
ds
jmp
jmp
lods
clc
xlat
aaa
mov
sub
mov
scas
enter
shl
rorl
adc
mov
inc
inc
push
or
pusha
lods
jecxz
int
shrb
inc
outsb
inc
out
mov
add
add
add
add
ret
pop
iret
fst
enter
fwait
movsl
repnz
mov
add
mov
mov
test
int3
jg
stos
test
daa
in
adc
jmp
push
movsb
mov
cmp
aaa
sub
imul
insb
idiv
sub
pop
pop
xor
movsl
dec
or
xor
push
sbb
roll
inc
aad
pop
or
mov
and
and
dec
out
pop
sub
xor
cmp
outsb
add
sub
hlt
lods
jae
cld
jle
pop
jg
jle
mov
sbb
jno
inc
fcmovb
divl
mov
out
mov
dec
sbb
cmp
rorl
in
add
add
lock
out
repz
mov
ret
in
adc
push
cmp
add
fs
rcrl
mov
cmc
or
aad
pop
add
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
data16
jp
jbe
ja
js
jno
arpl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
add
inc
add
aad
add
mov
jns
xor
dec
cmp
dec
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
rolb
pop
aam
add
inc
add
aad
add
add
aad
add
inc
add
add
aad
add
test
pushf
clc
pop
aam
add
inc
add
inc
add
inc
add
inc
add
aad
add
or
subl
push
orl
add
cmp
ds
add
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
jbe
mov
pushf
clc
sbb
push
pop
es
add
push
rolb
sbb
add
mov
inc
add
pushw
addr16
pushw
push
es
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
adc
jno
jp
dec
aam
add
adc
imul
insb
push
imul
push
insb
inc
push
inc
jo
dec
dec
pop
jp
jbe
pop
jo
inc
push
jb
inc
je
inc
jae
dec
gs
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
add
bound
dec
ja
dec
inc
inc
push
add
je
bound
dec
bound
pop
outsl
push
inc
gs
dec
js
inc
js
arpl
add
add
add
jb
outsl
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
jp
push
arpl
dec
dec
data16
imul
dec
cmp
dec
lods
out
mov
js
xor
add
add
in
pop
inc
cwtl
pusha
mov
bound
mov
push
ret
rclb
and
mov
pop
xor
xchg
dec
jl
pop
ja
dec
cs
pop
and
sarl
sub
mov
sti
out
mov
mov
inc
repnz
insl
add
das
or
and
subl
std
ret
into
aaa
call
or
fcomip
ud0
cmp
and
fsincos
in
mov
lea
imul
ss
add
and
adc
addr16
sub
add
sub
cli
jl
xlat
push
mov
popf
mov
lods
add
add
or
mov
pop
cmpsl
inc
cmpsb
cmp
stos
mov
cmp
in
sub
push
loop
or
sbb
lock
inc
fidivs
push
pop
fisttpl
dec
les
cmpsl
and
sbb
jge
inc
fwait
add
mov
and
jl
jb
mov
jae
inc
daa
out
cmp
mov
push
testb
je
jne
pop
data16
xchg
loop
in
cld
xlat
push
movsl
sub
pop
push
inc
aad
jmp
push
sbb
sub
ljmp
xchg
mov
adc
push
ja
add
mov
jg
ljmp
push
pop
out
xchg
add
lods
add
add
jge
lahf
mov
shlb
lods
ret
pop
add
mov
xor
or
fstp
jle
or
scas
jne
jp
push
movb
pop
cs
sbb
adcb
cmp
adc
inc
inc
daa
popf
movsb
sbb
xchg
stos
jecxz
add
mov
sbb
xchg
mov
arpl
pop
in
loop
in
pop
adc
xor
enter
clc
mov
mov
lahf
mov
aam
mov
test
iret
sahf
adc
adc
xchg
lfs
mov
add
add
add
add
cmp
in
fimuls
mov
pusha
fwait
cwtl
add
lods
add
add
or
out
scas
pop
pop
inc
adc
dec
insl
outsb
rcrl
jbe
out
lcall
aaa
mov
je
icebp
shlb
pop
popf
sbb
das
lret
mov
jge
ret
jmp
adc
std
imul
and
dec
aam
dec
push
add
adc
scas
fsub
in
jbe
mov
shrd
lret
push
aaa
outsl
push
push
cltd
cltd
cmp
xchg
pop
mov
rcrl
inc
dec
jnp
push
ret
call
pop
jns
adc
mov
mov
sub
and
mov
sub
inc
fsubs
int
or
add
fnstenv
std
negb
sub
jg
fsts
cltd
add
lods
add
add
sahf
dec
mov
les
aad
std
cmc
clc
fdivrs
dec
jnp
jmp
popf
fwait
arpl
ret
pop
out
lods
pop
push
mov
mov
mov
test
popl
in
arpl
add
sub
add
mov
mov
adc
mov
and
dec
sbb
mov
sbb
out
lret
int
jecxz
dec
fcompl
adc
inc
aad
fidivrl
or
je
ret
lods
and
add
scas
mov
push
sbb
insl
mov
test
xlat
jl
aam
je
jmp
add
xor
jb
inc
mov
inc
cmc
cltd
add
lods
add
add
push
pop
or
mov
add
mov
pushf
jge
mov
jne
xlat
ja
sub
and
push
repz
shlb
scas
ret
fsubs
mov
jg
call
roll
std
push
pop
pop
mov
cmp
jp
cltd
subb
into
movsb
fstpl
mov
into
and
aam
and
negb
jns
inc
mov
or
mov
pop
fiadds
aaa
mov
subb
sub
lods
scas
sarb
lods
nop
int
and
inc
mov
push
cmp
inc
mov
bound
add
add
add
pop
sub
xchg
mov
add
add
cmpsb
jns
or
dec
popf
pop
cmp
repnz
xlat
loop
and
push
lcall
mov
addr16
mov
ds
repz
sub
shr
and
in
mov
stc
scas
add
ficoml
cs
cmp
ss
lods
ret
int3
fiadds
in
pushf
aam
ficoml
notl
int3
insl
sbb
fidivrs
fisubs
pusha
cmp
push
pushf
in
push
add
aaa
addl
cli
jnp
hlt
mov
imul
mov
ja
jno
add
push
add
xor
jb
insl
xor
and
dec
fwait
add
lods
add
add
jl
idivl
cli
int3
inc
sub
mov
mov
dec
fcomip
xchg
stos
pop
push
leave
xchg
cmp
mov
dec
imul
fidivrl
cmp
shlb
test
pop
hlt
sbb
cltd
cli
push
dec
ss
adc
jmp
xchg
ret
add
test
fwait
mov
or
popf
jnp
and
mov
dec
dec
mov
test
std
fiadds
icebp
inc
mov
aas
leave
add
mov
jb
mov
call
pop
add
add
push
add
mov
out
das
jo
cld
fwait
add
lods
add
add
or
pop
xor
jge
mov
daa
jne
cmpsl
sti
ret
pop
aam
imul
div
loopne
lret
push
ficoms
into
cmp
je
or
sub
xchg
outsb
jmp
popf
int
iret
repz
cs
movsb
dec
bound
pop
aad
mov
adc
mov
insl
mov
or
in
pop
test
repz
sahf
or
jmp
stos
mov
scas
aam
fmuls
xchg
push
ds
out
loop
sbb
dec
push
repnz
cmp
gs
or
xchg
je
repnz
add
mov
jmp
fimull
cmp
cmp
add
daa
loope
lea
inc
pop
sbb
nop
dec
stc
mov
pop
ja
xor
test
fwait
xor
xchg
std
fistpll
and
in
add
push
scas
and
loope
arpl
mov
xchg
out
movsl
jmp
or
loop
mov
jo
or
inc
pop
mov
mov
pushf
insl
popa
lds
lods
dec
xlat
xor
outsb
lods
cmp
dec
leave
dec
pop
test
mov
jo
test
fildl
cwtl
scas
movl
std
jmp
gs
mov
xor
adc
test
adc
pop
ja
add
pop
inc
pop
iret
pop
aad
ss
dec
fistl
xor
add
lods
add
add
pop
inc
adc
dec
les
jno
cld
cmpsl
cmp
pop
insl
call
daa
int3
cmp
push
dec
mov
das
inc
lea
mov
sti
aad
mov
mov
in
outsl
mov
mov
aam
add
push
int
dec
mov
fsubrp
jp
sub
es
jge
fidivs
rorb
add
jnp
jmp
daa
push
rorl
sub
or
ja
jo
fstpt
add
sub
adc
sbb
pop
mov
lcall
popf
sub
mov
xchg
add
add
cld
cmp
add
sahf
add
lods
add
add
mov
mov
push
adcb
mov
xor
xchg
or
inc
mov
xor
mov
or
adc
xchg
push
aas
jbe
and
shlb
push
inc
fists
sub
inc
fdivrl
jl
push
push
cmp
loopne
and
mov
jl
movsl
mov
pop
leave
sub
enter
inc
subl
add
dec
arpl
loope
mov
sbb
cltd
cmp
or
mov
push
js
push
push
mov
mov
ds
es
cmp
rolb
pusha
or
add
lock
jle
repz
in
mov
lods
add
add
sbb
adc
ret
ffreep
pushf
xlat
pusha
add
push
jnp
pop
shr
sub
leave
mov
mov
xor
sbb
stos
fcoml
arpl
xor
fstl
jo
push
xchg
mov
out
out
dec
cmp
push
leave
insl
jg
rcrb
and
dec
xchg
push
sub
jl
testb
mov
mov
ret
lods
push
jl
inc
jge
leave
mov
xor
ja
ljmp
mov
cmp
and
push
xor
or
push
jnp
mov
mov
test
stos
jb
add
add
adc
adc
mov
lds
pop
lahf
add
lods
add
add
add
enter
popa
gs
leave
and
mov
adc
cmc
dec
push
mov
dec
inc
ret
pop
add
mov
pop
rorl
cmc
shll
or
cmp
xor
mov
mov
pop
sbb
ret
sub
mov
push
pop
pop
dec
xchg
cld
mov
adc
xchg
mov
stc
inc
js
jnp
and
ja
lods
out
push
xchg
in
loope
sub
lea
cmp
fwait
sbb
mov
cmp
mov
xor
cmp
add
add
mov
lock
mov
rcrb
test
lods
add
add
pop
and
jmp
dec
sbb
lods
push
mov
mov
dec
shlb
cmc
push
nop
rcrl
shrb
xchg
sbb
je
scas
jg
add
dec
pop
enter
fdiv
out
aam
or
nop
jns
in
leave
push
lret
imul
data16
pop
xchg
push
ss
mov
fidivrl
sbbl
cmc
cmp
dec
test
push
cwtl
mov
and
lea
fiadds
scas
inc
movsb
pop
lret
adc
push
push
repnz
cwtl
mov
je
mov
or
negl
add
aam
push
lock
cmc
das
sbb
xchg
iret
lods
std
and
mov
add
lods
add
add
imul
xor
inc
inc
into
jo
cli
inc
inc
fnsave
and
mov
push
jno
pusha
jno
xchg
bound
in
mov
push
or
fistps
cmpsl
and
fcompl
add
les
in
and
adc
in
xchg
adc
int
cmp
fistl
mov
fcoml
in
push
sub
pop
xchg
pop
jo
ss
jp
or
in
or
inc
mov
imul
inc
dec
jb
pusha
sbbb
lret
and
sti
fs
scas
outsl
inc
mov
mov
loop
add
int
xchg
inc
cmc
sti
fildll
movsb
pop
insl
stos
mov
add
call
icebp
xor
loop
aaa
imul
sub
inc
idiv
pop
ds
mov
imul
mov
and
stos
jmp
ret
stos
mov
mov
push
jb
scas
stos
cli
dec
xchg
arpl
pop
and
repz
inc
out
mov
pushf
ror
xlat
addr16
gs
xchg
dec
enter
sbb
fisubl
fwait
mov
leave
mov
fs
pop
inc
push
js
mov
pop
cli
mov
inc
test
push
lcall
leave
mov
out
mov
ret
cltd
scas
jl
dec
sbb
outsb
push
inc
adc
testl
in
push
adc
add
mov
jo
mov
jo
repz
jmp
out
push
add
or
jg
mov
cmpl
nop
mov
call
jle
push
into
int
aad
call
lods
lcall
mov
pop
leave
dec
dec
sbb
idivb
fsub
and
int
cmc
xchg
pusha
sbb
inc
cmp
mov
movsb
cmpsl
xchg
and
fidivrl
mov
and
xchg
imul
sbb
add
stc
movsb
or
and
sahf
jb
cmp
inc
call
jo
mov
inc
int3
and
rcrb
ret
fucomi
pop
js
pop
add
add
push
imul
sbb
jae
mov
add
add
mov
push
sub
std
ficoms
nop
repz
jmp
ds
adc
jmp
cmc
sti
adc
push
mov
mov
aas
xor
inc
loope
repnz
std
xor
insb
mov
push
xor
dec
adc
xor
clc
push
gs
pop
mov
mov
mov
inc
add
pop
imul
inc
in
mov
mov
sti
push
mov
and
lret
inc
lret
pusha
or
mov
insl
xchg
imul
leave
imul
ljmp
add
add
jne
jg
clc
cs
push
push
add
lods
add
add
jbe
rdpmc
fisttps
sub
jnp
pop
daa
mov
mov
xchg
mov
mov
notl
dec
jmp
pop
jnp
mov
sub
xor
jl
sahf
cwtl
sub
jo
gs
je
cwtl
dec
sub
mov
mov
inc
jb
xor
mov
push
xor
mov
jge
dec
dec
push
popf
aam
es
cltd
mov
xchg
sub
pop
jmp
pop
insl
imul
sub
dec
and
xor
cmpsl
mov
pushf
sbb
pushf
pop
xchg
xor
data16
nop
mov
jbe
call
ljmp
add
add
add
mov
cmp
sti
dec
mov
je
lcall
add
lods
add
add
mov
fwait
xor
dec
dec
jno
int
les
add
mov
pushf
and
jle
iret
shlb
xchg
insl
and
out
xor
mov
xchg
pushf
sbb
scas
xchg
add
mov
pushf
daa
add
int
inc
hlt
aas
iret
loopne
popa
xchg
packssdw
xchg
std
int3
cwtl
mulb
mov
repz
out
aaa
inc
push
test
shl
incb
bound
or
mov
insb
pop
mov
daa
xchg
pop
enter
jo
imul
mov
jbe
xchg
aam
fs
mov
filds
mov
stos
or
add
push
mov
mov
xchg
adc
imul
add
stos
ret
in
jle
cmp
insl
cmpsl
jb
fs
xorl
subb
push
cltd
dec
inc
loopne
rorl
sbb
cltd
insb
pop
mov
enter
mov
push
inc
mull
and
xor
ja
cmp
js
insl
lds
mov
out
mov
jmp
xchg
inc
lea
imul
pop
shll
loope
add
mov
xchg
dec
sbb
mov
mov
inc
clc
lcall
hlt
sbb
lea
stos
mov
ret
adc
sahf
pop
lret
push
push
cmp
sahf
fbstp
mov
fadds
add
xchg
fcmovu
fisttps
push
push
jmp
add
lods
add
add
or
clc
xor
scas
int3
inc
out
js
rcl
mov
les
inc
lahf
arpl
dec
push
fdivs
push
lock
arpl
mov
xorb
ret
xor
addr16
int3
add
sbb
jge
ja
xlat
push
jl
in
push
adc
push
jnp
jp
stc
jp
add
je
stos
cld
mov
int
sub
fidivrs
push
mov
lods
sub
inc
push
mov
ja
mov
sbb
and
adc
jb
fstpt
lods
pop
or
popf
test
cs
and
enter
pusha
out
mov
loop
add
add
jle
out
sbb
mov
lea
add
shl
cmp
fsubrl
adc
decb
or
jae
or
pop
xorl
push
pop
cmpsb
shrb
cmp
out
mov
fucom
mov
int3
adcl
dec
xchg
in
push
add
fwait
aam
stos
shlb
mov
mov
enter
mov
ret
clc
and
pop
pusha
out
ret
into
dec
adc
mov
int3
out
sahf
xchg
lret
pop
add
push
mov
rorb
xchg
pusha
repz
shl
out
sub
sahf
pop
imul
jle
es
ffreep
in
xorl
jo
and
cmp
adc
add
int
ljmp
rdpmc
lods
add
ret
add
or
mov
inc
aam
mov
mov
xor
imul
gs
mov
fcomps
test
sysenter
std
fisttpll
in
xor
cmp
jp
xor
insl
je
adc
xchg
icebp
cmpsb
push
mov
jno
or
push
out
frndint
loope
xchg
xchg
fs
daa
mov
nop
jae
lea
lock
scas
add
xor
push
lock
lods
xor
cmpsb
cli
sub
addr16
adc
dec
lcall
add
popf
aam
lcall
lods
add
add
pop
inc
adc
dec
shlb
lahf
mov
push
mov
sti
mov
mov
iret
iret
jae
test
js
pop
mov
roll
out
dec
outsb
sarb
push
dec
sub
ds
mov
add
movsl
jle
adc
rclb
jle
movsb
xchg
push
jae
mov
sub
pop
mov
sub
insb
push
das
les
xor
outsl
mov
loop
xor
lock
jg
mov
das
jnp
xchg
repz
mov
dec
insl
jl
xchg
mov
pop
stos
push
lret
mov
scas
or
add
add
mov
jbe
hlt
mov
and
cmpsb
push
jae
and
add
add
and
in
lock
xor
movsb
sub
inc
jb
or
cmp
or
inc
stos
hlt
push
mov
or
loope
push
push
fnstsw
fstps
add
xchg
pop
stos
cs
inc
pop
mov
xor
sub
mov
cli
or
jnp
xor
insw
or
and
push
xor
push
xchg
shr
xor
sbb
cmc
sub
rcrl
mov
out
add
jns
push
mov
fldln2
add
ljmp
in
mov
pop
pushf
add
add
ror
mov
sub
out
and
iret
aas
rorb
add
xchg
inc
and
clc
data16
stos
dec
rep
mov
fmull
fldl
and
inc
int3
mov
jae
ljmp
mov
out
cmp
aam
outsl
xchg
sti
mov
push
ret
dec
xor
and
xorl
and
sub
jno
ret
jg
fnsave
and
xor
mull
std
mov
mov
int3
xorl
stc
in
adc
jecxz
push
lock
mov
outsl
and
fs
and
in
sbb
test
sub
adc
add
add
in
outsb
and
pop
mov
jg
add
lods
add
add
shrl
xchg
dec
mov
sub
sbb
push
lds
outsl
call
int3
pop
cld
adc
add
xchg
push
test
fsubrs
inc
or
mov
daa
lcall
add
jle
mov
sbb
inc
mov
in
mov
in
pop
data16
mov
out
cmc
add
mov
mov
test
lea
add
inc
mov
in
lods
and
outsb
repnz
int3
pop
and
mov
add
push
ret
and
add
add
mov
and
test
lods
add
add
std
fsts
out
mov
cmpsl
xor
movsb
dec
ret
mov
fcmove
ljmp
cli
push
bts
fistpl
loop
cmp
mov
lahf
insl
or
mov
adc
add
subl
dec
inc
outsb
add
ljmp
dec
icebp
cmp
adc
fcomi
pop
adc
push
mov
sbb
cmp
cmp
push
add
mov
xchg
lahf
test
push
sbb
fsts
add
add
xchg
and
fdivrs
leave
xlat
lret
mov
cs
mull
push
push
jno
add
add
stc
call
into
inc
mov
and
sbb
fsts
add
movsl
lcall
mov
sbb
mov
aaa
loopne
in
pop
cld
and
inc
xor
adc
push
sub
out
push
pusha
adc
xor
in
fsubrl
xchg
popf
fdivrs
subb
pop
jns
cmpl
lea
setbe
iret
xchg
stos
xchg
inc
xlat
mov
fsubrs
pop
cwtl
inc
leave
fsubl
mov
pop
and
aad
aad
jno
js
inc
sbb
aas
xchg
jae
push
pusha
mov
mov
test
push
fmull
and
inc
rorl
call
xchg
cmc
add
add
sub
sub
add
add
lods
add
add
jp
cmp
iret
mov
jae
ss
cli
insb
jae
push
or
mov
sub
mov
xchg
sub
add
xchg
fdivr
into
cmp
sub
pop
xchg
add
addr16
pop
xchg
out
cld
mov
cmp
int
es
mov
adc
lods
fbstp
xchg
ds
lods
cmove
jb
jg
test
dec
cmp
out
inc
in
out
setns
in
sbb
js
aad
lea
push
push
and
pop
insl
add
ja
ss
clc
mov
or
push
add
add
int3
sbb
out
loopne
lods
mov
daa
xor
add
cli
xchg
icebp
clc
push
mov
clc
sbb
push
fdivl
ret
fcmovnbe
out
popf
out
or
mov
inc
nop
scas
daa
add
clc
mov
lds
ljmp
xor
mov
inc
in
xchg
xchg
add
pop
icebp
dec
ret
bound
inc
fdivl
test
pop
pop
aaa
or
ret
xor
mov
cwtl
jecxz
fimuls
push
outsb
mov
test
scas
jno
fcmovu
shrb
or
ja
mov
ljmp
fimull
pop
imul
adc
das
and
add
scas
roll
add
test
fildll
scas
dec
cmp
xchg
add
lods
add
add
push
mov
mov
dec
jb
cmp
es
data16
pop
pushf
popf
shll
or
leave
fists
ficomps
lods
push
pop
mov
push
xor
les
add
popa
sbb
or
jp
push
stc
mov
sbbb
sub
xchg
inc
sbb
push
inc
sarb
jecxz
push
loopne
lock
and
sahf
repnz
inc
xchg
or
popf
cmc
cmpsb
popf
enter
pop
movsl
test
call
jecxz
cmp
out
test
mov
mov
jl
sbb
jno
dec
inc
pop
and
add
add
lods
fcomi
sarb
add
xchg
add
lods
add
add
push
lock
xor
mov
pop
lcall
mov
hlt
xor
xchg
and
rcll
adc
mov
subb
and
lea
xchg
out
icebp
int3
mov
insl
add
subb
sbb
sbb
pusha
inc
lods
dec
xor
pop
iret
mov
fpatan
cmc
cwtl
popa
mov
add
sub
lock
rclb
fbstp
lock
xchg
ret
mov
mov
cli
push
lock
xchg
xchg
icebp
insl
imul
add
les
push
sarb
fwait
jmp
push
stc
add
add
divl
dec
cmp
dec
jnp
xchg
aas
cmp
add
iret
push
xor
lret
xchg
push
push
pop
fs
and
test
dec
dec
lea
fbld
and
cmpsb
cli
push
dec
mov
pushf
push
sub
mov
aas
xor
enter
pop
sbb
mov
push
js
jno
xchg
sub
pop
pop
je
movsb
push
and
xchg
repz
subb
adc
pop
les
or
xchg
into
sbb
es
inc
mov
loop
inc
inc
mov
pop
adc
add
shrb
in
xor
pushf
and
add
sbb
mov
inc
pop
roll
outsb
pop
in
add
add
arpl
jge
mov
daa
lret
out
add
lods
add
add
cmp
and
les
sub
jb
dec
inc
mov
adc
ljmp
je
push
pop
and
pop
rorl
adc
mov
in
std
cmp
je
mov
mov
dec
imul
mov
mov
and
mull
xlat
sbb
leave
xchg
dec
insb
mov
jae
cltd
pop
nop
scas
out
inc
xor
dec
in
rclb
inc
adc
inc
cs
andb
xor
out
mov
outsb
arpl
jge
mov
inc
mov
daa
ss
xor
and
cld
imul
add
lods
stc
inc
sti
or
js
jp
mov
lret
aam
pop
out
aaa
inc
test
pusha
jl
jae
dec
jo
test
fistpl
dec
mov
test
cmpsb
cltd
je
int3
pusha
icebp
ss
add
lahf
push
and
pop
mov
shlb
arpl
push
xchg
or
and
fxch
lock
es
out
cmpsl
push
push
mov
mov
inc
cltd
adc
push
jp
and
xor
jge
sub
lcall
push
xchg
inc
stc
push
cwtl
cmp
adc
sbb
fcmovnbe
dec
movb
add
out
mul
aaa
cmc
xchg
lcall
sbb
add
fstps
xchg
mov
in
addr16
or
inc
push
lret
iret
pop
loope
pop
imul
ljmp
ret
adc
xor
add
roll
outsl
lahf
leave
cltd
pop
call
movsb
popf
inc
mov
les
test
push
popf
xchg
arpl
aas
push
pop
sub
add
fst
xor
push
lods
imul
and
push
jo
pop
mov
mov
cmp
cmpsl
or
cmpsl
fcmovnbe
mov
mov
inc
shrb
negl
fwait
dec
sbb
addr16
add
add
aad
out
fucomip
ss
cmp
jecxz
lds
add
cmpsl
lods
lret
mov
and
icebp
push
mov
cmp
movsl
xlat
sti
popl
xchg
lret
or
pop
push
push
rcll
shrl
mov
stos
test
insl
push
jnp
mov
adc
mov
int
xchg
fldenv
or
aas
testl
mov
test
clc
mov
out
mov
jno
js
enter
push
loopne
lret
gs
adc
xchg
js
testl
jl
out
push
test
push
lret
mov
orb
sbb
cmp
pop
inc
mov
out
into
jb
lret
push
add
add
in
cld
fisubrl
sbb
mov
add
shrl
insb
movsb
xor
insl
adc
sub
xor
inc
fsubrs
pushf
loop
test
xchg
ljmp
test
and
push
add
jl
pop
roll
mov
and
aaa
je
aas
sub
jmp
sub
pop
xchg
sbb
das
lret
iret
pop
mov
sbb
stos
leave
fwait
dec
push
orb
pop
dec
cwtl
out
mov
or
in
fidivl
nop
sbb
cltd
mov
fbld
push
mov
and
push
call
pop
sbb
mov
push
sahf
lods
sub
add
add
push
les
in
lahf
sti
ja
rcll
mov
lods
add
add
mov
xor
mov
push
inc
mov
cli
mov
dec
jle
and
inc
mov
xor
push
popf
jo
mov
mov
loop
mov
inc
aam
lea
cmp
rcl
neg
sti
jno
jp
inc
movsl
stos
int
sti
std
push
jno
fs
xchg
fmull
xchg
sarb
fildl
leave
sbb
or
addl
js
jmp
test
fstpl
pop
pusha
xchg
inc
push
pop
inc
inc
bound
and
mov
sub
add
add
jle
call
cli
lcall
add
lods
add
add
jle
outsl
xor
sbb
cs
inc
or
xor
push
nop
xchg
cmp
in
movsb
jo
repz
mov
hlt
push
push
ds
sbb
or
mov
out
fwait
add
es
xchg
ror
lret
movsb
andl
sub
adc
cmpsb
jb
scas
lods
lcall
xor
mov
mov
shll
jne
sbb
push
jg
test
and
push
xchg
es
adc
stos
fsubl
lret
testb
jno
bnd
ds
jg
leave
imul
or
mov
movsb
clc
pop
out
nop
cwtl
add
add
fincstp
shl
frstor
pop
dec
das
in
jns
add
lods
add
add
mov
sub
push
mov
andb
ss
lods
add
sub
fwait
xchg
xor
outsb
jns
xor
stos
fucomip
rcll
inc
insb
cmp
insb
xlat
xchg
push
fnsave
mov
jo
push
xlat
adc
fcmovbe
xor
sahf
mov
test
pop
mov
rcll
cmp
pop
test
inc
push
jne
fdivrp
pop
cmp
pop
fs
xchg
cmc
pop
shl
mov
mov
jo
or
ror
mov
insl
xor
data16
jge
mov
je
syscall
and
adc
and
je
sbb
mov
int
or
jb
push
out
add
outsl
mov
jmp
push
fcmovu
in
inc
jmp
es
add
jo
outsl
clc
cmp
pop
cld
jmp
daa
out
insl
push
sub
icebp
cmpsb
mov
imul
add
add
lret
loope
aad
adc
js
and
ljmp
mov
xor
pushl
cld
dec
in
mov
jbe
daa
fcmovnb
dec
in
outsl
pusha
incb
xchg
subl
dec
inc
push
rorb
sub
scas
jmp
fstpt
dec
insb
or
xor
or
and
fisttpl
pop
repnz
xchg
leave
sahf
push
jmp
mov
add
fistpl
fwait
mov
iret
sub
add
stc
sbb
inc
jecxz
mov
adc
add
mov
push
push
mov
int3
xchg
and
dec
push
aad
jb
in
popa
xor
fistpll
or
negb
test
movsl
outsl
inc
jb
adc
adc
call
int
cld
popa
stc
cmp
inc
fwait
pop
int
jg
sar
xchg
movsl
in
cmp
sub
push
and
xchg
lcall
push
sbb
mov
divb
inc
cs
or
in
or
xchg
ret
nop
fnsave
cmc
insb
xor
aad
out
xchg
add
jnp
adcb
or
jl
add
mov
mov
icebp
and
fldenv
subb
add
add
imul
cltd
cwtl
pusha
ds
xor
out
pop
cwtl
sbb
xchg
jg
pop
jnp
xchg
dec
cmc
sbb
xchg
cmp
ss
inc
jb
push
ja
mov
dec
push
cli
outsl
push
inc
pop
nop
xorb
lods
lock
inc
daa
inc
stos
cmp
sub
jmp
mov
rol
sub
xor
lds
in
faddl
lods
adc
mov
movsb
loopne
scas
lods
rclb
jnp
fdivrl
out
shlb
jno
push
dec
adc
xor
adc
repz
das
cli
fists
dec
es
pop
sub
add
lods
add
add
jno
ljmp
scas
dec
popf
daa
repz
inc
cmc
sub
dec
inc
cmp
add
movsb
mov
out
xchg
mov
fdivrp
loopne
cli
scas
add
inc
shll
xchg
jno
xchg
ret
imul
or
addr16
ljmp
out
js
push
lret
adc
rorb
lds
and
xor
fidivs
sub
add
and
pop
out
mov
or
sarl
cld
movsb
add
aam
addl
and
push
imul
enter
adc
add
add
mov
push
adc
cwtl
out
add
sbb
add
lods
add
add
and
cmc
fdiv
scas
jnp
int3
xchg
insb
sub
movsb
lods
cmp
js
orb
cmp
cmp
xchg
leave
sbb
icebp
in
popf
outsl
add
jbe
and
rcr
cmp
inc
push
push
sub
loope
mov
sub
adc
in
push
jno
dec
andb
jge
aas
push
xchg
loop
sarb
les
mov
cld
in
cmp
xor
in
mov
mov
flds
cmp
jo
jp
adc
std
sbb
rcrb
inc
sahf
mov
sub
das
inc
test
icebp
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
dec
pop
pop
dec
inc
xor
push
push
inc
cmp
pop
ss
pop
add
inc
pop
inc
pop
push
dec
inc
pop
cmp
dec
add
cmp
xor
aaa
inc
inc
pop
xor
pop
push
push
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
add
pop
add
dec
add
xor
pop
add
add
push
add
dec
add
add
inc
add
add
xor
pop
add
xor
dec
add
push
add
add
cmp
push
add
push
add
add
add
add
add
dec
add
push
add
add
add
add
add
dec
add
add
pop
add
add
push
add
add
pop
add
xor
xor
push
add
add
add
add
inc
add
xor
cmp
add
add
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
lcall
add
add
add
add
add
add
add
add
add
cmp
add
add
jb
push
imul
aas
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
