push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
pop
sarb
adc
adc
adc
adc
lea
push
repz
lods
or
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
pop
mov
notl
in
enter
in
mov
rcrl
pop
inc
pusha
mov
imul
mov
gs
mov
shll
ret
add
cs
sbb
xchg
push
test
push
ljmp
mov
cli
mov
or
pop
and
pushf
sbb
mov
sub
jns
data16
arpl
jo
mov
cmpsb
lock
sub
gs
sbb
jecxz
lods
loopne
mov
push
testl
sub
xorl
fs
pop
into
jg
push
sub
insl
hlt
dec
in
sub
cmp
push
imul
mov
mov
xchg
loopne
inc
out
testl
js
rorl
inc
es
andb
xor
popf
xlat
push
inc
ret
push
and
push
fisttpll
mov
inc
or
pusha
cmp
xchg
pushf
jb
inc
sub
das
push
and
je
into
mov
dec
cld
call
loopne
xchg
movsb
mov
arpl
test
or
sub
sbb
shl
popf
jno
pop
jo
lods
lret
vmovddup
push
sub
ds
sbb
cmp
add
and
inc
mov
add
ret
fcomp
sub
push
sub
addr16
cmp
xor
lret
inc
inc
adc
xchg
and
rcl
inc
cli
xchg
outsb
cltd
jg
mov
inc
popf
fisttps
pop
jmp
pop
lds
dec
sti
dec
mov
or
hlt
mov
and
fstpt
dec
pop
and
mov
aas
js
in
movl
mov
sarl
adc
or
ja
call
sbb
nop
inc
loop
mul
leave
xchg
xor
lods
jo
popf
and
cwtl
push
ljmp
loopne
jp
clc
sbb
or
mov
jb
out
jns
push
js
test
pop
je
fcomps
xor
leave
mov
cmp
cmpsl
jo
add
lods
sbb
lahf
jbe
movsl
sub
arpl
dec
std
js
or
jae
push
nop
and
movsb
and
adc
arpl
leave
lret
xchg
nop
mov
ret
jae
mov
stc
mov
inc
cli
out
iret
jl
call
add
jle
adc
negl
mov
pop
or
imul
sarb
mov
sti
push
loop
sub
outsb
jne
daa
hlt
or
clc
test
inc
daa
dec
les
dec
xor
push
adc
jbe
gs
mov
xrelease
sub
sarl
push
clc
cmpsl
mov
pop
mov
mov
or
jle
add
int3
idiv
or
push
popa
ljmp
hlt
cmpl
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
inc
call
adc
adc
adc
lcall
loopne
adc
add
mov
call
push
idivl
inc
leave
stc
mov
mov
ss
or
sbb
pop
notl
daa
cmp
fwait
test
sub
pop
outsl
or
lfs
addr16
xor
insl
mov
cmp
fsubl
sbb
sarl
or
js
and
push
fmuls
push
sub
inc
inc
dec
arpl
lea
sahf
popf
sbb
mov
jecxz
icebp
push
xor
inc
sub
xor
inc
cmpsb
les
in
mov
cwtl
xor
xchg
cmp
or
in
push
decb
sbb
push
pop
pop
fsubrs
add
lock
leave
mov
ret
mov
in
jne
fisubrs
lods
lea
jb
jb
arpl
mov
sbb
sub
fisubs
mov
clc
xor
xchg
add
jbe
test
sub
fisubl
cmc
cmp
je
add
cltd
cmp
push
pushf
jae
adc
mov
cli
aaa
hlt
dec
sub
daa
jnp
mov
insb
in
xchg
inc
sahf
push
add
test
jns
outsl
lock
mov
jmp
pushf
dec
sarb
rolb
pushf
jle
push
lea
cld
std
and
add
icebp
fstpt
stos
xlat
ljmp
xlat
aaa
cmp
xor
fwait
cmp
sbb
test
imul
adc
ret
adc
mov
rol
inc
push
jne
mov
adc
xor
ds
push
mov
cmpsl
adc
stos
aad
pop
imulb
mov
cmpsl
mov
jge
pusha
and
imul
adc
jbe
test
jno
push
sbb
jo
inc
dec
adc
mov
out
push
mov
out
lock
jle
pop
sti
pop
stos
jmp
sub
lret
popf
xor
sbb
inc
movsb
adc
jg
in
enter
adc
push
dec
mov
pop
repnz
adc
out
xor
xor
das
shlb
cwtl
stos
fsubr
test
xchg
pop
pop
mov
test
ret
popf
bound
sub
rorl
test
xchg
bound
outsb
in
repz
movsl
mov
jmp
cmp
or
mov
pusha
in
insb
xor
je
push
adc
outsl
jno
mov
sar
fdivl
mov
sbb
iret
push
leave
popa
add
pop
mov
sub
jge
dec
push
xor
lcall
mov
icebp
loopne
jmp
inc
out
insl
cmp
mov
pop
or
icebp
pop
jns
mov
mov
out
or
mov
push
inc
dec
xchg
push
jmp
out
jo
icebp
or
loope
lcall
arpl
gs
cmp
sub
orl
outsl
or
popa
fcoms
insb
mov
push
scas
inc
sub
sbb
enter
daa
mov
pop
cmp
adcl
mov
adc
xor
pushf
bound
test
ja
mov
inc
mov
mov
addl
xlat
add
orl
insb
sub
mov
cmpl
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
and
fidivrl
int
adc
sub
add
inc
sarb
test
call
cmp
popf
test
fadds
inc
aas
inc
lods
adc
sbb
pop
nop
mov
rolb
popa
push
inc
or
push
mov
lcall
adcl
das
pop
into
sti
jp
add
test
enter
pusha
mov
sbb
fidivl
mov
outsb
sahf
popa
xlat
in
fwait
pop
popf
add
lods
pop
sbb
push
sbb
loop
jmp
cmp
mov
and
add
rcr
and
cmp
out
dec
lods
ja
push
iret
rorl
xchg
loopne
leave
jo
sbb
mov
xlat
arpl
and
addr16
mov
gs
loopne
into
jl
out
cli
sbb
pop
mov
pop
repz
or
pop
pop
mov
cmpsb
add
dec
ljmp
stos
shlb
ss
mov
add
dec
movsl
pusha
out
stos
inc
repz
test
push
adc
inc
in
js
mov
gs
aaa
cmp
jl
jp
push
or
ljmp
lods
dec
cmpsb
adcb
repz
sti
flds
mov
mov
push
and
jbe
out
ss
adc
mov
fiadds
jbe
sbb
loope
into
leave
icebp
jo
testl
insl
push
in
ds
cld
add
mov
in
jge
or
xchg
lods
cmp
nop
lea
aaa
jp
leave
lret
pop
xor
xor
lret
inc
stos
lods
lahf
movsb
insl
inc
notb
push
bound
cmp
dec
cmc
call
mov
arpl
in
add
xchg
mov
repnz
leave
jecxz
or
cmpsl
push
pop
inc
xor
addr16
imul
mov
mov
adc
clc
enter
je
adc
iret
inc
xchg
sub
enter
cltd
lcall
aam
pop
push
lret
loopne
movsb
lock
test
jle
stc
or
xorl
icebp
or
movsl
dec
or
or
lcall
mov
add
pusha
jg
sub
push
in
mov
int
mov
daa
cmpsb
push
mov
add
or
xchg
adc
or
int3
iret
loopne
insl
xchg
cmp
jmp
push
stos
and
add
mov
push
mov
iret
push
jns
jmp
cmp
into
cld
push
pop
call
jbe
mov
scas
ror
pop
jb
fisubs
bnd
jmp
outsb
sbb
push
rorl
test
xchg
mov
jmp
push
rorl
ret
test
adc
test
push
push
ss
inc
pop
sti
inc
add
add
sbb
mov
inc
movups
sub
rcrb
mov
adc
jge
push
loope
and
lret
addr16
loopne
jge
jecxz
pop
push
cmp
mov
push
lea
orb
loope
cwtl
stos
mov
xchg
push
inc
mov
out
sti
sbb
xchg
pop
mov
mov
mov
ljmp
xor
jp
lds
mov
lret
lcall
or
xlat
addr16
scas
sub
push
in
movl
dec
cli
mov
js
arpl
icebp
mov
cs
decl
xchg
out
add
add
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
jp
int3
out
mov
repnz
push
ljmp
les
pop
je
push
pop
inc
pop
mov
test
out
and
pop
in
dec
push
insl
lds
ds
add
or
pop
out
out
scas
xchg
pop
sbb
iret
test
xor
mov
dec
jno
lds
and
and
mov
in
jo
test
cmc
xchg
pop
icebp
in
cs
dec
adc
adc
pop
int3
inc
dec
sbb
dec
push
data16
sbb
test
sbb
inc
loope
jns
stc
frstor
and
inc
nop
adc
clc
mov
or
inc
sbb
jae
sbb
arpl
js
lret
add
insl
dec
cltd
in
outsb
pop
test
jb
inc
adc
adc
mov
int
outsb
ljmp
push
mov
sbb
into
push
pop
fsubl
sub
cmp
jl
jae
mov
data16
sbb
cld
dec
or
pop
test
test
clc
push
mov
mov
or
pop
js
jp
pop
sub
testb
int3
bound
sbb
stos
sahf
cmp
cmp
jge
in
jg
out
pop
mov
push
jl
call
mov
fs
lcall
add
notl
test
xchg
stos
clc
mov
xchg
rcrb
pop
cmc
stc
das
sbb
mov
out
out
adc
push
xor
lret
lcall
fsubr
test
add
sbb
imul
or
repnz
test
mov
les
fmuls
pop
xchg
sub
imul
mov
dec
xlat
js
orb
xchg
dec
sub
mov
lahf
sbb
aam
gs
repz
pop
push
adc
xchg
std
sti
pop
push
mov
jnp
mov
xlat
rcrl
in
add
int
mov
dec
xor
pop
push
or
mov
pop
cmp
and
bnd
cs
rcr
jmp
cs
inc
sub
push
inc
push
push
addr16
adc
push
sbb
sub
mov
xchg
dec
lahf
or
adc
xlat
cwtl
sub
andl
test
loop
fsubs
cmp
xchg
and
sbb
nop
es
rolb
xchg
and
dec
lock
sbb
jbe
sub
pushf
mov
xchg
mov
adc
push
and
mov
lods
mov
je
into
mov
push
pusha
cmp
mov
nop
inc
subl
loopne
inc
cmpsb
fsub
sub
stos
nop
test
sub
mov
jp
xorb
or
addl
xchg
mov
jbe
lret
pop
fcomip
call
fiadds
pop
jo
sub
ss
xor
sbb
adc
arpl
fcompl
ret
pop
cmc
inc
rolb
movsl
add
add
pop
icebp
or
fcompl
mov
adc
and
mov
lds
inc
xchg
and
pushf
push
push
inc
outsb
push
cmp
insb
xchg
insl
rcr
mov
adc
movl
xchg
aas
pop
dec
cmp
test
pusha
add
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
rolb
adc
adc
adc
icebp
pop
loopne
lcall
xlat
mov
xor
icebp
bound
xchg
sbb
jbe
loope
scas
out
xchg
push
adc
shlb
ja
int
cmpl
jp
add
pop
xor
scas
adc
les
jge
sub
imul
cld
cltd
add
jno
inc
inc
cld
into
insb
js
rol
pop
insb
ret
and
inc
test
pop
inc
pop
daa
cmc
jge
mov
xlat
cmpl
add
xchg
std
fisubrs
rorl
call
or
mov
inc
adc
push
mov
xor
pushf
mov
lods
mov
stos
les
pop
in
stc
xchg
mov
ljmp
fcmovb
sti
and
lahf
and
sub
mov
jo
out
mov
addr16
dec
fidivs
outsl
repnz
push
les
push
int
xchg
into
leave
sub
jb
int
pop
mov
aas
notb
stos
jo
xchg
push
sbb
fisttps
mov
aaa
dec
mov
ds
cld
je
push
in
xor
or
ss
add
jl
dec
testl
and
aad
popa
sbb
pop
sbb
adc
sub
fs
xchg
loopne
inc
call
adc
mov
fmul
pop
in
xchg
dec
xor
ljmp
inc
lret
es
jbe
xchg
xor
subl
jae
cmpsb
sbb
xchg
test
ret
jno
pop
hlt
xchg
lret
dec
cmc
dec
add
lcall
pop
mov
cld
fisttps
xor
lret
jmp
dec
shrb
rcrl
call
notb
mov
xlat
add
mov
aam
fcoml
int
jnp
mov
cmp
and
imul
imul
push
subb
add
xor
leave
jmp
sahf
push
daa
push
mov
xchg
cwtl
sbb
dec
mov
dec
int3
test
and
or
pop
jg
push
lds
dec
or
sub
les
cmp
xchg
adc
scas
adc
sub
adc
push
int
daa
inc
mov
xor
scas
mov
fwait
int
adc
xchg
shl
lods
add
inc
push
ds
pop
pop
sbb
xchg
push
lcall
add
cmp
xchg
inc
jmp
cmp
mov
lcall
dec
or
ss
ds
data16
out
ljmp
mov
add
gs
pop
movsl
jecxz
shrl
out
inc
js
jmp
int3
mov
in
xchg
push
data16
ret
push
adc
and
cli
cs
fimuls
jno
nop
pusha
mov
mov
add
dec
push
dec
sub
fwait
jl
pop
por
pushf
push
jmp
mov
mov
test
sbb
xchg
and
sti
stos
in
loopne
es
pop
sbb
cli
mov
add
sub
push
cli
cmpsb
mov
mov
insb
xchg
jecxz
inc
pop
pop
cmp
xchg
and
pop
mov
add
aaa
into
sahf
lds
mov
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
arpl
jle
out
adc
int
adc
sbb
insb
sti
daa
sbb
lcall
clc
iret
mov
lret
dec
loope
xchg
add
les
es
subl
dec
gs
stos
dec
orb
sub
xor
lret
cli
in
mov
dec
fimull
or
rcll
fistpll
out
scas
imul
dec
ds
push
push
in
mov
negb
dec
mov
sbb
loopne
icebp
ss
push
and
dec
aaa
sbb
push
or
std
ret
or
xor
xor
jp
ficoml
jl
xor
jg
add
push
add
repz
push
jb
rcll
les
out
loopne
add
pop
fcmove
fwait
ret
mov
gs
mov
addb
mov
orb
sbb
or
out
pop
adc
cli
mov
cs
xchg
cmpb
stc
dec
xchg
in
lcall
mov
lds
leave
pop
out
imul
cmp
imul
cmpsl
out
pop
stc
push
lret
and
jg
pop
andb
outsl
adc
xor
and
push
xor
mov
aam
into
jbe
pop
mov
shlb
dec
or
pusha
imul
and
lods
jg
in
mov
xchg
xchg
pusha
mov
fnsave
pop
les
js
push
fsubrl
mov
jmp
jo
loopne
mov
push
push
cwtl
mov
std
movl
jbe
movsl
add
sub
shll
sbb
iret
and
hlt
popa
jno
push
cld
push
xchg
mov
shll
mov
push
inc
pop
cmc
stc
or
cmp
add
cmpsl
xor
dec
pop
fdivrl
sbb
or
sub
out
insb
movsl
into
fsubrp
lods
popf
gs
mov
mov
popf
int3
js
stos
aas
leave
jns
cltd
cmpsb
mov
outsb
xor
adc
sahf
je
push
outsl
pop
dec
inc
stos
bound
das
xor
xchg
mov
push
fnstcw
pop
and
mov
in
xor
inc
dec
inc
loopne
pop
lea
movsl
sbb
ja
or
xchg
loopne
push
and
add
or
push
in
js
ds
fwait
xchg
mov
imul
ds
popf
jmp
arpl
flds
add
xchg
rcrl
ds
add
repnz
mov
inc
les
adc
int3
outsb
fwait
mov
ret
lret
cmpsl
jb
sub
repnz
dec
lock
int3
sbb
push
ljmp
add
scas
mov
je
test
sub
lods
cmp
push
jbe
cmp
xchg
sbbl
ja
mov
pop
aam
mov
mov
cmpsl
call
lcall
ljmp
mov
lahf
int3
in
loope
aad
call
jae
add
pushf
lahf
fisttpll
ja
sbbl
sbb
adc
sbb
sbb
inc
sbbb
mov
lock
iret
cmp
dec
dec
lcall
not
shr
in
aad
sub
dec
cmp
rorb
aaa
xchg
add
mov
push
sbb
jge
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
int
xchg
js
in
adc
int
adc
add
sub
push
mov
push
inc
pop
movsb
pushf
cmp
cld
scas
rorl
outsb
cmc
dec
lds
out
sbb
idiv
mul
dec
insl
scas
sahf
jnp
leave
or
pop
rolb
cltd
lods
push
push
add
push
les
xchg
xchg
test
iret
push
jmp
addr16
add
xor
leave
push
mov
or
adc
push
enter
xorb
ja
data16
push
inc
pop
popa
js
push
out
add
push
mov
mov
pop
outsl
adc
adc
or
inc
dec
stos
mov
lcall
sub
push
mov
ret
inc
add
fisubrl
fucom
movsl
pop
xor
shr
lods
je
adc
daa
sbbl
dec
jl
add
loope
enter
shl
fnstsw
mov
inc
movb
incl
rcrb
push
cmpsb
lods
xlat
into
loopne
leave
std
inc
mov
push
ds
enter
aad
push
insl
adc
xor
sbb
sub
jecxz
cmp
or
sbb
and
push
sbb
jecxz
fldl2e
adc
fdivrl
das
mov
xor
inc
push
ja
mov
insb
insb
add
add
in
sub
or
jg
movsb
jl
ss
cmp
mov
div
jle
sub
paddsb
adc
popf
and
clc
sub
jl
pop
fdivl
xor
ret
lds
shl
jle
call
gs
sub
fs
jbe
jle
movsb
loope
cmp
iret
and
and
jns
mov
cld
and
dec
jmp
lods
and
inc
mov
add
jne
setle
dec
pop
push
push
lcall
test
rclb
fldenv
ss
mov
push
mov
dec
stc
mov
jns
mov
sbb
pop
jo
into
addr16
fidivl
orb
andb
fildl
add
mov
enter
cmpsb
and
andb
push
lods
add
aad
negb
aaa
gs
in
xchg
scas
adc
dec
xor
ror
cmp
or
jg
sub
jb
aam
adc
xchg
inc
jge
pusha
xlat
mov
jg
push
jns
sbb
add
sbbb
mov
in
push
dec
mov
mov
pop
xor
xor
mov
insb
loope
push
inc
ficoml
mov
js
pop
push
iret
sarl
jle
fimuls
xchg
xchg
sbb
popa
in
dec
sarb
lret
dec
cwtl
mov
loope
out
pop
pusha
lretw
xchg
fwait
sub
insl
pop
ja
and
and
je
jbe
int3
mov
jmp
jmp
or
add
mov
lahf
cmp
mov
or
inc
fadd
fidivl
sub
out
aaa
das
popf
cmp
stos
mov
push
jne
or
mov
or
stos
fisttpll
mov
arpl
test
and
into
pop
xor
xchg
mov
sahf
fwait
addb
jb
inc
mov
sar
dec
push
mov
sub
in
sahf
sub
or
into
js
push
scas
jae
je
pop
fwait
xchg
cmpsl
rcrl
mov
mov
add
dec
loope
mov
inc
arpl
call
mov
inc
in
inc
lock
imul
inc
mov
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
fnstcw
mov
adc
adc
adc
xchg
xor
jno
sbb
push
into
iret
or
sahf
call
arpl
loope
and
movsb
pop
movsl
scas
xor
das
adc
shrl
ja
pop
jmp
sbb
inc
jecxz
mov
adc
scas
jb
mull
push
fs
js
or
lcall
xchg
cmp
cmpsl
add
push
add
js
xchg
fstl
adc
mov
sub
jne
xchg
dec
and
dec
aaa
sub
lods
jae
jge
sub
cli
stos
push
and
mov
outsb
ss
sub
lret
sub
lret
mov
or
daa
cmpsl
nop
leave
cmc
xor
jno
sub
dec
outsl
pop
mov
das
aaa
inc
push
dec
clc
inc
cmp
pop
popa
js
popa
adc
in
mov
outsb
add
jmp
jnp
loop
arpl
mov
jge
xor
insb
dec
pop
push
pusha
jae
sub
jne
and
repnz
lods
xor
sub
dec
adc
push
rcrl
mov
cmp
dec
out
mov
xlat
cmp
fnsave
pop
push
mov
clc
lea
scas
pop
push
stos
mov
sub
mull
xor
mulb
mov
jno
jge
hlt
cli
push
xor
gs
rorl
inc
inc
mov
sbb
outsl
fcmovu
push
add
sbbl
xchg
and
enter
jmp
and
mov
int3
popf
pop
jl
popa
sub
xchg
out
test
les
addr16
lods
outsb
rorb
daa
or
aad
push
pusha
add
mov
into
and
cld
cltd
xor
pop
testl
in
inc
jecxz
jecxz
clc
test
in
repz
push
fs
fisttpll
sub
popf
adc
xchg
jmp
cmp
cs
jno
push
pushl
or
stos
out
outsl
or
push
sbb
loop
neg
inc
dec
pop
dec
mov
push
test
ljmp
inc
fistpl
int
mov
shl
or
xor
outsb
sub
xor
pop
mov
xchg
and
xor
xchg
xchg
push
repnz
jg
jnp
jb
pop
icebp
jno
push
lds
movsl
jp
pop
mov
sahf
jns
jmp
sub
push
insb
in
mov
pop
push
outsl
in
jg
pushl
shll
sub
jmp
nop
sub
xchg
lcall
push
xchg
dec
inc
rclb
sbb
and
js
cmp
and
xchg
clc
shrb
mov
dec
lods
daa
mov
repz
mov
cltd
xor
movsl
adc
cltd
es
leave
in
mov
popa
dec
dec
cs
jmp
fidivl
loopne
push
ret
addr16
sahf
sub
xlat
jbe
mov
adcl
dec
lock
shll
xchg
outsl
sub
xor
popf
es
cmp
in
sbb
add
insl
mov
push
mov
ja
mov
xchg
jb
mov
dec
lds
sub
jg
les
repz
addr16
mov
add
mov
dec
sarl
push
and
mov
mov
mov
push
aam
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
ds
jle
ficoms
adc
adc
adc
fiaddl
cmp
es
mov
or
addr16
lods
popl
mov
mov
fildl
push
cmp
dec
test
push
pusha
repnz
fs
mov
xlat
push
cmp
xor
pop
dec
sarb
sbb
inc
in
xor
aad
inc
loop
mov
sbb
sbb
pusha
pop
push
pop
xor
add
or
jg
mov
xor
daa
xchg
dec
add
in
adc
sahf
lods
sti
inc
mov
cmp
jp
xor
cmp
popfw
mov
mov
ljmp
scas
cltd
fisttpl
pop
aas
mov
inc
xor
test
pop
test
pop
fstps
cwtl
movsl
test
mov
mov
scas
mov
pop
addr16
in
sahf
daa
cmpl
arpl
push
sbb
xchg
ljmp
aad
cmc
mov
lahf
enter
push
sub
add
call
je
adc
jg
inc
cmp
icebp
mov
mov
enter
or
addr16
mov
lds
aad
mov
insl
repnz
xchg
or
fdivrl
add
das
int3
add
je
ss
test
fmull
mov
sub
repz
ret
cltd
mov
or
out
into
inc
xlat
push
jo
sbb
xor
sbb
pop
test
pushf
pop
out
stos
dec
aas
push
orb
pusha
mov
icebp
cmp
mov
xrelease
adc
xor
xchg
dec
das
stos
movsb
xchg
sti
mov
and
aad
mov
jns
adc
mov
into
scas
cmpsl
insl
test
ljmp
cltd
xor
rorl
test
sub
test
xchg
sbbb
inc
es
dec
sub
subl
mov
in
xchg
sbb
cmp
cmp
fstpl
mov
cwtl
cltd
scas
loop
ja,pt
imul
mov
sbb
mov
xchg
dec
and
mov
insb
cmpsb
mov
or
cmp
enter
or
sub
push
ret
cltd
ret
in
pop
outsl
cmpsl
sahf
leave
sub
cltd
int
arpl
or
stos
sbb
aad
jo
es
or
adc
jns
xchg
cmp
mov
sub
push
jns
repz
mov
pop
or
into
fstp
aam
movsb
bnd
adc
add
jo,pn
mov
xor
pop
scas
push
into
jge
ja
adc
sbb
stos
cmp
sahf
push
push
mov
mov
xor
sub
sbb
cmp
pop
mov
jne
enter
jb
xor
xchg
cmpsl
jecxz
jmp
pushf
or
mov
sbb
push
xchg
jb
xchg
clc
mov
popa
xchg
ljmp
pop
xor
push
pop
orb
loopne
inc
and
sti
mov
out
movsl
ljmp
aam
dec
in
or
xchg
in
inc
popf
scas
dec
std
cmp
call
aas
add
in
jle
sti
leave
popa
divl
jmp
es
jge
xorl
nop
jno
scas
leave
lret
fisubl
cmpsb
sbb
sbb
inc
fwait
rcll
imul
mov
jmp
mov
shl
jmp
fmuls
sbb
fs
jge
adc
int
adc
rcrl
sbb
cld
sub
test
xchg
in
pop
loop
sub
lods
test
and
and
pusha
and
shl
pushf
aam
jnp
mov
repz
push
lcall
fs
jecxz
roll
fiaddl
mov
std
mov
repz
mov
add
adc
aam
rcrl
sub
ret
and
add
stos
and
ficoml
xchg
mov
out
imul
test
inc
into
inc
loope
jge
mov
out
lret
je
jl
loop
mov
sbb
sbb
mov
pop
mov
push
dec
add
aam
add
addl
mov
mov
arpl
sub
loope,pt
mov
ret
dec
iret
push
inc
mov
idivb
stc
ds
inc
push
sub
mov
movsb
loopne
jge
jmp
cmp
test
mov
cs
xchg
fisttps
repnz
enter
leave
sahf
mov
lods
push
lret
jno
imul
push
xor
adc
loop
xor
daa
mov
cmp
aad
or
mov
mov
repz
sub
add
mov
cmc
rcll
sbb
js
push
xchg
sub
scas
sahf
jo
pop
repz
fisubs
shlb
stc
lods
ret
mov
mov
fsts
test
xor
xor
jo
add
dec
jmp
jae
outsb
pop
xchg
mov
in
xchg
aaa
jle
test
rcrb
es
xchg
push
insl
ret
mov
mov
hlt
bound
div
mov
dec
sub
mov
loope
sti
push
and
dec
jno
push
pop
fcoms
and
push
xor
scas
mov
cmpsl
adc
xchg
mov
hlt
and
adc
imul
jp
pop
jmp
xorb
pop
push
lea
lds
fstpl
data16
fnsave
lret
outsl
lods
sbb
pusha
pop
add
mov
adc
movsl
or
lahf
mov
inc
test
lods
cmp
andb
mov
xchg
adc
add
and
push
jmp
mov
push
or
loope
pop
inc
scas
ja
sbb
mov
dec
out
cmp
push
jmp
add
pop
cmp
loop
in
jbe
test
mov
leave
xor
pop
std
dec
out
adc
jb
inc
and
jb
rorl
add
push
sub
and
or
or
mov
inc
rorb
lods
cmpsl
stc
pop
cs
push
and
cmpl
or
xor
mov
fmull
sbb
faddl
in
leave
lods
push
jo
rorb
adc
push
cmp
fistpl
mov
pop
xchg
cwtl
adc
push
aad
sub
mov
mov
clc
call
daa
aam
xchg
cmpsb
xchg
fsts
xchg
outsb
sub
add
jo
dec
lret
dec
mov
cmpsb
jge
push
push
mov
pop
sahf
sub
mov
mov
push
xorb
sahf
adc
adc
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
in
mov
xor
adc
int
adc
pop
aam
loop
mov
imul
pop
pop
stos
lret
popa
pusha
movsb
inc
add
das
mov
and
sub
stos
adcb
and
fucomi
jb
jecxz
jecxz
cs
xor
xchg
sub
and
mov
clc
mov
lret
xchg
cmpsb
nop
jno
imul
imul
mov
dec
sbb
and
add
fwait
cmpl
pop
rcr
or
dec
nop
pop
lahf
xchg
pop
in
pop
dec
xchg
or
cmp
mov
jb
xor
outsb
mov
in
sti
lret
cld
mov
and
fiadds
lods
jmp
call
dec
fwait
mov
mov
es
sub
jmp
insl
jl
mov
int
and
jbe
mov
xlat
cmc
enter
cwtl
pop
cmp
js
ficomps
cmp
aaa
leave
and
push
add
mov
jp
inc
popf
ja
insl
push
pop
mov
pop
flds
jne
mov
je
cwtl
test
pusha
xor
mov
test
inc
div
pop
fstpt
repnz
lret
mov
xor
movsl
push
popf
popa
test
adc
in
cs
test
outsb
pop
and
sti
lea
dec
push
les
add
daa
cmp
mov
mov
sub
jle
push
aam
cli
push
mov
shl
jbe
inc
push
xchg
test
or
into
dec
clc
pop
test
jb
std
and
rolb
jp
imul
xor
fstpl
lret
xor
lret
pop
flds
mov
loop
pop
xchg
cwtl
scas
cmpsl
repnz
jl
or
pop
adc
jo
aas
stos
lret
sahf
sbb
adc
mov
or
fsubs
sbb
test
mov
pop
cmpsl
iret
push
xchg
dec
fstl
addr16
lret
xor
out
test
xchg
out
xchg
pop
jecxz
das
stos
dec
sar
leave
sub
xor
xor
mov
fcom
mov
dec
es
sub
int
ljmp
clc
cmp
fcomps
out
jmp
pop
das
rclb
mov
pop
jbe
movsb
pop
mov
or
dec
pop
adc
jo
xor
xchg
outsb
sub
mov
cmp
inc
add
inc
adc
andl
xchg
ror
mov
xchg
popf
or
mov
mov
jns
xchg
mov
loope
jb
jns
xchg
repnz
mov
cmp
mov
sbb
xor
cmp
inc
dec
nop
sbb
lcall
in
mov
fidivs
dec
sub
loopne
std
in
mov
cs
std
in
mov
cmpsb
lods
in
cwtl
mov
int3
or
or
out
push
bound
push
jb
inc
dec
scas
cmovno
cli
sbb
lock
lods
fisubrs
sbb
js
pop
roll
ret
pop
and
adc
out
add
dec
int3
movsl
test
xor
inc
mov
out
fisttpl
and
pusha
xchg
push
mov
arpl
cmp
popa
lret
push
ds
and
daa
repnz
stos
sub
test
in
mov
scas
or
fisttps
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
and
xor
ljmp
adc
lea
xchg
inc
mov
sub
pop
repnz
pusha
ja
and
js
adc
mov
imul
mov
jg
push
pop
rol
pushf
adc
push
add
mov
mov
or
int
or
and
push
lcall
jecxz
lock
popa
psraw
jnp
cmp
popl
jne
aad
mov
mov
popa
insl
inc
loope
adc
hlt
inc
xchg
ss
popa
push
adc
in
test
sbb
dec
repnz
xlat
mov
sbb
ret
hlt
cmp
roll
push
push
imul
cmp
aaa
and
and
and
jne
es
es
pop
ja
xlat
daa
add
add
mov
in
testb
xlat
mov
jmp
xlat
push
mov
gs
xchg
test
push
test
mov
mov
popf
negb
lea
pop
jne
mov
mov
xchg
push
int
xor
push
jmp
sbb
lds
mov
das
mov
pop
test
and
sbb
or
xlat
int3
sbb
add
dec
jle
dec
into
icebp
xor
mov
add
push
mov
adc
add
jmp
mov
mov
scas
aaa
jmp
inc
dec
mov
orb
orb
or
adc
arpl
imul
std
jle
or
sarl
sub
push
aas
ficoms
test
or
test
lcall
pop
jmp
add
stc
mov
xchg
push
out
jl
in
add
dec
cs
pop
xchg
or
cmpl
outsl
xorb
cwtl
test
inc
rolb
cmpsl
jb
jb
fwait
jnp
les
stos
insb
inc
cmp
dec
sarl
push
leave
mov
cmp
jae
repnz
cmp
ljmp
cli
mov
cmp
cld
pop
int
mov
mov
mov
xchg
mov
cmp
ja
test
push
xor
adc
jecxz
xchg
jmp
lods
das
cs
mov
xchg
and
cwtl
mov
add
outsb
mov
or
shll
adc
cltd
dec
repnz
xorb
pushf
sbb
jg
mov
push
pop
inc
sbb
test
mov
je
dec
jnp
pop
inc
scas
pop
pop
cld
ja
arpl
or
mov
add
push
cmp
aad
lret
adc
push
xlat
loope
mov
popf
iret
js
xor
xchg
push
inc
jns
negl
mov
xchg
jmp
or
and
xor
push
adc
iret
aaa
lods
jns
mov
xlat
ja
fbld
mov
std
movsb
add
sbb
inc
add
inc
xchg
ljmp
jns
test
pushf
pop
mov
jge
and
sbb
in
and
add
inc
and
cli
mov
xchg
mov
movsb
sbb
and
pop
pop
sub
fwait
push
xchg
in
sub
add
jno
fcompl
repnz
jns
push
icebp
or
push
pop
mov
jmp
aam
cmp
cmp
cmp
mov
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
leave
jle
jle
ret
int
adc
adc
shr
mov
adc
mov
mov
gs
mov
repz
push
inc
fwait
push
pop
push
sahf
xchg
sbb
add
fs
mov
adc
shrl
push
push
and
loope
push
dec
cmp
enter
and
insl
mov
gs
jge
cwtl
pushf
js
add
mov
push
xchg
mov
dec
pop
mov
clc
lods
sahf
push
fidivrs
dec
sahf
add
loope
jb
cmpsb
scas
inc
sbb
and
js
les
scas
mov
xor
jg
int3
in
pusha
outsb
outsb
movsl
test
shlb
out
pop
pop
jae
lcall
xchg
test
inc
mov
push
js
gs
cmp
fisttpl
lock
mov
jo
call
into
sub
mov
fnstenv
or
fwait
sub
or
push
dec
arpl
xchg
outsl
xor
cmp
push
in
push
dec
mov
add
in
jg
mov
ficoms
sub
mov
ja
inc
jne
lcall
into
mov
jp
cmpsl
add
xchg
jno
pop
cli
push
shlb
std
xchg
movsb
and
aam
clts
mov
call
sub
jl
mov
ret
cwtl
rcl
pop
icebp
aad
mov
fwait
data16
fs
and
mov
cmpl
xor
sbb
cmpsl
xchg
sub
sbb
inc
lods
andb
imul
mov
test
and
adc
ja
cwtl
jle
sahf
jno
add
pushf
enter
mov
adc
test
dec
in
pushf
mov
mov
inc
or
xlat
mov
mov
jg
lock
mov
add
shrl
int
frndint
sbb
xchg
jg
cmpsl
fsubrl
add
rcll
adc
lods
inc
cmp
push
mov
pop
out
dec
test
rcrl
xchg
adc
mov
dec
int3
and
sub
pop
xor
push
addr16
push
stc
int3
pop
adc
shrl
scas
push
gs
jo
sbb
or
shll
in
sbb
dec
arpl
and
inc
cmp
pop
add
pushf
adc
pusha
ficoms
call
loopne
fmulp
dec
pusha
mov
adc
ficompl
mov
dec
gs
xorb
push
push
insb
out
mov
push
in
cltd
inc
jb
jmp
sub
mov
loopne
lret
add
push
sub
cltd
loop
mov
jg
fwait
stos
xor
mov
movsb
mov
out
jp
lcall
or
sbb
mov
sti
xlat
fdivs
repnz
fsubrl
inc
in
movsl
pop
mov
jb
outsl
int3
roll
sbb
scas
xchg
adc
pop
inc
pop
adc
xor
sti
jecxz
push
or
jo
cmpl
jge
sti
fwait
insb
cmp
movsl
mov
bound
call
sub
lea
mov
cmp
xchg
xchg
push
adc
test
mov
sar
imull
fstl
dec
pop
outsb
xlat
sbb
pop
cmc
mov
aaa
out
adc
aam
pop
dec
hlt
outsb
mov
sbb
inc
inc
sbb
repnz
outsb
hlt
lock
shlb
rorb
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
sub
mov
adc
test
scas
cmp
jae
lock
adc
xchg
aam
shll
loopne
inc
pop
mov
cmpsl
sub
shld
adc
jp
mov
xor
mov
mov
push
clc
mov
push
dec
sub
repnz
inc
mov
inc
mulb
stos
scas
mov
aam
sti
jge
scas
out
or
fdivrl
fidivrl
loop
loopne
jg
mov
mov
jg
xchg
inc
inc
in
xor
mov
push
into
lahf
mov
les
fs
fbstp
clc
fnstcw
negb
mov
sub
icebp
outsb
stos
clc
dec
add
dec
aam
sub
xor
adc
xor
mov
dec
add
push
lock
cmpsb
add
jno
mov
out
inc
sub
adc
adc
mov
mov
repz
mov
fiaddl
fdivrs
scas
push
adc
stos
inc
outsb
fwait
jno
xorl
mov
aas
scas
imul
divb
leave
ror
femms
fstps
in
and
out
jge
fldcw
testl
mov
dec
jecxz
lcall
ds
push
lds
test
fs
cli
xchg
dec
cs
xor
mov
shr
mulb
loopne
sti
xor
dec
or
filds
aaa
push
dec
xchg
bnd
push
in
cmpsb
js
popa
or
sub
mov
ljmp
pop
jnp
flds
mov
mov
xchg
inc
mov
push
push
adc
mov
cmpsb
repnz
out
or
fs
jmp
cmp
inc
cmpsb
add
mov
aaa
cmp
inc
push
ret
imul
and
imul
push
lcall
mov
rcl
mov
and
sbb
imul
push
dec
jbe
mov
jmp
movsb
mov
fldcw
xchg
popa
dec
jp
lods
ja
scas
mov
mov
jp
addr16
sub
lea
pop
ret
jmp
aaa
das
popa
and
sbb
cli
adc
lods
divb
push
imul
in
jb
into
mov
mov
mov
adc
push
jbe
ret
movsb
das
sub
xchg
push
int
sbb
and
lds
sub
aas
jae
pop
pop
addr16
gs
jno
jo
mov
shrb
push
mov
aad
out
dec
rorb
or
dec
lcall
je
jno
pop
pop
jle
subb
add
nop
ret
jmp
inc
int
in
icebp
add
bound
jbe
in
std
xchg
data16
or
cmp
adc
jmp
or
cmp
pop
shrb
insl
iret
rcl
dec
xchg
dec
add
neg
cs
push
rdmsr
bound
add
movsl
shrl
mov
int3
cmpb
xchg
jg
lea
in
cmp
outsl
jbe
rorl
sti
mov
lret
pop
adc
aam
xchg
shrl
orl
cs
or
test
sbb
aaa
iret
in
sbbb
test
mov
mov
fdivrp
cmp
dec
sarl
xlat
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
fs
lods
pop
mov
adc
adc
adc
and
xor
sub
pop
jp
and
sub
cmp
rolb
test
stos
std
and
xor
jmp
mov
push
out
sub
fsubl
or
cld
dec
enter
xchg
ja
dec
insb
and
dec
mov
sbb
stos
mulb
out
pop
adc
cmpb
mov
int
repz
outsl
xchg
xor
jle
int
mov
xor
and
insb
push
sbb
leave
out
sbb
cmp
arpl
sbb
aaa
cmp
lahf
mov
cmp
jns
jl
and
sub
sbb
dec
outsb
pop
imull
les
mov
popf
ss
cmp
mov
sub
xchg
mov
and
jp
and
or
insb
fstpl
lcall
mov
pop
xor
stc
mov
cmp
aad
mull
jmp
cli
loopne
in
sub
adc
dec
ja
jecxz
or
lahf
stos
jecxz
andb
xor
int
adc
bound
lods
mov
xchg
jge
scas
arpl
out
jecxz
push
cmp
cs
dec
pop
mov
sahf
mov
mov
pop
or
push
dec
mov
subl
rclb
nop
sahf
ror
fisttpl
inc
mov
adc
pop
clc
stc
mov
enter
sub
insl
mov
adc
lcall
nop
out
xchg
clc
fprem1
fsubrs
pop
hlt
push
dec
jmp
sarb
xor
sbbb
mov
add
xor
imul
lahf
inc
icebp
xchg
pop
ficompl
sbb
lock
pusha
pop
dec
cmp
sbb
test
dec
xchg
mov
xor
xchg
push
pop
arpl
stos
jne
xor
div
push
outsl
pop
je
xchg
shlb
xor
fsts
call
pushf
xchg
push
jmp
cmp
or
jne
mov
push
daa
ret
pop
sub
sbbl
lcall
aad
xor
sbbb
and
lret
push
aad
jle
ss
mov
pop
insl
and
lret
mov
outsl
scas
loope
fwait
mov
jge
sbb
out
ret
mov
loopne
jp
in
gs
pop
int
jle
shlb
call
lcall
sar
push
sub
test
sbb
push
out
stc
push
fistl
push
mov
add
popa
sbb
inc
lea
and
xor
sbb
loope
or
cmpsb
sbb
mov
mov
pop
mov
cld
popa
ds
pop
inc
in
outsb
bound
pop
aad
inc
addb
out
aam
aas
bound
sbb
or
in
mov
or
cmc
popf
jae
jae
mov
jne
xor
mov
sbb
or
daa
pop
popf
pop
nop
xchg
push
sarl
or
testb
sub
cld
imul
int3
jno
sbb
mov
test
push
ss
lahf
into
pop
insb
stc
pop
lahf
cmpsb
push
add
pop
popf
dec
fcmovne
xchg
mov
lahf
mov
mov
stos
push
fstpt
mov
sbb
fmulp
lods
scas
pop
dec
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
mov
mov
int
adc
mov
push
cld
mov
clc
mov
push
mov
mov
test
push
pushf
or
mov
cmp
add
xchg
dec
add
adc
in
loop
icebp
orl
mov
xor
mov
or
jmp
sub
shlb
jg
sbb
test
cli
sub
jl
xchg
ret
mov
mov
mov
fwait
sub
in
movl
sub
inc
mov
loopne
xor
mov
cmp
cmp
out
xchg
xor
fldenv
mov
rolb
ss
int
pop
add
leave
mov
mov
fdivr
pop
inc
dec
cmp
ficoms
push
mov
push
mov
inc
adc
or
lea
rolb
gs
aaa
lds
push
das
adc
or
xor
int
sub
xor
cmp
xchg
leave
fiaddl
fsubrl
push
sbb
sahf
jnp
das
movsb
lods
mov
push
add
dec
aas
push
push
lods
nop
sahf
mov
xor
or
push
iret
inc
repz
pop
sub
mov
out
in
jmp
pop
jbe
test
jmp
inc
push
jbe
shl
popa
push
rcll
xchg
push
and
and
add
roll
imul
insb
sbb
pop
jge
pop
rclb
inc
add
jg
jbe
rcrb
lods
fs
out
insl
and
xor
leave
in
inc
movsb
push
mov
les
mov
push
xor
sub
inc
cmp
stos
jl
lret
push
sub
pushf
mov
pop
cwtl
call
js
fisttpll
and
or
sbb
add
and
das
mov
mov
leave
test
jmp
sbb
jns
popa
nop
inc
es
cmp
sbb
test
cmpsl
pop
cmp
push
outsl
xchg
sub
das
inc
mov
ret
sub
add
xor
fidivs
fdivrp
fstpl
xchg
adc
xor
pop
orb
jecxz
and
std
mov
inc
loop
aaa
in
pop
mov
cmp
sti
push
pop
mov
arpl
test
adc
enter
push
lahf
cmc
xchg
jle
rorl
sub
sbb
mov
fwait
push
andl
push
nop
dec
neg
out
xor
and
mov
jp
sub
jne
rcrl
add
ret
andb
repnz
aam
outsb
int
sub
icebp
divb
pop
stos
cmp
pop
sub
rolb
mov
push
repnz
call
sbb
sub
sbb
fwait
mov
cmpsb
pop
repnz
jb
mov
jno
inc
aaa
mov
xorb
mov
aad
shl
fidivrl
stc
inc
jbe
adc
out
push
cld
push
out
push
xor
push
test
and
mov
mov
cmc
fcoml
or
das
pop
pop
inc
in
jnp
xchg
inc
xor
scas
sub
jmp
add
imul
scas
cld
push
sbb
outsl
divl
xchg
mov
push
pop
insl
jnp
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
into
xchg
jle
mov
adc
add
out
cmp
js
scas
addr16
jnp
pop
dec
addl
sub
test
push
sbb
out
dec
push
sub
in
ljmp
repz
xchg
cmc
lds
adc
popa
sub
xchg
sub
and
push
inc
jno
inc
cmp
pinsrw
in
cmp
inc
lret
mov
je
dec
mov
subl
xchg
pop
sbb
lods
push
loopne
pop
mov
jp
dec
les
call
inc
mov
add
aaa
mov
dec
cmpsb
aad
xor
jl
jnp
gs
mov
ja
arpl
inc
je
fcmovbe
push
jl
mov
push
xchg
ds
test
into
testl
out
test
hlt
cmp
outsl
dec
inc
or
jnp
sub
xchg
xchg
fldl
int
psubd
sub
mov
sahf
and
stc
cmp
pop
xchg
call
mov
stos
pushf
out
in
insl
cmp
add
ret
std
jae
pushf
add
and
jns
pop
rclb
lahf
dec
sbb
repz
xchg
sub
mov
aas
cmc
push
mov
add
ds
xor
fldcw
fildl
arpl
push
mov
pop
xchg
push
push
pop
mov
repnz
add
into
outsb
mov
std
or
inc
repz
out
cmp
xchg
or
xor
and
or
and
mov
pop
insl
pusha
cltd
cs
or
andps
mov
dec
and
mov
cmp
xchg
and
adc
jmp
addr16
sbb
jbe
adc
mov
js
xchg
movsl
jo
mov
mov
lret
or
call
es
pushf
dec
xchg
mov
stos
ds
das
adcb
xchg
dec
sbbl
jb
popf
pop
cmp
imul
test
pop
fidivs
add
aad
sub
les
cmp
mov
push
inc
fwait
push
push
xchg
mov
je
xor
or
mov
hlt
fsubs
sahf
ja
movsb
push
aaa
sub
iret
pusha
shlb
mov
stos
pop
add
add
push
sbb
subb
cmp
leave
adc
lcall
and
std
push
sti
jnp
mov
loope
pop
rcr
jge
push
mov
adc
mov
cmp
int
fstpt
mov
leave
push
mov
pop
mov
sub
loope
push
adc
rcr
es
mov
jecxz
scas
cld
jg
into
push
mov
gs
fadd
mov
lahf
sbb
aas
loope
mov
sub
out
cmc
shrl
mov
jg
call
mov
cmp
out
push
divb
adc
mov
das
mov
push
shl
push
jge
shll
ds
mov
mov
inc
js
idivb
xor
cmp
mov
add
popa
addb
aam
add
outsl
mov
test
js
fsub
aam
into
mov
or
inc
pop
sbb
xchg
push
int3
push
jmp
movsl
and
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
lods
sahf
lods
sub
adc
adc
jle
xor
xor
xchg
sarb
cmp
clc
cwtl
rcrl
mov
cmpsl
push
fnstsw
pop
out
jge
lahf
sahf
sbb
pop
dec
push
sarb
push
push
mov
mov
lret
rcrb
std
mov
enter
insl
loop
jl
mov
mov
xchg
or
int
mov
fwait
pop
mov
popa
lret
aaa
sar
pop
int
push
push
rorb
and
sub
mov
cmp
jge
cld
sub
xchg
lret
push
pop
pusha
cmp
jecxz
cmpb
pop
dec
sub
pop
mov
cmp
aas
into
jle
scas
sbb
adc
adc
out
mov
or
cmp
mov
add
clc
idivl
in
imul
cmc
negb
ds
add
pop
movsl
rorl
mov
pop
inc
das
cltd
rorl
jecxz
mov
inc
adc
pop
dec
and
bound
mov
jge
push
xchg
push
lock
jno
sbb
inc
and
test
cld
push
add
mov
sub
push
mov
ret
and
and
psadbw
cld
stos
scas
xor
push
popf
mov
out
cli
fdivp
and
fsubrs
mov
in
push
sub
jle
pop
xchg
ret
and
push
cli
and
sbb
cmp
jb
std
mov
jmp
lods
sbb
arpl
es
test
add
inc
pusha
mov
and
pop
or
sub
and
add
popa
push
mov
jnp
xor
je
cmp
icebp
scas
push
push
sub
hlt
adc
sub
jbe
jmp
cmp
je
pop
negl
mov
fisttps
cmp
lret
jno
ss
sbb
pop
inc
sbb
std
cmp
hlt
sbb
popf
inc
bswap
adc
test
xor
nop
mov
push
popl
cmpsl
jnp
push
in
jl
inc
adc
inc
xchg
push
jae
jge
jmp
cmpsl
nop
inc
pop
iret
lcall
push
mov
cld
add
seta
mov
and
cmp
imul
cmp
xchg
and
and
xor
pop
repz
sub
add
movb
push
adc
inc
adcl
sbb
or
or
cmc
cld
mov
jecxz
test
std
jecxz
mov
in
jb
push
ds
or
cltd
dec
ret
xchg
adc
sub
and
cmp
xor
das
rclb
pop
cld
lds
fdivl
es
sub
iret
rorb
in
out
lahf
sbb
or
roll
or
iret
mov
xchg
add
andl
mov
lcall
pop
cmp
cltd
inc
jno
mov
bnd
pop
or
cmc
mov
mov
les
ficompl
xlat
loop
jl
pop
pop
and
sbb
ja
insb
inc
sub
fidivrl
std
mov
lods
push
adc
jmp
hlt
cmpl
icebp
mov
fnstcw
jb
je
mov
imul
ret
push
incl
popf
push
dec
imul
or
movsl
fwait
pop
lock
stc
popa
daa
sub
and
push
popf
xor
xchg
fdivr
mov
dec
sub
aas
xor
xor
xor
xor
mov
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
nop
mov
mov
mov
mov
pusha
addr16
xchg
or
clc
pushf
aam
inc
movsb
and
lret
leave
ljmp
gs
mov
add
xor
imul
xor
out
fisubrl
sub
in
shl
sbbb
adc
adc
cmp
sub
inc
ja
dec
cltd
sbb
dec
or
pop
dec
pusha
int
push
dec
hlt
adc
and
flds
int
mov
mov
xchg
shl
mov
sub
xor
fimull
ss
and
scas
cli
sub
inc
mov
jp
loopne
lcall
gs
rcl
xchg
aam
dec
popa
in
inc
icebp
mov
jge
inc
lahf
fcom
cld
jo
or
repnz
scas
mov
insl
cwtl
nop
sub
sub
std
call
cltd
dec
cmpsb
loopne
icebp
iret
aad
inc
cmp
out
in
imul
nop
pusha
mov
pop
adc
outsb
or
outsb
inc
sahf
add
bound
adc
out
sbb
xor
inc
mov
repz
pop
push
rorl
lds
xor
into
pop
mov
outsl
pop
into
adc
dec
addr16
idiv
and
popf
int3
test
loop
mov
repz
dec
in
adc
cmp
lods
sbbb
ret
rcrb
ror
mov
daa
and
ret
nop
out
shlb
fists
mov
jbe
or
in
movsb
faddp
xchg
adc
test
push
orl
or
into
push
clc
lahf
mov
nop
lds
iret
sbb
arpl
sub
rolb
sub
cmp
pop
sbb
dec
sbb
inc
scas
int
pop
mov
dec
lea
pop
and
xchg
adcl
cmp
xchg
test
mov
push
mov
dec
shlb
sahf
lret
sub
mov
inc
adc
fwait
sbb
jle
pusha
pusha
ficomps
icebp
push
out
sub
jne
fisttps
xor
mov
dec
sbb
mulb
in
dec
and
ret
xlat
and
push
ds
dec
jo
add
push
int
aad
out
stos
mov
test
push
cs
mov
mov
test
popa
fs
int
add
mov
incb
fisubrs
pop
cmp
ds
jns
and
mov
hlt
push
dec
imul
int3
adc
pop
xchg
mov
mov
lahf
adc
jae
fidivs
xchg
jge
adc
inc
iret
subb
sub
jae
cli
jecxz
add
aad
mov
xchg
mov
dec
add
cmc
jecxz
rolb
add
push
push
push
sbb
repnz
xchg
mov
mov
add
cs
enter
hlt
repz
dec
inc
int
out
add
pop
pop
mov
aaa
sar
enter
mov
dec
mov
jno
adc
scas
push
inc
cld
xor
stos
add
mov
lods
mov
movsl
mov
mov
pushf
loop
add
rolb
shll
gs
lds
or
add
mov
cltd
jle
mov
jle
fcmovbe
or
adc
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
data16
mov
adc
adc
adc
dec
pop
cmp
aad
in
sub
or
cmp
outsb
or
mov
cltd
repnz
and
or
xchg
adc
bound
mov
cmp
outsl
sbb
idivl
jl
inc
and
lock
scas
xor
inc
mov
pop
push
fstpl
jecxz
add
inc
pop
sbb
inc
insl
xchg
rorl
fsubr
mov
fldenv
mov
and
fisubl
cld
mov
adc
cmp
jb
test
sbb
jge
js
push
pop
dec
mov
push
rcrb
dec
rorb
push
lds
shrd
mov
stos
cltd
loopne
xchg
test
fmull
loop
or
adc
adc
lahf
sbb
push
test
mov
jb
fsubl
and
mov
mov
mov
mov
mov
sub
xchg
imul
cmpsb
leave
xor
pop
mov
outsb
fsubr
xor
cmpsl
test
or
vfmsub132ss
test
adc
sarl
es
mov
sbb
lret
aas
aas
inc
mov
and
test
imul
xor
adc
push
addr16
sbb
scas
ret
enter
inc
fisttpll
push
ficoms
ret
jbe
push
mov
push
pushf
imul
in
sahf
outsb
lret
in
jl
jne
inc
jno
mov
clc
push
mov
sahf
addr16
adc
lods
aas
lahf
hlt
cltd
push
js
push
xchg
mov
cltd
sti
inc
notl
mov
jbe
xlat
aas
fistpll
inc
sub
jge
into
rcll
hlt
or
push
je
sub
cli
fisubl
xchg
scas
sarb
xchg
repz
sbb
test
add
roll
insl
ret
or
mov
and
add
inc
push
dec
push
movsl
mov
lret
test
popa
pop
mov
ljmp
jnp
repz
popf
inc
mov
inc
mov
mov
xor
push
out
subb
jo
dec
pop
rol
jae
out
dec
push
out
insl
push
or
inc
mov
sub
and
ffreep
jmp
or
dec
sbb
popa
mov
jb
jne
and
into
push
js
lahf
repnz
aad
loop
adc
push
ss
push
dec
mov
cmp
lock
es
inc
jl
pusha
mov
dec
pop
pusha
xor
dec
into
es
push
pop
sbb
xor
fldt
push
cmpsl
mov
bound
dec
addr16
and
into
dec
jmp
or
in
inc
out
ret
sbb
fstps
pusha
sbb
lods
sbb
jo
xor
insb
jecxz
fistpl
imul
test
add
imul
fisttpl
mov
out
movsb
sbb
mov
jo
lock
pop
jp
fidivs
imul
sbb
add
cld
xchg
mov
cmp
clc
mov
xchg
icebp
xchg
pcmpeqd
and
dec
insl
rclb
and
inc
aam
dec
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
in
jle,pn
test
adc
adc
adc
cmp
out
nop
add
sbb
mov
daa
out
mov
xchg
data16
mov
cmp
sub
push
pop
mov
or
stc
insb
pop
mov
pop
scas
mov
push
sahf
pop
sub
mov
push
sub
add
imul
xchg
push
jb
stos
fnsave
dec
es
add
mov
dec
jnp
inc
jmp
cmpsb
mov
sar
les
sbb
pop
inc
addr16
sub
data16
and
mov
mov
jge
clc
sub
sub
add
add
jg
test
in
inc
xchg
sbb
inc
pop
test
in
subl
push
es
repnz
outsl
int3
pop
pop
jl
lcall
xorb
nop
ret
ret
dec
cmp
mov
xchg
int
or
iret
jl
ss
pop
clc
push
cmp
adcl
and
lock
int
fst
and
and
out
js
or
inc
push
divl
pop
jo
nop
push
sub
jns
fisttps
push
daa
testb
jae,pn
out
xlat
pop
and
adc
int3
mov
rol
inc
push
xchg
inc
or
inc
ss
xor
cltd
sarb
jns
sbb
outsl
lods
lret
xchg
adc
xchg
gs
push
sbb
or
adc
test
jno
cs
mov
repnz
aas
xor
xlat
xlat
dec
and
pushf
sub
push
mov
out
push
mov
sub
cmpsl
test
imul
jl
and
fadds
lcall
dec
push
ss
aad
cmpsl
shll
lock
in
mov
js
sbb
popf
sbb
out
pop
adc
fmuls
pop
popa
cmp
mov
addr16
inc
imul
testl
lret
repz
test
jg
mov
xchg
stc
popw
jmp
push
cmc
push
mov
aaa
mov
mov
sbb
lret
sti
dec
fnstenv
mov
cmp
imul
rcrb
dec
call
fbld
inc
dec
test
fs
xor
in
xor
jns
xchg
lds
test
aas
xor
iret
xchg
jo
aas
lret
pop
mov
movsb
rolb
adc
or
jmp
insb
ja
shr
dec
fs
xor
rsm
jecxz
or
outsl
cmpsb
lcall
loop
pop
ja
xchg
inc
popf
pop
inc
dec
or
pop
lods
or
sbb
rorl
das
add
xchg
subb
fisttps
inc
push
test
and
adc
fidivrl
sbb
jnp
xchg
pop
cltd
mov
lock
adc
stc
les
test
ds
mov
je
icebp
or
inc
outsb
inc
mov
shlb
pop
lds
inc
cmpb
dec
scas
pop
daa
add
xchg
sub
pop
cltd
into
packssdw
mov
rcrl
xor
lahf
sbb
add
adc
mov
mov
mov
aas
pop
sahf
push
imulb
push
add
loopne
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
jmp
mov
adc
adc
push
xor
mov
xchg
jmp
jns
gs
inc
cmpsl
add
lods
and
mov
out
inc
addl
jecxz
popf
sbbb
and
pusha
and
push
inc
mov
je
sar
xor
mov
test
mov
adc
push
mov
js
in
cmp
shll
push
inc
pop
imul
sar
sbb
leave
mov
fwait
testl
movsb
adc
insb
adc
push
loopne
fs
xor
in
add
mov
stos
jne
or
cld
sahf
inc
cltd
adc
imul
in
sti
popf
stos
mov
ret
lret
and
jge
sbb
pushf
lahf
movsb
pop
sub
push
jmp
sub
xlat
bound
inc
pop
lock
xchg
push
adc
cmp
xchg
dec
pop
mov
pop
pop
mov
gs
adc
or
cmp
fdivl
insb
sbb
xor
pusha
cmpsl
xchg
inc
adc
adc
mov
mov
pop
pop
imul
and
add
sub
pop
cmp
dec
jp
dec
insl
int
arpl
or
fldl
out
sti
out
push
je
dec
pop
hlt
jge
or
mov
xchg
or
pop
cmpl
cmpsl
jns
dec
adc
std
pop
mov
push
imul
out
mov
mov
mov
or
and
fmuls
mov
gs
pop
push
cmp
in
jmp
adc
in
and
xlat
cmp
cltd
jp
sub
xchg
jmp
xchg
add
adc
cmp
fstpt
outsl
sbb
cmp
iret
rol
movsb
adc
shlb
jns
ret
cmp
test
xchg
ja
mov
or
rcll
xchg
shl
and
movsb
call
in
xor
outsb
jne
jmp
movsb
mov
mov
ja
push
sti
mov
push
je
mov
popf
nop
inc
mov
test
lds
ret
sbb
out
push
push
sub
push
inc
jne
mov
cltd
xchg
xor
subb
adc
es
sub
sti
dec
push
add
ret
lds
aas
jp
pop
pop
insb
sub
sub
xchg
fs
jb
sbb
inc
jecxz
lods
pop
fidivl
movl
out
add
cmp
jmp
add
loop
mov
jge
enter
push
sub
test
jmp
pop
stc
jo
jge
mov
mov
inc
dec
cmpsb
mov
mov
or
push
pop
inc
mov
inc
jle
or
insb
pop
jecxz
lock
mov
movsl
adc
mov
cmp
aas
lds
ljmp
mov
iret
push
out
jp
jecxz
xor
and
aam
jns
sahf
pop
pop
shr
pop
dec
les
test
das
push
xchg
dec
push
cmp
test
shl
xchg
sub
and
mov
and
xchg
pop
cmc
push
xchg
fprem
cmc
push
pop
xor
rolb
or
add
pushl
push
push
call
mov
jmp
xor
sbb
stos
push
sub
mov
int
adc
fistpll
insl
jno
stc
add
subl
ja
sub
enter
xor
ds
xchg
fisttpll
pop
inc
adc
sbb
subl
xor
jb
mov
xor
out
sbb
mov
pushf
outsb
adc
rorb
xchg
xor
aaa
sub
and
xchg
sub
push
mov
movsl
xor
pusha
push
lods
test
add
sub
ja
lret
stos
aad
sub
std
and
sub
cmp
lock
sub
ljmp
dec
mov
loope
or
xchg
jecxz
pusha
mov
shr
dec
jno
mov
push
push
add
lds
enter
je
lods
ret
pop
ja
cli
mov
sub
int3
sbb
xchg
sbb
xor
or
lods
fdivrs
or
sbb
out
xchg
jo
out
push
jp
lods
xchg
mov
cli
dec
aam
andl
cmpsb
mov
mov
inc
mov
rcrb
mov
pop
cmp
imul
xor
loopne
lds
out
jl
call
loope
xchg
add
jnp
into
cltd
mov
idiv
iret
test
push
mov
pop
pop
cmp
adc
inc
sahf
sahf
pop
adc
sbb
xchg
mov
loop
add
mov
push
je
icebp
mov
in
loope
push
add
cli
or
ret
popf
out
push
fnsave
clc
insb
mov
sti
fcoms
pop
xor
rcl
bound
and
rclb
cmp
dec
jns,pt
enter
fisubl
mov
lds
popf
xchg
and
adc
lret
pop
stc
pop
push
loopne
sti
imul
inc
cmp
cmp
or
mov
cmp
dec
in
pusha
inc
cwtl
sahf
fwait
ret
add
aas
jp
mov
adc
out
rcrl
push
cwtl
push
lret
lret
sbbb
in
cmpsl
jl
nop
jmp
sar
xor
popa
push
and
test
les
fldl
pop
enter
stos
cs
mov
divb
add
mov
sbb
jbe
mov
jne
popa
push
arpl
sub
lock
dec
sahf
jbe
adc
into
clc
or
test
xchg
push
sbb
xor
cs
jl
add
mov
sbb
ret
mov
mov
add
xor
out
movsb
push
out
mov
inc
ds
movsb
aaa
mov
jl
fimuls
cmpsl
or
lea
push
dec
sbb
mov
mov
pusha
xchg
xor
cld
lock
test
lea
jecxz
adc
push
xor
aam
adc
push
aad
sarb
ret
fildll
adc
cwtl
dec
mov
inc
rcrl
mov
pop
das
cmp
sub
sbb
sbb
icebp
cld
cmp
fisttpl
cmp
and
repz
inc
ficoml
aad
cmp
in
adc
mov
sbb
fadds
cmp
push
xor
daa
scas
hlt
xchg
outsb
in
xchg
dec
insl
inc
mov
jns
or
sbb
out
inc
scas
mov
sub
icebp
sbb
dec
add
gs
shrd
jmp
ja
jle
sub
xchg
mov
and
jb
adc
adc
adc
data16
aam
push
fcompl
fnstcw
aas
lods
sbb
sub
daa
pop
arpl
addb
mov
push
iret
negb
ljmp
mov
mov
aas
add
pop
rolb
loopne
jne
mov
scas
adc
add
jp
mov
mov
and
jbe
stc
ret
stos
jge
jle
mov
repz
clc
inc
scas
fwait
repnz
or
cmpsl
cmp
xchg
stos
dec
xchg
das
in
cmp
cmpsb
fwait
popf
jae
push
dec
push
push
rep
ds
cmpsb
lcall
inc
mov
hlt
scas
cmp
sahf
push
inc
jno
adc
rclb
mov
cmc
xor
pop
mov
xor
test
rorl
mulb
jb
sarl
dec
inc
sub
xor
stos
daa
dec
lods
mov
aas
and
cmp
inc
loopne
jno
jmp
popf
adc
mov
jmp
adc
ror
scas
imul
xchg
shll
xlat
jb
or
jnp
lret
push
adc
xor
jle
std
xor
adc
shlb
xor
dec
adc
je
and
mov
mov
ds
dec
inc
insb
xor
pop
repnz
jg
pop
and
cltd
mov
mov
daa
or
fs
insl
mov
pop
in
push
dec
inc
inc
mov
aaa
daa
fcomi
pop
push
xlat
mov
dec
movsb
jmp
js
push
repnz
dec
cld
js
jmp
xchg
push
arpl
push
test
jg
sbb
sti
iret
add
fdivrp
icebp
mov
popf
int3
imull
and
sbb
dec
mov
shll
xchg
popf
jnp
sub
nop
sub
lods
or
jmp
add
repz
jp
jmp
add
push
ret
pop
lcall
adc
popf
pop
mov
sub
fcomps
jle
clc
inc
sbb
mov
add
fwait
outsb
cltd
loopne
xor
hlt
jno
fisubrl
iret
or
push
mov
andb
jbe
dec
mov
fistps
fbstp
ljmp
dec
aad
cmpsl
xchg
test
jnp
int
stos
add
jmp
aad
push
jp
dec
dec
sarb
adc
fisubl
cli
lock
pusha
push
or
mov
mov
and
mov
jg
mov
inc
push
mov
jmp
testl
xchg
xor
int
cli
test
out
inc
cltd
xor
fucomi
dec
sub
in
mov
add
xchg
sub
aaa
sti
frstor
lahf
stos
inc
in
push
mov
test
add
and
jbe
add
xor
add
insl
outsl
dec
jle
iret
or
arpl
pop
rcll
gs
loop
repz
aad
dec
loope
add
lock
lret
into
jo
negb
pop
icebp
xchg
cli
movsl
mov
jp
scas
fsts
out
mov
mov
test
adc
mov
and
into
aam
ficoml
out
outsl
pop
cmp
add
frstor
aas
sbb
xlat
ret
cs
ret
jmp
jbe
or
cmp
ljmp
out
xor
mov
mov
mov
push
jmp
bnd
test
fiaddl
and
adc
int
adc
push
cwtl
icebp
loope
fisttps
push
test
pushf
jecxz
add
mov
fcomps
inc
aad
das
or
les
lcall
push
push
mov
pusha
mov
rorb
cmp
xor
sbb
xchg
test
int3
xchg
pop
lds
imul
cmp
dec
xor
mov
out
insl
mov
push
dec
jmp
mov
cltd
pop
xchg
popa
jle,pn
jmp
hlt
adc
lea
sbb
dec
xchg
push
aaa
cmpsl
jbe
in
or
fadds
icebp
test
sbb
xchg
jecxz
fimuls
push
jae
sub
in
dec
push
add
adc
stos
xor
and
add
mov
aaa
fiaddl
gs
jp
ret
call
adc
imul
sub
mov
push
fs
xchg
mov
popa
mov
dec
cwtl
inc
push
adc
std
call
mov
idivb
sbb
stos
pop
xor
inc
lods
cmc
sti
xchg
cmp
sub
xchg
inc
int
and
movsb
mulb
sbb
insl
testb
mov
out
pop
mov
and
lea
mov
ss
or
lods
xchg
test
sbb
xor
les
ds
lods
outsl
lret
popa
pop
cmpsb
mov
out
jne
push
out
insb
add
sub
pusha
pop
imul
adc
pop
xor
mov
shll
sahf
ret
mov
adc
sub
push
clc
fisttps
bound
mov
sbb
ss
pushf
ret
fildl
adc
repz
xchg
inc
sahf
aam
fwait
out
mov
pop
sbb
mov
adc
daa
insb
cs
xchg
add
cmp
stc
sub
jecxz
adc
dec
xchg
adc
imul
fdivl
in
fsts
add
inc
pop
pusha
sbb
fsubl
leave
xor
movsl
mov
sub
lods
out
jns
pop
psubusw
sbb
lods
sub
mov
mov
pushl
or
mov
pop
cli
scas
je
out
push
iret
cmp
loope
and
mov
dec
sub
test
mov
inc
dec
add
xchg
push
sub
mov
in
mov
inc
int
jecxz
test
mov
ja
jne
sti
adcl
adc
xor
mull
lds
dec
jno
mov
mov
inc
jnp
adc
sub
fwait
jg
pop
push
jp
mov
push
cli
mov
les
sahf
sbb
scas
lea
jle
clc
add
sbb
jmp
inc
xor
ret
shl
std
movsb
in
cmp
ljmp
outsl
sub
fidivrl
insb
aad
push
ret
dec
add
jmp
cld
addr16
loop
mov
jp
dec
out
xchg
sbb
stos
mov
ja
xchg
mov
add
jno
cmp
xchg
in
or
sub
pop
loopne
jge
lock
cs
notb
outsb
jle
daa
into
fs
ja
jecxz
fistpll
adc
cmp
pushf
pop
stos
adc
pop
xchg
add
andb
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
js
mov
adc
adc
leave
cmp
pop
sbb
mov
lock
jle
jb
cltd
gs
dec
fmuls
add
divps
jge
sbb
pop
hlt
in
mov
add
cmp
mov
outsb
rol
stc
les
cmp
int
pop
dec
pop
fwait
outsl
push
pop
or
sbb
inc
and
xchg
fnstenv
mov
jae
pop
aad
js
mov
popa
ja
xor
dec
daa
imul
or
inc
icebp
test
mov
aas
cmpsl
adc
cmpsb
call
xlat
pusha
adcl
pop
call
ret
imul
push
lods
inc
adc
rcrb
mov
mov
jge
mov
dec
sbb
push
adc
notl
lcall
mov
aam
dec
jmp
in
or
stos
xlat
mov
gs
mov
adc
sbb
addl
mov
cwtl
mov
adc
test
cwtl
in
and
sbb
xchg
and
sti
jnp
push
sti
andl
mov
add
stc
sub
jle
push
test
in
sbb
jno
inc
lea
in
subb
pop
popa
fwait
and
mov
fwait
lods
mov
shrl
pop
sahf
lods
ret
pop
into
lea
fmulp
pop
jns
mov
xchg
cmp
mov
xor
jne
push
movsb
mov
jne
daa
push
sub
mov
pop
sub
pop
sbb
clc
paddd
int3
sbb
repnz
repz
ret
pop
lock
nop
push
mov
xor
lret
jge
dec
mov
xchg
and
ja
fbld
lods
bound
pop
sbb
scas
xchg
pushf
out
adc
xchg
sub
fldl
mov
sbb
stc
stos
adc
dec
sahf
pusha
push
push
sub
pop
cmp
das
add
in
scas
in
in
das
or
mov
imul
mov
popf
or
push
inc
jl
mov
into
cmpsb
insb
rclb
pop
pop
pop
xchg
pop
jo
cwtl
mov
ja
outsb
icebp
sub
mov
mov
inc
shl
jecxz
mov
mov
sbb
cmp
mov
xchg
ds
lahf
mov
int
push
mov
pusha
mov
imul
jecxz
sbb
popa
clc
xchg
jmp
movsb
sbb
pop
test
repnz
mov
jg
mov
aaa
idiv
cwtl
xor
jg
test
inc
imul
fdivr
add
out
sub
out
scas
xchg
add
xor
lahf
int3
jle
jnp
sbb
jge
aas
pop
leave
lret
inc
sarb
xor
pop
into
xchg
cld
cmc
push
mov
popf
popa
mov
xchg
dec
jae
pop
std
pop
cmp
xor
dec
xor
repz
vpsubd
xchg
repnz
or
cmpsb
mov
imul
popa
outsl
lods
xchg
shrb
dec
and
out
sarl
xchg
xchg
fnstcw
xchg
inc
ja
xor
aad
mov
or
rcl
fcompl
and
fcoms
leave
aas
dec
in
sbb
fsts
outsl
xchg
pop
cmp
imul
add
jns
loop
outsl
pop
dec
push
ja
das
lcall
push
scas
sub
push
call
out
push
into
inc
pop
xchg
xchg
pop
push
pusha
adc
daa
into
pop
jne
jmp
jo
insb
pop
cmp
dec
shrd
movl
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
mov
pop
adc
xor
adc
ret
out
lods
xor
adcl
dec
aas
adc
clc
insb
or
int
sbb
add
xchg
push
int3
jge
js
adc
insb
jge
stos
fs
inc
stos
into
repz
dec
outsb
xchg
xchg
jno
pop
loop
mov
insl
mov
mov
pop
add
gs
push
jne
dec
sub
je
out
aad
dec
mov
aad
faddp
push
mov
xor
add
lock
jle
rorl
aad
and
bound
ja
daa
fiadds
shll
add
or
jns
push
call
or
mov
jmp
aad
jecxz
mov
adcl
les
xchg
add
push
pushf
jmp
dec
and
pop
push
push
pop
fisubrs
int3
andb
add
jl
movsl
push
ret
dec
mov
pop
xchg
xchg
lret
into
xchg
push
xchg
cmp
jp
inc
cli
addr16
in
lret
aad
cmp
cmp
fs
dec
add
cmpsb
lods
cmp
xchg
pop
call
in
mov
push
aad
mov
pop
imul
inc
jnp
sarb
int
pop
xchg
mov
test
lods
add
adc
pushf
sahf
shlb
loop
rorl
stc
insl
xor
add
test
stc
pop
not
pop
arpl
xchg
or
test
mov
mov
fistpl
aad
or
push
scas
mov
dec
shlb
ja
daa
scas
or
dec
es
test
adc
orl
adc
dec
xchg
out
sub
ljmp
cld
ret
jecxz
popf
cmp
fmuls
cld
into
std
mov
jo
inc
mov
push
add
fsubrl
dec
push
sub
adc
lods
jns
jno
loop
aaa
xor
icebp
jmp
jns
jg
cli
add
out
outsl
loopne
sub
aaa
push
mov
xchg
loopne
pop
es
jp
cmp
add
push
stc
ret
std
push
dec
push
pop
push
dec
out
jae
add
ret
xor
flds
ljmp
cltd
dec
sub
jle
inc
out
inc
adcb
rorl
daa
cmp
daa
inc
mov
pop
inc
dec
pop
xchg
pushf
jne
stc
addb
sbb
scas
sbbb
push
pop
xchg
pusha
nop
jge
shlb
pop
je
xchg
insb
pusha
xchg
add
xchg
cmp
icebp
hlt
hlt
pop
jns
cmp
mov
out
call
xor
xchg
imulb
adc
clc
jne
not
xchg
mov
mov
fcmovne
adc
cmpsb
pop
mov
cmp
pop
icebp
lahf
sbb
cli
in
das
fs
or
gs
jbe
rol
jnp
ja
jb
bound
mov
or
push
iret
pop
mov
push
xchg
mov
push
mov
out
pop
mov
aad
xor
cmp
mov
add
sub
add
loope
rcr
push
vmwrite
cmp
add
jne
iret
jecxz
push
insb
mov
xor
jae
adc
mov
inc
inc
andl
dec
incl
and
hlt
xchg
adc
test
lock
cmpsb
mov
and
dec
bound
adcb
popf
adc
cmc
adc
and
out
int3
addl
iret
stos
std
fldenv
inc
add
movsb
out
lock
fcoml
pop
mov
inc
push
les
mov
mov
movsl
mov
sub
mov
pop
sti
push
pop
lcall
in
and
jo
add
add
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
dec
cmpb
adc
adc
stc
pop
loopne
out
test
inc
jns
fstpt
nop
cmp
mov
mov
sub
xlat
mov
pop
mov
or
mov
pop
cltd
mov
xchg
push
jmp
in
dec
push
xlat
in
stos
inc
cmp
xchg
push
scas
sti
arpl
add
sub
xchg
cmp
dec
xor
clc
repnz
jb
and
or
je
sbb
inc
sub
in
jne
mov
mov
xchg
lea
call
xor
mov
pop
movsl
mov
cli
dec
xor
test
jg
rclb
xor
and
test
mov
rcrb
sbb
lea
jb
add
repnz
mov
push
cmpsl
test
pop
insl
xor
jae
dec
mov
ds
mov
sub
lahf
mov
add
aad
ljmp
jb
fwait
outsl
xor
xor
js
das
icebp
inc
cltd
test
mov
stos
pop
negl
std
and
lcall
insb
push
xor
stos
lods
scas
mov
sub
dec
push
int
jno
mov
sti
js
enter
imul
dec
jle
shll
sbb
mov
mov
movsl
mov
in
clc
add
rolb
pop
sbb
push
add
punpckhbw
pop
push
cld
mov
je
mov
and
jl
rcrb
xchg
inc
es
mov
mov
mov
add
mov
iret
mov
outsb
mov
add
shrb
sti
es
insb
stos
cmp
adc
loopne
sub
das
or
in
mov
cmpl
xchg
jnp
cmc
test
test
std
pop
cmp
pop
push
inc
push
lahf
int
mov
mov
andb
mov
sbb
out
into
inc
ret
push
pop
pop
add
inc
insb
fsubrl
dec
fcomps
stos
and
sub
xchg
je
lods
rcll
push
sub
xor
ret
mov
ds
adc
inc
add
lwpval
mov
inc
push
inc
and
rcrb
setle
pop
cmp
sahf
xor
loop
lods
cli
sub
in
pop
rorb
out
and
xor
lea
mov
adc
dec
leave
inc
adc
daa
mov
add
mov
ss
scas
pop
mov
push
rolb
pop
out
mov
jge
add
mov
into
popa
adc
jle
fwait
test
push
xchg
inc
xchg
inc
mov
in
push
scas
outsb
data16
addr16
stos
call
mov
and
pop
mov
dec
int3
and
bound
sti
pop
push
mov
nop
dec
les
and
dec
pop
push
lds
loop
or
mov
jg
cwtl
shll
xchg
pop
decl
xchg
negb
loop
sub
lods
dec
je
std
push
sbb
xor
pop
jl
jl
dec
idivb
and
cmp
rcr
lret
sbb
adc
mov
aaa
push
imul
rcrl
pop
xor
test
or
and
xchg
popf
push
push
sub
ds
out
xchg
sbb
test
xor
pop
data16
ss
push
ja
mov
and
mov
arpl
sub
jnp
mov
notl
loop
push
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
addr16
inc
dec
adc
xor
adc
mov
mov
imul
or
push
test
pop
xor
ss
sub
int3
jbe
nop
dec
and
adc
push
fsubrs
sub
push
mov
and
mov
mov
popa
cmp
rcll
push
test
ret
out
or
das
or
mov
xchg
movsb
sub
hlt
jne
sub
or
jae
mov
sbb
push
sbb
mov
and
add
mov
dec
sub
mov
dec
lcall
rcrl
xchg
movsb
xchg
rclb
outsl
test
int
jg
xor
jl
aaa
je
scas
scas
push
rcrb
ljmp
mov
jb
popa
icebp
mov
mov
movsb
sub
mov
sbbb
mov
fchs
jmp
dec
js
int3
cmpsl
addb
ja
out
mov
imull
negl
jne
or
push
pop
sbb
and
pop
mov
push
js
xchg
or
enter
mov
push
mov
pushl
rol
ret
sarl
ss
lahf
mov
xor
mov
pop
je
dec
inc
adc
andb
jb
jo
cmpb
push
fdivrp
les
jb
insl
xchg
shll
das
inc
test
adc
jno
lret
int3
or
jmp
imul
adc
and
pop
pop
dec
jecxz
popa
cwtl
and
lcall
mov
decb
out
mov
mov
jnp
insb
xchg
xchg
xchg
pop
fiadds
scas
sub
loopne
js
pop
push
xchg
mov
pop
fmulp
pop
daa
adc
xor
mov
mov
sub
les
in
ja
adc
push
rcrl
pop
enter
or
mov
notb
jnp
rol
movsl
sub
frndint
sub
in
rcl
push
imul
xchg
mov
jmp
sub
fs
jl
pushl
iret
jnp
inc
iret
or
gs
ret
sbb
jge
adc
frstor
jmp
js
loop
mov
pop
sbb
cmp
mov
mov
push
data16
push
int
cmp
pusha
sub
rclb
outsl
out
sbb
and
jnp
lahf
test
xchg
adc
stc
xor
adc
dec
dec
pop
ret
mov
sub
and
mov
xchg
mov
mov
les
sbb
addb
add
ss
sub
insb
inc
mov
bound
clc
ljmp
in
jbe
inc
pop
or
jb,pn
test
jne
movsb
bound
out
xor
les
into
fisubl
std
pop
cmp
pop
mov
mov
icebp
rcrb
stc
mov
lock
push
xor
mov
sbb
hlt
sbb
lret
add
out
shrl
shrl
jo
test
das
aad
test
jns
jne
sub
pop
xchg
sbb
imul
or
xor
cmp
lea
pop
loop
add
inc
add
and
add
lret
pop
leave
push
adc
pop
icebp
mov
insl
dec
out
push
out
and
dec
ja
xchg
mov
fmuls
pop
aad
mov
sbbl
jne
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
add
inc
mov
fdivp
push
adcb
mov
pop
scas
arpl
movsb
xor
test
in
or
mov
scas
jl
loop
cmpsb
lahf
out
adc
or
jge
push
fstpt
inc
mov
xchg
fimuls
pop
ds
ja
loope
outsb
cli
adc
mov
orl
pushf
in
jmp
fucomp
push
dec
xchg
sub
cltd
daa
inc
adc
imul
fcmovnu
dec
and
lret
mov
arpl
mov
fdivrl
sahf
cld
xchg
cmpsb
mov
dec
sbb
and
or
and
sub
mov
ficoml
dec
nop
std
lcall
insb
inc
inc
push
pop
loop
pop
inc
out
pusha
in
shrl
cmpsb
mov
das
or
notl
scas
cmp
inc
shll
es
sar
sbb
dec
addr16
lods
call
imul
test
xchg
push
pop
inc
push
test
push
test
add
je
inc
jmp
ret
cmpsl
dec
lock
xor
imul
and
dec
mov
testb
mov
mov
adc
call
repz
ret
xor
outsb
std
mov
sahf
gs
jg
aas
cld
lahf
mov
cmp
int
sbb
bound
jae
fidivs
cmpsb
and
shrb
frstor
das
pop
popf
cld
repnz
push
test
add
lret
aaa
jp
add
pop
movsb
loopne
push
push
sub
sbbl
and
stos
push
loope
or
aas
inc
outsb
mov
xor
mov
sbb
andb
stos
xlat
adc
push
nop
incl
popa
mov
in
popf
out
in
and
ja
sub
mov
xchg
mov
push
add
mov
cmp
ds
mov
outsl
and
add
enter
cmp
sub
repz
and
in
out
lret
push
jnp
idivb
stc
int
fsubr
push
hlt
mov
aaa
lods
and
aas
jne
mov
xchg
sub
mov
xor
pop
aas
add
dec
das
dec
mov
aas
xlat
pop
icebp
pusha
mov
inc
daa
bound
gs
imul
enter
sbbl
jecxz
push
cs
inc
cmp
xor
add
mov
sbb
cmp
es
clc
test
mov
addr16
insl
and
test
inc
ret
sub
lea
or
xchg
das
inc
xchg
and
faddp
cmp
call
pop
arpl
in
sbb
sbb
xor
xor
imul
push
hlt
mov
aam
xchg
clc
cmp
inc
loope
mov
out
insl
js
dec
and
cmp
xchg
aam
in
pushf
adc
aam
push
clc
pop
out
xor
jp
popa
or
icebp
and
mov
scas
pop
dec
out
mov
inc
jg
push
add
je
xlat
and
in
sub
inc
cwtl
das
push
jg
mov
mov
jmp
and
inc
fwait
sub
xor
into
loop
pop
repz
ss
dec
inc
outsb
mov
int3
ds
pop
stc
sbb
sub
lea
pop
dec
mov
or
nop
push
or
inc
pop
icebp
pop
dec
das
scas
dec
or
in
je
mov
stos
sbb
lods
push
subl
sbb
test
push
ror
inc
outsb
xor
add
pop
clc
xor
cs
cmp
xor
sub
xor
subl
leave
aaa
cmp
mov
jbe
add
push
push
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
push
push
cmp
adc
adc
adc
iret
sbb
pop
clc
lds
xor
mov
movsb
lret
ds
pop
add
shlb
add
adc
fnstcw
sbb
pop
cwtl
push
mov
dec
mov
cmc
adc
int3
rol
loope
mov
mov
ret
cmpsl
cmpsb
mov
outsb
int3
inc
out
and
sub
push
cmp
jae
jl
enter
cwtl
sbb
mov
jle
je
call
sti
fcomip
pop
cli
mov
shr
mov
add
es
mov
insl
roll
outsl
adc
sub
xor
ljmp
sbb
jmp
pop
and
leave
jnp
into
mov
mov
fbld
lods
fwait
or
leave
ret
inc
rcrl
push
pop
outsl
mov
mov
or
cs
dec
stos
cmc
cs
shl
outsl
outsb
sbb
loopne
push
and
or
and
hlt
jmp
push
jnp
jmp
mov
in
testb
mov
jne
and
inc
inc
adc
xchg
jl
mov
jo
out
sub
dec
mov
imul
aaa
or
mov
movsl
jp
rol
jae
roll
js
pusha
in
mov
repz
adc
sbb
in
sub
mov
pop
adc
pushf
aad
push
jnp
push
sbb
loopne
inc
icebp
mov
cmc
xor
xor
add
inc
mov
ljmp
sbb
mov
or
inc
stos
sbb
leave
cmovo
sbb
jecxz
pop
cmc
inc
jl
fiaddl
ja
lods
lret
xor
or
jns
test
aam
pop
orb
inc
and
sub
or
push
sub
shlb
es
pop
dec
and
outsb
lret
pop
lret
repz
test
mov
xchg
and
fs
scas
scas
mov
dec
push
in
aad
or
in
mov
sub
mov
js
cmc
cmpb
test
mov
iret
jnp
mov
adc
negl
pop
cmp
cwtl
sub
and
outsb
or
punpckhdq
or
addl
xor
pop
add
js
pop
mov
rorl
rcrl
jo
subl
stos
daa
mov
pop
jmp
push
dec
test
lea
or
cmp
fidivrs
imul
jmp
inc
pop
mov
and
in
xor
roll
sti
cli
dec
ret
cmpsl
sahf
mov
cmp
or
inc
stos
mov
mov
mov
pop
les
mov
adcb
imul
gs
and
xor
divb
dec
cmpsl
int3
aas
in
hlt
mov
inc
fcmovnbe
push
add
mov
mov
jb
add
rclb
outsl
dec
rorl
insl
jno
pop
imul
pop
call
or
sbb
jnp,pt
xor
in
cs
mov
fisubrs
movsb
js
mov
cli
in
into
stos
cmpsl
xor
cmovge
adc
jg
or
es
mov
push
pusha
lock
sarb
and
in
in
push
sarl
pushf
out
in
jmp
inc
out
mov
mov
ds
cwtl
mov
mov
movsl
repnz
bound
scas
push
mov
lods
shll
mov
shll
mov
call
fs
and
cmp
dec
xor
inc
addr16
sbb
test
in
sti
shll
inc
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
add
cld
pop
lahf
and
or
sahf
inc
mov
rcll
in
je
mov
insl
test
sbb
adcl
lds
movsb
loopne
add
mull
sub
loopne
stos
mov
repz
push
and
loopne
mov
scas
in
cs
loope
adc
ljmp
ljmp
mov
add
dec
js
cmpsl
jae
mov
imul
inc
push
sbb
out
sbb
sbb
cmp
and
dec
iret
clc
test
mov
ljmp
mov
enter
push
push
or
or
fildl
inc
pop
js
test
push
jge
js
mov
mov
xchg
sub
imul
rolb
push
call
pop
aas
xor
jae
stc
out
jo
cmp
push
rclb
add
or
push
addl
mov
fwait
aam
and
adc
ja
rclb
pop
fcomi
lds
sub
fistpl
xorl
lret
repz
pop
pop
aam
push
sahf
in
rcrl
movsb
push
jp
sub
xchg
test
mov
lret
xchg
ror
pushf
ljmp
scas
mov
sub
add
call
mov
lods
pop
ja
ds
pop
loop
ficompl
xor
pop
sbb
mov
daa
popf
and
imul
adc
enter
outsl
insl
mov
mov
adc
and
les
aas
mov
lods
jp
fsubrs
fldenv
cwtl
mov
in
xchg
mov
xchg
pop
sahf
loope
out
repnz
sbb
sbb
adc
sbb
and
and
cmp
add
insb
pop
mov
repz
fstps
jp
loop
mov
fsub
mov
stos
xor
idivl
mov
and
testb
aad
dec
out
sahf
mov
xchg
test
rcll
sbb
xchg
cmp
cmc
push
sub
xchg
lock
adc
out
leave
adc
test
loop
cmp
idivl
into
inc
adc
inc
data16
js
pop
mov
mov
int3
sub
loop
jbe
lea
nop
lcall
rol
push
and
repnz
insb
jp
pop
fstpt
repz
adc
xchg
dec
add
fdiv
mov
shll
push
adc
pushf
movsl
pop
jle
ret
cmp
outsb
icebp
xchg
div
cmpsb
add
cmp
lea
xchg
inc
or
and
pop
pop
sbb
sub
push
adc
nop
xchg
mov
mov
xchg
xchg
shll
pop
in
imul
adc
shrl
loop
jp
add
add
aam
imul
or
repz
inc
jp
and
pop
and
pop
or
inc
pop
das
insb
hlt
xchg
ficompl
sub
mul
dec
fwait
cmpsb
sub
insl
test
pusha
push
xchg
sbb
into
out
clc
mov
or
or
sub
and
mov
sbb
std
cwtl
push
andb
xchg
add
out
pop
fsubrl
test
mov
push
cmp
cmpsl
leave
and
and
pop
mov
xor
mov
sub
lods
xchg
into
fsubl
and
clc
jmp
lock
mov
sbb
or
jne
sub
jecxz
pop
call
mov
mov
jbe
aaa
mov
shrd
xor
jmp
mov
popa
lcall
sbb
stos
scas
sub
adc
adc
adc
cmp
and
ljmp
add
xor
jne
push
mov
out
in
das
outsb
ss
int
fadd
sbb
xor
lock
loopne
jl
and
inc
and
andb
mov
int
add
test
ret
sub
loop
xor
jb
xchg
adc
js
adc
sbb
ss
scas
mov
mov
in
xchg
inc
jo
cld
loope
mov
mov
es
xchg
jmp
pop
pop
jge
rcll
sub
stc
aaa
stos
dec
adc
sbb
push
jle
pushf
mov
jbe
xchg
mov
or
js
test
adc
iret
dec
cmp
inc
in
xchg
insb
xchg
bound
in
cmp
xor
das
inc
cli
pop
rorl
popa
das
and
push
cmp
cmp
lods
stos
jge
xor
ljmp
lretw
js
cmp
xchg
fsubrs
adc
rorl
out
bound
out
push
inc
cli
cmp
leave
fbstp
or
hlt
cmp
inc
mov
and
push
push
sub
call
insl
stos
call
inc
aas
out
divb
test
clc
xorl
cmpsl
cmp
mov
fdivs
stos
add
pushf
ljmp
mov
dec
das
pop
sub
pop
mov
iret
lods
or
add
or
cltd
call
stos
shlb
aad
pop
int
jg
mov
loopne
daa
xchg
or
test
inc
or
int3
cmp
imul
xchg
mov
hlt
adc
cmpsl
push
lock
ja
sbb
shrb
jecxz
ss
push
divl
inc
stos
or
pop
out
das
ret
mov
outsb
mov
js
cmpsb
loopne
out
sub
sahf
xor
cld
inc
shrb
lea
adc
daa
sbb
ficomps
push
ror
xchg
pop
ret
xor
fwait
sub
loopne
push
add
decb
dec
pop
mov
jnp
pushf
xlat
and
hlt
jnp
mov
enter
in
mov
xlat
out
push
mov
insb
jmp
fwait
mov
mov
add
sbb
in
push
xchg
mov
shll
les
jl
jecxz
shlb
push
jbe,pn
sbb
adc
mov
cmp
andb
jecxz
fimuls
sub
xlat
adc
aad
sbb
xchg
andb
mov
jne
sbb
mov
lods
in
mov
add
ficoml
xchg
mov
pop
rolb
lcall
mov
xlat
mov
mov
xchg
sbb
clc
jmp
fcomps
shl
scas
push
into
xchg
in
jnp
in
mov
in
dec
inc
mov
jne
mov
sti
ret
xchg
inc
aad
fs
lret
cmp
and
sub
cwtl
dec
mov
lret
push
and
dec
sub
das
add
or
xchg
cli
cmp
ret
stos
mov
loopne
in
lea
or
mov
sti
dec
or
adc
sti
mov
testl
insl
dec
frstor
adc
test
cmpsl
sub
add
stos
int
std
sar
fisubs
div
and
shlb
mov
pop
dec
insl
add
sub
in
sub
or
lret
jo
and
inc
sbb
not
inc
sub
out
mov
in
rclb
dec
ds
out
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
dec
jo
int
adc
fmull
adc
js
popf
loopne
lahf
pop
jb
sbb
mov
jae
xchg
lcall
lock
cmp
mov
xorl
pop
jae
movsb
icebp
rolb
add
xor
lret
dec
add
mov
das
add
or
lds
pop
aam
enter
and
into
insl
divb
js
push
mov
xchg
stc
cwtl
imul
stos
mov
sbb
xchg
movsb
pushf
nop
loop
repnz
lret
jnp
scas
inc
xor
sti
sbb
mov
jae
mov
pop
daa
xchg
jmp
rorl
test
rcl
sbb
inc
sbbb
push
mov
arpl
scas
xlat
pop
jne
adc
ss
aad
mov
mov
dec
jb
addr16
xchg
je
jecxz
jp
arpl
das
xchg
mov
into
sub
or
jge
sbb
rol
inc
mov
hlt
push
add
mov
inc
xor
stc
dec
hlt
adc
xchg
cmpsl
mov
idivb
cmpsl
int3
jmp
mov
mov
push
mov
mov
and
aad
popa
push
or
jns
lods
inc
jle
aaa
out
lret
jmp
push
mov
fcoms
clc
mov
pop
xchg
andb
inc
ret
mov
xchg
aaa
int
dec
add
xor
xchg
shrl
insb
and
test
add
ret
push
fdivr
mov
pop
add
mov
lods
sbbl
loope
fbstp
push
mov
xor
mov
or
loop
mov
inc
adc
test
pushf
fs
mov
push
out
mov
fsubr
ja
add
dec
mov
pop
xchg
mov
or
rorb
leave
jp
push
int3
dec
and
mov
std
sub
jbe
jno
cwtl
bound
pushf
cmc
xchg
mov
sub
xchg
adc
sub
or
pop
jb
fbld
mov
push
push
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
jge
test
xchg
sbb
adc
movlps
rcll
pop
pop
sub
int3
mov
cmp
mov
insb
pop
cmc
sti
rcrl
xchg
fisttpl
add
data16
sbb
addr16
push
push
dec
push
jno
ljmp
popw
push
call
sub
xchg
js
mov
popl
mov
inc
xor
cmp
jns,pn
push
adc
jnp
ret
loop
sbb
push
xchg
mov
sti
jae
push
fisubrl
fdivs
pop
mov
add
clc
jns
popf
pop
or
arpl
ja
sub
or
mov
jno
jno
fisubl
mov
pushf
or
jno
add
out
xor
nop
jae
cmp
inc
adc
cwtl
mov
mov
cltd
loope,pn
scas
mov
scas
call
jbe
fwait
push
in
sub
xchg
movsb
pop
xchg
incl
jo
cmp
data16
bound
hlt
xchg
push
mov
test
jmp
lods
adc
in
fidivrs
or
icebp
and
mov
loopne
jne
notb
dec
mov
inc
cmp
dec
push
xor
idivl
fsubs
insb
cwtl
into
sub
jo
mov
lret
cmpsl
push
or
icebp
or
mov
dec
inc
ficompl
mov
ss
mov
pop
insl
push
mov
xor
into
js
inc
jae
inc
stos
sub
cmpsb
iret
repz
pop
shll
fwait
jle
pop
rcrb
ss
fwait
cmpsl
mov
push
popf
or
mov
clc
push
adc
lret
movsb
loope
jns
xchg
aaa
mov
into
xor
icebp
add
dec
lea
xlat
xor
mov
jne
mov
xchg
fiaddl
movsb
ret
cmc
mov
xor
aaa
and
movsl
in
jno
cmpsl
ljmp
call
fnsave
loopne
imul
jmp
shr
mov
lcall
imul
jae
mov
inc
clc
cmp
add
movl
movl
movl
mov
jmp
outsl
or
or
popa
imul
nop
js
aas
xchg
js
sbb
adc
movlps
and
mov
jp
pop
int3
jp
imul
mov
mov
jg
popa
mov
dec
sbb
loop
fsubs
int
xchg
mov
pop
in
inc
fbstp
jg
out
adc
push
mov
mov
out
lea
movsl
mov
mov
xor
adc
xchg
push
insb
lods
loop
fildll
or
and
add
je
mov
mov
push
pop
jl
lahf
out
cmc
lret
adc
ret
rcll
adc
push
test
aam
sub
and
adcl
mov
xor
or
rclb
out
pop
pop
cmovs
leave
and
and
fnstcw
add
movsl
pop
pop
sbb
addr16
gs
and
push
add
test
sub
push
stos
dec
xor
test
test
nop
sub
xchg
daa
fdivrl
mov
cld
dec
inc
mov
xchg
das
mov
pusha
pop
mov
inc
mov
push
inc
idiv
push
or
jl
xor
mov
addr16
xchg
inc
push
fidivs
shll
test
inc
and
mov
bound
cmc
inc
push
dec
jg
or
and
ss
jns
fisttpl
push
movsl
jo
adc
in
xor
dec
fstl
fwait
jle
test
mov
or
ss
sbb
mov
mov
xor
dec
lea
idivl
movsb
test
enter
or
push
or
mov
sbb
sbb
push
pusha
clc
test
xchg
pop
sub
sub
cmp
inc
jg
jge
xor
sbb
inc
mov
cli
int
sub
pop
dec
pop
pop
push
cmp
xor
fists
addr16
push
cmp
and
add
dec
aaa
cmp
mov
std
repnz
mov
jnp
ds
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
cwtl
cmp
and
movlps
mov
adc
push
out
icebp
xlat
jns
adc
pop
xlat
int
stc
jns
sub
es
fcomps
push
pop
enter
rorl
test
sub
scas
out
cmp
jne
mov
mov
jle
or
inc
imul
cmc
pop
filds
dec
sub
mov
push
cmp
pop
adc
cmp
rorl
stos
mov
ret
stos
cmp
rcr
ficoms
xor
subl
jge
pop
outsl
hlt
inc
xchg
push
xchg
xor
test
and
xchg
test
les
pop
in
leave
jle
xor
add
jb
jp
cli
lods
insb
rolb
push
mov
and
loop
xchg
addr16
outsb
into
jb
std
cmpsb
andl
loope
ja
adc
xchg
stos
mov
es
push
sar
mov
imul
fwait
daa
add
into
ss
pop
aas
lds
xor
lahf
in
scas
pop
je
lock
lahf
mov
pop
test
test
repnz
jne
and
loop
push
jns
jp
outsb
fs
shlb
push
test
icebp
jp
aaa
mov
ja
mov
pusha
mov
lret
outsl
sub
mov
add
xchg
add
xchg
xor
in
and
and
aad
xor
cwtl
imul
fdivrs
and
ret
sbb
sub
inc
addr16
add
push
fsub
mov
je
pop
aaa
mov
sub
fucom
adc
inc
and
js
les
jae
cs
adcl
les
sahf
cmp
fs
push
add
gs
sub
cli
cs
cmp
rorb
dec
or
divb
repz
icebp
out
xor
imul
pop
aad
inc
pushf
cmp
mov
push
stc
cmp
cmp
add
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
stos
jp
in
adc
adc
movlps
mov
jg
mov
insl
shll
in
decb
mov
mov
inc
pop
sbb
and
pop
jne
stos
jns
sbb
mov
and
outsl
dec
mov
cmp
adc
cmpsl
pop
insb
imul
mov
insl
cli
mov
add
push
pop
fistpl
insb
out
repnz
and
ljmp
sub
adc
and
inc
push
rolb
cmp
xor
dec
popf
add
je
pop
mov
add
ret
xchg
push
inc
lahf
jecxz
mov
lds
fprem1
lea
pop
imul
mov
stc
out
inc
xor
mov
xor
cmp
xor
dec
dec
push
xchg
sti
and
rol
add
clc
add
pop
push
les
jbe
inc
sbb
ljmp
mov
test
stos
iret
mov
push
mov
jno
push
or
and
inc
mov
mov
aaa
pop
push
pop
push
scas
imul
sub
or
sahf
shrl
jl
mov
xchg
ficoms
xchg
insb
push
rcr
icebp
jp
sbb
into
xor
mov
xchg
popa
push
rcrb
ret
roll
stc
and
push
sbb
jb
dec
or
add
mov
test
leave
adc
mov
xor
adc
push
test
in
dec
adc
inc
dec
mov
jbe
jnp
jge
lock
imul
sub
cmp
xchg
leave
enter
pop
in
jmp
xor
and
push
ljmp
aam
call
cwtl
pusha
insl
ja
push
mov
pop
fmuls
push
cmc
xchg
cmc
add
stos
arpl
xor
mov
sahf
int3
out
lahf
in
add
pop
imul
push
cwtl
sbb
stos
fbstp
inc
xor
sub
jb
and
or
les
add
add
push
sbb
loope
jae
mov
mov
adc
fmull
adc
pop
loope
sbb
push
js
mov
mov
cmp
and
cmpsl
jbe
sub
dec
mov
les
xchg
add
push
mov
in
in
pop
push
test
mov
jp
mov
xor
or
mov
and
loop
ljmp
dec
stc
push
popa
pop
int3
stc
imulb
ds
nop
ja
jp
jne
das
mov
jg
dec
les
xor
mov
lods
or
rorl
int
and
mov
pop
push
arpl
aaa
fisttpll
fsubrs
xor
shr
cmpl
lret
cmp
adc
loopne
and
fsub
pop
inc
dec
in
inc
testb
sbb
sub
pop
stos
cmpsl
aad
pop
scas
pop
es
dec
and
mov
mov
addl
imul
inc
ja
shlb
imul
imulb
stos
incb
rcrb
and
adc
add
push
lret
ret
adc
stc
sbb
add
push
or
rolb
mov
jae
insl
std
adc
and
loope
push
pop
sub
push
loopne
xchg
dec
aas
mov
push
inc
flds
cmp
rclb
jg
xor
arpl
jecxz
imul
mov
sbb
push
icebp
push
fildl
jbe
jecxz
and
inc
lock
cmpsl
out
push
les
fistpl
mov
repnz
lahf
dec
jmp
or
mov
out
mov
mov
pop
out
push
test
out
dec
pop
imul
pop
int3
lcall
lret
push
sub
je
push
loopne
lock
cmp
push
jecxz
sarb
gs
push
in
ds
jbe
pop
into
sub
arpl
lods
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
inc
dec
mov
fmull
adc
mov
push
stos
pop
das
cwtl
mov
imul
in
mov
or
inc
adc
out
push
in
aaa
push
adc
jne
mov
mov
mov
repnz
std
aam
xchg
rcll
ljmp
adc
jge
sub
xchg
mov
cmpsb
pop
pop
cmp
xchg
mov
ja
lods
pop
sub
mov
jbe
pusha
sub
cmpsl
roll
dec
xor
pop
mov
fwait
push
into
dec
in
sub
jle
dec
and
cwtl
adc
mov
adc
pusha
mov
pop
pop
mov
pop
scas
xor
pop
scas
add
cmp
test
xchg
cmp
mov
mov
fnstcw
adc
mov
add
in
mov
pop
push
xor
add
cmpsl
lods
aad
pop
lcall
jg
fisubrl
or
ficoml
sar
sarl
outsb
jbe
pop
adc
in
dec
xor
loope
insb
mov
pop
loop
jecxz
sarl
movsl
push
push
cmc
dec
jge
neg
add
jle
pop
std
xchg
adc
pop
fcmovnbe
in
std
or
sti
adc
leave
repnz
fwait
add
sbb
adc
mov
jne
dec
mov
inc
or
in
mov
mov
call
arpl
lcall
mov
mov
push
cmpsb
xor
cli
add
movsl
popl
iret
mov
dec
int3
pop
lea
sbb
pop
push
sbbl
insl
jl
mov
sub
push
jg
stos
movsb
fisttps
rolb
add
sub
idivb
pop
mov
adc
lret
jge
iret
sbb
movsl
sarb
pop
addb
pop
mov
or
push
sbb
inc
xchg
push
fdiv
jge
mov
jg
xchg
sub
xor
inc
in
sub
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
dec
pop
test
aad
iret
jo
into
push
rorl
shrl
add
pop
leave
push
cli
and
sahf
mov
bound
jae
sub
mov
loope
inc
cmpsb
and
sub
mov
dec
or
or
stos
aaa
cmc
inc
and
in
dec
pop
xchg
stc
mov
pushf
mov
js
sub
dec
push
jecxz
outsb
lahf
and
add
fadds
cli
in
or
inc
mov
and
xchg
lods
pop
cmp
pop
sbb
or
lahf
leave
push
jb
push
fldt
lea
dec
add
decb
mulb
ret
push
inc
xor
and
clc
inc
cmp
mov
popa
lock
loop
es
jo
rorb
cmc
in
xor
insb
out
jns
stc
insb
mov
hlt
arpl
loope
and
inc
jmp
inc
insb
test
add
js
dec
inc
mov
fildll
hlt
std
xor
lret
in
inc
add
sbb
inc
cs
ss
jne
fisttpl
fdivl
cld
dec
fwait
popf
cwtl
outsb
or
mov
sub
loop
pop
dec
icebp
dec
iret
je
rcrb
pop
rorl
ds
fsqrt
leave
ds
inc
mov
xlat
aad
out
mov
cmp
daa
mov
scas
mov
lcall
mov
sub
fidivrl
cmp
add
inc
fs
adcl
or
outsb
hlt
in
mov
adc
mov
mov
imul
add
popf
lahf
lds
pop
int3
out
pop
cmpsl
mov
enter
jnp
pop
push
cltd
and
push
mov
ds
mov
sbb
sbb
sub
int
mov
insl
enter
sub
sub
ja
out
push
out
and
jbe
inc
cmpsl
shl
aad
sub
inc
addl
icebp
xchg
in
sti
fs
popa
mov
jae
mov
pop
pop
das
div
add
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
das
insb
add
ss
lds
stc
syscall
loope
popf
fs
lods
pop
sahf
mov
jmp
out
xlat
insl
in
rolb
cmp
mov
mov
adc
fs
adc
aas
push
shlb
aam
mov
mov
mov
inc
outsb
push
and
add
popf
inc
lods
pop
jle
rorl
mov
pop
movsl
xor
fdiv
pop
scas
repnz
push
push
in
pop
addl
movsb
dec
xchg
mov
aam
xchg
lods
test
inc
aaa
mov
jp
sbb
inc
sub
bound
mov
jl
inc
adc
jge
mov
push
sub
daa
bound
jge
inc
cmp
std
lock
sub
out
cmp
ja
cwtl
push
sbb
negl
pop
imul
push
loop
int3
mov
imul
pop
popf
pushf
mov
sub
lret
fisubl
xor
mov
sub
and
mov
enter
jge
mov
adc
movb
and
xorb
orl
adc
arpl
jl
stos
dec
push
adc
adc
dec
sbb
loop
popa
jle
lcall
cli
add
scas
clc
fdivrl
ret
dec
insl
outsb
jl
lods
mov
xchg
cmp
mov
pop
push
pop
in
sbb
aad
fimull
stos
inc
jecxz
add
push
mov
xchg
mov
jmp
mov
add
pop
lods
xchg
mov
sub
nop
mov
nop
test
in
mov
fwait
pop
stos
pop
sbb
fsubl
imul
cltd
add
mov
sbb
lods
sbb
addr16
mov
insl
scas
aas
push
sub
fidivs
jmp
inc
dec
sbb
mov
ljmp
inc
or
ja
add
inc
or
dec
add
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
ud1
jle
adc
fmull
adc
jmp
dec
xor
in
sbb
cltd
in
jp
in
or
add
jne
pop
xchg
les
repz
outsb
mov
jno
out
sub
in
pop
stos
mov
fisttps
in
out
jo
pop
adc
faddp
out
inc
scas
mov
pushf
xchg
lret
jae
stos
and
xor
push
xor
cmp
ret
sub
xor
testb
rcrl
mov
std
push
push
sub
movsb
mov
mov
rep
xchg
or
iret
fcmovnb
jg
mov
cmpsb
popf
fwait
mov
or
mov
inc
lcall
mov
inc
mov
cmp
cmp
int3
es
hlt
or
mov
fwait
cltd
cmpsl
xchg
lret
outsb
mov
gs
ficoms
and
mov
pop
mov
out
insb
ret
repz
sbb
dec
xchg
mov
push
orl
in
fbld
pop
inc
testb
mov
or
adc
loopne
int3
out
jae
and
rdpmc
aam
push
xchg
aam
mov
mov
insb
mov
mov
js
dec
jecxz
xor
mov
mov
test
imulb
jno
cmpsl
dec
mov
insb
adc
repz
in
mov
jl
xor
jne
pop
xchg
mov
inc
mov
sub
ljmp
rorb
addr16
mov
and
loope
dec
movsl
aam
pop
cmp
sbb
cmpl
mov
cwtl
add
les
hlt
lret
ds
cmp
cli
cli
stos
sbbb
rclb
out
xlat
cld
or
inc
dec
dec
push
aas
sahf
mov
add
lods
std
ret
ja
sub
inc
xchg
mov
out
jbe
and
int3
cld
neg
cmp
inc
xchg
clc
xchg
push
sahf
jge
leave
mov
loop
inc
arpl
lahf
xchg
xorl
in
add
test
add
enter
rorl
add
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
add
loopne
popf
cli
adc
fmull
adc
mov
fistpl
lret
or
jecxz
rol
inc
lret
aam
pop
push
fucompp
lock
mov
dec
and
loop
das
push
nop
out
jne
cltd
mov
and
xchg
xchg
jecxz
daa
popa
xchg
bound
aad
out
adc
dec
ljmp
cltd
inc
push
popf
push
cmp
pop
test
add
cmp
cmp
jle
mov
push
icebp
push
cmp
xor
in
adc
fmull
mov
jp
subb
clc
ret
fldenv
das
ret
push
cld
andb
jl
cmp
hlt
outsl
cli
scas
cmp
push
lock
pop
jbe
cmp
push
add
mov
push
insl
ret
xchg
ljmp
push
jnp
mov
sbb
insl
daa
jne
pushf
into
jecxz
dec
dec
sbb
stc
push
lods
sarb
cs
jne
inc
mov
xchg
ss
mov
sti
push
jnp
sbb
imul
push
test
ficomps
clc
fstpt
pcmpgtd
loopne
jb
push
xorb
inc
jmp
xchg
add
std
pushl
das
cmp
stc
inc
lret
mov
cmpsl
mov
fldl
not
movsl
xchg
adc
imul
cld
xor
or
cmpsl
bnd
add
aad
filds
lods
jle
mov
jb
mov
adc
xor
sarb
pop
faddl
pop
in
out
pop
or
dec
aad
push
negb
je
mov
xor
sub
xchg
xor
and
fs
jp
inc
push
xchg
xlat
loopne
hlt
add
mov
das
add
testb
mov
adc
rcrl
cmp
cmp
xor
push
lret
nop
cmp
push
insb
hlt
push
mov
push
pop
jno
xor
pop
adc
fcomps
jp
lret
jnp
js
clc
ret
sti
shlb
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
fwait
inc
aam
notb
adc
movlps
cmp
stos
pusha
aad
jne
xchg
outsl
loopne
cmp
fdivs
push
cmp
and
adc
and
pmuludq
push
sbb
xchg
scas
xor
enter
fnstenv
test
out
mov
mov
adc
jl
xor
repz
lock
ds
loopne
sub
loopne
bound
cli
das
test
lret
insl
push
push
push
mov
je
pop
idivl
sti
lcall
xor
loopw
xor
aam
jp
jne
and
dec
pop
lcall
xor
mov
fidivs
sub
and
lcall
xor
cmpsb
adc
fwait
dec
add
sub
sahf
and
outsl
push
adc
jp
test
cltd
js
pop
add
cmp
xor
jg
jg
jle
pop
mov
fs
inc
fmuls
jge
xchg
dec
sbb
shrl
mov
inc
mov
rolb
cwtl
mov
out
dec
imul
das
and
scas
rdmsr
movsl
lods
inc
int3
ficomps
and
cli
jmp
mov
push
scas
add
std
sub
dec
push
pop
in
or
data16
sub
loope
xchg
insl
dec
stc
orb
lret
or
imul
imul
jns
push
scas
fisubrl
cmp
push
mov
loop
mov
cmp
xchg
ficompl
pop
and
fnstcw
adcl
and
push
pop
adc
xchg
adc
lock
insb
and
fisubrl
repz
mov
in
mov
adc
dec
cmpsl
pop
jb
call
enter
test
ja
es
mov
es
mov
and
jno
xorb
mov
je
inc
rolb
and
shl
cmp
mov
dec
inc
mov
fisttpll
aad
je
add
jp
ja
outsl
xor
xchg
xorb
iret
fsub
out
sbb
xchg
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
pop
dec
pop
fucomip
ja
jnp
or
pop
xchg
fs
push
lea
mov
add
test
push
mov
gs
call
xlat
adc
push
adc
inc
leave
push
xor
leave
test
popl
or
xor
ja
mov
je
inc
xchg
sub
int
pusha
jp
fldcw
sbb
mov
in
ret
lds
mov
mov
lcall
jle
xor
imul
popf
cmp
pusha
inc
add
daa
push
or
popf
test
lods
adc
and
negb
or
dec
jecxz
mov
das
jne
sbb
lds
mov
inc
das
xor
push
rorl
sub
add
mov
push
dec
sub
jmp
add
mov
cmp
jg
sbb
mov
sbbl
push
pop
sahf
mov
mov
cmc
adc
mov
lods
mov
cmp
arpl
mov
mov
inc
sub
ret
dec
stc
push
imul
scas
sbb
sub
pusha
shll
mov
push
fldenv
jo
inc
sub
jns
jne
jg
int
pop
xlat
adc
fwait
and
mov
dec
loopne
mov
test
leave
sub
popa
xor
movsl
push
push
insb
xchg
cmp
xor
and
mov
or
xchg
lcall
cmpsb
dec
sbb
jns
inc
dec
inc
fnstcw
push
push
mov
stos
sub
fidivs
call
push
mov
jb
jne
dec
adc
inc
pop
enter
xchg
mov
xlat
lock
mov
in
add
fldenv
call
sbb
dec
aad
out
pop
xchg
jle
dec
sub
mov
push
data16
ljmp
cmp
into
adc
idiv
xchg
pop
xlat
or
cmpsb
sti
rcll
int3
xor
aam
shll
dec
rorb
xchg
ret
stc
mov
pop
push
jnp
cmp
push
pushf
mov
mov
flds
adc
mov
callw
shrb
lods
cwtl
xchg
xlat
flds
out
loope
frstpm(287
les
or
sbb
cmp
push
xchg
addl
stos
push
push
aaa
pop
sti
adc
add
mov
cltd
sbb
fwait
sti
push
inc
mov
pop
xchg
xorl
sbb
mov
xlat
mov
mov
jne
mov
fisubrl
subl
xchg
les
int
outsl
les
inc
pusha
imul
fisttps
or
mov
mov
add
push
push
adc
dec
push
mov
leave
lock
scas
xor
dec
xor
scas
push
xchg
js
test
arpl
test
sbb
or
fbstp
cmp
nop
arpl
ds
out
xchg
aad
xlat
adc
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
adc
jle
jmp
adc
dec
hlt
sub
mov
dec
sub
mov
pop
jg
in
icebp
out
jmp
ss
mov
dec
pop
jge
pop
outsl
lods
imul
pop
jp
push
xor
pop
push
pop
adc
hlt
pushf
xchg
mov
mov
dec
jp
mov
fiadds
xor
scas
test
cmpsb
scas
push
out
in
test
mov
repnz
int3
xchg
mov
lea
and
add
mov
xchg
add
shl
mov
push
pushf
cli
out
incb
pushf
loope
add
mov
and
pop
mov
fucomi
les
subl
dec
test
test
cs
stos
dec
jl
xchg
jp
imul
sub
in
or
imul
jl
dec
rorb
push
pop
mov
add
shll
dec
lahf
out
repnz
pop
mov
mov
xor
testb
mov
mov
mov
push
sub
mov
push
outsl
xor
int
cmp
lods
sti
addr16
jbe
dec
arpl
jge
jge
mov
sub
stos
xor
pop
ja
push
in
mov
outsb
xchg
mov
dec
fsubrl
and
xor
jmp
mov
mov
xor
scas
dec
btc
and
hlt
loope
add
rolb
imul
xor
jo
pcmpeqd
jle
add
mov
sub
jbe
mov
xchg
scas
test
lock
loope
aam
out
bound
pop
rcrb
jns
pop
mov
rcr
fsub
mov
mov
sub
lahf
outsl
sti
ss
pushl
sarl
popa
xchg
add
lods
lret
repnz
scas
xchg
outsb
sbb
cmpsl
inc
lods
outsl
in
jge
adc
jge
and
dec
pop
test
hlt
mov
sti
cmp
pushf
mov
or
popa
daa
out
fldt
ds
out
pop
outsb
cmpl
pop
outsl
xchg
xchg
push
sahf
clc
sbb
cli
cmpsb
sti
idivl
lcall
loopne
jl
xor
out
lea
fcoml
inc
cs
mov
fsts
rcll
in
jnp
addb
bound
shrl
icebp
xchg
stos
mov
and
dec
test
mov
daa
cmc
pop
flds
mov
adc
dec
in
mov
pop
xchg
dec
idivl
fnstsw
icebp
loopne
sub
es
std
fiadds
and
fs
in
pop
add
pop
lods
push
imul
dec
sub
sub
jae
pop
push
stc
out
mov
dec
mov
jl
bound
mov
and
in
lods
subps
ret
divb
roll
sub
sub
arpl
mov
mov
jae
testb
fwait
dec
cmp
pop
push
jl
or
mov
and
sub
lods
and
fisubrl
mov
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
mov
jo
adc
out
add
test
push
cmc
or
hlt
mov
pop
xlat
loop
xor
dec
dec
or
test
sub
sti
cmc
mov
pushf
push
mov
or
push
into
clc
pushf
test
jl
mov
scas
int3
iret
mov
imull
sbb
ljmp
mov
test
xchg
js
lods
lret
aas
adc
shr
adc
adc
mov
jnp
push
push
fisubrs
test
xor
outsl
push
xchg
sbb
clc
push
repz
aas
pop
shlb
test
outsl
loop
push
js
ret
sbb
frstor
xchg
stc
mov
pop
xor
sub
aas
jb
mov
jbe
push
stos
mov
pop
jbe
hlt
repz
xor
lock
inc
dec
jecxz
push
sti
inc
xchg
fwait
rcr
cmp
xlat
and
sbb
scas
xchg
inc
out
divl
mov
sub
xchg
daa
jns
mov
push
mov
push
lea
xchg
ret
aam
repnz
add
jns
cmp
mov
stos
and
mov
mov
lock
fs
xor
aam
mov
mov
fsts
cwtl
add
mov
lods
ja
aad
call
pop
jo
cli
fimuls
lahf
xchg
adc
ljmp
push
cmpsb
xor
mov
or
pop
dec
push
adc
xor
inc
mov
hlt
call
add
or
xorl
inc
mov
mov
and
ret
lahf
mov
icebp
in
call
int3
lea
ret
rcll
sar
call
ljmp
cltd
or
cmp
dec
popf
out
xchg
stos
add
jbe
mov
push
jbe
dec
mov
repz
ret
iret
pop
or
pop
aas
jo
xchg
inc
push
push
dec
sbb
sub
pop
inc
int3
flds
leave
inc
xchg
push
in
xor
jecxz
cwtl
xor
pop
sbb
jb
xchg
or
adc
sbb
dec
sti
inc
dec
push
sbb
push
and
dec
pop
mov
jns
lahf
in
pushf
jp
out
hlt
xor
idivb
rolb
and
mov
sbb
das
adc
add
dec
push
cltd
roll
mov
sbb
pop
in
call
sbb
adc
xor
cmpsl
push
lcall
dec
repnz
xor
sub
lods
fstpt
add
mov
sub
xor
sub
mov
stos
andl
das
sahf
and
enter
xor
push
jecxz
les
iret
arpl
sub
sbb
fdivrl
loopne
inc
faddp
inc
and
leave
inc
aas
adc
sti
and
inc
push
fnsave
sub
fnstsw
or
sub
sub
pop
pop
mov
xorb
xchg
aaa
lods
jmp
mov
pop
aad
jb
add
lock
or
pushf
cmp
stos
jb
sbb
push
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
pop
jle,pn
fstl
adc
adc
or
inc
or
or
sti
and
lock
and
sbb
pop
cld
sbb
shl
dec
rcrl
mov
jg
sub
outsb
sbb
mov
ja
xchg
outsb
addr16
and
sbb
and
not
and
cmp
mov
notl
in
xor
cmc
or
je
push
push
fstpt
ja
out
sbb
push
and
je
pop
aaa
cld
cli
andb
push
cwtl
test
jb
xor
addl
or
cmp
push
lahf
mov
dec
cmp
add
ss
adc
das
aas
cmc
ret
and
add
cmp
jmp
add
mov
sub
xchg
mov
xchg
jl
ret
or
pop
iret
jecxz
cmp
das
test
xor
push
mov
adc
call
adc
jl
pop
fists
pop
mov
dec
addl
lods
dec
dec
ljmp
adc
lret
inc
add
in
and
imul
aad
test
in
or
jmp
out
aaa
or
fmuls
daa
pop
cltd
or
or
cmp
popa
addr16
mov
shrb
dec
dec
and
jno
dec
add
pop
imul
pop
mull
mov
enter
int
xor
and
rcl
stos
sbb
sbb
push
cmp
sbbl
mov
and
mov
lahf
or
aam
js
sbb
stos
push
int
addr16
jp
sub
les
out
adc
out
jmp
push
in
in
cwtl
jge
leave
and
dec
clc
pop
popf
push
pop
xor
push
push
notb
lds
push
adcb
ret
cmpsl
pusha
outsb
xor
xchg
cmp
orb
jmp
add
mov
lods
test
imul
mov
mov
int3
in
outsb
idivb
movsb
cltd
or
push
iret
push
mov
loope
push
pop
push
divb
fdivrs
popa
adc
in
add
inc
cmpsb
pop
lret
loop
lcall
push
mov
insb
pop
test
lds
and
rclb
or
punpckhwd
in
adc
adc
or
jne
adc
jmp
mov
sub
inc
js
ja
call
jns
stc
mov
pop
shrb
pusha
sarb
fnstcw
out
push
add
mov
fs
cli
and
ja
lock
pop
es
xor
sbb
dec
les
repz
stos
lds
aam
cmp
sti
repz
adc
mov
pusha
test
add
jnp
sub
arpl
or
lret
xchg
out
sbb
adc
je
notb
pop
pop
clc
movsl
inc
int
jbe
pop
mov
popa
xor
push
daa
lcall
add
mov
mov
jmp
jg
inc
dec
and
cwtl
lods
repnz
jo
adc
outsl
xor
repnz
and
xchg
stos
mov
mov
mov
mov
pop
fimuls
mov
and
sub
inc
call
or
and
pushf
loop
out
pop
jae
pmaxub
mov
lea
jo
push
sbb
imul
sar
fists
lcall
push
xchg
into
cltd
push
popf
out
pop
call
mov
mov
negl
jne
mov
pop
add
fstpt
shrb
ret
push
add
mov
mov
pop
pop
je
js
pop
adc
gs
shll
or
lcall
aad
stos
dec
int
pushf
mov
lea
xlat
xchg
adc
mov
subl
or
cwtl
sbb
std
aas
mov
cmp
sahf
sub
or
test
xlat
add
mov
test
pop
dec
nop
pop
mov
cmp
insb
sub
fs
movsl
mov
arpl
int3
adc
outsl
add
xchg
jecxz
pushaw
dec
sarl
scas
mov
stc
jbe
mov
sbb
jno
adc
xchg
fisttps
push
faddl
sti
add
mov
xor
xchg
pop
sti
jb
sbb
or
sbb
push
in
push
out
pop
dec
enter
and
xor
out
je
cld
push
rorb
outsl
jns
jnp
sbb
sbb
hlt
jg
adc
test
mov
movsl
mov
shll
adc
test
mov
jne
mov
lret
sub
sarl
cmp
xchg
mov
or
mov
or
aam
es
out
mov
shll
cmc
hlt
adc
pop
inc
jle
call
fistpll
pop
cmp
je
insb
mov
lret
int
sbb
push
mov
mov
xchg
mov
mov
cmpsl
dec
inc
push
inc
mov
add
fisttpll
cmp
jne
movsb
cmpsb
or
test
jbe
mov
pop
frstor
mov
pop
ljmp
xchg
and
push
inc
out
aad
mov
in
xor
test
adc
insb
pop
push
add
xchg
add
les
inc
mov
aaa
inc
rol
sub
stos
cmpsl
movsl
push
loope
adc
adc
mov
scas
popa
inc
int3
inc
inc
sub
aad
lock
in
sub
in
movsb
xchg
movsb
stos
dec
orl
fwait
leave
and
inc
stc
pop
xor
adcb
mov
sbb
mov
vprotd
ja
dec
xchg
add
lret
stos
mov
test
aaa
mov
cmp
mov
lahf
push
adc
push
mov
xchg
or
mov
repz
imul
std
xchg
sbb
add
xchg
ror
mov
mov
rcll
and
add
pop
sub
hlt
and
sahf
mov
arpl
scas
cs
fstpt
mov
xor
ljmp
push
pushf
mov
mov
add
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
ror
lret
lret
adc
jo
adc
call
inc
rcr
sbb
push
ja
int
outsl
pop
lret
les
repnz
in
mov
mov
adc
dec
push
xchg
or
test
push
ds
sbb
sbb
adc
or
xchg
fsubrl
popf
sub
xchg
lods
xor
mov
imul
dec
sbb
jge
or
mov
push
jge
ds
call
push
shrl
in
jae
fcomps
mov
sarb
scas
in
movsl
mov
push
mov
in
pop
mov
loop
sub
push
ret
call
ficoml
imul
outsl
adc
mov
mov
loope
mov
notb
xor
and
xchg
test
in
nop
ds
fstpl
jge
daa
jbe
ss
mov
imul
xor
fldt
fisubrs
cwtl
xchg
leave
push
xor
xchg
leave
xchg
pop
push
popa
sahf
rcll
ja
scas
or
ret
rorl
test
pop
popf
jb
sbb
pop
cmc
enter
push
jo
pop
cmp
pop
divl
jbe
xlat
cmp
jmp
rclb
pop
loopne
inc
mov
add
push
sbb
outsb
inc
mov
jns
jb
nop
and
and
jg
or
nop
mov
js
arpl
and
insb
outsb
mov
mov
xchg
adcb
ljmp
repz
jno
sarl
push
shrb
dec
push
pop
sbb
inc
flds
fsubs
scas
into
mov
in
add
test
add
es
cmp
ficomps
pop
into
inc
roll
mov
xchg
push
pop
out
int3
sub
mov
xor
inc
cmpsb
pop
mov
int
mov
push
or
or
jge
mov
aad
ljmp
popl
mov
pop
jle
sub
cmp
clc
lahf
or
inc
or
adcl
cmp
js
popa
or
cs
pmulhw
test
push
cli
fdivl
adc
sub
cmpsb
lret
pop
xor
add
and
xor
in
std
cs
xor
push
mov
insl
cmpsb
inc
ret
fisubrl
lds
clts
leave
mov
pushf
cld
dec
fdivl
xchg
shrb
out
dec
dec
sbb
xor
jno
daa
stos
xor
adc
lea
adc
add
gs
dec
sbb
mov
jns
pop
add
jae
dec
or
pop
push
and
cltd
outsl
fcmove
cmpsl
mov
pusha
jge
leave
inc
xor
scas
xchg
pop
in
cmp
shr
push
les
xchg
mov
hlt
or
loop
push
and
ficoms
cmp
ja
mov
dec
popf
dec
hlt
mov
ss
das
xor
mov
sbb
ja
pop
fidivl
rorl
enter
pop
int3
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
das
insl
gs
xor
xor
sub
sti
inc
add
and
dec
ss
pop
imul
addr16
push
push
sub
mov
test
push
int3
inc
adc
mov
fsts
push
push
pusha
mov
out
ljmp
dec
mov
test
pushf
jl
mov
or
ret
jg
or
sbb
pop
sub
loop
stos
out
and
adc
xchg
lahf
mov
sub
xor
xor
das
pop
jbe
inc
mov
cld
push
test
jp
sar
pop
fcoml
orl
push
push
pop
lea
js
push
xor
pop
sahf
fdivs
jbe
jle
in
sub
dec
test
lea
lret
in
jns
sbb
loop
repz
popa
inc
sahf
adc
xor
rol
pop
lods
roll
aam
sahf
sbb
or
outsb
mov
pop
cld
repz
loope
repnz
xor
les
jg
inc
popa
jae
adc
jle
inc
sahf
imul
addr16
cltd
inc
xlat
fsubrp
sub
mov
mov
adc
ss
xchg
loope
les
in
dec
loop
jbe
mov
inc
jns
nop
add
mov
aam
dec
outsl
outsb
mov
adc
cmpsl
or
cs
adc
xor
add
or
jno
dec
dec
pop
out
es
sahf
xor
pop
mov
fldl
ljmp
inc
mov
cwtl
pop
sub
pushf
mov
or
xchg
lock
jl
add
add
gs
add
push
pop
pushf
lahf
xorl
mov
sbb
push
lcall
rcr
rolb
push
cmp
or
imul
movsl
jge
test
cli
add
add
sbb
pop
push
out
pushf
mov
add
cmpsl
xchg
inc
cs
out
aaa
int3
outsb
fcomip
mov
mov
mov
mov
rclb
lea
mov
lret
push
xor
sbb
lret
int3
mov
mov
dec
sti
jnp
mov
dec
jns
ds
loopne
dec
jecxz
aam
les
xor
scas
mov
mov
fwait
mov
xor
insl
je
fadd
aad
jecxz
mov
mov
dec
sti
imul
push
cmc
xchg
cmp
fisttps
xor
push
pop
les
or
adc
sti
pop
cmp
pop
add
mov
iret
adc
inc
andl
pushf
es
hlt
not
movsb
xchg
jmp
mov
out
fistpl
mov
rorb
add
pop
sub
cmp
jb
pop
inc
xchg
xor
sbbb
leave
or
and
in
add
pop
stos
jg
sbb
sub
cld
lret
lea
jecxz
bound
movsb
mov
repz
out
sbb
cld
je
mov
pushf
jle
rorl
or
cmp
push
xchg
cmp
sbbb
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
les
rcll
jo
adc
das
lcall
jl
les
icebp
into
inc
fiadds
pop
mov
push
mov
pusha
sarb
xchg
and
cmp
js
ljmp
lea
das
pop
mov
or
and
mov
xor
adc
inc
add
xchg
in
xchg
push
pushf
cli
jno
or
jp
lahf
pop
xchg
pop
pop
into
loopne
decl
sub
scas
fdivl
sub
lret
mov
push
rcl
xor
hlt
bound
dec
frstor
mov
sarl
stc
push
mov
mov
mov
fsts
out
push
ds
pop
aas
push
fldcw
mov
fmull
cmp
cmp
push
rolb
jnp
jmp
mov
dec
jg
cwtl
add
lret
scas
pop
inc
adc
outsl
pop
adc
or
cltd
inc
in
pushf
cmpsl
cmpb
push
mov
push
pop
xchg
sbb
push
mov
add
push
pop
cmpsl
adc
aad
push
or
loopne
leave
pop
or
sbb
shl
xchg
mov
popf
mov
jae
push
lods
pop
sbb
adc
mov
or
jmp
jb
inc
pop
or
int3
cld
enter
cmp
xchg
pop
sub
inc
push
stos
sbb
js
jge
rolb
jg
or
sbb
cmpsb
inc
ja
lahf
sahf
cmp
xorl
jmp
repnz
pop
jmp
inc
lock
test
adc
push
clc
xchg
xchg
dec
das
sub
rcrb
jg
dec
arpl
pop
clc
pop
or
push
fnstcw
rorb
mov
pop
or
sub
or
bound
jnp
mov
ds
jg
mov
and
pop
add
adc
pop
pop
lcall
fldl2t
sub
test
xor
jecxz
jb
mov
mov
lds
mov
jmp
mov
mov
push
iret
xor
and
test
or
andb
movsb
fisttpll
pop
mov
jle
add
mov
adc
or
adc
ss
lret
xor
lahf
pop
pop
and
loope
das
mov
mov
mov
imul
fimuls
xor
jb
shl
push
dec
lea
cmp
jg
xchg
cld
cmp
test
xor
cmp
mov
rcl
cs
lret
mov
inc
ret
aad
xchg
jb
ds
mov
pusha
insb
adc
mov
or
adc
imull
sbb
lret
insl
sub
nop
adc
dec
jmp
xor
and
in
fdivrs
dec
fisubrs
cld
repnz
xorb
arpl
push
mov
push
jg
jne
les
sbb
cmp
jl
enter
insb
add
pop
adc
into
jp
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
insl
insl
pop
lods
push
mov
adc
adc
jg
push
xor
jl
cmp
pop
pop
cld
cltd
shl
or
sub
loope
pop
pop
int3
sbb
inc
sbb
jo
push
fsubrs
inc
and
push
addr16
test
lea
jecxz
loopne
popa
jecxz
mov
jae
mov
mov
and
stos
fisubl
mov
clc
test
test
cmpsb
push
rcrl
push
dec
jbe
pop
fisubl
mov
icebp
inc
lcall
int3
mov
loope
sub
xchg
add
xchg
jbe,pt
mov
mov
push
sti
outsb
into
in
scas
mov
cs
inc
jb
xor
mov
clc
cmp
sahf
xor
mov
movsl
push
ljmp
pop
dec
adc
das
cltd
mov
jns
inc
call
repz
push
ss
dec
or
sbb
lcall
adc
dec
mov
cmc
fwait
notb
xor
push
jae
out
push
push
lret
fs
xor
push
fyl2xp1
or
push
rcll
repz
rclb
xor
jo
hlt
notl
sub
and
push
in
jmp
pushf
out
mov
jae
cmp
or
jg
lods
roll
test
inc
ret
scas
dec
cmp
je
rorb
sahf
inc
bound
xchg
mov
xor
sub
lods
jnp
xorb
xchg
ret
ljmp
mov
pop
push
idivb
or
xlat
int
push
fdiv
sub
mov
dec
xchg
push
aas
xchg
cmc
pusha
addr16
pusha
jo
xor
xchg
xchg
pop
dec
and
mov
jg
loopne
pop
xor
cwtl
in
mov
sub
cli
xor
mov
sbb
pop
sub
xlat
xor
icebp
push
mov
in
cmpl
repnz
pop
sub
cmp
xlat
fists
sbb
jle
aaa
or
lods
iret
dec
ljmp
pop
popf
sub
fmuls
mov
jle
lea
pop
cmpl
int3
subb
cmp
push
add
mov
mov
das
push
loopne
cmp
inc
div
mov
les
push
or
push
jle
cmc
push
mov
lods
pop
xor
or
es
lea
sub
sbb
adc
push
and
add
ljmp
call
std
adc
mov
pop
mov
rcr
out
aas
add
xchg
fimull
add
inc
test
cs
test
negb
mov
rdpmc
cmp
mov
fisubrl
mov
pop
lock
insb
lret
pop
add
fwait
rcrl
or
mov
cli
std
dec
mov
ds
sbb
idivl
mov
jb
push
and
daa
enter
push
inc
adc
ds
sbb
repz
adc
pusha
push
pop
adc
clc
adc
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
dec
xor
mov
fwait
aam
mulb
aam
push
jne
inc
mov
insb
call
sahf
ret
mov
add
addr16
inc
lods
outsl
jo
sub
sbb
xor
mov
rcl
push
fidivl
insb
out
sub
inc
dec
cmp
clc
xlat
inc
sub
push
or
in
in
dec
lods
xchg
xchg
mov
clc
stc
enter
push
jg
fisubl
or
lds
and
fcomp
jp
dec
adc
mov
rolb
pop
lock
mul
xchg
enter
lea
cmp
outsb
sbb
inc
sub
in
sbb
js
jno
cld
call
pop
mov
mov
inc
mov
shll
test
test
stos
loopne
jo
xor
dec
cmc
sbbb
pop
or
stos
push
pop
inc
clc
cld
das
xchg
adc
inc
clc
pop
cmc
lret
or
and
add
sub
out
and
push
adc
pusha
and
dec
cmpsb
jo
pop
mov
push
jl
xlat
fnstsw
enter
test
cmp
jle
int
call
out
jg
call
leave
mov
mov
fcoms
into
xchg
ret
bound
pop
xor
xor
in
push
das
ss
xchg
std
mov
popf
fbstp
xchg
jno
sti
or
jmp
sub
xor
cmp
popf
enter
movl
pop
adc
cld
add
das
mov
das
cmp
stos
repz
or
sub
cmc
sarb
int3
stos
pop
push
push
popf
aaa
adc
dec
popa
bnd
and
mov
pop
xchg
xor
and
insl
pop
test
sti
insb
lcall
aaa
addb
push
push
xor
cmova
mov
lds
hlt
push
dec
push
dec
out
inc
and
xchg
pop
mov
sahf
xchg
xor
bound
add
in
rorl
push
add
push
jmp
push
pop
push
js
push
movsb
js
stos
adc
stos
movlps
push
dec
in
loope
pushf
push
jb
andl
dec
add
aam
or
inc
inc
pop
mull
dec
dec
call
sarb
inc
jge
inc
push
adc
mov
add
mov
jmp
add
std
add
pop
ljmp
dec
nop
push
sbb
out
out
insl
mov
jmp
xor
inc
rcr
popf
dec
mov
sub
dec
inc
or
jp
adc
add
sub
arpl
mov
fdivl
and
cmp
mov
cld
sbb
add
mov
bound
dec
imul
je
lock
inc
in
xchg
inc
sbb
pop
movsb
test
jp
pop
in
and
xor
mov
jecxz
jp
xchg
aas
stos
js
lods
and
ret
pop
into
lahf
lea
push
lahf
gs
fisubs
jno
mov
xlat
xchg
pushf
or
jmp
xor
pop
cmp
mov
mov
jne
sub
sub
and
popf
adc
mov
jns
mov
mov
jae
rorb
in
ja
cwtl
inc
into
mov
dec
adc
mov
mov
jg
insb
cmp
push
daa
dec
sbb
mov
fbstp
ja
jae
sub
dec
rclb
pop
sub
lods
loop
inc
repz
and
ret
or
mov
fsub
repnz
fidivl
push
aaa
and
rolb
jae
iret
cs
imul
cmp
stos
int3
sbb
imul
jmp
pop
pop
lret
fwait
ljmp
xchg
add
push
mov
mov
iret
neg
sub
fs
jp
mov
adc
pop
out
xchg
cmpsb
jnp
movsb
xchg
pop
mov
pusha
inc
outsl
jne
xor
imul
mov
out
push
inc
repnz
mov
int3
mov
icebp
sbbl
jle
xor
sub
outsb
sbb
jb
cs
dec
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
idiv
jle
cmpsl
adc
stos
movlps
jmp
push
mov
lods
pushf
rclb
mov
pusha
sbb
into
and
loop
mov
and
xor
bound
mov
add
and
and
xor
add
push
inc
repz
fdivrl
fidivl
pop
jl
sbbb
mov
cmp
inc
and
arpl
xchg
inc
outsb
ds
push
lods
movsb
es
dec
xchg
popf
out
xorb
outsb
inc
cmp
mov
call
rclb
out
ss
into
xchg
sub
data16
les
lcall
pop
mov
decb
adc
fldl2t
xchg
std
stos
mov
mov
nop
xchg
push
enter
cmp
and
push
fidivs
jp
ds
cs
jo
lret
pop
push
mov
pop
movsl
and
out
and
jns
test
and
lret
pop
push
repnz
fdivl
imull
sub
mov
cmpsb
lods
ret
vfmaddsub132ps
stc
add
aas
icebp
loop
out
or
rorb
das
push
aas
push
inc
sub
mov
ds
sbb
xor
jmp
cltd
push
leave
mov
ljmp
pop
jno
jp
loop
mov
xlat
mov
or
arpl
add
dec
push
lea
push
add
or
jg
dec
ret
pop
cmc
dec
cmp
mov
js
bound
mov
lea
sub
popf
sbb
aas
adc
int
push
nop
mov
pop
test
movsl
arpl
cmpb
shrb
outsb
subl
loop
out
bound
push
push
call
pop
push
gs
out
xchg
sbb
cmpsb
cld
push
hlt
lcall
in
in
mov
mov
movsb
mov
jmp
or
mov
cmp
pop
lods
xchg
in
xchg
lret
ds
pop
arpl
pushf
fs
lahf
xchg
data16
into
pop
xor
imul
pop
inc
mov
jle
lock
or
inc
in
adc
inc
or
and
or
inc
in
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
xor
jle
mov
adc
push
leave
jmp
mov
mov
inc
mov
repz
mov
lahf
loopne
jl
and
inc
stos
stos
cmpsl
or
sub
inc
insl
mov
pop
into
jns
and
adc
mov
hlt
fwait
movl
mov
cwtl
mov
add
xchg
xchg
or
mov
fdivrl
xchg
repz
adc
iret
sub
cmp
aas
or
mov
cmpsb
mov
mov
push
push
push
mul
imul
call
cmp
out
test
sub
sahf
or
push
cltd
mov
add
movsl
out
mov
pop
adc
pop
inc
std
push
fisttps
mov
and
test
sub
inc
cs
imul
in
dec
cmp
ret
and
mov
mov
mov
fisubs
add
xor
add
jb
sub
jecxz
xor
xchg
mov
xchg
adc
ljmp
cmp
into
xchg
xchg
dec
or
cmp
data16
dec
jne
push
mov
inc
outsb
xor
pop
dec
sub
mov
fisubs
pop
adc
dec
imul
imul
jmp
push
out
pop
xchg
add
shlb
hlt
xchg
cmp
popf
xchg
adc
out
iret
push
test
test
aam
xchg
and
sbb
cmp
cmp
jp
inc
scas
rcl
fnsave
dec
in
fistpll
push
push
mov
push
nop
xchg
dec
inc
and
js
xchg
push
add
xlat
incl
mov
subb
mov
push
add
lcall
in
inc
adc
das
pop
aas
jge
fadds
jns
sub
test
xchg
cmp
push
push
jecxz
subl
scas
dec
test
aaa
fists
jb
rclb
aas
and
xor
shr
out
mov
int3
lds
sub
push
cmp
mov
xor
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
cld
cs
adc
stos
movlps
mov
cmp
push
pop
adc
shrb
mov
cmpsb
out
xchg
mov
rcl
or
in
jo
inc
adc
imul
repnz
idivb
std
enter
cmp
loop
ror
aas
ljmp
es
hlt
inc
fdivrl
outsb
lds
xor
jne
imul
enter
sbb
sub
xlat
out
in
and
icebp
jl
insb
push
mov
dec
cmpl
sarl
sbb
xchg
enter
ficoms
mov
pop
out
mov
imul
movsb
mov
out
dec
mov
push
mov
or
jne
popa
mov
add
dec
xchg
lret
xchg
or
icebp
mov
mov
movsb
loop
dec
popa
dec
pop
pushf
mov
adcb
cwtl
push
fistpl
push
test
xchg
outsb
jmp
decb
pop
mov
call
mov
cmpsl
adc
mov
ja
cwtl
or
mov
repnz
in
fmull
fstl
xor
or
in
cltd
push
dec
dec
adc
int
cmp
pusha
scas
lret
xchg
inc
sub
movsb
into
xlat
fimuls
adc
and
xchg
loop
popa
xchg
mov
insb
or
ja
cltd
xchg
add
xor
mov
loopne
adc
dec
adc
lret
fstps
pop
lcall
dec
call
ret
adc
mov
push
mov
dec
mov
sub
lock
mov
mov
adc
sub
adc
inc
inc
xor
fsubr
mov
push
cwtl
imul
test
fdivl
mov
mov
leave
movsl
xchg
adc
aad
cmpsl
push
sbb
mov
repz
shlb
arpl
fstl
add
mov
mov
and
loopne
push
or
cwtl
sbb
test
movl
mov
mov
and
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
stc
inc
sub
mov
in
fstps
repz
dec
shl
loopne
xchg
stos
dec
cmp
lret
pop
pushf
xchg
sarl
jl
sbb
push
aas
popa
out
lcall
push
sbb
push
mov
mov
pushf
mov
or
das
test
add
push
jg
mov
out
dec
push
pop
push
mov
xchg
dec
insl
xor
cmc
xor
rol
inc
sbb
or
cli
outsb
adc
push
xlat
inc
dec
lea
adc
pop
mov
adc
mov
dec
dec
mov
push
sti
daa
xchg
inc
dec
fdivrp
in
add
xor
insl
inc
dec
jb
jmp
push
add
fsubrs
sahf
and
push
and
sarb
push
adc
inc
insb
push
enter
daa
mov
or
pop
outsb
testb
andl
enter
lret
lret
push
push
mov
xchg
push
jb
push
pushf
push
pop
push
or
into
xor
out
in
jmp
stos
outsl
dec
pushf
sbb
mov
mov
int
leave
cmp
mov
add
dec
push
and
repnz
push
push
fistl
iret
pop
ss
xor
push
roll
inc
cld
imul
lods
pop
cld
es
sahf
outsl
in
or
cld
addb
out
mov
cmpsl
leave
push
popa
pop
push
shll
jb
test
arpl
testl
xor
cli
repz
leave
xor
dec
mov
jno
cmp
fwait
imull
adc
imul
stc
jns
shr
dec
sub
jbe
pop
push
lea
outsl
push
mov
jl
lcall
sbb
jg
mov
cmc
ja
repnz
loop
mov
xor
xor
pop
sti
hlt
sbb
and
cmp
mov
scas
jmp
sbb
test
repnz
mov
out
test
cmp
pushf
and
sub
int
dec
sub
fs
sub
cmp
icebp
add
repnz
cmp
pop
gs
icebp
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
leave
movsl
das
ds
xor
in
inc
xorl
jg
out
pop
and
popf
sub
pop
push
imul
sub
mov
jge
add
sub
mov
lea
popf
outsb
mov
stos
jle
arpl
movl
test
inc
movsl
jnp
into
xchg
adc
dec
cmp
push
es
sbb
fidivl
fs
lods
mov
lods
push
cli
addl
repz
jnp
arpl
shll
mov
mov
mov
mov
cmp
adc
std
pop
gs
icebp
jno
loope
cmc
or
imul
loopne
je
mov
xchg
daa
dec
mov
aad
mov
jmp
dec
cmp
push
outsb
out
rclb
shll
or
sub
push
xchg
xchg
inc
jb
mov
xor
lds
pop
les
mov
pop
rorb
dec
push
jno
jb
cmpsb
mov
in
xorl
push
mov
adc
jbe
bound
xor
je
pop
push
loop
icebp
push
push
insb
fdivr
fldl2t
cmc
pop
mov
push
shr
sahf
xor
pop
jo
out
icebp
or
inc
jp
push
das
lock
add
jno
xchg
mov
into
add
movsl
fldenv
clc
cs
mov
sub
cs
aam
fildll
std
push
sahf
xchg
mov
or
mov
pop
mov
dec
fnstsw
sbb
fcomi
inc
jl
sbb
sbb
cwtl
cli
bound
sahf
inc
pop
inc
movq
xor
push
insb
xchg
mov
xor
data16
inc
movsb
mov
shrb
and
and
adc
mov
es
ret
jl
mov
icebp
mov
push
das
sti
insl
les
mov
push
dec
daa
add
jb
shlb
imul
scas
testb
push
subl
iret
push
pop
xchg
in
stos
scas
movsl
outsb
push
test
add
into
xorl
lock
cmpsl
test
mov
cltd
or
cwtl
inc
xor
popf
jge
push
adc
iret
xchg
jmp
mov
std
xchg
rorl
or
frstor
sahf
fldcw
mov
push
roll
push
mov
inc
cld
out
and
adc
jns
push
mov
push
push
cwtl
sub
and
mov
push
xor
inc
std
cld
arpl
sbb
or
and
ja
insb
mov
mov
fnstenv
addr16
int
pop
fst
iret
mov
shll
bound
pushf
test
mov
rorb
pop
mov
xor
mov
arpl
push
test
adc
push
jae
fldt
xchg
lahf
sub
addr16
ljmp
jo
iret
std
xor
notb
out
aaa
pop
pop
push
sub
sbb
cwtl
xor
xor
lods
or
insl
nop
les
xor
pop
sbb
mov
lea
lret
or
aaa
fsubs
scas
jmp
or
jge
mov
xchg
cld
dec
add
xor
add
mov
shl
mov
cmp
fsub
pop
mov
sarb
popl
add
sbb
jno
inc
mov
jae
sahf
aaa
imul
xor
push
test
leave
sub
mov
inc
aas
aad
and
xchg
sub
push
or
mov
das
mov
cmp
rcrb
sahf
adc
jns
add
xchg
sbb
jae
js
xchg
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
daa
inc
stos
loop
adc
pop
adc
adc
or
lds
and
dec
mov
xchg
jns
sub
imul
xchg
shr
push
pop
out
push
clc
jae
rclb
fcmovnb
ljmp
jg
sub
xor
and
sbb
pusha
mov
out
push
push
jecxz
push
xchg
mov
mov
cmpsb
mov
jo
or
pop
sbb
and
mov
fdiv
add
aad
jb
cmp
mov
and
ret
mov
xchg
xlat
push
test
push
lds
mov
push
lods
dec
fiaddl
hlt
xlat
sub
js
mov
mov
ds
sub
sbbb
xchg
lcall
clc
xchg
aad
test
addr16
in
mov
mov
pop
sti
sub
fs
mov
jo
js
sarb
mov
sbb
shll
xor
mov
dec
rolb
cmp
fsts
jns
push
sahf
int
pop
inc
cmp
ds
and
mov
leave
repz
mov
out
dec
fwait
cmp
je
stos
xor
adc
ss
cmpsl
adc
mov
popf
in
jnp
imul
jno
mov
int
inc
add
sar
enter
jno
bswap
out
pop
loope
xor
test
fs
test
adc
or
inc
cli
in
mov
mov
pop
pop
addr16
incl
in
scas
xchg
fcomps
mull
subb
out
add
inc
adc
fsubs
inc
rorl
fwait
sub
and
inc
or
jbe
mov
pushfw
movsl
call
rclb
into
adc
lods
jo
loop
lea
jge
daa
pop
out
popa
adc
stos
pop
js
xchg
sbb
mov
and
pop
push
mov
mov
das
shl
jno
sub
arpl
sub
rcrl
test
inc
push
pop
incb
inc
out
cli
rcrb
das
ret
js
push
sarb
and
cmpsb
mov
hlt
lds
pushf
or
js
mov
pop
ds
fcoml
sbb
mov
rcll
cld
movsw
pop
mov
in
icebp
int3
xchg
repnz
mov
loopne
bound
xor
rclb
pop
dec
sbb
dec
xor
lret
push
loop
subl
inc
mov
daa
jae
insb
add
pop
fmulp
pop
ljmp
add
pop
push
loope
popa
ljmp
xchg
xor
gs
ret
loop
xor
sarb
cmp
push
pop
mov
stc
or
sub
mov
lcall
and
xchg
mov
repz
insl
cmp
pop
cmp
sub
out
jg
cltd
movsl
pop
push
rorl
mov
jge
push
sub
in
and
dec
and
sub
hlt
shl
popa
inc
pop
imul
stos
or
out
js
movsl
mov
cmp
or
xchg
pop
mov
fcomps
fcomip
outsb
inc
jmp
jo
in
outsb
pusha
jb
jb
mov
popl
mov
jbe
push
lods
jle
mov
sub
adc
mov
sub
aam
mov
or
scas
xor
sub
clc
popa
mov
rclb
sub
jns
sbb
cmp
mov
sbb
ja
ret
nop
dec
pop
jb
sbb
les
pop
dec
xchg
mov
or
mov
cmpb
dec
add
push
and
fists
cmp
pop
int
push
mov
inc
ret
add
data16
push
jg
shlb
mov
ss
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
std
ss
mov
adc
movlps
mov
sub
aad
or
jmp
sub
lea
divl
loop
push
and
je
xor
aas
movsb
and
sbb
loopne
mov
jns
jo
pop
push
or
cs
arpl
rcll
lret
out
pop
adc
push
cmp
stos
mov
mov
mov
shrl
cmp
das
mov
in
mov
inc
push
data16
push
int
xchg
fbld
or
cmp
out
loopne
out
test
mov
ljmp
test
push
in
push
sti
sti
loope
in
outsl
incb
fnsave
xchg
sbb
adc
sahf
cmpsb
push
pop
mulb
mov
scas
int
out
icebp
insb
xchg
mov
sbb
mov
push
dec
jl
loopne
ss
sbbb
xchg
jecxz
inc
push
fidivrl
mov
out
sbb
adc
in
fiaddl
jnp
add
insl
cs
in
pusha
mov
je
aad
or
inc
dec
fstps
lods
jmp
cld
pop
and
idivb
pushf
std
nop
aas
cld
mov
hlt
mov
je
push
xor
push
sub
mov
in
add
ret
cmpsl
out
pop
or
or
cld
mov
in
test
xchg
xor
ret
je
and
mov
push
add
test
sarl
fs
das
inc
mov
aad
xor
test
pop
nop
cmpsb
ret
pop
aad
dec
mov
or
call
lock
cs
push
mov
clc
xor
mov
fisttps
popa
pop
sub
pop
jae
inc
je
jl
fs
fcoms
sbb
xor
push
jmp
jae
xchg
dec
fstl
or
imul
rorl
mov
sbb
arpl
divl
test
leave
js
in
pop
push
adcb
jne
cmp
pushf
or
les
xor
inc
out
pop
jecxz
test
jle
cltd
add
mov
loope
outsb
jne
ret
add
xlat
jb
test
es
je
mov
out
push
sbb
in
iretw
loope
insl
fwait
xchg
test
cld
xchg
jmp
test
nop
xchg
int3
xor
and
rorl
jp
sub
out
bnd
stos
rcll
repz
sbb
push
inc
mov
icebp
ret
into
mov
sbb
xchg
mov
scas
sti
ret
sbb
aaa
int
cs
push
filds
out
sub
icebp
add
repnz
fs
ret
imul
mov
and
or
and
push
shlb
add
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
fldcw
out
insb
xchg
add
ret
sbb
xor
jae
int3
mov
jp
add
hlt
push
dec
sbb
push
test
sahf
cmp
mov
scas
jmp
push
fcomip
jnp
dec
xchg
lret
pop
and
dec
push
pusha
push
pushf
sub
mov
out
mov
cli
hlt
mov
ret
adc
xlat
scas
sbb
pushf
mov
test
insl
push
cltd
pushf
aaa
push
loop
in
mov
aam
loop
dec
mov
loope
cld
lds
mov
decb
sub
imul
stos
inc
shrb
jge
push
inc
loop
gs
push
pop
add
xchg
dec
mov
push
es
mov
mov
xchg
and
test
icebp
and
pushl
pop
pop
cmp
adc
sbb
scas
icebp
and
inc
push
call
jle
in
pop
lcall
mov
and
imul
jmp
imul
lods
ret
push
mov
shlb
jmp
ljmp
push
pop
xor
aad
mov
dec
push
jno
sbb
or
jl
pop
repz
mov
pusha
inc
mov
jo
push
xchg
mov
push
movsl
mov
ret
mov
sbb
add
popf
outsb
mov
xor
insb
mov
sub
jbe
cltd
adc
mov
mov
arpl
inc
loope
sub
sub
pop
mov
pop
mov
pop
cmp
lret
loope
pop
pop
and
add
adc
pop
xchg
lahf
pushf
mov
mov
or
xchg
add
inc
adc
rep
test
jb
addr16
jbe
dec
fsts
cld
test
leave
mov
stos
iret
out
dec
and
insl
lret
cmp
into
add
sahf
push
dec
mov
les
bound
push
adc
ret
out
push
ret
out
pop
cmpl
adc
jge
mov
pop
adc
jae
rorl
jb
mulb
and
xor
inc
dec
lret
fdivrs
lret
inc
xor
lret
pop
icebp
int3
inc
call
jb
push
out
add
test
shll
out
shrl
pop
mov
std
stc
push
mov
cld
xrelease
mov
mov
leave
sahf
sahf
or
cmp
mov
lahf
jae
test
adc
lods
jl
int3
fs
movsl
cmpsb
nop
imul
lea
test
xor
xchg
inc
mov
imul
add
xchg
leave
adc
negl
push
int
out
int3
jle
sbb
push
aam
or
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
cwtl
lods
add
adc
movlps
sub
dec
xchg
test
ror
or
pop
mov
aas
pop
mov
xor
mov
test
ret
cwtl
data16
pop
outsb
pop
sqrtps
and
cmp
ljmp
addl
out
mov
push
xchg
sub
decl
aad
jbe
xor
stos
imul
dec
mov
rcll
test
inc
cmp
out
push
mov
fdivs
mov
aaa
stc
jmp
clc
add
jnp
mov
jp
adc
inc
mov
xchg
add
jbe
fistps
xchg
xchg
mov
test
dec
repnz
notb
lods
frstor
addb
pop
xorb
xor
push
mov
and
and
cld
pop
dec
xor
sbbb
stc
mov
mov
jg
jl
sarl
ja
ret
dec
xor
pop
scas
mov
pop
enter
sahf
sbb
sbb
iret
push
outsb
in
lcall
mov
sub
mov
add
ss
bnd
cmp
sub
loopne
sbb
adc
cmp
test
loop
and
leave
es
cli
xchg
movsl
pushf
pop
cmp
xor
jle
dec
or
adcl
jno
ret
cli
pop
ret
fwait
test
stc
jo
sub
aaa
int
test
jle
scas
ljmp
hlt
testb
lock
fnstcw
ljmp
imull
pop
mov
out
clc
inc
insl
xchg
or
sbb
fstl
popa
cltd
adc
movsl
ja,pt
out
jo
add
mov
xorl
or
lahf
dec
dec
jne
addr16
test
lret
push
in
lret
jle
adc
jecxz,pt
jnp
jne
adcl
or
loopne
or
jb
dec
into
adc
out
sub
inc
pop
mov
fsubs
and
mov
jg
jge
push
fimuls
in
xchg
js
adc
shrb
lahf
cltd
les
scas
xchg
mov
rclb
mov
or
pop
sub
xchg
sbb
sti
adc
stos
sub
xor
shll
jge
repnz
pop
cmp
dec
push
out
fcmovnbe
cmp
jno
xor
xor
mov
fdivr
and
insl
and
xchg
daa
pop
int3
inc
add
in
mov
fxam
arpl
test
lret
adc
cli
les
repz
out
inc
pop
out
js
mov
fisttpll
outsl
sti
mov
xlat
shlb
test
dec
dec
inc
ret
sub
xchg
cmp
mulb
add
enter
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
xorb
or
pop
push
xor
cmp
push
cld
pop
add
jbe
faddl
mov
loope
pop
pop
dec
int3
scas
scas
sbb
add
xchg
sub
pop
or
pop
sti
push
inc
cs
adc
mov
push
mov
popf
arpl
push
nop
test
inc
repz
push
lods
cmpb
cli
outsl
xchg
cs
xchg
inc
pop
movsb
sub
mov
aaa
shll
xchg
arpl
mov
and
pop
sub
int3
cmp
lcall
repz
enter
add
adc
shl
adc
repnz
xor
add
mov
push
movsb
sub
jno
fsubs
dec
shrl
fmul
call
sub
cmp
icebp
bound
cmp
das
xorl
incb
call
ret
stos
push
ffreep
leave
or
sub
add
add
inc
mov
or
push
sbb
push
xchg
sbb
xchg
jp
cwtl
push
repz
repz
sbb
xor
push
and
add
faddl
pop
sbb
les
mov
or
cmp
xor
inc
aas
lock
xchg
icebp
mov
cmp
lret
pop
popf
mov
int
pop
repz
or
cltd
xor
inc
or
mov
ret
dec
stos
add
out
and
lods
mov
cmp
fiaddl
pop
movsb
cmp
jle
popa
insb
mov
fimuls
fcomp
ret
add
fsubrp
cwtl
int3
push
xchg
xor
mov
rorl
push
mov
out
xor
xchg
xor
inc
adc
dec
int
aas
popf
aaa
push
outsl
dec
add
mov
lahf
fwait
jbe
push
test
orb
mov
lock
loop
fiadds
flds
mov
and
cmp
mov
adc
mov
jmp
inc
shrl
pushf
xor
adc
push
pop
jns
adc
or
shrb
jbe
lahf
inc
movsb
imul
cltd
fwait
xchg
lock
sbb
in
pushf
cltd
aaa
fs
add
out
outsl
add
and
push
and
in
xchg
add
repz
cmp
fwait
push
repz
stc
push
lock
hlt
es
mov
jae
and
push
cmp
aaa
pop
sub
sub
add
jecxz
dec
sbb
pop
pop
stc
ret
sarl
pop
mov
push
ss
push
lret
sahf
cltd
addr16
cmp
mov
lds
cmp
dec
sub
insl
xor
data16
xchg
je
std
sbb
fcoml
pop
and
adc
dec
mov
cmp
inc
xchg
scas
call
int
jno
mov
mov
test
xchg
inc
inc
fildl
pop
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
das
repnz
fsubs
fnstsw
mov
repnz
shlb
stos
adc
dec
mov
fisubrs
xchg
sub
dec
lock
sahf
ljmp
sbb
popa
cs
xchg
mov
std
scas
not
push
mov
xor
das
add
sti
jne
mov
and
sbb
xor
hlt
mov
and
int
mov
idivl
jge
jne
sbb
or
pop
mov
incb
pop
leave
cmpsl
mov
stos
dec
popa
xchg
jp
fs
scas
test
push
fistps
jno
xchg
dec
mov
popa
addr16
mov
shll
jae
in
cmp
and
pushf
xor
out
jle
outsl
mov
jp
jo
stos
dec
mov
push
mov
lret
scas
imul
push
sbb
rcrb
fsts
fadd
mov
mov
cmp
dec
adc
jmp
les
cli
popf
pop
mov
test
or
dec
cmpsl
mov
repnz
orb
inc
sbb
add
mov
rcll
lcall
xchg
lahf
rorl
or
je
fs
es
mov
or
add
ja
bound
mov
adc
sti
jbe
js
jo
call
mov
cwtl
dec
out
lret
pop
push
enter
xor
pop
and
lahf
repnz
push
enter
in
jno
testb
jmp
xchg
xchg
outsb
xchg
push
xchg
and
iret
ss
jp
mov
mov
xchg
jb
push
icebp
stos
push
mov
lea
jp
lock
in
in
in
push
fstpl
repz
loop
mov
inc
inc
ret
mov
push
inc
add
or
fdivs
or
stos
jmp
inc
jb
pop
insl
mov
aaa
lea
jae
lret
pop
adc
mov
in
mov
jp
push
jecxz
dec
xor
aaa
lds
sub
pop
push
scas
mov
or
les
sub
dec
shr
ljmp
adc
lret
push
mov
mov
xchg
je
dec
xor
or
mov
xor
xor
push
in
imulb
rcll
je
pop
stc
cmpsl
dec
mov
leave
pop
mov
aad
xchg
xchg
dec
movsb
sbb
inc
aam
flds
jno
and
imull
mov
mov
insl
in
jp
lcall
dec
lds
pop
pop
push
test
int3
mov
cwtl
pop
add
loop
nop
out
ficoml
imul
dec
das
and
pop
xchg
fstps
mov
push
addl
test
iret
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
ret
xor
push
adc
or
pop
and
stos
repz
add
xchg
mov
add
add
data16
dec
sbb
xlat
adc
insl
inc
dec
icebp
scas
or
cmp
sbb
sbb
sbb
repz
fisttps
sbb
stos
in
movsl
or
aaa
xlat
adc
stc
jl
jmp
or
sbb
cmp
hlt
sarb
repz
ret
stos
push
jns
or
xor
arpl
or
daa
add
push
mov
sub
jae
mov
push
inc
fnsave
jge
xor
fisubrs
push
pop
pop
shll
sbb
sub
mov
cmp
sbb
imul
add
into
push
ret
and
mov
data16
in
cld
aam
rol
imul
mov
xor
push
jno
cmc
push
shrb
test
js
cmp
stos
push
mov
adc
cmc
adc
mov
adc
lods
cmp
es
imul
out
push
lret
addl
cmp
inc
xchg
sub
sahf
pop
insl
jo
lods
push
sub
mov
das
jle
dec
out
fimuls
or
sub
pusha
mov
inc
pushf
rclb
repz
cmpsl
popfw
pop
and
pop
xchg
repnz
sub
cmpsb
call
mov
jb
arpl
leave
sub
dec
jae
pop
shlb
mov
fsts
in
xchg
sbb
test
sarb
loop
jecxz
inc
pop
in
cmp
jo
or
and
xlat
dec
aaa
int3
cmc
pushf
ret
mov
or
test
imul
add
adc
pop
xchg
fwait
leave
insb
cmpl
aas
sub
xor
or
and
in
popf
and
loop
cmp
sub
pop
rcrl
mov
in
xor
pop
pop
sub
cmp
fucomip
pop
push
aaa
outsl
cmp
xchg
mov
cmc
repnz
orb
icebp
hlt
inc
leave
out
cwtl
mov
sub
nop
mov
jnp
inc
sub
push
ret
lret
cmp
inc
shlb
ljmp
arpl
xchg
movsl
lret
push
divb
mov
hlt
push
int
sub
cwtl
mov
fmull
in
repz
fisubl
pop
fucom
negb
mov
xor
je
fs
or
mov
jp
sti
stos
repz
mov
mov
lahf
sbb
dec
iret
in
xchg
cs
out
or
nop
sarb
and
addr16
and
int
fldt
sbbl
adc
scas
out
sbb
ret
sub
inc
xor
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
dec
adc
fcomip
jmp
cli
pushf
imul
shlb
cmp
and
imul
loopne
jno
and
or
push
push
call
xor
scas
xor
call
adc
ficomps
jnp
sub
jecxz
outsb
sub
add
frndint
in
addr16
hlt
clc
pop
fldl
shrl
sub
into
in
sbb
xchg
cmpsl
and
or
lods
add
movsl
rep
sbb
inc
sbb
push
in
cmp
icebp
mov
int
dec
imul
add
fldcw
add
mov
aaa
scas
arpl
arpl
cmpl
jl
arpl
cmp
jo
mov
add
mov
add
arpl
mov
inc
fs
enter
stos
dec
xor
hlt
ljmp
stos
xchg
xor
mov
cli
inc
xchg
dec
pop
in
sarb
push
scas
stos
gs
pop
out
fdivrl
test
mov
subl
fdivrl
jns
xchg
insl
jne
mov
test
dec
and
popl
push
jecxz
int3
or
xorb
into
add
ds
pusha
movsl
call
test
lcall
rcrb
mov
adc
aas
inc
clc
sub
xchg
jno
ljmp
popa
rcrb
inc
add
xor
jmp
add
arpl
sub
adc
pop
inc
pushf
mov
xchg
cltd
repz
ret
and
pusha
cmp
in
dec
and
insb
fstps
jge
mov
stc
rorl
xchg
push
push
pop
sbb
or
push
inc
push
pusha
int3
insl
mov
dec
cmpsb
out
add
cmpsl
fstl
ss
outsl
test
xor
pop
adc
jp
mov
mov
pop
jmp
add
cmpsb
hlt
push
out
cmp
jl
mov
sbbl
xchg
add
pop
leave
jge
scas
outsl
mov
fucomi
adc
sti
dec
daa
lock
stc
sub
lcall
push
adc
sub
mov
outsb
sbb
xor
movsb
arpl
xchg
pop
and
add
outsl
std
mov
and
adc
pop
jle
mov
jecxz
jb
push
sub
jl
ds
mov
aad
sub
mov
mov
or
repnz
sub
dec
insb
and
mov
inc
mov
xchg
orb
shll
inc
stc
ds
stos
out
xlat
push
outsb
mov
cmp
mov
stos
sti
int
mov
fisubl
sbb
je
xchg
or
adc
push
jae
cli
mov
and
xor
inc
cmpsl
adc
cmp
ljmp
lods
int3
xchg
iret
sub
and
xlat
in
jg
sbb
divl
sbb
push
cwtl
out
cltd
mov
jnp
pop
inc
filds
fistps
cmpsl
in
add
adc
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
loopne
icebp
stos
inc
pop
adc
jp
adc
daa
xchg
lahf
sbb
clc
push
jae
push
sub
sub
es
mov
jge
call
and
xchg
add
repnz
in
test
pop
out
fcoms
push
les
test
or
das
mov
adc
xchg
mov
cld
ss
repnz
mov
cmpsl
jge
mov
ljmp
sub
imul
iret
jle
sub
xor
add
ljmp
mov
xchg
xor
scas
adc
jb
dec
xor
mov
inc
test
testb
rol
rolb
inc
cmp
add
push
lock
inc
xor
jmp
aas
mov
sbb
bound
sub
cs
push
shlb
jne
inc
jge
mov
adcb
imul
inc
and
subl
ret
leave
mov
fsubr
rcll
and
jnp
cli
jne
xorb
pop
sub
mov
mov
push
add
xchg
clc
imul
push
out
test
mov
mov
xchg
inc
mov
mov
push
add
ss
xlat
cmp
sub
add
lods
icebp
jecxz
orps
outsb
xchg
movsb
lock
push
adc
imul
test
lods
insl
leave
ds
sbb
insb
lcall
cmc
mov
mov
xchg
xlat
mov
divb
jg
adc
in
xchg
sbb
xchg
faddp
sub
mov
xor
xchg
adc
stos
xor
add
pop
jp
dec
pop
int
stos
dec
fs
pushf
and
xchg
cld
dec
mov
add
inc
jecxz
mov
dec
das
xor
dec
mov
fldcw
mov
push
ret
psllq
pop
hlt
cmpsb
and
das
push
ss
mov
mov
sub
cmpsb
dec
js
mov
sub
cli
int3
or
sbb
mov
loope
mov
mov
add
cs
dec
dec
nop
xor
movsb
push
lods
shrb
rcll
aas
popa
rcl
sbb
push
and
repnz
js
ficomps
dec
ja
xchg
shrb
xchg
mov
mov
cmp
ds
lds
xchg
mov
and
rolb
sarb
gs
dec
xchg
pop
inc
or
ds
imul
mov
xlat
sub
xor
fcoms
and
test
ret
movsl
in
mov
loopne
jge
add
mov
pop
push
or
dec
inc
push
ja
orb
dec
shll
lds
orl
test
out
push
into
inc
rcr
arpl
ja
push
xchg
or
push
cli
mov
into
xor
dec
mov
lahf
dec
mov
mov
cmp
xor
dec
cmpsl
sub
xor
add
lock
enter
add
mov
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
out
xchg
js
pop
adc
jp
adc
and
ret
push
ljmp
jg
addr16
xchg
pushf
bound
jle
lods
iret
sbb
cltd
lcall
xor
add
dec
add
mov
and
push
adc
xorl
into
jge
scas
dec
lcall
iret
popa
or
dec
cltd
imul
mov
popa
jecxz
or
addl
rcrb
lahf
shlb
lret
mov
popa
lods
in
testl
push
sbb
js
inc
test
pushf
xchg
sbb
cld
mov
xchg
shlb
outsb
out
out
push
inc
and
push
xchg
mov
lods
jmp
aaa
stos
mov
ficoms
addr16
sub
fiadds
pop
ficompl
inc
pop
cmp
mov
sub
int3
or
dec
call
jae
ss
aam
jno
xchg
mov
jge
rol
inc
icebp
inc
pop
and
and
insb
inc
cmpsl
push
outsl
arpl
scas
mov
jle
sbb
mov
jb
mov
jecxz
rep
lahf
nop
sub
pop
dec
cmp
mov
subb
inc
sub
subl
jmp
sbb
sbb
xor
jnp
lret
inc
jge
mov
and
cmp
lock
fcompl
inc
sub
push
sbb
mul
popf
adc
out
ja
pop
clc
jbe
push
insb
or
mov
in
test
fbld
push
mov
and
mov
pusha
xchg
or
jge
mov
ljmp
and
xchg
cmp
push
notb
xchg
cmp
movsl
and
cwtl
pop
orl
inc
push
lods
xlat
add
sub
mov
fs
clc
ret
das
fstl
outsb
jbe
pusha
and
inc
adc
fwait
sahf
cmp
lret
fldt
arpl
and
fiadds
add
push
movsb
cld
jne
fs
jns
scas
cmp
stos
std
fiadds
and
xchg
in
arpl
adc
ret
fdivrs
cli
sub
dec
push
sub
xchg
imul
lcall
arpl
decl
out
cmp
mov
pop
call
mov
ja
int
test
repz
js
jb
inc
orb
scas
dec
sbb
mov
pusha
push
sbb
ret
sub
or
js
dec
mov
orb
push
pop
inc
fldl2e
mov
xor
mov
push
xlat
cmpl
shl
fldcw
popa
dec
insl
jns
dec
sub
mov
mov
pop
add
and
loope
in
dec
sbb
aaa
mov
shll
push
jg
lock
int3
mov
arpl
xchg
mov
mov
fdivs
fsubl
outsb
les
sti
jle
mov
shrl
sbb
hlt
out
and
lods
lret
and
roll
in
notb
outsl
enter
in
in
scas
iret
adc
ja
jne,pt
addr16
and
add
fucomip
mov
mov
and
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
adc
adc
adc
loop
xor
mov
jne
cmpsb
iret
adc
cmc
inc
sub
push
cmp
inc
stc
lods
cmp
mov
mov
test
data16
es
fdivrl
loopne
mov
push
cwtl
dec
push
xchg
cs
daa
mov
push
movsl
test
inc
mov
xchg
ljmp
pop
push
push
sub
shr
insb
and
test
jmp
sub
and
leave
push
pushf
jb
popf
aam
jne
and
push
cmp
insb
mov
in
inc
add
jae
pop
popa
xor
xlat
dec
jo
sub
mov
mov
jmp
fsubrs
adcl
and
iret
bound
push
mov
fnstenv
addl
lret
cmc
imul
cmp
inc
enter
or
or
roll
adc
cmp
jle
cmp
inc
mov
test
cmp
hlt
ljmp
pop
xor
aam
mov
inc
mov
cmp
stc
ficompl
xchg
or
dec
nop
data16
mov
adc
cld
ret
sar
cs
ja
incl
jmp
inc
xchg
mov
fs
stos
adc
dec
pusha
neg
mov
inc
mov
lods
mov
or
nop
stc
popf
mov
in
gs
add
xchg
xlat
popa
fwait
pop
popf
xchg
sub
xchg
add
loopne
out
cmp
pop
jge
mov
sbb
adc
in
lret
and
in
mov
inc
sub
push
jo
mov
and
lret
rcrl
cmp
push
je
xchg
mov
xor
lahf
test
sahf
insb
nop
pushl
nop
xchg
adc
pop
xchg
lock
add
xchg
outsb
sbb
lret
int
fdivs
rorl
sub
rol
shlb
jl
xchg
mov
mov
outsl
push
mov
into
inc
jmp
sub
loope
pop
or
dec
fcoms
push
lock
lods
fldenv
stc
rcl
and
imul
sub
add
inc
sub
sti
es
bsr
mov
sbb
mov
mov
nop
jmp
pop
pop
adc
mov
jo
adc
inc
fxch
xchg
mov
data16
movsb
mov
and
mov
lods
push
das
xor
lods
aam
and
jle
clc
xor
fisttps
subl
xlat
jmp
mov
xchg
fmuls
fisttpll
cmp
movsl
fistps
imul
gs
pop
xor
fwait
mov
push
test
mov
cmp
fiadds
xor
jmp
inc
stc
mov
imul
cmpl
dec
fmuls
daa
inc
cltd
test
pop
cmpl
outsl
cli
int
cltd
jns
in
jp
cmpsb
push
arpl
and
pop
lea
nop
jnp
int
mov
fwait
repnz
lret
out
and
repnz
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
dec
insb
insb
outsb
inc
adc
lea
adc
mov
daa
and
adc
push
out
and
cmpsb
outsl
xor
ret
mov
sub
push
xor
lods
popa
sub
mov
mov
add
push
or
xchg
loope
xchg
popa
outsl
test
cltd
dec
lret
sbb
dec
and
jge
or
aad
mov
cmpsl
and
adc
fstl
ljmp
sub
mov
inc
cltd
inc
jne
sbb
inc
je
mov
hlt
iret
mov
iret
jae
aam
fdivrl
or
fisubrs
mov
clc
lds
mov
and
and
ds
adc
dec
xchg
inc
cmp
movsl
pop
sbb
test
sbb
cmp
sbb
outsb
in
lret
scas
adc
add
insl
xchg
jbe
adc
push
subl
cli
mov
lret
mov
and
into
test
lea
call
push
inc
mov
enter
aad
mov
mov
push
mov
dec
or
add
imul
add
push
test
mov
xchg
and
pop
jmp
sbb
cmp
ficompl
sub
xchg
cmp
arpl
or
pop
imull
push
inc
add
mov
xchg
push
lea
cmp
mov
cmc
xor
jp
mov
clc
cmpsb
in
mov
dec
iret
add
bound
std
or
ror
xor
out
loopne
or
jecxz,pn
mov
dec
mov
jo
loopne
jecxz
mov
ret
test
xchg
adc
sbb
adc
sub
gs
xor
repnz
pop
and
jecxz
ss
xchg
loope
pop
dec
test
mov
les
aam
inc
sarb
jle
xchg
test
les
add
dec
movsl
mov
loope
sbb
push
jbe
enter
adc
lds
nop
ret
lods
pop
jg
rcr
add
in
leave
inc
push
pop
into
dec
inc
mov
jl
xchg
add
sbb
lahf
xor
push
out
es
sbb
movsl
xor
xchg
int3
sahf
push
fwait
aam
int3
mov
dec
push
sub
sbb
pop
shll
jnp
jle
leave
jbe
xor
ljmp
es
push
mov
nop
dec
adc
lahf
push
mov
adc
jmp
xchg
mov
sub
les
loopne
adc
lea
adc
cwtl
xlat
mov
add
sti
or
pushf
cli
mov
cmp
mov
insb
imul
pushf
shlb
std
int
or
mov
xor
cld
lods
aam
aas
je
jp
inc
cmp
stc
xor
mov
stos
sbb
ss
aad
dec
stc
enter
pop
mov
addb
xchg
cmp
out
dec
lret
lock
push
lret
jg
adc
fwait
shlb
aam
or
sarl
sbb
lret
ljmp
push
pusha
push
pop
adc
lcall
es
mov
les
jge
out
in
data16
inc
das
mov
dec
and
mov
data16
pop
sbb
sub
cmp
cld
test
xchg
xchg
jecxz
aaa
fbld
push
jl
or
pushf
xchg
jecxz
dec
sbb
rolb
data16
adc
mov
add
cmp
mov
mov
insb
adc
push
insl
push
adc
loop
xor
dec
mov
mov
jl
dec
sahf
xchg
popf
rcrl
or
mov
fnstcw
jo
cmc
sbb
repz
sbb
mov
sbb
jg
inc
out
push
push
cmp
xchg
leave
add
test
mov
test
fistl
shrb
add
icebp
sti
add
lret
xor
shrl
idivb
mov
in
out
ret
outsl
xor
ret
aad
add
out
mov
movsb
xlat
dec
insl
ret
sub
sub
push
test
das
mov
mov
lret
or
sti
xchg
cwtl
jb
mov
std
xchg
push
in
stos
pop
test
cmc
sub
mov
daa
test
pop
cmp
and
jecxz
es
cwtl
and
icebp
mov
mov
aaa
adc
mov
std
inc
and
int
sti
addr16
lods
cmp
inc
lahf
scas
sbb
jae
mov
insb
repz
cmp
or
push
add
repz
lds
sub
mov
loopne
cltd
mov
repz
dec
cltd
dec
adc
pop
andb
pushf
seto
dec
bound
cmp
mov
icebp
xor
pop
movsb
pushf
in
add
xor
and
xchg
jl
mov
fwait
pop
and
loopne
mov
out
xchg
jle
daa
lods
dec
les
cmp
xchg
push
fdivl
lods
xor
or
sbb
push
xchg
int
pop
xchg
lods
cmp
into
int
sub
push
pushf
out
mov
cmpl
movl
not
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
sub
fcmovnu
outsb
into
push
hlt
mov
pop
mov
mov
push
mov
das
and
mov
mov
dec
loope
push
int
jnp
shl
aas
bound
mov
das
pop
jle
cmp
in
test
xchg
leave
adc
out
mov
aas
push
pushf
loop
sbbl
push
movsb
xchg
pop
push
mov
imul
fnstenv
mov
outsl
sub
add
mov
xchg
in
jne
and
lds
dec
xchg
lds
mov
loope
jle
fwait
or
dec
bound
xchg
fwait
sbb
fldt
add
in
and
fisttpl
sti
mov
arpl
int3
cmpsl
xor
fstl
sbb
and
scas
xor
mov
cmp
aas
repnz
xor
leave
out
and
inc
xor
iret
gs
and
in
jmp
cmpsl
and
notb
aaa
inc
pop
mov
inc
daa
push
add
loope
sbb
out
mov
push
test
push
lcall
shl
adc
dec
test
out
pusha
cltd
jmp
shll
gs
lea
adc
xchg
subl
dec
adc
xchg
pusha
jp
cmp
mov
dec
mull
leave
repz
xchg
mov
or
push
fsts
imul
xchg
shlw
xchg
adc
lock
mov
sub
jb
push
push
sahf
mov
in
outsl
sbb
outsl
test
and
mov
imul
xchg
js
fidivl
mov
push
ret
adc
in
mov
inc
inc
sub
cmc
mov
or
into
cmp
fldcw
arpl
mov
adc
sub
ret
iret
or
cltd
jnp
lods
lret
lods
xchg
push
fisttpll
mov
mov
jns
push
mov
scas
loop
sbb
pusha
mov
push
mov
push
mov
xchg
xor
jno
bswap
stos
fldl
cmpsl
dec
arpl
outsl
lahf
and
pop
sbbb
jno
jl
shlb
add
aad
xorb
ds
xchg
xchg
sub
push
leave
rcl
lret
mov
mov
in
add
nop
jo
push
je
int
cmp
inc
test
inc
lcall
cmp
rcll
inc
pop
pop
push
movaps
sbb
popf
jae
xor
insl
scas
addb
movsl
pop
cmpsl
cmpsb
les
push
pop
sub
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
enter
lret
aaa
adc
lea
adc
or
in
pop
dec
test
lret
pop
xlat
movl
xchg
pop
xorb
pushw
fwait
pop
mov
mov
xchg
roll
movsb
inc
dec
rcll
je
or
and
pop
jb
push
cmpsl
into
jle
dec
add
cmp
and
xor
sub
push
mov
fisttps
es
out
les
xchg
sahf
sbb
imul
sub
xchg
pop
insb
jne,pn
pop
jnp
cmp
addl
mov
arpl
dec
movsb
stc
jecxz
gs
mov
insl
sub
mov
rclb
xchg
dec
mov
jmp
xchg
ss
das
sbb
sbb
xor
xor
add
aaa
mov
xor
test
loop
test
cmp
xor
sbb
ja
or
or
repz
push
xchg
jge
mov
sub
fisubl
in
add
add
lcall
pop
jle
inc
divb
jp
ret
test
es
jo
jge
add
movsl
data16
gs
jge
add
idivl
mov
jb
xor
js
xor
xor
xor
loope
out
or
sub
es
jg
sbbl
std
cwtl
hlt
and
gs
adcl
sbb
leave
lea
inc
int
and
aad
and
lds
insl
cltd
sub
ficomps
enter
push
jp
mov
dec
pop
mov
sub
cmpsl
out
cmp
xchg
pop
insl
jne
dec
pop
loope
xor
inc
sahf
dec
pop
out
lds
cmp
into
sub
movsb
mov
mov
jns
add
inc
or
sub
or
jae
push
pop
or
cs
dec
adc
xor
pushf
pop
fldt
js
and
aaa
jno
add
nop
push
xor
arpl
and
and
in
std
cwtl
pop
hlt
scas
mov
in
loope
insl
das
outsb
sbb
rclb
cmp
loope
cld
or
sbb
test
shl
fnstsw
mov
xchg
pop
mov
cwtl
adc
lahf
fiadds
sbb
hlt
dec
mov
push
adc
rol
loope
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
ret
dec
mov
lea
adc
out
lcall
pop
mov
pushl
gs
adc
inc
add
jl
int3
inc
cmp
and
cmp
aas
or
loopne
push
sub
nop
jo
pop
sub
mov
gs
dec
arpl
push
jo
je
out
dec
sub
shl
loop
in
je
dec
push
lods
loope
stos
fucomp
xchg
push
pop
jae
add
lcall
add
sti
xor
je
stos
arpl
lret
sahf
stc
ret
lea
mov
lahf
adc
cmp
fildll
mov
mov
xchg
lock
ret
mov
sbb
dec
sahf
adcb
mov
test
and
pusha
xchg
rcrl
int3
fdivs
sub
in
lock
mov
mov
jge
sahf
mov
mov
fcoms
jp
int3
jge
stos
sbb
cmp
pop
xchg
push
dec
jno
mull
dec
sbb
loop
lret
adc
sub
aas
lcall
mov
movsl
xchg
nop
std
into
lcall
inc
push
adc
lret
js
dec
and
push
pushf
fldl
into
sbb
faddl
or
mov
cmpb
dec
pop
pop
in
and
out
sbb
loop
mov
jb
push
lea
xchg
mov
bound
les
lret
and
enter
into
stos
mov
lods
aaa
xchg
scas
insl
js
insl
inc
pusha
daa
in
mov
movsl
leave
pop
pop
pop
out
ja
push
push
dec
mov
mov
mov
jns
mov
sub
into
rorb
lret
and
mov
enter
jno
xor
cmp
mov
movsb
in
push
mov
lret
or
dec
outsl
push
cmc
ja
gs
je
mov
dec
inc
insl
ds
cmpsb
addl
orl
stc
xchg
mov
and
inc
jl
jne
inc
xor
cmp
cmp
sahf
mov
sti
ja
push
into
xor
shll
aaa
mov
push
fimull
mov
enter
xor
push
xchg
popf
pop
shld
cli
mov
cmp
sti
mov
loop
orl
cmp
shrl
lcall
cmp
push
jg
cmp
popa
pusha
mov
mov
shll
jl
cltd
xorl
dec
cmp
mov
jno
pop
outsl
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
sbb
adc
push
cmpsb
loop
movsb
insl
mov
sbbl
dec
out
addr16
in
call
jbe
xchg
xchg
sub
cli
cmp
add
into
push
test
dec
adc
xchg
xor
pop
cld
dec
pop
into
jo
push
data16
cmp
cmpsb
fldenv
or
cld
jle
negb
daa
scas
jecxz
das
jno
stos
popa
fdivl
or
sbb
xchg
jae
and
sarl
mov
je
lods
into
jge
xchg
jnp
popf
sahf
pusha
xor
jb
mov
in
or
test
sub
or
in
imul
pop
addr16
ret
lea
dec
sub
cmpl
inc
add
fiaddl
mov
or
dec
mov
and
hlt
sbb
and
dec
lcall
inc
push
inc
sub
and
push
adcl
clc
pop
sbb
xor
arpl
jnp
fcom
dec
pop
inc
jns
shl
popf
xchg
xorps
repnz
loopne
out
mov
adc
push
sbb
fs
mov
adc
inc
mov
dec
ficompl
dec
xor
test
jl
jb
dec
or
js
cmc
and
and
sbb
lods
mov
ror
test
cmp
pusha
xor
sub
sbb
flds
aad
lret
adc
adc
xor
lret
and
jo
dec
out
sub
jle
mov
cmc
jns
subl
adc
imul
loopne
hlt
ret
sub
out
pop
inc
xchg
add
ja
add
jae
ljmp
xchg
xchg
data16
xor
sub
out
stos
pop
repnz
shll
jns
ret
cld
int
and
xchg
push
leave
shl
cmpsl
jge
xor
cltd
or
jg
xchg
push
lret
mov
ret
push
aam
lcall
in
fneni(8087
movl
daa
mov
mov
fsubl
or
aas
inc
aas
les
sbb
xchg
lret
insb
adc
ficomps
jns
and
nop
xchg
xor
fsubrl
fdivrs
mov
and
in
mov
cmc
scas
outsb
jmp
test
dec
sbb
inc
call
test
sub
inc
sub
ret
clc
pop
inc
repz
add
mov
mov
pop
adc
popa
pusha
adc
js
inc
mov
dec
aaa
cld
or
outsl
mov
mov
cmp
icebp
in
adc
int
dec
or
xor
or
push
add
jmp
and
lods
and
js
fsubrl
jle
daa
adc
lea
adc
and
je
test
mov
arpl
movsb
ds
or
cmpsb
shr
xor
mov
fiadds
cwtl
push
imul
popf
jecxz
cld
mov
imul
add
cld
pop
inc
xor
imul
imul
lock
popf
movsl
xchg
xchg
or
push
lds
xchg
rcr
test
push
cs
ficoml
fucomp
clc
xchg
xor
jns
out
push
add
jle
sub
aas
mov
jae
aad
or
or
shll
mov
repnz
adc
cmp
xor
movb
jo
mov
cs
push
inc
push
jnp
mov
push
icebp
mov
int3
push
cmpsl
fildll
rol
nop
inc
enter
mov
mov
stos
push
xor
cmpsb
xchg
outsb
adcb
xchg
pop
inc
movsb
and
or
shrl
mov
adc
shrl
xchg
pop
pop
dec
popf
addr16
scas
cmc
push
ret
aaa
fdivrl
xchg
xchg
push
outsb
push
mov
adc
and
fidivrs
push
cmp
mov
fistpl
mov
pop
adc
rorb
and
test
test
pop
xchg
adc
shl
daa
pop
movsb
pop
dec
push
jne
xchg
cmp
aaa
pushf
xchg
mov
test
int
cmp
das
push
pusha
test
cltd
out
fsubs
jle
fisubrs
xchg
push
mov
fildl
out
fists
jmp
mov
dec
fwait
cmpsl
loop
lea
in
rolb
addr16
int
je
js
cmpsl
ret
push
cli
pop
sub
sub
xchg
lods
fnsave
fadd
mov
sbb
and
inc
popf
add
and
insb
fsubrp
and
jmp
cmp
jl
pop
xchg
jnp
jle
leave
ficomps
add
in
pop
cmpsl
mov
test
or
test
popa
es
ret
movsl
pop
popf
clc
inc
inc
int3
gs
push
aam
in
inc
je
push
repz
jge
es
cmp
in
roll
cli
or
mov
add
xor
jo
cmpsl
dec
daa
xchg
lock
cmp
decl
inc
xchg
add
mov
sbb
xchg
leave
test
or
enter
and
add
dec
aaa
out
mov
fs
dec
test
pop
add
out
inc
pop
mov
cmp
push
das
into
cmc
mov
adc
ret
test
pop
mov
ficoms
inc
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
xor
sub
movsl
lret
or
outsl
dec
movsb
inc
into
rolb
aad
mov
jnp
jbe
dec
fwait
aam
stos
jno
or
jns
mov
and
inc
lahf
mov
dec
mov
andb
or
mov
add
rolb
push
iret
fldcw
aaa
xor
ss
mov
cmp
repnz
xchg
repz
xlat
in
xor
sahf
mov
cli
or
iret
test
sbb
mov
push
jl
idivl
push
mov
mov
pop
rorb
cld
sbb
test
int
and
repz
sub
out
out
adc
fucomip
jbe
jecxz
pop
and
jbe
lret
mov
add
xor
test
std
mov
fiaddl
fistpl
int3
out
mov
sub
sub
xchg
daa
and
mov
fadds
adc
dec
loop
jecxz
shlb
xchg
xor
or
cmp
outsl
int
and
stos
into
cmp
pop
dec
shll
mov
sub
mov
lret
pop
fisttps
dec
in
inc
xor
jns
jns
loopne
jp
mov
je
aam
test
jle
fbld
push
mov
adc
outsb
dec
adc
mov
int
mov
sub
and
dec
and
test
mov
push
rol
mov
sub
adc
add
nop
sahf
and
clc
jmp
je
lcall
test
vmptrld
shrl
gs
fwait
push
mov
and
and
mov
loopne
sbb
inc
fwait
and
dec
insb
cltd
not
sbb
mov
jo
lds
push
jp
fcom
sub
aad
jp
lods
aas
pop
and
out
ljmp
pop
jb
fisubrs
adc
scas
inc
push
repz
lods
dec
rclb
ret
jmp
fidivrs
sti
out
pop
lea
frstor
xor
lods
or
hlt
leave
jo
stos
loop
loopne
lods
pushf
jmp
out
push
lds
and
ret
jl
jg
add
insb
push
jo
pop
stos
dec
and
lcall
mov
and
mov
daa
adc
pop
fwait
sahf
cs
ret
ss
in
mov
jge
xor
pop
ljmp
pop
mov
adc
xchg
dec
mov
shll
aas
sar
add
add
adc
lods
enter
add
adc
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
call
adc
xor
cmp
jne
loop
xchg
dec
xor
mov
pop
dec
sahf
mov
push
iret
add
inc
mov
pop
daa
jb
cld
stos
dec
fcoml
addr16
pop
sahf
jg
das
scas
dec
ret
mov
clc
cmp
add
fsubrp
lret
cld
or
mov
cltd
fdivrp
fisubrs
cmp
push
cwtl
and
push
out
xlat
pop
dec
out
jne
sbb
jle
out
fwait
div
xor
fcoml
inc
inc
or
sub
mov
lods
sub
cmp
jb
cmpsb
dec
or
shll
or
pop
xor
jmp
mov
mov
popa
pop
jno
mov
nop
cltd
mov
stos
enter
push
fimull
add
das
jb
adc
mov
in
js
cs
ss
outsb
lret
loop
inc
inc
imul
mov
in
mov
jns
dec
repz
pop
mov
int3
pop
dec
pop
mov
scas
ret
and
push
jp
cmp
xchg
rcr
xor
dec
and
pop
xor
addr16
in
mov
jo
and
mov
mov
adc
jle
add
sub
dec
rorb
sub
loopne
mov
add
cmp
sub
lret
fs
cmp
or
and
sarl
mov
inc
nop
inc
jno
mov
shl
or
cmc
stos
lods
add
mov
xchg
cli
cltd
push
xor
cmp
test
in
je
push
incb
dec
sbb
test
jo
or
cmpl
sub
inc
add
int
out
jp
push
fs
push
mov
ret
es
std
gs
arpl
adc
sbb
add
je
scas
pop
cmp
pop
fsub
mov
movsb
xchg
push
sub
sbb
cltd
or
pop
mov
imul
cmpsl
es
xor
pop
loope
or
jo
jb
mov
sbb
inc
js
jge
sub
dec
pop
stos
sbb
mov
cmpl
or
jp
sub
dec
stos
fsubrs
or
aas
dec
loop
and
fldl
jno,pt
mov
cld
ljmp
push
in
fnstenv
leave
popf
add
js
and
pop
pextrw
outsl
push
movsl
mov
fstps
cmpsl
test
mov
lock
icebp
adc
adc
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
pushf
jle
mov
mov
mov
jae
mov
mov
xchg
adc
icebp
pusha
and
mov
sub
add
fucomp
adc
mov
sbb
pushf
imul
sub
xor
inc
xchg
mov
or
cmp
jmp
or
fldcw
inc
stos
loope
or
or
sti
stos
inc
xchg
sub
sbb
sub
dec
sub
imul
adc
add
mov
inc
or
mov
xchg
mov
ljmp
shl
jne
xchg
cmpsb
in
fidivrs
mov
push
jle
jns
test
ds
or
arpl
fadds
int
mov
cmp
jb
jae
imul
mov
cmpsl
inc
sub
pop
add
pop
mov
test
js
mov
adc
shrb
aaa
in
int
sub
add
sbb
push
std
mov
clc
pop
xor
ret
in
jo
cmp
sti
lods
sbb
mov
scas
dec
lods
movsl
push
xchg
cs
adc
cmovae
inc
dec
fcmovu
or
inc
adc
mov
cmp
stos
ret
inc
movb
out
aas
sbb
cmovge
push
mov
imul
int3
and
or
cld
sub
dec
je
xor
mov
cmpsb
cmpl
out
iret
fisubrl
pop
aaa
roll
insl
cmp
push
ds
shlb
jg
push
cmp
mov
mov
add
xchg
out
lcall
sbb
sub
jecxz
push
push
bound
fldenv
xchg
jmp
lret
mov
test
stc
and
ja
inc
mov
mov
insb
test
jecxz
jle
es
cld
lods
insb
lods
arpl
dec
test
push
or
sbb
cmp
test
mov
movsb
xchg
xchg
sub
addr16
cmc
mov
fwait
jl
ffreep
push
aas
add
stc
mov
add
cs
cltd
sar
fistpl
enter
cmp
and
and
add
add
jmp
in
or
daa
mov
push
mov
mov
iret
aam
and
xlat
mov
outsl
cmc
inc
dec
cmp
lahf
inc
jmp
lahf
cmp
lret
hlt
or
jae
xchg
insl
orl
ss
xor
std
shll
or
movsb
gs
jle
imul
mov
stc
pop
iret
xor
push
xor
dec
orb
pop
cmpsl
shll
mov
or
into
pop
ja
shll
mov
fldenv
addl
movsl
je
mov
mov
fucomi
cmp
sbb
pop
arpl
fs
adc
inc
add
pop
cltd
mov
lods
sub
or
push
pop
jp
popf
loope
sub
pop
and
std
cmp
cmp
icebp
push
pop
pop
mov
pop
cmp
sahf
loop
popa
xchg
cmp
loope
mov
push
bound
inc
stos
adc
dec
inc
ss
outsl
adc
pop
pop
and
mov
es
sahf
dec
sub
jle
pop
cmp
cwtl
and
in
pop
in
pop
adc
andb
xor
mov
mov
jp
lods
shl
in
pop
lods
sbb
or
lret
dec
cmp
inc
cld
or
add
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
adc
cmp
add
pop
xchg
add
pop
jmp
inc
fsubrs
es
sahf
push
and
push
data16
or
pop
or
jae
mov
jbe
mov
jmp
push
jle
in
int
lcall
sub
mov
xchg
pop
fldlg2
pop
xchg
jmp
test
jge
and
scas
sub
testl
fcoml
addr16
jae
ljmp
stos
push
cmpsb
mov
and
add
sti
sub
ja
xor
movsl
lods
pop
adc
std
insl
mov
int3
push
dec
movsb
mov
je
xchg
and
sub
loop
xchg
cmp
data16
jbe
inc
xorl
adc
aam
mov
fdivrs
sti
push
mov
scas
andb
fnsetpm(287
push
stos
cld
aas
loop
xchg
xor
shll
iret
cltd
aad
les
lea
adc
fiadds
enter
sbb
rep
push
xor
int3
xor
jnp
sbb
dec
es
fidivs
mov
xor
js
and
sbb
mov
xlat
fisubrs
and
addr16
out
sbb
jle
sub
imulb
mov
xor
pop
cli
sub
addr16
fdivr
loopne
and
aam
aas
scas
jbe
movnti
mov
mov
jl
ds
xor
inc
in
stos
lret
fs
les
inc
movsb
repz
lahf
imul
and
fstpt
int
push
cmp
and
bound
add
xor
test
daa
imul
xchg
mov
dec
dec
lahf
inc
mov
aad
scas
pop
mov
ja
aad
mov
arpl
xorl
daa
jecxz
ljmp
pop
xchg
stc
jae
add
loope
mov
jnp
ja
scas
arpl
push
lahf
and
jae
pop
jbe
lock
add
ljmp
icebp
repnz
fst
in
cld
arpl
push
jns
test
stos
movsb
pushf
xchg
sub
insb
and
and
cmp
fs
stos
mov
xor
push
jmp
xor
and
xor
out
clc
int3
add
loop
enter
or
faddp
dec
xchg
ss
mov
lods
or
jg
push
pop
push
cmp
sub
dec
xor
lds
addb
in
aaa
or
loope
insb
fidivs
push
mov
mov
dec
xor
ss
mov
gs
push
daa
jmp
jbe
scas
aas
sbb
lret
rcrb
inc
cmpsl
mov
cmp
stos
jns
mov
loop
lret
add
fldenv
sub
push
and
or
jle
jg
shr
cwtl
push
fiadds
mov
stc
jb
add
je
or
cld
jo
mov
icebp
clc
shlb
aam
pop
push
fildl
popl
mov
xchg
and
cmpb
jp
imul
push
xchg
movsb
sbb
btc
arpl
imul
arpl
jno
mov
aas
add
mov
shl
loop
add
in
loope
or
cmc
mov
pop
adc
mov
mov
cli
sbb
fnstcw
rolb
aas
mov
sbb
push
jp
leave
jnp
add
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
mov
mov
mov
loopne
xchg
and
popf
inc
xchg
in
ja
xor
call
loopne
add
xchg
and
sbb
sbb
insb
les
or
ficompl
sti
ret
adc
mov
in
mov
jg
leave
xchg
sbb
scas
jne
flds
xor
jne
xchg
arpl
xchg
ja
xchg
mov
sar
and
sbb
aam
jle
in
imul
hlt
test
and
outsw
lods
dec
shrl
call
test
test
dec
mov
xorb
mov
xchg
xchg
ja
aam
adc
js
ss
inc
sbb
sarb
sub
inc
roll
aas
sbb
xchg
aad
mov
sub
dec
push
cwtl
pop
cmp
clc
mov
pop
test
inc
arpl
mov
and
out
add
into
scas
and
and
std
sub
int
leave
mov
pop
inc
cld
push
int
adcl
scas
push
test
icebp
pop
add
loope
pushf
ja
mov
pop
sub
jno
xchg
imul
aaa
mov
nop
push
push
cmpsb
xchg
cmc
hlt
sar
cmpsb
adc
mov
sbb
xchg
pop
jne
subl
cmp
dec
inc
or
pop
or
insl
pop
and
lret
ss
jno
sahf
arpl
xchg
out
clc
push
xor
cmp
stos
aad
and
mov
sub
popa
call
xchg
jmp
jmp
cltd
std
daa
jecxz
mov
sub
arpl
lcall
dec
arpl
and
push
imul
leave
mov
jb
js
jo
call
loope
sub
inc
xor
mov
jb
adc
ljmp
test
ja
jnp
int3
mov
gs
cli
clc
inc
mov
mov
jns
jno
adc
dec
adc
fimull
shll
adc
nop
lods
xchg
or
xchg
mov
in
sahf
lods
pop
dec
or
sub
xchg
pop
fwait
adcb
outsb
mov
outsb
mov
xchg
mov
out
or
call
lahf
addr16
xor
fcmove
dec
pushf
pop
popf
mov
sub
outsl
xchg
mov
jp
xchg
and
pop
xor
les
scas
int
mov
jo
sub
inc
xchg
inc
cmp
mov
cmp
dec
ror
or
stos
repnz
out
cmp
mov
jl
cmp
pop
cmp
lea
and
jp
test
sub
fcompl
bound
jno
pop
mov
inc
stos
lods
push
je
mov
pop
xchg
iret
sbb
cwtl
cmp
adc
jg
sbb
jns
push
aad
bswap
push
in
push
xchg
adc
or
pop
mov
jecxz
xchg
jmp
mov
xchg
xor
dec
jl
stc
jb
push
push
fstpl
in
inc
aas
jo
adc
sub
fwait
jo
sub
scas
mov
mov
mov
loop
cmp
test
rcrl
xchg
and
es
jae
inc
ffreep
inc
ljmp
imul
cmpsl
dec
fs
or
dec
imul
fcmovbe
xor
shlb
push
sub
ret
shll
xor
mov
pop
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
mov
lods
mov
adc
adc
xor
inc
inc
mov
cmpsl
shll
mov
jge
iret
sbb
jecxz
dec
ds
add
pop
out
lahf
data16
sahf
outsb
xchg
mov
xchg
pusha
lahf
or
push
mov
sbb
inc
jbe
cmp
cwtl
sbb
in
mulb
data16
popw
inc
fisttps
or
gs
lods
mov
mov
les
lret
sti
and
jg
dec
add
push
out
insl
dec
mov
pushf
test
arpl
testb
jo
lea
inc
loopne
sub
adc
push
and
add
cli
mov
lret
pop
fdivr
mov
xchg
popa
bound
imul
fsubs
inc
negb
rorl
lcall
scas
xor
out
push
adc
ljmp
or
fcoml
shrl
xchg
fisubrl
into
movsb
add
in
roll
divl
popa
imull
lcall
addr16
dec
stos
lret
mov
imul
scas
mov
scas
stos
in
xchg
clc
lret
inc
cmc
mull
repnz
jge
cmp
ucomiss
adc
inc
fcomi
mov
adc
int
mov
andl
lds
or
int
fwait
loop
jns
ljmp
nop
xchg
xchg
jp
xor
bsf
fisubrl
dec
xor
xor
sbb
movsl
js
subb
in
pop
dec
push
fsubl
int3
xchg
lret
lret
adc
sub
jmp
cmp
lret
xchg
enter
call
and
divl
pop
push
jbe,pt
int
les
push
add
xor
stos
addr16
jb
sbb
push
ja
pushf
filds
out
add
jbe
fistpl
xchg
mov
ret
cltd
fnsave
repz
loopne
sub
arpl
int3
popa
test
insb
roll
repnz
cmpb
pop
and
mov
lock
aaa
roll
push
enter
add
dec
movsb
insb
lea
adc
out
pop
pop
sub
lret
cwtl
push
lcall
dec
cwtl
dec
int3
sbb
sbb
mov
push
repz
repnz
pop
sbb
inc
and
adcl
and
mov
dec
mov
enter
lods
cmp
mov
mov
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
pop
jb
or
adc
adc
push
movsl
loopne
xchg
out
adc
push
adc
fldenv
int3
and
push
fld
add
adc
fildl
lock
sub
jns
jo
pop
adcb
loop
and
and
jecxz
xor
imul
jmp
sub
cmp
jmp
daa
mov
mov
aam
push
test
push
xsaveopt
jae
in
pop
inc
jecxz
mov
mov
xchg
aam
rorl
adc
mov
aam
cwtl
ret
sub
cmc
bound
test
lea
ret
push
mov
push
dec
out
dec
movsb
mov
or
push
and
insb
mov
out
xchg
shlb
push
in
out
mov
and
stos
aaa
cmpsl
pop
cmp
movsb
cltd
sbb
xlat
jge
lea
int
mov
subl
push
add
cwtl
cmp
push
int
mov
pop
in
call
mov
push
lds
aaa
add
add
and
xor
test
sub
mov
push
lods
in
mov
mov
mov
stos
addr16
mov
ret
inc
push
adc
adc
jmp
jne
pop
out
fcomps
inc
insb
pop
adc
or
sbb
aam
jg
cwtd
jnp
cmpb
pxor
loopne
fsubrl
out
cmp
dec
mov
jl
les
je
sub
movsl
mov
push
add
inc
fidivl
cmp
das
sbb
fwait
into
mov
fcmovnu
stos
lea
insb
repnz
push
xchg
mov
adc
les
add
pop
push
cmc
scas
push
int
adc
mov
dec
into
int3
insl
add
repz
push
cmpsl
push
pop
pop
xchg
arpl
pop
fbld
dec
mov
or
or
lcall
mov
mov
frstor
out
hlt
mov
sbb
add
iret
xlat
cld
jbe
xchg
hlt
adc
and
xor
movb
sub
jg
dec
lock
and
gs
jl
in
push
ja
or
mov
and
xor
and
push
sub
outsl
xchg
sub
jns
loopne
jp
xor
imul
push
pop
les
mov
jg
xchg
add
mov
cmp
push
icebp
xor
lret
lods
in
inc
rclb
repz
in
fnstenv
insb
jnp
mov
jae
cmp
cmc
pusha
xchg
iret
or
sub
mov
sub
movl
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
jns
push
stc
adc
adc
cmc
pop
sbb
iret
daa
adc
xorb
jg
popf
out
cmc
shl
fstpt
xchg
dec
xchg
push
mov
cmpsl
pop
mov
sub
or
mov
push
adc
pop
jecxz
sti
xor
aaa
std
adc
shrl
imul
arpl
dec
int
std
jp
jno
rcl
lret
mov
hlt
mov
addr16
mov
hlt
roll
cmp
pushf
add
idiv
xchg
mov
xor
dec
jg
and
jno
insl
adc
pop
push
mov
fisttpll
xor
aaa
ud0
push
xlat
mov
xor
add
lock
jne
pop
dec
jle
hlt
test
inc
aam
std
in
es
sub
fisubrl
loope
pushf
pop
fistps
imul
stos
mov
dec
div
mov
xchg
fdivrp
adc
mov
shrl
jecxz
out
mov
data16
inc
cli
imul
das
fs
into
mov
add
mov
lods
das
bound
ljmp
test
insb
jbe
cmpsl
sub
icebp
ret
push
out
push
stos
addr16
test
or
lret
mov
data16
or
cmc
ja
inc
and
test
jp
jmp
dec
add
sub
mov
repz
insb
push
jbe
loope
outsl
or
out
lea
adc
rorb
add
lcall
aaa
bound
adc
dec
insl
push
inc
cmp
fisubrl
insl
ror
sbb
inc
inc
es
pop
mov
mov
add
movsl
xchg
jae
mov
lahf
lea
test
mov
rcr
xchg
mov
push
popf
dec
es
jo
ljmp
mov
and
xor
int
cltd
mov
js
fcoms
dec
cli
negl
sub
mov
mov
or
fwait
arpl
leave
push
out
dec
add
dec
lds
mov
ljmp
rcl
fwait
call
add
dec
mov
loope
sbbb
dec
cmpsb
add
das
jp
sbb
cmpsb
inc
inc
jo
outsb
pop
xor
outsl
or
call
jl
sbbl
push
int3
mov
pop
pop
in
jbe
test
xchg
mov
mov
sbb
lcall
fwait
jge
push
lahf
test
lds
or
add
add
rol
and
inc
add
daa
add
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
adc
push
out
adc
adc
fistpl
shrl
dec
jns
test
mov
or
jecxz
mov
jmp
mov
hlt
or
call
dec
mov
iret
mov
cmp
dec
in
rclb
push
mov
xor
mov
pop
jge
mov
cmp
in
icebp
inc
imul
inc
push
stc
inc
nop
pushf
jle
lret
arpl
cmp
mov
xchg
inc
mov
mov
test
sbb
jmp
ficomps
lret
dec
pop
in
outsb
and
cmpsb
dec
pushf
or
adc
imul
arpl
imul
dec
and
mov
adc
mov
cmpl
xchg
mov
sbb
into
rorl
push
adc
and
out
out
pop
insb
push
lret
adc
andb
xor
push
and
push
pop
pushf
mov
out
scas
sub
and
pop
push
out
fs
daa
dec
inc
mov
ljmp
popf
dec
js
jmp
mov
cmp
aad
test
xchg
mov
xor
and
outsl
dec
inc
dec
and
sbbb
js
pop
cmpsb
shl
mov
in
dec
addr16
pop
xor
loopne
aam
insl
nop
dec
jmp
jg
sub
lea
into
add
insb
and
movsb
pushf
aam
jb
rcl
sub
pop
aas
jp
pusha
sbb
lods
fstpt
and
mov
subl
outsl
jns
inc
fildl
cmpsl
cli
cwtl
cmp
jle
outsl
das
adc
cmpb
repnz
rcrl
mov
adc
lret
or
ds
mov
fdivl
rcl
mov
push
mov
les
lods
adc
aad
subl
fnstcw
and
icebp
mov
scas
push
sbb
mov
js
pop
xor
inc
xchg
inc
jno
faddl
jne
or
mov
in
adc
xchg
dec
in
leave
test
adc
sub
pushf
data16
xchg
mov
loope
cmc
int
pop
xlat
sub
xlat
cmc
test
push
xchg
xor
out
nop
xchg
mov
xchg
ror
xchg
gs
out
sub
cmpsb
jp
xchg
adc
loopne
data16
cmpsl
stos
aaa
jbe
adc
cmp
nop
push
movsl
xlat
nop
push
push
mov
mov
jmp
mov
cwtl
movsb
fld
inc
and
pushf
jnp
add
inc
and
and
add
dec
and
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
cld
shll
sub
adc
mov
sbb
outsb
dec
cltd
popf
mov
sub
in
mov
mov
sbb
add
fldl
ds
ljmp
and
cltd
xchg
cli
mov
xchg
imul
or
xchg
aad
clc
pop
jl
shll
dec
inc
xor
cld
into
popf
xchg
xchg
cltd
out
call
fmulp
out
inc
jg
dec
punpckldq
lea
ret
dec
push
xchg
jnp
fisubs
bound
loopne
cmpsb
test
mov
dec
dec
sbb
cmp
aaa
mov
mov
or
aas
inc
cvtps2pd
mov
out
popf
push
test
lock
lret
insb
dec
mov
mov
adc
jo
in
in
push
push
in
and
cmp
jo
push
pop
jmp
pop
lods
adc
cmpsl
mov
xchg
call
das
shll
sbb
imul
in
sbbb
dec
xchg
add
xchg
push
in
icebp
xor
movl
subl
cmp
fistl
sbb
int3
andl
inc
lods
mov
jb
mov
mov
outsb
dec
jb
sub
sub
sbb
popa
xchg
div
xchg
push
jns
jb
jge
lea
mov
into
add
xchg
xor
push
inc
neg
sbb
ljmp
xchg
in
fnstcw
mov
xchg
dec
fiaddl
xchg
in
daa
dec
jecxz
pop
stos
push
xor
ja
fists
fisttpl
mov
inc
leave
sbb
sbb
stos
faddl
es
or
cltd
stc
jns
push
mov
scas
das
xchg
test
lods
lahf
xchg
inc
loope
mov
pop
in
cmp
sub
sahf
fimull
cmp
sub
stos
cltd
test
ss
jno
aas
fmuls
scas
js
gs
decl
lcall
mov
adc
mov
mov
add
insb
repz
inc
rcll
and
xchg
cmpsl
inc
jbe
dec
dec
stos
sbb
lahf
imul
mov
iret
pop
jg
jecxz
repnz
pop
fnsave
adc
xor
rorb
push
xchg
mov
mov
inc
xor
out
xor
dec
lret
daa
add
dec
cmp
shlb
out
and
arpl
insb
iret
pop
dec
xor
xchg
push
sub
push
movsl
in
cmp
in
cmc
movsl
add
xchg
lcall
add
jo
sub
sbbl
dec
and
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
sbb
data16
in
adc
jno
filds
cmp
pop
addr16
adc
outsl
test
mov
cmp
loop
pop
mov
inc
jbe
pop
cld
cmp
lret
test
fstpl
out
sti
das
aad
xchg
hlt
cmp
scas
xchg
cmp
adc
cwtl
mov
push
and
xchg
xchg
ror
in
and
outsb
pop
cmp
cmpsl
shl
and
jp
ficompl
sbb
clc
sub
shll
dec
int
pop
sbb
pop
dec
js
and
dec
mov
popa
ja
jmp
xor
daa
outsl
ds
mov
xchg
xchg
out
adc
xchg
shll
jle
test
pop
bnd
loope
inc
int3
mov
sbb
push
ja
inc
ja
cmp
dec
loop
mov
cmp
repnz
push
mov
loop
xchg
lock
lcall
fcoms
sbb
test
mov
cmp
push
icebp
and
xor
inc
mov
mov
pusha
jmp
pop
fs
sbb
ss
inc
loope
cli
mov
mov
out
jne
lret
mov
cmp
movsb
nop
inc
rcll
pop
or
bsf
push
rorb
jl
cmp
test
loopne
jae
ret
lock
bound
aas
mov
cmc
cmp
aas
lods
das
dec
pop
scas
inc
repnz
jnp
dec
and
out
in
cmp
pop
jmp
dec
scas
mov
xchg
push
push
lahf
daa
ret
shlb
xchg
gs
into
add
mov
gs
in
sbb
fdivrl
aas
into
into
push
xorb
sbb
mov
test
incb
fists
fmull
mov
cs
into
mov
mov
jg
cmp
jns
orl
orl
xor
jl
mov
call
scas
in
sbb
orl
lret
cmp
or
mov
or
cmpl
cmp
jne
and
shlb
fxch
pusha
mov
mov
jo
ja
pop
loop
dec
in
es
subl
jge
sbb
fists
pop
mov
xor
adc
push
lea
mov
sbb
shlb
adc
pop
frstor
jnp
test
mov
add
in
dec
fs
pop
insl
in
aad
sub
loop
and
xor
push
inc
mov
stos
aad
xor
sbb
shll
mov
jbe
ds
lods
test
adc
dec
lods
bound
movl
adc
adc
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
subb
jnp
adc
adc
lods
push
dec
mov
int3
test
add
arpl
cli
add
rolb
pushf
mov
push
cmpb
lods
test
cmpsb
xor
mov
lds
sub
dec
outsb
popa
add
push
push
lret
inc
stos
sbb
int
mov
lock
int
xchg
lock
or
or
leave
pusha
shrl
fs
jae
cmp
jg
test
xchg
mov
es
and
fsubl
sbb
add
mov
inc
pop
pop
jle
pop
cmp
and
sbb
ja
outsl
ss
xchg
xor
and
add
xor
ret
subb
movsl
fsubrs
nop
test
jae
fstpt
add
xchg
dec
outsb
adc
imul
pop
scas
sub
enter
test
inc
imul
xchg
sbb
xor
addr16
loope
js
out
sahf
popa
xor
add
sbb
sbb
outsl
popa
xchg
push
mov
or
notb
orb
mov
nop
mov
adc
inc
mov
mov
xchg
xor
test
cltd
add
out
enter
iret
jb
push
jp
adc
stc
test
inc
loop
test
fadd
xor
sbb
jge
mov
push
mov
mov
inc
dec
pop
and
fmuls
nop
jne
lret
mov
add
push
push
add
and
adc
cwtl
cmp
ret
mov
add
inc
das
dec
push
testb
mov
lret
dec
ret
jnp
pop
mov
inc
pop
out
inc
into
push
daa
jmp
loope
xchg
xlat
sub
or
pop
cmp
adc
push
mov
jb
xchg
push
ret
sub
and
fldt
movsl
mov
pop
mov
xchg
mov
push
mov
adc
pushf
adc
push
ja
sbb
mov
mov
xchg
fstpt
stos
inc
lock
cmpsb
mov
jns
pusha
jl
lock
ljmp
dec
cmp
xchg
in
jecxz
push
xchg
insl
mov
mov
add
xor
popa
sub
push
pop
jne
inc
in
loope
sti
jl
sub
iret
xchg
sbb
xor
pop
repnz
sahf
xchg
movsl
ds
adc
push
lock
xor
cmp
xchg
and
sarl
pusha
cmp
inc
mov
mov
mov
mov
mov
and
xorl
jl
repz
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
mov
xchg
movlps
lock
call
push
ja
xchg
mov
inc
push
mov
xlat
iret
out
sub
fsubs
mov
dec
add
sahf
cs
cld
sarl
jns
mov
fsubl
outsb
cmpsb
aaa
xchg
call
shl
cmpsl
sahf
aad
dec
jmp
add
pop
in
lods
out
sub
add
mov
sbb
and
push
call
aad
jg
outsl
xchg
add
sbb
sub
mov
rcrl
dec
sub
scas
mull
lret
fdivrl
mov
test
inc
lret
xor
inc
and
jae
dec
mov
mov
add
or
mov
dec
xchg
dec
xchg
out
xor
push
mov
outsb
test
adc
xchg
int3
jecxz
roll
ficomps
rorl
lods
fisubl
std
pop
xor
lret
xchg
jbe
insl
scas
mov
or
add
loop
jp
bswap
iret
inc
popf
adc
jns
in
stos
lock
jmp
cmp
xchg
imul
das
jbe
ja
xchg
icebp
adc
and
cli
inc
push
xchg
sbb
pop
call
and
adc
cmp
xchg
sahf
arpl
mov
inc
push
jg
imul
pop
int3
and
fldl
cmp
jle
loop
mov
sbb
sbb
js
pop
pshufw
mov
push
loopne
out
mov
jb
cs
adcl
push
and
xor
repnz
or
push
not
std
dec
add
insb
and
jg
pop
cwtl
cmpsl
push
jecxz
xor
dec
jnp
out
pop
pop
or
les
push
cmp
dec
cld
jge
jp
in
enter
mov
lds
int
xchg
jl
mov
and
jnp
cmp
inc
mov
mov
xchg
mov
jl
stc
ret
mov
inc
jl
pop
and
push
mov
pop
pop
or
push
scas
inc
mov
add
and
adc
js
xor
jbe
stc
pop
pop
test
xchg
mov
add
pop
xor
and
in
adc
int3
mov
adc
movsb
pop
adc
in
gs
aaa
mov
mov
aas
push
movsl
jmp
cmp
lock
out
subl
xchg
movsl
scas
bound
leave
les
sbb
sbb
pop
andb
icebp
jbe
add
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
xor
or
xchg
movlps
pop
stos
inc
ljmp
stos
push
js
cltd
stc
aaa
sub
clc
mov
jp
jbe
call
sub
xchg
pop
push
jae
dec
lods
xchg
loop
testb
jnp
dec
out
pusha
dec
cwtl
inc
test
pop
lods
stc
add
cltd
jl
sar
aaa
and
int
imul
jbe
shlb
mov
rorb
xor
pop
repz
lret
aaa
leave
sahf
test
mov
mov
test
cmp
add
add
movsb
cmp
ja
lret
dec
jmp
or
repnz
pusha
pop
stos
xlat
inc
mov
addr16
and
es
popa
mov
sbb
rclb
sbb
xchg
cmpsl
dec
xlat
outsl
or
addr16
pushl
add
call
aas
cmp
and
push
cmove
dec
and
movsb
incb
cmc
scas
hlt
test
fstpt
jecxz
scas
xchg
xor
fistpll
shrl
es
mov
je
xchg
pop
cmpsb
rorl
cmc
mov
dec
lcall
mov
push
adc
cmpsb
inc
adc
inc
pop
pop
in
insb
mov
movsl
xlat
push
jmp
add
pop
xor
and
fcompl
dec
cld
and
outsb
dec
inc
loope
push
sahf
out
jb
nop
xchg
xchg
in
shlb
or
test
fwait
sbb
dec
dec
out
sbb
adc
sub
imul
loope
push
mov
jecxz
add
punpcklwd
xor
mov
xor
add
outsb
lds
in
push
inc
sbb
fbld
pop
sub
mov
pop
cli
rcrl
inc
jo
movsl
cwtl
lods
sub
mov
lock
mov
mov
jns
movsl
aas
cmp
xor
push
adc
js
jmp
mov
mov
cmp
aad
inc
repz
mov
dec
mov
ret
dec
or
mov
cmc
popf
fldcw
xchg
mov
add
imul
inc
add
xlat
sub
xlat
sbb
mov
mov
jnp
idivl
fimull
mov
fistl
iret
fisubrl
sub
push
adc
gs
mov
jmp
and
dec
out
movl
pop
mov
pop
sub
dec
jb
es
mov
xor
movsl
adc
int
inc
pop
testl
pop
pop
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
je
sub
andb
xchg
imul
push
mov
js
stos
xchg
loop
add
xchg
sti
rcl
inc
xchg
incl
in
gs
movsl
pop
test
add
add
imul
xchg
cmp
mov
sarb
dec
mov
mov
stos
test
pop
pop
adcb
aam
leave
and
push
sub
bound
sub
das
movsl
scas
jb
push
es
mov
push
stos
and
imulb
or
add
aas
shlb
fwait
push
add
inc
add
mov
cmc
insb
daa
or
mov
mov
xchg
ficomps
cltd
and
data16
test
xchg
push
cmp
lahf
mov
pop
ljmp
js
fmuls
ljmp
jp
lods
imul
mov
sbbb
sarb
int3
addr16
sbb
cmc
and
and
inc
adc
in
push
pushf
inc
pop
jmp
hlt
lock
sub
icebp
adc
lcall
shlb
hlt
add
dec
out
jnp
stc
addr16
aam
mov
add
cwtl
mov
testl
pop
inc
dec
inc
mov
shr
push
xchg
or
jle
jbe
xchg
testb
scas
and
rcrl
inc
adc
pop
es
jmp
pop
cli
aas
nop
ds
loop
sub
xor
pop
xor
xlat
and
jp
mov
dec
cld
out
lcall
bound
shll
subb
lods
xchg
lods
es
mov
push
rorl
icebp
dec
inc
pushf
lret
or
xchg
add
pop
push
mov
popa
in
bound
js
lcall
mov
cli
sub
push
xchg
ja
push
xchg
cwtl
daa
in
shll
and
add
sub
fisubrl
jl
push
call
imul
mov
subl
and
dec
or
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
test
adc
movlps
sbb
cwtl
jns
mov
iret
push
inc
jb
fnstsw
mov
data16
outsb
adcb
int
add
lods
cltd
fsub
out
outsb
mov
insb
jl
jmp
xchg
cwtl
xchg
loopne
add
ljmp
repnz
call
fs
lods
incl
outsb
mov
das
loope
loop
pop
pusha
push
sti
push
cwtl
add
lods
test
mov
aaa
and
in
or
pop
xchg
into
jo
cmp
nop
add
jge
add
loop
or
mov
push
dec
jp
out
enter
iret
mov
popa
lods
int
mov
repz
xchg
dec
cmpsb
clc
push
ljmp
mov
popf
arpl
testb
fiaddl
mov
sub
or
cmc
into
pop
shlb
dec
mov
leave
fnstsw
lea
cmp
iret
sub
adc
mov
sarl
arpl
int
fstl
cld
cmp
adc
ss
idivb
pushf
cmpb
adc
adc
fnsave
fbstp
pop
shll
fnstcw
sbb
push
fwait
or
xor
push
lods
add
add
cld
inc
xchg
or
xchg
in
sub
jl
xor
pop
xor
imul
outsl
stc
mov
adc
jno
js
cwtl
sti
sbb
out
mov
pop
and
lcall
mov
inc
dec
ffreep
jp
jno
and
adc
sahf
inc
aam
mov
int
call
std
push
movsl
pop
mov
out
dec
sub
pop
cmpsl
gs
in
imul
stos
inc
rcl
mov
push
push
jmp
test
pop
sbb
dec
sbb
mov
inc
mov
adc
and
mov
jnp
outsl
push
ds
pop
mov
movsl
out
add
decl
rol
fcom
push
add
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
push
pop
mov
lret
enter
call
xor
ja
sub
fadds
xchg
insb
inc
lods
loope
or
ficoms
cmp
es
aas
and
hlt
pop
insl
insl
push
mov
mov
push
sub
mov
insl
jl
movsl
repnz
add
testb
movsl
push
xchg
fsubrl
leave
and
mov
cmc
xor
sbb
inc
or
push
pop
mov
mov
inc
cmp
lds
int3
shlb
lcall
dec
pop
inc
mov
xchg
adc
dec
mov
dec
cltd
aam
sti
xor
int
imul
add
sbb
shll
cld
inc
clc
push
push
nop
mov
icebp
lret
outsl
sbb
adc
pop
lret
clc
enter
imul
aam
and
mov
pop
ss
jg
movsb
lret
js
sbb
xchg
repz
mov
stos
lods
dec
mov
add
xor
incb
and
xor
adc
mov
inc
push
cltd
pop
ja
push
fimull
icebp
and
repz
mov
psubusb
jp
add
in
mov
sbb
xchg
xchg
loope
fisubrs
mov
mov
stos
pop
lods
fnsave
popa
clc
xorb
adc
jg
addr16
xlat
sbb
jns
sub
into
and
or
mov
inc
xchg
lods
aas
xor
mov
andl
mov
movsb
mov
jno
aaa
sbb
mov
push
out
sub
mov
dec
adc
mov
out
add
pop
lods
xor
hlt
push
and
fnsave
inc
sub
xchg
lock
cmp
mov
das
mov
jb
arpl
mov
and
test
sub
dec
imul
pop
es
testb
jecxz
xor
adc
sbb
aad
icebp
dec
ds
push
stc
cli
sbb
dec
xchg
aaa
imul
imul
add
cmpl
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
sub
jle
adc
adc
nop
dec
cld
out
in
add
or
int3
pop
lret
pop
push
dec
push
scas
adcb
inc
cmp
jmp
enter
fdivs
dec
ret
xchg
adc
dec
stos
push
iret
xor
jne
and
out
aas
fistpll
inc
ret
call
xchg
iret
in
mov
ret
fucomip
cmpsl
or
leave
loope
loope
cmp
mov
jne
mov
sbb
sahf
or
xchg
and
das
pop
adc
lcall
addr16
xchg
gs
xchg
stc
xor
jno
stos
sub
ret
adc
imul
push
shll
sbb
xchg
push
movsl
stc
gs
mov
pop
ret
dec
xor
xchg
enter
dec
and
mov
mov
push
xchg
faddl
adc
stos
sbb
add
test
push
push
iret
dec
push
cmpsl
push
lods
mov
sarb
sbb
shlb
mov
je
lcall
mov
add
out
ja
sbb
xor
test
lock
popf
les
pop
cmp
cmc
adc
push
xchg
test
addb
push
cwtl
xchg
mov
mov
je
out
adc
ret
sub
loop
sub
push
in
sbb
or
xchg
pop
aas
xchg
pop
or
sbbb
out
push
jecxz
add
pop
mov
ficoms
dec
dec
inc
aad
inc
pop
ds
ljmp
nop
stos
mov
pop
xor
or
sub
hlt
cmp
call
add
testb
push
repz
inc
and
das
xchg
icebp
jl
mov
loope
sbbb
sub
dec
or
in
icebp
jmp
scas
in
inc
inc
es
sbb
fs
sahf
sbb
sbb
pushf
and
mov
push
movsb
negl
pop
hlt
jge
jmp
pop
shll
test
pop
add
jo
push
fadd
test
pushl
jp
add
inc
mov
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
and
adc
adc
push
pop
test
loopne,pt
ds
movsl
imul
pop
cwtl
imul
leave
lea
inc
das
adc
hlt
ja
cmp
pop
movsl
or
push
dec
lock
sbb
pop
xchg
orl
xchg
hlt
dec
mov
sti
fs
out
rorl
imul
and
jmp
in
repnz
daa
push
pop
xor
xor
test
into
push
mov
inc
push
jae
and
aad
and
rcrb
mov
testb
push
push
rorl
push
adc
in
pop
icebp
sbb
inc
xor
mov
cwtl
adc
xchg
pop
xchg
test
push
lret
insl
jmp
fwait
sbb
add
inc
or
pop
pop
mov
sbb
scas
cs
cmp
repz
push
ret
neg
mov
iret
test
loopne
xchg
outsl
pop
xor
push
dec
sub
mov
lods
cmp
jns
inc
test
mov
mov
mov
mov
stos
pop
imul
imul
cmp
inc
pop
push
push
dec
fcompp
pop
test
xchg
xlat
jmp
dec
decl
mov
inc
push
pop
jl
mov
aaa
ror
inc
rclb
outsb
loop
scas
arpl
pop
lock
inc
sub
orl
xor
adc
and
xchg
test
inc
mulps
or
rclb
inc
scas
das
call
push
das
adc
into
push
push
adc
dec
jb
and
mov
ret
push
xchg
cmp
out
jbe
pop
shll
pop
pusha
pusha
jge
xchg
movl
pop
inc
mov
loope
out
mov
pop
cwtl
andl
out
jne
inc
addr16
outsl
push
cmp
aas
das
popa
mov
leave
fadd
popf
aad
dec
push
dec
lock
push
jnp
je
pop
and
das
test
push
xor
add
add
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
push
stos
jge
adc
adc
xchg
popa
sbb
sub
jae
pop
mov
int3
sub
das
aam
add
sbb
mov
and
mov
sbb
mov
dec
mov
ja
push
inc
lret
in
ffree
and
ja
mov
nop
add
xchg
loop
or
jbe
mov
pop
lahf
call
sub
les
sbb
jp
call
je
inc
fiaddl
sub
jb
loop
xchg
fs
fnsave
pop
pop
cmp
mov
cmp
ds
clc
inc
clc
mov
mov
xchg
or
insb
out
test
sub
test
push
xlat
and
mov
aad
inc
test
ficoml
adc
in
movsl
repnz
cli
push
sbb
mov
or
mov
lods
dec
lahf
sub
lahf
nop
shlb
adc
mov
das
sub
sahf
data16
sbb
out
push
std
sub
call
push
and
mov
sarl
stos
gs
pop
mov
lret
or
add
pop
add
pop
nop
push
add
hlt
jae
push
test
and
shrl
jns
int
nop
mov
cld
incb
loop
fsubp
adc
bound
ficompl
roll
sub
rcrl
mov
in
cmc
cwtl
pop
bnd
ret
cmp
xchg
fstps
xchg
sub
testb
pop
mov
xor
dec
xor
scas
xor
add
icebp
aas
repnz
push
dec
mov
lock
jno
fs
mov
dec
mov
imul
dec
push
mov
mov
leave
pop
ds
inc
outsl
dec
push
out
ds
mov
jle
lods
lcall
mov
shr
push
pushl
push
shrl
mov
add
lea
mov
and
mov
cmpl
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
mov
adc
movlps
and
xchg
xor
mov
add
fcmovu
jp,pt
inc
xor
jp
js
mov
inc
icebp
add
pop
add
dec
stos
ret
shll
sub
add
scas
sub
cmp
mov
mov
addr16
popf
xchg
test
sbb
test
adc
add
cmp
roll
mov
in
mov
shl
cwtl
sti
sub
adc
mov
mov
sub
mov
lods
icebp
gs
sbb
add
popa
ret
or
mov
pop
sarl
jg
fildl
cmp
pop
fdivr
sbbb
or
xor
mov
mov
pop
lahf
iret
jge
inc
sub
inc
lcall
dec
push
je
mov
mov
popf
xchg
fwait
add
jge
xchg
xchg
scas
pop
adc
xchg
xchg
jl
leave
pusha
inc
fsubrp
jae
ficomps
imul
inc
dec
pop
cmpb
mov
insl
cmp
xor
int3
cmpsb
jbe
outsb
xchg
xor
iret
loopne
dec
or
gs
repz
pop
cli
mov
dec
push
xorl
push
push
and
fdivs
fs
sub
addr16
pop
notl
pop
or
mov
jns
stos
sbb
out
in
out
stos
iret
mov
cmovae
lock
xor
mul
stc
mov
sbb
scas
mov
pop
push
fadd
ja
jecxz
jp
cmc
les
sar
outsb
inc
sbb
in
lahf
mov
mov
aaa
pop
pop
shll
xchg
jbe
sub
mov
mov
mov
popf
or
adc
push
gs
add
icebp
xor
lret
outsb
mov
push
pop
dec
into
add
sub
jno
lods
push
jae
call
insb
in
sbb
lds
test
out
rcrl
imul
jne
popa
jl
mov
push
stos
xchg
stos
jnp
aam
push
lock
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
or
enter
js
dec
xor
int3
movsl
dec
sbb
sbb
pop
shrb
jecxz
sti
mov
lcall
xor
sub
xchg
xchg
add
test
push
push
mov
push
data16
adc
repz
lret
mov
mov
int
push
xor
call
mov
pop
push
out
data16
scas
movsw
orb
ss
push
in
fdivp
popf
jb
je
testl
popf
and
scas
in
sti
sub
push
jae
fcmove
xor
and
push
fistpl
lahf
cmp
outsb
xor
test
jb
adc
imul
nop
aam
aaa
and
jae
loop
mov
scas
push
push
jl
mov
outsl
call
push
adc
lods
sbb
jno
sub
ret
adc
pop
jae
jne
andl
cmp
mov
and
xor
loop
lret
jge
js
push
in
cli
or
sub
mov
push
pop
cmpsb
test
cmp
hlt
pop
add
js
sarb
fisubrl
xor
jnp
mov
les
sbb
push
adc
fiaddl
push
adc
sti
cli
add
and
xchg
imul
lret
mov
es
xchg
pushf
std
stc
cli
mov
aam
bound
or
xor
add
pop
mov
lds
lds
jno
sbb
sahf
pop
es
lods
dec
add
nop
out
aaa
lret
insb
push
mov
xchg
int3
jnp
dec
mov
sub
or
es
xor
or
fwait
cs
ret
call
dec
fsubr
testb
cmp
enter
mov
cli
sub
in
icebp
inc
inc
xchg
jge
out
pop
cmp
push
cld
inc
pop
std
xor
adc
movsb
test
xchg
and
xchg
mov
ss
mov
adc
adc
xor
mov
pushf
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
mov
lods
adc
adc
rcll
in
jno
mov
jns
jp
xchg
jae
les
and
popa
cli
jbe
aas
pop
ret
lock
fsubrl
in
iret
testb
xchg
jne
cld
fst
clc
push
xorl
push
ret
sbb
inc
dec
scas
test
fs
ljmp
and
test
orl
inc
mov
lods
and
insb
fwait
aad
mov
jmp
leave
lock
gs
add
test
dec
jmp
into
or
cli
or
adc
ja
pop
test
jmp
or
repnz
in
jmp
js
dec
adc
cmp
adc
andb
aad
cld
loop
scas
xor
movsb
xchg
or
or
fcom
mov
fildll
jle
add
les
or
fcomip
or
insb
jo
mov
inc
out
push
dec
ss
push
mov
aad
mov
and
jb
push
pop
push
outsb
dec
std
pcmpeqd
mov
ljmp
xlat
xlat
fidivs
add
jbe
adc
jb
in
inc
push
inc
aad
lret
shll
sub
arpl
pusha
nop
mov
lock
pop
inc
test
sbb
adc
sbb
jp
pop
xchg
mov
mov
jb
fiaddl
push
xlat
jns
pop
dec
mov
push
shl
out
icebp
cli
inc
xor
mov
mov
jbe
aaa
cmp
mov
sub
popa
sbb
iret
notb
testb
in
jl
push
sahf
scas
inc
bound
jbe
pop
inc
pop
and
sbb
and
dec
int
hlt
or
test
insl
in
ret
inc
lret
add
jl
push
fwait
mov
adc
mov
jl
int
xchg
jmp
test
test
inc
jle
iret
cmp
pop
pop
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
rcrb
push
test
adc
movlps
ljmp
mov
cmp
jae
dec
fadds
mov
fs
cmpsb
sub
out
sbb
pusha
xchg
sub
cmp
jp
loop
xchg
imul
out
cs
cwtl
fucomi
mov
gs
fs
sbb
sbbb
fdivs
cmc
mul
add
add
das
out
or
rcl
ror
out
push
sub
leave
and
adc
in
clc
out
and
popa
arpl
adc
inc
pushf
sbb
pop
fmuls
xor
or
pop
cmp
enter
fsubs
push
jns
mov
cltd
ljmp
xchg
or
hlt
mov
sub
lea
in
jl
and
cmc
pop
dec
dec
jp
in
mov
rcrb
sub
pop
lea
add
adc
fsubl
lret
and
inc
test
sarb
push
inc
and
fistl
and
or
inc
mov
adc
fisubrs
pop
cmp
jbe
sub
mov
sti
enter
push
xor
xchg
mov
mov
push
lea
mov
or
xor
mov
dec
aad
dec
push
fistps
jle
pop
lock
push
fs
mov
ljmp
popa
push
cmp
dec
jnp
sbb
xchg
fnsave
xor
into
sub
loopne
mov
test
lea
mov
outsl
leave
scas
mov
sarl
outsb
jmp
int
ljmp
mov
lret
jge
lods
push
stos
push
loop
cmc
push
jl
or
xor
or
fcoms
mov
outsb
int
sbbb
sub
mov
sub
scas
mov
test
test
mov
or
ror
mov
stos
jg
lret
add
loop
xchg
outsl
xchg
cmpsl
shl
fidivrs
or
sub
decl
decl
decl
incl
lret
fmuls
aam
decl
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
push
or
enter
fmuls
aas
or
in
rclb
lods
mov
fsubrs
sbb
adc
shrl
inc
mov
daa
pop
adc
mov
pop
adc
ja
lret
pop
dec
pop
lds
cmp
add
lds
aaa
inc
out
fadds
bound
and
faddl
gs
mov
mov
andl
pop
push
jne
and
sub
adc
mov
xor
clc
jcxz
jl
push
js
leave
push
lock
repnz
pop
mov
mov
daa
jbe
push
adc
sbb
andl
leave
cs
ret
lret
add
or
cmc
aam
jg
push
shrb
xabort
hlt
and
adc
cmpb
mov
ret
pushf
push
test
gs
and
outsb
sti
jo
outsl
inc
stos
divb
out
sbbb
sbb
xor
pop
aaa
sti
lea
setp
mov
enter
mov
push
fbstp
rcrl
sarl
or
push
leave
mov
mov
mov
jbe
fdivrl
mov
js
add
imul
lods
pop
mov
outsl
jnp
es
and
xchg
mov
jnp
push
gs
loop
mov
addr16
add
xorl
imul
popf
push
sbb
dec
or
xchg
std
adc
xchg
mov
add
into
loop
aaa
mov
push
xor
ss
mov
bound
xchg
jo
movsl
dec
push
ja
cmpb
nop
jl
lea
arpl
or
ret
dec
sbb
sub
or
lods
es
xchg
shrb
sbb
cwtl
sub
xchg
aaa
nop
jno
jge
mov
clc
or
js
or
cltd
je
shr
and
add
les
sbb
sbb
addl
gs
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
or
mov
enter
inc
clc
pop
loop
mov
shlb
xor
stc
out
scas
lret
loopne
and
sbb
mov
inc
cmc
lods
stos
and
xor
sub
inc
cli
lcall
and
or
push
mov
sub
jp
lret
scas
jl
lds
xchg
outsb
and
or
shld
dec
and
es
or
loope
int3
xor
pop
cwtl
popf
in
mov
shld
js
xchg
leave
sti
jle
popf
cli
or
mov
cmp
shll
mov
aam
loop
inc
test
or
inc
mov
xor
out
fs
mov
mov
inc
jbe
mov
push
mov
rol
xor
fwait
ljmp
jno
ss
xor
xchg
sbb
pop
xor
out
xchg
pop
cwtl
xor
add
testl
xchg
lds
imull
test
add
arpl
mov
dec
cmp
jg
xor
jne
inc
pop
adc
popf
inc
shlb
mov
jnp
in
xor
push
shlb
out
cmpsb
pop
pop
pop
repz
lret
loop
pushf
xor
and
les
sarl
ret
sub
or
inc
jnp
insl
and
jge
pop
dec
ror
insb
lock
data16
pop
sbb
jmp
jecxz
mov
mov
mov
lods
sub
adc
insl
mov
cmpsl
mov
pop
sbb
ds
movsb
xchg
lods
adc
jl
or
imul
subl
cmp
jno
dec
cs
addr16
lods
fcompl
inc
es
push
bnd
mov
lods
sbb
add
cmp
inc
std
push
loope
sub
mov
sub
sub
out
in
in
sub
adc
mov
cmpsb
in
testl
mov
jbe
icebp
aam
push
lea
pop
outsl
movsb
aam
adcb
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
js
pushf
adc
adc
push
xor
push
in
mov
aas
sahf
out
mov
add
lock
js
sub
jb
sub
jo
pop
out
leave
nop
lret
jb
push
inc
daa
push
fwait
jl
or
xor
jmp
xor
hlt
stc
outsl
lahf
mov
pop
cmp
std
dec
push
pop
pop
cwtl
popa
sub
pop
mov
xor
out
inc
and
mov
es
add
add
xchg
sbb
dec
mov
movsb
jmp
ffreep
pop
jge
xor
cmp
mov
mov
sbb
push
cmpsb
adc
mov
add
inc
or
rol
mov
cmp
adc
sbb
sbb
dec
sub
add
mov
push
je
daa
das
cmpb
imul
mov
pushf
lcall
clc
adc
mov
xor
je
mov
pusha
push
xor
add
jge
jnp
rol
lahf
push
je
pusha
cmp
push
lcall
mov
mov
jo
sbb
mov
sbb
jmp
mov
loopne
lret
cmp
in
push
fcomip
es
decl
ds
push
push
add
lcall
subl
adc
push
dec
pusha
and
xor
inc
xorb
pusha
sub
and
lock
jns
sub
pushf
xchg
ret
sub
inc
dec
mov
loope
and
out
mov
push
pusha
inc
pop
rcrl
jb
jnp
mov
fisttpll
jne
mov
fildl
jmp
push
test
adc
dec
mov
js
jns
or
aam
mov
imull
dec
pushf
out
popf
mov
mov
mov
test
jo
mov
std
aam
lcall
mov
mov
je
pusha
xchg
rolb
inc
nop
movsl
addr16
fadds
outsl
in
xchg
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
lret
jbe
sbb
movlps
lahf
sti
mov
xor
mov
mov
loop
in
mov
dec
pop
sbb
je
jno
imul
aaa
xor
aad
adc
inc
add
sbb
shrl
xor
in
aad
int
std
and
sub
jl
add
adc
mov
out
loop
shlb
mov
cltd
arpl
lods
lret
pop
jmp
xor
push
or
push
mov
add
pop
test
sub
or
dec
inc
cli
inc
mov
std
je
mov
loop
or
push
or
push
addr16
inc
sti
cmc
fs
pop
in
inc
ja
cmp
in
fldt
pushf
popa
mov
xchg
pop
icebp
arpl
jns
inc
push
and
xchg
mov
outsb
sub
xchg
pop
rcll
imul
stos
sbb
inc
jns
pop
sbb
add
scas
xor
jb
jae
idivb
and
dec
int3
mov
push
bound
or
sub
pushf
daa
dec
ret
cmp
mov
sub
fidivl
imull
fcoml
pop
bound
dec
dec
mov
jecxz
xchg
popf
xor
jmp
push
or
into
push
pop
out
test
cmpsl
aad
push
and
clc
cwtl
pop
cmp
xor
pop
cmc
sti
pop
es
sbb
in
or
cld
mov
addr16
adcl
inc
mov
ficoml
pop
inc
in
int3
push
pop
rcll
mov
mov
fmuls
xchg
pop
leave
dec
xor
rolb
mov
or
mov
les
sahf
outsl
fistl
jl
dec
sbb
push
jmp
enter
add
xchg
inc
mov
mov
dec
imul
sbb
popa
les
xor
inc
mov
mov
stos
insb
aad
daa
shl
loope
xlat
insb
stos
nop
mov
repnz
pusha
mov
pushf
xor
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
sbb
adc
adc
lods
sbb
push
cli
pop
cmp
xchg
ds
inc
int3
pushf
sub
jg
dec
or
dec
jb
sbb
fildl
mov
sub
mov
leave
dec
mov
daa
out
shlb
xor
test
loope
rcrl
mov
jo
in
sbb
int
pusha
sub
aam
in
mov
xchg
sbbb
push
inc
cmpb
out
rol
lret
sbb
and
mov
adc
jbe
sub
push
jl
dec
stc
popa
test
cmpsl
jg
jecxz
jge
ljmp
test
xor
fcoml
mov
lea
push
mov
cs
cmp
add
movsl
js
ds
out
mov
adc
or
and
pop
lods
cmc
or
mov
lret
sahf
movsb
push
loope
mov
addb
das
jnp
sub
mov
push
sbb
bswap
xchg
inc
pop
pop
iret
imul
cmp
and
jb
fwait
mulb
jo
sti
mov
mov
mov
and
xchg
jge
xor
mov
jp
jecxz
xchg
adcb
js
push
ret
pop
daa
and
ja
movsb
data16
xlat
in
add
mov
icebp
jle
repz
int
inc
cmpsl
and
sub
jmp
jg
les
xchg
jnp
mov
mov
scas
lods
pop
add
iret
inc
loope
sub
dec
sarl
inc
dec
push
jo
mov
sahf
xchg
pushf
mov
mov
xorb
hlt
mov
movsb
push
xor
mov
leave
and
inc
cltd
pcmpgtb
mov
aad
mov
test
shll
sub
pop
inc
and
push
cmp
push
fbld
jne
mov
scas
mov
aaa
adc
sub
mov
cmp
call
test
cmp
jns
ss
arpl
mov
movsl
loope
mov
enter
mov
or
add
movsb
sbb
push
mov
mov
cmp
cltd
or
clc
or
pushl
lret
adc
fmuls
and
pushl
imul
fmuls
sbb
decl
decl
decl
mov
and
inc
add
add
pop
lods
mov
and
pop
mov
fsubrp
stos
xchg
adc
addr16
xchg
sbb
sahf
lods
cs
jmp
xor
jb
mov
jg
push
cmc
hlt
mov
out
dec
or
lds
mov
adc
aam
insl
xor
cvtdq2ps
mov
jp
jge
out
mov
sub
lret
jo
pop
jae
inc
cmp
out
mov
dec
test
or
out
in
pop
int3
popf
jae
jae
test
lds
mov
je
mov
aam
leave
pop
fs
adc
or
stos
out
sbb
pop
add
inc
push
jnp
cmp
xlat
push
pop
pushf
dec
mov
cmp
and
lahf
sbb
add
dec
stc
adc
cld
popf
xchg
in
sub
and
jmp
test
add
push
push
pop
jb
stc
or
insl
pushf
cmp
cmp
das
decl
mov
fmuls
sbb
arpl
mov
sub
divl
mov
pop
inc
inc
popa
dec
ljmp
fsub
call
xor
mov
notl
push
xor
std
loopne
ret
enter
cmp
popf
or
jmp
xor
fwait
jno
test
xor
jno
sqrtps
add
or
inc
mov
push
lods
jge
jno
daa
and
pop
dec
cwtl
jl
test
in
pop
dec
dec
add
dec
push
or
sbb
bound
hlt
dec
in
mov
aaa
xchg
mov
add
jno
enter
cmpsl
nop
sahf
mov
call
pop
fs
jmp
xchg
shlb
nop
jle
cli
mov
mov
repz
or
mov
xor
dec
loop
pop
in
xchg
cmp
xchg
out
in
adc
pushf
into
aam
in
not
hlt
add
push
pop
adc
les
and
in
fwait
mov
rcl
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
jo
dec
mov
enter
sub
std
cli
cmp
inc
in
aaa
mov
push
rcrb
cli
dec
ss
inc
imul
push
cltd
inc
push
add
dec
lods
into
icebp
adc
xor
orl
lods
ds
aam
inc
add
mov
rcrb
sub
mov
in
ljmp
ret
sub
movsl
sub
aad
mov
inc
test
test
lcall
sub
idivl
jnp
out
ret
adc
and
xchg
pop
sub
stos
sbb
dec
mov
sbb
iret
mov
test
stc
insl
js
xchg
jl
outsb
cmp
jle
loope
push
int
vpsubq
sub
jns
movsb
aad
nop
sub
jge
mov
or
lret
daa
pop
mov
fists
xorl
mov
mov
push
cmp
loope
aas
mov
mov
jle
jecxz
negb
sub
dec
daa
xor
or
jne
xchg
lods
fidivrl
xor
rolb
scas
sahf
or
push
cwtl
pop
sahf
ds
pusha
hlt
xchg
pop
test
enter
or
mov
rclb
test
mov
mov
lret
mov
xchg
mov
mov
leave
fisttps
xchg
sub
jbe
and
sub
lret
mov
or
sbb
cmpsb
vmulps
jo
xor
dec
cmpsl
and
dec
mov
jo
aas
adc
push
sub
add
aam
faddp
fstpl
ret
roll
adc
cld
int3
lret
clc
clc
xor
enter
adc
dec
and
andl
in
cmp
push
loopne
popf
sbb
ljmp
sub
rorb
nop
stos
andl
aaa
mov
cwtl
stos
out
orb
dec
daa
das
jmp
xchg
xchg
ret
cmp
lcall
icebp
sbb
imul
add
test
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
ret
mov
mov
imulb
pop
cmpsb
rcrb
cmc
add
fsts
jp
enter
ret
dec
int3
dec
sub
adc
jg
mov
icebp
sbb
loopne
adc
enter
mov
push
push
sti
nop
mov
jp
repz
mov
push
fisubl
imul
xor
sub
les
rcrl
mov
inc
sbb
into
insb
adc
out
cmp
mov
xor
mov
jb
popf
add
jg
sti
xchg
cmpsl
mov
xchg
jp
sub
jbe
jge
scas
ret
in
mov
xor
cmp
addr16
inc
dec
pop
jbe
xor
mov
movd
sub
mov
fwait
roll
cli
lcall
sarb
sbbb
fidivrs
fcoms
jle
and
je
add
cli
mov
adc
lahf
jbe
cmp
xchg
loop
mov
movsb
dec
mov
mov
pop
xor
cwtl
std
ljmp
lock
xchg
sub
movsl
cmp
sti
mov
fwait
mov
test
xchg
pop
pop
push
sti
out
dec
mov
imul
data16
push
inc
nop
test
add
xchg
dec
xor
insb
shlb
mov
cmc
mov
and
adc
movsb
sbb
std
loope
inc
pop
loop
data16
xor
cmpsb
fnsave
xlat
loope
imul
enter
mov
das
lods
xor
ss
es
push
push
sti
or
clc
ds
out
into
loopne
jne
stos
and
and
cmc
mov
in
jge
pusha
mov
sbb
cmp
jge
adc
loop
xor
call
out
in
out
in
fisubs
adcl
cmp
or
fldl
mov
inc
inc
or
cwtl
in
add
mov
fldenv
jg
xor
das
pushl
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
std
adc
mov
movlps
mov
xchg
dec
add
jl
ds
add
xchg
fwait
aaa
and
lcall
mov
xchg
out
adc
sahf
xor
imull
dec
scas
adc
aas
mov
js
jmp
test
int3
dec
mov
pop
push
jb
push
push
or
in
push
es
mov
pop
jne
orl
aam
mov
push
out
mov
stc
mov
outsl
ret
int
xchg
push
xor
sub
xchg
adcl
clc
les
mov
hlt
mov
mov
jns
mov
xor
idivb
mov
es
subb
jge
mov
daa
xchg
sbb
mov
lahf
shll
stc
lods
dec
insb
leave
punpcklwd
out
out
pop
icebp
or
inc
push
loope
add
outsl
cwtl
mov
xchg
or
push
sbb
in
sub
in
or
jle
movsb
sbb
repnz
ja
pop
repz
scas
in
sbb
loopne
fisubl
dec
call
or
pop
inc
in
jne
lret
mov
ja
movsb
mov
in
xor
push
cltd
sarl
and
test
mov
and
movsb
xchg
idivb
or
hlt
notb
pop
push
test
cmp
push
xchg
lock
cmp
jns
jns
and
mov
jge
minps
add
add
mov
mov
jnp
leave
push
sbb
lret
adc
fwait
dec
push
mov
jg
adcl
movsb
mov
xor
push
pop
add
mov
cltd
rcrb
sub
or
and
or
pop
sbb
pop
or
ret
ss
or
dec
lahf
aad
scas
insb
xchg
mov
sahf
jl
mov
pop
add
xchg
dec
andl
xchg
popf
sub
cmpsb
xchg
sti
fwait
pop
mov
add
daa
dec
shll
inc
pushf
test
mov
mov
xor
xor
mov
call
or
jmp
mov
or
mov
push
push
loope
stos
push
adcb
xorb
sbb
fldenv
jmp
push
xchg
dec
mov
fdivp
adcl
cmp
sarb
rorb
leave
cltd
pop
mov
js
mov
push
enter
mov
inc
cwtl
test
in
mov
mov
rcll
nop
mov
xor
jmp
cltd
lea
int3
call
push
mov
imul
add
jecxz
ret
push
xchg
les
lds
adc
subb
pusha
ret
fbld
mov
cltd
pop
call
sbb
jle
int
das
aas
pop
imul
jns
xor
std
cmpl
xor
jg
jp
or
or
or
xor
dec
out
mov
mov
ss
xchg
fistpll
psllw
loopne
aas
popf
outsb
hlt
jnp
mov
test
les
jnp
xor
mov
dec
inc
ret
jmp
mov
test
sahf
sbb
jae
and
pop
daa
loop
sbb
inc
xchg
scas
fldt
inc
mov
jb
and
hlt
leave
jp
xchg
pop
dec
mov
push
clc
inc
pop
cmc
inc
adc
in
mov
adc
fildll
pop
xchg
test
cld
leave
mov
out
movsb
addb
sarb
fcomp
jno
orb
es
push
mov
flds
aaa
stos
push
xlat
jecxz
aam
inc
push
ss
mov
bound
inc
mov
sarb
mov
movb
mov
loope
enter
jp
scas
jns
aas
add
pop
mov
mov
push
cmp
data16
jnp
sub
jmp
outsb
lods
scas
pop
ljmp
cmp
xor
mov
es
in
stc
pushf
scas
dec
mov
mov
iret
mov
out
dec
mov
ret
dec
push
add
inc
push
arpl
sub
adc
jmp
sbb
jecxz
sahf
pop
sar
iret
or
add
mov
mov
cmp
jmp
stos
js
pop
and
mov
or
adc
adc
loopne
aaa
sub
in
inc
jmp
cli
xor
xor
imul
fcoms
repz
sub
inc
js
cmc
and
int3
cs
in
lcall
mov
std
pushf
fucomip
pop
mov
insb
jle
cld
jbe
pop
and
daa
lahf
flds
es
ss
imul
xchg
inc
stos
mov
mov
push
cld
push
pop
push
fucom
mov
cwtl
jmp
dec
clc
mov
inc
pop
repz
xor
xor
adc
jmp
jns
mov
scas
stos
jg
and
push
inc
jne
cmpsb
stos
xorb
pusha
xchg
sbbl
xlat
dec
or
inc
mov
inc
pop
add
bnd
mov
into
movsl
loope
adc
outsl
incb
xchg
xchg
cmp
hlt
xor
imul
push
pop
incl
mov
pusha
mov
push
imul
enter
test
pop
fimull
push
mov
xor
pop
mov
dec
inc
sub
dec
dec
push
fsubrl
push
sbb
or
push
cmc
lret
fwait
mov
or
in
pop
ds
cld
adc
push
push
lock
add
push
aas
cmp
xchg
mov
add
xchg
jns
ret
pop
sbb
inc
arpl
enter
push
push
jge
cmp
jne
inc
mov
insl
add
gs
ja
xor
and
mov
adc
sarb
fdivrs
out
jo
sbb
xor
push
add
xchg
pop
xchg
test
and
out
jg
cmp
xchg
addr16
iret
mov
andb
push
repnz
mov
test
xchg
inc
int3
adc
cmp
lcall
jno
push
stos
mov
fistpl
push
adc
sbb
sbb
and
mov
mov
cli
je
mov
mov
movzwl
xor
movzwl
sar
jmp
ds
in
mov
xchg
js
inc
xchg
js
je
adc
movlps
shll
or
fsts
jbe
leave
notb
jbe
xor
lret
lcall
mov
xor
call
xchg
inc
repz
inc
aaa
stos
sub
fistps
pop
xchg
dec
mov
push
mov
xlat
mov
cltd
sub
enter
out
and
cltd
dec
pop
scas
dec
adc
xor
out
cmp
jecxz
aad
and
hlt
add
lock
cmp
mov
incl
push
add
in
ds
in
shrb
fidivs
and
arpl
lcall
call
xlat
xchg
enter
subb
ret
int3
cmc
and
sbb
sub
imul
push
ljmp
enter
pop
addb
jp
int3
lea
add
repnz
sbb
dec
cmpsl
push
pop
mov
or
xchg
xchg
cmp
adc
rolb
lods
ss
jmp
mulb
imul
mov
scas
push
add
lret
shlb
mov
jns
and
pop
inc
cmpsb
mov
mov
sbb
adc
imul
cmpsl
xor
or
orb
rorl
jno
cmp
sbb
mov
fadd
cmp
sub
hlt
shlb
out
inc
gs
fwait
aad
dec
mov
push
push
push
xor
inc
mov
pop
testl
jle
lea
mov
mov
or
xchg
jle
inc
nop
cmp
aad
or
mov
movsl
cmpsl
xor
adc
addb
fsubs
push
xor
outsl
mov
dec
js
loope
inc
repz
mov
movsl
mov
mov
movsl
push
lret
jle
pop
and
jnp
aas
push
dec
jmp
jno
push
lahf
dec
add
in
test
data16
mov
or
xor
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
sbb
enter
icebp
push
in
loope
pop
add
out
jmp
pop
adc
repz
cmp
neg
add
sub
test
fwait
andl
jl
imul
jno
daa
js
xchg
aas
pop
maxps
insb
mov
testb
or
jmp
mov
mov
mov
arpl
sub
ficomps
and
jp
xor
hlt
fs
scas
in
and
pop
mov
dec
xor
jmp
scas
fisubl
adc
pop
cmpsl
sahf
xor
icebp
xchg
fdivrs
pop
inc
mov
movsb
pop
dec
push
filds
and
push
sbb
divb
mov
jge
add
stos
add
lock
je
iret
sarl
jne
pop
fisttps
inc
dec
sbb
mov
mov
iret
sbb
xor
jne
jno
dec
lret
push
das
cmp
push
pushf
cwtl
lret
mov
jno
int3
sub
in
rcrl
sub
push
or
mov
sub
push
les
es
pop
cmp
and
push
lahf
push
std
fbstp
mov
cmp
mov
sbb
icebp
inc
pop
inc
shl
fs
test
jb
pop
xchg
dec
cmp
lahf
pop
daa
push
jb
addr16
jecxz
xchg
xchg
sub
out
lret
inc
and
mov
lock
fiadds
call
ja
mov
imul
leave
pop
fisubl
testl
pop
ret
push
adc
fisubl
inc
enter
jmp
out
add
dec
lds
push
push
lods
mov
dec
mov
into
insl
xchg
jg
xchg
loop
dec
add
imul
imul
dec
and
in
jns
aas
arpl
js
iret
pusha
sbb
dec
outsb
decb
ds
sub
and
cld
test
shll
gs
in
adc
stos
mov
insl
sbb
and
adc
mov
add
lcall
aad
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
iret
inc
push
push
insb
adc
adc
pushf
xor
xrelease
sbb
mov
jno
dec
addr16
mov
cmp
pop
aam
rcll
popf
sub
and
push
daa
mov
sbb
xor
and
out
inc
jmp
ffreep
subb
int
pop
jae
or
add
daa
lds
push
lret
mov
scas
fstpt
es
inc
test
jmp
imul
cmpsl
scas
jnp
sahf
inc
outsl
mov
sbb
cmpsl
and
mov
out
xchg
or
pushf
mov
cmc
xchg
or
jo
das
push
lds
adc
mov
lods
pop
sbb
in
mov
pop
cmp
cmpsl
fstps
test
movsb
insl
push
arpl
leave
pop
fs
jge
imulb
push
hlt
jbe
test
mov
in
arpl
fisubl
and
jae
push
jns
dec
sbb
sbb
jg
xchg
ret
imul
jmp
loop
lods
nop
iret
faddl
int3
test
stos
xchg
mov
or
jb
les
or
inc
icebp
mov
pushf
enter
test
or
sbb
jbe
dec
mov
pop
fiaddl
mov
add
call
mov
jp
pop
cwtd
imul
ljmp
cmpb
js
in
xchg
sarl
in
sti
test
push
mov
pushf
and
pop
das
fldenv
imul
cmp
sbb
clc
jmp
shrb
fimuls
pop
inc
push
and
int3
add
jp
insl
mov
sub
push
rcrl
leave
int
or
fldl
je
aam
pop
sbb
jne
inc
sub
mov
je
lret
rcll
push
jmp
push
jl
cltd
cmp
dec
sub
pop
mov
jl
cmp
xor
fimuls
scas
test
mov
in
popl
lret
lret
pop
push
ret
and
inc
xchg
mov
mov
adc
stos
inc
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
stos
cltd
mov
adc
movlps
jp
fsub
sbb
sub
fnstsw
aaa
sbb
dec
jbe
mov
push
fwait
xor
sbb
and
adc
sbb
movsb
cltd
mov
decl
sub
lea
roll
stos
scas
loop
in
pop
pop
xchg
js
pop
lods
adc
jl
test
insl
xchg
out
lret
jnp
push
inc
dec
lods
vmptrld
ret
xchg
cmc
xor
push
or
pop
js
imul
and
mov
inc
fisttpll
add
insl
ret
pop
push
add
mov
mov
add
mov
mov
subb
and
pop
dec
rcrb
dec
mov
lahf
cmc
pop
mov
or
cld
test
or
adc
sub
dec
sbb
cmpsb
out
or
aas
in
dec
pushf
stc
inc
int
xchg
xlat
adc
push
cs
unpcklps
dec
cld
fdivl
or
cld
jns
sbb
inc
leave
cmpsl
add
pop
push
in
push
sub
test
fsubrs
sub
and
adc
call
add
fcoms
inc
xchg
jns
xor
stos
or
scas
sahf
adc
pop
add
dec
push
loop
mov
and
and
xchg
cmpsb
mov
sub
js
xchg
jl
pop
stc
lcall
in
sub
les
mov
dec
js
or
xchg
jmp
ds
pop
jecxz
push
push
pop
cmp
arpl
mov
rcll
sbb
idiv
sbb
jns
mov
inc
sti
jo
jno
jnp
mov
in
xor
repz
movsb
stos
mov
je
jecxz
add
inc
inc
mov
jl
inc
dec
mov
mov
cmp
mov
mov
add
ficompl
lcall
jae
stos
insb
mull
add
inc
dec
arpl
pop
clc
sub
adc
mov
js
push
decl
decl
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
in
jle
fs
adc
aas
lods
enter
outsb
sarl
pusha
xchg
mov
lret
mov
inc
dec
ja
in
mov
into
mov
adcl
in
and
lret
addr16
out
add
fs
outsb
daa
dec
push
cmovbe
push
xchg
jg
push
sub
cmp
jmp
jg
ja
adc
jb
mov
pop
jno
add
xor
xchg
sbb
hlt
out
das
pop
cltd
adc
in
in
sub
stos
adcl
test
lods
leave
shll
dec
inc
and
cmp
loopne
push
std
outsl
xor
cmpsb
or
fimull
adc
pop
jp
and
jmp
xchg
jns
sti
sub
jno
ficompl
dec
cmp
jg
out
mov
sbb
mov
fsubs
out
push
adc
sbb
cmp
jns
jmp
in
mov
insb
xor
push
cltd
sar
js
mov
sub
xor
cmp
cmp
clc
jo
adc
inc
xchg
ror
sbb
cmp
inc
call
out
scas
inc
enter
movb
inc
and
sbb
flds
xor
rorl
in
pop
sub
pop
dec
xor
mov
clc
xchg
fldcw
in
hlt
hlt
fcoms
popa
in
hlt
lret
jbe
fsubrs
ds
test
insl
dec
sbb
add
push
les
cli
js
adc
sbb
add
bound
push
outsb
inc
dec
push
daa
and
xor
fimull
mov
out
or
ljmp
mov
adc
mov
das
xor
mov
adc
lcall
sub
es
lret
sub
lret
hlt
pop
jp
dec
rcll
mov
mov
dec
fcmove
mov
fcoms
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
dec
xor
ja
icebp
filds
and
sbb
fsubl
inc
lret
cmc
pop
notl
or
imul
test
adc
xor
std
scas
xor
xor
out
lret
scas
repz
clc
mov
adc
xchg
clc
sbb
mov
stos
popa
imul
fistl
and
sbb
mov
inc
lret
cld
jge
push
sub
push
test
addr16
and
push
clc
inc
cmpsb
jne
rcll
cmp
lret
jno
bound
outsb
cmpsl
test
pop
pushf
daa
cmp
mov
rorb
add
xor
out
pop
js
jno
pop
sub
push
popf
imul
test
inc
shrl
mov
mov
imul
add
outsl
icebp
fcmovu
pop
nop
rorb
pop
pop
hlt
jmp
sbb
cld
push
sbb
or
inc
push
sub
out
mov
fdivs
add
out
xchg
cmp
mov
rcll
xor
inc
xchg
movsb
push
mov
cmp
mov
shll
mov
fistl
mov
pop
and
push
mov
add
addr16
ret
sub
inc
shlb
dec
fs
rol
inc
jge
sbb
fstpl
sbb
cmp
add
or
adc
pop
je
sub
mov
xor
push
cmpsb
mov
pop
leave
lahf
push
add
in
std
popa
and
lret
mov
fwait
cmp
push
shrb
push
ljmp
imul
fstps
imul
std
jg
rorl
add
stc
jle
pop
mov
add
pop
cmp
inc
mov
push
call
out
sbbl
hlt
sub
sbb
fadd
test
xchg
mov
push
mov
or
pop
fs
in
imul
incl
add
add
mov
inc
test
add
add
inc
add
add
jbe
add
jnp
bound
ss
int3
sahf
fs
pop
adc
adc
inc
out
sub
fistl
mov
lods
repz
repz
dec
fsubl
stc
push
roll
xchg
mov
mov
lods
insl
ss
rcrb
out
or
ljmp
jecxz
lods
cli
ret
stos
outsb
or
ret
int3
xlat
jbe
loopne
push
push
stos
jp
mov
cmp
fdivs
in
sbb
push
test
scas
dec
mov
test
adc
in
testb
daa
ret
stos
fwait
cmp
pop
jne
jae
sbb
lcall
inc
cld
xchg
push
inc
jbe
push
xchg
aas
movb
aam
dec
adc
cmp
or
adc
fidivs
cmp
inc
aaa
xchg
scas
or
adc
in
aam
and
xor
mov
mov
jae
mov
pusha
popf
jmp
out
scas
cmc
jbe
cltd
roll
faddl
mov
mov
jp
and
push
shrb
inc
push
ffreep
incb
scas
inc
xchg
jmp
push
and
dec
test
sub
cmpsl
or
xchg
dec
add
sub
pop
sub
ljmp
push
and
push
mov
jne
cmp
add
sub
repnz
sub
decl
cmp
test
pop
call
fdivrl
or
fwait
out
cmp
jl
mov
or
or
enter
les
jmp
pop
mov
lods
pop
ja
sbb
pop
mov
int3
out
and
mov
push
xor
push
icebp
pop
xor
clc
pop
cwtl
pusha
test
insb
mov
testb
pop
imul
popa
rcll
cli
lret
pop
cld
stc
add
pop
xor
sub
adc
inc
add
push
pop
js
pop
fnstsw
push
jb
test
fildl
push
aaa
ss
sub
loope
jne
add
jecxz
mov
push
jge
pop
jmp
shl
or
pusha
mov
push
and
test
test
decl
test
add
add
decl
decl
decl
xchg
add
adc
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
es
or
ficoml
adc
and
dec
ljmp
inc
ja
jnp
jns
mov
aas
int
jle
mov
sbb
jg
outsl
mov
outsl
test
add
add
fistl
pop
ja
mov
cmc
out
sub
inc
jle
andl
mov
sbb
popf
adc
xchg
mov
mov
cs
push
aam
jnp,pn
pop
add
mov
es
test
pop
push
test
mov
jo,pt
scas
stos
mov
xor
inc
ss
mov
or
jl
push
dec
das
int3
mov
xor
inc
icebp
add
ror
adc
push
and
test
leave
aad
scas
in
outsl
xor
dec
and
inc
movsl
dec
fisttpll
dec
andb
cmpsl
mov
cmp
fsubrl
sahf
iret
js
cmpsl
push
in
rorl
stos
out
lret
popa
std
jle
in
fisttpll
lret
aam
cmp
sub
ds
jb
insl
mov
mov
mov
and
mov
xorb
or
jo,pn
mov
pop
inc
cli
xor
dec
jmp
or
imul
xor
xor
cmpb
jmp
xchg
mov
movsb
jge
rorl
data16
lret
fisubrl
insb
fiadds
loop
push
push
pop
cmpsl
cmp
js
iret
inc
mov
aam
inc
mov
or
out
lcall
dec
int3
mov
ficoms
mov
inc
daa
sub
add
loope
and
decb
leave
adc
aam
into
mov
and
mov
mov
xchg
dec
xor
push
inc
push
test
lock
mov
and
dec
insb
jmp
pushf
hlt
pop
dec
int
inc
sahf
mov
loopne
cmp
mov
mov
int3
stos
pushf
pxor
inc
and
push
cmp
pop
lods
cwtl
pop
aas
sbb
imul
sbb
xor
mov
push
push
adc
inc
pop
and
aaa
fcomp
pop
stos
lahf
xchg
loopne
les
jecxz
add
stos
xlat
out
fs
scas
push
pop
cmp
dec
mov
int
sub
sti
mov
bound
cwtl
inc
sahf
adc
shrb
std
mov
xorb
shll
cmp
lahf
add
adc
jb
shlb
or
arpl
cmpsl
xor
push
add
dec
sbb
cmpsb
inc
sti
sub
mov
sub
xchg
xor
int3
cltd
xchg
jp
in
mov
adcb
insb
loop
mov
sahf
and
loope
sahf
out
inc
cmpsl
in
mov
stos
mov
aam
outsb
aad
popa
scas
jb
das
ret
ret
in
sub
adc
dec
stos
and
xchg
mov
imul
pop
jns
push
hlt
push
mov
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
js
push
adc
adc
fsubp
aaa
test
xchg
pushf
les
adc
mov
cs
outsl
adc
sbb
aam
and
cs
pop
mov
xor
sbb
xchg
pushf
je
leave
or
rcl
lret
gs
hlt
mov
stc
bound
jnp
push
mov
idivb
jb
testl
mov
test
aas
adc
fldt
in
out
loopne
add
inc
dec
pop
fdivrl
xor
out
mov
loopne
fmull
sub
negl
mov
mov
ja
enter
mov
inc
sbb
dec
sbb
push
dec
mov
xchg
fcmovnbe
cmpsb
cmp
fucompp
leave
mov
jns
mov
sahf
andl
jmp
rclb
bnd
xchg
mov
mov
orb
xor
pop
arpl
iret
mov
or
jne
and
mov
adc
push
sbb
pushf
andl
push
push
das
insl
aaa
pusha
je
mov
in
leave
xchg
mov
bound
sub
jne
imul
shll
pop
dec
aam
cmc
fdivrl
sub
incb
push
out
movsb
sahf
adc
pop
push
loopne
ds
je
dec
add
cmc
sub
sub
push
rcrl
pop
and
and
add
pusha
mov
aad
ret
call
clc
insb
lds
mov
adc
mov
mov
sbb
stos
pop
push
xorb
adc
xor
je
cwtl
xor
jmp
sub
mov
test
xchg
stc
push
xchg
and
sbb
pinsrw
push
jecxz
push
jne
push
xchg
mov
hlt
ret
xchg
bound
sbb
fistpll
jecxz
sbb
adc
push
push
cmp
adc
mov
sub
call
xor
xchg
xchg
adc
jbe
push
mov
jmp
in
insl
pop
dec
popf
rcll
leave
aam
inc
arpl
jnp
mov
rclb
and
das
pop
push
sbb
jp
mov
dec
les
add
repz
das
add
sub
push
xor
or
dec
dec
xchg
pop
xchg
add
mov
lock
rcr
sbb
ret
bound
stos
jp
jg
filds
test
mov
test
pop
pop
or
and
jmp
adc
leave
push
jg
cmp
and
insl
mov
outsl
sbb
inc
in
negl
xor
pop
or
std
add
pop
mov
jo
and
ljmp
aam
xlat
in
outsl
inc
xchg
icebp
js
mov
adc
loopne
push
pop
pop
mov
aas
jmp
bound
jp
mov
imul
push
out
fcmovnu
sbb
cmpsl
rorb
mov
icebp
mov
dec
fdivl
das
fidivrs
push
in
add
fistpl
xor
pop
push
pop
mov
mov
in
add
push
rorb
lcall
add
cmp
add
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
