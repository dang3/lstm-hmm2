mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
jo
and
nopl
jmp
mov
xlat
les
das
sub
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
xlat
stos
jg
push
loope
pop
jmp
mov
push
pop
sbb
cli
dec
push
sub
and
mov
fistpll
mov
jge
cmp
mov
sbbb
bnd
arpl
mov
xor
cmpb
stos
aad
lock
fistl
dec
aam
test
lret
add
sub
rorl
sbbb
adc
push
xchg
adc
repz
loopne
sbb
cltd
jbe
js
pop
sub
cmp
pop
jecxz
sbbl
aaa
jmp
repz
sbb
adc
pop
cwtl
mov
fisubs
into
outsl
addr16
pusha
pop
xor
or
and
lds
fldcw
dec
push
lea
out
loopne
sbb
jns
jmp
sub
push
xor
addr16
pushf
push
aad
aam
lahf
mov
add
sub
or
daa
or
inc
mov
cmp
nopl
jp
pop
lea
outsl
aam
pusha
add
ret
add
cmc
iret
pop
test
fists
pop
stos
loop
xchg
pop
xchg
mov
out
xchg
mov
add
movsl
mov
loope
push
lods
fstp
adc
out
inc
aam
or
push
and
ds
sbbb
or
push
jne
mov
stos
ja
cld
cmpsb
mov
add
push
fdivrp
icebp
aaa
lcall
push
cli
xor
imul
lret
mov
pop
and
inc
xor
pushf
aad
aaa
xchg
enter
aaa
pop
nop
xchg
xor
mov
add
adc
aad
add
mov
sub
mov
cmp
sub
cld
adc
out
jmp
jbe
addr16
scas
xlat
mov
xchg
int3
sbb
push
pop
cltd
cmp
rorl
and
and
int
pop
push
push
xchg
rcrl
jo
stos
pop
mov
jns
xor
pop
out
push
jne
xchg
xchg
jmp
xor
dec
or
or
xor
jp
mov
add
cmp
xchg
xchg
pushf
stos
int
jge
in
mov
xchg
pop
xor
add
lods
fdivrs
mov
xor
xchg
loopne
add
call
xor
pop
inc
nop
cld
mov
cmp
add
cmc
jl
aaa
loop
push
adc
jmp
lcall
dec
outsb
or
push
xchg
push
scas
outsl
jns
mov
sub
push
out
mov
and
testb
fstpt
jbe
cmp
push
mov
ljmp
adc
or
sbb
pop
xorb
iret
sti
add
push
add
push
aam
js
loopne
out
xchg
push
dec
int3
or
loopne
das
add
cmp
jge
push
cmp
fiadds
mov
mov
pop
mov
mov
cmp
popf
mov
cmc
movntq
divl
aas
push
mov
jae
cmp
mov
popf
mov
sbb
repz
in
loope
popa
inc
fnstsw
push
lods
pop
scas
push
es
xor
or
mov
mov
push
loope
out
jecxz
jno
lcall
addl
movb
stos
rol
data16
jge
dec
pop
mov
and
xlat
mov
xchg
push
aad
dec
lock
out
xor
push
or
mov
lea
dec
jae
cli
push
data16
xchg
jo
leave
pop
push
lock
mov
xchg
mov
push
insb
dec
push
mov
jmp
sub
decl
out
push
rcll
cmc
cmp
enter
mov
inc
jle
mov
xchg
mov
mov
mov
int3
xor
cmp
pop
scas
sbb
test
pop
add
pop
xchg
xor
dec
idivl
divb
xchg
mov
mov
mov
pushf
nop
syscall
push
enter
sahf
cmpsl
stos
in
adc
adcl
adc
cmp
sub
jmp
shrb
xchg
mov
dec
shrb
mov
mov
loope
mov
pop
and
fists
popa
aaa
aaa
imul
lcall
or
jecxz
jg
incl
push
out
add
neg
jge
xchg
lea
mov
push
leave
cmpsl
and
stos
mov
insl
movb
aad
mov
rclb
pop
dec
and
in
pop
push
inc
add
sub
mov
cltd
push
fcomip
jns
jo
ds
clc
lahf
leave
out
sti
cmp
jecxz
lods
and
xchg
dec
pop
mov
xor
scas
int3
xor
sti
mov
rclb
ss
mov
test
ret
xchg
sbb
and
sbb
stc
cltd
roll
push
xor
xor
jmp
leave
xchg
scas
rorl
addl
xlat
mov
leave
rol
jp
pop
cmc
jl
lret
push
push
push
repz
cmp
mov
mov
mov
movsl
bound
jnp
xor
test
xor
je
div
jo
cmp
add
lods
lret
sbb
jae
ja
je
sub
je
adc
inc
es
xor
jmp
imul
xchg
jecxz
mov
shll
clc
sub
imul
rol
mov
aaa
mov
pushf
mov
xor
push
aaa
push
xor
mov
mov
sbb
push
outsb
into
ror
pop
cmp
pop
dec
sbb
pop
leave
cmp
dec
mov
lret
jmp
xchg
scas
pop
ja
insl
sahf
leave
popf
out
adc
pop
jbe
lea
outsb
aaa
jp
mov
or
cmp
sub
pop
neg
or
pop
enter
jecxz
sbb
cmp
outsl
cltd
in
imul
add
movb
nop
dec
nop
jnp
adc
pop
scas
adc
in
pusha
aaa
push
subl
pushf
or
cmp
adc
sbb
imul
js
jbe
shrb
jnp
lds
pop
jbe
fcompl
or
sti
cmc
mov
lods
movsb
pop
shr
cmp
popa
stc
pop
loop
test
xchg
fs
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
shld
mov
sub
pop
pop
pop
mov
sub
in
mov
xor
repnz
jbe
stc
xchg
mov
cmc
into
push
lock
dec
lret
pop
or
fildl
rolb
xchg
in
jns
ret
ret
adc
cmp
or
mov
daa
ja
pop
mov
sbb
ud1
fadds
pop
dec
add
or
into
xchg
stos
pop
jp
test
cmpb
pop
and
repnz
sbb
bound
in
cltd
push
call
std
pop
pop
pop
ret
cmpsb
lcall
mov
cmp
xchg
jne,pt
mov
mov
dec
inc
subl
sub
push
jmp
dec
pmaxsw
stos
xchg
xchg
pop
and
repnz
ret
jg
lahf
push
xor
jno
sub
add
ret
mov
xchg
mov
call
iret
push
mov
mov
dec
outsb
pop
dec
data16
mov
in
imul
inc
sub
sub
stos
test
add
insb
push
outsb
sbb
cltd
in
lock
loop
ja
cwtl
imul
push
jg
inc
aaa
xor
out
cli
and
and
dec
push
stc
mov
mov
mov
std
cmp
data16
mov
adc
adc
push
insl
push
mov
push
jb
out
insb
xchg
scas
call
pop
sbb
insl
mov
xor
ficomps
mov
sbb
jg
mov
roll
sub
xchg
push
jge
out
pop
push
sar
enter
movsb
adc
and
push
cs
or
sbb
stc
sbb
jne
shlb
dec
xorb
lock
jge
mov
or
lock
shrl
xor
test
cwtl
js
dec
jmp
inc
cmovne
repz
cmp
xor
pop
pop
idivb
lcall
push
jne
out
fbstp
outsb
dec
loope
ljmp
fwait
test
out
push
sbb
in
xor
lret
imul
sub
rorl
mov
xor
sarb
and
rclb
adc
cmpsb
repnz
rorb
push
dec
jl
jbe
adc
outsl
stos
pop
outsl
adc
pop
ja
push
mov
outsl
jo
imul
push
mov
fiadds
inc
bound
lods
and
leave
test
lret
sub
clc
pop
push
test
jne
xchg
aaa
fisttpl
mov
rep
es
xchg
mov
outsb
out
lock
and
pop
jl
cltd
mov
rcrb
mov
scas
push
xchg
mov
adc
loope
inc
lahf
or
scas
push
daa
scas
pop
add
push
and
lcall
add
xchg
jb
inc
add
movsl
sub
inc
js
add
xchg
outsb
cli
loop
adc
jmp
dec
fwait
xor
stos
imul
sbb
outsb
or
xchg
rcrb
sbb
in
xor
inc
push
and
pop
sbb
pushf
dec
dec
dec
adc
adc
cmp
mov
cwtl
or
scas
mov
test
xor
adcb
insl
sbb
inc
repnz
data16
mov
mov
cs
mov
jbe
cld
in
dec
cli
push
fsubl
mov
in
scas
push
or
push
xor
ljmp
std
push
cmc
mov
mov
add
jae
jns
adc
pop
sub
ss
cmpsl
xlat
push
daa
cmp
mov
into
int3
in
mul
enter
dec
add
lock
lds
or
ret
les
dec
addr16
cmp
inc
push
fcompl
shl
push
push
out
pushl
fwait
xorl
sti
loope
mov
xchg
or
mov
popf
dec
bound
dec
adc
dec
cmp
dec
sbb
movsb
and
pop
lcall
cmp
aas
inc
inc
fsubrl
push
shl
outsb
movsb
lahf
in
gs
call
dec
std
negl
loop
dec
sub
ja
jno
adc
arpl
popa
mov
ljmp
lods
mov
cmp
lret
jno
repnz
out
or
jecxz
dec
jns
mov
or
sbb
data16
repz
icebp
adc
fsubrl
mov
loopne
adc
jb
test
cmp
filds
ret
pop
mov
dec
mov
ljmp
or
or
in
movsl
push
push
jmp
ds
dec
mov
xor
adc
lret
jbe
sub
fsubs
repnz
inc
cs
mov
pusha
dec
cltd
pushf
jns
stos
hlt
cmpsb
push
sbb
test
mov
ja
imul
loopne
dec
js
in
in
inc
dec
mov
in
jno
cltd
ljmp
loopne
out
ret
mov
pushf
out
pop
add
fucom
jl
add
ds
jns
mov
movsl
int3
scas
jno
sub
movsl
lock
popf
push
and
push
dec
fisubrl
push
pusha
ficoml
stos
and
sub
mov
jae
lock
arpl
cwtl
outsb
fucom
mov
popa
loope
daa
sbb
jle
lret
in
push
sbb
push
jg
push
mov
je
jb
jecxz
js
popf
sub
jl
mov
lahf
pop
testl
jno
add
inc
fdiv
add
add
inc
fcoml
inc
loopne
arpl
add
ds
add
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
sub
add
call
orl
cmp
adc
cmp
jmp
xchg
ljmp
mov
ss
xchg
sbb
sub
push
jns
gs
add
xchg
loop
lret
pop
xor
adc
and
cwtl
lea
pop
cmc
xorl
in
xchg
loop
ret
stos
stc
testb
lods
stc
xor
mov
mov
lret
sbb
mov
int3
es
push
mov
inc
push
dec
std
fwait
sub
popa
je
jo
or
mov
iret
mov
cmp
xor
fldl
xor
movsb
adc
dec
fldt
sub
test
and
mov
outsl
ds
push
out
inc
jl
xchg
pushf
adc
mov
dec
sahf
mov
fdivl
insl
in
add
xchg
cltd
jg
das
inc
fxch
arpl
jg
div
les
mov
popa
pop
xor
sub
mov
pushf
icebp
mov
dec
test
sti
ds
test
shll
add
inc
add
aas
das
mov
andb
push
mov
mov
adc
mov
dec
stos
push
aas
push
pop
push
or
jmp
fwait
arpl
mov
imul
sahf
cmpl
xlat
sub
in
mov
lret
dec
loope
xlat
out
pop
arpl
cmp
js
mov
hlt
call
jo
jmp
push
loope
dec
jl
std
loop
lods
rcll
out
popa
inc
xlat
sbbl
sahf
bound
cmp
inc
stos
shlb
inc
mov
xchg
mov
mov
push
push
sub
adc
adc
push
bound
shlb
mov
testb
inc
jge
inc
test
xor
jo
jb
arpl
icebp
add
dec
xor
pushf
jb
dec
test
xor
loopne
dec
dec
mov
pop
xchg
enter
mov
ret
xlat
arpl
push
and
or
dec
int
push
xchg
lock
or
clc
arpl
jl
ljmp
sbb
mov
test
sbb
ss
xor
repnz
fdivl
icebp
add
and
sbb
loop
add
cwtl
pushl
in
add
inc
cmp
stc
cmc
test
adc
push
aad
pop
aas
pop
and
call
xchg
loopne
aad
mov
mov
mov
mov
lahf
cmpsl
in
cltd
popa
in
fimuls
dec
xchg
outsl
jmp
mov
lock
xchg
mov
or
add
fwait
xchg
add
negl
dec
adc
movsl
gs
pop
sbb
jl
mov
adc
imul
repz
xor
or
cmp
and
sti
das
dec
dec
es
xor
imul
fs
std
movsb
or
gs
inc
scas
and
mov
cmp
adc
and
int3
sbb
or
fsubl
push
fcoms
pop
imul
mov
xchg
add
xor
dec
fisubs
or
test
push
iret
sub
add
imul
pusha
push
test
push
lds
scas
mov
data16
sbb
and
pop
dec
shrb
pop
pop
fisttpll
jecxz
and
mov
insl
in
pop
pop
xor
push
mov
shll
inc
cmpsl
inc
icebp
fs
popa
push
data16
mov
mov
adc
ljmp
cmc
data16
dec
dec
leave
sbb
aaa
add
push
mov
or
loope
mov
cltd
xchg
hlt
mov
pop
jmp
sarl
mov
pop
cli
std
stos
dec
inc
cld
insl
add
add
rorb
aaa
mov
inc
fnstcw
ret
adc
sbb
sub
ds
dec
adc
xor
cmp
dec
push
aaa
lea
sahf
inc
aas
call
inc
popf
imul
mov
jp
ss
inc
daa
shrl
stc
xchg
rcr
lods
mov
shrl
daa
or
stc
jp
enter
pop
outsb
outsl
cld
cmp
stos
cmp
test
mov
in
out
scas
out
in
cmp
xor
scas
pusha
popa
out
cmp
jb
xchg
xor
xlat
and
fnstcw
push
push
movsb
sub
es
cmp
add
pop
je
pop
sbb
pop
mov
arpl
mov
dec
aad
pop
pop
andl
sti
sbb
aaa
mov
fidivl
or
sbb
push
insl
pushf
add
cmpsl
arpl
sub
push
mov
ljmp
inc
cwtl
jl
out
push
xchg
stos
push
int3
rclb
lods
adc
movsl
stos
loope
sbb
sahf
and
mov
clc
in
cmpl
push
rorl
out
dec
shl
pop
add
mov
hlt
add
stos
and
mov
sahf
rclb
mov
mov
push
and
roll
ljmp
pop
lock
jmp
cmc
stos
iret
sbbb
or
cmp
mov
cli
jae
bound
mov
xchg
sbb
icebp
insl
and
sbb
mov
pop
xchg
xchg
jecxz
loop
xchg
inc
ds
test
mov
lcall
mov
decl
cs
jmp
add
push
mov
daa
jo
inc
in
dec
add
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
mov
pinsrw
packsswb
mov
dec
daa
lahf
inc
jge
jo
mov
cmpb
hlt
call
dec
testl
fdivl
icebp
jg
push
aam
loope
adc
sub
test
push
xchg
andb
jmp
and
xchg
add
movsl
test
inc
movsl
daa
jo
xchg
aad
mov
mov
es
notb
xchg
pushf
lret
adc
loop
cwtl
cltd
shlb
dec
outsl
sahf
adc
inc
pop
sbb
les
push
pop
and
arpl
test
addr16
shlb
and
jecxz
xor
pop
out
pop
inc
push
sbbb
add
hlt
pop
loope
imul
sbb
xchg
rclb
loopne
inc
cmpsl
mov
mov
or
dec
xchg
sti
lcall
push
arpl
lahf
fmul
and
xor
jo
gs
xchg
jns
out
leave
rcl
neg
ds
jge
int
cmpsl
inc
push
or
sub
mov
adc
in
xchg
lock
in
xor
test
or
pushf
or
xorb
cmp
mov
fldenv
sbb
fstps
insb
pop
fildl
xor
into
jae
nop
xor
bound
pop
adc
sub
mov
dec
push
fcmovu
inc
fisttpl
iret
popf
stos
push
push
shl
inc
test
jns
push
cwtl
jae
mov
mov
dec
sbbb
test
int3
inc
mov
mov
orl
fnstenv
or
adc
cmp
pop
sti
mov
add
xor
xchg
pop
xor
repz
aam
movsb
mov
pushf
adc
inc
sti
sbb
popl
mov
dec
sub
out
sbb
rcrl
push
fbstp
sahf
fidivl
in
xor
mov
mov
adc
cmpl
in
into
sbb
leave
and
push
xor
add
fcmovbe
jecxz
pop
jle
cmp
and
popa
push
sti
push
outsb
pop
or
jg
stos
inc
dec
dec
inc
mov
and
nop
sti
sti
xchg
jecxz
shr
fisubl
cmp
inc
lea
sbb
rorl
lret
jae
jg
popa
xchg
movsb
fdivr
clc
push
push
inc
adc
pop
fiaddl
in
test
adc
popf
jecxz
dec
mov
cmpb
movsl
pop
add
push
and
cmp
std
add
jne
call
adc
mov
push
inc
outsb
or
mov
ret
push
inc
mov
and
scas
cmpsb
mov
mov
sub
mov
cmp
or
orb
nop
mov
cmp
mov
xor
ljmp
mov
push
out
dec
xchg
xchg
movsb
pop
sbb
leave
ficoms
lods
adc
int
jmp
aam
scas
out
mov
icebp
fidivs
xor
xchg
cmp
pop
mov
mov
out
push
mov
rcll
aaa
and
decb
jmp
fwait
push
mov
inc
and
push
jle
cmp
inc
inc
dec
xchg
in
movsb
inc
sbb
fldl
jnp
ficoms
gs
in
mov
inc
nop
xchg
daa
cmpb
rcrl
mov
xor
cs
lret
lret
dec
inc
rcrl
add
xor
dec
bound
fcmove
insl
je
das
mov
arpl
test
mov
lods
sub
inc
jge
adc
inc
repz
jg
jae
adc
inc
mov
data16
shrl
cmp
cmc
stc
jmp
loope
pop
in
call
adc
icebp
dec
and
shl
sbb
ret
iret
push
imul
addr16
cmpsl
sbb
outsb
fiaddl
and
pop
fdivrl
lds
xor
test
push
and
push
or
push
or
fstps
mull
call
xchg
rcrb
bound
mov
pushf
adc
push
pop
xor
je
mov
inc
dec
outsb
cs
arpl
sahf
out
sub
ret
lock
inc
adc
pop
fwait
loopne
jge
mov
push
gs
jne
jns
push
mov
push
mov
sbb
jnp
jle
or
mov
sub
mov
mov
xorb
filds
js
cmp
orb
mov
mov
les
mov
mov
add
inc
rcl
mov
outsb
jg
jle
arpl
mov
lahf
jno
cmp
push
or
into
push
insb
pop
xchg
pop
cs
mov
pop
pop
mov
sbb
sbb
rolb
or
nop
xor
imul
hlt
sub
mov
mov
mov
mov
aas
ja
aas
int3
jp
adc
mov
fwait
mov
mov
test
fcmovu
xor
jmp
mov
fimuls
cwtl
daa
or
and
jb
sbb
mov
dec
xor
jmp
sarl
lock
stos
insb
imul
pop
mov
mov
jge
aaa
fstl
mov
push
and
mov
loopne
stos
dec
hlt
add
add
push
rsm
imul
push
iret
lds
mov
push
out
lock
insb
add
stc
insl
jg
in
and
jns
fs
leave
int
sbb
rorb
push
inc
add
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
stos
stc
mov
loop
pinsrw
bt
xchg
xor
mov
dec
gs
shll
lret
xchg
out
sub
insl
jp
mov
aaa
mov
fmul
icebp
mov
ret
add
mov
pop
loopne
mov
js
inc
mov
inc
jg
sbb
popf
jecxz
and
xor
add
std
lods
rol
sti
hlt
jb
jge
mov
jnp
cmpsb
lods
cmp
mov
idivb
das
stos
adc
jae
les
call
lcall
push
adc
sbb
xor
ja
nop
cld
aaa
push
ja
stos
movsb
and
mov
lret
es
sbb
cmp
and
arpl
nop
and
test
sub
stos
rolb
mov
popf
lods
mov
outsb
mov
adc
pop
fs
mov
mov
pop
dec
repnz
clc
sbb
jns
mov
rcrl
rcrb
add
inc
pusha
int3
jno
adc
dec
mov
add
out
push
cli
adc
in
andb
cmp
movsb
add
aad
sbbl
in
decb
repz
aas
inc
notb
icebp
jg
testl
add
jbe
mov
shrl
mov
arpl
mov
sbb
lret
or
lock
mov
inc
xchg
sbb
out
sub
jno
imul
int3
hlt
jecxz
test
inc
mov
je
mov
mov
pop
cmp
int
int3
pushf
cmp
mov
sub
dec
mov
cmp
dec
jl
cltd
cmpsl
cmc
fwait
lea
adc
js
inc
sbb
test
jno
sbb
inc
mov
je
int3
loop
decl
inc
adc
lret
mov
cmp
popa
push
lea
push
and
lss
ret
mov
jge
dec
clc
negb
imul
xchg
and
push
mov
outsb
nop
outsb
stos
cmp
pusha
notl
jne
mov
sub
push
jbe
rcl
daa
aas
sub
out
movsl
inc
in
cld
push
mov
sub
in
mov
popa
shrb
ss
ja
sub
fwait
stos
out
in
mov
loopne
into
jge
idivb
push
in
popf
jle
mov
jle
popa
push
sarl
push
scas
les
xor
faddp
stos
sbb
mov
mov
xchg
jae
mov
xlat
push
or
or
push
xor
jge
or
push
pop
fcompl
dec
dec
rcll
inc
sub
push
jle
mov
sti
cwtl
lds
imul
cltd
inc
inc
outsb
jb
cmpsl
add
mov
mov
aad
xchg
addr16
push
xchg
lods
sbb
cmp
loope
adc
mov
and
outsl
imul
ret
vmovq
mov
mov
sub
out
and
imul
out
push
subl
xchg
inc
lret
shrl
mov
incl
stos
mov
test
cli
cli
mulb
jbe
aam
push
mov
dec
dec
ds
cwtl
or
mov
mov
outsl
push
scas
add
xchg
adc
outsl
push
imull
sbb
ds
adc
inc
xchg
dec
jg
xor
shll
mov
test
enter
arpl
or
jbe
dec
arpl
mov
test
sbb
stos
dec
and
jno
mov
shlb
andl
pop
cmp
adc
or
stc
addb
lods
outsb
in
xchg
or
or
xor
pop
std
bound
jge
loop
aas
mov
mov
clc
pop
dec
enter
fbstp
mov
mov
cs
adc
mov
pop
iret
sbb
and
push
lods
xor
arpl
out
loope
push
test
rcl
repz
push
cltd
mov
daa
into
push
cs
push
push
into
dec
ss
clc
out
sub
jecxz
adc
fiaddl
leave
jl
adc
or
in
aas
in
enter
les
sahf
or
bound
fildl
pop
sub
in
jp
iret
bound
jo
addr16
xchg
pop
imul
xlat
ljmp
sbb
cmp
jp
push
pop
jns
out
pusha
xchg
aas
inc
cmp
sub
add
inc
mov
mov
ret
push
and
in
sub
jl
jge
fbstp
imul
cmp
js
fsubs
repnz
test
mov
popf
out
jmp
outsl
pop
sbb
adc
fdivl
mov
fwait
inc
jno
inc
fistpl
aaa
clc
xchg
or
pusha
in
test
cmp
or
sbb
loope
pop
fwait
inc
cs
push
mov
pop
add
lret
call
out
imul
stos
fs
push
rorl
jno
and
mov
inc
cmpsl
and
mov
fstpt
push
jns
lret
mov
iret
push
jg
mov
push
jno
bound
stos
cmp
inc
cli
push
sbb
mov
test
aas
mov
fdivr
ljmp
xchg
js
sbb
jns
imul
sub
ljmp
cld
jle
inc
inc
mov
jle
dec
incl
scas
hlt
inc
sbb
add
inc
in
sahf
add
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
pop
xchg
in
rorb
pinsrw
setg
test
lidtl
pop
nop
int
cmp
mov
xor
dec
ja
cmp
ljmp
jo
in
sarb
loop
add
aam
push
stos
icebp
jg
bound
sbb
adc
xor
sub
inc
ss
pop
jnp
push
mov
pop
cli
sbb
into
div
or
sub
outsb
mov
outsl
cmp
or
inc
repz
fs
cmp
notb
push
testl
aas
sbb
fisubs
insb
mov
aas
ds
mov
jmp
push
sub
jns
mov
inc
adc
repz
in
scas
arpl
das
adc
push
jg
xor
stos
outsl
clc
pop
xchg
mov
push
xor
fwait
inc
cmp
xchg
lods
pusha
lret
ffree
in
mov
lods
imul
mov
adc
or
push
aaa
mov
dec
outsl
ja
fnsave
repz
xor
arpl
mov
cmp
stos
mov
insb
sub
addr16
push
and
xor
adc
push
xchg
sub
or
jne
add
mov
sahf
mov
mov
inc
popf
jmp
outsb
data16
dec
mov
ja
and
mov
subb
loope
jb
shlb
jmp
test
adc
add
dec
test
and
inc
mov
bnd
loopne
push
mov
and
mov
data16
push
dec
push
and
and
out
sub
mov
xchg
fninit
cmp
xchg
mov
inc
push
add
int3
adc
stc
insb
push
xchg
jae
cmc
push
sar
fdivrl
cwtl
lea
jl
dec
mov
adc
fildl
and
pop
adc
jmp
xor
mov
sub
movsb
push
fwait
jbe
push
stos
xor
js
out
scas
sub
sbb
mov
jle
in
sbb
int3
mov
fdivrs
cld
mov
pop
inc
dec
pop
addl
subb
hlt
or
icebp
outsl
and
lock
sbb
int3
ret
xor
sbb
in
mov
cmpsl
stc
cmp
cmp
leave
jno
sub
fcomi
cmc
fs
rorb
xor
mov
pop
pop
add
mov
rcll
xor
cwtl
push
aam
es
out
or
sti
sbbl
decl
xchg
xchg
cmp
xchg
mov
add
lea
and
jp
push
rcrb
mov
mov
mov
ss
push
xor
mov
lods
fcoml
cmp
pop
cmp
mov
push
pop
pop
inc
mov
hlt
xchg
hlt
not
mov
mov
mov
lahf
jno
cmp
cld
cmc
mull
push
xchg
cmp
mov
dec
mov
jecxz
dec
adc
sub
gs
mov
push
fcmovnu
dec
lea
add
mov
cwtl
out
ds
or
and
sbb
mov
pusha
adcb
out
out
aaa
xor
pmuludq
cmp
stos
test
nop
cli
bound
mov
rclb
repz
lds
add
pop
push
jb
cld
and
scas
adc
mov
pop
jmp
mov
inc
pop
pop
loop
pushl
push
pop
jno
add
fwait
mov
mov
xchg
cmp
test
outsb
adcb
push
out
fisubrl
cmp
xorb
movsb
and
out
dec
push
cmp
lahf
dec
lods
add
mov
aad
je
or
enter
push
cli
idivb
enter
mov
movsb
dec
xchg
sbbl
nop
aaa
int3
inc
shll
and
jb
cmp
mov
xor
pushf
jp
xor
insb
fs
mov
es
test
push
cmp
test
inc
push
adc
cld
inc
clc
pushf
or
push
dec
scas
jl
cmp
cmp
imul
pop
aaa
add
rolb
inc
mov
push
mov
pop
sbb
adc
fs
test
xor
xchg
jnp
movsl
lock
outsb
into
jnp
sub
jo
out
imulb
lahf
mov
cmp
add
loop
cwtl
jne
or
push
into
sub
aaa
ss
mov
inc
aaa
push
dec
out
jae
cmp
add
daa
adc
cmp
outsb
arpl
loop
cmpsl
lds
fdivrl
dec
sbb
int3
push
mov
adc
add
leave
dec
mov
or
insl
cs
outsl
lret
mov
xchg
rcll
mov
sbb
jne
cmp
in
sbb
add
popl
inc
repnz
cmpsl
daa
inc
nop
cmp
add
xchg
inc
mov
in
jns
pop
push
es
mov
cli
and
scas
add
dec
imulb
jg
lods
mov
aad
push
push
adc
add
fs
jb
xchg
lds
popf
mov
aam
dec
dec
jle
cmp
and
and
mov
mov
out
jmp
jno
pop
pop
out
sbb
sbb
add
mov
pop
pop
stos
xchg
stos
jle
adcb
popf
pop
sub
adc
xchg
mov
in
xor
ljmp
dec
jmp
inc
cli
lret
dec
movsl
mov
test
xor
mov
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
jle
inc
mov
pinsrw
cmp
movsl
int3
aam
pop
nop
loopne
insl
xchg
lahf
pushf
std
push
test
sbb
mov
shrl
popa
imul
dec
push
pop
pusha
lahf
fadds
xor
call
cmp
xor
and
push
fsubrl
lock
fmull
and
ds
sub
sub
das
jno
add
daa
pop
pop
in
lretw
jecxz
shlb
into
sarb
inc
cmpsb
sahf
mov
xlat
loope
sarb
ret
out
cld
gs
jno
cld
push
int3
bound
mov
dec
push
bnd
adc
bsr
fnstsw
icebp
add
jl
scas
pop
jne
mov
inc
sub
popf
sbb
pop
mov
rcrl
pop
aam
pop
lret
pcmpeqd
mov
lahf
mov
in
lahf
in
aas
out
out
cmpsl
mov
xor
xchg
in
add
xchg
pushf
loop
inc
addl
adc
std
rol
push
pop
mov
je
jl
xor
es
adc
xor
sub
fwait
add
popa
shll
sub
xor
sti
jg
xchg
push
push
mov
and
lea
pop
add
repnz
jge
lret
inc
addr16
xlat
sarb
dec
pushf
and
scas
ret
fildll
and
sub
popf
jne
imul
and
enter
sub
movsb
add
fimull
xor
push
movsl
or
lea
out
pushl
add
sbb
movsl
and
je
cs
dec
ret
fldl
out
inc
repnz
fisttpll
xchg
sahf
bnd
rorb
sti
in
xchg
xchg
lret
push
cmc
hlt
adc
xchg
jb
lock
xor
pop
imul
cs
push
in
mov
mov
dec
ds
adc
xor
xchg
stc
dec
outsl
shlb
mov
inc
dec
cmp
cmp
inc
ds
dec
sub
aaa
flds
loopne
fnsave
cmp
lea
mov
ror
fwait
mov
lods
xor
je
cmc
jno
in
cmp
test
inc
push
dec
add
mov
add
cmc
int3
iret
xor
and
mov
outsb
mov
inc
decb
pushf
rcrb
mov
xchg
addl
or
inc
cmc
fsubs
xor
push
ret
lods
or
or
iret
into
or
or
jge
sbb
test
adc
imul
mov
movsb
adc
push
adc
inc
mov
ja
mulb
adc
cltd
ds
jno
outsb
arpl
push
push
das
mov
and
test
adc
sahf
and
push
inc
cltd
inc
adc
add
cld
mov
sti
mov
mov
cmp
mov
test
dec
mov
push
jbe
xchg
popl
dec
push
mov
sbb
cmp
inc
call
xor
cmp
repnz
inc
xchg
pop
xchg
les
mov
ja
clc
push
pushf
jp
inc
xchg
movsl
andb
sahf
mov
cmpsl
fcmovnbe
addr16
cmp
mov
iret
add
loopne
inc
int3
das
cmc
cli
xor
mov
mov
rcrb
imul
daa
sti
cltd
sub
mov
jnp
jno
rcrb
icebp
dec
stc
cld
ret
movsl
aaa
dec
push
sarl
lahf
clc
adc
aam
imul
push
jnp
imul
jge
into
std
and
adc
ja
mov
xchg
push
mov
jmp
fstpt
test
je
push
vpmacsswd
sub
in
loope
cltd
dec
fwait
test
loope
cmp
pop
ret
push
jmp
add
orl
jbe
test
cmp
addr16
inc
rclb
into
dec
fdivrs
jmp
cmp
push
out
bound
fadd
xor
jb
mov
and
mov
jbe
push
adc
or
ja
test
stc
inc
call
leave
xor
xchg
or
push
data16
mov
xchg
xchg
jge
cmp
mov
in
pop
fcomip
popl
lds
lods
inc
adc
dec
pushf
sub
push
mov
xchg
es
push
mov
mov
mov
dec
mov
js
mov
mov
inc
sub
dec
jmp
adc
adc
push
or
pop
repz
fcoml
xchg
test
pop
stc
pop
mov
pusha
dec
and
jle
movsw
call
lret
adc
outsl
dec
call
ja
xchg
cs
mov
rorl
sub
sub
invd
pop
fs
xchg
punpckhdq
imul
mov
pop
out
add
mov
icebp
pop
insb
sub
sub
add
push
or
push
sbb
push
pop
aaa
mov
cmovo
popa
mull
inc
and
cli
ret
mov
push
mov
mov
addr16
test
cmpsl
xor
bound
add
sbb
imul
jg
movsb
popa
ljmp
jnp
rorb
in
add
add
outsl
cmp
adc
lock
iret
mov
dec
pusha
pop
std
enter
and
xchg
pushf
gs
inc
adc
mov
outsb
jecxz
push
stc
push
shl
mov
add
imul
rol
jne
loopne
movsl
popf
xor
aad
lds
mov
and
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
call
test
pinsrw
pop
adc
adc
mov
out
xor
out
inc
dec
ss
pop
imul
js
fbld
rcr
cmp
into
sahf
sti
push
xor
push
icebp
mov
inc
xchg
pop
scas
aaa
mov
mov
push
push
push
ja
push
pusha
test
jmp
pushf
mov
adc
mov
pop
dec
jecxz
shlb
jge
es
sub
cmp
xor
jno
inc
call
xor
pop
adc
sub
out
imul
shrl
and
xor
pop
inc
pop
sub
cmp
pop
pop
mov
inc
stos
dec
sti
testb
pushf
adc
push
imull
push
pop
mov
push
jb
adc
call
stc
popf
das
jge
mov
mov
sbb
fsts
aaa
jle
bound
xchg
ja
cwtl
ja
fwait
jnp
adc
fidivs
fnstenv
jns
inc
xor
mov
in
mov
out
xor
cmpsl
jmp
add
xchg
aaa
sahf
mov
sub
jns
jns
xchg
jg
pop
xchg
cmp
xchg
outsl
mov
subl
popf
jns
insb
jg
insl
inc
sbb
movsl
jo
push
es
daa
pop
jecxz
and
xor
xchg
shrb
cld
hlt
out
pusha
mov
in
xchg
outsb
mov
dec
mov
test
lods
xchg
sti
out
out
mov
daa
pop
fdivr
sahf
ds
pop
dec
dec
sti
es
sbb
sub
fidivrs
push
add
test
jecxz
push
xchg
dec
test
in
mov
js
call
push
dec
dec
das
into
mov
push
loopne
fisubl
imul
lods
int3
jmp
jne
mov
add
insl
loop
bound
jmp
mov
jne
daa
mov
mov
stos
call
cmpsl
add
add
xor
jo
sub
loop
xchg
dec
jno
jns
aas
shl
jmp
dec
pop
add
jp
sub
aaa
cmp
fildl
inc
pop
mov
jne
lahf
jo
fiadds
pop
sub
dec
cmp
hlt
fstpl
inc
fidivrl
pusha
clc
rcl
jb
out
insl
sbb
ja
mov
xchg
fnstcw
jge
fs
mov
push
das
xor
xchg
repz
loope
icebp
dec
xchg
inc
int
xlat
sub
enter
loope
sub
dec
cmp
lret
cltd
mov
fstpt
xor
inc
mov
sbb
push
sbb
mov
cmp
rorb
fwait
clc
mov
clc
lcall
loop
dec
xchg
cmpsb
dec
into
gs
call
or
adc
xchg
cld
enter
lret
dec
push
pop
push
or
hlt
xor
fdivrl
rol
push
out
dec
sbb
scas
lret
cmp
or
pop
dec
xchg
pop
push
fwait
pop
add
xchg
test
imul
push
dec
mov
repnz
in
push
cmc
adc
adc
dec
sbb
jmp
cmp
fiadds
shll
or
inc
bound
fsubl
rcr
out
testl
dec
test
lock
setp
dec
jb
pop
fldl
sbb
std
mov
inc
mov
mov
clc
cmpsl
xchg
lret
pop
xlat
inc
and
roll
or
insl
push
mov
pop
bound
scas
in
jnp
dec
xadd
dec
addr16
movsb
test
adcl
lods
stc
pusha
in
mov
dec
add
popf
pop
xor
stc
bound
pop
push
out
into
outsb
xor
sbb
mov
pushf
adc
cmp
fs
inc
adc
inc
shl
int3
mov
iret
fstps
dec
inc
mov
or
cmp
sbb
or
mull
je
mov
adc
cmp
mov
test
leave
popa
addr16
push
imul
add
or
imul
adc
mov
idivl
cmpsl
push
test
les
mov
sbb
xchg
loopne
adc
xor
insl
fldenv
jb
ds
push
sbb
xor
pop
mov
rorl
push
mov
and
inc
mov
mul
hlt
sbb
pusha
xlat
jecxz
xor
fucomi
popa
icebp
lea
xchg
mov
dec
mov
repnz
mov
dec
inc
cwtl
adc
push
mov
aaa
hlt
mov
inc
or
subl
jecxz
jo
mov
test
push
adc
cmpsl
decl
lret
ja
mov
mov
mov
push
inc
insl
cmp
dec
dec
mov
jno
push
ja
fwait
xor
add
shll
out
push
hlt
ja
xchg
dec
js
in
fisttpll
jle
outsb
cmc
mov
mov
inc
fwait
movsb
iret
add
arpl
insb
lea
loop
cmc
push
xor
das
fsub
mov
les
pop
outsl
xlat
rclb
sbb
lahf
out
xor
shll
enter
dec
leave
stos
enter
or
mov
pop
je
out
leave
in
ficomps
int
jbe
mov
leave
mov
les
aam
in
sub
rorb
mov
jg
sub
stos
inc
daa
add
cmpsb
push
ja
test
add
xor
mov
fisubs
outsb
or
mov
push
sub
inc
hlt
rcll
add
inc
lock
inc
in
sbb
add
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
pop
push
pinsrw
jl
jb
out
scas
inc
loopne
push
xor
sub
rcrb
inc
push
mov
pop
pop
add
jbe
pop
adc
pop
repz
pop
adc
or
inc
or
mov
lret
rcll
or
leave
lcall
or
mov
jg
push
pushf
ds
test
popf
mov
out
das
mov
cmp
loopne
shll
stc
imul
xor
in
insb
adc
test
adc
aaa
xchg
inc
aam
mov
mov
pop
movsb
ja
iret
filds
and
pusha
ja
iret
add
cmpsb
call
mov
and
xor
mov
pop
cmp
add
movsl
adc
and
adc
outsb
out
xor
xchg
ret
outsb
std
or
add
pop
inc
jp
cmc
sub
loope
fnsave
jp
ja
dec
insl
loope
int3
jl
sbb
add
mov
xor
mov
mov
shl
imul
lock
jmp
sbb
cmp
push
fwait
loop
pop
loop
dec
inc
push
ja
xchg
jb
aad
or
jg
fwait
jp
or
pop
jg
movsl
les
or
push
rorb
dec
mov
push
inc
mov
daa
dec
in
loopne
sbb
bound
bound
lods
and
cmpsl
pop
scas
ret
xchg
push
dec
cmp
lret
jb
cmpsl
add
or
mov
sub
mov
mov
mov
mov
mov
mov
rorl
mov
or
aaa
push
mov
and
xchg
rolb
ror
xor
sub
cmp
sbbb
xor
sub
shlb
mov
inc
aaa
jl
jns
into
ret
repz
mov
popf
fnstsw
xor
xor
pop
cmc
or
and
xor
pop
push
mov
pop
mov
movsl
dec
fstl
shll
xchg
fwait
cmpsb
mov
loope
mov
dec
je
insb
in
pcmpeqw
cmp
fwait
dec
loop
iret
adc
pop
add
dec
jae
shll
mov
ja
mov
aad
pop
dec
jo
xchg
fstps
lods
xchg
jl
xor
sbb
adc
push
inc
push
xchg
push
adc
xchg
xor
and
xchg
lods
sub
stc
sbb
das
popa
icebp
call
jae
cmp
xchg
je
sti
fcom
pop
dec
sbb
pop
daa
pop
arpl
jne
jo
dec
std
jl
xchg
adc
add
push
mov
xchg
js
daa
and
inc
adc
cli
rolb
cs
rolb
pop
jle
fildll
out
fs
push
mov
dec
add
push
cmpsb
adc
incb
ss
call
lcall
dec
loop
rcrb
ljmp
jne
pushl
je
pushf
stos
pop
jg
test
or
fcomps
lea
nop
ret
dec
or
ss
loope
jbe
lods
adc
pop
repnz
out
test
dec
jp
cmp
jnp
xor
pop
in
cmp
nop
lock
data16
loop
push
adc
dec
lock
aad
push
add
xor
jo
push
pop
jmp
cmp
icebp
je
movsb
dec
arpl
or
call
jb
push
cmp
or
aad
mov
push
in
cwtl
mov
fidivrl
ss
push
rcrb
lea
xor
rclb
rorl
push
test
sbbb
mov
mov
pmulhuw
pushf
pop
cli
cmc
pusha
aaa
js
pop
test
hlt
mov
push
test
in
push
loope
jle
js
arpl
mov
lahf
xor
jnp
adc
add
in
pop
mov
inc
cmp
cld
jbe
mov
fistl
movsl
sbb
push
sbb
icebp
fisubrs
adc
scas
scas
subl
mov
sbb
into
dec
pop
pop
jbe
pop
dec
xchg
or
jno
cmp
sub
dec
mov
stos
dec
ds
jns
mov
jmp
mov
or
imul
push
cmpsb
aaa
mov
das
pusha
daa
mov
dec
lods
or
cmpb
popa
in
mov
cmp
dec
jno
and
sbbb
mov
dec
clc
cmpl
adc
mov
popf
jl
not
xchg
fnstcw
xchg
pop
mul
or
data16
mov
outsb
adc
jns
push
mov
sbb
cmpsb
lret
push
push
jnp
push
dec
test
jo
int
mov
sbb
mov
mov
in
cmpsb
sbb
lret
testb
sarb
add
lods
jge
sbbb
idivl
stos
arpl
and
loop
mov
cwtl
out
rolb
loop
js
xlat
or
out
inc
mov
outsl
faddl
stos
stc
insl
repnz
pop
dec
cmp
lahf
lods
cmp
repnz
add
es
es
sub
out
sbbl
inc
sub
pushf
gs
jge
clc
outsl
xchg
and
mov
das
xor
fstpt
aad
lahf
jo
jno
mov
pop
mov
and
mov
outsl
jb
xor
sub
sbb
inc
mov
imulb
call
aad
jnp
out
imul
aad
js
inc
out
fcompl
mov
push
xchg
clc
test
sbb
mov
dec
out
xchg
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
lret
lcall
les
pfcmpeq
mov
xor
mov
add
js
cltd
hlt
pop
lea
ret
loop
or
sub
cmpsb
aad
fisubs
shl
mov
inc
dec
mov
dec
pop
test
push
mov
mov
mov
inc
xchg
shl
or
call
insl
pop
cmc
or
repz
ss
mov
test
sbb
mov
sbb
cmp
arpl
shr
lret
inc
imul
fnstcw
sub
std
pusha
out
sbb
iret
std
inc
sbb
sub
mov
call
lods
mull
stos
into
int3
push
push
xchg
cmc
repz
jecxz
xchg
xor
das
dec
jb
sub
mov
les
adc
pop
sub
in
ja
cmc
adc
cmp
cli
sub
js
jg
mov
jle
outsl
mov
mov
ret
ret
adc
mov
mov
insl
cmp
fisttps
mov
fdivl
dec
fisttpl
clc
adc
aad
rol
out
bound
fs
cmp
inc
shl
sub
das
lcall
push
push
xor
mov
hlt
dec
jno
sti
outsl
loop
cld
fcomps
fbld
int
clc
inc
mov
mov
sbb
mov
sub
jbe
mov
cwtl
imul
adc
dec
popf
and
mov
call
arpl
mov
testl
je
inc
out
pop
loope
out
xchg
rdpmc
jecxz
push
ljmp
cmpl
mov
pop
dec
push
add
cltd
dec
cmp
mov
iret
insb
rcrb
out
inc
fsubs
xchg
out
nop
aad
or
in
cmpsb
dec
push
push
mov
scas
inc
xchg
xchg
int
xchg
push
sub
inc
adc
cmp
add
mov
aaa
int
je
adc
inc
lret
inc
add
addr16
outsb
xchg
mov
out
jae
cmp
pop
jecxz
xchg
cld
scas
popf
in
pop
ljmp
adc
fcompl
push
mov
inc
lret
mov
lock
xchg
sbb
int
movsl
daa
ret
cltd
push
mov
xor
cmp
add
jns
lcall
int3
int
and
add
and
dec
xor
mov
mov
lcall
pop
and
or
ret
imul
xchg
pop
aam
test
cltd
nop/reserved
xor
cmp
mov
mov
xchg
add
jns
sbb
imul
jb
and
pop
insl
mov
mov
cmc
inc
sarl
scas
in
test
lahf
and
movsb
pop
andl
les
and
dec
mov
xor
push
and
mov
fisttpl
and
jmp
mov
call
fidivs
pop
bswap
imul
mov
clc
repnz
insl
pop
push
sub
sub
hlt
cli
mov
or
jns
push
adc
cmpsb
shl
repnz
fisubs
test
jge
in
adc
fsts
inc
in
in
pop
mov
les
push
pop
cmc
pop
ljmp
pushf
adc
out
mov
ja
mov
inc
sbbb
enter
sub
add
sub
xchg
xchg
mov
in
mov
dec
and
mov
sbb
or
or
lcall
loope
nop
adc
rcrb
pop
stos
mov
push
popf
je
xchg
ljmp
inc
adc
ds
lods
inc
jbe
sub
adc
xor
mov
scas
insl
pslld
stos
adc
inc
and
dec
pop
or
insl
jle
pop
cmp
or
sub
pop
aam
shll
push
popf
jecxz
sub
dec
inc
and
dec
sbbl
push
jge
mov
testl
pop
add
bound
xchg
rorb
andl
cmpxchg
inc
mov
imul
icebp
pop
add
mov
adc
xor
outsl
idiv
stos
jmp
sbb
and
pop
ljmp
decb
enter
inc
repz
mov
not
fmull
arpl
push
das
ss
loope
jmp
cld
mov
andl
xor
mov
flds
fwait
out
push
jo
shll
cmp
mov
outsb
push
mov
mov
mov
cmp
push
orb
pop
fwait
pextrw
lahf
in
mov
insb
inc
push
pop
or
and
outsl
pusha
lret
cltd
pop
dec
shlb
jecxz
jo
sub
addb
test
lods
pop
inc
pop
pop
test
mov
clc
pop
inc
stc
mov
lahf
jne
mov
stc
data16
mov
scas
push
sub
pop
cmp
and
gs
nop
adc
dec
jge
rorb
push
iret
and
rcrl
scas
push
ret
add
scas
add
arpl
ret
and
outsl
jle
out
das
ss
fists
xchg
push
leave
mov
lcall
cmp
jae
inc
subl
les
scas
cmp
ja
push
adc
and
jecxz
out
cli
cli
gs
mov
or
cmovg
fdivl
into
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
lcall
adcl
dec
mov
push
dec
inc
stc
dec
or
jp
sbb
stos
or
push
and
push
sbb
fldl
loope
int3
popa
jmp
lahf
and
scas
pushf
fisubs
lock
push
push
dec
push
repnz
mov
or
mov
jae
cltd
clc
mov
sbb
mov
clc
outsl
dec
inc
pop
movsl
adc
cmp
into
js
arpl
and
mov
cmpsl
mov
insl
mov
clc
jle
dec
pop
cmpsl
fidivrl
or
xor
fwait
icebp
dec
mov
fsincos
push
push
inc
jns
sub
push
pop
ljmp
bound
xor
sbb
cmp
lds
sbb
jle
mov
test
aas
in
push
out
and
push
pop
push
dec
lcall
subl
aad
sub
aam
or
aad
jbe
dec
jp
outsb
fsubrl
inc
adc
out
rolb
cmp
pop
pop
sub
inc
sub
popa
out
mov
pusha
lret
and
mov
mov
mov
mov
mov
sahf
in
movb
cmp
dec
das
push
ja
cmp
outsl
or
add
inc
xchg
jns
xchg
sbb
cmp
and
imul
add
jle
jle
aaa
out
int
push
inc
mov
outsl
cmpsl
and
push
movsb
xchg
fwait
popf
orl
fisubrs
nop
dec
dec
cmpsb
into
mov
fcompl
add
loope
jl
jns
notb
mov
leave
loope
test
jb
cwtl
icebp
jnp
xor
dec
test
xchg
pop
test
jmp
ret
jbe
add
dec
fwait
int
cmp
dec
incl
sbb
inc
sbb
icebp
das
fld
test
lret
sahf
sbb
cmpsl
jg
sub
cltd
add
popf
pop
ret
pushf
add
shlb
mov
sbb
adc
stos
push
push
repz
andl
mov
lea
sbb
inc
out
or
lods
sub
movsl
adc
fcoms
stc
mov
jmp
aas
loope
push
or
movsl
fcomps
dec
lahf
lcall
or
cmpsb
gs
jae
outsb
push
jecxz
push
xor
push
imul
stos
and
pop
fs
mov
mov
push
cmpsl
xchg
mov
adc
push
call
loope
je
call
mov
push
sti
pop
mov
xchg
aaa
push
or
dec
jl
ret
xchg
add
jno
and
jmp
and
outsb
jne
rclb
push
hlt
push
into
popa
push
test
outsb
repz
inc
add
cmp
sbb
dec
cmp
jecxz
pop
push
mov
lea
mov
cmp
mov
iret
pop
sbb
jge
scas
ljmp
jns
add
add
mov
leave
cltd
cbtw
and
pop
icebp
push
and
std
aas
mov
arpl
pusha
adc
jae
shl
adc
ss
loope
cmc
cmp
pop
sahf
addr16
adc
test
mov
adc
out
movsb
mov
mov
les
cmp
outsb
rol
xor
sub
xor
lea
mov
in
icebp
gs
repnz
lea
mov
loope
js
jnp
cmp
dec
scas
ljmp
or
sbb
or
scas
or
in
loop
push
mov
cltd
jo
sbb
ret
dec
addr16
jecxz
cmpsl
jmp
mov
mov
inc
pop
lods
jno
xchg
rcrl
jmp
push
mov
insb
ror
fmull
mov
jo
pop
mov
arpl
cwtl
orb
mov
mov
fists
mov
dec
pusha
cmp
dec
mov
inc
insl
add
hlt
les
cmp
xor
dec
xchg
push
cmp
out
aas
mov
insb
cmp
cmc
insl
lods
popa
in
mov
mov
cmp
xchg
xchg
or
adc
push
and
movsb
outsl
enter
xchg
jl
cltd
test
add
pop
mov
inc
lods
mov
fildl
push
mov
in
or
pop
pushf
shll
fimuls
inc
xchg
imul
lret
push
cmp
ret
add
dec
cltd
popf
xchg
jge
in
ret
sub
or
and
cmp
es
cwtl
lahf
popf
shrb
and
sti
cmp
jmp
mov
sahf
pop
out
les
jnp
cmp
cmp
pop
pop
ret
out
sti
test
sub
fsub
sub
ds
out
mov
out
jb
adc
pop
xor
inc
scas
jns
mov
push
lds
jmp
scas
mov
fnsave
mov
add
stos
cld
xchg
aad
jecxz
cmp
or
mov
test
sarb
jle
mov
inc
cmp
mov
arpl
jl
test
dec
scas
scas
inc
dec
test
or
pushf
das
dec
mov
mov
mov
imul
adc
test
or
fmulp
cmp
subb
pop
cmp
ret
adc
popf
es
sub
jbe
pop
inc
push
fs
dec
push
cmp
xchg
inc
mov
ss
imul
test
jbe
pop
call
insb
mov
inc
insb
out
std
add
mov
jmp
xchg
ja
mov
int3
or
ror
pop
dec
aas
xor
sti
or
cmp
shlb
cmp
mov
cltd
xchg
cmpl
mov
or
incb
ret
hlt
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
jae
cmpsb
js
js
add
inc
and
mov
nop
mov
dec
jle
or
dec
lods
mov
adc
cs
pop
pushf
cli
mov
fcmovu
ficoml
mov
adc
pop
shl
xor
cmpsb
idivb
nop
lea
or
inc
mov
sbb
test
dec
mov
sbb
add
xorb
dec
push
rclb
stos
inc
mov
adc
mov
fsubrp
mov
pop
cmpxchg
or
cltd
sarl
adc
or
push
lock
inc
sub
push
scas
out
push
cmpsb
dec
jns
push
aam
je
push
sub
xchg
mov
dec
or
clc
and
mull
imul
and
dec
pop
test
movsb
das
mov
jl
push
insb
or
dec
insb
movsb
and
cmp
mov
push
mov
cld
seto
lcall
inc
cmp
cs
sti
ret
push
sbb
xor
jne
stos
sbbl
push
xorl
inc
cmp
data16
int3
in
pop
jo
test
sub
loop
sub
jb
mov
or
pop
push
mov
stc
mov
out
hlt
lods
outsb
movsb
lods
ds
adc
addr16
xor
test
mov
push
cld
pop
xlat
push
pop
xchg
int
insb
out
outsl
data16
cs
repnz
add
aam
test
mov
mov
cmc
pop
pushw
scas
jne
sub
pop
leave
std
dec
ret
jae
adc
mov
or
cwtl
cmpb
xchg
pop
xor
icebp
and
testb
jb
mov
insb
fcoms
pop
xchg
mov
push
mov
sbb
adc
in
sti
outsl
nop
and
dec
dec
mov
sub
sbb
mov
hlt
fsubrs
sahf
adc
mov
popa
xchg
adc
xlat
push
test
cltd
dec
xchg
adc
xchg
inc
test
pop
insl
movsl
xchg
scas
and
insl
mov
xchg
in
cmc
xchg
aam
ss
dec
jge
push
std
jb
roll
mov
das
insb
mov
fs
cmp
test
pop
mov
in
fmull
push
push
popl
sarb
lods
jno
pop
inc
adc
pop
jns
jmp
rorb
pusha
inc
jo
outsb
add
jp
push
cmpsl
mov
inc
cmp
shl
outsl
sub
push
imul
sbb
or
pushf
mov
shl
inc
icebp
out
in
mov
jbe
mov
push
insb
pop
les
loopne
mov
imul
sahf
fsubrs
mov
push
test
cmc
pop
pop
dec
out
mov
sbb
jno
fdivrl
fdivrl
rcrb
jle
in
sbb
jge
add
xchg
push
jle
cmc
add
jo
xchg
push
leave
inc
lahf
ss
or
test
dec
test
or
imul
sbb
add
or
mov
inc
aam
jg,pt
dec
jno
mov
add
fcompl
in
shrb
adc
pop
call
fdivrp
mov
scas
inc
mov
adc
cmc
cld
hlt
in
xchg
mov
pop
stos
stos
loope
ret
sbb
shlb
je
aad
addl
mov
aad
jae
sub
cltd
and
cmp
pop
out
jmp
jge
in
sub
loopne
add
lcall
sahf
add
aam
xlat
ds
add
push
sahf
fcompl
icebp
in
hlt
pop
sbb
jmp
mov
testb
fstpl
mov
push
mov
shlb
rorl
movsb
xchg
das
popf
test
int
push
gs
adc
addr16
cmp
dec
outsl
sub
in
add
xchg
loope
xlat
iret
in
push
out
mov
push
jo
in
jns
pop
sbb
mov
jae
pop
or
lcall
lods
pop
mov
loope
cmpsl
jb
outsb
bound
jg
and
mov
and
int3
aas
xor
push
mov
cmpsb
or
mov
mov
adc
cmp
mov
dec
rorb
js
sub
lret
or
pusha
inc
ficoml
jne
jp
jmp
pop
sbb
push
pusha
adc
ficoms
xchg
out
lcall
sub
or
push
repnz
push
lods
add
or
jnp
dec
adc
or
cs
adc
cmp
jno
sub
icebp
inc
hlt
fxch
mov
sub
orb
arpl
in
jns
jecxz
xchg
stos
mov
dec
jno
test
fidivrs
cwtl
mov
fbstp
push
pop
negb
mov
xor
jne
xor
xor
mov
mov
insb
in
pop
dec
fdivp
mov
pusha
stos
push
repnz
repz
xor
roll
lods
and
or
pop
lea
cmpsl
mov
jecxz
shll
xor
jb
push
inc
xchg
ljmp
jbe
test
clc
xor
cmp
inc
pushf
jmp
lahf
and
adc
iret
pop
in
mov
mov
gs
jmp
sbb
adc
repnz
enter
xchg
and
into
in
pop
adc
lods
push
mov
dec
lods
adc
lods
push
loopne
rcrl
clc
cmpsl
mov
stos
sbb
pop
lcall
lret
sbb
cs
js
and
pop
add
cld
add
jbe
push
outsb
xchg
fisubrs
push
cmp
push
jp
push
sbb
xchg
mov
popf
pop
clc
mov
dec
inc
test
sub
xchg
pop
sbb
or
or
pop
ljmp
test
imul
ds
lea
push
ds
mov
andb
out
insl
movsl
xor
jle
cld
ficompl
or
imul
mov
mov
or
mov
jg
or
xor
scas
loopne
add
addl
push
test
push
out
fistpl
repz
mov
sub
idivb
sbb
inc
fidivrs
mov
shl
xchg
mov
jb
ror
dec
scas
daa
std
push
in
inc
push
mov
mov
test
push
adc
iret
dec
adc
and
or
inc
aad
push
mov
popa
mov
xchg
sbbl
dec
jb
stos
jnp
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
sub
add
sbb
fmull
adc
repnz
jbe
les
dec
daa
loope
jb
jbe
lret
addr16
addr16
movsl
in
inc
dec
insl
xor
pop
movsl
sbb
lcall
xchg
aas
sbb
into
sub
outsb
enter
inc
outsb
push
xchg
jg
sbb
mulb
mov
inc
pushf
lcall
cmp
or
rcl
or
mov
divb
int3
pop
loop
test
mov
cmpl
stos
fisubrl
cmp
dec
dec
pop
add
sub
cmpsl
je
daa
aam
inc
push
sbb
cmpsb
pop
mov
xor
cli
call
or
pusha
stc
mov
sbb
inc
cs
mov
inc
push
xor
jecxz
rcl
sti
out
mov
push
daa
jo
mov
lock
jg
lret
cwtl
inc
xor
adc
push
and
mov
mov
fists
in
sub
mov
scas
bound
mov
cmp
jae
insb
xor
cmpsb
mov
mov
movsb
sub
and
pop
jl
jno
fsubr
aad
movsl
popf
xchg
xor
dec
repz
push
dec
jecxz
sbb
in
pop
mov
lret
fldcw
fstpl
push
inc
sbb
mov
out
pop
or
inc
pop
mov
cmp
or
negb
jns
pop
ljmp
and
mov
push
jnp
test
dec
icebp
dec
add
jecxz
addr16
lret
fstpt
xor
int3
aam
stos
xor
fs
lea
lock
out
cltd
xor
cmp
pop
ret
out
inc
into
cld
sub
scas
lea
imul
mov
xchg
jle
push
sub
xchg
push
insb
repnz
outsl
sbb
movsl
dec
or
movsb
rorl
ja
ret
je
dec
mov
pop
in
mov
mov
cmp
call
push
sbb
in
xchg
ja
sbb
shlb
pop
push
iret
pop
or
lock
sbb
out
lret
ljmp
dec
inc
sbb
cmp
pop
test
pop
scas
lods
xor
mov
adc
call
dec
jmp
adc
cmp
aaa
jbe
mov
push
and
movsl
out
and
inc
cmp
gs
hlt
imul
mov
popl
idivb
lea
push
das
or
push
adc
scas
cmp
lock
int
je
pushf
mov
sahf
addr16
in
data16
addr16
xor
adc
stos
stc
js
xor
adc
clc
add
in
sarb
mov
mov
inc
sub
push
incb
sahf
sub
popf
in
std
data16
testl
jg
dec
or
xchg
dec
sub
orl
das
cltd
mov
sub
insl
mov
stos
pop
addr16
or
mov
outsl
rcrb
icebp
pop
add
cmc
outsl
push
or
roll
pop
loopne
fbld
fadd
sbb
jns
sub
in
adc
inc
popa
lods
shl
adc
mov
xchg
shrl
or
push
or
xor
sbb
pushf
mov
into
std
xorb
jae
repz
leave
lods
push
fdivl
mov
pop
adc
test
jbe
jne
in
pop
dec
cmp
cmovns
sbbb
imul
outsl
je
add
and
hlt
in
shrl
popa
xchg
movsb
iret
in
mov
cltd
adc
push
in
add
lret
add
lret
adc
inc
iret
cmp
sti
mov
shl
ja
dec
not
les
dec
adc
or
mov
and
mov
aad
sbb
and
fidivrs
ds
push
ja
xchg
lds
mov
sub
testb
arpl
test
mov
shrl
dec
xor
aam
lock
jle
inc
dec
cmp
inc
jl
js
push
push
or
xor
pop
or
lock
fcomi
dec
in
cltd
jecxz
sbb
or
and
adc
call
icebp
outsb
pop
cmpsb
sub
inc
fdivl
cltd
fnstenv
push
push
lahf
aaa
or
inc
pusha
xchg
das
push
sub
mov
sub
mov
outsb
scas
jno
or
lret
xlat
mov
pusha
dec
hlt
ds
pop
mov
jae
pop
mov
jbe
adc
movsl
sub
int
pop
or
xchg
mov
jecxz
inc
jg
adc
int
jno
addl
movsb
arpl
adc
int
or
pusha
or
mov
mov
pop
xor
andb
mov
out
and
push
in
insb
cmpl
daa
mov
subl
sahf
jae
gs
mov
xchg
xchg
insb
loopw
aad
xchg
jmp
daa
cmpsb
cmpsb
rclb
shll
push
mov
aaa
mov
push
js
sub
inc
inc
push
mov
and
nop
fcmovnbe
les
cld
stos
lea
ljmp
push
xchg
push
loopne
lea
jl
xchg
in
ret
outsl
sbb
xchg
ja
mov
fmuls
nop
mov
or
sbb
test
and
cmc
pop
mov
xor
fs
inc
pop
mov
push
ja
hlt
pop
popf
sarb
cmp
pop
andl
jle
mov
enter
pop
dec
iret
dec
inc
push
mov
jmp
inc
js
xchg
popa
lods
pushf
pop
loopne
adc
mov
daa
aam
insb
xor
push
mov
in
cmp
rclb
pop
repnz
push
jecxz
xorl
dec
loopne
movsb
mov
test
xchg
adc
ljmp
xor
pop
test
pop
das
dec
pop
in
pop
push
and
insb
inc
push
outsl
jo
add
test
pushf
sub
push
push
bound
enter
cltd
jecxz
scas
sbb
mov
jae
addr16
and
or
sbb
loop
add
jg
add
adcl
test
xor
cwtl
stc
dec
jno
repz
std
mov
jg
xor
insb
insb
push
sbb
aas
imull
cld
addb
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
push
jns
dec
stos
pop
add
xor
scas
pop
inc
push
sub
pusha
xchg
add
push
fidivrs
add
push
dec
test
cmp
adc
push
es
cmp
fldz
lods
sub
inc
add
out
and
mov
lcall
fsubr
in
pop
xor
xchg
adc
mov
push
pop
pop
mov
shll
fwait
xor
mov
bnd
rclb
xchg
cmp
adc
add
fldl
xlat
int
les
xchg
mov
leave
add
jno
adc
mov
jb
jno
outsb
adc
test
outsl
jb
dec
je
int3
iret
mov
fmull
xchg
cmpsl
inc
or
out
popf
and
mov
or
push
es
cmpl
push
jmp
enter
push
jb
sub
jae
mov
or
or
sub
mov
and
aad
or
push
aad
or
inc
inc
jno
mov
insl
mov
inc
notb
and
adc
and
imul
aaa
ja
test
push
sbb
dec
repnz
and
stos
fwait
adc
push
inc
add
addr16
push
sbb
sbb
mov
pop
xor
cmp
imul
ret
sub
mov
das
aas
fnstcw
jp
add
adc
pop
mov
loope
xchg
jns
aad
lret
rolb
rcr
sbb
rol
lea
cltd
rolb
xchg
xor
in
mov
les
stos
jg
ss
jmp
in
push
pushf
aam
and
dec
nop
lock
jne
push
insl
loop
push
movsl
inc
lret
cwtl
dec
mov
push
jno
xchg
xchg
xchg
mov
sbb
adc
jp
cmpsl
insl
mov
dec
inc
fisubrs
int
jae
cmp
clc
in
and
arpl
add
push
push
adc
mov
rcrb
push
enter
or
movsl
cld
xchg
pop
popa
push
mov
test
std
cltd
pusha
lahf
fistpll
punpckldq
or
add
shll
lret
mov
filds
mov
nop
jbe
push
xor
push
stos
icebp
sub
push
mov
adc
mov
scas
push
sbb
mov
jo
cli
clc
xor
int
arpl
or
sbbb
out
sub
jg
jno
pop
insl
lahf
jle
xchg
add
icebp
scas
lret
sti
addr16
mov
or
out
ja
fst
mov
push
lods
daa
push
push
mov
in
sub
clc
loope
add
push
fildl
repnz
or
addl
dec
int3
sub
mov
xor
jo
fisubl
sub
add
js
xor
sub
insb
push
jbe
pop
jno
js
dec
loope
cmp
das
out
sarl
ror
ss
int
lret
pop
add
fisubl
ljmp
stc
sub
data16
lock
add
ret
adc
jge
int
xor
inc
pop
movsl
add
lahf
iret
adc
mov
add
xchg
es
pop
xor
sbb
push
mov
into
inc
pop
hlt
jl
sub
pop
ficoms
int3
inc
mov
std
in
fwait
in
push
out
pop
stc
jmp
jbe
test
into
mov
sub
je
shlb
dec
cmp
adc
push
add
int3
nop
data16
mov
add
xor
xchg
adc
iret
inc
jns
mov
push
aam
pop
jg
cmp
mov
inc
cmpl
test
mov
push
cmpsb
xor
adc
imul
fwait
cmp
lea
cli
fbld
and
dec
mov
push
sbb
test
std
xchg
cmp
popf
repnz
push
mov
filds
and
out
subb
cmpsl
push
inc
insb
sti
into
lret
aad
mov
js
adc
mov
jle
orl
xor
sarl
cwtl
fcomp
inc
sbb
xor
xchg
clc
and
in
mov
push
xor
and
mov
rclb
scas
shrb
mov
xchg
cmpsl
xor
sbb
push
xor
fs
mov
jne
lds
dec
enter
idiv
shll
add
push
add
jbe
movsb
aaa
or
incl
mov
mov
push
dec
cmp
rorb
enter
push
call
jns
xchg
push
jecxz
cmpsl
addl
mulb
cld
pop
shlb
push
scas
call
xlat
push
add
push
sahf
into
test
cli
xor
adc
imul
jns
push
fnstcw
jne
call
dec
push
jmp
ja
mov
cltd
aam
ja
pushf
lahf
cltd
cmp
mov
cld
xchg
shrb
cs
mov
inc
and
dec
rcl
xchg
loopne
popa
pusha
xor
les
frstor
int3
jmp
inc
and
xchg
mov
icebp
fsts
or
sub
pop
clc
xchg
faddl
xchg
orb
subb
jns
xchg
mov
jmp
cs
pop
cmpb
mov
jl
into
cmp
mov
out
lahf
mov
mov
mov
add
sub
and
cmp
repz
sub
pop
cmp
cmp
dec
cmp
dec
or
sbb
rcr
dec
int3
sub
cs
push
clc
xchg
mov
in
lock
fnstcw
sub
and
stos
cmp
inc
jmp
test
loope
mov
pop
add
iret
test
fisubrl
sub
in
aas
cmp
cmc
jns
and
push
fcmove
loop
pushf
push
movb
cltd
mul
mov
inc
push
roll
mov
es
adc
dec
mov
cmpl
dec
mov
push
jmp
dec
cmp
bound
rcll
insb
mov
loop
test
bound
jnp
jno
cmp
jmp
test
xor
movsl
push
push
mov
js
add
xchg
mov
ret
pop
mov
sbb
cmp
and
enter
or
cwtl
popf
fstps
movsb
mov
pop
bound
jne
jle
jle
cs
mov
test
pop
movb
inc
push
jbe
mov
push
push
call
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
popa
push
or
push
add
std
insb
jb
lcall
cmpb
icebp
mov
xorl
and
adc
in
and
aam
fwait
adc
mov
cmp
add
outsl
scas
lea
mov
repz
mov
mov
ret
das
inc
jno
inc
xor
push
gs
icebp
mov
call
jns
fldcw
xchg
cmc
push
jne
push
sbb
out
inc
fsubrl
in
sbb
aad
pop
adc
xchg
mov
jns
test
loop
dec
cs
mov
data16
imull
cmpsb
xchg
shrl
cwtl
jb
pop
rcrb
dec
mov
mov
add
sbb
movsl
cli
and
sti
or
push
inc
push
mov
ret
or
nop
sub
pop
ds
push
xor
add
push
cmp
loop
ljmp
stos
cs
sub
pop
inc
nop
fisubrs
repnz
xchg
repnz
mov
fwait
cmpsb
pusha
loope
or
mov
sub
and
mov
stc
mov
xchg
push
icebp
lret
dec
insl
loope
sbb
adc
in
shlb
cs
negb
sbb
push
sub
rcrl
cmpsb
shll
jnp
notl
imul
sbb
clc
mov
cmp
test
jmp
outsb
loop
pusha
cmpsb
arpl
xor
add
dec
adc
push
push
adc
cmp
lods
cltd
dec
and
inc
xchg
out
adc
adc
in
pop
inc
pop
jo
jecxz
jnp
lods
xchg
lock
push
hlt
mov
rolb
gs
repz
int3
xor
cmp
xchg
fldt
mov
pop
mov
adc
out
sub
pop
addr16
outsb
mov
cli
je
lcall
lret
xchg
cli
cmp
push
mov
dec
ret
rcll
inc
fidivl
lret
mov
xchg
lret
ffree
xchg
repnz
pop
adc
pop
popaw
jnp
jg
add
and
jmp
sub
divl
scas
bound
inc
push
sub
add
push
repnz
scas
insl
inc
mov
ss
xor
icebp
xchg
mov
pop
mov
xor
adc
shlb
xor
push
jecxz
or
pop
push
xchg
fiaddl
xor
int3
push
sub
mov
shr
mov
mov
mov
push
push
mov
sahf
inc
loop
rolb
mov
or
lret
mov
stc
or
xchg
dec
ret
outsb
xchg
pop
cltd
or
dec
cmp
and
aaa
pop
cmp
mov
sbb
mov
into
push
das
fdivrp
test
movsb
fcompl
and
jbe
or
shrb
lret
adc
xchg
daa
out
mov
ret
aas
dec
jl
cwtl
fmulp
mov
cwtl
outsl
imul
dec
pop
cltd
mov
fdivrp
ja
out
movsb
rcrb
push
mov
insl
cmp
subb
jp
mov
gs
imul
sbb
jae
ss
adc
imulb
ret
push
rcl
out
pop
push
pop
loope
adc
loope
std
xchg
cmp
xor
sbb
test
mov
xor
loop
fisubrl
jno
rolb
or
push
dec
inc
sarl
jp
mov
jo
scas
xorb
mov
push
or
mov
add
fsubr
test
ja
rcrb
sub
mov
jns
mov
paddq
and
das
movsb
stos
mov
dec
movsb
sub
cmp
adc
mov
fisubs
test
pop
add
in
add
in
cmp
decb
repnz
xchg
mov
out
xchg
js
icebp
pop
ljmp
mov
jmp
fadds
gs
push
pop
xor
xchg
mov
pop
sbb
add
fsubrs
add
ret
xor
lods
insb
mov
push
sub
dec
cmp
cmp
fs
and
fs
into
or
cmpsb
mov
cmc
mov
push
xchg
and
imul
xchg
gs
xor
pop
mov
pop
fcompl
clc
add
adc
push
adc
ss
mov
jle
pop
repnz
les
xchg
stos
xchg
jno
les
lret
jl
stos
push
stos
and
sbb
mov
xor
sahf
xchg
int3
cli
dec
out
lahf
xchg
loope
mov
test
mov
mov
divl
cli
aas
arpl
arpl
dec
mov
ror
dec
mov
and
add
or
jb
and
and
movsl
loop
cmp
xorb
push
ds
stos
dec
je
orb
pop
lret
in
push
dec
xchg
out
in
xchg
jmp
mov
push
or
dec
repz
mov
imul
dec
inc
push
test
or
iret
dec
daa
mov
push
clc
jg
outsl
mov
sahf
inc
outsb
dec
das
xchg
sbb
or
pop
push
or
fisubs
jle
pop
in
adc
jae
jb
sub
xor
test
jno
push
rclb
xchg
pop
mov
lock
push
in
and
or
xchg
shr
cmpsl
push
or
bound
jne
mov
sub
rcll
dec
dec
adc
push
shrl
loopnew
mov
and
aas
lret
imul
pushf
inc
mov
and
push
ljmp
int
sbb
adc
jg
rclb
xchg
les
gs
pusha
jns
js
shr
je
mov
sbb
and
dec
imulb
cli
insb
jne
sahf
add
fmuls
in
push
aam
stos
xor
jecxz
clc
or
mov
mov
inc
pop
jecxz
push
adc
testl
add
dec
and
sub
sub
cltd
repnz
push
test
outsb
outsl
out
jle
sbb
inc
test
adc
pop
cmpsl
pop
ljmp
mov
pop
add
lahf
std
mov
fldz
inc
jno
enter
jecxz
push
mov
js
xchg
shr
into
sar
loopne
lahf
pop
dec
sbb
ljmp
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
dec
pusha
push
cs
add
mov
mov
sbb
divl
daa
stc
int
mov
aaa
ror
mov
mov
mov
bound
leave
pop
lock
pushf
flds
add
stos
sbb
mov
pop
repz
es
xchg
mov
and
push
mov
lret
enter
mov
test
jmp
popf
push
rolb
fdivl
xchg
dec
mov
icebp
frstor
cmp
add
in
jge
push
jae
sub
xchg
std
icebp
mov
aad
fisubs
insl
xchg
faddl
xlat
jbe
push
xor
sub
ljmp
add
adc
insl
mov
out
stos
xor
xchg
sub
pop
dec
insb
aad
sub
dec
or
sbb
test
jnp
cmp
nop
inc
pop
and
movsb
subl
xor
push
cmp
push
ret
pop
jmp
jle
js
and
ljmp
pop
mov
stc
cmp
push
cmp
bound
mov
rclb
xchg
scas
push
loope
sub
sbb
daa
lods
test
push
cmpl
pop
sub
xchg
out
mov
lret
adc
or
sbb
mov
mov
aam
pop
adc
pop
lea
pop
cmpsb
pop
xor
std
mov
rorb
jge
sbb
pop
jl
mov
loope
scas
mov
test
daa
loope
sub
mov
jle
int
jo
mov
ds
cwtl
cli
loop
fsub
test
inc
ljmp
mov
nop
rorl
sarl
nop
pop
jp
mov
cmpsl
arpl
repz
xor
aas
xor
call
pop
out
mov
sbb
sti
inc
push
rol
jns
xchg
inc
arpl
inc
mov
ds
xor
or
cmp
dec
scas
mov
adc
cmp
push
xchg
add
bound
daa
mov
cmp
pop
jne
in
fwait
clc
in
sub
int
mov
das
iret
mov
orl
push
pusha
and
jl
insl
insb
cmp
sub
jo
fnstenv
into
jae
imul
jbe
push
out
xchg
fs
add
rcll
dec
or
jb
push
dec
pslld
loopne
sbb
mov
ljmp
js
push
shrb
ret
dec
das
push
sahf
fbstp
add
mov
push
sub
mov
inc
push
addr16
bound
mov
dec
flds
adc
and
pop
sbb
icebp
fstps
push
and
mov
jecxz
cli
ljmp
cli
movsl
or
dec
clc
mov
pop
pop
icebp
mov
inc
and
mov
ja
xlat
nop
movsb
dec
loopne
jge
adc
sub
xchg
mov
add
jb
mov
add
adc
repz
jecxz
pop
push
and
mov
outsl
sbb
pusha
outsl
out
cmp
xchg
or
push
das
mov
movsl
loopne
int3
std
jp
gs
push
mov
inc
push
sbb
mov
insb
add
rol
inc
repnz
inc
inc
xchg
ss
jno
cwtl
sti
inc
xchg
pop
repnz
mov
roll
repnz
arpl
cli
mov
sarb
aad
or
scas
ljmp
mov
or
mov
sarb
mov
dec
and
jbe
sarb
hlt
insb
stos
fidivl
dec
js
in
sub
adc
stos
es
int3
lods
lock
push
jbe
scas
notl
sub
mov
rcl
dec
rcrl
lahf
pushf
testl
js
cmp
xchg
cld
sahf
jnp
aam
fidivs
fiadds
push
xor
pusha
mov
mov
push
das
mov
ja,pn
inc
cmp
mov
mov
imul
movsl
pop
jmp
mov
mov
fwait
pop
mov
fiadds
in
cwtl
cmpl
pop
sbb
iret
cmpsb
jns
in
inc
push
ds
shrl
das
add
mov
push
sub
pop
out
aam
xchg
jle
add
jp
cli
ja
mov
inc
sbb
pop
aad
repnz
lock
call
xor
out
inc
lret
pop
mov
xor
jmp
pop
mov
and
xchg
hlt
subb
mov
fwait
ret
in
jnp
imul
leave
mov
mov
nop
loopne
jle
nop
lcall
fnstcw
subb
int
cwtl
pop
stc
push
add
ret
mov
jno
clc
faddl
pop
icebp
dec
dec
hlt
icebp
adc
sbbb
mov
jne
and
mov
cmp
cltd
or
xor
cmp
rcl
pop
cld
ret
inc
push
pop
xor
mov
pop
mov
ret
jle
sti
mov
adc
cli
cmp
out
icebp
pop
and
andb
icebp
lret
jns
fcmovnb
in
ljmp
cwtl
sti
pop
inc
push
stos
js
mov
imul
leave
pop
pop
jb
adc
lahf
in
dec
aam
mov
jo
jnp
jb
orb
shl
sbb
arpl
xchg
mov
ja
add
add
cmp
fs
xor
xor
nop
fisttpll
fwait
cmpsl
push
cmpsl
mov
ret
dec
enter
shll
jo
icebp
mull
dec
popa
xchg
loopne
mov
fcoml
and
cs
cmp
xchg
add
pop
xchg
push
and
pusha
dec
mov
outsl
mov
stos
add
push
imul
shrl
mov
sub
mov
loope
fiaddl
sub
cmp
fsubrs
insb
pusha
rorb
jp
xor
cmc
shrl
fldt
data16
mov
cmp
nop
stos
cwtl
or
lea
inc
dec
aam
stc
and
popa
xlat
add
test
call
data16
lea
shlb
xchg
dec
hlt
rcrb
mov
and
xor
push
xor
jne
add
pop
jnp
lcall
sbb
je
mov
aas
jno
push
inc
mov
xchg
fucomp
pop
pop
mov
sub
or
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
lahf
movsb
js
inc
add
mov
sub
jle
test
ja,pn
xor
icebp
aaa
jo
into
pop
mov
ret
mov
add
mov
xchg
or
jb
sub
outsl
inc
test
lret
fcmovbe
jl
adc
mov
cmp
rcrl
test
icebp
shll
and
loope
inc
mov
notb
push
adc
leave
inc
jl
out
out
sbb
pop
jg
test
mov
in
mov
xchg
xchg
mov
movl
cmp
mov
fstpt
sti
xor
xchg
loopne
insb
inc
das
je
fstpt
xchg
popa
inc
push
add
hlt
gs
add
mov
and
jp
je
pop
pop
add
fsubrs
sbb
sbb
sti
pop
mov
das
or
push
fisubrl
aad
push
idivb
ljmp
jne
cld
hlt
mov
jbe
outsl
lock
inc
xchg
push
gs
push
arpl
bound
and
pushf
inc
pop
mov
hlt
mov
std
aaa
sub
mov
cld
pusha
int
or
in
aad
int3
mov
xor
xor
int
repz
xor
adc
dec
push
sbb
orb
and
insb
push
and
pop
daa
sbb
out
int
add
aam
push
sub
inc
push
jno
xchg
sbb
out
add
fnstsw
mov
dec
cwtl
sbb
repz
bound
into
inc
loop
data16
cmp
mov
scas
mov
dec
lds
cmp
inc
loopne
pusha
subb
mov
cmc
ds
leave
add
mulb
icebp
adc
insb
and
cmp
cmp
imul
jno
rol
inc
lock
pop
pop
jno
pop
mov
dec
rorb
mov
dec
adc
cmc
data16
mov
stos
ret
std
lret
mov
cmp
xchg
push
jne
dec
clc
dec
rorl
sahf
push
xchg
por
fdivl
movsl
pop
sub
leave
cmpsl
sub
jo
and
xor
jmp
and
outsb
or
or
js
sbb
je
int
cmp
movsb
sub
mov
xor
or
roll
lret
pop
int
mov
add
lods
mov
push
xchg
mov
xchg
jnp
mov
enter
dec
pop
fistl
je
notb
movsb
cmp
mov
call
adcl
fadd
push
dec
test
or
lods
sbb
or
and
xchg
pop
daa
jge
scas
cli
push
cmpsb
scas
jl
iret
add
mov
aad
mov
insb
jecxz
ret
dec
inc
xor
mov
mov
rorb
mov
adc
arpl
mov
push
test
xor
pusha
sub
test
cmp
jae
cmp
imul
stc
add
push
popf
xchg
lods
addr16
mov
in
xchg
mov
repz
push
inc
enter
add
mov
or
xchg
xor
jg
xor
inc
into
push
fadds
xchg
pop
outsl
sbb
sti
fs
fsubs
in
mov
mov
lods
cmpsb
cmp
mov
cmp
add
mov
mov
arpl
rcrl
sbb
adc
lods
or
in
pop
psllw
subb
les
cld
pusha
sarb
mov
shlb
sbb
mov
push
das
dec
repz
add
bound
fs
int
adc
lret
jmp
push
push
jl
bound
xor
into
xor
mov
daa
add
adc
push
inc
pop
jae
lret
aas
add
call
insb
xchg
sbb
jo
into
lods
sbbb
dec
fbld
test
ficomps
in
loopne
inc
and
sti
ljmp
es
rorb
shll
loope
cs
push
fs
jge
cwtl
jl,pn
cmpsb
lock
and
jne
sbb
jl
aas
popa
sub
dec
insl
mov
rorb
int
sub
pop
scas
test
movsb
and
nopl
pop
inc
pusha
cmp
push
sub
dec
es
jmp
push
neg
fucomi
push
into
repnz
sbb
sub
lahf
cmp
lds
maxps
cltd
pop
mov
pop
das
adc
mov
lea
mov
xchg
ss
mov
mov
add
fildll
mov
or
jae
scas
xchg
nop
push
inc
jl
stos
jp
adc
clc
pop
xchg
data16
add
into
xchg
fmull
fsubl
es
fwait
xor
push
jbe
mov
cwtl
orb
push
xchg
push
inc
pushf
mov
jb
dec
or
mov
aaa
or
dec
inc
lret
inc
sbb
cmp
adc
andb
lcall
cmpsb
adc
outsb
push
test
cmp
add
daa
fwait
int3
jmp
loopne
outsb
push
cld
jg
and
stos
dec
sbb
insl
je
test
xchg
mov
test
je
scas
lods
stos
pop
js
sbb
lret
js
jmp
sbb
pop
pop
cmp
sbb
scas
ss
inc
cmc
inc
and
cmp
xchg
js
test
mov
testl
inc
mov
sbb
xor
cmp
cmp
mov
idivl
ljmp
add
xlat
cli
pop
int3
add
shlb
xchg
repnz
mov
cli
daa
inc
iret
sbb
jl
int3
jns
ret
out
je
jle
out
mov
jmp
fwait
cmp
out
push
popf
and
inc
arpl
push
lea
push
lods
sti
jg
aaa
cmpsb
adc
leave
cmp
xor
add
cmpsb
insb
adc
aam
cmp
adc
and
adc
jecxz
sbb
scas
cmc
mov
sbb
mov
hlt
mov
pop
or
filds
in
clc
sub
rolb
jl
sarb
fildll
cmp
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
xchg
ss
shll
add
dec
movsb
jnp
sbb
cmpsl
cmp
sbb
stos
dec
lahf
jle
inc
and
adc
cld
iret
sbb
xor
aam
dec
dec
cmp
sbb
xchg
inc
mov
clc
ss
mov
cltd
pop
push
push
std
les
mov
mov
outsl
push
and
movsb
inc
add
outsb
jbe
hlt
push
roll
add
andl
cmpsb
aam
mov
xor
pushf
xchg
sti
fwait
loop
push
gs
mov
jbe
orb
bound
xor
mov
dec
pop
sub
cltd
test
sub
hlt
pop
xchg
idivl
popf
mov
dec
roll
push
into
in
leave
aam
jnp
dec
popf
fsubs
pop
pusha
or
std
mov
jmp
mov
xorb
fisttpl
mov
popa
lds
xchg
cld
shlb
add
xchg
xchg
or
outsl
and
fistl
xchg
subl
mov
mov
rorb
sub
dec
sbb
push
scas
clc
cmp
cmpsl
adc
cli
rcll
mov
adc
dec
xor
call
mov
or
jb
nop
sub
cmp
sarl
sbb
sub
mov
hlt
mov
push
pop
fistl
fistl
and
imul
outsl
jle
std
jb
jbe
or
pop
shll
pop
pop
adc
ffree
mov
lea
or
cs
adc
xor
ljmp
mov
cmp
scas
or
push
out
push
cld
pop
in
in
popf
push
or
movsl
daa
ljmp
mov
lods
jl
adc
ds
ret
test
call
mov
push
pushf
push
inc
xlat
or
dec
test
loop
mov
cmp
xchg
clc
mov
lea
lahf
or
pop
mov
fisubrl
push
fwait
lret
sbb
fs
scas
popf
mov
jecxz
mov
sbb
mov
lret
loopne
fdiv
cmp
mov
xchg
jmp
jns
fcomps
sub
sahf
popf
in
out
rcrb
add
push
mov
push
test
or
cmp
mov
out
inc
in
xchg
xor
sbb
leave
fldt
inc
mov
hlt
je
mov
sub
lock
adc
mov
movsb
pop
int3
mov
cmp
jmp
cmp
imul
imul
sbb
test
xlat
xchg
ss
xor
push
idivb
dec
add
inc
fcmovb
idiv
mov
mov
sub
push
int
in
or
rolb
sbbb
adc
xor
test
push
aas
test
xchg
iret
xchg
imul
cmp
fcoms
jp
push
push
cwtl
sarb
mov
pop
int3
pushf
pop
pop
jge
shrb
mov
xor
repnz
add
mov
sub
fimuls
xorb
loop
add
dec
sbb
jne
sub
cmpsl
jne
xor
pop
data16
xor
aad
in
sub
in
mov
test
or
addr16
dec
adc
mov
push
sub
aaa
in
fs
inc
cli
rolb
mov
push
insl
cmp
sub
fnstenv
jg
mov
cld
push
jbe
arpl
jmp
sub
cmp
jnp
icebp
test
movl
scas
in
or
cmc
fwait
xchg
ljmp
call
je
push
mov
ror
xlat
mov
adc
popa
pop
out
pop
test
mov
bound
mov
inc
jbe
test
cmpsl
insb
shll
sub
daa
test
mov
sbb
jno
push
dec
jno
aaa
sub
sub
ja
mov
jmp
xorl
cmc
push
leave
pop
push
sbb
push
ja
and
xchg
lcall
imul
jg
pop
aad
or
dec
sahf
xchg
mov
pop
add
push
cli
pop
mov
mov
mov
jae
cltd
test
call
jnp
fidivl
xchg
sbb
mov
mov
xor
xchg
jg
pop
mov
les
add
pop
push
push
mov
jl
gs
xchg
imul
xor
mov
stos
test
inc
mov
fwait
push
insb
dec
mov
int3
jne
sub
int3
jmp
sbb
dec
jnp
or
xchg
and
sbb
lcall
ds
cmp
rcl
push
inc
loop
cmp
push
mov
bound
or
es
xchg
nop
mulb
or
xor
sbb
push
fimuls
aad
xor
pop
addl
mov
stos
inc
flds
pop
icebp
jae
xchg
ret
adc
pop
push
shll
scas
push
pusha
add
cmp
sub
dec
xor
jmp
push
outsl
mov
cs
push
pop
dec
jg
or
aas
xchg
mov
xchg
add
push
add
out
clc
mov
push
dec
or
xchg
enter
pop
lds
jg
mov
rorb
and
in
stos
aam
sbb
dec
cli
stos
or
out
int3
fstl
into
push
pop
cmp
mov
xor
jmp
aaa
mulb
and
sahf
scas
movsb
cmp
mov
sub
je
fs
test
fists
stos
mov
jl
stos
daa
mov
xorb
fbld
xor
sbb
repz
jb
repnz
dec
mov
aad
rclb
adc
mov
mov
cltd
stos
sti
mov
and
xor
repnz
mov
mov
stc
arpl
test
dec
mov
xchg
and
es
mov
xor
and
or
xor
lcall
ficomps
mov
lods
inc
inc
notl
fmull
insl
inc
jnp
test
rclb
leave
xchg
sub
and
push
jle
mov
mov
or
incl
cmp
orl
add
test
aad
or
popa
jo
fsubl
sub
cmc
jmp
mov
test
fdivrp
cmp
cmc
sub
add
rorl
dec
imul
push
cmpsl
pop
mov
insb
fadds
insb
sbb
ja
push
or
into
mov
aas
shlb
or
xor
push
subb
jg
popa
movsl
xor
outsb
pushaw
sbb
sub
hlt
cmp
add
mov
mov
mov
push
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
mov
add
mov
scas
xchg
fbld
ss
push
mov
dec
movsl
cli
add
sub
lods
push
cwtl
pop
ds
mov
pop
mov
sub
dec
out
lahf
jge
push
push
js
lods
pop
fdivrl
xchg
or
in
test
sub
xor
cmp
pop
mov
mov
or
mov
or
lcall
sub
jns
les
push
movsl
test
lea
outsb
push
jb
xchg
pop
pop
mov
imul
cmpsb
pop
sti
arpl
add
icebp
mov
aam
xor
mov
mov
sub
cmp
inc
or
sbb
xor
cmp
jmp
test
ljmp
sbb
test
arpl
iret
lret
fadd
add
gs
adc
or
frstor
outsl
mov
xorl
xchg
pushf
out
mov
jecxz
mov
orb
jno
bnd
sub
mov
mov
sbb
xchg
mov
movsb
and
rol
jne
inc
lods
repz
leave
leave
test
aad
jl
mov
sahf
insl
ss
lret
js
or
cmc
jne
mov
pop
or
mov
in
movl
cmpsb
lcall
mov
cmp
and
es
sbb
das
jmp
and
sarl
nop
cmp
out
sbb
imul
inc
sub
cmpsb
jo
cmc
xor
mov
push
lret
add
lret
cld
leave
adc
mov
xchg
push
pop
fsincos
mov
inc
out
lods
orl
jmp
rep
or
mov
mov
cld
xchg
and
mov
or
mov
jp
xchg
adc
sub
inc
in
xor
enter
pusha
add
dec
mov
mov
loopne
mov
jae
js
jl
or
into
sub
jbe
or
je
pop
lock
mov
mov
into
add
int3
addb
sbb
jl
arpl
fsubr
loopne
adc
cmpsl
aad
push
xor
subl
and
mov
add
inc
fildll
jnp
and
add
fwait
andb
or
scas
push
loop
sahf
imul
into
xchg
shlb
dec
sti
shlb
mov
iret
jmp
push
and
sbb
lret
scas
es
movsb
stos
or
add
out
or
xor
popf
out
or
adc
pop
nop
cmp
test
mov
sbb
ljmp
orl
mov
test
lea
adc
imulb
inc
jnp
mov
mov
push
lea
lds
test
pusha
inc
ja
mov
add
mov
mov
test
nop
data16
and
jo
xchg
sub
and
dec
in
aas
xchg
cmp
dec
mov
jmp
xchg
aam
outsl
lock
dec
xchg
mov
inc
popf
ds
add
into
jl
or
jno
cmpb
inc
inc
inc
pop
xor
dec
fisttpl
ret
rcrb
push
sub
out
stos
mov
sbb
mov
scas
arpl
fistl
jno
jecxz
mov
mov
jo
gs
mov
dec
mov
push
mov
jle
pop
scas
pusha
add
ffreep
adc
aam
in
in
add
jno
sahf
sbb
pop
mov
sti
inc
jnp
mov
lret
lea
stos
nop
arpl
neg
inc
cmovb
dec
mov
lods
rol
mov
mov
leave
sub
jb
push
or
lods
xchg
and
enter
sub
mov
xor
cmp
sahf
scas
push
stc
mov
rorb
mov
data16
or
inc
shll
or
mov
mov
mov
inc
popa
adc
sbb
mov
dec
lock
or
pop
stos
inc
push
mov
popa
mov
dec
aad
les
mov
insl
rcrl
movsb
aam
sbb
mov
popf
pop
mov
fildll
jmp
adc
clc
jmp
jmp
mov
daa
clc
sbb
dec
sub
insb
push
int3
fcmovbe
add
jbe
addr16
pop
fdivl
ja
xchg
jg
cmp
int
out
pop
and
add
mov
aam
jle
call
nop
push
sarb
and
xor
dec
icebp
and
dec
add
test
clc
rcll
daa
test
push
in
sbb
lsl
xchg
adc
lods
push
in
les
mov
pop
je
sbb
js
loopne
mov
push
cmp
bnd
inc
cltd
inc
push
adc
and
xchg
cmp
jb
mov
jne
ja
ret
push
lret
ljmp
add
movl
test
mov
or
test
imulb
pushf
out
shl
rorl
fwait
lretw
mov
mov
test
ss
inc
jg
and
push
imul
xchg
stos
sbb
out
mov
mov
rolb
and
sbb
mov
add
mov
and
sbb
int
and
test
xchg
fs
xor
mov
dec
lret
dec
mov
icebp
pushf
test
call
test
adc
hlt
subl
decb
sbb
add
lret
mov
push
addr16
aas
inc
repnz
into
adc
das
pusha
cmp
stc
adc
sbb
insl
aam
xor
mov
pop
test
mov
loope
adc
mov
add
or
push
mov
jl
or
sbb
cmpsb
mov
pusha
or
lcall
adc
dec
cmpsb
and
jb
inc
out
lret
xchg
cwtl
jg
cmp
jg
aad
mov
dec
mov
sbb
iret
pop
inc
mov
leave
stos
lfs
cmp
repnz
fistpll
aas
cmc
int
xor
scas
out
jne
mov
sub
js
adc
outsb
fcmovu
mov
add
pop
add
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
xchg
add
mov
mov
mov
mov
mov
mov
shlb
mov
js
notb
lret
fsubr
sub
xor
in
hlt
pop
lahf
mov
push
add
icebp
add
pusha
shll
repz
data16
inc
push
test
xchg
and
sbbb
jbe
xorl
into
mov
lahf
cmpsl
cltd
movsb
mov
pushf
fs
cmpsb
int
das
cmpsl
jnp
les
out
or
mov
xor
int
test
in
stos
fistps
push
cmp
push
jmp
aam
push
ds
movsl
es
inc
ja
add
sub
pop
outsb
mov
hlt
stos
mov
lcall
aad
sbb
outsb
daa
or
pop
push
sbb
lea
mov
pop
js
mov
fwait
push
adc
push
popa
stc
js
mov
in
mov
incb
cltd
push
shl
dec
sub
inc
test
adc
rclb
xchg
insl
dec
inc
cmp
push
cmp
push
mov
sbb
add
jo
scas
mov
adc
and
xchg
pop
movsb
cmp
or
push
out
mov
mov
out
or
inc
in
hlt
adc
shll
cmp
cmpl
jmp
arpl
shr
stc
cs
imul
mov
mov
dec
icebp
es
in
pop
add
mov
inc
pop
aad
mov
adc
mov
pop
leave
sub
shl
or
cmp
jge
inc
mov
test
pop
orl
push
dec
out
xchg
xor
cli
push
jmp
cli
dec
notl
adc
sbb
subb
xor
xchg
push
aas
mov
dec
fnstenv
mov
dec
mov
jmp
in
iret
les
icebp
cmpsl
jge
in
jbe
push
mov
or
jge
sub
adc
pop
jp
push
ret
sahf
inc
mov
and
subb
jae
jecxz
push
cli
outsb
fs
loopne
or
and
dec
ja
fists
cmp
cli
in
jnp
lahf
mov
push
cltd
lret
pop
or
inc
jnp
sub
aaa
fidivs
mov
sub
jno
push
xchg
push
lret
xchg
ret
mov
negb
push
add
aam
dec
mov
cmp
add
je
pop
xor
and
inc
pop
or
add
cmp
xor
fcmovb
sbb
lock
jmp
arpl
dec
pop
lret
xor
cmp
push
outsl
mov
push
push
adc
jb
mov
mov
ret
mov
mov
test
scas
xor
test
xchg
add
inc
das
aad
lds
lcall
dec
fildl
ret
xchg
stc
cmp
in
lret
fwait
mov
pop
scas
mov
cmc
add
mov
pop
cmp
mov
pop
mov
pop
stc
adc
cmp
mov
lret
adcl
cmp
mov
and
mov
lods
push
rorb
dec
je
pop
xchg
mov
mov
mov
push
fisubrs
mov
aad
mov
mov
sbb
jmp
rclb
ss
sub
jnp
sar
sub
fdiv
pusha
rcr
push
jns
mov
add
inc
pop
push
scas
cmc
pop
xor
js
lods
nop
lcall
jne
lods
dec
clc
inc
fsubrs
pop
scas
add
push
jbe
cmp
out
gs
jecxz
js
xchg
push
adc
in
cli
addr16
inc
ret
leave
insl
cmp
daa
fs
mov
cmp
scas
in
sbb
push
hlt
lcall
lret
sub
aam
in
cmpsl
clc
mov
cmp
jecxz
jle
mov
jo
lock
push
jnp
in
fwait
iret
es
clc
psadbw
jae
inc
mov
cmp
aaa
push
int3
xchg
jge
mov
mov
scas
xor
fs
fistps
mov
mov
mov
sbb
adc
cmp
popf
mov
testl
lahf
pop
dec
xlat
or
mov
mov
or
jg
lock
sbb
cmp
mull
xor
cwtl
or
mov
push
fwait
fwait
lds
xchg
mov
add
push
fidivrs
dec
inc
loope
enter
leave
mov
stos
inc
inc
stos
mov
xor
mov
lds
and
sub
jp
xchg
jbe
adc
dec
pushf
push
jmp
mov
fmull
addl
jg
and
pop
push
jg,pn
ror
scas
fistps
push
outsl
push
mov
or
aas
adc
push
push
ficomps
lock
xchg
pop
es
push
pusha
movsb
cltd
shlb
add
dec
stos
sub
ficoml
inc
shl
lods
add
dec
inc
xor
dec
and
test
inc
fmuls
xor
dec
sub
push
out
lock
je
dec
push
push
call
inc
adc
imul
dec
aaa
loope
mov
lret
cmp
ja
fucomi
fs
dec
fbstp
inc
cwtl
iret
pusha
outsl
int3
lea
cmp
std
sahf
adc
sbb
imul
mov
lods
cmpsb
dec
xor
mov
scas
or
and
cmp
mov
push
push
dec
xor
std
insl
dec
cmp
sub
mov
inc
and
pop
ljmp
xor
adc
mov
dec
ret
mov
fiaddl
mov
dec
stos
cmp
pop
lods
pop
mov
pop
mov
fwait
arpl
dec
repz
popf
and
pop
xor
push
fcoml
push
xchg
lcall
dec
iret
jmp
loope
repz
loop
pop
jl
mov
icebp
fistl
pop
hlt
xchg
in
xor
push
shll
xor
pop
fldenv
test
hlt
popf
xor
jae
sahf
xor
loopne
movsl
sbbb
lock
gs
arpl
aad
movb
and
pop
insb
das
push
fnstcw
movsb
or
push
mov
push
cmpsb
and
and
add
sbb
mov
xor
mov
push
xchg
fldenv
jae
popa
pop
lcall
pop
ret
dec
aam
xchg
in
out
pop
frstpm(287
aam
add
and
out
repz
scas
cmpsb
testb
push
sahf
pop
test
out
or
adc
sbb
push
pop
add
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
xor
add
add
out
mov
fnstenv
push
dec
fcmovnb
dec
and
loope
idivb
lcall
aad
pusha
cld
nop
cmp
testb
je
push
lahf
lds
leave
adc
push
xchg
fcmovnu
add
jns
sub
stos
pop
mov
aaa
dec
xor
cmp
movsl
mov
add
test
or
add
lret
ret
xor
dec
fdivs
test
testb
and
cs
ljmp
shll
or
insb
push
xchg
mov
xor
mov
sbb
xchg
push
dec
ffreep
sbb
inc
or
sub
pop
popa
cmpsl
jge
lods
or
push
cltd
call
popf
mov
sub
mov
pop
add
mov
dec
sub
insl
rorb
test
in
pop
dec
ret
lahf
dec
test
add
sahf
int
mov
pop
test
mov
sbb
dec
lods
pop
fwait
mov
add
xchg
mov
dec
mov
xor
or
dec
add
add
outsl
test
add
test
stc
aas
add
lahf
push
and
sbb
aam
push
repz
in
add
outsb
test
int3
xchg
addr16
add
sbb
in
push
js
lret
xor
push
mov
dec
push
scas
in
mov
aad
push
mov
dec
xchg
jns
lods
lea
int3
mov
mov
push
out
jb
cmpsl
daa
lock
xchg
add
cli
jmp
mov
mov
adc
xorps
test
add
iret
and
push
xchg
mov
hlt
outsb
cs
lcall
mov
and
lods
mov
subl
insl
sub
fidivrs
movsl
push
mov
data16
push
and
out
xchg
mov
es
subb
out
data16
repnz
ja
aaa
stos
sbb
aaa
loopne
in
jae
mov
mov
push
mov
in
add
add
sbb
stos
mov
mov
adc
fcompl
iret
scas
shrb
xchg
or
push
imul
sub
ret
hlt
in
lret
test
arpl
jg
cltd
xor
add
lods
sbb
lahf
push
fbld
out
jecxz
in
mov
popa
push
xor
push
jle
cmpsb
pop
add
into
ret
adc
lahf
push
loopne
cmpsl
fnsave
shrb
in
insl
jmp
fs
lcall
call
es
insl
test
shr
jns
and
mov
inc
outsb
loope
mov
mov
mov
mov
mov
rclb
outsb
incl
shrb
hlt
xchg
inc
sub
pop
xchg
sub
push
imul
arpl
sahf
test
ror
pop
pop
adc
pushf
in
cmp
pushf
and
aam
arpl
sahf
or
mov
sub
xor
test
scas
fwait
inc
insl
jnp
inc
nop
movsb
js
mov
cmp
mov
out
xchg
subb
add
lcall
mov
push
loopne
and
mov
es
imul
fs
inc
adc
pop
pop
movsl
repz
setb
pop
and
leave
jp
pop
xor
mov
dec
insb
movsl
cwtl
gs
push
sbb
xchg
addr16
in
shll
aas
stos
mov
ja
inc
and
xor
arpl
xchg
shrb
push
inc
cmc
xchg
lret
rol
pushf
inc
insl
int3
xchg
je
jmp
mov
ret
lock
les
in
pop
mov
xor
loopne
push
ret
in
sti
ds
loope
jp
or
add
jge
and
dec
push
sbb
sti
lahf
add
inc
sbb
mov
les
xchg
ljmp
sub
sbb
pop
pop
mov
call
lods
ljmp
rcl
stc
in
and
mov
in
pop
inc
loop
xor
jae
and
hlt
xchg
sbb
xor
push
rorb
rcrb
mov
mov
jl
das
push
xor
push
cwtl
mov
inc
pop
js
mov
fisttpl
mov
push
dec
sub
xchg
out
les
xchg
adc
xor
loopne
das
lds
leave
dec
lcall
sbb
lds
lods
test
and
in
ret
ja
add
je
les
movsl
or
fbstp
pop
int3
xor
mov
in
sub
rclb
add
rcr
xor
insb
sub
sarl
stos
xchg
je
push
nop
jb
dec
pop
sub
or
or
bound
mov
mov
scas
ret
fwait
sub
shrl
lret
xor
gs
lds
adc
push
in
daa
mov
jbe
push
clc
sub
bound
jns
loope
pmullw
inc
sbb
jle
adc
add
mov
clc
adcl
mov
cmpsb
push
adcl
xor
loop
sbb
idivb
call
jnp
jmp
xor
jne
fwait
js
daa
or
loope
sahf
sub
rclb
cmp
pop
int
repz
sbbl
out
pop
repnz
pusha
jb
pop
dec
push
pop
jecxz
and
mov
roll
jno
xchg
add
xor
stos
ds
popf
lock
addb
push
cmp
mov
xchg
enter
fisubrs
cs
mov
dec
insl
test
nop
xor
xchg
sub
mov
aam
fistpll
popa
sbb
push
sub
inc
je
jne
and
cmp
push
jg
addl
xor
xchg
xchg
adc
lea
popf
mov
sub
sbb
mov
jecxz
xlat
cmp
cmp
sub
decb
or
bound
call
adcl
movsb
cwtl
jg
mov
das
call
mov
mov
mov
hlt
mov
std
out
mov
movsl
popf
out
addl
mov
cmp
jecxz
or
dec
adc
xor
xor
shrb
inc
cmpsb
ret
inc
insl
adc
je
out
loop
gs
cmp
mov
mov
fstps
sub
nop
dec
push
stos
and
outsl
enter
xchg
call
add
jge
imul
xor
ds
out
leave
sbb
add
xor
mov
xor
mov
push
push
push
push
call
push
push
jmp
add
lds
inc
inc
inc
mov
add
fs
mov
push
rorb
fs
aam
push
sub
add
shll
mov
mov
xor
ret
add
in
jae
adc
dec
sub
jb
cmpsb
sub
mov
mov
imul
pop
sarl
and
jl
cmpsb
jbe
imul
lds
dec
push
jp
fs
inc
xor
mov
push
jae,pt
cmpsb
aas
mov
test
int
xchg
sbb
dec
and
daa
pop
mov
sub
popa
or
push
and
inc
cs
mov
mov
in
mov
test
mov
dec
push
push
push
adc
dec
xlat
sarl
mov
add
mov
nop
stos
xchg
scas
jns
xchg
loop
cwtl
clc
push
in
fistpl
or
push
bound
mov
fwait
add
lret
arpl
ss
mov
fwait
rcll
xchg
or
mov
dec
jle
in
fwait
aam
add
sub
add
inc
mov
addr16
pushf
fidivs
jno
push
cmp
out
ja
je
cmp
outsb
and
jle
mov
mov
xchg
lret
cwtl
push
and
adc
js
push
push
repnz
mov
add
icebp
push
pushf
repz
or
adc
rolb
dec
xchg
aas
add
add
dec
hlt
adc
jae
add
hlt
pop
pushf
outsb
jo
ss
xchg
ficomps
int
out
lock
and
icebp
cvtps2pi
hlt
push
mov
stc
gs
mov
in
xlat
and
and
call
fwait
push
sbbb
filds
cwtl
add
and
mov
pop
icebp
test
sarl
fadds
xchg
xchg
sub
inc
mov
cltd
adc
xchg
jb
popf
je
rcll
inc
lock
and
repnz
mov
inc
lret
add
js
into
lea
push
pop
movzwl
lcall
movsl
mov
xor
or
and
mov
sti
mov
test
jmp
imul
ret
out
push
pop
jb
sub
sbb
mov
fs
loope
sbb
mov
inc
insl
jl
scas
inc
movsl
popa
dec
movsb
cmpsb
push
repz
mov
adc
push
ljmp
movsl
mov
or
ret
aas
ret
leave
cmc
mov
ret
leave
adc
popa
idiv
mov
xor
or
shll
cmpsl
cmp
pushf
cmp
add
sub
xchg
cmp
mov
dec
cs
dec
lcall
fmul
mov
sub
sarl
je
adc
sbb
out
sub
push
sbb
pop
in
sbb
sub
into
in
push
or
mov
dec
mov
mov
idivl
aas
stos
leave
stos
and
cmp
and
xor
nop
ret
lock
xchg
mov
mov
fwait
mov
or
sub
fwait
scas
shll
test
xor
les
push
pushf
mov
jno
dec
xor
xchg
pushf
sub
in
mov
ret
rcrb
dec
les
mov
pop
out
cld
outsl
cmp
cmp
jo
ret
stos
rcll
inc
cmp
ret
mov
jp
adc
jmp
pop
js
add
sub
sbb
outsl
pop
xor
sarb
imul
std
pop
cmp
jmp
mov
imul
sub
jg
popl
daa
jae
jmp
add
xor
lahf
test
sub
subl
pop
fwait
push
push
fwait
aaa
pop
outsb
jp
and
or
repz
sbb
add
decb
add
mov
imul
test
ja
outsb
js
mov
and
xor
push
test
sahf
out
mov
pop
es
je
adc
mov
lock
outsb
lock
lret
rolb
aam
pop
gs
xchg
xchg
mov
dec
clc
aaa
loopne
mov
lcall
inc
sbb
into
adc
adc
sbb
mov
push
enter
cmpsb
mov
lcall
xchg
add
pop
insl
test
cltd
iret
or
enter
shlb
stos
popf
mov
mov
sbb
test
enter
repz
xchg
mov
mov
xor
cmp
lea
pop
std
repz
mov
popa
in
sub
lods
xchg
sbb
cmp
mov
dec
lret
dec
pop
xchg
add
xor
adc
adc
sub
fdivrl
push
icebp
xchg
mov
sbb
push
repnz
sbb
fs
xchg
hlt
add
es
js
ss
out
mov
sahf
fsts
scas
out
jle
sub
dec
push
inc
inc
push
push
xor
outsl
insl
cld
cmp
mov
push
or
addr16
push
sub
movsb
cmc
sub
mov
mov
je
adc
sahf
loope
adc
cmp
add
fwait
imul
adc
xor
ljmp
arpl
cmp
jecxz
jno
f2xm1
or
cmc
mov
sub
fistpl
outsl
notl
mov
nop
iret
cltd
or
fwait
push
and
pop
jecxz
imulb
xchg
je
das
fdivl
inc
outsl
xchg
iret
add
incb
stos
dec
aas
xchg
adc
push
mov
push
jbe
testb
push
cmpsb
xor
sub
mov
ret
mov
cmp
jecxz
adc
mov
pop
xor
pushf
les
sbb
jle
ss
hlt
test
imul
or
test
pop
add
fsts
rcrl
xchg
mov
out
pop
addl
das
sub
sub
cmc
lods
xchg
stos
aaa
clc
in
jecxz
or
out
pop
xchg
data16
xchg
xlat
fsubrl
addr16
loop
outsb
pshufw
rcr
adc
add
xchg
fdivr
pop
or
movsb
mov
fisubs
dec
cmp
test
fs
cmp
ljmp
pusha
cmp
rorb
dec
mov
push
lods
mov
prefetcht2
dec
out
inc
mov
fmull
mov
pop
cwtl
inc
xchg
scas
es
or
xor
rorb
clc
xor
adc
pop
or
push
lods
loope
push
stos
push
dec
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
cmovl
push
xor
imul
fisubrs
loope
stos
and
jno
pop
fcompl
sbb
xor
popf
fcoml
aas
and
pop
adc
or
adc
mov
or
jp
test
int
add
test
push
cmpsl
xchg
insl
arpl
outsb
rcll
and
sub
jb
and
inc
mov
mov
inc
sbb
mov
jbe
push
imul
or
add
aas
sub
mov
into
add
and
imul
add
push
imul
popa
xor
add
pop
mov
cwtl
push
mov
xchg
and
subb
pop
pop
dec
aaa
scas
pushf
inc
xchg
lods
and
shl
fs
stc
aad
cmp
lock
add
sti
orl
or
add
test
jns
int3
pop
loope
mov
xor
les
es
sahf
fbstp
pop
pusha
cmp
jl
gs
out
or
add
push
jb
cmc
cmp
test
fmuls
in
mov
jae
cmc
lret
xor
adc
adc
inc
repnz
dec
in
inc
sbb
ja
pop
xor
jb
lret
lock
pop
ss
push
lret
shr
jp
push
nop
jnp
dec
xchg
pop
ss
push
pop
ds
fidivrs
xchg
push
dec
xchg
cmc
adc
pop
das
mov
ficompl
sub
pop
int
inc
rcl
jo
xlat
popa
xor
ret
lock
repnz
fdivrs
ss
mov
nop
pop
bnd
movsl
mov
mov
lcall
adc
dec
in
sbbl
mov
data16
mov
or
ss
orb
aam
pop
lret
inc
fildll
loopne
xor
dec
adc
aam
and
xorl
call
mov
cmp
jg
pusha
stc
xorl
test
roll
jbe
loop
fiadds
xchg
and
test
push
cmp
sub
mov
repz
ret
pop
push
loop
insl
movl
dec
add
mov
ljmp
xor
push
scas
lcall
enter
dec
xchg
pushf
xor
nop
icebp
orl
sub
sbb
mov
dec
adcl
mov
aaa
test
lcall
push
js
xchg
ss
cmp
lds
pop
jb
leave
inc
inc
fnstenv
xchg
pop
pusha
adc
mov
mov
ds
jl
insl
imul
mov
fbstp
mov
pop
jnp
lcall
shlb
adc
xchg
or
cmp
pop
shll
sbb
call
xor
xor
jb
fcoms
lods
ja
push
xor
jecxz
loop
scas
clc
inc
inc
jl
xchg
ret
xchg
fcomi
push
xchg
mov
mov
push
inc
mov
lahf
push
out
add
fndisi(8087
dec
lea
pop
ja
or
mov
dec
ljmp
lock
sbb
mov
icebp
xchg
fwait
outsl
mov
jb
lahf
shr
add
pop
pushf
xchg
lods
out
push
jp
and
data16
mov
scas
add
faddl
dec
sbb
fdivl
jecxz
out
xchg
push
mov
mov
xchg
das
lods
enter
cmp
pop
out
mov
rcll
lods
insb
fwait
scas
xor
insb
bound
icebp
xor
sti
stos
sbb
jnp
scas
or
mov
mov
pop
lret
jecxz
pop
divb
xchg
and
pop
cli
cmpsl
enter
jbe
pop
sub
mov
pusha
jbe
test
rclb
xchg
jp
in
jnp
pop
dec
js
cmp
test
xchg
sbb
mov
aad
aas
push
test
jmp
mov
sbb
inc
in
inc
sub
stc
in
cmpsb
mov
stos
popf
das
imul
aam
fwait
jns
jmp
jns
repnz
ret
mov
aam
adc
jnp
das
cwtl
xchg
cmp
adc
mov
es
mov
test
mov
mov
mov
inc
cltd
cmc
push
je
aas
mov
inc
fwait
jbe
lock
add
cli
mov
xchg
outsl
sbb
xchg
ret
mov
inc
inc
dec
std
xchg
adc
mov
or
ret
aas
rolb
jmp
add
jns
stos
mov
push
inc
in
cmpsb
lock
add
mov
jg
cmp
pushf
push
sub
mov
adc
sub
sub
iret
xchg
mov
jnp
aaa
loopne
add
cwtl
shll
inc
ss
push
mov
bound
dec
cmp
popa
xchg
popf
aam
xor
add
aad
and
mov
mov
outsl
push
fdivl
scas
out
loope
inc
lahf
xchg
push
xor
mov
jp
jnp
in
pop
cld
repnz
cmp
adc
in
sahf
loopne
testl
test
lret
push
lret
mov
hlt
jecxz
mov
sub
adc
test
mov
mov
inc
stc
fsubp
hlt
pop
loopne
pop
xor
dec
cmpb
push
push
test
mov
add
mov
or
fsubrp
pop
mov
sub
cld
mov
jne
dec
mov
sub
push
rcll
insl
xor
inc
add
hlt
sub
cmp
dec
add
mov
or
aad
lds
xchg
ja
lret
rorb
lret
jne
add
dec
ss
xchg
in
rol
adc
sbb
in
test
inc
in
movb
movb
cmpl
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
ret
dec
push
mov
or
insl
cmpsb
dec
sbb
and
cmp
inc
out
lods
lds
hlt
xor
mov
sbb
movsl
in
xor
xor
and
jmp
imul
popf
cmp
fcoms
mov
fildll
mov
mull
bound
lods
mov
pop
add
in
fdivl
popf
aaa
stc
popa
lds
leave
pop
adc
inc
adc
sbb
fwait
test
sub
sub
adc
mov
xchg
sbb
fs
arpl
add
xchg
leave
mov
pushf
sub
jecxz
out
js
in
sbb
pusha
add
or
aaa
imul
mov
jmp
xor
addr16
xor
dec
push
mov
adc
mov
ja
loop
sbb
add
jg
mov
adc
inc
fnsave
insb
dec
in
lods
bound
lcall
test
dec
dec
das
movsl
fsubl
xchg
hlt
movsl
jge
mov
xor
rcll
pop
dec
mov
out
std
xor
mov
sub
xchg
popf
hlt
pop
add
imul
xchg
ja
mov
ret
mov
dec
outsb
inc
add
sarl
fsubr
or
lods
mov
dec
leave
icebp
push
jl
sti
cmp
jmp
xor
roll
and
add
shrl
jle
xchg
popa
pop
xor
scas
pop
or
cs
xor
xor
xor
jnp
and
cmp
jecxz
sub
add
data16
jnp
in
adc
out
and
cwtl
xchg
and
ds
sarl
dec
mov
jnp
sbb
dec
inc
ret
iret
and
stc
ret
adc
add
loop
repnz
xchg
divb
xchg
adc
fbstp
shl
imul
test
enter
rolb
out
xlat
jb
pop
push
jp
mov
jno
jne
pop
or
in
add
mov
pop
stc
add
and
aam
das
and
jbe
insl
test
cmpsl
add
push
not
jno
js
pop
aam
xchg
xchg
outsb
mov
in
std
cmp
iret
cli
movsb
daa
mull
inc
dec
ss
fwait
in
jg
out
sbb
inc
addl
sub
cld
fistpl
jmpw
cwtl
imul
das
fnstsw
ljmp
insl
out
sahf
mov
sub
sarb
adc
mov
dec
ret
out
hlt
xchg
xchg
adcb
or
shlb
sub
aas
dec
jnp
dec
dec
adc
inc
dec
jle
cmpsl
rcrb
gs
xchg
and
jo
sbb
sbb
movsb
lea
in
xlat
xor
imul
pop
repz
dec
aad
push
xchg
into
xchg
insb
sti
jmp
add
adcl
ret
lret
cmc
push
xchg
aad
fwait
jae
add
insb
mov
nop
test
movsl
xchg
rcl
das
in
rcr
scas
scas
pop
jmp
fdivrp
pop
pop
sub
ret
fdivl
xchg
cmpsb
pop
sbb
in
add
mulb
aam
sub
jo
jmp
loopne
imul
mov
xchg
add
movsb
stc
or
repz
cmpl
sub
jne
data16
jmp
sbb
movsl
dec
lods
mov
jno
dec
mov
or
adc
fwait
in
orb
adc
dec
lret
icebp
xchg
lahf
xchg
scas
add
clc
jg
movsb
mov
scas
nop
mov
rcr
adc
xor
mov
lcall
inc
pop
and
mov
mov
loope
int3
in
jo
xchg
or
scas
cmp
orl
sub
pusha
cmp
int3
loop
aas
sub
and
or
or
mov
cli
rorl
lods
sbb
push
sub
xchg
ss
jbe
repnz
sbb
insl
mov
fidivrl
loop
and
cld
scas
push
negl
bound
push
in
movsb
push
lds
jns
push
xchg
test
lret
pop
int3
je
out
in
test
adc
pop
fists
mov
clc
stc
add
sub
mov
sub
int
add
and
cmp
push
mov
dec
insb
cmp
pop
push
fnstenv
sahf
add
xchg
pop
and
jmp
push
xor
call
push
or
arpl
jno
fs
push
mov
pushf
jae
push
mov
stos
sti
addr16
lret
xchg
cmp
xor
xchg
addr16
fidivs
mov
fs
out
push
push
je
mov
jb
inc
mov
inc
shl
and
push
push
loope
arpl
div
pop
cmp
sbb
imul
stc
aad
ja
xchg
std
sarl
cltd
mov
aas
idivl
jg
cmp
mov
scas
aas
ljmp
inc
xchg
je
mov
add
imul
insb
popa
xchg
mov
int
mov
pusha
ret
mov
inc
lahf
fs
popa
in
je
imul
imul
fdivr
into
les
xor
pop
lcall
imul
sub
add
mov
add
in
lock
arpl
int3
xor
cltd
mov
enter
cmp
add
inc
pusha
mov
mov
lcall
xchg
lods
inc
out
outsb
popf
jbe
lret
adc
adc
pop
lods
jb
fmuls
int3
inc
xchg
mull
fwait
cmp
add
int3
ret
inc
stos
enter
setge
std
xor
sub
mov
add
call
adc
rol
test
xchg
sub
daa
and
mov
inc
pop
ret
sub
arpl
or
xchg
mov
lea
add
jmp
add
aaa
inc
inc
add
roll
movsb
pop
add
mov
subl
and
movl
jmp
mov
hlt
add
sbb
pusha
push
mov
invd
add
prefetchwt1
gs
xlat
pop
pop
cmp
sbb
out
inc
in
roll
ja
mov
dec
push
inc
nop
jne
sti
dec
mov
or
dec
out
adc
mov
popa
cmp
shl
adc
sbb
cmp
fwait
inc
ret
mov
inc
lret
jns
and
sbb
and
or
cmc
mov
test
inc
imul
mov
wrmsr
pmaxsw
out
xchg
fs
push
pop
movl
xchg
lahf
push
add
pop
loopne
enter
cmp
add
ret
jmp
repz
lcall
adc
and
mov
pushf
addb
int
je
pop
cmp
int3
cmpsl
inc
mov
rcrb
and
subl
cmpsl
in
lret
incb
push
sub
mov
rorb
xchg
or
jns
outsb
das
pushf
lcall
and
movsb
div
sbb
push
ror
cld
sub
xor
jnp
pop
outsb
sbb
sbb
jb
ds
loope
loop
out
enter
aaa
jge
inc
lock
jp
flds
iret
fnsave
jle
mov
and
rcrl
shl
mov
or
sbb
lds
mov
clc
bound
add
mov
test
xor
or
cmc
scas
loopne
fucom
fsubr
scas
ret
adc
dec
fwait
inc
loopne
xor
mov
push
or
sbb
mov
and
aam
fstps
pop
xchg
test
xchg
ja
push
testb
outsb
dec
setns
out
shlb
mov
cmp
jae
sbb
les
ret
imull
add
dec
fisubs
clc
pop
dec
popa
mov
fildl
xchg
mov
mov
in
gs
push
sub
movsl
scas
dec
xor
push
xor
mov
or
and
lock
popa
mov
or
xor
je
mov
adc
shrb
add
out
or
pop
movsl
cmp
mov
push
mov
cmp
fbstp
or
jo
in
mov
mov
cmp
testb
xor
push
jno
push
int3
aam
aad
adc
loop
adc
loopne
fld1
mov
sub
icebp
jbe
aas
mov
popl
loop
xor
jbe
lahf
sub
and
cli
loopne
mov
fistpl
dec
ret
aas
push
js
test
cmp
ljmp
pop
leave
push
mov
std
sub
cmp
jmp
ret
add
in
pushf
nop
mov
push
cltd
addr16
jo
push
jg
adc
test
shl
inc
xor
data16
rorb
loop
int
mov
pop
or
cltd
sbbb
dec
or
cli
cmpsb
pop
pop
cmp
in
push
aaa
mov
roll
add
jno
jle
out
and
lahf
lock
dec
pop
addr16
cmp
and
out
mov
idivl
mov
movsl
push
cmp
xor
mov
jmp
jns
shll
push
loope
gs
add
enter
push
jno
inc
fidivrl
mov
out
ret
mov
xchg
out
xor
popf
inc
mov
loop
lods
das
sbb
hlt
xchg
sbb
and
cmpsb
sub
ja
lea
mov
and
loop
clc
push
cmpsl
ja
ljmp
or
sbb
ja
les
ja
sub
test
add
jno,pt
push
jl
sub
aam
xor
sbb
mov
iret
inc
call
adc
ja
push
faddl
nop
inc
cltd
push
mov
outsb
adc
push
arpl
cld
jo
cs
fcoml
lea
pop
cmp
xchg
cmp
inc
leave
jnp
jb
sbbb
cmp
orb
push
lret
sub
into
test
cwtl
adc
dec
inc
push
adcb
jns
fcmovne
add
negb
or
pusha
jp
xchg
jecxz
mov
pop
add
inc
cmp
cwtl
imul
mov
out
sub
mov
sti
outsb
adc
xor
sti
or
imul
in
mov
loop
pusha
push
mov
mov
sub
fs
jecxz
jno
sub
and
sub
daa
mov
mov
hlt
rol
pop
cmp
adc
jbe
adc
mov
mov
sbb
xchg
icebp
iret
push
leave
xor
xor
mov
mov
popf
xchg
sti
imul
in
pop
or
and
negl
cmp
xchg
into
sti
dec
cmp
stos
push
scas
cli
jb
out
rcll
cmc
add
jo
insl
sahf
out
mov
mov
aaa
fidivs
dec
clc
inc
jo
sub
fs
loop
cld
lods
cli
cmp
iret
out
imul
cmp
lods
loope
sbb
stc
mov
pushf
repnz
sub
pop
push
mov
or
mov
jmp
mov
shlb
sbb
add
push
cmpsl
movsl
add
insb
mov
loopne
push
jmp
xor
fcmovnbe
mov
scas
inc
rorl
sbb
ja
inc
stc
or
cmp
jbe
pop
sbb
popf
jmp
shll
push
aam
xchg
add
mov
mov
movsb
ja
ret
stos
insl
lret
scas
cmp
in
rolb
decl
push
ljmp
sub
add
jno
push
dec
sub
fldcw
pop
mov
hlt
push
mov
jns
sbb
aaa
outsb
cmp
mov
cs
cmpsb
scas
mov
pushf
adc
shll
ljmp
sub
mov
lock
jo
pop
mov
cmp
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
setb
mov
and
outsl
sub
fsubs
stc
xor
jl
xchg
stos
lods
and
ja
sbb
fs
add
fnstcw
scas
jle
xlat
mov
mov
inc
jecxz
add
scas
test
pop
cmpl
xchg
lea
jle
inc
stos
pop
xchg
inc
pop
mov
and
add
mov
push
sub
pop
xlat
test
imul
cs
ds
sbb
jb
cmp
mov
scas
xor
adc
or
out
dec
addb
dec
ja
adcb
dec
insb
lret
sbb
add
jns
imul
fildll
in
pop
xor
out
fimuls
push
leave
andb
nop
aaa
fs
sub
int
mov
xchg
arpl
lea
bound
neg
pop
into
or
mov
fldl
mov
sbb
and
stc
int
movl
adc
js
or
push
loop
or
xor
push
rorl
gs
in
bnd
cwtl
loopne
push
lea
lahf
sar
lahf
ja
and
xacquire
aas
aas
ljmp
and
xchg
xchg
lcall
cltd
jg
out
lret
cli
jno
sahf
decl
sub
paddsb
into
jo
cli
cltd
inc
xchg
cmp
pushf
dec
js
mov
add
cmp
shrb
xor
and
adc
fiadds
push
test
cmp
iret
sub
jno
arpl
in
cmp
or
xlat
aaa
dec
xchg
rcr
clc
pop
dec
mov
xchg
mov
fwait
or
dec
dec
aas
clc
pop
mov
sbb
xchg
sub
adc
lea
sbb
dec
aas
cmpsb
lods
lods
sbb
insl
add
push
pop
rol
adc
push
jle
add
shll
imul
jb
mov
ds
cmpsl
mov
push
mov
lahf
imul
xchg
mov
lret
ds
jg
loope
stc
mov
lds
dec
pop
in
jmp
iret
dec
push
data16
mov
lods
inc
pusha
cwtl
mov
cmp
cmp
cltd
jmp
inc
sub
lods
into
xor
push
push
test
nop
add
out
lods
cmp
cmpsl
mov
dec
aam
nop
mov
cmp
shr
movsl
xchg
xchg
out
lods
pushf
lret
jle
xor
push
inc
subb
jge
stos
adc
mov
adc
mov
or
daa
xchg
mov
lods
repnz
ret
pop
sbb
movsl
jns
insb
mov
and
jge
fnstcw
xchg
sub
andl
and
xchg
iret
xor
or
ss
sti
xchg
jo
cmp
fstpl
add
rolb
fld
test
jmp
dec
and
mov
jmp
or
cmpsb
clc
shlb
cmp
adc
mov
lea
cltd
sub
jle
test
and
cmpsl
and
cs
imul
mov
outsl
jno
jecxz
xchg
push
cs
insb
sub
mov
insl
mov
cmp
imul
jb
daa
das
test
jns
fmuls
ret
mov
loop
pop
xchg
jbe
sbb
lcall
sahf
or
div
inc
sub
fiaddl
fldcw
aaa
pop
nop
jnp
pop
cmp
pop
fwait
jl
aad
cld
push
inc
mov
mov
shl
fistps
scas
test
sub
in
pop
in
jmp
ret
pop
mov
aad
add
sub
lods
xor
push
mov
pop
popf
sbb
loope
add
xor
in
push
mov
sbb
dec
mov
push
pop
dec
mov
bnd
xchg
sub
mov
stc
subl
push
andl
jno
shll
mov
leave
sar
test
sub
pop
pop
or
xorb
mov
mov
add
mov
cltd
mov
test
popf
insb
inc
bound
and
inc
sar
in
test
push
pop
pop
rol
mov
and
andb
and
jmp
jne
addr16
imul
dec
cmp
or
add
pop
movsb
push
mov
mov
nop
ret
jp
or
pop
ret
je
mov
sbb
cmc
xchg
call
mov
enter
loope
loopne
cmc
mov
cmova
iret
cli
pop
cmp
jp
stc
adc
push
cmpl
mov
js
pop
mov
outsl
pop
mov
push
cmpsl
testb
enter
mov
int3
ret
in
scas
rcr
fsub
ret
and
fbstp
push
dec
mov
sub
push
jl
popa
sub
xor
and
xchg
out
xchg
cmpb
inc
ret
adc
mov
mov
notl
shrl
fbld
lods
fstps
iret
xchg
punpcklwd
into
andl
ljmp
dec
pop
lcall
push
pop
bound
lock
adc
push
xchg
cmpsl
pop
jo
pop
xchg
fsubr
out
mov
xchg
cmc
sbb
pop
aam
push
pop
das
in
sub
mov
call
in
push
mov
push
lret
in
std
push
adc
pusha
dec
push
inc
js
sbb
outsb
pushf
push
push
mov
fistpll
push
stos
mov
sub
jle
hlt
jns
adcb
fimuls
jmp
mov
call
adc
sahf
fwait
xchg
shlb
fwait
or
enter
add
stos
aaa
push
pop
add
adc
fstpt
and
xchg
sbb
mov
adc
add
fldenv
pusha
dec
movb
cmpl
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
test
faddp
cwtl
test
jbe
xor
fidivrl
push
dec
loop
mov
clc
rclb
or
arpl
out
dec
xchg
stos
fisttpl
hlt
fwait
pop
mov
cmp
pushf
inc
es
mov
mov
arpl
pop
jmp
mov
stos
in
and
pop
popf
scas
push
test
imul
addl
push
jp
pop
movsl
out
fwait
mov
outsl
mov
ror
jle
pop
mov
out
out
sub
dec
sbb
stos
fdivl
inc
ja
lods
or
subl
adc
int
pop
ret
mov
sbb
les
stos
sub
push
ret
mov
sbb
aaa
repz
xlat
sbb
sbb
enter
addl
pusha
test
ror
xor
or
subb
fstpl
lahf
pop
ficompl
inc
push
pusha
sbb
cld
out
mov
es
lds
mov
dec
sub
fucomi
lret
addr16
push
leave
jl
push
add
insb
mov
fwait
stos
mov
adc
pop
paddq
fcomp
jge
ljmp
stc
out
push
pop
divl
lahf
aaa
leave
jl
xchg
cli
add
aad
stc
inc
mov
orb
push
scas
arpl
dec
pop
fnstenv
cmpsb
lfs
sbb
les
sub
out
pusha
fs
repz
daa
inc
nop
and
ljmp
in
repnz
jp
mov
cmc
mov
mov
push
inc
outsl
mov
aad
mov
mov
cld
repnz
sbb
ss
push
sub
imul
aas
add
push
jo
fisubl
sbb
jmp
mov
adc
fstl
and
sbb
mov
mov
fs
cli
mov
outsb
adcl
push
mov
dec
push
scas
aad
xor
arpl
aas
out
push
push
lods
and
inc
fbstp
fcmovnbe
outsl
shll
fstpl
int3
outsb
lods
add
add
aaa
shll
or
and
fisttpll
and
les
out
lds
std
lods
push
inc
inc
cli
pop
testl
fwait
push
xlat
and
jg
ret
add
mov
sahf
ljmp
cld
lods
es
cmpsb
mov
or
sub
movsb
jp
xchg
test
push
mov
fdivs
jnp
fst
xor
mov
cld
mov
aad
mov
int3
decl
aam
jae
and
mov
dec
pushf
imul
loope
jbe
je
outsl
addl
into
jp
insl
enter
stos
movsb
shlb
jae
movsl
xor
movl
enter
jnp
pop
adc
stos
xchg
mov
mov
aaa
jmp
push
push
push
jg
fwait
jg
lods
data16
xor
inc
and
mov
pop
rolb
jns
stc
or
adc
inc
in
popa
mov
dec
sbb
lock
pop
das
lds
sbb
leave
ror
lods
inc
pop
daa
add
sbb
iret
sbb
lahf
jo
fucompp
mov
or
lods
and
or
cmpsb
adc
mov
fwait
cmp
fcomip
je
jae
cmc
xchg
dec
add
dec
lahf
mov
sbbl
sbb
jp
sbb
jecxz
jecxz
xor
adcb
js
sub
fcmovb
cvtps2pd
fistpl
xor
lret
test
fsts
aaa
jmp
daa
xor
mull
sbb
pop
aad
or
into
fistpl
arpl
jno
mov
mov
mov
or
in
mov
stos
mov
and
stos
mov
or
xor
push
sarl
push
sbbb
imul
jae
lock
stc
or
push
mov
loop
xor
mov
imull
mov
cwtl
inc
sub
xchg
lods
push
shlb
cmp
inc
int
pop
repz
jno
dec
pop
into
jno
popf
jge
cmpsb
mov
mov
mov
jnp
push
xor
fwait
pop
pop
jne
xlat
push
jbe
sub
cmpsb
jo
sbb
stos
rcl
mov
popa
cmp
or
jae
xorl
cmpsb
lret
push
mov
dec
inc
std
dec
sub
push
pop
cli
add
sbb
inc
pop
jne
sbb
xchg
push
ret
push
jle
ret
flds
xchg
adc
loope
andb
int
in
fndisi(8087
mov
loope
sub
cmc
stos
adc
dec
les
mov
inc
dec
adc
sbb
cwtl
push
ds
add
dec
sbb
sbb
fucom
jne
push
pop
xchg
scas
movsb
pop
shll
push
mov
aaa
fdivp
ljmp
xchg
cmp
das
mull
pop
jle
fidivs
in
ret
cmc
out
adc
sub
rcr
call
xchg
sbb
or
decb
adc
fwait
inc
xlat
in
adc
mov
add
flds
sbb
les
sbb
andb
ret
jo
dec
outsb
and
cmp
out
cmpsl
or
lods
shll
pushf
addr16
lahf
xchg
shlb
push
push
xor
nop
fstp
iret
mov
stc
das
push
xor
cltd
and
fisttpl
add
out
imul
push
ja
sahf
mov
inc
out
ds
shl
movsb
shrl
aas
cmp
and
mov
mov
iret
cmpsb
jae
xchg
xchg
pushf
xor
xchg
dec
adc
stos
loope
fstpl
imulb
cmp
out
jb
aam
xor
les
mov
pop
idiv
jmp
mov
xchg
mov
daa
fmuls
popf
invd
add
femms
inc
imul
lods
aas
das
cmpsb
cmp
cmp
sub
enter
outsl
xor
xlat
adc
dec
add
in
add
loopne
dec
jo
inc
inc
adc
and
sub
lea
ljmp
jnp
cmp
cmc
inc
mov
jecxz
inc
jnp
loopne
mov
fnstenv
sub
mov
repnz
in
pop
in
pop
lds
xlat
arpl
mov
inc
clc
pop
push
mov
dec
xor
cmc
out
cmp
adc
rdmsr
cs
fimuls
lcall
cmp
push
popa
adc
nop
cltd
dec
ds
jg
std
cmp
in
lock
sbb
mov
loop
enter
arpl
in
into
xor
mov
xor
dec
aad
pop
imul
pop
stc
lret
bound
adc
iret
pop
fwait
adc
sarl
fs
adc
mov
aad
andnps
adc
sbb
lahf
adc
adc
pop
cwtl
rorl
cmp
dec
dec
pop
push
or
out
into
mov
sbb
rcrl
mov
and
adc
vmread
arpl
sub
mov
cmp
cmp
movsl
push
dec
inc
mov
mov
mov
sbb
xchg
call
push
fdivrl
daa
out
xor
leave
js
leave
fucomip
push
ja
dec
cltd
ss
jno
push
fsubs
adc
jno
jne
pop
or
mov
mov
iret
adc
xchg
test
sbb
pop
cmp
pop
sub
arpl
pop
mov
jl
mov
jne
ss
xor
cld
push
fnstsw
inc
roll
pop
cmp
nop
into
popl
stc
in
mov
mov
mov
sbb
mov
sbb
ljmp
in
jmp
xchg
scas
fstps
popa
in
cmp
adc
xchg
jg
add
out
push
mov
stos
inc
loope
pop
push
jmp
or
dec
popf
std
test
out
cld
cmp
mov
inc
fldenv
xor
sub
addr16
cmc
lods
ret
xchg
adc
fstps
mov
sub
dec
fwait
push
push
add
lea
xchg
mov
icebp
aam
inc
sub
sbb
mov
mov
xchg
repz
lret
sub
sub
dec
inc
aaa
or
mov
push
and
dec
mov
pop
addr16
lcall
mov
jno
mov
adc
stc
dec
xor
push
mov
imul
scas
cmp
cmp
sbb
adc
int3
adc
or
inc
out
scas
fdivrs
pop
cmp
aad
fwait
mov
divl
add
insb
mov
mov
lods
jecxz
out
in
jmp
rcr
push
hlt
sbb
push
inc
cmp
and
adc
and
mov
scas
xchg
pushf
xchg
pop
out
clc
lods
mov
or
xor
cwtl
lahf
push
mov
ficomps
std
xor
repnz
filds
xchg
push
xlat
inc
pop
add
dec
int
inc
jns
mov
xor
jbe
outsb
mov
subl
pop
lock
movsb
daa
sub
add
cmpsb
clc
int
sahf
mov
mov
jg
push
jl
mov
addr16
enter
les
adc
mov
mov
cmpb
mov
in
punpckhwd
inc
or
xchg
jmp
cmp
mov
fs
push
mov
mov
movl
xor
rorb
subl
div
imul
test
call
push
xlat
cmp
and
lcall
push
jo
cltd
fs
mov
push
push
jp
enter
imul
stc
jae
cmpsl
jg
cmp
cmpl
in
mov
clc
out
xor
xor
fsts
jbe
outsl
cli
inc
lea
add
insb
push
push
pop
in
cwtl
and
outsl
stc
out
test
call
add
dec
jno
cmp
dec
xlat
adc
test
cld
lock
ds
fimuls
mov
scas
in
sub
cmp
pop
out
and
mov
aad
das
cld
inc
dec
cmp
std
hlt
icebp
pop
mov
cmp
and
xchg
cmp
in
add
inc
loopne
mov
sarl
ljmp
inc
les
xchg
push
or
xchg
mov
mov
sbb
lock
inc
mov
cmp
inc
push
sub
mov
movsb
loopne
iret
ficoml
mov
inc
mov
rcrl
sbbl
add
mov
jmp
fidivl
ja
and
scas
ret
cmpl
and
pop
ret
dec
xchg
scas
sub
test
aam
cmpsl
lds
add
lahf
pop
jns
sub
iret
or
dec
test
fldenv
movsb
sub
data16
ret
popf
lea
sbb
fwait
push
lods
inc
movsb
add
xchg
cmp
pop
shll
jp,pt
std
xchg
mov
mov
pop
in
sti
and
stos
mov
leave
sub
push
stos
mov
adc
pop
xchg
cli
hlt
lods
push
sahf
sub
scas
std
inc
mov
dec
mov
cmpsl
mov
jg
movsl
xchg
cmp
mov
inc
pop
pop
mov
insl
adc
mov
nop
pop
jnp
pusha
and
mov
pop
push
gs
lock
lret
cltd
dec
out
pop
idivl
xor
jmp
loope
lods
push
ss
gs
jge
adc
in
test
cmpsl
push
mov
idivl
aam
mov
movb
movb
mov
andl
jmp
dec
mov
aaa
es
mov
push
test
invd
add
sysret
mov
mov
nop
test
xor
std
pop
sub
stos
jecxz
xor
ret
in
out
cmpsb
pop
push
adcl
imul
insb
mov
dec
pop
movsb
stc
xchg
dec
xor
mov
add
popf
andb
mov
dec
pusha
sub
jmp
fwait
jnp
icebp
pushf
add
jnp
cwtl
imulb
adc
ljmp
push
insl
xchg
test
inc
inc
lods
bound
jge
dec
sub
jae
sub
and
add
mov
and
daa
iret
repnz
jb
std
dec
pop
adc
sub
xchg
jl
lahf
mov
mov
inc
xchg
sub
in
pop
shl
mov
ds
push
loopne
jecxz
pushf
nop
popf
sbb
mov
inc
je
mov
and
mov
std
push
mov
lret
push
decl
inc
lea
jb
hlt
xlat
sti
dec
jge
push
or
pop
ret
xchg
movsb
repz
mov
mov
or
sub
jo
imul
imul
lods
inc
jae
outsl
cmc
xchg
outsl
and
movsb
repnz
lahf
xchg
outsb
push
dec
dec
imul
sub
dec
lods
and
inc
lahf
dec
mov
call
add
sbb
adc
inc
gs
inc
sub
xchg
lods
aas
cmpsl
cltd
push
sub
jecxz
or
cltd
xor
pushf
and
into
push
test
pop
mov
jmp
rorl
mov
xchg
imul
out
inc
and
jne
outsl
xchg
lea
in
jbe
insl
cmpsb
insl
pop
inc
shl
movl
psubusb
adc
scas
in
clc
cmp
xor
cmp
jecxz
lock
ret
mov
aas
cld
mov
bound
sahf
jmp
xor
and
pop
push
cli
sub
dec
gs
daa
js
jbe
or
add
mov
int3
xchg
xlat
gs
call
cwtl
jge
or
or
jge
pop
in
popf
popf
data16
loope
mov
ljmp
sbb
out
imull
cmp
cmpsl
sti
test
sbb
lea
out
mov
push
gs
xor
movsb
lret
ret
ret
pop
sub
jge
lods
test
data16
add
pop
mov
adc
lds
push
pushf
dec
xor
test
mov
sbbl
sub
bound
sub
pop
sbb
mov
test
je
inc
shll
adc
sub
icebp
ja
repz
std
je
jg
mov
mov
nop
dec
inc
outsl
out
jno
addr16
test
mov
mov
mov
lret
rcr
or
ficomps
jmp
add
stc
aam
and
in
cmp
push
mov
push
mov
ficomps
inc
cmpsb
std
pop
rcrl
aas
jge
clc
leave
lds
enter
stc
fidivrs
dec
iret
push
xor
push
stos
daa
imul
add
sub
xor
lock
pop
jns
dec
dec
push
mov
pop
mov
lea
inc
js
dec
sub
cmp
lods
fistps
jge
or
arpl
faddl
fwait
ja
cwtl
cmp
mov
data16
adc
xchg
pop
gs
pop
pop
sbb
xor
mov
pop
dec
cmp
andl
mov
je
push
inc
push
and
test
std
mov
shr
dec
ds
insl
inc
inc
pop
imul
push
and
movsl
pop
decl
repnz
mov
cltd
es
fucom
dec
push
loope
sub
dec
add
sbb
das
cld
loop
orb
pushf
fdivrs
pusha
shlb
ss
subl
add
test
pop
insb
js
inc
mov
pop
aad
inc
mov
mov
mov
add
xchg
mov
out
lcall
jmp
aam
inc
or
repz
mov
cmpsl
inc
adc
add
in
jg
cmp
xlat
push
imulb
cmp
adc
pop
pop
orl
js
jmp
add
imul
ror
mov
sbb
mov
out
stos
cmpps
cmp
js
dec
shr
adc
push
sub
xchg
mov
pop
mov
push
jnp
cmpsb
flds
xchg
mov
mov
std
js
add
dec
scas
xor
lret
imul
loope
dec
push
shr
xchg
icebp
jno
sub
jo
cmp
mov
leave
shl
xchg
lret
aas
push
jbe,pt
outsb
ljmp
fs
push
lahf
push
fcomps
shlb
out
out
pop
lea
fnstsw
dec
addr16
sbb
mov
popa
inc
jecxz
inc
jl
rep
dec
subl
repz
gs
pop
outsl
dec
imul
and
inc
popa
cmpsb
cmp
push
push
movsl
lcall
leave
and
mov
mov
push
aam
shlb
add
pop
and
test
jnp
xor
sub
pop
filds
mov
int
out
data16
in
or
lods
or
pushl
dec
pop
test
jne
fistpll
cld
add
xorl
out
xchg
push
mov
pop
jno
mov
ret
adc
movsb
dec
lret
arpl
cmp
movsb
and
xchg
mov
sub
push
sub
jg
ja
lret
cmp
fidivrs
dec
std
mov
jbe
stc
mov
mov
outsl
aam
and
jp
mov
test
jl
push
fwait
mov
mov
mov
cmpsb
fwait
or
int
xorb
mov
sbb
pushf
insl
pop
push
sbb
xchg
add
xor
mov
orl
jmp
insb
lods
push
repz
je
xor
or
add
invd
add
setb
pop
push
cs
std
movsb
call
xlat
aas
pop
mov
fsubrs
out
in
lods
mov
sahf
mov
sbb
cmp
adc
jmp
arpl
mov
ljmp
aam
sbb
mov
dec
int
jae
mov
add
sub
aas
lahf
das
mov
xchg
out
fs
ljmp
push
das
aaa
std
and
mov
cli
xor
fs
push
mov
jnp
out
push
push
icebp
sbb
aam
lcall
stc
int
jns
fwait
xchg
add
adc
stos
or
mov
orb
fmuls
xor
dec
cmp
xor
inc
pop
fdivl
xor
js
or
dec
jae
stc
and
sub
repnz
inc
je
scas
mov
cmp
lret
jno
pop
mov
add
xchg
and
jnp
lea
leave
or
cli
xchg
mov
lcall
jnp
pushf
popf
jge
pop
cltd
loop
inc
inc
fs
sbb
jg
hlt
push
jne
stc
leave
sub
pusha
sahf
lret
mov
dec
and
insb
mov
and
cmp
mov
fmul
testb
mov
in
popf
dec
dec
call
icebp
cltd
inc
push
mov
lods
lret
inc
fsubl
pop
addl
in
movsl
cmc
sbb
mov
cmc
adc
imul
push
jbe
xchg
sub
mov
jl
sub
fdivl
movsb
outsl
ror
inc
push
push
cmp
fsubrs
jge
sahf
pop
push
jo
adc
pop
mov
adc
rolb
lods
dec
mov
mov
sbb
cmpl
insb
pushf
and
mov
jns
loopne
jae
adc
std
xchg
adc
jnp
fstpt
cltd
loopne
int3
and
mov
push
ja
jmp
lahf
and
pop
or
pop
enter
movsl
inc
es
mov
push
fisttpll
fs
sub
loop
in
addr16
xchg
aas
out
cmp
or
dec
frstor
jp
dec
mov
adc
sahf
cmp
adc
pop
iret
and
and
jnp
inc
jg
jg
jl
and
gs
int
negl
jno
mov
mov
clc
loopne
dec
adc
cmp
daa
adc
mov
int
sub
inc
fs
push
or
fsubrl
pop
rcl
mov
cmpsb
dec
pop
rcrl
sub
jl
out
movsl
pop
jl
stos
inc
andl
idiv
mull
js
sbb
pop
adc
fs
mov
pushf
test
out
jno
add
mov
popfw
jp
test
ja
stc
and
daa
lahf
pop
outsb
aas
lcall
mov
popf
lcall
jne
mulb
incb
adc
mov
dec
ja
xor
adc
lret
jns
insb
ss
mov
and
inc
xchg
imul
ljmp
imul
lahf
leave
add
sbb
inc
inc
dec
jb
fs
adc
lcall
mov
cmp
xor
ljmp
mov
push
ja
mov
ss
pop
repnz
das
pusha
add
adc
rolb
out
jbe
jo
popa
sub
push
push
sbb
lret
cmp
popf
or
into
cmpsb
dec
in
pop
push
adc
fbstp
rol
int
shl
insl
lods
ja
xor
scas
mov
and
cmp
add
or
or
pop
pop
sbb
movsl
cmp
mov
pop
int
aaa
repz
mov
mov
mov
pop
out
lock
popa
adc
fadd
lods
dec
in
mov
jle
in
cmp
and
mov
int
push
or
push
jge
fdivrs
or
sub
arpl
mov
or
pop
jae
mov
adc
sub
and
cwtl
xlat
mov
mov
je
imul
inc
push
aam
mov
shl
ja
add
ja
xchg
aad
aas
rcrb
fdivs
pop
data16
add
jg
js
hlt
add
mov
cli
test
xor
fsubrs
jb
jecxz
mov
pop
clc
xchg
subb
mov
xchg
mov
adc
addl
pusha
mov
test
add
cwtl
or
adc
and
mov
sahf
mov
pusha
cmp
stc
fcoms
in
out
cmp
sar
jb
push
jle
add
out
arpl
xor
jle
pushf
aad
mov
hlt
mov
lahf
push
mov
inc
mov
mov
dec
pop
push
inc
mov
and
cwtl
adc
jge
sbb
mov
adc
push
shlb
fstpl
fidivrs
mov
test
xlat
dec
imulb
push
fsubs
loopne
jmp
sti
scas
inc
inc
sub
mov
mov
mov
loopne
pop
cltd
sbb
fs
sbb
rorb
enter
sahf
xlat
out
cltd
mov
lods
scas
dec
add
cmp
mov
imul
aad
push
xor
pop
aam
sub
cwtl
dec
dec
push
insl
push
sti
cmp
push
popf
jne
rorl
mov
sbb
add
repnz
push
add
jmp
push
pop
and
pop
test
sbb
lea
sbbl
mov
pushf
and
jmp
ss
imul
lds
mov
add
pop
test
sub
or
xorl
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
lock
test
invd
add
psubsb
lcall
outsl
pop
cltd
jne
sub
mov
cmpsl
out
jl
popf
lds
les
rorb
into
lods
or
inc
mov
pop
cmc
sti
mov
lret
mov
aam
jns
in
inc
or
jmp
sub
mov
mov
rcrl
in
jg
mov
enter
inc
shl
dec
mov
jg
or
mov
pop
aam
sub
inc
sbb
push
pop
hlt
mov
jmp
jl
pop
dec
dec
pop
js
mov
cld
fisubl
in
sarl
jg
jmp
push
movsl
movsb
leave
movsb
jo
mov
dec
rcll
jns
ja
data16
popl
aad
aam
push
sbbl
mov
in
mov
ljmp
add
lods
sbb
stc
ja
sub
jns
lods
or
mov
xchg
mov
xchg
mov
sahf
call
filds
leave
push
dec
xchg
iret
push
jae
cmpsl
jns
adc
mov
popa
pop
pop
or
popl
testl
mov
xchg
xor
mov
mov
and
jmp
fs
push
es
add
dec
lods
xor
or
xchg
cmp
iret
mov
xor
mov
pop
adc
mov
or
mov
jno
das
test
adc
mov
and
push
cld
hlt
xor
call
cli
mov
fcmovu
push
adc
stos
repnz
or
loopne
std
sarl
and
or
and
and
lret
and
repnz
lods
xchg
lock
inc
mov
rcll
sarb
push
pop
adcl
addr16
pop
jecxz
loope
rol
jo
dec
sub
repnz
jnp
lahf
das
std
mov
adc
imul
mov
and
ja
hlt
cli
add
loop
gs
idiv
inc
sub
mov
loopne
adc
daa
mov
icebp
ret
fldl
scas
mov
mov
pop
xor
roll
ret
lock
insl
add
lods
jecxz
jl
stos
mov
into
arpl
outsb
cmpsl
jne
fmull
in
mov
cmc
mov
loope
jb
out
leave
mov
cmpb
push
push
fstps
enter
int3
sbb
adc
xchg
xor
push
outsb
lea
cmpsl
adc
imulb
inc
mov
mov
sbb
fisttpl
jle
ljmp
inc
and
or
lds
mov
mov
stos
lods
sub
jmp
jecxz
inc
dec
iret
mov
ja
xlat
dec
mov
hlt
call
cmp
cmpsb
push
mov
push
cmpsb
xchg
dec
and
push
push
test
mov
xchg
ja
add
inc
sub
in
cmp
mov
mov
xor
call
ss
cld
pop
movsb
fcomip
add
enter
inc
push
and
cmpl
repz
icebp
scas
aas
xor
jb
jno
or
mov
sub
xlat
stos
mull
mov
jo
jmp
xor
adc
xchg
xchg
mov
cmp
clc
push
mov
cmp
dec
add
invd
or
cmp
and
mov
fstpt
adc
xchg
jns
dec
gs
mov
adc
jne
pop
das
and
jmp
pop
sbb
sub
out
ljmp
mov
subb
jo
data16
inc
push
insb
or
adc
fcmovu
gs
inc
sbb
cltd
xor
xchg
jne
xchg
mov
xchg
aaa
pavgb
and
pop
sub
xor
mov
pop
jge
shrl
jmp
xchg
adc
int
iret
push
and
aaa
sub
mov
ret
scas
cmp
es
xchg
mov
pushf
or
aam
arpl
inc
scas
in
sub
fisubl
aad
add
xlat
std
out
call
ret
dec
cmp
fdivs
mov
cmp
lea
xchg
and
cmp
mov
int3
out
bound
jmp
push
and
push
pop
jae
adc
mov
insl
xorb
test
sbb
adc
pop
lea
mov
mov
pop
das
adc
cmpsb
mov
jl
mov
jmp
out
pop
or
or
movsl
sbb
jp
sbb
stos
divl
ret
inc
sub
mov
inc
sub
or
dec
jno
loopne
testl
push
pop
inc
adc
ljmp
pop
mov
jl
es
jbe
in
xchg
dec
ljmp
mov
mov
adc
mov
mov
aas
mov
adc
adcb
jne
mov
sub
xor
loopne
lret
orb
and
xchg
jnp
nop
pop
xor
in
leave
iret
jbe
fmuls
push
in
insb
mov
dec
lcall
push
bound
xchg
imul
cmp
icebp
pop
ret
jl
shrb
movb
insb
rcl
mov
inc
xor
push
mov
inc
pushf
inc
or
lods
push
and
pop
scas
mov
mov
in
sti
test
and
addb
push
pusha
rcrl
lds
test
ret
test
adc
pop
or
sarl
orb
icebp
push
hlt
jle
xchg
cmp
into
or
push
rclb
adc
add
imul
cmc
subb
add
cmpsb
pop
xor
mov
mov
push
or
movsl
fmul
fsubp
adc
and
jae
lods
jae
xor
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
psubd
xor
pop
sub
jp
ret
call
mull
adc
inc
arpl
cltd
and
sti
repz
in
cmc
dec
mov
notb
pusha
out
add
repz
adcb
fwait
loope
test
adc
mov
mov
add
rclb
or
sub
andl
mov
ds
jle
pop
in
mov
mov
push
or
cmp
sbb
push
or
out
mov
mov
ss
test
in
add
sub
mov
pop
pop
daa
les
cltd
push
test
dec
push
jmp
pushf
push
jo
loope
jnp
dec
out
loope
pop
cltd
filds
cmp
movsl
imul
mov
fwait
mov
call
nop
cmp
cmc
jl
add
mov
and
lods
xorl
int3
mov
jno
add
mov
adc
mov
pop
cld
xor
imul
cmpsl
lret
add
fmull
int3
or
test
jmp
mov
and
das
cld
xchg
outsl
mov
adc
mov
pusha
or
pop
fcomps
cmp
rolb
xor
arpl
inc
bound
subb
movsb
mov
psubb
pop
cmpsl
sub
pop
sbb
fwait
mov
adcl
outsb
cmp
mov
mov
sub
ja
lahf
sbb
shl
jmp
push
inc
xor
pop
aas
loope
dec
ficompl
lret
fcomp
lods
adc
aad
pop
mov
sub
sub
pop
imul
push
stc
mov
sahf
jl
test
cmpsb
sti
adc
imul
mov
aas
jb
sub
lret
aas
sbb
push
lret
add
or
pop
stc
shll
mov
fmul
dec
xor
jecxz
ret
stos
sbbb
idiv
loopne
bound
aad
jl
fldt
dec
pusha
ds
push
fisttps
fcoml
dec
ffreep
sub
in
inc
xchg
mov
pusha
xchg
loopne
imul
jecxz
add
shll
jl
lock
in
arpl
lret
inc
nop
and
jg
or
sbb
std
scas
inc
rcrl
push
lds
icebp
int3
aas
inc
clc
sbb
jle
dec
shrl
aam
daa
push
hlt
stos
hlt
adc
pop
sbb
insb
sbb
or
or
add
jp
subl
sub
or
mov
ja
pop
xchg
stos
jb
ret
ret
mov
sub
inc
clc
push
adc
mov
nop
jno
push
out
xchg
out
dec
inc
xchg
pop
pop
inc
aad
test
pop
ss
jb
ret
pop
sbb
xchg
lock
adc
insb
insl
pushf
test
mov
pmaxub
rolb
sbb
fmuls
dec
dec
fstl
lahf
adc
jp
jnp
push
jo
inc
add
lds
movsb
sub
jb
lret
pop
sbbl
shrb
jae
pop
pop
jp
aas
or
lods
lahf
pop
mov
push
jmp
inc
pushl
iret
dec
adc
pushf
or
jae
call
fcmovnu
das
cwtl
jbe
mov
xor
test
lea
add
loope
stc
adc
jne
fstl
dec
stos
testl
cmpsl
pop
cmpb
jmp
pop
mov
adc
dec
cmp
mov
dec
xor
hlt
orl
out
out
enter
xchg
std
jmp
test
jae
mov
popa
shll
add
pop
push
mov
push
es
jb
aam
cs
and
in
pop
adc
rcrl
lock
inc
filds
iret
sub
popa
pop
imul
in
into
mov
or
xchg
adc
pop
cmp
pop
testl
adc
jo
jle
pop
lods
add
adc
bound
test
push
xchg
shll
lcall
sbb
fwait
lret
clc
imul
mov
xchg
xlat
mov
pop
or
adc
push
stos
cmpsb
inc
popa
jb
pop
ljmp
in
loopne
lahf
mov
xor
arpl
test
cmp
je
sbb
ds
mov
dec
and
cmp
sbb
sbb
mov
jb
js
adc
sahf
shlb
cwtl
loop
cmc
cmp
cmpsl
jno
data16
push
jmp
ss
ss
mov
mov
xor
xchg
rorb
xchg
cmp
addr16
jge
adc
pop
lea
mov
mov
jae
mov
stos
inc
inc
gs
and
fs
jbe
pusha
and
fiaddl
leave
scas
dec
or
mov
movsl
inc
outsb
js
adcl
inc
push
inc
addr16
jo
cmc
test
je
cmp
jnp
shl
mov
iret
push
bound
in
dec
add
jae
lcall
cmpb
cs
mov
out
daa
or
daa
xchg
xchg
shrb
rcll
pop
push
fistpll
and
push
pop
rolb
test
pop
fistl
mov
adc
push
push
and
out
sub
cwtl
adc
repz
add
cltd
pop
dec
jmp
mov
in
and
cmp
int
sbb
xor
lret
inc
ror
dec
add
sub
call
mov
mov
mov
push
xor
inc
outsb
jecxz
icebp
mov
lcall
xor
sub
pushf
push
add
test
mov
ja
jp
pop
and
lcall
call
jg
mov
xor
movsb
sub
xlat
cltd
mov
push
mov
push
hlt
int
lods
mov
inc
and
das
shll
xor
das
mov
or
loopne
jne
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
add
js
push
invd
add
subps
pushf
into
imul
mov
orl
mov
mov
sbb
add
mov
jl
mov
jecxz
idivl
pop
mov
testl
or
jbe
imul
xor
pop
cmp
cmpsl
mov
test
sub
adc
fistl
sti
in
mov
or
fldenv
fists
fldenv
popa
daa
jp
lock
subb
dec
jg
setp
xchg
cmc
pop
cmp
or
jle
in
jle
xchg
dec
and
loop
testb
fimuls
cltd
scas
jo
imul
inc
mov
xchg
test
cmc
xchg
cmp
dec
loope
pop
ret
into
adc
lock
je
dec
in
outsb
loop
arpl
sub
sub
xchg
stc
or
into
mov
mov
dec
test
ja
in
outsb
fsubrl
pop
cltd
sub
mov
das
lea
repnz
ljmp
sahf
in
jae
add
pop
mov
sub
cmp
mov
sahf
xchg
popf
jbe
sbb
imul
aas
xchg
mov
push
push
ret
jg
mov
lret
stos
jb
xor
pop
aaa
mov
cld
jae
dec
jmp
and
addr16
ljmp
mov
mov
push
jnp
adc
insb
mov
add
movsl
lret
or
lock
mov
mov
rorl
jno
jbe
mov
and
filds
test
push
inc
mov
in
outsb
pop
mov
jp
into
stc
xchg
and
pop
pop
iret
imul
fucomip
ficoml
call
push
mov
push
popf
movsl
repnz
test
mov
and
fistpl
xor
push
xor
ret
jnp
ror
sbb
das
in
dec
ret
jl
mov
sbb
mov
mov
insl
sbb
out
int
pop
mov
push
shlb
bound
divl
adc
xor
mov
cld
les
mov
roll
mov
clc
arpl
xchg
push
jp
aaa
movsb
shl
out
aad
add
jl
pushf
cli
lcall
bound
bound
add
fcoms
sub
jmp
loop
or
outsb
ljmp
sub
mov
push
loope
cli
out
mov
and
mov
cltd
lsl
xchg
cwtl
jp
sub
push
lock
pusha
popf
test
shrl
add
sbb
push
mov
sbb
sbb
movsl
xor
in
jmp
mov
add
mov
out
xchg
xor
adc
xor
orl
out
mov
xor
jae
lock
dec
scas
cli
push
into
pop
in
jno
pop
loopne
sbb
dec
insl
xchg
aad
adc
mov
test
pop
pop
mov
popa
sbb
fxch
xchg
lds
mov
jno
xor
lcall
std
adc
cmp
inc
adc
add
xor
sbb
or
sbb
out
xor
adc
mov
insb
bound
mov
cmp
repnz
xor
adc
mov
rol
dec
or
jp
jecxz
adc
lahf
sub
das
add
andl
mov
xchg
lds
adc
push
je
sbb
cs
orb
and
jmp
xor
mov
shlb
inc
test
sub
loopne
movl
mov
mov
mov
loopne
sub
inc
lret
icebp
mov
stc
adc
fbld
nop
mov
lcall
mov
push
sbb
mov
xor
inc
and
std
xorb
ss
xchg
lret
pop
fcompl
lret
in
mov
int
add
push
test
mov
in
out
mov
add
mov
xchg
mov
mov
and
mov
xor
int
fstpl
xchg
adc
and
icebp
cld
jns
mov
test
arpl
inc
pop
repnz
mov
frstor
stc
ret
mov
jg
jne
fildl
add
loopne
test
push
or
std
mov
rcll
and
mov
insl
int3
imul
daa
fnstcw
mov
or
lock
dec
imul
stc
pop
ret
xor
pop
mov
pop
or
outsl
fadds
add
xchg
push
mov
pop
sahf
repz
mov
pop
cs
pop
pop
inc
pushf
push
sbb
xchg
mov
pop
and
xlat
sarb
add
icebp
cli
outsb
or
inc
push
xorl
repnz
and
hlt
push
mov
mov
stos
mov
xchg
dec
out
dec
mov
repz
and
push
cmpsl
jnp
dec
movsl
xchg
mull
push
pop
aam
insb
cmp
jne
in
pop
pop
ja
xchg
mov
dec
dec
es
jp
test
xchg
les
dec
shrb
xchg
adc
jle
xchg
jge
cwtl
lock
das
fistpll
cld
pop
xchg
pop
aas
xor
out
lods
and
lods
orl
sbb
in
jp
cltd
push
sbb
pop
cld
jb
xchg
ja
jge
ficoms
inc
jb
or
cwtl
fistpll
jo
mov
std
xchg
sti
adcb
pop
fwait
pop
loop
pop
add
mov
fcompl
ja
or
popf
push
ljmp
lea
sbb
mov
fs
xor
inc
clc
clc
lea
or
in
or
mov
cmc
into
std
ret
idiv
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
movsb
xlat
push
invd
add
rdtsc
jle
cmp
mov
push
clc
out
and
out
mov
aas
cmp
adc
hlt
daa
popa
pop
outsl
aad
pusha
push
adc
jge
imul
inc
pusha
adc
divl
fistl
add
leave
and
jg
and
push
push
sub
mov
loope
dec
es
data16
jmp
sbb
clc
push
js
or
xor
push
outsl
jl
in
push
ret
sbb
and
idivl
sti
roll
into
leave
mov
lret
sti
gs
lcall
or
cltd
lea
stos
mov
insb
xchg
insb
add
and
add
mov
cmp
test
pop
idivb
inc
sahf
pusha
pushf
out
sub
mov
mov
mov
jp
mov
add
fsubrl
inc
mov
inc
jne
mov
subl
push
xor
insb
or
push
pop
scas
repnz
ds
xor
push
mov
addl
enter
dec
or
std
addl
pop
stos
int3
pop
rorb
cld
int3
dec
repz
sti
inc
stos
jo
in
xor
cmp
jge
loope
out
push
outsb
loope
lahf
jp
push
lock
shll
imul
dec
adcb
lods
sub
bound
or
ficoml
into
test
flds
daa
push
sub
cs
cli
mov
or
push
mov
mov
popl
or
lods
sub
jle
cmp
imul
iret
fdivrs
mov
push
aad
outsl
dec
cmp
xor
mov
out
pushf
shlb
and
int
push
pop
in
cwtl
sbb
out
dec
shl
repz
fldenv
mov
pushf
cld
dec
test
dec
test
cmc
lods
fcomps
in
outsb
fbstp
stos
mov
in
std
stos
jp
sub
or
adc
inc
lods
clc
rolb
imul
and
insb
add
pop
cvtpi2ps
mov
pop
xchg
adc
je
dec
cld
add
lcall
push
in
mov
test
test
pop
das
add
dec
out
or
mov
dec
xchg
dec
movsl
mov
adc
in
jnp
cmpsl
arpl
fcom
jbe
sub
fs
mov
inc
cltd
fnstcw
in
sti
cmp
mov
or
je
pop
gs
movl
psubq
xchg
pop
cs
enter
leave
push
imul
inc
cmp
dec
adc
jo
fimull
ficoml
pop
jmp
push
out
inc
ret
jnp
or
ret
daa
sub
lret
fwait
and
mov
movsl
aas
into
out
inc
ja
lds
arpl
or
data16
mov
mov
loopne
in
movsb
pop
sti
adc
add
cmp
pop
push
jg
jmp
push
or
cmp
mov
enter
popf
dec
cs
mov
cmp
in
aaa
mov
add
inc
adc
adc
pop
xor
or
out
sub
aas
adc
rclb
cmpsb
push
fs
sbb
add
pop
dec
pusha
xor
mov
sub
cli
inc
jo
or
popf
cld
mov
pop
aaa
jae
leave
lahf
inc
dec
add
cmp
cmp
div
stos
sahf
xchg
arpl
fists
jp
add
stos
popa
mov
fs
cmp
loop
add
jno
inc
out
fists
sub
ret
pushf
cmpsb
adc
loopne
xor
xchg
jmp
call
jmp
mov
xchg
pusha
sbb
mov
jge
cmpsl
daa
push
aas
or
or
mov
cld
cwtl
adc
xchg
cmpl
scas
or
xchg
jl
push
clc
inc
pop
xor
test
std
xor
rcl
xor
or
stos
gs
mov
outsl
xchg
test
std
hlt
xchg
pop
fisttpl
ljmp
mov
popl
cld
dec
test
test
int
adc
and
jb
mov
push
test
bound
fcomp
in
mov
sub
out
movsb
push
fstp
jmp
dec
and
dec
adc
jno
loopne
scas
iret
aaa
and
mov
dec
insb
jge
call
mov
jno
js
mov
mov
or
inc
pop
out
cld
lea
or
pop
push
adc
inc
xchg
iret
push
dec
pop
inc
push
imul
mov
xor
xchg
push
aas
push
fsubp
fwait
push
xor
jmp
sub
test
sbb
lcall
and
repz
shr
mov
scas
jecxz
pusha
daa
inc
movsl
js
push
cs
or
outsb
enter
mov
adc
test
cmp
fcomps
or
insb
movsb
pop
add
fcmovnu
mov
cmp
inc
shlb
inc
mov
scas
shlb
inc
dec
inc
adc
pop
arpl
in
adc
dec
loop
mov
ljmp
cltd
jp
inc
jnp
push
stos
pop
pop
andl
push
fwait
adcb
enter
xchg
jmp
hlt
cwtl
jo
jo
leave
fdivrs
cmpsl
test
push
pop
shl
ja
push
test
push
mov
dec
aam
adc
int3
jns
hlt
insl
and
xchg
jmp
mov
outsl
popf
xchg
inc
and
jl
pop
sub
stos
inc
jg
loop
push
jle
mov
push
xchg
inc
icebp
mov
cld
cmpb
sahf
lret
cltd
sub
add
sub
into
aam
lcall
mov
leave
pop
adc
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
comiss
inc
std
and
lea
sbb
adc
dec
lcall
cmp
test
outsb
sahf
sub
out
jns
out
or
xlat
subb
dec
xchg
push
stos
out
popa
mov
leave
mov
clc
push
std
mov
dec
or
test
mov
add
inc
jle
xor
inc
lret
push
jle
popf
movl
dec
cmp
adc
push
shll
out
sub
sbb
pop
mov
sub
xor
outsl
dec
sub
fwait
cmp
ljmp
adc
loop
in
jmp
mov
sarl
std
ret
lret
dec
fldt
popa
pop
xor
xor
stc
jae
ds
sub
data16
mov
sbb
lret
cmp
dec
push
mov
lcall
not
pop
pop
fisubrs
or
loop
xor
mov
into
imul
rcll
imul
xchg
cli
mov
jb
push
hlt
sub
std
cmp
insl
test
loop
mov
xor
jecxz
scas
push
push
mov
pop
inc
jecxz
fcompl
dec
fdivs
insl
xor
xchg
mov
fucomi
sbb
pop
scas
adc
push
xor
popa
mov
ss
dec
mov
test
adc
and
sub
sbb
sbb
push
test
mov
sub
aaa
push
mov
stos
test
add
xor
mov
fistps
ss
in
sarb
cmp
inc
mov
ficoml
fisttpll
or
push
cmp
pop
in
ss
pop
sbb
rcrl
xor
xor
dec
cltd
fildll
fbld
mov
mov
pop
fmuls
fdiv
jge
cmp
ds
fsts
aad
das
mov
aas
and
lahf
adc
aam
dec
add
call
push
aaa
jl
sar
sub
stc
add
dec
cmp
scas
aaa
pop
scas
addr16
adc
add
mov
loopne
sbb
sub
or
in
xor
test
mov
pop
mov
push
or
sbb
add
jmp
or
mov
mov
lds
fnstsw
sahf
js
wrmsr
nop
aam
sub
fnstenv
push
add
jo
jg
mov
xor
test
cmp
mov
repz
and
push
stos
out
ret
roll
loop
adc
hlt
jg
cmc
fs
in
fwait
inc
repz
pop
hlt
inc
sub
sbb
or
outsl
ljmp
testb
fisubs
pop
rcrb
ss
pop
sub
sbb
div
lahf
negb
inc
ljmp
xor
test
popa
adc
insb
out
mov
test
test
test
jg
cmp
cmp
stos
movsl
and
cmp
mov
inc
lods
xor
sbb
adc
sbb
sbb
aas
add
je
data16
ds
pop
into
jp
xchg
cmpsl
pop
xchg
jne
aam
or
out
inc
mov
cmp
cmp
sub
rorb
inc
xchg
push
xor
cmc
push
xor
mov
and
xor
bound
mov
add
sbb
divb
adc
or
dec
adc
punpcklbw
inc
cmp
roll
out
imul
dec
shrl
lcall
leave
jne
fsubrs
push
pop
sarb
into
dec
fmuls
sub
dec
dec
loopne
repz
pushw
loope
sbbb
inc
pop
out
nop
cltd
popf
pop
imul
imul
inc
sub
icebp
inc
jno
jp
test
jl
movsb
push
pop
clc
xchg
push
and
idivb
sub
test
aad
pop
pop
xchg
sbb
fidivrl
push
jp
inc
push
pop
mov
xor
xchg
sarl
jbe
sub
push
call
cmp
jo
pop
rcll
cmp
dec
cmc
lock
mov
les
sarb
scas
out
mov
sbb
in
dec
popf
and
hlt
push
or
sbb
sbb
movsl
jbe
jo
aam
add
movsl
insb
repnz
mov
xor
sbb
in
cmp
fildll
pop
jne
inc
out
jns
adc
sti
mov
inc
pop
adc
dec
imul
add
sub
sbb
cli
or
or
xor
stos
dec
xor
mov
fdivrs
ja
in
cli
out
orl
mov
or
xor
mov
push
pusha
into
sbb
mov
out
lea
mov
mov
or
je
cmp
ret
sbb
ror
push
dec
mov
pop
sbb
adc
aaa
call
bound
fnstsw
xchg
std
not
clc
push
jp
dec
in
jecxz
inc
xor
test
divb
or
inc
popa
fs
mov
enter
lahf
jbe
shl
fmulp
addl
push
push
add
out
rcll
div
shlb
out
jbe
pop
inc
rcrb
loop
xchg
push
jecxz
inc
pop
fstp
push
lock
and
sub
shl
sub
inc
mov
ds
dec
roll
das
leave
mov
mov
sbb
pop
pop
jns
jmp
stos
cltd
dec
mov
pop
mov
push
xchg
test
push
mov
adc
pop
fwait
mov
fildll
cltd
mov
mov
xor
cmpsl
dec
xchg
fs
inc
inc
popa
xchg
rcrl
push
push
sub
inc
psubusw
fimull
push
in
rol
loope
jmp
push
mov
cli
sbb
fnstenv
dec
xchg
js
inc
invd
add
setle
jg
cmpl
fimuls
jne
in
jmp
push
jmp
int
rclb
add
inc
dec
pop
sub
fs
insl
and
je
push
adc
mov
cli
push
mov
scas
dec
addr16
cmp
icebp
aad
lret
cwtl
lds
inc
das
mov
stc
imulb
imul
sbb
enter
mov
fsubrl
and
jns
jne
pop
imul
dec
outsl
mov
fwait
pop
cmp
popf
cltd
testb
dec
movsl
movl
dec
push
push
pop
cmp
push
and
and
out
mov
dec
xlat
enter
rcl
pushf
mov
ds
inc
cwtl
mov
popa
mov
test
push
and
xchg
int
mov
inc
xlat
daa
mov
inc
mov
pop
lock
xor
rolb
adc
nop
rclb
lret
push
mov
insb
dec
stos
lret
das
into
adc
arpl
inc
shll
das
pushf
mov
ret
outsb
add
nop
jmp
daa
jae
lods
lahf
loope
in
repnz
lock
and
jne
sbb
into
mov
xchg
or
xor
ljmp
adc
jbe
jmp
push
mov
adc
pop
outsb
jne
sbb
lods
mov
lcall
outsb
push
or
sub
mov
rorb
pop
cs
mov
or
sti
or
test
and
mov
call
test
push
sbb
lock
insl
mov
rorl
loopne
sbb
pop
popa
subl
mov
sbb
fdivrs
and
cmp
mov
xchg
mov
jmp
repz
mov
pop
sbb
push
jle
in
fcmovnu
cmc
add
mov
xchg
pop
out
js
mov
call
push
aaa
mov
ss
sub
xchg
stc
push
in
xchg
push
call
les
mov
fsubl
int3
ja
push
loopne,pn
sub
xor
lods
es
mov
adc
sbb
xchg
std
dec
or
mov
push
lahf
mov
jecxz
inc
mov
xorb
mov
test
dec
ss
jg
pop
push
jae
aam
les
movsl
lret
in
inc
add
jl
inc
imul
jbe
jns
jnp
jo
std
lea
in
pop
jmp
adc
push
or
xchg
inc
lahf
add
and
add
aad
xchg
mov
xor
cltd
lea
loop
jo
fcomps
pop
inc
stc
daa
or
imulb
div
or
xchg
push
jmp
sub
mov
xor
test
outsb
js
and
pop
jmp
sub
rcr
mov
and
movnti
or
mulb
movsb
add
pop
mov
or
add
loop
or
add
or
popf
sub
push
mov
fucomip
cmc
nop
push
sbb
es
sbb
inc
stos
ret
in
sub
lret
xor
iret
add
aas
insb
xchg
add
aas
and
pop
repz
add
mov
lret
add
movsb
es
or
inc
adc
pop
pop
sbb
mov
jno,pt
cmp
cmp
leave
into
jle
ja
jle
push
adc
push
mov
or
mov
mov
test
fdivs
dec
stos
dec
xchg
fcoms
fwait
sub
xchg
mov
dec
mov
pop
iret
mov
and
cmp
sti
add
mov
dec
test
rcrb
shlb
mov
jbe
or
es
mov
pop
idivb
sti
test
adc
pop
jle
call
daa
mov
mov
in
mov
int
or
mov
push
pop
lods
jne
mov
in
mov
xor
loop
dec
mov
in
jbe
ja
xchg
xchg
out
jbe
inc
xchg
enter
pop
cs
fsubrs
les
sti
sub
dec
sub
sbb
sbb
aam
jp
mov
mov
fwait
in
push
pushf
sub
dec
pusha
adc
push
pusha
out
and
out
push
push
pop
fsubrp
aas
gs
cmpl
xlat
cli
mov
iret
add
out
arpl
lret
out
adc
cmpb
xchg
dec
data16
push
push
repz
mov
stc
xor
je
clc
pop
in
sbb
std
push
add
pop
shl
inc
xchg
xor
es
sahf
push
aam
pop
sbb
mov
addl
add
mov
cmp
jge
loope
cmp
sbb
inc
aas
add
popa
arpl
mov
cmp
ja
ret
sub
stos
mov
sbb
push
fimuls
stos
lret
xor
mov
mov
pusha
roll
jo
sbb
fsubl
sbb
in
cltd
add
jle
mov
fisubs
jge
lea
loopne
popl
push
add
push
cmp
pop
adc
loop
pop
repnz
jns
mov
cmp
addb
cmc
add
fs
cmpsl
lcall
or
push
lods
pushf
arpl
or
xchg
es
sbb
fmull
scas
xor
pop
cmpsl
ja
push
pop
lock
lret
inc
mov
pop
lret
stos
and
inc
out
test
inc
xor
dec
stos
test
mov
loop
sub
cmp
jp
mov
jg
int3
leave
int
dec
xchg
stos
mov
jmp
sbb
jmp
test
mov
ret
inc
inc
add
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
adcb
pfrsqrt
pop
jle
pop
push
mov
xchg
nop
std
xor
icebp
hlt
bound
cmp
shlb
mov
sub
cmpl
push
lock
mov
cmp
dec
std
pop
aad
mov
jl
mov
fidivs
xchg
movsl
popa
mov
movsl
out
jp
aaa
repz
imul
imul
adc
hlt
mov
insl
repz
xchg
pop
xchg
xlat
lods
xor
add
sbb
pop
pop
inc
jae
popa
mov
jns
add
outsb
cmp
movsl
push
and
pushw
shrb
out
mov
mov
lcall
lcall
jne
and
sub
ljmp
and
sbb
hlt
fsts
xchg
inc
in
fdivrl
cmpsb
push
popf
jno
mov
aam
pusha
sbb
loop
jmp
arpl
add
lcall
imul
mov
sub
repnz
insb
icebp
push
or
dec
xlat
mov
cmp
cmp
xchg
xor
push
js
mov
jg
das
dec
lea
shrb
ss
or
or
dec
call
loope
add
sar
sti
push
xchg
mov
push
mov
imul
push
daa
push
stos
in
stos
mov
push
aam
pop
add
dec
jb
fdiv
mov
cmpsl
les
lea
or
ljmp
and
test
xchg
mov
sar
or
push
push
enter
inc
imul
mov
aam
cmp
cmp
cmp
mov
out
mov
adc
pop
jg
pop
adc
dec
int
jmp
imul
mov
stos
subb
jno
jno
add
shl
pop
testl
jmp
lods
inc
out
cmp
jns
push
gs
fisttpll
insl
popf
adc
push
lret
ret
aad
pusha
xor
ret
repnz
pushf
push
enter
jle
xor
sub
sub
inc
lods
lock
or
fcmovne
insb
insb
add
mov
repz
lea
pop
sub
push
add
push
pop
ficoml
adc
aad
scas
pop
or
mov
sbb
jb
push
cli
sbb
push
aam
mov
scas
mov
cmp
xor
aaa
push
out
inc
aas
xchg
xor
cmp
xchg
hlt
sbb
mov
xor
sbb
iret
inc
mov
push
inc
pop
fldl
mov
aas
mov
daa
nop
aas
outsb
movsl
bound
cmp
pop
adc
sti
sti
cmp
jbe
hlt
dec
push
jmp
sbb
adc
notl
pop
mov
icebp
mov
or
or
je
xchg
mov
out
dec
movsb
stc
dec
addr16
stos
inc
bound
punpcklbw
or
stos
ds
push
xor
outsl
inc
pop
lock
push
in
orb
push
cmp
add
in
cmpsb
fstpl
stc
stos
jo
mov
ds
leave
movsb
int
rorb
rorl
xchg
mov
scas
push
adc
aas
mov
movsb
dec
das
cmpb
xlat
int3
xchg
mov
stos
add
adc
sbb
sbbb
nop
jl
cmp
sbb
jno
pusha
jl
test
les
jnp
gs
adc
pop
and
cmc
and
stos
adc
sarl
and
mov
xchg
cltd
mov
or
imul
fisubrl
sar
loope
cs
push
or
push
mov
pop
popf
cli
inc
repnz
aam
mov
xchg
push
jae
outsl
mov
push
or
test
das
add
or
nop
fbld
test
inc
and
push
push
cld
cld
push
sbb
sbb
push
xor
mov
push
std
cmp
and
cmpsb
jae
sbbb
shll
aas
add
push
mov
stos
lods
test
and
mov
shll
mov
mov
addr16
out
cmp
jg
scas
sbb
xor
or
mov
bound
and
jmp
sbb
xchg
pop
cmp
push
and
loopne
dec
adc
inc
sbb
mov
lahf
ret
jns
je
test
lds
sub
adc
sbb
mov
lret
xor
pop
cmpsl
adc
inc
lea
ret
pusha
sub
hlt
mov
enter
mov
mov
cmp
negl
jle
mov
imul
add
xchg
mov
xchg
sbb
mov
pop
inc
xchg
ds
push
lea
inc
mov
push
push
leave
sbbl
ret
and
das
lds
mov
imul
mov
cmp
adc
pop
call
sbb
add
mov
adc
loope
sub
mov
dec
push
lods
mov
xchg
jns
xchg
fsubl
dec
cmp
add
sbb
imul
icebp
xchg
xchg
ds
cli
sbb
stc
in
pop
test
mov
dec
pop
cmpsb
test
mov
push
cmp
insl
cli
fs
sbb
or
shr
lahf
sub
call
push
lret
and
push
int3
enter
add
or
rcr
shlb
movsb
outsb
sbb
insl
mov
daa
inc
test
inc
jp
inc
mov
mov
inc
in
in
xchg
std
pushf
jo
or
enter
jl
jp
out
pop
hlt
mov
sub
and
mov
adc
dec
dec
fmul
pop
pop
sub
in
ss
cmp
popa
repnz
sarl
xchg
jle
das
js
add
jmp
sub
call
ja
cmp
lds
test
jnp
subb
push
cltd
inc
push
ljmp
mov
lods
dec
ror
dec
in
aad
mov
scas
mov
es
daa
pop
loopne
notb
sub
int3
in
popf
push
aaa
enter
pop
ja
cmpsb
xchg
cwtl
sub
and
cmp
mov
adc
pop
sbb
hlt
dec
ret
adc
pusha
push
fsin
adc
popf
pop
xchg
and
mov
jnp
or
lret
sbb
mov
sbb
mov
cmp
pop
xchg
lret
mov
test
ret
lret
sti
mov
pop
daa
fiaddl
push
pop
or
dec
jl
in
out
push
jb
dec
xchg
outsl
xchg
adc
or
xor
push
cmp
xchg
in
inc
pop
stc
sbb
insl
adc
ss
in
mov
pop
shll
pusha
xor
lock
dec
mov
jmp
and
popa
pop
stos
mov
mov
xrelease
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
xchg
jmp
clc
sbb
mov
pswapd
popf
and
in
pop
inc
pop
xor
cmp
mov
jno
add
leave
mov
pop
jp
lret
or
jbe
lfs
insb
iret
sub
stos
out
decb
and
das
lods
xchg
call
mov
fs
xlat
test
sub
push
push
jg
inc
mov
xor
bound
mov
outsl
add
imul
fcoml
mov
jle
loop
cmpsb
dec
movsl
adc
xor
pop
xchg
movsb
xchg
dec
out
cmp
and
clc
sub
dec
in
dec
popl
sub
cs
cmp
shrb
int
push
pop
xchg
movsb
mov
cs
out
inc
sub
add
push
test
or
arpl
shll
lods
push
jae
xlat
or
jb
xchg
sub
inc
loopne
enter
cmpsl
push
fsubl
xlat
bswap
ffreep
repnz
insb
push
dec
packsswb
movl
pop
cmpsl
jae
iret
jge
mov
add
mov
inc
sbb
mov
fstl
pop
push
lods
jno
gs
or
adc
cmc
shlb
aam
xor
stos
mov
xlat
cmpsl
sti
daa
test
mov
inc
es
jno
int
pusha
jns
aam
jecxz
pop
push
dec
pusha
pop
xchg
adc
add
xchg
js
andb
test
mov
out
mov
sub
ret
pop
scas
loop
inc
mov
mov
cld
pop
cmp
push
sbb
iret
and
pushl
sub
push
mov
mov
jo
and
repnz
popf
mov
or
jmp
dec
repnz
lock
sub
add
jbe
and
sbb
mov
mov
std
iret
rol
sbb
add
imul
ss
push
or
adcb
aaa
testb
adc
cs
lret
sbb
in
mov
outsb
jb
add
ret
or
xchg
jne
and
inc
mov
push
pop
cltd
sbb
or
int3
adc
cmp
shlb
pop
jo
test
loope
orb
jno
add
jmp
sarl
jbe
out
stos
fsubrl
and
inc
arpl
push
mov
sub
andl
push
push
jmp
mov
xchg
cmp
scas
and
in
cli
sub
popf
inc
out
je
in
pop
andb
add
add
mov
push
ret
cmp
mov
cmpl
jne
pop
xchg
mov
js
push
push
xchg
mov
add
adc
jb
cld
sub
xchg
inc
ja
jle
mov
gs
sub
jns
stos
rolb
mov
int
mov
xor
pop
mov
cmpsb
out
cmp
int
push
jp
jns
adc
lods
cld
gs
testl
sub
sub
jmp
jmp
pop
arpl
sarl
lcall
icebp
adc
enter
xor
dec
incb
fsubrs
xlat
bswap
xchg
testb
xor
adc
lret
adc
mov
pusha
inc
addr16
in
mov
add
orb
adc
dec
ljmp
in
jne
adc
rcl
in
lret
cltd
enter
fld
dec
inc
fisttps
sub
inc
into
cmp
out
pop
sahf
xchg
idivl
notl
lret
fistps
jnp
jno
ss
ss
fnsave
mov
mov
lods
icebp
pop
fildll
mov
xchg
std
out
test
mov
push
or
fistps
mov
mov
test
enter
jmp
fcmovbe
cmp
leave
sbb
and
cmp
lock
mov
outsl
addl
inc
iret
daa
add
jge
sbb
popf
mov
stos
add
and
mov
idiv
into
and
cmp
adc
ret
dec
lcall
jg
cli
mov
nop
cmp
mov
mov
xchg
pop
js
jo
div
aad
call
and
or
pop
clc
dec
jmp
aam
je
or
xchg
push
fbstp
int3
shll
iret
sbb
adc
fildll
cld
xchg
sub
cmpsl
or
sbb
adc
aam
mov
xchg
xchg
mov
sbb
cmpsb
dec
test
push
push
cmp
call
in
lea
icebp
stos
xor
push
testl
fcomps
add
mov
es
mov
sbb
inc
int
and
fisttpl
pop
fdivp
cmp
mov
add
push
pop
xchg
mov
lret
push
mov
shll
fstp
dec
in
dec
or
hlt
aad
jae
mov
mov
js
dec
push
movl
imul
lods
xchg
test
cmp
add
pop
shl
lea
aam
int
add
inc
adc
jecxz
jne
xchg
inc
sub
dec
fs
outsb
je
inc
popf
dec
test
cltd
cmc
pop
push
mov
cmc
mov
adc
ds
xor
jno
out
adc
mov
mov
or
push
dec
int
js
adc
repz
or
sbb
filds
and
sbb
cmpsl
fs
and
cwtl
xchg
push
and
movsl
cmp
test
ds
aas
mov
lods
andl
outsb
icebp
andb
out
mov
sub
cs
mov
xchg
inc
lea
dec
push
gs
cmp
cmpsb
ljmp
adc
push
xchg
mov
push
mov
mov
jle
inc
sbb
cmpsl
movsl
out
aam
je
insl
hlt
mov
cmp
jnp
int3
daa
sar
mov
push
cmp
rol
sub
iret
and
imulb
cltd
cwtl
imul
xchg
mov
cwtl
dec
ss
adc
jbe
cmpsb
insl
jmp
add
jns
sti
jne
jp
push
mov
xchg
leave
cmp
pop
lcall
sti
push
lcall
mov
loop
insl
mov
daa
cwtl
jmp
jne
push
ljmp
jns
push
xor
rclb
sbb
mov
inc
mov
or
cwtl
jecxz
push
rcrl
push
jmp
jo
bound
flds
fsubs
add
mov
sbb
xor
std
stos
push
mov
ret
mov
lahf
fucomip
aad
jns
lahf
loopne
adc
xor
lock
aaa
js
fs
std
je
mov
xchg
pop
jb
pop
sub
in
pop
movl
movl
movl
mov
mov
mov
mov
add
jmp
pop
sbb
dec
mov
or
mulb
inc
movb
mov
mulps
mov
sub
in
mov
pop
vmptrst
scas
lahf
dec
sbb
fistps
or
inc
xchg
lods
cmp
dec
xchg
imul
stos
rcll
jle
aad
jg
iret
cltd
dec
stos
mov
negl
pop
add
or
iret
push
faddl
rcrb
inc
push
rorb
insl
test
xchg
mov
push
xchg
mov
clc
pop
mov
ficompl
and
add
jge
xor
sub
add
pop
arpl
and
imul
lods
rcrl
xor
call
int
adc
cltd
js
mov
ljmp
xor
and
inc
fs
adc
sbb
test
test
mov
mov
jg
cmp
jmp
mov
xchg
pusha
movsb
adc
add
gs
sarb
pop
scas
fcomp
nop
arpl
std
mov
stos
mov
in
addr16
dec
adc
pop
es
mov
inc
fiaddl
pop
sub
sahf
pop
pop
daa
aas
rcll
pop
loope
loopne
xor
lret
dec
mov
adc
scas
jb
popa
hlt
int3
push
sti
loopne
int
sar
push
testl
lods
sub
mov
push
popa
pusha
insb
cld
ret
jp
inc
pop
push
scas
xor
pop
rolb
push
xor
adc
sub
sbb
sti
popf
arpl
pop
andl
ss
jecxz
pop
ja
ret
loop
xchg
inc
in
jl
cli
or
mov
xor
or
sub
sbbb
stos
stos
mull
cld
jae
test
nop
cmp
into
adc
lret
out
and
push
enter
cltd
adc
mov
in
nop
cld
imul
cmpsb
inc
pop
sti
xlat
push
shrl
hlt
and
dec
push
sub
mov
mov
call
jnp
aam
leave
fbld
inc
mov
xor
sarl
cmp
adc
jecxz
mov
push
mov
add
sbb
lret
pop
shr
or
insb
out
bnd
dec
pop
rcll
fs
cmpsl
mov
andl
lret
arpl
xor
lahf
sub
shlb
add
pop
js
jmp
shll
in
fimull
sub
cmpxchg
push
mov
lret
aam
sbb
loope
xchg
cmp
push
inc
sub
sub
jmp
in
jecxz
jne
lods
dec
cs
xchg
xchg
test
rorb
and
cmp
adc
movsl
insb
movsl
in
inc
ds
stc
jg
xor
stos
jnp
jnp
jno
xchg
inc
repnz
pop
leave
add
test
ss
xor
dec
dec
add
out
inc
cwtl
xchg
cwtl
sub
loope
dec
sub
lods
xchg
faddl
or
lock
jle
lods
mov
ficompl
sub
es
insl
sub
lret
out
and
mov
ret
add
loop
xchg
inc
test
xchg
push
out
push
inc
cmp
std
pop
inc
sub
cltd
cli
shl
push
cmp
jb
lods
incb
scas
mulb
xchg
inc
arpl
outsl
sbb
out
pop
into
shrl
ficompl
aaa
xchg
and
test
out
in
shll
cmpsb
ffree
inc
xchg
iret
icebp
push
dec
jno
cpuid
scas
rclb
movsb
jb
push
xchg
dec
int
imul
mov
mov
xchg
add
aaa
mov
push
push
push
and
jnp
dec
imul
mull
shll
mov
les
and
pop
popf
lods
add
outsl
mov
sbb
or
scas
sahf
fcompl
xchg
insb
lods
sub
push
test
jl
es
icebp
cli
or
mov
sub
loopne
movsl
fmull
in
sarb
lods
out
in
idiv
negl
dec
push
mov
call
xor
shrb
orb
arpl
and
shll
cmp
lods
cmc
aaa
dec
shrb
lret
adc
jecxz
mov
pop
or
mov
adc
and
cli
jb
xchg
repz
ret
pop
icebp
sub
xchg
or
test
sub
pop
xor
and
loop
mov
xchg
xor
cmp
push
pop
bound
out
into
ja
cmp
xor
push
out
jne
fistpll
sti
and
dec
cmp
xchg
pushf
and
fldenv
sbb
pop
push
push
mov
mov
scas
test
sub
jp
ret
mov
pop
test
jo
aam
push
cmp
mov
aaa
dec
pop
into
pop
pop
adc
mov
fistl
mov
pop
stos
lds
dec
or
sub
jae
cltd
nop
sub
int3
or
jns
lahf
out
adc
xor
aam
and
mov
sub
pop
fisttps
loopne
jg
push
sti
sbb
jno
into
cld
fs
mov
rol
xor
add
sub
lock
outsl
lods
js
test
imul
and
fcmovbe
jno
push
outsb
push
jecxz
cmpsl
popa
movsb
cltd
adc
inc
js
js
inc
sti
imul
ret
push
dec
push
cs
jge
mov
stos
mov
movsb
cs
add
add
xchg
orb
in
or
data16
or
out
dec
scas
sar
adc
add
rorb
or
mov
adc
std
mov
stc
mov
in
xchg
sbb
cld
or
jle
mov
pop
adc
mov
shl
mov
fwait
dec
loopne
test
test
dec
or
adc
cltd
push
ds
pop
mov
fisubrl
arpl
mov
jg
popf
sub
mov
fcomps
lcall
cltd
xchg
or
xchg
mov
ret
pop
rcpss
jecxz
lds
call
cmpsl
and
bound
jecxz
test
out
xchg
aad
sahf
test
xorb
cs
dec
adc
mov
stc
push
xchg
cmpsb
leave
incb
add
repnz
aam
int3
loope
shrb
dec
xor
aaa
test
mov
push
std
lcall
mov
jo
into
orb
int
xorb
test
cld
imul
push
push
adc
andb
mov
inc
call
popa
filds
mov
pop
pop
addl
outsl
pop
bound
sahf
jne
add
stos
xor
inc
jns
inc
repz
dec
jns
loop
mov
add
push
repnz
jmp
into
add
or
cs
js
notl
mov
btc
mov
lods
fcoml
aaa
loop
into
push
xchg
adc
xchg
xor
mov
hlt
scas
mov
dec
add
mov
xor
sti
shl
mov
adc
int3
or
pop
push
jo
lods
lods
add
and
xchg
cwtl
pop
push
iret
and
jnp
add
loope
data16
sub
cs
nop
or
loopne
loop
pop
lods
mov
int
xor
int
shl
arpl
xchg
pop
mov
loope
loope
sub
in
aad
in
push
test
lea
movsl
subb
loope
test
jg
xchg
dec
and
xchg
mov
xor
dec
cmp
test
pop
xchg
das
push
es
in
dec
jg
inc
int3
sub
arpl
out
aas
arpl
sahf
stos
mov
cwtl
in
adc
xchg
and
jg
jecxz
loop
fidivs
mov
xchg
xor
or
jmp
push
stos
test
cld
out
mov
jecxz
in
data16
push
insb
test
mov
loopne
sub
mov
mov
mov
imull
rep
pop
cmc
sub
jle
add
dec
in
fs
or
jecxz
xor
mov
or
mov
fcoms
push
ret
fcoms
insl
jnp
popl
xlat
fs
cltd
sahf
mov
dec
fucom
mov
sub
cmp
stos
xor
mov
add
mov
pop
fxch
inc
lock
repz
xchg
jbe
cmpsl
mov
and
ss
pop
cmpsl
mov
roll
xor
insb
outsb
hlt
mov
sub
pop
jle
enter
inc
fwait
inc
dec
incb
sbb
das
pop
and
jle
std
or
dec
adc
mov
ja
lock
jno
jb
pushf
and
xor
push
or
push
rol
pop
mov
mov
dec
out
dec
andb
dec
repz
es
xor
mov
negb
and
dec
rorl
adc
pop
push
sarb
push
jae
cld
aas
enter
jnp
sub
cltd
mov
jge
push
cmp
or
xchg
je
xchg
in
mov
jl
fs
imul
jp
adc
xchg
xchg
outsb
mov
push
cmp
sbb
xlat
or
fsincos
cwtl
pop
mov
pop
push
sbb
popa
fwait
add
adc
movsb
push
and
sbb
mov
sar
ljmp
dec
out
lahf
pop
subb
jae
aam
out
pop
aaa
test
aaa
dec
mov
pop
inc
or
adc
adc
aad
and
lods
mov
pop
in
aaa
sub
jge
xlat
pop
mov
cmp
fisubl
mov
nop
and
adc
dec
and
cmpsb
inc
aam
lods
and
xchg
nop
jmp
cli
aam
iret
fs
pusha
imul
jmp
in
add
je
adc
bound
xor
addr16
mov
pushf
pop
add
mov
jecxz
xor
iret
mov
shll
push
sub
mov
cmp
add
jge
xor
das
inc
test
sub
int
xor
cmpsl
xchg
cmp
mov
or
enter
and
xchg
fsubl
in
push
sbb
cmc
stc
ja
inc
and
leave
dec
inc
sbb
xor
divl
xchg
out
notl
aam
mov
pusha
xchg
ss
cld
int3
xchg
push
pop
push
and
mov
stos
mov
nop
xchg
fistpl
mov
ret
test
test
fs
mov
clc
xor
loope
sbb
or
lds
negb
inc
rorl
aas
pop
pop
stc
jmp
inc
push
aas
pop
das
dec
out
mov
jg
adc
mov
call
and
pusha
gs
add
gs
push
jg
or
hlt
cltd
daa
pop
in
pop
mov
movsb
pusha
test
pop
push
adc
lahf
outsl
inc
jns
xchg
popf
jecxz
push
test
stc
jno
and
and
jno
lret
je
out
xchg
out
fstl
mov
dec
mov
test
mov
lret
xchg
mov
push
and
sahf
push
xlat
xchg
mov
mov
inc
dec
lret
xor
cmpsl
cwtl
std
fwait
xchg
movsb
sub
mov
add
pop
mov
pop
fsubl
and
fdivs
fs
add
adc
mov
mov
enter
mov
cltd
pop
push
mov
enter
in
imul
xchg
pushf
push
pop
cmp
xor
mov
jl
out
pop
test
push
or
fldenv
push
push
xchg
cltd
fwait
movsb
xchg
lea
clc
jp
mov
jnp
xchg
aaa
mov
dec
clc
and
fisubrl
sbbb
ss
ret
jl
bound
mov
hlt
pop
push
imul
dec
inc
or
ds
inc
mov
clc
cmc
adc
sub
push
cli
movsl
out
repnz
outsl
iret
jge
mov
cmc
fstpt
outsl
inc
stos
cld
xchg
jb
mov
out
cmp
pop
adc
pop
insb
jecxz
out
data16
outsb
ss
lea
lret
inc
sub
jle
pop
shrl
rcrb
cmp
xchg
aas
add
dec
adc
mov
pop
stos
push
dec
test
pop
mov
xchg
mov
add
xor
push
and
lret
sbbb
ljmp
lds
leave
iret
add
fmull
cli
les
pop
mov
pop
sub
or
lret
mov
xor
pop
lock
dec
inc
mulb
out
mov
jbe
jecxz
mov
pop
sbb
adcl
dec
adc
jb
cmc
ljmp
loope
dec
ds
lods
bound
push
inc
packuswb
add
icebp
or
pop
adc
jno
repz
lret
sti
xchg
mov
dec
es
mov
stos
cmpl
loopne
pop
push
or
mov
cmpsb
lods
fsubs
out
add
mov
mov
xor
pop
loop
movlps
adc
sub
mov
bound
inc
xrelease
mov
or
pusha
in
ljmp
or
push
pop
mov
adcl
out
in
xchg
mov
push
imul
repz
enter
lea
xor
lahf
xchg
mov
mov
in
fwait
je
dec
xchg
ret
sbb
mov
push
adc
bound
mov
jp
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
outsb
xor
daa
in
adc
and
ljmp
jp
mov
fcoms
sbb
dec
mov
ret
out
pusha
stc
adc
cmp
cltd
sbb
test
test
daa
pop
and
je
pushf
fiaddl
or
loop
les
pusha
xchg
pushf
cmp
lods
rclb
outsl
xchg
xor
call
fidivs
repz
int3
loop
adc
pop
jmp
xor
mov
dec
adcb
and
les
add
test
cmpsb
mov
sahf
mov
fisubl
jmp
dec
clc
pop
imul
pop
dec
inc
mov
push
push
jmp
pushw
in
mov
scas
ljmp
hlt
fwait
mov
clc
scas
into
inc
jmp
dec
in
roll
or
cmc
mov
imulb
mov
and
jae
fldl
xor
pop
mov
lret
sbb
mov
js
mov
call
adc
push
push
xor
jge
and
jmp
push
push
ljmp
mov
out
sub
add
inc
add
xchg
mov
sbb
jns
push
dec
adc
shlb
repz
notl
test
aaa
mov
jl
fsubrl
pop
movsl
rolb
add
push
aam
call
mov
pop
loope
fstpt
adc
jmp
loop
lods
sbb
in
ret
cs
mov
xchg
inc
add
xchg
movsb
mov
leave
cltd
stos
and
inc
mov
je
inc
stc
stos
mov
addr16
lahf
in
add
pushf
mov
out
push
and
sbb
faddl
dec
and
call
scas
fstpl
out
aas
push
in
fldenv
cmp
loopne
and
mov
fbstp
add
cmpl
test
lret
lock
sub
cwtl
push
movsl
add
mov
daa
ljmp
lea
int
mov
jmp
xchg
mov
xchg
nop
pop
test
xchg
xlat
adc
mov
fcmove
adc
xor
fcoms
pop
xchg
push
sbb
fists
pop
mov
dec
mov
pop
xchg
dec
cmp
mov
push
imul
dec
lret
cwtl
pop
inc
into
out
sbb
and
cld
out
push
lds
mov
push
cmc
mov
inc
push
and
sbb
int3
pusha
out
sbb
dec
out
xchg
cli
mov
pop
movb
cld
sbb
jmp
out
dec
rorb
sub
or
pop
leave
inc
mov
dec
int3
mov
cmp
bound
xor
out
jno
fsubrs
fistl
or
sarl
dec
mov
and
pop
mov
dec
imul
cld
push
daa
nop
nop
or
add
movsl
pusha
xlat
cmp
lcall
loopne
loopne
mov
xchg
cwtl
inc
fwait
xchg
loope
mov
sbb
aas
sub
xchg
or
in
adc
lea
dec
dec
push
and
lret
aas
xor
iret
orb
pop
roll
push
push
add
imul
hlt
xor
jge
add
into
dec
adc
movsb
inc
xchg
lcall
int3
imul
or
add
fxtract
mov
loopne
push
sbb
adc
push
adc
in
and
andl
add
sahf
repnz
and
mov
dec
xorl
sahf
add
sub
mov
nop
or
sub
jg
adc
scas
jae
aaa
cli
insb
jge
sbb
jns
fdivs
cmpsb
adc
jmp
mov
push
call
roll
cmpsl
xchg
cmc
inc
fcmovnb
imul
fildll
gs
mov
and
imul
or
cmp
add
ficompl
and
sub
and
push
fistl
into
ss
loope
xchg
fwait
lret
pop
movsb
pop
mov
jno
ds
cwtl
loopne
mov
out
testb
sbb
and
jl
fcoms
cmovb
aas
mov
mov
lcall
xchg
jmp
fcmovnb
adc
sub
push
inc
negb
xor
ds
sub
push
pop
fdivrs
cmp
outsb
or
or
in
fisubl
sbb
mov
fs
repz
cmp
xor
push
js
outsb
add
sub
out
bound
aad
jge
push
xlat
push
lods
xchg
lahf
int
iret
movsl
inc
dec
neg
outsb
lock
jg
out
imul
adc
inc
dec
push
imul
subl
pop
jl
lcall
or
mov
mov
out
push
mov
push
nop
xchg
int
dec
sbb
mov
lret
nop
and
outsl
fwait
pop
ret
xchg
cltd
add
or
ret
jno
pop
shlb
mov
test
cmpb
mov
xchg
jle
xor
xchg
lret
movsb
in
adc
inc
faddl
stos
jb
xor
sahf
mov
outsb
jl
add
xor
lret
in
loopne
insb
loope
cmpsb
mov
push
mov
fiaddl
arpl
int3
xor
cmp
sbb
mov
mov
push
cmpsl
sub
and
fldenv
cmp
dec
and
cmp
pop
mov
push
or
in
adc
rcr
adc
out
fnsave
add
jo
dec
cwtl
lock
das
cmpsb
ja
mov
pop
test
das
sbb
xchg
stc
cmp
sbb
and
mov
ljmp
mov
gs
xchg
mov
dec
push
xchg
sub
cmc
sbbl
scas
ja
rcrb
jp
imul
sub
push
or
xchg
push
dec
jecxz
mov
es
dec
pmaddwd
adc
sub
xchg
pop
or
repnz
nop
cs
xor
dec
fwait
loop
push
sti
ret
jle
insb
mov
js
popf
idiv
xchg
scas
jbe
shll
mov
ds
add
cmpsl
dec
dec
pop
int3
aad
jmp
mov
xor
push
xorb
sahf
sub
pop
pushf
cli
or
orb
jg
mov
xor
std
sub
inc
aam
xchg
daa
cltd
mov
or
cmp
test
into
mov
vmread
jle
fneni(8087
push
xchg
pop
fadds
nop
add
adc
nop
mov
ja
push
xorl
adc
push
mov
inc
leave
inc
pop
mov
cmp
cmp
pop
cmp
jne
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
int3
xchg
dec
cmp
adc
and
in
dec
mov
pop
bound
pushf
out
pushf
push
dec
in
loop
mov
enter
pop
push
mov
jmp
iret
cmpsl
nop
jnp
or
inc
popw
xor
movsl
push
or
mov
or
hlt
data16
dec
std
mov
mov
outsb
xor
add
mov
lods
xorl
and
repnz
fwait
or
sbb
push
jne
fdivp
dec
out
or
and
pop
dec
jae
mov
data16
cmp
cmp
push
incb
daa
dec
mov
call
or
repnz
mov
jmp
test
sub
or
cltd
pop
inc
jne
jecxz
call
xchg
insl
cmp
inc
push
es
lahf
lret
add
xor
jne
scas
xchg
lds
xor
mov
xlat
lock
pop
imul
stos
or
repz
push
jb
shll
into
lock
lds
push
push
xchg
clc
sbb
jl
hlt
clc
inc
cmpsl
jle
xor
jne
outsl
arpl
push
clc
inc
sub
cmc
ficoms
jae
add
pushf
in
or
lret
pop
jle
sub
add
mull
std
adcl
ret
mov
test
in
sub
ja
out
adc
jmp
cmpsb
nop
mov
jb
in
jae
mov
adc
repz
inc
or
mov
and
xchg
and
daa
ja
cmp
sub
pusha
sbb
fs
loop
nop
jb
and
fwait
out
xchg
mov
push
cld
mov
clc
push
ret
mov
push
or
das
mov
or
push
insb
cmp
addr16
pushf
lahf
popf
stos
rolb
xor
imul
jne
xchg
dec
cmc
sti
dec
int3
dec
jmp
call
outsb
push
mov
mov
and
push
mov
push
popl
xchg
mov
lret
es
push
push
inc
into
mov
lock
loop
insb
repnz
pop
sbb
xor
jle
adcb
sub
inc
loopne
into
or
arpl
shll
in
das
mov
mov
mov
test
adc
lock
adc
jo
adcl
rcl
jae
adc
add
jno
xor
mov
lahf
pcmpeqd
movd
in
daa
adc
test
or
cmp
aam
mov
xor
call
add
fldcw
insl
das
mov
dec
call
shlb
divl
fdivs
cmpsb
out
idivl
gs
cmp
push
mov
iret
aad
clc
fadd
loopne
mov
aaa
pop
or
ljmp
sub
in
xchg
testl
and
jge
jmp
repz
jg
cwtl
lahf
mov
in
cs
mov
pop
fwait
lret
or
pop
jo
and
or
dec
xchg
ljmp
xor
pop
lcall
jp
push
ja
jbe
out
aam
push
pop
lret
imul
mov
fdivrl
cmpl
fisubrl
cs
sbb
negl
and
inc
cmp
inc
mov
cmp
mov
adc
gs
jl
inc
mov
lea
hlt
and
push
shlb
mov
push
lock
add
sahf
pop
aaa
enter
dec
and
test
outsb
pop
xor
fmulp
shl
lcall
fsts
xlat
pop
pop
sbb
sub
callw
in
jae
addl
xchg
rclb
testb
adc
xorb
movsl
inc
sti
add
rolb
cmp
clc
sbb
xchg
jmp
cwtl
ljmp
jmp
add
xchg
fs
ror
std
imul
add
push
bound
fsubrl
or
rol
and
mov
and
insb
sbb
lock
pop
rolb
ds
inc
cld
or
fs
jae
jg
scas
mov
addb
int
mov
push
loope
fwait
pop
or
loopne
and
fs
cmpsl
sti
int
xchg
aam
call
ret
and
adc
sbb
cmpsb
mov
jo
ret
dec
mov
mov
xlat
xlat
bound
scas
inc
nop
aam
loope
int
daa
out
rolb
outsl
and
js
sub
jne
faddl
and
and
add
loop
out
insb
push
jns
ss
mov
inc
mov
jmp
jp
nop
mov
sti
mov
adc
outsb
xor
xchg
adc
mov
test
outsl
jecxz
scas
movsb
call
xor
pop
arpl
pop
into
stos
je
mov
and
add
insb
pushw
es
aad
push
lods
out
hlt
cmp
scas
insl
mov
xor
lea
bound
mov
inc
mov
lods
cmp
fadds
clc
or
out
loop
das
jae
fwait
xchg
filds
loopne
push
xchg
dec
push
adc
popa
jge
pop
push
xchg
cmp
inc
test
dec
sbbb
test
jmp
int
mov
fiadds
pop
fs
mov
scas
mov
xor
push
or
pop
into
add
aas
or
andl
add
mov
sbb
dec
std
mov
pop
xor
notl
dec
adcb
jo
aam
and
mov
movsl
push
jge
mov
je
adc
decb
or
pop
xlat
pop
pop
adc
cltd
ljmp
ds
xchg
das
add
push
mov
mov
push
jne
dec
sub
andl
stos
lcall
adc
mov
daa
dec
pop
mov
lcall
adcb
or
bound
outsl
mov
mov
test
popf
cmpsl
jbe
sub
ret
push
mov
arpl
sub
les
out
and
and
je
inc
lret
dec
pop
xchg
or
adc
out
inc
adc
stos
xor
jno
inc
mov
dec
fsubrs
jge
dec
xchg
sbb
mov
pop
or
out
push
sar
jne
mov
inc
adc
inc
popa
mov
push
inc
add
pop
or
and
add
jns
int3
pop
adc
xchg
sbb
in
out
or
jge
cmp
xchg
subl
pop
fidivrl
fdiv
pop
sub
inc
dec
gs
pop
std
jge
pop
out
insb
push
mov
adcl
xchg
in
test
mov
lcall
jmp
cmc
xchg
cmp
push
mov
adc
xchg
inc
int3
adc
and
and
sbb
dec
imul
leave
stos
aad
and
int3
xor
xchg
dec
aam
inc
cltd
or
xor
xchg
fstps
ss
shll
push
sub
jo
jge
das
add
adc
jecxz
fidivs
aad
or
popf
jecxz
cmpsl
push
repz
xchg
lock
pusha
ret
mulb
repnz
enter
pop
pop
dec
push
shrb
test
movsb
outsb
and
adcb
jnp
pop
sbb
repnz
cmp
int
pop
cmp
cltd
decb
xchg
pop
lcall
pop
add
cmc
je
mov
sub
mov
dec
jge
push
inc
dec
and
xchg
movsb
jecxz
jne
inc
jno
push
imul
ret
or
mov
shrb
pop
and
xchg
sub
adc
pop
stos
bound
xchg
push
scas
cltd
fimull
sbb
mov
jbe
push
mov
fidivl
in
repnz
cld
mov
je
int
insb
or
cmp
stos
scas
out
lds
lods
and
mov
pusha
rorb
movsl
sub
xor
push
cs
xor
outsb
adc
ret
dec
jbe
popa
sbb
dec
jmp
fstl
push
shlb
addr16
jmp
pop
mov
sub
jns
fstpl
add
push
xor
sarl
add
jne
and
je
and
imul
sahf
imul
xchg
iret
cld
pop
sbb
mov
cld
pop
add
enter
movsb
aaa
loope
in
fstpl
ja
or
push
lret
sbb
dec
mov
xchg
jne
gs
push
xchg
insb
test
std
jg
cmp
or
je
std
pushl
bound
xchg
add
mov
out
stc
js
xor
adc
or
jo
push
inc
cmc
pop
adc
mov
push
fldl
jo
popf
pop
outsl
mov
sbb
jo
test
sub
jmp
movsl
out
incl
pop
das
stos
ljmp
mov
xlat
mov
or
hlt
jns
fldcw
gs
xor
dec
test
cmp
xchg
xor
and
sub
nop
mov
cmp
ja
mov
addr16
decl
popf
clc
scas
mov
std
cmp
rcl
mov
xchg
push
mov
dec
inc
and
mov
cmpsl
jo
test
or
sub
icebp
ret
or
and
jle
aas
mov
test
stos
jns
cmp
dec
sub
arpl
je
or
cmp
test
jecxz
addb
cmp
pop
out
mov
cmp
cmp
inc
test
fsubs
dec
cmp
push
aas
idivb
lods
dec
fdivp
sbb
lcallw
push
add
jb
mov
int3
dec
je
inc
jb
call
xlat
loop
or
mov
jb
xor
rcr
dec
in
adc
xchg
js
cmp
xor
push
movsl
fidivrl
lods
loop
push
mov
mov
push
jne
dec
sarl
in
mov
das
cmp
jnp
ss
xor
mov
jmp
mov
dec
cmp
loope
and
sub
test
push
dec
dec
add
aas
iret
shr
mov
jge
int3
xchg
arpl
addr16
mov
jne
xchg
mov
mov
lcall
push
xor
xchg
jnp
xlat
sub
loope
divb
fdivr
adc
dec
in
pop
out
add
fbld
pop
ret
xchg
or
mov
push
fimuls
sub
jmp
int
stc
sahf
dec
add
xchg
fwait
or
fcompp
js
xchg
sbb
je
stos
test
dec
ja
hlt
lret
push
movsb
jne
mov
push
rclb
sub
cmp
xor
mov
or
mov
push
dec
and
rcll
xlat
inc
and
xchg
lds
xlat
divl
fs
insl
cmpb
xchg
or
mov
stc
popf
push
scas
xchg
inc
dec
sbb
iret
ss
inc
les
dec
repz
aam
inc
mov
jmp
stos
fisubrl
pop
aaa
out
out
cmpsl
or
sbb
lods
sahf
jns
fmul
sub
mov
dec
pop
xchg
xchg
xlat
dec
push
push
push
push
and
push
pop
add
movsb
call
and
sbbb
fcmovnbe
xor
sub
dec
jno
mov
mov
sub
dec
in
in
xchg
push
pop
jns
dec
stc
stos
in
cmc
cmpsl
das
mov
mov
dec
pop
push
outsb
mov
cmpsb
test
xchg
test
push
cmpsb
mov
mov
outsl
imul
in
icebp
mov
add
xlat
mov
inc
pop
cmpsl
ret
popa
leave
add
and
push
pop
out
adc
sbb
fiadds
mov
inc
cwtl
idiv
and
in
es
add
or
dec
fildl
jno
stos
jne
jns
mov
cmp
dec
jl
lods
xor
push
ror
xor
pop
jmp
pop
fistps
gs
mov
mov
sub
imul
cmpsb
ja
pop
scas
adc
into
lcall
sbb
cld
cmp
lret
cli
xchg
add
mov
add
sbb
sbb
push
mov
push
jmp
rorb
and
and
cmpsb
xchg
pop
jp
test
adc
rcl
mov
sbb
sub
popa
in
mov
inc
outsl
inc
fdivr
ror
xor
pusha
sbbb
imul
jle
sub
jp
pusha
int3
cmp
fstpt
or
and
inc
add
test
jb
pop
jbe
push
ret
xchg
push
cmpsb
es
xor
mov
loopne
addr16
jl
mov
orb
les
cli
stos
call
sub
dec
add
xchg
mov
pop
cltd
cmp
sub
bound
cmpb
movl
inc
lds
scas
add
test
out
shr
xchg
mov
cmp
ret
inc
mov
popa
sbb
ljmp
jl
das
pop
aad
mov
xor
das
xchg
imul
sbb
pop
rorb
imul
sahf
vpaddusw
bound
lods
dec
loopne
sahf
test
add
mov
mov
inc
mov
and
jl
jecxz
out
jno
inc
popl
mov
adc
rorl
imul
or
sub
enter
fmull
push
and
add
cmp
add
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
mov
cmovno
fists
jae
xchg
push
jge
dec
fdivs
dec
push
push
adc
pop
xchg
dec
fcoms
fnstenv
fisttps
and
cs
fbld
xlat
shll
sti
stc
cmp
xchg
jbe
add
mov
jle
pop
lahf
or
pop
lea
cmpsl
mov
mov
push
push
xor
push
incb
dec
cmpb
mov
insb
psubw
mov
mov
push
sub
and
sub
mov
call
or
pop
inc
xor
mov
repz
je
je
stos
mov
inc
adc
daa
pop
movsb
mov
xchg
fwait
mov
adc
lods
es
pop
inc
pop
dec
xchg
mov
imull
jecxz
insl
rep
mov
cltd
inc
pusha
out
je
mov
jae
xor
push
mov
pop
mov
stc
or
cmpsl
scas
cmc
icebp
outsb
sub
mov
es
not
outsb
pcmpeqd
cmp
sbb
loop
inc
movsl
jb
lea
mov
fnstsw
inc
clc
xor
pop
stos
repz
ret
jae
pop
mov
insl
add
push
mov
cli
mov
sbb
loop
and
mov
lock
in
lods
xchg
subl
adc
nop
addr16
dec
pop
dec
iret
push
insl
jle
dec
pop
pop
push
lcall
jno
outsl
divb
xor
cli
fmull
inc
and
inc
in
jmp
stos
push
and
mov
in
pop
xlat
and
scas
fnstenv
rcr
jnp
pusha
mov
xor
push
clc
enter
je
test
int3
push
inc
mov
out
inc
mov
jp
lret
dec
or
mov
test
loope
fisubl
mov
cmpl
pop
sbb
les
iret
loopne
push
mov
pusha
pop
pop
add
sti
adc
iret
sahf
ret
pop
xor
mov
bnd
aad
pop
fwait
sbb
cmp
mov
sbb
jmp
es
std
int
fs
les
jo
cld
arpl
or
adc
adc
sbb
mov
pop
inc
inc
imul
cmc
cmp
fbstp
and
jne
xchg
decb
shr
jno
xchg
xor
sbb
xor
pop
nop
out
out
stos
sbb
jp
popf
jno
sub
mov
jp
mov
cwtl
test
fnstcw
add
xchg
mov
or
mov
xchg
xor
addb
push
jno
add
sub
mov
fs
lret
mov
mov
outsl
mov
shlb
mov
and
mov
adc
jbe
mov
outsb
add
xor
sbb
popf
out
popa
sub
jge
clc
xchg
lret
dec
jecxz
pop
aad
cltd
push
js
ds
dec
shl
loope
add
dec
cmc
call
notb
jb
adc
pushf
lods
mov
and
psrad
movhps
popa
push
out
sbb
shlb
iret
dec
pop
adc
shll
repz
in
ljmp
xlat
cltd
pop
lods
stc
shrl
pop
adc
cmp
outsl
add
loopne
xchg
fisubl
mov
ret
sbb
sbb
mov
sbb
pop
mov
cltd
out
fnstsw
sbb
fcomip
sub
xor
mov
push
std
addr16
inc
scas
mov
divb
loop
ret
add
xor
xchg
dec
jne
in
rcrb
in
and
test
mov
push
pmaxub
test
push
ss
lret
pop
mov
sub
rolb
jo,pt
repnz
popf
out
test
aad
mov
sbb
lock
fcompl
bound
in
and
loope
in
jp
fnstsw
mov
loopne
and
jp
in
sbb
jbe
test
ficoml
shlb
cmc
cmp
into
push
jle
mov
test
xorl
scas
lock
jge
pop
push
in
or
push
add
jns
nop
in
mov
or
jp
or
pop
popa
shll
jbe
sub
pop
data16
jg
lea
jecxz
sbb
mov
add
push
jmp
arpl
lret
mov
xchg
jl
add
int
nop
jle
faddl
dec
mov
mov
mov
or
push
daa
adc
inc
inc
pusha
mov
adc
lahf
jecxz
or
fimull
inc
xor
mov
rclb
xor
mov
or
dec
insb
fs
call
xor
out
mov
or
adc
adc
aam
lgs
repnz
popf
outsb
repnz
xchg
push
inc
les
jp
add
mov
jns
dec
mov
ret
mov
lds
xor
mov
jns
das
xor
out
daa
aas
or
xor
fisubrs
sti
sub
mov
inc
test
popa
lret
fldt
movsb
inc
inc
in
cmpsb
cmp
and
pop
xchg
jg
jle
adc
ja
xor
pop
cltd
jp
jge
jl
dec
jmp
cmpb
sbb
aaa
out
mov
sbb
pop
in
lret
mov
push
or
rcrl
mov
jp
bound
adc
cmp
or
add
jecxz
rolb
popf
leave
push
inc
jge
and
adc
or
scas
lcall
in
jl
divb
fwait
out
sub
fmul
push
lea
popa
adc
std
arpl
xor
hlt
jae
mov
cwtl
jbe
into
cmc
xchg
hlt
arpl
cmp
cltd
lret
xor
mov
inc
rorl
pop
fidivl
dec
test
sub
xor
bound
dec
std
dec
push
scas
mov
dec
mov
inc
fsub
mov
sahf
push
flds
fldt
lods
jmp
jne
inc
jo
pop
pop
ss
bound
cmc
out
dec
and
sbb
mov
int
sbb
pop
mov
inc
inc
jns
ja
shlb
outsb
push
push
adc
ljmp
daa
pop
ret
push
sbb
push
cli
jle
mov
jmp
pop
cli
pusha
out
das
mov
jbe
fsubrp
fldcw
ret
add
les
or
add
inc
or
jne
out
stos
sbb
mov
mov
xor
mov
add
ss
pop
lods
aam
xor
inc
into
and
repz
js
jbe
xor
in
jnp
xchg
jo
leave
pop
iret
aam
inc
mov
xlat
mov
icebp
mov
and
and
jmp
jne
add
subl
xchg
jl
jbe
addr16
and
ja
push
jno
lahf
ficoml
aaa
and
mov
inc
lea
rcll
mov
stos
outsl
jp
cmpsl
cld
mov
sub
xor
mov
stc
scas
in
mov
mov
imul
sbb
push
sahf
popa
fstpl
negb
dec
mov
xchg
cmp
aas
inc
shll
and
test
dec
and
vmovntps
sub
add
imul
scas
fs
repz
cmp
out
cmp
push
out
das
lea
aad
adc
xchg
dec
enter
cmpsl
mov
outsb
mov
inc
lahf
icebp
push
fmull
mov
jbe
cld
xor
adc
icebp
mov
ja
mov
lods
fisubrl
sub
sti
insb
daa
push
lret
test
test
aad
inc
jnp
leave
adc
jns
fcmovbe
sbb
add
inc
pop
sbb
outsl
pop
sbb
mov
pop
mov
lret
xor
out
pop
cwtl
andl
fnstenv
inc
insl
fcoms
xor
cltd
loop
repnz
dec
mov
mov
movsl
sahf
stos
cmp
xor
push
popf
ret
inc
push
pop
lret
sarb
rorb
mov
shl
cmp
mov
cmp
jg
push
std
xchg
out
sbb
pop
fdivrs
and
adc
shlb
ret
outsb
sahf
dec
sbb
sub
dec
pushf
pop
push
mov
sub
std
cmp
dec
lods
jp
jo
mov
sbb
pushf
addr16
adc
adc
sbb
adc
mov
fnsave
cmc
vmovss
repnz
or
cld
repz
out
test
movsb
popa
mov
loop
sub
mov
push
dec
rorb
mov
jle
mov
in
pop
ja
cmpsl
dec
cwtl
inc
xor
lds
arpl
lcall
adc
divl
stos
mov
adc
cs
xor
loop
push
pusha
push
jns
cmp
repnz
daa
out
movsb
and
push
xor
inc
cs
xor
int
or
mov
into
xchg
ljmp
bound
shl
xorl
cmp
mov
jg
dec
iret
rorb
int3
in
clc
mov
sbb
cmc
cmp
xchg
gs
sub
and
xor
push
mov
ljmp
sbb
in
push
sub
dec
test
mov
pop
in
shl
jnp
mov
fmulp
add
dec
add
adcl
cmc
aaa
mov
cmp
mov
xchg
shll
push
cmpsl
out
jnp
push
psllw
rcrb
and
movsb
mov
adc
frstor
jns
movsb
stos
jmp
pop
adcb
hlt
jmp
ret
cmp
clc
jb
pop
and
and
push
pop
xchg
and
fcoml
mov
shll
jecxz
add
lcall
stc
push
stc
into
jmp
xchg
adc
xor
hlt
fmul
int3
inc
in
cmp
sub
adc
inc
inc
push
inc
lahf
add
enter
or
push
or
xor
jne
stos
sbb
adc
inc
or
mov
mov
cltd
repz
fdiv
or
data16
lds
inc
pop
stos
push
adc
roll
in
inc
jns
xor
mov
or
and
pop
xchg
xor
es
subb
dec
push
lods
cmpsl
fisttpll
out
outsl
sub
ficoml
mov
in
mov
jno
and
cmp
mov
push
fadds
cwtl
cmp
imul
pop
inc
push
adc
adc
lock
xor
cld
cmp
imul
popf
mov
or
and
mov
push
pop
sub
popa
ret
dec
dec
nop
movsb
dec
xchg
addr16
iret
ljmp
sub
stos
addr16
mov
or
dec
loop
pop
sahf
fmul
jecxz
js
test
lock
or
pop
dec
or
mov
jl
xor
xlat
add
mov
xor
mov
cmpsb
sti
inc
push
popa
enter
stc
fsubrl
cs
adc
shll
or
sub
push
mov
ja
bound
push
xchg
stos
mov
push
xor
out
push
test
mov
dec
sbb
leave
aaa
daa
pop
pop
hlt
in
std
jbe
cmpl
movsl
xor
cmc
add
das
mov
repz
mov
mov
lds
ja,pn
lods
and
push
jp
dec
push
movsb
jo
shll
jmp
mov
jmp
idivb
xorb
sbb
cmp
fdivrp
outsl
mov
lock
or
xlat
or
loope
loop
adc
cmp
jns
dec
xor
nop
pop
clc
inc
lret
xchg
mov
sub
inc
std
sbb
jp
nop
lods
in
jbe
call
pop
jb
fsubl
enter
hlt
popf
sbb
push
sbb
xor
push
fiadds
aam
dec
cli
imul
sbb
and
lcall
xor
jb
dec
loopne
xor
mov
stos
xor
mov
out
aad
inc
mov
bound
pop
dec
mov
pop
mov
aaa
jno
addr16
lods
lock
or
cmp
and
addr16
aas
sbb
and
dec
mov
bound
lea
adc
pop
lock
xchg
repnz
daa
inc
inc
nop
jbe
pusha
fsts
cltd
mov
xor
add
mov
mov
loopne
dec
xchg
shll
out
cmp
mov
add
shlb
aas
push
pop
loopne
push
mov
mov
push
imul
xchg
push
push
pushf
sbbl
push
gs
add
add
add
stc
call
das
bound
push
jae
inc
arpl
sbb
into
pop
add
pop
cmp
adc
mov
and
lods
mov
mov
insl
aam
dec
mov
sahf
dec
sarl
and
iret
adc
test
cmpsl
test
movsb
shrl
mov
mov
xor
insb
insl
gs
in
aam
mov
scas
mov
xor
xchg
dec
lea
sub
mov
shlb
sub
adc
or
out
pusha
insb
scas
jo
fcomps
lea
dec
push
dec
scas
int3
in
insl
jg
pop
lcall
dec
mov
mov
xchg
jecxz
push
xor
jbe
lret
push
mov
jg
test
int
push
mov
fs
sub
mov
dec
fsubl
out
mov
add
mov
add
jmp
nop
shrb
sub
addr16
sub
sahf
pop
fs
mov
mov
lods
lcall
push
lret
int
jmp
mov
cltd
xchg
mov
out
int
mov
icebp
jno
jno
stos
outsl
ffree
and
std
test
movsl
sbb
clc
mov
cmp
jle
mov
inc
lahf
dec
dec
xor
jle
inc
in
in
dec
repz
jbe
jl
mov
aad
dec
or
push
sub
lret
fwait
test
fimull
xor
out
jnp
idiv
mov
imul
push
testl
mov
lret
add
stos
jb
xchg
sbbl
add
insl
aad
aaa
mov
pusha
cmp
inc
mov
jns
rorl
inc
loop
mov
mov
mov
pop
stos
adc
lods
daa
ss
mov
rclb
adc
pusha
jnp
push
pop
lds
subl
addr16
cmp
cmpsb
sub
mov
cli
or
sbb
call
inc
fstl
adc
cs
ret
push
pushl
dec
cmp
sub
dec
mov
pop
mov
test
and
xchg
pop
daa
out
sarb
xor
push
aaa
popf
cmp
test
push
sbb
dec
arpl
lds
dec
nop
das
loopne
jl
fs
or
popa
imul
xchg
cld
sbb
dec
imulb
test
adc
mov
sbb
sub
add
int
in
icebp
jno
adc
inc
inc
xor
push
in
dec
pushf
in
pushf
add
pop
and
out
movsb
cmc
push
scas
push
or
sbb
icebp
inc
push
push
je
pop
sub
leave
push
xor
inc
xchg
stc
and
in
ret
jb
and
lret
xchg
leave
fistpl
imul
mov
push
ss
mov
roll
lahf
shl
movsl
and
push
ljmp
aas
out
cmpsb
addr16
cli
or
push
bound
jmp
cwtl
adc
dec
cmp
push
pop
dec
int3
movsl
or
mov
aas
sub
fldt
sub
int3
add
xchg
jnp
shl
int3
xor
adc
cmp
or
pusha
mov
jne
sbb
ret
cmc
nop
pop
add
mov
shlb
push
pop
lock
loopne
es
adc
or
fisubrs
insb
and
adc
xor
pop
ret
aam
jne
xchg
daa
ja
int
sub
xlat
fs
movsl
xlat
jecxz
outsb
and
sti
cmp
pop
xor
popa
divb
xor
divl
jae
sub
ss
subb
add
clc
test
mov
repz
mov
int3
shr
ljmp
or
pop
in
stos
xor
mov
adc
mov
jg
push
cs
outsl
rolb
daa
xchg
clc
gs
stos
test
stos
data16
lods
repz
mov
pop
mov
mov
les
repz
push
cs
dec
imul
adc
neg
int3
pop
shrl
ljmp
rorb
add
jns
xchg
xor
ljmp
jae
jne
mov
movsb
bnd
fstpt
movsl
xor
sub
out
ret
cld
iret
push
mov
arpl
sbb
inc
push
push
cltd
test
pop
aam
add
in
push
cmp
jne
and
push
pop
push
pop
pop
or
ret
pop
xorb
mov
sub
or
jne
sti
shrb
minps
cld
shll
or
xchg
inc
pop
lcall
pop
aam
adc
ficompl
or
xchg
push
clc
xchg
andps
aad
ja
popf
addr16
adc
fldt
dec
pusha
outsb
lret
xchg
leave
xchg
pop
lret
pop
in
fs
loopne
mov
test
jb
mov
fwait
shrb
pop
cmpsl
mov
push
pop
test
inc
mov
sub
loop
inc
in
cmpsb
xor
pop
lock
shr
outsb
flds
lods
movsl
repnz
fnsave
es
fcmovu
inc
xor
cwtl
loope
lods
f2xm1
xchg
lret
je
pop
push
cmp
nop
mov
jo
sub
xchg
jl
ret
cli
sbb
push
jno
pop
mov
and
mov
negl
sub
mov
xor
addr16
xor
iret
fisubl
cmpb
push
rol
rcrl
xchg
sub
push
jl
cld
outsb
ljmp
test
push
cmc
ljmp
outsb
pop
leave
xchg
inc
out
stos
jb
test
out
sbb
xor
xor
clc
or
cmpb
xlat
adc
fsubrl
push
repz
mov
sbb
pop
in
mov
jno
inc
push
roll
enter
js
push
sub
push
fcmove
push
js
in
test
and
sbb
int3
sti
xchg
arpl
aad
push
test
inc
sub
cmpsl
scas
mov
push
push
bound
arpl
jle
popa
xchg
sbb
lock
inc
rol
fildll
mov
frstor
jl
sub
incb
pop
adc
jne
insb
pop
icebp
pop
imul
and
jae
jp
popa
and
sbb
inc
lret
lock
jl
nop
aam
pop
mov
daa
mov
inc
int
test
push
stc
xchg
icebp
fadds
mov
jp
or
and
cmp
out
lret
cmc
sub
push
jb
ljmp
ficomps
and
clc
repz
xor
cld
add
mov
add
xchg
movsb
loop,pt
and
or
xor
mov
or
pushf
jg
cmpsb
mov
nop
jne
lea
add
leave
scas
cltd
sbbb
mov
jnp
push
clc
outsb
mov
adc
int3
gs
push
mov
sub
inc
imul
cltd
bound
xor
shlb
or
adc
cmp
ret
and
mov
and
inc
fcoml
outsl
cltd
cmp
jae
xlat
jne
or
lret
push
out
lods
sub
push
jl
cs
out
movb
ret
and
movsb
repz
decl
sbb
mov
sti
push
sub
xchg
movsb
loopne
mov
push
fcmovnu
and
lahf
lods
outsb
jmp
inc
pop
int
loop
stos
cltd
jle
push
divb
lds
xor
mov
xor
mov
arpl
sti
dec
xorb
in
insb
clc
sbb
pop
mov
ljmp
xor
hlt
push
mov
je
call
and
repnz
mov
das
jl
push
add
xor
xchg
cmpsb
push
xchg
sub
cmc
sbb
cmp
push
add
out
int3
fists
outsl
pop
add
push
jge
pop
pop
xchg
lods
xor
and
test
pushf
inc
decl
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
ret
mov
bsr
xor
inc
mov
dec
in
xchg
in
call
dec
cmp
push
jp
pop
cmp
jo
push
and
xchg
xor
inc
fildl
mov
or
pop
repz
repnz
int
xor
mov
ss
negl
stos
mov
mov
fwait
je
cltd
add
outsl
nop
ljmp
lea
fistpll
lea
adc
xchg
je
stos
hlt
dec
cmpsl
pushf
sti
xchg
rcrl
daa
add
sbb
repnz
ret
jecxz
dec
mov
inc
pop
inc
leave
gs
pusha
add
sbb
imul
out
aaa
cmp
out
repnz
pop
mov
adc
jmp
sti
ja
mov
inc
xchg
insb
cmpsb
mov
loop
addr16
out
loope
adc
or
lcall
jnp
xlat
popf
adc
push
jno
add
cmc
jl
xchg
pop
mov
aad
lods
out
outsl
stos
inc
fs
mov
roll
mov
loop
sbb
xorl
lcall
cmp
mov
push
mov
pop
cmp
dec
xchg
enter
push
xor
dec
aam
pop
test
aas
iret
ret
aad
xchg
jg
rolb
mov
mov
jmp
adc
jp
and
call
add
xor
std
nop
mov
les
sbb
xlat
inc
ja
xor
xchg
shlb
addr16
sub
flds
loope
cmp
inc
sti
push
cmp
adcl
xlat
popf
push
and
fwait
sbb
shrb
ret
lcall
lcall
cmp
stc
pop
enter
loopne
xchg
dec
cltd
and
xchg
push
mov
sbb
and
hlt
push
xchg
shl
sbb
jp
push
dec
mov
rcll
pop
sbb
js
pop
cmp
fisubrl
in
xor
mov
mov
cmp
and
dec
popf
out
jns
pop
sbb
lds
stos
add
fwait
lret
push
call
push
push
inc
fs
push
or
fcmove
sub
jge
daa
imul
sbb
jns
xor
insl
in
mov
in
inc
jae
nop
or
in
cmp
pushf
xor
pushf
ret
icebp
jo
in
or
pop
loop
xor
pop
enter
cmpsl
jno
sbb
pop
push
mov
lret
lret
xlat
fs
addb
mov
aad
je
fwait
add
pop
mov
adc
adc
sahf
pop
aaa
inc
cld
sub
mov
lds
inc
push
loopne
cmp
out
fisubl
push
jg
sbb
pop
jbe
mov
and
sbb
scas
test
iret
push
xchg
and
push
inc
and
in
aas
mov
test
hlt
sahf
and
cmp
adc
mov
dec
loopne
fs
mov
ds
jns
lods
pop
in
adc
sbb
add
movsb
cld
cli
addl
mov
imul
xchg
dec
push
sub
iret
jp
adc
dec
sbb
jecxz
in
sub
sahf
iret
sarl
add
daa
ret
sbb
int
xchg
jne
jmp
imul
and
fisttps
insl
cmp
test
hlt
gs
jg
rol
push
lret
cmp
ds
xchg
dec
lret
jns
sub
adc
dec
sub
ja
mov
mov
mov
adc
xor
out
cmp
in
sahf
sub
push
cltd
sbb
iret
mov
adcb
in
test
sahf
mov
test
fstps
fiadds
mov
imul
add
rcll
jns
movl
or
sub
or
cs
mov
adc
xchg
lret
inc
pop
and
cmp
inc
xchg
xchg
push
outsl
xor
adc
push
mov
xchg
jae
cmpsl
or
ss
jb
shlb
les
pop
jge
hlt
sbb
pop
mov
jg
mov
aam
push
les
out
loopne
daa
xlat
fwait
jge
mov
or
push
das
push
int
imul
outsl
push
xchg
lcall
mov
cmp
jmp
fisubs
cmp
add
adc
push
push
dec
in
jge
mov
dec
cmp
frstor
pop
dec
inc
dec
lret
mov
and
mov
xor
lods
fsubs
pop
mov
filds
enter
in
cmp
sar
mov
push
inc
jl
stos
xor
cmpsb
push
sub
rcll
fwait
jle
sbb
mov
pop
xchg
push
or
loope
test
lods
sarb
pop
push
pushf
aas
dec
xchg
movsl
cwtl
adc
xchg
jl
incl
mov
add
xchg
lret
pop
ja
mov
rolb
pop
sub
xor
mov
cwtl
cwtl
out
lods
jmp
pop
adc
addb
pop
fs
cli
lock
inc
dec
lock
inc
addr16
mov
pop
imul
xor
cli
stc
aam
sbb
shrb
int
mov
or
xchg
add
jne
jo
cmpsl
jg
lret
inc
xchg
jno
loopne
mov
mov
mov
in
push
or
sub
jge
dec
out
adc
loopne
mov
sub
xchg
push
and
dec
out
sbb
xor
dec
cmp
popa
sub
sub
cmpsl
xchg
in
push
rolb
enter
add
add
jl
andb
push
push
jno
sbb
push
cltd
testl
pop
int
cmp
xchg
movsb
imul
sar
sbb
shll
mov
das
inc
clc
dec
mov
push
mov
loope
sub
mov
ljmp
test
jmp
and
xchg
fisubs
in
xor
lds
lds
push
inc
adc
adc
out
cwtl
mov
addb
adc
jl
inc
xor
jne
jns
pop
xor
or
sub
xor
mov
pop
outsb
aas
fcoms
or
mov
fdivrs
js
in
lds
shrl
pop
out
sbbb
xchg
cmpsb
pop
mov
popf
scas
daa
lds
gs
mov
or
lods
ljmp
lcall
jnp
stc
movsb
loop
mov
adc
inc
inc
push
gs
push
push
jmp
sbb
push
adc
xchg
int3
xchg
adc
and
das
sub
das
mov
dec
cmp
int
int
inc
inc
inc
dec
shll
mull
push
js
out
or
ds
fcompl
imul
idivb
std
daa
jl
js
nopl
sbb
fadd
imul
xchg
test
xchg
dec
push
pushf
cmp
add
xchg
cmp
in
out
jp,pt
daa
daa
outsl
jb
sub
xchg
inc
aad
dec
jbe
mov
aam
test
lret
es
fstp
lahf
pop
mov
pushf
sub
and
test
call
dec
and
jp
mov
stos
mov
rcrl
movb
test
add
push
add
rorb
dec
nop
notb
push
andb
add
xchg
shrb
leave
or
push
and
mov
test
jne
mov
aaa
icebp
sub
ret
and
cmpsb
test
sub
cltd
lods
test
sahf
or
inc
mov
daa
mov
lock
add
fldcw
loopne
xchg
daa
push
rcrl
out
outsl
mov
xchg
inc
jg
cmp
call
mov
icebp
xchg
mov
lock
xor
adc
in
xor
xor
cmp
push
gs
cmp
pop
mov
fbld
add
loopne
shr
push
pop
imulb
mov
aas
jg
jne
cmp
and
pop
icebp
jb
ret
lea
xor
insl
imul
push
rcrb
sbb
xchg
and
outsb
push
test
test
pop
enter
adc
lcall
and
movsb
cwtl
add
mov
sbb
pop
push
ss
fcomip
dec
dec
jmp
out
cmpsb
ljmp
push
mov
js
sub
ja
xchg
data16
jecxz
add
or
popf
sub
pusha
cmp
loopne
movsb
and
cli
mov
ds
test
cmp
jecxz
cs
mov
test
xchg
jmp
iret
je
inc
or
lds
fidivrl
or
lahf
je
and
or
push
cmp
inc
test
in
punpcklbw
in
jo
add
fcmovne
loopne
mov
js
inc
xor
or
sub
mov
cwtl
add
mov
outsb
stos
cmpsb
ret
repnz
stos
fldenv
addb
incl
xchg
pop
nop
test
std
push
test
and
jge
fbld
rcr
lahf
sub
in
dec
movsb
xor
rcrl
sahf
aaa
popa
orb
outsl
xchg
stos
repnz
jbe
jbe
mov
in
push
inc
mov
push
mov
mov
inc
sbb
loope
mov
iret
sub
mov
scas
loope
xor
jno
sub
mov
dec
mov
xor
adc
jns
mov
ret
mov
int
cmpsl
xchg
mov
subb
xchg
stos
nop
and
dec
loop
jge
or
push
dec
inc
inc
mov
ja
stc
flds
xchg
and
jns
xchg
lods
leave
enter
int
pop
jno
divl
xchg
push
cmp
push
lock
ds
mov
push
and
pop
inc
les
pop
pop
lret
mov
and
fsubrs
cmp
inc
jle
xor
ljmp
repz
test
fs
xor
xor
pop
roll
pop
dec
pop
sbb
into
cmp
stc
in
mov
aam
xchg
lods
jns
mov
stos
lds
mov
test
bound
imul
mov
outsb
sub
arpl
add
popa
popf
cli
mov
iret
pop
push
push
push
fcomps
dec
add
lods
sub
mov
add
fnstcw
setge
shll
fstpt
dec
inc
push
dec
xchg
loope
adc
jo
aas
xor
push
xchg
or
add
lock
loope
pushf
add
sbb
xchg
adc
gs
lock
fstpl
movsb
push
xchg
cmp
movsb
in
in
jae
mov
sarb
inc
je
jne,pn
mov
and
pop
pop
ret
nop
dec
jbe
aad
mov
aam
or
jae
rcrl
push
inc
adc
xor
aaa
ficoml
repz
sahf
adc
jge,pn
dec
lret
bound
fcomps
mov
lods
in
loop
push
sub
push
rcrb
out
je
ret
xchg
push
andl
push
sti
mov
inc
sbb
sub
lds
jne
stc
xor
cld
orb
push
loope
shrb
adcb
adc
jb
sub
mov
loopne
push
push
add
rcl
neg
mov
aam
out
xchg
pop
or
pop
addr16
iret
out
sbb
mov
testl
pop
xor
cld
add
test
iret
pop
mov
mov
lahf
xchg
xor
mov
shrb
sbb
mov
movsb
sub
jne
xchg
cmpsb
popf
inc
pop
xorb
push
mov
lods
shrl
rolb
push
adcb
xchg
pop
add
push
or
bound
gs
sbb
dec
sahf
mov
das
add
stc
inc
adc
adc
xor
enter
jg
adc
xchg
iret
das
rcrb
jnp
jno
mov
testl
mov
or
adc
loop
scas
jg
aaa
outsb
xchg
jno
jmp
hlt
adc
ja
mov
push
add
hlt
dec
test
int3
es
sub
ret
movsb
adc
pop
jl
mov
jns
into
or
xlat
das
fbstp
xorb
rol
dec
xor
xor
pop
ja
and
fdivrl
adc
out
loop
mov
sub
hlt
push
inc
xchg
std
test
jno
pop
cmp
out
sbb
jae
int3
jl
test
dec
icebp
mov
inc
sbbl
test
idivb
ret
es
data16
sub
ffree
sbb
cmp
vmwrite
rolb
popf
aad
pop
idiv
inc
outsl
xor
test
popf
fs
dec
fstpt
stos
xor
rcrl
fndisi(8087
mov
fs
repnz
xchg
or
ss
xor
in
adc
cli
icebp
push
fnstenv
psllq
arpl
mov
xor
xor
lcall
mov
imul
mov
push
adc
or
xchg
xlat
popf
add
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
push
sub
cmpsl
xchg
jno
mov
int
jg
mov
lret
fmuls
loope
xchg
pop
fs
in
xchg
insl
or
test
adcb
outsb
cld
xorl
pop
mov
dec
stc
aad
push
sub
in
mov
pop
push
dec
ja
adc
mov
cwtl
and
into
xchg
dec
jno
xchg
mov
sub
xchg
sub
nop
push
pop
int
idivl
shll
mov
popa
scas
enter
dec
shr
xchg
adc
int
movsl
push
cmpsl
cmp
ja
adc
xchg
pushf
xor
adc
icebp
xor
adc
lret
pop
xlat
iret
push
jmp
imul
leave
xchg
and
cmp
lret
mov
jecxz
ret
xor
jo
adc
add
dec
aam
adc
into
pop
mov
push
or
popa
popa
pop
adc
jae
mov
ret
fildl
xchg
fadds
popf
addb
out
push
xchg
nop
mov
sarl
inc
mov
outsb
pop
fmuls
lret
call
lds
stc
outsb
jns
mov
jl
mov
shlb
movl
pushf
add
fsubrl
hlt
ja
mov
loopne
pop
mov
jle
sbb
cltd
es
adc
jg
dec
xchg
repnz
fsubs
xor
imul
jno
xor
stos
adc
xor
outsb
fst
xor
std
or
in
out
jge
pop
pop
pop
stos
shll
inc
cmp
std
stos
adc
cmpsb
sbb
xor
repnz
mov
pop
decb
xor
fidivs
jbe
lahf
mov
fildll
cmpsb
mov
sbb
add
jno
add
sub
inc
dec
addr16
outsb
adc
mov
dec
cmp
jns
or
ret
sbb
and
scas
push
sti
add
movsl
jmp
fs
push
push
mov
jmp
sbb
xor
and
gs
cs
add
xchg
stc
outsl
call
out
andb
pop
in
or
lahf
inc
mov
int3
leave
rcrb
pop
pop
aaa
out
in
ret
arpl
mov
lret
test
mov
lock
imul
push
lds
sub
cs
cmpsb
hlt
jl
bound
shll
insl
cli
gs
addb
xlat
notl
cmpsl
dec
and
or
push
jle
pushf
cs
inc
pop
xorl
andl
dec
ffreep
xchg
xchg
lds
iret
addr16
shll
stc
sub
pusha
pop
test
mov
testb
push
mov
into
push
loope
lea
push
int
or
inc
aad
and
and
scas
pop
xchg
out
mov
lahf
or
pushf
and
out
xor
les
mov
cs
inc
dec
idivl
cld
mull
pop
int
and
shll
hlt
mov
add
push
test
fwait
inc
jns
and
dec
xchg
mov
stos
push
mov
jge
adc
adc
or
jae
movsl
inc
popa
jne
jle
xor
jbe
fnstsw
lret
incl
adc
sbb
jno
in
js
push
addb
rolb
or
es
pop
dec
push
xchg
shrb
add
sbb
js
insb
outsb
jp
cmpsb
xlat
fisubrl
sbb
mov
dec
daa
xchg
or
push
pop
pop
inc
repnz
lock
arpl
adc
cmpsl
or
cmp
sub
push
mov
push
pop
add
mov
shr
and
or
stc
repnz
bound
in
dec
push
lea
dec
inc
movsb
ret
lock
adcl
xor
cmp
inc
xor
andl
std
cmpsb
jge
mov
lret
fcompl
jb
push
dec
or
cwtl
fildl
add
sarb
das
nop
push
dec
jl
js
mov
xor
xchg
es
decb
adc
mov
mov
lea
adc
inc
inc
lret
pop
loop
scas
inc
push
xor
pop
in
jnp
xchg
out
outsb
xchg
lock
jge
adcb
push
mov
xchg
lds
mov
cmpb
es
sahf
fildl
sbb
mov
jg
xor
mov
pop
cli
mov
mov
and
jno
ss
pop
push
xor
push
or
scas
cli
xor
stc
fildll
sub
cmp
or
pop
xor
mov
in
sbb
or
in
adc
das
adcb
xorb
fimuls
mov
add
and
fildll
xlat
adc
sbb
xor
sub
movsl
dec
pop
jb
mov
push
vmovhpd
xlat
xor
cltd
or
out
movsb
jle
fcoms
aam
sub
fdivs
push
std
or
ljmp
mov
sti
add
loope
sbb
inc
sbb
aad
bound
jne
and
out
add
insb
pop
mov
mov
dec
mov
iret
add
lcall
dec
scas
arpl
loopne
or
or
mov
hlt
fdivs
pop
mov
sub
daa
xor
imul
pop
push
imul
pop
dec
pop
arpl
adc
mov
mov
ss
fisubl
popf
xorb
and
add
aad
sarb
rorb
cmpb
inc
lcall
scas
aas
sub
push
sbb
cmpsb
add
pop
in
xor
pop
insl
pusha
mov
int3
scas
out
sub
loopne
pop
cmp
ret
sub
sub
dec
rcrb
flds
push
mov
daa
fwait
pop
addl
mov
loopne
jmp
aad
or
jno
cwtd
pop
sarb
push
mov
sbb
push
rorl
arpl
popf
jnp
mov
ss
add
adc
dec
ror
xchg
repz
ret
addr16
jp
sub
stc
ss
xor
adc
or
xlat
mov
adc
push
pop
std
cmc
inc
pop
into
add
hlt
mov
cmp
pusha
cmp
stos
shr
jmp
das
inc
sub
cmp
mov
push
shll
and
jne
leave
sbb
out
pop
pop
dec
fnstsw
jo
imul
or
pop
addr16
adc
lock
jb
dec
pop
inc
mov
jbe
clc
jge
into
cmpsl
sbb
scas
inc
stos
sub
pop
popf
push
mov
push
jmp
daa
into
add
and
mov
scas
fsub
jb
or
pusha
mov
sub
notb
push
adcl
mov
pop
dec
fnstsw
or
jb
fwait
xchg
and
out
bound
mov
jl
cld
cli
lods
push
sbb
xchg
clc
xor
pop
add
cmpsb
scas
test
jne
jle
xchg
rep
jns
xchg
cs
sub
xchg
adc
mov
shll
cmpsl
pop
das
dec
jecxz
out
xchg
mov
push
push
mov
mov
cmpl
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
adc
sbb
jno
cmp
jl
jp
mov
aad
shrb
dec
ljmp
test
popa
imul
cmovle
lods
aad
pushl
leave
adc
dec
adc
and
std
ds
and
xchg
xchg
test
cwtl
mov
dec
push
sahf
shl
inc
adcb
cld
xchg
cmp
movsb
mov
mov
mov
lea
sbb
jbe
loope
mov
inc
or
jle
cltd
das
cmp
pop
mov
xchg
and
gs
insb
xor
lcall
mov
xchg
out
xchg
repz
mov
fiadds
push
mov
arpl
and
mov
iret
xchg
int3
adc
imul
mov
sub
cltd
push
jo
data16
adc
jno
xchg
mov
xor
outsb
cwtl
aad
lcall
pop
jp
cmp
int
stos
adc
subb
mov
out
cmpsl
mov
ss
cmp
lds
es
aad
out
fcmovnu
lea
mov
dec
ret
adc
push
pop
fstpl
jnp
repnz
xorl
in
imul
cwtl
jns
fmull
bound
dec
test
pop
jg
in
insl
int3
int3
lret
je
xor
pop
adc
outsb
mov
imull
scas
add
aas
pushf
cmp
xor
mov
es
lds
cwtl
sbb
ja
pop
add
icebp
inc
pop
stos
push
xchg
pop
loop
sahf
xor
loope
cmove
push
or
cmp
cmp
dec
add
je
xor
cld
int
mov
nop
cmp
ja
mov
push
fwait
jae
add
fucomp
inc
mov
insb
xor
mov
add
jecxz
push
jp
add
push
sbb
shr
leave
cwtl
pop
lods
mov
lret
in
dec
cmpsb
lret
xor
mov
mov
sbb
enter
call
xchg
or
xor
fbstp
aam
stos
jl
and
cmp
sub
out
cmp
mov
mov
scas
or
add
push
cmpsl
shlb
setl
andl
stos
cs
pop
mov
das
mov
jne
xorb
adc
or
lods
mov
outsb
xor
int3
adc
push
inc
push
push
jns
fistps
cld
jbe
push
loopne
push
inc
mov
in
dec
jb
imul
ds
cli
pop
movb
aas
pop
and
out
jl
adcb
int3
inc
cwtl
mov
xor
mov
push
scas
test
add
push
fiaddl
pop
fwait
out
jns
jl
insb
add
aaa
add
out
shl
bound
mov
lret
jge
and
jo
imul
xchg
xor
xor
lock
cli
xchg
inc
int3
es
pop
test
mov
pop
lcall
mov
repz
lcall
mov
cmpsl
out
pusha
and
inc
mov
repnz
out
fwait
jo
js
and
daa
test
push
pop
push
cs
test
repnz
dec
faddl
mov
sarb
pop
pusha
jle
in
pop
lret
shrl
out
jno
sbb
mov
mov
push
ss
add
adc
cmp
sub
xchg
pop
fstps
dec
pop
xchg
push
and
pslld
mov
je
pop
fimull
or
fidivl
dec
fs
jo
sarb
test
iret
sar
pop
lds
adc
inc
add
sub
dec
scas
xor
imul
jl
ja
cmp
dec
js
xor
fs
mov
out
test
inc
xchg
xor
in
cwtl
xchg
jmp
push
pusha
sub
inc
lcall
jbe
lds
cmp
mov
or
mov
cli
lods
jle
fdecstp
xchg
in
sbb
lea
xchg
mov
add
loop
or
push
jg
mov
sub
cli
sbb
push
sub
out
sbb
aam
inc
mov
jge
jecxz
and
jbe
pop
sub
icebp
loope
mov
loopne,pt
orb
int
cmp
jle
cld
mov
xor
nop
mov
aas
mov
inc
jno
or
hlt
pop
js
or
push
addr16
mov
mov
lods
lretw
stos
gs
cmc
mov
push
xchg
push
dec
stos
fwait
xchg
sub
loope
out
repnz
push
add
xchg
push
xchg
or
mov
push
cmp
push
out
xchg
pop
add
movsb
sahf
ss
mov
int3
ret
xchg
xchg
loope
inc
jg
mov
push
jmp
cmpsb
or
mov
pop
hlt
mov
lret
iret
clc
ja
mov
sbb
lea
xor
sbb
push
pop
mov
jae
aad
sbb
push
iret
test
loope
fstpt
nop
sub
loop
loopne
or
aam
cmp
rorl
or
cltd
cli
ja
test
inc
cmp
pop
xchg
sub
out
rclb
dec
scas
out
lret
push
sbb
xchg
pop
testl
adcl
adc
inc
fsubs
adc
mov
xchg
jl
or
ss
mov
orl
outsl
je
clc
imul
aas
pop
enter
mov
shll
sub
jne
jo
fsubl
fs
inc
sub
negl
fstl
adc
frstor
movsb
jns
icebp
xchg
push
js
inc
or
sbb
andl
jbe
ficoml
ficomps
cmpsl
xor
xlat
std
aad
cltd
shlb
or
pop
sub
mov
pop
cmovns
mov
mov
ret
dec
test
add
mov
out
and
repnz
cmpsb
add
push
ret
ds
repz
dec
or
les
or
aad
mov
fs
adc
jg
cwtd
push
in
jmp
cmp
xchg
outsb
sbb
movsb
stos
imul
push
scas
cmc
xchg
std
pop
outsl
or
mov
mov
or
in
xacquire
xor
fidivl
es
pop
push
adc
mov
mov
mov
stc
pop
aas
or
mov
mov
cmp
jbe
stos
lret
sbb
push
je
arpl
and
xor
xchg
xchg
dec
cwtl
and
scas
push
jno
arpl
shlb
loopne
and
sbb
mov
jae
jns
push
push
add
pusha
fdiv
mov
and
jo
and
scas
jp
lea
mov
adc
jmp
inc
xor
or
jmp
sub
adc
lret
add
or
sti
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
lea
adc
addl
lret
sub
pop
sti
repnz
mov
fs
push
pop
in
idiv
pushf
inc
in
lea
xor
lock
mov
ret
scas
scas
sub
adc
cs
nop
arpl
xchg
aad
sahf
ret
inc
fwait
shlb
shl
gs
roll
iret
enter
or
add
jle
subb
xchg
pop
jecxz
setge
lret
cmp
arpl
cli
fwait
aad
ss
mov
mov
jl
mov
xchg
mov
int3
xor
mov
and
outsl
icebp
mov
stos
out
leave
mov
notl
pop
int3
in
push
das
mov
mov
out
repz
iret
pop
subb
xchg
dec
popa
mov
sbb
shl
lret
mov
mov
mov
gs
dec
enter
clc
cmpsl
xchg
mov
dec
pop
adc
loop
adc
inc
or
jmp
lea
imul
mov
cwtl
sub
stc
movsl
mov
xchg
popf
in
sub
pop
jnp
add
lods
dec
jmp
xchg
xor
and
dec
lods
cmpsl
fildll
gs
fisubrl
shl
sahf
mov
insb
jge
ljmp
xchg
pop
call
or
push
xchg
aas
stos
in
mov
mov
add
mov
xor
bound
lret
xlat
inc
cwtl
imul
pop
dec
lds
in
jmp
into
outsb
push
sub
gs
mov
xchg
mov
mov
sub
jge
mov
incb
insb
cmpsb
cld
call
inc
loopne
adc
fcompl
mov
dec
lcall
fldenv
push
or
fstp
xor
pop
jp
nop
xchg
lock
jae
lahf
cmpsl
add
jge
vprotd
or
lds
sbb
inc
dec
inc
into
xchg
pop
xchg
ljmp
out
jg
cmpsl
jecxz
pushf
imul
jnp
mov
movsl
aam
inc
cwtl
std
mov
lds
mov
cmp
lods
ds
or
dec
imul
dec
jle
push
sets
in
movsl
mov
faddl
leave
into
int
movsl
push
das
sbb
out
jbe
call
cmpsb
adc
xlat
stos
cmp
aad
and
arpl
rclb
inc
sub
sbb
insb
orl
jns
push
js
push
gs
fcmovb
inc
dec
inc
push
xchg
fnstsw
test
dec
dec
iret
xor
or
roll
add
push
pushf
ret
cs
jle
xor
dec
scas
jecxz
loope
stos
sub
and
ret
sub
jae
rcr
push
mov
jbe
jo
mov
lea
js
push
test
lcall
sub
cwtl
jge
xor
shll
mov
jnp
fildll
jns
idivl
fs
jnp
fldt
mov
pop
dec
fmuls
in
fmul
xchg
cmp
je
shll
daa
mov
mov
lret
test
jae
xchg
outsl
in
out
cli
sub
sbb
mov
andl
and
adcb
adc
pop
iret
shll
push
stos
pop
adc
mov
test
lods
in
xchg
je
ds
inc
rcrl
pop
daa
aad
xchg
rorb
add
mov
jns
aad
add
nop
xchg
mov
and
lret
sbb
outsb
ret
add
lods
push
stos
or
xorl
shlb
stc
fistpl
push
fdivl
sbb
sbb
ljmp
sbb
push
loope
aas
pop
fimuls
pop
or
popa
adc
fsubp
cmpsl
and
jle,pt
mov
in
sbb
int3
pushf
es
daa
out
sub
xchg
pop
rcrb
shlb
mov
dec
leave
add
repnz
cwtl
popa
in
fidivrs
jne
ja
pop
out
adc
xchg
push
jne
adc
daa
loop
mov
cmp
mov
aaa
inc
lea
or
mov
cmpsl
das
mov
inc
cld
loopne
gs
lods
pop
mov
push
sub
ljmp
bound
sub
mulb
aam
dec
cwtl
xchg
aaa
push
pop
leave
cmp
loope
pop
nopl
popf
xor
inc
dec
xor
add
imul
mov
dec
in
mov
jbe
scas
stc
xor
mov
outsb
push
mov
ror
fcomip
jg
or
xor
mov
lcall
inc
mov
pop
das
or
xchg
insb
jae
ds
scas
daa
push
fstpt
decb
pop
push
mov
hlt
inc
test
cltd
or
call
cmp
stos
nop
stos
hlt
jae
lods
ds
movsb
negl
mov
cli
movsb
xchg
fsubr
decl
mov
xchg
adc
repnz
loopne
cli
sub
es
sarb
out
jne
std
iret
into
dec
adc
fcomp
hlt
arpl
bound
sahf
inc
cwtl
lock
aad
pop
icebp
dec
lea
mov
mov
dec
push
cmp
pop
int
aam
fneni(8087
cmp
stos
loopne
mov
test
loope
pop
pushl
jne
sahf
loopne
pop
jbe
lahf
inc
add
and
adc
arpl
mov
fldcw
fiadds
das
dec
fs
xchg
and
leave
inc
es
inc
xlat
mov
mov
adc
pop
popf
mov
ljmp
mov
lods
mov
fdivl
stc
int3
mov
lds
adc
sti
pop
add
pop
pop
add
adc
outsb
shl
adc
mov
icebp
dec
inc
insb
push
sahf
lds
dec
fmuls
cs
jno
addl
mov
aam
popa
out
lcall
icebp
sub
out
mov
cmp
into
cs
fcomip
cmc
push
hlt
pop
mov
sub
jmp
dec
pop
aam
out
fistpll
bound
xchg
in
cmp
rorb
cmp
insb
adc
or
and
jb,pt
xor
jb
femms
jns
into
push
sbb
pop
nop
cmpb
adcl
enter
ds
pop
dec
push
lcall
icebp
xor
and
lret
ds
sbb
ljmp
pushf
mov
xchg
mov
je
mov
test
arpl
push
or
dec
jbe
jl
shll
sub
and
cmpsl
dec
fists
mov
arpl
test
pushf
dec
popa
add
lahf
nop
lock
in
push
sub
fst
mov
mov
adc
lea
or
cmp
mov
lret
mov
call
push
or
cmc
lret
popa
aad
mov
sub
mov
outsl
sub
push
push
sbb
sub
adc
cmc
loop
sbb
adc
push
cld
dec
in
gs
es
call
sti
out
leave
mov
add
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
cs
xchg
add
add
fldcw
mov
lea
repz
lret
lods
sub
mov
push
js
mov
sbb
adc
pusha
add
mov
mov
push
inc
fdivs
add
dec
ds
sbb
push
dec
icebp
push
push
pop
popf
or
jmp
mov
aam
or
notl
cmc
js
icebp
aas
lret
add
stos
mov
jg
pushf
dec
cmc
negl
insb
mov
lds
in
inc
clc
lods
lods
add
ss
aas
pop
push
icebp
sbb
loope
cmp
inc
mov
sbb
out
xchg
hlt
jno
xchg
stc
cmp
test
add
sub
repnz
scas
sub
sbb
sbb
jge
sti
aas
ljmp
pop
pop
push
jmp
rcrl
jo
out
xor
movsb
push
lret
nop
test
sub
mov
je
push
popf
fsub
xchg
sbb
mov
or
lods
daa
fsubs
adc
mov
inc
jne
pop
leave
xchg
stos
jge
adc
xchg
mov
test
shlb
sbb
mov
pop
xor
sbb
popa
cmpsb
rolb
push
out
test
push
rorl
push
fstps
sub
add
jge
lret
or
push
stos
mov
cmp
repnz
hlt
out
addr16
sub
dec
aas
movsb
lcall
mov
pop
mov
sbb
pop
popa
test
in
mov
xchg
cmp
or
adc
adc
aaa
repz
scas
mov
movsb
pop
cmp
mov
jb
mov
sbb
xor
mov
sbb
mov
lock
sbb
ret
add
mov
cmpsb
out
adc
cwtl
clc
dec
ljmp
lds
jno
enter
mov
pop
stc
shll
das
push
repnz
dec
or
shlb
movsl
jl
xor
dec
mov
out
rcrl
stc
jo
fwait
inc
imul
pop
lcall
std
pusha
add
mov
or
mov
cmp
xor
jecxz
inc
xor
punpckhbw
enter
sub
sub
push
repnz
push
cmpsl
push
in
jae
and
sti
cwtl
mov
or
xor
jecxz
jl
cld
fnstenv
add
es
pop
cld
mov
lods
aas
mov
das
fists
das
mov
xchg
jecxz
loop
sub
in
mov
sbb
aas
das
cli
adc
femms
iret
push
fisubrs
cltd
testb
fidivs
in
push
mov
out
mov
sar
jae
stc
test
push
popf
and
outsl
lea
push
scas
test
sbb
shll
inc
pop
adc
loope
mov
ljmp
mov
adc
cld
ficoms
xchg
cmc
or
and
adc
sbb
rcll
test
nop
mov
call
sub
lods
std
xchg
ret
push
ja
sbbb
pop
mov
mov
mov
dec
pop
mov
push
divb
movsl
pop
dec
or
in
jle
leave
push
stos
cwtl
pusha
in
xor
xor
imul
pusha
and
mov
aam
jmp
sub
sahf
insl
aas
pop
arpl
ds
imul
inc
xlat
push
jp
iret
xorl
sbb
xchg
scas
pop
push
cmp
sbb
xor
sbb
lods
sub
clc
sbb
inc
inc
adc
sbb
xor
mov
movsb
xor
or
insb
subb
leave
pop
and
stc
jg
mov
sarb
mov
cli
js
fistpll
pop
stc
jl
mov
ds
jle
andb
dec
out
repnz
je
ljmp
and
mov
jp
pop
andl
ror
and
repz
mov
fiaddl
or
pop
xor
xchg
ss
out
fsub
addr16
test
lods
dec
xor
roll
dec
mov
insl
dec
jbe
cmp
adcb
idivb
cmpsl
inc
insb
out
mov
inc
push
subl
cmpsl
sub
xchg
dec
mov
xchg
adcb
aad
repz
div
push
or
push
cmp
pushf
mov
pop
fs
sub
cs
stos
flds
nop
mov
cmp
add
orb
fistps
cmpsb
pop
mov
xchg
pushf
fnstcw
stc
or
push
lods
jo
sahf
enter
fsubrs
pop
movsl
mov
sbb
mov
in
jmp
test
mov
insl
mov
jge
dec
dec
xchg
sbb
xchg
xor
mov
pop
call
push
pop
push
xchg
leave
xor
addb
pop
rcr
cmpsl
pushf
cmp
add
sub
xor
into
jne
mov
sbb
inc
inc
shl
repz
ret
repz
scas
dec
movsl
arpl
inc
imul
xor
lds
mov
mov
jnp
or
jmp
jns
or
xlat
cmp
pop
adcl
aad
mov
gs
or
test
mov
pop
xor
dec
mov
in
mov
jge
add
pop
mov
ja
pop
pop
push
ljmp
aad
test
xchg
pop
dec
out
addb
cmp
cltd
arpl
aam
push
mov
cmp
stos
pushl
test
jl
or
insb
out
sbb
sti
sbb
and
xchg
sbb
push
pushf
aad
mov
push
jbe
inc
adcb
xchg
cltd
adc
xchg
negb
test
cmp
out
add
add
sub
cwtl
fistps
int3
stos
push
aaa
ret
popa
iret
or
pusha
and
jno
inc
cmp
cmpsl
lcall
aad
ficomps
xor
add
insl
cmp
sti
adc
push
shr
mov
ss
sarl
xchg
mov
sub
in
sbb
fidivs
mov
sub
lods
lods
push
sbb
call
dec
stos
sbb
pop
repnz
jnp
imul
inc
jecxz
in
xchg
dec
ds
int3
gs
stos
xchg
movsb
test
movsl
adc
test
xor
outsl
inc
mov
mov
out
inc
mov
adc
fnstsw
mov
clc
fs
cmp
scas
out
push
aam
add
rcrb
push
out
mov
mov
repnz
jno,pt
fistl
mov
andb
pop
lods
dec
mov
jae
fisubrl
scas
sbb
or
pop
and
stos
sbb
insb
xchg
xor
or
movsl
jns
mov
push
nop
pop
call
push
test
jb
jecxz
icebp
imul
outsb
and
mov
xchg
add
dec
ret
rcr
inc
push
insb
popa
mov
outsb
mov
fs
mov
lock
jo
push
add
and
enter
adc
in
call
jl
rorl
adcb
pop
mov
mov
lods
ja
sub
arpl
push
stos
jnp
mov
out
adc
push
push
pop
repz
repz
mov
adc
mov
cmpl
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
cli
in
fadds
dec
or
adc
mov
mov
jp
js
outsl
in
pop
fidivs
mulb
popa
in
mov
xor
pop
inc
mov
xchg
mov
idivl
lcall
sbb
xor
xor
pop
stos
fidivrs
scas
jns
mov
lds
test
fs
in
sub
fwait
in
sub
icebp
push
aaa
or
arpl
xchg
jbe
andl
mov
pop
in
popa
or
in
addb
test
xchg
cmp
mov
mov
push
jmp
push
adc
dec
jg
inc
inc
xchg
pop
js
in
mov
push
sub
imul
add
jmp
mov
jae
xchg
popf
push
ret
sub
cmpb
call
in
outsb
add
push
jne
cmp
xchg
dec
test
push
sbb
xchg
xor
out
insl
push
into
outsl
xchg
movsb
mov
pop
aad
pop
inc
lcall
xchg
stos
shll
push
or
add
in
dec
sbb
jnp
and
movzbl
sbb
adc
mov
iret
inc
jge
cmp
mov
inc
jnp
cmp
mov
fdivs
dec
jg
sub
and
mov
jno
sbb
jbe
push
mov
negl
imul
mov
test
sub
sub
das
sbb
mov
xor
dec
lods
divb
lea
addl
popa
stos
lods
adc
jle
fs
mov
mov
jl
jp
lods
rcll
lcall
lcall
inc
mov
pop
les
push
hlt
sub
cmp
ss
int
pop
bound
ror
cmpl
sbb
jmp
mov
cld
pushf
fcmovnu
je
mov
mov
out
mov
stos
ss
fdivl
adc
mov
test
bound
test
mov
or
add
aad
ficoms
out
int
sbb
popf
adc
push
push
andb
loope
inc
or
mov
fsubrs
pushf
imul
test
repz
inc
lcall
in
aas
fmuls
ret
or
movaps
and
les
or
and
mov
mov
xor
cmp
cli
sti
shlb
dec
inc
pop
outsb
iret
ja
xor
int
lret
or
mov
clc
out
mov
mov
adc
lea
inc
xchg
sar
sbbb
push
inc
and
adc
in
pop
sbb
mov
dec
jno
inc
adc
lcall
test
popf
repz
imul
or
sbb
pop
popf
jbe
push
dec
adc
xchg
outsb
lea
mov
loop
add
inc
sbb
fcmovbe
ds
xchg
mov
popf
outsl
mov
push
jecxz
incl
aaa
movsb
in
daa
jmp
jg
lret
cmp
inc
cli
aad
shrl
fldl
xchg
dec
fwait
pop
jp
xchg
sbb
fstl
cld
pop
outsl
or
cmp
pop
outsl
das
push
cmp
ljmp
ret
ds
jns
fimull
mov
enter
pop
push
lods
rorb
sub
cmp
dec
nop
addr16
lock
divb
cmp
je
inc
lds
mov
push
inc
insb
addr16
stc
out
ss
pop
xchg
ss
adc
rcrl
out
pop
lods
mov
or
ss
pop
repz
xchg
aas
shll
out
mov
and
mov
dec
mov
enter
mov
ret
call
push
insl
adc
dec
add
dec
in
sarl
and
enter
ja
int
push
mov
addr16
repnz
mov
sub
xor
popa
xchg
stos
push
fldt
pop
outsb
and
jns
pop
ret
fdivp
jp
jmp
icebp
test
cmpsb
add
xchg
lock
in
sahf
and
into
push
and
dec
pushf
lds
aas
out
lods
mov
xchg
sbb
ljmp
ds
popf
add
int3
sub
test
lds
adc
retw
std
inc
lds
cltd
cmc
inc
fs
add
pop
cmpsb
jo
fsubr
and
sbb
and
aas
mov
outsl
jbe
int
xor
sbb
pusha
pop
fucom
ret
inc
repnz
sub
popa
add
es
mov
iret
add
xchg
and
dec
nop
outsb
test
sbb
stc
out
push
in
test
adc
stc
mov
xchg
dec
loop
adc
push
mov
add
sbb
mov
ljmp
cwtl
cltd
mov
and
push
imul
xor
outsb
add
sub
addr16
push
movsl
popa
fnstsw
cmp
js
jg
scas
or
pop
cmp
bound
mov
pop
jbe
cld
cmc
xor
lds
stos
icebp
cli
mov
mov
push
inc
dec
or
and
mov
int
cld
cmp
mov
dec
lock
jnp
iret
sbb
mov
mov
fbstp
jp
in
jge
fistpll
mov
js
jp
pop
inc
push
fdivrs
jmp
jae
sub
dec
cmpsb
out
or
ja
mov
dec
push
and
cmpsl
add
mov
pushf
ret
repnz
ja
and
inc
adc
orl
add
aaa
leave
sahf
sbb
lea
ficoms
iret
mov
imul
imul
dec
movsl
call
fbld
mov
call
mov
xchg
mov
lret
repz
mov
fidivrl
pop
push
test
out
mov
add
lock
fs
repz
and
lret
aam
loope
imul
pop
faddl
fbld
div
fwait
sub
push
mov
mov
adc
outsl
jne
mov
xchg
inc
mov
fiaddl
mov
inc
push
outsl
movsb
lcall
dec
jle
sbb
push
mov
bound
inc
bswap
pop
enter
stc
test
mov
movsb
inc
dec
push
push
pop
cmpsl
mov
cltd
rolb
push
je,pn
subb
or
icebp
shlb
jno
push
imul
in
sbb
push
aad
repnz
cmp
aas
dec
loopne
fnsave
jl
dec
mov
xor
pop
xor
imul
inc
dec
data16
cmc
bound
mov
dec
popf
scas
xchg
push
fisttpl
roll
jne
jge
sbb
or
mov
push
negl
test
inc
add
mov
ss
add
jb
xlat
adc
loope
adc
movsl
outsl
std
sub
lods
out
out
or
fisttps
mov
mov
insb
ret
negl
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
insl
push
rclb
adc
addl
push
mov
cmpsl
shll
inc
or
sbb
bound
sti
mov
adc
sbb
inc
mov
mov
arpl
jge
mov
jecxz
mov
sahf
outsl
cmpsb
pop
mov
push
sbb
and
pop
cmp
mov
xor
push
lret
cmpsl
adc
addr16
lret
shrb
push
push
mov
sbb
sbb
xchg
loop
jg
clc
cli
hlt
or
mov
lds
minps
mov
icebp
jmp
pop
pop
lds
jbe
dec
sub
inc
pop
psrlq
aam
mov
sub
adc
mov
sbb
mov
jo
xchg
or
rcr
lret
lcall
add
and
mov
mov
inc
addr16
je
sub
sbb
push
rcll
or
and
js
push
daa
cli
rcr
dec
jp
nop
ret
ljmp
enter
push
push
int3
jns
or
outsb
pushf
aam
mov
push
negb
add
sub
lahf
lods
cmpsl
mov
test
and
mov
and
jnp
leave
imull
xorb
popa
jmp
test
stos
sub
mov
inc
mov
sbb
push
sub
movsb
push
mov
leave
sub
xchg
add
pop
ret
inc
cmpsb
inc
enter
pusha
fdivs
fstpl
js
incb
cmp
pop
dec
out
or
xor
out
cmp
sub
mov
cltd
flds
loope
outsl
outsb
sbb
aaa
jns
jno
std
movsb
imul
pushf
std
sub
xchg
pop
jmp
xchg
lret
sbb
cmp
jns
dec
inc
mov
jmp
lcall
xchg
js
mov
lods
ret
cmp
pop
mov
pop
or
pop
fs
and
mov
jno
arpl
rorl
pop
cmpsb
push
mov
fldl
cwtl
dec
lret
xor
or
ret
xchg
ret
dec
aam
mov
sub
mov
add
hlt
mov
fwait
cmpsb
inc
ljmp
mov
and
popa
jl
shrb
lods
push
subl
fbld
out
aaa
jns
movsb
js
pop
loope
jecxz
fisubrs
and
shll
cwtl
dec
jg
mov
aaa
mov
jmp
inc
sub
jecxz
mov
add
and
add
mov
sub
out
xchg
jmp
inc
leave
int
lods
test
push
mov
jmp
rcll
int3
and
stos
jle
stos
mov
mov
insb
cmpsb
push
and
or
inc
addr16
sbb
fstpl
fwait
adc
in
push
mov
sub
cmp
cwtl
gs
inc
or
and
cli
fsts
xchg
out
outsb
pop
and
insl
int
push
dec
or
inc
lea
insl
inc
sti
add
call
jecxz
cmp
leave
ds
adc
push
outsl
xchg
cmp
xchg
out
mov
inc
mov
push
dec
dec
sti
jae
inc
xorb
mov
out
dec
add
lea
and
fdivl
mov
out
and
sbb
add
push
mov
ljmp
loope,pn
add
xchg
test
mov
dec
add
sbb
icebp
outsb
iret
outsl
or
pop
jmp
addl
adc
out
inc
mov
fiaddl
dec
scas
addr16
push
shll
lahf
jmp
out
pop
xchg
push
xor
push
gs
ss
cmp
repnz
jns
xchg
notb
push
cld
xchg
pop
dec
pushf
sub
xor
mov
hlt
xor
xor
ror
scas
fwait
cli
push
xor
imul
inc
leave
and
cli
pop
int
mov
repnz
into
aaa
xor
lods
mov
dec
dec
fiaddl
scas
inc
negb
les
into
push
xlat
decb
mov
les
test
xor
cltd
pop
adc
inc
cmp
pop
jp
pop
dec
out
jns
mov
leave
and
xchg
push
push
outsb
xchg
dec
into
pop
lea
xlat
or
push
mov
aas
cmp
ss
xchg
fldl
lds
mov
push
cs
js
arpl
ss
cli
in
push
mov
dec
pop
hlt
mov
cmc
lret
mov
lahf
pop
lahf
std
add
add
sbb
push
inc
fwait
cwtl
pop
iret
jbe
xor
and
xchg
cmp
cmp
lds
je
imul
ss
mov
jg
in
push
fcomps
jecxz
loope
push
xchg
cmpsl
mov
xchg
adc
scas
adc
vandnps
mov
push
or
and
aad
out
mov
xor
mov
mov
int3
into
scas
rorb
inc
mov
nop
les
ss
jg
loop
and
push
push
add
mov
jl
dec
mov
pop
jmp
lods
loopne
inc
mov
mov
stos
clc
into
mov
inc
add
adc
clc
mov
sub
adc
shr
jp
stc
xor
add
sti
sbb
sub
lahf
popa
adc
cmpsb
adc
popa
inc
sbb
dec
pop
sbb
jno
or
xor
ret
jecxz
xor
xor
lods
js
mov
or
xlat
push
jge
add
shlb
mov
out
xchg
xchg
stc
leave
mov
icebp
xlat
mov
inc
movsb
sub
xor
or
mov
sbb
xchg
icebp
fcomi
sbb
mov
pop
and
and
inc
fimull
mov
add
cmp
mulb
cmp
ja
prefetcht1
lret
movsl
rolb
push
lea
jle
pop
or
sub
rorl
or
cwtl
movsb
dec
cmp
xor
xchg
dec
fidivs
ja
ljmp
rcrl
push
cltd
mov
xchg
test
and
adc
jmp
push
mov
cmp
pop
cmp
inc
jp
cmc
mov
roll
fld
gs
jne
lahf
add
repz
pop
jne
mov
shr
les
fisubl
pop
xor
jp
je
adc
mov
cld
fldt
filds
test
jns
rcrl
out
cli
insb
xchg
ja
lds
adc
arpl
ss
stos
scas
leave
mov
mov
xor
cmc
inc
sub
fidivrl
inc
nop
imul
jge
xchg
xchg
xchg
insl
add
cs
popl
push
push
mov
dec
cld
orl
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
ja
add
rclb
mov
adc
xor
repnz
push
sub
inc
fisubl
push
jne
xchg
inc
push
lods
mov
adc
negl
sbb
xchg
jae
inc
jmp
in
adc
mov
fiaddl
and
loop
imul
enter
daa
xor
jmp
out
jge
popf
shrl
fsubl
inc
lahf
les
mov
fmull
cmp
adc
mov
mov
jp
jp
jmp
loopne
jbe
pop
adc
xchg
mov
lret
mov
lret
push
sub
fsubrs
ja
push
mov
lea
outsb
inc
ja
jne
hlt
xchg
sbb
gs
sarl
cmc
jg
add
cmp
std
jmp
mov
aad
pop
push
jle
aad
push
mov
out
popa
scas
mov
out
cmpsl
sti
push
cld
adc
push
dec
pushl
ja
mov
inc
push
xor
popf
jns
pop
pop
arpl
movsl
mov
sub
push
dec
sarb
imul
rep
call
into
jo
cmp
mov
push
pop
sbb
jns
icebp
stos
aaa
insb
insb
mov
cmp
mov
sbb
mov
fcmovbe
mov
sbb
aaa
add
cld
push
aad
cmp
jns
xorl
xor
dec
jecxz
inc
mov
xchg
inc
xlat
testl
test
loopne
cmp
test
arpl
lock
adc
test
add
stos
shll
add
add
xor
imul
xor
dec
dec
repz
sbb
mov
jbe
mov
cmpsl
xor
mov
hlt
sub
shll
and
cmp
cmpsb
mov
dec
add
sbb
xchg
mov
cs
mov
jo
icebp
cmpxchg
rorl
pop
lods
push
jp
xchg
cmovbe
popa
inc
add
inc
in
cli
fistpll
vmwrite
enter
mov
sbb
enter
mov
aaa
lods
imul
mov
mov
icebp
addl
les
mov
call
and
fiaddl
lods
clc
out
mov
arpl
adc
adc
cli
adc
mov
inc
mov
dec
cmpsl
movl
fidivl
push
sbb
pop
xor
gs
fldl
xchg
arpl
push
insl
cmp
int
rclb
pushf
pop
arpl
outsl
ret
int3
jno
fidivrs
ss
testl
in
and
dec
mov
push
movsl
outsl
ror
mov
mov
push
jecxz
push
push
movsb
stc
out
bswap
mov
in
lret
push
jp
mov
in
ds
pushf
nop
cs
or
ret
sub
rcrl
es
cmpsb
out
loop
pop
and
in
sahf
negb
scas
and
xchg
pop
push
mov
mov
imul
sbb
jp
arpl
jp
inc
xlat
fsubl
hlt
xor
adc
fmull
mov
cmpsl
hlt
test
cmp
mov
xor
je
iret
dec
std
mov
cli
lods
ret
sti
lcall
sbb
mov
xchg
imul
rcr
inc
rcll
mov
xchg
add
lret
fcmovbe
lret
loope
in
out
nop
loopne
sub
adc
andnps
and
mov
pop
pop
jge
jno
jns
dec
adc
mov
adc
out
adc
scas
rolb
xor
cmp
or
ror
cmc
mov
std
ljmp
lret
sbb
mov
xor
jo
sub
and
adc
inc
sbb
idiv
inc
ret
test
pop
imul
jge
lds
rorb
aaa
adc
pop
xor
lcall
and
adc
adc
icebp
aad
lock
pusha
sub
xor
insb
sub
movsl
pop
dec
jno
aad
add
push
in
bound
mov
repz
std
xor
jle
hlt
jns
in
mov
mov
sti
hlt
mov
insl
push
or
adc
mov
sahf
sbb
inc
dec
push
rep
xor
rcrl
xor
bound
jp
jno
mov
ss
and
mov
and
je
out
add
push
push
cs
add
and
mov
or
in
sub
mov
mov
xchg
jmp
out
aam
movaps
push
jo
daa
jae
je
jno
mov
leave
inc
push
pop
mov
icebp
sbb
xchg
in
xlat
dec
inc
pop
jge
push
jnp
imul
mov
cmp
xor
pop
inc
out
mov
inc
push
dec
xchg
xor
das
inc
jb
push
stc
aad
fdivrs
jo
mov
cmpsb
inc
jne
or
sub
pop
xor
mov
cld
sub
xchg
pop
orl
push
shll
in
sbb
js
insl
fst
mov
and
mov
test
mov
mov
cmp
xchg
add
mov
rcll
xorl
xchg
mov
out
cwtl
jo
ljmp
dec
pop
rcrl
dec
cmp
and
fmull
or
mov
xor
lahf
es
add
repnz
mov
inc
call
mov
cmp
stc
pop
cmp
mov
repnz
mov
add
and
xor
pop
daa
cltd
shrl
in
orb
cltd
in
inc
inc
gs
test
mov
ret
nop
xchg
pushf
mov
sbb
pushf
and
imul
addr16
pop
out
sbb
aaa
push
jae
xchg
dec
mov
pop
and
ja
xor
add
and
pop
cmpsl
shll
pushf
arpl
dec
lea
xor
xchg
xor
mov
inc
push
or
sub
xor
loope
lods
push
outsb
mov
inc
push
outsb
loope
xchg
push
es
sbb
negb
dec
insl
mov
aad
aad
movntps
mov
loope
out
mov
add
sbb
out
es
loope
ja,pt
outsb
sub
adc
enter
imul
lcall
sub
fisttpl
loope
sbb
ret
aaa
mov
jbe
push
rcrb
aad
add
rcll
and
xchg
iret
pop
or
loopne
sub
add
and
push
and
adc
jecxz
out
gs
ficoml
sbb
push
mov
sbb
mov
mov
inc
mul
repnz
ja
mov
push
pop
sub
dec
ljmp
sub
sbb
dec
sbb
jmp
dec
mov
jmp
fcoml
call
inc
into
mov
fxch
push
lea
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
clc
pop
js
adc
jno
movsb
out
repz
or
or
jl
add
in
xchg
adc
jmp
adc
inc
mov
mov
mov
das
push
xrelease
sti
aam
dec
test
jo
xlat
out
mov
dec
out
out
arpl
es
fmull
and
mov
inc
push
adc
push
lret
scas
pop
pop
xor
sbb
push
cld
dec
in
mov
lret
jno
pushf
sbb
ja
fdivrs
sbb
xchg
mov
dec
jl
lea
pop
sub
lret
fnstcw
xchg
xlat
jno
shll
out
lds
es
mov
test
xor
mov
enter
es
pop
adc
arpl
es
lret
xor
xchg
fistpll
dec
pop
test
fadd
shll
jmp
sub
add
xchg
bound
jnp
xorb
test
and
sbbl
rclb
push
xchg
sbb
mov
adc
or
xchg
lds
push
adc
popa
sub
jp
imul
notl
mov
ds
insl
adc
pop
dec
cmp
aad
aaa
shlb
jo
xchg
or
inc
sarb
jno
test
cmp
insl
lods
dec
das
insl
push
in
popa
cmp
inc
inc
or
les
mov
cmpsl
stc
popf
sub
data16
pop
mov
sub
pop
rolb
jg
adc
jge
add
gs
jg
ror
cmpsl
push
dec
mov
cmp
daa
nop
jle
add
mov
sub
lea
add
into
cs
mov
jge
leave
fstpt
push
cmpsb
inc
mov
sbb
imul
ljmp
or
out
xchg
pop
sbb
testb
in
mov
adc
imul
push
movsb
xchg
adc
mov
push
imul
adc
pop
xchg
jle
or
xchg
mov
sub
or
cltd
rorb
popa
push
divl
xor
repz
dec
pop
in
popf
sbb
xchg
sahf
push
test
adcl
test
scas
and
push
push
mov
fldt
push
test
sub
mov
cs
xchg
pop
in
lahf
call
cld
lret
int
je
imul
mov
aaa
test
lahf
mov
mov
mov
pop
fwait
adc
mov
xchg
nop
cli
mov
push
call
hlt
mov
pusha
and
ja
cld
fwait
call
inc
add
in
and
fisttps
outsl
mov
adc
push
push
cmpsb
and
add
test
mov
jge
jae
jnp
sub
xor
test
push
mov
dec
mov
jno
or
add
jbe
loope
sbb
andl
out
lea
sub
push
xchg
cmpsl
imul
loope
nop
xor
imul
xlat
push
nop
jp
cli
rorl
pop
sub
xor
cmp
xchg
inc
in
xchg
cltd
jmp
jb
push
fbstp
inc
or
or
dec
icebp
cmp
pop
pop
lcall
xchg
push
xchg
roll
lods
inc
clc
or
ss
pushf
xlat
dec
andb
sub
and
mov
call
ss
scas
je
in
cmp
sub
mov
scas
pop
mov
lahf
sub
pop
pop
push
push
mov
sbb
mov
fadd
mov
scas
sarl
stos
das
into
mov
inc
jle
sbb
loopne
sub
arpl
jmp
call
enter
sbb
mov
test
pop
ret
mov
and
mov
jle
lret
arpl
adc
test
pop
push
adc
inc
jg
out
es
sbb
stos
js
mov
mov
call
jns
pop
dec
pop
dec
inc
sbb
lods
fstl
mov
xchg
mov
into
fst
ret
pop
push
push
xchg
cmp
sbb
sbb
xchg
and
sarl
sbb
and
lea
insb
jmp
push
in
pop
sub
addr16
adc
jl
mov
cmp
mov
push
xchg
test
ret
rorl
xchg
jnp
ljmp
adc
stos
pop
mov
into
test
sbb
and
bound
mov
xlat
cs
dec
loope
lret
out
mov
sbb
jae
neg
mov
cmp
sub
test
adc
cld
rcrb
jnp
lea
xchg
push
fst
pop
test
xchg
or
into
insl
push
and
cmp
dec
xchg
cmc
mov
push
inc
lret
test
xchg
mov
and
outsl
sbb
xlat
div
sub
ljmp
add
jno
xor
into
pop
std
jg
icebp
sarb
addl
cmp
fidivl
in
jle
leave
cld
push
push
call
sbbb
adc
push
aad
xchg
mov
push
aad
push
insb
stos
fidivrs
idiv
ljmp
cltd
add
push
jns
jle
jl
in
push
cmpb
scas
inc
inc
mov
cmp
jge
xor
dec
loope
inc
test
inc
push
jle
lds
popf
push
ss
scas
mov
and
or
fldcw
int
adc
aaa
jecxz
push
leave
fcoml
out
loop
inc
addl
aam
sahf
and
outsl
mov
testl
sub
mov
jae
xor
fmull
push
xor
int
pop
shll
daa
imulb
bound
adc
dec
inc
sub
push
sub
xor
loop
pop
sub
imul
xchg
loope
or
mov
mov
scas
andb
dec
jle
cmp
movsl
test
fs
int
and
leave
sbb
adc
add
pushf
cmp
or
test
xchg
mov
add
fidivs
cld
jb
and
cltd
adcl
cmp
into
xor
jno
frstor
dec
fs
adcb
adc
push
cmp
repz
adc
jne
push
xchg
push
fdivl
jne
idivb
add
loopne
mov
pushf
adc
in
or
ret
ret
mov
aaa
adc
sbb
add
push
addr16
lods
cwtl
sbb
in
add
test
adc
fwait
sub
jmp
xchg
lock
jo
rorl
out
jg
mov
idivl
jle
jge
xor
cwtl
inc
and
or
add
jg
or
inc
test
add
add
shlb
mov
nop
outsb
sub
and
sbb
mov
ss
push
jp
and
cmp
mov
xor
subl
or
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
cwtl
jecxz
push
pop
cli
adc
mov
int
lret
lret
sub
mov
mov
mov
fstpt
rorb
cmp
mov
and
aad
xchg
mov
sbb
pop
enter
stc
add
in
mov
add
and
and
mov
xchg
adcb
into
adc
orl
in
pusha
inc
cmp
sbb
xchg
mov
dec
mov
add
push
jne
sub
enter
jne
lea
lods
movsb
lds
adc
mov
mov
lret
inc
pop
aas
test
out
mov
or
adc
mov
push
mov
jnp
cmp
inc
lock
mov
lock
xchg
xchg
xchg
int3
bound
mov
out
pop
pop
shrb
pop
js
pushf
stos
pop
pop
push
fwait
insl
or
add
notb
dec
jne
cmp
sub
jns
int3
dec
mov
fiadds
sbb
mov
xor
enter
jge
or
cmp
xchg
shll
xchg
rcll
mov
jmp
clc
push
mov
push
clc
test
sbb
sub
ljmp
xor
test
mov
stc
stos
jge
ljmp
sbb
aaa
pop
xor
test
push
jb
into
pcmpgtw
loopne
and
clc
addr16
andb
xor
inc
jbe
lcall
xchg
and
btcl
mov
xor
dec
mov
pop
mov
stos
jo
shl
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
