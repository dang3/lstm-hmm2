add
add
adc
add
add
add
cmp
add
add
add
add
in
sub
movl
mov
adc
mov
movl
xor
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
pushl
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
xor
xorl
mov
notl
jmp
dec
dec
xor
fcoms
jp
testl
jl
jl
mov
xor
xor
ja
or
outsb
or
cmp
lret
sbb
mov
or
rol
or
sbb
out
outsl
add
mov
mov
je
fisttpl
jecxz
and
aam
dec
incl
mov
loope
pop
sub
jae
lret
cwtl
sub
mov
loopne
cmp
sub
or
sbb
outsl
insl
jb
cmp
jns
cmp
add
movsb
add
rol
add
jge
mov
daa
sbb
addr16
loop
xchg
push
pop
fldcw
nop
je
mov
add
adcl
mov
xorl
mov
adcl
jmp
inc
in
xor
inc
in
xchg
inc
imul
mov
arpl
pmuludq
mov
mov
dec
mov
adc
pop
nop
fildl
cli
jb
add
cmpsl
xchg
and
mov
mov
mov
enter
add
add
xor
inc
jle
rep
cld
aaa
testb
xchg
ljmp
push
jbe
rcrl
jmp
out
xchg
pop
mov
movb
jecxz
in
pusha
arpl
ljmp
sbb
stos
aas
xchg
orl
jg
push
push
xor
xor
dec
dec
cld
pushf
jl
dec
inc
cmc
push
insb
rolb
es
inc
push
push
test
movl
je
and
mov
and
jmp
xchg
or
mov
dec
popa
enter
mov
jl
jl
jl
fsubrl
shl
outsl
push
push
and
cmpl
cwtl
cltd
push
pop
xchg
cwtl
repz
les
into
cmp
push
notb
pop
add
aad
mov
push
int3
jmp
dec
lds
cwtl
pop
outsb
pop
sub
or
fiaddl
fistpll
sbb
shll
dec
imul
add
stc
test
adc
insb
add
pop
test
pushf
mov
orb
je
aaa
int3
cmp
lock
fwait
int3
sub
push
fbld
xor
mov
pop
jno
pop
xchg
test
jg
rorl
or
sbb
mov
sbb
imul
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
xor
or
dec
mov
jmp
xor
add
inc
mov
add
mov
subl
xchg
xor
sub
or
xor
mov
movzwl
xor
mov
or
mov
mov
xor
jmp
ficoms
loop
sbb
movsb
out
repnz
mov
push
jle
jl
jl
jl
sub
inc
jl
cmp
jl
dec
and
out
push
std
or
sbb
fbstp
mov
into
jl
pop
pop
sub
lds
in
mov
jle
dec
or
jle
je
cmc
cmp
fistpll
dec
addr16
push
mov
jno
outsb
in
ret
das
jge
lds
addr16
mov
mov
in
inc
popf
arpl
ljmp
xchg
sub
and
mov
push
testl
ret
dec
lcall
leave
mov
das
xchg
imul
jno
dec
jg
fnstenv
jge
mov
mov
jns
add
add
cmp
push
lods
addr16
jge
stc
icebp
sahf
ss
in
jle
jl
jl
jl
adc
je
pop
in
mov
ror
push
lret
mov
jbe
repnz
xchg
xor
fildll
aaa
mov
mov
sbb
addb
test
or
xchg
lcall
sub
into
vpcmpeqw
ss
fldcw
mov
int
dec
iret
and
xor
mov
mov
jns
out
js
xlat
sbb
mov
cmc
in
push
std
pop
rcr
push
orl
sub
push
pop
jmp
or
fldcw
aad
dec
lret
sub
lcall
in
ss
rclb
std
lods
mov
sbbl
xor
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
mov
mov
movl
je
mov
xorl
xor
jmp
in
iret
lcall
mov
jecxz
jno
jl
jl
jl
out
sbb
cmc
pop
and
test
lahf
or
or
dec
inc
sbb
add
xor
and
cmp
xor
imul
cmp
cmp
loope
or
mov
mov
cltd
mov
psllw
xorb
xchg
loope
mov
scas
jae
in
movsb
dec
xor
xchg
cmp
adc
inc
jo
inc
testb
dec
jl
sti
cwtl
loope
movsb
pop
sahf
mov
sbb
mov
jne
inc
aad
dec
stc
lds
ret
movl
cmp
movl
jne
pushl
addl
call
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
fdivr
ljmp
into
outsl
inc
aaa
jns
jp
jo
jl
jl
jl
push
daa
adc
jno
sbb
nop
adcl
or
js
cmc
cmp
jae
cltd
leave
xor
xchg
push
dec
adc
xor
mov
outsl
out
pop
xchg
int3
and
mov
adcb
movsl
push
mov
xlat
xor
push
in
jp
pop
mov
xor
pop
hlt
mov
push
add
mov
adc
sub
dec
xor
data16
icebp
push
jge
lahf
adc
test
sbb
inc
push
or
int
pop
xor
mov
inc
loope
in
int3
mov
dec
dec
add
sete
mov
xor
mov
adc
mov
xor
adcl
add
movl
cmp
movl
je
subl
pushl
jmp
js
dec
mov
jnp
hlt
push
cmpsb
imul
jl
mov
add
xor
jne
imul
stos
inc
into
pop
mov
enter
stc
out
jno
sub
outsb
mov
jl
outsb
mov
cld
in
pusha
lods
test
cmpsb
xchg
pusha
or
push
call
int3
insb
push
sub
xchg
jp
aas
int3
jnp
pop
or
data16
jbe
fisttpll
insb
mov
leave
imul
aam
pop
std
cmp
stc
mov
xorb
jl
iret
lods
jns
or
shrl
pop
lret
scas
hlt
mov
xor
test
int3
movsb
push
test
test
xchg
pushl
call
jmp
cld
mov
mov
dec
mov
aad
dec
or
mov
je
imul
cld
push
repnz
sti
sub
insl
lahf
lods
cs
mov
cmp
sbb
pop
test
not
xchg
mov
xchg
movsl
and
cmpl
rorl
cld
xor
jmp
pop
fldenv
insl
jno
mov
fnstsw
inc
sbb
jp
fcomps
sbb
mov
push
outsl
into
jns
xor
stos
sub
and
sbb
jae
and
out
adc
bound
outsl
lret
hlt
scas
sbb
test
xor
mov
dec
aad
jne
push
in
lret
mov
mov
add
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
subl
jmp
inc
adc
jns
lret
push
insb
jno
mov
jl
mov
push
jge
inc
jne
push
mov
cmpsl
jo
add
ficoms
inc
xor
jne
sub
in
enter
cld
test
push
lret
and
sbb
pushf
mov
psrld
mov
push
rol
in
or
jp
je
xchg
xor
xchg
xchg
js
nop
adc
add
sti
mov
cld
iret
push
inc
enter
leave
rorb
int3
shll
or
adc
lcall
dec
push
clc
out
leave
data16
call
int3
aam
pop
dec
scas
int3
in
dec
mov
inc
jge
loope
sub
and
mov
mov
andl
add
movzbl
and
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
notl
add
xorl
mov
jmp
cmp
mov
cmp
insl
xchg
repz
jl
jl
jl
scas
negl
or
and
out
popa
jne
jne
jl
je
pop
aas
int3
mov
out
test
aad
or
dec
pop
push
mov
mov
inc
lds
mov
in
jnp
mov
dec
jno
loope
dec
mov
jo
testl
mov
pop
jbe
xchg
ja
outsb
push
cmp
les
xchg
push
dec
outsb
dec
gs
and
push
shlb
and
pcmpgtb
pushf
inc
cli
mov
in
es
adc
mov
aaa
push
in
add
jbe
out
aas
push
daa
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
xor
mov
jmp
xor
mov
sub
pushf
mov
jl
mov
aad
lock
sahf
sbb
xchg
mov
jle
lea
fldl
xchg
push
dec
repnz
push
sarb
mov
adc
cld
pop
iret
mov
aad
jle
push
pushf
arpl
fcomip
add
dec
jno
lds
ljmp
push
pop
mov
or
cmp
sbb
jp
insl
xor
mov
push
insl
ret
push
outsb
xor
shrb
inc
jmp
stc
mov
inc
pop
mov
imul
ljmp
and
sbb
dec
sub
xor
stos
scas
mov
xor
into
push
outsl
push
pop
fsts
aaa
aad
mov
fnsave
xor
mov
mov
add
lea
mov
push
pushl
jmp
pop
jecxz
xchg
mov
jb
daa
rcr
icebp
lret
jl
mov
stos
inc
sub
popf
shl
and
mov
xchg
jmp
mov
lahf
sub
pop
call
xor
jmp
and
add
xchg
cmp
mov
push
inc
push
sub
je
jnp
fisttpl
mov
mov
std
adc
jge
addl
mov
fadd
add
shlb
adc
mov
sarb
push
push
fsts
or
xchg
push
cld
out
test
push
lods
adcl
addr16
pushf
xchg
addr16
shr
xchg
adc
cmp
xchg
icebp
inc
loopne
push
sbbl
cmp
mov
ljmp
notb
cmp
add
add
adc
mov
mov
push
int3
xchg
xchg
int
mov
cmp
jl
jl
jl
sub
cmp
jecxz
mov
jmp
or
fisubl
push
add
dec
mov
aad
pop
mov
pop
aaa
cmp
cwtl
xor
imul
mov
push
inc
js
mov
test
push
stc
cmp
outsb
pop
jge,pt
mov
test
je
ljmp
and
xchg
enter
div
cwtd
and
test
sbb
out
jne
cld
jmp
outsb
jb
jecxz
popa
pop
aad
subl
add
pop
pop
dec
pop
or
xchg
ljmp
and
call
inc
cld
mov
xor
add
cmp
jne
jmp
dec
xchg
pop
add
arpl
adc
pusha
ja
jl
jl
jl
fdivp
mov
fsub
mov
outsb
ret
sub
or
dec
pusha
pop
sbb
push
push
mov
sbb
jne
pop
je
or
lret
sub
push
stos
jecxz
mov
adc
fsubp
or
clc
movsl
adcb
mov
ret
adc
test
fdivrl
mov
jne
cmp
addb
lahf
ret
xor
sub
and
jae
push
lea
outsb
mov
sub
or
sbb
test
aaa
mov
mov
xor
in
add
cmp
scas
lret
aad
push
mov
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
jmp
lods
adc
ljmp
inc
std
xchg
jbe
jl
jl
jl
ror
stos
mov
jl
loope
ret
icebp
rcrl
inc
in
pop
jo
dec
push
mov
mov
popf
jmp
pop
enter
mov
and
rorl
sub
sub
jge
or
push
adc
and
mov
js
sarb
cltd
pop
jg
jb
mov
dec
mov
call
or
repnz
test
inc
test
pop
fisubs
sbb
sbbb
pushf
push
icebp
mov
into
sub
faddl
fprem
dec
mov
add
xlat
scas
push
stc
jns
arpl
sub
inc
or
inc
cld
mov
jmp
xchg
sub
cltd
cmp
mov
mov
jl
mov
fs
sub
aad
xchg
jle
dec
xchg
mov
ret
cmpsl
inc
test
shll
fldenv
test
xor
ficompl
jno
cmpsl
lods
gs
mov
dec
sahf
movsl
inc
xor
sbb
cmp
cmp
push
jb
insb
je
sbb
add
out
cmp
movsl
dec
xchg
pop
shr
fdivrl
imul
ret
cld
sbb
sbb
sbb
cmp
jl
inc
fs
inc
mov
sti
jp
ret
loope
ds
ror
test
xchg
jmp
or
iret
fdivp
out
pop
xlat
in
cwtl
out
shlb
iret
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
jmp
cmp
cli
test
sbb
or
jl
jl
mov
imul
adc
xor
xchg
insb
xchg
loope
std
jg
dec
mov
cmc
dec
push
fidivrl
test
dec
mov
addr16
xor
insb
fbld
iret
lret
dec
mov
cmp
aad
enter
test
cmp
adc
push
xchg
insb
dec
fiaddl
stos
mov
leave
or
mov
push
jecxz
fbld
inc
cwtl
mov
inc
and
mov
dec
push
push
xchg
mov
cmp
mul
ret
lock
jae
movsl
lods
mov
sbb
outsl
xor
loop
pop
imul
enter
mov
xor
add
mov
jmp
and
rep
lods
sti
pop
xorl
sbb
dec
or
jl
jl
sarl
ror
ss
cmp
ficompl
xchg
pusha
leave
aam
pop
xchg
jnp
out
inc
mov
loopne
pop
je
and
mov
nop
pusha
jle
xchg
bound
rep
shr
aad
ja
push
jno
mov
daa
fsts
push
push
mov
sbb
jnp
pop
mov
mov
sahf
pop
dec
stos
dec
mov
negb
ret
mov
pusha
repz
sub
mov
and
std
sub
or
insl
popf
testl
dec
lret
shll
and
lea
jnp
sub
shlb
pop
int3
ret
ror
nop
jecxz
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
jmp
xlat
pop
cmp
pop
insl
jnp
sbb
mov
in
decb
jl
mov
push
mov
cmc
xlat
jp
sub
insl
xor
push
add
lock
rcll
jmp
mov
or
jbe
ds
jb,pt
xchg
fidivl
jbe
jae
jg
push
fisttpl
aaa
sub
cmp
addb
or
and
fwait
jmp
imul
inc
pop
pop
push
test
ret
push
dec
or
and
cmpsb
data16
shll
adc
jecxz
cmp
adc
mov
dec
ficoml
sbb
fs
leave
and
scas
aas
jns
test
es
mov
cmpsl
movsl
add
push
sahf
testb
mov
ja
sub
add
mov
mov
xor
jmp
fsub
mov
clc
mov
shll
and
jl
mov
mov
shll
xchg
fucomp
pop
cmpsl
scas
push
pop
mov
cmpsl
je
push
aas
inc
adc
push
cltd
rclb
inc
cmp
add
in
mov
js
cmp
jg
lods
pop
add
ljmp
adcb
ds
or
mov
fxch
or
insb
xor
je
sbb
ficoms
push
jo
stos
adc
movsl
outsb
cltd
or
jmp
mov
test
in
bound
push
aas
test
jmp
push
mov
xchg
cltd
pop
out
pusha
fisubrs
jl
outsb
or
inc
mov
add
mov
jmp
pop
fimuls
cltd
push
mov
mov
jl
jl
jl
mov
stc
aad
enter
xor
into
in
in
clc
sahf
sub
filds
andb
push
andl
stos
scas
jns
jl
mov
das
push
xchg
and
imul
xchg
sub
xor
mov
sub
test
ljmp
lea
dec
pop
xor
cltd
cmp
test
jl
imul
mov
or
pop
iret
movsb
dec
jns
mov
adc
mov
mov
or
xchg
add
dec
mov
in
ret
mov
xor
jl
dec
and
pushf
test
push
xchg
sub
fisttpl
call
xor
inc
cmp
jmp
jmp
inc
insb
jns
jmp
loope
pushf
subb
jp
or
jl
js
arpl
pop
sub
mov
mov
sbb
outsb
mov
lds
fcoms
sub
outsl
ret
mov
fwait
aad
inc
xor
repnz
fsin
movsb
lret
add
out
xor
and
frstor
sbb
cli
test
adc
jmp
inc
adc
inc
mov
push
in
loopne
sarb
jo
jb
inc
xor
aad
mov
test
mov
push
add
pop
loopne
icebp
mov
cvtdq2ps
sub
mov
pushf
fcoms
cli
push
cmp
aad
adc
test
add
add
add
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
jns
inc
ds
mov
into
popa
in
or
jl
jl
jl
push
dec
mov
out
js
scas
xor
leave
enter
inc
pop
xor
enter
jmp
and
push
roll
ljmp
int
popa
jo
sbb
repnz
lock
popf
scas
pop
xchg
inc
fs
sbb
xor
cltd
sub
jbe
adc
or
shll
jp
into
mov
sti
dec
shrl
xchg
jle
ds
fisttpl
loopne
clc
sti
or
mov
mov
cld
or
adc
dec
pop
shll
jp
das
xchg
pop
cli
cmp
sbb
xor
dec
or
or
movsl
mov
rcl
imul
into
add
add
test
sti
mov
mov
sub
jl
jl
jl
dec
cmp
xor
mov
out
sbb
out
mov
or
testl
mov
mov
cmp
sahf
pop
cmp
mov
insb
inc
cmp
add
pop
jp
sbb
xchg
mov
push
je
or
dec
pop
in
outsl
xor
cmp
jne
push
adc
adc
xchg
fstpl
in
cli
rolb
ffree
test
jne
add
sub
int
filds
iret
sti
fcoml
mov
inc
jp
mov
pop
inc
data16
rolb
pop
hlt
jmp
dec
jge
cmpb
jge
push
loope
xor
xor
jl
jl
jl
cmp
pop
testl
jg
jl
and
or
sbb
es
and
sbb
jns
ljmp
pop
jecxz
xchg
mov
inc
cli
inc
ret
xchg
cwtl
mov
pop
aaa
adc
insb
lahf
cmpl
mov
mov
jo
jo
mov
xchg
test
nop
sar
pop
inc
dec
xor
mov
cwtl
fstpl
pop
jno
mov
pop
pop
aaa
push
or
cmpsl
dec
cmpsl
pop
iret
fwait
pushw
dec
shlb
out
adc
outsl
adc
sbb
inc
hlt
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
call
mov
dec
mov
jmp
mov
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
jmp
sbb
insl
std
pop
mov
lods
jne
push
jl
into
jg
jl
in
mov
not
sti
stos
xchg
mov
mov
inc
jns
adcb
jecxz
sbb
jbe
jnp
mov
mov
cmpsb
ret
inc
sbb
sub
mov
jp
xchg
sbb
div
and
and
sbb
mov
cmp
xchg
and
mov
addr16
ljmp
adc
ljmp
adc
movsb
xor
outsb
cltd
lret
push
add
mov
jb
mov
and
por
push
lret
fldenv
ret
sbb
shlb
pushf
add
mov
ficoml
shlb
loope
cltd
mov
sub
xor
sti
cltd
call
cmp
ljmp
pop
pop
push
xlat
in
test
mov
mov
cmpsl
mov
adc
std
push
lock
lcall
and
test
mov
adc
add
or
xchg
push
xor
mov
iret
pusha
test
mov
loopne
ret
ds
into
lret
push
cmc
rcrl
int
outsl
test
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
jmp
jp
pop
cmp
jge
mov
push
imul
jl
jg
jl
cmp
dec
arpl
sti
arpl
nop
movsb
int3
xchg
mov
mov
mov
lret
inc
bound
dec
std
sahf
mov
andl
andl
hlt
push
mov
fiadds
mov
notl
lods
out
addr16
shl
arpl
cli
in
fs
ds
int3
stos
hlt
jne
cld
insl
xor
add
cld
fiadds
pop
cmpsb
stos
lret
mov
lcall
mov
movsl
push
mov
nop
lea
push
or
test
mov
outsl
push
enter
scas
aas
shlb
pop
lds
add
nop
cmp
xorb
add
or
in
movsl
rorb
adc
and
mov
aaa
cmp
fistps
ficomps
mov
mov
call
sbb
sub
sub
loop
into
mov
mov
mov
cmp
ja
mov
pop
js
mov
mov
fcomip
dec
in
imul
jg
mov
daa
mov
sbb
cmp
xchg
shl
popa
cmp
dec
jb
rorb
cmp
adc
fldt
ret
fnstenv
xchg
enter
scas
lds
shrl
cmp
jbe
pop
mov
jmp
jno
in
cli
insl
cmpl
fcomp
std
sbb
jl
into
jg
jl
outsb
mov
push
add
jge
push
addr16
pop
cmpsl
hlt
mov
scas
mov
fmull
inc
fidivrl
or
aas
xor
pusha
shrl
cmp
push
daa
repz
cmpps
subb
sbb
das
xchg
insl
pop
jbe
mov
mov
addr16
add
dec
int
leave
fcomip
rsm
cmp
adcl
xchg
xor
and
mov
scas
out
popa
inc
cmp
mov
pop
incb
push
in
jo
cmp
inc
xor
sbb
jl
adc
lret
pusha
add
dec
or
in
enter
outsb
cmp
mov
sbb
test
jns
rorb
dec
jl
add
in
dec
mov
je
jnp
mov
sub
imul
shlb
rclb
ja
push
cwtl
repz
cmp
ds
lods
rorb
jle
mov
pusha
cmc
jbe
scas
mov
add
jl
cmp
lcall
xchg
push
cmp
dec
or
ss
sub
pop
leave
ret
push
mov
mov
add
mov
movzwl
or
sub
mov
or
mov
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
pushl
call
jmp
mov
addl
xor
cmp
je
mov
xorl
jmp
rolb
loopne
dec
push
mov
cld
sbb
in
out
add
jl
jl
sbb
mov
clc
push
in
cld
dec
xor
pop
stc
jle
daa
push
cmp
mov
pop
outsb
sbb
mull
cmp
into
pop
xchg
sub
ja
call
cmp
pop
and
xchg
les
or
imul
icebp
pushf
cmp
into
mov
pop
or
sar
mov
enter
push
xchg
push
mov
mov
adc
lods
pop
dec
dec
push
mov
loopne
mov
lea
ret
add
add
js
cmp
fucomp
arpl
pop
in
add
jl
jl
stos
mov
add
ds
mov
jge
lcall
shrl
std
fiadds
das
rolb
roll
pop
cmp
cld
or
or
xor
sub
jae
push
add
cmc
inc
outsl
or
mov
mov
and
mov
push
mov
or
inc
cli
push
push
xchg
pop
test
lcall
pusha
xor
pop
push
rorb
jne
mov
add
jmp
mov
xor
jmp
ficomps
mov
adc
jge
incb
jl
xchg
into
xor
sub
fwait
das
sub
push
push
orb
test
adc
mov
mov
mov
sbb
and
testb
lds
movsl
addr16
mov
add
sbb
dec
xor
repnz
cmp
or
repnz
sub
lret
sahf
stos
out
lcall
pop
adc
adc
cmpsb
loope
cmp
test
push
mov
in
jb
push
gs
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
push
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
xorl
mov
movl
mov
xor
movl
xor
mov
and
jmp
loopne
enter
sti
in
cmp
jg
in
aaa
mov
xor
jl
mov
dec
dec
xor
sub
cwtl
repnz
mov
outsl
cmp
cmp
cmp
test
sbb
hlt
cwtl
ljmp
dec
ret
and
sti
int3
arpl
movl
jmp
dec
push
or
xchg
loopne
mov
push
lret
js
out
cmp
mov
repz
rorb
cld
jno
mov
xchg
xor
ljmp
pop
cmp
push
out
cmp
add
mov
sahf
js
mov
lahf
dec
popa
ret
arpl
test
arpl
flds
add
fiadds
push
outsb
dec
adc
loopne,pn
add
push
stos
and
jp
aaa
xor
xor
mov
pop
cmp
clc
cld
inc
cltd
sub
lahf
mov
adcl
xchg
pop
mov
cmp
pop
int3
jl
js
xchg
rcll
daa
mov
iret
out
inc
xchg
xor
popa
pop
pop
mov
shrb
or
pusha
clc
stc
mov
ret
pop
sbb
cli
popa
xchg
lret
xor
call
xchg
movsb
fwait
sub
push
rorb
pop
or
push
mov
sarb
sarb
add
adc
mov
mov
mov
sub
xor
mov
xor
not
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
movl
adc
movl
movl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
movl
movl
movl
or
mov
movl
xor
or
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
mov
orl
jmp
std
xor
mov
add
test
lods
pop
repz
pop
jl
xor
jl
push
dec
sbb
outsl
cmpsb
nop
mov
xchg
xor
idivb
ret
inc
jge
push
mov
divl
mov
dec
mov
cld
add
jmp
mov
dec
mov
lret
xchg
inc
es
pusha
lahf
test
jb
jl
jmp
mov
popl
pop
xor
stos
pop
dec
pop
loopne
mov
data16
mov
jne
jmp
int3
jbe
pop
ror
pop
jne
data16
in
lsl
imul
movsb
rcll
shll
lret
cmp
sbb
scas
outsl
xor
aad
jge
loop
jmp
pop
mov
filds
xchg
push
cltd
fnstenv
in
popf
push
leave
dec
dec
daa
out
pop
add
cmp
pop
cld
daa
enter
cmp
repz
sbb
mov
imul
call
dec
xor
lods
pop
fmulp
stos
jge
push
lret
ret
jnp
jp
or
push
repz
xlat
mov
cli
push
pusha
mov
pushf
cld
shlb
out
inc
stos
pop
inc
inc
sbbl
pop
sub
std
test
xchg
jge
inc
rcll
mov
fistps
gs
sti
mov
call
cli
adcl
mov
xorl
xor
xorl
add
movl
cmp
movl
jb
xor
mov
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
call
jmp
xor
mov
mov
sbb
add
jmp
jno
movsl
imul
pop
clc
xchg
cmpsb
sub
xor
jl
cmp
dec
outsl
add
arpl
das
mov
inc
int
xchg
dec
inc
pop
xchg
jmp
fisttpll
pop
repnz
in
mov
out
lahf
mov
jo
push
adc
rcl
xchg
xchg
sbb
inc
aaa
sahf
lods
xor
js
inc
test
lea
insl
dec
lret
leave
pop
or
xchg
inc
lods
jns
sbbb
inc
sub
popf
jo
sti
push
cltd
mov
lods
mov
adc
fcompl
in
int3
and
xor
xor
xlat
sbb
dec
lea
mov
push
push
sahf
fbstp
mov
adc
into
jmp
mov
loopne
arpl
cs
and
jbe
das
inc
pusha
rorb
icebp
dec
adc
dec
aaa
pop
call
sbb
cs
movsl
adc
aaa
sub
jmp
arpl
dec
push
dec
pushf
outsl
clc
xchg
mov
lret
jge
mov
push
jge
outsb
orl
imulb
inc
pop
notl
sti
or
push
cli
iret
rolb
push
jge
fwait
insb
insb
mov
int
xor
mov
or
sub
jge
mov
add
push
cwtl
push
dec
call
roll
add
add
add
add
sbb
cmpl
jne
pushl
call
cmpl
jb
add
imul
mov
mov
sbbl
sub
cmp
ja
add
mov
xor
notl
add
movl
jmp
movzwl
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
dec
xchg
call
sub
adc
idivl
dec
pop
sbb
jg
jl
fstps
jg
adc
int3
test
arpl
mov
cmp
xlat
xor
pop
xor
xchg
insl
dec
fdivrs
stos
jnp
mov
sub
stos
ret
je
sub
cmp
imul
cmp
xchg
cwtl
loopne
pop
push
stos
popa
dec
cmp
mov
lret
and
push
jg
dec
inc
into
bound
mov
xor
data16
cmp
pop
cmc
cmpsb
clc
mov
dec
jno
hlt
adc
cmc
sub
add
dec
push
sub
sahf
inc
add
pop
rolb
out
shll
adc
in
sbb
sub
divl
jecxz
imul
stc
sbb
movsl
or
sub
dec
ja
adc
mov
inc
push
sbb
ror
stc
or
lock
xlat
mov
or
outsl
leave
ss
sub
mov
adc
rorl
mov
enter
adc
sbb
mov
outsb
sub
sub
pop
clc
cli
adc
xchg
push
popf
mov
ds
and
adc
mov
cltd
icebp
enter
pop
fstpl
aad
loopne
cmpsb
ss
fsub
or
mov
shlb
clc
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
jmp
sbb
cs
mov
cmovae
adcl
jl
cli
inc
push
xchg
jno
jnp
push
add
pushf
test
sbb
ret
mov
out
icebp
xchg
and
sti
shrb
and
dec
aad
mov
add
mov
clc
xor
cltd
cmpsl
arpl
cmpsl
jmp
dec
jb
test
xchg
dec
pop
push
xor
dec
dec
add
das
push
andb
stos
xchg
add
lret
mov
mov
test
das
or
xchg
mov
fsubrs
jb
mov
xor
mov
fsubrl
shl
dec
cmp
js
flds
jle
cmpsl
fwait
pop
ret
fs
xchg
or
add
push
lods
movntq
cmpsb
lea
mov
dec
and
shlb
or
outsl
jae
scas
lret
sbb
in
add
cmp
xchg
push
inc
pushf
lock
arpl
xor
sub
push
cli
pop
jge
loopne
ja
dec
jno
mov
aad
aad
cltd
adcl
fisubl
add
sub
adc
lahf
add
push
fmuls
xchg
add
add
add
add
cld
xor
xor
jmp
dec
inc
fdivr
fidivrl
gs
shr
sub
in
pop
out
sbb
jg
jl
jmp
andl
scas
add
rcll
into
nop
or
push
and
cmp
lods
dec
sub
cmp
cltd
mov
jo
call
push
das
and
pop
in
fdivs
int3
jnp
cwtl
mov
out
mov
cmp
lcall
adc
fmul
leave
xchg
adc
fisttpll
cmc
out
fcomps
rcrl
mov
pop
repnz
not
jae
or
ja
int3
push
lea
xchg
testb
clc
mov
jecxz
pushf
mov
cmc
pop
les
mov
fdivs
mov
jge
pop
cmc
or
or
xchg
push
lds
add
push
mov
test
xor
pop
and
xchg
or
loop
pop
add
xor
ret
orb
lret
fwait
jae
mov
test
cmpsl
jnp
sub
mov
fidivrs
xlat
mov
rcrl
mov
mov
jnp
adc
push
loope
or
jns
cmp
aas
dec
mov
jbe
xchg
repnz
xor
test
into
popa
xchg
mov
add
stc
mov
les
add
add
imul
mov
jmp
fwait
bound
pushf
stc
insl
fwait
jge
les
mov
sbb
jl
mov
ficoml
sbb
xchg
xor
rcll
daa
jg
adcl
xor
push
vsubpd
fisttps
sub
adc
pop
or
pop
rclb
fadds
inc
rcl
xchg
int
cmp
mov
test
xchg
lds
or
and
xor
push
xchg
hlt
sbb
enter
cwtl
inc
pop
add
dec
adc
xchg
lcall
insl
ljmp
pop
cmp
mov
add
cmp
out
mov
cmpsl
jmp
jo
jbe
jae
mov
psrad
xchg
mov
or
add
clc
mov
outsb
sbb
push
outsb
imul
pop
and
jb
lahf
cli
inc
inc
push
jecxz
jnp
jns
jo
ss
xor
addr16
stos
push
add
nop
cs
inc
pop
inc
lret
pusha
nop
cli
cmpl
mov
scas
push
jp
insb
sahf
addr16
pop
out
andl
inc
mov
nop
cpuid
arpl
movsl
jmp
shr
ret
lock
psraw
out
frstor
orb
jle
jl
xor
jl
xor
jmp
push
dec
aaa
add
dec
popf
jb
or
and
sarb
stos
arpl
and
outsb
pop
int
repnz
push
xchg
pop
out
mov
jae
push
lret
xchg
inc
inc
push
adc
fisttpll
lahf
test
sbb
jle
jmp
fnstcw
push
jnp
outsl
fldl
loope
jae
ljmp
scas
push
outsb
mov
inc
insb
pop
xchg
xor
or
popa
mov
pusha
cmpsl
iret
dec
add
jnp
mov
insb
sbb
cmc
pop
and
cmp
dec
inc
or
jno
mov
leave
dec
fs
mov
add
cs
mov
das
jg
xchg
jl
jo
or
or
push
sub
mov
pushf
adc
add
cs
inc
xchg
mov
popa
sub
push
push
cld
stos
or
sti
push
or
outsb
mov
into
sub
lret
xchg
mov
ds
push
jno
adc
scas
sbb
cwtl
pop
push
inc
jno
mov
int3
dec
ficoms
adc
mov
insb
pop
cmp
stos
and
mov
mov
gs
jne
push
enter
aas
jo
ficoml
or
test
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
jmp
mov
dec
stos
lcall
ss
jl
xor
jl
adc
dec
std
pop
cmpsb
in
pusha
hlt
xchg
and
push
ljmp
test
xor
pushf
mov
aaa
cmpsl
pushf
pop
out
imul
or
pusha
push
bound
sbb
and
sbb
jle
inc
jge
adc
movsb
stc
hlt
out
adc
nop
imul
sarl
xchg
cwtl
jae
sbb
push
xor
call
or
test
dec
push
jno
call
pop
lret
and
lds
lahf
xchg
arpl
cltd
fisubrs
cmc
adc
adc
insb
inc
cmp
insb
dec
adc
repz
out
mov
outsb
in
leave
jns
cmp
xlat
adc
imull
decb
sbb
insb
aam
je
xor
jp
imul
cld
loop
mov
pop
pop
stc
les
lods
repz
sub
cmpsb
mov
xchg
jae
adc
imul
pop
add
inc
fldenv
sub
push
lock
pop
sub
adc
lret
mov
pmaddwd
pop
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
int
mov
mov
ja
pop
mov
jl
xor
jl
fnsave
pop
add
je
xchg
cmpsl
xchg
push
mov
adc
xchg
test
or
xchg
push
in
cmp
out
aas
fadds
sub
xor
pop
xor
cltd
pop
add
mov
push
outsb
mov
xor
mov
int3
js
jmp
push
jo
xchg
push
roll
push
movsl
jbe
cmp
mov
subl
ficoml
sti
imul
dec
jecxz
push
shl
lds
pop
test
sti
loopne
mov
push
out
pusha
mov
rcr
adc
inc
mov
and
or
cli
xor
add
loop
pop
dec
or
sub
mov
mov
sbb
dec
js
pushf
andb
jo
jns
popf
cmpsb
jae
mov
fisubs
jecxz
cmp
mov
dec
sub
insb
es
cmp
inc
scas
add
ljmp
mov
stos
adc
or
add
push
jns
adc
inc
mov
push
inc
inc
aam
mov
out
fsts
push
jbe
fstpl
mov
xchg
daa
push
gs
or
jne
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
jmp
adc
iret
sbb
and
inc
adc
jg
jl
pop
cld
sarb
movsl
int3
sub
cwtl
jnp
ja
pushf
jae
xchg
jle
add
push
mov
bound
cmc
jp
ja
lea
xor
rcll
xor
inc
cmp
xchg
jge
in
lret
loop
js
in
xlat
fcmovnbe
mov
mov
lcall
xor
inc
mov
jne
cmp
adc
call
and
lret
xor
data16
cmp
popa
jb
mov
loope
leave
imul
les
call
out
ret
xchg
add
mov
cmpl
pcmpgtd
cmc
dec
dec
push
sbb
lcall
mov
xor
cwtl
test
push
addl
push
sub
mov
or
addr16
fsubrl
mov
out
int3
mov
insl
xchg
les
add
push
call
cmp
dec
pusha
inc
mov
mov
je,pt
outsb
add
insb
jge
dec
movzbl
test
inc
jb
imul
jbe
add
cmc
sbb
cmpb
add
cmc
icebp
jecxz
push
aad
pop
mov
in
rorb
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
jmp
stos
outsb
cmp
fnstsw
lods
sbb
push
adc
jg
jl
mov
and
or
sbb
out
mov
mov
sub
pop
hlt
scas
data16
ja
adc
out
loope
and
pop
sub
or
mov
mov
aam
dec
mov
dec
insb
cmp
stos
adc
nop
pop
in
adc
xchg
cld
sub
push
ljmp
lods
jne
xor
mov
shrl
xchg
subb
pop
adcb
out
fwait
jns
dec
sbb
xchg
fxtract
das
pop
insl
loopne
in
jb
in
addr16
mov
push
pop
cmp
mov
adc
mov
jp
mov
or
jb
inc
and
mov
push
nop
test
and
movsb
std
rcr
insb
cmpsb
fisttpll
hlt
pop
cmpb
and
pop
loop
scas
ljmp
xchg
negl
inc
jge
xlat
pop
xor
in
jns
jmp
mov
cmp
bound
sbb
and
xor
cmp
sub
stc
les
mov
cld
push
or
bound
sub
repnz
sbb
out
shlb
add
inc
mov
mov
mov
jmp
or
push
cmp
dec
rol
push
xchg
adc
jl
sbb
cmc
cld
mov
fdivrs
add
push
jbe
push
ror
ja
xrelease
push
lea
ds
clc
movsb
imul
call
sbb
ret
mov
fwait
mov
add
push
mov
cmp
dec
xor
lods
stos
and
mov
ss
movb
test
out
pop
scas
mov
cmp
cmp
punpckldq
mov
xor
fstpl
sub
clc
mov
xor
sbb
adc
movl
or
fstl
xor
subl
fwait
outsl
sbb
mov
pushl
inc
cltd
lret
cwtl
dec
add
test
sbb
jmp
push
pop
or
rorl
shl
aad
and
aad
mov
push
int
xor
push
sub
ss
xor
inc
adc
enter
rclb
lods
cmpsl
or
lret
sahf
std
movsl
ljmp
jo
je
in
jne
pop
push
sbb
fidivrl
cmp
in
xlat
or
rolb
rorl
scas
xlat
mov
xor
sub
mov
mov
jmp
push
pop
inc
cmpl
jb
mov
sub
scas
adc
jl
jg
jl
repz
inc
xor
push
mov
lds
xchg
cwtl
cmpb
mov
ljmp
loope
ja
imul
add
mov
cmp
icebp
cmp
fcmove
cmp
jbe
push
pop
push
push
shlb
ja
lods
loop
orb
cmpsl
cli
push
je
and
lret
mov
adc
fstpt
adc
cmp
or
pop
pop
lahf
dec
push
pop
lods
xchg
and
mov
movsb
cmp
mov
lock
out
stos
les
nop
pop
sub
fcomp
insl
jb
test
add
sub
mov
xor
cli
add
mov
xchg
mov
data16
sub
inc
mov
xchg
pop
scas
push
adc
bound
enter
out
cli
scas
mov
fiaddl
jno
jns
push
mulb
cmp
aam
cmpsb
jl
add
inc
jmp
aas
test
ror
int
and
insl
dec
insb
xor
rcrl
bound
je
dec
sti
rcrl
sbb
sti
bound
xchg
loop
pushf
or
jnp
jmp
push
mov
movsl
out
mov
das
or
adc
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
jmp
jecxz
out
jge
sti
mov
pop
cmp
popw
jl
xor
jl
xor
inc
jecxz
push
dec
xchg
icebp
adc
dec
mov
inc
cli
xchg
out
sub
pop
ret
popa
into
scas
or
popf
fists
test
pop
fstps
push
pop
cs
dec
push
sahf
sub
xor
jo
into
lahf
mov
xlat
lea
add
sahf
sub
divps
and
out
cmc
gs
in
dec
outsl
mov
pop
adc
dec
pop
pushf
test
dec
leave
aam
sar
pop
pop
lahf
test
mov
jae
sub
or
shld
sbb
mov
in
mov
jbe
arpl
das
out
vmulsd
cld
and
fistpll
rcr
cmpsb
arpl
inc
or
stc
arpl
or
cmpsl
jp
adc
test
lcall
enter
push
lret
pop
and
cmpsl
mov
popa
in
push
mov
movsb
dec
jne
imull
push
cmp
insl
dec
pop
jecxz
bound
test
cmpsl
mov
cmpsb
jle
cmp
pop
lds
hlt
mov
jle
or
mov
xor
je
jp
popa
mov
adc
icebp
mov
push
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
jmp
movzbl
adc
mov
adc
jmp
shrl
sti
insl
fs
push
movsb
movsl
dec
sub
sub
jl
jl
cmc
mov
mov
sub
cmp
test
push
mov
enter
fdivr
addr16
pushf
cs
repz
xchg
lock
psllq
mov
mov
sbb
mov
or
rorb
out
dec
into
mov
mov
out
jno
dec
xchg
ss
fsubl
cwtl
lcall
mov
xor
push
fstps
shrd
or
or
or
ljmp
inc
ret
out
push
xor
fimull
stos
or
subl
std
pop
push
xor
fsubl
push
sahf
and
pushf
gs
ret
aam
shll
mov
leave
sarb
popf
int
aas
addr16
fidivs
xchg
subb
mov
stos
adc
cmp
inc
out
fisttpl
lahf
test
mov
pop
cwtl
xor
shrb
das
mov
jmp
shl
xchg
fs
jns
adc
jne
in
int
sub
jl
jl
test
cmc
in
xor
mov
pop
shll
mov
popaw
xor
sbb
mov
or
inc
sbb
ret
mov
aam
pop
mov
xchg
xor
sbb
nop
aas
test
and
ret
pop
notl
and
test
push
loop
jmp
mov
jnp
cmpsl
dec
mov
cmpsb
rclb
in
mov
cmp
sub
mov
push
imul
mov
call
std
scas
jo
mov
sub
sahf
sub
add
mov
dec
jg
imul
mov
and
sbb
push
std
fsubrl
mov
fbstp
jns
mov
enter
dec
shlb
mov
add
int
dec
cmpsb
notl
scas
jge
test
loopne
mov
jl
push
sarb
xorl
xor
add
subl
mov
mov
xor
push
addl
mov
mov
subl
add
xorl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
jmp
enter
inc
lea
mov
sub
or
insb
jmp
sub
jl
jl
pop
or
mov
test
dec
repz
mov
mov
pop
pop
mov
stos
addr16
xchg
push
xchg
cmp
adc
xchg
test
push
jl
stc
mov
mov
das
pop
adc
rep
inc
lock
push
mov
and
or
sahf
roll
cltd
xchg
jo
flds
int3
jp
leave
or
call
cltd
push
add
ss
push
sbb
popa
lea
xchg
add
sbb
cmp
repnz
mov
shld
cmpsb
pop
xchg
in
or
cmpsb
push
clc
ror
mov
jbe
arpl
dec
mov
sahf
pop
sub
js
mov
add
pop
aam
repz
xor
movl
cwtl
dec
jbe
ret
hlt
cmp
scas
dec
ss
push
or
mov
adc
enter
sbb
pop
ret
push
mov
push
xor
xor
xor
or
sub
sub
movl
movzwl
adc
jmp
insl
je
xchg
jge
fs
mov
push
adc
jl
sbb
jl
out
leave
or
incl
add
pop
xchg
pop
push
cwtl
pop
mov
ds
ss
or
popf
pop
loop
mov
sbb
mov
xchg
std
rorl
sbb
add
mov
imul
repz
xor
int
mov
lods
mov
jg,pt
push
int
mov
pop
jae
mov
mov
pop
pop
xor
ja
popa
stos
inc
mov
je
add
inc
shll
test
test
mov
jno
jmp
push
jae
jmp
pop
movsl
popf
mov
clc
mov
jg
add
test
shll
int
shlb
into
pop
sarb
jl
addr16
cmp
lods
pop
or
mov
lahf
ds
push
inc
mov
daa
divl
ret
call
mov
push
fstpl
bound
dec
pop
cmpxchg
sbb
into
sub
mov
sub
decl
push
xsavec
aaa
adc
jbe
cwtl
lret
mov
in
push
mov
push
adc
add
notl
jmp
xor
push
jp
fnstsw
mov
or
cmp
jl
sbb
jl
in
dec
mov
scas
jl
jge
add
insl
out
xchg
stos
stc
and
pop
idiv
repz
dec
cltd
pop
add
into
xchg
arpl
cmp
push
popa
mov
jno
mov
int
cmp
mov
inc
mov
push
sbb
jge
daa
mov
lods
push
je
sub
cmp
jl
lret
ljmp
mov
dec
leave
push
cmp
and
sbb
inc
fwait
mov
add
aas
push
sbb
or
shl
add
scas
ret
sub
hlt
dec
add
xchg
std
xchg
mov
dec
add
lock
pop
in
pop
cmp
pop
out
push
add
jmp
jp
mov
add
andb
sub
mov
sbb
and
cmp
aaa
or
outsb
pop
push
dec
mov
in
mov
sub
jbe
inc
push
aaa
inc
cmpsb
gs
das
jnp
xchg
pop
popf
popf
fwait
add
sbb
mov
addb
push
sub
roll
or
test
neg
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
mov
mov
mov
mov
mov
mov
jmp
in
insl
push
jge
imul
mov
ret
fsubrs
jl
jg
jl
push
loope
or
dec
out
ror
jno
ds
sbb
sbb
mov
subb
add
sub
sub
fwait
repnz
stc
rcrb
test
sub
sarb
xor
mov
push
cmc
pop
xchg
pop
xor
cmp
popa
push
lea
mov
sarb
repnz
jp
scas
repnz
stos
cmpsl
pop
pop
xor
hlt
imul
cmpsb
sub
es
ret
outsb
mull
outsb
jmp
sti
mov
iret
jmp
aas
push
shr
imul
movsb
adcl
rcr
push
xchg
mov
insl
inc
mov
or
xchg
cwtl
adc
dec
loop
pop
dec
cmpsb
or
test
pop
pop
push
ret
enter
cld
dec
enter
inc
insl
sub
repnz
sahf
popf
inc
or
inc
adc
adc
add
rol
inc
ja
inc
mov
dec
push
std
mov
fs
sbb
sub
test
test
xchg
sbb
inc
or
inc
and
adc
test
jmp
pop
loope
sbb
lret
mov
push
nop
aad
in
jl
sbb
jl
gs
adc
add
adc
icebp
je
pop
roll
fisubl
xor
test
mov
repz
dec
in
and
sahf
arpl
movsb
shlb
sub
orl
sahf
rcrb
xchg
xchg
or
lock
cmpsb
jge
push
lahf
rcl
xchg
arpl
inc
dec
xor
leave
lods
movsl
and
mov
and
or
out
lea
ret
xchg
dec
mov
and
lea
pop
xor
dec
cld
fwait
stc
cltd
push
mov
int
jbe
xchg
testl
adc
std
add
dec
cmp
loop
cltd
cs
jmp
cmp
icebp
sub
pop
addr16
cli
pop
fists
into
push
mov
and
push
adcl
je
loop
test
mov
and
scas
sub
fistpll
lcall
pop
lods
cmp
xor
and
xor
mov
jne
mov
xor
add
leave
ret
push
mov
sub
adcl
jmp
or
dec
or
dec
aad
aas
adc
xchg
xchg
dec
xor
jg
jl
aaa
and
sub
sbb
sbb
adc
pop
mov
jl
sub
push
inc
push
int
adc
pop
or
add
cmp
out
int3
mov
and
cmpsb
std
mov
faddl
inc
mov
cmpsb
scas
arpl
rorb
adc
cmp
cmpsb
repnz
cmp
and
icebp
pop
sub
sti
jmp
sti
pop
pop
cmp
fidivrl
push
inc
sbb
test
sbb
lea
xchg
adc
les
test
xor
sub
xchg
cmp
inc
and
rcrb
jmp
std
mov
inc
adc
fstpl
mov
push
out
xor
jle
repnz
repnz
or
aas
push
cmp
or
mov
in
mov
push
leave
adc
bound
rcll
jns
lods
hlt
dec
inc
imul
and
jnp
lds
mov
and
sti
xchg
pushf
pop
aam
mov
mov
mov
subl
mov
neg
movl
adc
movl
mov
xorl
push
orl
push
adc
push
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
out
sub
sub
jmp
jae
lds
jl
or
dec
push
imul
pop
pop
mov
pop
popf
sub
and
pop
xchg
jecxz
inc
test
push
gs
cli
xor
ljmp
xchg
push
and
cltd
dec
xchg
mov
js
sub
jg
mov
jg
fwait
in
movsb
stos
lcall
jb
inc
sub
push
fnsave
je
adc
xor
xor
cmp
push
mov
cli
dec
adc
xchg
subb
or
mov
dec
dec
xchg
shlb
inc
repz
shll
loope
lock
stos
and
mov
push
fcompl
jle
fisubrs
cmc
mov
cmc
stos
rcrb
lods
and
mov
lea
and
into
mov
dec
xchg
gs
sahf
aaa
fisttps
outsb
mov
bound
adc
xor
inc
icebp
pop
add
add
sbb
mov
ljmp
int3
movsbl
push
pop
xor
movzwl
xor
mov
jmp
icebp
popa
jno
loope
mov
add
xchg
add
jae
and
jg
jl
lret
mov
inc
inc
jae
aam
or
fdivrl
es
adc
nop
testb
shll
cmp
cmpl
push
lods
push
loop
pop
divl
loope
iret
aam
in
push
or
scas
testb
inc
mov
jb
iret
lods
mov
std
dec
sbb
and
or
dec
add
repnz
pop
dec
in
dec
mov
sbb
xchg
pop
ret
mov
add
pop
scas
nop
dec
mov
dec
mov
popa
inc
cmp
out
fildl
mov
imul
lock
dec
lods
adc
mov
jnp
adcl
mov
dec
mov
xchg
and
popa
das
cltd
pop
clc
sbb
sub
std
mov
ret
outsl
mov
mov
adc
push
sbb
in
es
das
daa
repz
int3
ljmp
lret
cltd
mov
repnz
xlat
jecxz
mov
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
movl
movl
movl
movl
or
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
call
jmp
xor
mov
addl
xor
sbbl
add
mov
orl
movl
movb
or
mov
xor
add
sbbl
mov
decl
mov
xor
adcl
add
xorl
push
mov
xor
sbbl
add
xorl
push
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
xor
mov
negl
xor
add
orl
jmp
sarl
sarl
sub
xor
and
jg
jl
sarb
addr16
lret
inc
inc
mov
lods
inc
sub
mov
push
mov
test
stos
test
testb
dec
dec
sarl
ret
jg
lahf
loopne
mov
dec
xor
sti
cmc
leave
into
loopne
xor
dec
xlat
add
sub
or
xor
insl
in
xchg
seta
cmpb
mov
stos
iret
adc
pop
out
pop
jle
pop
frstor
pushf
lcall
xlat
mov
jecxz
sub
clc
lcall
inc
xchg
icebp
pusha
test
mov
ja
sub
mov
cmp
adc
xchg
sbb
xlat
cmp
imul
xchg
cmp
loope
imul
cli
stos
call
adc
popf
mov
jae
jle
dec
insb
loope
or
rorl
aaa
frstor
dec
sbbl
add
mov
push
xor
sub
and
mov
mov
and
push
lea
addl
push
orl
pushl
addl
jmp
push
repz
adc
shrb
jg
jl
sub
inc
pusha
mov
mov
cmp
pop
sub
dec
std
push
mov
or
add
int
sbb
icebp
dec
lds
add
sbb
rcrl
outsb
pop
shll
adc
or
xor
add
mov
xchg
or
faddl
and
in
mov
cmpsb
lcall
stc
pusha
cmp
loopne
sub
in
loop
out
hlt
cmp
jp
mov
out
inc
inc
hlt
dec
xchg
push
push
dec
dec
xchg
rolb
dec
cmp
adcb
insb
xor
xor
push
call
test
fmul
sbb
sbbb
jl
std
cmp
pop
or
int
rcrb
insb
push
adc
or
pusha
jp,pt
or
sbb
andb
mov
push
pop
mov
cmc
cli
push
fldcw
mov
jne
jmp
xchg
pop
cmpsl
inc
adc
sub
push
adc
jg
jl
and
idiv
ds
sub
movsl
mull
das
sti
pop
sahf
push
mov
lds
fldln2
push
xchg
call
dec
xor
xchg
adc
lahf
and
push
mov
popa
xchg
stos
jp
test
lret
add
pop
into
out
sti
out
fisttps
xchg
test
push
sub
xchg
sub
pusha
fsubs
mov
cs
pop
mov
sahf
jmp
or
out
xchg
cld
mov
lret
lcall
cmpsb
ja
jmp
in
enter
push
cmp
std
jecxz
and
push
xchg
fstpl
sbb
ds
ret
and
fucomip
cmp
mov
add
push
sub
mov
add
sub
jne
repnz
lret
inc
int3
out
xchg
out
js
jo
push
mov
add
cmp
cmp
daa
loope
ret
mul
inc
popa
enter
add
jne
aaa
out
and
push
mov
jmp
incl
add
add
add
mov
inc
in
xor
add
push
mov
jmp
dec
add
cmpl
fnsave
xchg
mov
testl
jl
jg
jl
push
mov
scas
lods
popa
mov
xchg
aad
push
add
cmpsl
lea
add
test
xchg
cld
das
jae
fs
icebp
add
nop
xchg
pop
mov
mov
push
aaa
rorl
out
cmp
test
mov
pop
imul
cld
or
popf
xchg
push
mov
lcall
pop
jns,pt
imul
push
adc
inc
mov
sbb
lods
popa
popf
sahf
and
imul
pop
sarb
cld
inc
mov
imul
lret
cmp
dec
pushf
je
adc
ja
pop
dec
dec
imul
in
mov
mov
xchg
jne
adc
sbb
jmp
addr16
sbb
jno
popf
xor
aas
rorl
push
ds
repnz
jmp
je
aam
jl
pop
mov
jbe
dec
jge
push
js
dec
jns
fimull
nop
sahf
in
mov
and
push
jmp
sub
jge
jge
fnstenv
ja
jnp
jl
or
movsl
ja
push
xchg
push
jp
mov
sub
stos
pop
call
ficomps
cmp
shll
scas
les
inc
jbe
cli
sub
dec
call
jmp
cmp
xchg
pop
into
adc
mov
jl
into
or
js
push
or
push
mov
dec
sub
in
int
leave
js
out
imulb
push
popf
cmp
push
inc
xchg
mov
dec
dec
arpl
int3
add
int3
arpl
mov
das
or
fisubl
xchg
dec
sbb
in
xor
xchg
push
adc
mov
sub
stos
imul
mov
sti
xchg
adc
enter
fwait
loop
or
sbb
xlat
mov
pop
lods
aad
int
cmpsl
xchg
movb
aad
rclb
dec
and
inc
fcoml
iret
pop
je
add
ja
int3
or
mov
inc
sarb
std
loope
out
test
push
xor
xchg
jb
dec
out
inc
lock
jmp
shr
dec
pop
pop
jns
insl
adc
shrb
cmp
jg
jl
push
fwait
mov
mov
insl
jecxz
je
and
or
mov
add
pop
xor
and
addr16
xor
dec
push
loop
call
addr16
mov
sbb
fsubr
push
scas
cmpsl
cmp
mov
pop
sbb
shlb
sub
stc
clc
mov
iret
lods
add
push
push
xchg
xor
xor
mov
jnp
js
lahf
pop
mov
mov
dec
dec
fstps
mov
xor
push
ja
mov
jmp
lahf
jg
cltd
cmp
das
movsl
dec
mov
rorb
jge
push
ljmp
out
jb
xchg
push
push
sub
inc
adc
jle
and
xlat
out
sbb
adc
or
stos
clc
xchg
test
mov
sti
imul
rcrb
sub
xor
pop
call
cmc
roll
std
loopne
jmp
std
jae
or
jbe
es
mov
lahf
jbe
scas
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
jmp
xor
mov
and
mov
cmp
jg
jl
sahf
filds
and
lea
xor
ss
adc
test
or
idivl
mov
sbb
roll
das
ret
bound
mov
jg
jne
cmp
adc
je
mov
loopne
ret
jae
mov
jbe
cmpsl
icebp
out
aas
inc
jl
lcall
ljmp
ret
sbb
or
dec
push
stc
add
adc
dec
mov
push
gs
add
ja
jnp
jle
mov
adc
adc
lret
adc
in
xor
jge
pop
or
jle
iret
int
adc
sub
or
and
push
ret
arpl
clc
inc
lahf
outsb
sub
push
testl
pop
mov
ja
add
cmp
repnz
or
enter
xor
fldl
imul
out
push
jp
push
xchg
orl
stc
shll
adc
decl
mov
sub
jmp
or
and
jnp
jnp
gs
push
and
and
or
pushf
or
jmp
jb
outsb
fimuls
jne
pop
jp
test
cmpb
cld
sbb
stos
je
xor
mov
mov
stc
xor
cld
test
les
lahf
cmpsb
sahf
sti
jmp
pop
sti
mov
aaa
mov
sti
pop
insl
cmpl
fiadds
into
mov
xor
data16
cmc
cmp
xchg
inc
jmp
xchg
lret
pop
out
test
xor
add
cmpsb
ss
frstor
jecxz
jne
sbb
xchg
in
loop
sub
cld
inc
sbb
aas
addl
inc
loopne
sbb
lods
cmp
adc
cmc
test
iret
cmp
sub
jnp
clc
pop
xor
in
scas
push
fistpll
xor
mov
mov
pop
popa
push
inc
mov
mov
jb
psraw
xchg
inc
jle
std
ret
fs
adc
mov
cmpsl
or
sub
mov
add
jmp
xchg
out
std
push
gs
repz
mov
daa
cmp
jg
jl
sbb
pop
xor
pop
mov
mov
pop
jbe
fisttpl
test
cltd
arpl
adc
hlt
dec
imul
adc
jge
mov
or
xorl
notb
fs
std
sub
push
push
sbb
push
int
ljmp
ljmp
adc
cmpb
loope
push
cmpsb
mov
push
arpl
fisttpll
pop
lods
cmp
pavgb
or
mov
sbb
mov
xchg
sarl
fldt
sub
pop
and
xor
push
adc
lcall
fidivl
ds
push
inc
add
inc
jecxz
int3
sub
jmp
dec
dec
rorl
out
call
dec
aaa
sbb
imul
stos
and
nop
out
arpl
repnz
push
xor
mov
push
dec
cmp
sbb
ja
seta
or
add
mov
sub
pusha
xchg
repnz
xchg
push
inc
clc
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
jmp
scas
stos
fs
js
addr16
mov
clc
aaa
xor
jl
or
sbb
mov
test
icebp
and
add
mov
notb
loope
cmp
xor
jecxz
pop
mov
sbb
jmp
mov
xchg
je
xchg
shl
sub
adc
scas
cmp
xor
ficomps
int3
enter
lea
sbb
out
jge
loop,pn
gs
mov
mov
data16
aaa
sub
ja
div
rcrb
sub
call
out
lcall
test
push
add
cmp
and
jecxz
cmp
out
adc
push
mov
jns
sarb
and
imul
jbe
daa
in
cld
arpl
sub
lret
aam
dec
and
inc
push
mov
daa
fistpll
popa
das
in
fincstp
out
negb
push
test
xor
xchg
and
icebp
pop
dec
pop
bound
push
inc
add
xor
add
xor
add
xor
daa
add
add
lret
mov
insl
lods
test
pop
cmpsl
lds
jl
jg
jl
scas
in
fcoml
dec
adc
test
mov
lret
and
inc
mov
or
mov
nop
loop
mov
xchg
cltd
fistpll
pop
inc
jmp
sbb
divb
aam
inc
inc
jge
sahf
into
or
jl
mov
mov
jl
scas
jmp
pop
hlt
lea
in
pusha
mov
int
jnp
dec
push
mov
adc
or
cmpsb
mov
in
xchg
jo
push
arpl
cmp
dec
push
xor
add
jl
sbb
push
or
lds
aaa
enter
movsb
push
outsb
mov
or
bndldx
lahf
aam
inc
sbb
push
fildl
js
shlb
xlat
or
in
mov
inc
jl
cwtl
andl
and
dec
lret
inc
xchg
ljmp
arpl
mov
loope
push
sub
imul
inc
sub
push
pop
call
mov
mov
jmp
gs
add
jge
jecxz
stos
insb
test
sbb
sarb
jl
or
icebp
mov
lea
stos
and
push
mov
movsb
dec
rcll
inc
xorl
shrl
lods
pop
dec
aam
sub
push
aad
mov
push
xchg
pushf
xchg
addr16
call
sbb
pop
xor
xor
bound
inc
adc
xor
insb
lea
outsb
aaa
adc
sbb
dec
and
rclb
sarb
loopne
cmpsb
cs
cmc
push
inc
push
xchg
and
stos
push
mov
cmp
lea
jge
mov
pop
fwait
sub
sbb
xchg
fcomps
and
outsb
add
sub
dec
icebp
dec
in
les
fs
stos
lods
sub
iret
orb
mov
inc
fnstsw
mov
orb
hlt
mov
fnstsw
add
aas
shrl
hlt
into
push
dec
mov
push
inc
sahf
insl
and
into
sub
or
arpl
hlt
xor
xchg
push
inc
pop
mov
add
pop
pop
pop
leave
ret
push
mov
sub
xor
movl
movl
orl
jmp
push
repz
pop
stos
lea
nop
push
jp
push
lret
jecxz
jl
push
jg
jl
mov
fcmove
in
call
push
jp
or
mov
pop
pop
lock
push
cwtl
cmp
cmc
inc
arpl
mov
sub
fs
xchg
movsl
scas
fcoml
sbb
fistpll
jb
int3
aas
inc
lods
pop
cmp
fcom
cmc
repz
mov
cmp
aaa
cltd
inc
std
daa
adcl
xor
subl
push
push
dec
aad
loop
jmp
inc
rclb
sbb
push
sub
test
pop
cmpsb
dec
das
mov
mov
cmp
adc
jnp
sbb
mov
sub
inc
repz
sub
sahf
in
push
lds
sbb
shlb
testb
sbb
loop
mov
sarl
or
lcall
mov
push
pop
push
cmp
mov
ret
inc
sub
movsb
repz
push
mov
xchg
sub
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
orl
mov
xorl
lea
and
jmp
divl
test
pop
jnp
js
ds
mov
lea
jl
push
jg
jl
dec
arpl
jo
inc
bnd
dec
in
or
cmp
enter
sub
or
lea
adc
fldenv
push
andl
shl
xchg
jl
pop
push
or
pop
jo
aam
je
or
and
rclb
aas
negl
inc
inc
popf
or
lea
mov
and
inc
jns,pn
in
adc
add
lcall
fwait
shll
insl
roll
fidivl
in
fldt
shll
xchg
add
and
push
or
adc
push
enter
inc
aaa
jne
dec
dec
inc
fmull
xchg
cwtl
iret
cmp
orl
psadbw
jno
fstps
sub
mov
inc
and
in
pop
arpl
es
inc
movsb
imul
jmp
and
scas
lret
adc
push
lahf
push
das
mov
lods
ljmp
cltd
fld
out
or
ja
ret
pusha
dec
pop
lcall
xor
add
movsb
flds
xor
jo
xchg
xor
jg
jl
pop
mov
fwait
xchg
mov
dec
xlat
repz
xor
inc
xchg
rcrl
xadd
repnz
xor
in
mov
out
lahf
dec
in
add
test
ljmp
add
push
inc
ljmp
insl
pop
outsl
hlt
mov
push
jg
icebp
or
test
and
sahf
jp
dec
fistl
out
mov
lcall
jo
add
pop
sbbl
fimull
pusha
jmp
jle
loopne
cmpsl
rol
ds
test
shrb
xor
out
push
jle
add
xor
int
jo
and
or
shrb
pop
jmp
pop
div
mov
sbb
imul
adc
lcall
mov
fst
adc
mov
sbb
movsb
add
imul
cmp
icebp
sbbb
shrl
clc
js
outsl
and
call
xchg
pop
neg
ret
in
mov
mov
add
mov
sbb
push
lea
mov
mov
adc
push
push
mov
orl
mov
mov
mov
and
mov
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
adcl
jmp
adc
in
data16
mov
lea
cmp
mov
jl
push
jg
jl
lret
lods
lcall
test
or
adc
mov
imul
push
test
das
loope
addr16
outsl
add
arpl
daa
sbb
leave
clc
daa
xchg
pushf
push
lds
lock
adc
inc
adc
testb
mov
push
lcall
sbb
divb
rorl
pop
add
dec
into
cltd
jle
jo
out
cmpsb
lcall
insl
jge
sbb
outsb
lahf
jmp
jbe
in
sbb
xor
push
or
ret
push
aad
cmp
push
movsb
xchg
lds
jae
pop
mov
mov
fdiv
lods
mov
in
xor
mov
fs
dec
inc
adc
xchg
add
movsl
ret
icebp
in
int3
pop
add
push
sbb
xor
or
int
xchg
je
aaa
or
cmc
pop
negb
fld
add
sbb
rolb
add
push
add
add
andl
add
movl
jmp
ss
call
pop
fcom
xor
cmc
mov
pop
xor
jg
jl
cld
cmpsb
add
mov
xor
and
mov
movsb
mov
push
fwait
xchg
dec
ret
mov
sub
xor
popa
repz
cmpsl
ficoms
sbb
ja
cld
jne
outsb
inc
ss
or
xor
dec
fs
popf
aas
pop
push
xlat
jecxz
pop
or
pop
add
adcb
mov
out
scas
pusha
xor
push
pop
imul
lahf
cmp
lahf
cmp
mov
push
fnstcw
js
popf
mov
insb
sbb
mov
sub
iret
jge
jecxz
lods
inc
mov
in
push
test
lret
push
pop
sub
or
hlt
cmp
xchg
leave
xchg
dec
call
mov
ss
xor
fdivs
out
mov
arpl
in
mov
mov
adc
out
outsb
ljmp
push
test
cmp
jmp
sbb
or
push
fs
ja
out
inc
sub
aas
xor
dec
inc
push
scas
ja
lcall
inc
inc
add
aam
dec
add
movl
cmp
je
mov
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
push
push
pushl
call
cmpl
jb
lea
mov
xor
xor
mov
sub
xor
jmp
lea
mov
std
inc
nop
leave
push
fsubl
jl
push
jg
jl
adc
mov
loope
adc
out
xlat
cmp
std
push
sbb
pushf
sbb
loopne
dec
or
enter
fcmovnu
stos
hlt
pop
rclb
ret
adc
xchg
imul
fwait
add
jle
sbb
sti
sti
inc
cs
pop
test
into
sub
jecxz
cmp
jae
jbe
nop
subb
cli
in
lahf
xchg
xorb
cmp
adc
rcrl
faddp
jge
xor
fnstsw
outsb
mull
add
jb
mov
aas
outsb
rorl
stos
shll
and
sub
imul
leave
sub
sahf
and
jmp
lahf
push
dec
int
outsl
cltd
ret
stc
and
jns
inc
pop
inc
sbb
iret
xchg
add
mov
mov
xchg
add
sub
add
and
mov
and
dec
push
scas
leave
stos
fwait
jg
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
imul
mov
mov
cmp
je
mov
jmp
fsubs
jp
jp
mov
xchg
fbld
stc
xchg
getsec
jl
push
jg
jl
arpl
dec
popf
mov
sub
arpl
cmpsb
gs
pop
insb
sbb
mov
shll
xchg
into
fs
mov
out
jmp
push
imul
imul
xor
testb
stos
jle
dec
push
inc
cmp
and
fisubrl
inc
hlt
arpl
test
fsts
adc
aas
fildl
fsincos
push
add
ss
sbb
sub
fnstenv
jge
testl
hlt
dec
mov
pop
push
cmp
loop
subl
mov
sub
sbb
mov
fiaddl
int3
cmpsb
push
inc
jnp
sub
test
inc
and
xor
rcrl
gs
rcr
sbb
add
div
mov
mov
stos
dec
js
loopnew
fists
mov
daa
mov
mov
mov
ds
sub
insb
push
icebp
adc
pop
imul
xchg
cli
or
xchg
outsb
cmp
pusha
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
jmp
jnp
lds
cmp
adc
sub
jl
push
jg
jl
cli
jbe
sub
leave
cli
dec
es
mov
icebp
xchg
pop
dec
ljmp
or
into
mov
nop
shl
jp
push
xlat
insb
push
ret
jns
inc
pop
pusha
outsl
pusha
sbb
push
cmp
sbb
scas
pop
movsb
mov
imul
jecxz
mov
adc
jle
sub
or
push
xorb
negb
mov
iret
push
and
mov
mov
mov
in
cltd
movsl
in
jae
mov
push
int3
in
addr16
dec
xchg
jne
dec
lock
adc
stos
xchg
mov
pusha
inc
and
pop
mov
loopne
dec
push
scas
cmpsl
mov
pusha
je
mov
aad
in
xor
mov
in
dec
leave
test
cmp
and
add
rcll
dec
out
xchg
adc
mov
push
sbb
and
xchg
cmp
add
jno
or
cmp
push
push
imul
inc
hlt
mov
or
cmp
je
mov
jmp
push
add
jge
jnp
and
pop
mov
leave
jl
push
jg
jl
outsb
cld
loope
xorl
sbb
mov
ret
inc
cmp
jle
pusha
cmp
add
out
or
push
std
std
loopne
and
adc
adc
jmp
sub
cltd
int
gs
test
jmp
sbbb
aad
mov
cmp
inc
pusha
dec
pop
mov
jns,pt
ss
jg
sub
mov
int
aad
jle
das
mov
fwait
je
ljmp
fwait
cmp
sub
dec
icebp
nopl
pop
dec
out
add
fs
stc
pop
stos
add
inc
pop
adc
dec
mov
mov
arpl
xchg
xchg
jmp
ficomps
xor
jbe
shlw
arpl
pop
movsl
repnz
rcll
cmc
cs
add
in
inc
andb
inc
sbb
icebp
mov
sub
movsl
push
or
cltd
adc
enter
fdivl
push
stos
rcl
fs
mov
sub
fdivp
pop
mov
xor
inc
std
jmp
inc
cld
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
jmp
pop
fst
jge
out
jnp
inc
sub
lods
dec
jl
push
jg
jl
xor
in
ja
lock
lret
xor
inc
pop
mov
sbb
jmp
add
js
das
insl
das
push
xlat
outsb
int
shl
xchg
xchg
adc
test
mov
dec
data16
je
adc
mov
sub
cmp
out
jle
mov
daa
jecxz
cltd
aaa
sbb
mov
aam
sahf
mov
inc
xor
xor
lahf
push
lock
aas
out
aad
mov
xor
xchg
enter
mov
aad
orb
sbbb
clc
cmp
lea
adc
adc
jae
and
daa
push
loopne
ds
std
popf
push
sbb
pop
cmp
mulb
xchg
adc
and
xorb
push
inc
lret
subb
aam
push
add
iret
roll
fsts
pop
sub
inc
repz
imul
jecxz
push
stos
addr16
cmpsl
or
js
hlt
jmp
fmull
jge
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
push
xor
push
movl
sub
movl
xor
or
sbb
mov
mov
decl
push
addl
mov
xor
mov
xor
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
add
jmp
xchg
and
and
out
mov
add
mov
out
jl
mov
loope
lcall
mov
and
pop
add
jno
sbb
pop
and
add
loope
inc
jo
xchg
add
enter
jae
ret
cltd
cld
push
inc
jp
xchg
not
jp
mov
movsl
inc
outsb
jle
dec
repz
jo
xchg
jg
outsl
add
inc
add
inc
popa
inc
add
push
sub
cli
pop
mov
cld
mov
sub
sbb
pop
adc
xor
pusha
inc
push
clc
add
imul
mov
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
jmp
mov
jns
std
ficomps
jo
jge
clc
jae
jl
mov
adc
mov
pop
lahf
fsubs
mov
add
decb
loop
sub
adc
pushf
jb
popl
cmpsl
xor
push
add
das
inc
xchg
ljmp
pushf
addr16
popa
or
sahf
stos
fbstp
test
and
lods
cmp
mov
jo
or
push
xchg
ror
sbb
pop
and
or
pusha
scas
adc
addr16
dec
xlat
pop
jmp
jno
adc
cmc
cwtl
scas
imul
roll
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
xorl
call
adcl
test
movl
je
orl
xor
jmp
subl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
movl
push
push
push
call
movl
cmp
je
orl
push
addl
push
adcl
push
adcl
push
sbbl
push
push
call
jmp
or
mov
and
mov
sub
movl
lea
adc
mov
add
lea
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
movzwl
sbb
mov
mov
xor
mov
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
orl
push
movzbl
sub
mov
mov
movl
xor
subl
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
add
mov
movzbl
mov
cmp
movl
mov
movl
je
neg
mov
xor
add
imul
mov
jmp
xor
xor
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
call
cmpl
jb
mov
mov
xor
inc
add
movzbl
sub
mov
mov
mov
orl
mov
sbbl
xor
sbbl
add
movl
cmp
jne
mov
sbb
mov
xor
add
mov
sub
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
xor
mov
mov
orl
mov
mov
xor
xor
dec
add
sbb
mov
add
lea
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
adc
mov
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
and
add
adcl
mov
mov
lea
or
mov
add
mov
sub
mov
xor
adc
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
subl
mov
sbb
movl
xor
mov
xor
mov
movzwl
xor
add
movl
mov
sub
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
add
movl
cmp
movl
jne
movzbl
adc
mov
mov
mov
orl
xor
orl
add
movl
cmp
jne
dec
mov
sbbl
mov
adc
xor
xorl
add
movzwl
sbb
mov
dec
mov
mov
sbb
xor
adc
mov
sbbl
sub
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
mov
cmp
je
mov
movl
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
add
mov
sub
mov
addl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
movzwl
sub
mov
movb
lea
mov
and
jmp
mov
icebp
test
stos
mov
cmp
daa
jg
jl
and
insl
cs
jmp
mov
cmovbe
mov
pushf
int3
addr16
mov
xchg
je
repnz
out
pop
je
popa
in
and
call
jo
sarl
pop
and
sbb
stos
cmp
insl
daa
xor
sub
dec
shrb
inc
insl
ret
xor
pop
inc
lods
push
imul
xor
or
je
or
test
sbb
repnz
cmp
subb
std
inc
loop
int
repz
inc
lds
lcall
cmp
hlt
adc
in
sub
hlt
sarl
dec
mov
dec
xor
mov
in
pop
sub
add
in
mov
xchg
sbb
mov
xchg
imul
jo
mov
mov
xor
xchg
xor
lds
outsb
test
lret
dec
dec
jge
roll
test
std
lret
mov
fisubl
sbb
add
mov
adc
test
add
jle
inc
lea
jo
loopne
mov
xorl
mov
andl
xor
sub
movl
mov
sbbl
movl
movl
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
xor
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
jmp
xor
mov
add
jmp
movl
mov
movl
mov
inc
movl
cmp
jb
mov
xorl
mov
addl
jmp
cmp
bound
push
pop
jmp
adc
dec
mov
bound
jg
jl
stc
add
es
and
or
mov
mov
sahf
popf
push
pop
sub
scas
inc
test
xchg
shl
stc
add
cmp
in
lods
dec
shrl
push
mov
mov
cmp
cld
clc
or
xchg
gs
shl
cmpl
jno
cltd
pop
mov
mov
sahf
xchg
dec
fstp
pop
out
adc
xchg
loopne
lcall
mov
jmp
dec
pop
dec
cld
jmp
adc
fs
rorl
aaa
mov
das
int3
sub
out
pop
xchg
lcall
cmpsl
xchg
data16
lods
iret
fisttpl
push
lret
pop
jae
leave
loope
fsubp
jns
popa
fisttps
movsb
pop
and
jnp
and
jp
pop
sbb
lods
fsub
aad
insb
lock
adc
push
insl
in
dec
inc
cwtl
adc
lret
sbb
loope
jecxz
mov
movsl
xor
and
pop
pop
add
mov
and
pop
push
iret
cmp
adc
dec
shrb
mov
popa
mov
cmpsl
lahf
loope
or
add
test
xor
add
movl
cmp
movl
je
addl
push
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
jmp
push
ss
std
push
jge
pop
add
or
sub
jl
daa
jg
jl
in
sbb
dec
dec
movsl
call
mov
repnz
inc
add
stc
mov
cmpsb
repnz
mov
push
cltd
adc
cmpsb
mov
mov
gs
pop
out
loope
in
xchg
test
hlt
test
rcr
scas
js
pop
inc
cmpsb
adc
stos
xchg
in
iret
and
and
aaa
push
gs
stos
int3
testl
clc
dec
add
sbbl
add
fmuls
sub
test
add
fcmovbe
xchg
out
mov
pop
adc
mov
xchg
subl
repz
scas
dec
shll
jmp
ljmp
inc
sti
jp
repz
pop
dec
imul
shlb
sbb
inc
xchg
movsl
mov
bound
push
pcmpeqb
decb
out
fsts
adc
std
testb
in
or
bound
add
not
stos
pop
jbe
and
cmpl
ss
or
ja
and
or
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
jmp
add
clc
pop
clc
sbb
sti
insl
sbb
mov
pop
or
into
jl
daa
jg
jl
adc
fcompl
cmp
adc
daa
data16
sarb
outsl
loope
mov
xor
dec
pusha
mov
jno
int3
shr
mov
and
dec
mov
fistps
sub
loop
sbb
add
xchg
jns
sub
mov
imul
push
xor
sub
loopne
ret
add
je
int
mov
ja
in
pop
add
sub
cmp
test
pushf
leave
xchg
adc
and
mov
and
jp
insb
mov
sub
xchg
pop
enter
xor
adc
sub
cld
cs
daa
xchg
cmp
sbb
cmp
add
jg
addr16
mov
fcmovu
xchg
sub
mov
popa
shrl
push
int3
lcall
inc
mov
repnz
mov
loope
and
ret
jmp
xchg
lds
movsb
ret
xchg
scas
inc
push
or
mov
outsl
into
rolb
addr16
hlt
lret
xchg
cmpsb
cmp
inc
call
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
sub
mov
jmp
push
xchg
fs
fs
data16
pop
lds
lret
sarl
jl
sub
jno
ja
mov
push
ret
scas
add
push
mov
sub
dec
or
imulb
pop
push
mov
sub
jb,pt
mov
xor
ret
pop
arpl
jo
inc
mov
push
xor
sbb
sbb
imul
jmp
adc
imul
sbb
roll
push
addb
stos
mov
mov
lds
mov
into
cmp
filds
jg
jmp
mov
xor
flds
out
aad
ljmp
push
negl
shrb
sub
sub
into
scas
mov
out
mov
sbb
popa
push
push
mov
pop
mull
repnz
jne
mulb
mov
mov
ds
fmull
jno
mov
sbb
scas
xchg
lcall
xchg
inc
es
jl
push
ja
std
ja
xlat
xchg
lea
or
xchg
stc
sub
sub
and
pop
sbb
sbb
sarb
lahf
add
xor
jl
jg
es
das
mov
fiadds
inc
xor
and
push
out
jmp
lock
mov
adc
loopne
inc
add
add
add
bound
arpl
cltd
jp
fldenv
mov
jl
lret
jl
push
dec
jg
mov
inc
jle
add
xchg
andb
out
dec
in
adc
repz
popa
inc
mov
aam
je
adc
popa
repz
xchg
dec
clc
test
and
jge
ja
adc
cmp
popa
addr16
lret
sti
pop
clc
imul
xchg
jg
mov
push
adc
dec
fdivl
cld
xchg
pop
pop
or
mov
pop
cs
xchg
push
xchg
fidivs
test
mov
cmp
rcll
pop
mov
fisubl
lea
push
pop
cmp
enter
and
dec
fwait
test
sbb
push
sbb
shr
cmpsb
in
movsb
jl
jecxz
call
cmc
push
mov
addl
sahf
or
repnz
call
sub
ret
mov
jno
sub
addr16
add
lcall
das
es
pop
mov
stos
sub
pop
pop
push
sarl
jns
inc
pop
mov
adc
in
sbbb
loope
movsl
xchg
rolb
rcrb
ljmp
xchg
sub
sar
fldcw
inc
push
movl
jne
or
mov
mov
adcl
add
mov
xor
or
sub
and
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
mov
xor
push
mov
mov
add
cmp
jmp
mov
mov
test
cmpps
jl
and
sti
inc
in
inc
push
shrb
adcb
cmp
jg
and
adc
stos
fdiv
cmp
fwait
scas
stos
lret
xorb
jne
daa
jb
mov
dec
mov
xor
jo
imul
lock
popa
div
js
adc
cmp
enter
pop
dec
ljmp
inc
jne
adc
cmp
adc
jns
and
iret
cmpsb
add
sbb
rcrb
sbb
pop
dec
sbb
adc
fwait
out
add
xor
jmp
bnd
cmp
xor
adc
mov
inc
lret
pushf
xor
clc
nop
enter
sub
cmp
lret
sbb
repz
hlt
inc
jbe
dec
inc
cmpsb
ss
dec
insb
pop
mov
mov
or
adc
stos
nop
xor
insl
xchg
loopne
adc
arpl
adc
xor
daa
inc
les
add
in
inc
mov
sub
scas
into
jo
lcall
push
fildll
icebp
ja
loop
add
jmp
mov
sbb
xchg
rcl
mov
pop
push
je
mov
jmp
jmp
xchg
test
loopne
bound
add
sahf
sub
lret
jl
xchg
mov
mov
add
jno
cmp
cs
cmp
pop
leave
fs
stos
imul
push
cmp
out
xor
sub
scas
sub
hlt
cmp
outsl
pop
mov
fcmovb
cld
push
xor
fs
pop
cmp
imul
push
dec
stos
jmp
lret
jge
aas
pop
mov
mov
and
fiaddl
jge
movsb
or
xor
cmp
mov
cmp
out
pop
jg
into
imul
std
mov
xor
fnclex
ffreep
and
inc
xchg
push
mov
cmp
out
imul
adc
hlt
adc
xor
int3
push
push
cmpsl
jno
fs
lods
cmp
push
jae
xor
add
mov
mov
adc
in
mov
aam
cmp
push
pop
test
sbb
pop
adc
mov
fbld
ds
xor
jg
jae
aas
push
mov
xchg
dec
pop
les
jo
mov
mov
es
orl
mov
test
xchg
add
pop
out
dec
pop
and
es
in
cli
cmpsl
fidivrs
adc
inc
cld
jmp
aam
rolb
pop
fs
jge
fdivp
push
movsl
imull
jg
jl
jns
dec
dec
mov
push
fdivp
notl
rolb
repnz
push
lds
jle
outsl
mov
ret
xchg
jnp
mov
call
add
enter
repnz
ljmp
fstpl
xchg
mov
ja
mov
ret
notl
movsl
outsb
push
pop
push
lods
xor
imul
push
jno
test
loope
xchg
inc
movsl
dec
out
push
mulb
inc
fwait
push
cmp
in
adc
sub
jp
in
aad
pop
push
outsl
mov
dec
jg
loope
pop
adc
imul
dec
jae
push
xor
cs
outsb
push
imul
xlat
arpl
pop
ficomps
xchg
les
sub
dec
sbb
pop
fidivl
push
movsb
daa
insb
data16
mov
mov
push
lods
fs
mov
push
mov
or
jecxz
ret
fmulp
xor
outsb
lcall
mov
orb
xor
jmp
decl
cld
push
and
mov
sbb
add
mov
add
arpl
mov
outsl
flds
push
sti
sub
mov
rorl
rdpmc
ret
jmp
mov
xor
add
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
out
cld
call
fisttps
jmp
out
incl
xlat
lea
inc
ljmp
incl
aaa
add
pop
movl
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
call
jge
mov
fcom
add
mov
add
add
imul
push
fisttps
test
aam
lret
add
rcl
movl
jl
test
jmp
incl
loope
aam
test
out
mov
mov
add
call
lret
cld
incl
out
xor
mov
cld
jl
mov
add
mov
decl
add
inc
xor
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
movl
inc
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
sahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jl
add
mov
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
xor
test
test
ds
pushf
inc
mov
outsl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
sahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
sahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
sahf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
bound
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
bound
inc
add
dec
bound
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
sahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
sahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
shlb
add
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
xor
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
xor
jl
add
add
or
test
clc
or
xor
inc
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
add
data16
push
call
mov
cld
inc
test
inc
mov
sbb
inc
test
rorb
add
add
add
popw
test
cmp
jbe
lea
add
mov
sub
mov
mov
in
mov
jb
incl
mov
sbb
push
mov
movl
add
mov
mov
pushf
mov
lea
decl
movb
pusha
jmp
mov
xor
xor
add
in
mov
addl
mov
data16
addl
push
loope
inc
add
mov
out
incl
and
test
incl
jl
leave
add
test
outsl
fiadds
mov
test
in
incl
loope
inc
data16
inc
call
add
filds
inc
inc
xlat
xor
pushf
jl
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
and
inc
cmp
jne
movl
lret
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jl
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
in
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
into
mov
cwtl
movl
call
add
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
out
pushl
add
push
out
xor
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loopne
adc
call
mov
sbb
loop
ds
dec
mov
sub
inc
mov
xor
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
pushl
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
xor
sar
xor
xor
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
sahf
mov
add
add
cmp
je
add
mov
pop
mov
sahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
mov
dec
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
sahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
sahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
sahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
xor
add
rolb
mov
or
inc
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
xor
in
jne
mov
or
icebp
sahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
push
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
add
icebp
jmp
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
xor
xor
repnz
clc
mov
rcll
stc
or
mov
in
sahf
jne
mov
or
sahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
pop
xor
add
inc
hlt
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
data16
pushf
or
rcll
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
xor
pushf
aam
xabort
dec
inc
xor
inc
add
add
dec
mov
cld
mov
xor
pushf
dec
mov
xor
mov
xor
push
xchg
xor
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
out
mov
hlt
mov
mov
in
jb
push
inc
push
jl
leave
cmove
lods
add
mov
or
xor
or
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
enter
sbb
inc
ljmp
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
and
incl
xor
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
sahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
sbb
mov
inc
jge
pushaw
xor
data16
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
sahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
mov
data16
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
ds
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
add
cmp
je
push
pop
sysexit
leave
dec
bound
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
cmp
fs
ss
je
xor
inc
inc
add
ss
pushf
push
je
xor
mov
andl
add
in
push
mov
pushf
cld
mov
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
dec
push
mov
mov
rclb
add
ret
jne
mov
xor
callw
cmp
fs
mov
pop
sub
add
xor
cmp
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
clc
pop
inc
mov
push
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
sahf
in
xor
mov
clc
test
xor
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
xor
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
push
mov
add
xor
sub
mov
inc
inc
mov
dec
sahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
xor
mov
mov
cld
test
push
inc
mov
sahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
sahf
xor
add
inc
xor
pushf
std
xor
inc
fadds
inc
mov
inc
sahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
sahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
pushf
or
inc
adc
jne
xor
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
push
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
jne
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jl
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
decl
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
in
pushf
mov
push
call
add
cmp
add
add
mov
mov
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
cmp
fs
add
leave
rorb
push
inc
in
mov
or
lock
test
clc
rolb
xor
pushf
add
mov
cmp
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
xor
inc
cld
xor
add
inc
test
clc
hlt
inc
test
inc
inc
aad
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
xor
pushf
ss
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
dec
cld
mov
or
into
inc
iret
or
add
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
sahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
xor
pushf
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
push
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
xor
pushf
test
clc
adc
test
xor
lock
xor
add
mov
sbb
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
loopne
enter
inc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
xor
inc
int3
xor
xor
pushf
adc
inc
les
test
clc
inc
inc
pushl
hlt
pushf
jne
mov
or
bound
clc
lea
cmp
shl
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
xor
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
sahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
push
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
push
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
aas
or
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
xor
pushf
inc
jmp
addl
jne
or
or
jne
call
mov
add
adc
add
add
add
incl
push
cli
add
shll
inc
jmp
xor
test
cli
incl
incl
and
mov
or
and
and
add
push
and
and
add
ss
incl
xor
mov
and
pushf
pushf
clc
decl
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
in
jp
jp
jnp
adc
mov
add
pop
add
jmp
ret
lods
cwtl
mov
jecxz
notb
mov
mov
and
scas
notl
orb
repnz
fbld
jne
pop
imulb
pop
hlt
std
pop
sub
outsb
push
push
in
sbb
mov
jecxz
movsl
xchg
push
mov
sbb
mov
int
aaa
sub
push
pusha
and
xchg
jp
daa
mov
mov
aas
mov
xor
cs
push
addl
jns
mov
mov
daa
add
add
dec
or
or
sti
push
inc
testl
dec
outsl
mov
sar
cmp
loop
filds
jne
and
adc
sub
and
sbb
pop
idiv
pop
xchg
fnstenv
xchg
inc
push
sbbb
and
and
dec
rorb
jle
test
test
sbb
movsb
adc
test
push
sub
push
test
bound
or
nop
fildl
test
cwtl
lds
mov
cwtl
fldt
jb
aaa
inc
popa
out
lock
xlat
fmulp
xor
addr16
push
movsb
jns
js
sub
and
shrb
dec
rorb
sub
dec
int
cmc
add
sub
addr16
jecxz
dec
ret
insl
push
xor
ja
sbb
notb
push
add
lcall
mov
mov
dec
mov
push
data16
clc
add
and
inc
cmc
xor
nop
xor
cmp
xchg
cwtl
add
lods
mov
sub
mov
stc
inc
nop
insb
iret
inc
mov
and
sub
sub
dec
add
jmp
dec
daa
push
jns
lea
cmp
js
addr16
shlb
adc
fadds
iret
js
inc
in
repnz
xor
into
mov
inc
dec
xchg
out
mov
cld
leave
pop
cmp
lret
cmp
pop
mov
dec
mov
and
mov
pushf
xor
scas
push
xchg
xchg
adc
xor
das
test
je
mov
push
mov
out
loopne
popa
jle
cmp
mov
push
push
pop
mov
mov
frstor
shlb
dec
jo
out
xorl
aad
insb
js
push
push
pop
fcompl
cmpsb
cmc
mov
mov
sbb
adc
push
dec
aam
std
and
rol
fdivrl
cmovg
and
jge
ds
out
lret
jle
mov
es
mov
sub
or
sbb
xor
push
pop
leave
xchg
je
subb
and
cld
loop
popf
mov
jmp
test
cmp
stc
insl
push
rolb
sti
mov
mov
jnp
loop
and
dec
push
fisubrs
enter
call
jge
je
xchg
xlat
aas
xchg
in
lahf
out
jle
inc
sub
loope
adc
pop
xchg
and
ficoml
mov
lret
sbb
inc
add
test
in
cmp
adc
and
and
jbe
testb
imul
cmp
cld
out
loope
dec
mov
jle
inc
xor
popa
ja
clc
or
aas
ss
dec
cmpsb
fwait
cwtl
jno
push
xor
or
scas
jnp
sbb
repnz
cmp
call
testl
mov
movsl
xchg
dec
xchg
mov
inc
popa
push
data16
addl
mov
out
xor
loopne
pop
ret
les
pusha
iret
jp
hlt
das
dec
and
push
inc
sub
test
lea
popa
js
jno
pop
push
das
pop
sbb
mov
fs
rorl
je
stc
pop
cmc
dec
in
mov
arpl
shl
push
push
xlat
andl
inc
arpl
xchg
jnp
jns
adc
pop
adc
adc
test
adcb
or
in
aad
push
ret
pop
outsb
mov
sub
and
xchg
adc
dec
inc
test
out
jno
xor
cmp
cmp
ret
lock
imul
push
xchg
push
or
inc
loop
call
xchg
rcl
push
lret
mov
insb
movsl
jnp
cmpsb
cmc
icebp
bsr
mov
ds
cmp
push
cli
push
lods
sarl
xchg
pop
xor
stc
inc
push
aam
lahf
dec
xor
fwait
cmc
pop
sbb
and
mov
sub
out
xchg
rolb
xchg
mov
jne
aad
out
ficompl
xor
jle
pop
inc
scas
add
jl
inc
rcrl
dec
cwtl
sbb
dec
inc
sub
jnp
push
jb
push
or
dec
cmp
stos
int3
sub
imul
subl
mov
mov
push
outsb
add
lods
insl
les
sub
sub
aam
sub
push
add
rclb
pop
daa
cmc
adc
xor
into
adc
ds
loop
xor
sbb
jmp
lods
xlat
or
cmpsl
mov
rcr
sbb
gs
and
mov
dec
mov
and
mov
push
mov
into
scas
negl
data16
add
cmc
rcrl
daa
mov
push
xorb
jb
push
pop
pop
fnstcw
sub
jae
xor
ss
or
es
mov
popf
mov
stc
mov
add
mov
push
xor
lods
pusha
push
bound
and
mov
or
rcr
je
out
fidivrs
lock
test
lds
out
pushl
cmp
mov
call
and
pop
fs
sbb
inc
inc
mov
mov
leave
push
inc
mov
pop
sbb
mov
fldenv
pop
mov
stos
mov
cwtl
jnp
fdivl
cmp
or
and
mov
call
mov
lods
scas
ss
shlb
add
xorb
insb
clc
dec
jno
mov
js
or
fwait
cli
cmp
mov
mov
stc
sub
in
movsb
jb
jae
cmp
pop
jbe
lds
shlb
ljmp
dec
hlt
cmp
sbb
fcmovnu
xchg
leave
jp
mov
loopne
out
add
xchg
mov
sbb
mov
mov
and
add
adc
scas
sub
xchg
das
jb
jecxz
pop
cli
pop
sahf
cli
sub
aam
in
negb
sbb
cld
dec
jecxz
leave
cmpsl
out
ja
push
pop
jno
xchg
jbe
jo
sbb
into
rorl
or
fldenv
pop
scas
add
mov
pop
xchg
pop
mov
mov
mov
stos
pop
insl
inc
cli
or
mov
in
cmp
lahf
fwait
in
lret
jmp
inc
xlat
xor
inc
or
leave
adc
mov
xchg
jmp
cmp
inc
sub
imul
add
inc
xchg
xor
mov
cmpsb
test
imul
dec
jns
pop
aas
pop
loop
scas
test
or
insb
fdivrs
mov
inc
push
push
loopne
aam
pop
mov
xchg
and
incb
test
and
xor
ljmp
mov
lea
aad
sbb
add
sti
std
mov
fcoms
cs
pop
adc
xor
push
loope
shll
mov
adc
jp
mov
inc
push
mov
sbb
push
inc
es
add
in
loop
jmp
jge
inc
fwait
scas
inc
outsb
pop
mov
mov
cmp
out
out
or
adc
fbstp
xchg
test
pusha
xchg
push
push
and
repz
sbb
sbb
push
or
push
in
sbb
jns
fst
mov
dec
test
xor
lcall
mov
xchg
jg
in
mov
sub
inc
jne
in
pushl
fsubrs
xor
mov
dec
xchg
repz
lret
shr
or
sbb
cmc
cwtl
in
dec
push
sar
outsb
mov
push
jb
outsl
pop
test
inc
xchg
adc
xor
dec
jns
mov
mov
cmp
test
lsl
sbb
mov
orb
test
call
and
fists
xlat
adc
insl
sub
mov
push
add
xchg
pop
lret
dec
je
repnz
fldenv
ljmp
mov
negb
cs
loop
or
push
inc
rorl
mov
arpl
push
fsubrl
mov
cs
sub
pop
data16
inc
dec
out
stos
int3
push
int3
pop
cs
jg
lods
jbe
test
cmpsb
cmpb
sub
icebp
push
inc
xchg
sbbb
fisttpll
xchg
test
cmp
inc
jbe
add
repnz
push
xchg
mov
loopne
outsb
or
orb
and
sbbl
push
sbbb
lea
aam
cmc
mov
fcom
and
shl
les
inc
pop
mov
loope
pusha
hlt
sub
add
jae
nop
cmpsl
inc
or
in
fdiv
hlt
jb
rcll
out
pop
jmp
lods
sbb
sbb
xor
mov
sub
gs
add
or
push
das
ret
arpl
add
mov
mov
adc
in
sbb
clc
jge
das
aaa
push
sti
int3
pop
test
mov
lods
ret
mov
cmc
mulb
sbb
jno
mov
daa
je
push
or
out
cmpsl
xor
call
iret
jae
pop
xor
loopne
pop
mov
sub
andb
mov
pop
xor
xchg
add
xor
out
out
lahf
sahf
add
ficompl
inc
pop
out
jno
add
xchg
cmp
test
push
cli
aaa
cltd
dec
bound
out
mov
sub
loopne
cmc
ljmp
mov
movsb
inc
out
fmuls
cmp
pop
test
cwtl
repz
adcb
fwait
pop
mov
mov
out
mov
in
jne
sbb
fnsave
cmp
test
cli
cmc
loop
xchg
add
lds
adc
ret
mov
scas
dec
mov
je
popf
push
bswap
jb
loop
imulb
gs
stc
xchg
loop
xor
push
daa
cmpsl
mov
inc
jae
popa
xor
dec
popa
ss
das
rolb
test
adc
ds
mov
daa
js
push
sub
enter
pop
ret
xchg
mov
inc
lods
sub
int
jae
fs
sub
sbbb
or
dec
or
arpl
pop
adc
xchg
xchg
and
sbb
adc
pop
stos
enter
xor
pop
xchg
or
jb
lds
out
fnstenv
std
incb
outsl
divb
insb
je
jns
addr16
or
xchg
mul
sub
cmp
scas
jns
xchg
ficoml
mov
test
xchg
jns
adc
ja
sti
clc
das
bound
lret
xchg
loope
outsl
or
cmp
mov
pop
pop
mov
sbb
push
push
inc
mov
ret
cltd
test
mov
imul
aam
in
jp
xchg
and
popf
pop
push
ds
sub
jns
aaa
into
imul
test
pop
inc
pop
cmc
xor
shlb
aas
push
pop
cs
movsb
pop
mov
jp
jbe
cmp
into
push
dec
adc
add
std
jecxz
push
push
rolb
je
popf
frstor
pop
fiaddl
faddl
add
ljmp
insl
mov
push
enter
sbb
sub
mov
sbb
inc
inc
xchg
dec
fs
insl
mov
push
add
cmp
cmp
rorl
pop
push
jecxz
mov
mov
test
push
or
pop
sbb
mov
int3
sbb
push
imul
movsl
cmp
ret
and
cli
test
xchg
mov
jg
je
adc
inc
cltd
dec
push
sub
pop
xchg
sbbb
adc
shll
jp
fstpl
outsb
dec
adc
inc
add
pop
call
pop
mov
cmc
mov
test
in
cmpsl
inc
sbb
loop
roll
lret
pusha
mov
pop
mov
fnstcw
sub
adc
call
xchg
mov
cs
mov
and
dec
mov
lcall
jmp
cmp
insb
pop
mov
nop
arpl
mov
fstl
test
jp
mov
movsl
shlb
subl
les
testb
gs
shrl
ja
xlat
jecxz
sbb
push
fwait
in
pop
jl
into
sldt
push
cli
divb
out
adc
out
add
and
add
sub
in
sbb
inc
fsubl
insb
in
jecxz
add
stc
xor
sub
xor
repz
aaa
outsb
sub
in
dec
lds
dec
xor
inc
dec
pop
jg
adc
inc
xchg
cmc
push
pop
add
cwtl
xchg
out
mov
pop
dec
lea
pop
jp
add
je
mov
roll
jne
stos
mov
ds
or
inc
add
pop
push
push
xchg
iret
add
sbb
into
mov
jo
and
mov
or
xor
iret
stos
sub
int3
idivl
mov
xor
testb
lods
in
dec
adc
mov
movl
xchg
push
inc
cwtl
and
adc
mov
add
jge
mov
mov
mov
fcoml
mov
push
cs
pusha
das
pop
dec
lock
pop
fcoms
lahf
out
test
decb
and
jg
mov
pop
jle
mov
add
dec
ret
mov
iret
inc
shlb
cmovnp
or
rcrb
xor
insb
mov
out
enter
mov
push
and
and
std
sub
out
cs
fistps
cmp
dec
fs
xchg
mov
testl
mov
test
loop
test
mov
pop
cmp
daa
outsb
ja
jge
and
add
fsubr
outsb
xor
push
or
clc
scas
xor
xchg
in
pop
bound
or
loop
in
js
lods
clc
cmc
sbb
xchg
shr
clc
ja
xchg
sub
call
imul
cmp
jns
add
gs
rolb
test
mov
filds
fdiv
sub
movb
xchg
mov
test
movsb
pop
test
inc
lret
test
je
xor
jno
dec
mov
jle
cmp
xchg
mov
jmp
add
adc
test
pusha
pop
pushf
mov
add
adc
js
enter
push
and
psrad
mov
dec
pop
cltd
js
hlt
aam
pushf
push
add
clc
push
sub
pop
gs
add
and
sbb
mov
movsl
xor
jns
inc
jb
mov
sbb
repz
enter
dec
xchg
lcall
pop
std
inc
icebp
je
into
test
jnp
cmp
ljmp
cmp
testb
xor
sti
xchg
stos
sub
and
je
inc
jecxz
scas
fs
mov
sbb
pop
cmc
xor
fisubrl
inc
setg
imul
cwtl
pop
mov
pop
sbb
push
cld
xor
fisubrs
fs
mov
sahf
insl
nop
mov
add
and
pop
push
xor
ds
and
sar
clc
pop
dec
inc
aad
adc
xchg
cmp
push
sbb
subl
inc
sub
movsl
std
jg
lahf
pop
mov
aad
popl
or
xchg
out
mov
out
or
adc
loope
push
dec
fistpl
mov
call
cltd
lahf
movsb
lahf
cltd
pusha
adc
jecxz
ja
stc
sub
pop
movsb
mov
test
mov
mov
adc
inc
leave
jg
repz
or
adc
xchg
add
scas
movsl
imul
push
sbb
cs
mov
cltd
sbb
inc
outsl
mov
movsb
lds
xlat
inc
test
leave
pop
jo
movsb
or
push
pop
incl
sbb
lods
loop
jp
ja
jmp
icebp
cmpsb
mov
mov
dec
sbb
mov
int3
jmp
sbb
mov
lods
ljmp
sbb
loopne
subl
dec
push
stos
sbb
insb
mov
xor
push
shrl
push
or
out
hlt
push
pop
mov
ret
mov
js
popa
cmp
mov
push
jle
inc
push
imul
jns
shrb
lret
insb
add
cs
push
xchg
adc
or
dec
lea
aaa
out
outsl
movsb
and
jle
clc
aad
loop
repz
test
call
mov
mov
pop
adc
cli
call
push
pop
ja
cmp
or
iret
insl
bound
in
outsl
orl
insl
sub
lcall
dec
jbe
adc
push
xlat
out
nop
into
pop
or
in
ss
or
loop
cmp
movsl
and
jmp
sbb
jmp
rorl
cmp
mov
mov
push
inc
movsl
aad
in
mov
cmpsl
into
ror
mov
mov
jmp
pop
add
push
testb
cmp
pop
and
or
popa
dec
fadd
jae
cltd
hlt
ret
jnp
outsb
mov
mov
sti
dec
sub
xor
clc
mov
cmp
dec
cmpsl
and
mov
loopne
in
dec
push
mov
insb
rcr
mov
xchg
sbb
popf
fwait
insl
pop
lea
outsl
sti
ja
mov
enter
dec
call
aam
arpl
jg
ds
divl
add
xor
shll
dec
xchg
jnp
cmp
xchg
inc
inc
fwait
rolb
lods
int3
mov
push
lahf
push
fdivl
loop
in
xor
jmp
add
ljmp
loop
adc
out
aas
xchg
xor
aas
loop
leave
xchg
inc
add
jb
iret
aas
mov
inc
lods
xor
pop
aas
mov
call
loopne
inc
in
sbb
sbb
je
ja
loope
lahf
gs
aaa
add
cld
sbb
dec
addr16
call
lahf
and
add
testb
ljmp
inc
or
jmp
shr
adc
int3
jge
hlt
and
into
stos
fcomps
incl
sarl
repz
fwait
insb
rol
sbb
xchg
pop
push
dec
pusha
add
loopne
rcrb
jecxz
jle
pop
cmpsb
mov
mov
pusha
pop
pop
enter
mov
push
inc
or
jge
iret
lahf
fs
pushf
add
mov
orb
test
jb
inc
jg
out
cmpsb
xchg
enter
repz
push
push
lea
push
or
hlt
add
and
sbb
sub
inc
insl
inc
insl
jb
in
pop
in
jnp
push
test
push
subb
jbe
ret
adc
fcomps
ret
cmp
push
add
ss
or
pop
in
testl
cmp
out
add
and
add
cmpsb
sbb
pop
movsl
outsl
adc
jne
addr16
es
xchg
push
loop
fdivl
pop
cltd
call
cmpsb
pop
mov
pop
xorl
ret
rclb
pop
inc
dec
std
orb
xlat
jbe
nop
and
mov
push
ret
dec
pop
test
xchg
jbe
sti
repz
xchg
loopne
xor
hlt
push
shlb
and
jle
push
adc
sbb
iret
add
aas
mov
stos
or
int
mov
js
incb
kmovb
xchg
imul
fs
adc
leave
mov
and
xchg
or
popa
pushfw
nop
sub
loop
pop
jl
jg
pop
push
jae
les
push
popa
push
insb
cwtl
iret
shr
ja
sub
in
icebp
jp
cmpsl
ja
sub
bound
and
inc
fmuls
movsl
leave
cmp
les
sbb
inc
sub
clc
xchg
sub
xor
lods
popa
mov
dec
sub
mov
push
add
dec
in
lock
push
cmp
out
repz
test
jbe
jmp
test
fisubrl
fisttpll
add
mov
pop
mov
push
sbb
pop
call
int3
xor
shlb
es
addr16
ss
je
movsb
iret
shlb
aad
xor
andb
or
movsl
lahf
bound
push
dec
lock
add
xchg
popa
in
dec
inc
mov
mov
cmc
mov
sbb
jle
adc
pop
test
int
push
mov
cltd
test
mov
mov
xchg
mov
jl
or
aas
clc
jne
cs
insl
mov
xor
sub
ret
sbb
mov
adc
pop
das
stc
adc
mov
mov
mov
dec
xor
data16
mov
mov
lea
dec
sbb
pushf
fistpl
fnsave
sti
inc
stos
push
js
out
test
mov
mov
rcl
jl
mov
cmpsb
pop
pop
xchg
enter
or
sub
outsl
pop
pop
add
jecxz
xor
outsb
loop
xor
lock
sbb
jns
jnp
add
cmpsl
adc
push
add
adc
shl
mov
xchg
mov
push
mov
cmpsb
gs
xchg
pop
sub
test
push
je
push
sbb
addr16
mov
icebp
cwtl
jp
inc
ljmp
add
test
pop
mov
out
sub
stos
ja
xchg
mov
scas
xchg
fadds
and
cmc
jnp
inc
je
shlb
daa
pop
and
mov
mov
cld
cmp
jle
sub
cmpsl
mov
adc
out
fldenv
fstl
lcall
mov
dec
lret
and
sahf
outsl
fcomp
mov
adc
bound
xor
mov
mov
out
xor
add
sbbb
pop
lahf
cmp
insl
adc
cmpsl
jg
vrcpss
push
shrl
xor
sti
repnz
fld
cld
adc
fsts
int3
xor
xor
scas
je
stos
pop
mov
mov
dec
fst
popl
pop
in
int3
int3
scas
icebp
and
sbb
mov
dec
iret
fstpt
popa
inc
sub
sbb
repnz
xor
lock
scas
ljmp
shll
cltd
add
xorb
sub
push
loope
push
pop
cmpsl
sarl
sahf
jecxz
int
out
negl
jmp
gs
cmc
roll
aas
outsb
rclb
cmpl
mov
push
faddl
rcr
bound
hlt
cmp
jnp
sub
cli
cmp
lods
jae
inc
fs
mov
xchg
jle
push
dec
nop
mov
fs
jne
cld
mov
cmp
xchg
daa
bound
aam
cmp
and
dec
add
les
dec
aas
ja
inc
sbbl
movsb
push
leave
xchg
inc
pop
jae
add
rorl
fsubs
xchg
das
ljmp
daa
mov
jae
adc
push
push
sub
fdivp
add
cs
adc
sub
push
orb
sbb
ss
std
ja
in
int3
test
pushf
in
and
dec
sub
sbb
ljmp
std
out
or
clc
and
inc
adc
jb
movsb
mov
aam
jp
pop
push
int
daa
movsb
dec
mov
xchg
pop
cmp
clc
jecxz
mov
mov
push
outsl
pop
iret
es
lods
mov
cs
icebp
mov
mov
leave
ja
bound
cli
or
das
aam
ficompl
sub
insl
pop
aad
push
ja
jge
xchg
in
push
fistpl
lret
mov
aas
push
inc
dec
cmc
scas
or
iret
mov
mov
push
fs
mov
nop
sbb
sahf
in
or
int
dec
pop
xchg
inc
inc
call
dec
or
ret
cmp
jb
jg
push
icebp
lcall
xor
ss
in
andl
jl
jbe
data16
or
fistps
andb
aad
push
xorb
mov
adc
xchg
push
mov
pop
push
ljmp
xor
jge
shrb
arpl
push
and
xor
and
jo
lahf
sub
jo
ret
inc
lods
ljmp
in
ret
lods
imul
outsl
cmp
mov
and
daa
jbe
dec
jne
arpl
xchg
jb
pop
mov
xchg
lock
arpl
sbb
leave
mov
xchg
dec
pop
jno
adc
mov
inc
lret
dec
cmp
push
ja
push
jae
mov
add
int
int
call
cmp
stc
icebp
push
outsl
mov
mov
dec
test
fwait
dec
movsb
lds
xor
pop
jg
dec
jl
scas
fstl
add
es
rolb
push
popa
ds
jae
mov
movsb
icebp
push
push
data16
sti
mov
sbb
fdiv
xor
stos
addr16
fs
push
in
inc
inc
fildl
out
cmpsb
push
ja
pop
jp
cmp
outsb
icebp
push
mov
mov
xchg
xor
rcl
mov
or
movb
ja
mov
cmp
adc
xor
fwait
movsl
in
add
adc
jnp
int
ficoms
mov
or
add
and
add
mov
sahf
jo
aas
gs
imul
push
xchg
fists
in
xchg
out
lret
fimull
push
in
outsl
lret
shl
adc
push
lds
out
out
lods
and
add
adc
push
int3
lret
mov
outsl
fwait
mov
add
and
push
inc
mov
cmpsb
mov
mov
dec
and
dec
stos
jno
xorl
les
pusha
push
mov
cwtl
lods
push
lahf
sub
mov
out
adc
pop
iret
cmp
mov
jmp
mov
scas
movsl
mov
psraw
and
push
scas
enter
fidivrs
fidivrl
sbb
enter
ret
sbb
inc
js
cmp
dec
stc
loope
inc
outsl
outsl
jbe
sbb
cld
xor
sbb
push
enter
push
and
in
mov
sahf
stos
jg
push
add
mov
push
cmp
dec
fstpl
mov
xlat
int
jg
lock
sub
scas
and
ret
xor
mov
scas
xchg
iret
jg
jmp
stos
aas
int
sbb
les
dec
jo
aam
pop
in
xchg
and
movl
cwtl
inc
mov
lods
cwtl
aad
scas
mov
ja
and
push
jge
adc
popf
push
xor
and
xchg
dec
inc
mov
pusha
test
dec
push
leave
mov
aam
rcr
ret
pop
sub
mov
add
mov
xor
cmpb
into
fildl
das
cmp
push
cltd
pop
add
mov
cmpsb
inc
or
stc
push
pushf
insb
in
cmp
push
jns
lret
mov
scas
pop
mov
enter
cs
scas
pop
pop
or
leave
roll
jns
xor
repnz
insl
sub
jbe
mov
loop
xor
frstor
xchg
lret
in
outsb
mov
inc
xor
push
xchg
lods
and
addr16
mov
dec
test
jge
xchg
js
jecxz
adc
out
testb
pop
xor
push
sub
jno
insb
pop
jg
sahf
mov
nop
out
mov
imul
and
fists
mov
jne
pop
sbb
jge
push
xchg
cmp
mov
add
leave
aaa
mov
pop
mov
lcall
loop
push
mov
add
icebp
cmc
fs
sahf
push
xorl
shll
lret
xor
pop
mov
jo
pop
das
sbb
jp
jle
test
push
iret
out
cmpsl
je
testb
or
jne
clc
clc
sbb
test
push
aad
xor
out
popf
insb
sub
pushf
mov
rolb
stc
cmpsl
adc
stc
jbe
int3
mov
cmpsb
fmulp
mov
inc
shlb
gs
mov
push
jno
sub
loope
sub
mov
mov
push
stos
sbb
in
fwait
mov
in
stos
lea
mov
or
cmc
test
pop
fidivrl
mov
xchg
fidivrs
mov
int3
in
xor
icebp
and
popf
gs
adc
jae
mov
jmp
pop
adc
daa
inc
or
test
jp
mov
push
and
subl
jb,pn
jns
jno
test
sbbb
push
cli
jbe
adc
mov
inc
test
xchg
outsl
aas
add
int
cmp
push
in
gs
cpuid
addr16
cmpl
inc
pop
fsubs
and
add
insb
loopne
sarl
into
add
in
pop
aas
sub
jbe
jns
jno
push
pop
mov
pusha
dec
push
mov
adc
fistpl
into
movl
lcall
mov
movb
addr16
and
bound
xor
inc
popf
mov
lock
ljmp
pop
addr16
lea
outsl
mov
sbbl
and
faddl
add
stos
mov
cmp
or
sub
xor
add
add
xchg
add
sbb
pushf
pushf
fmull
adc
fdivl
stos
cmp
cmc
cli
pop
je
shlb
pop
loop
and
bound
int3
jne
ror
sti
enter
clc
xor
fsubs
mov
mov
jle
push
cmp
jnp
push
xchg
pusha
das
fs
js
sub
push
xchg
repnz
out
fs
or
jb
sbb
addl
mov
push
mov
ret
lods
xchg
mov
pop
sbb
add
negl
sub
dec
fimull
jo
xor
add
jnp
fmul
sbb
stc
mov
rcl
popa
lret
push
imul
sub
sub
inc
cmc
mulb
jp
or
add
ret
push
cmp
push
jmp
sub
jns
jae
test
insl
lea
dec
add
or
pop
std
enter
xor
mov
and
and
enter
mov
xorl
jbe
je
inc
push
xchg
push
pop
mov
adc
aad
enter
in
lea
inc
sub
mov
push
test
dec
sarb
jp
or
ds
sbb
xor
ret
iret
cmp
inc
or
sub
lahf
js
pusha
sbb
mov
test
iret
cmpsb
rcrl
fs
fbstp
mov
test
ja
jmp
fs
dec
test
addr16
pop
fsubrs
fs
pusha
int
inc
test
loop
push
adc
dec
sub
sbb
mov
mov
cmc
inc
test
movsl
testl
imul
cmp
xchg
enter
out
pop
sub
in
stos
mov
mov
int3
sbb
daa
gs
shll
pop
mov
xor
jo
cld
jb
or
cmp
arpl
xchg
pop
fimuls
push
add
sbb
loope
rcr
cmp
xor
dec
mov
jp
jae
xlat
loop
cs
dec
out
movsl
push
add
and
push
scas
adcl
dec
lret
imulb
mov
shlb
inc
iret
push
movb
add
or
das
fbstp
sub
dec
or
fcmove
repnz
push
cltd
push
leave
adcl
add
daa
jbe
idivl
mov
and
jne
add
add
add
dec
and
xchg
movsl
jmp
add
scas
pop
dec
les
fcom
out
xchg
xchg
fiadds
mov
and
cltd
cld
mov
xor
lock
push
sub
hlt
sub
pop
ficoml
jb
or
push
jne
lcall
cmpsl
dec
pop
lods
mov
test
pusha
pop
inc
xor
jne
scas
sub
out
nop
in
push
xchg
popf
dec
ds
pop
shlb
fisttps
xchg
gs
scas
adc
shlb
mov
movsb
stc
sub
adc
push
jmp
push
xor
mov
jbe
lods
or
adc
push
push
inc
aam
add
xor
mov
xor
movsb
xchg
subb
scas
rorl
outsl
repnz
mov
xor
add
subl
or
sarl
sub
loope
mov
sbb
daa
insl
xor
sbb
call
xor
pop
lahf
popa
mov
loopne
or
rcrb
pushf
push
lds
cmp
mov
sbb
out
fstp
add
or
mov
and
aad
fstpt
mov
xchg
repnz
cwtl
shrl
add
cld
mov
cmp
out
adc
fsubrl
inc
and
add
jle
fmulp
mov
fcom
sub
out
push
aad
frstor
sbb
pop
xlat
jne
arpl
sub
lock
mulb
lods
and
or
sbb
and
xchg
fs
lret
popf
daa
mov
lret
and
cmp
xchg
mov
mov
xchg
push
or
xchg
stc
cmpsl
es
movups
jmp
xchg
cmp
xor
and
cs
int
xor
mov
out
daa
inc
rorb
repnz
mov
mov
sub
or
pop
sbb
bound
out
fsubrp
and
xor
and
cmp
add
adc
cmp
bound
cwtl
aam
arpl
or
sbb
sub
xor
mov
mov
lods
mov
test
lock
gs
sub
rclb
dec
pop
mov
and
mov
aas
fisubrs
in
jae
les
push
or
cmp
pop
fisttpl
pop
fldcw
dec
jbe,pn
test
sub
adc
cs
dec
call
mov
loop
sub
inc
sahf
push
or
pop
ret
xor
fisubrl
lahf
mov
movsl
movl
addr16
aam
mov
add
push
rcl
inc
xor
popf
sub
sarl
mov
mov
push
lahf
mov
sbb
pop
mov
ss
call
jecxz
mov
repz
xchg
mov
in
addr16
mov
jnp
es
mov
push
add
cmc
sbb
xor
lds
push
vmovaps
push
dec
xor
fdivrp
push
adc
pusha
mov
or
ret
int
dec
inc
les
cmp
mov
cmp
cmp
out
int
pusha
ljmp
dec
mov
shrb
mov
loop
sbb
mov
mov
stos
cmc
push
mov
aad
pop
sbb
cmp
shlb
add
push
mov
push
les
dec
movsl
add
cli
xchg
and
jno
pop
add
mov
jle
daa
xor
xchg
ret
das
xlat
test
adc
mov
inc
mov
les
push
sub
inc
daa
rorb
enter
pop
out
cmp
repz
and
sbb
and
bound
ss
jne
adc
sbb
aam
mov
push
sbb
adc
rorl
adc
fisubs
add
sbb
divl
cmpsl
fstps
icebp
push
mov
rcrb
push
cmp
scas
and
outsl
dec
ljmp
xchg
jl
jns
jg
adc
scas
jle
bound
cltd
lds
js
dec
jle
lods
mov
cmpps
into
call
xlat
mov
mov
faddl
jecxz
pushf
stc
cmp
rolb
pop
push
push
dec
rcrl
inc
or
mov
lret
adc
cvttps2pi
in
xchg
adc
xchg
add
rol
sbb
stos
in
movsl
mov
stos
inc
xchg
inc
faddp
or
jbe
push
mov
ficoml
out
imul
mov
insl
add
push
imul
or
mov
pop
fisubrs
enter
pop
fxam
scas
mov
inc
dec
mov
int3
addr16
lods
stos
add
and
scas
mov
sbb
xchg
std
in
dec
mov
cmc
bound
sub
sbb
sbb
sbb
js
mov
dec
jle
xchg
movsl
cli
loopne
sbb
decb
pop
lods
and
or
fdivrl
xchg
call
mov
in
sbb
adc
xor
pop
shll
fs
mov
adc
and
insl
out
jle
iret
pop
sti
mov
sahf
jecxz
mov
dec
xchg
sbb
and
jne
aam
mov
leave
test
icebp
dec
ret
sahf
adc
fildl
jle
jae
movsl
repnz
sub
ljmp
mov
pop
dec
test
push
notb
dec
dec
cwtl
dec
push
mov
and
test
push
pop
cmp
je
arpl
test
std
cld
cmpsl
popa
lahf
sbb
or
icebp
fwait
dec
mov
rclb
js
add
data16
dec
je
aaa
stos
cmpsb
push
inc
mov
xchg
cmp
cmpsb
cmpsb
cld
xchg
dec
rcrl
mov
popa
inc
pop
xchg
jge
pop
and
add
daa
fcmove
jmp
and
in
jge
add
into
fstl
mov
les
inc
popf
inc
add
pop
jmp
push
js
jl
pop
inc
adc
inc
add
sbb
jo
push
out
shrl
bound
cmpsl
cmp
shrl
sarb
lock
bnd
pop
pop
push
loope
enter
adc
xchg
sahf
insb
mov
push
inc
add
mov
xchg
adc
gs
add
inc
dec
jne
mov
cmp
rcl
jl
pop
add
lahf
mov
add
add
adc
lods
push
adc
punpcklwd
add
adc
shlb
add
js
add
xor
aaa
add
push
pop
inc
dec
xor
inc
ss
xor
pop
dec
inc
add
pop
xor
dec
inc
pop
xor
push
pop
xor
push
cmp
add
push
xor
dec
inc
pop
xor
dec
inc
aaa
add
push
xor
pop
inc
inc
push
pop
inc
pop
push
add
xor
xor
inc
add
xor
xor
xor
push
pop
inc
add
push
pop
inc
pop
push
xor
add
xor
inc
cmp
push
cmp
push
xor
cmp
pop
push
dec
dec
add
pop
pop
dec
cmp
cmp
add
xor
dec
inc
xor
pop
cmp
add
xor
push
push
inc
pop
push
xor
push
inc
push
pop
dec
xor
cmp
inc
inc
pop
push
pop
push
dec
pop
push
xor
pop
push
push
cmp
dec
push
push
dec
xor
dec
dec
xor
push
dec
cmp
pop
inc
dec
pop
inc
push
push
pop
inc
add
xor
dec
cmp
push
push
add
dec
xor
xor
inc
dec
xor
ss
dec
cmp
push
push
aaa
xor
xor
pop
push
push
push
dec
pop
inc
add
pop
xor
pop
xor
inc
xor
xor
xor
push
xor
dec
xor
push
add
pop
add
push
add
xor
pop
add
add
push
add
add
dec
add
xor
pop
add
push
add
add
xor
pop
add
add
add
xor
inc
add
inc
add
xor
add
inc
add
add
inc
add
pop
add
add
push
add
pop
add
dec
add
add
inc
add
xor
add
inc
add
add
add
pop
add
xor
pop
add
add
push
add
add
pop
add
dec
add
xor
add
dec
add
add
aaa
add
inc
add
add
inc
add
xor
add
inc
add
dec
add
push
add
inc
add
add
add
pop
add
add
dec
add
add
cmp
xor
pop
add
add
pop
add
pop
add
add
add
push
add
add
xor
pop
add
inc
add
push
add
dec
add
cmp
aaa
add
add
dec
add
pop
add
inc
add
xor
dec
add
push
add
add
dec
add
dec
add
xor
add
add
push
add
add
pop
add
cs
add
test
add
rolb
add
add
add
xor
add
pusha
or
adcb
cmpb
subb
adc
add
call
add
sbbb
add
dec
or
addb
add
sbb
add
cmp
add
add
add
add
add
add
add
sbb
add
add
add
add
add
dec
pop
add
bound
add
jp
add
mov
add
andl
enter
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
repnz
add
fstpl
add
adc
add
sub
add
add
add
add
add
add
add
push
or
addb
addb
add
add
add
add
add
add
add
dec
or
sbbb
subb
jo
add
mov
add
add
add
add
add
add
add
jg
add
mov
add
add
add
add
add
add
add
nop
or
cmpb
add
mov
add
xor
add
add
orb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
add
add
shrb
add
add
add
add
add
add
add
add
xor
add
mov
add
andb
add
test
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
xchg
or
sbb
add
lock
addb
add
add
add
add
add
add
add
int3
or
orb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
ret
add
or
add
add
add
add
add
sbb
add
or
add
add
add
add
add
and
add
in
add
add
add
lock
sbb
add
in
add
add
add
or
add
push
or
add
add
add
add
add
inc
add
push
or
add
add
add
add
add
dec
add
push
or
add
add
add
add
add
add
or
add
in
add
add
add
ds
add
or
add
in
add
add
add
dec
add
push
or
add
add
add
add
add
add
adc
add
in
add
add
add
push
or
add
add
add
add
add
add
push
or
add
add
add
add
add
add
in
add
add
add
lcall
add
add
add
add
add
add
in
add
add
add
mov
add
sbb
add
in
add
add
add
shlb
add
add
add
add
add
lods
add
push
or
add
add
add
add
add
mov
add
or
add
add
add
add
add
rolb
or
add
in
add
add
add
or
add
adc
add
in
add
add
add
push
rolb
add
or
add
add
add
add
add
add
push
or
add
add
add
add
add
in
add
or
add
add
add
add
add
add
adc
add
in
add
add
add
testb
push
or
add
add
add
add
add
add
push
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
pop
add
add
inc
add
inc
add
aaa
add
xor
or
push
add
xor
pop
add
push
add
add
add
add
add
pop
add
add
add
cmp
cmp
push
add
add
or
inc
add
add
xor
add
add
add
add
xor
xor
add
add
add
cmp
inc
add
add
push
add
pop
add
xor
dec
add
cmp
or
push
add
inc
add
xor
add
add
xor
dec
add
or
inc
add
add
add
dec
add
push
add
add
add
aaa
add
add
add
cmp
cmp
inc
add
xor
dec
add
add
inc
add
add
push
add
dec
add
pop
add
add
inc
add
or
push
add
add
add
add
push
add
add
or
inc
add
dec
add
add
add
push
add
pop
add
add
or
dec
add
push
add
push
add
add
xor
push
add
cmp
dec
add
xor
inc
add
add
cmp
pop
add
dec
add
add
add
dec
add
pop
add
add
xor
dec
add
dec
add
push
add
dec
add
add
pop
add
inc
add
add
add
xor
xor
add
add
add
add
add
add
add
inc
add
add
dec
add
or
dec
add
dec
add
dec
add
xor
pop
add
add
dec
add
add
cmp
xor
pop
add
add
add
add
dec
add
push
add
xor
inc
add
push
add
add
pop
add
xor
inc
add
add
pop
add
pop
add
add
push
add
cmp
xor
add
pop
add
push
add
add
add
inc
add
add
add
inc
add
inc
add
add
add
dec
add
add
push
add
pop
add
inc
add
add
add
push
add
inc
add
dec
add
inc
add
xor
push
add
push
add
pop
add
inc
add
dec
add
pop
add
push
add
dec
add
add
push
add
add
add
add
add
add
push
add
inc
add
cmp
pop
add
pop
add
add
inc
add
pop
add
aaa
add
pop
add
push
add
push
add
add
xor
xor
pop
add
add
add
cmp
push
add
xor
xor
dec
add
cmp
pop
add
add
cmp
add
add
pop
addl
sarb
pop
add
and
add
aaa
insb
aas
or
xchg
pusha
xchg
lret
lods
mov
popf
int3
xor
fsubrl
xchg
add
loopne
jp
rcr
movsb
mov
scas
adc
dec
flds
jg
ljmp
pop
sub
daa
mov
stc
mov
stos
and
iret
jmp
mov
imulb
fdivr
inc
cmpsl
pop
dec
adc
sbb
icebp
ss
fs
xchg
repz
mov
les
inc
xchg
or
adc
cmp
pop
xbegin
xchg
push
out
pop
scas
sub
xor
mov
pusha
fs
xchg
test
mov
jp
sub
mov
inc
pop
pusha
int3
aaa
jle
add
fwait
ja
out
sub
scas
pop
jmp
ljmp
inc
insl
adc
add
jbe
pop
mov
movsl
jecxz
mov
pop
jmp
fdivrl
mov
and
sti
inc
and
ljmp
pop
fildl
add
sub
imul
xor
mov
xchg
inc
pusha
lahf
push
pop
rcrl
repnz
ljmp
and
push
inc
dec
test
mov
sti
pop
sub
imul
mov
adcb
sbb
sub
icebp
test
xchg
sbb
scas
into
or
xor
mov
int3
or
jno
mov
and
sbb
stos
js
cli
loop
sub
xchg
xchg
das
lea
sub
sbb
add
mov
xchg
ret
or
or
fucom
in
mov
mov
mov
and
inc
xchg
pop
mov
aam
idivb
lods
iret
les
push
inc
and
or
je
pop
ss
ljmp
jnp
pop
lea
call
je
int
mov
out
shrl
mov
ret
fs
inc
push
mov
in
jbe
shlb
mov
iret
cmp
add
fs
xlat
cmp
mov
pop
add
xchg
push
outsb
mov
cmp
hlt
in
push
pop
xchg
shll
insb
xor
pop
xor
test
mov
call
ret
mov
aas
jo
in
mov
lret
push
jle
mov
mov
idivl
dec
ljmp
out
in
sub
push
xor
xchg
sbbb
cmp
push
pusha
bound
mov
cld
imul
pop
cmp
lcall
jo
push
mov
out
jne
sub
pop
test
out
scas
cmpsb
mov
adc
bnd
cmp
and
mov
loopne
cmp
data16
sbb
xchg
or
jge
imull
into
enter
ret
jp
mov
add
cmp
jecxz
mov
in
jb
addr16
es
cmc
xchg
cwtl
mov
pop
inc
fs
shlb
pusha
pop
lock
in
sbb
std
push
xchg
mov
xor
ficoms
adc
push
and
es
ja
ret
mov
repnz
jmp
lds
mov
pop
sti
lahf
push
pushl
dec
es
aas
movsb
mov
fcomip
sub
push
out
inc
cmp
push
outsb
sub
xor
add
pop
fbld
dec
xor
xor
pop
sbb
ficoml
mov
ret
jp
dec
iret
xchg
bound
cli
mov
fistpll
ret
ficomps
adc
jno
dec
and
xchg
in
inc
sub
aam
pop
outsl
xchg
pop
jae
xchg
lret
adc
cli
insb
stc
divl
int
cli
pop
imul
cmpsl
cmpsb
repnz
gs
cmpl
sub
push
push
lret
lods
jge
cs
fimull
xor
jg
add
dec
push
mov
mov
cmpsl
aad
imul
in
not
ja
addr16
test
and
sti
stc
sub
push
and
mov
dec
mov
scas
inc
push
mov
mov
out
push
pop
fdivp
push
into
xorb
sub
mov
dec
jnp
int
mov
repz
jns
cwtl
fucomip
inc
push
cld
insl
inc
fsubp
movsb
mov
stos
lods
adcl
ret
aaa
jbe
leave
lahf
stos
dec
sbb
or
divb
out
adc
cmp
sbb
sbb
lea
cmpsb
pop
ret
push
addb
sub
cmp
xchg
call
aad
rorl
cli
jge
cs
out
or
push
test
stc
sbb
mov
xchg
fsubs
je
cmc
jmp
stos
bound
lret
add
fisttps
repz
aad
outsl
pop
popf
mov
iret
neg
aad
dec
xor
sub
and
ret
cmp
sub
outsl
dec
loopne
fimuls
xchg
pop
ljmp
ucomiss
sarb
mov
pop
andb
jne
imull
stc
cmp
xlat
add
adc
add
in
jmp
or
out
or
shll
ret
mov
cld
push
push
jns
add
or
xchg
push
sub
and
movsl
push
dec
or
mov
add
rcll
xchg
jl
mov
es
jge
imul
push
xor
std
cli
push
scas
jnp
pushf
int3
outsb
cltd
dec
addl
jne
mov
out
xor
push
jle
push
pushl
cmp
addr16
je
inc
notl
xchg
pop
pop
insl
shr
lock
add
iret
pop
add
js
adc
pushf
popa
pop
add
push
ds
fsubrl
adc
imul
dec
jp
gs
cmp
mov
and
xchg
aam
mov
sbb
xchg
sbb
pop
cmp
jmp
push
mov
pop
fwait
xchg
insl
enter
dec
pop
js
mov
test
inc
push
hlt
stos
aas
and
inc
outsb
cmp
mov
jae
add
jne
iret
cmp
je
sbb
dec
jns
mov
cltd
cmp
sti
repnz
out
jnp
adc
adc
pop
cs
movsl
mov
lret
insb
push
inc
and
ret
adc
cmpb
test
cmp
cmp
add
mov
das
das
sub
movsb
movl
adcb
sub
adc
loop
push
mov
inc
popf
jne
aas
push
mov
mov
and
and
out
mov
mov
add
pop
add
cmp
test
int3
dec
cmp
mov
or
jns
loope
cmp
rorl
cmc
out
jg
stos
std
das
aad
in
out
xor
pusha
dec
aad
es
push
mov
scas
rcr
sub
cmp
jge
dec
push
jl
mov
xchg
sahf
cwtl
inc
mov
lds
arpl
jo
lea
daa
imul
xchg
push
push
mov
js
lods
in
into
pop
cmp
fisttps
iret
in
nop
mov
int
pop
or
mov
out
cmc
dec
xor
jp
loope
outsl
cs
fs
mov
mov
loope
movsb
sbb
add
out
xchg
leave
sub
or
js
push
fimuls
clc
lock
ficoms
mov
jle
mov
adc
in
xchg
jae
dec
mov
inc
add
and
adc
es
int
test
cmp
and
bound
lahf
adc
hlt
cltd
addb
call
jge
in
xor
test
mov
push
jle
ret
push
rclb
test
mov
inc
mov
jle
aas
rcll
jmp
adc
mov
das
out
gs
add
testl
shlb
mov
jbe
mov
out
call
out
dec
mov
or
leave
mov
cmp
and
ss
outsb
and
push
filds
cmp
push
xchg
dec
adc
dec
dec
sbb
roll
in
roll
nop
int
xchg
std
in
jo
mov
mov
and
jmp
and
gs
add
jb
jns
sarb
sub
out
lock
movsw
testl
push
push
flds
mov
std
fincstp
rcll
jl
inc
jle
cmp
dec
cld
mov
mov
js
xchg
std
stos
inc
ss
mov
inc
je
mov
jne
xchg
hlt
or
mov
imul
movsl
outsb
int3
lcall
mov
adc
test
jnp
je
cmp
dec
sbb
cmp
test
faddp
lret
dec
lcall
pop
lahf
xchg
jmp
jns
sbbl
push
daa
insb
jge
stos
push
lock
xchg
push
loope
xchg
cmpsl
loope
fstl
sub
loop
out
add
out
or
outsl
sub
lcall
nop
dec
lods
nop
fwait
or
mov
mov
mov
es
hlt
mov
insb
popa
lea
or
fcomps
xor
stc
in
pop
adc
inc
ficomps
fsubrs
test
push
mov
scas
xor
jne
and
xor
pop
add
dec
lods
jb
es
inc
add
sbb
rorb
push
lcall
ficompl
sbb
mov
loope
rcrl
mov
dec
hlt
add
xchg
xchg
lret
mov
addr16
or
inc
mov
pop
aad
xchg
push
mov
adc
loopne
dec
aam
adc
pmuludq
shlb
pushf
in
cmp
jns
loop
xchg
sbbl
mov
inc
clc
icebp
ljmp
loope
clc
dec
repz
repz
inc
adc
xor
push
in
xchg
dec
nop
add
sti
sbbb
jle
adc
jle
mov
mov
les
push
divb
insb
add
scas
sbb
pop
popa
dec
xchg
mov
sti
mov
pusha
cmp
mov
dec
faddp
xor
lahf
enter
pop
inc
adc
jae
jg
jp
pop
dec
test
mov
cmp
cmpsl
jmp
mov
fstl
add
leave
push
rcr
add
mov
jne
pop
inc
push
sahf
cmp
mov
int
jne
ret
movsb
mov
sbb
mov
fadds
mov
test
adc
int3
dec
dec
mov
push
push
fldl
out
push
scas
and
adc
adc
jbe
xchg
clc
jecxz
mov
stos
icebp
xchg
add
jl
clc
stos
cmpb
lahf
dec
jge
out
leave
fdivrp
scas
xchg
cmc
movsb
jnp
pop
ljmp
mov
test
bound
jae
xorl
adc
mov
pop
adc
cmp
dec
movsl
lahf
add
arpl
sbb
dec
add
sub
sti
adc
call
inc
imull
xchg
movsl
cmpsb
pop
add
dec
mov
mov
stos
leave
xchg
pop
fmulp
aam
xchg
push
xor
sbb
lcall
pop
decl
fs
int
in
inc
aam
push
fnstcw
outsb
enter
mov
lds
je
and
cmp
xor
aas
sbb
mov
mov
jge
pusha
and
push
sub
test
inc
cld
nop
scas
loope
sub
imul
add
inc
int
mov
push
call
xchg
and
pop
or
arpl
jmp
cmp
jl
sbb
mov
cmc
call
lcall
sbb
ffreep
inc
rorw
jno
cmp
mov
mov
shlb
mulb
cmp
mov
pushf
out
es
sub
xchg
sbb
pop
add
pop
std
aam
sub
xorl
adc
ret
call
or
and
pushf
add
lods
sbb
mov
sbb
icebp
adc
in
mov
inc
xor
pop
jbe
push
push
mov
and
rolb
sub
cli
mov
adc
sti
push
jl
adcl
repz
andb
in
cmp
popa
hlt
jno
in
test
pop
frstor
or
and
adc
fxch
loopne
mov
xchg
ja
jo
les
movsb
xchg
mov
dec
dec
or
movl
inc
out
test
adc
sub
and
inc
add
leave
xchg
xlat
sbb
fisubs
sub
push
xchg
inc
jae
js
or
push
hlt
and
xor
add
jl
xlat
mov
mov
test
lds
xchg
fnstenv
repz
test
scas
hlt
xchg
lahf
insl
cmc
push
cld
data16
jbe
add
pop
mov
push
or
gs
mov
xchg
mov
sbb
insl
les
mov
jae
sbb
cmp
add
and
add
pop
inc
enter
std
pop
std
pop
jge
fcompp
sub
or
int3
sahf
lods
popa
stos
sbb
sbb
xor
adc
dec
add
lea
push
push
stos
int3
leave
addr16
aam
test
inc
xchg
insb
rcrl
push
mov
rol
or
les
pop
pop
mov
sub
scas
fs
fildll
mov
and
scas
pop
push
push
cs
insl
mov
push
in
adc
jo
pop
xor
leave
mov
xchg
fists
int3
jbe
sub
scas
inc
outsl
lea
outsb
fucomi
dec
cmp
or
jnp
popf
jecxz
fsub
add
inc
test
stc
rcrb
mov
sbb
cmp
xchg
adc
mov
aaa
enter
lret
test
and
sbb
stc
js
loop
lret
lods
in
fistl
ss
pop
xchg
les
jle
cwtl
jae
testb
push
push
movl
adc
jmp
ds
stc
ror
scas
xchg
mov
scas
pop
insb
mov
mulb
xchg
outsl
jg,pt
fnstenv
fldl
ja
ja
stos
sub
sub
inc
push
pop
jns
push
js
adc
ret
insl
sbb
xchg
xchg
cs
mov
or
jns
xor
xor
pop
dec
or
inc
mov
rcrb
jge
jp
xchg
mov
test
stc
xchg
jmp
cmp
addr16
xor
cmp
inc
sub
sub
or
add
jp
jmp
dec
mov
sarb
pop
pop
cmc
push
lea
mov
jecxz
and
aaa
mov
fisubrs
xchg
insb
in
ret
mov
jl
pop
mov
jb
pop
icebp
lods
mov
xor
add
and
cwtl
iret
xor
sub
mov
pop
push
add
jle
or
sbb
mov
ret
cli
mov
cmp
insb
mov
cld
cld
orb
cmp
lods
call
push
stc
pop
int
add
lds
sbb
or
dec
sbb
pop
sub
fst
pushf
jne
inc
ret
bnd
repz
rorl
sub
clc
or
mov
ljmp
clc
and
into
add
sti
je
pop
nop
sarl
inc
fstps
cwtl
repz
xchg
jb
test
sub
xchg
push
rcll
inc
xchg
pop
loope
test
fcomip
mov
or
mov
fs
inc
stos
adc
stc
mov
sbb
daa
or
cmp
sbb
mov
mov
andl
pop
cmp
pop
push
ret
in
adc
pop
push
mov
pop
ficoms
push
sahf
xchg
push
pop
hlt
test
pop
pop
bound
dec
push
in
cmp
pop
jge
xlat
lods
xchg
imul
mov
or
clc
mov
nop
jnp
insl
push
out
inc
cltd
adc
add
shl
aam
mov
test
jnp
jmp
test
fwait
divl
jnp
xchg
push
mov
xchg
in
cmpsb
mov
jb
adc
rcll
bound
sbb
push
lods
ret
addr16
fisubrl
subl
imul
or
in
xor
cmp
in
push
hlt
mov
jae
mov
addr16
lods
push
mov
cld
inc
loopne
in
pop
mov
pop
out
jg
jmp
fldcw
push
jo
arpl
fisubrl
xchg
and
xchg
lock
xor
pop
sbb
enter
addr16
imul
jns
sbb
subb
ret
push
pop
call
mov
push
test
mov
xlat
fwait
data16
pop
add
popf
dec
dec
sub
pop
pop
pusha
push
dec
test
loopne
ds
ljmp
pop
adc
cmp
into
and
movswl
pop
mov
lods
cltd
das
icebp
out
inc
cld
faddl
ds
imul
mov
test
fdivp
es
lea
jp
sbb
add
lcall
and
xchg
loope
dec
insl
pop
dec
jg
pusha
mov
dec
sbb
push
xor
mov
push
outsb
push
and
ljmp
xor
xor
ret
cmp
add
cld
in
ss
sub
mov
add
push
enter
les
test
or
lods
mov
int3
flds
dec
sti
ret
int3
nop
imul
movl
hlt
pop
bound
xchg
add
loope
mov
icebp
outsl
shrb
and
addr16
and
xchg
loop
insb
xchg
in
mov
push
ja
ljmp
ds
mov
jo
std
icebp
pushf
enter
shlb
aam
lret
shrb
cld
popf
jbe
mov
cmc
arpl
sbb
stc
mov
jl
mov
jmp
sub
jmp
push
add
xor
fnstcw
inc
xlat
icebp
insl
insl
movsl
xchg
orb
mov
out
dec
fbstp
repnz
dec
lock
rclb
jno
pop
sahf
aas
mov
adc
jb
scas
sbb
cmpsl
xor
inc
dec
enter
in
sbbl
movsl
fs
in
les
test
mov
mov
adc
mov
mov
add
ds
mov
lea
xor
icebp
jns
pop
std
sti
andl
jbe
and
mov
cltd
insb
xor
mov
xchg
leave
sub
add
shll
sbb
dec
lahf
movsl
or
imul
xchg
mov
cmp
dec
cwtl
inc
mov
xchg
dec
push
xlat
lods
push
movsb
les
sbb
sub
loopne
pusha
fldt
fildll
sub
fiadds
pop
outsl
inc
pop
mov
push
xchg
into
into
lds
testb
repz
lret
insb
jae
jns
and
xor
fs
inc
fsubs
mov
sbb
lds
pop
sub
dec
pop
pop
fcompp
sar
jne
add
dec
jns
lods
or
jp
mov
add
add
mov
add
dec
add
and
add
jne
jmp
jl
and
sub
ds
xchg
xchg
cmp
into
push
dec
je
repz
jl
pop
jl
mov
pop
push
pop
cmp
fldl
or
xchg
sub
gs
pop
xchg
push
mov
jmp
mov
popa
stc
outsl
push
dec
dec
xor
test
repnz
call
repz
nop
sbb
in
jno
divb
xchg
repz
dec
add
sti
jb
add
jmp
cmp
add
test
pop
mov
inc
fdivrl
outsb
sub
xchg
adc
loop
push
sbb
xor
pop
xor
mov
sbb
clc
stos
jbe
xchg
enter
mov
adc
push
add
insb
xlat
cmc
mov
jge
xor
fidivl
orl
push
insl
shrb
xchg
ret
clc
cmp
cmp
adc
dec
xchg
xor
imul
jno
fs
cwtl
jb
adc
repnz
cmpsb
sub
add
lods
inc
repnz
inc
andb
or
jne
sbb
pop
adc
xor
mov
dec
lock
cwtl
out
mov
clc
movsl
pushf
push
std
cmp
xchg
jnp
lods
pop
lods
adc
mov
les
mov
dec
xor
and
mov
rolb
xchg
dec
aad
lods
stos
daa
mov
mov
xor
aam
dec
mov
pusha
ret
xorl
jmp
mov
sub
clc
adc
dec
dec
pushl
scas
je
cmp
add
test
out
or
xor
out
pop
pop
cwtl
je
xlat
test
xor
jo
or
inc
enter
and
inc
mov
push
fldenv
mov
das
int3
mov
fcoml
sbb
add
or
inc
gs
fstl
mov
mov
cltd
sub
imul
xchg
sbb
or
frstor
or
mov
adc
and
xchg
xor
movl
cmp
rcrb
mov
cmpsb
lock
jns
cmp
ret
adc
aam
aas
les
pop
cmp
jno
insl
sbb
lds
pop
or
jecxz
adc
adc
pushf
mov
xor
add
adc
sti
mull
mov
jnp
jae
push
mov
dec
aad
adc
mov
movsb
xor
add
add
rcrb
test
mov
shl
adc
cli
enter
pop
lds
mov
fcmovnu
inc
adc
push
xchg
mov
sbb
pop
enter
lods
insb
push
in
stc
sbb
add
mov
lret
mov
clc
inc
sub
lock
jecxz
and
mov
sti
lock
mov
ret
and
push
mov
and
sbb
mov
out
jne
fists
insl
rcrl
mov
mov
std
mov
fidivrs
xacquire
popa
inc
fidivs
setbe
push
push
adc
in
shll
mov
xor
mov
lds
pusha
adc
adc
sarl
dec
gs
dec
sbb
insb
and
jecxz
adc
in
lret
sub
js
mov
dec
jns
leave
cmp
fs
and
rcrl
pop
add
sarb
and
lods
mov
scas
adc
add
das
adc
jmp
stos
push
aaa
icebp
sub
cmpsl
fwait
outsl
pop
pop
outsl
or
push
mov
jmp
test
add
mov
sub
shlb
sub
ljmp
or
or
and
pop
sub
pop
or
pop
lret
out
lcall
adc
pop
loope
push
ja
dec
shrb
in
subl
mov
popl
rcrb
in
pop
je
pop
push
pop
inc
and
cmp
adc
mov
loope
pusha
inc
repnz
mov
imul
in
lods
cmp
xor
out
mov
les
lret
mov
mov
into
push
push
mov
cmpsl
sub
imul
mov
sub
mov
testl
or
fs
mov
xlat
cmp
in
scas
pushf
cmc
test
sbb
mov
bound
sub
and
dec
movsb
loop
mov
pop
push
scas
pop
out
decl
nop
push
les
cmc
out
cmpsl
shrl
or
cli
nop
lret
mov
sub
jne
adc
lcall
push
lret
and
add
pop
test
push
inc
or
fsubr
fwait
pop
cmc
sub
inc
lods
or
int3
sbb
jg
jo
jmp
jo
lea
je
aaa
mov
ffree
xchg
fwait
ret
mov
test
pop
aad
in
push
pop
mov
insb
mov
ret
mov
mov
test
cwtl
push
dec
sub
add
push
pop
xchg
gs
aas
fistps
cli
pop
std
inc
xchg
bound
jo
xor
sbb
clc
push
stos
adc
pop
sbb
pop
or
test
xchg
fcomps
cmp
sub
shl
mov
mov
movsl
and
adc
dec
repz
sub
outsb
jb
push
push
cmc
pop
insb
call
jp
call
cmp
or
or
insb
xor
fdivrs
jmp
xlat
jp
ljmp
mov
add
add
push
mov
test
std
xchg
adc
ss
push
jbe
xor
xlat
sbb
jno
dec
jns
cmp
mov
out
jmp
hlt
out
jmp
bound
xor
mov
iret
inc
cmp
lods
mov
and
pop
push
mov
loopne
mov
or
inc
fisttps
xor
jle
add
sarl
mov
test
stos
repnz
pop
or
jnp
psadbw
das
test
iret
mov
sub
xor
stos
or
push
push
sub
push
lods
add
jg
insb
inc
fisttps
in
adc
xor
stos
ds
inc
adcl
mov
sti
or
out
loop
call
inc
xchg
xor
enter
fistps
mov
and
icebp
icebp
mov
add
fwait
aam
mov
call
push
loop
jecxz
cmpsb
adc
mov
test
cmp
sbb
add
and
add
ljmp
les
dec
push
or
jp
addr16
aas
jo
cwtl
rorl
cmpsb
test
xchg
imul
jle
or
mov
es
and
nop
loop
dec
inc
pop
mov
or
mov
mov
dec
pop
clc
testb
pop
and
movsb
push
mov
jge
data16
popa
sbb
xchg
mov
in
cld
insl
enter
call
adc
jge
loop
xor
in
sti
outsl
test
sbb
pop
jecxz
add
negb
jge
aad
movsb
inc
lcall
pop
sub
add
dec
stc
dec
test
lcall
lds
nop
stos
inc
push
jl
ljmp
ds
jb
in
sbb
jno
push
sarl
xchg
inc
outsl
ret
mov
cmp
or
enter
test
or
lcall
mov
pop
xor
in
pop
cmpsl
mov
mov
popa
leave
outsl
cmp
fdivr
mov
in
ret
cwtl
sbb
adc
fmulp
aam
fdivl
pop
sub
mov
fsubrl
pop
push
scas
jg
in
mov
sbb
sbb
divb
adc
adc
jbe
and
in
jmp
test
jle
sbb
inc
add
shll
nop
sbb
aaa
or
jbe
jb
sbb
inc
jns
enter
or
dec
jae
hlt
int3
pop
fwait
cld
sbb
xchg
dec
mov
or
push
push
scas
outsb
sbb
dec
out
pop
or
scas
gs
add
jl
dec
inc
in
rorb
lahf
cli
adc
mov
inc
inc
pop
test
pop
jns
std
mov
mov
cmpsb
fnsave
sub
je
popl
push
ss
jmp
inc
adc
jecxz
bound
stos
loope
mov
pop
and
jg
shlb
fiaddl
repnz
div
rorl
mov
xchg
sbb
push
loopne
sbb
lods
icebp
sub
clc
push
push
loope
aam
jno
sbb
sti
mov
and
sub
pop
jecxz
test
sub
out
pop
mov
mov
sbbl
jo
cmp
pop
push
cmp
or
sbb
add
stos
and
xchg
fistps
lods
inc
mov
sbb
insb
sahf
test
xor
dec
adc
pop
push
or
inc
push
mov
lods
sbb
fists
mov
es
cmp
shrb
cmp
fisubrl
in
inc
mov
xchg
outsl
inc
pop
mov
je
push
sbbl
fistpl
cmp
mov
xchg
xchg
test
ljmp
lcall
xor
mov
push
jnp
xchg
jnp
jle
lods
push
stos
mov
fcomi
jle
pop
dec
add
out
aaa
ficompl
or
ds
jns
fwait
adc
adc
flds
xlat
mov
cmpsb
subl
sub
pop
test
pushf
sub
les
mov
jmp
out
pusha
sub
call
jns
imul
mov
cmp
aaa
mov
popa
testl
das
es
or
repz
cmp
loop
aas
out
rcrl
repz
jmp
jecxz
sub
add
xchg
clc
inc
dec
sahf
and
sbb
enter
ja
popa
sti
in
fsubrl
int
cltd
jl
xor
ret
cmpsl
and
xor
mov
fs
in
sub
popf
sub
imul
es
mov
test
sbb
sub
mov
push
or
je
dec
mov
ret
adc
xchg
push
popa
sti
cld
mov
std
repz
jo
into
out
mov
and
adc
mov
lret
xchg
movsl
mov
dec
sbb
lods
pusha
pop
aam
dec
mov
fistps
outsb
out
dec
pop
mov
sbb
dec
test
cmp
fimuls
fmull
mov
decl
aas
in
outsb
inc
mov
dec
sbb
movsl
fwait
cmp
push
jp
aaa
or
leave
in
jae
mov
test
or
inc
or
out
push
dec
lcall
cld
aas
rolb
rolb
push
push
mov
sbb
cmpsb
outsb
outsb
inc
inc
test
push
fisubs
inc
mov
sub
cmpsb
push
push
or
jg
loopne
shr
dec
xchg
imul
mov
adc
scas
loope
int3
or
push
xchg
cli
ss
loop
xchg
sub
pop
pop
pusha
nop
fwait
add
clc
and
add
fwait
push
mov
inc
sarl
push
insl
rcll
icebp
mov
xor
addr16
push
arpl
dec
cld
aam
scas
inc
lahf
xchg
mov
in
cld
call
sbb
adc
push
push
add
fdivr
xchg
outsl
sbb
adc
repnz
and
cli
ljmp
insl
adc
frstor
pop
xlat
stc
mov
sbb
add
or
leave
notb
cmp
jne
xchg
dec
ret
push
sbb
in
dec
cmp
int
gs
mov
hlt
mov
loope
add
and
fcoml
jmp
cwtl
lds
xchg
popa
jbe
mov
ss
sub
addr16
push
js
vunpckhps
push
rorl
jge
xor
mov
mov
js
shlb
or
lds
sbb
out
sub
ja
popf
test
or
cmp
push
pushf
push
adcl
sbb
cmp
mov
xor
cltd
ds
pop
daa
cmpsb
pop
mov
push
cmp
cmpsb
int
push
shlb
fbld
dec
cmpsb
push
cs
xor
arpl
hlt
dec
subb
leave
inc
mov
fnsave
sub
push
xor
rdmsr
shr
xor
adc
mov
push
and
int3
es
mov
sbb
outsb
adc
movsb
out
jge
call
pop
dec
mov
clc
inc
mov
movsb
and
je
mov
sti
lcall
in
xlat
mov
fwait
ret
cmp
scas
scas
loope
into
shll
push
inc
or
pop
cltd
rorl
add
and
add
mov
jne
lret
ja
dec
aas
pop
repnz
xor
pusha
add
ds
pop
jne
movsl
or
and
shrb
icebp
mov
mov
or
pop
mov
in
daa
xchg
mov
pop
pop
push
lods
mov
jbe
cld
inc
or
xor
dec
add
out
jns
cmpl
daa
hlt
cmp
fdivr
stos
outsl
mov
inc
ja
jnp
mov
lods
iret
mov
rorb
nop
pop
sub
and
mov
int
dec
xchg
sahf
pusha
inc
xor
pusha
aas
fnstsw
shrl
in
nop
in
test
jno
testb
das
rcr
int
ds
or
cmp
mov
inc
jmp
lods
outsb
xchg
ja
pop
shlb
rcrl
adc
mov
mov
jp
cmpsb
inc
jle
pop
test
loop
cmpsb
outsb
movsb
mov
jecxz
push
inc
and
pusha
mov
sub
push
inc
cmp
out
adc
xchg
adc
jg
xor
push
addb
scas
gs
lret
cmp
dec
ds
xor
inc
test
lods
ret
mov
and
pop
jnp
adcl
cmpsl
imul
je
ljmp
lcall
test
sbb
outsb
loop
jecxz
sarb
or
test
add
sbb
and
jge
pop
sub
inc
push
test
fstps
sbb
repnz
push
cmpsl
dec
int3
xchg
loope
xor
mov
inc
jns
jl
mov
in
popa
arpl
add
mov
mov
lock
push
les
rcrb
mov
mov
scas
adc
sbb
and
mov
fdivr
inc
dec
out
insb
ljmp
dec
adc
inc
dec
inc
lret
fwait
pop
pop
mov
rcr
icebp
mov
adc
cltd
lods
cmp
pop
dec
push
sbb
pusha
sbb
sbb
dec
cmp
jns
bound
push
outsl
mov
sub
dec
cmp
jno
fwait
dec
addl
pusha
sbb
xchg
aam
out
adc
jne
push
rcr
inc
out
aaa
mov
xor
ss
fsubr
push
repz
xchg
jo
fs
mov
or
add
xchg
pop
add
jno
lcall
mov
fdivs
pusha
rolb
adc
xchg
lea
dec
mov
mov
mov
cmpl
push
and
jle
xor
bound
addr16
aaa
decb
xchg
jmp
in
lcall
jle
push
ret
stos
xchg
xchg
outsl
pop
sub
popa
stos
mov
iret
in
mov
int3
mov
scas
imul
jl
fdivl
inc
imul
call
jle
fldenv
fildl
inc
and
dec
loop,pt
sub
and
jmp
ret
mov
cltd
mov
sub
je
and
subb
lahf
jecxz
data16
xor
and
incl
mov
add
mov
test
mov
je
lret
push
xor
pop
repnz
xchg
push
or
adcb
inc
mov
jb
push
fstpl
imul
push
and
arpl
hlt
xchg
mov
aad
rcrl
xchg
rorl
xchg
sub
hlt
pop
mov
or
mov
stos
in
lahf
shrb
leave
andb
bound
movl
insl
jns
xchg
outsl
mov
dec
xor
je
mov
hlt
loop
cmc
fistps
fsubs
jo
fwait
add
add
or
sbb
add
call
and
hlt
and
mov
add
mov
pop
lcall
test
or
inc
adc
insl
js
ds
dec
sub
stos
mov
fsubrl
andb
inc
aas
movzwl
icebp
mov
test
sbb
loop
icebp
push
stos
ficomps
cs
outsl
insb
push
ret
loopne
add
mov
enter
lret
in
aam
sti
stc
and
hlt
mov
je
pop
push
dec
loopne
in
inc
sbbl
mov
or
mov
out
stc
jl
mov
add
push
aaa
inc
mov
mov
cmp
dec
xchg
mov
pusha
roll
inc
imul
mov
sub
ds
int
sbb
jmp
xchg
daa
lock
pop
cmp
lahf
cltd
fmull
cmp
cli
mov
stos
xchg
pop
jge
push
jecxz
js
stos
test
es
xchg
jge
fwait
sbb
sbb
sbb
adc
push
push
das
fimuls
out
mov
cmc
aam
jnp
mov
or
fsub
insb
pop
sbb
ds
enter
aaa
dec
cltd
call
xor
pop
inc
add
push
mov
adc
sbb
movsb
lret
fstpl
lcall
icebp
adc
push
cli
mov
aam
das
cwtl
xchg
xchg
aas
or
roll
sbb
adc
aaa
sahf
ds
addr16
popf
xor
xchg
jo
xchg
aam
jae
outsl
pop
aam
add
ss
dec
dec
xor
mov
and
pop
mov
adc
xchg
data16
jmp
mov
aaa
mov
sub
sub
sbb
push
pop
in
push
orl
lret
or
lock
icebp
inc
test
test
mov
popa
xlat
int3
dec
es
or
test
pop
push
add
leave
addr16
imul
scas
mov
dec
xchg
pop
std
add
or
stos
movsb
cmp
mov
mov
mov
mov
xchg
sbb
dec
test
lea
mov
dec
push
pop
xor
adc
sbb
xor
inc
lret
test
mov
or
in
std
nop
xchg
ljmp
inc
test
fnstsw
fildll
cmc
lods
mov
or
imul
into
sbb
xor
test
mov
xor
inc
aam
mov
jns
xlat
inc
sbb
or
int
int
data16
pop
lahf
pop
xchg
xor
cs
and
fnstsw
lcall
jmp
lock
jo
jge
jecxz
add
ja
xchg
popf
mov
and
add
pop
add
mov
outsb
dec
push
and
xchg
mov
fcomi
fisubrl
adc
daa
filds
js
mov
add
jae
in
int3
loop
cli
and
mov
and
mov
clc
mov
adc
popa
gs
daa
mov
dec
sti
adcb
jbe
das
mov
add
jns
sub
mov
sbb
jp
push
scas
imul
fdivr
and
inc
mov
adc
lret
aam
push
cli
out
jg
outsl
cs
or
jmp
xor
test
mov
pop
mov
lock
test
movsb
clc
addr16
pop
ret
and
mov
mov
aas
pop
adc
push
negb
rclb
gs
xor
xor
loope
cmpsb
sub
mov
sbb
aam
jmp
mov
in
ja
xor
jmp
or
fstl
lahf
jg
dec
sbb
xchg
or
push
jecxz
outsl
jne
lahf
idivb
mov
sti
and
dec
mov
push
ret
jne,pn
ds
or
pop
xor
mov
xor
inc
mov
outsl
addr16
dec
inc
lret
and
add
fidivl
and
pop
push
aas
insl
sbb
fwait
lahf
jne
nop
cmp
lds
mov
addr16
pop
and
mov
ja
pop
inc
das
jno
mov
sbb
and
pop
rcl
push
nop
dec
push
pop
xlat
popf
sbb
rcr
scas
dec
push
or
cmp
mov
sti
outsl
cmp
sbb
loopne
into
fidivs
rcl
jae
leave
mov
mov
xchg
xchg
mov
push
and
mov
pop
addr16
dec
insb
xchg
mov
js
pop
rorl
ja
ds
mov
jge
out
fwait
jge
inc
adc
mov
jne
mov
xor
outsb
gs
cmp
mov
pop
push
mov
adc
je
xor
repz
cld
clc
xlat
jmp
dec
dec
rcl
mov
cmp
cmp
push
mov
sahf
mov
mov
cmc
xchg
repnz
imul
mov
aam
aam
cmpl
outsl
aaa
fidivrs
push
test
xchg
xchg
std
faddl
pushf
dec
outsb
and
xlat
cmpsb
pop
cltd
pushf
movsb
push
lret
add
or
cmc
mull
add
pop
sub
cld
sahf
in
xlat
dec
ss
sbb
lock
repz
mov
xor
push
lods
imul
call
mov
aam
pop
add
jne
cwtl
or
jg
jo
cmp
sub
js
popf
jecxz
jnp
and
cmpl
dec
fdivrp
popa
call
mov
mov
loope
mov
lock
or
sub
test
xor
bound
call
pop
sarl
std
sbbl
icebp
ds
dec
pop
add
add
cmova
jge
mov
in
imul
int
scas
shrb
out
xor
adc
test
out
dec
push
sbb
xor
sub
cli
or
push
mov
int
jg
push
cmp
dec
pop
loope
sub
ja
jo
jo
pop
jb
fld
push
add
mov
mov
add
add
push
and
mov
xchg
test
push
xchg
fwait
sahf
loop
mov
xchg
ret
or
adc
xchg
push
sbb
fistpll
aam
fistl
leave
jns
fidivrl
loope
and
cltd
push
mov
loopne
push
push
inc
fcoms
push
sub
pop
sbb
xchg
sbb
jp
ss
lock
jp
jo
jge
pop
fsubr
loop
dec
aaa
gs
sub
xlat
jbe
mov
call
into
cmp
sbb
scas
mov
mov
mov
sub
adc
pop
jge
adc
loopne
addr16
enter
sub
or
mov
bound
adc
icebp
movsl
push
inc
adc
bound
lcall
or
insb
fstpt
pop
fsubs
loope
aas
es
fldenv
in
cltd
mov
adc
imulb
cmp
sbb
cmp
add
fld
jmp
pop
fnstenv
sbb
cmp
divps
out
aas
test
pop
repnz
cmpsb
xlat
repnz
inc
insb
xor
inc
aaa
mov
sbbl
add
mov
or
fdivr
arpl
cmpsl
push
in
sub
or
in
jb
out
movsl
pop
in
addr16
push
or
cmp
hlt
icebp
addl
push
psadbw
ss
aaa
jo
push
fdivr
jo
xor
fucomip
scas
insl
subb
pop
adc
jo
add
addl
shl
and
dec
mov
testl
pop
inc
jmp
popf
scas
sub
push
push
popf
push
loop
loope
xchg
push
movsl
and
pusha
out
lahf
xor
xchg
xlat
flds
cmpb
clc
sub
popf
cltd
test
adc
jg
sbb
fsubrp
adc
xchg
sarb
jne
jns
rclb
add
sub
cmc
adc
xor
xchg
sti
loope
adc
xor
cld
lods
data16
mov
aaa
mov
mov
vpsubusw
mov
cmp
sbb
pop
ss
mov
mov
sbb
or
pusha
lahf
dec
jae
loop
add
mov
mov
mov
call
in
and
push
xchg
cld
shrb
push
pop
or
sarl
cmp
popa
pop
cmp
cmp
jb
sub
dec
dec
add
test
sbb
and
rcrb
and
and
cwtl
xlat
xchg
out
repz
mov
sub
stc
pop
insb
adc
mov
cs
test
call
push
call
test
jnp
roll
into
lock
pop
stos
xchg
mov
add
mov
cli
jae
jecxz
enter
out
mov
call
inc
xchg
or
pop
dec
cmp
jmp
test
or
shrl
mov
fisubrs
add
add
clc
sahf
out
or
jnp
je
imul
add
jmp
mov
fcomps
fidivrs
pop
mov
inc
insb
into
or
jmp
sbb
xchg
test
dec
adc
fcomp
mov
sbb
in
es
xor
iret
scas
adc
imul
les
or
out
xor
pop
scas
inc
push
cmp
adc
fstpt
pop
aas
dec
lods
and
mov
out
mov
sub
nop
fstl
mov
mov
test
ds
add
mov
sbb
jle
mov
std
jle
or
pop
jns
shr
mov
imul
imulb
cmc
pop
and
cs
mov
push
icebp
xchg
gs
into
daa
sub
insb
shll
jp
add
pop
nop
inc
stos
lahf
lret
push
adc
in
push
push
mov
lds
je
sub
and
sub
fs
fnstenv
dec
fprem1
sub
inc
fimuls
stc
into
call
add
xor
sahf
dec
jo
push
or
push
aas
add
sar
mov
ss
push
jno
mov
imul
ja
hlt
into
push
imul
loope
cs
cmp
aam
es
nop
arpl
adc
mov
aad
lcall
adc
cmp
cltd
sbb
mov
or
sbb
jb
sbb
out
lret
mov
push
jno
aam
fisubl
sbb
xchg
cmpsb
sub
lea
mov
iret
and
xor
mov
fisttps
sub
pop
inc
pop
and
xor
dec
loopne
loop
inc
push
sub
mov
loop
mov
dec
add
gs
hlt
das
adc
adc
mov
arpl
mov
or
jp
mov
clc
xor
fimull
adcb
sub
pop
sahf
mov
or
pushf
fildl
idivl
test
enter
or
outsl
ja
mov
mov
and
lods
enter
push
xor
dec
in
xchg
and
ret
add
or
scas
cli
cmpsl
dec
mov
mov
sub
and
push
stc
sub
pop
into
and
pop
jnp
cmp
das
pop
inc
jl
shrl
rcl
xchg
repnz
mov
jle
pop
pop
xor
popf
mov
xlat
and
lret
mov
imul
pop
mov
fsubl
test
pusha
cs
lods
xor
iret
pop
mov
inc
sub
hlt
jecxz
into
lret
loop
sub
popf
mov
into
shr
inc
and
mov
push
push
rol
cmp
nop
pushf
mov
outsb
es
mov
out
stos
xchg
sbb
push
popf
mov
xchg
aad
in
push
dec
sbb
jnp
inc
mov
mov
imul
movq
stos
nop
push
adc
movsb
pop
mov
fdivrl
sub
xchg
xchg
addl
mov
icebp
mov
cli
pop
mov
mov
cmp
adc
cmp
movsl
out
and
pushf
int
test
add
sbb
aad
popf
dec
jne
mov
fiadds
mov
test
adc
js
push
dec
and
jnp
stos
sbb
out
cli
or
addl
mov
aas
insl
rolb
inc
xchg
jg
push
aam
adc
sar
addr16
lods
push
sub
loope
sbb
shrb
jle
mov
mov
adc
ret
outsl
sar
xchg
xchg
jae
lret
cmp
xchg
icebp
test
lods
add
pop
mov
fs
in
mov
sbb
jae
sub
sbb
dec
loop
rcl
mov
loopne
and
lahf
out
sub
idivb
repz
pop
or
sub
aam
sbb
pop
test
mov
mov
nop
or
outsl
push
movsb
nop
jg
jmp
imul
push
nop
cmpsb
jne
lea
and
pop
inc
or
into
loope
test
or
push
jl
in
es
adc
and
xor
push
mov
hlt
popa
and
dec
mov
jecxz
fnsave
repnz
adcl
insb
pop
pop
inc
out
outsb
push
pop
mov
mov
cmp
mov
xlat
mov
mov
cmc
in
jp
stc
cli
stc
jmp
jb
mov
cmp
into
mov
cmp
lods
inc
int3
xchg
cmpsl
or
rorb
and
push
dec
adc
jbe
dec
dec
stc
gs
sti
cmpsb
xor
jge
das
xchg
lods
mov
pushf
andl
lods
enter
insl
lea
roll
mov
push
sbb
fs
ret
push
lahf
jp
out
pop
lret
cld
ja
cmp
ss
popa
jmp
inc
lcall
xlat
mov
int
or
rorl
out
ret
pop
mov
out
mov
xor
rol
mov
xchg
push
loop
jle
and
popa
mov
xchg
leave
add
cltd
dec
pop
outsl
push
mov
add
imul
push
popf
shr
inc
std
xlat
mov
dec
faddl
mov
inc
or
dec
inc
sbb
ds
popa
pop
fidivrl
and
dec
nop
test
fcomps
addl
orb
mov
lock
mov
push
movsl
push
xchg
paddw
ret
aad
pop
mov
cmp
xchg
scas
das
or
insl
dec
inc
add
sub
jecxz
add
ja
push
shlb
pop
in
mov
add
xor
sbb
mov
dec
jp
stos
out
mov
xor
sub
inc
inc
or
pusha
stos
cmp
fcompl
sub
ja
iret
out
cmp
mov
jo
or
and
cmpsl
cmp
fwait
movsb
fisubl
inc
shl
out
adc
mov
inc
movsb
jp
lahf
popf
sti
pop
shlb
push
scas
movsb
jbe
jecxz
popf
pop
call
test
push
outsl
stc
lret
mov
shrb
outsl
or
add
adc
insl
inc
adc
aad
iret
in
fs
sub
or
rcr
loopne
in
jle
ret
repz
std
jle
loope
mov
mov
in
add
and
add
push
adc
mov
test
cmc
push
pop
mov
test
sbb
subl
or
aad
mov
mov
xor
cmp
xchg
jbe
loope
jp
add
xlat
cwtl
stos
sub
mov
fdivl
lock
mov
push
imul
adc
pop
mov
sub
ss
or
ror
fildl
sbb
fstpt
mov
cmp
ds
rcrl
mov
adc
xchg
push
addr16
lret
test
push
add
pop
fidivl
xchg
push
ss
mov
pmullw
cmp
fldl
xor
cmp
ret
sbb
mov
lock
fst
jl
ja
sarb
pop
gs
xchg
idivl
push
jns
pop
dec
jne
xchg
shll
int3
fiadds
xchg
jae
add
sub
xchg
dec
mov
inc
popf
fs
je
add
cmp
xlat
dec
dec
addr16
das
mov
xchg
add
add
cmp
je
arpl
icebp
test
fldt
xchg
dec
repnz
mov
inc
mov
mov
mov
cmp
rolb
std
jl
mov
cli
and
vmovntdq
rolb
dec
mov
push
sub
inc
fwait
shl
fcmovbe
dec
ds
scas
jmp
fs
mov
mov
lods
test
call
cltd
mov
mov
cmp
sarb
shrl
adc
frstor
pop
pop
adc
or
mull
mov
mov
clc
out
adc
mov
in
cmp
or
pop
pop
xchg
int
leave
fldenv
fsubs
insb
outsl
std
jp
inc
lods
cld
daa
cwtl
loopne
test
cld
push
push
test
shlb
add
jecxz
cld
mov
pop
and
or
xchg
add
fdivrs
gs
and
sub
pusha
lcall
dec
pop
mov
add
xchg
shrl
jge
lea
push
lods
pop
xor
fdivrs
repz
fistpl
outsb
mov
arpl
out
movsl
scas
arpl
sbb
sbb
pop
xchg
inc
mov
sbb
lret
rcl
imul
dec
inc
flds
add
mov
or
les
or
fcoml
inc
xchg
dec
pushl
push
add
adc
sbb
xor
push
and
rcl
daa
aad
ret
loopne
ja
mov
xor
flds
jl
pop
cmpsl
mov
outsb
cmp
adc
or
inc
pusha
and
push
sbb
repz
fmuls
mov
aaa
jo
icebp
ss
dec
jno
dec
push
scas
jbe
loope
imul
sub
scas
fcmovnu
pop
push
jbe
testl
xchg
mov
loope
imul
mov
and
arpl
cmpsb
sbb
out
xchg
aam
movsb
xchg
jb
mov
adc
jns
pop
mov
je
popa
cwtl
inc
es
and
sbb
ffreep
add
sbb
leave
adc
cmp
or
outsb
sub
jl
ret
and
mov
outsb
xchg
fildll
gs
addr16
shrb
bound
sub
in
loopne
xchg
cwtl
or
mov
in
data16
adc
jno
mov
mov
xchg
and
shlb
xor
or
lret
push
xor
popf
stos
adc
pop
fisubrs
xchg
inc
add
push
push
aas
out
add
mov
mov
cli
xchg
xchg
jl
xchg
imul
cmpsb
push
call
addl
arpl
cltd
dec
rcrb
into
pop
icebp
and
imul
popf
add
jg
mov
lcall
mov
jae
add
iret
sub
test
adc
xor
popf
cmp
fstps
je
mov
fstl
scas
and
pop
ret
xor
sbb
jae
ds
inc
or
into
addl
les
mov
stos
xchg
adc
push
mov
fwait
leave
adc
push
sbb
push
xchg
in
pop
jl
inc
mov
arpl
icebp
pop
fildll
xchg
mov
jmp
outsl
cmp
pop
and
dec
aad
mov
or
xchg
sbb
xor
push
mulb
cmp
lahf
cltd
xchg
and
pop
xlat
inc
dec
sbb
inc
dec
rcll
xchg
adc
push
jp
insb
imul
movsl
dec
xchg
xlat
mov
mov
push
mov
ret
cmp
stc
jge
push
pop
xor
std
out
rorl
jmp
inc
push
daa
cmp
out
fidivrs
cmp
lods
and
rcll
lods
aad
add
xor
mov
pop
sahf
loopne
dec
pop
dec
adc
addr16
dec
push
sub
adc
adc
mov
mov
ret
jmp
arpl
mov
fistpll
and
xor
cld
add
loope
mov
dec
ds
pop
movsl
xlat
jl
mov
xlat
add
loopne
bswap
out
loop
xchg
push
xchg
nop
mov
mov
dec
fimuls
sub
adc
add
loop
pop
cmp
outsb
clc
rol
mov
mov
pop
cmpl
mov
iret
pop
inc
xchg
out
mov
ds
or
mov
jno
outsb
mov
mov
repz
sarb
outsb
bnd
lods
outsl
rorl
je
test
cltd
jb
push
clc
push
fptan
rorb
clc
adc
or
cmp
push
push
jp
push
xor
test
push
stos
in
jb
jbe
iret
shr
mov
cld
movsb
pop
movsb
mov
inc
bound
pop
pop
imul
orb
push
repnz
cmp
in
sbb
sub
dec
in
or
mov
and
rolb
ljmp
je
out
lds
daa
xor
mov
sub
les
sti
out
mov
mov
add
stos
mov
fdivl
or
xchg
rcr
stos
cmc
mov
test
sub
xchg
add
push
or
add
pop
mov
pusha
test
cwtl
sahf
aaa
and
adc
scas
in
pushw
sbb
add
add
shlb
jg
stc
ficoms
inc
and
sarb
sub
add
pop
add
jle
aas
inc
scas
test
rorl
inc
stos
es
addb
push
push
popf
pop
jle
hlt
enter
and
rclb
test
pop
imul
sti
das
xchg
push
jne
jbe
sbb
sub
cmp
inc
mul
outsb
or
mov
test
push
ss
add
movsl
lahf
xchg
movsl
cmp
cmp
ret
outsb
cmp
insb
frstor
push
dec
push
popa
int
in
mov
mov
push
sti
sbb
test
ss
xchg
movsl
inc
or
and
jecxz
scas
test
sub
and
xchg
sbb
adc
mov
pop
stc
pop
jmp
daa
scas
arpl
imul
std
aaa
inc
sti
cmp
adc
sub
xor
add
push
adc
fisubl
in
mov
xor
inc
sbb
movsb
adc
sub
ffree
daa
stos
test
in
subl
test
in
adc
mov
lcall
nop
cmp
lock
pop
or
imul
xor
rclb
mov
sahf
mov
xor
and
push
mov
cmp
or
scas
lea
inc
add
or
push
cli
and
repz
dec
lds
lcall
addr16
sbb
or
and
pusha
cli
jae
aas
xchg
je
sub
lea
mov
push
jbe
push
xchg
pop
and
fnsave
aas
sub
fdivs
dec
dec
ficomps
pop
sbb
xchg
pop
xorb
mov
int
xor
jbe
xchg
popa
cld
lret
adc
test
leave
xor
sbb
mov
pop
sub
xor
jmp
lock
scas
sub
inc
xchg
mov
mov
mov
mov
cmp
sbb
and
incb
inc
mov
lcall
pop
push
mov
xchg
clc
adc
jge
negl
shll
inc
stos
iret
sub
mov
je
and
dec
scas
dec
xchg
fs
out
in
sarl
mov
push
sbb
lret
add
insl
mov
cmp
inc
arpl
mov
fmul
psubsw
es
mov
sarb
sub
push
lods
ficompl
or
xchg
dec
rol
and
test
push
or
mov
inc
ret
sbbl
and
xchg
lret
inc
cwtl
mov
insb
es
inc
fisubs
inc
pushf
mov
lods
jne
cmpsl
mov
cmpl
jae
cli
jbe
jl
adc
fsubrl
mov
xchg
rcll
jmp
in
pusha
sub
movsl
jge
dec
lods
xor
mov
notb
cltd
mov
lret
lods
clc
outsl
lods
rorb
add
cmp
jmp
data16
or
inc
rcrl
fisubrl
arpl
add
or
inc
les
testb
mov
adc
xor
inc
adc
lret
scas
cmpb
pop
ljmp
add
enter
and
mov
dec
mov
cmpsl
popf
adc
jae
mov
and
popf
fisubl
sbb
jns
cltd
addl
jmp
fstpl
jne
sbb
mov
xchg
call
enter
shrb
testl
mov
cmp
cmpb
push
cmc
stc
cmp
jae
repz
or
jl
xchg
aam
cmp
loopne
mov
mov
jmp
pop
jle
adc
jae
xor
out
nop
jnp
mov
xchg
js
pop
dec
fisubs
pop
xchg
sbb
or
lea
and
cmp
mov
in
fstpt
sub
mov
adc
ljmp
adc
mov
jp
mov
fcoms
cmp
pop
mov
popf
cld
test
push
adc
cltd
stos
jecxz
xor
shr
push
es
cld
daa
mov
lods
cs
push
push
inc
xlat
shr
mov
lret
scas
sahf
ds
mov
ss
test
inc
and
pop
and
out
call
mov
fldcw
je
ljmp
xchg
jae
mov
ljmp
xchg
and
mov
dec
mov
iret
jmp
lds
stos
fsts
in
cmp
add
dec
ja
es
das
nop
lods
fistps
push
aad
mov
xchg
lods
fisttps
mov
das
fs
gs
out
cmp
dec
add
mov
jle
xchg
sub
lret
and
cmpsl
sub
pusha
ret
jbe
fcmovnbe
cmp
lods
daa
pop
cmp
push
ret
into
xchg
popa
xor
mov
inc
mov
jns
test
fdivs
leave
adc
andb
mov
scas
mov
xorb
add
pushf
inc
cli
xchg
test
xor
adc
into
and
and
jge
mov
mov
test
xor
push
adc
inc
or
jno
in
loope
les
xchg
ror
shll
insb
cltd
insl
into
fldl
hlt
lahf
ffreep
aaa
push
push
add
scas
or
sbb
sub
nop
js
pushf
aaa
mov
push
daa
sti
lods
das
aaa
bound
bound
das
icebp
mov
enter
xchg
leave
cmp
jl
xchg
mov
xchg
sbb
fsubrp
push
mov
js
lods
jno
fs
sub
gs
xchg
push
outsb
sbb
xor
cmp
in
mov
mov
push
leave
idivl
lods
cmp
cmp
lds
pop
push
lods
push
pop
cmp
cmp
fists
add
pop
cmp
hlt
jns
pop
pop
and
push
pusha
cwtl
push
popa
or
rolb
or
clc
lea
jp
mov
dec
add
int
mov
push
cmp
xorb
inc
xor
fisttpll
mov
sahf
test
fwait
and
shll
xchg
xchg
xchg
popf
arpl
xor
loope
inc
ret
mov
rorl
push
dec
dec
inc
pop
repnz
and
shlb
pop
out
cltd
test
inc
in
test
repz
mov
add
cmp
mov
in
idiv
jg
and
cmp
add
pop
add
adc
mov
lahf
xor
jmp
cmp
mov
popa
xor
mov
mov
mov
fisttps
xor
mov
rclb
ret
add
jo
les
ror
cs
inc
jge
jb
sub
icebp
push
stos
imul
push
dec
stc
mov
inc
jno
inc
aaa
and
xchg
sbb
cli
mov
sub
jb
hlt
popf
sahf
in
rcll
jmp
stos
imul
sub
mov
insb
test
xchg
inc
add
cs
dec
or
mov
inc
mov
ds
dec
xlat
xor
addr16
sub
mov
ret
mov
push
xchg
out
sub
data16
adc
outsb
push
int
dec
in
outsb
out
mov
aaa
loope
rcr
add
pop
lcall
jecxz
jbe
mov
inc
mov
lds
push
mov
fsubrl
pop
and
add
daa
cmp
js
push
test
ret
outsl
add
fwait
mov
dec
xchg
add
xchg
stos
jecxz
dec
inc
dec
int
fiaddl
loopne
mov
lahf
jl
sbb
and
test
xchg
out
ficoms
repz
push
out
mov
cs
repz
iret
jnp
jo
dec
outsb
hlt
cltd
dec
daa
ret
push
inc
mov
out
push
outsl
inc
push
lea
adc
sbb
pop
rolb
push
fdivs
xor
pop
mov
je
fdiv
xchg
inc
cld
xchg
cli
movsb
sbb
adc
inc
jle
mov
fisubrl
mov
popa
inc
clc
adc
notl
stos
cmp
iret
add
lahf
mov
sbb
adc
mov
adc
pop
mov
mov
push
loop
adc
xlat
adc
mov
mov
xor
arpl
jno
mov
inc
jne
inc
fwait
sti
pusha
aaa
push
mov
pop
rcll
sub
test
cmp
xor
in
adc
lds
addr16
aaa
push
dec
jge
imul
push
inc
jb
sub
aam
pop
int
and
pop
scas
add
pop
push
lods
call
cltd
movsb
jnp
mov
mov
into
xor
inc
not
sti
xor
arpl
or
xor
movsl
ds
int
push
aad
ja
xor
jo
push
lea
and
xchg
dec
test
loop
adc
xor
outsb
repnz
adc
int
iret
pop
out
add
lret
jno
adc
orl
push
mov
add
rorl
xchg
int
dec
rcl
lods
stos
jb
orb
and
pop
adc
lods
int
fiaddl
mov
outsl
cld
or
and
arpl
adc
mov
mov
test
scas
inc
cli
add
stc
xchg
mov
inc
scas
lret
xor
mov
mov
fdiv
repnz
pop
int3
xor
lods
in
aas
jns
ss
push
fnstsw
jg
cmpb
fsubs
pop
dec
jae
dec
cmp
xchg
fwait
and
lret
dec
pusha
adc
push
movl
jnp
mov
jp
jnp
jo
rol
fists
mov
xor
leave
sbb
push
fwait
mov
and
dec
jbe
test
mov
imul
sbb
jnp
shr
movsb
sbb
flds
push
push
mov
add
popl
shlb
cmpl
xor
push
lahf
lret
jne
mov
jp
adcl
pop
mov
lahf
movsl
repnz
clc
xchg
and
icebp
and
les
or
and
std
loope
push
xchg
movsl
push
sub
sub
movsl
push
pop
aam
daa
outsl
or
adc
ret
test
xor
and
data16
mov
cmpsl
inc
xor
popf
lahf
aaa
dec
inc
insb
push
std
dec
test
rcrl
mov
popf
cmpb
in
in
sub
mov
lods
lock
jae
cmp
iret
sub
ret
test
lea
mov
cmp
lret
ret
cmp
xchg
push
cli
dec
xchg
xor
sub
xor
imul
lds
jl
add
mov
or
mov
scas
sahf
icebp
xchg
push
sbb
xadd
pop
push
pop
inc
mov
inc
sub
mov
xor
mul
arpl
and
pop
or
pop
jp
ret
out
icebp
jb
jns
sbb
add
inc
loope
mov
jnp
in
out
clc
jmp
pop
popa
rorl
xchg
dec
cltd
jl
push
test
or
mov
or
shrl
sti
shll
mov
inc
jg
gs
mov
loopne
jbe
mov
loop
mov
insb
jge
out
sub
pushf
popf
push
xor
hlt
xor
cwtl
inc
outsb
les
fisubl
cs
enter
inc
dec
add
push
push
insl
loop
pop
in
negb
jmp
setns
out
sti
and
test
shlb
lods
pop
mov
jno
mov
mov
xlat
aaa
sbb
jbe
inc
lds
sbb
dec
in
mov
sub
sahf
add
ja
and
jnp
aas
or
out
mov
inc
inc
ds
ret
cmp
push
dec
ds
pop
xchg
insl
sub
sub
sub
adc
mov
negl
outsl
pop
std
or
xor
ja
rcrb
es
out
insb
adc
lock
rorb
ror
mov
repz
sub
cmp
pop
xchg
shrl
push
leave
pusha
daa
bnd
pop
loope
xorl
jecxz
and
push
cmpsb
fmuls
jg
out
push
push
movsb
xchg
es
push
push
lcall
cltd
mov
or
addl
mov
pop
mov
leave
iret
mov
sbb
out
dec
stos
add
lret
lds
pushf
xchg
call
xchg
mov
jbe
dec
sbb
cli
adc
roll
outsl
adc
loopne
sbb
adc
out
cmp
in
movsb
pop
dec
incb
mov
or
xchg
out
mov
and
arpl
lcall
inc
ss
mov
and
add
pusha
pop
imul
pushf
adc
shlb
into
dec
imul
pop
inc
aas
insb
imul
fwait
cmp
in
mov
pop
push
add
inc
out
les
adc
scas
jnp
clc
enter
insb
jne
cs
lcall
push
stos
mov
adc
add
or
pop
cmpb
mov
out
xchg
sub
out
mov
ss
mov
ret
mov
and
jo
sub
sub
and
lock
mov
cmp
stos
in
fyl2xp1
into
adc
jb
stc
int3
xchg
imul
mov
xchg
lret
sbb
push
shll
pop
pop
mov
add
add
xchg
push
sub
xor
imul
fsubs
in
fidivrl
call
loope
insl
sar
test
pop
hlt
jge
cmpsl
je
cmp
mov
mov
movsb
in
das
xchg
inc
jbe
and
fsubrs
orl
and
xor
inc
sub
xor
add
cmp
ja
ljmp
imul
ror
repnz
shlb
call
in
fdivs
sub
sar
dec
mov
mov
push
mov
mov
jae
sarl
inc
dec
enter
mov
dec
out
lock
pop
mov
mov
dec
fsts
fsts
push
mov
sbb
xor
pop
sahf
lods
mov
fdivp
sbb
xchg
movsl
movsb
fcmovnbe
xor
hlt
mov
sbb
push
call
jns
les
inc
stos
cld
fdivrl
mov
data16
fs
fwait
je
cmpl
lret
dec
gs
mulb
cmp
movsl
adc
pop
sbb
xlat
cltd
lret
add
mov
inc
push
aam
push
aas
stos
inc
and
lcall
and
icebp
dec
sahf
test
ds
ret
xchg
out
test
xor
adc
dec
stos
mov
jl
popa
sahf
sarb
test
insl
xchg
fucomp
movsb
mov
add
aam
pop
imul
xchg
cmc
jl
sbb
push
int
cwtl
mov
cs
xor
inc
jns
sbbb
mov
inc
frstor
jmp
adc
xchg
jb
das
lods
xchg
pop
xchg
jmp
xchg
in
jecxz
cmp
push
setge
adc
rclb
mov
xchg
push
xchg
ret
pop
insb
aam
cmp
mov
add
or
mov
movsl
shll
mov
in
into
cs
xchg
fstpt
roll
xchg
xorb
decl
inc
sbb
shll
jno
or
jb
xor
lret
xchg
xlat
adc
in
sbb
out
jl
cmpsl
jle
fadds
test
or
xor
mov
incl
add
xchg
stos
or
out
fsubl
xor
shrl
dec
and
fwait
pop
mov
dec
rol
dec
sub
xor
add
xchg
sarl
sub
dec
mov
lock
not
jns
lahf
sub
mov
mov
add
mov
mov
inc
adc
sub
icebp
rcl
sbb
lahf
mov
fwait
pop
mov
adc
loope
inc
fwait
sbb
lock
nop
aad
dec
das
xchg
test
xchg
xor
dec
mov
sub
repz
jo
cli
lcall
inc
fidivrs
push
or
insb
mov
jne
stos
ror
decb
sahf
jne
or
ljmp
xor
outsl
xor
es
mov
or
movsl
addr16
xlat
int
mov
pop
mov
addr16
or
repz
ss
js
adc
pop
lds
into
add
pop
pusha
out
xor
dec
pop
mov
repz
stc
ret
add
mov
aad
adc
adc
stc
imul
rcl
adc
mov
xlat
and
daa
pushf
mov
jne
in
add
test
xchg
xor
push
popa
cmpb
cmpsl
jae
cmpsb
push
mov
mov
sub
imul
sbb
lock
loopne
loope
pop
fcmovnbe
arpl
data16
stc
mull
cld
mov
in
xchg
repz
mov
adc
loop
pop
cmc
xor
add
cmp
jne
sub
fwait
lods
jmp
aad
dec
lcall
and
lock
xor
ljmp
dec
push
cmpsb
or
push
push
push
in
mov
xchg
adc
les
shlb
imul
shl
lret
mov
iret
gs
xor
jge
fldt
movsb
sub
push
pop
lods
mov
test
mov
ja
or
or
cld
rcrl
fidivs
cmpl
mov
mov
cmp
mov
cmp
notb
shlb
loopne
xchg
sahf
mov
mov
jp
xor
sub
push
xchg
repz
lds
fnstenv
push
arpl
and
xchg
or
mov
cmp
pop
xor
sub
popa
sbb
rolb
stc
cmp
shlb
lock
lret
pop
adc
add
rcll
xchg
test
inc
frstor
adc
repz
inc
cld
or
xor
jle
mov
cmpsl
inc
or
xchg
dec
les
mov
adc
push
das
mov
pop
and
in
test
sub
mov
jmp
es
int3
sbb
pop
rclb
mov
jnp
ret
or
loopne
jnp
mov
dec
or
mov
cmp
adc
jnp
orb
popf
ds
scas
xchg
shlb
jecxz
ljmp
and
or
and
inc
int3
jp
dec
cli
fisubs
adc
les
xchg
cmpsw
daa
cmpsl
mov
movsl
outsl
sbb
and
jle
test
push
inc
sub
test
outsb
inc
push
cmc
dec
in
ss
xchg
fwait
cmp
cmp
push
jge
movsb
sarb
lds
add
add
sahf
fidivrl
add
shr
xchg
mov
add
pop
add
popf
or
xor
or
mov
lcall
dec
xlat
ja
push
es
fistps
roll
inc
ja
inc
cld
test
sub
fldt
pop
jb
cmpsl
out
and
jp
add
pop
stos
shll
mov
and
rclb
push
enter
mov
mov
movb
add
push
add
std
push
popa
xchg
dec
and
test
and
mov
je
jp
and
mov
fwait
jns
sti
mov
sbb
int3
fdivrs
jne
cli
or
push
jns
std
nop
rolb
sub
daa
xchg
lds
mov
roll
push
ljmp
shll
or
push
push
cmp
fwait
outsl
test
in
rcll
lahf
inc
adc
shll
popa
cld
loope
lcall
int3
mov
enter
in
sub
sbb
cmovnp
das
jnp
jle
mov
aaa
incl
pop
icebp
std
ret
xchg
and
in
push
add
push
pop
mov
pop
xor
push
in
orl
sbb
inc
adc
mov
test
lods
in
jnp
mov
adc
sahf
push
sub
sub
pusha
test
dec
push
ret
rorl
orl
xchg
aas
xor
mov
lea
dec
push
adcl
pushf
cli
pop
add
xchg
and
int3
xchg
inc
mov
mov
fcmovu
xchg
in
ds
pop
sbb
ret
push
lock
sub
out
aad
mov
xchg
ljmp
push
push
sub
cwtl
xchg
or
or
arpl
mov
sar
mov
or
cmp
fsubrp
into
dec
jp
out
aas
xor
and
xchg
test
jmp
or
ret
xor
pop
insl
arpl
ret
dec
or
cmpsb
dec
sbb
sub
add
cltd
aad
outsb
or
gs
and
push
in
mov
nop
push
add
add
add
scas
jp
mov
lret
mov
push
mov
dec
or
push
aam
sub
rcrb
mov
aas
mov
scas
into
pop
and
pop
icebp
push
jbe
mov
inc
je
xor
loopne
leave
jne
sub
sbb
call
cli
mov
scas
push
adc
ljmp
dec
addr16
xchg
andb
loope
adc
jo
sbb
xor
jnp
andb
jle
cmpsl
sub
mov
aas
push
xor
xchg
lock
out
push
mov
mov
or
dec
xchg
stos
mov
mov
lcall
add
adc
or
mov
es
inc
sub
in
push
mov
icebp
adc
or
test
lcall
sbb
iret
repz
adc
or
and
pop
push
sbb
lret
aas
mov
test
mov
call
in
lods
xchg
mov
sbb
jno
dec
dec
push
add
pop
out
push
mov
and
outsb
mov
mov
movsb
lahf
and
mov
push
dec
sahf
dec
xchg
cli
xor
loop
dec
xor
mov
pushl
and
in
imul
pop
rcll
dec
push
test
test
sub
xor
test
push
inc
rorb
mov
mov
adc
pop
add
pop
xor
arpl
lret
dec
adc
rolb
add
out
push
adc
hlt
stos
lods
mov
and
or
inc
je
ret
js
into
pop
sahf
insl
repz
pop
mov
jmp
push
out
ss
and
sbb
icebp
sub
es
sbb
fidivl
mov
sbb
jp
in
or
mov
out
xchg
push
pusha
in
mov
lods
cmp
out
or
xor
neg
in
inc
inc
in
cwtl
jne
cmp
fs
out
mov
dec
sarl
xlat
inc
push
xchg
inc
je
mov
push
scas
mov
popa
inc
xor
inc
cmpsb
jae
mov
dec
add
mov
inc
imul
jns
daa
mov
mov
enter
adc
pop
fldl
xor
outsb
frstor
pusha
int3
repnz
add
repnz
movsl
js
in
sahf
mov
aad
fsubrs
sbb
test
jns
inc
cmp
jno
jns
pop
and
cltd
in
sub
xor
dec
subl
gs
cmc
cmp
movsb
push
in
adc
cmc
ret
pop
or
pop
inc
adc
dec
scas
jnp
or
call
jne
mov
leave
lods
sbb
dec
mov
inc
imul
xchg
push
push
aam
in
std
in
mov
inc
fidivs
push
xor
in
int
into
mov
test
xor
cmpsl
icebp
cwtl
mov
int
fidivrs
xlat
insl
clc
cmp
mov
frstor
lret
pop
dec
mulb
sbb
cltd
fisubrl
icebp
ffreep
dec
sbb
out
or
pusha
iret
popa
jle
data16
mov
xor
popf
sub
jae
inc
ja
or
lret
fs
lods
aam
rcrb
or
dec
dec
stos
in
aad
pop
fptan
or
out
push
jns
xor
pop
lcall
dec
push
ja
add
push
ds
cmpsl
pop
sub
es
dec
inc
das
pop
pop
or
movb
fists
fsubrl
xchg
push
popf
stos
pop
aaa
jecxz
js
lcall
mov
jb
insb
out
stc
fs
jmp
and
lods
pop
push
cmp
and
sub
sub
leave
lret
adc
pop
popa
lea
add
loope
mov
pop
stos
jge
icebp
addr16
push
sub
lahf
cmp
sub
and
ljmp
mov
pop
cmp
inc
mov
mov
jnp
push
arpl
lods
push
pop
add
icebp
inc
pop
stos
std
neg
shrb
hlt
jge
ja
mov
xor
mov
and
sub
into
in
js
inc
shl
test
mov
in
dec
cmp
mov
addb
or
mov
jl
cli
js
mov
pop
jle
cmpl
mov
cmc
push
dec
push
shlb
add
add
stc
out
inc
std
fidivrs
movsb
dec
daa
xchg
push
lahf
mov
add
das
mov
adc
jmp
in
rcl
lahf
push
inc
repnz
mov
cmc
cmp
jo
repnz
out
sbb
fstl
xor
jno
loope
inc
bound
in
jae
cmp
mov
mov
or
pop
xor
outsl
lock
loopne
les
pop
or
or
dec
repnz
mov
or
lcall
movsb
test
in
xor
jp
cwtl
push
lods
xor
mov
jp
fstpl
aaa
pusha
push
sbb
stos
xor
push
xchg
jne
add
inc
cmp
pop
fistl
loope
dec
or
int
xor
push
fs
lret
sbb
sub
mov
push
iret
ja
addr16
inc
fldl
dec
fmuls
gs
mov
fdivrl
idivb
ret
test
lret
iret
lock
jl
cwtl
cli
mov
lret
aam
jle
out
push
push
pop
pushf
inc
push
push
lock
sbb
add
push
mov
aad
adc
repnz
ret
xchg
rcrb
popa
les
xor
jnp
jl
pop
adc
into
into
subb
mov
push
sbb
push
add
adc
inc
pushf
mov
outsb
jns
inc
xchg
movsb
int
inc
xor
inc
ror
cmp
sub
inc
scas
adcl
int3
popf
mov
hlt
add
adc
pusha
mov
ja
mov
xchg
addr16
out
xchg
mov
or
push
mov
xchg
push
daa
fldt
mov
mov
xchg
xchg
popa
dec
in
dec
inc
les
cmp
and
mov
sbb
sub
pop
xchg
mov
out
cli
and
mov
fisttps
pushf
popf
lcallw
movsl
pop
xor
mov
daa
pop
repnz
ljmp
xor
xchg
adc
cmp
daa
sub
daa
or
es
inc
mov
fwait
dec
data16
mov
and
inc
movl
jne
scas
push
fs
stc
adc
out
aad
lahf
mov
pop
fs
mov
cli
xor
inc
les
popa
lods
push
inc
push
jb
into
push
fiadds
add
and
or
xchg
pop
out
push
data16
fmull
cmp
mov
fsubs
push
or
fisubs
rcrb
clc
mov
add
or
cmp
ljmp
lods
imul
cmpsb
test
fcoml
test
or
ss
xor
ja
mov
xor
insl
push
shll
repnz
cmp
pop
shl
aaa
out
push
add
daa
pop
sub
inc
shll
xchg
push
cld
cmp
cmpb
pop
lcall
mov
test
testl
clc
fwait
ds
in
iret
cmc
sub
ret
lods
inc
mov
loop
mov
push
neg
scas
arpl
mov
je,pn
ds
jns
imull
jne
lcall
add
mov
adc
daa
mov
cmp
pop
sbb
iret
add
stos
pushf
scas
fldcw
aaa
push
adc
cs
adc
je
xor
scas
pushf
jl
sti
sub
std
adc
scas
mov
pop
push
fisubl
adc
cltd
add
stos
idivl
lcall
xchg
pop
and
jae
lahf
sbb
mov
xchg
insb
arpl
sbb
adc
mov
dec
inc
lcall
test
mov
scas
subl
sub
repnz
cmp
mov
xchg
cmpsl
rorl
mov
into
sahf
mov
and
fistps
cmp
fcomp
jle,pt
xor
das
stos
mov
out
cmpsl
maskmovq
shlb
stos
jp
and
hlt
inc
pop
cltd
filds
xor
sub
cmpsl
and
push
ds
mov
xchg
test
lret
scas
loopne
daa
fcmovu
enter
out
std
xor
jp
mov
ret
sarl
adc
ret
mov
jecxz
repz
fcompl
inc
movsb
or
add
out
cld
sbbb
cmp
mov
scas
clc
dec
aas
lahf
add
xchg
xchg
in
imul
inc
cmp
rcrl
push
fcmovbe
aas
arpl
ljmp
or
das
mov
add
xchg
push
inc
cli
sbb
lock
lods
mov
adc
sbb
add
xor
fnstsw
mov
xchg
repz
pop
adc
xor
add
fldcw
add
sub
xchg
lds
out
fmuls
mov
adc
popa
das
mov
xchg
cmpsl
lea
iret
rcl
xchg
add
adc
ret
stc
rorl
daa
cwtl
or
dec
test
icebp
loop
jbe
in
cmc
je
jnp
mov
sti
jp
hlt
cltd
ja
out
jecxz
inc
insl
pop
dec
mov
in
cs
in
daa
mov
cmp
fdiv
cltd
in
mov
xchg
xchg
push
adc
in
or
inc
pop
lret
loopne
xchg
jne
mov
arpl
mov
mov
aad
xchg
arpl
cld
data16
mov
std
cmp
mov
out
stos
fwait
insb
nop
lods
dec
roll
shl
sbb
or
in
icebp
fistl
or
inc
mov
stc
sub
pop
mov
sub
mov
cmpsl
mov
lret
cltd
adc
in
jnp
inc
ror
mov
pop
out
mov
in
jg
mov
fmul
outsb
sub
add
leave
js
outsb
push
and
scas
push
mov
cmp
insl
decl
pusha
mov
lods
gs
xchg
and
icebp
addr16
js
in
cwtl
pop
iret
lret
insl
sbb
inc
jecxz
addr16
or
mov
into
pop
lcall
and
rolb
xchg
test
stos
enter
sbb
xlat
cli
loope
pop
jl
push
outsb
jnp
ds
icebp
stos
je
add
cs
shrl
cwtl
and
pop
inc
fcmovnb
adc
jne
add
or
aam
pop
jmp
pop
push
xchg
mov
or
inc
cwtl
fwait
and
shlb
mov
shr
and
aas
fcomip
out
or
adc
and
add
mov
lret
jae
out
mov
in
sub
jge
data16
mov
loope
xor
mov
out
dec
hlt
mov
fstps
outsl
jp
andl
lock
subb
push
in
sti
fstps
mov
mov
mov
inc
dec
mov
adc
lea
xchg
cmp
sub
rol
int
scas
push
dec
fsubl
pushf
sbb
push
or
imul
xchg
jp
bound
pusha
pop
inc
cmpsl
jmp
ret
sub
mov
aad
jl
aaa
mov
sbb
cmp
cmp
push
jne
fildl
les
push
cmp
push
out
xchg
or
fsubrl
aam
adc
leave
fs
add
sbb
inc
sub
lods
mov
imul
loopne
mov
jp
jl
jo
rolb
rol
in
fldcw
stc
in
loopne
inc
rclb
push
in
mov
sti
jne
add
stc
ds
or
rcr
shlb
repz
dec
add
lahf
xor
push
mov
push
sbb
add
adc
nop
lret
jne
nop
pop
pop
pushfw
and
mov
loop
sub
iret
leave
push
out
mov
pop
xlat
adc
mov
lahf
sbb
xor
add
xor
and
loopne
ljmp
xor
mov
cmp
aas
push
push
aad
mov
mov
sbb
call
push
adc
out
aas
outsl
loopne
mov
insl
daa
or
aas
xchg
mov
or
dec
js
lcall
push
fadds
test
jg
stos
dec
addr16
popf
or
repnz
dec
xchg
cs
mov
loopne
ds
push
adcl
lret
andnps
mov
movsl
mov
jmp
cmp
mov
cltd
ss
push
cmp
push
jnp
stc
sahf
leave
inc
sti
add
cmp
leave
jbe
mov
sbb
xor
int
mov
mov
scas
shr
je
iret
pcmpeqb
ja
mov
fdivrl
cmp
rclb
and
subb
movsb
les
mov
and
outsl
mov
clc
repnz
xchg
jbe
cld
ret
cmp
test
popa
mov
and
or
mov
mov
mov
push
adc
cmp
jne
std
and
pop
pop
cmp
sahf
rcrb
dec
ret
mov
cmp
sub
xor
and
and
clc
push
mov
ljmp
jmp
out
stos
fwait
imul
cmp
addr16
xchg
popa
sbb
iret
jmp
sbb
clc
mov
lret
sti
inc
shll
and
cli
das
call
push
mov
nop
adc
and
mov
push
dec
mov
outsb
or
xchg
ljmp
test
shll
and
mov
adc
subl
sub
daa
fstl
lar
fwait
push
mov
mov
aam
push
jle
pop
push
inc
addl
popa
xchg
cld
sub
push
pop
gs
xchg
inc
jae
aam
pop
mov
and
xchg
adc
das
add
sub
pushf
pop
das
cmp
xor
add
xor
sbb
loopne
outsb
add
fs
stos
dec
adc
mov
dec
push
cwtl
movsb
or
lods
cltd
xchg
jo
xchg
mov
xchg
dec
pop
in
inc
and
add
and
std
ud1
testb
sub
mov
or
imul
rcrb
loopne
cmp
xchg
xor
lock
jp
xchg
and
jno
inc
mov
fucomip
push
mov
sbb
or
aas
mov
in
mov
imul
sti
add
dec
dec
addr16
push
int
aaa
push
lret
cmpl
das
pop
fstpl
scas
movups
movl
aas
push
iret
out
fdivrs
add
sti
adc
xchg
sbb
addr16
xchg
lds
mov
xor
mov
std
adc
es
jbe
sarl
jo
push
jmp
into
mov
push
popf
add
lods
adc
xor
mov
out
icebp
lock
pop
adc
loop
outsb
xchg
push
pop
sbb
mov
ss
fwait
testb
ret
fstpl
mov
push
popa
ret
dec
in
jge
xor
lods
scas
xchg
fbld
lock
jb
mov
popf
and
lods
sbbl
xchg
cmp
iret
ljmp
xor
and
mov
loopnew
push
sbb
aas
pop
adc
mov
shll
lods
mov
sub
xorb
xchg
adc
faddl
out
cwtl
gs
pop
lods
xchg
pop
loopne
les
jle
in
or
hlt
and
adc
psubq
iret
outsb
mov
mov
fldt
jb
movsl
fs
adc
movsb
xor
nop
fcoml
sti
rcr
into
push
aaa
xchg
sub
mov
es
pop
repnz
movsl
cli
dec
push
out
inc
cmp
rcr
push
mov
adc
das
aaa
xor
mov
xchg
pop
imul
sub
jecxz
cmp
cs
cmpsb
call
fs
mov
stos
dec
or
xor
es
js
pop
mov
pop
mov
or
xchg
pop
fsubrs
push
lcall
push
cmp
movsb
add
cwtl
inc
pop
jge
test
add
mov
inc
inc
outsb
mov
sub
mov
in
ja
cltd
push
or
mov
xor
les
call
jno
push
mov
sub
add
push
inc
xchg
psrlq
or
cwtl
sub
test
inc
loop
mov
jg
cltd
inc
in
orb
out
push
dec
leave
mov
mov
popa
pushf
dec
inc
jmp
lret
adc
inc
cli
jb
ds
aad
and
in
adc
test
jbe
ljmp
addb
jno
pop
sub
xchg
cld
je
fsubs
ret
ret
repz
frstor
in
sbb
lods
mov
sub
call
jle
inc
icebp
stos
hlt
mov
out
xchg
icebp
mov
out
aad
adc
add
and
add
sub
icebp
stos
les
repz
and
fmulp
mov
fs
pushf
or
rep
mov
jmp
push
push
add
out
jbe
out
push
dec
outsb
arpl
jp
add
in
sub
fucomip
subb
mov
jns
shlb
xor
rolb
sbb
cld
ljmp
mov
movsb
jae
shld
xchg
add
mov
jno
call
test
sar
cwtl
das
mov
in
ret
es
fldt
hlt
xchg
je
mov
or
cmpsb
xor
mov
fldcw
inc
inc
xor
sub
xchg
lds
adc
lds
das
adc
and
push
insl
das
sbb
adc
jg
fucomi
test
in
outsl
dec
icebp
adc
sub
ss
push
out
mov
arpl
jp
sbb
pop
es
cmpsl
fldl
sbb
fcoms
ret
dec
test
lds
stos
aaa
sti
test
and
loope
inc
fs
and
sbbl
movb
mov
scas
cmpb
cmp
repz
int3
ret
call
mov
jnp
test
or
fcoms
push
aas
and
popa
mov
mov
lds
leave
push
lock
fiaddl
adc
test
pusha
int3
mov
mov
xor
fcoml
pop
iret
add
cld
jmp
mov
lea
add
cwtl
dec
pushl
push
call
lods
or
xor
mov
insl
xchg
adc
jle
pop
mov
jmp
pop
mov
mov
xchg
test
adc
mov
xchg
stos
cmp
movsb
mov
mov
lret
xchg
inc
outsb
cmp
jg
shll
or
bound
sbb
adc
push
sub
and
inc
aas
mov
call
movsl
pop
dec
ja
push
lcall
mov
sbb
xor
jae
inc
cltd
push
lret
and
loope
push
incb
cwtl
mov
push
inc
xor
dec
fucomi
jae
jno
pop
mov
pop
pop
xchg
shll
push
inc
je
xchg
dec
cld
vminps
or
scas
lret
fbstp
jo
into
add
sub
mov
outsl
jae
jbe
sbb
roll
icebp
xchg
jne
lock
repnz
test
push
add
xchg
stos
shrl
scas
cwtl
adc
add
xchg
fmuls
gs
sbb
aaa
jnp
mov
mov
sbb
push
jmp
dec
loope
xchg
test
mov
rolb
dec
stc
negl
maxps
mov
icebp
sub
pop
jg
sub
inc
das
daa
sahf
dec
dec
jp
lcall
xchg
hlt
out
jo
aas
data16
cmc
lret
mov
mov
rorb
pushf
sub
test
or
jne
mov
push
fstpl
arpl
cli
xor
loop
cmp
aad
jb
jns
insl
in
int
daa
xchg
addl
and
dec
mov
lds
and
pop
hlt
ss
fdivs
nop
jle
adc
cmpsb
xor
dec
pop
xor
imull
lock
xchg
jg
jecxz
jns
xchg
pushf
cmpsb
adc
jae
sbb
call
jno
xor
mov
ja
loope
push
idiv
xchg
sbb
sbb
imul
mov
in
bound
xor
sub
inc
cmc
aas
or
das
loopne
insl
jnp
fbld
dec
data16
xchg
sub
pop
add
lahf
pop
loop
jl
int3
sbb
inc
mov
ret
mov
insb
lea
xchg
fsubl
xchg
repz
data16
stos
ljmp
xchg
jno
pop
iret
popf
gs
pop
mov
jg
int
cwtl
jae
aaa
push
mov
shll
dec
imul
clc
mov
pop
xchg
pushf
hlt
jg
push
cmp
ret
adc
mov
cmp
mov
xchg
sub
popf
lock
jmp
jge
nop
negb
mov
xchg
sub
insl
mov
jge
jl
lods
mov
inc
sub
push
rorb
out
xchg
lret
jb
imul
mov
mov
roll
jecxz
aaa
mov
and
cmp
adc
rcll
jae
jns,pn
bound
stos
ja
fldl
xchg
leave
or
dec
pop
dec
push
xchg
sbb
aaa
shrb
push
push
mov
xor
sub
jb
pop
and
xchg
add
push
mov
clc
shll
das
cmpsl
dec
add
sub
adc
je
popf
push
cmp
fists
test
loop
shr
adc
scas
popa
add
adc
sub
dec
push
dec
mov
lret
mov
shll
addr16
lods
cmp
push
ret
cmc
and
inc
jecxz
and
xor
xor
pop
dec
icebp
stos
or
mov
push
add
and
insb
pop
adc
sti
dec
add
add
add
js
neg
jns
adc
sbb
cmp
mov
insb
xlat
scas
pop
inc
lcall
test
push
inc
clc
mov
mov
xlat
shll
xor
jbe
mov
out
add
sub
js
aas
sti
mov
xchg
fnsave
fnstenv
and
sahf
hlt
push
and
loope
sbb
fldl
or
pusha
int
cmp
mulb
rolb
jno
push
fstpt
cwtl
inc
mov
outsb
lods
imul
push
or
mov
out
pushf
adc
add
loop
ret
test
leave
hlt
push
rcrb
and
fwait
cli
or
cmpsb
add
mov
ret
xor
aaa
pop
inc
jmp
cld
push
mov
nop
pushf
jb
imul
xchg
gs
or
cli
mov
repnz
sahf
bound
dec
int
push
push
push
dec
sbb
xor
adc
aam
sbb
ret
decb
inc
mov
lods
inc
arpl
sbb
js
enter
int
mov
iret
aas
jecxz
push
pop
sub
mov
or
push
in
dec
xchg
mov
dec
aam
xor
mov
loope
mov
fistpl
fistl
lock
push
inc
adc
sub
call
stos
ret
insb
mov
xor
bound
xor
push
dec
or
jbe
dec
jbe
ja
sub
lret
test
add
add
jmp
xchg
in
xlat
mov
rcrb
scas
testl
add
dec
scas
mov
dec
iret
cwtl
cli
pushl
mov
fisubs
fdivrp
mov
and
or
fmul
push
enter
int
insl
dec
out
or
lea
mov
andb
fimuls
inc
push
push
mov
push
in
inc
and
jge
ret
mov
push
mov
add
mov
stc
pop
inc
mov
mov
mov
fisubl
sbb
and
jl
mov
inc
mov
lods
icebp
nop
aas
pop
and
push
push
or
or
inc
push
into
mov
lods
insl
dec
movsl
mov
sub
push
inc
int
add
push
xlat
jns
into
xchg
mov
outsb
push
mov
test
jmp
jns
pusha
mov
sti
inc
mov
icebp
push
mov
pop
push
pop
mov
jne
adc
cmc
sub
cmpsb
push
rolb
mov
ss
into
jp
cmpsb
push
cmp
push
jno
push
or
mov
mov
out
loop
mov
sub
xchg
out
adc
ja
gs
sub
iret
les
lsl
scas
fwait
jo
sahf
sbb
out
in
jb
das
movsb
cmp
fstl
cmp
push
fdivr
mov
cmp
mov
and
test
lea
xor
out
ja
inc
sbb
stos
mov
pop
imul
fwait
ja
push
xchg
mov
in
or
adc
dec
aam
dec
add
sarl
pushf
cmp
cmp
inc
nop
call
add
sete
popf
cmc
popf
pop
xor
mov
mov
stc
dec
lea
mov
fwait
inc
popf
ret
fstl
mov
xchg
std
aad
imul
sub
and
movsb
or
sbb
xor
push
pop
jl
pop
les
or
xchg
mov
das
sub
dec
and
popa
and
cmp
fsqrt
and
daa
addr16
push
popa
mov
in
in
mov
mov
dec
fcoms
fidivrl
insb
xchg
out
pushf
mov
test
push
xchg
jl
int3
pop
icebp
imul
lahf
in
mov
push
cwtl
outsw
addr16
mov
xor
daa
add
adc
dec
mov
sub
xor
divb
inc
mov
lds
sub
sbb
testl
mov
scas
adc
dec
aas
sti
fnsave
je
sub
arpl
inc
test
mov
xor
cmp
adc
movsl
repnz
mov
out
xchg
cmp
mov
push
jne
imul
loop
or
xor
adc
mov
xor
sub
push
sbb
fsubs
lcall
sub
bound
cmpsl
leave
add
sar
or
aam
sbb
adc
lret
repnz
mov
mov
aaa
and
cltd
inc
adc
andb
xchg
xlat
mov
lds
adc
lods
icebp
sub
adcl
mov
negl
rorl
and
into
bound
dec
lods
xor
mov
inc
loop
popf
lcall
inc
mov
pop
scas
or
inc
mov
pop
cmc
imul
movsb
jmp
pop
add
xchg
push
sti
add
sub
insl
xor
ljmp
lods
fildll
jnp
decl
dec
or
popa
in
sti
lcall
popa
mov
test
push
loop
rorl
ficomps
lods
ds
imul
push
rcrb
mov
adc
outsl
pop
or
loop
mov
dec
xchg
aaa
mov
loopne
jecxz
out
adc
adc
movb
dec
mov
or
fsts
inc
mov
aaa
mov
mov
jno
into
cltd
sbb
movsb
stc
cmpsl
imul
dec
add
cmp
int3
lahf
push
js
and
gs
adc
test
icebp
or
out
ds
push
adc
mov
or
lods
call
out
sub
movsl
xchg
rcrl
add
aaa
stos
jbe,pn
clc
mov
inc
aaa
js
daa
cmc
fadds
leave
test
jno
cmp
xchg
sub
pop
mov
mov
nop
lcall
imul
rol
into
cmp
push
pushf
fcompl
xchg
sub
or
movsb
lahf
addr16
jno
add
imul
mov
test
andb
pop
inc
ljmp
in
jne
pop
or
cwtl
sub
nop
push
cld
jbe
jg
jb
add
test
pop
xchg
or
push
flds
aaa
mov
cmpsl
cmp
iret
xor
cltd
mov
mov
test
lret
xor
lds
fstpl
ret
jmp
push
lock
shl
scas
xor
xor
push
imul
cs
add
pop
scas
xchg
popa
sbb
lcall
sbb
add
ds
add
xchg
clc
xor
cmp
ja
loope
mov
cmpsb
mov
push
push
add
scas
sbb
aas
or
cltd
cmpsb
push
add
pop
pop
push
dec
es
push
fidivl
add
inc
push
dec
dec
and
mov
push
sub
rcr
mov
mov
mov
xor
scas
lds
jno
leave
ror
mov
adc
gs
in
jle
popa
rol
shlb
mov
inc
sahf
jae
out
xor
mov
push
and
repz
out
testl
or
rcll
loopne
inc
xlat
lds
mov
lcall
inc
push
jp
js
repz
jne
adc
lret
insb
mov
js
inc
and
sub
inc
outsl
push
iret
mov
or
test
scas
fisttpl
int3
mov
cli
or
jmp
push
sbbl
leave
fsubrs
rcrb
jecxz
xchg
ljmp
lods
mov
inc
decl
pop
or
jecxz
js
mov
sub
push
jae
je
orl
pop
push
mov
mov
mov
cli
xchg
dec
push
sub
mov
stos
sub
inc
fiadds
clc
fs
mov
testb
lcall
inc
or
dec
xor
jmp
rolb
push
pop
adc
or
pop
pop
mov
cltd
jb
inc
push
mov
out
and
repz
movsb
adc
movsb
pop
call
add
and
add
imul
mov
cmpsb
pop
and
aas
cmp
sub
jl
imul
inc
dec
rclb
jbe
dec
dec
adc
lock
sub
mov
popa
bound
xor
or
xor
mov
xchg
ljmp
push
cmp
mulps
ja
pop
in
mov
mov
mov
mov
cmpsb
mov
push
test
mov
adcl
sub
lea
cltd
iret
stos
or
bound
sbb
rcll
jmp
ds
rcrb
inc
and
nop
jae
sti
ds
mov
addb
outsl
adc
add
xchg
cwtl
mov
ret
mov
cld
or
sbb
scas
js
jno
stc
das
jmp
fbld
xor
test
js
and
inc
mov
minps
dec
push
ljmp
pop
addl
add
xchg
jmp
xor
pop
aad
sti
mov
and
cwtl
sub
cld
leave
fs
aam
push
shlb
int
mov
xchg
and
dec
rcrb
repz
outsb
push
pop
mov
sbb
mov
mov
lcall
add
cmc
mov
and
adc
icebp
jl
xor
push
lcall
push
iret
jb
sbb
test
popf
dec
inc
pop
adc
leave
mov
bound
dec
loope
push
lret
jle
inc
js
dec
adc
or
orl
xor
jmp
cmp
orb
inc
aam
movsl
push
dec
push
xchg
cwtl
cmpsb
lds
adc
cltd
jl
mov
aad
jnp
cs
cwtl
aad
iret
aad
mov
xchg
sbb
fadd
mov
popa
cwtl
ret
mov
sbb
out
mov
inc
inc
and
icebp
call
and
insl
sbb
nop
push
cmc
sbb
mov
icebp
in
xchg
lds
das
bts
jnp
inc
add
and
mov
pop
bound
push
movsb
mov
sub
xchg
cmp
fbstp
cmpsl
mov
ret
icebp
sub
adc
jp
cmp
inc
rcrl
mov
imul
lods
cmpsl
push
popf
xchg
sub
sub
pop
std
dec
rcrb
or
or
xor
inc
test
mov
iret
loope
scas
mov
jmp
out
in
or
loope
mov
sub
push
mov
push
data16
add
mov
out
mov
jg
fisttpl
fisttpl
hlt
xchg
lahf
pop
outsl
sbb
xchg
popf
push
or
xchg
ret
fwait
or
push
add
cmc
xchg
mov
inc
mov
xchg
xor
sti
or
clc
xchg
xchg
sub
insb
xlat
ret
ret
mov
idivl
cmp
mov
movb
jmp
lret
cs
and
lea
out
lock
in
add
jo
shll
movsb
adc
xchg
add
adc
lret
sub
ja
int3
nop
outsb
frstor
sub
xor
imul
xchg
icebp
xlat
dec
dec
shrb
roll
daa
and
popa
aaa
rolb
pop
imul
pop
iret
or
leave
add
ljmp
loop
fsincos
es
xor
mov
lret
push
push
aam
mov
mov
xchg
iret
bswap
popf
lea
insb
pop
inc
push
mov
clc
das
add
inc
cmp
lahf
jae
or
jbe
push
scas
or
lret
xchg
mov
imul
inc
aad
imul
fs
cmpl
mov
add
das
xchg
insb
mov
push
frstor
lock
pusha
mov
push
xor
mov
fsubs
std
mov
rol
dec
int3
and
popf
repz
sub
push
mov
jecxz
jne
int3
mov
divl
int
inc
xchg
shll
mov
pop
and
mov
insl
dec
and
push
cld
sarl
scas
cmpsb
shll
xchg
in
das
aaa
push
lock
int3
push
dec
lds
cmp
or
popa
rorb
mov
push
adc
call
dec
loop
adc
cltd
push
fidivs
fidivrs
lds
inc
lods
movsl
test
pop
clc
fwait
and
xchg
subl
shlb
mov
jmp
xlat
xor
or
push
cltd
xchg
and
xchg
pusha
adc
pop
outsl
shll
subb
icebp
xor
divb
push
jne
xchg
push
hlt
test
shll
jg
jmp
inc
inc
mov
in
push
cs
jne
js
pop
out
lret
cwtl
xchg
push
orl
imul
outsb
cli
sbb
cmpsb
cmp
shll
push
je
xchg
movsb
out
or
leave
shr
xlat
sub
push
clts
aaa
jecxz
mov
sbbl
xor
mov
xchg
add
das
aaa
xchg
push
repz
mov
pushl
es
je,pn
fdivrl
mov
mov
std
adc
fsubs
imul
dec
movsb
xor
sti
out
jle
shl
push
jne
sub
cmpsl
inc
dec
adc
pop
movsl
pop
lret
ret
stc
mov
xchg
shll
in
rorb
jne
dec
in
mov
pop
mov
ds
and
out
add
cmp
mov
ja
fsubrs
pop
fwait
push
shrl
adc
pop
es
or
icebp
out
insl
daa
sub
cmp
stos
cmp
jbe
jb
mov
push
xor
and
data16
push
adc
add
in
leave
rorl
popa
jb
ret
cmp
outsb
fwait
js
push
in
stos
mov
jmp
push
shl
push
sbb
adc
leave
movsb
pop
sub
mov
lahf
cld
cmp
and
lea
icebp
cli
std
mov
int
std
lods
stc
insb
push
sbb
xchg
and
jmp
mov
jne
lret
mov
xchg
repz
xor
loope
icebp
mov
in
scas
cmp
add
and
add
inc
push
cmc
mov
addr16
cmp
xchg
or
ja
in
mov
inc
sbb
out
insl
xor
fistl
mov
shlb
es
dec
dec
xchg
out
in
xchg
xor
dec
adc
jno
xor
lods
insb
cmp
inc
push
into
das
mov
xor
adc
cmpsl
pushf
xchg
rcr
cmp
xor
mov
mov
inc
pop
leave
stos
rol
stos
or
sub
sahf
fldenv
insl
mov
pop
gs
xor
adc
mov
dec
outsl
jge
aad
jb
pop
and
xchg
pushf
cmc
rol
mov
sbb
nop
data16
leave
and
shlb
push
fdivr
mov
fmul
imul
sbb
cld
loopne
push
cmp
jg
dec
lock
fildl
xor
xchg
int3
xchg
or
adc
jp
cmpsl
loope
add
mov
lds
imul
mov
lcall
mov
sahf
dec
cmpsl
mov
or
and
xchg
arpl
inc
xchg
add
lea
clc
fnstsw
addr16
and
xchg
inc
push
lods
test
aaa
in
adc
aas
or
mov
iret
daa
int
cmp
mov
push
pushf
repz
fstl
jle
or
xor
pop
adc
in
insb
cs
and
adc
adc
test
jmp
sbb
scas
imul
shrb
movsl
insl
and
sbb
cld
movsb
cltd
gs
xchg
mov
jno
pop
jae
sbb
popf
test
shlb
aad
call
pop
addl
test
imul
fistl
inc
mov
or
mov
ret
push
push
or
daa
rcrb
inc
sbb
mov
add
shl
adc
pop
and
ret
loopne
xchg
pop
addr16
cmp
xor
cmp
lahf
ret
test
roll
pushf
mov
jbe
jmp
leave
adc
mov
push
into
push
or
xchg
cmp
cmp
pop
nop
push
cld
leave
das
pop
outsl
adc
leave
sahf
jbe
fldcw
jae
adc
xor
sahf
loopne
flds
mov
lds
cld
jecxz
inc
sahf
ds
mov
pop
or
mov
sub
cmp
fsubs
mov
setb
jb
pushf
out
testb
add
lret
jnp
inc
je,pn
mov
pop
pop
pop
push
mov
int
push
or
or
adc
sub
jecxz
data16
add
out
outsb
in
neg
adc
mov
gs
pop
add
jns
jl
add
jle
std
mov
clc
pop
loop
mov
mov
pushf
addr16
gs
in
or
lods
lahf
addr16
sbb
repnz
pusha
mov
dec
inc
sbb
jno
stc
xchg
pop
in
jne
mov
imul
addb
pop
adc
imul
sub
push
into
or
pop
add
push
fcoml
fistl
pop
addr16
popf
rorl
inc
sbb
jo
imul
jp
fadd
jno
das
pop
lret
popf
aad
ja
push
add
dec
xor
xchg
add
adc
mov
push
stos
dec
xchg
testl
xor
js
ss
in
fsubrl
shrb
jnp
shlb
shrb
test
inc
pop
mov
scas
out
push
out
or
pusha
mov
movsb
jl
dec
lcall
push
xchg
adc
mov
lods
jl
and
into
lret
lock
shr
jae
pop
ficoms
lds
mov
in
sub
roll
and
int3
test
pop
fidivrs
lret
movb
dec
xchg
cmp
leave
jge
inc
jnp
push
aas
notl
sub
loop
mov
pop
lret
jle
dec
cmpsb
sub
inc
insl
cwtl
and
sahf
out
mov
enter
jmp
and
imul
dec
mov
test
pop
xchg
iret
and
and
pop
jns
outsb
ret
loope
inc
je
movsl
jo
test
inc
inc
mul
andb
mov
sahf
mov
inc
xor
popa
pop
mov
mov
pop
xchg
in
aad
mov
add
call
aaa
adc
mov
pop
xchg
ds
sub
add
int
inc
repnz
in
jmp
xor
mov
dec
fiaddl
mov
imul
loope
addr16
movsb
sbb
imul
mov
sub
jne
iret
mov
mov
adc
sub
jmp
adc
push
stos
dec
adc
mov
int3
rorl
inc
dec
cmp
out
outsl
jbe
inc
test
add
pop
push
add
int3
push
and
xlat
pop
adc
dec
int
push
xor
adc
das
mov
adc
push
daa
push
pop
outsb
jno
repz
std
out
rcrl
ss
popa
dec
lcall
loop
mov
inc
stos
dec
mov
lods
mov
xchg
movl
xchg
fwait
mov
push
shl
clc
jne
lret
inc
sbb
mov
fdivs
out
ds
fistpll
lock
into
push
data16
jl
xchg
add
jecxz
xchg
inc
in
bnd
mov
xor
cmc
ret
scas
xor
mov
aam
repnz
hlt
pop
in
ja
mov
outsb
js
add
or
jmp
push
sbb
test
mov
bound
lret
inc
or
aad
sbb
scas
sbb
mov
lret
rclb
aad
adc
lea
shlb
sub
xor
adc
orl
xchg
test
inc
js
xor
push
lds
cmp
insb
sub
insb
sarl
cmp
into
bt
test
stos
adc
lods
mov
outsb
sub
cmp
push
xchg
push
scas
cmp
inc
or
cmp
sub
cmp
mov
adc
mov
cli
cmp
mov
mov
add
pop
add
sub
inc
push
sub
jl
jbe
cmp
scas
mov
out
das
es
decb
jmp
aas
jl
push
pop
sahf
jns
push
movsl
and
add
pop
push
mov
cwtl
mov
ficoms
jo
pop
rcrl
pop
cmp
jbe
cwtl
pushf
subl
jg
fnstcw
nop
push
int3
push
testb
push
and
cltd
fistpll
dec
inc
leave
mov
xor
fwait
aad
mov
leave
movd
fsub
mov
jecxz
lock
cld
add
sbb
mov
mov
nop
inc
sub
shrb
mov
pop
jl,pn
cmp
or
fistl
insl
mov
pop
inc
jbe
dec
mov
das
add
adc
dec
ljmp
divb
aas
popf
mov
mov
xor
jle
push
fld
cld
dec
mov
mov
in
cmpsl
jb
cli
popa
cmp
lret
or
ljmp
mov
stc
add
stos
xchg
std
int3
mov
jmp
scas
sbb
xor
lock
or
repz
push
fisttpll
adc
in
push
add
xor
adc
xchg
cli
jae
cmp
jnp
mov
iret
mov
pop
jbe
jmp
sbb
inc
sarl
lock
outsb
and
xchg
mov
jnp
sub
cmp
push
ja
pop
sbb
out
stos
repz
and
jge
cmpsb
cmpsb
and
mov
pushf
mov
das
inc
ret
sub
sarl
andl
cmp
in
cmp
mov
pop
fbld
pop
rorb
push
inc
jle
jp
add
jno
lea
insb
pop
movsl
cltd
daa
int
jge
xchg
add
pop
cmpsb
rcrb
fwait
push
jl
out
xor
xor
in
lock
in
es
pop
out
push
and
jbe
mov
scas
or
ja
in
add
push
out
adc
jo
and
or
stos
loopne
mov
into
scas
sub
mov
mov
rcr
xchg
sub
gs
fsub
or
cltd
push
icebp
adc
dec
fistps
scas
mov
cs
xchg
lret
jg
dec
popa
xchg
mov
int3
xor
rcrl
mov
icebp
lcall
stos
cmp
mov
mov
mov
and
dec
jg
popf
in
setbe
or
mov
fisubrl
cmc
sub
aaa
ds
xchg
sub
js
xchg
xchg
pop
push
mov
ja,pt
sbb
jge
push
fs
loop
sub
inc
sub
cld
mov
add
add
movsbl
gs
dec
xor
int3
ljmp
mov
scas
jbe
dec
insb
sub
popa
subl
dec
data16
outsb
std
sbb
cwtl
call
add
out
jmp
push
ljmp
popf
sub
lods
pusha
pop
loope
cltd
dec
subb
mov
push
dec
aaa
daa
push
push
jno
loop
dec
sar
sbb
sub
les
mov
enter
imul
hlt
and
sub
repz
adc
fstpl
xchg
push
or
in
das
mov
fmuls
frstpm(287
shr
add
pop
mov
lcall
inc
int
sub
push
mov
mov
dec
or
in
xchg
inc
jmp
mov
fs
add
gs
sub
aam
sub
pushf
pushl
sbb
mov
push
add
jnp
lahf
push
or
insl
call
ljmp
testb
mov
push
pop
sub
push
jmp
adc
mov
push
pop
xchg
out
push
add
adc
aad
pop
inc
pop
ret
das
add
cmp
sub
in
pop
and
mov
repz
aaa
jne
imul
push
push
mov
sbb
in
pop
fs
jne
xchg
ret
inc
leave
orb
mov
insl
sub
sarl
adc
pop
inc
add
mov
xchg
jmp
or
pushf
aad
mov
fildll
out
rorb
mov
out
faddl
loope
xchg
jl
adc
adc
pop
fcomp
and
es
add
lret
dec
jg
test
pop
mov
xchg
push
mov
lock
push
lods
pop
dec
jns
sub
inc
xor
or
sub
dec
sub
nop
bound
insl
dec
sub
negb
sahf
fwait
push
pop
adc
rcr
out
ljmp
xchg
lea
sub
or
add
ljmp
xchg
xchg
maxps
lret
push
or
sbb
hlt
cmp
dec
pop
push
negl
mov
sub
cltd
test
aaa
shl
xor
jne
mov
hlt
xor
dec
outsl
adc
pop
jnp
xchg
adc
mov
imul
out
popa
jmp
lret
mov
ja
cs
sub
mov
and
xchg
call
ficompl
xchg
lods
fwait
and
adc
stos
sub
inc
aaa
jge
sub
and
aam
mov
mov
sbb
hlt
mov
lods
cmp
jae
dec
data16
and
faddp
cmp
pushf
jg
mov
das
mov
and
dec
sbb
dec
xor
pop
hlt
push
pop
sub
sub
ret
jb
sarb
stc
jo
into
xor
sub
jns
fcmovnb
jl
xor
xor
clc
testl
int3
fwait
push
pop
xchg
fstpl
andb
jmp
cmp
sub
lret
pop
or
push
cmpsb
xchg
sbb
push
and
xchg
adc
cmp
pushl
cmp
jne
cmp
dec
fs
xlat
and
lea
lods
enter
stc
mov
add
popl
push
shrb
push
ret
in
iret
mov
cmp
jns
jl
and
popf
jne
push
pop
mov
inc
jp
out
inc
jmp
dec
lea
popl
insl
mov
ret
cld
add
add
test
sahf
scas
dec
inc
mov
cli
jmp
and
fcmovnbe
loope
add
lahf
pop
icebp
inc
in
cmp
and
and
add
aas
pop
push
jb
stc
push
ja
leave
mov
add
and
add
inc
cmp
xor
mov
clc
cmp
rcr
jmp
lahf
in
sub
xor
cld
fidivs
xor
dec
and
sub
popa
loop
ss
push
xor
popa
dec
mov
dec
pop
test
enter
add
jae
movsl
idivl
mulb
leave
jmp
shll
sbb
js
mov
loopne
lds
ja
insb
inc
into
adc
nop
pop
sahf
mov
in
aaa
mov
negb
jb
inc
mov
push
stc
or
cmc
or
jns
and
call
mull
loope
push
xor
push
mov
mov
aad
fwait
popa
mov
dec
shlb
xchg
test
repnz
xchg
add
clc
cmp
mov
xor
frstor
mov
insl
stc
and
in
or
ds
scas
mov
addr16
mov
sbb
subl
test
pop
in
cmpsb
insl
leave
clc
repz
sub
sti
dec
pop
fnstenv
dec
fstps
jmp
push
ds
rorb
clc
pop
lods
cmpsl
pop
xchg
enter
fidivrs
ja
clc
rclb
test
xchg
les
mov
imul
push
dec
mov
xchg
inc
arpl
add
inc
and
add
movsb
xor
pop
xlat
push
adc
sub
xchg
loop
push
mov
sub
outsb
in
push
mov
and
adc
inc
sbb
out
in
mov
pop
sub
inc
roll
cmpsl
stc
movsb
inc
shll
out
push
sbb
shrl
stos
lock
cmc
filds
in
jg
gs
xchg
mov
lret
lahf
mov
mov
mov
xchg
rclb
cmc
push
call
mov
dec
and
lea
aam
push
xchg
mov
loop
aam
inc
imul
and
fimull
fsubrl
or
cltd
loopne
mov
insl
pop
call
lock
sbb
push
test
xchg
pop
mov
mov
and
xchg
shr
push
in
mov
lods
pop
or
iret
leave
rol
pop
dec
test
push
insl
inc
lods
imul
push
mov
repz
pop
mov
test
xchg
mov
cwtl
pop
out
jno
mov
inc
fdivs
lahf
xor
push
data16
gs
iret
lock
pop
sbb
xchg
pop
xor
scas
minps
roll
les
push
loopne
mov
sbb
dec
mov
pop
test
push
xchg
clc
movsb
leave
pop
xchg
sub
cmpsb
call
dec
aas
or
xchg
pop
out
push
jae
push
pop
push
cld
lret
ljmp
mov
test
or
cmp
pop
bndldx
sbb
dec
fwait
in
sub
inc
stos
pop
adc
jle
inc
lods
aad
adc
rorb
jl
enter
inc
outsb
mov
repnz
inc
xor
add
push
in
stos
ljmp
dec
sbbl
mov
les
stos
mov
add
fdivrl
inc
cmc
adc
gs
call
ret
ljmp
xchg
leave
icebp
outsb
xor
out
bound
lcall
adcl
mov
mov
push
fistpl
daa
mov
addl
movsb
pop
into
sub
inc
fstp
mov
sbb
sub
lret
mov
xchg
das
xor
sahf
xlat
bnd
or
dec
and
push
call
rcll
aad
out
adc
mov
mov
push
cmp
push
jl
dec
jl
scas
mov
hlt
jecxz
in
cmp
clc
int3
insl
jmp
jmp
sbb
mov
cmp
sti
push
enter
cmc
push
jbe
insl
jae
mov
scas
lcall
mov
xor
sub
scas
inc
push
pusha
cmp
mov
test
pop
hlt
xor
pop
mov
ja
jecxz
pop
fbld
and
sub
sti
lds
mov
es
popf
dec
or
push
ds
cli
or
jns
mov
jle
shrl
fldt
stc
xchg
fidivs
fnsave
ss
andl
stos
cmpsl
mov
or
xor
dec
add
fsubrs
mov
mov
sub
lea
in
pop
pop
sbb
shr
mov
arpl
stc
push
xor
aaa
ss
rcll
mov
stc
dec
call
mov
movl
mov
add
mov
inc
push
fbld
daa
push
test
sub
aaa
bound
in
invd
movsl
mov
dec
out
ja
into
mov
adcb
jecxz
xchg
call
pop
sub
lds
fstpl
xchg
push
jns
mov
mov
adc
jnp
js
scas
testl
mov
adc
or
out
cmp
xor
push
mov
pop
fimull
popa
mov
and
and
jecxz
mov
jb
les
mov
pop
ja
negb
and
sub
out
mov
inc
xchg
inc
fxch
xchg
sub
and
pop
pop
aas
es
xchg
pop
jb
or
insb
cwtl
repz
mov
mov
jae
lahf
mov
lock
rcrb
mov
cmp
dec
cmpsb
mov
fwait
dec
lock
xchg
test
mov
xor
aam
xchg
jno
add
ds
mov
insb
mov
in
scas
and
aas
pop
in
or
mov
rorb
sbb
mov
fwait
repnz
jl
push
and
and
dec
cmp
aad
nopl
mov
fstl
lcall
ret
xchg
add
outsb
ror
push
and
adc
or
sarb
stc
pop
ret
jns
in
movsb
push
or
arpl
inc
loop
popa
shl
add
rclb
dec
sub
ret
sar
in
into
push
test
sbb
pop
xor
mov
test
sub
cs
xor
or
aas
mov
cmp
mov
aas
sub
or
mov
mov
or
add
loop
int3
imul
add
test
mov
jecxz
arpl
add
and
add
sub
sar
and
xor
push
or
sub
lahf
xchg
dec
pop
scas
loop
xchg
mov
cmp
push
movsb
jno
scas
outsb
push
data16
mov
fs
sub
xchg
sub
adc
lods
xor
push
xchg
jmp
imul
sti
mov
js
jg
in
repnz
mov
fdivr
cmp
sub
pop
and
jnp
adc
jmp
mov
leave
lcall
dec
lret
cli
in
stos
xchg
es
jns
and
jge
lcall
cmp
pusha
call
add
fsubrs
or
mov
mov
cmp
or
cmp
xor
mov
test
lahf
mov
out
pop
pop
popf
out
cmp
sbb
jae
outsb
data16
adc
mov
cmp
filds
or
movsb
in
push
and
mov
dec
scas
dec
and
add
out
mov
clc
and
xchg
jb
dec
cmp
popf
push
push
cmp
pop
loope
inc
pop
push
subl
in
mov
dec
pop
out
mov
fmuls
mov
mov
jbe
es
mov
loop
mov
shlb
dec
cmpsl
fsubrp
mov
fs
in
jmp
mov
inc
fsubr
push
jl
mov
and
push
cmp
cmp
inc
cmpsl
and
pop
dec
and
jo
bound
xchg
lret
lret
push
dec
mov
dec
mov
push
mov
mov
ljmp
inc
push
or
fildl
bound
es
fisttps
ds
sub
sahf
cmpsb
ljmp
cld
xchg
sub
jl
data16
test
nop
movsb
add
into
and
in
xchg
enter
push
pop
jne
pop
mov
loop,pn
je
xor
and
lahf
mov
add
sahf
add
daa
jg
mov
in
aad
mov
inc
int3
stos
add
xchg
mov
xchg
xchg
push
xchg
shll
mov
pop
push
fidivl
sub
or
repnz
add
sbb
rcrl
sub
mov
ret
sti
push
mov
insb
cli
adc
xchg
adc
movsl
add
cwtl
pop
inc
or
out
sti
jbe
push
lea
out
lcall
xchg
lahf
dec
cmp
loopne
pop
push
enter
pop
mov
shr
sub
xchg
mov
mov
mov
jbe
add
fcompl
pushf
aaa
leave
push
lods
fmulp
lock
add
cmp
xor
jbe
popf
jmp
jne
mov
insb
inc
pop
dec
dec
ja
je
fadd
test
jne
rclb
pop
fldcw
lahf
sub
in
lahf
stos
inc
sbb
insb
jle
je
mov
lock
xchg
ss
push
add
push
fwait
cltd
push
in
xchg
pop
mov
inc
sahf
mov
mov
sahf
lds
lcall
xchg
lea
fs
sub
js
fst
dec
add
mov
pop
scas
fsubrs
fs
shlb
popa
ja
cltd
cmpsl
imul
jne
or
mov
xorl
daa
jbe
das
mov
imulw
out
xchg
in
std
jg
or
js
bound
xchg
repnz
jne
cmp
cs
adc
ret
pop
sub
push
jle
sub
rcll
rorb
adcl
je
ja
into
mov
int3
rcr
adc
loope
adc
xlat
mov
mov
add
pop
out
lods
ljmp
idivl
subb
sahf
popf
pop
fisubrs
fistpl
cmp
xor
aam
data16
outsl
aad
stc
sbb
mov
fsubrp
push
jecxz
jg
jo
in
cmpsl
jle
dec
frstor
mov
add
sub
inc
imull
dec
bound
cmpl
xorl
in
repz
test
cmp
loop
idivl
push
or
jno
push
outsl
out
adc
mov
mov
add
movsb
adcb
inc
inc
mov
fldl
call
int3
mul
jo
arpl
sbb
xor
fwait
xor
arpl
iret
dec
stos
es
addr16
push
push
mov
popa
add
fwait
mov
nop
sub
xor
lahf
aas
sbb
aaa
sbb
imul
bound
aad
popf
adc
dec
xchg
dec
dec
push
or
sub
or
xlat
mov
jl
bound
jae
insb
adc
xchg
shr
push
stc
dec
and
fistl
pop
jmp
pop
or
add
in
nop
cmpl
add
dec
cmpsl
cmp
pop
push
out
cmpsl
ss
fsts
add
ret
mov
lods
dec
clc
push
dec
and
cmp
outsl
addl
sbb
dec
xor
inc
xlat
dec
push
xor
out
xchg
jecxz
fwait
mov
test
sub
xchg
cmp
sti
xor
mov
pop
aaa
push
mov
push
xchg
lock
cmpsl
and
adc
rcll
mov
lret
inc
pop
loopne
inc
loopne
js
sub
adc
mov
sub
cmpsb
aam
subl
and
idivl
out
or
dec
or
fwait
jle
pop
mov
subl
mov
pop
je
sub
add
sub
xlat
xchg
xchg
dec
add
mov
push
clc
inc
aas
xchg
or
addr16
pushf
fidivl
pusha
cmpsb
mov
cmpl
gs
and
orb
int3
sahf
cmc
push
mov
roll
mov
loopne
fwait
in
inc
jmp
and
leave
in
outsb
mov
dec
outsb
cmp
idivl
adc
adc
out
jge
daa
sub
test
sti
mov
popa
ja
fxtract
out
out
sar
dec
dec
sarl
addr16
dec
dec
fdiv
adc
out
jecxz
movb
dec
fdivrl
dec
mov
insb
mov
sub
adc
inc
dec
pop
mov
lds
ja
xchg
fwait
jnp
xorl
push
jb
fcomps
ucomiss
cmp
adc
in
mov
add
add
pop
mov
pop
es
clc
movsb
daa
fildl
add
pop
add
dec
fldl
mov
pop
ljmp
in
mov
testb
fcoml
pop
mov
adc
andb
clc
jno
sbb
pushf
cli
pop
outsb
pop
outsl
std
movsb
pop
inc
xor
mov
pop
mov
xlat
add
push
aad
pop
loop
and
xor
mov
mul
or
xchg
mov
movzbl
add
in
sub
jmp
xchg
xchg
mov
push
sbb
xor
aam
mov
pop
insb
sub
mov
inc
xchg
mov
jo
sub
fs
repnz
or
or
bnd
adc
out
mov
mov
mov
mov
aas
test
clc
lret
jp
mov
xor
popa
mov
aad
mov
jns
rcrl
mov
cld
lahf
adc
mov
cmp
cmp
mov
pop
pop
mov
imul
leave
jb
xchg
repz
mov
cmpsl
ret
cmp
mov
insl
lret
movsl
call
jecxz
mov
xchg
add
fbstp
dec
dec
jae
push
cmp
lea
xchg
and
sbbl
jle
add
scas
mov
lock
pop
jle
aam
mov
push
insb
test
adc
fisttps
stos
sti
pop
popf
pop
push
cmp
loope
pop
dec
sub
mov
out
pop
in
or
jp
or
jae
in
adc
push
add
jb
cmc
pop
addr16
movsl
lcall
pop
pop
mov
xor
mov
insb
sub
cltd
jns
mov
adc
adc
fldcw
pop
pop
adc
lock
jne
aad
dec
pop
mov
or
lock
fisttpl
ds
and
dec
imul
iret
sub
mov
mov
fcompl
jl
cmp
pop
addr16
xor
enter
int
xchg
push
ret
jae
bound
andb
or
pop
dec
cmc
sub
inc
stc
mov
sub
stos
mov
call
sub
and
jne
cmpsb
negl
inc
and
and
adc
jle
imul
lcall
or
adc
into
pop
fildll
ss
mov
ja
mov
jae
test
add
push
xchg
fidivrs
adc
push
lcall
push
das
ret
lret
sbb
mov
adc
xchg
in
test
jge
xchg
mov
cmc
das
movsl
dec
js
and
dec
mov
pop
int
inc
loope
ljmp
mov
loop
cwtl
clc
jne
xchg
and
sub
xorb
or
push
add
push
dec
jl
jbe
out
subb
outsl
in
aam
outsl
vpsubq
hlt
popl
jle,pn
pop
rcrl
sub
fnstcw
mov
mov
and
inc
aad
xor
into
or
lcall
leave
or
or
sbb
addl
sbb
xchg
testb
in
idivl
pusha
clc
jle
pushf
ds
pop
mov
lahf
sahf
pop
lahf
clc
cld
xchg
stc
scas
push
or
popf
pop
xchg
mov
cmp
lock
je
fwait
daa
add
xchg
mov
cmc
scas
dec
aad
test
dec
xor
cmp
ljmp
adcl
test
push
sbb
jecxz
xor
mov
in
sbb
mov
ss
std
mov
stos
gs
sbb
sub
cmp
push
pminub
mov
xchg
xchg
jbe
xchg
imul
or
and
jne
push
sub
insb
mov
adc
leave
jbe
out
push
xchg
mov
or
stc
and
pop
cmp
je
cmpsb
in
aaa
pop
subl
sbb
sub
lret
and
shl
mov
daa
adc
popf
push
dec
sbb
loopne
xorb
std
or
dec
xor
xor
sub
push
imul
int3
les
out
sub
pop
leave
cmpsl
call
xlat
xor
jp
mov
stos
jnp
xorb
cmp
mov
das
dec
or
sub
push
adc
adc
pop
inc
shrl
loopne
fstpt
leave
jne
lahf
rolb
add
test
pop
cmp
xchg
jg
es
hlt
xor
sbb
roll
inc
inc
xor
pop
push
jns
insl
lret
adc
cmc
jle
sub
sbb
pop
sub
mov
xor
adc
sbb
cmp
and
das
add
cmpsb
jp
nop
add
lods
incb
aam
sarb
jbe
insl
ret
push
pop
mov
pop
push
jmp
push
dec
pop
sbb
js
adc
and
iret
cmpsl
fnstsw
cmp
shll
dec
push
jo
cmc
mov
in
push
rol
cli
xor
sub
mov
push
leave
outsl
add
test
aam
mov
sbb
pop
out
out
mov
imull
lods
loopne
bound
mov
lods
daa
inc
add
insl
insl
movsl
or
insl
mov
out
xchg
xchg
mov
mov
jp
add
sarb
scas
cwtl
jp
sbb
jge
xor
out
out
push
loopne
mov
push
fstps
pusha
sbb
stos
test
cmp
lea
repnz
push
test
push
dec
rorl
lret
mov
aas
mov
push
push
dec
sbb
add
mov
fs
xor
xchg
cs
add
popa
fwait
adc
fmull
fistl
es
sbb
and
cli
lods
lcall
cs
icebp
addr16
imul
jecxz
mov
mov
fisttpll
sarl
fs
outsb
jmp
sub
xchg
mov
cld
lret
sti
mov
xlat
in
xchg
jno
and
lods
add
and
jae
nop
stc
arpl
push
cmp
mov
cltd
xor
ficoml
mov
jne
cwtl
orl
filds
xchg
movsl
lds
cmpsb
sbb
scas
lock
xchg
add
je
leave
jns
pop
cmp
add
scas
ror
push
pop
mov
cmp
push
rorl
add
and
add
loop
adc
iret
enter
pop
ret
mov
stos
adc
jmp
mov
mov
pop
cmpsl
adc
dec
adc
fcoms
push
and
xor
sbbl
imul
cmpsl
dec
mov
loopne
xchg
lcall
fistps
test
xlat
ficoms
ret
sub
fs
int3
imul
fdivs
xchg
jnp
dec
push
aad
xchg
shll
pop
xor
and
aam
add
push
jle
out
dec
xchg
stc
mov
into
inc
pop
mov
or
mov
inc
shlb
adc
jbe
loop
out
mov
mov
xor
iret
push
loop
cmp
mov
sbbl
addr16
mov
inc
aas
loope
or
add
sbb
fiadds
iret
inc
jl
jmp
mov
push
sub
push
cmpsl
or
xor
xchg
xchg
adc
cmpsl
add
mov
leave
out
adc
push
or
test
dec
mov
out
hlt
dec
sbb
pusha
and
sub
mov
push
ficoms
or
aaa
inc
sub
icebp
mov
fwait
aaa
pop
adc
jl
idivb
data16
dec
lcall
jp
stos
xchg
jbe
xorb
rorb
scas
gs
adc
push
mov
cmp
cmpsl
fcmovnu
cwtl
inc
lcall
mov
push
pop
aas
cmp
hlt
xor
sub
bnd
stc
xchg
mov
mov
in
jb
imul
call
adc
mov
jp
idiv
dec
add
sbb
xor
aam
aad
mov
out
stos
sub
je
sub
int
add
dec
xchg
pop
fwait
sti
in
es
mov
pop
push
or
xchg
jo
dec
ljmp
add
and
sub
pop
mov
outsb
or
mov
add
addr16
jp
rclb
jle
push
inc
adc
inc
stos
hlt
std
dec
cmp
mov
mov
scas
inc
dec
jbe
test
nop
push
arpl
dec
sub
icebp
mov
fs
ret
je
dec
pushl
insb
iret
xor
jp
add
xor
mov
inc
cmp
lods
mov
fbld
cltd
outsb
and
xor
hlt
cltd
jmp
push
add
push
shrb
icebp
gs
test
pop
adc
aas
xor
pop
and
inc
sub
movsb
pop
fucom
inc
adc
lods
lret
add
add
add
cmc
cld
outsb
inc
cwtl
lret
fisubrl
add
rcr
rcr
jbe
lahf
shrl
cmpsb
repnz
xchg
orl
leave
int3
cwtl
dec
add
icebp
outsl
jbe
loop
cmp
loopne
push
xlat
and
push
cmp
adc
cmp
push
push
xchg
rorl
fsts
out
inc
cmp
xor
sbb
nop
mov
and
cmp
aas
xchg
call
mov
sarb
inc
lret
pop
mov
adc
push
mov
pop
int
push
add
jp
mov
mov
push
sbb
faddl
and
sahf
ret
mov
mov
add
xchg
xchg
push
dec
add
jo
hlt
dec
jo
in
daa
cmc
movhps
cmp
lock
and
push
stc
or
push
inc
fsubl
xor
cmp
sahf
shrl
cmp
pop
std
fcmovu
fdivrs
dec
mov
stos
in
jecxz
push
mov
fistps
push
pop
sub
pop
mov
aam
sbb
shrl
cwtl
mul
or
xchg
icebp
xor
jg
aaa
push
outsb
inc
mov
sub
inc
push
fistpl
push
cld
movsl
mov
pop
mov
jg
insb
lret
cmp
cmp
arpl
push
shll
sub
mov
dec
outsl
lret
call
shlb
push
push
in
sbb
pop
mov
addr16
xchg
lea
mov
aaa
pop
adc
icebp
icebp
xchg
mov
mov
cli
bound
fsubr
hlt
mov
jae
jno
daa
into
cmp
mov
mov
and
jae
xor
outsb
fisubrs
or
dec
loopne
push
mov
jno
mov
sbb
inc
push
xor
mov
scas
leave
mov
mov
cmp
cmp
pop
lret
mov
xchg
aaa
das
das
cmp
loope
addb
adc
pusha
stc
inc
shr
xor
gs
imul
xchg
pop
lret
jmp
push
jne
fcoms
or
cmp
inc
push
rcr
rcr
cmp
or
push
loop
and
cmp
inc
xor
xchg
xchg
xchg
ljmp
dec
pop
pusha
sub
movsb
jl
popf
mov
mov
xchg
mov
pop
xor
jo
stc
jmp
shlb
icebp
stos
mov
sub
xchg
adc
mov
adc
mov
xchg
hlt
mov
test
pop
xor
mov
inc
int3
push
adcl
outsb
xchg
xchg
mov
mov
ss
stc
ror
sub
pop
das
push
add
dec
fucompp
pop
ret
sub
mov
pop
cmpsb
fldenv
inc
jo
popa
mov
dec
sub
jmp
aad
and
pop
iret
int3
ficomps
xor
add
sbb
jge
adc
shll
mov
mov
mov
pop
sbb
mov
mov
and
das
stos
jecxz
sub
out
mull
cmpsb
cmp
mov
mov
dec
push
outsb
fsts
aam
mov
popa
sub
mov
mov
in
test
cli
push
fistpl
paddd
js
stc
jnp
loopne
add
dec
sbb
mov
ret
cli
les
rorl
in
sbb
js
ljmp
mov
sub
cmpl
mov
cltd
add
jb
cs
sbb
xchg
pushf
psubusb
mov
and
sbb
lds
shrb
push
mov
xor
repz
cmpsl
sub
sbb
push
mov
add
push
ja
daa
inc
call
mov
aam
add
pop
add
inc
jno
push
adc
in
mov
push
aas
mov
mov
mov
stos
aad
call
fiaddl
lcall
out
xchg
test
xchg
test
xchg
mov
mov
fnstenv
add
and
dec
cmc
out
mov
stos
mov
arpl
mov
fiadds
sub
inc
sbb
push
mov
jecxz
stos
fdivr
shrl
fdivr
aad
aad
or
mov
inc
add
js
pop
sbb
jecxz
inc
mov
xchg
je
sub
sbbl
loope
stos
pop
cld
cmp
xchg
jns
sahf
or
test
fwait
ror
sub
out
das
popf
and
je
push
stos
icebp
jg
fstpl
jg
adcl
fidivs
sub
js
sarl
mov
or
mov
ja
outsl
rcrl
or
mov
ljmp
inc
xorl
iret
mov
jbe
pushf
inc
jmp
sbb
loope
sub
cmc
adc
push
fisubrs
jne
xor
jb
fdivs
loop
lock
repz
fidivrs
xchg
in
cmp
xor
jo
mov
sarl
inc
loop
mov
mov
insl
or
pop
mov
fstps
gs
sbb
xchg
cmpsl
loopne
xchg
leave
jnp
mov
mov
pop
pop
cmp
lods
iret
sahf
pop
pop
andb
cmp
cmc
sbb
fstps
fistpl
loope
xchg
jmp
pop
dec
cmc
nop
in
pop
mov
lds
jns
loopne
les
out
in
inc
call
or
sarl
lea
cmpsl
outsb
or
adc
jns
idiv
sub
mov
sahf
or
addr16
mov
xchg
cmp
pop
jle
call
dec
mov
pop
push
inc
in
sbb
xlat
emms
mov
imul
sbb
scas
xor
cs
shr
ret
cmp
aam
rcr
cmc
cmp
outsb
sub
mov
movsl
fldenv
je
out
test
lea
xor
mov
int
pop
rolb
fcoms
ljmp
xchg
bound
and
mov
cmpsb
jle
mov
push
cmp
je
pop
sbb
mov
pusha
xor
les
jns
repz
in
mov
mov
lds
addl
test
xor
cmc
dec
fwait
add
les
pop
lods
pop
or
and
mov
or
mov
jo
aaa
sbb
jge
lret
gs
fmuls
mov
push
inc
jle
jno
aad
pop
jbe
sub
xchg
and
ja
mov
es
call
mov
push
stc
and
push
dec
rcrb
inc
out
stos
mov
xchg
add
in
and
or
fistps
add
inc
sbb
sbb
mov
pop
rcrl
imul
xchg
lret
push
jle
outsb
daa
insb
cmp
jne
push
xor
jno
mov
mov
jmp
fadd
int
pop
cmp
ds
jb
cmp
jbe
fbstp
pop
sahf
mov
push
mov
sub
mov
test
div
inc
sub
pop
insl
into
cmpsb
mov
rcl
cmc
pop
jbe
mov
lret
cmp
cmpsl
mov
and
addb
push
sbbl
add
lock
shrb
pop
dec
gs
sub
push
push
popf
testb
add
sub
hlt
aas
mov
loopne
adc
jne
pop
cli
jae
xor
inc
jl
popa
add
fcmovbe
pop
gs
lods
fucom
adc
scas
mov
pop
lcall
dec
jae
mov
fiadds
jecxz
sbb
mov
cmp
stos
popa
xchg
sahf
movsb
out
int3
mov
push
lea
addr16
popf
mov
mov
add
add
pushf
dec
sub
or
and
movsl
stc
bound
fsubrs
out
mov
dec
aas
pusha
inc
daa
jge
ja,pt
jecxz
push
add
or
mov
push
sbb
xor
xorb
pop
pop
cli
pop
stos
cmp
jns
xchg
imul
mov
ficoms
ss
cmp
testb
stos
cmp
rcrb
mov
flds
ret
xchg
mov
sbb
pusha
in
xor
xor
dec
jbe
xchg
lock
out
pop
fdivs
add
xor
mov
das
cmp
mov
jae
xchg
sbbb
and
inc
scas
popf
fldenv
push
adc
iret
outsl
ds
leave
jle
lea
js
pop
cmp
repz
mov
mov
aas
jmp
test
fs
jnp
add
add
cmpsl
cmpsb
clc
push
lret
pop
pusha
inc
nop
jl
rcrb
aaa
jnp
shlb
scas
stos
cmp
jno
outsb
cmpsl
cmp
jae
sub
jge
imul
bound
ja
cmpb
movsl
hlt
jo
or
mov
mov
call
mov
cmp
hlt
pop
imul
fimuls
add
pop
xchg
dec
cli
jmp
test
leave
int
xchg
adc
pop
in
jg
xor
sti
xor
dec
adc
xchg
rorl
push
aaa
daa
fcompl
lock
aam
lret
ja
das
popf
sub
sar
mov
int3
xor
outsl
popa
jl
test
aaa
mov
leave
push
loopne
pop
fsubp
aas
jo
dec
xor
push
aam
cmp
push
inc
mov
arpl
outsl
imul
fwait
out
add
out
addr16
ss
lock
in
mulb
xor
std
je
jg
fld
enter
and
shll
jg
nop
shl
jo
ja
js
testl
lea
jle
shrl
loope
bound
imul
ds
and
xor
scas
mov
inc
xor
push
pop
push
bound
sti
fidivl
cmp
dec
lock
jl
or
pushf
test
jb
cwtl
hlt
test
push
in
in
subl
cmp
sarb
cmpsb
sub
jno
in
xchg
dec
jnp
sti
mov
ds
ret
sbb
cmc
lcall
or
cmp
adc
out
aam
lahf
scas
rorl
dec
xchg
imulb
lea
bound
movsl
into
xchg
imul
sarb
pop
cmp
or
xor
pop
and
sub
jle
inc
js
movsb
push
add
push
jle
push
push
icebp
jecxz
imul
cs
daa
scas
sbbb
mov
mov
cld
inc
pop
jae
mov
inc
iret
push
jp
jecxz
sub
sub
or
add
lock
lret
fisttpl
lcall
daa
push
int
hlt
jp
mov
mov
arpl
mov
sub
stos
adc
and
or
dec
jle
jae
pop
push
sbb
add
cmp
shlb
je
mov
outsb
or
hlt
leave
adcl
mov
lret
or
xor
mov
xchg
cmp
cld
push
daa
jg
or
cmp
aad
lock
push
mov
xchg
arpl
sarb
mov
inc
cmp
xchg
pop
xchg
xlat
inc
insl
jnp
sub
xchg
pop
ljmp
jbe
mulb
iret
clc
setbe
cmp
shl
je
lahf
or
mov
push
mov
jl
inc
inc
sbb
leave
stc
imul
and
pop
mov
inc
cmc
pop
dec
pop
imul
outsb
sbb
mov
xor
or
pop
scas
jnp
sub
push
or
push
imul
cli
cwtl
subb
adc
xor
dec
xchg
mov
jp
push
cmc
arpl
pop
mulb
pop
or
imul
out
or
inc
repz
and
lods
mov
xor
scas
mov
daa
jns
lcall
and
mov
cmpsb
push
jp,pn
add
ret
xor
push
enter
out
jg
pusha
xor
scas
fbld
xlat
imul
and
in
aaa
add
mov
adcl
jl
jecxz
fs
and
inc
pop
mov
andl
and
xchg
sbb
jne
xlat
mov
pop
cltd
in
sbb
stc
mov
addr16
pop
push
dec
and
xchg
mov
fnstsw
or
outsl
and
add
or
lcall
pop
adc
xor
gs
fldl
jecxz
add
es
leave
cmc
jns
dec
xchg
xchg
pop
stos
mov
pop
and
aas
andb
iret
push
cmp
lret
int
in
xchg
add
popa
hlt
iret
xor
cmp
fdivr
gs
ficoml
shlb
fdivrl
pop
xchg
ss
mov
cmc
xchg
mov
popf
fiadds
add
push
into
stc
icebp
jo
outsl
inc
sbb
push
test
arpl
xor
gs
push
jge
fwait
xlat
jb
mulb
cmc
mov
mov
daa
inc
mov
or
mov
push
movsl
or
adc
dec
inc
lods
dec
mov
pop
push
xchg
push
imul
xchg
dec
add
in
std
cmp
xor
je
shlb
ret
sub
pusha
mov
inc
adc
pop
js
ficomps
lret
lahf
push
outsb
out
ficomps
fdivrs
out
ljmp
pop
cmp
inc
inc
pop
adc
pop
inc
adc
int3
mov
cs
call
aad
pop
lods
imul
cltd
inc
jecxz
inc
les
xor
inc
rolb
mov
mov
test
fmul
fistps
rclb
sbbl
mov
sbb
pop
jl
ds
icebp
fistl
sub
pop
push
mov
cwtl
es
rcl
push
fwait
movq
mov
sbb
cmpsb
div
inc
cmp
sub
mov
jb
pop
mov
push
clc
fildl
jbe
and
aaa
test
out
or
mov
repz
push
add
fnstsw
inc
and
cmc
cwtl
mov
lcall
cli
bound
mov
jae
call
sub
or
pop
pushf
neg
jne
dec
aas
mov
adc
mov
pop
jbe
sar
aad
sti
fdiv
or
sub
mov
or
xchg
cs
aaa
int3
es
frstor
sbb
pop
rorl
stos
std
addr16
sbb
fwait
mov
sbb
nop
jae
enter
das
es
in
ret
or
add
sti
movsl
and
sub
andl
push
pop
movsl
outsl
xchg
push
sbb
shlb
cs
inc
fsubrs
das
cmpsl
std
movsl
popa
test
add
sub
xchg
mov
int3
test
ret
sbb
out
add
int
xchg
sbb
cmc
insb
popa
cmc
xchg
ljmp
adc
adc
out
xlat
fimuls
insl
jno
inc
iret
jp
loopne
dec
push
fsts
adc
jnp
mov
shll
sub
push
add
pop
xor
vmovhpd
xchg
shll
leave
ret
dec
adc
shrb
cwtl
mov
jno
push
das
loop
mov
rcr
dec
int3
xor
adc
rol
pop
or
cmp
sub
cli
cmc
jge
cmpsl
pop
adcl
sub
add
xchg
mov
bound
adc
lgs
dec
rol
pop
or
dec
adc
clc
sbb
adc
mov
dec
imul
in
and
andl
ret
jg
pop
xchg
mov
xor
pushf
outsb
dec
xchg
or
xchg
int3
insb
push
inc
inc
inc
out
xchg
pop
repz
out
push
cmpsb
cmp
mov
push
fidivrl
scas
jae
jmp
movsl
xor
repz
cli
fnsave
xor
mov
iret
ja
cs
jb
push
mov
shll
in
outsb
loopne
push
pop
push
xchg
out
or
xchg
inc
or
mov
jb
loop
movl
mov
daa
and
mov
pusha
in
mov
dec
ja
add
pop
add
or
inc
outsl
popa
pop
mov
jbe
sti
jno
mov
push
jo
mov
jno
mov
mov
decl
xor
aaa
pop
inc
xor
lods
inc
xlat
dec
mov
clc
push
adc
cmc
jp
pushf
out
cs
and
loopne
sub
stos
ds
push
aaa
sbb
fxch
fistps
js
mov
in
push
fidivrl
popa
pop
fucomi
int
sub
push
cmp
adc
jle
xor
test
fs
jns
xor
push
adc
stos
ret
shl
hlt
fildl
or
ret
pop
sub
sahf
mov
inc
cli
das
lret
xchg
pop
sbb
cmp
fsubr
icebp
add
pop
sub
cltd
test
icebp
adc
adc
popf
mov
pop
aam
cmpsl
nop
in
mov
mov
ficompl
sahf
mov
fdiv
xchg
iret
in
dec
and
push
mov
pop
cltd
rol
push
adc
ds
ficoml
lret
mov
sbb
push
push
jge
inc
out
add
out
mov
push
pop
movl
mov
cmp
orb
dec
mov
in
ror
lods
ds
int
nop
roll
shl
jae
das
push
cmpsl
fbld
pop
das
mov
stos
sub
decl
outsb
dec
cmp
test
out
cmp
sbb
aas
bound
add
jnp
mov
jge
out
inc
lea
call
push
xchg
push
repz
fldl
adc
in
lock
ret
data16
mov
mov
loope
sahf
add
addb
adc
insl
push
xor
ss
xlat
sub
shrb
daa
int3
or
iret
rorb
movsl
shl
push
gs
pop
xchg
and
test
jno
mov
jae
sbb
iret
xchg
mov
jnp
xorb
jl
cld
xchg
fwait
and
xchg
pop
sar
cmp
or
inc
sub
sub
xor
popa
dec
nop
mov
cli
xchg
push
subb
push
ss
out
cmp
inc
add
mov
pop
lods
adc
call
shlb
int
loopne
into
jecxz
in
arpl
mov
test
iret
lahf
fs
pop
scas
push
pop
cmc
pop
add
adc
bound
imul
dec
lahf
xor
movsl
lods
test
jb
or
mov
outsl
movsl
popw
jle
imull
jl,pt
leave
xor
fsubl
movsl
repnz
pop
gs
fsubrs
js
dec
jge
jmp
xor
aam
sbb
pop
lcall
dec
add
loop
rolb
mov
xchg
lea
add
ds
lea
lods
xor
jnp
aad
mov
in
adc
xor
icebp
cmovbe
or
cmpb
push
sahf
adc
dec
fwait
add
sbb
jae
lcall
out
lcall
mov
repz
cld
dec
jo
insb
mov
or
jb
mov
js
push
enter
enter
lods
mov
dec
adcl
std
in
sub
push
mov
leave
ficoml
adc
inc
icebp
mov
and
lret
xchg
pop
mov
push
cmp
dec
movsb
sbbl
lock
movsb
mov
push
leave
outsl
mov
icebp
mov
mov
fisttpl
loope
cli
pop
dec
addr16
sub
mov
xor
stc
insl
pop
lds
inc
sbb
rcll
push
push
or
push
inc
cltd
stos
pop
sub
xor
xor
dec
sub
pop
cmp
mov
stos
rol
outsb
out
xor
pop
inc
dec
mov
mov
lods
mov
xchg
xor
lcall
adc
jo
stos
dec
fisubs
push
add
cmc
roll
jecxz
mov
out
in
jno
out
ret
xchg
sbb
add
sbb
hlt
popf
popa
xchg
in
mov
mov
scas
dec
or
inc
cmc
mov
xchg
fnstsw
xchg
ja
das
xchg
cltd
iret
mov
fcmove
in
mov
add
cwtl
rclb
repz
movsb
cmp
xor
mov
into
es
pop
cld
jp
aad
xorb
dec
scas
repz
push
or
or
pushf
jb
sbbl
pushf
mov
andb
pusha
jecxz
fsubl
and
stos
orl
lret
jno
sbb
pop
mov
sub
jns
insl
mov
test
imul
test
out
push
out
shl
or
addr16
das
call
int
repnz
sub
sbb
jp
ss
mov
andb
jl
inc
mov
fwait
adc
push
hlt
add
xchg
loopne
adc
jmp
push
outsl
mov
cmpsl
mov
and
fwait
cwtl
xor
add
cmp
and
pusha
mov
pop
push
mov
push
xchg
add
mov
and
dec
aam
stos
xchg
xlat
movsb
mov
ss
mov
mov
ss
test
and
gs
enter
repnz
pop
jmp
cmpsl
push
mov
push
inc
push
cmp
loope
imul
push
aas
mov
pop
jl
mov
push
loope
adc
pop
push
outsb
mov
push
adc
add
es
js
and
hlt
inc
or
dec
push
mov
sub
mov
fidivrs
mov
adc
insb
imul
sarl
aad
jp
lret
icebp
dec
pop
mov
xor
mov
aaa
xchg
add
sbb
mov
cmpl
je
data16
ficoms
loopne
mov
inc
fidivl
dec
scas
adc
mov
add
mov
add
adc
sub
sbb
cwtl
rcrb
test
jno
in
cltd
or
nop
scas
dec
adc
jp
rorl
xchg
xor
repnz
das
dec
push
test
or
and
or
cltd
jp
sbb
adc
pushf
fwait
add
aam
mov
stc
pop
sub
pop
inc
pop
push
sbb
pop
pop
jne
aad
loopne
shlb
push
mov
xchg
insb
aad
cmc
inc
icebp
ds
dec
int
dec
mov
and
add
inc
mov
std
cmp
loopne
xchg
push
sbb
std
stos
sub
aam
adc
inc
ret
pop
jmp
in
loopne
aas
sub
push
loopne
and
add
add
jmp
jle
js
aam
aas
leave
hlt
insl
jle
add
pop
add
cwtl
mov
fisubl
cmpsb
mov
push
outsl
inc
scas
mov
push
add
inc
popa
or
call
ret
mov
dec
xor
ss
push
daa
enter
in
mov
hlt
inc
adc
lods
mov
into
in
pop
pop
repnz
ja
popf
or
adc
and
or
sub
fsts
out
in
shll
mov
data16
lds
je
cltd
movsb
jg
dec
dec
or
or
sbb
fcmovnu
in
lea
mov
fstl
mov
jo
adc
push
lds
mov
ljmp
ss
mov
ss
inc
aam
push
shrb
aaa
ljmp
ret
int
rol
test
in
cli
mov
cwtl
mov
mov
xchg
lods
mov
out
cs
loope
mov
xchg
repnz
aam
pop
icebp
rorb
jns
lods
movsl
imul
pop
jecxz
ret
cmpsb
sub
je
adc
lcall
jle
jmp
loop
mov
mov
add
lahf
je
adc
xchg
cld
roll
pusha
add
aam
cwtl
inc
out
mov
xor
lret
lods
loope
shl
ret
xor
mov
or
jns
fimuls
lcall
int
adc
out
or
push
pushf
mov
repnz
mov
fmull
push
or
and
arpl
sbb
imul
xchg
cmp
iret
mov
outsl
push
add
sub
dec
xor
and
ja
mov
enter
pop
aam
shrb
ret
je
cmp
das
loope
ror
jmp
idivl
fwait
adc
or
mov
push
xor
rclb
sub
adc
fprem
jmp
cmp
ret
mov
mov
adcl
jle
leave
mov
lahf
fwait
mov
cmp
mov
ja
jge
pop
sarl
sbb
jbe
andl
popa
sbb
nop
adc
iret
iret
dec
adc
sbb
and
stos
fstps
xchg
leave
push
in
cwtl
xrelease
cmp
shlb
fmull
adc
jmp
mov
into
rorl
movsl
jb
mov
movsl
inc
iret
jo
or
mov
inc
call
fwait
push
mov
add
jle
fcmovne
or
fdivrl
jge
daa
out
xchg
push
mov
cmp
ds
jbe
out
hlt
mov
mov
bound
adc
mov
movsl
adc
enter
push
lret
xchg
and
aad
add
shrb
cmp
lds
push
mov
and
stc
cld
stc
and
xor
pusha
mov
lods
jae
in
lahf
lret
dec
push
sahf
xor
or
jg
lods
push
xchg
test
jno
pusha
call
xchg
and
loop
fisubrs
add
mov
jle
lock
jno
adc
loop
mov
mov
xchg
inc
nop
jb
lods
adc
pop
push
cld
fs
mov
les
pop
push
ficoms
xchg
test
in
pop
loope
pushf
add
pusha
xchg
data16
inc
jnp
outsl
pop
dec
fcoms
add
inc
push
xor
jp
xor
dec
pop
mov
call
mov
xor
es
push
or
cmc
shlb
pushf
mov
jge
lock
aad
jecxz
xchg
sbb
xchg
push
or
xor
mov
pop
sub
cs
jl
in
dec
repz
das
jl
lret
icebp
dec
dec
in
cmp
pusha
iret
movsb
jne
push
ja
inc
mov
fwait
lods
stc
adc
sbb
ss
jne
loope
sub
or
mov
sbbb
pop
out
or
mov
mov
dec
push
enter
filds
out
clc
inc
mov
mov
xor
push
add
inc
pop
dec
ss
and
jmp
rolw
adc
sbb
rol
xchg
mov
testl
sar
js
fistl
sub
xchg
or
sbb
clc
sub
jecxz
loop
lret
add
and
fnstsw
xchg
arpl
inc
jl
popf
push
pop
push
pop
push
mov
test
or
dec
inc
sub
divl
dec
push
lret
dec
pop
jno
je
mov
mov
fimuls
and
or
imull
das
mov
mov
adc
fdivl
aad
dec
cmpsl
cmp
ret
lea
push
xchg
pxor
xchg
xor
arpl
scas
push
sub
fsubs
sub
pushf
arpl
pop
shlb
test
xchg
jp
push
mov
dec
mov
mov
or
push
rolb
dec
add
mov
adc
gs
push
cmp
jbe
jl
stos
sbb
add
outsl
test
sbb
addl
cmpl
cmp
rorb
sub
scas
dec
adc
xor
outsb
xor
stc
or
clc
enter
mov
xchg
dec
inc
aaa
mov
mov
aam
mov
inc
mov
dec
lcall
dec
pushf
jge
push
mov
push
sahf
xchg
xor
or
pop
xchg
jne
add
push
repnz
scas
pop
loope
jle
adcl
xchg
xchg
xor
divb
mov
outsl
sti
in
outsl
fnstenv
movsl
cmp
or
push
repnz
stc
lods
push
arpl
pushf
addr16
sbb
es
push
sbb
mov
add
fildll
xchg
dec
jbe
mov
fs
test
cmp
roll
jnp
push
xchg
or
fwait
push
mov
pop
in
movsl
mov
mov
sbb
std
daa
jg
sbb
and
mov
adc
cmp
insb
popa
pop
aad
jp
ljmp
aad
test
nop
push
mov
inc
lret
push
mov
movsb
push
sub
pusha
cld
adc
aam
push
lea
push
sub
mov
inc
mov
mov
push
dec
xor
cmp
push
pop
imull
xchg
into
xor
jmp
inc
fldenv
ljmp
adc
les
fsin
jnp
and
fs
test
enter
xchg
dec
in
push
out
dec
cmc
xlat
push
fstpt
mov
inc
repz
outsl
sldt
add
push
lea
into
out
popf
adc
ret
rcll
add
inc
scas
mov
lea
dec
sub
fwait
ret
push
or
push
out
pop
adc
dec
adc
mov
sub
jmp
mov
mov
pop
fcoms
data16
mov
mov
cli
scas
pop
mov
aaa
mov
mov
mov
stos
call
pop
iret
pop
neg
mov
dec
rcrl
mov
xor
mov
add
or
adc
pop
stos
jle
jnp
lret
rclb
mov
mov
mov
mov
dec
es
or
cwtl
popf
test
arpl
aam
pop
dec
sub
jnp
xchg
mov
lcall
adcb
cmp
or
or
push
jb
andl
out
fisttpl
pop
pop
outsl
jmp
adc
orl
shrb
dec
data16
ljmp
pushf
mov
fs
ljmp
xchg
sarb
insl
inc
xor
sahf
je
jp
mov
fwait
pop
sbb
out
lock
pop
icebp
or
adc
pop
xor
xchg
pop
jp
sub
jnp
out
in
popf
adc
daa
add
and
jl
popf
fmuls
push
or
bound
and
jmp
scas
movsl
add
ja
cmpl
clc
lods
sub
or
pusha
mov
xor
cmc
jmp
lcall
mov
shr
mov
das
subb
jns
cmp
inc
call
mov
lods
nop
mov
xchg
pushf
adc
out
cmp
nop
sbb
jo
mov
cmp
int
inc
cmp
mov
fdivrs
mov
jg,pn
js
cli
xor
adc
add
jne
ficomps
call
mov
mov
add
mov
mov
int3
and
push
jnp
or
ljmp
shrl
cmpb
push
pop
xchg
mov
dec
rolb
jg
mov
repz
lahf
cwtl
out
or
data16
pop
int3
adc
mov
xchg
cld
fsubrs
lock
subl
inc
out
out
mov
leave
rcrl
insl
sti
mov
inc
sbb
sbb
sarl
push
loopne
jno
xor
imulb
add
xor
fwait
or
or
inc
test
sub
movsl
lcall
in
dec
testl
jno
inc
test
movsb
cmpsl
add
jae
out
xor
sti
daa
sar
jg
data16
icebp
sbb
inc
arpl
fistl
jo
push
fstps
jnp
push
sub
inc
push
add
iret
xor
adc
jns
jo
inc
push
xor
sbb
ficompl
push
xor
into
adc
mov
mov
incb
sarb
cltd
push
inc
cmc
adc
and
pop
mov
movsl
roll
pop
in
inc
decb
cmp
or
push
sbb
ljmp
stos
lds
adc
sub
jmp
inc
xor
fnstsw
jbe
lods
dec
pop
subl
dec
sbb
jg
dec
pop
imul
mov
adc
jle
addr16
inc
or
into
mov
and
xor
shl
xor
ds
and
adc
mov
popf
dec
mov
xor
dec
xor
mov
jmp
ss
xchg
or
out
dec
aad
repz
mov
push
jge
xchg
js
lods
test
push
push
in
lea
sar
jle
adc
add
sbb
mov
sub
sbb
out
mov
jp
enter
sti
cli
mov
dec
shlb
jo
sbb
test
push
push
mov
sti
xchg
or
dec
in
mov
cmpsb
mov
sbb
pop
or
ret
aad
lahf
lret
mov
xchg
ret
jb
push
aaa
lcall
inc
cmpsl
push
fwait
mov
mov
and
leave
sbb
pop
mov
jmp
inc
bound
dec
pop
imul
imul
stos
inc
inc
mov
push
mov
sub
rorb
pop
scas
loopne
aas
popf
test
stc
mov
xchg
jge
in
gs
ret
add
fucom
lret
daa
int3
shlb
xor
pop
xchg
stos
inc
fcomi
mov
add
pop
clc
mov
adc
mov
mov
pop
push
ret
pop
pop
dec
fiadds
mov
rcll
xor
adc
sbb
ja
mov
cmp
ret
mov
mov
push
repz
lods
sbb
push
scas
add
stos
sbb
out
fs
inc
mull
cmpsl
cmp
test
mov
xor
lret
arpl
dec
lahf
ret
pop
into
dec
sti
mov
in
xlat
xchg
pusha
xchg
or
iret
cltd
popa
fcomp
mov
add
decb
lea
jmp
jnp
sub
mov
mov
mov
add
push
in
gs
push
push
adc
pop
xchg
pop
cs
mov
aad
cmp
out
sbb
sub
mov
sbb
add
dec
mov
stc
stos
push
or
sahf
inc
jmp
pop
or
xor
jns
mov
cmp
adc
xchg
lods
push
mov
add
jb
and
lea
int
test
inc
fs
and
fimuls
xchg
shrl
fdivs
popf
inc
addl
mov
lahf
daa
dec
xchg
test
jmp
xchg
or
or
inc
mov
shr
add
hlt
sub
rol
cmp
stc
sub
mov
ja
fcomps
test
lret
sub
ds
aam
or
dec
sbb
jmp
stc
sahf
mov
or
inc
and
sub
push
fcmovne
pop
cmc
sbb
ljmp
lea
sub
fcom
test
fwait
lahf
rcll
inc
jo
sarl
ret
push
ret
das
cmp
mov
lock
xlat
adc
out
mov
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
mov
xlat
lea
sub
pushf
loop
or
add
pop
add
add
sbb
mov
test
pushf
popf
xor
sahf
sbb
inc
call
adc
add
jl
mov
inc
daa
out
mov
add
test
das
jns
dec
mov
sarb
clc
lods
movsb
add
push
push
in
dec
cs
xchg
aas
xchg
fisttpl
cmc
call
popf
js
mov
mov
les
cmc
outsl
adc
xchg
mull
xchg
push
in
lods
rcrl
adc
mov
mov
sub
xchg
cmp
fdivr
js
jl
mov
pop
out
aaa
push
xchg
mov
leave
addb
add
mov
lock
fcmovnb
mov
aaa
pop
loope
dec
popa
or
mov
stos
adc
xchg
repnz
inc
mov
cs
ljmp
inc
ret
lods
inc
or
sub
dec
jecxz
in
mov
jmp
sahf
pop
mov
cli
adc
adc
out
aaa
sub
aad
daa
leave
imul
jle
daa
adc
adc
push
jle
push
inc
in
jg
pushf
mov
cmc
xor
and
inc
mov
sub
or
in
pop
cmp
or
out
xchg
bound
add
xchg
mov
int3
inc
push
in
pop
movsl
or
mov
cltd
jb
addl
pop
sbb
mov
imul
pushf
pop
sbb
adc
push
mov
jb
cmp
or
pop
pop
lea
cmp
aaa
inc
mov
xchg
cmp
movsl
push
out
stos
inc
hlt
sub
mov
loope
aaa
enter
jmp
push
mov
movsl
aam
sbb
pushf
fistps
and
mov
sbb
xchg
xlat
cmp
jbe
shll
pop
aam
ja
or
in
or
icebp
xor
lahf
pop
inc
out
lcall
mov
das
fdivs
dec
mov
ss
popf
call
daa
and
loopne
push
das
ret
aam
xor
mov
icebp
mov
insb
scas
push
sub
imull
jo
adc
fisubl
divl
shlb
dec
pop
aas
pop
in
lret
ja
jne
sbb
adc
out
xor
imul
or
hlt
lock
lret
add
jae
adc
outsl
add
mov
neg
add
push
frstor
push
fildll
cmove
push
aam
sub
adc
sbb
xchg
orb
sbb
pop
mov
sbb
push
dec
push
push
jbe
negl
push
ja
jge
adc
and
adc
mov
pop
push
dec
mov
into
pop
mov
cmp
mov
idiv
pop
add
or
xchg
jns
ds
push
adc
push
dec
pop
pop
cmp
pop
or
jae
adc
mov
or
dec
jmp
imul
std
call
adc
dec
jbe
mov
mov
push
pop
inc
test
push
sbbb
sbb
lock
add
pop
inc
outsl
inc
dec
cmp
stos
sub
sub
add
cli
mov
loopne
lret
inc
adc
fisttpl
pop
mov
addr16
cmp
enter
aad
sub
iret
test
and
push
ja
or
ds
pop
shl
jnp
ja
mov
dec
or
dec
or
fisttpl
fimull
loope
push
xor
fldcw
mov
pop
fs
aas
ds
into
sub
sbb
add
pop
mov
icebp
test
and
xchg
hlt
hlt
rol
out
xchg
xchg
or
add
adc
lea
xchg
pop
arpl
popl
pop
aaa
stos
popa
mov
orl
inc
out
and
sub
icebp
jno
jae
adc
inc
and
lods
aaa
add
xor
push
mov
je
sbb
rorl
add
inc
out
rcrb
pand
and
mov
rorl
sub
push
mov
addr16
mov
scas
jmp
clc
popf
inc
mov
sahf
sub
mov
fimull
mov
fdivp
mov
jg
cmp
cli
in
push
movb
cmpsl
inc
cmpb
outsl
repz
dec
and
inc
aas
mov
sarl
insb
fisubrs
idivb
mov
sbb
icebp
xchg
sbb
loopne
mov
or
test
scas
push
adc
or
or
neg
push
mov
out
pop
std
push
jb
ret
mov
leave
add
in
and
lret
add
lcall
movsl
inc
jbe
dec
xchg
test
test
mov
popa
imul
adcl
or
mov
push
jb
pop
mov
xchg
test
lcall
jge
mov
push
pop
xchg
pusha
mov
jle
cmpsb
cmp
inc
pop
fidivl
dec
xchg
pusha
and
sbb
clc
ret
das
mov
dec
pop
ret
insl
and
aad
cmc
mov
mov
xchg
mov
xchg
stos
push
jns
jle
mov
call
inc
mov
call
lea
sbb
push
jns
loope
mov
aam
xchg
and
fiaddl
inc
ret
in
pushf
and
inc
jl
shl
push
cmp
pusha
mov
mov
aaa
mov
adc
add
cwtl
mov
sub
out
int3
inc
dec
mov
xor
pop
mov
es
std
pop
push
xchg
or
pop
subb
xchg
add
jae
xor
and
hlt
mov
pop
test
cmp
dec
aad
jp
or
fadds
xchg
inc
mov
jo
jo
xor
loop
mov
daa
stos
into
test
movsl
inc
outsb
gs
ret
loop
mov
xchg
pop
ret
xorl
mov
push
push
aaa
bound
leave
cltd
jge
pop
in
into
inc
push
add
mov
jno
jg
out
jmp
or
pop
icebp
shl
mov
or
and
mov
cli
sti
test
mov
sbb
fstl
daa
jns
test
shll
mov
nop
stc
mov
lret
inc
mov
dec
sub
jne
nop
jp
data16
push
add
adc
jg
stos
mov
mov
outsl
adc
add
pop
add
shl
or
and
inc
jnp
adc
add
pop
lock
cmp
lret
push
sub
mov
data16
scas
rol
sahf
popa
in
push
mov
inc
pusha
dec
pop
pop
cmp
mov
pop
or
xlat
mov
pop
cs
orb
in
sub
cmpsl
pop
pop
push
cwtl
jl
aad
sub
push
jno
adc
pop
sarl
gs
sbb
outsb
cli
and
or
mov
inc
sub
decl
push
outsl
scas
shr
pop
inc
xchg
fstpl
cmp
and
adc
shrb
cmp
xor
pop
popf
addr16
arpl
cld
sbb
dec
in
fs
mov
cli
int3
stc
in
mov
jmp
mov
inc
pop
js
xor
shlb
shl
jmp
repz
dec
xlat
shlb
aam
daa
push
add
sbb
test
dec
aaa
jo
xchg
jnp
push
lock
pop
js
dec
inc
adc
fs
mov
and
leave
fcoms
shll
pop
jecxz
sbb
ss
xlat
iret
lock
aaa
call
xchg
sbb
add
push
cmpsb
lods
jbe
icebp
stos
scas
cli
pop
cwtl
mov
je
faddl
movsb
popa
xchg
adc
push
dec
pop
mov
out
xchg
out
mov
jg
sub
and
cmp
jp
repnz
fdivrp
or
sub
mov
hlt
sbb
cs
cmp
idivl
and
aam
test
pop
fwait
int3
imul
mov
sub
xor
test
nop
and
mov
lahf
dec
mov
into
jbe
sti
aam
ret
rep
xor
enter
ljmp
ljmp
adc
outsl
lahf
and
lcall
sbb
push
cwtl
inc
and
lods
pop
or
push
mov
cmp
test
bound
lock
push
xchg
add
pop
sarb
sbb
fildl
fs
mov
icebp
sbb
and
mov
pushf
sbb
mov
push
aad
lods
inc
mov
push
lea
add
adc
fcomip
fs
or
imul
cmp
add
inc
add
cld
stos
lods
xchg
pop
pop
mov
sti
xor
mov
sarl
xor
sar
jge
sbb
mov
sub
dec
sahf
pop
xlat
sbb
push
in
and
outsb
arpl
into
add
push
mov
xchg
xchg
mov
mov
notl
arpl
outsb
loop
cwtl
adc
jns
cmpsb
inc
adc
lret
jecxz
mov
icebp
dec
sbb
mov
ret
push
push
nop
fdivrs
cli
mov
aas
xor
sbb
enter
and
lds
fcomps
nop
push
fistpll
movsl
loope
fs
jnp
inc
psrad
jo
pop
scas
lock
jge
ficoms
pop
std
lahf
les
bound
add
and
aad
les
std
jbe
jg
cmp
cmp
inc
or
xchg
outsl
sub
pop
push
clc
mov
fdivs
les
add
pop
pushf
shlb
mov
sbb
push
icebp
leave
scas
pop
repnz
jmp
fs
or
dec
jp
les
fsubs
mov
imull
mov
arpl
lret
add
sar
pushf
popf
mov
aad
aaa
mov
stos
fisubrs
jne
ror
dec
cld
jp
fidivs
cmp
jne
mov
xor
push
lock
filds
aas
aas
fmull
lret
jg
push
inc
jg
dec
pop
mov
xor
xor
repnz
add
or
xor
stc
sub
dec
int
jmp
out
xor
out
cmc
je
cltd
mov
pop
out
sbb
addb
aam
mov
jnp
cld
push
xor
into
popf
cltd
out
mov
add
mov
inc
out
jmp
pop
sti
je
mov
scas
xor
dec
push
cmp
push
popl
cmp
ds
in
mov
pop
and
popl
jne
out
and
rclb
ud2
adc
stos
loope
mov
mov
int
fmul
cmp
dec
xchg
mov
pop
adc
in
int
shlb
push
inc
ret
adc
add
or
imul
idivb
shrb
push
xor
loopne
aad
loop
or
ret
shll
cmp
in
int
lret
sub
xacquire
daa
scas
mov
enter
pop
push
inc
arpl
les
js
insl
sbb
addr16
mov
in
xchg
xchg
gs
repz
sub
and
and
xchg
sub
scas
lahf
inc
sbb
je
sbb
sub
mov
pop
sbb
mov
cmpsl
mov
pop
int3
fidivrs
hlt
shl
and
movsl
aam
jb
stos
or
xor
outsl
add
sub
and
inc
sbb
mov
mov
xor
jbe
pop
into
lret
adc
xchg
icebp
mov
or
rorl
ds
inc
mov
or
pop
cld
adc
xchg
xchg
mov
xchg
cmc
mov
movsb
cmp
xlat
and
cmpl
pop
sub
xchg
sub
push
push
sahf
cmpsb
popa
out
ss
sbb
xor
sahf
aas
push
add
out
pop
lea
cmpsb
pop
movsl
xlat
aaa
mov
ret
cmc
out
aam
rorl
inc
roll
sub
mov
jge
fidivs
imul
or
data16
cltd
fisttpl
dec
pop
xlat
pop
cmp
adc
repz
daa
cmp
cmpsb
pop
fadds
sti
push
push
push
mov
dec
scas
xchg
arpl
fdivrl
push
aas
add
xor
mov
mov
lcall
dec
pop
ret
dec
mov
shll
adc
outsb
test
mov
ljmp
test
aas
in
cmpl
cwtl
add
pop
pop
mov
sti
mov
mov
clc
mov
test
outsl
cmp
push
cmc
ss
add
mov
out
pushf
rol
lcall
mov
out
fsubrl
fistl
inc
mov
xchg
pop
mov
xchg
xor
inc
ficomps
xor
jmp
fwait
dec
sub
icebp
repnz
push
and
popf
add
repz
nop
das
cmp
test
das
icebp
aam
incl
sti
add
mov
cmp
into
jl
aam
add
sbb
out
cmp
repnz
mov
imul
inc
fisubrl
sub
enter
cmp
je
in
jns
adc
inc
cmp
insl
push
sub
jnp
ss
xor
ljmp
push
scas
cs
in
lahf
addl
cmp
mov
sbb
mov
xor
aaa
int3
sub
dec
xor
dec
imul
lret
mov
movl
push
gs
adc
arpl
pop
stc
push
movsb
inc
outsl
inc
insl
notl
es
push
fcmovnb
andb
out
aas
fstpl
xor
popf
into
jb
lea
xchg
dec
cmp
aad
mov
mov
add
jmp
xchg
fiaddl
stc
add
idivb
jns
push
fidivl
rol
hlt
push
mov
mov
aaa
or
mov
sbb
faddl
cmp
sub
push
nop
test
fxam
add
xchg
mov
inc
in
pop
mov
push
pop
and
mov
insl
jecxz
pop
sbb
cwtl
nop
mov
fwait
cmp
push
cs
mov
mov
xchg
dec
popf
sbb
jae
pop
fstpt
inc
lcall
stc
pop
push
into
repnz
in
imul
hlt
mov
inc
xor
mov
cmp
or
cmp
jl
push
dec
jle
outsb
and
outsl
pushf
xor
rcrb
hlt
jge
into
je
xor
add
sbbl
mov
divps
mov
pop
inc
sub
hlt
ficoml
scas
je
je
or
xlat
mov
lock
leave
and
mov
mov
pop
iret
adc
jl
aad
testl
sub
subb
xchg
dec
fwait
pop
lret
jmp
and
jecxz,pt
xorb
iret
mov
pop
xor
loope
fdivl
gs
xor
cmpsl
mov
mov
mov
jbe
mov
leave
imul
jmp
mov
idiv
test
dec
dec
and
sub
loop
outsb
insb
lea
xchg
lods
andb
test
call
fmul
mov
and
mov
and
ja
or
test
mov
inc
fwait
mov
or
cwtl
adc
inc
adc
push
lds
inc
movsl
and
orb
jo
and
orb
out
sbb
pop
xlat
sbb
mov
call
sub
push
test
jno
xor
inc
bound
push
lret
pusha
daa
adc
je
rorl
xchg
mov
enter
aam
movsl
loop
and
pushf
xchg
xor
lret
test
aas
jne
pop
mov
adc
xchg
ds
fs
mov
hlt
aaa
sbb
nop
jbe
xlat
sub
cmc
rorl
les
cmp
xchg
test
push
add
stos
movsl
jmp
shlb
fstp
test
xchg
dec
fildl
into
and
or
shl
in
imul
and
addr16
icebp
mov
into
pop
mov
jp
aam
mov
test
dec
dec
adc
jl
mov
xchg
xchg
insb
cmp
xchg
xlat
mov
or
inc
xchg
xorb
mov
lds
loopne,pn
dec
xchg
stc
sbb
test
out
xlat
push
jmp
scas
insb
lret
cmp
filds
push
orb
jmp
sub
sub
mov
ds
push
push
jae
dec
pusha
insl
xorl
jg
mov
rcl
xchg
lds
xor
dec
stos
lcall
xchg
ja
jg
mov
in
and
mov
push
lock
loopne
jb
adcl
xchg
dec
xchg
pusha
nopl
daa
fcomps
testb
fs
cmp
clc
sbbb
xlat
cli
leave
data16
pop
push
mov
cmpsl
sub
jbe
mov
dec
sbb
mov
inc
inc
cmpsl
cmp
pop
leave
mov
inc
repz
insb
lret
lret
jle
pop
cmpl
ds
test
repz
icebp
push
loopne
rol
in
mov
loopne
dec
fcmovbe
pushf
inc
inc
out
popf
fcmovne
xor
jo
or
fbld
ja
fldcw
xor
mov
popa
in
cli
cltd
movsl
fsubrp
inc
and
icebp
out
xchg
lahf
mov
aad
mov
out
mov
fbld
pop
xchg
push
pushf
popa
xchg
push
or
dec
test
outsl
mov
int3
notl
pop
push
fwait
sub
loopne
movsl
lcall
into
pop
pop
jo
out
mov
lcall
shrb
pop
cmp
aad
pop
js
xchg
sbb
test
or
and
add
jns
lea
push
cmc
faddp
inc
cli
fstpl
inc
cwtl
ljmp
dec
and
mov
push
in
pop
jnp
xor
out
pop
call
cli
push
stos
xchg
jecxz
mov
cmpsl
jnp
std
lock
pop
popf
ss
xchg
xchg
enter
data16
orl
je
jle
mov
xorb
push
jno
adc
rolb
push
xchg
ja
xchg
loop
aad
jbe
out
adc
xor
adc
ret
iret
mov
aas
xor
add
pop
arpl
in
aaa
mov
ds
push
sbb
xchg
jno
jmp
cs
aam
rol
sub
fwait
push
xor
fwait
pushf
jle
jmp
jae
shr
mov
and
push
sbb
mov
clc
sbb
icebp
popf
aaa
scas
sbb
sbb
mov
sbb
test
stos
xor
loopne
mov
push
enter
in
fxch
mov
mov
leave
scas
leave
xor
shl
test
sbb
push
fcoml
bound
rol
push
ret
lds
adc
adc
add
xchg
sub
xor
cs
test
mov
lret
or
in
repnz
mov
repz
inc
mov
push
les
js
and
pop
mov
aad
pop
std
adc
addb
dec
xor
sti
mov
adc
inc
inc
mov
mov
jl
jmp
arpl
add
xchg
pusha
add
aad
pusha
cld
jne
mov
pop
or
and
add
pop
add
adc
push
outsb
loopne
cmp
mov
pop
adcb
outsl
daa
mov
fisubl
and
aam
cmp
wbinvd
cmpsb
mov
mov
jp
ret
inc
loop
fisttpl
jae
sbb
dec
jmp
xchg
jge
xor
cmp
mov
push
cmp
push
out
aad
add
add
or
ss
mov
in
and
outsl
pop
stos
push
sbbl
xchg
cld
mov
dec
ljmp
pop
shl
cwtl
jmp
mov
aad
and
pop
xchg
jbe
sbb
mov
dec
psubsw
pop
jmp
dec
inc
mov
lret
shlb
popf
jnp
push
xor
inc
jbe
cmc
adc
sub
sub
mov
lret
inc
out
pop
sti
pop
fcoms
sbbb
xchg
push
sbb
add
lods
aaa
testl
shr
sub
sub
or
dec
leave
mov
jns
movsb
std
mov
jbe
pop
orb
loopne
mov
loope
xchg
pop
pop
mov
test
sbb
push
ja
mov
and
repnz
push
and
jns
insb
jge
repnz
jge
ret
lcall
addr16
dec
adc
xchg
jmp
cmp
movsb
lock
sub
push
mov
loop
ret
add
sbb
rclb
dec
out
int
pop
mov
push
ret
mov
pop
arpl
mov
fcoms
out
adc
push
pop
pop
sbb
ds
jae
ss
daa
inc
addr16
popl
fcomi
and
xor
js
and
push
movsl
xchg
jl
lods
movsb
sub
sahf
rcl
dec
cmp
pop
jge
inc
dec
in
shrb
inc
cmpsb
sub
add
jae
mov
mov
leave
xor
or
ret
lcall
mov
pushf
sbb
push
std
jl
and
ret
inc
movsl
inc
sti
and
mov
test
push
and
jge
scas
mov
cmpsl
fstpt
js
scas
int3
jae
jmp
loope
mov
push
lock
sbb
cmpb
inc
subb
sbb
push
fcomps
dec
inc
push
inc
std
lcall
jb
jg
in
kmovw
or
xchg
xor
pop
leave
cwtl
into
addr16
adc
es
adc
dec
mov
aad
out
popf
mov
mov
adc
ret
xlat
mov
xchg
jo
loopne
fidivrl
pop
dec
jbe
pop
mov
mov
push
popa
aam
sti
std
scas
cmp
cs
cmc
ret
dec
jnp
jns
adc
loope
pop
bound
sti
mov
pop
adc
stos
or
jle
mov
repz
jbe
sti
popa
jg
les
jno
mov
push
in
dec
stc
enter
mov
push
test
mov
or
add
hlt
mov
in
push
mov
lock
adc
cltd
jno
aam
and
test
mov
mov
fdivrs
and
pop
push
movsl
pusha
inc
mov
add
mov
push
adc
scas
insb
cld
sahf
in
jae
adc
xchg
lahf
jo
push
test
jp
inc
jecxz
xchg
fcomps
fdivrl
es
mov
lea
cmp
add
xor
xor
fcompl
repnz
ja
divb
or
dec
or
loope
push
mov
cwtl
fadd
jl
repz
idivb
loope
cmp
mov
mov
outsb
sti
pop
faddl
ret
in
dec
dec
ds
xchg
cld
mov
xor
test
or
mov
sbb
or
cmp
addr16
jge
cmp
push
dec
out
dec
jmp
jbe
jmp
jecxz
cwtl
arpl
gs
jmp
scas
or
dec
pusha
rcrb
add
mov
das
pop
xchg
movsb
sti
mov
jecxz
xchg
cmp
shrb
call
ja
cmpsl
add
jnp
mov
mov
out
cli
inc
lcall
int3
xchg
outsb
xchg
xchg
mov
push
adc
jle
jl
shrb
test
mov
shrb
adc
push
xchg
lods
push
mov
les
push
mov
jge
jbe
mov
dec
insl
dec
sub
push
adc
mull
mov
mov
add
cld
ret
mov
jmp
cmc
jb
push
mov
push
bswap
pop
sub
jb
pop
pop
cmp
shrl
xor
test
lret
aas
and
push
sbb
jl
in
jbe
cmpsb
mov
das
push
int
sub
cmp
arpl
fldcw
xchg
dec
fsubrl
and
mov
aam
ja
sub
mov
sti
and
sbb
jg
mov
push
xchg
aad
adc
jo
jno
inc
add
and
imul
xchg
cmp
mov
icebp
imul
xchg
add
out
cmp
rcrl
arpl
bound
arpl
sub
and
cmp
int3
loope
fldt
push
mov
clc
cs
lcall
inc
xlat
jl
ja
xor
scas
mov
lods
hlt
out
add
or
test
js
add
jbe
inc
or
fcmovnu
call
or
or
sbb
inc
mov
inc
mov
sti
sub
cltd
inc
xor
push
add
inc
les
dec
jne
sbb
dec
xchg
pop
test
pop
add
movsl
jle
daa
dec
cmp
mov
stos
adc
pop
inc
fwait
pusha
inc
xor
xchg
incl
pop
in
shl
pusha
ret
mov
fstl
push
xor
mov
cmc
add
xor
out
mov
aaa
dec
inc
jb
aaa
dec
dec
pop
stos
xchg
cmp
xchg
mov
repnz
pop
mov
cwtl
fdivs
ret
test
jb
sbb
ljmp
add
push
nop
add
jbe
and
imul
cmp
jb
sub
test
scas
xchg
negl
add
adc
int
daa
xchg
inc
sub
push
imul
push
insl
cmpsl
out
mov
repz
push
fcmovnu
push
ljmp
dec
arpl
aas
sar
add
push
clc
push
push
push
popf
int
pop
mov
mov
cmp
das
rcll
scas
mov
iret
in
pop
add
mov
jg
fists
int3
push
rcl
add
and
add
hlt
outsb
sub
lcall
xor
int
jmp
jecxz
stc
xchg
movsb
outsb
pop
aas
es
mov
cwtl
xor
push
push
gs
hlt
mov
pop
ret
sub
sub
leave
insl
push
cmpsl
push
jmp
adc
inc
je
popf
bound
pop
xor
insb
hlt
addr16
fcmovb
push
repnz
dec
loopne
inc
pop
push
sbb
lods
lahf
mov
mov
sbb
sub
mov
shr
sub
imul
adc
popl
mov
sub
xchg
sub
ror
adc
add
add
pop
cmp
pop
ss
cwtl
lock
mov
xchg
cmpl
pop
dec
inc
adc
std
out
cld
sahf
add
lcall
pop
add
inc
out
inc
inc
fildl
mov
cwtl
fisttpll
dec
sub
add
push
dec
pushf
pop
pop
lahf
jl
add
jne
inc
xlat
out
outsl
inc
xchg
xor
xchg
mov
bound
pop
mov
enter
sarl
les
outsb
mov
jb
sbb
jns
add
test
hlt
mov
cld
loop
rol
xchg
xor
and
popf
sbb
mov
sub
mov
push
push
cld
popa
repz
jns
jmp
adcb
mov
rclb
mov
daa
sub
adc
xor
sub
xlat
fwait
mov
fistps
vcvttpd2dqy
ljmp
aad
fnstcw
cmp
lahf
sbb
sarb
aaa
cmc
jb
into
cmp
or
insl
jmp
mov
in
cwtl
and
push
clc
aad
out
jl
cwtl
inc
dec
repz
arpl
mov
inc
lods
rorl
int3
insl
jnp
push
mov
repnz
decl
leave
inc
lahf
fdiv
inc
ficomps
std
adc
dec
xchg
mov
xlat
inc
jbe
aaa
and
orb
dec
push
lods
subb
and
dec
jno
push
int3
xchg
sbb
dec
mov
fwait
loopne
add
sub
test
mov
fcompl
rol
mov
xchg
pop
jecxz
fldt
lret
sub
dec
fsts
pop
jge
cmpsl
out
hlt
outsl
mov
mov
lods
cmp
cltd
or
jecxz
out
rolb
adc
jmp
andb
arpl
divb
jge
mov
pop
fldenv
inc
add
jns
popf
lods
cmp
pop
sarb
rcll
jg
cwtl
les
loopne
imulb
decl
loope
mov
iret
cvttps2pi
in
cmp
and
cmp
pop
loop
mov
fisttpl
xlat
push
push
fmul
pop
or
cmp
insb
mov
adc
jl
sbb
jmp
into
inc
lods
pop
xor
ljmp
xchg
in
jbe
fldcw
out
push
leave
mov
insl
cmp
das
or
pushf
stos
ror
repz
mov
insl
adc
pop
mov
or
mov
xor
xchg
push
and
lret
into
ljmp
adc
das
clc
lahf
and
jmp
les
xchg
stos
mov
outsb
out
jge
cmp
sub
in
fsubs
add
inc
mov
pop
std
xor
fldl
repnz
stos
addl
mov
push
lods
jmp
std
movsl
cld
push
fdiv
pop
or
lcall
pop
xor
jl
imul
cmc
mov
adc
cmp
sbb
xchg
fistl
aas
ljmp
mov
bndstx
push
sbb
add
fidivrl
mov
es
pop
jns
sbb
jno
or
scas
jmp
dec
xchg
jo
notb
sbb
xchg
fstps
mov
lea
mov
inc
inc
or
sub
jecxz,pn
in
jns
sub
imul
pop
sub
inc
andb
aad
iret
movsb
xlat
out
sub
scas
xor
adc
mov
dec
fisttpl
or
xor
iret
mov
das
rol
add
jp
sbb
addl
xchg
addb
lahf
bnd
and
loop
lret
add
mov
jge
or
and
pusha
dec
addb
push
lods
xchg
pop
push
mov
dec
xchg
mov
les
mov
scas
cltd
mov
push
addr16
cwtl
mov
cmc
pcmpeqb
out
mov
xchg
cltd
ficoml
mov
pusha
and
pop
out
sub
mov
dec
adc
pop
lret
cmp
and
push
gs
push
shr
adc
cmp
lret
aaa
cmp
xchg
scas
fldcw
test
js
add
adc
rorl
mov
test
into
mov
adc
out
rol
sti
xor
arpl
repz
jne
aas
mull
inc
scas
push
es
adc
stc
fucomp
imul
add
fwait
xor
ffree
dec
nop
sbb
mov
mov
rclb
push
sbb
es
mov
addr16
or
and
andl
xor
adc
and
lret
fdivrl
into
add
dec
imul
pop
repz
push
or
fnstenv
pusha
xchg
stos
mov
jp
mov
sti
and
xchg
add
and
mov
jmp
lea
dec
push
pop
hlt
mul
aad
push
gs
add
and
push
jnp
xor
jns
push
lods
rolb
das
cmp
aaa
gs
lret
inc
jmp
js
push
in
and
cmp
repnz
ss
jns
ret
mov
adc
or
mov
jns
mov
ljmp
fdecstp
adc
lret
and
inc
jb,pn
add
insb
jge
je
inc
cmp
pop
pop
test
or
scas
or
fldl
aad
jns
xor
cmp
sub
mov
mov
push
out
cwtl
mov
fstps
jge
fisubrs
sahf
nop
sub
or
lea
loop
xchg
test
cmp
outsl
push
movsl
cmovb
cltd
fs
ljmp
adc
cmp
repz
sbb
mov
mov
jecxz
inc
jnp
sbb
out
hlt
pop
mov
cmp
add
popa
jle
pop
lods
into
fisttpl
mov
das
add
and
add
cltd
cmpsl
mov
pop
out
les
xchg
ljmp
mov
imul
sbb
mov
nop
repnz
sub
imul
pop
iret
dec
outsb
pop
dec
push
int3
scas
jle
cmp
rcl
loopne
fwait
in
jne
mov
cmp
mov
jl
push
push
cmpsl
ret
sub
pop
sbb
mov
imul
inc
jp
or
shll
adc
or
push
dec
push
movsl
pusha
add
icebp
jecxz
xor
mov
cmp
xchg
pop
in
enter
mov
mov
push
add
mov
divl
mov
mov
jb
int3
or
jmp
lret
xchg
lret
pop
gs
mov
mov
and
repz
pop
aas
mov
add
cmp
enter
and
fs
adc
pop
int
sub
in
jo
xchg
and
mov
adc
sti
jmp
andps
push
and
insb
xlat
test
outsl
test
jle
fadd
pop
cmp
flds
ss
scas
mov
das
and
stc
shlb
fmulp
xchg
dec
int3
pop
sarl
arpl
pop
mov
push
inc
push
xor
in
sbb
ficomps
or
dec
push
dec
jecxz
or
loopne
fwait
outsb
inc
xchg
push
ss
dec
push
or
dec
or
scas
jns
cs
popf
test
jmp
pop
mov
mov
push
sbb
loope
dec
mov
fldenv
loop
fnsave
push
stos
xor
movsb
mov
push
ja
lcall
out
jbe
lods
sub
lock
push
pop
out
cld
jle
dec
adc
jnp
test
jnp
push
popa
sub
outsl
fs
jle
popf
xchg
inc
out
fadds
cmpsb
arpl
push
xlat
in
imul
test
sbb
fists
psubusw
add
jo
lods
pop
xchg
pop
pop
adc
and
xor
add
sub
mov
mov
cmc
push
or
mov
jbe
xchg
jnp
ret
cltd
mov
and
inc
or
cmp
test
pop
sub
push
leave
popa
clc
jmp
cli
bound
std
je
insl
xchg
fidivl
negb
aad
fs
fs
iret
mov
adc
push
xor
push
hlt
sbb
rorl
adc
push
test
sbb
popf
xchg
xor
inc
jb
push
daa
inc
cmp
cmc
dec
and
mov
shl
jnp
fidivrl
add
dec
int
out
xchg
or
cmp
test
adc
jb
cs
fnsave
mov
push
outsb
repnz
push
xchg
inc
mov
lock
add
sahf
dec
ljmp
popf
mov
cmp
mov
aas
dec
adcl
xor
mov
idivb
inc
lret
mov
pop
fidivrl
stos
add
mov
or
mov
and
ljmp
cmp
mov
call
pop
dec
adc
push
sub
testl
nop
xchg
hlt
cmp
or
aas
inc
mov
jne
scas
mov
test
enter
nop
sbb
pop
ds
rclb
sarl
cs
mov
jl
das
cmc
inc
or
leave
push
dec
mov
icebp
addr16
sbb
leave
xor
idiv
push
sbb
pop
pop
lock
imul
inc
jne
lods
sub
sub
fwait
sub
out
mov
fldl
xor
jl
jle
add
push
orb
or
test
xor
mov
bound
loop
outsb
mov
pop
shrb
jle
sahf
push
push
imul
dec
push
push
inc
out
das
sub
fimuls
fs
iret
ret
dec
jno
mov
mov
add
gs
jbe
pop
mov
push
mov
cmp
dec
or
test
mov
movsb
vpsubusw
jl
pop
jecxz
les
cltd
xor
push
daa
mov
dec
sti
jne
jecxz
sub
mov
loopne
pop
dec
test
sub
add
push
fwait
nop
imul
cmpl
add
int
rolb
shll
insb
inc
lcall
sbb
push
cmp
jmp
fs
mov
out
inc
popf
xor
inc
xchg
mov
ja,pt
xchg
lahf
leave
ds
push
xchg
jmp
sti
addr16
fsubp
imul
pop
push
in
data16
movb
ja
fldl
test
popf
decb
and
jnp
out
jp
lea
movsl
je
into
fcompl
scas
pop
insl
push
jb
or
inc
test
push
ss
aam
push
sub
mov
movsb
int
push
sub
lods
jp
mov
inc
push
mov
or
pop
cmpsl
movsl
addr16
dec
xchg
aam
imul
je
xlat
ja
int3
sub
test
sbb
popa
push
aas
inc
dec
mov
cwtl
pop
push
arpl
lea
push
lods
stc
fisubrl
fsubs
ss
dec
scas
insb
loop
jecxz
rorl
xchg
lea
push
sbb
ds
repz
sbb
lret
fcoml
repz
mov
mov
into
test
rorl
push
lcall
add
movsb
lea
pusha
lods
stos
in
mov
xchg
sub
and
jl
lcall
call
addr16
mov
lahf
scas
sbb
les
loop
push
dec
aas
jno
xor
out
cmpsl
arpl
and
adc
into
xlat
call
int
adc
jb
or
pop
mov
or
or
sbb
inc
pop
jns
int
sub
mov
movsl
xor
xchg
push
daa
push
xchg
mov
enter
xchg
fcomps
fwait
stc
mov
loope
data16
mov
xchg
add
in
xchg
mov
add
fnstsw
and
pop
pop
idivl
sbb
sbb
ja
fcoml
jbe
mov
iret
push
fwait
js
jge
or
mov
popf
jnp
les
add
add
add
push
adc
and
cmp
add
adc
add
add
in
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
sbb
sub
xor
cmp
ss
ss
ss
ss
aaa
imul
aaa
xorb
aaa
lcall
aaa
ret
aaa
shll
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loope
out
hlt
cmp
or
add
add
dec
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
xor
inc
cmp
pop
cmp
add
or
add
push
xor
xor
jae
jns
test
mov
xor
xor
xor
xor
xor
xor
xor
addr16
xor
cmp
arpl
xchg
xchg
xor
mov
xor
pop
aaa
jb
jnp
test
mov
xchg
aaa
sahf
aaa
lods
aaa
mov
shll
aaa
into
aaa
call
cmp
cmp
cmp
cmp
cmp
pop
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
idivl
cmp
adc
and
daa
cmp
cmp
cmp
cmp
xchg
cmp
cmp
sub
cmp
jae
jle
xchg
movsl
cmp
lret
cmp
fidivrs
cmp
dec
ds
ds
ds
add
xor
xor
dec
xor
pop
xor
ja
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xlat
xor
jno
jle
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
dec
cmp
lahf
movsl
loope,pt
jmp
clc
aas
add
add
add
add
or
adc
sbb
xor
inc
xor
pusha
xor
insb
xor
mov
lahf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pusha
xor
xor
xor
xor
repnz
xor
xor
xor
xor
jl
dec
cmp
nop
ds
fstpt
add
add
add
add
xor
pushf
xor
xor
xor
xor
xchg
xor
scas
xor
int3
xor
sbb
daa
aaa
sub
xor
jbe
xchg
cwtl
cmp
cmp
in
cmp
cmp
cmp
push
cmp
push
cmp
cmp
sbb
add
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
je
js
xorb
xor
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
xor
inc
xor
pop
xor
xchg
xor
scas
xor
into
xor
in
xor
or
adc
sbb
sub
xor
ds
ss
ss
ss
jo
jnp
xchg
mov
xchg
ss
ss
fdivs
fbstp
in
in
divl
add
or
push
aaa
and
aaa
aas
aaa
inc
aaa
push
aaa
pop
aaa
data16
imul
aaa
xorl
aaa
mov
mov
aaa
aam
out
in
aaa
stc
aaa
or
push
cmp
sbb
and
sub
xor
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsl
cmp
cmpl
mov
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
bound
jle
test
xchg
cmp
cmp
sarb
fnstsw
out
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
cmp
jle
test
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
jno
ja
jg
test
add
add
cmp
xchg
xor
xor
xor
xor
xor
xor
xor
xor
jne
nop
xor
xor
xor
movsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
ss
push
xor
jl
xchg
xor
xor
cmp
inc
aaa
push
aaa
pop
aaa
push
aaa
xorl
cltd
aaa
lahf
aaa
xor
test
lods
cmp
xor
aas
ds
ds
ds
jnp,pt
sahf
mov
rolb
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
add
add
add
cmp
cmp
push
add
push
xor
and
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sub
pop
xor
je
lods
xor
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
addb
add
add
mov
cmp
cmp
cmp
mov
add
add
add
ss
ss
ss
add
add
or
