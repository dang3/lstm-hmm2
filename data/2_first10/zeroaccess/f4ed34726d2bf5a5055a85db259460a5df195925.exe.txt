push
mov
jmp
cwtl
jb
inc
pop
pop
cltd
lret
inc
scas
or
das
movsl
jle
jle
xorb
into
xor
xor
ja
or
push
or
cmp
int3
adc
sbb
mov
or
rorl
out
mov
or
dec
sbb
loopne
add
mov
xor
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
loope
pop
sub
jae
lret
lcall
mov
loop
cmp
sub
or
sbb
outsl
insl
je
cmp
jns
popl
shll
movb
sahf
mov
daa
sbb
addr16
in
test
and
jnp
adcb
ret
dec
js
mov
fsubl
idivl
sbb
sbb
xor
mov
lret
fnsave
out
aaa
lods
and
jo
xor
or
xchg
lods
bound
or
dec
sub
fists
jecxz
push
xchg
jns
into
rcrl
jo
or
js
xor
pop
arpl
xor
ret
jnp
push
mov
jp
inc
dec
mov
loope
jge
xchg
xchg
sbb
imul
aad
lods
aas
push
cmp
test
xchg
sar
ret
add
lock
mov
push
pop
arpl
push
lret
xchg
pop
pop
fidivl
sbb
mov
fistpll
insl
jg
idivl
pop
loop
shrl
jl
mov
sub
test
lods
mov
sarb
cltd
add
clc
rolb
sbb
pop
pop
stos
dec
cmp
je
cltd
lret
xchg
int3
cmpsb
jnp
jmp
call
sbb
pop
aad
das
lcall
mov
fdivl
shll
jbe
out
movsl
mov
lds
lods
jbe
inc
jns
in
inc
aad
shr
xor
xor
daa
push
cltd
or
inc
sbb
fstl
push
stc
je
jge
dec
and
lret
fisubrl
not
nop
inc
jle
add
push
insb
push
xchg
sbb
dec
and
popf
pusha
xlat
fmuls
mov
cld
mov
mov
pop
nop
adc
addl
ret
fstps
mov
shlb
inc
wrmsr
cmc
addl
push
pop
in
mov
xchg
je
sub
test
mov
push
mov
lret
int
rcr
or
cld
out
das
mov
push
hlt
push
mov
add
lods
jbe
xor
adc
div
stc
scas
mov
stc
mov
pop
pop
xchg
add
jmp
loope
fs
pop
add
push
and
xor
sahf
inc
lds
adc
sbb
jo
aas
mov
inc
inc
or
or
lods
shll
ja
pop
fwait
dec
addl
cmc
mull
sub
adc
mov
sar
and
mov
inc
inc
push
mov
or
xor
lods
push
loope
test
xchg
mov
add
loopne
xor
push
sarb
leave
call
stos
sbb
dec
cmp
negl
cmpsb
call
sub
pop
les
sarb
loop
add
and
pop
or
sub
js
mov
cmp
sbb
movl
sbb
movl
sub
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
lea
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
and
mov
jmp
sub
ljmp
or
jle
xorb
xchg
scas
negl
std
inc
inc
pop
dec
mov
hlt
dec
aaa
sub
out
sub
mov
rcrl
test
ljmp
mov
sub
lock
mov
mov
cld
fcoml
xor
shll
mov
jb
in
sbb
add
adc
stos
ds
push
cmpsl
push
shlb
mov
imul
pop
jl
and
shl
movsb
cmp
pop
push
and
push
pop
movsl
push
decb
jb
or
cmc
dec
ret
push
and
ficoms
mov
fwait
jae
adc
in
inc
sbb
daa
aas
pusha
jle
repnz
xchg
mov
pushw
mov
push
insl
jp
fstl
mov
mov
push
movsb
in
push
mov
sub
push
push
mov
ds
test
sub
jge
ficoml
call
pop
call
jecxz
inc
sub
shlb
int
or
les
sbb
int
mov
mov
push
sbbb
movsb
pop
mov
jge
cs
fistps
and
xchg
push
scas
shrb
mov
repnz
dec
iret
push
mov
jb
ljmp
movsw
pop
push
mul
fisubl
icebp
ret
cmpsl
sub
xbegin
xchg
cmp
in
stos
mov
dec
fwait
jae
shll
iret
mov
push
add
ss
stos
mov
jno
lods
xor
stos
pop
sub
fdivrl
das
cli
stos
rorl
push
mov
pop
in
and
xor
pop
lcall
ja
or
call
add
movsl
rcrl
lea
sub
shll
fisttpll
mov
fnstenv
imul
cmp
test
test
xor
sub
ja
sub
inc
push
dec
mov
mov
sbb
and
cmp
push
or
cli
rorl
je
icebp
loope
mov
int3
movsb
mov
jge
addr16
xlat
js
and
push
out
xchg
aad
xchg
lods
movsl
test
mov
rclb
pop
inc
testl
cmpsl
push
jnp
insl
cs
xor
inc
enter
jmp
insb
sbb
imul
dec
arpl
sub
mov
jecxz
les
sub
and
hlt
in
iret
inc
out
sub
nop
push
jne
enter
in
mov
icebp
xor
jo
jge
cltd
lock
scas
xlat
adcb
lcall
push
jg
es
cli
into
leave
in
xchg
imul
pusha
in
nop
xchg
bound
jmp
ds
fistl
mov
or
int3
mov
xchg
repz
btr
inc
fisttpll
ds
fadd
adc
xchg
sbb
lcall
push
jne
mov
imulb
adc
sbb
mov
loopne
mov
xchg
push
push
xchg
xchg
dec
dec
add
add
xor
adc
xchg
pop
movsl
xor
pop
cmp
mov
mov
pop
mov
inc
mov
cmp
fs
loopne
push
aad
mov
loopne
jle
movsl
add
push
test
daa
nop
mov
mov
negl
push
lea
xor
mov
mov
xor
push
sbb
push
adc
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
addl
mov
or
mov
mov
xor
mov
sbbl
xor
xor
xorl
add
add
sbbl
jmp
ret
imul
mov
jg
pop
push
jne
jle
jno
jle
fisttps
dec
fidivrl
xor
addr16
repnz
enter
cmpsl
mov
and
daa
fcomp
push
leave
ret
out
pop
outsb
sub
imul
and
pop
push
test
mov
lahf
mov
jmp
das
stos
xchg
cmp
stos
inc
pop
mov
lock
in
and
adc
adc
dec
loop
jnp
je
pop
push
insb
push
adc
pusha
gs
mov
add
mov
jge
xor
pop
xlat
mov
push
mov
inc
rorl
mov
mov
shll
out
imul
rcl
push
lret
repnz
stos
pop
lret
mov
xchg
sbb
add
dec
cld
mov
cmp
aas
sbb
and
dec
xlat
push
mov
and
out
jbe
add
mov
dec
outsb
or
rclb
je
cmp
cmp
pop
pop
xorb
sarl
xor
jge
rolb
mov
ds
push
lret
stos
and
cmc
inc
jnp
inc
jae
test
clc
add
insb
mov
mov
sub
xchg
pop
leave
and
or
or
xchg
scas
inc
and
fidivl
xchg
rcrb
cmp
lcall
adcl
mov
inc
add
les
std
xor
mov
push
repnz
scas
cmovae
xchg
das
adc
mov
icebp
sahf
loopne
insl
clc
jo
jl
add
pop
push
sub
jb
pop
add
popl
pop
jg
addr16
shl
xchg
or
or
or
cmp
gs
inc
stos
xchg
incl
mov
push
loopne
sbb
mov
lds
sub
stos
cs
js
rcl
jae
xchg
lock
loop
jge
test
and
mov
pop
adc
mov
clc
sbb
js
rcrb
ret
ret
adc
mov
push
add
push
inc
add
orl
fwait
xchg
test
mov
or
jmp
mov
inc
and
mov
mov
imull
cmp
sarb
xchg
push
and
mov
jae
dec
enter
or
les
pop
aaa
fnstsw
ds
fisttpll
add
xchg
mov
jge
movb
shlb
dec
mov
in
sti
mov
and
push
cs
cmp
mov
jmp
bound
ret
mov
or
push
add
ja
or
rolb
and
insl
cmp
push
pop
pop
aad
sbbb
sub
rcl
repz
pusha
xchg
addb
arpl
or
mov
lods
arpl
add
arpl
lret
out
sub
popf
xor
jmp
xor
mov
gs
out
fwait
and
andb
jns
xchg
jle
and
inc
pop
jno
inc
cmc
mov
pushf
mov
inc
jg
add
gs
and
imul
hlt
xor
or
outsb
xor
imull
stos
sbb
test
je
or
je
dec
or
sbb
add
pop
push
push
or
scas
shlb
dec
div
movl
jmp
pop
nop
jl
jge
and
jns
in
mov
jno
jle
je
mov
movsl
xor
pop
nop
adc
in
jno
jmp
js
loopne
pop
or
idivl
mov
and
jb
shlb
cmp
mov
fcom
jns
subb
push
xchg
push
dec
popf
gs
jno
loopne
fmuls
add
mov
dec
cmp
adc
stc
xchg
in
push
xor
xor
mov
push
lahf
mov
dec
filds
pop
add
enter
push
popf
jge
outsb
dec
sub
cmp
mov
push
addr16
mull
jno
scas
es
add
cwtl
das
int
push
add
mov
out
jp
loop
mov
flds
bound
cmp
adc
hlt
clc
xchg
xor
mov
rcrl
in
icebp
inc
into
or
test
inc
rcrb
ret
inc
adc
dec
xchg
dec
and
pop
pop
repz
pop
ficomps
xchg
mov
sbb
xchg
std
sbb
int
sub
dec
dec
sbb
addb
js
jne
stc
ja
fmull
mov
in
xor
adc
jg
loope
dec
sub
test
adc
cmpsl
mov
repz
scas
jmp
rorl
cmp
fistpl
andl
xor
hlt
push
cmp
mov
inc
push
or
rolb
lcall
test
stos
and
jecxz
popa
fdivrl
push
test
add
ret
dec
xor
stos
xchg
add
and
dec
push
adc
xchg
cld
mov
sbb
sub
cmp
mov
cmp
mov
mov
mov
adc
imul
pop
xor
cmpsl
mov
jne
clc
inc
dec
pop
out
in
push
xchg
stos
cmp
fidivs
add
add
les
lock
ror
popf
xchg
addl
cmp
xchg
ljmp
xchg
sbb
fwait
pop
stos
ja
shl
lds
fs
outsl
lahf
adc
jae
jge
sti
inc
arpl
insb
sub
iret
add
add
loop
inc
popa
shrl
push
addr16
push
pop
cmp
xchg
push
cmp
sub
in
sub
outsb
std
loopne
in
aad
or
rol
mov
or
lahf
pop
ja
push
jg
out
or
dec
fistpll
movsb
ret
push
loop
das
shl
js
test
add
outsl
mov
pop
cmpsb
in
shrl
testl
js
push
mov
mov
cmp
into
in
stos
stc
cmp
out
iret
fwait
shrb
nop
into
insl
cmpsb
rcll
xchg
jmp
cmp
pop
xchg
and
dec
jp
dec
hlt
push
out
mov
call
dec
scas
and
gs
sub
cmpb
mov
jecxz
ret
xchg
pop
aad
jno
es
pop
pop
pop
mov
mov
jb
adc
leave
pop
xor
xchg
mov
mov
mov
inc
cmp
xor
sbb
lcall
jno
pop
cmp
cmp
jge
adc
shll
sbb
test
fbld
xor
into
mov
push
mov
jne
dec
jo
stc
out
xchg
aam
dec
add
movl
cmp
movl
je
movl
sub
lea
mov
sub
mov
not
jmp
inc
test
xchg
mov
rorb
into
or
jle
jno
jle
add
pop
int
je
add
lcall
shl
stc
push
lcall
sbb
sbb
push
imul
enter
inc
cmp
les
or
scas
inc
push
aaa
inc
call
adc
ljmp
repnz
cs
lahf
in
dec
mov
sub
filds
sub
xor
add
xchg
fiadds
jb
sbb
fldcw
lret
dec
or
push
pusha
lcall
jg
push
or
sti
out
mov
sbbl
mov
and
jmp
test
das
int3
pop
and
hlt
subl
gs
in
pop
jb
sbb
fsubrp
shrl
jb
rcrl
push
scas
inc
or
andb
sub
pop
pop
and
aaa
xchg
loopne
les
mov
inc
push
jp
popa
add
add
adc
fistpll
ljmp
push
jns
lret
dec
gs
pop
mov
jecxz
jmp
test
pop
and
mov
lds
call
mov
loopne
stos
lcall
add
scas
aam
xchg
sarb
fiaddl
fistpll
clc
inc
pop
lods
dec
xchg
inc
fwait
int
push
test
testb
idivl
sbb
cmp
jnp
push
arpl
mov
mov
mov
push
jne
test
sahf
icebp
xor
cmp
cmp
mov
lcall
xor
add
mov
es
popl
cmp
sti
xor
icebp
mov
imul
jmp
sbb
aam
ss
xchg
in
and
sti
sbb
mov
mov
cs
add
push
mov
mov
push
andl
push
fdivp
pop
push
add
cmc
inc
xchg
mov
push
mov
cwtl
insl
outsl
mov
push
sbb
sub
cmpsb
and
pop
adc
sbb
or
imul
dec
xor
cmp
add
insb
xchg
out
lea
lahf
daa
add
xor
ja
sub
dec
mov
fwait
shrl
sbb
cld
enter
dec
test
jg
fimull
dec
add
lahf
jno
pop
jns
lahf
push
int3
js
jecxz
pusha
outsl
iret
adc
fisubl
rorb
jb
mov
and
pop
test
ret
mov
das
mov
data16
pop
add
inc
and
push
rcrl
fildl
dec
or
push
xor
mov
adc
sbb
test
pop
adc
inc
cwtl
jmp
sub
loop
dec
je
lods
and
loope
sub
pop
cmp
and
out
iret
mov
test
push
aam
scas
jo
and
fs
mov
cmp
and
imul
push
xchg
ds
add
jecxz
lods
push
dec
sbb
movsl
aas
aaa
lcall
lcall
xlat
inc
jecxz
std
orb
mov
push
cwtl
icebp
adc
dec
push
mov
sbb
xor
lea
js
fstpt
inc
push
xchg
cwtl
mov
xor
inc
mov
imul
movl
mov
movl
mov
cmp
movl
je
and
mov
jmp
inc
xchg
ljmp
dec
xchg
pop
adc
jle
jno
jle
inc
mov
js
mov
lahf
arpl
fs
xchg
adc
aad
or
daa
mov
shl
subb
rorb
ficompl
cld
jnp
mov
loope
xchg
dec
pop
pusha
push
ret
pop
xchg
sahf
add
mov
push
push
cmpsb
shrl
lret
inc
pop
paddd
into
insl
mov
mov
jp
jmp
das
add
mov
test
mov
test
fldt
push
cmp
push
inc
dec
and
xlat
adc
pop
in
frstor
inc
outsl
lahf
sarl
add
bound
cmp
cmp
add
sbb
les
push
sbb
cmp
jecxz
or
xchg
push
sbb
push
xchg
push
pushf
sarl
adc
loop
jge,pn
or
or
sbb
pop
outsb
aaa
scas
xchg
inc
jae
inc
in
push
add
dec
popa
jp
push
outsb
push
push
icebp
push
adc
sbbb
pop
add
subl
and
bound
sbb
push
push
out
lods
xor
push
pop
sub
int
cli
arpl
cmpsb
outsb
push
sub
scas
mov
shlb
jge
rclb
inc
pop
in
aam
outsb
in
dec
jae
jecxz
push
mov
xchg
add
ficoml
iret
push
dec
xlat
fwait
xor
push
cltd
add
inc
xchg
cmc
inc
insb
jmp
aam
push
into
sbb
outsb
or
das
pusha
fdivrs
ret
lret
cmp
and
push
jne
add
test
xrelease
pop
jns
das
inc
sub
xchg
xor
adc
sub
sub
stos
jecxz
jl
and
push
pop
xchg
out
nop
cwtl
adc
pushf
cltd
imul
xor
push
cmpsb
pop
pop
das
inc
je
add
fisttpll
sbb
aam
sub
push
fdivrs
inc
mov
mov
mov
stos
cwtl
jbe
cmp
ret
sub
dec
je
sbb
xor
jbe
sbbl
inc
loope
push
paddsw
icebp
scas
sub
jg
pushf
test
xchg
xlat
daa
pop
pop
pop
xchg
xor
out
hlt
jl
loopne
push
arpl
dec
pop
rorb
loope
adc
int
pop
sub
push
or
add
mov
jbe
shr
lret
rolb
lret
push
mov
shll
shl
pop
add
push
adc
pop
inc
adc
mov
mov
pop
mov
lods
addb
adc
cmp
sub
out
mov
xor
int
mov
cmpsb
test
stos
mov
mov
and
dec
inc
test
enter
pop
dec
xchg
push
push
imul
add
fidivs
bound
pop
mov
gs
cmp
sbb
cwtl
xchg
ljmp
call
out
cmp
cmp
hlt
ja
out
mov
shrb
xor
scas
ja
inc
cmp
call
fistl
xlat
cmp
scas
xor
aad
mov
or
test
imull
imul
push
rcrb
sub
xor
mov
arpl
or
add
adc
add
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
jmp
clc
inc
adc
xchg
jge
pop
movsl
pop
dec
push
fstpt
jle
xorb
mov
xor
add
cld
xchg
jle
mov
dec
shrl
loope
outsl
mov
pop
and
xor
ljmp
lea
fsubs
testb
stc
pop
cmpsb
aaa
sub
into
jne
popf
and
xchg
das
clc
sbb
mov
stos
push
inc
fs
adc
jb
outsl
jle
enter
jmp
pushf
in
cmp
mov
rclb
inc
mov
and
or
ds
aad
cld
xchg
mov
cmpsb
push
mov
mov
mov
cwtl
cmpsb
or
inc
mov
push
xor
pop
std
mov
push
fldt
sub
cmp
shlb
in
out
or
lods
dec
mov
add
cmc
insl
push
jp
data16
gs
and
mov
fisttps
jmp
mov
movb
xchg
pop
and
out
xor
daa
push
ret
sti
ret
std
in
xchg
push
mov
out
testb
xor
repz
aam
adc
cmp
pop
hlt
cwtl
popa
sbb
dec
mov
rorl
inc
add
sti
push
mov
add
js
add
dec
outsl
je
xchg
cmp
popf
xlat
fidivs
xchg
jge
fistpll
inc
fld
inc
fisubl
sbb
xchg
or
lods
jae
xor
jnp
xor
mov
mov
jg,pn
sub
testb
inc
addr16
dec
lea
lret
shll
push
fwait
or
cli
icebp
in
push
or
ret
sbb
pusha
inc
leave
adc
push
hlt
dec
mov
jg
stos
jbe
inc
jmp
mov
dec
divb
and
jl
ret
add
out
jbe
data16
pop
xchg
mov
mov
fcmovbe
push
push
in
pop
jbe
divps
jl
mov
sub
pop
push
aad
sbb
mov
sub
in
jle
xchg
jnp
push
mov
or
or
out
clc
inc
pop
mov
daa
in
xchg
dec
mov
fmulp
mov
xchg
lds
repz
addr16
out
and
jge
push
sbb
dec
mov
lods
stos
adc
scas
add
ljmp
addr16
sbb
out
sbb
pop
pop
icebp
ja
inc
xor
push
std
cmp
jl
pop
sysexit
jge
scas
call
mov
filds
xorl
jle
mov
jge
repz
rclb
movsb
fldt
loope
cld
sahf
pop
ret
icebp
push
pop
or
negl
pop
iret
cld
jnp
or
sub
outsl
call
cwtl
dec
arpl
mov
icebp
mov
dec
orb
pop
stos
adc
adc
mov
push
sub
cmp
push
mov
addl
jae
xchg
inc
test
repz
aad
mov
jle
lret
sub
xor
inc
dec
jge
mov
jmp
daa
repnz
leave
jg
pop
out
jbe
daa
les
inc
jg
add
cmpsl
mov
adc
lret
adc
pushf
push
je
cwtl
out
subl
fs
lock
sub
jbe
mov
mov
pop
push
inc
cmc
xlat
ja
dec
cltd
and
push
and
cld
mov
adc
in
inc
lock
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
jmp
adc
repnz
mov
test
inc
xor
jle
xorb
sub
jnp
cmp
mov
push
mov
in
jo
mov
stos
sub
in
sbb
dec
iret
je
or
dec
pushf
cmp
test
mov
icebp
out
xchg
cmp
frstor
gs
out
dec
fs
jnp
lahf
roll
mov
fwait
mov
pop
sub
sbb
ljmp
inc
cmc
outsl
das
pop
jg
push
in
test
sbb
popf
xchg
jl
mov
xchg
adc
inc
push
lahf
push
inc
add
stos
mov
ja
mov
testl
adc
fs
int3
mov
push
push
imul
cltd
mov
add
push
cmp
xchg
lret
pop
push
push
mov
xchg
inc
jns
push
test
xchg
aas
and
rcrb
stc
dec
lods
ss
hlt
mov
pop
aad
bound
mov
xor
clc
push
xchg
adc
pop
adc
mov
int3
sub
loope
call
sub
faddl
pop
mov
mov
arpl
adc
pop
mov
xor
mov
imul
cmpsb
mov
sbb
xor
push
popf
ljmp
ljmp
out
test
loope
movsb
leave
sub
dec
xor
adc
xchg
test
dec
jo
push
test
mov
scas
jl
in
and
mov
imulb
aaa
sahf
rcll
outsb
pusha
or
xor
arpl
push
stc
push
push
data16
mov
dec
pop
xor
add
push
cmpsb
or
pop
imul
pop
test
xor
jns
sbb
pushf
shlb
sti
sbb
gs
and
add
pop
dec
xchg
ret
les
xchg
push
inc
stos
xor
or
addr16
xchg
movsb
flds
inc
in
sbb
fnstsw
mov
imul
jmp
jp
mov
or
in
sarb
and
sub
sub
dec
sub
in
jne
mov
mov
push
cli
push
loop
imul
fnsave
fstp
ss
out
xor
movsl
out
cmpsl
mov
push
sub
xor
in
add
ret
sub
push
mov
fidivl
mov
add
mov
mov
jle
les
pop
leave
mov
ljmp
push
dec
pop
iret
arpl
fsubrp
popf
dec
or
and
dec
xor
and
divl
dec
fwait
mov
call
lock
mov
test
pop
xchg
xor
shrd
add
lret
sub
mov
repnz
js
or
jg
or
jle
sub
push
xor
incb
push
mov
call
add
adc
jno
inc
xchg
dec
mov
test
out
dec
push
and
leave
sbb
inc
cli
or
jmp
stos
imul
jns
ret
or
lods
push
out
jmp
push
movsl
scas
sarb
sub
into
ja
jb
mov
sarb
sub
and
xchg
movb
or
std
push
mov
jmp
jl
sub
jge
jge
inc
sbb
fistl
jle
sahf
sbb
xorb
addl
scas
pop
adc
es
xor
cmpsb
mov
xchg
xchg
xchg
sub
repz
cmc
outsb
lds
mov
jge
push
cltd
dec
mov
addr16
sub
xorl
sbb
rcrl
data16
roll
std
or
mov
and
ret
loope
popa
fs
push
mov
jne
ret
roll
pop
in
cmp
addb
or
in
fdivs
push
push
pop
mov
int3
dec
sub
mov
xchg
movsl
outsl
sahf
mov
add
enter
jmp
push
adc
out
cli
and
xor
addr16
dec
jecxz
cmc
cmp
add
dec
bound
lock
add
dec
add
and
les
sub
imul
dec
mov
cmpsb
sahf
insl
or
aas
sub
jo
lcall
outsl
insb
rclb
cmpsb
pop
arpl
pop
mov
inc
pushf
rcll
sti
das
cmpsl
mov
dec
xor
lahf
adcb
iret
jmp
jl
mov
xchg
pop
jbe
div
sub
inc
sti
dec
test
mov
pop
repnz
mov
cmpsb
jge
and
loope
rolb
mov
mov
test
or
movsl
aam
scas
mov
sti
loop
or
or
mov
cwtl
lods
sbb
les
cmpsl
call
jo
jo
xchg
cs
daa
mov
div
sbb
cltd
imul
or
cmp
cld
push
inc
jne
mov
mov
dec
in
mov
push
mov
sub
fidivs
scas
push
imulb
inc
scas
push
mov
sub
repz
dec
dec
inc
cwtl
popf
popa
mov
cmp
and
cmp
andl
inc
add
mov
lret
xor
mov
cmp
sahf
add
xchg
loopne
daa
test
push
mov
pop
and
jns
out
pop
jb
shl
fdivrl
dec
xorb
pusha
jmp
int3
ret
cmpsl
mov
or
loop
pop
jmp
insb
xor
jmp
mov
aaa
mov
sti
dec
inc
into
sti
cli
nop
addr16
lods
mov
xchg
mov
adc
test
adc
adc
sub
fadds
idivl
mov
inc
inc
xor
xor
or
inc
pop
jmp
fiaddl
insb
and
dec
xlat
inc
mov
repz
cmp
dec
outsl
mov
js
data16
sbb
inc
lahf
ret
cltd
add
je
pop
dec
movb
or
int
insb
cmpsb
rcrb
push
popf
cmp
jg
mov
jbe
movsb
pop
xchg
insl
daa
aaa
push
and
inc
fwait
cmp
pop
inc
les
add
pop
mov
xor
ljmp
cmp
hlt
out
cs
or
hlt
out
mov
fs
rcll
mov
jne
mov
rorl
cmpsl
rcl
push
imulb
rol
xor
inc
push
sub
rcrb
fldl
aaa
loopne
sbb
pusha
sbb
dec
inc
mov
jb
or
jge
mov
mov
xor
jmp
nop
cltd
fstl
xlat
push
mov
adc
sahf
cmp
push
jle
xorb
mov
push
mov
dec
xlat
push
xchg
mov
inc
fmull
jnp
add
mov
jmp
arpl
pop
sub
fwait
xor
ja
arpl
ficoms
insl
loope
dec
jg
push
cmp
mov
push
add
sbb
sub
push
js
pop
adc
daa
push
jecxz
aas
mov
loope
loopne
popa
pop
mov
in
sub
rcr
insl
rorl
xor
xchg
adcb
cli
push
mov
dec
mov
loopne
xor
imul
and
roll
ss
add
subb
jg
or
mov
jmp
imul
dec
shr
sti
pop
int3
push
repz
outsb
out
loop
fnstenv
cmp
xor
aaa
sbb
or
negl
jle
aam
rcll
mov
adcl
in
jo
mov
out
loopne
aam
in
inc
out
or
jo
fstpt
cmc
add
mov
loope
xor
add
rcrl
rcrb
pop
paddusw
xchg
push
dec
xchg
aad
add
add
stc
inc
outsb
xor
mov
adc
pop
popa
gs
pusha
aaa
mov
jae
pop
sahf
cmp
shrb
lret
call
test
add
dec
pushf
fiaddl
repz
xchg
lods
cmpb
sub
pop
cld
or
test
sti
into
inc
call
push
mov
mov
xor
pop
inc
or
sub
fstps
adc
mov
daa
xor
dec
xor
sti
gs
add
ret
sbb
fistpl
pop
dec
cwtl
inc
shl
jno
in
shlb
loop
cmp
sarb
push
out
sub
or
mov
je
cmpsl
cs
cmpsl
pop
push
dec
test
mov
xor
repz
icebp
inc
cwtl
xchg
fs
jne
dec
mov
push
mov
pop
rcll
les
cmc
fistpll
popa
and
ds
es
nopl
sub
xor
das
fists
les
es
arpl
cli
fcompl
dec
or
mov
xlat
sbb
ljmp
cmp
adc
addl
push
mov
pop
sbb
fs
cmp
or
mov
fdiv
cmpsb
jl
lahf
or
dec
ja
sti
subl
repz
jne
push
popa
jmp
xchg
pop
pop
sub
add
inc
add
test
pushf
sbb
xchg
xor
inc
pop
inc
movsb
sub
popa
std
test
aam
mov
int
nop
mov
pop
js
adc
adc
dec
cs
xchg
jno
icebp
mov
xchg
push
and
ljmp
cli
mov
in
out
jl
inc
xchg
imul
xor
mov
inc
shll
rorb
pop
push
mov
lret
inc
ja
cmpsb
and
stos
lods
push
adc
mov
lret
xor
dec
xchg
or
push
push
sbb
inc
push
dec
shll
lea
cli
push
cli
cmp
out
pop
sub
mov
jge
out
repnz
pop
shll
sub
push
cmp
add
ret
pop
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
push
mov
andl
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
mov
xor
mov
or
add
adc
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adcl
xor
xor
add
mov
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
adc
movl
or
movl
movl
xor
movl
mov
xor
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
mov
sub
or
mov
sub
mov
xorl
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
xor
xorl
add
movl
cmp
movl
jb
addl
mov
add
mov
xor
add
and
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbbl
xor
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbbl
add
sbbl
imul
xor
mov
add
mov
sub
movl
cmp
movl
ja
mov
xor
orl
add
jmp
mov
mov
xor
xor
mov
adc
add
add
imul
mov
sbb
mov
or
mov
sub
cmp
ja
jmp
ljmp
insl
imul
in
mov
jle
mov
jle
clc
fiadds
loopne
push
and
ja
js
inc
jb
add
mov
mov
lret
outsl
mov
idivl
mov
pop
test
mov
test
pop
jns
inc
roll
data16
push
std
les
cltd
mov
mov
pop
or
or
add
stos
sub
push
push
out
mov
mov
les
test
out
jae
and
mov
ret
and
dec
shlb
incb
dec
out
fdivrp
popa
adc
les
jo
arpl
lock
leave
mov
mov
and
push
bound
push
rcrb
nop
nop
iret
cs
push
sarl
inc
pop
lea
mov
lock
adc
xchg
roll
ss
inc
mov
push
out
out
fwait
orb
addb
pusha
pop
fdivp
sbb
lods
adc
adc
mov
and
dec
inc
xchg
testb
xchg
mov
pop
js
loop
outsb
cltd
lret
shlb
cmc
icebp
popa
mov
ret
inc
fdivr
add
notl
fsub
mov
bound
inc
dec
adc
sbb
mov
mov
fists
xor
cmp
push
xor
xlat
adc
inc
fucomp
xor
pushf
sete
mov
fdivl
mov
add
lock
stc
aaa
sti
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
rorb
push
mov
push
stos
mov
add
jle
mov
jle
sahf
jo
dec
pop
pop
fnstenv
insl
pop
and
mov
out
insb
xor
sub
fnstsw
adc
inc
js
test
lea
loopne
scas
scas
or
lcall
push
add
outsb
or
test
pop
cs
mov
jns
imul
jnp
mov
xor
ret
sub
repz
mov
bound
sbb
aaa
mov
sub
mov
push
das
mov
scas
push
xchg
lret
xlat
xchg
mov
jae
and
sbb
in
jl
insb
mov
jecxz
jmp
loop
add
fmuls
insl
inc
mov
xor
dec
ds
bound
pop
pop
pop
jno
cmp
add
hlt
adc
push
popf
aad
push
sahf
testl
dec
cwtl
out
sbb
pop
lds
mov
jecxz
xchg
loope
adcl
jle
pminub
cmc
es
inc
xor
in
pause
push
stc
aam
stc
xchg
testl
or
out
mov
xor
pop
and
mov
push
int
out
add
jg
lds
adc
stos
push
shrl
inc
mov
fisttps
mov
nop
pop
cli
sarl
sub
pop
inc
xchg
loope
lods
adc
pop
imul
sbb
dec
sub
je
sarl
pusha
xchg
popl
loop
xchg
in
dec
fistps
and
cmpsl
mov
xor
jmp
mov
mov
jmp
fs
popf
insl
pop
gs
xchg
popl
push
adc
jle
jg
jle
dec
pop
fs
test
lods
scas
dec
mov
xor
lods
fs
outsl
mov
dec
stos
stos
sarb
cmpsl
mov
mov
ret
mov
inc
xor
mov
xchg
jle
mov
inc
jmp
enter
pop
fistl
int
movsl
mov
cmp
mov
fnstenv
out
iret
scas
and
inc
cmp
push
xor
pop
inc
sub
push
testl
mov
test
and
mov
dec
lahf
jmp
sub
je
or
ss
xchg
mov
ret
add
cmc
repz
jo
in
jecxz
sub
mov
fwait
test
insb
push
cmp
dec
aad
dec
mov
mov
loopne
in
dec
dec
inc
int
sub
cmp
lahf
popa
movsb
dec
cmp
lock
mov
popa
mov
mov
jecxz
rcrl
mov
fiaddl
ss
xor
xchg
or
push
mov
jne
mov
add
adc
mov
jbe
cld
push
xlat
repnz
jbe
mov
inc
xlat
movsl
leave
arpl
mov
jge
test
push
mov
insb
pop
mov
xchg
fimull
pusha
mov
insl
ljmp
std
push
pop
xchg
xchg
sub
shr
inc
rcll
push
testb
jmp
xchg
push
int3
jns
imul
jl
dec
mov
push
jle
mov
jle
sbb
fxch
pop
sti
dec
jecxz
sub
pop
or
mov
test
xchg
mov
cmp
sahf
sub
cli
stos
pop
das
adc
dec
xchg
mov
addr16
sbb
mov
and
lds
mov
inc
cmp
push
in
roll
mov
aam
cwtl
xchg
mov
pop
cmp
and
inc
test
ret
lea
fsubrs
gs
dec
cmp
push
adc
adc
lret
cs
clc
gs
fisubl
je
sub
insl
rcll
nop
mov
fstl
stos
cmp
and
adc
cmc
or
lds
test
xchg
cmp
test
ret
pop
push
xchg
call
fidivs
push
xchg
lret
test
sbb
aas
pusha
pop
xor
sbb
rcrl
loope
repz
je
pop
adc
aad
and
and
out
out
adc
dec
jbe
or
pop
pop
push
mov
stos
loop
sarl
push
pop
movsb
out
sub
les
or
dec
xchg
add
xchg
jno
test
sbb
mov
shlb
cld
into
add
sub
push
mov
decb
sbb
cmp
xchg
hlt
shll
psubusw
push
push
xchg
cld
xlat
in
fimuls
sahf
orb
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
hlt
mov
add
pop
mov
pusha
jp
jle
mov
jle
sub
jmp
pop
or
fnstcw
icebp
sub
and
rorb
cmc
loopne
rol
xchg
mov
ds
stc
ss
fmuls
push
lods
loop
test
pop
stc
sub
inc
pop
dec
fwait
and
push
jb
fldt
mov
fisubrl
push
scas
clc
or
into
jne
int
pushf
jle
test
into
lahf
std
jp
aam
mov
adc
push
sbb
mov
mov
in
mov
test
pushf
ljmp
sbb
cmp
lahf
push
xchg
stos
and
mov
lcall
outsb
jle
jmp
imul
mov
cwtl
sbb
pushf
fnstcw
sub
jne
orb
mov
in
xchg
cmp
mov
mov
push
push
push
mov
test
mov
add
inc
lret
pop
mov
xor
or
inc
push
jae
lcall
call
jno
test
in
jp
jbe
xchg
stos
pusha
push
call
loope
dec
fsubrs
xor
movl
fs
inc
xchg
sbb
xchg
xchg
and
mov
dec
add
pop
sub
xchg
lods
insb
dec
jl,pn
mov
fdivs
out
jecxz
outsl
imul
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
dec
push
dec
push
cmpsl
xor
sahf
lret
jle
mov
jle
pop
pop
jge
cmc
decb
aam
ds
adc
sbb
cmp
fists
imul
push
or
pop
rolb
jno
dec
pop
cmpsl
pop
popa
into
or
push
sub
fbld
add
pop
ss
jne,pt
jbe
jnp
and
imul
xor
add
div
inc
push
out
stc
call
push
pusha
jne
mov
dec
inc
or
pushf
loop
rcrl
fldt
xchg
pop
int3
lea
mov
mov
call
out
std
mov
dec
ja
sub
repnz
sub
xchg
sub
vmovdqu
jns
adc
stc
ret
xchg
mov
in
dec
pop
dec
iret
xchg
inc
cs
into
add
daa
sub
ror
dec
inc
mov
jle
push
leave
leave
data16
push
sbb
pop
jns
mov
jns
in
xor
ret
in
lock
je
test
xor
inc
pop
arpl
xchg
lret
mov
lock
sbb
dec
repz
sti
repnz
bsr
mov
jno
jecxz
dec
fidivs
lods
or
pop
dec
out
sahf
aas
movl
push
sar
ljmp
sub
test
out
push
mov
jle
daa
xchg
sarb
xchg
enter
cwtl
jmp
mov
sub
imul
rolb
push
in
mov
mov
mov
mov
jmp
andb
addw
les
jle
mov
jle
mov
call
je
push
rcrb
test
jg
push
movsb
idivb
sub
xor
lods
mov
outsl
cmpsb
js
cli
ficomps
data16
jp
popa
and
pop
int
xchg
dec
ljmp
add
jnp
rcr
lods
fsubrs
imul
rorb
dec
lcall
mov
push
or
xchg
mov
xor
or
xor
mov
and
imul
out
pop
test
adc
shl
pop
add
dec
out
and
outsb
ljmp
fidivs
adc
loop
pop
bound
sbb
add
inc
in
cltd
andb
inc
push
xchg
testl
mov
and
mov
pop
and
push
sbb
sbb
addr16
orl
outsb
push
int3
iret
pop
pop
stos
adc
scas
xor
pop
divb
mov
lret
mov
es
jp
into
sub
jecxz
mov
dec
aam
inc
out
lods
or
shll
addl
pop
dec
xchg
mov
cmp
sbb
lahf
mov
jmp
sti
sti
lret
jl
xchg
lock
out
pop
aad
cmp
std
mov
scas
test
sbb
ss
xchg
jge
or
jo
mov
in
jmp
test
xor
push
mov
xor
insb
stc
ret
xchg
sub
jle
jg
jle
xor
fs
in
ja
sub
mov
and
xor
clc
fs
mov
scas
and
jo
fcmovne
js
ss
pop
mov
movb
jmp
sub
jge
push
mov
inc
mov
jbe
mov
rcrb
pop
xor
subb
pushf
push
adc
movsb
jnp
xchg
xor
xor
pusha
xchg
out
mov
xchg
xchg
inc
jno
xor
xchg
push
testl
cmp
xor
sbb
cli
xor
and
jl
subl
test
xor
es
mov
out
nop
lahf
std
cs
popa
mov
inc
jne
sbb
pushf
jo
mov
stos
movsb
outsb
rcr
add
jnp
sbb
fwait
mov
idivb
scas
jb
lea
rorb
fstpl
nop
xorb
pushf
jmp
daa
sub
jmp
mov
or
out
pavgb
lock
inc
add
adc
inc
push
cmp
mov
lret
cmp
jle
pop
out
add
in
inc
loopne
push
imulb
test
pop
jns
movsb
push
push
movsl
imul
push
jmp
and
int3
jecxz
das
pop
inc
xchg
sbb
pop
sbbb
lcall
dec
popf
xlat
lods
or
mov
mov
mov
mov
mov
xor
add
jmp
in
push
adc
movsl
aas
push
pushl
jg
jle,pn
mov
jle
popf
push
inc
cld
mov
filds
enter
add
mov
fldl
out
xor
and
inc
pop
mov
dec
andb
outsl
loop
push
mov
xor
sub
mov
add
jo
dec
js
push
xor
sbb
cwtl
xorb
push
jo
pop
addr16
mov
inc
fcomp
les
mov
lea
insl
shr
scas
xor
push
loop
add
nop
jae
dec
insl
dec
ljmp
jle
rorl
pop
push
push
in
or
mov
cmp
mov
sub
enter
inc
mov
sbb
test
add
aam
jp
stos
cmpsb
mov
cmc
mov
pop
pop
gs
pop
cmp
pop
and
ret
leave
jecxz
pusha
notl
sti
stc
out
lret
pusha
pop
jo
inc
leave
xchg
jge
dec
sbb
lret
sub
lods
push
xor
call
loop
sub
lea
mov
dec
loopne
aas
insb
pop
aam
inc
mov
fcmovnb
xorl
sub
inc
or
je,pt
out
insb
test
xchg
and
and
push
mov
cmc
fnstcw
ds
pop
add
sub
repnz
gs
mov
fdivrs
xlat
mov
stc
jle
push
mov
ret
and
xor
lahf
test
in
pop
push
in
xchg
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
jmp
testl
xchg
and
das
jle
mov
jle
gs
test
mov
inc
out
xchg
pop
and
pop
cmpl
int3
rcl
lret
cmp
add
sbb
push
lcall
mov
sbb
jge
repz
or
pop
pop
mov
mov
adc
shll
xchg
adc
fsub
popf
push
pop
mov
sqrtps
and
insl
dec
in
fcomps
adc
jae
or
cmp
frstor
and
in
hlt
mov
nop
in
cmp
add
dec
xchg
pop
jge
cmp
scas
out
mov
mov
or
xchg
xchg
fwait
sub
std
jns
or
xor
mov
mov
fcoml
mov
cmp
fs
sub
mov
push
sub
cmp
xchg
pop
mov
into
inc
mov
pop
fs
xor
scas
and
xor
xor
jns,pn
jmp
lods
sti
test
jae
cmp
sub
lods
adc
and
adc
imulb
mov
or
xchg
fwait
lods
or
insb
cmp
lds
jmp
mov
mov
popf
cmp
jbe
xor
sbb
xchg
and
int
icebp
mov
popf
shlb
imul
jl
cld
pop
and
insb
xchg
push
call
je
sahf
fidivl
pop
mov
add
or
mov
clc
add
imul
jmp
mov
jns
dec
mov
loopne
jne
and
mov
jle
xchg
aaa
mov
pop
call
dec
divl
add
fwait
lods
repz
jp
mov
cmpsl
js
mov
insb
mov
mov
push
add
mov
hlt
and
add
movsb
or
dec
cmp
popa
cwtl
cmp
add
jmp
xlat
divl
cli
test
mov
push
cmpsl
pop
add
subb
and
leave
js
in
pop
xchg
cmc
ret
xor
cs
add
loopne
jl
movsl
jae
adc
xor
push
bound
sub
cmp
or
push
xor
inc
cwtl
idivb
mov
adc
outsb
xchg
mov
dec
aad
xchg
jo
dec
lcall
adc
cld
inc
inc
cli
popa
ds
ss
les
aaa
test
mov
movsl
fwait
notb
pop
xchg
inc
mov
dec
faddl
dec
push
pusha
and
mov
xchg
cmp
hlt
or
hlt
rcrb
and
mov
gs
push
aas
lret
in
lahf
mov
insb
aaa
add
test
or
sub
mov
cmpsl
ficomps
nop
or
push
mov
pop
push
test
cmp
sbb
hlt
neg
cmp
add
pushw
mov
je
lods
fs
sub
dec
imul
data16
mov
cmp
mov
ss
pop
notb
setge
sub
lea
cmp
jbe
mov
mov
xor
add
jmp
pop
mov
sbb
or
aas
sbb
pop
inc
and
mov
jle
lods
not
lock
dec
push
loop
push
or
mov
mov
jnp
pop
adc
cmpsl
xor
inc
pushf
pop
hlt
test
jb
pusha
pop
sub
and
push
into
arpl
jae
dec
sti
mov
mov
fnstsw
or
and
sbb
jmp
pop
movsb
push
call
cmp
mov
clc
sbb
cmp
add
clc
aad
fdivrl
adc
dec
adc
inc
cmp
xor
cmc
and
stos
enter
mov
push
sbb
mov
rorb
idivl
test
lret
sti
hlt
imulb
or
inc
mull
cmp
ss
out
lods
cli
outsl
in
sbbl
filds
test
xor
dec
stc
pop
jl
xlat
rorb
lret
cmp
subl
faddp
rol
stos
fs
mov
lock
and
shll
movsb
and
fs
dec
cmp
das
mov
push
adc
mov
push
sub
sub
cwtl
add
out
jno
jne
call
outsl
mov
gs
in
push
imulb
mov
or
pop
popa
lret
xor
adc
into
add
push
xor
adc
mov
pushf
mov
loop
shlb
jb
das
aam
adc
outsb
addl
pop
testl
sbb
add
sbb
addr16
ljmp
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
or
push
or
mov
sbb
mov
movzbl
add
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
mov
xor
mov
push
mov
add
jmp
sub
in
cmpsl
insl
ret
mov
pop
shlb
jle
jno
jle
stc
mov
xchg
pop
sahf
lret
push
gs
shlb
enter
jbe
mov
pop
rcl
mov
push
mov
outsb
pushf
addr16
cli
cli
mov
and
push
imul
bound
fistps
shrl
cmpsb
inc
or
xor
pop
cmp
mov
xchg
mov
lods
movsb
leave
lods
pop
mov
jbe
cmpsb
jnp
sub
insb
pop
jbe
lret
lcall
mov
push
test
call
into
or
test
lds
rcrl
push
xchg
sahf
repz
lret
jns
push
lcall
sbb
mov
mov
jl
xchg
mov
imul
and
mov
fbld
mov
and
pop
mov
cmp
fists
rorb
ss
fwait
icebp
dec
fcomps
or
aas
push
cmp
mov
js
roll
dec
arpl
pop
bndstx
jae
dec
mov
lods
push
push
je
loope
inc
sub
xlat
jo
xor
mov
insb
pop
jecxz
pop
in
sub
and
ficoms
pop
dec
out
mov
fucomp
dec
imul
mov
sti
clc
mov
ja
decb
xor
xor
addl
push
test
or
insb
cmp
sub
gs
inc
push
inc
mov
arpl
cmp
lcall
popf
cmp
lods
lret
dec
pop
push
test
gs
fprem
pop
jle,pt
push
mov
push
aas
jb
frstor
mov
xchg
mov
mov
dec
xchg
jnp
cmp
jno
js
pcmpgtw
sahf
sub
add
jle
inc
and
sar
movsl
hlt
icebp
loope
aas
stos
xor
mov
ret
adc
mov
inc
cmp
loope
cs
lret
fcom
mov
mov
lds
and
insb
cmovo
mov
sahf
or
mov
fisubrs
mov
addr16
and
jl
sub
dec
test
xchg
mov
mov
xor
dec
push
jne
test
dec
les
outsl
std
ss
lret
out
cmp
or
sub
push
mov
cmp
movsb
push
sub
rorl
push
xchg
fs
outsl
addb
addr16
mov
lods
cmp
inc
iret
fsubrp
push
jg
lret
push
leave
idivb
dec
lcall
lret
inc
aad
jae
leave
stos
stos
mov
xchg
daa
rorl
dec
pop
not
cmp
mov
lods
push
mov
push
leave
sub
pop
inc
xor
mov
je
fs
pusha
push
adc
push
push
aas
mov
or
imul
xor
in
stos
scas
cmp
mov
xchg
pop
rcl
push
cmp
gs
mov
pop
jge
mov
ficomps
lret
mov
or
push
mov
enter
bound
xchg
sbb
fbld
gs
sub
mov
or
lock
or
ds
or
stc
mov
jp
mov
sbb
int
test
cwtl
push
loop
add
popa
outsl
mov
subl
dec
out
xchg
jo
std
outsl
stos
mov
or
or
cmp
je
mov
mov
xor
mov
jmp
cmpsb
loop
fmuls
jge
xor
fwait
adc
jle
mov
add
lret
sti
data16
pop
pop
xchg
jns
les
sbb
out
or
sti
push
fsubrp
sub
push
fs
imull
and
push
jne
pop
sub
insb
ljmp
inc
mov
xchg
in
addps
mov
jae
dec
cltd
cld
test
pusha
push
ds
inc
test
adc
fneni(8087
pop
repnz
jl
mov
jns
arpl
sub
or
shll
sbb
mov
dec
cli
add
adc
mov
xor
and
pop
and
shll
rorl
fcoms
filds
sub
cs
or
popf
mov
inc
or
and
jb
pop
and
and
movsl
dec
inc
xor
lcall
adc
pop
subl
lods
push
jge
sbb
addb
cmp
hlt
pop
outsb
in
int3
adc
dec
or
add
jl
pop
ret
idivl
mov
jo
sbb
push
inc
sbb
in
mov
push
sub
sbb
mov
mov
jae
jmp
jbe
inc
das
loop
lahf
xor
mov
mov
aaa
js
dec
mov
sbb
pop
stc
and
notl
sbb
cmp
ret
cmp
push
test
jnp
push
stc
enter
dec
fdivrs
xor
lret
clc
adc
cmp
pop
enter
test
xor
rorb
cmp
or
lods
nop
inc
xor
push
mov
jno
or
dec
jno
jae
loopne
test
jnp
out
jnp
add
cmp
and
jnp
das
ds
xchg
push
adc
add
xchg
push
cmp
sbb
ficoms
outsl
cmp
movsb
fistps
inc
mov
xor
iret
out
xchg
fbld
test
push
pop
fsubl
gs
inc
aas
iret
xor
sahf
push
inc
sbb
nop
xor
jo
add
data16
data16
arpl
lds
add
dec
jno
add
imul
or
or
push
pop
ficoms
jmp
mov
jge
push
sub
loop
xchg
das
inc
adc
sub
es
lods
testl
jge
push
addr16
mov
outsb
sbb
test
xchg
push
out
xor
insl
fistpl
mov
das
dec
push
push
sbb
add
inc
and
pop
sub
mov
add
add
outsb
sub
push
mov
jp
sbb
inc
outsl
fsubrp
push
or
pop
movsb
and
int
add
fnstcw
mov
test
out
mov
push
test
xchg
mov
xchg
and
lock
mov
stc
dec
dec
lret
jmp
add
in
aad
sub
jp
dec
insb
divb
and
into
addr16
sbb
mov
in
fprem
frstor
sahf
repnz
xchg
shll
je
adc
loope
pop
mov
mov
mov
ret
mov
xchg
add
scas
push
push
adc
rcrb
lcall
jno
mov
lcall
mov
rorl
mov
inc
pop
movsl
out
daa
push
outsb
jno
icebp
xchg
sbb
sub
inc
gs
cmp
jg
sub
jge
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
jmp
testl
arpl
jmp
jle
mov
and
pusha
jecxz
cli
xchg
fmuls
cmp
pop
mov
mov
sub
xchg
xor
push
mov
mov
gs
aam
leave
sub
fiadds
fidivrl
jecxz
xchg
sub
push
adc
stos
mov
repnz
repnz
xchg
mov
adc
mov
dec
lods
out
mov
add
aaa
mov
fstcw
and
rorb
inc
sbb
fsubrs
jae
push
or
shrb
lret
popw
push
nop
jecxz
in
mov
or
cltd
jge
pop
mov
mov
out
int3
xor
sbb
js
xchg
push
mov
arpl
push
sub
data16
imul
stos
pop
push
pop
std
ja
xchg
adc
outsl
fisttpll
aad
stos
ret
add
fwait
xchg
push
out
stc
ljmp
stos
cli
inc
xor
icebp
mov
sub
ficoms
cltd
or
push
mov
push
push
xchg
int
aaa
xchg
mov
mov
mov
pop
xchg
cmp
lret
sbb
sbbb
mov
xchg
push
dec
mov
inc
adc
jp
mov
inc
fwait
pop
and
or
stc
pop
xor
mov
bound
cld
data16
les
std
rcll
stos
push
inc
dec
cmp
aaa
mov
jp
sub
dec
inc
mov
xchg
outsb
push
pop
jl
into
or
mov
xor
lock
fcomip
jns
je
in
or
insb
dec
xlat
push
pop
xchg
adc
inc
jmp
inc
xor
adcl
inc
mov
loope
adc
inc
mov
inc
cld
push
popl
cmpsl
adc
cmpsl
fsubrs
jnp
push
loopne
stos
mov
xor
in
enter
repnz
cmpsb
out
int3
fs
into
mov
andl
hlt
fmul
call
lea
push
lods
aam
cld
inc
mov
test
mov
jno
sub
adc
add
scas
cmc
loop
filds
scas
popf
into
sbb
inc
mov
enter
pop
jo
inc
add
and
neg
imul
lret
das
inc
div
mov
js
arpl
fldl
das
xor
mov
and
mov
scas
movsl
cs
fwait
leave
cmp
sbb
leave
decl
in
xchg
ret
negl
pop
scas
cld
or
pushf
sti
xlat
subl
out
sub
lret
push
pop
pop
sbbl
and
mov
loop
insl
in
xlat
outsb
dec
in
jns
jecxz
xor
jbe
xchg
pop
mov
push
hlt
jb
mov
mov
aaa
in
lcall
mov
pop
mov
es
adc
je
sti
xor
fildl
out
in
adc
pop
sbb
aaa
and
cmp
arpl
jle
outsb
lock
push
fldcw
gs
jl
jo
mov
and
lcall
lods
mov
and
aad
stos
adc
pop
sbb
mov
fisubl
add
pushf
and
repz
imul
xor
cmp
mov
inc
pop
xor
imul
mov
fwait
lods
insl
mov
ret
or
sti
lods
subb
push
adc
xor
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
fdiv
es
jge
jge
jae
dec
pusha
pop
xor
lahf
aas
jle
mov
dec
mov
mov
inc
mov
lea
pop
mov
clc
test
cmp
add
mov
nop
jne
out
add
xchg
adc
jmp
inc
cltd
adc
xchg
xor
sbb
mov
les
xchg
das
cmp
cmpps
and
sub
repnz
adc
fdivrl
sbb
push
cmp
loop
jge
gs
pop
das
mov
jbe
popf
pop
rol
push
mov
les
xchg
das
xor
pop
sbb
jge
and
xchg
push
push
popf
jb
xor
cmp
scas
xchg
daa
int
pop
pusha
aaa
cld
gs
add
jae
loop
call
mov
sub
mov
loopne
ficomps
cmp
xchg
iret
fwait
xchg
add
mov
cmpsl
cmpsb
je
adc
adc
flds
into
sub
sub
std
or
jp
lcall
daa
in
shll
sbb
mov
popa
mov
bound
push
pop
add
mov
xor
hlt
jl
xchg
cmp
aaa
push
das
add
notb
sub
mov
iret
mov
ss
loopne
or
outsb
test
lret
es
or
add
jbe
jnp
dec
mov
ljmp
out
push
popa
mov
lret
push
daa
xchg
aas
sbb
in
cmp
imul
sbb
sbb
cmp
lods
xchg
imul
inc
mov
xchg
gs
mov
bound
mov
mov
js
pop
push
dec
mov
xchg
adc
push
sub
mov
jns
test
orl
xchg
xchg
xchg
mov
cmp
cmp
jmp
nop
sbb
pop
mov
lahf
fidivrl
fucomip
mov
rcrb
fcompl
adc
call
int
push
pusha
fistps
push
scas
rcrb
test
sbb
shlb
roll
xor
add
outsb
scas
push
sti
nop
ja
mov
or
pop
dec
adc
pop
jl
mov
cld
movsl
outsb
movsb
push
xor
movsl
lcall
rcl
cmp
orb
outsb
mov
add
adc
jnp
push
ss
xor
test
imul
fs
in
fstcw
fcmovne
jns
pop
scas
pop
or
dec
add
hlt
pop
push
in
das
ss
sub
jle
ret
sbb
inc
mov
loope
lret
push
add
and
int
scas
loope
fstpl
enter
fwait
xchg
in
xchg
dec
pop
push
cmp
in
or
enter
hlt
inc
test
dec
in
mov
mov
icebp
divw
cltd
xchg
mov
adc
adc
adc
mov
jae
mov
sbb
pushf
outsb
daa
pusha
push
rorl
jnp
scas
push
lret
popf
mov
popa
xor
xor
cltd
inc
dec
jecxz
ds
mov
lds
lcall
inc
or
into
jno
dec
in
test
repnz
sti
stos
and
repnz
push
cli
das
mov
into
and
fisubs
and
fcomip
fninit
ljmp
lcall
xor
leave
ret
push
mov
mov
add
mov
xor
sub
incl
mov
push
sbbl
mov
xor
movl
cmp
movl
je
mov
decl
jmp
fcmovnb
dec
filds
jnp
cmp
fidivs
jle
jmp
jle
dec
xchg
nop
mov
sub
mov
xchg
xchg
lea
jns
add
arpl
mov
hlt
lret
sbb
jmp
mov
xchg
add
pop
insl
lock
dec
pop
int
or
lock
mov
aad
rcrl
add
push
scas
aaa
lds
mov
js
aam
stos
pushl
shrl
add
mov
add
inc
js
xchg
imul
adc
loope
add
sbb
les
out
jmp
jmp
pop
jae
or
fisttpl
jne
pop
xchg
mov
dec
loope
jg
cmp
pop
arpl
lea
mov
adc
rorl
xchg
dec
out
icebp
lea
mov
mov
mov
sti
and
addb
adc
or
pop
push
dec
sub
add
cmpsb
out
mov
addr16
cmp
loop
and
pop
test
xor
xchg
push
into
inc
xor
mov
and
adc
mov
imul
aad
xchg
call
ret
mov
add
jbe
out
pop
iret
adc
ror
cmp
xchg
ds
cmp
cld
push
pop
jnp
jns
mov
xchg
push
inc
push
inc
fidivrl
fiadds
pop
mov
cmp
mov
push
dec
idivl
pop
imul
push
fisttps
imul
pop
pushf
imul
inc
push
lea
pop
cmp
jle
bnd
ja
jge
cmp
and
cmp
xchg
aaa
lret
call
ds
test
pop
addr16
addl
testb
dec
test
adcb
fnstenv
cli
pop
dec
and
xlat
or
stos
ret
aad
shrl
jo
jp
gs
lret
push
sub
xchg
pop
fadds
xchg
arpl
aas
jp
popa
ss
adcb
and
movsl
nop
mov
mov
adc
ficompl
mov
xchg
stc
lcall
fmull
fisttps
push
lods
rcrl
mov
adc
pusha
stos
xchg
push
lock
mov
push
or
jnp
dec
mov
or
pop
lods
pop
lea
pop
cli
or
lret
cmp
pop
sbb
movsb
mov
je
mov
or
stc
stos
sub
repnz
mov
jge
gs
dec
jp
mov
xchg
mov
xlat
xor
fdivrs
in
ret
fwait
mov
mul
pop
out
and
mov
add
movsl
lret
and
lret
push
ss
push
add
ja
test
call
mov
mov
insb
jb
outsb
aad
mov
pop
addr16
jb
sbb
jae
in
ja
test
dec
dec
into
test
and
jae
out
fistl
movsb
ficompl
jnp
xchg
lds
mov
push
ss
cmpsl
data16
lahf
mov
mov
outsl
aam
xchg
test
mov
movsb
out
inc
add
add
xor
movl
cmp
movl
jne
add
mov
add
movl
jmp
mov
xorl
xor
add
movl
jmp
xchg
fcmove
pop
fstpl
dec
or
pop
add
jle
jmp
jle
pop
les
lret
in
mov
dec
cld
jbe
add
pusha
dec
lret
addr16
in
test
cmp
mov
iret
in
int3
pop
adc
imul
shrl
jnp
push
push
sbb
xchg
push
sub
jg
adc
test
in
in
mov
fnstcw
jb
sub
cmpsl
push
lods
pop
loop
loopne
stos
mov
test
sbb
stos
cmpsb
cmp
sbb
dec
push
sti
mov
jae
push
arpl
pusha
mov
lret
out
popf
and
hlt
push
pop
mov
frstor
cmp
scas
jns
je
jnp
das
imul
insl
dec
jae
dec
mov
stos
incl
jne
pushf
or
rcll
push
jecxz
push
ljmp
cmp
daa
xchg
xor
ret
sub
adc
mov
jae
loopne
sub
mov
cmc
adc
std
dec
inc
fiadds
sub
rcll
les
mov
movsb
fsubrl
jnp
xor
aam
rorb
add
adc
cmpsl
lret
push
pushl
leave
jnp
xchg
std
add
sub
stc
push
bound
sub
jno
push
mov
lods
movsb
ljmp
movsb
push
int
mov
stos
or
inc
xor
mov
jb
jne
cwtl
enter
shr
jne
jl
into
add
nop
xor
fdiv
movl
sti
adc
sarb
sbb
popf
dec
fisubl
outsb
cld
inc
int3
stos
and
xchg
push
leave
push
andb
jne
inc
or
jg
xor
bound
jb
js
jle
mov
pushf
xor
mov
add
pop
add
int3
pusha
add
mov
nop
jmp
xchg
push
xlat
cmp
std
jmp
pop
cmp
cmp
add
dec
test
rorb
in
pop
dec
sbb
jb
cltd
jbe
cld
inc
pusha
les
mov
add
dec
push
adc
das
repz
sub
xchg
mov
aad
and
aas
or
and
jb
daa
outsb
xor
jg
test
js
addb
sarl
sbb
shll
add
xor
adc
inc
cltd
jmp
test
lahf
daa
pop
sti
pop
sub
inc
pop
sti
inc
popa
fildl
inc
fs
jp
sti
and
xlat
pop
test
mov
cmpsb
adc
cltd
wrmsr
cmpsb
je
xchg
xor
pop
mov
pop
insb
outsl
imul
or
imul
insl
int
addl
sub
pop
cs
mov
imul
jle
enter
cmp
adc
decb
outsl
cld
and
fwait
inc
sub
sbb
push
jae
int
js
scas
cmp
sub
cmp
mov
outsb
clc
xchg
cmp
xor
xchg
pop
xchg
xchg
add
stos
inc
inc
std
int3
inc
je
or
mov
mov
inc
mov
in
xor
push
jl
lock
sbb
xorb
mov
call
inc
add
jmp
repz
inc
or
pop
inc
and
sub
mov
lret
jmp
jle
gs
mov
into
jmp
or
push
and
xor
sub
shll
jp
push
jnp
inc
push
dec
add
in
insb
aas
shlb
lahf
pop
repz
mov
cmpsb
daa
imul
adc
sub
out
xchg
ror
bound
lcall
or
mov
test
in
cmp
add
sbb
mov
dec
mov
mov
mulb
ds
outsb
cltd
cmp
add
faddl
dec
popa
in
mov
cmp
aas
adc
lahf
stos
jg
test
rorb
pop
cwtl
inc
jo
adc
pop
test
addr16
fwait
clc
and
ds
xchg
icebp
push
mov
sub
rorb
pop
lock
jae
mov
movl
jmp
or
push
repnz
insb
xor
pusha
mov
and
loopne
std
adc
pushf
fsub
enter
or
mov
sub
xor
pop
cmc
sub
fbld
mov
popf
xor
repz
stc
inc
mov
int3
out
test
rdpmc
inc
mov
mov
das
jmp
pop
jle
mov
mov
ficompl
jo
gs
add
xchg
fsubrs
jge
test
cld
mov
lret
dec
bnd
pop
push
mov
movsl
xor
push
sarl
inc
and
add
xor
popa
sarb
fdiv
cmp
add
out
and
mov
inc
add
hlt
inc
ss
ja
jne
imul
ja
jge
loopne
inc
xchg
push
adc
daa
pop
xor
mov
jb
dec
shll
pop
imul
jecxz
fisttpl
sarl
xchg
repz
cmp
pop
dec
or
xchg
and
mov
inc
mov
push
push
daa
call
or
iret
jg
pop
dec
pop
xor
pusha
andl
mov
shll
cmp
sub
pop
pushf
fwait
cmpsl
jg
pop
push
mov
das
dec
xor
test
sbb
les
pushf
adc
dec
inc
lret
inc
fcmove
aaa
lahf
jae
xchg
loope
fcomps
adc
icebp
add
push
stos
fistps
out
sbb
cmpsl
or
xlat
cmp
cmp
pop
jae
call
push
fisubrl
xchg
pop
adc
xchg
fildll
ds
mov
xor
adc
xor
leave
ficompl
int3
in
jecxz
push
sub
ss
lcall
les
pop
sti
aaa
loop
dec
mov
repz
adc
mov
add
cltd
lret
or
or
mov
mov
ret
xlat
pop
inc
sub
xchg
fistpll
push
lret
mov
shll
pop
arpl
int3
inc
mov
lock
in
cwtl
movsl
add
rcrb
je
adc
sub
mov
pushf
mov
inc
or
add
lret
and
jg
cwtl
pop
or
add
mov
push
cmp
jmp
enter
sub
repnz
push
dec
inc
jo
lea
ret
and
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
sbb
mov
xorl
add
addl
movzwl
mov
xor
movb
lea
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
sub
negl
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
movl
add
movl
jmp
rclb
cmpsb
js
pop
mov
xchg
int
jle
jg
jle
addr16
push
push
adcb
push
divl
sbb
jae
lret
mov
mov
cmp
jp
sbb
ljmp
cmp
stos
ficompl
test
test
addr16
jmp
mov
icebp
pushf
icebp
lock
cmp
or
rorl
mov
popa
cmp
inc
aaa
pop
test
mov
jns
in
pop
ljmp
mov
sub
roll
or
addr16
ljmp
jge
lea
ds
dec
popa
repnz
pop
xchg
in
pop
mov
pop
and
sti
push
sub
sub
repz
mov
mov
inc
cmpsl
add
out
push
add
lret
outsl
repnz
sub
aas
xor
push
xor
sahf
jl
push
std
pop
pop
sub
dec
movsb
shlb
push
mov
das
test
add
mov
fdivp
rcrl
mov
adcl
add
xchg
jg
cli
ja
push
in
fcomps
sahf
imul
out
mov
pushl
fidivs
bound
and
mov
push
mov
sub
xor
mov
subl
add
jmp
mov
mov
movl
inc
jmp
mov
jbe
pushf
pop
dec
fsubs
loope
scas
or
jle
sarb
jle
ds
add
cmp
sbb
fidivrl
cwtl
test
and
je
lds
push
mov
mov
imulb
pop
arpl
mov
and
in
fistl
xchg
or
mov
mov
fisttpll
add
decl
xor
pop
jne
push
jge
mov
in
pop
dec
lods
jl
inc
adc
inc
or
jle
pop
repnz
outsl
cltd
pop
xor
dec
cmpb
mov
jmp
and
addl
dec
aad
or
jnp
sbb
data16
jge
outsl
test
rcll
lahf
fbstp
mov
ficoml
gs
push
sbb
sti
aad
stos
ret
lods
cmp
add
idiv
test
jnp
mov
pop
std
rcl
test
out
sahf
xor
repnz
jecxz
rorl
fdivl
movsl
pop
cmp
ljmp
test
popa
clc
movsl
loop
cmc
outsl
push
sbb
cli
push
aaa
xchg
int
jnp
dec
add
and
cmp
push
clc
test
mov
mov
js
stos
inc
ds
and
push
rolb
lds
mov
add
out
mov
dec
cmp
jb
mov
mov
xor
add
cmp
je
push
push
jmp
insb
lds
cmpb
xchg
fsts
sub
sarb
jg
jle
jb
out
add
cwtl
rcl
loopne
rol
stc
dec
xor
je
int
cmp
mov
je
push
adc
sub
adc
fs
lds
jnp
jle
xor
adc
mov
mov
icebp
jne
sub
gs
dec
inc
test
add
stc
and
inc
add
jp
decb
inc
xor
cli
mov
mov
jo
roll
outsb
stos
aaa
push
stc
adc
mov
or
fwait
imul
jecxz
jae
push
rolb
mov
push
lds
cmc
adc
fsubrp
in
cmpl
mov
xor
sub
decb
jo
loope,pt
subl
cs
push
pop
sarl
insb
cmp
lods
outsb
out
xchg
repz
jg
sbb
shll
inc
stc
push
pop
sub
sbb
adc
jbe
jnp
cwtl
xchg
test
xchg
jmp
add
sbb
xor
js
mov
into
pop
jno
push
add
mov
idivl
sbb
incl
cli
fidivrs
scas
pop
hlt
bound
mov
push
mov
sbb
jnp
pop
or
jmp
jae
cmp
cli
vpaddw
incl
xchg
mov
jle
sarb
jle
repnz
repz
push
shld
adc
inc
imul
rorl
into
xchg
pop
add
arpl
mov
test
push
jb
loope
mov
jne
loopne
shll
lret
jle
push
cltd
movsl
out
add
in
mov
adcb
mov
scas
insl
xor
scas
xor
push
sub
or
je
pop
dec
jns
push
mov
mov
popf
pop
push
lods
pop
push
stc
gs
jbe
jne
sub
dec
aam
sub
push
mov
sbb
dec
mov
or
lahf
mov
mov
pusha
or
jecxz
notb
sub
or
inc
pop
or
outsb
nop
mov
cltd
add
iret
inc
xor
aas
mov
sbb
mov
cmp
pop
test
cmp
pop
pop
or
loopne
or
flds
jl
aam
and
mov
out
or
daa
mov
sub
cmp
xor
rolb
std
pop
xlat
xchg
add
cs
push
testl
push
sub
lahf
dec
lock
xor
add
dec
sbb
jge
hlt
sub
dec
ret
dec
sbbb
test
mov
add
inc
xchg
add
add
jmp
push
fsubs
pop
xchg
push
add
adc
sarb
jle
fadds
jbe
ja
cmp
and
sbb
out
jge
adc
jae
addr16
mov
lret
jae
mov
shll
mov
imul
es
ja
xchg
or
dec
fisttps
mov
sbb
dec
jle
or
sub
sub
mov
in
pop
jne
sub
xor
pop
loopne
push
mov
js
sub
pop
dec
ja
mov
lcall
mov
pop
bound
mov
inc
cltd
jbe
cmp
inc
imul
mov
aad
inc
js
cmp
or
pop
test
test
ret
pop
pop
es
pop
jp
loop
push
inc
mov
pop
xchg
stc
or
test
aaa
data16
dec
shlb
xchg
icebp
fisubl
rcrl
mov
pop
add
add
push
sbb
leave
mov
push
lea
cmp
push
pop
test
cmpsb
push
add
fcomps
xor
je
enter
jne
dec
dec
inc
out
call
popf
dec
outsb
push
xchg
inc
in
xor
xchg
in
lahf
loop
sahf
xchg
lds
mov
mov
xchg
or
in
je
jmp
inc
in
jmp
xchg
sbb
cmp
inc
push
cwtl
pop
xor
pop
ret
cltd
les
sarb
jle
or
dec
cmp
xchg
or
cmpl
out
jp
mov
xchg
movsl
lds
jecxz
push
jge
adc
in
dec
aaa
into
pop
lods
cltd
or
mov
ds
jno
int3
adc
sbb
lea
incl
les
rcl
fbstp
cld
repz
push
gs
inc
adc
mov
je
fisubrs
lcall
or
add
push
xor
sbbb
or
and
ja
add
inc
in
and
jl
scas
cli
mov
push
lock
cmp
mov
ljmp
es
jmp
push
rorb
fildll
xchg
out
jle
jmp
dec
dec
pop
mov
sbb
int3
cmp
sbb
or
shl
mov
shrb
aas
xor
jns
fcom
pop
mov
in
out
push
lret
and
mov
out
enter
scas
mov
inc
sub
jp
int3
ljmp
stos
push
daa
sub
sbb
or
mov
test
mov
pop
lret
or
push
loop
sti
cmpsl
inc
repnz
ljmp
rclb
xor
jo
or
push
dec
sti
dec
popa
sbb
insb
adc
pop
xor
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
jmp
fistpll
aas
or
or
jmp
jle
dec
add
jle
sarb
jle
xor
pop
les
jecxz
mov
dec
call
daa
push
roll
inc
mov
mov
icebp
sub
dec
mov
xchg
or
jle
pop
ret
subb
int3
std
inc
pop
lods
int3
push
cmp
inc
mov
notl
jae
mov
out
neg
iret
lret
push
sbb
popf
sti
lods
sbb
sbb
orb
xchg
sbb
push
and
ficompl
es
push
scas
fucomi
pop
lds
scas
icebp
out
loop
ret
sbb
add
lahf
incb
movsl
test
cmp
movsb
xor
shlb
sub
movsl
daa
mov
push
push
popf
loope
movsb
push
lods
aam
stos
adc
insb
push
xchg
das
mov
aam
aam
mov
ss
mulb
and
mov
jb
jb
mov
mov
jl
and
out
rcrb
sbb
fnstcw
sti
push
xor
dec
mov
mov
xor
mov
insb
in
sub
pushl
sub
mov
lahf
ss
jmp
cmp
sti
dec
nop
pop
xchg
hlt
inc
inc
daa
add
inc
sub
sub
jo
sub
sti
repz
jecxz
icebp
stos
add
inc
clc
mov
xor
add
mov
mov
xor
add
jmp
mov
rorl
dec
rorl
out
inc
test
rol
jle
sarb
jle
jge
or
push
fsubr
fld
push
addr16
fmuls
rdpmc
pop
jl
nop
loopne
jno
scas
or
push
add
jno
fadds
inc
adc
idiv
cmpsl
fnsave
arpl
jg
adc
pushf
cmpsl
outsb
mov
lahf
sbb
fstpt
inc
popf
into
test
xchg
popa
mov
leave
outsl
daa
jnp
and
push
dec
inc
sbbl
fiadds
add
jo
imul
cmc
fs
fisubl
pop
add
les
outsl
xor
jmp
lcall
orb
dec
fnstenv
pop
push
nop
mov
hlt
dec
mov
ds
sub
xor
mov
scas
incl
mov
int3
xchg
adc
jo
xchg
outsb
sbb
sub
sub
jns
fsubrs
movsl
das
pop
repnz
outsb
in
mov
loope
inc
sub
int3
outsb
sub
mov
adc
movsb
sbb
cmp
dec
cs
push
xor
into
inc
xchg
inc
lretw
int3
sbb
pop
mov
imul
dec
dec
lods
repz
pop
push
mov
mov
vmread
iret
lahf
dec
push
es
test
cmp
loop
lods
stc
fisttpll
inc
xchg
or
push
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
jmp
xchg
mov
or
mov
mov
add
adc
sarb
jle
adc
sarb
clc
fldt
mov
cmp
cwtl
andb
popf
add
sbb
inc
pop
idivl
push
mov
mov
rorb
das
andl
adc
add
cmp
test
js
mov
mov
push
loop
cmp
cs
stos
dec
stos
std
mov
sahf
mov
repz
in
xchg
icebp
mov
pop
push
scas
xchg
mov
pop
adc
int3
inc
aas
lea
inc
jae
js
cmp
cwtl
mov
inc
cltd
sub
int3
and
bound
fcomi
add
stc
fisubrl
jb
fmulp
mov
lahf
jbe
push
mov
add
in
int
ss
inc
inc
push
xchg
inc
xchg
adc
in
int
loop
push
das
xor
cli
movsb
dec
sub
mov
dec
repnz
mov
insb
negl
push
popa
xlat
xchg
dec
mov
cmp
dec
jl
rclb
mov
inc
adc
stos
and
mov
sub
and
daa
adc
or
loope
jns
cmc
xor
xor
repz
jge
dec
or
or
sbb
or
pushf
mov
push
sti
add
mov
shrb
pusha
jo
popa
pop
jl
sub
adc
mov
addl
jmp
test
cmp
jge
xor
imul
sarb
jle
std
mov
jnp
mov
mov
xorb
mov
jae
dec
adc
test
sbb
lea
xchg
fsubrl
push
outsb
sub
and
loopne
fxch
loope
mov
push
fldcw
das
shlb
xchg
clc
stos
push
lea
jge
or
fdivl
pop
cmp
mov
adc
mov
xchg
pop
ret
mov
pop
rorb
popf
inc
cld
decb
cwtl
pop
push
lea
leave
and
test
mov
ss
or
pop
jbe
or
mov
inc
ja
cmc
bound
dec
pop
add
dec
arpl
push
and
shll
filds
mov
ja
mov
daa
xchg
dec
inc
and
in
loope
jmp
mov
fwait
into
arpl
nop
imul
andl
mov
test
pop
mov
mov
jae
bound
enter
leave
cmp
pop
mov
out
jne
cmp
inc
jmp
xor
cmp
xchg
and
sbb
or
add
pop
mov
out
cmc
sbb
mov
subl
mov
js
or
fistl
idivb
push
or
shr
add
add
fldl
fstpl
inc
inc
jmp
push
fstpt
sarb
jle
sti
loop
mov
mov
jns
mov
xor
arpl
rcll
dec
dec
and
aad
testb
aad
arpl
sub
stos
mov
xchg
loope
mov
stos
mov
mov
sbb
call
sbb
xchg
lea
fdivs
xor
add
pop
bound
sub
arpl
xor
fsubrl
sub
sub
inc
cmp
pop
lret
push
pop
sbb
jae
stos
jae
or
cmp
or
mov
inc
sub
imul
add
lock
cmc
xchg
loop
adc
adc
pop
cmp
aas
or
sarl
mov
lahf
xor
mov
and
jne
jecxz
movsb
mov
dec
sub
or
cmp
xor
sub
fsubrl
sub
fisttps
jmp
jg
jb
push
pushf
jo
jne
popa
jns
pop
jne
cmpb
addr16
aad
orl
add
out
or
push
mov
or
gs
icebp
pusha
out
dec
inc
xchg
cli
int3
aad
dec
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
neg
mov
movzwl
adc
mov
mov
subl
xor
add
adcl
mov
mov
adc
xor
or
push
movzbl
or
mov
adcl
mov
add
mov
xor
mov
mov
mov
or
mov
dec
mov
sbbl
mov
mov
adc
mov
orl
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
pushl
push
call
cmpl
jb
mov
xor
add
pop
leave
ret
push
mov
mov
jmp
cs
orl
icebp
jne
mov
push
jo
jle
je
pop
pop
ja
xor
fwait
dec
aad
sub
push
je
ficomps
imul
xor
push
das
fcomp
push
test
mov
adc
imul
addr16
addb
fdivl
out
add
sti
int
movsl
lock
sbb
orl
lods
xor
scas
jl
outsl
movsb
adc
es
idiv
shrb
mov
repnz
out
js
inc
adc
push
lock
and
dec
jo
test
push
imul
sahf
stos
xor
cmp
mov
test
sub
fwait
cmp
and
mov
leave
rorb
xchg
bound
outsb
lds
lds
xor
fnstenv
mov
sub
and
adc
jp
mov
loopne
or
cmp
dec
mov
mulb
sub
cli
pushf
test
cmp
add
cltd
mov
cli
fnstcw
jne
jl
cld
fildl
int3
popf
ret
dec
stos
rol
sahf
pop
sub
sbb
dec
sub
cmp
cmpsb
pusha
rcrl
pusha
fists
pop
dec
push
negb
push
sub
push
arpl
push
cmp
dec
xlat
in
add
push
repz
outsb
mov
lret
enter
je
cmpsl
cmpsl
mov
arpl
mov
jp
jns
lea
movsl
sbb
xor
dec
adc
cmp
movl
daa
sub
pop
out
sub
fimull
inc
pop
pop
and
push
mov
sbb
dec
sub
xor
repz
rcr
out
sti
mov
push
jnp
mov
push
sbb
inc
sub
inc
clc
push
xchg
xchg
push
jl
dec
aad
xchg
adc
push
sub
addr16
jne
pop
fs
out
sub
call
stos
shrl
jnp
orl
jbe
push
adc
test
js
xor
xchg
mov
mov
ret
lahf
out
dec
xchg
mov
aas
dec
fsubs
xor
pop
fnsave
aaa
cmp
and
mov
xchg
or
jmp
in
movntq
out
mov
mov
mov
outsl
jp
out
cmpsb
fmuls
dec
loopne
push
cmc
incl
sub
fwait
mov
or
jle
rcr
int3
int
push
sbb
mov
cli
mov
dec
lock
pop
ds
or
gs
mov
mov
push
icebp
inc
rcrl
dec
fildl
addr16
xor
mov
div
mov
and
jmp
out
xchg
imul
bound
fistpll
push
jo
jle
nop
sbb
jle
fisttpl
enter
loop
inc
and
popf
fnsave
dec
add
mov
inc
xchg
sub
cmpsl
push
push
ficoms
outsl
into
push
dec
mov
adc
notb
and
lret
movsb
jge
jo
xchg
jle
pop
pop
es
mov
sub
rcrl
sbb
das
sbb
mov
popa
stos
jl
add
iret
sub
inc
call
outsl
inc
mov
sub
and
addr16
imul
clc
push
dec
bound
dec
rorl
sbb
stc
lret
fwait
rclb
pop
testl
cmp
inc
add
mov
or
test
div
or
xchg
add
sahf
push
ljmp
stos
add
std
icebp
push
outsb
std
ss
inc
data16
jg
pop
jecxz,pn
sbb
xor
cmp
rorl
lods
or
push
leave
pop
outsl
adc
bound
addr16
add
aam
movb
hlt
jmp
mov
and
mov
cmp
xchg
add
shrb
repnz
fisttps
mov
or
jnp
inc
pop
sub
add
and
or
vpackssdw
jnp
test
xor
inc
pop
mov
mov
orl
imul
loop
push
mov
mov
xchg
daa
repnz
js
mov
outsb
fidivrs
les
das
enter
out
cli
fmuls
jbe
inc
lcall
fstpt
push
repnz
out
xor
dec
add
cltd
in
xor
movb
pop
outsb
loope
in
jge
adc
pop
push
in
pop
pop
xchg
cmpb
cltd
mov
lret
mov
inc
mov
xlat
fs
repz
inc
fbld
adc
roll
sbb
xchg
shlb
mov
scas
xchg
mull
adcb
fistps
dec
cmp
stc
dec
std
ret
sbb
mov
pop
inc
int3
stc
loope
sbb
push
data16
fsubr
cmp
icebp
in
sub
aam
xchg
out
cmp
inc
stos
mov
or
cmp
cmpsb
dec
and
jae
ljmp
loop
mov
out
in
pop
aaa
cmp
pop
loopne
nop
sbb
mov
imul
xchg
dec
xor
fisubs
inc
orb
scas
in
add
int3
push
addr16
ret
sbb
jp
xor
sbb
and
dec
das
lods
stos
cmc
sub
mov
pop
cmc
roll
bswap
jnp
ss
pop
inc
or
pop
inc
xor
push
inc
push
jne
jmp
lock
mov
pop
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
adcl
movl
mov
sbb
mov
xorl
mov
xor
jmp
jno
test
gs
or
movsb
outsl
cmp
jle
inc
jg
jle
lret
gs
pushf
pop
mov
jo
daa
negl
lret
or
frstor
xor
jbe
mov
sbb
inc
adc
repz
into
out
cltd
clc
or
jg
icebp
jle
enter
dec
movsl
xor
incl
xchg
lcall
pop
ja
mov
out
inc
push
cmp
adc
mov
pusha
cld
mov
lret
add
out
movsl
inc
inc
cmpsl
adc
rolb
iret
add
sbb
loope
jo
rcrl
jbe
fucomip
sub
sub
add
xchg
xor
sbb
mov
addr16
pop
inc
in
mov
xchg
or
jg
shl
inc
cmp
adc
and
inc
fsubrs
pop
fildll
in
outsl
or
add
cmp
xor
and
add
fst
lock
jmp
ja
xchg
leave
das
inc
stos
repz
scas
inc
or
scas
push
xchg
dec
and
dec
xorb
mov
fidivl
adc
jg
xchg
enter
int3
fisttpll
and
rclb
out
jle
and
push
jno
dec
jbe
ret
sbb
shlb
cld
movsb
xor
sahf
sbb
cmp
inc
mov
sbb
push
push
enter
subb
jl
and
sti
fisttps
mov
sbb
and
aam
stos
xchg
std
in
xor
mov
nop
sbb
xchg
sub
push
dec
pusha
flds
xchg
hlt
in
adc
loopne
xchg
lods
shl
inc
mov
inc
add
lods
jmp
jp
ficompl
jo
pop
and
xchg
xchg
inc
arpl
mov
mov
mov
sub
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
jmp
test
pushf
dec
pushf
inc
pop
cwtl
mov
aaa
mov
jbe
mov
jle
inc
jg
jle
out
inc
pop
cmc
loope
push
inc
push
loope
rol
popa
add
mov
fstps
in
push
xchg
icebp
lods
add
subl
cmovno
cwtl
int3
lcall
push
fistpl
aam
clc
mov
lea
ja
mov
sbb
push
mov
mov
sub
ja
decl
push
mov
out
dec
aad
dec
add
add
cmp
xchg
adc
or
cmp
or
sub
dec
ret
xchg
daa
dec
push
mov
adc
addr16
jo
jnp
push
add
ss
lods
gs
jo
clc
clc
cmpb
es
aaa
js
rcrl
and
jmp
fsubrs
push
mov
test
aas
lea
or
test
mov
test
ret
repnz
and
add
jbe
dec
mov
mov
sbbb
pop
daa
pop
shl
stc
fstpt
icebp
adc
fstl
xor
hlt
mov
mov
push
mov
xor
pop
dec
imul
lret
movsb
std
xchg
iret
outsb
sub
inc
cltd
pop
scas
js
lret
ljmp
fbld
das
sbb
pop
mov
jae
out
sbb
lea
dec
jg
inc
jb
shlb
adc
xchg
dec
mov
jo
das
outsl
cmpb
xchg
ja
sub
test
cmp
cwtl
ret
inc
mov
daa
ljmp
loopne
push
xchg
scas
adc
fstps
sahf
iret
iret
fcomi
fwait
test
das
pop
rol
inc
and
xor
sub
adc
add
hlt
loope
mov
jb
add
ret
push
mov
sub
push
sbbl
push
push
xorl
push
sbbl
call
sbbl
test
je
orl
xor
jmp
orl
push
call
sbbl
test
movl
je
push
push
adcl
call
jmp
subl
call
cltd
cmp
movl
jne
cmp
movl
jne
subl
push
call
jmp
negl
push
adcl
call
test
jne
andl
xor
xor
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
and
mov
movzbl
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
lea
mov
add
lea
inc
mov
inc
mov
mov
orl
mov
add
mov
xor
xor
adc
mov
xor
xor
mov
add
mov
mov
mov
cmp
mov
movl
je
mov
xor
adcl
add
imul
movl
mov
jmp
xor
adc
add
mov
mov
mov
sub
or
mov
xor
add
mov
subl
mov
add
mov
negl
xor
decl
add
movl
cmp
jne
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
add
mov
orl
mov
mov
not
mov
xor
add
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
and
add
mov
lea
and
mov
mov
adc
mov
mov
sbbl
mov
sbbl
xor
add
movzwl
and
mov
addl
mov
or
lea
mov
sub
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
xor
xor
dec
mov
jmp
movzbl
or
mov
xor
xor
add
mov
mov
sbbl
movl
mov
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
pushl
pushl
pushl
push
pushl
push
push
push
call
xor
xor
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
movzwl
add
xor
movl
mov
mov
add
mov
xor
xor
sub
mov
orl
xor
movl
add
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
xor
or
dec
mov
jmp
mov
xor
adcl
add
movl
cmp
jne
xor
add
sub
mov
xor
mov
incl
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
xor
xor
mov
andl
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
not
mov
mov
subl
mov
andl
movzwl
add
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adc
mov
subl
mov
xor
add
xor
mov
mov
xor
sbbl
add
andl
xor
subl
sub
orl
mov
subl
movzwl
sub
movl
cmp
movl
mov
movzwl
movl
jg
xor
sub
adcl
sub
mov
jmp
notl
xor
lea
mov
mov
mov
not
mov
movl
cmp
movl
je
movl
mov
movl
movl
movl
jmp
mov
cmp
jne
mov
mov
movl
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
movl
cmp
movl
jne
addl
mov
sbb
mov
xor
xor
mov
add
mov
movzwl
subl
not
sbbl
and
mov
movl
mov
jmp
andl
xorl
mov
notl
pushl
adcl
call
xorl
test
movl
je
jmp
movzwl
mov
cmp
jne
movl
mov
movl
movl
movl
jmp
movl
mov
movl
cmp
jne
sbb
mov
andl
mov
movl
xor
xorl
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
mov
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
andl
mov
sub
push
mov
add
push
call
incl
cmpl
jb
mov
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
mov
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
and
movl
mov
orl
mov
adcl
add
sbbl
xor
movl
cmp
movl
jne
xorl
jmp
lods
inc
movsl
es
lods
inc
pop
push
cmpsb
mov
rcl
jle
fbstp
jle
iret
pop
fs
push
negb
sbb
aaa
mov
mov
push
add
cmp
xor
and
cltd
xchg
cmp
mov
pusha
dec
mov
imul
xor
ficomps
mov
adc
adc
sub
and
inc
test
das
arpl
pusha
or
xor
out
out
rcr
and
movsb
or
rcll
aad
push
movsl
xchg
aas
xor
inc
insb
rolb
jl
cmpsl
out
aas
in
inc
lcall
mov
push
pop
ds
mov
push
outsb
pushf
sub
cmp
popa
loopne
sub
mov
mov
fdiv
ss
add
insb
mov
pusha
mov
jl
rclb
cmp
adc
pop
aaa
mov
test
stos
mov
stos
adc
imulb
xor
call
xchg
xchg
jecxz
xor
movsb
ret
out
xor
clc
pop
xchg
cltd
pushf
iret
mov
add
xor
xor
mov
push
in
dec
jle
jb
fdivp
add
xchg
fmulp
mov
add
push
outsb
xor
cld
test
push
adc
loope
jp
add
bound
jle
or
icebp
mov
pop
xchg
jns
movsl
negb
out
dec
ljmp
pop
jb
loope
cmpsl
lds
je
inc
mov
imull
sub
nop
mov
or
dec
mov
xorb
pop
push
js
repnz
enter
cmpsl
xchg
push
pop
xor
jnp
dec
out
cmp
xchg
xchg
out
mov
fldcw
movsb
shl
pusha
test
lds
push
cmpsl
scas
sbb
lods
inc
dec
loopne
add
ss
inc
ljmp
xchg
cmpsl
mov
mov
pop
aaa
jg
invd
mov
cmp
stc
addb
push
xor
dec
xor
or
jo
add
xchg
sbb
mov
movsl
xor
jg
or
aaa
filds
arpl
test
in
xor
insl
mov
mov
xchg
cltd
xchg
scas
or
push
mov
fimull
add
bound
xor
sbb
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
add
and
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
jmp
mov
pop
outsb
adc
jnp
xor
push
test
fbstp
jle
xor
push
rcrl
mov
int
pop
lods
data16
movsb
lahf
fsub
rclb
adc
xor
loopne
push
stos
lret
movsl
xor
pop
shlb
and
mov
cwtl
pop
out
std
or
mov
and
mov
jno
xor
lcall
dec
test
mov
dec
outsb
inc
sbb
gs
adc
jg
cli
sbb
mov
pop
cld
popf
push
lahf
arpl
shlb
sahf
testl
push
jmp
push
bound
fisubl
xchg
pusha
icebp
mov
jbe
fdiv
cmp
in
pop
sbb
push
ret
adc
add
xor
inc
mov
rorb
add
inc
movsb
inc
jge
es
bound
pop
inc
addl
ds
dec
or
bound
pop
mov
sbb
xor
aas
test
outsl
adc
enter
cltd
jle
lret
sub
and
push
into
cmc
pop
mov
orb
or
pop
shll
ds
loop
xchg
in
addr16
sub
inc
scas
repnz
fsts
hlt
test
cmp
jecxz
and
push
mov
aaa
shlb
cld
mov
loopne
xor
lahf
enter
or
adc
sub
mov
aaa
insl
imul
popa
outsb
mov
inc
scas
stc
sbb
cmp
adc
in
and
jb
adc
cmp
lods
fwait
test
pop
pop
mov
and
mov
jne
mov
dec
js
sub
dec
pop
aam
jg
jl
sub
fwait
xchg
or
rorb
jecxz
and
xor
into
cmpl
jb
push
subl
inc
int
std
fisttpl
popf
fld
push
dec
ret
lcall
daa
mov
das
xlat
jns
inc
test
scas
les
mov
imul
lea
jecxz
in
inc
popw
pop
ret
lret
out
mov
imul
and
and
cltd
out
and
jnp
decb
leave
mov
mov
pop
les
lds
inc
iret
loop
mov
popa
pop
sub
ret
mov
mov
xchg
test
or
dec
jne
inc
add
leave
ret
push
mov
push
inc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
xor
movl
sbb
jmp
imul
jge
dec
jb
jmp
push
push
adc
jg
jle
xlat
inc
cld
push
pop
leave
inc
daa
jns
repz
mul
ret
xchg
push
fbld
add
and
cmpsb
movsb
xchg
and
enter
dec
rorb
ret
mov
out
jbe
ljmp
adc
nop
jnp
jle
ret
dec
in
mov
mov
lret
pop
lods
int
cmp
inc
mov
jecxz
sbb
in
and
or
adc
xchg
aam
cwtd
cmp
mov
testb
outsl
sbb
sbb
lods
mov
mov
pop
push
mov
xchg
sbb
mov
add
mov
shr
jnp
fsubl
in
xlat
jae
inc
pushf
jne
cmp
lock
xchg
das
fldcw
test
imul
cmpsb
cli
in
loope
std
je
iret
push
sahf
popfw
xlat
and
lods
inc
push
jg
or
lods
mov
pop
or
or
scas
rolb
addl
cmp
movsl
push
or
dec
daa
testl
pop
fnstenv
inc
add
and
pop
sbb
push
sbb
and
stos
ja
mov
hlt
faddl
ss
imul
adc
in
add
sub
repnz
out
out
sub
add
pushf
add
dec
out
mov
cmp
add
xchg
xor
fsubrs
mov
nop
add
pop
std
jmp
stos
movsl
push
or
xor
mov
xchg
aam
jp
in
pop
and
cmc
xchg
inc
out
push
pavgb
mov
xchg
call
inc
out
cmc
scas
ja
push
add
mulb
movsl
sahf
scas
mov
out
fsubs
cmp
movl
or
mov
push
or
mov
add
mov
xor
xorl
xor
dec
mov
add
addl
add
imul
mov
movl
cmp
movl
jne
mov
mov
jmp
fisubrl
cld
mov
adc
dec
pop
push
test
jle
pop
jg
jle
popa
xor
out
mov
mov
jp
jmp
dec
add
and
lds
mov
cmp
xor
xor
dec
aam
ss
add
sbb
mov
lret
in
inc
and
inc
jmp
mov
imul
in
aaa
mov
pusha
mov
mov
aas
pop
mov
inc
or
ljmp
bound
jns
fs
repnz
lret
mov
call
xchg
in
pop
push
scas
push
xchg
loopne
jle
add
xor
mov
movl
jb
lret
sti
cmp
inc
cmp
idiv
mov
das
fucomip
xor
mov
add
adc
fwait
call
fnstenv
je
outsb
sub
fsubl
jnp,pn
add
push
in
mov
aaa
jns
inc
jbe
loope
sub
cmpsb
jp
daa
testw
push
mov
dec
lock
loopne
sbb
loop
and
dec
pop
mov
lcall
add
inc
into
pop
and
sbb
adc
ret
insb
push
stc
xchg
data16
stos
mov
ljmp
testl
fisubrs
or
dec
or
pushf
rcr
pushf
xor
jecxz
pop
call
jbe
or
sbb
xchg
filds
or
mov
in
and
sbb
fisubrs
inc
mov
jmp
jb
out
stos
dec
repz
ja
xchg
xchg
outsl
mov
jmp
lret
push
out
adc
into
xor
jl
fs
in
adc
mov
dec
jo
and
cltd
jp
rorl
cli
pop
push
lds
ds
or
xor
xchg
adc
lret
mov
ret
add
jmp
pop
icebp
lds
fs
xchg
imul
xlat
push
out
jle
pop
jg
jle
insb
mov
in
mov
xor
pop
xchg
push
fnstsw
adc
inc
mov
pop
pop
xchg
mov
jle
cmp
xor
dec
or
xchg
out
push
xchg
push
lret
adcl
sub
push
inc
test
jmp
sbb
jae
jmp
sub
stos
popa
sahf
cmp
loop
push
into
cmc
sub
or
ret
loopne
push
push
scas
mov
sub
fstl
aas
filds
push
mov
pop
rcl
adc
xor
icebp
pop
test
mov
lds
idivl
push
iret
fimull
mov
or
sub
fnsave
jge
clc
mov
cmp
mov
dec
cmp
mov
push
pop
adc
lahf
add
pop
imull
xchg
lea
mov
add
cld
verr
sub
popf
ret
jmp
insb
fwait
rorl
dec
cwtl
inc
js
mov
fstp
std
movsl
fisubl
test
inc
pop
rcr
and
idiv
sbb
fimuls
sub
cltd
fcomps
push
es
out
daa
xor
dec
in
add
pop
sub
bound
sbb
rcrl
sbb
jecxz
cmpb
cmp
pushf
outsl
xchg
fisubrl
and
ret
sbb
repnz
mov
imul
lcall
jecxz
mull
popa
stc
push
adc
sbb
addr16
in
lods
mov
movsl
movsb
shrl
jp
cmp
pop
call
mov
pushf
xor
fwait
sbb
ja
jmp
jp
push
loop
hlt
add
imul
jmp
mov
mov
mov
mov
mov
jmp
aad
outsl
mov
std
jge
outsl
stos
lock
stos
cmp
jg
jle
mov
mov
movsl
and
and
clc
fisubl
stc
popf
out
roll
pop
dec
add
inc
lret
mov
pop
out
push
adc
sarl
lods
shrb
cmp
sarl
test
adc
cmp
cmc
test
sbb
sahf
pop
jmp
cltd
jnp
push
or
fstpt
loope
cmp
mov
adc
test
lods
hlt
cmc
xchg
cld
shll
xor
push
call
cmpsb
js
xchg
push
fiaddl
cmc
cmp
popf
xchg
push
ja
add
mov
fnsave
movsl
inc
es
pop
ret
in
in
mov
push
ss
xchg
pop
fstl
inc
in
cwtl
pushf
movsb
lahf
imul
lea
out
xor
sbb
cld
lods
cmp
mov
jge
adc
and
sub
mov
cltd
test
adc
add
and
push
xchg
pop
pop
xchg
fdivl
cli
out
fisttps
sbbl
and
ret
xor
mov
xchg
or
xchg
ffreep
cwtl
iret
push
les
es
clc
inc
aam
sub
sbb
lods
call
jmp
mov
pop
lds
or
sub
imul
sub
cmpsl
mov
cs
bound
movsl
cmp
gs
cmpl
pop
push
movsl
in
nop
clc
out
stc
jge
push
pushf
mov
jmp
test
das
sub
jb
cmp
je
in
out
pop
roll
movsb
adc
mov
dec
in
scas
ficoms
fdivs
cltd
shll
pop
popa
mov
jae
sbb
das
pop
jno
xlat
incl
mov
or
fwait
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
jmp
faddl
insl
jns
pop
xchg
xor
ret
popf
loop
jle
jg
jle
mov
outsb
mov
dec
mov
sub
xor
dec
fwait
lret
push
cwtl
pop
rcrb
popf
xchg
stc
sahf
rclb
repnz
ret
cs
push
xor
scas
jmp
xchg
test
fld
mov
dec
xor
mov
xchg
push
adc
mov
dec
fmuls
mov
ret
sub
sbb
mov
sbb
xor
xchg
adc
std
push
sub
cli
cmc
cmp
jno
roll
icebp
inc
fcmovbe
mov
scas
cmp
or
ss
fmulp
jl
xchg
xchg
fnstcw
mov
insb
push
xchg
subb
push
sub
in
mov
adc
and
fwait
cmc
rcrl
dec
add
jae
mov
and
mov
mov
push
mov
mov
jp
out
in
add
rcrb
xchg
dec
fbstp
sub
mov
mov
cli
fsubl
mov
outsb
and
dec
mov
push
mov
ljmp
arpl
cmp
cli
loopne
mov
pop
jge
repnz
dec
inc
mov
add
clc
adc
negl
xchg
lahf
inc
cmp
imul
adc
xor
mov
mov
lret
test
mov
ret
mov
out
sahf
subl
dec
cltd
les
jnp
hlt
lahf
aas
lods
sti
mov
add
cs
mov
or
mov
mov
jle
jle
shlb
addr16
fwait
in
movsl
test
adcl
lcall
push
bound
shll
cmp
xchg
push
aaa
insb
roll
xor
cmp
add
inc
dec
loopne
push
xor
xchg
mov
pslld
ror
outsb
pop
leave
ret
push
mov
sub
mov
mov
sub
imul
jmp
adc
inc
and
scas
pushl
dec
sti
in
jle
jg
jle
push
mov
push
movsl
cs
add
add
rorb
mov
mov
movsb
mov
pop
cmp
nop
add
sub
pop
cmp
mov
cmp
xchg
push
imul
in
inc
inc
pop
cmp
jg
flds
mov
cmc
cwtl
les
test
in
push
sbb
sbb
ficoms
xor
shrb
pop
push
scas
in
fcoms
fisubrl
pop
mov
jp
ficoml
mov
lock
scas
bound
iret
fidivrs
neg
in
rcrl
xor
mov
fistl
and
fcomps
sub
adc
mov
push
stc
sub
xchg
inc
and
and
xchg
sti
inc
mov
xchg
pop
shll
lret
stos
popf
fs
xchg
rcrb
xchg
mov
push
into
ljmp
int
es
xchg
jg
pop
mov
push
repnz
pop
sti
xchg
lahf
fisubs
mov
adc
sbb
aad
lret
movl
mov
insl
shll
test
push
sahf
jmp
ja
pop
or
lods
lret
bound
jle
xchg
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
or
mov
push
add
mov
mov
sbb
xor
mov
sub
mov
xorl
add
xorl
mov
mov
xorl
push
subl
push
andl
test
movl
je
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
movzbl
xor
imul
or
mov
xor
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
dec
mov
xchg
sub
xor
jmp
mov
add
aad
jl
mov
cmp
mov
jg
jle
xchg
dec
xchg
mov
test
xlat
out
and
push
mov
push
pop
in
add
scas
push
sub
ja
dec
mov
jbe
cwtl
adc
push
jl
es
push
out
out
cld
sbb
lea
insl
std
rclb
pop
pop
call
outsl
pop
pop
in
icebp
jbe
lods
popa
es
sbb
cmp
mov
sbb
adc
jo
mov
jne
pop
jge
call
push
inc
and
mov
ja
add
jmp
add
dec
push
inc
mov
mov
mov
arpl
scas
shlb
cmp
repnz
fsubl
mov
pop
insb
sbb
adc
cmp
xorl
add
adc
jno
pop
movsl
cmp
rcrl
out
cwtl
mov
aaa
adc
xchg
addr16
inc
cltd
add
aam
repnz
and
aas
les
mov
and
push
addr16
or
and
js
mov
xor
popa
je
inc
cmpsb
sub
lahf
push
push
decl
fcompl
push
bound
fsubs
sbb
mov
or
jmp
gs
xor
pop
xchg
lods
mov
inc
jge
jle
aas
jg
jle
dec
mov
cli
aad
jne
xor
push
mov
out
aad
ficoml
xchg
cwtl
jg
cmp
gs
popf
mov
xchg
pop
cmp
lcall
dec
sbb
dec
std
jo
fld
push
adc
mov
push
mov
sbb
je
ss
pushw
sbb
bound
mov
jecxz
mov
push
jecxz
add
test
fucompp
aas
js
mov
cmp
pop
pop
adc
in
and
fwait
cli
sub
cmp
imul
mov
negb
xchg
lret
outsl
push
sbb
hlt
sub
xor
ficoms
imul
push
add
dec
mov
xchg
test
insb
adc
aam
inc
repnz
and
clc
addr16
pop
mov
xor
movsb
mov
pop
and
popa
inc
and
stc
mov
enter
icebp
xchg
fstps
stc
std
dec
add
mov
aas
add
lret
mov
inc
leave
sub
sbb
xor
cli
mov
pop
push
xor
stos
adc
sbb
xor
jne
sbb
mov
xor
mov
negl
xor
sbbl
xor
add
mov
mov
mov
je
xor
mov
xor
xorl
jmp
mov
inc
aam
push
mov
orb
ds
jle
aas
jg
jle
xor
jp
hlt
int3
stc
mov
fs
insl
inc
testl
sub
and
js
jg
data16
mov
push
scas
cmp
scas
imulb
andl
fstpt
xchg
cmovno
pop
ret
and
jae
loop
dec
push
in
mov
adcl
fidivl
repz
jecxz
jo
xchg
dec
push
inc
or
ret
rcrl
lret
sti
xchg
pop
sbb
mov
in
jle
inc
jmp
add
fistpl
inc
mulb
dec
sbb
lods
and
mov
sti
ja
cmp
and
fimull
popa
xor
mov
and
mov
fisubl
jecxz
testl
lret
adc
xor
jno
inc
movsb
jmp
bound
mov
push
je
cwtd
addr16
inc
in
pop
adc
sbb
cwtl
and
lret
add
out
jnp
mov
std
mov
cmp
outsb
xchg
mov
fwait
jno
sahf
xchg
sbb
xor
lods
xorb
sub
adc
outsl
call
jge
leave
cmp
add
mov
leave
cmp
add
movl
cmp
movl
jne
orl
pushl
call
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jb
mov
xor
mov
addl
xor
jmp
jns
mov
pop
insl
jns
lods
iret
loopne
lea
daa
stc
jle
aas
jg
jle
inc
out
std
ds
lods
push
insb
popa
mov
jo
stos
ss
and
lods
lock
scas
ret
sbb
jb
andb
jecxz
ss
mov
ja
jb
xchg
adc
clc
in
cmp
cmp
shrl
ds
ficoml
cld
pop
mov
cmp
sbb
adcb
or
mov
mov
fdivrs
push
sbb
xchg
lds
pop
out
xchg
loope
insl
sub
and
jl
test
sbb
dec
clc
add
mov
push
mov
arpl
aad
cmpsb
int3
imul
sbb
fsubl
fbstp
mov
loop
cs
popa
cld
mov
cmp
xchg
mov
in
xchg
movl
dec
icebp
mov
test
mov
pop
mov
add
mov
xchg
adc
dec
outsl
movsb
cmp
clc
inc
aam
adc
cmc
and
scas
xchg
or
push
cmc
fsubs
jbe
adc
inc
mov
jmp
cmpsb
cld
lret
sbb
js
add
cli
or
adc
or
mov
enter
add
add
je
sbbl
pushl
andl
pushl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xorl
mov
add
mov
xor
orl
add
cmp
movl
je
add
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
sub
mov
jmp
fldl
xor
cmp
aas
repnz
cli
jle
aas
jg
jle
insl
shrb
sub
adcl
int3
mov
fdiv
sub
mov
cmpsl
pop
cmp
dec
push
jle
iret
daa
std
fists
test
je
adc
pop
xchg
dec
mov
popa
lods
dec
lock
cmp
mov
sti
cmp
repz
fstl
mov
movsl
dec
xchg
jnp
cmp
jb
test
pop
push
sti
inc
scas
je
xchg
and
lods
enter
jge
popf
clc
bound
lods
cmp
sub
sub
push
mov
nop
mov
jb
mulb
push
mov
dec
pop
int
movzbl
mov
xor
and
ljmp
sahf
dec
xor
ds
pop
mov
lret
pop
js
in
sub
ret
test
pop
test
shl
push
sbb
popf
out
cmpb
push
adc
pop
aad
push
mov
loope
push
in
pop
in
sbb
pop
mov
stos
pop
and
addr16
or
leave
je
mov
jo
adc
sbb
int
mov
ret
mov
cmp
push
jl
cmp
cmp
push
mov
mov
sbbl
jmp
fmull
cld
popf
mov
scas
mov
jno
jle
aas
jg
jle
das
mov
cmpsl
int3
das
cs
xorl
mov
mov
xchg
pusha
jmp
mov
cld
sbb
lock
xor
cmp
movsl
scas
loop
cltd
mov
insl
mov
nop
jecxz
mov
dec
repz
jp
lahf
adc
out
pop
pop
out
jb
pop
lock
jnp
push
sub
daa
icebp
push
lahf
mov
lret
xlat
dec
ret
scas
lods
mov
aas
int
sub
mov
mov
adc
mov
fiadds
add
outsl
cmp
pop
mov
sub
dec
pop
das
notb
jne
test
mov
adc
sti
jo
pop
rcr
ss
std
scas
mov
outsb
in
cmp
or
insl
xchg
dec
shl
mov
loop
mov
pop
cmp
scas
pop
cmpsb
int3
mov
bt
sbb
sub
sar
shrb
ret
mov
out
mov
dec
enter
jecxz
lret
inc
inc
xor
daa
rolb
test
loopne
sbb
inc
mov
dec
jge
jle
call
push
add
mov
ret
add
add
mov
mov
mov
orl
mov
add
mov
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
cmpl
jb
mov
mov
add
xor
jmp
xchg
leave
popa
jge
jge
fldenv
test
xchg
int3
xor
jle
jg
jle
pop
xor
adc
dec
in
push
cwtl
aaa
adc
loop
xchg
sub
test
and
call
ds
cmp
xchg
out
adc
add
add
testb
arpl
xor
arpl
popf
lods
jmp
testb
xchg
mov
ss
loope
fwait
adc
loope
sbb
in
or
mov
adc
fadds
into
fdivp
lods
push
fbld
push
stos
loop
push
mov
adc
icebp
out
mov
or
mov
cs
and
call
jle
ss
lds
lcall
sub
dec
cwtl
mov
cmp
sub
sub
and
xchg
jmp
es
xchg
lds
loope
adcl
mov
adc
and
fprem
test
mov
movsl
sbbl
jo
movsb
and
out
fbld
bound
call
push
pop
push
mov
rcl
pop
pop
or
stos
mov
mov
mov
mov
add
jmp
lea
pop
imul
jle
aas
jg
jle
cs
inc
add
lcall
hlt
pop
or
lcall
push
mov
pop
cmp
repnz
int3
bound
inc
test
leave
push
xchg
or
sub
mov
jno
mov
mov
push
lcall
xchg
pop
and
lcall
jmp
and
push
push
mov
iret
jno
les
sbb
out
rorl
testl
testb
jo
in
pop
jns
fbstp
repz
jge
mov
nop
adc
mov
pop
pop
popa
movq
in
fbld
fwait
dec
scas
pop
pop
mov
lahf
xchg
mov
add
les
add
mov
mov
leave
inc
xchg
xchg
repz
adc
incb
in
xor
rclb
outsb
xchg
je
add
mov
cld
mov
sbb
cld
aas
inc
int3
or
xchg
xor
ljmp
call
cmpl
xor
pop
popa
jo
add
sub
lret
mov
or
int
cltd
mov
loopne
lahf
mov
int
inc
clc
jmp
and
and
sti
push
pop
pop
sub
jle
dec
add
lcall
push
hlt
cld
es
add
jnp
mov
adc
adc
aad
dec
xlat
pop
sbb
daa
and
test
popa
ss
outsb
aas
cwtl
ret
add
and
add
xchg
xchg
pop
or
add
cmc
xchg
push
mov
int
jbe
push
cmp
movsb
int
inc
scas
push
push
or
sbb
test
cmc
add
xchg
and
cmp
les
add
or
sbb
sbb
rol
pop
or
inc
dec
mov
pusha
push
mov
pushf
jae
mov
xor
cmpsl
xchg
push
or
dec
xor
fcomp
jmp
cmp
iret
push
mov
cmpb
xchg
test
mov
inc
mov
or
ds
mov
jno
test
mov
lods
jecxz
dec
sub
imul
xor
stc
xchg
fwait
sbb
in
cmc
int
xchg
sub
dec
fcomps
xchg
stc
in
pop
mov
push
pop
inc
scas
push
into
dec
scas
jns
adc
fildll
rol
fistpl
dec
push
jle
pusha
or
push
dec
dec
add
push
pushl
pushl
call
mov
jmp
push
sahf
sbb
fdivrl
or
cmp
jne
jle
aas
jg
jle
outsb
cwtl
push
xor
ss
cvtps2pi
cmp
jmp
jmp
ja
test
dec
pushf
call
fidivl
sub
lock
ret
push
sbb
pop
xorl
cmp
mov
inc
xchg
pop
dec
push
in
fdivs
xchg
mov
jb
push
and
cld
imul
push
add
cld
pop
mov
ret
setnp
sub
push
ljmp
ljmp
and
mov
jl
xchg
pusha
or
nop
sahf
inc
cli
cmpsl
aaa
xor
cli
in
std
and
sub
xchg
loopne
or
jmp
cli
inc
std
push
jp
and
inc
push
xchg
inc
sub
es
mov
decl
push
push
sbb
lahf
mov
ja
call
inc
push
pop
les
inc
lds
in
das
cmp
mov
test
arpl
xor
fs
mov
ficomps
shll
mov
sbbb
jno
inc
dec
dec
lods
and
outsb
pushf
test
or
pop
call
aas
aas
stos
loopne
jge
mov
mov
push
or
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
pop
mov
jl
xchg
movsb
sbb
lods
jno
bnd
aas
jg
jle
loope
mov
out
pop
cmc
cmpb
cmpb
sub
sub
jb
fildl
shl
push
cli
add
add
xchg
add
stos
mov
pop
test
pop
jl
dec
mov
cmc
or
jno
aad
xor
xor
adc
arpl
inc
mov
inc
popa
adc
and
shrl
dec
stos
arpl
dec
int3
push
or
sbbl
push
dec
adc
rcll
push
dec
inc
mov
inc
cld
and
sub
push
inc
xor
sahf
xchg
sbb
add
call
sbb
roll
fdivl
in
and
scas
dec
shll
stos
ror
mov
in
xchg
movsb
mov
pushf
out
scas
pop
repnz
fstpt
add
push
insl
sbb
xor
adc
lods
stc
xchg
sbb
movsb
into
lahf
adc
sbb
in
sub
out
inc
out
sti
add
sub
ja
or
push
movsb
add
insb
inc
loop
sub
rcrb
inc
or
inc
or
in
rorb
jbe
add
mov
push
pop
push
jmp
stos
xchg
fwait
adc
hlt
lcall
jle
aas
jg
jle
cmpsl
clc
pop
fwait
xor
cs
fwait
movsl
hlt
xor
test
movsb
adc
and
push
loope
aas
add
adc
loopne
out
enter
lods
mov
loop
jo
pop
mov
dec
decb
imul
movsl
jnp
lcall
daa
or
inc
das
sub
pop
jo
mov
repz
lock
in
sahf
out
jp
scas
ljmp
xor
adc
dec
adc
pop
cwtl
sbb
ror
test
div
xchg
and
inc
mov
ret
arpl
xchg
cltd
mov
add
insb
les
lods
add
jbe
and
mov
sbb
out
sbb
mov
mov
xor
pop
mov
sbb
mov
decl
addr16
cltd
xchg
cmpsb
inc
sub
inc
xchg
sahf
ret
add
mov
lock
push
pop
and
jmp
int3
sahf
nop
push
fs
sbb
test
dec
popf
push
lret
aam
notl
shll
dec
into
addr16
adc
push
xlat
sbb
les
pop
sahf
loope
xchg
int3
nop
das
pop
xchg
sub
adc
or
js
and
jmp
and
lods
lret
movsl
sub
cmp
jle
aas
jg
jle
mov
scas
pop
or
cld
insl
adc
into
arpl
mov
into
dec
test
cmp
data16
push
ror
loope
xchg
lock
add
aaa
mov
pop
jbe
or
sbb
mov
stos
push
lods
movntq
ror
or
cmp
or
mov
je
imul
lods
dec
iret
lock
jle
mov
cmpsb
inc
pop
loopne
jmp
push
sbbl
mov
push
mov
call
or
outsb
ss
es
xchg
jl
bnd
loopne
dec
cltd
js
mov
fdivs
ljmp
test
push
jae
inc
and
mov
jns
jecxz
lods
cwtl
aaa
das
sbb
mov
cltd
shrl
mov
in
sub
xchg
or
push
xor
std
cld
and
mov
leave
inc
push
jle
and
loop
add
setp
pop
sbb
dec
loop
mov
xchg
bound
push
push
call
mov
fwait
or
popa
xchg
daa
fiaddl
fcom
push
jmp
shll
adc
xchg
sub
xchg
dec
mov
imul
sub
mov
jmp
jp
rcr
std
jnp
mov
jl
inc
movsl
orl
jle
aas
jg
jle
cmp
ret
cld
movb
repz
inc
das
mov
cmp
add
test
insb
adc
push
adc
jmp
lret
mov
outsb
jmp
and
dec
mov
and
in
xlat
aas
adc
xor
rolb
mov
dec
adc
dec
out
push
dec
adcl
testl
sub
aad
shrb
cmp
add
cs
sbb
addl
cmp
mov
push
icebp
sub
aas
fs
fcmovne
scas
imul
xor
mov
mov
out
dec
mov
shrb
xchg
or
repnz
pusha
or
sbb
jae
xchg
xchg
add
xor
rcrl
pop
adc
xchg
adcl
dec
mov
jns
hlt
test
xorb
bound
push
and
leave
xlat
xchg
sub
push
stos
pop
arpl
inc
pop
mov
xor
aad
jno
pop
sub
loopne
icebp
aad
xor
es
mov
test
clc
roll
sub
outsb
cmp
movsl
add
push
mov
dec
popl
cld
mov
jmp
test
test
jge
cmp
insb
xchg
lret
jle
jg
jle
xchg
into
fidivrs
scas
mov
jo
rcl
scas
shrl
jo
adc
aad
adc
test
or
mov
xchg
pusha
jmp
cwtl
and
and
ljmp
and
mov
std
pop
inc
cmpsl
sbb
lcall
push
mov
mov
mov
in
fsubs
push
xchg
xchg
sbb
ret
in
sbb
stos
or
jnp
push
gs
in
pop
xor
roll
mov
sbb
jne
aaa
or
pop
or
iret
sbb
orl
arpl
xchg
cld
mov
sahf
jbe
test
push
pop
jmp
sub
mov
jp
cmp
fucomip
mov
repz
mov
push
in
push
adc
scas
xchg
sub
sub
icebp
mov
dec
leave
pop
rolb
shlb
ja
shll
push
adc
sub
fs
mov
int3
ror
lahf
lcall
push
jmp
clc
inc
xlat
jl
roll
add
enter
in
loope
mov
popf
jb
add
ret
add
add
jge
out
mov
xlat
xor
jg
jle
hlt
inc
dec
stc
ret
cld
mov
sti
mov
lfs
jno
loopne
mov
mov
jb
push
jo
stc
push
mov
jl
xchg
cmc
cmp
sub
mov
push
shlb
and
movsl
in
jmp
cmpsl
add
push
in
pop
js
les
dec
jns
cwtl
xchg
xor
sbbb
or
notb
sub
xor
dec
xlat
and
les
es
adc
hlt
subps
idivl
add
sbb
leave
push
push
xchg
mov
fdivs
movsl
sbb
lcall
cwtl
in
outsl
imul
or
repz
shl
stc
pop
loope
push
jo
in
popf
jg
call
out
or
sbb
or
mov
mov
lcall
xchg
adc
push
mov
data16
push
dec
outsl
pop
imul
push
mov
mov
and
pop
or
mov
call
mov
imul
mov
jmp
inc
sbb
gs
jae
sub
mov
aas
jg
jle
adc
dec
fldt
or
adc
push
mov
xchg
xchg
hlt
daa
cmp
jbe
cmpsl
stc
mov
cwtl
xor
inc
xchg
cmp
jb
dec
fwait
xchg
cld
jbe
mov
pop
mov
push
push
dec
push
xchg
mov
ret
mov
fdivs
sub
out
aaa
adc
xchg
in
sahf
ret
xchg
lds
pop
and
push
cmp
xor
in
pop
stos
push
mov
dec
push
mov
fistl
mov
ficomps
mov
imulb
push
movsl
xor
ds
mov
repnz
pop
sub
xchg
outsb
xor
mull
pop
cmc
mov
popa
lret
dec
fwait
sbb
repz
mov
cmc
dec
out
inc
fisubl
test
test
inc
sarl
fcomp
inc
mov
testb
fs
cmp
leave
clc
fcmovu
out
pop
mov
xchg
dec
add
fldt
jne
cmp
test
jle
cmp
test
in
cld
inc
mov
mov
test
loope
movsb
add
cwtl
push
jp
rorl
or
enter
add
call
push
adc
inc
addb
or
xor
xor
mov
add
div
mov
xor
jmp
jno
cmp
jge
in
pop
xor
add
add
or
jg
jle
shll
push
xchg
or
add
sbb
xchg
in
push
cmp
pushf
shll
subb
in
cmp
aam
shll
xchg
jb
imull
mov
adc
les
lds
add
subb
inc
pop
add
xchg
subl
mov
rcl
mov
inc
loopne
cltd
add
mov
inc
and
pushf
enter
xor
fucomip
outsb
lahf
jge
lahf
add
jnp
sub
and
sbb
xor
mov
repnz
jge
addr16
outsl
lcall
clc
js
xor
cmp
inc
xchg
xorb
sarl
int3
insb
push
jo
rcl
pop
std
test
dec
jl
lcall
lret
or
or
cmp
xor
jno
popf
decl
push
push
imul
cs
sbb
jecxz
sub
and
add
cs
push
pop
inc
inc
mov
imul
sbb
std
outsl
cmpsb
cmp
add
sub
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
cs
jecxz
jnp
aad
lock
dec
fsubr
aas
into
mov
aas
jg
jle
mov
in
push
xchg
scas
mov
pop
xchg
or
iret
pop
mov
testl
lea
jb
mov
add
icebp
ret
or
or
push
add
lahf
add
adc
push
jl
out
dec
loopne
cmp
fwait
popa
fisttpl
shr
and
out
mov
dec
cltd
inc
fwait
test
push
mov
shlb
rclb
dec
lods
xor
ficomps
xor
pop
sub
add
pop
jecxz
xchg
in
inc
pop
sarb
stc
addr16
jle
or
inc
sub
and
push
mov
adc
pop
sti
fwait
pop
inc
xor
loop
fimull
shll
or
jns,pt
pop
mov
ret
inc
lea
xlat
enter
and
popa
scas
cmp
in
les
pop
lcall
jp
je
outsb
clc
icebp
mov
mov
add
jmp
push
xor
stos
addr16
pop
xlat
outsl
mov
imul
mov
sub
cmp
ret
aaa
addr16
adc
xchg
mov
les
mov
xor
add
imul
jmp
into
jb
pop
inc
pop
fisttpll
shr
sub
jg
jle
cmc
mov
das
jne
movsl
test
sub
pop
movsl
sbb
and
popf
nop
insl
mov
clc
jno
lahf
mov
pusha
lret
sbb
pushf
fs
loopne
sub
jns
in
insb
adc
test
sti
mov
pause
in
test
aam
mov
cli
sbb
rcr
jns
or
test
pop
dec
fldl
mov
mov
stos
xor
cmpsb
scas
and
enter
add
mov
push
out
adc
aas
add
out
out
push
add
rcr
pop
adc
jp
lcall
imul
xor
sarl
xchg
pop
push
jle
in
jo
dec
ss
add
push
bound
pop
xor
sbb
mov
or
fcmovbe
insl
add
adc
adc
enter
pop
mov
adc
mov
daa
cmpsl
inc
push
loope
ja
inc
sbb
xchg
outsl
aam
hlt
adc
cs
mov
mov
pop
add
jge
insl
xchg
mov
mov
mov
aad
sbb
js
mov
jmp
out
cmp
jp
sti
inc
aaa
mov
dec
mov
aas
jg
jle
add
pop
aas
sbb
add
lods
pop
out
push
sbb
pop
ret
push
xlat
call
dec
jb
roll
fldt
enter
ds
lret
inc
repz
jg
fwait
test
xor
xor
pop
stc
js,pn
jns
pop
sbb
mov
out
test
xorb
test
jl
adc
mov
push
mov
xlat
movsb
jne
mov
stos
pop
sbb
out
mov
xor
fnstcw
push
pop
data16
and
rorl
mov
jmp
xchg
dec
xabort
cmp
fnstenv
jecxz
fldcw
inc
cld
jo
xchg
sub
add
clc
add
push
or
mov
xchg
fidivl
and
imul
mov
add
subl
dec
or
pop
outsl
dec
push
mov
cli
dec
dec
and
out
inc
and
pop
xor
sahf
cltd
sub
sbb
mov
mov
jge
pusha
mov
cli
add
mov
or
in
jbe
or
dec
or
xor
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
jmp
xchg
pop
mov
cmp
fsubs
or
aas
jg
jle
into
or
jle
aaa
cld
out
test
cmp
inc
sbb
xchg
lcall
mov
insl
mov
mov
or
ljmp
jbe
popf
negb
in
xchg
cld
repnz
jecxz
into
push
pop
mov
int3
loop
push
xor
sbb
sti
adc
adc
stos
jl
lock
pop
call
divl
xchg
mov
mov
negb
es
adc
dec
sub
fwait
mov
scas
push
outsl
sbb
adc
adc
mov
mov
enter
sbb
ljmp
sub
and
push
stos
pop
and
daa
jne
ficoml
push
addr16
iret
xchg
and
icebp
into
cs
jne
mov
ret
sub
jcxz
mov
inc
jmp
adc
jno
loopne
scas
add
out
cs
enter
loopne
aaa
repz
pop
mov
lock
loope
jo
add
mov
repnz
sahf
out
in
js
outsb
sub
fs
mov
xchg
int
movsb
inc
add
inc
jmp
fucomi
pop
add
add
arpl
imul
mov
bnd
ret
jle
jg
jle
dec
dec
loop
dec
sarl
in
scas
test
push
test
add
cmp
jbe
adc
das
ret
add
push
xchg
xor
jnp
call
mov
mov
fwait
out
sbb
std
sarb
test
dec
fwait
push
mov
js
jmp
imulb
out
mov
dec
xchg
data16
loop
add
sub
xor
cwtl
pop
insb
rolb
lods
lahf
mov
notb
adc
popf
add
ss
or
mov
scas
nop
xor
cmp
out
fisttps
push
repnz
repnz
test
xor
push
lds
mov
je,pt
mov
mov
xor
dec
pop
sti
cmpsb
push
dec
and
or
popa
pop
loope
adc
ljmp
mov
vmovss
pop
sub
xchg
add
pop
cwtl
lods
testb
and
push
adc
cmpl
rcrl
jbe
push
mov
cmpsl
icebp
das
jle
cmp
mov
or
iret
rcl
and
stc
push
dec
aad
mov
outsl
or
push
fucomip
ficompl
cs
sbb
pop
add
add
aas
mov
cmp
in
xchg
addl
jle
rcr
pop
mov
mov
sub
jae
mov
xchg
popf
popa
testl
and
mov
push
sub
pusha
and
insb
fiadds
push
jno
mov
outsl
ret
mov
pop
mov
inc
jmp
fdivr
push
mov
lea
enter
cltd
xchg
jecxz
inc
les
pop
dec
pop
dec
fbstp
into
pushf
push
imul
mov
popf
sub
xchg
test
aad
inc
lret
mov
shll
andl
dec
pushf
rclb
cmpsl
insb
fimull
inc
pop
gs
lds
jmp
inc
mov
xlat
inc
or
inc
std
inc
stos
popa
cmp
pop
mov
mov
sub
mov
or
xor
inc
mov
jg
aas
sbb
pop
cmpsl
sbb
icebp
in
rcrl
stc
mov
pop
jnp
rorl
and
sbb
fwait
pop
nop
stos
pop
inc
sti
jbe
jmp
or
stc
cltd
movsb
pop
test
or
xor
dec
std
ds
sub
dec
mov
aam
pushf
or
js
jp
or
cmp
je
jmp
xchg
mov
mov
and
pop
add
jle
jg
jle
decb
fstpt
mov
cwtl
iret
xchg
xchg
sub
int
push
mov
pop
mov
push
xchg
cmp
xchg
adc
out
or
cmpsb
cmp
and
fidivl
bound
xlat
pop
cltd
es
mov
into
and
cmp
lods
sub
and
filds
mov
mov
stc
adc
ja
test
mov
insb
mov
pop
mov
not
mov
inc
sbbb
pop
cmpsb
or
xor
jb
jne
add
fcom
scas
inc
sarb
adc
not
mov
test
xor
xchg
test
mov
lods
arpl
push
xor
popa
push
jbe
cmc
lock
test
lods
jo
hlt
scas
adc
in
push
mov
push
fmull
pop
repz
push
push
ret
lcall
lcall
push
bound
stc
test
cli
or
testl
ljmp
push
mov
nop
or
stc
cltd
pop
roll
mov
sbb
shl
movsl
repz
and
xchg
jp
out
or
popf
loope
pop
cwtl
into
push
mov
int
fsubp
xchg
jmp
dec
adc
jns
rclb
dec
in
add
jg
jle
mov
dec
mov
cmp
cmp
adc
mov
ret
cmp
xchg
jae
cmp
lds
negb
inc
pop
shll
fldl
call
xchg
sub
scas
mov
in
fildl
adc
in
in
icebp
push
inc
sub
cmp
or
pop
mov
lods
repnz
loop
mov
cwtl
pop
test
inc
imul
repnz
jmp
push
push
mov
xchg
mov
mov
shll
sbb
adc
jnp
lds
std
sbb
icebp
sub
push
in
jae
adc
cmp
lods
mov
mov
dec
jb
jle
icebp
test
jecxz
cltd
fnstsw
fnstsw
pop
sti
xchg
mov
inc
addl
add
test
cmp
mov
popa
mov
add
push
push
add
mov
sub
insb
fstpt
scas
cmp
popa
sub
push
mov
sbb
pop
xchg
cltd
and
jae
and
daa
mov
lret
inc
mov
mov
push
mov
or
add
inc
xchg
jmp
ss
or
mov
jmp
movb
jg
jle
loop
cli
out
mov
inc
sub
lods
add
push
xlat
inc
imul
pushf
test
push
xchg
add
jbe
sbb
and
adcl
adc
adc
mov
mov
pop
cld
dec
out
adc
xchg
cmc
iret
jecxz
dec
mov
addb
cmp
hlt
mov
inc
cli
jmp
sbb
pop
lock
sub
aam
mov
ljmp
cs
push
add
gs
test
pop
in
popa
jbe
adc
jo
cmpb
or
jge
fadd
dec
ss
xchg
popa
test
in
lods
in
or
inc
inc
sub
loopne
push
push
add
sub
adc
jb
loope
sbb
push
sub
in
sub
xor
out
icebp
fs
outsb
clc
ja
xchg
inc
sbb
idivl
pop
xchg
add
ret
push
lahf
or
int3
cli
or
repz
lock
jb
bound
inc
and
sbb
cmp
inc
aas
xchg
leave
stc
fcmovnu
xchg
bound
loopne
xor
outsl
lret
pop
bound
sub
out
xor
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
jmp
mov
pop
pop
in
pop
shl
dec
test
xchg
aas
jg
jle
xor
cmp
cs
push
dec
push
cli
out
cmpl
inc
lcall
pop
incl
dec
aam
loop
scas
jo
xor
out
fldl
push
xlat
fsub
and
mov
xchg
int
xor
xchg
xor
xor
std
arpl
jge
adc
push
lret
pop
out
enter
or
in
jmp
adc
je
lods
jo
cmp
daa
mov
add
outsb
mov
sub
dec
iret
add
lahf
das
cs
push
testl
xlat
xchg
fucomp
and
aam
je
or
mov
add
add
adc
inc
add
rclb
jle
dec
sub
inc
sbb
ja
in
mov
jnp
pop
scas
jno
sbb
mov
or
add
fisubrs
xlat
stc
xor
jle
push
fsubl
pop
loopne
jle
push
pop
mov
cld
adc
xor
inc
adc
aad
push
sub
push
leave
jp
cmpsb
inc
shlb
dec
and
mov
mov
popa
sub
jnp
mov
stc
mov
scas
push
call
out
inc
hlt
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
loopne
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
repnz
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
add
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
loope
jne
mov
cld
incl
mov
mov
add
call
int3
mov
add
add
xor
mov
cld
jle
push
add
add
inc
inc
mov
decl
add
inc
lret
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
pusha
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
popf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
or
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
adc
adcb
or
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
mov
test
cmp
pushf
inc
mov
popf
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
popf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
popf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
popf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
arpl
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
arpl
inc
add
dec
arpl
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
pushf
orb
xor
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
popf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
clc
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
popf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
add
sub
aad
inc
add
add
xlat
insb
inc
inc
and
dec
add
inc
fnstcw
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
les
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
or
movsl
fiadds
jae
or
loope
inc
xor
pop
inc
shr
inc
and
inc
add
add
out
clc
inc
ret
inc
mov
leave
sub
add
add
sbb
stc
test
lea
mov
dec
int3
mov
movb
dec
ljmp
or
jge
shl
xor
add
rdpmc
sbb
mov
in
cmovne
jecxz
inc
mov
sbb
mov
add
loopne
inc
dec
and
inc
mov
leave
movl
inc
add
inc
xlat
sbb
xor
dec
mov
mov
fadd
inc
rcl
inc
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
mov
cld
mov
mov
pop
sar
cmp
jne
mov
loopne
pushf
jae
add
add
add
jmp
mov
pop
add
add
decl
mov
mov
data16
mov
add
add
data16
ljmp
pop
jle
inc
sbbb
test
jmp
push
jne
lea
movl
sar
mov
loopne
rol
ljmp
push
inc
inc
mov
cwtl
movl
add
add
call
incl
xor
jne
mov
ret
out
mov
push
xor
mov
mov
mov
lcall
and
push
mov
decl
mov
jp
mov
mov
jl
decl
mov
push
decl
orb
xor
call
test
mov
into
xchg
loop
xchg
lods
ret
in
inc
dec
in
xor
add
mov
mov
incl
jno
data16
add
mov
fmull
aam
call
push
mov
xor
add
subl
mov
add
pushl
push
lea
mov
sar
orl
fs
add
add
adc
add
test
inc
incl
dec
mov
mov
push
xor
push
inc
xorl
mov
push
inc
adcw
movl
clc
push
inc
data16
push
pushf
data16
dec
in
test
xor
in
add
decl
mov
lea
push
push
test
inc
inc
mov
push
shlb
test
cs
incl
data16
test
incl
incl
mov
lcall
leavew
xchg
inc
pushl
call
lea
mov
enter
mov
xor
sbb
sbb
dec
mov
mov
movl
mov
mov
sar
sub
mov
add
inc
mov
or
addb
xor
pushf
js
add
mov
inc
xor
lcall
cmp
movl
lcall
dec
inc
mov
mov
mov
nop
ret
add
jne
test
jne
decl
call
sbb
stos
mov
mov
inc
cmp
push
cwtl
inc
add
lcall
test
mov
adcb
add
add
movl
mov
inc
add
cmp
incl
inc
push
xor
add
mov
and
incl
lea
pushf
or
jmp
decl
mov
loopne
movl
sbb
out
mov
push
push
test
mov
cwtl
inc
add
movl
add
add
pushl
or
rorb
cld
sbb
inc
mov
movsb
add
push
movb
jmp
mov
clc
mov
incl
mov
cmp
push
add
xor
add
mov
mov
mov
hlt
movsb
add
add
mov
dec
inc
mov
add
add
add
mov
mov
push
decl
decl
xor
add
push
xchg
inc
incl
jnp
mov
pusha
add
test
decl
ret
add
mov
cli
incl
test
add
or
cmp
add
sub
mov
mov
add
inc
dec
mov
add
mov
inc
push
push
mov
mov
adcl
add
push
add
push
test
decl
mov
sbb
incl
movl
add
add
mov
push
push
test
decl
inc
push
xor
and
call
test
incl
decl
inc
decl
arpl
int
xor
mov
cwtl
pushf
add
mov
mov
incl
adc
addb
adc
push
inc
add
mov
mov
push
adc
mov
mov
addl
incl
inc
cmpsl
mov
add
mov
cmp
movsb
mov
sbb
addb
hlt
add
mov
hlt
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
sub
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
cld
or
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
popf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
popf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pusha
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setge
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
clc
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
inc
adc
inc
inc
push
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
lret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
shlb
add
add
and
fs
inc
test
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
inc
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
inc
popf
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
popf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
pushf
idivl
cmp
je
push
loopne
dec
mov
int
mov
movlhps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
inc
icebp
add
add
mov
mov
enter
pop
jne
mov
pushf
mov
sub
cmp
jne
xor
in
xor
movl
clc
add
ret
decl
ss
dec
push
jle
popa
data16
into
arpl
add
mov
push
cld
add
inc
pushf
add
into
ret
pop
push
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
pushf
clc
mov
test
cmp
fs
or
push
mov
push
push
lret
xor
pushf
mov
mov
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
dec
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
push
add
add
add
lret
lock
inc
lret
xor
pushf
jge
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
mov
in
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
mov
adc
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
popf
push
xor
inc
cmp
or
inc
test
xor
in
hlt
push
push
push
push
mov
popf
popf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
popf
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
push
inc
add
pushfw
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
jne
mov
mov
movl
clc
dec
push
ss
pop
aad
xlat
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
clc
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
popf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
dec
inc
mov
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
aad
xlat
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
mov
sbb
nop
mov
addl
mov
jne
mov
pushf
push
mov
xor
add
lret
add
rorl
mov
mov
mov
fimuls
mov
xor
mov
or
dec
add
or
out
loopne
jmp
lret
xor
je
mov
mov
sbb
mov
fmuls
mov
mov
mov
sbb
sbb
add
movl
leave
mov
push
mov
add
mov
or
mov
or
inc
add
in
add
mov
adc
xor
adc
inc
popf
mov
push
add
cmp
pushf
mov
dec
fwait
dec
jmp
or
sbb
or
dec
lret
dec
rcl
lret
inc
or
sar
lahf
inc
mov
inc
or
iret
add
mov
adc
inc
add
add
dec
mov
mov
ret
inc
add
push
or
test
test
clc
pushf
inc
mov
lock
inc
mov
test
mov
mov
sbb
scas
dec
mov
xor
jb
add
add
add
mov
or
mov
adc
inc
mov
or
inc
inc
cmp
hlt
inc
jne
mov
inc
bound
clc
push
inc
inc
cmp
cmp
dec
mov
push
idivl
or
inc
inc
add
push
loopne
mov
or
xbegin
mov
or
mov
hlt
inc
inc
mov
xor
add
adc
inc
clc
xor
add
or
dec
test
clc
jb
mov
clc
pushf
inc
mov
xor
shr
add
hlt
mov
push
xor
test
clc
mov
mov
clc
mov
xor
mov
hlt
shlb
clc
fmull
mov
in
icebp
dec
decl
loopne
test
clc
dec
inc
mov
in
dec
push
xor
push
mov
push
mov
clc
cmp
inc
test
add
add
jne
lea
cmc
adc
inc
inc
xor
jb
add
inc
rorl
xor
mov
adc
mov
ret
push
push
lea
cli
add
or
mov
xor
mov
add
jne
lea
lods
psubsb
cmc
lret
inc
xor
add
inc
inc
mov
xor
test
clc
dec
inc
xor
setl
lret
int3
rorl
add
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
loopne
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
or
add
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
call
xor
mov
in
rorl
iret
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
in
or
mov
xor
inc
or
iret
add
cmp
jge
mov
in
add
mov
mov
clc
test
std
iret
decl
xor
mov
in
enter
inc
mov
or
jmp
push
decl
xor
push
jne
mov
in
add
dec
test
dec
add
cmp
or
mov
dec
push
lea
xchg
mov
call
inc
mov
or
mov
iret
movsb
mov
push
xor
cmp
jne
lea
lods
dec
call
cmp
cmp
decl
add
fadds
mov
lock
inc
test
xor
add
sbb
xor
rdpmc
testl
or
mov
rolb
iret
cmp
cmp
xor
decl
mov
add
mov
jmp
orl
pop
inc
pop
mov
loopne
mov
push
rorl
push
add
inc
push
popf
dec
xor
add
adc
adcb
add
or
fadds
call
cmp
dec
mov
ret
mov
adc
add
add
mov
movsb
push
inc
add
adc
xor
add
add
mov
incl
mov
push
inc
decl
call
mov
mov
xor
lea
adc
add
dec
xorb
add
pcmpeqw
mov
pop
push
leave
or
xor
in
adcl
xor
push
dec
in
or
inc
inc
mov
push
and
mov
jb
add
inc
mov
or
jl
sbb
dec
xorb
add
xor
mov
add
dec
dec
adc
push
sbb
inc
push
decl
mov
or
mov
test
jge
xor
pushf
or
push
or
inc
or
jb
call
mov
mov
adc
and
lea
or
ret
je
sbb
mov
mov
je
pop
and
push
and
and
incb
and
pop
adc
in
ret
mov
pushf
incb
jge
mov
cmp
adc
push
decl
adc
mov
into
scas
mov
das
inc
jne
and
and
lea
jb
xor
adc
xor
jne
sbb
.byte
inc
pop
pop
