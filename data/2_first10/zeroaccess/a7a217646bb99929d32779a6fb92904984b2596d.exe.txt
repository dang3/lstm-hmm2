push
mov
sub
xorl
push
movzwl
sub
mov
push
push
andl
call
test
movl
je
adcl
xor
jmp
push
push
xor
andl
inc
push
push
call
xorl
test
movl
je
xor
movl
jmp
sbbl
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
subl
push
movl
push
call
andl
test
jne
push
push
adcl
call
test
movl
jne
push
push
call
xorl
test
jne
addl
push
andl
push
addl
call
test
movl
jne
push
xorl
push
push
subl
call
notl
test
movl
jne
push
push
adcl
push
call
test
jne
xorl
push
andl
push
subl
call
subl
test
jne
push
push
andl
call
test
movl
jne
andl
push
sbbl
push
addl
call
test
movl
jne
push
andl
push
push
call
orl
test
jne
addl
push
andl
push
push
andl
call
xorl
test
jne
push
push
xorl
call
movl
test
movl
jne
subl
push
xorl
push
andl
call
test
movl
jne
subl
push
adcl
push
xorl
call
test
movl
jne
push
xorl
push
push
decl
call
test
movl
jne
push
push
adcl
push
sbbl
call
xorl
test
movl
jne
push
orl
push
call
test
movl
jne
andl
push
push
addl
call
adcl
test
jne
push
push
orl
call
test
jne
push
push
addl
push
call
subl
test
movl
jne
push
addl
push
push
xorl
call
movl
test
jne
push
push
call
andl
test
movl
jne
orl
push
push
negl
call
orl
test
movl
jne
subl
push
push
call
test
jne
xorl
push
push
sbbl
push
adcl
call
xorl
test
movl
jne
sbbl
push
push
xorl
push
addl
call
sbbl
test
jne
orl
push
push
adcl
call
test
jne
sbbl
push
adcl
push
xorl
call
test
movl
jne
addl
push
subl
push
xorl
call
addl
test
jne
xorl
push
notl
push
andl
push
call
test
jne
push
push
push
xorl
call
sbbl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
xorl
push
call
subl
test
movl
jne
push
push
call
orl
test
jne
subl
push
adcl
push
push
andl
call
addl
test
movl
jne
addl
push
push
adcl
push
call
adcl
test
movl
jne
subl
push
push
subl
call
subl
test
movl
jne
adcl
push
adcl
push
call
orl
test
jne
subl
push
push
call
orl
test
movl
jne
push
push
push
orl
call
test
jne
push
movl
push
movl
push
call
test
movl
jne
movl
push
xorl
push
call
test
movl
jne
push
subl
push
subl
call
addl
test
movl
jne
subl
push
push
call
subl
test
movl
jne
sbbl
push
adcl
push
adcl
push
xorl
call
andl
test
jne
movl
push
xorl
push
xorl
push
andl
call
adcl
test
movl
jne
subl
push
addl
push
subl
call
xorl
test
jne
addl
push
push
adcl
call
test
jne
push
addl
push
call
orl
test
movl
jne
subl
push
push
andl
push
xorl
call
adcl
test
movl
jne
push
movl
push
push
call
addl
test
movl
jne
movl
push
subl
push
call
test
movl
jne
push
push
call
addl
test
jne
addl
push
subl
push
call
test
movl
jne
sbbl
push
xorl
push
addl
push
addl
call
movl
test
movl
jne
andl
push
push
push
call
sbbl
test
movl
jne
xorl
push
adcl
push
adcl
call
addl
test
movl
jne
adcl
push
adcl
push
call
test
movl
jne
adcl
push
xorl
push
subl
call
xorl
test
jne
push
adcl
push
push
andl
call
andl
test
jne
push
push
subl
push
call
test
jne
push
push
sbbl
call
test
movl
jne
subl
push
push
call
test
movl
jne
adcl
push
subl
push
andl
call
test
movl
jne
andl
push
orl
push
orl
push
adcl
call
andl
test
jne
orl
push
push
push
call
sbbl
test
movl
jne
sbbl
push
push
call
sbbl
test
movl
jne
sbbl
push
orl
push
call
test
movl
je
subl
xor
movl
jmp
or
movl
movzbl
add
mov
dec
mov
mov
mov
mov
sub
imul
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
sbbl
lea
mov
mov
and
mov
lea
mov
subl
mov
mov
orl
mov
mov
mov
adc
xor
mov
add
movl
mov
mov
mov
cmp
jne
xor
mov
mov
orl
mov
or
xor
and
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
sub
mov
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
xor
add
mov
sub
mov
mov
sbb
mov
mov
orl
mov
mov
decl
mov
subl
mov
andl
mov
mov
addl
movl
adcl
mov
andl
xor
add
movl
jmp
add
mov
adcl
mov
xor
subl
lea
push
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
sub
mov
adcl
xor
lea
push
addl
mov
pushl
xorl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
xor
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
andl
mov
xor
mov
addl
xor
xor
andl
add
mov
negl
xor
lea
movl
mov
movl
cmp
movl
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
adcl
inc
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
movzwl
xor
mov
mov
sbb
push
mov
sbb
mov
mov
mov
add
xor
add
mov
subl
push
mov
add
movl
cmp
movl
je
inc
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
sbb
mov
xorl
xor
xorl
xor
addl
add
add
movl
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
jmp
jmp
iret
push
jae
lret
xchg
mov
dec
jle
jp
jp
xlat
pop
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
mov
cltd
enter
ljmp
fwait
lret
int
fs
and
mov
stos
movsb
sub
cmpsb
pop
sub
andl
adc
inc
and
inc
leave
xor
mov
cmc
xchg
sub
rorb
pop
cmpsb
xorl
std
and
jb
loopne
sub
push
int3
jae
rcrb
inc
je
lret
in
add
stos
xchg
leave
cmpsl
pop
daa
pop
pop
inc
bound
push
sub
jle
cmp
pop
mov
daa
scas
fidivs
mov
push
test
lahf
lea
fcoml
sbbl
or
addr16
mov
pop
test
movhps
xorl
loopne
loop
add
cmc
and
es
pop
scas
mov
mov
enter
dec
xor
and
dec
lds
adc
inc
out
cmpsl
fdivrs
sarb
or
dec
adc
add
enter
ss
mov
aam
shl
jge
addr16
mov
jecxz
aad
movl
notb
fidivrs
xchg
std
in
mov
pusha
repz
in
push
jae
fwait
push
push
rorb
imul
aam
repz
jg
test
addr16
add
xchg
mov
jecxz
mov
dec
pop
push
incb
jo
stc
jnp
inc
push
dec
mov
sub
jb
xor
stc
mov
cmp
movsl
or
cmp
movsl
push
xchg
push
test
pop
adc
cltd
push
je
pop
xorl
push
in
mov
loop
inc
lcall
xchg
mov
adc
pop
push
int
adc
xchg
or
shrl
dec
push
shlb
adc
das
stos
clc
je
aas
call
repz
repz
out
push
and
push
stc
adc
inc
jg
push
mov
adc
and
ss
xor
jo
iret
fwait
dec
jnp
mov
adc
loopne
outsl
cmp
jnp
push
lods
xor
imul
cltd
sahf
out
push
or
aam
adc
repnz
fldl
sti
mov
lea
notb
lret
rcrb
dec
dec
dec
inc
negl
jge
pop
pushf
adc
data16
fnsave
mov
rcr
push
mov
and
jne
stos
int3
push
jo
push
in
dec
sub
fdivs
fwait
das
les
int3
jae
or
shrl
je
insl
pop
stos
xor
jns
cmpsl
cmpsb
mov
adc
rcrb
dec
dec
ljmp
enter
lret
cld
sbb
jmp
pop
add
jno
sbb
mov
inc
cwtl
insb
add
mov
jae
leave
xchg
sub
rorb
cmp
xchg
mov
and
pop
cmpl
lcall
icebp
arpl
ret
ds
add
movsb
cmp
inc
imul
jp
push
lock
fiaddl
xor
fstl
daa
fiadds
lock
push
int
fs
adc
xchg
adc
addr16
add
subl
xchg
mov
dec
pop
xchg
mov
cld
insl
jbe
inc
add
stos
pushf
push
adc
pop
fiaddl
insb
xchg
out
add
push
std
add
js
jp
mov
ret
inc
sbb
xchg
push
sub
lret
dec
mov
sub
dec
push
push
leave
adc
or
xorb
xchg
mov
fcomps
jns
cltd
gs
xor
aaa
sbb
inc
xchg
call
ficompl
mov
aad
mov
fstps
or
sbb
and
sbb
into
lea
jne
push
push
popa
inc
inc
pop
data16
jne
stc
lcall
mov
outsb
xor
xor
outsb
or
jle
sbb
xchg
xchg
push
enter
adc
mov
xor
cmp
sub
inc
mov
insl
repnz
jnp
or
or
pushf
into
sub
jl
lds
sarb
xor
xor
add
sti
and
dec
in
xchg
or
lock
shll
lret
mov
rcll
sahf
pusha
lret
cmp
or
in
stos
loopne
lds
or
ljmp
dec
in
mov
popl
xchg
jb
mov
sbb
lds
jl
dec
ljmp
cmp
insb
lcall
ret
mov
jg
sub
adc
in
jo
ss
push
push
xlat
mov
fadds
mov
and
jno
fimuls
enter
mov
dec
ja
pop
sub
xchg
pop
into
mov
jnp
scas
cwtl
subb
inc
je
in
lret
jl
or
outsl
cmp
fstpl
mov
adc
add
pop
sub
sbb
cmp
and
icebp
pandn
mov
in
arpl
cmpsl
orb
mov
std
jo
inc
adc
push
sbb
add
icebp
loope
add
out
and
roll
cs
sub
outsl
dec
cmc
pop
in
adc
testb
jo
mov
aad
jl
movsl
test
mov
jnp
inc
fstl
scas
out
mov
dec
xor
add
jno
and
push
push
pop
imul
ljmp
xor
into
dec
pop
enter
push
test
mov
mov
daa
add
jno
lods
mov
cli
int
xor
in
fstpl
dec
insb
cmp
sub
push
cs
pop
and
and
out
mov
aad
data16
cmp
ss
xchg
jb
push
inc
jns
cmpsl
pushf
outsb
cmp
xor
pop
and
pop
lcall
xchg
out
jne
xchg
xor
jg
lret
ror
fcomps
and
inc
js
push
loopne
fwait
push
dec
sbb
stc
pop
sbb
push
push
inc
inc
fucomip
and
and
pop
add
fs
fisubrl
lahf
adc
add
scas
ret
xor
rcrl
mov
ret
xor
out
jecxz
mov
inc
cld
mov
dec
fisubs
dec
xor
fidivs
jbe
push
fisttps
adc
cmp
pop
ja
stc
mov
test
repnz
ret
sub
mov
sub
mov
jne
dec
xchg
pop
lcall
add
sub
mov
cmp
push
adc
sbb
dec
shl
or
xchg
or
pop
je
ss
adc
daa
cmpsl
hlt
outsb
rcr
mov
jle
push
mov
xchg
inc
cs
cmp
cli
jbe
pusha
shrb
ret
mov
xchg
pusha
adc
mov
int3
int
loopne
adc
fldl
pop
push
aad
inc
xor
stos
fistpll
nop
or
pop
jae
mov
push
ret
stos
pop
cmc
push
sahf
pop
popa
sub
lods
sbb
hlt
ret
mov
and
push
mov
dec
sbb
fisubrs
and
xchg
rcrl
sub
mov
imul
jbe
daa
fistpll
insl
add
or
mov
lods
mov
xor
ss
and
loop
ss
push
lock
pusha
fisubrs
pop
addr16
in
clc
xor
shlb
sbb
mov
fisttpll
inc
inc
loope
enter
aad
test
ret
and
addb
cwtl
sbb
mov
out
cmp
cmp
cltd
sub
pusha
mov
jns
dec
je
xor
or
std
push
lds
mov
jne
mov
xchg
shrl
inc
mov
and
stos
lea
inc
dec
mov
loopne
dec
pop
ret
mov
jns
mov
fsubs
ret
mov
daa
dec
add
jb
lret
and
and
pop
sbb
inc
inc
cmp
cs
mov
inc
jno
xlat
in
test
push
mov
shlb
loop
jb
dec
outsl
cmp
roll
sbb
cmp
js
mov
loope
jnp
popa
mov
fcmovne
aam
cmp
pop
and
in
pop
insl
pusha
out
ljmp
push
test
push
stos
aad
pop
test
pop
aaa
ret
mov
out
shl
shl
jl
cmp
mov
and
icebp
xchg
jmp
negl
fldt
loope
xchg
sub
push
out
xor
and
stc
pop
repz
test
adc
and
sbb
jp
cmp
jo
adc
movsb
js
jno
mov
fstl
cld
lock
jb
lods
lock
leave
and
pop
out
sbb
ret
aad
dec
lcall
mov
cltd
cmp
pop
jmp
es
hlt
dec
xchg
cwtl
mov
popa
mov
or
loope
mov
scas
cltd
dec
inc
jno
flds
daa
xchg
in
aam
jl
push
cltd
addl
adc
pushf
cmpsb
pop
sbb
clc
dec
add
popa
sbb
pop
aad
decl
adc
shll
push
dec
xchg
mov
ja
push
cvtps2pd
xchg
sbb
and
and
cmp
mov
sub
or
aad
or
or
sti
xorb
adc
popf
stos
mov
test
mov
add
cmpsl
mov
add
add
and
xchg
jecxz
dec
je
mov
adc
dec
pushf
rcl
dec
out
setb
add
ljmp
aam
push
lcall
cmc
push
das
jo
dec
push
roll
adc
cmpb
gs
push
hlt
push
push
push
addl
or
jne
adc
bound
arpl
repnz
mov
stc
cmp
mov
mov
movsl
jg
mov
andl
aaa
mov
mov
lret
and
jge
and
jmp
sub
adc
scas
daa
je
mov
lea
sub
cltd
pop
cmp
cmp
dec
mov
sub
test
dec
fdivrl
inc
in
imul
inc
divb
add
movsb
xchg
xor
int
xchg
xchg
xchg
add
pop
lcall
call
mov
mov
fwait
xchg
cmpsb
jnp
lea
mov
ficompl
cmp
and
sub
arpl
fisttpll
test
icebp
inc
lret
cvttps2pi
jl
and
xor
pop
pop
ja
outsl
mov
dec
mov
mov
and
fimull
adc
sub
cmp
cs
sub
sub
mov
ret
xor
test
push
xor
imul
ja
sbb
in
or
jge
mov
sahf
cmc
rolb
test
mov
lret
jne
mov
shlb
fucomip
sbb
sbb
fldl
jge
adc
ret
cmpl
out
jmp
ljmp
jb
js
les
fisubl
cmp
inc
pop
or
adc
dec
lods
jmp
mov
icebp
cltd
loop
sbb
sbb
mov
into
mull
xchg
cmpsb
cmp
addr16
cli
inc
jecxz
xor
cwtl
je
xchg
push
testb
sar
cwtl
and
stc
add
inc
ja
cmp
aas
outsl
mov
dec
xor
test
cmp
test
mov
bound
scas
jp
lock
inc
fdiv
shl
dec
push
adc
dec
ret
lods
jo
cs
jge
push
ss
outsb
adc
outsl
insb
test
or
cmp
pop
cmpb
xchg
scas
cmpsb
lds
out
or
sbb
xor
or
push
sub
insb
push
das
jg
mov
lcall
add
int3
mov
nop
sahf
popf
xchg
insl
add
pop
mov
add
mov
xor
jge
mov
ret
jns
push
arpl
jmp
outsb
and
and
jle
mov
mov
mov
and
rcll
push
icebp
mov
adc
add
jge
test
aam
hlt
or
stos
cmp
test
dec
icebp
ret
push
xor
adc
dec
cs
dec
cmpl
repz
test
js
jnp
mov
push
pop
pop
out
cmpsb
cwtl
push
sbb
add
subl
sub
data16
movsb
lahf
test
xchg
iret
or
shrb
xor
stos
pop
sub
jo
pop
xor
je
ficoml
icebp
inc
pop
add
sub
mov
dec
jp
fcomip
fistl
inc
inc
mov
cmp
fmull
fsubr
and
scas
jbe
cmp
and
popf
push
stos
out
xchg
dec
addl
adc
clc
push
inc
es
cmpsl
cmp
inc
or
aaa
jae
fdivrl
rcr
pop
ret
mov
mov
pop
dec
dec
dec
ret
xchg
sarl
or
xchg
adc
xor
std
js
ds
loope
daa
fs
xchg
int3
adc
sub
mov
pop
stos
jge
jle
stc
cmp
dec
inc
jno
rcrb
and
mov
jnp
push
ja
shlb
xlat
lret
cmpsl
in
mov
dec
jmp
xor
mov
lahf
and
lock
jns
pop
and
mov
xchg
lods
xchg
out
dec
jno
cltd
mov
decb
iret
test
ja
cmp
and
cmp
xorb
js
out
cmp
push
ret
outsb
push
lret
ret
jo
cmp
jne
or
leave
rcrl
push
and
ret
lds
or
mov
js
std
ja
clc
pop
jp
xchg
sahf
cmpsl
push
mov
mov
cmp
es
aam
add
or
xchg
cltd
jbe
sub
pop
mov
or
sub
sub
ja
inc
cmp
cvtps2pi
sub
icebp
out
xchg
ret
test
pop
mov
xchg
lahf
fistpll
xor
cmp
mov
bound
dec
pop
jl
cmp
cmp
push
mov
int
adc
jnp
roll
je
repnz
pop
push
jns
pop
cmp
jmp
dec
sahf
lahf
mov
inc
in
jbe
dec
and
mov
repz
pop
dec
inc
or
rcll
popf
mov
test
std
mov
xchg
xor
xchg
pop
or
scas
add
in
xor
sub
rcl
lahf
movsb
faddp
push
into
inc
pop
rcr
or
leave
lock
js
adc
pusha
xchg
pusha
jecxz
inc
pop
xchg
test
sbb
ret
outsl
vpackssdw
testl
dec
shlb
dec
rcrl
std
imul
cmpsl
xor
mov
call
jae
ret
lcall
pop
lret
dec
ret
mov
sub
fldcw
lcall
scas
lcall
lds
sub
sbb
xorl
shl
adc
movsl
push
adc
mov
xor
xchg
xchg
outsl
test
push
mov
in
mov
dec
test
movsb
mov
lcall
in
dec
fwait
call
dec
xor
sti
lods
in
cli
andl
test
mov
jae
out
xor
push
pop
movb
sub
jp
or
jno
fldenv
and
fwait
jmp
subl
imul
push
into
out
arpl
sub
mov
sub
cmc
pop
push
insb
xchg
lahf
insw
mov
arpl
fwait
divb
jnp
dec
inc
xchg
dec
add
push
aaa
rorl
sbb
lock
adc
fbld
rcll
scas
clc
or
loop
jmp
pop
jg
mov
iret
lock
mov
xor
jmp
sbb
xchg
dec
insl
push
dec
imul
xor
bound
fsqrt
cld
int3
sbb
shll
add
fistpll
inc
daa
dec
jg
dec
add
lret
neg
cmp
cmp
push
fstl
out
jg
jo
cs
sti
out
push
pop
lock
ret
cwtl
sub
je
loop
stos
pop
add
into
faddl
in
or
popa
mov
fs
inc
push
nop
fmuls
xor
mov
xor
popf
imul
cmpsb
insb
ret
adc
xor
jae
lret
dec
mov
scas
mov
pusha
push
inc
xchg
pop
in
mov
dec
mov
test
int3
outsl
loopne
jecxz
jb
pop
add
cmp
add
push
fs
cmc
mov
dec
imul
pop
push
bound
cmpsb
fnsave
scas
cltd
inc
jb
test
mov
mov
jns
lcall
jg
dec
push
adc
and
mov
jle
push
inc
push
stos
mov
ret
les
popa
mov
rorl
inc
push
arpl
ds
rcll
lahf
lcall
add
jp
pop
pop
ret
inc
push
mov
insb
aaa
mov
icebp
pusha
pop
inc
xchg
sti
dec
ficomps
popf
jae
adc
imul
inc
or
in
lods
mov
jno
dec
mov
add
ljmp
shll
jmp
jns
push
push
data16
mov
push
or
inc
cs
fsubp
add
pop
daa
addr16
sub
test
icebp
hlt
dec
inc
pop
push
ret
daa
xchg
test
and
sub
mov
sub
sbb
sub
xor
ficomps
ljmp
icebp
ja
or
or
sar
inc
push
mov
sti
xlat
adc
dec
enter
lds
sbb
je
into
inc
sub
mov
fisttps
pop
xor
out
pop
mov
stos
dec
aam
xor
clc
jnp
mov
js
or
sub
xor
cmpsb
fisubrs
adc
jl
call
inc
cmc
dec
jg
push
adcb
repnz
sahf
sub
xchg
leave
jge
mov
aaa
adc
sahf
jg
pop
adc
adc
in
iret
add
mov
and
daa
les
test
fldcw
pushf
xchg
cmp
cmpsb
or
adc
ss
mov
test
je
ja
loop
adc
rcl
cmp
shlb
jp
movsb
mov
dec
add
ss
scas
mov
pop
mulb
test
mov
mov
push
mov
jmp
fcmovu
jmp
sbb
mov
adc
inc
push
out
in
icebp
and
arpl
shlb
iret
pop
pop
add
or
aam
lods
dec
sbb
fisubrl
dec
adcl
sub
fnstcw
enter
jmp
mov
fcompl
in
pop
popf
xor
mov
push
cs
xor
mov
cmp
in
dec
jae
incb
or
les
lret
jns
push
jp
cmp
jbe
pop
in
js
push
pop
push
or
cmpsl
into
mov
hlt
pop
out
dec
cmp
lods
sbb
mov
xchg
xchg
mov
inc
jo
adc
loope
mov
pop
mov
mov
xchg
ss
movsb
scas
dec
push
fwait
pop
jae
aas
insb
xor
mov
jnp
bound
xor
xchg
lcall
jg
push
int
dec
stos
pop
mov
into
dec
inc
insb
xchg
xchg
mov
mov
idivb
js
stos
fs
iret
and
mov
fldcw
mov
xor
add
or
out
clc
adc
mov
aad
mov
test
jb
push
sbb
mov
cmp
cli
mov
lods
inc
decl
ja
addb
lock
popf
call
xchg
or
xor
fnstcw
inc
rcl
out
dec
ss
adc
mov
sub
mov
insb
adc
inc
mov
cmp
sub
mov
xchg
push
popa
adc
ds
adc
cmpsl
pop
dec
jmp
sbb
push
xor
adc
lods
scas
add
xchg
push
loopne
test
inc
aam
push
cmp
mov
std
push
outsb
out
aad
mov
dec
mov
aad
jmp
clc
bound
jl
inc
add
fidivrl
test
push
loope
cltd
cld
cmp
mov
jle
pop
insb
out
out
insl
out
ret
in
pop
add
mov
mov
int
jmp
mov
movsl
mov
addr16
cmpsb
and
push
testb
fs
movsl
std
xchg
mov
in
jae
and
gs
ja
pushf
fwait
or
inc
mov
jnp
testl
lcall
hlt
push
pop
pop
xor
pop
mov
pop
adc
stos
es
cld
push
mov
adc
pop
dec
or
inc
lods
cmpl
or
mov
outsl
cs
stos
mov
jbe
mov
or
push
test
jno
stc
mov
test
mov
imulb
add
xchg
pop
sub
stos
loop
xor
mov
mov
jl
push
jnp
jl
clc
sbb
imul
ret
dec
or
mov
aad
sub
fisttps
mov
mov
ds
iret
lods
mov
dec
mov
frstor
sbb
mov
or
std
popa
xchg
adcl
dec
jmp
or
fldenv
xor
int
xor
cmc
inc
cltd
lods
mov
lret
pushf
adc
xor
sbb
jecxz
repnz
cmp
mov
lret
mov
xchg
es
and
pop
xchg
add
add
int
aas
fsts
or
sarl
cmp
dec
sub
inc
nop
add
imul
xchg
mov
inc
imul
imul
or
xchg
in
push
or
loop
sarb
mov
sbb
sbb
inc
ss
or
insb
mov
clc
sub
mov
into
loop
xor
and
or
inc
pop
sub
mov
sbb
push
enter
testl
cmp
inc
call
fisubrs
pop
bound
outsb
dec
xchg
sahf
mov
mov
clc
addr16
sbb
jbe
push
jp
xor
fwait
mov
dec
cmp
int3
inc
cmp
push
popf
or
pushl
scas
push
inc
clc
test
push
lea
adc
add
iret
ljmp
add
in
or
shrl
mov
loope
mov
cmpsb
aad
push
or
outsb
test
aaa
sbb
push
and
test
stc
aas
inc
hlt
xchg
pop
mov
lods
test
xchg
push
cmp
mov
imul
cmp
pop
outsb
push
aaa
and
mov
pop
jo
js
add
dec
pop
pushw
imul
xorl
cmpsl
pushf
divl
int
stc
mov
fcompl
adc
call
popf
add
pop
lods
enter
loop
xor
fmull
sahf
push
cmp
jbe
shrb
xchg
mov
pop
outsl
jp
call
mov
data16
imull
aas
frstor
cmp
jne
std
hlt
or
mov
lea
sbb
cli
dec
les
jmp
sub
cmp
mov
push
cwtl
lea
aam
mov
xor
int3
pop
cmc
shrb
dec
xchg
sti
cmp
cmpsb
pop
xor
test
ss
gs
sti
fists
scas
jmp
aad
aad
xor
sbb
idivb
fadds
mov
jae
mov
cmp
mov
push
out
les
sub
aas
or
imul
stos
sub
aas
jg
cmp
outsb
inc
xchg
fstps
mov
sbb
mov
adc
lods
cs
dec
or
aam
ret
bnd
notb
js
aas
lds
iret
and
lahf
xchg
jnp
ja
sahf
jne
adc
iret
add
mov
cmp
add
xor
pop
stc
sbb
xor
cmp
es
xor
nop
notl
inc
fs
pop
cmp
jne
and
lds
aas
mov
arpl
pop
adc
pop
sbb
mov
adc
xchg
in
jge
inc
pop
fwait
sarl
add
sarb
xor
sbb
nop
cmpsb
mov
stos
data16
cld
and
das
ret
repz
mov
jg
rorl
inc
jno
mov
lret
ret
test
dec
adc
pop
or
negb
push
push
outsl
movsb
and
pop
jl
jmp
mov
cmp
add
mov
adc
lret
adc
jge
dec
sbb
cwtl
cmp
aas
repnz
mov
mov
mov
jnp
mov
dec
addr16
cmp
dec
mov
jl
adc
push
inc
in
imul
outsb
push
mov
out
test
fstp
mov
dec
loope
pop
movsl
xchg
cmp
es
lods
push
push
jno
sbb
mov
mov
dec
jle
sub
movsl
bnd
nop
dec
into
jne
aam
sub
xchg
repz
xor
shrb
cmp
imul
test
mov
pop
in
das
xor
push
dec
nop
test
adc
cmp
push
jns
or
orb
sbb
mov
lcall
sti
out
xor
add
scas
into
cwtl
sub
inc
nop
insb
repnz
or
pop
emms
push
ja
into
adc
pop
adc
aad
pusha
scas
dec
mov
shrb
sbbl
jb
out
add
mov
cwtl
adc
loope
inc
fsubs
movsb
adc
loopne
or
sbb
stc
lcall
add
and
xchg
jmp
fcoms
cltd
daa
ja
sub
cmp
int3
loop
daa
roll
push
inc
daa
int
dec
ret
fistpl
pop
gs
xchg
daa
pop
imul
es
lretw
adc
fcompp
cmc
xorl
cmp
jnp
dec
add
xchg
arpl
mov
fmulp
mov
mov
fsubrs
in
or
bound
mov
jl
mov
loope
sub
inc
test
fcmove
mov
mov
sub
adc
jg
fistps
pop
stos
aad
and
jmp
leave
loope
or
mov
add
es
movhps
xor
cld
push
sub
xor
in
cmc
mov
cmp
rcr
xor
test
pusha
mov
lret
test
inc
ror
xor
mov
popf
inc
test
inc
aaa
push
int
dec
push
sub
lret
sub
out
movsb
dec
fisubl
into
jns
push
fidivs
add
dec
mov
sub
lea
adcl
out
into
lock
pushf
test
shlb
outsb
ljmp
dec
jne
add
in
push
lcall
aad
mov
clc
mov
or
setbe
cmp
xchg
jno
push
sub
push
stc
push
mov
dec
int
test
add
in
jg
icebp
outsb
stos
ja
mov
pop
clc
std
xchg
clc
adc
call
xchg
xchg
inc
jne
push
cmp
xchg
add
xchg
cmp
movb
std
add
or
mov
xor
mov
dec
movsb
js
es
in
mov
mov
iret
je
cmpsb
mov
dec
lock
mov
adc
sbb
mov
xchg
add
dec
xchg
add
sub
fimull
es
orl
sbb
dec
out
cmp
lcall
repz
cwtl
icebp
and
and
mov
adc
ljmp
cmpsb
lcall
xor
das
hlt
xchg
sub
dec
inc
jmp
push
cld
sbb
sbb
test
cmpsl
popa
das
mov
fcmovb
add
and
aam
jle
in
push
js
movl
cmpsb
inc
outsb
xlat
xchg
fisttpll
sub
add
push
mov
cmp
pushf
out
cld
jne
lret
sub
inc
xchg
imul
repnz
jmp
and
cmpsb
jne
xchg
mov
daa
addl
in
xchg
dec
cmc
dec
push
dec
xor
cmpsl
xorb
sub
ret
arpl
pop
std
jl
cmc
cmp
in
pop
in
fiadds
imulb
lret
mov
cld
xor
xor
pushf
jne
xchg
fwait
sbb
or
push
mov
sahf
add
ficomps
jmp
pusha
insl
and
inc
sbb
mov
adc
sbb
sbb
pop
dec
out
cmc
add
jns
sti
jmp
ljmp
lods
nop
push
push
aas
and
mov
inc
cs
and
and
sub
lods
sbb
rolb
lock
xlat
andb
and
inc
iret
shll
jle
xor
mov
rol
mov
mov
je
xchg
rcll
adc
xor
push
loop
pop
xchg
loop
scas
pop
inc
push
dec
hlt
inc
outsl
inc
cmp
rcrb
mov
clc
imul
ret
inc
in
jae
jg
js
insb
imul
mov
insb
cmp
sub
into
mov
mov
pusha
sbb
mov
in
jae
lock
shll
ret
dec
gs
jecxz
fisubrs
or
cmpsl
pop
cltd
addr16
nop
in
xchg
push
mov
mov
sub
xor
dec
jmp
das
in
xchg
mov
or
cmp
jne
or
stos
add
push
add
or
xchg
jecxz
mov
imul
inc
pop
scas
push
aam
push
scas
xor
fsubr
shrl
inc
test
fidivrl
cs
and
stos
pop
pop
les
cltd
mov
mov
sbb
movsb
ja
gs
jne
xchg
fnstsw
sub
in
nop
or
jnp
push
call
or
out
push
xchg
imul
es
jl
or
mov
andb
pop
inc
mov
shrb
in
pop
push
dec
rcrl
cmpsl
lds
jae
lcall
dec
adc
stc
adc
dec
sbb
les
ror
or
je
xchg
cmp
dec
push
push
push
in
rcll
scas
aam
jecxz
mov
mov
cltd
adc
ret
adc
rcrb
add
pushw
mov
call
sub
pop
sub
cli
jmp
inc
sub
mov
arpl
repnz
xchg
mov
out
ja
xchg
push
pop
aam
xchg
pop
hlt
movsl
dec
pop
push
popf
add
and
hlt
sub
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
add
movl
sbbl
mov
xorl
mov
add
xor
cmp
movl
jne
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
orl
add
mov
mov
mov
xor
push
mov
and
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
push
push
push
lea
xorl
push
push
movl
call
addl
push
call
adcl
movl
movl
mov
mov
addl
xor
orl
mov
add
mov
notl
mov
test
movl
je
inc
mov
andl
mov
dec
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
imul
movzbl
xor
mov
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
adcl
xchg
xor
mov
sub
sbb
mov
sub
xor
mov
and
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
andl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
mov
xor
add
sub
mov
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
or
xor
dec
add
mov
andl
sub
orl
lea
addl
xor
adcl
xor
cmp
je
mov
orl
xor
sbbl
add
cmp
movl
jne
andl
pushl
addl
call
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
mov
dec
xor
sub
mov
movl
add
movl
cmp
movl
je
addl
pushl
pushl
call
mov
sub
mov
mov
mov
movl
xor
orl
add
movl
cmp
movl
je
mov
mov
sub
sub
mov
mov
mov
and
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
jmp
or
xchg
loop
movsb
emms
adc
cld
xlat
pop
jp
aaa
pop
jp
shlb
outsl
stc
test
pop
cmc
adcl
cmp
adc
gs
repnz
scas
mov
mov
cvtdq2ps
sti
xor
stos
mov
cmpsb
cmp
xchg
xchg
cvtdq2ps
push
lret
stos
pushf
aam
iret
fcoms
iret
gs
xor
leave
cwtl
nop
push
jp
iret
js
enter
cmp
sbb
adc
xlat
jecxz
rol
adc
adc
js
inc
inc
lods
push
loopne
cmp
test
cld
pop
dec
insl
call
jmp
mov
mov
or
xor
dec
movsb
mov
inc
jne
lcall
scas
push
dec
loop
mov
int
dec
adc
jecxz
lea
cmp
xchg
push
pop
inc
das
push
scas
adc
rcll
cmpsb
mov
test
gs
jmp
stos
mov
sti
adc
fnstcw
jle
jmp
and
add
lods
nop
xchg
jmp
xor
cmpsb
xchg
lds
xchg
add
cmp
test
jg
bound
leave
stc
mov
jmp
mov
push
pop
xchg
cmp
mov
sar
push
nop
mov
rcrb
fdivr
fists
push
lahf
and
xor
lds
jp
jge
sar
push
sub
adc
aad
lds
xorb
xor
cmc
add
jle
pop
aam
jg
repnz
push
jno
jb
pop
lahf
pop
mov
xchg
cli
adc
cmp
push
push
xchg
out
ds
inc
jnp
mov
iret
mov
test
dec
push
iret
mov
int
mov
fldenv
in
lods
aad
sarl
addr16
pop
jae
sub
ror
outsb
lahf
out
jmp
ds
jg
pop
dec
pop
inc
jb
subb
push
xor
aaa
sub
lods
sub
sbb
int3
dec
in
xor
dec
pushf
mov
rcrl
xlat
clc
xchg
filds
inc
lods
xlat
mov
pminsw
add
int3
pop
mov
mov
arpl
push
test
insl
pop
ret
adc
scas
mov
aaa
xchg
daa
adc
sarb
jg
fadds
or
inc
or
pop
into
mov
sbb
scas
scas
test
out
cmp
in
cmpsl
push
pop
decl
icebp
add
jmp
add
loope
jns
jp
aad
iret
xchg
add
hlt
cmp
xchg
sti
sahf
cwtl
lcall
lcall
lds
pop
jbe
inc
je
ljmp
mov
fwait
outsb
stos
bound
je
and
dec
mov
sub
push
imul
call
add
add
ret
sub
sub
ljmp
mov
dec
dec
jno
mov
iret
out
andl
pop
mov
lods
lahf
shlb
scas
fwait
push
and
fsincos
mov
mov
call
sub
rolb
fdivr
mov
mov
inc
fdivl
clc
lods
insl
dec
mov
mov
cmpsl
and
dec
call
and
and
cmpsl
xchg
into
jge
test
mov
jnp
xchg
dec
sub
cmp
lret
mov
xor
test
scas
lret
hlt
iret
jmp
pop
jmp
mov
or
adc
lret
fildl
sub
addr16
xor
xchg
adc
lret
push
in
and
sub
add
and
mov
or
inc
mov
and
les
lea
push
mov
push
dec
lods
std
add
xchg
inc
fiaddl
jbe
xchg
mov
out
dec
jbe
jge
mov
mov
and
aas
ret
xor
jo
popf
lcall
daa
je
xchg
sub
or
xorb
or
add
aad
fcmovnb
inc
mov
int
popf
je
loopne
test
enter
lret
sub
ficoml
imul
xchg
mov
lcall
fldcw
imul
fldt
imul
dec
sarb
sbb
adc
inc
shlb
fidivrs
outsl
aad
pop
or
enter
pop
mov
dec
sbb
dec
adc
out
push
sub
shrb
inc
lods
fndisi(8087
or
aad
adc
mov
in
mov
inc
ss
imul
insl
lcall
lea
cld
or
sbbl
test
aad
in
dec
sbb
sub
jle
push
push
xchg
mov
dec
mov
ja
add
cmpsl
lret
mov
inc
adc
test
mov
enter
inc
loopne
or
push
or
mov
or
mov
and
jae
fstl
lcall
cmp
aam
adc
xchg
and
mov
call
movb
pop
push
call
add
mov
xor
or
insb
add
icebp
dec
or
cmc
add
jmp
jp
int
std
mov
inc
sub
mov
scas
or
dec
repnz
jne
lods
jo
mov
xchg
sbb
dec
cld
add
int
xchg
std
sbb
adc
inc
clc
and
rclb
pop
movsb
ja
sub
pop
xchg
loopne
push
lds
jno
and
insb
lods
ja
mov
sbb
cwtl
hlt
sbb
dec
cwtl
mov
pusha
fsts
cli
je
test
rolb
xor
cmpsb
bound
push
add
decl
mov
inc
xchg
xor
test
movaps
sbb
lret
push
inc
pop
cmp
jmp
jecxz
sub
adc
fsubrl
lea
mov
movl
sbb
jecxz
and
push
mov
mov
insb
xchg
mov
mov
aas
int
fisttpll
repnz
insb
jne
jns
aam
mov
or
dec
push
iret
adc
out
pop
lcall
sti
xor
mov
repz
andb
fs
mov
dec
cmp
push
icebp
inc
pop
jbe
mov
and
in
sub
int
ljmp
jmp
mov
sub
xor
pop
mulb
movsl
hlt
fiaddl
sbb
into
cmp
imul
push
xchg
rorl
jae
sbb
jno
xor
push
lret
pop
mov
xor
xor
adc
jecxz
arpl
enter
sahf
mov
adc
mov
cmp
call
jmp
lahf
xchg
imul
xchg
js
push
scas
popa
shlb
shl
sahf
dec
je
jae
add
push
enter
scas
pusha
push
ja
sub
shr
mov
and
mov
pop
into
push
xor
rorl
adc
sub
hlt
into
sbb
push
fcmovnbe
sbb
add
bound
loop
nop
mov
sub
pop
xchg
xor
enter
icebp
adc
xor
jnp
sub
fildl
loope
arpl
into
or
lods
rorb
movsl
mulb
sahf
scas
lea
cmp
dec
xor
and
idiv
stos
into
mov
cmp
and
std
ds
cmpsl
cmp
lret
iret
inc
pop
xchg
jne
push
inc
test
orl
inc
movsl
mov
mov
leave
loopne
or
std
cld
mov
dec
insb
inc
cld
inc
push
add
push
fisttpl
sti
xlat
adc
xchg
fwait
xlat
in
xor
mov
dec
push
mov
out
cmp
pop
push
dec
mov
ret
mov
int3
sarb
xor
sbb
sbb
mov
js
es
dec
aaa
jns
inc
jo
cmpsb
mov
xor
pop
idivb
roll
ficomps
lahf
mov
mov
adc
in
adc
push
add
and
push
cmp
test
mov
xchg
inc
ss
inc
out
js
jb
pop
adc
sub
sub
in
je
jne
frstor
push
imul
jnp
mov
adc
mov
jbe
cmpb
mov
pop
mov
jmp
cs
sub
mov
mov
das
stos
stc
push
shlb
je
sbb
add
rcll
xor
insl
pop
sub
jnp
fsubrs
hlt
data16
lods
xlat
dec
add
mov
mov
lock
xchg
outsl
out
out
cmpsb
xor
js
sbbb
inc
andb
addr16
movsb
inc
daa
ja
test
hlt
adc
add
scas
push
push
or
in
outsl
aam
sbb
je
xor
mov
xchg
pop
test
nop
sbb
and
outsl
adc
pop
push
into
adc
sbb
mov
adc
mov
popf
dec
dec
and
inc
and
cli
sbb
hlt
scas
mov
or
jge
shrb
iret
and
sbb
test
mov
stc
les
jecxz
lcall
jns
push
mov
mov
outsb
mov
push
and
and
xorl
xor
dec
jo
jg
sub
mov
cmp
js
pop
fdivs
test
fwait
adc
adc
sub
test
sub
je
popa
iret
jno
movsb
push
mov
orl
mov
into
pusha
imul
nop
scas
nop
test
les
jo
mov
pop
adc
lret
in
out
cmpsb
jnp
pop
xchg
sbb
jle
adc
push
or
sbb
cmpsb
push
sbb
jl
sub
out
mov
fnstsw
int
bswap
adc
ja
push
dec
adc
enter
cmp
fsubrl
mov
nop
push
out
cmpsb
in
aad
pusha
push
adc
cli
outsb
aam
cmc
push
sar
push
and
pushf
lcall
data16
adcl
mov
jae
pushf
hlt
cld
repz
push
mov
lret
jnp
andb
jecxz
sub
jns
mov
mov
fdivrs
aad
mov
outsl
mov
scas
stos
mov
icebp
pushf
lds
jns
loopne
mov
sub
stos
push
jbe
push
adc
xchg
xchg
in
test
out
add
scas
stos
test
in
insb
dec
xchg
mov
neg
mov
and
data16
mov
mov
loop
je
out
nop
scas
cs
dec
push
into
aaa
mov
add
mov
in
jb
add
fidivrl
pop
cmp
push
mov
inc
mov
outsl
and
aad
xor
jg
and
xor
pushf
sub
inc
das
sub
cmp
popf
arpl
shr
cmc
mov
loope
adc
mov
cmpb
mov
int3
xlat
lret
cmp
inc
fwait
or
enter
jnp
dec
fwait
enter
imul
xchg
fldcw
loopne
les
shll
shrl
scas
mov
push
movsl
mov
xchg
sbb
mov
add
sbb
jns
jecxz
sbb
xlat
rol
aas
mov
pushf
xor
sub
push
iret
adc
fsubrs
cmp
and
jbe
adc
andb
xchg
ja
cmc
mov
pushf
ret
xchg
std
in
lea
cwtl
xchg
loope
in
adc
jg
insl
pop
push
cmpsb
sbb
cmp
movsl
mov
dec
sub
xchg
add
in
cmp
imulb
in
fsub
aam
das
push
mov
fadd
pop
sub
cmp
inc
mov
xor
lret
lcall
sub
jo
les
xor
push
test
repz
and
push
insb
add
or
sbb
or
mov
shl
mov
adc
adcb
cld
xchg
push
dec
call
inc
or
dec
or
adc
dec
clc
pop
mov
sub
and
inc
xor
adc
lods
jle
cmp
dec
out
insl
and
ds
dec
xchg
pop
dec
rcrl
outsw
pop
push
insl
jecxz
negl
ds
jns
inc
inc
popa
daa
ret
push
sub
lcall
es
popa
and
jae
addr16
loope
in
mov
adc
std
ss
or
add
orb
bound
sub
rorl
mov
test
aas
daa
xlat
mov
test
add
fcmove
mov
mov
inc
orb
in
sub
int3
pushf
fdivl
orl
mov
and
nop
lret
jns
loope
ret
out
movsl
loopne
pop
clc
out
xchg
cwtl
push
xchg
jle
sub
sub
inc
leave
in
and
pop
mov
cmp
pcmpgtb
loope
sbb
lret
int3
repnz
and
int3
or
dec
sub
jmp
cli
mov
nop
leave
dec
sbbl
addb
leave
xor
or
add
lcall
or
pop
ret
sbb
lods
or
jg
inc
pop
sbb
add
lahf
and
repz
dec
pop
or
movsb
sahf
jo
lea
nop
or
xor
jg
addr16
shlb
shrl
hlt
imul
leave
inc
sbb
clc
aam
fimuls
scas
cmp
and
stc
dec
or
cmp
xchg
ljmp
mov
ljmp
cli
sarl
fnstcw
cmpsb
push
mov
mov
filds
loopne,pt
pop
or
sbb
aad
outsl
jb
xchg
test
sahf
cmc
push
scas
adc
xchg
dec
dec
jbe
cmpsl
nop
aaa
pop
sub
and
aam
cs
loopne
idivb
lahf
in
adc
fcoms
xor
fldt
hlt
mov
push
sbb
and
cwtl
dec
stc
jno
fxch
dec
mov
adc
imul
mov
xor
xchg
pop
xchg
dec
ds
and
cmp
das
mov
stos
repnz
data16
pop
pop
ficoml
test
cld
fcomp
ds
jnp
push
repnz
fisubrs
mov
jbe
in
movsb
stos
aas
test
pushf
cmpsl
call
daa
pop
or
insl
dec
int
or
jmp
and
in
imul
mov
or
jo
push
addr16
enter
push
mov
nop
push
fstpt
hlt
sahf
pop
adc
pop
repnz
sub
xor
mov
push
add
popl
pop
repz
lds
enter
orb
insb
scas
mov
push
out
jne
sbb
mov
sub
stos
insb
test
out
std
lcall
test
sub
outsl
mov
xor
shlb
nop
das
sbbb
arpl
adc
js
inc
das
leave
add
mov
fisttps
pop
adc
dec
pop
jbe
add
add
fsubs
cld
xor
pop
xchg
and
lcall
outsb
mov
sti
sub
inc
addr16
mov
cltd
pop
lea
pop
test
ljmp
test
in
in
and
shl
fsts
push
scas
stos
cmp
xor
shl
xchg
xchg
sahf
or
mov
xorb
pop
and
int3
mov
adc
mov
mov
js
shrl
stos
cmp
cmp
sbb
cmpsb
adc
int
fwait
mov
pusha
rcrb
pop
jnp
push
rcrb
xor
stos
jmp
cli
lea
xor
adc
sbb
mov
in
add
and
pop
sub
adcb
js
frstpm(287
pop
stos
in
imul
mov
cmpl
add
cwtl
jb
int3
clc
xorl
and
mov
add
insl
dec
cmp
xchg
fnstcw
ljmp
sbb
mov
jecxz
lret
jg
push
cmc
pop
cwtl
dec
ret
call
mov
jg
cwtl
mov
stc
insb
or
and
adc
call
jae
add
pop
divl
jno
popa
arpl
pop
cmpsb
mov
data16
mov
hlt
xor
lea
mov
scas
cwtl
test
jle
hlt
mov
mov
xchg
iret
shrl
out
popa
pop
enter
or
subl
js
add
movsl
sbb
in
lds
stc
xor
mov
push
insl
test
xchg
dec
push
and
cmpb
jo
xor
xchg
push
sbb
stos
stos
ds
push
adc
add
out
sbb
out
fwait
test
popa
push
in
push
jbe
es
or
cmp
cmp
sar
or
shl
or
addr16
stos
jge
push
mov
ret
xor
dec
aad
cmp
aam
out
scas
jl
pop
cwtl
lock
insb
mov
adc
pop
push
jmp
sarl
insb
imul
adc
adc
ja
fwait
sub
test
mov
add
filds
js
or
insl
mov
xor
sub
loope
stos
dec
xchg
pop
test
push
ds
lea
jl
xchg
mov
sbb
test
jmp
repnz
ret
fisttpl
add
inc
cmp
push
stos
int3
xor
je
or
inc
xor
jb
inc
push
sub
mov
test
lods
cmp
mov
outsl
data16
es
push
push
mov
pop
pop
test
dec
nop
fists
jns
clc
outsb
add
pop
pop
insl
push
dec
push
jbe
dec
xor
dec
dec
inc
insb
sti
push
ljmp
jle
inc
imull
xchg
test
pop
iret
or
out
xchg
add
data16
mov
mov
aam
adc
jmp
js
cs
jae
std
mov
daa
xchg
std
mov
mov
push
popa
ss
call
sub
jns
push
es
lret
xor
push
cltd
lret
addr16
push
pop
fs
lret
inc
popf
and
fdivr
scas
pushf
je
push
insb
in
mov
scas
xchg
dec
push
adc
dec
mov
push
push
push
and
sbb
xchg
or
mov
rcrl
jns
push
icebp
and
enter
pop
cmc
add
pop
test
gs
push
adc
sti
shrl
dec
pop
xchg
jno
sbb
mov
adc
dec
xchg
and
icebp
int
add
inc
dec
lods
test
in
fsub
das
pop
xchg
push
les
lcall
pop
sbb
mov
popf
pushf
ss
out
mov
leave
inc
mov
xor
popa
xchg
ret
inc
push
mov
in
sub
mov
add
test
sbb
xchg
clc
push
aas
sbb
hlt
lahf
movsl
mov
xchg
jb
mov
mov
pop
arpl
pop
pop
xchg
pop
fsubrp
inc
or
test
sarl
cmp
daa
and
mov
in
test
rcl
pop
popa
pop
popf
shl
mov
in
repz
insb
insb
mov
lock
mov
loopne
mov
insb
addb
ss
push
and
sub
iret
lret
dec
sub
fst
sbb
mov
mov
cltd
mov
push
dec
and
jg
xchg
add
xor
xor
push
xor
cmp
scas
sbb
and
aaa
mov
push
jns
hlt
sub
pop
clc
inc
fidivl
xchg
out
xchg
fildl
fucomip
in
je
stc
bswap
adc
pop
mov
or
test
dec
nop
push
pushf
push
xchg
addr16
out
push
lcall
xor
movsl
xor
fcoml
jecxz
lret
fildl
push
fistps
daa
adc
js
fmul
insb
cmc
add
out
or
stos
push
ss
subb
xor
mov
dec
mov
addr16
inc
rcr
push
dec
inc
sbb
pop
or
hlt
hlt
add
rclb
subl
les
mov
gs
xlat
repnz
insb
ret
dec
mov
mov
or
pop
rcl
or
pop
push
mov
dec
mov
dec
lea
jg
daa
int3
push
and
pop
test
sahf
xor
das
mov
push
or
rcl
mov
lods
fsubrs
xchg
inc
mov
jnp
mov
gs
xor
lahf
daa
adc
in
pop
inc
stc
or
mov
jecxz
fiaddl
push
mov
mov
add
iret
jecxz
and
popf
dec
out
push
ja
dec
sbb
lods
dec
lret
das
xor
pop
lock
and
pushf
cltd
mov
xor
jbe
push
loopne
jb
jo
mov
cmpb
add
xlat
push
push
aam
out
sbbb
lods
fdiv
ficoml
lods
roll
scas
or
out
cli
test
adc
xchg
jle
aad
jp
mov
xor
inc
and
out
or
xor
pop
lret
pusha
mov
jae
mov
mov
cmpsb
lcall
push
in
inc
dec
les
repnz
jg
hlt
xchg
lods
dec
stc
movsl
dec
lret
mov
add
sarl
jge
and
fwait
ja
in
xchg
sbb
idivb
aam
pop
negl
and
lahf
xor
gs
inc
dec
outsb
lock
rcll
xor
inc
sub
sbb
mov
mov
add
jge
std
and
into
push
aas
lea
mov
mov
pop
xchg
jmp
subl
int3
push
movsl
xor
test
jns
mov
mov
clc
push
fnstsw
xor
in
sbbb
ja
loope
shrl
test
ret
pop
cmpsb
mov
lret
fiadds
cmp
sub
dec
inc
xchg
push
pop
fisttpll
or
mov
jle
cmpsl
out
iret
push
test
insl
xchg
mov
repnz
jne
les
push
sbb
pop
mov
push
mov
jne
fisttpll
and
push
idivl
aam
jl
pop
mov
pop
scas
daa
push
in
cmpsl
bound
into
sbb
xor
loopne
cmp
fdivp
adc
test
xor
test
pop
loope
ds
sbb
nop
call
sbb
lods
insb
or
mov
or
mov
mov
dec
arpl
bound
jo
jle
sub
mov
aas
push
imul
push
test
xchg
xor
sbb
xchg
ret
scas
or
push
ret
test
mov
lret
imul
pop
cmpb
pop
pop
adc
in
adc
test
jecxz
stc
or
add
and
mov
dec
pop
lret
sbb
outsb
mov
push
push
xlat
jmp
orb
fsubp
jae
push
add
in
mov
inc
adc
xchg
xchg
sbb
fdivr
xor
mov
or
test
jns
adc
inc
dec
inc
xchg
jmp
cmp
aam
or
je
xchg
mov
mov
pop
mov
pop
lret
push
in
pop
xor
lcall
int
shlb
jo
ss
jp
ss
dec
fstps
test
dec
dec
dec
push
mov
cmc
push
xor
cmp
ret
add
dec
xchg
jbe
outsl
repz
mov
cmp
mov
cmpsb
ret
sbb
fidivrl
lret
js
clc
jge
mov
jae
sub
addr16
sbb
enter
loope
xchg
mov
mov
sbb
cltd
aas
stos
dec
testb
adc
gs
fwait
stos
jb
adc
mov
repnz
xor
scas
xchg
ljmp
je
scas
call
imull
jb
stc
pop
pop
mov
in
xor
test
jb
pop
xor
add
cld
ret
inc
fmul
sbb
rorl
adc
mov
fldl
jp
mov
lahf
lds
mov
and
sbb
icebp
data16
push
fs
push
test
icebp
insb
dec
pop
int3
mov
pop
aaa
rclb
pop
cmc
dec
push
ljmp
fisttps
sub
pop
push
jl
fisttpll
sbb
jge
dec
mov
jp
push
or
adc
call
leave
mov
push
jp
dec
sbb
ss
and
xchg
inc
lret
cmpsl
pop
mov
sbb
insb
int3
nop
mov
sbb
sbb
dec
sub
je
ljmp
xor
inc
dec
fildll
push
outsb
orb
mov
loope
xor
mov
pop
adc
fsubs
stos
pop
adc
mov
xlat
jbe
shr
push
insb
or
fcompl
dec
jp
pop
and
nop
cmpsb
insl
insl
addr16
lods
dec
outsl
and
mov
cmp
or
roll
int
scas
jp
mov
mov
push
test
xor
pop
addl
dec
dec
psubsw
insb
outsl
jb
and
xlat
sbb
jnp
arpl
mov
outsb
and
cltd
fs
xchg
dec
in
add
data16
mov
and
sarb
in
movsl
int3
xchg
repz
mov
insl
cmp
outsb
xchg
adc
sbb
cmp
inc
pusha
subl
lock
dec
pop
shlb
into
push
inc
and
sbb
shlb
adc
sub
cmp
add
test
pop
or
jne
repz
and
dec
dec
out
sbb
popa
negb
mov
or
pop
push
inc
stc
xchg
pop
imul
and
cld
int3
inc
jecxz
dec
push
xchg
cmpsb
movsl
adc
mov
lods
cmpl
nop
or
or
loopne
rorb
insl
sahf
loopne
mov
add
adc
ljmp
add
stos
add
int3
mov
or
outsb
jl
pop
pushf
leave
sbb
out
mov
lret
stc
aad
inc
addr16
rcll
aad
push
outsb
dec
sbb
mov
movsl
clc
add
imul
sarb
outsl
pop
pusha
push
dec
xchg
bswap
into
xor
adc
xor
xchg
iret
lret
out
xchg
mov
sti
sbb
jae
mov
xor
cmpsl
dec
or
or
enter
je
jae
shlb
leave
mov
pop
out
ss
adc
xchg
inc
icebp
sbb
xchg
xor
notb
fnstcw
clc
xchg
inc
push
test
jg
lods
jle
cli
jg
sahf
xchg
and
iret
mov
or
sti
loopne
dec
jb
and
iret
iret
pop
fimuls
sub
or
xchg
jno
sbb
fldcw
lock
sbb
dec
movaps
clc
testl
daa
fstps
sub
test
std
or
stc
aad
xlat
or
sub
out
das
movsl
lret
cltd
adc
mov
data16
rcrb
cmpsl
shrl
stos
and
jle
lock
mov
scas
pop
cli
xchg
lret
dec
mov
les
add
push
rcll
push
add
mov
cmpsb
push
in
subps
insl
dec
xor
jae
fisubrs
cmpunordss
jbe
sbb
mov
jb
or
in
jne
or
xchg
sbbl
ficompl
scas
pop
mov
dec
mov
inc
or
sbb
mov
xor
sub
pushf
inc
repz
ret
aas
cmp
ljmp
out
dec
jg
ficoms
roll
popa
bound
test
add
int3
xchg
inc
cmp
into
jno
mov
jecxz
cs
repnz
adc
jo
out
mov
jmp
ja
sarl
jp
pop
fwait
mov
jmp
pop
mov
pop
movsl
loop
call
lret
stos
cmp
and
mov
lahf
imul
fsubs
xchg
pop
int3
fidivs
cmp
xchg
inc
add
cmp
xchg
inc
out
imul
and
je
stos
dec
and
aam
jns
mov
push
clc
pop
lret
push
adc
gs
sub
push
pop
lock
xchg
ja
pop
out
loope
push
mov
divb
mov
sbb
clc
mov
mov
aad
movsl
imul
sub
jmp
movb
xor
fmuls
imul
ss
xor
dec
adc
jmp
adc
push
push
scas
icebp
push
insb
loope
add
aaa
cltd
cmp
cmc
rcll
cmp
sbb
fildll
cmpl
nop
cmp
mov
mov
or
jne
ret
js
sbb
cltd
jg
dec
or
jb
sbb
cmp
mov
and
push
lods
loop
nop
sub
sbb
jge
stc
in
inc
mov
in
pop
inc
mov
cmp
gs
mov
jp
lock
shlb
lret
inc
sahf
testl
push
xchg
rol
in
cmpsb
xor
inc
aam
pop
xchg
xlat
push
xchg
cmp
mov
xor
add
xchg
fwait
insl
imul
test
loopne
gs
push
pusha
dec
pop
pop
imul
or
mov
roll
lods
paddsw
inc
and
xor
pop
shlb
cmp
imul
xchg
dec
sub
push
fisttpl
inc
lcall
jne
icebp
hlt
push
ret
ja
adc
mov
jno
adc
lods
ja
fsubrs
insl
adc
imul
std
cld
adc
in
fsubrs
sbb
ds
clc
cvtps2pi
adc
jo
or
dec
xchg
jbe
into
mov
inc
fwait
test
mov
cmp
scas
bsr
stos
pxor
sub
jbe
data16
mov
clc
jo
push
mov
inc
popa
sub
lahf
test
sub
fdivrs
hlt
dec
mov
xchg
jbe
clc
pop
xchg
and
stos
or
jecxz
cmc
pop
pusha
insl
test
xor
xchg
dec
and
out
mulb
jns
stc
adc
mov
in
movsl
add
xchg
sbb
mov
inc
and
inc
dec
cmp
cmp
or
scas
mov
xchg
inc
push
movsl
cmp
js
add
mov
add
push
out
xor
pop
xor
ret
sbb
shlb
cmp
fcomp
pop
hlt
cli
scas
repnz
sbb
inc
mov
fdivs
push
loope
jb
inc
push
insl
sub
rcrl
mov
and
adc
xchg
jno
dec
std
fs
jnp
arpl
mov
sbb
adc
into
jmp
add
dec
fisttps
add
leave
rcl
jbe
inc
sbb
outsl
xor
loope
mov
arpl
pop
int3
loope
push
imul
pop
push
xlat
mov
sbb
or
sbb
cmp
out
lcall
adc
lods
push
mov
aad
mov
jg
mov
movsb
mov
mov
xchg
or
iret
test
jnp
aas
mov
ret
cld
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
push
or
xchg
xchg
xor
nop
and
aaa
pop
jp
rdmsr
adcl
pop
aaa
cli
pop
inc
sbb
sub
cmp
jl
ja
sbb
mov
out
movsb
dec
jmp
aas
mov
pop
in
andl
aas
or
dec
xchg
bound
push
dec
xchg
cmp
notb
add
pop
cmp
inc
loopne
add
dec
pusha
aad
pushf
sbb
pop
mov
ffreep
cmp
cmp
jns
pop
rcrb
inc
pop
lods
mov
gs
insb
das
jb
daa
or
or
fisttpll
js
mov
inc
dec
inc
je
cs
push
add
stos
popf
insb
xorl
and
sub
mov
pop
push
pusha
xor
movsb
jne
jp
add
cli
test
jb
lea
dec
data16
inc
scas
xchg
sub
mov
out
and
or
pop
arpl
popa
pop
adc
inc
sub
pop
sbb
mov
pop
out
out
fcmovnb
pop
fcompl
or
jg
dec
and
or
test
jno
aas
imul
orb
daa
pop
jg
cld
pusha
xchg
clc
lret
icebp
mov
pop
cwtl
cmp
cmp
sbb
pop
xor
dec
movsl
jmp
push
sub
icebp
jne
add
stos
push
je
ret
mov
inc
stos
lods
mov
cwtl
inc
jbe
inc
sti
ja
cmp
or
adc
xor
inc
js
jns
or
test
adc
repz
adcl
add
call
leave
adc
shll
jns
pop
iret
jne
dec
sub
clc
pushf
add
push
test
outsb
adc
ficoml
sub
int
pop
jp
pop
aam
mov
cmp
inc
loop
bound
cmp
cltd
les
sub
mov
xchg
xor
mov
sahf
shrb
xor
stos
or
je
or
xchg
cmp
mov
xor
movsb
test
cli
pop
jbe
ds
shrl
or
and
and
roll
sahf
clc
jne
jg
xchg
xor
inc
mov
jecxz
ss
jecxz
pop
repz
and
add
popl
cmp
push
sub
pop
sahf
xchg
sbb
aad
lea
cmpb
inc
push
pop
or
daa
xchg
lret
mov
lret
xchg
rorb
outsb
sub
paddw
mov
out
out
movsb
fldt
in
insb
ret
push
jbe
outsl
insb
imul
inc
cmp
xorw
or
ud1
inc
clc
out
cwtl
add
fsubrl
inc
pop
lods
fcoml
sbb
xchg
sub
mov
or
push
xor
xor
imul
cwtl
mov
enter
pushl
jmp
inc
ljmp
mov
add
mov
shlb
stos
push
sti
sub
popf
lea
or
mov
in
stos
add
inc
scas
in
or
or
and
bnd
push
cmpsb
jb
or
testb
shlb
adc
aaa
pop
lahf
int3
pop
mov
pop
push
mov
sbb
dec
cltd
out
cmc
orb
adc
sub
ljmp
sub
pop
movsb
outsl
sub
sub
pop
and
mov
lds
cli
in
cmp
ja
sbb
inc
pushl
lcall
ret
adc
and
pop
or
lret
add
xchg
xchg
pop
jae
mov
dec
cmp
dec
add
fimuls
sti
lea
inc
mov
sub
lret
cmp
into
push
cmpsl
or
aaa
xor
js
je
push
loopne
mov
or
popf
and
test
ljmp
mov
in
outsb
fwait
int
inc
insb
rcll
mov
xlat
dec
mov
xorb
pusha
or
mov
cli
cmp
nop
mov
push
leave
jp
jo
pop
mov
push
and
adc
inc
movsb
jae
sub
ds
lcall
lock
cmp
loope
jle
std
sbb
mov
mov
adc
stos
jnp
fisubs
xchg
xchg
ficomps
in
sbb
lcall
cltd
jb
loope
repnz
js
push
repnz
cmp
nop
xor
push
cld
jg
add
in
mov
lret
mov
insb
cmp
outsl
out
pop
or
push
and
xchg
shll
lds
arpl
mov
sbb
xor
mov
pop
repz
test
aaa
sub
pop
andl
shrl
scas
fdivl
adc
enter
aad
or
insl
adc
xor
xor
adc
mov
sub
shr
mov
pop
sub
lds
outsl
ljmp
push
inc
push
mov
jne
mov
add
cld
pop
dec
mov
dec
dec
dec
dec
outsl
addl
fs
icebp
in
jns
inc
jnp
lret
xchg
push
pop
or
and
jae
xchg
sbb
jbe
popa
lret
scas
xor
dec
xor
pop
nop
cltd
jp
into
pop
pop
pop
inc
xchg
sbb
xchg
inc
push
xchg
arpl
out
push
jl
icebp
ret
xchg
or
adc
scas
xchg
jl,pt
sub
push
pop
lods
inc
add
mov
jbe
and
mov
jmp
dec
mov
or
pop
mov
pop
loopne
mov
scas
mov
mov
in
loop
add
movsl
adc
sbb
ja
test
push
push
xlat
sub
pop
pop
sub
inc
aad
cmp
cwtl
push
loop
shlb
lcall
mov
stc
in
pop
popf
cmp
inc
pusha
jg
jae
das
pusha
cmc
adcb
jl
xchg
push
fucomip
jae
cmpsl
test
popa
dec
es
inc
ret
mov
and
adc
push
add
pop
out
ret
loope
sbbb
mov
call
adc
loopne
push
push
bound
sub
push
repz
pop
xor
xchg
jo
test
jmp
test
call
cmpsb
movsl
pop
stos
adc
cmc
nop
and
dec
push
mov
add
mov
popf
aas
mov
scas
mulb
ja
in
jns
cmpsl
popa
push
pop
mov
cmp
mov
stos
das
xlat
test
outsl
lret
fxtract
sbb
outsl
adc
pop
xchg
out
mov
stos
mov
loope
fistps
add
out
rcll
jle
maskmovq
imull
rcll
adc
mov
lock
ret
xor
ss
mov
inc
aam
mov
movsl
adc
dec
push
in
stc
jecxz
push
mov
jmp
stc
mov
mov
loop
cmp
mov
test
insl
out
frstor
loop
divl
in
or
mov
xor
mov
mov
xor
pusha
cld
inc
imul
mov
sbb
fbld
push
sbb
out
ds
ret
mov
ret
xchg
dec
into
loop
pop
xor
jns
push
sbb
fstps
dec
sub
inc
mov
and
dec
sub
lcall
xchg
popa
or
daa
fwait
push
popa
nop
cmpsb
orl
repz
iret
push
xchg
pop
cmc
popa
mov
add
jbe
cmp
mov
fsubrs
out
lods
not
mov
and
loope
or
std
or
xchg
dec
mov
add
mov
lods
mov
hlt
lret
loope
dec
xchg
fnstsw
test
sbb
mov
pop
pop
or
jle
daa
mov
mov
jbe
icebp
fcomps
cwtl
xchg
in
je
adc
push
lds
lea
loope
loop
sub
rcll
cmpsb
pop
popa
xchg
in
icebp
mov
les
pop
fidivrs
insb
sbb
push
jge
pop
pusha
or
jae
inc
mov
out
aas
daa
cmp
ss
pushf
je
mov
mov
faddl
adc
loopne
and
shlb
or
adc
lods
push
cwtl
andl
sbb
rclb
pop
fimuls
mov
ljmp
sub
or
inc
cmp
andb
out
icebp
dec
sub
xorb
loopne
and
mov
add
pop
scas
insl
mov
cmp
aam
and
inc
jp
xchg
not
jnp
cmp
push
es
into
cmp
rcrb
addr16
fs
or
loop
mov
dec
add
adc
push
mov
pop
dec
les
mov
les
imul
les
mov
push
adc
adc
ljmp
aad
xorl
cmp
aad
ret
push
fbstp
lahf
cs
ljmp
xchg
daa
je
mov
mov
fwait
dec
jnp
popf
sub
int
push
lds
pop
into
xchg
dec
add
pop
leave
pop
loopne
sbb
in
stos
cmp
push
push
mov
movsl
nop
rcl
cli
rol
mov
in
loope
mov
scas
jecxz
and
adc
mov
dec
mov
rolb
int
and
mov
sti
pop
rcl
mov
stos
adc
aam
lds
sbb
arpl
mov
das
jae
jb
pop
addr16
push
in
lcall
out
ret
push
inc
or
outsl
data16
vcvtsd2si
fbstp
repnz
idiv
sbb
popa
and
xchg
mov
popf
nop
cmpl
pop
in
pop
fstl
jo
aas
mov
add
les
jne
frstor
sub
js
or
rcrb
and
out
cli
stc
dec
frstor
push
repz
adc
push
mov
mov
jge
pop
loopne
push
cmp
test
pop
insb
jnp
jmp
imul
jmp
xor
xchg
jp
inc
jge
push
divl
inc
es
scas
lret
leave
xor
dec
add
lcall
xchg
repnz
and
js
adc
sbbb
push
xchg
test
or
lods
cmp
and
orb
jnp
sti
push
pop
add
push
add
das
cmc
shlb
scas
ja,pn
out
les
pop
dec
mov
fdivl
enter
xchg
in
push
imul
ret
mov
pop
lock
movw
cmp
xchg
out
iretw
or
sub
mov
adc
jg
mov
inc
repz
cmp
out
pusha
adcl
nop
mov
ja
roll
add
push
ret
sub
cld
inc
add
and
jmp
cmp
xchg
add
shlb
mov
pop
sahf
fwait
sahf
les
xchg
addr16
aam
arpl
add
lret
sub
loopne
and
sub
mov
stos
popf
bts
adc
mov
or
add
in
push
lret
shlb
or
je
arpl
addr16
add
pop
repnz
dec
out
cwtl
adc
xlat
mov
scas
fdivl
mov
lods
mov
pusha
mov
pushf
cli
mov
sti
in
scas
and
xchg
out
iret
pop
es
sbb
cld
mov
mov
into
or
frstor
lds
mov
mov
insl
xchg
or
rcl
jp
push
sti
out
negb
into
inc
mov
xor
testb
loopne
imul
lret
es
mov
push
push
mov
xchg
ffree
into
pop
mov
into
and
pusha
je
cmp
push
dec
jecxz
sbbb
adc
lds
mov
adc
loop
add
cmpsl
jae
push
xchg
pop
cmp
jle
add
cmp
clc
shl
ret
jno
andl
pusha
test
mov
movsb
or
add
pop
mov
fsubr
in
sub
xchg
sahf
jb
fwait
stos
mov
clc
inc
jge
push
aam
push
scas
mov
dec
push
pop
lods
jnp
pushf
andb
and
add
cmc
jp
adc
cld
push
pop
inc
jecxz
xchg
jb
push
push
mov
shlb
xchg
mov
pop
push
icebp
cltd
inc
mov
daa
stos
mov
jbe
movsb
cwtl
sub
adc
jne
xchg
push
mov
adc
pop
out
test
iret
push
push
xor
divl
mov
mov
out
rorl
daa
movsb
xor
jo
lods
jmp
jb
inc
lcall
fisubrl
push
out
loope
subb
pop
cli
push
push
xchg
mov
movsb
in
mov
xor
in
out
imul
pop
pop
push
fstl
push
cmp
fld
and
mov
inc
jp
imul
push
outsb
imul
idiv
xchg
dec
sbb
cmpsb
lret
or
sub
mov
mov
repz
pop
sub
int3
and
mov
xor
dec
push
setno
out
xor
jl
push
pop
jmp
ret
loop
ds
add
das
or
or
daa
jae
shrb
stos
push
pop
icebp
ss
or
lock
imul
jmp
mov
or
xor
xor
leave
cld
clc
ret
in
jecxz
mov
hlt
cmp
scas
pop
jg
and
jmp
aaa
mov
stc
in
dec
dec
out
lds
mov
dec
add
jno
in
jnp
adc
loope
sar
icebp
in
dec
mov
push
and
je
sbb
nop
mov
test
in
sub
push
xor
or
push
xor
sub
outsl
aad
test
jle
adc
xor
aas
leave
sbb
sarl
sbb
mov
and
aaa
mov
mov
or
outsb
iret
mov
mov
and
xor
fimuls
sbb
dec
lahf
mov
pop
out
xchg
jnp
in
inc
loopne
sti
cld
mov
lret
and
sbb
add
mov
mov
jnp
pop
sbb
incb
pop
ret
push
dec
rcll
push
mov
mov
pop
push
mov
mov
dec
mov
and
mov
adc
xlat
cltd
outsb
fsubs
das
xchg
jb
daa
repnz
or
ficoms
cmpsb
das
loop
push
fldl
in
jp
pop
inc
or
adc
push
pop
icebp
mov
push
shlb
push
inc
mov
das
daa
xchg
in
cmp
xor
mov
or
pop
push
rorb
ret
hlt
into
jae
test
stc
test
xchg
cmpsl
and
loopne
movsl
add
pop
push
cs
mov
push
scas
mov
shr
adc
int3
add
subl
repz
pop
lock
mov
call
pop
mov
xchg
pop
add
adcb
xchg
testb
repz
faddl
xchg
inc
fdivr
loope
stc
jo
loopne
fldenv
sarb
or
addr16
sbb
in
add
aad
cmp
inc
push
or
cmp
push
mov
aaa
xor
iret
or
dec
fstl
bsr
dec
or
jecxz,pn
push
aam
mov
mov
aam
icebp
call
dec
sub
pop
cmp
inc
in
fildl
cli
loop
pushf
fstpl
imul
or
push
mov
fwait
imul
fcmovbe
add
xchg
adc
out
test
fstps
test
mov
sahf
cld
pop
xchg
dec
loopne
insb
dec
jle
and
xor
das
inc
fwait
pusha
mov
xor
inc
stc
inc
fbstp
insl
mov
test
jbe
out
loopne
rcr
adc
add
arpl
sbb
lret
mov
push
push
in
test
mov
adc
test
push
arpl
jo
xlat
pop
imul
xchg
add
jno
addr16
and
sbb
imul
icebp
stc
or
push
jno
jmp
pop
xchg
inc
mov
jo
fildll
std
sub
sti
dec
jae
dec
popa
shlb
mov
mov
add
xchg
stos
in
lret
push
inc
xor
push
loopne
nopl
mov
push
ds
rcll
cmp
xchg
sbb
pop
nopl
add
movl
rcrl
in
imul
push
fcoms
test
xor
gs
pop
test
aas
movsb
movsb
addr16
cwtl
fimull
paddw
xor
xchg
mov
faddl
adc
sarl
test
insl
mov
test
mov
pushf
lods
and
push
loop
test
aam
mov
mov
cli
int
cli
loopne
xchg
ficomps
cmc
mov
and
sub
popf
lods
loope
out
push
add
cmp
mov
repz
mov
iret
mov
fxch
ficompl
in
popl
sbb
xchg
mov
scas
fistpl
sub
push
xchg
inc
sar
mov
inc
cs
jle
cmc
cmp
mov
push
cld
divl
icebp
xor
sbb
mov
sub
movlps
mov
fisubs
ss
cwtl
cs
inc
ja
dec
adc
and
ret
sbb
fwait
outsb
fdivrl
andl
sbb
xchg
xchg
or
xor
sbb
jmp
stos
andl
iret
icebp
mov
out
into
cli
test
push
push
enter
pop
jge
nop
adc
xchg
fildll
xor
fwait
test
mov
pop
xchg
sbb
leave
push
and
stc
xchg
out
popa
cmp
imul
add
add
jbe
mov
cmp
sbb
xchg
lds
jb
or
mov
mov
jmp
mov
push
adc
in
pop
loop
repnz
sub
gs
push
xchg
in
cmp
xor
sbb
jae
mov
dec
aaa
jo
cmp
jmp
cld
movsb
shll
ss
add
test
inc
out
jge
nop
mov
add
add
into
rcrb
and
in
and
out
mov
shlb
cmp
push
mov
sub
in
movsl
pop
or
inc
mov
pop
or
enter
dec
cwtl
mov
add
pop
jge
add
inc
outsl
mov
jbe
lret
mov
sbb
sbb
xor
outsb
jne
adc
mov
je
add
mov
in
push
mov
jbe
fucomp
orl
sub
adc
and
push
insl
jge
out
enter
clc
mov
arpl
mov
and
jnp
pop
or
fsubs
mov
mov
or
cli
stc
and
mov
ret
std
int
mov
rcrb
jecxz
sub
sub
test
bound
jo
add
push
std
loope
cmc
mov
sbb
cmp
or
fisttpl
inc
cmp
mov
mov
cmp
fbstp
or
sub
std
or
shll
pop
sbb
popf
sbb
pop
mov
push
call
int
xchg
in
cmp
cmp
fs
test
adc
sahf
cmp
ret
sub
jmp
movsb
jbe
sub
mov
xchg
adc
push
pop
or
dec
dec
lods
or
adc
out
pop
add
push
or
pop
icebp
push
fcmovb
xchg
or
rorl
ljmp
xchg
mov
pop
lret
fsubrs
insb
mov
jmp
pop
xchg
neg
insb
dec
ds
mov
xchg
int
xchg
xchg
int3
adc
or
cmp
xlat
das
pop
popa
shlb
divl
mov
jg
xchg
cwtl
sbb
dec
cmpsl
repnz
aas
pusha
js
pushf
inc
pusha
stos
jno
mov
pop
test
dec
jnp
fsubp
xor
sub
das
rorl
mov
cli
les
lret
adc
sub
sahf
outsl
mov
test
cli
inc
push
jl
and
and
add
jne
shufps
rolb
inc
pop
pusha
push
arpl
cmp
or
loope
pop
or
aas
sahf
pop
test
xchg
inc
sbb
movsb
fists
inc
ret
and
stc
adc
js
scas
in
pop
sbb
add
xchg
jb
cld
mov
cmp
pop
out
jns
lods
jb
jns
int3
icebp
or
sub
loopne
adc
outsb
sub
loope
ret
adc
mulb
adc
mov
iret
lods
je
inc
stos
ret
clc
jmp
popa
push
stc
ss
xor
pop
xor
in
fsubr
leave
sub
scas
cmpsl
jp
pop
xor
adc
ret
orb
mov
inc
cmp
inc
stos
repz
loopne
lret
aas
loop
jbe
imul
push
inc
cmp
mov
ficomps
iret
dec
fldenv
push
cmp
int
loopne
testl
cwtl
inc
sbbl
cmc
dec
mov
gs
cmp
nop
push
and
sub
cmpsl
jecxz
mov
inc
cmp
xchg
stos
out
cwtl
notl
fisubrl
stc
ljmp
ljmp
movsb
cld
mov
subb
dec
jmp
stc
cld
and
adc
ret
or
adc
mov
fbld
cmc
call
mov
jb
sbb
cwtl
adcb
add
dec
divl
cwtl
sbb
mov
sub
int3
nop
mov
sbb
jp
aam
in
pop
idivb
pop
and
xchg
add
xor
into
pop
add
sub
mov
call
cmp
mov
addr16
insl
jns
cs
divl
out
xchg
jmp
adc
cmp
add
inc
fsub
or
stos
jb
dec
imull
dec
lret
push
in
pusha
fsubrp
adcl
cmp
cmpl
js
mov
pop
iret
dec
dec
jp
subl
mov
push
popf
xlat
dec
dec
les
das
push
adc
shll
cmp
addb
mov
sahf
mov
clc
lret
outsb
int
jge
ljmp
inc
mov
mov
pop
test
mov
push
icebp
pop
loope
aas
insb
repnz
testl
enter
dec
xchg
cmpsb
sbb
mov
rcll
dec
insl
add
xor
mov
mov
call
mov
ljmp
adc
test
ss
dec
push
mov
jae
mov
aaa
daa
scas
jo
mov
cmc
sbb
out
dec
cmp
int3
movsb
sbb
ret
insl
add
lock
lret
inc
xchg
mov
sub
ret
cmpl
xchg
insl
adc
cmp
adc
mov
cmpb
mov
push
call
lahf
xlat
cli
mov
push
mov
xchg
mov
inc
mov
stos
add
inc
pop
fs
mov
divl
jnp
scas
sbb
lea
mov
imul
je
mov
outsb
jb
ret
into
pushf
aas
orl
or
dec
and
cmp
out
pop
inc
xor
push
mov
in
pop
cmc
subl
out
dec
jl
idivl
cmpsl
outsl
sub
lahf
push
subb
xchg
arpl
mov
jnp
jl
sahf
scas
lods
add
xchg
out
pop
scas
les
or
cmp
inc
pop
shll
loop
xor
lds
sbb
ljmp
push
aam
adc
out
jb
add
or
mov
stc
pusha
xor
jp
cmc
cmp
rolb
xchg
orb
mov
add
arpl
out
push
ret
dec
xor
call
mov
mov
xchg
jle
inc
or
pop
shrl
push
frstor
or
xlat
mov
out
aad
mov
mov
stc
push
xlat
out
mov
mov
hlt
aam
popa
mov
int3
push
loopne
jmp
push
out
mov
pop
cld
xchg
es
or
jae
ljmp
mov
daa
push
cmp
jg
dec
jbe
mov
ret
lret
push
or
ret
mov
mov
ffreep
jb
jmp
mov
xchg
popf
jne
cmp
clc
pop
sbb
repnz
mov
pop
pop
andl
imull
les
sbb
lea
mov
inc
out
clc
add
or
dec
mov
dec
push
pusha
inc
mov
xcrypt-ctr
cmpsl
fidivl
jle
push
pop
jp
dec
pop
or
orl
sti
testb
lret
xor
lea
pop
ret
dec
repz
repnz
sbb
inc
out
mov
xlat
push
sub
shlb
or
stos
out
sbb
sub
dec
shll
cmp
jl
or
js
in
mov
hlt
negb
dec
jo
xchg
dec
sub
test
and
out
insl
push
gs
icebp
ret
dec
cmpsb
xchg
fsubrs
and
pop
adc
add
xchg
push
and
ja
jle
lcall
lahf
mov
jp
push
mov
pop
xor
imul
jno
jmp
ss
push
pop
mov
xchg
and
xchg
adc
or
stos
loope
mov
mov
jge
sbb
sub
jl
jp
scas
fwait
aad
and
jge
bound
xchg
test
movsl
push
dec
outsb
add
pop
mov
xchg
adc
push
loop
push
int3
jb
jge
call
or
leave
mov
push
jo
fists
inc
sub
pop
std
ret
push
in
inc
sub
mov
jo
fnsave
scas
jmp
sub
lods
roll
cld
xchg
sbb
aad
sbb
data16
pushf
push
enter
xlat
sub
lds
and
push
jge
inc
mov
cmp
lods
xchg
xor
mov
cmp
sub
cli
adc
loopne
pop
mov
leave
push
imul
dec
loop
fcmovnb
pop
sub
sub
stc
mov
movb
dec
ficomps
or
repnz
dec
cltd
in
push
rclb
fdivr
cmp
and
fstpt
negb
int3
pop
arpl
mov
hlt
cld
call
hlt
xor
fimuls
and
jne
into
push
and
icebp
test
pop
pusha
out
insl
ret
pushf
sub
mov
adc
ljmp
out
xor
fwait
rcrb
test
fsts
dec
pusha
lods
jecxz
pushf
adc
pop
lock
fcmovnu
test
xchg
movsl
add
cli
jle
sbbb
pop
outsl
jg
jb
repnz
cmp
sub
clc
nop
int
pop
fldcw
xchg
inc
ds
push
xchg
adc
sub
xchg
and
mov
jg
mov
in
xor
cmp
inc
dec
or
mov
dec
pop
out
stos
std
stos
fldl
nop
int3
mov
mov
rcr
adc
cs
lds
out
xchg
xchg
andb
popw
xor
cmp
mov
mov
jbe
popa
fwait
mov
xchg
inc
xchg
mov
mul
adc
push
sub
cmp
or
and
inc
mov
inc
inc
ja
arpl
leave
int
adcl
movntq
fnstenv
xchg
add
rcl
mov
ret
jbe
ret
and
pop
lods
sbb
sbb
mov
decb
sarl
leave
imul
pop
inc
jns
outsl
aam
adc
fstl
inc
pop
sbb
dec
push
and
jecxz
into
flds
lea
mov
out
fidivs
cwtl
mov
lret
and
push
add
mov
sub
adc
mov
movsl
das
icebp
xor
std
test
xchg
int
inc
mov
inc
jae
xchg
mov
ret
lret
mov
jmp
sub
inc
mov
mov
fdivl
enter
cmp
push
incb
sbb
push
popf
pop
fcoms
bound
inc
imul
sti
cs
in
jmp
inc
xchg
loop
jae
adc
std
mov
sbb
aam
addr16
repnz
mov
push
in
fisubl
jo
push
ss
ljmp
sbb
push
ljmp
lret
mov
adc
icebp
lret
inc
or
mov
sbb
paddq
movsl
loopne
adc
and
add
push
es
lret
and
popf
mov
scas
ret
mov
fisttpl
cmp
add
xor
out
push
lods
sub
ret
xor
sbb
pushf
imul
and
sbb
sti
out
pop
lcall
or
push
and
scas
decb
addr16
loope
inc
pop
pushf
ljmp
ret
and
pop
sbb
addl
shlb
test
dec
cmpsl
sbb
jecxz
std
je
maskmovq
testl
sbb
jmp
rcr
call
sub
mov
mov
push
pop
loop
mov
add
test
or
pop
jno
inc
mov
jle
rorb
test
jmp
jle
data16
out
xchg
dec
sub
xor
lock
test
push
addr16
js
add
push
adc
jge
sbb
movb
fisubl
jmp
fildl
and
push
sarb
fwait
incb
inc
roll
mov
mov
or
pop
jp
mov
inc
imul
push
push
jne
xor
fldcw
mov
inc
pop
sbb
inc
mov
mov
popl
icebp
aad
shl
sub
cmp
sbb
loope
jno
jmp
fnstsw
push
sub
pusha
xor
push
pop
cld
lods
lock
lcall
arpl
out
mov
out
dec
fwait
shrb
xchg
outsb
sbbb
aaa
shl
imul
add
mov
lret
shll
push
jle
fimull
call
dec
fcoms
dec
push
neg
test
push
movsb
jae
pop
aas
loop
test
repz
dec
fadds
fwait
lret
xchg
xlat
push
int
push
cmp
scas
pop
mov
sbb
adc
cwtl
imul
push
xor
aaa
mov
xchg
fcmovb
movsb
mov
pand
int
mov
or
sbb
daa
jle,pn
pop
cli
cmp
ljmp
sbb
adc
call
jnp
xor
fistpl
out
test
xor
and
stos
mov
rcl
pushf
adc
inc
stc
mov
adc
movsb
sbb
repz
mov
and
lods
mov
ret
sbb
shrl
cmp
adc
adc
jl
inc
daa
js
addr16
aam
push
pop
xchg
movsl
adc
jnp
out
cmp
dec
and
loope
scas
add
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
xor
xor
push
push
movzwl
adc
mov
mov
or
mov
mov
mov
or
andl
xorl
movl
movl
mov
mov
sub
mov
xorl
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
orl
mov
mov
or
sub
xor
xor
and
mov
sbbl
orl
adc
mov
mov
xor
xor
mov
sub
and
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jb
add
mov
adc
orl
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
add
push
and
mov
mov
lea
mov
mov
mov
mov
andl
xor
subl
add
adcl
mov
dec
mov
sub
mov
mov
andl
add
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
mov
xor
mov
andl
add
movl
cmp
je
movl
mov
jmp
mov
mov
cmp
movl
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
mov
xor
mov
dec
xor
adc
add
xor
or
adc
mov
mov
adcl
mov
xor
addl
add
imul
mov
orl
xor
movl
add
movl
cmp
mov
mov
push
movl
je
movl
mov
orl
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
subl
mov
addl
xor
xorl
add
xorl
imul
mov
movl
jmp
and
mov
xor
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
mov
sub
jmp
inc
sbb
fwait
jnp
mov
mov
jp
pop
jp
sub
in
mov
outsb
stc
sub
or
lret
cmc
cmp
mov
sbb
sbb
adc
cwtl
add
testl
sbb
push
mov
test
ljmp
adc
pop
adc
cli
aaa
je
ljmp
scas
adc
mov
arpl
cld
fiaddl
or
pop
mov
mov
cmpsb
imul
arpl
xchg
fcomps
sahf
xchg
cmp
out
jb
mov
lea
in
jecxz
cmp
push
orb
scas
jp
push
adc
fisubs
lods
call
inc
cmpl
data16
adc
dec
cli
add
xor
jb
xchg
sbb
xor
and
rorb
sbb
out
sti
in
xchg
xchg
dec
bound
stos
push
push
push
or
add
repz
lds
cmp
iret
inc
push
mov
insl
adc
add
xor
aas
pop
ss
test
movsl
outsl
fwait
loope
mov
cmp
sbb
cmp
push
outsl
addb
in
cmpsl
mov
loop
lods
xchg
mov
cmp
cli
lea
je
sbb
sub
insb
cld
shrb
dec
mov
add
sti
cs
test
das
orb
loop
in
jmp
daa
and
icebp
pop
out
mov
xor
fistpl
and
movsl
out
faddl
xor
idivb
push
loopne
enter
pop
fstl
into
inc
inc
imull
cwtl
cld
xchg
push
shrd
movsl
scas
movsl
out
push
lea
test
mov
aad
loope
mov
adc
fidivrl
push
push
jecxz
aam
test
std
imul
jp
pusha
push
or
insb
jl
loopne
add
mov
gs
je
pop
cmp
dec
xchg
xchg
sub
mov
sub
push
icebp
push
inc
xchg
jmp
and
xchg
push
fwait
push
mov
fisubs
nop
inc
pop
ds
sti
pop
lret
sbb
sub
bound
and
les
inc
fdiv
imul
call
stos
or
shrb
hlt
scas
and
nop
lret
scas
inc
ret
aad
cmp
insb
test
jnp
fsubrp
jmp
sbb
add
fnstcw
xor
dec
or
cmp
fsts
xor
adc
rcr
roll
fnstsw
adc
into
pusha
pop
movhps
inc
jne
outsl
sbb
or
test
les
cmp
pop
cmp
mov
xor
in
in
xchg
cmp
dec
inc
rcr
sub
stc
or
xchg
int3
and
dec
sub
push
lock
insl
es
data16
mov
and
sub
xlat
xchg
pop
jnp
cli
push
push
mov
js
sub
rorb
fdivrl
lods
cli
push
imul
mov
dec
inc
inc
xchg
aaa
sbb
or
pop
inc
and
aad
xor
adc
rolb
xchg
andb
xor
sub
push
scas
mov
xor
pushf
xor
sti
mov
loopne
in
dec
bound
mov
xchg
mov
cmp
int
movsl
das
shl
fs
test
rcl
popf
cmp
les
sbb
enter
test
ja
pop
pop
lret
leave
and
in
cwtl
mov
enter
insl
push
ss
pop
or
outsb
jp
mulb
imul
outsl
aam
in
mov
aam
mov
mov
cmpsb
sti
aaa
int3
fcomi
flds
mov
jecxz
ret
mov
call
xor
adc
xchg
mov
leave
cmp
pop
fmuls
push
xor
and
sbb
scas
cs
jg
xchg
xor
push
inc
push
and
mov
idivl
mov
add
push
fwait
movsb
movsb
sub
outsl
lods
ret
mov
popl
add
pop
push
or
cmp
insl
out
rcr
divl
sub
and
mov
push
jge
push
js
mov
mov
sbb
xor
pop
mov
lods
sub
or
dec
scas
sub
icebp
mov
sarl
sub
pop
adc
pop
jle
add
les
or
inc
adc
ds
aam
movsb
test
lods
es
cmpsl
mov
stc
rcl
mov
leave
xchg
movsl
ss
xchg
dec
psadbw
xchg
mov
cmc
add
jno
shlb
loop
outsb
rclb
cwtl
mov
outsl
xchg
cltd
add
inc
jb
ror
adc
ret
sti
inc
sar
lcall
mov
mov
mov
jp
pop
pop
sub
add
pop
in
mov
pop
push
sbb
sbb
pushf
imulb
aaa
imul
fcomp
dec
xor
out
pop
sub
sbb
push
out
shrl
fld
out
mov
cmc
jge
mov
or
sar
ljmp
nop
mov
mov
sbb
lret
fdivs
fwait
pop
push
jno
sub
fbstp
mov
sti
pop
dec
fists
push
movsb
jb
lock
ljmp
sbb
pop
je
imul
inc
in
pop
or
insb
fimull
ret
fldl2t
out
jno
repnz
mov
push
dec
mov
xlat
popf
fisubrs
adc
leave
and
les
sbb
cmpsb
inc
xchg
xor
cli
cmp
arpl
ds
aam
scas
sar
adc
and
incb
imul
xchg
sbb
xchg
andb
xor
outsb
and
add
lods
pop
mov
add
imul
mov
in
cld
mov
mov
xchg
fsts
inc
jg
pop
dec
lret
jbe
outsb
mov
dec
adc
ss
sbb
leave
fucomip
shl
fcomp
dec
loopne
icebp
jp
mov
or
out
cli
mov
aas
cwtl
xchg
xchg
shl
push
push
cli
leave
sbb
ret
icebp
pop
xor
sbb
lds
rcl
xchg
and
ficoml
push
ds
fdivr
decb
cmc
pop
outsb
push
cwtl
cs
cs
mov
mov
dec
ret
inc
cmp
icebp
es
adc
adc
pop
aad
push
lods
adcb
fsubl
test
cmp
lock
jo
gs
push
pop
sbb
sub
inc
aad
sbb
fiadds
jle
cmp
inc
adc
xchg
pusha
jno
shrb
scas
xchg
ja
and
outsb
xor
out
lock
insb
lahf
sub
js
es
or
mov
pop
sbb
sub
fwait
scas
mov
pusha
cli
xchg
sub
addr16
pop
pop
adc
sub
movsl
xlat
mov
cmp
rcrb
and
pop
aam
imul
mov
cmpsl
dec
gs
jl
popf
adcb
mov
ficoms
pop
cmp
mov
repnz
dec
testb
pop
jb
cmc
sbb
fwait
push
stos
inc
sub
pop
icebp
rol
sahf
xchg
adc
inc
rorl
out
pop
push
xchg
pop
mov
push
xlat
pop
andl
cmp
mov
add
orl
mov
sbb
movsl
scas
adc
das
mov
or
push
outsl
loop
ret
in
lock
push
sbb
fld
mov
lahf
imul
jnp
loopne
fwait
pop
das
push
mov
shrl
orl
loopne
inc
xchg
mov
xchg
mov
aas
jb
hlt
push
push
add
xor
push
out
push
subps
filds
sahf
pop
arpl
out
repz
sub
inc
cwtl
and
stos
jbe
ret
int3
dec
imul
inc
sub
movsb
stos
jecxz
xchg
call
mov
and
jbe
mov
addb
jge
outsb
push
pop
and
push
leave
int3
int3
mov
aad
sbb
xor
rcll
leave
movsl
mov
mov
movsl
cmp
sbb
mov
mov
push
mov
jae
sbb
addr16
int3
xchg
jnp
in
push
xchg
fyl2x
jl
repz
jb
push
push
pop
sub
xchg
test
dec
jge
shlb
pushl
pop
push
inc
mov
gs
pop
repz
jne
nop
pushf
or
add
add
jno
test
repnz
int3
jg
dec
adc
andb
sarb
movsb
movsb
lahf
adc
mov
and
sub
rolb
lret
xchg
scas
in
addb
pop
or
or
add
in
mov
dec
pop
inc
lock
insl
adcb
sti
divl
cmp
push
fwait
sub
pop
dec
inc
xor
sbb
push
or
xor
dec
lcall
dec
push
jp
call
inc
hlt
dec
test
sbbb
test
rolb
cmp
es
sbb
ljmp
shlb
push
lock
insb
or
das
scas
sarl
bound
xchg
in
add
ja
and
push
faddl
sub
jmp
mov
je
pop
adcl
and
lea
xchg
push
cmp
psllq
ficoms
add
les
aaa
jnp
mov
mov
out
dec
aaa
pop
push
aaa
mov
xchg
in
fwait
add
popa
and
dec
inc
outsl
cmp
xchg
repnz
mov
adc
stos
imul
mov
pop
mov
pop
sbb
popf
jmp
and
int
add
je
adc
test
loop
mov
push
and
and
dec
sbb
dec
mov
xor
enter
adc
addr16
loope
fwait
ja
gs
les
mov
inc
xor
movsb
pop
xlat
xor
jmp
popf
xchg
push
lcall
xchg
xchg
xor
sub
pop
mov
xor
aam
add
inc
addl
rcrb
fnstsw
jnp
pop
or
daa
sbb
or
lret
adc
popf
pop
cmp
gs
push
cli
inc
test
pop
mov
cltd
test
lret
test
sbb
icebp
push
shl
and
ss
je
int3
mov
sbb
addr16
mov
adc
mov
out
jbe
rcrl
mov
popf
mov
push
adc
stos
and
rorl
gs
lods
jne
and
xchg
test
mov
mov
push
sti
leave
sub
out
inc
pop
js
jns
inc
daa
or
and
test
and
adc
xor
inc
mov
jmp
outsl
nop
pop
aad
pop
in
roll
addr16
adc
inc
lret
cltd
jo
es
fisubrs
sub
imul
mov
jb
mov
jo
push
xor
fcoml
into
mov
adc
adcb
jbe
scas
sbb
scas
inc
pop
aas
dec
fdivrs
mov
xchg
stc
test
jo
mov
mov
test
cmpsl
in
jl
mov
mov
xchg
push
mov
dec
andl
inc
cwtl
adc
mov
inc
mov
jle
popl
fisttpll
jns
lahf
mov
incl
fdivrs
mov
shrb
jmp
mov
dec
faddp
xor
out
je
adc
dec
fsts
ss
pop
and
shrb
cmp
cmpsb
scas
ret
push
imul
mov
dec
pop
iret
mov
jns
or
adc
jg
ljmp
shlb
ret
call
or
fdivrl
add
jb
push
push
jbe
in
sub
cltd
popf
adc
mov
mov
ret
adc
movsb
leave
jge
jge
jecxz
lret
mov
dec
cmp
pop
jb
in
adc
fdivl
popf
div
pop
jns
mov
cmpsb
cmc
dec
sub
scas
inc
dec
fs
dec
or
sti
mov
and
mov
jl
in
dec
lahf
dec
sub
dec
jle
out
xchg
inc
jbe
push
movsb
fs
push
add
cwtl
out
scas
les
add
daa
lods
and
es
mov
push
inc
push
fsubrl
mov
mov
add
push
adc
adc
push
bound
repz
mov
sbb
xor
cltd
pop
lcall
aam
push
ds
dec
mov
add
mov
mov
push
cmpsb
push
push
mov
stc
or
rcll
mov
lret
popa
cmp
push
pop
sub
pop
dec
mov
pop
adc
or
lea
adc
addl
ja
jne
scas
xchg
mov
loopne
repz
push
das
popf
push
adc
lea
sub
stos
inc
jp
cmp
lock
mov
arpl
mov
push
nop
ret
lcall
add
adc
fcmovbe
or
lahf
add
faddp
mov
pop
mov
jno
dec
int
dec
mov
and
test
test
loopne
cs
cld
sbb
hlt
xlat
bound
dec
roll
sbb
xor
inc
add
or
nop
sub
test
int3
dec
jae
cmpl
pop
sub
nop
shlb
push
js
std
pushf
cmp
adc
scas
sbbl
leave
inc
call
int3
dec
bound
sbb
cltd
insb
add
pop
and
dec
repz
rcll
xor
adc
add
push
jae
pop
adc
sbb
mov
jl
ret
xor
adc
shrl
pop
lret
push
fildll
xor
shll
lret
mov
adc
and
push
lock
lods
inc
fdivr
dec
inc
sbb
test
cmp
and
mov
inc
jge
jae
xor
jle
mov
cmc
pop
dec
push
sbb
data16
mov
jbe
mov
inc
pop
pop
imulb
pop
jge
rcll
jmp
mov
pop
mov
xchg
pop
mov
sbb
sub
xor
inc
ds
es
push
xchg
jno
lcall
rcrb
sbb
test
ds
jmp
test
popf
test
cmp
divb
scas
sub
sub
shll
or
jge
mov
sbb
inc
imul
je
sbb
cmpsb
sub
testb
mov
stc
jo
mov
stos
pop
and
pop
fwait
pop
mov
std
lds
aaa
jmp
fucomi
pop
sbb
popf
mov
jb
sub
cmp
loopne
test
aas
sbb
push
subl
ficomps
push
repz
cmpsb
insb
adc
xor
pushf
push
mov
pop
mov
dec
push
mov
pop
mov
mov
cs
adc
cltd
les
inc
push
mov
fildl
ja
enter
rcll
mov
inc
cmp
cmp
push
lret
jns
test
int
sub
mov
or
add
jae
in
shrb
sbb
dec
es
mov
mov
sbb
fnstsw
lock
inc
xchg
sub
maskmovq
mull
jne
mov
add
cmc
cmp
mov
ja
mov
ret
cmp
inc
popa
and
cmp
inc
int
fnstenv
jno
shr
lcall
xor
mov
popl
insl
mov
sbb
pop
sub
dec
sbb
dec
mov
mov
sbb
mov
aam
pop
jl
adc
sub
cmp
hlt
add
aas
addr16
stos
cld
pushf
out
inc
push
shlb
leave
sub
inc
pop
dec
repz
loop
push
adc
dec
jge
inc
dec
mov
inc
rcll
add
pop
mov
xlat
push
scas
push
inc
xor
jnp
lcall
mov
push
cmpsb
popa
mov
mov
xchg
pop
enter
popa
pop
xchg
and
cmpb
dec
mov
out
test
aam
add
inc
and
mov
push
loope
push
sbb
mov
scas
cmp
xlat
adc
push
sbb
push
lea
xchg
mov
or
enter
cmp
mov
cmp
inc
sub
push
pushf
jle
fdivrl
cmp
jbe
imul
push
add
lcall
into
cs
mov
jmp
dec
mov
pop
dec
sub
nop
mov
pop
test
xor
adc
shll
inc
pop
iret
shrl
popa
or
cld
or
test
adc
movb
ja
cltd
sahf
xchg
sbb
aad
jo
push
test
scas
push
stos
cwtl
maxps
inc
mov
and
pop
mov
jae
ljmp
sub
fistl
int3
mov
xor
ljmp
jl
insb
sbb
or
fwait
push
inc
push
xchg
mov
sbb
push
adc
das
in
xchg
out
test
mov
xor
pusha
cld
dec
movsl
data16
and
pop
rol
nop
push
cmp
cltd
xor
sub
sbb
mov
mov
pushf
js
lcall
test
in
popa
wbinvd
enter
mov
loop
pop
sub
movsl
adcb
inc
inc
into
cmc
je
push
je
stc
push
int3
lret
subb
lods
mov
inc
and
sti
bound
jp
int3
test
imul
lea
xchg
fiadds
loop
inc
lcall
cli
dec
jp
loope
aam
jns
sti
fs
pop
mov
jmp
arpl
nop
sahf
mov
rcll
sub
clc
jl
mov
aas
cmc
jae
test
jle
in
or
xchg
cmpsl
or
jmp
push
dec
cs
bound
aas
pop
fsts
stos
push
sti
les
mov
rorb
sub
add
aaa
fadds
shrb
push
dec
dec
stos
addr16
shll
sbb
lahf
js
aam
shl
push
ret
shl
out
test
xchg
inc
sub
xlat
cmp
xorb
push
push
mov
xchg
fwait
outsl
stos
or
xor
sahf
cmc
int
mov
and
rcrb
or
imul
enter
xor
push
or
js
push
test
push
dec
xor
mov
jmp
sbbb
jae
xlat
pop
imul
and
imul
loopne
mov
add
jecxz
xchg
insb
sbb
sub
pushl
xchg
mov
adc
and
hlt
mov
mov
daa
lahf
int3
lods
or
dec
or
fs
iret
dec
ja
arpl
call
adc
mov
pop
imul
push
arpl
repnz
fadds
xor
mov
imul
lds
xchg
std
and
sub
jo
and
daa
jae
in
mov
pop
lds
mov
and
faddp
or
and
pop
mov
fisttpll
in
cmp
int
std
or
or
nop
dec
adc
in
add
mov
pop
and
arpl
mov
andl
xor
mov
pop
mov
sub
and
fnstsw
movsb
cwtl
ret
ljmp
insb
aaa
mov
mov
adc
outsb
into
imul
clc
adc
inc
out
mov
out
jmp
mov
xor
jmp
mov
pop
out
xchg
add
mov
inc
mov
sarl
pop
pop
out
addr16
lcall
sarb
inc
or
mov
fldl
test
push
sub
imulb
clc
aaa
mov
sbb
adc
imul
call
lds
outsb
leave
mov
or
movsb
subl
xchg
add
mov
push
aas
push
jno
ret
push
cltd
insb
clc
mov
lret
sbb
arpl
mov
js
testb
sub
imul
mov
jge
fiadds
pop
adc
adc
mov
das
lret
xchg
out
xor
and
rep
pop
mov
test
aas
cmp
out
cmp
and
sbb
popf
scas
adc
mov
mov
inc
lret
cmp
test
es
sub
xchg
or
in
and
sbb
pop
iret
jecxz
sub
movsl
jno
inc
sbb
xor
sub
je,pt
lea
jns
into
les
mov
ss
andb
cmc
pop
sti
sub
mov
jns
cmp
sub
mov
xchg
shl
jno
cmpsl
xchg
test
push
jecxz
pop
movsl
aaa
mov
je
orb
lods
js
data16
sub
adc
xor
aam
push
mov
and
inc
mov
jne
out
cmp
pop
jp
adc
sub
ret
mov
pop
imull
sbb
xchg
rclb
mov
stos
jne
fs
inc
aad
add
push
cmp
ljmp
push
push
bnd
jecxz
jnp
pop
scas
fdivrs
adc
xchg
aaa
in
or
push
pop
mov
ret
std
and
sti
or
mov
pushf
icebp
mov
es
and
xor
stc
testl
ds
jge
xorb
arpl
add
cmc
ret
popa
xchg
outsl
add
cmp
mov
add
mov
insb
pop
movsb
cld
enter
jnp
adc
lahf
mov
pop
push
jb
pop
fsubs
shlb
mov
js
notb
xor
jle
sub
or
pop
xchg
jecxz
les
js
negb
lret
jb
sbb
test
out
pop
stos
mov
insb
pop
arpl
adc
cmpsl
and
cwtl
lods
cltd
push
jae
stc
shrl
js
adc
in
popa
mov
call
adc
or
mov
and
es
lret
into
cmpl
mov
ljmp
test
lcall
fwait
and
dec
repz
lods
stos
and
and
push
dec
icebp
jle
scas
sbb
pop
mov
rolb
sub
sbbb
push
popf
int
mov
add
ret
xchg
inc
dec
rol
mov
push
mov
inc
dec
cmpb
in
mov
adc
pushf
mov
imul
cmp
cld
frstor
jle
daa
scas
addr16
jmp
mov
mul
insl
sar
call
out
fisubrs
in
adc
in
setno
movsl
and
cmp
adc
imul
ret
jo
pop
pop
fcomps
lcall
fcmovu
je
sub
rol
jg
dec
daa
adc
les
inc
pop
les
add
movshdup
das
gs
xor
fcmovnbe
ja
bsr
in
jecxz
in
pushf
xor
imul
dec
inc
aam
jno
mov
jmp
xchg
mov
out
jp
mov
sbb
ljmp
cmp
outsl
pusha
mov
jle
aas
dec
mov
lods
scas
fcoms
xchg
fisubrs
loop
jge
push
xor
push
mov
pop
fsubrp
sub
mov
ret
adc
xchg
nop
lods
subb
pop
fs
rol
shufps
mov
int3
push
gs
lods
lcall
push
insl
fsubl
aas
and
iret
or
adc
dec
pop
ret
daa
cmp
lahf
hlt
cmpsb
push
cmpsl
inc
mov
leave
cmp
gs
xor
mov
inc
cmp
jmp
or
xchg
cmpsb
lds
inc
adc
sbb
add
xorl
add
rorl
mov
stc
jnp
mov
leave
loope
mov
arpl
jecxz
test
in
adc
arpl
cld
ficoms
mov
push
test
test
inc
sbb
pop
jg
andb
pop
movsb
mov
mov
ljmp
out
in
or
mov
out
jp
movsb
addr16
lea
in
test
cmp
adc
aad
jne
inc
ljmp
test
add
xor
int3
lods
iret
rol
fists
xor
mov
mov
dec
subl
mov
xchg
rcll
xor
out
cld
outsl
aaa
sbb
scas
cmc
jae
out
sbb
jge
jno
cmp
outsl
xchg
jbe
xchg
cmpps
es
and
xchg
or
bound
add
sub
ss
lret
jno
mov
aad
repz
jge
js
jge
ljmp
mov
cs
pop
stc
sub
pop
das
add
je
xchg
xor
dec
lods
mov
lds
sbb
mov
pop
inc
jne
cmp
shrl
dec
lds
pop
imul
or
lahf
ss
out
adc
fsub
add
test
cld
out
lret
add
adc
inc
cmpl
mov
stc
mov
add
repz
jmp
push
jo
jle
outsl
aam
dec
sub
sub
js
in
out
jmp
test
in
addr16
push
ss
jbe
pop
adc
in
addr16
into
movsb
xchg
mov
fs
cmp
lea
push
cmp
outsl
pop
inc
jbe
repz
push
scas
hlt
in
or
push
fidivl
jecxz
or
in
xchg
push
inc
ljmp
sub
lcall
push
and
adc
jnp
popaw
pop
popa
mov
cmpsb
pop
gs
adc
xlat
es
ss
xor
push
dec
pop
adc
pop
dec
mov
xor
mov
dec
lea
xlat
test
mov
stc
sbb
xchg
iret
repnz
lahf
mov
in
pop
stos
fs
shll
xor
fs
pop
fistpl
cmp
je
sub
mov
leave
pop
daa
jmp
mov
inc
xchg
lahf
out
dec
sub
fdivr
dec
iret
lds
pop
sbb
dec
sub
lret
jmp
xorb
lret
jbe
or
sbb
imul
and
ficompl
gs
ret
sbb
mov
inc
loope
imul
pop
cmp
push
cld
cs
ds
sbb
lahf
xor
dec
mov
add
insb
push
mov
in
mov
xchg
or
mull
pop
inc
scas
fsubr
push
jge
push
mov
rolb
pop
push
es
sbb
je
jl
inc
mov
fisubl
dec
pop
xchg
orb
cmp
dec
mov
insb
das
js
je
push
rol
js
jecxz
out
sti
adc
mov
sub
sub
cmpsb
movsl
push
ret
das
out
out
push
vmovntpd
out
jnp
mov
lahf
push
add
cld
mulps
adc
jmp
xor
sti
jge
dec
aad
in
fidivrs
pop
dec
filds
lcall
add
movsl
and
add
aas
jp
ss
mov
addb
mov
dec
mov
int
or
jmp
add
pop
cmpsb
repz
test
push
inc
movsl
cmc
xor
add
popf
sbb
and
jo
push
jb
insl
jnp
fdivs
ljmp
jae
adc
cld
sbb
fs
lret
mov
jg
sbbl
out
neg
mov
adc
push
scas
shrl
adc
fcomps
xchg
cwtl
sub
or
adcb
mov
mov
fstps
mov
rclb
sbb
adc
sub
sbb
arpl
sbb
sbb
push
sub
out
pop
dec
fcom
lods
push
push
pop
aas
iret
mov
fwait
or
xor
sbb
or
cmp
inc
mov
adc
dec
icebp
mov
dec
cmp
in
clc
test
lret
push
in
out
test
sbb
or
jae
mov
push
pop
adc
sub
imul
clc
bound
fs
xchg
pop
int
test
movsb
add
fsubrl
test
mov
jmp
enter
sbb
mulb
sub
mov
xchg
icebp
pop
adc
sub
call
rorb
cmp
fldl
sbb
sbb
and
mov
jb
xor
add
fdiv
insl
out
cmp
test
push
loope
sbb
mov
push
sarl
insb
shrl
mov
jle
inc
test
js
or
pop
push
push
push
mov
jo
icebp
stc
inc
push
or
adc
jns
xchg
lcall
pop
clc
mov
sbb
jl
aam
or
adc
ret
lds
in
lahf
push
int3
jecxz
xor
adc
pop
fcomi
dec
mov
or
bound
jmp
fsqrt
adc
add
pushf
andb
int
or
nop
adc
jg
roll
xchg
jne
push
pop
add
ss
pop
mov
adc
scas
and
in
xor
cmpsb
mov
fst
push
lahf
mov
xchg
pop
aas
lock
dec
mov
pop
in
or
xchg
aam
mov
shlb
call
hlt
ret
lds
add
lret
popa
cmp
jo
and
mov
inc
das
frstpm(287
mov
mov
in
in
dec
dec
fistl
outsl
adc
dec
jne
push
aad
popf
cmp
xor
enter
adc
icebp
pop
cmp
enter
jne
stos
cmpsb
addl
ja
sbb
inc
or
imul
xor
cltd
out
sahf
pop
orl
mov
mov
sub
sbb
std
lret
sub
pop
xor
adc
sahf
andnps
into
mov
jmp
mov
popa
sbb
insl
mov
cmp
jne
loop
shr
popf
sub
rol
push
sbb
cli
scas
jne
stos
jecxz
mov
pop
jecxz
push
jle
in
jb
loope
nop
aam
and
jb
movsl
jle
xchg
loope
test
sbb
lds
dec
scas
adc
jecxz
pop
cmp
xor
xchg
shr
mov
lds
scas
fnstsw
jno
pop
add
icebp
push
jl
xor
add
adc
scas
je
sbb
adc
push
loopne
fldt
push
jnp
cli
shl
mov
rcr
fimull
jbe
pop
dec
or
call
mov
inc
xchg
push
lods
mov
mov
cs
fidivrl
std
iret
adc
stos
mov
aam
adc
icebp
xor
fwait
mov
js
fidivrl
and
dec
orb
stos
repz
adc
dec
push
sbb
je
lcall
cmp
movsb
lret
inc
cmpsl
sti
add
xchg
pop
sbb
cmpsb
sbb
shl
adc
in
pop
mov
sub
ljmp
loop
inc
shll
mov
outsb
sbb
and
add
push
push
push
ja
out
fsts
inc
cld
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
push
add
movl
subl
movl
and
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
xor
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
push
pop
rcll
fwait
pop
push
outsb
adc
fldl2t
jp
sbb
jp
sbb
jnp
enter
lock
jle
mov
push
negb
mov
f2xm1
loope
dec
pop
jmp
jns
divb
bound
inc
mov
inc
into
cmp
and
popf
mov
sbb
outsl
jae
xchg
pop
cwtl
xchg
push
clc
decb
jmp
mov
pop
adc
imul
xor
push
add
scas
cmc
stc
dec
pop
neg
fs
gs
lock
mov
xchg
dec
mov
pop
pop
popf
adc
sbb
pop
sub
xor
cmpsb
mov
addb
jge
clc
mov
cmp
xor
cli
dec
lea
xor
call
aas
fcompl
loopne
push
fldl
rorb
int3
setbe
adc
pop
es
add
mov
push
fisubrs
inc
add
pusha
js
mov
fistl
dec
repz
fnstsw
jp
inc
loop
cwtl
mov
dec
push
bnd
xor
fnsave
cmp
hlt
dec
nop
cs
sub
pop
test
out
and
push
inc
test
adc
adc
jl
mov
sbb
movsb
notb
jle
inc
jb
out
mov
mov
push
pop
sar
shl
aam
repz
push
bound
cmp
imul
dec
mov
xchg
out
in
fdivrl
xchg
sarb
data16
mov
jp
cmp
fsubrs
repnz
je
inc
leave
push
stc
into
push
pop
xchg
testl
xchg
xor
pop
nop
jns
mul
sti
les
dec
out
ja
sarb
mov
push
repz
lock
subb
leave
aas
dec
xchg
adc
pop
fucomi
inc
or
mov
sub
inc
mov
inc
sbb
mov
jecxz,pt
pop
pop
jecxz
inc
mov
inc
lret
pushf
cmpsb
sbb
mov
mov
pop
lock
stc
push
test
pop
cmp
dec
stos
xchg
jp
cmp
pop
lods
pop
pop
cmp
push
iret
lret
push
idivb
mov
out
ja
mov
in
jnp
mov
pop
je
ja
xor
repnz
and
jbe
lods
push
dec
cmp
adc
fiaddl
ljmp
jns
xchg
sbb
jmp
out
out
pop
icebp
adc
addb
fldt
or
jo
mov
leave
cmp
sub
insb
addb
in
cmc
pop
les
lds
pop
mov
xor
loop
test
aam
and
cmp
sub
mov
mov
fdivl
cwtl
xorl
out
das
jae
xor
mov
xchg
insl
mov
pop
bswap
jmp
xchg
and
cmovp
clc
inc
out
test
or
movsl
popa
push
fnstsw
or
inc
mov
add
out
idivl
dec
out
shll
push
push
xlat
jl
lcall
repz
inc
repz
dec
pop
test
stos
jge
movaps
int3
rcrb
sbb
in
addb
aam
movsl
dec
nop
dec
ja
add
shrl
jg
je
inc
or
xchg
fists
cmpsb
mov
adc
loop
or
into
int
add
adc
loopne
enter
mov
jbe
jmp
imul
mov
xor
in
adc
xor
cmp
rol
pop
dec
mov
cmc
adc
stos
pop
cld
lahf
or
adc
ja
icebp
push
mov
sahf
ret
lock
sbb
movsl
popa
jo
ret
stos
mov
repnz
push
out
cmp
pusha
xchg
push
repnz
iret
out
mov
dec
scas
in
cmpsl
mov
inc
movsl
xchg
dec
mov
pusha
and
inc
push
inc
or
je
gs
ds
mov
cmp
ret
imul
popa
inc
cmp
push
mov
jne
xor
pop
outsl
cli
ljmp
push
push
int
push
sub
andb
imulb
lock
lret
xchg
add
aas
adc
xchg
inc
and
movaps
cmp
push
or
mov
jl
clc
mov
cmp
or
jo
mov
jge
add
or
xchg
inc
add
add
hlt
int3
das
lods
pop
or
pop
cmp
mov
or
mov
or
test
xchg
dec
mov
sbb
cmc
ss
or
cmp
aad
leave
ja
dec
scas
inc
xlat
adc
es
lcall
les
jns
jge
aam
adc
pop
aaa
test
pop
outsl
xchg
mov
aad
cltd
or
cld
and
mov
xchg
push
subl
cmp
jge
loope
mov
or
in
mov
test
imulb
rcr
popf
les
or
pop
pusha
daa
xchg
insl
movsb
repnz
cmpsb
xchg
dec
stc
sarb
iret
adc
fwait
push
xchg
xchg
rolb
push
aad
data16
mov
cltd
nop
in
pop
out
mov
mov
imul
sbb
push
insl
cmp
push
dec
pop
adc
icebp
outsb
decl
pop
movsb
dec
or
adc
stos
mulb
sub
jp
in
sub
icebp
pop
pop
js
dec
pop
mov
pop
sbb
jecxz
dec
movb
test
cmc
pop
xor
repz
sbb
or
lds
dec
inc
xchg
insb
or
popa
insl
mov
cmp
mov
push
sahf
mov
scas
sti
stc
xchg
or
jae
dec
aaa
and
or
loopne
movsb
call
mov
sub
lea
xor
in
dec
mov
scas
adc
maskmovq
testl
iret
cld
sbb
push
push
push
pop
aam
cmp
cwtl
fmul
mov
xor
push
mov
fidivrs
push
cmp
insb
fildl
push
andl
cmp
pop
xor
fsts
or
pop
out
in
loope
and
shl
arpl
jae
xchg
jg
push
lods
jbe
xlat
imul
imul
mov
push
jl
dec
in
or
pop
jns
pushf
fisubl
scas
mov
xor
xchg
mov
sbb
dec
or
push
dec
inc
sbb
pop
cmc
aaa
pop
stos
pop
cmp
push
ja
dec
cs
cmpsb
dec
daa
jmp
mov
ss
inc
mov
inc
sub
ds
out
aaa
cmp
cli
test
mov
test
fbld
add
ret
push
push
push
loope
sub
mov
inc
inc
loopne
lds
ret
xlat
lock
and
xchg
jbe
mov
push
and
je
push
mov
mov
shll
jae
ss
fsts
stos
jge
add
dec
int3
adc
shlb
xlat
dec
dec
push
lahf
dec
cmp
divb
mov
mov
or
cmp
lcall
outsb
jb
mov
add
int
sti
adc
push
xchg
mov
sbbb
or
xchg
jbe
in
inc
and
adc
aad
das
testb
fwait
cmp
sbbb
add
fwait
sahf
push
in
mov
dec
mov
pop
sbb
in
jge
inc
cmpsl
enter
xlat
loope
xchg
pop
mov
sub
push
or
jns
int3
push
jl
and
cwtl
std
in
push
repnz
push
out
ja
sbbb
jno
sbb
or
in
fbld
push
leave
icebp
mov
popa
fisttpl
xor
push
lcall
rcrl
sbb
int3
in
inc
sub
int3
push
or
push
cmp
sbb
dec
cmp
ret
jns
out
mov
leave
adc
xchg
inc
mov
test
sbb
out
test
cltd
push
inc
sbb
dec
enter
inc
js
cmp
ljmp
ss
mov
fadds
or
mov
add
cli
test
pop
push
jns
sub
sbb
repnz
outsb
test
add
insb
cmp
imul
jo
into
mov
out
xchg
fistpl
repnz
mov
add
jmp
mov
ret
lock
sub
cmp
outsb
dec
mull
outsb
int
fcmovnbe
mov
push
in
inc
arpl
stos
fcompl
push
push
push
sub
fdivs
sub
xchg
or
in
pop
sbb
popf
fld
jbe
fs
mov
loop
xchg
out
leave
out
movsb
xor
add
lcall
ret
enter
enter
cmpb
addl
loopne
inc
jl
sbb
dec
jno
test
or
mov
ds
add
mov
jg
or
mov
adc
push
test
jne
addl
cltd
aas
pop
das
cmpsb
sbb
mov
out
xchg
cmpsb
jno
int3
cmp
jbe
xlat
bound
or
js
push
cmp
jo
xchg
mov
les
cs
sbb
cmp
mov
cld
fwait
into
mov
out
std
jnp
imul
insb
jnp
jmp
cmp
xor
dec
mov
call
xor
pushf
push
mov
and
and
dec
or
vmread
mov
or
jno
decb
sbb
iret
dec
rcr
leave
cld
fadd
lret
inc
mov
pop
xor
add
sub
fwait
or
dec
pushf
loope
push
movsb
lahf
sbb
and
pop
or
mov
add
insb
xchg
jg
sub
xor
mov
lcall
idivb
and
stc
add
xchg
imul
dec
mov
out
pop
iret
cmp
mov
inc
sub
xchg
in
in
inc
xchg
add
dec
inc
jl
xor
icebp
mov
or
popl
jns
fdivs
imul
es
cmovp
xchg
aas
enter
mov
mov
movsl
mov
ss
mov
pop
js
xchg
testb
jl
pushf
cmc
xchg
sbb
popa
mov
test
jne
adcl
jne
cmp
jp
ja
pop
push
jle
cmpsb
icebp
mov
fadds
ss
aam
mov
insl
shlb
fbstp
xchg
or
xchg
dec
mov
adc
push
gs
mov
xchg
mov
mov
mov
xchg
test
add
adc
and
push
aaa
outsb
push
sti
cmp
jns
jp
rcll
cmpsl
jnp
add
sub
rcr
fwait
mov
cmp
inc
movsl
std
das
or
sub
cmc
into
mov
push
int
mov
lods
mov
gs
mov
fidivs
popf
cld
test
idivl
inc
hlt
push
loop
js
cmp
shll
insb
mov
sbb
dec
in
divl
pop
outsl
jmp
xchg
ja
ja
xor
dec
testb
pop
jge
push
fsts
push
clc
jle
sbb
inc
imul
push
cmc
rcl
mov
sbb
mov
adc
xchg
mov
lea
add
add
sbb
dec
pop
inc
loope
stos
test
int3
and
test
push
ja
cmc
hlt
lods
jnp
ss
sahf
ret
mov
loop
cmp
jbe
cltd
lret
scas
outsb
lea
addl
and
jb
inc
mov
popa
mov
mov
push
lcall
lret
mov
sbb
add
je
adc
jge
scas
push
cmp
xchg
mov
push
push
mov
lret
lret
cmp
sbb
les
aad
push
mov
popa
movsb
lret
cwtl
sub
mov
test
rol
test
and
xor
or
mov
icebp
and
dec
dec
adc
hlt
pop
test
mov
xchg
repz
cmp
add
and
jg
sbb
sub
fwait
and
std
push
add
movsl
cmpsb
mov
aam
fildl
out
or
ja
ret
mov
mov
mov
cltd
leave
shlb
and
add
stos
cmp
leave
ficompl
add
pop
call
and
cs
ss
daa
xchg
dec
es
pop
pop
lahf
test
pop
test
mov
outsl
jmp
mov
pushf
adc
xchg
outsb
cmp
pop
testl
sub
or
xchg
call
insl
xor
pop
sbb
xchg
mov
mov
movsb
imul
jecxz
mov
inc
imul
pusha
xor
push
xchg
dec
fsubp
rorl
std
stos
xor
lock
mov
pop
incl
arpl
adc
add
lahf
lods
inc
iret
add
jbe
mov
dec
pop
lcall
clc
pop
add
hlt
xor
dec
and
repnz
cltd
push
cli
lret
jmp
xor
das
mov
sub
je
sbb
push
mov
mov
mov
mov
fwait
pop
mov
dec
daa
mov
das
mov
cmp
xor
mov
shlb
push
pop
mov
mov
rcrb
dec
jmp
mov
shlb
mov
adc
sub
xor
cmp
mov
out
ss
or
test
jns
lock
fwait
test
dec
dec
cmp
int
inc
lahf
inc
int3
sbb
xchg
jnp
mov
sub
mov
fldenv
outsb
and
mov
orb
cld
sbb
or
pop
pop
or
aas
xchg
in
subb
js
mov
aad
push
mov
fists
sbb
out
loope
loop
stc
int3
add
mov
lret
xor
out
pop
or
and
mov
es
mov
aad
mov
scas
test
push
jp
lret
fidivl
adc
aas
xchg
cmp
int
fsubrs
and
xchg
movsl
std
sub
jae
add
sbb
mov
addr16
adc
inc
mulb
in
imul
and
pop
sub
cmp
cmp
inc
mov
je
loop
inc
xchg
fisttpll
sub
mov
xlat
mov
push
sub
sbb
sbb
rol
lods
inc
pop
call
ret
mov
and
jge
sahf
pop
cmp
mov
movsb
aas
and
xchg
xchg
sub
sub
in
add
pusha
push
in
ja
mov
xchg
inc
mov
aaa
cld
inc
js
mov
xor
movl
jge
push
jbe
fwait
pop
hlt
outsb
pop
out
call
add
mov
cltd
jno
aas
cmp
dec
loop
nop
das
aad
ret
jbe
mov
mov
sbb
add
push
mov
dec
insl
xchg
fmull
dec
push
je
popf
mov
jle
inc
xchg
out
scas
push
jnp,pn
cmc
xor
rclb
pop
lea
packuswb
ja
pusha
popf
xchg
pop
mov
mov
mov
call
in
or
mov
xchg
mov
movsb
ja
fstl
movsb
push
lret
xor
mov
jnp
mov
movsl
mov
sahf
sarb
xor
mov
imul
xchg
adc
fs
mov
cltd
cmpsl
push
in
loopne
ljmp
jg
or
inc
in
mov
cs
test
mov
lock
bnd
out
adc
cwtl
imul
loope
cwtl
scas
mov
inc
push
lods
int3
cmp
xchg
sahf
xlat
pop
loopne
mulps
cmpsb
mov
loope,pn
mov
or
arpl
int3
and
inc
repz
adc
pop
pop
jae
idiv
xchg
add
fimull
and
mov
xchg
in
std
mov
inc
data16
je
arpl
outsb
inc
sarb
add
call
or
mov
sahf
add
cmp
dec
icebp
into
jns
jns
jg
loopne
pop
movsb
mov
mov
fs
pop
jns
sub
mov
sbb
incl
jb
lret
adc
add
pop
jmp
push
lock
jno
push
test
inc
cmp
pop
jmp
out
int
sub
lock
addb
lret
xor
addr16
ret
adc
jbe
jae
imul
fildll
adc
mov
std
push
cli
pop
mov
ja
in
test
out
loop
push
daa
mov
jg
or
adc
lods
fcompl
cmc
inc
push
sbb
mov
movsb
pop
shrb
fisubs
mov
repz
cmc
repnz
sti
jnp
movsb
sarb
cmp
pusha
repnz
ja
inc
mov
push
loopne
pushf
lret
fidivrl
inc
xchg
or
es
aad
stos
pop
jp
rorb
pop
mov
in
push
mov
xor
iret
enter
leave
lods
push
iret
adc
imul
push
add
enter
mov
xchg
mov
ret
sbb
es
and
addr16
fcompl
in
test
pop
jp
aaa
sub
jp
test
cmp
fcmovb
mov
lahf
inc
imul
cmc
out
mov
cmp
push
jecxz
call
rcll
lods
and
xchg
call
sub
push
daa
in
push
push
pop
imul
repz
or
sub
movb
ret
js
lea
and
loope
pop
movsb
push
stc
cltd
popa
aad
and
push
rorl
sub
fwait
lahf
mov
roll
in
enter
inc
push
mov
mov
mov
bound
xchg
pop
sub
dec
xor
and
pop
dec
cmpsb
push
or
xchg
pop
stos
stos
dec
xchg
sub
repnz
data16
cli
jle
sbb
cmpsb
sbb
lds
mov
pushf
rcl
pop
insl
jne
dec
xchg
pop
mov
add
push
insl
jp
pop
jge
inc
pusha
push
shr
fmulp
mov
jmp
inc
dec
push
sarb
in
mov
shrb
jecxz
add
out
loop
or
clc
or
cmc
jae
mov
outsl
xchg
pop
xorl
aam
test
int
fmuls
mov
xchg
shll
mov
sub
sub
das
jmp
pusha
addl
mov
push
push
push
adc
pusha
js
cmp
popf
call
fisubl
mov
dec
fbld
sbb
xchg
mov
sbb
rcll
lret
addl
out
inc
icebp
sbb
or
loopne
add
les
mov
pop
pop
decl
stc
ret
push
imul
add
xchg
enter
cld
mov
lods
sub
inc
adc
mov
ficoml
loop
mov
jo
rol
fcomps
adc
insb
das
dec
dec
cmpsl
pop
movsl
add
xchg
out
scas
cld
xlat
mov
dec
int
jge
xchg
cmp
sub
gs
mov
test
fs
cmp
fisttpll
out
scas
out
cmp
pop
add
add
loopne
test
mov
or
xlat
pop
lahf
pushf
add
in
mov
xchg
rorl
pop
adc
mov
mov
push
pop
pop
clc
and
in
push
mov
fnstenv
or
mov
mov
add
jnp
mov
jge
pop
jge
pop
pop
inc
sbb
pop
test
repz
dec
or
inc
int
add
out
dec
xor
xor
fdivrl
jl
push
aas
mov
cmc
stos
sbbl
pop
icebp
or
lret
adc
sbb
adc
push
js
or
in
dec
loop
daa
bound
pop
xchg
sti
gs
and
pushf
xchg
hlt
mov
fs
imul
outsb
xor
pop
dec
dec
adc
push
sahf
xchg
frstor
sbb
lret
or
aam
sti
in
xor
outsl
mov
test
lret
testb
and
lahf
cmpsl
movsl
jnp
mov
nop
clc
pushf
lods
addb
mov
inc
sub
mov
mov
js
xchg
push
es
add
sub
ds
lock
jle
and
push
pusha
jle
aad
arpl
emms
test
cld
imul
mov
das
shll
inc
add
xor
out
rcl
testb
mov
sub
add
stos
loope
sub
xor
roll
adc
sub
pop
js
cmp
fnstsw
outsl
mov
push
bound
mov
sbb
outsb
das
insb
shlb
xor
fs
orb
dec
xchg
and
pop
sbb
push
adc
push
jge
hlt
rcrl
pop
mov
aas
enter
mov
cmp
into
insl
fcoms
adc
or
fisubl
cltd
mov
and
bound
push
fmulp
test
xor
push
ja
insb
sbb
cmp
push
mov
shrl
lock
mov
ret
xchg
inc
adc
sub
in
or
or
fcoms
adc
lcall
movsb
ror
test
lahf
out
out
mov
arpl
xchg
mov
inc
xor
mov
xor
repnz
sub
mov
test
js
sub
popfw
sarb
in
imul
sahf
outsl
cmp
fcomps
int3
cmpsb
adc
aad
inc
ljmp
fdivrs
xchg
mov
mov
gs
pop
lods
imul
call
lea
mov
cmp
sbb
stos
call
fdivs
xchg
mov
sub
cmp
and
inc
dec
or
adc
in
bnd
inc
push
add
xchg
xchg
int3
sar
jb
xchg
pop
les
inc
inc
popa
into
lods
dec
and
pop
movsl
les
or
mov
xor
mov
or
adc
adc
mov
push
mov
sti
jbe
aas
dec
xchg
ss
add
enter
mov
cmp
and
movsl
pop
push
std
cs
sbb
mov
jns
popa
out
sbb
mov
jo
sarl
nop
adc
jg
mov
dec
xchg
and
or
inc
js
test
and
into
pop
xchg
cld
repnz
adc
jne
mulb
movsb
pop
imul
icebp
in
add
lret
mov
mov
lods
hlt
icebp
push
cmp
and
add
push
sahf
mov
pop
push
add
sub
sub
fdivl
fstpl
popf
sub
cli
sub
sahf
add
leave
or
ja
rorb
jbe
movsb
sbbl
dec
mov
testl
pop
xchg
in
mov
jo
mov
call
sbb
lret
inc
nop
mov
jmp
add
or
mov
test
sub
out
sub
adc
js
dec
jo
jo
sbb
jo
mov
ja
imul
mov
push
rcrl
outsl
sbb
ja
gs
outsl
insb
daa
cmpsb
repz
push
adc
push
dec
dec
sub
test
test
add
and
fisttpl
sti
xor
inc
mov
icebp
add
imulb
mov
stc
sub
xchg
push
push
xchg
inc
out
dec
xchg
out
push
out
idivl
icebp
xor
mov
jne
add
mov
enter
std
and
jae
daa
jnp
jl
xchg
mov
rcrb
cld
pop
inc
loopne
pop
jns
scas
mov
jle
fdivl
adc
sbb
xchg
int
mov
push
fmuls
sbb
aad
lahf
mov
push
add
cltd
fisubs
ja
xchg
dec
psllq
xor
mov
repnz
mov
subl
in
shrl
lret
testl
sbb
lds
dec
call
mov
xlat
adc
or
cmp
jbe
sahf
subb
sbb
mov
call
inc
pop
int
dec
lods
inc
sub
adc
pushf
mov
fimuls
fs
xchg
sbbl
dec
adc
adc
cwtl
out
pop
xchg
lahf
fldt
adc
test
cld
inc
or
iret
cmp
and
into
inc
jl
not
int3
fimull
add
xchg
inc
fsubr
rcll
dec
lock
mov
rcrb
push
inc
cld
dec
jmp
test
xor
icebp
cmpsl
stos
xor
and
pop
int3
pop
sti
jl
test
sahf
inc
and
push
mov
mov
xor
xchg
jb
add
cmp
fidivl
adc
mov
int
sahf
jge
pop
in
mov
and
sbb
cmpsl
mov
jmp
mov
jno
int
mov
push
arpl
addr16
shll
stos
scas
jae
sbb
stos
cs
push
cs
cmpl
in
subl
out
mov
xor
sti
xchg
nop
pop
xor
sub
fnstsw
pushl
scas
mov
mov
shll
and
mov
in
aaa
add
jno
inc
inc
aad
shlb
aas
clc
es
outsb
sahf
popf
mov
or
mov
rcrl
push
jbe
or
ror
mov
ror
pushf
push
pop
dec
addr16
in
push
xor
in
pop
sub
imull
lahf
cmp
repnz
in
xlat
aas
pop
xchg
nop
cmp
sti
lcall
cmp
int
je
push
sahf
inc
stos
mov
pop
stc
imul
out
pop
dec
pop
adc
addr16
addr16
or
lahf
jnp
dec
and
or
sahf
psllq
rclb
sub
std
sbb
nop
xor
xor
mov
adc
testb
aam
out
pushf
aaa
push
arpl
mov
mov
shl
movsb
pop
stos
scas
aad
aam
inc
inc
ret
pop
push
out
hlt
xlat
cmp
rorb
loopne
cmp
cmpsb
sub
jg
sbb
fists
push
clc
or
jnp
inc
sarb
out
or
dec
mov
pop
int3
adc
pop
stos
dec
xchg
adc
loop
lods
jecxz
test
loopne
mov
fcoms
cli
aaa
pop
pop
jo
mov
inc
gs
cmp
add
pop
pop
divb
lcall
gs
push
outsb
sub
or
push
push
mov
stc
or
sub
mov
mov
push
xchg
jbe
push
scas
mov
cmp
jns
fs
je
mov
mov
and
or
mov
push
jp
pop
lods
addr16
insl
add
fld
clc
pop
pushf
fwait
hlt
sbb
xor
pop
mov
cmp
rcrl
addb
inc
inc
or
jp
dec
mov
pop
iret
xchg
dec
mov
cmpsb
outsb
repz
ret
sbb
mov
or
insb
jne
call
shrb
add
jp
in
outsl
int3
pop
jecxz
or
dec
lret
lods
jne
sbbl
dec
icebp
cs
movsb
sar
es
gs
iret
adc
iret
std
inc
repz
and
or
stos
dec
jp
or
std
ljmp
cmp
mov
push
and
mov
pop
movsb
cmpsb
or
mov
mov
adc
mov
rol
ret
in
or
mov
sub
scas
stos
cmp
cltd
add
pop
mov
mov
int
mov
inc
icebp
sbb
xchg
mov
test
add
aas
push
mov
call
addr16
mov
icebp
inc
push
xchg
out
jae
pop
test
in
out
xchg
enter
aad
outsb
add
cmp
lods
pop
push
sub
inc
dec
dec
pop
jno
mov
jmp
js
cmpsb
sub
sbb
arpl
jp
xchg
sub
movsl
testl
jp
sub
in
jbe
es
or
test
jb
leave
pavgw
xor
lods
loope
push
lret
lds
dec
xor
call
std
ss
shl
xor
jbe
mov
xor
enter
mov
pop
les
addr16
add
add
add
outsb
ret
jecxz
mov
pop
lods
mov
outsl
mov
push
loope
xchg
fwait
aaa
les
outsb
adc
cs
stos
fists
addr16
or
sub
daa
lods
stos
femms
add
outsb
es
mov
lcall
cmp
or
sbb
mul
cmp
fs
dec
jo
push
aaa
or
adc
jne
cs
iret
push
pop
test
pop
enter
in
repnz
test
test
push
rorb
std
orb
jnp
pushf
dec
stc
das
std
sbb
std
add
sub
outsb
and
ds
inc
sbb
pand
jbe
sbb
imul
cmp
pop
and
fdivrs
int
mov
hlt
xor
pusha
cmpsl
sbb
sbb
cmp
dec
inc
push
adc
imul
es
dec
or
add
clc
xchg
neg
jae
pop
sti
lds
add
add
jae
jo
push
ret
je
sbb
bound
push
sbb
enter
test
rcrb
xchg
lret
fs
popa
js
xchg
mov
icebp
in
js
inc
setne
imul
sarl
arpl
je
das
es
cmpsb
jl
push
sub
pop
icebp
xcrypt-ctr
cmpsl
pop
xchg
sbb
pop
sub
push
stos
lret
aam
test
adc
mov
jo
and
daa
mov
out
out
ret
cmp
popf
and
jp
shlb
push
inc
adc
pop
jno
in
into
jo
adc
outsb
add
jno
mulb
bound
out
mov
push
adcl
stos
stos
leave
aam
jg
mov
jne
push
rolb
out
fists
sub
sarl
mov
adc
out
loopne
mov
lock
dec
jecxz
mov
in
push
mov
mov
push
add
push
divl
mov
and
mov
lock
insb
inc
mov
imul
je
loope
push
push
jb
dec
ret
fdivrs
mov
and
pop
iret
cmp
fsubrp
mov
pop
inc
es
pop
add
ja
pop
lods
ljmp
xor
lret
pop
xor
pop
inc
adc
dec
push
adc
clc
push
int
add
pop
clc
xchg
mov
xor
adc
outsl
push
sbb
orb
pop
add
lcall
stc
cmc
repz
ds
dec
sub
daa
mov
mov
packssdw
inc
incl
jae
mov
pop
push
or
add
out
xor
mov
xor
push
fwait
into
int
xor
imul
stos
fsub
lahf
out
movsl
pop
lret
cmp
pop
xchg
cs
shr
in
adc
cs
or
mov
xor
add
dec
mov
idivl
lods
inc
adcl
cld
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
or
movl
adcl
mov
mov
mov
add
mov
negl
xor
add
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
or
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
mov
adc
mov
adcl
xor
mov
and
mov
decl
add
movzwl
add
mov
movb
mov
mov
adc
lea
subl
mov
mov
inc
mov
xor
adcl
sub
adcl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
sbbl
movl
push
movl
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
xor
or
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xor
mov
or
mov
sbb
xor
or
mov
push
add
jmp
movl
mov
mov
movl
inc
cmp
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
not
mov
subl
xor
adcl
add
movl
jmp
decl
mov
adc
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
subl
add
movzwl
negl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movzwl
movl
xor
add
movl
mov
movl
mov
mov
inc
mov
movl
cmp
jne
mov
mov
adcl
xor
movl
add
subl
mov
add
mov
addl
xor
add
movl
mov
mov
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
jmp
sbbl
mov
and
mov
xorl
xor
xor
sub
sub
sub
xor
mov
mov
mov
subl
lea
movzwl
adc
mov
sbbl
mov
dec
mov
lea
mov
sbbl
mov
add
mov
lea
mov
incl
mov
sbb
mov
andl
lea
dec
mov
movzwl
adc
mov
mov
addl
lea
mov
xorl
mov
andl
mov
orl
lea
addl
mov
or
mov
xor
add
movl
jne
jmp
negl
mov
mov
subl
xor
xor
sbbl
sub
orl
sub
xor
movl
mov
movl
mov
movl
mov
jmp
mov
mov
xor
adc
xor
xorl
sub
sub
or
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
jmp
fstps
sti
sarl
jnp
inc
xchg
or
dec
jns
out
je
jp
sti
pop
jp
lods
push
xchg
adc
jnp
shlb
adcb
aam
add
and
and
adc
cmp
push
mov
push
rcl
pop
lahf
lods
sarl
je
clc
insl
adc
jno
mov
sarl
jmp
test
and
stc
xchg
je
push
cmp
pop
mov
mov
xor
int3
mov
out
pop
scas
test
jp
mov
lock
xchg
data16
mov
out
or
fcompl
cmp
fstps
aad
out
fstpl
xor
xchg
and
dec
mov
adc
div
inc
lahf
mov
sub
inc
loop
mov
dec
inc
inc
sbb
mov
jg
cmp
or
les
sbb
add
cmp
ret
iret
mov
inc
sbb
ret
dec
mov
inc
cmp
repz
sbb
ret
inc
cmp
jo
shrb
inc
in
pop
jbe
jno
pop
xchg
jns
inc
ds
js
test
sarl
mov
xchg
cli
addr16
ljmp
push
int3
in
fdivrl
mov
gs
add
push
inc
jbe
rcrb
ret
push
in
sbb
inc
jae
mov
test
cs
or
push
xlat
xchg
sub
scas
sahf
lock
jo
jbe
fwait
das
fiadds
aam
add
lret
jnp
aam
push
imul
sbb
mov
das
cmp
dec
mov
dec
jns
cld
int
sub
in
xor
pop
int3
sub
in
rcl
rorl
jae
lcall
stc
inc
and
stos
pop
out
ss
adc
pop
adc
lret
xor
mov
shlb
je
dec
loopne
add
leave
jbe
scas
jb
rclb
imul
xchg
mov
psubsb
in
push
dec
pop
push
fcompl
mov
loopne
cmp
or
jmp
mov
fwait
inc
aad
adc
xchg
sbb
into
jmp
out
cmc
xor
out
aas
and
pusha
int
jge
jmp
pop
mov
add
pop
mov
clc
mov
dec
mov
stos
lret
sbb
mov
out
and
fwait
mov
mov
adc
cmpsl
push
jmp
sub
push
mov
push
popa
cmp
inc
cmc
dec
ret
mov
lret
pushl
push
addr16
and
mov
mov
push
fidivl
jg
xor
out
inc
cmp
cmp
pop
push
lods
fidivs
jno
dec
lcall
call
mov
mov
lds
pop
bound
mov
mov
rcll
movsb
and
je
fcmovnu
or
insl
faddp
inc
in
test
or
dec
orl
ret
push
xchg
inc
pcmpgtb
fwait
test
jp
ret
pop
int
pop
push
cwtl
or
push
mov
sbb
sub
aas
hlt
repz
movsb
push
pop
insb
repnz
and
adc
aaa
inc
xchg
test
adc
xor
inc
ret
call
or
rorl
int3
sub
lea
cmpsl
push
push
pop
scas
lds
push
scas
xor
jns
negl
xchg
clc
fldt
adc
and
jns
and
repz
test
mov
jmp
cs
jl
fiadds
mov
sbb
dec
decb
clc
cmp
cltd
adc
xchg
fmuls
jl
pop
add
mov
lret
or
lock
cmp
cmp
lret
sti
addb
dec
in
mov
mov
mov
lods
sti
outsb
pusha
dec
push
aad
loop
popa
lret
sub
jno
and
subl
mov
lahf
fnsave
pop
cmpsb
pop
add
mov
lods
push
or
sbb
int3
mov
sbb
addb
outsb
sub
or
push
stos
movsl
add
popa
mov
cltd
sarb
std
insb
in
xchg
pop
xchg
add
pop
inc
mov
scas
and
mov
xchg
push
int
gs
mov
and
push
stc
mov
pop
ja
shrl
fbld
xchg
cmp
mov
jecxz
dec
adcb
test
movsl
jns
inc
add
jmp
arpl
test
ja
push
cmp
jns
ret
es
cltd
ffree
es
int3
sub
int3
pop
outsb
ficoml
addb
adc
sub
enter
dec
xor
out
cmp
inc
faddl
aam
js
xchg
inc
lret
imul
shr
pop
pop
icebp
mov
sbbl
ret
jecxz
mov
mov
insb
lds
enter
test
xchg
ss
lret
cmpsb
cltd
sbb
cwtl
dec
je
loop
iret
push
mov
fstpl
xor
ja
aad
aas
and
out
inc
das
loopne
loope
iret
mov
stos
adc
jb
arpl
inc
and
in
push
cmpsb
sub
mov
jge
mov
xchg
xchg
jl
xlat
lahf
xor
or
in
lea
push
adc
insb
xor
pop
call
mov
movzwl
stc
mov
xchg
mov
pop
ret
jg
imul
xchg
popa
cmp
subb
dec
mov
fiaddl
jae
out
cmp
aaa
sbb
or
sbb
xor
or
gs
push
lret
in
push
mov
movsb
mov
rolb
xor
mov
lods
pop
or
dec
cmp
negl
roll
sub
fxch
pushf
sub
mov
nop
and
fst
cmp
fwait
pop
mov
add
mov
mov
in
pushf
xchg
fstpt
and
mov
pop
pop
sub
fmuls
das
mov
cmpsb
loope
rcr
cld
mov
movsb
test
icebp
outsl
pop
add
in
mov
sub
sbb
sti
test
rcrl
xor
sub
sbb
xor
mov
sub
loopne
sti
or
scas
sub
ret
push
sbb
mov
or
sbb
cmp
cmp
icebp
insl
sbb
and
jns
add
in
and
call
in
aad
mov
int3
sub
and
aad
push
xor
adc
mov
imul
adcb
loope
mov
push
jbe
mov
push
test
mov
xchg
and
cmp
mov
sub
xchg
ss
mov
daa
xchg
movsb
push
cmc
xchg
iret
dec
test
shr
mov
mov
push
push
cmp
arpl
pop
cmc
repnz
movsl
nop
and
mov
and
cmp
outsb
out
gs
mov
clc
fisubrl
lods
scas
nop
outsb
test
dec
les
cwtl
clc
sub
xor
out
cmp
loop
add
mov
dec
into
push
adc
or
fadds
mov
mov
jno
leave
aam
lea
dec
lea
movsl
fsub
push
and
mov
fsincos
stc
cmp
jno
or
test
mov
data16
xchg
xchg
enter
sahf
inc
push
cmp
push
add
popf
mov
inc
lock
pop
rcll
xor
adc
stos
mov
aaa
adc
int3
lret
jle
stos
test
adc
sbb
icebp
cmp
mov
faddp
fsubrl
cmc
mov
mov
and
arpl
in
mov
fildl
test
inc
shll
std
jbe
loopne
xor
outsb
lcall
lock
mulb
jo
add
jmp
ret
xchg
adc
out
std
jb
mov
mov
xchg
xchg
mov
sahf
adc
mov
dec
mov
push
repnz
pop
mov
or
mov
jge
and
mov
sbb
mov
cwtl
push
xor
push
mov
mov
jecxz
mov
icebp
arpl
int
lds
bound
hlt
sahf
cli
lock
sub
je
inc
dec
andl
les
jnp
mov
adc
mov
mov
add
filds
mov
mov
cmp
ds
add
shrl
fsubl
fnstenv
xchg
sub
sbb
insl
mov
fnstsw
roll
shll
jnp
xlat
lock
shr
push
test
adc
outsl
jae
loope
les
pushf
xchg
cltd
fcom
jo
es
xchg
pop
mov
sbb
je
lods
bound
inc
adc
xchg
jg
jne
std
pop
xor
push
data16
sub
cwtl
into
rcl
or
aam
push
inc
pop
dec
xchg
jns
aad
pop
in
sub
push
push
idiv
and
arpl
jbe
ficoms
pop
sub
std
add
cmp
pop
inc
mov
insb
lret
cmc
adc
or
enter
fldt
mov
outsl
pop
mov
xor
fs
out
test
xor
pushf
jge
in
sbb
sub
lods
or
add
loop
inc
jns
push
and
aas
xchg
push
in
cld
sub
mov
dec
js
mov
mov
testl
push
cwtl
xor
jmp
and
iret
add
loopne
repnz
mulb
and
testb
mov
adc
lea
stos
sub
mov
and
xor
dec
jmp
push
int3
test
out
dec
or
xchg
xor
cwtl
cltd
das
mov
std
ss
pop
cmc
test
loop
push
dec
ret
xchg
stos
ja
call
outsl
orl
stos
inc
imul
jp
and
hlt
mov
lock
jnp
add
das
cmp
and
ja
mov
push
mov
ret
mov
inc
mov
jne
mov
mov
mov
les
pop
in
pushf
bound
test
dec
or
mov
icebp
ret
adc
in
testl
sub
adc
cmpb
pop
ds
lods
sahf
adc
out
movsb
xor
stos
nop
outsb
lods
int
cmp
cld
lcall
xor
test
in
bound
sahf
mov
cmp
cmp
fidivl
shll
insl
std
pop
sub
nop
and
mov
insb
xchg
in
sar
xchg
push
addr16
daa
sbb
xor
xchg
mov
frstor
jp
dec
mov
push
pop
test
pushf
and
fucomp
mov
adc
add
ds
push
pop
cmp
fdivrs
fisttpll
in
dec
aad
pop
shl
adc
push
andl
shll
fucomp
jp
fs
and
add
jnp
iret
push
mov
enter
inc
dec
xor
mov
and
sub
outsl
enter
sbb
mov
push
inc
cmc
adc
cs
cmp
add
cmpsb
add
and
mov
lret
fcomi
dec
xchg
and
push
ficomps
testl
jl
lahf
out
popa
push
jae
mov
pop
in
mov
call
pusha
int
es
mov
inc
dec
inc
sub
test
add
cmpsl
lahf
mov
ljmp
jno
inc
jbe
fstl
push
add
inc
xchg
popf
mov
mov
repz
inc
sub
jecxz
push
je
arpl
push
int
push
inc
arpl
pop
pop
pushf
imul
decb
xor
pop
pop
sbb
jge
add
push
hlt
roll
gs
adc
sbb
jno
pop
rolb
scas
and
cli
dec
sub
push
or
imul
mov
and
shrb
push
enter
int
inc
loopne
in
imul
push
or
push
pop
mov
aad
lcall
nop
or
xlat
lods
daa
in
inc
lret
inc
into
insl
pop
loopne
fdivrs
xor
fldcw
movsl
cltd
jmp
fisttpl
sbb
fwait
pushf
je
rorl
jo
mov
daa
popa
test
and
xor
lds
imul
data16
cli
or
in
rcrb
ret
shlb
pop
jecxz
add
push
mov
out
cs
push
imul
pop
adc
add
fld
lret
jp
aas
fcomi
dec
aaa
jp
and
jge
mov
pop
jmp
mov
aad
and
test
les
imul
cltd
push
mov
rdpmc
inc
std
pushf
xorb
jmp
add
push
enter
sub
sbb
lea
sub
xchg
cmp
ljmp
xor
lret
fwait
pop
js
insb
jle
test
mov
cwtl
push
imul
cld
pop
iret
pop
lock
fidivrl
xlat
dec
addr16
gs
int3
xchg
test
sbb
setge
pop
push
in
adc
add
push
cmp
lcall
insb
mov
and
mov
jbe
loopne
add
mov
gs
pop
test
xchg
xchg
sub
and
mov
push
mov
dec
and
jo
sbb
mov
mov
mov
call
shrb
push
push
std
adc
cmpl
in
mov
rorb
inc
ret
faddl
sbb
fs
xor
dec
add
push
into
or
fstps
out
out
out
ds
in
stos
mov
xchg
fsubr
xchg
xor
adc
lret
and
inc
iret
mov
clc
pop
test
addb
shlb
mov
int3
ljmp
es
nop
dec
jl
ret
lahf
jb
lods
xor
jns
pop
push
sbb
dec
fcomps
sub
jns
pop
sub
repnz
out
inc
sub
xchg
mov
inc
call
and
or
mov
mov
popf
and
cmpsl
push
dec
jg
enter
call
sub
or
cmc
imul
icebp
mov
stc
fdivl
xor
mov
jmp
cmc
and
or
jl
out
rcrb
int
and
jae
mov
shrb
push
in
cli
shrl
stos
out
loop
mov
out
cmc
push
push
lock
int3
xchg
jp
in
psrad
ja
cmp
xor
bts
scas
inc
dec
cmc
or
xor
aas
lds
roll
mov
popa
das
ret
jge
or
popf
icebp
xchg
xor
aaa
insl
in
cmp
jo
jmp
sbb
adc
mov
adc
inc
enter
imul
and
dec
out
add
stc
cmp
dec
into
pop
js
add
xor
das
push
movsb
enter
ret
jp
daa
add
inc
std
pop
xor
or
xchg
xor
mov
mov
mov
cwtl
je
dec
or
in
data16
mov
inc
std
jnp
addr16
fidivs
outsb
ljmp
cmpsl
push
mov
add
call
stc
cmp
ja
inc
xchg
adc
shll
imul
je
mov
cmc
pop
xchg
or
shrl
push
nop
sbb
test
aam
sbb
push
and
pop
rorl
jne
in
adcb
sarb
jg
outsl
cmp
orl
lret
fistpl
cmp
mov
push
fsub
pop
mov
jbe
int3
fdivl
lret
dec
dec
or
and
enter
push
or
leave
sub
mov
nop
into
pop
xor
aaa
call
test
add
jge
xchg
scas
clc
inc
aas
repnz
pop
repnz
or
cmp
ds
and
fnstenv
jle
xchg
push
andl
push
lcall
mov
push
sub
sub
and
sti
stos
cmpsl
or
popf
cwtl
pop
arpl
aam
fucomip
xchg
pop
aaa
push
push
and
xor
mov
ret
push
pop
inc
out
repnz
adc
jae
adc
xchg
jmp
ret
or
fwait
xchg
imul
xor
sbbb
andb
pop
sub
loop
cs
push
lret
adc
mov
out
daa
daa
or
lock
or
out
cmc
sub
mov
mov
lahf
and
cmp
jno
xor
ja
add
ja
inc
outsl
cmp
sti
insb
sbb
loopne
xlat
mov
dec
imul
sub
jmp
push
mov
adc
inc
pop
jno
aam
lret
ret
mov
in
lods
mov
push
push
push
mov
sub
adc
add
push
xor
mov
xchg
ljmp
sub
or
xchg
hlt
xchg
jnp
sub
mov
ja
mov
lret
inc
or
dec
mov
in
sbb
imul
push
icebp
mov
rcr
add
sub
call
stos
in
pop
shl
call
outsl
xchg
lock
mov
push
dec
arpl
jmp
add
mov
xor
fnstcw
xchg
lcall
outsl
pop
aad
sub
hlt
repnz
jecxz
sub
lods
js
mov
mov
jnp
xchg
hlt
pop
ret
stos
sub
pop
les
icebp
leave
push
jge
sub
stc
pop
movsl
jmp
insl
inc
inc
pusha
sbb
xchg
test
jnp
stc
or
add
fdiv
ja,pn
push
sub
add
dec
sbb
aaa
mov
push
mov
mov
push
dec
pop
push
out
cwtl
push
cmp
stos
mov
mov
pop
lds
jbe
sarb
pop
rolb
add
push
xor
es
mov
ret
filds
xchg
mov
jge
inc
and
cmp
sub
push
pop
mov
data16
std
mov
popf
repz
xchg
xchg
jg
cmpsb
subb
in
pop
or
popa
push
shrb
test
jno
push
lahf
test
jmp
xchg
xchg
xor
or
mov
mov
jl
pop
inc
cmpsl
jo
or
jg
ret
sbb
stos
pop
adc
pop
enter
dec
pusha
jecxz
cli
inc
arpl
imul
out
lret
lock
fsubs
mov
push
test
adc
jb
sbb
pushf
mov
and
insb
jb
cli
pop
lret
popf
inc
cmp
add
fmuls
out
lretw
cmc
lea
mov
pop
lock
popa
gs
sbb
subb
loop
jle
inc
inc
inc
mov
push
loopne
push
sbb
enter
popf
adc
ss
inc
push
sbb
popa
popa
xchg
push
sbb
into
jg
movntps
lret
outsb
jns
fstpl
loopne
sub
aad
pop
and
pop
in
outsb
js
xor
xor
jne
push
iret
out
in
mov
jne
pop
ds
ficoml
xor
daa
push
stos
dec
je,pt
add
cmpsb
push
cmpb
nop
jp
inc
pusha
jg
pop
jb
jecxz
xchg
cmp
cld
in
shlb
ficomps
cmp
pop
pop
add
jne
scas
cmc
js
xchg
out
mov
jg
fistl
or
test
aaa
shl
push
lods
psubd
aad
faddl
fmuls
pop
jb
out
jl
aaa
imul
int3
inc
cmp
aad
test
in
out
mov
push
pushl
addr16
mov
or
shlb
scas
fwait
and
jl
mov
pushf
push
divl
push
fisubl
inc
add
xchg
mov
push
inc
push
pop
sub
mov
jg
mov
fs
cmp
es
mov
pop
sbb
pop
xchg
mov
cltd
data16
loope
insl
xchg
loopne
push
cmc
push
scas
pop
push
jns
arpl
out
xor
std
outsl
mov
and
fcoml
xorb
sahf
push
mov
sub
or
loope
sub
mov
xchg
cmp
outsb
xchg
icebp
cmp
xchg
scas
push
ss
lock
adcl
push
imul
por
mov
ljmp
sbb
jl
sbb
cmpsb
cmp
lods
push
xchg
pushf
jb
jne
insl
dec
aaa
out
sahf
or
out
inc
sub
outsb
ret
movsl
pop
mov
shlb
aaa
hlt
pop
sub
adc
stc
shl
xor
mov
test
rcl
push
pop
pop
lea
lods
xchg
mov
mov
in
jnp
mov
bound
xchg
call
rorl
subl
out
push
dec
mov
inc
mov
mov
nop
fwait
enter
cmc
jmp
xor
lods
mov
test
pop
fdivs
imul
mov
movsl
rcrl
adc
int3
ja
out
fcmovu
adc
es
push
notl
mov
test
mov
mov
je
daa
out
fstl
jb
mov
or
lea
dec
fcoms
sub
lds
mov
call
mov
insl
test
sbbb
pop
cmp
rorl
sahf
icebp
lods
and
sub
mov
xchg
mov
repnz
outsb
mov
in
ljmp
xor
mov
jp
push
mov
idivb
jae
aad
sub
dec
loopne
idivl
mov
jp
dec
sub
cmpsl
jl
push
repz
packsswb
sbb
jno
bnd
sbb
cmc
xlat
adc
xchg
fsubrs
cltd
inc
in
mov
jge
xchg
dec
je
pusha
loopne
pop
lahf
mov
cmp
int
push
pusha
ror
mov
inc
movsb
cmp
shr
inc
fmull
xchg
mov
shll
loop
pop
cmpsl
insl
push
in
xchg
aad
ss
fistpl
adc
loopne
push
ljmp
dec
scas
ja
rcl
mov
jns
jb
cmp
loopne
mov
pop
shl
cld
out
and
xchg
mov
test
clc
sub
cmp
cmp
or
mov
lea
pop
icebp
mov
dec
sub
cmpsl
inc
je
pop
ret
sbb
stos
lea
insb
xchg
imul
push
testb
roll
inc
int3
in
xor
in
scas
mov
in
push
add
pop
int
cmp
pop
inc
hlt
or
fmul
ljmp
inc
dec
push
sbb
xchg
cmpsb
dec
js
cli
dec
cmp
pop
imulb
ds
xchg
cmp
cwtl
jbe
mov
mov
mov
and
push
std
xor
dec
sub
test
mov
or
pop
xor
inc
aas
aam
mov
aad
mov
cmp
sub
sbb
addr16
dec
sbb
jbe
int3
in
jae
ljmp
mov
pusha
xchg
lock
std
dec
cmp
mov
call
xchg
jno
repz
pop
arpl
jne
ds
mov
out
pop
lods
jmp
sbbb
mov
sbb
testl
cmp
sahf
ss
inc
cmp
cli
fiaddl
xlat
lret
push
jo
mov
outsl
or
xor
sbb
jnp
mov
out
mov
fwait
inc
cmp
testl
push
mov
sahf
xchg
jns
loopne
inc
xor
int3
and
loopne
add
fwait
sub
arpl
insb
stc
call
fcmovnu
push
sbb
or
fisubs
dec
je
sti
xlat
arpl
push
push
jne
cmp
ds
outsb
xor
pop
jg
xor
daa
sub
sbbb
inc
clc
cmc
in
ret
sub
cmpl
out
and
mov
pop
loop
push
call
cli
scas
dec
cmp
jae
push
test
xor
movsb
sbb
fprem
imulb
sub
jo
jle
adc
mov
aad
in
push
adc
outsb
out
inc
dec
pop
adc
and
or
mov
aas
int3
dec
mov
or
mov
jns
dec
sub
lret
lock
sbb
imul
and
sti
or
rcrb
mov
sub
adc
adc
push
push
push
and
sbb
addr16
sub
fbstp
adc
mov
pop
and
mov
xor
adcb
sbb
mov
and
push
pop
cmpl
and
out
in
sub
sub
das
cmpsb
fildl
hlt
mov
movsl
data16
inc
xor
mov
sub
mov
push
push
xor
xchg
cs
sub
xchg
loopne
pop
popa
aaa
xchg
stos
cmp
jbe
xorb
xor
dec
xor
stos
push
popa
pop
fidivrs
ja
jb
jns
jg
add
shl
mov
inc
fsub
mov
imul
mov
movsb
cmp
inc
imul
or
out
inc
or
popa
lock
ret
xchg
mov
jecxz
cmp
cmp
cmp
leave
add
jmp
fucomip
push
push
xchg
cmp
inc
pop
pop
enter
lcall
sub
push
cmp
es
sub
scas
pushf
lret
and
ret
pop
mov
gs
jmp
xchg
repnz
push
jle
cld
lds
jbe
pop
pop
int3
pop
pop
cmp
add
xor
cmp
pop
in
mov
jp
dec
mov
adc
sti
into
mov
jge
sub
aaa
pop
pop
ret
loopew
inc
addr16
cmc
loopne
push
cltd
or
push
hlt
pop
sbb
adc
xchg
pusha
jbe
mov
dec
js
push
fnsave
sbb
leave
mov
fmul
stos
test
rorb
fistpl
mov
ja
add
mov
push
inc
inc
jmp
loope
call
je
xor
mov
cmc
pop
popl
pushf
jp
sbbb
xchg
and
push
test
and
loope
outsb
mov
out
push
fdivl
and
das
shrb
push
jp
cmpb
mov
mov
lds
fisubrl
pop
andb
orb
arpl
out
jecxz
mov
js
out
mov
mov
ja
fwait
sti
mov
sbb
jo
rcrl
fildl
pop
xor
scas
les
cli
stos
xchg
pop
in
push
or
push
mov
out
addr16
mov
push
loope
or
div
xlat
lahf
push
data16
add
popa
mov
adc
in
cmpsb
rcll
mov
jge
lods
dec
clc
fisubs
divl
jmp
push
mov
mov
sub
dec
inc
or
cmp
lret
aam
cmp
inc
into
add
rorl
sub
cltd
add
jo
insb
les
shrl
pop
out
mov
daa
es
or
addr16
push
into
lock
and
testl
or
dec
sahf
jne
nop
xchg
daa
test
dec
dec
add
outsb
dec
xchg
insb
call
jo
aam
leave
dec
ss
rorl
mov
loopne
in
mov
in
pop
call
xchg
jg
loop
shlb
fdecstp
cwtl
out
paddsw
js
pop
out
mov
push
xchg
adc
mov
dec
test
rolb
mov
adc
ret
pop
outsl
lahf
sbb
subl
and
mov
mov
jmp
aam
jo
mov
movsb
bound
mov
insb
and
pop
and
addr16
insl
cmp
xor
mov
push
fmull
pop
into
or
or
pusha
addr16
sbb
push
in
xchg
push
bound
pop
cmpsb
jp
jno
inc
mov
xchg
loope
bound
cli
inc
punpckldq
push
mov
mov
xchg
pop
loop
mov
xchg
and
mov
pop
aam
add
jnp
inc
cmp
orl
push
fs
out
daa
adc
or
fistps
iret
or
ret
stc
sub
jo
fiadds
and
mov
rcrl
dec
insb
dec
and
imul
mov
dec
sbb
adc
pop
rcl
js
cmp
aad
ljmp
into
into
clc
scas
adcb
add
popf
and
shlb
xchg
sub
jo
push
arpl
jne
test
and
pop
inc
mov
pop
std
mov
lea
shlb
dec
pop
pcmpeqb
xor
sub
nop
jae
aaa
mov
sahf
inc
or
or
add
in
dec
add
mov
bound
mov
and
mov
sbb
push
outsl
push
bsf
popf
inc
jns
mov
jge
js
jns
cmpsb
test
fsubs
popa
iret
sbb
mov
in
sbb
mov
loope
inc
sbb
das
test
mov
xorb
sahf
inc
add
xorb
bound
in
xchg
add
push
gs
mov
xchg
mov
inc
fldl
sti
dec
in
push
xor
out
cmpsl
jnp
out
xor
scas
test
dec
repz
mov
divb
scas
xchg
jb
mov
inc
or
adc
fistps
lcall
inc
call
loop
xchg
inc
pop
fmull
repnz
xchg
test
mov
adc
shll
stos
xor
test
aad
fwait
out
fsubrs
sahf
cmp
inc
jbe
hlt
sahf
cld
iret
pop
xlat
pop
scas
add
jp
mov
dec
lahf
xor
in
arpl
mov
sti
dec
roll
jge
sub
push
mov
ret
jnp
inc
adc
es
lds
mov
jo
outsl
xchg
push
flds
lret
xchg
daa
dec
or
cli
ss
cmp
enter
mov
lcall
dec
mov
outsb
repnz
push
push
pushl
push
pushf
div
popa
add
sub
xor
ja
cmc
in
mov
arpl
test
lret
hlt
jp
and
sbb
iret
and
mov
outsl
xor
outsb
cli
ret
mov
aaa
mov
fistpll
lock
jae
pop
imul
push
inc
icebp
call
mov
inc
mov
lods
mov
stos
sbb
fisubrl
cmpsl
cmp
jg
sahf
shll
jne
std
jl
pushf
in
movsb
or
and
sub
repnz
push
mov
adc
bound
jg
dec
out
imul
sub
aam
mov
aaa
inc
insb
imul
adc
sbb
adc
jecxz
or
std
or
cltd
shlb
xor
daa
dec
mov
or
dec
or
sub
cld
out
inc
sub
test
addl
push
addr16
sbb
mull
push
pop
into
ljmp
shll
push
push
mov
mov
movsl
mov
cwtl
adc
movsb
mov
mov
mov
mov
lret
xor
sbb
push
in
pop
mov
scas
xor
cmp
sbb
inc
outsl
arpl
pop
loopne
icebp
cli
mov
mov
out
mov
enter
jno
std
fs
jmp
sti
fwait
pop
xor
and
pushf
and
icebp
inc
jg
fdivs
dec
jne
loop
in
insl
sub
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
pop
mov
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
test
pop
add
add
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
rorb
add
add
add
add
and
add
adc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
sbb
movsb
inc
lcall
stos
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
push
movb
xor
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
push
mov
inc
pop
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
movl
movl
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
movl
movl
lea
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
mov
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jb
mov
mov
mov
add
cmp
jae
sub
add
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
pushl
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
lea
add
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
mov
add
mov
mov
xor
add
mov
push
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
push
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
xor
add
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
mov
mov
add
mov
mov
mov
add
andl
mov
mov
mov
mov
mov
mov
lea
mov
xor
mov
add
incl
cmpl
mov
jb
movl
movl
movl
movl
movl
movw
movb
xor
lea
mov
xor
sub
inc
mov
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
movzwl
movzwl
mov
xor
mov
xor
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
jmp
mov
xor
mov
lea
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
sub
xor
cmp
jne
xor
jmp
xor
inc
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
push
push
movl
movl
xor
inc
je
mov
xor
add
cmp
jne
jmp
mov
xor
add
mov
sub
mov
mov
xor
add
mov
add
mov
jmp
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
pushl
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
push
pushl
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
add
push
lea
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
mov
popa
test
cmc
aaa
push
shrb
dec
or
in
jns
add
repz
add
aad
addr16
rorb
inc
shll
mov
sub
sub
and
xor
push
orl
out
test
ja
enter
push
pop
leave
xor
test
cli
mov
adc
leave
inc
daa
fisttps
popa
lcall
add
shr
add
mov
cmpl
adc
xor
pop
shll
cmpsl
and
not
inc
mov
stos
pop
call
loopne
sbb
sbb
xchg
xor
popa
sub
mov
sahf
pop
into
sub
ret
dec
xor
mov
add
ret
and
sub
xchg
jmp
cmp
lahf
add
mov
jo
cmpsl
xchg
sarb
lea
mov
aam
mull
dec
xchg
decl
cmpsb
inc
insb
cmp
scas
outsl
ss
into
mov
loop
pop
pop
testb
cltd
ror
cmp
push
xchg
mov
int
je
sete
stos
fsubrp
pop
test
cmp
aam
mov
jae
andb
mov
aad
sar
xchg
hlt
mov
out
mov
mov
fs
mov
aas
xor
fwait
js
pop
xchg
das
cwtl
mov
pop
xchg
arpl
mov
fs
mov
jnp
mov
lret
scas
jle
dec
mov
in
outsb
mov
push
push
pusha
dec
enter
mov
jp
cmp
pop
push
or
shlb
pop
imul
dec
ja
loope
rclb
movsb
sbb
add
sub
adc
mov
das
and
cmp
jbe
clc
cli
loopne
mov
add
cli
stc
mov
and
jmp
xor
adc
bnd
out
lods
lods
and
and
cli
leave
jle
lahf
fsubl
fcoml
rcll
les
add
leave
mov
xchg
fisttpll
mov
pavgw
into
sbb
cmp
ljmp
add
mov
jmp
jae
aaa
loopne
aad
out
insb
xchg
sub
imul
lcall
int
loope
jp
mov
pop
adc
dec
xor
cmp
mov
xchg
cmc
push
das
mov
ret
repz
mov
xor
mov
pop
inc
sahf
mov
jl
or
dec
out
rorw
push
sub
pop
pop
push
sbb
sub
add
ss
cli
cmp
push
push
jo
xor
pop
pop
cmpl
and
lret
repnz
and
cmp
lret
push
lods
lock
xchg
pop
jp
inc
or
push
je
adc
outsb
jge
jmp
andl
out
aam
call
sub
jb
fcmovbe
push
lea
add
loope
mov
imulb
jnp
cmp
dec
push
xor
xor
add
adc
or
movsl
aas
repz
aad
add
lret
sbb
sub
sbbl
mov
cmp
xchg
arpl
jl
pop
in
mov
jmp
jae
test
xchg
adc
cmp
sahf
fcoms
mov
dec
mov
call
or
and
sub
call
mov
pop
ss
xchg
pop
in
add
inc
loopne
into
xchg
mov
and
ret
out
cs
xchg
mov
int3
fisttps
jae
vpcmpgtb
adc
lea
mov
rclb
out
cltd
pop
jo
insl
fwait
push
dec
pop
jnp
inc
sub
in
lea
clc
xor
mov
inc
adc
or
xchg
daa
faddl
adc
xor
push
xchg
fnsave
mov
cmpsl
daa
stos
pop
sbbb
push
test
sbb
fisubl
pop
pop
dec
arpl
shrb
inc
scas
js
add
fs
push
stc
in
inc
jno
les
xchg
test
test
loope
mov
arpl
dec
adc
in
pop
or
call
in
jle
jne
ja
lock
mov
rcrb
lock
push
mov
fists
add
xor
fnstcw
inc
mov
and
push
add
jl
sub
jbe
sub
dec
cltd
mov
dec
pop
loope
or
out
push
xchg
sahf
mov
jmp
fistl
xchg
cmp
psubusw
shlb
cmp
cs
add
dec
jge
sbbb
test
mov
inc
cmp
ficoml
add
add
add
push
sbbb
fistpl
cwtl
cltd
pop
dec
insb
flds
add
add
add
loop
jmp
popa
nop
ds
fld
or
dec
add
and
arpl
mov
sub
clc
clc
xchg
mov
cld
lret
icebp
cmp
push
cwtl
dec
subl
std
push
dec
mov
cmp
bound
mov
cmp
jae
mov
rolb
lock
sarb
fisubrs
pop
dec
inc
mov
unpckhps
cmp
test
insl
fs
iret
fwait
pop
sbb
cs
cmpsl
xor
scas
pop
push
lcall
lret
jb
xor
pop
add
jbe
sub
dec
jo
repnz
frstor
bound
adc
push
push
adc
dec
fcmove
or
imul
outsb
pop
inc
in
sahf
push
adc
shlb
ret
test
jge
pusha
cmp
push
and
jb
push
or
cli
cld
push
adc
xchg
cli
adc
and
jp
cld
rorl
jno
pop
dec
xchg
ljmp
pop
sub
mov
inc
fdiv
aaa
pop
enter
lret
xchg
ja
and
mov
add
mov
and
mov
cmp
mov
inc
inc
mov
scas
cltd
cs
dec
lds
out
orl
rcrb
xchg
sub
je
lret
loopne
loop
dec
mov
das
mov
xchg
pop
pop
pop
insb
xchg
scas
dec
mov
sub
es
jb
cmp
mov
cwtl
mov
repz
cwtl
xchg
mov
pop
sub
jb
inc
stos
inc
imul
push
gs
push
adc
repz
mov
nop
adc
jp
dec
pop
push
popa
push
scas
jp
add
shl
aam
pop
and
dec
in
and
es
shrb
arpl
mov
add
outsl
roll
flds
push
cltd
test
sub
dec
mov
stos
sbb
movsb
mov
push
lock
js
xchg
lea
mov
in
insb
dec
mov
push
lcall
cmpsl
push
adcl
pop
jg
repnz
dec
jo
xorl
jbe
aad
push
in
jns
and
stc
out
int
popf
andb
dec
push
outsb
push
add
push
mov
ret
inc
cmp
mov
pop
out
pop
xor
orl
inc
dec
leave
jg
push
cmpsl
pop
sbb
fmull
mov
sub
shlb
mov
ret
dec
xor
aad
sbb
icebp
mov
sub
daa
addr16
adc
sbb
mov
adc
loope
lahf
cmp
stc
pop
mov
inc
gs
push
test
lds
mulb
jo
shlb
les
insb
out
pop
daa
xor
push
data16
mov
lcall
shrb
push
push
xchg
enter
jne
cmp
test
scas
mov
jmp
push
out
fwait
xchg
cmc
adc
lret
jp
stos
jns
xchg
arpl
outsl
mov
fidivl
mov
and
test
nop
cmpl
xor
mov
xor
xchg
dec
cmpsb
or
inc
repz
imul
push
test
aas
shll
fimull
fwait
xchg
push
pop
hlt
loop
pop
int
je
out
fadds
and
mov
jp
ds
and
jp
leave
sbb
add
lcall
xlat
pusha
add
xchg
out
cmpsl
pushf
cltd
js
ljmp
clc
andl
stos
cwtl
sub
imul
add
mov
fdivr
sub
sbb
iret
cmp
jge
pop
jge
add
test
fwait
iret
cmp
cmp
test
jecxz
mov
aaa
mov
pop
mov
cmp
addl
jb
outsb
cmp
mov
push
mov
xor
stos
mov
imul
mov
and
add
cmp
inc
or
push
sbb
or
inc
insl
dec
xor
inc
std
xor
filds
and
rclb
inc
push
xchg
mov
cld
test
outsb
xchg
in
fs
xor
divl
shl
cmpsl
or
pop
sub
xchg
jae
popa
cmpsl
and
repnz
loope
ret
in
loope
jp
sub
pop
cld
jae
cmp
cmp
fnstsw
adc
out
lahf
cmp
push
xor
flds
cmp
insb
cmp
add
add
cmp
cmpsb
jg
mov
jae
inc
stos
add
add
repz
add
loope
lret
test
lcall
je
cmpsl
and
pop
pop
mov
or
pop
repnz
cli
mov
hlt
mov
inc
js
cmp
repnz
lahf
rol
clc
sub
push
sti
and
sub
les
pop
ja
jne
cmp
add
icebp
loop
dec
mov
iret
stos
inc
mov
cmp
push
cltd
cmp
cmpsb
fucomip
mov
push
or
pop
pop
pusha
pop
pop
jbe
adc
lcall
mov
mov
aam
jmp
or
pop
pop
sahf
sarb
jo
dec
mov
out
and
or
je
pushf
test
mov
aas
lret
inc
stos
sbb
mov
sbb
out
scas
inc
shlb
dec
mov
mov
adc
cmp
pop
out
adc
or
cli
arpl
xchg
push
outsl
pusha
xlat
insb
pop
and
jbe
sbb
je
push
fldl
mov
lcall
mov
xor
jl
mov
cmp
sub
shlb
aad
mov
sahf
pop
and
fcoml
insl
and
jae
pop
jo
lods
mov
jo
cmpsb
lea
xor
cmp
lods
inc
aaa
js
arpl
push
ja
sub
pusha
mov
jne
pushf
aad
into
add
pop
push
xchg
lds
jbe
pop
out
dec
loopne
addr16
fwait
xchg
daa
lods
xor
pop
mov
bound
sbbb
dec
out
push
mov
sub
push
pop
pop
mov
mov
mov
jmp
xor
fidivl
cmp
lcall
sahf
lcall
out
inc
aaa
insb
mov
lods
test
pop
enter
nop
pop
xchg
fchs
ds
dec
movsl
push
lahf
in
xor
lods
adc
inc
push
lcall
fs
js
jnp
fisubrl
insl
ss
sahf
cmpsl
sbb
je
adc
jl
rcrl
pop
add
rcl
rol
xchg
push
pop
dec
jne
push
addr16
dec
sub
jnp
mov
mov
xor
mov
fwait
sbb
mov
fmuls
scas
lods
scas
enter
shr
jns
mov
sbb
repz
icebp
data16
jns
out
andb
push
cmp
movsb
cmp
pop
repnz
jmp
jl
jbe
subl
dec
dec
aam
outsb
jl
add
dec
push
sbb
add
and
mov
arpl
push
push
xor
xchg
adc
and
add
cmpsb
sbbl
xor
and
repz
std
mov
fisttpll
push
dec
test
les
pop
mov
stos
push
jle
rcrb
insl
mov
out
cli
int3
xor
iret
and
mov
add
push
into
cs
subb
mov
ss
or
lea
xor
outsl
mov
sbb
insl
nop
sarl
dec
icebp
jb
push
repz
ds
sar
pop
out
loope
jno
nop
cmp
les
imul
jg
inc
xlat
add
jo
xchg
js
pop
lea
xchg
std
test
aam
cmp
cli
add
cmpsl
jl
xchg
xor
fnsave
subl
xchg
lds
xchg
pushl
push
lret
or
lcall
or
repnz
jbe
or
leave
ja
add
xchg
das
ds
js,pn
push
mov
dec
xor
int
rcrb
int3
outsl
push
inc
mov
repnz
xchg
xchg
push
mov
cltd
les
pop
test
push
pop
add
mov
mov
iret
or
pop
popl
sub
out
test
aaa
or
fcomip
dec
inc
nop
and
add
xchg
add
push
in
jae
in
sub
xor
cmp
push
sbb
mov
scas
fstpt
daa
mov
mov
fdivr
mov
fstpl
sub
dec
push
int
mov
jae
test
cli
lahf
dec
fisubrs
pop
and
shlb
cmpsb
xchg
fld
adc
insb
call
dec
add
pop
jmp
mov
addr16
xchg
and
cmp
jge
stos
fdivl
in
shll
push
int
xchg
sub
mov
fisubl
stos
push
bound
fnsave
mov
gs
xchg
pop
sub
pop
dec
in
addr16
jmp
fldt
adc
push
xorl
dec
xor
add
pminsw
idiv
repz
lret
fs
jo
jecxz
add
add
add
xor
mov
push
mov
movsb
lcall
mov
pop
dec
cwtl
fs
add
ficoml
daa
dec
dec
daa
sbb
push
daa
push
daa
mov
std
fstps
aam
mov
dec
mov
pop
loop
lods
xchg
inc
jbe
mov
aam
pop
xor
xchg
repnz
sbb
pop
xor
into
repnz
lcall
xchg
je
sbbl
lods
jns
cltd
xchg
std
sbb
imul
lahf
mov
xchg
jb
lcall
sbb
mov
add
stos
ljmp
sahf
inc
pop
pop
or
push
dec
cs
jle
sahf
arpl
or
lds
in
ds
sbb
cmp
aas
addr16
sar
add
les
mov
fcoms
inc
push
jp
sub
ljmp
push
jne
add
clc
add
arpl
mov
xchg
mov
push
imul
clc
mov
movsl
incl
ja
xor
xchg
push
push
sub
and
adc
sbb
pop
in
js
mov
pop
aam
and
aad
arpl
push
rorl
outsb
dec
fistpll
pusha
lret
xor
xor
addr16
xchg
jae
push
inc
ds
into
mov
xchg
and
lret
ficoml
sarl
in
add
aas
data16
mov
in
inc
fs
sbb
xor
lret
jns
mov
cmp
mov
es
dec
xor
in
add
push
or
sub
or
lods
mov
mov
mov
dec
dec
les
mov
iret
pop
bound
dec
xchg
push
pop
xor
and
out
movsl
arpl
jge
lock
pop
jp
subl
xchg
out
in
cmp
ds
gs
sbb
xchg
jge
jnp
mov
arpl
xchg
cmp
add
cmc
lret
test
or
stc
cmp
xor
inc
int
xchg
or
dec
pop
movsl
jnp
jns
jle
insb
add
loop
inc
and
xchg
jge
cmpsb
push
add
adc
pop
pop
stos
test
mov
jb
mov
adc
addr16
and
lods
fsubrl
jge
outsb
push
fmul
sub
ss
mov
pusha
sub
xchg
mov
shrb
jno
push
sbb
jmp
bnd
jmp
mov
rcr
jl
mov
sub
ja
lods
sar
pop
testb
imul
ljmp
hlt
sub
scas
mov
fs
cmp
inc
sub
ficoms
std
repnz
xchg
and
cli
ja
insb
push
ja
int
pusha
push
outsl
mov
lcall
cwtl
mov
inc
mov
mov
nop
lret
adc
cmp
xor
cli
or
sbb
dec
push
testb
loopne
xchg
out
cmpsb
repnz
adc
jmp
and
xlat
clc
push
mov
dec
sub
cmpb
popl
add
addr16
mov
dec
movsl
xchg
daa
or
xchg
inc
ret
sub
cmp
inc
sbbb
jnp
mov
pop
pop
daa
ljmp
jl
sub
adc
and
jecxz
inc
pop
and
popf
mov
rcr
inc
xor
lds
mov
jmp
mov
icebp
push
loop
repz
inc
inc
pop
and
ss
lea
andb
ror
inc
jne
ds
pop
out
adc
add
xchg
or
or
jmp
dec
cld
sbb
push
pop
and
ljmp
pop
aaa
iret
mov
nop
or
mov
out
js
or
mov
dec
stc
pop
fbstp
add
cltd
shr
mov
fadds
arpl
mov
std
cli
add
lcall
sbb
ljmp
jae
xchg
mov
cmp
call
data16
mov
push
ret
cld
movsl
xchg
mov
les
test
cs
test
mov
test
mov
lea
scas
stos
test
and
int3
xchg
les
out
es
scas
mov
jl
xchg
sarl
push
mov
ss
pop
lods
scas
lahf
sar
int3
add
add
add
xchg
lret
jnp
sarl
test
add
repz
add
pop
movsl
fdivl
call
cmpsl
fistps
lret
xchg
fsubrs
mov
jg
dec
adc
filds
ds
sbb
outsb
add
mov
xchg
in
sarb
ljmp
add
loope
push
rcll
rolb
mov
jge
hlt
add
sub
inc
repz
cwtl
and
ja
loop
fadd
add
adc
scas
sbb
insl
in
inc
inc
adc
mov
cltd
lahf
ret
mov
lods
push
popf
std
iret
xchg
cltd
leave
push
insb
cli
movsb
sbb
movsl
push
push
jns
adc
addr16
imul
popa
enter
jae
sbb
mov
lds
adc
dec
stos
ficoms
mov
ljmp
or
inc
mov
cmpb
ret
xor
dec
mov
xchg
sbb
cmp
inc
arpl
std
imul
dec
lret
loop
or
add
repz
in
std
pop
xor
cmc
in
mov
or
xchg
xchg
lods
out
mov
xchg
jmp
sti
push
pop
adc
jno
push
and
pop
xor
shl
mov
adc
push
enter
imul
inc
dec
lcall
mov
inc
aad
sbb
jnp
es
mov
and
jmp
mov
add
cmp
add
sub
sbb
mov
outsb
popf
dec
sbb
shr
pop
ret
pop
xor
cltd
das
or
adc
rol
jge
or
push
leave
add
stc
cmp
stc
mov
js
mov
pop
out
push
xchg
mov
inc
aam
test
mov
sub
push
pop
adc
mov
or
dec
or
push
push
loopne
jno
adc
cld
sahf
inc
push
dec
ret
xor
sti
xor
xchg
xor
push
or
xlat
repz
out
scas
jmp
fildll
ljmp
and
sbb
ss
add
xchg
in
mov
jno
je
sbb
or
shr
fbld
dec
mov
pushf
dec
lods
fdivs
lcall
push
fisubl
add
mov
popl
mov
and
inc
xchg
andl
ficoms
and
push
loope
shrb
cmp
dec
xchg
or
jg
push
stc
cmp
scas
dec
xchg
push
enter
aad
dec
pop
fwait
pop
mov
sti
sbb
loopne
rol
jne
add
ficomps
mov
mov
xchg
out
data16
stc
es
fmuls
and
or
repz
dec
test
ficomps
mov
ss
inc
test
or
pusha
das
fsub
jo
mov
pop
test
insl
fcompp
iret
out
push
push
pop
add
pop
movsb
dec
aam
jmp
int3
outsl
pop
enter
fnstenv
add
xchg
scas
xchg
mov
or
adc
jae
movsl
call
das
cmpsb
xor
ror
ljmp
int3
adc
out
in
into
xchg
lea
push
repnz
pop
sub
call
mov
fwait
lahf
fsubs
loopne
dec
pop
insl
inc
data16
dec
mov
dec
pop
lret
arpl
cmp
popa
push
mov
jo
xor
or
insb
icebp
mov
in
cmpsb
mov
or
sub
adc
pop
cmp
lret
ds
inc
xor
xor
inc
push
adcb
mov
out
addr16
push
popf
push
out
sbb
repnz
cmpsl
mov
lahf
mov
sbb
push
addr16
sub
and
mov
sbb
jle
aas
imul
add
cmp
xchg
add
pop
lods
int3
inc
xor
or
pop
pop
cs
inc
int
pop
xor
aaa
pop
loop
sbb
hlt
ret
testb
lods
mov
xchg
inc
jae
mov
mov
clc
jmp
add
dec
push
sub
out
adc
loop
push
cmp
sbb
sub
test
add
sbb
jge
jecxz
push
xor
jb
fimull
sbb
lds
push
push
lret
in
pop
movsl
test
pop
shr
mov
jle
pop
push
push
lcall
add
add
pop
test
adc
and
in
add
repz
add
sti
jbe
sbb
jecxz
push
dec
cmpsb
shll
mov
shrb
mov
sub
sub
mov
dec
imul
add
push
sahf
add
movsb
scas
in
outsl
and
sbbl
inc
or
dec
cmp
test
out
mov
push
mov
cmp
xor
jl
add
xchg
xchg
cmp
repz
push
jo
jmp
jg
xchg
and
cmp
shll
xchg
mov
test
adc
movsb
stc
in
aam
inc
xor
stc
cwtl
mov
movsl
push
xchg
dec
in
xlat
in
or
int3
sahf
sbb
xchg
mov
bound
bound
arpl
outsb
fiaddl
sbb
jb
fmuls
fisubrs
jns
ja
out
sbb
lock
shlb
js
shlb
mov
clc
or
test
dec
mov
movsb
ja
jmp
in
sbb
cli
cltd
sbb
push
add
mov
sbb
push
daa
add
rcrl
negl
inc
lret
jp
push
int3
add
sub
and
push
xorl
mov
sub
or
ficomps
pop
stos
add
ret
xchg
mov
mov
fildll
push
idivl
pusha
xchg
jmp
push
addr16
popf
jo
stc
sar
addr16
mov
mov
into
lods
mov
loopne
cmpsl
pushf
loope,pn
push
into
lret
push
mov
lods
jg
enter
pop
pop
insb
or
mov
cwtl
jecxz
out
pop
cwtl
out
into
mov
arpl
xchg
int
or
mov
and
cwtl
xchg
push
pushf
xchg
scas
mov
inc
or
divl
mov
in
push
lret
mov
scas
xchg
mov
gs
jae
cmpb
js
ret
sbb
js
in
sti
sbb
sbb
sbb
cli
addr16
test
int3
mov
pushw
push
inc
fcoms
movups
push
cmpb
xlat
jbe
adc
or
adcl
and
in
jmp
ret
ret
fidivrl
mov
fdivs
or
jne
movsb
mov
jmp
fs
into
lea
mov
push
sub
mov
scas
mov
call
in
js
or
cmc
frstor
in
iret
test
xorl
out
adc
mov
mov
jge
or
scas
popa
cmp
push
mov
arpl
test
sbbb
hlt
pop
cmp
sub
add
mov
cmc
mov
xchg
ret
add
loop
dec
inc
sbbl
mov
add
fbstp
or
xchg
jns
push
cmp
adc
pextrw
dec
xor
outsl
cmpsb
mov
int3
xor
jo
cwtl
jae
pop
lcall
pop
mov
mov
lret
add
cltd
sbb
mov
dec
or
fldl
mov
test
inc
test
push
out
jnp
mov
xchg
dec
ret
enter
stos
and
ret
sti
lods
loop
scas
das
pop
out
add
loope
jecxz
rolb
test
xor
daa
shl
jp
and
je
fdivr
push
inc
mov
andb
or
mov
or
pushf
cmp
test
xor
je
mov
sub
fwait
lods
cmp
cmp
les
arpl
and
ds
mov
fisubrl
sbb
or
pop
ljmp
dec
int3
xlat
push
scas
cmp
stc
jecxz
add
fst
andb
fwait
movsl
outsb
in
mov
cld
in
cmp
rcrb
jmp
lds
mov
mov
jno
ja
mov
jnp
jns
mov
add
cmp
icebp
mov
andl
rol
sub
lods
mov
jg
mov
out
or
fimull
stc
push
in
test
fbstp
sti
ljmp
adcb
xor
dec
repnz
lret
pusha
loop
insb
push
out
or
jo
sub
push
jge
addr16
or
mov
add
js
repnz
dec
xchg
jl
adc
aaa
out
sbb
add
add
add
dec
lcall
adc
lret
sahf
xlat
sub
add
repz
add
adc
cmp
sbb
and
or
xor
out
ja
ret
cs
jp
jg
sub
in
pop
js
cmp
add
js
cmp
addr16
imul
mov
sub
xlat
rcrl
lcall
xor
push
div
jmp
mov
jge
mov
add
fcomip
mov
push
jl
xor
test
lret
jbe
call
arpl
sti
inc
out
pop
xchg
mov
add
gs
jo
dec
jmp
ja
mov
inc
sub
xchg
cmpsl
cmp
rorl
mov
pop
lods
clc
mov
dec
dec
and
dec
imul
out
cmpsb
scas
push
mov
shll
ret
in
pusha
ja
sub
out
int3
in
inc
jnp
dec
sub
or
int
je,pn
out
arpl
ficompl
cmp
push
into
or
into
pop
push
cs
push
xchg
insl
pop
leave
cmp
loope
pusha
stos
dec
jnp
stc
lods
jmp
inc
add
and
dec
stos
test
jno
cs
popa
inc
jno
gs
jbe
push
nop
lods
stos
lock
addr16
cmc
dec
scas
fbld
lret
cld
jle
adc
xor
lahf
addr16
fildll
outsb
sub
daa
add
loopne
cmp
sub
jbe
lcall
inc
test
or
cmp
inc
repnz
test
pushf
es
or
mov
and
push
lea
jg
jno
fnstenv
loopne
outsl
in
ljmp
stc
iret
sahf
pop
jne
cmpl
push
or
sti
mov
outsl
jecxz
test
out
dec
mov
daa
dec
daa
push
jbe
sti
mov
int
push
mov
add
mov
sbb
inc
push
rorb
aad
jmp
mov
js
xor
pop
cld
stc
and
add
in
add
jnp
mov
push
sbb
loope
or
sub
xchg
jb
outsb
or
push
mov
arpl
ja
mov
movsb
mov
jge
fcmovnbe
repz
jns
sub
pop
in
push
pop
dec
sub
fisttps
add
add
add
sbbl
lfs
shlb
push
fildl
add
daa
mov
hlt
pop
sbb
jmp
jo
in
loop
cmp
xchg
inc
mov
cmp
and
fisttpll
pop
dec
dec
daa
jg
ret
or
das
xchg
rcrb
jge
xchg
sahf
sarl
aaa
adc
loope
jecxz
in
test
dec
int
jmp
adc
scas
shll
subl
sbb
test
ss
push
adc
or
inc
dec
jg
jmp
jg
xor
dec
xor
push
inc
jle
mov
lods
sub
adc
inc
repz
test
cmp
inc
sub
rorb
insb
subl
aam
adc
into
sbbl
psraw
dec
cmpsl
jl
ljmp
sbb
je
pop
jle
sbb
imul
fidivl
leave
dec
outsb
int3
dec
in
mov
inc
loop
call
mov
pop
sub
xor
jecxz
mov
jl
in
imul
shll
sbb
add
jns
std
inc
push
popa
xchg
adc
paddsb
aaa
and
add
aad
jge
leave
sbb
pop
stos
je
xlat
and
sbbb
cmp
xchg
mov
outsl
or
or
sbb
mov
jmp
xor
movsb
sbb
pop
in
sbb
inc
fcomps
and
or
hlt
xor
mov
add
test
mov
cmpsb
sbb
push
jae
insb
mov
xchg
repz
fs
imul
addr16
lods
lds
cmp
mov
mov
mov
js
jns
add
dec
or
push
lcall
and
lods
mov
dec
and
sbb
jl
data16
and
fcoms
adc
rclb
mov
adc
js
jns
and
cmc
push
xlat
insb
push
insb
cmpsl
shrl
fst
clc
dec
or
xor
or
pop
mov
sbb
fadds
enter
and
mov
mov
sbb
sbb
mov
fnsave
data16
and
test
daa
mov
push
mov
cmpsb
lahf
inc
inc
or
add
es
jno
cmc
divl
mov
mov
repz
add
adc
push
push
hlt
mov
jmp
cmp
cmpsb
push
push
stc
cli
push
rcrb
cli
and
dec
mov
mov
js
mov
rcll
movsb
clc
jg
mov
xor
cmp
adc
push
push
xchg
pop
xchg
push
push
sahf
cli
dec
pop
push
push
fwait
enter
mov
sub
add
mov
dec
mov
sub
cwtl
mov
xchg
lea
ss
cmp
mov
js
leave
ret
cltd
fldt
pop
pushf
icebp
mov
bound
adc
lahf
shl
or
enter
dec
sbb
mov
ror
stos
lret
jae
pop
jno
add
sbb
jae
xchg
cmpsb
mov
dec
mov
jl
inc
sub
mov
je
aad
sbb
sub
xor
mov
leave
sti
out
pushf
mov
dec
data16
jnp
push
dec
xchg
mov
jmp
mov
cld
jecxz
mov
int
xchg
scas
mov
shl
loopne
outsb
jecxz
out
jmp
or
mov
mov
and
sar
data16
adc
ja
inc
pop
out
add
mov
sub
mov
push
add
xchg
fstpl
xor
lods
or
sbb
pop
sti
xchg
clc
stos
cmpsl
dec
out
mov
pop
sub
adc
mov
xchg
xchg
outsb
sub
cwtl
add
out
test
hlt
xor
out
js
leave
ds
popa
and
imul
xor
cmp
or
mov
cmp
jne
pop
cmpsl
inc
mov
add
pop
push
xor
rcl
leave
out
scas
ja
sub
call
sub
rcrl
xor
xchg
jmp
fldcw
stos
sub
xor
nop
mov
inc
add
sbb
je
sarb
enter
out
adc
xchg
stos
mov
pop
cwtl
mov
mov
mov
inc
adc
dec
xchg
push
push
sub
ja
jnp
mov
add
xchg
pusha
pop
push
xor
mov
sbb
shrb
or
cmp
sbbl
test
pop
mov
dec
add
jo
lods
xchg
loop
sub
jo
mov
popa
lret
mov
jne
jl
ucomiss
jge
filds
pop
insl
test
scas
mov
xchg
mov
aam
pop
cmp
scas
cltd
fidivrl
jne
mov
js
scas
mov
add
adc
test
sub
outsb
repnz
mov
jb
cli
push
es
xlat
scas
cli
shlb
mov
lahf
push
aad
sbb
es
pop
jmp
shlb
int3
test
xchg
xor
test
fmuls
xor
cmp
add
jl
dec
in
aad
clc
enter
int3
inc
cmpb
pop
jne
sbb
daa
adc
in
push
mov
stos
rcrl
xchg
add
lods
xor
lret
daa
and
mov
sub
fwait
call
or
mov
push
pop
ficompl
sbb
dec
dec
push
push
pop
and
lods
lods
cmp
push
enter
dec
adc
inc
mov
push
xchg
and
adc
movlps
movsl
leave
sarb
xchg
cmc
leave
addl
push
xchg
cltd
push
add
inc
into
mov
adc
fcompl
aad
lds
inc
cs
mov
repnz
mov
and
sbb
imul
lods
push
pop
insb
addr16
and
out
sbb
xor
repz
mov
pop
xchg
jecxz
popa
mov
popa
outsl
mov
push
js
lcall
popa
adc
jbe
fbld
jp
push
test
mov
jb
stc
pop
xchg
pop
push
jnp
xor
aam
loope
sub
inc
packssdw
xchg
adc
js
aaa
popa
pop
mov
aaa
cli
lds
hlt
jmp
xchg
pusha
sub
lock
sbb
sarl
btr
mov
pop
cld
pop
aad
in
sub
jmp
xchg
inc
lds
rolb
jle
jb
std
adc
lcall
push
movsb
dec
outsb
fwait
pusha
lds
pop
lcall
sahf
sahf
lock
and
dec
fdiv
mov
push
sub
mov
shrb
push
xor
jp
addr16
add
fwait
scas
scas
int3
shr
lcall
inc
ss
mov
cmp
add
ret
inc
fisttps
lahf
int
push
comiss
std
cmp
cld
add
repz
add
mov
mul
mov
inc
push
adc
mov
mov
jnp
sti
adcl
sbb
cmp
sti
shll
rcl
mov
stc
mov
pushf
enter
les
lret
push
sahf
imul
jp
cmpl
mov
dec
lcall
push
inc
aaa
mov
jl
xor
pop
ror
push
adc
out
incb
dec
sub
in
xchg
sub
roll
ret
lcall
sbb
pop
sbb
xor
negb
rcrb
sbb
dec
jbe
repnz
dec
test
iret
ret
xchg
jl
mov
rol
pushf
mov
je
xchg
lea
xchg
ss
arpl
fidivrl
and
dec
adc
sahf
and
cmp
xchg
fisttps
xlat
push
pop
loope
xor
outsl
xlat
push
enter
std
adc
in
mov
mov
push
add
insb
mov
or
add
and
ljmpw
dec
lret
or
rclb
dec
in
mov
test
rcl
mov
inc
cmp
sub
mov
push
jne
add
fimull
sbb
and
mov
call
mov
sbb
test
pop
push
frstor
or
jae
adc
lea
push
push
inc
int3
shufps
lret
repz
cmp
mov
fdivs
cltd
aas
push
rcrl
addb
aam
inc
cmpsb
fbstp
xor
and
lahf
addr16
imul
mov
addr16
sbb
or
loope
sbb
hlt
push
cmp
mov
push
pop
fs
xor
pop
cli
inc
cmp
inc
or
and
inc
dec
cld
mov
cmc
push
mov
mov
jne
es
cmp
xchg
adc
push
pushf
sbb
mov
jl
lods
or
xor
gs
out
jb
push
push
inc
add
cmpsl
xchg
inc
fcoml
js
aam
mov
pop
loopne
xchg
fcmovnb
pop
scas
sar
mov
scas
xchg
pop
xchg
sub
pop
test
int
jnp
cmpsb
and
shr
inc
push
aad
and
xchg
mov
shrb
jns
push
loop
es
roll
movsb
ds
ret
mov
jecxz,pn
popf
mov
in
jb
xchg
cmc
in
push
sub
nop
push
push
jno
ds
mov
adc
aaa
mov
adc
cmpb
or
xor
insl
shlb
ljmp
shll
lds
adc
lds
enter
rcrl
push
adc
push
popa
sub
gs
jnp
push
xchg
cmp
fimuls
hlt
mulb
scas
mov
fcmovnb
push
fwait
mov
mov
subb
mov
pop
ja
lea
inc
push
int
jae
pop
call
jp
cld
xchg
dec
cmp
inc
out
and
lock
xor
pop
push
lds
xchg
push
cmp
insb
imul
loope
rorb
lret
xor
jl
arpl
aam
orl
stos
pop
mov
pop
imul
lods
push
hlt
push
xchg
xor
add
sbb
inc
cmc
fucomp
out
cmp
stc
cmpsb
inc
stos
inc
ss
shlb
clc
push
xor
xchg
into
add
adc
rorl
cmp
ds
or
and
jns
xor
xchg
mov
aam
pushf
push
lahf
push
and
xor
jno
mov
or
pushf
xor
mov
fld
jmp
adc
xor
mov
stc
push
jne
stos
js
test
adc
gs
push
inc
xchg
sbb
cld
xchg
mov
jns
dec
leave
cltd
lcallw
jge
enter
and
vpshufhw
sar
jle
movsl
mov
imul
sub
dec
testl
dec
fdivrl
incb
dec
imul
mov
mov
pusha
mov
cmp
scas
mov
cmp
in
mov
adc
addr16
std
out
sub
dec
adc
mov
je
cmp
test
cwtl
add
mov
aad
xchg
ret
pop
mov
xchg
rolb
xchg
jae
inc
sbb
gs
pop
scas
lods
mov
pop
or
xchg
sbb
push
sbb
sub
ss
outsb
mov
fs
jg
arpl
add
add
add
call
aas
popa
adc
addl
pusha
add
add
repz
add
inc
jb
pop
mov
pusha
push
mov
and
lahf
push
cmpsl
ja
jmp
mov
adc
xchg
out
jl
mov
stos
shl
lods
lds
roll
mov
daa
movsl
push
in
divb
loopne
inc
mov
push
in
sbb
out
nop
jmp
fscale
mov
aaa
mov
xchg
push
sub
bound
push
insl
test
and
pop
sti
jae
or
adc
sbb
gs
mov
mov
js
push
lahf
ja
lds
fwait
xchg
mov
xchg
fstpl
popa
call
loopne
cld
and
imul
jmp
pop
inc
pushf
add
pop
inc
adc
push
jbe
jle
std
cld
jns
inc
mov
sahf
or
aaa
nop
movsb
cli
pop
and
xor
movsl
ljmp
jno
and
fisttpll
int3
xchg
int3
test
inc
dec
out
cmc
mov
mov
push
mov
inc
push
scas
xchg
mov
inc
mov
push
sarb
mov
pop
xchg
fstps
jle
cmc
icebp
push
or
lret
push
add
fsubrl
imul
daa
mov
push
pop
mov
xchg
pop
mov
adc
mov
push
mov
repz
data16
sar
jbe
pop
push
imull
scas
cmp
out
push
test
pop
stc
or
pop
dec
enter
fwait
sub
bswap
cmpsl
adc
shrb
insl
dec
xchg
mov
enter
cmp
mov
xor
mov
mov
call
into
cmp
sti
sub
or
cltd
cmp
lods
xor
jmp
xor
mov
push
lods
sbbl
test
int
dec
or
fwait
sub
nop
jb,pn
sbb
and
pusha
test
mov
dec
nop
cmp
xor
icebp
cmp
sahf
or
cld
cmp
push
movsl
jge
sbb
lret
mov
cmp
popf
idivl
loop
and
jno
ficomps
fs
shll
mov
mov
into
push
ja
xchg
sbb
fnstsw
jno
jp
sub
shrb
lods
shll
outsb
push
or
xchg
sub
popf
jle
sub
in
int3
in
out
in
jnp
aas
mov
push
pushf
mov
add
push
jmp
pop
sbb
lods
lods
add
aad
cmpsl
cmpsl
sbb
or
pop
movb
aas
lea
jge
cmc
pop
jae
test
notb
xor
stc
lret
add
xchg
and
into
in
lods
in
inc
sub
sub
xor
fs
iret
mov
shll
mov
inc
mov
sbb
aas
shll
xchg
out
pop
mov
cmpl
pop
sbb
mov
or
inc
jmp
jno
push
add
mov
inc
cmp
mov
int3
fistpll
fcoml
or
mov
fwait
xorb
push
jnp
ja
pop
rcrb
ja
or
addr16
inc
fildl
and
mov
outsb
xchg
fdiv
xchg
repnz
sub
dec
add
or
pusha
inc
sbb
xchg
into
jg
mov
cmp
out
popf
pop
push
bound
sub
stc
pop
testl
es
pusha
fnstsw
sub
and
push
mov
and
dec
into
mov
loopne
cmp
pop
aad
and
xchg
or
dec
jg
mov
sbb
inc
and
aad
inc
and
sbb
cld
jbe
push
fimull
pop
imul
mov
cltd
inc
pushf
add
aam
cmp
push
dec
xchg
hlt
dec
push
fwait
call
mov
fnstsw
aas
and
pop
vmulpd
xor
or
cmpsl
xor
sub
aaa
lea
sarb
or
push
push
mov
js
inc
push
cmc
hlt
hlt
jge
cmp
mov
jle
testb
mov
shlb
movsb
xchg
sub
mov
xchg
cmp
shlb
pop
inc
pop
mov
cmp
xor
outsl
pushf
lock
arpl
mov
js
scas
jbe
adc
pop
push
jl
mov
sbb
adc
push
roll
pop
cmp
pop
inc
mov
and
fwait
push
outsb
out
lea
test
adc
add
add
add
sahf
insl
not
neg
mov
int
or
cmp
add
add
movsb
fwait
je
stc
lock
adc
mov
mov
cmpsb
dec
bound
adc
rcrl
sub
xchg
mov
or
scas
mov
or
dec
mov
in
add
push
dec
fildl
xchg
lods
or
pop
sbb
mull
mov
mov
mov
jl
mov
xor
fiadds
lcall
scas
sbb
dec
sub
dec
mov
fwait
lahf
call
les
dec
or
push
icebp
shl
adc
ss
pop
into
hlt
mov
mov
test
sbb
jl
jnp
imull
mov
popl
popa
push
mov
inc
stos
fwait
lcall
xlat
adc
push
sub
sbb
in
sub
cmp
scas
pop
je
xchg
daa
or
sub
scas
cld
icebp
dec
xor
pop
mov
addb
xor
jge
sub
adc
xchg
jmp
pop
xchg
movsl
adc
ljmp
adcl
inc
insl
loop
mov
fdivs
clc
das
mov
xchg
jbe
popa
jbe
push
popa
out
or
jg
and
cld
popf
loop
outsb
cwtl
dec
xchg
aad
fiadds
in
mov
scas
and
cmp
repz
pop
mov
xlat
stos
lcall
mov
pop
in
mov
push
jne
imul
fbld
leave
popa
enter
shll
fcomps
cmp
ret
lret
insb
pop
lds
mov
loopne
sub
imul
inc
dec
mov
mov
sub
stos
loopne
rorl
mov
adc
rcrl
out
push
shufps
vmread
or
sbb
in
clc
xchg
jecxz
sbb
nop
dec
jmp
std
pop
sti
fwait
mov
xchg
rcll
addr16
lret
insl
inc
dec
call
iret
lahf
xor
jle
in
xchg
mov
inc
repz
aaa
scas
or
sbb
cs
add
jns
divb
xor
adc
push
mov
mov
jg
test
cmpsb
dec
mov
inc
inc
jmp
dec
sbb
or
pushf
in
test
imul
les
mov
enter
fwait
sub
adc
sahf
dec
cmp
lret
popf
jnp
mov
or
pop
movsl
mov
mov
lods
cs
mov
xchg
inc
outsb
pop
in
sub
imul
xchg
stos
xlat
clc
dec
sar
sub
dec
sbb
sarl
or
fldcw
cmpsl
repnz
roll
lahf
sub
aaa
xchg
cmp
jbe
loopne
out
cli
icebp
cmp
and
inc
fisttps
xchg
inc
shrb
dec
rorb
add
adc
sbb
shll
adc
xchg
xchg
sub
add
fldenv
cmovl
adc
mov
cmp
pop
pushf
add
pusha
mov
xchg
in
adcb
pop
jns
mov
and
out
dec
adc
or
jns
cmp
jno
xor
ds
push
out
pop
movsl
das
fistpll
lahf
mov
mov
xor
sub
imul
sub
aas
pop
roll
ret
xor
xrelease
out
inc
xchg
jne
in
popa
jp
push
subb
aad
lock
sbb
adc
scas
es
or
mov
push
mov
mov
lahf
ljmp
xchg
iret
lods
test
lcall
pusha
pop
adc
ret
sub
rolb
xorb
hlt
add
push
mov
leave
push
adc
loope
add
lret
ffreep
mov
cmp
call
xchg
out
es
xchg
aad
cmp
dec
cmpsb
xchg
fmuls
lret
xor
cld
add
stos
push
dec
mov
lock
out
pop
and
and
shrb
cld
inc
cmpsl
stc
dec
dec
dec
jo
aaa
mov
push
bound
jns
sbb
dec
andb
and
and
cmp
pop
mov
sub
jno
cmp
in
sub
push
adc
lret
xor
sbbl
movsl
repnz
mov
outsb
add
jg
cs
int3
mov
push
jmp
jne
push
jae
inc
and
fimuls
pusha
and
fs
fwait
mov
add
add
mov
push
out
std
mov
push
jg
mov
ljmp
add
mov
xor
mov
sbb
xor
in
xchg
mov
fmuls
fs
scas
pop
repnz
mov
jb
test
xor
inc
gs
pop
push
out
ret
es
pop
scas
inc
push
jge
mov
loopne
mov
adc
push
movsb
std
jecxz
push
popa
out
orb
mov
dec
fucom
pop
out
icebp
push
jge
mov
dec
or
pushl
das
inc
mov
pop
jae
fmull
ret
pop
push
movsb
das
mov
inc
in
sbb
test
loope
movsb
xchg
test
push
and
sbb
add
xchg
test
pop
cmp
jecxz
and
stos
ficoml
and
stc
xor
xlat
or
sbb
push
jle
lds
xorb
popf
pop
adc
out
sub
mov
dec
jns
xchg
mov
xor
pop
fildl
shlb
lods
repz
lcall
test
lcall
mov
lods
dec
lcall
pop
clc
or
jno
icebp
cmp
mov
call
xchg
cmpsb
mov
mov
in
pushf
jecxz
repnz
repnz
rcrl
or
sbb
repz
lds
dec
lods
call
or
inc
sub
and
sbb
loope
data16
and
mul
mov
pop
sbb
xchg
nop
adc
xor
cmp
or
jo
sbbl
dec
aad
push
scas
fimuls
or
arpl
loope
fcompl
or
icebp
xor
movsl
data16
fldt
jne
bound
mov
xor
hlt
sarl
adc
jecxz
mov
sub
insl
dec
xchg
push
jns
xchg
call
adc
pop
xchg
sub
xchg
repnz
iret
lods
ja
xor
jmp
cmp
push
mov
pop
jae
adc
xchg
jmp
js
rclb
dec
es
xlat
xor
dec
dec
mov
maskmovq
testl
pop
jb
cmpsl
in
mov
pop
or
add
lds
adc
xchg
outsl
dec
jge
cltd
lods
jbe
addr16
push
pusha
arpl
insl
cmp
test
mov
fsub
push
pop
mov
add
out
mov
sub
sub
xlat
mov
loope
pop
xor
mov
mov
daa
sub
push
dec
inc
inc
fbstp
lock
pop
cmp
add
stos
fisubrl
or
cltd
sbb
iret
jl
lret
pop
pop
fldt
jl
xor
dec
add
js
test
cmpsb
and
in
pop
arpl
add
stos
jnp
sub
out
dec
push
scas
jae
xchg
xchg
jl
jne
xchg
mov
or
outsb
in
scas
mov
sbb
pop
outsl
fisttpll
aas
mov
mov
ret
push
or
push
xlat
mov
push
xor
cmp
int3
pop
lahf
sbb
push
or
inc
xchg
xchg
sahf
xchg
lahf
hlt
cmp
and
inc
push
popf
add
xchg
je
std
inc
xchg
mov
adc
std
xchg
ficoml
mov
jmp
sub
ja
out
sbb
push
out
mov
shll
lcall
aad
mov
jge
jns
popa
mov
sub
cmp
and
jb
mov
test
add
sbb
in
push
mov
mov
push
aaa
jmp
cltd
xchg
cmc
adc
or
in
jae
dec
mov
stos
cmp
addr16
mov
dec
jg
add
jmp
push
pop
add
xor
repz
notl
cwtl
test
jne
mov
jnp
or
xchg
dec
icebp
inc
sbb
jge
cmp
add
stc
out
gs
cmp
xchg
addr16
pop
add
mov
js
cmp
mov
into
sahf
xor
mov
and
leave
sbb
add
test
insb
dec
test
fistpl
lods
scas
push
inc
jecxz
ljmp
xor
repnz
push
es
shr
mov
cli
lds
lods
cmp
dec
aaa
scas
loope
fisttpl
mov
icebp
fdivs
ja
mov
ds
ja
fistpl
stc
mov
mov
sub
push
adc
push
sbb
mov
cs
sbb
sbb
ret
out
sahf
lahf
insb
cmp
inc
xor
loop
inc
in
mov
jle
addl
inc
push
lret
in
out
dec
add
xchg
fisttpll
add
repz
add
stc
ret
andl
jo
out
ret
imul
adc
outsl
add
out
mov
je
cmp
iret
pop
gs
sbb
pop
xchg
out
in
pop
js
sahf
loopne
add
out
inc
stc
cmp
mov
icebp
jle
out
cmp
xor
cli
andb
jb
sub
test
das
jne
and
test
push
dec
mov
popf
mov
int
jecxz
andl
cmp
fs
add
loop
jge
lods
mov
mov
ret
or
inc
cmp
xor
in
pop
pop
repnz
es
cld
in
add
in
int
or
fiaddl
cmpsb
cmc
sbb
push
adc
gs
mov
pop
shrl
arpl
cli
ljmp
dec
insb
test
sub
lods
nop
cmp
lods
shlb
inc
and
cwtl
imul
into
fsubrl
jg
mov
fsubs
inc
lods
xchg
and
mov
add
sub
xchg
add
jl
add
popa
inc
sarb
cmp
cmp
iret
nop
aam
mov
push
and
xchg
mov
inc
rclb
fsubrs
mov
push
mov
pop
push
dec
loopne
inc
jo
ret
mov
xchg
sbb
int
scas
xor
popf
clc
sti
mov
loopne
dec
or
mov
xchg
jl
test
xchg
or
mov
push
movsl
into
mov
mov
dec
sbb
pushf
std
pop
mov
mov
jge
call
je
mov
xchg
cmp
out
or
pushf
dec
out
sahf
mov
sub
pop
out
or
test
xor
ds
leave
ficomps
push
push
push
push
and
or
mov
aas
repz
int3
mov
adcl
pop
sbb
mov
adc
out
sbb
outsb
push
jno
ds
mov
into
int3
inc
jns
stos
scas
fwait
pop
xlat
cmc
pop
mov
imul
jp
js
adc
lods
fs
add
arpl
push
cmc
mov
test
mov
icebp
das
or
out
lods
icebp
dec
ret
pusha
adc
addr16
add
mov
mov
stos
fldenv
mov
ret
dec
out
into
test
fldcw
cmpsb
pop
in
xchg
pop
jns
ds
pop
mov
add
add
mulb
outsb
push
inc
mov
inc
fyl2xp1
or
icebp
adc
clc
repz
mov
sub
fcoms
sub
iret
dec
sub
mov
push
cmp
enter
add
cmp
and
xchg
xchg
lcall
and
mov
das
sbb
dec
and
pop
shl
xchg
xchg
mov
sbb
jnp
rcrl
inc
gs
pop
push
mov
inc
cmpl
cld
jns
cmpsb
cmpb
and
scas
mov
sarl
dec
sub
add
sahf
sbb
inc
cli
mov
aad
aam
sub
ret
loope
cmpl
es
fcomi
repnz
in
xor
sbb
test
xor
into
xchg
jne
push
stos
pushf
dec
mov
cwtl
arpl
mov
in
loopne
xchg
cmpsl
add
fadds
rcl
mov
insl
or
inc
sarl
cmp
loop
ja
sub
fs
in
scas
mov
bound
iret
lret
popl
into
fs
sub
dec
in
lock
jne
std
mov
add
gs
xor
out
add
daa
jge
dec
jne
sub
cmp
roll
jl
and
lret
sbb
mov
inc
sbb
push
stos
int
mov
mov
rorl
cmp
lods
hlt
push
xchg
fmuls
cmpsb
adc
xorb
inc
cmpsb
and
dec
inc
iret
and
mov
or
mov
movsl
ret
mov
push
in
shr
test
cmp
icebp
push
pop
push
cmp
push
dec
cmp
cmovnp
pop
shr
add
adc
cmp
inc
inc
in
push
cmp
cmpsl
jns
mov
xor
fs
cld
shlb
sub
jl
add
inc
inc
mov
lcall
fbld
cmc
inc
pop
movsl
and
jnp
xchg
fistpl
xchg
shll
or
xor
testl
sbb
add
add
adc
je
std
mov
ror
dec
fnop
rclb
add
add
add
lcall
mov
sbb
and
adc
in
pop
leave
pushl
push
add
xor
jl
shl
sbb
loop
mov
stos
test
adc
test
mov
ljmp
call
std
sub
cmp
test
inc
pop
fcompl
ds
shlb
mov
dec
mov
inc
das
adc
mov
outsb
sbb
xchg
es
mov
adc
dec
add
enter
ds
test
cmp
cld
movsl
jmp
jecxz
enter
and
or
sbb
xchg
sbb
pushl
mov
mov
or
inc
nop
xorl
fmull
mov
push
insb
nop
cli
scas
add
push
lahf
pusha
rorl
or
mov
jbe
push
pop
mov
aad
mov
mov
mov
movsb
sbb
or
stos
incb
mov
test
mov
inc
insb
jmp
mov
push
fmulp
out
pop
std
fsubrs
inc
pop
scas
aad
sahf
sub
mov
add
in
sub
adc
xchg
inc
push
inc
mov
jnp
mov
push
xor
int
ja
xlat
sahf
inc
pop
add
push
dec
jecxz
mov
mov
arpl
cmc
aaa
int3
pusha
mov
mov
in
cmp
adc
inc
mov
pop
js
inc
int
outsb
adc
jmp
pop
or
in
mov
out
sbb
pop
loop
sbb
dec
sbb
push
loope
adc
dec
pop
fists
iret
mov
lds
xchg
adc
popa
imulb
xor
decl
add
aad
or
jns
mov
stos
imul
enter
loope
cwtl
jge
jns,pn
push
xorb
cwtl
out
loop
jl
push
outsb
mov
call
mov
or
rcl
pop
std
movsl
repz
xlat
mov
pop
out
addr16
sbb
or
jl
pushf
inc
or
xor
cmp
dec
in
and
pop
dec
lret
arpl
add
std
pop
shr
pop
cmp
push
into
shl
mov
icebp
test
jmp
xchg
les
xor
lret
sbb
push
imul
repnz
mov
mov
inc
test
mov
leave
cmc
aaa
adc
pop
stc
test
push
push
fsts
mov
sub
int
add
ss
push
call
idivb
pusha
cld
sbb
scas
out
mov
push
fnsave
add
sahf
xor
in
lret
dec
push
mov
or
das
imul
xor
mov
lcall
cmpsl
xor
pop
jns
jecxz
add
lahf
and
xchg
push
sbb
fistpl
leave
mov
sti
or
ds
sahf
scas
xchg
iret
cmp
call
dec
pop
cmc
cmp
lods
mov
sub
mov
or
addr16
lret
add
mov
inc
push
cmpsb
jp
mov
and
popf
adc
pop
lret
fiaddl
push
outsl
mov
aaa
mov
shlb
lcall
add
and
fcomip
test
stc
jnp
enter
int3
or
data16
into
pop
inc
insl
lcall
out
scas
sub
push
iret
jno
push
mov
addl
xor
mov
shrl
scas
xor
inc
cmp
xchg
insl
ja
push
mov
icebp
cld
popa
int
xchg
xorl
push
popf
sahf
add
push
into
push
jbe
pop
xchg
sahf
xor
ret
inc
jne
xchg
mov
jnp
mov
into
out
ficoms
lock
mov
rcrl
jg
shlb
mov
mov
imul
rol
pop
ja
push
cmp
sarl
ret
inc
push
add
jge
pop
inc
jnp
imul
xorl
test
inc
cmp
hlt
lcall
subb
addl
sti
mov
dec
sbb
or
jl
or
outsb
xchg
mov
add
sbb
in
popf
dec
sub
or
sbb
dec
outsb
addr16
adc
incl
outsl
add
mov
mov
push
stos
ret
sbb
cmc
inc
mov
test
push
les
push
xor
xor
adc
pop
sub
add
add
mov
fs
lods
in
or
mov
ret
sbb
add
add
add
stc
mov
mov
fsubrs
cmpsb
inc
mov
lods
and
adc
adc
arpl
mov
fldcw
dec
inc
mov
ss
call
loope
in
lret
cwtl
jl
mov
mov
inc
jne
in
inc
dec
stos
aam
xchg
pop
stos
aam
movsl
cmp
jne
push
cmc
cltd
daa
dec
imul
scas
xorb
popf
add
mov
pusha
or
inc
or
jle
or
push
xchg
xor
repz
bound
and
stc
or
xchg
or
jne
dec
lahf
loopne
sbb
and
inc
pop
inc
lods
add
cmp
sarb
dec
inc
sub
aam
arpl
cmpl
push
pop
jno
lret
call
loopne
stc
jno
push
insb
jnp
and
aam
mov
inc
les
das
inc
pop
lcall
mov
test
gs
sbb
and
and
in
xor
outsl
inc
sub
pop
push
push
mov
pop
push
push
pop
pop
clc
hlt
das
pop
xchg
test
les
pusha
int
pusha
mov
sti
movsb
jo
hlt
dec
pop
mull
xchg
sbb
mov
mov
fstpt
shr
jp
or
push
rclb
cmp
cmp
sahf
pop
mov
outsl
lock
xchg
mov
shrl
xchg
pop
data16
push
test
jle
or
nop
xchg
outsl
push
jmp
in
mov
sarb
in
adc
mov
loope
shll
xor
scas
aad
fs
xchg
shll
ljmp
dec
insl
hlt
and
pop
xor
divl
test
das
or
mov
cmc
add
inc
mov
andb
shlb
cmp
xchg
jge
in
cltd
jns
mov
std
pop
adc
outsb
dec
jo
int
inc
ds
insb
pushf
pushf
mov
shll
clc
xor
mov
shrl
jne
mov
nop
bound
jg
xchg
jns
push
mov
loope
xchg
mov
jmp
mov
xchg
data16
iret
inc
in
fwait
push
fildl
nop
iret
dec
mov
mov
cwtl
pusha
sbb
lretw
shrb
adc
lods
lcall
imul
loop
rcl
cmp
movsb
fcomp
enter
push
ret
sub
mov
push
cmpsl
shll
mov
fisttpl
xchg
call
mov
cmp
jne
lcall
sarb
es
mov
popf
sbb
pop
push
mov
loop
inc
push
imul
loopne
outsb
push
fwait
pop
sbb
fs
fiadds
xchg
jns
aam
sarl
in
fbld
mov
push
push
lcall
fimuls
aas
ret
xlat
aaa
push
pop
das
roll
sbb
sbb
addl
sub
outsl
pop
inc
mov
push
cmp
jnp
fcompl
add
push
xchg
es
es
or
enter
jle
fwait
mov
inc
cli
cmpsl
stos
ret
cmp
jbe
les
mov
jae
cli
repz
mov
repnz
xor
jnp
mov
xchg
insb
stos
and
dec
repnz
and
xchg
jno
bswap
mov
aam
shll
cmp
mov
or
xchg
push
mov
xchg
adc
pop
and
push
dec
out
pop
xchg
mov
add
xorb
movsl
jnp
adc
sahf
fdivs
test
cmp
fildl
test
push
mov
cwtl
sbb
inc
aas
insb
adc
jmp
pop
add
adc
dec
adc
test
pusha
add
aam
clc
pop
insb
cmpsl
loope
sti
std
out
pop
or
imul
mov
sub
loopne
xor
notl
sbbb
enter
leave
icebp
ljmp
cmp
sbb
les
insl
in
xchg
mov
arpl
push
cld
addl
in
scas
in
es
dec
mov
es
push
addb
pusha
push
ror
leave
jge
hlt
jp
cmp
sbb
pop
adc
xchg
das
and
dec
jp
inc
push
mov
rolb
test
loopne
jg
lock
or
imul
fnsave
push
stos
or
or
andb
sti
call
jae
js
int
hlt
adc
lds
add
add
push
push
add
lods
test
gs
add
mov
add
repz
add
lahf
xor
xchg
adc
lcall
add
pop
mov
mov
jae
mov
aad
push
enter
xchg
jnp
sbb
mov
cmp
inc
push
dec
lea
add
mov
sub
dec
mov
ret
cwtl
divl
jmp
jnp
mov
lods
fidivl
and
mov
mov
cmp
cmp
insb
mov
sub
cli
cmp
shr
xchg
movsb
mov
cmp
sbb
imul
ds
mov
dec
call
dec
inc
sbb
cli
or
xchg
xor
lcall
int
pop
or
add
adc
mov
popa
mov
sti
out
pusha
sbb
sbb
pop
jns
imul
lds
cmp
xor
jbe
int
jmp
jo
dec
fwait
or
jl
fiadds
xchg
xor
test
lods
andl
push
out
cwtl
mov
adcl
repz
add
inc
jb
sbb
cmp
shrb
mov
jb
cwtl
aaa
jno
out
fwait
mov
push
pop
sub
jp
roll
aas
or
jno
dec
push
les
jp
cmp
repnz
dec
insl
inc
int
mov
out
mov
pop
sarb
push
std
mov
pop
jecxz
dec
imul
mov
jg
out
push
cmp
mov
cmp
mov
sub
mov
mov
mov
int3
cmp
in
loopne
stos
push
dec
sar
jmp
inc
mov
dec
scas
jmp
push
inc
or
jne
sub
aaa
hlt
jne
dec
sbb
lods
dec
das
int
push
push
cmp
test
dec
imul
inc
cwtl
dec
push
pop
push
sbb
and
clc
sbb
xor
push
repnz
mov
push
xchg
mov
leave
mov
or
sahf
mov
std
lods
mov
cmp
imulb
mov
out
cmp
das
inc
cli
fsubl
push
adc
sub
test
sbb
xchg
scas
jb
stos
loope
sbbb
dec
ret
les
xchg
clc
test
out
cli
movsl
and
dec
xchg
push
add
cld
push
jo
jecxz
aaa
sbb
mov
push
inc
sbb
divl
dec
push
jl
inc
push
cli
xchg
sarb
out
cmp
aaa
out
xchg
cwtl
pushf
sbb
int
call
adc
pop
sub
mov
mov
adc
in
lcall
or
add
int
mov
lods
mov
cmp
repz
cwtl
imul
js
ja
and
pop
pop
mov
push
hlt
mov
int
or
sbb
push
mov
push
push
jmp
loopne,pt
mov
jle
mov
mov
mov
dec
int
dec
adc
pop
adc
lcall
xchg
push
fdivrs
fmuls
adc
pop
add
test
test
inc
in
sub
into
fnstsw
xchg
lcall
sbb
jmp
and
sbb
in
imul
call
or
scas
cwtl
mov
mov
mov
xor
push
fbld
mov
push
mov
repnz
pushf
std
mov
and
notl
and
cs
mov
push
popa
cmp
fsts
add
adc
mov
ds
es
cmp
pop
mov
lods
lret
fistpl
add
mov
and
div
or
sub
mov
or
mov
and
dec
pop
cmpsb
mov
fdivr
in
mov
fnstsw
ret
sub
inc
adc
jns
jbe
or
pop
cmpsb
xchg
push
cltd
pop
mov
int3
fstpl
mov
lock
es
sub
imul
scas
push
mov
es
jb
outsl
mov
call
addr16
les
mov
mov
jns
push
popf
push
dec
cmp
sti
mov
xlat
aas
arpl
mov
out
sub
mov
lock
sbb
add
jae
ja
jg
dec
mov
or
aaa
sub
mov
add
add
dec
outsl
je
jne
pop
outsl
out
aaa
jae
movsb
addr16
fisubrl
add
add
or
out
icebp
mov
lods
pop
int3
lret
outsl
jmp
pop
push
jae
mov
pop
xlat
repz
lods
pop
jmp
scas
popa
fcompl
push
inc
push
mov
loop
cld
out
xor
scas
cltd
mov
bswap
jg
cmp
pop
push
or
adc
mov
mov
xchg
mov
or
imul
jae
ret
fldcw
push
fmuls
jecxz
mov
psubsw
shr
fisttpll
jp
in
loope
jnp
data16
enter
in
out
ds
sub
icebp
scas
adc
jae
cld
mov
and
push
inc
out
push
or
fiadds
adc
rorl
ret
clc
xchg
in
hlt
mov
popa
adc
mov
in
mov
int3
loop
pop
fs
inc
dec
pop
mov
push
cmc
push
and
call
xchg
outsl
das
fsubrl
pop
fldl
clc
cmpsb
xchg
and
das
popf
or
mov
sub
and
jno
push
popa
pop
out
add
xchg
sub
sub
cli
inc
push
xchg
int
call
and
ja
xor
mov
test
jp
mov
cmp
jmp
pop
loope
imul
mov
dec
das
insb
cmpl
xor
insb
aad
ds
test
jns
lcall
lcall
out
aad
addr16
lret
out
mov
or
lds
cld
mov
jl
hlt
lret
pop
loop
jno
mov
fyl2xp1
divb
ficomps
xor
je
mov
test
sub
mov
icebp
mov
flds
and
mov
jl
mov
test
jae
addr16
dec
dec
lods
jmp
lea
outsb
xchg
jns
sahf
xchg
call
push
mov
gs
ljmp
imul
mov
mov
mov
mov
lods
and
sbb
lds
pushf
addb
loope
lret
pop
inc
popf
subb
pop
mov
dec
jbe
cltd
negb
xchg
in
movsb
aam
shrb
sub
shrl
add
fistps
fmulp
shl
gs
test
out
push
and
negl
or
inc
popf
in
gs
mov
int3
add
pop
mov
dec
xchg
test
subl
mov
dec
mov
das
out
std
outsb
push
lret
scas
mov
xchg
add
cltd
push
fidivs
add
xchg
loope
shl
ret
xor
xchg
sbb
mov
fidivrs
dec
inc
adcb
into
push
enter
aaa
mov
lock
push
ficomps
pop
mov
ja
cmc
fwait
lods
fs
mov
int3
xor
pop
lcall
xor
jp
repz
imul
repnz
fcoml
int
sbb
cmp
xchg
cs
and
inc
loop
frstor
and
jmp
in
mov
shrb
add
insl
enter
jo
mov
repz
add
aas
in
jl
addl
mov
xor
cmp
adc
rorb
aas
push
mov
pushf
xor
pop
rclb
xchg
sbb
inc
cmp
cmc
inc
loop
and
ss
adc
sub
in
int
decl
clc
cmpsb
mov
mov
sti
insl
lods
mov
and
adc
sti
xor
scas
jge
sbb
push
dec
js
movsl
mov
cmpsl
sahf
or
or
cmpsb
jp
leave
jg
cmp
sub
sbb
jg
fisubrs
ret
ja
adc
pop
fsubs
mov
sbb
pop
sbb
push
es
cli
test
jbe
lahf
pop
sub
nop
add
ficomps
enter
or
sub
jo
loop
lret
sbb
adc
sbb
pop
dec
scas
call
adc
xchg
out
mov
jp
cmp
lahf
mov
mov
sahf
ret
pop
push
call
ficompl
adc
rcrb
push
popa
sub
jb
fwait
jge
xor
insb
jb
in
xchg
push
ffree
adc
jmp
sub
jmp
xchg
cli
sarl
xor
ret
jbe
pop
or
leave
xor
test
insl
hlt
lea
faddp
cwtl
outsb
inc
push
arpl
iret
dec
das
dec
cmpsl
push
cmovbe
lret
mov
fs
stos
push
sbb
es
cmp
xor
mov
add
add
dec
dec
ss
std
iret
cmp
cld
dec
faddl
pushf
sub
add
add
add
movsb
call
sub
push
push
js
inc
int
repnz
xchg
cs
adc
add
into
int3
xchg
in
ret
dec
lea
push
out
mov
icebp
mov
cli
mov
mov
xor
push
scas
test
lds
xchg
inc
sbb
cmpl
push
and
jg
cmp
ss
push
add
sub
scas
js
bnd
js
jl
lock
movsl
xor
icebp
xor
repz
pop
loopne
mov
loop
leave
xlat
lret
in
mov
lock
les
lret
ficoml
cmpsb
cmc
mov
push
dec
sub
jmp
bound
lret
dec
pop
loopne
lret
movsb
sub
fdivp
jl
mov
mov
hlt
test
subl
test
repnz
rclb
loope
mov
lret
test
jb
mov
push
pop
pop
mov
jmp
mov
pop
int
hlt
mov
int
test
in
das
bound
add
shlb
mov
sub
fwait
pop
gs
xchg
jp
pop
cmp
loopne
leave
mov
mov
mov
fdivp
aaa
iret
pop
andl
xchg
cmpsb
in
mov
pop
cltd
scas
push
popa
or
sbb
add
shlb
mov
jp
out
stc
cli
dec
fbstp
pop
mov
adc
call
push
cmp
imul
rol
jns
je
fwait
pop
arpl
jb
mov
sbb
sub
jno
mov
sbb
mov
mov
cld
icebp
lcall
clc
lock
pmulhuw
flds
movsl
lcall
adc
negl
fxch
dec
arpl
insl
ja
stos
fiaddl
cmove
cmp
push
jl
mov
cmpsl
addr16
jmp
xchg
clc
sbb
mov
imul
xlat
pop
js
repnz
lods
xchg
lahf
fwait
mov
jecxz
out
cld
pushf
dec
xchg
jg
iret
jg
ljmp
out
mov
sbb
and
jge
shrb
mov
movsl
mov
sbb
add
pop
push
inc
xchg
jge
or
push
mov
xor
pop
les
sbb
push
mov
rorb
pop
mov
add
push
fsubrl
adc
xchg
mov
lea
movsl
in
lock
xor
cmpsb
push
imul
adc
repnz
jns
ror
pop
mov
mov
mov
pop
add
int3
aaa
dec
dec
cld
and
jae
call
in
movsb
dec
sub
int3
cmp
or
fiaddl
in
mov
cmp
mov
pop
push
xor
adc
mov
mov
adc
mov
adc
cmp
push
and
cmp
in
out
xchg
jns
xorb
adc
insl
repz
test
jmp
sti
mov
stos
xchg
aam
xchg
add
add
mov
enter
jg,pt
push
das
pusha
dec
rorl
icebp
adcb
popf
xor
sub
ja
lock
pop
shufps
mov
call
pop
xchg
mov
xor
and
push
mov
iret
daa
cmp
test
sbb
es
sbb
jle
mov
pushf
mov
insl
in
fsts
xchg
pop
jb
loope
nop
push
mov
lods
pop
das
push
je
pop
inc
in
xchg
or
push
insb
push
and
int
insl
clc
les
sub
ror
ljmp
adc
mov
mov
or
icebp
xorl
mov
xor
xchg
add
cmpsl
push
fwait
inc
jnp
adc
ret
popf
subb
daa
sbb
adc
sar
xchg
popa
cmp
and
fsub
call
push
orb
insl
cmc
cltd
mov
shll
cltd
inc
lahf
movsl
ds
and
dec
mov
xchg
mov
sbb
int3
std
aam
push
std
add
xor
sahf
and
fidivs
mov
add
aaa
xor
xor
xchg
lods
sbb
ss
imul
pop
sub
mov
mov
enter
mov
loopne
jmp
popf
dec
sbb
imul
adc
adc
cwtl
cwtl
xor
nop
icebp
out
and
add
addl
hlt
jb
ja
mov
push
push
jge,pn
loopne
or
xchg
xor
dec
add
add
add
es
mov
jmp
fdivrp
push
dec
xlat
movsl
sub
add
or
or
sub
sti
ret
cmp
push
ret
mov
mov
mov
xchg
popf
rcrl
repz
mov
iret
out
in
rcrl
ret
stos
adc
cld
xchg
pop
push
xor
rcrb
mov
and
inc
add
push
add
dec
push
add
stos
icebp
adc
cmp
sub
or
jne
mov
adc
cwtl
ret
in
shlb
dec
test
stc
mov
mov
xchg
sti
sti
bound
arpl
xorl
aam
xchg
push
mov
ret
shll
jl
mov
pop
mov
rolb
mov
incl
or
push
jp
xchg
or
or
popf
cmp
xor
adc
sbb
xchg
mov
rolb
daa
mov
jge
adc
and
or
jp
or
jecxz
andl
dec
ror
pop
sub
into
rorl
jae
fcmovu
ret
mov
rol
cmp
ljmp
outsl
mov
xchg
jo
int3
and
mov
mov
call
lret
xor
inc
lds
mov
mov
cmc
mov
dec
addr16
pop
sub
push
lahf
mov
icebp
stc
cmp
out
sub
shlb
inc
rcrb
dec
lahf
es
mov
into
jmp
mov
lods
mov
or
pop
xor
jno
mov
ja
xchg
pop
push
add
xor
ljmp
push
out
jg
out
fldenv
jge
nop
aad
jmp
cmp
ret
xor
add
push
dec
ss
idivb
rcll
iret
jmp
imul
sub
and
int
cli
pop
and
mov
pop
test
dec
sbb
jg
sbbl
pop
clc
mov
push
and
fcoms
push
inc
ljmp
pop
shll
xor
cmp
pop
cld
clc
mov
xor
sub
int3
nop
loop
sub
cmp
xchg
int
mov
rolb
cmpsb
xchg
ljmp
testl
in
int
movsb
mov
stc
inc
xor
push
sti
sbb
in
mov
js
mov
fwait
jbe
push
lods
mov
hlt
pop
mov
adc
dec
push
lods
pop
int3
enter
pop
mov
iret
dec
ror
pushf
and
sbb
dec
jbe
rcr
pop
sub
mov
add
and
or
inc
add
inc
sbb
sub
sbb
mov
out
dec
dec
pop
mov
cs
ret
jne
pop
push
mulb
cmpsl
pop
cltd
enter
mov
insl
lcall
push
icebp
cwtl
dec
in
lret
std
mov
aad
inc
jns
sbb
push
pusha
ds
cmp
rolb
mov
scas
sbb
pop
scas
jecxz
fcmovnb
sub
pop
pop
add
cs
cmc
mov
inc
dec
xor
cmp
lret
and
out
and
rorb
or
mov
or
add
in
fs
inc
iret
mov
mov
mov
loop
mov
xor
jb
or
addr16
mov
cmp
aas
mov
add
adc
jae
ljmp
daa
mov
xchg
xchg
jne
sub
mov
mov
sbb
mov
cli
ljmp
mov
inc
jbe
push
fs
xchg
shll
loope
insb
jmp
or
push
mov
or
xchg
sbb
out
mov
call
fxch
nop
scas
shlb
cmp
xorb
or
jg
dec
orl
int
fbld
add
jmp
decl
insb
mov
test
jbe
stc
data16
xchg
mov
in
cmp
push
pusha
stc
inc
in
adc
insb
inc
xchg
push
sbb
sub
int
and
and
mov
scas
xchg
cld
pop
inc
ja
fs
out
in
loopne
out
inc
pop
jo
and
sub
rcll
sub
fisubs
push
out
gs
push
test
inc
je
cs
mov
push
bound
mov
out
add
jmp
insb
jne
or
lds
ja
hlt
jge
jno
add
add
add
aaa
sti
addr16
out
fidivs
aas
movsl
sbbl
add
add
mov
stc
daa
cs
daa
mov
mov
push
xorb
add
cmp
test
add
aaa
push
jmp
imul
js
adc
test
lahf
cli
fiadds
xor
adc
rol
js
cmpsb
enter
xchg
loop
push
or
rcrb
mov
stos
xor
cmp
leave
lea
rclb
and
lret
ret
jecxz
or
rcl
lock
lahf
sub
daa
fs
mov
out
jb
test
xchg
shrb
mov
aam
adc
movsb
jne
loop
jno
in
sub
lea
cmc
ret
push
ds
ljmp
rcrb
popa
insb
test
dec
data16
mov
arpl
sub
mov
push
cmp
push
mov
fisubl
icebp
sbb
imul
outsb
mov
jnp
std
mov
inc
and
std
pusha
lods
cltd
pop
outsl
and
int3
xchg
ss
dec
ds
into
xor
pop
and
je
into
jne
fs
mov
push
add
dec
test
mov
inc
sbb
mov
xchg
pop
cltd
fdivs
test
pop
pop
jnp
fbld
adc
lahf
incl
shlb
adc
cs
cmc
sti
push
icebp
leave
add
scas
enter
popa
mov
push
or
mov
or
push
sbb
jp
and
jno
jge
cmp
jg
pop
jns
lcall
imul
fmull
div
mov
out
jae
mov
dec
cmp
insl
cmpsl
out
lds
test
jp
jmp
sahf
add
sbb
fiadds
mov
inc
fistpll
pop
xlat
mov
nop
mov
xlat
loop
pop
popa
ss
outsl
mov
cmpsb
sub
push
push
shlb
fs
cli
xor
fdivrl
lods
and
scas
sbb
mov
xlat
leave
loopne
std
loope
movsl
push
sbb
addr16
in
sub
shr
jae
fildll
sbb
addb
into
mov
sub
pop
mov
fimuls
cmpsl
test
rcrl
mov
or
mov
jmp
or
sbb
xchg
jae
xor
in
push
add
fdivp
stc
push
jno
jne
and
jo
pop
out
mov
js
ret
adc
mov
fwait
fwait
in
sbb
xchg
mov
mov
push
sub
inc
inc
insl
cltd
lock
and
and
pushf
pop
inc
xchg
mov
mov
or
movsb
or
inc
test
int3
xor
sub
push
aaa
loopne
negl
ficomps
stos
adc
push
rorb
sub
push
dec
jne
outsl
xor
adc
mov
inc
popf
in
inc
cmpsb
ss
sti
add
add
decl
cld
fsubs
xor
fisttps
inc
fisttpl
cmp
cmp
xchg
or
xor
ret
pop
jmp
cld
in
les
jmp
out
daa
enter
fidivrl
dec
repnz
and
into
pusha
xor
mov
fld
jbe
push
fisttpll
test
subb
inc
cwtl
xor
or
sbb
out
xchg
or
and
pushf
cmp
inc
add
pop
add
test
xchg
aaa
add
lods
pop
insb
pop
call
xchg
mov
xor
pusha
xor
pop
mov
adc
faddp
in
jg
adc
scas
fwait
jnp
push
fisttpl
iret
sbb
or
loopne
icebp
mov
jmp
dec
jecxz
pop
dec
testb
lods
lods
and
in
adc
adcb
sbb
mov
into
mov
les
arpl
sbb
imul
scas
xor
push
cwtl
call
xor
cmp
je
jle
jmp
lods
rcrl
movb
es
cmp
clc
enter
adc
xor
fimuls
mov
xor
fsubl
xchg
xor
pop
adc
push
in
mov
sahf
loop
cmp
inc
test
sbb
popa
test
lahf
inc
adc
xchg
pop
repz
push
pop
mov
sub
testb
loope
pop
add
outsb
insb
add
cmp
mov
jbe
bound
fildl
add
add
out
sbb
repz
pop
repnz
add
pushf
rcl
xor
xchg
sbb
or
push
fistps
ja
into
pop
add
sbb
test
sub
sbb
in
orl
mov
ja
repnz
gs
sub
mov
xor
add
test
sti
adc
inc
test
push
sti
xchg
arpl
add
mov
push
imul
imul
shll
mov
dec
and
fisttpll
inc
mov
mov
xchg
scas
cmpsl
test
jmp
xor
push
fisubl
sarl
aaa
and
sti
jno
test
push
repnz
add
les
ds
sub
inc
xchg
in
jno
fs
addb
jmp
xor
mov
jl
test
dec
jno
push
test
add
adc
push
mov
sub
and
dec
push
or
push
div
inc
call
cld
or
push
mov
add
mov
outsb
loope
cmp
mov
xchg
or
popa
loopne
mov
jo
cmp
int3
mov
stos
push
pop
add
mov
mov
int
je
int
mov
ss
ja
mov
out
inc
test
xchg
push
jge
dec
lahf
pop
int3
jo
and
mov
jg
pop
popl
cmp
pop
add
popf
add
sahf
aas
inc
pop
xchg
inc
cmpsl
mov
jnp
testb
cmpsb
dec
mov
or
cmc
sbb
notb
mov
dec
sub
movsb
push
addr16
dec
sub
cmpl
stc
jecxz
mov
sub
je
enter
adc
or
rclb
sbb
adc
sarl
sbb
sub
cs
sti
inc
xor
sbb
mov
add
mov
data16
in
aas
jbe
inc
loop
sbb
shrb
pop
call
je
fcmovnb
mov
and
scas
sub
add
lds
pop
pushf
push
outsl
aad
aam
mov
adc
jp
test
push
stc
and
sub
out
addl
and
rcl
dec
scas
xchg
call
mov
ret
or
mov
les
leave
test
pop
sub
mov
popa
aaa
xor
mov
scas
sarb
mov
jmp
das
mov
cmp
pop
mov
mov
lods
xchg
sti
andb
ret
movsb
and
cmp
or
mov
imulb
outsb
mov
ljmp
ss
bound
sti
ljmp
inc
dec
pop
adc
test
jle
movsb
push
shrl
xchg
push
sbb
out
int3
cli
cmp
jecxz
nop
js
cld
xlat
add
test
gs
fwait
mulb
and
and
movsl
cld
push
into
jnp
mov
pop
pop
dec
push
mov
in
in
mov
inc
push
rclb
xlat
das
repz
cld
int
xor
sbb
fsubr
push
or
data16
push
aas
aam
adc
aaa
mov
push
iret
call
cmp
cmpb
mov
std
jae
jecxz
push
dec
mov
bswap
sarb
jl
add
sarb
iret
push
mov
ret
mov
stos
jnp
into
pop
bound
lea
inc
jl
sub
fldl
adc
mov
lock
push
lret
popl
dec
xchg
jecxz
pop
push
pop
rclb
aas
xor
arpl
sbb
test
lods
sub
fistl
xchg
fimull
test
or
inc
add
inc
or
adc
movsb
jno
movsl
sub
sbb
mov
jno
cwtl
cmp
dec
cmp
lock
gs
sbb
xchg
shll
add
adc
cmovg
adc
cmpsl
or
mov
mov
cmc
sub
cli
pop
cmc
int3
movsb
pushf
loopne
subb
bound
mov
add
xchg
mov
jg
xor
icebp
dec
cmpsl
pop
push
imul
or
imul
xchg
mov
mov
mov
xchg
pop
sbb
mov
xchg
out
es
add
mov
out
out
mov
fldenv
add
repz
add
lret
js
dec
int3
xlat
xadd
repnz
xchg
jbe
ret
mov
inc
adc
push
sbb
lret
adc
cmp
sub
mov
addr16
dec
and
int
inc
jo
pop
or
ljmp
mov
xor
pusha
or
int
das
push
popa
outsb
stos
aas
push
cmp
insl
cmpsl
pop
movsb
aam
cmp
shlb
pop
idivb
and
fisttpl
stos
xchg
mov
gs
mov
lods
xchg
in
cmp
cmc
cmpsl
xchg
adc
pusha
stos
leave
out
data16
test
lods
movsb
in
cwtl
adc
addr16
movb
rol
out
xchg
repz
pusha
lods
xchg
mov
xchg
inc
pop
xchg
pop
xor
jg
jne
mov
hlt
dec
daa
cltd
and
jo
mov
enter
scas
or
adc
daa
test
pushf
sbb
aam
scas
lret
cmpsb
sub
or
movsb
in
and
sbbl
xlat
pop
adc
pop
or
cli
cmp
sbbb
cmp
insl
je
mov
dec
pop
inc
lcall
mov
lea
add
mov
xchg
mov
addb
lods
lret
xchg
pop
incb
mov
pop
insb
mov
adc
cmpsb
es
mov
fstpt
push
pop
icebp
stc
in
and
mov
int3
sbb
jle
std
pop
test
rorl
xor
mov
mov
fldl
popf
mov
pop
ret
repz
pushf
mov
cmp
push
xchg
test
enter
adc
xor
jb
push
add
divb
pop
inc
xlat
jle
out
sar
popa
imul
mov
fsubrp
cld
data16
mov
cs
bound
mov
js
cwtl
dec
repnz
orl
insl
add
mov
rorl
cld
in
inc
cmp
call
ja
pushf
sub
mov
mov
push
and
mov
xor
or
int
add
test
nop
aaa
popa
mov
adc
mov
adc
or
shlb
jae
mov
in
sub
fisubrs
rorb
and
movnti
in
clc
sbb
push
test
xchg
insl
jp
mov
mov
daa
mov
lock
cmpsb
in
adc
xchg
sub
jbe
rcl
and
lret
jmp
aam
in
cmp
add
mov
test
addr16
stc
or
mov
cmp
mov
xor
loopne
lock
cld
cmp
fsubrs
in
gs
sub
pop
dec
lock
mov
sub
outsb
push
mov
mov
icebp
pusha
sbb
rsqrtps
out
imul
addr16
adc
xor
test
sti
ret
add
adc
pop
sbb
sbb
insb
mov
sbb
xlat
cmpsl
inc
cli
rcll
bound
xor
mov
lods
mov
inc
fs
in
enter
out
jns
push
or
rcll
sahf
jecxz
test
cmpsb
pop
mov
fdivrs
add
hlt
mov
dec
sti
clc
das
xchg
mov
fwait
cmp
lret
std
movsb
and
ss
sarb
adcl
lret
mov
sbb
ss
jae
adc
xor
ret
mov
dec
addr16
cmpsl
jo
je
push
outsb
in
mov
loop
mov
cmp
push
popa
mov
push
enter
sub
jmp
loope
cmpsl
adc
mov
or
inc
push
jle
push
push
or
dec
or
insb
cmp
lret
divl
xchg
push
cmp
mov
mov
sub
xchg
mov
or
dec
test
adc
add
sub
xchg
in
xor
xchg
aas
and
arpl
xor
xchg
sbb
filds
mov
adcb
in
jne
rolb
andl
jb
jno
stos
or
lcall
adc
pop
add
enter
cmpsb
imul
insl
cmp
mov
out
and
cli
rol
inc
or
out
xor
loope
mov
popf
loope
add
or
mov
cmpsl
out
pusha
jg
or
cld
push
xchg
out
sbb
ret
lods
test
inc
mov
and
add
mov
pusha
add
add
add
adc
dec
negl
mov
loope
push
adc
repz
add
or
push
fidivrl
popa
adc
xchg
ret
out
lcall
xor
scas
ficomps
xchg
dec
rolb
fcompl
mov
fdivrs
aaa
adc
jecxz
mov
or
inc
adc
pop
cli
sub
inc
in
cmc
pop
pop
sbb
fstl
mov
pop
push
xor
dec
sar
sub
mov
sbb
lret
mov
add
push
bound
addr16
push
or
out
inc
jge
pop
dec
sahf
sbb
mov
outsl
mov
sbb
jmp
mov
std
push
popf
int3
dec
cld
pop
pop
mov
mov
daa
lahf
stos
lcall
out
icebp
aas
push
and
or
aad
inc
cmp
repnz
loop
xchg
jmp
push
clc
mov
sarl
ficomps
ret
pop
add
mov
pushf
cltd
fmull
and
scas
pop
jmp
xchg
jp
mov
jns
test
ja
mov
jae
inc
pop
xlat
dec
inc
jg
stos
xor
popa
daa
out
fistps
fsubs
xchg
cmp
mov
mov
leave
mov
shrb
and
jmp
sti
cmp
dec
leave
push
leave
sbb
pop
aam
mov
mov
jmp
fistpll
jecxz
in
cmpl
push
or
loopne
fsubl
jno
lods
pop
jp
add
rcl
lahf
cmp
xchg
and
dec
jne
cli
jmp
xor
jbe
xchg
pop
xchg
jmp
xlat
ja
push
mov
ss
mov
add
jle
sbb
dec
fldl
and
jmp
in
mov
mov
pop
scas
push
clc
cmpsl
cs
mov
sarl
icebp
xor
arpl
jno
shll
inc
sbb
pop
lcall
es
or
push
mov
inc
xlat
add
cli
mov
dec
push
inc
sub
je
xor
loop
sbb
fisttpl
jp
incl
sbb
in
cld
adc
mov
mov
flds
adc
in
push
adc
push
int
jnp
shlb
sbb
sti
sub
mov
cmp
dec
push
xchg
jo
adc
lods
and
sub
je
outsl
jbe
es
mov
push
pushl
aad
rorl
pop
sahf
lods
in
stos
jge
orl
jo
rorb
dec
sar
pop
add
fs
mov
js
and
sub
inc
int3
or
sbb
aaa
add
jb
imul
lock
mov
dec
stos
xor
es
andb
cs
sbb
cs
pushl
jbe
popa
xlat
sbb
lcall
cmp
ja
adc
ss
sti
inc
xor
push
sbb
cld
ljmp
leave
subb
ss
les
push
adc
ljmp
int3
or
lods
call
xor
es
and
push
xchg
xchg
push
fwait
mov
pop
leave
push
lods
and
loopne
push
lret
mov
aam
xchg
inc
shll
aad
xor
mov
iret
test
cmp
xor
shll
add
aam
imul
repnz
int
cmpsl
call
addr16
in
mov
push
roll
pop
xchg
or
cmp
fstl
sbb
inc
sbb
inc
pop
jnp
xchg
xor
cmp
int
fidivl
test
fldt
mov
mov
jl
pop
fsubr
push
test
stc
bnd
imul
cld
fdivs
and
orb
inc
rcrb
sbb
je
enter
jle
lret
or
sub
adc
adc
mov
and
jne
addr16
pop
mov
adc
mov
aam
popf
adc
add
mov
jo
outsl
lock
aaa
xor
jle
jae
int3
gs
imul
rclb
dec
add
scas
pop
and
into
test
add
inc
push
ljmp
insb
mov
fstps
stos
inc
sub
sub
lock
cmp
aas
std
cmc
xchg
pop
push
push
mov
adc
sub
add
mov
add
ret
lret
adc
ret
fdiv
lock
xlat
and
push
outsl
push
rcr
in
icebp
lods
into
xchg
shll
es
out
popa
push
jmp
dec
add
add
add
in
mov
fdivp
cld
ds
daa
cmp
jae
rorb
add
repz
add
mov
sti
mov
cmp
pop
fs
sbb
popf
adc
adc
pop
jecxz
sub
mov
push
and
enter
in
sbb
push
andb
push
cmpsl
mov
mov
and
or
lcall
mov
arpl
mov
xchg
into
lcall
xor
outsb
imul
inc
mov
out
lock
cli
inc
jno
icebp
cld
shrl
push
call
fistpl
lcall
mov
push
fwait
movb
scas
mov
decl
inc
push
sbb
inc
repnz
pop
and
adc
push
sbb
dec
push
iret
xchg
outsl
adc
js
arpl
mov
or
icebp
and
scas
xchg
dec
cmp
adc
sub
ds
scas
fyl2x
sub
xchg
jae
inc
in
movsb
or
mov
iret
pop
fwait
xor
or
icebp
out
push
jp
fldt
ljmp
mov
mov
jp
pop
cld
and
cli
jnp
lods
sub
adc
sbb
jl
pop
push
dec
aaa
inc
jp
fldenv
push
scas
add
popa
jle
je
shlb
sub
sysexit
mov
xchg
push
leave
and
cmp
cmp
cmp
sub
test
stc
inc
adc
in
leave
in
fiaddl
jg
inc
fs
pushf
or
test
lds
mov
cmp
into
jl
testb
daa
std
andb
mov
or
jbe
mov
sti
cmp
jl
jl
imul
pop
dec
dec
push
xchg
bound
inc
int
icebp
cmp
push
stos
pop
xchg
out
es
mov
push
xchg
sub
ss
jl
sub
adc
jns
cmp
pop
leave
mov
sub
lock
mov
mov
push
cwtl
add
adc
cmpsl
aaa
sub
adc
jle
xor
push
outsl
lods
xlat
out
jmp
mov
int3
xor
jg
lahf
inc
cmc
lds
xchg
or
and
dec
adc
ja
enter
cld
adc
xchg
push
fs
push
xor
lea
andl
sbb
push
dec
jl
rcr
sub
mov
test
mov
pop
idivl
pushf
js
inc
inc
dec
int
leave
dec
or
dec
sahf
jno
cld
xlat
lcall
pop
negb
rorb
fnsave
imul
clc
mov
cwtl
push
fcoml
sbb
jb
int3
pop
or
rolb
mov
popa
test
dec
add
mov
and
cmpsl
push
mov
xchg
sub
jg
repnz
cmp
stos
inc
or
sbb
mov
mov
jns
mov
adc
inc
mulb
add
out
push
leave
dec
pop
test
pop
test
dec
inc
loope
mov
addb
mov
stos
dec
pop
mov
addr16
das
movsl
mov
ror
stos
cmp
jmp
jno
push
movsl
hlt
mov
jnp
mov
movsb
push
in
or
cwtl
fsqrt
lret
cmpsb
popa
lret
cwtl
xchg
aad
pop
sahf
into
dec
lock
jae
outsl
jle
test
xlat
or
les
sbb
rorl
mov
jg
pop
xor
push
orl
sbb
repnz
pushf
adc
ja
mov
hlt
push
inc
fisubrl
xchg
jb
mov
dec
push
ljmp
pop
and
xor
dec
pop
lcall
cs
sbbl
jl
out
sbb
aas
test
mov
shlb
js
testb
or
cmp
arpl
adc
je
inc
sahf
xor
repnz
scas
lret
in
mov
sbb
sahf
sahf
or
adc
cwtl
xor
xor
lahf
addr16
push
mov
aaa
xchg
outsb
aaa
mov
xchg
pop
sbb
pop
insb
ja
mov
int
mov
push
mov
fildl
pushf
mulb
add
mov
int3
scas
cwtl
jo
pop
lock
xchg
cmp
pop
sub
sub
dec
insb
les
aaa
cmpsl
xchg
ds
inc
out
into
scas
add
imul
dec
fdivrl
adc
ja
sbbl
mov
inc
enter
lret
call
add
xor
jg
sbbl
inc
dec
add
repz
add
adc
rcrl
push
pop
pop
dec
fnsave
out
jae
jle
push
add
arpl
sub
enter
jge
push
dec
pop
push
jae
xchg
imull
insb
fsubl
dec
mov
sbb
add
lods
lea
push
js
incl
jno
shr
push
shrb
push
sbb
mov
push
and
loope
push
imul
repnz
clc
jns
aad
shl
int
lret
push
pop
rorb
and
cmpsl
xor
inc
loope
sbbl
ds
cli
pop
mov
add
stc
scas
bts
add
lods
iret
pop
jno
addr16
out
imul
scas
out
lds
test
sbb
testl
fisubrs
mov
adc
sub
dec
stos
and
inc
mov
dec
sub
imul
inc
or
faddl
leave
or
mov
xlat
out
push
xchg
mov
mov
aas
jecxz
xor
adc
push
mov
mov
push
popa
sbb
lock
insb
pop
repnz
mov
adc
fmulp
movsb
jne
pop
cmp
lret
mov
icebp
mov
pop
push
and
data16
movsl
push
and
test
data16
mov
or
add
xor
sub
shlb
dec
pop
xchg
mov
psubw
scas
and
mov
and
lcall
sbb
out
popa
dec
or
pop
mulb
cmp
cmpsl
pop
fsubs
scas
rcll
lock
daa
push
pusha
jno
lods
ds
dec
dec
inc
iret
add
jb
loope
lods
xchg
push
cli
jp
sar
xchg
popa
in
sbb
mov
xlat
sub
cmp
test
aad
sbb
inc
xor
les
xchg
cwtl
rclb
fmuls
and
aad
lret
fiaddl
jecxz
jae
jecxz
mov
mov
sbb
leave
inc
xor
mov
jecxz
xchg
xchg
inc
in
das
mov
lods
sub
jbe
xlat
out
fldcw
ds
iret
in
js
loop
sub
aas
icebp
jae
mov
out
fistpl
mov
rclb
jl
xchg
cmp
xor
cmp
or
push
inc
mov
fs
cmp
cmp
xor
sub
jmp
push
add
imul
push
ja
pop
in
and
stos
sub
loope
or
mov
sbb
lret
in
cmc
outsb
stos
in
repz
sbb
lock
pop
and
dec
sub
jg
sub
pop
leave
inc
loope
testb
pop
sub
sti
lret
jne
sub
dec
dec
sub
pop
fisubrs
add
push
lds
xchg
push
addr16
inc
lods
imul
xchg
sbb
in
adcb
mov
bound
cmp
sub
mov
cltd
inc
xchg
jns
sahf
shll
sbb
rol
push
mov
inc
lret
xor
mov
cmp
scas
insb
inc
scas
rcll
stc
sbb
test
adc
dec
mov
dec
int
mov
lret
js
not
sub
cmpsb
push
mulb
mov
push
jmp
scas
outsb
xchg
xchg
sahf
imul
movsl
cmp
pop
add
mov
loopne
inc
testb
into
push
push
stos
mov
xchg
rorb
push
and
xchg
fldt
inc
decl
mov
mov
fwait
jne
xchg
mov
sahf
flds
jle
repnz
mov
lret
inc
inc
xlat
cld
subl
es
notb
push
push
cmp
daa
xchg
cs
movsb
scas
mov
lret
sub
inc
mov
je
or
test
ss
dec
pop
dec
jno
fcomip
inc
jmp
add
cmpsl
dec
clc
clc
mov
fld
test
mov
mov
pop
es
cmp
jp
mov
mov
lret
fcmove
andb
mov
push
inc
jge
pop
adc
xchg
mov
imul
inc
fstpt
jb
cmp
mov
out
xchg
sbbb
pop
repz
sti
push
test
push
push
add
pusha
mov
dec
and
sub
mov
push
and
out
fstl
daa
pop
mov
mov
cmpsl
add
add
add
or
xchg
jmp
adc
pop
and
lcall
add
xor
ds
jge
jns
pop
roll
lahf
rcll
mov
fucompp
stos
xorl
scas
mov
xor
mov
xor
push
iret
push
xchg
jns
pop
and
mov
sub
addr16
lds
call
xorl
push
inc
dec
inc
add
rclb
jp
jne
xchg
data16
adc
jp
popf
add
xor
stos
xchg
cmpb
mov
test
push
or
xorb
ret
lods
shll
mov
push
mov
aaa
ror
fisubl
push
push
incb
xchg
imul
lods
push
mov
lds
add
out
scas
or
jns
loopne
push
stc
lcall
jecxz
insb
addr16
insb
dec
int3
ds
repz
hlt
test
pop
fdivs
idiv
ja
aaa
jp
xor
cmp
ss
or
inc
adc
xor
push
inc
cmp
insb
sbb
daa
jns
push
mov
scas
mov
xchg
xor
cwtl
pop
cltd
fbstp
cwtl
xchg
fistpll
cs
push
mov
daa
push
sub
cli
imul
ss
push
dec
ljmp
push
push
jbe
dec
push
jae
inc
mov
es
sahf
mov
push
dec
outsl
test
mov
jno
sti
pusha
arpl
mov
test
jnp
imul
stos
je
jecxz
cs
push
add
pop
mov
push
dec
sub
mov
cmpl
ja
push
push
sbb
jne
xchg
aam
xchg
test
pop
lock
es
js
not
and
cmp
xor
imul
xor
jg
mov
pop
adc
fwait
daa
dec
std
xor
mov
dec
add
add
lcall
and
push
enter
icebp
push
lahf
push
test
imul
aam
lock
mov
jbe
data16
dec
popf
jmp
jge
adc
jbe
xchg
pop
int3
fmull
sub
cltd
xor
out
lea
or
pop
in
cmp
lret
jnp
out
jmp
sbb
insl
jmp
add
cld
std
push
mov
and
dec
fildl
pop
sbb
sbb
pop
imul
into
pop
dec
loopne
test
xchg
mov
fldcw
ja
gs
notl
xchg
mul
xor
mov
push
pusha
mov
adc
aam
ficoml
dec
movsb
xchg
cli
pop
jge
add
inc
xchg
inc
push
gs
adc
pop
add
cmp
sbb
movsb
jle
fnstenv
mov
sbbb
cmp
insb
inc
jnp
clc
mov
rcrl
xchg
daa
mov
mov
mov
add
push
sti
push
imul
xchg
push
sbbb
iret
aam
lock
jp
jnp
add
test
xchg
mov
adc
ds
xchg
or
popa
xor
sub
pusha
fiaddl
jns
and
lcall
xor
mov
and
jno,pn
mov
inc
cmp
fcomps
mov
xor
sub
pop
mov
addb
es
sbb
inc
dec
dec
lahf
addr16
subl
repnz
jns
xlat
iret
fildl
pushf
icebp
pop
push
stos
add
xchg
lret
sbb
jg
jno
xor
int
push
mov
sub
push
or
cmp
or
pushf
out
scas
mov
ffreep
push
cmpsb
popa
mov
jle
sbb
and
sub
lock
inc
mov
dec
out
mov
cmp
sbb
xlat
push
adc
xchg
or
xor
inc
adc
jns
mov
leave
dec
ljmp
bound
test
mov
shll
out
add
lock
add
pop
clc
cmp
js
sbb
push
lahf
out
out
rorl
iret
push
push
shll
pushf
repz
mov
add
jmp
insb
addb
mov
popf
aad
rcll
push
nop
dec
cmp
push
or
jecxz
pop
mov
inc
push
cmpsl
mov
arpl
jmp
in
nop
push
sub
ja
xchg
sbb
ss
push
push
ds
or
add
sbb
add
cmpsb
mov
jne
mov
rorb
sbb
add
loope
loope
fistpll
adcl
lods
pop
stos
cwtl
daa
push
add
repz
add
mov
imul
pop
sub
jp
jae
jne
inc
lret
test
movsl
aaa
mov
mov
dec
xchg
mov
jmp
add
or
lock
adc
mov
jle
pop
mov
or
or
jle
mov
aas
fucomi
movsb
out
jge
inc
xchg
mov
fincstp
jge
lcall
fdiv
jge
mov
in
lods
fiadds
jmp
ljmp
xlat
cmp
adc
sbb
sub
adc
sbb
out
idivb
xchg
sbb
cmp
or
or
or
lea
mov
mov
adc
cmp
sub
mov
hlt
jbe
cli
cmp
sbb
stc
push
das
pop
stc
fnstsw
add
sbb
mov
jo
inc
cs
pop
jno
das
or
fsts
pop
imul
call
lret
into
dec
mov
cmp
xchg
jp
pushf
dec
xchg
decl
lret
fldcw
das
push
push
mov
pop
lcall
scas
js
xchg
out
xor
push
ret
cmp
in
incb
int
movsl
lahf
inc
cmp
mov
leave
and
and
lahf
adc
mov
fs
add
sbb
sub
aam
repz
out
enter
scas
daa
sbb
out
mov
ss
popa
pop
daa
mov
cmpsb
cmc
sub
xor
jle
insl
mov
pop
jnp
cld
negb
jns
jbe
mov
xchg
dec
int3
sbb
dec
movb
mov
repz
adc
cmpsl
push
out
mov
inc
and
xchg
jne
xchg
vmovapd
jle
fiadds
pop
pushf
fistpll
ja
pushf
syscall
mov
xchg
or
cmpsb
inc
jne
xchg
add
in
or
add
pop
stos
aaa
je
scas
roll
pop
xchg
out
adc
in
cs
push
mov
lea
out
js
ficomps
sbb
or
and
adc
mov
pop
aad
ds
cwtl
jns
call
inc
push
inc
out
jmp
adcb
jbe
movsb
stos
int
push
adc
pop
sub
add
out
cld
aam
push
sub
jp
or
cmc
xchg
scas
jecxz
lahf
or
sub
rcll
mov
pop
ja
cmc
mov
xlat
adc
dec
fwait
in
inc
psadbw
xchg
push
cmp
daa
add
mov
addr16
shr
ret
adc
fldcw
andb
call
je
sub
push
xchg
add
cli
push
iret
lahf
stc
fisttpll
xor
sub
xchg
jo
lods
or
add
hlt
pop
or
sbb
xor
and
scas
cwtl
jo
mov
xor
int3
ds
mov
pop
sub
ret
decb
test
dec
out
xor
adc
cmp
jp
stos
ja
outsb
mov
sub
lahf
xor
lds
xchg
xchg
imul
dec
and
pop
cmc
mov
and
mov
jmp
push
lret
add
cmp
insl
dec
jb
mov
cmp
adc
stos
mov
cli
cltd
out
bound
xchg
adc
roll
xchg
lahf
inc
leave
cld
xchg
and
mov
adc
repnz
mov
aad
jge
sbb
fdivrs
mov
add
scas
imul
sub
stos
mull
insl
cli
pop
add
jmp
cvtpi2ps
or
sbb
mov
mov
int
xor
mov
test
call
shrb
xchg
das
imul
xchg
sbb
xchg
add
cmp
mov
aad
inc
add
or
rcl
int3
add
dec
dec
cs
sar
cltd
pop
test
out
imul
fdivs
sub
jg
icebp
sbb
cmpsl
jge
shlb
test
xor
repnz
mov
aam
pop
adc
sarb
cmp
adc
ja
lods
clc
jmp
scas
mov
sbb
leave
pop
cmpsl
sbb
jmp
cs
aaa
xlat
shll
hlt
xlat
out
adc
jb
subl
call
loopne
xchg
jnp
es
push
mov
insb
cmp
in
mov
cmp
hlt
dec
dec
inc
addb
and
stos
in
inc
dec
push
in
dec
sbb
arpl
pop
inc
scas
adc
pop
cld
fstl
add
loope
xchg
out
notl
add
cli
sbbb
add
repz
add
mov
pop
es
ds
jnp
mov
aam
push
test
jg
sub
movb
in
jg
inc
jmp
lea
test
lret
lock
or
mov
mov
push
adc
idiv
enter
push
insl
ja
shlb
js
insl
push
fs
lods
add
push
fdivrs
gs
outsb
fbstp
push
sbb
out
jne
in
lret
fstps
inc
jp
or
sbb
out
pop
pop
lret
bound
push
cli
mov
loop
or
cmc
fsubp
push
pop
dec
xlat
addr16
push
pop
pop
jnp
pop
rorw
jb
adc
pop
loope
lret
jbe
in
inc
aam
shlb
inc
xor
cltd
jecxz
sahf
out
test
sbb
rcll
jle
pushf
orl
data16
ret
xchg
dec
data16
fcompl
arpl
insb
sbb
add
repnz
aad
pop
aas
out
flds
insb
fs
sbb
mov
mov
and
in
ret
fwait
std
pushf
add
mov
and
push
adc
sbb
push
inc
cs
or
mov
cmp
test
cmp
shl
cmp
or
mov
loop
xchg
pop
cmp
fnsave
or
fcomps
adc
movsl
sbb
xchg
pop
xor
adc
js
mov
cli
std
push
jno
loope
or
pop
ds
inc
xchg
sub
imul
jbe
adc
andl
xor
arpl
std
testb
cmpb
mov
pop
add
sbb
pop
je
popf
mov
lcall
test
cmpsb
mov
popf
xchg
add
cmp
xchg
sahf
int
and
xchg
ds
xorps
repnz
insb
sbbb
iret
push
cltd
cmpsl
sub
out
movsb
orb
cmpl
pop
stc
bound
loop
ret
cmp
mov
push
jns
insb
jl
push
sbb
cwtl
cmpsl
int3
mov
in
cmpsl
pusha
loopne
ret
xlat
fdivs
or
enter
test
mov
inc
ss
inc
dec
mov
xchg
mov
rclb
jno
inc
adc
into
notb
fisubs
out
lock
repnz
js
push
pop
pop
sbb
mov
and
inc
adc
inc
movsb
mov
cmp
fcoml
lcall
lods
js
and
or
enter
mov
das
ret
mov
add
pop
push
mov
mov
inc
jns
pop
ljmp
sbbb
dec
fcoms
mov
rcrl
cmpl
dec
mov
mov
mov
sti
nop
les
xchg
shrl
add
aas
dec
or
ret
cmpsb
mov
mov
nop
xor
icebp
sti
or
stc
mov
jl
inc
push
mov
mov
mov
out
jecxz
and
movsl
repz
dec
sub
xchg
imul
mov
cmp
into
ja
mov
out
aas
mov
push
push
adc
bound
sbb
in
or
pop
push
push
pop
mov
cmpsl
repnz
clc
enter
fidivrl
push
int
mov
mov
loop
sub
adc
push
int
jecxz
sub
pop
test
mov
lods
or
pop
add
insb
jecxz
inc
fwait
mov
mov
fwait
add
aad
or
mov
xlat
mov
xor
pop
push
iret
out
xchg
popf
rcll
daa
pop
roll
or
or
adc
mov
or
into
into
int3
mov
cvtdq2ps
incl
mov
mov
dec
repnz
sub
std
xchg
repnz
test
jg
dec
out
je
mov
and
out
push
jle
mov
repnz
scas
push
popa
sar
pop
pop
jmp
dec
bound
jmp
ret
iret
in
mov
imull
es
xor
lds
inc
xlat
push
test
push
dec
out
daa
adc
and
ja
push
adc
fs
in
jp
add
mov
nop
jmp
push
mov
mov
in
lods
gs
out
test
outsl
lcall
add
add
add
and
cmp
loope
mov
loop
or
add
add
sbb
rcr
mov
lcall
push
xchg
pop
mov
jae
cmp
icebp
stc
sbb
mull
and
push
in
adc
faddp
adc
test
lods
mov
jnp
mov
cld
sub
les
adc
shlb
jnp
xchg
repz
fs
mov
jne
or
lahf
shr
add
sub
je
adc
adc
mov
pusha
outsb
call
pushf
sbb
leave
push
mov
xchg
dec
repnz
xlat
fwait
test
imul
xor
xor
cwtl
xchg
mov
jne
jo
push
dec
jg
insb
or
or
adc
pusha
push
stos
lea
fmull
fidivl
movsl
sbb
jmp
xchg
lods
pop
icebp
cmp
scas
aaa
xchg
dec
xor
mov
sbbl
lods
adc
fs
lahf
lahf
je
mov
fisubs
in
jno
xchg
cmpsb
js
repnz
ss
xchg
ja
lret
xchg
jb
push
out
cs
pop
imul
adc
testb
jns
mov
nop
and
push
xchg
xor
jo,pn
andb
lret
aam
push
add
rol
adc
mov
or
xor
in
mov
mov
mov
aas
cmpsb
inc
loop
lods
cmpsb
sbb
in
push
xchg
dec
mov
mov
stos
dec
or
jb
mov
add
loop
cmc
dec
dec
jg
dec
dec
push
jbe
stos
pop
or
mov
shlb
mov
adc
movb
iret
stos
fs
adc
loop
lds
ret
sbb
loopne
mov
mov
xchg
xorl
cmc
jns
sbb
pop
sbb
ficoms
fcoms
and
sub
or
fs
adc
ror
int
std
pop
ds
mov
fprem
mov
sti
inc
mov
ret
push
aam
or
stos
sub
jns
mov
add
sti
arpl
sbb
and
cmpsb
test
cmp
das
lock
xchg
fisttps
cmpl
sahf
data16
int
sub
add
xor
clc
icebp
clc
mov
jo
sti
xchg
cmp
jecxz
fadds
jecxz
pop
lret
cmp
test
popf
cld
inc
mov
jae
cmpsb
fsubs
xor
pop
enter
int3
jnp
pusha
cmp
iret
fwait
and
ficoms
mov
pop
insb
mov
lret
mov
fs
iret
icebp
adc
xor
stos
cmpl
push
lea
adc
dec
dec
sub
xor
push
movsb
roll
int
mov
mov
insl
sbb
aas
lock
dec
cmpsl
lret
stos
jg
jg
push
in
out
dec
cmc
stc
inc
jbe
pushf
cvttps2pi
or
ret
ret
iret
adc
xchg
bound
cld
pop
xor
adc
out
jl
adc
dec
dec
and
loop
jmp
cmc
jle
jnp
pop
test
mov
push
xlat
ret
pop
rclb
aam
cmp
or
push
fucomi
roll
enter
pop
xchg
js
lea
mov
frstor
dec
xor
ja
jne
add
bound
cmp
or
push
add
orb
sub
lods
or
jl
arpl
test
outsb
add
ljmp
xchg
clc
fcmovb
lret
rolb
mov
pop
divb
fsts
jno
rorb
sbb
les
mov
add
inc
push
sub
push
mov
vfrczpd
cmc
or
cmp
or
or
and
xchg
lahf
jg
cmpsb
movsl
lea
adc
mov
mov
call
cmp
push
fs
mov
push
push
mov
shrb
rol
mov
pop
xchg
imul
sub
sub
push
inc
pop
sub
into
ret
dec
mov
fwait
cmpsb
cmpsl
in
sarl
pop
adc
add
outsb
outsl
mov
or
jo
dec
ljmp
mov
loopne
mov
and
push
push
add
popf
cmp
repnz
orb
cmp
mov
daa
shld
add
add
jg
mov
jp
ret
dec
sub
dec
add
repz
add
aad
ret
xchg
ret
call
sub
rol
out
cs
scas
outsl
xchg
dec
xlat
fisubrl
loop
push
pushf
lods
xchg
inc
fcmovne
gs
les
xchg
and
sti
repnz
pusha
gs
test
pusha
inc
fidivl
scas
jno
mov
inc
popf
or
mov
cwtl
pop
sub
mov
lahf
filds
out
int3
fimull
and
push
loope
and
ret
jmp
mov
out
or
jae
add
ja
adc
repz
push
pushf
push
lods
repnz
ficoms
test
pop
and
insb
pop
cmpsl
push
imul
fcmovnbe
es
xchg
mov
xor
dec
insb
incl
cmp
fdivrs
iret
jge
jge
adc
aas
push
adc
jo
or
ror
pop
vunpckhps
out
lahf
mov
rolb
xor
out
lcall
inc
jecxz
jns
sbb
outsl
or
addr16
les
fidivl
repz
notb
clc
push
dec
xchg
cmp
movsl
iret
mov
fdivr
xorb
test
mov
fdivrl
leave
jp
cmp
add
sub
sub
sbb
sbb
movsw
adc
inc
pop
cmp
pop
pop
mov
cmp
test
icebp
dec
inc
mov
jno
push
andb
jns
loopne
rcrb
mov
jmp
mov
inc
imul
jno
push
les
sub
sbb
jb
fldl
add
or
call
clc
add
mov
inc
mov
lds
xchg
test
and
subl
aam
addl
pusha
fistpll
stos
sub
inc
sbb
cli
mov
das
mov
xchg
jmp
sarl
or
clc
jnp
sbb
fsubs
pusha
ret
mov
movl
in
xor
add
hlt
mov
sub
mov
or
leave
inc
adc
push
sub
push
xor
mov
pusha
jno
lahf
mov
dec
add
test
inc
into
pusha
mov
mov
xchg
addr16
insb
dec
dec
push
loop
push
pop
popf
pop
jo
fiadds
cmc
loopne
stc
mov
cs
dec
in
xchg
movsl
xlat
sub
mov
sbb
sbb
push
and
cmp
popa
sahf
cmp
stc
xor
dec
xchg
pop
dec
adc
xchg
pop
aaa
repnz
sahf
jg
clc
dec
push
insl
sub
adc
mov
bndldx
sbbl
dec
orb
jg
ja
dec
push
lcall
pop
inc
mov
lcall
dec
inc
ror
fistpll
daa
cmc
loopne
nop
cmc
out
sbb
push
mov
test
mov
push
inc
pop
lret
fsubr
mov
sbb
and
mov
out
aad
or
cmc
mov
cmp
inc
xor
and
int
mov
cmp
ficoml
movb
cs
andb
dec
xchg
fildll
mov
mov
arpl
mov
push
dec
pop
fsubr
adc
and
in
js
negl
lcall
cmpsb
pop
ljmp
pop
mov
xor
add
test
mov
std
and
fmul
mov
pop
das
sahf
clc
add
sbb
xor
jecxz
lcall
cmp
and
push
cmc
mov
test
inc
std
outsl
arpl
cltd
in
repnz
push
ficomps
inc
mov
rol
aaa
in
and
dec
jmp
test
into
pop
in
iret
pop
mov
jno
add
xor
sub
icebp
and
incb
pop
pop
push
dec
int
cltd
fdiv
push
cmp
dec
cld
pop
mov
fiadds
pop
es
or
jp
loop
sub
sarb
add
icebp
sub
add
cmc
stos
mov
mov
rolb
dec
and
shlb
xchg
add
or
jge
jno
xchg
shlb
stos
stos
mov
sahf
in
or
jmp
or
testb
mov
out
test
xchg
enter
cwtl
inc
rol
out
js
test
ret
popf
lea
lock
aas
imul
xchg
lods
lahf
pusha
leave
sub
in
xchg
pop
or
es
insb
mov
or
or
icebp
out
mov
mov
add
push
push
cmp
cmp
push
pop
mov
lahf
and
add
repz
add
mov
pop
mov
adc
cmp
fs
stos
dec
add
mov
fcoms
and
mov
insb
mov
int3
movsb
shll
dec
ljmp
data16
sbb
xchg
ja
cmpsb
movsl
rorb
ret
pop
mov
mov
movsl
sub
in
popa
mov
aam
push
int
push
or
mov
lea
repz
notl
stc
jae
mov
mov
mov
inc
push
popf
mov
add
mov
cmpsl
gs
lods
add
dec
xlat
mov
add
scas
lret
dec
loop
inc
jns
enter
mov
int3
mov
imul
clc
fs
popa
into
cmp
movsl
push
dec
push
into
mov
clc
popa
rol
sti
movsl
lcall
mov
clc
sub
stos
jg
or
jge
push
or
cmc
push
sub
divl
sub
mov
fstpl
dec
mov
adc
mov
insl
mov
push
inc
pop
mov
test
insb
jmp
enter
or
rcrl
mov
push
std
cs
cmp
inc
lock
out
xchg
fcomps
cltd
stc
lea
xchg
adc
repz
outsb
pop
stos
arpl
aad
je
outsl
cwtl
pusha
jge
push
pop
fisttpll
ja
jne
inc
pop
loope
cwtl
or
mov
fstps
mov
mov
dec
push
mov
es
inc
rcl
movsw
adc
push
dec
xchg
sbb
or
xor
lods
sti
ds
xchg
jnp
loop
movsb
jo
sub
pextrw
cmp
dec
je
or
adc
fsts
xor
es
jl
inc
pop
push
jo
rcll
jae
les
sub
subl
xchg
aaa
mov
aad
mov
cmp
xchg
mov
es
in
jecxz
sti
sub
inc
jmp
hlt
ret
mull
cmp
mov
adc
leave
shll
jl
adc
mov
popa
shlb
sbb
pop
mov
xlat
insl
outsb
add
mov
xor
sahf
xor
addr16
or
and
mov
mov
sub
shrl
sub
repnz
sub
dec
push
push
mov
xchg
xchg
xor
int3
jb
inc
imul
pop
mov
jb
mov
sarl
insb
or
or
ljmp
popa
and
out
hlt
inc
sbb
pusha
cli
jle
rcll
mov
cld
cmp
fistl
shll
push
or
add
jb
jnp
sbb
fcmovu
mov
test
push
jmp
cmp
lret
add
adc
or
push
push
push
cwtl
jl
cmp
pop
movsb
das
pop
xchg
push
fidivl
negl
cs
push
popf
scas
push
pop
loop
jae
leave
rorl
jle
adc
inc
and
mov
sub
cmp
ss
add
mov
outsb
fiadds
ljmp
mov
jg
pushl
jmp
mov
and
sbb
addr16
cmp
aam
mov
push
in
out
shll
inc
mov
loop
repz
xchg
jg,pt
cmc
push
push
cs
test
add
sub
inc
push
and
pop
cmp
add
data16
xchg
scas
jge
out
or
push
sbb
lcall
enter
imul
jge
and
sub
icebp
jnp
cmp
cltd
lods
xor
mov
pop
add
cmp
popf
mov
out
pop
push
jno
or
imulb
test
xor
pop
cmpsl
test
cmp
adc
jl
cltd
dec
test
je
in
push
xor
add
push
jmp
inc
gs
rcr
mov
ljmp
imul
rcll
cmc
test
aaa
mov
inc
lret
sbb
clc
dec
sbbl
scas
je
cmc
enter
mov
mov
mov
jno
add
and
add
add
add
mov
jg
test
out
sbbb
add
repz
add
pop
mov
xor
int
pushf
repz
sbb
mov
lcall
mov
aaa
arpl
ljmp
inc
test
xchg
sub
sbb
dec
xchg
aaa
es
mov
xor
fildll
mov
hlt
shlb
push
out
inc
dec
leave
cltd
xchg
pop
roll
pop
mov
in
push
lods
test
fsub
xchg
imul
out
je
dec
or
mov
xchg
sahf
mov
or
das
cmp
mov
jnp
dec
inc
test
lret
push
push
jl
loopne
test
cmp
sub
pop
xchg
cmpsl
or
je
ficoml
lahf
inc
repz
mov
jg
lea
fs
ljmp
shr
cmp
pop
jge
int
jg
aad
loopne
incl
bound
sbb
cvtps2pd
je
out
adc
popf
or
push
xor
sarl
adc
or
xchg
outsb
jmp
loop
cmp
std
insb
fs
and
aaa
mov
dec
adc
fwait
and
mov
lret
in
fldenv
ret
add
push
fimuls
stos
push
sub
shrb
adc
jnp
aas
insb
mov
mov
jp
and
jbe
movsb
jmp
dec
dec
sbb
imul
loope
cli
cwtl
push
jno
pop
rorb
subb
es
push
sbb
xchg
lea
jmp
imul
sbbl
lds
dec
jae
in
xchg
or
jbe
xchg
fldl
out
je
lret
mov
pop
scas
js
cs
xlat
bnd
xchg
xor
or
sbb
mov
inc
inc
enterw
xchg
imul
inc
mov
and
cmp
xor
pop
les
fwait
jmp
mulb
sahf
mov
push
insl
out
dec
scas
hlt
dec
ret
mov
cmc
call
subb
or
jmp
cmp
stos
inc
and
push
aam
sbbl
add
repz
mov
xchg
sbb
int3
push
mov
mov
mov
mov
or
or
sbb
push
pop
fcom
adcb
inc
adc
jbe
cmc
fidivl
and
pop
ljmp
les
cmp
out
add
outsl
lea
inc
test
jne
mov
jge
iret
push
out
mov
pop
js
test
xchg
or
js
jno
pop
cltd
fdivrl
pop
outsl
dec
xor
out
adc
push
ret
repz
add
push
outsl
pop
xor
in
movsl
lret
mov
lret
pop
test
dec
int
push
mov
neg
cmpsl
lret
daa
fstps
dec
cmc
mov
pop
cltd
aas
xchg
ja
pop
test
sahf
rorb
rorb
lcall
xchg
fsubp
cmp
mov
cmp
pop
mov
add
sub
out
in
out
jbe
out
adcl
lcall
out
jb
adc
js
out
stos
shll
jo
adc
rep
scas
mov
and
push
push
shrl
cmc
fwait
mov
dec
repnz
enter
sbbb
xor
in
mov
fimuls
mov
inc
aaa
pop
insl
aas
ret
push
jp
fstl
mov
aam
lret
jl,pt
data16
sub
arpl
test
sarb
xor
std
not
or
xchg
sub
mov
loop
das
cld
sti
inc
fyl2xp1
gs
mov
add
sarb
pop
lods
adc
adcl
mov
mov
les
mov
lahf
popl
sbb
test
popf
or
enter
fdivr
add
out
adc
adc
push
into
pop
scas
nop
daa
xchg
movsb
fbld
outsl
cmp
add
ret
fsubrs
jns
stc
sub
inc
fbstp
push
mov
push
icebp
pushf
mov
sub
clc
cmp
out
lods
dec
add
and
cmp
xchg
scas
mov
xchg
xor
sub
gs
and
out
pop
pop
adc
adc
iret
pushf
xlat
js
ds
sbb
mov
fadds
xor
fs
test
std
adc
aaa
filds
add
ret
push
adc
cmp
push
mov
xor
or
mov
pop
dec
int3
add
out
movsb
sbb
loopne
lock
les
add
add
dec
mulb
repnz
out
or
sub
jb
add
add
add
push
and
sub
cmc
insb
jmp
jle
xchg
or
cmp
cmc
sbb
cmp
jne
inc
jb
mov
pop
ret
pop
sub
cmpb
shll
cmpsl
aam
int3
fcmovbe
dec
xchg
out
ljmp
xlat
jns
push
dec
lock
xor
lea
shlb
movsl
sub
iret
vmwrite
mov
push
xchg
xchg
fidivrs
test
sbb
nop
loop
ss
or
lods
mov
mov
add
mov
inc
sbb
cli
adc
or
jle
sub
add
add
push
add
sti
xchg
insl
lods
out
mov
lods
jne
lret
jb
decb
mov
es
push
enter
in
bound
push
sbb
pop
ficoml
ret
stc
push
pop
push
nop
push
shl
pop
mov
scas
nop
push
push
aaa
and
or
js
or
rol
mov
sbb
cmpl
cwtl
ja
dec
cmp
push
jge
push
and
inc
lds
lret
ljmp
idivb
inc
rcrl
and
or
adc
sarl
in
push
sahf
pop
cmp
insl
pop
jle
fdivrl
cmpsb
sti
daa
xchg
out
pusha
xor
ja
call
pop
out
out
ss
ljmp
cli
and
fidivrl
ret
cmp
dec
xlat
repnz
pop
xchg
ja
cmp
clc
mov
je
sub
jl
mov
lcall
jae
or
mov
aad
pop
sbb
mov
jae
in
mov
lret
outsb
stc
lret
add
xor
xor
pop
xchg
fs
adc
mov
aaa
fs
adc
in
loopne
cmp
xchg
popf
ja
push
hlt
add
fwait
adc
test
mov
push
jecxz
aas
adc
sub
xor
icebp
lret
sbb
mov
mov
sub
xor
ss
je
jne
fisubl
pop
jl
xchg
mov
xor
xchg
and
ss
and
pop
jmp
pop
shll
testl
in
iret
int3
xor
lret
jecxz
cs
cs
xchg
fs
test
cmp
dec
sub
bnd
cmpsb
jle
ja
sti
in
jp
imul
push
add
and
outsb
ficoml
sbb
shrb
mov
and
lock
xchg
push
adc
gs
and
iret
mov
dec
ret
jo
into
lret
jns
mov
xchg
fcomi
jg
xor
mov
dec
cmp
loope
adc
ljmp
imul
scas
mov
xchg
in
adc
outsl
mov
neg
jbe
push
add
fucomip
inc
inc
jbe
cmc
cld
clc
push
mov
fldt
jp
adc
sub
in
scas
mov
pop
dec
jo
cmp
sbb
mov
fs
xor
push
sbb
push
int3
add
lcall
dec
loopne
test
and
sbb
sbb
inc
cmp
movsbl
and
lods
stos
loop
inc
inc
jge
jnp
scas
dec
jo
mov
cmp
and
mov
cltd
addl
leave
add
mov
aas
xchg
pop
mov
cld
adc
mov
sbb
lods
outsb
dec
test
inc
insb
add
ja
ret
mov
jmp
jle
mov
insl
stos
xchg
or
aaa
cltd
adc
jno
pop
sbb
mov
test
fs
call
jle
clc
mov
mov
pop
xchg
in
xchg
jg
andl
shll
and
out
xor
dec
xor
mov
testb
sub
outsb
sar
pop
js,pt
movsb
jp
and
test
hlt
or
out
aam
mov
cmpsb
icebp
sti
ret
lret
out
xchg
xor
mov
popf
fmull
negb
mov
testl
sbb
mov
roll
lock
and
or
stos
adc
sbb
lods
aas
xor
push
jae
sub
outsb
mov
aam
adcl
xor
push
sbb
das
scas
mov
movsb
mov
clc
sub
pusha
adc
insl
mov
call
out
test
mov
mov
lahf
mov
push
cmp
test
or
int
add
or
or
push
fadds
add
add
mov
mov
mov
add
test
repz
add
jo
xchg
or
adc
jb
out
ds
lcall
pop
mov
xchg
and
mov
movsl
mov
mov
cmp
ret
dec
jecxz
mov
pop
jbe
sub
lahf
stos
sbb
movsl
in
sub
es
mov
inc
shll
sbb
sub
inc
mov
lea
sub
imul
jg
aam
psadbw
sub
sbb
test
sub
push
adc
rorl
arpl
pop
data16
sbb
out
clc
cmp
cs
repz
test
or
call
push
xor
fisttpl
or
inc
sbb
shll
or
sub
leave
cmp
aas
movsl
aam
pop
daa
pop
pushw
mov
mov
arpl
inc
inc
mov
mov
mov
jge
xchg
push
roll
test
mov
mov
xchg
jne
into
repnz
pop
shlb
call
jno
out
int
cmp
inc
lcall
shll
jmp
ror
mov
shl
lcall
xorb
imul
ss
jne
mov
mov
cli
push
shll
dec
and
jo
dec
es
lea
and
fcomi
jg
cs
popf
xchg
cmp
lods
fdivrs
add
and
test
sti
in
pop
xor
filds
pop
mov
scas
pop
xor
push
push
xor
popa
daa
bnd
in
mov
mov
sub
sti
mov
test
sbb
jnp
push
xor
enter
enter
repnz
mov
jp
lret
ret
aad
pop
out
jl
inc
mov
clc
jp
dec
push
mov
jbe
mov
in
pop
jb
in
lods
js
add
shll
notl
mov
in
add
test
stc
std
in
addr16
jno
adc
fwait
testb
pusha
loop
mov
pop
arpl
je
or
std
xchg
push
mov
insb
inc
dec
arpl
out
mov
mov
shrl
les
loopne
push
aad
dec
mov
mov
sbb
mov
fbstp
add
movsl
dec
xchg
add
jge
ljmp
out
and
mov
leave
mov
pop
jecxz
hlt
push
es
lods
mov
ret
jp
cmpsb
sbb
xchg
popf
int
lea
das
ja
xchg
cmp
and
test
mov
xor
inc
cmpsl
jne
sbb
enter
mov
jg
mov
das
shr
outsl
into
arpl
xchg
sahf
jp
das
dec
mov
cmpl
das
aam
sub
ret
jns
clc
lret
jns
mov
sub
mov
std
sbb
shll
xchg
sbb
xchg
popf
icebp
dec
popa
lret
and
mov
inc
cli
xchg
mov
iret
inc
rcll
sbbw
sbb
lcall
inc
cld
mov
and
stos
cmpsl
sub
imul
mov
or
stos
dec
cmp
aaa
js
mov
mov
push
popf
sub
pop
in
cli
loopne
cmpb
push
cli
jno
pop
addr16
or
lods
mov
jno
insb
adc
int3
add
imul
imul
jmp
mov
lahf
movsb
jne
lods
cmp
fs
push
ja
or
fwait
push
lock
test
aad
shr
jmp
addr16
pop
jmp
cmc
inc
xchg
je
inc
sbb
ja
movsb
imul
xchg
sub
loope
cld
mov
xchg
cwtl
pop
jnp
cmpsl
mov
scas
mov
sbb
dec
call
movsb
lods
roll
sub
rcll
mov
sbb
pop
or
xchg
and
iret
adc
popl
push
aas
pop
ja
jns
dec
or
pop
jp
lods
icebp
imul
mov
adc
sub
or
cmp
sahf
enter
xchg
daa
pop
and
push
pop
out
cwtl
pop
pusha
fcmovb
lds
push
imul
jp
inc
xchg
movsb
mov
push
dec
stc
addr16
popf
leave
inc
repnz
shlb
cmp
or
out
fcomps
dec
pop
adc
nop
inc
incb
add
mov
and
jl
add
add
add
push
aas
pop
ficomps
dec
popf
jp
popa
lfs
mov
imul
and
shlb
pop
outsl
pop
push
sbb
imul
cmp
sub
push
jo
cmp
aam
jns
mov
mov
push
xchg
mov
test
outsl
cmp
sbb
std
inc
std
jecxz
mov
lea
lahf
mov
cmp
in
inc
stos
mov
stos
pop
xchg
adc
adc
mov
jg
inc
out
mov
cmp
fimuls
icebp
adcb
and
xchg
dec
inc
push
inc
cmpl
jp
in
je
fs
mov
std
fdivrs
fldl2e
insl
jecxz
cmc
add
xor
into
icebp
mov
data16
gs
pushf
adc
adc
mov
inc
insl
push
mov
in
adc
fadd
cmp
mov
pop
shlb
call
lds
shrl
popf
lock
ret
inc
icebp
jnp
jo
aas
jecxz
push
ret
loop
je
fistpll
pop
xchg
in
add
push
cmp
insb
imul
outsl
pop
mov
sub
sub
and
jl
cltd
test
jmp
dec
mov
shlb
and
int
jg
sub
loopne
pop
cmp
xor
in
or
jbe
or
pop
js
ds
cmp
xor
mov
leave
ja
mov
inc
xor
adc
aam
mov
movsl
popf
and
sbb
xchg
stc
das
pushf
pop
test
mov
pop
ret
cwtl
xchg
mov
xchg
cli
xor
test
pop
and
jae
xor
mov
repz
les
clc
fs
adc
les
inc
inc
xchg
adc
jmp
lea
and
je
mov
pop
int
xor
cmpsb
pop
or
push
or
add
bound
sahf
std
mov
ja
mov
int3
fldcw
and
in
add
mov
clc
sahf
pop
inc
mov
dec
scas
test
fistl
and
aas
mov
insb
je
sbb
aaa
mov
int
adc
mov
add
les
cwtl
xchg
sbb
mov
in
push
xchg
test
push
iret
sub
mov
shlb
inc
jg
cmpsl
fstp
adc
movsb
iret
push
das
insl
add
and
adc
mov
mov
je
fldcw
inc
push
pusha
jl
push
icebp
or
int
adc
inc
sbb
mov
pop
pop
add
jl
fs
iret
aas
push
das
inc
dec
jmp
lds
jmp
mov
dec
andb
iret
and
add
push
sub
mov
mov
mov
mov
adcb
push
jecxz
mov
pop
ror
jecxz
fcoms
push
ret
push
mov
add
push
scas
push
or
mov
mov
jl
or
and
fdivl
mov
lock
fcompl
add
mov
test
sub
xor
push
movsb
rorl
xor
cli
jg
lds
dec
int
push
aaa
sbbl
or
inc
cltd
aam
jle
shlb
cs
call
cld
pushf
and
data16
xchg
test
lea
jnp
adc
fdivs
jecxz
mov
xchg
and
push
and
dec
push
xchg
mov
sub
test
mov
inc
push
and
sbbb
outsl
sbb
xlat
mov
mov
hlt
xchg
sbb
cmpsb
in
pop
cmp
test
clc
xchg
shlb
and
repnz
dec
std
pop
push
dec
jo
scas
fnstenv
mov
mov
pop
cmp
xchg
mov
and
sbb
mov
mov
mov
loope
adc
mov
pop
out
lods
pop
clc
mov
repz
mov
clc
mov
cmp
sbbl
dec
inc
or
jo
jae
xor
fidivl
xchg
push
jp
xor
mov
jge
enter
mov
movsb
les
insb
gs
mov
lcall
out
or
push
test
jmp
cmpsb
push
push
mov
ljmp
cmp
push
mov
pop
or
push
mov
jne
sub
mov
aam
insl
xor
pop
add
add
add
pop
fldl
inc
sti
aas
jb
add
or
std
mov
add
add
xchg
xor
sbb
and
push
push
mov
sbb
dec
jo
sti
out
leave
outsb
jmp
push
mov
mov
addr16
xor
push
cmp
test
adc
cli
jnp
pusha
lret
xchg
ret
adc
aad
and
sub
dec
std
jp
pop
out
cwtl
xor
jp
pop
xor
in
mov
roll
push
movsb
sbb
sub
add
subl
mov
outsl
dec
sarb
push
mov
jl
out
lock
gs
push
mov
inc
icebp
jp
mov
add
out
out
cmp
fstpt
and
es
xor
leave
push
cmovg
dec
loop
arpl
adcb
or
and
and
sub
clc
jbe
xor
leave
and
sahf
stc
iret
mulb
pop
dec
inc
pop
or
mov
dec
mov
dec
aas
in
push
xor
jne
aam
js
sub
pop
push
sub
adc
xor
lea
sub
gs
mov
xchg
xchg
push
out
fs
and
or
push
outsb
push
xchg
adc
outsb
fisubrs
xor
jp
hlt
jl
filds
jb
stos
ja
jecxz
idivl
inc
imul
fdivrl
lret
push
push
movsl
mov
gs
add
mov
jnp
mov
fsubp
or
cmp
test
cltd
xchg
loopne
imul
cwtl
pop
xlat
fists
jecxz
add
push
into
cltd
mov
lret
pop
test
add
int3
adc
sahf
dec
insb
fildl
inc
fidivrl
mov
push
fistpll
lahf
dec
lods
push
adc
lret
lret
out
sbb
ret
shrb
mov
dec
cmp
adc
add
jmp
fnsave
sarb
and
xor
test
fs
jmp
inc
cmp
sub
add
jo
lret
sub
xor
test
push
out
mov
push
sbbb
inc
mov
inc
mov
call
jnp
rcl
dec
es
xor
in
mov
or
js
xchg
pop
mov
cmp
iret
sbb
jl
dec
fs
je
repnz
mov
leave
inc
cmp
cs
je
imul
pop
pop
idivb
in
cs
scas
shrl
cmc
sub
aaa
es
mov
mov
mov
ljmp
frstor
and
pop
push
jae
and
repz
cld
loopne
imul
divl
sub
pushf
adc
pop
jmp
lret
cmp
cmpb
push
faddl
mov
xchg
imul
ret
push
push
idivl
jge
test
sahf
daa
push
imul
aad
rolb
cmp
js
test
jmp
push
cltd
add
xor
sti
push
add
push
incl
fs
dec
arpl
aam
addr16
xchg
imul
jae
mov
mov
adc
jno
xchg
adc
leave
je
cmp
xchg
cmp
inc
insb
jge
subb
xchg
ret
in
cmpsl
push
mov
or
lahf
fidivs
xchg
pop
jp
inc
rol
loope
cmpsl
dec
ret
aaa
lret
mov
fwait
xor
or
js
clc
xchg
pusha
popf
and
push
imul
jbe
shll
mov
mov
push
ljmp
inc
dec
cmp
push
and
rcll
sbb
pop
in
lds
push
add
cmp
lods
scas
test
push
push
sbb
push
fwait
adc
sbb
fistpl
lahf
fbld
sbb
nop
aas
stos
unpcklps
popa
fistpl
bound
lock
jle
shlb
or
push
mov
add
add
fcmovnb
adc
outsl
mov
or
mov
or
mov
js
add
lahf
xor
popa
in
inc
mov
hlt
iret
in
or
aam
mov
daa
idivb
push
xchg
and
sarl
ret
subl
pop
dec
inc
xchg
push
mov
sbb
popf
cmp
ljmp
aas
adc
sub
in
jb,pn
in
cmpsb
leave
enterw
aas
push
movsl
into
and
xor
hlt
and
jmp
push
pop
pop
mov
aaa
mov
xlat
lret
push
xor
push
cmpsl
lock
imul
mov
xchg
mov
add
add
jge
mov
or
push
lret
add
repz
add
ljmp
add
and
jb
daa
xor
cmp
pop
and
cltd
lods
mov
pusha
cmpl
stc
sub
adc
ja
ret
mov
iret
mov
push
popf
pop
sbb
out
mov
iret
into
inc
outsb
test
dec
or
adc
fnstcw
ret
lret
leave
stc
fs
pop
mov
je
push
mov
arpl
mov
scas
faddl
mov
rorb
cmpsl
xor
or
jbe
ret
fcmovb
lock
xor
xchg
js
pop
sbb
xor
mov
rorb
mov
out
fisttpl
loope
cwtl
shrl
jg,pt
xchg
mov
iret
jbe
rorb
adc
cmp
and
test
loope
push
dec
or
outsl
pop
sbb
jecxz
ret
push
xor
stos
push
xchg
pop
rorl
xor
or
mov
inc
pop
jge
gs
rclb
mov
and
stos
mov
into
add
mov
mov
add
pop
mov
ret
faddp
pop
adc
repnz
jecxz
mov
lds
adc
leave
in
fidivs
inc
pop
fadd
lods
stc
push
leave
popf
mov
lods
test
sbb
adc
and
fnstcw
mov
adc
xor
loop
jmp
mov
scas
das
push
testl
jno
clc
rcrb
inc
leave
jb
out
jb
and
popf
mov
scas
dec
mov
pop
sbb
shl
cmpsl
fstpt
cli
push
inc
or
out
fisttpll
or
pop
das
or
add
movsl
sbb
jbe
aad
inc
cmp
jb
lahf
jle
and
and
testb
cld
rcrl
jg
jmp
and
dec
xorl
and
pop
imul
popa
hlt
shrl
cs
push
jmp
mov
insb
insl
mov
mov
fisubrs
sub
mov
push
std
ja
repz
xchg
ljmp
les
outsb
loopne
mov
call
cmp
and
mov
fnstenv
inc
cwtl
jecxz
int3
pop
neg
mov
and
sbb
dec
cld
out
cmp
mov
xchg
lcall
inc
loop
int
dec
xchg
div
cli
test
outsb
mov
rcl
push
mov
jge
mov
add
mov
pop
iret
or
ljmp
add
adcb
jne
inc
add
mov
sbb
cmpsl
in
sti
push
int
ret
sbb
dec
pop
sub
fisubl
dec
insb
inc
and
sub
and
lds
rolb
in
pop
cmp
dec
xchg
shll
ja
stc
ret
add
pop
cltd
loop
mov
das
das
push
jmp
stc
cli
out
sbb
jp
jb
mov
rcll
pop
addl
mov
stos
fs
mov
lret
push
out
mov
imul
pop
push
push
scas
pop
xchg
imull
xor
hlt
lcall
bound
pop
lret
inc
pop
xchg
daa
pushf
xlat
mov
adc
push
push
sbb
bound
pop
dec
sbb
push
xor
pop
pop
clc
aas
lods
fimuls
sbb
adc
lea
pop
xchg
sub
icebp
test
mov
mov
ds
mov
imul
xor
adc
ret
mov
lcall
inc
dec
ja
and
cmpsb
jno
jne
out
xchg
repnz
arpl
add
inc
jmp
les
icebp
inc
sbb
sub
mov
adc
xor
mov
call
ljmp
sti
mov
loopne
fwait
rorl
xor
push
xchg
push
ja
add
inc
movsb
imul
sbb
ffreep
fsts
lock
scas
mov
inc
test
stc
dec
js
mov
in
jb
sub
mov
or
push
out
mov
push
and
jns
in
push
pop
fs
cmp
fs
sub
fdivs
fs
ret
test
fildl
xchg
test
sbb
pusha
jae
sub
shrb
in
jg
cmpsb
in
scas
xchg
das
pop
adc
fnstcw
mov
lods
lret
jmp
xor
icebp
pop
repnz
inc
inc
xchg
inc
or
sbb
stos
and
scas
push
pushf
push
sub
add
add
add
mov
cmp
clc
inc
push
cwtl
mov
add
add
add
idivl
sub
lds
out
movsb
je
mov
push
pop
cmp
mov
ret
mov
sbb
add
sub
cmpsb
xchg
aas
ret
ss
call
add
in
outsl
test
inc
inc
and
lcall
or
xchg
dec
xor
inc
lret
jb
push
add
fdivl
cli
add
or
mov
divl
dec
push
xchg
loope
es
int3
loopne
lods
aam
sbb
aam
mov
addr16
add
sbb
aad
dec
mov
xor
in
push
shlb
sarb
fbld
jmp
jbe
lcall
ror
pushf
adc
inc
loop
arpl
aaa
and
mov
adc
test
adc
out
dec
mov
cli
roll
inc
notl
mov
mov
sub
repz
mov
jmp
sub
cmp
add
sbbb
mov
jbe
cli
mov
jge
jmp
and
or
xor
cmc
lds
sbb
les
mov
cli
xchg
mov
cmc
pop
andb
inc
mov
mov
and
scas
sarl
out
add
repz
pusha
push
out
cmpsb
les
in
mov
jge
mov
xchg
test
pop
data16
inc
test
mov
or
dec
les
cli
cs
mov
inc
push
dec
negb
inc
pushf
std
push
mov
inc
lods
lock
ret
aaa
mov
mov
lcall
push
int3
mov
lahf
scas
xchg
xor
loope
repz
mov
xor
outsl
insl
jae
je
inc
mov
sbb
rcrl
je
jg
leave
dec
je
inc
movsl
addb
imul
pop
push
aaa
out
and
sysenter
inc
pop
rcrb
xchg
jbe
fdivrl
dec
loopne
mov
xchg
in
cli
stc
inc
xchg
mov
gs
fwait
jecxz
dec
repnz
mov
jle
xlat
dec
xor
pop
jne
call
pop
adc
xchg
jle
adc
push
xlat
clc
imul
mov
add
out
loope
add
and
inc
insb
dec
add
add
fadds
fwait
sub
sarb
pop
adc
shll
in
or
add
mov
xor
hlt
jnp
inc
sub
or
xchg
jno
jo
pop
int
rcrl
mov
jge
mov
push
in
add
dec
mov
dec
fwait
jae
adc
add
and
mov
lea
dec
repz
shlb
fldenv
mov
rcrb
ss
push
mov
sahf
out
mov
sbb
inc
xor
jne
add
mov
mov
std
fdivl
xor
loope
push
push
pop
insb
icebp
add
cmp
call
out
inc
mov
mov
out
jnp
mov
mov
xor
xorb
cmp
iret
test
mov
stos
pcmpgtd
jmp
cltd
dec
movsl
add
stc
and
and
in
paddd
fyl2x
lods
and
mov
mov
sbb
mov
push
test
mov
pushf
sbb
ljmp
mov
jo
out
test
negb
out
insl
clc
sahf
fdivrl
sti
mov
aad
out
dec
fcomps
mov
cmpsb
mov
push
pop
mov
les
mov
or
loopne
fs
rcll
cmp
not
into
cmp
lret
ds
mul
ficoml
test
xchg
inc
push
mov
sub
push
rcr
and
jne
inc
xchg
ss
jbe
mov
data16
adc
push
es
push
jbe
cld
xchg
jge
mov
fwait
rorb
sub
addr16
dec
and
cmp
cmpsb
cmp
insl
sbb
mov
xchg
push
pop
dec
rol
iret
mov
shlb
lahf
cmp
push
cld
xor
loop
jb
imul
add
mov
lock
les
and
mov
add
cmpsb
call
shl
int3
dec
imul
push
pop
aad
popf
fidivrs
mov
daa
ja
adc
popa
fsubrs
pop
data16
jb
into
outsb
shrb
pusha
mov
pop
mov
pop
xchg
mov
rcrb
adc
add
and
es
sti
std
sbb
adc
aas
mov
add
push
push
mov
sarl
cld
add
and
int
rcrb
clc
adc
mov
inc
push
add
pop
test
arpl
pop
xchg
sbb
pop
cli
dec
dec
and
cltd
pop
lds
jg
sbb
xchg
sarb
out
imul
cmc
mov
or
push
nop
lock
push
sub
enter
mov
cmp
jecxz
xchg
out
xor
btr
xchg
subl
and
cmp
xchg
stc
cs
xlat
aad
pause
repz
hlt
xchg
ss
mov
imul
pop
rorl
fsub
fildll
fwait
cwtl
pushf
xchg
pop
iret
test
push
dec
pop
outsb
ja
mov
push
repz
dec
or
xchg
and
sbb
inc
jmp
adc
rcrl
xchg
dec
nop
push
adc
popa
popa
xor
pop
ret
leave
add
xchg
add
jb
aas
adc
js
pushf
jmp
pusha
std
dec
das
cmp
shl
cld
aam
pushl
scas
xorl
sbb
dec
pop
jmp
rolb
test
inc
repz
test
push
popf
dec
aas
hlt
lret
orb
shrl
ljmp
lcall
outsl
inc
and
pop
fsubrs
jb
movsb
insl
jmp
lret
jo
xchg
loopne
sub
push
xor
push
sbb
je
je
pop
pop
xor
mov
pusha
mov
stos
ret
stos
inc
in
popa
and
cmpb
mov
mov
inc
sbb
mov
or
fdivrp
lahf
fiaddl
test
aaa
mov
push
mov
inc
int3
imul
dec
xchg
out
dec
mov
pop
icebp
xchg
push
mov
sub
lret
loopne
xlat
push
sub
and
mov
loopne
push
addr16
or
cmp
out
loop
call
mov
shll
push
cwtl
nop
and
nop
lea
test
jl
das
fninit
call
inc
xchg
xor
inc
mov
arpl
adc
bound
jne
cmp
jmp
popa
lret
int3
shrb
cs
stos
leave
sbb
loope
jecxz
and
repz
adc
addr16
jmp
xchg
js
add
inc
insl
lock
add
in
imul
xor
sub
movsb
sub
cmp
xchg
jo
lea
push
inc
jae
insl
xor
mov
nopl
add
cmpl
sub
xchg
lcall
scas
gs
leave
xor
mov
ficompl
sub
xlat
hlt
pop
jne
outsb
xor
ds
sbb
add
cs
jnp
mov
add
add
cmp
dec
pushf
pop
shrl
add
or
or
sahf
jo
mov
jb
test
or
lea
xlat
idiv
pop
cmp
dec
andb
lret
cmp
fs
in
gs
inc
mov
int3
inc
sbbb
push
add
lods
sub
mov
sub
int3
cmpsl
xor
mov
dec
pop
cmc
jno
cmp
js
add
arpl
xor
or
lds
pop
in
push
enter
sbb
sbb
ljmp
xor
mov
loopne
mov
outsb
jl
cmpsb
xor
jmp
jmp
adc
jmp
dec
outsb
fnstcw
pop
pop
cmp
ret
adc
xor
ss
lcall
add
xchg
mov
ds
mov
xchg
push
shll
out
mov
mov
pop
sub
stos
xchg
addr16
and
dec
ret
daa
push
pop
xchg
movsb
rolb
xchg
xchg
inc
sbb
cmp
shll
adc
or
and
movsb
sub
dec
outsl
js
lds
jg
mov
outsl
dec
fwait
push
cmc
inc
movsl
jmp
xchg
mov
iret
mov
dec
les
inc
sub
test
lods
dec
adc
inc
in
or
test
inc
and
imul
mov
pop
mov
xor
cmp
jge
adc
mov
push
lahf
or
xor
xchg
arpl
fldt
orb
testb
xchg
adc
hlt
adc
xchg
fldl
mov
add
mov
jg
lcall
jge
xchg
add
repz
add
rolb
out
cmp
in
mov
rclb
mov
xchg
insl
sti
movsl
pop
loop
clc
mov
loope
mov
dec
in
aaa
mov
iret
add
jns
test
loop
aad
ja
adc
ret
inc
dec
sbb
sub
mov
xor
or
aam
push
rol
fnstcw
jo
divb
add
sub
dec
and
jnp
dec
pop
pop
and
dec
cmc
pop
pushl
adc
pop
lahf
movsl
mov
in
add
push
lret
jbe
push
cmp
cmp
sub
xchg
add
mov
ds
mov
pop
sbb
out
stos
int
xor
jo
and
addl
add
cmp
fadd
mov
sub
lea
push
into
clc
stos
jae
fsub
sub
popf
adc
mov
repz
repz
adc
pop
gs
cs
lcall
xor
push
mov
adc
jg
pushf
loopne
mov
loopne
in
jb
inc
in
push
cwtl
int
jns
or
jl
mov
test
fldl
dec
das
popa
fs
and
nopl
pop
das
std
in
dec
cmc
pop
les
scas
shrb
imul
comiss
push
xchg
aam
mov
frstpm(287
pop
mov
adc
out
aaa
fwait
push
dec
jmp
lea
lods
add
sbb
or
and
std
mov
push
negl
mov
sbb
xchg
mov
mov
pushf
fcmovne
pushf
push
dec
push
pop
pusha
push
push
mov
mov
mov
adc
jp
push
push
idiv
insl
ja
ret
sbb
fsubrl
add
jae
mov
cmpsb
cwtl
pop
loope
mov
lcall
pop
xchg
ljmp
loop
les
pushf
xor
iret
stc
xchg
xor
sysexit
faddl
movsb
pushf
mov
dec
xor
jnp
in
cmp
dec
sub
sbb
mov
mov
and
inc
fst
cmp
jb
mov
icebp
scas
mov
int3
xor
jp
dec
xchg
ret
xlat
loop
daa
fs
sbb
outsb
cmp
push
sbb
mov
shl
fs
sub
lods
bound
repnz
in
mov
or
shll
das
cld
dec
leave
nop
iret
pop
rcrb
mov
mov
ljmp
push
push
lods
sti
bnd
push
leave
out
incb
je
lcall
aaa
xlat
sub
mov
adc
xchg
sti
push
lds
in
insl
ljmp
push
dec
sub
mov
test
mov
mov
xchg
mov
push
cmpsl
mov
aas
mov
mov
aas
pop
and
push
mov
cld
jo
push
cmp
sub
sti
das
sbb
cmpl
enter
mov
push
dec
cmp
xor
hlt
jae
shufps
dec
iret
stos
xchg
and
imulb
or
mov
mov
jecxz
sbb
or
cwtl
outsl
push
dec
fimull
dec
jnp
fwait
rorl
mov
rolb
lcall
and
sub
sahf
aaa
sti
xchg
add
cmp
xchg
dec
shll
sub
push
js
aaa
ja
adc
mov
jl
das
shll
xchg
xor
pop
insl
pop
loopne
js
dec
loope
movsb
sbb
cmpsb
inc
cmp
sub
lods
xlat
test
andb
mov
rcl
mov
in
inc
jnp
subl
inc
xchg
aaa
or
mov
inc
mov
jb
push
ret
adc
out
jg
xor
mov
sub
pop
insl
mov
dec
sahf
add
cmp
inc
or
mov
and
fisubrl
cmpsl
mov
sub
fdivr
add
mov
in
out
or
pop
cli
fdivs
or
mov
jp
aam
jl
ret
dec
push
dec
imul
cmpsl
xchg
aad
fstpl
addr16
adc
loope
mov
push
sarb
add
jp
jne
gs
stc
xchg
decl
fstpt
push
adc
push
dec
mov
test
fmulp
pop
xchg
jns
lea
rcrl
lock
xchg
outsb
insb
lods
cmp
add
stc
pop
sub
stos
jns
dec
sub
je
sbb
jno
add
repz
add
in
push
hlt
or
mov
cmp
xor
jb
jecxz
xchg
and
sub
pop
decl
jl
pop
lods
ja
xchg
cli
movsl
push
xlat
subb
enter
and
fwait
xchg
pushl
arpl
xchg
and
bound
jbe
sti
xchg
and
jg
ret
gs
fwait
cmp
lds
movsl
pop
push
insl
lcall
inc
xchg
sbb
and
ret
dec
mov
adc
jno
jns
rcrb
fistps
and
es
aad
add
mov
push
je
gs
jl
lods
sbb
les
xor
clc
in
xchg
lahf
fwait
pop
loope
divl
and
xchg
dec
inc
lea
mov
popf
jbe
les
mov
and
movsb
jne
stos
addr16
push
mov
xor
imul
cmp
scas
inc
pusha
into
sub
int3
cli
jecxz
pop
dec
and
and
popa
add
scas
mov
mov
jbe
push
jle
outsl
test
or
test
and
in
mov
adc
call
jl
mov
scas
jg
adc
add
pop
xchg
inc
mov
lahf
jns
xor
and
and
ja
test
inc
repz
mov
test
stos
mov
mov
lret
inc
pop
push
lods
fstpt
popf
cmpsl
dec
or
aaa
cmp
or
dec
mov
imul
rorb
decl
inc
xor
iret
xchg
lret
call
aad
jb
ret
and
push
test
out
lcall
mov
lcall
xchg
in
jo
in
nop
int
jp
andl
xor
pop
pop
in
pusha
mov
fcompl
sub
jl
and
dec
fbld
cld
add
fldenv
stc
add
stc
int
pop
pop
mov
jmp
sub
outsl
bound
jbe
fnsave
fwait
push
xlat
push
pop
movsl
jp
mov
push
add
push
cld
loope
jmp
xchg
sub
mulb
dec
mov
push
gs
sub
mov
push
jo
jne
fnstsw
inc
dec
cltd
push
aad
nop
add
cmp
repz
pop
aad
inc
loope
inc
outsb
and
fdivl
ret
mov
mov
sti
test
xchg
mov
mov
test
int3
mov
popf
fs
cwtl
je
mov
mov
mov
enter
mov
sbb
sbb
mov
out
pop
js
jmp
mov
jmp
sbb
ds
pop
xchg
push
outsl
mov
jne
jmp
add
jmp
dec
mov
in
mov
add
orl
mov
xacquire
lock
shl
sbbl
mov
ret
in
clc
xchg
push
and
push
jae
shl
insb
test
push
inc
mov
ret
fisttps
fcompl
gs
ret
daa
rorb
test
pop
test
xor
rcrl
clc
icebp
cltd
xor
dec
mov
gs
pop
repnz
subb
mov
xor
push
loope
in
push
imul
sub
adc
jl
sahf
outsb
xchg
ss
sub
fsub
add
iret
xchg
or
xor
push
dec
inc
popa
pop
push
fcmovnu
icebp
or
or
mov
sbb
cmc
adc
push
sub
pop
jecxz
push
psrlq
fstpl
mov
cld
orb
xor
cmp
push
out
aas
inc
loopne
insb
out
mov
xor
jnp
mov
push
and
lods
sbb
sub
scas
pop
pop
addr16
cmp
mov
ret
pop
xchg
mov
sbb
xchg
ret
es
xchg
bound
arpl
xchg
roll
push
aaa
pop
push
test
cmp
movsb
stc
cmp
push
add
in
inc
mov
sub
xor
shr
xor
add
pop
inc
adc
add
xchg
fstp
push
inc
mov
inc
pusha
fstpl
lret
pop
mov
jge
into
pop
jl
jge
cltd
sbb
pop
mov
xor
stc
insb
mov
negl
repnz
xchg
xor
nop
xchg
fmul
js
sbb
sub
add
adc
dec
jge
xchg
outsl
jge
lcall
add
repz
add
mov
dec
leave
lret
xchg
inc
out
sbb
pop
lcall
jb
or
or
adc
out
fs
aam
xchg
outsl
movsb
fs
ja
mov
lcall
cli
jne
xchg
or
or
fdivr
jae
inc
pop
mov
mov
outsb
ret
iret
test
push
xor
dec
lods
jae
and
shrb
stos
mov
test
xor
mov
pop
mov
jg
sbb
mov
pop
jmp
xchg
push
adc
sbb
repz
sub
stos
stos
in
les
out
cli
pop
sub
jmp
dec
ret
and
int3
ret
dec
sti
hlt
rclb
push
and
push
mov
movsl
rcrl
call
ret
lahf
insl
mov
loop
xchg
mov
inc
xor
jno
ret
cltd
test
dec
lahf
sub
sub
jg
dec
sub
shl
aad
add
std
xchg
push
fcom
adc
scas
iret
es
les
adc
pop
ret
jecxz
rorl
scas
mov
push
and
pop
jecxz
xchg
shlb
out
inc
rcrb
mov
enter
popf
push
cmpsl
and
mov
movsb
jle
lcall
and
jns
mov
lods
in
cmpsl
lcall
jns
jle
xchg
rolb
adc
mov
or
push
iret
into
mov
pop
pop
mov
pop
scas
adc
stos
jo
jo
dec
sbb
aam
test
adc
cli
loope
rcl
jnp
sbb
in
push
mov
xchg
xchg
addr16
or
lds
xchg
inc
xlat
fisttps
mov
iret
jg
cs
in
xchg
es
rclb
sub
ror
lret
ret
jecxz
enter
dec
fwait
imul
push
inc
cmpsb
push
jnp
enter
dec
aas
test
lcall
sbb
imul
cmp
dec
repz
pop
jge
sti
or
or
mov
add
aam
popa
unpcklps
fdivrl
sarw
jno
add
jne
out
mov
les
test
mov
pop
subb
imul
loop
hlt
push
bound
popf
cmp
inc
pop
mov
xchg
jecxz
addr16
xchg
sti
and
pop
aas
in
lea
xor
cmp
lret
cld
in
sub
jl
adc
mov
jbe
cli
mov
cltd
repnz
test
mov
clc
loop
aam
adc
ss
mov
xchg
lcall
jp
push
stos
jge
and
out
pushf
jge
lcall
pop
decb
mov
jne
decl
jbe
das
jg
nop
ret
ret
xor
lahf
mov
xor
rcrl
xorl
or
inc
out
mov
bound
cwtl
and
xlat
rcrb
ret
pop
cltd
jns
lds
faddl
sti
sub
fstl
mov
mov
lea
mov
push
lds
pop
sahf
test
xor
pop
ljmp
loopne
aam
xchg
add
loop
jl
xchg
lahf
fisubl
cli
dec
xor
push
cld
icebp
mov
adcl
sti
sub
cs
test
roll
out
ja
arpl
jecxz
std
xchg
stos
add
rorb
lahf
push
fs
fwait
sub
inc
sbb
sbb
repnz
dec
arpl
and
stos
pop
daa
jg
mov
push
sub
cmp
ficoml
xchg
imul
push
rolb
adc
xorl
cmp
cmc
inc
in
fwait
icebp
xchg
push
xorb
mov
icebp
push
adc
clc
cmc
jp
jno
pusha
pushf
ds
dec
add
mov
test
mov
mov
imul
test
pop
add
lock
call
lret
xchg
test
gs
push
lret
leave
loop
mov
aas
cmc
iret
mov
pop
addb
mov
jns
and
jmp
stos
add
pusha
icebp
dec
pop
into
inc
sti
sbb
jb
ja
xchg
es
mov
mov
shrb
pop
mov
in
xchg
negb
es
inc
loop
cmpsl
lock
cmp
inc
jne
pop
pop
sbbb
adc
nop
sarb
loop
inc
mov
xchg
int3
xchg
adcb
dec
xchg
or
add
add
xlat
hlt
push
ljmp
sub
cmp
push
movsb
add
repz
add
push
push
addr16
dec
inc
inc
push
mov
push
adc
pop
addr16
add
inc
ret
sub
test
hlt
jmp
pop
mov
js
sub
dec
sbb
lock
lods
mov
ret
sbb
jg
stos
inc
and
pop
jmp
add
mov
movsb
das
mov
pusha
lea
imulb
stos
ja
insl
push
insl
int
mov
jb
cmpsl
and
push
xor
jecxz
jmp
fstps
push
jns
lcall
and
mov
icebp
mov
outsb
xor
mov
add
test
bnd
stos
ljmp
pop
imul
filds
cmp
mov
add
pop
push
pminub
cmc
into
mov
and
mov
mov
cs
mov
inc
icebp
test
mov
fbld
adc
add
cmp
repnz
push
or
ret
jg
fisubs
andl
repz
add
mov
mov
test
push
jp
cmp
iret
mov
ficomps
imulb
cmp
pop
push
push
lcall
fcom
or
in
pop
jp
jg
out
lahf
cmp
inc
repnz
sbbb
add
jne
push
cmp
jmp
loop
dec
adc
lods
test
and
xchg
and
cmp
outsb
rol
jl
test
fstpl
ja
lods
add
popa
outsb
mov
push
xor
add
xor
dec
enter
push
and
js
sub
inc
ret
pop
mov
sarl
scas
aaa
ficompl
pop
inc
cmpsl
aas
lods
mov
adc
adc
dec
dec
lahf
lods
and
mov
jb
adc
daa
lods
inc
dec
xlat
mov
add
add
jg
aaa
inc
mov
mov
mov
loop
inc
fstl
or
sbb
jmp
sub
fwait
pop
push
xchg
leave
mov
and
insl
std
add
mov
jge
fwait
in
and
jno
push
pmullw
mov
mov
push
std
ss
mov
cmp
and
mov
add
call
cmp
or
leave
sti
cmp
data16
ja
xor
int3
sbb
jbe
inc
mov
push
out
sarl
scas
cmp
xchg
es
das
mov
scas
mov
push
nop
cwtl
movsb
unpckhps
mov
incl
movsl
and
je
sbb
mov
push
iret
mov
mov
stos
cmpb
lds
add
mov
sahf
movsl
test
and
aaa
insl
dec
and
out
mov
in
test
mov
shll
and
inc
push
cmp
jl
inc
in
popf
push
sub
adc
dec
leave
xor
inc
repnz
mov
cmpsl
repnz
in
lds
mov
jnp
or
pop
and
sbb
cwtl
shlb
push
inc
pop
mov
xor
fmul
sub
cmp
fwait
mov
inc
mov
cmp
xlat
mov
mov
shrl
mov
std
sub
mov
and
jo
aas
mov
sbb
sub
xchg
insl
ficomps
mov
mov
mov
stos
mov
repz
stc
in
xor
rcll
cmp
xor
mov
aaa
push
inc
aam
movsl
cltd
xorl
dec
movb
adc
mov
xor
dec
xor
repz
mov
and
fwait
mov
mov
mov
xorb
sub
add
cltd
mov
and
inc
shl
ret
imulb
out
repz
push
dec
mov
call
push
jno
repnz
jl
out
outsb
addb
sbb
cli
or
movsb
xor
mov
xchg
sbb
mov
mov
loopne
pop
js
adc
fcompl
out
pushf
ficomps
cld
add
and
adc
or
xlat
scas
xor
test
mov
sub
inc
pushf
jb
jo
cmp
or
cli
mov
es
jg
call
fadds
sbb
mov
or
out
fbld
or
repz
push
add
sbb
xorl
mov
mul
cmp
enter
push
sarb
xchg
add
add
cvtdq2ps
dec
sar
adc
pop
decb
add
repz
add
test
aam
xor
dec
jno
xor
aas
test
mov
les
pop
xor
leave
fwait
arpl
jne
aad
js
out
aaa
sahf
mov
and
adc
mulb
sbb
fs
push
lahf
int3
andb
cltd
clc
test
std
cmp
mov
mov
into
cmpsb
sahf
sbb
jnp
sub
dec
jbe
movsl
pop
clc
xor
pop
xchg
adc
sub
push
sbb
aad
mov
cmp
test
add
fdivrs
fldenv
addl
daa
popa
mov
out
mov
insb
mov
xchg
mov
scas
into
mov
nop
sbb
out
push
aas
mov
repnz
xlat
leave
adc
and
pusha
xor
cmp
add
int
sbb
adc
in
mov
or
js
cmc
out
sbb
dec
xor
fiaddl
cmp
test
xor
imul
loopne
icebp
popf
lret
mov
out
mov
aam
sti
pop
stos
subb
cmpsb
or
jge,pt
mov
outsl
std
test
roll
stc
sbb
xor
jno
pusha
bound
add
pop
movsb
mov
jmp
test
or
sub
out
mov
outsl
out
mov
stos
sbb
bound
push
out
movsl
fsubrp
push
enter
jb
mov
nop
orb
cltd
fwait
pop
sbb
push
enter
lret
cmc
dec
mov
push
cmp
sahf
enter
jl
cld
jne
xchg
add
pop
stos
int
shlb
adc
xchg
or
sti
xchg
in
mov
sarb
outsl
int
jp,pn
sahf
or
in
data16
or
dec
movaps
inc
aas
out
test
testb
sarl
out
std
push
lcall
test
lret
or
stos
ss
mov
push
imul
add
fildl
cs
loop
cli
fimull
imul
dec
outsb
adc
jns
pop
lcall
std
rorl
or
adc
mov
cmp
cmpsl
stc
xor
fnstsw
jnp
nop
mov
pop
and
repnz
test
pop
mov
mov
test
fwait
subl
adc
push
sbb
popf
cmp
mov
dec
jle
insl
and
ret
mov
mov
sbb
sbb
cmpsl
or
daa
test
sbb
xchg
adc
cld
call
andb
insl
sub
fcomip
pop
mov
stos
dec
xchg
insb
les
sub
mull
add
adc
stc
mov
inc
inc
loope
loopne
aas
mov
add
mull
pushf
lret
mov
dec
cli
jne
lds
shll
jne
out
xchg
js
sbb
andl
adc
imul
xor
mov
ss
inc
fistpl
push
inc
lods
adc
mov
insl
mov
push
pop
xor
sti
mov
sub
out
lods
jmp
push
cwtl
test
enter
fildl
mov
push
pop
or
xchg
sarb
inc
lods
sbb
add
cli
jno
cmp
mov
imul
adcl
cli
jle
cmp
enter
xor
adc
sbb
enter
push
jecxz
sar
out
bound
pushf
push
cmp
xor
dec
mov
insl
popf
push
cmc
and
cmc
mov
lret
jl
adc
imul
add
sub
or
mov
out
shr
es
jo
shll
sbb
mov
sub
jae
add
and
aaa
mov
or
push
daa
fisubl
mov
fidivs
add
mov
adc
popf
stc
fldt
dec
push
rcr
sbb
cmp
fmuls
aam
jae
mov
das
inc
jmp
mov
das
pop
jae
lods
dec
dec
push
adc
pusha
pop
stc
xchg
mov
pop
clc
test
mov
push
pop
cmovl
repnz
and
mov
inc
add
sti
pfrsqrt
mov
jb
lds
mov
ljmp
mov
iret
xchg
cli
sbb
jg
test
loopne
xchg
mov
fucomi
adc
sub
lock
pop
push
repz
cmp
pop
cmp
cmp
cmp
add
add
dec
mov
lret
mov
pop
aas
cmpsb
cwtl
cmp
add
add
lret
inc
and
lahf
pop
mov
enter
out
out
xchg
pop
pop
cs
shll
xchg
add
mov
pop
dec
jmp
mov
data16
std
dec
sbb
rcrl
scas
psrad
pop
fdivrs
and
push
movsb
and
mov
cs
push
and
mov
jno
mov
cmp
leave
loopne
imul
push
push
adc
mov
inc
mov
pop
in
xor
dec
lock
jb
xchg
push
sti
hlt
xor
cltd
aas
inc
in
lock
add
mov
or
dec
in
lea
cwtl
cmpsb
int3
test
call
jge
sbb
out
cld
iret
push
jle
ret
push
adc
in
int
icebp
pop
sub
orl
fildl
mov
int
mov
fidivrs
mov
arpl
xor
repnz
xchg
outsl
aad
xor
sbb
jne
out
loop
dec
cmp
cmp
out
jge
and
add
inc
rol
jnp
mov
and
cmp
sbb
imul
xchg
cmp
je
or
sbb
in
cmp
pop
sarl
pop
in
les
in
and
jo
jmp
mov
pusha
imull
fidivs
pushf
les
mov
ja
insl
xlat
out
mov
dec
inc
cmpsl
shlb
sub
enter
in
es
jmp
ret
pop
ljmp
xchg
notb
cmp
mov
add
and
fs
inc
je
std
cmpsl
imul
push
add
fmulp
adc
push
cmp
ss
mov
pop
adc
lcall
adcb
mov
outsb
fsubp
mov
or
jnp
loope
jnp
jl
add
cwtl
loopne
popa
push
mov
mov
adc
fs
mov
ja
scas
sbb
scas
push
fmul
lret
sub
sub
inc
into
xchg
outsl
cmpsb
gs
aad
push
lods
test
pop
out
or
lcall
inc
mov
std
mov
mov
xchg
push
rcll
sarb
mov
scas
pushf
xlat
shlb
dec
stos
incb
mov
or
lcall
inc
dec
lods
dec
inc
or
mov
fcomps
leave
xor
mov
lods
ficompl
imul
and
add
ficoml
rcr
inc
pop
mov
jle
ja
adc
aaa
roll
rcll
mov
add
cld
outsb
sahf
scas
orl
aad
or
cmpl
fsub
not
cltd
xchg
cli
addr16
sbb
dec
ljmp
adc
cmovg
mov
jge
cmp
adc
or
bnd
ret
aad
mov
inc
dec
repz
movsl
pushf
and
jg
or
push
lcall
cmpsb
addr16
stmxcsr
les
scas
sub
test
lret
sub
ret
mov
or
push
ret
cld
pop
sbb
psubsw
ret
outsb
iret
repnz
jmp
sbb
movsl
inc
ss
test
or
lods
mov
mov
mov
test
fwait
push
sbb
sub
cs
xchg
sti
outsl
push
or
xor
or
xchg
pop
mov
xor
ss
lods
cmp
das
fidivrl
pop
xchg
sbb
xchg
js
cmc
add
or
rol
xor
xchg
adc
pop
push
sti
clc
xchg
clc
lods
push
cmp
mov
enter
out
push
lahf
pop
aaa
cli
add
jb
out
jmp
inc
mov
mov
push
sti
pop
inc
out
into
dec
aas
inc
dec
out
cmpl
imul
shrb
dec
scas
fnstcw
jnp
fstl
insb
and
mov
sbb
fisubrl
cmc
inc
cmp
push
xor
arpl
mov
loope
and
cwtl
mov
out
adc
lahf
int
es
pusha
iret
jae
lret
inc
lock
mov
or
push
and
adc
ljmp
lods
mov
jb
inc
adc
mov
jmp
xor
les
movsb
int
cld
push
gs
mov
mov
push
cmc
add
repz
imul
push
sbb
cmc
imul
xchg
push
pop
std
xchg
add
jae
imul
inc
xchg
daa
cmp
mov
and
xor
add
cltd
and
mov
sub
mov
mov
xchg
jbe
out
call
in
lcall
adc
mov
adc
or
sbb
inc
mov
mov
popf
mov
out
pushf
je
ljmp
mov
xchg
mov
lds
jno
sbb
cmpsb
hlt
inc
push
outsl
jecxz
push
pop
ja
inc
pushf
rcl
hlt
in
mov
mov
jns
mov
mov
xor
xchg
push
sbb
mov
sbb
fldl
jb
clc
stos
cwtl
mov
mov
xchg
xor
das
je
sti
cmp
xchg
pushf
xchg
popf
and
add
pop
imul
xlat
push
or
jecxz
or
imul
stos
sub
sub
in
jo
xchg
inc
ljmp
jne,pn
or
add
out
inc
mov
int3
pop
andl
dec
pop
lock
and
inc
pop
fldcw
test
xor
mov
sub
ret
mov
pop
inc
fstps
rclb
lods
cmp
jae
jl
cld
jae
push
aas
pop
lcall
push
add
pop
push
cli
loopne
cld
std
sub
into
sbb
jbe
mov
stos
icebp
rcrl
push
inc
aas
mov
mov
ret
push
insb
lods
cli
rcrl
out
std
repnz
pop
in
clc
loop
punpckhwd
les
insl
sbb
and
jg
xor
inc
mov
xor
je
arpl
push
enter
pop
imul
sbb
sbb
clc
mov
jae
ja
cmp
daa
dec
arpl
push
sub
and
aaa
pop
or
inc
les
dec
xchg
and
push
fidivrs
test
xchg
dec
bound
mov
xor
std
adc
or
lods
dec
out
push
dec
pop
sub
in
divb
and
fsub
sbb
je
mov
aas
push
mov
loopne
add
insb
fistpll
adc
daa
in
pop
js
or
mov
es
xlat
pop
cs
daa
xor
inc
xchg
add
jecxz
pop
jo
add
fwait
loope
arpl
pop
adc
push
sbbb
aam
or
jmp
xchg
cmp
in
dec
test
clc
cmp
mov
lock
outsb
ret
sahf
jb
lods
or
repz
cli
popf
xor
mov
lock
or
stos
jmp
xchg
mov
jnp
divl
in
pop
pop
jp
orl
inc
mov
in
leave
mov
cs
push
fdivl
lds
pop
mov
pop
ss
mov
mov
ja
cmpsb
cs
js
sub
push
xor
mov
xlat
fnstenv
push
or
insl
and
popf
jmp
outsl
adcl
mov
jmp
test
and
or
repz
mov
add
or
es
inc
loopne
mov
sti
push
dec
mov
pop
in
push
cmp
sbb
ror
xorb
and
mov
adc
jo
daa
out
test
repz
movsl
outsl
pop
inc
sub
aaa
loope
loopne
sub
cmpsl
jmp
push
mov
test
mov
pop
pop
xchg
dec
jg
pop
mov
aaa
mov
xchg
ds
mov
fisttpl
mov
inc
dec
push
stos
ljmp
xor
dec
sub
nop
shrb
jo
pop
pop
fcmovu
jecxz
jbe
imul
dec
push
insb
inc
jge
mov
xchg
sar
fimuls
sub
mov
pop
add
pop
sarl
pop
in
mul
cmc
push
sub
xor
cmp
fcmove
cld
out
adc
in
cmp
dec
ja
jnp
jg
jge
popf
aas
imul
sub
gs
dec
in
mov
mov
int
sub
sahf
adc
inc
sub
jo
cld
cmp
jge
ss
enter
mov
divb
mov
xor
cmp
push
fildl
ljmp
dec
sarb
rcrl
jne
lea
scas
sbb
push
or
nop
into
push
xchg
cld
xor
adcl
mull
lret
je
scas
xchg
xor
push
nop
add
lock
xor
push
pop
add
arpl
adc
mov
loopne
movl
std
or
push
aaa
mull
mov
add
sar
data16
mov
out
ficoml
add
repz
add
mov
push
pop
sahf
dec
out
pop
arpl
aas
jnp
icebp
xchg
scas
adc
ljmp
pop
aaa
scas
jmp
mov
notl
jecxz
dec
ret
sub
or
aad
movsb
and
sub
nop
mull
sbb
outsb
imul
inc
sahf
sub
or
movsl
pop
rcll
in
pusha
loope
cmp
int
mov
aaa
push
aaa
mov
ljmp
addr16
div
jle
je
mov
mov
fadds
mov
dec
mov
xchg
mov
xchg
test
sub
out
cmp
dec
push
and
fdivrs
std
sbb
mov
ret
flds
loope
jmp
aaa
dec
mov
lods
je
dec
inc
orl
ss
cltd
or
fcmovne
add
ret
out
fists
cmp
jb
pop
test
std
mov
sbb
xor
std
push
lret
lret
int3
fsubr
cmc
pushf
aad
cmp
cmp
push
xor
clc
adc
popf
lds
pushf
pop
push
out
shrl
push
sub
outsl
mov
jnp
scas
in
xchg
jmp
mov
jg
sbb
inc
out
mov
in
sub
sbb
lods
mov
mov
dec
es
push
roll
sbb
push
mov
or
repz
test
cltd
mov
adc
int
mov
stos
mov
cltd
aad
inc
push
mov
mov
int3
pop
roll
add
cli
mov
pushf
jno
adc
adc
test
loopne
add
iret
xor
fmull
dec
lret
int
jge
xlat
push
lahf
or
pop
push
or
out
mov
jae
cmp
pop
aam
pop
mov
xor
sub
ret
mov
mov
fwait
pusha
cmp
inc
ret
icebp
cld
xchg
fmuls
iret
and
scas
jp
pop
xchg
xor
mov
pop
out
xchg
and
pop
shlb
inc
push
xchg
mov
stos
jnp
xchg
sub
lods
ss
jbe
or
stos
out
push
cmpsl
mov
sbb
fsub
out
cwtl
cltd
das
xchg
push
mov
stos
pop
mov
loop
repnz
xchg
jb
xchg
test
adc
outsl
out
out
fcmove
addr16
inc
jle
les
popl
lret
and
inc
mov
incb
and
adc
mov
cmpb
lods
mov
push
add
or
jl
mov
loopne
ss
ds
xchg
movsl
aaa
lds
xor
test
ret
shll
jmp
test
out
movsl
aam
mov
xorl
data16
out
inc
test
dec
jge
adc
inc
fnsave
outsl
push
adc
sbb
dec
pop
cld
rcr
cmc
xchg
icebp
cli
ret
mov
push
inc
ja
insl
cmp
inc
cmpsl
lock
jmp
jo
mov
and
jge
push
sub
mov
lods
test
mov
lods
repz
movb
dec
or
jle
sub
jns
push
mov
push
ljmp
inc
dec
faddl
stc
push
out
or
push
mulb
sbb
iret
mov
add
ret
inc
fsubrl
adc
pop
mov
inc
sub
mov
stc
sub
xchg
fdivl
icebp
cmpsb
add
imull
dec
pop
or
dec
loop
out
mov
cmc
push
mov
mov
pusha
dec
mov
fisttpll
pmuludq
mov
sbb
mov
cmp
lods
push
push
push
lcall
push
adc
or
stos
sbb
xor
fs
pop
cli
movsl
lret
dec
dec
jmp
sbb
lock
cmpsb
mov
cwtl
jp
jl
daa
pop
xor
pop
dec
mov
lcall
and
dec
aas
fists
imul
or
cmp
rep
shll
sti
add
rolb
sub
cmp
loop
mov
stc
jae
and
mov
xchg
inc
mov
push
mov
pop
cld
out
jp
inc
push
pop
lods
sub
add
mov
adc
pop
in
rclb
mov
jmp
scas
mov
mov
mov
sbb
xchg
movsb
stos
push
frstor
inc
insl
pop
aaa
push
call
add
add
add
iret
cmp
outsl
jecxz
push
insl
mov
test
mov
add
stos
sbb
xor
and
xor
cmc
and
sub
add
leave
mov
shll
icebp
or
ds
sub
movsl
mov
adc
mov
cmpsl
loop
xchg
jp
aad
mov
inc
aas
sbb
mov
jecxz
jb
mov
scas
xchg
scas
loopne
jge
push
addl
bnd
mov
jno
cmpsl
in
mov
xor
negb
xchg
lahf
push
mov
and
inc
or
pusha
aad
inc
adc
repz
hlt
xchg
loop
and
scas
arpl
test
test
lods
jnp
sub
shlb
xchg
push
lods
sahf
pop
push
std
sbb
dec
inc
jno
out
stos
xlat
negl
pop
push
call
test
mov
jecxz
rep
dec
mov
fstl
out
sarl
insb
loopne
push
cmp
pushf
ficoms
dec
push
lock
shll
cmp
xchg
lds
cmp
in
mov
and
dec
jo
xchg
rcrl
adc
xchg
fsubs
jp
cmpsb
das
scas
pushf
mov
dec
adc
add
pop
pop
call
pop
jmp
lret
ret
mov
inc
jg
pop
dec
push
int
inc
aam
or
notb
mov
icebp
adc
push
vunpcklpd
movsb
xchg
ja
jg
rcrl
popa
adc
and
sbb
push
ret
push
push
lret
cmp
push
lcall
cmc
xchg
daa
inc
fcmovu
js
inc
xchg
push
xchg
dec
shrl
sbb
rcll
xlat
xor
call
cmpsl
out
scas
sub
hlt
push
lcall
ficoms
roll
mov
outsl
sbb
sbb
xchg
sti
flds
cmp
jmp
sbb
jecxz
dec
xchg
mov
push
roll
lea
fs
int3
cmp
mov
pop
out
pop
adc
aam
fs
loop
cmc
xchg
ss
xor
mov
or
push
aam
popa
insl
ss
jge
test
daa
add
stc
int
into
stc
xor
mov
fistpl
jp
insl
mov
xor
dec
mov
dec
xchg
sbb
cmp
inc
call
push
mov
pushf
std
xor
or
mov
mov
push
jbe
test
fistpll
jecxz
scas
negl
fldl
je
mov
lock
pop
stos
in
sub
push
out
add
sti
scas
aas
and
pop
sbb
xchg
cwtl
rcrl
xchg
xchg
lret
cmpsl
dec
stc
pop
cmc
jmp
sub
cmp
xor
adc
mov
inc
and
stos
fdiv
stc
mov
and
mov
push
iret
pop
lock
adc
pop
shlb
xchg
and
mov
popf
lds
dec
iret
loop
sbb
mov
mov
mov
pop
push
cwtl
fsubrp
js
je,pn
sarb
mov
cmp
call
fwait
enter
clc
in
insl
out
xor
and
dec
cmpsl
mov
pop
ja,pn
mov
jle
inc
jecxz
mov
mov
mov
jb
mov
xor
pop
lods
mov
imul
mul
xlat
in
cmp
fdivl
mov
xbegin
je
inc
jnp
insb
mov
int
in
push
dec
sti
xchg
push
js
sbb
test
fiaddl
push
xchg
test
jle
adc
jmp
std
out
shrl
rclb
push
aam
and
sub
inc
repz
jg
iret
out
ljmp
mov
xor
imul
movd
push
clc
psubsw
sub
pop
jno
sbb
mov
into
add
inc
or
pop
gs
lret
jp
jns
lcall
inc
sub
dec
add
or
mov
pop
ja
xchg
add
sbb
xchg
push
mov
nop
sbb
inc
dec
mov
mov
and
clc
sahf
and
mov
nop
sub
sbb
hlt
movsl
mov
decl
movsb
loope
adc
cwtl
xchg
popf
or
jg
xor
fcomip
lea
imul
imull
sbb
cmp
xchg
lcall
push
mov
int
dec
add
or
and
aas
in
xchg
stos
cwtl
add
movsl
imul
cmpsb
scas
faddl
add
add
adc
push
std
and
and
add
repz
add
mov
mov
mov
out
cmp
movsl
movsb
inc
jmp
mov
imul
mov
mov
adc
mov
sub
jbe
lret
out
jle
push
jnp
jmp
dec
xor
dec
jns
fidivs
xor
sbb
xor
fldenv
inc
push
push
jno
flds
push
sarl
or
lret
sub
or
jge
mov
shll
sti
popf
push
mov
xorl
and
and
mov
mov
mov
add
add
jns
add
lret
or
xlat
xchg
mov
mov
cs
pop
test
xlat
lods
ret
leave
mov
call
push
ficoml
fbld
imul
push
lret
mov
mov
test
mov
ljmp
scas
enter
jmp
lcall
lds
nop
jne
add
add
movsb
cmp
add
xchg
and
mov
pop
frstor
adc
mov
jle
or
xor
popa
movsb
sub
ret
xchg
inc
mov
lret
addl
test
or
gs
cmpsl
mov
out
mov
sub
inc
add
rcrl
push
std
inc
xchg
add
pop
mov
cmp
sub
sahf
cmp
push
rclb
out
mov
or
adc
push
and
xchg
out
push
inc
push
mov
jecxz
dec
sub
loop
mov
pop
lods
push
cmp
or
pop
xchg
out
loopne
adc
pop
mov
lods
hlt
loopne
pop
add
sti
xchg
dec
sbb
xor
mov
cwtl
cmpsl
lahf
hlt
daa
nop
out
call
scas
js
roll
lret
movsb
fdivl
out
jne
jae
stc
ljmp
push
adcl
fwait
adc
fdivp
shll
shrb
push
stos
lods
inc
lea
xchg
mov
mov
mov
addr16
cld
shlb
add
mov
cmp
jmp
icebp
js
andl
dec
ljmp
movsl
inc
mov
popa
loop
in
das
outsl
jb
sbb
test
cmp
stos
push
lret
std
cwtl
addl
dec
cs
ss
popf
dec
dec
xor
rcl
push
jle
fisubrl
ret
dec
push
and
insl
repnz
mov
in
scas
mov
aas
scas
mov
jle
push
dec
imul
lret
in
lcall
into
mov
dec
mov
or
mov
mov
jno
push
jge
stc
aam
jo
cmp
jl
into
mov
stos
and
out
mov
ret
popa
inc
ret
jb
movsb
aas
jl
mov
popl
mov
or
test
fwait
ret
lcall
jnp
mov
sub
ds
int
sub
into
and
pop
xchg
pop
ja,pn
sti
gs
pop
jmp
adcl
inc
lea
scas
stos
add
insl
jecxz
stos
test
adc
adc
out
add
xchg
inc
and
jge
pusha
dec
daa
dec
ret
pusha
or
test
mov
mov
pop
mov
loop
dec
popf
xorb
mov
inc
xor
mov
scas
into
cmpb
jne
mov
or
mov
or
xor
jecxz
stc
jmp
popa
add
in
add
clc
inc
pop
adc
mov
fs
pusha
loope
adc
daa
xor
sub
cmp
mov
fnsave
into
dec
push
aam
popl
add
push
mov
mov
pop
scas
mov
rcrl
adc
leave
vaddsd
mov
and
int
push
adc
addr16
fmuls
xorl
or
mov
mov
out
pop
push
jge
pop
int3
out
jae
add
call
stos
stos
gs
dec
fists
inc
push
popf
mov
adc
sub
and
clc
push
mov
mov
enter
daa
data16
imul
add
popf
int3
imul
mov
stos
mov
sbb
jne
les
sub
mov
dec
jb
add
add
addb
bswap
test
dec
or
movb
repz
add
int
pop
sbb
jg
jl
leave
aad
inc
sbb
inc
cli
in
loop
push
jno
fldcw
dec
outsl
jbe
cltd
inc
sub
mov
pusha
inc
lods
imul
xchg
mov
sub
aad
ret
dec
aaa
scas
or
jno
in
or
cmp
dec
mov
push
bound
jg
stos
clc
jle
cmpsl
aaa
das
inc
out
stos
mov
divb
loopne
xor
mov
sub
jne
or
cmpl
bound
loopne
sbb
cltd
or
push
mov
sub
aas
mov
aaa
adc
push
das
dec
cmp
test
xor
mov
std
add
daa
nop
scas
inc
outsb
into
xlat
push
pop
fisubl
cmp
mov
das
dec
mov
jl
push
push
push
mov
adc
xor
sbb
add
out
pop
xor
mov
xchg
jb
jmp
add
fbstp
loop
add
add
inc
cmpsb
jecxz
rcrb
gs
out
in
pusha
mov
jmp
sub
cltd
mov
push
xchg
dec
sti
je
outsb
popa
xchg
stc
test
inc
ret
sbb
idiv
les
inc
xchg
fucomi
mov
or
adc
loop
mov
dec
push
arpl
cmpsl
xchg
arpl
call
adc
cltd
movsb
mov
inc
sub
and
mov
daa
popf
cwtl
shrl
pop
add
lods
cmp
or
adc
sbb
lret
aaa
jno
mov
cld
aaa
xor
mov
cmp
mov
test
cs
push
daa
adc
xor
xchg
movl
lea
sub
out
pop
dec
mov
and
mov
aam
mov
push
cmp
sub
inc
mov
loopw
xchg
sbb
rcrb
enter
aam
jl
cmpsl
add
inc
mov
clc
and
and
sub
int
addr16
fistps
push
cltd
sbb
push
imul
dec
lret
in
pop
push
roll
repnz
adc
or
gs
adc
stc
aas
mov
dec
jle
mov
jnp
fwait
insl
andl
imul
mov
imul
outsb
rcl
cmp
rolb
inc
sub
std
mov
jge
cld
std
imul
das
push
lds
adc
in
das
stos
pop
jge
or
xchg
stos
mov
mov
cmc
shlb
mov
inc
addr16
push
sbb
addr16
xchg
mov
mov
je
inc
xchg
cmpsb
add
adc
xor
mov
test
cltd
sbb
push
daa
cs
andb
subb
aas
or
shl
sub
mov
add
mov
cmpsb
in
cli
inc
lods
jno
movsb
xchg
sahf
xchg
pop
mov
sub
jge
ret
mov
lds
dec
shll
push
jbe
flds
ret
jbe
jo
inc
pushf
lock
inc
testb
mov
fisttpl
sahf
push
outsb
push
sti
dec
jge
mov
test
inc
cmp
cmp
insb
sub
xlat
mov
xchg
jge
addb
ja
pop
aas
add
iret
and
das
lds
icebp
pop
xchg
push
js
fwait
add
in
ret
mov
in
push
xlat
sub
and
adc
and
mov
xor
sti
sti
push
pop
iret
jnp
mov
mov
cmp
mov
sub
lret
std
in
xchg
icebp
hlt
jne
scas
inc
cli
xor
stos
int
dec
testl
inc
jge
jmp
sub
movsb
mov
stc
fistl
sbb
mov
xchg
pushf
in
test
in
xchg
add
mov
in
add
jge
inc
test
or
repz
jne
xor
out
movaps
lret
scas
aam
mov
je
punpckhdq
ret
sub
mov
stc
dec
push
hlt
or
and
pushf
mov
fwait
neg
jbe
push
hlt
pop
clc
shll
dec
pusha
ret
xor
sbb
or
push
pop
push
dec
mov
fildll
cmp
icebp
lahf
and
cmp
pop
inc
inc
mul
add
add
add
jg
cmc
or
loopne
mov
repz
add
mov
add
js
sbb
imul
pop
in
insl
mov
fsubs
fs
shlb
mov
enter
or
fdivs
xchg
cs
push
rclb
scas
add
popf
xorb
jmp
rcll
sbb
test
sti
xorl
xor
jl
cmp
scas
cmp
jmp
js
cmp
mov
sub
cmovle
cltd
pop
jl
test
ror
xor
add
je
aam
daa
push
loopne
shr
sbb
orl
add
push
jecxz
pop
fcoml
sub
pop
inc
sbb
and
pop
lret
push
mov
je
ret
call
lods
cli
adc
xchg
or
mov
cli
xchg
scas
arpl
push
testl
loope
push
inc
sbb
sub
scas
sbb
dec
pop
mov
lcall
int3
jmp
enter
je
ja
pop
imull
hlt
dec
mov
sub
xor
mov
lock
test
stos
fstpl
cmp
mov
sbb
xchg
std
sbb
mov
fbld
vmread
lods
push
loop
push
adc
push
adc
stos
mov
hlt
ljmp
aad
pop
push
xor
icebp
test
loopne
stos
lea
int3
mov
inc
pop
outsb
sarl
mov
dec
cmpl
add
and
pop
mov
and
pop
mov
fnstcw
sub
mov
dec
and
repz
adc
dec
cld
je
add
xor
adc
mov
jecxz
arpl
std
pop
out
mov
roll
inc
loop
xor
ret
and
pop
xchg
aam
xchg
mov
jbe
push
xor
mov
ret
cmp
add
or
shl
jno
aam
jl
pop
and
aad
mov
ret
mov
mov
mov
jbe
inc
je
xchg
lods
jnp
jcxz
je
test
xor
out
mov
idivl
in
addr16
lods
rorl
jp
loope
xchg
call
xlat
sub
in
es
push
pushf
lahf
ljmp
mov
mov
and
sub
cli
ja
lock
in
or
popa
ret
pop
jp
ss
xchg
lret
dec
dec
mov
repz
lock
dec
xlat
mov
pop
in
adc
fmull
jle
sub
adc
jge
ret
dec
fs
test
imul
stc
adc
addr16
dec
jae
mov
mov
xchg
push
pushf
pop
cmp
test
mov
adc
pop
fmul
xchg
das
in
add
pop
testl
sbb
jle
sub
jmp
addl
pop
xor
and
push
sbb
mov
cs
bound
mov
out
push
and
es
emms
or
mulb
xor
jmp
pop
mov
jo
mov
inc
pop
mov
pop
ret
push
mov
cmp
cmpsb
dec
xor
xor
push
sbb
mov
push
xor
shrl
into
lret
imul
jo
popa
jne
fwait
xchg
shll
inc
add
pop
in
clc
orl
jl
mov
std
mov
rol
cmovae
outsb
mov
and
pop
add
testl
loop
push
xor
insb
aam
bnd
mov
cmp
push
xlat
icebp
insl
je
cli
cmp
lcall
jge
fdivrl
bound
mov
xor
mov
mov
cltd
jne
jo
or
cmpsl
push
imul
push
mov
icebp
ficomps
dec
in
arpl
add
arpl
sub
mov
fmull
lods
or
or
enter
and
pop
inc
mov
push
dec
outsl
sbb
test
pop
lret
int3
mov
xchg
movsb
pop
pushf
fsub
push
les
js
or
in
or
xlat
cmpb
test
lcall
inc
ret
cmp
fisttpl
aad
pop
or
pop
je
sub
rep
mov
addr16
stc
mov
xchg
lock
mov
outsb
pop
or
repnz
sbb
add
add
add
outsb
out
lds
or
add
add
add
sarl
sbb
sbb
or
mov
loop
iret
in
ret
mov
jno
test
push
or
repnz
push
or
test
rcll
cltd
push
inc
or
or
std
inc
frstor
jnp
sub
cmc
dec
xchg
push
xor
mov
mov
aas
push
sbb
outsb
int
cmpsl
mov
pushf
fmull
mov
xor
mov
cwtl
test
call
call
ret
popa
fcmovb
mov
cmc
push
jp
pop
and
daa
sub
les
imul
mov
mov
sar
das
mov
sbb
sub
xchg
push
and
popf
scas
sub
jp
adc
mov
in
stc
pop
int3
jo
into
xor
les
mov
mov
int3
push
stos
xor
or
sbb
jae
dec
xorb
scas
out
pop
mov
sub
dec
aam
jle
or
or
loop
cmp
sbb
or
jo
nop
gs
addr16
and
pop
and
and
fnsave
in
lods
lret
add
addl
fiadds
xor
nop
rorb
or
cmp
mov
xchg
pop
jne
add
ljmp
pop
enter
test
cs
sbb
lds
lret
ror
lock
ret
leave
fisubl
sub
sub
cmp
sub
lds
sbb
jo
add
imul
pop
pushf
xor
fidivrs
jno
sbb
lods
xlat
arpl
stos
mov
enter
cmp
xor
jmp
push
imul
cs
push
insl
fwait
shlb
push
jnp
xchg
lret
adc
inc
test
add
rorb
mov
or
out
cmc
adc
add
lret
popa
stos
xchg
cmc
mov
push
call
or
and
push
cmc
dec
xchg
adc
push
aad
in
pop
xchg
arpl
int3
cli
xor
sub
in
jne
sarl
xchg
cmc
dec
ljmp
arpl
int3
pop
mov
repz
lods
jbe
xor
push
sahf
adc
je
cmc
pop
aad
mov
lea
inc
insw
movsl
mov
js
xor
mov
ss
adc
das
aam
or
push
in
jno
test
imul
jb
pop
xchg
jle
adc
enter
in
jno
dec
adc
nop
insl
adc
cmc
dec
sub
or
mulb
mov
sub
insb
mov
mov
pop
cld
out
lcall
sub
mov
test
xchg
hlt
aad
mov
repz
add
call
repnz
fldt
mov
out
mov
push
mov
sahf
clc
push
push
push
or
movsl
xchg
or
mov
psubsw
faddl
fsubl
push
int3
inc
leave
jmp
inc
dec
sti
mov
push
fstp
jmp
mov
push
imulb
dec
repnz
insb
pusha
imul
jle
xlat
add
jg
push
sti
mov
gs
cmpsb
fmull
sbb
movsb
inc
sti
cmp
ret
pushf
add
add
adc
in
cmp
or
mov
mov
sbb
add
jb
jb
ds
call
shr
cs
mov
inc
adc
fcmovnb
dec
je
fsub
fwait
inc
dec
xchg
sub
or
filds
mov
mov
push
xchg
sahf
pusha
push
js
xchg
je
in
dec
sub
dec
and
pop
call
cld
mov
jae
aaa
and
int3
and
rorl
cmp
outsl
push
vmptrst
push
aam
int
mov
or
and
out
scas
sbb
pop
insb
mov
pop
mov
push
in
lea
or
scas
sbb
pop
fisubs
pop
mov
popf
std
and
popa
push
xchg
dec
cltd
sarb
pop
insb
lds
mov
add
cmp
test
sub
nop
test
fistpll
es
adc
cwtl
aas
decl
test
shl
adc
pop
add
addb
cmp
inc
ret
sbb
dec
clc
xchg
hlt
mov
bound
push
or
rol
mov
cs
sub
shl
cmc
pop
enter
or
pop
in
iret
mov
add
add
add
lret
lods
xlat
sti
mov
lods
adc
add
repz
add
mov
mov
xor
pop
fsubrl
nop
stos
adc
psllq
push
in
sar
add
xor
cli
ss
data16
mov
mov
cmpsb
hlt
jmp
cmp
push
rolb
xchg
lods
mov
cmpsl
stc
sub
out
xchg
jne
seto
test
mov
daa
outsl
es
fwait
xchg
sahf
xor
inc
pushf
imul
or
leave
add
leave
mov
popf
xlat
mov
sub
jl
test
xchg
pusha
cli
je
adc
arpl
mov
pop
push
add
mov
dec
xor
jecxz
dec
sub
mov
adc
sti
test
jge
sbb
rcrb
jl
pop
lea
ret
sub
or
dec
lcall
test
cmc
or
mov
mov
in
or
xor
jnp
inc
adcb
or
in
in
xchg
and
rcrl
jno
fsubrl
push
repz
fistps
loope
mov
adc
inc
std
push
pop
cmp
mov
or
pop
and
shll
js
add
popa
lret
daa
fs
inc
mov
stos
inc
cld
pop
cmpsl
out
dec
ficoms
jmp
jnp
sahf
outsb
mov
outsb
or
xorb
push
mov
jbe
pop
cmc
int
test
push
out
jge
aad
push
xor
jmp
pop
sbb
ljmp
add
and
loop
stos
outsb
dec
lods
enter
cmovge
test
pop
sahf
add
mov
pop
sub
dec
mov
or
inc
jnp
xchg
das
loop
clc
and
fisttps
addr16
lds
dec
lea
pusha
push
jecxz
aaa
test
jno
bnd
addr16
or
aas
gs
and
or
sbb
push
jle
fidivl
jns
shrb
and
add
pop
mov
imul
push
cld
je
jl
pop
lods
daa
mov
ret
sbb
rorl
push
pop
vpmulhw
add
loop
ja
jle
dec
fldenv
mov
inc
fwait
into
fscale
dec
hlt
mov
out
jmp
sub
pop
arpl
add
and
xor
push
pop
incb
repnz
xchg
jno
xor
idivb
adc
pop
adc
add
or
sahf
pop
pop
mov
test
pop
jmp
jl
and
push
pop
test
int3
stos
jecxz
push
test
jo
cwtl
sbb
sub
mov
mov
flds
mov
loop
pushf
ss
and
dec
sahf
mov
inc
mov
push
aaa
je,pt
mov
dec
call
lret
popf
xorl
push
fs
push
dec
in
mov
pop
xorb
mov
pop
rolb
inc
add
mov
inc
lds
add
es
test
inc
data16
repnz
imul
inc
cmp
mov
xor
sub
std
aam
test
cmp
lahf
adc
mov
push
add
iret
fsubp
pushf
ret
push
or
xor
outsl
push
push
pop
pop
les
cmpsb
aaa
xor
mov
mov
fs
inc
loopne
xchg
js
mov
or
adc
loop
inc
jmp
andl
addr16
sbbl
cmp
nop
mov
lds
cmp
les
add
or
setae
mul
lcall
pop
aas
push
mov
or
jp
roll
fwait
add
jb
push
xchg
sbb
adc
roll
xor
icebp
jp
push
push
ret
fisubl
sahf
mov
jmp
jbe
jp
cmp
mov
arpl
repnz
push
fs
add
push
xchg
adc
nop
enter
lods
hlt
out
pop
aad
inc
push
lds
movl
jmp
pop
sub
push
push
pusha
imul
xlat
ret
push
mull
xchg
jno
cmpl
jecxz
icebp
jp
popf
pop
cmp
sub
mov
js
pop
out
jecxz
dec
push
push
outsb
popf
cmp
pop
pop
sti
fldt
test
loopne
icebp
sbb
or
xchg
bound
mov
add
jno
loop
bnd
fcomi
mov
inc
cwtl
mov
repz
add
in
cwtl
outsb
xchg
cmpsl
lahf
xor
cmp
les
fimuls
cmp
pop
jne
sub
jecxz
add
jbe
mov
or
test
or
pop
inc
inc
add
pop
push
fdivrl
sbb
adc
inc
mov
fdivl
sbb
out
sub
fwait
dec
add
sbb
cmp
fsubl
andb
lds
std
xor
push
hlt
and
rcll
subb
fistpll
or
xchg
je
cmc
aam
lds
or
sub
enter
leave
nop
dec
push
std
cmp
sub
push
loope
int3
movsb
or
sbb
adc
mov
pop
push
in
inc
pop
lds
mov
pop
mov
adc
outsl
dec
adc
inc
dec
xchg
cmp
iret
lods
jno
loope
shll
ret
lods
push
negb
xchg
jp
es
sbb
js
xchg
mov
or
mov
insb
test
sub
and
hlt
icebp
mov
andb
std
scas
inc
in
and
aam
cmp
dec
ret
or
pop
dec
cltd
cli
out
xor
cwtl
movsb
sub
xor
cmp
jmp
mov
dec
dec
or
inc
test
std
xchg
popf
lret
push
pop
ficoms
outsl
imul
push
jbe
mov
cmpsb
in
mov
aad
adc
fcmovnb
sahf
rorb
sbb
test
pop
inc
jp
adc
mov
dec
in
push
inc
dec
or
and
and
and
pop
push
jb
fistpll
add
dec
push
xorl
out
cmp
mov
add
into
jo
ljmp
pusha
addr16
aas
cmp
insb
rol
dec
scas
es
shll
cmpsl
or
fs
in
in
and
cld
ds
in
push
icebp
lods
in
mov
push
pop
roll
sbb
add
iret
xor
mov
das
mull
mov
in
push
add
dec
xchg
rcll
sub
adc
xchg
fisttpll
pushl
movsl
pop
shrb
shl
dec
dec
les
sub
aaa
ljmp
stos
mov
xor
mov
cli
outsl
je
cmpsb
mov
jg
jecxz
imul
lret
xlat
xchg
movb
rcrl
cmp
sti
mov
in
inc
inc
push
leave
mov
lcall
inc
jmp
pusha
dec
mov
rolb
push
out
pop
js
insb
subl
or
pop
dec
xor
fnstenv
mov
sbb
pop
bound
mov
fimuls
pop
mov
testb
jb
sbb
fbld
push
mov
mov
jno
or
lds
fistps
test
sub
push
push
das
call
mov
inc
inc
cs
or
sub
sahf
xchg
push
cwtl
bound
fcmovu
ja
cltd
mov
insl
mov
pop
cmp
push
mov
fimuls
repz
dec
jge
jae
pop
fiaddl
jbe
aaa
cli
push
push
xchg
sub
and
or
mov
int
sub
fwait
mov
push
xor
rorl
push
jbe
xlat
ljmp
sub
cmpl
popa
mov
pop
sahf
lods
dec
insl
adc
imul
pop
jge
pop
lret
inc
aaa
stos
cmpsl
cld
rcl
cmp
adc
insl
lods
aad
mov
lret
movsl
addr16
call
mov
push
mov
push
and
das
scas
xchg
pop
ja
or
pop
xor
stos
int3
out
jmp
mov
and
mov
inc
or
out
sub
imul
mov
sbb
cltd
add
push
and
push
xchg
push
inc
mov
cmp
and
mov
push
in
push
inc
pop
inc
clc
mov
cli
inc
dec
inc
in
addl
and
xchg
or
jnp
mov
cli
bound
xor
int3
insb
ja
lret
in
dec
xchg
sbb
adc
sbb
pop
ja
pop
sbb
or
cwtl
xor
shrb
or
jb
sbb
xchg
or
xlat
or
pop
mov
and
aam
lea
rclb
push
jns
inc
mov
mov
outsl
pop
mov
idivl
faddl
leave
pop
in
sub
mov
inc
frstor
xchg
mov
add
ss
in
inc
js
out
and
add
add
loop
enter
pop
sub
push
and
adcb
xor
and
xor
xor
ret
cmp
adc
adc
mov
jmp
inc
push
add
addr16
popa
cmc
inc
aad
mov
push
cmpsb
cmp
clc
nop
aaa
cmpsb
iret
gs
mov
unpcklps
cld
hlt
idivb
cmp
cmp
rcr
sbb
mov
shrl
xchg
cmp
ret
test
pushf
sbb
or
in
std
jbe
xor
sub
cmp
sub
mov
insb
xlat
push
push
mov
add
arpl
iret
mov
add
jp
mov
fnstenv
mov
push
insl
pop
mov
loop
loopne
loope
sbb
add
aad
roll
and
add
addr16
mov
pop
or
xchg
adc
shlb
mov
xchg
fldt
fsub
mov
sub
and
fsubs
in
out
cld
fnsave
out
repz
add
stos
pop
xchg
mov
pop
dec
clc
adc
cmc
xor
sub
mov
xor
push
sub
shrb
sbb
nop
push
mov
and
adc
pop
test
xchg
gs
add
xchg
mov
mov
sub
xchg
mov
mov
loope
pop
icebp
dec
jb
and
dec
ljmp
jo
movsl
fistl
inc
jg
jge
mov
jo
insl
ss
push
adc
flds
and
stos
xor
add
xor
push
cmp
mov
push
xchg
mov
adc
fldl
mov
sbb
clc
movsb
cmp
sti
std
dec
fsts
addr16
adc
imul
xchg
pop
mov
pop
enter
inc
mov
cmp
pop
pop
mov
pop
sbb
jbe
cmp
lods
sub
into
ljmp
jge
jmp
gs
sub
cmp
jo
movsb
repz
mov
mov
mov
jp
insb
mov
sahf
idivb
dec
cltd
and
and
sbb
dec
lcall
jb
outsl
sarl
and
popa
lds
cmpsl
call
fwait
cmp
insl
mov
or
jo
js
xor
mov
addl
in
cmc
test
shll
cmp
lods
and
in
and
mov
pop
dec
jle
and
push
jecxz
icebp
int3
sbb
inc
lock
in
mov
and
repnz
ss
scas
pop
sub
push
push
pop
inc
test
ror
or
cmp
fsubl
xchg
push
dec
add
call
jno
mov
adc
enter
mov
cmp
js
jecxz
andl
mov
jle
scas
jge
rcrl
sub
pop
decb
push
daa
lods
inc
inc
sub
movsl
adc
loope
xor
aad
mov
jge
cmc
mov
ret
pushf
repnz
int
xor
jle
jmp
gs
imul
mov
xchg
push
in
lock
lods
mov
xor
or
iret
sahf
cli
icebp
xor
out
push
jge
cmp
and
test
leave
fnsave
and
xor
xchg
ret
jnp
loopne
call
jbe
daa
inc
cmc
adc
gs
je
dec
xlat
clc
pop
push
jmp
aam
test
add
sbb
loop
pop
add
or
push
aaa
push
ljmp
adc
mov
adc
notl
movsb
add
xor
ja
clc
jmp
jne
push
jnp
stos
xlat
shll
inc
mov
mov
xchg
cltd
cld
xchg
adc
jns
mov
cmp
lret
ret
dec
pop
lods
in
ds
gs
rcll
mov
cmp
repnz
mov
push
dec
loope
dec
pop
test
in
outsl
adc
nop
jns
mov
inc
mov
xor
dec
xchg
pushl
imul
roll
cmp
and
add
imul
inc
mov
mulb
aam
mov
in
cmc
aam
pminub
out
mov
inc
mov
rcrb
fs
inc
jg
dec
jl
call
pop
cs
cmp
adc
push
add
roll
scas
test
repz
add
add
cmp
or
xchg
push
push
ss
push
xor
jmp
sarb
rcl
scas
cs
aad
cmovne
ret
enter
mov
repz
mov
insl
cmpsb
ja
mov
jge
push
pop
outsl
sub
jnp
in
jbe
popf
call
ss
std
mov
in
das
jecxz
inc
push
sub
imul
int3
fmulp
add
and
and
pop
dec
scas
scas
cmc
loopne
mov
xchg
lea
push
fs
dec
js
and
mov
cmp
or
jns
mov
or
out
cmp
fbld
hlt
pop
xchg
test
lcall
mov
push
mov
xchg
call
xchg
add
sbb
xchg
test
mov
sbb
aad
incb
mov
shlb
lods
or
test
rolb
inc
sub
ret
xchg
sahf
loopne
sbb
sarl
movl
daa
mov
lods
push
hlt
jns
scas
js
mov
out
inc
add
sbb
mov
jecxz
addr16
add
scas
xor
sub
mov
shl
add
loope
aam
push
adc
and
int3
pop
mov
lods
stos
mov
in
xor
and
xchg
imul
push
mov
inc
mov
stos
dec
out
jae
push
cmp
ss
and
push
mov
dec
jmp
test
mov
out
jo
mov
sbb
push
mov
lods
fisubs
aam
xchg
testl
and
pop
addl
inc
aam
int3
inc
popf
repnz
fdivr
sub
fcoms
popa
test
sahf
adc
sbb
arpl
cmc
ret
insl
int
adc
addr16
sti
xchg
push
xlat
mov
cwtl
jbe
in
mov
push
flds
mov
jns
cmpb
ror
ficoml
pop
cmpsl
xor
sti
xchg
dec
es
repz
out
inc
jle
dec
fldcw
and
mov
and
gs
out
fistl
ret
shlb
push
jecxz
xchg
pusha
jae
popf
xchg
jo
mov
ret
xchg
dec
outsl
pop
das
xchg
in
out
xor
adc
stos
paddusw
ret
push
push
adc
xor
push
daa
aaa
dec
adcl
ret
outsl
lea
inc
clc
fwait
jg
mov
sbb
jmp
jae
scas
std
add
mov
call
pop
stos
sbb
fcomps
xor
ljmp
imul
add
mov
inc
mov
sub
loope
jp
iret
loopne
out
mov
fsubs
lds
jmp
xchg
cmp
dec
sub
lods
dec
push
stos
xorl
rcrb
jl
dec
jo
adcl
gs
jbe
mov
jge
lea
dec
mov
and
sbb
jne
push
cmp
into
arpl
pop
pop
xchg
enter
pusha
lret
cld
sbb
dec
mov
fwait
das
jl
inc
jno
mov
popf
dec
xchg
lret
bswap
hlt
xor
out
bound
push
jb
rcrb
xchg
stos
jns
push
aam
lods
cmc
roll
add
add
mov
popa
and
or
sbb
mov
insl
push
insb
and
call
sbb
insl
push
cwtl
aad
lods
popa
cltd
inc
in
add
loopne
xchg
push
call
add
jbe
stc
jecxz
mov
ret
outsl
sub
ds
lret
inc
out
ja
dec
add
in
xlat
in
sub
mov
add
cld
ss
xor
push
sub
out
mov
js
rcrb
es
ljmp
fsubl
int
jbe
das
jp
mov
mov
adc
sbbb
mov
xlat
add
add
push
inc
outsl
cmpsb
mov
clc
pop
mov
rcr
push
cs
and
js
faddl
dec
push
push
mov
test
xchg
xor
rcrb
sbb
test
jp
jle
ror
imul
push
add
xchg
xchg
movhps
xor
dec
nop
mov
cmp
in
pop
mov
test
mov
ds
gs
jl
inc
imul
cmpl
popf
bound
xor
dec
cmp
add
add
sub
mov
inc
cmpsb
daa
adc
jmp
add
jns
pop
cltd
out
andl
sub
mov
les
out
inc
lahf
in
les
cld
adc
ja
cmp
xchg
inc
jecxz
push
ja
mov
adc
jo
mov
fnstsw
arpl
outsb
testb
inc
mov
fildll
or
aam
movsb
xor
jbe
mov
arpl
sub
pop
mov
push
sub
ror
cmpl
hlt
and
lods
aaa
je
movsb
add
jne
in
adc
loop
sarb
test
fdecstp
mov
and
orb
mov
mov
xor
cmp
add
movsl
out
mov
std
fcmovu
cmpsl
call
mov
test
test
lock
inc
inc
xchg
movsl
mulb
movsl
test
mov
or
sarl
les
bound
jb
mov
mov
repz
pusha
fdivr
sbb
notl
fwait
lret
das
jmp
dec
loope
push
push
cmpsb
dec
xchg
jl
add
imul
push
or
das
notl
jo
inc
mov
idivb
ret
sbb
pusha
xchg
lcall
daa
fbld
test
inc
or
mov
insb
inc
int
aaa
icebp
aas
cld
mov
push
fnstcw
inc
outsb
popf
sbb
sbb
ret
adc
cmp
jge
imul
or
mov
mov
fmuls
push
and
xchg
sbb
add
ss
bound
dec
icebp
ret
bound
ss
inc
iret
imul
je
mov
push
pop
insl
mov
and
repnz
cmp
push
daa
inc
add
mov
push
movsb
sub
repnz
scas
mov
xor
cmp
orl
mov
popf
push
stc
push
fcoml
decb
in
adc
push
jmp
je
mov
jo
xchg
adc
out
outsb
cmpsl
mov
mov
dec
lahf
sbb
push
inc
nop
test
std
and
jb
std
mov
rorb
pop
push
int3
test
xorb
adc
fiaddl
std
int
enter
loope
xor
adc
aad
cmp
mov
or
scas
cmp
and
mov
push
cmp
insb
mov
ds
je
lods
push
jmp
mov
dec
jg
pop
gs
leave
and
dec
dec
sar
jo
add
push
add
add
int3
xor
lock
cmpsl
aam
leave
inc
mov
sbb
push
sbb
sub
in
daa
xor
or
mov
dec
out
xchg
xchg
or
outsl
movsl
mov
loop
adc
rorl
inc
sti
stos
aaa
and
xchg
hlt
xor
sti
or
pop
xor
xchg
in
ds
stc
sarb
lds
jp
or
and
jp
sub
insl
gs
int3
clc
pop
clc
fstpt
dec
add
add
inc
stc
mov
xchg
clc
pop
popf
aam
scas
jo
loopne
mov
xchg
adc
mov
movsl
loop
xor
push
das
push
xor
bound
cmp
and
pop
insb
or
jmp
mov
inc
cli
pop
in
jle
lahf
and
test
mov
adc
inc
popf
into
xor
lahf
sub
fs
cli
out
daa
psubusw
fwait
test
imul
clc
imul
call
adc
outsb
mov
cmc
arpl
loopne,pn
inc
mov
jne
imul
and
push
outsl
aam
pop
cmc
hlt
mov
enter
mov
dec
clc
dec
std
push
int3
add
pop
into
popf
mov
decl
mov
lock
in
jbe
mov
into
ljmp
clc
les
or
popa
ljmp
imul
scas
sbb
adc
mov
ljmp
in
mul
ja
sub
pop
aaa
stos
cmp
jns
les
mov
movsl
mov
loop
mov
in
mul
outsl
mov
push
pop
fcomps
or
cmp
pop
cwtl
cmp
out
ss
xchg
sbbb
jl
and
jns
pop
ss
cmp
mov
mov
fisttps
sub
lret
dec
pop
fcoms
adc
xor
adc
dec
ror
stos
jno
dec
pop
arpl
je
add
add
add
les
std
mov
push
inc
addr16
out
add
repz
add
or
lret
hlt
jns
mov
lock
test
loop
loop
into
jno
fs
jno
pop
and
stos
push
push
dec
in
je
shl
mov
pop
stos
andb
sub
push
adc
in
cmp
dec
fdiv
or
jae
and
sahf
rcr
loope
orl
ljmp
out
popf
lret
lahf
xchg
pop
dec
stc
lods
leave
mov
sbb
lea
mov
std
test
out
xchg
out
out
mov
cli
xchg
jno
mov
add
pushf
adc
mov
push
cmp
jnp
jg
cmp
sti
adc
fucomip
xor
xchg
hlt
shrl
mov
dec
popf
outsb
cmp
in
push
mov
jnp
pop
dec
sub
fsubr
icebp
aas
stos
in
popa
jns
in
out
pop
xchg
xor
jae
fwait
repz
push
cmp
sbb
ret
mov
mov
sub
push
push
mov
ficomps
xlat
xchg
ljmp
push
mov
mov
mov
roll
push
idiv
xchg
je
mov
cmp
or
repnz
movsl
xchg
push
jb
cmp
insl
movsl
pop
push
pop
mov
push
clc
not
cs
lret
subb
mov
cmp
sub
sbb
mov
mov
rorl
stos
or
or
stos
mov
fdiv
fiadds
pxor
rcrl
fisubl
mov
rsm
dec
adc
call
in
mov
imul
xchg
mov
sahf
cmovno
adc
test
stos
jbe
mov
je
jl
pushf
enter
neg
arpl
test
dec
jecxz
les
cmpsl
pop
cli
insl
in
mov
mov
push
push
pop
ss
dec
inc
loop
fmull
aaa
add
xor
ret
pusha
push
push
pop
jecxz
or
and
mov
or
sbb
sbb
sbb
or
mov
mov
out
push
cmpsl
mov
ja
inc
fs
clc
xchg
int
inc
in
aas
fnsave
fiaddl
sbb
lcall
pop
fwait
sub
jmp
push
mov
push
mov
sub
adc
cs
push
pop
dec
ja
push
lret
insl
add
inc
aad
cmp
mov
cmp
inc
dec
test
push
mov
add
nop
addr16
jle
fidivs
pop
jmp
jmp
push
mov
push
in
cmp
adc
testl
pusha
inc
mov
movsb
repz
sbb
sbb
xchg
scas
test
sbb
out
jno
jg
cld
or
bswap
add
rolb
sbb
daa
clc
gs
shll
into
inc
popa
xchg
add
sbb
es
daa
add
ret
pop
add
mov
mov
aaa
xor
pop
bound
lea
daa
fcomps
cs
les
test
test
xchg
int
xchg
aas
arpl
dec
pop
mov
adc
sub
dec
jns
xlat
adc
inc
out
outsl
sti
pop
inc
xchg
cs
dec
std
jbe
sub
cmpsb
lcall
add
lret
dec
inc
or
mov
aad
sub
xchg
push
mov
pop
arpl
out
dec
mov
xor
cmpsl
int3
lcall
repz
outsb
lcall
pop
mov
and
add
outsl
add
popf
pop
int3
cmp
or
loop
das
mov
inc
lret
test
adc
iret
sbb
fnstcw
and
sarb
mov
out
repnz
push
dec
movsl
ljmp
rcr
cmp
inc
push
cmp
sub
dec
test
ja
aad
dec
sbb
data16
jmp
call
mov
inc
scas
sahf
inc
mov
xor
into
test
cmp
mov
test
or
push
push
imul
daa
mov
scas
ds
mov
push
mov
cmp
dec
dec
js
cli
movsb
insl
stos
sbb
mov
test
mov
pop
xchg
mov
pop
push
int
stc
mov
xor
shr
lret
push
dec
pop
add
xor
or
clc
mov
scas
dec
pushw
test
fnstenv
data16
loope
add
add
ja
push
dec
shr
jg
push
mov
mov
add
add
add
xor
xor
dec
pop
adc
or
mov
dec
fidivrl
and
dec
fwait
sahf
lea
sbb
xchg
kunpckbw
jg
push
sahf
sbb
repz
sahf
sar
movb
scas
xchg
rcrl
mov
ret
popf
test
push
xchg
inc
mul
jmp
jne
out
loopne
mov
add
lret
sub
insb
sti
mov
inc
rcr
andl
sti
testb
jb
mov
sbb
mov
lcall
cld
adc
push
cli
iret
ss
sub
jp
mov
lods
adc
mov
push
mov
or
pop
imul
or
push
sub
std
xchg
sub
std
mov
cmpsl
lea
in
pop
xchg
out
add
sbb
scas
cmpsb
and
pop
ficompl
dec
mov
mov
mov
test
sbb
repnz
fisttps
jg
mov
push
popa
mov
or
xor
dec
cltd
adc
out
inc
push
xor
dec
test
or
in
minps
sbb
and
push
fs
mov
sub
out
jne
loope
gs
or
imul
dec
dec
push
push
push
pop
ds
mov
mov
cmpsl
xchg
test
jo
lods
cmp
push
fimull
xor
call
mov
mov
nop
lods
icebp
cs
loopne
push
jo
pop
iret
stos
adc
xor
inc
inc
pop
mov
scas
sbb
jbe
outsb
subl
in
lock
sbbb
jp
orl
popf
sarl
in
mov
lock
push
dec
xchg
push
inc
add
in
shll
in
insl
jnp
xchg
jp
push
ret
xlat
ret
mov
das
movl
mov
sbb
mov
loop
inc
mov
mov
sub
pop
sbb
cld
mov
stc
rolb
loop
cmp
push
and
in
jecxz
xor
in
add
add
fwait
sbb
sbbb
push
jnp
inc
and
cmpsb
out
ret
lret
inc
dec
push
testl
incb
loop
adc
notb
movsb
popa
cmp
lret
mov
cmc
out
sbb
jne
adc
negb
mov
pop
aaa
jne
andb
scas
adc
pushf
xchg
sub
inc
push
pop
xchg
dec
adc
test
scas
enter
stos
out
inc
adc
dec
push
adc
dec
int3
mov
adc
insb
mov
fisttps
cmc
push
ret
fnstenv
cli
fstl
xchg
xchg
cmp
rcl
adc
mov
sahf
xor
xor
push
and
lcall
adcl
sub
mov
popa
stc
into
jns
sub
lea
adc
or
addr16
loope
add
sbb
sbb
ds
dec
xor
sahf
jl
mov
sub
mov
mov
sarb
mov
in
push
imul
jbe
xchg
mov
shll
in
ljmp
push
jmp
pop
inc
mov
movsb
clc
pop
mov
cmp
popa
leave
jno
mov
sbb
stos
stos
push
dec
in
scas
xlat
mov
pusha
mov
cmp
mov
or
pop
mov
jnp
or
or
jp
pop
cld
push
aam
mov
xor
pop
jecxz
scas
out
loope
mov
dec
jp
inc
adc
xchg
test
aam
sbb
jmp
aas
std
add
scas
int3
out
pusha
loopne
test
xor
scas
imul
jno
aam
les
jo
imul
push
xchg
sbb
pop
in
femms
cld
jne
notb
cmpsl
jae
mov
push
dec
and
jne
dec
sbb
clc
into
mov
dec
mov
sub
cmpsl
adc
cld
outsl
xor
iret
push
in
bound
or
cltd
push
cltd
xchg
or
das
std
iret
cmp
inc
test
fcomps
xlat
push
das
push
call
sub
test
jecxz
or
xor
shlb
or
ficompl
out
push
mov
dec
fdivs
in
xchg
pop
call
cmp
out
push
bound
and
loopne
pop
jge
popf
icebp
fidivs
push
call
scas
test
push
sub
imul
les
pushf
jnp
fidivrl
and
dec
add
mov
xchg
rclb
add
add
movsl
push
movsl
shl
divl
bound
and
add
repz
add
popf
add
shll
negl
pop
das
lock
daa
jae
arpl
cli
inc
lret
das
test
xorb
cmpsb
in
mov
aas
adc
daa
inc
fstps
lods
cmpsl
and
in
jns
add
inc
cmpsb
add
sub
sbb
lea
loopne
push
pop
aad
mov
adc
shlb
add
cmp
sub
test
mov
pop
push
std
and
xor
mov
cmpsl
cli
or
or
int3
push
sbb
mov
mov
dec
leave
dec
mov
into
lock
insb
jbe
ret
pop
cmp
lea
repnz
mov
in
test
mov
xchg
xlat
inc
in
fdivl
jnp
dec
xor
insb
adc
das
pop
add
pop
mov
adc
cmpsb
ss
push
sarl
mov
adc
ficompl
and
cltd
repz
sbb
out
adc
sub
clc
fisubrs
int
cld
inc
or
nop
cmp
cmp
push
or
arpl
jne
repz
sahf
test
sti
daa
outsb
sbb
mov
mov
jmp
addr16
insl
into
push
stos
inc
push
xor
leave
mov
lods
and
cmp
out
pand
sbb
xor
scas
mov
cmc
stos
cmp
out
fcomps
dec
push
ja
fbld
in
sar
aas
clc
or
loopne
cmp
jo
mov
bnd
push
jecxz
cli
lret
xchg
insl
test
cmp
pop
mov
outsb
mov
jl
push
mov
xchg
jne
hlt
adc
pop
fildll
adc
jp
rcll
mov
aam
fxch
xor
lcall
jbe
pop
adc
xor
mov
jecxz
mov
das
nop
loopne
test
jne
sub
test
lds
sbbl
pop
in
mov
xor
pop
adc
cmp
mov
filds
push
shll
sub
mov
int
add
adcb
fsubs
mov
test
and
iret
popa
lret
and
cld
hlt
xor
xor
roll
add
aas
lcall
xor
and
adc
daa
cmpl
dec
movsl
stos
sub
bswap
xlat
jbe
imul
sahf
push
lret
push
pop
or
movsl
dec
sub
scas
jg
adc
push
adc
mov
ficoms
call
dec
jge
cmp
out
jns
rorl
mov
fisubs
hlt
mov
mov
and
test
aas
ret
inc
add
push
rorl
popa
mov
ds
cwtl
pushf
fwait
inc
jne
push
fwait
dec
mov
sbb
cmpsb
cmp
jg
shlb
nop
repz
out
push
aam
push
es
mov
adc
fdivrs
mov
mov
jp,pt
sub
sub
sbb
dec
inc
mov
icebp
movsl
test
popf
pop
pop
xor
insl
mov
ret
inc
push
sbb
xor
mov
stc
sub
xchg
andl
addb
push
add
and
sub
mov
and
test
pop
xor
sbb
leave
xor
xor
loope
mov
sbbl
jle
outsb
xor
jge
in
or
lods
test
lret
dec
mov
testb
xor
xor
mov
cmp
out
pop
scas
jno
stc
mov
dec
mov
rorl
and
and
add
pop
sbb
inc
push
push
fisubs
mov
mov
mov
mov
sbb
adc
push
pop
add
icebp
mov
dec
dec
or
push
enter
cmp
mov
xor
sbb
pop
aaa
and
sub
in
in
jge
pop
ss
adc
hlt
jge
jge
mov
rorb
test
and
fsubr
and
mov
mov
mov
pop
out
xor
cmp
sahf
gs
in
xchg
cmp
jae
test
pop
mov
mov
adc
nop
mulb
adc
inc
imul
jl
push
mov
push
xchg
sbb
xchg
mov
rcll
es
sub
pushf
shlb
or
adc
push
in
jae
add
dec
cmpsl
imul
pop
xchg
pop
push
ret
mov
sahf
inc
mov
scas
xchg
add
add
add
adcb
lret
insb
out
stc
enter
add
add
cmp
push
and
or
fstpt
mov
loope
add
fcmovne
out
adc
or
