push
mov
sub
mov
movzbl
mov
mov
movl
movl
cmp
movl
jne
or
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
push
pushl
pushl
call
xor
or
dec
mov
jmp
add
push
xor
or
adc
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movzwl
not
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
push
mov
movzwl
mov
mov
mov
movl
movl
mov
jmp
sbbb
cltd
js
mov
pop
outsl
std
sbb
jo
jo
jle
jo
xlat
cmp
rol
pop
push
add
inc
add
xor
ret
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
into
cmpsb
enter
mov
xor
mov
adc
xchg
mov
adc
pop
shl
mov
cs
out
mov
and
lahf
jge
test
mov
insb
lret
sti
sub
sub
gs
icebp
mov
push
cmp
jb
xor
pop
sbb
int
sbbb
addb
sbb
shufps
sbb
enter
sbb
or
push
ret
lock
lahf
cmpsb
push
xchg
les
sahf
and
jo
add
lcall
test
mov
jl
outsb
sbbl
dec
inc
insl
inc
adc
ficomps
xlat
mov
nop
or
repnz
fs
mov
jno
cli
add
fistl
lcall
mov
lods
stos
adc
mov
sub
popl
adc
ret
jp
dec
xchg
cli
or
mov
in
cld
stos
or
shrb
ret
cmp
lock
cli
aam
lea
test
jp
cmp
mov
lock
push
mov
sub
repnz
mov
jmp
clc
icebp
mov
icebp
ficompl
mov
jo
jle
jo
lods
das
jl
adc
jge
dec
in
jo
addb
jb
jb
push
jae
bnd
icebp
aam
loope
fnstenv
cmc
xchg
popf
arpl
mov
mov
pop
das
push
fimull
add
jnp
pop
pop
cli
test
testl
imul
std
popa
scas
out
leave
and
mov
fstpt
and
jle
push
rcrl
dec
jge
addr16
xor
push
adc
pop
jbe
jbe
xchg
das
and
pop
push
jmp
mov
xor
lock
adc
les
fmull
lods
xor
sub
fcmovb
add
lock
sbb
adc
inc
nop
cmp
shl
dec
bnd
pushw
cmp
xor
pusha
sbb
ja
mov
jg
and
cmp
mov
push
mov
fdiv
jns
loopne
sub
fldcw
sub
add
adc
adc
outsb
sbb
jno
cs
xchg
out
sub
inc
pop
sub
pop
push
sbb
loopne
lds
push
in
std
push
jmp
inc
or
mov
mov
pusha
adc
adc
testl
sbb
mov
loop
scas
les
shr
sti
add
lea
loope
in
movsb
enter
xchg
pushw
jg
mov
mov
lock
mov
sahf
mov
jg
and
xor
out
call
lahf
push
mov
inc
lods
arpl
push
cmpsl
arpl
daa
in
out
orb
loop
ret
mov
inc
setbe
mov
pop
push
je
jbe
mov
bound
push
ret
mov
std
cmp
shll
jl
addb
jnp
out
or
mov
clc
out
pushf
mov
lea
mov
mov
mov
lea
jmp
dec
iret
lods
dec
lods
imul
xor
jo
jo
jo
sbb
mov
lods
arpl
jp
in
mov
lahf
in
in
xchg
dec
fistl
push
je
pop
ret
sub
jl
xchg
jns
sub
pop
cs
movsb
dec
testl
insb
jnp
icebp
or
outsl
in
decl
lea
mov
xor
push
mov
test
mov
inc
stos
pop
jno
bound
rolb
dec
cld
lea
or
add
push
insb
aas
fsts
cs
inc
push
cmp
xchg
sub
mov
addb
push
xchg
lea
test
fistps
int
and
ds
mov
adc
mov
xlat
mov
push
data16
nop
and
arpl
int
in
dec
xchg
loop
imul
aam
aas
jb
cmp
mov
lret
iret
rclb
scas
sbb
or
add
sub
cmp
mov
jnp
jbe
js
jb
sarb
std
jnp
nop
enter
int
xchg
ss
repnz
xchg
jmp
xchg
imul
mov
popf
test
ss
or
mov
sub
hlt
xchg
iret
hlt
lock
and
pop
mov
pop
pop
clc
insb
out
int
lret
aam
rorb
mov
cmp
int
sti
jmp
mov
test
int
aam
cmpsb
cmpsb
pop
cmp
or
xor
fisubs
movsb
pop
idiv
fs
pop
nop
mov
ljmp
ja
push
sar
adc
pop
fisubrl
inc
jge
mov
push
mov
mov
shlb
jo
sahf
jnp
bound
mov
pop
adc
fnstsw
filds
inc
in
inc
in
add
inc
in
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
jmp
int3
sub
push
mov
loopne
and
jo
jo
and
cmp
test
dec
cmp
jmp
jmp
push
ret
mov
cwtl
sbb
inc
sti
jne
pop
arpl
pop
cmpb
mov
sub
adc
pop
adc
or
outsb
pusha
push
mov
adc
xchg
mov
xlat
sub
into
mov
adc
lods
mov
pmaddwd
mov
sbb
aaa
lds
and
adc
push
movsl
sbb
outsb
int
aad
test
mov
mov
dec
in
mov
bound
fnstcw
mov
push
sbb
xchg
adc
lret
sti
loop
mov
sbb
push
add
jnp
add
cmp
and
shr
and
imul
shll
lock
ret
mov
insl
ds
mov
pushl
mov
add
lea
cmpsl
psubsw
ss
pop
pop
in
sub
or
les
in
pop
pusha
or
stos
std
test
test
and
stos
lret
push
js
push
push
enter
mov
xchg
hlt
xor
xor
sub
xchg
fadd
jl
mov
sub
xor
rclb
stc
cmp
aad
add
pop
xor
and
lcall
xorb
bound
adc
stos
mov
pop
cs
sub
popf
in
stos
inc
jbe
inc
cli
inc
sub
popf
push
daa
add
sbb
lcall
fdivrl
xchg
dec
enter
mov
loope
jbe
sub
jl
std
pop
mov
jmp
addr16
imul
cmpl
or
adc
adc
cmp
jns
sub
icebp
fstps
and
lret
lret
pop
imul
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
jmp
popa
ja
add
xorl
adc
mov
dec
push
inc
jo
jo
jo
jo
push
cmp
inc
jbe
or
int3
cmp
shrb
dec
test
jbe
mov
test
fiadds
pop
in
mov
sbb
or
adc
enter
addr16
out
jns
hlt
mov
stos
scas
addb
hlt
rcll
dec
push
sbb
aas
fidivrs
out
dec
inc
test
xchg
mov
pop
push
jle
lret
dec
add
cld
les
sub
pusha
jg
imul
sbb
inc
fs
stos
sbb
fwait
arpl
jb
loopne
pusha
mov
mov
insb
outsb
sahf
sahf
scas
pop
adc
cmp
fnsave
xchg
inc
xor
imul
jb
inc
out
hlt
mov
sbb
pop
inc
jp
loop
test
jnp
out
push
popf
cmp
outsb
adc
stc
leave
jae
out
scas
xor
jno
decb
xchg
push
dec
jnp
inc
lret
mov
mov
es
cmp
leave
mov
sub
ja
mov
dec
xchg
ds
scas
lds
arpl
pop
es
lahf
lret
push
push
sbb
push
xchg
mov
pop
icebp
and
and
lahf
push
lods
xor
int3
addl
adc
lods
mov
xor
adc
push
rcrl
cmp
mov
add
cmpsl
xchg
cmp
xor
ret
sub
cmpb
movb
les
mov
mov
or
push
loop
or
mov
inc
aad
out
xchg
std
mov
push
mov
rorb
mov
xchg
lahf
mov
addr16
or
cwtl
and
push
add
add
pop
div
mov
fs
sub
xor
pop
test
inc
call
insb
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
jmp
cld
test
jb
stos
inc
inc
cmp
xor
jo
jo
jo
jo
dec
inc
cmp
scas
xchg
incb
pop
ja
dec
pusha
dec
sbb
aas
cmp
dec
lock
pop
std
xchg
jne
enter
repz
movsb
xor
mov
cmpsb
mov
add
mov
cmpsl
rdmsr
xor
or
inc
vpshufd
cmp
aad
daa
dec
lock
movsl
adc
dec
pop
dec
sarb
jns
aad
insl
sub
and
jl
dec
or
jnp
mov
cmp
xchg
call
test
and
dec
lea
pop
or
fisubrs
jbe
into
sbb
push
inc
sti
push
cmpl
adc
lahf
xchg
stos
bound
inc
pop
das
lock
jg
popa
or
and
pop
fs
pop
xor
push
mov
xchg
lods
adc
push
xchg
into
cwtl
subb
mov
jo,pn
pop
jl
lock
aas
fsubrl
int3
or
dec
ss
aas
cwtl
adcl
pushf
icebp
pop
and
adc
pop
int
std
lods
test
bound
jge
mov
in
inc
or
addr16
jle
mov
stos
out
dec
insb
mov
out
repnz
add
cmp
mov
xor
scas
mov
mov
stos
fldcw
cmp
cwtl
inc
stos
outsb
sahf
fidivs
dec
shll
lcall
out
test
jae
push
push
mov
scas
mov
cmp
test
push
pop
xchg
cld
adcb
jo
call
int
in
mov
imul
cmp
jne
pop
insb
rcl
sbb
cmp
pop
fcompl
sti
jmp
movsl
int
fbld
std
add
nop
push
lahf
ljmp
push
ja
adc
stos
and
fbld
jbe
cmp
pop
imul
lret
cltd
xchg
or
das
inc
xchg
mov
ljmp
jmp
ja
das
out
push
push
mov
mov
add
cmp
jmp
ret
gs
cmpsl
insb
addb
jo
jo
jo
cmc
and
ds
or
test
xor
mov
cltd
adc
aas
outsl
push
ret
dec
inc
aaa
or
push
and
mov
jo
in
pushf
lea
push
xor
scas
mov
push
divb
xchg
stc
fldl
je
pop
sar
inc
rcrb
imul
popf
add
adc
sub
sbb
roll
add
imul
mov
gs
add
testb
mov
inc
mov
adc
xor
or
pop
andl
insl
sarl
leave
movb
cmp
rep
and
pop
dec
addr16
aas
out
dec
adc
mov
ljmp
and
mov
xor
xor
std
int3
xchg
scas
insl
lods
data16
mov
fwait
jbe
xchg
scas
mov
push
popa
push
mov
lahf
ret
sub
sub
enter
fnstcw
or
sbb
rcrb
fadds
add
or
cmp
loop
jecxz
js
xchg
sahf
mov
dec
in
add
cmp
add
xchg
jp
int
add
mov
jp
stos
pop
sbb
inc
repz
mov
imul
push
sub
cmp
jg
ret
aaa
pusha
jno
inc
aad
pop
xlat
arpl
imul
inc
jno
incb
test
negl
cmp
lret
stc
cli
mov
push
sbb
or
mov
das
nop
rep
je
shrb
add
das
dec
mov
movsl
frstor
cwtl
jp
out
mov
inc
aas
and
popa
jecxz
cmp
mov
jnp
scas
out
mov
xlat
pop
or
test
test
and
xor
add
mov
xor
add
mov
mov
jmp
jp
sbb
cltd
ja
jno
sbb
sub
add
jo
jo
sbb
and
xchg
int3
lea
or
loop
push
mov
scas
shrb
mov
jno
and
inc
and
rclb
inc
cwtl
adc
daa
sub
push
fcoms
pop
arpl
rclb
fnstcw
mov
das
fs
and
iret
and
lcall
jle
pop
in
bound
mov
xor
lock
stos
push
scas
mov
out
or
stos
pop
jae
adc
inc
sbb
ret
mov
jge
lcall
scas
adc
pand
mov
lods
sbb
push
shll
cmpsl
mov
inc
fmul
xor
call
add
pop
push
popf
int
gs
sbb
mov
mov
lahf
decl
pop
xor
testl
dec
leave
cs
dec
cs
dec
ds
adc
xchg
push
mov
push
popa
cltd
ljmp
mov
loope
loope
and
mov
lock
jnp
jmp
mov
add
outsb
sub
insl
inc
or
lds
sub
fisubs
cmpsl
or
imul
sub
push
je
inc
aad
xchg
adc
icebp
js
mov
rolb
sti
es
loope
xchg
ja
out
jl
jl
ljmp
sti
push
pop
addr16
cmpsb
pop
xchg
rorb
imul
push
and
hlt
cmp
mull
lret
inc
fnsave
shl
fwait
mov
cmp
je
fisubl
das
cmp
dec
jne
mov
out
mov
dec
cmp
xchg
add
cmp
repz
mov
push
aas
xor
pop
call
mov
mov
enter
add
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
jmp
and
jae
xor
mov
jo
jo
jo
xorb
mov
popa
ss
iret
jmp
mov
sub
mov
xchg
out
lods
ja
popa
jecxz
jae
pop
mov
jp
leave
aad
in
sub
xor
test
insb
push
jbe
pop
mov
aam
xor
sbb
addl
mov
lahf
out
movsb
pop
adc
and
paddd
mov
shll
adc
out
dec
enter
xchg
mov
pop
xor
adc
movsl
add
clc
lahf
fcoms
pop
stc
icebp
fldl
push
hlt
and
lcall
mov
inc
ja
sbb
adc
jbe
fidivrs
cmpsb
cmpsl
aad
fsubl
test
jmp
adcb
lret
popa
xor
je
scas
dec
and
add
js
lret
mov
push
leave
inc
xor
int3
push
shl
mov
sbb
lock
test
or
push
jno
xchg
mov
lds
incb
mov
movsb
dec
stos
pop
paddb
xchg
mov
mull
fs
pop
in
sub
inc
mov
dec
out
jge
bound
cmp
sti
idivl
lcall
movl
sbb
lock
and
mov
xorb
add
lret
les
xchg
jge
pop
inc
cmp
fwait
jl
lock
adc
imul
iret
imul
clc
add
inc
adc
cmp
push
pop
push
ds
sbb
sub
ds
xchg
js
leave
out
aam
call
push
pop
mov
mov
mov
inc
push
cltd
loop
and
push
and
das
fidivrs
ds
push
mov
outsl
xor
mov
or
xor
hlt
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
jmp
cs
add
popa
push
in
jno
imul
jo
jo
jo
jo
cmp
stos
rorb
xor
aas
mov
dec
stos
dec
fisttps
jo
aas
jo
insb
cmp
lods
add
jne
xchg
leave
sbbb
push
mov
or
int3
pop
lods
dec
test
jge
into
pcmpeqb
and
add
movsb
mov
fnstenv
mov
daa
push
mov
or
aaa
jmp
inc
je
and
mov
test
cmp
je
scas
mov
add
loope
mov
insb
lock
mov
aam
lods
ds
in
mov
leave
xchg
push
lods
imul
bound
add
loop
icebp
fiaddl
lahf
fisttpll
xor
cmp
push
sub
sub
mov
cmp
addr16
mov
mov
jnp
push
inc
dec
push
test
aad
xchg
add
in
test
xorb
jbe
push
sbb
mov
xor
lods
sub
ja
lds
cmp
lds
inc
jg
cld
pop
arpl
jmp
mov
or
mov
in
xchg
cwtl
jge
sbbb
cmp
scas
adc
pop
stc
mov
mov
scas
cmp
jle
pop
sub
mov
and
std
push
mov
mov
sub
push
mov
iret
test
push
fldenv
mov
shl
push
inc
mov
jle
loopne
repnz
rorb
arpl
and
mov
mov
dec
ret
loop
or
test
xchg
neg
icebp
dec
outsl
jge
ljmp
std
cmp
pause
cltd
xchg
arpl
dec
xchg
daa
cld
adc
dec
fs
out
lock
push
cmp
mov
lds
xlat
dec
fcom
mov
mov
add
in
sub
leave
ret
push
mov
push
or
push
movzwl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
mov
mov
xor
push
mov
or
xor
sbb
mov
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
jmp
imul
cmp
jae
jl
dec
mov
jo
jo
mov
jae
inc
cmpb
clc
cmp
daa
cld
andb
fldl
xchg
push
int3
mov
pusha
rolb
push
inc
push
jae
imul
and
jnp
xchg
adc
mov
xchg
push
xor
scas
sbb
jae
pushf
aam
cmp
testl
pop
push
fwait
pop
jp
add
sbb
and
pop
mov
ljmp
jns
and
adc
or
jne
cmp
adc
pop
xchg
xor
sub
lcall
incb
cltd
repnz
lds
mov
int3
xchg
clc
push
sub
jno
or
cmp
repnz
cmp
add
cmp
mov
cmp
aaa
cs
cs
inc
subl
out
adc
push
test
out
rorb
popa
jno
push
jbe
out
push
inc
mov
je
mov
xchg
add
inc
mov
lds
sahf
push
add
add
jmp
call
xor
mov
or
fdiv
leave
jp
adc
pushf
repnz
std
push
les
jge
push
sbb
mov
mov
jg
test
fwait
shr
push
pop
add
mov
mulb
xor
cmpsl
ss
cmpsl
ds
sub
out
and
mov
xchg
jbe
pop
cmp
mov
mov
or
stos
dec
outsl
shrl
adc
jg
repnz
sbb
add
test
lret
dec
dec
sub
xchg
aam
mov
fsts
pop
mov
mov
inc
ficoml
fidivrl
lods
xor
loop
jno
jl
cmc
mov
test
lods
add
xchg
xchg
cmp
mov
sub
fucom
pop
orl
mov
decb
aad
jns
fwait
je
fs
cmp
cmp
int
cmpsl
mov
lods
mov
and
push
xor
sub
fstl
insb
out
jecxz
sbb
xor
aaa
mov
cmp
and
jecxz
and
jecxz
or
add
cli
fsubr
ret
adc
pop
dec
fisubs
cwtl
push
daa
push
dec
mov
mul
sbb
mov
mov
mov
xchg
pop
ret
xchg
sbb
or
mov
fiaddl
fdivrl
mov
push
jg
pop
adc
adc
xor
sub
push
cmp
push
sti
mov
xchg
movsl
dec
jno
faddl
pushf
sbb
add
cmp
ja
push
jmp
jmp
mov
ja
push
aas
xchg
out
mov
or
mov
ds
in
sahf
rclb
mov
mov
jmp
pop
mov
je
cmp
or
and
cld
cmp
inc
andb
arpl
fadds
push
xor
cmpsb
adc
or
jae
les
add
add
inc
jne
sbb
or
mul
int3
and
lods
sbb
out
ja
pop
dec
dec
adc
and
fldenv
out
adc
pusha
daa
dec
xchg
fdiv
inc
fwait
je
push
lds
lret
sbb
jg
dec
mov
pop
andb
out
hlt
dec
data16
ja
cmp
insb
aam
mov
mov
push
pop
lock
pop
jl
hlt
jle
les
in
mov
jp
cmp
pusha
jno
mov
stos
mov
add
loopne
xchg
mov
clc
mov
test
lock
std
mov
push
jg
fsub
pop
adc
push
mov
fimull
lock
inc
and
out
jge
jge
and
push
inc
jno
pop
dec
jecxz
sti
inc
push
sub
mov
mov
xchg
jle
mov
popa
pushl
in
pop
test
in
xchg
add
popf
sbb
adc
ja
sub
rcrb
aas
inc
cmc
mov
xchg
pop
add
mov
fnsave
jp
lods
jge
mov
std
je
cltd
fbstp
mov
mov
pop
leave
mov
in
jmp
stos
push
repz
and
xchg
push
sahf
stos
xor
push
push
pop
inc
movl
dec
sarl
dec
movhps
rolb
adc
cmp
xchg
ret
mov
cli
daa
xor
mov
and
das
and
pmulhuw
dec
sarb
mov
aad
sahf
xor
mov
push
mov
mov
aam
rorb
sbb
out
pushf
mov
out
insb
and
pop
mov
inc
jae
sar
rcll
das
push
inc
shl
mov
sbb
fadds
outsl
mov
jmp
rolb
mov
jae
ret
xchg
mov
push
add
inc
je
int
cmc
pop
push
jbe
xchg
mov
loope
or
mov
std
xchg
mov
mov
xlat
lods
nop
inc
test
inc
idivl
icebp
jb
and
jle
fdivl
sbb
cmc
jl
add
pushf
jb
add
cld
xor
add
jmp
fistl
loope
lds
add
xchg
pushf
cld
pop
jo
mov
push
fs
mov
dec
out
push
pop
cwtl
add
fwait
push
popf
fld
sub
push
out
es
clc
mov
jno
jp
ret
or
xor
lock
mov
or
frndint
pop
pop
mov
mov
push
into
enter
stc
sbb
cli
mov
sub
ja
push
repz
aad
aas
jmp
sub
mov
and
cmpsl
dec
mov
inc
jecxz
shrb
inc
jno
xchg
jno
in
jo
roll
pop
and
dec
push
scas
pop
cmp
test
int3
js
add
mov
shl
out
es
cmc
mov
cmp
data16
js
repz
jne
sub
xlat
jo
adc
inc
mov
cmp
das
loop
sarb
cld
shll
lret
mov
outsl
inc
stos
movsl
xor
les
fildll
cs
addb
adc
inc
arpl
fimull
and
fstpl
and
dec
nop
inc
rcl
test
mov
sbbl
cli
stos
fnstcw
jb
into
loopne
mov
shr
mov
jecxz
shll
mov
out
xchg
clc
or
and
push
dec
adc
cmp
jl
xor
xor
hlt
out
cmp
aaa
mov
lret
pop
xlat
and
mov
cmp
and
mov
mov
mov
xchg
int
and
or
sarb
sahf
icebp
jnp
jb
pop
scas
xor
dec
pop
ds
adc
lret
cmp
inc
xchg
ja
mov
push
jb
cmp
mov
hlt
mov
insl
mov
or
and
or
push
push
pop
xchg
stos
jo
adcl
ret
adc
pusha
mov
cs
fwait
pop
adc
adc
shlb
inc
sub
dec
jecxz
hlt
clc
xchg
fimuls
mov
ja
lods
ljmp
leave
stos
mov
mov
lods
test
fisubs
and
pop
push
xor
mov
fs
mov
cmp
es
push
mov
ret
pop
mov
adc
xchg
fildll
scas
jae
fnstenv
mov
mov
pushf
jno
iret
mov
mov
mov
adc
and
scas
loop
xchg
add
int3
add
sbb
pushl
int3
add
popf
cmp
jecxz
adc
enter
ja
cmp
out
xchg
jne
imul
mov
xor
add
jmp
jecxz
fcoms
out
icebp
icebp
pop
xchg
aaa
aas
fwait
pop
adcb
jo
mov
imul
inc
mov
shr
push
adc
cld
addl
lds
mov
jle
mov
pop
movsl
flds
mov
cmp
sbbl
cmpsb
in
cld
cwtl
adc
pushf
mov
mov
shrb
cmp
jp
sarb
sub
popf
in
adc
mov
xor
sahf
adc
test
pop
test
adc
push
xchg
bswap
xchg
sbb
xor
pushf
sub
mov
ret
adc
pop
shlb
fwait
popf
sti
pushf
add
in
movsl
adc
testb
pop
mov
cld
lea
push
or
movd
xchg
arpl
jge
xchg
mov
mov
inc
cli
xor
mov
fwait
cmp
push
jp
gs
bnd
jne
into
repnz
inc
push
pop
push
mov
lcall
jl
pop
shlb
jbe
push
roll
mov
lock
push
jns
jp
cltd
das
out
push
jg
test
insb
xchg
jl
xchg
mov
fcoms
cmp
lcall
cltd
cld
fdivs
cmp
imul
push
mov
addr16
enter
sti
jbe
add
and
push
or
shrl
adc
fcmovne
dec
es
sahf
cmp
jae
in
ss
loopne
outsl
nop
xor
adc
adc
add
jo
mov
js
lahf
and
das
js
enter
stos
pop
imul
sbb
jbe
fcoms
ret
jbe
xor
mov
or
dec
mov
mov
lret
bound
mov
inc
test
fs
jecxz
pushf
xor
add
and
pop
dec
sub
outsb
sbb
jb
dec
cld
push
sub
cli
xchg
sbb
into
mov
int
enter
jnp
lret
daa
adc
in
xlat
lret
cmp
mov
pusha
adc
cmc
fwait
and
dec
out
jno
jle
das
adc
sbb
call
out
mov
test
mov
stc
mov
add
add
int3
ja
scas
jg
fwait
push
ja
sub
gs
into
pop
out
mov
lods
mov
fst
ds
jo
cmpsl
scas
aad
sbb
fsubr
pop
loop
push
lods
or
xchg
dec
cmp
inc
mov
add
mov
inc
sbb
cld
and
dec
loop
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adc
mov
addl
mov
adcl
xor
adc
mov
andl
add
movl
movzwl
mov
orl
movb
not
lea
mov
or
jmp
out
out
jno
in
or
and
jo
cmp
xchg
cli
imul
test
stos
fisubs
cmp
or
sub
or
mov
fwait
in
stos
test
or
das
fnsave
stos
call
cmp
mov
mov
enter
pop
jmp
nop
scas
pop
mov
lahf
add
jno
lock
jle
pop
out
aaa
add
rcl
shlb
or
mov
sub
incb
test
fucom
lahf
flds
dec
xchg
imul
pop
cli
ret
inc
push
xor
or
xchg
push
mov
adc
cmpsb
sub
push
enter
repz
out
dec
sub
call
sub
push
pop
sahf
sub
xor
and
rorl
dec
es
loop
adc
in
push
das
xchg
lods
dec
cmovnp
cmp
mov
add
test
movsl
inc
push
push
push
add
imul
lock
js
xor
nop
or
movsb
pop
mov
popa
xchg
mov
adc
jecxz
test
imul
mov
movsl
fucomi
sahf
jle
fs
pop
pusha
out
mov
lock
jl
nop
pop
and
add
cmp
ficomps
ds
mov
pop
ror
sub
clc
cld
sbb
cmp
mov
mov
push
jne
xchg
mov
sbb
ja
test
fucomip
jg
mov
mov
and
imul
gs
dec
sub
pop
cmp
sbb
inc
lods
testb
xchg
pushf
lods
js
ljmp
and
pop
and
movsb
ljmp
push
aas
adc
or
and
adc
in
mov
test
and
jo
pushf
and
cmp
in
dec
and
mov
stos
sbb
sub
lret
sub
jg
push
inc
insb
aaa
iret
subl
sub
subl
dec
inc
loopne
jo
out
into
mov
popf
out
fmuls
ficoms
cmp
mov
movsl
push
jp
or
in
xor
pop
sbb
push
in
jno
and
mov
or
inc
stos
xor
jmp
inc
ret
ret
nop
addr16
fidivs
nop
call
js
ds
adc
fnsave
clc
mov
aad
jne
outsl
sub
sbb
int3
imull
popa
lods
aas
dec
repz
in
mov
inc
popa
mov
cwtl
xor
jnp
push
or
lahf
mov
inc
mov
sahf
jmp
in
imul
addr16
xor
into
mov
test
mov
jmp
sbb
jae
fucomi
clc
jns
lds
dec
in
imul
mov
jmp
inc
add
or
mov
subl
xor
sub
andl
mov
negl
movl
jmp
fists
cltd
mov
addr16
push
and
loopne
push
jo
cmp
mov
jecxz
das
adc
out
push
dec
fmul
andl
jmp
inc
movsb
ja
xor
daa
data16
dec
not
xchg
mov
aam
hlt
mov
outsl
filds
xor
pop
xchg
jo
mov
xor
pop
jne
call
mov
sbb
stc
dec
test
cmp
int3
mov
clc
push
xchg
mov
outsb
dec
adc
lock
insb
xchg
jo
xchg
sub
shrb
inc
mov
mov
pusha
jns
add
dec
xchg
test
push
jge
rorl
popa
xor
mov
pop
push
outsb
dec
lea
jl
in
sbb
push
std
loop
jmp
adc
aaa
mov
xchg
enter
outsl
test
mov
insb
xchg
repnz
adc
jge
enter
xor
pop
adc
adc
xchg
xor
sarl
xchg
orb
xchg
test
mov
hlt
jns
insl
push
das
inc
ret
lods
popf
call
jae
sub
xlat
xchg
adc
add
insl
call
gs
je
repnz
jecxz
pop
sarl
jg
fdivrs
rcl
jl
imul
mov
jo
fisubrs
cltd
adc
shlb
fildl
inc
aam
inc
aad
and
xor
int
das
mov
insl
or
outsb
xchg
imul
mov
dec
adc
repz
pop
add
cmpsb
inc
sub
lods
jg
xor
pushf
jle
mov
sbb
sub
add
mov
xchg
jmp
insl
mov
dec
jp
ljmp
sbb
xor
ret
xchg
xchg
cmp
or
sbb
or
push
inc
sbbb
inc
mov
jmp
repz
xor
adcl
xchg
je
rcrb
sub
inc
adc
pop
add
mov
das
mov
stc
xchg
cltd
jle
sub
rcr
or
adc
jae
mov
mov
add
cmc
lods
cmp
popl
dec
add
shlb
pop
xchg
jp
and
cltd
cmp
imul
jbe
or
insl
mov
add
push
sbbb
jns
stos
insb
movb
lahf
cmp
andl
cmp
cmpsl
mov
add
stos
or
mov
jae
inc
xchg
inc
dec
pop
ss
ljmp
mov
test
mov
ss
mov
out
ret
data16
notl
inc
ret
das
les
cmp
jns
inc
mov
jle
scas
divl
mov
call
ljmp
add
xor
jp
cmp
mov
sarl
jo
idivl
subb
lret
xor
shlb
call
cltd
lock
bnd
pushf
xor
icebp
out
bswap
dec
lret
ja
jmp
jp
jge
movsb
push
inc
xor
je
lcall
clc
mov
mov
push
xor
mov
adc
mov
add
movl
jmp
mov
movl
mov
movl
jmp
jge
lret
in
icebp
ss
jecxz
sbbb
jo
jge
jo
push
addr16
stc
movl
xchg
lahf
aaa
outsb
push
mov
sarl
jg
roll
add
mov
aam
sub
add
fsubs
hlt
mov
sbb
dec
push
mov
enter
mov
jg
adcb
imul
mov
adc
pop
push
mov
fwait
adc
lcall
mov
cmovle
ret
jp
sbb
xor
pop
clc
sub
xchg
mov
lret
das
out
cmc
push
and
xor
lcall
decb
in
pop
repz
dec
inc
jp
aaa
push
cld
js
push
cmpsl
lret
mov
out
testb
outsl
inc
push
inc
aam
xchg
cli
dec
mov
mov
loopne
push
mov
pop
xchg
mov
jns
sub
ds
repz
cmp
push
rorl
jge
pop
shll
cmpb
clc
sbb
pop
cmpsl
push
cmp
shr
dec
test
or
lea
sub
xchg
lahf
jge
dec
and
inc
dec
popa
vrcpss
dec
cmp
stos
hlt
mov
and
pop
xor
ljmp
insl
sahf
mov
stc
mov
cmp
and
pusha
clc
mov
ljmp
adc
fucomi
fnsave
enter
xchg
insl
movzwl
int3
fidivrl
pop
scas
xchg
mov
xor
pop
out
movsb
jne
call
clc
push
jb
pop
out
pop
cmpsl
pusha
push
lods
dec
gs
rclb
cmp
mul
fisttpl
test
mov
xorb
mov
sub
stos
leave
jnp
sub
je
xchg
jno
or
ret
dec
adc
mov
lcall
rolb
test
xor
ja
xchg
movsb
iret
aas
xchg
mov
mov
push
pop
add
lods
repz
inc
cmpsl
inc
push
int
xor
mov
cmp
fimuls
or
lea
data16
xor
mov
or
fadds
in
aaa
add
push
adc
int3
call
pop
lea
sbb
jecxz
mov
mov
mov
xor
xlat
xchg
aas
test
fdiv
jg
fcompl
adc
or
les
fwait
mov
cmpsl
inc
test
jp
jl
pop
fwait
pop
dec
into
sbb
lret
sub
push
xor
imulb
add
nop
into
xor
push
sbb
inc
ds
repnz
dec
cmp
jmp
pop
xor
popa
sub
inc
inc
lods
mull
addr16
pop
subl
imul
xor
cltd
or
dec
inc
jne
sar
push
cmp
cwtl
stos
mov
lds
jnp
mov
inc
std
fimull
or
fidivs
fildll
push
xor
rorb
cli
or
xor
loope
add
adc
pushf
or
add
xor
aas
lea
inc
mov
sar
pop
dec
sbb
cmp
movl
jmp
leave
daa
rclb
repnz
jecxz
cmpsb
dec
maskmovq
divl
jo
cmp
in
and
mov
outsb
fldenv
push
pop
xchg
dec
dec
pop
mov
jmp
js
xchg
mov
add
sbb
into
std
ljmp
push
dec
notl
add
scas
lock
das
stc
xchg
push
sbb
sub
icebp
notl
ror
fs
ljmp
dec
xor
mov
popa
mov
inc
push
jb
das
cmp
rol
xchg
mov
les
das
push
push
pop
shll
es
or
pop
mov
lods
out
mov
leave
sarl
xchg
cmp
pop
mov
cmp
fstp
inc
adc
push
cmp
jle
loope
add
mov
or
cmp
adc
adc
pop
or
xchg
ja
push
fmuls
jo
push
pop
mov
sub
insl
and
std
adc
push
lahf
lods
pop
mov
shlb
pop
rcll
imul
xchg
mov
inc
inc
sbb
ljmp
loope
clc
lret
or
inc
dec
jmp
adc
or
xor
push
aad
sub
mov
inc
cltd
jnp
arpl
sub
rorb
cmpsl
rcrb
repz
out
mov
mov
testl
lods
xor
pop
rcrb
mov
incb
jmp
int3
sub
outsb
and
shl
nop
stos
out
in
sti
mov
sub
xlat
loopne
add
shll
xchg
push
sbbb
rcrl
dec
adc
ds
cltd
inc
arpl
test
mov
sub
mov
insl
xchg
jns
xchg
xchg
enter
mov
sbb
cwtl
je
mov
lret
mov
ret
scas
lahf
adc
cmp
out
aad
aam
mov
jae
int3
pop
jl
pop
movsl
mov
gs
sti
mov
test
in
ret
adc
ret
fsts
sub
mov
cwtl
lds
aas
mov
inc
insl
xchg
insl
lods
xchg
and
sbb
adc
daa
or
dec
add
jg
ds
fisubrl
mov
pop
pop
hlt
xor
cmpsl
adc
add
sub
movsl
ljmp
mov
mov
jp
mov
cli
pop
and
stos
mov
sbb
loope
test
int
scas
dec
imul
in
enter
int3
out
test
or
xor
loop
mov
adc
mov
inc
cmp
hlt
fs
in
or
into
push
sbb
xor
push
out
arpl
xlat
pop
inc
sbb
push
cmpl
mov
inc
jno
test
das
mov
mov
sub
mov
cld
mov
mov
inc
call
es
test
jno
ret
repnz
loopne
sub
mov
imul
fdivrp
movsl
push
repz
cwtl
pop
mov
sbbl
ret
mov
lds
jb
and
mov
jmp
push
jge
add
jb
inc
sbb
lahf
in
in
or
jo
cmp
fwait
ljmp
and
mov
ret
dec
cld
lods
cmp
insb
mov
outsb
push
pop
lea
outsb
aas
testl
mov
mov
inc
jne
push
bound
cmp
add
lret
lods
mov
add
sbb
or
enter
repnz
adc
fwait
xchg
bound
sbb
mov
inc
sub
aas
sub
mov
je
out
jl
mov
push
pop
push
loope
mov
shll
sub
push
inc
dec
aas
cs
clc
shr
mov
mov
xor
inc
push
inc
sub
cli
jge
xlat
xor
jp
fiaddl
cmpsb
decb
int3
or
inc
jle
fs
movb
jg
out
jmp
mov
iret
pop
pand
xor
stos
xchg
adc
scas
mov
xchg
cli
jecxz
xchg
imul
push
in
hlt
scas
jbe
inc
insb
lret
loop
ja
mov
aam
btsl
jg
mov
outsb
mov
mov
dec
jo
pop
lock
popf
es
repz
movsl
xlat
xor
add
mov
sbb
iret
mov
callw
jo
mov
loopne
add
inc
mov
andl
mov
in
in
sub
dec
xor
dec
and
push
jecxz
dec
std
aam
or
popf
out
jno
movsl
lahf
xchg
and
fsubrs
leave
push
inc
dec
jns
cli
lock
mov
mov
aad
iret
sarl
mov
push
adc
mov
and
fisubs
sbb
icebp
jbe
ss
jle
adc
psubusb
push
xchg
lahf
repnz
stos
pop
xchg
jmp
ret
push
cmpsl
push
sti
jge
add
jo
dec
push
add
sub
out
in
ss
jle
aam
gs
add
push
sarb
cmp
cld
mov
loope
mov
aaa
aas
jle
xlat
push
sti
scas
imul
es
insb
dec
xchg
sbb
cmp
push
cmpsb
inc
repz
push
sbb
cmp
jmp
or
xchg
out
xorl
xchg
mov
mov
mov
adc
jbe
adc
dec
mov
sub
add
arpl
sbb
mov
stos
mov
out
jecxz
xor
test
jne
jp,pn
leave
jae
out
inc
pushf
add
test
out
jb
hlt
xchg
cltd
sahf
lret
mov
stc
jge
test
dec
pop
test
add
std
push
cld
nop
fs
jmp
inc
fwait
push
cmp
jl
jge
js
sti
lods
mov
pop
arpl
stc
in
bound
mov
cwtl
sub
insb
sarl
xor
sub
push
mov
mov
loop
pusha
mov
pop
mov
xchg
scas
inc
xchg
fsubrl
inc
hlt
outsl
mov
xor
add
cmp
movl
je
add
push
adc
push
mov
mov
andl
xor
mov
add
addl
movzwl
andl
mov
sbbl
mov
addl
movzwl
sbbl
xor
addl
jmp
fdivl
dec
rsqrtps
icebp
inc
sub
shll
jo
jge
jo
sub
rclb
repz
jno
sbbb
mov
cmp
jge
cmpsl
sti
test
aad
add
or
leave
out
les
stc
and
lds
mov
ret
cmpsl
fldl
ret
sbb
mov
jno
push
sub
out
rorb
roll
jp
mov
test
popf
enter
dec
mov
stc
xor
adc
test
and
es
sbb
fisttpll
xchg
sbb
sbb
jge
jmp
jno
cmp
cmp
stc
xor
icebp
lahf
push
push
or
mov
pop
scas
andl
mov
into
push
sbb
sbb
mov
repnz
lock
frstor
loope
nop
inc
inc
add
stos
or
call
xor
imul
adc
fscale
xor
ljmp
cld
pop
adc
xchg
mov
mov
pop
dec
and
pop
xchg
lods
pop
and
add
and
mov
mov
mov
mov
fidivl
xchg
test
popa
scas
cmpsl
xlat
cs
and
sub
adc
mov
cwtl
jb
sbb
add
inc
xchg
fwait
mov
sarl
fs
push
scas
push
push
xchg
mov
adc
sub
clc
cmpsl
arpl
rcrb
cmp
movsl
inc
js
inc
mov
sub
repz
mov
icebp
fldl
pusha
cmp
inc
push
lods
shr
stos
lret
lds
xorb
cmpl
repz
mov
jae
pop
dec
pop
sub
add
das
clc
mov
add
add
pop
sbb
aad
sub
repnz
adcb
add
pusha
mov
or
adc
stc
movsb
add
sub
push
cmpb
dec
mov
iret
sub
mov
int
jae
mov
ret
cmpsl
or
fdivp
adc
adc
daa
ja
dec
pop
mov
inc
xchg
aaa
sbb
adc
fisttpll
stc
and
repz
jmp
filds
mov
aaa
sub
fs
insl
aas
loop
add
in
mov
xlat
roll
mov
push
jge
mov
mov
cwtl
int
std
mov
clc
insl
add
icebp
rcrl
push
js
cmp
ret
or
loope
mov
data16
and
dec
mov
sub
stc
or
fwait
cmp
int3
fwait
cmpsl
and
xchg
lock
popa
cmc
lret
pop
mov
push
int3
and
stc
js
sarl
stos
imul
pop
xchg
dec
mov
jo
adc
push
pop
xchg
inc
fs
inc
mov
xor
cltd
mov
dec
cmp
out
cwtl
stos
push
lahf
push
or
mov
mov
and
cs
stos
repnz
or
xchg
clc
fcmovbe
inc
aaa
xor
mov
jg
inc
cmp
lea
mov
add
add
mov
movl
mov
jmp
or
daa
arpl
fisttpll
mov
jo
cmp
into
stc
jg
adc
cmp
jnp
pop
into
mov
inc
hlt
xchg
dec
lea
jno
sbb
shl
test
mov
sub
fwait
jmp
outsl
movsl
imul
js
flds
sub
mov
int
add
cwtl
in
jo,pn
outsl
jno
arpl
imull
test
mov
inc
cmp
pop
fcom
pop
pop
dec
pop
sub
sbb
cld
stc
jbe
cmp
jmp
fisubl
pop
pop
xor
aam
push
les
in
or
jo
mov
insl
inc
push
pusha
mov
push
jg
push
inc
je
int
rorl
es
sub
lret
mov
dec
negl
in
adc
lods
sub
push
std
sbb
in
cmp
dec
popa
inc
xchg
sub
insl
xchg
cli
inc
mov
ss
in
xor
cmc
movsl
jbe
pushf
dec
pop
jae
adc
add
addr16
pop
jne
es
enter
fldcw
inc
push
or
dec
subb
scas
lcall
sub
cmp
cwtl
adc
fcmovbe
sarb
outsb
mov
rorb
imul
outsb
dec
xor
lea
insb
xchg
int
add
lods
xor
sub
pop
outsb
cmpsl
jg
and
jb
cmpxchg
jbe
mov
lods
mov
add
mov
loopne
push
jb
mov
inc
ljmp
dec
sub
pop
hlt
lcall
fistl
and
inc
outsb
cli
rcrl
push
inc
insl
fbstp
call
inc
lock
or
pop
push
pop
push
sbb
cmp
xor
inc
lcall
mov
mov
xor
pop
mov
xchg
sti
in
pop
inc
pushf
or
dec
repz
hlt
mov
into
js
into
push
js
nop
shrb
push
divb
into
mov
mov
sub
add
mov
inc
mov
sbb
fmull
dec
mov
ds
pop
out
cmc
mov
rorb
or
pop
popa
cmpsb
fisttpl
fisubrs
ljmp
cltd
mov
inc
mov
mov
fisttpl
lods
pop
mov
push
mov
inc
dec
arpl
push
mov
mov
fisubs
xlat
and
add
pop
aad
pop
scas
fwait
fs
dec
inc
fiaddl
dec
mov
call
cmp
jmp
fnstenv
push
mov
movsb
sub
inc
stc
adc
cmp
pop
or
in
xchg
jne
push
pop
cmp
jl
aad
mov
pop
add
enter
int
adc
xchg
cmp
leave
repz
and
xchg
sbb
xchg
or
and
adc
scas
pop
and
insl
ds
sub
popfw
hlt
dec
je
cwtl
push
incb
mov
adcl
mov
adc
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
jmp
xchg
roll
icebp
lods
add
rcrl
adc
jo
jge
jo
mulps
test
les
out
das
out
mov
push
sub
sbbb
jno
fisubrl
je
jmp
adc
cmpsl
dec
mov
mov
rorl
xor
int3
data16
pop
les
xchg
xchg
or
jle
popf
cmp
jmp
xchg
pusha
push
cmp
add
rcr
push
nop
jl
fbld
adcb
jo
mov
dec
repnz
mov
jmp
add
pushf
or
cmp
add
aaa
push
push
ljmp
lods
fldcw
loope
sub
and
or
mov
cmc
inc
sbb
and
pop
bound
in
cld
jno
pop
fistl
mov
loop
or
sub
push
fidivrs
xchg
sahf
mov
in
mov
mov
mov
push
leave
push
add
pushf
xchg
test
jnp
xchg
adc
insl
pop
jno
shrl
cwtl
addr16
xchg
inc
das
mov
jb
hlt
dec
sub
cmp
inc
sub
adc
cmp
cli
stc
or
xor
jbe
add
lret
jns
fsubrl
out
mov
mov
stos
js
xor
dec
pop
arpl
mov
sbb
mov
jb
stos
data16
sbb
loop
lods
fwait
in
icebp
ret
ds
imul
fcmovbe
xor
into
lret
popf
mov
xchg
sub
push
cmp
dec
mov
repz
xchg
rclb
xor
or
push
fdivl
test
pop
cmp
aas
movsl
rol
imul
test
sbb
lahf
inc
inc
cmp
or
sbbb
daa
cwtl
hlt
popa
mov
jecxz
into
fimuls
mov
pusha
fs
and
jb
pop
cmpsb
mov
push
movsl
xchg
mov
pop
dec
mov
adc
fnsave
shrd
mov
into
iret
ja
hlt
adc
jmp
pop
xchg
cmp
shr
aaa
sub
sub
jns
scas
cmc
test
rcrl
fidivl
outsb
shl
sub
mov
outsl
cmpsl
push
mov
je
pop
add
mov
adc
push
xor
and
jnp
mov
mov
bndstx
cmp
in
sbb
adc
lret
mov
or
idivl
adc
outsb
jo
dec
sub
enter
je
imul
pop
ja
push
test
divb
pop
xchg
icebp
xor
push
sub
test
jg
xchg
and
xor
sbb
rorb
push
cmp
mov
xchg
dec
lea
mov
lret
inc
icebp
inc
decl
lods
xchg
mov
pop
test
lahf
leave
ret
push
mov
push
mov
mov
sbb
jmp
pop
scas
sbb
push
pop
mov
xlat
inc
mov
jo
jle
jo
je
sahf
out
inc
adc
adc
jg
cmp
push
int3
scas
outsb
xor
fidivs
into
jo
movsl
jae
fisttps
pop
xor
adc
push
mov
lret
repnz
into
std
pop
test
inc
mov
add
xchg
xor
movb
adc
or
fsub
or
es
sbb
inc
adc
popf
imul
lock
std
mov
add
pushf
insl
xor
lods
mov
xor
sub
fs
jl
test
movsl
stos
adc
or
push
dec
xchg
xchg
dec
and
push
adc
xor
sbb
pushf
sbbb
or
fldt
mov
iret
jge
mov
and
lcall
dec
loopne
mov
scas
arpl
xor
pusha
aam
enter
dec
mov
imul
sbb
mov
pop
call
adc
int
inc
pop
call
fldcw
popa
cs
aaa
adc
sub
sbb
ljmp
xor
sbb
jns
out
jae
xchg
cmp
clc
mov
sbb
pop
lret
lahf
loop
dec
mov
aaa
cmp
jbe
repnz
pusha
fmul
pop
jbe
pop
fbld
gs
sbb
repz
fadds
subl
inc
sub
mov
jecxz
cwtl
pop
lods
xchg
sub
or
lea
pop
in
inc
je
push
test
neg
mov
popa
shl
lods
dec
cwtl
xchg
cmp
stc
cmpsb
dec
repz
xor
cwtl
xchg
fildl
mov
imul
inc
pop
mov
lods
mov
and
fcmovnu
jl
int
jg
xchg
ljmp
cld
out
sub
mov
in
mov
cwtl
jnp
push
sub
out
fbstp
ds
and
sbbb
enter
jo
in
push
pop
lahf
pop
repz
mov
mov
sbb
ds
xchg
cld
dec
xor
out
jo
ret
push
loope
nop
filds
add
movsb
aam
frstor
sbb
jle
dec
aas
push
addb
and
jmp
in
testb
cld
hlt
data16
jle
inc
pushf
int
shlb
mov
adc
call
xchg
or
mov
xorb
jecxz
movzwl
and
mov
jmp
ja
and
dec
xchg
fstl
xor
jo
test
mov
jno
dec
fdivrl
sub
and
cld
movsb
rorl
mov
mov
stos
xchg
pushf
mov
xchg
sbb
lcall
add
add
inc
pusha
test
cmc
xchg
push
mov
es
jp
sbb
pop
lret
mov
xchg
xlat
sbb
fcmovnb
test
imul
aad
cli
pop
aas
aaa
cli
cmp
iret
lcall
mov
adcl
movl
dec
inc
jbe
jp
fnstcw
int3
idiv
in
mov
and
xchg
inc
pop
out
xor
pop
or
mov
fistpll
pop
imulb
aad
pop
jns
stos
add
into
inc
je
mov
jb
inc
jne
stos
push
lcall
lea
rcrl
shll
dec
inc
xchg
adc
test
push
out
cltd
inc
aam
sarl
push
jne
push
pop
into
push
push
in
push
jg
rcrb
mov
ret
cmp
mov
out
push
add
das
hlt
add
push
xchg
outsl
push
push
sbb
je
push
xchg
sbb
stos
in
mov
divl
jmp
mov
jp
popa
push
icebp
out
mov
push
mov
clc
sub
scas
sbb
cmp
lret
jg
push
xchg
or
std
mov
les
hlt
and
dec
push
loope
outsl
ds
jmp
cs
fstps
xchg
xchg
lret
push
ret
test
hlt
lock
call
sbb
pop
repnz
sarb
popf
stos
mov
add
sub
not
subl
shrl
sbb
mov
xorl
cmpsl
cwtl
mov
loope
add
xchg
adc
dec
imul
xchg
sbb
out
insl
cmp
sub
and
testl
add
lods
sub
push
inc
test
dec
loope
adc
imul
movsl
aas
movsb
fpatan
bound
out
fs
outsb
push
push
test
in
mov
sub
into
and
in
push
hlt
mov
cmp
sub
in
rcr
fsts
aas
mov
ror
adc
dec
shll
cltd
or
and
idivl
fidivrs
fnstsw
add
mov
cmp
xchg
jle
popa
push
mov
test
or
movsb
pop
out
mov
inc
clc
xor
jnp
add
movl
and
mov
sbb
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
call
xor
xor
dec
mov
jmp
mov
add
xor
and
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
jmp
xchg
imul
dec
cmp
jo
mov
adc
enter
popf
sbb
sub
push
mull
or
xchg
fdiv
adcb
mov
stos
sbb
xchg
and
filds
mov
iret
push
cld
rol
sahf
ret
bound
xchg
into
jno
cmpsl
xor
and
movb
shll
and
jbe
sarb
jns
inc
test
adcl
jns
test
imul
jns
cs
push
and
adc
pop
push
mov
pop
jmp
adc
adc
sub
jmp
loope
jo
adc
pop
cmp
sbb
es
imul
dec
xchg
add
push
cmp
or
xor
dec
mov
cmp
popa
push
xor
xchg
or
mov
push
lret
inc
jae
sbb
jb
out
pop
or
sahf
cmpl
fisttps
cmc
test
push
dec
jb
and
jl
mov
lock
jle
loopne
lods
dec
and
stc
inc
std
mov
push
out
add
pushf
shll
aas
and
in
push
test
and
lock
leave
cmp
std
leave
dec
mov
stc
leave
neg
loop
test
or
mov
stos
js
sub
adc
and
push
sti
cwtl
inc
xor
or
data16
jg
sub
dec
pop
mov
rclb
sub
pushf
gs
dec
sahf
push
sub
lock
xor
mov
ret
cmp
es
aad
ljmp
repnz
loop
adc
cmpsl
add
cmpl
add
testb
mov
sbb
pop
sub
and
or
mov
jl
cld
rorl
shr
lret
jp
leave
lods
out
push
jp
icebp
sbb
or
sbb
lea
clc
xchg
and
arpl
jnp
jno
push
mov
adc
xchg
loopne
dec
imul
es
push
sbb
fs
mov
int
fs
lods
xchg
mov
shlb
loop
and
cmp
fldenv
cmp
std
or
outsl
pop
in
jb
int
add
lods
sbb
mov
loope
xlat
pop
jecxz
das
cmovs
iret
xor
inc
sbb
int
and
dec
mov
rcrb
les
push
test
or
jecxz
mov
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
addl
movl
mov
mov
adcl
mov
xorl
xor
jmp
fidivl
jle
jne
jb
sub
inc
pop
js
aas
jo
cmpsl
jg
jo
add
mov
push
mov
lods
sub
cld
je
movsl
mov
aam
mov
pop
jmp
out
xor
cmc
jb
loop
shrb
and
cmp
jb
dec
movsl
popf
stos
mov
movsl
loop
mov
jl
jnp
sub
nop
mov
cli
dec
xor
pop
stos
out
hlt
fimuls
stc
popf
lret
iret
mov
mov
adcb
mov
lahf
cmp
mov
jmp
dec
jbe
adc
lret
fldl
aad
rep
divl
cli
lods
push
xchg
sti
mov
cmp
sub
sbb
xchg
ds
or
adc
neg
mov
in
jb
mov
mov
sbb
and
mov
pop
or
mov
leave
add
aad
xchg
push
sub
mov
push
sar
cmc
jae
inc
shr
ftst
aam
inc
sarl
jle
fstpl
inc
lock
mov
movl
push
lcall
test
gs
inc
adc
sub
cmp
ljmp
and
push
pop
and
or
push
add
and
popa
lods
repz
std
fsub
dec
stc
cwtl
icebp
ret
cmp
out
cwtl
out
pop
movsb
jecxz
push
aaa
xor
xchg
mov
icebp
ss
dec
cmc
fs
jbe
arpl
fcmovnb
cmp
adc
inc
push
aaa
movsl
fstpt
sbb
cmp
cmp
pop
loop
je
mov
sbb
xchg
or
pop
push
cmp
add
orl
mov
mov
xor
push
sbb
mov
or
mov
sbbl
add
adcl
mov
sbb
mov
adcl
mov
subl
mov
or
jmp
out
hlt
arpl
popa
xchg
insl
hlt
pop
xor
xchg
gs
cmpsl
jg
jo
pop
pop
mov
push
sub
sub
xor
loopne
mov
incb
mov
mov
cmp
js
test
push
push
mov
sub
lcall
int3
xor
loopne
cmp
and
xchg
dec
movsl
int3
repz
in
aam
sbb
sbb
jb
lods
dec
enter
test
test
lea
test
cmp
fsubl
ljmp
addr16
test
pushf
or
lods
icebp
cmpsl
dec
ja
add
sub
adc
sbbl
dec
push
mov
in
cs
stos
fmull
or
sub
xchg
mov
pusha
clc
push
jge
dec
add
xor
or
inc
inc
xor
cwtl
ret
dec
movsb
add
jp
sbb
ret
pop
xchg
push
mov
fcoml
popf
mov
mov
jmp
repz
add
in
fdivr
idivb
scas
and
mov
adc
enter
inc
xlat
out
fs
pop
scas
push
cmp
aam
or
repz
outsl
xor
fimuls
cmp
cld
dec
into
test
mov
scas
repnz
arpl
ds
fidivrs
dec
adc
push
xchg
shll
into
cmpsb
xlat
in
lds
insl
sub
ret
imul
pop
add
lds
cli
leave
dec
xor
scas
imul
or
call
cmc
or
push
cmp
mov
sbb
xchg
hlt
enter
inc
sbb
or
inc
add
inc
or
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
xor
add
jmp
jge
gs
gs
sti
ret
pusha
jo
cmp
sti
icebp
mov
jo
jg
jo
arpl
push
test
adc
test
ret
push
pop
std
jg
add
sbb
insb
jno
test
imul
xchg
pop
mov
lea
push
add
ds
mov
js
dec
mov
lock
push
loopne
xchg
movsb
lock
xcrypt-ctr
cmpsl
fwait
icebp
mull
in
add
xlat
scas
pop
xchg
adc
pop
js
pop
add
xor
cmpsl
lods
cld
lret
or
push
lret
add
int3
ret
popa
dec
stc
idiv
push
jne
xchg
outsl
adc
dec
ljmp
cld
push
jbe
xchg
shrl
ret
xchg
add
aaa
mov
cmpb
and
adc
rcr
and
xor
push
add
shrl
push
leave
xor
lea
test
push
ficoml
or
jnp
or
cmp
mov
push
movsb
inc
sub
xor
push
mov
clc
lock
mov
jle
stos
sbb
sti
mov
aaa
inc
push
ljmp
pop
fdivr
fstpt
idivb
push
push
stc
fwait
xchg
mov
sbb
lods
xor
insl
sub
pop
mov
clc
inc
xchg
shrl
jo
xchg
data16
pop
jns
shlb
out
outsb
add
aad
jmp
dec
cld
sbb
jl
inc
cmp
push
mov
orb
cmc
sub
jle
pop
pop
adc
lds
mov
inc
mov
add
in
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
adc
movl
mov
sbb
mov
mov
xor
add
mov
sub
mov
sub
mov
andl
mov
mov
jmp
mov
jg
inc
rorl
jae
pop
dec
in
sub
jo
jle
jo
sar
add
mov
int3
add
sub
push
cmp
mov
xor
push
xor
push
and
xchg
lods
mov
aas
stc
and
mov
outsb
xor
outsl
push
dec
bound
xor
lds
mov
xchg
das
xchg
pop
inc
jo
jg
mov
mov
mov
popf
xchg
cmpl
fidivrl
scas
inc
dec
dec
mov
sub
in
add
movsb
pusha
repnz
dec
imul
int
jns
test
aaa
inc
int3
inc
pop
shlb
mov
dec
add
fnstsw
or
mov
dec
mov
test
aad
cmpsb
das
inc
lock
enter
andl
push
add
sub
rorb
jle
sbb
mov
mov
insl
mov
push
cld
push
xchg
fisttpll
mov
jmp
mov
imul
sbb
stc
and
push
cmp
jb
dec
pop
add
xchg
popf
or
xor
cwtl
idiv
sbb
mov
ret
aam
imul
pop
jns
lods
push
daa
push
jle
sti
mov
sbb
and
lea
mov
xor
mov
jecxz
movsb
add
mov
or
outsb
movsb
addr16
loopne
adc
sub
les
repnz
cmp
cld
aas
mov
xchg
pop
aaa
push
stos
xor
iret
adc
std
and
lret
xor
sub
cmp
mov
scas
mov
mov
or
sbb
jno
and
dec
fistpll
and
xor
je
int
mov
not
jnp
mov
fs
xor
pushf
dec
add
push
jns
mov
inc
sub
hlt
push
pop
popa
rclb
nop
xor
inc
arpl
and
jo
mov
lret
leave
adc
lret
mov
fmul
lock
sub
push
dec
outsl
sub
mov
dec
das
enter
inc
sub
fwait
jnp
jnp
adc
pop
xchg
icebp
into
dec
shrb
mov
xor
mov
mov
adcl
mov
mov
orl
mov
subl
mov
andl
mov
mov
test
mov
jne
mov
jmp
sub
test
pushf
cmp
cmp
loop
jo
push
mov
pop
fidivrl
sbb
pop
adc
call
xor
sbbl
cmp
stos
inc
daa
add
aad
call
repz
cmp
mov
mov
fldenv
sub
sbb
cmc
xor
cmp
testb
jmp
lahf
mov
hlt
push
dec
mov
mov
cli
sub
scas
jns
push
insb
pushf
popa
xor
pushf
ds
movsb
sbb
fcoml
ljmp
lea
out
rcrb
mov
fisttpl
mov
adc
cmpsl
mov
fcmovb
bound
xchg
mov
pusha
bound
rcll
lret
shrb
scas
xor
insl
loop
scas
xchg
inc
cmp
in
dec
loop
inc
dec
in
ljmp
add
ffree
roll
mov
jmp
or
aad
inc
ret
cs
outsl
mov
xchg
cld
pop
cmc
fsubr
addr16
jl
or
inc
xchg
and
mov
or
mov
xchg
jl
dec
sbb
out
aam
mov
inc
adc
roll
outsl
mov
dec
and
mov
jo
test
sti
rol
lcall
pushf
icebp
sbb
pop
cwtl
shll
clc
cld
or
push
or
ret
fdivs
inc
mov
mov
test
inc
sbb
push
mov
mov
dec
jecxz
js
cli
pop
jge
fdivr
sub
add
ja
adc
ret
orl
das
gs
lret
dec
xchg
and
hlt
mov
adc
jo
fbld
pop
std
inc
decb
lods
call
cmpsb
add
mov
push
das
scas
push
cmp
ret
mov
or
mov
fcomps
mov
mov
ds
cltd
mov
int3
xchg
mov
mov
xchg
lret
push
aaa
mov
dec
dec
or
sahf
xorl
pop
movsl
add
or
loopne
cmc
dec
mov
pop
pop
fisubrs
inc
push
sbbl
sbb
in
popa
popf
daa
cmp
dec
pop
push
or
push
adc
loop
repnz
sbb
les
push
mov
xchg
pushf
jb
add
ret
push
mov
sub
mov
mov
mov
subl
mov
xorl
movl
incl
movl
subl
mov
push
push
push
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
add
xorl
mov
movl
jmp
inc
jae
pop
sub
jae
and
mov
pop
xor
pop
lds
and
jo
fnstsw
lcall
aas
and
sbb
out
fisttps
popf
pop
xchg
push
mov
jne
xchg
pusha
ja
jge
cmpb
pop
mov
jno
inc
repz
adc
pop
mov
aad
xor
pop
cmc
xchg
inc
aaa
and
dec
pop
or
scas
xor
add
mov
inc
sub
adc
dec
and
xchg
lcall
in
sbb
gs
jne
inc
and
pop
repz
xor
dec
cmp
cmp
lods
lea
cmc
out
shll
lret
and
movb
lea
js
push
hlt
sbb
mov
mov
cld
shld
rorb
imul
mov
ljmp
push
rcrb
adc
jae
or
mov
stc
sub
sub
push
cmp
mov
xor
inc
sti
jp
jmp
add
nop
inc
cwtl
inc
pop
mov
sbb
lds
mov
mov
in
imul
ret
jo
mov
fsubrl
sbb
mov
dec
push
dec
gs
gs
bound
mov
inc
popa
aaa
inc
xor
pop
dec
push
and
cltd
inc
jmp
mov
mov
mov
sahf
int
das
mov
mov
push
dec
lcall
scas
stc
inc
sbb
lret
jno
hlt
pop
adc
xor
insb
test
jle
dec
fidivrs
and
xorb
cmpsb
add
jne
leave
cmpsb
movsb
pop
int3
xchg
imul
dec
mov
and
jmp
add
add
daa
or
sub
xlat
push
test
mov
mov
adc
mov
xchg
test
shll
rclb
stc
mov
je
mov
sahf
aad
iret
inc
adc
push
cltd
mov
pop
fcmovnbe
lcall
cmpsb
in
inc
fcomip
mov
pop
push
adc
test
mov
out
xor
fnstsw
sub
lahf
lea
addr16
jae
mov
cmp
in
lret
inc
out
xor
pop
cmp
test
push
mov
je
outsb
dec
mov
sub
movsl
inc
fadd
sbbb
cld
movsb
inc
lcall
test
cli
int
adc
mov
and
stos
mov
fldcw
cmp
fucomp
imul
into
xor
mov
inc
dec
rcrb
mov
sarb
aam
dec
xchg
daa
sub
xor
pop
fldcw
add
jecxz
or
and
sbb
add
jg
arpl
cmp
add
lahf
xchg
std
aad
in
cli
stos
jo
in
loopne
cmp
mov
out
movl
adcl
movl
movl
add
jmp
sbb
sarl
lahf
popa
sti
arpl
jo
and
jo
mov
sbb
inc
mov
aas
jmp
ss
int3
xchg
popa
mov
mov
sti
lcall
pop
into
dec
data16
push
xchg
jg
les
fcmovnbe
sbb
cmc
xchg
mov
in
pushl
pusha
inc
lock
adc
mov
pusha
imul
fmul
mov
pop
or
loope
and
in
mov
pushf
leave
fwait
adc
xchg
jp
add
shlb
jg
mov
mov
jg
pop
fmuls
and
insl
mov
movsl
aaa
js
arpl
or
enter
xchg
and
fs
and
push
js
fs
push
in
mov
pop
adc
and
aaa
mov
mov
scas
pushf
stos
xchg
mov
mov
push
sbb
rorb
out
test
mov
fcmovnbe
push
inc
xchg
popa
into
inc
and
mov
mov
dec
cmp
into
adc
movsl
sbb
or
jge
test
push
adc
lret
das
sbb
mov
inc
nop
sub
scas
loopne
adc
mov
ficoml
pop
gs
frstor
mov
sub
movsb
or
stos
pop
jo
add
sbb
jl
mov
jo
adcb
mov
int3
call
lahf
dec
mov
xor
stos
mul
push
lods
lock
pusha
cmp
dec
sti
jnp
xchg
insl
dec
mov
push
jmp
or
jns
xor
sbb
mov
push
sahf
cmp
push
xchg
pop
sar
imul
repz
adc
fstpl
pop
mov
call
mov
sub
mull
jnp
aas
pop
mov
xlat
xchg
mov
cmpsb
mov
fcompl
adc
aas
mov
nop
jnp
movsb
push
cld
push
dec
insl
dec
test
xchg
lds
dec
sub
mov
lea
lcall
add
sub
fcmovu
mov
das
sub
inc
mov
adc
imul
cli
outsl
xchg
cmp
xor
xor
cmp
imul
mov
adc
loope
adc
popa
xchg
inc
adc
mov
adc
outsb
dec
decb
fimull
dec
std
arpl
test
xchg
pop
dec
jge
sbb
adc
das
dec
add
inc
jno
in
mov
mov
xor
icebp
dec
aam
lcall
pop
xchg
xchg
movsl
and
or
dec
in
enter
cmpsb
pop
mov
jne
add
vpsubsb
mov
mov
xchg
and
lcall
lea
ret
xchg
inc
mov
xchg
inc
ljmp
adc
dec
or
rcl
mov
out
jp
mov
push
lods
fisttps
sti
mov
inc
cmp
jp
dec
mov
hlt
addl
xor
addl
add
xorl
mov
movl
movb
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
add
orl
mov
adc
jmp
or
rcl
cmp
pop
jns
popa
cmpsb
mov
jo
and
jo
lret
out
fs
dec
lock
pop
adc
and
inc
ljmp
pop
int
shll
stc
into
pop
cwtl
sahf
mov
or
mov
jbe
jo
sbb
dec
lcall
push
jg
push
xor
jnp
add
imul
ljmp
imul
mov
lcall
mov
or
push
std
fstpt
push
mov
cmp
aaa
xchg
stos
adc
int
wbinvd
and
inc
lods
mov
mov
push
pop
nop
push
sbb
repz
stc
je
mov
cs
sbbl
fimuls
aas
dec
pop
rorb
sahf
stos
lcall
mov
call
jl
dec
inc
sarb
iret
movlps
ret
imul
push
lods
movsb
je
inc
jbe
nop
xchg
sub
jne
mov
mov
inc
pop
sbb
mov
fistl
sbb
call
mov
mov
mov
cld
pushf
cs
cmp
inc
mov
sbb
adc
shlb
sbb
push
xchg
mov
sbb
pop
cmc
dec
mov
aad
leave
popf
sbb
mov
into
or
int
ja
repnz
or
gs
jns
js
test
cmp
stos
push
ss
pop
mov
pop
cltd
inc
adc
scas
ja
mov
pop
frstor
aad
xorb
push
xchg
lret
mov
mov
push
int3
jle
lea
pop
xchg
push
and
xchg
in
mov
cmp
xor
xchg
mov
lds
in
xorb
sub
mov
and
out
jno
xor
jb
mov
fbld
mov
fsubrp
sbbl
insb
sub
lock
push
pop
inc
sbb
stos
fsubrl
js
popf
pop
jl
push
cmp
mov
fistps
int
cli
add
adc
xlat
insl
arpl
or
arpl
add
and
clc
outsb
stos
mov
fldl
inc
aas
hlt
loopne
inc
dec
cltd
or
jnp
scas
cmpsb
dec
mov
inc
pop
pop
mov
fnstcw
int3
pop
mov
ljmp
out
arpl
mov
inc
lock
sbb
lods
or
iret
ret
inc
mov
lret
js
pop
cmpsb
ss
add
mov
aad
or
add
out
xchg
push
fs
sbb
inc
mov
xor
test
stos
cmp
xchg
push
mov
xchg
jp
xchg
leave
add
jle
aad
mov
mov
or
mov
imul
popa
pusha
shlb
decl
test
mov
es
in
sub
pop
leave
subl
loopne
xor
aam
sbb
mov
fistl
hlt
nop
push
fldenv
insb
cli
out
scas
mov
ja
shlb
enter
mov
int
mov
xor
add
adcl
push
inc
mov
sbbl
xor
add
push
mov
orl
xor
addl
add
xorl
push
lea
push
addl
pushl
adcl
pushl
call
adcl
test
je
lea
sbbl
push
mov
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
lods
mov
jo
and
jo
rcrb
test
xchg
mov
shll
pusha
test
insl
lcall
jle
xchg
mov
fwait
sahf
data16
pop
jne
out
add
shrb
icebp
ss
sbb
jg
pop
cltd
mov
loope
xor
xchg
jae
dec
or
int
cmpsb
and
mov
in
and
cmp
adc
cmpsl
clc
ret
sbb
lahf
jl
inc
jns
sbb
cli
inc
xor
cmp
push
cmc
fsubrl
pop
adc
adc
mov
dec
filds
pop
add
xor
and
jbe
aad
test
mov
sti
lret
jns
sbb
jmp
pop
int3
ret
ret
in
sar
imull
inc
aam
mov
xlat
xchg
movsl
into
rolb
popa
add
mov
fs
enter
cmp
rcr
adc
push
sbb
enter
xor
mov
xor
shufps
das
add
xchg
sub
xchg
out
negb
xor
out
inc
inc
xor
or
ss
call
and
mov
in
pop
or
dec
sbb
jne
mov
stos
lds
fdivrl
out
mov
std
push
pop
clc
mov
jg
cmp
sbb
sbb
mov
or
push
mov
or
xchg
orb
repz
jne
shlb
packuswb
sbb
pushf
xchg
lahf
sub
pusha
lcall
cmp
and
lret
shrl
stc
inc
push
mov
adc
jle
sarb
dec
pusha
or
mov
lods
mov
inc
xchg
dec
jbe
lret
xor
mov
stos
jae
jo
jbe
lcall
outsl
outsb
movsl
mov
test
flds
cli
std
subb
mov
sbb
sub
test
cmp
cmp
shlb
jns
pop
loop
rorb
pop
sub
pop
cld
xor
mov
test
or
push
psrlw
sbb
data16
fdivs
jl
sub
insb
decb
xchg
cmp
cmpsb
or
push
je
pop
or
loop
ficoml
push
aam
popa
xchg
mov
or
fdivs
es
adc
xor
movsl
mov
fucomp
dec
mov
dec
push
scas
pop
outsl
daa
test
dec
fldl
movsb
call
stos
mov
mov
push
cmp
andl
mov
mov
mov
push
stos
add
jo
push
enter
push
test
iret
xchg
in
xor
pop
push
lock
mov
mov
push
dec
xor
shrl
or
xor
loopne
mov
push
push
nop
jmp
lods
mov
in
adc
push
fwait
sub
or
insl
cli
or
mov
movsb
lods
mov
add
push
mov
add
push
mov
mov
pushl
jmp
sahf
das
or
mov
mov
pop
mov
or
push
leave
jo
and
jo
cs
dec
nop
lret
sbb
or
mov
jo
cmp
in
fiaddl
pop
pop
ror
mov
dec
xorb
cltd
ficompl
cwtl
lret
repnz
out
sbb
pop
rorl
sahf
cmp
add
dec
out
je
repz
pop
mov
sub
sbb
and
inc
or
hlt
das
mov
mov
ficomps
leavew
push
push
push
ror
push
xor
gs
ljmp
mov
or
and
insl
rorb
out
or
rcrb
sbb
lahf
pop
mov
adc
pop
push
xor
aad
sahf
dec
or
or
cmp
inc
sbb
lret
daa
daa
imull
mov
jnp
cmpsb
cmp
popf
mov
mov
mov
stc
push
sub
and
dec
mov
mov
xlat
rol
pop
push
pop
fbld
shrl
jge
cmpsb
xchg
scas
mov
lods
pop
mov
cmpsl
push
inc
xchg
test
jno
xchg
sbb
and
lcall
push
dec
sub
insb
insb
lds
sub
pushf
sub
jae
or
add
push
rorb
push
cmp
arpl
push
ret
cmp
add
jbe
pop
sub
mov
mov
cltd
xor
push
lock
das
add
scas
mov
shll
mov
dec
les
xchg
mov
xor
dec
loopne
loop
sub
lods
pop
notl
inc
push
xor
sub
mov
pop
movsl
pop
push
push
push
jns
mov
es
push
cmp
loopne
push
jp
arpl
loopne
pop
sbb
lret
cwtl
push
ljmp
jle
mov
std
sub
xlat
push
sbb
or
push
xchg
push
jge
in
xchg
out
cs
cmp
les
push
and
pop
sub
mov
jecxz
iret
out
imul
mov
loopne
rcrl
sub
in
or
call
add
xorb
mov
faddp
mov
sbb
jae
mov
inc
into
fsubrs
or
sarb
sbb
wrmsr
enter
xchg
shll
jmp
les
xor
dec
out
scas
sbb
push
je
ja
testl
testl
xchg
jo
outsl
mov
cmp
dec
push
pushw
jl
bound
cmp
cli
outsl
sbb
les
add
pop
sarb
dec
das
imul
pop
fucomp
mov
inc
pushf
outsb
insl
movsb
data16
ret
mov
xchg
push
rorb
in
cwtl
jg
inc
xchg
and
cmp
push
repz
push
sahf
jns
fistl
aas
ss
call
mov
cmpl
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
jp
rolb
and
jo
repz
sbb
aas
adc
cmpsl
daa
push
mov
sbb
push
pop
and
mov
xor
addr16
in
mov
in
rclb
loopne
sub
jle
and
cli
dec
fisttpl
mov
arpl
sub
mov
sbb
data16
sbb
push
sbb
outsb
pop
inc
cmpsl
jno
push
into
xorl
sbb
pop
js
push
jg
pushf
mov
push
repz
xlat
pusha
cltd
adc
shll
xchg
push
mov
loope
jnp
jmp
mov
out
cmp
sbb
xchg
popf
sub
mov
stc
inc
sbb
loop
dec
stos
jnp
lods
push
push
cmpsl
mov
popf
in
outsl
jmp
xchg
sub
xor
dec
movsl
pop
and
jo
test
rcl
mov
sbb
mov
cmp
xchg
insl
pop
adc
lods
pop
js
xor
mov
push
negl
lcall
mov
in
mov
dec
lcall
inc
dec
outsb
mov
mov
or
jle
dec
xchg
xchg
pop
and
leave
fdecstp
loope
lods
xlat
inc
lret
sub
les
lcall
lret
jg
adc
sbb
sbb
stos
mov
call
clc
cwtl
int
mov
shlb
aas
out
xchg
inc
in
jbe
push
mov
fnsave
mov
xchg
dec
jecxz
and
and
movsl
cs
fmulp
lret
hlt
mov
cld
and
xchg
outsl
test
insb
sbb
iret
adc
pop
and
pop
mov
xchg
loop
mov
adc
mov
mov
enter
ss
lods
add
push
xchg
mov
lret
iret
stc
shlb
push
xchg
xor
arpl
xchg
inc
mov
adcb
mov
jecxz
mov
sbb
stc
int3
int
jb
mov
jnp
loope
icebp
notl
sub
xor
in
push
mov
inc
fldt
int
xchg
push
jne
fprem
fdivl
push
and
ja
push
mov
mov
inc
insl
lcall
push
push
mov
jge
push
cmp
adc
shlb
int
or
loop
add
in
test
xor
jb
cltd
hlt
xlat
fimull
std
arpl
add
mov
popf
jbe
jecxz
subl
adc
mov
xchg
inc
xchg
add
sub
int3
cmpsl
jb
fnsave
test
push
jl
pop
outsb
out
enter
shll
movsl
and
ds
stos
xchg
roll
shr
lods
sbb
mov
push
inc
xchg
lods
and
pop
sysret
sbb
out
xchg
sbb
mov
jae
rorl
leave
mov
push
jne
clc
cmp
movsl
into
pop
dec
push
xor
adc
inc
jecxz
out
insl
std
mov
sub
mov
xchg
shrl
sub
out
mov
orb
icebp
mov
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
jmp
ja
mov
mov
mov
shlb
and
jo
and
enter
repz
in
pop
fsts
orl
jecxz
or
inc
lds
cmc
jns
gs
xchg
std
pop
or
leave
sub
pop
fcoms
push
out
adc
cltd
arpl
jae
and
sbb
std
push
push
jmp
cltd
dec
mov
jno
push
cltd
outsb
or
jno
mov
mov
loop
daa
mov
sbbb
in
popa
mov
lea
xchg
jle
inc
jle
stos
adcb
push
inc
push
jnp
sub
repnz
mov
xchg
push
scas
mov
inc
mov
mov
adc
push
dec
rcr
fs
out
pop
xor
shr
dec
push
and
mov
imul
mov
mov
pop
push
out
jo
jecxz
sub
into
or
pushf
cmpsb
cmp
fmull
pop
int
loopne
dec
push
add
push
mov
push
pushf
ja
adc
ja
adc
lahf
pop
pop
cli
fistps
out
push
fwait
test
inc
jno
mov
add
mov
fcmovu
adc
mov
lcall
es
jge
or
xor
int
mov
clc
out
sahf
jo
repnz
dec
out
in
nop
xorl
fildll
popa
jecxz
js
xchg
jns
jnp
xchg
out
out
divl
inc
repnz
cltd
iret
sbb
cmp
jbe
xor
lea
in
addb
js
sbb
mov
test
pop
mull
push
mov
loope
cld
sub
jbe
stos
daa
add
negl
lea
mov
sbb
das
xor
cmp
adc
xchg
cmp
adc
inc
xor
mov
jg
xor
push
lcall
rcrl
fmuls
xchg
in
xor
inc
outsb
das
cs
roll
fisubrl
mov
cmp
jmp
pop
outsl
xor
add
push
jge
jge
pop
lods
pop
inc
outsb
pop
gs
add
inc
aas
sbb
fstl
in
mov
push
sarl
jne
dec
iret
inc
pop
xchg
inc
aaa
lahf
mov
cmpsl
ja
dec
dec
mov
clc
fstps
inc
jmp
push
mov
idiv
addr16
sbb
jp
mov
sbb
std
sub
inc
xchg
inc
dec
daa
xlat
adc
out
cmc
push
imulb
out
mov
pop
addr16
fmuls
mov
push
inc
shl
ljmp
jb
mov
gs
push
scas
mov
std
add
loopne
imul
cmc
inc
loopne
sub
xor
fildll
xchg
inc
out
nop
add
out
xchg
pop
jb
movsl
inc
sbb
mov
enter
out
cmp
loope
pop
xor
or
push
leave
dec
push
pop
in
ds
mov
scas
xchg
daa
in
push
sbb
xlat
lock
pop
adc
and
out
ret
push
pop
andl
mov
jmp
inc
cli
fisttpl
jp
xchg
mov
out
jo
and
jo
mov
sbb
dec
jecxz
mov
in
xchg
push
sbb
mov
xchg
jb
stc
addr16
fimuls
arpl
das
insl
mov
inc
xchg
lahf
mov
lret
mov
adc
and
cvtps2pd
push
jg
pop
or
cld
and
lret
cmpsl
inc
outsb
lahf
pop
popf
xchg
sbb
addr16
gs
mov
setp
xor
sub
paddusb
test
mov
shrb
xlat
dec
xor
clc
scas
pop
ret
test
call
outsb
push
xor
sahf
jbe
sbb
outsl
lods
leave
lret
movl
in
int
jg
movsb
ja
mov
and
loopne
jle
aad
and
xchg
addb
in
dec
xlat
xor
xor
out
stos
mov
loopne
xor
lods
sub
clc
lahf
popf
data16
xchg
nop
pop
xchg
out
push
stc
and
push
pop
pop
mov
nop
shll
cmp
inc
dec
sbbl
sbb
mov
out
pop
stos
pop
push
loopne
adc
mov
lcall
push
arpl
rol
int3
sub
idivl
xchg
dec
and
mov
push
leave
and
or
pop
jo
jmp
adc
adc
leave
test
add
adc
inc
in
pushf
outsl
lret
ss
xorb
sar
mov
pop
mov
stos
inc
outsb
xchg
cmp
push
push
add
xchg
int
lods
pop
adc
cmpsb
aam
cmp
std
jecxz
sub
dec
and
cmpsb
pop
repnz
cmp
pop
int
xchg
arpl
jp
inc
xchg
mov
inc
mov
push
add
daa
sub
aas
add
pop
or
mov
dec
ljmp
js
mov
rcr
mov
lret
or
aad
add
dec
cli
mov
pusha
pop
mov
sub
mov
jle
dec
push
dec
mov
repnz
gs
or
sub
adc
or
test
sub
xor
add
mov
pop
pusha
inc
pop
fcoms
rcll
pop
ret
pop
pop
loope
cmp
mov
inc
pop
jne
ror
sub
push
fs
or
jp
push
mov
push
inc
fdivr
inc
sbb
lahf
in
jno
daa
sbb
pop
rcl
test
dec
fwait
imul
pop
ret
lock
add
mov
arpl
push
xchg
insb
pop
pop
xlat
mov
lods
push
push
sbb
inc
lret
lods
mov
dec
cmp
jnp
mov
jno
cmp
mov
ja
loop
daa
mov
mov
inc
lcall
and
inc
and
push
mov
mov
dec
mov
cmp
inc
sub
adc
xor
es
adc
addl
rorb
jp
je
das
mov
push
add
xchg
mov
inc
fists
mov
int3
mov
mov
stos
xchg
test
inc
push
jmp
mov
fwait
xchg
fwait
jae
roll
lds
xchg
fdivl
and
jo
and
jge
jnp
xor
xchg
fxch
add
pop
pop
leave
scas
dec
inc
lret
iret
imul
xchg
xor
jg
aad
and
mov
cmp
or
cld
ljmp
mov
xchg
cmp
in
ret
mov
xor
ljmp
inc
bound
mov
cld
lahf
cmp
mov
hlt
jmp
shlb
push
xchg
pop
lret
leave
gs
cmp
push
cmp
and
adc
flds
out
sub
or
jmp
or
gs
jae
jge
push
jns
push
scas
lret
jle
pop
push
pop
pop
mov
rclb
out
dec
xchg
mov
and
sbb
cmpl
lcall
mov
hlt
or
js
sbb
loope
dec
xor
cs
push
xor
xchg
cmp
fwait
arpl
mov
fists
int3
pop
or
fiadds
test
lahf
adc
scas
mov
call
adc
pop
sbb
outsl
jbe
pop
clc
push
inc
xor
out
jp
idiv
pop
cmp
or
dec
and
add
cld
adc
pop
inc
adc
or
data16
cld
stos
and
sub
mov
xor
shl
jo
mov
cwtl
adc
xor
repz
and
sarb
mov
lods
sbb
and
jp
icebp
lods
adc
xchg
in
movsb
outsb
sbb
loope
outsl
mov
iret
pop
lds
xor
push
xor
mov
or
jecxz
js
pop
mov
push
mov
or
or
cmpsb
and
and
cmc
ss
stos
xchg
dec
mov
ret
addr16
sub
cld
dec
in
mov
orl
outsb
cmp
int3
sub
sub
cs
lret
stc
sub
lret
sbb
mov
xchg
sbb
xchg
imul
cmpl
add
fwait
pop
push
inc
xchg
mov
mov
sub
jne
jecxz
jmp
jno
xor
sub
push
imul
mov
sbb
jl
jne
fs
xlat
mov
jl
loope
iret
pop
lahf
mov
jecxz
xchg
adc
popa
leave
fcoml
les
push
jecxz
leave
mov
divl
fsubs
mov
sbb
sub
subl
push
incb
fistpll
js
push
fucomi
aas
ret
std
xor
call
jmp
stc
and
add
push
and
lea
insl
mov
fcmovb
jno
jl
xor
cs
dec
push
mov
lret
pop
testb
pop
inc
sti
adc
decb
pushl
mov
mov
pushl
lea
jmp
mov
push
mov
inc
fnstenv
and
jo
pop
mov
es
jo
cli
fdiv
push
mov
mov
popf
repnz
sar
inc
sbb
addr16
cmpsl
pop
dec
mov
fsubrl
outsl
mov
dec
mov
push
jmp
xor
test
movsl
push
je
mov
inc
lds
jmp
out
nop
clc
das
adc
mov
mov
shll
cwtl
or
jo
bound
out
or
insb
in
nop
mov
sbb
pop
sub
xor
xchg
sbb
loop
inc
cmp
cmp
mov
es
nop
cmp
sbb
sbbb
cmc
hlt
das
jge
popa
decl
mov
or
mov
leave
pop
cli
out
mov
lcall
jno
jnp
add
mul
cmp
sub
add
ret
add
jne
add
rclb
nop
inc
sbb
addl
lock
fisttpll
outsl
sbb
bound
fisttps
push
adc
dec
and
out
jmp
or
scas
dec
lea
or
cltd
cmpl
xor
in
jg
mov
push
shll
gs
int
out
mov
dec
out
mov
mov
js
outsl
adc
call
jo
test
fisubrs
add
loope
jp
aad
stos
and
mov
cmc
int
repz
cmc
adc
les
insl
sub
mov
add
adc
push
push
popa
popf
pusha
adcl
subl
ret
xchg
xchg
lea
cmp
xchg
addr16
push
sub
jp
lods
push
scas
sti
cmpsb
pop
dec
loop
inc
hlt
jg
cmp
aaa
mov
loope
add
in
das
icebp
mov
cmp
mov
push
lret
fiadds
stc
mov
mov
int
cmp
cld
push
xor
fs
xlat
fnstenv
stc
jecxz
inc
inc
xchg
scas
inc
out
je
clc
pushf
jns
mov
push
push
in
dec
and
stc
aaa
cmp
and
jne
push
leave
mov
js
in
call
add
cli
repz
lahf
jecxz
test
jecxz
jne
insl
push
ja
sbb
dec
pop
cs
bound
xor
les
jnp
add
pop
cld
iret
jbe
popf
jg
mov
jmp
in
in
xchg
leave
iret
cmp
mov
push
stos
filds
jbe
shll
jmp
and
cwtl
sbb
icebp
mov
lods
jge
imul
cld
loopne
je
jecxz
jb
lods
test
inc
loop
in
push
or
mov
call
pop
mov
mov
shr
cmp
jo
aas
scas
dec
adc
and
adc
les
inc
adc
loope
outsl
sarb
push
out
cwtl
or
adc
inc
xlat
jns
mov
mov
add
mov
mov
push
add
jmp
add
out
out
xor
call
jnp
cmp
and
jo
rorl
jne
sbb
mov
lret
loop
inc
sbb
out
das
ret
das
xor
push
xchg
mov
jp
sub
mov
pop
test
and
pop
xor
mov
imul
lahf
lock
mov
insl
stos
pushf
loopne
xorb
not
push
lea
and
pusha
imul
loope
fs
add
into
and
call
andl
lods
mov
or
movl
sbb
mov
orb
xor
test
mov
stos
hlt
push
or
das
xlat
pop
rol
push
clc
pop
and
push
sub
pop
lret
push
popf
in
mov
pop
dec
xor
int3
outsb
xchg
xchg
dec
jp
loop
cs
sbb
loop
sub
scas
lods
dec
pop
pop
ret
sub
and
jbe
ds
mov
dec
stc
or
pop
pop
scas
sub
arpl
pusha
js
pusha
je
call
jae
in
test
and
and
enter
mov
and
cld
xor
inc
push
je
roll
sti
adc
cmpsb
in
push
data16
push
mov
push
lock
and
lret
cmp
filds
ret
push
and
mov
xchg
in
adc
adc
xchg
inc
sub
xchg
pop
adc
insl
rclb
push
push
jge
pushf
and
fldenv
sub
push
xchg
sub
inc
xchg
pop
lock
mov
jge
push
adc
cmp
and
arpl
testl
cld
vpslld
pop
nop
cmp
adc
xchg
sbb
in
cmpsb
sub
aaa
notb
mov
cwtl
push
push
mov
fwait
adc
nop
ret
ss
lods
jmp
jnp
mov
and
stc
jle
push
clc
lds
rolb
ljmp
jbe
inc
and
sub
movb
xlat
add
cmp
inc
sub
mov
fucomi
xchg
adc
sti
inc
mov
aaa
pop
fs
pusha
jge
shlb
ljmp
mov
rorl
push
dec
fistl
outsb
movsl
rcr
mov
cli
loopne
cli
or
aad
push
stos
and
in
jecxz
xchg
fcmovbe
adcl
push
jmp
in
ja
insb
mov
jns
enter
lods
sub
and
in
pop
sbb
jg
imul
sbb
mov
mov
dec
sub
lcall
inc
pop
jb
or
fsubrl
in
notl
test
and
out
pop
jecxz
cmp
mov
lds
jbe
cwtl
mov
ja
sub
or
ja
in
push
cmp
or
cs
mov
cmp
sti
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
jmp
cmpsb
jnp
or
lahf
jo
rorb
jo
and
jo
mov
jno
cltd
or
dec
fadds
aad
bound
xor
sbb
push
jb
pop
mov
js
pop
rorb
cwtl
xlat
iret
lret
ret
stos
and
out
lock
popf
sub
sub
or
xor
ljmp
fmulp
push
jb
test
push
lahf
xor
in
stc
bswap
hlt
aad
in
into
xorb
jle
rclb
daa
mov
icebp
stc
add
cmp
andl
test
cli
call
and
cmpsl
dec
mov
add
jle
shlb
jg
mov
scas
xor
pop
pop
and
mov
popf
push
xchg
cmpb
xor
cmc
pop
pop
imul
push
inc
insb
adc
clc
cltd
inc
pop
ficoms
xor
dec
mov
clc
mov
lret
add
push
scas
lahf
test
leave
test
cmp
mov
ljmp
xchg
cmpsb
cmpsl
sti
xchg
cmp
lods
into
lods
aam
cmp
mov
enter
pop
fimull
out
subl
sbb
xchg
popf
add
and
fcomps
jns
fcoms
mov
in
cli
dec
in
and
mov
push
xchg
nop
sub
cli
sub
jb
lds
mov
fwait
call
rcr
cmp
adc
sub
dec
sbb
out
popf
scas
push
out
shlb
mov
int
dec
mov
iret
pusha
mov
jle
xchg
pop
cmp
pop
adc
pop
mov
ljmp
xchg
lock
mov
cmp
pop
dec
les
jg
sbb
sahf
fdivrs
mov
push
jge
mov
pop
mov
adc
cld
pop
mov
add
stos
adc
mov
cmpsl
lods
ficompl
mov
insl
mov
mov
push
popl
sbb
call
shlb
mov
std
adc
adc
add
mov
mov
test
lods
scas
or
pushf
xchg
push
jae
enter
pushf
nop
sbb
fnsave
mov
cli
stc
loopne
test
xchg
sti
insb
adc
icebp
xorl
push
jl
inc
hlt
xor
mov
inc
inc
in
add
fnsave
push
add
popf
data16
lods
data16
fcmovne
jnp
mov
xchg
jae
loop
dec
jecxz
jne
ficoml
dec
ljmp
jnp
sbb
and
jl
scas
sbb
popf
adc
ficoml
push
and
or
movsl
fs
pusha
ja
imul
push
aas
push
inc
enter
mov
lock
lock
mov
shll
sub
xor
fwait
inc
test
mov
inc
jle
sub
xchg
jo
pop
dec
add
idiv
push
add
and
inc
add
dec
add
add
mov
ja
add
xchg
ss
sub
out
jo
and
jo
push
inc
leave
icebp
jp
mov
inc
lahf
ja
push
mov
mov
xchg
clc
ret
sub
xchg
jmp
lcall
cwtl
mov
fistl
lret
pushf
ss
cmp
and
adc
sbb
and
or
fldenv
nop
test
pusha
xor
pusha
loopne
pop
inc
ret
pop
pop
adc
cmc
jg
push
or
push
andl
sbb
fstpt
inc
mov
cmpsb
xchg
pop
fistpl
fsubl
fdivp
imull
pushf
add
ficompl
enter
cltd
je
cmp
shlb
push
inc
xchg
and
adc
fistps
inc
mov
mov
lcall
aas
pusha
add
nop
movsb
sub
stc
insb
jp
fld
pop
mov
or
mov
test
jnp
fisubs
dec
dec
imull
mov
push
fwait
push
mov
mov
push
push
mov
cmpsl
addr16
ljmp
xchg
lret
jns
cwtl
sahf
push
daa
arpl
xorb
mov
rclb
inc
push
mov
leave
insb
cs
popa
mov
mov
cmpsl
int
cltd
mov
and
lcall
inc
sub
fcoms
push
pusha
enter
sbb
cmp
pop
or
cli
cmp
adc
inc
aad
aad
dec
push
jae
and
jecxz
pop
mov
fistl
pop
jecxz
dec
repz
insl
mov
jl
movsb
andb
popa
inc
pop
jnp
cs
mov
in
mov
cld
pushl
push
mov
adc
ret
or
and
call
xlat
jecxz
push
jne
sbb
rolb
and
cs
mov
jmp
mov
mov
mov
add
mov
pop
push
aaa
in
push
cmpsb
pop
ret
adc
dec
fdivr
sahf
push
aas
arpl
mov
dec
aaa
les
fcoml
fdivr
das
addr16
popa
sbb
movsl
out
sbb
lret
sti
int
rcr
outsl
xchg
mov
loope
push
push
push
push
xchg
lea
rorl
add
gs
sub
jo
lds
orb
lds
jnp
and
mov
outsl
sub
in
cs
shrb
popa
or
movsl
aam
add
inc
bound
decl
stos
sub
cmp
out
inc
cmpsb
idiv
jb
sar
cmp
jg
pushf
xchg
xchg
mov
lea
les
lea
insl
int3
leave
repnz
xchg
xchg
das
loop
pop
add
sarb
test
mov
imul
xlat
jb
cli
push
mov
mov
lcall
iret
aas
sub
jp
adc
jp
subb
cmpsb
nop
mov
push
in
xchg
scas
push
movsl
dec
gs
pop
lcall
arpl
mov
lret
ja
sbbb
mov
rcl
add
pop
pop
pop
leave
ret
push
mov
sub
push
subl
mov
sbb
mov
mov
mov
sub
imul
mov
movl
neg
movl
mov
mov
or
mov
add
mov
adcl
mov
xor
xor
mov
sbb
mov
jmp
arpl
cmc
xchg
cmc
arpl
pop
das
testl
jo
lahf
jge
jo
push
and
sbb
mov
jb
addl
sbb
mov
xor
in
push
inc
pushl
add
cld
mov
jb
outsl
aas
or
dec
add
ja
xchg
xor
push
lods
loope
imul
movsl
ljmp
outsb
jns
jecxz
scas
lcall
outsl
adcb
das
mov
popa
xchg
add
cmp
stc
add
cmc
pop
inc
mov
inc
je
je
fs
xor
cli
lret
dec
pop
mov
push
out
fmuls
cmp
cmpsb
shlb
insb
pop
add
adc
xchg
pusha
cld
shlb
negb
dec
xchg
in
cmp
dec
sub
test
mov
jmp
sbb
imul
test
repnz
mov
pop
mov
shrb
orb
in
add
jae
or
xchg
pop
icebp
fcmovnu
push
xchg
mov
fldenv
adc
js
xor
sub
dec
add
dec
pop
cmc
das
lds
out
fisttpll
loope
dec
jno
adc
out
fidivl
jmp
mov
sub
xor
sub
push
jbe
mov
xor
je
cmpsl
mov
outsl
or
fsubs
repz
jp
cmpsb
std
jle
mov
mov
pushf
mov
xor
repz
outsl
sbb
ljmp
test
push
xchg
sbbb
mov
jo
movsl
dec
out
pop
nop
xchg
push
rcrl
push
xor
in
inc
inc
dec
lods
stc
lods
movzbl
inc
add
adc
add
xchg
adc
adc
inc
fsts
aaa
aad
push
cmp
stos
adc
sub
out
mov
mov
mov
xor
push
adc
push
adc
adc
mov
push
fimuls
out
jae
loopne,pt
lds
daa
fxtract
inc
les
dec
ss
mov
sahf
dec
xor
jmp
leave
loop
cmp
pusha
sub
mov
push
inc
or
cmc
pop
jne
push
adc
imul
xor
aaa
adc
outsb
xchg
mov
or
out
mov
cmpsl
sub
loop
cltd
into
ds
ss
bswap
lahf
xor
stc
adc
xchg
xlat
inc
in
out
cmp
fs
shlb
sti
cltd
adc
jle,pt
popf
dec
cmp
mov
or
in
test
adcl
sbb
mov
xor
or
mov
xchg
icebp
enter
xchg
jmp
mov
sub
jp
adc
shrb
sti
call
cmp
lret
lock
add
fmul
pop
mov
dec
in
fwait
aaa
mov
imul
xor
pushf
mov
sarb
cmp
pop
std
mov
push
push
push
mov
xlat
movsb
clc
xorl
repnz
leave
cmp
das
xchg
fxtract
insb
xorb
sti
imul
dec
dec
jnp
mov
push
mov
mov
cmp
mov
dec
mov
pop
lds
sbb
ss
jnp
sbb
adc
cmc
mov
and
out
in
fcoms
shlb
add
xor
mov
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
adcl
jmp
xlat
mov
mull
mov
push
call
jo
popa
sub
mov
mov
jb
xchg
dec
stos
imul
fs
pop
in
xchg
std
xor
dec
repnz
out
inc
out
dec
test
ret
cmp
orb
aas
scas
je
dec
inc
or
inc
rcrb
fstpt
mov
jno
sbb
mov
add
sub
mov
push
imul
jae
mov
xchg
xlat
lods
adc
mov
or
sbb
hlt
or
mov
int3
xchg
xor
sbb
jae
and
out
sub
daa
rorl
inc
pop
fs
aad
adc
mov
xchg
ret
loop
cltd
daa
test
lret
push
inc
insl
iret
push
fsubrl
fs
mov
stc
sbb
mov
jp
push
xor
negl
test
mov
xlat
aaa
push
dec
pop
lret
jge
or
pop
pop
xlat
iret
imul
push
cli
scas
negb
lret
push
jno
dec
mov
cmc
inc
flds
ds
adc
mov
sub
cwtl
cmpsl
lock
push
xor
inc
xchg
dec
xlat
and
movsl
cmpsl
dec
mov
popf
mov
xor
cmpsb
sub
push
fistpll
mov
xor
in
jae
push
ret
xchg
hlt
jp
pusha
outsb
call
mov
movsl
cmpsb
cmp
gs
insl
rolb
xchg
xchg
mov
pushf
decl
aas
sub
ficomps
inc
iret
sarb
adc
cld
push
xchg
jb
mov
inc
hlt
jge
sbbb
push
xchg
pushf
cmp
add
movb
cmpsl
imul
jbe
mov
out
pop
mov
fwait
jno
xchg
xchg
xor
jb
adc
scas
inc
lea
das
test
push
pop
pop
add
cmc
xor
dec
scas
add
enter
lock
test
dec
cli
mov
fdivrs
mov
xlat
dec
out
mov
push
jns
in
out
add
testb
sub
cmp
shll
lods
or
int3
pop
loope
lock
sub
addb
dec
cmpsb
test
int3
xchg
and
sub
jp
sub
push
mov
add
lods
pusha
add
fwait
je
es
ja
mov
or
ror
xlat
push
adc
inc
sub
sbb
outsb
xchg
jle
jl
push
out
xor
or
arpl
es
in
sub
xchg
jl
sbb
pop
xor
mov
mov
stc
mov
shrl
mov
pop
movsb
mov
insb
stos
pop
dec
jmp
in
das
dec
xchg
xchg
cmovp
inc
cwtl
pop
cmc
out
cwtl
fstpt
cmpsb
in
aam
push
idiv
or
dec
lods
mov
popf
mov
jo
std
sbb
dec
xchg
mov
xchg
mov
mov
imul
xor
pop
sbbl
jno
mov
adc
dec
mov
mov
push
jl
ret
mov
and
pop
sub
outsl
lock
jns
mov
xchg
mov
je
addb
subb
push
insl
aam
bound
das
xor
push
xlat
stc
imul
movl
movl
adc
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
add
movl
andl
jmp
into
iret
cmpsb
cmp
sbb
mov
adc
jo
jge
jo
pop
addb
push
jae
lods
sbb
cmp
and
inc
add
mov
popf
cmpsb
lcall
push
mov
xchg
nop
cmc
lds
bound
lret
sbb
adc
xor
shll
sub
pop
popf
sbb
mov
fwait
ret
test
adcl
lock
rolb
mov
ja
nop
repnz
bound
pop
shl
cld
lahf
mov
xchg
paddw
pop
mov
cmc
bound
mov
mov
xchg
xchg
out
test
cmp
int
inc
mov
push
pop
push
bnd
mov
subl
add
jns
imul
adc
and
cmpsl
and
jecxz
movsb
mov
fnstsw
push
lret
cmp
lods
or
sbbl
pop
sbb
mov
mov
mov
js
mov
div
xor
mov
xchg
sbb
push
fistpl
dec
in
je
jg
mov
and
xor
jle
sub
sarl
mov
je
dec
add
pop
sub
cmp
nop
or
or
lds
jae
and
int3
pop
sbb
push
push
xor
jns
sub
cmpsl
push
stos
mov
dec
xor
mov
int3
mov
or
jns
mov
push
sahf
mov
cs
xor
xchg
inc
insl
pusha
mov
fcmovu
fdivrp
inc
lods
xor
mov
or
sub
test
and
test
xor
push
push
fdivrl
mov
mov
adc
cmpsb
sahf
push
clc
out
bound
or
sbb
add
fnstcw
faddl
mov
leave
push
or
lds
dec
pop
adc
mov
mov
cmp
push
mov
dec
xchg
rcll
push
les
jnp
cmp
and
in
cmp
jp
adc
xchg
or
jmp
sbb
pushl
fdivrl
inc
aas
cld
sbb
push
outsb
in
lds
fcom
adc
add
shlb
int
adc
cmp
inc
loope
fnstsw
push
xor
sub
xor
jne
test
ret
lock
mov
jle
add
and
sub
cmpb
push
adcb
cmp
fstpt
stc
jns
hlt
les
mov
mov
hlt
rorl
repnz
popl
dec
lock
push
mov
jp
mov
and
int
cld
xlat
jno
outsl
mov
hlt
jo
jl
xor
pop
leave
pushf
pop
fsub
int
or
mov
notb
or
or
cmc
imul
imul
mov
mov
jns
cli
xor
test
popa
or
mov
cmp
mov
ja
push
call
push
mov
ror
addr16
orb
cwtl
or
fadds
ljmp
xchg
mov
xor
or
and
pop
xchg
fwait
loope
dec
in
push
xchg
std
sbb
mov
dec
push
adc
stc
or
lock
ret
ss
push
lret
rcl
mov
jb
int
mov
inc
int3
cmp
pushf
clc
movl
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
movl
adc
mov
xor
sub
mov
add
movl
cmp
movl
je
movl
push
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
sub
mov
add
mov
jmp
addr16
xchg
jno
ja
dec
in
std
xchg
fnstsw
in
jo
lahf
jge
jo
push
pop
loop
dec
cmpsb
mov
repz
jp
imul
int3
and
mov
std
mov
lock
jno
lea
ja
mov
aas
jno
dec
adc
popa
jnp
push
cmp
fs
sti
and
shrb
aad
lcall
cld
sub
addb
addb
clc
fcmove
pop
cmp
sbb
jmp
mov
mov
cmp
and
push
ret
xor
dec
in
subl
cmp
mov
mov
inc
sbb
movsl
repnz
pop
dec
mov
pop
aam
or
pop
pop
ja
push
lods
pop
ss
mov
push
dec
pop
dec
neg
add
scas
sbb
cmp
push
movsb
add
sti
loope
movsb
push
and
add
mov
jno
mov
inc
divl
pop
enter
fstpt
pop
dec
lcall
in
cmc
push
mov
bound
cld
pop
adc
lock
sbb
xor
in
sbb
inc
out
shl
and
mov
mov
jmp
inc
les
mov
sub
mov
cwtl
scas
adcl
test
scas
or
das
ja
int3
push
sbb
jmp
aas
fwait
imul
jg
cli
stos
jne
adc
push
addr16
xchg
mov
cmpsb
xchg
or
jecxz
bswap
outsl
idivb
hlt
xor
fwait
sahf
cmc
js
adc
push
and
mov
xchg
mov
pushf
push
cltd
lahf
jp
ret
fwait
xor
aaa
mov
xlat
pop
push
popa
dec
sub
addb
cltd
repnz
mov
adc
xchg
push
ja
call
loop
cmp
movsb
outsl
xchg
dec
jp
mov
lds
pop
lret
adc
das
add
jl
add
inc
in
push
call
pop
cld
shlb
fildll
cmp
ljmp
jmp
mov
lret
jo
sub
mov
xchg
cmpsb
bound
dec
sbb
push
daa
faddl
adc
dec
pop
pop
aam
sarl
pusha
cmp
inc
mov
xchg
cmp
lahf
add
imul
ss
sub
fs
out
nop
es
iret
movsl
je
add
mov
stc
pop
cmc
mov
mov
add
std
loop
and
fiadds
mov
ret
ss
les
popf
dec
movsb
jmp
mov
mov
lcall
pop
fdivrp
test
fidivs
and
in
mov
ds
lret
fstpl
lds
adc
out
call
jge
cwtl
test
shr
sbbl
or
xchg
iret
push
pop
pushf
cmp
mov
xor
inc
cld
inc
scas
fidivrl
and
out
sub
icebp
push
xchg
test
add
pop
xor
inc
in
inc
loopne
subl
mov
out
cli
pop
mov
test
lods
lods
dec
add
jae
ret
cwtl
xchg
mov
adc
push
sbb
inc
mov
xchg
mov
xor
lret
mov
sarl
outsb
inc
adc
adc
pop
xchg
out
in
testb
mov
rolb
add
out
add
rol
add
fwait
sbb
add
cli
movl
jb
mov
sbb
mov
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
add
sbb
add
imul
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
xor
mov
mov
jae
jg
ja
sub
xchg
add
jo
lahf
jge
jo
pop
fiaddl
adc
fwait
pop
pop
imul
lods
pop
sub
mov
sarl
lock
insl
loop
ds
pop
fcmovnb
addr16
ret
daa
das
xchg
adc
outsb
push
jmp
cmp
sub
jns
addr16
cmp
push
jae
ljmp
dec
and
icebp
xchg
aas
aad
sbb
js
add
mov
dec
or
cmpl
push
enter
add
sbb
out
je
test
add
fs
jge
gs
fwait
adc
je
and
mov
in
jbe
mov
mov
int
pop
xor
sbb
add
fimuls
or
repz
pusha
fldl
pop
lcall
fmulp
dec
filds
xor
xor
adc
fldt
imul
in
rclb
outsb
add
cs
test
icebp
adc
fwait
mov
cmp
jle
and
ret
push
xchg
int
sahf
sbb
sbb
adc
clc
aad
mov
in
rorb
mov
mov
cmp
mov
inc
ss
arpl
xchg
jno
adc
inc
shrb
xchg
mov
fistpll
jb
sbb
imul
insl
mov
add
ds
and
mov
dec
xchg
mov
pop
cmp
xchg
sbb
xor
cmp
fnstenv
repnz
inc
add
adc
lret
lock
repnz
mov
push
add
dec
lods
xor
les
mov
addr16
cmp
aas
pop
mov
cltd
jo
xor
push
lcall
mov
loop
mov
ret
xchg
or
jns
jo
in
add
lods
scas
das
ja
jb
push
dec
clc
and
lds
ret
pop
in
sbb
sub
ljmp
pop
sub
mov
or
jne
xor
lcall
ficoms
fimull
xchg
add
cmpsl
fxch
mov
lds
mov
xorb
call
and
loope
stos
sbb
adc
xchg
jmp
mov
scas
xchg
inc
lahf
push
fbstp
fimull
sbb
in
into
outsl
js
cs
test
push
aam
shrl
aas
mov
ss
sbb
xchg
push
pop
jnp
insl
loopne
or
mov
xchg
lcall
shlb
mov
xchg
ja
add
mulb
xchg
mov
dec
sahf
adcb
shrb
cmpsb
repnz
xchg
and
xor
mov
nop
dec
sbbl
jge
loopne
mov
stc
pop
idiv
outsl
in
nop
and
ret
sbb
xor
push
adc
pop
cmp
dec
sbb
cltd
jbe
mov
jno
cmp
jb
roll
lahf
mov
inc
pop
stc
popa
fs
lods
lods
daa
mov
cld
je
or
cli
and
test
incl
cmp
jne
mov
inc
inc
stos
shlb
pushf
sbb
lods
push
pop
bound
mov
les
out
add
jmp
shlb
sub
lret
or
fwait
ret
jo
lahf
jge
jo
cld
aaa
jae
cwtl
pop
add
sbb
inc
addr16
adc
lcall
in
adc
xchg
aas
xor
or
pop
sbb
test
pop
mov
xor
jl
mov
loopne
cmp
push
pushf
xchg
data16
push
inc
lret
or
push
inc
push
aaa
test
pop
inc
les
hlt
and
cli
mov
inc
sbb
stos
or
pop
jnp
add
cmp
ja
and
repnz
sub
fadds
mov
iret
gs
jecxz
idiv
or
xor
jae
xor
pop
subb
repnz
inc
push
mov
xor
int
pushf
fisubrs
mov
sub
xchg
mov
fs
std
jo
inc
daa
adc
fnstcw
mov
cmp
or
sarl
sbb
xchg
and
jns
scas
aaa
sbb
leave
imul
or
and
mov
xchg
mov
pushf
int3
stos
cld
cmpsb
daa
cli
push
jp
sbb
movsb
xor
pop
insl
xchg
and
mov
test
lds
xorb
mov
in
dec
mov
or
jmp
jp
jecxz
mov
push
ret
cli
arpl
and
testl
or
mov
sbbb
push
es
ss
scas
stos
cmp
jne
lcall
adc
ds
add
pop
iret
jns
mov
dec
mov
aad
imul
push
pusha
call
xchg
or
jge
cmp
fs
test
in
loopne
sarl
add
fisttpl
and
icebp
xchg
push
xchg
push
outsb
mov
xchg
lahf
xor
and
int3
in
pop
mov
xchg
fcoml
sub
xchg
push
mov
sar
mov
xchg
pop
lcall
iret
xor
mov
sti
daa
pop
xchg
dec
mov
adc
sahf
xchg
repnz
sub
xor
cmp
xchg
cmpsb
std
sbb
xlat
and
scas
lcall
xchg
cmpsl
fcompl
out
leave
lcall
das
aaa
add
mov
mov
cmp
rolb
orb
or
jae
inc
aad
lods
scas
mov
loopne
int
jl
mov
frstor
lea
cli
jle
push
xlat
out
aas
push
cld
cmp
fcoms
push
dec
add
data16
cmp
xchg
mov
aas
sbb
sahf
fwait
iret
mov
adc
mov
vpsubusw
out
and
jb
in
nop
outsl
pusha
or
push
or
dec
adc
xor
and
sbb
pop
repnz
shrl
int3
jp
outsb
mov
dec
sbb
and
fsubl
mov
jecxz
out
xchg
clc
leave
xchg
das
mov
xchg
jb
incb
mov
cmp
into
dec
add
out
mov
push
adc
mov
negb
xchg
or
xchg
je
cmpsl
out
add
lcall
aaa
out
or
xchg
mov
sub
jo
mov
mov
mov
push
mov
jecxz
pop
mov
adc
lcall
iret
jle
movsb
lcall
addr16
add
cmp
jge
mov
sub
cmp
ja
mov
jmp
mov
jmp
cmp
mov
loope
loop
pop
cmp
pop
jge
xchg
lahf
jge
jo
gs
sbb
inc
xor
test
cltd
push
sahf
ja
and
mov
imul
lods
pop
repz
dec
mov
cmp
dec
sub
jo
das
out
leave
mov
xchg
mov
and
sub
sbb
cmp
xchg
push
inc
add
inc
fsubl
roll
xchg
mov
push
test
add
fsubr
loop
push
and
lret
dec
push
push
movsl
mov
inc
into
imul
iret
xor
fdivr
jmp
test
in
shll
pusha
inc
mov
dec
aad
movsl
or
mov
mov
mov
shlb
dec
inc
rcrb
movsb
xchg
dec
nop
mov
add
jmp
jle
test
sub
push
in
pusha
cmp
stos
ret
sbbb
lock
lea
and
and
loop
rcrl
pusha
lret
add
orb
out
lea
jnp
adc
jnp
cmpb
and
adc
imul
fidivs
jno
push
dec
or
arpl
das
mov
jg
mov
jb
lret
sub
lcall
out
leave
jle
fldl
and
aad
jns
in
or
lahf
jle
sub
jecxz
inc
jae
rorl
mov
xor
or
inc
dec
dec
xor
loopne
hlt
or
idivl
icebp
jb
lods
repnz
mov
out
cmp
mov
mov
sbb
mov
loopne
stos
iret
test
outsl
adc
in
call
sub
data16
push
loope
jecxz
ret
cmp
jae
dec
mov
sub
std
ret
mov
mov
int3
das
hlt
cmp
adc
int
dec
sbbb
push
dec
push
out
push
jno
dec
sub
push
push
and
dec
mov
and
sub
aam
cmpsl
xchg
test
add
hlt
fnstcw
push
pop
push
jbe
out
inc
mov
xchg
ret
test
pop
and
sub
lcall
out
push
and
pop
in
xchg
or
xlat
int
pop
adc
popa
unpckhps
jl
scas
add
in
fnsave
lock
scas
inc
and
imul
inc
out
or
sbb
ret
jmp
sti
clc
sbbl
cmpsb
movsb
ja
dec
flds
bnd
push
lds
xor
mov
addr16
dec
in
jb
sbb
mov
addb
adc
add
cmpsl
jmp
orl
out
aam
add
sub
sbb
pop
icebp
pcmpeqb
push
jno
dec
ret
lret
jle
push
jge
cmpsl
push
inc
dec
pop
aaa
out
mov
stc
jg
idivb
roll
inc
mov
add
in
frstor
imul
daa
jmp
adc
xchg
push
inc
call
jecxz
imul
jmp
xor
xlat
push
mov
das
aaa
je
sbb
mov
cld
ficompl
rolb
sbb
ret
data16
push
lcall
lret
cltd
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
xchg
fcomi
push
jb
mov
shlb
inc
mov
jo
lahf
jge
jo
mov
pop
mov
mov
movsb
ret
pop
pop
mov
jp
call
dec
aas
or
fdivr
ds
shrl
pop
fidivl
push
hlt
arpl
add
jae
jnp
xor
cli
adc
bound
lahf
aaa
xchg
mov
sub
and
repz
xchg
push
xchg
dec
clc
lods
jo
mov
push
ret
je
adc
pop
test
pop
popf
xchg
xchg
repz
cmp
scas
mov
lock
xchg
popa
out
dec
push
repz
loop
push
fidivl
je
jb
popa
dec
xor
lret
mov
lret
test
push
adcb
jae
addr16
or
cmp
mov
push
nop
jno
jb
incb
stos
dec
adc
cmp
testl
jae
add
lret
sbb
or
push
test
cmp
sbb
xorb
adc
test
add
inc
mov
push
push
cmpsl
inc
ficompl
mov
cmpsl
das
ret
cmp
sub
add
or
add
xor
add
add
xchg
sbbb
imul
inc
push
loop
xchg
cmp
mov
jg
or
adc
mov
dec
pop
jbe
sbb
stos
push
mov
inc
shlb
xor
push
out
xchg
wbinvd
int
popf
sbbl
dec
scas
test
aaa
inc
push
rclb
mov
jmp
jo
mov
push
adc
adc
test
cmpsl
xor
push
cmp
add
imul
sub
out
mov
std
cmp
lea
mov
popa
jns
sbb
jb
fdivrs
xchg
add
mov
fdivrs
lock
pop
repnz
pusha
dec
or
int3
add
sbb
or
xor
inc
cltd
subl
mov
hlt
inc
xor
cmpsl
insl
sarb
or
push
mov
push
adc
shr
pop
aas
jmp
push
add
loopne
jge
mov
cwtl
push
scas
nop
or
push
cmpsl
xchg
in
loope
loope
and
sub
dec
aaa
sub
push
pop
push
add
mov
shll
lahf
out
mov
mov
rcl
in
lock
mov
addb
dec
negb
bound
jnp
jle
add
into
mov
push
fisubrs
and
cld
popf
icebp
jge
add
inc
rcl
shlb
icebp
sub
movsb
lock
lret
jns
mov
cmp
and
pop
daa
aas
push
stos
push
jge
add
mov
bound
jg
sub
cmp
lret
and
jb
cmc
fs
xchg
pusha
mov
lahf
les
jmp
jb
push
loope
cmp
jg
loopne
lods
adc
jnp
cld
cmp
dec
sub
dec
pop
aam
insl
into
mov
dec
lret
movsb
stos
cld
sbb
jmp
mov
and
pushf
dec
mov
inc
adc
je
stos
dec
jae
xlat
mulb
sub
movsl
jp
iret
or
out
mov
stc
cmp
mov
push
mov
shll
daa
inc
leave
push
xorb
lahf
nop
aam
xchg
enter
loopne
pop
sbb
lcall
icebp
loop
sub
mov
mov
pop
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
xchg
dec
inc
inc
inc
push
xchg
dec
fdivs
adc
and
jo
lahf
jge
jo
pop
cli
cmpsl
mov
pop
mov
andl
popf
divl
nop
repz
xchg
and
and
mov
sub
mov
push
mov
or
roll
jle
rclb
dec
sub
lods
xlat
test
dec
sbb
mov
test
pop
mov
cmp
aam
data16
cld
inc
sbb
es
fbld
leave
lret
and
bnd
jns
inc
push
mov
cmp
aas
mov
add
mov
lret
adc
jmp
lods
fisubl
cmp
push
pop
mov
jo
test
xchg
xlat
or
cld
fs
adc
inc
into
andb
jae
das
or
and
cld
dec
fistps
jo
cmp
arpl
flds
fs
mov
mov
mov
sbb
and
cli
xor
jbe
fs
add
das
fcmovne
jmp
xchg
inc
xchg
pop
jae
mov
lock
or
xchg
loope
daa
inc
or
data16
stos
insb
or
cmp
or
outsl
fstpl
ljmp
out
data16
sbb
push
into
adc
ss
sbb
in
mov
dec
xchg
iret
adc
mov
movsl
fcmovbe
scas
fmull
subl
cmpsb
xlat
cmp
test
sub
inc
inc
xor
cmpsl
pop
sar
adcb
push
popa
mov
mov
pushf
inc
push
ds
rol
jl
sub
ret
push
xchg
pushl
jl
jae
push
into
repz
setg
sbb
pusha
mov
mov
bound
cmp
loope
add
movsl
push
popa
pop
inc
cld
mov
mov
dec
jmp
jno
inc
xor
add
scas
sbb
dec
push
push
mov
push
data16
push
jo
cli
and
fdiv
scas
mov
roll
cmpsb
orb
test
push
fidivrl
xor
and
sti
call
adc
adc
push
call
je
push
call
sbb
ret
pushf
stos
fs
push
out
sbb
rolb
fmull
or
dec
cs
xlat
mov
fidivs
lock
mov
pop
mov
bound
mov
cltd
lds
mov
shll
mov
dec
xor
push
mov
out
or
cmp
pop
mov
scas
inc
jns
inc
dec
fbstp
jmp
xchg
xor
jmp
xchg
pop
rcll
inc
xchg
mov
adc
inc
stos
cmp
stos
rcll
scas
pushf
mov
and
inc
nop
mov
pop
loope
fsubrl
pop
aam
cmpsb
and
adc
mov
loop
cmp
add
mov
sub
aam
or
jne
xchg
mov
sbb
aaa
int
add
fistpll
and
push
fldl
jae
je
cmp
loopne
iret
cmp
adc
ja
or
dec
fwait
jns
jg
test
cmpsl
adc
std
scas
sub
push
shlb
ret
and
iret
mov
lret
ds
push
outsb
aad
mov
jge
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
lcall
out
mov
and
mov
lahf
jge
jo
inc
pop
mov
push
xor
mov
shll
nop
push
sbb
cmp
movb
adc
rclb
dec
push
hlt
jbe
fisubs
push
sahf
lret
out
jmp
xchg
je
pop
ljmp
xchg
xchg
cwtl
xchg
mov
cmp
jl
sub
adc
lcall
jp
adc
in
and
stos
mov
push
movsb
cmp
shll
outsl
or
xor
outsb
sbb
adc
in
shrl
sahf
jle
pop
adc
std
arpl
xchg
xor
cmp
push
adc
push
imul
rcll
dec
and
cmp
lret
xchg
shl
adc
dec
out
addb
fcmovne
out
mov
jl
push
ds
add
jmp
mov
rcll
mov
sarb
xor
and
push
adc
icebp
loopne
lahf
daa
dec
shll
cmp
psadbw
in
adc
adc
pop
scas
subl
leave
stc
pop
jno
inc
int3
stc
leave
sub
sbb
xchg
lock
xchg
lcall
fidivl
sub
gs
enter
xchg
mov
das
mov
xchg
iret
imul
ret
dec
dec
cmp
je
in
insl
mov
cmp
dec
and
mov
sub
push
test
push
pop
mov
push
pusha
sti
dec
aad
fs
icebp
push
mov
cmp
sbb
add
pop
xchg
jne
push
fcoms
pusha
adc
bound
outsl
sarb
ljmp
ret
fcompl
mov
mov
dec
mov
rorl
push
shll
jmpw
and
adc
or
fiaddl
rcrl
ret
xchg
add
les
xor
jecxz
pop
ficoml
lods
mov
iret
jmp
cli
in
roll
dec
outsl
test
scas
jecxz
leave
push
fildl
mov
jle
or
daa
cwtl
mov
clc
cwtl
rcrb
in
inc
js
mov
xchg
pushf
loop
enter
pushf
les
mov
clc
dec
dec
jp
or
lahf
cwtl
xor
movsb
loopne
cmp
ja
outsb
inc
and
ja
bswap
lds
dec
popf
insb
das
add
cltd
pop
int
shl
and
pop
out
xor
mov
and
fidivs
insl
add
addl
pushf
sbb
cmp
mov
add
cltd
loopne
in
cmp
cmp
cli
mov
mov
xchg
repnz
ret
sbb
mov
xchg
dec
sbb
testb
clc
add
push
inc
je
pusha
push
in
sub
arpl
ret
or
popa
fimull
dec
mov
in
push
or
cmpsl
or
mov
adc
or
mov
into
arpl
sbb
push
inc
push
cmpsb
mov
frstor
mov
sti
sbb
add
ljmp
lds
jmp
xchg
or
and
pop
lahf
add
cmp
lods
cld
pop
imul
shr
scas
out
jle
cmc
mov
sbb
call
scas
out
mov
pop
xor
add
dec
push
sbb
sbb
xchg
out
mov
ret
int
cmp
ljmp
jge
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xchg
dec
push
adc
push
xchg
dec
lock
pop
dec
shlb
dec
mov
lahf
jge
jo
mov
sub
cmpsl
lret
popf
sahf
inc
shl
cmp
stos
out
or
inc
leave
aas
inc
jmp
pop
sub
xchg
scas
loopne
clc
lods
icebp
xchg
in
pop
ljmp
dec
out
pop
daa
cmp
jns
fcmovu
mov
adc
data16
lcall
xor
sub
fisttpl
cmpsb
int
ret
dec
inc
add
testb
xchg
std
pushf
jbe
xchg
inc
inc
xchg
cwtl
iret
rclb
pop
lret
push
lcall
sub
dec
xchg
sar
jno
aad
stos
imul
cmp
adc
mov
jno
jbe
inc
scas
push
nop
add
sub
pop
sbbb
sub
shl
jle
shrl
cmpsb
or
nop
dec
push
mov
adc
ret
call
push
mov
inc
leave
into
adc
fsubrl
mov
data16
cmp
test
movsl
js
cld
and
and
mov
adcb
rcrl
mov
pop
insb
xor
mov
ss
hlt
cmp
daa
mov
enter
stos
jl
and
in
filds
pop
inc
rcr
cwtl
fistpl
das
js
jl
lds
je
fldenv
jb
xlat
inc
test
mov
adc
xchg
mov
cmp
repz
aaa
jge
dec
out
shrl
out
adc
dec
dec
lods
xchg
xchg
mov
cmc
icebp
pop
mov
xchg
sbb
and
xchg
enter
xor
mov
push
sub
cmp
je
out
popf
mov
and
mov
pushf
mov
adc
outsl
ss
dec
cmpsb
inc
mov
ss
hlt
and
ja
add
scas
mov
add
call
pop
push
dec
or
roll
ss
or
jl
fiadds
or
xchg
jecxz
jge
out
shr
push
and
xchg
jnp
stos
cmp
outsl
push
sub
jno
add
sbbl
dec
outsb
mov
aam
ret
fidivrl
call
js
xor
fwait
adc
push
mov
or
push
mov
addr16
jle
jl
mov
cmp
or
out
push
pop
sbb
incb
xor
shll
iret
or
jge
xchg
test
imul
cs
and
rdtsc
push
repz
ss
insb
push
mov
jae
xchg
adc
xor
movsb
loopne
pop
mov
push
ret
loopne
popf
pusha
jns
lcall
lods
cld
sbb
dec
add
mov
xor
jp
xchg
insl
outsb
cmp
lcall
ret
push
lods
mov
sub
adcl
lcall
pushf
scas
data16
add
add
mov
mov
and
insb
and
xlat
lret
push
shll
sub
xor
mov
cmp
lea
stos
fwait
add
push
pop
mov
xchg
out
push
loope
in
lock
cltd
rcll
xchg
push
add
imul
daa
mov
xchg
xor
stc
mov
xchg
jl
jno
and
test
cld
repz
out
cmp
sbb
daa
shlb
xchg
add
mov
sarb
push
and
or
mov
xor
add
mov
mov
mov
mov
xor
jmp
sbb
pop
pop
pop
pop
sbb
adc
icebp
fsub
cmp
xchg
jo
lahf
jge
jo
gs
cltd
xchg
mov
jno
pop
jecxz
fcoml
or
clc
jne
adc
cli
lods
cmc
fisttpl
push
orl
cmp
lods
addr16
jb
and
fs
and
shlb
sbb
inc
js
sbb
and
std
lret
and
loope
push
pop
hlt
mov
xlat
lcall
pop
mov
cmp
push
shll
ds
cmc
sbb
push
dec
jne
adc
mov
sub
mov
inc
cmp
push
xchg
movsb
xor
inc
mov
mov
rol
stos
in
enter
xorb
in
adc
dec
hlt
add
jge
ja
jge
jge
rorb
out
in
lahf
mov
mov
inc
jnp
add
mov
stos
cmp
mov
jbe
stc
adc
adc
inc
xchg
sbb
rcll
and
push
xlat
das
ja
jge
in
push
jecxz
and
cmc
ja
sbb
cwtl
sub
frstor
popf
sarl
sti
test
mov
inc
inc
inc
and
pop
pop
cmp
push
lahf
lods
jle
mov
or
aas
push
das
pusha
lret
xchg
loop
scas
push
mov
xchg
jo
int
push
int
ja
sub
and
aaa
stos
popa
jp
sub
mov
popf
dec
xor
loope
sbb
push
outsl
and
es
int3
ret
outsl
adc
cmp
pop
jp
mov
or
xchg
enter
out
rolb
xor
or
cmpsl
add
test
mov
sbb
movb
cmp
outsl
data16
lock
jo
dec
cmpsl
xchg
add
add
sbb
cltd
bound
mov
sbb
pushl
subl
mov
cs
pop
mov
into
inc
adc
mov
aaa
or
aad
ficoml
mov
bswap
pop
aas
sti
movsl
mov
push
mov
mov
test
sbb
lret
scas
mov
lret
push
push
cwtl
push
fsubrl
mov
push
sub
inc
cwtl
addr16
push
mov
lahf
or
xor
popf
lods
mov
mov
inc
incb
je
sahf
sbb
into
lea
std
lock
dec
lcall
inc
pop
xchg
cmpsl
aam
mov
adc
fmull
aad
decb
adc
xchg
outsb
dec
mov
movsl
out
xchg
and
ss
inc
ds
scas
fs
bound
sbb
into
jp
cmp
loope
out
lret
xor
rclb
call
adc
ja
inc
and
aas
into
cltd
test
mov
ret
push
cmp
cs
dec
lret
in
sbb
mov
push
pop
jnp
std
insl
mov
dec
add
add
or
clc
scas
test
out
cmpsb
push
stos
fists
fisttps
test
stos
sbb
dec
sub
adcl
jno
push
arpl
addb
je
sub
dec
addr16
cld
mov
es
out
or
aad
xchg
ret
enter
jns
push
and
or
cwtl
inc
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jmp
mov
popa
jbe
xchg
adcl
add
jo
jge
jo
adc
ljmp
xchg
pusha
dec
or
mov
xchg
fidivrl
arpl
mov
std
dec
adc
pop
and
pop
inc
or
repz
movsb
mov
cmpsb
jecxz
cmpsb
scas
sbb
in
inc
cmpsl
mov
addl
in
mov
sub
movsl
outsb
lcall
jmp
pop
out
cmp
aas
stos
adc
imul
insl
and
jge
das
sub
lahf
mov
fucomi
or
mov
push
and
xor
outsb
pop
push
sub
fdivr
or
xor
pushf
jo
pop
shll
mov
test
jb
fisubrl
je
ds
adc
pop
add
lret
inc
xor
add
push
lods
fs
add
dec
pop
dec
pop
jno
sahf
mov
leave
in
jge
dec
add
adc
sbb
repnz
gs
cs
mov
bound
hlt
lcall
out
loopne
int
push
xor
xchg
or
mov
jno
incb
ror
cmp
fstp
mov
adc
into
imul
scas
rcl
test
add
and
xor
mov
clc
adc
push
pop
mov
movsl
push
sbb
pushf
js
das
cld
pushf
loopne
ret
out
mov
mov
test
mov
pop
and
adc
loop
and
fwait
lods
iret
dec
sahf
mov
pushf
sub
pushf
imul
call
pop
addr16
loope
inc
mov
jecxz
cmp
aam
shlb
out
xor
jno
test
sbb
mov
test
and
xlat
out
inc
sbbb
pop
dec
nop
add
cmpsb
idivb
jno
imul
in
int
xor
imul
dec
ja
inc
and
leave
iret
fists
adc
mov
addr16
or
lea
repnz
add
pop
mov
test
dec
adc
repz
mov
jle,pn
and
jle
pusha
inc
inc
outsl
sbb
mov
aaa
cmp
stos
aad
fnstcw
lea
hlt
jp
cli
push
xchg
cld
push
inc
lret
idivb
ficompl
aad
mov
pop
sbb
ud1
mov
pop
add
sbb
cmp
in
in
push
scas
sub
fdivrp
push
jb
mov
in
hlt
dec
mov
inc
out
shlb
mov
dec
mov
mov
jno
fimuls
dec
sbb
cld
cmpsb
dec
jle
ret
mov
rolb
inc
repz
loopne
push
scas
push
in
out
inc
adc
jecxz
rcl
xchg
mov
xor
and
lret
mov
dec
xor
cmp
stc
insl
jp
gs
lahf
sahf
cltd
subb
out
jl
or
mov
and
mov
mov
mov
lret
iret
push
xlat
popf
lea
jns
ljmp
subl
pop
cltd
ja
test
rorl
jp
je
xor
mov
xor
rorb
shll
cld
cmp
notb
jne
out
std
dec
and
cmp
mov
call
xchg
mov
data16
decl
fdivl
rolb
rorl
scas
xlat
mov
xor
add
jmp
xor
out
icebp
xor
cmp
lods
les
mov
jo
jge
jo
stos
dec
mov
imul
scas
push
jne
call
xchg
adc
loop
push
sbb
sub
dec
pop
into
fnstsw
mov
dec
scas
sti
and
cmp
lea
sarb
cmc
push
cmp
test
push
add
mov
add
fdivr
dec
int3
xchg
push
stc
iret
mov
sbb
ja
icebp
push
xor
test
lahf
dec
xor
arpl
js
and
loopne
mov
inc
xchg
sub
shlb
jle
pop
lods
shrl
scas
cmpsl
jg
add
scas
jo
fistpll
xchg
lahf
pop
jbe
inc
inc
xor
xchg
pop
fsubrl
dec
lds
sbb
clc
fwait
and
fmul
scas
dec
mov
pause
pop
pop
push
cmpsb
xchg
lahf
sbb
repnz
negw
xor
xchg
add
in
mov
mov
mov
sbb
les
push
cmpsl
xchg
xchg
pop
fwait
call
dec
cwtl
pop
pop
sbb
insb
je
adc
js
shlb
out
jmp
cmpsl
or
and
in
mov
pop
jl
rolb
test
ds
mov
adc
andl
aas
clc
test
xor
test
aam
dec
aas
je
jp
cmp
in
mov
call
xchg
jno
loope
cwtl
jne
add
or
xor
xchg
call
mov
mov
fstps
cmp
out
and
hlt
adc
packssdw
cmp
imul
inc
loopne
cmpsb
aad
pop
inc
mov
inc
and
insl
shll
mov
pop
movb
add
pop
aaa
rclb
stc
xor
cs
fsubs
xor
lea
arpl
xchg
jle
and
jno
xchg
sbb
inc
rcll
shrl
or
pop
mov
cmpsb
out
mov
leave
outsl
mov
xchg
adc
pop
pop
dec
leave
adc
fstps
call
pop
adc
out
dec
aam
ds
cmp
ljmp
es
ret
mov
mov
jbe
out
adcl
cld
xchg
and
je
lahf
das
pop
jo
lret
js
in
sbb
inc
stos
ret
clc
pop
dec
add
movsl
std
mov
jge
cmpsl
mov
scas
out
fcomip
adc
cmc
xchg
hlt
into
sbb
in
test
mov
hlt
cmpsb
fnstsw
mov
push
arpl
in
cmpsb
xlat
pop
inc
sbb
dec
imul
out
cvttps2pi
sbb
pop
sub
push
pop
sbb
mov
addr16
ja
mov
repnz
add
shlb
and
inc
lea
mov
in
jmp
cmpsb
scas
hlt
dec
repnz
ret
inc
add
rclb
push
dec
pshufw
sar
adc
movsl
mov
sub
testl
sbb
pop
cmpsb
scas
test
jle,pn
add
adc
xor
icebp
mov
adc
mov
cmpsb
fs
in
leave
repz
inc
push
mov
fwait
addr16
shl
loop
mov
lret
mov
sub
add
dec
outsb
adcb
clc
lea
mov
mov
xor
mov
sub
jmp
out
inc
push
jno
ljmp
and
bswap
cltd
jo
lahf
jge
jo
pop
lret
push
stos
arpl
sub
es
enter
shrb
outsb
mov
divb
outsb
mov
ja
jecxz
js
jmp
adc
sahf
ret
jle
test
push
mov
sbb
sub
push
js
push
das
imul
jne
ret
push
loope
sub
xor
mov
dec
mov
loopne
hlt
mov
scas
mov
push
sbb
aaa
inc
cmp
js
or
xlat
in
dec
mov
sbb
xor
xorl
lret
mov
mov
cmc
sarb
sbb
adc
leave
repnz
xchg
mov
inc
xchg
bound
ljmp
xor
sbb
pop
std
xchg
enter
xchg
adc
ljmp
or
leave
pop
mov
aad
lret
pop
std
repnz
fwait
mov
test
xor
and
add
sbb
sbb
cld
in
fs
dec
mov
sbb
xchg
insl
adc
xchg
push
add
sub
jl
jle
call
push
out
aad
loop
nop
dec
test
cli
sub
sub
cmp
cmp
jp
mov
adc
das
sbb
hlt
cmc
or
cli
pop
dec
sub
mov
cmp
das
sub
stc
scas
rcrl
jnp
sbb
into
push
mov
pushl
xlat
cmc
mov
addl
cmp
popf
lds
push
sahf
ja
sbb
sub
or
mov
push
leave
inc
dec
jmp
xor
push
mov
ss
jno
jbe
mov
jg
dec
fiadds
xor
scas
xchg
xor
int
xchg
outsb
stos
mov
lret
mov
lahf
cmp
and
mov
mov
add
cmp
mov
in
sbb
clc
jge
push
jb
inc
in
xchg
ds
inc
push
mov
cmc
pop
shr
xchg
inc
add
inc
mov
sti
insl
popa
ljmp
dec
mov
out
jmp
ret
in
movsl
add
sub
je
mov
add
mov
jecxz
lahf
mov
cli
push
adc
jmp
fcom
jg
icebp
shl
inc
mov
mov
lods
add
popa
cltd
and
mov
push
mov
int3
ret
push
and
ja
jnp
lahf
les
push
mov
mov
cmpsl
push
aad
in
insb
mov
arpl
ret
pop
scas
repnz
lock
jecxz
jne
or
cmp
ret
xchg
insl
mov
push
hlt
popf
dec
jecxz
sar
in
sbb
lods
add
jg
xlat
cltd
inc
std
xchg
or
sar
fbld
fbstp
int
mov
sub
inc
pop
stos
int3
jnp
test
push
es
in
jo
xchg
push
sahf
and
xor
imul
jl
test
out
add
xchg
lock
mov
std
push
repz
ljmp
repnz
sbb
sbb
fsubl
sbb
aad
hlt
cli
fwait
bound
xchg
pusha
in
sub
imul
push
mov
lock
inc
jnp
adc
stc
fnstenv
mov
jecxz
and
inc
mov
roll
je
bound
sub
outsl
push
xor
and
sahf
xchg
add
xchg
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
orl
push
sbbl
call
andl
test
jne
xor
movl
jmp
adcl
push
call
sbbl
test
movl
je
call
cltd
movl
cmp
jne
movl
cmp
jne
push
push
adcl
push
push
push
push
push
xorl
push
orl
call
movl
jmp
push
call
test
je
sbbl
push
andl
call
movl
jmp
push
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
movl
lea
adc
mov
adcl
lea
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
or
mov
or
mov
mov
push
mov
subl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
jmp
mov
add
mov
mov
mov
movl
cmp
mov
movl
je
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
xor
andl
add
imul
mov
movl
jmp
sbb
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
or
xor
sub
add
mov
mov
mov
xor
add
movl
cmp
jne
subl
pushl
andl
pushl
adcl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
adc
mov
mov
xorl
push
push
mov
xor
not
push
mov
add
sbb
jmp
sub
gs
mov
fstps
pop
pop
push
jg
jo
jb
xor
dec
into
stc
sub
test
jo
xor
push
mov
les
mov
adc
dec
aas
gs
cmc
and
fsub
dec
out
ds
gs
bound
js
popa
jae
sub
push
mov
jp
add
xor
mov
push
outsb
mov
imul
aam
movsb
sub
mov
jae
movsb
fwait
jne
adcl
and
push
shll
rorl
adc
mov
xchg
pop
mov
adc
mov
cmp
or
and
jbe
inc
xlat
nop
jns
gs
rclb
inc
jb
ret
dec
fdivrs
in
rcll
mov
in
enter
xchg
jmp
mov
mov
mov
mov
push
fwait
xor
lea
in
mov
xor
movsl
icebp
test
hlt
pop
inc
and
xchg
or
dec
notb
add
mov
nop
test
mov
or
push
fistl
cmpsb
popf
jg
mov
push
jb
push
bound
pop
outsb
lods
jg
cmpsl
stos
cmp
sub
fwait
xchg
mov
jl
or
xchg
mov
cmpsb
jmp
jno
dec
pop
jae
push
xchg
loope
add
std
cld
inc
add
add
add
add
or
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
imul
mov
sub
mov
and
mov
sbb
xor
add
mov
jmp
icebp
ja
pop
inc
scas
icebp
jno
push
inc
movsl
testb
fistpll
movsb
jo
ret
jg
jo
imul
mov
adc
mov
add
pop
andl
jl
pop
xchg
icebp
hlt
lds
inc
stos
iret
rclb
fdivl
push
mov
ss
xor
jbe
repnz
sbb
fistpll
add
movsb
lahf
data16
push
repz
shlb
jp
or
mov
pop
into
dec
jl
sub
sahf
fisttps
imul
jge
push
cltd
xchg
sbb
xor
jecxz
ljmp
leave
jno
pop
pushl
inc
test
fstpl
cmp
mov
insl
cwtl
imul
movsb
je
pop
push
stc
adc
sbb
cltd
lret
add
js
pop
pop
jp
push
mov
outsl
dec
pushf
dec
repz
push
and
cmpsl
dec
rorl
mov
mov
push
lret
pushf
aaa
fisubrs
aas
dec
popa
loope
aad
cmc
and
popa
lods
repnz
jl
fucomp
jmp
jl
pop
xlat
push
sbbl
nop
add
pop
add
aas
mov
or
jo
fwait
mov
mov
lods
xchg
sub
rcrb
pop
cmp
cmp
xlat
push
xor
lcall
mov
jmp
rorl
sbb
cwtl
push
mov
jo
pop
int3
sub
xchg
nop
lret
aas
jae
dec
xor
mov
ficompl
jmp
mov
dec
add
or
in
out
divb
dec
mov
cmp
mov
gs
push
or
add
cltd
mov
jnp
aam
jg
faddp
repnz
mov
test
adc
sub
cmp
sahf
ss
jge
shr
lret
xchg
dec
insb
inc
jnp
sub
insb
push
push
cmp
sbb
sbbb
imul
in
mov
jbe
jmp
push
mov
dec
stos
xchg
add
dec
cmp
push
add
je
out
mov
lcall
mov
stos
jbe
xchg
js
mov
xacquire
out
pop
outsb
cmpsb
xor
dec
lods
pop
mov
dec
mov
jg
popf
add
and
ret
push
cmp
ret
push
adc
add
push
adc
inc
movzbl
call
mov
adc
out
inc
pop
jne
push
adc
negb
imulb
dec
cmp
repz
inc
xor
mov
sub
mov
cli
data16
sahf
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
neg
mov
add
xor
add
sub
mov
mov
adc
mov
mov
adcl
jmp
cmp
in
fcomi
jecxz
icebp
xor
iret
cmpsb
pop
mov
push
mov
jo
pop
jg
lahf
lods
cld
ret
jbe
test
nop
mov
outsb
push
fucomi
mov
insl
in
lods
sbb
fstl
push
mov
scas
insb
fdivs
push
jl
inc
mov
outsb
ficoms
les
pusha
pop
stos
inc
aaa
je
in
sbb
mov
loopne
cmp
pop
mov
add
mov
loopne
bswap
cmp
ss
rorl
xor
mov
xchg
lods
xor
ja
cmp
in
adc
mov
sub
sbb
outsb
or
jne
lock
aas
jle
push
jl
inc
add
imul
xlat
inc
sbb
loop
mov
push
movsl
jno
mov
jnp
jge
mov
xchg
andl
adc
aaa
mov
mov
adc
pusha
xchg
add
aad
or
js
inc
imul
sbb
dec
mov
jg
sub
inc
sub
sub
leave
das
pop
popa
popa
adc
dec
inc
mov
xchg
or
pop
pop
add
pop
ror
frstor
fiadds
gs
dec
cmpsl
mov
adcl
mov
xorl
movzwl
add
neg
movl
sbb
mov
mov
sbb
mov
xorl
xor
andl
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movzbl
adc
mov
xorl
mov
andl
xor
notl
add
movl
cmp
movl
jmp
fistpl
shlb
and
mov
jo
jg
jo
jecxz
push
es
sbb
mov
sbb
outsb
aaa
insl
mov
jmp
lea
dec
insl
mov
inc
fs
repnz
pop
xchg
ljmp
cmpps
add
outsb
ret
and
hlt
pusha
loopne
fsubrs
in
icebp
sahf
cmpsb
popa
fdivl
dec
les
jae
add
nop
daa
out
fistps
add
push
dec
jecxz
cmpsb
sbbb
sub
enter
into
ljmp
enter
sahf
pop
dec
cmc
rorb
repnz
stos
and
das
jp
fistps
cli
std
leave
pusha
push
lods
fcoms
push
mov
mov
icebp
call
push
mov
sub
jne
mov
jg
call
push
push
xchg
pop
jns
dec
out
jbe
jl
icebp
dec
inc
inc
std
jno
clc
je
sub
xor
incb
adc
enter
sbb
or
hlt
pop
dec
cli
push
adc
jg
ljmp
lods
inc
daa
cli
fmul
push
sahf
pop
adc
hlt
rcrl
xor
sbbb
out
sarl
push
rcr
bound
cwtl
imul
repz
jmp
in
cmp
add
add
lret
or
add
in
inc
add
movb
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
jmp
or
shrb
mov
inc
pop
mov
push
jo
imull
jo
xor
call
sub
and
cmp
push
mov
mov
and
push
sbb
cmp
movsl
int
jge
xlat
jecxz
or
negl
ret
mov
mov
and
push
rcl
dec
in
mov
jbe
sbb
fadds
and
push
sbb
push
sub
test
cmp
dec
jg
call
sbb
incl
imull
enter
ds
mov
sub
punpcklbw
std
mov
mov
jle
incb
test
in
lds
pop
addr16
mov
cmp
push
or
push
popa
jecxz
js
xor
dec
je
pushl
inc
dec
cli
jecxz,pt
xchg
mov
push
cmpsl
out
or
add
sub
sbb
xchg
sbb
sbb
daa
cltd
orb
xor
xor
xchg
aaa
call
jmp
mov
fdivrs
sti
add
leave
push
add
andl
mov
xor
leave
cwtl
or
and
xchg
lds
sub
lods
sbb
int3
cmp
mov
movzwl
jmp
movntps
push
rep
mov
push
jle
cmp
scas
jo
ret
jg
jo
cmp
adc
cmp
push
test
jbe
adc
pop
movswl
imul
subb
inc
out
and
dec
data16
mov
cld
cmc
xchg
imul
jge
mov
repnz
push
insl
sbb
and
and
into
jno
add
cs
mov
cmc
push
fldl
mov
rol
dec
mov
xchg
insl
jb
mov
sahf
pusha
mov
shrl
test
mov
inc
cli
fsubrs
out
testl
xchg
push
cmp
cmp
fcmovne
fs
lds
repz
xchg
clc
add
cmp
neg
test
stos
inc
in
add
cmp
jl
pop
inc
dec
rol
cmp
lock
jecxz
xchg
mov
mov
rorb
mov
push
xchg
inc
cmpl
scas
cmp
cmp
pop
out
in
xor
aad
push
jbe
push
mov
out
xchg
xlat
fwait
mov
sub
add
lods
test
jo
loopne
pop
mov
jnp
mov
jle
bound
fisubs
clc
mov
jne,pt
ss
das
mov
cmp
jns
add
xor
sub
sub
mov
jmp
jmp
int3
push
icebp
xchg
icebp
je
in
pop
mov
loope
xchg
or
jg
jo
mov
xor
fcompl
lods
jg
push
xchg
adc
out
xchg
mov
in
lret
and
cmpsl
outsl
pop
iret
xchg
in
cwtl
push
pop
pusha
shl
xchg
dec
pop
dec
pop
jne
xorl
pushf
mov
leave
sti
ret
ds
mov
dec
pop
inc
aaa
push
dec
adc
dec
lcall
sub
pusha
mov
sbb
jl
enter
push
and
mov
and
cmp
xorl
xor
test
pop
xchg
dec
cmpsb
mov
call
orl
lods
add
clc
add
dec
xor
iret
out
mov
int3
iretw
pop
sbbb
addr16
mov
insb
cmpsl
mov
or
xor
bound
lods
rolb
mov
mov
adc
aam
xchg
loopne
leave
xchg
cmpsb
xor
loope
incl
int
lods
sti
enter
rcll
sub
xchg
jle
adc
jbe
daa
ficoms
daa
and
jns
push
xchg
jmp
pop
bound
in
cmp
pop
mov
push
push
scas
ss
imul
or
call
or
inc
cld
mov
cmp
jmp
mov
enter
lea
leave
inc
inc
jecxz
sbb
shrb
jo
xor
push
int
sbb
lods
mov
add
sbb
jle
jg
jmp
data16
pop
jo
lods
cmp
dec
cld
sti
jae
dec
adc
jge
mov
inc
out
in
dec
push
push
sahf
xchg
inc
rol
pop
adc
mov
sbb
push
cmp
mov
cmpl
jnp
sbb
xor
jl
pop
jge
lahf
in
mov
imul
xor
push
sbb
sbb
pop
into
jg
mov
cmp
pusha
push
into
or
shr
insb
or
adc
mov
fwait
scas
xor
mov
data16
ucomiss
repnz
pop
xchg
stos
in
test
data16
shl
cld
arpl
nop
jb
ficoms
js
clc
mul
jecxz
xchg
fidivl
stos
rol
loope
cmp
in
das
or
push
test
gs
adc
int3
arpl
pop
jp
shrb
fs
bound
daa
icebp
and
psrlw
clc
or
aaa
lods
sbb
push
jl
adcl
sbb
rcr
mov
scas
idivl
push
mov
test
add
mov
jmp
lods
ret
jno
insl
popa
fdivrs
xchg
test
aaa
insb
pop
mov
jg
jo
mov
or
adc
ja
pop
push
cmc
mov
adc
es
cmc
bound
mov
cld
adc
push
push
int3
insl
cmp
jnp
xor
adc
push
sbbl
push
rcrl
adc
popa
divb
ret
push
jmp
ss
insb
je
popf
sub
inc
mov
fidivl
cli
insb
sbb
adc
or
sub
cmp
xor
pop
pop
adc
jnp
adc
es
cwtl
ret
add
and
mov
and
and
dec
cmpsb
adc
cmpsb
lods
cmpsb
subl
xor
sub
sub
lret
lods
repz
mov
mov
rcll
inc
aad
xchg
mov
mov
fistpl
adc
leave
pop
notl
cmp
loope
xor
dec
out
in
push
dec
pavgb
mov
test
aaa
call
in
push
push
mov
pop
cmp
scas
insb
cltd
push
sbb
xor
fsubr
push
inc
loope
pop
cmp
sbb
aam
xor
sub
nop
push
ds
movl
jmp
mov
mov
xor
add
cmp
je
mov
jmp
dec
int3
cmp
mov
add
ror
stc
cmpsl
jge
test
jo
ljmp
repnz
push
lods
jg
cli
leave
int3
xchg
cmpl
and
imul
ljmp
pop
iret
and
sbb
aas
cmp
sbb
pop
inc
aaa
outsb
out
cmp
inc
xor
subb
mov
xor
cmpl
pop
sbb
and
mov
xor
mov
icebp
cmp
dec
scas
push
inc
rorb
ds
insl
popf
enter
les
rclb
nop
rcrb
sub
cmp
les
call
dec
enter
sub
mov
mov
jg
lods
pop
pop
and
pop
mov
out
fstl
sarl
sbb
les
or
adc
sti
imulb
jle
mov
pushl
addr16
shrb
lret
fcos
lsl
mov
mov
mov
dec
adc
leave
inc
xorl
in
sbb
and
mov
lahf
xor
sub
call
leave
adc
push
lret
inc
clc
jmp
inc
gs
icebp
imul
sarl
cmp
jo
mov
mov
stos
xor
xlat
ja
popf
cld
jge
pop
mov
or
xchg
out
or
pusha
in
adc
jge
jle
in
mov
push
inc
cmp
or
out
push
sbb
sbb
lods
rcl
aad
shl
cmp
mov
inc
in
shll
push
dec
pop
push
pop
jnp
insl
add
leave
push
shlb
sub
mov
sti
xor
cli
mov
jb
loopne
push
cmp
adc
jbe
lock
ljmp
cwtl
and
insl
inc
mov
inc
les
add
aas
or
or
mov
fcoms
xor
mov
inc
aad
sub
fs
cli
adc
dec
dec
mov
xchg
icebp
jo
xor
ffree
cmp
mov
hlt
movsb
test
icebp
push
inc
push
lds
mov
rcrb
sub
jle
andl
push
fstpt
jnp
popf
xchg
pushf
cmp
mov
lahf
inc
sbb
mov
pusha
jecxz
sbb
ret
push
shll
fisttpl
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
jmp
pop
out
dec
mov
mov
testb
dec
shlb
jo
jg
jo
fdivp
test
dec
ljmp
adc
rcr
jbe
addb
bound
sbb
in
es
mov
add
pop
push
cmp
or
inc
mov
pop
push
loopne
popf
mov
mov
inc
and
sub
imul
push
loop
cmp
sub
mov
or
and
leave
sub
or
pusha
push
push
mov
cmp
cmp
aad
rcl
mov
lea
int3
pop
and
test
adc
fimull
arpl
mov
sub
pushf
cltd
scas
bound
dec
call
fptan
lcall
sub
mov
in
cmp
mov
adc
int3
rolb
andb
leave
out
pop
jg
fdivs
in
ds
addb
push
xchg
fldenv
push
mull
push
or
cltd
out
mov
cmp
jne,pn
hlt
cli
mov
push
hlt
and
dec
xor
fdivrs
xor
sbb
cmpsl
shll
rcr
mov
iret
std
xor
daa
loop
mov
clc
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
ds
adc
dec
xor
sahf
lcall
jo
dec
or
test
out
es
mov
xchg
add
push
lods
jne
xchg
inc
into
cmp
into
pop
and
jb
mov
pop
push
cltd
int
jle
scas
add
xchg
mov
test
mov
lods
mov
cli
cli
jmp
adc
imul
sbb
push
push
and
jmp
outsl
cli
mov
subb
inc
sub
push
xchg
or
cld
lret
das
adc
inc
les
lock
xchg
dec
mov
mov
xor
aas
popa
pop
lahf
pop
push
out
js
inc
scas
mov
pop
push
shrl
inc
es
push
sbb
lods
dec
in
movsb
dec
mov
xchg
dec
xchg
jl
dec
push
cmpsb
addb
jl
sub
ret
test
mov
call
movsb
dec
dec
mov
push
sarl
push
mov
iret
pop
add
das
aas
sub
sbb
cld
sbb
movsl
jg
mov
push
inc
stos
outsl
inc
sbb
loop
sub
jno
xchg
or
or
xchg
sbb
insb
repz
gs
jno
gs
popf
pop
cmpsb
fdivrl
pushf
out
ds
fucomi
in
mov
inc
dec
popa
xlat
pop
jle
sahf
and
and
outsb
mov
repz
int3
sbb
enter
outsb
xor
mov
inc
iret
mov
movsb
mov
mov
in
add
xor
outsl
ficomps
ret
mov
insl
cld
js
outsl
fcoms
shl
shll
cli
in
clc
cmp
adc
mov
subb
sbb
mov
dec
out
inc
pop
xchg
cld
mov
popf
leave
push
insb
jecxz
popa
stos
jecxz
out
add
outsl
mov
xchg
je
std
and
jmp
lahf
or
push
addb
cmp
dec
fwait
js
mov
outsb
movb
pop
mov
xor
adc
iret
push
mov
pop
xchg
push
push
loope
and
js
int
dec
fwait
je
mov
inc
fidivrs
das
ljmp
orb
and
and
test
loopne
mov
outsl
cmpsl
mov
int
insb
jmp
ss
syscall
rclb
ror
push
mov
jbe
insb
dec
test
or
imul
inc
mov
into
pop
test
adc
rcll
push
enter
add
aas
sahf
popa
andb
add
dec
cmp
outsb
lods
cmc
add
push
aaa
loop
orb
scas
aas
fildll
mov
dec
sbb
inc
or
inc
movsb
cmp
les
push
xchg
jmp
mull
dec
xchg
mov
lea
repnz
lcall
aad
fidivs
repz
out
push
cmp
rclb
call
mov
add
out
pop
push
repz
imul
dec
ja
ljmp
ss
push
adc
pop
mov
mov
je
mov
add
ljmp
sub
orb
push
mov
aad
pop
filds
and
dec
lock
jl
test
jno
orl
je
mov
dec
xor
cwtl
fwait
mov
add
push
negl
jmp
mov
cli
xor
testb
pop
lods
sbb
mov
jo
jge
jo
pop
add
ret
sbb
fisubs
adc
daa
lahf
enter
lock
outsb
lret
jbe
pop
add
mov
mov
mov
jno
dec
mov
stc
test
adc
adc
ret
mov
lds
enter
out
lods
cwtl
fmull
sub
mov
add
fs
mov
cmp
cmp
into
sub
mov
sbb
cmc
out
imul
xchg
jg
in
ret
and
fldcw
xor
xchg
test
and
lret
in
je
cmp
mov
mov
adc
add
pop
pop
sbb
mov
or
mov
subb
jge
ret
aam
push
dec
clc
iret
adc
xlat
cmp
cltd
outsb
cmc
mov
mov
scas
out
cmc
push
and
or
adc
lds
idivb
mov
test
stc
sbb
fidivrl
and
outsb
inc
loop
add
cmp
push
mov
sub
loope
loopne
out
lods
lds
jl
fwait
dec
fiadds
jae
aad
cltd
cmp
mov
clc
xchg
or
pop
jl
mov
cmp
and
add
arpl
jno
pop
adc
mov
jmp
lahf
aad
cmpsb
push
adc
push
das
fimuls
or
xor
and
stos
cmpsl
sbb
push
mov
pop
cs
and
xlat
test
cmp
insb
ret
fcmovnb
subb
mov
test
sub
hlt
sbb
sahf
ret
mov
sub
mov
jle
mov
inc
repnz
mov
popf
outsb
lret
adc
push
jo
sarl
xor
lods
jns
xor
daa
jecxz
cwtl
push
lret
or
sarb
icebp
cmpsb
jbe
into
ss
aad
and
scas
xor
dec
jne
les
arpl
sti
enter
scas
mov
std
inc
aaa
fcoml
xlat
test
add
sbb
or
cmp
lods
xor
or
arpl
sti
jmp
das
inc
push
int3
xchg
pop
popa
inc
mov
mov
dec
jnp
mov
je
decl
xor
inc
movsl
jmp
jb
inc
push
jno
push
shl
fwait
inc
pop
jno
inc
cmp
xlat
scas
insb
xor
push
nop
addb
scas
pcmpeqd
js
cltd
cmp
ss
and
orb
dec
sub
or
cmp
das
push
ljmp
cld
push
mov
aam
sbb
mov
sbb
inc
fimull
arpl
loope
mov
sub
sbb
jp
testb
dec
push
xor
dec
fimull
cld
sbb
outsl
mov
call
and
pop
incb
jmp
push
mov
es
lds
sarl
mov
dec
sub
and
loop
or
test
push
add
sub
mov
jb
mov
dec
push
andl
insb
fnsave
sahf
loopne
cmp
jnp
mov
pop
mov
or
mov
mov
mov
enter
sbb
repz
std
clc
in
inc
dec
movl
mov
mov
movl
add
xorl
xor
movl
cmp
jne
mov
mov
and
mov
mov
movl
add
mov
jmp
fcmovnbe
aam
repz
push
jae
push
in
mov
jo
jge
jo
pop
sub
pop
xchg
lret
or
inc
and
enter
out
pop
xchg
cmpsb
pushf
idivl
push
cmc
push
pop
dec
sub
push
cmpsl
add
jg
dec
outsl
call
adc
mov
test
inc
testb
push
inc
pop
xor
add
cmpsb
ret
imul
out
gs
inc
stos
push
cld
xlat
and
lock
push
add
stos
pop
xchg
fldenv
popf
int3
inc
int
xor
dec
and
sub
cmc
out
outsb
leave
jno
das
pushf
test
sti
in
mov
stos
aam
lahf
adc
sbb
or
add
or
push
insb
xchg
mov
mov
fisttpll
push
xchg
sbb
out
mov
push
shll
mov
sub
pushf
stos
dec
fsts
rclb
rcl
fidivrl
je
loopne
pushf
ss
rcr
or
jp
jg
push
ficoms
fldenv
add
fs
push
inc
and
repz
shl
scas
cmp
push
lds
xchg
cmp
push
push
cltd
mov
inc
test
lret
scas
adc
aad
arpl
xor
cmp
iret
mov
fistpl
pop
imul
insl
push
and
push
fscale
mov
or
mov
inc
outsb
cmc
cld
loope
scas
imul
cmp
inc
add
aam
and
push
lcall
add
mov
inc
xchg
adc
mov
es
push
pop
repz
jae
push
cli
fadds
xchg
jl
pop
cli
sub
fst
cmp
out
inc
stos
fs
sbb
sbb
mov
mov
lret
out
scas
or
pop
lds
mov
roll
popf
cmp
cmp
jae
add
sbb
cs
movsl
fmuls
orl
inc
mov
mov
icebp
nop
add
or
pusha
jle
push
xor
push
jne
dec
pushf
mov
sbb
ljmp
dec
xor
mov
jmp
test
inc
aam
movsb
cmp
push
and
out
xchg
cmp
out
ds
stc
mov
fstl
stos
arpl
fcoml
cmpsl
aas
cltd
push
out
loope
daa
sbb
cld
icebp
ds
ficoms
lods
sbbl
or
fdivl
xor
and
xchg
popf
lcall
icebp
mov
adc
pop
ljmp
dec
mov
mov
lds
testl
stos
and
xchg
jmp
sbb
jae
push
mov
sub
hlt
int
push
fstpl
fsub
push
insb
ret
insl
orb
lea
ror
pop
stos
fwait
lahf
jle
addr16
outsb
push
xchg
sbb
mov
sub
dec
mov
fldenv
out
or
sub
push
cmp
jle
rolb
push
rorl
pop
inc
xchg
aaa
out
or
jp
push
mov
sbb
int
and
mov
jp
cmpl
push
or
les
xor
out
push
sub
movsb
push
orb
xor
push
mov
js
mov
sahf
mov
ffree
dec
popa
std
jmp
or
push
inc
mov
pushf
mov
add
jo
andb
or
mov
mov
add
mov
xor
sub
push
sbb
jmp
lods
das
mov
mov
lcall
pop
mov
jo
jo
cmpsl
lar
mov
mov
and
fs
and
lret
fwait
dec
loopne
cld
jmp
pop
push
push
or
push
jge
setne
jbe
into
pop
and
test
repz
hlt
add
pop
iret
sub
lea
mov
hlt
stc
jbe
pop
or
test
pop
jle
or
mov
lcall
enter
mov
add
sub
gs
cs
mov
mov
jg
shll
inc
das
cmpsl
lods
notl
call
add
and
jg
push
inc
shrb
and
jmp
mov
mov
bnd
and
aam
jbe
push
mov
sbb
mov
and
sarl
cs
scas
insl
pop
cli
push
jmp
pop
dec
and
ds
mov
jmp
sbb
dec
decl
arpl
shr
fbld
cmp
and
cmpsb
iret
setl
inc
cld
xchg
loop
scas
and
sbb
movsb
push
xchg
xor
jle
js
pop
jb
int3
cld
loopne
into
dec
push
fidivrs
sbb
sbb
sbb
je
es
test
pop
clc
add
test
pop
test
inc
pop
mov
dec
popa
sbb
shlb
rcl
sub
les
movsb
dec
inc
ret
shlb
lcall
mov
js
pop
call
jge
jl
scas
outsb
fsubr
xor
sub
movsb
sbb
pop
jge
cmp
outsl
test
push
insb
push
aaa
add
test
jns
xor
xor
mov
cmpsb
push
mov
add
les
dec
pop
cmpl
inc
add
lods
nop
adc
jb
mov
mov
fdivp
adc
xchg
pop
out
lock
push
adc
jnp
jmp
or
sub
out
and
mov
jmp
mov
xchg
mov
xchg
rorb
dec
andb
xchg
add
popf
jno
sub
adc
mov
addr16
stos
lds
lods
pop
into
adc
mov
or
cmp
js
adc
and
ja
inc
mov
and
sbb
xor
and
and
test
push
adcl
add
lcall
aas
insb
stc
and
test
dec
add
int3
sbb
and
addr16
lea
and
xor
add
repz
mov
leave
shll
mov
xor
out
sar
pop
ljmp
shlb
jmp
adc
sti
xchg
jns
test
or
inc
cs
and
out
daa
jle
fnstenv
mov
ljmp
mov
pop
add
adc
cmp
pop
cld
jle
scas
dec
pop
adc
sbb
sub
cli
mov
in
pop
int
sub
push
add
psllw
dec
lret
xor
xor
mov
repnz
xor
test
jg
or
in
pop
out
dec
in
popa
test
jo,pn
jnp
push
daa
or
push
mov
push
fildl
sub
inc
xchg
mov
sbb
mov
add
jmp
outsl
mov
or
imul
push
in
pop
mov
jo
jge
jo
lds
pushf
stos
mov
adc
loopne
aas
xchg
mov
hlt
rcl
les
lret
cmp
jbe
lock
jle
ja,pt
xchg
into
adc
iret
xchg
mov
cmp
mov
lret
mov
jge
xor
mov
lcall
sarb
mov
fs
mov
add
or
push
jns
scas
dec
rorl
cwtl
insl
ds
fisubs
mov
or
xor
push
lds
sbb
mov
loopew
in
push
cwtl
push
outsl
rorl
adc
mov
in
pop
or
xchg
outsb
adc
loop
lret
out
pop
cltd
or
int3
inc
clc
lock
xchg
notl
je
dec
aad
jp
xor
int
or
stc
out
sbb
sarl
ds
sub
inc
stos
mov
cmp
fcoml
cwtl
mov
xchg
pushf
in
lret
adcb
mov
push
push
ret
mov
mov
or
add
jge
imul
add
push
push
adc
imul
add
jecxz
sahf
push
push
cmc
xor
daa
push
mov
scas
test
cmpsl
in
mov
ficompl
js
or
xor
pop
insl
mulb
je
or
push
pop
lock
mov
aad
ret
inc
adc
fsubl
push
and
jge
testl
je
dec
lock
dec
jmp
ljmp
pop
lods
add
std
inc
fwait
mov
out
jp
jno
mov
sbb
into
shl
mov
call
add
stos
lcall
jbe
decb
xlat
nop
test
sbb
jle
xor
xor
mov
add
inc
pop
call
add
xchg
dec
or
jg
jae
lea
cmp
cmp
jo
lock
aam
push
mov
add
das
pop
sbbl
inc
fsubrs
cmc
lea
pop
or
jbe
push
push
leave
div
pop
test
jecxz
std
fistpll
sahf
nop
jns
jno
addl
jle
ret
cmp
jbe
jb
idivl
fdivr
loope
aas
and
ds
mov
mov
arpl
cmpsb
leave
rclb
sub
push
inc
xor
mov
sahf
incb
cmpl
jae
cmpsb
sti
les
mov
mov
or
fcmovnbe
lds
ds
dec
rcrb
xor
mov
aam
fdivl
jecxz
push
stos
push
pop
add
mov
inc
or
lret
xorl
loope
mov
jno
popf
hlt
bound
insb
test
out
fistl
dec
fistpll
xchg
cmp
jns
jnp
jb
add
cmp
mov
imul
lret
pop
scas
lods
or
mov
or
mov
mov
sbb
bound
cmp
fdivrs
es
or
lods
add
jnp
lcall
fnstcw
int3
lods
xchg
fs
popf
jle
fldl
cld
rorb
mov
adc
stos
inc
mov
adc
loop
xchg
call
lock
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
jmp
outsl
mov
jae
dec
cmpsl
repz
inc
jo
pop
jge
jo
jge
add
cmpsb
lahf
sbbl
adcb
mov
dec
mov
inc
mov
enter
sbb
xchg
mov
cld
mov
pop
ss
frstor
dec
hlt
add
imul
adc
push
xchg
jp
outsl
adc
shll
imul
mov
fstpl
inc
int
insb
loope
sub
cmp
or
sbb
or
mov
loope
mov
in
push
xchg
sti
pusha
or
mov
cmp
in
jl
add
adc
in
loopne
mov
pop
jb
add
adcl
rcrb
lret
adc
dec
inc
xor
shlb
cli
cmp
push
inc
xchg
leave
push
mov
pop
popf
and
stos
adc
stos
add
or
mov
repz
push
in
and
sbb
out
dec
jle
in
les
sbb
jns
mov
ds
je
adc
sbb
pop
mov
adc
bound
push
cmpsb
or
add
jne
pop
out
dec
fcmovbe
fldcw
push
or
xchg
shlb
jmp
stc
cld
ja
fdivs
inc
call
nop
xchg
mov
addr16
inc
cmp
inc
outsb
add
pop
and
lods
push
arpl
xchg
daa
xor
lds
mov
xor
inc
dec
jns
push
xor
dec
adc
cmp
arpl
sbb
fimull
aaa
sbb
mov
jl
cmp
test
stos
sub
pop
lret
inc
rcl
stc
mov
dec
and
repz
push
or
cmp
pushf
push
lcall
dec
push
gs
pushl
fwait
pop
push
cmp
and
dec
repnz
scas
adc
jno
cmp
xor
mov
stos
mov
js
add
pop
add
jge
lcall
ror
xchg
add
repz
imul
or
mov
dec
lds
cwtl
or
dec
jae
inc
call
flds
and
mov
enter
push
push
or
aas
shlb
cmp
push
mov
sub
pop
dec
fcmove
imul
aas
scas
inc
dec
xor
sbb
push
imul
les
mov
fwait
cli
fisttps
add
dec
dec
nop
lods
imul
stc
je
je
jge
pusha
aam
jmp
shll
pushf
pop
mov
shrl
mov
cmpl
xor
mov
inc
aaa
arpl
pop
sbb
xchg
or
and
mov
mov
mov
vmread
into
sub
jae
mov
mov
rorl
push
outsl
or
inc
test
je
dec
xchg
data16
es
dec
es
inc
addl
push
fiadds
mov
loope
mov
sahf
lret
xor
cmp
lds
fdivp
adc
in
test
test
and
inc
push
loopne
mov
mov
cmp
addr16
dec
xchg
je
nop
aam
nop
test
and
cmp
mov
rclb
sub
repz
repz
inc
jp
and
and
jne
aad
xor
jp
pop
je
mov
mov
rolb
dec
ret
mov
in
push
mov
and
int3
lods
stos
sahf
repnz
rorb
cltd
ret
mov
jge
jnp
fnstenv
push
sub
push
add
mov
or
pop
fwait
rol
push
sahf
or
dec
mov
mov
sub
adc
mov
push
mov
xor
movl
jmp
xchg
shll
push
paddsw
es
jo
pop
jge
jo
out
dec
adc
and
and
add
mov
ret
dec
call
cmp
arpl
xor
out
jno
cli
add
jne
ljmp
jmp
inc
out
ja
iret
xlat
adcb
mov
mov
push
adc
sbb
insb
out
push
xor
insl
imul
std
sub
ret
add
stc
jge
call
fstps
loope
pop
sar
or
dec
lret
outsb
repz
lock
sub
mov
pop
push
push
adc
sbb
mov
adc
mov
xchg
pop
leave
nop
xchg
mov
jmp
mov
adc
out
je
hlt
pop
mov
and
xchg
mov
sahf
push
inc
push
inc
iret
ds
push
mov
adc
and
and
pushf
pop
insl
xchg
dec
sub
mov
dec
add
pop
xor
iret
pop
sub
sbb
int3
imul
sbb
imul
or
enter
xlat
jb
movsb
jnp
int
dec
sbb
in
ds
mov
fistps
cltd
pop
scas
test
test
je
sbb
mov
or
aam
jle
popa
out
pop
jg
or
test
std
ljmp
ret
cmp
mov
pop
dec
js
sub
jo
rcrl
jg
mov
and
jl
popa
ret
sub
ljmp
das
lds
out
push
ds
jne
inc
lret
or
inc
cmp
lahf
push
fwait
scas
ljmp
inc
hlt
mov
sub
push
inc
in
push
inc
mov
mov
aam
test
cmp
and
sub
sbbb
mov
dec
xchg
ret
ja
sub
add
mov
add
push
cmp
sbb
push
jne
jns
jl
add
ljmp
fsts
cmp
and
push
popf
out
gs
rep
fs
xor
jge
and
dec
pop
loop
je
mov
test
test
pushf
pop
adc
pop
mov
sub
ret
and
fadd
fs
jbe
lcall
push
pop
scas
xchg
js
mov
or
lcall
dec
das
mov
xor
mov
or
and
mov
mov
lahf
cmp
jg
jmp
imul
movsb
sbb
jbe
sahf
rolb
fistps
loope
das
repz
push
dec
sbb
add
movsb
add
inc
cltd
jns
popf
sub
test
pop
inc
or
pusha
lahf
ror
mov
push
ss
xchg
outsl
xchg
loope
fstl
sbb
aad
in
or
int3
inc
jl,pn
dec
lods
outsl
int3
inc
adc
and
jbe
out
leave
dec
aam
hlt
adc
xor
mov
xlat
jae
xchg
mov
mov
mov
mov
pop
jl
push
lret
add
add
das
sbb
lret
shrb
ljmp
jg
sti
fistpll
pop
add
sbb
sub
sahf
mov
adc
jns
cmp
push
or
call
sub
add
push
xchg
mov
fsubl
dec
pop
push
jge
mov
ficomps
frstor
xor
mov
pop
mov
addr16
or
mov
icebp
cld
inc
add
js
add
test
or
add
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
and
leave
adc
adc
call
cmp
loopne
dec
jo
pop
jge
jo
inc
out
xchg
jb
in
inc
fists
push
jns
xchg
mov
cmpsl
cld
dec
push
jb
aad
imul
sahf
pop
test
xor
xchg
xlat
cld
in
sub
inc
sti
andb
jmp
scas
mov
test
fnstenv
lock
mov
test
or
hlt
out
andl
test
and
xor
pushf
push
mov
loop
mov
ud1
cmp
cli
ss
jle
pop
xchg
movsb
adc
push
push
and
sub
xor
xchg
or
fildl
jge
or
cmpb
cs
aad
xor
jmp
mov
or
outsl
iret
dec
sub
cmp
pop
xor
pop
push
cli
clc
push
push
fnstsw
jg
movsb
push
loop
mov
lods
jle
les
mov
out
mov
repz
sub
repnz
jg
dec
fildll
aas
out
push
int3
push
or
push
push
xor
mov
push
inc
loope
aad
mov
rorb
mov
outsb
testl
adc
xchg
in
test
ret
mov
xlat
sub
xor
mov
insl
loopne
out
xor
jp
jo
js
je
imul
mov
hlt
inc
int
push
jge
int
push
lods
and
loopne
sbb
or
push
lret
fldenv
sub
test
pushl
cli
add
ljmp
ffree
in
or
daa
filds
clc
sub
sbb
test
aas
fcmovu
add
cmp
add
clc
jle
jl
sahf
sbb
jno
mov
sbb
into
sbb
mov
incl
pop
int
or
roll
adc
pop
mov
push
mov
lea
adc
orb
xor
inc
pop
test
aam
jno
stc
or
cmp
les
rolb
jb
sub
mov
mov
push
mov
adc
sbb
push
sar
push
cld
pop
jb
jae
xor
push
fisttpl
xchg
xchg
xor
push
sub
jnp
inc
push
pop
mov
inc
dec
inc
imul
ss
repnz
lds
ds
jg
enter
fldt
movsb
xor
mov
sbbl
lret
lcall
stos
add
adc
insb
lea
in
or
inc
adc
adc
mov
fs
pop
add
mov
out
shl
scas
das
pop
es
mov
mov
jns
scas
add
sti
xchg
stc
ret
fnstcw
or
add
mov
fidivrl
mov
enter
addr16
lock
dec
iret
pop
dec
sub
fidivl
icebp
xor
rol
sbb
je
mov
jmp
fisubrl
jno
stc
call
jp
xor
add
mov
ja
lock
sbb
or
push
int
push
jno
adc
jne
cmp
or
cmpsb
hlt
push
lds
pop
jmp
fnstsw
mov
stos
pop
mov
mov
dec
fsubrs
daa
mov
push
xor
jmp
movsl
aas
jae
xor
lret
cmp
xchg
sub
mov
rorl
jns
ja
in
xor
popl
or
ret
cmc
cld
inc
add
jg
add
rol
jp
inc
add
add
cmp
movl
jne
jmp
js
stos
loopne
jae
cmc
pop
sub
dec
jbe
jo
pop
jge
jo
sahf
in
andb
add
ds
ljmp
lods
xor
lret
insl
loopne
jp
movsl
push
mov
add
pusha
mov
and
and
orl
in
pop
push
push
cld
or
dec
xor
xchg
dec
add
fwait
and
sub
aam
movsl
push
cld
ret
push
outsb
inc
gs
push
dec
in
inc
adc
xor
or
call
aad
sbb
rol
fmul
lds
push
les
xchg
aad
xchg
push
push
lds
push
aam
aam
sbb
cmpsl
cwtl
or
sbb
jae
jmp
push
cltd
rolb
pop
test
fsubl
xor
cld
ficomps
arpl
out
ljmp
and
jb
add
loop
add
push
in
outsl
dec
aad
test
jp
push
lods
push
xor
cmp
pop
js
jno
ljmp
adc
inc
lret
xchg
lock
shll
jp
popf
mov
movsl
or
jmp
mov
rol
test
sbb
mov
fiaddl
or
sbb
cmc
mov
push
test
and
repz
jb
mov
dec
or
out
xor
cltd
xchg
and
fsub
imulb
cltd
push
or
negb
mov
pop
push
divl
ss
mov
xlat
cmp
mov
test
jb
push
xor
adc
xchg
jmp
cs
mov
mov
outsl
negl
outsl
sub
loopne
xchg
mov
pop
push
push
aas
xorb
push
push
jmp
mov
inc
jp
negb
jb
scas
stc
or
sbbb
aam
and
mov
lock
dec
popf
pop
pusha
loopne
negb
dec
imul
sub
mov
fnsave
pop
push
out
rcl
pop
aaa
aad
add
fisubl
in
dec
sarb
das
cmpsb
xchg
add
shrb
movl
shl
lcall
rclb
pushf
cmp
iret
sti
in
jnp
and
and
or
mov
iret
daa
xchg
sbbl
repz
mov
lock
stc
aas
shl
sbb
jecxz
add
mov
pop
sub
mov
add
mov
fcmovnu
mov
repz
icebp
cmp
mov
outsl
sub
insw
add
js
sub
ss
test
out
fildl
iret
adc
orb
jecxz
pop
cmp
in
das
cmpsb
pop
lahf
vcvttsd2si
mov
fcompl
push
fsubrl
xorl
mov
sub
pop
jl
into
lock
out
iret
lods
insl
nop
or
sbb
push
pop
and
cmp
lods
mov
clc
in
push
pusha
cmp
in
add
lock
int3
pusha
scas
inc
cmp
sub
adc
icebp
jne
sub
movsb
sub
mov
in
pop
popf
adc
mov
xchg
push
xchg
pop
dec
adc
cmc
divb
xchg
out
test
nop
les
in
mov
or
jle
icebp
adc
in
mov
sbb
stos
add
jmp
jns
clc
push
faddl
pop
dec
sub
sub
aad
sbb
jns
jo
in
fstpl
cli
arpl
in
pusha
hlt
jo
push
lods
cltd
pop
cmpsl
ds
inc
scas
add
mov
je
rolb
inc
add
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
jmp
mov
cwtl
test
jb
jb
xchg
adc
test
pop
jge
jo
xchg
jle
xor
lahf
mov
lret
jb
stos
daa
shll
insb
lahf
jmp
xchg
rorb
mov
ss
cmp
in
xor
mov
cmc
mov
idiv
subl
test
jmp
inc
idivl
das
notb
sub
adc
lods
lock
push
je
andb
dec
aas
pop
cmp
cld
pop
mov
das
jo
add
mov
aaa
sub
jg
roll
adc
int3
push
pop
in
and
ljmp
jg
test
jecxz
iret
js
mov
popf
in
addr16
xchg
push
fisubrs
xor
xchg
push
mov
xchg
lods
and
push
xchg
icebp
jo
lock
lret
imul
or
push
lahf
ror
movsb
rol
sub
sub
pushf
lahf
fisttps
mov
pop
insb
int
jmp
icebp
cmp
into
or
aas
push
cmpsb
aad
shll
ja
xchg
or
and
aas
fnsetpm(287
push
adc
dec
push
jge
jg
dec
and
dec
stc
pop
push
cwtl
mov
adc
fsubl
xchg
aad
mov
push
outsb
cmp
out
stos
popa
or
sbb
and
and
inc
sub
mov
dec
xchg
pop
xchg
and
ds
mov
cmp
jae
out
pop
mov
mov
xor
jbe
pop
mov
cmc
cmp
push
scas
cmp
xchg
and
mov
xor
mov
push
mov
and
aam
pusha
jecxz
aas
repnz
mov
xlat
div
xor
xchg
cmp
add
mov
or
test
scas
stos
notl
push
cmp
ja
push
pop
ret
pushl
push
out
push
addl
push
ss
andl
ss
shld
cmp
mov
mov
cmp
mov
jns
ret
int3
cli
sub
or
aas
jnp
fildl
mov
dec
mov
mov
and
mov
xor
push
xchg
xor
push
jge
out
adc
arpl
or
jns
xchg
and
lret
orps
icebp
clc
jge
cltd
lret
push
test
test
push
xor
dec
mov
pop
adc
push
add
rcrb
xor
dec
jae
add
push
aas
cmp
or
adc
jnp
or
out
subl
insl
sub
inc
bound
test
push
js
and
dec
inc
xchg
jno
bswap
mov
mov
in
loopne
and
adc
test
into
cmc
push
pop
adc
adc
jo
mov
mov
test
btr
mov
add
pushf
scas
or
in
ja
mov
ja
cmp
pop
adc
sub
stos
aam
inc
in
or
insb
lahf
lret
and
jmp
xorl
jge
sbb
jns
mov
cmp
sbb
popa
inc
nop
push
out
push
ret
daa
jns
adc
insb
inc
jecxz
cmp
adc
iret
lods
aaa
xchg
stos
cmpsb
mov
push
iret
shll
jbe
mov
push
das
mov
insl
adc
push
leave
xor
test
cmpl
rcl
rolb
in
fadds
popf
mov
sbb
into
fdivr
pop
pop
gs
cs
cmp
dec
mov
mov
out
adc
insb
popf
es
push
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
and
movl
mov
adc
movl
sbbl
mov
subl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
xor
sub
mov
sbbl
jmp
mov
mov
pop
dec
xor
push
push
push
inc
pop
jo
mov
rol
stos
adc
add
sbb
adc
push
mov
cmp
jb
xlat
sarl
cli
fwait
imul
jmp
movsb
mov
dec
xor
cli
ret
and
fbstp
in
scas
scas
fists
filds
mov
inc
fisttpl
in
and
fiadds
test
clc
mov
dec
sarl
mov
stos
outsl
pop
xlat
xlat
push
xor
lods
mov
cmpsl
aad
mov
sbb
rolb
ret
cld
ja
jne
jb
mov
sub
sub
pop
xchg
jl
xchg
fcmovnb
mov
mov
ja
adc
jecxz
sub
xlat
jb
insl
xor
sub
and
lods
push
push
outsl
cmpsb
lock
shlb
popf
xchg
test
lods
xor
cmc
dec
push
add
pop
and
hlt
or
jb
and
jg
jae
mov
popf
add
out
pop
pushf
pop
cld
xchg
and
mov
test
std
xchg
idivl
ret
xchg
clc
fstpt
jmp
mov
stc
fsub
xchg
and
decb
outsl
xor
rcl
int
sub
push
addb
add
push
xchg
mov
jge
xor
sbb
fdivs
mov
hlt
repz
inc
out
out
xchg
in
jecxz
jmp
repz
xor
mov
fimull
adc
testl
mov
push
roll
jmp
leave
jp
pop
test
shll
ss
pop
and
fstl
subb
test
subl
ja
dec
ljmp
dec
add
mov
icebp
je
outsl
and
pushf
js
inc
mov
jo
outsb
push
sbb
sub
addr16
or
cmp
add
fs
adcl
mov
test
jb
mov
jp
add
mov
in
and
inc
add
je
and
mov
pop
cmp
mov
adc
mov
push
mov
sub
add
pushl
mov
in
sbb
mov
sbb
testb
clc
mov
in
xchg
dec
push
lret
add
add
inc
mov
rcll
cmp
test
jbe
mov
daa
fstl
mov
ficoms
mov
lahf
xchg
mov
out
xor
cld
fisttpll
jg
add
subl
jmp
hlt
xor
fwait
repz
inc
xchg
aaa
push
inc
test
pop
jo
mov
inc
jbe
pusha
fisubrl
mov
lods
daa
jg
outsb
push
cmpsl
xchg
cmp
sbb
jl
shlb
xchg
popf
mov
sbb
ds
shll
in
pusha
push
xor
icebp
aaa
adc
outsb
bound
enter
or
or
mov
popa
jbe
inc
add
inc
lahf
jl
pop
or
jmp
add
rorb
mov
lret
test
jno
cltd
inc
xchg
mov
xchg
in
jae
daa
cmpsb
and
adc
insl
mov
mov
add
in
dec
cmc
fisttpl
lods
int
mov
mov
or
jnp
jecxz
dec
xor
cs
pop
and
sub
loop
pop
into
push
xor
xchg
into
cld
jae
out
sub
sub
loop
mov
mov
add
ja
repnz
and
push
mov
inc
mov
fdivrs
sbb
add
and
xchg
popf
repnz
stos
jne
dec
dec
jp
outsb
aaa
cmc
enter
inc
or
pushf
mov
push
fistl
jle
cmp
insb
les
ret
hlt
dec
or
mov
mov
mov
mov
sub
push
cpuid
pop
and
das
add
imul
test
lea
outsb
clc
jecxz
push
aas
ja
out
fidivl
xor
mov
data16
cs
mov
cltd
addr16
add
inc
in
jecxz
scas
mov
xor
hlt
sub
sarl
pop
jno
pop
fcomi
add
cli
push
mov
mov
pop
aam
movsb
mov
lahf
mov
into
inc
adc
mov
fnstenv
push
dec
out
out
or
push
jle
pop
imul
jne
push
fstpt
pop
fisubl
sarl
call
in
mov
xor
lret
sbb
scas
mov
jge
sub
into
push
mov
mov
push
mov
scas
popa
pop
mov
push
in
adc
jb
in
arpl
cmp
push
xor
push
roll
mov
jmp
xchg
in
lahf
adc
add
cwtl
popf
push
test
xor
and
mov
lea
adc
inc
imul
loope
xchg
mov
xchg
imul
pop
dec
pusha
xchg
sub
ret
jbe
inc
xlat
add
dec
pushl
lret
mov
jb
dec
push
cmp
mov
scas
or
daa
push
ja
stos
out
dec
adc
xor
xchg
mov
push
pop
inc
lock
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
push
xorl
push
test
jmp
mov
mov
jne
jne
sub
mov
mov
pop
jo
mov
mov
clc
stos
push
and
lcall
mov
cmp
adc
in
xor
push
mov
cs
sbb
ds
sbb
cmpsl
xchg
fs
pop
fsub
fcomp
or
loope
jnp
fdivl
sbb
imul
imul
jle
mov
adc
gs
mov
subl
xor
sti
add
mov
ret
lret
xlat
cmp
mov
in
or
jg
movsb
xchg
stos
addr16
adc
mov
push
push
cmpsl
xchg
sahf
repnz
ret
fs
je
ljmp
mov
cs
stos
jns
add
fistpl
ds
mov
pop
idivl
inc
push
pop
xchg
cwtl
cmpsb
sar
or
fdivl
cmp
or
pop
movsl
xlat
loope
in
xchg
sbb
xchg
jne
fwait
push
pop
mov
sti
aad
dec
je
das
jb
cltd
rcll
xchg
leave
inc
jbe
mov
cs
xchg
call
add
aam
hlt
push
push
push
pop
and
pop
pop
and
andl
stc
es
movsl
dec
push
dec
outsl
lcall
into
in
jne
ret
push
mov
test
sub
pop
xor
mov
lret
ret
mov
scas
cmpsb
jnp
push
das
xchg
or
pop
rol
or
cmp
std
pop
test
and
or
push
shrb
cltd
pop
rcll
in
jecxz
dec
or
xchg
jmp
test
mov
ds
mov
cs
data16
dec
jns
ficoms
sbb
push
mov
bnd
adc
loope
lods
mov
in
mov
mov
sub
es
icebp
mov
add
cmpsl
ficomps
xchg
fiadds
push
movsb
popf
lods
out
cmp
scas
mov
arpl
int3
ret
inc
int
fwait
int3
into
inc
ror
dec
clts
push
sub
push
loope
cmpl
cmp
and
xor
mov
add
pushf
pop
jns
mov
xor
xchg
add
pop
test
adc
repnz
jecxz
adc
lea
push
ret
jno
cmpsb
in
ret
faddl
shl
dec
mov
jo
xchg
add
sbb
jo
std
jns
outsb
mov
es
ret
out
mov
xchg
mov
fwait
cmp
xor
iret
mov
imull
scas
test
icebp
popa
imul
je
mov
add
mov
or
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
pushl
push
push
call
mov
dec
mov
jmp
and
imul
mov
add
add
mov
sub
mov
jmp
lret
sbb
inc
loopne
push
mov
rorb
ja
negl
fcoms
data16
mov
clc
enter
adc
fwait
bound
xchg
and
or
sub
mov
dec
push
mov
mov
inc
sbbb
or
sbb
sub
ficoml
push
cltd
or
push
jae
cmpsl
movsb
sbb
bound
jae
or
jno
lods
xor
push
xlat
out
adc
shll
push
mov
jge
stos
jge
pop
mov
mov
insb
mov
mov
ds
adc
ret
xchg
xchg
iret
or
fs
jb
pop
cmp
push
pop
aas
adc
add
inc
cmp
or
sub
lods
fldt
pop
bound
and
cld
and
adc
sahf
lods
mov
jns
scas
popa
sub
adc
scas
inc
pop
xor
push
xchg
fnstenv
stc
push
je
jbe
cltd
test
and
loopne
test
stc
mov
and
jnp
das
stos
ret
clc
nop
ja
nop
cmp
in
or
out
int3
push
fmuls
lret
push
pushl
cmp
pop
stc
outsb
lods
xchg
bound
scas
push
cmp
mov
and
mov
xchg
jp
and
mov
jecxz
imull
mov
jbe
lods
jne
sub
mov
aad
mov
ljmp
shr
inc
loopne
xchg
or
ljmp
ret
popa
out
pop
xchg
xor
adc
add
leave
add
lret
sub
mov
roll
rcll
cmp
repz
mov
dec
les
stos
cmp
add
ss
xchg
push
jb
cmpsl
mov
push
icebp
adc
jmp
mov
add
mov
mov
lds
dec
xchg
leave
pop
jecxz
fnsave
jb
xchg
test
mov
sbb
or
movb
adc
jno
jp
stos
dec
sbb
scas
push
fnstenv
mov
inc
cwtl
push
das
hlt
test
jp
fs
fcomps
add
ret
mov
pusha
inc
imulb
mov
pop
sub
stos
cmpsl
jne
xor
aas
aas
cld
cltd
mov
jae
pop
cwtl
cmp
adc
scas
pusha
sbb
fxch
push
push
roll
mov
pop
push
mov
lea
mov
and
dec
sbb
xor
inc
add
xchg
repz
lea
cmp
outsb
push
dec
das
shlb
lods
scas
mov
into
jne
dec
bound
mov
jmp
nop
inc
mov
sbb
inc
add
add
add
sldt
add
leave
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
sub
xor
jmp
call
jno
popa
push
xchg
arpl
dec
pop
fs
mov
xchg
push
ret
stos
push
or
repz
ret
sbb
or
mov
xor
fdivrl
mov
jns
movsl
and
inc
push
pop
xchg
jp
call
xor
mov
int
clc
adc
inc
in
jecxz
das
jp
aam
in
and
and
addr16
jmp
and
push
lahf
or
cmc
mov
push
and
rcrb
out
sub
sarb
mov
adc
test
lcall
ja
or
dec
out
test
push
dec
pop
addr16
dec
hlt
out
pop
loope
mov
cmpb
cs
add
movsb
pop
pushf
scas
push
pop
aaa
outsl
ja
xchg
xchg
pop
stos
stos
jne
popa
adc
add
push
cmp
sub
push
xchg
cmp
pusha
adc
push
outsb
insb
dec
mov
into
pop
aad
aas
pop
mov
xor
rorl
daa
lret
lock
divb
add
pusha
jecxz
pop
dec
mov
lahf
sti
lret
push
mov
aad
inc
inc
jle
in
mov
int3
push
jp
mov
push
outsl
dec
pop
mov
xchg
sub
fistps
mov
test
jno
or
mov
aam
dec
fwait
mov
push
shl
fimuls
mov
add
clc
int
daa
mov
add
leave
stos
or
pusha
gs
pop
jecxz
or
inc
lcall
dec
jb
gs
loope
xchg
jp
inc
popa
dec
cmp
cmp
pop
jge
jge
jnp
and
fists
loope
pop
and
xor
push
or
jnp
lcall
cltd
das
out
fwait
in
adc
mov
jnp
mov
lahf
push
xchg
adc
test
cmp
movsb
pop
dec
daa
jle
push
scas
or
iret
cmpsb
xor
cmp
sarb
add
repz
aas
or
lcall
incb
sbb
insl
pop
int3
sti
shrb
dec
in
and
xor
jo
dec
loop
pop
add
inc
gs
push
mov
andl
ds
mov
aas
mov
cmp
lret
adc
repnz
push
and
pushf
sahf
jns
outsl
pop
inc
adc
cltd
sti
xchg
pop
in
bound
sbb
lods
sub
inc
das
and
or
fiadds
push
jmp
outsl
adcb
xlat
push
xor
add
xchg
jle
loop
cltd
jge
rcrl
jle
loop
push
push
sbb
bound
add
fstpl
ds
jne
mov
mov
adc
mov
xor
mov
xor
adc
xor
jmp
push
popa
jne
add
cmp
hlt
mov
jo
mov
hlt
adc
xchg
push
cmpsb
mov
sbb
dec
or
stc
jp
imul
sbb
rcr
in
push
and
push
dec
jne
lret
or
mull
jmp
mov
push
hlt
outsl
lods
aam
idivb
mov
outsl
xchg
and
jbe
data16
cmp
cmp
aas
jo
sub
int3
jp
bound
ljmp
mov
add
movsl
lret
mov
xor
into
mov
dec
sbb
int
pop
stos
in
pop
xchg
pextrw
add
shlb
jnp
icebp
ret
mov
or
inc
inc
outsb
std
and
jg
mov
outsb
jecxz
shlb
sub
fisubrs
stc
in
xchg
xorb
scas
sbb
pop
adc
xor
lret
jp
insb
call
lock
mov
add
adc
mov
dec
pop
test
sub
cmpb
jbe
lret
test
iret
incl
push
inc
loope
notb
nop
in
lock
push
add
add
and
das
out
jg
into
sbb
movsl
add
test
jnp
jecxz
mov
lock
ret
sti
leave
lahf
xchg
mov
xlat
mov
jb
pop
xlat
test
repnz
inc
inc
clc
dec
scas
jae
mov
adc
sti
ret
adc
movsb
pop
sarl
fstp
in
stos
mov
adc
pushf
pop
push
je
xchg
xor
stc
outsl
shlb
mov
fnsetpm(287
cmc
mov
lcall
scas
les
pop
pop
or
push
mov
in
add
aaa
xlat
mov
jmp
xchg
dec
xor
addr16
dec
insb
mov
sub
jl
cs
insb
inc
mov
add
mov
mov
loop
enter
fisttpll
mov
push
mov
mov
and
push
push
je
adc
fstp
cmp
and
xchg
imul
data16
imul
push
push
pop
jecxz
fdivs
aas
lds
push
lahf
mov
daa
or
add
adc
sub
lret
cld
imul
or
data16
adc
dec
adc
push
mov
push
inc
mov
test
stos
mov
add
mov
gs
add
mov
inc
xor
mov
std
push
sub
cld
dec
or
movzww
push
jnp
mov
loope
dec
aad
int3
pop
push
out
mov
inc
repz
mov
mov
mov
je
notl
mov
xor
xorl
add
jmp
inc
mov
jp
adcb
mov
adc
outsb
jo
mov
test
mov
lds
mov
movsb
jecxz
jbe
and
mov
xchg
sub
sub
arpl
jbe
inc
loopne
or
sarl
not
std
cmp
cltd
mov
insl
cmp
dec
adc
sub
repz
inc
sahf
imul
pop
sahf
mov
sarl
aad
fmull
adc
rorb
jo
inc
mov
adc
adc
fimuls
mov
rorl
sbb
daa
adc
push
mov
in
incb
shrl
aad
enter
xor
movsb
inc
dec
mov
fiadds
cs
cwtl
insl
cmpsb
insl
push
push
lds
dec
sti
scas
xchg
sub
mov
xor
push
cmp
jbe
cmp
outsl
iret
scas
adc
jecxz
daa
xor
mov
inc
lret
shll
loop
and
mov
mov
dec
sub
and
xchg
lahf
scas
fs
mov
insl
pop
outsb
shll
fidivrl
adc
inc
pusha
inc
lret
bnd
arpl
leave
lcall
dec
aaa
lods
sbb
fisubrs
call
sbb
xchg
stc
mov
and
fildl
cltd
filds
mov
shlb
inc
jmp
inc
jg
in
mov
sbb
sti
push
ret
fdivrs
push
movsl
cmp
xchg
xor
ret
push
andl
mov
add
notb
in
fs
push
jae
int3
fwait
cltd
inc
lahf
shl
jne
shrb
ret
es
loopne
adc
mov
xchg
notl
sub
dec
pop
dec
rep
xor
ljmp
mov
mov
lret
iret
std
mov
loope
outsb
fiadds
jecxz
push
mov
out
iret
jp
in
push
add
lds
mov
jne
pop
daa
loop
movzbl
mov
xchg
enter
andb
sti
pop
push
pop
out
pop
sti
push
cmp
out
jnp
push
xor
cmp
and
mov
mov
xor
sub
pop
adc
in
pop
dec
xchg
test
aas
mov
fsubp
mov
jns
sbb
cwtl
aas
xor
and
xor
push
sarl
popf
and
adcl
and
dec
dec
pop
mov
clc
into
test
daa
cmp
jne
pushl
jmp
and
lods
shrb
in
aad
bound
jle
jo
jmp
pop
fnstcw
fs
addr16
xchg
cmpsb
ja
jmp
shrl
lret
pop
outsb
or
fbstp
jae
dec
dec
pop
mov
xorl
mov
and
or
dec
pop
nop
push
xor
sbb
lret
out
mov
in
mov
cld
gs
fwait
popa
cmp
add
shlb
sti
shrb
test
jp
gs
lahf
pop
movsl
cmc
mov
cmpsl
cmp
jno
add
push
xor
adc
xchg
add
mov
and
rclb
jg
jbe
scas
div
lock
sti
ret
mov
add
in
pop
push
lcall
jp
inc
mov
sub
xchg
mov
push
mov
aaa
xor
sti
jne
shl
cmp
enter
push
cli
adc
into
mov
cs
push
mov
rcr
sbb
xlat
int
scas
je
into
mov
movsb
aam
jle
sub
test
pop
jno
pop
popa
stos
out
mov
lret
push
dec
or
xchg
mov
adc
out
cmp
mov
popf
xchg
enter
or
out
xor
leave
imul
xor
fistpl
ror
test
icebp
adc
or
cld
outsb
cmc
test
mov
aas
xlat
dec
sub
ljmp
xor
mov
lods
mov
sbb
xor
or
dec
rclb
and
addb
pop
mov
mov
pop
xchg
in
int3
in
jbe
sub
mov
dec
xlat
add
mov
mov
testl
mov
push
xchg
into
stc
push
xor
iret
enter
fidivl
mov
mov
jp
cmp
test
mov
jae
loop
inc
loop
les
mov
lcall
movsb
shlb
dec
mov
adc
ficompl
xor
mov
daa
adc
mov
inc
out
jl
fsubrl
xor
outsb
mov
sub
dec
add
jo
sar
adc
inc
mov
pop
loop
movsl
loopne
div
mov
test
out
mov
push
jno
cmp
push
adc
xchg
or
cmpsb
ud1
pop
or
in
sbb
loop
xor
out
pop
cmp
fsubr
push
aam
divps
pop
or
jmp
pop
insl
and
xor
insl
jp
or
and
les
jo
mov
outsb
mov
nop
cli
std
pop
jg
js
add
cmp
sbb
jge
lret
int3
ret
mov
loopne
inc
dec
rcrb
mov
imul
into
xor
cmp
mov
cld
lods
cmp
lods
adcb
stos
mov
gs
cmp
jmp
pop
nop
mov
push
std
xchg
cmp
lods
pop
xchg
ds
loopne
push
or
jmp
loopne
cmp
mov
sbb
aas
rorb
mov
cwtl
lods
ficomps
call
repz
jns
mov
inc
cli
adc
xchg
mov
shll
pusha
das
sub
pop
sahf
aas
aas
push
pop
push
xchg
sbb
repz
sub
xchg
ret
cld
adc
out
jp
mov
jmp
cmp
adc
dec
jp
inc
xchg
mov
add
jg
jecxz
add
mov
fsubl
loope
push
addr16
inc
and
mov
cmp
rcll
dec
or
fidivs
shlb
sbb
out
adc
sarl
cmp
sbb
popa
or
sahf
cmc
test
cmc
icebp
push
test
dec
fcompl
push
inc
add
sub
jmp
sbb
sub
fcoml
mov
add
int
popa
fucomp
icebp
mull
mov
pop
in
cli
frstor
insl
fldt
ret
push
push
stos
lock
or
lahf
sahf
cmp
cmpsl
clc
je
pop
movsb
pop
cmp
fidivs
push
shrb
fwait
inc
in
and
mov
pop
mov
inc
out
xor
jno
cmp
jmp
lds
hlt
or
icebp
in
cmp
mov
inc
lcall
pushf
enter
mov
push
jp
in
mov
fs
adc
adc
imul
adc
cli
scas
mov
gs
xchg
js
into
dec
pusha
cmpsb
pusha
jle
mov
ljmp
test
xchg
and
ljmp
test
in
sub
xor
push
adc
hlt
mov
pop
enter
rorb
lods
sub
inc
int3
repz
and
mov
subl
popf
jne
mov
dec
inc
hlt
fbld
inc
inc
out
lret
loopne
test
and
stos
xor
popa
pusha
xlat
outsb
clc
pop
call
stos
ret
mov
xor
test
insl
mov
or
mov
mov
test
mov
and
mov
xor
mov
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
cmp
movl
je
pushl
decl
pushl
xorl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
or
mov
adcl
xor
decl
add
movl
cmp
je
not
mov
mov
mov
xorl
jmp
lods
mov
loopne
outsb
push
repz
scas
fwait
mov
jo
mov
popa
ret
movsb
mov
cmp
xchg
bound
sbb
adc
shlb
js
dec
aas
cmp
jbe
repnz
out
pop
cmpb
mov
lcall
mov
sbb
test
push
mov
and
xchg
jb
xlat
xlat
roll
rorb
sti
insl
lods
jp
xor
hlt
outsl
decb
shlb
ljmp
or
sti
and
xchg
pop
mov
and
pop
loopne,pt
test
repnz
shlb
nop
or
xchg
jmp
xchg
movsl
mov
sub
insb
push
mov
jmp
shlb
xlat
lock
movsb
sub
out
xchg
cld
adc
mov
das
add
or
jne
xchg
ljmp
lret
adc
aad
cmp
shll
in
inc
add
dec
lea
scas
or
stos
push
scas
mov
dec
cmp
cli
cs
mov
test
mov
int
pushf
int3
push
push
jae
push
cli
adc
push
das
sahf
insb
xchg
mov
jg
int
and
cmp
and
es
test
in
ror
mov
and
or
cltd
jns
aaa
lods
xchg
push
sbb
clc
lcall
jp
and
idiv
pusha
xchg
mov
cmp
mov
data16
or
test
pop
adc
in
inc
add
mov
add
cld
stos
cmp
fimull
push
push
loop
popf
test
cmpsb
jne
adc
jns
dec
xchg
or
or
sti
mov
lds
sbbb
add
mov
rcl
ret
sub
sti
enter
xor
xor
and
mov
out
ret
jbe
jae
mull
push
sbb
inc
xor
mov
and
pop
sbb
sbb
divl
lahf
adc
andb
mov
cltd
sbb
mov
push
arpl
pop
mov
loop
ljmp
mov
lahf
ljmp
insl
pop
ret
inc
mov
xor
xor
xchg
or
sub
pop
mov
add
movsb
jle
mov
jecxz,pt
jns
je
fistps
xor
stos
ja
xor
mov
push
sbb
fcomps
push
mov
mov
test
xor
push
sub
xor
sbb
in
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
orl
add
mov
or
mov
mov
sbb
mov
addl
add
add
mov
mov
mov
add
neg
xor
and
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
add
lea
mov
push
jmp
add
xor
inc
cld
xchg
loop
jbe
mov
jle
jo
push
sub
ficomps
pusha
dec
add
jle
insl
adc
adcl
or
jle
sbbb
mov
sub
xorl
push
inc
aaa
mov
dec
mov
push
lods
inc
lret
mov
push
mov
cmpsl
pop
lds
js
fidivrs
enter
pusha
popa
jb
cmp
aaa
loope
jp
outsb
cli
fs
rcl
lock
cld
mov
test
jge
adc
jmp
stos
std
mov
adc
push
jp
pop
xchg
int3
jns
and
sub
ret
cmpsl
icebp
andb
mov
lcall
aas
hlt
cmp
rcrl
add
dec
in
loop
mov
stc
xor
adc
ljmp
push
jecxz
and
lcall
add
repnz
mul
or
fmul
and
jno
push
jne
daa
aam
sub
js
loope
cmp
inc
out
adc
out
repz
das
fists
hlt
ja
repnz
call
xlat
pop
fwait
cld
popa
add
add
in
xchg
pop
ret
sbb
daa
inc
or
enter
sbb
jle
mov
lods
pop
jns
pop
or
insl
mov
push
loopne
or
loopne
mov
pop
rcll
pop
enter
stos
add
sub
mov
int3
push
pop
xchg
pop
mov
out
fnstenv
cmpsl
xchg
inc
scas
adc
leave
dec
adc
imul
pop
movsl
add
loopne
push
lea
cmpsb
and
jmp
jno
mov
int
ds
xchg
cmp
flds
xor
inc
inc
out
sbb
dec
cmp
mov
sarb
adc
dec
pop
pop
mov
dec
sbb
repnz
mov
clc
inc
call
dec
cli
lea
mov
sti
ror
push
xchg
in
inc
mov
or
cmp
lods
mov
int
lea
push
out
subl
inc
in
and
test
jmp
xchg
sahf
push
and
rcll
dec
dec
pop
fistl
out
icebp
sahf
push
cmp
dec
mov
movsl
insl
scas
aad
cmpsb
lret
pop
add
sbb
or
mov
popa
dec
shrb
adc
ljmp
inc
sbb
xchg
rolb
add
bound
inc
mov
outsb
xorl
xchg
add
sbb
xor
loope
dec
js
clc
fwait
jmp
adc
and
sar
jne
call
mov
jmp
ret
sbb
sub
jno
pop
or
inc
fcmove
jo
jo
jle
jo
jmp
fucomp
push
or
int
push
sbb
sarl
sub
sbb
xchg
dec
sahf
cmp
scas
mov
inc
sbb
mov
popf
data16
sub
gs
mov
faddl
mov
adc
adc
sub
jle
pop
lahf
xchg
rcrb
jno
or
test
faddp
insb
mov
mov
adc
cmpsl
jecxz
push
push
movsb
mov
mov
mov
and
or
sub
or
std
inc
xchg
ret
insb
jp
xor
push
push
popl
stc
jg
mov
add
cmp
ljmp
test
push
scas
pop
rcrl
std
cmpsl
mov
cmp
jmp
add
pop
pop
add
inc
leave
out
cltd
mov
and
pop
lods
cmp
testl
popf
sbb
dec
jmp
and
or
into
bound
negb
lcall
mov
mov
mov
cmc
sbb
out
incb
xlat
mulb
inc
or
rorl
cld
divb
loope
lock
push
inc
fs
or
pop
cld
xor
fcomip
in
jmp
je
adc
dec
cmc
pop
xor
sbb
popf
lods
sub
lahf
dec
shll
cld
cli
mov
shl
imul
cmp
outsb
pop
jnp
jecxz
rcll
push
daa
stos
dec
jae
jne
pop
xchg
es
push
aam
xor
mov
push
jae
or
scas
sbb
icebp
pop
mov
sahf
adc
aas
aam
iret
scas
inc
push
mov
loop
cltd
lds
mov
mov
mov
cmp
adc
xor
and
cmpsl
dec
adc
dec
push
leave
push
pop
fucom
stos
ret
out
lret
or
in
repnz
pop
push
dec
xchg
sbb
jle
jbe
call
ss
push
shrb
std
or
aaa
loopne
lahf
adc
loope
mov
adc
jne
aas
cmp
mov
lret
out
bound
jge
cld
fstp
cmp
cld
dec
into
daa
mov
mov
push
in
mov
repz
inc
std
or
outsb
pop
sahf
sarb
push
int3
aaa
add
sbb
in
mov
fs
cmc
xor
and
mov
or
daa
test
xor
pusha
pop
daa
inc
sbb
push
push
sahf
in
outsl
dec
sub
mov
sbb
xor
mov
xor
jmp
add
mov
jb
jge
jge
dec
cmp
jo
jle
jo
ret
outsl
xor
jp
adc
push
gs
jp
ret
mov
scas
icebp
dec
stos
jo
lret
dec
xor
and
push
fbld
cs
jae
jl
ljmp
ljmp
cmp
pushf
pop
in
pop
shrb
orb
adc
lock
lret
push
push
rcrb
jno
aam
jno
mov
add
xchg
out
mov
add
pusha
xchg
cmp
mov
push
push
sbbl
mov
mov
sub
iret
out
sahf
fnstenv
pusha
cmc
mov
xchg
mov
fs
push
cwtl
stos
loop
cli
clc
sti
dec
clc
xlat
leave
push
cmp
scas
sub
pop
lahf
dec
jne
inc
repnz
ret
int3
pop
push
mov
cmpsb
push
les
mov
lret
mov
imul
jp
outsl
ret
iret
push
leave
int
aad
add
test
iret
dec
pop
cs
clc
in
cs
and
andl
sbb
sbb
les
in
cs
call
dec
inc
mov
cli
aad
sbb
and
lods
ret
fdivrs
sbb
jmp
jns
xchg
mov
mov
pop
out
out
xchg
cmpsl
cmpsl
pusha
xor
rol
sub
sbb
mov
push
push
mov
jb
fnstcw
std
in
cmpsb
sbb
add
in
xchg
test
xchg
sbbb
rorl
cmp
fisttps
cmp
jns
push
adc
sub
shlb
or
movb
and
mov
dec
mov
add
pop
jbe
test
scas
jae
pop
lcall
push
mov
mov
xchg
mov
inc
jbe,pn
push
jae
xor
push
dec
lods
cmp
xor
jns
jns
sub
cmp
imul
mov
jmp
inc
mulb
lods
xor
xchg
in
jmp
pop
xchg
movsl
mov
mov
mov
popf
popf
fs
dec
dec
test
nop
jp
add
lea
lahf
repz
fmul
test
loope
lahf
sahf
jo
movsb
sti
leave
cmc
cmpsl
mov
push
cmp
int
inc
xchg
scas
mov
arpl
xor
mov
repnz
mov
inc
cmp
aaa
ja
push
push
xchg
fldcw
add
arpl
stc
sub
cmp
jecxz
fistpll
xorl
sbb
push
pop
arpl
popf
clc
mov
ret
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
icebp
sbb
imul
outsl
stc
fistpll
jg
mov
push
cmpb
sub
das
pop
movsl
xchg
xor
shrl
lock
iret
or
js
pop
cli
test
xor
addr16
mov
mov
push
cwtl
aam
dec
add
leave
jp
fwait
jne
leave
lea
pop
ljmp
xor
mov
fstp
sbb
shll
mov
add
mov
sub
push
jl
aad
mov
mov
mov
push
pop
jge
pop
jp
test
inc
jg
into
cmp
mov
mov
mov
aaa
adc
push
mov
or
mov
daa
cmp
fstl
push
dec
pop
push
mov
fisttps
xlat
cmp
cmp
out
nop
and
shl
sub
pop
stos
sub
inc
and
dec
addr16
adcl
les
adc
mov
scas
push
jecxz
mov
fldenv
and
jns
repnz
movsl
and
sbb
in
ret
adc
xchg
add
add
add
stos
leave
push
cmp
rcrl
ret
xchg
pop
fnstcw
xor
cmp
jp
pop
push
xor
pop
bound
aam
xor
push
jae
jbe
testb
xor
adc
inc
arpl
loop
push
shrl
and
inc
call
loop
into
int3
add
and
sub
leave
xor
leave
cmp
jb
sub
xchg
or
std
mov
mov
in
push
in
out
ljmp
mov
mov
mov
icebp
cli
add
aad
pop
push
out
call
inc
pop
fldenv
les
adc
sub
push
inc
mov
xchg
mov
sbb
or
ret
sbb
push
stos
add
mov
in
nop
cld
push
sbb
lea
mov
or
dec
std
jne
pop
mov
pusha
inc
hlt
lahf
jno
imul
dec
rcrl
or
stos
in
leave
stos
js
out
rol
out
repz
pop
jle
hlt
xchg
inc
mov
inc
inc
xchg
iret
and
dec
sub
sbb
movsb
push
xor
std
xor
sahf
in
ja
aad
into
daa
shr
mov
je
jl
testb
or
cmp
xor
packuswb
arpl
push
sarl
xor
mov
stc
push
dec
sub
push
mov
fisubs
call
loop
jo
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
jmp
aas
fidivrl
sbb
bound
sub
or
andb
jo
test
rorl
mov
mov
stos
fistpll
lock
out
push
mov
sub
lods
pop
push
mov
ret
push
fists
xor
sub
mov
cmp
std
repnz
dec
dec
or
test
aas
mov
loop
xor
ljmp
mov
int
adc
cmp
xor
add
test
enter
or
dec
outsb
pop
iret
pusha
mov
sahf
sarb
es
and
sbb
and
adc
xchg
or
cmpsl
mov
push
xor
lea
xlat
mov
cmp
and
sub
pop
push
scas
push
adc
mov
out
in
xchg
jnp
orb
sub
mov
cld
pusha
xchg
fidivrl
and
sub
into
jle
mov
loopne
xor
loop
test
andb
incb
int
js
mov
xchg
fwait
loope
jb
xorl
popf
cmp
dec
andl
sbb
xchg
adc
repnz
push
cmp
adcl
das
test
mov
pop
jecxz
jge
das
cmp
cmpsb
je
movsl
push
pop
jmp
out
pusha
call
push
xchg
ja
inc
shlb
mov
mov
stos
jp
sbb
daa
sar
push
cmp
jno
lds
out
xchg
add
les
mov
cmc
push
jge
jge
mov
in
aam
cmpsb
push
adc
mov
mov
mov
and
sub
cmp
pop
out
js
shl
iret
add
nop
mov
mov
pop
sbbl
xor
imul
and
jecxz
lea
pop
ljmp
les
stos
pusha
xchg
push
test
pushf
aas
xchg
jbe
inc
pusha
push
push
cmp
jo
pushf
push
xlat
xchg
and
dec
mov
imul
std
insl
pop
cltd
ret
cs
adc
cltd
stos
ds
das
adc
rclb
outsl
dec
cmc
pop
fs
shrl
loopne
mov
fcoms
sbb
icebp
pop
mov
and
add
in
out
sbb
xchg
pop
xchg
xchg
pop
pop
xor
mov
xchg
mov
jae
pop
sub
dec
and
test
imul
sbb
xor
or
cmp
pop
add
pop
dec
xchg
lods
cmc
into
push
pop
or
imul
mov
loopne
fmull
or
xor
mov
jmp
mov
jne
pop
push
fnstenv
data16
add
jo
or
mov
int
xchg
add
adc
sbb
fstl
push
outsb
dec
div
add
sbb
cmp
lods
sub
sbb
xchg
movsb
mov
stc
jmp
loopne
cmp
mov
mov
movsl
dec
push
mov
and
in
add
jmp
das
lret
out
fiadds
and
mov
xor
in
out
mov
dec
mov
jge
rol
loope
mov
sbb
bound
test
dec
inc
pop
out
popa
push
enter
out
cmpsl
cmp
in
sub
dec
fcmovbe
je
pop
jecxz
iret
lahf
int
es
sub
cli
rcr
xorl
loop
mov
iret
pushf
movsb
inc
dec
push
cmp
push
xchg
jge
jecxz
scas
and
sahf
inc
mov
sbb
mov
sahf
in
outsl
xor
sti
add
adc
ds
mov
lods
loop
mov
sub
andl
xlat
xor
xchg
in
ret
adc
out
mov
cltd
lahf
fs
rcrl
loope
test
mov
jae
dec
ljmp
scas
jbe
adc
mov
inc
jno
addr16
sub
jnp
mov
les
js
sub
and
ljmp
inc
movsb
mov
or
sbb
jecxz
dec
sti
mov
scas
and
push
and
mov
mov
test
add
cmp
repz
xor
cs
cmp
xchg
insb
push
nop
in
xchg
cmp
insl
sub
xor
rcrb
hlt
push
sbb
pop
insl
pop
cs
int
push
cli
mov
test
repz
xor
sti
xor
sub
test
cmp
mov
negl
shl
ljmp
ss
jbe
xchg
xor
outsl
or
jae
push
lods
lcall
mov
out
xor
rclb
cs
xchg
std
xor
cmp
mov
sbb
mov
mov
pop
das
mov
mov
push
pop
les
jecxz
push
inc
ds
adc
inc
inc
dec
jnp
jp,pn
ficomps
pop
cmc
ljmp
icebp
out
jmp
addr16
ja
mov
xor
imul
incl
push
jb
mov
lret
int
fildll
and
cmpsb
lcall
dec
pop
subb
dec
out
iret
call
imul
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
sub
sub
xchg
push
mov
xchg
scas
inc
add
mov
dec
xchg
sbb
lcall
pop
pop
stc
fistps
mov
xor
fcompl
and
cmpsb
outsb
leave
push
adc
adc
aaa
test
out
sub
or
dec
nop
push
es
fdivl
mov
nop
mov
loopne
mov
mov
xlat
insb
int3
xorb
mov
imul
rclb
into
or
and
lret
pushf
mov
pushf
cmc
xor
and
jge
add
mov
aaa
mull
and
xor
aas
lret
xorl
test
xchg
mov
xchg
fdivrs
clc
pop
adc
cwtl
adc
dec
lret
roll
inc
lcall
fs
sub
les
pushf
pushf
pop
adcl
cltd
imul
int
fwait
or
dec
sub
dec
mov
mov
fsubrl
or
outsb
mov
xchg
ret
insl
popa
push
icebp
out
jns
and
in
sbb
xchg
addr16
pop
imul
scas
xchg
xchg
sbb
psubusb
pop
mov
cmp
hlt
hlt
sbb
adc
push
rcll
mov
mov
sub
fists
cmp
clc
test
add
adc
sbb
sub
jne
outsl
rolb
stc
aad
sub
fnsave
imul
cmp
scas
xchg
cmpsl
push
je
out
js
inc
push
dec
cmp
dec
mov
push
int3
jp
outsb
push
dec
cmpsl
scas
jae
insl
jne
and
jb
push
xor
cmp
pop
das
stos
inc
cmp
xlat
mov
or
cmpsb
xchg
push
inc
dec
pusha
jecxz
movsb
pop
lds
push
ret
adc
push
lahf
scas
mov
inc
xchg
push
add
js
sbb
rol
insl
xor
mov
jg
and
add
sub
cmp
lea
mov
mov
mov
xor
and
adc
jge
stos
stos
pusha
shlb
cmp
push
bswap
divb
mov
sbb
loopne
repz
pop
ret
je
daa
pushf
jne
subl
sbb
nop
add
or
insb
fwait
ret
out
sbb
mov
lods
push
xchg
notb
outsb
pop
add
add
xchg
sarl
out
daa
cli
or
decl
mov
test
sbb
andl
add
sbb
cld
lea
icebp
inc
in
aam
push
fcoml
sub
add
div
mov
jmp
adc
inc
rolb
xchg
int
rcll
test
movq
jle
jo
dec
jne
push
outsl
pop
or
popa
cmp
and
insl
xchg
xor
stos
sub
jp
and
jbe
fstps
shll
repnz
cmpsl
inc
xchg
sub
test
xchg
pop
xchg
dec
lock
insl
inc
cmp
mulb
fs
cmc
or
fsubrs
sub
int3
push
je
movsl
insb
les
dec
loope
lods
dec
inc
jmp
adc
jb
inc
dec
inc
sbbl
movsb
repz
mov
roll
mov
cmp
push
test
jb
sahf
outsb
and
and
xor
mov
and
adc
xor
fwait
dec
repnz
inc
fsubl
jge
cmc
sub
fstpt
xchg
inc
adc
jnp
lret
movsw
and
dec
xor
pop
or
push
es
sub
aad
jle
and
xlat
fldcw
sub
push
or
sbb
mov
fidivrs
imul
and
scas
and
sub
push
mov
popa
int
sub
stos
or
repnz
clc
and
pushf
out
addr16
outsl
jmp
or
push
in
xchg
sbb
push
aam
ret
hlt
sub
cld
cmp
jmp
mov
gs
sbb
mov
lahf
mov
rol
push
mov
adc
mov
mov
add
pop
sub
out
hlt
out
inc
mov
adc
push
xchg
mov
addr16
andb
sbb
hlt
inc
jbe
imul
cld
push
lods
stc
shrb
and
mov
repnz
movsb
push
in
or
sub
sub
mov
lret
mov
fstps
imul
push
int
data16
iret
sub
cmpsl
loop
push
mov
or
mov
cmpsb
mov
jl
cli
clc
test
sub
aas
mov
push
and
mov
es
mov
repz
in
cmpsl
add
shrb
je
adc
int
pop
sub
call
adc
fimull
daa
mov
sub
cmp
xchg
xlat
jle
sub
pop
adcb
lds
fldcw
jns
aam
arpl
mov
sub
sub
in
sbb
jle
pop
daa
mov
adc
or
and
ret
jmp
pop
cmpsl
lcall
and
xlat
insb
and
xchg
jge
add
add
shrl
xchg
test
adc
lea
jmp
sub
mov
popa
pop
xchg
aas
aad
aaa
je
or
jo
scas
out
dec
mov
call
push
push
dec
enter
or
insb
xorl
lret
dec
call
pop
mov
sahf
arpl
pop
push
and
repnz
gs
into
fisubl
fdivrs
sar
lahf
push
push
dec
mov
fwait
call
clc
ja
mov
ja
out
scas
xor
stc
hlt
jle
stos
int
jmp
pop
scas
mov
jl
mov
xor
cmp
popf
or
test
cli
dec
leave
ss
test
fildll
mov
adc
adc
jns
popa
cmpsb
paddw
pop
lcall
dec
outsl
push
mov
sub
aad
adc
add
pop
jmp
mov
ss
adc
call
fstl
dec
cmc
in
dec
inc
mov
inc
aad
aaa
cmp
ja
hlt
movsb
adc
cmpsb
adc
sub
ret
sub
add
lods
jmp
or
or
stc
inc
mov
int
insb
sub
add
adc
shrl
sbb
xchg
xchg
adc
into
cmp
sub
fnstenv
dec
fisttps
loop
push
addr16
xor
sahf
in
and
push
dec
xchg
cmpsl
inc
add
add
stc
rcrb
push
fmull
or
popf
pop
into
pop
dec
je
imul
stos
cltd
xor
add
gs
xor
addr16
add
addr16
sbb
push
dec
or
xchg
jl
lahf
dec
jmp
adc
mov
push
jmp
adc
stc
sbb
and
dec
iret
mov
popa
jbe
test
mov
outsb
adc
inc
dec
rorl
adcb
cmpsb
cwtl
sub
and
or
add
loope
mov
inc
sbb
in
out
popf
xor
gs
mov
adc
mov
arpl
or
mov
mov
sti
pushf
push
test
aas
push
pop
xchg
iret
cmpsb
ljmp
cmp
ljmp
addr16
std
in
ss
push
xor
rclb
ret
inc
mov
cmp
ja
repnz
dec
push
jae
pop
rolb
ret
mov
inc
cld
xlat
xchg
std
mov
mov
cli
jge,pt
mov
fwait
sahf
and
test
out
or
mov
fsubp
xchg
sahf
xor
into
pop
jp
dec
movsb
cmp
xchg
aas
out
jbe
cmp
and
mov
mov
mov
mov
jmp
dec
fistpll
arpl
pop
jp
and
sub
jg
mov
adc
lods
mov
pop
sbb
mov
xchg
jnp
cwtl
ret
sbb
xor
repnz
in
mov
xchg
mov
pop
shrb
int
mov
xchg
repz
hlt
sbbl
in
in
aas
xchg
cmp
repnz
loope
fsubrl
subl
inc
gs
xchg
sti
popf
mov
adc
mov
dec
arpl
sub
mov
cmp
in
adc
push
push
sbb
jl
sarl
mov
cmp
push
mov
cmp
inc
notl
pusha
push
jle
dec
rcrl
or
mov
xlat
dec
cmp
sub
fs
cmp
fs
mov
mov
jnp
push
inc
jg
ljmp
add
adc
insb
pop
cmp
pop
ret
and
iret
and
in
nop
pop
xor
sbb
loopne
dec
mov
test
xchg
jb
mov
addb
jg
clc
xchg
push
jnp
hlt
loope
pop
pushl
add
stos
push
xor
mov
ja
cli
lods
jae
or
push
mov
push
adc
rol
sbb
inc
fsubl
imul
cmc
popf
insb
push
sub
idiv
shll
xchg
adc
or
cmp
pop
jle
sbb
pop
testb
push
xchg
stos
pop
or
pop
mov
mov
dec
mov
mov
xchg
lock
fisubs
mov
push
stos
push
pop
mov
inc
ds
mov
mov
push
pop
loopne
sbb
mov
add
mov
out
sub
xor
mov
adc
imul
mov
int3
ret
loop
mov
xor
xchg
mov
adc
fldl
and
fistl
xchg
imul
ficompl
dec
aas
out
lret
imulb
push
add
mov
movsl
dec
in
or
push
inc
and
cmp
roll
mov
scas
adc
gs
nop
jnp
out
xchg
xchg
push
fidivs
or
pop
jl
mov
sub
popa
xor
mov
movsl
stos
aas
and
jmp
les
adc
popa
pop
mov
push
xchg
or
gs
sahf
and
sti
mov
cmpsl
xor
adc
and
mov
jmp
push
hlt
cli
ja
push
add
hlt
test
pop
mov
jmp
dec
xlat
lret
inc
std
pop
jge
in
int
mov
mov
rorl
add
call
roll
imul
mov
xor
jmp
adc
iret
cmpsl
aad
jae
jl
jge,pn
bound
jo
jle
jo
push
js
mov
mov
add
out
and
cmpsl
insl
mov
jae
gs
pushl
fildll
fisttpl
lds
cmpsb
sbb
jg
call
cmp
mov
or
bound
ss
cltd
cld
in
mov
or
ret
mov
push
inc
sub
jmp
push
neg
iret
les
gs
xor
sub
imul
pop
hlt
lock
fwait
cmp
lods
inc
test
xchg
mov
scas
and
or
inc
aam
adc
xchg
in
insl
stos
push
aam
sti
ret
push
pop
shlb
das
jo
and
call
insb
fisubs
sub
xchg
mov
pushf
pusha
loopne
nop
or
mov
into
jecxz
or
adc
fstl
in
pop
inc
and
aam
push
in
push
in
shll
cmpsl
dec
or
in
pop
xchg
or
mov
mov
xchg
pusha
sbb
jp
mov
test
js
fwait
nop
es
xchg
mov
jmp
inc
addl
sub
mov
cmp
lret
and
cli
add
push
je
repnz
cmp
insb
enter
out
and
cmpsb
orl
test
jne
test
push
xchg
pop
mov
ljmp
js
pop
inc
dec
outsl
ficompl
into
or
inc
inc
xchg
loop
jno
jae
cld
mov
sub
sbb
aad
cmp
mov
rol
mov
mov
dec
out
mov
rcrl
cli
jle
add
ds
push
test
mov
inc
sbb
sbb
push
test
jnp
add
mov
xor
cmc
lret
scas
std
les
vcmpneq_oqsd
pop
repz
rclb
int
lret
pop
cli
xor
mov
add
test
outsb
xchg
cmc
sbb
pop
cmp
hlt
mov
outsl
adc
xchg
and
repnz
clc
xchg
ds
lods
cwtl
pushf
mov
decb
inc
add
jecxz
mov
orb
or
mov
xchg
pushf
inc
inc
imul
shlb
aaa
addr16
fcmovnb
pop
lahf
xchg
popf
js
rolb
icebp
sahf
dec
insb
xchg
or
in
jns
dec
xlat
sbb
les
cli
mov
sub
cld
pop
xchg
mov
insb
mov
je
fcmove
addb
sub
shl
push
cwtl
hlt
xor
cmc
int
dec
or
xor
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
jmp
or
shll
jno
jmp
lds
aas
fstl
adc
jo
jle
jo
mov
mov
or
in
mov
daa
push
cwtl
stc
insl
lock
cltd
add
or
or
notl
arpl
or
std
and
pop
xlat
inc
scas
shlb
dec
or
mov
incb
mov
add
test
add
sub
aaa
insl
sbb
xchg
ret
push
inc
mov
fs
adc
test
or
xchg
fwait
aam
cmp
jmp
sbb
pop
nop
dec
andb
imul
xor
xchg
rcrl
inc
movsb
push
rclb
push
push
mov
cmp
inc
setb
insl
sbb
cmp
jns
xor
clc
cld
testl
cs
push
mov
push
add
lcall
pop
push
das
push
lcall
cmpsb
data16
sbb
mov
into
repnz
imul
and
int
pop
xchg
dec
mov
inc
jg
movl
rol
sub
cmp
das
push
pusha
mov
xchg
repnz
pop
cwtl
aad
insl
mov
pop
rcl
push
sub
movsb
mov
add
jo
out
xchg
mov
cli
mov
inc
push
jge
insb
xor
sub
rcrl
ja
add
xchg
imul
push
sub
fmulp
jmp
add
mov
insl
aad
mov
add
movsb
jmp
mov
and
cld
pop
icebp
filds
scas
lcall
adc
push
adc
and
pop
lods
out
mov
fisubs
test
adc
jg
dec
ds
inc
insl
add
push
mov
and
ret
xor
pop
and
mov
lods
lgs
outsl
cld
inc
inc
sub
pop
stos
adc
and
sahf
push
push
out
inc
adc
xor
xchg
data16
das
test
pop
cmpsb
iret
jnp
mov
jo
pop
fldenv
out
sahf
add
mov
cmpl
int
adc
add
cmp
hlt
ds
out
xchg
or
test
and
idivb
pop
pop
lea
test
out
repz
xor
movb
in
ret
das
fldt
lods
imul
stc
ret
aam
cltd
sti
pop
inc
push
lods
inc
out
addr16
dec
mov
mov
fisttps
sahf
push
push
pop
cmp
push
test
and
sub
call
sub
mov
psubsb
scas
out
sub
ret
xchg
push
pop
push
pop
inc
xchg
sub
jmp
cmc
icebp
lret
mov
test
jnp
cli
lds
pop
adc
mov
add
icebp
nop
or
add
fimuls
push
pusha
jb
out
rorl
adc
mov
arpl
mov
sub
cld
mov
test
je
cli
addr16
adc
scas
sub
icebp
imul
jg
fldenv
les
jbe
sub
jns
cmpsl
or
xchg
lds
test
jg
gs
jmp
fcoms
mov
jnp
dec
sub
dec
call
std
mov
wrmsr
lret
adcl
add
pop
into
packuswb
jl
xchg
and
leave
js
pop
inc
fdiv
pop
pop
popf
push
mov
insb
and
add
jae
inc
movsl
sbb
and
test
repnz
lret
or
xor
in
std
sbb
andb
or
hlt
andb
daa
mov
out
fistl
mov
push
std
push
jg
ficomps
insl
add
pop
push
or
sub
adc
jbe
push
stc
xor
dec
jno
cwtl
in
fst
xchg
jnp
xchg
nop
adc
lcall
lea
inc
push
inc
insl
add
outsb
mov
nop
fisttps
leave
sub
mov
movl
or
or
adc
stc
xlat
add
mov
fs
jge
pop
sti
cmpsb
or
daa
call
push
pop
push
ss
daa
push
bound
and
in
dec
shr
fcmove
jo
hlt
cmp
jns
pop
dec
jmp
stc
mov
adc
mov
sub
cmp
push
and
lahf
lds
xchg
rorb
scas
cmp
lahf
cmp
push
inc
mov
dec
test
jg
mov
pusha
out
mov
orb
cmp
inc
add
scas
lea
sub
daa
push
ret
xchg
lret
and
mov
inc
shl
test
push
pop
sub
xchg
push
pop
push
aad
sub
mov
push
faddl
sub
call
cmp
inc
loop
mov
movsl
cmp
cmp
sbb
loopne
fsubr
dec
popf
mov
and
sbb
fcoms
mov
cltd
call
mov
jbe
pop
roll
lcall
mov
sahf
rorl
rorb
test
inc
pusha
insl
in
sahf
mov
sbb
ljmp
pop
ja
xchg
cmp
scas
lahf
xchg
jmp
cmc
std
fs
jno
mov
hlt
bound
mov
xor
jecxz
mov
fldenv
add
in
adc
push
dec
cmp
cmp
pop
mov
scas
addl
sbb
ljmp
nop
and
lret
cltd
stos
inc
push
push
fimuls
inc
mov
data16
repnz
push
clc
sahf
sbb
mov
sti
outsl
sbbl
test
insb
sbb
pop
and
in
into
jl
outsl
adc
in
push
inc
adc
cmp
mov
pop
mov
aaa
mov
enter
push
mov
push
and
mov
xchg
jo
cmp
push
inc
jo
xlat
iret
mov
mov
or
mov
bound
lret
sbb
insb
cmp
in
addr16
inc
loopne
cmp
imul
mov
sahf
addr16
insl
inc
fists
adc
hlt
clc
jae
inc
imul
sbb
ret
add
inc
mov
pop
and
mov
push
mov
mov
jle
cmp
mov
mov
cmp
idiv
jecxz
ret
xchg
jbe
ss
jge
dec
push
roll
cmpsl
je
jmp
jge
insl
aaa
cmp
push
jp
jne
and
std
xchg
adc
out
pop
sti
xlat
add
inc
sub
cltd
js
cmp
ljmp
push
call
xchg
mov
lods
push
or
data16
in
xchg
mov
push
lods
adc
outsb
out
pop
mov
lock
fwait
aaa
cmp
sbb
loopne
xlat
outsb
fs
loop
jae
ds
xor
xchg
sahf
sbb
pop
cmp
mov
addl
jecxz
movsb
add
dec
add
mov
test
cmpsl
cmpsl
and
stos
sub
jmp
call
lea
or
push
mov
jae
fsts
frstor
jp
inc
dec
jnp
xchg
lea
add
fisubl
sub
fsubrp
push
test
inc
nop
push
dec
div
arpl
jae
mov
or
mov
in
adc
push
sub
push
adc
pop
out
pop
pop
lods
std
subb
movsl
xchg
dec
lock
sbb
sub
xchg
or
dec
aad
inc
movsb
inc
outsb
in
or
pop
nop
or
lods
mov
xor
cmpsl
lock
push
cwtl
push
ret
sub
adc
push
inc
xchg
out
push
and
cwtl
jp
ja
bnd
out
push
sbb
out
ja
push
add
lcall
dec
dec
mov
jmp
outsb
ds
loopne
outsb
outsb
mov
or
and
out
sbb
jo
jle
jo
jb
movsb
mov
imul
jecxz
sub
addr16
pop
push
jmp
dec
mov
out
push
shr
in
add
loopne
mov
sub
scas
push
stos
inc
or
into
mov
mov
adc
and
out
pop
xor
sub
pop
add
mov
ret
jns
imul
arpl
sti
scas
push
adc
or
in
jge
push
lret
jecxz
jb
mov
inc
mov
mov
and
ja
xor
fidivs
push
mov
fwait
dec
sub
pop
xchg
xchg
add
push
sub
cmp
push
mov
dec
stos
xchg
je
stc
jecxz
mov
xchg
es
mov
fs
in
push
pushf
lahf
stos
push
lcall
push
int3
cli
adc
imul
clc
pusha
sub
and
and
push
movsb
pushf
divl
in
movsb
sbb
dec
fstpl
and
mov
push
ja
ret
in
in
inc
and
inc
fwait
mov
clc
adc
lods
pusha
sete
push
push
mov
fcoms
mov
inc
jbe
frstor
dec
xchg
fcoml
xor
nop
aad
ss
idivl
lret
mov
xor
insb
adc
xor
add
jecxz
push
stos
and
sbb
sub
insb
imul
xor
jns
iret
fcoml
pop
adc
fwait
and
push
in
cwtl
push
push
jns
push
fs
jbe
inc
into
dec
dec
jbe
sbb
std
testb
and
push
and
mov
fisttpll
adc
pop
jb
les
mov
pop
and
jg
leave
adc
cmp
xor
repnz
push
fstpl
testb
cmp
aad
mov
cmc
iret
int3
in
or
xchg
cmp
icebp
addb
out
lods
add
ret
hlt
pop
das
or
xchg
cmp
imul
push
push
insb
cltd
dec
push
insl
mov
or
lea
loope
mov
mov
fcomps
mov
mov
movsb
shlb
js
ret
js
xor
jl
scas
test
rcll
mov
inc
sahf
out
pusha
dec
fisubs
xlat
repnz
sarl
xor
mov
dec
dec
cmpsb
xor
inc
negl
pop
dec
mov
inc
jmp
aam
inc
mov
fsubr
iret
in
rcll
lcall
push
push
xchg
jo
sbb
imul
mov
rcll
imul
add
xchg
push
xor
mov
jmp
cmp
push
add
data16
and
test
cmp
jo
jle
jo
sbb
cmp
insl
xlat
push
push
daa
int3
insb
sbb
imul
pop
mov
sub
cmp
mov
aaa
fimuls
sti
cwtl
inc
dec
rcr
jno
inc
lods
xor
enter
add
ret
cwtl
push
popa
mov
std
fcoml
stos
cmp
testb
repnz
repnz
test
mov
adc
dec
mov
addb
adc
mov
aaa
les
roll
lcall
outsb
fistps
cmp
loopne
aad
sbb
movsl
dec
cs
xor
mov
dec
mov
jg
sub
std
jp
jle
inc
nop
outsl
dec
xlat
lods
pop
xchg
cli
jmp
push
je
push
rcrl
cmp
dec
rcll
cmp
rcrb
pop
cs
nop
testl
repnz
in
jbe
mov
or
rorl
imul
sbb
mov
jge
mov
lret
daa
sub
in
pop
pop
mov
cmp
add
jo
xchg
cmp
in
adc
notl
push
or
std
and
sarl
push
mov
outsb
xor
data16
into
sub
xchg
lods
xchg
mov
pop
lahf
test
popf
push
jmp
and
je
sbb
cmp
xchg
pop
fmulp
int3
fbld
pand
cmp
out
pusha
xlat
inc
icebp
xchg
push
adc
jns
iret
cmc
mov
lods
in
lret
dec
es
dec
aas
das
fwait
call
pop
int3
fstps
mov
dec
mulb
add
pop
and
dec
xor
jl
lds
jle
add
hlt
cld
pop
sbb
xlat
scas
or
ss
or
lea
mov
mov
fiaddl
cmpsb
add
cmp
mov
xchg
push
cwtl
mov
lds
inc
cltd
lock
mov
mov
ja
fisttps
pop
rorb
aam
outsb
dec
jno
mov
stc
add
aas
mov
test
pop
stos
fdivrl
sti
pushf
test
frstor
pop
sbb
pop
or
pop
xchg
cs
or
mov
das
sub
and
scas
xchg
dec
inc
mov
xchg
sbb
in
jp
jecxz
cld
cld
xorl
dec
or
push
bound
scas
mov
cmc
xchg
out
int
add
insl
add
jne
lcall
lahf
mov
popa
cmp
xlat
pop
or
decl
add
dec
jmp
fsubp
stos
mov
insb
leave
pop
sub
repz
in
jo
jg
mov
lds
fcomi
jb
es
or
dec
jecxz
cs
add
mov
or
adc
dec
mov
mov
dec
rcrl
pop
fildll
repz
fsubl
jle
push
push
sub
push
jmp
ss
and
pop
test
stos
jle
gs
fs
sbb
adc
inc
popf
notl
gs
push
rolb
addr16
dec
cmpsl
mov
shlb
jbe
rcrb
sub
mov
cmc
fadds
adc
jno
add
mov
pop
add
dec
dec
or
sub
or
xor
mov
cmpsl
int
inc
idivl
pop
fucomip
xchg
sbb
fsubr
scas
mov
lods
fiadds
xor
in
and
xchg
mov
addl
xor
das
pop
sbb
mov
std
pusha
jne
cltd
lods
mov
arpl
mov
test
and
pop
mov
js
sbb
cmpl
notl
mov
dec
icebp
js
je
shl
sub
arpl
ja
mov
rcrb
jbe
enter
dec
shlb
dec
mov
mov
sbb
into
pusha
add
jmp
out
or
stos
addb
jnp
jne
dec
repz
dec
test
ljmp
sbbb
mov
lahf
jno
push
push
hlt
lods
mov
jb
stc
mov
mov
and
es
inc
dec
xor
or
jg
pop
popa
in
fnstcw
ja
xchg
outsl
decb
adc
call
mov
mov
cmp
mov
dec
repz
cli
lahf
adc
js
movsb
cmp
iret
inc
or
push
jne
ret
aad
xchg
ret
mov
test
mov
xchg
push
les
sbbb
mov
movsl
out
in
push
xchg
jbe
bnd
adc
mov
loopne
fwait
fs
xchg
jne
jb
push
sahf
outsb
jge
push
stos
cmpsl
mov
cltd
cli
into
enter
inc
xchg
lret
es
lret
add
imul
inc
cmp
or
xchg
ret
inc
and
jno
xchg
xchg
lcall
je
and
lret
inc
mov
cmp
xchg
inc
popa
inc
mov
mov
jns
xchg
inc
int
adc
sub
inc
or
movsb
jecxz
nop
rcrb
pusha
fcomps
inc
data16
or
popa
dec
rcr
into
and
icebp
nop
data16
sub
inc
mov
in
mov
aas
xchg
fwait
dec
outsb
and
cmp
push
or
test
rolb
pop
hlt
pop
mov
pop
jmp
cld
pop
cmpsl
addr16
gs
mov
jge
cmpsl
mov
jle
jo
movsb
inc
repz
mov
dec
setno
pop
imul
movsb
ss
pop
js
sahf
test
stos
jmp
icebp
adc
push
mov
xor
pop
repz
mov
cli
dec
mov
in
jle
mov
jnp
scas
jbe
aas
mov
jns
shll
pop
and
adc
xchg
push
pop
inc
ds
mov
sahf
add
shll
repz
pusha
cltd
hlt
arpl
sti
neg
xorb
mov
sbb
inc
sahf
sub
and
outsb
adc
xor
scas
mov
cmpb
dec
movsb
inc
sub
int
inc
fwait
jmp
fs
popf
dec
movsl
mov
call
popf
popa
out
test
lahf
pop
mov
push
mov
je
dec
pop
stos
aaa
sbb
aaa
ret
and
sbb
gs
add
mov
and
xlat
jle
jns
pop
inc
cmp
ljmp
test
fwait
mov
mov
mov
dec
aad
or
rol
or
dec
push
cltd
fnsave
test
stos
ljmp
add
aaa
mov
pop
int
mov
xchg
push
xor
mov
outsb
fcomps
repz
negl
sbb
stc
mov
cld
push
fwait
xchg
sbb
test
pusha
stos
rcll
xchg
mov
jge
mov
xor
jne
xchg
insb
mov
rclb
leave
pop
insb
daa
adc
fistpl
jge
out
pop
sbb
push
inc
es
jg
push
mov
stc
getsec
mov
ret
mov
ja
lods
adc
inc
dec
in
jae
stos
push
cwtl
js
ficompl
add
mov
ds
cmp
inc
jno
sub
mov
xchg
popf
sbb
xor
cs
in
push
push
xor
pop
arpl
dec
and
xchg
jl
jp
test
int
push
xchg
pop
mov
add
scas
mov
push
dec
fdiv
test
cmp
mov
insb
sub
push
out
mov
inc
js
scas
mov
lret
mov
push
mov
mov
pop
adcl
outsb
idiv
add
cmp
dec
xor
add
fcomip
pop
popf
out
push
pop
dec
or
out
mov
dec
and
mov
push
pop
movl
xlat
sti
aaa
mov
dec
or
jae
jge
xor
enter
aam
sbb
pusha
push
rol
sbb
ja
sarb
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
