push
mov
sub
mov
jmp
incl
shlb
fs
lahf
jle
jle
cwtl
jg
jle
xlat
cmp
ror
pop
add
cmovg
rdpmc
xadd
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
das
lds
mov
pop
cmp
pop
mov
dec
or
xchg
out
xchg
jmp
sbb
loop
mov
les
dec
fstl
cmp
sti
jae
push
arpl
sbb
addb
sub
mov
xchg
rcll
adc
dec
push
push
and
mov
and
push
popa
out
orl
jno
cmp
and
xor
add
inc
out
nop
mov
jno
sub
pop
xchg
out
push
dec
int
mov
enter
aaa
in
js
cmp
pop
jle
push
int
add
jmp
in
inc
jne
frstor
movsl
imul
push
xor
sub
adc
in
mov
out
jl
inc
pusha
test
leave
loope
sbb
inc
das
nop
dec
mov
pop
ljmp
rclb
das
cmp
sarl
cmp
add
fadd
dec
add
cmp
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
jmp
out
sub
xor
imul
and
adc
cwtl
jg
jle
jg
jle
push
cwtl
adc
lds
out
aam
int3
pop
xor
cmp
xchg
mov
adc
clc
pop
lret
fsts
loop
adc
test
pop
mov
mov
xchg
fwait
scas
mov
and
xchg
add
add
xchg
call
pop
outsl
loop
leave
outsl
mov
scas
fdivp
repz
fcomp
shlb
imul
fcmovu
nop
xchg
push
gs
push
mov
loopne
push
or
and
stos
lods
jmp
inc
mov
ds
lods
xchg
push
and
mov
mov
roll
fsts
scas
xor
stos
and
push
scas
in
push
les
lret
jge
and
shlb
xchg
stc
or
mov
push
jle
lahf
std
sub
push
sarb
dec
fwait
mov
imul
cmp
push
das
js
and
pop
lea
jb
dec
or
sbb
pop
inc
sub
pop
pop
mov
sub
insl
or
sub
pop
xchg
ret
fprem1
mov
sbb
and
xchg
xor
je
jge
test
dec
sahf
punpckhbw
mov
je
in
xchg
dec
loop
dec
mov
loop
inc
sbb
push
mov
and
dec
jnp
and
pop
in
fst
add
push
inc
insb
lds
xlat
adc
das
fidivl
jmp
cmp
dec
pop
and
sarb
cli
xchg
mov
add
jb
mov
adcl
xor
movzwl
or
mov
jmp
adc
insl
xchg
jo
or
cltd
adc
jge
jle
jg
jle
pop
push
inc
jge
lcall
mov
cmp
js
sub
sbb
out
push
iret
adc
pop
aam
aaa
dec
sub
adc
xchg
or
cwtl
nop
lcall
xor
xchg
ljmp
fwait
cmpsl
mov
xor
std
movsl
stos
mov
mov
pusha
cmpsl
jbe
das
sbb
addb
mov
mov
bnd
xchg
push
dec
inc
and
or
jbe
and
jle,pt
loopne
sbb
ja
sbb
cwtl
dec
mov
cmp
sbb
insl
fstl
xchg
sub
mov
or
mov
push
cmp
imul
shrl
out
ret
dec
insl
stos
sub
xor
mov
xchg
fcoml
mov
cmp
pop
insb
insb
pop
scas
inc
inc
out
test
sahf
mov
jnp
stos
push
movsl
popa
fimuls
xchg
scas
mov
xchg
mov
cmc
gs
inc
pushf
or
mov
sub
mov
scas
sarl
sti
scas
jne
ret
lods
xorb
fs
inc
cmp
cmp
jne
lock
sbb
mov
icebp
fldcw
out
popf
sub
pop
xchg
jge
cmp
pusha
cld
test
loopne
xor
dec
cs
mov
ret
mov
jp
enter
xor
popf
ret
and
xor
add
inc
fcoms
repz
mov
repz
jecxz
or
vpsubsw
gs
pop
mov
add
xchg
push
sub
imul
mov
and
pop
xor
jno
cmpsl
cmp
mov
jp
jle
jg
jle
mov
imul
mov
jne
mov
or
nop
pop
cld
dec
xchg
dec
shlb
mov
xor
dec
mov
add
dec
int
test
dec
insl
push
iret
add
ret
scas
cmpsb
sete
xchg
nop
push
sub
push
addr16
leave
outsb
nop
scas
xchg
xchg
pop
inc
fadd
ds
test
pop
adc
cld
dec
fcoml
pop
not
in
cmpsb
out
test
lea
pop
sub
sbb
push
dec
jmp
bound
cmp
jae
mov
lods
sahf
lods
xchg
mov
add
xor
cmpb
adc
mov
mov
sbb
mov
adc
or
inc
roll
and
push
push
and
inc
cmp
arpl
push
outsl
dec
add
jo
aad
incl
pop
jbe
push
shl
lret
inc
fdivl
dec
sti
and
outsb
out
jno
xor
test
jle
push
ret
sbb
add
push
sahf
inc
xchg
dec
jl
ja
arpl
loope
jl
mov
imul
xor
jl,pn
ret
jge
inc
je
jns
rclb
ljmp
or
jbe
xchg
shlb
movsl
and
std
frstor
lock
hlt
push
pop
popa
outsl
lcall
xchg
popf
sub
loop
movsb
scas
outsb
int3
test
xchg
xchg
loopne
loope
nop
lcall
sbb
or
imul
add
add
movl
movzwl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
sbb
not
and
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
sbb
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jb
mov
movzwl
mov
mov
mov
movl
movl
mov
mov
lea
mov
mov
mov
lea
mov
mov
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
jmp
movl
popa
movsl
ja
and
xchg
js
jle
jg
jle
mov
cmp
sbb
sti
mov
sbb
mov
mov
cmp
cli
pop
mov
or
out
ret
xchg
push
into
mov
icebp
mov
mov
addr16
add
jae
fisttpll
mov
je
test
lret
dec
sbb
sbb
scas
cmp
lock
mov
js
shl
jns
mov
arpl
sbbb
push
loopne
push
mov
push
sbb
lret
inc
jp
and
lds
mov
mov
test
ficoms
mov
xor
adc
add
push
ret
jmp
push
ret
pusha
cmp
insl
and
push
mov
mov
xor
in
nop
add
dec
imul
test
loope
pop
sbbb
gs
insl
dec
mov
xor
inc
nop
hlt
xor
fsubs
hlt
and
movsb
push
and
mov
push
xor
sub
xchg
aad
jno
mov
mov
lcall
dec
or
insl
push
pusha
mov
mov
dec
scas
xor
fcmovnu
sub
ret
mov
mov
pop
inc
inc
jmp
jns
lret
jnp
fsubl
nop
fdivrs
ret
mov
cmpl
xchg
push
or
mov
pop
push
je
mov
fwait
mov
sbb
std
inc
mov
lea
mov
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
jmp
das
adc
inc
icebp
inc
mov
test
and
ret
divb
push
jle
cwtl
jg
jle
or
xor
clc
pop
fwait
xchg
xor
rorb
mov
pop
adc
mov
mov
push
xchg
in
sti
in
cmp
fdivrp
dec
dec
and
cli
lock
cs
xor
ljmp
xor
push
pop
cltd
rcrl
sub
jnp
and
xor
and
sub
or
out
es
dec
jns
rolb
and
mov
arpl
mov
fiadds
dec
mov
sbb
push
out
daa
scas
mov
push
inc
cs
cwtl
cmp
jg
mov
daa
aaa
jle
pop
pusha
pop
push
push
out
dec
xchg
call
iret
aad
out
inc
fwait
adc
and
adc
mov
ret
pop
sbb
aad
daa
inc
xor
cmp
xchg
int
sarb
inc
dec
jl
shr
pop
addl
inc
mov
add
add
lret
lret
stc
cs
dec
subb
xchg
fmul
push
mov
push
xor
push
xchg
movsb
and
mov
and
loopne
mov
cmpsl
enter
arpl
fldcw
pop
das
xor
or
adc
push
repz
test
sbb
pop
ja
popa
mov
inc
fucomi
lods
mov
jg
shll
mov
lods
jnp
pop
pop
xor
out
sub
das
inc
insb
cwtl
xchg
aas
leave
bound
fbstp
mov
inc
xorl
jmp
mov
mov
xor
mov
mov
add
cmp
je
mov
xor
jmp
mov
lcall
cli
jp
dec
pop
pop
jle
cwtl
jg
jle
push
mov
inc
ficoml
or
mov
bound
and
arpl
repnz
repz
push
xchg
pop
into
inc
or
adc
sub
cld
das
mov
cli
sbb
movsl
lods
lods
call
push
cmpsl
xor
into
dec
fnstcw
aaa
orb
and
icebp
xor
push
pop
leave
bnd
aas
frstor
mov
mov
sub
out
test
fwait
cmp
pop
test
push
and
or
push
xchg
int
fcoms
outsl
jnp
or
scas
roll
cmp
fdivrl
into
mov
pop
cmp
pop
rorl
out
xchg
sti
sbb
jle
js
sahf
inc
cli
sbb
out
xlat
out
ret
ja
fs
movsl
aas
xchg
jne
jb
push
cmovns
rolb
int3
adc
out
inc
shlw
sar
and
lret
sbb
lds
mov
test
inc
xchg
pop
nop
fwait
adc
push
imul
fsub
xor
adc
jecxz
push
inc
shl
mov
insb
test
pop
arpl
stos
test
mov
cmp
test
lea
xchg
mov
lods
adc
sarl
aaa
call
inc
push
int3
xchg
dec
jo
shr
andb
filds
ds
rclb
cmp
mov
sub
fs
jmp
sbb
vmovdqa
push
sar
pop
sbb
repnz
xchg
mov
insl
jmp
push
fsts
inc
rorb
push
enter
add
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
outsb
jecxz
mov
jne
add
xchg
or
inc
test
jle
mov
mov
add
jns
pop
pop
fwait
in
out
sbb
inc
sbbl
int
cmp
and
xchg
clc
hlt
rolb
xor
aam
adc
js
xchg
xchg
add
cmp
or
test
inc
or
int3
fidivrs
sbb
xchg
inc
aam
sub
jne
icebp
ret
cmpsl
leave
mov
repnz
add
push
add
adc
inc
ret
jmp
lods
test
out
stos
push
test
inc
mov
pop
dec
loope
sbb
add
imul
xchg
lds
mov
movsl
xchg
mov
fidivrl
mov
sub
cmpsb
neg
in
mov
loopne
mov
push
hlt
mov
add
scas
push
mov
jne
push
sbb
pop
or
mov
mov
add
insb
mov
and
movsl
je
shlb
cmc
shlb
loopne
push
shll
jmp
fldcw
jbe
and
lcall
cli
and
shrl
sbb
mov
mov
cld
ljmp
sub
push
push
xor
sbb
repnz
test
cmpsb
pop
lods
dec
xor
inc
mov
in
sbb
and
dec
pushf
push
jecxz
cmp
mul
and
or
sbb
fsubs
mov
andl
in
cli
or
jle
mov
or
xchg
out
loopne
cmp
clc
loope
rcll
cltd
jns
insb
cwtl
sbb
cli
jg
xor
xor
xchg
push
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
adc
jmp
je,pt
cltd
mov
out
sub
mov
mov
xchg
inc
fildl
jle
push
jg
jle
add
xchg
or
mov
mov
ret
incl
pop
pop
mov
push
test
ljmp
mov
jne
dec
and
fucomi
cmp
pop
jbe
or
stos
mov
iret
into
jecxz
sahf
mov
add
push
adc
xchg
and
fpatan
aam
rolb
subb
and
ljmp
iret
and
cmp
pop
gs
stos
repz
cwtl
push
hlt
mov
cmp
ret
iret
fs
call
jbe
xor
in
sti
push
pusha
jns
and
icebp
cmp
cs
repnz
jo
cmp
mov
outsl
and
pop
dec
pusha
sbb
daa
jl
push
ljmp
pop
daa
jle
push
jl
push
shl
in
subb
cld
mov
sti
push
dec
and
cmc
jle
add
jbe
negb
pop
sbb
push
rcll
xorps
pop
loope
aam
pop
cmpsb
add
ljmp
aas
cmp
scas
mov
cld
and
shll
movsl
ret
enter
xlat
dec
xor
inc
push
daa
iret
outsb
iret
ss
es
mov
xchg
stos
xorb
push
push
nop
sti
mov
out
mov
push
adc
popa
cs
mov
in
sti
push
pop
push
jne
leave
mov
mov
jbe
mov
pop
push
and
xor
lds
cld
push
imul
inc
xchg
lcall
stc
aaa
aaa
add
push
xor
test
jle
iret
or
or
push
js
sahf
imul
fldl
and
cmp
add
mov
movzwl
xor
mov
mov
xor
movl
mov
addl
push
mov
xor
or
and
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
lock
xchg
aaa
insl
fs
sbb
jle
jg
jle
or
lea
mov
push
mov
jp
mov
insb
push
xor
jo
xor
aaa
fidivl
adc
cmc
ret
sbb
aas
jbe
cmp
add
xchg
sub
test
jl
xor
sub
or
test
add
bound
das
mov
lds
mov
jp
cmp
into
xchg
and
jecxz
scas
xor
xchg
mov
pop
push
cmp
pop
fildll
pop
pop
jp
insb
or
inc
call
std
stos
addr16
aas
dec
push
add
dec
mov
xor
adc
xor
mov
mov
gs
push
push
ret
fucom
icebp
mov
xchg
jmp
mov
pop
pop
mov
push
in
jbe
subl
test
ds
jle
hlt
fmul
mov
daa
cmc
fisubl
pop
pop
add
out
sti
das
aaa
dec
aad
lret
adc
pop
in
mov
and
adc
pushf
pop
cmp
stos
and
jge
in
or
ret
ljmp
das
push
mov
inc
add
loope
fadds
mov
sub
adc
jp
insb
mov
and
sub
jb
out
jle
adc
das
push
repz
mov
imul
mov
mov
add
mov
pop
mov
stos
hlt
clc
daa
mov
in
push
xor
in
clc
inc
xchg
pushf
stos
jp
add
cmp
xlat
inc
push
scas
repz
sbb
divb
int
shlb
out
add
inc
xchg
sub
xor
mov
mov
ss
daa
mov
in
fsts
jge
add
cmp
je
mov
mov
xor
mov
sub
jmp
insb
cmp
arpl
push
xor
rol
adcl
xor
jne
sub
nop
out
and
test
xor
repnz
hlt
mov
jle
loope
sahf
xlat
cmp
fwait
dec
loope
je
mov
movsl
xor
and
mov
inc
int
dec
js
hlt
std
jns
adc
sbb
test
jb
xor
fwait
out
and
in
add
cmpsl
xchg
ja
aam
arpl
dec
jmp
sbbl
xchg
sbb
std
pop
push
push
in
dec
repnz
xor
lds
push
lods
mov
inc
fwait
pusha
xor
adc
add
sub
dec
clc
outsl
mov
adc
lcall
lea
lret
mov
aad
cmp
mov
sbb
or
jns
mov
inc
jmp
dec
mov
or
jle
data16
push
test
dec
and
jecxz
add
sbbl
jo
mov
or
scas
or
adc
hlt
pop
jnp
popa
leave
scas
icebp
test
cld
jno
outsl
jns
test
repnz
loop
enter
int
sbb
sub
mov
es
xor
das
maxps
out
or
mov
jo
repnz
add
lret
push
dec
loopne
movsb
repnz
inc
jo
cs
sti
cwtl
or
inc
repnz
adc
jg
insb
addr16
or
test
in
and
mov
in
xchg
outsb
idivl
xchg
jge
sbb
imul
or
adc
mov
lea
ja
divl
dec
cmp
sarl
or
andb
pop
shlb
mov
jge
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
lock
xor
jo
repnz
pop
mov
fisubrs
jle
push
jg
jle
mov
adcb
jbe
imul
das
js
pop
cwtl
push
lods
push
adc
mov
cwtl
mov
dec
dec
decl
subl
xchg
sahf
inc
fs
pop
jb
xor
out
std
inc
loop
ds
lahf
inc
mov
mov
jge
dec
mov
lahf
mov
mov
jecxz
dec
sub
pop
jns
pop
movsl
xchg
add
scas
xchg
pop
and
inc
inc
jns
push
cld
fnstcw
cwtl
data16
ljmp
xor
lea
icebp
pop
inc
adc
fldcw
push
daa
xorb
sub
fsubr
or
xor
das
mov
popf
jl
pop
movsl
pop
sbb
push
xlat
mov
addr16
int
in
cmc
cs
add
cmp
pop
inc
imul
popf
push
push
xchg
scas
jecxz
cmpsl
aam
jnp
fcoms
add
lret
inc
fdivs
and
jbe
jbe
add
shll
cli
outsl
icebp
sub
add
rcr
adc
jecxz
data16
add
shr
insl
push
popf
outsl
xchg
call
xlat
mov
frstor
enter
mov
xor
mov
mov
shll
inc
xor
jne
stos
call
adc
dec
inc
adc
inc
mov
sahf
inc
add
into
lds
jne
rcrl
lods
cltd
repz
jge
mov
inc
cli
jle
mov
mov
mov
mov
std
inc
lods
pushf
lock
or
or
push
dec
cld
pop
xor
enter
push
idivl
jle
iret
leave
xor
and
jecxz
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
outsb
add
and
add
mov
dec
call
jle
jg
jle
js
xchg
test
scas
bound
push
repz
jb
xchg
mov
scas
push
enter
sub
daa
jmp
rolb
mov
ja
mov
jecxz
jl
push
mov
inc
mov
clc
adc
out
test
jne
mov
mov
mov
xchg
clc
pop
ret
cli
mov
andl
mov
in
enter
dec
xor
das
dec
test
rol
js
ja
jle
jge
std
xorb
sahf
dec
shll
mov
mov
in
pop
sbb
xchg
hlt
cmpsl
dec
adc
out
jmp
jae
mov
push
lods
fchs
mov
lods
std
xchg
icebp
pop
and
stc
insb
orl
ss
into
je
jmp
and
movsb
mov
add
in
cmp
cmp
jbe
pusha
cmp
xor
push
loopne
adc
adc
es
ljmp
dec
add
xchg
sbb
mov
cld
sahf
lea
hlt
fdivl
dec
mov
int
loopne
and
push
xchg
lret
pop
std
cmp
in
fcomp
fs
nop
xorw
lahf
push
sbb
mov
sub
js
adc
aam
or
mov
fincstp
call
mov
adc
push
mov
pop
sub
push
mov
pop
movsb
and
adc
stc
sbb
and
ret
or
insb
add
jp
ljmp
mov
inc
mov
sbb
push
jmp
xchg
jno
mov
cmp
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
mov
xor
mov
add
or
movzwl
mov
xor
mov
mov
movb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
mov
add
mov
movl
xor
sub
orl
mov
not
jmp
loop
fcoms
popf
mov
xchg
xchg
push
mov
jg
jle
pop
ret
xor
test
dec
cltd
test
repnz
dec
jge
jmp
and
mov
jecxz
test
pusha
enter
dec
mov
test
xchg
sti
cwtl
sbb
sub
push
push
out
orb
lret
dec
std
scas
in
popa
mov
in
sbb
xor
int3
inc
fdiv
mov
cmp
xchg
sar
in
push
out
push
test
lret
xchg
jmp
push
scas
mov
hlt
push
jle
mov
cmp
loop
jb
dec
mov
cs
push
and
cmp
mov
in
mov
inc
jle
in
outsl
adcl
call
jle
mov
shrb
lahf
mov
insl
cmc
and
data16
fsubs
lret
ret
mov
gs
mov
dec
popf
es
xchg
jae
fidivrs
jle
rep
mov
push
loope
pop
int3
loope
pop
fnsave
push
xor
and
cli
arpl
or
lret
aad
pop
in
das
shrl
push
std
cs
gs
push
xchg
and
in
fcoms
xchg
inc
jnp
icebp
aas
jne
mov
xor
mov
xor
sbb
out
cwtl
add
jge
loop
outsl
sub
add
xchg
or
das
add
stos
stos
sub
mov
sub
mov
and
rcll
mov
stos
mov
ljmp
xlat
ljmp
sbb
movl
movl
or
mov
movzwl
adc
mov
subl
push
xor
andl
jmp
inc
jp
cs
mov
jno
pop
popf
out
and
push
jle
scas
jg
jle
nop
cmc
push
push
push
pop
sub
xchg
outsl
sar
cwtl
lret
xor
adc
or
add
fidivs
mov
or
insb
int
in
pop
lock
dec
sbbl
add
cs
add
pusha
dec
dec
insb
jbe
int
nop
mov
or
mov
and
add
test
or
mov
mov
punpckhwd
test
or
and
cmpsl
xor
inc
push
stc
movsb
es
sub
pop
fisubrl
out
mov
or
xor
cmc
push
sub
sahf
mov
insb
sub
std
popa
cs
imul
jge
negl
scas
aam
dec
sbb
sbb
repz
and
mov
in
lret
les
out
sub
rcll
cmc
and
sbb
add
xor
cmc
xchg
jp
je
push
out
ljmp
imul
xchg
jb
pop
ljmp
sub
pusha
inc
push
movsb
dec
xorb
xlat
fmull
push
orb
jmp
leave
xor
mov
mov
lea
mov
or
sub
adc
mov
push
mov
pop
mov
sbb
xchg
inc
jo
lds
jo
add
sbb
and
adc
shll
ret
adc
test
dec
popf
adc
fisubl
lcall
mov
negl
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
mov
andl
out
icebp
add
jle
jg
jle
push
push
fs
pop
jecxz
push
dec
stos
xchg
fwait
jb
jne
or
mov
xchg
adc
ja
outsl
push
sbb
dec
pop
mov
adc
sbb
testl
in
in
popf
mov
fidivl
test
icebp
jge
jle
fdivs
sbb
lahf
test
test
int3
push
pop
inc
lret
shr
jns
cmp
xchg
push
lcall
scas
inc
popf
aas
pop
push
mov
out
cmp
adc
push
int
push
arpl
xadd
iret
test
mov
fdiv
es
fs
mov
push
lods
mov
sub
mov
out
mov
add
push
sbb
cmpsl
nop
jl,pt
jp
ret
sub
lret
jbe
pop
rep
push
push
and
sub
pop
push
pop
push
sar
push
out
leave
cmpsb
notb
leave
mov
in
add
mov
xchg
lea
xor
pushf
push
lods
dec
jb
mov
xor
movsl
in
fidivrs
fdivr
jnp
push
je
fcoms
into
movsl
hlt
movsl
inc
mov
fwait
cmp
gs
sahf
aam
scas
xchg
ret
dec
pop
out
jno
notl
enter
or
das
push
mov
mov
dec
and
out
dec
mov
jl
mov
add
ss
rcrb
xchg
pop
roll
cltd
test
or
sar
jge
ret
fsubl
jns
adc
mov
inc
xchg
xor
pop
xlat
push
addb
cmp
pop
aas
ds
lods
test
jbe
adc
push
push
adc
roll
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
jmp
jo
add
mov
enter
adc
jle
dec
je
mov
cmp
dec
xor
sub
push
movsl
mov
or
lret
in
lahf
jle
push
jg
aas
dec
ret
push
insl
cmp
lret
jmp
pop
inc
nop
or
insl
data16
lret
into
stos
sub
sub
cmp
imul
or
leave
xor
cmc
sarb
into
xchg
and
mov
addr16
or
cmpb
mov
inc
cmpsb
cmpsl
push
repz
xor
insl
inc
in
imul
inc
lret
inc
jle
repz
xchg
bound
dec
jle
fcomp
mov
mov
add
push
hlt
popa
mov
imul
into
push
cmp
lock
fwait
ljmp
cli
or
movsb
and
and
sbb
add
xchg
dec
mov
push
pop
outsb
xor
mov
aaa
mov
or
mov
jne
call
subb
sti
mov
pop
xchg
xchg
mov
jo
cmc
and
jne
ss
pop
sti
cmp
mov
in
mov
push
test
jo
xchg
leave
loop
pop
std
mov
xchg
repz
jae
ja
aam
jl
push
mov
cld
or
push
mov
call
dec
sti
shlb
stos
push
jl
jnp
jo
or
mov
adc
xchg
or
daa
pusha
push
ret
dec
or
or
jae
fsubl
mov
int3
outsb
incb
fwait
and
jne
dec
jl
rorb
lds
jae
xchg
fists
ljmp
push
adc
roll
jmp
jl
mov
mov
jge
fldl
call
shl
jle
scas
jg
jle
std
sbb
lods
stos
mov
stc
or
fwait
aas
pop
repz
dec
push
dec
or
dec
dec
daa
mov
js
dec
adc
scas
push
int
clc
icebp
rcrl
jmp
pop
lahf
xlat
call
aas
xorl
jecxz
lret
push
sahf
arpl
xor
je
adc
ret
shlb
push
stc
ja
cli
sbb
scas
push
jno
xchg
sbb
aad
unpcklps
push
inc
sbb
rcrb
adc
lods
nop
out
arpl
ds
adc
loop
pop
int3
push
fsts
mov
shll
in
aam
ret
pop
cmc
lret
sub
mov
cmp
fiaddl
shl
std
into
out
test
sub
dec
dec
mov
xor
sti
lret
sub
loop
cmp
out
data16
out
stos
sbb
ja
inc
jns
dec
or
movsl
sub
aam
lock
adc
mov
out
int3
mov
add
mov
mov
push
xor
in
out
add
jo
add
lret
xor
mov
scas
jge
movsl
in
stos
repz
scas
fldcw
mov
les
sbb
xchg
mov
mov
mov
cmp
das
inc
pop
shrb
dec
mov
push
out
movsb
sub
ret
pop
clc
adc
dec
rolb
mov
insl
adc
pop
adc
xor
not
out
jmp
sar
mov
pop
shll
ljmp
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
lret
int3
push
push
mov
push
mov
adc
jle
scas
jg
jle
jns
fcomp
xchg
sbb
ret
shll
fiadds
add
aad
mov
jnp
bnd
jns
mov
mov
dec
jo
ds
jnp
test
inc
mov
jno
scas
push
cli
sahf
stos
jae
add
data16
or
cmc
hlt
xor
sbb
or
dec
js
dec
cmpsb
xor
jmp
xlat
mov
lret
fcmovne
movsl
xor
mov
test
jne
rclb
xor
sub
mov
pop
test
ljmp
fisubs
shll
cmp
add
in
add
xchg
and
pushf
popa
add
xchg
xor
mov
jb
push
mov
jg
daa
pop
or
mov
or
pop
push
fistpll
mov
add
xchg
and
sbb
mov
xor
sbb
outsb
jle
or
sahf
ljmp
scas
icebp
aaa
mov
adc
jge
push
faddl
xchg
call
inc
pop
cmp
mov
outsb
jne
dec
sub
mov
xchg
push
cltd
jno
pusha
aas
mov
dec
sbb
movsl
jae
out
sbb
adc
push
dec
ja
push
adc
fsts
incl
test
clc
test
out
in
adc
mov
sbb
aam
xchg
cltd
sub
lahf
neg
cmp
jb
popf
lock
aam
add
test
pop
cmc
cmp
or
fmul
jle
jge
ljmp
mov
je
movl
jmp
scas
or
xor
mov
in
inc
inc
push
jle
scas
jg
jle
test
shll
mov
icebp
cmc
in
cmp
push
aaa
sarl
fs
pop
pop
xor
sarb
pop
sahf
mov
xchg
cmp
cs
js
in
dec
pop
and
add
out
jg
sub
out
or
loop
fcomp
mov
xchg
stc
jno
inc
ret
inc
movsb
fidivrl
add
sbb
das
xchg
push
mov
push
daa
lahf
stos
loop
je
out
test
in
aad
idivl
shll
mov
xchg
xchg
ret
dec
fsubr
xor
jb
sahf
clc
sti
dec
mov
das
inc
jne
push
ss
xchg
inc
js
or
mov
and
push
std
cmp
jnp
and
add
add
ds
shr
push
push
lods
adc
test
dec
fsubr
stos
in
adc
inc
adc
cmc
sbb
out
jecxz
in
or
or
sub
popf
imul
incb
rcl
gs
or
mov
and
popf
fists
sbb
lock
clc
mov
out
add
dec
mov
fbstp
aad
jne
sti
hlt
cltd
sti
mov
fidivl
push
adc
dec
fwait
nop
cmc
das
sahf
fstpl
or
sub
icebp
dec
in
xchg
rorl
mov
aad
sahf
cmpsl
mov
js
gs
inc
arpl
push
hlt
popf
shl
bnd
xor
shrb
insl
rcrb
in
xor
loope
xor
je
call
or
mov
inc
call
inc
in
addl
jmp
mov
inc
push
push
jb
andl
scas
jg
jle
stos
fwait
inc
out
leave
dec
adc
xor
xchg
mov
int3
movb
sti
sbbl
sub
insl
inc
es
outsl
mov
popf
mov
xchg
inc
pop
mov
out
add
add
pop
sbb
pushf
push
jmp
push
xchg
shrl
lock
push
test
mov
arpl
out
and
fidivs
pop
shrl
xchg
sub
pushf
int3
ljmp
lret
mov
pop
push
pop
xchg
dec
mov
xchg
mov
adc
lods
xchg
inc
sarl
test
sbb
out
rcr
fdivrl
fsubp
mov
sbb
xchg
notb
inc
orb
test
add
jle
fsubrl
jle
outsb
sbb
pop
es
iret
aad
push
jl
lret
lea
loopne
cmp
xchg
lea
dec
xchg
sti
cmpb
hlt
sbb
adc
xor
bound
fistl
enter
icebp
aam
jp
push
mov
ja
and
lock
mov
inc
or
push
fistps
call
push
jmp
adc
push
sub
sbb
mov
orb
ss
push
cs
std
daa
dec
push
fwait
lea
jne
daa
xor
lcall
sti
push
mov
xchg
in
jns
clc
push
aam
in
addr16
pop
mov
jno
adc
int
aad
test
cmp
mov
mov
xor
jmp
pop
sub
dec
insl
dec
imul
and
mov
sbb
scas
jg
jle
jno
imul
add
add
mov
mov
int
sbb
lock
add
ja
rcll
jmp
cmp
cmc
mov
icebp
icebp
jno
int
adc
mov
xor
and
xchg
push
jne
fimull
adc
ss
aad
clc
mov
fists
fldt
xchg
inc
adc
xchg
cmp
subl
loopne
fbstp
mov
data16
sbb
fisttpl
into
or
out
lahf
cmp
adc
or
or
rorb
jno
das
mov
or
mov
scas
pushf
fldt
push
and
xorb
inc
push
ror
jg
jmp
icebp
add
inc
xchg
sbb
jp
push
rol
insl
aaa
cmc
aas
sbb
cld
cmp
cs
sub
jo
into
push
xor
add
cli
sbb
rcrl
sub
add
arpl
jnp
sbb
dec
dec
ficoms
mov
mov
and
push
jge
movsb
mov
ret
cmp
adcb
aas
addl
mov
mov
rcll
mov
dec
lds
add
dec
gs
lds
test
and
std
add
jbe
xchg
dec
scas
mov
xor
push
pushf
mov
mov
outsl
add
sti
jle
pop
pop
pop
stos
jns
mov
mov
sbb
lock
mov
test
fwait
jb
add
or
arpl
decl
mov
add
mov
pop
leave
ret
push
mov
push
push
movl
jmp
lcall
mov
ja
pop
mov
fistl
jle
cltd
jg
jle
pop
call
xor
push
dec
add
push
bound
repnz
pop
sbb
sbb
and
mov
push
into
nop
outsb
mov
stc
pop
call
not
ret
mov
sbb
imul
jno
mov
jbe
add
insl
icebp
les
scas
dec
ds
push
adc
xchg
mov
nop
and
add
mov
out
int
in
enter
mov
outsl
insb
adc
ljmp
add
adc
js
adc
mov
pop
lcall
outsb
int
push
sahf
lret
stos
arpl
dec
inc
and
mov
cmp
das
ljmp
fsts
cmpl
lret
dec
lea
out
repnz
mov
sub
xor
lret
xchg
xchg
mov
jns
sub
add
xchg
insb
jbe
xchg
push
sub
mov
mov
ja
sub
pop
or
mov
mov
dec
add
dec
imul
aam
int3
adcb
pop
std
pop
loop
cli
es
adc
popf
incb
xchg
xchg
inc
das
push
cmp
into
lcall
jl
xchg
jmp
sarb
icebp
jecxz
push
or
cmp
push
push
push
js,pn
lea
sub
xor
shll
popl
js
in
int3
lods
cwtl
call
mov
into
insb
adc
icebp
mov
adc
xor
dec
mov
divb
hlt
in
mov
push
movsb
repz
cld
xor
cld
push
orl
mov
and
mov
orl
xor
addl
xor
mov
orl
add
add
subl
imul
mov
mov
cmp
jne
mov
mov
xorl
xor
andl
xor
xorl
jmp
jbe
cmpsl
adc
sahf
es
xor
jle
cltd
jg
jle
sub
mov
scas
adc
push
mov
push
outsl
jg
pop
inc
jg
lods
sbb
push
push
push
mov
aaa
dec
or
xor
cmp
xlat
xor
bound
jo
dec
aaa
cmp
fidivl
in
fcomip
fldl
mov
mov
xlat
xor
jbe
pop
mulb
jne
sbb
pop
scas
test
cmp
cvtps2pd
fwait
jae
rorl
fmul
ja
push
repnz
sbb
inc
fadd
test
daa
jl
imulb
or
pushf
mov
jno
lds
test
xor
stos
repnz
mov
lods
mov
cmp
cld
adc
adc
lods
mov
lods
stos
out
repz
in
push
sub
dec
dec
jmp
dec
inc
mov
adc
call
pop
pushf
jae
adc
fiaddl
loope
adc
int
mov
xchg
add
push
cmc
jae
lds
ds
xchg
add
inc
push
sub
or
xchg
test
add
xchg
mov
push
stc
pop
push
fiaddl
loopne
fcoml
jnp
test
mov
xor
lcall
jge
mull
popf
adc
dec
cmp
mov
lods
stos
push
in
jl
and
imul
pushf
pop
add
fsubr
sub
aam
lea
mov
jbe
fstl
pop
addr16
add
add
imul
movl
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
movl
mov
mov
mov
sbbl
xor
subl
add
jmp
fnstenv
loop
jb
jno
in
jne
stos
sbb
and
jle
xchg
jl
jle
icebp
or
xchg
sbb
cmp
div
pop
sti
inc
test
sbb
mov
pop
pop
push
in
xor
xchg
fiaddl
push
mov
popf
cmp
imul
stos
enter
fs
test
and
call
jns
dec
aam
lret
sbb
or
stc
scas
sub
mov
cmp
ret
sbbl
sbb
push
rcrl
clc
xlat
outsb
inc
adc
mov
negl
ss
je
mov
fildl
pop
cmpsb
icebp
es
testl
lret
push
jae
lret
js
mov
adc
sti
sbb
insl
mov
sbb
clc
push
mov
shll
or
xchg
sbb
inc
scas
xchg
mov
and
das
cmp
icebp
add
popa
or
mov
mov
xor
ja
push
add
stos
mov
mov
adc
sbb
and
jno
jl
sbbb
dec
dec
xor
addr16
inc
inc
cmp
xchg
mov
into
leave
mov
mov
pop
fs
lret
fs
add
cmp
hlt
xlat
push
test
cmc
shrb
xchg
jge
stos
pop
test
movsl
loope
enter
cmp
shlb
lea
sub
std
push
mov
fisttpll
das
inc
sbbb
std
fcoms
and
jbe
push
insl
lret
rcrb
popa
xchg
shll
out
aas
push
mov
std
cmp
xor
sbb
push
movsl
cli
popa
stos
cmp
cli
xchg
mov
inc
jecxz
mov
xchg
xchg
xorl
cmpsb
sub
lcall
mov
jo
lcall
fs
stos
and
std
les
xor
fs
mov
jge
jns
mov
add
ss
jp
repnz
pop
inc
dec
lahf
hlt
push
fdivrs
lds
lock
mov
outsb
and
jnp
mov
lret
lahf
hlt
inc
fdiv
pop
sub
test
and
cltd
pop
addr16
inc
sub
sbbl
xchg
das
lahf
ja
cld
hlt
push
mov
inc
rcl
je
stos
inc
mov
jno
lock
push
jmp
pop
cmpb
test
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
xor
xor
push
mov
addl
mov
sbbl
add
addl
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
jmp
xor
loope
loope
icebp
pop
mov
push
test
inc
and
jle
mov
inc
jns
stos
int3
xor
lcall
pop
sbb
insl
xchg
je
daa
cmp
jo
sbbl
jle
or
fsubl
repnz
add
inc
loop
mov
movsb
int3
cli
int3
jecxz
jg
popf
jmp
adc
fldenv
fimull
fbstp
imul
cwtl
sbb
inc
ja
push
mov
test
or
jae
push
inc
xor
add
cmp
mov
mov
inc
pushf
jb
mov
add
cmp
pop
test
dec
inc
inc
lea
in
repnz
mov
sub
add
sahf
pop
mov
xor
addr16
xchg
xchg
test
arpl
xchg
mov
iret
jns
int
rclb
ret
lret
cmp
jp
dec
nop
xor
or
test
mov
fs
dec
mov
cwtl
pop
aaa
push
fdivl
loop
adc
add
js
fists
daa
cmp
stos
inc
repnz
leave
cs
lock
sar
mov
push
rorb
mov
js
mov
lock
js
cmp
xchg
out
push
mov
mov
xchg
mov
ja
sub
xchg
jp
adc
addr16
push
push
dec
and
pop
test
out
les
jnp
fsubl
jmp
sbb
popa
movsl
aam
data16
pop
dec
or
inc
jmp
imul
insb
popa
fisubs
hlt
daa
dec
pop
pop
xor
jge
popf
stos
aas
jnp
leave
movsl
ja
mov
pop
jmp
adc
pushf
inc
outsl
rol
popa
lret
sub
pop
inc
push
and
xor
addb
mov
movsb
frstor
cltd
mov
fildll
or
dec
dec
inc
js
push
and
ficoml
sub
xorb
inc
jb
pop
jnp
lret
xlat
sbb
xchg
push
and
fmul
and
lcall
fldcw
jb
mov
pop
cmc
sbb
outsb
aas
nop
hlt
push
mov
mov
mov
cmp
mov
in
enter
cmp
shlb
cmc
jno
sub
and
fdivrs
outsl
xlat
int3
cs
mov
fidivs
cli
testb
stos
push
jecxz
pop
xchg
cmc
pop
and
loope
call
xchg
and
in
xorb
and
icebp
mov
and
or
mov
pop
ret
push
mov
jmp
pop
iret
xchg
cmp
jno
das
insb
xchg
mov
out
jle
outsb
jg
jle
subb
and
sbb
inc
sub
dec
out
filds
fiadds
mov
clc
fwait
das
out
outsl
jnp
adc
cmp
ljmp
fsubrs
mov
and
push
mov
push
ss
out
jno
jo
cmp
mov
xchg
movsb
sbb
aad
cmp
popf
fs
push
roll
jne
xchg
sub
jle
push
add
int
call
dec
push
icebp
adc
mov
and
ret
insl
clc
mov
add
scas
mov
in
xchg
xlat
mov
push
jns
test
add
pop
ds
data16
and
sbb
scas
push
mov
inc
or
repnz
insb
inc
cwtl
mov
sbb
movsl
or
jns
mov
xchg
inc
cmp
jmp
call
sbb
sbb
sub
mov
inc
push
jb
mov
lock
test
cld
sub
mov
pop
mov
ss
mov
lahf
xchg
out
and
adc
in
cmp
scas
ret
jnp
add
pop
mov
mov
push
sub
cmp
aad
xchg
jge
movsb
mov
or
xchg
ror
mov
or
cmp
cli
fmul
test
mov
js
lret
sub
dec
xchg
outsl
cltd
mov
xor
xchg
lret
and
push
sub
fs
test
shrb
dec
test
es
dec
sub
sub
iret
jl
add
imul
push
fwait
mov
sbbl
lret
fs
mov
mov
in
sub
int
push
aad
dec
mov
and
cmp
sub
push
push
pop
jge
or
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
mov
movl
mov
mov
sub
and
mov
movzwl
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
jmp
inc
jo
xor
jo
jo
shlb
outsb
push
mov
jle
jg
jle
out
mov
jl
into
or
xor
insb
pusha
lahf
aam
add
pop
add
imul
cmpl
loope
cmp
jbe
imul
add
and
aam
lahf
pusha
xor
fstl
fwait
xchg
xchg
push
out
out
ret
mov
xor
xchg
je
lret
ja
adc
dec
add
add
jecxz
adc
dec
jl
enter
jno
movsl
arpl
mov
sti
les
xor
insb
loopnew
jo
cmp
push
stc
aas
mov
push
sbb
mov
mov
aas
xchg
rcll
mov
xchg
fistps
push
jnp
mov
add
pop
jb
sub
push
mov
lock
cmp
xor
std
fs
test
jo
sti
jo
lahf
js
ret
cwtl
lret
mov
push
out
dec
cmpsl
js
push
sub
xchg
or
scas
pop
inc
sbb
lret
xchg
jl
add
push
mov
pop
mov
shll
fs
xlat
jb
pop
imul
jg
sbb
lret
pop
adc
in
sbb
cmp
add
sbb
add
aam
sbb
loope
jnp
pop
adc
cld
fldenv
dec
in
faddl
push
shlb
dec
xor
inc
adc
out
xor
add
aas
sbb
and
jae
lcall
adc
jo
repnz
dec
mov
xlat
and
call
cmp
sub
sbb
adc
sbb
jle
xchg
pop
dec
push
or
adc
mov
add
gs
rcr
in
push
xor
adc
xchg
rcrl
xchg
iret
aam
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
jmp
sarl
push
mov
icebp
mov
xchg
mov
jle
outsb
jg
jle
inc
outsb
lods
dec
or
xchg
loopne
cmp
lret
orb
add
sub
xchg
dec
inc
stos
or
repnz
shrb
mov
mov
dec
mov
mov
inc
xchg
pusha
inc
pop
clc
mov
aaa
or
and
mov
add
outsb
int
test
out
gs
xlat
pusha
xor
arpl
add
cli
cld
sub
jo
xchg
in
jl
adc
xor
shlb
sub
dec
lret
lds
fwait
scas
repnz
adc
fiadds
ss
fwait
add
cltd
xor
cld
or
jae
das
imul
movsl
inc
mov
aam
lahf
mov
push
shrb
xchg
xor
scas
mov
jne
add
xlat
jo
negb
mov
fcomps
insl
out
iret
jnp
ret
cmp
bnd
mov
lds
dec
cmp
cmp
jno
enter
lds
fists
mov
mov
mov
mov
push
test
jl
ja
add
fwait
mov
xor
jl
lods
int
mov
jb
inc
comiss
cmpsl
sbb
int
out
sub
fmull
jl
xchg
test
cmp
mov
sahf
xchg
or
jl
or
and
mov
sbb
inc
inc
push
rep
lret
mov
lock
jnp
push
cmp
les
decb
push
clc
scas
fildll
enter
into
jo
adc
push
or
int
jmp
in
push
push
jmp
stc
movsl
clc
pop
mov
scas
dec
inc
out
mov
or
adc
and
adc
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
mov
mov
mov
mov
movl
movl
mov
sbb
mov
xorl
push
push
push
orl
mov
xor
mov
add
orl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
jmp
jl
inc
movsb
jecxz
popa
xor
rcrl
sub
push
jg
jle
inc
outsb
movsl
fisubl
mov
or
rorb
mov
dec
inc
ja
repz
test
mov
mov
stc
insb
nop
pop
add
inc
cltd
dec
sub
cmp
lcall
and
add
push
add
stc
stos
stc
dec
sahf
cmp
lods
mov
je
cs
mov
js
mov
mov
jnp
outsl
dec
aas
push
xor
cmp
mov
jns
and
add
add
imulb
push
inc
pop
rcrl
std
insb
daa
bound
pop
mov
add
pushf
mov
lcall
loopne
ret
syscall
xchg
jae
xor
or
mov
pop
or
adc
jp
stc
int
push
mov
pop
in
ja
xchg
fimuls
rcrb
push
mov
pop
sbb
mov
dec
test
mov
jge
inc
loope
jp
or
or
xchg
sub
pop
sub
ja
lahf
mov
jae
cli
rolb
or
inc
ror
out
xchg
cld
rcrl
sbb
fwait
js
repnz
outsl
cltd
sti
mov
hlt
push
pop
mov
inc
mov
cmp
cmp
mov
cmovg
jae
aad
pop
mov
in
lret
jo
sub
inc
push
xchg
cmp
js
ficoms
int3
ficoms
div
loop
aad
sub
dec
pop
test
lds
jp
inc
sub
jnp
mov
out
jnp
xor
mov
push
test
cmp
stc
sbb
cmp
sbbb
lret
js
sub
xor
int3
xor
fucomi
inc
add
add
add
add
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
neg
movl
mov
or
movl
mov
andl
xor
add
mov
sbbl
movl
sub
movb
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
mov
mov
sbbl
xor
sbbl
add
incl
push
xor
xor
xor
mov
subl
xor
orl
add
push
or
mov
orl
xor
notl
add
adcl
push
sbbl
lea
push
decl
pushl
subl
pushl
andl
call
test
je
lea
sbbl
push
movzbl
sbb
mov
jmp
xor
sbb
repnz
test
sbb
jle
jg
jle
cld
cmp
sub
mov
imul
insb
bound
cli
cld
or
mov
aad
shlb
push
inc
push
mov
mov
xor
jp
push
sbb
add
jns
xchg
mov
sub
xchg
int3
out
addr16
sti
xchg
in
rcl
sbb
dec
add
out
out
jmp
ret
add
hlt
sub
jg
push
lret
and
inc
push
xchg
push
mov
push
leave
mov
xchg
stc
push
ja
cwtl
in
test
fimuls
aaa
add
adc
lods
inc
out
mov
mov
fs
das
scas
lods
popa
out
scas
mov
lret
aas
sub
sub
cmp
into
ret
lds
mov
jle
dec
sti
push
clc
outsb
cmp
adc
sbb
mov
and
xchg
cltd
adc
sbb
clc
adc
js
imul
imulb
mov
xlat
push
js
mov
rcrl
mov
sub
int
mov
pop
dec
insl
cltd
lock
cmp
hlt
mov
xlat
mov
cmp
and
jo
mov
and
pop
xchg
lahf
inc
imul
inc
mov
push
nop
sbb
scas
sahf
dec
into
lret
add
sub
call
mov
push
cmc
pop
sbbb
enter
mov
mov
xchg
mov
movsl
mov
jle
aam
jno
cmp
xchg
adc
add
push
cmpsl
enter
es
inc
or
mov
outsl
inc
sets
testb
sbb
subb
lret
leave
icebp
repz
imul
xor
add
push
mov
add
push
jmp
jne
adc
flds
mov
daa
es
pusha
sub
push
jg
jle
repnz
cs
sub
mov
repnz
mov
xchg
aaa
push
pushf
xor
movd
loop
mov
fcompl
cwtl
pop
icebp
daa
and
aas
mov
fisubrl
sbb
push
lahf
je,pn
idivb
xchg
aam
scas
out
rcrl
stc
inc
dec
xor
or
jecxz
fisttpl
push
lods
xor
xor
mov
test
mov
inc
pop
sbb
mov
es
mov
adc
pop
cmp
add
jmp
push
cmp
sahf
in
xchg
adc
jmp
std
dec
jnp
insb
dec
mov
pop
aaa
mov
dec
push
xor
sbb
in
mov
inc
pop
or
mov
xchg
out
fildll
pop
lcall
ret
out
ds
lock
mov
inc
test
push
cmpsl
mov
push
sub
adc
push
push
loope
ficompl
imul
xchg
mov
jp
jecxz
jbe
mov
cmpsb
shrl
push
pop
mov
and
jge
stos
xchg
push
inc
mov
insb
mov
pop
mov
pop
mov
shlb
sub
adc
test
xor
jae
lret
sub
out
lock
sbb
and
sub
mov
pop
mov
sbb
xchg
jns
stc
sbb
mov
cmp
repz
scas
mov
adc
cmpsl
subb
jns
xor
aam
jno
inc
out
mov
popa
ljmp
sti
xor
sbb
pop
jno
dec
repz
lret
xchg
loope
dec
out
push
mov
mov
outsl
inc
pop
in
inc
lock
pushl
call
mov
cmpl
lea
jmp
xchg
leave
rorl
mov
into
repnz
aaa
jle
push
jg
jle
test
data16
adc
cmp
mov
sbb
mov
add
sbb
pop
fnstsw
jp
ljmp
inc
pop
cmp
mov
mov
insl
and
pop
inc
sbb
fcomps
mov
hlt
adc
shll
xchg
and
pop
ret
imul
and
mov
and
jle
mov
xchg
push
insb
sti
pop
stos
lds
jl
lods
out
add
or
mov
addr16
xor
fldt
sbb
int3
adc
jl
xor
xchg
test
mov
cmp
shr
jl
xor
add
cmp
or
mov
addr16
in
jb
sub
push
mov
sbb
xchg
js
sub
data16
xchg
mov
sbb
loop
pop
or
loop
movsl
cmp
dec
lahf
sbb
sub
lahf
out
out
xchg
add
lds
xor
push
inc
std
es
xor
inc
pop
cmp
cmp
cmp
mov
into
mov
shll
push
fwait
cmp
or
jae
fstpl
xchg
lock
les
das
loope
push
iret
fmuls
jnp
inc
add
push
shld
ficoms
popa
adc
jns
repz
fcomps
movsl
fldenv
mov
divl
or
jb
jne
inc
nop
push
stos
fnstenv
and
mov
sbb
jl
cmpsb
xchg
or
pop
lcall
jmp
jo
rol
into
sbb
xchg
or
add
repz
add
hlt
pushf
dec
mov
inc
and
mov
jle
push
jg
jle
mov
push
jmp
pop
hlt
test
in
ss
out
jbe
addr16
stos
cmpsl
cmp
fmull
sub
jne
push
cmp
mov
mov
add
and
stos
cmpsl
fwait
stc
mov
mov
je
cmp
les
xor
sub
rcrl
fsubr
add
mov
fwait
sarb
xor
and
mov
push
notl
cmpsb
les
std
mov
call
adc
fcom
jbe
icebp
out
rclb
stc
into
mov
pop
xor
lock
lea
pop
inc
add
enter
adc
mov
sahf
cmp
sti
mov
sbb
movsb
or
std
xchg
and
pop
lods
outsl
pop
mov
ss
addl
pop
xor
and
movsl
rcrl
es
inc
es
lret
lea
fidivrl
rcrl
jns
int
shr
cmp
shrl
adc
ljmp
push
mov
add
cmpsb
mov
xchg
mov
rcrb
jo
pop
lahf
rol
push
jnp
imul
cmc
xchg
mov
jge
xchg
test
dec
cmp
sti
adc
or
jbe
test
scas
mov
cltd
add
neg
pop
std
jb
jb
pop
jbe
mov
jmp
lods
iret
aam
fidivrl
mov
mov
icebp
fdivs
pop
and
lock
imul
sub
ret
sahf
loope
mov
sub
sbb
jecxz
dec
mov
hlt
int3
jo
mov
xor
lcall
es
add
js
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
cmp
loope
jno
dec
add
jb
jbe
icebp
xor
push
jg
jle
mov
mov
ja
and
dec
imul
add
mov
mov
sti
xchg
push
loopne
jmp
leave
or
pop
pop
ficoml
xor
les
fbstp
mov
in
inc
inc
loope
out
ds
inc
jo
in
pop
cwtl
push
jb
cli
pushl
lret
and
jns
pop
mov
xor
cli
in
shll
sub
rorb
fwait
stos
cmp
mov
add
pop
adc
inc
in
mov
adc
scas
mov
sbb
sahf
jns
push
out
inc
inc
mov
test
push
pushf
xor
sarl
andb
sarl
out
cmp
sbb
jno
notb
mov
xchg
inc
out
dec
push
sub
fisubl
divl
pop
push
mov
call
sub
adc
push
xchg
cld
cs
mov
cmp
or
nop
sti
cld
cmp
loopne
movsl
xchg
test
ja
push
mov
je
adc
pop
pop
xor
lret
int3
aam
xor
jl
jmp
dec
jecxz
jge
popf
mov
js
loope
dec
xchg
xor
insl
ljmp
js
add
push
add
push
sti
aam
imul
test
jns
imul
sbb
fidivrs
xchg
pop
or
ret
adc
xchg
js
aas
rcrb
push
mov
aaa
jl
iret
icebp
xchg
inc
dec
test
mov
pop
push
lea
nop
inc
subb
jge
test
scas
jge
push
mov
cmp
lahf
ds
push
xchg
movsb
fdivl
les
jmp
lret
bound
aaa
imul
pushl
jmp
push
mov
dec
sub
enter
test
aam
jle
push
jg
jle
mov
add
les
sahf
rorb
sub
lahf
les
ja
mov
mov
mov
sbb
bound
aas
enter
enter
enter
xlat
insb
push
shl
sub
loopne
sub
cltd
sbb
mov
add
xchg
sub
ja
jge
push
test
lods
test
dec
inc
int
adc
test
addr16
lahf
inc
sub
mov
incl
out
pushf
xor
push
jnp
in
sbb
outsb
jmp
out
lds
jp
cmp
sti
sub
jmp
cwtl
fiadds
mov
mov
jmp
repnz
lods
jns
imul
push
dec
sbb
mov
rcrl
jle
in
test
and
cmp
cmp
mov
adc
in
movsl
lcall
out
sti
xlat
ljmp
xchg
cltd
add
lds
lahf
jno
jbe
int
sarb
sub
fisttps
xor
fisubrs
arpl
mov
mov
lods
sbb
out
mov
addr16
daa
xchg
adc
call
stc
inc
push
in
xor
test
pop
stos
pop
out
mov
xchg
mov
imul
sbb
jnp
mov
xor
jmp
dec
inc
aad
fsubrs
push
fldl2e
mov
nop
push
clc
mov
dec
scas
mov
mov
xchg
or
dec
icebp
xor
adc
xchg
cmp
lea
push
in
rorl
inc
cmp
push
jge
mov
mov
incl
add
add
inc
in
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
jmp
fwait
imul
shlb
jae
sbb
sub
jle
push
jg
jle
clc
pop
dec
mov
fisttpl
pop
aas
sub
in
neg
pop
dec
es
jns
out
xchg
insl
mov
inc
lods
sbb
push
sbb
mov
push
ret
xlat
inc
push
gs
jno
pop
les
movsl
jecxz
pop
roll
fdivp
push
aam
mov
mov
test
out
ror
cld
aaa
sbb
js
push
imul
cltd
pop
jp
mov
and
inc
jb
dec
xor
dec
nop
xchg
pop
adc
dec
or
or
add
add
aad
xor
inc
inc
mov
js
inc
pop
mov
out
xlat
mov
xor
aad
adc
test
cmpl
jo
lods
dec
shlb
jg
or
sub
jle
sbb
or
adc
dec
daa
out
cltd
loop
mov
leave
cmp
mov
pushf
je
lock
stos
add
dec
pop
rcll
jmp
pop
divl
jb
cmp
jmp
push
outsl
or
xor
insb
and
sub
fdivrs
push
xlat
xor
les
inc
jns
jbe
pushf
lock
push
jb
and
ret
mov
fcoms
adc
mov
or
lock
leave
sbb
jle
sub
adc
lea
sub
or
loopne
insl
cwtl
aas
shrb
in
in
cltd
lds
mov
cmp
popf
xchg
mov
adc
fldenv
xlat
aas
std
lret
push
stos
adc
lods
int
push
cmc
xchg
js
or
sti
add
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
jmp
xchg
lods
sbb
mov
ljmp
push
cmp
jle
inc
cmc
rcll
popa
ficompl
lcall
push
popf
repnz
xchg
mov
jmp
enter
xlat
sti
jns,pt
call
or
add
lods
push
out
cmp
enter
js
rclb
insb
inc
pop
nop
lea
add
fcoml
sbb
leave
pop
cmp
jo
inc
mov
pop
inc
dec
jo
and
dec
ffree
or
add
inc
into
push
es
mov
jg
enter
sub
lods
and
addr16
push
es
adc
cmpsb
sahf
cwtl
cmp
rorb
js
in
and
hlt
int
pop
bound
cmpsl
lret
pop
pop
loopne
mov
loopne
inc
ss
adc
rcr
mov
inc
add
adc
push
jmp
stos
outsb
daa
xor
xor
popf
lods
mov
mov
shl
or
mov
jecxz
lods
jae
cmpsb
ja
cmpsl
pop
xchg
inc
mov
mov
push
jmp
cmpsb
lock
leave
shll
mov
jmp
xor
fst
or
repnz
enter
jl
mov
adc
sub
loopne
inc
inc
sub
sub
int3
mov
out
lahf
add
insb
movsb
mov
xchg
adcl
scas
stos
out
or
sub
aas
pushf
aad
sub
sahf
pop
fdivr
shlb
push
mov
into
adc
and
sbb
in
arpl
scas
inc
cmp
mov
xlat
mov
mov
mov
loop
arpl
stos
cmp
fcomps
push
add
rcrb
test
xchg
adc
fistpl
push
cmc
inc
pop
cmp
loope
imul
or
add
pop
pop
pop
leave
ret
push
mov
sub
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movzbl
xor
mov
mov
and
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jb
or
movl
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
sub
movl
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
push
call
jmp
xor
xor
xor
add
mov
movzwl
and
mov
jmp
cld
ss
je
inc
mov
mov
les
cmp
mov
jle
dec
mov
push
mov
jmp
lods
jno
pop
out
push
xchg
mov
and
mov
or
int
cltd
outsb
mov
jg
jp
and
pop
std
mov
push
fidivl
inc
mov
hlt
fwait
push
sub
pusha
nop
shl
inc
daa
xor
mov
jbe
nop
jmp
sbb
pop
cs
xchg
loopne
adc
sysret
cmp
jp
movsb
lcall
adc
ja
addr16
addr16
rcrl
scas
xchg
jne
xchg
sbb
test
ss
push
ljmp
sbb
jns
sub
inc
add
jmp
pop
jnp
lret
mov
and
ja
mov
cmpsb
push
in
cmpsb
data16
sub
cwtl
loop
leave
cld
xor
or
sbb
sti
push
mov
xchg
jg
add
mov
xor
jmp
mov
mov
xchg
push
adc
mov
pop
in
jg
cmpsb
xchg
or
sarl
dec
dec
pop
mov
xchg
jne
mov
and
cwtl
mov
add
out
ljmp
or
imulb
pop
jge
cmp
dec
or
mov
inc
insb
repnz
push
sub
fucomi
ret
mov
fimull
mov
xchg
mov
mov
add
imul
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
jmp
xchg
sahf
icebp
jno
arpl
inc
in
icebp
cmp
mov
jle
scas
adc
shl
enter
sub
mov
stos
in
or
pop
xchg
shll
roll
test
or
and
xlat
lret
ror
cmpsb
scas
and
pop
aas
mov
adc
loopne
in
sub
aas
popf
pushl
lods
inc
xchg
lahf
mov
loopne
sti
fnstsw
fistl
icebp
incb
iret
xchg
call
mov
push
sbb
sbb
mov
push
jae
fadds
outsb
adc
or
or
ss
ficoml
int
lahf
fists
test
xlat
push
lds
daa
les
mov
cld
out
sbb
rcll
ss
jl
daa
add
push
mov
jmp
adc
mov
int
push
mov
adc
pop
mov
das
fdivrl
lds
xchg
iret
push
test
pop
aas
xor
in
mov
mov
xor
sahf
rcr
mov
jne
mov
xchg
stc
sar
inc
ljmp
hlt
and
std
stos
mov
popf
aas
sbb
mov
and
movlps
sbb
push
out
test
mov
arpl
lds
inc
xchg
sbb
or
test
test
push
jno
pop
out
jle
testb
je
jb
out
jo
or
je
outsl
jmp
addr16
dec
ja
xor
or
jbe
mov
cmp
dec
jp
mov
mov
xor
xor
add
xor
jmp
sub
fnstsw
fucomp
sub
cmp
movsl
push
or
jg
jle
inc
imul
sub
mov
xlat
hlt
out
xor
decl
hlt
stc
push
insb
loop
les
ljmp
cmp
ja
aad
jmp
cmp
aas
pop
or
jmp
int
mov
in
pop
jo
insl
sub
pop
inc
sti
dec
insl
mov
mov
sbb
test
and
or
push
lea
inc
dec
push
cmp
fisubrs
push
jecxz
ret
cmp
jns
ret
imul
addr16
dec
in
arpl
imul
ss
dec
jbe
test
mov
mov
push
aas
call
movsl
fstl
loope,pn
push
jno
loope
mov
ret
jb
mov
jnp
test
sbb
cmp
insl
orb
xor
loopne
push
dec
inc
stc
sub
lret
cmp
push
out
mov
inc
sbb
jne
aaa
xchg
faddl
mov
mov
push
push
fsubrl
dec
into
cwtl
in
push
repz
inc
fmuls
jnp
clc
cltd
pop
test
dec
xor
add
pusha
jno
and
popa
movsl
arpl
repz
adc
pop
xor
test
ficoms
andb
loope
popa
pop
or
push
push
insl
inc
or
and
int3
pop
adc
lahf
add
xlat
lret
ficoms
or
enter
xchg
xchg
mov
jo
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
movl
adc
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
push
pushl
push
push
pushl
push
pushl
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
movl
mov
xor
add
or
jmp
mov
icebp
inc
jno
mov
inc
cmp
jle
mov
jle
xchg
lahf
pushf
fisubs
xchg
jmp
pop
fs
jg
sub
mov
or
into
hlt
outsb
scas
lods
mov
repnz
rcrb
aam
loopne
or
jle
outsl
popl
ljmp
pusha
pushf
lret
mov
xorb
mov
push
xchg
inc
fiadds
sbb
and
lods
jne
push
sub
aad
stos
shll
dec
cltd
or
std
mov
lds
inc
movsl
shlb
daa
outsb
in
js
fwait
ret
mov
int
jge
frstor
mulb
hlt
orb
movsb
lods
push
xchg
and
out
test
add
push
inc
jno
cld
xor
push
or
dec
adc
nop
xchg
mov
or
dec
shll
in
mov
mov
push
mov
adc
lea
sbb
adc
xchg
mov
and
inc
test
mov
mov
adc
and
scas
ss
xor
std
push
cmp
sub
push
arpl
test
mov
ficoml
enter
loopne
int
fiadds
in
inc
aaa
adc
pop
add
arpl
xchg
mov
or
mov
adc
jae
int
scas
test
cmc
add
cmpsl
cmp
subl
mov
inc
popf
cmp
xor
sub
mov
pop
xchg
adc
arpl
aad
mov
jge
orl
add
movl
cmp
movl
jmp
notl
push
jb
out
or
xorl
mov
jle
test
add
jl
pop
dec
jmp
or
inc
or
cmp
jg
add
mov
mov
lcall
pop
sub
dec
dec
out
pmulhw
imul
add
addr16
outsl
mov
pop
mov
sti
icebp
push
test
cmp
pop
sub
add
mov
cmpsl
mov
add
lea
add
mov
addl
dec
ret
mov
push
xor
sub
movsl
pop
jcxz
push
cmp
mov
ss
mov
jns
xorb
fadd
add
lods
fs
mov
adc
ret
adc
ficomps
inc
inc
push
and
test
mov
sbbb
ret
adc
or
hlt
paddq
sbb
add
add
inc
dec
mov
call
mov
aad
mulb
xlat
jbe
cmpsl
inc
jbe
sub
or
inc
adc
inc
lock
pop
pop
out
mov
jno
inc
icebp
inc
xchg
xor
or
les
incb
fdivrs
or
push
ss
sbb
xchg
pop
jb
xor
jns
add
imul
mov
pushf
bound
cli
fcomi
sbb
das
add
aaa
mov
add
push
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
sub
jmp
or
icebp
jno
out
jns
aam
leave
sbb
jle
mov
jle
lahf
pop
loopne
adc
out
into
mov
jnp
pop
pushf
pop
aaa
sbb
xor
lods
fiaddl
or
idivb
dec
xchg
mov
xchg
jp
adc
push
out
dec
sub
cltd
into
mov
sub
mov
fdivrl
add
sbb
add
pop
mov
cmp
xor
gs
or
leave
cmp
adcl
adc
jg
fisubrl
inc
jmp
dec
dec
inc
sub
ss
icebp
mov
outsl
add
test
mov
gs
ja
pop
xor
or
xchg
dec
jl
in
jg
push
popf
out
push
jge
scas
scas
movsb
cmp
int3
pop
orl
nop
ss
push
mov
sub
popf
jno
insb
ljmp
arpl
and
ret
repnz
sub
pop
outsl
insb
xor
mov
in
pusha
inc
mov
jae
hlt
in
sbb
adc
rcr
jge
mov
lods
loop
in
repz
pop
mov
test
out
mov
jg
mov
call
sahf
xor
jmp
push
pushf
push
inc
aam
test
sbb
add
or
dec
je
cmp
mov
cmp
dec
xlat
fwait
fwait
lock
aam
or
stos
pop
jns
fwait
outsl
mov
and
call
js
add
out
mov
mov
xchg
nop
in
sahf
sub
add
pop
movb
mov
adcl
xor
add
cmp
movl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
inc
mov
mov
xor
xor
sub
add
add
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
imul
mov
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
ret
movsl
shll
dec
call
shll
ffree
jle
mov
jle
nop
repnz
les
cmp
scas
mov
adc
ljmp
incl
jge
test
ficomps
mov
imul
rolb
imul
jmp
xchg
scas
sub
cmp
outsl
pusha
dec
orl
insb
add
pop
movb
mov
insl
cmp
sub
mov
mov
std
daa
aam
ds
jno
or
mov
dec
aam
int
mov
adc
and
jb
sbb
push
adc
shll
cld
or
fidivs
dec
loop
xor
jg
jno
in
rorl
int3
mov
out
dec
lods
stos
mov
std
pop
dec
cwtl
loopne
scas
adc
xorb
jnp
inc
lahf
aad
jns
lahf
fmuls
lods
ljmp
fldt
nop
or
movsb
out
addr16
push
call
cmpsl
pop
lret
inc
mov
push
xchg
scas
les
test
out
lods
orb
cmp
lock
int
and
std
jp
pop
mov
iret
out
mov
js
inc
mov
sti
mov
mov
dec
ds
outsl
mov
loope
mov
xchg
and
jp
idivb
pop
lds
or
fsubrl
aas
sub
sbb
push
pop
and
pop
jmp
imul
loop
inc
pushf
pop
cmp
and
outsb
testl
fistpll
fimull
xchg
add
add
or
add
cld
jmp
mov
dec
jno
les
lcall
jle
js
mov
dec
lret
push
jb
out
mov
cld
lret
ja
add
loope
scas
cwtl
lea
push
add
mov
mov
jmp
pop
loope
jmp
scas
pop
push
inc
out
aas
sub
outsl
mov
xor
scas
push
push
sti
scas
push
mov
stos
or
mov
cld
inc
hlt
dec
imul
rcrl
push
repnz
push
repz
xchg
jnp
stos
jmp
andb
sbb
cmpsl
aaa
pop
rcrw
fsubrs
push
jae
dec
mov
add
dec
scas
loope
jne
mov
inc
xor
out
pushf
pop
stc
movsl
roll
loop,pt
into
lret
mov
cmpsl
out
pushf
data16
push
sbb
es
stos
push
std
stc
or
add
jle
push
in
jge
push
push
mov
stos
inc
mov
sub
pop
push
or
pushf
cltd
or
inc
sub
adc
int3
sbb
push
push
jns
test
xor
stos
mov
or
insl
adc
lods
ret
enter
add
jp
add
mov
lods
push
popa
push
and
mov
test
ljmp
sub
out
sub
outsl
dec
fnstcw
add
jne
pop
jl
orb
xor
cmp
in
add
xor
add
add
imul
mov
mov
sub
cmp
jmp
imul
mov
jno
loopne
cmp
test
jle
mov
jle
and
sarb
orb
adc
and
pop
hlt
pop
dec
or
jbe
lds
mov
in
mov
mov
lcall
jp
imul
outsl
push
imul
sbb
aad
xchg
mov
xchg
cwtl
push
ficoms
scas
popa
mov
xchg
push
aam
cmp
movsl
dec
jbe
out
xor
push
adc
mov
fcomps
in
ret
add
push
sbb
rorb
mov
sub
cwtl
mov
shll
push
jbe
lea
mov
test
cmc
or
fs
fadds
arpl
rcrl
outsl
mov
cmpsl
mov
mov
mov
sub
mov
fwait
popf
mov
inc
fs
loop
mov
rcll
pop
and
cmpsl
in
mov
jp
dec
inc
or
lcall
imul
pop
pop
and
outsl
push
mov
test
ficoms
sti
mov
push
fstps
mov
js
sub
dec
push
in
inc
pop
sub
cmp
pusha
xchg
in
addr16
inc
inc
iret
sub
repnz
fs
push
rcll
stos
cltd
sbb
sti
mov
ficomps
stc
inc
lahf
mov
xchg
mov
jl
cmpsb
pop
mov
mov
or
add
mov
jmp
mov
mov
xor
xor
jmp
in
test
call
iret
mov
jle
mov
jle
mov
push
xchg
js
fldt
adc
insb
out
sahf
out
out
in
insb
addr16
orb
lret
xchg
fwait
adc
stc
lods
or
mov
lock
mov
not
lods
gs
out
add
mov
mov
mov
test
jecxz
jno
in
arpl
or
cmc
mov
test
jns
aas
push
mov
add
inc
push
orb
stc
mov
pop
sbb
in
push
mov
mov
scas
adc
pop
sub
sub
xor
jmp
pop
lret
lcall
push
shlb
dec
mov
cwtl
mov
jp
int3
lret
pop
movsl
and
punpckhdq
xchg
xor
jb
xchg
cmpsb
inc
mov
das
mov
fisttpll
push
stc
mov
imul
add
xchg
shlb
or
cmp
pop
sub
arpl
cs
mov
xchg
sbb
add
rorb
inc
jbe
mov
testb
loope
mov
push
pop
pop
mov
push
fsts
int
xor
loop
scas
cltd
movsb
sub
popa
les
daa
sub
hlt
push
mov
pop
sti
addl
xchg
lock
xchg
lret
fists
negl
jb
fstpl
fimull
mov
xlat
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
jmp
push
mov
filds
jle
mov
jle
mov
test
mov
ret
stc
pusha
push
es
pushf
dec
call
mov
incl
movsl
mov
jg
jge
pusha
pop
xlat
arpl
int3
pop
testl
push
jle
loope
inc
scas
inc
cmp
lahf
add
xchg
movsl
sahf
repz
adc
cld
jmp
xchg
inc
jl
sbb
ror
insl
xor
cmpsb
and
aam
les
stos
lock
stos
jb
adc
dec
das
dec
sbb
hlt
and
testb
ficomps
lods
fsubs
daa
xchg
jge
dec
jmp
xchg
cli
fabs
out
fdivl
dec
loope
das
fs
adc
cmp
dec
mull
dec
test
into
inc
loope
mov
stos
dec
jl
ror
sub
mov
jno
ss
xor
inc
call
or
jge
jge
lock
sub
ds
fnsave
shll
test
repz
dec
loop
sti
or
jno
dec
inc
xchg
aam
jle
aad
sub
into
sub
dec
rorb
xchg
mov
andl
jae
pop
mov
mov
rorb
mov
in
decl
pop
popf
mov
push
inc
dec
xor
add
adc
or
out
inc
stos
in
clc
je
hlt
and
outsl
rcrb
sub
mov
out
cwtl
push
inc
in
ret
dec
dec
mov
test
mov
jmp
dec
adc
add
push
push
jl
ljmp
enter
jg
jle
sahf
add
imul
pop
lods
and
dec
popa
ret
enter
mov
addr16
inc
call
push
cmpsl
or
push
int3
push
in
daa
leave
pop
clc
xchg
mov
out
incb
cmp
cmp
insb
sarl
adc
int3
mov
jl
in
negb
xchg
mov
xor
sahf
mov
movsb
cmpl
sub
pusha
inc
pop
bound
add
cmp
xchg
jmp
int3
rcr
fbld
iret
popa
aaa
sbbl
mov
lcall
insb
mov
cmp
stos
lahf
inc
fwait
xchg
inc
movsl
push
fsts
xor
shrb
daa
sub
sub
das
xchg
lahf
dec
push
in
cmp
loop
stos
mov
sbb
icebp
test
cmp
movsb
dec
hlt
push
ret
adc
mov
dec
movsb
adc
les
jne
sti
ljmp
xor
jle
cld
xchg
dec
call
cmp
sahf
adc
jge,pt
inc
int
dec
sti
mov
xor
rol
aas
fndisi(8087
daa
and
out
into
adc
decb
test
lock
scas
or
cmc
fnstcw
movsb
sti
sub
stos
push
mov
or
xor
adc
jle
imul
or
fisttps
pop
xchg
call
adc
cwtl
hlt
adc
les
or
stc
inc
call
pop
adc
cmp
pop
mov
push
imul
mov
mov
sub
jmp
and
xor
ljmp
jle
jg
jle
adc
adc
pop
imul
xchg
aad
cmc
cmp
sub
into
mov
out
aam
out
jns
sbbl
adc
jp
pop
jo
jae
jo
shlb
add
xor
rcl
ret
and
sbb
lock
sub
test
sbb
out
xor
mov
pusha
cmp
cmc
pop
xlat
pop
lods
xchg
mov
enter
aad
push
xor
sub
sub
rcl
insl
int3
imul
xor
rorl
or
cmp
test
test
movsl
sub
inc
xchg
orb
movsb
pop
cmc
cltd
mov
imul
and
xchg
shrb
xchg
repnz
mov
mov
cmp
and
xor
xchg
xchg
inc
cmp
cmp
stos
push
mov
inc
dec
pop
jmp
flds
sub
mov
cmp
out
xlat
and
dec
sahf
xor
popf
cmp
ja
cs
cld
xor
xor
ss
data16
lret
pop
or
inc
and
lds
rcrb
sahf
dec
pushf
adc
popa
pop
and
jnp
in
in
gs
push
or
and
sahf
iret
mov
in
shll
add
pop
stc
mov
inc
fsts
pusha
and
push
inc
nop
xlat
xchg
mov
or
stc
inc
xchg
rorl
xor
fimull
xchg
add
add
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
jmp
add
jne
mov
mov
loope
jle
mov
jle
adc
jle
xchg
fstl
cmp
test
int
mov
sub
xchg
pop
xchg
xchg
adc
push
push
inc
jo
insl
jnp
xchg
dec
rcll
rcrl
fwait
mov
es
test
sub
add
cltd
xchg
and
cmpsb
push
xchg
stos
inc
movsb
lods
inc
stc
jno
dec
mov
stos
or
imul
sub
loope
dec
daa
out
push
sbb
pusha
scas
xorl
lahf
and
loop
enter
add
jmp
aaa
mov
jne
test
shll
mov
push
mov
mov
xor
cld
arpl
cwtl
cmp
addl
pusha
push
out
out
pop
sbb
mov
aam
sub
pop
mov
popf
inc
cmpl
or
in
in
aad
xchg
jo
test
jecxz
adc
ljmp
fldl
inc
jecxz
inc
cmp
clc
or
or
push
out
jge
inc
xor
mov
xor
sub
arpl
mov
lret
daa
jno
cmpsb
inc
xchg
imul
jae
shrb
add
mov
shll
mov
adc
adcl
daa
and
mov
out
or
ror
mov
jnp
aas
mov
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
jmp
mov
je
jmp
lret
ja
aad
jle
jg
jle
out
cld
jno
stos
cmp
inc
jbe
cli
push
sub
lds
pop
pushf
xchg
mov
movsb
or
imul
mov
pop
stos
xchg
les
repz
stc
loopne
adc
xchg
inc
jae
outsb
mov
divl
std
inc
and
or
adc
leave
clc
je
mov
int
mov
add
inc
jmp
jnp
sbb
push
in
outsb
xchg
jae
out
and
loope
inc
mov
inc
std
mov
jo
inc
inc
mov
insl
jl
xor
in
cmp
cli
roll
cmp
icebp
mov
repnz
mov
jmp
adc
adc
pop
mov
pushf
loop
stc
aam
shll
or
push
cmp
test
hlt
xchg
push
sub
mov
adc
bound
divl
mov
mov
pop
push
in
mov
pop
push
std
add
push
mulb
mov
das
sbb
dec
cwtl
jns
ja
inc
xchg
enter
push
adc
clc
mov
les
push
sti
sub
aas
das
mov
aad
scas
push
ret
mov
test
jae
jp
dec
sub
xor
xor
sub
lods
add
sar
ret
push
int
mov
mov
inc
sub
inc
mov
mov
pop
lock
dec
push
pop
rcrb
fwait
test
movsl
pop
imul
ljmp
sti
mov
xor
sub
jmp
decl
xor
xchg
lea
cmp
jle
mov
jle
xchg
je
inc
stc
sub
ja
pushf
sbb
sbb
roll
push
int
in
mov
rcll
cmp
xchg
addr16
add
test
loopne
or
movsb
adc
add
mov
fbld
fisubs
jge
jb
push
mov
and
rclb
test
pop
subl
push
push
test
arpl
mov
cmp
dec
jns
das
adc
imul
loop
rorb
add
stc
mov
adc
cmp
pop
jp
xor
fnsave
int3
and
pusha
adc
movsl
jnp
stos
mov
repnz
sbb
or
mov
jle
jbe
push
mov
shlb
stc
dec
pop
pop
aaa
stos
sub
dec
std
or
or
and
lahf
in
mov
mov
insl
jbe
sbb
push
sub
pop
and
xchg
stos
jo
in
ja
push
mov
lahf
xchg
test
or
aaa
xchg
pop
xor
mov
push
xor
mov
out
insb
jl
pop
roll
fisubl
mov
jmp
fisubs
mov
jl
std
push
or
mov
or
sbb
mov
daa
std
cmp
aam
push
ss
ret
sti
mov
sbb
scas
jle
fdivs
add
xchg
sti
fidivrl
jb
push
int3
jl
cs
mov
and
cmc
popf
jl
lods
xchg
push
aaa
inc
adc
pop
fwait
jb
add
cli
jbe
mov
mov
xor
add
imul
mov
xor
jmp
and
inc
xor
ret
das
xorl
and
jg
jle
mov
mov
mov
xor
int
lgs
push
inc
jmp
pop
fcmovnu
je
imul
jp
fs
sbb
jae
addr16
stc
xchg
push
lret
daa
xor
into
fwait
mov
rcll
lods
imul
iret
xor
adc
out
inc
enter
fimull
movl
sbb
roll
ss
push
bnd
xor
and
sub
mov
stos
mov
test
sbb
sub
adc
mov
dec
add
xor
pusha
push
cmp
sbb
cli
sub
repz
pop
sbb
mov
mov
jmp
pop
jecxz
xor
popf
movsl
or
rcrl
pop
push
sub
in
cltd
adcl
jmp
mov
and
sub
xlat
cltd
jno
cmpsb
xor
and
or
adc
imul
in
ficoms
cmp
add
insb
cmp
clc
xor
push
popa
int
popf
fs
mov
cs
sbb
lret
cs
mov
addl
loopne
orb
pinsrw
sub
push
repnz
testl
jo
les
xor
sbb
xchg
push
pop
stos
or
jecxz
rclb
jae
xor
mov
add
sub
fiadds
xlat
mov
lea
mov
mov
xor
mov
sub
add
mov
jmp
adc
das
test
xor
mov
lods
push
and
sarl
mov
jle
push
jle
jmp
mov
mov
and
aaa
fcoms
sbb
jmp
iret
adc
mov
test
xor
lods
lods
jmp
fwait
lret
xchg
les
scas
inc
inc
lods
mov
and
out
push
jle
repz
xor
ja
jmp
loopne
pusha
dec
dec
adc
aam
xor
popf
dec
ficompl
jbe
pop
xchg
jmp
sub
or
mov
adc
outsb
subb
jecxz
imul
test
push
pop
ja
xor
ret
cmp
mov
push
inc
xchg
lahf
daa
jno
rclb
inc
adc
dec
push
mov
pop
cwtl
push
jne
cmp
fisubl
loope
sub
sbb
ja
fwait
rcrl
jno
sbb
xchg
rolb
adc
les
std
hlt
pushf
mov
shll
insl
je
and
jl
call
pop
sub
fimuls
push
cmp
ljmp
push
add
in
ret
jae
imul
xchg
or
jg
incl
mov
repnz
loopne
stos
test
push
mov
inc
mov
pusha
out
ljmp
loopne
mov
jg
jg
mov
movsb
fidivs
cltd
lods
adc
pop
popf
push
rcll
jns
mov
aam
mov
insb
popf
xchg
pop
xor
adc
xchg
loope,pt
pop
clc
xor
jmp
or
addr16
jne
mov
mov
test
xchg
int
jle
mov
jle
xchg
sbb
jb
cltd
mov
xchg
push
pushf
or
gs
inc
push
sahf
cmp
imul
aam
xchg
cmpsb
add
fwait
je
lock
xor
and
icebp
xchg
mov
into
imul
lret
cmpsl
clc
insb
mov
fidivl
xchg
xchg
xlat
sbb
push
pop
push
inc
or
jge
lret
lahf
mov
push
sbb
pushf
add
fwait
in
cmpsl
xor
push
pop
jg
add
mov
decb
jo
outsb
sbb
cld
push
or
cld
pop
jmp
mov
xor
inc
push
mov
and
jecxz
shrb
das
in
jle
repz
xchg
and
adc
jmp
ljmp
lcall
fsub
outsl
pop
cmp
in
xor
jp
dec
pop
icebp
fsubs
push
fisubs
mov
xlat
outsb
mov
int
push
nop
xor
jnp
test
js
inc
lret
mov
test
pop
mov
xchg
sbb
ds
add
add
arpl
pusha
push
adc
xlat
fnstcw
hlt
lock
hlt
add
movsb
sub
jmp
pop
test
mov
pop
test
sahf
shrb
jne
mov
incl
fisubs
jmp
or
loop
je
ficoml
rorl
xor
add
and
icebp
xorl
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
call
andl
xor
movl
cmp
movl
jne
cmp
movl
jne
push
call
sbbl
push
orl
call
adcl
test
je
movl
push
xorl
push
orl
call
push
mov
mov
and
mov
movl
adc
lea
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
subl
mov
lea
mov
mov
sbb
mov
mov
mov
mov
mov
and
mov
orl
push
add
mov
adcl
xor
orl
push
neg
mov
subl
add
movl
mov
mov
mov
cmp
mov
movl
je
and
mov
addl
xor
add
orl
imul
mov
jmp
push
call
adcl
test
je
xor
movl
jmp
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
add
mov
mov
adc
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
notl
mov
xor
add
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
xor
addl
add
movl
cmp
movl
jne
sbbl
pushl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
push
call
mov
dec
mov
jmp
mov
mov
sub
add
mov
mov
xorl
mov
sub
mov
mov
xor
mov
mov
add
mov
mov
mov
movl
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
pushl
push
push
push
call
cmpl
jb
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jb
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
xorl
push
push
mov
xor
xor
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
or
jmp
pop
push
lods
sahf
mov
push
push
in
xchg
pop
fdivrl
jge,pn
jle
mov
in
das
shl
js
mov
lret
mov
loope
lahf
js
adc
cmpsl
xor
int3
push
dec
dec
ret
popf
mov
sar
push
push
xor
jnp
sub
dec
jge
xor
pop
int
adc
je
stos
imul
fildll
mov
push
sbb
push
pusha
fisubs
and
or
adc
cmp
movsl
inc
fistpl
add
cmpsl
and
cltd
js
fwait
popa
dec
mov
jnp
mov
xchg
push
and
orb
lret
int3
js
xchg
xor
pop
test
inc
cld
jp
je
incb
sahf
jnp
cld
sbb
adc
movsl
mov
stc
pop
push
xor
push
iret
in
scas
jne
ret
in
pop
push
pop
mov
mull
lds
lods
out
mov
fidivl
lods
cmp
dec
xor
dec
sbb
and
push
cs
pop
mov
dec
leave
stos
mov
rorl
aaa
xor
mov
lods
cmp
adc
lahf
movsl
dec
add
adc
data16
push
adc
cmp
jge
popa
stos
jle
sbb
xor
push
sbb
pushf
xor
sahf
add
negl
xor
xchg
jge
cmpsw
and
data16
stc
push
sub
or
jb
push
jg
js
cmpsb
jl
and
clc
scas
daa
js
lods
out
adc
scas
xor
test
out
cmp
cli
jl
jecxz
and
rcl
dec
clc
lock
movsl
or
inc
xchg
ficoms
jecxz
je
dec
jno
add
test
hlt
jo
fs
xchg
fnstenv
mov
and
loop
mov
mov
inc
mov
jne
fs
call
pop
dec
fldl
ds
mov
push
sbb
pop
inc
fistps
jno
mov
xchg
pop
icebp
add
js
movsl
stos
dec
push
in
mov
add
mov
sub
push
inc
addr16
repz
mov
je
les
add
rcr
xchg
test
gs
add
cmp
popa
addb
jge
push
mov
sub
fucomp
lea
xorl
call
ja
call
sub
dec
adc
pushf
fbld
scas
jmp
lahf
jnp
stos
sub
pop
test
cli
lock
jmp
add
mov
and
jp
cmp
push
addr16
ret
shlb
out
xor
gs
dec
out
mov
mov
cwtl
mov
shll
xor
cmp
lock
fdivrs
outsb
ds
in
es
test
in
push
gs
pusha
cltd
lea
or
iret
sbb
lods
push
scas
adc
loopne
jae
inc
out
or
and
mov
outsl
aaa
movsb
mov
add
mov
add
mov
mov
addl
lea
sub
mov
movzwl
and
mov
addl
mov
jmp
scas
mov
push
jb
mov
push
fdivrs
jge,pn
jle
pop
mov
sub
pop
call
and
jg
cmp
aas
xor
rcll
mov
jno
js
adc
test
in
mov
in
cmp
xor
pop
push
inc
pop
les
sti
decb
sbb
push
adc
test
and
cld
loop
nop
out
popa
mov
xor
flds
sahf
sbb
lods
sbb
mov
adc
fidivs
jae
xor
test
hlt
adc
add
bound
test
or
push
incl
pop
mov
lret
sub
cmpsb
or
dec
xchg
sahf
pop
jo
push
inc
adc
mov
jecxz
test
out
stc
out
popf
pop
popa
push
adcl
jno
sub
outsl
mov
ljmp
mov
push
push
fiaddl
jle
jl
ffree
lcall
xchg
cmpsl
cmp
test
repz
cmp
xor
cltd
ss
inc
popa
test
cmp
jmp
add
xchg
mov
fimull
test
rclb
pop
out
xchg
add
xchg
fimuls
aam
push
test
xchg
pop
aad
ljmp
bound
inc
push
in
jnp
pop
shlb
add
sarb
pop
ror
fstps
jae
xchg
ja
add
xor
or
aam
es
in
stos
popf
sahf
fsubrp
push
adc
or
repnz
adc
xor
out
adc
mov
and
or
xor
jo
xchg
sub
pop
mov
or
push
xor
inc
cli
xor
dec
je
mov
loopne
test
in
fldcw
rorl
lahf
ja
scas
fwait
xchg
mov
push
out
mov
cmp
push
pop
aad
push
clc
xor
rcl
mov
jmp
test
sub
sahf
sub
repz
in
nop
rcl
push
movsl
inc
push
testb
dec
out
mov
scas
jl
clc
loop
cli
cmp
cmp
out
sub
fs
push
xchg
mov
xor
jns
cmp
jae
push
sub
pusha
xchg
nop
cmpsl
lea
or
pop
imul
stos
imul
xor
xlat
mov
sbb
fistpll
or
insb
xchg
lds
push
les
inc
mov
xor
pop
test
cmpsb
outsl
push
in
repz
rcrb
cmpsb
in
xchg
pop
call
add
sbb
aad
popf
mov
data16
push
or
clc
mov
mov
call
mov
dec
call
xchg
adc
clc
lahf
add
adc
test
mov
dec
ficoms
in
call
stos
dec
or
int
mov
add
outsl
adcl
in
adc
add
add
loopne
popa
hlt
jno
jae
and
cltd
and
cmp
jle
jge,pn
jle
jg
aam
push
adc
lods
mov
daa
fstpl
dec
out
jp
sbb
mov
push
subl
mov
xchg
test
jnp
insb
cli
out
icebp
jno
jae
push
jmp
out
cli
push
pop
push
cwtl
decl
cmp
cs
dec
stos
push
pop
lods
pop
ss
inc
jp
out
xchg
shl
mov
adc
orl
sub
out
test
pop
and
flds
rcrb
les
daa
por
jecxz
push
data16
lret
int3
push
out
pop
test
xchg
hlt
ds
sbb
or
jp
and
pop
loope
sub
mov
inc
dec
ret
je
inc
mov
std
push
in
test
mov
xchg
daa
cmc
jae
xchg
jecxz
sub
push
jbe
mov
ds
adc
inc
sub
push
push
push
sbb
jae
nop
adc
mov
enter
daa
mov
pop
outsl
into
jmp
mov
arpl
adcl
dec
fnstenv
lret
fisubrl
out
lds
dec
mov
jno
idivl
bsr
sbb
or
lahf
push
inc
push
js
sbb
fimuls
xchg
aas
or
clc
cmp
dec
andb
loope
or
jle,pt
inc
repz
xchg
arpl
out
pop
adc
cmp
push
das
leave
aam
lcall
data16
sub
pop
sub
xor
in
xchg
int
jle
and
xor
pop
push
mov
jp
subl
popa
mov
bound
cmc
into
ja
lods
jbe
cltd
jecxz
gs
shll
aad
jae
mov
or
cmpsl
cmp
fcompl
outsl
sub
inc
jo
fimuls
mov
rorb
or
xor
mull
mov
dec
inc
pop
data16
aam
lods
xchg
jp
fbld
repz
sti
mov
xor
push
mov
dec
mov
push
sub
push
divb
dec
xchg
or
or
xchg
stc
cmpsl
lret
repz
jmp
leave
lods
cmp
mov
push
and
mov
out
inc
rcrb
mov
dec
loop
mov
fiaddl
insl
int
lods
sbb
sbb
or
lock
movsl
xor
lea
sub
insl
lcall
movsl
jb
fbld
mov
aaa
inc
xor
push
add
daa
or
out
dec
add
pusha
hlt
movsl
mov
call
std
jne
mov
enter
lret
out
imul
stos
scas
mov
sub
and
jle
jo
int3
sbb
lock
cwtl
mov
add
mov
inc
in
stos
pusha
into
and
sti
jge
gs
or
std
in
pop
jg
movl
add
fisttpl
sbb
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
movl
sub
jmp
shrb
mov
xor
jne
ss
rcrb
loop
jle
jge
jle
popa
lock
arpl
push
inc
mov
inc
ret
loope
dec
test
adc
movsb
mov
in
adcl
xchg
mov
fsqrt
fidivrl
cmp
in
mov
mov
inc
rolb
xlat
mov
xor
mov
das
insl
push
fidivl
xchg
pop
pop
divl
push
rcl
repnz
mov
icebp
movzwl
push
fidivl
adc
jle
add
jecxz
jecxz
in
xchg
pop
jns
xor
rolb
shl
and
int3
in
aad
stos
dec
add
repz
inc
rcrb
clc
stos
add
int3
inc
mov
mov
pop
sub
lret
repnz
inc
out
xor
push
inc
cli
test
push
inc
xor
sarl
xchg
js
push
divb
popa
jl
loopne
das
xchg
ljmp
push
cmp
xor
jle
into
jg
out
xchg
insb
dec
mov
push
lahf
pop
adc
movsb
sub
clc
das
stos
ljmp
pushf
pop
arpl
push
ds
test
fdiv
push
aas
mov
push
je
jb
pop
mov
jae
stos
cmpb
push
scas
bound
or
icebp
imul
xor
or
stos
or
jecxz
cmp
sbb
inc
fs
jge
mov
scas
push
ja
aam
or
push
dec
faddl
addr16
xchg
outsl
mov
add
fwait
roll
push
mov
call
mov
sti
jp
addr16
popf
xchg
cli
int
sarl
pop
lcall
js
and
inc
repnz
xor
mov
mov
scas
mov
cmp
pushf
xchg
daa
push
lahf
incb
rorb
pop
enter
jbe
enter
dec
pop
cltd
aad
in
aam
adc
jle
jb
jnp
aas
lret
xchg
fmuls
jne
mov
pop
ds
or
aam
stos
sub
jns
outsb
test
inc
pop
cltd
sbb
popf
dec
outsl
daa
mov
mov
mov
negb
adc
andl
filds
inc
sbb
icebp
dec
xor
out
cld
cltd
cmpsb
dec
adc
pushf
aaa
mov
movsb
add
shll
call
not
test
mov
push
push
shlb
lods
xchg
lcall
pop
pop
jno
hlt
push
nop
mov
pop
dec
jae
push
mov
adc
cmp
mov
cmpsb
push
jmp
daa
js
jno
xchg
xor
push
and
add
xor
gs
mov
outsb
pop
push
xchg
jae
and
fimuls
scas
insl
lods
out
in
push
outsb
dec
adc
dec
mov
xchg
jg
stos
aad
push
fnstenv
xchg
add
jl
fadds
je
xchg
fidivrl
out
xchg
adc
subl
inc
faddl
add
pop
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
xor
addl
add
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
fsubrl
or
pop
or
dec
cltd
loope
jle
jge
jle
xor
sub
imul
int3
jge
clc
dec
lock
sub
test
daa
cmpb
cmp
xor
mov
sahf
jmp
or
movsb
loope
std
das
mov
jne
fadd
adc
jbe
jecxz
add
pop
rclb
mov
pop
inc
adc
rcrl
add
fnsetpm(287
jl
jg
imul
cltd
mov
ljmp
sub
mov
jb
data16
adc
dec
insl
and
inc
jae
loop
cmp
negb
jp
js
test
dec
stos
ss
mov
nop
fcompl
inc
xor
sbb
loop
xchg
pop
adc
f2xm1
mov
xor
jo
or
lea
pusha
cmp
in
lret
pop
pop
cmpsl
or
mov
rcrb
popa
mov
cmc
pushf
push
push
jecxz
jb
aad
mov
mov
out
push
sub
mov
xor
mov
ficoms
pop
aas
ljmp
cmpsl
movsl
jb
subb
inc
fstpl
sub
gs
and
xchg
or
jle
arpl
nop
ret
xchg
dec
jns
dec
fists
test
ret
mov
lahf
or
xchg
test
inc
push
cmp
pop
addl
or
mov
icebp
dec
lods
imul
mov
sbb
lret
std
mov
outsl
orb
inc
jb
cmp
sub
mov
dec
sub
push
jp
ret
hlt
pop
hlt
movsb
mov
pop
clc
imul
aad
pop
sbbb
lahf
adc
int
cmp
xchg
popf
mov
pop
inc
fs
push
out
xor
xchg
or
sarb
push
bound
ds
and
sarl
sbb
leave
in
mov
xor
fbld
jne
scas
lahf
xchg
xchg
inc
es
into
sub
or
aaa
mov
adc
or
nop
xchg
or
inc
mov
push
mov
push
in
test
testb
jnp
xchg
add
je
pusha
andb
xor
add
xchg
or
in
sbb
insl
int3
push
jns
jp
pop
lock
int
cmpsb
stos
rorb
cmpsb
movsb
cmp
add
and
and
lret
stc
stos
inc
xor
cs
cmc
push
inc
and
fsubs
sbb
pop
arpl
or
or
scas
push
fsubrs
sub
and
pop
mov
imul
stos
dec
push
sub
les
mov
sti
test
pop
jno
xor
sar
rorl
addb
sahf
cli
jo
push
sub
sbb
cli
xchg
adc
rclb
insl
mov
mov
jmp
leave
inc
mov
inc
xor
icebp
pushf
push
sahf
rorl
jle
jge,pn
jle
scas
jnp
push
xlat
andb
push
and
pop
push
jle
int3
dec
lahf
test
adc
inc
pop
int
and
adc
pusha
mov
sarl
jmp
mov
fbld
inc
lock
mov
push
aaa
push
aam
or
push
xor
popa
pop
xlat
inc
pop
push
pop
push
addr16
ljmp
icebp
cmc
int
or
jl
bound
fdivr
mov
lahf
shll
ss
daa
push
addr16
cmpsb
je
mov
or
rcr
dec
iret
arpl
out
es
ja
imul
fnsave
das
icebp
rorl
iret
mov
jns
rclb
cmp
inc
mov
filds
adc
xchg
in
pop
in
fimull
repnz
mov
sbb
pop
jb
adcb
xor
mov
ret
fiaddl
fldcw
fdivr
xor
outsb
pop
xchg
pop
popa
xor
ficoml
fadds
enter
in
inc
fcmovnb
cmp
and
stos
jge
dec
sahf
xchg
push
std
es
sub
xchg
lods
clc
add
cmpsl
aaa
push
gs
aam
push
pop
push
add
mov
or
je
mov
scas
add
cmp
xor
push
shl
fcmove
jl
sub
bound
sahf
outsl
jno
add
sahf
add
mov
dec
cwtl
jae
xor
push
or
sub
add
pusha
ret
xchg
popf
out
mov
jmp
pusha
ss
add
sti
jge
cli
scas
push
xchg
pop
xchg
fcoms
mov
lret
sbb
jecxz
pop
xchg
jg
push
add
and
popa
mov
jmp
inc
mov
mov
aad
cmpsb
pavgw
sbb
outsb
loopne
ss
xchg
cmp
or
xchg
fadds
mov
jo
lea
push
xchg
ja
mov
lods
lock
int3
xchg
lods
in
imul
loopne
lret
inc
jle
sbb
fidivl
popa
es
scas
or
mov
in
iret
out
clc
fisttpl
mov
pop
jno
cmp
call
mov
insl
add
cmp
mov
testl
mov
and
sti
outsb
int3
mov
pop
dec
lods
cmp
gs
push
ljmp
icebp
outsl
jp
loop
push
shlb
xchg
fs
sbb
jg
sbb
mov
test
mov
or
sti
es
sbb
add
pusha
cmp
out
loopne
inc
jecxz
push
pop
mov
mov
push
insl
movsl
cmp
xchg
int
mov
insl
xchg
or
push
push
sbbb
roll
xor
test
aad
jecxz
repz
insl
dec
sub
fptan
sahf
adc
pop
loopne
ret
mov
scas
mov
inc
jns
cmp
stc
test
jb
sbb
jns
sbb
mov
repnz
jl
jecxz
scas
jl
push
shrb
cwtl
lret
pop
mov
push
jns
fmuls
mov
movzwl
add
movl
mov
jmp
js
adc
jae
loopne
lfs
or
adc
jle
jge
jle
std
out
jb
sub
xlat
sbb
cmpsl
pop
scas
sbb
inc
pop
sub
jno
stos
dec
in
fsts
ds
shrl
adc
lret
int3
test
stc
push
sbb
mov
mov
mov
jns
jmp
loopne
jmp
shll
cmpb
mov
stos
bound
mov
call
add
pop
fwait
loop
or
jo
outsl
in
cld
cmp
mov
mov
cld
mov
mov
gs
repnz
rol
dec
cmp
dec
xchg
xchg
scas
and
nop
and
call
rolb
lock
add
add
lea
or
add
pop
icebp
sbb
mov
sub
mov
push
iret
fwait
jp
xlat
mov
dec
loopne
jp
mov
or
jb
pop
dec
push
imul
inc
lret
add
in
fadds
popf
aas
cmpsl
dec
dec
sbb
insl
popf
iret
lret
insl
dec
xchg
or
jo
mov
mov
sub
iret
or
test
jge
daa
popa
jmp
xor
mov
cltd
imul
sbb
inc
pop
inc
cmc
xor
jo
xchg
mov
movsb
les
or
iret
adc
movsl
mov
stc
fimuls
dec
enter
mov
int3
jnp
pop
or
jmp
cltd
push
popf
xchg
cmpl
repnz
jl
out
pop
and
les
out
bound
mov
adc
lds
mov
dec
outsl
orl
rolb
cmp
out
lds
mov
xchg
adc
sub
push
mov
call
pop
lcall
outsl
add
lock
popa
mov
lock
dec
scas
adc
icebp
push
mov
pushf
mov
hlt
mov
imul
mov
mov
test
sbb
pop
in
shld
push
and
mov
mov
arpl
cmp
mov
lods
xor
inc
dec
mov
les
pop
cmp
inc
shl
jbe,pn
pushf
das
jae
push
push
sbbb
cmp
xchg
sub
test
or
cwtl
test
jmp
mov
test
dec
sti
cmp
and
popf
inc
aaa
mov
pop
and
fistl
mov
sub
lods
je
pop
inc
rcr
sbb
aad
cmp
mov
push
loopne
xor
loopne
and
clc
subl
int
mov
adcb
or
jns
fsubr
data16
push
orl
jmp
push
movsb
punpcklbw
mov
mov
stos
sahf
pop
mov
or
and
idivb
mov
idivl
sub
pusha
xchg
add
in
jl
jb
mov
add
sub
xor
cmpsb
mov
inc
or
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
jmp
cmp
pop
dec
push
aam
int3
push
sahf
cld
stos
sub
jle
jge,pn
jle
je
jp
mov
cmpsb
sahf
aaa
mov
add
into
and
jl
dec
data16
or
fisttps
and
xor
inc
inc
push
push
mov
je
cmp
std
faddl
push
jns
out
adc
inc
jp
pop
mov
adc
push
lret
aad
fdivrl
daa
pushf
inc
sti
push
cmpsb
addl
in
stos
mov
lret
push
dec
sbb
pop
icebp
adcb
sbb
fists
sub
push
mov
in
out
lret
nop
mov
sub
mov
mov
aas
fidivl
out
sub
jp
xchg
subl
add
adc
jnp
outsl
mov
outsb
aas
sti
add
clc
sbb
dec
sub
out
imul
inc
sub
sub
or
lea
cmpsl
mov
cs
jge
mov
mov
sub
cli
mov
xchg
xchg
nop
mov
jp
pop
scas
sub
sbb
cmp
mov
fstps
outsb
lret
sbb
and
in
in
into
add
lret
dec
jp
lret
add
aam
jp
mov
aad
in
or
aad
mov
mov
stos
push
mov
movsb
xor
sbb
movsl
std
lods
daa
push
push
inc
daa
cmp
and
mov
mov
jne
mov
test
xchg
iret
movsl
lods
push
fisubrl
arpl
xchg
lds
std
add
push
lret
pop
scas
test
jno
push
std
pop
add
pop
inc
pop
inc
xchg
inc
push
imul
mov
ret
jo
dec
into
test
daa
fidivs
hlt
lret
out
xorb
cmp
mov
add
add
in
outsb
fldt
in
movsb
out
lret
mov
sub
mov
ret
xchg
in
rcll
pop
scas
cmp
jle
out
or
mov
xor
stos
ss
mov
cmpsb
pop
scas
inc
xor
nop
cltd
rorl
js
dec
cli
ja
decb
roll
daa
xor
mov
jno
int3
into
scas
in
aas
cwtl
dec
sub
xchg
mov
pop
xchg
nop
cmpsl
xchg
pop
mov
negl
fisubs
lcall
inc
fidivrl
jmp
pop
cmp
rolb
imul
rcrl
fnsave
add
push
test
add
cmp
cmp
add
jge
test
out
ljmp
mov
cmp
push
adcl
rcll
jg
lahf
data16
fs
mov
jl
mov
popf
push
add
sbb
movsl
popf
movsl
inc
ret
pushf
jmp
js
jns
sbb
cltd
push
or
scas
push
add
xlat
cltd
sub
ds
je
test
inc
mov
inc
lock
xor
mov
sub
add
mov
mov
jmp
mov
jns
xchg
xor
mov
std
pushf
mov
jge,pn
jle
in
jmp
sbb
mov
insl
cwtl
push
sbb
out
mov
enter
sub
push
leave
and
jge
mov
inc
sub
sbb
add
and
push
adc
cmpsl
xor
mov
mov
dec
inc
lods
xor
adc
pop
test
push
push
push
pop
cmp
pusha
jg
sahf
push
sbb
jecxz
sbb
stc
iret
sbb
decb
mov
mov
out
xchg
adc
outsb
inc
or
sbb
test
ret
test
rclb
test
jbe
jg
test
jp
jns
dec
push
cs
inc
ljmp
pushf
jp
jp
lret
out
inc
and
inc
jl
les
mov
mov
ficompl
in
lahf
lds
pop
lcall
adc
lea
jecxz
divl
adc
pop
dec
jo
lcall
movsb
sub
stos
insl
ss
sahf
xchg
dec
cld
lcall
cmp
sub
test
mov
xchg
lret
imul
push
loope
add
xchg
jbe
jecxz
or
cli
fcom
aas
mov
jmp
jno
enter
cmp
mov
mov
mov
addr16
inc
sub
in
xor
shlb
dec
je
nop
and
lcall
sbb
mull
cltd
adc
dec
dec
or
pop
pop
jnp
adc
stos
lret
lock
add
add
lods
mov
jb
cmp
add
ret
xchg
add
rclb
out
sbb
ds
mov
lods
pusha
outsl
mov
push
add
and
shlb
inc
jae
shlb
mov
shl
and
ret
fdivrl
leave
idiv
mov
jb
mov
sahf
mov
adcl
bound
xor
jmp
lods
jle
stos
xchg
fwait
xchg
dec
mov
ret
imul
aam
std
push
add
sbb
nop
bound
sbb
cmp
xchg
sub
cld
adc
jmp
or
out
dec
sbb
and
and
movsl
insl
leave
scas
xor
lds
inc
inc
sub
orl
dec
sahf
notb
stos
call
into
in
popa
mov
testl
test
rcrb
out
mov
pop
sbb
cli
mov
push
adc
add
push
xor
add
jb
jle
adc
stc
lahf
xchg
lret
es
fs
push
js
pop
ljmp
and
pop
repz
or
sbb
cmpl
sub
inc
dec
or
xor
pop
mov
mov
sbb
fsubrl
cwtl
outsl
jnp
or
fwait
sub
popf
sbb
cwtl
cmp
std
mov
sub
mov
outsl
mov
dec
cld
movzwl
add
mov
mov
jmp
jae
push
lahf
jae
jae
pop
dec
scas
in
mov
cmpb
jge
jle
jmp
mov
mov
iret
lret
fstpl
nop
ss
dec
add
add
sbb
repnz
jno
arpl
cmp
out
nop
jnp
insb
data16
jmp
sub
mov
or
out
sbb
jb
mov
mov
pop
leave
jg
pop
leave
push
leave
cmp
mov
jl
push
decl
mov
aaa
xor
lods
or
subb
push
jl
xchg
out
adc
mov
pop
xchg
cmp
jge
push
jp
lods
cmc
push
scas
shrb
push
pusha
dec
orl
mov
jmp
push
fnsave
aaa
inc
jl
out
push
pop
inc
push
loope
cmc
fdivs
loope
dec
lcall
inc
mov
inc
xchg
and
arpl
xchg
mov
mov
outsl
push
fildll
dec
test
pop
fldenv
and
out
or
cmc
aas
push
xchg
pop
push
push
xlat
push
add
sub
call
fwait
pop
inc
xor
repnz
xor
daa
subl
or
or
add
je
push
mov
jne,pt
std
inc
jno
mov
rorl
sbb
or
scas
adc
xchg
js
or
xor
cmp
sahf
movsl
test
mov
btr
push
mov
or
or
xchg
inc
leave
mov
imul
fwait
push
imul
dec
sub
or
popf
cmp
out
cltd
or
pop
push
inc
scas
aad
lret
je
leave
pop
mov
cltd
push
push
dec
mov
data16
push
adc
and
sti
js
bound
push
or
insl
sahf
nop
bound
xor
xchg
out
dec
psrlq
mov
adc
scas
mov
adc
leave
cli
std
sbb
jnp
insl
mov
sub
fsubp
test
mov
lcall
or
xchg
ret
dec
add
es
lods
roll
aam
xor
jb
jbe
and
mov
mov
xor
sub
dec
or
into
shrl
xchg
mov
das
mov
push
pop
push
popa
xor
lods
mov
lret
inc
pop
jmp
mov
aas
dec
lret
rorl
dec
cld
sub
repnz
pop
test
shrb
sub
dec
in
xchg
or
xor
cmpsb
fcompl
clc
mov
add
into
or
xor
and
fdivs
mov
mov
testl
ljmp
adc
push
jmp
sub
add
jp
pop
add
mov
cmp
add
sbb
mov
xlat
add
lea
xor
sbb
adc
mov
mov
icebp
cmp
and
cmpsb
mov
dec
or
movb
xor
jmp
pushl
outsl
jno
mov
repnz
aad
mov
jge
jle
pop
push
jns
les
jnp
sarb
dec
jns
sub
outsl
mov
ss
cld
sti
lock
mov
xchg
mov
jns
mov
pop
push
xor
dec
or
lret
jnp
fcmovbe
sbb
push
popa
push
push
iret
cltd
sbb
pop
cmp
and
inc
push
adcl
mov
inc
cmp
inc
or
xor
dec
je
mov
call
or
push
sbb
xor
jne
je
pop
mov
mov
addr16
aas
pop
mov
ljmp
cmpsl
cmc
pop
mov
enter
mov
adcl
mov
rcrl
loopne
pop
jbe
repnz
sbb
rol
lds
fst
into
dec
daa
sub
lea
sub
push
outsl
cwtl
jno
aas
xchg
jmp
push
sti
dec
addl
push
inc
aaa
cmpl
ljmp
idiv
sbb
cld
jle
fistps
and
mov
fistpl
daa
cli
out
mov
dec
add
fwait
inc
sti
mov
xor
loope
jb
mov
adc
insl
jle
mov
test
in
mov
hlt
add
mov
cmpsb
movsb
out
outsb
mov
pop
ret
adc
and
test
pusha
mov
leave
cwtl
mov
daa
jmp
jbe
popf
cmp
fadds
jbe
outsl
mov
xchg
out
push
xor
or
call
hlt
orb
bound
enter
jl
movsl
jl
jae
lahf
imul
add
and
cwtl
fdivr
dec
mov
dec
mov
inc
inc
popf
cmc
aaa
and
mov
inc
inc
mov
sub
or
xor
and
push
scas
mov
leave
sub
mov
sub
mov
lret
inc
sub
movsl
mov
sahf
push
insl
lds
cltd
mov
xchg
jnp
adc
mov
push
sbb
pop
add
xor
ss
xlat
cmp
push
aas
pusha
cmp
cmp
jl
loope
push
push
ss
xchg
lret
push
icebp
jno
cwtl
rolb
sub
adc
out
hlt
jmp
and
cmp
mov
test
xchg
push
outsl
sub
xlat
sbb
in
push
shrb
add
loope
xchg
fisubl
inc
jge
xor
add
scas
ds
cmp
and
mov
and
lock
mov
xor
pop
in
rcrb
and
cmp
lahf
mov
fwait
int3
and
jecxz
sbb
sub
sbb
imul
cmpsb
inc
cltd
inc
pop
insb
dec
xlat
imul
ljmp
and
ret
cmpsl
fbstp
sub
or
mov
push
out
push
testb
ss
and
js
ds
xchg
icebp
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
jmp
nop
push
in
shr
jno
push
mov
xor
sti
jle
jge,pn
jle
lock
mov
xor
int3
adc
imul
sub
daa
in
mov
sub
fwait
sub
push
aam
subl
lret
into
and
add
scas
dec
xor
mov
pushf
jle
sub
fisttps
cmp
xor
in
jno
sbb
xor
pop
stos
fimull
jp
loopne
xchg
adc
popa
in
popa
jbe
lcall
mov
adc
es
aas
dec
mov
mov
dec
out
sub
subb
shlb
cmpsl
hlt
add
cmp
add
lcall
gs
mov
dec
in
mov
imul
pop
imul
and
add
xchg
jno
fidivs
add
ljmp
negb
popf
jb
std
pusha
repz
push
push
es
stos
jl
ss
scas
ror
repz
fadd
pop
cwtl
jnp
jns
ja
xor
lcall
xor
sub
xlat
cmp
in
inc
xchg
lds
mov
or
js
insl
dec
test
and
mov
shlb
add
inc
lock
in
mov
les
imul
pop
jns
leave
dec
xchg
cmp
ja
popf
dec
cmp
test
insl
clc
mov
jecxz
jmp
jno
push
sbb
push
scas
dec
cmc
mov
scas
jl
lods
lods
repnz
mov
leave
or
jb
xchg
rcl
test
sbbb
xor
into
mov
dec
inc
fmuls
cmpsb
mov
adc
bound
imul
sbb
adc
pop
ljmp
mov
iret
jnp
mov
mov
xchg
or
pop
and
outsb
ja
pop
and
cli
cmp
mov
add
sub
mov
pop
xor
mov
and
mov
mov
dec
adc
fmull
sbbl
scas
push
push
repz
in
dec
mov
shl
adc
je
dec
mov
ret
dec
jp
and
cld
push
lcall
imul
xchg
ja
test
test
call
pusha
sbb
es
inc
inc
lods
push
pop
pusha
mov
ds
push
dec
jns
cs
and
adc
in
sahf
mov
push
sub
ja
test
inc
or
xor
jb
push
inc
mov
xor
push
xchg
ret
jcxz
arpl
mov
shlb
and
jge
mov
movsl
les
pop
jle,pn
xlat
les
mov
stc
inc
push
pushf
les
lods
push
jl
fstps
enter
cmpsl
bound
adc
dec
pop
fdivrs
push
fimuls
pop
mov
test
in
imul
xchg
mov
mov
inc
xor
or
cld
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
jmp
ffree
les
xchg
sub
out
lds
xchg
jge,pn
jle
sub
and
jne
mov
in
addl
mov
orl
pop
cmc
rorb
dec
jne
loopne
imul
xchg
sub
mov
pop
dec
js
fimuls
loop
int
sub
push
xchg
xchg
jmp
inc
add
xor
ret
fwait
lcall
and
pop
dec
sub
in
jp
jle
jle
test
aad
addb
adc
popa
inc
mov
mov
mov
in
iret
xchg
lea
ds
mov
or
dec
or
lea
lock
cmc
out
aas
pop
fwait
sti
insb
pop
mov
aaa
xchg
lea
inc
mov
lret
subb
push
adc
ss
loopne
xchg
aaa
dec
ss
jp
push
push
out
jle
shlb
adc
jb
test
jb
shr
cmc
xchg
xlat
and
mov
pop
mov
nop
in
inc
push
mov
mov
loopne
and
sbb
lock
and
ficoml
cld
fld1
test
std
jo
sarb
sti
mov
inc
aas
hlt
scas
popf
cmc
cmp
nop
adc
jle
mov
popf
in
fmull
cmp
sbb
inc
cmp
sub
daa
js
push
in
inc
pop
lods
sbb
jg
scas
xchg
insl
fdivrl
daa
dec
ret
cmp
cld
mov
hlt
movsb
ljmp
ljmp
in
jbe
enter
stc
ss
mov
sbb
cmp
pop
imul
lds
jns
das
jbe
add
inc
hlt
xchg
aaa
cltd
ljmp
cmpsb
shll
jnp
and
dec
fs
pop
es
mov
xchg
mov
jne
jns
shlb
stos
sub
xchg
les
jns
stc
movsb
xor
stos
inc
out
mov
jno
xchg
dec
fbld
fcmovnbe
cmpl
addr16
insl
pop
ss
mov
imul
lea
jne
int3
cltd
dec
push
push
ja
into
insl
popf
ds
addr16
dec
jno
mov
imul
insl
pop
jl
jno
xor
cmp
pop
sub
dec
outsl
mov
sub
lret
ret
clc
out
stc
cli
sbb
cwtl
pop
or
sub
frstor
repnz
imul
cmp
adc
popf
jp
cmp
jmp
jge
rcl
out
push
loopne
adc
jae
mov
in
adc
add
cmp
daa
mov
repz
sbb
pushf
jns
insb
jmp
xchg
push
push
jns
cmp
stc
test
xor
cmp
mov
gs
aam
std
in
or
sub
xor
pop
xor
test
and
stos
xlat
dec
cmp
mov
push
jbe
sub
cmpsb
repnz
fs
insb
lds
mov
ret
pop
or
aaa
xchg
enter
outsb
mov
mov
mov
mov
mov
xor
add
mov
mov
jmp
mov
inc
inc
orb
data16
and
fptan
leave
cmpb
jge
jle
adc
jmp
jne
mov
fisttpl
hlt
mov
aam
cltd
mov
cmpb
push
fwait
adc
lret
bound
popa
sbb
xchg
sbb
and
shlb
pop
data16
and
jae
lods
or
out
stc
movsb
cs
cmp
mov
leave
je
test
jns
aad
shll
pop
mov
sub
mov
mov
adc
add
mov
jp
imul
adc
addr16
mov
rorb
out
andl
out
movsl
xchg
sub
idivl
push
inc
shrb
aas
mov
or
mov
jle
adc
mov
mov
xchg
lods
push
or
mov
scas
push
movsl
mov
lea
aaa
push
ret
pop
mov
or
inc
add
rol
mov
adcl
cld
adc
ret
sti
add
out
mov
mov
push
xchg
pusha
js
bswap
ret
and
sahf
mov
jecxz
mov
push
xor
insl
jnp
cmp
imull
ret
fstps
lret
rcrb
dec
cmp
dec
fisttpl
repnz
xchg
push
fists
mov
inc
stos
inc
sarl
push
repz
std
mov
mov
lods
mov
insb
or
jno
aam
push
shlb
shl
clc
js
or
jno
xchg
outsb
movsl
mov
dec
xor
mov
pop
pop
sar
add
xchg
mov
ds
mov
push
das
andl
out
jns
pop
pop
in
cltd
dec
or
jecxz
mov
cmp
mov
mov
xchg
aam
push
repnz
pop
fldpi
pop
fdiv
clc
adc
jle
mov
mov
arpl
in
and
pop
std
xchg
pusha
pop
data16
int3
mov
mov
jp
adc
arpl
mov
enter
iret
faddp
pop
xor
jge
sub
lcall
insl
cmp
sbb
add
sub
lods
jle
mov
daa
popf
aas
push
inc
popf
shll
mov
inc
mov
fcomi
mov
sbb
shrl
scas
xchg
lock
fldl
idivb
xchg
fistps
pop
or
cmc
insl
jo
dec
cmc
adc
sar
push
cmovnp
or
mov
lahf
test
aam
fdivr
mov
jnp
sub
js
cmpb
push
data16
popa
popa
sbb
mov
sbb
hlt
setne
add
dec
xchg
imul
push
jecxz
arpl
push
mov
xor
cld
dec
aaa
icebp
mov
jg
cmp
push
les
or
pusha
add
cld
movsb
shr
pushfw
fildl
out
or
cmp
mov
dec
pop
pop
xor
repnz
popf
nop
stc
mov
cmp
dec
loopne
movb
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
pushl
pushl
call
cmpl
jb
mov
mov
add
xor
cmp
jne
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
mov
mov
sub
mov
push
inc
mov
orl
xor
cmp
movl
je
mov
mov
sub
imul
mov
and
mov
sub
sbbl
xor
movl
cmp
movl
jne
mov
xorl
add
movl
jmp
sbb
mov
adcl
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
sbb
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
adcl
movl
mov
subl
push
adc
mov
xor
add
mov
add
mov
and
mov
subl
push
push
test
movl
je
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
xorl
mov
movzbl
sbb
mov
imul
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
mov
mov
sub
mov
xchg
mov
xor
sub
xor
movzwl
or
mov
or
mov
sbb
mov
or
mov
mov
xor
mov
xor
xorl
xor
movzbl
or
jmp
adc
addr16
clc
jno
inc
xor
xor
lods
psubw
jle
icebp
lret
clc
adc
jae
imull
xor
aad
dec
inc
lods
xchg
imul
jno
and
pop
das
aas
jl
movsl
insl
adc
ja
adc
pop
and
dec
cld
insb
and
scas
or
movsb
test
push
cld
mov
xor
add
jp
lock
dec
xchg
xchg
mov
mov
or
cmc
mov
adc
inc
mov
lcall
test
lods
dec
icebp
clc
push
les
mov
push
mov
lds
adc
and
mov
repz
push
mov
loop
ficompl
sbb
mov
rcll
and
bound
cmp
or
xchg
aas
adc
dec
push
jle
repnz
xchg
push
jg
add
mov
or
arpl
ficoml
repnz
or
cs
xor
adc
out
dec
stos
xchg
mov
mov
cmp
push
out
idiv
fldl
push
mov
mov
int
dec
jne
cmp
jle
into
mov
dec
push
jb
add
mov
mov
mov
je
mov
andl
xor
orl
add
movl
cmp
movl
jne
pushl
subl
call
mov
add
mov
add
mov
mov
mov
mov
and
mov
subl
xor
add
movl
cmp
movl
je
sbbl
pushl
pushl
movl
call
xorl
mov
orl
mov
adcl
mov
addl
xor
add
movl
cmp
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
jmp
add
in
jecxz
icebp
adc
push
cmp
jle
jg
jle
inc
loopne
dec
in
fwait
push
jle
test
imulb
xchg
sbb
sbb
xor
lret
shr
push
xchg
cmp
add
repnz
out
jmp
xchg
aaa
sub
cld
xor
pop
repnz
out
or
xlat
stc
mov
jne
aas
push
enter
jl
subb
mov
inc
push
cmp
jmp
imul
lods
xor
test
xor
cli
fwait
enter
scas
and
hlt
rclb
mov
push
push
adc
push
jo
xor
and
out
mov
add
sub
mov
lret
mov
ds
xor
mov
cmc
mov
and
insl
cwtl
add
out
sub
add
add
push
dec
xchg
jecxz
push
sbb
or
sbb
jns
jecxz
aas
push
jbe
das
adc
jae
enter
or
lds
push
scas
pop
sahf
jge
mov
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
jmp
aad
fstps
push
fsin
or
jle
and
jle
or
cmpsl
fsubrs
mov
push
in
lds
inc
xchg
dec
push
out
js
lods
push
dec
lahf
icebp
inc
push
fidivl
mov
mov
adc
pop
xor
movsl
xor
and
inc
xor
xor
movsb
lcall
jbe
fmull
dec
jns
das
clc
lock
xchg
mov
mov
in
icebp
loope
int3
xor
rcr
shrl
adc
add
test
aas
cs
pop
scas
push
jmp
dec
xchg
jmp
adc
xchg
mov
clc
xchg
mov
out
fnstsw
mov
mov
dec
dec
inc
movsb
cld
inc
daa
push
pushf
mov
fyl2x
sub
sbbl
out
mov
loope
mov
gs
cmp
fs
dec
add
insb
mov
and
sarl
and
mov
fwait
vpor
fisubl
cmpsb
push
mov
jo
fneni(8087
aam
fnstenv
mov
cmc
push
cli
add
fsubs
jle
and
add
push
or
jmp
mov
add
mov
mov
test
je
mov
push
jmp
dec
xchg
mov
jae
out
push
mov
lea
and
jle
and
lods
mov
imulb
addb
adc
out
jg
in
add
sbb
jp
mov
xorb
scas
sahf
xchg
out
mov
push
inc
fs
push
in
pop
jne
fwait
fwait
sub
insb
jmp
pop
rorb
shr
fstpl
shl
pop
push
cmpsb
cs
jns
lret
cmp
mov
lret
hlt
fidivs
inc
lock
sub
cltd
xor
lds
mov
les
xchg
lret
cs
xor
lret
fwait
dec
inc
xchg
sub
fistpl
enter
jnp
mov
dec
mov
sbb
xchg
push
inc
xchg
lret
rorl
cld
popl
push
sub
mov
sbb
int
add
stos
sti
sub
and
add
xchg
adc
in
jne
sbb
loopnew
clc
dec
mov
ret
sub
repnz
pop
mov
es
loop
mov
fst
push
inc
lahf
pop
push
dec
pop
xchg
sub
jmp
adc
jae
jno
je
adc
cltd
int3
push
enter
jle
jg
jle
inc
ret
fisubl
pop
or
add
push
pop
push
push
lret
aad
adc
fwait
mov
sarb
xchg
push
popa
sbb
fs
and
movsb
dec
loope
xor
cmp
adc
xor
pop
mov
add
or
push
lahf
inc
fiadds
stos
inc
imul
bound
mov
aaa
sarl
dec
or
fbld
out
fcoms
icebp
orb
aam
dec
clc
adc
cmpsb
or
cmpsb
loope
add
cmp
add
inc
jo
pop
dec
adc
repz
enter
adc
test
outsl
mov
xchg
or
inc
or
ja
cli
ror
mov
xor
ljmp
push
icebp
scas
into
scas
dec
xor
xchg
xchg
push
rclb
arpl
push
add
in
leave
and
jne
xor
jne
lahf
in
mov
scas
add
dec
mov
stos
ja
lcall
cmp
and
adc
sub
push
mov
xchg
jmp
mov
jo
mov
mov
fisttpll
jle
or
cwtl
jp
and
hlt
cwtl
or
mov
xchg
repnz
xchg
cmp
punpckhwd
cmp
push
pusha
xchg
push
fimuls
mov
hlt
stos
stc
push
mov
xor
jl
xlat
test
cmpsl
es
cltd
mov
aad
fadds
popf
and
jl
xor
xchg
js
out
mov
mov
mov
mov
ss
test
jne
and
mov
movsb
sbb
andb
push
xchg
adc
je
data16
cmp
mov
cmpsl
push
lahf
push
mov
es
mov
cmpsb
mov
mov
ret
jbe
or
fisubl
xchg
pop
cmova
lock
aad
cs
adc
scas
mov
shrb
das
sbb
stos
sbb
pop
add
dec
enter
push
pop
xchg
xchg
movsb
push
and
jae
and
mov
lret
pushf
mov
or
nop
rcrb
jge
add
mov
popf
das
loope
sti
push
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
jmp
fsubs
imul
sbb
incb
jg
jle
jecxz
in
push
popf
push
inc
cmpsb
sbb
jg
pop
cltd
icebp
adc
xor
pushf
and
or
outsl
mov
add
out
jnp
in
jge
adc
mov
sub
xor
int3
mov
ja
dec
or
test
cmpsb
loop
cmp
pop
mov
or
cmp
mov
sar
cmpsl
loope
ret
je
add
sbb
lea
into
sbb
mov
les
push
lods
pop
mov
repz
ficoml
add
adc
cmc
in
jge
ja
imul
aas
mov
mov
xor
mov
jae
jne
insb
cmp
call
mov
xor
inc
leave
clc
insb
icebp
inc
sbb
leave
lds
and
popf
jns
pop
gs
bound
xchg
adcb
out
lret
icebp
sub
xchg
stos
push
adc
imul
mov
aas
add
mov
sbb
cld
mov
out
addr16
int3
sbb
shlb
or
sub
insb
and
push
adc
scas
add
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
jmp
cmpsl
scas
and
stos
jp
mov
mov
mov
mov
jle
and
jle
jno
ficoms
xchg
mov
insl
cltd
std
cmp
mov
jae
push
lea
popl
jbe
jecxz
cli
repz
mov
lret
inc
lds
jle
lret
add
mov
imul
jge
repz
or
pushf
lret
cmc
mov
or
aaa
insb
push
cs
xlat
dec
dec
loop
adc
mov
dec
mov
inc
adc
mov
aaa
imul
test
bnd
push
into
lods
push
popf
xor
out
ficompl
repz
jbe
dec
test
mov
xor
dec
push
inc
aaa
psubusw
cld
add
push
push
arpl
incl
aaa
fnstcw
or
pop
int3
enter
leave
pop
fstpl
ja
faddp
fs
xor
pop
js
jge
inc
ja
pop
mov
mov
movsb
sub
cmp
into
gs
jecxz
push
mov
int3
dec
icebp
pop
in
icebp
xchg
test
movsl
cli
es
sahf
adc
fmull
or
adc
roll
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
jmp
lcall
jno
insl
add
pop
xchg
jle
and
jle
xchg
gs
jae
repnz
hlt
add
add
jp
jnp
cmp
cmp
ret
dec
adc
mov
sti
je
fisttpll
xor
in
inc
popa
imul
mov
jbe
hlt
jmp
mov
leave
add
rolb
les
in
and
ljmp
les
sub
jp
popf
and
cmp
push
stc
sub
imul
hlt
in
mov
xor
or
fsubl
push
mov
inc
xchg
mov
cmc
xchg
inc
mov
ret
rcrb
or
orl
cmpsb
xor
sub
xchg
jle
mov
xorb
popf
adc
cmp
jae
jbe
mov
lds
jno
test
mov
je
fdivr
ret
int3
adc
cmpl
in
int
pop
mov
mov
sbb
xchg
incb
lret
pop
xchg
add
in
cs
mov
repz
cmp
int
sbb
in
insb
sub
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
mov
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
fwait
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
cmp
pushf
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
fiaddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
lret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
sub
inc
fnstcw
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
fwait
inc
xor
pop
inc
shl
inc
sub
inc
add
add
out
clc
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
enter
lea
mov
mov
in
cmovne
jmp
inc
mov
sbb
mov
add
in
add
sub
add
jle
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
int3
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
call
mov
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
cmp
pushf
pushl
mov
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
cmp
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
fwait
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
xor
jmp
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
cmp
pushf
nop
movl
clc
add
add
or
dec
ret
push
inc
dec
mov
mov
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
cmp
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
call
add
mov
xor
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
fwait
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
fwait
mov
jge
decl
