push
mov
sub
cmpl
mov
movl
not
jmp
mov
jae
push
call
sub
sub
mov
xor
add
sub
and
or
mov
mov
mov
orl
sub
push
mov
mov
mov
mov
sbb
movzwl
add
mov
mov
sbbl
orl
orl
cmpl
not
mov
jmp
mov
mov
jle
push
pushl
push
push
push
pushl
push
call
andl
subl
and
orl
and
adc
adc
mov
mov
mov
mov
sbbl
sub
mov
mov
sbb
mov
orl
orl
lea
sbb
mov
cmpl
movzwl
mov
notl
mov
jmp
mov
mov
jae
push
push
pushl
call
xor
or
adc
sbb
mov
adc
mov
addl
add
mov
jmp
hlt
loop
sbb
and
mov
notl
push
sub
push
push
bound
jle
inc
mov
dec
popf
inc
mov
rolb
push
mov
testl
movsl
dec
sbb
xor
pop
cmp
dec
rcl
inc
inc
push
jl
pop
mov
dec
dec
dec
rorb
or
mov
daa
bound
scas
test
mov
pop
push
inc
fdivs
imul
mov
jecxz
add
cmpsb
inc
fucomp
loopne
mov
hlt
push
rcll
out
jmp
rol
lret
mov
xor
push
and
inc
fiaddl
push
gs
arpl
adc
repnz
dec
outsb
or
imul
cwtl
xor
insb
mov
scas
xchg
rorb
add
pop
nop
call
dec
jecxz
mov
out
loop
outsb
sub
aam
sbb
fnsave
insb
pop
lret
lods
xor
mov
push
mov
xchg
pop
pop
mov
insb
xchg
xchg
mov
lds
sub
sbb
xchg
adc
popa
cs
div
fs
shrb
cld
sbb
cld
push
xorl
mov
outsl
arpl
jo
sbb
mov
sti
inc
cmc
sbb
cmpsb
insb
out
xor
sbb
push
sub
sti
xor
inc
and
xchg
jp
test
mov
push
outsb
test
xchg
or
jns
xlat
lock
pop
lods
inc
xor
lds
hlt
mov
mov
out
movsl
adc
push
xchg
fldcw
mov
sub
fistpl
add
jnp
and
push
adc
mov
xchg
xlat
xchg
mov
pop
jae
bound
ds
jle
insb
and
dec
or
inc
repz
or
pop
xchg
scas
push
mov
pop
push
pop
ffree
ret
not
test
js
scas
sahf
xor
push
xchg
stos
push
insb
ss
push
movsl
addr16
jge
xor
cmp
aam
jle
scas
jle
ja
lock
mov
daa
mov
imul
icebp
sbb
outsl
mov
mov
inc
stos
add
out
pop
mov
outsb
dec
test
add
das
xlat
fisubs
leave
pop
mov
xchg
sbb
or
leave
aad
movsl
lea
fisubrl
push
daa
into
pop
inc
push
mov
pushf
jl
cs
movsb
push
xchg
aaa
jle
jge
pushf
cmp
lret
pop
jle
test
sahf
mov
fsubrl
adc
mov
inc
lods
ret
ret
int3
jle
std
pop
lret
pop
fistpl
add
or
aad
sahf
xchg
in
adc
mov
icebp
fs
lea
cmp
pop
mov
jp
imul
adc
inc
add
mov
rorb
xor
jl
pop
stos
pop
mov
dec
or
mov
movsl
push
adc
sahf
pop
imul
into
add
mov
and
add
idivb
mov
mov
shrl
outsb
clc
shlb
pop
int
rolb
test
cld
sbb
pop
lods
cmp
xchg
mov
mov
movsb
adc
pop
arpl
xchg
mov
mov
in
leave
popl
xchg
adc
into
pop
add
jo
fs
mov
jp
adc
std
daa
movsl
mov
xor
push
out
fidivrs
insl
aas
enter
call
lcall
mov
pop
imul
sarb
jge
ret
adc
cmp
or
adc
sub
cmp
pop
pop
adc
lea
push
rep
dec
pop
mov
mov
cltd
mov
cltd
pop
cmpb
fs
or
sub
push
imul
dec
aaa
test
push
mov
lock
inc
movsb
mov
mov
mov
lret
stos
jb
mov
adc
adc
cmpsb
jno
push
leave
fwait
in
sbb
cmc
inc
mov
cmp
push
or
add
jmp
iret
mov
adc
mov
xor
cmp
fsubrs
pop
lcall
jmp
ficomps
sub
mov
insl
cmp
pop
lret
push
fnstsw
fxch
push
cmp
or
pop
in
pop
sub
gs
dec
sbb
mov
add
insl
lods
jge
cmp
and
cltd
lea
cs
cld
or
pop
into
insl
dec
adc
ds
or
test
mov
ffree
mov
jno
fstl
and
out
pop
in
daa
xor
add
movsb
add
sarb
push
lea
cmp
lods
mov
loope
xchg
sub
jl
push
xor
scas
mov
fdivrs
cld
movsb
mov
in
push
in
adc
je
sub
adc
fs
data16
or
jno
mov
int
push
scas
pushf
xchg
adc
dec
cli
sub
push
xor
jmp
sbb
xchg
and
xchg
ret
lcall
xor
inc
icebp
jp
dec
cmp
cmp
fadds
inc
or
sbb
xchg
cwtl
in
adc
in
test
xchg
pushf
xchg
pop
sbb
inc
or
sbb
mov
pop
mov
and
arpl
nop
adcb
push
sub
mov
add
aas
or
rcrl
sub
add
or
push
xchg
scas
xchg
jle
cmp
daa
leave
dec
jno
test
add
bound
add
sub
push
fstps
test
loope
and
mov
inc
and
inc
inc
xchg
imul
dec
sarl
cmp
mov
out
pushf
jae
les
cmpb
pop
push
mov
pop
push
pop
pop
mov
adcl
sbb
mov
push
iret
pushf
ljmp
and
inc
icebp
hlt
mov
in
push
scas
loop
imulb
jne
mov
jbe
divl
sub
push
ja
aaa
movsl
sahf
call
aad
loope
xor
jp
hlt
test
add
pop
outsb
and
shlb
jmp
xor
sub
sbb
push
rorb
es
out
cmpsl
push
cld
pop
rcll
pusha
loopne
mov
imul
fwait
cmpsl
inc
cwtl
xchg
lods
cld
mov
movsl
jl
pop
xchg
ljmp
mov
sbb
xlat
dec
cmp
in
ja
push
incl
into
arpl
fdivs
adcl
stc
inc
mov
out
sbb
js
dec
icebp
out
fistl
les
nop
imul
and
adc
daa
mov
fdiv
inc
cmpsb
adc
shlb
movsl
filds
shl
ljmp
and
adc
push
orb
lods
roll
jb
push
cli
aaa
ret
pop
test
idivl
popa
jno
push
sbb
mov
jb
scas
out
dec
dec
mov
add
pusha
loop
mov
inc
adc
je
sarb
negb
pop
dec
jecxz
jno
ljmp
lds
outsl
popf
ds
xor
shll
gs
fistpll
xchg
orb
dec
cmpsb
fldt
xchg
loopne
or
ja
addl
inc
mov
mov
lock
lahf
negl
movsl
push
mov
pop
mov
clc
pop
dec
outsl
je
dec
push
mov
arpl
pop
mov
das
pop
insl
rorb
std
mov
andl
sbb
stc
fistps
into
repz
pop
sbb
mov
pop
ficompl
xchg
xlat
fcoms
add
imul
mov
xchg
mov
mov
popf
jno
sbb
mov
jmp
lock
jbe
mov
mov
and
sbb
or
pop
mov
daa
sbb
pop
and
cltd
ja
popf
pop
aaa
int
outsb
sub
xchg
insb
add
adc
sbb
cmp
fisttps
cmc
cmp
popa
mov
ja
jmp
repnz
cmp
mov
dec
xor
sbb
mul
out
dec
daa
cmp
ss
out
and
inc
pusha
or
frstor
stos
mov
int3
push
cltd
sarl
fwait
inc
and
ljmp
shlb
ret
in
xchg
mov
sub
mov
cmp
add
fdiv
call
fs
popf
jnp
dec
xchg
aam
inc
lock
ret
andl
or
jbe
mov
rep
imul
out
push
push
in
dec
imul
push
pop
jne
js
mov
mov
fmul
adc
popa
mov
pop
cmpsl
popf
and
mov
popf
mov
repz
cltd
mov
dec
mov
add
inc
dec
and
sub
inc
outsb
enter
test
aad
push
mov
jecxz
jmp
pusha
lods
out
aaa
daa
pop
hlt
push
fisubs
cmp
mov
mov
lahf
cmpsb
push
cmp
clc
mov
mov
rorb
sub
sbb
xchg
cmp
shll
fsubrs
sub
jge
in
movsb
xor
xor
adc
outsb
aam
mov
mov
fwait
mov
stc
cs
mov
movsl
movsb
xor
inc
xor
rcll
mov
mov
cld
cmc
or
lock
fdivrl
inc
adc
and
mov
or
fstpt
rorb
imul
sbb
and
jnp
mov
icebp
stos
cs
data16
ds
iret
or
in
ja
stos
or
fldt
lahf
sbb
mov
popa
lock
dec
sub
xchg
inc
sbb
test
daa
jmp
das
add
imul
xor
dec
cmpsb
imul
mov
or
pop
or
or
lret
leave
add
lea
jg
xorl
daa
lods
in
jg
adc
jae
dec
push
hlt
jg
xor
jo
lahf
fstl
push
sub
jo
inc
pop
xchg
sbb
out
jnp
lods
loop
cld
add
xor
xchg
inc
fwait
dec
shlb
sub
icebp
lret
gs
and
test
insb
data16
pop
lret
or
in
adc
aaa
cs
cmp
imul
add
jno
push
bswap
rcr
push
inc
insb
sbb
xor
xchg
sub
jns
dec
xchg
adc
and
xchg
add
adc
push
mov
pusha
iret
mov
insb
cwtl
adc
inc
and
mov
and
xlat
lods
sbb
cld
outsl
and
sub
pop
xchg
cmp
outsl
mov
out
xchg
mov
jo
out
mov
or
out
xchg
sub
loopne
js
cmc
jmp
mov
lods
popf
push
dec
jae
and
jge
call
mov
outsl
xlat
or
test
mov
andb
push
inc
hlt
or
test
push
lahf
jno
xchg
into
xchg
push
adc
push
cmpsb
and
test
sti
push
scas
lods
jne
cmc
ljmp
popf
adc
pop
mov
sbb
shl
cmpsl
push
jbe
rcll
arpl
fidivrs
into
in
sbb
enter
gs
xchg
add
push
pusha
mov
or
xchg
adc
das
loopne
je
loope
call
jp
add
cmp
stos
test
push
loope
lods
fidivrs
scas
addl
ror
mov
jecxz
dec
mov
jp
push
loope
dec
sti
ret
scas
adcb
push
pop
xchg
push
test
aas
and
movsl
cmp
mov
inc
scas
imul
aam
lock
pop
ds
xchg
jb
or
mov
xor
xor
push
movsb
xchg
test
xor
mov
sbb
add
pop
rorb
add
enter
xchg
push
lcall
cmpsl
xchg
je
movsl
mov
or
imul
mov
lcall
mov
mov
jmp
test
cli
cld
jge
orl
movsb
sahf
pavgb
sub
inc
inc
push
es
int
outsb
push
es
hlt
out
mov
popa
and
or
sub
sbb
adc
push
jbe
push
jo
pop
nop
pop
adc
xor
iret
and
pop
shrl
mov
cld
stos
inc
push
test
push
stos
inc
stos
arpl
cltd
sub
addr16
rorl
fcomps
xor
jle
mov
push
adc
inc
mov
xchg
cmp
fnstenv
sbb
jns
and
sbb
jmp
ret
or
mov
mov
aam
add
xchg
add
stc
stc
call
or
out
cmpsl
das
mov
out
jecxz
js
nop
xchg
and
int
outsl
pop
xor
shlb
jp
inc
add
mov
xor
stos
adc
adc
subl
shrl
cmpsl
sbb
das
sarb
cmp
sbb
scas
scas
sub
or
sbb
js
daa
nop
data16
xlat
mov
mov
push
mov
xchg
int
push
daa
outsb
data16
loop
stos
lock
lret
mov
jp
rclb
shl
xchg
imul
mov
aam
xchg
push
adc
sub
and
lret
inc
or
add
or
cmc
jp
dec
xchg
ds
push
or
repz
imul
stos
push
aam
pop
daa
andl
xor
pop
mov
out
orb
fistl
popl
and
lahf
int3
int
adc
mov
inc
ja
ds
dec
lret
jns
lods
sub
pop
clc
fs
scas
add
outsb
mov
mov
pop
sub
outsb
fistps
out
xor
sub
inc
arpl
int
cmp
bound
adc
and
dec
cmpsb
adcl
pop
es
pop
pushl
xchg
int
add
inc
lahf
cmp
adcb
js
pop
mov
stc
popf
inc
push
leave
cmp
dec
xor
mov
std
xchg
cmp
inc
pop
push
cltd
call
inc
or
dec
out
inc
mov
cmp
xor
sub
pop
setbe
sar
les
mulb
addr16
ja
mov
fidivs
stos
sub
pop
dec
inc
adc
xchg
sbb
sbb
jmp
push
fstpl
aad
bound
mov
xor
cmp
push
sbbl
inc
sbb
xor
pop
out
out
jb
cmp
sub
in
mov
and
cltd
push
xchg
out
hlt
add
inc
or
sar
pop
sub
jo
xor
lods
lea
dec
push
ja
mov
mov
lahf
mov
xchg
sbb
scas
mov
enter
mov
cwtl
mov
mov
idiv
scas
cmp
add
js
xor
lea
jae
repnz
and
xlat
arpl
shlb
repnz
pop
aam
jge
adc
add
pop
push
inc
scas
sqrtps
iret
sbb
adcb
lods
fcoml
sub
push
and
stos
sub
xchg
aaa
dec
sub
int
movb
daa
cmp
cmc
xchg
pop
ljmp
aaa
dec
je
repz
and
ljmp
sbb
mov
scas
lds
mov
adc
leave
sbb
dec
addb
jo
xor
lcall
out
pop
outsb
push
rclb
rcrl
jge
sub
std
daa
aam
stos
loope
ds
shlb
pop
push
int3
int3
xor
pushf
mov
xor
data16
dec
in
movsl
jl
push
jp
push
cmpb
push
cmp
cmp
push
cmovg
loop
mov
aas
xor
aam
dec
push
push
sub
xchg
ret
pop
sub
pop
dec
mov
shlb
pop
movsl
call
mov
jnp
mov
insb
mov
iret
enter
js
xor
addl
pushf
jl
dec
and
out
lret
fmul
bound
sbb
push
inc
aad
sub
lods
loope
xchg
and
mov
mov
inc
jb
mov
push
and
lods
aaa
xor
mov
daa
cmp
mov
ljmp
insl
insb
leave
shrb
cld
mov
inc
pop
addr16
popa
push
les
mov
stc
inc
lock
sub
jns
dec
testl
rclb
out
das
dec
mov
inc
jo
inc
negl
les
xor
sarb
ficompl
das
xor
insl
data16
or
orb
pop
aaa
mov
jae
nop
adc
add
jl
sbb
popa
and
and
or
sub
pop
cli
nop
inc
xchg
push
into
lods
mov
mov
sbb
jo
pop
and
mov
mov
cli
mov
push
mov
xorl
mov
in
iret
outsb
push
dec
out
push
insl
dec
call
xchg
lock
pop
pop
std
in
ljmp
adc
xchg
push
mov
sahf
stos
addl
jb
lcall
cli
out
int3
sub
roll
insl
jns
outsl
push
mov
insb
inc
sbb
scas
ds
in
outsl
jnp
mov
xchg
mov
pop
in
insl
mov
xchg
mov
cmp
jecxz
sub
int3
and
pop
loope
lea
jbe
rcrl
lock
mov
or
mov
push
arpl
adc
test
inc
sbbb
xor
fadd
loopne
scas
xchg
jns
jg
orl
call
cmp
jne
loope
sti
sbb
xchg
stos
ja
or
popf
int3
outsb
out
leave
insl
ret
cmp
sub
fsubs
jg
xor
xchg
test
fdivl
outsb
inc
daa
mov
add
push
imul
mov
repz
rclb
add
ffreep
rcll
mov
lret
and
imul
mov
stc
push
mov
cmp
pop
pusha
sbb
cld
jp
xor
mov
aam
push
call
out
push
rcrl
lret
mov
sahf
push
std
dec
insb
cmp
push
das
shrb
int
stos
cmc
mov
stc
cmp
mov
mov
arpl
stc
xchg
xor
lret
push
data16
jmp
arpl
jo
rcrb
pop
repz
pop
mov
in
int3
nop
mov
neg
dec
push
bound
fistpll
push
dec
loopne
stc
push
push
fcos
xchg
add
test
dec
arpl
cli
lahf
aas
ja
iret
fcomps
inc
pop
mov
sbb
int3
popa
cmpsb
iret
adc
push
dec
js
out
and
addr16
jne
or
mov
pop
jecxz
jl
sub
pop
xor
movsl
pop
xchg
outsl
push
icebp
adc
push
aaa
or
fstpl
add
cpuid
sub
fistpl
cmpsl
xlat
fldt
clc
jnp
inc
jecxz
cmp
cltd
xor
or
ss
jnp
inc
lods
and
in
lcall
sbb
cld
repnz
or
aam
pop
xchg
xchg
xchg
push
or
std
outsb
lock
leave
or
gs
add
je
mov
lds
out
lret
cmp
out
aaa
and
mov
sti
in
incb
in
jae
inc
rcll
std
mov
lcall
adcb
cmpb
loopne
dec
lods
out
mov
jo
push
leave
xlat
sbb
mov
scas
fnstenv
movsb
xchg
fisubrl
or
pop
pop
aad
push
jecxz
xlat
lret
jl
adc
xchg
popa
jbe
popf
add
int
fcmovnu
cs
ss
or
ds
stc
add
dec
jmp
inc
adc
gs
ljmp
pop
xchg
dec
jl
popf
adc
sbb
xor
xor
ja
adc
add
lahf
ljmp
repnz
mov
sub
jns
out
sbbb
aas
int3
pop
fistpl
movsl
rorl
dec
ficoml
push
iret
fscale
lret
lahf
mov
sub
adc
pop
les
mov
aaa
fucomip
rolb
enter
fcmovbe
mov
sbb
mov
clc
aad
or
mov
and
inc
scas
popa
mov
pop
and
sub
jl
std
test
test
and
jne
pushf
adc
xchg
mov
mov
and
sub
stos
sbb
mov
xchg
out
jns
aam
pop
xchg
loop
sbb
sbb
mov
xchg
enter
cmp
inc
hlt
lcall
xor
je
inc
subb
dec
mov
test
or
hlt
inc
fisubs
cwtl
sub
lds
push
fst
sbb
lds
lret
or
cmp
repz
xlat
gs
test
lock
push
je
cmp
rcrl
sbb
mov
mov
das
into
mov
inc
ret
fimull
je
adc
stos
jecxz
movsb
aad
and
shlb
xchg
leave
lods
pop
push
shrl
jo
or
push
sbb
add
cmc
jg
rcll
push
mov
orb
sub
ja
rorb
pop
adc
or
stos
inc
push
pop
pop
dec
ja
jb
add
push
in
mov
mov
adcl
sub
and
jnp
in
repz
loope
movb
xor
mov
xor
dec
jmp
ret
outsb
dec
cmp
shrb
add
mov
aad
nop
sbb
pop
cld
mov
push
fstpl
mov
popf
cld
cli
jne
and
clc
push
loopne
mov
in
sti
arpl
mov
xor
arpl
sub
imul
test
cmpsb
and
mov
mov
sbb
inc
push
mov
dec
xor
aad
add
das
push
ja
sub
jp
inc
out
adc
lret
jo
bound
adc
xchg
xor
push
and
aaa
stc
enter
ja
mov
daa
inc
loop
push
pop
jo
sbb
sub
inc
pop
mov
sbb
xchg
nop
data16
sbb
push
rorl
cli
jge
rclb
je
mov
repnz
fsubl
mov
mov
iret
mov
or
outsl
mov
mov
or
out
pop
out
cwtl
mov
push
adc
sahf
cmp
add
xor
imul
je
cmp
popl
sub
mov
sub
scas
mov
xchg
std
scas
xchg
jle
test
lock
cmp
dec
mov
fwait
cmc
loopne
cwtl
xchg
jge
popf
hlt
dec
in
lret
int3
dec
popl
and
test
mov
lret
mov
add
push
hlt
clc
jg
js
adc
ja
push
sti
add
pop
ffree
xchg
imull
jecxz
xor
mov
mov
cmp
or
mov
push
aam
and
jge
xor
mov
add
fnstcw
mov
cmp
push
test
cmpsb
push
inc
xchg
jns
mov
mov
into
lret
and
repz
dec
mov
cmc
fcomps
cmp
mov
mov
sbb
sbb
ss
cmp
insl
lcall
pop
adc
pushf
dec
dec
xor
xchg
dec
mov
inc
mov
aad
aam
je
xor
imul
jcxz
jecxz
lods
xchg
outsb
dec
mov
lea
mov
jmp
sahf
jg
sbb
lret
jl
mov
out
fmul
insl
test
mov
mov
ds
adcl
movsb
sti
push
mov
nop
xchg
shlb
movsb
pushf
push
and
sub
sub
daa
cwtl
xor
xor
pop
mov
ret
mov
imul
jns
xchg
test
imul
movsl
leave
dec
mov
mov
imul
in
cli
push
fs
cltd
ljmp
sbb
insb
out
mov
pop
int3
std
jle
js
imul
jle
iret
lret
ret
mov
sti
jg
cli
nop
inc
push
and
rclb
cmp
cmp
cmc
dec
addr16
sub
jns
sub
cmpsb
jns
std
cmp
pop
loop
sbb
pop
or
les
xlat
jl
push
loope
loope
sbb
mov
sti
decb
in
jo
sbb
or
mov
lds
push
outsl
mov
or
rorb
add
xor
hlt
nop
add
mov
mov
and
or
xor
scas
mov
cwtl
mov
sar
clc
cmp
or
push
fimull
xchg
pop
cmp
ds
and
jb
aas
or
push
movsb
arpl
mov
cmp
int3
ret
add
cli
sbbb
repz
sub
add
aaa
jno
loopne
mov
adc
ret
int3
pop
add
xchg
movb
jbe
adc
roll
aad
jae
ljmp
stos
push
call
in
add
call
test
adc
add
jbe
and
stos
sub
sarb
inc
dec
repnz
add
mov
jae
ds
mov
jae
sub
popf
std
xchg
dec
xor
mov
in
inc
dec
mov
pop
cmp
pop
scas
ss
ljmp
sub
mov
mov
mov
ljmp
popf
js
mov
sbb
stos
aas
adc
imul
pushf
iret
das
rorb
push
std
cmp
addr16
push
mov
das
pusha
sub
popf
adc
xor
dec
ret
mov
popf
xor
mov
sahf
fwait
cmp
hlt
add
mov
add
mov
xor
notb
pop
ret
insb
xor
push
jbe
adc
scas
test
sbb
leave
popa
scas
out
jle
dec
out
and
inc
add
enter
es
push
sub
pop
pop
icebp
movsl
push
orb
push
adc
mov
cmc
push
or
mov
inc
stc
fcoms
icebp
insb
mov
popf
dec
in
adc
xchg
sub
popf
or
jl
push
inc
outsb
imul
and
rcll
lock
fbld
fidivrl
test
xchg
mov
nop
xor
push
pop
test
mov
in
cmp
jl
add
fiadds
popf
jne
aam
jmp
sbb
pop
add
cmc
dec
jo
stc
das
nop
and
add
icebp
sbb
or
rcll
xchg
cmpsl
ss
xchg
pop
pusha
clc
andb
jne
pushf
fs
inc
xor
xor
sub
jmp
in
pop
mov
lcall
mov
jne
fcmovbe
adc
movsl
das
iret
fnstenv
jmp
int
ljmp
out
aaa
mov
add
mov
jl
and
cmpl
into
movsb
popa
mov
cmp
subl
pop
fdivl
sahf
aaa
mov
mov
movsb
dec
xor
or
sbb
out
icebp
mov
jbe
mov
xchg
or
dec
mul
sti
push
fwait
mov
jns
pop
movsb
jno
xor
lds
stos
fimull
stos
mov
mov
adc
imul
lcall
mov
daa
inc
inc
mov
rorb
dec
mov
xor
add
sub
test
inc
fdivl
adcb
cmpsl
adc
push
out
subl
pusha
sub
mov
lock
int
insl
je
jmp
jns
fcmovbe
or
jecxz
inc
and
mov
lock
aas
push
xor
or
push
and
ret
cld
negb
scas
jb
scas
and
pop
cmp
add
jge
rorl
adc
push
mov
js
mov
push
xchg
add
bound
std
xchg
in
lea
aam
push
fcoms
lahf
xorl
mov
addr16
push
sbb
insb
push
insb
lea
xchg
pop
lret
push
insl
in
mov
shrb
adc
mov
pusha
in
inc
aam
mov
addb
xchg
lret
jnp
dec
or
inc
in
leave
sahf
pop
pop
das
ja
add
mov
sub
cltd
and
jecxz
arpl
dec
jmp
sbb
mov
add
ror
or
cmpl
movl
movl
mov
jmp
movl
movl
jge
push
push
push
call
or
sbbl
mov
add
or
orl
sbb
mov
xor
or
sub
and
add
mov
cmpl
movl
movzbl
movzbl
jmp
mov
jge
pushl
push
push
pushl
pushl
call
mov
mov
sub
not
adc
incl
sbb
xor
mov
mov
add
mov
adc
shrd
adcl
shr
mov
mov
negl
xor
xor
or
mov
sbbl
movl
xor
movl
cmpl
movl
mov
jmp
mov
movl
jl
push
call
adcl
addl
orl
xor
movl
movl
movl
andl
movl
incl
movl
movl
cmpl
movl
movl
mov
jmp
movl
jge
pushl
push
push
call
sbbl
subl
andl
sbbl
decl
movl
movl
cmpl
movl
movl
movl
jmp
mov
je
push
pushl
call
subl
add
addl
sub
andl
adcl
add
cmpl
movl
movl
jmp
movl
jbe
pushl
call
adcl
adcl
xor
sbbl
subl
xor
xorl
movl
movl
not
movl
cmpl
movl
movl
movl
movl
jmp
movl
jle
pushl
pushl
pushl
pushl
pushl
call
orl
sub
xorl
andl
decl
addl
sub
movl
movl
or
movl
movl
mov
and
mov
movl
jmp
out
adc
adc
sbb
mov
ds
sub
push
push
sub
push
sbb
das
leave
cltd
popf
aaa
or
sub
push
jb
add
jp
inc
sub
jns
ret
imul
fs
cli
mov
es
loope
xor
pop
ret
jo
pop
loop
sbb
jb
add
test
lret
add
sub
int
test
ja
push
xor
stos
ficompl
stos
test
mov
mov
lret
jg
xor
ja
ret
lahf
cmp
rcrl
outsl
inc
scas
lods
cmp
sti
mov
div
in
sahf
and
rclb
push
sbb
add
test
in
sub
add
cmp
push
test
sub
je
shrb
js
pop
mov
sarb
pop
nop
pop
sub
pusha
push
stos
mov
adc
push
xor
push
push
loopne
stos
pop
sbb
cmp
add
sbb
cwtl
pop
jbe
loop
xchg
roll
and
fsubrl
dec
inc
in
xchg
xor
and
pop
or
add
jle
nop
lock
fdivs
or
pushf
sub
or
mov
pop
movsl
dec
rcr
cmpsl
push
das
mov
mov
out
das
cmp
addr16
lock
jl
jle
inc
pop
sbb
fcoml
in
in
dec
rcrl
decb
leave
insb
xchg
ret
test
stos
add
push
repnz
dec
insb
jbe
pop
in
cmp
imul
pushf
push
int
jge
cmpsb
mov
cmpsb
ja
push
jl,pn
push
out
pop
aad
arpl
inc
mul
mov
push
add
std
or
popf
js
sbb
vmovss
push
mov
adc
push
shl
aaa
je
mov
mov
loop
lcall
push
jecxz
adc
mov
push
jmp
mov
or
mov
dec
jp
pop
xchg
data16
xchg
ds
test
sub
dec
xchg
int3
test
rcll
rorl
and
cmpsl
xor
xor
and
jb
xor
sbb
jb
push
jg
adc
sub
and
mov
popa
pop
imul
dec
push
cld
jb
inc
sub
test
cmp
scas
jge
sbb
pop
scas
nop
or
sbb
pop
test
lods
stc
push
sub
lret
sti
lock
and
add
scas
addr16
inc
js
and
out
sub
cmp
outsl
and
cld
out
dec
mov
outsl
add
jle
xor
hlt
mov
insb
pop
pop
xchg
cmp
push
rolb
ret
mov
xor
sbb
imul
ss
jmp
xchg
shrl
jae
ror
xor
adc
aam
push
outsb
int3
sbb
mov
repz
movsb
xchg
or
lret
add
jae
xchg
gs
mov
mov
add
daa
adc
sbb
jecxz
or
andb
sub
imul
xchg
xor
adc
arpl
and
repz
inc
inc
movsb
scas
stos
push
imul
movsb
inc
data16
arpl
arpl
sub
sbb
xchg
out
and
mov
stos
enter
pop
jbe
push
lods
les
aas
aam
insl
pusha
ret
jnp
or
out
fildl
pop
push
pop
mov
jae
mov
pusha
jbe
push
dec
sub
dec
jno,pn
mov
inc
xor
sbb
addb
or
mov
push
mov
imulb
jno
pop
scas
fwait
in
adc
loop
ja
cmp
test
out
sbb
fidivs
pmuludq
insb
fs
add
cli
push
pop
jle
stc
add
outsb
cltd
pop
f2xm1
fxch
mov
in
lods
divb
add
ljmp
popf
insl
data16
or
lret
nop
pushf
mov
xor
or
add
lcall
add
adc
cs
jbe
in
dec
jo
jne
push
sbb
daa
sub
sub
xor
mov
sahf
lock
push
fs
out
xor
fstpl
push
movsb
loopne
push
mov
push
iret
divb
subb
hlt
mov
sbb
xchg
jno
cmpsb
es
daa
and
cwtl
pop
idiv
sbb
lods
xor
mov
adc
lods
out
sub
cmpsb
mov
aam
xchg
xchg
jne
and
imul
push
inc
mov
fstpl
jo
mov
xor
pop
adc
xor
lret
mov
mov
lods
into
mov
mov
and
repnz
adc
std
flds
cwtl
xor
ds
dec
lret
out
mov
adc
push
cmp
xor
or
jg
jmp
xchg
enter
out
and
hlt
sbb
sbb
out
jb
mov
inc
mov
out
push
xor
adc
sbb
insl
lods
les
sub
add
mov
daa
mov
outsb
mov
sahf
sbb
pushf
add
push
mov
cmp
adc
sub
mov
popa
in
pop
fisttpl
out
push
push
gs
js
push
adc
lock
enter
and
aaa
and
js
ret
cwtl
pop
pop
adc
xchg
mov
icebp
mov
lahf
imul
hlt
and
movb
or
aas
fsubs
popf
out
mov
gs
xor
cwtl
xchg
mov
push
movsb
movsb
fbstp
stos
fcoml
xorl
mov
lret
add
sbb
enter
ror
enter
mov
les
mov
sub
xchg
hlt
lret
dec
add
stos
lods
xor
pop
popa
outsb
add
dec
xor
push
lret
out
sahf
sahf
xchg
jmp
outsl
das
xor
insl
insl
sbb
iret
imul
mov
cmp
cld
scas
out
jne
mov
or
filds
or
lcall
loop
in
sub
xor
outsb
lods
mov
mov
aad
lahf
pushf
fsubrp
xchg
aam
int3
fdivs
push
mov
cli
stos
into
lods
jmp
xor
adc
ret
out
outsb
mov
xor
lcall
stc
mov
popa
inc
ljmp
ja
fstpl
das
adc
fsubs
jl
les
cli
jg
cwtl
jns
cmp
xchg
xchg
aas
jg
daa
mov
popf
lods
cmc
push
or
add
jno
mov
mov
jg
iret
into
rcl
ffreep
insl
test
lahf
loop
mov
inc
mov
cmp
xor
jns
je
popa
fimuls
jbe
repnz
push
add
in
push
rolb
in
inc
xor
mov
sbb
mov
lahf
arpl
push
xchg
dec
lcall
mov
pop
and
lea
lock
into
repnz
lret
ficomps
insl
dec
and
add
sub
ss
popa
aas
sub
lret
add
cmp
fwait
add
movsb
push
xor
adc
mov
xchg
sbb
pop
lcall
jne
scas
aam
xchg
mov
lahf
lcall
cs
sti
dec
jb
fs
js
cmp
lock
sbb
cltd
fnstsw
jnp
mov
jnp
dec
fwait
cltd
push
flds
sub
mov
rclb
scas
outsb
insb
out
stos
jp
jne
pop
push
inc
loope
clc
outsb
leave
jb
int
lret
lock
lcall
sbb
es
shl
outsl
rcll
popf
xor
add
je
int
icebp
add
mov
out
mov
addl
ret
dec
mov
scas
or
pop
negb
mov
jmp
cmp
adc
mov
jb
pop
fdiv
pop
pop
xchg
cs
adc
mov
gs
cmp
mov
sar
lock
jne
jo
jne
push
inc
subl
xlat
xchg
xchg
pop
js
loop
lds
jne
adc
sar
enter
cmpsl
fnstsw
pop
and
shlb
aas
popa
fwait
inc
mov
pusha
and
in
mov
jo
pop
rcll
and
xchg
xor
lods
pop
inc
jmp
inc
ljmp
jp
je
das
pusha
add
or
ffree
dec
pop
std
addr16
sub
leave
jmp
inc
cmp
fimull
inc
test
and
jbe
orl
clc
ja
in
repz
ljmp
adc
and
xor
or
pop
loopne
mov
xchg
dec
decl
pop
adc
loopne
cmp
imul
sbb
test
repz
mov
vcvtps2pd
xor
xchg
scas
repnz
lods
sbb
or
loop
mov
jns
cmp
ja
mov
push
aas
inc
push
lahf
pop
xor
dec
pop
mov
repnz
aas
xchg
rcll
ja
jno
mov
add
out
les
insb
mov
ljmp
dec
jnp
mov
dec
mov
mov
ret
aas
insb
aam
fwait
test
out
rclb
xchg
and
inc
xor
clc
sar
sub
scas
call
sbb
inc
je
push
mov
cmp
imul
xor
in
mov
insl
dec
inc
push
in
pop
sbb
dec
rcl
outsb
enter
xor
je
in
rol
rolb
daa
enter
int3
pop
mov
lret
lock
repnz
push
ret
iret
daa
pop
add
test
sti
aaa
lcall
decb
outsb
sub
jmp
fidivs
movsb
shl
dec
add
sbb
out
addr16
add
and
ljmp
mov
xchg
sbb
xchg
movsl
cmp
mov
inc
mov
cmpsb
dec
aad
mov
pop
mov
mov
fistpll
xchg
add
jnp
pop
jae
out
out
ficoms
mov
push
rolb
mov
adc
in
clc
stc
fisttps
int3
mov
cmp
aaa
sub
cmp
jp
lods
cmp
shll
mov
sarl
hlt
cld
push
outsb
cs
pop
sarb
jne
fdivp
fcompl
push
pop
sarb
insl
shrb
in
xchg
inc
inc
sbb
add
or
push
sub
adc
push
daa
ljmp
inc
ret
sub
adc
loope
cmc
push
sysexit
and
adc
xor
mov
xchg
daa
out
int3
call
and
fdivp
cmp
cmp
pop
idiv
sti
mov
out
out
inc
and
inc
sub
jns
rcr
push
cmp
test
pop
add
add
into
cli
rcrl
mov
push
mov
cmp
jg
sbb
rcrb
pusha
jmp
and
fwait
lcall
and
push
loope
jecxz
xchg
arpl
inc
mov
adc
cwtl
aaa
pop
xor
into
pop
mov
into
push
mov
cmp
inc
cmp
jae
jmp
dec
rcrb
sbb
xor
pop
jge
jb
inc
or
mov
add
repz
mov
or
mov
cld
inc
stos
push
push
inc
dec
jge
mov
int
adc
mov
sti
bound
inc
or
and
cwtl
pop
mov
outsb
movsl
subb
cmp
add
cmpsb
xor
js
push
sbb
cli
arpl
sub
sbb
sbb
or
arpl
into
les
pop
aam
pop
out
adc
aam
inc
call
pop
add
cltd
cmpb
jb
aaa
fisttps
mull
add
push
jp,pt
mov
mov
mov
outsb
outsb
mov
lahf
nop
and
adc
pop
mov
jp
pop
dec
mov
popa
shl
pop
push
mov
sahf
jns
lret
sub
xchg
add
push
ss
std
movsl
cmp
mov
addr16
daa
or
inc
pop
pop
ja
sub
loopne
or
pop
frstor
ja
dec
cmp
test
push
icebp
mov
movsb
pop
xchg
or
insl
mov
xchg
sbb
pushf
dec
xchg
jnp
inc
inc
mov
fimull
ret
sar
sarb
out
das
sub
push
fsub
pop
outsl
xchg
out
mov
jne
cmp
fsub
leave
pop
jo
in
int
clc
test
in
sub
testl
jb
dec
push
xor
push
dec
adc
xchg
mov
pop
pop
lret
sub
mov
mov
sbbl
loopne
xchg
insl
addr16
sahf
call
xor
dec
xchg
xchg
ficompl
pop
jno
inc
xlat
push
push
add
adc
xor
sbb
fcmovu
jns
repz
sub
clc
outsb
sbb
sub
iret
out
sti
mov
dec
test
xchg
xlat
and
push
mov
in
call
jmp
pop
and
pop
and
xor
cmpsl
add
mov
mov
ficoml
push
mov
mov
mov
mov
test
cmpsb
inc
and
jae
pop
pop
insb
test
push
adc
cmp
test
lahf
push
and
lcall
jnp
pop
ja
int3
movl
loope
fstps
sub
and
ss
inc
push
mov
add
or
cwtl
mov
sbb
fwait
xchg
or
mov
jmp
outsb
xor
movsb
or
imul
sbb
call
xchg
push
or
push
pop
inc
push
scas
lea
loopne
sub
pop
adc
or
or
loop
pop
imul
mov
cmp
and
dec
sub
je
es
or
jo
adc
mov
cmp
and
repnz
xchg
out
add
dec
popa
cld
push
ret
jmp
inc
xor
scas
incb
jb
push
or
jg
jl
add
push
stos
pop
inc
lock
xor
pop
push
xchg
pop
ja
adc
aaa
xor
jmp
mov
popf
mov
fwait
hlt
dec
lahf
ret
je
mov
fdivs
mov
das
mov
fs
lock
fistl
jno
sbb
sub
das
imul
mov
cmp
outsl
aas
stos
sarl
mov
pop
mov
sub
push
fldenv
or
out
imulb
pop
xchg
lret
cmp
pusha
aam
sub
inc
mov
fistl
pop
jne
jne
xor
mov
lock
jae
pop
fldcw
or
ficoml
inc
add
pusha
xor
stc
dec
sub
mov
mov
cmc
or
inc
insb
fistl
sub
arpl
fs
pop
aam
dec
cmc
out
jno
jno
push
dec
xchg
xchg
movsb
push
pop
test
pop
jle
xchg
cs
or
or
mov
mov
cmp
addr16
repz
adc
jno
xchg
movsb
and
jecxz
and
out
jb
mov
sbb
mov
inc
adc
movsb
jns
pop
xchg
mov
cwtl
lcall
sbb
ds
call
add
mov
mov
and
jbe
pop
or
sbb
loope
jg
shrl
inc
cs
rorl
sbb
push
add
dec
out
push
aad
int3
mov
xchg
xor
je
jl
xlat
in
js
xchg
push
xchg
add
xlat
insl
popa
out
movsb
pop
ljmp
mov
or
adc
xor
add
dec
mov
push
adc
mov
es
ret
sbb
imul
sbbl
lahf
out
xor
iret
sahf
jmp
add
sbb
add
dec
jns
sbb
fs
cmpsl
lods
jl
xor
inc
mov
mov
iret
mov
aam
mov
adc
wbinvd
push
movsl
aad
xor
fsub
dec
psrlq
push
aas
mov
fisttpll
mov
cmpsb
sbb
test
dec
mov
push
sub
sbb
aas
xchg
sahf
nop
ret
leave
into
lock
mov
test
and
pop
jbe
pop
inc
xor
mov
and
jl
cmp
sbb
cltd
movsb
inc
ljmp
and
push
out
cltd
adc
pop
cli
jb
pop
add
mov
or
out
xor
xchg
pushf
add
and
sub
mov
jns
inc
push
dec
std
movsb
xor
leave
test
adc
push
lcall
int3
xor
inc
les
mov
pop
test
iret
cmpsl
push
push
enter
push
dec
shll
arpl
pushf
push
and
inc
enter
scas
adc
sbb
adc
rorl
lahf
mov
mov
pop
push
and
mov
or
xchg
scas
sub
icebp
xchg
lret
loope
les
xchg
sahf
lock
pusha
push
mov
inc
cltd
rcll
pop
jle
mov
loopne
dec
push
jge
nop
aas
mov
notb
rcl
cmpsl
or
cmp
xchg
aad
push
sti
pop
mov
rol
push
adc
loope
lds
xor
xchg
shll
sub
sahf
in
mov
mov
pop
jns
cmpsb
lods
and
dec
outsb
ret
or
sbb
or
add
icebp
repz
cmpsl
xchg
add
mov
jg
dec
das
andb
ret
xchg
mov
pop
out
cmp
push
mov
aam
out
into
fcmovbe
lret
jae
outsb
enter
sub
xchg
pop
data16
inc
fs
lock
jp
jg
cmp
pop
fcoml
xor
out
lods
adc
add
into
mov
sar
pushf
stc
cmpb
movsb
sub
dec
mov
inc
mov
insl
sub
iret
mov
dec
add
push
push
fiadds
out
xchg
stc
push
push
sub
mov
jno
sbb
jl
push
clc
das
pop
icebp
dec
push
inc
test
push
loope
fildl
int
fbstp
jp
lea
negl
push
hlt
push
inc
mov
xorl
dec
and
inc
mov
popf
ss
mov
in
mov
jo
jb
ss
lds
jecxz
jmp
mov
push
cmp
xchg
in
jnp
lcall
add
xchg
testb
dec
pop
sti
in
les
lds
sbb
push
aam
lret
adc
roll
lret
push
arpl
mov
sti
mov
fisubrs
test
inc
and
out
lret
rclb
pop
es
jo
aas
sub
iret
mov
pop
in
or
pop
lock
xchg
clc
mov
or
mov
dec
arpl
loopne
sub
imul
dec
xchg
sub
test
aaa
xchg
negl
fildll
arpl
fst
xor
jp
push
call
inc
jmp
lock
dec
mov
enter
and
iret
add
lret
mov
fs
test
aad
pop
mov
dec
loop
test
daa
xchg
adc
pop
pop
fisttpll
cmp
cmp
jl
xor
mov
das
test
sbb
inc
mov
sub
ds
test
lret
xchg
std
add
sub
pop
ret
jb
mov
test
mov
xor
clc
imul
bound
outsl
pop
or
or
arpl
inc
mov
mov
mov
mov
adc
mov
icebp
pushf
mov
sub
cmp
push
xchg
dec
sbb
into
and
mov
push
nop
mov
std
adc
inc
in
add
ret
ja
add
push
out
cmp
sbb
sub
pop
imul
adc
int3
std
ret
xor
fwait
add
sbb
sti
fcoml
xor
xor
loop
xchg
mov
xor
jp
mov
jl
out
inc
mov
clc
scas
or
int
or
imul
push
insl
inc
imul
cwtl
out
lret
loop
jns
sub
or
clc
repz
adc
jbe
push
jne
jno
shl
inc
negl
sub
fwait
jb
lods
jno
add
ret
or
pop
push
cmpsb
dec
outsl
sub
jmpw
mov
push
js
sbb
push
jne
push
fiadds
mov
cmp
popa
test
imul
fdivrs
cmpsl
addl
adc
lods
push
data16
js
jge
inc
aad
mov
cmp
mov
and
test
inc
mov
and
mov
mov
adc
fidivl
in
into
repz
scas
cmc
push
xor
ds
arpl
dec
andl
in
adc
push
in
int
cmpsb
iret
rcrb
xor
jnp
push
mov
cs
repz
icebp
xchg
inc
mov
icebp
ret
xor
adc
stc
xor
xor
jne
loopne
jae
repnz
sbb
fs
pop
and
jle
adc
std
inc
mov
push
mov
cmpsl
xchg
jp
pusha
subl
push
out
sub
loop
mov
dec
gs
hlt
rcll
jns
out
mov
nop
push
iret
lret
add
insb
shr
sbb
stos
lea
pushw
push
cmp
mov
sub
mov
lret
dec
xchg
test
stos
popl
lcall
push
adc
leave
cmp
adc
icebp
mov
sbb
leave
or
arpl
les
pop
std
testb
jg
adc
xor
push
daa
push
test
or
ret
push
addl
sub
in
les
mov
hlt
ret
xor
in
pop
sub
xchg
xchg
clc
inc
fwait
inc
mov
out
xchg
mull
lods
mov
cmp
daa
cwtl
and
je
mov
fidivs
arpl
aad
inc
gs
fbstp
mov
ds
iret
dec
shr
push
add
jmp
imul
addr16
cmp
popa
adc
inc
shll
aad
data16
test
lods
aaa
cmp
aas
addr16
jae
adc
dec
sbb
loop
hlt
repz
adc
sbb
mov
jmp
in
loope
nop
jae
inc
mov
orl
outsl
and
dec
lods
inc
shlb
test
jne
rolb
inc
js
in
cmp
orb
lea
jmp
sub
or
adc
jns
or
or
incl
push
push
pop
lret
fcmovu
lock
xor
fstl
imul
and
pop
cld
or
movsb
sbb
outsl
jge
add
iret
xchg
push
xchg
add
mov
and
jae
insb
mov
mov
dec
daa
cmp
inc
arpl
int
testb
loopne
mov
sti
and
add
mov
lds
inc
aaa
clc
mov
xor
rcll
mov
add
jl
sbb
mov
push
mov
mov
lcall
jge
xchg
scas
js
std
rorb
enter
xor
push
outsl
call
jg
out
jg
sub
in
fnstcw
sub
xor
xchg
push
adc
loop
jae
push
loope
xchg
pop
add
mov
fsubs
adc
jno
out
mov
xor
mov
mov
cltd
mov
mov
xchg
jmp
pop
add
pop
fcmovbe
push
decl
aam
ficoms
ss
je
cmp
add
sbb
xor
and
shr
lods
sbb
jge
in
aam
push
jno
sbb
push
mov
out
xchg
cwtl
add
pop
test
sub
sbb
sahf
and
push
push
in
popa
stos
sub
jne
cmpb
adc
nop
stos
je
ja
cwtl
mov
ds
cs
and
mov
aam
test
mov
adc
ret
mov
ljmp
pop
int3
inc
or
mov
xchg
add
xchg
or
add
movsl
jmp
mov
push
test
pusha
sbb
roll
inc
pop
push
push
dec
frstor
inc
xor
mov
imul
sbb
rcrb
mov
lret
fisubrl
adc
leave
das
leave
add
sti
push
pop
das
jg
push
outsl
adc
pop
fadd
jne
je
shrb
sub
fldt
ret
clc
cmp
add
xor
push
outsl
mov
in
sbb
gs
rorl
pop
aaa
call
sbb
sbb
lea
jbe
xchg
push
iret
sub
sbb
insl
lods
popa
je
dec
mov
add
movsb
out
cmp
jle
ss
sbb
std
loop
adc
inc
pextrw
xchg
data16
inc
jp
cmp
xchg
shrb
arpl
mov
jecxz
scas
cld
xchg
sub
repnz
push
cmpb
pop
jp
icebp
xchg
out
jo
pop
movsb
ja
outsb
pushf
int3
into
xor
mov
jecxz
icebp
adc
cld
pop
insb
adcb
decb
jns
mov
test
int3
adc
jns
loopne
imul
out
faddl
inc
sbb
adc
scas
add
jmp
dec
fsubrs
adc
adc
ja
and
movsb
and
ss
ret
rolb
push
inc
test
push
mov
xchg
sub
lahf
jo
shll
sub
push
xchg
lock
push
mov
push
movsb
rcll
pop
out
pop
scas
daa
pop
mov
jle
jbe
cmp
add
push
in
mov
push
test
dec
test
iret
xor
rcrb
movsl
dec
add
cwtl
inc
xchg
rcll
push
rorb
ret
push
stos
pop
ja
jo
pop
popf
sbb
ds
cli
mov
cmp
out
push
int3
scas
cs
cmp
daa
cmpsl
movsb
adc
cmp
int3
pushf
ret
jl
adc
mov
inc
xchg
mov
jno
sbb
xorl
inc
mov
fst
in
and
and
push
out
out
and
ds
jbe
or
test
test
sar
jns
push
mov
mov
mov
loopne
xor
or
adc
dec
xor
daa
into
pushf
popa
pop
rcrl
mov
mov
jmp
sbb
dec
inc
out
adc
fisubl
adc
stos
pop
mov
mov
push
push
loopne
sbb
sti
push
outsb
or
fs
in
jae
out
insb
lods
pop
clc
imul
aas
xor
cli
es
pop
jge
loope
ljmp
aad
sub
pusha
ja
mov
gs
xchg
lds
mov
lds
scas
jmp
mov
jmp
push
fists
sbb
xchg
mov
fwait
mov
lret
xor
push
fcoms
xchg
and
inc
test
mov
rorb
or
sbb
jle
adc
add
mov
les
pop
idivb
das
sbb
fs
and
testb
mov
push
dec
jae
or
out
out
jns
sti
sub
out
add
in
arpl
fsubrs
xchg
dec
in
inc
bound
test
mov
js
js
mov
out
sbbb
sbb
jl
add
mov
jo
loope
outsl
fcoms
push
jg
add
cmpsl
aaa
mov
push
push
mov
jae
jb
mov
sbb
outsl
sub
rcr
xchg
mov
outsl
out
mov
orb
popa
call
fidivs
sbb
aad
mov
sbb
sti
cmp
insl
mov
sub
or
mov
imul
add
movsb
addb
adc
xchg
js
dec
inc
push
pop
imul
push
ret
xchg
lcall
js
ss
int3
xchg
xchg
pushw
adc
fstps
push
inc
fsts
pop
aas
cmp
lock
push
loop
or
sub
pushf
xchg
ljmp
cmp
jne
pushf
daa
out
xor
sbb
xchg
jg
sahf
xchg
int
xchg
mov
popf
insl
std
dec
hlt
fsubr
rorb
pushfw
out
loopne
in
call
push
rorb
jo
ljmp
imul
lds
cmpsb
and
xchg
pop
icebp
pmaxsw
icebp
push
dec
pop
outsb
out
notl
call
jecxz,pn
imul
imul
lock
adc
mov
jbe
jecxz
fstpl
insl
sbb
std
sbb
jne
data16
push
mov
sub
loope
inc
in
or
add
add
movl
movl
movl
movl
jmp
movl
mov
jg
pushl
pushl
call
subl
xorl
subl
andl
cmpl
movl
movl
movl
jmp
movl
jbe
push
push
call
adcl
subl
xor
xorl
xor
add
orl
movl
xor
movl
movl
mov
shl
subl
mov
subl
push
andl
push
push
adcl
push
xorl
call
andl
mov
cmpl
movl
movl
jmp
movl
movl
je
push
call
add
mov
xor
xor
addl
sbb
sub
mov
mov
xor
xor
cmpl
not
movl
movzbl
jmp
movl
movl
jbe
push
call
andl
adcl
sbb
xor
add
sbb
mov
negl
sbbl
mov
mov
add
mov
or
mov
adc
sub
cmpl
movl
not
movl
jmp
mov
movl
jae
push
call
adc
dec
andl
adcl
and
add
mov
lea
xorl
mov
xorl
mov
orl
or
negl
and
mov
adcl
or
xor
cmp
jne
mov
mov
sub
shrd
orl
shr
sbb
mov
sub
mov
orl
shl
xor
xor
addl
or
movl
mov
movl
cmp
movl
jne
add
mov
add
mov
xor
xor
cmpl
mov
mov
notl
jmp
mov
notl
jae
push
push
pushl
pushl
call
xor
add
mov
and
and
and
add
sbb
mov
and
mov
cmpl
movl
movl
jmp
mov
jb
push
push
push
pushl
pushl
push
push
push
push
call
movzbl
add
mov
mov
add
mov
sbb
xor
or
mov
xor
and
sbbl
not
not
mov
shrd
sbbl
mov
cmpl
mov
mov
not
movzbl
jmp
mov
jge
push
pushl
push
push
push
call
add
sbbl
adc
movzbl
sbb
movzwl
or
andl
movl
mov
xor
shr
cmpl
mov
mov
movzwl
jmp
movl
movl
jae
pushl
push
pushl
push
push
push
call
or
adc
adc
mov
add
add
mov
add
mov
subl
xor
incl
or
orl
shl
sub
cmpl
mov
mov
jmp
movl
je
push
pushl
push
push
push
call
and
sbb
movzbl
sub
mov
adc
mov
mov
sub
xor
sub
jmp
out
cmp
cmpsl
adc
adc
xor
push
push
int3
mov
xor
imul
sti
outsb
add
xchg
pop
xchg
rcr
dec
mov
push
aad
scas
mov
es
sbb
fcomip
cmp
dec
sub
xchg
ljmp
add
mov
pusha
mov
xchg
inc
xchg
popa
out
and
mov
jno
bndldx
push
mov
xchg
dec
ljmp
adc
mov
jns
cs
mov
mov
rcl
adc
sub
push
dec
in
outsb
pop
daa
jbe
pop
int3
cltd
xorb
cmp
pushf
enter
cmp
repz
mov
jp
jnp
push
nop
and
subl
movsb
push
subl
or
pop
cs
shll
cmp
mov
sub
in
xlat
mulb
push
movb
data16
xor
fcomip
sub
mov
sub
mov
cmp
push
adc
lods
or
repz
xor
inc
aad
jl
mov
sbb
lcall
push
jge
pop
stc
lea
push
inc
adc
mov
jne
mov
or
pop
sarb
jno
dec
mov
repnz
jge
push
adc
pop
into
pop
ljmp
or
aam
icebp
add
rcrl
mov
repz
lods
xor
es
outsb
cmp
push
sti
int3
and
insl
jne
xor
das
mov
sti
test
sahf
add
insl
cmp
xchg
fisubrs
fisubs
mulps
lahf
push
or
cltd
lea
pop
andl
add
adc
mov
fiadds
jmp
xchg
mov
adc
insb
dec
cmp
sub
jb
xor
mov
or
loope
mov
test
or
xchg
mov
rcrl
inc
mov
xor
repnz
fists
xor
rcll
jae
imul
fists
negb
scas
fsubs
popa
aas
stc
mov
cmpb
ss
jecxz
test
xchg
add
adc
mov
pop
sub
and
ja
mov
sub
arpl
push
mov
stos
lret
mov
aaa
xor
xlat
test
clc
cmp
cmp
movsl
cmp
lock
mov
sti
mov
xor
cltd
loop
sub
xor
das
loope
or
outsl
fisubl
sahf
out
sub
jo
adc
sbb
push
bound
out
pop
jl
dec
and
adc
push
jbe
pop
cmp
mov
xor
jl
adc
sub
subb
jbe
ss
inc
gs
mov
leave
jo
jl
or
data16
jp
and
xor
shrb
mov
inc
cs
outsb
or
imul
jp
sbb
fwait
dec
xchg
lret
pop
add
sbb
lods
jmp
dec
sbb
cmp
js
fs
push
jae
aad
push
dec
pop
xchg
sbb
and
icebp
mov
mov
cli
rolb
fidivs
lret
pop
lea
mov
dec
xchg
sbbb
fdivl
fcmovu
xlat
sbb
test
inc
movsb
sub
mov
mov
insl
dec
push
insb
aad
cmp
movsl
jmp
mov
adc
mov
out
mov
cmc
cld
or
outsl
jbe
jl
loop
or
sub
sbb
push
jbe
pop
dec
mov
mov
mov
mov
lret
shrb
jnp
stos
into
stos
lret
inc
call
sbb
push
jle
lret
sub
xor
and
cltd
lods
add
lcall
mov
fs
cmc
cmpsl
dec
mov
push
pop
pop
movsl
into
dec
xchg
dec
andb
hlt
xor
inc
mov
js
mul
mov
xor
lds
data16
pusha
adc
mov
mov
mov
cld
cmp
leave
test
popf
scas
pop
mov
push
xchg
rol
jno
mov
pop
jb
pop
hlt
in
add
das
roll
mov
ja
cmp
jne
inc
les
scas
subl
std
lock
ds
in
outsl
adc
xchg
leave
addr16
fmull
push
hlt
imul
cmc
lods
in
sub
addb
lahf
xorl
dec
pop
ret
in
push
or
lcall
mov
jne
mov
jg
addr16
mov
jbe
lret
sub
stos
jge
imul
add
xor
push
and
mov
xor
stos
dec
aam
sub
mov
fs
push
jns
mov
pop
add
xor
in
mov
lret
push
cmp
fwait
pop
cmp
mov
cwtl
std
mov
inc
inc
mov
xor
movsl
push
out
dec
js
fildll
rcrl
outsb
aad
lods
xchg
sub
mov
cmpb
pop
sbb
cmp
inc
adc
push
pusha
lret
popf
push
dec
cmp
adc
mov
mov
popa
sub
adc
mov
mov
add
inc
cld
jns
sahf
pop
bnd
pop
mov
in
xor
and
push
and
jmp
lret
mov
std
or
lds
add
loope
jb
cwtl
pop
add
mov
add
fsubrl
cwtl
dec
shr
mulb
mov
push
insl
dec
pop
jle
fcmovne
rcrl
mov
mov
xor
sti
cwtl
or
loope
ljmp
xchg
xchg
test
das
push
cwtl
mov
xchg
cmpb
xchg
mov
jns
xchg
push
and
xchg
sbb
mov
aaa
jmp
or
je
push
lock
insb
xor
push
mov
idivb
decb
enter
cmpsb
inc
repnz
fldl
sbb
imul
adc
push
lock
mov
adc
js
out
xchg
sub
pop
adc
stos
sarl
movsb
repz
imul
mov
cmc
out
sub
fldt
jl
and
xor
outsl
jae
ss
mov
je
jae
das
lock
test
aas
addl
cli
push
into
xchg
ja
jge
lock
add
jecxz
push
add
cmp
es
pop
mov
pop
fsubr
in
cmp
xchg
xor
add
xchg
mov
dec
xchg
push
mov
cmpsb
jo
xor
lcall
adc
test
fldl
jp
pushf
cmp
jne
imul
or
push
pop
ja
cwtl
sarb
and
sbb
dec
or
jb
xchg
dec
mov
push
dec
inc
stos
sbb
or
clc
test
jo
mov
pop
aas
mov
or
push
jmp
sub
xor
and
lock
cwtl
je
inc
repz
cmp
add
adc
ret
pop
in
cmp
aam
or
mov
push
mov
arpl
mov
inc
aaa
mov
push
adc
repnz
iret
mov
ss
push
or
sub
jmp
jg
stc
inc
push
gs
in
jle
int3
pop
cltd
pusha
mov
imul
adc
xchg
or
int
lds
jb
jbe
in
hlt
xchg
jo
fwait
adc
push
mov
pushf
add
inc
imul
mov
jmp
jo
push
in
sbb
xlat
lock
push
inc
xor
mov
inc
or
pop
movsl
adc
inc
imul
lds
sbb
mov
js
jecxz
jge
jmp
lods
cmp
ss
out
mov
out
fsubl
movsl
sub
bound
ja
lcall
mov
imul
and
push
and
push
stc
jl
jns
push
arpl
add
add
fsubrl
mov
scas
out
repz
push
pushf
push
fnstcw
xor
or
ljmp
push
inc
mov
push
call
shll
jp
push
notl
xor
lock
fnstenv
loop
es
jae
adc
add
jg
or
push
js
xchg
std
adc
xor
mov
dec
mov
xchg
cmpsb
daa
popf
dec
push
leave
push
ret
test
pop
addr16
adc
push
sbb
and
mov
jp
std
movsl
mov
out
jb
outsb
test
xchg
add
int3
stc
inc
push
adc
aas
loop
mov
mov
jo
sbb
icebp
dec
dec
clc
mov
push
scas
aad
mov
sub
dec
mov
orb
fcoms
push
nop
shlb
inc
mov
and
ror
mov
dec
inc
mov
jns
push
cmpsb
lods
pop
xrelease
pop
out
enter
pop
xchg
imul
mov
adc
in
mov
test
ss
add
jg
mov
jl
in
loopne
dec
es
push
cltd
cltd
add
iret
or
mov
jb
xor
push
outsl
dec
sbb
arpl
loope
cmp
ja
scas
les
xchg
add
sbb
sub
adc
pop
cmpsl
xchg
in
add
aam
das
stc
xor
lret
movsb
and
roll
iret
jmp
xor
test
pop
cs
sub
pop
aas
lret
mov
jae
jne
push
enter
xor
paddq
lods
push
mov
stc
inc
gs
adc
sub
cs
inc
stos
xlat
inc
jae
mulb
jb
push
ret
fiaddl
pop
insb
das
push
and
sbb
das
mov
adc
fadds
dec
sti
hlt
mov
cmp
xchg
mov
mov
shl
push
in
pop
mov
es
fcmovnb
jo
std
push
jecxz
addb
filds
les
dec
mov
push
nop
cmp
cmp
in
push
push
cmpsl
aam
fcmovb
adc
jno
idivb
inc
xor
lret
sub
arpl
out
iret
in
cmc
movsb
rcl
adc
int3
pop
in
leave
sub
and
mov
in
cs
stos
into
flds
cld
add
mov
adc
fbld
fisubrs
add
add
jnp
xor
push
mov
and
div
lods
inc
lret
into
dec
mov
sbb
mov
bound
test
sahf
push
lea
dec
cli
rorb
cmp
inc
iret
ss
dec
adc
dec
repz
xchg
ficoms
mov
test
test
push
xchg
movsb
and
ds
sub
pop
popw
adc
nop
fcoms
dec
and
jg
call
xchg
cmpsl
test
cs
hlt
in
mov
fchs
mov
scas
jle
arpl
cmpsb
divl
fs
std
mov
lahf
aad
ret
ret
les
fimuls
fcompl
mov
mov
cmp
daa
xor
dec
repnz
pusha
jmp
adc
push
pop
cmpsl
out
add
enter
mov
in
adc
mov
add
dec
dec
aam
mov
jecxz
sbb
push
fisttps
jp
faddl
ret
pop
mov
sub
nop
inc
adc
sbbb
shrb
mov
ljmp
bound
repnz
aaa
xchg
cmp
or
divb
jno
inc
in
mov
jo
or
movnti
loopne
gs
dec
sarb
cmp
in
adc
sbb
jb
push
dec
or
int
in
test
es
push
lock
fiadds
clc
outsl
add
movsb
inc
repnz
dec
xchg
sub
mov
lahf
push
pop
leave
ja
pop
sbb
cs
insb
imul
notl
push
lds
enter
jmp
incl
add
inc
test
rorl
aaa
daa
inc
push
roll
loopne
das
out
aas
bound
dec
sbb
jg
xchg
imul
dec
jb
jns
dec
push
shlb
push
mov
movsb
imul
cmp
or
sti
mov
cld
jl
fistl
popf
xor
push
addl
arpl
sub
pop
outsl
out
mov
subb
xchg
sti
add
andb
jge
inc
decl
int3
sbb
push
aas
sbb
rorb
add
nop
out
cmc
mov
adc
pop
addr16
in
or
repnz
sub
push
adc
xor
cmc
xchg
in
imul
cs
pop
fisttpll
dec
out
gs
pop
popf
movsl
or
and
gs
imul
push
loope
fbld
cmp
sbb
push
iret
jmp
sub
mov
pop
mov
popa
and
shl
loop
adc
call
sarb
cmp
and
shlb
aad
xor
dec
cmp
outsl
cmp
pushf
inc
xor
sbb
rcll
cs
mov
orl
ja
push
or
jge
fcoms
xlat
xorb
adc
bound
cmp
sub
adc
dec
inc
sahf
cs
shrl
fcmovnu
call
xchg
mov
in
enter
jp
or
jo
lods
xor
nop
mov
out
mov
fistpl
mov
repz
or
adc
cmp
push
out
in
add
das
cmc
fdivp
adc
ret
xchg
in
xor
ljmp
sub
xor
xchg
inc
test
push
jno
or
cmp
aaa
pop
cli
fsubl
xor
mov
fwait
pop
movsl
jmp
dec
out
fsts
push
jmp
mov
add
insb
std
or
gs
gs
xchg
mov
dec
stos
fisttpl
jbe
movl
cmp
fprem1
adcl
outsb
pop
pmaxsw
push
das
nop
pop
cmp
out
ror
jg
and
xor
pop
mov
shrb
les
add
push
test
xchg
test
push
lret
add
lcall
in
in
rcrb
repz
test
mov
in
ss
out
insb
pop
and
in
xor
pushl
sahf
xlat
ret
pop
daa
mov
xchg
mov
push
jne
nop
dec
sub
dec
fdivrl
es
xchg
jmp
int
fiadds
cmp
push
xchg
xchg
push
scas
insb
fists
cmpsb
pop
xor
inc
cmc
test
rorb
push
arpl
xchg
push
bound
fwait
xchg
adc
mov
jg
pushf
and
jns
rolb
and
jecxz
mov
dec
xor
lcall
jnp
xchg
xchg
push
outsb
lock
sub
pushl
arpl
mov
pushf
inc
push
test
jae
fcmovnu
test
xor
popa
imul
stos
pop
sbb
je
inc
cmc
fsts
mov
in
push
adc
or
jecxz
es
cmpsb
test
dec
gs
adc
xchg
dec
loop
push
fbld
shrl
rcrb
pop
jl
dec
into
mov
shr
ret
and
sbb
ret
inc
test
pop
xlat
cltd
lcall
mov
inc
stos
mov
jmp
push
andl
data16
lods
mov
pop
jecxz
push
push
mov
xchg
cmc
lock
iret
fsubr
cwtl
sbb
xchg
test
bound
and
cmp
nop
push
cmpsl
push
stc
mov
sub
pop
lcall
pop
xchg
jmp
lock
jecxz
fldl
and
decl
jbe
jne
dec
push
filds
jecxz
aaa
sub
dec
jle
cwtl
leave
add
xor
cmpsl
push
les
or
lret
cmp
sub
daa
push
pushf
mov
sub
inc
adc
or
int3
aam
mov
push
in
add
inc
int3
daa
jbe
cltd
and
bound
test
mov
rcl
lret
shll
imul
arpl
dec
pusha
movsl
jg
popf
rcr
xchg
mov
std
jmp
andl
inc
xchg
sbbl
insl
pop
pop
xchg
fistpl
in
jp
xchg
inc
pavgw
pop
aas
pop
inc
mov
out
dec
adc
inc
cmc
add
cmp
xor
inc
pop
ds
xor
je
inc
lcall
dec
mov
push
pop
lock
jle
push
orb
mov
or
pusha
and
rol
divl
scas
out
mov
test
and
addr16
movsb
fistpl
jmp
cltd
sbb
enter
outsb
inc
mov
lahf
mov
sub
sub
cwtl
mov
dec
in
es
mov
push
adc
call
call
mov
jl
jmp
jmp
and
pop
jge
lahf
adc
mov
cld
fsubs
push
mov
jmp
mov
mov
enter
push
jecxz
jae
stos
out
jmp
sbbl
shr
imul
das
repnz
xlat
cs
stos
pop
mov
xor
sub
inc
push
andl
adc
movq
movsb
loope
add
pop
jle
shrl
fmuls
jb
pop
xor
sub
mov
lock
pop
sbb
jmp
pop
leave
jne
lcall
xorl
add
scas
mov
fistl
pusha
xor
outsl
addr16
pop
mov
sbb
cmp
cmp
sysexit
sbb
cmpsl
stos
mov
xchg
jb
shlb
loope
ljmp
push
int
cmp
call
jo
mulb
mov
add
fiadds
adc
add
dec
pop
jo
cs
out
cli
sub
mov
mov
mov
xchg
stc
rclb
jo
mov
outsb
or
fidivs
shll
lods
xchg
out
imul
ficoml
xchg
and
push
roll
push
neg
ds
faddl
cmp
mov
and
and
and
sbbb
add
or
sbb
jno
push
push
and
cwtl
scas
pushf
loop
jns
ja
inc
shll
fwait
mov
push
mov
ret
adc
pushf
fistpl
sahf
jge
xchg
mov
test
fstps
mov
repz
pop
es
jno
sbb
imul
inc
lods
loopne
xchg
cmp
sbb
cld
fildll
cli
cmp
sub
adc
loopne
adc
sbb
mov
xor
cli
mov
sub
xor
pop
xchg
xchg
stos
and
subl
lret
testb
in
negb
sbb
xchg
jnp
cwtl
mov
fbstp
add
or
dec
xchg
fwait
cmc
adc
ljmp
jb
std
cmpsb
mov
out
pop
movb
push
pop
cmpsb
sub
cmp
jae
les
dec
xchg
lods
decb
cli
jb,pn
cmp
add
mov
or
add
sbb
add
aam
mov
sahf
ret
jne
inc
pusha
lret
or
insb
or
stc
pushf
mov
mov
or
add
fs
repz
mov
out
cmp
push
cmpsl
dec
ret
xchg
inc
xor
pop
out
xlat
lcall
push
inc
lret
cmp
or
loop
pop
test
insl
sub
es
mov
cmpsl
inc
or
repnz
or
dec
jnp
scas
sub
mov
inc
fwait
add
add
popf
adc
mov
sahf
inc
push
cmp
xchg
adc
jne
and
jno
add
popa
sub
and
jnp,pn
xchg
enter
fmull
enter
push
or
sbb
mov
push
inc
imul
addb
or
mov
jno
aaa
jno
and
into
push
leave
data16
xchg
push
or
shll
pop
stos
popa
fcoml
scas
lahf
out
lret
sub
add
adc
scas
popf
or
push
sub
push
dec
push
in
xchg
mov
lock
push
out
mov
sbbl
sub
or
icebp
cwtl
in
fwait
pop
repz
clc
adc
lcall
repz
imul
insl
movsl
mov
xchg
movl
scas
xor
stos
loop
push
adc
mov
lods
ret
mov
popf
imul
aaa
fildll
lods
andl
mov
ss
adc
into
test
iret
add
adc
cmp
pushf
cmp
enter
scas
aad
fs
cld
jecxz
mov
mov
fwait
xchg
fidivl
loopne
and
test
sbb
call
inc
in
shrb
test
mov
out
mov
pop
loopne
mov
testl
dec
test
push
mov
and
loop
sub
ret
mov
fistl
imul
ss
jl
mov
adc
fiadds
stc
and
out
add
cli
sub
cli
scas
shll
mov
out
inc
xor
out
adc
cmpb
xchg
inc
or
lods
push
repnz
sbb
test
xor
sbb
cmp
lods
xchg
mov
and
sarl
and
dec
add
cmp
xor
and
push
test
pushf
mov
inc
inc
das
fimuls
fs
pusha
out
sbb
pusha
add
push
lcall
nop
jb
in
push
xor
cmp
insb
inc
cli
xchg
sub
pop
fnstenv
sbbb
popa
and
xor
das
out
xor
jle
pop
testb
fstpt
inc
dec
lods
mov
testl
aam
dec
push
fnstcw
cwtl
cmp
ja
int
mov
pop
or
mov
daa
fimull
add
mov
sbb
sbb
and
push
adc
mov
mov
dec
push
xchg
mov
aaa
out
adc
xchg
cmp
ljmp
lods
sbb
hlt
leave
xor
jno
ret
mov
xor
ja
push
outsl
inc
dec
insl
loop
or
outsl
or
sbb
sahf
movsb
inc
sub
jg
cld
add
and
mov
cmp
dec
fidivrs
imul
push
jmp
fists
push
pop
roll
int3
jmp
std
push
sahf
lahf
lret
es
sbb
dec
add
and
sub
push
insl
es
data16
popa
push
imul
push
push
and
jae
push
mov
int3
xchg
jle
inc
or
xor
aas
cmp
or
ss
call
push
insl
das
stos
bound
jnp
mov
lea
jl
ds
add
dec
add
cli
es
xchg
int3
stos
fwait
ja
out
push
jo
push
mov
mov
cld
aam
dec
sub
mov
sub
push
out
add
cmp
cmp
mov
cmp
jmp
ljmp
jbe
fisttpll
movsb
inc
cmp
jmp
add
mov
push
rcrb
lods
push
cs
pop
ljmp
push
add
cwtl
sahf
or
inc
sbb
pop
notl
aas
ficoml
sub
out
mov
xchg
adc
xchg
pop
aam
cmp
insb
int
mov
mov
xor
mov
into
clc
outsl
rcl
fsts
adc
movsb
mov
or
adc
mov
scas
lcall
pop
add
add
loop
aaa
lock
scas
addr16
cs
cs
dec
jp
xchg
push
add
adc
fldcw
ja
scas
jecxz
stc
jns
xchg
addl
sbb
xchg
popa
xorl
lcall
or
shlb
popf
push
cltd
fimuls
add
sbb
xchg
xor
xlat
loopne
sbb
push
cltd
loopne
lock
out
inc
push
push
pusha
test
push
fcmovu
dec
and
addr16
xor
add
mov
mov
adc
pop
adcb
dec
and
arpl
scas
or
sti
mov
mov
adc
jmp
mov
ljmp
jno
sahf
lret
mov
sub
sti
add
mov
push
or
mov
addr16
add
aaa
jge
jne
stos
repz
pop
inc
push
jl
sub
lock
mov
jecxz
mov
sub
mov
in
call
leave
pop
popf
lahf
and
jnp
aam
push
outsl
pusha
jge
or
pop
xchg
pusha
fs
imulb
mov
xchg
mov
nop
fdivrp
mov
or
adcb
ss
mov
sbb
iret
idivl
ret
mov
dec
in
or
or
stos
sbb
cmpsl
jecxz
sub
and
pushf
jmp
movsl
cmp
add
ficoml
out
test
push
jmp
cmp
aam
jecxz
xchg
hlt
addr16
inc
mov
cmp
xchg
bound
inc
test
dec
jne
test
lods
das
xor
sbb
mov
mov
lds
add
inc
fwait
insb
sahf
fdivr
dec
shl
and
xchg
pop
sub
fucomi
jns
sbb
test
stc
fiadds
icebp
jae
andb
sahf
out
and
mov
enter
jmp
hlt
repz
dec
mov
adc
movsl
movsb
in
das
cmp
xchg
pop
push
daa
ret
leave
pop
mov
and
mov
mov
dec
out
inc
ret
das
sti
notb
lea
inc
in
push
mov
xor
aad
cwtl
or
sub
shll
testl
outsl
sbb
xchg
mov
pop
pop
dec
ss
lcall
sub
xchg
mov
push
cmpl
or
xor
lock
out
mov
and
jb
mov
inc
xchg
inc
stc
mov
and
test
jp
loopne
dec
mov
cmp
bnd
fdivrs
and
jns
adc
sub
xchg
daa
stc
loope
jl
insb
int3
pop
push
lea
and
iret
lds
sub
pop
cltd
and
addb
lods
in
fs
adc
mov
or
push
out
pusha
sarl
sub
mov
out
xor
int
mov
in
add
cmp
std
test
sbb
mov
sub
leave
adc
push
out
xor
ds
mov
int
testb
js
pop
js
add
movsb
frstor
xchg
fildl
lahf
mov
inc
xor
clc
scas
arpl
pop
je
pop
repnz
pop
xlat
call
pop
cmpsb
dec
mov
cltd
imul
sahf
imul
cli
leave
mov
add
adc
outsb
clc
lret
test
cmp
out
dec
iret
cld
test
les
push
fidivl
in
aas
sbb
cmpsb
pop
idivl
out
mov
push
xor
push
loop
fcomi
jp
outsb
xor
push
jge
scas
mov
inc
or
add
inc
xchg
mov
test
sbb
cmp
and
pop
in
xchg
dec
outsb
mov
gs
outsl
sti
cmc
add
sbb
mov
fwait
nop
jno
enter
dec
mulb
outsl
mov
ret
xor
cmp
add
insl
push
jmp
cli
adc
push
lea
insb
xor
into
sub
dec
fwait
popl
std
sub
aam
insb
mov
push
or
in
in
fistps
mov
mov
insb
bound
mov
and
inc
loope
in
jecxz
fsubl
or
add
shll
lods
cmpb
mov
test
mov
dec
mov
in
sarl
and
repnz
popa
add
rcr
adc
subb
mov
mov
bound
cmc
es
adc
mov
popa
sahf
int
add
fwait
test
addb
in
imul
das
xor
adc
lea
push
xchg
mov
loop
into
cmp
cmp
lcall
ret
push
push
jae
mov
and
mov
mov
push
jmp
and
xchg
cmp
cmpl
not
mov
jmp
mov
jne
pushl
push
pushl
pushl
pushl
call
sbb
xorl
add
addl
movzbl
or
mov
sub
adc
mov
addl
mov
cmpl
mov
movl
movl
jmp
movl
not
jbe
push
push
push
push
push
call
movzbl
sbb
adcl
mov
and
xor
xor
xor
mov
and
add
cmpl
mov
mov
movl
not
jmp
movl
jbe
pushl
push
pushl
call
xor
add
sub
inc
adc
orl
adcl
mov
mov
mov
add
shrd
incl
shr
adc
mov
cmpl
movl
mov
mov
jmp
movl
movl
jle
pushl
pushl
push
push
call
xor
and
xor
movzwl
sbb
subl
xor
or
mov
sbb
mov
and
mov
sub
xor
sbb
shl
sub
xor
orl
or
mov
cmpl
mov
mov
mov
mov
jmp
mov
jb
pushl
call
subl
movzbl
and
mov
add
orl
sbb
sbb
sub
mov
shrd
addl
shr
mov
mov
adc
mov
addl
xor
xor
adcl
or
shl
lea
mov
subl
mov
shrd
shr
xor
mov
sbb
mov
inc
mov
movzwl
sbb
xor
mov
and
mov
xor
andl
or
adcl
shl
cmpl
mov
mov
mov
movl
jmp
movl
jbe
push
push
push
pushl
call
sbb
addl
mov
sbb
mov
xor
sbbl
neg
imul
xor
jmp
fistpl
sbb
jmp
push
test
lods
int3
outsb
inc
dec
push
push
sub
push
push
add
sub
aaa
repz
into
idivb
mov
xchg
mov
xchg
mov
cmove
mov
and
std
inc
sbb
xor
adc
in
cmpsl
inc
and
pusha
jl
js
fstpt
mov
loop
lret
xorl
pop
imul
fmull
popw
xor
sbb
xor
mov
push
add
fiadds
out
jne
mov
inc
fld
jae
add
ljmp
fistl
mov
enter
sub
shlb
cmp
in
adc
fsubl
and
cwtl
dec
bound
les
xlat
cmp
pop
cmpb
inc
test
jecxz
sub
mov
push
popa
lret
mov
aad
outsl
mov
sub
lods
fildl
jecxz
jb
cmp
outsl
push
xor
lods
xor
sub
mov
pushf
mov
jo
sub
pop
jne
and
popa
push
mov
jl
loop
mov
xor
mov
jae
test
lds
bound
xchg
aam
repz
leave
rcrl
unpckhps
add
mov
pop
lret
sbb
rcl
repz
mov
mov
fwait
adc
xchg
popf
jg
adc
arpl
push
pop
or
cmp
pop
sbbb
mov
or
add
inc
cmpl
in
hlt
xchg
push
adc
psrad
pop
mov
pop
sar
daa
cwtl
stc
mov
negb
movntq
loopne
mov
lahf
jb
inc
enter
das
out
adc
inc
pop
mov
and
push
setb
cld
inc
pusha
orb
leave
into
arpl
in
movb
mov
in
test
sbb
enter
fstpl
adc
movsl
arpl
mov
fstps
pusha
dec
push
adc
scas
cmp
xor
jb
in
fidivrl
mov
lds
mov
rclb
sbb
outsb
repnz
dec
aad
sub
add
lret
push
pusha
ss
jb
adc
add
or
das
mov
xchg
adc
cmp
adc
repz
xor
in
rolb
mov
inc
je
popa
dec
imul
push
movsb
or
mov
js
adc
divl
push
pusha
adc
jp
mov
rolb
sahf
or
dec
xchg
dec
xor
adc
testb
addl
in
xchg
lock
xchg
cltd
pushf
movsl
cmp
aad
or
je
sub
les
adc
andl
cmpsl
sahf
mov
in
popa
lea
inc
mov
inc
jmp
ljmp
ljmp
bound
jns
sbb
daa
repnz
mov
mov
fstl
rcrb
int3
pop
fwait
rcrb
sub
xor
js
fwait
lea
sbb
jno
aam
jb
dec
movl
pop
das
cmp
mov
out
fbstp
and
cmc
mov
xor
xchg
ret
sbb
push
int3
add
push
cmp
into
outsb
jb
lcall
xchg
and
outsl
andb
cmpxchg
jmp
and
stos
inc
jb
jl
mov
sbb
xchg
imul
out
loopne
es
sti
mov
mov
inc
out
inc
lds
push
xchg
pushf
cli
mov
xchg
adc
lret
and
push
fidivrs
into
push
xchg
cwtl
jl
movsl
idivl
popf
add
movsb
lea
push
aad
clc
aas
pop
scas
dec
jnp
loopne
mov
pop
and
mov
pop
inc
das
push
or
push
les
sbb
mov
popf
pop
shl
xchg
sbb
into
arpl
cli
aas
sbb
lret
movups
pop
jmp
xchg
mov
inc
cmp
sahf
dec
into
and
stc
mov
addl
and
out
push
popa
mov
dec
outsb
cld
in
scas
arpl
mov
scas
jo
or
mov
loop
ss
mov
aas
int
fstpl
bound
jns
fsubrs
insb
dec
imul
mov
fcomp
decb
call
insl
mov
je,pt
mov
pusha
je
clc
lods
sbb
stos
ljmp
imul
cs
pop
in
lock
stc
push
mov
mov
mov
testl
pop
pop
add
push
stos
repnz
pop
fwait
add
cmovg
lea
xchg
pushf
jg
ret
lods
xchg
test
stos
mov
jnp
pusha
gs
jg
lahf
sub
ss
enter
xor
cld
lods
daa
fldt
pop
sub
enter
xchg
data16
scas
or
xchg
adc
mov
xchg
scas
es
icebp
add
or
pop
push
mov
movsl
jns
xor
test
lahf
js
fisttpll
adc
ss
mov
or
adc
call
add
or
imul
inc
ja
test
pop
xchg
sbb
shlb
mov
xor
jbe
aaa
xor
aam
xchg
aas
xor
pop
push
sub
jp
shll
inc
nop
roll
ret
mov
in
push
das
jle
stos
dec
ret
push
loopne
rorb
adc
test
out
rcrb
loopne
mov
leave
out
sub
sahf
xor
jp
jmp
sahf
stc
push
xlat
mov
lock
cmp
mov
sub
and
pop
push
stos
xchg
pop
push
push
dec
dec
outsb
ret
mov
mov
sahf
pop
sar
adc
mov
inc
pop
mov
ret
stc
push
xlat
mov
jno
fidivl
and
dec
sub
mov
push
rcll
ret
cmp
outsb
test
xor
mov
setg
mov
inc
pop
inc
xchg
dec
xchg
push
xchg
push
inc
push
add
push
mov
dec
daa
outsl
xor
push
or
inc
and
fildl
enter
in
push
faddl
push
jg
sahf
out
and
sti
push
js
out
call
xchg
cwtl
cmc
push
test
jge
mov
shr
push
pop
nop
insb
stos
iret
push
outsb
inc
xor
mov
gs
hlt
xchg
cmp
jo
imul
mov
inc
jle
aas
xchg
pop
jl
sub
arpl
ret
mov
sahf
sub
out
sbb
dec
adc
xchg
cmp
fstl
and
and
aam
mov
pop
xor
inc
fs
stos
inc
psrld
addb
add
jge
loop
negl
lret
jg
mov
out
adc
pslld
out
scas
cwtl
adc
loop
and
mov
daa
jl
fdivrs
dec
pop
xor
jmp
xchg
fdivrs
daa
xchg
fstl
bound
repz
loope
negl
xchg
xlat
and
stos
xchg
imul
mov
cmp
ds
sarb
push
xchg
aas
loop
jle
and
push
sbb
dec
and
and
sub
scas
shlb
int3
sbb
rorb
jne
lods
std
lods
sbb
inc
xchg
xchg
sub
outsb
stos
jno
cmp
int
sbb
and
addb
sbb
mov
stc
jmp
jle
add
push
and
inc
cltd
add
jge
insb
sub
xchg
cltd
aam
movsl
mov
xchg
mov
pushf
out
out
divl
xchg
inc
sbb
mov
shlb
movsb
dec
fildll
jnp
iret
pop
sbb
test
sbb
inc
stos
push
adc
loopne
jmp
xchg
pop
cmp
jae
cmpsb
test
xor
stc
cli
movsb
xchg
loopne
movsb
jno
int
fmuls
cmpsb
sti
push
sbb
sahf
and
std
push
adc
shlb
xchg
insl
fwait
xchg
and
adc
test
push
xor
iret
ret
std
inc
outsb
icebp
iret
fsubrl
add
mov
mov
ficoml
lahf
jle
sbb
ljmp
aaa
std
pop
das
addl
inc
sub
cltd
push
mov
ret
xchg
rcrb
mov
call
push
pop
xor
mov
mov
pusha
or
out
mov
inc
or
addb
enter
mov
fbld
rclb
sub
mov
stos
sbb
aas
and
mov
test
bnd
mov
inc
in
imul
lea
clc
mov
pop
imul
jnp
fucomi
and
daa
mov
frstor
push
pop
scas
sahf
popa
inc
int3
cwtl
out
dec
scas
fs
ds
mov
cmp
or
inc
xchg
call
inc
jno
aaa
inc
das
push
xor
add
ret
pushf
ja
frstor
mov
mov
out
add
out
pop
vcvtsi2sd
mov
pop
add
je
and
xor
and
fistpl
dec
popf
fdivs
xor
xchg
sbb
add
sub
dec
out
mov
cmp
lds
stc
sbb
ds
sarb
adc
mov
loope
mov
dec
stos
sbb
ja
add
mov
inc
or
aam
inc
pop
fstpl
xor
rcl
xor
icebp
int
jnp
negl
fildll
cwtl
lahf
mov
jl
cmp
dec
cmpsb
push
fists
dec
movsb
stos
mov
daa
add
pushf
push
inc
add
or
sub
sahf
jle
pop
inc
sbb
or
mov
pop
bound
aam
in
and
fs
mov
dec
cmpl
fst
into
sub
mov
pop
out
jge
xchg
int3
xor
push
pop
lods
add
pop
vpsubd
aas
cmpl
iret
jne
dec
add
dec
push
lret
aas
repnz
push
mov
aad
jmp
adc
xchg
or
adc
push
dec
test
mov
xchg
ret
adc
sub
fadds
int
dec
lret
mov
test
push
push
ds
mov
xchg
negl
mov
cmc
pop
fucomp
outsl
pop
js
or
or
jb
icebp
fstpl
js
cld
dec
push
mov
fisubl
shlb
pop
xchg
mov
data16
les
jmp
pop
mov
sbb
jns
add
jae
pop
out
cs
push
outsb
xor
aas
arpl
add
or
dec
xchg
add
xor
aam
insl
fs
aad
out
outsb
inc
fsubrs
sti
cwtl
mov
cltd
sub
int
add
jp
pop
push
fcmovnb
cs
mov
push
cmpsb
push
aam
inc
xor
lods
pop
push
xor
rcrl
lret
mov
and
in
cltd
sbbb
out
xor
pop
pop
loop
int
jns
in
mov
loop
sub
sbb
or
fcomps
lcall
or
or
push
cmp
xchg
inc
dec
lret
jbe
inc
jl
dec
dec
adc
xchg
dec
add
mov
and
inc
out
test
bound
add
push
sub
push
sub
fsubs
mov
imul
cmpsl
and
shrb
orb
cs
dec
push
mov
jmp
rcl
es
fdivp
mov
dec
dec
icebp
rcll
add
lds
loop
cmpl
adc
lahf
cmc
dec
xlat
pop
imulb
or
in
into
or
or
mov
or
cld
scas
mov
loope
or
add
insb
adc
es
in
jge
and
mov
jmp
repz
mov
jge
std
pop
cmpsb
je
mov
loopne
add
les
xor
jbe
inc
ja
sbbl
in
stos
add
les
sahf
imul
dec
dec
jns
adc
lods
pop
jne
pushf
push
addr16
cmp
out
cmp
lds
push
jg
lcall
cltd
push
subb
pusha
push
and
outsl
sbb
push
inc
cmpsl
xor
dec
lahf
and
adc
lods
repnz
jnp
aas
clc
and
loopne
xor
lahf
stos
sbb
and
cmp
cltd
into
ds
cli
push
faddp
test
xchg
or
inc
in
lea
push
fwait
sub
shrb
push
pusha
xor
xor
aam
mov
loope
insl
xchg
add
ret
and
mov
xchg
add
adc
jae
push
lret
ror
scas
outsb
pushw
movsl
je
dec
dec
pop
jl
add
int
inc
dec
roll
dec
and
test
or
and
jmp
movl
add
cltd
ret
repnz
jo
movsbl
cmp
push
loop
cld
sbb
inc
movsb
mov
cmp
mov
in
mov
or
sar
stc
pop
and
daa
push
xchg
cmp
testl
js
bound
mov
push
cmp
outsb
insl
push
xchg
mov
sub
xor
push
inc
push
cwtl
pushf
dec
mov
sbb
popf
inc
in
cld
dec
lcall
mov
movsb
aam
and
les
sub
and
or
xor
dec
test
dec
sbb
orl
fstl
jno
jl
push
mov
loop
mov
fldenv
mov
and
push
push
lea
fwait
cmp
loop
sub
jnp
push
iret
mov
stos
in
test
cltd
dec
sbb
popf
loopne
es
imul
mov
cli
and
scas
mulb
adc
sub
mov
push
dec
out
pop
pusha
jbe
add
and
movsb
sti
and
in
ds
push
or
dec
xchg
imul
inc
cmpsl
push
loopne
js
jp
insb
in
loop
ds
insb
fsubs
add
inc
inc
and
into
sbb
movsl
push
dec
pop
aas
push
ret
inc
mulb
pop
insl
push
inc
dec
adc
push
pushf
sub
pop
clc
xor
pop
repz
pop
sbb
test
inc
dec
inc
nop
push
cmp
je
lds
cmpsb
cs
nop
dec
leave
sbb
loopne
cltd
cmp
loopne
imul
mov
mov
jl
cmp
mov
adc
es
cmc
das
fs
sub
sub
mov
rcl
inc
pop
cmp
leave
lods
pop
cmp
outsb
aad
xchg
fwait
leave
outsb
das
adc
push
adc
test
lahf
test
das
lock
add
scas
sbb
inc
dec
add
in
sub
sbb
push
call
shll
mov
add
jle
repz
xchg
dec
enter
dec
push
add
dec
adc
not
inc
pop
je
mov
mov
sub
jp
cmp
data16
push
mov
jo
adc
cmp
push
pop
dec
mov
cmpl
mov
sbb
pop
xor
sub
lea
outsb
je
sbb
test
mov
into
stos
addr16
stos
sub
jne
ja
xor
add
mov
cmc
nop
ja
test
xor
data16
outsl
sub
xchg
cmpsl
jne
or
mov
or
loop
push
dec
pop
push
mov
lcall
pop
pop
adc
and
xchg
xchg
inc
push
inc
int3
mov
or
pusha
xorb
dec
cmp
jne
or
pop
dec
mov
mov
gs
sbb
mov
scas
sub
dec
xchg
dec
insl
mov
jae
mov
and
test
push
pop
xchg
out
lret
mov
cltd
mov
popa
ror
rclb
add
nop
aad
jle
movsl
pop
pop
pop
fucomp
ret
popf
test
test
inc
iret
and
mov
inc
cmp
or
adc
fs
inc
jbe
fildl
cli
cs
fs
pop
mov
dec
stos
mov
leave
mov
push
push
mov
iret
ss
clc
popf
jnp
outsl
sbb
and
pop
dec
bound
push
dec
fldenv
add
adc
jno
lret
pop
pop
cmp
or
push
sbb
pop
xor
mov
test
mov
pop
dec
xlat
or
pop
push
sbb
paddsw
insl
ljmp
filds
pop
sbb
test
cmc
fcmovbe
xor
roll
xchg
popf
fs
add
roll
mov
imul
jle
outsb
dec
mov
add
xlat
sub
jmp
fsts
icebp
mov
test
inc
mov
dec
pop
push
js
rcll
roll
mov
pop
push
loope
iret
outsb
mov
cmp
jecxz
jne
out
or
daa
xchg
mov
ss
inc
call
out
adc
loop
cwtl
stc
scas
rcrl
in
insl
and
icebp
mov
mov
mov
jge
imul
and
faddp
sub
jecxz
mov
popf
outsl
xchg
xor
dec
sub
lret
mov
xor
sub
push
scas
dec
cmpsb
daa
sbb
xchg
jle
addr16
lds
imul
imul
shrb
out
cmp
lcall
shll
orl
and
nop
filds
sbb
mov
push
inc
mov
mov
mov
cmp
out
enter
jo
xor
es
idivb
and
mov
jo
sbb
sub
sub
push
sbb
dec
push
push
cmc
or
add
jae
inc
lahf
lods
cmc
cmpsb
fistpll
mov
jae
mov
clc
test
shll
inc
push
movsl
loop
mov
push
add
xor
dec
fsubs
repnz
mov
cld
xor
loopne
aaa
dec
clc
repnz
inc
int3
mov
sub
jne
or
imul
and
and
lret
add
addb
in
push
or
ja
inc
aam
cli
jecxz
roll
sbb
repnz
mov
mov
mov
call
push
jecxz
movsb
dec
and
jae
lahf
leave
shll
push
add
xchg
stos
daa
das
loope
cmpsl
mov
xor
or
xor
sub
rorb
push
sti
hlt
mov
cld
and
mov
jle
js
mov
sub
shr
dec
unpcklps
xor
mov
loop
and
pop
and
mov
sbb
imul
cmp
rolb
xchg
lahf
addl
xchg
dec
lods
adc
cmp
mov
cmp
mov
in
inc
cmp
pop
cmpsb
insl
aas
cmpsl
add
jmp
test
sbb
add
repz
jecxz
sub
cmp
out
shlb
push
movsl
rcll
lret
cltd
mov
cmpsl
fidivrl
push
jne
outsl
lods
es
out
out
movsl
test
outsb
je
int3
loop
sbb
es
mov
in
pop
pop
and
filds
hlt
jb
fdivs
or
sarl
lods
sbb
pop
loopne
adc
loop
pop
push
iret
add
fxch
outsb
and
inc
sbb
cltd
sub
lret
es
pop
les
lea
movsl
lods
jnp
gs
ret
ja
jb,pn
leave
lahf
xchg
xor
clc
scas
xchg
adc
outsl
mov
push
xchg
cmp
arpl
lods
movl
ljmp
mov
inc
xor
push
cli
ret
inc
testb
adc
jecxz
fnstenv
or
outsb
inc
push
out
daa
pop
mov
and
pop
out
outsb
and
jle
pop
setns
enter
add
inc
push
cmc
loope
nop
mov
xchg
and
enter
ja
mov
jbe
shll
int
pop
pop
cmp
mov
scas
stos
test
mov
ficoml
xchg
push
mov
cli
jbe
or
cmp
pop
cld
push
scas
movsl
mov
sub
cltd
fsub
shrb
lock
xor
rol
cmp
push
mov
leave
es
fwait
adc
xchg
push
xor
fcmovne
pop
adc
jle
sbb
jns
fnstcw
lods
mov
pop
lret
into
gs
imul
lods
ja
cmp
mov
popf
push
in
loope
fwait
dec
sbb
scas
shll
fst
dec
push
lahf
add
pop
jmp
shl
in
jle
nop
mov
mul
aaa
aaa
push
mov
adcb
sar
or
and
xchg
xor
lahf
push
and
in
add
insl
sbb
icebp
add
adc
stos
leave
inc
es
aaa
bound
loop
nop
add
inc
or
xchg
pop
add
push
lahf
icebp
fidivrl
test
insl
mov
jb
fsubl
adc
xor
daa
arpl
jne
js
pop
inc
pop
sbb
popf
scas
inc
or
jnp
jl
inc
cmpsl
addl
das
inc
or
jne
aaa
in
mov
add
push
je
pop
test
arpl
js
add
lret
fwait
int3
mov
insb
push
sbb
adc
aaa
ljmp
bound
pop
add
inc
and
xor
jg
push
xor
jo
add
ss
out
out
fldenv
repnz
jns
popf
fildll
mov
pop
jecxz
add
lea
mov
fdivrs
sub
or
xor
nop
pushf
mov
cltd
pop
in
lret
repnz
jge
popa
jb
cmp
imul
repz
mov
sahf
imul
icebp
mov
add
jge
in
lret
iret
sbb
adcl
stc
push
mov
movhps
mov
maxps
repnz
mov
jae
ret
push
ds
mov
ljmp
cmp
jbe
or
xchg
xor
les
aas
cwtl
push
xor
pop
pop
dec
std
mov
mov
push
push
hlt
xchg
subl
and
xor
dec
inc
xchg
mov
jns
les
in
outsb
mov
je
or
rolb
adc
add
cs
in
mov
outsb
test
inc
jmp
enter
adc
mov
insb
sahf
leave
movsb
pop
pop
jb
mov
popf
addr16
adc
pop
add
jmp
ljmp
push
stos
xor
fisubrs
mov
pusha
ljmp
fistl
xor
xor
inc
xchg
les
jp
into
faddl
mov
xor
or
je
inc
mov
enter
fnsave
clc
cs
mov
sub
mov
stos
je
add
push
popf
sbb
xchg
sbb
mov
loop
add
outsb
inc
outsl
xor
xchg
fucom
insb
test
insl
idivb
xchg
pop
pop
mov
imul
inc
out
add
js
inc
push
mov
push
xor
enter
mov
icebp
sarl
lods
lods
mov
mov
cs
mov
lret
in
jnp
in
push
pop
inc
loopne
adc
sbb
ss
in
dec
test
mov
fs
push
mov
xchg
dec
loopne
loopne
jb
aam
push
mov
cmp
js
inc
xchg
xchg
mov
loop
cs
jb
pop
lcall
cld
xchg
frstor
out
sahf
mov
aas
or
jecxz
test
xchg
or
loop
jg
and
and
and
inc
inc
lds
scas
dec
and
mov
aam
imul
mov
cli
ret
push
insb
inc
pop
out
ds
pop
xorl
test
lock
rcl
loop
sbb
movntps
pop
xchg
sub
imul
mov
outsb
test
mov
pop
pop
loope
shr
xor
cmp
fisubrs
loopne
test
add
popf
mov
mov
std
insl
out
jg
sub
sahf
scas
popa
sub
sarb
test
aam
test
jnp
mov
shll
push
fsubrl
adc
push
fsubr
sub
xor
imul
and
outsl
ret
ss
or
or
pop
mov
test
loop
ss
or
dec
repnz
rcrb
loop
mov
dec
lods
lret
scas
xchg
test
sbbl
ret
dec
jle
and
xor
mov
sbb
cmpsl
testl
inc
and
out
mov
jo
stos
and
stc
jne
test
fwait
mov
sub
push
lds
lods
test
in
ficoml
es
xor
inc
loopne
adc
sahf
mov
out
push
add
adc
lods
repnz
lret
outsb
int3
mov
lahf
imul
sahf
movsb
add
stc
cwtl
push
or
pop
dec
out
in
repnz
je
ret
adc
dec
enter
loope
push
jmp
loopne
out
icebp
dec
mov
sbb
mov
adc
aas
mov
adc
lahf
scas
or
jnp
xor
adc
outsl
dec
mov
pushf
std
mov
jmp
adc
xor
ljmp
xchg
adc
jl
push
xchg
sbb
popa
jns
cmp
sbb
cmp
mov
and
inc
push
ret
fiaddl
push
mov
mov
pop
pop
in
out
shll
xchg
fdivs
cmp
mov
dec
xchg
mov
mov
lock
mov
inc
sub
lods
data16
and
and
cmp
cmp
cmpsb
sub
push
leave
adc
cmp
cmp
xchg
add
out
jg
ret
gs
or
cmp
loop
jl
rcll
mov
push
xchg
stc
mov
xchg
xchg
popa
add
xchg
push
adc
lods
lds
push
add
and
popf
insl
inc
cmpsl
lret
aaa
pushf
icebp
mov
and
arpl
sbb
outsl
mov
in
sbb
push
aam
dec
and
jge
rolb
or
rorl
adc
mov
inc
ja
test
into
outsb
sarl
sbb
enter
sahf
mov
cwtl
fbstp
pop
pop
mov
jno
ds
daa
mov
adc
sub
inc
lcall
add
icebp
scas
cmp
inc
in
inc
and
ss
mov
lcall
mov
jecxz
xor
cwtl
into
test
repnz
push
pop
lret
shll
pop
sbb
into
cmpsb
aad
aad
cmp
sbb
stc
sub
clc
mov
cmp
call
int
adc
push
cmp
js
sub
or
mov
insl
int3
dec
in
test
rorl
test
into
cs
out
scas
adc
subl
add
icebp
sbb
arpl
out
lods
mov
and
loope
iret
out
sarb
pop
aam
stc
int
sub
in
and
out
sub
fwait
xorl
cmp
pop
xor
rcl
sub
xchg
jecxz
push
sub
mov
rolb
aaa
add
stos
mov
cmp
mov
addr16
jbe
xor
add
and
outsl
in
ss
sbb
shlb
lahf
fwait
and
addr16
xchg
fidivl
cmpl
js
xchg
aaa
add
leave
pop
jno
lods
mov
sahf
sub
lods
and
pop
pushf
jbe
inc
push
aaa
test
fcomps
inc
sub
inc
jg
pop
sbb
inc
push
or
iret
repz
sbb
sbb
shll
in
cld
or
dec
ffree
cltd
nop
popf
mov
jmp
mov
push
into
jns
mov
addl
push
mov
lea
mov
dec
mov
pop
leave
jnp
cmp
cltd
sti
mov
xor
inc
inc
or
repnz
fdivrl
jp
dec
fwait
bnd
adc
into
inc
mov
or
mov
adc
in
or
add
cmp
mov
popf
call
and
pop
loop
ret
sub
cli
ret
out
inc
lods
jecxz
pop
ror
insb
fnstenv
xor
addr16
push
popa
fstl
jno
push
jno
lods
call
xchg
sub
lret
fs
das
iret
adc
dec
dec
out
inc
test
jmp
int3
xchg
pop
inc
mov
movzbl
or
mov
adcl
shrd
addl
mov
mov
xor
xorl
shr
sbb
mov
mov
xor
or
addl
shl
sub
mov
mov
cmp
mov
movl
jg
sub
mov
and
mov
subl
shrd
addl
mov
movzwl
xor
mov
mov
xor
xorl
shl
xor
or
xorl
shr
xor
mov
mov
mov
addl
mov
xorl
shrd
shr
cmpl
mov
mov
jmp
mov
jge
push
push
call
mov
adc
movl
and
and
mov
mov
mov
sub
imul
mov
mov
xor
xor
or
shl
imul
sub
jmp
mov
mov
shrd
mov
mov
xor
shl
xor
or
shr
mov
mov
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
jmp
lock
cmp
mov
jae
test
mov
push
sub
push
push
mov
in
mov
mov
mov
jbe
out
insl
popf
inc
es
sbb
mov
cmpsb
xor
ret
out
lret
fcoms
xor
jnp
dec
push
and
pop
sbb
xchg
test
adc
cli
sub
jle
adc
jp
shrl
das
jp
call
mov
mov
jbe
mov
fisttps
cld
add
outsb
push
xor
lahf
mov
push
pop
rorb
pushf
pop
cmp
shlb
repnz
cmp
jnp
sbb
xchg
push
out
jo
fbstp
icebp
add
fsubr
popfw
call
adc
jno
in
xor
rcll
rcrl
push
je
sub
lock
push
roll
xlat
add
popa
pushf
add
mov
pop
aam
dec
sub
jge
je
push
sub
push
cmc
ja
sbb
lea
and
out
jle
and
dec
jg
popf
shl
addb
mov
pushf
bound
cmp
adcl
cmp
fisubl
fs
ds
fildl
jae
icebp
cld
and
pop
xor
push
xchg
sub
dec
popa
mov
and
loope
arpl
or
movsb
cmpsb
adc
iret
in
mov
out
xchg
cmp
loopne
jnp
cld
sbbl
add
imul
lds
cmc
push
jl
mov
cmpsl
adcb
aaa
das
cld
std
mov
pusha
clc
pop
sbb
mov
adc
cmp
ss
out
or
sub
rol
dec
test
ret
jecxz
mov
fwait
jo
jle
into
fidivl
mov
pop
add
mov
adc
push
dec
shll
jp
cld
imul
shlb
cmc
xor
je
jae
into
adc
pop
dec
mov
fs
out
sub
out
push
jbe
loop
out
cli
push
pop
rcr
and
rcll
shll
gs
je
sub
jo
xchg
gs
adc
inc
sti
sbb
pop
cmp
fscale
dec
js
fimuls
aam
jae
cmc
fiaddl
fld
leave
or
in
adc
push
mov
mov
sub
adc
aam
in
inc
jb
sbbb
jb
push
mov
add
mov
mov
je
and
mov
push
movsl
pop
test
pop
in
pop
lods
push
jmp
adc
push
add
fcmove
filds
inc
lods
in
and
rcr
mov
pop
lahf
xchg
pcmpeqb
shll
test
dec
mov
test
arpl
or
lods
inc
xchg
ret
xchg
jne
xchg
and
outsb
dec
mov
cmp
mov
push
iret
jge
imul
pop
add
sbb
popl
popf
cmp
pop
mov
cs
xchg
push
xchg
sbb
jbe
cmpl
movsl
jne
pop
pmaddwd
jnp
mov
push
mov
outsb
bound
mov
jmp
fidivl
push
inc
adc
xchg
bound
fsts
movb
in
xor
push
push
or
xor
or
es
call
inc
or
call
pop
inc
repnz
and
and
lret
es
fwait
mov
xlat
es
push
or
iret
adc
lods
and
aad
js
jg
inc
add
and
in
inc
jno
adc
xor
inc
add
loopne
jbe
fwait
pop
in
add
mov
stos
les
jmp
fnstcw
and
cmp
mov
sbb
xchg
sub
insl
jecxz
out
pop
bound
aad
or
test
add
scas
daa
fst
movsl
xor
and
xchg
cmc
mov
mov
insl
add
mov
jne
sbb
xorb
mov
mov
jns
int3
inc
sub
cmpsb
je
xchg
pop
pop
pop
mov
lock
push
jb
icebp
mov
pminsw
outsl
cmp
popa
mov
lods
out
inc
xor
sar
out
adc
add
mov
jbe
andl
or
adc
loope
cmp
sbb
shl
and
or
fiadds
adc
mov
add
mov
inc
js
jae
addr16
pop
mov
cmpsb
repz
stos
rcrb
mov
cmpsb
in
aaa
dec
fs
cli
push
xor
stc
or
imul
stos
in
sbb
add
stos
inc
ret
loopne
xlat
stc
mov
and
popf
mov
arpl
pusha
nop
jmp
pop
fildll
rep
inc
adc
add
in
data16
and
fldt
or
bnd
test
adc
cmpsb
xor
push
jno
pushw
and
sarl
test
xchg
jmp
sub
pop
or
loope
hlt
push
pop
push
sbb
mov
xor
mov
sub
push
pop
scas
push
dec
xchg
pusha
xor
pop
cmp
negb
or
push
jb
jmp
addr16
pop
insl
jmp
mov
jmp
out
mov
nop
dec
das
or
mov
push
fistps
push
iret
pop
outsl
mov
cli
mov
call
and
and
cmp
adc
xchg
mov
ret
xchg
stos
les
mov
nop
sbb
adc
imul
or
fists
ds
xor
pop
cmp
loopne
dec
sbb
sub
insb
push
std
inc
inc
mov
and
adc
daa
push
lds
lds
xchg
stos
mov
jb
or
or
cli
pop
pop
xor
adc
pusha
sti
dec
cmp
cmc
pop
cmp
adc
push
cs
fst
jl
push
jnp
lods
adc
mov
daa
push
inc
push
mov
in
dec
sub
sti
dec
add
push
outsl
pop
inc
and
mov
enter
addb
lds
lock
out
mov
fwait
xlat
lock
inc
cmp
xchg
inc
mov
xchg
fsubrs
cmpsb
add
fcmovbe
inc
mov
fcomps
inc
rcr
pop
out
mov
lods
test
xchg
dec
in
pop
mov
cmp
xor
movsl
and
xor
add
repnz
into
fdivrl
cld
push
mov
xor
sbb
leave
lods
sub
pusha
xor
lods
clc
xchg
ljmp
mov
sbb
shll
in
popa
jbe
inc
aas
mov
cmp
sbb
addb
sub
adc
sbb
mov
xor
jle
push
ffreep
jo
mov
jge
cmp
mov
pop
xchg
xchg
int3
and
nop
xor
cmpsb
and
adc
subb
and
pop
xor
loopne
mov
jp
sub
lcall
hlt
fistpl
movsb
or
test
and
inc
cmpsb
sbb
lahf
jg
and
cmp
inc
mov
xor
inc
lahf
pop
dec
mov
pop
sub
test
test
xlat
out
pop
popf
sbb
hlt
xor
push
nop
or
repnz
clc
aad
sbbl
stos
test
aaa
std
dec
inc
out
add
inc
mov
mov
pop
fisttpl
fidivl
add
xchg
cmc
push
jge
test
sbb
shrb
and
cmp
adc
cmp
add
sub
imul
cmp
mov
pop
pop
lahf
lret
filds
lea
test
ja
sbb
mov
mov
sbb
adc
fidivs
xchg
xor
dec
xor
bound
arpl
xchg
cmp
repnz
sahf
test
popl
adc
adc
mov
jl
pop
mov
cs
mov
pop
out
rcrl
out
stc
pop
xor
insl
push
mov
fldcw
sub
inc
mov
jne
or
sub
lahf
push
dec
jae
and
push
cmp
pop
pop
mov
push
mov
es
jg
call
inc
cmc
mov
push
inc
out
insb
xchg
pop
ja
push
fdivrs
dec
cmp
popf
shll
std
sti
mov
add
cli
cmp
clc
xchg
or
in
fsts
cltd
mov
xor
jge
mov
out
icebp
icebp
repz
add
loop
mov
lahf
fldt
adcl
out
punpckhwd
cmp
nop
call
fiaddl
fldenv
shlb
ja
jle
out
daa
sbb
jae
fsubrs
pop
push
scas
jl
push
loope
mov
popf
adc
std
outsb
fadd
push
out
or
xchg
aad
mov
jb
sub
popf
mov
inc
pusha
repnz
jl
test
ljmp
xchg
gs
in
add
push
push
or
jmp
sbb
ret
sahf
mov
and
bound
sbb
dec
jns
cmc
mul
iret
aas
and
out
dec
push
loope
fiadds
outsb
movsl
inc
loop
iret
or
imul
jne
pop
cmp
sti
and
movsb
mov
xchg
fs
std
ds
repz
loope
ret
iret
sbb
lea
mov
jecxz
jae
insl
in
das
mov
fstps
in
and
mov
xor
call
pop
or
sarb
ljmp
inc
cmp
jmp
pop
je
mov
fildll
in
mov
lret
mov
leave
int
ret
or
jb
les
repz
pop
movsl
jle
pusha
adc
sub
dec
cmpsl
lahf
mov
mov
add
aaa
dec
cmp
cmp
cs
pop
rcll
push
in
mov
mov
dec
and
shlb
xchg
dec
and
and
cmp
in
ss
pop
mov
lods
jb
cmp
vmovupd
jno
pop
mov
je
mov
dec
mov
insb
cmp
movsb
ficoms
xchg
inc
adc
fcomi
popf
das
into
cmp
es
jbe
xchg
adc
inc
icebp
je
jge
stos
sub
enter
in
pop
jae
mov
cwtd
pop
push
arpl
lods
push
sub
in
ljmp
xchg
sbb
mov
or
movsl
or
out
and
adc
test
cmp
in
cmc
add
repnz
dec
jg
pop
mov
test
rorb
mov
cmp
insl
sbb
sub
jmp
xchg
push
jecxz
rclb
in
shlb
out
jle
lods
repz
mov
inc
outsb
mov
xchg
lds
sar
jbe
mov
mov
adcb
sbb
iret
xorl
mov
mov
jge
sbb
arpl
icebp
xchg
jb
sub
pop
pop
jbe
xor
aaa
lea
mov
leave
xlat
je
in
sbb
pop
mov
cmpsb
popf
mov
and
out
jo
lds
enter
lret
ja
cmpsl
sarb
loopne
cmp
adc
mov
jmp
xchg
mov
test
lcall
es
pop
ret
fs
xchg
enter
dec
mov
mov
loope
mov
out
push
sub
xor
faddl
cmpsl
xor
push
mov
jo
and
leave
xor
sbb
call
fwait
mov
loopne
xor
ja
rorl
ja
leave
pusha
and
pop
cltd
mov
in
sahf
push
add
in
rclb
test
in
inc
mov
add
or
ja
frstor
insl
cli
sub
test
in
mov
mov
enter
add
jne
pop
xchg
jge
sbb
cli
in
xchg
movsb
cli
add
in
pop
lret
loopne
push
into
mov
test
mov
scas
insl
xor
sbb
mov
lea
xchg
mov
int3
repnz
sahf
jle
mov
mov
cmp
fidivl
mov
inc
rol
add
mov
pop
into
cmc
enter
pop
cmp
jns
lea
adc
out
add
sbb
xchg
cmp
jne
iret
mov
je
insb
cmp
sahf
fwait
xchg
pop
cmc
loope
imul
mov
mov
xor
add
popl
xor
jecxz
xor
dec
cmpsl
outsl
or
clc
cli
jge
mov
fwait
imull
xchg
lods
or
mov
insl
mov
pop
scas
loopne
in
xchg
lret
enter
cmp
jecxz
mov
les
pop
fsub
pop
push
cli
mov
loopne
adc
aas
mov
je
cmp
mov
mov
xchg
aas
push
in
mov
push
mov
cmp
aas
dec
fidivs
sub
cwtl
and
adc
cmp
cmp
fs
aaa
xchg
cli
int
add
add
mov
mov
cmp
fstps
scas
in
cmp
jnp
out
fwait
mov
xchg
icebp
mov
mov
movl
cld
std
adc
mov
cmp
and
fnsave
gs
and
xchg
out
aas
xlat
dec
dec
xchg
outsb
xchg
push
mov
ja
jmp
push
dec
sti
mov
ljmp
ds
jnp
add
out
mov
stos
and
out
ljmp
enter
jno
adc
popf
mov
inc
out
mov
sub
mov
cmpsb
push
cwtl
xor
xchg
xor
push
div
or
pusha
into
sbb
and
adc
xor
aaa
xor
dec
cld
aas
mov
loope
sbb
nop
sbb
adc
cmp
mov
xor
sub
pop
stos
sub
cmc
add
adc
jl
ja
rcll
cmp
int3
ret
lret
loope
jb
daa
lds
icebp
or
je
fiadds
arpl
int
js
xchg
fildll
push
dec
loope
test
xor
ljmp
and
push
mull
pop
pop
lods
iret
mov
decb
cli
imul
xor
sbb
int
mov
xchg
orl
fisubrl
pop
pop
js
xchg
push
dec
add
out
jns
test
sbb
cmpsl
loope
jbe
rorl
mov
adc
cmpb
xchg
lock
adc
lahf
clc
cmpsl
mov
inc
fimull
in
and
xchg
cmp
inc
add
xor
jae
iret
mov
mov
scas
testl
adc
fwait
add
jne
pop
insb
clts
cmp
hlt
dec
mov
movsb
inc
popf
pop
out
outsb
and
jg
test
adc
iret
sti
mov
shlb
add
inc
and
add
pusha
and
pop
pop
aam
shrb
jmp
mov
lret
pusha
stos
out
pop
mov
out
into
out
or
insb
dec
push
xor
lret
dec
out
xchg
fldt
sarl
cltd
rorl
cmp
movsb
fistps
pop
xchg
icebp
not
imul
gs
jo
idivl
aam
leave
sub
test
test
ds
insl
jb
out
in
pop
adc
add
or
out
xchg
mov
out
in
or
sbbb
lds
inc
jns
jp
out
fcoml
lret
cmp
rorl
cmp
test
test
sbb
inc
xor
lret
sub
insl
cmp
push
cwtl
pop
popa
or
and
inc
out
push
out
add
dec
mov
jnp
loope
mov
push
testl
jnp
mov
xor
inc
andl
ljmp
loop
rol
mov
jmp
lcall
into
addr16
add
lahf
cmp
pop
cmpl
sbb
es
iret
xchg
lahf
mov
sub
inc
movsb
leave
add
lret
mov
push
mov
xchg
jle
mov
xor
inc
and
add
mov
or
sbb
pop
xchg
fistl
gs
dec
mov
enter
jl
in
jne
xchg
xchg
arpl
ret
ficoms
push
add
ret
cmpsb
loopne
popf
dec
jg
faddl
jecxz
pop
aad
jl
mov
call
pop
pushf
adc
pop
dec
xchg
cmpsb
cwtl
leave
mov
mov
pop
sbb
xchg
gs
mov
std
and
dec
xorb
std
or
xor
jnp
xchg
outsb
aas
push
in
hlt
insl
addb
test
push
sub
adc
int
xchg
int
fmuls
or
nop
sub
jae
stos
or
or
xorl
clc
pop
rorl
ja
sbb
and
lea
xchg
stos
and
sbb
icebp
in
and
pushf
cmp
test
xchg
mov
and
aam
ficoms
rcrl
sub
mov
xor
mov
and
sub
ret
pop
leave
cmp
jnp
jmp
fidivl
scas
fsubr
fmull
insb
push
mov
pop
gs
dec
call
sbb
cmp
stc
add
es
sub
sbb
dec
jne
inc
jl
out
mov
and
push
cmp
int3
ljmp
rcrl
ret
imul
push
pop
pop
cs
and
sbb
loopne
mov
xrstor
dec
and
lds
inc
mov
shrb
cmc
mov
mov
mov
pop
xor
sbb
xor
je
jae
dec
out
sub
jbe
call
mov
imulb
fcomip
sub
cmp
fcompl
sub
hlt
ror
mov
in
jae
cmpsl
mov
fildl
cltd
test
dec
sbb
mov
jle
mov
push
cltd
outsl
sahf
sahf
pop
pop
aad
in
mov
sbb
push
xchg
mov
roll
add
ljmp
mov
in
mov
jge
ret
xchg
sbb
inc
push
dec
mov
stc
xor
or
int
test
xchg
mov
loopne
cli
push
sbb
pop
arpl
or
imul
inc
fwait
dec
popf
push
xchg
cli
idivl
scas
iret
dec
mov
out
insl
notl
imul
sbb
add
popa
lahf
inc
loop
hlt
out
repz
pop
aam
pusha
inc
mov
in
sbb
loop
insb
out
aaa
mov
adc
fcompl
push
pop
int3
repnz
mov
loopne
sub
testb
push
dec
xor
xchg
xlat
push
sbb
sub
sti
jle
int
gs
xchg
mov
sbb
and
push
imul
cmp
clc
sbb
mov
add
xor
scas
push
or
es
or
cwtl
stos
add
scas
insl
rcll
movb
and
aas
in
insl
test
sbb
std
lock
loop
or
push
mov
out
xor
leave
cwtl
adc
add
out
mov
rcrb
dec
push
mov
pop
push
fisttps
int
jbe
fsubr
add
sub
std
jbe
cmpsb
mov
fsubl
loop
dec
mov
xchg
shll
push
loope
push
mov
mov
scas
xor
aaa
lods
inc
push
push
add
add
data16
mov
loope
pop
iret
xlat
lahf
mov
jb
pop
cmp
jmp
pop
std
xchg
imul
in
mov
test
pop
daa
cli
jae
mov
jg
xchg
notl
push
adc
dec
jge
add
les
stos
mov
xchg
adc
in
mov
into
cmp
out
lcall
add
insb
lds
or
dec
xor
lods
cmpsb
sub
insb
inc
xlat
xchg
movsl
mov
aam
cmp
shll
loopne
imul
les
enter
in
mov
lea
pushf
pop
lcall
mov
sub
ss
jo
push
rorl
jl
fsts
push
fcoml
add
loope
sbb
lcall
cmp
rolb
dec
mov
ja
bnd
add
push
filds
jb
fstpl
pop
dec
mov
scas
sub
stos
gs
sub
adc
pop
push
es
or
push
inc
fmuls
and
mull
xchg
mov
out
cmp
daa
mov
in
in
push
daa
jmp
cmpb
sub
xorb
dec
enter
cmp
fwait
jg
cmp
mov
jno
push
mov
and
and
push
bound
dec
adc
call
fimull
andl
jmp
and
sahf
loop
add
fs
stos
add
jp
out
sub
fiadds
scas
push
hlt
jno
mov
jo
outsb
hlt
jnp
jl
dec
mov
andl
mov
push
ljmp
jecxz
loopne
pop
xchg
inc
popf
subb
test
mov
ror
xchg
mov
fs
or
inc
dec
mov
test
mov
je
das
repz
aad
pop
loopne
and
mov
jle
sub
call
lods
rcr
pop
push
pop
aas
popf
addr16
jge
imul
sbb
or
out
jle
fsub
pushf
pop
mov
in
pop
push
or
ds
scas
or
cld
les
and
sbb
inc
xchg
jnp
pop
jbe
mov
daa
push
and
mov
jns
pop
pusha
or
call
mov
xlat
fsts
fld
xlat
cmc
mov
push
pushf
loopne
fdivp
enter
mov
mov
push
sub
cmovbe
jbe
cmp
dec
outsb
fstps
xor
inc
mov
repz
mov
icebp
sarl
sahf
and
pop
mov
mov
xchg
aam
cmp
mov
mov
ja
sbb
and
fisubl
pop
cmp
mov
cmp
in
idivb
iret
aad
inc
xchg
iret
lret
aaa
jbe
enter
jmp
scas
sahf
es
sbb
xchg
cwtl
nop
nop
mov
cwtl
mov
inc
mov
pop
lea
or
add
stos
mov
ja
mov
push
add
pop
and
stos
mov
add
out
sub
cltd
push
fldcw
lock
adcb
xor
jge
adc
call
es
sub
fs
dec
jle
mov
adc
rcl
xchg
add
sbb
pop
mov
in
outsl
or
dec
mov
sarl
push
mov
xor
jp
lret
or
xlat
xchg
inc
mov
sub
outsb
fisubrs
imul
add
mov
sbb
divl
mov
sbb
andl
xor
xor
inc
sub
pmaxub
lahf
xor
pop
pop
lea
sahf
mov
xchg
add
cs
in
shr
xchg
mov
fbstp
jo
ljmp
fnstcw
pop
jno
adc
sub
movsl
xor
les
mov
xchg
je
repz
sub
stos
pop
stc
out
pop
dec
cmp
out
es
rolb
insb
int3
sub
fwait
mov
nop
aam
and
push
sbb
out
pop
push
push
xchg
xor
data16
lods
adc
das
mov
xchg
cmp
test
dec
ljmp
out
adc
sarl
mov
xor
mov
cmpsl
stc
outsb
sets
fdiv
mov
xor
stos
push
and
xchg
adc
cltd
and
push
pop
and
pop
add
pop
sbb
xor
in
sbb
fiaddl
inc
lcall
add
inc
dec
mov
jns
sbbb
cmp
jge
ret
pop
mov
jo
test
or
push
sbb
js
sub
xchg
push
sub
es
sbbb
test
sbb
sbb
scas
je
mov
daa
cwtl
les
out
sets
and
mov
and
push
or
mov
notb
inc
imul
cwtl
and
mov
pop
mov
mov
jecxz
loop
scas
add
data16
movsb
jns
lahf
pop
hlt
jge
xor
cmp
sbb
pop
clc
xchg
mov
jecxz
xchg
or
jge
test
pusha
pusha
xchg
test
xor
popa
and
jne
mov
fisubrl
inc
adc
push
and
lret
movsl
sbb
xchg
sbb
lods
push
add
sahf
aaa
ret
add
sbb
out
pop
repz
dec
iret
mov
cli
add
jl
or
data16
xor
les
cmp
sub
mov
push
out
and
mov
sarl
cltd
xlat
lods
cmp
add
gs
xor
push
das
daa
adc
ds
mov
inc
scas
xorl
cmp
push
add
or
test
std
lods
push
cmc
mov
pop
das
lret
push
push
xchg
or
fidivrl
sub
loope
add
enter
adc
and
mov
xor
sbb
cmp
mov
sub
xlat
or
jne
scas
pop
ret
fwait
adc
xchg
lretw
test
jp
jp
jmp
jo
sbb
adc
xlat
and
les
ret
mov
and
xor
flds
ds
mov
push
sbbl
sub
out
cld
dec
mov
pop
mov
jmp
fcomps
xchg
xor
pop
and
ret
xlat
mov
mov
ds
jne
cld
sub
scas
and
std
filds
aam
mov
scas
mov
mov
fsincos
movsb
adc
push
xor
or
lret
mov
push
mov
shrb
inc
pusha
jae
and
negb
mov
ljmp
dec
call
or
inc
mov
shll
lods
cmpsb
inc
ja
fldt
lds
xor
sbb
xor
aas
outsl
cli
or
scas
dec
sbb
lahf
ja
leave
js
and
jg
add
enter
aad
lea
xchg
outsb
xchg
sahf
out
jb
js
mov
rcrb
xor
xor
xor
pop
xchg
aam
loopne
adc
movsb
test
lds
ret
loope
add
add
pushf
jmp
clc
mov
int
out
jno
gs
jno
push
push
mov
sbb
mov
arpl
jmp
sub
pushf
cld
rorb
dec
dec
pop
rcll
add
jb
add
jno
cltd
js
xor
movsl
pop
adc
and
pop
xchg
adc
test
inc
out
sbb
push
push
ror
sbb
mull
sub
jmp
cmp
xchg
mov
push
mov
pushf
iret
addr16
ja
aas
loopne
mov
ss
sti
stos
pop
stos
test
fimull
and
movsl
cmp
or
bound
int
jge
mov
sti
in
lds
lea
sbbl
aaa
pop
pop
lcall
sbb
or
push
pop
push
inc
cmpsb
mov
lea
in
call
jo
pop
divl
popa
in
int
shll
notb
and
call
cmc
fcomi
add
aaa
into
clc
xor
aaa
sbb
es
fiadds
sub
fadd
imul
fnstcw
jae
xchg
aas
xor
adc
inc
xor
adc
mov
add
lret
fdivl
mov
stos
bnd
cltd
jns
pop
mov
push
int
mov
mov
cmp
outsl
cmp
mov
xor
push
sbb
lock
push
inc
mov
cs
fs
lds
fbstp
ljmp
sbb
aaa
lods
stc
mov
and
std
inc
xchg
movsb
mov
ret
push
adc
jmp
shll
mov
sub
push
add
pop
xchg
jecxz
inc
xchg
aaa
aas
push
sub
lock
or
icebp
vpaddusb
sarl
sub
arpl
ja
out
dec
pop
fisttps
pushf
bound
inc
insb
lods
xchg
dec
mov
scas
out
mov
or
pop
aas
shr
iret
das
nop
push
sbb
fdivrp
cmp
out
sbb
in
pop
shl
sahf
xor
lcall
or
xchg
pop
push
loope
add
bound
jns
iret
cmc
loope
jbe
mov
xor
mov
bound
fbstp
pop
sub
xchg
lcall
dec
les
jge
pushf
mov
inc
lods
jl
or
mov
sub
dec
cmp
jmp
or
inc
decl
push
or
pop
scas
mov
out
imul
xchg
stos
repz
loop
out
popf
enter
bnd
xchg
xchg
or
adc
icebp
adc
stos
pop
adc
xor
inc
movsb
mov
lock
sarb
in
xor
ds
sbb
pop
sar
sbb
sbb
cmp
pop
mov
dec
xor
dec
movsb
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
jmp
push
cli
imul
inc
iret
adc
sar
mov
jno
push
push
sub
push
push
inc
mov
adc
aaa
test
xchg
mov
dec
pop
int
jbe
into
ljmp
cmc
sbb
sub
rcrb
std
push
adc
stos
neg
int
fucomp
imul
dec
mov
push
lods
jb
lods
dec
adc
fwait
push
lods
int3
dec
scas
or
jnp
inc
sti
mov
data16
jbe
mov
mov
cltd
arpl
or
insl
aad
adc
sarb
mov
pop
aam
xor
fsub
jnp
fstpl
mov
ret
push
push
insl
fadds
cmc
sbbl
dec
pop
mov
pusha
inc
sub
or
fnstsw
mov
aam
xchg
mov
push
aas
add
aaa
jp
pusha
ss
lock
pop
xor
testb
fs
ja
cwtl
loopne
out
cmp
dec
add
mov
enter
dec
dec
or
jne
or
mov
lahf
sbb
jns
mov
fists
scas
call
mov
push
loopne
out
out
inc
mov
push
or
int
push
cmp
inc
rorb
stos
pop
fisttps
loope
push
std
push
dec
pop
add
addr16
pop
test
fmulp
fstpl
out
inc
adc
imul
outsb
scas
pop
jno
xchg
stos
fiaddl
notl
cmp
pusha
fwait
cmpsl
inc
cmp
push
add
lea
mov
mov
repnz
rcll
imul
jnp
sub
jno
xorl
clc
addl
pop
adc
rolw
mov
mov
xor
xlat
movl
lods
adc
push
inc
aaa
loop
and
mov
mov
jl
jge
ret
out
mov
lea
and
aaa
or
ss
gs
inc
popa
imul
push
lds
mov
cmc
fcomps
pop
call
adc
inc
mov
add
das
movsl
lea
mov
mov
mov
fistps
ja
inc
gs
repnz
push
out
inc
sub
sbb
pushf
dec
jo
sbb
orb
arpl
int
mov
push
push
test
into
jno
xor
out
fnstcw
push
xchg
jb
imul
mov
das
sub
loop
push
pcmpgtb
xor
test
cmp
jae
popa
out
push
pop
sbb
inc
mov
loop
movsl
mov
lret
stos
cmp
loopne
cmp
push
mov
int
mov
pusha
movsl
shll
and
mov
rcr
test
repnz
in
ret
in
push
mov
pop
lods
jb
inc
and
add
push
adcb
mov
popa
mov
fbstp
je
mov
das
cmpsl
dec
mov
insl
or
jg
inc
fidivrs
xchg
push
sub
sbb
dec
out
cmpsl
in
imul
pop
aaa
push
and
mov
xchg
addr16
pop
insb
dec
test
sbb
jns
mov
call
clc
mov
inc
add
mov
mov
popf
out
imull
fs
movsl
push
loope
lea
test
fisttpll
psubq
inc
addr16
imul
xor
pop
js
lds
pop
std
mov
sbb
outsl
cmp
lea
or
pusha
jg
pop
lcall
inc
jne
push
cmp
xchg
ljmp
cmp
lcall
fadd
jnp
inc
dec
adc
addr16
sub
mov
sbb
xchg
lods
cmpsl
mov
mov
cmp
mov
cmp
or
rclb
jb
ret
testl
mov
loope
outsb
adcl
xchg
out
pop
scas
xlat
mov
sbb
push
sbb
pop
and
sahf
aam
outsb
sbb
mov
add
xchg
jne
xor
outsl
push
ja
add
sub
cmp
ret
in
bound
or
push
xchg
int3
mov
pop
stos
out
mov
mov
mov
lods
out
int
loopne
fwait
mov
dec
mov
jge
ja
cwtl
mov
and
shlb
pushf
adc
repz
jl
js
out
gs
std
and
pop
push
rorb
pop
sti
jl
test
jle
lea
out
fcom
daa
xor
mov
int3
icebp
inc
xchg
push
test
xor
out
sub
adc
lcall
js
and
jno
mov
sbb
dec
int
add
and
sub
arpl
inc
test
bound
test
sbb
rcl
mov
repz
push
inc
fwait
sbb
pop
xor
inc
pop
xchg
pusha
mov
mov
sbb
jl
aam
cmc
sti
and
adc
out
and
push
aaa
mov
or
pop
out
and
sub
int
lea
adc
inc
in
sbb
xchg
inc
in
into
loop
ljmp
inc
js
lods
mov
cli
fnstsw
jns
fisubl
test
daa
call
ljmp
xor
adc
loopne
push
insb
mov
xor
mov
mov
leave
jb
fidivrs
jle
cmpl
adc
push
jg
push
test
xchg
mov
mov
xchg
lret
push
scas
daa
iret
xor
lea
inc
jb
imul
xor
lcall
and
jl
cmp
loopne
mov
lcall
imull
out
rcrl
push
test
icebp
xchg
cmpsb
pop
lods
sbb
cmpsb
sub
xchg
imul
jg
pop
std
pop
test
popf
mov
jl
call
into
js
cmc
rcrb
sbb
and
loop
int
popa
test
cs
out
pop
test
push
fmuls
sub
in
dec
mov
fcmovnbe
adc
loope
pop
negb
movsb
dec
subb
push
loopne
mov
jle
inc
lods
push
add
lods
xor
sub
ret
inc
dec
xchg
dec
in
adc
or
repnz
cmpsb
xchg
sti
adc
rcl
lret
push
fcos
pop
or
lret
push
aaa
adcb
jno
repz
sub
pop
lds
mov
sarl
mov
mov
movsl
push
mov
out
inc
xor
cmpsb
add
cmp
sti
cmp
or
jg
daa
popf
dec
push
push
fs
mov
dec
jge,pt
jp
popa
inc
iret
lods
sub
add
and
cs
mov
mov
fnsave
int3
fsubrs
push
push
jb
repnz
and
push
push
jno
and
mulb
xor
cwtl
outsl
sub
push
xor
mov
sub
insl
and
push
andb
cltd
loope
sub
addr16
sbb
sub
icebp
repz
dec
sub
xor
stc
push
pop
jg
cmpsb
std
xor
ja
mov
pop
xchg
mov
shll
adc
xor
cmpsl
xchg
push
mov
push
aaa
movzbl
into
ljmp
jp
or
or
dec
data16
xchg
lret
sbbl
jecxz
test
cmp
add
leave
je
shlb
sarl
and
dec
aaa
out
and
mov
repz
jg
jae
xlat
aad
and
icebp
push
subl
jecxz
sbb
jae
xor
inc
test
push
ss
lea
orl
mov
push
mov
mov
mov
mov
or
cmp
mov
pop
cmp
fwait
mov
add
loope
adc
sub
js
pop
and
sbb
cmp
jnp
pop
mov
mov
push
clc
enter
mov
mov
inc
cmp
ss
data16
add
je
imul
push
push
movsl
lock
add
xlat
sub
jmp
fildll
fcoml
add
into
and
dec
xor
dec
jae
push
and
adc
inc
aaa
int
iret
ret
inc
or
jl
test
and
adc
jl
dec
pusha
and
mov
mov
inc
les
mov
mov
jo
sub
sbb
out
cmp
xchg
fwait
xchg
add
xor
and
test
mov
scas
jae
loopne
aas
insb
xchg
fsubs
mov
adc
lock
jo
mov
mov
cmc
xchg
pop
pop
scas
push
sbb
and
pop
jnp
outsl
in
pop
dec
jae
adc
js
in
jbe
push
pop
stc
pop
ss
jmp
outsb
in
sub
mov
divl
pop
or
repnz
dec
clc
inc
in
pop
in
and
pop
mov
xor
popa
mov
or
aas
jo
je
es
neg
mov
fdivs
adc
cmpb
call
mov
pop
outsl
xchg
clc
fnstsw
xchg
push
mov
daa
hlt
sub
andb
sub
jge
jns
fcompp
xchg
jmp
push
jae
lcall
cs
jno
cmpsl
cmc
push
movsw
dec
call
jnp
iret
test
aad
rclb
pop
adc
or
adc
mov
dec
sbb
mov
mov
push
pop
and
pop
and
cmp
adc
fs
scas
in
xlat
xchg
cmp
xlat
adc
mov
sahf
mov
mov
mov
jmp
out
lret
aas
mov
xchg
xor
inc
addr16
orl
push
lea
out
xor
rcrl
ja
rorb
mov
xchg
insb
inc
jp
scas
inc
xor
mov
add
je
push
dec
in
mov
sbb
rcr
jnp
lret
in
mov
fwait
repnz
fsubrl
pusha
cli
inc
aaa
push
jnp
lea
sub
push
cmpsl
inc
jno
jl
dec
or
fisttpl
addr16
cltd
cmp
nop
inc
loop,pn
lcall
leave
adc
sbb
cmpsl
add
js
sti
inc
sub
and
dec
arpl
popa
movsl
jl
out
xor
cmp
in
xchg
push
sub
adc
adc
fsubrl
pop
es
xlat
in
in
jb
scas
std
fisubs
into
ret
pop
scas
pusha
sbb
xchg
add
in
decb
das
mov
imul
inc
popl
cltd
cmp
repnz
sub
xchg
cmp
inc
adc
xlat
ja
xor
add
push
lahf
adc
dec
in
daa
out
sbb
xchg
mov
std
sub
ffree
or
mov
or
aad
aaa
mov
mov
fmull
jnp
cs
imul
jb
pop
xor
lds
pop
into
movsl
std
rolb
insl
mov
mov
mov
sbb
inc
data16
lahf
add
bswap
or
js
ret
and
adc
jno
movsl
ret
add
addr16
int
das
call
pop
iret
es
loop
cmp
push
movsb
incb
add
insb
mov
test
das
adc
in
insl
lahf
imul
fnstsw
or
add
jo
test
call
push
leave
js
in
mov
mov
loop
dec
out
sub
fidivs
sub
jne
out
jne
lret
sub
into
data16
xchg
in
mov
xchg
adc
pop
popa
loopne
lods
outsb
xchg
mov
mov
or
loope
sbb
sbb
and
sbb
imul
xor
cmp
xchg
adcb
movsb
push
cwtl
leave
outsb
imul
dec
xor
inc
aas
push
add
inc
mov
mov
popa
dec
imul
out
inc
add
add
scas
ficompl
outsl
mov
leave
jg
pop
rcrb
sahf
pop
gs
ss
sub
js
mov
pop
pop
ret
dec
pop
ret
and
or
mov
lds
adc
push
mov
cmpsb
xor
movsl
mov
mov
sti
dec
test
orb
sbb
add
mov
rcl
movsb
xchg
dec
cmp
les
fldl
jo
daa
bound
push
xchg
push
xor
scas
mov
jl
mov
mov
push
inc
test
dec
mov
jb
push
add
in
xlat
and
fidivl
loop
dec
es
ret
outsb
sbb
movsb
das
out
jo
cmp
jg
decl
mov
loopne
pop
xlat
sub
sub
push
fidivs
jmp
jg
out
roll
andl
in
rcll
push
sbb
mov
mov
mov
fdivrs
into
push
add
inc
gs
and
rorb
jno
jbe
outsl
cmp
pop
pop
xchg
mov
push
push
into
orl
and
lret
push
lock
xchg
xlat
fstpt
xchg
pusha
inc
fidivl
pop
xchg
mov
pushf
mov
ljmp
call
xchg
repz
mov
sbb
xor
clc
jecxz
jae
lods
jne
mov
dec
cld
mov
push
add
mov
das
aaa
xchg
pusha
inc
cltd
repnz
cli
arpl
pushf
fidivrs
ror
mov
push
cmpsl
lods
push
adcl
adc
pop
adc
iret
add
or
mov
sti
es
cwtl
int3
pop
std
sub
jnp
xor
lds
fisubl
jae
rcl
add
aaa
inc
filds
cmp
ljmp
sti
stos
xchg
mov
je
shl
negb
aas
jecxz
stos
ret
mov
mov
adc
imul
jecxz
shl
and
insl
paddb
dec
js
cmp
jnp
aas
mov
dec
cs
mov
sub
xor
lock
lods
jecxz
mov
test
test
xchg
in
mov
pop
jne
jno
mov
and
cld
outsl
xchg
push
add
and
cmp
lcall
ljmp
xor
push
out
add
sub
adc
out
ja
and
mov
jmp
jae
pop
rcll
stos
mov
xor
fbld
aas
inc
fs
dec
jmp
sub
arpl
push
push
in
mov
lret
and
shll
add
jne
mov
lds
dec
and
lret
cli
inc
mov
pop
inc
mov
and
xchg
fistpl
sub
or
in
ret
and
scas
cmp
xchg
xchg
add
and
idivl
outsb
pop
ljmp
dec
into
addr16
fistpll
and
mov
das
xlat
jnp
mov
mov
int
out
mov
cmp
mov
mov
insb
outsl
sub
rcl
stc
lock
push
dec
mov
dec
jl
out
add
pop
repz
mov
cld
imul
push
mov
add
dec
testl
insl
sti
jl
mov
push
fidivs
test
jl
and
dec
cld
shrl
fbstp
and
iret
cmp
pop
xchg
mov
adc
or
jmp
xlat
pusha
dec
cmpsb
xor
aam
pop
sbb
ds
jns
rcr
test
enter
dec
lret
push
mov
and
inc
scas
adc
xlat
cmp
rol
dec
in
pop
dec
test
push
js
arpl
sbb
popf
sti
jo
lret
xchg
mov
mov
lcall
add
and
cmp
icebp
jns
jo
jno
xchg
test
cmp
jge
fst
adcb
es
jo
outsl
mov
pop
das
mov
mov
fwait
cmp
sbb
and
cmp
mov
mov
outsl
mov
cltd
xchg
inc
or
xor
add
dec
sbb
aas
mov
jne
inc
adc
cmp
xchg
ficoml
sub
dec
sub
movsl
mov
mov
lcall
pop
xchg
mov
ljmp
jno
aas
jmp
sti
sti
jmp
or
ss
push
pop
enter
dec
cmp
add
rclb
out
scas
cmpl
mov
adc
mov
xchg
ret
jp
rolb
push
leave
hlt
and
and
and
or
inc
jno
not
fnstcw
in
lock
stc
movsl
repz
int
xor
mov
cmp
cmp
mov
mov
mov
nop
xor
cmp
jne
fmull
dec
jbe,pn
movsl
add
bound
sbb
adc
repz
xorb
in
jmp
or
adc
jmp
mov
js
insb
movsb
adc
push
sbb
and
sub
cld
fwait
shll
insl
ret
push
jge
push
popa
loopne
dec
jle
inc
pop
jb
xchg
rclb
adc
and
or
popa
pop
cwtl
cld
cmc
jl
and
insl
jle
inc
in
orl
and
xchg
jg
out
jg
sub
pushf
add
nop
out
loop
test
and
sar
cmp
and
icebp
dec
inc
ret
xchg
sbb
sbb
in
or
fimull
mov
mov
sub
dec
fwait
in
int
or
gs
mov
pop
out
jmp
dec
mov
sahf
mov
sahf
xchg
xor
sub
xchg
sahf
jb
jg
cmp
ret
shlb
notl
xor
test
and
popf
and
push
faddp
movsl
ret
sub
sti
dec
xlat
pusha
jmp
mov
inc
xchg
out
lock
test
test
pop
lcall
mov
or
fidivl
mov
shll
imul
push
loop
sti
enter
sub
and
cmp
xchg
inc
dec
and
sbb
xchg
sub
xchg
mov
xor
clc
inc
xchg
mov
add
xor
mov
pop
in
imul
int
test
cmp
dec
mov
popf
xor
cmc
call
out
xlat
mov
xchg
pop
loopne
adc
cltd
arpl
pop
fsubrs
sbb
and
stc
pop
xor
notl
das
pop
mov
mov
xchg
add
xor
shl
adc
loop
mov
and
out
int
in
sarl
lock
mov
fs
test
or
aam
scas
push
mov
sub
xor
sbb
hlt
jmp
mov
cmpsb
insb
paddb
and
ficoml
cmp
sub
bound
pop
sbb
mull
cmpsb
stos
sub
jl
cli
repnz
pop
add
stc
imul
inc
into
repnz
mov
and
addr16
lods
inc
scas
push
adc
shrb
aaa
or
int3
cmp
in
test
jns
or
and
out
push
fiadds
test
cmc
dec
notb
fdivrs
cld
inc
inc
clc
inc
push
shrb
jne
jno
mov
iret
pushw
xor
xor
sahf
dec
insb
and
and
mov
gs
inc
int
push
jo
mov
movsb
xor
jb
mov
mov
and
imulb
and
mov
jno
dec
and
lret
loopne
fnsave
xchg
das
add
fs
push
lock
push
mov
xor
aas
adc
sub
mov
loop
pop
mov
in
aas
dec
test
or
sti
dec
pop
xchg
xchg
xchg
xor
jo
or
nop
cmp
out
adc
dec
mov
pop
shlb
rorl
mov
xor
xchg
inc
adc
and
test
pop
jmp
push
jbe
adc
dec
fsubl
jp
fcoms
outsl
ljmp
ret
popa
cmp
mov
aad
pop
jg,pn
shll
fstl
nop
lahf
inc
dec
inc
adc
xor
pop
out
mov
outsl
call
sbb
enter
xchg
jnp
xchg
scas
call
sbb
xchg
lods
into
dec
roll
lods
out
imul
sbb
pop
rorb
in
fwait
mov
inc
es
xchg
loopne
rcrb
add
std
add
adc
out
bnd
adc
lea
or
xchg
mov
cli
inc
repz
iret
out
inc
addr16
xor
lahf
call
cmpsl
pop
int3
mov
adc
xor
jo
or
jg
jbe
and
cli
fdivrs
inc
movsl
pop
push
popf
sbb
enter
stos
mov
shll
mov
call
xchg
inc
xchg
lret
jno
prefetchnta
xor
sub
sti
push
push
inc
out
fldl
fists
xchg
sub
push
es
sub
inc
mov
xchg
jmp
sbbl
sbb
or
mov
mov
insb
nop
or
lret
pop
popa
cmp
or
sarb
mov
hlt
scas
frstor
push
and
into
pop
cmpsl
push
fdivrs
jecxz
ss
push
jl
scas
jb
fidivrs
xor
insl
aaa
iret
mov
add
lock
shll
inc
dec
cli
rcl
ds
add
push
loope
shll
scas
lock
mov
decb
call
inc
mov
js,pn
xor
js
mov
mov
pusha
jecxz
es
fwait
adc
mov
jecxz
mov
subl
mov
outsb
fnsave
out
jbe
sub
mov
outsl
xor
shl
and
out
ret
loop
jle
dec
push
jb
sbb
or
mov
jb
cmp
or
loopne
xchg
stc
jmp
fisttpll
movsb
enter
shr
and
subl
scas
add
push
xor
inc
sbb
je
aaa
sahf
stos
pop
sub
cltd
out
xor
push
cmp
add
pop
in
in
dec
rorl
mov
jecxz
aaa
push
add
fsubrs
add
aaa
sbb
push
xlat
xchg
repnz
loopne
mov
pop
push
jno
xchg
jae
out
push
in
pusha
ret
cmc
out
xor
add
int
in
jnp
fcom
sahf
addl
pop
pop
les
mov
push
stos
or
sub
into
push
mov
sub
inc
or
adc
xor
scas
insl
lcall
loop
xor
or
push
cmp
mov
push
mov
jge
and
sub
lods
enter
jecxz
sub
shlb
xchg
lea
dec
loop
jbe
stc
je
cmp
fs
test
add
ja
and
fs
stc
xchg
jb
add
inc
pushf
test
dec
cmp
inc
sti
stos
sub
shl
xchg
pop
or
mov
sub
aad
xorb
jne
and
xor
insb
dec
lea
dec
pushf
jle
adc
movsl
mov
xor
push
cwtl
push
ret
xor
mov
popa
sahf
insl
lods
dec
shrb
lea
sbb
cmp
sub
mov
es
jnp
stos
mov
cmc
sub
pop
and
mov
sub
nop
xchg
test
repz
mov
cmpsb
adc
sub
addr16
or
push
mov
arpl
cmp
add
add
jne
rorb
pop
sub
stc
and
push
cld
cwtl
push
jne
ljmp
mov
jl
mov
dec
in
movsl
into
mov
fucomip
dec
jmp
xorb
xor
or
mov
mov
aam
inc
mov
adc
cmp
jmp
cmp
jns
inc
loope
cmp
jbe
xchg
sub
mov
dec
in
movb
lahf
decb
pop
adc
pop
dec
inc
ds
or
mov
dec
xor
and
mov
xchg
adc
xchg
xchg
mov
data16
mov
jns
mov
add
subb
jecxz
stc
push
int
test
adc
pop
jmp
and
hlt
inc
in
movsb
mov
ds
mov
clc
and
fnstsw
jecxz
pop
out
pop
nop
js
fldcw
imulb
lods
xlat
rol
cltd
xchg
imul
out
mov
mov
xor
push
cmp
dec
arpl
fnstsw
fwait
sahf
xor
leave
mov
cmp
faddl
mov
xchg
xchg
fisubs
pop
push
xchg
pop
mov
mov
adc
push
pop
scas
cli
xor
jecxz
or
sub
icebp
loopne
xchg
or
xor
imul
push
movsl
mov
insb
aas
xor
dec
lcall
pop
fsubrl
aas
add
sub
cmp
dec
testl
mov
xchg
push
jo
mov
jmp
add
sub
push
mov
xor
xchg
xchg
xor
loop
mov
cmp
dec
add
push
jns
hlt
jecxz
push
pop
adc
sbb
mov
movsb
mov
pop
xchg
push
out
packsswb
mov
push
xchg
mov
xor
mov
cmpb
jb
stos
dec
lods
leave
xchg
icebp
sub
mov
pop
pop
cs
xlat
or
xor
fistpl
mov
push
jns
stos
test
ss
ljmp
arpl
xor
jl
lret
adc
push
adc
adc
lea
shrb
mov
ja
sti
sarl
loop
sub
push
gs
xor
jnp
dec
das
pusha
mov
js
jl
inc
int
adc
add
clc
imul
dec
sahf
jo
sub
imul
testl
mov
arpl
popf
xchg
fldl
jp
ficompl
push
jecxz
cltd
mov
std
addl
mov
mov
bound
pop
push
arpl
xchg
aas
loope
sub
es
fnsave
sahf
decl
mov
adc
shll
shl
dec
filds
aas
ljmp
repz
mov
cmp
insl
cwtl
es
lahf
js
std
push
adc
add
outsb
inc
scas
faddl
dec
pop
xchg
and
jnp
fidivl
push
sub
push
das
mov
xor
sub
loop
outsb
enter
lods
inc
mov
cltd
xchg
pop
sbb
add
test
fs
into
push
jae
hlt
cmc
jl
sub
rcrb
cltd
sbb
sahf
cli
mov
enter
jno
mov
mov
dec
dec
ficompl
pop
cmp
mov
push
push
push
call
sbb
pop
mov
pop
sbb
cmp
push
and
or
addl
pop
rcrl
xor
lods
arpl
int3
and
fiadds
mov
fwait
jno
dec
subb
es
shll
vmovhps
jne
mov
aad
jbe
mov
sub
lods
icebp
iret
lea
arpl
dec
jecxz
inc
or
mov
inc
out
in
pop
pop
or
fcompl
adc
icebp
or
xchg
pop
and
and
into
mov
xor
or
aam
repnz
push
lods
sub
sbb
xor
cmp
ja
jmp
pushf
xor
rorl
jno
out
add
push
dec
js
dec
fidivrl
outsl
mov
jbe
sub
xor
mov
shlb
ss
insb
dec
iret
cmp
ljmp
mov
mov
cmp
and
aas
insl
cmpsb
into
mov
push
push
push
adc
scas
cmc
sbb
repnz
cmp
xor
cmpb
add
aas
sub
adc
cltd
xchg
inc
test
rorb
or
fsubl
sbb
stos
mov
mov
xchg
jg
cld
mov
push
cli
inc
mov
rolb
shlw
cmp
aaa
sbb
mov
les
adc
call
xchg
add
popa
pop
mov
addr16
lahf
xor
bound
cmp
cs
sbb
or
xor
fisttpl
testl
and
mov
jmp
movsb
shlb
push
mov
push
adc
adc
sub
push
ss
mov
pop
sub
fdivrl
jns
xchg
inc
mov
jg
mov
mov
mov
jns
adc
dec
push
sub
push
jmp
pop
adc
jp
scas
push
xchg
rcr
fists
cltd
inc
dec
rolb
rcr
mov
cltd
push
or
test
xchg
xorl
jle
jecxz
out
test
xchg
enter
or
mov
sar
rorb
lods
roll
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
jmp
cs
lods
pushf
ds
enter
pop
pop
outsb
jp
push
push
sub
push
push
xor
and
inc
hlt
leave
jo
and
out
cld
push
xor
loope
cmpsb
and
mov
pushf
jge
cmp
jne
mov
mov
shll
mov
call
mov
pusha
inc
pop
ljmp
mov
or
sbb
sbb
dec
shrl
inc
jge
enter
adc
ficomps
adc
pop
jecxz
test
sub
in
pushf
mov
mov
cmp
cmp
outsl
pop
pushl
data16
lds
inc
jge
inc
repnz
leave
insl
enter
movsb
popf
cmp
and
xchg
inc
or
push
xor
rcll
sub
pop
and
xor
dec
mov
rol
fsubrs
inc
movsl
xchg
insb
mov
rclb
add
mov
lods
inc
mov
add
sarl
mov
pop
xlat
or
cmpsb
mov
mov
or
mov
insl
lea
in
and
xchg
je
addr16
cmp
dec
lcall
aad
mov
daa
mov
and
mov
or
dec
insb
sahf
mov
and
pushf
dec
jp
jecxz
fsubrp
movsl
mov
lock
stc
sbb
outsb
aam
sub
cmpsl
mov
adcb
lods
push
jmp
mov
dec
dec
xor
stos
js
test
push
mov
mov
cmc
sbb
pop
imul
add
mov
mov
mov
out
push
andb
mov
jl
fstl
icebp
jno
mov
fstp
daa
dec
xchg
and
aaa
aad
int
icebp
loope
and
pop
scas
jl
iret
lea
and
enter
jp
xchg
adc
inc
jnp
inc
sub
push
rcrb
test
push
ret
mov
add
insb
bnd
inc
pop
mov
add
dec
jo
sar
add
cmp
cmp
popa
out
dec
dec
inc
mov
movsb
hlt
in
lods
push
mov
dec
fidivrs
xor
test
mov
adc
sbb
inc
mov
cmp
inc
jp
add
push
sbb
and
scas
xchg
pop
mov
sub
mov
ret
aas
rcrb
pop
dec
mov
dec
pop
push
cmp
lock
inc
adc
add
mov
dec
sub
push
add
mov
jg
adc
and
rorb
cmc
das
inc
sahf
out
insl
push
cmp
xchg
int3
xchg
stos
push
xchg
push
jecxz
xchg
dec
sub
ss
cmp
push
dec
pop
or
mov
xchg
stc
cmpsl
sub
inc
xor
bound
dec
sub
imul
or
rol
jp
sub
faddl
sub
testb
or
jp
loopne
inc
mov
das
or
pcmpeqw
addb
and
xor
enter
push
add
insb
popa
push
cltd
mov
ret
fists
add
fwait
sbb
into
int
popa
inc
push
int3
cli
in
xchg
lea
into
xor
fcoms
loop
jp
cmp
scas
int
xchg
call
das
lcall
inc
popf
mov
sbb
in
sub
fadds
inc
inc
or
shrl
jl
notl
enter
outsb
push
pop
scas
xor
repnz
cmp
dec
add
scas
and
jmp
mov
adc
test
sub
mov
in
or
jecxz
jmp
mov
loopne
mov
xor
push
and
loopne
dec
adc
bound
flds
movq
mov
test
cli
xchg
push
pop
sti
fldl
insl
or
sub
mov
xchg
movsb
in
icebp
movsl
das
and
or
adc
sbb
mov
sub
inc
stc
aaa
imul
inc
ds
fistl
xorl
xor
test
lcall
enter
pop
gs
pop
mov
jae
pop
in
lahf
icebp
and
mov
sbb
adc
shll
add
leave
mov
ret
or
pop
push
or
cmp
jae
mov
and
cmp
mov
jne
xlat
sahf
push
std
rcll
outsb
les
insl
mov
dec
popa
cmp
mov
inc
inc
adc
les
jmp
loop
push
fidivrl
inc
out
push
push
sub
and
mov
or
add
dec
dec
inc
jb
cmc
jbe
jle
in
mov
or
cwtl
mov
lahf
and
push
lock
add
outsl
mov
popa
repnz
xchg
mov
and
fs
ss
mov
adc
mov
adc
inc
insb
cli
jae
cmpsl
pop
ja
push
fwait
cmpsl
out
mov
jns
repz
and
sti
fsubrs
adc
lret
pop
rcrb
xor
stos
shrb
loop
xor
inc
iret
dec
sar
fisubrs
aas
fildll
xchg
and
and
scas
dec
and
pop
or
es
int
nop
je
adc
test
adc
popa
test
adc
xor
xchg
mov
addr16
jne
js
cmp
or
jmp
jl
inc
dec
mov
push
scas
cmpsl
pop
pop
cmpsb
cmp
repz
xchg
lcall
add
jp
cltd
movsb
nop
ss
loope
add
lretw
mov
and
jno
adc
rcr
sub
ja
or
push
daa
les
xchg
les
push
sar
cmp
out
mov
xchg
nop
repz
test
push
sub
jg
aam
in
or
jo
mov
cmp
imul
sbb
gs
rorl
daa
dec
outsl
mov
or
inc
pop
jle
pop
movsl
fnstsw
add
push
mov
loop,pt
stos
xchg
jmp
jle
pop
jae
push
leave
lcall
adc
mov
icebp
test
test
adc
jmp
loopne
aam
popa
or
add
mov
ljmp
push
loopnew
repnz
test
out
cmpsb
jo
push
add
daa
stos
mov
icebp
inc
mov
xorl
xor
push
pop
pop
xor
ljmp
aad
xor
xchg
xor
fwait
pop
popf
icebp
push
sarb
push
das
sub
xchg
inc
and
gs
cli
loop
cmp
xor
nop
sub
xchg
test
dec
pop
push
inc
xchg
sub
xchg
or
pop
sub
mov
mov
mov
sub
inc
push
aam
dec
adc
stos
sub
sub
mov
aaa
jl
mov
loope
dec
xlat
fidivs
inc
mov
iret
dec
in
push
sub
inc
or
push
jo
mov
xlat
stos
testl
mov
mov
js
mov
sbb
jl
jb
stos
xchg
es
ss
movsb
lcall
ret
or
dec
adc
outsl
push
pop
mov
orl
mov
test
insb
pop
addb
adc
or
fsubr
call
push
jne
or
pop
out
frstor
dec
das
adc
push
fisttpll
mov
cmp
dec
out
sub
sub
push
jge
inc
mov
pop
push
pop
cmp
lcall
adcl
loopne
lods
dec
lds
lods
jecxz
in
sbb
add
sarb
mov
xor
arpl
stos
lret
inc
cmc
jl
cmp
popf
adc
lret
or
syscall
xchg
addr16
fisttpll
jp
inc
cltd
dec
and
mov
fisttpll
sbb
ja
push
push
sub
sub
push
arpl
mov
or
jne
mov
daa
addb
lahf
inc
push
outsl
push
testb
push
sbb
adc
lret
adc
jns
rorb
mov
mov
cli
pop
clc
lods
jecxz
repnz
outsl
add
xchg
and
loop
inc
adc
jno
mov
inc
aam
insb
mov
xor
test
outsb
je
adc
jns
stos
jno
sbb
xchg
adc
or
xor
xorb
into
lret
sarl
sbb
test
cli
addr16
test
in
mov
pop
push
imul
sbb
inc
sub
pop
popa
in
or
add
jge
xchg
inc
and
xor
es
sub
dec
push
sbb
xor
jle
aaa
movsl
shrl
cmp
lods
xor
adc
or
out
and
dec
dec
mov
ret
aas
adc
or
out
add
dec
and
pop
inc
inc
loope
xor
adc
mov
mov
dec
inc
push
xchg
add
push
pop
popf
inc
xchg
mov
test
adc
das
and
stos
imul
jnp
shll
add
bound
stos
stos
stc
out
inc
inc
mov
lds
arpl
mov
addr16
inc
add
xor
push
bswap
add
hlt
xor
fsubrs
nop
cmpsl
addl
ja
xor
mov
lock
out
test
cmp
xor
movsb
jae
test
xor
movsl
fnstcw
je
inc
jl
scas
jg
mov
inc
mov
dec
daa
xchg
stos
push
xor
lods
xchg
pop
jno
int3
lret
iret
sbb
xchg
je
jmp
pop
sarb
jl
cmpsb
or
pop
lds
xchg
ljmp
xchg
fs
nop
push
push
xor
pushf
jle
inc
add
fwait
notl
cmp
sub
sbb
push
jo
mov
jb
ss
sbb
add
iret
inc
jp
or
lock
movsl
add
inc
mov
outsl
insb
sub
jb
sub
clc
aaa
adc
xorb
or
pop
insb
ds
xchg
inc
shlb
rcrl
inc
loope
dec
xchg
add
fcomps
mov
pusha
sub
sub
add
cmp
mov
sbb
shrb
cmpsl
adc
pop
jnp
adc
xchg
mov
fidivrs
movsl
xchg
cmp
mov
in
mov
stos
jmp
ret
daa
and
ljmp
and
mov
imul
inc
test
pop
add
sbb
xchg
mov
xor
jle
inc
fstpl
out
loopne
and
call
add
stos
stc
jg
loop
fidivrs
fcomp
mov
sti
fs
dec
je
or
andb
mov
xchg
cld
mov
mov
and
leave
sub
inc
mov
push
mov
lods
cmpsl
clc
dec
stos
lret
pop
daa
sub
lahf
push
adc
popf
loope
popf
cld
push
sbb
int3
pop
jp
or
mov
pop
push
push
cmp
inc
xchg
bound
cmpsl
mov
js
jb
cmpl
imul
repz
xor
fisubs
ss
daa
insl
movsl
imul
or
in
sub
ja
aaa
dec
les
xlat
test
jl
dec
movsb
lods
sbb
mov
pop
call
cld
das
insl
cmp
dec
fcomip
jle
adc
lods
rcrw
mov
aam
mov
jl
imul
xor
push
lods
std
sbb
pop
mov
orl
shrl
shlb
ret
fwait
mov
adc
jns
js
or
fdivrp
out
mov
out
inc
jl
jecxz
inc
jge
dec
jmp
adc
jmp
xorb
lret
ret
insl
hlt
neg
jae
aas
cmp
mov
icebp
aad
sbb
push
cvtdq2ps
jmp
ja
inc
leave
jne
pop
xchg
mov
outsl
orl
dec
fisttps
sub
lds
insb
iret
das
xor
push
aam
rcr
dec
sarl
scas
or
mov
das
leave
jp
andb
stos
pop
rcrl
add
mov
inc
out
loop
and
xor
test
xor
sbb
sbb
or
or
pop
movsb
int3
cs
inc
jecxz
or
adc
lea
sti
xchg
jae
jmp
rol
push
outsb
or
std
loope
jmp
cltd
imul
pop
or
dec
subl
imul
sub
stc
divb
in
mov
je
push
fnstenv
movsb
das
xchg
jle
dec
and
jle
loope
jp
test
mov
movl
jae
jo
sub
dec
bound
pop
cmp
in
pop
mov
aad
or
add
insl
adc
add
movsl
pmaxub
cmpsb
cmp
xchg
inc
test
test
fsub
push
pop
xchg
clc
loopne
aas
loopne
ds
or
repz
in
scas
cmpb
das
mov
hlt
data16
jo
inc
pop
mov
dec
int3
fldt
test
insl
jle
pop
dec
ljmp
jno
add
push
push
es
outsl
adc
frstor
out
pop
add
enter
aam
push
sti
or
sub
mov
int3
fwait
jp
inc
xchg
in
jb
aad
jae
push
push
xchg
and
jmp
movsb
clc
push
aam
js
mov
xor
jbe
dec
in
orb
ja
inc
ret
aas
jne
dec
and
dec
int3
jge
xor
dec
mov
or
popa
fmul
lahf
mov
mov
add
das
das
dec
mov
sbb
nop
dec
loop
xor
add
jnp
gs
insl
fs
lret
mov
rorb
sbb
js
pop
pop
cmp
xchg
inc
sub
xchg
add
in
rclb
adc
inc
mov
or
jg
cmpsb
add
arpl
lcall
xor
idivl
xchg
mov
adc
dec
lods
mov
inc
sub
and
stc
mov
cmp
sub
and
add
push
jns
xchg
sbb
stc
jno
dec
cmp
mov
sub
repnz
int
pushl
and
lods
mov
iret
mov
pop
push
mov
fdiv
sub
in
inc
inc
into
pop
out
loopne
xor
inc
push
cltd
fdivl
push
xchg
inc
xchg
pop
and
sub
mov
adc
out
stc
sub
cs
scas
inc
ljmp
sub
and
dec
in
cwtl
pusha
icebp
pop
ret
jge
and
jg
cli
stc
aad
push
loop
shrb
adc
lcall
loop
enter
cltd
test
rorl
xchg
rcll
icebp
idiv
add
ja
int
pop
js
xor
fists
lret
fidivl
fcmovu
cmp
test
push
pop
cmp
mov
ljmp
fists
cmp
jg
sub
xchg
cmp
inc
jno
dec
xor
push
stc
test
mov
popa
cltd
leave
mov
stc
sti
int
std
lahf
sbb
jnp
pop
jno
jecxz
pop
jb
data16
shlb
ret
dec
sbb
lret
ret
mov
xorb
test
dec
mov
rcll
dec
shrl
cs
mov
testl
ja
movsl
adc
subl
jbe
fs
sti
notl
push
mov
stc
les
dec
inc
mov
cmc
pushf
mov
dec
pop
call
cmp
imul
cs
and
xchg
cld
outsb
aas
ret
loop
popa
in
cmp
inc
in
mov
popa
and
aas
or
pop
mov
sub
test
movsl
pop
insl
and
in
add
jge
add
pop
fildl
ja
adc
lret
dec
pop
sbb
mov
push
jmp
ljmp
std
sbb
sub
std
cld
lret
fsubr
out
xor
xor
outsl
leave
aas
or
test
jg
add
dec
das
test
push
push
pop
xchg
push
popf
mov
xchg
cmp
stos
dec
add
xchg
or
dec
sahf
mov
rcl
aam
je
aas
push
in
cli
testl
inc
adc
pop
mull
int
insb
jb
inc
lret
xchg
mov
cwtl
push
pusha
lds
dec
inc
pop
int
loope
mov
adc
leave
jno
push
pop
jb
je
sub
loop
pop
mov
xchg
mov
push
fldt
cmc
add
lock
mov
sub
js
mov
loope
cmp
mov
adc
addr16
cmc
xor
pop
outsl
arpl
fcoml
fidivrl
adc
orl
rcl
stos
sub
int3
movsl
aaa
movsl
shrb
adc
ret
cltd
cwtl
test
pop
push
in
mov
jp
xchg
xchg
pop
mov
dec
push
xor
aas
sbb
xlat
jno
in
stos
clc
push
lods
add
outsl
pop
loopne
mov
rcl
call
fstl
popf
pop
cld
aas
cmc
push
pop
sub
lea
xchg
outsb
ja
cli
roll
shll
mov
mov
add
pop
daa
das
aam
aad
fcmovnu
dec
notb
xchg
and
in
add
mov
lcall
jb
xor
or
sarb
inc
cli
xor
repnz
sahf
dec
rorb
push
out
pop
inc
inc
mov
dec
mov
or
jo
ja
or
dec
ljmp
cmp
or
outsl
sub
lds
out
push
pop
fdivs
fdivs
add
add
mov
adc
aaa
push
roll
lret
ret
or
shl
out
shl
jmp
test
sbb
mov
sub
mov
enter
mov
cmp
icebp
mov
js
or
mov
mov
xchg
mov
daa
xchg
sbb
sub
or
and
lock
add
repnz
xchg
sahf
add
pop
out
lds
cs
int
sbb
inc
stos
or
cmp
xchg
std
movsb
ret
pop
lock
push
jecxz
xor
in
fwait
imull
dec
gs
roll
mov
jae
enter
xchg
dec
cmp
push
xchg
fnstsw
sbb
push
pop
aam
push
mov
adc
push
call
adc
or
lds
dec
outsb
mov
push
cmp
in
out
xor
push
push
dec
and
fsubl
xor
int
inc
jo
nop
adc
xchg
pop
in
xor
loope
out
jg
nop
inc
push
lret
push
rorb
adc
outsb
lret
in
int3
xor
mov
and
pop
out
dec
rclb
int3
mov
and
int3
mov
xchg
mov
sti
fcoml
adc
std
ds
je
xor
setno
int
push
mov
pop
xchg
ret
lret
jb
cli
rorb
aad
out
pusha
out
xchg
mov
out
ljmp
cs
pop
lret
and
cli
or
and
loopne
cmp
cwtl
popf
int
pop
mov
lcall
push
add
jne
popl
cmpb
inc
pop
and
in
push
mov
lret
dec
ficomps
adc
out
stc
cs
addl
xor
or
push
inc
and
test
mov
test
push
sbb
mov
xchg
mov
popf
popf
xchg
and
hlt
push
iret
mov
sub
les
add
dec
mov
fadds
les
rorl
and
faddp
mov
in
cmpsl
sub
add
sub
scas
sbb
inc
enter
dec
aad
mov
test
add
jne
lar
lea
pop
ds
fwait
pinsrw
inc
ret
dec
push
sbb
fisttps
sbbl
add
hlt
adc
mov
inc
test
inc
mov
mov
sbb
outsb
pop
fcmove
pop
test
loop
outsl
out
jp
xor
jmp
pop
jbe
mov
xor
and
js
mov
fstpl
fisttpl
mov
lret
pop
inc
sub
scas
cmp
call
pop
cmp
jp
sbb
fwait
lcall
in
addr16
lock
and
inc
mov
jne
in
mov
insl
xchg
in
dec
mov
jb
clc
xlat
movsl
pop
xor
and
mov
sub
loop
or
lcall
jp
and
mov
popa
or
jmp
cmp
mov
pop
insb
pop
push
loope
push
or
pop
fs
mov
fistpl
dec
jo
mov
jo
test
popa
pop
dec
mov
and
dec
loope
xchg
pusha
fcmove
stos
sub
mov
pop
push
das
ret
jge
and
cmpsl
decl
aad
fists
gs
int3
adc
jae
fildl
inc
fs
inc
mov
fistps
sbb
inc
pop
fmuls
adc
imul
rcrb
sub
movsb
out
pop
xchg
scas
adc
inc
and
jns
push
gs
frstor
jns
xchg
push
xor
xor
sub
pop
je
cs
lcall
inc
jl
jl
xchg
push
jecxz
jge
mov
mov
mov
mov
cli
sub
mov
stos
out
add
je
ret
or
dec
sub
add
mov
mov
fxch
in
in
or
or
jae
adc
fwait
dec
mov
lret
pushf
dec
or
test
les
push
xor
jne
mov
inc
in
inc
loopne
sub
mov
leave
mov
mov
sarl
mov
push
push
popa
lods
ds
aaa
mov
test
clc
inc
xchg
cmp
dec
sbb
xchg
lods
sub
jg
shl
lods
push
cwtl
cmp
cmpsl
daa
out
jle
xchg
mov
and
push
jns
adc
push
adc
xchg
inc
mov
ljmp
adc
adc
and
inc
mov
in
mov
call
sbb
repz
mov
inc
lods
rcl
mov
out
into
dec
sbb
mov
sbb
cli
mov
push
imul
jp
xor
rcr
push
mov
mov
inc
arpl
aad
bound
mov
push
pop
push
hlt
js
bound
out
fidivrs
xor
cmpsl
enter
stc
std
ljmp
pop
cmp
sub
das
aaa
add
fwait
or
add
call
sbb
jns
mov
es
into
push
scas
sub
pop
dec
mov
dec
push
out
pop
pop
mov
or
mov
inc
rclb
sub
lock
or
in
movsb
xchg
call
ja
mov
js
xchg
sub
pushf
mov
mov
pushf
mov
jno
add
pop
cmp
sbb
mov
adc
xchg
push
dec
inc
and
push
and
dec
jp
cmpsl
xchg
or
sub
in
std
xor
dec
mov
cmpsb
movb
add
mov
sahf
int3
sbb
outsb
aaa
aam
inc
push
aam
xor
push
int3
sbb
ja
mov
popa
xchg
push
xchg
mov
xor
dec
fs
stos
mov
cmpsb
leave
jne
adc
sub
push
aaa
inc
push
dec
cltd
cld
lcall
faddl
dec
popf
inc
inc
push
jnp
push
decl
pop
das
loopne
loop
dec
notb
sub
push
mov
cltd
cmpsl
lcall
xchg
sub
or
pop
pop
cwtl
hlt
add
xchg
mov
std
or
addb
mov
cmp
cmp
mov
inc
inc
popa
or
sub
int3
in
outsl
das
cmpsb
or
out
push
rcr
mov
bound
sbb
pop
in
movsb
outsl
add
leave
mov
push
dec
ret
inc
add
ret
cmpsb
and
cmp
and
add
xor
mov
inc
cmp
mov
hlt
sarl
dec
sub
push
enter
jp
jno
xor
mov
pop
ficoms
xchg
stos
popl
ret
xchg
jle
adc
std
adc
rclb
nop
mov
nop
cwtl
adc
push
jns
mov
rorb
dec
movsb
popa
arpl
aam
cmp
push
push
test
stc
shrb
sub
inc
mov
dec
cmp
mov
clc
inc
jmp
fsubr
jg
fbld
lret
or
cltd
sub
in
push
jae
dec
xor
jbe
popf
outsb
fsubrl
push
push
adc
loope
jb
enter
sub
test
dec
aaa
ret
cmp
daa
sub
dec
mov
pop
lahf
ja
mov
xchg
or
fcmovne
in
pop
push
insl
into
mov
in
sahf
adc
mov
mov
dec
or
xchg
cmp
loope
xor
movsb
repz
mov
jcxz
pop
mov
dec
push
or
cld
dec
pop
mov
mov
inc
add
sbb
inc
add
aas
repz
push
mov
mov
lock
pop
in
xlat
push
fcoml
lea
push
fcmovu
push
pop
dec
push
mov
mov
xlat
lds
mov
push
stos
cmpsl
outsl
loopne
pushf
pop
sub
sub
subb
mov
sbb
jg
call
pop
lea
test
inc
into
xor
push
push
cmp
aaa
aad
lret
cmp
in
pop
mov
adc
push
pop
sti
mov
mov
gs
outsb
std
stos
mov
xor
cltd
or
pop
dec
mov
add
add
adc
cmp
aad
fadds
das
sub
jnp
mov
scas
cmp
pop
inc
jle
ret
pop
les
ret
xchg
or
pop
adc
jno
insb
lret
pop
notb
adc
lds
xor
cmp
push
lods
pop
pop
test
jne
xor
add
add
mov
add
cmpb
xor
xchg
test
mov
adc
loopne
and
pop
mov
test
popf
stos
leave
and
subl
xchg
mov
cmp
push
mov
aad
and
ljmp
xor
js
mov
movsl
cmp
adc
mov
jne
in
or
jbe
cmp
fwait
call
inc
in
hlt
push
mov
add
jl
xchg
lock
xor
jo
cmc
repz
jge
stos
mov
cwtl
push
call
mov
lea
adc
pop
int3
sbb
cli
mov
mov
mov
mov
into
ss
cmc
push
pushf
es
jns
pop
fimull
bound
gs
pusha
xchg
leave
cmp
dec
rcr
jns,pt
add
push
jmp
jecxz
add
ss
dec
push
adc
shl
mov
adc
ja
dec
pop
mov
lods
std
pop
sub
pop
stc
outsb
enter
mov
xor
addr16
and
sub
sub
sub
sbb
dec
add
push
sub
rcll
mov
xorb
pop
xor
pop
adc
out
cld
push
cs
push
push
pop
push
jns
xchg
loope
mov
mov
rolb
cmp
cwtl
add
orl
mov
lods
fsubs
push
or
rclb
adc
aam
notl
xchg
adc
aas
dec
ljmp
daa
popa
out
out
cs
int
adc
dec
mov
test
js
adc
dec
mov
les
mov
fwait
sub
lcall
pop
xor
imulb
pop
add
sbb
jb
sbb
cmp
das
mov
jns
pop
and
adc
sub
pushf
sbb
enter
sbb
in
inc
in
aad
xlat
inc
rcll
jnp
cmovo
cmp
pop
pop
or
jb
jae
outsl
adc
pop
shll
or
clc
sar
js
cld
shrl
pop
adc
std
aam
lds
mov
cmpsl
mov
fwait
in
jp
lea
std
filds
xchg
inc
sub
insb
pusha
clc
cmpb
out
mov
add
inc
xchg
lret
jmp
ret
test
outsl
xchg
dec
addl
int
pusha
jns
add
mov
push
mov
mov
out
clc
pop
add
and
or
sbb
mov
sbb
mov
fucomi
loope
add
and
xor
fisubl
xor
call
xor
xlat
inc
aam
or
cmpsl
fnstcw
addb
sub
push
jmp
push
pop
orl
test
push
clc
sub
xchg
mov
mov
adc
pushw
fcmovbe
scas
cwtl
adc
mov
cli
enter
jle
jnp
lahf
pop
aad
imul
xor
lret
extrq
jns
and
repz
leave
aaa
adc
bnd
icebp
sbb
inc
adc
jmp
mov
or
jmp
pop
insl
sub
cmp
icebp
or
test
push
push
push
sub
push
push
rolb
cmp
pop
es
orl
es
or
mov
push
pop
cmp
outsl
push
test
xchg
inc
mov
or
fstl
into
xlat
sbb
pop
sub
jle
mov
popf
negl
mov
pop
je
lcall
insl
push
mov
sbb
les
mul
loope
scas
sbb
and
lcall
fs
push
dec
adcl
adc
adc
jns
fwait
mov
mov
or
in
push
push
ficomps
outsb
mov
je
adc
or
jmp
xchg
fnstsw
xor
adc
sbb
inc
sbb
xor
inc
fiaddl
or
mov
pusha
adc
shr
xchg
cs
lret
fbld
cli
pop
cs
xor
out
mov
fnsave
daa
mov
pop
xchg
test
rol
pop
sbb
lock
movsb
shl
out
xor
push
sub
lock
call
cmp
pop
bound
lret
cmc
lods
push
sub
push
mov
adc
mov
lds
aaa
xchg
jle
mov
stos
sub
sub
sub
inc
jl
cmp
mov
jl
pop
popf
subb
sbb
scas
clc
mov
xchg
loopne
mov
icebp
dec
movsl
jecxz
push
pop
movsl
loope
push
aas
les
clc
mov
hlt
repz
pop
xor
shrl
insb
xor
xchg
js
data16
div
sub
cmpsl
aam
ljmp
cmpsl
inc
cmpsl
adc
int3
mov
mov
jns
lods
fs
jae
adc
sub
sti
outsl
repnz
jnp
push
ljmp
or
cmp
loope
xor
icebp
push
fsub
lret
inc
loop
pop
jmp
cmp
jb
and
inc
mov
pop
cld
push
push
or
leave
mov
push
sbb
sbb
jecxz
lods
shrl
and
pop
sub
iret
mov
daa
negl
jo
or
insl
dec
lcall
insb
push
das
cmpsl
xor
xor
jge
ljmp
jp
xchg
mov
push
xchg
jne
dec
inc
xlat
and
mov
mov
jns
mov
pop
rcrb
mov
cmp
inc
test
lods
out
xchg
das
cld
movsl
icebp
adc
negb
shlb
or
and
mov
mov
out
je
push
popa
inc
subb
setne
adcb
sahf
mov
inc
jne
mov
pop
clc
jb
cwtl
push
add
cmpxchg
add
sar
cs
imul
js
mov
sbb
stos
iret
xchg
adc
and
fiadds
dec
add
mulb
mov
mov
mov
bound
pop
add
popf
push
jle
inc
or
cmpsb
fisubrs
mov
mov
xchg
xchg
aam
inc
add
cwtl
test
push
je
mov
adc
push
mov
or
cmp
jecxz
std
dec
test
jmp
cmp
jmp
adc
inc
cmp
fidivrs
insl
rcrl
mov
fists
cmp
dec
jg
inc
fistps
push
or
dec
loopne
lea
enter
pop
cwtl
sbb
adc
imul
and
push
xlat
cmp
movsl
imul
scas
imul
mov
adc
add
call
mov
jae
jns
adc
jnp
mov
xor
dec
xchg
dec
sbb
push
sub
inc
les
outsb
mov
mov
pop
adc
iret
arpl
shrl
adc
or
cmpsb
lahf
pop
in
mov
add
xlat
mov
pop
push
add
xor
add
sub
lds
hlt
data16
fwait
mov
sub
adcb
xor
mov
and
inc
mov
mov
dec
and
jl
test
lret
lret
ret
and
xchg
pop
dec
inc
jne
es
js
push
xor
fnstsw
add
pop
jp
cmp
hlt
xchg
cmp
pop
nop
adc
gs
rcrl
jb
push
sbb
out
pop
push
cmp
push
insb
add
call
cmp
add
and
mov
and
notl
in
ljmp
jg
push
stc
lahf
jae
aaa
mov
xchg
dec
mov
mov
cmp
fwait
lods
xor
rorl
sbb
cltd
cmp
in
mov
adc
inc
mov
adc
mov
add
mov
lahf
adc
add
arpl
add
pop
aas
jno
or
cmpl
shrl
inc
add
cmp
sahf
xchg
and
aas
push
xor
sub
stc
pop
in
xchg
cmp
sbb
lods
or
int
aam
cmpsl
and
lock
adc
in
cmp
hlt
cs
dec
cmp
pop
mov
mov
inc
and
orb
mov
in
ja
xchg
dec
pop
out
mov
int3
pop
or
insb
insb
aas
mov
jge
in
leave
jae
add
je
gs
xor
cld
sarl
mov
shrb
fadds
in
hlt
push
mov
cmp
fsubrs
sub
mov
lret
inc
pop
mov
or
jge
loop,pt
add
dec
xchg
cmpl
mov
or
mov
add
je
aas
fidivl
sbb
jp
push
lret
sub
fistps
mov
daa
pop
ret
add
ljmp
lea
push
adc
ds
or
add
fidivrs
jg
sti
xor
imul
gs
jnp
sbb
loopne
cld
inc
jl
shrb
mov
dec
stos
cld
cmp
stc
push
orb
add
outsl
scas
and
cwtl
repz
rorb
mov
or
testl
sbb
dec
fbld
or
int3
pop
lcall
cmpsl
pop
sbb
int
push
leave
shlb
test
ficomps
test
cmp
imul
jg
push
xchg
cli
fsubrl
cltd
add
shrb
movd
inc
mov
pop
enter
lods
dec
sub
add
outsl
mov
pop
pop
mov
mov
jg
cmp
pop
sbb
or
jmp
into
xor
bound
sbb
gs
fsts
dec
out
sub
jge
test
call
ret
and
icebp
pop
cs
dec
jo
dec
push
and
cmp
adc
fstps
cs
sub
cmp
mov
scas
gs
xor
imulb
mov
xchg
jp
hlt
jl
cli
ret
cmp
inc
xchg
jb
and
call
cld
cmp
lahf
adc
inc
and
adc
inc
aad
pop
pop
add
mov
test
pop
add
ret
rolb
add
add
je
insb
js
ljmp
arpl
add
or
imul
divl
xchg
push
rolb
xchg
into
dec
enter
mov
leave
jle
bound
push
push
inc
xchg
mov
fwait
mov
or
mov
pushf
test
ss
cmp
sbb
andl
pop
hlt
inc
in
pop
push
push
add
xor
ljmp
cmp
rclb
testl
add
pushf
bndldx
out
jo
lock
fidivrl
adc
int3
xchg
fdivl
jnp
sarb
pop
jl
fs
jl
cmpsl
test
sbb
in
push
mov
and
scas
cltd
cmp
and
pop
and
pop
or
pop
push
push
xchg
jmp
ds
adc
int3
dec
pop
xchg
shll
cmpsb
push
int
test
push
inc
mov
sub
push
call
scas
jns
imul
js
inc
lea
mov
mov
ret
outsb
dec
dec
mov
int3
out
adc
stos
outsl
mov
js
mov
pop
movsl
dec
loopne
fcomi
mov
cmp
mov
jl
mov
dec
enter
mov
add
xor
and
pop
aaa
pop
ror
out
pusha
cmc
push
mov
sub
jge
dec
jmp
sahf
xor
stc
addr16
and
iret
jnp
cld
add
aam
dec
and
aaa
adc
std
mov
sarb
imulb
inc
mov
sarb
xchg
sahf
sbb
push
sbb
loope
mov
xchg
test
js
js
loop
in
repnz
stos
rcl
cmpsl
lock
jno
and
orl
jno
out
pause
je
imul
sahf
and
inc
inc
sarb
inc
shrl
imull
dec
mov
cltd
pusha
xorb
mov
lret
xlat
sarb
mov
rcrl
push
lahf
inc
cmp
pop
mul
dec
incl
daa
int3
xchg
mov
shrb
hlt
fnsave
cmp
ljmp
xor
cmp
ja
inc
jae
cld
ja
sub
loopne
push
mov
lret
hlt
jne
jle
xchg
inc
shl
push
addr16
jno
cmp
sbb
jne
clc
cld
repnz
das
jns
shrb
dec
data16
mov
into
pop
mov
cmp
adc
ljmp
test
cmpsb
insl
mov
js
frstor
das
int
mov
pop
cs
std
stos
movsb
mov
ffree
out
in
push
sub
aad
imul
mov
sub
mov
call
enter
in
frstor
jmp
mov
inc
out
xchg
aas
sbb
and
pop
push
div
das
sub
xor
mov
shrb
hlt
int3
mov
add
mov
push
xchg
mov
and
mov
leave
xor
adc
inc
mov
insb
inc
loopne
dec
out
fcmovbe
push
pusha
or
mov
adc
pop
mov
xchg
aam
push
and
outsb
fldcw
xor
mov
cmp
jecxz
mov
in
imul
or
jl
hlt
cmp
rclb
mov
bound
or
outsl
icebp
jb
cmp
out
mov
or
or
dec
loope
pop
popf
js
popa
mov
popa
and
test
call
arpl
adc
push
mov
sbb
lods
inc
and
inc
push
pusha
pop
daa
out
aam
add
dec
mov
popf
xor
sbb
adc
icebp
mov
mov
sarl
push
xchg
cli
nop
into
xchg
es
sbb
aam
in
xlat
mull
xchg
pusha
std
xchg
pusha
loope
cmp
cmp
lods
pop
dec
dec
cmpsl
push
mov
in
push
xchg
cmp
or
mov
cmp
xchg
repz
add
dec
push
repnz
fistps
mov
xchg
push
je
mov
lret
sbb
xchg
sub
repz
loope
mov
jmp
and
jl
mov
outsl
jnp
xor
sub
or
add
bound
lahf
icebp
clc
ljmp
xchg
dec
shlb
cli
mov
mov
cmpsb
repnz
sbb
and
pop
cs
jg
out
mov
push
aam
inc
xchg
imull
nop
jbe
into
stc
cmp
mov
sbb
mov
jns
lods
clc
mov
arpl
cmp
xor
std
ret
mov
inc
add
mov
ljmp
and
and
bound
je
push
repz
aam
in
iret
jge
int
das
cmp
push
xor
cld
ret
adcb
or
mov
inc
fisubl
rorb
loop
inc
cmp
add
mov
xchg
stc
add
popfw
incb
sub
das
jb,pt
cmp
dec
push
cmp
lea
popf
cmpsb
rcrl
or
int
loopne
shlb
xchg
scas
sub
iret
pop
out
in
aaa
mov
xor
arpl
mov
mov
nop
enter
cltd
or
repnz
loop
add
and
xchg
mov
std
add
sbb
lods
fdivp
das
xchg
jnp
inc
stc
rol
cmp
ret
push
inc
jae
pushf
in
cmpsl
test
cltd
and
mov
lods
and
ljmp
add
cli
xor
mov
lcall
jmp
out
mov
lods
and
adc
jno
mov
add
ret
cmpsb
push
data16
repz
dec
shl
or
inc
mov
jmp
push
out
daa
icebp
fcomp
add
sub
xor
xchg
mov
adc
pop
mov
pop
mov
mov
or
inc
arpl
out
jmp
push
negl
pop
pop
daa
in
and
and
mov
imulb
xor
pop
xchg
popf
dec
or
mov
aam
aam
cmp
inc
shlb
into
insl
pop
insl
mov
call
jle
stos
push
pop
addl
outsl
fcomp
cltd
xor
xorl
fucom
xchg
lock
jmp
xchg
inc
or
mov
sti
outsl
shrb
mov
pop
insl
int
adc
and
xor
xlat
jmp
pop
cmp
push
repz
pop
and
mov
sub
cs
add
enter
cs
jecxz
test
shlb
cmp
cmp
cmc
fiadds
inc
ret
mov
add
mov
out
push
jge
mov
push
mov
inc
mov
and
mov
xchg
bound
inc
push
fsubrl
cltd
movsb
call
hlt
mov
out
xor
sub
inc
or
and
ljmp
jae
ret
mov
add
scas
stos
daa
and
leave
in
in
rep
adc
inc
mov
mov
pop
fwait
mov
xchg
cmc
push
sub
sbb
out
cmc
mov
and
and
push
pop
cli
mov
sarb
push
pop
leave
fsubs
pop
aaa
mov
fs
fisttpll
in
xor
roll
push
pop
push
inc
and
sub
add
mov
loope
push
bound
jo
out
jae
xchg
jo
je
push
jae
sbb
in
pop
pop
out
xchg
out
inc
xor
cmp
cmc
push
jns
or
sarb
add
jge
jl
stc
xor
test
xchg
xchg
mov
and
push
fs
and
divb
sbb
mov
mov
cmp
repz
and
sbb
mov
jno
test
xchg
cmpsl
dec
adc
jne
dec
in
mov
mov
fimull
pop
xor
adc
notl
mov
fidivrl
das
push
mov
fists
sub
insl
sub
je
push
jnp
imul
and
push
out
shrl
mov
in
addr16
call
xchg
imul
adc
pushf
mov
push
xchg
rcr
sub
cmp
imulb
sub
push
js
or
xchg
jle
mov
dec
mov
xor
out
ret
cmp
cs
je
push
dec
int3
sub
lcall
mov
mov
aas
xlat
iret
mov
je
jno
mov
xor
mov
shlb
insb
es
int
add
movsl
movsb
pushf
cltd
or
mov
xor
add
sub
pop
outsb
addr16
mov
testb
aad
test
pusha
push
movsb
mov
cltd
sbb
dec
push
mov
dec
insl
dec
push
push
in
shll
jnp
les
mov
lea
xchg
out
aaa
jge
test
shlb
fcoml
push
push
mov
jae
test
mov
pushf
rorb
and
jbe
rcr
imul
pop
mov
sub
dec
popf
pop
ret
xchg
or
sbb
jns
sbb
pop
fwait
push
out
and
jmp
cmp
popf
jno
mov
or
shl
clc
sbb
test
xor
ljmp
xlat
mov
imul
je
sahf
cmp
shll
in
insl
mov
nop
lret
scas
add
xchg
sbb
push
stos
inc
into
lea
rol
pop
arpl
add
jg
scas
push
xor
mov
outsb
push
les
xlat
test
out
loope
fdivl
decl
aad
jmp
sub
outsb
xor
or
or
pop
mov
lcall
imul
in
inc
pop
pop
pop
aaa
mov
sub
mov
inc
xor
pop
js
test
subb
fwait
jnp
mov
mov
or
inc
pop
jb
cmp
add
xor
inc
mov
mov
push
outsb
and
dec
sti
jp
mov
push
cmpsl
add
mov
push
sbb
pop
push
addl
stos
mov
jge
dec
jg
and
mov
dec
mov
daa
addl
xchg
iret
mov
bound
or
fildl
jge
adc
popf
ds
cmpsl
add
xor
xchg
lret
ret
jecxz
inc
cmp
and
dec
sbbl
sub
andb
mov
mov
cs
sub
xchg
mov
pop
into
daa
imul
adc
push
pop
int3
testb
arpl
mov
sbb
int3
jae
push
dec
inc
mov
xchg
outsl
stos
aaa
sub
pop
loop
inc
es
fisttpll
xchg
pop
cmc
mov
push
out
mov
fs
cmp
fucomi
dec
push
jno
dec
pusha
wbinvd
dec
mov
inc
adc
xlat
scas
fs
and
mov
imul
pushf
and
ret
ret
sub
push
cld
sub
outsb
cmp
push
sbb
pusha
stos
jnp
inc
add
sbb
sbb
imul
inc
xor
fimull
cmpsl
insb
popa
mull
fwait
orl
aam
das
lret
mov
xor
sbb
imul
pusha
cld
cmp
popa
xchg
lret
mov
cltd
lods
or
mov
aam
fildll
test
xor
add
xchg
cmc
xchg
mov
int3
xchg
push
push
or
sub
jp
test
jae
xlat
movsb
ss
push
adc
test
pop
insb
sahf
nop
xchg
jae
mov
pop
nop
xchg
jb
movsl
pop
ret
pop
and
daa
xchg
cli
int3
clc
jl
mov
sbb
add
loopne
inc
xchg
jp
lods
cmpsb
test
loope
addr16
pop
fs
inc
icebp
cmp
fistps
xchg
add
icebp
or
mov
mov
into
stos
test
dec
and
inc
xchg
sbb
mov
pop
rcrl
xor
dec
addr16
push
jge
mov
in
loop
xor
mov
push
mov
sbb
inc
icebp
or
inc
imul
cmp
movl
or
xchg
lods
std
xchg
inc
js
pop
cs
xchg
xchg
xor
test
in
or
dec
scas
out
or
aas
mov
dec
jp
insb
jl
popa
xorl
insl
sub
sbbb
js
imull
pop
xchg
out
or
inc
sbb
mov
pop
ret
loop
stos
xor
xor
icebp
cmp
add
lea
inc
popf
fs
test
jns
jno
clc
jbe
adc
jl
dec
ja
gs
inc
loop
lret
popf
pop
stc
or
aad
in
and
xchg
and
dec
mov
ss
and
push
dec
test
sub
ljmp
cmp
das
mov
out
xor
push
inc
sbb
test
jnp
mov
iret
push
xor
jmp
or
inc
mov
xchg
lret
or
pop
mulb
pop
movsb
xor
mov
mov
sahf
in
push
aas
movsb
loopne
add
stos
jbe
adc
loope
and
dec
inc
sti
or
in
sbb
cmc
xor
mov
cmp
aam
iret
pop
add
mov
sahf
out
cwtl
or
jae
cld
inc
or
dec
xor
mov
mov
pop
mov
xlat
lods
addr16
add
scas
xor
movsb
add
adc
stc
xor
mov
adc
add
pop
jo
push
adc
mov
push
imull
rcrl
mov
mov
lret
shrb
mov
lea
or
nop
popa
lret
pop
icebp
sti
sub
push
inc
fld
movsb
cmpsl
leave
pop
dec
iret
out
outsb
sub
dec
cmc
sub
cmpsl
mov
sub
dec
iret
jb
outsl
push
les
and
lds
int3
fidivrs
ret
push
xchg
and
out
pop
scas
mov
sub
addb
popf
stos
adc
out
cmpsl
repnz
sbb
sti
flds
dec
rcrl
xchg
sbb
xchg
movsb
leave
dec
and
loop
pop
bound
mov
notl
jp
mov
mov
adc
mov
daa
lods
xchg
pop
std
mov
jp
scas
call
fiaddl
into
imul
scas
lea
cmp
mov
lods
daa
dec
add
fucomp
ja
lods
dec
test
jg
call
in
lret
mov
loopne
shll
mov
push
sbb
and
dec
pop
push
hlt
jb
stos
dec
fwait
shl
push
xlat
aaa
sbb
lock
fistps
mov
ret
stc
inc
sbb
out
dec
mov
dec
fisttps
aaa
jl
or
sub
xchg
cmp
sub
xchg
push
jae
int3
push
stc
xchg
add
or
shrl
ret
cltd
mov
inc
icebp
xchg
or
mov
adc
push
inc
insb
test
xchg
pop
and
leave
xor
nop
push
dec
fsubs
dec
xor
cmp
iret
sub
cmpsl
or
inc
arpl
mov
sbbb
cld
sbb
adc
ret
jp
cmp
mov
sti
outsb
mov
fidivrs
mov
sete
sub
mov
jns
pop
xchg
xor
mov
xor
movsl
xchg
mov
pop
lods
les
xor
das
jnp
xchg
stos
fpatan
inc
xchg
adc
cmp
mov
lcall
jns
je
xchg
cmp
and
pop
mov
fst
scas
push
icebp
outsl
xchg
inc
shl
xor
pop
xchg
mov
pop
jge
repnz
fucomip
popa
adc
push
outsb
stos
test
clc
gs
adc
cmc
arpl
sbb
or
mov
repz
cmpsl
call
cmp
ret
mov
lea
shlb
mov
jo
dec
xor
fimuls
push
jns
jecxz
outsb
test
add
jns
or
sbb
lods
cmp
or
sub
mov
or
xor
mov
incb
gs
fsubl
mov
jg
or
rclb
dec
clc
xchg
mov
adc
xchg
fildl
out
test
repz
aaa
push
add
lcall
andl
and
inc
xor
add
leave
push
inc
lea
aad
out
mulb
fldl
mov
in
cmp
out
mov
mov
lock
xchg
jecxz
negb
dec
jno
jb
push
inc
add
add
subb
mov
lret
popf
xor
adc
aas
int
pushf
jbe
sub
shl
xor
add
mov
pop
in
icebp
das
jl
call
mull
xchg
dec
test
fists
leave
push
cmp
shll
xchg
je
sbb
scas
or
add
dec
out
fstp
inc
or
mov
dec
das
ja
das
jo
xchg
gs
fstl
cmp
insl
xchg
ds
ds
dec
daa
xchg
movsb
das
cmp
push
stos
ljmp
push
lcall
jge
int
bound
in
or
insb
mov
fiadds
fnsave
lock
clc
sub
sti
mov
mov
aam
lea
loopne
mov
pusha
lea
movsl
jge
push
push
inc
mov
pop
sub
sti
inc
outsl
fnstcw
sbb
popf
fcomps
xchg
aam
mov
fdivs
xchg
xor
and
notb
das
ret
into
int3
ja
icebp
imul
pop
jo
add
and
mov
and
mov
mov
mov
pop
sbb
cmp
pop
dec
pop
ret
sub
push
popa
cmp
pop
mov
or
out
sbb
addr16
mov
loop
data16
pop
dec
push
push
jbe
push
popf
add
mov
in
pop
jg
in
xor
ret
mov
in
imul
push
in
dec
cmc
int
out
insb
xchg
and
cmc
xchg
or
jns
sbb
out
mov
shll
ja
push
out
lods
mov
jnp
stos
xor
dec
fisttps
sbb
sub
xchg
ljmp
sub
push
push
pop
test
shrb
pop
lock
push
into
xor
nop
xchg
push
inc
jne
add
add
sub
jns
or
cmp
lret
imul
mov
xchg
fucomip
fbstp
dec
iret
jle
jl
aas
jbe
outsb
and
lods
insl
ret
clc
mov
mov
stos
push
aas
xchg
sub
in
inc
arpl
sahf
insb
adc
xor
xor
xchg
fsubrs
xchg
ret
in
fsts
or
out
add
jle
test
cmp
xchg
adc
cli
leave
cmpsb
sbb
jbe
in
into
dec
add
nop
sub
pop
push
in
add
in
pop
sub
insb
mov
adc
push
js
loopne
push
insl
iret
push
add
sub
mov
pop
xchg
xor
mov
jb
mov
pop
lods
mov
inc
addr16
pop
mov
daa
push
fbld
sub
push
and
sbb
rcl
fisubrs
xchg
push
or
add
addb
popf
call
les
cld
jns
hlt
loop
in
lods
out
popf
psubd
fidivl
dec
in
lds
test
lret
pusha
xchg
and
jmp
ja
lret
sub
imul
jb
and
xchg
sub
xor
int
xchg
outsl
dec
add
arpl
in
leave
fs
std
or
and
rorb
pop
push
test
sbb
cltd
sarl
jle
sarb
inc
xchg
loop
xor
add
bnd
movsl
daa
inc
inc
dec
pop
mov
mov
ja
dec
pusha
xor
pop
mov
sbb
sbbb
iret
loop
xchg
adc
inc
addr16
scas
fisubl
scas
scas
bound
inc
sub
insl
xchg
xchg
jge
adc
test
sub
and
cmp
mov
js
fwait
pop
iret
faddl
mov
lcall
inc
xchg
sbb
push
mov
and
cmp
push
sub
loope
pop
out
or
les
mov
popw
aaa
js
fnstenv
push
mov
bound
fs
add
fsubrp
hlt
pop
out
or
push
pop
inc
adc
arpl
rolb
lahf
mov
pop
xchg
dec
or
xchg
outsb
push
xchg
mov
loop
loope
pop
ror
pop
xor
call
jbe
push
leave
sub
add
push
out
adc
inc
ljmp
mov
mov
mov
dec
push
daa
icebp
inc
jno
push
push
mov
lret
jns
scas
scas
push
cmp
lea
in
out
pop
fdivr
sbb
ljmp
lea
pop
sti
cmpsb
sub
jae
aam
mov
mov
and
addr16
out
shlb
push
stos
insl
lea
out
sub
stos
sbb
add
inc
push
mov
sbb
or
clc
xor
or
sbb
les
mov
ds
pop
adcb
pop
stc
cmp
sbb
inc
ficoms
not
lret
push
and
pop
test
push
add
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
jmp
jl
in
sub
adcb
sarb
sub
push
push
lock
xchg
sub
bnd
stc
fsubp
pop
in
inc
fucom
lcall
leave
loop
mov
mov
mov
int3
sbb
sub
shlb
cwtl
adc
cmp
sub
pop
jmp
and
inc
es
jnp
fwait
test
aas
ja
pop
inc
scas
pop
inc
mov
jp
pop
nop
clc
xchg
mov
mov
std
jecxz
stos
mov
les
jmp
dec
xchg
cmp
cwtl
loopne
imul
cs
add
xchg
cs
outsb
inc
dec
xchg
out
das
int3
mov
aas
movsb
xchg
push
in
mov
xor
fwait
pusha
inc
in
sbb
xchg
gs
fisubs
sbb
sbb
insl
jp
cmp
and
mov
cmpsl
inc
sub
decl
iret
negl
mov
adc
add
mov
inc
add
sub
cmpsb
pushf
jl,pt
int
pushf
in
arpl
in
or
sub
xlat
xlat
inc
int
pop
fs
sarb
inc
push
imul
inc
das
pushf
aad
xchg
sbb
add
pushf
pop
jle
xchg
jno
and
push
pop
and
and
pop
mov
or
jl
jp
and
sbb
add
scas
sbb
pop
rcll
dec
xchg
dec
roll
or
mov
test
xor
lahf
jecxz
daa
jp
mov
mov
xor
jno
push
in
cli
cltd
out
in
jns
and
fwait
rorb
inc
movsb
xchg
ljmp
push
cmp
cmpsl
pop
rcrb
cwtl
push
and
mov
dec
jnp
lods
jae
mov
push
loopne,pt
cs
lds
outsl
lcall
clc
movsl
sub
sub
jno
sbb
stos
test
loope
sbb
nop
sbb
lea
pushf
sbb
lahf
iret
and
loopne
jbe
mov
fnsave
inc
repz
lods
je
shlb
arpl
mov
aas
sub
lds
sub
orb
add
popa
sbb
push
loop
sbb
sbb
enter
cmp
cs
cwtl
push
shlb
mov
sbb
mov
fists
sbb
inc
pop
dec
dec
in
and
icebp
pop
sbb
inc
or
arpl
jb
mov
push
mov
insl
xor
jecxz
outsb
inc
or
pusha
mov
leave
mov
mov
add
jl
sarb
pop
fistps
push
ret
push
aam
and
push
insl
cmpsb
pop
loopne
mov
js
test
outsl
push
ret
cmp
arpl
push
repz
stos
inc
andb
pusha
int3
jb
mov
leave
xchg
dec
sub
jge
movsb
mov
lock
ja
sub
xor
ret
cwtl
xor
enter
pop
mov
mov
std
outsl
pop
in
test
data16
jae
sarl
adc
mov
scas
inc
jbe
xor
add
imul
cli
inc
rcl
cmp
adc
inc
mov
rcl
js
outsl
mov
test
xchg
mov
xchg
push
fimuls
sub
adc
mov
fsubl
cmp
iret
pop
ret
inc
das
xchg
mov
or
xchg
push
js
scas
xlat
ss
cmp
rclb
sub
inc
mov
outsl
push
imulb
sub
mov
negb
cmp
push
dec
ret
sub
sub
inc
cmpsl
stos
popf
mov
mov
jmp
xchg
shll
add
test
aad
mov
xor
xor
jle
inc
push
and
test
mov
push
or
xchg
dec
and
daa
sbb
inc
xor
sahf
cmpsb
fsubrl
fcmovbe
sbb
mov
pop
shlb
orl
nop
sub
and
das
and
les
mov
aas
inc
cs
push
daa
nop
insb
cmpsl
lods
mov
jp
sbb
adc
adc
push
clc
xor
sub
pop
pop
mov
cmc
int
jl
mov
jecxz
sarl
loopne
adc
sbb
loop
xchg
in
lahf
cs
cld
jmp
clc
imul
jecxz
ror
sub
push
mov
mov
sti
sub
pop
sbb
cmp
adc
aaa
ja
scas
clc
sbb
or
jo
les
dec
andb
js
dec
pop
mov
xor
lahf
in
or
sti
pop
push
arpl
pop
dec
pop
push
pop
pop
fs
sbb
mov
ds
and
or
cltd
cmp
fimull
mov
cmpsl
gs
les
jge
jbe
inc
dec
and
adc
mov
je
lret
mov
fistpl
lahf
jo
jge
mov
lret
sub
adc
jno
mov
lods
out
mov
mov
movsl
movsb
loope
dec
les
add
sbb
inc
popf
mov
mov
das
sar
pop
push
std
test
jb
in
push
jle
js
mov
hlt
aaa
pop
ret
stos
rcll
popa
movsb
push
movb
jmp
xchg
push
add
shll
int3
add
jne
cs
and
nop
adc
rorb
loop
in
cmp
dec
pusha
int
xchg
fstpt
icebp
xchg
and
mov
scas
fistps
pop
adc
mov
ret
inc
outsb
lods
xchg
pusha
lahf
pop
xchg
bnd
mov
sbb
adc
jecxz
fsubs
sbb
push
mov
hlt
sbb
loope
sti
xorl
add
nop
fs
icebp
cld
lock
sahf
pop
xchg
dec
cli
test
or
xorl
sahf
int
fdivrs
dec
xchg
adc
icebp
add
or
mov
repz
pop
ror
mov
js
out
inc
jge
push
jle
cld
rcrl
dec
or
dec
out
mov
push
aaa
outsb
aaa
cvtps2pd
fwait
push
pop
xchg
add
and
adc
insb
jmp
cmpb
nop
negb
cmpsb
jb
loopne
or
gs
dec
fmul
dec
outsl
xchg
mov
mov
ja
outsb
jg
test
cmpsb
test
popf
pop
and
add
lds
mov
xor
iret
push
cs
stos
cmp
addl
mov
push
jb
and
cmp
lds
push
fld
and
cmpsb
add
dec
insl
stos
fstps
mov
push
xlat
stc
xchg
xor
sub
mov
imul
mov
in
sub
dec
ret
jnp,pt
out
mov
mov
xchg
pop
add
xchg
aaa
cmp
dec
dec
adc
shl
stos
mov
aam
push
dec
push
test
pop
mov
push
sbb
sarl
in
lcall
push
sub
jne
lea
mov
insb
pusha
aaa
cmpb
jnp
inc
or
fisttps
cltd
imul
fdivs
rcll
lret
int3
cld
pop
xor
add
shl
orl
out
xchg
shll
iret
ss
adc
jae
lea
or
nop
mov
cld
sbbl
mov
test
insb
cmpsl
pop
fidivrl
and
mov
fsts
cli
stos
dec
fs
adc
mov
pop
mov
test
arpl
cmpsl
or
rolb
icebp
cli
out
pop
jae
testl
xor
xchg
pop
js
rorl
lods
sub
mov
inc
inc
pushf
cmp
pop
out
adc
pop
or
sub
or
xor
movsb
cli
push
dec
repnz
mov
test
add
notb
cmp
dec
mov
ja
mov
push
sbb
sti
sbb
enter
in
aas
inc
inc
int
inc
push
aas
mov
pop
enter
add
or
and
xor
cmp
in
jno
push
xorb
jns
notl
jne
cli
xlat
pushf
inc
mov
jo
sub
xor
jl,pn
xor
pushf
sbb
imul
xchg
testl
xchg
xor
lods
loopne
push
aaa
fsts
aas
out
sbb
leave
inc
sub
mov
jno
test
stos
mov
cltd
into
push
fldenv
dec
push
sub
push
pushf
dec
dec
fs
pop
je
stos
movsl
ja
cltd
into
loop
insb
cmp
xor
push
jg
data16
loopne
mov
bound
test
pop
data16
pop
adc
adc
imull
sbb
cmpsl
repz
test
cs
stos
fwait
cmp
shrb
cmp
mov
and
je
in
push
frstor
int
mov
jmp
fmul
incb
xchg
xor
movl
sbbl
fldl
xchg
lcall
push
ffree
les
mov
sbb
popf
or
mov
les
cld
mov
mov
inc
dec
dec
mov
dec
sbb
xlat
xor
xor
xchg
movl
ret
icebp
pop
sub
orl
dec
sbb
push
inc
aam
scas
out
fs
fs
gs
iret
fists
mov
je
les
sub
mov
int3
adc
sub
addr16
divl
or
in
pushl
stos
mov
mov
int3
hlt
or
stos
cmp
xchg
push
jae
cli
adc
aas
push
push
sbb
xchg
negb
pop
xchg
int3
rcll
mov
nop
pusha
outsl
rdmsr
out
jg
cs
cld
stos
ja
test
cmpb
push
and
add
out
mov
aas
xor
pop
xor
pop
mov
add
sbb
sbb
push
shl
and
xchg
test
andl
movsl
test
pop
lret
out
push
mov
loop
ja
mov
xor
xor
mov
jns
lret
add
cmp
cmp
pop
popf
cmpsb
cmpsb
and
cmpsl
into
xchg
xchg
inc
bound
or
pop
cltd
std
or
inc
fstps
popf
cwtl
adc
push
sbb
xorl
add
dec
sub
or
aam
inc
cmpsb
maxps
mov
pop
and
stc
mov
push
pop
ljmp
neg
ret
jg
pop
fs
inc
into
jg
mov
mov
daa
lds
jo
mov
lcall
xchg
cmp
adc
dec
xorl
das
cmp
jb
cli
cmpsb
sub
into
idiv
jns
lcall
testl
ljmp
and
jb
leave
adc
imull
adc
xchg
cld
in
ljmp
daa
daa
and
icebp
shl
rorl
or
jno
cwtl
pop
hlt
movsl
out
fimuls
jno
addr16
push
xlat
pop
lea
jecxz
mov
out
and
mov
pop
imul
mov
addb
and
pop
js
iretw
or
adcl
in
push
lea
inc
popf
jmp
rcll
fidivrs
xor
jbe
inc
and
into
push
imul
cmp
gs
test
mov
xchg
pop
pop
dec
adc
pushf
jecxz
test
shrb
pop
xor
xchg
addl
stos
loope
in
xor
mov
xor
pop
sbb
sub
sbb
pop
icebp
fildll
fmuls
inc
mov
lods
adc
pop
rclb
fdivp
add
add
sti
pop
neg
inc
mov
test
cmpb
adc
mov
scas
push
icebp
push
jmp
aas
leave
cmp
stos
jo
add
stc
loop
shll
push
cmp
mov
aas
adc
lahf
loop
cmp
mov
imul
out
in
fmuls
add
pop
xor
and
sahf
dec
or
sbb
xchg
out
das
and
push
mov
out
add
mov
mov
popa
loopne
mov
sub
ja
sbb
jns
push
mov
fwait
ret
ds
test
fstl
gs
iret
push
arpl
pop
insb
push
lret
push
aad
jae
lock
cwtl
mov
ljmp
dec
adc
push
repz
or
and
jle
dec
dec
sbb
mov
cltd
xorl
mov
pusha
ds
push
add
inc
cmpsb
jb
xchg
scas
adc
cmp
mov
jmp
jno
adc
imul
pop
cmp
push
stc
iret
movsl
cld
jle,pt
cmpsb
out
lea
jmp
ljmp
dec
pop
cmp
push
sbb
push
xchg
clc
fcompl
das
stos
jns
aad
test
mov
dec
aad
push
test
std
adc
push
pop
xchg
or
xchg
out
pop
sbbl
push
push
ret
into
lret
jl
sbbl
adc
cmp
pop
repnz
sub
fnstenv
psrld
add
sub
push
pop
adcb
add
in
xorl
in
add
arpl
sti
pop
inc
out
icebp
arpl
push
stos
lcall
jg
sbb
xchg
clc
arpl
negb
pop
call
sti
jo
and
cmp
insl
aad
xchg
add
sub
cwtl
cld
sub
loop
shrl
xor
or
dec
sarl
adc
xchg
js,pn
or
and
ss
stos
ljmp
and
scas
andb
mov
inc
lcall
int
popa
push
out
cltd
jno
out
pop
pop
push
gs
hlt
cmp
andl
adc
xchg
addr16
shll
scas
aad
add
fldl
xor
or
ror
ss
inc
and
mov
into
add
dec
push
jle
mov
dec
aad
inc
cmp
push
in
imul
loopne
jae
jbe
or
mov
cmpsl
shlb
ds
pop
test
mov
mov
xchg
sbb
enter
pop
pop
data16
popf
stos
xchg
xlat
rorl
test
push
mov
jmp
lock
ljmp
in
daa
and
inc
inc
cmp
daa
les
cld
jne
jp
fstpt
repnz
mov
pop
in
out
stos
jnp,pt
aam
lock
add
sbb
or
int3
xchg
jmp
fidivrs
cmpb
pop
cmp
mov
mov
push
test
out
aas
shll
add
or
dec
adc
mov
cmp
mov
inc
scas
sarl
mov
xchg
and
add
sub
cmpsl
subl
ror
into
stc
xchg
push
ja
andl
or
pop
pop
sbb
sarl
jg
mov
data16
pop
sbb
xchg
icebp
add
aam
les
sub
push
push
push
adc
xor
cmp
inc
mov
fsub
out
push
insl
outsl
dec
mov
pop
fst
sub
mov
push
and
xorb
inc
iret
mov
sub
add
or
jge
push
rclb
les
mov
push
pop
lock
inc
dec
rorl
int3
arpl
sti
cmpsl
adc
addl
repnz
jbe
lret
addr16
jns
fisubl
and
inc
out
repnz
adc
out
cmpsl
test
cmp
ja
rcl
pop
gs
aad
mov
hlt
mov
add
pusha
cmpsl
push
adcb
loop
xchg
jmp
cld
scas
pop
rclb
iret
fnsave
mov
cmp
add
dec
adc
sbb
rcr
sbb
inc
add
xchg
arpl
es
dec
pextrw
mov
lods
mov
fldt
xor
mov
xor
enter
das
push
sub
data16
popa
sub
out
frstor
movsl
jne
leave
jmp
ja
loope
lret
jb
xor
push
outsb
mov
cltd
dec
cmp
xchg
adc
push
xor
fdivrp
adc
xchg
cmc
xchg
mov
lock
xor
inc
mov
mov
mov
pop
lret
scas
sub
adc
xchg
test
in
mov
mov
push
mov
inc
push
mov
gs
inc
fwait
stc
out
mov
mov
ljmp
rorl
lods
add
shlb
test
or
dec
je
push
mov
insl
sub
adc
xor
lods
mov
sbb
jne
movsb
inc
or
mov
dec
out
pop
add
sub
movsl
add
jmp
mov
cmp
prefetch
sub
mov
xorl
or
aam
jecxz
xlat
cmpsl
shrl
aam
ja
outsb
xlat
pop
xchg
mov
ds
pop
addr16
ljmp
jle
int3
sbb
pop
or
rclb
mov
inc
dec
js
sbb
jmp
and
pop
leave
jo
imul
jno
pusha
rcll
testb
nop
mov
sbb
int3
mov
xor
repnz
jecxz
cmp
adc
xchg
stos
leave
inc
adc
test
fcoml
mov
in
pusha
sub
stc
push
and
cmc
jno
pop
or
jge
mov
pusha
mov
repnz
add
xchg
pop
int
jge
hlt
mov
pop
aaa
jns
pusha
cmp
stos
or
pcmpeqw
cltd
outsb
mov
jnp
ret
pop
loope
int3
test
dec
push
inc
fsubrl
sbb
adc
cltd
jne
dec
shll
repnz
ror
divb
pop
loope
adc
out
pop
cli
mov
popf
data16
ja
mov
pop
addl
and
pop
mov
sbb
or
es
cmp
dec
icebp
je
mov
in
jmp
xchg
dec
dec
mov
ss
sbb
in
mov
push
push
ret
icebp
aam
faddl
sahf
repz
scas
pop
dec
jns
mov
pop
push
dec
mov
in
pop
bound
mov
into
inc
add
adc
adcb
testl
or
imul
cmp
pop
xchg
sub
in
xchg
ja
push
xor
adc
add
es
loop
mov
adc
add
sub
dec
lcall
scas
and
rolb
add
in
ret
sbbb
mov
ret
repz
cmc
xor
mov
push
subl
jns
sub
imul
or
xor
rcll
in
push
add
addr16
sub
movsb
int
lds
add
inc
pop
mov
aas
push
cmp
mov
aas
in
fucomip
test
lock
add
imul
stos
daa
xor
in
sarb
push
xchg
test
adc
and
jp
inc
push
lock
es
mov
nop
jle
stos
xor
pusha
pop
addl
cmpl
and
arpl
mov
fsubl
lea
add
sbb
pop
add
mov
popa
roll
dec
mov
cli
repnz
xorb
jle
cmp
inc
jno
lods
inc
addr16
into
fcmovbe
pop
pop
fldcw
xor
and
aas
mov
sbb
int
cmp
cli
in
aam
adc
ljmp
lret
hlt
xchg
mov
xchg
push
repnz
or
cmpsb
mov
adc
add
cmp
jns
mov
leave
enter
jmp
sbb
mov
movsb
pop
mov
mov
loop
jp
jecxz
loop
sub
adc
je
subb
cmp
cs
mov
jo
in
inc
mov
and
xchg
fcom
pop
xor
xlat
jecxz
scas
test
or
cmp
gs
lods
leave
and
sub
mov
pop
jle
sbb
ret
inc
lahf
es
repnz
lret
inc
negl
xchg
dec
rcl
js
lods
jns
or
mov
test
adc
outsl
mov
cli
cmpsb
add
icebp
dec
cmp
jp
addb
loopne
into
inc
testl
movsb
fneni(8087
cltd
mov
aas
out
xchg
mov
enter
add
pop
xlat
ret
push
gs
addr16
jbe
pop
or
roll
fcompl
stos
sbb
fs
decb
mov
aad
xchg
pop
add
push
inc
cltd
push
push
arpl
outsb
inc
jnp
sbb
push
inc
aas
cltd
dec
mov
mov
and
sbb
aam
mov
roll
mov
cld
pop
rolb
out
add
add
decl
push
mov
hlt
divb
fisubl
pop
cwtl
lahf
jl
gs
adc
cs
push
pop
popa
jmp
cwtl
push
mov
popa
or
sbb
sub
enter
cmpsl
fs
add
out
fbld
mov
ds
fs
nop
mov
lahf
push
clc
cld
xor
push
push
ljmp
mov
cmpsb
or
push
or
mov
sub
xchg
mov
lock
xor
out
lret
cmpsb
jne
add
cli
dec
push
hlt
pop
loopne
cmp
push
enter
jnp
inc
cmp
sarb
push
and
test
push
jle
add
js
mov
ficoml
xchg
insb
xor
mov
mov
mov
mov
test
aas
dec
arpl
fistl
jg
scas
idivb
dec
pop
orb
imul
insl
sbb
in
jmp
push
dec
sub
add
out
movsl
dec
mov
les
adc
dec
jl
in
or
nop
lcall
imul
push
xchg
cltd
jle
cmpsl
sub
adc
push
fistpll
and
adc
push
aaa
sbb
insl
sub
lea
movsb
add
jg
push
lret
mov
cmp
ret
shl
orb
lcall
decb
fnstenv
lods
lods
aam
cltd
rolb
movsb
jmp
cltd
or
xor
sbb
rcrl
and
sub
cmpsl
pushf
scas
mov
adc
xchg
dec
push
jp
out
sarb
push
mov
stc
lahf
movsb
xchg
out
xchg
jge
lret
mov
add
mov
push
xchg
pop
shr
test
dec
daa
push
je
sub
dec
je
jae
cmp
pop
and
inc
cmp
inc
dec
mov
cmp
mov
fnsave
lods
lods
bnd
adc
stc
data16
imul
inc
dec
test
push
pushf
jno
jmp
sbb
loopne
push
sub
push
pop
clc
inc
out
jmp
push
push
push
ret
aas
mov
push
jmp
mov
data16
aas
loop
arpl
mov
push
cmpb
shll
mov
ret
popa
sub
pop
and
stos
xchg
sub
push
push
scas
push
fcmovbe
xchg
loope
lods
sub
cmp
xchg
jg
jle
mov
fnstcw
and
sub
loop
stos
jb
mov
sti
dec
cli
and
cmc
fsubp
cmc
clc
mov
int
mov
mov
and
adc
test
aaa
cmpsb
rclb
cmp
mov
push
sbb
push
in
mov
dec
sbb
xchg
pop
push
add
xlat
xchg
inc
lea
sbb
es
insl
pop
dec
std
xlat
xor
mov
ljmp
sarb
inc
and
imul
stos
mov
js
jmp
je
mov
mov
xor
rcll
lds
sbb
shlb
pushf
mov
cltd
dec
xchg
sbb
or
or
es
lahf
sub
inc
xor
hlt
pushf
pop
jmp
sarl
lods
push
and
inc
dec
xor
jno
xor
mov
mov
rolb
leave
arpl
sbb
aaa
and
mov
or
inc
inc
fisubrl
xor
xchg
or
pop
inc
jp
arpl
or
or
xchg
cmp
inc
mov
mov
cmp
pop
negl
int
cmpsb
hlt
sbb
hlt
sub
aaa
mov
jp
pop
lahf
xor
mov
push
adc
test
es
pop
ret
aaa
loope
push
lret
dec
sti
cmpsl
test
out
mov
pop
xor
sub
or
outsb
andl
popf
arpl
jb
imull
dec
dec
cmpsl
cmpsb
mov
mov
pcmpgtw
inc
daa
lret
pop
fildl
lea
push
jl
or
data16
test
pop
es
push
in
gs
push
aas
clc
sbb
fwait
enter
jns
nop
in
test
push
dec
or
pop
or
adc
cmpsl
add
mov
js
and
dec
inc
fbstp
loopne
gs
repnz
cwtl
xchg
orl
fst
int3
decl
push
inc
push
popf
jg
mov
les
inc
or
ljmp
pop
popf
repz
push
jl
leave
push
xor
jns
xchg
ret
sbb
sbb
jo
mov
ret
mov
les
insb
jle
pop
mov
push
xchg
jae
ds
push
cmp
lahf
mov
hlt
enter
enter
adcw
pop
sub
add
test
add
inc
xchg
shll
mov
std
in
gs
and
mov
push
mov
popa
sub
frstor
imul
jmp
pusha
std
shll
lock
push
cltd
xchg
cmp
jge
lea
push
xlat
inc
into
jl
in
iret
xor
xchg
or
xlat
inc
into
dec
repnz
js
sbb
bound
ljmp
cmp
mov
nop
ret
cmp
push
cmp
and
push
adc
in
stc
push
mov
xor
je
test
lcall
or
cmp
jp
mov
pushf
cmpsb
sbb
cmp
sbb
ror
push
cmc
cmp
popa
insb
sub
or
and
ljmp
push
push
daa
jl
sbb
mov
mov
aas
xchg
repz
lret
and
pop
jne
fisttpl
lcall
push
add
push
sub
test
inc
sbb
lcall
int
lret
dec
faddl
movsl
jae
pslld
jne
iret
dec
les
jp
int3
cld
xorb
in
bound
pop
dec
hlt
lahf
pop
inc
mov
in
fsub
es
std
cmpsl
inc
add
lods
sub
pop
pop
jb
mov
cmpsl
cmpsb
nop
xor
bnd
enter
movsl
xchg
popa
jno
shlb
inc
sub
shrl
jne
sub
or
xlat
push
cmc
repnz
and
add
xor
orb
popf
or
lea
sbb
or
mov
push
adc
cmpsb
mov
in
mov
jns
or
inc
mov
xorb
popf
sub
shrb
outsb
mov
cld
popa
nop
mov
xchg
xchg
out
xor
cmc
mov
loope
inc
xchg
popf
cmp
outsl
push
xchg
fidivrs
lds
xor
or
xchg
mov
push
dec
add
test
stc
int
xchg
xchg
mov
and
cmp
mov
mov
xchg
stos
or
shrl
jp
push
scas
daa
mov
andb
imul
sub
pop
fistpl
adc
scas
out
push
sub
mov
jne
xlat
mov
push
push
fnsave
inc
push
or
dec
int
xorb
scas
pusha
cmp
in
bound
adc
xor
mov
mov
aaa
stos
cmpsl
mov
lea
in
mov
imul
scas
das
sti
cmpsb
cld
mov
ds
mov
mov
in
mov
pop
aaa
enter
push
fistps
jb
mov
arpl
test
xor
out
xlat
pop
pop
hlt
fiaddl
mov
cmp
rclb
cmp
ret
and
sti
xchg
or
xor
mov
adc
pusha
pop
jmp
sub
ret
into
aam
adc
lret
sbb
stos
in
imulb
andl
sub
mov
fisttpll
adc
imul
test
add
js
dec
sub
pop
stc
jns
jbe
mov
jne
xchg
cli
fistps
sub
arpl
out
fnstenv
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
jmp
dec
inc
aad
push
pop
movsl
sbb
les
mov
xlat
push
push
test
negb
repnz
or
cmp
mov
sbb
inc
jns
adcl
mov
jae
dec
xchg
je
and
iret
call
popa
xchg
and
jno
mov
leave
int
inc
mov
loope
push
fldt
cmp
in
outsl
sbb
sub
call
imul
mov
enter
ret
push
adc
test
jecxz
jle
mov
lods
jne
mov
and
jns
std
adc
mov
std
orb
dec
lret
and
test
or
fs
push
enter
xchg
xorl
fnstsw
ljmp
mulb
mov
sub
out
lods
hlt
call
fwait
xor
jns
push
and
cmp
ljmp
leave
ds
jle
outsb
xchg
stos
dec
fwait
xor
jg
dec
xchg
or
pop
sbb
fidivrl
adc
stc
out
aaa
cmp
mov
jae
cmp
sbb
and
pop
sahf
fst
insb
outsb
shrb
cmc
jno
adc
dec
xchg
cs
out
in
fldt
adc
insb
loopne
mov
aas
je
sbb
es
dec
mov
pop
jbe
mov
xor
and
loope
and
js
idiv
and
repz
push
push
push
xchg
ret
test
dec
inc
out
and
cs
push
or
xchg
push
jne
sahf
pop
mov
out
std
stos
dec
les
dec
sbb
sub
inc
test
cwtl
mov
pusha
les
lock
mov
loop
xor
arpl
cli
jl
and
dec
sub
pop
movsb
dec
jno
push
rcrl
mov
lcall
xor
leave
and
call
ret
dec
out
fisttpl
fnstenv
push
push
fsubrs
mov
xor
jno
add
stc
idivl
xor
les
lahf
push
jae
inc
add
or
jb
pop
fisttpll
test
outsb
xchg
cmp
sub
bound
sahf
ret
jecxz
xchg
jl
mov
inc
mov
ds
or
test
call
mov
pusha
fs
mov
xor
loopne
push
cli
inc
test
cli
or
pop
pop
div
mov
cmp
and
lods
push
sub
shll
lret
int
push
or
inc
lahf
int
inc
jecxz
fldenv
push
mov
push
jmp
in
gs
out
dec
lods
push
jp
pop
aas
test
sbb
inc
rol
mov
jb
lds
pop
cwtl
adc
pop
loop
fimull
mov
js
ss
popf
cwtl
ljmp
jecxz
sbb
dec
je
addr16
xlat
das
ficomps
jo
inc
inc
and
sbb
fdivrl
cwtl
int3
sub
ja
inc
subl
pop
inc
mov
pop
out
pop
push
jnp
popf
pusha
lds
int3
sub
ljmp
add
add
neg
mov
jge
negb
mov
fwait
mov
add
jle
and
ret
loop
std
jl
sub
adc
scas
loop
jmp
mov
push
adc
int3
mov
test
popf
rorb
mov
adc
add
push
mov
cs
cmp
push
push
push
pop
aas
in
mov
jb
sbb
mov
sti
adc
inc
xchg
out
and
insl
mov
sbb
gs
pop
cmpsb
pop
lods
mov
test
mov
jg
fdivs
dec
xor
mov
cmc
pushw
mov
push
test
or
and
sbb
add
mov
mov
adc
daa
repz
inc
and
jno
out
push
push
shl
int3
xor
repz
mov
xchg
add
fimuls
add
inc
pop
mov
scas
push
mov
mov
pop
ds
push
push
xchg
pop
xor
cmp
mov
xor
sti
outsl
ss
xor
in
lret
into
xor
fs
mov
je
pop
mov
mov
pop
scas
add
std
pop
mov
mov
popa
fs
in
rcr
insb
or
ss
mov
leave
jae
mov
mov
add
mov
cmp
rorl
aad
xlat
xorb
aad
pop
in
fsubr
test
mov
insb
pop
mov
push
mov
idivb
in
clc
jno
push
jno
inc
mov
pushf
jo
inc
jno
sbb
jle
inc
in
inc
scas
jb
cli
push
imul
in
mov
pop
pop
daa
js
je
imul
nop
adc
icebp
out
mov
mov
sbb
mov
rcrb
pop
push
adc
mov
ret
xchg
pop
xchg
push
inc
stos
mov
lret
add
sbb
and
sbb
and
out
sbb
add
cli
push
or
adc
lods
testb
sub
add
sub
push
sbb
fsubr
je
in
mov
mov
mov
adc
mov
xchg
xor
jns
push
repz
xlat
cld
dec
aam
lret
push
scas
cmpsl
mov
lret
mov
fstps
das
es
leave
dec
adc
adc
inc
daa
xchg
sbb
lret
cmpsl
mov
sub
sub
hlt
or
xor
out
orl
inc
aam
push
and
sub
sub
push
repnz
push
insl
inc
lods
and
lods
cwtl
xor
mov
mov
rorl
xchg
loop
add
les
push
scas
daa
or
push
leave
scas
inc
dec
cmp
aam
sub
jmp
repz
pop
gs
cli
mov
fwait
push
ss
push
faddl
ret
out
jecxz
mov
stc
jecxz
lcall
sub
imul
cld
fadds
xchg
xchg
je
sbb
adc
je
sti
ljmp
mov
inc
xchg
icebp
stc
mov
push
cwtl
aaa
xchg
xchg
mov
xchg
inc
sub
aas
sbb
lds
fwait
popa
in
mov
xchg
inc
pop
jge
inc
adc
ja
orb
sahf
xlat
aam
push
adc
loop
jp
push
fisubs
test
xor
call
insl
arpl
movsl
mov
lret
lods
out
icebp
stos
imul
mov
inc
filds
mov
ret
scas
dec
push
ss
cld
jmp
repz
adc
shll
cmpsl
cmp
out
xor
std
cmp
mov
pop
sbb
pushf
test
and
xchg
push
test
adc
std
jo
adc
pop
sbb
cmp
cld
aad
std
push
ljmp
test
dec
dec
xor
cmp
fistl
and
push
sub
imul
xor
lock
push
push
mov
clc
mov
pop
jle
jmp
ret
cmp
not
mov
loopne
call
sub
lret
cmp
scas
outsb
push
fisubs
cmp
or
adc
mov
push
jae
outsl
nop
adc
std
pop
xor
ja
das
mov
push
orb
shll
push
mov
pop
and
mov
xchg
inc
xor
sub
cmp
movsb
xchg
mull
ret
ds
mov
mov
push
clc
sahf
and
mov
bound
xchg
mov
xchg
pop
mov
mov
add
sub
inc
xchg
fisubs
in
push
sub
fisttps
out
repz
mov
fs
decb
adc
fadds
cmpsl
sbb
jmp
insb
jp
mov
lcall
inc
scas
xchg
cmp
sbb
mov
adc
mov
jmp
sar
mov
cmp
sbb
xor
rep
xor
or
xchg
aas
adc
push
shld
cmp
dec
xor
imul
loop
lds
or
stc
fisubs
push
into
data16
jp
out
jg
xchg
mov
xor
or
movl
or
push
push
test
xchg
xchg
cwtl
ret
and
mov
cmp
insb
lret
ja
mov
ljmp
and
fistpl
push
mov
pop
sbb
aaa
mov
lods
or
ja
sbb
jle
mov
push
push
in
jle
mov
lret
cmc
out
fmull
nop
movl
sbb
mov
arpl
mov
mov
mov
xchg
mov
adc
push
pop
adc
sub
xor
movsl
cmp
test
mov
sbb
mov
icebp
shrl
xchg
into
cltd
outsb
mov
or
sbb
mov
das
in
xor
jmp
rorb
pop
xchg
pop
pop
mov
out
jbe
jmp
loopew
jecxz
xchg
inc
add
loopne
push
popa
dec
push
stc
push
jp
push
inc
out
mov
jmp
xorl
cmpsl
pop
xchg
lret
xchg
js
cmp
gs
cs
dec
add
pop
hlt
sub
inc
push
jg
jmp
pushf
lods
jmp
enter
orl
subb
push
ret
mov
push
cltd
or
cmp
xchg
cmpsb
jl
in
mov
mov
mov
mov
jp
shrl
imul
mov
sti
fsubrl
comiss
xorl
out
aaa
shll
mov
sub
and
cwtl
cltd
movsl
scas
es
mov
xor
outsl
add
test
out
repz
cmpsl
push
scas
or
in
jmp
ss
mov
push
sub
cmpl
lods
pcmpeqd
out
loopne
push
sbbl
movsl
inc
pop
lods
out
xchg
je
sub
dec
imul
ljmp
ja
jb
pop
cwtl
push
cmpsl
nop
rcrb
add
mov
jno
lahf
insl
add
in
mov
mov
pop
cltd
loopne
xor
or
dec
add
lea
mov
pop
cmp
sahf
clc
iret
cmpsb
nop
fld
cltd
fsubrl
lret
inc
xor
jp
push
leave
negb
mov
outsl
imulb
cmp
adc
sbb
add
inc
out
lret
pop
movsb
sbb
mov
mov
mov
imul
roll
outsb
fbstp
inc
xchg
xor
jno
sub
in
ss
stc
sbb
jmp
and
sub
dec
push
ret
mov
ds
in
daa
pop
je
and
fcmovnu
pop
fldl
notb
adc
sub
xor
jp
jno
into
mov
cmpsl
jnp
mov
rorb
sbb
and
pop
mov
clc
push
add
push
or
das
lret
aam
lods
xchg
pop
pushf
pop
adc
sarb
insl
sub
in
or
mov
dec
fistps
ret
add
jl
fisubrl
ret
das
int
adc
imul
pop
js
loope
mov
jmp
inc
lcall
mov
mov
sub
jmp
inc
jae
sub
push
jle
rcrb
enter
loope
jmp
ret
fwait
add
enter
sti
into
mov
cmp
lcall
mov
inc
push
pop
inc
cli
pop
xchg
sahf
add
call
dec
mov
cmp
adc
int
sbb
inc
cwtl
push
mov
lret
mov
xor
push
icebp
jl
out
aaa
aaa
jno
sbb
cwtl
dec
outsl
jle
loope
test
or
push
pop
jecxz
loope
dec
out
pop
sbb
adc
inc
loop
mov
out
xchg
sub
jecxz
jnp
imul
jmp
lahf
add
mov
add
dec
push
inc
pusha
iret
pop
fwait
dec
and
sbb
inc
jae
dec
sbb
clc
cwtl
or
cmp
roll
adc
jbe
dec
xchg
mov
sbb
pop
or
mov
xchg
or
inc
cmpsl
xchg
ficomps
cmp
mov
mov
sub
pop
loopne
nop
cvtdq2ps
scas
jo
mull
ret
mov
cltd
lcall
xchg
movb
lods
xchg
cwtl
dec
ss
ss
add
cmp
loopne
mov
xchg
lds
lahf
mov
or
sub
rolb
int3
jb
cmp
cmp
mov
mov
fmul
loop
xchg
push
loopne
inc
xchg
and
cmpsb
add
or
pop
jmp
scas
outsb
leave
sbb
jmp
addr16
xlat
out
imul
lcall
fwait
and
push
repnz
data16
mulps
sbb
cli
add
in
jae
pushf
xchg
mov
pop
fs
out
push
dec
push
mov
push
rorb
add
inc
xchg
mov
add
addr16
cmp
hlt
lret
pop
jl
cmpsl
ds
pop
cld
pop
scas
sub
out
int
in
cltd
mov
add
negb
lock
mov
loope
mov
and
mov
ds
or
mov
into
adc
clc
aad
mov
cmp
cltd
lret
lods
js
gs
mov
xchg
jne
data16
out
jbe
mov
loopne
nop
cs
xchg
daa
arpl
test
mov
xchg
jne
stos
mov
shll
mov
into
sub
jl
enter
lret
test
add
fdivr
aad
repz
dec
xchg
jle
cmp
mov
pop
std
mov
adc
cli
shl
fsubrl
mov
lret
frstor
sbb
dec
fnstcw
push
insl
mov
mul
clc
rcrb
inc
les
loope
popf
mov
add
sbbb
rcll
adc
call
jge
shlb
jmp
imul
rorl
dec
jle
mov
mov
stos
andl
push
push
cmc
push
adc
inc
sub
in
push
pop
addb
pop
nop
inc
jno
mov
pusha
xchg
test
mov
sets
dec
xchg
loope
adc
xor
cmp
cmp
add
xlat
int
stos
fisubs
popa
pushf
mov
aaa
adc
or
sbb
adc
fildll
adc
cmp
nop
pop
repnz
push
jb
ffreep
or
xchg
mov
cmp
xchg
fs
dec
test
xor
jge
loop
or
xor
iret
psadbw
stos
mov
adc
mov
divl
or
pop
dec
xchg
mov
js
jnp
inc
arpl
in
cmc
int
mov
es
in
dec
xchg
inc
cwtl
sub
add
out
push
iret
fcmovbe
divb
mov
fbstp
lods
xor
les
mov
nop
xchg
jmp
push
mov
xchg
add
sbb
push
sahf
jbe
mov
fs
fistpl
rol
sti
test
icebp
cmc
popf
imul
test
fadd
push
push
dec
mov
push
adc
sub
push
dec
adc
mov
cmp
mov
xor
bound
xchg
mov
add
test
push
sbb
jge
mov
sbb
addr16
inc
addr16
not
les
xchg
mov
addb
cltd
jo
jp
xor
hlt
movsb
jns
jp
cmp
mov
add
xchg
arpl
into
sub
into
xor
mov
mov
ja
shrb
int
mov
data16
cli
xchg
mov
pusha
push
mov
xor
addr16
out
jge
inc
mov
mov
push
pop
cs
sub
fcmovne
loope
fidivs
inc
iret
outsb
adc
push
sbb
lcall
lds
inc
popf
sub
ja
push
cs
jnp
test
fsubr
jno
les
ffree
icebp
rol
fsubl
lea
adc
mov
bound
xor
mov
xchg
in
mov
mov
lods
lret
inc
mov
cmp
insl
and
stc
cmpsb
std
mov
push
mov
mov
push
or
xor
std
sub
arpl
add
rcr
mov
sub
jge
icebp
popf
imul
push
push
insl
lods
dec
testl
repz
lret
sbb
push
mov
xchg
mov
cmp
fnop
mov
pusha
cmp
inc
add
in
fildll
adc
rcrl
mov
sbb
add
in
push
sub
jae
aaa
cmpb
outsb
cmove
lahf
sbb
test
jmp
dec
xor
sbb
and
mov
push
sti
inc
aas
call
jp
mov
loop
mov
mov
test
push
mov
ret
xor
push
xchg
sub
push
nop
dec
incb
xor
adc
cmovno
mov
push
and
out
leave
and
leave
jns
push
pop
ljmp
jb
inc
or
pushf
jae
and
xchg
sbb
lock
imul
mov
movsb
movsb
fstps
adc
xchg
sbb
pop
lea
lcall
imul
fwait
shrb
sbb
jno
aas
data16
sti
mov
cmp
imul
lcall
pop
arpl
push
xchg
mov
cwtl
sbb
mov
cltd
dec
out
mov
cwtl
in
mov
xchg
and
sbb
in
and
dec
xchg
jl
add
mov
lock
cmp
jp
cwtl
lahf
shlb
adc
aam
mov
jmp
popf
cmp
ja
fnsave
pop
into
inc
or
cwtl
dec
je
ret
xchg
iret
mov
shlb
das
and
xchg
sub
add
and
ljmp
mov
jle
es
and
jmp
push
daa
sbb
xchg
shll
mov
xor
std
cmp
in
mov
out
jmp
sbb
xor
fadds
dec
xchg
insl
dec
pop
sbbl
lahf
jge
fdivrl
out
jg
repnz
imul
or
ljmp
adc
outsl
sub
adc
sbb
ficomps
or
lds
stos
je
test
xor
loop
push
sbb
add
pop
andl
lret
jb
fs
mov
icebp
adc
jmp
sub
ficompl
push
and
mov
js
jg
xchg
clc
lods
ja
mov
push
lcall
and
stos
push
sbb
pop
pusha
push
sti
and
sbb
xchg
xor
adc
jle
inc
add
and
call
inc
mov
mov
jg
shr
jbe
mov
mov
stc
decb
dec
and
inc
es
xchg
stc
iret
xchg
and
sub
pop
xlat
stos
xlat
insl
sbb
clc
pop
cli
jecxz
mov
mov
outsl
popa
push
jl
or
fisubl
or
push
mov
stc
lret
sbb
adc
jl
test
sti
mov
push
mov
adc
sbb
sbb
aam
jecxz
fistl
imul
sahf
mov
mov
cltd
out
out
sbb
iret
scas
adc
out
adc
jns
test
mov
stc
lret
sbb
xlat
daa
dec
jae
pushf
xchg
pusha
rcrb
cmp
repz
dec
cmp
inc
push
push
lea
inc
stos
inc
add
lahf
xchg
das
inc
lock
push
iret
dec
push
push
xchg
cmp
ss
scas
gs
add
lods
mov
jmp
fnstsw
or
lret
cli
or
pop
movsb
shrb
nop
xchg
call
mov
test
mov
popf
push
xchg
jbe
and
push
adc
fwait
loope
nopl
jp
arpl
mov
mov
or
fstps
jbe
push
add
pop
mov
out
lret
lock
push
mov
push
je
jmp
adcb
xchg
sbb
lret
pop
cmpsb
cld
or
adc
xchg
mov
aam
daa
dec
cmp
jmp
and
mov
lret
inc
loope
gs
add
pusha
lcall
mov
pop
sahf
bound
jmp
pop
push
sar
or
jbe
arpl
mov
cmp
inc
pop
xor
lods
repz
mov
xchg
std
xchg
rcrb
adc
mov
push
and
out
cmp
xchg
mov
or
jb
sub
sbb
and
into
dec
add
and
push
jns
pop
pop
dec
cmpsl
pusha
push
lds
xchg
push
and
jmp
call
pop
jns
jno
cmp
lcall
sub
in
aam
xor
mov
ficompl
mov
in
negl
sub
shll
pusha
mov
int
jmp
pop
ljmp
mov
sbb
fldenv
adc
mov
vmovaps
cmp
xor
lods
movsl
mov
test
out
faddp
loop
sahf
mov
rolb
jae,pn
add
bound
pop
sub
aas
mov
jg
mov
std
mov
inc
inc
outsl
dec
jmp
nop
data16
xor
std
mov
mov
stos
adcb
cwtl
adc
and
js
test
stc
jnp
hlt
jo
jnp
idiv
pop
xchg
lea
repz
push
leave
pop
and
dec
cmpsl
enter
pop
loope
ss
pop
sub
jle
insl
cld
gs
shrb
and
loop
sbb
adc
inc
or
mov
jnp
ss
shrb
insl
mov
jmp
popa
pushf
push
in
xchg
mov
jne
mov
xor
stc
pop
push
mov
clc
sbb
mov
ret
rorl
or
add
inc
pop
ret
stc
mov
or
pop
mov
sbb
inc
inc
mov
lcall
cmpsl
sub
pop
shr
gs
movsl
fadd
fstps
fucomp
mov
jmp
mov
mov
add
cmp
test
inc
dec
cmpsb
sbb
mov
mov
fsubrl
add
lahf
cli
cmp
ret
sbb
mov
imul
cmp
push
jnp
mov
les
dec
mov
rorb
push
test
xor
sahf
mov
inc
sbb
mov
fildll
inc
and
fmull
pop
fistpll
lret
pop
jmp
lods
push
pop
jecxz
jecxz
lahf
icebp
jno
sbb
cmp
cmpsb
cmp
jns
mov
addr16
sbb
pop
lcall
adc
shll
and
mov
cltd
pop
pop
xchg
adc
inc
clc
sub
dec
ret
loopne
or
or
outsb
aad
mov
adc
pop
xchg
jns
incb
push
imul
sub
data16
loope
das
js
adc
loopne,pt
push
popf
gs
cmp
jne
es
sbb
int3
adc
mov
inc
in
outsl
dec
sti
push
sbb
mov
ss
jmp
mov
xchg
inc
adc
arpl
loope
insb
ret
in
add
test
sbb
lods
cmp
imul
outsb
or
sti
push
cs
push
icebp
adc
popa
out
test
stos
fsubrl
rcr
hlt
scas
push
orl
dec
xor
pusha
and
nop
or
jle
cmc
mov
loop
push
dec
adcb
imul
je
fcmovnu
jg
addl
mov
sub
loopne
fsubrp
push
outsl
orl
xchg
cltd
adc
sbb
pushf
fisubl
rorb
mov
adcb
fcompl
push
insl
cwtl
mov
lret
jle
cmpsl
mov
cltd
inc
cmpsl
fmull
add
outsb
enter
jg
test
push
popf
push
sbb
push
ret
push
addr16
out
jle
rcrb
mov
imul
push
jmp
pop
lea
mov
daa
cmp
mov
mov
mov
pop
cmp
inc
xor
xlat
fwait
insl
ljmp
cmp
pop
movsb
mov
add
mov
cltd
cmp
cmp
sub
dec
jno
lea
cltd
test
pushf
mov
adc
push
cmpsl
aas
lret
push
ficoml
xchg
xchg
xor
xchg
mov
data16
adc
xor
mov
mov
mov
imulb
xlat
dec
push
stc
and
sub
into
daa
pop
mov
insl
shl
xlat
clc
int3
sarl
inc
or
imul
push
push
inc
xchg
jecxz
mov
sarb
sub
ds
jl
outsl
dec
sub
mov
movsb
in
fisttpl
roll
sbb
cmpsb
daa
adc
jnp
mov
shll
stos
int3
dec
fiadds
xchg
jp
push
ror
inc
jns
inc
out
out
movsb
fwait
and
sub
push
dec
adcl
mov
adc
mov
js
xchg
mov
inc
loop
fwait
lds
and
ljmp
fists
fidivrl
sahf
out
imul
jp
test
mov
enter
lds
sbb
aaa
adc
jecxz
inc
aad
rcr
jns
sbb
lds
pop
push
dec
imul
int
leave
fsubp
clc
mov
mov
adc
push
movsb
or
xor
out
insb
arpl
icebp
and
sbb
xchg
mov
rclb
sub
sbb
cwtl
rolb
cmc
adc
call
std
sbb
aaa
mov
filds
pop
jns
jecxz
ds
push
ret
push
pop
cli
xor
or
clc
push
in
in
ficompl
pop
mov
je
or
mov
sbb
filds
ss
lret
loope
mov
cmp
aaa
lock
adc
cmpsl
cld
call
xor
ret
iret
jo
ljmp
ret
in
ror
mov
xchg
mov
mov
addr16
inc
sbb
shrl
pop
rcl
aas
cs
jnp
mov
aas
cmp
ljmp
or
int3
pop
pop
icebp
sub
pushf
fwait
push
cltd
mov
nop
cmpsl
stos
jmp
into
nop
mov
imul
adc
add
pop
xor
sti
pusha
lret
dec
out
clc
pusha
out
jnp
arpl
mov
pop
ret
jge
jle
inc
cmp
mov
cmpsl
into
sbb
daa
ret
pop
jecxz
into
arpl
cld
mull
sbbb
mov
jg
dec
mov
addr16
jo
inc
out
pop
stos
push
jnp
dec
xchg
add
sbb
pop
nop
sbb
inc
xchg
ret
push
mov
add
ret
imul
ljmp
int3
xor
les
outsb
adc
call
xchg
mov
orl
rorl
cwtl
cmp
inc
jae
xchg
dec
lret
jg
repz
fiaddl
mov
mov
aam
jbe
inc
arpl
arpl
xchg
push
xchg
leave
ret
data16
lds
cmc
inc
mov
ss
movsb
sub
icebp
dec
insl
cwtl
int
insb
js
lods
test
cld
xchg
push
mov
rorl
pop
popf
and
popf
sbb
lea
mov
sub
push
fldl
cwtl
ret
repz
fwait
rol
mov
jmp
stc
shll
and
in
mov
pop
mov
jmp
mov
in
mov
pop
outsl
mov
sbb
add
arpl
push
xchg
adc
negl
out
push
cld
mov
mov
pop
xchg
ljmp
arpl
mov
ljmp
jg
fdiv
lods
mov
push
stc
adc
xchg
xchg
lods
test
jge
pop
enter
daa
outsb
push
dec
insb
iret
jns
sub
das
mov
xchg
negl
pop
xchg
idivb
jmp
imul
add
pop
mov
sarb
out
xchg
fnstcw
dec
push
jl
aas
jns
pop
lock
add
in
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
shl
mov
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
jmp
cli
shll
mov
xchg
mov
call
or
sub
push
push
js
xchg
aaa
scas
adc
and
add
cmp
ret
lcall
xchg
mov
xchg
lock
push
push
lods
stc
loopne
jmp
data16
rorb
sbbl
sbb
xor
or
test
mov
outsl
push
cmpsb
std
lock
loop
push
pop
imul
cmpsb
jmp
fsubs
icebp
sub
stc
xor
out
xchg
stos
sub
lcall
in
mov
rol
mov
jno
sub
inc
fscale
push
jge
in
mov
outsb
cmp
xchg
mov
or
add
xor
push
mov
push
ljmp
mov
inc
imul
or
xchg
cld
insl
inc
pop
mov
movsb
insb
sbb
dec
cmpsl
xor
mov
mov
inc
sbb
dec
sub
movsl
fisubrs
mov
leave
dec
aam
pusha
shll
or
iret
icebp
out
mov
adc
lahf
sbb
sbb
mov
aaa
xor
jle
js
and
lcall
add
inc
pop
sarl
dec
rcl
sbb
fwait
mov
mov
add
mov
icebp
or
rcrl
sub
inc
mov
mov
mov
xorl
cmp
les
loope
jb
xchg
mov
pop
mov
fists
lcall
jne
clc
mov
push
xchg
sbb
mov
mov
sub
std
add
cmp
push
push
sti
out
aas
lahf
arpl
push
loopne
out
in
inc
out
cltd
jmp
je
enter
arpl
outsb
cld
push
sub
fsubrs
jl
mov
addr16
adc
out
or
outsl
pop
push
jb
mov
cs
lahf
dec
add
and
sbb
push
pop
int3
push
jns
sub
cwtl
pop
lods
pop
aad
aam
ljmp
or
xchg
push
pop
jl
pop
mov
or
sbb
add
mov
and
ficomps
push
idivl
pop
lods
jbe
cmc
loope
mov
enter
mov
mov
insb
mov
xchg
dec
push
int
and
sub
sarb
enter
scas
xchg
lret
fwait
dec
loopne
lock
jne
adcl
or
jno
inc
sub
out
push
loopne
jo
mov
std
xchg
test
lahf
sub
je
std
test
cmp
mov
jne
into
xchg
lock
xor
pop
dec
mov
pop
ds
add
rclb
pop
jmp
sahf
lds
sub
push
fs
mov
ficoml
jp
gs
das
cmpsb
mov
mov
or
pop
aam
sub
jb
out
mov
adc
mov
xor
adc
cmc
ss
repz
sbb
adc
pop
cmp
adc
add
stc
pop
and
idivb
add
cmpsb
and
sbb
aam
sub
and
mov
jl
les
jb
mulb
jmp
fs
push
popa
xchg
mov
pop
repz
adc
out
je
mov
inc
pop
shll
imul
add
fisubrs
jle
or
int
sub
sub
loop
jg
add
add
jnp
das
lds
mov
arpl
mov
pop
jmp
pushf
in
testl
inc
cmp
leave
std
and
and
cmpsl
mov
pop
push
fstps
loop
int
mov
pop
dec
jns
cwtl
xor
paddw
iret
cmpb
lcall
push
sub
push
or
repz
data16
dec
lar
popf
das
cmp
mov
scas
pop
or
iret
inc
pushf
fstps
icebp
push
or
scas
inc
adc
add
push
iret
jle
pop
pop
or
sbb
xor
mov
cmp
ss
cli
push
mov
stc
mov
xchg
lahf
xchg
ljmp
jg
adc
mov
mov
cltd
mov
pop
lret
adc
jo
lock
outsb
loop
jg
jae
dec
xchg
add
imul
jne
pop
cmp
aaa
inc
cmc
xchg
ds
shll
jno
pop
lea
mov
test
imulb
shl
dec
aad
je
push
inc
ficoms
push
inc
mov
int
cmp
xchg
sbb
dec
out
cmp
and
pusha
scas
lahf
mov
cmc
pop
call
xor
sbb
mov
cmpsb
adc
arpl
in
pop
xchg
popa
jne
scas
cmpsl
xor
inc
bound
adc
loop
movsl
popa
cwtl
das
aas
daa
aam
cmp
sbb
movsl
sub
mov
lds
or
push
out
pusha
inc
mov
push
mov
xchg
aad
bound
cld
mov
dec
sbb
out
sahf
inc
xchg
fstpl
lahf
xchg
mov
cs
dec
cmp
mov
testl
in
sub
sub
xchg
ljmp
xchg
inc
push
outsl
mov
push
loope
mov
in
xchg
mov
popf
clc
jmp
test
or
lds
push
adc
sub
loopne
testl
test
in
fadd
push
notl
incb
mov
adc
pop
in
pusha
sub
std
mov
es
jmp
adc
jcxz
sbb
inc
jmp
mov
lcall
lcall
jo
stos
pop
push
data16
ss
int3
in
int
iret
xlat
lahf
xor
push
in
mov
dec
xlat
insl
pop
aas
mov
jmp
sbb
into
pop
jg
dec
jle
jne
xchg
stc
mov
mov
add
jb
pop
std
xor
int
and
xor
pusha
mov
sub
stc
inc
scas
adc
adc
adc
test
das
mov
fwait
imul
stc
push
xchg
inc
ljmp
jle
push
inc
xor
js
gs
adc
or
pop
and
notl
jg
sub
out
cs
dec
lds
cmp
or
mov
out
aaa
cmc
repz
idivl
fistpll
xor
flds
xor
xor
sbb
jle
mov
push
insb
jo
insb
les
fstpt
jecxz
mov
paddw
push
jecxz
and
fwait
and
out
andl
and
repz
mov
pop
fnstenv
call
movsl
data16
cmp
es
or
sub
scas
lds
adc
jb
cmpsl
dec
xor
test
test
xor
push
xor
int3
in
xchg
pop
pop
lea
sbbl
sbb
adc
mov
lods
add
jle
test
xor
loopne
jge
xchg
xor
dec
icebp
mov
in
gs
test
rorl
test
dec
push
outsb
mov
arpl
pop
cwtl
jl
xor
inc
mov
lods
sahf
xchg
movsl
ds
mov
in
mov
xor
cmp
adc
stos
xchg
fsubr
loope
jne
push
dec
adc
mov
mov
mov
js
gs
adc
aas
enter
push
dec
loop
jno
aad
in
leave
fwait
scas
lods
xchg
shlb
add
pop
xor
shrb
iret
and
push
addr16
aam
cmp
mov
pop
inc
jl
cmpsl
mov
push
pop
sbb
jae
jp
addr16
dec
dec
sti
mov
jge
pop
popf
xorl
adc
fbld
rsm
add
xchg
jnp
fdivp
fdivrl
out
cmpl
addr16
xor
cmp
inc
ljmp
aas
ss
adc
shlb
shl
mov
or
stc
jp
pusha
ljmp
orl
mov
push
sbb
stos
popl
dec
pop
jno
popf
mov
cmp
fs
mov
fstl
mov
clc
in
sbb
push
xor
lcall
mov
cmp
fsubs
fsubs
subb
fcomps
popf
mov
loope
mov
sub
repz
xchg
inc
adc
jnp
inc
sbb
cmp
cmp
jl
or
dec
adc
sub
mov
js
push
adcb
add
jle
push
dec
and
xchg
pop
les
push
movsl
mov
and
imul
shr
mov
lea
jno
mov
movsl
enter
inc
xor
pop
push
es
xchg
icebp
sarl
xchg
xor
sbb
imul
dec
dec
and
in
hlt
add
cld
fcomp
dec
push
iret
and
mov
mov
in
jmp
mov
movsl
xchg
mov
stc
les
fsubr
sbb
les
sub
outsl
out
mov
sub
jo
lock
jbe
out
lret
sub
outsb
adcb
push
mov
mov
fcoml
mov
xchg
cwtl
cmp
scas
pop
fdivs
cs
cli
xor
mov
xchg
sbb
insl
outsl
in
cs
sbb
push
fstpt
lea
xchg
dec
aaa
push
cld
in
sbb
push
ret
xchg
aaa
pop
mov
test
jge
js
pop
mov
scas
xor
out
cltd
add
mov
fidivrl
in
add
mov
int
mov
push
punpcklwd
int3
pop
and
inc
inc
lods
dec
fdiv
std
push
pop
mov
lret
ss
test
inc
mov
in
and
mov
cld
xchg
mov
and
mov
fidivl
push
xlat
mov
outsb
sub
ds
jns
push
push
or
sarl
xchg
add
mov
push
outsl
test
loopne
mov
testb
xor
leave
lret
sub
xor
mov
add
jecxz
push
imul
pop
lret
jg
add
or
add
xor
add
or
cwtl
mov
mov
jb
inc
mov
cmp
adc
ret
mov
je
mov
jbe
sub
loope
and
das
inc
xchg
xchg
xor
dec
int
fwait
repnz
adc
aam
lret
push
xor
or
push
push
inc
scas
mov
or
out
add
enter
xchg
shr
pop
xchg
outsl
cmp
loopne
jg
push
inc
ljmp
rolb
das
mov
clc
movsb
outsb
push
dec
adc
inc
popf
mov
cld
je
in
fdivrl
or
sub
dec
mov
cmp
cmp
test
or
cmp
fdivr
inc
call
bound
xor
push
imull
cltd
inc
rcrb
test
negb
inc
or
aam
inc
iret
pusha
pop
fistl
pop
lret
repnz
sub
insl
int3
pop
push
push
fcomps
scas
aas
in
xchg
xchg
inc
lds
push
nop
cmpsl
neg
arpl
pop
push
adc
fimuls
sub
aas
dec
insl
mov
hlt
inc
and
xchg
adc
pushf
divb
std
mov
scas
jne
clc
stos
push
rcll
loope
ljmp
movsb
adc
lahf
inc
cld
mov
adc
test
sub
xor
xor
fists
jl
mov
adc
repnz
adc
mov
mov
popf
sbb
xchg
sub
xor
sbbl
loop
aaa
pop
mov
mov
xor
mov
test
xchg
test
stos
adc
or
mov
icebp
pop
pop
repnz
lods
stos
icebp
jg
adc
sbb
aam
icebp
push
test
jnp
cltd
cwtl
into
cmp
xchg
idivl
mov
mov
aam
cltd
fcoml
pop
push
mov
xchg
pop
dec
xlat
aam
sbb
fwait
push
push
loop
mov
jmp
xor
test
sub
ja
lods
lret
inc
inc
jle
jne
hlt
rolb
mul
sbb
icebp
add
xchg
cmc
xchg
lret
pop
rorl
cmp
push
sbb
leave
adc
stos
sub
mov
hlt
jb
mov
ret
test
jl
mov
imulb
nop
in
mov
dec
xor
push
add
sbb
push
lods
repnz
addl
xchg
repnz
ficoml
stos
outsl
xor
pop
loopne
jmp
mov
pop
std
aaa
or
xchg
add
jno
xchg
xchg
mov
and
cli
and
add
xchg
arpl
pop
jae
mov
push
or
cmc
fwait
cwtl
stos
fmull
add
xchg
jmp
pop
inc
mov
ss
pop
inc
into
fnstsw
xchg
push
fs
xchg
dec
fisttps
addb
pop
push
xor
or
outsb
pop
jae
in
add
mov
mov
fstl
inc
mov
sub
inc
out
pop
jbe
mov
int
ret
mov
out
sbb
cmp
lahf
add
jl
jbe
mov
pop
jae
scas
jne
fsubrs
cmpsb
in
stc
pop
arpl
xor
int3
xor
add
scas
xchg
lret
orb
jne
jo
dec
push
cmp
mov
push
inc
mov
cmpsl
jg
out
and
dec
mov
das
jae
imulb
jle
fdiv
in
jbe
pushl
lret
add
xchg
and
fcmove
gs
pop
imul
in
das
mov
jecxz
ljmp
jecxz
mov
pop
jle
cwtl
arpl
scas
roll
pop
push
mov
add
ja
lods
pop
pop
dec
jb
adc
fnstcw
jbe
idivb
mov
push
movsb
ror
jp
sbb
xor
xchg
lds
xor
mov
rorb
sub
cmc
cli
push
sbb
ficomps
arpl
add
pop
inc
xor
xchg
scas
mov
dec
repz
lods
orl
dec
stc
arpl
cmp
and
imul
out
pop
xor
mov
cmpb
and
pop
xchg
inc
js
fwait
pop
out
movsl
aam
mov
or
sbb
hlt
adc
mov
mov
je
dec
cld
lret
mov
sbb
fmull
jge
outsb
das
das
ss
xchg
insb
push
jno
pop
mov
jne
mov
add
mov
mov
mov
mov
or
in
lods
leave
pop
xor
out
dec
push
xchg
and
push
jno
mov
aad
ds
sub
popf
mov
pusha
mov
sbb
sub
repz
negl
ret
adc
pop
mov
or
shlb
mov
xor
lock
call
jge
hlt
mov
xor
push
mov
std
add
inc
mov
ret
clc
cmp
dec
push
daa
hlt
fidivrl
jge
lahf
les
insl
xorb
nop
movsl
xchg
icebp
sbb
dec
dec
in
push
icebp
jae
orb
shll
repz
hlt
sarb
popa
lret
push
sub
or
mov
mov
sub
dec
pop
sub
add
push
sub
ret
aad
mov
xchg
fmuls
mov
adc
inc
lret
jne
jmp
subb
cltd
mov
loopne
dec
cmpsl
adc
xlat
lea
fisttpl
sub
or
push
and
es
iret
std
fdivs
and
incl
int3
ss
rorl
loop
cmpsl
xor
jbe
inc
aaa
cmp
pop
push
mov
lods
inc
inc
and
imull
sbb
cmp
insb
cli
pushf
sti
lret
data16
movl
lret
mov
stos
add
mov
rcll
inc
leave
fstpt
lea
addr16
cs
stos
sbbb
ja
fistps
int3
iret
sbb
mov
dec
and
fcmove
inc
adc
lahf
and
fnsave
in
push
dec
jecxz
push
cwtl
call
jg
stc
and
mov
pop
sbb
ret
enter
mov
icebp
mov
cmpb
adc
inc
xchg
mov
cmc
dec
xor
add
xchg
cmp
outsl
pop
notl
ja
scas
add
jg
jg
insb
or
lods
adc
bound
mov
repnz
js
jbe
lods
mov
inc
jg
shrl
mov
sub
xchg
nop
mov
push
lcall
jg
and
fdivrs
idiv
jmp
mov
lcall
scas
sar
arpl
xchg
je
mov
pop
mov
fimuls
dec
iret
or
cmp
jne
repz
pop
loope,pt
scas
ret
je
movsl
lods
xchg
les
xchg
das
fmull
xchg
sbb
mov
pop
aas
ss
push
lret
fcoml
jbe
enter
negb
mov
push
xchg
add
and
popa
dec
adc
cmp
xchg
push
mov
pop
and
adc
dec
mov
enter
lret
dec
mov
mov
imul
leave
lock
fadd
clc
or
ret
sbb
fimuls
out
inc
pop
inc
js
mov
lcall
pop
or
xchg
sbb
or
test
lret
push
pop
jp
xchg
repz
test
addr16
ss
enter
cwtl
pop
lret
mov
test
mov
cmpsl
pop
mov
js
cmp
inc
inc
xchg
int
loopew
mov
mov
mov
push
inc
movb
and
sub
sub
mov
aad
dec
sub
xchg
and
mov
xchg
orb
out
sub
pop
jle
mov
into
test
leave
outsb
xchg
mov
pop
adc
out
push
push
call
shrb
lret
xchg
mov
jno
adc
and
push
fs
imul
nop
xchg
ret
pop
mov
cmp
aas
nop
aaa
mov
adc
and
xchg
jbe
add
fisubrs
test
aam
sahf
jle
inc
push
sbb
mov
fadds
pop
xchg
add
outsb
loopne
add
test
cmp
fstl
and
in
sahf
fs
jo
cmp
sbb
outsl
jge
and
pcmpgtd
mov
inc
adc
daa
dec
shll
adc
ret
ret
jns
sbb
dec
and
cmp
ljmp
push
sbb
sbb
jg
inc
pop
clc
mov
jmp
pop
fs
push
ret
cmpsl
xchg
es
pop
rcr
cmpsl
cmp
cmp
cmp
data16
push
pop
das
test
dec
mov
push
stos
aas
lds
add
pop
push
pop
or
pop
bound
cmpsl
push
test
mov
xor
adc
push
call
mov
aam
movsl
sub
push
add
lock
adc
fadds
add
es
enter
lret
push
fnstcw
mov
sti
lea
lods
stos
jno
sahf
mov
mov
mov
add
xchg
pusha
xor
daa
sub
xlat
test
out
sahf
pop
mov
test
roll
and
jg
sbb
mov
lcall
out
cmc
dec
cmpsl
cwtl
xchg
jl
dec
icebp
push
mov
push
inc
clc
dec
push
int
dec
repnz
aaa
mov
fadds
enter
pop
cwtl
xor
push
bnd
pop
mov
icebp
add
notl
jecxz
lret
pop
iret
fnstcw
cmp
lods
fcomps
mov
mov
lds
xchg
mov
dec
stc
ja
mov
sub
adc
push
jg
add
test
fstp
xor
sbb
shlb
scas
call
xor
pushf
add
xchg
dec
xor
out
adc
add
push
inc
jbe
mov
in
sbb
loope
mov
pop
movsl
cli
loop
outsb
pop
bswap
rolb
lea
test
scas
mov
test
mov
pop
and
or
loopne
outsl
js
rcrb
addl
aam
out
push
jne
fsubr
xor
jl
inc
mov
push
jmp
jne
jle
sbb
dec
add
enter
pop
jge
lods
lret
push
stc
adc
ret
das
mov
cmp
ss
jge
push
clc
cmp
cli
adc
xchg
push
lods
es
test
dec
mov
and
xchg
fmull
in
adc
dec
jle
pop
or
or
fstp
out
mov
sbb
cli
int3
sahf
popa
gs
nop
push
out
mov
test
loopne
fistpl
scas
inc
pushf
icebp
xor
push
lods
cmp
push
xlat
or
push
and
into
ds
cmpsb
aad
outsb
xchg
icebp
aaa
outsl
xor
inc
xchg
xor
idiv
and
out
lods
pop
jnp
leave
imul
sti
gs
sbbb
jno
cmp
outsb
js
inc
ss
and
push
fidivs
add
dec
aad
sbb
mulb
cmpsl
or
mov
sub
or
scas
out
or
xor
test
out
mov
and
leave
xchg
lea
or
pop
xor
add
or
out
push
and
imul
push
xor
mov
nop
mov
scas
rcll
jmp
ljmp
xor
lods
iret
enter
sbb
jno
lods
fnstcw
sub
jle
mov
fidivl
push
adc
cltd
in
pop
mov
jns
shll
test
jo
fists
xchg
fcomps
lea
push
pop
jns
pop
je
lock
mov
sub
mov
xorb
dec
adc
lcall
dec
sbb
scas
mov
sub
dec
sahf
decl
cmp
les
in
jae
xor
xchg
fcmovb
sbb
cmp
mov
jp
cmp
addr16
mov
push
inc
push
add
mov
cmc
jmp
jp
sbb
in
fldln2
lret
fs
stc
jge
fildll
pop
insb
jnp
inc
mov
shll
add
shr
into
leave
xor
mov
aas
jo
daa
xchg
mov
dec
mov
movsb
shlb
out
mov
or
pop
rolb
dec
inc
mov
aaa
hlt
xchg
outsb
mov
hlt
call
jp
jmp
fsubrl
ret
das
and
stc
repnz
lds
hlt
sbb
or
cmpsb
ret
pop
xor
xchg
pop
mov
mov
in
divb
iret
mov
dec
popa
pop
add
jae
std
lret
xor
mov
push
fdivl
mov
mov
lret
sub
pop
push
ficoml
daa
leave
pusha
push
clc
insl
jecxz
sub
mov
in
mov
or
push
or
popf
shrb
pop
xor
adc
cmp
lea
xor
in
je
clc
mov
stos
aam
xchg
mov
sub
daa
lcall
and
rcl
jo
mov
arpl
pop
es
push
loope
lret
sbb
mov
and
clc
mov
mov
cmp
inc
aam
xchg
iret
mov
insl
mov
iret
push
mov
mov
pop
cld
addr16
pop
lds
decb
adc
inc
dec
sahf
loope
or
adc
dec
sbb
mov
or
xchg
sub
pop
cli
repnz
mov
mov
mov
dec
mov
adc
mov
mov
lock
mov
sub
cmp
das
inc
enter
jle
bound
into
sbb
arpl
loopne
dec
test
loope
in
mov
jg
pop
icebp
sahf
xchg
loopne
call
mov
paddd
jbe
adc
mov
ja
in
mov
enter
inc
mov
les
dec
enter
push
aam
cmp
sbb
sbb
jg
cmpsb
mov
stos
jb
loop
jecxz
add
adc
add
inc
jb
push
outsl
jns
outsl
mov
popa
mov
outsl
fidivrs
mov
sub
jecxz
scas
pop
mov
or
jle
mov
xor
iret
mov
aaa
fidivl
and
mov
jge
scas
mov
xlat
mov
jbe
jecxz
repz
arpl
sarl
shrl
mov
in
in
data16
or
push
push
imul
pushf
rorl
pusha
pop
leave
lock
clc
mov
mov
and
push
pop
stc
dec
imul
xor
mov
xchg
loopne
nop
dec
jmp
dec
pop
push
js
xor
cmp
cmpsb
dec
nop
lcall
ss
outsl
xor
movsl
sbb
and
ret
mov
std
fsubrs
push
push
inc
push
inc
jns
mov
xchg
fsubrl
rcll
xchg
xchg
aad
shrb
push
in
je
mov
sub
in
aad
lds
jb
int
push
xor
sub
push
nop
jo
jle
or
cmp
jmp
push
cmp
dec
sub
and
inc
mov
sbb
push
scas
sti
sahf
in
rdpmc
std
jecxz
stos
push
xchg
lret
ss
notl
push
push
mov
test
mov
leave
dec
pop
jmp
test
out
in
pop
add
mov
ror
nop
dec
sub
pop
jg
iret
jmp
sti
lock
jb
cltd
cmpsl
lret
and
and
lcall
sahf
jno
pop
xchg
sub
iret
cwtl
sbb
push
scas
sbb
add
and
mov
test
scas
jo
inc
push
in
dec
icebp
or
sbb
dec
push
cli
pop
mov
mov
or
insl
scas
stos
xorb
data16
mov
aas
clc
in
lahf
mov
jno
sbb
aam
push
lock
dec
xor
add
imul
movsb
fsubrp
fcom
fsubr
xor
push
pop
mov
adc
jno
push
ret
inc
mov
xor
adc
aad
fdivrs
daa
inc
add
sub
dec
fcomps
lret
ljmp
xchg
adc
xchg
call
in
xor
call
lret
mov
fadd
mov
fstp
mov
inc
cmp
outsb
pushf
adc
jp
cmp
push
rcrb
fldenv
test
loopne
lret
jae
js
leave
repz
mov
cs
int3
addr16
adc
fstps
cwtl
add
jb
adc
std
mov
or
test
in
je
hlt
aad
fldcw
out
inc
or
loop
aas
fcomps
fldenv
ds
push
mov
sti
pop
inc
jge
insb
cmc
or
push
xchg
add
loopne
das
dec
push
mov
test
sbb
arpl
cmp
int
ret
add
inc
mov
ljmp
sar
cli
je
pop
jg
xchg
call
mov
ja
ficomps
dec
mov
sub
or
or
mov
jns
imul
fwait
xchg
test
add
and
sbb
sub
out
mov
addr16
jno
jmp
push
and
adc
mov
or
pop
sub
jnp
lods
xor
cwtl
xchg
push
dec
push
inc
and
mov
or
cmpsl
xchg
arpl
xor
int
or
daa
adc
decl
out
test
mov
cmc
filds
sar
xchg
in
and
stos
test
rorl
ds
add
pop
mov
xor
test
test
data16
fcoml
bound
jg
push
cs
mov
lahf
ljmp
std
int3
loop
jbe
adc
cmp
dec
cmc
aas
ljmp
xchg
out
fstl
push
or
push
es
pop
fstpt
xchg
or
cmp
or
test
mov
out
pop
xchg
test
data16
mov
pushl
dec
or
rcrl
dec
add
ret
cmpsb
xchg
cwtl
fcmovnb
pop
or
mov
lcall
ja
xchg
data16
ja
xlat
add
orps
adc
fxch
call
and
push
and
loop
shrb
cmp
mov
gs
xchg
outsb
js
fiaddl
cltd
rcll
xchg
ja
in
ljmp
push
loopne
pop
mov
xchg
mov
fisubl
cs
test
stos
adc
out
inc
lock
pushl
out
sbb
and
sbb
xor
or
mov
mov
data16
insl
and
inc
pop
add
mov
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
mov
or
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
jae
cmp
jae
shrd
movl
shr
ret
xorl
mov
xor
and
movl
shr
ret
xor
xor
ret
push
mov
sub
movl
cmpl
movzwl
mov
movl
jmp
mov
mov
je
pushl
pushl
pushl
push
push
pushl
call
not
or
and
xor
mov
mov
movl
cmpl
movl
mov
mov
mov
jmp
movl
mov
jg
pushl
call
orl
sbb
sub
sbb
adcl
mov
or
mov
movl
cmpl
mov
mov
mov
jmp
not
jb
pushl
pushl
call
adc
xor
or
xor
add
or
sbb
inc
addl
movl
dec
movl
decl
movl
movl
movzbl
or
movl
cmpl
movl
movl
jmp
mov
movl
jge
push
call
adc
mov
mov
sub
and
sbb
subl
mov
or
mov
mov
sbb
mov
mov
sub
mov
push
mov
movl
sbb
mov
andl
mov
xorl
push
orl
push
xorl
push
subl
push
addl
call
xor
mov
cmpl
mov
mov
mov
movzwl
jmp
movl
movl
jg
push
pushl
push
pushl
pushl
call
or
or
adc
addl
xor
add
adc
sbb
mov
xorl
xor
and
cmpl
mov
movl
jmp
movl
movl
jg
push
push
call
sbb
sbbl
sub
notl
xor
add
sbb
xor
xor
add
and
mov
mov
sub
or
and
or
mov
adcl
and
cmpl
mov
mov
mov
jmp
movl
jl
push
pushl
push
pushl
call
add
sbbl
and
or
mov
sub
sbb
movl
mov
or
movl
movl
movl
movl
mov
addl
mov
mov
mov
add
movl
push
adc
push
subl
and
and
push
andl
push
xorl
call
mov
mov
cmp
movl
ja
jb
cmp
jae
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
or
or
add
adc
xor
xor
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
jmp
loope
cwtl
cwtl
mov
push
test
inc
or
xchg
int
push
sub
pop
addl
or
push
dec
push
mov
das
daa
adc
shrl
or
jo
xor
cs
mov
imul
enter
push
xchg
mov
pop
pushf
pushf
mov
xor
fnsave
fwait
test
sub
je
jne,pt
iret
xchg
pop
mov
or
dec
jnp
cmc
jns
xchg
push
xor
loop
ja
cmp
inc
and
mov
mov
pop
rolb
adc
jae
inc
cld
in
mov
dec
mov
fcomps
jo
jae
clc
cld
loop
and
dec
inc
adc
cld
dec
jl
repnz
imul
xor
outsl
test
jl
jecxz
aas
jmp
xor
push
out
or
in
insl
xchg
js
nop
xchg
in
pusha
sub
pop
xchg
and
aaa
fsts
sub
aad
sbb
cli
leave
cmpsb
xor
fdecstp
rcrl
mov
cwtl
mov
cltd
lea
out
inc
push
sub
outsl
rcrl
pop
mov
push
mov
lret
add
imul
lcall
aam
rcr
ljmp
dec
outsl
imul
xor
mov
push
es
mov
aaa
jmp
data16
aaa
shll
dec
mov
xchg
in
in
xor
bound
pop
xchg
lret
imul
cld
cmp
jmp
ret
add
mov
pop
ror
js
mov
push
test
or
cmp
mov
inc
and
aad
pusha
lock
inc
ja
dec
pop
mov
adc
mov
xor
and
mov
shll
jle
push
fistpll
pop
leave
aad
and
aaa
lahf
outsb
fcoml
jp
repz
std
repnz
push
movsb
cmp
aas
mov
cmc
mov
mov
mov
jo
cmp
mov
lret
out
std
pop
xor
pop
sub
jns
sub
dec
test
iret
out
scas
push
fmul
mov
in
or
rcrb
jns
push
dec
push
cwtl
push
mov
mov
push
adc
loope
sub
adc
mov
popa
push
jo,pn
hlt
aad
adc
repnz
mov
fnsave
fildl
testb
or
or
lret
pop
cs
cmp
fdivr
imul
adc
arpl
and
subb
lods
je
add
rorl
loop
insb
jo
push
je
cmp
add
sub
or
lcall
iret
xor
loope
arpl
push
jnp
mov
inc
push
ret
pop
pop
cmp
add
cmp
test
rolb
or
mov
cmp
pop
idivb
pop
sbb
inc
sbb
adc
iret
daa
test
mov
jbe
push
sarl
cwtl
pusha
jbe
xchg
mov
mov
jle
jl
pushf
xchg
sbbl
lods
xchg
and
mov
imul
ret
and
insl
data16
xor
and
xorl
xchg
jae
mov
mov
or
cwtl
adc
cld
cmp
xchg
cmp
xchg
jno
xor
arpl
out
xor
jge
out
mov
inc
out
xor
pop
lock
out
dec
aaa
imul
mov
xor
mov
adc
jns
jge
hlt
pop
aaa
js
cmp
add
sbb
out
mov
xchg
push
push
adc
mov
adc
dec
lds
les
into
insl
jae
movsl
dec
push
and
cmp
xchg
stc
ja
cmp
sahf
in
push
cmp
into
inc
stos
push
dec
out
ds
sbb
hlt
push
or
lahf
cli
mov
inc
les
cwtl
rolb
in
and
sub
jmp
cltd
mov
into
sub
sahf
mov
jo
jno
add
push
sub
test
cmp
hlt
xor
test
fucomip
and
fcoml
mov
mov
or
xchg
data16
lea
jnp
ror
sbb
add
xchg
inc
imul
shl
std
push
push
mov
jb
pop
and
aaa
push
add
xor
jmp
int
mov
or
ljmp
popfw
ret
mov
mov
add
cmpsb
xchg
push
pop
push
jl
mov
lahf
jnp
in
fs
fdiv
out
sub
adc
leave
xor
dec
ret
and
lcall
out
lds
push
dec
fcmovnu
mov
mov
mov
popf
pushf
jecxz
mov
les
add
in
mov
mov
xor
aad
roll
dec
sbb
jle
mov
cs
push
sbb
insb
xchg
iret
jg
add
popa
nop
cmp
imul
mull
dec
inc
dec
jmp
cltd
adc
adc
lcall
ljmp
cld
cmc
pushf
mov
adc
sti
xchg
xor
xchg
cwtl
test
adc
ret
sbb
ljmp
sbb
lods
cs
pusha
sub
adc
jno
pop
sarb
sti
mov
loop
inc
jo
or
adc
out
loop
sub
add
pushf
xchg
inc
dec
mov
fucomi
xchg
insl
pushl
fists
pop
andl
sahf
daa
xchg
rcrl
add
cmp
pop
push
jne
cmp
xchg
mov
mov
add
hlt
lcall
out
icebp
fimull
jo
test
ljmp
jae
pop
push
stos
mov
js
je
test
jge
mov
sub
imull
mov
ss
call
pop
scas
insl
sbb
in
lret
out
decb
arpl
cwtl
out
jle
inc
sbb
push
xchg
dec
rcrb
mov
jecxz
scas
js
gs
xchg
inc
cmp
push
inc
xchg
sub
fldt
push
and
out
add
cmc
cmp
mov
mov
jge
fstpt
aam
icebp
mov
and
insl
push
mov
daa
xchg
xchg
inc
xor
xchg
mov
add
mov
dec
inc
push
cmc
inc
push
fistpl
mov
call
cmpsb
xor
popf
push
fs
push
imul
dec
mov
in
repz
dec
push
scas
imul
push
in
sbb
sub
adc
jge
cwtl
subb
inc
mov
xchg
lret
add
sti
aam
sbb
leave
pop
lock
dec
or
out
lods
jnp
push
popa
loop
and
shlb
lahf
mov
xchg
push
xchg
arpl
lret
mov
dec
movsl
addr16
frstor
cwtd
dec
rclb
lret
mov
mov
test
rorl
adc
or
into
jmp
leave
push
mov
shll
inc
pop
out
add
std
xchg
and
xchg
and
mov
jnp
clc
pop
clc
lods
loope
cwtl
jg
int
mov
pop
ss
mov
scas
mov
and
dec
fidivs
jle
rcl
popa
stos
or
sbb
add
popf
test
mov
jbe
mov
pop
jmp
push
push
jmp
enter
pop
or
popf
jp
mov
xor
int3
sub
jg
sbbl
lods
loopne
in
xchg
sahf
add
push
dec
aad
and
aad
fidivl
out
xor
or
lock
adc
mov
sbb
xor
faddp
fs
cmc
rclb
mov
fs
jg
xchg
imul
sahf
adc
push
fwait
rcrl
lods
cmovl
leave
push
aad
pop
mov
dec
lret
icebp
pop
push
sbb
ret
add
mov
insl
aaa
inc
cmpl
popf
dec
in
jecxz
jbe
mov
cmp
mov
adc
dec
scas
int
jne
mov
mov
jmp
clc
jae
loop
add
pusha
dec
ja
mov
aaa
sub
dec
clc
jp
sub
pop
ss
jecxz
sub
and
jae
adc
jae
mov
scas
mov
sbb
daa
es
aam
pop
aad
imulb
cld
imull
je
test
idivb
pop
sti
fldl
mov
in
inc
loopne
orb
sub
fists
das
cmp
lods
ret
jmp
in
call
je
inc
inc
push
add
add
or
cld
clc
addl
add
jbe
push
and
pop
or
loopne
cmp
jecxz
xchg
mov
cmp
jp
pop
jne
in
push
pop
mov
mov
pop
cli
xchg
cmp
movsb
jne
dec
ja
imulb
data16
sbb
push
cmp
bound
lds
outsl
std
adc
das
out
sbb
mov
and
xchg
sahf
ret
adc
cmpl
les
xchg
pop
xor
cmp
testb
dec
not
sbb
cwtl
mov
insl
cmpsl
pushf
movd
int3
jbe
in
out
cltd
or
sti
movsb
int
pop
stos
pop
outsb
or
stos
jmp
test
stos
test
sarl
and
jle
push
dec
adc
jns
and
pop
das
or
dec
movsb
je
cmp
add
mov
ror
push
mov
jns
pop
mov
loop
js
mov
cmpsb
jle
mov
sbb
pop
les
mov
pop
pop
shll
ficompl
add
push
lea
xchg
xchg
dec
and
es
push
rol
es
rorl
mov
pop
ret
inc
mov
adc
jp
into
xor
mov
jno
inc
jne
dec
add
sub
push
imul
addr16
test
clc
add
sub
fdivl
shrl
into
aam
sub
pop
adc
mov
pop
or
sbb
dec
mov
sbb
sbb
xchg
sti
xor
xchg
mov
fstpl
pop
std
cwtl
pop
sti
adc
je
xor
insb
insb
dec
stc
adc
inc
sbb
and
and
in
fsts
gs
popf
mov
shll
cs
stc
fs
movsl
jmp
je
mov
pop
pushf
rorl
leave
xchg
das
add
adc
test
lret
insb
leave
pop
or
lods
xchg
daa
xchg
push
les
gs
cmpsb
mov
or
push
jo
repz
jmp
out
sub
dec
add
aas
repnz
roll
jno
sbbb
rol
repz
cmpsb
mov
cwtl
test
sub
mov
in
xchg
dec
mov
dec
and
and
test
xchg
sti
cmp
mov
mov
daa
mov
cmp
push
jnp
pop
out
cltd
insb
sbb
cltd
popa
sbb
je
push
aaa
insb
cmp
vmaxsd
aam
push
add
fs
sbb
rcrb
sbb
jecxz
stc
scas
jge
xchg
lods
rep
mov
push
adc
mov
mov
or
sbb
sbb
lcall
aaa
xchg
jecxz
cmpb
sbb
movsb
add
cs
icebp
pop
jg
jns
push
inc
mov
inc
leave
ds
cmp
mov
mov
rcrb
mov
inc
sbb
popa
rorb
xor
cmp
sarl
mov
push
sub
fdivs
adc
cmpsl
adc
popf
fildl
lahf
xchg
and
jbe
xchg
pop
lahf
fdivr
hlt
jg
minps
adc
ds
pusha
push
std
test
pop
repz
inc
mov
in
fwait
jb
push
mov
and
out
iret
out
add
cli
inc
lea
pop
dec
mov
and
and
pop
push
mov
inc
dec
bswap
test
iret
dec
mov
aam
xorl
push
lahf
sub
pop
dec
aad
push
loop
cltd
rcl
ucomiss
adc
cmp
addr16
jp
jne
push
mov
mov
sub
and
mov
hlt
push
add
jl
test
in
mov
and
dec
push
jae
mov
jge
push
lahf
das
lret
dec
sub
sub
dec
dec
loop
mov
in
je
fwait
dec
push
mov
rclb
rorb
lret
pcmpgtd
or
mov
jecxz
and
aam
out
xchg
dec
jo
sub
into
xchg
jge
adc
xchg
mov
fbld
out
adc
push
movsl
jb
mov
mov
xor
inc
stc
js
daa
inc
dec
push
dec
fnsave
loope
das
ljmp
ja
or
push
hlt
and
hlt
cwtl
push
jecxz
mov
and
fmuls
xchg
out
mov
or
loope
dec
nop
dec
cmp
aaa
fsts
fistpl
in
adc
lahf
shrb
pop
and
mov
mov
ss
out
rorb
mov
dec
push
shl
adc
pop
loopne
xchg
ja
clc
add
outsb
insb
cmp
mov
mov
push
dec
scas
fidivrl
bound
adc
imul
fsubp
pop
xchg
shll
movsl
mov
mov
mov
xchg
xor
out
xor
pop
push
ja
jae
push
ljmp
jg
stc
push
out
pop
ficoms
loopne
mov
arpl
inc
shrb
das
xchg
xor
insb
test
in
lret
pop
xor
adc
nop
lea
or
and
xor
push
lods
inc
push
and
lods
mov
sub
stos
test
out
sbb
repnz
and
xchg
mov
fs
mov
jo
js
out
mov
push
cmp
sbb
xchg
inc
arpl
loope
or
jns
jmp
arpl
daa
pusha
inc
lcall
in
xor
mov
outsb
xor
push
dec
or
push
mov
fs
pop
sub
dec
or
cmp
push
cltd
jae
imul
xchg
xor
stc
imulb
jmp
push
fistpl
sbb
pop
dec
pushf
neg
jg
mov
inc
push
fidivs
sbb
fstpt
inc
push
cld
jns
out
sub
fst
int3
mov
xchg
jg
dec
dec
pop
rcll
xchg
xchg
cs
int
mov
sbb
add
and
imul
out
adc
in
xchg
les
in
fcmovu
xor
xor
pop
lcall
lods
xchg
shlb
pop
xorl
xchg
adc
lock
out
mov
daa
shrb
lret
push
je
fwait
lcall
cmp
mov
ljmp
cld
dec
push
arpl
pop
pop
mov
push
divl
jge
test
out
push
fstps
cmp
in
mov
sub
and
mov
std
add
ja
fldcw
repz
jmp
stos
scas
nop
push
add
dec
outsl
pusha
push
stc
movsl
jnp
add
test
out
mov
adc
icebp
dec
pop
rcr
call
xchg
std
lock
xlat
loope
shlb
mov
push
pop
adc
les
or
mov
dec
lods
leave
fmull
adcl
int
mov
jg
hlt
push
pop
push
sbb
and
inc
aam
stos
mov
xchg
push
jns
mov
sub
push
adc
fcmovbe
loopne
jbe
jle
pop
or
xor
sbb
fldt
fcmovnbe
out
xchg
adc
ds
cmpsb
pop
and
cli
stos
cltd
xchg
ret
mov
lcall
lahf
inc
jecxz
repnz
test
mov
mov
in
pop
aaa
lret
lods
test
push
xor
lods
outsb
loope
outsb
ret
ljmp
push
je
cli
insb
test
pop
sbb
sbb
mov
dec
fadds
and
pop
rclb
mov
es
pop
jns
push
adc
loope
cmp
bswap
enter
das
decl
insb
cltd
mov
shll
inc
mov
stc
pop
jge
jecxz
sbb
mov
insb
mov
and
inc
jg
pop
in
jl
repnz
clc
cmc
fdivrs
push
test
mov
mov
out
mov
test
std
xor
mov
sarl
mov
push
inc
stos
jecxz
mov
sbb
fnsave
adc
test
jl
dec
ss
sub
in
inc
loopne
shlb
inc
pop
fstl
pop
sahf
loop
cmp
jl
sub
lods
push
js
adc
popa
inc
adc
lcall
testl
sbb
pop
movsb
out
movaps
mov
pop
out
inc
pop
push
fs
aas
add
push
push
or
mov
mov
jp
xor
push
enter
lods
and
out
inc
add
popa
pop
stos
insb
push
xor
pusha
cmp
mov
pushf
ljmp
std
pop
mov
sahf
jle
pop
in
and
pusha
add
sbb
scas
push
cwtl
jo
push
mov
xor
add
dec
pusha
lods
push
mov
xchg
mov
shrb
aam
mov
pushf
stc
leave
popf
mov
adc
adc
data16
cmp
sub
popf
orb
movl
cmp
insb
imul
arpl
shlb
xchg
jp
loop
or
imul
mov
jp
cs
push
xchg
xor
cli
into
jmp
inc
jb
add
push
xchg
xor
test
pop
les
adc
clc
or
dec
pop
nop
jno
xchg
cli
lods
sub
jbe
lahf
inc
xchg
mov
or
fwait
and
rcll
hlt
push
push
xor
add
jle
pop
stos
inc
popa
sbb
jae
fidivl
mov
stc
aas
aam
pop
push
popa
fldenvs
add
lods
jo
and
jg
les
add
jnp
sub
sarb
insl
lods
fbld
sub
imull
int
pop
inc
scas
and
movsb
push
test
xlat
pop
sbb
jmp
scas
sub
pop
hlt
inc
push
and
mov
push
outsb
xchg
shr
xor
in
vandps
sbb
jae
push
jb
cwtl
lret
and
hlt
jno
adc
adc
mov
scas
cmp
add
mov
and
mov
jae
daa
std
loop
arpl
out
push
xor
in
sub
dec
mov
and
outsb
aaa
mov
mov
call
ljmp
or
fwait
adc
xor
popa
mov
jmp
sbb
ljmp
xor
pop
jo
adc
inc
rcrl
rcr
pushf
dec
adc
scas
ret
or
lret
mov
ret
mov
mov
inc
jbe
mov
dec
xor
add
mov
lcall
mov
cltd
ret
ret
dec
inc
mov
inc
dec
xor
push
scas
xchg
in
mov
roll
cmpsb
mov
popf
inc
push
and
daa
out
rclb
jns
pop
add
sarl
loope
notl
jbe
icebp
and
inc
sbb
in
push
je
test
aaa
adc
mov
scas
popf
add
cwtl
xchg
lds
imul
cwtl
rclb
stos
mov
lahf
jo
jne
pop
mov
shll
daa
lock
test
shlb
jg
lret
inc
cs
push
mov
mov
hlt
mov
mov
or
fstps
mov
in
inc
js
enter
mov
mov
pop
and
jne
cmc
ljmp
xor
cmc
cmp
movsb
push
sub
mov
dec
push
inc
mov
test
lods
sarl
mov
jg
cmpb
aad
mov
aad
sti
lods
nop
sub
cmp
sahf
adc
arpl
jl
xchg
or
cs
ret
mov
add
ret
stc
xor
fildl
stos
mov
sub
into
outsb
sub
lret
call
dec
sbb
cmp
lods
xchg
add
js
cmpsl
sbb
mov
sub
into
orl
arpl
stos
xor
enter
dec
into
loop
rcrb
sbb
adc
mov
adc
test
test
sbb
add
mov
lock
rclb
push
xchg
sahf
sti
cltd
mov
push
or
test
mov
inc
test
ja
add
adc
nop
jno
push
outsl
mov
gs
inc
out
imul
imul
loopne
mov
jge
pop
loopne
push
fwait
sub
jl
sub
ljmp
xor
sub
divl
inc
leave
sbb
dec
cli
cli
mov
push
mov
mov
push
and
mov
xor
and
and
dec
popf
in
mov
repnz
imul
add
jns
mov
dec
xor
pop
lahf
fcmovbe
je
inc
icebp
ret
sbb
test
dec
clc
fisubrl
mov
push
adc
jb
jbe
sub
fiaddl
dec
ljmp
cmp
and
add
push
sub
outsl
lcall
ret
lret
lret
fwait
push
and
decb
jg
jge
faddl
mov
dec
fdiv
out
or
ss
fcomps
cmpsl
jae
push
movsl
mov
ret
xchg
sub
mov
fbld
adc
aad
pop
je
pop
shl
js
cmp
stos
outsb
in
xchg
push
mov
iret
movsl
lret
lahf
fistpl
cmpsl
clc
jg
lcall
scas
pusha
in
incb
add
lret
fwait
jg
sbb
jp
gs
jle
pop
js
mov
jo
xchg
jp
test
or
xlat
out
add
add
adc
add
or
xchg
aas
pop
adc
pop
das
bswap
cmp
psubusb
add
cmp
lock
jge
pop
fcmovne
out
xchg
inc
inc
lret
lds
ret
pusha
xor
jg
fistpl
xchg
inc
fwait
movsb
sbb
push
sub
lret
insl
xor
and
and
jns,pn
test
mov
xchg
push
andb
mov
dec
cmpsb
push
jp
dec
in
rorl
daa
inc
mov
arpl
adc
pusha
mov
mov
push
jp
lods
and
stos
or
pop
bound
adc
lea
pop
int
shll
sub
mov
mov
mov
or
sbb
stc
subb
outsb
cmp
in
xchg
jmp
pop
in
mov
aas
push
mov
add
dec
mov
outsl
cmp
jecxz
xchg
sub
or
or
cli
loope
nop
mov
fsub
jns
lds
pusha
push
cmpsl
mov
arpl
outsb
jle
iret
push
sbb
adc
call
cli
adc
pushf
adc
adc
mov
jnp
and
clc
dec
andl
iret
mov
adc
cmp
je
adc
and
xor
daa
lds
push
in
lods
lods
pop
xchg
cltd
andl
lock
test
outsb
mov
inc
push
aaa
push
cltd
jge
icebp
push
ja
repnz
mov
int3
jbe
std
imul
ljmp
loop
aam
jp
push
or
lahf
mov
push
push
adc
cmpsb
fistpl
lods
pop
and
rorl
jae
xor
insl
mov
ja
and
jo
gs
insl
dec
pop
sbb
std
or
shrl
stos
and
and
jne
ds
ret
shrl
fldenv
and
mov
aaa
pop
jb
outsl
xchg
lock
mull
inc
fcoml
ss
mov
push
dec
mov
adcl
cmc
ljmp
sub
mov
mov
or
aaa
ror
inc
mov
inc
cmpsb
test
mov
add
mov
add
mov
adc
mov
call
jecxz
clc
mov
mov
rcrb
dec
and
sub
cmp
into
adc
faddp
aam
sbb
repnz
dec
loope
and
adc
inc
push
add
xor
cmp
out
jb
lret
ret
aad
int
adc
sti
popl
dec
lahf
call
push
mov
fisttpll
mov
pusha
daa
inc
push
mov
and
hlt
push
xchg
mov
mov
push
push
jmp
mov
xchg
gs
in
mov
push
js
pop
jo
push
fldcw
push
call
mov
add
xchg
cmpsb
push
jle
xor
pop
or
imul
pushf
out
dec
inc
jmp
mov
xchg
aam
lods
imul
xor
movsb
stc
popf
sbb
dec
xchg
fs
cmp
repnz
jle
add
test
pop
mov
daa
pop
sub
fidivrs
xor
stos
sub
cmpsl
push
testl
push
imul
push
and
fcomps
sbb
and
lret
inc
fsubrl
call
clc
push
scas
std
push
mov
mov
sahf
aad
cwtl
notl
sub
cmp
lahf
nop
lret
iret
mov
mov
cmp
outsl
rcr
rorb
fldenv
das
xor
hlt
jl
mov
ret
lret
mov
jns
adc
nop
fidivrl
xchg
adc
sub
cmp
js
xchg
ss
push
mov
mov
push
pop
in
test
insb
gs
arpl
jnp
and
push
mov
nop
pop
pop
mov
sub
out
fnstenv
adc
and
xchg
lock
pop
xchg
inc
jno
xorb
xor
jne
cwtl
inc
pop
xchg
mov
jae
test
mov
or
ror
arpl
mov
xchg
sub
fiaddl
cmpb
roll
pop
xor
mov
xor
dec
jno
adc
xor
cltd
jnp
jle
mov
fldl
iret
mov
xchg
push
or
or
pop
bound
pusha
and
mov
movsb
pop
in
int
or
inc
push
arpl
outsb
out
xchg
mov
jle
fnsave
lods
in
pop
and
rorl
sbb
movsb
imul
loopne
int3
pop
pop
stc
cld
loopne
push
inc
mov
xchg
pop
sub
loop
cmp
pop
shrl
sub
dec
cwtl
push
xor
add
jl
pop
mov
ret
cmp
clc
pop
jle
decl
popf
xchg
fucomi
cltd
fs
pop
jecxz
clc
loop
enter
rorl
mov
ja
add
mov
stc
mov
ljmp
mov
xchg
in
or
cmp
add
and
subb
xchg
dec
add
in
pop
adc
ja
lcall
mov
push
mov
in
mov
jmp
lret
int
pop
stos
xlat
mov
pop
outsl
fbld
mov
sbb
xchg
lahf
mov
cs
cmp
lret
cmp
mov
lods
inc
int3
mov
sub
hlt
mov
shr
adc
dec
fistl
outsb
cmp
repnz
sahf
mov
lods
push
in
push
adc
leave
add
xchg
imul
jbe
pop
add
mov
nop
scas
mov
shrb
into
dec
sbb
imulb
cmpsl
inc
xor
mov
xchg
mull
movsb
sti
fcomp
add
sub
inc
and
or
dec
and
jecxz
popf
pop
pushf
mov
lods
push
xlat
stos
out
or
xchg
pusha
sub
cs
mov
dec
xor
adc
ficoml
in
repz
xchg
hlt
push
sbb
jno
fildll
inc
mov
insl
fisttpl
dec
cmpsb
fcomp
sub
mov
rcll
mov
sti
sub
inc
notl
aam
loope
sub
adc
pop
xor
sti
xchg
push
mov
cmpsl
in
in
xchg
pusha
mov
xchg
mov
outsb
mov
mov
inc
inc
push
cmc
js
push
sbb
frstor
xor
mov
iret
cwtl
adc
testb
xlat
jmp
nop
mov
pop
xchg
fwait
inc
in
fwait
push
push
inc
sbb
cmp
mov
push
pusha
sub
add
sub
dec
out
sbb
inc
shlb
fwait
rcl
sub
mov
adc
jp
int3
and
call
fidivrl
inc
daa
rorb
or
mov
sub
jmp
inc
hlt
sub
sti
les
push
mov
test
mov
dec
xchg
dec
jge
or
lret
push
sbb
das
xlat
ja
xchg
push
rep
cmpsb
icebp
nop
nop
sbb
shl
mov
cmp
es
mov
push
data16
cmp
idivb
xchg
loop
mov
std
xlat
movsl
push
inc
roll
addr16
push
pop
insb
or
mov
xchg
rcr
fstps
insl
movl
ja
pop
cs
ss
jge
jno
dec
sarb
lods
mull
adc
pop
pop
repz
pop
aam
push
outsb
out
popf
mov
cmpsb
add
cmp
int
and
pop
adc
sbb
cmp
or
or
fidivrl
and
das
pop
lods
movsb
repz
dec
iret
adc
push
inc
and
stos
add
mov
fnstsw
xchg
push
or
test
push
xorl
push
loopne
jne
and
mov
and
mov
push
push
push
push
call
push
push
jmp
into
cmc
je
xor
mov
jb
call
or
repz
push
push
lcall
repnz
xor
cmp
and
xchg
shrb
mov
ja
into
mov
mov
jmp
xor
cmp
xchg
shrb
sarl
pop
inc
sbb
shll
in
cmpl
push
mov
pop
and
lahf
enter
cltd
pop
jae
out
inc
jne
addb
sbb
das
outsb
push
fdivs
or
add
pop
jnp
gs
call
mov
mov
add
mov
adc
mov
and
mov
and
mov
cmp
jne
cmp
je
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
xor
shr
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movb
movb
movb
movb
mov
movzbl
mov
movzbl
shl
cltd
idiv
mov
movzbl
movzbl
or
mov
movzbl
cltd
idiv
mov
movzbl
movzbl
cltd
idiv
movzbl
and
mov
movb
movb
mov
mov
add
add
mov
imul
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
xor
mov
mov
add
mov
shrd
xor
shl
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
mov
imul
mov
imul
xor
or
mov
mov
xor
mov
and
sub
xor
xor
add
div
mov
jmp
movl
mov
movl
movl
mov
mov
or
xor
mov
sub
xor
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
imul
sub
imul
xor
add
mov
mov
xor
mov
and
sub
xor
xor
mov
div
mov
sub
mov
add
xor
add
mov
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
incl
push
orl
push
xor
add
mov
sub
push
adc
mov
cmpl
movzbl
movl
mov
movzbl
jmp
movl
movl
jbe
pushl
pushl
call
xor
add
mov
sub
xor
add
inc
movzwl
or
mov
and
sbb
mov
addl
shrd
cmpl
movl
movzbl
jmp
mov
mov
jbe
pushl
call
add
addl
movzwl
sub
inc
movzwl
sbb
shr
mov
mov
xor
mov
or
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
push
call
sub
mov
xor
sub
or
and
xor
or
sbbl
mov
mov
xor
mov
shl
mov
subl
shrd
cmpl
mov
mov
mov
mov
jmp
mov
mov
jne
push
push
pushl
call
mov
mov
sub
imul
subl
mov
and
mov
and
mov
adc
xor
shr
mov
mov
cmpl
mov
mov
jmp
mov
mov
jle
push
push
call
mov
sbb
and
or
neg
adc
add
xor
xor
add
or
cmpl
not
mov
mov
jmp
movl
mov
jg
push
call
mov
and
xor
add
orl
subl
and
sbb
mov
sbb
mov
xor
mov
mov
adc
mov
dec
mov
adc
mov
neg
mov
cmpl
mov
not
movl
jmp
mov
mov
jbe
pushl
call
or
sub
xorl
add
adc
dec
movzwl
sbb
mov
and
mov
xor
mov
andl
shl
sbb
xor
add
shld
mov
xor
mov
shl
adcl
mov
neg
xor
cmpl
mov
mov
movl
mov
jmp
movl
jg
pushl
call
and
or
sbbl
inc
subl
mov
xor
sbbl
xor
movl
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
mov
mov
sub
and
mov
and
mov
xor
adcl
shld
or
shl
cmpl
mov
mov
movl
jmp
mov
movl
jge
push
push
push
push
push
push
push
call
adcl
movzbl
adc
sbb
and
mov
adc
adcl
xor
mov
xor
or
sbb
mov
mov
xorl
xor
movl
cmp
jne
movl
cmp
je
add
mov
mov
cmpl
mov
movzbl
notl
mov
jmp
mov
ja
push
push
pushl
push
push
push
pushl
call
orl
adc
and
orl
xorl
xor
shl
mov
sbbl
xor
addl
shr
or
adc
mov
mov
sub
mov
mov
mov
sub
xor
mov
subl
mov
mov
xor
or
sub
xor
mov
push
and
pop
orl
sub
cmpl
movl
mov
mov
jmp
movl
jg
push
push
push
push
push
call
adc
sbb
xorl
orl
sub
sub
xor
mov
sub
mov
notl
add
subl
mov
addl
lea
not
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
inc
xor
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
movl
mov
xor
mov
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
mov
andl
or
mov
mov
jne
mov
movl
mul
ret
andl
push
cmpl
mov
movl
mov
movl
jmp
movl
movl
jg
push
pushl
pushl
pushl
call
and
sbbl
subl
sbb
andl
sbb
and
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
add
mov
mov
sub
imul
add
xor
div
mov
mov
jmp
movl
movl
movl
movl
mov
mov
or
mov
imul
add
xor
mov
div
mov
mov
xor
sub
mov
mov
mov
xor
sub
mov
sub
mov
add
mov
mov
sub
and
add
xor
mov
div
xor
add
mov
mov
sub
imul
add
div
mov
xor
mov
sub
mov
and
or
sub
xor
mov
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
xor
push
push
call
mov
movzbl
push
call
test
jne
xor
movl
jmp
cmpl
movl
mov
mov
jmp
mov
jne
pushl
pushl
push
push
pushl
call
xor
and
xor
or
sub
or
sbbl
cmpl
movl
mov
mov
jmp
mov
mov
jg
pushl
pushl
call
andl
xor
and
adc
adcl
xor
xor
xor
or
sub
sub
mov
adcl
movl
movl
xor
movl
cmpl
mov
mov
notl
jmp
mov
jl
pushl
push
call
inc
mov
xor
mov
inc
and
sub
movl
mov
mov
adc
movl
add
movl
mov
add
movl
orl
push
add
movl
cmpl
not
notl
jmp
mov
jl
pushl
call
or
xor
xor
adc
andl
mov
cmpl
movl
not
not
movl
jmp
mov
mov
jg
call
xor
subl
orl
sbb
xor
xor
or
or
mov
push
subl
push
push
sbbl
call
xor
mov
mov
push
adcl
push
xorl
push
xorl
push
call
notl
mov
adcl
mov
addl
add
mov
adc
adc
mov
orl
xor
or
mov
adc
xor
mov
adc
movl
add
movl
or
movl
cmpl
movzwl
movl
jmp
movl
je
push
push
push
call
inc
add
mov
xor
adc
add
xor
movl
xor
or
mov
sub
xor
movl
cmpl
movl
mov
jmp
notl
mov
jg
push
push
call
adc
and
sub
sbb
add
sbb
mov
mov
or
push
movl
mov
add
mov
sbbl
push
adcl
push
push
andl
call
sbbl
mov
mov
push
push
xorl
push
andl
push
sbbl
call
mov
sbb
mov
sbbl
xor
mov
xor
mov
and
mov
movl
xor
xor
cmp
jne
movl
cmp
jne
sbb
movl
cmpl
mov
mov
jmp
notl
jb
push
pushl
pushl
push
call
xor
and
add
add
movzwl
add
mov
cmpl
not
mov
movl
movl
jmp
mov
jae
push
push
pushl
push
call
adc
and
mov
sub
sbb
movzbl
or
or
and
movl
movl
mov
cmpl
movl
mov
mov
movl
jmp
movl
movl
jle
push
push
push
call
incl
adc
and
adcl
xor
imul
and
xor
sbbl
mov
div
sub
pushl
cmpl
mov
movl
mov
jmp
mov
movl
jae
pushl
push
call
sbb
movzwl
and
mov
add
xor
mov
mov
or
sbb
addl
xor
xor
adcl
and
xor
subl
pushl
mov
cmpl
mov
mov
jmp
movl
movl
jg
push
call
sbb
sbb
addl
or
or
xor
adc
push
pop
div
cmpl
mov
movl
mov
jmp
movl
movl
jl
pushl
push
pushl
call
and
and
movzwl
sub
not
mov
or
mov
addl
sub
add
imul
subl
and
adcl
xor
pushl
notl
pushl
pushl
andl
pushl
andl
pushl
subl
call
cmpl
mov
mov
jmp
movl
mov
jne
push
pushl
pushl
call
xorl
sub
mov
mov
adc
orl
sub
sbb
xor
movl
movl
xor
or
mov
sub
or
mov
addl
mov
sub
xor
mov
xorl
xor
xor
movl
div
imul
xor
orl
pushl
pushl
call
decl
movl
adc
mov
movl
movl
sub
mov
cmpl
movl
mov
mov
movl
jmp
movl
movl
jb
push
push
push
pushl
push
push
push
pushl
call
add
adc
add
xor
xor
or
mov
sbb
mov
mov
adc
mov
mov
mov
push
push
xor
xor
adcl
push
xorl
push
call
xorl
add
mov
movl
adc
adcl
mov
movl
movl
movl
movl
dec
movl
jne
sbb
mov
not
mov
subl
mov
addl
mov
movl
movl
mov
call
add
lea
or
mov
lea
mov
sub
mov
mov
sub
mov
mov
mov
mov
addl
xor
xor
xor
shl
and
shr
movzbl
add
or
mov
mov
lea
xor
add
xor
mov
mov
mov
mov
sub
or
mov
or
mov
mov
add
shrd
sub
shr
mov
mov
adc
mov
mov
xor
subl
xor
or
xor
mov
push
pushl
lea
push
adcl
shl
addl
call
orl
lea
subl
push
mov
subl
mov
movl
lea
sbbl
push
xorl
mov
orl
lea
mov
orl
mov
sbbl
mov
addl
push
sbbl
call
push
andl
push
pushl
call
add
mov
mov
mov
sub
or
mov
and
mov
sub
mov
movzwl
sbb
shr
xor
or
sub
shl
or
cmpl
movl
movl
movl
jmp
movzwl
movl
jne
pushl
pushl
pushl
pushl
pushl
push
call
xor
xor
xor
mov
add
addl
mov
xor
mov
adc
lea
cmpl
mov
not
movl
jmp
mov
mov
jb
pushl
push
push
call
sbb
mov
xor
or
sub
or
mov
mov
xor
subl
movzwl
add
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
xor
mov
mov
or
mov
shl
xor
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
incl
push
movl
cmpl
movl
mov
mov
jmp
mov
movl
jae
pushl
call
adc
sub
andl
and
mov
and
xor
or
mov
sub
and
movl
adcl
movl
mov
mov
sub
add
mov
cmpl
movl
movl
jmp
mov
mov
jbe
push
call
addl
addl
orl
adcl
mov
xor
subl
div
cmpl
movl
mov
jmp
movl
movl
jle
pushl
push
call
xor
incl
add
and
dec
xorl
sub
cmpl
movl
movzwl
jmp
notl
jbe
push
push
pushl
push
pushl
push
pushl
call
xor
or
adc
sub
mov
mov
sub
mov
sbb
mov
imul
mov
sbbl
xor
and
dec
mov
xor
div
sub
mov
and
mov
movl
movl
movl
movzwl
sbb
mov
mov
xor
or
add
add
xor
xor
orl
imul
mov
adc
mov
mov
and
sub
mov
xor
xor
sub
or
mov
movl
movl
cmpl
mov
mov
mov
jmp
movl
ja
push
pushl
pushl
call
and
mov
add
add
movl
adc
sbb
movl
movl
and
mov
movl
imul
cmpl
mov
not
movl
jmp
mov
jg
call
xor
dec
sbbl
and
and
mov
adc
imul
imul
sbb
mov
andl
and
cmpl
mov
movzbl
mov
movl
jmp
mov
mov
jne
push
push
pushl
push
call
xorl
decl
adcl
adcl
sbbl
or
mov
xor
mov
mov
lea
cmpl
movl
mov
jmp
movl
movl
jg
push
pushl
push
push
pushl
push
call
and
adc
mov
adc
mov
addl
and
and
or
mov
movl
mov
mov
sub
add
movl
movl
mov
movzbl
adc
mov
xor
movzwl
sub
mov
mov
incl
or
cmpl
not
mov
mov
jmp
movl
movl
jle
push
call
xor
or
sbb
mov
xor
inc
orl
addl
negl
mov
or
cmpl
mov
mov
jmp
movl
ja
push
pushl
call
adc
inc
adc
mov
adc
xorl
add
adc
mov
or
cmpl
not
not
mov
movl
jmp
movl
movl
jne
call
mov
xor
sbbl
notl
xor
xor
xor
sbb
subl
add
xor
not
mov
cmpl
not
mov
movl
jmp
movl
jb
push
call
orl
mov
sbb
inc
adcl
movl
sub
movl
movl
mov
add
mov
sub
orl
mov
lea
cmpl
mov
mov
jmp
movl
jne
push
call
inc
mov
sub
orl
movl
adcl
incl
cmpl
mov
mov
notl
jmp
movl
jbe
pushl
push
call
add
xor
add
notl
mov
sub
mov
or
and
sub
mov
mov
adc
mov
movl
movl
not
mov
or
add
imul
mov
imul
notl
xor
cmpl
mov
movl
movzwl
jmp
movl
je
push
pushl
call
and
subl
subl
sub
inc
cmpl
mov
movl
mov
jmp
movzwl
jg
push
push
push
push
call
mov
sub
not
sub
sbb
mov
or
mov
div
cmpl
mov
movl
movl
mov
jmp
movl
jg
pushl
call
xor
mov
or
mov
and
subl
add
and
adc
sub
andl
sub
subl
mov
movl
cmpl
not
mov
mov
jmp
movl
movl
ja
pushl
push
push
call
add
addl
sbbl
adc
not
mov
sbb
mov
sbbl
movl
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
xor
addl
xorl
adc
mov
mov
add
xorl
mov
adc
movl
mov
mov
movl
xor
sbbl
div
movl
imul
inc
add
mov
subl
xor
andl
xor
subl
mov
xorl
div
xor
or
adc
xor
mov
movl
subl
movl
addl
movl
xor
add
xor
xor
sub
xor
mov
xor
mov
sub
shr
sub
cmpl
movl
notl
jmp
notl
movl
jl
pushl
push
pushl
call
xorl
andl
subl
orl
movl
xor
xor
and
mov
mov
imul
mov
orl
and
or
mov
orl
sub
xor
or
add
mov
mov
movl
movl
mov
or
mov
or
cmpl
mov
mov
jmp
mov
jl
pushl
call
or
sub
xor
or
subl
sub
xor
mov
cmpl
movzwl
mov
mov
jmp
movl
movl
jne
pushl
pushl
pushl
push
push
call
or
xor
sub
xor
xor
and
mov
sub
and
xorl
movl
movl
cmpl
movl
movl
jmp
mov
jb
push
pushl
pushl
pushl
pushl
pushl
call
and
orl
andl
sbb
or
movl
movl
xor
movl
sub
movl
xor
movl
mov
xor
add
mov
sub
add
mov
imul
mov
sbb
imul
mov
or
mov
adcl
lea
andl
push
call
mov
xor
add
sub
mov
mov
notl
imul
adc
add
cmpl
mov
movl
not
mov
jmp
movzbl
jl
push
call
mov
add
adcl
movzbl
or
xor
or
xor
orl
and
sub
cmpl
movl
mov
jmp
movl
ja
push
pushl
push
pushl
push
push
call
sbb
or
and
movzwl
sub
mov
mov
adc
mov
addl
xor
andl
mov
xorl
div
xor
mov
mov
sub
add
add
mov
movl
movl
movl
movl
cmpl
mov
not
notl
jmp
not
je
push
push
call
adcl
dec
mov
mov
sub
or
adc
xor
cmpl
mov
movl
jmp
movl
jge
pushl
push
call
sbbl
sub
sbb
mov
mov
sub
and
xor
sbb
addl
movl
movl
movl
xor
movl
adc
movl
movl
movl
or
movl
mov
mov
cmpl
mov
movl
movl
jmp
movl
notl
jl
pushl
call
add
adc
and
adc
and
mov
cmpl
mov
not
mov
jmp
movl
jbe
push
push
push
pushl
call
neg
mov
sub
sub
decl
sbbl
and
neg
sub
sub
imul
mov
sub
lea
mov
xor
mov
mov
sub
mov
movzbl
adc
xor
add
cmpl
mov
not
mov
movl
jmp
mov
je
push
push
call
addl
mov
and
mov
sbb
not
sub
incl
mov
lea
mov
or
and
mov
sub
inc
add
xorl
mov
movl
cmpl
mov
mov
mov
not
jmp
mov
movl
jg
pushl
push
call
mov
sub
mov
movzwl
or
subl
xor
add
adc
movl
mov
mov
sub
sub
movl
movl
mov
mov
mov
sub
or
mov
mov
adcl
xor
xor
sbbl
mov
call
mov
mov
mov
and
mov
xor
xor
orl
mov
sbbl
call
xorl
or
cmpl
movl
movl
jmp
movl
mov
jl
push
pushl
pushl
call
subl
adcl
andl
sbbl
addl
xorl
or
mov
movl
mov
xor
xor
addl
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
andl
push
cmpl
movl
movl
movl
movl
jmp
movl
jle
push
push
push
push
pushl
push
call
subl
orl
subl
andl
subl
sbbl
addl
sub
mov
or
jne
mov
cmpl
mov
mov
movl
mov
jmp
mov
movl
jl
push
push
call
xor
adc
adcl
xor
neg
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
subl
cmpl
je
mov
xor
add
sub
xor
add
mov
mov
mov
pop
pop
pop
leave
ret
cmp
jae
movl
cmp
jae
adcl
shld
movl
shl
ret
mov
xor
orl
and
shl
ret
xor
xor
ret
