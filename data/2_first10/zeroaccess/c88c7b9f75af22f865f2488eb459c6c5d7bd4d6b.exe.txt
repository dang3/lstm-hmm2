push
mov
sub
mov
adc
mov
mov
or
mov
sub
push
movl
mov
mov
mov
sbb
mov
and
mov
orl
mov
mov
add
orl
mov
add
mov
jmp
iret
inc
loopne
push
adc
fmuls
push
pop
js
pi2fd
push
scas
xchg
mov
jmp
xlat
sahf
push
in
mov
adc
ss
data16
mov
dec
inc
movsl
mov
pop
inc
xchg
mov
fdiv
ret
orl
adc
movsb
jge
dec
mov
and
cwtl
clc
pusha
lds
popf
mov
inc
push
mov
cli
imul
loop
push
stos
xor
notb
out
mov
cmp
xor
sub
jae
jp
call
jle
push
push
jl
adc
or
cmp
lret
xor
mov
aam
jne
push
ret
loop
push
adc
mov
fsubs
test
sbb
fndisi(8087
mov
enter
and
sbbb
stos
flds
xchg
xor
xor
jno
mov
test
jo
or
lahf
mov
les
addl
cwtl
push
mov
mov
xchg
test
lods
mov
mov
daa
inc
incb
in
cmc
popa
inc
sbb
dec
and
ss
cmc
or
mov
mov
fwait
add
repz
mov
scas
mov
xorl
loop
push
push
xchg
repz
pop
movl
ss
aas
mov
and
lods
insl
rol
or
pushf
ja
or
xor
adc
les
int3
in
mov
push
cmp
into
add
push
add
sub
jb
ficompl
push
pop
xor
add
dec
xchg
and
fdivs
push
inc
ja
mov
add
and
push
cwtl
mov
test
mov
bound
push
outsb
test
xchg
insb
jno
push
addr16
mov
jmp
in
lods
pushf
and
movsl
in
push
or
pop
shll
cmp
cmc
push
rdpmc
lret
cmc
shr
dec
sbb
sub
icebp
pusha
push
add
mov
repnz
mov
push
stos
fnsetpm(287
repz
and
out
push
cli
xchg
mov
dec
xor
lcall
pop
push
pop
and
and
inc
ljmp
push
inc
xrelease
xchg
pop
dec
mov
adc
hlt
pop
rolb
into
test
jge
and
dec
pop
adcb
xchg
mov
in
stc
dec
cwtl
xchg
sar
pop
sbb
std
pop
push
add
xlat
dec
sbb
idivb
insl
lret
sub
ss
cmp
in
test
adc
pop
fstpl
jae
sti
cmp
movsl
mov
and
cwtl
mov
jl
add
stos
mov
cmp
lret
xorb
stos
jl
in
xor
xlat
out
ret
jmp
sub
cmp
push
imul
push
mov
orl
or
sub
dec
mov
fidivl
das
xchg
nop
xor
outsl
in
mov
aas
jbe
in
daa
cmpsl
repnz
or
mov
insl
popa
ret
jecxz
cmpl
call
xor
fwait
repz
and
jge
jge
orb
repnz
ss
pop
jmp
push
push
rcll
lods
or
leave
lock
mov
shlb
xchg
dec
aaa
call
mov
or
push
lret
jnp
leave
bound
insl
sbb
movsl
pushf
sub
push
rclb
mov
and
fldenv
orl
mov
std
mov
cs
adc
es
ja
mov
push
mov
out
gs
scas
cwtl
inc
cwtl
cli
jo
std
jno
xchg
sbb
repz
lock
jbe
mov
dec
add
jb
push
dec
push
pop
dec
pop
aaa
jne
push
mov
rcrb
mov
imul
fsts
mov
dec
enter
test
xor
lods
push
nop
jmp
cltd
rcll
dec
lods
loop
push
scas
jb
sbb
and
add
jg
rcr
scas
fsubrs
mov
dec
jp
jecxz
mov
xchg
adc
lock
out
call
fdivl
lret
inc
rcrl
pop
ljmp
sarb
pop
dec
iret
sbb
or
xchg
mov
xor
pop
jbe
cmp
push
lret
xorl
jbe
mov
inc
inc
arpl
mov
cmc
and
outsl
shrl
dec
sbb
push
pop
mov
cmp
dec
and
cld
test
test
pop
inc
mov
and
mov
xchg
sub
into
add
or
imul
and
sbb
lret
xchg
mov
popl
ss
adc
inc
cs
scas
jmp
push
xchg
shl
or
ficoms
notb
icebp
sti
pop
jnp
mov
fistpll
scas
pop
pop
or
xchg
in
dec
pop
mov
js
pop
or
arpl
xchg
mov
jns
pop
mov
cmp
jb
mov
push
mov
loope
xchg
dec
gs
pop
out
push
lahf
rorb
sarl
adc
add
aad
jno
inc
push
jbe
sub
loope
ljmp
insl
inc
ret
adc
lahf
test
jnp
cmp
fsubr
iret
in
jp
push
out
mov
mov
pop
pop
jae
mov
cmp
jmp
xor
loop
inc
ret
pop
outsb
es
xchg
stc
jmp
lods
adc
inc
sub
fsubrl
cltd
push
push
inc
daa
jg
fisubs
stos
shrb
dec
movsl
rorb
rol
pushf
sub
aad
adc
mov
sub
enter
imul
pop
cmp
scas
leave
aam
dec
test
xor
lcall
fstps
xchg
data16
andl
pushf
out
fsubr
rcrl
mov
mov
dec
and
cmp
cld
jecxz
jge
test
in
xor
pop
mov
insl
movb
mov
lods
rcrb
mov
orl
sub
imul
cli
inc
push
aaa
dec
jnp
mov
test
fdivl
pop
int3
dec
or
adc
xchg
cmp
cmc
cmp
lahf
js
inc
ljmp
sbb
mov
jnp
or
fistpl
push
out
loop
xchg
push
daa
nop
adc
insb
jmp
insb
xchg
pop
dec
outsb
inc
xor
in
out
pop
movsl
hlt
andl
cmc
ljmp
xorb
das
ljmp
and
clc
mov
jb
lahf
rcrb
stc
fbld
enter
mov
xchg
sbb
mov
pop
dec
xchg
jmp
daa
adcl
and
dec
xchg
dec
in
int3
sub
push
mov
add
call
ret
xchg
inc
scas
xor
dec
ja
dec
cld
push
into
jne
sbb
lods
push
or
mov
stc
cmc
and
pop
in
mov
inc
mov
mov
mov
addl
sub
notl
mov
movl
sbb
add
mov
not
orl
orl
cmpl
movl
mov
jmp
mov
jg
pushl
pushl
call
sbb
sbb
sub
or
orl
lea
adc
mov
or
mov
and
mov
xorl
mov
adc
add
mov
dec
mov
mov
adc
jmp
mov
xor
js
cwtl
js
add
sidtl
stc
mov
mov
sub
cmp
xchg
pop
and
cmp
dec
mov
xor
lea
mov
cld
fisttpl
js
mov
cmpsb
dec
push
and
add
mov
and
ljmp
push
insl
and
fistpll
xchg
rcll
fistps
clc
inc
add
mov
mov
pushf
dec
int
inc
xchg
hlt
mov
ss
jecxz
out
sbb
xchg
mov
xchg
jge
sbb
or
dec
xor
scas
pop
ss
std
sub
adc
fldcw
inc
or
pushf
repz
or
mov
loop
popa
dec
int3
push
mov
pop
aad
jno
inc
ret
xorb
mov
adc
test
sbb
lea
lock
pop
sbb
ja
std
jl
push
lcall
lea
jbe
lret
mov
jp
push
push
pop
sti
out
stc
iret
shl
adc
repnz
cmp
mov
lods
push
in
fsubl
shl
neg
mov
add
scas
sub
insl
add
xor
gs
fs
clc
xchg
pop
mov
mov
pusha
or
mov
test
cli
pop
idivb
jb
stos
or
mov
shll
cmpsl
push
loopne
push
inc
sbb
sub
sti
or
pop
mov
idiv
fs
push
jle
jg
jns
int
lret
jae
sbb
sti
xlat
add
push
xchg
pop
aas
mov
sarl
lods
mull
lea
fsubl
sub
sub
insl
cmp
add
imul
and
xchg
je
outsl
js
nop
inc
xor
mov
and
xlat
in
jb
pop
or
sub
jp
sbb
or
fiadds
pop
jecxz
or
sahf
test
cmp
adc
cmp
mov
pushf
sbb
push
push
icebp
and
out
sub
test
or
daa
gs
sahf
mov
jmp
xchg
mov
mov
incl
and
jg
inc
inc
adc
sbbl
pop
add
xchg
mov
xor
mov
xor
xor
mov
test
add
sti
mov
aaa
cmp
adc
lcall
fidivrl
sbb
jp
dec
in
dec
push
mov
int3
rclb
subb
cmc
inc
sub
cwtl
xchg
leave
jae
cmp
mov
repz
inc
pop
xchg
pop
stos
xchg
lcall
gs
into
out
ret
rol
mov
and
adc
or
sbb
ljmp
mov
xchg
pop
cmp
test
xchg
shll
and
loop
adc
cmc
out
jmp
ds
pop
outsb
cli
jns
push
popa
data16
fsubs
fdivp
stos
es
es
jae
xchg
test
jecxz
pop
sbb
repnz
mov
dec
in
lods
daa
imul
mov
mov
test
imul
ljmp
enter
sub
in
sbb
push
add
fiadds
mov
or
in
push
cltd
orb
scas
add
xchg
shufps
mov
add
lahf
sbb
fistpl
fdivs
pop
sub
and
sub
or
es
sbb
mov
jae
mov
int3
cmp
xchg
mov
ret
sti
in
xor
enter
xor
add
sbb
addb
sub
fs
or
call
cmc
into
repz
dec
lds
dec
iret
pop
adcl
add
enter
xor
jl
fwait
cmp
mov
pop
push
out
hlt
or
mov
dec
jmp
pop
xchg
inc
mov
test
movsl
push
popf
sbb
sub
cmpb
popa
mov
pop
leave
mov
xchg
aas
sub
mov
int3
xor
pop
mov
sbb
cld
packssdw
pop
push
add
xchg
decb
jmp
dec
call
dec
cvtpi2ps
call
cwtl
jnp
ret
cli
or
ds
out
dec
push
clc
inc
jle
insb
dec
cmc
sub
jle
push
jg
jne
mov
push
fisttpl
jmp
jg
adc
dec
lea
jnp
add
mov
mov
out
mov
mov
mov
cmp
inc
lds
pop
into
add
adc
inc
dec
adc
pop
subl
add
testl
subb
ljmp
leave
das
mov
adc
fs
jle
jmp
cwtl
and
lcall
dec
mov
sti
stos
or
in
stos
scas
pop
or
sbb
imul
jb
sbb
scas
mov
test
popa
fs
or
fnstenv
shr
inc
xor
pusha
dec
or
adc
loope
jl
and
xor
daa
push
sbb
cmpb
data16
lds
and
or
cmc
repnz
mov
out
mov
movb
insb
xor
add
inc
dec
icebp
bound
and
push
imul
mov
adc
adc
loop
inc
lcall
jge
and
sahf
mov
xor
inc
fstp
adc
nop
jmp
push
lcall
popf
call
sub
xchg
sub
divb
out
in
push
mov
fadds
scas
loop
clc
fldt
das
sar
aad
mov
inc
pop
int
push
mov
jle
xchg
outsb
les
or
shll
mov
pop
es
clc
sarl
sub
mov
push
psubusw
shrl
cmc
cmpsl
leave
daa
inc
xchg
dec
lods
inc
cmpsl
xchg
ljmp
add
popf
fwait
clc
mov
add
inc
pop
aas
sti
rcrl
adc
decl
movsl
stc
mov
sub
jl
pop
shr
sbbb
xor
popa
lret
pop
mov
imul
jmp
sub
push
and
ljmpw
mov
and
std
mov
rclb
je
popw
sub
push
popa
sub
mov
clc
and
movsl
les
cs
pop
adc
jnp
in
mull
adc
jmp
lea
adc
mov
mov
stos
sub
mov
pushf
sbb
xor
iret
pop
outsb
ret
sbb
pop
loop
adc
jmp
mov
cmc
add
sarb
jecxz
sbb
sub
and
fs
push
sbb
adc
push
lock
lahf
push
in
aaa
jge
inc
jecxz
jle
sbb
ja
adc
es
jns
bound
sub
stos
mov
imul
lods
enter
hlt
adc
add
jmp
jmp
mov
lock
popf
mov
push
testl
lahf
mov
pop
pop
sub
inc
sub
push
addr16
sub
popf
cli
hlt
cmp
movsl
call
or
sub
mov
aaa
push
scas
imull
ss
fs
xchg
call
sub
xor
or
mov
xchg
stos
jmp
decl
sbb
stos
mov
lock
shlb
adc
dec
cmp
adc
sub
push
sub
cmp
fmuls
mov
sub
add
jbe
enter
mov
testb
xchg
pop
decb
in
mov
mov
dec
inc
ss
inc
aam
cli
jb
clc
push
test
mov
xchg
fimuls
mov
popf
jbe
mov
in
dec
and
cld
dec
mov
stc
lds
mov
movsb
inc
into
xchg
pop
inc
movsl
xchg
leave
mov
inc
and
mov
add
mov
jp
jb
jno
sti
shlb
and
scas
sbb
and
popa
nop
jbe
popa
shlb
mov
cmc
xchg
push
shll
dec
jb
push
aaa
sbb
or
pop
jno
mov
dec
jle
pop
test
jnp
ds
jns
ret
enter
mov
dec
pop
xlat
out
push
repz
push
shr
or
pop
icebp
leave
pop
adc
xchg
push
jl
clc
adc
mov
mov
mov
mov
movsl
prefetch
sub
aas
mov
xchg
adcb
iret
jmp
int3
call
xor
push
repz
lea
lea
xchg
movb
movsb
btc
jno
cmpb
lods
xor
or
sahf
scas
adc
das
adc
add
movsl
cmpsl
xchg
and
movsb
and
fwait
arpl
push
fimull
filds
fists
ss
stos
pop
rcr
xor
xchg
mov
iret
sbb
jns
ds
movsl
mov
xor
int
ds
jnp
loope
pop
and
loopne
cltd
je
cmpsl
daa
fldenv
repnz
hlt
dec
hlt
ds
fdiv
adc
dec
pop
cmp
xchg
mov
mov
push
int3
daa
jno
inc
popf
aas
inc
fists
and
xchg
nop
bound
insb
inc
adc
mov
xchg
jo
cmp
mov
sti
pop
jl
mov
mov
push
or
repnz
mov
dec
push
repnz
call
sbb
pop
mov
mov
ss
insl
sub
icebp
and
lods
test
adc
loopne
mov
jge
lock
dec
fistl
push
and
add
mov
mov
add
add
cld
push
xchg
fsubl
mov
stc
fsubrp
adc
add
pcmpgtb
mov
dec
dec
mov
js
xor
repnz
pop
aas
loope
mov
add
cmp
jg
push
dec
mov
lahf
cltd
dec
jb
idivb
sub
aam
dec
scas
movntq
sub
shlb
sbb
fnstsw
roll
loope
aad
in
push
lcall
pop
mov
pop
popa
idivl
mov
jge
inc
pop
mov
sbb
xchg
loope
xchg
and
inc
sbb
test
mov
mov
push
and
negl
xor
sbb
aam
cmp
test
js
ret
out
shlb
inc
imul
adc
mov
xchg
test
dec
fisubl
iret
lcall
push
cltd
in
cmp
or
sub
and
insl
mov
jle
int3
mov
iret
mov
fs
inc
pop
aas
test
sarl
mov
sbb
leave
jg
test
xorb
ffree
test
clc
push
repz
icebp
jbe
jnp
iret
adc
insl
sbbb
out
push
dec
sbb
rcll
and
mov
and
push
mov
inc
loopne
and
inc
sahf
mov
frstor
and
sub
sbb
lock
jecxz
hlt
and
mov
push
ss
packssdw
adc
cwtl
sbb
xchg
insb
movsb
sbb
scas
jbe
and
cli
sbb
cmp
rolb
mov
lock
cli
inc
inc
cld
mov
xor
xchg
cmpsb
mov
add
invd
jg
sbbl
mov
lret
ljmp
fsqrt
aad
xorb
cld
int3
test
setnp
fucomp
push
test
jmp
test
clc
imul
sub
loope
dec
dec
test
xor
mov
sbb
push
xchg
int3
fdivl
inc
hlt
jp
mov
lea
leave
mov
loope
dec
imul
pop
xchg
mov
adc
clc
call
pop
cli
add
add
rcrl
rclb
xor
repnz
cmp
div
call
add
scas
lcall
cmp
scas
mov
adc
clc
scas
push
pop
pop
popf
adc
lret
xchg
pusha
aaa
pushf
push
aam
xchg
and
pushf
xor
cmc
scas
hlt
nop
add
mov
xchg
sbb
ret
adc
adc
movups
xor
addr16
push
jecxz
adc
xchg
cmp
jnp
dec
clc
jge
mov
pop
mov
or
aam
push
insl
mov
dec
lahf
jns
repnz
insl
inc
dec
mov
adc
addl
mov
sub
rorb
push
js
sbb
frstor
in
mov
outsl
je
inc
imul
orb
dec
fs
icebp
sub
arpl
mov
stos
jae
insb
or
add
mov
xchg
insb
mov
test
mov
add
mov
pop
hlt
mov
inc
insb
leave
imull
push
inc
stos
or
into
fwait
scas
aad
xchg
xchg
or
andl
lcall
aaa
pop
cmc
xchg
jp
in
cmpb
sbb
aam
outsb
aad
mov
imul
add
gs
je
jmp
cmp
arpl
inc
pop
jns
jg
sti
sbb
daa
or
xor
les
jno
lahf
xchg
fdivrp
repz
push
xchg
mov
mov
sbb
mov
jl
sub
lret
bound
imull
push
inc
dec
mov
pusha
icebp
pop
shrb
xor
adc
sbb
mov
inc
sbb
iret
jno
cwtl
in
sub
push
jne
mul
int3
sub
or
fs
outsl
jp
popa
fsubrp
push
imul
push
xchg
inc
bound
inc
push
cmp
mov
dec
stos
cmp
scas
test
or
and
inc
lods
add
cwtl
xor
jb
xorb
sbb
and
pop
cmp
add
movl
add
rorb
rolb
add
movl
movl
movl
jmp
movl
not
jg
pushl
push
push
push
pushl
push
pushl
call
sub
xorl
andl
andl
addl
addl
adcl
movzbl
adc
jmp
sti
loopne
stos
dec
or
xor
xlat
hlt
push
ja
js
scas
mov
das
sub
pop
jbe
and
mov
push
lret
mov
xor
mov
jnp
xlat
mov
mov
pop
mov
outsb
pop
imul
inc
cmp
js
jmp
sub
test
movsl
ja
inc
or
lahf
pop
xchg
nop
pop
stc
adc
rorl
movsl
aam
cmp
test
jp
dec
test
and
inc
jo
dec
das
mov
int3
sbb
push
xor
repnz
sar
hlt
cmpsb
push
mov
das
adc
das
fimull
jl
xchg
push
mov
xchg
test
jmp
and
cmp
cltd
ror
ljmp
dec
sbb
xchg
rclb
push
xchg
out
sbb
sub
imul
and
jmp
lods
mov
xlat
data16
hlt
xlat
fnstcw
and
or
out
data16
dec
xor
cmp
or
lret
mov
js
sbb
fmull
dec
fsubrs
xchg
enter
push
outsb
jp
sub
lret
lea
aad
jmp
negb
add
jno
xor
fcomps
jge
in
orb
xor
sub
jmp
inc
cmpsl
inc
cwtl
cmp
xchg
imul
adc
push
or
loopne
add
aas
push
adc
mov
and
popa
hlt
mov
sub
or
cld
dec
xchg
lret
int3
int3
sbb
jp
aaa
cmp
mov
jnp
bound
inc
add
cmp
and
repz
mov
pop
int3
cs
push
out
push
and
mov
adc
sub
cmp
insl
inc
lahf
ljmp
sbb
ret
lds
repz
cs
rcrl
fildll
addl
mov
in
loope
lock
push
mov
mov
arpl
adcb
adc
sub
mov
inc
add
add
mov
and
fists
fwait
into
push
loop
aam
jne
xchg
inc
xchg
inc
push
push
loope
in
test
push
mov
or
pop
scas
orb
cmpl
inc
cmpsl
fldt
gs
add
cmpsl
mov
xchg
ficompl
ds
mov
stc
out
cmp
test
dec
sub
fistpll
in
pop
inc
mov
mov
mov
es
pop
xor
xchg
sti
flds
sar
jb
mov
inc
jp
mov
shll
mov
repnz
cld
enter
xlat
xchg
frstor
lods
add
outsl
es
xchg
mulb
cli
cmp
ret
fimuls
adc
and
std
enter
mov
adc
scas
test
and
mov
dec
and
add
cli
jp
in
adc
dec
xor
mov
xchg
in
lret
push
xchg
inc
mov
pushf
xor
ficoms
inc
pushf
test
pop
xlat
arpl
and
sahf
jl
xorb
cmp
mov
gs
lock
and
test
in
ja,pt
pop
bound
imul
xchg
out
sbb
pop
sarb
outsl
or
mov
push
mov
mov
jl
stos
fsts
dec
stc
scas
adc
sbb
rcrb
dec
dec
push
adc
loope
pop
cmp
ror
or
gs
shrl
cwtl
lods
outsl
jg
aam
pop
mov
sbb
gs
jnp
lcall
xchg
adc
roll
gs
or
adc
jb
std
cmc
sahf
insb
nop
ss
cmp
out
movntq
aad
pop
insl
dec
push
das
jle
ret
lcall
dec
jbe
xor
mov
insb
lea
push
icebp
adcb
enter
movsl
fidivrs
data16
xchg
xadd
adc
pop
sarl
cwtl
loope
lahf
dec
shl
rcrb
xchg
xor
bound
lcall
test
hlt
int3
aam
xor
imul
rorb
sbb
adc
cld
and
leave
xchg
sub
lret
inc
incl
push
addr16
testl
sbb
mov
test
aad
mov
jne
mov
jns
repz
inc
les
or
loop
push
aam
mov
mov
imul
and
sub
jo
xchg
add
or
inc
and
mov
cld
clc
test
orb
outsl
adc
popf
test
out
fsubrp
sbb
pushf
repnz
xor
sbb
mov
shr
or
or
leave
mov
mov
mov
popa
into
orb
enter
dec
lahf
and
sbb
mov
aam
fcompl
and
out
inc
mov
loop
nop
stos
adc
xchg
je
mov
inc
mov
jne
xchg
fistps
jbe
scas
jl
scas
lcall
and
push
xchg
and
loop
insl
mov
dec
pusha
ljmp
add
xchg
scas
aam
sub
mov
in
aad
out
in
std
cmp
and
inc
jmp
cmp
popl
out
lahf
and
test
enter
mov
testl
and
lahf
cltd
pop
xor
testl
pop
xchg
cmp
imul
mov
shll
mov
mov
xor
mov
shll
and
sbb
dec
mov
add
or
fsubrp
out
sub
xchg
enter
movsb
aas
filds
int
add
js
pusha
mov
mov
cmpsb
rcrl
pop
mov
outsl
push
inc
xchg
loop
sub
lea
add
pop
and
shll
xor
int
cmpb
fcomip
push
stos
mov
repz
adc
into
or
nop
dec
in
and
clc
push
push
jo
cli
pop
xchg
mov
in
adc
repnz
jecxz
clc
call
xlat
cmp
test
arpl
mov
mov
inc
dec
std
insb
lcall
into
or
pop
push
mov
sub
mov
pop
cwtl
sub
jle
shlb
cmpl
pop
aad
imul
mov
xchg
rcll
stos
repnz
cli
jns
mov
outsb
xor
sub
repz
and
dec
js
lret
pop
xor
dec
sbb
enter
sbb
outsl
cmp
cld
hlt
sub
or
jns
sbb
mov
or
mov
xchg
add
orb
imul
and
sti
xchg
movsb
lret
pop
add
push
call
adc
dec
iret
fwait
test
sbb
mov
or
movl
movl
sub
movl
movl
and
movl
movl
movl
xor
or
adc
movl
cmpl
movl
mov
jmp
not
jl
push
pushl
pushl
push
call
add
sbbl
add
sbbl
xorl
sbbl
notl
or
movl
addl
movl
movl
movl
mov
or
mov
movl
dec
movl
movl
cmpl
movl
movl
movl
movl
jmp
mov
jge
push
call
movl
orl
orl
add
xorl
xorl
xorl
and
movl
cmpl
movl
mov
jmp
mov
mov
jb
push
pushl
push
push
pushl
push
pushl
push
push
pushl
pushl
call
orl
sbbl
adc
addl
movl
sbbl
movl
add
movl
jmp
and
jnp
sub
mov
xchg
hlt
mov
das
aam
ja
js
mov
jg
stc
enter
adc
sub
pop
das
negl
mov
jg
fdivrs
test
and
push
mov
mov
pop
sub
icebp
test
mov
cld
xlat
loop
aas
xor
push
int3
enter
push
ds
stc
pop
push
fisubs
dec
push
sbb
adc
jl
out
cld
loop
ret
sub
sub
adc
out
test
or
jl
cmp
arpl
lret
sub
rcr
mov
xor
adc
repnz
and
mov
sub
or
aas
cmp
mov
bound
cli
mov
ret
mov
in
lods
xchg
test
inc
cld
mov
xchg
pop
inc
or
xchg
stos
sbb
daa
push
scas
int3
cld
pop
add
sbb
out
push
mov
add
insb
xor
das
xchg
or
into
sub
mov
mov
fnstenv
mov
push
movsl
mov
fistpll
mov
xor
xor
pop
ret
adcl
lret
sbb
test
dec
fs
cs
lret
jg
mov
icebp
mov
sbb
dec
and
outsb
mov
pop
mov
loopne
add
addr16
add
add
data16
fwait
xchg
and
pop
jno
inc
orb
jmp
out
ja
mov
push
add
loopne
xchg
push
adc
scas
add
fbld
testb
sahf
fadds
jae
mov
jle
jno
in
fiadds
cwtl
mov
pop
ja
xchg
aaa
push
decl
fadds
sub
leave
pop
pusha
xor
stc
cmc
in
cltd
fs
ds
push
pop
imulb
cmp
mov
test
loop
jmp
adc
in
dec
dec
or
rcll
jo
test
insl
dec
mov
push
jno
les
cmp
subb
push
ds
xchg
outsl
test
ret
add
loope
mov
or
cmc
cmp
pop
test
or
mov
add
jns
repnz
in
cmp
sub
nop
cmpsb
sti
pop
addb
daa
mov
loop
lock
fwait
jno
xlat
or
inc
push
imul
push
arpl
mov
movsl
xor
sub
fisubrl
cmpsl
dec
xorb
mov
jne,pt
dec
xchg
pushf
cmpsb
jmp
mov
iret
push
cmpsb
mov
cld
inc
test
stc
fwait
cwtl
cmpsl
sbb
add
popa
mov
push
jbe
arpl
pusha
jecxz
aaa
fnstenv
mov
mov
aaa
jmp
movsb
stos
push
in
imul
xchg
mov
call
add
jmp
inc
mov
stc
icebp
div
or
fnstsw
lahf
insb
aas
inc
jmp
mov
push
dec
mov
sarb
jge
out
xchg
xchg
lret
fldl
popa
das
data16
arpl
rcl
lds
inc
xor
push
aad
sbb
xchg
jno
lret
je
ja
add
push
xchg
aas
pop
jb
bound
mov
push
cmp
mov
mull
mov
test
aad
pop
mov
imul
in
jbe
shlb
daa
lds
stos
mov
sahf
push
pop
mov
cltd
xchg
jg
shll
aad
icebp
rclb
cs
loop
cs
adc
sbb
xchg
lcall
loopne
cmp
cmp
pop
movsl
mov
dec
imul
arpl
mov
popf
lahf
fs
out
jnp
sub
mov
rclb
in
in
xchg
inc
je
hlt
in
and
push
mov
clc
xchg
inc
rclb
insb
lcall
jl
insl
sbb
xchg
push
mov
and
xor
or
mov
jne
mov
nop
in
jns
divps
push
jp
sbb
sbb
sbb
popa
pop
nop
loope
sub
jmp
jmp
mov
call
ret
test
dec
loop
cmpl
pop
xchg
adcl
sbb
inc
leave
lcall
or
xchg
pop
in
cmp
mov
pop
arpl
es
mov
mov
add
xlat
ficompl
stc
ja
or
faddl
push
aad
sub
ss
xchg
ja
mov
cld
fs
mov
inc
mov
les
loopne
aad
shr
bound
mov
bound
mul
mov
mov
stos
flds
mov
bound
in
popf
mov
cmp
jnp
pop
pop
add
cwtd
dec
add
jnp
sub
setnp
rorb
xor
mov
aaa
mov
test
jne
xchg
mov
lahf
aam
sbb
je
pop
sbb
fistpll
mov
iret
stos
inc
daa
jp
flds
jmp
push
cmc
cltd
mov
movb
fs
sarb
insb
js
in
xlat
mov
pop
jp
mov
lret
push
push
and
jle
fs
ljmp
loope
movsl
mov
lods
imul
mov
and
and
dec
or
sar
stc
pop
xchg
jmp
push
in
push
or
pop
test
xlat
push
fwait
jae
dec
adc
inc
xlat
ret
es
jns
mov
in
arpl
pop
mov
addr16
test
xchg
pop
arpl
inc
adc
push
xchg
sbb
cmp
movb
nop
mov
jae
adc
rclb
cmp
cmpsb
xchg
insb
inc
subb
cmp
arpl
sub
pop
jo
lock
pop
leave
add
or
movsb
xor
cmp
mov
addr16
rclb
ret
aam
jbe
pop
cli
jl
jns
dec
cmp
scas
sbb
mov
dec
popa
lret
outsl
inc
inc
cmp
jne
outsl
sbb
call
mov
mov
mov
xchg
andnps
and
andl
call
insb
in
or
lds
cmp
rcl
stos
xor
lret
sub
pop
mov
sbb
pusha
sbb
out
fsubl
call
enter
scas
mov
mov
loope
pop
cmp
xchg
dec
sar
pop
dec
cmpl
jb
mov
sub
jge
add
or
inc
inc
or
and
sbbl
hlt
mov
daa
xchg
ds
ficoml
lcall
xor
hlt
jno
xchg
xchg
repz
je
ljmp
adcl
lock
cltd
sub
cmp
adc
dec
stc
xor
lea
add
adc
add
loop
ss
daa
inc
aam
int
fildll
push
div
sub
imul
das
sbb
dec
std
inc
loopne
lods
sub
inc
aam
push
add
inc
movl
xorl
movl
mov
xor
movl
not
movl
mov
addl
jmp
in
outsl
dec
gs
notb
inc
test
cmpsl
les
ja
and
cmp
insl
inc
jle
mov
jne
shll
pop
push
xor
popf
jnp
sub
jmp
xchg
out
jg
xchg
xchg
cmc
or
push
adc
cwtl
mov
shrl
andl
pop
dec
cs
lods
and
cmpsb
mov
pop
movsl
out
or
push
and
mov
outsb
pop
sub
pop
in
xchg
xor
lahf
leave
rcll
leave
xchg
mov
stc
pop
mov
xor
mov
imul
imul
ja
and
mov
xor
out
cmp
lcall
cmpsl
mov
sub
xor
pop
dec
dec
in
fidivrl
mov
push
fisttpl
das
jo
jbe
cmc
and
ja
and
adc
jl
gs
mov
jecxz
sub
jbe
enter
les
cmpb
iret
push
add
dec
fwait
insb
cmpsb
jns
add
dec
mov
es
aam
inc
jp
jo
stos
leave
pusha
pop
repnz
mov
fwait
mov
popf
adc
sbb
cltd
sahf
ss
cs
xchg
push
fistpl
out
and
xlat
shrb
imul
pop
dec
mov
or
mov
ljmp
push
cmp
mov
mov
xor
fidivl
mov
vfrczsd
jae
inc
int
shll
jp
push
pop
adc
push
imul
inc
or
aas
ljmp
jae
lods
mov
rorb
stos
inc
inc
pop
pop
xchg
fnstenv
add
or
inc
push
fwait
mov
adc
push
xchg
xor
fildl
out
pop
roll
mov
and
hlt
mov
mov
gs
sub
outsl
repnz
ss
mov
daa
sub
flds
shll
mov
dec
fsts
add
xor
lds
pop
sbb
lret
sbb
je
lret
lds
mov
inc
bound
test
xor
repnz
es
repnz
adc
xor
flds
add
xchg
pusha
into
xchg
es
enter
pop
jp
pop
add
adc
gs
adc
add
sub
xchg
dec
sbb
notb
outsb
xlat
aas
mov
lods
jbe
add
ret
stos
adc
mov
dec
cmp
movb
rcrb
or
cmp
cmp
lahf
cmp
test
adc
jbe
pop
or
inc
orl
push
adc
shrb
fdivl
xchg
inc
mov
int
sti
sahf
int3
ficoml
dec
add
jecxz
jg
lods
sub
cmp
adc
cs
dec
ret
push
or
jne
mov
push
xchg
push
cmc
sub
xchg
fimull
mov
jo
dec
sub
push
addr16
ficomps
pop
sbbb
pop
pop
sarl
andb
sbb
mov
dec
frstor
inc
jp
lods
and
push
fstpt
cltd
shrl
mov
cld
and
out
mov
add
xchg
push
push
into
pop
mov
sub
mov
into
out
idivb
push
aas
jle
push
add
xchg
dec
fcomps
shlb
outsb
std
and
mov
idivl
xor
jg
cmpb
iret
xchg
div
mov
in
ffreep
jg
shll
push
ret
leave
cmp
and
cmp
inc
xor
stc
and
adc
sbb
movsb
mov
jno
je
sub
inc
cltd
push
push
push
addr16
mov
mov
xchg
int
cmp
ds
dec
lds
cmp
lods
adc
cli
rorl
mov
pushf
popa
and
adc
lret
sub
jge
push
cmp
arpl
xchg
das
imul
mov
fwait
dec
test
adc
sub
pusha
adc
mov
cmp
xor
push
mov
add
push
pop
in
shrw
sub
aad
sbb
add
sti
cs
xchg
mov
dec
sbb
fists
popa
nop
idivb
and
or
and
push
or
push
cmc
push
mov
into
mov
iret
icebp
mov
arpl
pop
ss
mov
fisubs
out
shll
testl
std
push
movsb
nop
movsb
pop
popa
inc
lock
cwtl
adc
stc
jo
aam
push
mov
cli
pop
pusha
sbb
pop
inc
bound
dec
sub
or
pop
jb
cmp
lcall
imul
out
push
or
jne
out
sub
xor
out
imul
mov
leave
push
aaa
sbb
push
lea
test
push
insb
pop
mov
enter
lea
cwtl
ret
inc
test
insl
dec
mov
dec
pop
pusha
lret
jns
sub
add
ror
repz
aaa
pusha
sbb
pop
xor
nop
pop
daa
pop
lret
adc
rclb
lcall
and
xor
sub
in
mov
loop
and
xchg
mov
dec
mov
out
shl
push
notb
into
cmpsl
test
fwait
dec
mov
sbb
mov
jae
inc
lea
add
jmp
xlat
sub
popa
xchg
sbb
test
rorb
xor
pop
test
hlt
cmp
nop
xchg
mov
daa
mov
mov
clc
sub
mov
fistpll
aas
push
push
or
sbb
jo
sbb
add
xor
mov
inc
mov
subb
cmp
je
push
cmp
bound
cmp
pop
in
lea
push
lock
outsl
stos
push
int
inc
stc
sti
cltd
insl
dec
lods
stos
jnp
jnp
enter
imul
inc
xchg
adc
cmp
push
clc
ret
push
sbb
mov
xchg
inc
repz
xchg
pop
cwtl
cli
adcl
sahf
push
mov
nop
mov
mov
aam
in
lea
loop
rorl
or
aas
insl
sbb
out
dec
nop
or
lcall
cmpsb
dec
xor
call
pop
dec
mov
clc
add
fucomi
lods
iret
mov
mov
ja
in
bnd
xchg
sbb
mov
in
push
orl
adc
ficoms
xor
out
and
and
ret
jae
hlt
dec
aaa
xchg
jmp
sub
pop
sbb
or
sti
data16
mov
imul
rorl
cmp
inc
cmc
sub
outsb
outsl
cltd
pop
out
insb
nop
imul
xchg
mov
dec
pop
lahf
loopne
xor
in
xor
loope
mov
orl
push
adcl
push
andl
push
push
adcl
call
adc
mov
subl
mov
xor
mov
sub
mov
movl
jmp
mov
daa
xchg
gs
or
mov
mov
ja
mov
scas
cmpsb
cwtl
and
mov
xor
dec
push
mov
inc
jb
mov
or
test
add
cmp
out
mov
xor
lods
movl
sub
dec
cmp
les
dec
int
sbb
mov
addr16
xor
movsl
xor
sbb
lods
out
push
mov
pop
das
and
xlat
shl
je
pcmpgtd
and
ja
adc
aaa
fbld
les
dec
pop
pushl
lcall
push
pop
lods
xor
and
imulb
outsb
out
xchg
mov
aaa
mov
mov
mov
and
adc
addb
cmpl
inc
push
test
mov
je
insb
mov
jo
fcomps
pop
and
stos
int
inc
arpl
sub
cmpsl
aad
jl
cltd
sub
popf
cmpsb
pop
pop
clc
mov
flds
mov
inc
mov
scas
loope
lea
punpckhbw
jg
push
jle
testb
sbb
cmp
jae
movsl
and
xchg
fidivrs
jbe
popf
mov
in
hlt
push
hlt
pop
mov
mov
adc
std
sub
push
cmp
mov
movsl
push
add
ss
movsb
cmp
pusha
cmp
inc
mov
push
out
or
leave
push
cmp
mov
xchg
loopne
imul
out
out
adc
or
inc
fistpl
out
push
subb
adc
addr16
and
imull
sub
dec
xor
dec
jbe
inc
inc
mov
mov
xchg
and
adc
divb
pop
jae
push
nop
aad
jg
inc
or
cmpsl
pop
or
pop
outsl
out
push
or
out
cmpsb
jnp
ficompl
ss
mov
repnz
push
loopne
sub
and
ja
fwait
or
or
mov
je
sub
ljmp
daa
cmp
shlb
ljmp
sub
sbb
lahf
mov
testb
push
push
jp
xchg
cmpsb
insl
push
xor
jge
xchg
inc
adc
sub
adc
in
stos
nop
or
mov
addb
dec
or
or
xchg
xchg
imul
or
fdivrl
mov
mov
je
or
xor
jmp
test
jne
xchg
xor
jmp
shl
aam
adc
mov
cmp
insl
cmp
sar
xchg
imul
inc
insb
dec
orb
lock
fwait
jmp
pop
or
scas
push
cmp
ffree
lret
pop
fwait
push
xor
jmp
mov
movsl
addr16
cmc
int3
sbbb
fisubrs
or
cld
stos
dec
loopne
jl
mov
add
pop
outsb
push
and
movsl
sub
addr16
lods
repnz
mov
cld
xchg
clc
jl
enter
cwtl
pusha
ss
fisubrs
fistl
in
sbb
mov
xchg
aaa
push
xor
pop
inc
popa
xchg
outsb
or
dec
push
adc
cltd
xchg
iret
jle
out
icebp
shlb
orb
push
and
lods
pop
hlt
or
or
fisubs
es
jge
sarl
scas
addr16
inc
in
mov
fxam
fcoms
stc
lret
mov
aad
adc
jno
sar
mov
enter
mov
ja
jge
pop
pop
pusha
fucom
add
mov
add
outsl
call
push
fldt
lods
cmpsb
scas
cmp
push
or
repnz
mulb
push
js
rcrb
mov
bound
je
or
pop
jb
push
mov
mov
lea
daa
outsl
ret
sub
fidivrs
lock
in
dec
imul
in
push
stc
mov
test
jl
pop
dec
jbe
pop
jge
pop
repz
cmp
addb
push
inc
jmp
cli
adc
iret
mov
sbb
fs
gs
movsl
push
pop
ret
mov
jo
jnp
jns
mov
add
fmuls
shll
arpl
stc
iret
sub
or
cltd
aas
cmp
inc
in
push
mov
movsl
mov
cmp
sar
jns
push
outsb
mov
iret
inc
jp
inc
loopne
pop
cmc
xchg
movsl
ret
clc
enter
or
ljmp
test
pop
xor
pushf
xchg
xor
jno
dec
add
pop
adc
loopne
or
orl
xor
arpl
pop
push
jbe
and
aam
popa
cwtl
aaa
inc
cmpsb
jns
lret
roll
cmpsl
cs
adc
dec
fcoms
aaa
pop
sbb
out
cmp
lea
pop
imul
sbb
mov
adc
mov
jg
fstpt
in
mov
mov
enter
and
fldcw
fistpll
adc
sti
stos
leave
xchg
enter
push
js
xlat
int
insl
jge,pt
dec
adc
xchg
adc
xchg
dec
mov
movl
sqrtps
jb
jmp
push
cmp
xchg
jae
cmc
pop
or
int
adc
stc
pop
fldt
jmp
cmpsl
sub
mov
pop
pop
popf
add
mov
leave
sarb
xchg
pop
push
mov
lret
je
test
into
stc
daa
add
in
mov
push
je
sub
out
mov
push
push
cmpsl
test
loop
push
roll
jp
jmp
mov
and
push
fisttpll
enter
push
stc
mov
lret
out
outsl
cwtl
jae
std
pop
cmpsb
aad
dec
and
mov
imul
scas
sahf
loop,pn
mov
jmp
js
push
ret
jno
fiaddl
fcomi
idivl
fsubrl
push
mov
sbbl
pop
cmpl
mov
mov
enter
push
shrb
ret
push
imul
inc
popa
mov
jb
cmc
xchg
scas
jp
test
subl
sbb
dec
cmp
jne
aad
push
push
loopne
fcom
inc
mov
add
int3
sbbl
mov
mov
clc
mov
mov
jmp
push
inc
lds
aaa
sub
push
inc
sub
in
inc
pop
push
cld
in
inc
je
push
cli
and
lret
inc
scas
test
cmpsl
xchg
test
subb
mov
sbb
jl
adc
mov
jbe
test
daa
xchg
scas
push
daa
mov
subb
div
jno
fst
ds
decl
inc
xor
pop
aad
mov
sbb
sub
subb
fiaddl
dec
repnz
cmp
stos
mov
fs
incb
and
xchg
int3
bound
sar
movsb
std
jns
add
add
or
lods
jb
arpl
push
shl
push
mov
mov
lret
and
sub
push
pop
xchg
cmp
mov
and
stos
inc
les
addr16
fcompl
sub
sub
mov
adcl
lea
mov
mov
or
subl
and
mov
or
adcl
xor
movl
cmp
movl
jne
mov
and
mov
shrd
adcl
shr
adc
mov
mov
orl
shl
xor
andl
jmp
sub
sub
sub
adc
xchg
int
cs
mov
add
push
mov
xchg
adc
hlt
mov
clc
fldt
push
pop
mov
mov
enter
mov
inc
popf
data16
shl
and
je
jle
cmp
jg
test
fisttpl
xchg
jle
inc
dec
mov
jmp
lret
mov
stos
clc
cli
fsubl
xacquire
cmpsl
jnp
push
inc
loop
cmpsl
test
inc
add
cmp
fstpt
push
pop
mov
push
sub
add
addl
adc
push
sbb
jmp
aam
out
inc
add
fsubr
fldenv
push
pop
cmpsb
sbb
dec
sub
ds
xor
ret
mov
inc
ss
mov
sahf
int3
jl
ret
and
mov
mov
mov
mov
jg
mov
je
mov
addb
xor
push
pushaw
loopne
cld
push
push
lods
sbbl
push
or
mov
push
adc
xorb
jmp
fidivrs
daa
mov
fists
pop
fs
pop
lret
out
into
mov
out
jns
lea
repnz
pop
dec
pusha
leave
dec
push
pop
popf
push
mov
dec
add
std
stos
jle
and
lahf
mov
jge
jg
cmpsl
sahf
sbb
daa
ds
mov
ficoml
adc
rcrl
mov
loope
xor
popf
in
mov
cli
rolb
adc
aas
out
jge
and
shrl
or
lds
pop
mov
and
gs
dec
ljmp
pop
inc
jae
inc
sbb
ret
add
adc
sub
xchg
fs
sbb
outsb
pop
addl
pushf
cmp
mov
add
push
das
sub
push
push
jp
jg
cmp
dec
std
xor
stos
aam
imul
inc
xchg
test
sbb
notb
push
push
test
xor
mov
les
pop
in
pop
xchg
pop
push
dec
mov
cmpl
lahf
mov
dec
lods
out
daa
clc
xchg
movsb
sbb
sbb
in
pushf
inc
nop
lahf
push
pusha
mov
outsb
adc
enter
pop
push
jmp
adcb
out
dec
inc
or
pop
mov
push
push
xchg
sbb
jecxz
mov
imul
add
das
jnp
add
lret
inc
add
dec
xchg
in
scas
fdivrl
or
pop
sub
mov
sub
pop
repnz
dec
scas
sub
stos
add
inc
or
incl
fs
pop
daa
jbe
jg
xchg
ds
xchg
pop
loop
cli
dec
jo
pop
and
out
mov
imull
fs
mov
add
jle
adc
out
in
sub
pop
pop
rorb
push
sbb
imull
scas
add
daa
adc
fldl
std
xchg
add
sbb
add
daa
movups
fcomps
push
jl
imul
mov
inc
inc
pop
add
adc
adc
cmp
ret
loop
out
movsb
jle
adc
pop
dec
roll
cmp
xchg
mov
lahf
inc
dec
sub
jae
repnz
in
and
adc
add
out
sbb
xor
jg
adc
roll
sbb
cmp
movsl
sub
jmp
ficoml
or
jp
loopne
ds
or
xlat
dec
mov
inc
jne
js
mov
pop
mul
or
aad
cld
cs
cmc
aad
cmp
nop
jl
out
fs
cmp
pop
sahf
lock
popf
pop
das
icebp
jmp
pop
pusha
call
orb
xchg
pop
sahf
mov
xchg
stos
xchg
out
sub
push
cltd
cmpsl
nop
sbb
xor
pusha
and
xchg
xchg
rorl
xchg
xchg
cli
cs
aaa
adc
loop
and
mov
jg
xor
sbb
sbb
pop
xor
xlat
fisttps
pushf
lret
pushf
jmp
mov
xchg
dec
pop
lds
fidivrs
inc
gs
cmpl
add
mov
jl
cmpsb
cmp
mov
pmaxub
in
outsl
in
push
stos
pushf
add
rol
adc
mov
addr16
subb
faddl
icebp
and
sub
mov
xchg
imull
imul
xor
push
out
rcrl
xchg
mov
dec
shlb
cld
jnp
xchg
mov
fistpll
gs
fucomip
mov
idivb
mov
scas
xchg
fsubr
test
mov
jge
xchg
push
imul
push
test
mov
jo
ja
xor
movsl
mov
fbstp
scas
jmp
stos
pop
stc
mov
sub
mov
ljmp
scas
mov
test
mov
jle
in
daa
or
out
shrl
test
pop
add
push
sbb
addr16
push
out
jb
mov
fcoms
sub
fmull
fmuls
test
push
fnstcw
add
xor
pop
pop
btc
push
in
pop
rcl
lea
add
inc
insb
jge
pop
jl
ret
test
mov
push
jnp
bound
push
cltd
jg
aad
or
xor
int3
mov
js
imul
xchg
js
adc
outsl
xchg
scas
bound
xchg
sahf
insb
mov
lock
sub
jge
adc
dec
in
or
sub
enter
mov
inc
cmpsl
jbe
shlb
add
add
add
inc
addb
xor
adcb
ss
orl
mov
sbb
add
mov
sbb
jge
cld
mov
inc
popa
xlat
xchg
sti
movsl
icebp
xor
sbb
mov
movsb
in
add
push
lahf
mov
rcll
xchg
icebp
or
mov
push
pop
lock
adc
icebp
add
mov
jbe
pusha
je
jge
push
jmp
cltd
ret
and
lret
dec
cld
adc
sub
shrb
in
out
iret
aas
psrad
insl
add
push
cmp
dec
outsb
pop
mov
flds
pop
jae
mov
pop
push
adc
scas
mov
cs
dec
xchg
xchg
mov
cmp
dec
in
mov
jns
xor
sub
testb
repnz
mov
add
insb
dec
test
fbstp
fldenv
dec
push
pop
sbb
je
cmp
jmp
or
dec
fisubl
or
repnz
pop
pop
inc
and
pop
imul
inc
mov
fwait
int
sbb
lds
cmp
cmp
scas
dec
in
sub
jnp
int
inc
ljmp
jmp
xor
je
leave
sub
sub
mov
push
cmp
or
fwait
popf
push
fwait
and
mov
or
lret
pop
insl
jmp
rorl
inc
inc
add
add
cmp
jne
notl
mov
mov
xor
cmpl
mov
movl
mov
jmp
mov
movl
jl
push
call
xor
or
movl
movzbl
xor
and
mov
xor
mov
xorl
mov
jmp
daa
mov
or
lea
ja
pusha
cltd
pop
xlat
cmp
or
lahf
aam
or
sbbb
fisttps
dec
sbb
jg
jle
inc
es
int
jl
jae
and
mov
add
out
sub
or
dec
sbbb
mov
test
je
stos
mov
loopne
in
stos
dec
inc
sub
in
ss
push
mov
roll
lock
cld
sub
cli
sbb
jb
repz
pop
push
jb
nop
sarb
aaa
push
fdivl
add
addb
mov
sbb
mov
xor
leave
sbb
xor
mov
cld
in
and
push
adc
out
push
ret
jae
add
imul
add
xchg
scas
adc
push
sub
aam
xor
loop
addr16
xor
dec
xchg
jne
or
inc
mov
adc
adc
and
push
mov
inc
cmp
pop
mov
pop
sub
sub
sub
push
mov
mov
stc
and
mov
repnz
lods
xlat
mov
cmpsl
or
fsubs
mov
and
or
enter
loope
push
sahf
test
repnz
xchg
es
dec
push
bound
data16
jl
cmc
int3
lahf
int
and
mov
jg
adc
stos
lcall
stos
lods
insl
lret
scas
add
cmp
mov
loope
inc
and
mov
repz
pop
mov
cmp
cwtl
test
loope
pop
lahf
sbb
rol
shlb
jbe
add
arpl
sbb
mov
adc
mov
nop
aad
lods
daa
cmc
cltd
aas
dec
mov
jbe
push
ss
pop
lret
dec
jle
in
mov
loop
lahf
in
mov
cwtl
ret
inc
test
int3
outsl
sbb
inc
mov
and
loop
sbb
dec
int
gs
mov
or
aaa
out
and
out
jecxz
rolb
or
cli
movsl
push
nop
nop
or
dec
inc
call
push
xchg
pop
lods
popa
test
lcall
inc
jns
in
ljmp
push
dec
and
mov
dec
dec
sti
push
adc
and
call
in
sahf
mov
ja
mov
loopne
outsl
inc
shll
movsb
in
jle
pop
add
cmp
inc
daa
icebp
fwait
push
movsl
mov
pop
add
testl
mov
hlt
mov
add
fildl
pop
popa
push
ret
shll
add
mov
lret
iret
add
dec
cmc
rcr
add
pop
xchg
subb
xor
outsl
std
pop
les
orl
clc
dec
adc
repnz
xchg
mov
add
mov
inc
xor
std
and
or
je
add
faddp
lahf
loope
xchg
xor
in
lret
push
dec
push
movsb
xchg
enter
xchg
lock
push
inc
stos
ret
je
pop
add
sbb
jl
dec
ljmp
push
adc
mov
push
jg
pop
inc
fs
cmp
shlb
mov
arpl
cmp
pop
mov
push
in
xchg
mov
bnd
pop
jae
ja
notl
sub
add
jo
adcl
sbb
pop
in
dec
lcall
shll
aam
cmp
inc
xchg
mov
sbb
jne
xchg
pop
jge
loop
jge
and
inc
jae
faddl
pop
pop
nop
pop
in
outsl
les
sahf
ficoms
enter
iret
loop
cltd
inc
adc
mov
lds
imulb
jp
mov
lret
or
xor
sub
pop
or
sbb
insb
dec
jmp
adc
or
mov
lea
movsl
lods
into
inc
add
push
dec
pop
sti
icebp
mov
jns
adc
pop
add
ja
mov
jge
mov
jle
mov
test
cs
cwtl
shl
sub
in
lea
pop
cmc
cwtl
pop
mov
mov
jbe
jno
fmul
or
ss
arpl
popa
xchg
pop
push
jmp
scas
and
js
pop
lahf
cs
cmp
sub
shll
push
mov
push
lret
rorb
test
jb
cmp
add
pop
push
dec
aam
xlat
and
arpl
sbb
das
mov
jae
add
repnz
sbb
push
push
popf
movsb
push
jns
cmpsl
movsb
or
das
cmp
pop
or
pop
push
gs
push
call
jnp
push
dec
sbb
mov
pop
cltd
inc
push
jl
pushf
clc
in
test
int
ljmp
mov
xor
insb
inc
es
ljmp
shrl
pop
loop
sbb
mov
add
sarl
jnp
pop
adc
add
xor
jmp
ja
xadd
mov
jns
pushf
pop
sbb
mov
cltd
push
aam
dec
push
jmp
imul
push
xchg
push
adc
test
pop
imul
hlt
jmp
int3
fidivrs
mov
mov
jmp
push
imul
cmp
and
and
mov
push
mov
daa
movswl
dec
int
adc
or
sbb
mov
inc
sub
int
xchg
fstp
mov
cmp
mov
rorb
fdivl
aaa
mov
jo
outsl
cmc
mov
neg
and
int
pop
mov
subb
ss
pop
sarb
cmp
mov
sbb
mov
and
fadds
bound
in
inc
cmp
or
aam
cmpsl
loope
sub
and
test
nop
mov
pusha
push
cmp
je
add
adcb
xchg
pop
icebp
jno
in
mov
mov
mov
and
sarl
xorb
dec
into
out
or
andb
loope
push
daa
mov
es
jecxz
cld
mov
insl
and
jecxz
cltd
daa
ds
dec
enter
imul
movl
pushf
sub
imul
iret
leave
jbe
adc
out
enter
leave
cltd
iret
insb
out
add
jmp
inc
sub
cmp
sub
pop
mov
adc
or
mov
fisttps
mov
divb
add
pushl
out
in
mov
sbb
aaa
int
leave
push
mov
add
aaa
dec
hlt
fwait
cmc
fisubl
addr16
rorb
scas
or
setno
or
xchg
adc
mov
jne
je
arpl
pop
stos
add
xor
mov
shrd
andl
mov
cmpl
movl
mov
jmp
movl
movl
jne
push
push
push
push
push
pushl
push
push
call
orl
or
xor
xor
xor
add
adc
adc
sub
add
mov
xor
xorl
shr
xorl
mov
orl
xor
or
movl
shl
cmpl
movzwl
movl
jmp
movl
movl
jle
push
call
not
or
sub
sub
sbb
sub
mov
mov
sub
imul
mov
cmpl
not
movl
jmp
mov
jne
push
pushl
pushl
push
push
call
sbb
adc
neg
subl
adc
mov
mov
not
add
mov
mov
mov
shrd
shr
adcl
mov
mov
xor
add
shl
incl
xor
jmp
jle
jl
dec
mov
push
movb
jbe
xchg
push
mov
mov
sti
mov
dec
push
inc
js
loope
clc
jbe
xchg
notl
mov
push
mov
mov
insb
sbbb
or
jg
xchg
mov
sbb
xchg
jecxz
adc
fists
dec
cwtl
mov
cmc
test
push
xor
mov
cmp
xchg
xchg
movsl
fidivrl
push
xchg
fs
xlat
out
pusha
mov
add
cmp
int3
or
testb
pop
inc
pusha
mov
mov
jp
xchg
jno
lret
or
and
in
xor
loop
mov
fidivs
add
xor
mov
int
adc
cmp
arpl
dec
scas
lods
cmpsb
mov
sbb
sti
jg
jae
cmp
xchg
stos
mov
movsb
mov
cmpsb
imul
sub
mov
cmpsl
pop
lret
fcompl
les
outsl
xchg
addr16
inc
mov
jno
mov
lret
outsb
imul
sub
lods
mov
xchg
iret
ret
fidivrl
outsb
rsqrtps
sub
mov
mov
daa
std
sbb
push
andl
in
out
hlt
out
xchg
cli
mov
mov
inc
add
loope
jecxz
xor
jge
mov
in
stos
inc
mov
repnz
fwait
adc
hlt
sti
in
out
push
stos
inc
and
or
mov
enter
xor
xchg
jmp
sahf
fadd
je
pop
imul
daa
sub
aad
sub
xor
in
add
jb
mov
adc
jl
mov
fisttpll
inc
pop
sahf
jmp
mov
cwtl
adc
adc
dec
xchg
mov
and
mov
cwtl
cld
jno
add
mov
mov
push
ja
popf
mov
insl
in
mov
ljmp
sub
add
je
pop
push
jle
sbb
pop
movsb
pop
cmp
lods
imul
pop
sub
fwait
lcall
jecxz
daa
loopne
push
jnp
push
loop
arpl
or
rol
pop
lea
xlat
imul
sub
push
iret
adc
or
inc
lds
dec
movsl
addr16
mov
lea
xchg
push
jmp
inc
pop
jne
jle
pop
cltd
push
popa
mov
push
fsub
inc
ja
lcall
and
dec
push
stos
and
add
inc
ret
sarb
dec
gs
mov
adc
mov
test
fmull
aad
in
jbe
sub
push
or
pop
cmp
sarb
adc
dec
out
gs
push
adc
cmpsb
adc
cmpsl
mov
sub
and
adc
out
lds
pop
in
mov
xor
push
cmpsb
dec
cs
mov
dec
cmp
or
push
stos
push
ret
enter
je
aad
ss
xchg
sub
test
daa
mov
das
cwtl
inc
push
push
lahf
or
fstpl
pop
mov
sbb
pusha
out
pusha
lcall
and
gs
dec
shrb
xchg
jbe
dec
pop
add
das
pop
stc
dec
mov
push
loopne
sub
test
push
aam
mov
mov
cwtl
cltd
movsb
pusha
fcoms
sti
push
jb
rdtsc
mov
enter
sbb
scas
jne
jmp
sub
scas
xchg
mov
ss
imul
jecxz
xchg
aaa
and
xor
cmp
sbb
ljmp
jne
sub
fs
sub
fwait
rol
sub
sbbb
mov
repnz
xchg
mov
cmpl
pop
movl
test
jecxz
sub
daa
fwait
add
aas
jne
push
stos
sahf
and
shlb
adc
add
mov
xchg
test
sbb
int
les
loop
dec
cmpsb
gs
js
call
shrb
add
cli
movsl
popa
cmpsb
mov
sbb
inc
sbb
xchg
movsb
xor
mov
hlt
xchg
pop
xchg
lods
jle
aaa
add
popa
je
popa
int
sbb
push
xchg
mov
mov
sbb
cmc
pop
xchg
mov
or
repz
loopne
fwait
int3
push
jo
test
repnz
sbbb
jns
dec
test
ret
leave
daa
inc
scas
popf
lods
filds
rcrb
leave
inc
mov
aam
jbe
cltd
inc
xchg
push
push
cmp
into
xor
mov
adc
imul
call
add
es
xorl
mov
and
pop
scas
ret
add
call
mov
fsts
outsb
aad
mov
hlt
mov
jbe
push
cvtpi2ps
xor
cmp
mov
dec
pop
pusha
sub
les
add
ja
ret
inc
rcll
lret
fcmovne
jecxz
cmpsl
es
push
push
out
int3
push
dec
mov
out
loope
pop
or
sarl
xchg
repz
inc
inc
icebp
jnp
or
push
mov
mov
xchg
add
lahf
cltd
fisubrs
sub
or
mov
inc
mov
adc
dec
jb
int
xchg
xor
lods
fdivrs
aaa
push
inc
aas
jge
inc
cli
inc
pop
loope
arpl
insb
push
inc
xor
mov
cmp
rorl
cmp
pop
xchg
outsl
jae
shlb
es
js
sbb
lock
and
in
push
sub
pusha
mov
fwait
addr16
pop
jp
mov
cmpsl
leave
insl
test
xchg
outsb
xchg
gs
xchg
shlb
aam
mov
ss
pop
and
jmp
repnz
or
je
cmc
loop
mov
cli
idivl
es
aam
rcrb
adc
pop
dec
sub
cmp
std
add
mov
or
stos
fcmove
push
mov
mov
xchg
data16
mov
out
jo
sub
lret
push
movsb
mov
dec
cltd
dec
and
xor
jg
pop
mov
lret
xor
inc
xchg
fistps
loope
or
and
loopne
in
sub
inc
aad
je
inc
inc
scas
pop
mov
jnp
insb
fsubl
sub
fdivl
out
in
ljmp
add
pop
sub
pushf
xchg
or
pushf
xor
loop
or
arpl
jmp
aam
movsl
add
nop
pop
cmc
push
vcvtpd2psy
loop
shll
mov
mov
scas
sarb
je
shlb
stc
into
jns
mov
lar
push
and
cmp
push
add
or
fnsave
lcall
loopne
push
into
rcrl
and
mov
out
jne
sahf
popa
xchg
lods
data16
lcall
loop
popl
and
adc
dec
cs
jbe
pop
lods
lods
adc
in
roll
add
mov
jmp
movl
movl
jae
pushl
push
push
call
xor
or
mov
sub
sub
mov
xor
or
sub
xor
and
xor
or
sbb
mov
mov
add
mov
mov
sbb
mov
mov
incl
shrd
subl
shr
adcl
mov
add
mov
cmpl
not
mov
jmp
not
jne
push
push
push
call
mov
sbb
and
andl
and
orl
sub
or
sbb
jmp
pop
and
push
adc
call
push
ja
das
cmpsb
popa
fdivrs
hlt
pop
insl
dec
loope
rep
cwtl
and
lods
daa
dec
add
or
bound
xchg
xor
jle
sbb
fstps
push
mov
frstpm(287
rcrl
inc
pop
addb
pop
pushf
and
outsl
jmp
aaa
fisubrs
push
iret
sbbl
mov
enter
push
enter
mov
outsb
fwait
and
sub
mov
fcmovnu
inc
subl
std
push
add
mov
mov
test
pop
subl
cwtl
pop
sub
int
inc
mov
cmp
jns
adc
mov
sti
sub
push
outsl
sbb
xor
mov
mov
dec
aas
sarl
fcmove
sub
pushf
popa
data16
mov
jbe
ss
ret
das
imul
icebp
loope
jo
jo
fsubrl
xor
pop
addr16
cmp
cs
cld
pushf
xchg
into
aam
sub
mov
sub
shll
dec
push
jmp
xchg
data16
fs
mov
lcall
test
jns
fstl
mov
jne
cwtl
aaa
arpl
xor
sti
cs
add
inc
arpl
mov
cli
loope
pop
push
xchg
incl
je
mov
cmp
inc
and
into
push
popa
add
cmpsl
mov
or
dec
rclb
jb
xor
out
test
iret
fwait
mov
jno
lods
fstpt
lahf
fsubl
testb
mov
mov
mov
test
sub
fstpt
rcrb
mov
es
aas
and
mov
cmpsb
mov
jnp
and
mov
cmp
push
leave
add
dec
movsb
sub
mov
adc
and
pop
je
faddl
sub
js
mov
xor
push
mov
fsubr
idivl
pushl
sbb
gs
fwait
and
insw
aad
add
mov
andb
jo
ljmp
cmpb
cli
ret
xor
shlb
dec
clc
jle
xchg
or
notl
dec
lods
sbb
repz
stos
in
dec
stos
in
test
filds
jg
jnp
inc
incl
pop
jecxz
test
adc
push
sub
add
xchg
in
shll
add
repz
lock
fs
sbb
bound
das
out
add
xor
pop
fimull
out
scas
push
or
std
movsb
aas
and
fiadds
repz
arpl
std
dec
mov
fsubl
aas
adc
hlt
sarb
test
pop
test
sbbl
push
mov
sub
sub
push
fdivs
call
and
pop
sahf
or
inc
out
mov
arpl
insl
sbb
pop
scas
fs
insl
xlat
ret
cmp
fisubrs
adc
sbb
decl
scas
sbb
xchg
aas
fisubrs
inc
and
mov
pusha
in
in
xchg
ret
inc
or
rcrl
gs
sub
push
xchg
push
xchg
xchg
mov
xchg
xchg
insl
jnp
sub
ds
jb
pop
jge
pop
jo
xor
mov
push
enter
out
dec
inc
sub
push
in
cmp
cmp
lcall
mov
sbb
and
and
dec
sahf
aaa
leave
xchg
inc
daa
icebp
cmp
mov
loope
mov
ljmp
sub
dec
pop
adc
call
imull
jg
hlt
pop
xchg
das
xchg
scas
mov
ss
mov
ret
inc
add
fidivs
js
cmp
mov
xor
mov
jmp
sbb
mov
dec
es
aaa
jo
xchg
sub
in
bound
cmp
inc
mov
mov
scas
push
mov
jmp
lcall
iret
xchg
into
loop
lcall
jbe
pop
test
ficoml
adc
test
daa
jo
mov
and
mov
fistps
data16
clc
dec
mov
push
lret
test
loop
aas
jmp
xor
sbb
mov
lds
addl
cmp
or
pop
pop
sbb
push
stos
sub
push
cmc
cld
out
aas
sbb
sub
addl
pop
cmp
test
bnd
mov
lret
push
in
pop
pop
aas
fiaddl
or
sub
loop
xor
mov
mov
mov
xchg
insb
mov
jo
sbb
aaa
imul
xchg
int3
ret
sbb
and
leave
jae
mulb
or
jo
movsl
pusha
insb
and
nop
ja
xor
lock
mov
mov
jns
stos
inc
adc
jb
mov
cltd
lds
loopne
jp
adc
mov
subb
test
rorl
inc
popf
fldt
jnp
and
adc
sbb
sbb
sarl
sarl
lcall
jl
mov
sub
jno
dec
lock
in
imul
in
xlat
adc
mov
test
lods
sub
pop
push
cld
cltd
cmc
aad
push
sti
sbb
ret
mov
pop
shlb
hlt
movd
lahf
out
stc
push
pop
lods
and
lea
lcall
jge
fsts
scas
push
mov
hlt
daa
out
lahf
insb
mov
xor
push
cmpsb
push
mov
cmc
mov
aas
pushf
sbb
sub
aaa
lcall
es
daa
enter
mov
cmp
xor
ds
push
mov
jl
mov
out
cmpsb
jbe
push
scas
push
add
out
clc
mov
mov
int3
add
jns
sub
insb
fwait
and
leave
add
pop
ds
xchg
addr16
filds
pusha
sbb
sub
jnp
push
loop
scas
movsl
leave
insl
dec
rcll
repz
or
fprem1
or
sub
dec
nop
loop
in
cmovae
add
mov
pop
inc
jne
enter
xor
mov
shlb
cli
dec
cs
pop
mov
inc
loope
test
xlat
lahf
loop
cwtl
cmp
pop
sub
rorb
mov
and
insl
mov
sbb
sub
aas
ret
mov
push
push
mov
ret
cmp
pushf
pop
sbb
xor
sbb
inc
adc
sahf
clc
fcoml
push
jmp
xchg
movsb
jmp
out
aad
aas
jno
push
lcall
pop
mov
gs
cmp
stos
sub
out
aas
das
insb
fiadds
push
jne
out
jne
aam
repz
mov
adc
popf
mov
adc
loop
pop
adc
or
lds
xor
adc
out
inc
push
dec
in
mov
xor
xor
subl
or
andl
shl
sbbl
lea
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
jg
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
pushl
push
call
xorl
movzbl
adc
movzbl
add
or
add
movzwl
sub
mov
shrd
shr
cmpl
mov
mov
mov
jmp
mov
jbe
push
call
andl
mov
adc
sbb
movl
mov
mov
or
not
mov
mov
sub
mov
add
jmp
rcrl
cmp
and
and
scas
dec
or
fcomps
ja
xorl
movsb
js
scas
push
stos
add
lcall
xchg
popf
lods
shll
dec
jo
xor
ret
mov
jge
jne
inc
gs
dec
pop
cmp
jns
add
sub
pusha
mov
mov
dec
jl
ficomps
pop
ret
jmp
push
dec
insb
fisubrl
mov
mov
cmp
jb
push
ja
cmp
or
fistpll
pop
mov
fdivrl
fldt
fildl
sbb
and
dec
xlat
mov
dec
inc
mov
mov
sub
rcr
xchg
and
gs
mov
push
insb
pop
xchg
jae
sub
scas
aad
mov
lcall
push
stos
sbb
sub
mov
jns
or
jmp
inc
push
insb
iret
push
pop
fwait
mov
mov
xor
adcb
jmp
loope
dec
jmp
sub
push
cmp
addr16
pop
push
inc
xchg
scas
push
push
sub
add
lods
out
mov
jae
ret
cmp
xor
scas
mov
dec
jb
pop
push
sbb
mov
aas
ficoml
idivl
or
adc
jns
mov
test
xorb
cwtl
mov
inc
mov
jl
jne
push
jne
js
and
test
sbb
sarl
jo
jnp
xor
or
nop
jb
or
jnp
cmp
adc
testl
adc
jns
xchg
mov
fistpll
cmp
sub
jg
outsl
jmp
mov
or
insb
hlt
insl
pop
push
testl
lds
sbb
xor
mov
mov
cmp
test
jbe
mov
mov
in
js
movsl
fstl
test
notb
mov
rcl
add
mov
push
aam
dec
sbb
outsl
iret
push
cmp
mov
dec
daa
add
sub
jl
bound
fsubrl
push
in
outsl
sub
dec
arpl
and
add
lcall
andl
push
lret
scas
aas
loop
outsl
adc
ds
sub
aad
jae
or
cmp
inc
dec
push
leave
xor
xchg
ret
aaa
das
ljmp
add
mov
jecxz
sub
sub
mov
sbb
pop
repnz
cs
or
cmp
cmp
sbb
outsw
xor
or
pushf
and
pop
mov
jns
xor
dec
sbb
dec
mov
lret
fiadds
jne
dec
dec
aaa
mov
inc
dec
pop
cmp
shll
sub
and
jg
mov
mov
push
mov
mov
xchg
stc
add
fwait
mov
fs
cwtl
lds
mov
notl
int
sahf
rcrl
gs
mov
int
jle
int3
cmp
push
inc
jae
inc
addr16
jmp
dec
pushf
loopne
pop
mov
arpl
and
sub
cmp
xchg
jmp
cltd
dec
adc
aam
xor
push
movsl
ret
jo
lds
sub
sbb
jmp
dec
xchg
dec
pop
cmp
outsb
cmpsl
gs
sbb
addr16
jmp
jno
mov
cmc
xchg
mov
inc
nop
adc
push
loope
hlt
not
shrl
dec
movsl
loop
inc
outsl
inc
sub
incb
stos
xchg
cmp
adc
jp
jge
ljmp
arpl
nop
xor
mov
xor
cs
mov
xchg
jl
jg
or
mov
adc
mov
outsb
les
dec
push
add
movsl
fsubrl
scas
inc
pop
jb
xchg
addr16
xchg
pop
int
fstpt
out
inc
out
rorb
fiaddl
lock
ja
imul
inc
in
aam
shlb
testb
cs
inc
int
aam
cs
cmpsl
lcall
imul
movsl
cltd
out
out
pop
lods
adc
rcl
or
test
sbb
lret
pop
inc
adc
mov
inc
lret
imul
jb
jecxz
leave
cmpsl
pop
mov
repz
xchg
loopne
stc
loop
sbb
push
cld
rcrb
int3
lret
or
or
in
repnz
sahf
fisubl
push
gs
mov
stos
int3
and
push
icebp
add
repnz
mov
ds
pop
mov
or
data16
lods
push
pop
inc
lods
sbb
stos
mov
and
fldt
stos
jno
add
lahf
dec
sub
les
cmpsl
call
ss
popf
popf
pusha
adc
dec
or
inc
in
jge
movsb
imul
or
push
stos
cmpsl
cld
loope
cmp
lahf
inc
outsb
pop
lcall
mov
cmp
rclb
mov
xchg
push
pop
jle
lds
movsb
outsl
sti
add
cmpsb
fsts
imul
add
fwait
rcl
btsl
leave
jge
test
mov
sti
je
sub
mov
js
les
push
call
mov
out
jne
popl
mov
inc
add
cltd
adc
xchg
into
pop
push
mov
pop
lret
pop
push
jo
fbstp
jecxz
push
rclb
jg
or
mov
sub
sbb
cmpb
dec
inc
xor
inc
jecxz
xor
lahf
adc
sbb
mov
call
out
sahf
jne
loop
fstpl
adc
jg
sub
pop
xchg
cmp
stos
shll
iret
jno
push
pop
iret
add
cmp
test
push
jne
xchg
sub
icebp
adc
rcll
pop
add
and
sti
xchg
lods
push
push
add
sahf
sbb
or
mov
int3
leave
pop
push
repnz
and
scas
cmpsl
mov
not
in
std
dec
mov
mov
add
xor
add
jns
push
shlb
sub
or
out
xor
push
xor
mov
mov
inc
loopne
shlb
aas
call
adc
xchg
cwtl
cmpsb
jg
lret
into
and
adc
sub
push
movsl
pop
cmp
cmpsb
or
incb
cld
sti
dec
sub
popf
repz
xchg
cltd
sub
fucomip
nop
stc
cmpsl
daa
push
mov
xchg
pop
out
sbb
scas
sbb
aam
loop
mov
dec
inc
or
in
mov
and
cmp
not
shll
sub
in
or
dec
stos
mov
cmpsb
gs
xchg
dec
mov
pop
xchg
cmp
imul
or
daa
pop
mov
inc
pop
or
and
add
loope
add
mov
out
pop
cwtl
mov
xchg
mov
dec
or
in
lea
add
clc
test
outsl
bound
ja
xor
mov
xor
adcl
or
shl
movzbl
or
imul
mov
mov
xorl
shrd
xorl
mov
mov
xor
shr
mov
and
mov
sbbl
xor
orl
or
sbbl
shl
adcl
sub
mov
mov
cmp
mov
mov
jg
xor
add
mov
sub
and
mov
cmpl
movl
movl
jmp
mov
mov
jb
push
push
call
xor
mov
sub
sbb
movzbl
and
mov
jmp
les
cmp
push
mov
mov
movsb
js
xchg
repz
outsl
dec
ja
and
xchg
stc
scas
pop
lds
mov
pop
stos
scas
mov
sbb
cwtl
fsubl
addr16
out
repz
jecxz
cltd
dec
rclb
push
pop
aad
jae
lds
mov
add
and
stos
pop
hlt
jmp
mov
shl
aaa
fmull
pushf
adc
outsb
mov
add
push
inc
xchg
fdiv
cmpsl
xchg
fwait
pop
sbb
mov
rcll
mov
loope
inc
dec
mov
dec
push
xchg
dec
jle
lds
push
mov
or
xchg
add
mov
sub
push
jb
lea
pop
in
sub
fsubl
scas
pop
dec
inc
mov
icebp
mov
mov
push
rcl
ja
dec
subb
iret
pushf
lret
aaa
inc
in
movsb
mov
push
jnp
fnsave
push
jge
mov
test
insb
cwtl
sbb
mov
mov
and
jns
negl
jns
pop
inc
jo
cltd
mov
pop
jmp
enter
dec
mov
fnstsw
xchg
insb
push
push
mov
stos
sbb
or
dec
mov
jl
js
ds
js
xchg
fsubl
push
cmc
mov
inc
aaa
mov
jmp
lahf
lcall
ds
jo
adc
jmp
fldenv
or
push
sbb
fdivl
mov
push
outsb
gs
jbe
out
jo
sub
cwtl
push
add
pop
stos
cmpsl
cli
mov
fstps
cmp
adc
mov
dec
sbb
cmp
push
dec
fwait
adc
dec
dec
pop
xlat
or
das
dec
pop
push
scas
add
inc
jae
sbb
jecxz
add
jl
pop
test
fstpl
insl
sub
enter
sbb
mov
sbb
adc
lret
scas
inc
sub
jo
fsts
pop
pop
xchg
xchg
ret
lods
loop
std
mov
adc
pop
ret
jae
sbb
aad
mov
push
scas
int3
stos
ficompl
cmp
gs
fcmove
fwait
sbb
cmp
scas
mov
test
fwait
sub
pop
push
rcrb
aad
adc
mov
lcall
sub
dec
pop
das
inc
aaa
mov
data16
stos
sub
mov
int3
lds
aas
adc
inc
arpl
gs
pop
add
ss
and
jnp
mov
push
sub
mov
cld
lcall
sub
add
inc
sub
aas
fs
jecxz
jecxz
popa
mov
arpl
loop
and
mov
mov
mov
mov
add
int
out
cld
cmp
imul
sbb
mov
adc
outsl
out
sub
dec
cmpsl
xor
and
arpl
ret
insl
inc
add
std
lods
dec
test
in
cmc
std
dec
lret
fistps
cmp
fwait
enter
test
or
and
das
mov
shlb
icebp
inc
out
push
push
pop
in
cwtl
lods
jmp
mov
dec
into
inc
xor
push
jmp
dec
repz
xchg
or
cwtl
sub
shrl
and
adc
or
or
jns
shl
les
in
sbb
mov
xor
dec
jne
mov
je
movsl
pop
in
xor
cmp
cmpsb
push
mov
jl
in
imul
jecxz
cld
mov
cmp
imul
popf
in
aam
push
subb
push
rcrb
js
aaa
std
inc
sti
inc
add
pop
cmp
aas
cmc
movsb
add
sub
xchg
fsubl
shr
test
ret
cmp
and
adc
popf
call
or
shll
push
mov
addr16
stc
das
popf
std
xor
pop
sbb
call
sbb
leave
mov
cld
cmp
add
scas
inc
sbb
xchg
pushf
test
push
dec
mov
inc
lret
insb
lret
push
jo
js
push
pop
enter
cmc
push
sbb
add
ss
outsb
cmp
mov
dec
shll
insb
data16
jl
out
scas
lods
mov
push
xor
je
jbe
insb
movd
andb
fnstenv
cmp
pop
mov
pop
int
xchg
cmp
movb
repnz
mov
movsb
sbb
out
fstpt
push
jnp
push
mov
loope
imul
ds
cmp
and
shl
cmp
mov
mov
inc
pusha
cmp
shll
movnti
idivb
ljmp
cli
imul
ret
outsl
ret
mov
mov
push
ljmp
sar
mov
stos
adc
cmp
gs
or
lds
push
dec
or
jnp
je
fildll
push
xchg
pop
pop
mov
push
xor
sbb
jae
and
mov
mov
add
sbb
lahf
mov
test
inc
cmpsb
inc
fsubp
data16
push
inc
cld
scas
cmp
fmul
daa
mov
mov
mov
loope
mov
sbb
pushf
or
xchg
xchg
into
insl
sbb
loop
orl
dec
jne
sbb
jg
and
adc
call
mov
lret
xchg
dec
sub
cmp
data16
in
mov
pushf
xorb
add
test
test
cwtl
repz
inc
insb
rcrb
dec
nop
add
or
call
xchg
rcrb
rolb
icebp
xchg
jg
lods
fnstsw
in
shl
sbb
inc
add
sbb
inc
mov
xor
lret
pop
cmpsl
enter
fcomp
pusha
lret
cmc
inc
in
dec
test
mov
in
sbb
sub
loop
nop
xchg
jbe
push
imul
mov
and
sub
adc
push
pushf
inc
pop
neg
aam
scas
xor
dec
or
fucomp
add
adc
cmpsl
pop
cli
adc
cmp
ljmp
std
jp
sahf
scas
in
pop
leave
or
push
xchg
or
xor
and
outsb
mov
sub
jge
add
adc
mov
fstl
ficomps
inc
adc
sub
cltd
rcrl
pop
push
pop
cmp
pushf
push
icebp
subb
outsl
mov
rorl
xchg
jg
dec
in
jnp
scas
dec
movsb
and
subb
js
sub
push
in
mov
pop
push
push
fidivrl
fcompl
mov
sbb
jb
insl
sti
sub
sbb
sub
push
insl
pop
orl
pop
hlt
outsl
pop
test
pop
inc
sbb
jne
adc
insl
mov
es
sahf
insl
icebp
inc
pop
lret
bound
int3
nop
sbb
sbb
sub
outsl
sahf
lea
or
movsb
outsb
jmp
push
xchg
fistps
and
outsb
ror
xor
add
jne
fidivl
jb
repnz
mov
add
and
stos
inc
inc
add
lods
roll
mov
movzwl
or
mov
adcl
xor
andl
shl
orl
xor
adcl
or
sbbl
shr
and
mov
jmp
mov
mov
and
ja
mov
aas
fs
cwtl
lock
cmp
dec
js
loop
pushf
pop
jge
and
ljmp
mov
xchg
addr16
fstl
push
sub
aaa
inc
jnp
scas
pusha
add
lret
mov
stos
insl
sbb
or
xchg
push
ficomps
arpl
jecxz
insl
cmp
jmp
roll
add
push
dec
pop
sbb
sub
rcrl
sub
sub
cmpsl
and
loopne
or
adc
xlat
pop
cmp
and
adc
jnp
addr16
test
fsubrp
popa
pop
or
test
ret
adcl
lock
jb
mov
jb
js
sbb
mov
cmc
inc
xor
dec
push
out
or
iret
and
mov
popa
cmp
xor
and
sub
inc
fdivr
test
push
std
mov
xchg
cmovbe
ss
cmp
sbb
push
adc
jmp
int3
jno
bound
loope
cld
cmp
mov
mov
pop
sti
sub
cltd
outsl
push
loop
add
and
in
icebp
pop
dec
pop
xchg
xchg
mov
inc
sub
sbb
xor
fst
les
jo
mov
or
xchg
fisttps
icebp
jbe
dec
xor
sti
test
mov
outsl
cli
pop
call
xlat
and
mov
jp
mov
lahf
mov
sarl
push
jp
in
inc
dec
sbb
adc
mov
xor
sub
dec
xchg
inc
test
das
insl
sarl
jle
std
add
push
aam
fidivrl
add
pop
push
lret
pop
mov
pop
jecxz
sarb
add
xchg
rorb
sub
out
mov
mov
push
adc
mov
outsb
sbb
dec
fsubrl
xchg
xor
fidivl
pop
sub
xchg
loopne
jo
xchg
imul
in
and
fistpl
ja
addr16
mov
mov
ret
push
mov
loope
repz
dec
add
cmpl
arpl
mov
pushf
mov
push
dec
mov
lods
inc
arpl
ret
nopl
push
add
mov
adc
gs
repnz
inc
jo
or
sub
push
sbb
sbb
in
out
xchg
dec
imulb
add
sbb
inc
inc
dec
push
scas
inc
and
fisubrs
jae
in
rorb
jmp
je
push
ret
aas
cmpsl
xchg
cs
push
mov
sub
clc
out
pop
stos
addb
cmpsl
inc
and
movsl
fcmovnbe
push
int
test
cmp
sub
cld
arpl
mov
call
dec
cmpsl
test
xchg
cmpsl
xor
adc
adc
add
add
mov
inc
into
mov
neg
loopne
pop
and
test
xchg
mov
mov
pushf
fwait
incl
xor
ja
movsb
loop
and
push
jbe
out
clc
push
aaa
inc
cmp
pop
ret
and
lods
sub
hlt
arpl
jns
cmpsl
shlb
lock
ds
sub
adc
and
push
xchg
aad
cmp
cmp
jno
or
sbb
xor
call
sbb
jne
inc
repz
adc
or
push
mov
xor
xlat
mov
lock
mov
psadbw
or
inc
mov
mov
adc
mov
cli
mov
gs
dec
int3
dec
dec
in
sub
xchg
jae
je
cmp
cltd
push
jl
adc
outsb
dec
cltd
addl
adc
pop
dec
dec
adc
inc
shl
push
mov
jo
mov
lea
loopne
fwait
inc
mov
cwtl
rcrl
test
cwtl
mov
mov
mov
insl
stos
test
adc
je
inc
sti
pop
pop
cmpsb
mov
popf
dec
pushf
sbb
loope
ret
jge
arpl
popa
add
hlt
xor
int3
call
xchg
mov
popa
push
xor
pop
imul
mov
sbb
stc
mov
sti
into
mov
push
inc
or
cmpsl
aad
into
add
call
insl
dec
push
push
mov
mov
fisttps
jg
imul
pop
jmp
lret
int
shll
lcall
ret
test
sub
clc
shl
and
and
and
push
iret
in
lret
jl
xchg
loopne
dec
xlat
or
or
xchg
imul
push
fdiv
sbbb
popa
in
fildll
subb
in
cli
lods
cli
adc
leave
fiadds
adc
std
fcoms
idivl
ja
jb
fsubs
adc
int
or
mov
push
adc
lock
movsb
xor
cmc
jo
cmp
pavgb
mov
dec
sbb
repnz
sarb
xchg
sbb
pop
sbb
fistpll
cs
std
jecxz
into
and
iret
testb
int3
dec
lea
shrl
sbb
bound
mov
jge
fnstcw
lcall
mov
es
lret
fsubs
lahf
jb
orb
jo
adcl
clc
dec
mov
loope
fs
push
adc
sub
mov
push
jmp
popf
mov
mov
inc
call
aas
pop
rcr
ja
cltd
pop
ficoml
js
mov
add
imull
loop
repnz
adc
pop
jo
in
orb
or
mov
lods
mov
mov
mov
mov
inc
and
adc
addr16
fistps
push
out
pusha
or
pop
fcomi
mov
xor
loopw
mov
gs
jo
adc
std
or
cmp
xor
jns
fsubs
mov
jge
sub
fbld
pop
ds
pop
mov
xchg
adc
out
and
inc
mov
stos
cli
xor
stc
and
mov
pop
and
and
add
mov
or
inc
dec
pinsrw
xchg
mov
sahf
xchg
sub
push
sahf
or
pop
inc
int3
push
push
aad
scas
dec
sbb
dec
jno
lret
inc
out
mov
inc
lret
dec
cmpsb
lods
mov
int
sub
cmp
lret
sub
and
push
add
fistl
ja
cmp
fs
mov
shll
rep
enter
mulb
xchg
shll
cmp
jmp
xchg
test
test
dec
xor
add
push
xchg
dec
inc
pop
and
sub
inc
int
das
pop
cmpsl
mov
repz
lds
cmp
gs
mov
data16
xchg
mov
jmp
imul
js
dec
test
jmp
cmp
add
inc
push
add
mull
mov
or
mov
xchg
inc
sbb
pop
lret
stos
inc
push
orb
test
xchg
mov
xchg
mov
sarl
mov
mov
or
mov
mov
mov
add
mov
andl
shrd
sbbl
shr
mov
mov
inc
jmp
shll
adc
push
scas
xchg
add
sub
ja
cmp
lds
aad
and
pushf
lea
mov
mov
xchg
and
test
pop
and
xchg
dec
mov
fsubrl
mov
ret
test
mulb
jle
addb
sbb
les
pop
jns
mov
sub
dec
mov
out
out
mov
sarb
adc
mov
out
clc
sbb
pusha
or
adc
mov
xorb
sti
pop
xchg
mov
out
mov
jle
sti
or
ja
insl
cmpsl
ja
mulb
imul
push
sbb
cmp
cmp
pop
in
es
sub
sub
sbb
mov
testl
ret
dec
hlt
cmp
jae
inc
mov
push
fbstp
push
out
js
cmpsl
out
daa
loope
add
outsb
roll
xchg
rorl
icebp
fiadds
inc
hlt
add
pop
arpl
inc
pop
cmp
cmp
in
cmc
jb
pop
pop
mov
fisttpll
jp,pn
xchg
ljmp
adc
jae
inc
sub
mov
insb
popa
xchg
cli
in
int
and
push
adc
cmp
jmp
in
and
mov
cmp
pop
loop
sbb
mov
dec
lods
pop
inc
repz
aad
les
add
test
movsb
or
pushf
out
jecxz
imul
das
pop
xchg
rcrl
mov
cmp
inc
jmp
test
fcoms
imull
pusha
xchg
mov
sub
push
lret
xchg
and
das
popf
stc
mov
imul
aad
jno
xchg
loopne
mov
cmp
scas
aas
out
pop
push
jmp
stc
or
cmp
ret
cmpsl
and
scas
cmpb
inc
sub
stos
sbb
pop
lcall
mov
std
pushf
cmp
mov
push
movsb
repnz
adcl
jmp
lea
out
dec
aam
mov
repnz
and
das
aam
adc
ficoms
mov
lret
das
out
mov
pop
or
adc
jns
xchg
clc
stos
arpl
add
rcrl
pop
mov
mov
fdivs
cmp
xor
jmp
mov
fnstcw
sbb
pop
cltd
stos
mov
lcall
sub
jg
shll
dec
inc
push
push
mov
repnz
test
add
xchg
cmp
xchg
outsb
dec
and
lcall
movsb
push
push
or
imul
xor
inc
xor
push
fiadds
and
lock
fiadds
comiss
daa
out
jnp
fbstp
sahf
push
ss
les
pop
shl
jl
jae
dec
mull
add
sub
fwait
xor
and
cmp
mov
test
lret
cmp
mov
ret
push
mov
add
aad
add
in
cmpl
xchg
adc
mov
icebp
mov
rolb
mov
mov
push
mov
inc
insl
adc
stc
inc
or
inc
call
fildl
mov
andb
das
rclb
mov
cs
mov
test
mov
or
sbb
clc
sub
lret
cmp
popf
ds
adc
mov
jae
cmpsb
cwtl
sbb
iret
mov
add
mov
cmp
mov
rcrl
enter
hlt
daa
mov
out
data16
cmp
lret
sub
addr16
cmp
jmp
les
xor
shr
gs
lods
cmpsb
mov
inc
cli
mov
out
adc
mov
inc
sub
or
mov
fidivs
inc
mov
xchg
sbb
push
mov
push
test
mov
and
pop
adc
jl
sbb
sahf
call
push
lods
aam
pop
outsb
adc
or
xor
jge
jmp
sub
int
out
out
sarl
and
push
and
add
xchg
xor
fistpll
push
mov
or
lods
and
enter
dec
fidivl
outsb
dec
in
xchg
jno
shl
arpl
xor
shlb
inc
add
js
cmc
sbb
adc
nop
and
inc
jge
adc
int3
dec
lods
popf
rcl
or
adc
xchg
js
jno
outsb
andl
addr16
inc
mov
mov
push
int3
or
sbb
movsl
bound
testb
aad
in
mov
dec
cmpsl
mov
test
and
cwtl
fwait
out
jbe
mov
lea
dec
add
mov
addr16
scas
and
or
popa
test
insl
mov
out
test
jns
fwait
mov
mov
imul
jnp
cmpsb
cmp
loop
in
sbb
into
mov
out
aam
int
cmc
adc
pop
xor
pusha
fidivl
xchg
outsb
and
lds
stc
loopne
daa
and
xor
lea
xchg
lret
push
int3
test
jbe
cmp
jmp
call
dec
jmp
rcrl
iret
or
ss
mov
loope
decb
fldl
fadd
add
mov
mov
jo
nop
nop
push
out
push
lock
mov
mov
arpl
test
pop
inc
jmp
sbbb
test
lods
dec
imul
mov
cli
lahf
add
arpl
sub
sahf
out
aas
mov
mov
add
mov
dec
cmp
cmp
add
push
jmp
mov
push
adc
clc
into
stos
jnp
popf
jl
mov
inc
cmpb
aam
mov
insl
stos
lahf
push
mov
add
sti
push
add
inc
loope
enter
inc
shll
arpl
pop
push
sbb
fildll
add
mov
dec
cli
mov
or
mov
ret
lahf
out
int3
cmpsb
bound
xchg
jl
and
xchg
jns
aad
popa
lock
insl
add
xor
add
imul
mov
mov
mov
pop
adc
movsb
jp
subb
mov
xor
test
adc
fsub
outsb
pop
xchg
ret
or
repz
jmp
fcoms
adc
rcrb
pop
and
out
mov
in
or
and
mov
aam
lahf
sti
xor
xchg
sarl
test
add
push
mov
xor
pop
stc
xchg
mov
push
sub
shlb
mov
dec
fs
dec
cltd
xor
outsl
push
cmpsl
sbb
insb
lods
aas
add
bound
aam
fdivrl
mov
sub
icebp
pushf
and
lahf
cld
push
test
or
xchg
lcall
mov
out
lds
sbb
sti
xor
lock
xorl
xor
subl
jmp
scas
popa
inc
jge
sbb
cs
lret
mov
sbb
ja
imul
sbb
shll
daa
pop
pop
out
ljmp
stos
jl
ret
mov
pop
test
insb
outsb
std
scas
mov
stos
outsb
jo
mov
jns
in
mov
insl
mov
adc
mov
cmp
popl
in
xor
scas
xor
stos
cs
ret
ja
shl
dec
or
mov
lcall
lds
jg
stos
mov
int3
imul
xchg
mov
mov
cli
push
cmpsb
push
nop
mov
outsb
fdivrs
fwait
test
fs
sbb
mov
inc
cs
cmc
push
xchg
stc
xchg
add
icebp
mov
std
sti
loopne
cmpsb
and
lds
aaa
cwtl
repz
movl
mov
cmpl
or
adc
mov
xor
in
popf
imul
loope
jmp
mov
pop
xchg
fildl
in
movl
add
arpl
pop
iret
incl
ja
add
xchg
jp
ret
test
mov
es
xor
dec
jnp
les
mov
inc
xchg
dec
sbb
pop
cwtl
xchg
aam
cmc
cmp
xchg
pop
lds
add
sub
es
lcallw
xor
dec
scas
mov
inc
lret
jbe
sub
adc
aaa
fiadds
andb
dec
lock
mov
push
leave
cmp
setnp
mov
jl
imul
xchg
fists
adc
stos
cmp
shl
loopne
jg
xchg
xlat
ljmp
jge
xchg
jle
adc
mov
imul
mov
stc
enter
cmp
mov
ret
jns
call
cmp
pop
mov
or
ss
loope
movsl
leave
pop
jns
mov
mov
je
out
ret
outsb
mov
ja
jo
adc
dec
cmp
jne
out
in
pusha
jb
in
sbb
and
fs
imul
jle
ret
aam
stos
ret
cmc
js
in
and
fs
dec
mov
sub
movsb
xor
jbe
stos
repz
dec
mov
hlt
xor
sub
and
sub
inc
imul
lahf
adcl
inc
add
inc
in
ss
jae
xor
push
loop
pop
and
push
rolb
xlat
test
xor
clc
and
aas
shlb
in
lret
daa
push
mov
frndint
jmp
add
arpl
lret
jge
insb
shrb
adc
rcl
add
xlat
test
subb
enter
xchg
idivl
sbb
clc
adc
es
jne
sub
dec
test
dec
mov
jo
rorl
or
mov
push
push
sub
out
jnp
mov
mov
inc
jno
pop
test
sub
subl
mov
call
stos
subl
loopne
lcall
push
sbb
xchg
sbb
jl
push
cmp
inc
bound
outsb
xchg
out
add
lods
arpl
push
push
ret
out
repnz
lahf
rclb
lcall
push
pop
jbe
adc
mov
sbb
les
stos
loope
sub
mov
stos
dec
cmp
jae
sti
cld
rclb
lock
inc
push
iret
inc
pop
jl
ss
cmp
add
adc
insb
lea
imul
in
vmread
push
push
lret
testl
jnp
pop
jb
xor
in
iret
repnz
jmp
push
movsb
xchg
outsl
jecxz
jmp
mov
pop
mov
sahf
mov
int3
xchg
add
jecxz
mov
out
movsl
cmp
icebp
call
mov
les
or
and
fs
and
push
mov
nop
lcall
xor
popf
add
dec
lret
mov
insb
cld
stc
fmuls
pop
orl
pop
lods
add
fsubrl
mov
cmc
rol
mov
mov
dec
pusha
xor
lock
cmpsb
rclb
js
pop
push
jns
icebp
xor
adc
dec
lret
sub
cld
and
adc
xchg
movsb
sbb
xchg
adc
mov
repnz
push
imul
adc
dec
addr16
imul
in
and
popa
adc
lret
iret
test
mov
sbb
cwtl
jno
inc
cmp
shll
sbbb
imul
aam
push
jmp
stos
pop
add
rcrl
push
arpl
add
stc
xchg
inc
jb
cmp
mov
and
movsb
sub
in
ljmp
or
xchg
daa
sub
testb
or
call
mov
roll
sub
movsb
and
shll
addr16
add
mov
push
testl
aam
call
fdivrs
cld
pop
daa
jno
das
xor
sar
pop
mov
int
mov
jne
xchg
xchg
jge
jns
xchg
hlt
adc
pop
ret
test
mov
out
ja
call
push
popf
and
mov
or
ljmp
sub
and
popf
and
imul
call
pop
test
loope
mov
pop
push
movsl
push
out
int3
cmovo
pop
test
xchg
jp
out
flds
cltd
cmp
mov
lods
aad
sub
mov
push
shrl
leave
fs
test
fwait
jb
test
movsl
push
ja
jge
jg
mov
out
enter
mov
bt
stos
mov
adc
xchg
inc
mov
push
add
jnp
xchg
lock
insb
imul
jle
adc
std
xor
push
js
and
lods
push
pusha
xor
xor
test
push
mov
not
cmp
in
push
mov
testb
scas
mov
dec
pop
lcall
xor
pusha
sbb
dec
mov
sub
lea
dec
push
sub
dec
pop
dec
jmp
push
aam
decl
adc
lods
and
enter
rorb
push
icebp
mov
test
fdivrl
nop
popf
rcrb
jle
and
dec
or
lea
pop
into
pop
aas
mov
mov
inc
iret
out
ds
fcomi
sub
inc
ja
pop
dec
add
mov
xlat
in
xchg
cmp
push
fsubr
in
inc
inc
dec
mov
cmp
mul
xchg
sub
mov
jge
add
pop
std
fs
cltd
dec
pop
push
or
or
mov
cwtl
or
mov
in
nop
sti
jp
push
jbe
sub
sub
or
mov
pop
push
or
or
iret
ret
std
adc
sub
pop
addr16
add
xor
push
shl
daa
inc
cmpb
or
mov
pusha
xchg
pop
stc
es
jne
and
fnstsw
mov
js
add
rorb
push
in
add
sub
add
loope
imul
jmp
add
or
or
adc
push
push
ja
icebp
xchg
popa
in
ja
xchg
insb
jb
inc
loopne
xor
rclb
je
mov
jl
pop
xchg
aam
fwait
dec
sbb
pop
sub
inc
mov
out
add
mov
nop
cltd
sbb
in
push
outsl
fsubp
sub
sub
adc
mov
push
stc
imul
add
push
sahf
cmp
mov
xor
pop
ss
outsl
sbb
rcll
es
pop
dec
test
add
jp
fs
add
xlat
and
insb
incb
dec
shlb
pop
fwait
aaa
rorb
pop
adc
pop
test
insb
js
es
lock
cli
cmpsb
inc
cmp
push
das
mov
cltd
sbb
push
stos
cmp
sub
ret
test
push
outsl
add
bound
xor
mov
xor
pop
and
cli
mov
dec
pusha
cmpb
jae
inc
or
mov
and
adc
add
mov
sbb
xorl
pop
icebp
es
shr
loopnew
mov
iret
xchg
test
sbbl
fwait
and
adc
rolb
loop
roll
lret
cmp
dec
std
push
mov
push
stc
xchg
add
adc
int3
jns
ljmp
icebp
jae
imul
imul
repz
nop
sub
adc
adc
aaa
fiaddl
mov
mov
lcall
fs
pusha
dec
movsb
mov
dec
out
dec
fiaddl
in
xchg
out
sbb
iret
inc
dec
cmp
inc
push
dec
daa
loop
pop
mov
loopne
add
ret
dec
cmc
clc
inc
repz
in
fsubrs
xchg
sahf
js
jecxz
inc
lock
add
incb
not
imul
xchg
xchg
dec
jp
xchg
mov
bound
arpl
loop
and
scas
and
lcall
jle
call
xchg
cmpsl
push
xchg
test
arpl
jne
imul
mov
stc
sub
sub
or
sbb
fmull
jl
loop
add
push
ja
jne
dec
xor
sbb
rcl
mov
je
loop
and
fwait
aaa
jae
inc
xchg
mov
lea
das
test
lret
mov
xor
dec
sahf
movsl
jge
cmp
andl
sbbl
jmp
sbb
imul
clc
sub
fbstp
shll
lret
pop
sub
mov
lahf
lds
or
out
fmulp
inc
gs
loopne
in
or
mov
xor
lret
loope
fsubrs
stos
hlt
jno
mov
inc
std
cmp
icebp
sub
loop
xchg
xchg
insb
and
rorb
lods
out
xlat
adc
bound
sti
jns
mov
mov
pusha
xchg
jns
or
dec
or
repz
mov
jp
fdivl
mov
into
in
fidivrl
stos
mov
inc
sbb
cmp
jno
mov
mov
sub
xchg
rolb
jb
fnstenv
fdivr
xchg
mov
test
mov
add
ja
sbb
sti
push
adc
mov
xchg
cwtl
cmp
punpckldq
push
jle
sub
push
and
decb
mov
jo
cmp
enter
mov
lods
and
rcll
jbe
bound
int3
mov
std
jp
popa
xchg
pushw
packssdw
retw
cmp
lea
cmp
ja
xlat
sub
aam
sub
scas
inc
jge
jecxz
xchg
mov
enter
mov
jae
or
cmpb
scas
out
out
rcll
loopne
ja
mov
xor
ss
and
clc
inc
test
xchg
cltd
push
and
inc
jl
or
stos
loopne
into
fs
pcmpeqd
jg
loop
cld
lods
adc
jne
adc
hlt
scas
test
pop
mov
inc
in
orl
mov
in
xorl
rclb
stos
cmpsb
popf
rcrb
popf
arpl
fisttpll
adc
add
xchg
mov
cmp
bnd
test
push
cmc
mov
push
lahf
mov
dec
add
xchg
mov
das
lods
in
movq
and
nop
xor
inc
mov
popf
orl
jecxz
andb
cmp
jns
scas
mov
xor
cmp
lock
mov
inc
and
lods
lods
mov
or
cmp
fsubs
das
or
int
jle
mov
and
divl
loope
scas
or
outsb
ljmp
mov
es
jb
pop
mov
fsubs
mov
lret
add
mov
test
cmp
lods
addr16
and
ss
scas
imul
dec
xor
mov
push
push
add
inc
ljmp
in
aad
rep
cmp
push
sub
push
fcmovbe
and
pop
jbe
out
pushw
insb
pop
sbb
lods
xor
int
push
sarb
sub
xchg
xchg
push
out
loopne
scas
mov
adc
pop
adc
push
int3
cwtl
cmp
inc
fsubs
dec
icebp
outsl
push
inc
pop
sahf
adcb
addb
pop
stos
shl
cmp
dec
in
out
xor
or
clc
lock
push
out
data16
rorb
test
stc
push
mov
frstor
lea
xchg
in
jmp
ljmp
jbe
nop
daa
test
xor
ja
pop
scas
inc
mov
lcall
and
test
mov
adc
xchg
and
aas
mov
dec
mov
ret
iret
std
mov
xchg
cld
into
test
sbb
lods
icebp
shr
dec
test
add
mov
cmpsl
jb
sub
mov
adc
sahf
xor
mov
mov
roll
cld
les
jbe
lock
addr16
push
add
es
mov
jbe
pop
sub
push
out
push
mov
lcall
pop
cwtl
or
int3
ljmp
add
inc
nop
lea
push
mov
cltd
mov
sub
push
cltd
sub
mov
roll
sub
ret
and
int
pop
cmp
and
mov
add
push
cmp
xor
sti
outsl
xchg
adc
sti
jno
cmp
imul
mov
loope
mov
lcall
xchg
cwtl
mov
mov
push
aam
test
mov
dec
movsl
imul
or
int3
adc
lea
fistpll
dec
mov
mov
sub
std
movsb
mov
jae
and
adc
push
or
mov
inc
add
testl
mov
mov
movl
movl
mov
jmp
movl
jle
push
pushl
call
andl
adc
xor
xor
mov
sub
and
not
and
movzwl
adc
cmpl
mov
movl
movzbl
mov
jmp
movl
movl
jbe
push
push
push
pushl
call
add
sbb
sbb
xor
add
mov
mov
shrd
adcl
mov
or
mov
addl
jmp
inc
or
add
cltd
or
stc
pushf
xchg
or
ja
cmp
bound
sbb
mov
adc
add
ss
dec
test
cmp
add
add
int3
mov
mov
push
outsb
pop
adc
lret
fwait
jns
popl
cld
fwait
lods
sti
ljmp
sbb
cmpsb
mov
inc
or
mov
inc
mov
adc
aam
xchg
add
das
dec
cmp
dec
mov
in
sbb
addr16
jg
mov
and
int
bound
xor
mov
andl
mov
lods
ret
push
lds
push
dec
sub
notl
pop
out
in
inc
push
push
lods
inc
jae
sub
loope
fistpll
sbb
rorb
push
jge
adc
sub
inc
lods
sub
repnz
push
push
stos
xor
lahf
cmp
pop
xlat
rcl
sarb
xchg
loope
aam
hlt
mov
ljmp
push
xor
jns
bound
and
inc
or
cwtl
rorb
pushf
imul
mov
fdivs
ret
loope
jmp
mov
sbb
mov
out
les
mov
out
leave
inc
adc
sbb
mov
jecxz
add
fbstp
or
push
adc
jne
rcrb
xchg
cli
mov
shrl
fisubrs
cmp
xor
les
add
inc
iret
sub
cmpsb
lods
mov
xor
fstl
xchg
insb
or
add
push
sbb
stos
into
dec
daa
add
cmpsl
xlat
mov
loope
jg
popa
xchg
xchg
stos
add
pop
shl
inc
clc
mov
cmp
inc
out
adc
xchg
fldenv
sub
clc
and
aaa
xor
mov
shl
pop
mov
adcl
mov
jmp
dec
push
jecxz
and
inc
out
enter
cs
pop
mov
ret
js
lods
or
or
add
jnp
or
loop
testb
push
jecxz
aam
jbe
mov
pop
insl
aas
pop
lods
and
lret
add
popf
jl
adc
inc
xchg
in
out
shrl
hlt
or
xchg
js
cmp
cltd
lea
fstpt
insb
cmp
out
or
mov
lods
xor
div
shll
and
mov
sahf
mov
cmp
jb
jl
iret
push
inc
es
push
push
imul
sti
sbb
xor
pop
arpl
adc
and
or
mov
pusha
push
push
dec
pusha
fcomps
sti
popa
ret
pop
jns
std
movsb
scas
mov
lea
ljmp
imul
movsb
lods
jmp
test
mov
iret
mov
mov
sub
cmpsb
stos
dec
shrl
cld
mov
inc
xchg
xor
daa
test
dec
xor
push
mov
sbb
loopne
add
sbb
rorl
int3
cmp
and
jbe
ss
lcall
pop
xor
sbbl
pop
loop
push
fisttpll
popa
lret
inc
aad
mov
push
lea
cmp
sbb
inc
ja
andb
xor
push
sub
pop
cwtl
mov
cltd
fsubrp
cmpsb
stc
lret
or
inc
cmp
cmp
pusha
push
pop
jns
popf
adc
daa
sub
inc
shl
mov
mov
shll
sub
lods
fstl
mov
vpaddd
fbld
push
data16
pop
aam
xorb
jno
or
sbb
test
mov
pop
ss
jecxz
scas
xchg
sahf
inc
imul
cltd
jge
cmpsb
mov
sar
pop
enter
xor
fwait
hlt
mov
pop
lods
cwtl
lds
movsl
or
and
dec
mov
clc
mov
xchg
inc
push
adcb
das
fbld
adc
repnz
pop
push
pcmpgtd
mov
and
mov
or
mov
mov
lea
mov
mov
pop
outsl
aad
popf
xchg
iret
mov
jmp
mov
outsb
addl
inc
dec
je
rcrl
inc
test
mov
add
mov
negl
negl
int
push
popf
mov
adc
ds
hlt
add
repz
and
rorl
mov
xor
lret
es
push
cmp
outsb
cs
loopne
imul
xchg
out
cmpsb
shrl
xchg
jnp
cli
pop
pop
in
and
jle
xor
movsb
out
push
and
shrl
rol
dec
rcr
sub
pusha
movsl
cmp
xchg
inc
adc
push
icebp
shll
shlb
mov
cmp
dec
cwtl
xor
cmp
cmpsb
sbb
punpckhbw
sbb
out
test
jmp
dec
bound
jb
add
leave
shrb
mov
insl
orb
lods
and
xchg
jge
xchg
jae
or
aad
push
adc
hlt
call
cmp
mov
mov
mov
fisubrs
jecxz
dec
mov
xchg
and
cmp
into
stos
insl
mov
add
sbb
cmp
xchg
push
sbb
pop
mov
fsubrl
das
addl
pop
test
add
add
aaa
bound
inc
inc
or
fisttpll
pop
xchg
sarb
gs
jne
push
icebp
shrl
sti
jl
dec
outsb
push
cmpsl
mov
fistpl
aaa
inc
pop
lds
test
sbb
sti
cmp
sub
sbb
arpl
xchg
xor
jmp
lods
in
sbb
stc
lret
gs
xlat
xchg
and
xor
data16
xor
mov
and
cmpsb
mov
cmc
xor
mov
or
jb
inc
lahf
icebp
xchg
inc
ret
cli
mov
cmpsl
movsl
repnz
pop
test
stc
jl
out
and
or
pop
jbe
leave
pop
inc
mov
jae
push
test
pusha
lret
inc
enter
or
rcrb
movsb
movsl
fldl
popf
in
sbb
ljmp
and
dec
cwtl
or
fimull
or
or
inc
fistpll
jae
scas
add
mov
cmp
mov
shlb
popf
sbb
clc
jae
add
mov
outsl
inc
out
ja
sbb
mov
pop
or
push
add
mov
test
inc
je
insb
pop
out
popa
mov
pop
cwtl
in
jmp
mov
fdivs
test
fxch
nop
hlt
jge
mov
xor
pusha
jmp
fstps
push
mov
arpl
and
loope
push
sub
jmp
mov
in
mov
mov
mov
xor
jg
in
cltd
or
stos
aam
idiv
sub
xchg
out
push
sub
dec
out
incl
cs
pop
mov
lret
jle
loopne
sub
loop
cmpsl
or
cmp
cmpl
in
loope
xor
movl
or
shr
mov
subl
mov
mov
addl
mov
adcl
shrd
shr
mov
cmpl
not
mov
movl
mov
jmp
mov
mov
jb
pushl
pushl
pushl
pushl
push
pushl
call
or
adcl
movl
sub
and
subl
subl
mov
mov
xor
xor
adcl
or
adcl
shl
add
add
add
mov
mov
adc
mov
and
shrd
cmpl
movl
not
mov
mov
jmp
movl
movl
jge
pushl
pushl
push
pushl
push
push
call
sbb
add
or
or
xor
or
add
mov
movl
cmpl
mov
movl
mov
jmp
movl
movl
jg
push
push
pushl
call
add
sbbl
mov
adc
mov
xor
mov
addl
sub
shr
movl
mov
or
mov
addl
xor
shl
cmpl
movl
mov
not
jmp
movl
ja
pushl
push
push
push
call
xorl
xor
incl
xorl
subl
sub
xor
mov
sub
or
cmpl
mov
mov
movl
jmp
mov
jl
push
call
addl
adc
xor
neg
mov
mov
add
sbb
and
mov
movl
mov
and
mov
movl
mov
add
movl
mov
mov
adc
jmp
ret
mov
dec
rcrl
js
out
ja
in
scas
jle
stos
or
jne
xor
iret
cmp
xor
cmpsl
pop
movsl
daa
mov
mov
push
dec
jp
fcoml
cmp
mov
sub
out
or
jecxz
pop
ja
imul
mov
jmp
shlb
and
imul
lret
or
pop
sbb
push
in
jnp
jo
lahf
add
lods
ljmp
push
dec
jnp
stos
in
out
mov
push
sbb
mov
cmc
xor
push
jb
fimull
fcomi
cmp
movsb
sbb
dec
or
in
in
mov
inc
out
xor
nop
xchg
adc
push
jge
adc
jo
add
adc
cmp
pop
clc
push
mov
stos
pop
pop
rclb
into
xchg
dec
stc
and
clc
popf
lods
add
dec
push
shrl
roll
movsb
daa
jp
ljmp
cmp
jmp
jae
jmp
ret
jp
ror
cmp
stos
xchg
stos
movsb
mov
inc
jne
nop
mov
in
mov
xor
jg
cmp
sbb
xchg
fistps
mov
xchg
cmp
lods
ljmp
test
push
leave
dec
mov
jle
scas
fwait
int3
int
sub
hlt
popa
cmp
add
mov
lahf
data16
mov
xor
cmp
push
mov
inc
and
xchg
push
xor
mov
int3
stos
sbb
and
cmp
mov
sub
dec
stos
pinsrw
jb
imul
cmp
inc
lahf
mov
sbb
imul
mov
ljmp
icebp
out
fistps
mov
lret
mov
pop
negb
sbb
inc
lds
sarb
add
call
imul
je
jo
nop
dec
lods
loope
mov
scas
jecxz
pushf
cmc
ret
mov
cwtl
fimuls
test
sbb
jb
jo
mov
pop
fdivs
ss
insl
aaa
lods
xchg
jne
mov
out
adc
lea
scas
xchg
dec
xor
push
cmp
lea
ljmp
add
jno
pop
xchg
pop
push
das
jmp
mov
sub
imul
imul
lods
in
adc
movsl
xchg
stos
addr16
cmp
jb
xchg
hlt
cmp
rcll
adc
loopne
enter
cmp
scas
pop
stos
mov
pop
adc
repnz
ljmp
lods
imul
test
xchg
push
repnz
fdivrs
xchg
push
repnz
test
mov
cli
subl
pop
dec
sti
push
mov
jmp
lds
dec
arpl
dec
pop
dec
adc
sbb
sarl
popf
int
xchg
movsl
mov
inc
or
std
inc
jae
mov
push
scas
xorb
jmp
mov
mov
xchg
jns
jmp
inc
and
xchg
mov
sti
xchg
jb
scas
inc
lcall
popa
jb
fwait
push
inc
xor
loop
test
repnz
sbb
sub
add
push
inc
and
add
cmp
push
dec
mov
xor
rcrl
in
outsl
jns
pusha
pop
mov
xchg
stc
fcmovu
mov
mov
mov
jg
or
push
jmp
pusha
std
pop
mov
push
pop
out
cli
pop
cmp
lds
js
xor
sarl
adc
imul
pop
adc
xor
jecxz
jnp
mov
lcall
lock
xchg
jnp
dec
ret
mov
scas
ficompl
mov
fwait
push
cmp
adc
shr
fnsave
sti
sub
shll
rcrl
gs
mov
jnp
clc
inc
int3
lds
cwtl
sub
enter
sarb
push
cmp
cld
push
pop
pop
push
pop
xor
fs
sub
insl
push
xchg
ds
ret
cltd
mov
aam
pop
pusha
xor
into
dec
sub
xchg
addr16
outsb
cmpl
or
cmp
popf
out
outsl
sbb
imul
or
bound
pop
enter
cltd
or
stc
dec
add
test
or
pop
sbb
out
dec
jecxz
outsb
test
popa
xor
andnps
mov
push
aaa
inc
and
push
adc
sti
loope
mov
in
mov
add
pop
shlb
fs
lcall
jge
add
xchg
test
rorb
jbe
mov
mov
xchg
push
push
cld
jb
lea
lock
cmp
ret
or
fimuls
and
push
cmp
pushf
jle
or
adc
or
mov
sub
sarb
xchg
push
push
add
adc
xchg
push
add
cmp
xchg
mov
pop
je
dec
fidivl
fsubs
push
mov
add
pop
xchg
ret
out
push
push
or
mov
cwtl
popa
adc
dec
jns
or
aam
jb
push
mov
fnsave
inc
add
mov
cs
cmp
mov
rcrl
out
cmp
sbb
cs
cmp
xchg
mov
dec
mov
pop
push
inc
pop
jg
test
testl
mov
pop
pop
push
sahf
gs
pop
pop
lret
sbb
lea
in
pop
stos
push
xorb
pop
adc
stos
sbb
cmp
leave
push
jl
adc
pop
xor
lea
jmp
out
sbb
repnz
ljmp
in
sub
testb
dec
fmul
pop
adc
pmullw
xchg
dec
adc
js
lods
hlt
push
scas
xor
imul
mov
xor
test
loope
cmc
stos
icebp
sbb
mov
mov
ficomps
adc
sub
xor
sbb
mov
outsl
outsl
icebp
es
sub
adc
jmp
loope
pusha
fwait
jb
add
xlat
push
in
inc
or
mov
inc
loope
idivl
cmp
pop
ret
movsb
mov
sub
xchg
lods
sub
addb
adc
scas
lret
cmp
adc
sub
in
mov
out
and
push
inc
push
cmpl
lds
sahf
fimull
xchg
scas
mov
push
adc
fsubr
dec
mov
adc
xlat
insb
dec
pop
jbe
push
cmp
sarl
js
push
jno
xchg
jmp
sbb
stos
push
pop
lret
fsts
iret
lret
push
or
mov
xchg
mov
jmp
lods
jp
scas
adc
xchg
mov
pop
fisttpl
ja
inc
jecxz
dec
ret
sti
sbbb
lret
sub
pop
or
ret
outsl
ret
adc
rorb
push
sbbl
lret
pop
je
int3
pop
and
stc
sbb
cld
int3
mov
dec
sub
dec
jb
mov
lahf
inc
repnz
and
subl
ss
sti
fs
push
jo
mov
adcl
xchg
add
daa
xor
or
or
dec
int
sub
mov
cwtl
xchg
fdivrs
pop
rep
cmc
icebp
push
pop
mov
push
mov
inc
push
xchg
clc
lods
jo
push
inc
cmpsl
cmp
xchg
bound
shl
add
cld
mov
fbld
cwtl
inc
loopne
mov
jmp
push
sbb
pop
imul
popa
mov
dec
cmp
cs
sahf
push
movsb
jbe
bound
imul
mov
sbb
cmpsb
cli
cld
pushf
sbb
outsb
ds
push
sbb
hlt
push
test
and
clc
dec
popf
mov
aam
imul
jne
sahf
jb
cs
push
mov
pop
pop
insl
fldcw
iret
dec
sahf
movsl
test
movsl
pushf
fs
pop
xor
sub
jo
cwtl
xlat
adcl
inc
push
gs
and
repz
sub
add
aaa
cmp
or
movsb
fldcw
add
jbe
xchg
xlat
ljmp
cmp
divb
negb
mov
push
repz
xchg
loopne
neg
loop
fcmovu
jp
pop
mov
cwtl
adc
ja
xchg
dec
lahf
stc
inc
rorl
jnp
jae
pusha
jle
hlt
arpl
pshufw
js
je
icebp
and
adcl
scas
lcall
pop
imul
sbb
inc
out
pop
fs
fwait
mov
jmp
lret
mov
mov
addl
or
mov
fisubl
cmpsb
test
leave
mov
fiaddl
push
mov
in
cmp
shll
enter
ds
add
dec
je
sti
push
sbb
inc
xor
push
cmpb
mov
clc
xchg
iret
inc
cmpsl
sub
fucomi
cld
mov
add
pop
mov
sbb
call
dec
sub
in
inc
fcomps
add
inc
cmpb
pop
scas
movsl
add
sbb
ss
xchg
rcrb
add
cmpsl
lahf
mov
insl
rol
and
xor
leave
shrl
push
xor
daa
sub
inc
dec
inc
sbb
mov
push
push
fdivl
sub
imul
push
mov
movsl
pop
push
push
in
mov
enter
lahf
sub
xor
mov
popa
aas
xchg
xchg
jne
les
lcall
lds
lock
cmp
ret
pop
xchg
orb
movsb
out
push
lea
jae
push
jg
xchg
dec
cmp
in
orl
sti
arpl
jg
cmpb
mov
sub
jbe
cmp
add
jbe
loop
fwait
jns
inc
sub
movsb
aad
lahf
or
add
loope
add
push
sub
ljmp
sub
mov
movsl
sbb
and
insb
mov
xor
call
push
push
ss
push
jl
or
sub
scas
inc
cmp
cmp
sbb
dec
popf
enter
movsb
outsl
outsl
int
insl
push
push
sbb
pop
jle
lock
insl
sbbl
lret
xchg
adc
aam
icebp
jl
push
fldl
je
pop
or
and
mov
lret
inc
rorl
push
jmp
shr
xor
insl
sbb
xlat
dec
clc
mov
and
rol
stc
inc
icebp
jne
sbb
subl
shll
rep
pop
mov
jle
repz
inc
push
mov
in
mov
testb
addr16
out
jp
dec
xchg
sbb
lahf
sub
lahf
mov
addb
orb
jae
outsl
popf
idiv
add
and
pop
mov
andl
mov
xchg
js
push
int3
mov
push
jno
push
mov
cltd
imull
ficomps
sub
mov
xchg
sarl
mov
add
daa
add
dec
inc
pop
push
fwait
scas
call
and
fadds
jbe
in
sarb
dec
mov
roll
mov
leave
aas
push
or
insb
xchg
lock
aam
loop
out
sarb
dec
sub
int
sub
aas
jbe
lcall
fsubrs
push
enter
cltd
sbb
repnz
cmp
cmp
out
nop
xlat
cmp
mov
nop
test
movsl
jae
jmp
pop
or
in
divb
xor
adc
cmp
cltd
push
sub
mov
cmp
mov
add
xor
shrl
jno
fisttpl
cmp
cmp
mov
hlt
mov
cli
iret
pushf
nop
cmpsb
jno
fidivs
inc
push
and
testb
loope
test
lret
and
fstp
mov
xor
pop
int
js
cmp
ds
in
push
hlt
outsl
pop
xchg
push
mov
mov
xlat
add
inc
les
jae
stos
and
mov
ror
imul
scas
sbb
add
enter
lea
jo
inc
ja
fisttpl
xchg
and
push
test
push
cwtl
pop
sti
sti
push
pop
fnstsw
xor
test
inc
pop
xor
lods
mov
or
or
sub
xchg
popa
div
xchg
adc
mov
scas
scas
or
cmp
sbb
outsb
lcall
fsubl
sbb
push
xchg
loope
jp
subb
aam
xor
add
push
dec
jne
xor
add
inc
mov
mov
pushf
in
add
add
pop
fsubp
loop
mov
push
jbe
or
dec
sub
gs
ljmp
sti
pop
mov
mov
sub
lret
fwait
cmpb
arpl
push
push
repz
into
xchg
adc
icebp
cwtl
roll
fistps
or
inc
cmp
jno
mov
std
insl
push
sub
inc
divl
addb
in
sbb
dec
xor
pop
pop
daa
pop
inc
mov
push
js
sub
push
adcl
inc
mov
dec
addr16
xor
and
inc
ss
fldl
mov
int3
in
mov
aas
dec
cs
dec
and
aad
sub
cmp
popa
push
rclb
dec
sbb
iret
les
pop
pop
add
test
stc
jecxz
push
dec
add
and
gs
movsb
adc
ja
pop
jno
stos
and
mov
ret
stos
lret
sbb
test
push
ss
in
mov
mov
aas
sbb
popa
cmpxchg
and
iret
mov
pop
pmulhuw
rorb
enter
pop
add
add
dec
push
adc
call
aas
cmp
xchg
xchg
pop
notb
dec
pop
iret
js
push
mov
pop
aad
ds
dec
push
jmp
sbb
mov
mov
sub
stc
cli
data16
idivb
sub
add
ret
popf
neg
sub
leave
arpl
pop
or
sub
xchg
int
xchg
lahf
je
mov
adc
ja
pop
xchg
pop
lret
js
sbb
dec
adc
adc
fwait
aad
int3
pop
insb
or
push
jbe
nop
jge
dec
loopne
dec
push
jg
push
sbb
aad
xor
mov
aas
pushf
add
cmp
jle
xor
loopne
adc
pop
popa
mov
mov
ret
fidivrl
mov
outsb
jge
test
jno
add
dec
jmp
pop
lea
repnz
sarl
add
adc
push
sub
lret
lea
xor
pop
jle
push
inc
jne
inc
rorb
and
mov
jb
add
jae
jns
inc
add
push
xchg
test
iret
addr16
test
sub
stos
into
mov
add
int3
in
popf
xor
inc
push
xchg
mull
xchg
cmpsb
outsb
ljmp
mov
inc
out
mov
cmp
daa
orb
roll
addr16
add
jae
imul
int
call
push
sub
jb
clc
ss
jns
shlb
mov
mov
inc
fcoml
xchg
sti
jnp
fnstcw
mov
pop
mov
fwait
add
add
jg
jbe
outsl
push
lock
les
ret
sub
cltd
mov
jl
divb
ljmp
mov
stc
icebp
imul
movsb
sbb
ffreep
insl
sbbl
add
mov
pop
jbe
mov
aam
lret
adc
repnz
xchg
sbbb
mov
hlt
xor
dec
cmp
aas
jns
mov
movsb
push
aam
shrl
int3
in
sbb
lds
outsl
aam
dec
xor
jbe
cs
mov
int
cmp
cmp
sub
mov
lods
out
xorb
pop
gs
mov
test
icebp
mov
mov
or
clc
outsl
pop
imul
mov
xor
jns
jns
sub
fwait
loope
push
dec
dec
das
repz
inc
aas
data16
xor
jne
pusha
jmp
inc
or
movsl
adc
mov
pop
shlb
push
mov
neg
and
push
cmp
leave
insl
mov
lret
and
clc
pusha
aam
or
ret
stos
xchg
rcl
sbb
add
xchg
and
sti
mov
imul
push
jmp
pop
push
push
mov
mov
cmc
test
jne
aas
out
xchg
enter
cld
push
out
add
je
push
mov
negb
hlt
xor
jecxz
test
jl
jbe
sbb
or
leave
cli
pop
push
xor
test
jle
sbb
or
cld
out
imul
mov
nop
fwait
ss
jns
mov
xchg
cmp
jp
sbb
mov
mov
adc
sub
xchg
xor
or
outsl
sub
sub
test
jmp
aam
pop
dec
rcl
test
fadds
jl
lret
cmp
mov
fidivrl
jge
pop
sub
daa
rol
lods
xor
sub
lret
jle
ja
mov
jg
ficoml
and
orl
cmp
mov
ds
aad
add
sahf
ds
clc
pop
xchg
stc
xchg
mov
mov
outsl
movsl
jmp
mov
pushf
adc
popf
ljmp
jo
imul
mov
ficomps
fadds
sqrtps
orl
mov
shlb
and
popf
jno
sub
repnz
outsb
enter
pop
mov
rcrb
rclb
adc
add
mov
fidivs
iret
inc
mov
dec
ljmp
inc
popl
cmp
push
lods
mov
sarl
xchg
or
out
movsb
add
and
out
jbe
leave
fbstp
arpl
xchg
mov
aam
lods
sahf
inc
push
out
out
mov
sub
pop
sbb
mov
mov
cmpsb
iret
arpl
aaa
clc
dec
int3
jle
xor
imul
test
pop
rcr
dec
lods
inc
idiv
mov
popa
jnp
add
loopne
hlt
scas
add
int3
imul
lret
data16
ds
test
aam
lea
rclb
pop
aas
bound
sub
out
icebp
imul
fidivrl
lret
out
cmp
adc
sub
push
cmp
push
rcl
fcomip
pop
lcall
lea
and
inc
out
repz
into
and
movsl
in
lret
pop
push
mov
push
xor
outsl
out
pop
cmp
in
into
das
push
int
iret
mov
xor
push
test
xchg
pop
sbbl
mov
fwait
xchg
dec
in
jp
jl
xor
cltd
and
mov
push
or
dec
fincstp
mov
mov
pop
cs
nop
xchg
sbbl
push
mov
jae
movsb
repnz
inc
loop
nop
dec
jb
mov
aam
movsb
loopne
enter
loope
repz
inc
mov
outsb
pop
aad
sarb
jns
test
and
or
ret
add
les
pop
jno
mov
jmp
mov
repnz
xchg
jno
in
pop
ljmp
imul
popl
sbb
dec
js
loopne
sbb
xor
loop
insb
xor
jmp
xchg
stc
or
jmp
push
aas
push
add
adc
mov
push
sbb
xchg
and
inc
pop
sbbl
cmp
decb
inc
das
pop
cmpsb
mov
cwtl
in
jae
bound
cmp
pop
dec
mov
sbb
pop
or
mov
xor
push
sahf
lcall
jle
mov
out
jae
and
add
lods
cmp
lret
dec
adc
in
and
sbb
lret
or
add
in
enter
ljmp
pop
clc
push
lcall
push
arpl
ljmp
fwait
sub
sbb
add
mov
sti
cmp
push
inc
inc
aas
mulb
ss
cmp
jb
aas
xchg
inc
clc
and
repz
push
lods
xchg
push
aam
add
ret
ss
pop
mov
fsts
cmp
jno
adc
rolb
out
repnz
push
lcall
in
fstpt
xor
cld
pop
jmp
lods
subb
addb
and
stc
xor
js
scas
sub
xchg
inc
sbb
mov
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
jmp
in
in
data16
push
sbb
sbb
push
sub
wbinvd
cltd
cmpsb
popa
sub
xchg
pop
filds
sub
cmp
push
imul
outsb
mov
sbb
jb
stos
test
fs
inc
popa
nop
jmp
aam
pop
xor
loop
and
mov
les
mov
mov
out
jns
inc
fisubs
clc
dec
fwait
outsb
xor
xchg
cli
sti
or
pop
sbb
jb
clc
lahf
dec
mov
xchg
cs
fstpt
lods
hlt
test
jmp
push
scas
sbb
stc
dec
adcl
aad
jno
jae,pn
sbb
in
mov
jge
cmp
mov
cltd
add
mov
loope
inc
dec
lret
stos
out
rclb
insb
mull
push
adc
jmp
divb
xor
in
ss
pop
inc
lahf
xor
cmp
jmp
mov
jg
addb
fnstenv
test
sbb
ret
xor
mov
mov
rcrl
mov
mov
inc
xchg
je
sbb
xor
inc
push
add
sub
or
or
cmpsb
push
das
movsl
frstor
inc
xchg
call
xchg
fimull
and
jno
mov
imull
test
adc
push
mov
cmpsb
repz
xchg
addr16
sbb
gs
add
add
xorl
mov
dec
add
stos
mov
inc
push
push
das
aaa
dec
or
out
rorl
adc
xchg
sbb
xor
mov
lock
sub
loope
pop
in
push
out
js
shl
or
imul
xchg
pop
mov
cmc
and
or
das
push
or
xchg
pusha
fsubr
leave
daa
outsb
call
int3
push
sub
jbe
mov
adc
pop
cmp
and
test
push
adc
shrb
or
cltd
test
dec
cmpsb
cli
inc
dec
fs
sbb
xchg
imul
insb
cmp
push
js
mov
xchg
cmp
lods
or
adc
out
pop
insl
lahf
push
inc
in
cmpl
jg
ret
sbb
sbb
test
xchg
outsb
jl
xor
jge
xchg
call
das
fldcw
push
arpl
fsub
es
lock
pop
mov
test
and
negl
pop
jmp
fucomip
sbb
fldln2
imul
sub
lret
push
adc
sahf
or
pop
push
loopne
jnp
fs
jge
add
shlb
inc
outsl
pop
stc
inc
divb
fsts
sub
leave
out
sbb
jno
jl
xor
push
idivl
mov
mov
rolb
out
jecxz
lea
dec
int
fisubs
int3
out
mov
xor
push
lea
pop
aas
jmp
and
arpl
loope
and
shlb
xor
test
test
xchg
mov
fadd
mov
repz
stos
pop
dec
jecxz
mov
dec
fdiv
mov
fisubs
adc
push
faddl
lds
fcomps
add
call
stos
cmp
dec
mov
or
das
adc
and
pop
push
or
dec
jp
cmp
xchg
imul
push
fldcw
sub
ret
flds
and
jecxz
cli
idiv
scas
dec
mov
ret
or
out
repnz
and
stos
test
xor
adc
mov
sti
not
sbb
ds
mov
mov
lcall
or
cmp
jmp
fbld
and
add
or
nop
jo
xchg
mov
jmp
jge
mov
cmp
mov
mov
pop
popf
les
jmp
je
insb
jb
ss
push
xchg
daa
sbb
adc
andl
sbb
imul
xchg
dec
xchg
popf
or
pop
xor
and
cmp
and
lds
aaa
pushf
xor
scas
push
sub
inc
sub
fwait
xor
loope
ret
push
fwait
arpl
int
test
xchg
cmpsl
mov
rorb
xor
mov
inc
mov
mov
inc
pop
adcl
sahf
xchg
leave
pop
leave
adc
jnp
rolb
mov
mov
cmp
mov
xor
or
loop
add
cli
andl
insb
lret
std
test
pop
ret
or
mov
pop
inc
mov
or
pop
inc
xchg
fiadds
jg,pt
push
test
lock
cmp
loopne
cmp
shlb
sub
inc
and
push
outsb
and
sub
shlb
cmp
jp
dec
adc
cmp
popf
push
mov
and
xor
ds
imul
or
lret
test
xor
push
stos
adc
add
cmp
les
addr16
sarl
jmp
xchg
pusha
xor
push
pusha
and
jmp
jno
mov
iret
shlb
sbb
loop
sbb
cmp
cmp
orl
shrb
loopne
aaa
pop
lods
jb
jbe
popf
jmp
sub
mov
or
scas
test
jnp
dec
mov
pusha
mov
lret
shl
jnp
mov
push
out
mov
sbb
ljmp
and
jnp
ret
rcrl
push
xchg
pop
jle
and
es
cmpsb
in
stos
pop
pop
arpl
cmp
and
daa
push
mov
push
cli
mov
ja
idivl
jb
jecxz
repnz
movb
fbld
cltd
aaa
push
pop
pop
push
mov
cmp
mov
ljmp
mov
sbb
into
inc
sbb
add
adc
mov
pop
clc
jbe
into
pop
add
jb
stos
lret
int
xor
sub
jle
lret
and
lret
mov
push
add
int
add
sbb
scas
mov
mov
popf
jo
mov
pop
adc
mov
mov
jmp
in
cld
fisttpl
dec
mov
shll
mov
sub
jmp
pop
cmc
inc
cli
insl
idivl
imul
cwtl
decb
jl
lahf
ret
into
sub
pop
out
shrl
xchg
shrb
mov
xchg
jns
cmp
lret
repnz
sub
aaa
cmc
pop
std
pushf
sti
fistps
add
jns
fsub
adc
push
lds
xlat
cmpl
dec
push
push
sub
dec
jne
mov
and
rep
arpl
jns
adc
or
call
jge
inc
adc
sub
out
cmp
xor
fwait
lahf
fs
outsl
inc
movsb
and
push
lods
push
sbb
mov
cmp
incb
pop
and
adc
ret
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
jmp
outsb
hlt
xorl
xchg
stos
ja
push
mov
shlb
mov
jns
jnp
cld
adc
pop
push
xchg
xchg
pusha
jne
mov
xchg
push
or
fadds
adcl
stos
es
insl
push
xor
xor
push
dec
push
outsb
cld
xchg
jge
xor
mov
andb
orb
mov
inc
mov
ret
jge
add
test
popf
das
mov
xchg
ret
pop
and
sbb
aas
out
mov
xchg
adc
outsb
lea
sbb
mov
outsl
jp
test
icebp
adc
dec
xor
jp
arpl
and
in
mov
jge
and
dec
and
repnz
stos
or
and
cmc
cld
cmp
jmp
shl
pop
and
mov
fcmove
push
adc
mov
add
adc
mov
popf
pop
inc
inc
jg
mov
cltd
push
aaa
mov
loope
xchg
ds
sub
adc
inc
sub
mov
out
xchg
or
cmp
out
cmovae
bound
pop
outsb
mov
jb
mov
mov
dec
mov
andb
icebp
mov
mulb
inc
outsl
mull
gs
jecxz
jle
or
fwait
das
ficompl
push
ja
insb
pushf
xchg
add
xor
nop
add
outsb
pop
pushf
push
xchg
push
dec
data16
rorl
rcll
pop
mov
jl
scas
xlat
mov
inc
fstpt
xchg
push
dec
jno
add
stos
mov
inc
and
loopne
pop
mov
sub
popf
jge
es
pop
push
mov
fnstsw
or
loope
pop
pop
xor
and
jmp
dec
push
stc
lcall
jle
in
jo
push
and
jne
cs
filds
hlt
jo
stc
int3
sbb
fcmovnbe
mov
aam
repnz
mov
les
idivl
cmp
or
stc
stos
sub
rclb
lret
fnsetpm(287
inc
push
push
arpl
ja
inc
jge
pop
popfw
and
movsb
xchg
hlt
movsb
cmp
pshufw
jnp
fidivrs
dec
sub
sti
orl
mov
notl
ss
or
jle
cmp
sti
fsts
flds
mov
das
inc
cltd
das
test
stos
cli
xchg
cltd
dec
pop
shlb
sbb
frstor
test
push
lret
inc
mov
dec
or
mov
je
sub
lcall
jns
mov
bound
mov
xchg
dec
or
lret
jecxz
dec
pusha
sbb
push
and
mov
fs
rol
repnz
fildll
cmp
sub
es
push
sub
push
dec
cmp
add
cmp
div
stc
adc
scas
cs
push
mov
cmp
add
lea
mov
movb
stos
divl
push
pop
push
pop
ss
loop
sub
cmp
add
fimuls
pushf
outsb
push
jbe
pusha
insl
shll
xchg
push
sub
js
nop
das
fwait
int3
jae
dec
std
pop
push
decb
icebp
mov
outsb
mov
and
add
mov
faddl
push
and
cmp
dec
pop
push
aaa
pop
sbb
jecxz
push
jg
es
in
add
jecxz
outsb
shlb
xor
add
xchg
push
cltd
jnp
lahf
enter
ret
mov
adc
mov
jnp
cld
out
pop
cltd
or
push
repz
add
jnp
out
fcmovu
jg
ja
sbb
jae
xor
mov
pop
pop
adc
adc
pop
in
cmpb
inc
sbb
rcl
cli
lods
jo
pop
pushf
cmpsl
out
cmp
bound
mov
in
aas
mov
out
loopne
mov
dec
arpl
push
ficoms
jl
mov
ret
push
push
mov
fisubl
fnstsw
imul
jns
fbstp
mov
push
sahf
outsl
lock
xlat
dec
ds
jp
mov
ljmp
add
sbb
out
sub
jne
lea
pop
rolb
jne
jno
and
xchg
xor
add
cltd
sbb
push
cmp
sbb
dec
test
popa
nop
ficoms
mov
pushf
inc
push
mov
sub
inc
out
and
xchg
mov
jnp
jno
pop
scas
inc
xor
jmp
jae
adc
loope
cmp
jnp
pop
testb
lock
jae
xchg
ja
das
cmp
mov
sub
sahf
push
push
jb
jmp
lods
ja
sbb
dec
push
jecxz
and
xchg
xor
pop
and
add
faddl
iret
or
fsubs
and
sarb
pop
cmp
sbb
xchg
sub
adc
mov
inc
gs
sub
fdivr
aaa
js
bound
ja
push
dec
icebp
movsl
inc
and
and
inc
xchg
imul
inc
dec
enter
adc
ja
pop
sbb
lea
fistpll
cmp
loop
mov
cli
add
out
sub
jb
sbb
mov
push
out
add
negb
push
push
adc
test
shl
popf
js
outsl
add
cmpsb
mov
fbld
filds
mov
inc
into
negl
into
cld
cld
sarb
bound
int3
pop
ret
jb
dec
iret
rolb
mov
sub
lods
imul
daa
call
jb
je
out
pop
fiaddl
stc
punpckldq
pop
dec
sti
fisubs
sub
xchg
das
mov
jmp
or
sub
xor
decb
shll
gs
lret
cmp
lods
xor
sub
ds
cmpsb
cmp
mov
mov
fcmove
popf
hlt
sub
pop
popa
call
push
push
xchg
mov
sub
std
and
push
cmpsl
inc
or
loope
adc
and
push
mov
mov
test
mov
bound
bound
hlt
sub
lds
repz
push
jmp
loopne
fcmove
jns
cmp
push
push
jmp
or
mov
add
jo
jmp
nop
pop
mov
push
lahf
mov
and
divb
insl
pop
and
lock
rcrb
pusha
mov
and
scas
dec
jnp
and
cmp
or
inc
push
and
lock
loope
addb
sub
mov
dec
mov
adc
loope
adc
lock
sbbl
jmp
das
jle
aas
cmp
sub
or
jo
mov
jg
insb
cmp
cmp
repnz
sbb
test
mov
mov
mov
push
repz
incl
insb
xchg
sub
das
ja
leave
stos
mov
fldpi
and
sbb
adc
and
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
add
mov
inc
push
pusha
add
aaa
mov
ja
lret
fucomip
in
in
sub
sahf
xchg
idivl
xchg
xlat
fwait
jl
mov
and
fsubp
pop
cmp
and
sbb
mov
in
outsb
adc
outsb
ljmp
mov
cmp
lods
hlt
ret
cmpsb
sub
into
push
jl
iret
add
sub
dec
lock
push
inc
fidivl
sahf
inc
pop
sbbb
mov
cmpsl
or
adc
mov
lds
orb
ljmp
jne
adc
push
int3
movsl
dec
jae
push
enter
lea
push
sub
fidivrl
mov
jbe
dec
adc
mov
addr16
jecxz
xorl
sbb
xlat
ja
cmp
cmp
sbb
dec
cwtl
cmp
inc
leave
xor
and
inc
xor
shrb
sub
push
pop
rcl
pop
ss
rclb
mov
and
cmp
sbb
dec
stos
fistpl
cmp
mov
adc
cmp
cltd
cmp
mov
mov
jnp
jne
cmp
xor
add
nop
es
dec
push
add
ja
mov
stos
add
icebp
and
push
add
aaa
repz
mov
push
daa
cli
in
jl
jl
cmp
mov
aaa
loope
cmpsl
pop
call
dec
mov
rcl
ret
lea
inc
cmpsl
js
rcrb
out
and
out
jb
xor
fs
mov
rcr
add
clc
jle
push
je
inc
hlt
push
push
xor
jbe
pusha
lcall
mov
mov
in
test
test
aad
iret
imul
cs
sahf
cmpsb
mov
cmp
popf
cld
pushf
aad
daa
in
inc
xor
negl
test
imul
adc
cmp
popa
fcompl
add
xor
out
inc
push
xlat
sbb
scas
andl
aaa
dec
xor
scas
repz
and
pushf
mov
mov
pop
xchg
fnstcw
out
pop
fnstsw
sbb
fmuls
adc
adc
dec
lret
jbe
adc
fsubs
mov
push
push
sbb
les
cmp
imul
pop
mov
loope
or
int3
mov
shrl
add
mov
sbb
add
rcrb
mov
pop
xor
std
maskmovq
mov
rorl
loopne
ret
mov
lahf
jns
dec
outsl
repz
out
sahf
inc
mov
cmp
cltd
dec
adc
movsl
leave
out
in
mov
adc
inc
mov
jae
shll
imul
xchg
dec
and
inc
repz
xor
cmp
mov
lock
adc
call
xchg
push
pop
int
icebp
jl
lds
out
rcrb
rorl
push
es
sub
fdivp
cmpb
inc
jno
mov
insb
jle
popf
mov
arpl
dec
push
nop
dec
xchg
imul
push
lahf
add
or
or
into
mov
adc
push
movsl
mov
imul
cli
cmp
pop
jmp
push
xor
xlat
jecxz
loopne
and
push
ss
pop
not
add
mov
pop
les
jne
test
sbb
jp
scas
mov
sub
insl
add
mov
out
and
test
cmp
add
stc
lahf
xor
xchg
lret
fisttpll
or
cmp
fnstsw
movsb
jp
adc
aam
ljmp
ret
jecxz
ljmp
ss
mov
mov
sbb
in
aas
addb
and
rorb
inc
jg
das
jmp
aaa
mov
and
mov
into
cmp
inc
jnp
xchg
fwait
addl
mov
icebp
adc
fisubl
jbe
les
movsb
sub
das
pop
dec
push
pop
cld
aam
add
das
push
mov
cmovne
and
pop
pop
pop
sti
stc
hlt
enter
fdivl
loope
xchg
bound
pusha
or
out
cmp
mov
sub
or
cmp
dec
jns
jle
xchg
fadds
fcmovbe
testl
lahf
les
mov
sbb
js
stos
mov
mov
pop
sub
aad
mov
xchg
outsb
out
pop
mov
mov
dec
mov
neg
mov
jecxz
cmp
loopne
add
mov
call
jnp
inc
xchg
imul
mov
xchg
arpl
sbb
sbb
rcrb
out
pop
pop
add
js
push
or
fsubrl
data16
repz
popl
dec
sahf
xor
sarb
addb
adc
mov
in
mov
dec
sub
aas
adc
aaa
cmp
ja
test
push
mov
mov
test
xchg
out
mov
sub
daa
mov
adc
dec
lods
xchg
in
out
mov
inc
cmp
scas
add
lcall
aas
and
inc
pop
clc
fs
jge
js
mov
scas
xchg
cmp
mov
jo
xor
out
adc
xchg
lret
stc
cli
pop
mov
push
inc
xchg
insb
mov
cmp
rolb
jo
dec
add
lea
loope
push
rcll
nop
and
iret
push
sbb
cs
inc
fadd
or
cmp
push
les
sbb
movsb
das
sub
pop
and
nop
loope
insl
or
dec
mov
xorl
mov
pop
push
lret
xor
inc
stc
std
aaa
dec
test
mov
push
mul
lret
sbb
mov
insl
nop
sahf
and
mov
aad
cmpsb
xor
bswap
rcll
dec
jbe
mov
pop
mov
std
repz
mov
mov
repnz
xchg
pushf
cli
jg
popf
adc
xchg
jbe
stos
sub
pop
test
inc
xor
insb
xor
fisttpl
sahf
repz
xchg
in
mov
and
lcall
popa
mov
push
pop
mov
pop
lods
dec
cwtl
xchg
lods
clc
aam
sub
scas
cli
cld
leave
sub
cli
xor
jg
out
je
sub
in
aam
scas
jae
mov
pop
xor
pop
ffree
nop
push
xor
adc
lea
cs
in
pop
and
ror
cmc
shl
push
and
push
sub
int3
test
lea
fnsave
dec
nop
incl
sub
mov
jp
aam
mov
shll
cmpsb
out
add
int
cmpsl
into
and
cmp
repz
fdivs
test
imul
or
lods
jl
fistps
repnz
fdivs
scas
lock
in
sarl
cli
pop
sbb
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
orl
push
cmpb
mov
adcb
sets
imul
push
jl
and
daa
and
out
arpl
sarb
out
mov
cwtl
sbb
mov
dec
inc
cmp
jmp
js
je
test
xor
or
and
mov
lods
test
insb
mov
enter
pusha
cli
sti
mov
push
push
xor
mov
das
cmp
imul
jecxz
fisubrl
lds
xor
lods
jae
ficompl
jne
fsubs
lret
inc
lret
sbb
out
call
lea
test
rolb
int
cmp
lret
out
lret
lahf
daa
lods
push
push
loopne
mov
addr16
ja
jl
and
pop
and
jns
fidivs
pop
jnp
mov
jmp
iret
in
sbb
cmp
out
pop
xchg
sub
mov
adc
cmp
in
jmp
stos
stos
pop
adc
pop
xchg
mov
in
ljmp
stc
cmp
mov
loopne
mov
popa
jp
lret
mov
pop
push
xor
mov
pop
mul
mov
lods
xchg
adc
cmp
push
or
mov
dec
fdivp
push
mov
pop
movsl
or
outsb
sahf
leave
push
imul
cmp
adc
sahf
rcll
orl
mov
ret
pushf
ss
sbb
iret
adc
rcll
dec
cmp
inc
sub
sub
fdivr
and
int3
test
gs
lds
fildl
stos
pop
or
testl
test
push
repz
xchg
adc
jle
push
xchg
push
loopne
inc
mov
filds
pop
xor
jge
mov
cmp
inc
mov
sub
incb
insb
subb
addr16
dec
add
shll
lds
add
addb
lock
dec
loop
movsb
inc
xorb
inc
mov
xchg
add
test
outsl
lods
jae
cmp
xchg
gs
mov
in
sbb
inc
ret
mov
push
leave
mov
iret
iret
call
sbb
fs
daa
cli
bsf
enter
fmul
ret
jbe
jp
jns
fdivs
mov
mov
cmp
scas
call
push
das
mov
ljmp
xchg
adc
stc
test
xchg
mov
into
scas
cmpsb
negb
popf
pop
aam
push
add
sbb
jbe
fwait
cmp
inc
mov
ds
jno
in
dec
out
mov
mov
ja
ja
test
adc
or
push
push
add
fdivl
scas
pop
pushf
mov
scas
mov
aas
shrl
ret
es
ret
loope
and
scas
xchg
dec
lcall
out
cmp
xor
stc
stc
push
and
or
test
negl
or
inc
ret
fldl
repz
cmp
out
cmp
lret
inc
mov
sbb
xchg
mov
dec
pop
test
mov
test
sti
dec
xor
jo
popa
rclb
xchg
out
xor
dec
sub
aas
add
sbb
sub
mov
add
inc
jl
sub
rolb
dec
jmp
out
adc
dec
fcoml
cmp
inc
mov
mov
cmp
stos
fiadds
push
inc
xor
push
mov
call
dec
scas
push
sub
out
cmp
divb
loopne
test
adc
adc
inc
xor
xchg
xor
add
fistps
lds
stos
les
sti
fs
jne
add
sahf
cmp
adc
dec
push
dec
aaa
imul
rclb
sbb
sub
or
jg
add
add
in
lea
sbb
xchg
test
dec
int
add
dec
rcll
cmp
ljmp
inc
add
gs
adc
cmp
sbb
sbb
dec
push
hlt
call
or
movsb
add
pop
lret
xchg
test
lea
cltd
inc
cmp
test
imul
je
mov
mov
push
jg
fs
mov
jnp
lcall
mov
sub
std
push
bound
lds
pop
xor
pop
add
push
rcrl
enter
icebp
jge
out
xor
push
mov
jns
jae
les
cmpsb
lret
cwtl
xor
out
and
icebp
clc
or
xchg
fisubrs
rcpps
and
fists
es
leave
cmp
cld
or
dec
jo
hlt
cmp
js
xchg
cs
mov
adc
mov
int3
outsl
adc
mov
mov
sub
inc
test
mov
stos
push
mov
movl
xlat
adc
scas
fbld
test
cmpsb
andb
shlb
loope
imul
bound
arpl
out
xor
in
xor
push
push
enter
in
push
push
jno
cmp
add
jp
aas
ficompl
loop
loop
adc
aam
mov
jge
sub
sbb
imul
mov
adc
mov
repnz
lods
imul
sbb
rolb
jp
dec
sbb
push
pop
cmp
jne
push
mov
mov
cs
mov
out
into
fwait
xchg
mov
mov
sbb
push
or
sub
rcrb
adc
pop
adc
mov
dec
cmpb
outsl
fists
sahf
andl
lds
enter
sub
sbb
inc
stos
fists
das
pop
xor
xor
and
push
pop
push
jmp
scas
cwtd
xchg
mov
iret
sub
repz
xchg
popf
jno
aaa
xchg
and
xchg
gs
sarb
pop
cmpsb
outsb
pop
repnz
mov
mov
and
subb
dec
ja
insb
repz
out
mull
mov
push
or
sub
xchg
mov
ret
into
adc
cmpsl
test
stc
lret
adcl
out
pop
shrb
sbb
nop
push
outsl
in
or
dec
add
dec
sub
pop
adc
sub
in
jg
pop
fstl
jne
push
into
xchg
cwtl
arpl
sbb
mov
lock
scas
xchg
cmp
mov
push
int3
mov
ucomiss
test
clc
mov
jbe
std
mov
in
add
fmulp
inc
imul
mov
xor
pop
insb
loopne
xchg
addr16
clc
sbb
sub
mov
or
mov
add
jb
out
lret
rol
loope
divb
mov
in
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
jmp
mov
and
setns
dec
pop
mov
ja
and
dec
mov
rorb
daa
out
inc
lea
jmp
insb
movb
pop
push
hlt
pop
lret
mov
mov
pop
cld
js
sbb
outsb
ret
fldl
mov
jle
adc
sahf
xor
jnp
jecxz
test
jnp
sbb
stc
movsb
pop
mov
or
dec
or
aad
fcmovb
mov
adc
hlt
test
mov
xor
mov
out
notb
shr
test
sub
addr16
xor
gs
lret
push
cli
xchg
jge
ret
mov
dec
jg
dec
aam
jge
int
sti
inc
jno
push
loop
or
push
adc
mov
mov
sub
xor
insl
add
jae
sub
pop
int
or
mov
imul
adc
and
sub
xor
jle
cmp
mov
rcll
or
daa
xor
mov
out
loope
sub
xchg
and
ret
inc
pop
adc
fistl
imul
adc
jns
lcall
and
and
out
xchg
test
jl
sbb
jbe
xchg
outsb
fs
sarb
movsl
cmp
mov
sbbb
sub
das
sub
pushf
xor
mov
add
dec
cs
aad
mov
icebp
pop
xchg
mov
je
adc
jo
testl
mov
rcr
mov
mov
sbb
fdivr
aam
hlt
jle
mov
push
orb
div
in
test
xor
mov
and
inc
test
mov
xor
inc
stos
adc
pop
outsl
stos
test
scas
inc
int
hlt
adc
dec
into
sti
lods
cld
mov
xchg
lods
aaa
movsl
dec
call
inc
adc
lea
jg
out
mov
gs
int3
pop
mov
cmp
ja
jp
xor
aas
out
push
pop
dec
inc
out
push
inc
int
adc
sub
stos
das
push
add
inc
stos
mov
inc
cmp
cmpsb
xchg
jmp
in
jecxz
jne
adc
lahf
sub
jle
je
sbb
xor
push
inc
push
push
xchg
adc
xchg
cmpsl
cld
inc
data16
cmp
cmp
rcll
add
idivl
sub
ret
sub
xchg
xchg
jnp
mov
mov
addb
arpl
and
int3
cs
xorb
pop
test
scas
add
fdivrs
ss
mov
sbb
lds
push
imul
inc
fildl
jae
pop
cmp
and
test
jo
aaa
xor
sub
rorb
or
out
clc
mov
outsl
push
push
mov
nop
cmp
fst
push
or
mov
dec
add
daa
inc
sub
movsl
push
ret
mov
sub
push
xchg
je
jmp
mov
sbb
fwait
mov
into
pop
mov
and
rep
test
adc
stc
add
loopne
pop
add
xor
sbb
adc
push
pop
popa
mov
mov
int3
xor
in
and
jb
pop
fwait
pop
testb
test
cld
add
movsb
adc
ret
and
cmp
rclb
mov
mov
jmp
clc
xor
fistpl
shll
movsl
push
imul
lahf
or
mov
popf
or
pop
inc
push
mov
shlb
push
xor
mov
mov
fsubrp
pop
sub
fwait
mov
popf
leave
inc
scas
les
test
xor
dec
cwtl
div
test
aad
jecxz
mov
mov
cmpsb
loopne
jo
and
aad
push
mov
mov
cmp
xor
out
in
xlat
filds
aad
jno
mov
js
dec
hlt
cmpb
jbe
in
inc
push
sub
movsl
jmp
xchg
mov
mov
push
jae
movsb
stos
mov
popf
in
or
sub
sbb
jp
push
in
icebp
pop
addb
pop
in
mov
pop
fidivs
or
mov
aad
hlt
fwait
gs
jecxz
repnz
lcall
cmp
pop
inc
js
outsl
lcall
ffreep
dec
lods
inc
sub
nop
jl
jge
jne
mov
fs
or
sti
movsb
fistl
xchg
je
stc
lds
ret
stc
hlt
out
or
push
pop
mov
pop
mov
dec
pop
pop
mov
or
jecxz
mov
ret
mov
sub
pusha
into
xor
insl
xchg
push
in
mov
inc
into
nop
mov
jae
jo
mov
sub
hlt
test
cld
mov
call
push
mov
std
cmpsb
push
fstpl
shrb
in
cmc
imul
daa
pop
lret
fsubrp
pavgb
lret
push
adc
xchg
push
mov
lret
inc
pop
pushf
arpl
sub
dec
mov
enter
mov
repz
add
sbb
add
iret
or
xor
cmp
xchg
pop
xor
add
push
sar
pop
mov
xchg
outsb
clc
xchg
notb
cli
pop
sub
fisttpll
insb
enter
cmc
xchg
mov
mov
dec
leave
push
shld
fimull
sub
mov
orb
add
pop
lret
clc
dec
ror
bound
scas
leave
cmp
pop
je
mov
xor
aas
imul
mov
scas
fisttps
sbb
push
xor
or
jb
inc
adc
jmp
shrl
sub
aad
loop
and
fstpt
icebp
stc
jmp
mov
sahf
mov
out
int3
in
insl
mov
ljmp
mov
dec
adc
and
cltd
lods
loope
push
je
rcrb
leave
clc
adc
js
stos
rcrl
outsb
imul
lds
stc
xchg
out
in
sub
into
dec
jae
pop
push
iret
cmp
rolb
leave
enter
in
lea
inc
mov
xor
mov
push
push
xor
inc
inc
lcall
std
fdivp
and
adc
test
xorb
xchg
sbb
arpl
shll
inc
addr16
into
xor
sti
enter
push
lea
ret
ror
pop
push
movsb
fwait
aam
test
imul
lea
adc
cmc
inc
mov
xchg
lret
cmpsl
sub
rorl
aaa
inc
pop
lret
and
add
cmp
loope
sbb
rcrl
adc
andl
sub
repnz
mov
aas
shrl
shlb
aam
rcrb
pop
mov
mov
fists
xor
scas
xor
mov
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
jmp
ret
fwait
mov
and
lods
mov
ja
dec
test
dec
pop
pop
inc
lret
arpl
or
icebp
mov
popa
cld
int3
xlat
dec
loop
adc
xchg
mov
daa
sarb
jno
xor
pop
cmp
mov
stos
jo
shl
je
adc
or
cmp
pusha
xor
jno
mov
mov
movsl
pushf
and
and
cmp
arpl
clc
sbb
sub
mov
loope
xor
and
xchg
dec
push
and
mov
inc
or
aad
sbb
inc
pop
xlat
and
mov
push
mov
mov
ss
std
movsbl
into
test
adc
test
adc
xchg
je
gs
jbe
dec
and
jns
cmp
cwtl
pop
inc
xchg
mov
insl
je
ret
pushf
mov
cltd
push
dec
test
push
pop
dec
push
and
movsb
inc
adc
push
inc
jle
mov
imul
push
sbb
out
sub
mov
out
jo
mov
pcmpeqd
mov
push
or
mov
mov
movsl
les
pop
popa
push
inc
stc
fcom
and
ss
dec
scas
fwait
xchg
out
in
mov
mov
push
icebp
and
arpl
pop
cmpsl
pop
push
fs
lock
stos
or
pop
movsl
clc
je
jbe
iret
add
imul
cli
gs
mov
mov
outsb
dec
push
cmc
xlat
addl
xor
mov
adc
add
xchg
dec
add
inc
mov
scas
rcrb
insb
jmp
sub
test
call
pcmpgtd
push
cmp
test
mov
mov
jo
out
daa
repnz
adc
test
push
data16
adc
fucomi
adc
inc
hlt
jp
jo
sar
cld
test
fdivrp
mov
outsb
aas
js
pop
adc
cmpl
and
daa
jg
or
popf
outsb
cmp
dec
xchg
sbb
xchg
cmp
sti
jecxz
ret
fiadds
push
nop
icebp
movsl
shll
xchg
and
mov
pop
rcll
das
iret
jmp
mov
or
jecxz
call
outsb
and
scas
cmp
inc
les
das
test
lcall
in
xor
popa
fdivs
in
sahf
add
mov
stos
sbb
push
repz
fstl
mov
sbb
mov
mov
add
adc
sar
outsb
sbb
jns
out
cmp
adc
xchg
fcoml
and
lods
leave
popa
mov
jg
add
jne
dec
lret
cmpsb
das
pop
jg
je
mov
lret
mov
andb
test
pop
dec
pop
add
jno
cwtl
mov
mov
test
stos
xchg
mov
jb
adc
mov
jbe
rclb
int3
xchg
popf
pop
bound
outsb
xchg
and
addr16
push
je
in
test
sub
fisttpll
out
inc
call
lods
inc
ds
push
inc
xor
incb
scas
add
aas
push
inc
push
dec
add
cmpsb
sub
or
mov
imul
repnz
xchg
jp
dec
inc
shrb
mov
jns
lahf
clc
movsl
lahf
adc
pusha
dec
xchg
test
loopne
mov
fxch
mov
mov
ret
pop
aaa
loop
cmp
push
fistps
fsubr
push
addr16
aas
pop
lds
ljmp
test
stc
mov
outsb
into
pop
jmp
hlt
popf
popa
push
add
mov
in
add
inc
leave
push
leave
dec
add
popa
or
add
cmp
add
nop
cmp
unpcklps
inc
add
mov
xor
cmp
pushf
outsb
arpl
jno
arpl
jno
jne
dec
icebp
fcomip
cld
inc
lret
lahf
adc
mov
shll
in
lds
cmp
adc
mov
push
sbbl
adc
mov
adc
cmpsl
std
xor
jp
mov
inc
addl
ds
or
mov
jae
sti
adc
sub
in
enter
sbbb
add
aad
mov
mov
imul
mov
or
faddl
test
out
mov
add
jge
call
sbb
mov
data16
mov
lods
ret
test
lods
out
inc
xchg
loop
rcrl
mov
jnp
imul
in
pop
mov
mov
push
mov
rclb
jmp
xor
test
cmp
rorb
data16
add
add
out
jae
and
mov
xchg
cltd
and
outsl
xchg
fwait
andb
cli
dec
sub
jns
in
mov
inc
dec
pop
adc
ljmp
movsb
mov
inc
cmp
push
test
stc
or
loope
pusha
mov
insb
das
addr16
mov
push
jne
notl
cmp
sub
nop
insl
inc
push
mov
in
push
dec
mov
jg
sub
bound
cwtl
sbb
ja
arpl
pop
movsl
aam
pop
sbbl
push
cmp
or
adcb
cli
xor
hlt
mov
js
roll
aaa
jge
jnp
out
xlat
mov
adc
lahf
push
imul
shll
push
scas
je
sub
mov
insl
and
cmpb
cmp
imul
das
mov
cmp
adc
mov
pop
or
mov
sbbl
lahf
xor
pusha
push
ror
or
sarb
fs
rcrl
jne
dec
jg
test
daa
test
and
sbb
enter
jns
sbb
pusha
movsb
addr16
sub
mov
shrb
into
xchg
nop
notl
lahf
lret
sar
mov
notb
add
rcl
cmc
cmp
jbe
shrl
mov
fistps
nop
icebp
es
jae
sub
jae
fmuls
mov
ss
out
cs
frstor
not
jne
pop
jl
xchg
repz
mull
mov
fldt
mov
or
scas
xor
xchg
fidivs
pop
cli
pusha
movsl
rorl
gs
and
xchg
cmp
bound
xchg
mov
mov
xchg
js
cmp
je
jge
jne
jg
mov
or
ficomps
repz
jmp
mov
sbb
or
mov
sub
arpl
ret
cmp
inc
out
xchg
popa
xor
in
aam
mov
push
xor
dec
das
jle
xchg
lock
std
dec
lds
sarl
pop
jmp
in
lods
loope
sti
clc
mov
mov
mov
jmp
aam
inc
test
addr16
add
pop
in
dec
push
outsl
ja
rclb
cmp
adc
jnp
fstpt
add
cld
lods
pop
inc
push
add
popa
and
pop
fcom
xchg
pop
adc
jns
mov
push
mov
mov
in
cmp
cmc
lret
and
dec
mov
jmp
pop
adc
rcrl
or
push
add
repz
ret
inc
xchg
xor
pop
xchg
inc
loopne
mov
sbb
dec
add
and
lds
cmp
pop
add
mov
mov
cmp
push
pop
push
lret
cmp
int
lret
out
cmp
inc
pop
rcrl
push
adc
and
orl
push
dec
notl
in
cmp
mov
cltd
jle
and
cwtl
sti
rclb
inc
fistpl
iret
ss
pushf
ss
jnp
cmp
and
xor
push
add
mov
test
addr16
cwtl
in
jbe
push
scas
test
fbld
pusha
push
cmp
fistps
pop
fstps
rorb
out
mov
adc
push
pushf
and
out
popa
cs
andb
add
dec
mov
or
loop
push
das
dec
in
add
xchg
test
mov
mov
xchg
add
jne
lcall
outsl
push
xchg
repnz
pop
dec
lods
add
add
mov
das
mov
jns
std
in
ss
data16
cmp
push
fwait
inc
cli
js
jo
mov
cwtl
sub
xchg
push
xor
sarl
push
aam
push
ficompl
lds
shl
pop
push
notb
adc
adc
aas
bound
enter
aaa
popa
add
shrb
lods
je
int3
inc
cmp
cmp
pop
adc
adc
mov
jae
add
push
sahf
mov
mov
push
mov
neg
inc
sub
hlt
mov
clc
mov
push
cmp
xchg
std
in
sub
or
adc
push
push
mov
clc
mov
sub
inc
pop
stos
aas
hlt
popa
pop
mov
jns
fxch
test
decl
pushf
mov
das
je
jp
add
outsw
popf
fistpl
adcl
jle,pt
add
pusha
cld
das
dec
repz
icebp
mov
repnz
xchg
xor
fwait
gs
fs
dec
mov
cmp
scas
insl
subb
push
and
push
cmc
xor
rcrl
fldt
mov
stos
jnp
push
jmp
add
push
mov
bnd
pop
call
es
in
pop
loope
icebp
xor
nop
cli
add
ror
repnz
mov
mov
xor
pop
and
lock
xor
aaa
sbb
sub
daa
addr16
jg
mov
xor
xorb
fdivrl
test
repz
aas
pop
mov
sub
das
mov
mov
or
jl
es
and
stc
jmp
aas
int
and
mov
scas
mov
adc
xor
cld
and
decb
movsl
mov
dec
mov
add
arpl
outsb
or
inc
mov
lret
hlt
nop
fwait
push
push
into
fmuls
jmp
fstpl
into
sti
subb
outsl
xchg
push
icebp
ljmp
jecxz
testl
repz
xor
pop
mov
hlt
mov
cwtl
stos
pop
inc
scas
loop
pusha
shr
xchg
subl
adc
insl
aam
std
lret
fprem1
ds
aam
and
sbbb
cli
lret
or
ret
je
jne
in
dec
nop
mov
stos
mov
pusha
push
mov
dec
adc
push
pop
sbb
arpl
dec
inc
add
mov
xchg
inc
push
or
sti
ss
fisttps
mov
fcompl
cmp
fistps
adc
push
add
add
inc
xor
insb
cmp
lods
push
dec
xchg
scas
in
dec
xchg
jns
jae
sub
mov
aam
rcrb
cli
jns
sbb
idiv
aam
and
test
lock
sbb
leave
inc
mov
popf
mov
mov
jge
jmp
test
adc
or
xchg
aam
adc
jge
shll
xchg
mov
ficoms
outsl
stc
ret
rol
adc
hlt
in
pop
sub
mov
dec
inc
and
cld
mov
mov
test
sub
mov
out
mov
mov
movsb
xor
mov
test
pop
push
std
pop
out
push
xchg
cwtl
sub
sbb
insl
xchg
mov
push
push
lahf
inc
rcrl
pop
push
call
and
sub
mov
jnp
and
mov
and
into
adc
repz
cmp
inc
xchg
xor
mov
sbb
fistl
roll
out
test
xlat
xchg
add
mov
mov
jae
jl
mov
mov
lret
repnz
xchg
fsubs
insb
push
add
sbb
repz
sarl
outsb
int
mov
dec
mov
imul
mov
in
mov
lock
sbb
ljmp
pop
jbe
jae
add
xchg
mov
iret
inc
lahf
sub
push
cltd
out
into
sbb
fmuls
inc
test
insl
inc
into
cmp
stc
cmp
sub
or
push
outsl
ljmp
inc
mov
cmp
jae
addb
into
mov
sbb
cmp
lret
aam
insl
mov
inc
mov
les
pop
imul
std
fisttpl
xor
cmp
sbb
sub
mov
loop
subb
add
pop
ret
jecxz
loope
cmp
pop
inc
jnp
arpl
and
lea
lret
fimuls
sbbl
push
push
repz
push
andb
mov
lds
sahf
adc
push
push
in
cmp
xchg
add
push
mov
xchg
dec
ja
pop
fisubl
popf
inc
push
cmp
push
mov
mov
insl
jne
scas
les
lret
xor
sbbb
xor
mov
mov
pop
in
push
inc
subl
inc
adcl
mov
xchg
pop
jo
push
sub
ljmp
or
inc
inc
subb
adc
push
arpl
fisubl
sbb
shlb
fs
jb,pt
mov
add
mov
aas
aas
dec
dec
addr16
repz
push
shl
xchg
clc
lahf
sub
jle,pt
shll
pop
bound
sub
mov
mov
mov
shr
mov
scas
push
shll
and
cmp
mov
push
or
inc
arpl
push
xchg
insb
in
std
imul
enter
add
loopne
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
jmp
adc
cmp
ret
aam
mov
stc
mov
pop
ja
sbb
lret
loope
aaa
mov
jmp
xor
and
in
add
mov
inc
lcall
adc
popa
push
std
shll
pushf
lcall
dec
jnp
adc
jl
inc
cmp
adc
jl
ja
fstpt
into
repz
arpl
sbb
fisubrl
xchg
mov
push
add
aam
scas
movsl
cmp
dec
shr
fcmovu
jge
push
fwait
es
add
push
pop
xchg
cmp
mov
mov
sub
pop
push
jae
jge
rolb
adc
push
lds
pop
xor
add
popa
push
fwait
ret
mov
nop
movsb
nop
xor
add
jno
fstl
pusha
inc
add
loope
hlt
rcll
mov
dec
cld
dec
and
loop
sub
rolb
sbb
xor
xchg
push
mov
pusha
jcxz
add
push
mov
pusha
popf
mov
pop
sub
jnp
add
or
sbb
js
roll
mov
xchg
xchg
loopne
sbb
xchg
dec
adc
repz
jo
aaa
dec
testl
sarl
mov
push
iret
gs
jnp
out
aas
arpl
mov
fadds
or
and
incb
dec
add
sub
xlat
sbbl
cmc
adc
stc
push
push
sbb
mov
test
fcoml
sbb
push
push
sub
cmp
dec
and
jge
aaa
out
xor
aas
fstpt
icebp
mov
adc
jns
pop
dec
lcall
cmp
xor
push
jp
andl
mov
xor
imul
inc
push
cmpsl
lock
rclb
add
xchg
sub
dec
jecxz
loope
scas
lods
lods
sbb
lahf
les
jb
repnz
into
nop
jmp
out
fsubs
loope
or
shl
lock
sub
call
nop
jne
push
ss
in
jbe
fidivrs
cs
push
mov
dec
imul
mov
testb
stos
xlat
stc
cli
dec
add
dec
mov
and
pop
jnp
sti
xchg
outsb
cmc
xor
or
addr16
mov
mov
das
out
fnsetpm(287
insl
aaa
inc
mov
in
mov
push
repnz
add
mov
or
loopne
xchg
adc
out
adc
loop
lods
wbinvd
xchg
pop
cwtl
mov
mov
dec
sbbl
xchg
xchg
jecxz
mov
dec
aam
mov
iret
and
stc
stos
inc
lock
test
dec
push
shll
loopne
popf
jo
int
mov
dec
mov
stos
jb,pn
adc
in
mov
jle
mov
sub
push
jo
ret
pop
dec
xor
cwtl
jecxz
out
inc
sub
out
les
add
lds
in
imul
and
lock
and
cmp
mov
xor
imul
inc
call
cmp
mov
out
comiss
mov
mov
mov
push
mov
dec
fiaddl
in
add
insb
sbb
pop
and
inc
or
ljmp
lret
mov
push
mov
jb
data16
loope
pop
bound
push
dec
dec
or
push
xor
ror
push
jbe
andb
add
std
dec
dec
ss
xor
mov
cs
xor
xchg
sub
push
ljmp
negl
mov
pop
fldt
fcompl
hlt
inc
cli
pop
add
pop
sarl
dec
out
xor
les
or
nop
aad
xchg
dec
frstor
test
mov
xor
sbb
es
adc
jle
popf
sbb
pop
and
push
cmpl
mov
cli
bound
adc
fsubp
sub
fisttpl
aas
mov
sub
pop
int3
and
push
sub
test
sbb
in
mov
mov
adc
ficoms
test
out
roll
mov
mov
jg
jns
and
stc
rclb
fnstsw
mov
jl
lea
push
testb
shlb
jp
mov
sbb
pop
add
dec
mov
inc
ficomps
mov
mov
jmp
sahf
fcompl
sub
lds
sahf
xor
adc
shrl
xchg
mov
jo
inc
cmp
xchg
sti
jno
fstp
push
outsb
push
xchg
bnd
daa
mov
ss
cmp
inc
pop
repnz
in
or
jecxz
and
fdivrl
testl
and
sbb
jb
hlt
dec
mov
add
icebp
dec
sub
fsubrp
mov
dec
jp
and
sahf
in
scas
mov
sub
outsl
xchg
push
mov
sbb
dec
lret
mov
inc
jae
add
mov
imul
dec
mov
imul
add
dec
popa
jno
repz
outsb
repnz
or
les
pop
or
out
or
add
push
mov
insl
cmc
cs
out
insl
shl
test
out
push
ja
das
lods
ret
loop
or
jbe,pn
dec
repz
adc
ss
xchg
fs
lahf
adc
scas
add
daa
xchg
int
scas
enter
es
out
mov
push
jne
loope
loope
mov
cmpsb
int3
mov
and
push
push
test
adc
lcall
fcomp
setno
stc
adc
pop
movsl
dec
leave
sub
mov
incb
or
stc
lea
out
push
imul
pop
call
int
sub
fisubl
adc
fists
aaa
push
or
sarb
cmp
cmc
xlat
lcall
adc
je
xchg
wrmsr
mov
outsb
popf
pop
xor
bound
push
mov
jle
push
and
mov
shrb
sbb
add
add
sub
int3
cmp
adc
lret
in
imul
call
adc
mov
nop
ja
imul
stos
cltd
fisttpll
pop
out
rcl
xchg
jb
lret
dec
pop
mov
cld
fmull
or
sti
cmpsb
push
push
call
imul
mov
mov
sub
mov
adc
xchg
cmp
xchg
ret
shlb
data16
add
mov
or
in
add
and
ds
arpl
or
cmpsl
jg
mov
xchg
xchg
pop
insl
xchg
dec
pop
and
mov
in
mov
les
jle
cmp
into
cld
int3
bound
subb
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
jmp
sbb
and
dec
out
xchg
ja
push
mov
or
loope
xchg
in
mov
test
mov
enter
adc
push
jno
push
mov
mov
std
faddl
stos
jo
push
jmp
jp
cltd
pusha
shlb
mov
setno
xchg
testb
arpl
aas
push
sub
pusha
ljmp
push
out
out
sbbl
add
das
sub
sbb
fcmovnu
pop
jo
xchg
loopne
lock
xchg
fcmovb
aas
je
and
inc
loope
xor
js
das
sbb
cld
add
mov
lret
xchg
pop
adc
push
mov
push
js
es
mov
pop
leave
lods
push
adc
in
xlat
pop
add
cmp
adc
mov
stos
and
fdivrl
popf
hlt
mov
mov
loopne
sbb
inc
inc
adcl
xchg
mov
into
pop
rclb
pop
sbb
cs
pop
sbb
loope
lds
add
insb
addr16
es
sbb
stc
jp
mov
push
cmpsb
test
aad
int3
cmp
xor
in
mov
push
pop
add
lods
or
dec
scas
mov
test
ret
test
and
adc
in
lea
pop
cmp
insb
lods
xchg
fsubl
add
push
mov
xchg
std
cmp
dec
and
lcall
sbb
aam
jmp
inc
jp
inc
ja
pushl
sar
pop
mov
les
in
adcl
xor
pop
cwtl
fsubrl
cld
leave
test
fildll
dec
xor
clc
out
popf
pop
inc
daa
rcrb
cmpsl
dec
adc
sub
jno
out
in
dec
jb
add
pop
pop
jbe
popa
cmpsl
lods
sbb
daa
add
imul
cmp
in
adc
adc
mov
sub
lcall
xchg
ds
xchg
test
sbb
or
lods
cmpsl
jmp
sub
mov
and
fst
pop
aam
out
les
outsl
xor
push
add
scas
xchg
push
adc
repnz
adc
clc
or
or
xorl
and
xchg
pop
sbb
mov
add
or
sbb
jns
rcrb
add
push
rcr
repnz
jbe
rcl
fidivs
sbb
movsb
mov
lock
in
jle
lahf
ljmp
dec
arpl
jne
data16
das
outsb
xchg
push
movsb
jae
mov
in
adc
fbld
and
arpl
xchg
js
xor
popf
hlt
lahf
dec
adc
adcl
mov
js
pop
sub
loope
push
loopne
ss
pop
jo
adc
mov
inc
cld
add
sub
xchg
push
orb
sbb
or
arpl
and
add
gs
cmp
fnstsw
int3
pop
fcoms
and
xchg
or
shlb
jb
aad
mov
movsb
loop
out
xchg
and
cmp
push
mov
jns
jle
outsb
xor
adc
mov
or
add
mov
mov
xchg
call
lods
mov
jp
push
xchg
rcrb
xor
fcomps
in
lcall
inc
shll
dec
cmp
movsl
icebp
xacquire
push
sahf
dec
mov
push
leave
nop
dec
xor
pop
in
popa
loop
mov
xlat
mov
or
ljmp
insl
movsl
xor
push
sbb
scas
jo
dec
cwtl
mov
mov
cmp
and
jmp
xor
hlt
fisubs
or
sbb
mov
hlt
aam
movsb
jns
hlt
fiaddl
nop
mov
or
or
bound
adc
in
subl
jge
jle
sti
test
pop
dec
mov
sbb
and
jo
inc
js
mov
dec
cmpsb
loop
push
push
ret
cmp
mov
les
add
lret
cmp
jnp
lods
stos
ss
hlt
add
sub
cmpsl
movsb
repz
jmp
sub
push
fs
idivb
pop
push
pop
push
mov
xor
shll
out
xchg
sbb
cmc
jmp
sbb
jmp
fsts
mov
daa
fdivl
push
xor
mov
lret
es
dec
jmp
mov
adc
push
sarb
ret
pop
ret
in
push
movntq
out
jbe
push
cmp
ret
add
lock
mov
out
pop
jmp
and
mov
mov
mov
roll
ret
fcomps
ret
insb
in
pop
mov
scas
push
movsl
add
aaa
pusha
insl
lods
in
xchg
movsb
inc
imul
sbb
into
shll
or
iret
pop
jbe
push
or
outsl
mov
or
bound
lock
add
and
push
andb
mov
or
mov
dec
mov
mov
add
aaa
mov
jmp
xchg
out
gs
jg
cmpsl
pop
mov
add
scas
xor
push
pushf
adc
xchg
jl
cld
cmp
popf
inc
dec
pop
push
push
addr16
repnz
aad
inc
inc
int
sbb
fildl
adc
adc
mov
fisubl
daa
xchg
xchg
nop
std
mov
lods
add
clc
outsb
sbb
inc
mov
dec
add
mov
inc
pop
dec
ljmp
jecxz
mov
std
scas
push
mov
push
insl
cmp
cmp
push
add
xor
aas
pop
and
add
jge
jecxz
loop
sbb
sbb
xchg
popa
xchg
mov
mov
arpl
or
cmp
cld
push
xor
cmc
push
sub
mov
and
cs
cmp
adc
arpl
xorb
dec
or
inc
subl
dec
add
or
xor
mov
andb
sti
es
adc
mov
mov
movsl
in
lcall
cltd
cmp
ffreep
fistpll
push
add
mov
push
pushf
loope
int
dec
and
adc
sbb
dec
icebp
mov
gs
pusha
pop
andl
xchg
gs
mov
xchg
cltd
push
sbb
mov
add
into
sbb
dec
out
insb
mov
bswap
std
mov
test
xor
nop
cld
inc
mov
flds
cmp
fdivs
push
xchg
incb
movsb
sbb
inc
loopne
nop
or
sbbb
scas
cmp
test
lcall
push
adc
xchg
jp
mov
std
sti
add
sub
xchg
mov
enter
mov
cmc
fsubrl
adc
mov
and
jmp
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
jmp
sti
test
sbbl
push
aas
ja
lds
scas
add
cmp
pop
addl
sbb
into
in
push
and
and
cli
out
lock
sti
imul
pop
inc
imulb
imulb
aam
fisubs
xchg
pop
or
subb
push
sbb
cltd
jl
inc
jmp
dec
adc
push
fnstenv
adc
in
fdivp
jbe
mov
ljmp
mov
mov
loope
fdiv
shrl
jno
mov
add
imul
or
inc
or
sbbb
adc
sar
ds
push
mov
enter
mov
test
xchg
and
and
mov
rorl
popf
jmp
rolb
and
leave
jno
sbb
ja
ret
icebp
std
pop
xchg
clc
ja
lods
test
cmp
loopne
ja
imul
sbb
or
add
loope
pop
xchg
repnz
push
or
je
and
fsubrs
cs
adc
sbb
mov
mov
xchg
push
mov
lar
mov
js
push
mov
jb
push
in
sbb
icebp
mov
lcall
cld
shrb
mov
loope
mov
insl
and
mov
or
jecxz
pop
sub
mov
pop
dec
icebp
loope
stos
cmp
cmp
mov
fxch
aas
mov
cli
adc
das
test
pop
movsb
mov
iret
mov
adc
add
pusha
dec
pcmpgtw
sub
push
movsl
dec
imul
inc
dec
and
fsubrl
outsl
push
test
cld
test
out
cmpsl
xchg
push
push
cmc
insb
or
scas
out
inc
les
imul
add
clc
add
inc
adc
push
jne
insl
fcmovu
pop
ljmp
mov
imul
stos
ret
xor
dec
add
pop
in
push
pop
mov
sub
into
xchg
jns
add
mov
sbb
or
fsubl
std
pusha
sahf
faddl
xor
and
scas
pop
cmova
test
imul
gs
jns
and
or
lret
sub
jne
loop
sbb
push
aas
cmp
stos
sti
inc
lcall
add
outsb
aaa
dec
lock
inc
mov
dec
mov
mov
jo
insb
add
jbe
lahf
mov
rol
sub
cwtl
push
dec
xchg
sbb
fs
cmc
cmc
mov
xchg
mov
insl
outsb
cltd
add
xchg
jmp
je
cmc
cmp
pop
xchg
dec
dec
mov
daa
fwait
jmp
dec
jp
mov
cld
int3
adc
out
mov
lods
ljmp
jg
cltd
sbb
push
test
je
ja
lods
sbb
mov
int3
in
ret
repnz
push
fildll
xor
repz
fcmovne
jns
cmp
and
cmp
js
jno
add
push
push
mov
inc
dec
push
sub
mov
popf
lahf
aam
and
icebp
in
or
xor
loope
jo
pop
pop
cs
sbb
jns
xor
xchg
cli
dec
lahf
dec
inc
ljmp
in
xchg
mov
lcall
data16
out
cmp
aad
adc
pop
or
pusha
inc
xchg
sbb
mov
push
aad
cmp
test
jmp
in
cmp
or
pop
and
test
dec
adc
dec
insb
negl
and
sub
test
jg
or
mov
dec
push
jge
xor
mov
adc
xchg
fdivl
movsb
in
outsb
rcrb
pop
ret
sub
arpl
cmpsl
pop
pop
cmp
sahf
call
and
lds
sbb
inc
dec
cmp
lods
add
rorb
dec
aaa
fs
pop
cltd
xor
aaa
adc
jecxz
mov
adc
push
xchg
loopne
fnstenv
mov
lahf
push
mov
int3
mov
lea
das
xor
lret
xchg
leave
mov
adc
pushf
outsl
fisubl
jecxz
nop
pop
bound
test
xor
lret
push
movsb
push
pop
inc
jmp
lds
or
aas
pushf
wbinvd
fisubrl
pop
shll
jbe
in
mov
aam
scas
mov
sbb
pop
test
imul
xchg
mov
je
dec
lcall
stos
pusha
inc
push
mov
push
jne
inc
push
sub
jbe
clc
xlat
push
xchg
mov
xor
xor
aad
sub
lods
lods
out
inc
call
mov
xchg
and
sahf
jp
mov
push
mov
out
testl
mov
stc
add
dec
or
aam
pop
and
add
add
adc
in
cwtl
mov
aaa
cli
mov
mul
lds
sahf
ror
dec
pop
hlt
mov
es
sbb
aam
outsb
mov
sbb
sub
cmp
pop
dec
ret
test
push
clc
repz
cld
mov
dec
xor
adc
add
je
lcall
daa
arpl
sub
sbb
and
ds
pop
shll
sahf
int3
xor
or
dec
xchg
or
scas
or
movsl
out
xchg
sub
and
fbld
mov
jp
loop
shll
mov
cli
repz
movsb
fimull
out
loopne
cmc
sub
jmp
add
mov
push
xchg
std
dec
in
dec
cmp
out
rclb
mov
outsb
inc
iret
ja
xor
loopne
in
rcrb
pop
inc
xlat
cmp
scas
lods
hlt
fsubl
shrb
and
arpl
dec
sub
xchg
clc
sbb
push
int
or
ss
push
pop
icebp
and
test
jnp
push
lret
or
rcrl
cmpsl
jb
push
scas
mov
jae
test
mov
pusha
lea
cld
sub
fcmove
cmp
sbb
nop
or
xchg
mov
rclb
jp
sub
mov
push
lret
cmp
xor
add
mov
adc
int
movsl
cmc
jbe
pop
cmpsb
insb
xor
popa
in
stos
js
push
sub
aas
in
dec
push
sbb
add
loope
scas
or
insl
sti
push
lret
stc
sbb
aad
mov
fwait
add
gs
pushl
inc
inc
lods
dec
push
pop
inc
rorl
cmc
inc
dec
lret
fdivrs
push
or
xchg
movsl
xchg
ret
pop
dec
pushf
out
in
daa
sbb
fcoms
std
cmp
test
mov
fistl
insb
jnp,pt
dec
jnp
add
lret
ret
stos
mov
add
mov
iret
push
icebp
and
mov
aaa
push
inc
lcall
cmpsb
pop
mov
movaps
mov
pop
xor
mov
lahf
dec
mov
push
iret
popw
pushf
jl
fwait
and
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
jmp
nop
loope
pop
dec
gs
int
xlat
sub
add
ja
ja
dec
pop
mov
nop
mov
lret
js
jo
outsb
sarl
lcall
dec
pop
xchg
push
sbb
jg
outsl
mov
xor
mov
stos
and
ja
mov
bound
inc
test
pop
and
stc
inc
mov
jecxz
or
test
and
mov
jp
fldl2t
pusha
jb
inc
fwait
jbe
jo
cmp
cwtl
adc
lcall
push
test
imul
dec
imul
jp
push
ds
fucomp
mov
sbb
aad
icebp
push
and
xor
fisubrl
int3
dec
jge
xor
in
fwait
mov
inc
js
daa
jb
shrl
xchg
mov
add
nop
mov
xchg
mov
in
adc
cli
xchg
xor
pop
pop
out
mov
rolb
js
and
rcrb
js
in
push
sub
pop
cmc
outsb
and
push
sub
shll
ds
sbb
ret
add
sub
nop
xchg
pop
push
mov
inc
xchg
pop
push
jle
dec
rol
repnz
xor
mov
into
and
out
into
and
shr
ret
aad
decb
dec
push
xchg
mov
adc
frstor
xchg
push
je
cwtl
into
in
mov
mov
xor
loope
arpl
sub
insb
je
dec
pop
mov
jns
lahf
jp
push
pop
jo
sub
push
cmpsb
pop
xchg
int3
and
out
adc
in
jne
es
cwtl
lds
pop
pop
les
adc
jo
xor
mov
lods
jp
fiadds
frstor
jae
adc
lret
out
push
mov
jae
push
inc
iret
jecxz
ret
push
adc
push
mov
out
dec
mov
adcb
mov
aam
cmp
lcall
push
add
std
push
xchg
ret
sbbl
pop
xchg
jns
adc
and
or
cmp
mov
js
push
std
hlt
jb
xor
idiv
popa
mov
sub
lock
cltd
cmp
int
or
or
sbb
loope
inc
xchg
into
sub
ljmp
or
push
push
jns
and
cmp
jno
test
in
inc
leave
jle
cld
dec
bound
adc
cmc
mov
popa
test
mov
cmc
sbb
outsb
mov
xor
dec
mov
shl
sub
mov
fcompl
dec
adc
mov
in
jmp
popf
pop
pop
pusha
mov
clc
add
cmpsl
xchg
inc
jp
push
mov
mov
xchg
sub
test
xor
pop
sub
clc
test
and
xlat
decl
imulb
packssdw
roll
mov
jg
js
test
scas
and
inc
lcall
fsubl
lds
mov
fidivl
lds
mov
test
xchg
mov
out
fiadds
inc
or
sahf
int3
fistpll
mov
es
hlt
push
mov
or
ds
ret
or
mov
mov
ret
jae
popf
mov
cmc
lcall
repz
test
inc
sbb
jnp
add
cwtl
fistps
inc
out
sub
jno
and
sub
lock
add
inc
mov
mov
adc
sub
cwtl
push
andb
dec
or
lea
xchg
mov
xchg
cmp
mov
dec
sbb
shlb
int3
xchg
shlb
jo,pt
xor
jge
xchg
inc
fucomi
das
xorl
ret
lods
int3
mov
jnp
pop
push
lock
gs
push
stc
jnp
scas
xchg
stc
test
lret
out
test
iret
adc
mov
inc
pop
push
fisubs
lds
fsub
rcr
adc
ror
loope
lahf
mov
icebp
dec
cmp
out
test
mov
and
add
loop
jo
lcall
cmp
cmc
sbb
data16
lds
imul
jg
je
imul
ret
hlt
shlb
aad
pop
es
test
idiv
out
dec
push
add
add
jecxz
sub
adc
mov
cmp
pop
dec
cs
pop
cwtl
jg
xor
jnp
mov
adc
cmp
pop
mov
dec
and
add
out
push
mov
push
jmp
fmul
jnp
mov
testb
mov
mov
test
scas
imull
or
subb
lret
movsl
shr
rorl
into
jp
dec
mov
addr16
movsl
mov
cld
mulb
cli
jg
lods
xor
sbb
ja
mov
mov
mov
lahf
test
cmp
outsl
hlt
jecxz
sub
je
ljmp
fcoms
inc
inc
or
cli
mov
xor
mov
icebp
cs
cmpsb
test
mov
cmp
out
lret
xor
lahf
sub
fsubs
rcr
and
cld
test
add
bound
jge
loope
lahf
insb
or
je
sahf
cmp
jo
test
add
andb
scas
stc
xchg
or
call
std
shrb
sub
cmpsb
jbe
inc
je
leave
loop
add
andl
add
not
dec
push
fdiv
mov
cmc
dec
pop
push
data16
cmpsb
push
mov
out
xor
loop
inc
push
lcall
mov
cld
test
push
fdivrl
pop
pop
lret
jo
mov
in
jbe
jecxz
pop
inc
adc
pop
lock
or
fs
adc
in
and
fcmovnbe
or
mov
imul
sbb
xlat
pop
bswap
dec
pop
mov
loope
dec
push
jp
or
mov
or
mov
mov
sub
sbb
and
xlat
mov
lods
cld
cmp
mov
mov
pop
test
out
sub
inc
xor
outsb
inc
and
xor
mov
cwtl
push
andb
leave
push
and
popf
and
movsb
xchg
pusha
jmp
sti
xor
leave
mov
push
jns
insl
cmp
mov
sub
loop
and
push
and
fildl
xchg
jbe
aaa
cmp
shr
mov
out
bound
pop
push
and
jno
sub
clc
clc
into
mov
pop
inc
and
test
imul
xchg
out
mov
enter
push
jp
xchg
push
add
cmp
cs
adc
push
jmp
jg
pop
fs
jecxz
mov
mov
lret
rcl
jmp
ds
push
addr16
out
outsb
int
jb
or
out
xchg
in
ret
sarl
loop
push
sub
ss
int3
repz
mov
push
and
test
ljmp
add
inc
adc
ljmp
or
mov
mov
mov
jmp
dec
loope
lret
sbb
or
mov
adc
punpcklbw
mov
movl
ret
pop
rorb
data16
and
adc
pusha
cmp
ss
add
test
xor
in
pop
gs
add
rorb
push
lods
sbb
mov
and
repz
jmp
inc
hlt
and
and
push
das
sub
lods
mov
sbb
cmp
dec
les
jge
iret
mov
xacquire
inc
xor
loopnew
xchg
jno
sbb
adc
aas
in
out
push
sbbb
jbe
xor
add
push
jmp
push
shrl
mov
setbe
lcall
out
out
xor
sbb
divb
stos
hlt
xchg
stos
test
gs
push
movsb
sub
cld
stc
sub
fsubrs
lds
cmp
or
rorl
addr16
int
mov
pop
adc
int3
push
std
push
cmpsl
test
out
jns
imul
sub
xor
mov
dec
cs
sbbl
sti
add
sub
call
fwait
cwtl
xchg
pop
cmp
data16
push
cld
dec
fstpt
add
jnp
xor
inc
sti
mov
ret
addb
jle
pusha
mov
lods
mov
jle
adc
sbb
insl
dec
mov
push
jns
test
xchg
jmp
xchg
adc
mov
pop
test
mov
push
dec
mov
mov
test
add
js
cmp
push
inc
popf
jne
pushf
mov
cmp
outsl
cltd
sub
arpl
cmpsb
mov
and
lret
push
add
mov
bnd
dec
mov
test
inc
sbb
or
cmovno
stos
popa
sbb
sub
popa
test
leave
dec
jmp
outsb
outsl
jp,pn
leave
fsubr
out
add
clc
xchg
and
stos
or
pop
movsl
sahf
jb
pop
and
and
in
add
repnz
xchg
mov
inc
in
sub
cltd
jmp
in
outsl
add
shrl
notb
mov
push
andl
lods
icebp
adc
popa
ja
and
dec
daa
cs
sbb
dec
pushf
fs
jle
add
or
lock
les
lds
jle
sahf
movsl
cli
dec
call
sub
lock
rcrb
ret
dec
xchg
sbb
mov
daa
and
sbb
int3
iret
jmp
sbb
pop
jne
jecxz
dec
cs
lods
mov
push
sub
and
xor
lds
mov
imul
cli
ss
mov
out
movsl
xchg
mov
sbb
aam
adc
je
lahf
call
jmp
loop
xor
xchg
add
xchg
inc
dec
out
jb
fisubrs
divb
mov
mov
mov
push
mov
cltd
cmpsl
xchg
cli
div
popa
pusha
fstps
clc
out
xor
fnstcw
repz
xchg
call
sub
idivb
xchg
icebp
jg
jno
xor
jge
ret
jnp
and
xor
or
xor
rorb
repz
mov
fwait
and
xchg
dec
xchg
in
xor
and
inc
insl
enter
push
rcl
jmp
mov
outsb
inc
lods
sbb
jne
sub
mov
hlt
out
or
out
fstpl
js
cli
roll
push
jmp
jg
sbb
mov
pop
les
lret
push
ds
jl
rcr
jp
loopne
and
dec
aaa
pushf
cmpsb
jle
stos
jb
push
imul
test
imulb
push
pop
inc
xor
lock
mov
and
adc
imul
outsb
cld
sbb
cltd
mov
les
pop
iret
push
aad
cltd
sub
lock
sbb
push
movsb
mov
dec
push
in
cltd
jno
and
pusha
push
nop
clc
sbb
std
jo
jge
fcomps
cs
lock
lahf
aaa
imul
pop
or
inc
dec
cwtl
mov
repnz
ja
dec
xor
inc
pop
pop
mov
pusha
out
mov
pushf
lahf
pop
fs
cmc
xchg
inc
out
scas
jmp
xchg
push
je
insb
pop
sarb
sub
dec
xorb
pop
mov
shrb
push
push
fdiv
enter
xchg
je
jecxz
sbb
jge
lret
enter
ja
pop
xchg
jmp
mov
mov
xor
std
inc
lods
add
pop
pop
pop
sub
push
pop
dec
rol
jg
pop
data16
mov
fdivrl
dec
cmc
push
inc
aad
sub
sub
xor
lds
sbb
mov
xorb
imul
ja
pop
subl
jp
xor
imul
push
mov
jp
jecxz
xchg
pop
mov
in
icebp
jp
pop
inc
xor
cmp
ss
repnz
andb
adc
jae
pop
jne
std
insl
and
push
out
jg
sbb
and
push
stos
inc
and
xor
mov
and
aad
lahf
pop
inc
add
in
loope
std
jecxz
xor
pop
inc
mov
imul
lods
in
cmp
arpl
pop
pop
enter
iret
cli
push
fidivrl
call
xchg
icebp
push
cmpsb
jle
dec
adc
pop
cld
in
push
outsl
mov
add
dec
test
or
cmc
sbb
and
cmpsb
lods
jg
push
jp
fsubr
into
push
mov
fmuls
mov
jp
shll
push
cmp
data16
jns
dec
inc
dec
push
lods
add
or
pop
pop
mov
mov
loop
sahf
pop
imull
mov
fs
lods
dec
push
push
js
pusha
mov
or
push
sbb
xchg
sbb
out
push
inc
repnz
in
xlat
add
in
dec
fsts
add
fdivrl
xor
arpl
pop
push
pop
cmp
movsb
mov
cmp
mov
mov
dec
fadd
push
xor
in
jnp
dec
xchg
cwtl
shrl
and
lea
or
out
test
mov
outsl
push
lcall
int3
push
dec
outsb
or
gs
pop
inc
sub
cwtl
lret
mov
int3
call
movsl
adc
xor
rcrl
add
jp
out
fstpt
in
ss
mov
mov
xchg
mov
stos
ret
cmpsl
addb
ret
add
mov
outsb
and
and
inc
and
add
adc
dec
jg
add
inc
xor
into
in
dec
push
dec
lret
xor
mov
jmp
xchg
pinsrw
outsb
lahf
stc
pop
ficoms
lret
loop
xchg
jno
mov
xlat
addr16
and
incb
mov
out
adc
popf
inc
out
lahf
daa
in
scas
into
sub
mov
das
les
mov
cwtl
ss
jb
push
adc
mov
test
outsb
cmp
inc
cwtl
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
jmp
cltd
push
in
sub
jno
sti
test
mov
psubb
mov
in
mov
jne
xor
or
les
das
mov
add
jo
jge
push
lcall
dec
jbe
sub
pop
nop
sub
stos
dec
nop
inc
ficompl
leave
cmp
out
cmp
aad
pop
pop
mov
or
cmpsl
xor
mov
shlb
xor
sub
jne
push
push
cmp
mov
dec
dec
dec
jle
lcall
stc
sbb
inc
daa
push
cmp
push
dec
or
loopne
arpl
mov
repz
adc
stc
pop
clc
sbb
je
cmpsl
js
ficoms
dec
lret
idiv
mov
sbb
push
jp
lahf
fidivrs
cltd
das
enter
test
sub
mov
dec
clc
pusha
lods
xor
shlb
jle
push
std
pop
cmpsb
jbe
pop
jae
sbb
arpl
leave
push
std
pop
out
jae
mov
insl
jo
rolb
adc
mov
int
mov
jbe
inc
inc
inc
or
and
sbb
nop
popf
pop
loop
add
push
push
mov
mov
dec
leave
imul
es
push
cmp
mov
cs
xor
sub
or
fstps
imul
ret
lea
sub
sub
dec
jge
subb
ficompl
mov
imul
xchg
mov
insl
and
mov
fdivrl
xchg
jns
dec
or
jbe
fs
pop
popf
pop
outsl
jl
das
mov
fidivl
pop
stos
jg
jg
and
mov
fcmovnb
lods
fs
mov
mov
mulb
pop
popf
jmp
icebp
popa
xchg
jge
jg
xlat
add
pop
jmp
lods
arpl
mov
inc
sbb
sbb
popa
add
push
jg
sub
mov
lret
pop
adc
lret
push
ret
add
test
mov
addb
cli
lea
or
divb
je
dec
pop
test
jo
sub
shrl
xchg
sub
pop
mov
jl
das
pop
add
xchg
pop
test
cmp
loopne
cmp
pop
sbb
jno
pop
xchg
mov
cmpsl
xchg
icebp
inc
out
or
and
cltd
jae
lcall
push
sub
out
in
pop
xor
xchg
inc
mov
pop
mov
cmp
idiv
mov
mov
cld
jmp
jae
test
ja
adc
cmp
pop
adc
inc
jle
or
ljmp
in
or
lock
out
xchg
pop
insb
pop
int3
mov
or
aam
int
scas
dec
aad
lds
xchg
mov
mov
inc
adc
and
int3
icebp
mov
pop
sahf
pop
inc
mov
call
jb
lock
mov
fs
mov
mov
out
sbb
aad
popf
jb
mov
mov
outsl
loope
and
ret
pop
dec
mov
cwtl
and
or
xor
xor
xchg
lret
movsl
out
xchg
or
mov
pop
add
arpl
dec
jb
sub
jp
ret
mov
lret
ret
dec
mulb
xchg
jge
mov
lods
mov
into
push
sbb
add
jns
ss
push
xchg
inc
lahf
mov
loop
bound
and
or
pop
iret
xchg
push
adc
jae
mov
jne
mov
das
mov
orb
jmp
insl
outsl
xor
or
roll
lahf
sbb
out
lock
xchg
cmp
adc
repz
fdiv
mov
push
push
les
ss
in
adc
dec
push
lret
or
add
faddl
ja
dec
xor
ja
dec
pop
nop
aam
fcompl
xchg
mov
loope
icebp
stos
mov
aam
orl
mov
daa
push
inc
incl
ret
cmp
cmc
mov
mov
fisubrl
out
fcom
fidivrl
test
hlt
aam
add
dec
jle
cmpsb
clc
cli
push
imul
pop
xor
xor
mov
xor
cmp
fnsave
test
in
mov
jnp
cld
and
fldl
push
pop
adc
stos
xchg
lods
add
test
adc
stos
jno
xchg
pushf
insb
das
mov
xor
test
jo
sub
push
jp
push
jl
inc
shlb
mov
aam
sub
or
in
mov
aaa
int3
mov
push
lcall
push
das
cmp
js
inc
iret
fldt
xchg
aas
push
out
mov
jmp
ficoms
fcomip
xchg
jns
in
mov
fcmovbe
lret
nop
dec
sbbl
sti
push
pop
subl
push
add
adc
divl
jo
das
mov
xchg
xchg
stos
inc
mov
lods
or
cmp
cmp
decb
xchg
or
fimuls
popf
xor
rcrb
enter
data16
scas
add
icebp
xchg
aad
enter
cwtl
cmp
es
and
flds
into
push
xchg
stos
jg
mov
testl
sahf
scas
or
fldl
outsl
je
or
or
add
cwtl
popa
je
pusha
push
stc
inc
and
push
xchg
imul
and
jl
pop
xchg
leave
mov
aaa
inc
add
and
cld
xor
jno
lret
aaa
mov
jle
and
xchg
rorb
es
mov
aam
jae
jg
bound
outsb
and
into
xchg
or
push
outsl
push
movsl
lret
and
sti
inc
xor
shrb
jo
push
or
ret
and
in
and
mov
scas
mov
imul
cs
leave
dec
dec
loopne
jg
clc
cmpsb
inc
mov
add
xchg
push
and
push
inc
enter
push
and
scas
fstpl
push
pop
or
fists
rol
or
test
iret
push
sub
dec
adc
mov
and
xor
sbb
je
inc
or
lds
je
fisubrl
inc
add
ja
add
xor
jp
les
push
rcrl
popa
xlat
in
inc
inc
fldt
stos
fcmovnb
mov
cwtl
xchg
test
fnstsw
mov
lock
bound
sti
and
ja
out
cmp
aad
jbe
fisttpl
stc
jge
sti
in
sbb
jg
mov
xchg
fadd
loopne
popa
push
sbb
and
mov
cli
ja
pusha
push
in
arpl
imul
cmp
cmp
adc
adc
hlt
out
repnz
fistl
adc
lret
mov
pop
xchg
pop
dec
push
sub
mov
add
and
sub
scas
mov
ljmp
int3
and
sub
mov
sbb
data16
mov
outsl
jl
int
and
loopne
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
jmp
push
mov
adc
xchg
je
pop
add
ja
sub
and
dec
or
mov
aad
push
push
arpl
inc
xchg
sbb
repz
out
mov
jmp
adc
ss
mov
icebp
and
or
pop
out
add
call
add
mov
cmp
cli
stos
sbb
cmp
dec
lea
les
faddl
lret
pop
in
jg
ja
in
test
and
pusha
ret
xor
and
addr16
mov
lret
mov
bound
or
dec
int
jbe
in
adc
lods
aaa
ss
push
pop
test
mov
fisttps
dec
adc
mov
test
insb
imul
in
xor
cmpsb
loop
add
mov
sub
dec
mov
test
out
stc
pop
add
enter
push
sti
int3
imul
lret
div
repnz
data16
daa
or
dec
es
dec
ret
xchg
jl
jmp
sub
and
loopne
mov
ja
jno
jp
add
xchg
movsb
mov
sbb
lahf
push
sbb
out
xchg
mov
mov
in
mov
dec
inc
aas
dec
mov
jnp
shlb
adc
mov
adc
daa
mov
adc
xchg
inc
dec
dec
cmp
add
xchg
loopne
adc
fstpl
sbb
js
push
sbb
or
push
jge,pt
cmp
cmpsl
cmp
ljmp
test
enter
mov
pushf
aas
jp
xor
sbb
cmpsb
cs
andl
mov
xor
push
jmp
sahf
aas
aad
test
fs
add
aas
fdivrs
mov
mov
rorb
push
test
jg
ljmp
int3
cld
xchg
ret
jno
testl
jmp
and
pop
mov
call
mov
insl
rcll
sbb
adc
adc
mov
mov
in
neg
cmp
aad
ss
xchg
lds
mov
cld
cmp
push
test
xchg
and
insb
push
pusha
push
sbb
sbb
jne
add
int3
leave
fdivl
xchg
adc
push
add
loop
inc
popa
xor
pop
adc
mov
push
je
sbb
push
adc
mov
xlat
xchg
call
jno
data16
shrl
inc
pop
adc
push
xor
inc
lahf
repz
mov
addr16
adc
pop
scas
xchg
push
repz
pop
dec
dec
ret
push
addr16
cmpsb
stc
int3
ss
mov
outsl
jnp
movsl
aas
lcall
in
iret
in
adc
jae
lret
mov
test
gs
and
mov
call
scas
mov
outsl
cwtl
popa
rcl
outsb
cmc
mov
xchg
adc
and
ja
fmull
aaa
pop
repnz
imul
les
cwtl
pop
cwtl
cwtl
mov
mov
and
mov
jo
cmpsb
pusha
les
jl
mov
js
jb
cmp
sbb
cmp
test
jb
rclb
pushf
out
dec
sub
arpl
jnp
mov
lret
pop
nop
cmp
fcmovnb
adc
ja
xor
out
push
insl
dec
push
addr16
sub
xchg
inc
mov
das
mov
icebp
fisttpl
sub
mov
and
mov
jbe
mov
sbb
cltd
sti
ds
push
stos
inc
cwtl
sahf
and
sbb
push
jns
mov
lret
andb
xchg
loope
or
movsb
loopne
jmp
sub
fsts
fadds
inc
pop
sarb
shrb
xchg
mov
push
inc
int3
movsl
adc
sub
xchg
mov
xchg
cli
lret
jle
pop
imul
lods
packsswb
je
inc
cmpsb
adc
xor
mov
lahf
mov
inc
lret
cmp
dec
or
arpl
adc
sahf
addr16
xor
dec
xlat
das
popf
mov
push
mov
adc
insb
je
nop
icebp
stc
mov
pop
ret
xchg
rclb
in
mov
fdivrl
mov
out
pop
xchg
inc
in
sub
adc
inc
xchg
cmp
cmp
fildl
pop
and
mov
fbld
sbb
dec
lea
stos
pop
nop
xor
add
ss
clc
enter
add
outsl
hlt
outsb
or
push
push
jp
aam
stc
inc
nop
or
mov
dec
inc
pop
and
add
pop
outsb
mov
push
inc
shlb
pop
movsl
rcll
incl
and
mov
cwtl
xor
sbb
add
jmp
pop
popa
daa
imul
mov
lahf
out
lea
sbb
cs
aam
iret
scas
push
out
lahf
xchg
js
pushf
cmp
je
mov
push
pop
aaa
pop
in
xlat
ss
repnz
dec
jecxz
repz
or
adc
lcall
int3
int3
inc
mov
cmc
push
aaa
pop
xor
scas
pop
push
or
aas
push
out
xchg
adc
pop
aam
cmp
cmp
xchg
repz
sarl
cmp
jbe
fdivl
ja
fists
repz
sbb
idiv
mov
jne
out
xchg
adc
mov
aad
mov
or
bound
pushf
outsb
mov
xchg
add
das
aas
icebp
stos
int
std
xorb
fs
popa
xchg
lea
out
push
test
adc
jne
cli
dec
lcall
roll
or
jns
mov
push
pop
ret
pop
sbb
sbb
and
mov
aas
pop
cmp
shll
out
xor
into
icebp
mov
and
imul
jae
sub
cmpsl
sahf
imul
xchg
mov
mov
ret
jl
pop
cld
push
and
mov
stc
dec
daa
dec
adc
clc
idiv
mov
pop
test
xchg
sbb
int
xchg
mov
cmpsb
hlt
out
pop
rol
xchg
aaa
mov
repnz
mov
pop
pop
push
testb
lods
mov
xor
mov
xchg
gs
add
std
and
xchg
xchg
stos
xchg
mov
inc
jge
cmpsb
mov
aam
ret
push
adc
test
ds
mov
push
fsubl
fnstenv
test
iret
cmp
mov
mov
or
scas
in
jb
sarb
js
sub
in
enter
mov
les
dec
dec
lock
imul
cmp
rcrb
adc
jge
sahf
pop
jb
or
das
cs
jnp
dec
mov
push
inc
mov
or
jns
lret
xor
mov
mov
daa
sub
push
adc
xchg
pop
cmp
xlat
or
or
mov
adc
jl
imul
sbb
repz
cli
or
loopne
leave
insl
mov
mov
shlb
shr
pop
add
cmp
adc
mov
test
xchg
repz
xchg
cld
pop
mov
sub
subb
add
nop
xor
lret
push
mov
push
mov
pop
dec
push
in
or
cld
lahf
outsb
lds
or
xchg
ss
xchg
adc
fisubl
xor
pusha
cmp
push
and
cwtl
dec
test
sub
bound
test
ljmp
js
test
or
adc
xchg
adc
scas
popa
sti
pop
cmc
imul
sub
les
mulb
inc
into
xchg
mov
dec
insb
push
mov
mov
and
dec
sub
add
jp
pushf
push
adc
push
jno
jne
inc
dec
sahf
arpl
inc
sbb
mov
outsb
in
sahf
and
mov
xlat
cmp
stc
cs
mov
fdivrl
shlb
xchg
push
mov
adc
mov
sub
cmp
lahf
cltd
imul
int
add
loope
dec
icebp
pop
sub
lret
mov
or
jno
xchg
test
adc
jo
adc
push
je
cmp
jne
mov
xchg
inc
imul
mov
in
adc
xchg
add
icebp
mov
cmp
stos
xlat
mov
outsl
inc
push
arpl
test
jmp
rclb
mov
adc
dec
out
sub
cltd
sahf
pusha
and
jecxz
push
jo
dec
xorb
loopne
and
aas
dec
scas
adcb
fwait
push
lret
movsl
jle
inc
popf
cmpsl
dec
push
jo
dec
xchg
ds
mov
bsr
cltd
add
inc
mov
imulb
shll
ret
sbbb
adc
jnp
adc
mov
adc
xchg
cmpsb
dec
out
dec
add
inc
addl
cmp
popf
loop
xchg
iret
stos
movsb
aas
scas
dec
mov
add
out
lcall
add
stc
pop
jl
rcrb
test
mov
insl
push
cmp
pop
mov
xor
or
cmp
out
dec
sub
icebp
shll
movsb
sbbl
test
dec
cmpsb
sbb
arpl
pop
clc
mov
out
mov
jl
and
mov
mov
sub
enter
lret
jns
iret
sub
mov
pop
jle
clc
clc
shlb
xchg
or
or
dec
ret
xchg
push
loopne
add
mov
mov
xchg
cltd
leave
mov
rcr
loop
in
adc
inc
cmp
xchg
pop
sub
addr16
stos
sub
stos
cs
inc
lret
mov
push
enter
dec
and
subl
pop
pusha
jmp
imul
xchg
sub
cmp
fiaddl
push
cmp
inc
cmp
adc
mov
in
data16
sub
fiaddl
sbb
sarb
test
mov
jae
and
hlt
sub
sbb
dec
sbb
enter
imulb
adc
push
mov
pop
xchg
addr16
fcmovnbe
lret
jl
pop
push
ljmp
sbb
pop
pushf
cmp
out
pusha
shll
adc
cmpsb
popa
or
ljmp
lds
cltd
jle
and
cmp
loope
jns
mov
and
jns
mov
xor
cvtdq2ps
or
adc
mov
pop
movsb
cmpsl
imul
adc
aaa
aas
jmp
jg
mov
imul
mov
lcall
fiaddl
dec
push
jnp
rolb
ror
insl
ss
xchg
adc
sbb
xchg
adc
cmpsw
addr16
loope
cmp
mov
and
fs
push
fstpl
and
or
or
xchg
in
xchg
gs
sbb
mov
dec
inc
pop
inc
nop
inc
pushf
ret
xchg
fsubs
pop
mov
mov
daa
or
xchg
in
pusha
cmp
inc
pop
lods
out
iret
bound
lods
lahf
cmpsb
shlb
mov
fdivrl
lahf
xlat
outsb
add
jp
mov
jecxz
xchg
ljmp
mov
out
inc
or
pop
dec
push
mov
adc
daa
sub
and
mov
stos
inc
xor
scas
sub
sbbb
dec
mov
sub
lahf
loop
jne
xchg
mov
scas
mov
test
imul
mov
adcl
lods
xchg
and
int
popf
push
mov
test
push
cli
and
popa
xor
inc
cmp
mov
pop
push
mov
fdivrs
push
pop
xor
decb
pop
mov
in
pop
stc
jmp
push
fcoms
push
out
std
data16
jecxz
push
popa
xor
test
push
popa
pop
jle
movsl
sub
call
xchg
push
push
testl
bound
arpl
pop
jl
adc
cmp
mov
inc
xchg
pushw
into
xor
rorl
jg
imul
nop
cmp
clc
pop
mov
dec
fs
cmpsb
lock
es
jne
cmpsl
or
add
dec
out
sbb
mov
sbb
rcrl
mov
inc
das
lods
cli
aam
mov
sub
mov
sbb
jge
aad
out
enter
fsubl
push
push
repnz
repz
out
xorl
and
jae
mov
mov
xor
dec
lock
aam
adc
rol
add
fnstenv
sarb
push
dec
cwtl
cmpsb
out
in
insl
pushf
out
shlb
dec
adc
icebp
sub
sti
push
clc
dec
pop
movsl
jle
iret
repz
push
ret
fucomip
flds
and
jae
or
xchg
stos
jo
dec
sub
pushf
add
ljmp
leave
push
inc
int3
mov
push
rol
call
out
sub
jmp
out
xchg
mov
idiv
pushf
mov
jno
jge
cmp
lahf
add
rcrb
inc
shll
fildl
mov
jecxz
and
nop
fdivs
pop
fdivl
mov
push
test
in
bound
out
xor
push
fsubrs
mov
ficompl
out
ss
mov
sbb
test
call
popa
mov
add
enter
imul
xchg
in
call
sub
leave
cmp
clc
cmc
and
outsb
lods
or
lea
insb
dec
add
and
lock
nop
mov
jmp
sub
aas
cmp
push
or
mov
add
sub
orl
repz
imul
sub
inc
hlt
xor
sbbb
sub
test
push
pop
sti
arpl
adc
push
cmpsb
push
lcall
pop
mov
xor
jl
inc
or
jae
inc
jmp
nop
fsts
fisubrl
sub
aam
call
mov
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
jmp
cmpsl
icebp
cmp
pop
dec
arpl
xor
adc
xchg
xor
out
sbb
pop
inc
clc
or
jecxz
and
xchg
mov
mov
push
out
xchg
xchg
gs
push
push
divl
mov
repz
or
enter
mov
ffree
ss
fnsave
xchg
cmpsb
fdivl
mov
rcrl
fisttpl
pop
cwtl
stos
adc
dec
add
xor
mov
push
cmc
sub
scas
xor
cs
xor
push
lahf
xor
mov
dec
cmp
inc
sbb
loop
enter
push
mov
push
and
inc
frstor
les
pop
sub
xchg
adc
cltd
jp
inc
push
les
mov
loopne
cwtl
lods
mov
sub
pop
fs
pop
loope
mov
add
mov
dec
mov
test
xor
mov
iret
mov
les
push
loopne
cmc
pop
into
enter
inc
int3
xchg
sbb
movsb
jle
sub
negl
ss
add
or
push
xlat
cmp
mov
je
mov
idivb
mov
ret
add
fcompp
ja
or
mov
loopne
xchg
mul
in
dec
notl
push
inc
jp
xlat
lods
cmp
cld
mov
dec
lret
bound
arpl
pop
cmp
bound
push
gs
fldcw
mov
stos
mov
sbb
jecxz
test
out
cmp
cmp
in
cmpsl
cmp
clc
out
jo
xchg
dec
arpl
adcb
stos
jmp
jbe
dec
sub
xlat
cltd
mov
sbb
mov
dec
sbb
push
pop
cmpsl
pop
xchg
sbb
aaa
insl
cmc
pop
mov
dec
nop
negb
pop
push
pushf
push
and
ja
fucomp
jb
and
aas
dec
dec
sub
test
ljmp
cmp
dec
jg
popf
mov
xor
add
jne
and
aam
inc
or
out
fbld
cmpsl
push
jmp
imul
aam
pop
pop
jns
loop
and
js
enter
ja
mov
pusha
dec
push
cmpsl
into
xor
sahf
xor
lret
ret
lcall
or
lds
lret
les
nop
xor
sbb
imul
mov
pop
cmp
cmp
flds
ljmp
je
lds
pop
cmp
or
sbbl
lock
sub
xchg
dec
push
add
fs
int3
int3
aad
mov
and
dec
stc
mov
in
out
jno
xor
and
ljmp
sbb
std
xchg
adc
out
fildll
inc
jnp
sti
outsb
add
push
jmp
jp
jae
jmp
pusha
int
jl
adc
in
dec
mov
dec
test
mov
sbb
outsb
enter
jo
jmp
mov
and
push
jl
jno
mov
adc
shrb
sbb
ret
xchg
mov
inc
insl
imul
and
mov
scas
in
inc
cmpsb
adc
sub
imul
pop
aam
int
data16
jp
sti
dec
in
xor
cmp
pop
or
out
in
xchg
add
vpshld
mov
mov
inc
jne
adc
out
popf
jne
into
and
ret
sbb
int3
mov
in
stos
rcl
jb
or
aam
loopne
popf
or
fidivrs
xor
dec
dec
loopne
cwtl
or
lahf
rcrb
lea
inc
jecxz
aaa
mov
add
jbe
jle
sahf
jnp
int
je,pt
mull
imul
inc
lods
stc
cwtl
pushf
idivl
mov
movsl
leave
mov
lods
lahf
mov
and
push
xor
dec
mov
mov
ljmp
add
outsl
gs
decb
addb
xchg
je
sub
xchg
pop
push
in
inc
mov
je
xlat
and
sbb
mov
aaa
and
nop
mov
sbb
jg
loope
stos
adc
jne
popf
test
es
inc
aaa
rcrb
mov
dec
add
cmpsb
test
mov
fcmovne
pushf
popf
push
arpl
stc
lds
jbe
adc
leave
cmp
mov
fisttps
push
int3
dec
outsb
cli
xor
icebp
ficoml
xchg
lods
pushf
jns
add
rol
jle
adc
xchg
test
xor
imul
dec
fnsave
xchg
jl
add
dec
pop
push
cmp
pop
loopne
outsl
adc
lret
int
or
nop
in
or
jmp
ds
ds
les
push
and
or
dec
sub
push
test
rol
and
repnz
rclb
lret
scas
mov
cmp
ljmp
push
dec
sarb
add
movsl
ljmp
or
cmp
pusha
lock
movsl
pop
pusha
jae
mov
mov
daa
sub
arpl
cltd
or
aas
mov
mov
dec
stc
adc
lret
push
push
sbb
or
push
lods
lea
mov
inc
ret
sbb
mov
hlt
fcomip
ret
xor
divb
pop
add
scas
xor
dec
scas
cmpsb
ds
ret
stos
mov
in
into
jl
mov
push
dec
imull
sub
inc
and
push
jl
sub
insl
sti
jle
ret
xor
lret
cmc
test
xchg
pop
stos
mov
lods
or
hlt
fstp
sub
sbb
adc
hlt
xchg
fimull
out
in
add
mov
xchg
add
aas
bound
stos
cli
sahf
push
loope
jno
xor
dec
pop
sbb
cmp
cmp
inc
lahf
lahf
leave
addl
push
and
mov
andl
and
jns
sbb
sbb
adcb
jmp
adc
pop
jg
xchg
dec
cmpsb
sub
testl
mov
xor
pop
aam
jg
push
sbb
lods
fs
test
lock
mov
stos
aaa
ficoms
stos
sub
xor
dec
shll
jae
or
leave
cmp
ljmp
xchg
xorl
cmpsl
dec
ret
push
roll
push
stos
push
cmp
jns
jp
sbb
jmp
rolb
insb
jle
lret
fisttpl
or
add
add
dec
into
mov
adc
enter
dec
outsb
ja
repnz
test
mov
or
dec
jns
inc
clc
xchg
lret
xor
mov
les
shl
mov
inc
imul
gs
and
in
or
and
push
arpl
jae
ret
es
adc
sbb
inc
dec
inc
cmp
sahf
sub
outsb
test
push
push
aaa
movl
pop
dec
lcall
sbb
mov
aam
push
outsl
ja
add
pop
insl
mov
xchg
call
fiaddl
mov
add
call
jo
jle
in
jmp
ja
add
fadds
add
ljmp
sub
cmp
pop
xchg
test
adc
xchg
lret
pusha
xlat
and
addr16
inc
jl
clc
sub
mov
hlt
lods
sahf
adc
cmpsb
bound
xor
adc
sub
aas
cmp
fdivrl
xchg
jl
or
push
dec
cmp
jmp
stos
push
ja
enter
or
pop
xor
cmp
clc
call
push
sti
mov
pop
mov
ret
hlt
in
xor
repnz
pop
or
xor
sbb
jo
inc
mov
mov
fidivs
jno
xor
dec
dec
xchg
leave
test
mov
repnz
outsl
pop
push
sbb
icebp
and
jbe
addr16
xor
std
dec
cwtl
push
push
pop
aad
push
xchg
add
cld
js
and
fcoms
cmpl
insb
mov
lret
fcoms
xchg
adc
bound
add
test
out
mov
insl
in
js
sub
movsl
cmp
in
movsb
andl
orb
mov
std
xor
call
iret
in
xlat
pusha
lret
xchg
cld
jns
in
mov
dec
stc
adc
mov
sub
stos
fwait
pop
dec
push
cmp
and
sbb
cmp
stos
andb
mov
mov
and
popa
pop
popa
in
into
shl
popf
xchg
jnp
fcoms
cmp
fwait
inc
inc
or
add
mov
sbb
cmp
bound
add
inc
and
fwait
cmp
cwtl
push
popf
mov
sbb
xchg
cmp
icebp
inc
testb
cmp
mov
arpl
fwait
sbb
jne
repz
mov
and
inc
scas
dec
into
adc
sub
pop
sub
in
add
or
rol
inc
ds
ljmp
mov
pop
fcompl
dec
cmpsl
and
mov
mov
mov
nop
adc
pop
leave
pop
cli
or
scas
mov
mov
cli
mov
pop
adc
push
jl
nop
dec
shrl
jecxz
daa
jecxz
les
js
lea
xor
sub
iret
mov
and
dec
int3
cmpsl
std
das
mov
outsl
cmp
or
out
loop
add
mov
inc
cs
add
es
cwtl
inc
mov
push
inc
mov
xchg
mov
leave
add
inc
cmp
cmp
push
xor
out
sti
adc
fs
xor
cld
mov
dec
out
popf
jg
pop
and
xchg
gs
les
ret
arpl
dec
scas
test
test
mov
pop
adc
mov
js
jl
cmpsb
sbb
lods
xor
jl
inc
fstl
scas
hlt
shrl
adc
stc
fstps
cmp
xchg
mov
clc
push
scas
cmp
into
ja
rcrl
sbb
out
cld
iret
add
mov
fsubrl
sbb
or
clc
or
scas
scas
push
lcall
cmp
outsl
fsubr
loopne
push
cld
popf
data16
mov
sbb
std
popa
adc
cmc
mov
push
aas
adc
xchg
jg
out
push
and
xchg
icebp
push
add
jnp
adc
push
out
mov
pushf
fimuls
xor
pop
xchg
jle
roll
pop
hlt
pop
jne
mulb
movl
sub
popa
out
ret
xchg
and
and
bound
xchg
mov
xchg
xor
xor
scas
arpl
cld
and
adc
je
into
add
xor
adc
ret
fiadds
sub
cmp
jae
mov
gs
ret
mulb
test
mov
mov
movsb
insl
push
mov
mov
stos
adc
data16
cmp
xor
imul
jp
es
adc
push
ss
lcall
sub
push
shll
mov
fmul
cmp
pop
jecxz
dec
sub
jmp
leave
adc
insl
mov
rolb
cs
jb
ficompl
push
sbb
sbb
adc
xchg
inc
adc
scas
add
push
out
or
mov
cmp
mov
xchg
jae
sub
inc
lods
dec
push
out
jp
scas
mov
addb
add
jo
ljmp
cmpb
inc
bound
clc
dec
orl
in
jg
repz
jle
out
mov
cmp
pop
jge
cmp
inc
js
loope
stos
cmp
jae
out
outsb
mov
mov
inc
cld
and
je
xchg
adc
push
xchg
fmull
sbb
out
lds
es
dec
push
mov
jb
int3
andl
xchg
pop
cmp
and
xlat
jg
je
insb
cmp
xchg
mov
iret
jb
dec
xor
sbb
mov
icebp
cs
adc
or
inc
testl
jns
lea
int3
fidivrs
dec
data16
sbb
push
jmp
mov
idiv
clc
test
pusha
addr16
movsb
fucomi
outsb
mov
shll
mov
mov
jae
and
lret
ds
adc
pushf
push
add
xor
std
enter
ljmp
pusha
mov
cmpsb
cmpsb
sbb
addr16
mov
repnz
pop
shl
shrb
test
push
paddsw
xorl
push
aad
scas
popf
aas
xor
or
aaa
hlt
dec
idivl
sti
out
in
mov
and
cmp
cmp
xchg
or
or
or
dec
mov
mov
scas
sub
jo
dec
mov
jl
jmp
out
loopne
fistpll
jp
ljmp
jnp
adc
xor
aas
sub
out
cmp
or
roll
xchg
mov
jb
push
shrl
add
mov
movsl
movsl
inc
or
jmp
push
scas
dec
or
jge
push
add
mov
jmp
lret
cltd
scas
fcomp
cltd
and
loop
pop
adc
sub
jno
pop
pushl
js
mov
and
roll
mov
inc
mov
or
adc
xor
sahf
pop
jno
icebp
xor
sub
daa
das
or
lret
pop
pop
iret
cltd
pop
xchg
rorl
dec
mov
fcmovbe
add
aam
insl
xchg
jge
adc
sbb
cmpsl
mov
addb
mov
sub
jnp
popf
push
in
xchg
test
ds
jnp
fnsave
mov
sbb
mov
es
jmp
and
bnd
mov
mov
dec
mov
bnd
in
xchg
mov
cmc
jo
mov
cmp
push
sub
mov
mov
call
popa
xchg
jb
dec
xor
jbe
lods
jno
xchg
mov
mov
push
push
rcr
fisubrs
out
mov
mov
sbb
xor
mov
pusha
loope
mov
movsb
sbb
jne
push
push
call
mov
jmp
push
rcrb
and
inc
outsb
xchg
or
add
aas
mov
mov
xor
adc
mov
xor
addr16
push
adc
mov
push
arpl
jp
sbbb
lret
ss
fmuls
movsb
xchg
pushf
fnstcw
adc
adc
or
int3
out
adc
ss
dec
les
inc
cmp
idivl
mov
jns
mov
sbb
mov
pop
push
fsubp
mov
jg
cmp
push
xchg
in
popa
mov
sbb
arpl
pop
push
sahf
movsl
sar
imul
cwtl
cmp
push
mov
or
xchg
jb
push
jnp
faddl
ret
fists
jns
sub
add
push
dec
mov
sub
dec
rorl
xchg
push
mov
push
into
sbb
cmpsb
mov
dec
aas
sbb
xor
xor
jb
jns
and
cmp
and
xchg
xorb
jo
fstpl
mov
iret
xchg
mov
push
jmp
pop
std
or
repnz
push
and
aaa
push
scas
or
scas
push
arpl
push
xor
ss
push
hlt
out
push
jl
add
dec
mov
js
mov
ret
or
dec
dec
addl
ficoml
mov
lea
inc
push
or
add
pushf
fbstp
into
mov
xchg
insl
mov
sub
mov
out
push
push
notb
pop
fidivs
mov
dec
add
mov
mov
mov
pop
adc
into
icebp
mov
lock
je
ror
sbb
outsb
data16
add
hlt
xor
xchg
aam
add
xor
cmp
daa
jg
inc
add
movsl
ss
ja
sbb
mov
mov
pop
adc
call
filds
xchg
arpl
jbe
aam
call
and
adc
and
cmp
std
jne
jbe
xor
lcall
push
sub
lahf
xchg
jmp
cltd
pop
push
cmc
hlt
dec
icebp
mov
idivb
out
mov
stos
xor
mov
jne
std
jo
enter
es
adc
xor
out
mov
fstl
lds
adc
jbe
movsb
out
test
sbb
jno
ret
aaa
das
jmp
lret
ja
out
packuswb
outsb
pushf
cli
cmp
sub
pushf
test
xchg
repnz
jge
inc
imul
mov
hlt
jecxz
lret
or
push
clc
lret
shr
or
arpl
divl
xor
xchg
adc
add
cld
or
adc
jae
inc
lret
or
nop
sub
inc
pushf
int3
jae
push
inc
dec
pop
cs
leave
mov
or
call
pop
mov
fsubrl
mov
cs
mov
push
dec
pusha
and
mov
push
xchg
testb
jg
cmpsl
cltd
push
iret
fcmovnbe
jns
inc
jo
adc
mov
xchg
je
cmp
jecxz
add
call
imul
dec
jecxz
shlw
icebp
add
cmpsl
ljmp
push
jb
cmp
pop
push
movsb
insl
loop
push
push
jg
pop
jl,pt
popa
shrb
add
mov
in
repnz
mov
aam
dec
adc
into
ljmp
std
adc
adc
mov
fdivs
in
loop
sti
jecxz
lcall
sahf
nop
push
mov
fsubrl
cltd
xor
test
fstl
push
pop
inc
inc
mull
or
cli
jp
js
testb
lcall
or
das
jno
push
push
stos
push
adc
mov
sub
movsl
sbb
lods
lea
or
xchg
sub
inc
leave
adc
imul
repnz
out
jne
cmp
xchg
fildl
adc
inc
fld
adc
imul
xchg
adc
lcall
push
mov
inc
in
lods
aam
movsl
rcrl
daa
test
sbb
dec
icebp
push
cmp
mov
and
loopne
js
daa
movsb
repnz
addr16
sbb
hlt
lea
inc
cmp
xchg
sbb
sub
out
fisubrl
jae
mov
jmp
jge
ret
cld
das
mov
adc
and
push
icebp
inc
jmp
cmp
roll
mov
cltd
in
shrl
out
mov
in
cmp
or
xor
clc
xlat
or
js
push
cli
and
data16
loope
pop
dec
mov
dec
mov
pop
cmpsb
pop
notl
xchg
sbb
popa
jno
js
xacquire
sub
or
ret
addb
jnp
xchg
mov
xchg
dec
push
adc
in
out
ja
push
or
mov
push
pop
xchg
cmp
inc
jnp
and
or
out
jbe
aaa
pop
dec
mov
stc
orb
xor
push
popa
mov
add
xor
mov
push
push
add
mov
mov
addb
push
ret
push
jb
sub
mov
pop
xor
loope
daa
jo
cs
nop
adc
insb
xchg
xlat
movsb
iret
imul
out
test
pop
in
jb
out
and
push
in
mov
lock
sbb
popf
call
pop
lcall
orb
pop
sbb
movsb
mov
push
adc
push
test
mov
mov
std
inc
fs
jp
xchg
ds
lret
add
push
pop
push
mov
imul
dec
adc
dec
push
mov
mov
js
inc
es
cwtl
sub
or
xor
adc
add
test
int3
clc
xchg
mov
push
test
out
ret
mov
add
push
insb
mov
stos
sub
in
clc
and
inc
movsl
inc
dec
jns
ljmp
sub
mov
and
addr16
jg
add
and
rolb
or
cmp
les
inc
shlb
stos
mov
sub
xchg
or
sti
sub
mov
push
jle
cli
insb
pop
xchg
lods
mov
scas
ljmp
and
lret
sub
push
inc
stos
jecxz
outsb
in
inc
loop
mov
add
mov
mov
xor
push
add
std
test
xchg
fdivl
add
xor
aaa
pop
mov
pop
stos
or
xchg
pushf
jg
sbb
jmp
loopne
mov
jnp
or
inc
adc
adc
xchg
xor
cld
and
push
jmp
xchg
or
pop
in
iret
mov
mov
xlat
cld
and
push
out
xchg
push
shrl
je
inc
push
sar
cmp
ret
cmp
push
fwait
adc
std
fisubrs
inc
ds
in
fisttpl
pop
push
scas
cmp
dec
add
lods
enter
add
ljmp
imul
scas
sbb
xor
push
dec
mov
xchg
outsb
mov
test
mov
rcll
icebp
jb
push
inc
clc
adc
je
fimull
adc
mov
cmp
mov
ds
pop
clc
push
inc
rcll
xchg
pushf
xor
jno
out
sub
jp
jb
shlb
mov
sbb
push
loop
movsl
out
adcl
or
jb
fisttpll
fnstenv
pop
cmpsl
lea
adc
adc
daa
fisubs
data16
dec
scas
xchg
sub
sub
push
jmp
ds
lods
ror
and
sbb
mov
jp
repnz
xchg
test
jae
mov
call
dec
cmp
jge
sbb
jmp
shl
bound
xor
push
inc
cmp
cwtl
add
lea
xchg
ds
in
cli
adc
mov
cld
jns
inc
outsb
dec
adc
xchg
cmp
cwtl
mov
maskmovq
cmp
popf
mov
cmp
jmp
jbe
jg
pop
test
cmp
sub
cmp
fadds
pop
dec
fisubl
cs
stos
adc
repnz
pop
js
jecxz
add
in
pop
test
sti
lds
xchg
push
arpl
lret
dec
or
xlat
insb
or
xchg
in
sub
pop
mov
mov
aas
adc
les
cwtl
sub
test
dec
cld
stos
je
jle
jnp
ja
inc
js
fwait
imul
pop
ja
sbb
cmp
sar
xor
add
pop
cmc
or
xchg
sti
aaa
fstpl
insl
xchg
mov
sub
sti
jg
lahf
aaa
stos
rcl
xchg
idivl
nop
cltd
sub
rorl
xchg
movsl
jp
fnsave
fnsave
std
mov
jp
loope
adc
add
out
cli
sbb
ret
inc
jmp
adc
loopne
fcmove
int3
int3
mov
cltd
dec
mov
mov
lds
hlt
xor
insl
mov
addr16
push
push
ret
adc
cld
fdivs
mov
leave
mov
dec
push
jg
aaa
std
cs
xor
jmp
out
data16
stc
jl
andb
std
inc
arpl
les
les
clc
ret
cwtl
int3
leave
pop
imul
nop
xchg
or
dec
stc
xor
and
sahf
jecxz
push
xchg
loopne
pop
jns
push
inc
lcall
popa
mov
loop
cmp
int3
mov
fistpll
adcl
cmp
in
dec
dec
jp
push
mov
insl
push
int
xchg
hlt
test
lret
sub
pusha
lret
xchg
jle
add
aad
les
ret
in
mov
aas
mov
adc
imulb
out
ja
js
cmp
mov
mov
mov
es
lock
inc
fisubrs
add
cmp
adc
sbb
icebp
icebp
movsl
sub
add
sar
insl
aaa
pop
sbb
fiadds
addb
push
or
movsb
mov
sub
xor
rcl
xor
pop
enter
mov
push
pop
sti
xor
lret
xchg
test
mov
or
fcmovnu
roll
jp
cltd
adc
add
add
adc
divl
inc
adc
inc
xchg
dec
push
mov
push
push
pushf
cmpsb
sbb
or
push
mov
popa
xchg
js
push
sti
push
aad
cmp
iret
andb
pop
lods
lods
cmp
lds
aas
out
sti
cmp
ljmp
and
xchg
sub
lods
sub
sarl
lock
cmpsl
push
pusha
and
shlb
das
push
inc
push
sbb
or
sahf
jl
movl
mov
aas
sub
in
lods
jbe
rcr
aad
jecxz
inc
iret
out
mov
jle
or
int3
xor
aad
popf
movsl
push
push
shrb
iret
aas
gs
mov
xchg
push
or
cmp
arpl
jbe
cmp
mov
add
lret
in
pop
aaa
jnp
and
lret
push
std
adcb
xor
jb
jns
out
mov
push
aas
dec
js
sbb
dec
dec
jae
xor
add
sbb
xchg
pushf
stos
repnz
daa
xchg
pop
or
lret
and
push
cmc
push
inc
test
jg
or
add
sbb
test
test
push
daa
cs
bound
in
lea
pop
inc
xorl
mov
stc
adc
dec
pop
and
mull
cmp
sbb
jecxz
int
push
std
idivb
push
inc
mov
scas
jae
test
movsb
bnd
cmpsl
in
xchg
cwtl
sbbb
inc
hlt
jnp
aaa
push
cmp
int3
mov
fistpl
jg
cs
jne
ss
std
mov
xlat
lds
mov
sbb
push
outsb
pop
sub
iret
adc
jae
cmpsl
into
repnz
sub
das
jg
push
cmp
jmp
xor
not
fs
out
pop
jmp
inc
fbstp
or
roll
xchg
xchg
push
ret
jb
hlt
and
test
add
enter
dec
les
mov
add
jbe
mov
pop
aaa
sbb
add
sti
xor
out
mov
jno
ss
pop
lods
cld
jle
mov
xor
mov
xchg
ja
mov
adc
mov
jno
das
mov
mov
test
loopne
mov
pop
and
jno
sbb
es
jge
movsl
xabort
pop
sub
push
jle
mov
push
pusha
inc
sbb
mov
mov
jle
int3
xchg
fdivl
mov
in
sahf
lods
repz
es
jne
xlat
mov
inc
inc
adc
push
ja
fiadds
repz
pop
jb
ss
xor
scas
push
rcr
fadds
loop
push
and
das
stos
outsb
in
loope
push
and
sbbl
bnd
cli
shll
lret
cmp
or
test
sub
and
xchg
mov
les
hlt
adc
cwtl
mov
ficompl
andl
pop
and
or
jecxz
cmp
pop
imul
cld
bound
or
xchg
popa
jo
movntps
pop
xchg
lahf
mov
test
cltd
or
fsubs
adc
dec
imul
lret
out
lret
and
cmp
mov
arpl
mov
jnp
mov
add
sbb
pop
scas
cmp
imul
add
call
or
pusha
mov
adc
mov
movsl
and
hlt
jae
les
popf
lcall
dec
adc
cmp
and
adc
cmc
pushf
jno
cltd
mov
dec
gs
pop
xor
push
xor
mov
mov
mov
push
push
jmp
push
xchg
stos
les
ret
sub
int3
xchg
adc
xchg
mov
fisubrs
cwtl
jno
test
icebp
lea
cwtl
aaa
pop
xchg
mov
rorl
imul
loopne
jnp
inc
and
lret
ret
stc
sub
je
jbe
jl
push
or
pusha
pop
dec
cld
or
xchg
add
leave
popa
mov
jge
mov
lea
jno
imul
aaa
movsb
clc
pop
inc
shlb
pop
loopne
mov
movsb
outsb
pop
or
ljmp
je
and
dec
jmp
xor
leave
xchg
sbb
pop
jecxz
sti
pop
push
loopne
lahf
imul
pop
popf
push
pop
sbb
mov
add
inc
inc
and
test
es
xchg
push
mov
lods
push
cmpsb
dec
xchg
jecxz
mov
and
dec
ja
enter
sbb
xor
push
rcrb
or
stc
addr16
pusha
insb
enter
xchg
inc
and
in
pop
mov
in
push
cli
andb
aam
push
sahf
jns
mov
mov
movsb
inc
cli
cmp
sub
cwtl
or
inc
dec
mul
jb
mov
mov
sbb
push
pop
fidivrl
dec
ljmp
call
add
das
inc
lret
test
jmp
jo
mov
sbbl
cmp
shlb
dec
test
mov
pop
into
xchg
add
loop
adc
test
xor
sahf
test
aas
sbbl
jp
xor
jp
sti
cli
jnp
lret
les
fisttps
out
rclb
jecxz
fisubrl
gs
mov
add
repnz
mov
pop
fwait
addl
mov
mov
cmp
lea
lock
cmpsb
movsb
push
or
pop
push
pop
imul
mov
mov
and
js
add
or
push
test
mov
popl
mov
cmp
adc
lret
sbb
ret
insl
daa
mov
daa
add
sbbl
pop
add
jecxz
movsl
fnsave
add
fsubrp
iret
sub
sbb
push
jl
mov
shlb
xchg
cltd
sbbb
pop
cmp
adc
rorb
push
push
inc
pop
nop
addl
ret
out
in
push
sbb
pop
test
mov
add
bsf
push
cmpsl
cmpsl
jne
inc
into
push
mov
mov
test
sbb
add
les
daa
push
inc
sbb
mov
pop
ljmp
aam
insl
enter
jne
adc
lds
dec
leave
jmp
mov
call
dec
cltd
inc
sub
mov
into
in
or
mov
push
out
lock
call
out
adc
aam
xor
jbe
mov
mov
sbb
andl
xor
test
xlat
out
adc
or
insl
adcl
repnz
and
push
pushf
cmc
in
mov
popa
fcoml
lock
idivb
les
aas
and
jnp
lods
cmc
cmp
lods
shll
outsl
pop
jb
in
js
stc
std
roll
into
pop
xor
or
scas
and
cltd
fidivrl
push
mull
aam
sbb
dec
xchg
and
cli
mov
inc
cmc
pop
sub
shll
sub
adc
rcl
jmp
bound
aaa
or
jns
dec
loopne
adc
in
sbb
mov
shrb
gs
lods
popf
jno
xchg
jo
int3
ss
das
test
sub
call
rcrl
stc
push
push
mov
mov
jp
pushf
cmpsb
imul
and
gs
insl
sub
fwait
in
fmull
push
sbb
outsl
dec
cmp
dec
adc
ret
inc
clc
mov
mov
jno
mov
rep
mov
mov
out
sub
inc
aam
add
xor
push
jmp
pop
hlt
adc
inc
xchg
test
loop
mov
push
jp
xor
data16
adc
inc
orb
sti
sbb
repz
mov
jns
push
xor
std
sbbb
mov
les
dec
push
setns
mov
subl
fdivrl
adc
leave
rol
pop
mov
sub
push
hlt
int
mov
repz
lds
push
and
imul
outsl
imul
dec
sbb
xor
or
out
jle
data16
adc
dec
pslld
or
call
fwait
aam
pop
xchg
pushf
in
sarb
aaa
inc
jl
jle
sbb
aam
mov
cmp
mov
call
mov
mov
lahf
xchg
add
push
enter
xor
int3
xchg
imul
xor
xchg
jo
pop
mov
xchg
inc
xor
cmpsl
jne
lds
flds
push
fsubrl
sbb
inc
fwait
push
iret
cmpsb
das
mov
dec
nop
push
jns
mov
idiv
pop
lret
ja
mov
dec
nop
add
rcll
mov
xchg
and
mov
cmp
mov
sub
clc
sub
or
xor
pop
mov
inc
std
xchg
lea
daa
xor
mov
cmc
movsl
mov
cltd
in
pop
and
or
or
xor
in
cwtl
dec
jb
add
test
test
adc
mov
sbb
push
mov
std
sbb
sbb
xchg
cmc
adc
mov
js
adc
xor
push
out
adc
mov
ss
stc
fistpl
dec
shr
mov
mov
decb
push
ljmp
dec
out
cmp
xlat
ret
pop
jmp
jns
test
addb
out
dec
inc
lock
push
inc
popf
orb
cmp
jp
push
push
mov
dec
jle
inc
mov
jnp
das
leave
add
inc
and
leave
shrb
test
not
adc
xchg
add
data16
pop
push
adc
xor
je
fnstcw
popf
fstpl
and
jb
enter
out
test
sub
js
or
jns
stos
sbb
mov
test
mov
cmp
xchg
mov
or
or
lcall
cmp
insl
or
add
je
cld
sub
sbb
mov
nop
cmp
cmpsb
loope
cmp
in
inc
xchg
mov
enter
dec
fbstp
fimuls
inc
push
xor
loopne
sbb
cmp
out
add
outsl
mov
xor
cld
out
mov
push
mov
aam
repnz
jbe
repz
sub
inc
mov
insb
xlat
xorb
scas
movsb
loope
shll
inc
mov
cli
pop
inc
loope
adc
adc
pop
aaa
stos
mov
iret
push
adc
lcall
and
mov
ds
push
pop
add
leave
mov
push
pop
call
mov
inc
mov
or
jle
and
inc
test
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
jmp
pop
jge
lds
hlt
inc
xchg
jo
mov
mov
ja
mov
pop
cmp
addr16
xchg
loop
jb
loope
mov
cld
in
sbb
arpl
inc
daa
add
jmp
xchg
lea
inc
mov
insb
adc
ret
mov
lret
sti
stos
and
sub
js
mov
xor
cmp
mov
jne
push
mov
das
js
adc
xchg
pop
adc
jb
dec
or
inc
fcmovnb
xor
push
jae
mov
push
xchg
js
fimuls
pop
test
movsl
inc
scas
stos
sub
sti
dec
xchg
gs
add
hlt
sti
or
movsl
dec
cmp
sbb
and
dec
mov
sub
icebp
gs
add
xor
out
shlb
pushf
and
or
sbb
adc
shll
or
fisubrl
rcrl
pop
cmp
in
mov
xor
dec
loop
addr16
aad
push
cmp
lret
mov
mov
mov
test
mov
sbb
loope
repz
insb
cmp
cmpsl
push
dec
mov
or
mov
add
bound
pop
inc
test
xor
add
dec
cmc
xor
cmp
mov
inc
and
popf
in
repnz
add
cmp
push
rcll
sbb
cmpsb
and
pop
negb
insb
mov
dec
pop
mov
cmp
es
add
cmc
push
mov
imul
mov
xchg
push
cmpl
jmp
and
xchg
mov
cmpsl
in
scas
and
or
imul
pop
push
out
notl
cmp
push
sti
scas
cmc
adc
dec
hlt
addr16
cmpsl
mov
call
insb
inc
call
adc
popl
or
movsl
add
mov
out
jp
pop
pusha
jo
add
test
nop
mov
inc
inc
xchg
inc
adc
push
dec
xlat
movsl
loopne
push
mov
pop
cs
outsl
pusha
mov
xor
mov
xor
xchg
push
imul
imul
pop
stc
jmp
and
cmp
in
cwtl
mov
cmpsb
repz
loop
jle
cmp
mov
fstpl
add
out
mov
mov
or
out
or
lds
shr
scas
cltd
call
xor
jge
icebp
je
mov
insb
sub
sbb
mov
xor
into
sub
adcl
xlat
mov
dec
imull
mov
lods
loopne
cltd
mov
dec
negb
mov
sub
les
mov
adc
int
sub
push
aad
lea
in
push
rorl
insb
aam
jae
popa
aad
sahf
mov
xchg
xchg
xchg
push
repnz
adc
jp
cld
mov
andb
imul
out
inc
dec
pop
cmpsb
sub
aaa
iret
shlb
out
lahf
xchg
xchg
lock
test
pop
aam
pop
cltd
cmp
fnstcw
or
cmc
xchg
jecxz
movsb
imul
addr16
sub
add
fs
inc
inc
es
dec
cltd
lret
mov
push
jmp
int
ljmp
icebp
fxtract
mov
inc
sbb
mov
add
int3
pop
pop
mov
mov
movsb
ds
ret
pop
std
aad
fmuls
sbb
lds
cmp
or
out
sbb
decl
sahf
fcmovu
xchg
clc
fwait
dec
mov
xor
jmp
jmp
fidivl
sbb
sbb
daa
cmc
nop
lea
inc
and
push
cwtl
rol
ds
inc
xor
cwtl
hlt
xchg
fistps
push
lcall
xchg
in
sbb
lods
sbb
add
sub
sbb
jl
cwtl
jne
sub
pop
inc
mov
inc
mov
mov
cli
incl
jnp
inc
push
daa
addr16
rorl
adc
stos
add
ret
mov
inc
mov
pop
xor
push
ja
cmp
scas
sub
pop
lods
xlat
imulb
movsl
test
gs
or
xchg
xor
dec
sbb
nop
xor
stc
ret
call
mov
outsb
mov
mov
cmpsb
lods
jbe
sbbl
mov
rcrb
fwait
jl
and
inc
cmpsl
cmc
gs
push
sbb
loopne
mov
addl
push
mov
leave
scas
test
les
call
push
inc
ficompl
mov
jmp
xchg
sub
icebp
sub
lret
xchg
shll
mov
aas
or
dec
xchg
test
aas
std
sahf
out
mov
call
push
fs
cmp
sahf
cli
arpl
lret
ss
pushf
mov
loope
sbb
jbe
and
inc
call
es
add
cmp
in
mov
mov
and
mov
mov
pop
inc
icebp
xbegin
pop
add
xor
or
adc
xchg
out
and
add
sub
ror
adc
pop
inc
fwait
daa
into
lret
add
sbb
jg
push
pop
test
jmp
xchg
insb
leave
shrl
mov
sub
cwtl
mov
cmp
aam
sub
xor
adc
mov
sar
lock
into
pop
mov
aas
jl
cltd
leave
pop
jno
mov
jno
jbe
cltd
jecxz
pusha
hlt
add
push
fistpll
pop
adc
ret
iret
push
sar
test
sbb
mov
mov
pop
cs
or
arpl
push
push
mov
or
add
and
and
scas
mov
repnz
xchg
fistl
scas
rcrl
rcll
lods
push
fwait
push
mov
cmpsb
sbb
mov
aam
pop
scas
test
pop
aam
and
push
shr
pop
jno
mov
push
dec
mov
aad
std
das
fisubl
inc
sub
or
xor
inc
fcompl
add
add
push
cmp
xchg
scas
jb
xchg
push
into
pop
out
mov
jp
repnz
pushf
cmpsb
aad
daa
jae
lods
loopne
jno
adc
jae
lret
push
outsl
pop
xor
popf
test
imul
mov
lret
and
stos
jo
mov
jbe
aaa
cmp
sbb
xlat
jb
mov
mov
ds
jmp
cmc
pop
decl
cmp
mov
push
jno
sub
pop
test
mov
xchg
pusha
adc
scas
mov
mov
sub
mov
xchg
push
mov
pop
adc
xchg
and
push
adc
dec
sub
sub
jns
rorl
stc
stc
or
scas
sarb
out
fs
mov
fiaddl
sub
leave
xchg
enter
ror
jp
pop
push
cmc
rcl
into
sbb
push
in
ljmp
pop
inc
daa
jo
mov
pushf
push
cltd
dec
jp
adc
mov
jne
jl
lods
enter
add
fadds
add
and
add
loop
es
pop
js
cmp
xchg
xchg
jbe
test
lods
cltd
xor
mov
mov
jg
fwait
inc
in
xor
movsl
cmpsb
shlb
pop
and
jl
and
push
add
mov
add
sub
xor
mov
cmp
call
lret
repz
ss
jns
repnz
rorb
inc
xchg
sbb
add
stc
adc
mov
pop
sub
xor
in
dec
or
sbbl
dec
jmp
adc
jae
xchg
jl
mov
lcall
nop
or
jle
mov
push
fs
xor
int3
sbb
cli
pop
stos
jle
pop
rolb
pop
arpl
pop
pop
jle
sahf
xchg
les
es
pop
xchg
xchg
ljmp
push
arpl
mov
andl
mov
jg
dec
xlat
stos
cmc
pop
xlat
push
insl
jae
pusha
mul
mov
hlt
push
mov
lahf
cmpl
jo
push
cmp
add
sub
sbb
iret
mov
mov
push
cmpb
mov
add
xchg
push
or
frstor
bound
cltd
and
ja
bound
repz
hlt
sbb
mov
xchg
sub
pop
ret
inc
push
mov
aam
mov
sub
out
fsubl
inc
mov
call
sbb
dec
jmp
add
lahf
jmp
in
fs
jbe
sbb
mov
scas
shrl
bound
lret
pop
push
out
cmp
xchg
mov
mov
and
dec
jecxz
inc
jge
int3
js
and
adc
mov
popf
jp
pop
dec
push
out
jo
rcl
orb
pop
or
roll
mov
xchg
mov
jns
xchg
add
das
xchg
test
vmovntps
cmp
mov
inc
inc
pop
in
sbb
mov
mov
aam
adcb
stos
jle
repz
loope
adc
push
push
aas
emms
jp
pop
stos
mov
xchg
pop
das
dec
in
subb
fsub
outsl
lret
cld
aad
std
mov
cmpsl
jae
sbb
cmp
aaa
inc
cmp
fcompl
je
xchg
jno,pt
iret
or
cmp
push
sub
popf
fcompl
test
aas
shrl
sbb
mov
jp
xchg
jp
pop
lods
je
repz
and
ret
mov
cli
out
lock
jl
mov
sbb
push
leave
cmpsl
ss
mov
xor
fimull
lods
sub
cmp
push
jns
jl
and
sub
fwait
data16
lods
das
and
xchg
or
xchg
inc
pop
xor
inc
mov
negl
adc
mov
fisubs
sub
sub
mov
inc
inc
pop
insl
pop
insb
xchg
inc
test
or
inc
loope
push
outsb
rorb
sbb
add
sbb
stc
jle
nop
out
daa
cmc
std
mov
sbb
jnp
scas
xor
cmp
adc
sbb
mov
js
cmpsl
xlat
popa
jae
pop
push
aas
ds
gs
inc
add
inc
leave
xchg
jbe
jecxz
mov
adc
mov
movsl
add
out
movsb
pop
lods
jle
out
outsb
nopl
loopne
shl
adc
ja
push
jmp
cmp
push
std
mov
xor
or
mov
cmp
dec
aad
jmp
aam
dec
or
hlt
fists
jecxz
mov
xchg
or
inc
jbe
mov
mov
add
in
mov
les
fistpll
pop
call
je
cwtl
dec
xor
or
add
ja
out
test
call
pop
and
mov
out
mov
int
push
out
pop
mov
push
out
pop
addr16
dec
jg
xor
jne
leave
int
add
je
push
ret
and
add
arpl
jge
loopne
dec
cmc
jbe
es
adc
pop
jno
jb
adc
aad
push
sbb
xor
jnp
mov
cmpsl
and
sub
inc
pop
bound
orb
sti
xchg
imul
adc
out
sub
or
xor
jmp
js
dec
push
fadds
mov
inc
mov
mov
mov
sub
lret
or
or
lods
cmp
jge
aad
or
mov
das
in
xor
mov
xchg
dec
sbb
mov
cmp
dec
sarb
in
pop
jmp
movsb
sub
inc
rorl
pop
inc
iret
stos
jns
mov
sahf
insb
pop
mov
pop
hlt
inc
xchg
push
xchg
insl
cmpsl
push
and
icebp
loopne
push
push
std
mov
fidivs
ss
popf
ss
cmp
loop
cmpsl
add
push
push
dec
sbb
faddp
jl
xchg
outsb
shll
int3
sub
add
je
mov
push
dec
or
cvtps2pi
arpl
sbb
cmp
int
mov
cltd
lds
cmp
ss
mov
pusha
xlat
sti
clc
pop
repnz
movsb
rcrl
mov
cld
aad
lods
mov
and
aad
in
cmp
add
mov
mov
mov
and
push
xchg
cld
inc
pop
mov
jmp
push
incl
test
dec
mov
rorl
push
dec
fcoml
gs
rorl
cmpsb
lea
dec
mov
aaa
popa
xor
movsb
movsb
es
fdivp
sub
hlt
lret
adc
out
movsl
mov
fists
push
push
pop
sub
jge
push
in
add
aas
fmull
stc
in
xor
cmp
add
shrl
mov
push
dec
rcrb
mov
aam
addr16
mov
dec
sbb
mov
push
mull
cmpsb
sti
push
xchg
dec
pushf
pop
sub
les
sbb
cmp
mov
fdivrs
fbld
lds
sub
leave
nop
dec
adc
data16
mov
adc
scas
mov
lods
push
mov
mov
sub
lcall
fimull
repnz
shlb
test
jbe
add
in
repz
loopne
mov
cmp
incl
popf
cmp
out
rolb
push
xchg
cmp
dec
adc
push
outsb
testl
and
dec
out
xor
lds
mov
clc
or
jo
popf
std
in
jmp
or
dec
pushl
add
idivb
leave
pop
cmp
insb
insb
insl
test
add
push
pop
dec
ret
add
jecxz
add
imul
pop
push
mov
dec
sarb
adc
pop
xorb
scas
push
mov
bnd
int3
inc
out
push
xrelease
or
shl
xor
or
jmp
aam
mov
xor
push
fwait
cli
cmc
dec
xlat
push
inc
aas
pop
or
inc
lods
pop
enter
mov
pop
xchg
out
jbe
push
scas
xor
dec
cmp
mov
inc
pop
mul
xchg
cli
sbb
jp
gs
sahf
xchg
aaa
adc
sbb
adc
jg
decl
scas
mov
jo
cltd
loopne
cmp
jns
and
xchg
inc
lock
addr16
test
pop
pop
sbb
test
inc
repnz
xor
insb
push
sub
fstl
dec
xchg
js
xor
outsl
pop
and
test
pop
or
and
mov
insl
push
push
mov
lcall
rolb
loop
xchg
cmp
xor
mov
adc
test
jl
mov
mov
out
and
je
jle
mov
je
pop
mov
hlt
xchg
mov
outsl
popa
or
adc
dec
xor
mov
xlat
cmp
loope
inc
ret
movsb
loope
frstor
sahf
mov
les
cmp
pusha
clc
in
ss
push
into
enter
inc
adcl
pop
in
jo
sahf
inc
cmp
mul
pop
mov
lret
xacquire
xor
fsub
sub
push
adc
or
add
stc
lods
push
sub
sub
shll
inc
jg
mov
mov
jne
pop
xor
adc
push
out
pop
popf
stos
jp
mov
add
mov
gs
test
cwtl
fstpt
xor
hlt
jmp
fprem1
mov
inc
test
cmp
cmp
mov
jp
lods
and
mov
push
in
sbb
fcomi
cmp
push
jecxz
lds
nop
fldcw
fisubrl
mov
xchg
nop
and
call
xor
push
cmp
in
sbb
pop
inc
mov
cmp
inc
loope
fiaddl
lea
movsb
fxtract
and
dec
xchg
jno
out
scas
gs
mov
notl
push
dec
in
faddp
xchg
sbb
lret
pop
dec
inc
or
loope
les
cmp
inc
into
adc
inc
jns
push
les
insb
cwtl
or
stos
pop
sub
popf
repz
out
aaa
mov
stos
das
cmp
ds
jl
imul
mov
call
jns
push
cld
aam
jmp
xchg
mov
incl
stc
adc
fdivrs
daa
push
dec
inc
inc
xor
mov
xor
mov
push
push
mov
je
adc
test
dec
insl
or
xchg
mov
bound
pusha
sub
test
add
mov
les
mov
sti
inc
sbb
xchg
mov
sbb
sbb
test
push
mov
cmp
sub
dec
in
out
jmp
clc
fidivs
xchg
dec
mov
popa
dec
cld
sahf
lods
inc
das
push
sub
test
push
es
pop
call
push
aas
adc
and
or
and
data16
insb
jno
sbb
pop
jnp
mov
push
and
test
dec
cmp
outsl
and
cld
dec
mov
mov
les
popf
shr
andl
sbb
jb
xchg
add
fnstsw
lock
into
call
hlt
push
push
push
dec
lea
sahf
mov
popa
int
out
push
bound
and
jnp
add
push
pop
xchg
das
ja
push
pop
enter
cmp
or
pop
repnz
adc
in
inc
jp
cmp
jge
incb
push
cmp
mov
sbb
push
lods
mov
jbe
rcr
hlt
les
pop
fists
cmpsb
dec
notl
xor
test
sti
incb
sbb
sub
fcmovnbe
dec
cmpsl
push
jp
jne
in
cmp
int
movsb
popa
sub
mov
rol
cmp
mov
push
leave
movsb
inc
in
inc
push
push
out
std
mov
negb
mov
mov
out
lret
dec
fstl
mov
xchg
dec
pop
xchg
jb
movsl
rclb
idivb
cmp
leave
pop
enter
mov
sbb
clc
les
jg
inc
or
sub
pop
lods
outsl
cltd
hlt
pushf
gs
and
cmp
pop
pop
pop
mov
and
mov
out
dec
pop
inc
and
lea
inc
sarb
test
add
lods
scas
jbe
mov
cmpsb
and
loopne
rorl
mov
shll
das
xchg
xchg
fistps
xchg
cltd
xchg
out
xorb
pop
sub
aam
mov
int
mov
jo
insl
popf
es
aaa
jae
loope
xchg
out
lea
fsubrl
rcll
push
pop
inc
test
xor
xor
sti
pop
jecxz
push
outsl
aaa
hlt
imul
rcrb
xor
imul
mov
jle
dec
and
rcr
push
into
movsl
mov
mov
inc
test
loope
gs
lea
mov
jbe
sub
pushf
adc
hlt
ljmp
lahf
bnd
push
movsb
ret
hlt
nop
loop
mov
filds
cmp
mov
or
ss
or
jns
mov
adc
repz
clc
repz
cmp
in
mov
pop
out
mov
jp
std
outsb
rcll
js
pop
stc
xchg
das
jne
enter
add
sbb
outsl
mov
lea
inc
imul
xor
dec
pusha
xlat
addr16
pop
mov
jp
mov
mov
push
sub
ds
cmp
xchg
inc
mov
rorb
inc
fstpl
lds
and
or
mov
pushf
jns
repnz
sbb
jle
pop
aas
mov
or
sarb
xchg
movsl
push
test
sub
cmp
xchg
inc
dec
imul
jmp
pop
mov
mov
dec
icebp
outsl
arpl
pop
ds
repz
cmpsl
xor
test
test
cmp
push
mov
not
xor
jae
lret
dec
mov
imul
cmc
jle
mov
dec
push
out
mov
mov
mov
push
xor
xchg
xor
mov
push
sbb
loope
fistpl
sbb
inc
shlb
dec
into
pop
push
sub
push
mov
in
test
fwait
dec
xchg
dec
add
out
push
mov
push
pushf
mov
add
mov
dec
inc
and
out
jo
dec
rorb
fdivl
add
cmp
aas
sbb
xor
adc
push
mov
fs
add
loope
stos
inc
mov
mov
fcmovne
sahf
cld
neg
push
cmp
les
rcrb
shll
sbb
test
jne
jnp
xchg
sub
fldenv
jne
sub
pop
andl
sub
cmp
rcr
lods
leave
leave
jb
inc
rorl
inc
lret
dec
leave
jmp
in
mov
fcoml
aaa
ss
mov
in
test
fadds
add
or
pop
inc
or
and
jo
adc
xchg
sbbb
cmp
loopne
inc
fcoml
pop
xor
stc
jge
test
xchg
es
fstps
jp
std
lahf
fistl
js
mov
mov
inc
scas
popl
fsubs
or
push
cmp
imul
pusha
loopne
aaa
into
lds
xlat
push
aad
mov
stos
lds
and
sub
push
mov
ljmp
in
fildll
xchg
cmp
lcall
test
data16
aad
ficoml
xchg
inc
push
jmp
outsl
out
jns
push
jno
js
fucomip
add
das
ficomps
and
fldl
ficomps
jle
push
jnp
inc
mov
dec
std
ljmp
out
xchg
aaa
lods
sbb
sbb
test
mov
and
and
adc
pop
ret
iret
sti
xor
movsb
xor
clc
dec
push
cmp
insl
mov
cmp
insb
adc
xchg
cld
sbb
enter
fstp
jae
sub
outsl
dec
sub
fdivl
sbb
inc
sbb
inc
add
and
loope
andl
mov
pop
sub
inc
test
fsts
das
clc
inc
in
nop
mov
or
sub
fwait
stos
xchg
lret
sti
iret
stos
pop
mov
push
rorl
dec
test
sub
inc
xor
in
imulb
adc
out
xor
lcall
into
push
dec
jnp
lret
adc
insb
sub
jge
fs
testb
push
aad
fimuls
push
ds
outsb
sti
and
and
not
stos
lret
or
add
cli
jge
pop
daa
nop
push
out
ja
mov
mov
and
inc
mov
mov
cmp
loope
xchg
mov
mov
out
xchg
out
lock
mov
iret
pusha
sub
fadd
add
mov
inc
sahf
mov
iret
mov
dec
fiaddl
inc
push
or
repnz
and
inc
mov
test
mov
sbb
andl
xlat
pop
outsl
add
pop
xor
shrb
outsl
pusha
imul
adc
push
mov
outsb
mov
lods
jmp
int3
jl
into
xchg
sbb
pop
jae
iret
outsl
fwait
mov
pusha
icebp
jmp
lods
xlat
in
add
rclb
outsb
dec
sub
mov
sbb
std
roll
nop
aam
sub
sbb
hlt
push
cmpsb
xchg
shrl
fists
insl
int3
mov
loopne
inc
fsts
adc
pop
insl
mov
les
rol
pop
xor
call
cli
xor
push
cmp
in
dec
int
ljmp
mov
or
add
sub
cmpsb
in
dec
pop
sbb
js
shlb
and
xchg
mov
jg
testl
inc
fnstcw
mov
stos
push
out
inc
cltd
movsb
xchg
pop
es
push
sahf
and
orl
push
pop
push
pop
std
cmp
lahf
mov
add
cld
adc
sbb
add
mov
mov
mov
shrb
nop
jmp
out
orl
lds
std
and
imul
roll
push
dec
test
fdivs
inc
test
popf
sbb
mov
hlt
mov
test
mov
xor
jmp
xchg
repz
movsb
pop
jo
mov
inc
push
mov
repz
les
out
fcomip
push
cmp
pop
and
cmp
mov
adc
cmp
insb
ds
xor
icebp
mul
cs
imul
cmpsb
jo
mov
inc
mov
arpl
pop
repz
gs
loop
xchg
cmp
aas
pop
jbe
or
jg
mov
outsl
adc
mov
int3
xor
or
repz
mov
bnd
inc
pop
sub
cltd
outsl
dec
and
mov
cmp
jae
pop
scas
lret
insl
cs
std
outsb
jo
push
popf
rcrl
and
xlat
mov
mov
sub
inc
jg
test
mov
mov
sti
jmp
int3
jmp
jg
lcall
std
mov
push
ret
lea
push
cmp
out
outsl
mov
sub
incb
stos
bound
inc
cli
xchg
cld
adc
pop
mov
in
insb
dec
shl
lods
out
jb
sbb
pop
ror
daa
xchg
ja
pop
xor
mov
cmp
std
pop
mov
cmp
inc
cs
pop
pop
mov
mov
loope
dec
push
loopne
sub
xor
pop
loop
leave
mov
mov
push
pop
scas
int
outsl
loop
pmulhw
arpl
lock
adc
cmpsl
imul
dec
cmp
push
into
pop
dec
xchg
sbb
daa
cmpl
mov
cmp
test
cmp
xor
push
fsubs
cwtl
pop
add
sub
arpl
xchg
add
xorl
nop
sbbb
mov
xchg
or
pusha
fldcw
xor
fistpll
mov
jecxz
xor
pop
and
fs
call
mov
inc
es
mov
and
ss
jnp
mov
dec
jo
push
xchg
rol
test
mov
xchg
out
xor
lods
out
mov
out
mov
mov
icebp
pop
rcr
filds
pop
cmpsl
ljmp
push
daa
cli
or
mov
pusha
les
addr16
stos
mov
dec
add
xor
dec
test
jecxz
bnd
adc
mov
sub
jbe
out
push
frstpm(287
ret
or
or
idivl
mov
lods
cmp
lea
mov
sub
stos
jno
lock
cmp
sbb
js
lods
inc
push
adc
cmp
push
push
pop
push
sub
cmc
outsl
adc
cmp
push
xchg
addr16
out
dec
push
mov
divl
das
jmp
mov
sub
lret
and
outsb
insl
jmp
outsl
cmp
ret
ss
popf
pushf
push
sbb
sahf
mov
add
or
je
pop
sub
xor
bound
jle
rorb
movsb
mov
mov
jb
mov
sub
cmp
xor
jl
mov
mov
pop
or
and
out
iret
dec
sub
xchg
push
mov
das
cmp
xor
cmpsl
xchg
sbb
in
inc
fiadds
add
insl
push
iret
data16
cmp
icebp
nop
cs
sbb
int3
pop
mov
ds
jecxz
sti
call
imul
bound
pop
dec
lds
ds
and
or
add
pop
aaa
in
ficoml
jg
sub
mov
lret
mov
adc
fadds
add
std
sti
sbb
sbb
mov
out
adc
xchg
push
fsubrs
frstor
sbb
push
fsubl
mov
mov
data16
test
sbb
inc
jnp
sub
in
jo
add
test
fnsave
sbb
add
lcall
mov
scas
adc
ja
fiadds
iret
xchg
imul
out
rol
lret
cmp
jge
dec
xor
std
lea
rcr
mov
stos
or
mov
dec
lahf
aad
cmp
in
pop
push
or
hlt
insl
sahf
into
leave
lret
mov
ds
lahf
aaa
pop
cltd
jp
aam
fdivl
lcall
inc
inc
loop
cltd
or
data16
js
cld
gs
add
add
iret
arpl
and
sub
mov
push
int3
cmp
or
sti
lret
jnp
nop
sub
loop
xor
xchg
pop
mov
stc
sbb
mov
fadd
sahf
jl
jno
popf
shl
sbb
sbb
adc
imul
jle
fmull
fistl
and
cld
das
cltd
js
mov
fwait
or
rcrl
test
inc
push
lock
outsl
add
pop
dec
call
pop
loopne
gs
sub
push
inc
or
push
xchg
and
jno,pt
push
je
pop
testl
sub
xlat
aas
add
xchg
out
ja
insb
push
mov
xor
mov
xor
pop
int3
xchg
push
add
dec
jp
add
cmp
ljmp
inc
jp
dec
mov
je
popa
call
bound
loope
sbb
and
movl
sbb
enter
xchg
push
jnp
fstpt
mov
inc
repz
xchg
ret
sti
scas
inc
jg
add
cmp
adc
mov
and
sti
mov
lcall
xor
cmpsl
shl
mov
inc
mov
cmc
push
stc
jl
add
push
nop
push
aaa
ret
les
lods
je
loopne
sahf
inc
xorb
or
push
cli
repnz
push
jns
inc
cwtl
call
lahf
pop
pop
leave
push
hlt
sub
mov
xor
fwait
mov
js
jns
mov
xchg
fstps
jae
repz
movb
lock
lods
pop
sbb
xor
cs
lea
stos
es
fwait
imul
xchg
insl
dec
dec
mov
xchg
cmpsl
sub
pop
add
xor
loope
xchg
in
adc
sub
sub
jno
ret
int
and
push
sub
sbb
and
dec
or
sbb
imul
cwtl
or
add
add
mov
out
xchg
stos
aad
ss
pop
push
mov
mov
jp
pop
mov
das
xchg
push
inc
loop
outsb
out
in
ja
xlat
mov
inc
rcl
xor
xchg
ja
out
add
lea
cmp
data16
sub
mov
cmp
xchg
dec
push
jp
inc
xchg
mov
pop
in
push
icebp
xor
lods
shrb
cld
inc
sbb
lcall
mov
and
dec
repnz
jmp
dec
int
dec
ffreep
sub
insl
andb
lods
ljmp
mov
mov
push
in
push
add
adc
inc
and
gs
add
xchg
xchg
xor
sarl
pop
jp
imulb
inc
ret
push
inc
cmp
lcall
movb
inc
pop
ds
fistl
lahf
xor
add
stos
roll
int3
dec
jo
cmpsl
sub
stos
jno
stos
shrl
sbb
mov
mov
std
daa
mov
pop
pop
xchg
movsb
push
sahf
mov
lock
scas
cmpsb
cmp
xor
jecxz
iret
xchg
pop
xchg
jecxz
mov
adc
fisubrl
adc
addr16
dec
cmpsb
sbb
and
mov
jnp
pushf
subl
js
jae
mov
cmc
pop
nop
in
aam
in
jbe
push
jae
jecxz
sub
rcll
fmuls
mov
xchg
ljmp
test
cmp
out
imul
and
mov
or
pop
cmp
sub
cltd
sbb
bnd
pop
mov
in
rcr
lret
or
sahf
sti
popa
mov
dec
xchg
fcoml
lret
leave
pop
inc
fisubl
filds
test
push
lock
cmp
imul
in
test
roll
ret
mov
imul
movsl
stos
jnp
jp
ds
arpl
sbb
out
cmc
sub
mov
cmp
das
jbe
repz
inc
sbb
and
out
inc
push
pop
sub
jbe
gs
jo
mov
adc
ret
cld
cmp
push
dec
shl
rorb
fistl
push
and
movsl
mov
adc
stos
add
cmp
shrb
lret
pusha
xor
clc
push
lcall
leave
and
ss
pop
push
xor
into
rcl
mov
adc
loope
divl
sub
push
fisttpll
add
inc
test
ds
testl
xchg
sbb
sub
cmp
pushf
rcll
xchg
sbb
test
adc
movsb
imul
sbb
insl
dec
inc
mov
cld
sub
jbe
out
outsb
rcll
inc
xlat
adc
jnp
lods
cmpsl
sti
sub
in
and
adc
scas
mov
inc
cmc
cmpsl
push
scas
shrb
mov
loope
inc
lds
mov
out
xchg
cmp
or
jp
in
cltd
jge
pop
dec
pop
es
nop
outsb
push
rolb
inc
scas
mov
stos
pop
mov
cld
ret
jno
movsb
scas
pop
xchg
ficoml
xorl
rcll
jle
test
insl
popa
jecxz
dec
xchg
clc
push
popf
xchg
imul
ret
and
cwtl
jle
negb
sar
jg
mov
stc
or
xchg
push
push
mov
xlat
jge
jge
ds
inc
fisttpl
pop
adc
call
cmpsb
cmp
ret
pushf
out
in
stc
repnz
adc
addr16
mov
pop
inc
sub
fcoms
mov
insl
cmp
cmpsb
sub
dec
icebp
jge
dec
cwtl
pop
cmp
notb
jb
and
mov
fsubs
mov
cmp
fdivrl
xor
cmc
cli
mov
pop
rcl
je
das
sbb
mov
pop
fs
lock
mov
dec
out
cmp
mov
inc
movsb
inc
sahf
mov
lods
lahf
jecxz
mov
incl
mov
fnsave
lods
xor
xor
mov
stos
mov
out
test
dec
stc
xlat
andl
mov
sub
lds
repnz
repz
cmpsb
mov
bnd
inc
or
clc
cmp
mov
orl
icebp
cmp
push
cmp
or
movsb
shrd
shr
mov
mov
xor
shl
jmp
xlat
mov
iret
or
push
mov
mov
adc
xchg
inc
push
test
cli
jo
mov
cmp
pusha
bound
pop
popf
stos
jno
mov
cmpsl
dec
testl
and
mov
add
out
cli
sti
mov
cwtl
testb
idivl
sti
mov
lcall
xor
scas
mov
cltd
push
mov
daa
fstpl
cmp
inc
inc
fidivs
loop
mov
push
inc
subl
mov
cwtl
cmp
icebp
lret
add
pusha
push
test
adc
inc
push
pop
ja
mov
repnz
stos
cwtl
repnz
out
cmpl
out
pop
xor
adc
xor
in
loopne
int3
lcall
jbe
sub
hlt
and
das
in
into
es
jo
xor
jns
jo
adc
jp
mov
sar
jnp
xor
cmpsl
sub
dec
cld
push
cmp
inc
pop
mov
lock
lahf
xchg
imul
mov
push
scas
in
insb
xor
mov
or
js
loop
aad
les
inc
mov
or
push
push
jae
js
xchg
mov
push
jbe
js
and
stc
inc
jns
xor
push
daa
je
push
inc
insb
int
pop
inc
cltd
push
rolb
idivb
jae
mov
jle,pn
dec
sbb
pop
mov
popf
push
fnsave
gs
neg
mov
dec
test
test
leave
not
inc
push
pop
cli
dec
cmc
push
push
or
in
push
mov
jg
cmp
das
xchg
pop
sbb
mov
jnp
or
add
dec
and
js
fdivr
cwtl
xchg
and
xchg
mov
inc
test
or
das
pop
jns
mov
adc
mov
addr16
xchg
inc
cmp
dec
in
mov
add
and
xor
mov
xor
adc
repz
in
dec
sbb
mov
mov
sti
fldenv
leave
lahf
stos
lcall
ds
inc
test
repz
inc
sub
inc
xchg
test
pop
xchg
call
jecxz
into
and
inc
lret
repz
xor
mov
stc
loope
or
js
mov
mov
push
imul
adc
dec
xor
andb
sbb
mov
cmp
int
dec
movsl
add
mov
aad
pop
mov
lods
sti
and
mov
or
mov
mov
mov
faddl
xchg
jae
add
mov
jl
cmc
scas
or
mov
jne
add
std
adc
dec
test
and
int
dec
lds
in
cld
loopne
loop
or
add
jo
dec
mov
popl
cli
testb
xchg
mov
fwait
je
bound
jo
adc
xchg
sahf
sbb
aam
and
arpl
push
test
mov
dec
lock
insb
out
call
jne
iret
xchg
add
jmp
sub
xlat
fsubs
inc
ljmp
inc
jmp
into
aas
icebp
leave
and
or
dec
cwtl
arpl
shll
outsl
cwtl
loopne
push
mov
aam
loope
inc
iret
ja,pt
adc
imulb
mov
cmp
aad
call
jns
out
jmpw
jne
les
cmp
mov
cltd
in
je
lds
sahf
mov
mov
test
mov
rol
movsb
jns
mov
and
and
xchg
shlb
jmp
lcall
add
leave
loopne
popa
push
ljmp
jecxz
lods
and
push
scas
pushf
inc
and
out
imul
repnz
rcr
std
sub
mov
out
hlt
dec
xchg
jns
adc
test
jmp
xor
push
xchg
shl
xchg
xchg
adc
inc
push
and
mov
iret
jle
movsl
ja
dec
in
in
fwait
pop
lods
jg
fldcw
int
pop
sbb
push
inc
stos
xor
sub
dec
adc
xor
hlt
je
jmp
mov
out
push
rorl
aaa
xchg
and
mov
mov
fidivl
jns
mov
shlb
add
add
aad
loop
aaa
xchg
xchg
mov
pop
sub
mov
fistl
mov
pop
cmpsb
xchg
int3
jge
push
cli
mov
push
xor
sub
add
mov
pop
cltd
mov
pop
lock
ja
pop
mov
jg
and
pop
jo
negb
inc
stc
bound
adc
sbb
loopne
xor
outsl
int
sbb
lods
cmpsl
jne
sbb
shrl
leave
sbb
cwtl
pop
shrb
push
rcll
or
adc
ffreep
repnz
inc
inc
mov
loopne
jo
jne
jl
lock
add
dec
test
test
aaa
xor
inc
xorb
sub
mov
mov
insb
push
xorl
pop
pop
jp
mov
dec
dec
call
sbbb
mov
je
lock
pop
dec
adc
jbe
out
js
or
das
inc
dec
es
cmp
push
loop
ret
mov
dec
xchg
rcr
lock
in
scas
add
mov
mov
add
pop
dec
or
call
sahf
fnstenv
clc
cmc
int3
mov
rcl
push
pop
dec
or
xchg
test
out
gs
pusha
add
xor
in
xchg
fisubs
in
addr16
orb
into
cwtl
out
add
stos
sub
mov
imul
jecxz
int
test
nop
or
lods
adc
cmp
in
scas
outsb
mov
fwait
pop
pop
jne
leave
sub
sub
sbb
jne
leave
xchg
test
testl
stc
roll
xchg
fisubs
mov
cmp
arpl
jge
mov
mov
mov
test
cmp
fcom
popf
jle
xchg
test
inc
mov
pop
inc
dec
adc
xchg
pop
fiadds
dec
inc
jg
mov
mov
xor
sub
sbb
inc
push
ds
cld
jns
rorl
xchg
aaa
out
es
or
add
cld
sbb
dec
jnp
sbb
xchg
repz
dec
pop
jecxz
movsb
rorl
dec
and
adc
loope
xlat
xchg
in
sub
lret
inc
inc
repnz
loop
cli
popf
popf
xor
push
mov
cmp
add
dec
fadds
mov
fisubrl
adc
inc
aad
or
js
dec
rcrl
pop
xor
push
pop
cmp
sub
mov
add
sbb
mov
and
callw
mov
in
jle
es
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
mov
outsb
arpl
xchg
and
xchg
inc
mov
rclb
adc
xchg
jo
pushf
xchg
or
push
sbb
insl
arpl
adc
jle
sub
push
jmp
aaa
sbb
outsl
xchg
add
adc
gs
xor
and
stos
cmp
push
jns
dec
push
mov
arpl
cmp
push
scas
cltd
dec
rol
and
inc
jp
and
mov
ret
fists
addb
sti
jnp
sbb
pop
mov
gs
sub
popf
jns
test
dec
pop
iret
jge
iret
pushf
int
dec
shlb
xchg
xor
or
jnp
mov
fisubrs
xchg
mov
mov
and
jb
add
rol
adc
dec
sub
flds
inc
es
dec
ja
ja
cld
stos
mov
cld
fcmovb
inc
inc
inc
xor
cmp
xchg
enter
sbb
es
cltd
and
notb
lret
pushf
lret
stos
jbe
cmp
mov
out
lahf
mov
arpl
aad
je
testb
dec
jne
sub
outsl
repnz
add
fimull
dec
inc
movsb
cmove
xchg
xor
push
cs
jns
dec
fs
mov
shlb
xorl
xchg
pop
jmp
mov
lahf
jne
inc
inc
int
ds
jno
mov
dec
dec
test
mov
sar
lahf
jp
aad
test
nop
repz
sub
jle
xchg
inc
xrelease
adc
jbe
mov
xor
lds
movsl
or
jbe
and
daa
pop
lds
push
pop
mov
sub
mov
pop
pop
mov
xlat
rcrl
cli
xorb
pop
and
mov
nop
cmpsb
mov
inc
scas
push
gs
jae
adc
mov
jne
or
nop
addb
lods
jle
das
sub
cmpsl
adc
cmp
xchg
outsl
inc
mov
inc
pop
or
xor
mov
mov
mov
fimuls
aaa
nop
sarl
imul
or
add
mov
into
notl
mulb
pop
bound
dec
lock
mov
cmp
idivb
fstpt
adc
das
push
cmp
mov
xchg
out
push
nop
push
bound
dec
cmp
shrl
loope
les
call
mov
outsl
dec
lods
adc
mov
fldcw
orl
xor
test
loopne
xchg
sahf
cmp
and
test
pusha
imul
inc
adc
jmp
and
movsb
inc
sbb
inc
mov
jbe
mov
jae
add
push
jb
cmp
js
lret
arpl
pop
sbb
test
outsb
add
in
cmp
pop
cld
lret
sub
jae
mov
fnsave
xor
dec
and
aas
stos
mov
pop
mov
sbb
or
jae
xor
fadds
js
mov
adc
stos
ss
dec
xchg
jmp
loope
arpl
insb
lds
mov
xor
xor
lea
cmpsl
test
jns
cltd
pop
pop
sar
imul
adc
call
xchg
mov
inc
fs
js
sbb
mov
ja
dec
xchg
stc
pop
testb
insl
faddp
inc
cli
mov
and
pop
push
jmp
push
aam
lret
adc
pop
adc
cmp
push
cmpsb
xor
sub
mov
fcmove
lods
mov
lcall
push
aam
sub
sub
sbb
jbe
test
push
xchg
and
scas
insb
int
push
cmp
es
test
fildll
add
in
fs
sti
sub
rcll
push
fs
dec
dec
inc
lret
ljmp
dec
sbb
push
inc
scas
out
adc
xchg
fcomps
dec
or
loop
jecxz
faddl
movsl
insl
aas
adc
icebp
adc
mov
mov
lock
and
lods
jmp
cld
sub
push
mov
jnp
mov
mov
mov
xchg
mov
sub
mov
cmpsl
pop
mov
outsb
mov
mov
adcb
call
inc
push
mov
xor
in
scas
push
imull
mov
sti
adc
movsb
xlat
in
push
in
mov
std
sete
rclb
and
adc
xor
pusha
scas
out
inc
hlt
imul
sahf
inc
xchg
dec
in
pop
jmp
shll
lock
add
mov
loopne
sbb
repz
mov
into
push
mov
es
out
push
xchg
outsb
mov
clc
out
dec
inc
dec
jbe
stos
fstpl
adc
sbb
push
jp
push
ret
mov
lcall
into
je
pusha
enter
push
leave
cmc
cli
popf
ds
loop
mov
das
pop
jno
jmp
iret
and
push
addr16
in
mov
lret
fld
mov
lret
push
dec
xor
mov
ss
call
push
inc
mov
out
push
add
cli
repnz
pushf
xchg
xchg
add
jecxz
cmp
cmpb
lcall
hlt
fnstsw
lret
adc
and
icebp
mov
adc
pop
lret
scas
sbbb
nop
ljmp
pop
std
adc
mov
adcb
jg
clc
test
dec
cmp
push
aas
jmp
adc
push
push
mov
inc
insb
lods
ret
ljmp
and
xchg
push
sub
jp
nop
clc
mov
addr16
ss
rcr
pop
cwtl
popa
mov
pop
jae
mov
add
pop
pop
add
arpl
jg
mov
cltd
mov
pop
insl
mov
rcr
test
xchg
cld
jge
lea
adc
dec
mov
fdivrl
cvtpi2ps
cmp
mov
popa
xor
and
movsb
cmc
add
enter
add
jo
in
nop
int
inc
mov
push
test
leave
pop
add
xchg
xor
xor
cmp
lcall
pop
std
adc
and
xchg
lahf
test
or
dec
jae
inc
sub
rorl
jo
mov
cltd
mov
test
fs
jns
sub
insl
and
mov
shll
dec
imul
or
sbb
iret
int
je
pop
push
dec
js
or
pop
popf
jns
call
and
xor
inc
roll
mov
and
in
jns
js
sbb
push
stos
jecxz
add
lods
or
mov
and
movsb
inc
stc
jno
lret
mov
inc
mov
and
or
enter
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
fnsave
push
adc
adcb
adc
xchg
xorl
dec
sbb
fisttpll
add
sub
pop
mov
pop
jmp
push
in
xchg
std
and
lods
xor
mov
lods
jle
xorb
xchg
cmp
pop
jge
stc
es
nop
sti
je
lahf
scas
scas
outsb
jle
pop
clc
out
imul
jmp
sti
stos
imul
std
sub
adc
push
in
inc
fwait
xchg
pushf
cmp
icebp
ja
xchg
popa
fcmovne
lds
aaa
push
mov
mov
dec
sbb
das
push
mov
data16
sub
in
jae
jbe
icebp
outsb
jb
subb
cmp
test
lahf
cli
out
mov
or
subb
mov
xchg
and
add
cmpsl
dec
xorl
out
les
cli
jmp
mov
in
js
inc
jecxz
cmp
jl
push
cmp
int3
dec
loopne
add
pop
fists
sbb
push
sahf
mov
pop
dec
sbb
ljmp
lds
js
inc
inc
fmuls
ljmp
sbb
sbb
fwait
xchg
mov
ljmp
inc
repnz
sbb
out
icebp
insb
mov
sbb
sbb
xchg
or
mov
int
dec
ja
movsl
adc
cmpsl
scas
not
repz
dec
add
mov
out
pushf
jmp
outsl
push
addr16
sahf
call
outsb
outsl
sub
xchg
rcrl
cli
jmp
testb
xchg
sahf
mov
in
push
sub
in
shrb
adc
mov
loope
stc
mulb
cmp
stos
por
out
push
and
add
stc
inc
jg
cli
sub
mov
push
pop
dec
test
cmp
fildll
in
fisubrl
loope
movsb
add
lods
sub
inc
jae
stos
mov
cmp
mov
xchg
cwtl
shl
fstl
sub
cmp
insb
outsb
js
out
adc
and
loope
mov
push
nop
aam
jmp
in
icebp
movsb
outsb
push
je
dec
mov
sar
add
push
mov
sub
out
jns
mov
pop
inc
xor
fisttps
push
ds
loope
stos
adc
in
cmp
in
sarb
scas
mov
dec
mov
fbstp
cwtl
test
loop
aam
fidivrs
xor
leave
dec
add
jg,pt
repz
cmp
cwtl
xor
push
fsts
sbb
jae
aad
testb
scas
cld
outsl
cmpsb
icebp
cmp
jecxz
fnstsw
mov
dec
cmc
fwait
jae
mov
rcr
leave
ss
sti
sbb
mov
jbe
mov
xchg
andl
rorl
das
fisttpl
adc
inc
mov
testl
jo
loop
add
dec
xor
jo
clc
mov
inc
shl
jecxz
sbb
jp
cmp
fisubrs
daa
xor
sbb
out
loopne
mov
aad
mov
jge
sbb
mov
inc
int3
sbb
mov
out
pop
sbb
mov
out
mov
aam
lods
or
nop
push
add
negl
or
out
test
jns
mov
add
inc
shrb
outsl
adc
xchg
and
lcall
sbb
bound
hlt
pop
xchg
push
pop
outsb
lea
sub
xchg
pop
pop
mov
adc
scas
int
mov
sbb
mov
and
or
or
in
ds
test
sarb
push
int
sbb
push
stos
dec
pop
add
or
outsl
and
out
pop
mov
sub
aas
jmp
cmp
std
xor
pusha
add
popf
push
or
cmpsb
mov
inc
inc
into
cmp
or
xor
icebp
inc
mov
leave
push
sub
jbe
jb
mov
lret
loop
adc
cmp
test
call
in
out
adc
mov
mov
aad
les
shlb
clc
add
aad
jae
stos
xchg
pop
test
lods
mov
shr
je
out
pop
xor
mov
lds
fstps
xor
xor
lds
push
inc
jge
jg
xchg
xor
adc
pop
pop
pop
sbb
lret
lea
js
les
adcl
fwait
mov
fcmovne
addr16
test
jmp
imul
mov
or
lret
xor
push
pop
sar
and
sti
aaa
xchg
cs
inc
pop
sbb
cmp
fs
or
jno
rolb
dec
lds
loopne
dec
xchg
sub
push
and
insb
in
add
pop
out
jecxz
pop
push
jnp
stos
or
mov
out
inc
in
pop
xchg
and
lods
iret
dec
inc
mov
lods
inc
push
es
jecxz
aaa
fmuls
clc
or
xchg
aad
push
fs
rorb
sti
push
shlb
mov
push
push
jg
fildll
add
sbb
ljmp
or
inc
xchg
mov
sbb
es
test
dec
and
inc
jno
jle
mov
aad
hlt
mov
shrb
imul
and
repz
push
divb
jp
xor
add
test
into
push
sub
negl
pop
jg
xchg
aam
inc
jno
or
or
faddl
test
cmp
stos
jmp
lods
sub
sete
mov
jmp
xor
push
add
xlat
xchg
xchg
idivl
xor
adc
adc
pop
sti
popf
sub
xchg
mov
repz
divl
imul
cmpl
out
jge
arpl
cwtl
and
hlt
les
xchg
rcrb
lret
add
xchg
and
pusha
aad
add
pop
mov
mov
or
pushf
cmpsb
xchg
inc
inc
enter
xor
hlt
orb
es
adc
std
sbb
daa
insl
cmc
filds
pushw
jle
std
dec
lea
xchg
cld
dec
orb
xor
xor
push
ljmp
es
jecxz
mov
and
push
lcall
fdivr
dec
fcom
add
cld
push
daa
dec
sar
sub
ret
es
mov
das
mov
dec
sbb
cmpsl
insb
in
cmp
mov
or
ucomiss
xor
cmp
dec
mov
out
lods
pusha
sbb
insl
iret
sahf
fildl
ss
iret
or
imul
rclb
addr16
push
mov
jbe
dec
cmp
sti
cmp
push
es
sysenter
mov
inc
or
jge
mov
mov
or
leave
mov
push
inc
mov
rcl
and
mov
fildl
add
ret
push
jge
mov
es
mov
mov
cmc
mov
sbb
arpl
sbb
or
xchg
add
aaa
loope
leave
mov
mov
pusha
add
scas
inc
pop
jecxz
or
mov
mov
shl
shl
mov
mov
jmp
test
fcoms
or
mov
pop
or
ja
int
bound
sahf
xor
and
jle
push
pop
xchg
stc
arpl
add
jno
rorb
ret
ret
push
cmp
dec
movl
popf
or
mov
cmp
mov
and
movsb
mov
push
mov
dec
cltd
dec
push
sub
xchg
sub
mov
pop
dec
xor
fists
mov
test
add
adc
adc
icebp
lret
fwait
xor
icebp
add
mov
lret
daa
pop
sub
add
fsubrs
std
sub
popa
icebp
aam
lret
mov
add
dec
inc
jge
out
cmp
sbb
fbstp
dec
addr16
add
inc
pusha
jno
xchg
pop
push
xlat
dec
pop
aas
sub
jle
and
dec
dec
push
out
pop
jb
inc
cwtl
es
into
adc
out
push
push
jnp
loop
out
xchg
aam
cli
cmpsl
fucom
pop
imul
jne
mov
inc
into
xor
push
mov
iret
xor
nop
lcall
adcl
imul
repnz
pop
movsl
fs
cmp
mov
sbb
jp
add
sub
stos
mov
dec
push
cwtl
push
lods
xor
push
push
dec
imul
jp
mov
fdivp
test
sbb
movsb
stc
add
std
cli
cmp
mov
sbb
cmp
aam
sub
jmp
inc
fwait
test
xchg
mov
mov
cmpsl
jbe
fs
xlat
and
fsubrs
add
scas
gs
mov
inc
movsb
push
out
ret
inc
flds
mov
cwtl
lods
xchg
inc
jecxz
xlat
inc
adc
cmpsb
mov
jno
in
pusha
fisttpll
push
lea
cli
dec
pop
add
mov
and
or
mov
mov
bound
test
test
lods
push
test
shrl
dec
adc
pushfw
scas
mulb
mov
fcoml
stos
movsb
xor
rorb
fwait
pop
pop
push
int
jae
dec
mov
mov
or
notl
fdivr
jmp
push
pop
int
ss
fadd
add
dec
jp
aaa
mov
loopne
lods
hlt
mov
mov
adc
mov
dec
xchg
ljmp
fdivr
jo
ss
jmp
mov
and
mov
or
fcoml
xchg
sarl
cmp
fimull
mov
pop
hlt
sbb
stos
movsl
xchg
sub
pop
push
in
or
add
pop
xlat
jbe
bound
into
mov
sti
daa
add
and
mov
imul
xchg
cmp
pop
lcall
lods
jb
repz
and
jb
jae
jp
mov
imul
pop
cmp
or
insl
mov
xor
inc
shrl
ficompl
out
mov
popa
je
xor
add
mov
jle
jle
add
mov
mov
xor
dec
in
add
pop
test
add
add
loopne
inc
pop
adc
jae
inc
gs
sarl
dec
push
into
stos
imul
call
imul
dec
mov
push
mov
pop
add
inc
sub
jo
out
mov
sub
enter
mov
sub
jg
test
dec
and
jae
into
fmull
testl
jmp
push
decl
mov
scas
das
or
jmp
ret
test
addr16
aam
ret
lods
ljmp
out
mov
dec
xchg
sbb
test
sub
pop
or
pop
rorb
sti
mov
jno
fwait
xchg
mov
mov
cmp
cmpsb
test
sti
leave
and
jne
push
outsb
scas
mov
lea
hlt
mov
aas
mov
xor
repnz
dec
and
pop
out
test
gs
push
xchg
mov
push
bound
add
dec
jg
pop
mov
outsl
shll
sub
add
mov
xchg
nop
mov
cmpsb
mov
imul
fldenv
adc
notl
or
arpl
adc
pop
sbb
jb
repz
call
loope
std
fs
pop
mov
repnz
sar
jmp
mov
scas
arpl
test
xchg
outsb
cmp
pop
lea
mov
xchg
mov
lods
push
aad
cmp
pop
mov
and
add
sbb
adc
add
mov
frstor
loopne
mov
dec
dec
sbb
movsl
into
sbb
mov
ret
mov
xchg
mov
mov
jb
sub
pop
test
mov
push
cmp
scas
inc
mov
in
jle
mov
mov
push
sub
daa
into
repnz
call
dec
iret
jb
push
adc
aas
mov
jecxz
inc
mov
jmp
push
xchg
push
push
mov
fst
inc
mov
pop
xor
loope
inc
dec
sub
sbb
jb
aam
mov
fcmovb
mov
ds
cld
jmp
push
dec
fdivrs
jmp
js
shll
xchg
xor
jg
roll
nop
mov
sbb
xor
leave
lahf
pop
mov
in
and
scas
pop
sbb
imul
ds
pop
push
dec
cmp
icebp
stos
mov
lcall
mov
dec
insl
xchg
rorl
xlat
mov
mov
xor
pop
sbb
pop
std
es
dec
nop
and
je
mov
fstps
and
scas
cmp
enter
test
inc
repnz
sbb
adc
mov
sub
xor
pop
jns
cwtl
mov
xor
push
mov
and
and
psllw
popa
or
movsb
and
icebp
js
and
out
in
sbb
nop
sub
lods
ret
ficomps
lods
cwtl
mov
test
iret
cmpl
or
divl
leave
jl
call
sub
pusha
xchg
mov
jl
mov
jbe
push
lcall
leave
fidivrl
scas
mov
rclb
pusha
jno
test
hlt
adc
xchg
lea
aad
out
push
jne
push
jne
mov
mov
shlb
sbb
push
sbb
ret
ljmp
loop
call
aaa
inc
lret
xchg
sub
mov
sub
scas
pop
sub
cmp
mov
stos
pop
cmp
jmp
xchg
push
mov
inc
xchg
out
pop
xchg
mov
xchg
pop
fdivs
in
mov
icebp
xchg
pop
nop
cmp
xor
in
arpl
dec
stc
addr16
sub
sub
in
sarw
test
ljmp
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
jmp
sti
icebp
lods
mov
outsb
fs
sar
lahf
cld
adc
inc
testl
pop
in
mov
add
shl
pop
fs
mov
pop
in
jb
movsl
pop
mov
cwtl
scas
ficoml
add
cmp
out
in
pop
cmpl
sub
mov
test
ss
int3
hlt
jb
notb
mov
push
pop
cmp
add
dec
push
aam
dec
add
xchg
dec
adc
cmp
jb
jge
test
xchg
fstp
fwait
inc
fwait
cld
orl
dec
adc
adc
jns
pop
push
fs
mov
into
iret
dec
jg
fs
stc
dec
into
rolb
sub
jge
xchg
aad
push
addr16
js
adc
mov
ss
sti
xchg
int3
sub
pop
sub
push
roll
xchg
rcl
fsubrs
or
loop
xor
mov
sbb
jne
dec
pop
shrb
sbb
and
sbb
add
call
cmp
push
lods
in
movsl
mov
jb
lret
mov
dec
lcall
fcoml
mov
test
xchg
sub
jmp
sub
pop
push
sbb
cltd
test
pop
and
mov
cmp
pop
add
sub
loope
jmp
fidivs
addr16
test
fidivrs
pop
push
mov
and
enter
xchg
cmp
cmp
mov
mov
in
or
dec
les
cmpsb
add
scas
cmp
or
xchg
dec
cmp
lods
or
mov
std
rclb
add
ficoml
or
out
push
das
in
or
aaa
ja
mov
or
je
test
pop
inc
rcr
popf
mov
frstor
pop
out
fstpl
stc
add
ds
mov
imul
outsl
or
iret
lds
xchg
mov
fwait
and
les
loopne
stc
push
movsl
mov
pop
jnp
and
xor
mov
mov
add
pop
stc
mov
xchg
xchg
adc
int
in
pop
pop
mov
xor
cwtl
cmp
sbb
mov
mov
lcall
xabort
cmpsb
jmp
decb
inc
lock
popa
clc
and
fcomps
lds
push
mov
xchg
xlat
mov
mov
push
and
sub
pop
idivl
in
sub
dec
sub
ret
or
scas
pop
and
xor
xor
xor
dec
or
mov
aad
pop
pusha
add
add
test
push
jb
add
inc
add
mov
mov
test
jnp
lret
xor
jno
aas
out
lds
dec
jecxz
adc
mov
nop
jne
and
pop
or
and
xchg
faddp
mov
sahf
int3
cld
aad
sub
movsb
add
jmp
cwtl
pop
sbb
cmp
jl
mov
mov
add
out
scas
cld
or
mov
lahf
aaa
or
ja
push
sbb
and
xchg
xor
es
lock
fdivr
das
jecxz
and
pop
outsw
clc
popa
mov
dec
dec
xor
or
xlat
lods
jl
mov
cmp
hlt
inc
lods
dec
jo
inc
int3
call
jecxz
inc
icebp
sbb
inc
adcb
aas
mov
out
and
les
aad
cmp
and
mov
imul
loopne
inc
popa
inc
clc
out
in
pop
int3
fwait
mov
lods
xchg
and
addr16
lcall
xchg
sub
xchg
aad
mov
fmuls
ffree
movsb
adc
push
daa
int
pop
sub
sbb
and
jbe
mov
mov
adc
icebp
adcl
shrb
jo
fcoml
xor
adc
push
popf
inc
cmpsl
push
int
fcompp
xchg
jnp
inc
or
cmovp
or
rorl
xor
sub
jbe
sbb
sahf
inc
xor
lret
pusha
sahf
scas
push
out
aam
loop
sbb
in
jb
cld
inc
out
add
push
stc
cmp
lret
sbb
lods
mov
lahf
xchg
in
and
mov
fs
add
jb
fcmovnb
xchg
std
cmc
cmpsb
mov
das
mov
aam
xlat
les
loopne
sbb
jno
and
pop
loopne
stos
nop
lret
push
push
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
cmp
jae
xorl
shrd
movl
shr
ret
adcl
mov
xorl
xor
sbbl
and
shr
ret
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
movl
notl
jle
push
pushl
call
notl
andl
andl
sbbl
adcl
movl
mov
incl
mov
adcl
movl
mov
movb
sbbl
movb
and
movb
adc
movzbl
andl
mov
sbbl
sub
addl
imul
movzbl
andl
push
and
andl
mov
addl
movb
movb
andl
movb
movb
negl
mov
mov
negl
add
adcl
imul
sbbl
mov
subl
or
mov
sbbl
and
mov
movl
cmp
ja
mov
mov
mov
or
mov
mov
cmpl
not
mov
movl
jmp
movl
jb
push
push
call
dec
xor
add
mov
add
adc
xorl
xor
adc
mov
movzwl
addl
movzwl
sbbl
shr
notl
or
sub
mov
subl
movb
notl
movb
mov
orl
mov
xor
xorl
add
mov
or
mov
movzbl
and
cltd
sub
push
cmpl
not
mov
mov
jmp
mov
je
push
push
call
mov
adc
xor
neg
adcl
or
adc
pop
adcl
idiv
mov
addl
movb
addl
movb
xorl
mov
mov
negl
add
movzbl
movzbl
xorl
cltd
idiv
mov
movl
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
and
push
cmpl
not
mov
not
not
jmp
movl
movzbl
je
push
pushl
pushl
push
pushl
call
sbb
adc
adc
subl
add
push
adc
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
pushl
push
pushl
push
push
call
sbb
adc
xor
mov
mov
sub
sub
xor
add
xor
or
sub
and
addl
addl
sbb
mov
shrd
shr
cmpl
movl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
push
pushl
call
addl
orl
mov
add
mov
add
mov
sub
mov
mov
mov
sub
sub
xor
movzwl
sbb
mov
neg
xor
sub
or
mov
mov
cmpl
mov
mov
jmp
movl
mov
jne
call
dec
addl
xor
sub
inc
andl
mov
mov
adc
shl
cmpl
mov
movl
movl
jmp
mov
movzbl
jle
push
push
call
mov
adc
mov
adc
xor
inc
xor
or
or
notl
add
movl
mov
cmpl
mov
mov
jmp
mov
jge
pushl
push
pushl
pushl
call
andl
or
add
xor
or
shrd
xor
orl
shr
xorl
mov
and
mov
xor
or
or
cmpl
not
mov
mov
movzwl
jmp
mov
mov
jge
push
pushl
call
movzwl
xor
movzwl
add
mov
or
mov
sub
or
addl
xor
mov
mov
and
mov
mov
mov
mov
inc
mov
xor
mov
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
jle
pushl
push
pushl
pushl
call
not
andl
adc
sub
xor
shl
orl
xor
and
shld
sub
shl
inc
mov
orl
xor
addl
xor
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
cmpl
movl
movl
not
jmp
mov
movzwl
jle
push
push
push
call
sub
adc
or
sbb
adcl
sbbl
xor
adc
mov
mov
mov
and
mov
xor
shld
sbbl
shl
xor
xor
cmp
jne
movl
cmp
movl
je
cmpl
mov
movl
jmp
mov
not
jbe
push
pushl
push
pushl
call
xor
mov
add
adc
and
adc
not
mov
subl
mov
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
pushl
pushl
call
subl
mov
add
add
add
xor
shl
mov
xorl
xor
shr
adcl
or
mov
mov
movzwl
or
mov
mov
and
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
call
and
orl
subl
subl
sbbl
orl
and
cmpl
movl
movl
movl
movl
jmp
movl
je
push
call
sbbl
movl
orl
andl
adcl
sbbl
xor
subl
cmpl
movl
movl
movl
jmp
movl
not
jb
pushl
pushl
call
xorl
sbb
add
addl
subl
movl
and
push
pop
sbbl
sub
mov
add
mov
lea
mov
mov
mov
sub
and
mov
xor
or
xor
mov
xorl
xor
xorl
shr
subl
shl
or
add
mov
cmpl
movl
mov
jmp
mov
mov
jae
push
call
add
sbb
or
movl
and
movl
add
mov
mov
andl
xor
movl
shr
shl
adcl
or
push
orl
lea
adcl
push
adcl
lea
push
call
cmpl
mov
movl
jmp
movzbl
jbe
push
push
pushl
pushl
pushl
pushl
call
orl
addl
movzwl
sub
mov
movzwl
sub
mov
sub
movl
sub
mov
mov
subl
xor
subl
shr
mov
xor
shl
or
cmpl
mov
mov
mov
jmp
movl
mov
jne
call
add
sub
add
adcl
mov
or
movzwl
or
push
lea
sub
push
or
mov
mov
sbb
shrd
sbb
shr
xor
add
xor
or
sub
imul
mov
notl
mov
xor
addl
xor
or
xorl
lea
adcl
push
adcl
shl
subl
call
mov
mov
xor
shl
cmpl
mov
movl
mov
jmp
movl
jne
push
push
call
xorl
xorl
add
orl
and
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
push
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
adcl
or
movl
mov
jne
sub
mov
adcl
mul
ret
push
mul
cmpl
movzbl
movl
push
pop
jmp
mov
mov
je
push
push
pushl
push
push
push
pushl
call
mov
sbb
mov
not
movzwl
adc
mov
mov
add
mov
xorl
sbb
mov
adc
mov
xorl
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
pushl
call
test
jg
movl
movl
movl
push
dec
movl
mov
xor
mov
andl
push
notl
push
orl
push
call
sbbl
push
andl
push
and
and
push
subl
push
andl
call
cmpl
mov
movzwl
notl
movl
jmp
movl
jbe
push
push
pushl
call
neg
subl
dec
sbb
subl
xor
or
mov
sub
or
mov
mov
xor
or
cmpl
movl
not
jmp
mov
jg
push
push
push
push
call
sbbl
xor
movzwl
and
orl
xor
mov
xor
or
mov
movl
movl
or
movl
sbb
movl
mov
xor
or
sub
add
movl
cmpl
mov
mov
jmp
mov
movl
jg
push
push
pushl
call
dec
xor
inc
adc
movl
xor
add
xor
mov
adcl
movl
cmpl
mov
movl
jmp
mov
mov
jg
push
push
call
addl
mov
sbb
sbbl
mov
mov
sub
xor
xor
or
xor
movl
or
sub
sbb
mov
cmpl
mov
movl
notl
jmp
mov
movzbl
jg
pushl
call
xor
movzbl
sub
mov
mov
sub
add
adc
xor
mov
mov
mov
andl
or
or
mov
or
mov
sub
mov
mov
sbb
or
mov
xor
subl
xor
addl
and
adcl
and
cmp
movl
jne
cmp
jne
movl
decl
movl
xor
movl
adc
movl
xor
or
mov
sub
xor
movl
mov
and
mov
sub
adc
mov
orl
imul
subl
and
notl
imul
mov
xorl
pushl
or
imul
adc
xor
mov
movl
div
mov
xor
cmpl
movl
notl
mov
jmp
movl
je
pushl
pushl
push
pushl
push
call
sbb
adcl
or
mov
sbb
mov
add
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
neg
mov
mov
xor
sbb
sub
sbb
cmpl
movzwl
mov
movl
jmp
movl
jl
pushl
call
sbb
or
addl
and
sub
xor
add
mov
sub
dec
mov
sbbl
sub
addl
or
xor
adcl
pushl
pushl
addl
call
addl
pushl
call
movl
cmpl
mov
movl
not
jmp
mov
mov
jge
pushl
call
and
add
adc
xor
movl
adc
movl
xorl
movl
movl
movl
mov
mov
xor
mov
mov
subl
add
movzwl
mov
adc
add
mov
add
adc
and
xorl
mov
orl
and
mov
movl
movl
subl
movl
orl
movl
dec
cmp
jne
and
movl
mov
xorl
mov
subl
movl
mov
subl
call
andl
lea
mov
cmpl
movl
movzbl
jmp
movl
jb
push
call
adc
sub
and
andl
mov
xor
add
sub
imul
xor
sub
lea
mov
sub
mov
sbb
mov
add
mov
mov
decl
xor
shl
and
shr
movl
or
mov
or
mov
mov
cmpl
movl
mov
movl
jmp
mov
movl
ja
pushl
push
push
pushl
call
and
xorl
add
sub
addl
addl
cmpl
not
mov
jmp
not
jae
push
call
adc
subl
and
xor
add
adc
and
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
pushl
call
or
andl
and
sub
adc
mov
and
mov
mov
mov
shrd
shr
and
mov
not
mov
movl
xor
xor
andl
or
mov
sbb
mov
mov
orl
push
addl
pushl
subl
lea
andl
push
adcl
shl
orl
call
addl
lea
addl
push
mov
mov
sbbl
lea
orl
push
mov
orl
lea
adcl
mov
adcl
mov
mov
push
call
subl
push
andl
push
pushl
xorl
call
andl
mov
or
mov
and
mov
cmpl
mov
movl
mov
jmp
mov
jg
push
pushl
push
push
push
call
sbb
xor
or
mov
adc
xor
adc
mov
shr
not
shl
or
sub
mov
or
xor
mov
notl
lea
xor
mov
lea
movzbl
or
mov
cmpl
mov
movl
movl
mov
jmp
movl
movl
je
push
call
or
add
mov
or
mov
xor
inc
add
not
mov
mov
and
mov
cmpl
mov
mov
mov
jmp
movl
mov
jne
push
call
or
sbb
addl
add
orl
mov
mov
sub
sub
movzwl
sbb
mov
and
sub
cmpl
movzbl
mov
movl
jmp
movl
jae
pushl
call
add
add
movzbl
add
add
movl
add
lea
andl
xor
cmpl
mov
mov
movl
jmp
mov
jg
push
pushl
pushl
push
push
call
or
adc
xor
mov
adc
mov
movl
movl
movl
cmpl
movl
not
jmp
movl
not
jle
push
call
subl
not
orl
and
and
mov
or
mov
movl
mov
mov
add
mov
not
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
cmpl
movl
mov
movl
jmp
movl
jbe
push
pushl
push
pushl
push
call
adcl
sbb
sub
adc
mov
xor
mov
mov
mov
sub
xor
movl
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
push
pushl
pushl
call
adcl
notl
dec
add
subl
sbb
not
sub
movl
mov
subl
mov
xor
xor
mov
xor
and
adc
mov
sub
xor
or
and
cmpl
mov
mov
not
jmp
mov
jl
push
push
call
inc
xorl
and
sub
sub
add
mov
add
xor
mov
or
movl
movl
mov
sbb
mov
add
xor
sub
adcl
mov
or
imul
adc
xor
mov
or
div
subl
sub
and
mov
movl
sub
movl
movl
mov
mov
adc
movl
cmpl
movl
mov
movzbl
jmp
mov
movzbl
jg
pushl
push
push
push
call
or
xor
or
or
mov
sub
add
inc
movl
mov
sbb
mov
movl
movl
mov
xor
mov
imul
adc
add
xorl
and
adc
sub
cmpl
mov
movl
mov
mov
jmp
mov
je
pushl
push
push
call
add
adc
neg
and
not
mov
sub
or
mov
mov
cmpl
mov
movl
mov
movl
jmp
movl
jne
push
pushl
push
call
inc
or
dec
sub
adc
adc
or
add
sub
add
mov
xor
adcl
div
not
mov
sub
and
mov
add
addl
mov
cmpl
mov
mov
mov
jmp
mov
mov
jle
push
push
call
add
add
sbbl
subl
xorl
movl
movl
dec
movl
cmpl
movzbl
mov
jmp
mov
jne
pushl
pushl
pushl
push
call
sbb
orl
movzwl
adc
add
mov
mov
add
mov
xor
add
mov
andl
xor
movl
div
add
and
mov
or
cmpl
movl
mov
jmp
movl
movl
jg
push
push
push
call
mov
sbb
mov
add
mov
movzbl
sub
subl
decl
adc
cmpl
not
mov
jmp
mov
movl
jae
push
push
push
push
call
xor
sbbl
mov
sbb
mov
inc
mov
mov
sub
sbbl
cmpl
mov
movl
mov
jmp
mov
movl
jg
pushl
call
mov
adc
mov
mov
adc
mov
mov
xor
xor
or
mov
sub
sub
adcl
mov
and
movl
movl
movl
and
movl
mov
sub
mov
orl
xor
sbb
xor
push
xor
pop
orl
div
mov
andl
xor
div
mov
or
sub
xor
mov
xor
movl
inc
mov
movzwl
sbb
mov
xor
div
imul
adcl
xor
xor
sub
imul
xor
dec
mov
adc
movl
cmpl
movzwl
movl
mov
jmp
movl
mov
jg
pushl
push
pushl
pushl
pushl
pushl
push
push
pushl
push
push
call
adc
xor
mov
adc
mov
mov
xor
mov
xor
or
xor
mov
movzwl
sub
or
or
movl
movl
cmpl
mov
movl
movzwl
jmp
mov
movl
ja
pushl
call
xor
dec
adc
movzbl
sbb
xorl
mov
and
mov
xor
subl
div
mov
sub
mov
orl
imul
xor
add
mov
or
add
xor
sbb
mov
sub
movzbl
or
mov
mov
movl
cmpl
notl
mov
mov
mov
jmp
notl
mov
jg
pushl
call
notl
adc
adc
sbb
movl
mov
or
and
notl
and
or
xor
cmpl
mov
mov
movl
jmp
movzwl
mov
jg
pushl
push
pushl
call
movzbl
sbb
add
negl
sub
dec
mov
movl
movl
movl
cmpl
movl
movl
movl
mov
jmp
mov
jb
pushl
push
push
call
mov
and
mov
neg
xor
andl
and
movl
mov
xor
and
add
xor
add
or
or
cmpl
notl
movl
mov
movl
jmp
movl
jle
push
pushl
push
push
pushl
pushl
pushl
push
call
adc
mov
add
or
sub
neg
sbb
sub
mov
inc
movl
cmpl
mov
movl
mov
jmp
mov
mov
jne
push
pushl
call
decl
decl
sbbl
and
movl
movl
movl
xor
mov
shr
xorl
sub
cmpl
movl
mov
mov
mov
jmp
mov
movl
jbe
pushl
pushl
call
add
xorl
mov
sbb
and
adc
or
xor
mov
lea
sbbl
push
adcl
call
addl
mov
adc
or
cmpl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
sub
mov
xor
or
sub
imul
negl
sbbl
and
mov
orl
or
xor
and
lea
adc
mov
movl
movzwl
xor
movl
movl
xor
xor
or
movl
movl
and
movl
cmpl
mov
not
movl
movl
jmp
mov
notl
jg
push
call
sbb
orl
xorl
add
xor
xorl
xor
xor
xor
mov
sub
or
movl
sbbl
movl
mov
mov
mov
sub
xor
mov
sub
and
cmpl
movzbl
movl
jmp
movl
movl
je
push
push
push
push
push
call
sub
or
notl
sub
xor
add
add
mov
sbb
sub
and
sub
or
mov
sbb
lea
mov
mov
add
mov
add
mov
mov
imul
sbbl
and
cmpl
mov
mov
mov
movzbl
jmp
notl
mov
jbe
pushl
pushl
pushl
push
pushl
pushl
call
xorl
add
movzbl
adc
not
or
imul
mov
lea
mov
addl
movl
movl
movl
movl
mov
sbb
mov
or
mov
movl
xor
andl
xor
sbbl
mov
call
cmpl
movl
movl
movzbl
movzwl
jmp
movl
movl
jb
call
sub
and
and
add
adc
subl
sub
sbbl
mov
mov
sub
mov
mov
adcl
xor
xor
mov
call
xorl
or
or
sub
mov
or
mov
andl
xor
xorl
xor
mov
call
mov
cmpl
movl
mov
movl
jmp
movl
jbe
call
or
xor
inc
or
andl
cmpl
notl
mov
jmp
mov
movl
je
push
pushl
call
mov
mov
and
sbb
not
mov
sub
sbb
or
and
mov
movl
mov
mov
xor
xorl
xor
addl
mov
mov
xor
mov
xor
or
mov
sub
mov
movl
mov
mov
movl
call
cmpl
mov
movl
mov
jmp
movl
movl
ja
push
push
call
and
addl
adcl
movzbl
xor
or
mov
adcl
or
mov
or
subl
push
push
subl
push
andl
push
orl
call
movzbl
mov
cmp
movl
jne
mov
sub
mov
mov
xorl
mov
subl
xor
xorl
xor
mov
call
adc
mov
add
mov
xor
mov
mov
incl
xor
addl
xor
xorl
mov
xorl
call
or
and
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
notl
jmp
movl
mov
jle
pushl
push
push
pushl
call
negl
addl
orl
adc
sbbl
sbbl
not
push
push
not
mov
or
movl
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
sbb
and
or
xor
xor
mov
sub
add
add
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
je
add
mov
mov
pop
pop
movl
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shld
shl
ret
xor
mov
addl
xor
and
shl
ret
xor
xor
ret
