push
mov
sub
addl
push
subl
push
xorl
lea
incl
push
push
movl
call
adc
mov
andl
push
xorl
xor
adcl
inc
andl
push
adcl
push
xorl
call
xorl
test
movl
je
push
push
push
andl
call
test
movl
je
adcl
xor
jmp
orl
push
andl
push
addl
call
test
movl
je
lea
push
call
jmp
addl
push
push
addl
push
andl
call
addl
test
movl
jne
push
addl
push
call
jmp
push
push
addl
call
andl
test
jne
andl
push
push
subl
push
sbbl
call
addl
test
movl
jne
andl
push
push
call
adcl
test
movl
jne
mov
mov
and
movl
and
mov
movl
cmpl
je
cmpl
jg
jmp
push
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
or
movl
sub
movl
xor
add
xor
lea
mov
movzbl
or
mov
lea
mov
mov
addl
mov
xor
mov
add
mov
or
mov
movzbl
sub
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
subl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
addl
xor
orl
add
andl
mov
movzwl
or
mov
adcl
xor
orl
add
movl
mov
mov
mov
subl
mov
orl
mov
negl
mov
mov
adcl
mov
orl
mov
movl
push
mov
mov
xor
movl
xorl
mov
xor
add
movl
jmp
notl
mov
xor
lea
adcl
push
xorl
mov
xor
orl
lea
sbbl
push
movl
cmpl
je
cmpl
jl
jmp
push
push
pushl
push
call
mov
dec
mov
jmp
mov
sbbl
pushl
negl
call
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xorl
xor
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
push
push
pushl
pushl
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
xor
andl
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
xor
movl
lea
movl
cmp
jbe
mov
sbbl
mov
mov
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
mov
sub
or
mov
mov
movl
sub
andl
xor
mov
mov
mov
cmp
movl
jne
push
xorl
xor
inc
andl
push
subl
push
call
test
movl
jne
sbbl
push
subl
push
call
orl
test
movl
jne
addl
push
adcl
push
adcl
push
call
sbbl
test
jne
sbbl
push
push
andl
call
xorl
test
jne
andl
lea
sbbl
mov
lea
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
xor
add
dec
mov
jmp
mov
test
je
xor
mov
mov
add
mov
mov
add
mov
incl
mov
sbb
mov
inc
mov
movzwl
adc
mov
mov
movl
cltd
mov
andl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
inc
adc
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
xor
or
mov
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
movl
mov
adcl
subl
xor
adcl
mov
or
mov
sbbl
xor
movl
mov
cmp
jne
mov
cmp
je
adc
mov
orl
mov
addl
mov
xor
add
adc
xor
xor
cmp
movl
jne
cmp
movl
jne
mov
orl
mov
sbbl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
push
push
push
pushl
pushl
call
jmp
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
push
call
cmpl
jb
mov
mov
add
mov
mov
movl
jmp
movl
mov
movl
cmp
je
xor
xor
mov
sub
and
mov
mov
xor
orl
add
movl
cmp
movl
je
andl
push
xor
adcl
inc
push
push
call
adcl
test
jne
adcl
push
push
subl
call
andl
test
movl
jne
push
orl
push
push
addl
call
orl
test
movl
jne
addl
push
push
negl
call
adcl
test
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
xorl
mov
mov
pushl
mov
pushl
subl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
pushl
call
mov
mov
mov
jmp
push
xor
inc
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
jne
push
push
call
test
jne
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
xor
mov
inc
lea
mov
lea
mov
mov
test
je
push
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
je
lea
push
call
jmp
push
push
call
test
je
xor
jmp
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
orl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
mov
movl
mov
or
push
or
mov
notl
xor
mov
push
addl
mov
adcl
add
cmp
je
movl
cmpl
je
cmpl
jge
jmp
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
orl
xor
subl
add
add
jmp
lahf
es
mov
fwait
icebp
sub
adc
je
dec
jb
jb
pop
pop
jb
adc
and
popa
mov
bound
push
test
insl
push
iret
pop
inc
cmp
jg
mov
sub
data16
imul
xor
mov
xchg
fiadds
add
insl
fldl
push
repnz
arpl
scas
sub
cmpsb
jmp
inc
and
push
icebp
adc
jo
jnp
nop
pop
cmpl
sahf
cmp
mov
shrb
push
sti
iret
andb
enter
imul
or
sbb
fadds
std
push
movsl
icebp
pusha
mov
inc
mov
push
mov
repnz
jl
adc
aam
cs
cld
bound
push
imul
cmp
dec
lods
nop
and
loop
or
jno
std
movsb
test
jle
and
in
js
clc
jb
mov
rorb
test
push
dec
add
lods
xchg
aam
push
stc
popa
mov
mov
jno
test
stos
icebp
popa
mov
and
movl
and
mov
jae
jo
jl
or
iret
fildl
mov
pusha
shrb
sub
out
mov
pop
jb
adc
clc
mov
xchg
imul
inc
sti
inc
and
cmp
adc
fwait
cbtw
or
jne
mov
adc
sbb
pop
push
inc
mov
stos
jecxz
sbb
sbbb
ss
cmp
je
push
jbe
ret
xor
and
push
or
mov
cmp
fbstp
sarb
inc
jl
ja
cmpsb
pop
imul
jae
push
dec
divb
xchg
inc
mov
ror
int
add
repnz
rcll
call
xor
ret
addr16
and
adc
jne
loop
sbbl
scas
jl
stc
jecxz
jmp
jg
xor
jns
movsb
fwait
clc
push
xor
out
int
lcall
sub
or
sbb
xchg
or
push
mov
xchg
je
xchg
and
xchg
loop
inc
mov
repz
sbb
cmp
dec
sub
mov
jbe
jo
sbb
repz
movsl
jmp
imul
cli
lret
addb
cltd
hlt
clc
int
sub
cltd
ljmp
gs
mov
shrb
pushf
repz
into
mov
aas
int
sub
aad
adc
push
es
mov
jns
sbb
or
jae
push
push
test
insl
push
dec
out
jg
pop
popa
mov
cmc
xchg
ja
inc
inc
scas
sub
mov
cmp
and
stc
stc
ret
dec
cmp
mov
xchg
cmpsl
push
out
cmc
xor
mov
ret
push
xchg
xor
pop
xchg
aas
out
push
mov
addr16
lock
sbb
ret
movsb
inc
mov
out
jns
gs
add
xchg
push
push
xor
addr16
daa
jp
lds
inc
lcall
lahf
cmp
and
push
shll
jbe
outsb
pushf
out
inc
push
movsb
xor
into
cmpl
lods
into
scas
jecxz
cmp
lahf
fcom
adc
shlb
xlat
mov
repz
mov
push
sub
jae
sbb
mov
jns
in
adc
jno
rcr
pop
mov
lea
jbe
cmp
fistl
mov
out
sbb
test
sub
jb
push
insl
mov
fcmovnbe
fnstsw
ljmp
pop
fsubrs
pop
loope
testl
jle
sbb
loopne
loope
lahf
pop
xlat
mov
add
jle
xchg
fldl
and
mov
adc
mov
xor
xchg
out
ret
inc
inc
lret
push
cmp
rcrb
or
les
imul
loop
insl
or
dec
std
repz
jo
adc
ret
dec
push
leave
mov
add
sbb
mov
js
or
ret
jmp
je
pop
bound
mov
ret
inc
fistpll
paddusw
inc
scas
inc
stos
pop
and
out
lahf
mov
jno
das
cli
pop
and
aas
int3
dec
rclb
push
sti
into
lret
mov
shl
notl
addr16
jbe
addr16
lcall
loopne
jp
or
add
mov
and
jb
mov
xchg
orb
fstps
cltd
enter
lcall
mov
inc
out
xlat
add
movsb
cmpsl
std
cltd
aam
int
lea
lret
or
je
popf
and
stc
pop
in
lret
ds
lret
fwait
xchg
mov
fs
cwtl
addb
xchg
pop
sub
loopne
loopne
inc
mov
inc
nop
bnd
xor
cs
adc
lea
jge
or
out
inc
pop
pop
ret
adc
fcoms
mov
sub
insb
aad
xor
std
inc
in
lea
fstpt
int3
cmp
or
add
inc
movl
mov
pop
rclb
sbb
cmp
pop
jo
sbb
mov
or
adc
andb
pop
push
mov
xor
shrl
test
inc
or
cld
add
imul
test
mov
xchg
lret
std
add
dec
jae
test
xor
addr16
inc
fnstcw
cmpsb
loope
aam
or
pop
mov
movsl
sbb
lods
pop
ret
cmpsl
les
mov
repz
cmp
addr16
inc
mul
aaa
jp
xchg
mov
fildll
rcr
mov
sbb
xor
jecxz
in
enter
dec
cmc
mov
mov
add
mov
ret
sahf
rcll
xchg
and
and
push
and
mov
mov
add
lds
shrl
loop
cmpsl
jge
add
jl
test
or
or
pop
inc
into
sahf
or
stos
ss
add
loop
stc
std
sbb
mov
mov
pop
xor
mov
adc
mov
rorl
sbb
inc
cmp
xor
stos
scas
fidivs
add
cmp
inc
fists
out
push
insb
pop
cmp
xor
pusha
dec
das
sar
cmpsl
cltd
aas
jne
dec
scas
and
cmpl
lea
les
loope
call
std
mov
filds
adc
mov
inc
jle
dec
iret
imul
ja
outsl
dec
fs
mov
mov
ja
push
xor
sahf
adc
inc
pop
aam
jo
imul
push
dec
add
sub
jo
pushf
cs
adc
jl
mov
dec
mov
push
xor
mov
sbb
jbe
pushf
sbb
add
pop
repz
stos
loopne
mov
scas
jbe
popf
mov
cmc
fmul
fsubrs
push
icebp
sub
pop
mov
shrl
push
jg
in
cmp
aam
adc
mulb
movsl
mov
out
sbb
inc
pop
and
jp
pop
sub
in
jb
mov
arpl
cli
pop
gs
jns
jle
shlb
cmp
xchg
insb
mov
jmp
call
add
mov
pop
popf
pop
inc
jno
mov
pop
cli
push
jmp
cs
out
and
push
add
orps
in
lahf
fwait
xlat
clc
ret
mov
inc
cld
stc
repz
mov
lods
adc
je
stos
cmpsb
dec
rclb
jo
xor
ret
mov
lret
dec
add
inc
and
outsb
mov
sbb
xor
and
or
sar
lea
add
repz
movzwl
out
mov
xchg
scas
sbb
inc
les
push
and
cmp
out
inc
sarl
cmp
hlt
sbb
lret
fiaddl
arpl
add
pop
lret
jge
int
inc
pop
jge
loope
push
ljmp
sbb
aad
ss
inc
mov
in
sub
jmp
jmp
cmpsl
imul
fimuls
int3
pop
dec
pop
or
pop
daa
push
repz
lds
frstor
ret
push
hlt
das
jle
mov
dec
aam
in
insb
mov
adc
jo
es
push
sbb
xchg
jecxz
mov
sub
fnsetpm(287
xor
inc
int3
xchg
xor
push
push
in
jl
mov
dec
clc
out
and
fistps
add
jne
movsb
cmc
call
jno
repnz
xchg
push
hlt
in
imul
adc
mov
xchg
out
xchg
cmc
pushf
fstl
cmp
ja
fldl
jmp
std
test
mov
data16
sbb
inc
cmp
jne
out
mov
or
add
loope
call
sub
push
push
daa
cmp
stos
into
cmp
mov
popa
addr16
mov
xor
mov
or
pop
fiadds
mov
shll
pop
push
rcrl
in
cmp
mov
arpl
inc
sarb
cwtl
cmp
stos
dec
test
push
inc
cmc
dec
int3
adc
push
cmc
cmp
adc
xlat
movsb
pusha
ret
xor
lea
sub
sbb
pop
pop
repnz
nop
stos
pop
pop
inc
cld
jnp
push
sbb
out
outsl
xchg
rcr
stos
pop
test
pop
push
and
push
cmp
fwait
xor
in
fstpt
stos
arpl
inc
mov
and
xchg
and
jns
and
in
hlt
test
mov
lcall
inc
xor
insb
and
xchg
pop
cmpsb
mov
pop
push
mov
pop
pop
insb
out
mov
adc
push
pop
fmuls
sub
pop
xchg
sub
push
lds
ret
jge
and
stc
ret
and
jae
cld
push
clc
sahf
push
dec
mov
jl
pop
outsb
out
nop
mov
dec
mov
bswap
sti
mov
sti
mov
outsb
dec
enter
cmp
insb
adc
push
addl
or
leave
loop
or
mov
mov
addl
cli
add
andb
int3
mov
sarl
sub
sbb
es
orl
or
mov
inc
das
mov
xchg
cmp
inc
ja
xor
adc
jl
adc
xor
mov
cmp
paddd
dec
xchg
out
outsb
ljmp
sbb
sarl
leave
popf
cmc
ja
lods
and
outsb
popf
punpcklwd
sub
imul
sbb
push
push
bound
push
mov
stos
or
nop
inc
mov
fnstcw
shrl
xor
adc
les
out
das
dec
lock
push
sbb
jbe
test
xor
fstpt
inc
fmul
iret
sti
add
xlat
in
jl
pop
or
adc
lds
pop
xchg
jne
mov
adc
stos
mov
bound
test
mov
mov
cmp
mov
ss
ficoml
pop
dec
fbld
filds
jnp
and
bound
and
xchg
testl
std
dec
mov
sbb
mov
insl
jno
loopne
sahf
lret
mov
pop
fistps
adc
sub
mov
lods
cs
idivl
mov
cmc
adc
mov
in
mov
ret
inc
and
les
fdivl
insb
mov
jp
test
dec
cs
fldl
inc
gs
es
rorl
pushf
sub
loopne
lods
movsl
sub
cmp
inc
push
lahf
jnp
sub
sbb
cwtl
mov
das
cmp
gs
cld
daa
mov
mov
push
mov
jl
and
setae
xchg
inc
pushf
aas
int
adc
fstpt
jo
xlat
sti
cmpsb
cmp
pop
xor
fnstenv
loop
sub
popa
daa
rcr
mov
mov
shrb
xchg
aas
std
int
iret
pushl
mov
sbb
into
mov
mov
jg
outsb
xor
xor
movsl
and
push
mov
out
jo
mov
dec
xor
call
iret
je
loope
popa
js
pop
bound
mov
fidivrl
adc
out
dec
add
mov
aas
addl
jo
stc
stos
or
dec
cmpsl
xchg
add
and
inc
sub
rclb
push
cmc
daa
lock
aam
pop
arpl
pop
fiadds
cld
fwait
xchg
sbb
pop
insl
adc
ret
push
sbb
pop
rep
shll
xor
mov
sbb
int
jmp
xchg
lock
add
mov
sbb
pop
xchg
sub
or
aad
adc
add
in
movb
mov
faddl
pop
gs
push
xchg
mov
mov
dec
ja
outsl
and
inc
int3
cld
insl
jne
mov
xchg
mov
lcall
lock
arpl
aaa
inc
sbb
jb
sbb
dec
jne
push
iret
es
mov
jae
mov
pop
decl
enter
and
jle
sbb
rorl
bound
push
bound
aas
lahf
out
in
ja
xor
inc
mov
jns
xor
in
sbbb
or
mov
jle
pusha
push
pop
bound
pop
cmc
out
push
scas
xchg
or
jns
dec
sbb
mov
cli
jl
or
cmpsl
push
mov
aad
push
nop
ds
leave
fldenv
fadd
lds
inc
xchg
sbb
mov
cs
inc
mov
sub
sbb
mov
cmp
cwtl
fcomps
sbb
push
pusha
imul
cmp
add
and
sbb
add
mov
jmp
addr16
inc
xor
hlt
icebp
sbb
and
ret
shll
mov
xor
bswap
cmpsl
sbb
and
mov
mov
lcall
jae
adc
out
in
lea
mov
push
hlt
divb
add
outsb
mov
ret
add
movsb
xchg
inc
jg
andl
movsl
pop
dec
jmp
inc
stos
pop
dec
cmp
aas
or
rol
add
and
dec
insl
mov
sub
dec
out
cs
adc
popa
and
lret
inc
mov
leave
ss
js
xchg
sbb
repz
loop
fwait
push
mov
iret
icebp
loope
mov
xchg
std
xor
push
outsb
ror
push
pop
in
ss
adc
pop
mov
pop
mov
push
fucom
sbb
mov
jg
inc
negl
xor
daa
sahf
call
xchg
notl
sbb
das
call
mov
sub
pushf
or
xor
mov
mov
and
in
sub
ret
jnp
loopne
cmp
mov
popf
mov
jne
dec
es
push
jne
xor
lds
lds
dec
sub
aas
leave
or
addr16
cmp
leave
jmp
push
fs
xchg
test
adc
cld
lds
add
loopne
pop
outsb
ja
je
dec
shrb
sub
mov
dec
ficompl
stos
cmp
orl
pop
js
mov
jp
les
sbb
addr16
popa
inc
in
lds
inc
fnstcw
xor
mov
gs
mov
shl
or
pop
mov
jb
mov
xor
enter
xchg
js
push
ljmp
xchg
or
fcompl
ss
xor
nop
hlt
inc
pop
mov
mov
std
sbb
mov
nop
cmp
pop
dec
sahf
setb
jno
lods
xchg
jae
cmp
push
into
negb
cmpsb
jb
out
inc
sub
cmp
enter
icebp
jae
xchg
ret
sbb
jmp
lods
scas
cmp
sbb
cli
insb
push
fwait
xor
sbb
stc
inc
jo
jno
adc
xchg
mov
pop
pop
cmpsb
adc
sbb
jnp
mov
jns
hlt
mov
test
adcb
jne
fsubs
shrb
mov
pop
pop
fildl
or
pop
mov
outsb
fcoms
xor
mov
in
ljmp
fs
dec
mov
enter
add
sbb
in
mov
add
xor
testb
iret
jnp
aam
xlat
jg
test
inc
fisubrl
js
scas
aam
xchg
ret
and
xchg
outsl
sub
addb
adc
aad
mov
sbb
xchg
xor
mov
push
jns
pushf
pop
in
imul
mov
imulb
ljmp
sbb
adcb
nop
jmp
hlt
xchg
std
mov
mov
mov
jge
or
aad
jmp
mov
rcl
inc
sahf
rolb
sbbl
not
mov
lods
popa
stos
mov
icebp
add
out
sbbl
adc
push
pop
mov
into
pop
mulb
lret
or
rcrb
add
and
cmp
das
dec
sub
or
ds
dec
push
imul
jl
imul
cmpsl
js
dec
bound
xchg
jno
in
xchg
mov
icebp
mov
mov
xchg
sahf
dec
movsl
inc
ds
test
ret
jns
mov
clc
push
pop
mov
ret
scas
push
cmpsb
mov
lret
add
popa
push
fiaddl
scas
or
push
or
jg
cltd
fsubrl
inc
fsubrl
aam
mov
test
xchg
mov
mov
mov
mov
cmpsl
daa
push
or
mov
pushl
cmpsl
ret
mov
decb
sub
je
stos
sbb
in
fsubrl
dec
loop
and
and
fs
jmp
mov
mov
das
push
push
xchg
and
mov
out
lods
loope
shl
mov
sbb
mov
sbb
stc
ss
sahf
test
mov
mov
push
mov
int3
lcall
inc
inc
movsl
adc
xchg
roll
sbb
sbbb
lcall
cmp
fimuls
pop
jns
incb
mov
adc
scas
push
jp
rorb
cmpsb
mov
insl
sahf
xchg
out
rorb
sbb
insb
sub
cmpsl
loope
jge
mov
lahf
and
sahf
pusha
lahf
jmp
mov
daa
dec
inc
aam
push
enter
loopne
mov
xor
sbb
xorb
jne
adc
jmp
inc
ljmp
ret
mov
test
jl
data16
fs
or
mull
mov
xcrypt-ctr
cmpsl
pop
hlt
leave
pop
movsl
test
push
mov
scas
add
test
push
lcall
pop
sbb
imul
cwtl
sub
rcr
divb
sub
loopne
pushf
sbb
pop
jecxz
inc
xor
data16
insb
xchg
dec
xor
je
add
sahf
lods
mov
sub
icebp
cmpsl
test
ds
jp
mov
adc
aam
out
xor
mov
into
dec
jb,pt
aaa
dec
jecxz
lock
cmc
arpl
mov
pusha
dec
mov
pop
aad
lods
ret
or
lods
movsl
mov
lret
mov
mov
mov
jge
xchg
mov
mov
and
sub
dec
cmpb
lea
mov
jns
imulb
mov
jmp
pop
jle
inc
rcrb
push
mov
xor
sub
and
stc
out
jb
jbe
sub
lds
ja
scas
in
pop
imul
loope
sbb
fdivs
mov
xchg
movd
movsb
js
cmp
fsubrl
dec
shr
xchg
inc
pop
add
shrl
cltd
xor
sub
xor
adc
or
jmp
imul
sub
add
xchg
loope
daa
and
add
lods
cmp
add
adcb
mov
loop
mov
sbb
ss
mov
loop
cld
xorb
and
xor
and
aad
leave
loope
pop
pop
pusha
sbb
mov
sti
pop
aas
adc
loop
push
fstl
and
lret
xchg
negl
in
adc
std
iret
loop
ret
xchg
iret
jge
sub
push
push
inc
fsts
pop
add
inc
adc
test
wrmsr
push
ficomps
xor
jecxz
xchg
stos
push
sbb
enter
jno
cmp
ret
imul
iret
test
xorl
jno
rcpps
movsb
ret
dec
jae
aam
add
push
bound
sahf
pop
pop
mov
orb
pop
jp
dec
cmp
push
jg
adc
pop
mov
or
ret
imul
testb
ret
ds
movsl
icebp
loope
js
or
push
movsb
out
mov
insl
and
clc
dec
cmp
imul
das
sahf
ficomps
jg
xchg
sub
popl
pop
adcl
pop
mov
jno
mov
cmp
jbe
xor
pop
into
add
mov
insb
aaa
xchg
nop
pop
push
jle
sbb
push
sub
mov
adc
push
xlat
rorl
js
je
jae
xor
das
inc
or
mov
lea
fs
loopne
sahf
rol
fcompl
jmp
vmovmskpd
inc
insb
sub
dec
jmp
pop
inc
mov
mov
adc
or
pop
loopne
in
sub
or
adc
hlt
cwtl
pop
insb
test
xor
in
mov
add
pusha
es
sub
mov
ss
adc
pop
mov
xor
xchg
sub
jnp
mov
cmpsl
inc
mov
fdivl
das
adc
insl
inc
xor
test
push
mov
icebp
jg
lea
or
in
and
push
lods
icebp
jp
sbb
sbb
pushf
dec
pop
xorb
repz
push
jb
sbb
movsb
mov
push
push
gs
sbb
sub
mov
das
cmpsb
sbb
aam
and
adc
or
leave
into
xor
sbb
pushf
lahf
cltd
incb
cmp
movsb
xor
mov
lret
xchg
repz
fistl
and
cmp
xchg
in
mov
pop
cwtl
mov
bound
cmpsb
pop
loope
repz
test
outsb
xchg
cwtl
mov
fs
repz
lea
jle
adc
lahf
test
sub
sbb
mov
xchg
outsb
lahf
outsb
call
mov
add
pop
cli
and
pop
push
inc
push
arpl
jmp
pop
enter
int3
or
lea
dec
mov
cmc
in
aaa
loop
xchg
or
mov
int
out
pop
testl
incl
push
sub
pop
daa
fldcw
clc
repz
fsubrs
xor
mov
mov
pop
outsb
das
jnp
out
dec
sbb
mov
mov
addr16
pop
inc
push
inc
mov
loop
movsb
mov
cmc
push
es
fisubl
cmc
iret
inc
push
inc
ret
addb
xor
lahf
and
dec
and
jae
je
loope
sarb
xor
and
mov
push
shll
divb
or
out
mov
call
xchg
dec
lahf
pushf
xchg
sbb
dec
pop
je
out
mov
gs
loop
leave
mov
or
int
mov
cmpsb
clc
aaa
adc
sub
lret
pop
push
dec
xlat
dec
mov
test
push
out
fiadds
inc
test
xchg
cmp
movsb
iret
sbb
sbb
ficoml
sub
jns
push
test
sub
jne
rcrb
mov
out
cwtl
sbb
pop
das
mov
adc
push
fwait
jmp
je
les
sbb
xchg
cltd
in
popf
push
jbe
dec
mov
mov
sbb
addb
icebp
jp
test
fstl
lret
jno
insb
and
jg
mov
sbb
fcomps
fdiv
pushf
mov
loope
mov
mov
in
dec
inc
idivb
out
clc
stos
stc
popa
popf
push
push
cld
pop
repz
loopne
adc
ret
aaa
or
test
mov
or
testl
inc
mov
push
lret
repnz
aas
push
mov
in
sub
ds
sbb
inc
dec
mov
inc
inc
push
pop
cs
nop
jecxz
cld
push
pop
bound
fnstsw
sahf
mov
mov
dec
addr16
pop
enter
iret
pop
inc
out
mov
adc
jae
xchg
lret
sbb
mov
mov
js
jmp
push
hlt
push
outsl
test
ret
push
cmp
cmc
jno
add
out
mov
add
jl
mov
mov
add
dec
mov
mov
adc
mov
push
call
in
push
sbb
sti
icebp
pop
cmpb
arpl
pminub
movsb
lds
mov
lret
std
je
cwtl
icebp
and
jbe
xorl
inc
cmp
jbe
repz
imul
push
cwtl
jmp
or
pop
je
push
inc
inc
and
call
jg
pmullw
adc
cli
jns
ret
mov
or
sti
adc
xor
add
jl
xor
ja
mov
sub
test
loopne
or
jbe
mov
test
in
pop
add
in
in
or
and
cmp
popf
sub
push
dec
sub
clc
push
stos
inc
inc
leave
nop
or
xor
sbb
inc
loopne
pop
push
jp
jno
jg
pushf
sbb
cmpsl
roll
pusha
sbb
jo
dec
sbbl
das
add
jle,pt
mov
jns
imul
dec
cli
cmp
pop
pop
into
sbb
mov
clc
imul
and
dec
lret
xor
les
cld
hlt
popf
xchg
mov
jge
daa
cltd
push
and
out
outsl
xchg
push
repnz
jle
add
sbb
pushf
shrb
fs
sbb
lret
mov
mov
sbb
or
dec
mov
subb
loopne
add
jle
dec
cld
test
fistpl
and
test
mov
sub
ljmp
bound
fisttpll
addr16
loop
out
and
xchg
jmp
adc
lds
mov
inc
dec
pushf
arpl
repz
mov
gs
sub
cmpsl
jecxz
jge
push
pop
dec
test
add
icebp
pusha
leave
sbb
movsl
push
mov
xor
jl
rorb
cmpsb
add
lock
jg
arpl
cld
lret
push
jle
jecxz
sarb
shlb
fldl
js
mov
push
sbb
fidivrs
scas
cmp
xchg
cmpsl
iret
sti
inc
daa
jge
rolb
rol
ljmp
jae
pop
jecxz
data16
jns
jnp
stos
mov
push
sbb
pop
pop
push
cwtl
imul
mov
js
cmp
or
pop
test
int3
push
cmp
xor
mov
fwait
dec
and
fs
mov
cld
insl
out
cmp
push
in
jp
jge
jmp
out
add
jp
or
sahf
test
loope
cmpsb
rcr
push
movsl
mov
in
fistpll
xchg
ret
push
or
cmc
mov
cmpsl
rorb
inc
sub
jge
in
nop
jno
mov
mov
inc
lods
mov
loop
sub
jnp
int3
xchg
add
fnstsw
or
push
lret
popf
jne
jl
mov
dec
inc
mov
fwait
add
fcmovu
push
inc
cvtps2pi
cmp
add
shll
mov
pop
xchg
cmp
outsb
xor
and
pop
cmpsb
pop
mov
cltd
pop
inc
fistps
fsubrs
mov
push
mov
inc
rcl
loope
lret
xlat
fsub
adc
and
jecxz
add
mov
mov
gs
test
push
out
mul
jmp
lods
rcr
and
fs
push
lods
andl
cmp
dec
lds
jae
push
insl
xor
jns
data16
std
stos
nop
sbb
pusha
xchg
test
xchg
in
dec
sahf
cmp
xor
mov
aas
jnp
insb
lods
jle
in
rcl
rorl
in
lock
mov
inc
push
xchg
lods
in
in
popa
test
sti
dec
dec
pop
cmpsb
push
lds
test
push
mov
xor
cld
dec
and
xor
adc
mov
mov
xchg
xchg
jne
iret
scas
add
in
mov
or
xor
fucom
fstpt
addr16
pop
aam
and
cltd
push
lret
add
mov
sbb
dec
mov
add
add
shl
pop
push
loope
mov
psubb
outsb
jo
mov
rcl
pushf
jne
lea
mov
inc
and
test
ja
pushl
inc
in
and
ds
add
push
aad
mov
je
mov
fcoml
mov
xchg
sarl
lock
pop
lock
xor
jg
cld
mov
push
popa
arpl
mov
add
aaa
icebp
icebp
or
jbe
int3
in
add
mov
adc
sub
in
mov
xor
or
fimull
pop
mov
lds
jle
mov
lods
in
jmp
jo
mov
or
inc
outsl
orb
push
js
ret
or
mov
jl
aad
fmul
push
cld
mov
mov
or
insb
idiv
scas
sti
je
xchg
push
mov
ret
xor
inc
jbe
leave
adc
mov
or
js
sarl
adc
hlt
fiadds
insb
fcomps
adcb
jmp
jg
lcall
jge
cmovns
dec
mov
sbb
sub
cmpsb
loope
jo
ret
loopne
mov
int3
dec
xchg
or
cmp
mov
add
arpl
in
ljmp
insb
jae
negb
mov
jne
roll
shlb
std
repnz
icebp
push
leave
cli
aaa
and
push
fwait
sub
dec
vmovq
sar
sub
ret
sbb
imul
lret
aam
and
and
add
adc
lods
rcrb
sbbb
inc
in
hlt
dec
sarl
and
jl
xor
cmp
xor
adc
adc
je
push
push
mov
mov
jg
leave
insl
imul
add
xor
out
and
test
pandn
nop
jbe
call
mov
or
inc
mov
decl
in
mov
mov
mov
inc
push
xor
stos
push
xor
ret
lret
cmp
sarb
pop
loopne
mov
icebp
enter
fmull
fldt
scas
or
sar
xor
addl
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
pushl
call
cmpl
jb
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
jmp
das
cmp
test
subl
dec
pop
pop
jb
pop
pop
jb
and
push
mov
sub
pop
adc
cmp
push
inc
pop
jbe
and
mov
dec
inc
push
mov
mov
int3
enter
lods
call
aas
push
bound
aad
insl
js
jp
movsb
push
dec
mov
jbe
in
stos
cmp
mov
xlat
mov
insb
dec
pop
lock
cmp
repnz
lods
pop
xchg
test
xor
inc
adc
mov
fdivr
push
fnstcw
sar
ja
mov
pop
scas
imul
and
aad
mov
mov
push
jge
ja
fmull
daa
cmp
mov
test
dec
movsl
adc
aas
pop
xchg
rolb
add
ror
in
adc
shrl
cmpsb
imul
dec
cmpsl
cmp
xchg
or
add
cmp
pcmpeqb
mov
icebp
mov
cs
lret
ljmp
cmpsb
test
mov
pop
rol
fdivrl
lret
cmp
loope
sarl
inc
jmp
test
testb
inc
sub
fcom
mov
int
cltd
mov
push
or
pop
test
popf
or
adc
xchg
sub
dec
jb
cmp
jns
push
lret
int
test
aad
out
xorl
add
mov
jbe
push
aaa
and
sbb
sub
iret
cs
fistpll
and
jmp
ficoml
lock
pop
fsubl
bound
sub
out
fists
push
popf
pushf
or
loopne
repz
mov
lcall
loope
mov
cld
xchg
lods
xor
testb
dec
das
and
and
xchg
imul
dec
cmp
rorb
fstpt
inc
lahf
shl
push
push
mov
call
std
cmpsb
mov
rolb
icebp
cmp
dec
sbb
aaa
add
add
lret
sub
pminsw
pop
mov
arpl
pop
jmp
mov
test
fcomps
add
dec
inc
jae
cmp
xor
adc
sbb
rcr
in
push
shl
popw
imul
push
and
push
jne
sbb
mov
mov
arpl
mov
mov
dec
test
outsb
xchg
ja
leave
pop
ret
push
das
or
dec
jp
dec
mov
push
adc
repz
dec
lret
rcrl
adc
popf
mov
xchg
mov
push
adc
gs
lret
and
dec
imul
xchg
outsl
jb
cld
js
push
xor
or
mov
aaa
sbb
loope
sbb
scas
pop
mov
imul
ret
outsl
or
jp
sbb
aad
pop
daa
cltd
pop
xchg
ja
movsl
jae
ret
fsts
dec
jp
push
inc
mov
jbe
scas
add
xchg
fcmovnb
inc
loop
mov
stos
adc
mov
or
and
fstpt
aad
push
inc
cmc
xor
push
aam
sahf
or
push
out
dec
push
mov
and
sub
repnz
sub
btr
xor
adc
pop
pop
dec
mov
in
outsb
fcmovu
cli
dec
mov
sub
push
sub
pop
push
xchg
mov
shrl
sar
ss
sbb
push
filds
in
in
mov
inc
add
in
or
push
jle
jne
and
mov
jmp
mov
inc
sbb
lcall
test
lcall
sbb
add
push
mov
aas
loop
sbb
enter
lcall
cmp
and
pop
or
mov
repz
xchg
in
jo
popf
es
xor
push
in
adc
daa
cs
mov
test
sbbb
mov
mov
or
xor
nop
xor
imul
fnsave
mov
mov
cmc
scas
xchg
mov
inc
inc
sarb
adc
mov
sub
sub
daa
cmp
mov
mov
aas
mov
mov
cli
ret
das
int
adc
and
loop
push
pop
mov
push
int3
push
jo
arpl
add
and
pop
mov
imul
loop
sbb
adc
adc
lock
hlt
mov
and
repz
sbb
out
mov
daa
xchg
lret
int
int
sub
insl
sbb
adc
cmpl
std
add
xor
andb
cmp
jmp
nop
inc
loop
add
mov
push
sub
fidivrs
pop
pusha
clc
lods
pop
cld
pop
mov
mov
sub
add
lcall
add
push
int
jl
mov
cwtl
imul
loope
push
aad
adc
mov
sbb
rolb
jmp
sub
jnp
or
ljmp
pop
clc
jae
xor
mov
mov
dec
mov
inc
xchg
sbb
or
outsb
insl
loop
fdivrp
xor
pop
and
movl
sbb
push
jg
shlb
xor
xor
std
push
mov
daa
inc
xchg
mov
psubusw
repz
sbb
jns
xchg
lahf
push
ficoms
mov
push
les
or
jg
hlt
mov
push
jno
push
in
push
imul
sbb
inc
jae
xchg
shl
imul
or
adc
sub
adcb
bnd
inc
shrl
inc
pusha
adc
mov
xor
stos
les
mov
stc
loope
xchg
data16
cmp
pop
ljmp
int
push
cmpl
and
xchg
sub
sbbb
shll
push
sbb
insb
aam
in
pop
jo
mov
lock
les
inc
mov
pop
mov
inc
or
jbe
imul
mov
outsb
test
mul
pop
in
adc
and
xor
jbe
xchg
out
test
xchg
adc
mov
enter
aaa
push
loop
mov
jmp
lret
push
rcrb
std
decb
aas
stos
ret
push
xchg
and
call
outsl
mov
rcrl
aad
jl
pop
dec
cmp
xor
xor
mov
in
out
cwtl
cli
rol
dec
pop
psubd
in
push
cmp
shl
pop
or
and
les
xchg
mov
or
pushf
std
shrl
lods
or
push
movsb
mov
cmpsb
adc
xlat
out
fnstcw
arpl
or
mov
ds
lock
lret
adc
clc
out
outsb
sub
fbstp
mov
and
ljmp
pop
cmp
fmuls
sub
mov
jns
jle
adc
sbb
and
pusha
xor
add
pop
adc
jge
data16
sbb
xchg
sbb
dec
pop
lods
cmpl
adc
fidivrl
push
cmp
xchg
cmpsl
mov
dec
mov
jnp
mov
les
inc
pop
cmpsl
cmpsb
push
add
dec
dec
and
std
lods
cmp
mov
jne
mov
push
test
mov
add
cmc
jecxz
ret
mov
mov
or
fwait
cs
push
inc
aaa
lret
orb
adc
loopne
jmp
jge
jmp
pushf
inc
push
ljmp
cmp
in
ficompl
lods
pop
test
addr16
add
add
and
decl
out
scas
mov
sub
stos
sub
lea
mov
cmpsb
inc
lcall
pop
dec
sub
inc
fwait
int
cmc
ret
pop
cmpb
int3
inc
sbb
mov
or
fistpll
mov
insl
jno
xchg
dec
jmp
outsl
fimull
inc
mov
arpl
adc
mov
dec
jp
push
push
popf
jno
cwtl
bound
pushl
das
push
fwait
mov
icebp
pop
cli
rol
xor
popf
cmpsl
das
sbb
sub
jge
les
rol
mov
out
dec
sbb
jo
mov
or
sbb
xor
jg
xchg
jne
add
push
les
int3
sbb
sbb
scas
mov
jns
ljmp
and
and
daa
sbb
push
notl
filds
in
and
jle
outsl
sbb
mov
sbb
dec
mov
push
and
pop
xor
loopne
jp
fcomip
call
mov
fwait
outsl
int
or
mov
ljmp
rol
nop
test
test
arpl
divb
cmp
push
cmp
jmp
fs
adc
stos
xor
xor
into
push
push
sub
enter
sub
push
divb
mov
jae
add
sbb
cltd
dec
mov
lret
imul
mov
out
or
fcmove
hlt
push
das
or
mov
movsb
ja
sub
les
mov
xor
cmp
lret
pop
pusha
cmovns
push
cmp
ss
dec
dec
mov
ds
repnz
push
xor
pop
dec
or
adc
xor
inc
push
call
mov
sbb
inc
sbbl
xor
mov
sub
or
in
int
mov
fsubl
sbb
out
ret
aaa
sub
xor
cmpsl
shlb
ja
shll
cwtl
xchg
mov
cmc
mov
push
imul
cwtl
xlat
xchg
ja
adc
jbe
push
popf
lods
rcll
add
out
sub
sbb
insb
sub
fsubrs
iret
inc
xlat
mov
add
jp
stos
out
fistpll
cmp
xchg
cltd
push
sbb
and
insb
loopne
push
imul
push
mov
cmp
add
stos
popf
jo
mov
addr16
sti
int3
lock
loope
fsubrl
sbb
push
push
popa
adc
aam
stc
test
faddl
jnp
pop
sbbl
rclb
xchg
dec
cltd
jne
pushf
notb
cmp
aam
insl
or
iret
xchg
sbb
test
test
pop
lret
bound
lock
stos
push
fists
jmp
mov
rcl
repz
pop
add
sahf
out
mov
sbb
arpl
fnsave
xlat
inc
mov
hlt
cmpsl
dec
scas
add
int3
cmpsl
js
sbb
icebp
out
call
insb
cmp
aad
sbb
out
adc
into
sub
mov
xchg
cwtl
loop
lods
nop
pushf
inc
and
inc
cmp
mov
cmp
cmp
adcl
adc
mov
mov
or
cmp
jge
out
mov
xor
stos
xchg
out
test
jge
mov
iret
mov
dec
mov
popf
adc
icebp
mov
mov
ljmp
dec
test
aas
fisubrl
cmp
jae
xchg
sbb
pop
out
lret
lahf
push
xchg
sub
testb
mov
cmp
dec
lret
fwait
dec
or
loop
xor
aas
xchg
cmc
xlat
in
aad
out
outsb
adc
stos
enter
scas
jp
jae
mov
jo
sub
cltd
lahf
mov
or
lret
or
loope
leave
jae
fcompl
jo
outsb
mov
out
fldl
cmp
stc
mulb
roll
adc
add
cmp
adc
out
mov
and
orb
mov
mov
iret
jbe
fidivrs
xor
shll
fidivl
mov
inc
dec
adc
add
loopne
outsl
cltd
pop
or
scas
movsb
sbb
test
xchg
ds
push
gs
fldenv
decb
mov
orb
jmp
shll
rclb
js
mov
cmp
mov
and
push
sbb
push
gs
mov
pop
push
gs
jge
pop
leave
push
cmpsl
enter
sub
fisttps
or
sbb
push
or
insl
mov
xor
insb
scas
sub
mov
inc
fsts
sub
mov
not
divb
pop
pop
xchg
xorl
repz
repnz
mov
scas
movsb
frstor
lahf
outsl
pop
faddl
outsb
sub
and
icebp
or
jae
vsubss
xor
sbb
lret
pop
dec
addb
fstps
call
adc
std
jle
and
jbe
aaa
push
dec
mov
or
dec
into
loop
dec
shll
adc
pushf
ljmp
bound
inc
push
mov
lds
mov
ja
xor
in
adc
dec
sbb
push
aad
das
mov
add
push
cmp
out
mov
mov
xchg
ljmp
pop
cwtl
out
lods
rol
sbb
mov
sub
dec
xchg
andl
retw
xor
mov
sbb
in
lods
xchg
pushf
lret
mov
scas
and
mov
add
jg
adc
insl
test
push
jge
mov
add
call
xorb
xchg
leave
add
movsl
jp
test
ja
push
clc
sbb
push
mov
scas
shrb
mov
jae
repz
cmpsb
add
leave
mov
xchg
test
std
out
ficompl
mov
test
mov
mov
aam
test
adc
pop
js
push
or
xor
test
rorb
sahf
xor
sahf
and
xchg
sar
inc
ret
jmp
mov
lods
dec
orb
push
enter
push
xor
lods
out
scas
ret
lret
sti
lock
int3
ja
mov
sbb
prefetcht1
orb
xor
outsl
mov
inc
lods
cld
aas
movb
pop
scas
js
aam
jnp
jno
mov
gs
fstpt
push
jo
or
xorps
sti
jae
sbb
push
jne
add
into
add
push
orl
xchg
push
mov
or
push
jp
loopne
pop
in
imul
and
or
add
pop
inc
psubq
call
fwait
mov
or
add
cli
xchg
out
xor
faddl
fsubrl
and
push
movsb
in
pushf
mov
adc
cltd
shrb
pop
push
sahf
xor
push
xchg
or
pop
cld
add
add
repz
les
sub
cs
push
and
xlat
in
pop
cmp
adc
pop
leave
adc
gs
jl
xor
cltd
rcl
dec
repnz
or
inc
enter
and
mov
jb
jns
sub
xchg
mov
aas
sub
popa
push
jmp
scas
fsub
pop
push
sub
out
test
push
enter
mov
ljmp
iret
push
pusha
dec
daa
dec
push
xlat
out
ds
aam
push
iret
pop
arpl
imul
pushf
sbb
inc
sbb
out
mov
xor
xchg
int
in
mov
outsl
xlat
sub
lahf
insl
js
jnp
negl
addr16
jb
iret
mov
cwtl
outsl
arpl
outsl
xchg
inc
adc
jns
cmpsl
sub
pop
lods
subb
lods
mov
cld
adc
popf
xor
mov
cmp
xchg
fdivs
xor
movsb
jbe
arpl
in
cli
lock
jbe
mov
or
sub
hlt
je
imul
cmpsb
es
add
and
call
push
mov
sbb
stos
xor
repnz
adc
sahf
mov
mov
sub
notl
cltd
dec
lahf
paddusb
sbb
lds
jo
add
xor
pop
mov
sbb
jb
lret
in
xchg
imul
xchg
adc
xor
mov
cmp
in
jp
push
mov
push
leave
mov
ret
aad
mov
jo
and
push
pushf
mov
mov
pop
scas
sbb
loopne
inc
dec
push
in
jae
pop
call
jmp
addl
pop
dec
scas
movsb
shrb
icebp
lret
and
in
mov
lret
in
mov
std
mov
mov
and
pop
pop
sbb
xchg
les
mov
inc
add
mov
and
subl
sub
or
pop
mov
mov
xchg
imul
sub
lar
int3
dec
jge
pop
dec
stos
rolb
or
push
inc
jae
loopne
les
movsb
cmpsl
mull
sbb
inc
cmpsl
pop
cmp
sahf
cmp
sahf
dec
js
lods
jle
out
shl
jb
pop
adc
or
xchg
push
dec
cmpsl
out
adc
mov
cmp
insl
ljmp
iret
add
xchg
mov
rcll
shrl
sub
sbb
push
aam
stc
cvttps2pi
push
mov
lahf
push
cmp
mov
popa
jle
inc
fwait
inc
jnp
pop
stc
subb
imul
sbb
fstl
sahf
leave
int3
sub
out
ficomps
inc
mov
dec
lahf
add
fdivs
xor
scas
xchg
mov
adc
popf
add
loope
xchg
push
jo
test
cli
mov
mov
mov
sub
out
lret
pop
stc
dec
xor
test
and
divps
pop
gs
push
cmp
outsl
mov
push
xor
lahf
dec
sub
push
mov
or
add
or
jb
xor
es
pop
jge
decb
add
jns
inc
dec
stos
push
dec
add
mov
mov
nop
loop
shrl
dec
pop
lock
out
sub
inc
mov
push
leave
or
add
jno
pop
repz
mov
dec
cwtl
shl
jne
sti
sub
pop
outsl
push
adc
xchg
cmpl
dec
int
xor
shlb
dec
mov
in
fxch
ficoml
in
pop
shll
pop
scas
dec
xlat
add
ret
std
dec
push
fisubl
gs
shlb
inc
clc
and
es
adc
arpl
insl
xor
inc
adc
pop
mov
and
push
aas
cmp
cmp
loope
arpl
enter
xorl
das
lret
ja
jns
lods
subb
xor
cmpsb
cmp
jmp
mov
jae,pt
iret
or
xchg
es
sbb
pop
fadds
popa
data16
or
pop
sti
jno
sub
ds
ret
inc
mov
jg
inc
repz
inc
shl
popa
jo
cmp
repz
or
xchg
xor
movsl
movsl
inc
mov
loope
lock
fimull
ret
mov
cs
xchg
sub
aam
and
insb
add
mov
ret
aaa
inc
xchg
lods
xchg
cmp
pusha
dec
pop
or
push
cli
xor
pop
int
rol
mulb
ror
jge
cltd
jbe
push
xor
aam
mov
mov
sbb
test
frstor
or
sub
popf
xchg
xchg
ds
testb
adc
and
cli
cmpsl
ss
out
mov
outsl
fs
pop
fcoms
mov
fwait
test
mov
xchg
and
push
mov
out
or
inc
out
mov
adc
sti
xor
jno
cmp
cwtl
test
dec
add
pop
push
sub
jb
and
test
ret
inc
pushf
inc
cmc
mov
inc
stos
jecxz
or
pushl
ss
fcmovbe
mov
or
xor
mov
lods
sub
push
and
mov
jle
inc
aas
lret
sub
cmp
in
adc
sub
mull
ja
pop
xchg
jge
xor
xor
pop
ret
inc
jne
cwtl
mov
mov
out
jae
sub
div
adc
aam
jbe
jecxz
out
insb
cmp
pop
pushf
test
or
dec
repz
stc
iret
lds
mov
or
bound
push
xorl
inc
sub
cmp
jmp
call
icebp
sub
cli
outsb
sti
lcall
inc
xlat
orl
rcr
push
test
test
test
subl
cli
jmp
outsl
xor
add
xchg
lret
imul
movsl
mov
aas
adc
imul
cwtl
inc
xor
in
push
scas
daa
cmp
repz
popa
xchg
xor
sbb
test
in
and
sbb
mov
lea
xchg
shl
ror
or
mov
pushl
sub
fsubs
leave
push
inc
jecxz
mov
and
inc
push
add
mov
jg
push
pop
in
stos
fstps
out
cmpsb
movsb
push
sbb
in
sahf
inc
pop
ljmp
dec
loop
inc
and
jo
jno
adc
fisubrl
cld
out
arpl
sub
loope
and
lods
test
xor
repnz
add
mov
cmpsb
hlt
lea
dec
outsb
or
outsl
xor
cmpsb
mov
lahf
adc
inc
shlb
push
dec
fdivl
pop
pop
push
adc
imul
dec
mov
and
sbb
iret
aam
idivb
inc
adc
imul
mov
mov
xchg
add
mov
nop
aam
mov
xor
loop
mov
mov
mov
popf
sbb
adc
subl
jnp
jb
mov
sti
movl
pop
test
jae
jp
js
shr
cmc
jne
pusha
icebp
add
adcb
adc
mov
add
inc
adc
ja
hlt
fwait
ret
push
sub
and
xchg
dec
ffreep
movsb
lock
arpl
or
cmpsl
int3
sub
inc
push
int3
push
outsb
inc
loop
mov
pop
and
pop
pusha
xlat
dec
js
call
idivb
mov
mov
loop
xchg
rcll
mov
and
push
and
fiaddl
pop
hlt
lock
mov
pop
rol
or
mov
lea
mov
sti
dec
xchg
cmp
jl
pop
add
shlb
lret
insw
xchg
or
hlt
xchg
mov
aam
ja
repnz
out
fcmovnu
inc
loop
hlt
pop
xchg
mov
out
add
sti
out
cmc
int3
pop
sbb
mov
push
dec
daa
cmpsl
mov
decb
mov
mov
adc
fisubs
test
rcr
sub
mov
push
adc
pop
jns
dec
test
push
push
imul
daa
jmp
push
mov
cmpb
inc
sbb
mov
xchg
into
mov
fcoml
push
lret
into
dec
pop
jp
lcall
pop
xchg
inc
shrl
or
cmpsl
push
xor
pop
mov
jmp
ss
call
roll
cmp
adc
pop
inc
cltd
push
les
inc
loope
dec
daa
aaa
adc
das
das
mov
xchg
scas
jae
pop
lods
stos
imull
sbb
fistl
ret
mov
dec
pop
add
jne
sbb
mov
mov
shlb
pop
adc
xchg
jns
cmc
scas
add
inc
test
jne
shll
pop
jae
dec
jne
stc
pop
fstpl
lret
out
sarl
mov
jge
jl
cmp
pop
icebp
jge
xchg
call
pop
cmpsl
int3
ss
out
mov
lds
gs
mov
icebp
push
inc
mov
sbb
icebp
jle
push
sub
pop
sub
xchg
aaa
cmp
sub
enter
arpl
repnz
inc
fildl
push
mov
sub
xchg
loope
fsubrl
std
mov
mov
in
or
push
ror
loop
mov
ficoml
imulb
adc
mov
ss
dec
and
push
adc
adc
mov
jbe
xor
xor
sbb
dec
movl
clc
cmc
jno
pop
xor
mov
pushl
xchg
inc
jge
adc
in
cmp
sbb
pop
rol
adc
mov
jp
mov
jge
inc
repnz
jno
dec
lret
push
out
lds
lcall
or
cld
sbb
into
push
mov
call
mov
jp
dec
cwtl
inc
repnz
mov
iret
push
pop
or
adc
ret
insb
mov
pop
test
scas
fbld
cltd
add
je
xchg
cs
imul
jno,pt
adc
push
dec
mov
scas
inc
lahf
xchg
jno
repz
adc
jno
stc
pop
and
lock
ret
adc
rcrl
pop
add
adc
shll
mov
sti
xor
rclb
pop
jno
mov
hlt
jmp
cmpsl
es
outsl
dec
ljmp
xchg
mov
fildll
inc
outsl
mov
add
and
sti
nop
jecxz
repz
into
jno
ja
sub
jns
insb
mov
push
lock
jae
add
aaa
fcmovnu
lods
push
js
sub
in
mov
mov
loopne
cmpsl
mov
ja
pop
frstor
xor
pop
mov
lcall
xchg
add
push
stos
rol
mov
in
jle
icebp
and
mov
stos
cmpsl
dec
enter
leave
inc
test
mov
inc
mov
sub
xlat
push
sbb
push
xor
insl
sub
and
inc
jnp
in
nop
in
xchg
dec
aas
xlat
pop
xor
shl
lock
nop
mov
xchg
xor
push
mov
mov
mov
adc
push
add
mov
sarb
lret
inc
xchg
jecxz
inc
sbb
call
pop
loopne
frstor
push
pop
insb
in
js
jp
sub
out
xchg
inc
mov
lods
xor
pop
adc
in
js
xor
data16
cmp
xor
imul
jno
je
cwtl
stc
dec
outsb
sbb
and
sub
sub
fimull
lock
lret
ja
xchg
andb
incb
or
pop
jmp
jl
es
bound
in
ret
add
hlt
cmp
imul
mov
insl
inc
or
jle
mov
aad
lods
mov
popf
clc
js
sahf
arpl
mov
push
sub
mov
add
lahf
xlat
jns
pusha
ss
or
xor
test
xchg
fsts
insb
and
fsubl
jg
inc
pop
in
inc
out
into
adc
cmc
jecxz
mov
insb
pop
outsl
out
push
jae
mov
sbb
or
xor
out
loop
sbb
outsl
and
xor
ss
fiadds
push
lds
test
aam
inc
xchg
outsl
ljmp
shlb
divb
pop
negl
nopl
js
mov
jae
add
je
inc
mov
xlat
lock
scas
mov
leave
lods
jg
pop
fstps
fnstsw
push
fidivrs
push
xor
xchg
insl
aam
ja
sbb
cmp
dec
mov
pop
fwait
push
out
inc
jg
inc
mov
sbb
rorb
push
outsl
outsl
loop
pop
mov
xchg
sbb
mov
push
clc
in
loope
cmp
pop
push
ret
outsl
stos
or
fcompl
enter
mov
shl
and
mov
outsl
mov
test
repz
cwtl
int3
xchg
pop
jae
push
pop
imul
iret
insl
fdivl
sbb
sub
add
jno
inc
mov
add
and
adc
xchg
cmpsl
push
xor
add
pop
aas
xchg
xor
movsl
jle
jg
xchg
xchg
stc
adc
pop
nop
call
lahf
sbb
imul
mov
pop
bound
cmpsb
mov
xchg
mov
out
mov
dec
mov
jnp
xchg
in
adc
fwait
or
mov
scas
sbb
push
scas
push
mov
enter
bound
popa
and
cmp
or
inc
ror
fcoms
xchg
add
mov
test
pop
loopne
adc
add
cltd
fwait
pmaddwd
lea
jg
out
cmp
mov
in
jmp
mov
mov
jae
ficompl
into
sub
outsb
jne
and
push
imul
jno
addr16
and
cmc
dec
mov
cmp
sub
in
enter
sbb
rclb
sti
mov
xchg
jge
and
imul
leave
lods
test
adcb
or
push
out
pop
and
xlat
repz
jnp
pop
push
jecxz
push
fidivrs
dec
and
push
pop
repz
cmp
add
jb
cmc
cmp
push
xchg
stos
fld
xchg
rcr
push
fists
mov
and
fisubrs
pop
mov
mov
loopne
lret
pop
iret
mov
sub
stc
bound
loope
enter
mov
mov
cmpsl
sub
jp
xor
stos
into
shll
push
out
inc
and
add
repz
xchg
dec
mov
adc
arpl
mov
lea
mov
cmp
inc
adcb
loope
push
cltd
movb
dec
sbb
enter
imul
nop
sbb
ljmp
das
lret
scas
movsb
mov
pop
stos
mov
jae
ljmp
jne
xor
mov
sub
or
push
jmp
into
push
pop
and
xor
lds
cmp
pop
paddsw
inc
shrl
and
mov
sahf
jecxz
inc
jns
mov
xorb
dec
push
jne
js
xchg
ja
xor
mov
test
push
pop
xor
jne
insb
adc
mov
pop
sar
pop
xchg
arpl
lods
adc
xor
lret
fsubrs
cmp
test
incl
push
shlb
enter
in
int3
enter
lea
xorl
add
push
aam
lret
xor
scas
addb
shlb
jl
xchg
into
pushf
stc
cmc
insb
in
pop
pop
in
and
lods
jle
pop
leave
cmovp
adc
push
xor
xchg
sahf
rcl
jl
mov
in
repz
push
movsl
outsl
jmp
addr16
lahf
pop
cwtl
xor
lret
mov
bound
jae
test
mov
sub
cmp
and
gs
test
leave
aam
inc
jns
sti
or
imul
fiadds
push
rol
push
mov
fnsave
add
rcrb
enter
and
ret
inc
fdivr
mov
add
adc
mov
pop
pop
out
mov
sti
fisubl
sbb
push
in
pusha
cmpsl
es
mov
rcrb
pop
mov
fisubrl
xor
fdiv
lcall
xchg
mov
movmskps
pop
mov
lret
rolb
or
add
and
mov
mov
aas
dec
mov
sbb
stos
xchg
lock
pushf
jbe
fnsave
and
mov
pusha
inc
jb
add
mov
lret
push
sahf
ljmp
fldz
xchg
mov
mov
scas
or
adc
cmc
add
cmp
add
test
and
ret
aam
ds
repz
cmc
mov
jo
push
pop
mov
pop
or
push
fimuls
xor
mov
mov
jecxz
sahf
out
mov
ss
xor
popa
out
inc
inc
les
pop
leave
ret
push
mov
push
or
movl
mov
not
movsbl
andl
mov
inc
mov
cmpl
jl
jmp
call
cmpl
jb
mov
sbb
sub
mov
xor
movl
cmp
movl
jne
xor
mov
orl
push
mov
add
mov
mov
mov
xor
add
jmp
mov
lret
mov
mov
test
jb
adc
jb
dec
cmc
loop
enter
lods
stos
lods
lret
stos
sahf
inc
xor
xor
adc
pop
lock
or
fimull
pop
pop
je
fdivl
pop
xor
sub
sbb
adc
out
orl
mov
sbb
in
mov
mov
jmp
fbstp
jecxz
push
xor
into
adc
lcall
loope
rol
ss
xor
jl
jno
xorb
iret
or
xor
pop
adc
dec
jns
jg
mov
xchg
fdivs
jg
add
repnz
das
inc
xchg
arpl
cmp
dec
pmaddubsw
into
mov
in
hlt
cmp
jo
inc
ljmp
cmp
push
xor
leave
and
jns
cmp
mov
lret
shlb
xor
fisubrs
fnstsw
roll
adc
loop
sbb
popa
sbb
dec
mov
fdivrl
icebp
popa
jle
mov
lods
into
js
in
dec
cmp
outsl
std
cmp
aas
test
cltd
or
xchg
ficompl
sub
mov
pop
hlt
push
imul
adc
lea
mov
ja
popa
outsl
das
outsb
test
inc
ss
outsl
inc
mov
mov
cli
stos
pop
add
idivb
add
or
arpl
dec
dec
pop
fsts
mov
push
inc
inc
mov
outsb
pop
add
dec
jmp
inc
adc
lcall
mov
inc
sub
movsb
iret
das
sbb
cmp
pushf
pop
pop
loopne
les
ret
xchg
cmpsl
icebp
addb
roll
cmc
cmp
mov
movsl
sahf
xchg
push
int3
add
push
cmp
dec
inc
xor
and
mov
cltd
cmp
inc
jns
sub
pop
inc
dec
insl
popa
adcl
pusha
mov
pop
cltd
adc
cmp
je
out
mov
loopne
mov
je
shl
fistps
add
in
test
pop
or
mov
stos
adc
or
pop
dec
dec
fs
lods
insb
cltd
lods
dec
movsb
insb
mov
jmp
add
iret
movb
lods
lock
shll
les
mov
or
sbb
xchg
adc
jecxz
inc
lret
xchg
out
lcall
jecxz
and
jle
subl
adc
stc
mov
mov
out
inc
push
hlt
nop
fadds
xchg
movaps
out
push
aam
mov
pop
adc
cmp
je
mov
xor
rorl
add
cltd
movsb
cmpsl
outsb
mov
call
test
mov
push
pop
mov
jl
xchg
orb
jb
cmpsb
cmp
dec
pop
test
dec
jp
jge
in
pushf
fwait
mov
jmp
addr16
sahf
lahf
mov
cmp
je
cld
testb
push
cmp
push
ss
sbb
rcl
mov
cmp
pop
popf
mov
loope
sahf
dec
sar
cmpsl
or
imul
mov
loop
inc
stos
loop
ljmp
mov
add
pop
paddusw
cmp
std
frstor
repz
mov
repnz
repz
pop
fwait
test
iret
dec
xchg
sub
call
shll
cmpsl
add
mov
adc
and
jbe
pushf
aad
lock
aaa
jl
lea
icebp
bound
fcompl
in
mov
in
sti
jmp
leave
sbb
shr
adc
int
into
pop
mov
or
add
dec
shlb
push
xchg
cmp
clc
fwait
std
push
mov
inc
ds
int
cmp
sar
incb
loope
push
in
mov
pop
mov
js
mov
imul
ljmp
xchg
lea
jg
push
or
decb
and
iret
mov
out
repz
xchg
sbb
cmp
and
test
pop
sbb
ss
fs
xor
pop
aaa
xchg
push
insl
cmp
mov
xchg
cmp
mov
push
loopne
ds
cmp
inc
push
sbb
mov
adc
pop
shll
and
mov
ret
nop
jnp
adc
push
mov
xchg
fwait
jns
lock
dec
call
mov
sub
mov
fcmovu
jmp
ljmp
or
imul
lods
or
mov
mov
je
sub
enter
gs
xchg
jecxz
or
add
repnz
push
arpl
mov
lret
notb
js
std
push
mov
mov
xchg
hlt
inc
sti
add
pop
and
mov
lea
jae
adc
push
xor
cmp
ss
push
in
inc
faddl
or
fs
ret
stos
repz
xchg
mov
cmp
dec
mov
nop
sub
andl
rcll
cli
pop
cmp
pop
filds
int
fidivs
push
inc
and
add
push
push
les
daa
mov
lock
int3
mov
inc
push
int3
shrl
aam
sbb
xchg
sbb
enter
aas
aam
ljmp
adc
push
dec
clc
dec
mov
adc
fstl
jne
cmp
xlat
mov
xor
pop
pop
add
and
cmpsb
imul
mov
shr
jmp
cmp
sub
jmp
dec
xchg
in
push
sbb
fcmove
push
xchg
lret
inc
enter
cli
add
mov
pop
xchg
fstl
icebp
ja
add
mov
jp
daa
xchg
repnz
lcall
push
or
add
add
cs
lock
dec
orl
fcompl
out
push
out
and
xchg
mov
pop
mov
sbbl
filds
mov
xor
jbe
mov
sahf
fisubs
mov
jb
mov
fdivs
adc
sub
sbb
or
pmulhuw
fsubs
jmp
inc
lret
dec
dec
cmp
add
pop
jae
addr16
push
outsb
fnstenv
cmpsl
mov
les
cs
repz
mov
sub
rclb
test
push
popf
cld
es
sub
insb
sbb
inc
sub
jne
add
fsub
add
or
push
sub
test
cli
dec
jnp
aaa
aam
dec
sub
aas
mov
ljmp
push
sbb
mov
pop
imul
lret
jns
sub
clc
add
je
arpl
and
lods
inc
pushf
sub
sbb
and
pop
in
shl
hlt
sarl
movsl
out
fcomi
popf
jae
push
mov
sub
test
xchg
icebp
int3
xchg
in
ja
hlt
out
clc
mov
pop
pop
movsb
mov
dec
jne
mov
subl
sbb
test
incl
lret
js
nop
mov
mov
stos
jmp
ljmp
mov
movb
xchg
jmp
aas
out
pop
push
xor
lahf
pop
xor
mov
popf
sbb
mov
out
sbb
ljmp
cs
insb
jno
pop
inc
cld
xlat
ffreep
imul
orl
sbb
movsb
pop
mov
repnz
cld
mov
sbb
jnp
push
adc
or
sub
add
arpl
test
add
test
sbbb
fstpt
sti
cmpl
xchg
rcl
hlt
mov
mov
jp
flds
fldl
or
out
out
jo
sbb
dec
inc
inc
pop
sbb
dec
jns
pop
pop
fsubrs
dec
jnp
cmp
inc
push
stc
scas
fwait
pop
pop
shrb
jmp
aam
push
test
sahf
test
push
cld
sub
cmp
push
sub
jmp
lcall
mov
sahf
imul
or
pop
push
in
ret
es
xchg
es
mov
adc
imul
test
loope
ficoml
mov
enter
aad
cmp
out
jg
mov
add
xor
push
and
cmpsb
pop
cmp
jle
cld
outsl
sarl
stos
out
xorb
xlat
mov
hlt
dec
dec
or
dec
xchg
ds
mov
add
xchg
aaa
stos
std
mov
push
adc
mov
mov
aad
lret
pop
daa
cmp
js
xor
out
ror
xor
mov
and
into
stos
jecxz
push
add
loope
and
jle
mov
xchg
ss
pop
dec
mov
jmp
dec
mov
into
add
inc
ret
test
push
mov
inc
push
adc
js
out
sub
lds
push
jo
add
mov
mov
iret
push
subb
add
adc
loopne
xlat
mov
push
movsl
dec
int3
xor
sub
xor
mov
adc
cltd
frstor
aam
cmpl
sub
test
and
adc
jbe
hlt
sbb
rol
push
push
repnz
add
bound
xchg
int
fs
push
clc
pop
stos
negl
dec
dec
xchg
sub
mov
movsl
popa
mov
out
scas
repnz
xlat
gs
arpl
jae
mov
pop
cmp
or
pushf
xor
add
mov
mov
out
mov
sbb
leave
sti
out
nop
mov
adc
and
adc
ret
fldt
mov
pusha
mov
xor
push
scas
add
fisubrl
sbb
xchg
iret
fistpll
pop
in
xor
or
ret
dec
dec
mov
inc
rorb
xchg
ljmp
int3
mov
add
xchg
adc
sub
lahf
inc
sub
scas
mov
adc
mov
jecxz
fwait
and
std
push
push
push
popf
mov
jle
sub
lcall
data16
pushf
shll
js
rclb
scas
add
nop
loopne
lock
xrstor
and
add
inc
pop
jp
outsb
mov
outsb
je
mov
jle
lods
mov
mov
pop
jmp
stc
mov
loope
cmpsb
fcmovu
and
dec
aam
inc
roll
jns
and
xlat
xchg
sub
dec
mov
test
sub
cld
std
dec
mov
int
mov
out
mov
xor
inc
test
outsb
mov
je
pop
adc
stos
mulb
pop
ds
fstpl
fdiv
jmp
scas
mov
repz
imul
into
js
pop
rorb
xchg
dec
repnz
aad
push
mov
inc
outsl
cltd
push
jnp
push
jae
sub
call
dec
mov
stc
and
out
icebp
daa
int3
inc
jp
pop
js
leave
cmpsb
sub
gs
ja
cld
xchg
pop
xchg
cld
mov
and
push
adc
add
mov
aas
fistl
jno
mov
stc
inc
adc
cmp
movb
pop
into
or
or
sub
adcb
fistpll
sub
push
and
push
jo
ret
mov
jmp
mov
dec
mov
outsl
add
orl
adc
add
mov
sbb
gs
dec
push
jns
sahf
fstps
pop
das
subb
call
pop
aas
sbb
mov
ss
adcb
arpl
arpl
jecxz
in
cli
push
fisubrs
fdivl
jmp
cmp
jno
sti
cwtl
ja
xor
insl
cld
lods
flds
outsl
jno
mov
sbb
add
nop
push
fbld
pop
and
pop
mov
xchg
popa
es
pop
xchg
or
cmp
orb
stos
jge
push
imul
sbb
jmp
jp
test
nop
inc
mov
arpl
push
cmpsb
jp
xchg
aas
sbb
mov
idivb
sbb
and
or
sbb
adc
divl
jmp
mov
push
leave
scas
jl
xor
jne
pop
leave
enter
movsb
arpl
outsl
mov
icebp
mov
lea
mov
sbbb
movsb
aad
pop
cs
and
test
inc
jp
call
clc
addl
pop
cmp
cmp
mov
add
jecxz
sahf
imul
aaa
pop
pop
ja
in
xchg
sti
or
leave
pop
fadd
das
popf
in
sub
mov
push
mov
ret
add
push
imul
and
pop
leave
jbe
jl
imul
test
in
and
pusha
pop
fs
jl
out
and
lret
fstpl
aad
mov
xor
dec
jo
fsubrl
loopne
pop
in
int3
mov
or
push
mov
mov
mov
ss
dec
daa
andb
movsl
call
in
inc
test
cs
and
dec
das
adc
scas
or
jecxz
xchg
aas
mov
push
jecxz
xchg
out
fldcw
lea
mov
test
adc
outsb
icebp
mov
fcoms
gs
xchg
jl
add
xlat
add
pop
xchg
mov
adc
or
xchg
sbbl
bndstx
clc
pop
dec
mov
fs
push
sub
aaa
scas
mov
xor
sbb
sub
mov
inc
xor
fs
jne
push
push
adc
out
xor
mov
fsubl
cmp
sahf
lahf
sahf
xor
push
fucomp
or
xor
and
xlat
sbb
fnsave
add
jg
out
out
sub
fsub
fs
sbb
inc
test
jp
mov
cwtl
mov
mov
jmp
push
enter
cltd
pcmpeqb
test
test
ljmp
or
mov
sarb
push
inc
jp
fnstenv
adc
es
sub
lea
les
jne
pop
outsl
fildll
mov
lds
mov
sub
movsl
pop
jp
jne
out
mov
xor
sub
jbe
xchg
insl
xor
sti
popf
repnz
in
mov
cmpsl
fistps
mov
or
pop
mov
dec
rcll
fiadds
lret
jno
sbb
pop
mov
jmp
cmp
inc
or
dec
mov
and
imul
lret
in
jns
mov
xchg
jne
or
sbbb
rolb
cmp
repz
cwtl
call
std
adc
pop
add
test
mov
movsl
or
movsb
outsl
inc
push
mov
push
popf
std
in
imul
sbb
jae
lcall
popf
stos
or
sbb
jmp
push
push
mov
aaa
lods
stos
push
mov
test
aas
pusha
hlt
das
lods
sbb
push
stc
xor
pop
sbb
lahf
aas
pop
mov
push
aas
pop
roll
mov
ret
add
inc
cmc
das
out
mov
scas
cmp
je
mov
fdivr
sti
xchg
xchg
xchg
push
dec
or
sbb
jp
sub
push
sti
repnz
and
imul
mov
add
idivl
ljmp
xchg
pop
aas
adc
loopne
pop
jecxz
or
fisttpl
adc
xchg
enter
jae
in
rolb
inc
popa
test
in
dec
sti
mov
arpl
outsb
sub
cmp
jnp
int
pop
mov
cmp
mov
mov
int3
movsl
nop
movsb
or
jne
push
jg
inc
adc
jno
mov
push
cmc
sub
add
and
mov
sbb
iret
or
into
push
sbb
cltd
mov
mov
inc
jecxz
out
mov
sahf
loop
push
fists
cmpsb
mov
add
incb
dec
xor
and
cmpsb
jnp
test
pop
test
adc
jg
sahf
dec
or
arpl
pop
sbb
xor
jge
sub
movsb
les
ljmp
movsb
es
and
lret
jecxz
add
jbe
xchg
ror
ret
loope
stos
push
sbb
test
cmp
scas
mov
adc
pop
jne
in
push
cmc
xor
ja
or
in
fbstp
mov
shr
sbb
jnp
cltd
mov
add
cmpsb
jo
repnz
test
bound
xchg
inc
scas
push
xchg
push
xor
lahf
loop
insb
mov
sarl
aam
mov
sub
pmullw
or
test
jl
jge
inc
sub
pop
test
or
or
pop
arpl
movsb
cmp
movsb
mov
mov
push
rcrl
mov
lea
or
push
fimuls
pop
les
inc
mov
dec
jle
and
inc
aas
push
push
jl
push
sarb
insl
xchg
mov
aaa
lret
cld
mov
pop
lds
xchg
scas
sbb
sbb
test
push
out
xchg
test
adc
mov
mov
cmpsb
sbb
or
orl
cmp
and
sub
ljmp
inc
int3
mov
add
out
int3
je
xor
in
xchg
mov
adc
enter
mov
inc
outsl
mov
lds
repz
mov
mull
ret
out
push
js
cmpl
aam
in
call
cmp
gs
test
insl
mov
outsb
dec
fistl
mov
sub
into
mov
mov
lods
mov
dec
hlt
mov
mov
fnstsw
sbb
clc
outsb
mov
mov
push
pop
outsb
jecxz
orl
stos
ret
fistpll
jnp
orl
sbb
cmpsl
mov
mov
in
push
mov
movsl
cli
dec
mov
outsb
lret
cltd
push
cmp
hlt
cmp
fmull
fdivrl
test
push
add
hlt
lock
imul
mov
fwait
and
mov
aam
int
mov
repnz
dec
js
cmc
inc
loope
test
pusha
cmp
fsubrl
jmp
xchg
ss
call
sub
lods
test
mov
mov
jp
add
into
sbb
ss
sbb
add
xchg
scas
imul
enter
xlat
cmc
adc
stos
pop
mov
xor
fsubr
mov
stos
xchg
add
inc
shll
int3
popf
imull
adc
mov
pop
pusha
jp
icebp
out
add
sub
divl
loopne
mov
jbe
fstpt
pop
out
dec
rcrl
mov
loopne
jge
shrl
jg
bound
inc
xchg
dec
add
sbb
xchg
push
stc
pop
xor
pop
lock
clc
or
mov
lock
or
mov
outsl
push
mov
pusha
adc
in
sarl
outsl
adc
js
bound
add
je
xlat
jmp
fnsave
jg
xor
or
adc
and
in
in
push
dec
add
sub
test
add
sbb
mov
cmpsl
call
jne
aad
push
icebp
jecxz
dec
pop
stc
in
call
mov
xchg
jo
lret
mov
add
addr16
and
addr16
stos
inc
xchg
cltd
fidivrs
sahf
push
jl
sub
fmull
ljmp
sbb
push
mov
rorl
jle
mov
out
and
push
lret
daa
inc
xor
jns
divb
inc
push
fistpl
dec
push
loop
adc
je
pop
out
jo
cld
dec
inc
arpl
lock
adc
mov
sub
out
std
cmc
cmpb
xor
xchg
xchg
icebp
sbb
sti
inc
xchg
fsts
nop
test
popf
iret
int3
sbbl
fcoml
lcall
xchg
insl
or
mov
aas
repnz
into
mov
push
lock
pop
mov
push
icebp
cmp
mov
jno
pop
fwait
pop
scas
int3
sbb
orl
mov
or
xor
out
sbb
dec
cmp
lea
jnp
sarb
cli
in
pushf
mov
int3
rclb
sbb
lcall
imulb
arpl
sarb
dec
test
fisttpll
add
mov
dec
and
xchg
xor
fs
hlt
popa
mov
nop
loope
fcoml
xor
inc
sbb
in
insl
pop
push
lret
jne
adc
and
stos
pop
rorb
loopne
pop
xchg
fsubp
cmp
dec
push
xorl
push
shll
dec
pop
cmp
sub
lods
scas
rorb
mov
sbb
or
or
add
int3
pop
adc
or
sahf
sub
or
mov
sbb
fwait
js
pushl
enter
iret
enter
jecxz
fwait
enter
add
mov
rolb
xor
dec
or
in
xchg
sahf
testl
out
xchg
test
pushf
xchg
xchg
add
jno
push
ret
movl
sahf
ficomps
nop
fprem1
add
stos
pop
mov
lret
bound
out
mov
daa
add
ret
or
shrb
nop
ds
jg
cmp
dec
inc
adc
push
sbb
mov
mov
leave
xor
imul
mov
enter
and
repz
pusha
cmp
jge
inc
adc
ret
inc
inc
leave
stos
inc
scas
int
les
ljmp
push
or
cmp
ja
fildl
cld
fldenv
push
rcll
jbe
xorb
add
push
pop
fs
fs
inc
sbb
and
mov
ds
pop
pcmpeqb
bound
jle
mov
icebp
mov
xor
loop
and
es
push
pop
ss
jae
hlt
add
leave
nop
jno
unpckhps
enter
lods
jne
push
mov
enter
adc
mov
push
inc
test
roll
loope
xorb
or
or
neg
int
pop
inc
pop
or
jb
les
dec
inc
lock
pop
jae
pop
in
sbb
xchg
aas
and
fsts
jmp
mov
repnz
jmp
imul
rcrl
xchg
fdivrs
adc
cmc
outsb
adc
mov
notb
fdiv
inc
jno
sub
mov
movsl
iret
ja
jle
out
mov
out
add
aas
and
in
add
daa
jne
dec
jecxz
fiadds
mov
fdivrs
jge
or
mov
insl
cmc
leave
push
sbb
testl
das
adc
sbb
sub
lea
dec
xchg
out
dec
fidivrl
dec
xor
rorl
dec
sub
pop
add
cmp
add
dec
or
call
mov
mov
clc
arpl
aad
add
aas
jp
pop
loope
adc
jnp
push
add
and
js
ret
jg
roll
add
and
dec
and
iret
imul
adc
in
pop
or
mov
cmp
jne
movsb
leave
dec
or
leave
rol
sbb
xchg
aad
add
sub
in
push
rcrb
fistpl
outsb
dec
jnp
dec
adc
cmpsl
into
and
mov
fwait
push
bound
aaa
fisubrl
loopne
jl
test
mov
repz
mov
pop
push
rcl
mov
sub
cmp
xchg
push
jb
pop
mov
pop
cmp
jbe
je
repz
sti
fidivs
xor
cmpb
mov
push
xor
in
add
iret
pop
sub
insl
sub
sbb
sahf
inc
xor
push
dec
mov
add
push
pop
ss
pop
repz
scas
inc
aas
out
jo
and
mov
testb
shr
add
pop
add
push
es
gs
xor
loope
xchg
add
jecxz
jle
fs
data16
jg
sub
inc
push
cmc
jl
inc
sbb
lock
pushf
das
sbb
lods
push
fstps
psubw
sub
and
add
xor
or
mov
inc
mov
gs
scas
inc
mov
nop
fsubs
xchg
add
and
fcmovbe
xchg
sub
push
lods
fs
ret
jno
mov
test
test
aam
lcall
jl
repz
ljmp
fwait
popf
jl
lea
cwtl
sub
xor
imul
adc
in
and
mov
addl
enter
ret
loope
mov
icebp
cmp
jne
imul
dec
int3
inc
or
push
or
mov
scas
aas
push
sub
fidivrl
mov
inc
nop
push
in
ja
xchg
iret
mov
and
scas
in
mov
dec
jmp
push
in
in
push
pop
mov
mov
stos
mov
jbe
xchg
push
and
aaa
push
nop
imull
xchg
push
int
lods
mov
jle
loop
pop
adcb
scas
pop
mov
jb
rdtsc
fidivs
sub
ficompl
xchg
das
lret
and
stos
pop
pshufw
pop
test
mov
mov
jl
adc
adc
or
push
sbb
pop
loopne
in
push
push
xchg
mov
jle
cmp
loopne
jp
xchg
inc
jns
mov
jge
ljmp
xor
out
sub
jle
mov
add
lods
xor
adc
leave
sub
sbb
scas
and
movsl
mov
daa
mov
and
cld
mov
mov
or
adc
mov
addr16
and
mov
ret
in
inc
aad
imul
cmc
notb
das
cld
push
jb
loopne
or
mov
movsl
ja
sub
rorb
icebp
scas
mov
jmp
test
cmp
in
push
ds
cmp
or
sub
or
aad
icebp
pop
clc
or
dec
jns
mov
or
mov
push
mov
repnz
and
inc
add
pop
pop
aaa
outsl
adc
test
dec
in
and
idivl
dec
sti
mov
cmp
add
or
sub
pop
add
int
jle
mov
cwtl
imul
addl
mov
cs
loop
dec
pop
lret
arpl
xchg
fcmovnu
aas
xchg
ds
aas
je
add
fst
jb
dec
xchg
sahf
push
mov
sub
fiaddl
jmp
cmp
xchg
pop
mov
stc
xchg
pop
sub
sub
in
stc
inc
scas
pop
cli
lea
das
add
scas
rcrl
mov
loop
jp
in
push
push
xchg
sbb
jle
clc
cmp
mov
loopne
imul
xchg
xor
adc
jecxz
inc
daa
imul
int3
mov
sti
aam
mov
jns
cli
inc
mov
and
movl
mov
pop
mov
jns
mov
xchg
fdivl
mov
insl
inc
push
lock
xor
enter
dec
and
clc
jno
repnz
push
or
sub
testb
xchg
xchg
pusha
cmp
sbb
or
das
lods
pop
test
adc
les
jb
outsb
pop
ja
outsl
fmuls
movsl
pop
pop
dec
jl
add
dec
dec
xchg
stos
inc
inc
cmp
fisubl
and
clc
push
jne
inc
jecxz
push
rorl
fwait
add
lret
mov
mov
nop
imul
outsb
jno
movsb
push
fsub
adc
mov
mull
shrl
rorb
mov
shll
mov
out
mov
adc
les
and
mov
das
mov
filds
sti
out
fimull
popa
lea
jns
rolb
sub
push
push
pop
xchg
arpl
lret
or
push
test
daa
out
int
adc
stos
decl
mov
movsb
pop
jge
sbb
xlat
fwait
orl
into
lea
in
adc
cmp
xchg
les
inc
sub
mov
cld
das
cltd
stos
fucomip
popf
or
mov
enter
pop
mov
cmc
or
aaa
popa
mov
lahf
adc
mov
lea
sub
mulb
into
pop
mov
xor
jns
orl
dec
xchg
inc
cmc
aas
jmp
daa
lahf
and
mov
dec
pop
dec
add
xor
xchg
rol
lret
stc
xchg
adc
fcomi
or
mov
mov
add
fists
roll
xor
mov
lret
dec
mov
mov
push
jmp
dec
push
inc
push
push
inc
int3
data16
into
inc
sub
scas
inc
cli
adc
add
push
xchg
xchg
sub
je
pop
pop
cmp
adc
cmc
sub
rcrl
icebp
xchg
iret
rcrl
add
les
out
leave
mov
push
jg
fwait
mov
outsb
sbb
fimuls
xor
or
dec
sbb
dec
int3
mov
repnz
mov
rcrb
lcall
mov
pop
jae
inc
mov
clc
std
in
shl
mov
and
in
xlat
sbb
xor
neg
push
xchg
xchg
dec
movsl
stc
es
pushf
cmp
cltd
out
dec
push
lods
push
stos
cmpsl
adc
push
mov
fnstsw
shrb
mov
daa
clc
push
test
clc
inc
loope
repz
pop
in
test
mov
mov
jbe
push
sbb
push
xchg
aam
iret
pop
iret
pop
rcll
add
pop
insl
inc
xlat
mov
cmp
scas
cwtl
cltd
inc
subl
out
inc
pop
jmp
push
and
jb
test
lock
jbe
and
lods
jmp
scas
test
pop
movsl
mov
aad
xchg
xchg
das
bndstx
mov
xchg
mov
mov
out
xor
inc
mov
gs
push
imul
clc
push
data16
jge
xor
out
xor
int3
pop
push
jmp
or
loop
push
xor
dec
iret
xchg
push
dec
xor
push
inc
sub
shll
bound
xor
andb
punpckhwd
mov
xchg
daa
mov
jae
xorb
in
inc
jbe
sub
pop
mov
add
push
pop
clc
ljmp
shl
mulb
or
fimull
cmp
lret
sub
mov
mov
sbb
call
cmp
sbb
aam
out
test
popa
xchg
mov
xor
es
mov
jmp
in
pushf
test
xchg
lret
push
data16
or
imul
pusha
xchg
push
js
sub
jo
inc
add
xchg
icebp
out
enter
cmpsl
outsb
cmc
mov
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
dec
mov
xor
xor
dec
mov
jmp
movl
mov
sub
push
sbb
movl
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
push
addl
mov
xor
orl
push
mov
decl
add
sbbl
mov
mov
addl
test
movl
je
mov
and
mov
addl
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzwl
sub
mov
xor
andl
add
mov
mov
xor
or
sub
imul
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
xor
and
add
andl
mov
xor
mov
add
xor
add
sub
mov
mov
sub
xor
add
neg
mov
sub
lea
xor
xor
cmp
movl
je
mov
xor
movl
add
cmp
jne
pushl
orl
call
movzbl
add
mov
movzbl
xor
mov
add
mov
xor
add
cmp
movl
je
pushl
andl
pushl
xorl
call
mov
or
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
pushl
push
pushl
push
call
xor
or
dec
mov
jmp
mov
xor
incl
add
movl
cmp
movl
je
mov
mov
mov
mov
inc
mov
subl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
pushl
call
jmp
mov
adc
mov
sbb
mov
xorl
add
dec
mov
sbb
mov
or
mov
xorl
add
movl
mov
movl
jmp
mov
mov
add
orl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
jmp
lret
sbb
ja
mov
sbb
popf
in
jl
dec
add
jb
pop
jb
fs
jno
stos
lods
cmp
xchg
jb
into
pop
mov
popf
cld
dec
sub
push
or
sub
mov
xchg
mov
clc
lods
pop
int
sbb
pop
aaa
cltd
div
pop
or
mov
jbe
push
adc
sub
stc
clc
fwait
jo
adc
and
pop
aaa
ja
jno
maxps
in
ss
dec
dec
arpl
cmpsl
outsl
pusha
mov
movups
cmp
add
pop
stos
lahf
stos
mulb
mov
in
mov
imul
dec
jmp
cli
gs
push
mov
xchg
fildll
inc
xchg
out
xchg
ret
sbb
mov
push
pop
and
xchg
cmp
add
xor
push
push
cmp
mov
adcl
mov
data16
cmp
call
cltd
mov
add
lahf
lock
nop
out
lea
sbb
push
sbb
pop
popf
pop
lret
fnsave
adc
mov
lahf
or
fs
int3
lds
cli
inc
addl
push
addb
push
xchg
sub
mov
mov
stos
add
jne
aam
and
dec
test
fnsave
rclb
push
lcall
int
mov
mov
test
incb
jle
pushf
or
mov
mov
jle
xchg
add
add
push
push
jcxz
jno
jb
inc
imul
xchg
pop
sub
repz
mov
lret
fwait
mov
fildl
sub
pop
das
cmp
add
pop
push
mov
mov
pop
jmp
jecxz
sbb
xor
mov
test
call
mov
sbb
add
sahf
mov
rcl
or
cmpsb
push
and
push
pop
enter
dec
mov
pop
push
dec
cld
ret
popf
arpl
adc
test
jl
jne
adc
mov
adc
imul
mov
inc
push
or
adc
out
fcoml
pop
sbb
push
div
mov
jae
popa
and
fnclex
inc
fwait
rorl
or
outsl
cmp
sub
jno
mov
pusha
pop
and
push
stos
sub
out
subl
sub
sub
xlat
lret
stos
stc
push
inc
adc
mov
xlat
mov
cltd
test
jle
push
xor
mov
inc
pop
sub
ret
loopne
insb
aaa
shlb
movl
fisubrl
xchg
mov
es
inc
mov
iret
imul
ret
popf
xor
out
push
adc
xor
int
cmp
xor
or
lods
out
or
or
and
xchg
push
addr16
pop
mov
rorw
in
sub
xchg
lea
jae
pop
mov
and
push
mov
jmp
es
aas
mov
mov
lock
stos
mull
pop
or
scas
add
push
cmpl
cmp
dec
push
fdivrs
dec
repnz
cmpsl
dec
jp
stos
dec
xor
jb
push
push
xlat
loope
sbb
sbb
arpl
stos
and
cmpsl
sub
int3
sub
mov
ss
cmc
cli
mov
addb
xchg
movl
jo
in
test
dec
iret
push
dec
adc
cltd
fimull
das
push
in
cltd
jl
inc
adc
test
ljmp
push
push
push
xor
jge
shll
adc
and
inc
add
sti
xchg
ret
mov
leave
push
test
lcall
jmp
xchg
pop
mov
mov
je
stc
das
xchg
and
xchg
scas
adc
or
sbbb
inc
cmp
lahf
rol
adc
sbb
and
mov
into
loope
xchg
sbb
syscall
push
xchg
xchg
daa
addl
pop
xchg
adc
mov
shll
dec
js
sbb
inc
add
hlt
xchg
cmp
mov
xchg
ret
fistps
fdivr
outsb
loopne
cmpsl
mov
fisubrs
push
or
cmpsl
loop
aas
lock
xor
sbbl
cmp
cli
xchg
pop
inc
dec
loope
fisubl
scas
inc
cmpsb
mov
dec
xor
jmp
or
fstpl
mov
push
mov
fbstp
ret
popa
mov
jmp
xchg
dec
push
push
sti
xchg
cmpsl
in
in
test
or
cmp
xchg
mov
je
nop
mov
lds
cmp
mov
aam
dec
hlt
mov
fwait
adc
repnz
ja
out
adc
aas
or
add
jge
bound
mov
jno
jbe
icebp
mov
rorl
mov
cmp
pusha
dec
mov
mov
fidivs
add
flds
mov
lret
outsl
cmp
jl
rolb
mov
idivb
hlt
cltd
rolb
inc
sti
push
outsb
mov
stos
adc
push
push
lret
int
xchg
ror
pusha
stos
and
movsl
lret
mov
mov
xchg
add
ror
icebp
dec
mov
fsts
add
inc
xchg
ljmp
es
icebp
pusha
pop
add
lret
xlat
sub
jne
lret
cmc
or
push
mov
mov
movsb
dec
fwait
popf
lods
in
and
lret
jb
filds
out
enter
dec
loopne
andl
mov
test
add
jp
fcoms
test
mov
jb
push
test
mov
icebp
into
mov
push
pop
int
mov
and
repnz
sub
push
fwait
daa
inc
jmp
fsubrl
xchg
push
mov
pop
mulb
addr16
xchg
test
or
test
scas
test
ljmp
push
pop
add
sub
pop
dec
mov
inc
repz
pop
push
jns
push
inc
into
ret
adc
dec
lcall
adc
mov
popa
jnp
inc
es
xchg
hlt
inc
and
jae
sub
sbb
sub
push
sti
cmp
dec
pop
lahf
xlat
fidivs
cmpsb
fadds
cmpsl
ds
push
mov
xchg
jbe
pop
mov
cmp
xor
repz
out
xor
jmp
mov
loopne
jp
out
aam
fwait
xor
jg
sar
or
add
inc
test
dec
dec
outsb
cld
sarb
xor
cltd
cmp
xor
ror
lcall
mov
cmove
dec
sbb
xor
das
pop
ja
in
add
repnz
add
sahf
iret
cld
les
and
mov
mov
cld
adc
add
mov
jns
push
out
pusha
roll
in
xor
aam
or
inc
jle
jmp
push
daa
dec
jecxz
pushf
pop
jno
and
and
inc
in
push
and
inc
leave
push
das
sbb
cmp
lods
scas
ret
out
xchg
push
add
lret
cmp
daa
lods
jmp
pusha
jp
push
and
into
negl
sub
popf
push
cmpsb
ret
xchg
mov
clc
lea
cmc
imul
push
cmpsb
fs
adc
pop
loopne
movsl
iret
daa
loopne
sub
nop
jl
cmp
je
test
iret
mov
test
outsb
jnp
fistl
push
inc
mov
dec
jae
shll
dec
insl
or
loope
arpl
and
and
call
add
mov
pop
daa
mov
out
shrb
scas
cltd
insl
inc
add
mov
pop
sub
xchg
imul
adc
lods
mov
and
and
mov
pop
pop
pop
xlat
sub
cmp
adc
cltd
pop
daa
outsb
stos
in
imulb
in
in
mov
dec
push
sub
ret
loop
lret
out
mov
add
dec
xchg
add
pop
xchg
lds
xlat
sbb
test
cwtl
add
jo
cld
pop
mov
jle
push
push
xchg
lcall
jo
sub
enter
mov
insb
orl
jb
adc
adcb
cmp
jae
jne
nop
movsb
lea
dec
iret
push
jae
pop
adc
push
dec
push
shlb
jecxz
sbb
nop
xlat
dec
or
pop
add
jae
xor
loope
repnz
xor
dec
sbb
addr16
mov
enter
mov
rorb
lret
pop
mov
into
shlb
or
cmp
dec
inc
mov
repnz
jge
cltd
jmp
fildl
sub
add
dec
popa
bound
decl
aam
push
cmpsl
dec
popa
cs
jmp
js
fdivrs
mov
and
scas
dec
and
dec
jle
push
nop
in
jb
fistpll
sti
push
adc
and
mov
rcll
pop
popf
daa
add
in
adc
je
push
xchg
xor
sub
mov
lock
lcall
add
lods
jns
jmp
mov
sbb
inc
addr16
inc
popf
xchg
mov
fistl
cmpsl
mov
lock
movsl
int
xchg
dec
mov
jge
ss
or
add
pop
or
arpl
pop
mov
xchg
insb
cld
adc
cmp
inc
pusha
loop
xchg
dec
in
dec
test
adc
sbb
neg
incl
mov
imul
pop
call
jle
outsl
loope
repz
pop
ds
ds
cmp
gs
pop
or
leave
push
xchg
inc
shlb
lcall
fisttpl
ret
fs
dec
mov
push
jno
stos
xorb
scas
push
push
shl
imul
lea
sbb
cmp
icebp
xchg
xchg
sti
push
sub
sub
call
sub
pop
sub
and
xchg
sbb
cmp
lahf
sbbl
cltd
into
scas
stos
les
xchg
sub
mov
add
sti
sub
push
xor
icebp
fnstsw
push
xor
js
inc
rorb
and
sub
inc
pop
fadd
mov
dec
dec
fstl
rcr
lock
pop
push
insb
in
mul
sbb
aad
xchg
aad
push
ljmp
and
popa
add
jns
call
mov
movsb
add
dec
sbb
in
loopne
and
imul
mov
aas
lahf
scas
aas
cs
and
or
rclb
bound
out
imul
lds
xchg
popf
hlt
add
movsl
dec
loop
aaa
add
xlat
loope
fnstsw
inc
stc
cld
stc
pop
dec
or
inc
jmp
xchg
pop
xchg
lds
sbb
sahf
push
dec
in
insl
outsb
and
fiadds
sbb
insb
mov
sbb
lret
mov
xor
xchg
arpl
mov
adc
inc
repnz
cmp
mov
jmp
and
gs
inc
in
setnp
pop
or
out
iret
pop
jg
out
pop
xor
mov
stos
iret
add
mov
mov
aas
ret
and
add
jno
inc
inc
hlt
jl
add
lea
mov
int3
aaa
out
cmp
lea
rcrl
fldt
pushf
sub
push
mov
mov
jle
xor
call
sub
xor
faddl
push
andb
mov
xor
lea
enter
and
in
dec
sub
test
sbb
xchg
popl
pushf
push
jg
jae
or
mov
fldt
mov
mov
pop
scas
inc
xchg
aad
pusha
pop
arpl
rcl
dec
in
std
sbb
fdivl
test
jne
aam
hlt
push
leave
data16
jp
adc
in
nop
sbb
cmc
movsl
ljmp
testl
in
xchg
jnp
adc
mov
addb
xor
mov
xchg
std
pop
pop
in
push
scas
push
xor
mov
sbb
out
jecxz
jo
adc
fildll
imul
int3
inc
mov
notl
shrl
jne
mov
lods
adc
cmp
sub
jne
mov
mov
sahf
dec
jns
jne
and
cmc
add
lds
insl
push
mov
jo
sahf
out
pop
push
push
mov
jbe
scas
jmp
cmp
les
and
inc
xor
pop
es
mov
repz
pop
fwait
inc
mov
mov
cwtl
fimull
stos
push
jl
add
jecxz
out
in
jl
jo
aam
push
inc
push
out
mov
and
xchg
cltd
jp
jns
loope
push
fisubl
sub
pop
mov
sahf
test
js
cmp
mov
mov
jecxz
dec
pop
xchg
daa
pop
gs
sbb
mov
div
pop
es
mov
jnp
decb
popf
jo
push
out
xchg
push
out
jp
mov
sbb
aas
loop
mov
and
sbb
es
cld
cmp
stos
ds
aas
push
cmp
fwait
repz
outsl
jle
iret
mov
ss
imul
movsl
rorb
push
scas
in
rcl
xchg
sub
subb
mov
push
repnz
ljmp
xor
test
pop
rclw
cld
pop
iret
scas
mov
imull
in
add
dec
xchg
out
sahf
in
sbb
dec
cli
lcall
sti
jns
cli
cld
pusha
dec
imul
dec
mov
adc
loop
pop
mov
ficompl
xor
mov
sub
mov
sbb
cmp
mov
in
and
or
loop
sub
outsl
inc
hlt
add
aaa
fdivp
pop
popf
dec
mov
sarl
shrl
pop
dec
sti
jnp
jb
aas
mov
outsl
mov
jmp
add
dec
lock
sbb
push
jae
inc
xchg
cltd
dec
in
cmp
ret
pusha
and
mov
iret
mov
jae
jecxz
rcrl
inc
call
xchg
dec
jp
aam
cmp
pop
xchg
inc
cmp
ds
sar
xchg
pop
adc
data16
fs
insl
outsb
ja
clc
xchg
xchg
add
adc
push
pop
xor
mov
or
sub
xchg
mov
icebp
mov
bound
fwait
add
sbb
or
jbe
or
adc
cmc
push
scas
jecxz
ljmp
or
or
and
cltd
fwait
xchg
mov
rorl
rcrb
js
sub
jecxz
push
cmp
negb
adc
mov
rcll
icebp
or
sbb
pop
dec
lahf
inc
repnz
scas
cmp
call
data16
sahf
addb
sbb
push
jl
test
test
mov
stc
call
nop
adc
arpl
cmc
aas
push
jmp
jge
add
or
and
xchg
pop
ja
repz
jl
scas
push
mov
cmc
lret
data16
addl
mov
loop
js
clc
aas
push
out
loop
in
lahf
or
out
rcr
ss
jb
ja
test
movsb
aam
jge
fs
insl
ljmp
cli
add
cmpsl
mov
aam
sbbb
popf
test
jns
mov
in
jne
das
or
xchg
or
fwait
xor
icebp
mov
adc
out
cmpl
push
xchg
inc
sbb
mov
divps
cmpsl
pop
movsb
loopne
jnp
xchg
and
test
mov
inc
cwtl
inc
jae
movsl
push
out
rolb
paddusw
pushf
xor
sub
jnp
pop
leave
imul
pop
add
in
dec
roll
ficompl
pop
sub
xchg
cmpsb
int3
dec
jp
mov
fbld
sti
sbb
xchg
sbb
and
mov
jge
push
mov
mov
orl
lods
jle
stc
pop
adc
nop
sbb
inc
push
rorb
nopl
push
mov
add
into
add
fldenv
pop
andb
lods
and
cmp
push
mov
jp
jmp
add
jbe
xchg
xchg
push
mov
hlt
lahf
mov
mov
xor
daa
jmp
movsl
ss
ljmp
add
mov
fwait
sarl
sti
pop
mov
les
aas
xchg
cmpsl
lret
out
nop
movsl
mov
and
pop
test
movsb
cmpsl
pop
into
jle
lea
lcall
cltd
push
aam
xchg
jns
push
sbb
jg
cwtl
cmp
cltd
sub
adc
jne
fs
outsb
adc
aam
add
sbb
arpl
sbb
and
sbb
jo
ljmp
lock
xor
loopne
mov
movsl
jl
scas
pop
xchg
cmp
out
cld
sub
imul
mov
gs
arpl
mov
and
push
stc
fsubrs
into
frstor
andb
or
iret
loop
push
mov
pop
negb
gs
mov
loope
fistpl
dec
mov
pop
sbb
inc
mov
mov
and
aad
jae
push
ret
xlat
popf
add
popf
ret
xor
adc
mov
sub
cmp
aam
or
inc
sbbb
aam
scas
fbstp
cwtl
pop
mov
out
adc
push
aad
scas
adc
xor
mov
aaa
std
int
sbb
outsb
bound
jmp
jle
push
pushf
push
add
or
in
jns
mov
sbb
outsb
scas
cmp
ss
jmp
xor
dec
fisubs
sbb
dec
rcrb
std
ja
in
orb
ret
stc
fwait
xor
out
dec
xchg
je
shlb
dec
nop
fwait
hlt
mov
mov
cmpb
ss
data16
jl
je
pop
rorl
or
scas
cmp
popf
loopne
mov
mov
push
mov
roll
pop
adc
or
or
test
popa
stos
dec
insb
loopne
jecxz
repz
std
add
inc
cmpsl
mov
mov
push
push
add
aaa
push
sub
sbb
pop
gs
sti
aam
repnz
xchg
mov
xchg
lock
push
add
cwtl
je
test
icebp
rcl
xor
mov
ja
outsb
in
lret
dec
roll
jb
adc
aaa
std
mov
pop
push
fimuls
pushf
sti
or
ja
lock
and
mov
mov
gs
shrl
pop
pop
add
or
out
out
pop
pop
lods
mov
pop
popa
mov
cmp
pop
sahf
and
pop
hlt
or
cmp
movsl
xchg
dec
xor
and
mov
sbb
stc
mov
lock
add
ret
rdpmc
xor
lcall
stc
mov
inc
sbb
sub
int3
inc
imul
fdivrs
fimull
std
pop
test
mov
mov
or
mov
push
cmp
es
loope
jae
push
mov
cmp
out
or
test
imulb
inc
lods
jne
lock
push
dec
mov
push
xor
subb
std
cmp
pop
ljmp
mov
dec
sti
jbe
ret
mov
fcmove
adc
stc
sarl
inc
mov
lret
in
jae
push
ja
fld
clc
sar
icebp
mov
out
outsb
popa
mov
lods
ja
lods
add
mov
mull
adcl
dec
push
lcall
rolb
mov
movsl
pop
push
outsl
arpl
inc
gs
popf
xor
sbb
sub
sarl
adc
push
test
std
and
sub
pop
push
nop
ret
mov
push
repnz
pop
popa
xor
adc
cmc
out
sbb
imul
popf
int
sbb
mov
adc
inc
mov
loopne
dec
add
lea
sub
mov
fcmovnu
mov
mov
ret
pushf
inc
aas
or
repz
mov
mov
pop
je
xor
leave
jg
mov
pop
jmp
and
movsb
sub
push
xchg
je
jne
stc
icebp
jae
cmp
mov
cmp
insb
mov
cli
in
iret
call
mov
lock
dec
fstl
call
stc
fldenv
adc
lds
xor
dec
push
fdivrs
out
mulb
or
lds
lods
pop
fs
fisubrs
data16
cmp
mov
mov
mov
testb
or
jge
dec
mov
or
xchg
xor
xchg
cmc
mov
loopne
xor
adc
jmp
int3
mov
mov
jge
and
ds
adc
movsl
int
sub
dec
pop
or
stos
inc
jl
adc
mov
or
push
pop
jmp
push
xor
sub
mov
pop
dec
mov
fmuls
pushf
mov
daa
push
mov
xchg
inc
cmpsl
jge
sub
out
jecxz
or
adc
xchg
sahf
ffree
imul
lcall
sub
iret
stos
test
addl
test
fmul
jne
push
out
mov
inc
sub
fimuls
sbb
push
xor
and
std
rcrb
adc
jmp
shrl
lss
inc
dec
outsb
jge
jae
bound
fwait
ss
sbb
les
sbb
dec
mov
scas
pop
xchg
adc
add
dec
cmp
in
push
jle
mov
adc
cmpsb
or
mov
int3
jge,pn
jb
dec
cmc
popf
sbb
adcb
pop
jbe
scas
lret
push
adc
adc
je
sbb
dec
push
out
sbbb
sub
pop
mov
gs
push
movsl
jl
sub
mov
bound
cs
adc
imul
sahf
jns
add
or
outsb
out
int
pop
or
pop
push
cmpsb
cmp
std
jns
push
shlb
xor
mov
lret
std
xchg
movsb
loopne
or
fsubs
dec
data16
movsb
inc
inc
jp
or
xchg
outsb
aaa
xor
pop
ja
jp
or
popa
mov
into
repnz
lahf
sahf
mov
mov
ss
pushf
enter
aas
push
test
xchg
cli
aam
mov
xor
jbe
mov
sbb
outsb
cmpsb
dec
and
cmp
xor
xorb
mov
fs
mov
cmc
cmp
outsb
pop
add
sbb
scas
das
push
xchg
inc
lods
js
lds
loop
adcl
daa
pushf
dec
popf
imul
jg
mov
js
xchg
mov
cmp
pop
push
and
stos
cwtl
jno
rclb
dec
sbb
and
cs
and
test
sub
add
ret
push
jp
xchg
push
sbb
sub
stos
in
inc
insl
jl
cli
gs
xchg
dec
cwtl
mov
jl
lret
imul
mov
daa
xor
cmp
jo
mov
loope
mov
add
daa
xchg
and
int3
mov
sub
nop
mov
add
cwtl
or
mov
cmpsb
jp
mov
les
pusha
aas
hlt
ret
sub
ret
out
and
loopne
andb
sub
cmp
cmp
sbb
xchg
shrb
shll
push
sbb
jae
adc
sub
es
cmp
cld
outsl
push
mov
js
ss
or
or
es
fsubl
mov
adc
js
mov
jg
jge
inc
cli
mov
mov
sub
int3
lock
mov
in
push
sbb
sbb
pop
dec
fsubrl
push
cmp
jo
xor
or
sbb
movsl
stos
xchg
mov
and
mov
sar
inc
pushl
sbb
lods
pop
ret
cmp
aas
mov
stos
out
mov
cs
int3
sub
ds
arpl
aam
ja
push
test
jg
loop
test
xorb
stos
push
xor
add
gs
cmp
push
and
andb
mov
jno
int3
lock
inc
mov
pop
adc
outsb
ja
movsl
or
sbb
into
hlt
inc
push
sub
movsb
out
add
gs
nop
rcrl
or
inc
adc
sbb
test
mov
push
mov
mov
dec
mov
xchg
ss
stos
jl
mov
ss
mov
pop
iret
sub
ja
mov
adc
cltd
mov
outsl
and
mov
push
xchg
daa
insb
movsl
lahf
mov
pop
xor
fistps
lea
sbb
aaa
pop
rorl
call
dec
fs
lret
sahf
into
mov
stos
bound
xor
and
cli
ret
mov
xor
lods
je
xchg
mov
enter
cmp
jns
jo
xor
jp
jl
std
int
nop
shrl
jns
int3
jno
sbb
adc
push
lcall
dec
es
adc
fs
cmp
lods
xlat
in
fwait
or
sub
inc
in
out
jo
call
mov
enter
mov
and
xchg
sub
pop
xor
orb
cltd
pop
sbb
mov
js
insb
cmp
loopne
inc
cld
jae
mov
cmc
jmp
arpl
pop
imul
xchg
jae
jns
cmp
sbb
in
aaa
lods
mov
sti
lea
push
inc
adc
mov
sbb
mov
and
pop
scas
mov
shlb
sarb
adc
loop
sbb
cmp
add
pop
cmp
lahf
dec
push
pop
mov
pop
jae
lret
jl
outsb
mov
loopne
dec
ret
inc
in
das
in
in
push
xor
and
inc
sbb
mov
jns
xchg
in
cmp
nop
scas
add
dec
shrb
jge
mov
xchg
xor
scas
insb
rcrb
xchg
je
decl
push
xor
jp
xor
add
cs
movsl
into
pop
imul
rcrl
cmpsl
loopne
scas
cmp
imul
inc
fldt
xor
aas
xchg
arpl
sbb
mov
xchg
je
inc
push
movsb
pusha
and
inc
lock
add
jbe
xchg
or
mov
das
scas
adc
and
mov
ljmp
bound
xchg
call
add
push
cmp
inc
loop
repnz
or
push
iret
push
mov
dec
xor
shll
xchg
pop
pop
jle
cld
test
push
les
shll
mov
out
mov
jp
pop
pusha
pop
fwait
sbb
inc
adc
mov
test
or
pop
add
out
add
mov
movsl
hlt
mov
icebp
call
sub
mov
cmp
and
mov
push
iret
shll
cmpl
adcl
sbb
mov
cmp
xchg
stos
pop
nopl
sahf
les
xchg
inc
or
mov
fmul
outsb
mov
push
push
scas
ss
jmp
jg
in
xor
arpl
jge
int3
mov
cmp
adc
dec
pop
sbbb
sbb
pop
test
push
pop
inc
xor
pop
mov
loope
orb
add
jp
cmp
pop
rolb
mov
xchg
nop
xor
mov
lcall
enter
or
out
jle
jge
sahf
fwait
nop
mov
inc
jl
sarl
lock
mov
fidivs
lahf
scas
lea
cmp
adc
inc
orb
jo
jnp
inc
mov
adc
mov
scas
repz
dec
jge
icebp
mov
test
testb
inc
ret
into
dec
mov
and
xor
notb
mov
dec
jbe
leave
data16
std
in
inc
cmp
data16
out
leave
cmp
fisttpl
cmpsl
mov
stos
mov
aas
aad
pop
jae
and
jb
ret
test
xchg
mov
loopne
jno
push
loop
pop
dec
xor
aas
jnp
adcl
adc
popa
mov
xchg
dec
imul
test
sbb
cli
add
jns
ljmp
out
and
lahf
fmulp
sbb
sub
pusha
imul
sub
jmp
add
mov
popf
and
mov
push
xchg
aas
mov
lea
sahf
rorb
mov
jne
xchg
mov
adc
aam
xchg
cmpsl
mov
clc
addr16
mov
or
repnz
iret
cmc
mov
push
dec
and
in
adc
scas
push
push
aam
cltd
rcrb
pop
sub
mov
xchg
in
jno
ffreep
in
dec
jmp
jne
pop
jns
js
orb
aaa
inc
arpl
test
fsts
lds
sti
insl
stc
mov
push
pop
mov
pop
fisttpll
aaa
xchg
into
pop
jae
mov
mov
sbb
cmp
fidivl
push
pusha
fbstp
sahf
xchg
in
push
cmp
dec
daa
add
addr16
insb
mov
out
loope
mul
ljmp
imul
push
stc
or
add
and
int3
jno
add
xor
arpl
jne
jbe
mov
jno
push
and
fsubl
pusha
pop
lods
xor
ljmp
mov
sti
mov
into
xor
lods
cmp
js
lods
jno
scas
add
jne
jp
arpl
pop
and
ja
dec
dec
jg
mov
pusha
mov
xor
ret
adc
and
movsb
fstp
mov
inc
mov
rcl
aam
or
xchg
cmp
mov
cmp
jb
adcb
mov
ja
jo
jo
cmpl
add
mov
xor
jns
cmpsb
daa
inc
jp
cmp
fwait
loopne
add
push
js
xchg
test
fimull
lcall
pushf
pop
push
sbb
xchg
int
gs
mov
outsb
subb
mov
pop
sub
push
and
sub
xor
mov
mov
jge
inc
xchg
fstpt
xlat
jg
dec
mov
mov
pop
aam
cmc
mov
test
fnsave
sub
push
inc
mov
mov
es
out
leave
and
and
je
aaa
inc
cmpsb
fwait
or
stc
fmull
movsb
xchg
pop
dec
push
sub
test
xchg
sahf
repnz
aas
stc
push
mov
rcrl
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
jmp
xchg
cli
testl
jae
adc
dec
mov
jb
clc
pop
jb
hlt
mov
push
or
jp
mov
int
call
sbb
cmc
testb
imul
test
scas
push
adc
add
inc
pop
addl
mov
mov
jns
inc
loopew
movsl
xor
das
push
gs
data16
mov
add
icebp
orl
daa
mov
xor
push
sub
adc
and
dec
cwtl
push
fwait
test
pop
stos
icebp
sbb
inc
aaa
jno
mov
mov
lahf
adc
sub
shll
inc
jns
adc
mov
adc
sarb
andl
add
lcall
sti
sbb
aaa
sub
xlat
pusha
xchg
cs
dec
add
push
outsb
push
mov
cs
xor
enter
xor
xchg
xchg
pop
movsb
jo
xchg
xchg
xor
adc
adc
lds
aam
jbe
shll
fdivs
jnp
or
mov
data16
imull
mov
adc
or
into
hlt
sub
jno
pop
rolb
mov
dec
inc
sar
hlt
ljmp
mov
or
cmpl
jb
or
push
and
test
ja
fcomps
bound
in
mov
test
jns
dec
push
pop
or
mov
xchg
repz
movsl
inc
lcall
out
xlat
mov
imul
ret
mov
movsb
int
jnp
lahf
mov
or
mov
je
sub
pop
jb
in
adc
xor
push
daa
adc
pop
push
mov
dec
push
dec
jecxz
xor
xchg
inc
mov
in
pop
inc
sbb
dec
lret
scas
sub
lods
popf
jb
movsl
push
std
shrl
mov
jno
dec
gs
rolb
xor
mov
mov
notl
jb
mov
sbb
push
popa
stos
into
ljmp
xchg
mov
jnp
in
ja
cmp
pop
sub
lods
scas
cmp
xchg
nop
movl
xor
rolb
insl
mov
pop
les
pop
in
adc
adc
mov
jae
fidivrs
push
ss
push
adc
fmuls
icebp
lea
xor
jp
xchg
les
sti
test
inc
push
xlat
out
aaa
lock
ss
xor
sahf
inc
cvttps2pi
popa
pop
push
aam
in
dec
ret
popf
or
das
adc
mov
mov
test
mov
sbb
and
insl
fcoml
or
fld
mov
push
stos
mov
cmc
jmp
out
adc
out
cltd
sbb
adc
sarb
jle
call
cmp
dec
pop
andl
ja
dec
mov
lds
sbb
jp
in
stos
nop
jp
mov
repz
mov
popa
fdivrs
dec
in
jmp
sbb
outsb
int
aam
out
test
mov
outsl
sub
shl
push
std
stc
mov
in
enter
rcrb
rclb
xchg
int
pop
pop
dec
mov
lcall
inc
sub
cld
inc
stos
or
mov
mov
js
and
sub
negb
and
or
dec
and
mov
or
xlat
cmpsb
and
clc
xor
push
lcall
ss
jno
mov
into
filds
dec
fistps
ljmp
sub
cmp
xor
fnstcw
bound
loopne,pn
or
idivb
aas
cmpsb
arpl
pop
pop
dec
jle
lds
iret
mov
std
mov
jecxz
divb
sbb
dec
inc
loop
lcall
outsl
popf
int3
mov
mov
pop
bound
testl
inc
mov
test
fsubs
pop
and
rclb
mov
cltd
loopne
or
std
mov
inc
movsb
jnp
jp
out
pop
jle
out
inc
dec
cmp
mov
in
sbb
cmp
fsubl
jge
cmp
xlat
cmp
inc
cli
icebp
xlat
jle
dec
jecxz
addr16
cmc
cmp
leave
ljmp
sub
xchg
pop
je
fwait
leave
les
ret
or
and
shll
cli
int3
in
es
push
dec
jp
popa
mov
shr
aad
arpl
xchg
xchg
ja
stc
add
pop
adc
loope
fs
xor
aaa
pop
mov
jo
test
cmp
popa
shr
lahf
cmp
adc
push
lahf
mov
mov
mov
fs
sub
push
cld
cmpsl
dec
pop
shll
sbb
lret
pop
cmpsb
inc
mov
test
mov
xchg
mov
repz
inc
pop
pop
hlt
dec
fnstcw
and
dec
lods
int3
movsl
mov
sub
pop
into
aam
out
dec
inc
ret
imul
roll
in
in
int
sub
mov
or
sbb
sbb
rcrb
or
xchg
sub
outsl
repnz
adc
lods
test
rorl
repz
dec
cwtl
dec
and
pop
dec
xchg
fwait
xor
jno
test
into
jmp
cmp
jo
cmp
mov
lods
jae
sbb
adc
push
testl
add
inc
pop
dec
or
mov
sbb
xorb
or
jnp
hlt
sbb
std
xor
sbb
lock
hlt
and
divl
xchg
test
mov
adc
mov
in
mov
xor
mov
sub
xor
andb
xor
aas
movsl
data16
das
fists
mov
mov
jge
jg
loopne
push
jecxz
filds
push
ucomiss
insb
iret
repnz
lds
fnstcw
es
nop
or
scas
push
mov
cmpl
sbb
rolb
dec
add
jo
popf
xchg
icebp
aam
pop
scas
insb
add
scas
js
psrlw
cli
insl
jp
jl
mov
pop
dec
sti
fiaddl
pop
push
ss
nop
insb
addl
mov
dec
popf
daa
and
jne,pn
leave
adc
jge
test
xor
shll
bound
lret
mov
fwait
aaa
mov
pop
into
out
pop
add
xchg
sbb
inc
out
mull
fnstenv
sub
inc
xor
mov
fdivrs
jno
pop
adc
mov
cltd
cmpsl
pop
dec
cs
movsb
js
xchg
inc
push
add
inc
xor
adc
mov
xlat
aaa
outsb
loopne
imul
or
pop
dec
fiaddl
mov
fwait
out
xor
sub
jne
idivb
ficomps
je
dec
jp
or
inc
mov
andl
addl
sbb
test
inc
jb
js
mov
decb
dec
push
stos
dec
sbb
jecxz
mov
fdiv
push
sub
lea
inc
push
or
sahf
leave
sub
into
in
mov
or
lea
or
daa
push
out
daa
mov
dec
xchg
inc
clc
and
pop
cmp
jmp
stos
and
xchg
xor
sbb
adc
xchg
lds
mov
jecxz
jp
jle
sar
bound
push
pop
imul
cltd
or
push
adc
std
xchg
add
add
add
sub
pop
into
jp
icebp
hlt
add
mov
xor
sbb
jb
idivl
pop
fcomip
push
call
fisttps
and
sub
in
aas
fiadds
sbb
arpl
sub
xchg
ret
push
jmp
jmp
outsb
outsb
out
rorl
or
int3
jbe
and
add
loopne
mov
aad
popf
jmp
loop
xchg
lds
dec
xor
sub
jne
leave
mov
jecxz
jbe
sub
adc
xlat
mov
mov
pusha
xlat
movsl
rol
inc
dec
xlat
fucom
add
jne
fs
repnz
adc
sbb
aas
sbb
push
ss
decl
lds
imulb
je
dec
push
sub
push
stos
sbb
lock
adc
lea
add
iret
add
enter
or
pop
and
loop
xor
bound
and
rcll
add
mov
jnp
xchg
mov
adc
inc
dec
je
test
fbld
imul
movsb
adc
pushf
jmp
push
lea
mov
cmpsb
in
xor
mov
rcll
xor
arpl
fcomps
in
add
out
clc
stos
jae
adc
cmp
fidivl
in
push
pop
cmp
lods
shrl
sbb
lahf
repz
mov
aad
pop
lds
ja
das
jp
push
inc
pop
insl
and
aaa
sub
out
mov
fdivrs
jne
xor
aam
repz
mov
cmpsl
push
rclb
pusha
movsb
popa
jne
sbb
jge
scas
loop
cmp
mov
pop
pop
das
inc
cmpsl
into
nop
scas
pop
pushf
notl
xor
mov
adc
fisubrs
ja
cmp
lock
dec
mov
xorl
jl
in
das
jbe
and
ss
mov
pop
add
add
imul
sbb
je
rcll
stos
leave
xor
cmp
stc
sub
test
leave
data16
arpl
push
sbbb
mov
xor
inc
xchg
xor
lea
sub
arpl
or
dec
cmpsl
mov
add
mov
push
leave
push
push
fstpl
aaa
cmp
movsl
jns
add
leave
mov
imul
adcb
int3
nop
sub
dec
and
aad
int
mov
sti
jecxz
out
sbb
xor
imul
jmp
cmp
loop
pusha
popa
cs
lahf
xor
rorl
mov
mov
js
cmp
divb
mov
jno
incb
ret
inc
into
into
stc
pusha
xchg
daa
adc
lahf
aam
or
scas
enter
dec
jle
or
loope
mov
pusha
dec
adc
ljmp
xor
ljmp
xor
out
cwtl
push
pushf
push
sub
xlat
sbb
in
jnp
decl
stc
jae
or
sbb
fadds
cmp
jmp
pop
xchg
ror
mov
pop
cwtl
cld
outsb
xor
fwait
mov
fdivl
adc
aas
into
in
push
mov
into
jecxz
adcb
inc
push
in
aam
jae
ret
cmpsb
or
and
push
push
push
mov
popa
loope
data16
cmpsb
mov
push
inc
fnstcw
adc
mov
mov
sub
xchg
ret
cmp
xchg
cmp
outsb
call
push
mov
in
aas
jg
pushf
mov
les
jmp
inc
mov
data16
stos
or
add
cwtl
lock
inc
scas
cmp
mov
sbb
test
adc
inc
adc
sbb
add
sub
aas
adc
fs
dec
roll
fs
pushf
lods
adc
sbb
sbb
push
loop
loopne
in
imul
and
adc
dec
jns
push
push
sub
cmp
cmp
lea
fs
mov
mov
mov
imul
movsb
xor
sti
pop
fldl
lods
cmp
xchg
dec
cmp
push
lret
dec
mov
call
fdivs
sub
aas
gs
push
cli
loop
mov
fwait
sub
aam
cwtl
das
jno
lea
jne
push
ja
sbb
cmp
xor
xor
push
test
stos
hlt
test
mulb
stos
popf
add
xchg
mov
cmp
in
jb
mov
bound
cmc
sbb
xchg
jns
dec
add
mov
es
cltd
iret
rorb
leave
jle
jnp
pop
mov
jmp
push
jbe
mov
push
jl
xchg
cmpsb
cmp
cmpsl
push
dec
or
mov
cltd
stos
movsl
pop
and
mov
inc
sub
in
arpl
leave
mov
stos
cmp
sbb
xor
xor
adc
push
xor
or
test
or
inc
fisubrs
mov
or
or
lds
jb
sub
fcmove
xor
xorl
fadd
cmp
inc
push
and
xchg
movsb
xor
pop
jl
inc
sub
or
ja
push
bound
adc
sub
mov
icebp
push
pop
dec
insl
gs
pop
testl
push
mov
mov
pop
test
in
jne
je
adc
popa
mov
repz
adc
cld
or
xor
movsl
jne
mov
ja
and
mov
leave
dec
aam
cmpsl
dec
out
popa
jo
sbb
ret
inc
or
sbb
cld
xor
mov
or
gs
lret
add
imul
movsb
jb
ljmp
inc
in
mov
xchg
pop
lret
les
or
fidivl
nop
mov
mov
sti
addb
mov
and
xor
sub
xor
xchg
insb
ljmp
push
dec
sti
test
rolb
ljmp
pop
shl
daa
dec
cli
js
mov
cmp
cltd
sub
fcompl
mov
cmpsl
fsubl
lods
es
dec
inc
xchg
pop
repz
add
push
push
int
out
xlat
pushf
jbe
mov
add
jp
cmpsb
lods
sub
pop
push
dec
mov
shll
jmp
ret
aaa
and
fcomip
fsubr
mov
bound
push
xchg
inc
inc
adc
dec
push
and
insb
mov
push
pop
test
lea
cmpsb
xor
stos
mov
add
or
inc
dec
arpl
icebp
jmp
in
es
jg
cltd
push
enterw
jmp
mov
dec
insl
ds
fnstenv
xchg
clc
adc
add
aam
or
or
pop
rcll
add
sub
outsb
dec
in
mov
adcb
jmp
lods
hlt
in
jecxz
out
mov
cmp
cmp
lods
movb
mulb
sub
aaa
ja
pop
repz
fucomp
cmp
sub
and
jno
xchg
dec
call
imul
sahf
or
push
test
pop
xor
movsl
and
fcomps
mov
or
out
mov
pop
mov
es
popf
cmp
xchg
inc
xlat
inc
imul
les
add
dec
iret
dec
repz
xlat
loope
lea
mov
cmp
inc
fldenv
jge
nop
mov
fsubs
loope
push
dec
jmp
or
clc
pop
mov
pop
filds
daa
loopne
xlat
jbe
in
sti
scas
outsl
imul
xchg
pmaxsw
xor
sbb
bound
mov
jecxz
push
fisubs
je
xor
or
mov
movb
cmp
jae
leave
mov
movsl
dec
inc
dec
fistpl
pop
bound
dec
fiadds
jmp
jle
mov
xabort
inc
sub
push
leave
leave
mov
sbb
fdecstp
xor
mov
pop
cld
int
dec
test
or
punpcklwd
pop
sbb
ret
leave
jne
jne
xchg
lods
std
adc
fld
popf
pop
lahf
and
push
in
push
sti
inc
call
je
out
cmp
cmp
test
push
xor
popf
sbb
jae
inc
mov
xchg
add
jecxz
mov
mov
loope
sbb
jne
cld
pop
sbb
int
in
lods
stos
stos
dec
mov
push
pop
sbb
xor
fnstcw
fmull
lret
stos
ss
movsl
inc
fnsave
int3
std
js
inc
xorb
mov
pusha
outsl
mov
iret
out
notl
sub
or
mov
out
sub
jecxz
mov
push
loopne
dec
sbb
inc
notb
sbb
fstpl
repz
rol
lods
dec
in
repz
ja
or
sbb
int
or
sub
cmpsl
jp
outsl
cmp
cmp
loopne
inc
xchg
jo
call
mov
outsl
xor
aas
addl
scas
adc
cwtl
pop
mov
std
inc
loopne
adc
into
stc
fimull
and
decl
in
out
mov
dec
adc
xchg
aas
loop
push
mov
sub
sbbl
daa
pushf
xchg
aad
mov
xchg
add
xchg
enter
dec
dec
jae
aaa
mov
mov
fnsave
scas
scas
pop
lds
in
fcmovbe
xchg
sahf
imul
xchg
sbb
jnp
sub
add
cli
iret
inc
or
jl
in
es
jle
sbb
add
xor
out
xor
movsl
sub
aaa
pop
sub
nop
inc
mov
lea
sub
mov
outsb
sbb
pop
jmp
gs
outsl
xchg
sbb
sub
jae
pop
push
inc
mov
movsl
imul
lahf
and
les
mov
pop
ljmp
adc
lock
jecxz
notb
inc
pushf
inc
adc
mov
or
pop
sahf
push
and
arpl
test
xchg
or
add
hlt
testb
out
xchg
movsb
rorb
mov
inc
hlt
adc
jnp
cld
mov
je
lods
inc
or
pushf
cmp
jp
fisttps
dec
mov
bound
popa
lahf
jp
aam
or
hlt
xchg
dec
mov
add
mov
mov
jge
adc
mov
sub
mov
test
add
gs
int
repz
dec
inc
insl
cmp
xchg
pop
xlat
dec
xchg
into
loop
fwait
punpcklbw
push
mov
mov
stc
lds
xorl
stos
bound
popf
push
mov
adc
cmp
std
dec
icebp
rol
cmpl
aaa
mov
sbb
ss
pop
sarl
arpl
mov
mov
dec
adcl
cmp
pop
xchg
inc
js
add
sub
pop
out
pop
mov
ffree
xor
pusha
adc
or
xchg
add
repnz
insl
push
add
cld
pop
stos
add
insb
jne
add
mov
shr
or
pop
inc
xchg
cmpsl
jnp
inc
or
mov
mov
loope
pop
and
adc
out
lret
push
or
adc
fidivrs
je
xor
daa
jge
js
shrl
and
dec
sarl
mov
into
stos
mov
jge
cmc
xor
int
subb
push
mov
mov
adc
outsl
iret
cltd
pop
mov
jae
aaa
and
lcall
ret
xchg
jecxz
jnp
in
xchg
lcall
jmp
ljmp
rclb
pop
pop
aas
add
mov
jne
in
jge
lret
mov
aas
mov
loop
lcall
filds
mov
decb
popf
jmp
cmp
xor
pop
clc
xor
ror
imul
loop
xor
pop
lahf
adc
mov
into
iret
icebp
sahf
aas
repnz
f2xm1
pop
das
mov
or
andl
aas
fwait
sub
xlat
sub
add
xor
mov
or
xchg
clc
daa
jmp
in
jle
xor
sbb
or
mov
sbb
or
in
xchg
in
js
fstp
repnz
bound
dec
arpl
sti
xor
leave
push
jle
mov
and
jg
sub
cwtl
mov
mul
mov
les
in
lods
test
js
dec
aad
shll
and
idiv
mov
xchg
inc
lret
xchg
into
jno
fsts
mov
sbb
jg
mov
aam
xor
cmp
lds
xor
outsl
inc
jo
idiv
xchg
pop
sbb
sti
jo
dec
mov
cmpsl
dec
inc
and
mov
mov
push
mov
xlat
xchg
sbb
cmp
mov
mov
loopne
xor
fimull
dec
popa
rcr
jo
jl
jecxz
pop
outsb
mov
clc
inc
lods
rcr
mov
add
mov
push
pop
jge
dec
cli
loopne
or
sbb
test
test
xchg
mov
fs
stc
add
cmpsb
cmp
jle
and
dec
push
or
lds
cmp
xchg
pusha
fwait
lcall
push
test
stc
ja
les
sbb
lret
std
sub
pop
push
cs
push
in
loop
stc
xor
pushf
and
jo
xlat
or
dec
adc
xor
aaa
cmp
push
push
xor
and
jg
push
enter
sbb
ret
jmp
repz
pop
adc
sbb
hlt
cltd
aas
jo
cmp
mov
jb
call
xchg
js
push
add
dec
addb
fadds
jmp
aam
outsb
js
mov
cmp
icebp
andb
dec
int3
ret
inc
std
stc
gs
jl
and
xchg
mull
inc
shr
test
test
fsubl
cmp
out
js
push
dec
sub
or
sub
mov
add
ror
cmp
xor
dec
enter
cmp
cmp
and
push
or
notl
pop
or
dec
shl
aaa
imul
mov
imul
cmpsb
push
out
xor
dec
xchg
xor
movsl
outsl
mov
and
mov
mov
aam
or
mov
cmp
aas
sbb
insb
sti
out
xor
jns
push
insl
inc
leave
pop
mov
nop
fs
sub
dec
pop
outsl
fnsave
mov
lods
mov
inc
xor
testb
aam
fildll
ja
cli
stc
sbb
xchg
in
push
inc
imul
pop
add
mov
fistps
out
lods
and
xchg
or
jp
mov
pop
pushf
decb
js
mov
jecxz
pop
icebp
cmp
aaa
sbb
lcall
push
mov
push
jno
jno
loop
pop
cmpsl
pop
rcll
roll
in
idivb
push
pop
aam
insb
or
inc
or
mov
add
arpl
rorb
out
ja
sbb
mov
push
in
scas
xchg
iret
xor
and
mov
pop
mov
xchg
fcoms
cli
pop
out
aam
xchg
cmpb
mov
out
les
andb
sarb
loope
sahf
loope
fldcw
dec
sbb
out
pop
aad
les
cmp
push
dec
ljmp
xchg
repnz
sbb
mov
mov
decl
mov
and
mov
enter
sbb
add
imul
out
mov
and
inc
stc
test
jno
or
rcrl
iret
fadds
push
dec
insb
xlat
arpl
mov
out
cmp
jle
sti
push
aas
or
pop
mov
les
out
aaa
flds
adc
mov
adc
stc
mov
or
jl
pop
cmp
addl
sarb
fistps
sub
adc
pop
in
lock
cmp
loope
pushf
lds
loope
or
mov
xchg
cwtl
xor
icebp
ret
mov
push
shlb
jnp
popa
repnz
out
imul
scas
push
or
adc
out
mov
mov
mov
mov
push
jns
std
sub
imul
sbb
inc
and
push
stos
movb
push
mov
loop
cmpsl
mov
jle
jp
icebp
jnp
flds
cmpsb
xor
mov
mov
in
ja
inc
aad
or
xchg
jbe
push
lret
push
mov
xchg
enter
mov
dec
push
and
rcr
dec
loopne
jle
mov
stc
jb
popf
mov
mov
push
stc
ja
pop
mov
jp
ret
stos
enter
icebp
gs
push
addr16
lret
jp
jp
jnp
notl
dec
test
sub
sbb
out
lods
cmp
mov
jb
orl
outsb
cld
and
jnp
or
scas
cs
jle
ljmp
lret
nop
dec
cmp
in
arpl
inc
iret
stos
jecxz
or
clc
mov
xchg
imul
fldt
dec
push
sti
mov
mov
test
adc
sub
cmp
dec
cmp
pop
mov
popf
rorb
scas
cli
jne
or
push
in
or
mov
aaa
jo
mov
cmpsb
nop
jl
jb
xor
pop
pushf
sub
shrb
jbe
loopne
adc
mov
pop
call
leave
cmp
dec
pop
lods
jnp
or
mov
and
pop
idivb
sbb
push
mov
push
add
stos
rcrl
test
ret
push
mov
ret
in
andl
mov
cld
es
xor
mov
pop
aad
xchg
fiadds
xor
arpl
xor
lods
test
cmc
jnp
add
ret
jne
stc
shrb
dec
pop
rcrl
outsb
dec
mov
mov
inc
or
jp
dec
mov
push
mov
sub
loope
mov
movsl
push
loopne
push
dec
push
cwtl
testl
cld
stos
xchg
outsl
xchg
bound
add
mov
mov
dec
sbb
cmp
imul
outsl
pop
notl
pop
dec
out
jmp
ficoms
cmp
push
lds
dec
fs
cmpsb
enter
sbb
pop
repnz
lahf
ret
call
and
in
xchg
shlb
push
sbb
out
mov
mov
stos
push
xchg
xchg
sub
and
mov
sbb
mov
mov
lret
or
fsubrl
push
jmp
ds
xor
in
incb
int
in
sub
data16
js
ja
test
out
dec
push
mov
mov
fiadds
lret
lret
mov
push
mov
pop
pop
pop
xor
jnp
xchg
pop
sbb
movsb
adc
mov
xchg
sbb
mov
stos
js
ds
cs
mov
add
clc
or
inc
fimuls
xor
lods
inc
aad
push
arpl
sti
test
push
add
out
cltd
xor
mov
or
add
push
fcomps
aas
sub
shrb
xor
adc
movsl
adc
pop
sub
out
fcomps
xor
in
rclb
iret
in
add
dec
pop
fwait
and
hlt
mov
lds
pusha
iret
dec
dec
inc
and
xlat
pop
xchg
sbb
push
adc
dec
fsubl
inc
icebp
mov
adc
xchg
xor
fdivl
xchg
jbe
jno
cld
xchg
ds
cmc
sbb
push
add
adc
movsb
int
adc
hlt
jbe
push
icebp
pop
jo
out
xchg
mov
pushf
dec
add
daa
cmp
adc
mov
xchg
popf
loopne
push
js
jne
call
mov
xorb
aaa
popa
or
mov
shrb
fisubrl
jbe
fldl
out
arpl
xlat
leave
jge
and
add
xchg
dec
and
stc
pop
ss
jle
fsubl
xchg
out
js
fmull
jae
pop
sub
popf
inc
out
pop
sbb
ret
mov
aad
repnz
enter
popa
cwtl
aas
jb
stos
shrl
cld
cmp
fdivs
or
xor
sbb
rcll
inc
cmp
cmpsb
hlt
xchg
xor
jno
mov
mov
rcrb
mov
and
add
test
aas
jmp
mov
sbb
lock
data16
pop
sahf
fcmovne
push
decb
loope
mov
fsubrs
call
lods
iret
sti
push
pop
sub
pushf
pop
lret
and
xor
push
jne
and
js
enter
adc
ret
movsb
dec
pop
ds
gs
inc
imul
mov
cwtl
out
and
xchg
arpl
sub
mov
test
xor
push
or
lret
push
inc
aas
sbbl
add
mov
jne
idivl
xor
ja
or
js
addr16
cmp
push
ficoml
cltd
xor
cmp
outsl
pop
arpl
ret
das
pop
scas
mov
mov
adc
mov
mov
jb
out
mov
cmp
xlat
cmp
mov
mov
sbb
imul
add
cwtl
leave
out
dec
ficoml
das
inc
xorl
aam
xchg
xlat
lods
test
cld
hlt
aaa
cmpsb
xchg
fsubl
sub
mov
les
mov
gs
xor
lcall
lret
add
sbb
in
jp
insb
in
mov
les
scas
ds
cmp
cmp
adc
sub
push
test
bound
fimuls
dec
cmpsl
xor
and
jge
outsb
jle
fs
mov
sub
repz
cmp
or
cmp
mov
push
sbb
sbb
add
mov
mov
test
sbb
sbb
xchg
call
ret
mov
mov
mov
ja
ljmp
js
das
mov
mov
loopne
fadds
aam
call
cmp
fistpl
sbbb
sbb
testl
popf
sub
stc
fdivs
pop
push
sub
xchg
inc
sarb
pop
cmp
cmp
lods
jnp
push
idiv
and
and
js
inc
xchg
jb
aam
es
repz
movsl
movsl
mov
ror
cmp
push
pop
inc
pusha
stc
test
sbb
pop
loopne
xlat
sub
push
mov
imul
jmp
push
jl
xchg
mov
mov
push
push
mov
jle
pop
ds
cmp
adc
imul
jg
gs
outsb
cltd
sub
ret
add
sahf
repnz
mov
inc
outsb
pop
add
xlat
idivb
dec
add
xchg
into
and
jp
pop
mov
xchg
lret
pop
pop
in
lcall
into
aad
leave
xchg
std
sti
mov
cmp
jo
fwait
das
test
pop
dec
pop
xor
ret
mov
inc
mov
rorl
loop
mov
mov
dec
sub
push
mov
add
in
jb
pop
leave
movsl
stc
mov
aaa
test
or
lock
xchg
sti
inc
cmc
mov
test
arpl
adc
les
into
loopne
pop
adc
pusha
sub
pop
repnz
dec
xchg
xor
jl
fstps
fildl
cld
pop
arpl
inc
push
scas
push
dec
xor
fs
bound
insl
ds
lret
xchg
dec
cld
rol
lahf
xlat
pop
out
add
mov
ss
push
jne
repnz
add
inc
or
out
or
jmp
orl
cltd
pop
jge
push
lahf
xlat
addr16
mov
mov
dec
xor
lret
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
or
mov
push
push
mov
sbb
mov
and
mov
adc
mov
mov
and
andl
movl
sbb
movl
sbb
mov
mov
neg
sub
xor
add
mov
sub
add
mov
xor
xorl
sub
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
pushl
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
push
push
call
jmp
sub
mov
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
pushl
push
pushl
call
cmpl
jb
orl
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
subl
sub
sub
mov
or
orl
sbb
mov
and
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
xor
movl
lea
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
push
pushl
call
jmp
mov
mov
movl
cmpl
je
cmpl
jb
jmp
push
pushl
push
call
mov
dec
mov
jmp
lea
sub
mov
sbb
mov
mov
xor
mov
sbbl
xor
xorl
add
mov
mov
mov
mov
add
adc
push
mov
adc
mov
sbb
mov
mov
sub
mov
mov
xor
mov
addl
add
movl
cmp
movl
je
mov
jmp
movl
mov
cmp
movl
jne
push
movl
jmp
mov
movl
mov
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xor
add
add
andl
mov
orl
mov
adc
mov
xor
orl
add
movl
imul
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
xor
movl
add
cmp
notl
mov
movl
push
je
adc
mov
adcl
add
addl
mov
or
mov
xorl
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
sbb
push
add
mov
movl
cmpl
je
cmpl
jg
jmp
push
push
push
pushl
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
movl
push
inc
mov
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
sub
jmp
xor
test
or
loope
lds
je
ja
int
jb
pop
jb
test
push
cmp
sub
loope
cs
inc
adc
lret
outsb
ffree
cmp
dec
mov
mov
bound
cmp
das
incl
pop
dec
sbb
adc
mov
repnz
sub
cmp
in
lods
xchg
dec
mov
mov
aaa
sub
mov
xor
adc
loope
cmp
push
shrl
xor
inc
mov
pop
jno
mov
xorl
and
repz
aas
div
lcall
mulb
mul
pop
or
lods
cli
andl
push
pop
add
out
mov
loopne
lods
into
dec
or
mov
adc
sub
int
push
add
fcmove
add
push
sarl
push
cmp
ljmp
dec
gs
fcoml
mov
shr
insl
pop
addr16
int3
popa
mov
popf
mov
inc
sub
stos
cmp
repnz
xlat
pop
or
test
pop
xchg
adc
lods
push
and
cmp
sbb
dec
jo
and
xchg
int3
shrl
std
in
out
ljmp
clc
cmp
dec
test
mov
clc
in
mov
hlt
ds
and
movsb
ljmp
cmp
sub
push
ds
jmp
cli
fcoms
cli
out
mov
cld
sbb
adc
out
push
jl
pushf
cmp
je
pop
mov
mov
mov
cmpsb
mov
pop
lods
lret
jp
rolb
das
fs
jmp
push
int3
out
mul
dec
loope
leave
inc
int3
leave
arpl
aam
movsl
xor
fimull
mov
mov
sahf
jae
rclb
in
mov
or
sbbb
push
cmc
jns
roll
pop
push
mov
xor
push
adc
xchg
sahf
and
call
or
leave
pusha
dec
or
jle
sbb
sarb
pop
mov
sub
les
rolb
xchg
sub
lret
lahf
movaps
dec
push
divb
ja
std
xor
mov
push
pop
addl
jmp
inc
mov
jns
fstl
pop
mov
cmp
sbb
mov
xlat
shrb
cmp
nop
mov
into
outsl
sbb
xchg
inc
jo
push
sub
jae
inc
cli
pop
xor
mulb
mov
push
gs
mov
mov
lret
lods
or
loop
adc
scas
fidivrl
popa
adc
mov
popf
ds
xchg
pop
or
cld
jb
jo
aad
aas
jle
shl
shll
mov
call
loop
jno
ret
popf
inc
imul
push
push
call
push
inc
int
inc
lret
incl
roll
mov
sti
mov
pop
jecxz
mov
jle
pop
push
gs
enter
dec
push
pop
xchg
xchg
or
xor
ds
idivb
push
mov
push
mov
cmp
inc
scas
adc
xchg
push
fwait
adc
icebp
std
jecxz
jge
cmp
outsb
repz
dec
dec
sbb
sub
fidivrl
mov
cs
outsb
mov
sub
dec
adc
jo
add
lahf
inc
and
mov
in
dec
inc
stos
mov
pop
push
xchg
imul
outsl
sbb
insl
push
sbb
shlb
adc
ret
sub
mov
mov
cld
fdivl
mov
fiadds
lds
loop
mov
or
mov
pop
icebp
xchg
pop
fcmovnbe
and
js
jge
pop
or
std
loope,pn
nop
subb
dec
or
sbb
andb
jle
testb
mov
fwait
das
std
sub
push
cmp
or
mov
mov
icebp
jnp
repnz
stc
dec
int3
pop
orl
pusha
or
jbe
push
fildll
aam
push
aas
and
test
and
sub
test
ljmp
int3
add
dec
enter
pop
scas
xlat
inc
fmull
lcall
push
pop
mov
jo
jb
sbb
mov
out
mov
sti
jno
rolb
jmp
cltd
in
inc
jge
pop
xor
fnstenv
packuswb
pop
xor
cld
pushf
pop
push
push
in
add
ret
nop
sti
insb
push
outsl
push
cmp
les
rcrb
aas
jge
clc
nop
xchg
and
fs
sbb
push
inc
pushf
loope
shlb
stos
cmpb
mov
xor
dec
pop
lods
std
shr
xchg
bound
cmpsb
cwtl
push
push
cmpsl
xchg
lods
or
jg
lods
shr
jecxz
outsl
sub
xchg
int
or
ss
jmp
xor
loop
test
xor
stos
cs
xchg
pop
jg
push
inc
adc
mov
sbb
and
jge
ja
inc
add
daa
ja
pushf
sub
pop
int
popl
out
inc
adc
out
leave
fidivl
cli
outsb
xorl
jecxz
sub
mov
fdivl
push
popf
cwtl
sti
loop
mov
xor
fdiv
fs
fnsetpm(287
mov
in
jge
das
test
xor
rorw
ret
mov
mov
lods
enter
adc
out
cmp
ja
in
and
iret
jo
cmp
cmpsb
cmpsb
inc
mov
in
cmc
inc
push
mov
int
js
in
pop
shll
ficomps
pop
cmp
ljmp
ss
mov
push
cs
cwtl
jno
insl
adc
lock
arpl
test
mov
mov
push
idivl
sub
daa
rolb
movsb
sbb
push
outsb
inc
clc
rcr
sub
loop
pop
or
xchg
push
sbb
push
xchg
xlat
xor
aad
ds
inc
inc
fstl
in
adc
and
les
fisttpl
or
in
int3
adc
mov
fcomps
jmp
iret
cmp
sbb
jb
addr16
dec
add
lock
jle
pop
jp
fsubr
sarb
iret
aam
fwait
pop
xor
adc
jle
sbb
aas
jae
inc
inc
push
add
push
scas
lahf
mov
inc
push
ss
pop
jmp
push
std
dec
push
pop
shl
flds
insl
push
or
jge
sar
lcall
nop
mov
or
push
push
inc
outsb
add
pop
repz
mov
jo
mov
mov
mov
aas
test
adc
pusha
nop
dec
sub
add
fs
mov
dec
pop
popf
or
idivb
aas
sbb
cs
mov
test
test
dec
sub
loope
sbb
fildll
or
pop
mov
xchg
xor
rcrb
jmp
mov
pop
mov
mov
cmp
pop
cmp
push
mov
and
mov
or
mov
shr
dec
push
adc
arpl
adc
jge
cmp
ja
mov
fnsave
enter
stc
xchg
mov
fmull
dec
ss
push
push
cltd
call
jb
xor
jl
sti
cmp
je
xchg
fcomps
rcrl
loop
daa
lds
addb
loop
insb
cli
vunpcklps
in
add
xchg
arpl
pop
lods
pop
pusha
cwtl
mov
dec
fmuls
popa
push
mov
jle
xchg
mov
ds
lds
loopne
scas
cmpsb
xor
mov
out
shll
rolb
pop
sub
inc
inc
filds
stos
aaa
std
cltd
xor
loope
dec
sbb
cmp
loop
pushf
pop
xchg
lods
loop
mov
out
jbe
mov
xor
sub
mov
xchg
jle
push
sbb
shlb
and
xor
inc
adc
mov
sarb
xor
inc
cs
test
push
push
insl
push
mov
cs
dec
scas
mov
movsl
xchg
jae
fadd
jne
ds
sbbl
push
mov
cmp
jne
sub
jl
enter
mov
aad
sti
sbb
xchg
push
in
cmp
push
add
pushf
stos
inc
mov
sti
lahf
lcall
pop
roll
and
fsubrl
jp
add
dec
mov
or
mov
imul
in
mov
es
jns
ret
dec
addr16
add
adc
dec
fstpl
test
cmp
lock
sbb
dec
push
nop
jbe
bound
in
das
adc
xlat
mov
add
shlb
add
lods
mov
mov
mov
push
and
outsl
ds
jmp
sub
jl
mov
or
jl
or
sbb
and
shlb
cmpl
mov
cmpsb
adc
fisubs
cmp
iret
dec
fiaddl
mov
movsb
push
int3
pop
insl
andb
imul
pop
shll
mov
push
movsb
push
out
inc
inc
sbb
xchg
jne
jmp
and
cmp
mov
add
ss
addb
pop
jp
fnstsw
mov
jmp
lock
mov
fldt
aas
fidivl
fst
ja
cmp
bound
js
idivb
repz
and
pop
test
inc
sub
movsl
outsb
push
mov
mov
push
pop
or
test
shll
rcll
es
push
sub
popf
cli
add
add
xor
push
push
clc
arpl
rcll
dec
or
mov
test
mov
cli
test
or
lcall
les
int3
jns
inc
inc
add
loope
cld
sub
mov
aaa
shrl
pop
sbb
dec
jp
xlat
mov
rorl
popl
pop
cli
push
sub
movsb
mov
jae
jae
ret
jns
push
ret
in
imul
pop
movups
loope
aas
pop
mov
mov
dec
xchg
xchg
dec
cmp
mov
xchg
insb
or
loope
outsl
loopne
xchg
adc
add
mov
fistps
movsl
out
leave
sbb
sbb
and
add
loop
out
xchg
pop
pop
xor
mov
mov
popa
mov
xor
mov
call
mov
out
cmp
lods
sti
mov
jl
cmp
rorl
in
shr
std
ja
xchg
adc
lock
mov
pop
mov
xor
sti
inc
sub
and
push
dec
clc
aam
mov
imul
jle
dec
fstpt
test
lea
mov
sbb
fldcw
mov
call
nop
icebp
call
xor
mov
lret
test
sarl
xor
and
adc
ja
push
stc
xor
push
lds
dec
sti
flds
adc
shl
mov
add
jge
ds
dec
sub
cltd
bound
xchg
mov
mov
decb
sbb
xor
call
sbb
lea
pop
cmp
push
lahf
or
push
lods
jbe
pop
or
cmpb
mov
cmp
mov
push
cwtl
mov
and
add
daa
enter
ljmp
call
jmp
and
jbe
lahf
sbb
mov
arpl
push
enter
inc
push
sti
loop
sbb
mov
inc
xchg
std
test
sbb
mov
add
xor
jecxz
pop
leave
mov
into
mov
nop
roll
inc
and
adc
sahf
imul
repnz
sub
push
inc
push
jmp
mov
or
lcall
and
push
and
sub
sbb
jnp
xchg
je
mov
dec
mov
loopne
sarb
jne
xchg
xchg
adc
clc
push
ljmp
mov
sti
xchg
jl
push
and
add
xchg
adc
jg
loop
push
mov
int
jp
out
test
sbb
and
jnp
sbb
stos
cmpb
mov
pop
mov
jno
lds
mov
or
je
and
ds
bound
fucom
jno
dec
mov
xchg
stos
push
sbb
and
sahf
into
jl
push
insb
jo
sti
mov
adc
jnp
lahf
xor
mov
in
and
push
fimuls
push
pop
push
popa
push
push
xor
and
gs
lea
adc
test
mov
xchg
dec
out
das
xor
arpl
pop
cltd
sub
and
outsl
call
jg
mov
gs
cmove
push
and
aaa
adc
ret
sarl
movsb
mov
addr16
and
push
or
mov
mov
xchg
aam
iret
cmp
mov
xchg
clc
xor
test
jg
mov
push
mov
jbe
insl
bound
out
mov
and
mov
stos
popa
jle
pushf
and
test
push
add
pushf
xor
xchg
in
jb
enter
mov
jo
xchg
hlt
jae
scas
mov
sub
faddl
ja
sbb
es
xlat
cmpsl
shl
xchg
lahf
imul
stc
scas
stos
add
cmpsl
jne
sbb
fnstenv
or
pop
sbb
add
sub
or
push
cli
and
cmp
daa
sub
ljmp
leave
not
and
loope
aas
outsb
out
popa
sub
jbe
imul
pop
inc
movsl
rcrb
add
pusha
lods
adc
inc
fcomps
cmc
sub
push
sub
cmp
xchg
insl
out
and
push
out
adc
shrb
or
dec
mov
aaa
add
andl
ss
imul
outsl
test
popf
mov
mov
mov
gs
pop
pop
fs
mov
in
xchg
cmp
cmpb
loop
jns
jl
mov
lds
ljmp
dec
aas
das
test
fwait
out
loopne
aas
movsl
nop
mov
inc
lea
push
adc
mov
ret
mov
into
fstl
mov
mov
and
cli
sbb
xlat
stos
insb
aad
int3
xor
pusha
ds
xchg
or
and
cmp
or
add
js
pop
dec
adc
testb
sbb
cmc
or
lret
cmp
pop
jmp
outsl
sbb
dec
daa
adcl
ret
rcrb
test
mov
or
jno
cwtl
inc
loop
rcrb
leave
sahf
pop
inc
cmp
aad
xchg
ljmp
hlt
jb
dec
iretw
xor
mov
cmp
cmpb
jl
push
sub
jge,pn
shll
xchg
add
xchg
sub
inc
mov
and
cmp
ljmp
add
mov
mov
loop
gs
and
loope
je
xor
jno
xchg
cmc
movsl
outsl
mov
jnp
enter
cwtl
in
push
push
cltd
xor
xchg
pop
in
add
btc
mov
enter
movsl
pop
push
mov
ja
jp
mov
adc
insb
pushf
lret
pushf
sbb
mov
xlat
push
push
dec
andl
lods
xor
pop
push
cmc
adc
or
mov
nop
aaa
push
mov
mov
xchg
push
inc
iret
iret
push
mov
lahf
dec
inc
push
xor
pop
mov
cmp
roll
lret
divb
jnp
pop
mov
adcl
jns
rorl
lods
in
mov
fidivrl
dec
test
push
stos
loope
lcall
pop
sbb
sbb
in
jb
lret
out
in
jle
shrb
movb
lods
gs
push
push
bound
out
flds
lods
test
push
mov
inc
mov
xchg
jb
outsb
lahf
cmc
push
loopne
daa
cltd
push
fistpll
test
sub
dec
cmc
mov
xchg
push
icebp
stc
add
push
pop
imul
insl
xchg
fimuls
xchg
sub
sbb
add
ljmp
xor
pop
jne
pushf
cmp
mov
add
and
nop
fwait
fwait
jecxz
mov
data16
pushf
inc
std
xchg
adc
push
xor
inc
dec
or
cmp
mov
sbb
cs
sbb
aad
stos
fisttps
mov
dec
stos
add
dec
mov
aad
in
and
cs
mov
jge
scas
lret
inc
mov
or
sub
cld
out
or
mov
sarl
sub
mov
xor
outsl
sub
jmp
sub
pop
scas
and
orl
pop
inc
divb
cmp
mov
clc
push
pop
lea
sbb
push
xchg
fwait
jo
sbbb
popf
cmp
test
and
add
push
or
fists
shll
dec
pop
insb
xchg
or
cld
aam
mov
fidivrs
jg
add
jl
mov
addr16
inc
subl
pop
in
and
leave
cmpsb
and
rorl
fimull
or
hlt
xor
or
add
das
dec
decl
cmp
fwait
jl
dec
jg
lods
enter
xchg
sti
sar
rcl
mov
adc
push
xchg
dec
call
pop
lret
sub
add
mov
push
add
xor
sub
pop
inc
sbb
fmull
sbb
mov
js
outsl
xchg
add
rcll
xlat
push
aaa
jae
sbb
pop
aaa
add
or
push
mov
xchg
fistps
sahf
add
jecxz
mov
call
mov
mov
adc
pop
mov
push
add
inc
sub
fsubs
dec
sbb
xchg
xchg
lea
repnz
mov
jmp
out
aad
xchg
jmp
test
lods
loopne
and
push
insb
add
mov
cld
mov
pop
imul
aam
into
mov
into
mov
lock
sub
adcl
rcrl
push
mov
mov
shl
into
pop
jnp
movsb
mov
sub
xor
cmp
mov
inc
hlt
mov
mov
int
out
or
notl
movsb
ja
outsb
or
int
ds
hlt
xchg
addr16
cld
enter
mov
loop
lds
cmp
in
call
adc
test
aas
lock
movsb
jmp
loop
addr16
fildl
cwtl
pop
cmp
and
in
sub
jne
jae
stc
dec
jns
pop
outsl
out
inc
sbb
fldcw
xchg
jecxz
add
test
leave
mov
mov
xlat
mov
cmpsl
shll
dec
cmp
push
or
push
xchg
pop
push
push
or
mov
jnp
sahf
scas
mov
inc
fcmovnbe
pop
cld
test
pop
je
cld
mov
adc
inc
dec
loopne
push
ljmp
xchg
sahf
xor
push
push
jecxz
and
jnp
lret
cmp
lock
mov
rclb
gs
inc
cmp
add
jge
jae
inc
inc
add
and
sahf
mov
sub
lahf
cld
dec
xchg
rorb
and
gs
arpl
mov
outsl
mov
inc
jecxz
inc
pop
sarb
xor
dec
add
cmp
add
movsl
and
icebp
clc
int
mov
jae
insl
xor
fs
xlat
lds
sbb
jno
shll
aad
push
outsb
cmp
lret
orl
loopne
xchg
inc
add
out
cld
ret
das
pop
test
or
cld
shll
ret
push
test
add
or
add
pushf
les
mov
xchg
rcll
push
mov
popf
stos
in
das
fidivl
cli
xchg
pop
icebp
fwait
repnz
mov
mov
gs
jae
sbb
push
inc
jne
cmp
mov
stc
mov
inc
aad
mov
sti
pop
int3
xchg
inc
jo
clc
pop
aad
cltd
fucomi
and
jne
xchg
cmp
movsb
aam
cmpsb
xchg
pop
loopne
mov
inc
js
adc
pushf
push
push
in
mov
ljmp
or
mov
into
jl
addr16
mov
insb
adc
aad
daa
shlb
cwtl
inc
mov
jo
das
inc
cmp
adc
push
roll
pop
pop
or
sub
fsubrs
cltd
add
hlt
cld
xchg
mov
cmp
dec
push
inc
in
add
lods
aas
pop
andl
sub
xor
addl
and
mov
pop
mov
leave
xchg
inc
adc
mov
push
xchg
sbb
lcall
cmp
mulb
out
fldcw
mov
lock
jmp
xchg
xchg
mov
iret
lahf
aam
sbb
jl
push
int
add
xchg
aam
mov
jno
rcrl
filds
adc
lret
pop
call
shl
or
enter
inc
js
out
cmpsl
fstps
sbb
jo
or
mov
pop
scas
push
int
xchg
sbb
imul
not
xor
mov
sbb
jmp
out
mov
and
dec
scas
xchg
sbb
lret
stos
mov
inc
mov
sbb
and
aam
push
loop
mov
inc
dec
sub
push
inc
add
xchg
movsb
mov
lahf
fistpl
xor
jae
jae
out
cmpsb
in
jnp
mov
cmpsb
cmpsb
push
jo
adc
adc
popf
xor
push
sti
xchg
dec
jge
std
jo
idivl
add
rol
push
or
fisttpl
jo
or
cli
aas
add
mov
xor
ret
jmp
inc
ljmp
lahf
xor
int
jge
in
mov
mov
dec
mov
std
and
xchg
hlt
xchg
pop
mov
mov
into
mov
add
test
je
push
and
and
je
aad
enter
scas
inc
push
pop
sub
or
hlt
outsb
push
test
mov
in
sub
movsb
xlat
leave
lods
bound
ffree
sbb
fldcw
ret
push
mov
out
stos
movsl
push
out
loope
sar
jecxz
xchg
and
gs
es
xor
xor
or
adc
jmp
inc
and
mov
pushf
dec
jnp
mov
inc
xchg
cmovbe
push
dec
mov
pop
jns
xorl
scas
clc
mov
mov
scas
sub
call
daa
gs
loope
repnz
xor
cmp
adc
pop
adc
dec
jp
repz
lcall
cmp
rorb
insl
mov
pop
cmp
mov
xchg
inc
icebp
pop
xchg
and
cmp
cmp
xchg
clc
scas
loope
add
jb
aad
mov
sub
xchg
sarl
pushf
push
jecxz
ds
push
out
test
sbb
nop
or
jmp
lods
mov
in
mov
cmpsl
sub
xor
insl
mov
cs
mov
xor
jecxz
movsb
daa
jns
in
cld
iret
fsubrp
aaa
xchg
and
cmpsb
and
lret
jb
xor
fists
dec
jnp
hlt
dec
xchg
mov
push
jbe
jge
je
cmp
xor
test
jg
push
in
xor
test
adc
outsl
push
inc
in
push
out
adc
and
aas
or
mov
imul
mov
dec
mov
ss
push
daa
lcall
lea
bound
mov
jne
pop
sub
cmp
add
rcl
mov
inc
popa
in
leave
inc
pop
fistl
imul
xchg
test
push
xchg
out
mov
nop
and
sbb
jae
sub
cltd
in
dec
fwait
test
pop
cs
popa
fcoml
int
test
fisubrl
pop
pushf
mov
inc
out
push
movl
pop
out
sbb
mov
inc
sbbl
push
dec
inc
mov
lods
movl
jns
into
in
iret
pop
movsb
xor
dec
sub
pop
ret
das
movsl
xor
mov
ss
xorb
jp
jns
inc
mov
jae
add
sahf
or
cwtd
mov
ret
pop
std
pop
iret
xor
in
mov
stos
dec
push
in
xchg
mov
out
mov
fcomps
dec
rolb
pop
xchg
int3
push
cmpsl
pop
push
ja
jge
mov
or
fsub
pop
xchg
fbld
xchg
dec
xchg
addr16
and
mov
scas
imul
push
faddl
in
push
mov
pop
popf
aas
pop
mov
loopne
jno
lret
lods
mov
mov
mov
xlat
mov
adc
cmp
dec
je
pop
cli
inc
sbb
or
aas
arpl
jge
xor
out
cmpsl
cmc
mov
loopne
cmp
sub
loopne
dec
adc
sub
adc
fldt
cmp
fldcw
adc
int
sub
leave
in
mov
mov
nop
sub
mov
adc
lahf
inc
scas
inc
and
jl
movsb
fbstp
mov
shrb
xor
push
adc
lods
mov
test
hlt
mov
mov
jnp
jae
addr16
in
xor
addb
pop
imul
outsb
lods
jnp
mov
not
mov
outsb
loopne
push
push
mov
icebp
lea
fwait
add
xchg
jb
loop
jo
or
scas
adc
mov
mov
aaa
rclb
sbb
cmpsl
sbb
loopne
inc
jge
xor
xorl
out
or
and
cmp
jno
mov
andb
jae
jbe
fwait
jo
pusha
sbb
sarl
pop
out
sub
jae
xor
cmp
imul
jno
fiaddl
bound
jbe
popf
and
add
test
into
or
pop
insb
adc
dec
mov
xor
cmpsl
xor
xlat
ljmp
mov
lods
test
stos
sub
std
js
les
xor
mov
and
dec
scas
add
stc
push
int
sub
repz
rorl
push
dec
pop
fsubl
into
jle
push
fwait
in
or
cmpsb
mov
jnp
vaddsd
ret
imul
and
jl
nop
dec
pop
shr
mov
pop
daa
subl
sub
test
fnsave
hlt
rorb
adc
mov
sub
xor
inc
pop
inc
inc
mov
imul
shrb
int3
movsb
and
rcrb
push
inc
shrl
xchg
add
insb
aam
push
xlat
jecxz
mov
pop
dec
mov
push
inc
mov
jp
out
xor
xor
mov
fs
loope
adc
lahf
enter
icebp
rcll
iret
imul
mov
out
sahf
add
mov
or
pushf
and
insl
mov
loop
push
jl
mov
push
mov
pushf
sub
and
xchg
fstpl
push
pop
test
shrb
lea
loopne
push
jns
pop
jnp
das
iret
push
arpl
cs
push
or
mov
fcoml
daa
add
dec
add
pop
xchg
and
idiv
daa
mov
stos
out
xchg
adc
arpl
push
loop
or
addb
lahf
stc
jb
lea
and
cli
inc
inc
mov
cmc
mov
mov
jae
adcb
mov
cmpsb
push
push
shrl
imul
mov
test
mov
dec
cmp
hlt
loope
xor
dec
and
sbb
icebp
sbb
les
cmpsl
sbb
ss
pop
insl
xchg
fs
das
scas
flds
and
dec
add
ret
pop
pop
or
lock
fwait
adc
stos
or
sub
sub
lods
rclb
fmull
arpl
into
cwtl
jmp
lret
mov
sbb
sbb
and
aas
cwtl
je
popa
divb
scas
nop
push
dec
lods
cmc
sahf
push
mov
out
ljmp
jo
bswap
cmpsl
adc
hlt
rcrl
sub
das
inc
loop
loope
insl
ljmp
or
mov
adc
cmp
fwait
sbb
dec
jb
addr16
call
mulb
xor
nop
xlat
test
dec
cltd
pop
paddusw
daa
pop
sbb
pminub
push
int3
in
and
add
add
xorl
scas
fistps
cli
pop
out
in
mov
adc
mov
jb
shrl
pop
inc
mov
adc
andl
sbb
inc
mov
lds
xchg
stos
adc
imul
and
data16
aam
nop
sub
adc
push
nop
gs
test
sub
cmp
sbb
xchg
jae
dec
imul
test
stos
sbb
add
es
jno
adc
mov
std
daa
sub
or
xchg
ret
out
inc
jecxz
mov
jg
jo
mov
pop
lock
hlt
sahf
lea
mov
in
push
xchg
lret
sub
xchg
lcall
jb
push
insl
inc
sbb
movsl
arpl
xor
movsl
push
mov
add
pushf
dec
cmp
arpl
pop
ret
call
push
repz
pop
mov
inc
imul
lock
adc
and
icebp
fstps
shrb
push
add
fs
rorb
inc
jle
stos
jl
js
push
adc
loope
add
lock
hlt
sbb
jle
mov
call
mov
cltd
ljmp
lahf
jns
clc
xor
and
cmpsl
mov
pop
mov
aaa
sarb
xor
xchg
stc
or
test
aam
mov
or
cmc
test
add
sub
adc
mov
xchg
mov
clc
ret
sahf
and
scas
fs
push
aas
xor
cmp
jo
push
daa
fucomp
mov
inc
fisubs
std
sbb
test
daa
dec
pop
sub
push
cmp
aaa
push
and
sub
dec
mov
mov
or
cld
inc
mov
cmp
inc
jg
test
push
push
aad
pusha
xlat
sti
int
icebp
jne
pop
outsb
jo
mov
jge
dec
jl
add
adc
mov
imul
sti
xchg
xchg
je
push
mov
cmp
ds
push
pushf
fstp
xor
ja
adc
js
dec
pop
ss
mov
mov
outsb
lret
repz
and
outsl
sub
out
fs
pop
cmpsl
cli
fidivrs
cwtl
pop
push
fnsave
mov
xchg
mov
mov
sub
int
push
inc
and
dec
mov
sbb
cmc
jp
or
test
cmpsl
enter
insl
sub
into
mov
mov
fiaddl
fs
nop
pop
adc
lret
jno
xlat
imul
icebp
inc
cmpsl
xchg
fildl
ret
xchg
lea
pop
mov
mov
dec
pop
pop
movzwl
cmc
gs
mov
dec
nop
cmpsl
jnp
and
or
orl
push
adc
les
orl
cs
sub
ret
fldcw
into
jmp
mov
add
dec
pop
es
subl
xor
fisttpl
outsb
inc
jnp
pop
pushf
ja
jo
outsl
pusha
push
dec
popf
push
flds
push
mov
cs
xor
subl
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sub
mov
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
xor
subl
add
adcl
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
mov
adcl
xor
mov
add
inc
movzwl
mov
xor
movb
lea
or
mov
sbb
mov
mov
addl
xor
orl
sub
orl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
push
movl
xor
mov
movzwl
sbb
push
adcl
mov
adcl
xor
mov
push
add
movl
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
jb
mov
movl
xor
sbbl
jmp
and
mov
fwait
sbb
neg
inc
jecxz
jb
rcrb
jb
xor
out
popf
dec
mov
inc
out
outsl
ss
stos
push
inc
inc
sbb
push
mov
incb
xlat
stc
lea
mov
inc
aaa
pop
and
jle
or
movsl
xchg
repnz
inc
loop
mov
pop
mov
xor
and
stos
sbb
push
pop
sub
dec
dec
faddl
subb
les
xor
xchg
sbb
adc
pop
ja
jno
sbb
pusha
pushl
rcpps
dec
out
xor
dec
mov
gs
and
cmp
ds
fwait
in
inc
sti
lcall
roll
mov
xlat
adc
inc
xchg
bound
mov
xor
fistl
cli
cmp
jmp
sub
sub
mov
cmpsl
sbbb
jge
dec
outsb
frstor
subb
subl
mov
movsl
and
adc
and
repz
or
cmp
and
les
scas
test
outsl
or
outsb
jmp
lret
popf
mov
jne
xor
push
push
scas
xor
push
or
xchg
inc
sub
daa
xor
stos
test
dec
mov
or
movsb
test
mov
out
mov
out
pop
sarb
nop
xor
push
stos
sti
dec
cmp
dec
lock
sahf
outsb
dec
aas
std
dec
scas
nop
xchg
jg
adc
ror
jge
nop
fs
jl
int3
jmp
jg
hlt
push
imulb
adc
sub
stos
lcall
inc
imul
sub
push
mov
clc
aam
dec
xchg
in
repz
add
in
ret
adcl
mov
jmp
fcompl
push
adc
mov
aas
sub
and
pop
sahf
nop
fmull
cld
push
adc
idivb
test
popf
shlb
or
stc
gs
roll
lds
aas
add
jge
loopne
repnz
ficoml
push
sarb
dec
inc
in
addr16
subl
imul
mov
ss
pushf
jno
dec
pop
imul
out
push
icebp
or
jbe
pop
mov
lret
divb
jne
pop
out
mov
loope
pop
movsb
inc
out
fcomps
xor
sbb
and
jns
push
xchg
lods
fldl
cwtl
sbbl
ljmp
mov
mov
inc
ret
sub
push
mov
mov
adc
stos
xchg
cld
sub
or
mov
mov
popf
out
and
pop
pop
mov
pop
or
xchg
push
mov
outsb
push
hlt
jns
jl
ss
jo
int
lds
sahf
lods
shrb
dec
fidivl
rcr
imul
jbe
lock
dec
outsl
lds
iret
js
mov
push
xchg
hlt
mov
mov
dec
sbb
xor
mov
popf
cmp
jno
gs
inc
out
addl
fidivs
pop
pop
jp
xchg
sub
mov
outsl
xor
mov
sbb
mov
dec
ds
jo
punpckldq
ftst
popl
movsb
pop
loope
out
outsl
xchg
push
push
mov
cmpsb
xchg
imul
cli
pushf
cltd
sbbb
pop
pop
push
pop
jne
cmp
out
jnp
cmp
xchg
mov
mov
push
jb
push
and
xchg
adcb
add
adc
lcall
cmpsb
xor
js
inc
scas
repnz
cmpsb
movsb
adc
mov
sti
es
aam
lock
sub
mov
xchg
cmpsl
fsqrt
pop
jns
lea
or
xchg
repnz
mov
push
adc
xchg
mov
in
jecxz
iret
xor
enter
or
mov
out
rorb
mov
cld
or
fstp
push
in
pop
fwait
lods
sbb
pusha
jbe
push
sub
mov
pop
mov
pop
mov
pop
sub
xor
orb
pop
lock
adc
pop
add
in
dec
sub
push
pushf
inc
dec
pusha
xchg
xchg
xchg
addr16
add
je
nop
xchg
mov
xchg
adc
mov
lea
in
or
addr16
jno
mov
data16
sub
mov
popa
or
stos
fstpt
adc
in
out
push
and
xchg
cmp
cwtl
push
inc
in
sbb
pop
fwait
mov
jae
pop
out
cmc
mov
cmp
cwtl
and
mov
movsb
xor
movsb
sub
cwtl
scas
jno
push
mov
adc
xchg
sbb
mov
jg
mov
mov
cmp
aam
xchg
xchg
fpatan
movsb
or
or
subb
movsl
mov
push
push
push
jp
lahf
add
cmp
int3
outsl
jmp
out
lods
inc
mov
mov
xor
imull
sub
sahf
add
shrl
movsb
xlat
cmp
fdiv
leave
xchg
xor
and
dec
aas
aam
pop
insl
adc
pop
cmpsl
sub
les
cmp
aam
sub
movsb
je
lock
out
je
or
stos
mov
fistpl
fnclex
and
or
insb
sbb
xchg
pop
add
jns
pop
xchg
test
in
adc
jp
roll
xor
sbbl
xor
pop
adcl
dec
pop
jae
test
dec
xchg
adc
movsb
lds
in
add
add
xchg
inc
loope
scas
arpl
push
divl
jae
popa
jle
xchg
dec
clc
push
pop
jne
aad
mov
in
fdiv
xor
out
loope
xchg
or
les
or
sub
lret
push
imul
mov
clc
outsb
mov
cmp
pop
adc
and
jnp
sbb
push
pop
add
cmpsb
jge
clc
ret
add
jmp
xchg
int
jae
insb
ret
aam
out
lret
adc
jbe
fcmovu
inc
jno
ret
aam
fcoml
inc
aam
shll
dec
nop
pop
push
adc
xor
hlt
outsb
ss
cmp
inc
mov
jp
cmp
sbb
mov
jp
adc
push
sbb
jne
lock
and
pop
cwtl
jno
xor
sub
pop
sbb
sbb
cmp
sbb
test
jb
xchg
lcall
jne
das
in
push
mov
rcrb
orb
sub
setns
pop
filds
in
cmpsb
loop
imulw
mov
addr16
and
jl
or
pop
arpl
loopne
inc
or
push
jo
nop
gs
in
mov
popf
call
je
icebp
loope
or
inc
push
mov
dec
aad
push
lret
sbb
repz
stos
dec
push
xchg
ret
cmp
pop
xchg
daa
add
mov
or
and
test
dec
mov
fs
out
scas
hlt
lods
mov
or
pusha
dec
gs
bound
mov
rcr
pop
cmp
imul
out
push
das
rorb
sarb
mov
jecxz
push
ffreep
jb
fnstcw
and
shl
stos
jge
mov
enter
cmpsl
fldt
sub
mov
fs
pop
jl
sbb
cltd
adc
loope
jnp
insb
repnz
insl
fcompl
ja
adc
shlb
jb
dec
and
inc
or
fistl
inc
inc
mov
xor
mov
jle
aam
adc
jb
xchg
lds
push
xor
aas
cli
adc
fimull
popa
dec
xchg
cmc
lahf
or
dec
cltd
loope
xchg
outsb
sbb
out
int
stos
xlat
movsl
ficompl
in
nop
fcom
mov
mov
jg
les
sbb
inc
ljmp
mov
cwtl
data16
sbb
bound
pop
pop
mov
les
ret
jecxz
cmp
or
or
pop
ljmp
cmp
negl
sub
repz
pop
testl
pop
jae
mov
pop
dec
sub
outsb
push
pop
or
push
movsl
or
imul
sbb
movsl
adcb
dec
mov
mov
add
cs
lret
mov
dec
pop
clc
mov
xor
cmpsb
push
mov
mov
xchg
mov
loop
lea
pop
jbe
clc
push
inc
idivb
lahf
scas
adcl
add
push
les
jbe
dec
jmp
bound
sub
mov
out
jnp
push
adc
pop
add
sbb
xor
int
js
sub
push
in
int
jnp
cmp
inc
repz
rorb
mov
stc
sub
push
mov
fsubrs
mov
into
repnz
lahf
nop
mov
cmp
sbb
pop
xchg
sub
enter
sub
or
aaa
clc
xchg
scas
inc
das
jl
orb
dec
pusha
mov
xor
movsb
mov
icebp
lret
xchg
incb
stos
fwait
jp
xchg
iret
pop
out
inc
jo
xchg
cwtl
dec
sti
jmp
and
xchg
cmc
xchg
xchg
pop
out
ret
lcall
leave
inc
in
ret
xchg
xchg
mov
arpl
jle
jge
in
adc
add
iret
or
mov
fstpt
push
jns
fildll
out
imul
out
js
test
lock
cwtl
adc
stos
sbb
pop
sahf
js
pop
adc
mov
daa
fnstenv
psubb
mov
nop
hlt
je
lods
insb
cltd
sub
pop
add
sbb
add
ljmp
aad
cld
les
jns
roll
ss
xchg
repnz
xchg
call
test
xchg
inc
sar
and
fisubs
out
faddl
ss
mov
scas
push
xchg
in
mov
or
ficoml
iret
dec
mov
in
dec
loopne
adc
add
sbb
or
pop
ffree
call
pop
xchg
add
mov
clc
sbb
loop
shlb
jo
jns
push
or
push
sub
push
mov
xchg
negl
push
orb
lea
fs
and
cltd
dec
das
pop
pop
or
inc
out
and
lcall
out
ljmp
std
mov
sub
imul
dec
adc
adc
mov
or
jg
adc
add
lds
in
sub
outsl
or
in
lea
fadd
mov
jb
clc
shrb
pop
test
mov
xor
lahf
cs
xchg
jecxz
out
adcb
ss
pop
xor
sbb
xchg
stc
enter
movsl
outsb
scas
push
fidivrs
icebp
stos
cmpsl
and
pop
in
pop
jns
mov
repz
sarb
scas
mov
mov
into
hlt
shll
and
adc
xor
lret
inc
test
mov
stos
pop
fimuls
dec
insb
push
decb
shrb
ffreep
insl
and
or
xlat
sbb
xchg
int
cmp
pushl
dec
mov
in
dec
fidivrl
mov
mov
sar
in
jg
jp
cmp
push
jl
fnstenv
or
test
jns
cmp
sbb
data16
push
mov
in
push
jmp
cld
mov
je
orb
fdiv
int
pop
idivl
or
lds
cmpsl
fdivrl
jp
mov
push
repz
out
mov
fbstp
iret
testb
pusha
sbb
jecxz
movsb
stos
cs
out
jbe
cmp
loope
and
insb
jmp
aaa
insb
inc
std
out
dec
addr16
pop
xor
jg
aaa
test
test
sbb
and
push
lds
sub
cmp
and
adc
arpl
xor
imul
sbb
adc
add
adc
adc
inc
aam
mov
imul
loop
add
push
xchg
jbe
xor
adc
pop
subb
cmp
cmpsb
mov
jg
cmpsl
outsb
pop
lea
cmp
inc
push
xchg
loopne
aam
insb
ret
or
aam
push
pandn
pusha
push
cmp
int3
inc
cltd
inc
shrb
mov
mov
jno
loope
inc
rorl
mov
shlb
mov
leave
add
mov
fdivrl
cmpsb
mov
push
adc
out
and
or
cltd
xchg
in
cmp
jl
push
jne
inc
mov
movsb
ss
or
jb
es
and
subb
loope
lahf
xchg
aam
mov
shrb
and
rorl
push
pusha
ja
mov
mov
mov
jle
insb
es
cmp
stos
cmp
sbb
push
or
jae
mov
int
xor
and
sub
xchg
sbb
xlat
cmpl
jns
inc
insl
pop
pop
lret
fbld
gs
cmpl
lret
xlat
add
inc
jns
aad
ds
inc
imul
push
das
xchg
push
loope
mov
inc
test
pop
push
ljmp
data16
lea
scas
xchg
fsubrl
fmull
outsl
inc
jmp
fwait
ljmp
call
stos
data16
test
stos
iret
jg
fcmove
adc
pop
icebp
sub
adc
mov
jne
insl
gs
cwtl
pop
mov
push
cmp
dec
pop
mov
jmp
hlt
movsl
inc
fsubl
dec
andl
xchg
mov
jae
das
out
notb
xor
cmp
in
push
push
repnz
fwait
ret
sbb
lahf
lcall
test
pop
dec
push
jnp
dec
mov
mov
int
in
push
mov
lahf
jge
jno
adc
adcl
lds
add
stos
mov
pop
pop
lahf
fstl
cmpsl
sub
add
cmp
shll
bound
mulb
out
lret
arpl
mov
or
orl
stos
rol
dec
clc
add
cmpsb
jne,pn
jg,pn
aam
and
and
xor
adc
ds
dec
dec
inc
add
mov
jns
mov
pop
outsl
push
mov
cmp
mov
ror
out
and
shld
cmp
loope
jmp
adc
call
adc
arpl
mov
cltd
mov
out
sbb
or
test
and
fsub
sub
leave
dec
pop
imul
int3
loop
jg
push
cmpsl
and
int
jg,pt
sub
or
xchg
mov
and
loopne
enter
mov
push
ret
cwtl
push
jg
stos
stc
sbb
push
mov
out
push
in
adcb
pop
repnz
sbb
pop
in
fcoml
pop
and
daa
pop
push
test
repz
call
mov
xchg
fdivp
push
inc
sahf
dec
mov
mov
or
or
sub
pop
dec
movsl
in
imull
push
inc
pop
das
fiaddl
arpl
push
or
lods
jno
test
sbb
ljmp
push
push
inc
xchg
dec
loope
mov
sub
sub
dec
sub
fisttpll
and
sbb
and
pushf
stc
ljmp
leave
sub
addr16
test
cmovno
iret
outsb
popf
jge
fdivl
pop
xor
sti
lods
inc
xor
pop
pusha
mov
stos
mov
jmp
imul
jne
dec
xchg
sahf
cmpsl
fisubrl
or
mov
dec
test
in
add
jp
enter
ret
lahf
xor
jo
mov
pop
repz
fs
cmpsl
mov
xchg
and
hlt
mov
inc
mov
and
nop
dec
mov
scas
inc
js
xchg
xchg
sub
nop
call
fnstcw
sub
inc
adc
dec
push
lret
inc
pop
repz
adc
cld
add
ja
xlat
xor
fld
shll
add
aad
sub
in
xor
xor
mov
sbb
movsb
int
xor
dec
bndldx
jnp
xchg
popf
scas
xchg
jmp
in
dec
inc
fs
adc
insb
outsb
in
stos
push
adc
aad
loope
jne
pop
jg
and
shll
scas
cmc
xor
mov
lods
negl
add
jno
iret
inc
cmp
xchg
cs
stos
or
mull
out
iret
popa
xchg
push
and
sbb
arpl
jnp
xor
or
test
inc
ss
ss
fmull
xchg
lea
xchg
add
stos
sarl
cli
adc
lea
cmp
repnz
jo
inc
sti
daa
cwtl
and
adc
sbb
sub
loop
mov
cld
mov
xlat
inc
add
lods
div
fisttps
mov
sarb
mov
xchg
cmpb
and
pop
and
mov
xchg
nop
das
sub
jge
xlat
mov
mov
adc
push
mov
dec
movsb
mov
adc
or
cmpsb
inc
add
jg
push
mov
fwait
jnp
xor
popf
loope
cld
push
leave
mov
or
sbb
push
xchg
or
out
repz
and
mov
imul
mov
mov
arpl
push
mov
xlat
mov
les
fstpl
sahf
inc
mov
xor
and
mov
mov
outsb
mov
movsb
mov
ja
stc
mov
iret
cli
ret
xchg
in
fcos
sbb
adc
roll
sbb
fcmovnu
call
in
fnstsw
jmp
out
movl
push
xchg
mov
outsl
icebp
pop
mov
xchg
outsl
cmp
sub
fucompp
insl
lods
fwait
mov
xchg
inc
pusha
mov
test
jnp
pop
xor
test
shl
lods
push
xor
cmpsl
xchg
test
cmpsb
dec
mov
jg
cmpsl
sub
ds
mov
jns
adc
lock
cltd
outsl
aas
incb
xlat
and
xchg
xchg
cmp
aas
adc
or
xor
addr16
popf
scas
clc
cmp
mov
data16
cmp
mov
adc
mov
mov
cmp
push
mov
stos
xchg
push
mov
arpl
loop
push
hlt
jno
push
jo
jnp
jmp
xor
sub
jmp
daa
mov
sbb
out
lret
cmpsl
push
or
xchg
inc
add
add
dec
loopne
push
mov
jle
xchg
idiv
sbb
in
add
into
sub
cmp
lods
pop
dec
nop
enter
scas
sbbl
ss
xchg
cmpb
clc
pop
test
pop
mov
pop
lret
jg
push
pop
xchg
mov
pop
inc
xlat
mov
into
pop
pushf
addl
aas
aaa
ds
pushf
lcall
lahf
fwait
leave
xchg
inc
mov
jns
ret
ret
push
int
mov
mov
andl
adc
ret
xchg
xor
cmpsl
lods
pop
mov
mov
std
add
fsubrs
ret
insb
out
xchg
sbb
xchg
lret
iret
adcl
aaa
or
xchg
ret
nop
dec
mov
or
arpl
add
ja
jmp
sub
cmpsb
pop
pop
data16
adc
or
aad
sub
test
sbb
cmp
cmp
or
add
cmpsb
sbb
leave
gs
or
lods
xchg
cli
pushf
ds
adc
outsl
mov
mulb
insb
mov
pop
push
pop
test
pop
and
inc
movsl
scas
stos
mov
add
cmpsl
fnsave
out
push
dec
xchg
mov
es
ret
pushf
arpl
fcmovnbe
and
dec
dec
xchg
xchg
fbld
stos
jg
ds
insb
dec
cmpsb
std
cmp
add
mov
decb
lods
enter
jb
fs
cmpsb
int3
or
sub
loope
pop
dec
or
jp
popa
aaa
scas
sub
fsubr
cmpsl
sahf
test
sub
xchg
stos
test
sbb
out
popf
jnp
mov
test
pop
jecxz
pop
repz
lods
lods
insb
cs
fmull
xor
andb
mov
push
out
iret
mov
lret
adc
lret
mov
fildl
dec
rol
xchg
or
dec
push
lret
mov
dec
lret
stc
cmpl
push
push
xchg
mov
outsl
lods
push
dec
sbb
pop
cli
test
pop
cmp
and
dec
xchg
cmp
paddsw
rorb
pop
cmp
pop
jnp
push
jns
shll
pop
adc
dec
lret
ds
ret
stos
jb
and
icebp
pop
cmc
pop
stos
or
movsb
stos
pcmpgtd
xorb
lods
popf
aaa
mov
movsl
in
push
scas
test
bound
and
data16
and
out
insl
enter
into
mov
and
inc
push
imul
sub
jge
es
repnz
aad
push
mov
fmuls
mov
xchg
adc
fisttpll
cmc
loopne
mov
push
daa
movsb
add
sub
pop
sbb
int
outsb
jbe
mov
ret
jno
push
repnz
dec
dec
rcl
inc
mov
mov
sahf
or
scas
sub
mov
jbe
aaa
push
lock
das
nop
dec
adc
mov
pop
and
cwtl
out
sarb
ret
cvtps2pi
mull
push
xchg
es
shrd
fcmovb
pushl
and
fwait
dec
sbb
xchg
orl
inc
ljmp
or
sbb
ja
dec
cvtps2pi
ljmp
push
and
pop
repnz
push
cmp
bnd
push
mov
loope
sub
or
sbb
les
repnz
fstl
mov
lahf
cs
cmpb
lock
enter
add
int
jns
hlt
test
ja
or
mov
sub
xchg
add
inc
loopne
sub
jae
pop
or
add
jmp
std
push
mov
mov
fisttpl
cmp
xchg
cmpsb
mov
pop
xchg
addr16
scas
push
das
aas
int
int3
cmp
cmp
add
jge
hlt
out
std
fbstp
jecxz
loop
stos
cld
mov
lods
in
dec
and
and
pop
fnstsw
jns
adc
repnz
xchg
out
mov
xchg
mov
and
imul
outsl
or
cld
cmp
ljmp
sarl
push
hlt
mov
xchg
inc
push
scas
mov
xchg
pop
sarb
rol
xor
imul
cs
mov
int
lds
pushf
in
dec
add
push
sub
inc
sbb
nop
stos
outsb
lahf
and
or
mov
jae
iret
mov
mov
sbb
pop
rorb
les
sti
mov
sbb
pusha
aad
sub
xchg
sub
icebp
cld
out
insb
or
pop
push
lret
push
aam
scas
mov
leave
inc
ret
mull
dec
jbe
mov
sti
fistps
add
adc
data16
or
fistpll
mov
xchg
pop
lret
lea
or
in
jbe
les
and
movsl
inc
mov
out
das
xchg
data16
adc
dec
movsb
ljmp
xchg
outsb
pop
xor
cmp
xchg
lods
sub
bound
popf
dec
sbb
mov
inc
es
lret
xchg
into
or
out
lahf
movsb
mov
mov
test
push
jbe
sub
in
dec
js
sbb
bnd
pop
sub
ret
fnsave
sbb
inc
movsb
mov
mov
push
pop
aaa
dec
sub
sti
inc
aam
push
mov
mov
test
jbe
jmp
dec
pop
testb
jb
das
cwtl
in
pop
adc
pop
push
mov
sbb
mul
loop
or
or
cmc
sub
mov
lret
test
xchg
cmpsl
aad
cmpsb
mov
rol
scas
cmp
pop
xor
fabs
popf
test
rol
int3
mov
cli
orb
jmp
repz
imul
mov
data16
mov
gs
mov
mov
insl
push
pusha
popf
dec
call
adc
cwtl
add
rcll
scas
xlat
jb
stc
or
sub
lcall
sbb
xor
dec
scas
shll
mov
nop
mov
dec
lcall
fsubp
sarb
outsb
jmp
cli
xchg
push
sbb
leave
cmpsb
cmp
xor
sbb
mov
push
roll
mov
test
loope
inc
fnstenv
pushf
sti
out
push
imul
js
inc
cltd
stc
jno
mov
mov
andb
xchg
inc
cmpsb
sbb
lret
lahf
inc
ror
test
and
push
xor
add
xor
sbb
cmp
js
push
xchg
dec
stc
cmp
lret
es
xor
inc
pop
inc
call
orl
pusha
icebp
inc
dec
or
mov
and
aad
outsb
hlt
jg
inc
jbe
sub
or
adc
ljmp
in
add
mov
mov
les
mov
add
xchg
add
ljmp
call
xor
les
int
sbb
mov
mov
adc
ljmp
mov
cmpsb
repz
push
inc
add
int3
pop
jecxz
fsubrs
fnstsw
and
loopne
cmp
add
fs
push
sub
and
decl
les
jg
int3
sbb
push
test
push
int
xor
repnz
jbe
aas
adc
fsts
lods
dec
jl
clc
adc
ja
leave
inc
sub
lahf
data16
xchg
cltd
popa
push
mov
or
into
and
sub
pop
xor
pusha
test
inc
rorb
jne
hlt
dec
ja
adc
arpl
jbe
sub
inc
mov
push
fdivrp
rcrl
fstpt
mov
in
pop
push
les
sbb
xchg
les
imul
and
xor
xor
jne
aaa
icebp
pop
cmpl
dec
stos
into
add
push
sarb
xchg
fisubs
cmp
sbb
dec
and
cmp
mov
frstor
xlat
adc
push
xchg
cmp
pop
sbb
decl
push
add
repnz
or
xchg
add
std
leave
cmp
jo
fs
xor
or
out
lock
xor
lods
inc
add
lret
cmp
adc
sbb
or
in
rcrb
ret
int3
pusha
in
fld
add
cmpsl
outsl
pop
pop
jg
scas
add
int3
pop
icebp
push
pop
fcoml
inc
mov
mov
and
add
xchg
fstpt
aaa
test
mov
cmp
rorb
push
mov
icebp
xchg
aam
xchg
andl
add
push
dec
repz
fwait
pcmpeqb
xchg
sub
push
fimuls
push
pop
push
sub
and
insb
icebp
xchg
cld
and
cld
notb
gs
inc
pushf
cmpsl
js
ret
push
mov
mov
dec
sbb
dec
icebp
jne
mov
dec
mov
cmp
jbe
es
ljmp
pop
cld
repnz
xor
xchg
add
jae
fidivl
cmpsl
or
cmc
cltd
shl
sbb
movsl
adcl
xor
mov
call
pop
and
sti
mov
push
inc
subl
mov
pop
cs
mov
lods
imul
mov
arpl
sbb
or
or
jl
mov
leave
in
pop
fdivrl
pop
xchg
and
mov
neg
xor
rclb
fwait
stos
dec
add
mov
loop
mov
les
push
out
ss
xor
xchg
jb
mov
setg
mov
sbb
xchg
pop
fildl
std
cmp
subl
fcmovnu
mov
xchg
mov
mov
inc
inc
adc
cmp
or
enter
mov
sub
lock
rclb
cmp
aad
or
sub
and
fimull
xchg
shll
cli
sbb
cmp
enter
mov
cs
cltd
jbe
nop
gs
arpl
xor
pop
xchg
xlat
mov
std
xchg
or
xor
stc
lods
fcoml
lahf
adc
int3
mov
int3
out
repz
sbb
out
adc
movsl
inc
popa
mov
cwtl
mov
enter
mov
pop
shr
push
fucomi
in
ffreep
mov
dec
fs
mov
push
add
xchg
and
fmull
out
jmp
add
lret
mov
jnp
add
out
and
sub
iret
mov
lods
jo
cwtl
and
hlt
fwait
add
mov
jb
jg
mov
xchg
cmp
fsts
ret
pop
jle
outsl
mov
popl
xor
jae
xchg
sub
repz
cmp
sub
in
daa
imul
outsl
sti
mov
mov
ds
mov
push
daa
pop
mov
mov
jno
dec
movsl
dec
sbb
pop
stos
mov
cmp
inc
shr
scas
adc
xchg
add
inc
inc
pop
test
push
aad
xchg
mov
inc
ja
fldcw
sbb
in
cmc
pop
js
aaa
mov
icebp
jmp
pop
cmpsl
mov
inc
add
sbb
arpl
mov
sbb
je
inc
jne
mov
cmpsb
adc
dec
cmp
jb
test
dec
call
adc
xor
scas
leave
shr
bound
dec
or
sbb
out
cmp
add
jmp
cmpsb
jo
inc
js
jg
mov
push
insl
insb
and
push
pop
leave
lods
and
jmp
aad
out
mov
insb
pop
pop
adc
mov
leave
fadds
pop
mov
imul
sbb
stc
adc
mov
jae
pop
mov
addb
mov
sbb
mov
out
cmp
add
mov
push
pushf
mov
fdivr
and
dec
and
mov
mov
lock
fldenv
xchg
mov
addr16
cmp
cltd
pushf
call
mov
out
rcrl
adc
incb
push
test
jae
aad
lds
adc
or
and
sub
push
fisubs
mov
cmp
aam
loopne
imul
call
nop
in
sti
sbb
dec
loopne
scas
push
das
sarb
push
aad
flds
shrb
xchg
leave
sti
push
cmp
cmp
and
stos
push
sbb
xor
insl
pop
fidivl
pop
jb
xor
ljmp
jecxz
cmp
in
push
enter
adc
rcr
or
movsb
aam
jo
inc
mov
int
aad
jle
mov
inc
enter
mov
adc
pop
mov
outsl
lods
dec
mov
adc
jge
popa
cs
test
notl
xchg
adc
lret
dec
xor
xlat
or
jge
fcom
push
ss
jg
pusha
xchg
or
cmp
xchg
mov
xchg
and
inc
adc
xor
je
movsb
mov
movb
jmp
mov
or
mov
mov
xor
mov
subl
xor
movzwl
or
mov
mov
xorl
add
addl
movzwl
mov
mov
movzwl
sbbl
xor
sbbl
add
mov
mov
mov
inc
mov
cmp
movl
jne
mov
mov
orl
xor
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
dec
mov
mov
xor
xor
sub
add
mov
mov
add
movl
movl
movl
xor
mov
xor
mov
mov
adcl
xor
add
mov
movl
mov
je
andl
mov
adc
mov
xor
orl
xor
adcl
sub
sbbl
sub
adc
xor
mov
mov
mov
subl
add
imul
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
call
jmp
mov
movzbl
sbb
mov
mov
andl
mov
inc
mov
cmpl
ja
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
add
or
dec
mov
mov
mov
add
notl
xor
mov
xor
add
xor
or
sub
imul
mov
mov
orl
add
and
adc
mov
mov
add
mov
addl
lea
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
subl
sub
add
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movzbl
or
mov
xor
orl
add
movl
jne
movl
jmp
andl
mov
inc
mov
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
movzbl
xor
sub
sbb
xor
neg
mov
mov
mov
sbb
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
mov
dec
mov
jmp
mov
xor
adcl
xor
sub
xorl
sub
adcl
xor
movl
mov
not
mov
mov
movl
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
pushl
push
pushl
call
jmp
mov
xorl
jmp
fnstsw
mov
aam
aas
push
mov
mov
rcrb
jb
insb
xor
or
or
jb
pushf
and
aam
outsl
adc
adc
sub
mov
inc
mov
pusha
int
pop
dec
out
out
ror
call
mov
mov
in
mov
repnz
sahf
ret
and
out
mov
sub
fidivs
jp
sbb
cmp
mov
stos
xchg
movsb
lds
cmpsl
stc
jg
cltd
out
pop
not
sub
ljmp
mov
in
inc
movsl
cmp
xchg
addl
sbb
or
movsl
dec
mov
dec
js
ds
scas
call
nop
add
iret
sub
lock
int
jnp
xlat
xor
into
dec
shrb
sbb
stos
or
mov
es
rcll
mov
dec
mov
push
cmp
cmpsb
inc
scas
mov
negl
push
scas
jecxz
sbb
iret
andl
adc
pop
xor
xor
dec
xor
aaa
imul
xchg
loop
fsub
sbb
imul
loope
jb
rclb
call
clc
dec
jmp
cli
out
adc
sub
and
adc
orb
nop
pusha
xor
imul
out
xchg
rolb
clc
push
ljmp
xor
enter
rclb
aad
mov
push
push
imul
mov
xorl
scas
lds
mov
cwtl
and
lahf
lods
addr16
int
jae
rcrb
je
sti
xor
xor
or
add
adc
pop
scas
inc
mov
adc
pop
insl
or
loopne
popa
fldt
dec
loopne
sub
jnp
aam
ret
lret
aam
mov
push
pop
or
dec
pop
bound
shll
fidivrl
sbb
mov
inc
xlat
dec
cmp
inc
sub
jp
or
and
push
das
outsb
aaa
inc
jp
push
sbb
add
lods
cli
xor
repz
fwait
out
jmp
and
jno
sbb
push
iret
mov
mov
fs
xor
divb
inc
mov
jge
xor
push
xor
fadd
lcall
jno
push
lods
pop
out
inc
push
or
add
xor
xor
sbb
adc
push
jno
jmp
pop
mov
mov
ret
scas
clc
ret
adc
inc
xchg
mov
cmc
arpl
inc
xchg
mov
outsb
dec
and
insb
adc
mov
mov
jmp
shlb
adc
dec
lds
mov
adc
xchg
inc
out
mov
mov
cmp
scas
je
push
cli
fucomi
ficomps
xor
in
cmpsl
outsl
push
fwait
xor
cmc
sub
lahf
xchg
ljmp
mov
repz
push
inc
rcl
pop
xchg
rorb
iret
pop
fldl
mov
or
push
or
aad
out
jnp
lcall
addr16
aad
cmp
arpl
sbb
sahf
cmp
dec
or
xchg
and
addr16
je
mov
or
bound
dec
push
adcb
call
or
ja
out
sub
cmp
add
mov
push
xchg
mov
cmp
dec
fnsave
test
cmp
pop
xchg
or
or
sbb
sbb
loop
nop
pop
xchg
call
into
pop
jp
push
into
clc
js
add
stc
xchg
or
pop
test
rcll
and
pop
addr16
fadds
lcall
stos
aas
xchg
push
sbb
or
repnz
pop
sub
leave
sbb
pusha
push
mov
pushf
gs
inc
jnp
aas
cld
shrb
sbb
xchg
mov
in
or
jle
jo
jo
add
bound
and
dec
bound
sbb
inc
inc
cs
daa
jl
adc
xchg
sub
es
xlat
xor
scas
popf
and
pop
mov
test
sub
gs
ds
pop
lock
int3
jb
fs
fdivrs
pushf
or
lea
push
pop
lea
xchg
push
add
incl
mov
push
rolb
sbb
lock
loop
fisubl
sub
adc
mov
sbb
scas
cltd
std
mov
aas
test
xor
fucomip
fisubrl
xchg
cmp
ss
scas
mov
shrb
fldl
inc
lock
fs
adc
sarb
jg
dec
das
and
push
lods
shrl
lock
pop
push
pushl
loop
popf
fidivl
or
sbb
mov
or
lcall
xor
stos
icebp
fstp
stos
adcl
stos
jne
push
mov
movsb
sbb
loop
pop
arpl
xor
movsl
inc
in
lret
fidivl
out
xor
push
xchg
sahf
inc
xor
divb
dec
inc
insl
xchg
out
lds
setns
sldt
shrl
cltd
sbb
adc
jb
out
jae
movsb
dec
out
add
fadds
pushf
jmp
out
out
jb
mov
shlb
mov
fmul
xor
xchg
addb
sarb
push
popf
fcmovnu
pop
cmp
cmpb
pop
cld
jns
mov
adc
mov
repz
inc
mov
test
js
xchg
sub
xor
in
xor
push
hlt
aaa
adc
jecxz
repnz
stc
pusha
clc
out
stos
fcmove
jne
in
in
cmp
cwtl
push
jae
or
popf
decb
shl
pop
inc
jae
lcall
xor
mov
lcall
test
add
push
dec
push
aad
adc
aad
sbb
decl
mov
xchg
mov
push
xorl
mov
mov
xchg
cmpl
inc
add
test
jmp
test
mov
or
sahf
lret
and
std
nop
test
cmp
pop
pop
dec
pop
sub
mov
jmp
mov
xchg
push
lret
call
test
lods
fidivl
call
or
out
jle
inc
jg
lds
enter
inc
push
addr16
mov
mov
stc
mov
pop
fcmovnb
test
jnp
into
or
dec
cltd
adc
mov
or
mov
das
mov
pop
sbb
inc
cmc
sbb
pop
push
mov
lods
mov
call
sahf
aam
mov
xchg
or
inc
lcall
enter
shlb
ficomps
test
xchg
push
aas
pushf
mov
adc
in
lea
es
adc
je
or
ret
repnz
repnz
pop
mov
push
pop
xor
dec
jg
push
notl
testl
call
dec
push
jne
push
xor
xor
push
lret
push
loope
out
pop
inc
cli
dec
jecxz
push
sub
pop
inc
jl
jns
arpl
cmp
dec
add
xor
repz
outsl
mov
clc
and
mov
fucomp
or
fistpl
jb
xorb
lock
addr16
add
rorl
push
jmp
stc
push
sbb
lcall
jl
mov
test
andl
inc
notb
cmp
in
dec
test
dec
and
and
das
and
lret
jl
push
add
cmp
les
adc
out
jp
inc
mov
xchg
out
iret
xchg
mov
bound
sbb
rol
push
fadds
mov
jmp
insl
xor
cld
sahf
mov
inc
cltd
data16
jno
ja
cmp
movsl
push
inc
rolb
cld
or
movb
sti
insl
addr16
push
and
aas
xlat
inc
test
pop
rclb
jmp
enter
mov
or
fucomi
or
aas
stos
lret
ret
add
iret
add
fs
sar
add
lods
ficompl
push
imul
push
leave
xlat
fwait
and
int3
xor
dec
add
sub
add
cmp
call
sbb
push
leave
mov
nop
xor
shrb
sbb
gs
insl
mov
jg
cmp
inc
sub
mov
aam
neg
or
mov
pop
daa
sbb
outsb
cmp
out
addr16
push
jg
cmpsb
shl
push
xor
mov
jl,pn
lahf
push
in
jb
ss
hlt
shll
adc
mov
mov
pop
iret
fwait
cmp
push
mov
data16
jbe
jbe
cltd
adc
cwtl
push
mov
out
int3
mov
movsl
daa
popf
aas
xchg
or
xor
fsts
aad
push
cmpsb
mov
mov
sbb
addr16
sbb
pop
sahf
clc
sahf
cmp
hlt
pop
push
dec
mov
push
pop
mov
and
inc
in
mov
mov
inc
jg
mov
mov
pop
fwait
lock
mov
or
mov
pop
sti
lret
sub
adc
cli
iret
and
xchg
mov
dec
out
loop
mov
test
lods
fldl
xchg
sub
popa
fsubr
stc
inc
dec
push
xor
repnz
jae
mov
pop
in
pshufw
sub
iret
ret
lods
sub
adc
inc
xorb
pop
mov
sti
push
dec
jbe
mov
aad
inc
pop
std
add
fldt
inc
xchg
jmp
xor
out
iret
cld
inc
icebp
rorb
in
inc
inc
testb
sar
movsb
cmp
mov
daa
addl
enter
add
fstpt
repz
and
adcb
cmp
push
xchg
sub
push
mov
cmp
sub
jle
rorl
sbb
sbbl
jns
mov
xchg
jno
fimuls
dec
mov
sub
call
push
xchg
sub
add
sub
mov
mov
gs
in
or
jmp
dec
adc
xchg
cmovae
push
ja
mov
pop
dec
xchg
sub
test
mov
xchg
push
mov
cwtl
push
add
int
mov
xchg
jge
xor
xchg
lods
std
mov
add
add
lret
popa
in
sahf
andl
add
xor
mov
jnp
push
hlt
inc
inc
lret
sbb
outsb
jno
pop
sub
pop
add
add
sub
push
pusha
adc
in
push
adc
add
shll
aas
lock
std
icebp
push
lods
test
adc
fmul
cli
movsl
out
les
imul
push
jno
sub
clc
xor
into
push
jae
jl
movsl
or
rolb
cmp
shll
mov
mov
push
pop
xchg
sub
out
dec
xor
mov
dec
in
or
shrl
mov
aaa
adc
push
inc
add
gs
lock
xlat
jnp
sti
fildll
mov
jns
or
out
lock
out
outsl
sub
mov
fnstcw
inc
dec
adc
sub
repnz
jmp
in
sarb
xchg
lret
fcompl
stos
or
sbb
push
aad
add
clc
cmp
movsl
in
bound
aad
enter
adc
mov
out
sbb
out
cld
cltd
scas
shlb
xchg
dec
pop
push
lods
mov
inc
jne
dec
adc
push
mov
test
scas
or
mov
inc
mov
xor
dec
and
mov
add
push
mov
clc
lods
sbb
jge
popf
mov
adc
mov
jae
or
lock
push
adc
mov
cmp
xor
jb
lret
or
or
pop
sub
push
sbb
push
sbb
fimuls
das
ret
out
jbe
fdivrs
js
pop
cmp
sbb
fwait
test
inc
mov
jmp
in
sub
cmp
hlt
and
divb
loope
inc
fmull
repnz
xor
sbb
dec
cmp
sub
add
mov
stos
push
in
fnstenv
sti
int3
aaa
sbbl
mov
ljmp
sbbl
sbb
inc
addr16
pop
push
and
jno
mov
push
xchg
cmp
rorb
mov
fwait
ljmp
rclb
sub
xor
xchg
xchg
sub
sub
sbb
mov
pop
cs
lock
fimull
mov
mov
in
das
nop
adc
inc
sahf
sbb
mov
jne
mov
iret
scas
pop
ss
fwait
das
outsb
mov
jns
push
aam
adc
subl
jae
call
cmpsl
jae
cmp
dec
jae
lock
jnp
lds
add
cli
inc
das
sub
dec
ja
mov
data16
xchg
add
aas
hlt
aam
outsb
inc
sbb
mov
or
adc
jge
and
push
sbb
ret
out
out
adc
xlat
xor
cmp
sub
push
popa
or
add
popf
sub
pop
lds
lods
add
lcall
das
into
pop
push
jmp
or
lods
repz
jns
pop
rcl
lock
sub
je
lahf
xor
into
pop
cwtl
sbbb
shll
jp
jmp
mov
sbb
or
call
mov
daa
je
repnz
jae
out
jp
out
fimuls
mov
pop
adc
sahf
mov
pop
fisttpll
jmp
mov
lret
bound
adc
mov
jp
movsl
gs
push
or
cmp
jns
cmp
push
hlt
mov
iret
adcb
into
fld
data16
mov
sahf
and
jl
jg
es
lret
cmpsl
daa
in
push
add
cmp
fiadds
pop
int3
push
iret
jmp
lahf
or
jle
ds
jge
push
xor
into
pop
jmp
cltd
stc
cmpsl
mov
pushf
pop
insb
pop
movsl
std
push
add
jmp
ret
ljmp
outsb
mov
adc
std
inc
movsb
add
fs
jl
pop
adc
dec
test
dec
xor
daa
outsl
adc
add
xor
jno
movsb
andl
mov
stos
cmc
clc
dec
fs
push
jmp
and
add
fcoml
adc
loopne
xchg
insb
inc
ja
ret
dec
pop
dec
in
into
and
push
loop
jo
adc
movsl
xor
aam
pop
lret
sbb
mov
out
push
popl
lret
xlat
negl
or
rcll
and
test
or
and
mov
enter
inc
mov
jne
ja
inc
jnp
jnp
xor
mov
scas
mov
into
addb
push
push
stc
push
adc
mov
jmp
je
scas
push
outsb
jl
test
xchg
add
inc
ljmp
lock
addb
pop
lret
aas
mov
sbb
cmpsb
or
fstps
sarb
push
xchg
clc
cmpsb
push
mov
sbb
sbb
arpl
stos
ficoml
jnp
dec
loope
ljmp
push
shl
pop
outsb
cmp
lahf
int3
mov
add
scas
jle
push
add
mov
lret
test
xchg
out
scas
push
jno
inc
cmp
sub
sub
adc
leave
xorb
push
outsb
xor
adc
push
jmp
add
daa
pop
dec
or
pop
stos
sahf
leave
and
or
pop
jno
mov
scas
cmp
mov
pop
cmp
adc
jnp
sub
mov
or
push
rcrl
mov
pop
or
jno
inc
cmpsl
sahf
test
and
push
adc
frstor
jb
imul
ret
or
das
mov
or
ret
jo
mov
daa
xor
pop
fnstenv
and
cmp
scas
iret
outsb
push
jl
sti
cmp
sub
push
mov
jge
mov
xor
dec
es
inc
aaa
es
dec
sarb
scas
es
call
test
xchg
cmp
aaa
dec
adc
in
orl
jmp
repz
ja
ret
inc
or
inc
xchg
push
and
hlt
scas
pop
pop
into
push
into
and
mov
in
testb
imul
ja
movl
fstpt
imul
sahf
inc
xor
ret
sub
stos
pop
insb
push
cli
adc
pop
xchg
push
fstps
or
icebp
daa
shlb
mov
push
mov
stos
stos
test
movsl
sbb
push
in
nop
and
jne
addr16
test
xchg
add
loopne
call
shll
and
outsb
mov
mov
stos
and
test
jno
movsb
jge
sub
inc
mov
test
mov
lahf
xor
mov
mov
movsl
aas
push
pop
pop
ja
mov
mov
std
push
popf
jae
addr16
xor
shr
push
sub
xchg
jmp
pop
pop
repnz
test
outsb
xchg
in
lret
lea
sbbl
stc
fst
mov
xor
out
scas
xor
adc
adcb
ljmp
stos
insl
xchg
jl
pop
mov
mov
test
inc
cmp
fdivl
pop
inc
or
sbb
std
fstp
jbe
jb
outsl
jae
test
jp
ljmp
dec
in
pushf
pop
popa
clc
inc
pop
in
xor
lret
sbb
mov
add
aaa
mov
sub
mov
inc
imul
cmp
bound
hlt
adcl
data16
lea
aaa
aad
inc
adc
test
data16
pop
repz
push
test
push
shl
jmp
pushf
jmp
lock
negb
mov
mov
hlt
cmp
scas
push
js
or
xchg
and
push
xor
xchg
test
cmp
sbb
lahf
in
and
mov
shlb
jmp
mov
iret
out
notl
loopne
cmp
sub
bound
shrb
popa
lret
int
mov
sahf
or
loope
daa
mov
sbb
inc
add
fs
jmp
jecxz
push
jecxz
push
xor
jns
mov
dec
lcall
sbb
push
jbe
cmp
dec
clc
or
adc
cmc
dec
fs
addr16
sahf
inc
adc
in
icebp
sti
add
sub
mov
push
fistps
inc
mov
mov
jge
not
xchg
ret
inc
out
push
adc
lret
inc
pop
cmp
repnz
mov
jmp
adc
movsb
ret
push
mov
push
aaa
jno
push
test
sbb
mov
divl
je
inc
pop
dec
jge
movsl
fstps
pop
xchg
dec
add
push
jb
dec
subl
lods
cltd
add
mov
inc
outsl
stc
xor
test
fnstcw
xlat
outsl
les
pop
out
mov
test
movsl
cmpb
push
dec
pushf
cwtl
dec
mov
jecxz
mov
out
mov
xlat
dec
leave
inc
jp
sbb
or
outsb
fstp
pop
mov
aaa
jge
lock
and
mov
mov
test
aas
jmp
pop
fisubs
cmc
imul
cmp
lods
jb
pushf
xchg
mov
cmpb
mov
mov
pop
or
sbb
shlb
stc
scas
inc
cmp
std
daa
or
test
ja
mov
cwtl
clc
pusha
and
jge
lods
dec
cmp
inc
cwtl
outsb
cmpsl
lcall
push
andl
sbb
xor
mov
test
cmp
sahf
push
mov
pop
sbb
cmc
leave
lahf
and
shrb
mov
add
fsubs
jb
ds
test
js
or
loope
insl
dec
test
sarb
push
mov
or
push
jp
ficoms
sbb
clc
sarb
push
sbb
aad
push
xchg
sarb
lods
into
orl
stos
push
addl
mov
inc
adc
jb
inc
pop
frstor
xchg
repnz
dec
cld
xor
stc
movsl
pop
aad
insb
push
mov
mov
in
mov
pop
lret
repz
mov
je
jle
mov
jmp
push
sub
pushf
pusha
pop
push
negb
sbb
sbb
jns
add
jnp
loope
clc
aad
out
jno
add
mov
lds
jp
cmc
adc
mov
imul
icebp
out
mov
mov
mov
push
xorb
mov
pop
push
cmp
popf
jae
jl
xor
insb
push
cmp
rcr
or
loopne
pushf
repz
push
add
fs
or
cmpsl
xchg
lods
cltd
mov
inc
nop
push
test
in
push
xor
outsl
sbb
into
jb
leave
shll
mov
int3
sbb
mov
andb
aad
insb
push
add
pushf
dec
pushf
xchg
stos
clc
aad
int3
add
mov
sub
sbb
aas
xor
fsubrl
jne
add
rcrl
push
int3
xor
jmp
outsb
xor
loop
insl
test
push
or
inc
mov
push
sub
aas
int
int3
mov
adc
mov
ret
mov
sub
xchg
and
pop
xchg
pop
frstor
mov
adc
in
enter
test
fsubr
push
gs
push
cmp
stos
cmpsb
call
adc
jbe
push
jp
insl
pop
mov
idivb
int
lahf
mov
mov
mov
xchg
push
jo
roll
clc
cmp
mov
sub
popf
xchg
fstps
into
sub
int3
fdivl
shrl
xor
inc
dec
pushf
lcall
push
sbb
jge
and
fwait
mov
cmpsb
inc
lcall
push
dec
adc
adc
test
xchg
les
dec
mov
mov
jo
ret
mov
pop
int
test
or
dec
insb
outsl
icebp
je
lcall
ja
aad
push
lret
movsl
jmp
test
clc
push
sbb
call
inc
lods
movsb
fwait
jmp
dec
push
xchg
imul
iret
add
cltd
mov
pop
pop
js
push
fcmovnu
and
mov
inc
stos
insl
xchg
push
sti
xchg
xor
pop
repz
mov
test
xchg
inc
dec
andl
sub
repz
or
mov
xor
cmp
pop
dec
dec
cmp
stos
pop
clc
sahf
stos
and
sub
mov
in
je
and
rol
outsb
add
push
ret
lret
sbb
scas
ljmp
or
xchg
xorb
mov
or
mov
sub
sub
stos
dec
stos
lcall
pop
mov
cmpsl
jmp
test
xchg
jecxz
daa
adc
dec
mov
addb
inc
call
xlat
cmp
mov
std
cmp
push
and
and
mov
popa
hlt
mov
sahf
push
pop
xchg
sarl
cmc
mov
inc
xorl
in
sbb
je
jle
mov
jnp
movsl
push
dec
sbbl
leave
jge
cli
and
sbb
jo
outsb
xor
push
mov
push
mov
xor
push
adc
mov
jne
jns
dec
ss
jmp
das
xchg
add
fwait
add
fwait
mov
lock
sub
push
add
bound
and
ret
in
stos
je
add
xor
sub
rcrl
mov
jmp
dec
mov
pop
sbb
clc
sub
stos
xchg
popa
aaa
insl
jp
pop
data16
mov
pusha
int
mov
test
sub
sbb
inc
int3
jo
insb
or
insl
pop
inc
push
cld
je
cmp
xchg
popf
dec
mov
leave
les
pop
call
sti
mov
push
cltd
loopne
sbb
movsb
or
imul
fucomip
cmp
push
mov
clc
shll
mulb
xchg
sbb
xchg
in
hlt
jle
mov
jl
test
xor
lods
hlt
ficoms
inc
pop
jb
fsubrl
xor
sbb
enter
enter
lahf
jle
jmp
dec
sbb
push
push
in
adc
aad
std
cmp
fldenv
and
or
or
loope
jae
mov
scas
ret
push
into
sbb
test
pop
mov
jo
xchg
fsubrl
xchg
sahf
push
lods
jle
and
iret
fmul
movsb
gs
inc
popa
push
sbb
cmp
ljmp
popf
pop
ljmp
mov
push
aad
stos
arpl
addr16
mov
and
stos
pop
add
ret
inc
and
sbb
cmp
jmp
pushf
dec
sbb
clc
xor
jo
mov
xchg
xchg
add
out
lods
xor
outsb
lock
sub
mov
outsl
je
push
test
in
mov
xor
js
scas
loop
lcall
mov
andl
sbb
inc
push
mov
cltd
subb
stos
inc
lods
lahf
sub
xor
mov
lock
je
push
adc
add
sahf
jo
es
cwtl
xchg
jb
aaa
cs
negl
das
popa
and
xor
cmp
push
cmp
dec
xchg
xchg
adcb
out
test
lahf
out
cltd
xchg
xchg
js
dec
fcoml
fdivr
sub
ljmp
mov
cmp
dec
inc
inc
sub
lds
sbb
jge
popf
mov
lret
add
rcr
in
jge
and
mov
in
filds
push
fldcw
adc
aad
fs
mov
jle
mov
add
push
or
dec
mov
mov
inc
cwtl
mov
pop
leave
loopne
ljmp
inc
mov
mov
or
addl
cmp
cmp
loope,pn
mov
ds
mov
cmp
push
jbe
mov
pop
outsl
push
dec
shl
dec
popf
out
aas
lods
cmp
dec
push
in
xchg
ds
loopne
ljmp
push
sbb
xor
jmp
adc
out
ss
loop
cmc
decl
insl
mov
in
pop
xchg
test
cmp
dec
in
repz
cmpsb
es
or
or
mov
xor
xchg
or
jmp
sub
shrl
call
leave
daa
and
dec
inc
sub
sbb
mov
add
and
push
xchg
pop
pop
shll
push
sti
pop
or
loop
sbb
fwait
pop
push
ficompl
mov
push
sbb
sub
cld
sbb
push
je
sbb
ds
xchg
mov
jmp
sub
pop
push
clc
adc
arpl
and
pop
mulb
aad
out
aas
inc
pop
in
sbb
mov
rcrl
dec
mov
or
stos
or
mov
cwtl
mov
sub
lret
dec
nop
movsb
popa
icebp
fists
sub
popf
adc
or
xchg
xor
and
cmp
pop
or
mov
jp
in
ja
mov
imul
hlt
sbb
js
mov
mov
push
adc
jno
inc
lds
aas
ja
jne
xchg
mov
and
nop
shl
jge
mov
push
xor
dec
jbe
add
imul
jmp
mov
aad
stos
xchg
repz
add
mov
lods
scas
mov
xchg
popa
sti
popf
jle
xor
aad
adc
cmp
sbb
jmp
add
pop
mov
insl
mov
clc
adc
add
pop
dec
or
in
mov
mov
aam
xchg
sahf
mov
aad
nop
sub
mov
cmp
inc
sub
aaa
out
lret
sub
cmp
mov
fdivrp
arpl
and
dec
out
out
test
les
jmp
aad
or
add
mov
cmp
adc
add
dec
push
jecxz
mov
dec
hlt
dec
lcall
pop
aam
cmp
pop
ds
or
sahf
inc
mov
adc
jno
outsl
mov
aad
dec
jno
or
call
mov
sarb
or
movsl
or
cwtl
test
lods
mov
mov
and
cltd
in
inc
lock
iret
iret
shll
in
or
xor
sti
or
into
or
jnp
add
push
std
iret
pop
push
test
lods
and
push
sbb
test
lods
rorl
jg
icebp
clc
sahf
xor
push
mov
sub
movsl
daa
or
jle
push
add
push
ret
xor
or
pop
xchg
xchg
xor
fndisi(8087
add
ja
xor
imul
repnz
ror
into
out
cmp
mov
mov
dec
push
adc
sbb
sti
or
pop
cs
cmp
out
pop
test
aas
stos
dec
addr16
mov
sub
adc
jo
ss
stos
icebp
cmp
daa
popf
fs
add
int
daa
testl
push
cmp
pop
dec
jne
sbb
lret
cmp
xorl
gs
shrl
fsubp
xor
iret
lods
and
xchg
mov
jno
test
xor
popl
adc
ja
ret
pop
stos
push
push
mov
mov
pop
inc
in
xchg
xor
mov
inc
jecxz
fdivrs
pop
and
mov
incb
or
mov
jne
dec
cmp
mov
test
pop
rcrb
push
cmp
loope
stos
sti
movsb
xorb
and
movsl
xchg
cmp
sbb
movsb
test
jmp
xchg
sub
dec
mov
pop
jnp
fld1
pop
inc
inc
in
les
cli
loope
clc
mov
repz
outsb
daa
rol
pop
bnd
sub
test
sbb
bound
and
adc
loop
sarb
movsl
xchg
jno
cs
cmc
mov
mov
xor
cmp
mov
roll
and
cmc
in
jl
pushf
out
dec
pop
push
ds
lret
sbb
xchg
sub
mov
hlt
pop
out
sbb
mov
mov
stc
jns
mov
push
lods
pushf
dec
std
shll
lret
not
scas
sub
push
loopne
ja
mov
mov
insb
xchg
aad
je
jge
js
inc
fcompl
jb
and
cmpsb
adc
dec
loop
mov
insb
pop
pop
push
js
iret
out
adc
out
jns
or
aad
adc
dec
push
xlat
das
ret
jle
nop
adc
pop
faddl
cmpsl
xchg
jp
mov
cmpsb
ds
scas
inc
out
push
cmpsl
sbb
lret
fildl
mov
add
or
and
cs
rol
add
jnp
out
xor
push
cmp
sbb
xor
fdivr
jne
pop
pop
jae
lods
mov
pop
popa
data16
loop
sub
lods
iret
jp
fnsave
xchg
data16
and
lods
sbb
sarl
pop
lock
and
inc
sbb
test
popa
popa
out
cmp
cmp
pop
hlt
mov
aad
out
mov
cmp
inc
cmpsb
hlt
mov
sub
add
inc
add
fsubrs
rcrl
cmp
sub
xor
mov
mov
mov
add
subl
imul
add
mov
add
mov
mov
andl
add
addl
or
mov
adc
mov
sub
mov
incl
add
xor
adc
mov
mov
add
mov
subl
add
orl
and
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
jmp
inc
xor
jae
mov
clc
stos
cmpsl
push
jge
rcrb
jb
fbld
mov
jecxz
push
lds
mov
or
data16
les
out
insl
pop
imul
mov
dec
xchg
sbb
ja
dec
pop
xor
sub
adc
xchg
inc
clc
sub
dec
mov
loope
shll
jg
or
adc
fnsave
adc
ljmp
mov
fdivr
fisubrl
or
insb
add
or
lea
jg
in
xlat
cmc
loopne
mov
push
test
fmuls
add
sub
pop
add
sbb
shl
pop
pop
jmp
pop
call
and
inc
mov
popa
inc
add
in
or
or
jae
or
loopne
jmp
js
mov
and
add
or
cmpl
jp
mov
dec
sahf
pusha
push
pop
mov
cld
sub
mov
mov
xchg
xor
mov
lret
dec
repnz
xor
lods
movsb
out
push
shll
inc
jb
xchg
xlat
cmpsl
xchg
js
sub
into
jne
ss
outsb
sub
mov
and
rcl
sahf
popa
xchg
lahf
mov
divps
je
inc
cmp
arpl
push
sahf
pop
addr16
ss
adc
loopne
lea
inc
mov
pop
mov
sbb
jno
adc
inc
or
lret
xlat
hlt
pushl
aad
movsl
lds
mov
add
arpl
jl
inc
fstps
mov
insl
mov
xchg
popf
mov
mov
ljmp
sub
repz
mov
cmp
xor
bound
push
add
xchg
and
dec
add
mov
mov
add
cli
test
mov
scas
arpl
mov
inc
pop
push
mov
iret
push
daa
popa
imul
vmwrite
fcmovnb
ja
jo
rcrl
xor
jle
fdivrs
sub
shrl
jnp
data16
pop
imul
jno
xor
sbb
jecxz
fdiv
leave
sbb
lods
int
lea
jbe
mov
mov
mov
and
cmp
pop
jge
push
iret
or
test
pop
xchg
mov
fildll
scas
cmp
or
pop
test
inc
out
inc
xor
inc
imul
mov
repnz
push
cli
test
mov
jns
out
xchg
orl
mov
lods
bound
add
pop
insl
push
popa
test
push
xor
call
cmpl
jns
mov
adc
rorb
mov
sbb
sbb
clc
and
lahf
mov
and
popf
aas
xchg
test
stos
mov
push
dec
fadds
jae
xchg
lds
fildl
sbb
mov
test
xchg
inc
cmc
aam
shrb
icebp
adc
nop
inc
ss
mov
movsl
test
adc
dec
xchg
cltd
add
mov
cmp
and
and
adc
adc
inc
cmp
xchg
fadds
lret
mov
mov
ds
mov
out
jle
push
outsb
scas
add
pushf
push
fsubs
fisubs
jnp
ffreep
xor
fsubp
outsl
ljmp
jnp
adc
pop
loope
sbb
push
mov
repnz
fidivl
pop
xchg
je
into
out
mov
mov
aam
dec
xor
and
movsl
movsl
popa
sbb
push
mov
push
insb
dec
subl
add
fs
pop
mov
int
mov
js
aad
or
mov
jl
aam
mov
push
xchg
aas
mov
xchg
outsb
jns
and
mov
inc
enter
sbb
lret
lcall
cltd
push
and
xchg
jnp
add
pushf
insb
rol
jno
outsl
daa
xor
fistl
aaa
xchg
xchg
jmp
push
cld
sbb
pop
jns
fs
out
and
inc
mov
ljmp
xchg
pop
rcll
mov
mov
push
repnz
or
dec
aad
xchg
xor
movsl
cld
subl
mov
aam
pop
mov
adc
jecxz
adc
push
lock
add
or
int3
lret
jns
inc
fbstp
push
test
in
decl
enter
push
fistpl
xor
mov
insb
adc
sti
out
sub
arpl
cwtl
add
push
repnz
es
mov
inc
sti
dec
xchg
xor
jnp
addl
jg
mov
mov
std
and
outsl
and
inc
cmp
ljmp
iret
cli
pop
lret
fidivl
sbb
xchg
aaa
mov
mov
mov
mov
insb
jo
adc
pusha
cld
mov
mov
lock
imul
pop
pop
xchg
cmc
mov
mov
fisttpll
adc
cmp
stos
mov
arpl
and
jns
push
or
mov
sahf
test
call
fs
lcall
inc
pop
lods
sbb
or
jns
push
fisttps
add
push
pop
mov
enter
add
push
adcl
inc
xor
pop
std
stc
or
sbb
fistpll
clc
adc
add
jae
adc
pop
lcall
or
mov
jmp
rcll
xor
addr16
jecxz
outsb
rorb
xor
xchg
mov
mov
stos
pop
outsb
xchg
push
cltd
lds
out
lock
jo
or
add
rorl
test
mov
testl
cmpsb
cmpsl
jo
xlat
insl
ljmp
jp
xchg
dec
push
sti
fnstsw
pause
sbb
push
xor
mov
push
mov
stos
inc
pop
popa
lret
and
rep
pop
incl
mov
or
stos
sbb
aad
and
adc
in
mov
popa
or
mov
lret
fdivrp
outsl
push
sub
mov
int3
arpl
cmpsb
js
daa
int
repz
xchg
in
fiadds
push
adc
test
cmpsl
stc
sbb
push
pop
aas
aad
adc
bound
xor
sub
out
cmp
ret
test
inc
inc
negb
inc
loop
jns
inc
and
or
pop
xchg
add
adc
addr16
ja
mov
lods
mov
cmpsl
hlt
jmp
and
mov
ret
fistl
in
repnz
aad
mov
fmull
dec
cli
sti
or
dec
inc
dec
xlat
sbb
cmc
leave
movsl
sub
mov
cli
js
loope
or
mov
cli
imul
fistl
out
xor
mov
xchg
jb
xchg
sti
repz
mov
cld
sbb
fcomp
ja
sub
insl
mov
movsb
cmp
clc
sub
in
stc
xor
and
push
enter
hlt
flds
adc
daa
mov
adc
sbb
std
or
jne
or
imul
jo
and
mov
int
gs
inc
in
out
jge
test
jge
xchg
js
mov
mov
ljmp
cmpsb
in
shrb
repnz
cmc
cmp
or
jnp
add
jg
jae
js,pt
fisubrl
sub
fidivl
sbb
fistpl
enter
pop
out
out
mov
mov
mov
sub
rcll
dec
lahf
add
and
test
in
or
mov
and
ret
mov
jmp
lret
push
test
inc
popa
out
es
or
jne
push
add
cmpsb
cld
rcl
cmp
dec
movq
pop
push
addb
mov
pop
xchg
add
test
in
fcoml
cmpb
jae
mov
notl
sbb
mov
divl
pusha
jbe
push
aam
and
ret
jl
repz
pop
inc
mov
push
jne
jo
inc
pop
mov
in
test
jbe
cmp
xor
movsl
inc
mov
mov
ficomps
aad
sti
pop
cs
add
out
lods
sbb
mov
js
pop
xchg
jno
mov
lcall
xchg
xchg
cmpsb
aam
scas
jl
jne
sub
jbe
jmp
mov
ret
and
mov
out
mov
mov
rcl
test
pop
out
frstor
and
pusha
fiadds
adc
xchg
mov
and
lds
or
or
loopne
pop
sbb
in
bound
mul
add
jecxz
rorl
adc
test
sarb
and
push
rorl
das
xchg
fcomps
sbb
into
data16
pushf
inc
enter
mov
jbe
xor
cmp
adc
mul
pop
out
movd
lcall
jp
fstl
and
pop
lret
stos
pop
or
iret
mov
and
lret
sahf
push
jb
mov
and
adc
std
and
jno
test
adc
pop
add
scas
dec
xlat
xor
xchg
xchg
dec
and
insl
ljmp
popa
jecxz
outsb
pop
icebp
add
out
adc
push
lock
scas
mov
xor
jns
sub
popa
adc
xchg
push
nop
dec
jl
jg
push
sub
jmp
mov
mov
or
jmp
xchg
out
xor
push
push
rcl
sahf
mov
pop
out
cmc
and
out
int
shll
sahf
cmp
mov
lea
inc
leave
cmp
lahf
jl
xor
jl
and
or
test
test
jno
push
sarl
jne
addr16
clc
and
mov
inc
pop
sbb
aam
insl
mov
fwait
sbb
inc
mov
sub
mov
inc
and
loope
data16
data16
test
xchg
xor
imul
pop
or
push
cmp
add
dec
inc
lret
addr16
movsl
sbb
out
mov
xchg
push
inc
jmp
mov
enter
jbe
pop
push
sbb
ds
shlb
push
adc
outsl
jno
sti
cmp
rorl
outsl
bound
test
pop
cmp
xchg
or
sub
mov
push
and
xchg
rorb
push
and
mov
or
or
aas
cs
mov
dec
test
lock
adc
les
clc
mov
shl
ljmp
loop
dec
xchg
xor
cmp
cwtl
testl
push
fstl
mov
cmc
leave
mov
push
sbb
aaa
into
dec
cmc
jp
or
repz
xor
sbb
fcomp
mov
push
push
sub
testb
arpl
inc
jno
dec
xor
lret
mov
popf
and
push
cmc
leave
scas
and
jne
push
push
or
xor
push
push
dec
pop
aam
mov
mov
jno
sub
dec
jo
jmp
adc
sbb
mov
stos
xchg
ficomps
dec
mov
sbb
cmp
test
mov
stos
jno
imul
sbb
inc
sub
jnp
aas
mov
aad
cmpsl
or
sub
xchg
js
and
xor
or
jo
aam
or
xchg
leave
int
popf
xchg
sbb
jae
jo
or
stos
in
ss
lods
dec
pop
daa
fisttpll
loope
aas
mov
fisubl
mov
lock
test
out
nop
push
mov
sti
xchg
shll
insb
shrb
sub
js
lock
inc
rorb
movsl
cwtl
xchg
fimull
mull
mov
pushf
jecxz
aad
les
sbb
insl
enter
stos
mov
push
adc
in
scas
xchg
aad
mov
out
es
test
xchg
push
pop
insb
fnsave
popa
xor
ja
repnz
out
ja
cmp
xor
movq
mov
pop
ja
add
sbb
and
sub
scas
pop
fs
jne
mov
std
sahf
inc
shlb
lock
mov
lods
inc
inc
jge
out
stc
into
cs
xchg
jp
call
xor
in
adc
sbb
pop
negb
adc
and
out
xchg
push
pop
mov
or
push
jp
add
sbb
loopne
cmp
ja
mov
pop
fdivr
jg
xchg
js
aaa
xorb
cmpsb
mov
cmp
add
pop
pop
or
in
pop
pop
es
xor
cmp
les
pop
movsb
sbb
and
insl
andl
mov
pop
imull
cs
sbb
cwtl
test
ret
push
loopne
lods
push
jl
jmp
mov
nop
dec
in
insl
cmp
cs
mov
fidivrs
jl
push
ljmp
fisttpll
xor
movsl
call
shr
jmp
xchg
sahf
and
jnp
mov
mov
mov
adc
js
in
pop
dec
xchg
xor
sti
pop
mov
hlt
xor
mov
mov
dec
jns
mov
mov
insl
cli
pushf
addr16
les
inc
popf
mov
clc
add
jle
clc
aam
ss
ret
loope
insb
lcall
mov
push
orb
ffree
icebp
cmp
imul
mov
lods
cmp
sbb
inc
rcrb
mov
mov
mov
lahf
jb
lcall
sbb
sbb
dec
push
dec
in
xchg
push
add
xor
fs
cli
xchg
cmpsl
adc
push
push
ja
aam
ja
xor
repz
and
push
sahf
xchg
mov
scas
js
sbb
xchg
ds
out
lret
mov
clc
out
pop
hlt
enter
jecxz
aam
push
enter
xor
dec
dec
loope
lods
imul
and
lock
pusha
dec
jp
scas
mov
je
push
loop
stc
mov
push
sbb
stos
in
mov
dec
push
dec
leave
fists
out
push
adc
lods
test
mov
mov
xchg
sub
jg
dec
jne
repz
ret
push
leave
sahf
insb
sub
shl
ljmp
fnstsw
adc
ja
jne
fldenv
inc
xchg
and
xchg
scas
and
lods
mov
sbb
fldt
add
clc
ljmp
mov
or
mov
add
shrb
mov
fildl
filds
push
xchg
les
and
ljmp
sbb
mov
cmp
test
cmp
call
cmp
psllq
and
mov
es
jmp
mov
rolb
lods
add
leave
mov
xor
fisubrs
push
fdivp
push
jl
cmp
cli
xor
inc
scas
sub
ljmp
cmp
mov
jae
shl
add
out
jp
adc
and
xchg
je
ret
sub
scas
mov
xchg
push
and
sbb
mov
ficoml
sub
rorb
jns
je
stc
mov
xor
aad
rdpmc
jmp
mov
test
shlb
dec
sbb
xor
mov
fninit
mov
and
aas
pop
inc
add
js
repz
std
std
cmp
adc
out
sub
in
or
fwait
pop
addl
jne
sbb
rclb
cmpb
add
cmp
ss
jo
cmp
aas
jns
ucomiss
out
hlt
data16
xchg
call
fdivs
push
sbb
or
xor
sbb
stos
test
push
or
and
movsl
xor
mov
jp
dec
sub
test
int3
mov
das
mov
push
pop
popf
fcomps
or
pop
cwtl
sahf
pop
pop
cmp
stos
loop
rcl
in
pop
sub
icebp
mov
and
stc
test
clc
xchg
and
jecxz
fwait
pop
push
out
sub
daa
sub
or
test
mov
sub
inc
mov
cmp
cltd
andb
dec
fsubrp
pop
movsl
shll
cmpl
fmuls
int3
adc
push
jecxz
sbb
cmp
in
hlt
movsl
lcall
int
pushf
sbb
imulb
adc
xchg
pop
add
jns
and
je
fnstenv
pop
inc
sub
popa
add
xchg
xchg
sahf
andl
jge
test
stos
mov
call
adc
cli
dec
xchg
out
outsb
fs
xchg
std
mov
sbb
nop
or
int
loopne
lods
insl
add
out
pop
sbb
cli
lret
xchg
jb
leave
pop
mov
dec
xorl
pop
cmpsl
inc
jp
lea
jbe
hlt
aas
sbb
xor
loopne
fisubrl
roll
lods
popl
xor
aam
sub
mov
xchg
dec
je
pusha
adc
popf
stos
imul
sbb
sbb
insl
mov
jb
mov
int
jns
enter
xchg
fcoml
add
idivl
pop
movsl
cmp
adc
mov
cld
test
xor
jno
lds
sarb
mov
int
psubq
jae
clc
xchg
xchg
xlat
pop
sahf
out
mov
cmp
dec
lret
or
sbb
push
jmp
nop
cmpsl
adc
sbb
or
inc
add
mov
or
mov
xchg
push
sub
mov
insl
mov
mov
hlt
inc
xchg
fsubrs
sbb
jno
lahf
sbb
or
sub
dec
inc
add
popl
mov
nop
pop
push
mov
add
sub
stos
sub
push
insl
rolb
rorb
cmp
dec
into
pop
imul
and
sbb
imul
jp
scas
jmp
push
mov
and
ds
cwtl
call
add
and
lods
xchg
jl
inc
jg
cltd
add
and
pop
fbstp
mov
mov
mov
mov
test
dec
mov
xchg
sbb
ret
sahf
xchg
mov
mov
sub
mov
sub
add
adc
test
pop
sub
loope
loopne
fwait
and
lea
or
push
jnp
mov
loop
ss
inc
fwait
cmp
test
mov
xchg
and
mov
mov
fwait
xor
adc
mov
into
ret
mov
ss
repnz
stos
arpl
sub
dec
xchg
xchg
lods
or
hlt
rorl
add
pop
mov
sbb
pop
add
cmp
mov
xorb
and
add
ficomps
leave
ficoml
sbb
jp
movsl
pop
add
cmpsb
aas
out
xor
and
mov
dec
jp
lcall
popf
adc
rcr
insb
into
add
push
scas
inc
int
int3
out
nop
je
mov
mov
pushl
cmpsb
add
or
ds
lock
int3
or
movsl
mov
lcall
rolb
and
sti
outsl
xchg
lret
mov
jl
lahf
cmp
clc
lods
fisttps
in
and
loopne
pushf
push
lret
inc
nop
sub
shr
stc
pop
xchg
imul
loop
xor
lcall
pop
aas
xchg
leave
icebp
ja
lea
jne
mov
outsl
xchg
pop
test
and
mov
mov
leave
repz
outsb
movntq
push
mov
xchg
pop
xor
test
gs
dec
jecxz
inc
sbb
jae
aam
inc
jns
push
ss
outsb
and
in
clc
dec
xchg
scas
pop
scas
daa
scas
pop
in
sarb
adc
and
jns
das
loop
dec
add
cmpl
push
push
mov
aam
repnz
rolb
cld
or
or
sub
mov
inc
iret
stos
jp
push
cmp
jns
jae
addr16
fs
inc
jbe,pn
add
pop
push
out
dec
cwtl
sub
cmp
sub
add
dec
shlb
in
add
push
and
es
aas
std
je
mov
lods
outsl
add
mov
jl
xchg
or
ficoms
or
std
es
or
sub
jne
iret
cmpsb
arpl
std
push
stos
es
shll
incl
mov
aas
xor
cld
dec
and
dec
dec
aad
aas
push
jmp
arpl
or
pushf
outsl
push
sub
lods
repz
cmc
cmp
mov
cli
jl
lock
test
mov
ret
add
lret
outsb
adc
ljmp
mov
sub
aam
sub
imul
insb
pop
inc
stos
cli
orl
pushl
mov
out
sub
or
shlb
scas
jbe
leave
sub
insl
fwait
or
mov
stc
shlb
call
jle
repnz
inc
pop
in
les
scas
scas
xchg
outsl
dec
sub
jg
jno
prefetch
pop
cltd
mov
nop
insb
mov
cmp
inc
mov
dec
sub
or
sub
mov
and
or
jge
push
repnz
fwait
inc
jns
inc
outsl
int
adc
inc
mov
ficoms
mov
add
je
sub
scas
aam
add
ret
dec
js
dec
fwait
adc
lcall
xchg
int3
push
mov
inc
loop
fs
lods
inc
cmp
push
testl
ret
jl
iret
test
inc
mov
sub
mov
add
into
fwait
or
lds
adc
mov
mov
loop
sub
jge
lea
scas
dec
popf
cld
xorb
jb
xchg
cmpsl
adc
daa
inc
mov
inc
in
js
lret
cli
imul
inc
test
divl
bound
cmp
call
dec
mov
aam
jmp
push
cs
test
sub
lret
dec
lahf
test
das
push
mov
and
add
sbb
outsb
ja
aam
movsb
dec
and
pop
jnp
dec
loope
sbb
ret
nop
sub
mov
daa
out
repz
push
pop
mov
pop
adc
mov
inc
out
loopne
dec
subb
push
inc
cmp
and
pop
push
sub
xchg
and
pushf
lock
sub
ss
ret
repz
lahf
xchg
fildl
inc
ret
pop
pop
jecxz
xor
std
inc
aam
mov
mov
negl
mov
xor
sub
sub
daa
lods
pop
jns
stos
or
insb
and
rorb
lahf
jmp
scas
arpl
cmp
sahf
into
movsl
insl
mov
loope
in
mov
iret
sub
fstpt
pop
push
fdivl
lcall
push
xchg
lds
xor
mov
mov
fdivr
jno
loopne
add
jbe
and
mov
adc
loope
in
or
test
insb
xchg
or
lods
mov
pop
aam
rclb
addb
cmp
sti
aas
sti
les
and
js
lret
jo
push
or
xlat
mov
pop
mov
mov
sbb
es
sub
pop
xchg
push
das
jle
jp
gs
nop
jmp
mov
ret
jge
pop
inc
mov
out
jge
stos
add
movsb
jl
lods
cwtl
mov
mov
lods
scas
rcrl
rcrl
and
add
dec
lods
in
sti
push
idivb
das
and
mov
bound
push
xchg
incb
fdivs
out
cli
iret
jbe
add
push
iret
sub
mov
sti
dec
out
inc
ret
xor
lcall
mov
fstpl
push
movsl
adc
fidivs
jae
dec
or
cmp
inc
inc
add
cld
jmp
inc
or
or
mov
jbe
aad
mov
dec
shrl
jno
int
or
jmp
dec
cmp
out
sub
mov
cmc
inc
add
push
sti
clc
cld
fmul
sub
xchg
jle
shrl
negb
dec
sbb
push
push
inc
push
adc
mov
les
xchg
nop
sub
dec
and
xor
movsb
int3
cmpsl
movsb
pop
std
not
in
push
or
and
sub
orl
lahf
lea
dec
data16
sub
and
xchg
push
popa
mov
out
adc
out
ds
stc
add
add
jmp
loopne
push
mov
jb
out
js
jae
ja
xlat
lds
fidivrs
push
lock
mov
bound
sbb
pop
cmpsl
adc
jl
loopne
sub
sub
in
xchg
imul
stc
movsb
push
out
xchg
mov
shll
mov
and
fsub
aad
fwait
jns
inc
dec
stos
shll
call
jle
xchg
push
add
jl
test
mov
xor
adc
lock
lcall
mov
push
movsb
jl
or
fsubs
and
aam
mov
sbb
lahf
xchg
sub
nop
cmp
mov
ja
add
pop
adc
pop
xchg
pop
push
cmp
addr16
lds
xor
lcall
mov
push
fs
sub
push
pop
shlb
arpl
dec
sub
pop
inc
xchg
stos
pop
inc
cld
ret
hlt
in
push
jp
and
push
testb
shll
cmp
sub
cmp
ds
xor
jnp
and
xor
enter
in
jl
dec
fwait
iret
mov
pushf
xchg
push
loopne
sub
insb
mov
adc
test
push
adc
dec
aaa
adc
xchg
sahf
inc
cmpsb
xlat
paddusw
or
cmpsl
rol
cmp
psubsw
aam
addr16
inc
jmp
daa
mov
mov
pop
dec
adc
jl
in
sahf
lret
ja
mov
ret
push
push
in
not
outsb
lods
xchg
xchg
fs
lret
mov
vaddss
push
cmc
pop
mov
imul
jo
mov
jno
rcll
mov
lret
les
inc
cs
stos
add
les
pop
es
cs
aad
pop
cs
or
sbb
ljmp
lods
inc
repz
sbb
leave
gs
rorl
push
and
sub
inc
cmp
add
sahf
inc
push
je
sarb
mov
mov
stos
inc
in
xor
mov
mov
cmpsb
pop
out
mov
sub
pop
jmp
adc
and
mov
xchg
cwtl
mov
adc
lea
movsb
dec
mov
mov
xor
pop
imul
test
andb
mov
cmc
pushl
leave
push
cli
pop
push
mov
popf
rcll
push
push
adc
jp
ret
mov
sub
or
iret
mov
mov
call
dec
xor
sub
rcrb
sti
pop
mov
mov
xchg
xchg
or
fimuls
repnz
mov
pop
dec
mov
sbb
in
cmc
cmp
ffree
and
mov
aad
jle
fldl
cli
xorb
pop
sbb
cmp
dec
jp
push
lock
cmp
lock
insl
cmpsl
loop
leave
mov
out
out
loop
aam
stos
lret
jno
fbld
pop
and
push
stc
adc
fiadds
push
push
cmpsb
call
dec
clc
add
pop
mov
loope
dec
lret
xchg
out
xor
pop
xor
cwtl
cmp
jle
daa
fwait
sub
lods
ljmp
xchg
adc
inc
dec
jp
popf
int3
lock
add
xchg
sti
mov
fadd
mov
xor
push
pmulhw
or
sbb
push
popa
sbb
or
daa
mov
mov
fdivrs
cmp
mov
rorl
into
mov
jns
outsl
mov
icebp
or
and
sub
push
push
in
add
mov
add
sbb
scas
add
insl
sbb
mov
xchg
sbb
add
mov
andl
push
jno
mov
pop
sub
and
xchg
nop
xchg
sbb
clc
pop
sub
inc
fwait
stos
pop
xorl
inc
dec
lret
std
cmp
add
flds
mov
out
sahf
ret
xchg
ds
scas
in
fwait
push
and
cmp
push
addr16
jnp
clc
pop
lock
ret
sbb
cltd
shlb
add
add
jmp
sub
push
mov
out
xchg
jl
lods
cmp
mov
xor
scas
inc
add
rolb
ret
and
test
shll
shl
mov
ljmp
fiaddl
adc
ret
int3
cmpsb
insb
movsb
xchg
loop
outsl
adc
sub
or
add
cli
idiv
movsb
repnz
dec
push
loop
pop
cmpsl
dec
dec
mov
icebp
mov
push
jp
mov
stos
cmp
into
jbe
inc
xchg
idivb
dec
jg
push
add
sub
das
mov
addr16
in
jmp
xchg
cmp
cmpsl
repz
mov
mov
pmuludq
mov
movsl
lahf
jecxz
mov
icebp
fcoms
cmp
pop
aaa
mov
repz
add
int
mov
scas
mov
xchg
fsub
stc
fs
ficoms
pop
sub
inc
mov
push
adc
orb
sbbb
cmp
lret
stos
mov
or
mov
xor
insb
mov
icebp
cmpsl
sbb
jle
add
dec
xorl
outsl
enter
dec
ffreep
fldenv
mov
mov
rcll
repz
aam
cmp
mov
cmp
pop
pop
pop
mov
mov
sub
aad
push
mov
mov
pusha
lahf
and
and
dec
outsb
lea
pop
xchg
aad
in
pop
jmp
push
adc
mov
hlt
push
inc
incb
jecxz
iret
push
mov
jge
inc
mov
or
and
pop
and
testb
rcl
push
mov
hlt
mov
aas
mov
sub
xor
in
sbb
pop
mov
cmp
in
loopne
out
fcompl
push
rorb
mov
fsubl
sbb
mov
stos
cmp
xchg
push
movb
icebp
adc
mov
adc
ss
add
xchg
inc
subl
or
mov
jg
fsubrs
insl
loope
or
enter
push
frstor
pop
xchg
or
mov
les
xchg
and
mov
cmp
fs
pop
or
add
xchg
insl
xor
out
lahf
and
cmp
lds
xor
mov
push
sub
jp
es
cmp
add
cmp
jno
lahf
pop
push
cmpsl
add
push
nop
add
mov
sarb
adc
jl
cmpsl
xchg
lea
sub
lret
arpl
mov
inc
hlt
popf
cmc
jnp
adc
out
or
jge
jno
inc
cmp
bound
add
cmpsb
in
test
lods
loope
movsl
add
inc
mov
jne
push
test
dec
jae
fcmovne
mov
arpl
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
jmp
or
aad
mov
sahf
fidivrl
int
xor
rcrb
jb
jno
fistl
jmp
xor
test
jecxz
jbe
lret
mov
ds
int
mov
sub
and
fwait
aaa
fimull
sbb
test
xor
addr16
fidivs
mov
mov
ficoms
imul
push
jle
mov
pop
mov
popf
nop
xchg
mov
es
jp
je
je,pn
enter
cmp
sbb
adc
cmc
ss
mov
or
xor
stos
imul
sbb
xchg
shrl
pop
sub
or
aas
cmp
adc
mov
add
push
sub
test
push
add
sbb
mov
cmpsb
xchg
ficomps
xchg
jno
xchg
insl
sti
outsb
rclb
scas
testb
ret
hlt
inc
mov
rcrb
scas
inc
xor
xor
dec
mov
lret
sub
dec
loope
test
pop
push
lahf
lret
ljmp
mov
int3
mov
mov
add
lret
cmp
or
cmpsl
fildl
fnsave
cmpl
sub
in
push
icebp
dec
mov
lahf
stc
add
fwait
imul
mov
mov
mov
jnp
xchg
xchg
ljmp
mov
scas
cltd
xchg
or
imul
ja
and
dec
push
pop
inc
sbb
jl
mov
inc
cmp
push
cmpsl
pop
outsl
xchg
fsubrl
cmp
or
xadd
sarb
push
xchg
inc
mov
andl
jno
dec
repz
cmp
in
push
mul
cmp
mov
sub
inc
cmp
sbb
sub
test
scas
clc
or
das
fnstcw
pop
std
xor
fwait
sub
scas
stos
mov
mul
push
orl
jbe
and
xchg
push
push
xor
push
ret
lret
test
or
pop
jne
dec
mov
test
test
daa
fidivrs
and
sahf
cmp
sbb
jg
popa
xchg
dec
fwait
daa
pushf
lea
popa
xor
add
mov
leave
stos
neg
xor
in
push
rorl
adcb
nop
mov
loope
jbe
dec
je
sub
pop
fld
push
add
stc
fcomps
and
shlb
mov
cld
les
mov
mov
sub
and
xor
ja
fsubs
loope
mov
stc
fstpt
incl
out
sub
xchg
push
mov
cli
lds
xor
pop
into
fisubrs
sarl
aaa
std
pop
popa
movsl
mov
aad
scas
mov
sbb
fucomp
dec
sub
jecxz
cld
mov
xchg
cmp
push
push
or
jecxz
push
call
mov
sti
sarl
xchg
movsl
dec
out
popf
mov
mov
add
sub
hlt
xchg
sbb
mov
and
shlb
push
mov
push
cmp
aaa
xor
jecxz
pop
inc
data16
or
outsl
mov
ret
fistpl
lret
inc
int3
call
jle
cmp
jmp
bts
js
mov
mov
xchg
popf
dec
cmpsl
pushf
jno
inc
daa
or
lret
cmc
lret
inc
js
movsl
pop
or
leave
cli
lahf
dec
sbb
icebp
addr16
jle
jge
loop
xor
mov
ds
lcall
mov
repnz
xchg
push
inc
and
mov
fidivrl
add
add
lds
ljmp
stos
arpl
jg
lret
sbb
sub
pop
rcr
aam
xchg
inc
out
mov
stc
bound
inc
or
push
es
outsb
or
cmpl
mov
xchg
add
scas
ret
sub
and
mov
adc
popa
xchg
xchg
add
mov
mov
stos
test
sahf
pop
movsl
imul
push
mov
std
hlt
cmpsl
inc
push
push
fwait
inc
pop
and
scas
sbb
js
rclb
or
cwtl
cmpsb
xor
push
push
hlt
or
mov
jbe
fmul
adc
lret
test
and
iret
repnz
ucomiss
cmpsl
jb
pushf
xor
icebp
popa
cmp
push
insb
roll
fcoml
inc
iret
push
dec
icebp
xlat
or
mov
xor
sbb
mov
pushf
stos
xchg
shlb
loope
loope
insl
iret
push
popf
addb
dec
cmp
imul
das
xchg
ljmp
fimull
fs
leave
sti
mov
or
lods
xchg
cli
add
adc
adc
adc
and
mov
mov
and
push
pop
mov
mov
testb
call
call
aas
rorb
lock
and
addr16
dec
test
scas
into
lcall
mov
js
lods
push
sub
mov
xor
enter
adc
cmp
sahf
and
and
je
sub
addr16
pop
xor
aas
out
dec
xchg
leave
xchg
cmc
aaa
icebp
in
xchg
xorl
cmpsl
pop
xor
and
sbb
add
dec
push
jecxz
inc
inc
arpl
inc
adc
mov
fimuls
les
cli
into
in
test
xchg
inc
jle
jns
mov
mov
or
sub
and
jecxz
bound
and
pop
push
xlat
je
ret
pop
lea
or
pop
push
mov
jo
lock
add
out
das
cwtl
pop
sahf
jl
cmp
cmpsb
mov
cmp
or
je
andl
push
pusha
xchg
xchg
sbb
adc
pop
movsb
xchg
fsub
mov
cmp
mov
xor
lahf
jge
scas
arpl
cmpsl
cli
adc
ret
scas
or
push
pusha
fcomp
jnp
xor
mov
dec
daa
aam
xor
mov
loop
or
test
push
dec
sbb
sbb
xor
inc
or
inc
lods
push
ficoms
gs
pop
mov
lcall
shlb
test
xchg
and
cmp
push
add
clc
pop
push
add
test
sub
ss
xchg
mov
lock
ljmp
xchg
lahf
out
fsubs
repz
adc
mov
cmpsb
pusha
and
sti
add
rcl
push
sbb
filds
inc
cs
les
cs
outsb
adc
adc
cltd
cld
pusha
or
dec
dec
scas
test
bound
jb
lds
sbb
add
sets
mov
arpl
test
pop
rclb
repz
mov
push
push
and
scas
cmp
xor
packsswb
mov
gs
xchg
popa
jmp
dec
or
dec
leave
sbb
cli
add
inc
mov
mov
and
in
cmp
mov
loop
mov
mov
cwtl
lret
mov
mov
lret
xor
xor
adc
pop
fists
push
xor
test
pusha
cmpsb
sub
mov
loope
pop
or
fnstenv
inc
add
data16
bound
cs
cltd
pop
test
push
icebp
xor
jb
mov
ds
add
cwtl
std
repz
outsl
and
dec
loop
movsb
dec
aas
mov
cmpsb
sahf
repz
push
inc
mov
xor
test
cmp
sbb
mov
call
scas
or
pushf
fistl
ds
pop
dec
mov
mov
jecxz
js
pop
jecxz
sti
xchg
test
loopne
or
mov
pusha
std
jle
bound
rorl
xchg
pop
or
pop
out
fstp
clc
adc
ss
jae
pop
movsb
adc
xchg
data16
in
and
dec
pushf
mov
stc
jnp
popf
push
jb
std
inc
dec
pop
add
ljmp
daa
inc
inc
clc
into
jmp
movsl
xor
leave
adc
add
pop
cmp
daa
idiv
push
jecxz
fisubrs
adc
in
pop
sbb
stos
or
sti
mov
xchg
nop
xchg
jns
negb
adc
mov
iret
push
push
jns
push
repz
mov
sbb
aaa
aas
pop
mov
adc
das
pop
mov
aas
mov
sub
cmpsl
in
scas
sub
addr16
fcompl
cmp
imul
mov
add
mov
pop
dec
scas
push
dec
push
adc
inc
jns
mov
dec
xchg
sti
xchg
std
add
or
jae
sub
jecxz
out
pop
add
fwait
loopne
outsb
popa
cmp
cmp
cmp
mov
jae
out
imul
dec
cmp
test
out
movsb
jae
ss
mull
mov
and
or
repnz
push
sbb
dec
rcr
cmpsb
arpl
adc
mov
push
fdivl
fiadds
jl
lret
movsb
clc
jmp
add
gs
lods
adc
xor
mov
xor
cltd
lret
sbb
pop
jmp
cmpsl
mov
ds
pop
cli
adc
outsl
push
imul
fnsetpm(287
dec
pop
ljmp
pop
gs
xor
out
aad
adc
int
jge
and
ret
adc
pop
push
outsl
cld
add
rcrb
call
orl
inc
pop
repz
mov
fildl
sbbb
cmpsb
mov
push
aas
enter
mov
jmp
xchg
pusha
xor
mov
xchg
inc
xlat
negb
cmp
pop
test
inc
sahf
fwait
stos
ds
or
mov
sbb
dec
dec
stc
fisubrl
lea
jle
inc
mov
mov
setb
dec
scas
inc
pop
call
and
mov
and
xchg
lea
loope
xlat
sub
add
stos
and
ret
pushf
rcl
loopne
mov
adc
mov
mov
mov
pop
jb
test
add
and
xor
addr16
mov
insl
lods
lahf
xor
pop
repz
and
mov
lock
stos
jle
lock
sbb
xchg
cmp
lcall
cmp
sbb
mov
pop
pusha
addr16
pop
or
xor
mov
cmp
push
jae
cmp
ret
and
jbe
inc
cmpsl
push
mov
lret
stc
js
cmp
jg
dec
push
push
sub
jp
lock
popa
decb
xchg
ja
xor
push
jl
add
mov
push
lcall
adc
dec
sbb
and
hlt
pop
int3
loope
sub
out
pop
out
cmpsb
adc
aas
inc
xchg
adc
jl
out
pusha
aad
sub
cmp
xor
xchg
push
xor
in
pop
insl
dec
mov
sbb
ja
pop
and
in
fstpl
dec
jnp
mov
adc
imul
xor
mov
xchg
dec
xor
jecxz
lret
mov
sub
sbb
data16
stos
mov
mov
inc
push
ja
les
inc
shl
pop
test
mov
sarb
xchg
lods
daa
stos
jne
fldcw
outsb
addr16
jae
mov
test
movsl
sbb
adc
dec
xor
xlat
ror
mov
loop
mov
data16
lds
lret
mov
inc
dec
mov
push
outsl
popf
iret
mov
scas
add
dec
into
test
pop
pop
sbb
adc
mov
jne
inc
jae
testb
aas
mov
hlt
jl
enter
aad
negl
push
mov
add
js
daa
ljmp
adc
inc
stos
inc
add
ljmp
iret
cmpsb
add
aad
sub
int3
xchg
jb
subl
sbb
addr16
xchg
dec
je
lret
in
les
mov
inc
fdivs
pop
decl
aas
push
cltd
push
out
cmpsl
mov
sub
inc
mov
loopne
push
sub
jecxz
push
xchg
nop
stos
ja
xor
insl
jno
pop
jl
mov
sbb
inc
or
ljmp
rorl
lea
xchg
rclb
mov
add
pop
popa
jle
push
pop
divl
xorl
xor
dec
and
in
fistl
and
aaa
rorb
jmp
cld
and
dec
push
ret
test
test
daa
iret
lret
mov
lret
imull
iret
cmp
adc
sbb
xorps
rcr
sbb
pop
sub
push
mov
loope
xchg
pop
mov
and
pop
pop
or
adc
and
xchg
adc
xorb
xchg
mov
xor
cmpsl
pop
xchg
mov
je
adc
lcall
js,pn
inc
out
mov
xchg
mov
cmp
push
das
push
iret
or
adc
mov
sahf
fsubr
cld
mov
aaa
movsb
pushf
sub
mov
mov
mov
pusha
lock
je
xchg
sbb
push
adc
orl
add
xor
fsubrs
mov
jnp
imul
sbb
add
or
mov
imul
cmp
dec
int3
mov
clc
mov
add
adc
in
jl
xor
sahf
pop
pop
or
outsl
adc
pop
mov
fwait
sbb
adcl
or
imulb
loop
shrl
and
adc
testl
fildl
sarl
cmp
dec
push
inc
jo
loopne
aad
into
lea
aad
lock
or
jp
aas
scas
mov
dec
xor
sti
jg
jo
ret
cld
sti
out
das
push
cmp
and
mov
sub
not
mov
dec
and
cmp
data16
daa
and
ljmp
jne
push
push
int
fidivl
leave
mov
adc
pop
and
es
mov
loopne
loopne
sbb
sti
dec
adc
pop
in
pusha
mov
in
adc
ror
jo
roll
lock
sarb
xor
cld
xlat
mov
mov
cmp
push
jns
rclb
jmp
rcl
pop
push
push
sbb
pop
xchg
divl
inc
shll
xchg
xor
mov
fsubrs
int
sbb
mov
negb
addr16
mov
lea
pop
imul
stos
mov
jnp
scas
push
lret
stos
inc
and
ljmp
fsubrs
cld
jnp
dec
inc
pop
in
stc
and
icebp
jae
insl
movsl
adc
loope
stos
orb
insl
or
sarb
mov
popa
xor
cmc
aaa
imul
mov
inc
mov
jnp
or
rorb
xlat
xchg
sbb
outsl
test
jne
dec
imul
bound
iret
sbb
mov
inc
pop
push
add
push
mov
sub
adc
mov
inc
push
xor
inc
add
pop
jb
inc
movsl
cmpb
jns
inc
xor
jno
adcl
cwtl
mov
xor
test
xchg
xchg
cs
hlt
decl
push
int3
xchg
push
and
mov
mov
push
movsb
icebp
lock
pcmpeqw
stc
lahf
push
push
xor
xor
ljmp
dec
out
xor
push
sbb
out
ljmp
xchg
mov
xor
jns
ljmp
xchg
mov
out
cld
clc
sub
sbb
roll
adcb
push
add
lea
dec
adcl
cmc
iret
push
les
push
and
push
or
inc
lret
ss
cmp
repz
cmp
mov
in
mov
jmp
push
xorb
cli
push
out
cmp
int
inc
mov
mov
fsubs
fdivrs
sbb
xor
sbb
lahf
or
push
sahf
lds
imul
lods
mov
mov
sub
loopne
jae
mul
cmp
sub
pop
in
mov
icebp
cmc
stos
sbb
push
sub
adc
sti
xchg
movsl
xchg
jmp
out
pop
repnz
xchg
cmp
adc
adc
or
stos
out
pop
das
loope
xor
xor
fbld
test
dec
pop
mov
inc
movl
push
out
push
dec
pop
dec
icebp
xor
movsl
dec
or
imul
stos
inc
ds
mov
jae
adc
push
test
push
in
cld
xor
shlb
shl
test
daa
ret
fs
scas
add
xor
outsl
insl
mov
mov
sbb
rcrl
jnp
push
cwtl
cmp
mov
aam
cmp
ret
xchg
inc
jp
popf
mov
mov
dec
xchg
rorb
adc
cs
mov
mov
mov
jl
sbb
shr
xor
push
subb
pop
ficompl
sub
jg
sbb
cmpsb
movzbl
inc
and
cmpb
jne
icebp
mov
imull
mov
int
jnp
dec
push
inc
lods
add
mov
push
std
ja
inc
lahf
jge
lods
push
mov
jno
fnstcw
std
inc
aaa
inc
in
cwtl
movsb
cmpsb
enter
cwtl
inc
fsubs
add
lock
loop
mov
sub
mov
mov
in
adc
push
xchg
cmp
pop
pop
mov
add
mov
pop
leave
fistpll
fwait
sub
mov
pop
hlt
xchg
je
fwait
and
jnp
or
insl
icebp
sub
imul
dec
aaa
mov
loopne
push
mov
dec
mov
mov
cld
pop
test
sbb
jns
insb
cmp
add
jecxz
icebp
push
jo
pusha
movsbl
filds
mov
clc
jnp
lods
inc
pop
xlat
mov
stos
movsb
movb
cld
adc
push
xor
in
mov
shl
icebp
in
es
shlb
data16
sbb
and
imul
or
mov
out
loop
test
xchg
mov
cwtl
pop
clc
mov
push
adc
push
mov
and
hlt
jae
rol
pop
imul
push
jg
popa
xor
cmp
mov
dec
in
jl
push
sbb
outsb
xchg
mov
outsb
cmpsl
and
orl
add
mov
sbb
pushf
or
shrl
loop
popf
sub
in
shrl
loope
int3
inc
lds
xchg
into
jge
mov
popa
adc
rorl
mov
jecxz
aam
pop
stos
or
cmp
sti
lds
cmp
mov
sub
push
bound
std
pop
ljmp
jecxz
repz
loop
lea
shr
lds
ficoml
or
cltd
inc
rcl
test
loopne
xor
nop
dec
out
add
aaa
clc
or
inc
mov
or
sbb
push
inc
lock
hlt
jb
or
sub
mov
sbb
enter
ficoml
aam
jp
fwait
cmp
sub
push
sbb
push
aaa
push
sub
cmp
arpl
movsl
sub
push
xchg
mov
mov
dec
mov
and
je
shlb
repnz
mov
mov
enter
pusha
mov
aam
add
lret
mov
cs
mov
mov
loope
js
xchg
hlt
je
add
add
ds
mov
pop
add
jbe
sar
mov
outsb
fwait
mov
mov
mov
add
mov
das
insb
ds
dec
lea
sbb
mov
add
xchg
xchg
jo
andl
cmpsb
insl
add
aaa
popa
mov
out
fisttps
inc
adc
push
xchg
stos
out
mov
mov
pop
jp
dec
loope
in
cmc
jp
mov
sub
pop
in
in
xchg
mov
sub
xor
je
and
aad
pop
pop
push
cli
sub
cli
sbb
ret
add
mov
pop
aad
test
sarl
mov
jbe
fmull
or
jns
aam
rolb
rcrl
test
inc
mov
sub
sub
subl
sub
cmc
ror
outsl
jl
cmp
inc
mov
int3
push
jno
push
push
popa
mov
imul
jnp
orb
or
fisubrs
sbb
add
fnstcw
jo
and
dec
movsl
xchg
outsb
loopne
jns
je
movsl
scas
shl
cmp
pop
faddl
jecxz
xchg
icebp
and
push
inc
fidivrs
jmp
mov
or
inc
xchg
mov
loope
cmpsb
mov
xor
sbb
mov
push
push
insl
jne
or
dec
adc
lea
dec
adc
les
push
out
mov
loop
adcl
cmc
arpl
xchg
sub
cli
int3
jns
lds
lret
lcall
out
mov
sub
or
int3
jl
push
inc
repnz
roll
lahf
add
mov
iret
add
jo
out
or
scas
inc
aas
out
or
push
pop
xor
mov
xchg
aaa
mov
scas
loopne
or
inc
cmpsb
or
adc
mov
mov
test
stos
cmp
push
jp
std
jae
xor
and
sub
jne
les
in
out
fsubp
dec
ja
cmpl
jno
mov
shrb
sub
pop
out
ret
mov
xor
and
bound
jne
out
jecxz
aas
nop
fisubrs
mov
xor
popf
mov
mov
add
filds
loopne
in
es
ret
lds
mov
repz
stos
sbb
fsubl
scas
jae
cwtl
xlat
sbb
cmp
mov
jg
cld
sub
mov
cltd
repnz
movsb
lahf
jecxz
pushf
sub
mov
push
jl
aam
das
gs
mov
shlb
shl
add
add
xor
add
add
pop
sbb
mov
xor
inc
pusha
dec
and
mov
mov
iret
in
in
lock
mov
not
inc
fisubs
stos
cld
mov
sub
arpl
pop
mov
cmp
and
negb
fdivs
adc
sub
sub
pop
pop
xor
xchg
mov
in
mov
xor
add
in
aad
movsb
das
sub
jb
arpl
jg
or
pop
bound
or
mov
or
xchg
xchg
test
pop
sbb
pop
push
scas
inc
xor
cmp
je
orb
sbb
test
jb
adc
cmp
dec
cmp
nop
fs
sub
dec
xor
fnsave
out
lret
adc
fs
sub
test
lahf
test
sub
out
negb
lahf
mov
iret
out
aad
and
addr16
ficoml
and
outsl
stos
jb
mov
or
mov
mov
pop
sub
repz
insl
cmc
jne
sub
xchg
mov
in
pusha
xchg
icebp
iret
and
into
push
jnp
dec
adc
inc
fs
jp
sub
shlb
sub
pushw
lods
xchg
sbb
xchg
jae
in
in
iret
xchg
push
inc
add
movsb
out
push
push
jbe
int
sbb
push
add
shlb
xchg
loop
push
push
add
rcll
imul
cmp
pop
cmp
or
lret
stos
pop
dec
lcall
mov
call
xchg
cli
cmpsb
pop
movsbl
push
add
leave
xor
fcoms
es
std
jae
or
scas
test
mov
sbb
sbb
mov
nop
mov
dec
cmp
int
adcb
jo
mov
fdiv
sbb
xor
push
push
cmp
icebp
sbb
addl
pushf
das
cmp
aas
inc
sub
push
jg
pop
xor
xchg
sbbb
imul
sbb
rolb
cltd
aas
mov
movsl
dec
out
aas
fwait
jg
aaa
int
je
ja
lea
outsl
andl
ds
scas
add
jmp
pop
xor
ds
roll
and
loop
aas
sbb
dec
jecxz
cmc
cmc
and
mov
add
jmp
into
fcompl
dec
inc
jmp
xchg
ss
push
daa
fsts
inc
test
jno
into
push
lds
mov
inc
cmc
dec
dec
and
test
clc
jge
cmc
cltd
pushf
and
fwait
cli
push
fiaddl
out
mov
cmp
cmc
daa
pop
testb
fidivl
pop
fwait
mov
xchg
movl
xchg
call
inc
ret
adc
shrl
aad
ds
clc
jae
push
je
inc
stos
xor
add
mov
xchg
and
push
test
in
out
fldl
xor
xchg
in
orb
cmp
push
dec
dec
sbb
int3
dec
shr
push
scas
roll
push
sbbb
scas
inc
or
and
inc
cmc
mov
xlat
dec
adc
rcl
adc
dec
shll
je
out
ljmp
enter
adc
ret
jne
push
pusha
mov
dec
add
enter
jl
jne
adc
out
daa
mov
mov
mov
xor
cmp
mov
and
or
dec
bound
mov
in
ja
sbb
cmp
push
ret
add
mov
mov
add
or
fsubp
jge
popa
push
loop
movsl
gs
sub
mov
andl
mov
out
mov
xlat
lods
filds
lahf
jl
mov
dec
fs
iret
cwtl
mov
push
jno
jge
icebp
insl
jp
add
mov
push
cmp
mov
xlat
pop
orb
jnp
adc
mov
sbb
outsb
dec
int3
add
mov
push
call
push
lea
out
jb
push
xchg
xchg
jo
or
sub
popf
in
mov
shrl
scas
shrb
adc
test
jae
pop
nop
lret
lock
mov
mov
divb
cmp
stc
sub
leave
adc
test
mov
adc
imulb
or
and
and
lret
es
mov
sub
jns
ja
dec
mov
xor
mov
aaa
xchg
orb
fcomps
aaa
add
js
ds
push
or
inc
mov
test
movsb
lahf
dec
xor
mov
inc
dec
pavgb
xchg
push
sub
xor
adc
xchg
ds
inc
cli
mov
movsb
dec
mov
frstor
inc
daa
ret
push
sbb
push
sarl
jl
xchg
popf
cmp
ds
xchg
popa
lcall
xchg
cmp
out
xor
imul
jno
push
push
mov
outsl
mov
inc
pop
push
addr16
movsl
mov
pop
fistpll
loop
xor
jp
js
sarb
movb
sub
stc
xchg
out
mov
stc
pop
mov
pop
mov
movsb
aaa
ret
pusha
testl
in
lods
lret
bound
stos
into
ljmp
mov
pop
sbb
not
lods
jp
xor
adc
cmp
sti
jne
loope
mov
add
xchg
and
out
inc
pop
lret
orl
pop
cmp
cmpsb
andb
xchg
mov
jp
cmc
jnp
sbb
mov
rcrl
cwtl
xor
jno
jecxz
ds
inc
add
out
push
into
in
cmp
mov
sbb
dec
mov
and
cwtl
dec
repz
outsl
in
js
xlat
insl
out
xor
mov
inc
gs
sub
jle
mov
dec
jno
adc
aas
outsl
imul
mov
rcrb
insl
je
cmp
adc
xorl
sbb
js
push
int
push
enter
loopne
out
mov
cmp
sbb
jne
mov
mov
push
lret
push
orl
icebp
cmp
inc
dec
mov
outsb
cwtl
mov
cmp
aaa
mov
jnp
outsl
xchg
movsb
add
jno
addr16
sub
dec
xor
mov
bound
scas
inc
jns
lds
push
aad
clc
jne
cmpsb
divl
dec
jns
mov
insb
push
mov
sahf
outsl
sub
push
ret
or
xchg
js
or
push
fiaddl
pop
nop
adc
mov
mov
push
inc
jns
xor
sub
cld
stos
adc
ficompl
pop
mov
lret
lahf
and
test
xor
sbb
mov
repz
adc
clc
lds
ret
push
dec
xchg
jmp
xlat
mov
out
mov
mov
fidivl
aaa
aad
push
mov
loopne
pop
push
bound
xchg
inc
add
xorl
je
xor
or
xor
std
mov
xor
in
arpl
cmp
jmp
dec
xchg
adc
xchg
mov
in
pop
push
repz
cltd
fcompl
mov
push
test
movsb
imul
cmp
test
pop
jno
sub
movsb
imul
sbb
and
inc
and
jnp
leave
mov
and
inc
push
fstpt
in
repnz
orl
imul
inc
dec
adc
adc
lea
pushf
push
mov
add
cmpsb
mov
pop
xlat
dec
dec
and
dec
stos
and
aad
sub
mov
movl
pop
jmp
mov
sub
inc
push
loopne
jp
sub
xlat
and
lcall
leave
jbe
icebp
aas
enter
pop
ljmp
inc
ficoml
sub
insb
push
xor
and
scas
rol
sub
cmp
addl
inc
testb
sarl
clc
in
jmp
xchg
aad
mov
cmp
inc
push
dec
flds
mov
inc
out
push
xchg
sbb
out
out
dec
inc
add
inc
ja
mov
shl
icebp
pushf
pushl
xchg
mov
jmp
jae
add
push
mov
jns,pt
inc
push
adc
cmp
stc
out
fdivl
outsl
and
adc
jg
mov
ret
int3
test
inc
hlt
punpcklwd
jne
je
add
sbb
jo
les
ret
test
mov
pop
sub
or
mov
popf
ja
push
xchg
jg
sbb
cld
aad
in
sub
fadds
pusha
in
daa
movsb
out
adc
rclb
adc
jp
mov
push
lahf
repz
sbb
andl
std
idiv
jbe
mov
insl
jns
sbb
pop
pusha
std
fsub
iret
add
out
popa
ds
hlt
jg
push
jl
push
pop
pop
movsb
out
scas
or
pop
vpmacssdql
outsl
les
lea
loopne
mov
in
and
xchg
sub
mov
loop
add
out
pop
fstps
test
jns
clc
jnp
jns
loope
cld
and
dec
pop
jne
mov
and
or
cltd
inc
mov
sar
mov
fbld
cld
xor
sahf
cmc
divb
stc
mov
xchg
jp
mov
xchg
mov
stc
push
jnp
lahf
lock
sahf
cli
sahf
jns
mov
jge
push
pop
test
jmp
adc
xchg
pop
sti
insb
xchg
xchg
ljmp
fstp
cmp
ror
mov
inc
out
ffreep
pushf
mov
adc
lods
loopne
mov
fistpll
je
movsb
mov
pop
cmp
sub
add
jae
in
sbb
arpl
ljmp
dec
movsb
cmp
cmc
insb
addr16
sbb
xchg
scas
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
sbb
xrelease
push
mov
aaa
and
inc
jnp
jge
rcrb
jb
inc
mov
hlt
addb
stc
xchg
mov
adc
cltd
mov
addr16
arpl
pop
test
data16
mov
cmp
in
push
inc
sub
nop
inc
or
es
js
and
scas
cmpsb
testl
das
in
xchg
jae
sbb
pop
push
xchg
fxch
xchg
js
and
jns
mov
outsl
iret
xor
xchg
cld
ret
into
push
push
out
outsb
push
es
cltd
inc
mov
jge
in
leave
daa
push
into
mov
pop
mov
std
hlt
sarl
or
jg
leave
jg
sbb
sub
adc
mov
dec
mov
mov
lret
gs
fldenv
outsl
cmp
lret
sub
mov
repz
push
sub
or
mov
mov
or
fcoml
mov
push
in
cmp
cmp
inc
stc
and
loope
popf
and
adc
mov
outsb
add
mov
mov
aam
xor
nop
shlb
jbe
and
lds
xchg
jg
out
push
cmp
add
fildl
jb
mov
sbb
lret
sbb
xchg
sub
xchg
sub
pop
or
iret
lahf
ficompl
test
aas
push
or
jp
xchg
mov
lds
das
negl
movsb
stos
adc
add
rcll
sbb
loope
daa
push
dec
pop
add
les
cs
xor
lock
pop
dec
xor
ret
lahf
pop
data16
pop
popf
mov
jbe
testb
ds
cld
inc
pop
jnp
fucomi
mov
bound
adc
jge
mov
sbb
movsb
es
ljmp
lods
dec
scas
dec
push
or
fsubrp
adc
cmp
mov
adc
pop
popf
push
mov
sbb
sbb
aas
loope
testb
test
pop
push
fistpl
mov
ja
lret
addr16
push
xchg
and
or
inc
mov
pop
adc
js
adc
dec
testb
leave
sbb
mov
cmpsl
dec
cltd
mov
pop
jne
adc
xor
push
outsb
dec
pop
aas
shlb
dec
dec
xchg
test
bndldx
sbb
pop
push
incl
bound
popl
outsl
fistpl
cli
jl
dec
cmpsl
shlb
mov
into
enter
lret
je
in
in
adc
sbb
mov
xchg
xor
dec
sbb
pop
xchg
xchg
push
imul
push
xor
lods
jmp
add
sub
mov
adcb
loope
scas
and
mov
in
lods
test
or
sbb
insb
and
mov
rorl
cmp
cmpsl
xchg
mov
mov
js
jg
and
arpl
popa
movsl
dec
jne
xchg
inc
or
jne
shrl
xor
mov
arpl
sub
add
sarl
xor
repnz
subb
sbb
cmpsb
out
push
push
adc
jae
mov
mov
sbb
or
mov
or
xchg
sti
es
inc
adc
add
adc
mov
mov
jb
add
pushf
and
fs
vshufps
mov
push
xchg
enter
call
inc
cltd
inc
sbb
mov
dec
cmp
adc
xor
lret
rep
mov
out
outsb
pusha
fcmovnbe
notl
arpl
repnz
setnp
dec
xor
mov
sbb
fcmovne
jle
jle
and
add
mov
test
fs
and
or
sbb
fbld
push
test
stos
les
xor
push
popf
inc
sub
adc
loop
loope
jp
mov
lds
adc
add
shlb
divl
and
jb
push
lret
aam
sbb
or
adc
out
adc
ljmp
lret
xor
inc
dec
repz
lret
xlat
mov
addl
ss
mov
and
popf
pusha
xor
pusha
out
in
sub
pop
in
lock
xchg
sbbb
jle
ficoms
sbb
or
sub
inc
ret
mov
sbb
push
mov
ss
push
fwait
ret
add
icebp
loopne
mov
jbe
outsb
dec
subb
sbb
arpl
dec
cmp
and
ljmp
xchg
or
sar
mov
pop
iret
scas
aas
mov
push
adc
leave
mov
and
sbb
aas
leave
outsl
mov
xchg
fucomip
jl
jmp
push
fldcw
lea
jmp
inc
es
fcoml
mov
hlt
orb
sub
lock
out
pop
mov
push
mov
mov
aas
xchg
dec
out
pop
sub
fsubl
dec
add
jb
mov
dec
or
dec
mov
das
out
mov
push
push
nop
or
and
subb
xchg
cmc
in
sbb
rcr
aas
loop
ret
repnz
jp
sub
xchg
cmp
jbe
sub
dec
inc
mov
cmpl
jle
xor
mov
push
shl
xor
jge
mov
lahf
mov
ja
pop
jp
mov
in
cmpb
mov
stos
xor
lahf
push
adc
fs
mov
or
and
hlt
cmp
in
mov
pop
mull
mov
sbbb
pop
jecxz
mov
icebp
movsb
sbb
cmp
pop
mov
imul
cmp
mov
sbb
xchg
mov
mov
adc
lcall
add
mulb
cmpsl
stos
push
lock
mov
xorb
arpl
insb
cmp
imul
jge
sbb
jg
and
sbb
bound
daa
push
movsb
sub
cmp
pop
xor
adc
jg
outsb
add
imul
or
out
xchg
fidivrs
test
fildll
cs
push
gs
push
xchg
aas
cmp
add
push
roll
mov
in
pop
nop
mov
jp
or
scas
jle
pushl
cmp
sub
push
scas
jb
xchg
jge
mov
ds
pop
xor
rclb
cltd
mov
push
shl
pop
sarl
xor
push
mov
cltd
insb
loopne
call
pushf
pop
shlb
pop
cmpb
arpl
xchg
lock
xchg
int3
mov
push
or
and
inc
filds
add
enter
fldcw
push
out
test
hlt
push
cmc
pop
fldcw
add
mov
add
adc
in
ljmp
imul
adc
lods
and
mov
mov
punpcklqdq
adc
cmpsl
mov
pop
mov
repnz
sub
mov
addr16
fidivs
mull
lods
pop
daa
xchg
jg
hlt
aam
xor
xchg
inc
mov
daa
es
cmp
clc
jg
push
sub
push
sub
popf
push
mov
pop
mov
inc
fyl2x
xorl
imul
cmp
cmp
dec
cmp
subl
out
pop
xchg
movsl
sbb
lds
outsl
sbb
lods
rcll
lret
mov
es
mov
aaa
push
in
test
fisubrl
loop
dec
adc
lock
cmp
pop
jmp
mov
jp
clc
pop
xor
shll
js
inc
mov
sub
cltd
or
jl
sbb
sub
fldt
jae
push
shlb
testb
dec
xchg
dec
shrl
ljmp
repz
jne
pushw
jo
js
jp
pop
lcall
out
pop
xchg
sarl
call
into
xor
outsb
aaa
pop
stos
mov
ret
xor
lcall
insl
movsb
test
mov
mov
cmp
cmpsl
aad
sbbb
popf
jo
jle
add
pop
pop
pusha
fwait
icebp
rcrb
leave
sbb
mov
mov
and
mov
mov
xchg
loope
jmp
push
jae
push
sbb
push
add
hlt
and
jb
xor
outsl
adc
shrl
push
mov
pop
jno
ret
xlat
jo
adc
sti
mov
out
dec
test
xchg
mov
daa
sbb
push
inc
mov
adc
fwait
mov
repz
negl
mov
rcrb
dec
and
sbb
lret
jge
scas
subb
sbb
mov
mov
push
pushf
mov
jbe
xchg
mov
repz
int3
or
jmp
mov
aad
cmp
dec
or
movsb
or
jle
and
out
in
push
sbb
mov
pop
push
loop
call
js
mov
cmp
scas
inc
inc
shlb
pop
push
mov
aas
mov
fmuls
xor
shll
xchg
mov
xchg
out
orb
sbb
cmp
insl
pop
add
xorl
les
cmpsl
xchg
xchg
clc
mov
sbb
or
ss
adc
lods
loope
out
fsubs
iret
xchg
xchg
pop
sbb
aad
mov
push
pushf
fisttps
in
mov
inc
adc
das
movsl
or
push
xorl
jae
jbe
lcall
in
adc
outsb
jle
pop
incb
stos
stc
out
xchg
cmp
adc
cwtl
jb
cmpl
jnp
push
dec
cwtl
mov
adc
jl
adcb
imul
sbb
int
mov
sbb
gs
sbb
pusha
jp
scas
insb
add
lods
mov
fstps
gs
ss
int3
out
push
lods
hlt
add
xchg
xor
xor
mov
mov
rcrb
iret
xchg
or
or
mov
insb
mov
lock
or
cmp
icebp
mov
push
in
jle
xor
in
xchg
cs
adc
cwtl
lret
arpl
cmpb
mov
push
outsb
ja
mov
aam
scas
mov
inc
jecxz
fmulp
dec
push
push
mov
cmp
inc
dec
sbb
out
cmp
or
movsl
dec
jae
cmp
fcmove
sti
cmp
out
lock
outsb
test
movl
les
lcall
push
push
mov
jae
lahf
outsb
mov
in
pop
incl
out
filds
sbb
repnz
xchg
ds
xchg
xchg
and
mov
push
lods
out
push
mov
ss
test
jmp
inc
ret
or
js
push
test
fisubrs
shl
cmp
mov
or
xor
icebp
push
cmpsb
int3
sbb
xchg
mov
repz
xor
in
loopne
and
testl
xchg
adc
stc
sbb
cwtl
movsl
push
mov
push
notb
sub
mov
inc
mov
ret
mov
mov
popaw
popa
mov
bound
data16
sbb
dec
orb
sbb
add
sbb
leave
dec
out
dec
adc
lock
insb
in
adc
lods
sbb
imul
mov
mov
and
inc
cmp
repz
inc
ret
std
dec
mov
xchg
mov
test
scas
cmp
xor
movsl
dec
mov
ret
xor
test
mov
cmp
mov
mov
inc
inc
fldl
jp
push
xor
pop
mov
clc
rorl
mov
inc
mov
push
test
and
shr
xchg
xor
mov
ja
scas
daa
cwtl
dec
ret
daa
push
jbe
aad
fildll
push
adc
xor
popa
cmp
mov
js
inc
jb
sbb
dec
jp
xor
outsb
dec
int
cld
and
push
lret
fadds
in
mov
push
ljmp
cmp
mov
int3
outsb
cmp
loopne
pushf
scas
xchg
fistpll
and
fidivl
or
push
popa
addb
into
sbb
fldenv
cli
mov
sub
sub
push
cmpsl
fs
arpl
sbb
and
imul
jns
aas
jge
push
stos
jbe
outsl
sti
push
add
notb
inc
cwtl
mov
or
xchg
sarb
xor
mov
sbbl
xchg
and
scas
sub
adc
out
daa
jg
cmp
jo
adc
fiaddl
lds
jl
mov
mov
mov
xor
mov
jbe
sub
mov
mov
in
sahf
push
adc
pop
cmp
push
mov
jno
xchg
mov
dec
lods
out
loopne
jl
dec
clc
pusha
fwait
xchg
cmp
ljmp
pop
sbb
mov
inc
je
sub
rclb
mov
mov
mov
add
cmp
rorl
add
push
icebp
out
call
jge
xchg
sub
jle
push
leave
mov
mov
pop
sub
es
ja
cs
dec
in
dec
pop
mov
inc
adc
sbb
dec
fwait
jecxz
pusha
cmp
add
mov
lea
cmp
push
out
cmp
mov
mov
or
icebp
enter
xchg
mov
push
adc
jle
scas
testb
add
jecxz
cmp
gs
popa
sub
pop
sar
mov
dec
sbb
mov
mov
push
push
test
add
jp
call
xchg
nop
adc
iret
lahf
mov
push
mov
add
xchg
mov
mov
dec
testb
mov
test
jne
int3
adc
cwtl
jnp
xchg
lret
std
je
xor
sbb
push
cli
jle
fistpll
xor
shll
orl
cmp
or
inc
push
stc
inc
cmp
aaa
inc
clc
add
jne
rclb
pusha
inc
pop
xor
jmp
lods
mov
and
push
mov
shlb
mov
push
cwtl
roll
jbe
arpl
xlat
jp
xchg
mov
subb
xorb
mov
mov
pop
xchg
push
pop
test
outsb
dec
loopne
inc
add
iret
mov
mov
clc
sti
add
and
rcll
rcrb
cmpsl
sbbl
nop
mov
fnstsw
xchg
xor
rcll
data16
inc
sbb
xor
xchg
xor
aaa
mov
pop
or
aas
mov
jne
dec
ss
xor
cli
add
mov
jbe
insl
stos
ret
clc
add
cmp
pop
pusha
mov
and
jmp
ss
cmpl
pop
push
outsb
mov
add
or
push
je
xor
stos
xor
fldl
pop
inc
lahf
xor
xchg
and
mov
sarl
lds
fcompl
jecxz
rol
in
mov
out
ret
subb
movsl
sub
lods
sub
adc
pop
out
xorb
popa
mov
out
mov
rclb
repz
sbb
pop
or
loope
mov
imul
fsubrs
mov
or
loop
rcr
sub
test
or
mov
cmp
and
cs
jmp
xchg
dec
add
loopne
inc
out
push
dec
pop
mov
xchg
pop
pop
cs
jecxz
shlb
arpl
dec
pop
out
insl
lods
test
cmp
repz
cmp
xor
inc
imul
jl
adc
rolb
in
xor
flds
jecxz
xor
add
lret
push
push
push
cmp
push
cld
xor
adc
jmp
lods
mov
test
dec
imul
inc
cmp
dec
adc
jg
or
dec
fiaddl
dec
aas
sbb
popa
cltd
orb
pusha
inc
sahf
xor
fildl
jecxz
sahf
std
or
jmp
int
push
jb
jbe
fwait
jbe
movsb
inc
lea
out
repz
fildl
ja
sub
leave
jle
bound
bound
adc
or
imul
aad
inc
jmp
std
andb
and
movsb
pusha
mov
inc
enter
mov
iret
addb
mov
mov
dec
dec
cmp
mov
push
js
mov
and
lods
lcall
mov
xchg
dec
leave
jmp
stos
sbb
mov
or
lods
inc
push
jnp
aad
pop
mov
ja
or
cmpl
cmpsb
mov
dec
arpl
repnz
popf
xor
sbb
adc
sbb
iret
jmp
incl
ds
xchg
pop
cmp
daa
daa
xor
sub
sti
inc
jae
cmp
out
ds
loope
push
cmpsl
and
lret
cmp
push
rorb
cmpsb
mov
lds
xor
add
or
mulb
xor
out
or
popa
sahf
mov
inc
fmull
mov
mov
push
mov
shrb
sahf
lds
arpl
idivb
aam
cmp
das
sub
mov
ljmp
outsl
mov
mov
mov
pushf
in
push
cwtl
push
push
xor
inc
or
stos
cmpsl
mov
mov
push
lods
inc
int
add
repnz
inc
cmpsl
jecxz
jns
scas
repz
cmp
in
push
sub
and
pusha
xor
idivl
adc
outsb
loop
sti
das
cwtl
ret
jo
mov
pop
hlt
xchg
xchg
jns
and
nop
xor
int3
ror
adc
push
int3
in
and
mov
vphaddwd
push
lahf
inc
sarl
pop
pop
stos
outsb
test
mov
ret
daa
xchg
mov
pop
mov
imul
scas
sbb
jnp
stos
insb
sub
lret
clc
aaa
insl
mov
cli
aam
andl
xchg
mov
mov
test
adc
mov
mov
pop
in
popf
dec
sti
jp
in
sbb
push
push
call
jns
cmp
xor
mov
cli
adc
pop
inc
repz
cmovno
ds
std
pop
push
fcomip
es
adcb
xlat
adc
push
and
inc
sbb
sub
add
loopne
jo
inc
leave
rclb
insb
add
push
pop
jmp
cmp
out
mov
mov
xchg
arpl
xor
inc
pushl
cli
out
sbb
xor
or
in
iret
xchg
jp
xchg
int
test
bound
xchg
sub
inc
cltd
hlt
decl
rclb
cmp
in
sub
add
bound
shll
test
push
xchg
cltd
repz
push
inc
push
cmpsl
add
fisubs
ja
rorb
fs
sub
mov
in
pop
xchg
inc
xchg
cli
rclb
xor
adc
dec
fisttpl
xor
test
sub
cmp
hlt
cmp
adc
inc
call
loopne
adcb
or
ja
pop
fisttps
xchg
jmp
test
and
mov
mov
sub
mov
mov
jmp
mov
in
ss
or
xchg
and
pop
cs
aas
loope
ret
stos
std
out
iret
clc
jmp
popa
push
call
ja
in
cmp
es
add
movb
out
sahf
push
add
mov
push
fisttpl
push
jb
mov
in
fwait
int
int3
mov
inc
cld
out
mov
or
cli
pop
adc
hlt
fmuls
rorb
jl
add
xor
cli
aam
and
and
mov
jmp
fistps
scas
sbb
lret
xor
sahf
xor
dec
xorb
jp
xchg
or
enter
call
jo
test
xor
addr16
mov
pop
jmp
loopne
xchg
mov
mov
sbb
pop
aad
pop
stos
ficompl
sarl
jne
push
sub
ss
inc
add
adc
stc
sbb
xchg
mov
sti
fchs
test
cmpsl
and
das
adc
xorl
mov
xchg
andb
or
cmc
jmp
inc
fucom
mov
lods
fs
mov
pop
mov
inc
fs
sti
ds
xorb
push
xlat
sub
fxch
mov
jns
sbb
fwait
and
fiadds
sub
mov
lahf
push
stc
xchg
adc
xchg
incb
subl
int3
xchg
push
lcall
mov
movsl
sahf
mov
popa
sub
movsw
test
cmp
lods
data16
pop
pop
cwtl
test
sbb
es
and
in
ds
inc
mov
ss
daa
dec
sahf
imul
sarb
inc
cmp
sub
jns
or
repnz
cwtl
push
in
lcall
adc
movb
jo
lret
and
sahf
jnp
divb
mov
mov
xor
jmp
insl
cwtl
pop
sbb
mov
jp
sub
and
jmp
nop
popf
int3
hlt
pop
iret
shll
fistpll
ja
jnp
fistpl
cld
mov
stos
int3
clc
icebp
cwtl
mov
sar
enter
mov
and
sub
and
imul
add
add
pop
lcall
push
outsb
roll
ss
xchg
push
sub
sbb
sub
dec
cmpb
aaa
ret
lods
jbe
pop
sub
idivl
cmp
jl
dec
loop
jmp
icebp
or
cmp
je
dec
in
std
mov
mov
dec
add
or
add
les
mov
fsubl
push
gs
lods
lods
pop
stos
ss
mov
clc
lret
aam
push
sub
mov
je
stc
push
aad
cmp
sbb
test
cmpsb
mov
int
push
inc
xchg
lahf
les
mov
pop
mov
or
out
imul
cmp
mov
sti
mov
loope
or
mov
lods
xchg
lock
and
ljmp
shll
in
sti
dec
push
cs
aaa
roll
dec
mov
adc
cwtl
insl
dec
dec
mov
fdivrp
movsl
xchg
rcrb
sbb
pop
addl
xchg
fnsave
sbb
fisubrs
xchg
push
test
sub
xchg
lret
sbb
xor
pop
sbb
jae
rolb
or
fs
mov
stc
pop
out
cmpsb
popw
push
imul
sbb
jg
pop
adc
lahf
adc
test
jne
or
xchg
mov
pop
or
dec
adc
nop
aad
jnp
xor
sbb
mov
test
stos
xlat
rorl
jl
inc
out
mov
pop
push
and
or
and
jo
cmc
rclb
pop
mov
test
dec
sub
sbb
mov
pop
mov
clc
adc
xchg
xchg
jmp
lcall
jge
nop
sbb
scas
add
pop
js
mov
shll
lods
adc
xor
sbb
cmp
clc
or
add
xlat
add
xor
in
push
mov
mov
pop
mov
mov
arpl
test
jno
dec
dec
imul
fs
or
ret
inc
ret
out
lret
jne
imul
pop
pop
call
or
popf
sub
jnp
mov
and
mov
int
jmp
push
repnz
xchg
mov
loope
scas
mov
roll
mov
jle
add
scas
mov
scas
scas
xor
in
push
into
xor
xchg
js
ret
enter
mov
push
or
cmpsb
ljmp
mov
inc
cli
sub
cmc
popf
inc
add
xchg
cld
push
inc
and
adc
mov
mov
bound
fisttpll
jns
ret
pop
xchg
scas
lcall
movsl
mov
push
lcall
pushf
or
mov
fs
mov
jne
push
jle
jnp
dec
das
jno
aaa
push
pop
fisttpl
imul
push
cmp
sbb
sbb
cmc
fdivs
pop
or
insb
fsubrl
push
xchg
popf
sub
roll
dec
push
and
sub
cld
push
adc
sub
sub
ficompl
pop
and
and
cmp
inc
xlat
sbb
xchg
pusha
cld
pushf
push
mov
xorl
mov
mov
xchg
dec
cs
mull
std
push
int3
sti
ss
add
pop
jle
or
jl
lods
sub
ljmp
sbb
pop
movsb
mov
mov
jnp
into
push
add
int
and
dec
addr16
fidivrs
or
repz
and
movsb
sub
mov
sub
stos
lock
push
cmp
dec
hlt
and
testl
mov
mov
rorl
push
cmp
gs
stc
je
nop
mov
cmc
jmp
lock
xchg
xchg
xchg
and
in
out
rcll
stc
fwait
dec
fists
stos
lea
test
pop
cmp
cmp
xor
test
fnstenv
cmp
inc
push
sti
mov
mov
and
popa
sbb
fsubr
mov
ljmp
push
daa
jns
jge
xchg
inc
adc
dec
icebp
sbb
ret
and
push
inc
leave
push
push
ret
push
pushf
cmc
xor
insb
inc
scas
scas
lods
cmpsl
cmp
mov
jb
sbb
ret
repnz
jo
ljmp
pop
arpl
sub
out
outsl
insl
insl
test
inc
inc
mov
in
shl
lahf
push
mov
push
pusha
mov
cmpsl
cld
sub
jle
sti
pop
pop
adc
mov
push
aam
fldl
xorb
jns
idiv
cmp
negb
push
mov
sub
xor
icebp
inc
test
cltd
inc
jmp
push
cmp
out
dec
dec
push
mov
sub
mov
cs
add
mov
cmp
rol
fisubs
lock
push
cmpsl
mov
jbe
sbb
mov
test
movsb
sbb
jb
loope
test
mov
add
jns
jns
xchg
lcall
sub
mov
arpl
sbb
push
push
scas
inc
pop
repnz
pop
mov
sub
push
jle
cmp
je
imul
pusha
movsl
out
fwait
cwtl
cmp
mov
mov
lea
add
lds
movsb
mov
jmp
outsl
roll
sahf
lods
or
pop
icebp
sub
lret
add
mov
aam
inc
dec
pop
ja
mov
rorl
notl
in
shrl
ds
cmpsb
cmp
adc
lcall
push
xchg
mov
ljmp
out
jns
push
inc
cmc
repz
jl
lods
and
mov
in
loop
xchg
outsl
fstp
push
jp
addr16
adc
xchg
addr16
clc
xor
ret
je
push
push
inc
jno
sbb
imul
and
push
lods
adc
fmul
mov
leave
push
sti
ja
add
adc
js
ficomps
lret
leave
not
fsubrs
jnp
add
adc
mov
int3
push
push
sub
cmp
or
call
scas
gs
mov
test
js
test
xor
xchg
jp
clc
ja
xchg
jmp
jp
xchg
and
lcall
pop
test
mov
stos
mov
xchg
insl
add
push
rdtsc
add
inc
clc
in
rorb
into
dec
fcoml
cmpsb
jl
jmp
jp
call
fstpl
pop
xchg
fs
pop
ret
cmp
add
call
mov
fstpl
xchg
adcb
and
or
cmp
imulb
jo
mov
jmp
out
mov
and
xchg
adc
add
xchg
test
mov
outsb
fwait
fwait
repz
dec
setg
daa
idivb
les
ja
into
daa
mov
jecxz
test
jbe
iret
pop
pop
scas
loopne
cmp
dec
popl
arpl
out
inc
fsubrp
cmp
push
call
jp
es
sbb
in
out
dec
hlt
hlt
pushf
out
xor
mov
pop
js
inc
aad
jae
push
dec
pushf
add
xchg
bndstx
lahf
sbb
pop
dec
mov
push
scas
addr16
call
scas
push
xor
div
mov
xor
rcll
test
inc
int3
stos
sahf
or
mov
lss
mov
xor
mov
push
add
mov
daa
into
leave
push
jl
sub
adc
dec
mov
inc
xorl
lods
add
jmp
push
push
loopne
jp
push
subb
push
jg
adc
loop
push
popl
cmp
sbb
push
mov
add
mov
jmp
mov
jae
pop
and
push
outsl
rorb
xlat
test
mov
gs
adc
xchg
jo
hlt
jg
jo
ficoms
andl
imul
and
pusha
pop
push
in
ja
or
jo
call
imul
sti
or
pushf
movsl
mov
add
mov
push
nop
in
jge
mov
fcmovb
mov
inc
out
fists
adc
loopne
jl
cs
loop
or
rol
mov
add
iret
sub
xchg
sbbl
dec
leave
mov
test
push
mov
mov
leave
fidivs
je
jne
out
inc
mov
inc
dec
adc
xchg
fcmovnbe
icebp
pushf
mov
ja
cmpsb
imul
xchg
sub
jmp
jecxz
mov
jle
icebp
adc
xor
xor
icebp
imul
inc
mov
arpl
lret
test
and
jbe
test
mov
jp
cmpsb
inc
aad
lret
out
jnp
cmpsl
push
sub
dec
or
outsl
or
and
daa
sbb
push
std
cmpsl
sub
or
mov
sub
push
jg
popa
push
push
in
inc
in
stc
imul
bt
dec
mov
dec
mov
int
jbe
mov
cltd
into
cmp
inc
cmp
fs
xchg
add
repnz
ljmp
jns
fwait
jle
mov
sbb
call
adc
mov
add
pop
roll
popw
dec
add
dec
push
pop
cmc
js
sub
cmp
hlt
out
pop
pop
mov
in
aad
jl
lahf
call
pop
push
mov
aaa
int3
xor
and
jne
and
insl
mov
and
xor
sbb
pop
add
shl
pop
adc
in
jecxz
hlt
mov
dec
or
sub
std
out
jge
and
pop
pop
int3
test
out
roll
sarb
mov
rcrl
cmp
mov
jns
jmp
or
push
fisttps
out
lret
fildl
dec
xchg
xor
push
or
outsb
std
ljmp
xchg
fisttpll
inc
enter
enter
push
xchg
jg
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
inc
add
loopne
add
inc
add
loopne
add
inc
add
loopne
add
inc
add
loopne
add
inc
add
loopne
add
add
add
inc
add
add
or
inc
add
add
adc
inc
add
add
sbb
inc
add
lock
add
inc
add
lock
add
inc
add
lock
add
inc
add
lock
add
inc
add
add
add
add
add
add
add
add
roll
add
lds
add
adc
add
inc
add
adc
or
inc
add
adc
adc
inc
add
adc
sbb
inc
add
add
add
inc
push
lea
pop
xlat
push
add
cmp
bound
add
dec
outsb
outsw
inc
outsl
insb
fs
popa
je
pop
push
imul
outsb
je
jb
popa
insb
inc
imul
in
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
xor
mov
sub
sub
mov
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
dec
inc
mov
pop
adc
ret
mov
out
add
xchg
out
and
dec
test
add
fs
rcrb
test
push
sahf
adc
cmp
xchg
pop
test
sbb
lcall
xor
mov
inc
jnp
xchg
bound
push
mov
hlt
in
xor
mov
fstl
mov
mov
mov
aam
or
xor
xchg
loopne
pop
leave
mov
xchg
and
jge
or
push
pop
aas
cs
push
jnp
mov
or
sbb
jbe
jge
icebp
arpl
lods
cmpsb
in
xchg
jg
sub
rorl
out
jne
aam
adc
dec
mov
lea
jns
and
push
aaa
add
in
cmp
fisttpll
andl
xchg
mov
jmp
repnz
or
insb
push
xor
sub
cmp
jbe
or
add
add
or
leave
mov
out
mov
ljmp
fistl
jbe
in
push
mov
lea
cmp
lock
aam
mov
sub
cmp
sub
out
cmp
adc
mov
add
out
or
aam
jno
sbb
mov
sbb
pop
push
jmp
out
sub
gs
jae
cmc
pop
push
cmp
negb
push
xchg
stos
clc
scas
push
sub
push
sub
jle
xchg
sbbl
lret
push
or
icebp
stc
sbb
int
ljmp
mov
icebp
push
cmpsl
lahf
sub
push
lcall
shll
xor
lods
dec
pusha
lock
dec
rcrl
lds
scas
add
mov
jle
mov
popa
mov
add
mov
push
cmp
dec
mov
cmp
jp
xchg
push
dec
ljmp
push
or
das
aad
lret
xor
into
adc
dec
add
and
sbb
lahf
andb
push
adc
gs
lea
iret
xor
pusha
js
add
rcrb
addb
mov
pop
jg
jo
sub
push
data16
ds
pop
lahf
in
adc
add
dec
push
mov
sbb
fwait
add
adc
fistpll
cmp
and
sbb
into
ret
inc
cli
fcoms
cwtl
lods
xchg
insb
dec
mov
pop
fwait
imul
lea
aaa
ud1
xchg
mov
loopne
js
sbb
dec
mov
popf
stos
and
icebp
push
add
mov
adc
dec
and
pusha
ljmp
mov
xor
jmp
stc
mov
cmp
out
call
xchg
in
mov
dec
stc
adc
mov
xchg
test
xor
cld
jne
and
mov
cmp
fimull
and
lea
pop
in
jns
shlb
pop
in
mov
xor
xchg
std
call
test
or
xchg
mov
adc
or
xorl
pop
repnz
test
mov
in
movsb
xchg
fistl
sub
xorb
imul
or
add
lods
pop
mov
mov
and
inc
out
test
ret
lea
ret
push
mov
sar
aad
sub
in
out
lcall
xchg
add
mov
push
js
mov
jae
add
out
add
adc
cmp
xchg
inc
push
adc
add
xchg
in
ret
into
out
popa
out
cwtl
in
sar
mov
sub
cmp
mov
loop
jnp
jmp
in
xor
pusha
inc
std
lds
jge
inc
pop
pusha
fidivl
adc
cmp
cmp
fimull
jle
push
ljmp
sub
lret
inc
and
lods
dec
rclb
cmp
mov
mov
xor
fiadds
or
jge
mov
daa
mov
and
popf
ljmp
movsb
add
mov
jbe
lods
in
shr
rorb
in
ja
in
loope
inc
push
cwtl
stos
test
or
pop
jae
fisubrs
jmp
fwait
leave
mov
stc
adc
in
cwtl
js
popl
movsl
dec
jae
shll
mov
call
imul
outsl
sbb
inc
leave
sbb
mov
dec
or
jae
mov
out
ss
lds
pop
dec
icebp
inc
push
shll
mov
fs
fsubrs
dec
ss
aam
sbb
iret
mov
or
aad
notl
pop
faddp
push
mov
fcomip
shlb
mov
sub
and
aad
scas
loop
cmp
mov
stos
and
and
flds
loop
jno
mov
cld
outsl
mov
pop
enter
xor
aaa
inc
cli
mov
and
cld
sbb
cli
movsb
xlat
or
and
jns
xor
jno
arpl
fsubp
jle
sarl
shrl
cmp
mov
adc
xor
out
add
gs
popf
jg
enter
rcr
lods
pop
mov
add
add
add
mov
neg
fs
outsb
mov
mov
push
std
push
popa
daa
popf
pop
xor
addb
add
add
mov
push
or
jbe
call
sub
popf
mov
and
imul
cmp
mov
and
mov
in
sub
loopne
jl
div
nop
push
push
lcall
or
cld
cmpl
in
inc
stc
subb
jp
movsb
jo
pop
test
xlat
cmp
pop
call
out
cmc
fstps
repnz
inc
ja
shlb
stos
and
arpl
sbb
cmp
cmc
cs
cli
stc
daa
in
mov
scas
insb
lret
dec
inc
lock
movsb
add
test
data16
pop
lods
popa
xchg
sbb
mov
in
mov
mov
sbb
mov
cmp
xchg
popa
jge
mov
aas
cmc
mov
insl
sub
jmp
push
push
inc
or
mov
jl
jge
cmp
fsubl
cmp
push
push
inc
lcall
lcall
rolb
cs
adc
cwtl
out
out
out
mov
pop
xor
adc
sbb
adc
or
inc
mov
push
jle
inc
lahf
mov
lahf
and
pop
adc
ds
jne
push
mov
mov
inc
xchg
mov
fmulp
leave
ljmp
mov
pop
push
fcomp
sub
pop
or
jnp
push
testl
insb
or
add
sbb
bound
insl
mov
push
pop
insl
lahf
in
into
mov
in
mov
aaa
dec
push
imull
push
or
cmpsl
lahf
mov
add
lea
inc
mov
add
add
add
cmp
adc
test
push
sahf
lcall
push
hlt
mov
sbb
mov
sbb
mov
inc
lret
mov
pop
dec
dec
dec
mov
fisubl
push
jnp
fmull
and
outsl
jmp
or
pushf
dec
iret
pop
lret
jg
inc
add
adc
jbe
lret
mov
out
cwtl
push
sbb
enter
loope
sahf
and
pop
in
jo
add
ljmp
cmp
jne
ret
rclb
jae
xor
and
xchg
call
loope
xchg
sahf
in
sub
outsl
sbb
jle
test
xor
mov
jbe
dec
repz
iret
and
cmpsl
xor
xchg
push
cmp
inc
pushf
mov
test
push
scas
leave
in
adcl
je
cmp
add
cwtl
push
pop
add
fistps
sahf
sbb
stos
sti
out
out
or
jno
push
out
iret
cmp
jbe
fs
inc
and
pop
jns
or
sbb
pushf
out
inc
inc
loope
adc
inc
xchg
sub
sub
dec
movsb
pop
rolb
mov
push
mov
pop
stos
popa
aaa
testb
mov
popf
and
test
imul
xchg
in
addl
arpl
fsubl
xor
add
lea
push
pop
jecxz
popa
loopne
cmp
xchg
cmpsl
lret
lea
mov
icebp
lcall
push
das
in
fists
push
in
insl
js
addr16
and
inc
cli
notb
insb
dec
dec
cmp
add
mov
add
call
sar
aas
incl
jecxz
nop
rcrb
and
in
sub
add
or
out
xor
cmp
in
imul
pop
cmp
mov
sbb
cmpsb
inc
ret
push
shl
in
clc
jl
data16
ja
int
pop
pop
sbb
sti
adc
and
xchg
mov
mov
sarl
dec
repz
xor
sti
data16
sub
mov
dec
mov
mov
nopl
outsb
mov
or
cmpl
jecxz
mov
imul
insb
cmpsl
mov
stos
mov
inc
scas
test
sub
sub
dec
cmpsl
or
dec
dec
add
cmp
adc
test
inc
cwtl
mov
sbb
stc
jno
std
pop
or
mov
aam
andb
shr
sub
inc
lret
add
and
push
scas
outsb
loope
sub
mov
add
xchg
lea
adc
dec
ret
mov
dec
subl
inc
xor
sub
xchg
fbstp
jns
cwtl
adc
add
lret
hlt
adc
out
addr16
ret
xchg
or
push
test
bound
xchg
ds
sub
mov
xchg
adc
pop
inc
lods
ret
cld
rolb
insl
rorb
arpl
lahf
mov
xchg
lock
mov
mov
mov
dec
sbb
xchg
inc
dec
and
cmp
pop
and
sbb
jmp
in
push
push
cmc
out
sub
inc
adc
pop
xchg
fwait
cli
push
jmp
push
add
xor
xlat
or
inc
fwait
cmc
dec
jne
imul
daa
dec
mov
lea
adc
cmpsb
push
addb
test
popa
stos
mov
lods
stc
jl
fwait
push
xchg
inc
mov
lea
jmp
inc
iret
xor
data16
lods
cld
mov
push
jge
xchg
cmc
mov
xchg
add
out
add
xchg
mov
xchg
nop
sahf
shll
int
pop
clc
jmp
out
insl
lea
fwait
ljmp
or
lahf
lods
pop
enter
cmpb
sub
cmpsb
dec
xchg
adc
cmpsb
fs
push
lock
sub
jge
stos
xchg
and
jge
daa
out
mov
lods
ror
dec
and
shlb
adc
adc
repz
dec
cmpsb
sbb
jae
scas
and
cmp
ljmp
push
cld
or
cmp
mov
lock
lahf
icebp
outsb
mov
test
lds
stos
movsl
mov
inc
push
iret
mov
adcb
jno
xlat
outsb
int3
test
push
add
sub
iret
test
mov
xchg
int
fidivl
cmp
cmpsl
xor
movsb
mov
hlt
cmp
xor
mov
and
add
pop
mov
or
mov
mov
cmp
mov
adc
adcb
dec
dec
pop
sti
in
pop
lcall
xchg
roll
cltd
xchg
and
xchg
mov
decl
jae
xchg
xlat
ljmp
inc
add
pop
hlt
push
sub
sti
in
or
sbb
jl
mulb
fistl
adcb
loop
pop
sahf
fisubs
jnp
add
mov
push
adc
add
leave
test
pop
in
fldt
imul
dec
rcrb
cli
les
aas
addl
nop
jae
dec
mov
cmp
xor
pop
je
xor
test
in
cs
je
jns
xchg
pop
scas
lds
adc
neg
jmp
popa
test
mov
out
add
xor
push
test
test
mov
outsb
mov
xchg
mov
dec
and
bound
jecxz
add
sub
jo
inc
test
mov
jae
inc
dec
sahf
add
mov
xor
add
inc
incl
enter
ja
mov
xchg
inc
aad
lods
jle
lret
push
int3
aam
testb
cltd
xchg
gs
fisttpl
or
add
mov
push
in
push
rcl
js
loopne
push
fistpll
push
inc
pop
paddq
loopne
popl
xchg
stos
pop
mov
xchg
ds
push
mov
or
xchg
jmp
je
adc
mov
mov
incb
pop
and
push
xchg
lods
mov
fists
pushf
sbbb
adc
push
or
sbb
cmp
shl
mov
and
adc
inc
test
jne
xchg
push
push
call
inc
jns
jns
mov
fldcw
sbb
xchg
fldcw
jge
ret
idivl
push
mov
popa
cmp
sarb
lret
xchg
push
fdivrs
add
lcall
shrb
scas
clc
jp
cld
das
cmpl
pop
jnp
push
sub
out
je
cmpsb
daa
pop
add
xchg
pop
mov
bound
icebp
popf
imul
cli
inc
push
ja
into
xor
dec
daa
sub
fdivl
in
nop
pop
cld
jle
imul
stos
push
out
clc
sbb
enter
cmp
cmp
out
loopne
bnd
add
push
lcall
lea
cmp
lea
xor
cld
mov
mov
repnz
mov
xchg
add
out
add
lahf
sub
adc
add
aas
fldcw
aad
mov
test
mov
sbb
fs
test
jl
fnstenv
cmp
ret
imul
sti
jmp
cmp
push
sbb
push
adc
xor
cmp
das
jno
aad
ss
movsl
pop
fwait
push
stc
gs
movb
fstpt
xor
xchg
mov
bnd
hlt
adc
pop
in
xchg
sub
inc
rcll
in
cmp
ds
push
pop
cld
ds
daa
pusha
mov
stos
scas
inc
sar
stc
mov
xor
cmp
mov
ret
outsl
push
imul
push
ds
sahf
mov
xchg
xchg
enter
fcompl
lea
mov
mov
ljmp
into
out
xor
inc
pop
daa
xchg
pop
addr16
cmp
stos
mov
dec
cmpsl
inc
inc
adc
cwtl
cmp
push
std
outsl
stos
sbbl
ja
sbb
push
or
mov
test
mov
jle
jg
out
sub
jns
or
sbb
or
xchg
sbb
sbb
aad
sbb
mov
jns
cli
je
add
in
sahf
out
fiadds
pop
in
imul
push
jo
hlt
and
pop
cmp
sti
and
jg
jbe
jne
dec
mov
jno
arpl
stos
mov
cld
dec
insl
mov
sub
mov
ja
lret
lret
xchg
mov
inc
inc
or
cmpsb
jmp
xor
nop
sti
loopne
dec
cmp
jno
inc
testl
xlat
fwait
dec
jb
ficoml
icebp
add
test
sbb
push
jne
loop
bound
xchg
les
add
mov
adc
push
imul
push
pop
sbbl
fcmovu
aam
int3
idivl
mov
and
adc
mov
ljmp
loopne
sub
shlb
ficompl
inc
fdivs
dec
outsl
xchg
mov
das
mov
push
sbb
mov
push
mov
mov
cmp
cmp
adc
pop
rep
xor
xchg
jmp
pop
jmp
pop
addb
cmp
jg
push
js
push
outsb
fs
jnp
aaa
xlat
mov
sbb
popa
sub
pop
sbb
inc
mov
sbb
lahf
mov
mov
sti
popf
push
mov
or
sbbl
sub
sahf
movsl
jnp
jns
inc
outsl
lret
call
test
ljmp
lds
fistps
or
adc
lret
mov
stc
jb
ds
push
lock
fimuls
es
pop
inc
cs
out
loop
pop
out
push
fs
mov
es
arpl
xchg
xchg
jl
jne
rcr
xchg
inc
filds
pop
cmpsl
sbb
inc
sbbl
and
jecxz
inc
cmpsl
int
xchg
out
xorb
sbb
and
lods
push
test
in
mov
push
push
xor
loop
roll
pop
sub
gs
cltd
sub
loopne
pushf
xchg
sub
xchg
testl
int
jle
mov
and
mov
loop
popa
pop
mov
sbb
stc
push
sub
sub
mov
push
jnp
jo
pop
dec
mov
sub
xor
shll
pop
pop
pop
lret
sbb
xor
sbb
call
out
and
into
rorl
inc
repnz
cltd
add
out
add
push
jp
subl
pop
es
clc
fwait
and
mov
shl
xorb
cmp
lahf
jecxz
push
inc
push
popa
lods
push
pusha
std
ljmp
lods
mov
pop
mov
mov
nop
lock
lcall
push
je
aad
cmpsb
mov
lods
lods
popa
fsubr
push
je
lret
testl
jp
mov
call
and
sbb
rolb
xor
movl
dec
pop
mov
test
mov
push
xor
repnz
mov
adc
xchg
xchg
les
nop
push
and
out
inc
out
mov
pop
cmp
popa
jge
or
stos
cmp
push
gs
dec
movsl
bnd
or
cs
adc
mov
loope
daa
adc
jmp
adc
cmp
icebp
mov
pop
jne
sub
xchg
xchg
andl
notb
in
repnz
pop
test
mov
xchg
enter
sti
push
push
fs
adc
clc
subb
mov
test
sbbb
daa
xchg
das
push
scas
daa
test
hlt
test
ret
pop
cmpsl
xchg
cmpb
test
add
xor
jecxz
mov
dec
leave
xchg
out
mov
sbb
and
xchg
movsb
inc
push
push
dec
and
cld
sbb
inc
test
sub
push
les
add
mov
sbb
xor
push
dec
adcl
fdivrl
scas
cmpsb
jmp
rclb
xlat
sbb
test
or
repz
cmp
lods
out
or
pop
jb
mov
clc
jecxz
cmp
add
leave
or
xor
xor
push
pop
mov
fwait
add
out
add
mov
adc
leave
outsb
jecxz
pusha
test
pop
pop
cmpsb
add
xchg
cmpsl
mov
daa
cmp
dec
pop
leave
mov
push
sahf
cmp
aam
xor
xor
adc
sbb
adc
xor
sti
mov
bound
jg
or
and
adc
mov
pop
loopne
fsts
test
inc
jmp
ret
mov
aam
cmpsb
je
cmc
hlt
xlat
dec
pushf
notrack
cs
ret
in
sub
lret
imul
push
and
and
xchg
popaw
stc
pop
in
call
inc
fidivl
testb
cld
push
daa
and
mov
lock
or
lock
push
je
aas
pop
mov
and
mov
xor
pop
sar
dec
arpl
sub
lahf
mov
pop
mov
push
xchg
push
jo
and
dec
xchg
bt
aam
cmp
rorb
stos
mov
push
or
push
out
push
cmpsb
popa
lahf
aam
sti
stos
dec
dec
popf
outsl
cmc
dec
cwtl
xor
outsl
push
movsl
enter
push
imul
or
iret
push
out
lock
and
or
cltd
lock
and
cmp
rorl
sub
divl
aas
mov
ret
cltd
insl
xchg
rcll
cwtl
inc
into
ds
or
movsl
stos
ret
test
push
sub
mov
sbb
imul
jg
add
movsl
mov
push
cld
xor
mov
add
pop
mov
and
xchg
addr16
neg
popf
sbbl
pop
enter
movsb
pop
sbbb
push
pop
enter
mov
mov
mov
out
mov
dec
fwait
and
popf
push
repnz
sbb
shr
ret
xchg
sbb
cltd
ja
out
out
cltd
ja
daa
loop
inc
adc
jns
add
out
add
lods
push
imul
imul
stos
fnsave
test
in
std
icebp
adcl
popa
cmp
stc
inc
mov
fisubrl
out
sbb
cmp
and
dec
js
repz
or
pop
mov
xchg
lods
push
roll
fimuls
adc
xchg
je
int
aam
les
in
mov
out
xchg
xchg
arpl
adc
in
push
sub
sub
pop
cmpsb
xchg
pop
aas
dec
jns
jae
xchg
xchg
scas
bound
aas
sbb
sub
mov
pop
aas
dec
xchg
jae
ret
in
jns
and
add
sbb
scas
inc
repnz
mov
pop
sbb
stos
test
mov
lea
add
sub
call
ljmp
ret
pop
lahf
ret
sar
xorb
cmp
call
dec
mov
sbb
insl
mov
es
insb
mov
fldenv
mov
jmp
inc
inc
lds
fistl
adcl
aam
xchg
xor
sub
leave
int3
insl
jge
push
jns
sti
pop
and
fsts
pop
neg
fsubrp
and
lods
xor
mov
fmul
iret
mov
add
stc
push
jae
movb
js
in
insb
mov
cmpsb
mov
xchg
or
call
repz
cmp
adc
inc
xor
jp
inc
enter
cmpsl
adc
mov
scas
jecxz
ja
sbb
into
outsl
or
ja
cmp
jns
inc
out
dec
cmp
pop
fstpl
stos
sahf
push
xchg
inc
cmp
mov
pop
mov
and
out
jg
xlat
cltd
adc
aad
mov
sahf
cltd
adc
mov
testb
dec
cmp
xchg
iret
lahf
push
or
add
lahf
add
out
add
loopne
lods
mov
fsin
int
and
dec
fdivl
inc
pop
hlt
jmp
test
cmp
call
mov
and
mulb
fcompl
cli
lea
sbb
in
mov
push
dec
aas
inc
add
je
jmp
jne
and
mov
dec
mov
push
sub
mov
push
int
mov
das
xchg
enter
xor
sbb
rorw
jne
stos
adc
adc
cwtl
int
xlat
xchg
xor
sbb
xor
adc
insl
and
pop
into
or
ret
add
inc
pop
stos
mov
mov
fstpl
js
sbb
xchg
xchg
int3
sub
jnp
lcall
or
je
in
xchg
dec
insb
imul
in
enter
mov
shll
les
push
loop
cld
or
movsb
mov
jb
xchg
mov
xchg
and
and
pop
jne
in
hlt
jb
inc
flds
push
andb
lret
leave
cmpsl
pop
lret
fcomps
sub
xor
push
fimuls
pushf
shrl
jmp
mov
fnstsw
loopne
repnz
iret
fdivs
pop
xchg
mov
in
add
sbbl
in
dec
push
mov
or
mov
cmc
add
mov
stos
jle
dec
mov
mov
add
sub
xor
into
or
leave
pop
fdiv
arpl
inc
and
add
enter
in
xor
or
inc
mov
clc
pop
pop
pop
sbb
into
fmul
jbe
sub
les
scas
xor
lret
or
push
push
inc
shlb
or
mov
lret
xchg
stc
push
dec
arpl
add
stc
mov
loopne
out
jns
inc
mov
add
in
push
dec
mov
mov
sub
dec
orb
out
sbb
pop
loop
pop
inc
xor
sbb
mov
inc
jno
xchg
test
mov
inc
mov
aam
and
jl
sahf
dec
xchg
addr16
add
push
or
or
js
sub
mov
bound
cmpsl
mov
xor
fucompp
inc
insb
adc
daa
nop
dec
push
xchg
int3
cmp
dec
into
push
das
jmp
stos
adc
push
pusha
mov
push
lods
xchg
loope
enter
pop
jge
ljmp
stos
mov
jp
aas
sub
add
out
xlat
rcll
xchg
lret
push
sbb
cmp
movb
sub
pop
loop
movl
lods
and
inc
cmpl
lods
pop
adc
mov
inc
enter
loopne
loop
aam
cmp
mov
pop
aaa
shld
mov
xor
pop
pop
pusha
cmpsl
cmpl
std
test
and
lret
jle
pop
add
cmp
adc
clc
pop
outsl
cmp
addr16
repnz
stos
dec
lods
jnp
lods
xchg
mov
icebp
imul
pop
pop
and
cltd
adcb
mov
ds
dec
out
pop
adc
mov
pop
fmuls
jge
sbb
andl
dec
lds
sti
jmp
xor
pop
push
sub
frstor
lcall
jl
lea
loopne
loop
push
jp
and
sahf
jnp
es
jp
popf
aad
sub
sbb
jge
dec
cmp
lds
insb
test
push
adc
clc
add
xlat
dec
call
loop
les
pop
sbb
mov
add
jecxz
push
out
mov
sbb
frstor
mov
dec
into
add
xchg
cmp
mov
xchg
arpl
stos
cmp
pop
lock
leave
mov
test
push
dec
sub
jb
imul
add
shll
test
addb
fs
mov
fwait
push
cltd
lea
fmuls
addr16
adc
mov
xor
popf
subl
out
xchg
sbb
or
pop
aaa
jns
dec
and
mov
sub
repnz
lahf
cmp
call
mov
movhps
or
jl
out
repnz
inc
sub
mov
mov
lahf
adc
jg
mov
pop
push
add
xchg
lahf
xchg
icebp
lret
test
jecxz
inc
call
ds
add
cwtl
cmovnp
sub
pushf
xor
inc
pop
adc
jbe
cmc
xlat
pop
cmpsl
stos
pop
insl
out
push
cmp
or
mov
int3
push
sub
sub
das
jnp
stos
cmpsl
jg
pop
add
pop
xchg
lcall
mov
dec
fisubl
sub
add
fimull
enter
jo
rcrb
pop
add
pushf
subl
jle
dec
out
add
mov
popf
jno
and
rcr
aam
es
mov
dec
adc
jg
push
and
popa
push
xchg
sbb
or
or
jge
push
fmul
mov
push
call
mov
jp
xor
pop
mov
mov
mov
lock
imul
push
notb
test
add
jnp
mov
xlat
punpckhdq
mov
add
add
add
dec
push
fcomi
out
iret
pop
cwtl
std
or
daa
add
mov
sbb
fcoms
push
lods
mov
insl
push
insb
add
test
mov
pop
mov
dec
mov
inc
push
adc
xchg
jns
pop
sub
clc
loop
mov
lahf
adc
jb
sub
popa
xor
mov
nop
jmp
into
imul
pusha
cmpsb
mov
dec
pop
gs
inc
push
cmp
into
cmp
aaa
dec
loope
or
lret
fnstcw
fidivs
aam
push
test
mov
pop
push
sbb
cmpsl
pop
and
ss
inc
mov
inc
add
push
sub
add
lods
loopne
xchg
dec
or
popf
sub
cmc
add
pop
stos
out
decb
repnz
mov
iret
aaa
insl
mov
repnz
push
inc
stos
adc
mov
mov
gs
insl
pop
sub
or
jge
divl
sub
rolb
sub
das
lahf
dec
movsl
leave
jae
out
adcl
aas
mov
adc
stos
dec
fldt
and
scas
xor
aas
mov
test
sub
iret
je
lcall
mov
arpl
adc
inc
fisubl
push
mov
rclb
sbbl
adc
mov
daa
push
or
mov
outsb
xor
cmc
out
cmp
dec
fisttpl
adc
lret
dec
jnp
call
test
sub
loope,pt
movsb
dec
gs
out
es
or
inc
pop
dec
jno
mov
shrb
clc
push
mov
adc
jg
jns
dec
lea
mov
add
out
add
dec
xlat
pop
imul
or
adc
cmpb
mov
mov
mov
lods
push
js
dec
lods
or
loope
mov
fwait
adc
and
mov
mov
ret
out
pop
mov
je
pop
cmp
lfs
xor
dec
fadds
or
push
add
adc
int3
and
xor
sbb
push
cli
sbb
fwait
sbb
das
jmp
xchg
lds
pop
mov
test
add
and
cltd
ret
ffreep
rcl
xchg
call
mov
imul
andl
lds
imul
loope
adc
aaa
adc
in
xchg
and
mov
push
stos
inc
and
xor
sbb
xchg
sbb
leave
aam
xchg
adc
sbb
add
pop
and
mov
xchg
jb
push
stos
jle
repnz
popa
inc
xchg
add
scas
sbb
push
mov
mov
xchg
add
or
adc
scas
mov
and
pop
inc
cmp
inc
and
mov
push
cwtl
loope
jns
lret
jle
cmpsl
mov
add
rcl
and
add
aad
stc
xchg
pop
mov
cwtl
loope
ljmp
or
xor
dec
icebp
in
and
xor
mov
ret
push
dec
sbb
add
or
mov
add
test
inc
rolb
sti
inc
add
xchg
cmc
xor
orl
test
js
push
push
sahf
and
jl
mov
ljmp
shll
xor
scas
add
outsb
idivl
testl
test
add
add
add
fidivs
imul
test
sbb
cmp
cwtl
cltd
add
ffree
idivb
cmc
pop
mov
cltd
scas
dec
shl
js
cld
xchg
stc
mov
enter
pop
push
mov
add
push
cli
ficompl
fisubl
movsl
jl
jb
inc
sub
pop
ret
push
add
adc
inc
mov
popf
leave
mov
mov
fwait
bound
scas
push
arpl
aam
mov
andl
fmull
hlt
pop
shlb
push
shl
jmp
test
or
pop
jo
jg
repnz
pop
add
repnz
cmpsb
mov
pop
iret
sub
out
cmpl
mov
mov
std
sub
jp
and
push
adc
fsts
push
inc
mov
idivl
inc
aad
mov
sbb
test
ljmp
adcl
xchg
push
pop
outsl
cmpsb
clc
popa
aaa
jo
lcall
cmpsl
pushf
jns
mov
popf
out
outsl
in
shlb
dec
lret
or
mov
cmp
cmp
sub
test
push
fldcw
mov
in
xor
gs
out
aam
pop
xlat
inc
push
push
popf
mov
dec
mov
mov
pop
jl
add
cmp
or
dec
sub
or
xor
pop
aaa
in
in
cmp
fiaddl
cld
loop
mov
fcoms
pop
fcomi
mov
cmp
fcoms
mov
scas
sub
sbb
mov
inc
stos
or
jb
push
mov
pop
lret
or
sbb
xchg
mov
dec
nop
xor
add
cmp
sub
sti
lods
xchg
loop
xchg
aaa
fsubs
lret
add
add
add
aaa
add
dec
sub
lret
test
idivb
xchg
insl
cmp
mov
in
out
fsubl
loope
aam
mov
stc
stos
xor
mov
or
dec
cwtl
mov
xchg
movsb
inc
test
aam
mov
shrl
shl
xorl
lea
outsl
aad
cwtl
push
orl
stc
in
jno
jp
fmuls
mov
pop
xchg
mov
imul
dec
mov
std
out
pop
mov
dec
xor
bound
in
test
lods
rolb
iret
xchg
jb
cmp
jmp
pop
xchg
mov
insb
xlat
and
mov
cmp
cmpsb
daa
notb
pop
fucom
cmp
jg
test
je
fidivl
hlt
mov
fdivl
ds
aaa
cmp
pop
push
adc
outsl
push
sbb
filds
xor
or
push
pop
inc
sub
and
mov
xor
ja
xchg
shll
jl
shlw
imul
push
xchg
imul
aam
mov
ret
mov
add
cmpsl
addr16
jge
pop
add
das
mov
cs
fdivs
mov
jae
mov
xchg
in
xor
popf
cmpl
fidivrs
js
pop
repnz
sbb
cmpsl
mov
and
mov
fistpll
push
mov
xchg
xchg
adc
andl
mov
movsb
dec
inc
xchg
mov
dec
adc
push
insl
mov
mov
es
dec
sub
icebp
xchg
sbb
add
adc
add
xor
adc
dec
sbbl
mov
imul
scas
adc
aaa
out
ret
pop
lcall
cld
cs
repnz
std
push
lret
dec
lcall
add
pop
out
xor
iret
rol
loop
jecxz
gs
jno
push
out
leave
data16
lret
add
mov
mov
mov
insl
sbb
xchg
aad
adc
roll
fisubs
es
mov
out
test
pop
fnsave
lock
xor
push
xor
or
or
and
mov
hlt
je
and
dec
js
mov
loop
out
std
jl
xor
rcl
les
jne
loopne
add
bound
mov
pop
and
int3
inc
mov
jmp
jmp
mov
pop
xchg
jb
pop
mov
jg
pop
mov
push
icebp
rorl
movsb
out
adc
push
cmp
push
push
mov
push
add
mov
jb
cmp
jg
neg
cmp
adc
dec
push
ret
xchg
mov
xlat
fcompl
xchg
leave
push
cmpsl
mov
repz
test
loop
fidivrs
xchg
arpl
mov
pushf
lret
xor
aaa
imul
push
lock
and
sub
or
mov
ja
cltd
in
ja
sub
bound
push
notl
ss
fisttpl
in
scas
pushf
and
or
bound
add
pushf
sub
fsub
xlat
sahf
push
ret
cltd
mov
push
cmp
bound
clc
bound
js
loopne
jns
mov
jns
mov
inc
jmp
pop
daa
inc
cmpsl
mov
mov
gs
xor
adc
jo
mov
push
sub
cmpsb
push
sbb
les
adc
sar
mov
lds
imul
add
sbb
adc
dec
cwtl
scas
add
out
add
cmp
jnp
jo
pushf
mov
xabort
test
andl
in
mov
add
mov
sub
les
push
jb
ss
test
jo
jl
test
insb
dec
pop
gs
add
call
pop
jg
mov
aad
sbb
pop
call
xchg
inc
mov
lds
inc
insl
ds
adc
jmp
loope
insb
cmp
mov
test
lcall
lds
and
push
adc
or
pop
fldt
and
lock
icebp
push
in
sahf
push
fmull
mov
sub
add
push
sub
inc
xchg
loopne
sub
xchg
adc
outsb
mov
sbb
cmp
fdivrl
lods
movl
adc
add
ret
jmp
out
js
pop
push
inc
mov
sub
push
inc
push
jbe
daa
xor
sub
cmp
xor
sbb
stos
cwtl
dec
mov
jmp
repz
sbb
xchg
and
cmpsb
mov
inc
and
push
xchg
and
fbstp
mov
enter
enter
movsl
inc
inc
xor
jle
sarl
shlb
sub
pop
daa
test
ret
in
in
out
jl
jge
jg
sub
popf
iret
insl
push
mov
mov
mov
stc
bound
xchg
jo
ljmp
xchg
jb
sahf
fxam
outsl
jg
adc
mov
and
jp
and
fldt
cmpb
pop
mov
cwtl
fisubl
imul
dec
add
ret
repz
fldt
icebp
gs
inc
xchg
jg
add
out
add
push
out
cmpsb
lcall
xchg
clc
call
mov
jno
jne
test
ljmp
fs
cmpsl
loope
in
test
scas
xchg
mov
aad
jae
xchg
jecxz
adc
rclb
mov
arpl
cmpl
mov
or
mov
cld
loope
dec
push
aad
or
js
dec
pop
fbld
clc
cli
gs
or
enter
paddsb
dec
pop
push
popa
sub
cld
xor
mov
mov
sbb
rorl
adc
sbb
sbb
fstpl
mov
or
pop
xchg
repnz
inc
push
repnz
frstor
cld
mov
dec
dec
movsl
inc
sbbl
pusha
aas
pcmpeqw
sub
push
inc
cli
dec
mov
lock
mov
xor
clc
push
add
push
mov
lret
add
lahf
xor
out
lahf
dec
cmp
std
mov
mov
adc
pop
lods
sahf
enter
pushf
sub
xor
int
lahf
fdivrp
shlb
pop
adc
lret
int3
test
cmp
ljmp
jge
repnz
jne
push
fucom
loop
xchg
adc
aam
cmp
mov
lcall
push
mov
addl
xor
xchg
pop
jo
pop
cmc
movl
sti
xlat
sbb
addb
rcll
mov
push
mov
shrb
sub
nop
mov
inc
mov
gs
loope
mov
scas
jns
sub
mov
and
gs
daa
or
push
jo
or
data16
add
add
add
add
cwtl
push
dec
outsb
test
or
pop
sti
or
mov
xchg
imul
pop
and
setb
in
mov
lods
pop
movsb
out
sbb
fistps
add
mov
cmpsl
test
jns
inc
mov
ficomps
lods
mov
push
add
mov
sub
jne
xor
mov
push
jae
push
lret
fstpt
inc
or
cltd
or
ja
jns
imul
lods
fcmove
loopne
popa
loope
mov
int
pop
arpl
in
cli
cmc
adc
pop
jno
push
adc
int
repz
pop
sar
xchg
outsl
or
ljmp
push
adcb
testl
stos
dec
out
sbb
dec
orl
loopne
push
pop
adc
sub
cld
lds
inc
insb
mov
mov
out
and
sub
ret
orb
cltd
mov
fcompl
jns
mov
inc
ret
dec
aam
add
xlat
rcrl
and
xor
leave
pop
adc
add
mov
and
adc
xchg
adc
leave
outsl
sti
loop
out
loope
jl
arpl
mov
nop
mov
inc
cmp
dec
sub
or
sahf
fs
or
sub
xchg
cmp
enter
sbb
lea
mov
or
insl
mov
pop
hlt
jae
pop
push
push
ds
into
enter
inc
cmp
ret
pop
int
push
pop
xchg
in
jne
cmp
subb
sbb
adc
arpl
int
ret
sbb
jno
push
sbbb
outsb
mov
sbb
pushf
mov
aas
dec
lahf
mov
jp
mov
add
add
add
cmc
sub
push
jge
mov
xor
cmp
fs
jmp
out
cmpsb
push
ficomps
lods
push
shll
jno
cmpsb
xchg
ljmp
pop
outsb
pop
push
mov
aas
scas
stc
xor
xor
sub
sub
mov
mov
pop
out
nop
decb
xor
cltd
add
out
sub
and
ds
mov
add
subb
lcall
repz
lock
adc
mov
jnp
pop
addr16
pop
dec
loopne
sbb
jl
repnz
jge
jecxz
add
add
fisttpll
sbb
shll
inc
push
adc
jecxz
enter
lret
loop
jbe
es
cmp
rcr
fstpl
cmp
or
nop
push
fdivrl
xlat
aam
and
imulb
mov
dec
ja
std
inc
xchg
js
jp
or
shl
xchg
inc
stos
in
fbstp
orl
mov
into
cmc
or
lds
sbbb
fnstcw
sub
es
sub
mov
xor
push
xchg
and
test
fcmovnu
sbbb
bound
jb
mov
mov
lods
push
cmpsl
cmpsb
loop
ja
dec
push
sbb
sarl
stc
pop
inc
lahf
clc
stc
inc
xor
repnz
mov
bound
lea
imul
imul
fmul
scas
pop
nop
cmp
lret
mov
incl
aaa
push
push
xor
cmp
stc
inc
lret
push
lret
pop
push
cmp
push
mov
pop
xor
jnp
shlb
imul
es
divb
sub
mov
mov
cmpsb
mov
mov
mov
add
add
add
sub
jmp
mov
xchg
lret
test
sbb
gs
repz
mov
fmuls
cmp
cmp
mov
mov
das
and
mov
push
and
popa
and
xchg
je
shr
xlat
stc
mov
cmp
inc
into
sub
roll
fdivs
jp
stos
xchg
push
jno
mov
xor
ror
mov
mov
popa
mov
cld
push
push
icebp
inc
stc
mov
adc
mov
cmpsl
sbb
je
jecxz
lods
test
jecxz
inc
cmp
and
xchg
sub
mov
in
cwtl
rolb
dec
jne
push
dec
dec
test
xor
shlb
or
push
aam
inc
push
push
dec
mov
mov
pop
insl
adcb
aam
add
ds
mov
pop
daa
pushf
cmp
dec
pop
jg
stc
and
pop
mul
lret
into
pop
xchg
adc
mov
outsl
jo
cli
adc
stc
cmp
icebp
sub
daa
aam
pop
xor
fsubl
adc
and
pop
rorb
mov
mov
dec
scas
mov
pop
int
jg
push
outsl
cmpsl
mov
shlb
movsl
test
stc
enter
mov
push
outsl
dec
jp
fwait
and
xchg
movsb
and
movsl
int
and
movsl
mov
mov
push
imul
inc
icebp
push
popf
xor
jae
out
cmp
lock
imul
push
cltd
xchg
pop
mov
in
mov
fcompl
xchg
add
xlat
mov
lret
jb
daa
jae
xor
testl
jbe
jle
jp
imul
jnp
adc
movb
or
lcall
mov
sbb
add
sub
mov
and
ret
cmp
fstpt
jns
dec
jg
push
loop
scas
push
clc
dec
fimuls
arpl
add
outsb
ret
lret
mov
xchg
push
int3
xchg
xchg
ljmp
std
xlat
aaa
jno
movsl
aad
sbb
in
clc
add
scas
mov
dec
pop
pop
mov
adc
pop
imul
xlat
movsb
inc
outsl
cmc
or
in
adc
push
rcrb
cmpsb
es
xchg
inc
stos
xlat
lret
stc
pop
imul
mov
push
test
sbb
mov
pusha
mov
mov
repnz
xor
push
test
mov
subb
sub
insl
sbb
cmp
mov
lods
scas
cmpsl
xchg
stc
push
scas
cs
jl
mov
push
or
arpl
push
pop
pushf
cli
cld
mov
dec
sahf
retw
ret
adc
lret
mov
jno
shll
aad
or
addr16
fdivrs
ss
test
outsl
xchg
mov
lea
popf
outsl
mov
push
sbb
mov
incl
cmp
sub
or
jecxz
fidivrs
jo
dec
lods
lods
sub
sar
clc
scas
pushf
mov
call
aaa
xchg
mov
lret
js
push
fdivr
lret
pop
dec
rcll
xor
and
test
pop
scas
sbb
dec
cmp
pusha
jae
mov
mov
lods
push
leave
xchg
mov
insb
out
ret
jle
or
adcl
mov
or
cs
or
lock
jbe
addr16
dec
jecxz
and
repz
mov
add
call
call
cmp
popf
add
add
lahf
pop
pop
inc
popf
js
push
and
xor
or
sbb
scas
mov
add
push
push
push
xor
jae
leave
add
cmpsb
sbb
cmc
mov
fisttpl
mov
test
push
inc
add
mov
cs
cmp
cmp
sbb
cmp
and
lahf
push
cmp
push
or
push
pop
mov
xor
and
in
lahf
jo
xchg
xchg
je
dec
orl
repz
test
mulb
mov
ja
pop
adc
gs
dec
addr16
cmpsb
sti
test
dec
and
in
mov
adc
loop
or
js
push
mov
xor
mov
test
call
sub
and
dec
ret
cmp
or
mov
adc
lea
mov
inc
sbb
iret
shll
cmp
push
or
inc
movsl
or
xor
inc
jno
shlb
aaa
stos
cmp
int
ja
ss
bound
pop
xchg
clc
sbb
imulb
jo
decl
xlat
lahf
loop
add
scas
adc
xchg
xchg
fldcw
in
pop
pop
lock
pop
lea
or
xlat
ds
xor
inc
aas
sub
xor
dec
xchg
push
inc
mov
pop
or
das
pushf
scas
dec
out
decl
xchg
inc
sub
pusha
xchg
scas
pop
mov
je
loop
mov
notb
testl
out
mov
jl
mov
mov
xor
pop
lret
sbb
in
aam
sub
jno
out
inc
jg
adc
mov
xchg
in
loope
adc
xor
mov
push
movsl
jnp
mov
pop
test
repnz
push
fdiv
lret
sub
jo
push
insb
pop
or
popf
clc
popf
in
std
xchg
lret
or
xchg
jmp
add
add
add
cld
jp
jl
ljmp
xchg
lock
add
jns
push
dec
xor
push
std
pop
notb
xor
fs
sbb
es
mov
xchg
ret
mov
push
jns
je
sub
xor
js
push
cld
rorb
mov
push
popa
adc
lock
add
cmp
mov
sahf
sar
in
jecxz
push
gs
mov
inc
jmp
popf
adc
loop
dec
outsl
jnp
push
daa
cli
cmp
dec
sbbl
push
aad
dec
mov
push
ss
loope
or
shl
xor
sbb
ret
push
shll
mov
mov
int
addr16
inc
inc
out
mov
orl
mov
fstl
sub
jae
jecxz
out
mov
cmpl
iret
mov
cwtl
aad
sub
bound
mov
adc
and
bound
fwait
out
xchg
push
jo
roll
pop
pop
inc
mov
cmp
aam
mov
insb
sbb
fs
pop
aam
cmp
inc
push
pop
decb
add
js
ja
fisubrs
sub
outsb
shlb
out
lea
outsl
mov
insb
pushf
add
andb
push
mov
push
out
dec
xchg
nop
and
mov
mov
test
mov
xchg
add
test
mov
fyl2xp1
imul
andl
jge
xor
scas
test
jge
push
mov
adc
adc
jle
repnz
pop
jb
push
mov
std
sub
xor
out
jl
jnp
add
mov
cmpsb
mov
rolb
add
out
add
xchg
cli
test
test
push
push
stos
and
iret
mov
pop
icebp
pop
dec
adc
xchg
fsubr
adc
push
pop
mov
movsb
loope
mov
cltd
jl
icebp
push
fdivs
xor
xor
ficomps
sbb
or
jp
push
popa
lcall
xlat
sbb
inc
outsl
imul
sub
jb
mov
mov
pop
add
fadds
xchg
dec
lods
xchg
test
jns
mov
ret
dec
pop
jo
jns
enter
rclb
cltd
xchg
lcall
mov
xor
pop
xor
xorl
sub
mov
cmp
lock
pop
rorl
aas
xor
xor
pop
push
and
shrb
sub
mov
jle
jae
jbe
adc
cmp
jl
inc
decb
sbb
mov
pop
and
jp
or
add
cmp
jp
test
sbb
or
or
cmpsl
or
pop
add
aad
imul
add
les
cmp
sub
mov
push
ds
lahf
pusha
pop
std
adc
mov
stos
pop
jmp
xor
jbe
sahf
pop
fidivs
into
xchg
ss
into
jno
push
mov
cmp
loope
lret
or
call
std
in
jp
push
aas
pop
cs
adc
push
int3
dec
add
outsb
pop
stos
daa
out
mov
loop
sbbb
or
xchg
xchg
fld
test
scas
or
push
push
xchg
lds
adc
popa
add
pop
lcall
insb
jnp
popa
mov
fdivrs
out
jbe
mov
outsl
dec
mov
add
out
add
xchg
and
jg
add
cmp
cwtl
movsb
lcall
inc
addr16
jbe
push
rcrb
sub
and
divb
shl
rcrl
lock
test
je
fs
in
jg
es
mov
imul
ror
ljmp
pusha
in
inc
inc
les
cmp
sti
punpckldq
negb
sub
push
adc
push
dec
mov
divl
subl
or
rcrl
xor
mov
dec
sub
inc
jbe
sub
xchg
sbb
cmp
int
inc
push
sub
call
adc
dec
xchg
imul
cmp
mov
xor
mov
sub
jo
idivb
test
mov
out
push
pusha
imul
mov
or
cmpsl
addr16
and
enter
mov
mov
push
test
mov
push
mov
mov
mov
call
push
add
cmp
and
mov
inc
xor
and
cli
jmp
push
stos
out
leave
loop
in
mov
cwtl
push
push
sahf
dec
pop
sub
movsb
mov
int3
mov
cltd
pop
jle
jbe
cmpsl
outsl
ljmp
xchg
movsl
aam
aam
sbb
jl
jl
pop
pop
mov
fstpl
lcall
rcrb
mov
js
lods
adc
jae
adc
repz
test
xlat
xchg
xchg
int
mov
jg
test
iret
aad
test
test
push
shld
popf
out
pop
mov
fistpll
out
aaa
ljmp
add
mov
das
int
add
dec
or
fldl
fldl
mov
push
jnp
sbb
add
add
pop
or
aas
mov
in
ret
movl
lods
std
pop
js
dec
sti
sub
or
add
mov
stos
adc
js
jmp
xor
pop
fisttps
lret
adc
mov
insb
popa
inc
fcomps
dec
adc
fsts
cwtl
outsb
fwait
xchg
lahf
daa
lret
adc
int
shlb
mov
jo
mov
rcll
loop
cmpsl
push
add
mov
lea
daa
decb
sbb
jbe
fadds
mov
aam
push
aad
and
mov
lds
out
xchg
shrl
sti
mov
lret
int3
jo
push
movsl
repz
sub
or
aad
and
cmp
not
insb
xlat
xor
jns
jnp
jmp
aas
lods
lahf
imul
lea
mov
adc
dec
rcrb
and
ja
jg
sahf
sub
inc
repnz
ja
and
cmp
leave
mov
in
fstps
insl
push
mov
test
add
movsb
mov
adc
fsubrl
mov
test
xchg
push
ss
sbb
mov
push
dec
fists
or
shrb
test
sub
inc
lock
sub
sub
cmp
gs
cmpb
mov
fmull
add
mov
mul
cmc
ficomps
gs
rcl
ljmp
jne
lea
dec
mov
lods
jge
pop
push
jb
jb
cmpsb
or
inc
js
cmp
sub
lods
and
xlat
es
out
xlat
sbb
mov
push
lret
pop
inc
adc
jb
ds
je
sub
inc
and
sub
in
xchg
in
mov
xchg
pop
sahf
add
inc
dec
mov
xchg
adc
test
add
out
add
mov
repz
int
lods
cltd
cld
xor
jno
mov
push
add
out
loopne
push
jl
fidivrs
testb
mov
xor
xlat
pop
data16
pushf
in
pop
adc
xchg
mov
data16
sbb
jno
in
sbb
dec
std
xchg
inc
out
lret
xchg
aam
jl
pop
pop
icebp
and
cmpsl
test
gs
ljmp
out
lcall
mov
sti
cmp
inc
test
cmp
test
andb
mov
xchg
add
dec
cmp
jp
adc
cmp
pop
push
ficoml
cmpsl
mov
dec
push
sub
xchg
sub
les
insb
cmp
dec
dec
xchg
js
bound
out
outsb
jo
inc
es
jns
aas
xlat
inc
in
rol
popa
mov
and
repz
sbb
mov
cmc
and
pop
mov
jge
dec
inc
inc
loopne
mov
mov
jge
pop
movsl
lock
jns
adc
mov
xchg
jle
mov
loope
mov
lds
stc
mov
cmp
sub
pop
and
cmp
stos
daa
xchg
shll
std
jo
inc
mov
adc
mov
in
adc
sbb
ds
js
ss
add
lahf
mov
jecxz
sbb
mov
inc
xor
xlat
in
add
rcll
jno
imul
push
iret
dec
pushf
jbe
je
in
sahf
adc
dec
loop
jo
pushf
lods
icebp
jbe
adc
xchg
imul
sub
jg
mov
aam
push
js
icebp
push
push
push
sbb
loopne
mov
pop
jmp
or
mov
jb
mov
add
xlat
and
aaa
std
out
test
inc
insl
inc
sarb
lds
add
add
add
mov
arpl
and
imul
adc
dec
nop
test
mov
cmp
je
and
sub
dec
mov
int
test
push
popf
push
out
or
xor
xchg
adc
in
mov
pop
div
pop
and
pop
mov
xor
and
in
pop
or
ret
push
push
sub
adc
fsubp
adc
leave
pop
sub
and
inc
imul
loop
cmp
or
arpl
push
pop
out
cwtl
or
xchg
pushf
adc
bound
adc
dec
mov
aad
mov
sub
pusha
adc
dec
mov
lds
lcall
push
movsb
mov
xor
pop
push
push
clc
mov
cmc
inc
out
push
cwtl
mov
jg
or
sbb
jne
xorb
insl
and
push
es
loope
xor
cmp
adc
fnstcw
fsubl
in
jo
mov
test
mov
mov
fdivrs
and
in
movlps
movsl
or
sub
int3
stc
mov
outsb
jge
stos
psubd
dec
fstpl
inc
xchg
data16
mov
repnz
adc
and
mov
sub
pop
inc
je
aaa
or
xchg
jno
dec
decb
pop
adc
pusha
push
sub
dec
mov
les
adc
aam
pop
aam
jmp
cwtl
insl
decb
out
out
xchg
aad
xchg
mov
xchg
fisttpl
mov
pop
mov
gs
adc
jl
mov
shrb
in
sbb
sub
flds
inc
dec
nop
int3
popf
fistps
aad
pop
jns
inc
sbb
add
add
add
cltd
jp
stos
adc
jns
push
jnp
scas
ja
push
and
mov
mov
xchg
adc
sbb
es
pushf
rolb
inc
jne
pushf
frstor
cmc
xor
out
iret
cwtl
int3
data16
mov
mov
cli
pusha
dec
sub
jo
lcall
sub
fmul
sahf
test
test
mov
adcl
out
sub
je
mov
mov
and
test
imul
xbegin
xlat
xchg
scas
pop
mov
sbb
jo
ja
mov
cmp
fwait
loopne
mov
mov
stc
sbb
push
leave
dec
loopne
mov
aam
mov
xchg
ret
int3
cmp
mov
outsb
sbbl
mov
ret
ret
sbb
jns
fsubs
xchg
cmpsb
pop
popa
xchg
sahf
adcl
fisubl
hlt
sbb
es
into
stc
pusha
iret
mov
push
push
pop
frstor
ret
jo
sub
ja
mov
shll
out
adc
ficoms
mov
dec
xor
shrb
fdiv
je
gs
repnz
inc
stos
pop
sti
jb
xchg
mov
sbb
outsb
je
je
mov
in
nop
and
mov
push
ss
cmc
imul
cs
or
test
int
lock
pop
mov
cmp
cmpsb
movsb
pop
loope
and
xchg
loop
push
push
lahf
jnp
es
pop
jg
cli
push
and
pop
xor
cmp
xlat
arpl
adc
stos
call
js
shufps
cmpsb
out
in
push
fsubrs
add
jae
lcall
add
loopne
cli
mov
ret
ds
add
adc
leave
add
out
add
cmp
mov
sti
inc
jne
push
sbb
mov
pop
or
out
adcb
ror
loop
fimull
repz
push
loop
roll
add
sbb
push
rcll
xlat
lock
cmc
xchg
jbe
loope
xor
filds
mov
std
push
ficompl
test
mov
xchg
cmp
push
sti
js
and
xor
inc
fldt
sub
dec
das
xchg
jl
mov
sbb
rclb
or
lahf
push
mov
rcrl
ficomps
or
ret
addr16
cwtl
pop
and
inc
mov
arpl
ljmp
mov
xor
or
loop
push
inc
dec
sub
ret
add
jns
or
jp
push
xor
dec
dec
stc
sub
and
stos
sbb
add
dec
sub
loope
sbb
inc
leave
mov
cmp
pushf
mov
in
mov
bound
loop
movsb
and
repnz
andl
push
pushf
testl
scas
das
mov
out
inc
pop
imulb
push
outsb
data16
insl
mov
std
dec
pushf
jnp
pop
xor
cmpsl
mov
rorl
adc
lock
popa
insl
ret
test
pop
xchg
out
std
test
fadds
xor
test
cmp
stos
ss
cmp
sbb
aaa
bound
and
mov
add
sbb
inc
mov
dec
aaa
sub
sbb
mov
pop
push
xchg
lahf
inc
in
lea
mov
enter
scas
add
popa
inc
xlat
stc
aad
or
xor
mov
lahf
add
int3
inc
fdivrp
out
ja
xor
stos
out
cmp
and
add
out
add
iret
insl
imul
stos
dec
add
rclb
push
dec
xchg
inc
lods
sahf
fcomps
push
jge
rcll
cmpsb
adc
and
jbe
ja
or
or
ljmp
loop
xor
xchg
mov
inc
jbe
xchg
pop
scas
add
jmp
pop
lea
mov
sbb
das
int
pop
xor
sub
pop
xchg
in
xchg
and
in
push
jnp
jae
imul
jmp
shrl
rclb
aas
lret
or
xor
add
leave
dec
aas
pop
pop
shr
lock
inc
sbb
std
leave
xchg
sbb
or
and
pop
int3
ds
or
sbb
pop
jb
jns
xchg
cmc
dec
btr
xchg
mov
into
mov
mov
sub
rcrl
bound
inc
or
dec
rcrl
sbb
test
bound
scas
scas
sbb
cmc
lods
stos
inc
dec
out
ret
fdivl
iret
push
mov
jns
mov
cld
xor
hlt
in
xor
xchg
gs
cmpsb
aam
sahf
dec
sti
mov
xchg
xchg
dec
mov
sahf
mov
xor
jge
mov
xchg
imul
jae
inc
add
leave
movsb
imul
add
add
xchg
add
jne
sahf
std
add
jl
cmpsl
cmpsl
outsb
aam
cwtl
ja
jo
mov
sub
push
adc
cmp
icebp
xchg
scas
sub
dec
inc
or
pop
cmp
mov
fmuls
sub
cmc
mov
jbe
js
and
adc
clc
push
das
pop
notl
ret
sub
fmuls
cli
xchg
xchg
sbb
sub
or
je
xor
push
decb
int
add
add
add
mov
push
dec
lds
sbb
inc
insw
cmp
xchg
out
stos
frstor
nop
divb
push
bnd
xlat
jbe
cmp
jno
xchg
out
arpl
lret
je
addl
pop
jecxz
mov
fmuls
and
xchg
mov
clc
outsl
je
inc
int
aaa
ret
test
lret
cmp
aam
push
iret
jge
shl
xchg
jge
fistpl
mov
or
xor
shrb
nop
repz
mov
scas
imul
inc
xchg
gs
jne
shll
mov
outsl
in
cmp
xchg
dec
repnz
sahf
pop
call
ljmp
clc
pop
jge
js
js
mov
mov
mov
inc
and
push
movsb
ret
add
mov
out
fstpt
and
stc
pushf
mov
test
frstor
mov
movsl
xor
sbb
mov
repnz
inc
adcb
inc
pop
mov
xchg
sbb
mov
lods
cmp
lret
ret
jns
sbb
out
test
jecxz
mov
fcmovu
into
test
xchg
jns
xor
insw
test
cmp
cmpsb
lret
push
lret
add
jecxz
loope
inc
jo
mov
jnp
xor
or
adc
insl
shrb
cli
cwtl
mov
jbe
mov
pop
pcmpgtb
andb
test
xor
nop
or
dec
jmp
pop
xchg
push
sub
test
stos
cmp
popa
xor
push
daa
iret
pop
pop
ds
sub
fstpt
push
outsb
das
jae
pop
daa
and
cmp
loopne
add
xor
cmp
stc
stos
repz
into
add
out
add
push
fcmovnu
and
push
sub
popa
add
pop
aas
or
rorl
mov
fld
lcall
dec
dec
sub
pop
std
add
gs
nop
stos
mov
push
clc
shrl
les
dec
imul
dec
dec
add
daa
insb
jl
shl
aam
pop
sbb
or
sti
cmpsb
movsb
or
adc
addr16
xor
xor
xchg
addb
mov
pusha
lret
mov
jl
mov
repnz
push
test
inc
push
stos
push
xor
jne
pop
out
mov
cltd
scas
out
add
std
sub
fsubrl
in
mov
xchg
inc
cwtl
pop
pop
lahf
pop
add
std
cmc
sub
push
and
lods
arpl
mov
adc
inc
cmp
stos
fadds
xchg
jmp
mov
add
mov
clc
in
xor
lcall
cmc
insl
sahf
cmpsl
mov
xchg
out
les
fnstcw
mov
mov
xchg
xchg
testb
mov
or
mov
pop
push
xchg
push
jmp
sub
and
stos
mov
dec
jbe
pop
insb
les
test
fucomi
fsts
lock
imul
pop
xor
in
pop
add
pop
pusha
jne
scas
sbb
xlat
dec
add
push
inc
and
int3
ret
mov
lods
popa
pop
mov
xor
je
push
sub
daa
clc
mov
addr16
sub
jge
cli
add
push
fdiv
ret
or
dec
sti
xor
clc
add
lea
popa
xor
lcall
cmpsb
push
pop
pusha
fcmovnb
jno
aad
sbb
xor
pop
sub
in
dec
pusha
dec
pop
cmp
add
dec
push
ret
mov
jge
shrb
test
rolb
add
add
add
adc
mov
call
sbb
add
mov
add
xor
jg
dec
mov
jp
out
sbb
call
lret
and
mov
push
cmp
fistps
add
bndldx
lahf
pop
rcrl
hlt
jmp
add
cs
mov
push
ret
fdivs
aam
push
sbb
imul
mov
ds
jg
cmp
mov
push
pop
add
xor
sbb
sarl
popa
ret
and
sub
fcomip
add
pop
jnp
jnp,pt
ret
pusha
mov
dec
xchg
and
repz
out
push
dec
popf
cmp
mov
push
pusha
repnz
nop
inc
out
mov
push
pop
jne
insl
xchg
repz
xor
and
xchg
cmp
jmp
aad
push
mov
pop
out
divl
lock
xchg
pop
into
dec
push
dec
sti
shl
or
mov
or
subb
and
mov
mov
mov
in
clc
add
cwtl
xchg
jne
cmc
leave
jo
test
sbb
ss
enter
sbb
mov
jnp
or
outsb
cpuid
lds
dec
cli
ror
mov
cmc
movsb
insb
ficompl
jmp
mov
sbb
test
stos
push
mov
outsb
mov
ja
pop
jns
and
xchg
stc
aam
lock
sub
scas
ret
sahf
lahf
xor
bound
sarb
jno
mov
pusha
pusha
outsb
adc
movsl
dec
mov
test
push
fwait
mov
cmc
test
loopne
dec
or
push
sbb
ljmp
and
inc
mov
sbb
in
jmp
lahf
jle
dec
sub
test
adc
add
add
ljmp
aaa
out
fcomi
aas
push
pop
push
sub
clc
cmp
shlb
or
sub
test
xor
add
and
mov
idiv
cld
pop
roll
xor
pop
dec
add
jge
lock
vandpd
dec
mov
jno
add
mov
and
dec
xchg
iret
test
iret
adc
sub
repz
bound
add
add
mov
in
mov
pop
out
xchg
inc
add
data16
div
mov
ret
mov
adc
lret
test
jae
outsb
pop
fcomps
or
loope
div
and
push
shlb
sbb
jp
stc
sub
iret
adc
cmp
ds
pushf
lahf
fistl
push
jns
inc
lcall
pop
add
push
cmpb
xlat
roll
popf
hlt
jae
cmp
jbe
adc
push
scas
in
call
mov
and
ljmp
xor
push
ror
adc
aas
and
sub
in
push
sub
outsb
sbb
shrl
pop
xorb
cmp
jno
cmp
sub
mov
sub
pop
lds
sar
popf
popa
jge
sbb
cmp
pop
cmp
popf
cmpsl
cmp
push
adc
mov
inc
loope
pop
shll
xor
aas
inc
rclb
inc
sbb
enter
mov
and
stc
enter
jae
mov
jle
in
mov
test
xchg
pop
sbb
rcll
fistpl
fstp
fildll
xchg
arpl
add
mov
incl
adc
lret
add
out
add
arpl
pop
repnz
push
xchg
dec
sub
or
mov
in
xchg
jmp
testb
fwait
inc
pop
cwtl
jb
cmp
pop
inc
add
lret
movsl
cmpsb
test
lods
or
inc
lods
cs
and
and
push
inc
push
stc
push
mov
xchg
mov
jnp
sbb
mov
dec
stc
jbe
inc
sbb
fs
sub
mov
inc
nop
jp
inc
rcrl
or
lret
jge
std
sti
mov
ds
movsl
or
jns
das
decl
enter
inc
dec
loop
mov
pop
sub
call
mov
cs
cmc
cmp
mov
inc
jae
stc
notl
push
pop
xchg
mov
jge
push
xchg
mov
sub
pop
loopne
push
xchg
iret
inc
cmp
add
mov
roll
sub
xchg
or
movsb
test
out
in
out
xchg
jb
repnz
cmp
adc
stos
push
movsb
sub
rolb
cmpsb
cs
xchg
out
cli
xor
std
add
sarb
iret
push
loope
mov
xchg
sub
out
nop
test
xchg
pop
push
mov
shr
mov
rcl
add
imul
and
fwait
gs
push
shl
repz
mov
scas
bound
push
push
jnp
pop
test
pushf
jb
push
daa
je
les
insl
leave
add
aas
ja
icebp
lret
mov
loopne
flds
orb
stc
mov
mov
mov
out
bound
rorb
jg
jne
iret
cmovle
stos
fistl
jae
jnp
lret
cld
adc
fs
and
add
add
add
aad
and
push
iret
in
jo
pop
call
add
js
or
pop
and
jp
adc
aam
add
out
mov
adc
xchg
xor
jnp
mov
add
pop
imulb
pop
fcomp
aaa
xor
in
movsl
xor
div
pop
or
addl
into
stos
addb
outsl
add
dec
cs
pop
pop
outsl
xchg
inc
mov
imul
outsb
arpl
clc
les
push
in
add
push
jmp
dec
cmp
dec
mov
inc
inc
xchg
mov
add
imul
sub
movsl
out
popf
data16
dec
mov
ds
xchg
mov
dec
fcoms
xor
adc
adc
nop
dec
lcall
jecxz
rolb
js
out
daa
dec
shrl
jbe
hlt
push
out
loope
xor
test
jb
fnsave
loop
loopne
ja
aaa
nop
jmp
mov
and
xchg
adc
mov
lcall
ficoms
cwtl
jo
fsubrp
xor
mov
push
aad
or
xor
imul
movsl
cwtl
sub
and
insl
jns
leave
xlat
xor
test
or
jae
std
jbe
push
addps
adc
xor
mov
add
mov
mov
shrb
in
sbb
jmp
jnp
push
fwait
cmpl
xorl
arpl
push
pop
clc
inc
syscall
xchg
xchg
fstpl
out
cmp
xor
or
jb
out
scas
inc
xlat
jl
xor
cmc
mov
fsubrl
movsl
inc
scas
push
adc
add
in
jp
jp
in
xor
xor
sbb
dec
hlt
jb
add
out
add
in
add
adc
sbb
pop
je
mov
lea
inc
jno
mov
addr16
sbb
stos
pop
inc
arpl
xchg
add
pop
icebp
test
dec
push
in
or
pop
jo
sti
mov
ss
loopne
jp
pushf
jg
enter
mov
mov
xchg
adcl
mov
int3
push
pop
mov
scas
fcoms
pusha
sar
out
mov
push
pop
inc
inc
jle
mov
push
int
ja
stc
sbb
mov
sub
divl
dec
cld
mov
fwait
push
dec
xchg
in
hlt
lcall
mov
or
aaa
dec
mov
add
lea
sub
leave
sbb
sub
mov
cmpsb
sub
cmpsb
push
jmp
cmp
loopne
mov
xchg
sbb
mov
sub
adc
pusha
and
sub
aam
push
push
xor
push
pop
or
cli
out
imul
mov
mov
pushf
xchg
imul
pop
test
mov
xchg
test
xor
sti
inc
mov
aad
cwtl
jl
sub
fcmovnb
cltd
jo
cwtl
lcall
dec
into
push
mov
mov
fcoms
loopne
xchg
inc
sbb
lock
mov
dec
out
mov
inc
pop
adc
mov
out
adc
push
adc
lcall
inc
pop
pop
jp
sbb
dec
out
out
pushf
int3
add
frstor
test
mov
or
fadds
jl
xor
mov
sbb
pusha
mov
push
and
mov
sbb
fildl
push
mov
cld
cmp
mov
and
sub
or
mov
xchg
jns
add
imul
lahf
loope
adc
fld
inc
jns
fiaddl
add
add
add
outsl
daa
adc
fsubrs
rcll
aaa
sub
mov
xor
adc
mov
lahf
pop
sbb
addr16
jns
mov
xor
fwait
sub
out
cli
ljmp
fnstcw
mov
pusha
jnp
sbb
cmp
inc
inc
sub
jne
sbbb
push
pop
js
xchg
lea
jecxz
js
repnz
mov
pop
mov
xchg
mov
xchg
mov
pop
pop
rcrl
jb
pop
mov
test
fs
rcr
cmp
or
push
xchg
fiadds
xor
call
mov
jle
sbbb
fldcw
xchg
rorb
icebp
mov
pop
fildl
stos
cld
sub
outsl
dec
ss
mov
cmpsb
inc
inc
insb
inc
push
sbb
sub
cmp
push
jmp
adc
push
sub
ror
jb
stos
add
repnz
aas
shrl
and
fildl
fmuls
lar
mov
out
loopne
mov
cmp
mov
cmp
pop
jle
push
mov
or
scas
mov
into
fmull
push
push
xchg
pop
mov
aas
nop
fisttpll
xor
out
jl
lea
inc
xor
cs
dec
push
paddq
add
jle
mov
sbb
push
out
lcall
cli
enter
cmp
in
jle
sbb
mov
mov
pusha
cmp
out
pop
ret
cmpsb
and
lret
daa
lods
mov
fistps
dec
lods
inc
ss
adc
fsub
xchg
mov
int
nop
test
and
fisttpl
sti
ja
lret
cmp
hlt
add
out
mov
idivl
sti
and
add
add
add
ret
in
lods
and
and
stc
push
rclb
test
loope
sbb
lds
inc
mov
xchg
sub
sbbl
arpl
frstor
dec
mov
cmc
sub
push
pushf
enter
mov
jle
hlt
rclb
movsb
scas
dec
fnstsw
sub
pusha
cmpsl
adcb
test
mov
std
and
xor
and
shll
xor
push
xor
xchg
cmc
or
pop
dec
add
lods
jae
jp
sub
inc
xchg
imul
iret
jmp
xchg
sub
lea
adc
iret
xchg
stc
outsl
fisubs
dec
jecxz
pop
ljmp
add
pop
movsl
adc
xor
call
jbe
popf
loope
outsl
inc
sti
in
out
pop
push
adc
addr16
loopne
sub
arpl
pop
or
test
jecxz
cwtl
ja
mov
pop
cmp
sbb
loopne
pop
xchg
out
mov
xor
pushf
mov
mov
popa
sbb
mov
lea
sbb
cmp
xor
push
clc
or
mov
bound
push
imul
lret
mov
test
jne
add
loopne
xorb
fiaddl
or
mov
xorl
cwtl
cmp
rclb
and
bound
mov
push
push
pop
add
test
or
addr16
adc
pop
outsb
xchg
xchg
out
xor
js
fwait
in
push
fmuls
add
adc
and
fcoml
push
mov
sbb
or
or
cmp
sbb
imul
mov
adc
cmc
loopne
fiadds
add
add
add
mov
sbbl
sbb
xchg
or
mov
jno
mov
cmp
imul
cmpsl
orl
jecxz
push
push
lahf
ss
jle
lock
mov
pop
or
pop
pop
xlat
adc
push
pop
mov
imul
ret
ja
pusha
push
fcomps
push
push
fildl
push
rol
int3
lret
mov
xor
lods
in
cwtl
insl
adcb
jecxz
dec
push
xor
lret
mov
out
dec
jl
add
and
mov
popa
xchg
insl
out
pusha
cmp
adcl
call
push
push
ja
aam
in
or
or
decl
cmpsb
dec
repz
push
push
lahf
aaa
cmp
jge
dec
or
push
ret
mov
and
mov
xchg
fs
or
sbb
mov
sbb
out
and
sbb
push
repnz
and
stos
mov
icebp
pushf
sbb
aaa
jo
sbbb
lcall
loope
loop
stos
add
ror
jno
dec
xor
shrl
and
lods
xor
xchg
adc
inc
lea
jnp
adc
scas
or
outsl
mov
mov
push
out
adc
cmp
fld1
rolb
cs
pop
mov
imull
pop
add
mov
xor
dec
gs
mov
repnz
push
adc
out
xor
pop
or
adc
sbb
mov
mull
outsl
lods
dec
sbbl
insl
int3
pop
mov
mov
addl
inc
outsl
rclb
cli
dec
dec
push
imul
scas
shll
mov
push
loopne
add
add
add
add
jb
ds
decl
and
ss
sub
pop
ds
and
jecxz
test
mov
lahf
in
xchg
mov
out
adc
or
fistps
or
mov
cmc
add
or
loop
subb
mov
inc
push
dec
fmul
xchg
aas
sarb
inc
xchg
leave
enter
pusha
mov
mov
popa
mov
mov
xchg
jmp
das
cli
sub
xchg
pop
test
loopne
mov
fcoms
inc
push
push
push
outsl
sbb
int3
stos
lret
adc
out
jl
es
rcrb
xchg
xor
arpl
or
sbb
pop
jle
dec
fsubrl
lock
ret
aad
jp
push
aas
jge
hlt
pop
push
mov
pushf
and
lahf
jmp
mov
das
loope
add
jecxz
jl
inc
mov
pusha
cmp
jl
add
inc
imul
mov
add
sub
dec
sti
fcompl
movsl
enter
int
fsubrl
push
dec
xlat
pop
xlat
jmp
pop
mov
adc
mov
jp
push
mov
cld
gs
push
es
add
pop
xchg
enter
fcompl
mov
lock
repnz
repnz
mov
lret
in
xchg
mov
jbe
cmp
inc
pusha
sbb
adc
stc
ja
cmp
lock
addr16
mov
lret
orb
mov
push
fcomp
in
hlt
daa
push
not
rolb
rorb
xchg
cmpsb
out
jmp
test
or
shll
and
cmpsl
and
sub
ss
lahf
scas
cld
or
scas
jmp
arpl
pop
cmc
loope
add
add
add
test
cmp
pop
andb
sub
ds
push
pop
test
cmc
lods
rolb
call
dec
lods
test
mov
aas
push
xchg
sbb
in
cmpsb
add
mov
add
sub
call
dec
or
es
inc
into
je
leave
xchg
push
leave
sub
add
pop
cmp
test
movsb
mov
jae
cmp
jecxz
dec
ret
fstpt
testl
nop
shll
sahf
push
mov
ljmp
cli
stos
push
sbbb
mov
divb
ret
dec
add
sbb
mov
push
sahf
and
mov
xchg
fidivl
lret
ljmp
adc
cmp
aaa
or
or
add
pop
mov
mov
in
jp
sub
les
ja
and
or
pop
xor
push
in
inc
jb
int3
mov
mov
push
dec
jns
lret
mov
and
or
int3
lds
dec
hlt
ljmp
lret
jnp
mov
sbb
sub
sbb
lret
shll
adc
daa
mov
andb
push
andnps
movsl
divb
and
daa
or
jg
mov
and
jp
ret
mov
mov
insl
ja
jge
idivb
adcb
call
mov
xchg
scas
add
stc
push
in
int
add
stos
cs
push
xor
gs
popa
out
mov
cmp
stc
out
mov
xor
imul
stc
fs
push
imul
sbb
xchg
jnp
pop
cli
sub
loope
pop
shlb
sbb
test
push
imul
out
fsub
add
out
add
in
and
inc
push
repnz
and
sbb
xor
gs
push
lahf
popa
in
mov
aaa
fcompl
pop
hlt
push
imul
mov
icebp
rcll
push
sub
hlt
sub
jnp
jbe
or
add
rorl
add
sub
daa
mov
ja
rclb
stos
mov
mov
sahf
out
jecxz
mov
cwtl
mov
loope
cmp
sti
es
or
pop
push
adc
test
inc
adc
push
stos
imul
div
or
pop
loope
xchg
out
bound
leave
mov
loop
jno
and
inc
mov
fmuls
inc
adc
icebp
xchg
or
in
push
pusha
inc
loop
adc
mov
jbe
and
add
push
jns
aas
mov
jp
out
mov
aam
pop
jno
cltd
cmp
jmp
movb
fildll
cmp
jmp
pop
push
cmp
jecxz
lds
jnp
push
jnp
mov
mov
inc
inc
int3
mov
sbb
rcr
lds
sub
out
leave
ljmp
pusha
icebp
mov
sbbb
mov
pop
lahf
cwtl
xlat
add
mov
mov
mov
or
and
in
mov
inc
jne
xchg
push
int
mov
sub
jg
or
pop
adcl
fisttpl
jge
jecxz
clc
mov
inc
push
cwtl
sahf
jle
ja
inc
into
scas
pusha
adc
cmpsb
jmp
sub
lock
aad
bound
enter
std
jle
lcall
mov
das
adc
and
shlb
sbb
mov
lcall
inc
sbb
jne
and
xchg
add
imul
jl
leave
popf
lret
popf
pop
xlat
aaa
add
arpl
cmp
ret
in
add
add
add
dec
sub
mov
mov
cmp
mov
je
add
inc
lcall
inc
pop
arpl
lods
sbb
xor
xor
xchg
enter
xor
add
lahf
lods
pop
mov
out
test
add
inc
mov
bound
mov
inc
in
push
push
idivb
lods
pusha
out
xor
aas
ss
cmpb
mov
fistl
bound
out
out
es
sub
xchg
movl
lahf
pop
clc
jo
fcoms
sub
stos
push
lahf
inc
or
sbb
pop
sbb
ffreep
mov
in
and
and
lds
add
jo
inc
clc
sbb
cmp
pop
ljmp
fiaddl
jb
bound
xchg
aas
scas
mov
push
jns
xchg
icebp
lahf
test
dec
outsb
or
into
je
adcb
push
fcmovbe
clc
pop
push
sti
movsb
jle
and
sub
xor
or
pop
pop
xlat
loopne
jnp
cmp
fcomip
cmpsb
add
in
cmc
mov
dec
pop
cmpsl
movsl
loope
test
sub
sbb
dec
mov
imul
cmp
pop
xor
out
xchg
cs
pusha
push
jo
mov
pop
outsl
mov
sbb
movsb
shlb
push
sbb
jo
in
mov
add
cld
movsl
cmc
inc
aaa
sbb
inc
movsb
daa
push
lcall
xchg
out
ficomps
fidivrl
jb
bound
push
pop
push
sbb
jp
add
out
xchg
pop
mov
jne
cwtl
or
add
imul
bound
lods
dec
pusha
pop
lcall
popa
cmp
sub
push
jnp
insl
repz
inc
je
sbb
mov
sti
lcall
and
aaa
mov
out
add
lods
aad
pop
std
push
addb
and
fwait
and
gs
mov
lahf
mov
add
int3
daa
cmpsb
aad
sub
dec
loope
iret
arpl
stos
mov
xchg
cwtl
lds
and
stos
ss
pop
ljmp
pop
cmp
cmp
inc
cmp
mov
jg
outsb
sub
in
pop
out
pop
stc
leave
aas
out
gs
bound
add
out
xor
adc
fcompl
jle
mov
in
outsb
fsub
lret
shll
jnp
adc
lods
cmp
inc
loope
push
mov
push
xchg
popf
int3
inc
xchg
pushf
mov
stc
ret
add
push
push
ret
insl
inc
ja
sahf
test
push
cmc
push
jge
das
negb
fs
int3
loope
enter
jmp
pushf
and
cmpsb
das
or
mov
repnz
or
push
ret
inc
jp
lods
aad
aaa
jmp
mov
xchg
sub
test
push
in
cmp
nop
cmc
mov
fs
lods
inc
or
inc
cltd
cmp
and
mov
sti
arpl
subl
push
cmp
lcall
cwtl
lods
push
addr16
out
out
das
jmp
pop
add
jp
jmp
fwait
popf
push
in
xchg
mov
mov
xor
pop
jns
loop
dec
je
std
xchg
hlt
and
frstor
xchg
adc
loop
cmp
dec
xchg
enter
stos
stos
fstl
xchg
xchg
push
inc
sbb
negb
xor
add
mov
jge
sbb
or
hlt
adc
sub
js
cld
ret
inc
push
or
aaa
and
int
shll
jnp
data16
dec
imul
xchg
jmp
add
out
pop
or
pop
js
test
jae
fcmovu
lcall
sahf
pop
pop
push
push
mov
add
popa
outsb
lret
mov
push
mov
dec
mov
adc
stos
jle
aam
sar
pop
mov
fisttpll
mov
clc
xor
adc
xorl
rcl
dec
mov
std
das
push
jg
imulb
and
jo
mov
pop
adc
ret
cmp
lock
test
pop
mov
adcl
mov
int
or
enter
les
es
and
inc
jne
pop
add
lea
pop
in
je
nop
popf
xchg
pop
xchg
das
call
mov
cmc
mov
outsl
sub
std
or
jbe
sub
sub
xchg
push
das
and
mov
jbe
mov
or
repnz
and
std
stc
mov
jle
test
sub
stc
sub
pop
pushf
push
lahf
out
out
pop
inc
jae
sbb
sbb
dec
cwtl
fdivr
sub
leave
xchg
sbb
cmp
in
fwait
dec
jge
in
xchg
dec
popf
add
gs
nop
xchg
or
inc
lret
scas
sbb
hlt
cmpsl
xchg
in
dec
xchg
add
lock
popa
shl
xchg
shlb
adc
push
sub
pop
mov
in
inc
jb
mov
sbb
insb
and
les
cmp
xor
hlt
xlat
sahf
dec
jl
ja
jne
sbb
inc
inc
add
insl
pop
out
sarb
pop
gs
and
xor
ret
mov
mov
jb
inc
hlt
sbb
dec
dec
pop
inc
add
js
fmull
mov
xor
pop
ret
incb
ror
rorb
rcr
fistps
dec
filds
jmp
add
add
add
add
cwtl
push
pusha
fisttps
mov
pop
icebp
pop
jns
mov
xor
out
cmc
mov
xor
lods
idivb
dec
or
int
jecxz
lcall
into
scas
ret
adc
loopne
xchg
add
pop
ss
xor
or
mov
and
adc
inc
push
imul
add
xlat
lcall
movsl
rcrl
aaa
inc
sub
mov
or
xor
pop
xchg
pop
movsb
and
inc
ljmp
or
cld
sub
mov
imul
mov
dec
push
pop
nop
pushf
push
sub
dec
subb
loop
clc
add
sbb
cmc
nop
or
mov
adc
test
push
and
inc
fwait
cmp
fs
cmp
fcoms
call
mov
push
dec
and
jp
pop
jmp
scas
pop
cwtl
fdivrl
outsl
mov
js
xchg
add
xchg
add
mov
shlb
loope
cmc
mov
push
and
push
ret
inc
call
out
pop
je
sub
pop
or
xchg
test
je
popa
icebp
xlat
push
jb
loopne
inc
mov
xchg
xor
hlt
and
jl
test
cli
movsl
fcmovu
dec
mov
inc
movsb
js
ss
xchg
mov
mov
lcall
rcll
dec
mov
push
push
jb
xor
out
int
pushl
rcll
push
dec
out
int
rolb
push
aad
lcall
cmp
ja
jbe
clc
nop
pop
adc
or
test
cmc
xor
mov
nop
call
jl
push
dec
cwtl
xchg
sbb
inc
adc
mov
pushf
pusha
pushf
cld
cld
mov
aaa
or
lret
in
add
out
add
movsl
xchg
pop
or
ljmp
pop
enter
mov
dec
icebp
cld
testb
in
mov
insb
or
push
mov
mov
cmp
aad
lods
jl
xchg
les
lods
mul
mov
xchg
cmp
and
lret
jnp
out
mov
out
mov
jmp
mov
mov
inc
fcmovnu
movsl
fwait
xchg
lahf
iret
and
aaa
incb
aas
int3
ljmp
jno
in
lea
orb
cld
or
or
ja
dec
rcr
insb
in
es
xchg
push
cmp
xorl
or
or
mov
push
fbld
jae
push
ret
cmp
sub
jno
imul
movsl
lret
push
jbe
adc
pop
shlb
ds
in
push
push
dec
sub
add
push
gs
lret
sub
stc
push
aaa
add
mov
cs
test
and
or
or
push
xchg
jae
mov
fdivrs
push
jmp
ficompl
or
lahf
jns
add
fstps
sti
std
shll
mov
iret
lods
xlat
inc
dec
cmp
and
pop
int3
push
dec
cli
add
jo
xchg
pop
test
mov
stos
je
push
fstps
clc
into
xadd
cli
fstp
ss
nop
pop
cmp
sub
add
aas
dec
mov
lock
subb
cmp
push
lds
lcall
mov
sbb
imul
pop
jne
idivl
inc
jno
pop
push
jo
mov
iret
dec
dec
cmp
jns
cltd
sub
je
cld
xor
xlat
add
sbb
ret
jg
mov
sbb
cmc
xchg
repz
out
add
out
add
pop
lcall
stos
test
je
or
nop
test
push
xchg
notl
push
mov
dec
movsl
xchg
push
add
push
xchg
add
adc
and
and
repz
into
mov
pop
cmp
mov
popa
out
adc
xor
mov
push
fs
cs
je
std
jecxz
fistpl
in
jno
jle
push
in
jg
lcall
loopne
mov
push
mov
or
cmp
pusha
fsubrs
jns
sbb
sbb
stc
roll
mov
adc
push
call
idiv
xor
ret
std
sbb
inc
cli
rcll
and
mov
ret
xlat
xchg
adc
cmc
dec
test
cmpsb
out
aaa
data16
stos
mov
scas
push
lahf
cltd
mov
daa
call
and
xor
sub
cmp
out
cmp
loopne
sti
or
mov
jmp
pop
clc
jmp
into
mov
lds
popf
or
cltd
rcrb
push
les
dec
mov
or
ret
cmovo
fldl
sub
push
mov
in
cwtl
xor
aad
lahf
jg
jae
inc
pop
mov
notb
xchg
add
adc
push
pusha
imul
iret
mov
scas
dec
add
xor
adc
xchg
fisubl
jp
mov
inc
mov
mov
pop
add
jns
data16
xchg
scas
xor
mov
pop
fidivl
adc
add
inc
jg
mov
js
lods
pop
cmp
jmp
sbb
stc
and
loop
sbb
push
jge
sbb
lcall
test
or
inc
xchg
dec
xchg
dec
into
adc
sub
add
add
push
mov
dec
sub
insb
pusha
out
sub
repz
sahf
ficoms
addb
fsubl
fmuls
popl
cmp
pop
faddl
shll
fwait
inc
out
jns
ror
jg
jnp
into
cmp
test
push
rolb
ljmp
scas
push
test
jne
adc
loop
fimuls
push
or
cmpsl
sbb
add
push
int
sbb
jbe
testl
cltd
xchg
test
mov
hlt
or
aad
add
data16
mov
xchg
jnp
roll
in
into
push
roll
add
xlat
or
ds
cmpsb
and
ss
out
dec
imul
xor
or
outsl
sbb
mov
inc
sub
ja
aas
scas
mov
mov
mov
mov
std
pop
ret
fisttpl
push
insb
dec
jae
es
rcr
inc
fcom
xchg
les
loope
cmp
js
int
int
in
ror
adc
xor
mov
xchg
fadds
jne
add
push
mov
cmp
mov
dec
rcrb
sbb
sub
mov
nop
shlb
aas
lods
mov
loopne
stc
hlt
dec
mov
jb
mov
add
mov
jae
ret
xor
test
push
mov
jbe
cmpsb
outsl
and
jne
pushf
push
in
mov
pop
lock
jge
mov
iret
in
mov
std
in
sub
dec
outsb
nop
cmp
mov
cmpsl
push
fnstsw
sub
cmp
push
shl
arpl
sbb
mov
pop
mov
add
js
jg
push
mov
outsb
adc
mov
repz
out
add
push
mov
fcoms
mov
pop
hlt
cltd
loope
push
imul
enter
insb
hlt
jo
loope
xchg
ja
insb
or
pop
hlt
jp
push
cmp
mov
push
sub
xchg
test
mov
mov
push
and
fisubrl
or
mov
roll
je,pn
insl
inc
repz
push
jnp
psubsw
mov
or
rorl
mov
cmp
push
add
aad
dec
fcoms
rcll
pushf
mov
inc
pop
inc
fldl
or
adc
adc
cmp
add
testb
cmp
mov
add
or
mov
sbb
fsub
jo
rol
xchg
add
daa
mov
test
fstps
mov
sub
dec
out
aas
push
pop
push
mov
sti
out
loop
cs
push
or
je
mov
sarb
cmp
xchg
dec
mov
sbb
jnp
aaa
mov
mov
ja
inc
pop
sub
jb
inc
stos
pop
xor
add
or
ret
fistl
xchg
or
aaa
or
test
push
dec
scas
bound
shll
scas
add
xchg
pop
in
pusha
cmp
xchg
mov
pusha
and
imul
je
inc
ljmp
and
std
stos
dec
mov
pop
ss
mov
data16
dec
jg
ljmp
in
push
cmp
mov
es
mov
sub
pop
testl
pop
sbb
sub
fidivrl
incl
sub
push
js
cmc
dec
mov
jnp
sti
mov
in
cmp
call
add
add
add
imul
out
add
js
aas
pop
add
aas
outsb
inc
outsl
cli
add
xlat
arpl
test
mov
je
cmpsb
inc
and
xchg
popf
add
test
stos
xchg
xor
lea
pop
fists
lret
iret
arpl
std
repz
pop
in
mov
push
inc
flds
out
sub
ret
cmpsb
bound
mov
jp
sbb
mov
jp
push
outsl
add
rcrl
lret
jl
adc
stos
jecxz
notl
mov
and
or
outsl
or
scas
mov
xorl
dec
sub
icebp
and
sub
insl
xchg
jo
out
xor
mov
inc
dec
lret
incb
push
popf
jle
xchg
xlat
ljmp
sub
stos
push
shlb
mov
repnz
lods
and
lahf
mov
scas
data16
inc
pusha
pop
out
jp
test
nop
mov
in
leave
dec
pop
sbb
scas
push
jbe
jo
das
fcmovnbe
cmp
std
loope
cltd
lret
fs
pop
out
adc
ret
or
xchg
cmpsb
cld
je
xchg
cld
fs
sbb
xchg
popf
out
jecxz
mov
mov
sbb
fdiv
jbe
out
out
pop
pop
fwait
sbb
add
sbb
sub
and
or
inc
jl
pushf
pop
pop
out
sub
imul
cmp
lcall
xor
push
push
xor
add
cmp
cmp
sarl
stc
cmp
jg
cmpsb
pop
out
js
stos
std
mov
jno
cmp
add
push
add
mov
jno
test
stos
xor
addr16
adcl
movsl
stos
add
mov
inc
cmp
loop
add
out
add
lret
sbb
dec
and
jns
mov
out
dec
push
nop
xchg
sbb
imul
je
je
and
addb
lcall
jae
inc
and
adc
push
jle
lods
xor
cli
roll
pushf
mov
movsb
fldcw
cmpl
and
pop
cmp
xchg
push
push
mov
pand
fs
and
jno
inc
dec
lods
pop
ret
mov
jg
ss
jb
imul
out
mov
push
dec
adc
or
or
pusha
pop
out
cmpsl
or
and
cs
lods
movsl
pusha
jl
out
shrb
push
sarl
cwtl
xchg
mov
inc
and
and
xchg
das
jl
xchg
jnp
sbb
or
loop
mov
test
out
cmp
pop
rorl
inc
loopne
in
jl
xlat
xchg
jnp
out
mov
in
lret
movsl
pop
ds
cmp
into
add
jb
iret
icebp
push
cmp
and
lods
imul
xor
subl
in
mov
dec
test
cmp
fiadds
mov
adc
out
sub
jmp
mov
pusha
shll
call
xor
ss
popf
test
adcl
cld
loop
jg
in
push
popl
pop
add
outsl
push
inc
mov
jmp
insl
inc
and
jns
lret
repnz
mov
cmp
ljmp
loopne
add
shll
mov
fildll
int3
add
xor
or
hlt
pop
cmp
test
aaa
sub
cmp
fs
mov
jg
ret
cltd
out
lahf
idivb
fistl
sbb
clc
add
add
add
or
