push
mov
sub
cmpl
mov
movl
not
jmp
mov
jae
push
call
sub
sub
mov
xor
add
sub
and
or
mov
mov
mov
orl
sub
push
mov
mov
mov
mov
sbb
movzwl
add
mov
mov
sbbl
orl
orl
cmpl
not
mov
jmp
mov
mov
jle
push
pushl
push
push
push
pushl
push
call
andl
subl
and
orl
and
adc
adc
mov
mov
mov
mov
sbbl
sub
mov
mov
sbb
mov
orl
orl
lea
sbb
mov
cmpl
movzwl
mov
notl
mov
jmp
mov
mov
jae
push
push
pushl
call
xor
or
adc
sbb
mov
adc
mov
addl
add
mov
jmp
hlt
loop
sbb
and
mov
adcl
sub
push
push
ljmp
mov
push
popf
loopne
dec
cmc
cmp
rolb
push
mov
testl
movsl
dec
sbb
xor
pop
cmp
dec
rcl
inc
inc
push
jl
pop
mov
dec
dec
dec
rorb
or
mov
daa
bound
scas
test
mov
pop
push
inc
fdivs
imul
mov
jecxz
add
cmpsb
inc
fucomp
loopne
mov
hlt
push
rcll
out
jmp
rol
lret
mov
xor
push
and
inc
fiaddl
clc
sub
test
xchg
repnz
pop
xor
out
fmull
xchg
pop
sbbl
adc
push
inc
xchg
pusha
nop
aaa
sub
mov
push
imul
push
mov
je
xchg
mov
lds
pop
pop
js
test
inc
adc
cmp
push
ja
add
jo
cmp
adcl
jecxz
ret
mov
pop
inc
xchg
mov
xchg
jmp
xchg
arpl
push
aaa
hlt
rcrl
out
in
loopne
xchg
sti
sarb
and
cmpsl
mov
out
in
pushf
mov
in
rorb
rcrb
out
mov
jg
sub
ffree
cmp
ror
std
test
incb
inc
jmp
clc
lds
or
push
sbb
aas
mov
xchg
aam
in
xchg
push
dec
jmp
pushl
ret
xchg
pop
push
pop
sub
scas
sbb
loop
cmc
mov
mov
xor
addr16
int
sub
ljmp
shr
ja
xor
xchg
xchg
fisubs
mov
iret
adc
pop
movsb
mov
scas
pushf
mov
repz
mov
sbb
pop
push
push
mov
stc
mov
adc
mov
jae
xchg
clc
sub
test
mov
xor
icebp
ret
or
dec
test
cmp
sub
sbb
lods
jb
adc
push
stos
cltd
iret
xchg
iret
sbb
inc
ss
xor
mov
sub
lret
pop
adc
ret
in
lods
xor
xchg
xor
ret
in
or
inc
jg
push
inc
inc
lods
and
cmc
ret
fld
sub
push
cltd
adc
push
xchg
adc
mov
and
dec
sub
mov
mov
mov
push
les
shlb
in
dec
pop
mov
sbb
loopne
add
cmc
repz
add
cs
and
dec
cmp
mov
push
pop
inc
stos
test
lock
mov
pop
andb
cmp
sub
cwtl
cltd
lret
sub
and
mov
stos
push
jmp
lea
test
sbb
push
pop
jmp
pop
push
std
pop
push
test
insl
mov
xchg
sbb
shl
cmp
outsl
xchg
xor
stos
xchg
push
push
stos
enter
inc
xor
rcr
mov
adc
push
shll
sub
imul
ljmp
ret
dec
in
gs
inc
xchg
and
mov
fistpl
mov
mov
sti
icebp
in
push
out
mov
cmp
or
insb
jl
cli
jb
xchg
xchg
arpl
mov
add
mov
xchg
push
xchg
faddl
in
jge
pop
pop
add
clc
das
fwait
popf
mov
add
jo
add
and
dec
cmp
ja
xor
cld
je
mul
loope
inc
fwait
insl
sbb
in
sub
int
jae
test
xchg
dec
outsb
mov
add
cmc
repnz
and
ds
xchg
mov
cmc
mov
push
pusha
in
mov
test
adc
cwtl
pop
jno
into
xchg
in
cmpsl
xchg
int3
add
cmpsb
decl
out
lret
jecxz
push
or
inc
clc
mov
push
push
fstps
test
inc
iret
imul
push
mov
mov
sahf
push
in
add
adc
mov
in
mov
loope
test
adc
or
sub
repnz
iret
lret
jnp
xchg
mov
dec
mov
sbb
push
mov
pop
mov
xlat
cmp
add
add
movsl
fldl2e
call
pop
push
stos
dec
arpl
imul
cli
sbb
mov
cld
js
repz
jae
hlt
aad
sub
and
flds
ror
dec
mov
push
in
movsb
roll
insb
in
ret
lds
pop
stos
jl
inc
push
jp
mov
add
inc
mov
inc
call
ss
test
repz
lds
sub
ds
int3
xchg
push
push
jne
sbb
aam
mov
mov
mov
clc
aad
sbb
loop
jno
and
mov
cmp
inc
and
push
outsl
xchg
jg
dec
clc
iret
out
sarl
sbb
sbb
xchg
jg
cmc
enter
push
pushf
rolb
aam
insl
xor
mov
stc
pop
mov
shll
inc
lea
int3
cltd
cli
xchg
mov
xchg
aas
xlat
mov
dec
fmuls
cmp
aas
fbld
mov
int
rcl
in
lret
arpl
rclb
fistpll
push
notb
rcll
xchg
loop
add
or
test
clc
outsb
or
push
mov
fnstcw
pmulhuw
jmp
mov
repz
and
stos
cmpsl
stc
sbb
or
rorb
mov
andl
movsl
push
mov
stos
pop
into
dec
xchg
dec
fcomi
pop
add
add
outsb
sbb
jmp
push
in
inc
pop
push
cmpps
fidivs
pop
rol
inc
mov
movsb
cmp
add
lret
jl
sti
inc
ljmp
push
std
insb
pop
inc
push
nop
fcoml
iret
adc
cltd
in
pushf
test
mov
call
adc
inc
outsb
mov
incl
pop
adc
add
cs
xlat
arpl
int3
neg
push
push
aad
add
mov
xor
mov
jg
adc
pop
inc
lret
xorb
push
fimuls
test
mul
sti
dec
mov
pop
rcll
inc
les
lods
mov
movsl
jl
or
iret
pop
mov
cmovp
fsubl
push
push
jecxz
out
add
sti
mov
inc
adc
push
mov
xor
push
lods
dec
mov
scas
mov
push
into
dec
or
cltd
in
int
cmp
jne
les
or
xchg
pop
test
stc
out
fdivl
push
mov
mov
stc
add
into
lcall
cmpsb
sbb
lods
rcrb
mov
gs
popf
push
cmp
ja
addr16
mov
or
inc
ror
hlt
lret
sbb
ror
test
cmp
and
inc
sub
aaa
adc
mov
push
es
mov
cmc
cld
adc
scas
shl
dec
lods
mov
out
xchg
cmp
add
leave
jle
sbb
mov
lods
adc
inc
cmp
rorb
jl
add
jl
adc
mov
dec
jno
xor
dec
cli
sbb
mov
mov
add
push
fnsave
aad
or
into
ss
xor
ret
lcall
sahf
xchg
fistpll
fnstenv
mov
lods
pop
lahf
xchg
out
sbb
pop
sahf
scas
lcall
push
inc
leave
sahf
fsts
jle
arpl
mov
ret
cmp
data16
das
pop
or
xchg
pop
fldl2e
std
pop
inc
imul
dec
mov
sbb
and
sbb
loopne
cmp
std
and
out
enter
sbb
and
daa
loope
popl
inc
dec
iret
xor
movsb
xchg
pushl
mov
pop
lea
push
test
imul
leave
xor
mov
out
outsl
fildll
pop
jmp
je
js
out
push
jg
sbb
dec
test
stos
cmpsb
das
cmc
repz
cmpsb
les
cmp
gs
scas
add
ffreep
and
pop
repnz
add
and
cmp
lock
rol
or
mov
xchg
shl
adc
mov
dec
cwtl
rorl
jno
arpl
insl
stc
sub
xor
adc
inc
aad
lods
popa
jecxz
adcb
push
outsl
in
ret
repz
icebp
int3
arpl
cmpsl
stos
loope
mov
dec
ret
imul
ss
leave
cmp
sub
xchg
cmpsl
in
popa
push
sbb
mov
in
in
jns
add
or
adc
stc
fnstenv
pushf
push
sbbl
dec
cmpsb
rol
xchg
push
test
jp
or
mov
ljmp
add
mov
and
cld
scas
iret
jp
repnz
in
jnp
dec
or
ss
lods
insb
dec
shl
jmp
fsubl
shl
fs
cld
sbb
mov
mov
outsl
rclb
push
fadds
mov
shr
loopne
jbe
in
hlt
pusha
pop
jno
rcll
inc
jl
lret
mov
adc
mov
xor
dec
and
insb
pop
scas
test
xchg
sbb
adc
popl
lods
sbb
xchg
and
ret
aad
pop
xor
mov
or
jno
xchg
aas
adc
dec
fnstsw
pop
leave
leave
push
cwtl
push
xor
mov
nop
inc
in
jae
es
sbb
push
sbb
jne
or
mov
mov
jge
shl
inc
sub
jp
adc
jmp
add
addl
inc
data16
push
xchg
movsl
mov
test
push
cwtl
jb
sbb
mov
testl
dec
icebp
mov
dec
ja
ficompl
insl
lret
mov
leave
in
gs
fs
ret
xor
bound
mov
popf
jnp
scas
clc
iret
outsl
or
pop
bound
cmpsb
leavew
xorl
pop
mov
insl
xchg
in
xchg
ret
mov
pop
loopne
mov
in
aad
xchg
fdivl
cmp
mov
test
punpcklbw
add
sahf
lret
mov
mov
inc
cltd
xchg
lea
push
mov
ret
xchg
sub
ret
idiv
mov
inc
jno
adc
out
jmp
pop
fs
inc
xlat
outsb
cmp
mov
mov
sub
add
inc
dec
pushf
imul
push
ljmp
enter
or
jle
push
mov
jnp
inc
jne
sub
cmpsl
int3
outsb
cmc
repz
adc
cmpsl
scas
cmpsl
fldcw
mov
mov
jg
mov
fcomps
andb
insb
pop
and
ret
lcall
lret
adc
push
push
popa
sti
jge
sbb
jb
xor
xor
shll
and
push
ds
mov
or
jne
pop
iret
push
pop
or
test
push
xlat
mov
test
push
or
inc
shrl
sub
das
mov
push
and
movsb
into
inc
std
movsb
jecxz
push
and
push
nop
fisubrl
cmp
sbb
scas
dec
mov
leave
sbb
out
add
mov
cld
data16
cmp
push
xor
mov
out
iret
push
jae
mov
sub
jg
or
cmp
pop
lahf
inc
bnd
gs
dec
mov
jne
movsb
add
loop
inc
cltd
scas
sahf
push
cmp
jp
movsb
pop
inc
cli
and
movsl
push
mov
mov
sub
xchg
lea
cld
push
mov
std
or
andb
adc
mov
push
imul
inc
std
scas
jbe
test
mov
clc
mov
loop
loop
iret
xchg
sub
inc
adc
dec
push
push
xor
mov
and
jbe
daa
push
and
iret
ror
les
paddq
mov
incl
out
mov
lcall
mov
cli
ret
shlb
je
sti
cwtl
cmp
xlat
hlt
cmpsl
push
pushf
jl
lcall
call
push
ja
out
mov
push
cli
popl
and
stos
insl
pop
xchg
sahf
imul
inc
xor
push
ljmp
rolb
pop
fadd
or
pop
xor
in
and
xor
out
mov
leave
mov
mov
das
into
sbb
inc
inc
aam
imul
inc
or
xor
inc
das
roll
or
adc
or
ret
jmp
lock
imul
xlat
pop
test
ret
repnz
xchg
cli
cltd
push
dec
xchg
inc
into
mov
test
cmc
imul
xchg
fcomps
jmp
push
push
in
aas
ds
sbb
dec
js
bound
sbb
inc
push
jge
pusha
in
idivl
sbb
mov
mov
into
sub
jmp
jmp
stc
jle
dec
dec
adc
push
out
sub
nop
ror
test
loop
or
lods
sub
out
loopne
pop
sub
loopne
xlat
cmc
js
ljmp
nop
inc
xor
mov
inc
lret
enter
mov
out
test
test
pop
pop
faddl
push
enter
xchg
sub
das
xlat
dec
in
adc
mov
adc
sbb
and
insb
mov
xchg
mov
mov
push
sub
lods
sbb
pop
clc
mov
pop
pop
lret
mov
jg
outsb
outsb
and
push
test
fisttps
shrl
stc
push
push
add
int
dec
mov
mov
cmpsl
mov
push
mov
fcomi
xor
scas
inc
shrl
xor
hlt
stc
mov
repz
dec
xor
cmp
sub
out
xor
push
inc
sti
pop
sub
insb
xchg
pop
mov
or
xchg
cwtl
iret
xlat
lods
mov
add
ljmp
stc
jns
xor
cmp
cld
xor
pop
stos
fsts
repnz
scas
loop
imul
dec
lods
repnz
xor
xchg
add
cmpsl
lahf
stc
mov
scas
fcmovbe
add
ja
out
ucomiss
jge
xor
mov
repz
pushf
xor
add
test
dec
nop
std
inc
cld
filds
sub
and
jno
test
shll
in
into
push
add
add
jae
rclb
pop
mov
adc
enter
ljmp
jl
sub
sub
das
iret
ret
inc
and
jmp
cmc
mov
call
add
push
scas
dec
sub
adc
jle
and
push
mov
sub
mov
push
sbb
lret
scas
cmp
mov
in
or
call
xor
aaa
and
and
ss
xchg
xchg
imul
mov
sbb
int
fisttpl
gs
and
mov
js
in
flds
or
addr16
cmpl
out
mov
xor
outsl
leave
inc
jae
dec
pop
outsb
aam
dec
insb
jb
ficomps
mov
xchg
mov
call
lcall
out
or
mov
into
mov
pop
fimuls
sbb
pusha
and
cmp
xchg
jp
jle
mov
inc
xchg
mov
mov
sub
mov
dec
mov
mov
je
mov
and
jg
nop
dec
pop
sbb
or
not
dec
ss
mov
bound
adc
push
xor
pusha
pop
movsl
adc
mov
lods
lret
sahf
outsb
pop
outsl
pop
dec
jg
in
push
fcoml
mov
mov
stc
or
mov
or
insb
dec
lds
xchg
cli
call
dec
add
push
pusha
lods
rclb
rcl
mov
add
sahf
sbb
out
inc
pop
sahf
mov
ss
xor
popf
and
sbb
aas
jg
sbbb
push
loopne
test
sub
sub
sub
out
rcl
pop
sbb
cmp
outsl
aaa
je
xor
jecxz
dec
add
inc
test
adc
mov
clc
in
push
adc
dec
jno
inc
imul
in
lcall
test
sahf
rcrb
data16
mov
pusha
addr16
sub
mov
sub
jg
call
jb
cmpsb
mov
adc
xor
mov
jb,pt
or
inc
mov
mov
adc
scas
pushf
or
pop
lods
mov
jmp
test
je
bound
xchg
je
push
aad
leave
pop
add
and
daa
cmp
ljmp
out
jbe
push
mov
in
or
enter
pushf
outsb
pusha
int
dec
sub
sub
push
ret
repz
pop
into
cs
jnp
scas
data16
mov
sbb
push
add
xor
cmp
sbb
add
lea
jge
mov
or
jb
shl
mov
shrl
xchg
xor
xor
imul
addl
shll
icebp
mov
clc
xor
and
sbb
lods
mov
mov
pop
xlat
or
paddb
sbb
xchg
pusha
stc
xchg
add
pop
push
mov
push
arpl
stc
lret
push
mov
mov
shrb
lret
adcb
movsl
fstpl
out
imul
xchg
test
pop
repz
push
ds
mov
lret
out
shrl
into
mov
and
int
into
jne
pop
inc
sbb
les
sbb
and
stc
cmp
popa
nop
mov
xchg
adc
push
mov
repnz
push
test
xchg
xor
or
cmp
sbbb
push
dec
and
cmpsb
push
sbb
add
lcall
sbb
push
andb
push
xor
mov
fadds
bound
repnz
dec
call
psrlw
cmc
xchg
xor
sti
dec
nop
push
xor
mov
mov
lret
sbb
adc
lret
test
xchg
addr16
sub
xchg
ds
sti
inc
xchg
push
jb
push
xor
jl
aad
inc
jmp
xrelease
lock
dec
mov
sub
movsb
mov
lahf
out
pop
cld
ljmp
dec
shr
mov
cmp
pop
insl
and
sbb
fisubs
mov
adc
ja
sbb
pop
adc
lea
addl
lock
outsl
dec
fwait
cmp
arpl
pop
xchg
push
call
cmpsl
mov
pop
pusha
push
testb
add
add
in
mov
mov
xchg
leave
inc
pop
xchg
jno
ss
shrl
int3
adc
push
repnz
push
cmp
ror
fs
shll
psrlq
push
bound
push
or
test
xchg
in
pop
jns
or
sub
cld
lods
dec
ss
incb
xchg
mov
pop
cmp
add
fbld
lods
loop
mov
cltd
push
add
push
xchg
aas
or
lds
sahf
int
push
adc
sbb
push
cltd
sbb
mov
in
jo
adcb
addr16
xchg
out
xchg
pop
cmc
add
in
push
shl
inc
inc
jg
je
cmp
test
dec
cld
dec
push
mov
call
idiv
adc
test
sahf
cmp
push
or
mov
into
cli
mov
and
sub
mov
push
insl
fdivrs
sub
bnd
mov
dec
inc
movsb
loop
cmpsl
mov
cltd
mov
xor
jecxz
or
lea
dec
faddl
lds
mov
jmp
lahf
xchg
insb
dec
xchg
int
ret
xor
frstor
leave
cmp
jmp
mov
subl
outsb
daa
dec
push
js
movsl
bound
add
stos
mov
ljmp
pop
aaa
mov
ret
in
cmc
sub
loope
fdivl
ljmp
and
push
ds
pop
mov
es
sbb
inc
adc
lods
add
inc
mov
out
jns
in
je
mov
and
sbb
jl
test
cmp
idivl
xor
aam
jg
pushf
ja
sbb
outsl
inc
nop
sarl
push
cmc
sbb
xor
rcrl
int
cmp
shrb
bound
loopne
cmpsl
fcoms
mov
adc
mov
shlb
je
not
pop
lret
jecxz
mov
jno
gs
sahf
pop
lret
cli
mov
push
cmp
nop
pusha
mov
insl
es
fisttps
enter
nop
cmp
and
sub
movsb
aaa
loop
or
xchg
add
add
test
xchg
sbb
push
xchg
gs
scas
cmp
pop
mov
int3
sbb
stos
add
ffree
pop
mov
ret
xchg
mov
sbb
dec
push
lret
or
pop
mov
hlt
mov
pop
xchg
fdivrp
mov
mov
call
push
js
data16
test
inc
adc
adc
mov
es
dec
xchg
and
cld
icebp
rcll
imul
pop
add
inc
sub
mov
iret
popa
sub
and
push
mov
test
mov
dec
jo
aas
hlt
cld
sbb
jle
xchg
adc
movsl
iret
stc
lret
aad
rcrl
imul
push
push
adc
test
push
and
sub
push
cmp
mov
mov
pop
daa
stc
stc
test
leave
ja
sbb
adc
jp
mov
hlt
aaa
je
inc
fiadds
out
jle
popf
inc
mov
push
inc
pop
jp
and
mov
dec
das
movsb
sub
jne
jmp
mov
dec
inc
add
or
mov
cmpsl
jne
test
inc
ffree
bound
push
push
mov
js
fisttpl
sahf
mov
sbb
sub
stos
add
inc
mov
mov
adc
pop
xchg
ss
pop
pop
jmp
fisubrs
mov
cli
sub
lods
dec
sbb
in
lcall
fists
loopne
mov
insl
icebp
in
or
pop
push
arpl
cmovbe
sti
push
sarb
std
out
outsb
sbb
pop
jae
jbe
outsl
ret
adc
xchg
fidivs
mov
mov
mov
dec
pop
icebp
xor
fs
xor
pop
jp
cmpsb
inc
mov
inc
sbb
mov
into
stos
sarl
or
push
dec
inc
pop
addl
in
shrl
push
jae
or
sahf
mov
pop
fsubl
jl
mov
out
sub
adc
cmp
push
test
jne
xor
fisubrs
dec
icebp
or
cli
ljmp
jae
dec
mov
mov
jo
pop
sub
daa
cld
cmp
dec
cs
lock
pop
mov
mov
jle
or
ss
fcoms
sbb
or
jno
mov
xor
push
test
mov
bound
mov
fxch
shrl
scas
add
fbld
call
nop
cmp
or
inc
aas
je
xchg
imul
sbb
fwait
sahf
push
push
mov
xor
xor
stos
cmp
lcall
icebp
mov
aam
data16
mov
call
in
jp
xor
ret
adc
jp
push
test
push
mov
aaa
icebp
sbb
add
faddl
pop
jnp
std
in
xchg
mov
xorb
or
mov
rorl
popf
lret
adc
jmp
and
lret
das
orl
divl
mov
outsl
sub
xchg
adc
mov
and
jge
scas
lcall
loope
les
sub
jne
fisubs
pop
cmp
ss
adcb
rcrb
inc
pop
xor
divl
fldl
pop
jno
sarb
lret
mov
test
vpmacssdql
mov
mov
add
xchg
xor
insb
sbb
aam
faddl
mov
sbb
dec
lock
enter
setle
or
jne
pushf
push
mov
fists
hlt
into
add
pop
faddl
aaa
roll
fwait
in
or
jb
loope
and
int
push
push
xchg
repnz
sub
and
cs
inc
push
inc
push
cmp
push
lret
jae
mov
out
jl
out
in
scas
int
xor
add
notb
fisttpl
or
adc
repz
add
in
dec
shlb
pop
les
add
or
arpl
mov
mov
stos
fdivrs
add
cli
adc
cmp
bound
pushf
pop
jmp
xabort
fwait
rcl
insb
daa
dec
mov
fnstcw
sub
lret
mov
loop
mov
call
repz
cmp
shlb
pushf
imul
ds
mov
cwtl
cld
into
xchg
fstpl
xacquire
loope
add
aad
jns
pop
xchg
in
xor
bound
xchg
jns
pop
sub
gs
pop
fwait
mov
hlt
lds
testb
test
push
insb
mov
cmpb
out
jp
insl
sub
pop
stos
bound
std
lock
pop
jns
je
cld
xlat
out
data16
rcrl
sbb
pop
lods
int3
push
pop
cmc
or
std
jb
adc
push
shrb
or
popf
inc
dec
adc
push
shlb
pop
testb
iret
mov
mov
popf
test
adc
sahf
fwait
nop
cmp
cmpsb
and
sub
xlat
das
filds
rclb
or
shlb
fnsave
loop
lcall
loopne
sbb
addr16
rorb
or
aad
xchg
push
in
xchg
ss
pusha
sub
or
pushf
das
dec
pop
dec
pop
pop
in
and
inc
cwtl
adc
mov
es
fbstp
and
mov
test
lahf
jo
pusha
stos
nop
jle
sub
sbb
out
mov
or
dec
add
ja
jbe
sub
vmovmskps
test
ds
out
fidivl
cmp
sahf
in
iret
and
sbb
mov
dec
rcrb
inc
test
es
inc
popa
stc
int3
stc
jmp
jmp
ljmp
pop
inc
mov
cs
dec
fs
fcompl
jns
sub
or
jmp
sub
jecxz
and
sub
das
imul
xchg
fs
sbb
jno
xchg
push
insl
in
imul
pop
rolb
stc
and
xor
adc
sbb
rcrl
xchg
and
nop
inc
arpl
and
sub
cmp
sti
jg
xchg
loope
adc
xchg
popf
testb
in
stos
mov
mov
lea
sbb
rorb
dec
inc
dec
movsb
dec
dec
out
shlb
cmp
xor
popf
mov
or
stos
lahf
stos
pop
shl
shlb
sbb
arpl
aam
pop
loope
out
mull
push
sub
push
test
repnz
add
jnp
push
dec
loope
sbb
mov
icebp
adc
popa
jbe
mov
push
adc
adc
dec
mov
and
loop
xor
stc
clc
xor
jp
sti
adc
insb
inc
movsl
sbb
les
xor
or
sti
ret
push
and
sub
loopne
mov
out
sub
fldt
fdivs
xlat
push
pop
sub
mov
mov
movsb
inc
stc
into
pop
insb
test
aaa
stos
imul
call
inc
ja
mov
addl
push
inc
sbb
out
add
adc
cltd
mov
jp
lcall
enter
arpl
or
das
out
mov
in
aad
lcall
push
xchg
rcll
cmp
leave
inc
add
insl
sbb
lds
icebp
test
in
and
stos
mov
jns
jnp
xchg
and
imulb
xor
cmp
hlt
es
mov
ds
fdiv
jp
push
shll
mov
arpl
mov
ret
pop
jecxz
test
ret
jo
sub
sbb
jbe
jmp
cmp
daa
aam
test
mov
lea
mov
or
inc
or
arpl
enter
push
push
or
pop
repz
movsb
pop
mov
test
jmp
push
test
cmc
pop
sbb
loope
test
pop
dec
push
push
inc
mov
dec
fstpt
ss
push
sbb
inc
test
lret
into
mov
repnz
xchg
rolb
sub
sbb
hlt
imul
cmp
lea
int3
push
add
jb
loop
xchg
xchg
mov
mov
sbb
cltd
test
jecxz
push
lds
in
mov
mov
cmpl
movl
movl
mov
jmp
movl
movl
jge
push
push
push
call
or
sbbl
mov
add
or
orl
sbb
mov
xor
or
sub
and
add
mov
cmpl
movl
movzbl
movzbl
jmp
mov
jge
pushl
push
push
pushl
pushl
call
mov
mov
sub
not
adc
incl
sbb
xor
mov
mov
add
mov
adc
shrd
adcl
shr
mov
mov
negl
xor
xor
or
mov
sbbl
movl
xor
movl
cmpl
movl
mov
jmp
mov
movl
jl
push
call
adcl
addl
orl
xor
movl
movl
movl
andl
movl
incl
movl
movl
cmpl
movl
movl
mov
jmp
movl
jge
pushl
push
push
call
sbbl
subl
andl
sbbl
decl
movl
movl
cmpl
movl
movl
movl
jmp
mov
je
push
pushl
call
subl
add
addl
sub
andl
adcl
add
cmpl
movl
movl
jmp
movl
jbe
pushl
call
adcl
adcl
xor
sbbl
subl
xor
xorl
movl
movl
not
movl
cmpl
movl
movl
movl
movl
jmp
movl
jle
pushl
pushl
pushl
pushl
pushl
call
orl
sub
xorl
andl
decl
addl
sub
movl
movl
or
movl
movl
mov
and
mov
movl
jmp
out
adc
adc
sbb
mov
xchg
mov
xlat
push
push
sub
push
push
jns
test
rcrl
and
xchg
scas
ljmp
shlb
cwtl
xor
adc
fidivs
cmpsl
int3
adc
je
aaa
mov
jae
sub
mov
adc
stos
in
xor
mov
mov
mov
loopne
lret
insl
sbbl
mov
mov
adc
lcall
and
outsb
jb
add
mov
fmull
push
dec
or
popa
or
dec
or
xchg
mov
add
push
aam
inc
ds
dec
push
scas
das
inc
scas
jbe
aam
out
adc
sub
fildl
mov
paddq
lds
pop
pop
loop
or
inc
lcall
aad
push
mov
scas
inc
leave
jno
dec
adc
mov
cmpl
or
mov
push
push
mov
cld
sbb
cmp
mov
or
cld
push
jg
dec
cld
xor
jae
xchg
xchg
mov
mov
sarb
push
outsl
leave
insb
add
lea
mov
mov
xchg
adc
xor
sbb
hlt
xchg
mov
pop
pop
xlat
rol
mov
sar
cmp
jb
cwtl
loope
adc
aaa
jnp
cmpsb
lahf
xchg
mov
push
mov
jecxz
nop
jmp
or
repz
mov
push
jge
fnstsw
dec
test
lds
lret
add
lock
jnp
jl
pop
pop
adc
fldl
fidivrl
jmp
ds
xlat
clc
pop
ficompl
sub
je
sbb
cwtl
sbb
cmp
pop
mov
subl
idivb
pop
int
add
add
inc
dec
rcl
popa
pusha
mov
push
test
pop
cmp
and
cmpsb
and
mov
mov
push
or
or
scas
addr16
push
adc
int3
loope
xchg
fldenv
rcl
cmp
dec
cltd
xchg
ljmp
push
or
mov
sub
addb
ja
inc
addr16
or
scas
cmp
sar
roll
out
mov
into
push
cmp
mov
dec
test
repnz
lret
mov
clc
xor
cmp
out
fsts
mov
push
jecxz
outsl
xor
mulb
cmpsl
xchg
pop
fwait
jmp
bound
gs
int3
xchg
lods
clc
jbe
sub
ror
dec
test
pop
mov
mov
adc
push
jmp
shlb
pusha
scas
xchg
push
movsb
stos
xchg
inc
cmpsl
or
icebp
sub
test
mov
add
icebp
les
mov
imul
push
pop
stos
xchg
mov
mov
and
inc
mov
sbb
adcl
fs
in
push
mov
mov
add
add
push
movsb
pop
and
aaa
cmpsl
lds
frstor
push
add
outsb
mov
push
popl
push
push
nop
and
daa
in
insl
xor
les
shll
pushf
push
ljmp
cwtl
xor
mov
lcall
cmpsl
pop
cmp
sub
mov
daa
leave
addl
in
xor
adc
inc
aam
add
fsts
sbb
cs
sub
lret
imul
jl
add
iret
adc
cs
int3
xor
imul
idivl
sahf
ret
shll
addr16
sahf
dec
mov
pop
pop
mov
inc
jl
sub
xorl
stos
pop
gs
hlt
push
movsbl
xchg
std
outsb
shll
sub
xchg
out
arpl
mov
int3
jae
inc
shrb
sub
inc
arpl
mov
mov
jmp
or
lret
xor
sub
in
out
or
clc
add
sub
and
xor
gs
inc
jge
lock
mov
stos
push
pop
loop
add
and
xor
imul
pushl
mov
sbb
and
add
lea
shll
rclb
popa
push
call
or
fiadds
jp
in
pop
test
jb
leave
mov
jbe
mov
or
add
es
out
mov
cmpsl
pop
push
push
cmp
or
mov
mov
inc
push
loop
and
jge
push
repz
pop
mov
inc
mov
mov
add
pop
stc
mov
mov
inc
int
lret
clc
mov
sbb
inc
test
jge
shrb
ret
mov
jl
jns
int
mov
cmpsl
sub
je
loopne
inc
push
sti
add
push
add
push
and
push
pop
or
test
dec
call
jg
inc
out
cwtl
popf
shrl
imull
sbb
or
mov
mov
dec
inc
cmp
push
xchg
push
gs
xchg
cltd
xchg
inc
push
scas
sub
pop
or
mull
imul
or
lret
js
jns
pusha
loop
dec
pop
je
arpl
or
and
cs
jo
cmp
cld
cld
dec
and
andb
nop
insl
sbb
adc
sub
jg
ror
sub
sub
cwtl
jno
cmpsb
cmpsb
lcall
push
pop
loope
adcl
imul
mov
scas
or
sarb
dec
fwait
add
mov
mov
ficoms
mov
out
test
repnz
mov
mov
inc
adc
jmp
incl
xor
loopne
cmc
adc
dec
es
aaa
mov
mov
gs
pop
mov
icebp
mov
scas
loopne
lret
sub
lock
mov
sub
and
push
sub
addl
mov
shl
cld
nop
push
mov
add
cmp
je
mov
jae
rorb
mov
sub
or
mov
mov
push
push
inc
jnp
scas
add
dec
add
xor
inc
xor
pop
cmp
sti
jbe
xchg
aas
dec
fstpl
sar
pop
je
sub
movsl
mov
add
incb
and
es
sahf
pop
dec
pop
scas
mov
inc
push
xchg
inc
lahf
and
fs
out
jns
and
inc
and
push
add
adc
scas
flds
sub
lods
push
repnz
xor
fisubrl
repnz
pusha
mov
les
jmp
dec
push
iret
in
ret
sti
imul
gs
xchg
icebp
bnd
mov
nop
pusha
ljmp
mov
add
mov
lcall
fst
inc
fbld
sub
jns
adc
scas
enter
lret
aam
inc
jae
jae
enter
imul
sub
arpl
jae
scas
sub
popf
mov
adc
sbb
mov
jp
push
add
icebp
add
int3
adc
leave
outsl
cmpsl
lret
sub
jo
inc
pop
dec
dec
sub
push
ljmp
imul
cmp
sub
push
out
adc
cmovge
sub
xor
icebp
je
clc
mov
iret
sbb
aad
in
jno
push
dec
sbb
jp
arpl
mov
push
stos
cs
push
out
mov
dec
mov
ja
add
test
andb
popf
loope
mov
mov
xorb
adc
into
in
hlt
inc
outsb
insb
xchg
dec
mov
outsb
sub
repnz
orl
ficomps
or
push
int3
out
mov
leave
and
adc
inc
xchg
xor
hlt
mov
mov
ljmp
int
sub
sahf
std
xlat
push
lds
loopne
xchg
cmp
inc
in
sub
ficoml
enter
xchg
inc
adc
sbb
push
dec
sub
cwtl
repnz
int3
and
pop
pop
push
mov
aad
cltd
mov
pushw
push
out
adc
adc
push
jns
fiadds
subl
or
into
out
mov
leave
cmp
mov
mov
pop
mov
out
or
iret
sbb
shll
movl
int
or
pop
cltd
jge
gs
orl
mov
mov
test
mov
iret
bound
pop
call
add
xor
xchg
pusha
xchg
mov
mov
jo
scas
arpl
lcall
fcompl
fisttpl
cmp
pop
mov
loope
dec
push
push
cs
dec
cmp
xchg
adc
push
and
jns
push
or
ror
out
test
sub
xlat
pop
fstl
movsb
out
xor
pop
cld
cwtl
mov
cmpsl
js
mov
lods
insb
ret
jge
ret
imul
inc
adc
ja
mov
clc
push
iret
add
cmp
push
lock
and
in
mov
lea
adc
aam
adc
push
scas
repz
and
fs
das
mov
adc
cmpsb
outsl
call
into
add
movsb
enter
fadds
das
fimuls
xchg
mov
out
sub
cs
sub
shl
lcall
mov
mov
into
inc
andl
adc
xor
cmp
lahf
mov
adc
or
lret
pushf
imul
outsl
pop
mov
fnstcw
jge
push
add
dec
cmpsb
ret
fiadds
xchg
test
js
jg
mov
push
mov
xchg
fiadds
and
jle
in
mov
fmul
insl
lahf
andb
call
aam
inc
or
dec
mov
out
mov
jle
outsb
sub
inc
clc
cmp
or
sub
repz
in
sbb
mov
aam
pushf
subl
ficomps
and
add
cmpsl
insl
xchg
cli
xor
inc
pop
pusha
sub
push
into
lret
mov
push
cmp
jmp
jg
and
pop
aam
inc
xchg
xchg
inc
xor
and
add
push
nop
adc
ljmp
pop
enter
dec
or
je
pusha
pop
lea
loop
push
dec
push
imulb
pop
movb
imul
pop
mov
adc
pop
sbb
sbb
fadd
push
push
cli
push
icebp
mov
js
imull
arpl
mov
out
push
jae
out
sub
loope
cs
repnz
mov
and
and
pop
popa
push
sahf
cmp
dec
and
movsl
int3
sbb
test
rcl
pop
jbe
out
xchg
jmp
pop
movsb
or
push
pop
out
dec
mov
sti
mov
bound
out
mov
inc
pop
push
or
popf
inc
dec
mov
ds
sub
sti
lds
arpl
xor
es
cmpsb
add
jl
push
push
jb
push
inc
rcrl
imul
sbbl
or
int3
sbb
jnp
mov
mov
pusha
test
sub
sub
jp
mov
pop
aam
jbe
out
and
jp
ljmp
adc
mov
mov
dec
sub
ja
sti
or
and
ljmp
cmp
adc
jle
imul
mov
lock
jnp
jge
lods
jle
push
outsb
adc
mov
sub
out
shr
push
pop
pop
arpl
aam
xchg
sbb
cld
xor
scas
addl
jae
jae
sarl
mov
sbb
mov
ss
testl
cmp
sub
inc
mov
jmp
mov
mov
sbb
push
cmp
cmp
out
and
in
or
mov
in
ds
insb
sub
stos
and
add
inc
mov
dec
orl
add
sti
mov
cmp
out
inc
ss
outsb
test
and
sbb
dec
sbb
dec
fstpl
jecxz
push
xchg
sub
fsub
hlt
push
inc
in
lahf
mov
testb
add
cli
pop
push
sub
inc
inc
cmc
xor
mov
std
inc
popa
fs
cld
jmp
std
mov
ds
inc
adc
mov
out
outsb
lret
pop
inc
aam
mov
adc
jbe
adc
enter
jae,pt
push
fs
jno
xlat
push
cmp
pop
push
dec
jge
fstpt
xor
int
lds
ja
fisubs
ja
arpl
cmp
cmp
inc
jmp
fsts
filds
mov
cld
inc
outsb
into
cmp
fbld
in
mov
pop
jg
test
and
je
and
mov
out
stos
loop
pop
mov
cltd
cmp
flds
sti
xor
mov
jns
pushf
stc
dec
popf
jns
add
repz
pushf
mov
xchg
arpl
out
push
mov
xchg
fistpll
adc
aad
push
stc
or
fisttpl
xchg
mov
je
jmp
aaa
jne
pusha
out
mov
mov
std
fisubrs
std
outsl
test
sbb
xor
push
imul
sahf
ret
mov
push
testl
push
mov
sbbb
mov
shrb
mov
pop
cmp
xchg
inc
ret
or
pop
xchg
push
sub
ret
and
xor
nop
or
jbe
repz
xchg
jmp
jl
jns
pop
pop
and
adcb
dec
jae
cmp
push
mov
sbb
mov
das
mov
ret
into
dec
lcall
sub
sub
inc
imul
add
and
jmp
inc
cli
dec
inc
ljmp
lahf
or
pop
sub
sbb
scas
push
aas
ljmp
iret
ljmp
add
fs
fdivrl
movsl
scas
mov
in
aas
stos
int3
dec
stos
imul
fnstcw
fndisi(8087
sbb
movsb
pusha
mov
call
xchg
dec
mov
add
cs
and
addb
int
clc
fidivrs
rol
xor
jp
and
andl
xorl
stos
mov
jne
push
sub
dec
fnstenv
sub
or
hlt
sbb
inc
insb
push
loop
cs
daa
adc
js
cld
adc
stos
push
or
jbe
sub
adc
dec
bound
repz
insb
jl
aad
fidivrs
and
mov
rcll
movsl
loopne
inc
loop
lret
push
in
les
xor
int
xchg
mov
xor
xor
shll
shll
icebp
mov
mov
lea
add
sub
pusha
cmpsb
scas
xor
aad
or
mov
xchg
test
push
inc
pushf
fldcw
push
outsb
add
je
push
sti
fwait
imul
mov
mov
cltd
stos
ljmp
pop
das
push
xchg
xor
adcb
inc
cmpsb
adc
dec
cs
mov
scas
sub
test
xorb
lcall
jp
mov
inc
lods
cmp
sub
loope
and
mov
and
lret
lds
int
cmp
ljmp
loope
mov
sbb
push
jle
xor
cmc
cld
les
imul
call
clc
pop
aaa
push
in
imul
iret
and
mov
pop
xchg
out
aas
pop
xor
jle
inc
pop
fs
xchg
adcl
sarl
ss
hlt
addr16
xchg
outsl
mov
jbe
fwait
shrb
aad
xchg
aad
push
aaa
and
inc
sub
or
xchg
sbbl
lea
add
test
cltd
pop
int3
sti
inc
sub
jl
jns
testb
mov
jns
test
push
push
and
inc
int3
shll
mov
or
popf
ret
aaa
jno
and
je
pop
adc
mov
mov
popa
cmc
fs
lods
mov
xor
jg
xor
lock
insl
stc
out
arpl
xchg
lock
mov
jbe
test
cmp
int
out
or
or
pop
imul
in
jge
jg
inc
dec
aaa
push
dec
xchg
out
mov
xchg
xchg
rolb
gs
fisttpl
test
test
arpl
or
addr16
mov
ljmp
adc
stc
mov
xchg
xor
shlb
gs
adc
push
mov
pop
xchg
xor
mov
fwait
sub
lret
ja
sti
cmp
mov
or
loopne
add
scas
mov
sub
mov
sbb
jmp
into
adc
inc
xor
push
dec
aad
fwait
mov
insl
cmp
cwtl
xlat
mov
cmp
xchg
add
xchg
aas
mov
scas
mov
shlb
or
mov
es
jmp
ret
push
pop
test
shrl
cltd
mov
aaa
fnsave
fyl2xp1
xchg
hlt
aad
fidivs
jmp
jge
nop
pop
xor
test
mov
mov
xor
inc
rclb
scas
or
test
cmpb
push
stc
dec
dec
jl
xlat
xor
push
jmp
insb
add
mov
xchg
jnp
push
xor
add
pop
loop
dec
push
out
xchg
out
mov
mov
sbb
pop
stc
pop
mov
fdivrl
and
dec
push
jne
xchg
insb
push
hlt
lret
inc
fsubrp
xchg
ds
add
cmp
outsb
xchg
adc
xchg
enter
cmpsl
cmp
mov
shlb
je
push
ret
jle
jns
xchg
xor
decb
mov
cmp
lret
fimull
sbb
int
cmp
and
xor
cmpsl
xlat
mov
mov
out
cmp
pop
sub
bound
jae
adc
dec
fldl2t
rol
push
xor
sub
out
adc
push
js
testl
jne
lcall
stc
imul
pop
push
inc
jno
incl
lds
push
pop
sub
fs
jmp
jns
test
negl
adc
push
xchg
dec
inc
xchg
adc
sbb
cld
jl
mov
sub
jl
nop
out
sbb
push
push
int
icebp
jl
mov
fisttps
dec
xchg
out
cmp
enter
shrl
xchg
in
xchg
icebp
pop
lock
mov
test
mov
int
add
orl
or
cmp
mov
xchg
out
jo
xchg
cwtl
test
or
dec
dec
push
jg
loope
xchg
loope
fxch
notb
lcall
repz
mov
out
mov
cmpw
sub
pop
out
pop
xchg
aam
jmp
clc
incb
jo
inc
cwtl
cmp
movsl
push
inc
fsts
test
pushl
inc
push
adc
jns
hlt
popf
clc
outsl
dec
shlb
jo
cwtl
sub
add
jo
fidivs
and
fbld
sub
xchg
inc
xor
lret
je
sahf
and
push
gs
nop
sub
movsb
pop
sub
sub
jge,pt
xchg
jo
test
xor
push
icebp
iret
lret
sbb
daa
inc
cmpsb
aaa
loop
ffreep
hlt
mov
dec
scas
pop
pop
cs
lcall
cmc
dec
xlat
ret
stos
push
cmp
and
pushf
imul
pop
xor
stc
ret
jmp
lds
aad
cmpsl
xchg
dec
fadds
outsl
sti
jo
jne
mov
adc
pop
out
div
ds
jmp
sub
lret
dec
jl
dec
in
clc
jg
mov
test
mov
inc
adc
lcall
dec
or
cmp
or
or
bound
xor
popf
pop
jbe
dec
lahf
jmp
adc
fwait
and
push
push
pop
sbb
shl
mov
mov
mov
gs
xchg
push
addr16
pop
cs
jae
mov
jbe
adcl
push
push
mov
daa
jge
mov
add
pop
shll
imul
push
testb
jmp
pop
mov
jo
cmp
cmp
mov
ja
xchg
jnp
decb
je
lock
orl
cld
lret
dec
mov
pop
and
mov
or
sub
jl
icebp
stc
addr16
ret
mov
enter
ja
cli
cmpb
sub
ljmp
xchg
imul
sti
js
xchg
sbb
popf
fs
cmp
add
push
mov
or
sti
inc
in
or
leave
call
fldenv
ss
xchg
mov
js
mov
aam
mov
inc
cld
sub
pushf
mov
or
push
ss
repnz
add
outsl
jns
loope
jle
fisttpl
jmp
jnp
movsl
cmp
and
xchg
xorl
jne
test
push
sbb
ret
aas
sub
pop
in
cs
fisttpl
or
dec
rcrb
push
inc
pop
ficoml
int3
aad
inc
and
pop
ljmp
sub
mov
lcall
dec
out
das
xor
jb
les
pop
xchg
and
into
aaa
push
les
xor
pop
mov
mov
inc
adc
pushf
push
inc
lea
in
addl
fs
xchg
mov
xor
out
inc
mov
sub
pop
sbb
xor
sub
leave
mov
xchg
imul
cmp
cmp
lock
popa
repz
mov
push
sub
mov
aam
add
mov
cmp
xchg
dec
cmpb
sbb
ret
mov
into
in
mov
push
rclb
jmp
pop
dec
jbe
clc
in
jnp
popf
sub
jbe
sub
and
mov
scas
jle
jne
xor
mov
push
jp
inc
bound
das
shll
lahf
test
mov
pop
jmp
fisttpll
ljmp
lds
movzbl
scas
lods
xchg
mov
fcomip
imul
mov
lahf
and
es
inc
fcomps
in
shlb
sub
cmpsl
inc
and
adcl
dec
cmc
mov
sbbb
imul
lahf
or
mov
mov
insb
mov
das
or
mov
je
ja
xchg
push
push
cmpsb
jo
inc
cld
shr
sti
test
adc
lcall
jb
cs
orl
out
data16
jae
aam
leave
jp
xchg
or
pusha
xorb
outsl
sub
adc
mov
mov
hlt
mov
cmp
inc
push
xor
mov
cmpsb
repz
repnz
mov
aas
xchg
adc
mov
test
sti
in
sbb
ret
jmp
icebp
enter
dec
adc
xchg
push
mov
or
jbe
int3
and
jmp
dec
push
sub
or
jne
fs
cmp
cmc
sarb
lcall
fs
pop
mov
stos
stos
lock
std
cmovg
mov
add
add
fisubrl
jbe
inc
add
mov
add
cwtl
outsb
push
clc
xchg
inc
sbb
orl
mov
mov
psubusb
fcoms
stos
fstpt
cli
repnz
into
xchg
sbb
adc
mov
sub
ja
add
jne
adc
mov
repnz
cwtl
shlb
out
fcmovnu
dec
push
cld
les
sahf
movaps
mov
pushf
movsl
loop
loopne
ds
adc
adc
add
std
pushf
xchg
xchg
inc
cmp
inc
jbe
push
adc
push
fdivl
inc
add
mov
push
mov
imul
in
sbbb
fcoms
adc
push
sar
orb
xor
mov
mov
sbb
xor
sbb
push
xlat
push
xor
fsubr
push
inc
and
andl
psrlw
enter
test
mov
lret
xchg
fisttpl
pusha
movsl
bound
mov
mull
dec
ds
scas
push
jae
test
dec
inc
mov
or
cwtl
enter
rcll
aad
lcall
add
icebp
mov
cmc
test
out
inc
les
inc
dec
pop
insl
xchg
jp
in
pop
jecxz
and
incb
fisttps
ds
imul
sbb
cmpl
xor
xor
mov
pushf
add
xor
cmpl
xchg
sbb
mov
icebp
lds
mov
shlw
jne
mov
sub
dec
adc
leave
mov
je
loope
xchg
add
outsl
shll
aaa
inc
adcl
shl
jnp
push
iret
cli
imul
mov
mov
into
xchg
sbbb
mov
pushf
and
mov
adc
shll
shll
inc
loop
or
mov
aaa
lcall
dec
movsl
pop
js
mov
pop
sub
jecxz
lret
mov
clc
psubw
jo
lods
adc
out
pop
mov
enter
ret
mov
hlt
or
fnstenv
pop
xor
push
imul
das
xchg
inc
cwtl
mov
pop
jno
pop
dec
pop
sub
jnp
cmpsl
aad
pop
mov
daa
aaa
stos
js
aad
adcl
std
sar
adc
out
adc
mov
lret
inc
shlb
dec
nop
in
mov
divl
mov
ja
mov
xor
aad
in
push
test
mull
mov
push
inc
std
dec
sub
xor
in
mov
jno
sti
mov
lahf
aaa
loope
je
xchg
mov
or
xchg
sbb
aaa
repz
pop
xchg
pop
mov
push
std
xchg
or
arpl
jge
dec
dec
lret
cmp
sbb
sbb
jl
clc
mov
pop
sbb
aad
outsb
in
sub
fs
enter
mov
insl
test
int
es
icebp
iret
std
cmc
leave
mov
pop
nop
adc
loop
jle
push
jb
add
lahf
jnp
add
cwtl
xchg
out
scas
dec
or
mov
adc
cmp
lods
popa
ror
mov
inc
test
mov
stc
sub
or
sbb
insb
mov
addr16
push
insl
fs
aad
ffreep
xchg
push
ja
mov
xorb
inc
pusha
in
enter
mov
xchg
cltd
fadd
mov
xchg
mov
pop
push
ja
lahf
dec
cmc
into
pop
push
orl
sbb
pusha
hlt
add
addl
adc
jno
push
sbb
push
jo
movsb
lock
mov
xor
pop
and
fildl
ss
push
shrl
fldcw
mov
sbb
loopne
jmp
incl
pop
in
dec
loop
arpl
xchg
cld
or
pusha
mull
mov
sub
ljmp
cmp
push
and
and
imul
mov
dec
mov
mov
xor
subl
jno
jae
repz
lahf
mov
add
loop
mov
lret
sub
pop
popa
add
iret
inc
or
loop
lods
data16
add
pop
add
int3
iret
mov
iret
out
cli
lret
mulb
mov
push
or
movsl
je
pop
xor
pop
or
scas
sbb
dec
dec
xor
sub
out
or
cmp
stos
das
iret
in
pop
and
je
sbb
setnp
imul
push
fistpll
mov
insb
and
sbb
popa
pop
xchg
pushf
sub
mov
aas
cmpsb
in
or
pop
push
loopne
call
imul
ret
imul
dec
enter
and
jb
fistps
and
inc
pop
dec
loop
inc
jge
shrd
xor
xchg
fimull
shr
pop
sub
push
into
mov
dec
mov
cmp
jmp
sarb
add
mov
out
imul
jp
in
push
scas
cmp
test
fdivrs
dec
add
in
enter
cmp
jno
mov
loope
outsb
out
jns
mov
sbb
or
movl
cmpl
movl
movl
movl
movl
jmp
movl
mov
jg
pushl
pushl
call
subl
xorl
subl
andl
cmpl
movl
movl
movl
jmp
movl
jbe
push
push
call
adcl
subl
xor
xorl
xor
add
orl
movl
xor
movl
movl
mov
shl
subl
mov
subl
push
andl
push
push
adcl
push
xorl
call
andl
mov
cmpl
movl
movl
jmp
movl
movl
je
push
call
add
mov
xor
xor
addl
sbb
sub
mov
mov
xor
xor
cmpl
not
movl
movzbl
jmp
movl
movl
jbe
push
call
andl
adcl
sbb
xor
add
sbb
mov
negl
sbbl
mov
mov
add
mov
or
mov
adc
sub
cmpl
movl
not
movl
jmp
mov
movl
jae
push
call
adc
dec
andl
adcl
and
add
mov
lea
xorl
mov
xorl
mov
orl
or
negl
and
mov
adcl
or
xor
cmp
jne
mov
mov
sub
shrd
orl
shr
sbb
mov
sub
mov
orl
shl
xor
xor
addl
or
movl
mov
movl
cmp
movl
jne
add
mov
add
mov
xor
xor
cmpl
mov
mov
notl
jmp
mov
notl
jae
push
push
pushl
pushl
call
xor
add
mov
and
and
and
add
sbb
mov
and
mov
cmpl
movl
movl
jmp
mov
jb
push
push
push
pushl
pushl
push
push
push
push
call
movzbl
add
mov
mov
add
mov
sbb
xor
or
mov
xor
and
sbbl
not
not
mov
shrd
sbbl
mov
cmpl
mov
mov
not
movzbl
jmp
mov
jge
push
pushl
push
push
push
call
add
sbbl
adc
movzbl
sbb
movzwl
or
andl
movl
mov
xor
shr
cmpl
mov
mov
movzwl
jmp
movl
movl
jae
pushl
push
pushl
push
push
push
call
or
adc
adc
mov
add
add
mov
add
mov
subl
xor
incl
or
orl
shl
sub
cmpl
mov
mov
jmp
movl
je
push
pushl
push
push
push
call
and
sbb
movzbl
sub
mov
adc
mov
mov
sub
xor
sub
jmp
out
cmp
cmpsl
adc
adc
xor
push
push
test
fidivl
es
jne
lcall
mov
rol
es
mov
pop
and
call
mov
movsl
and
bound
inc
fs
addr16
and
rorl
fcmovu
mov
jne
add
add
fsubs
wbinvd
jl
roll
lods
daa
jge
arpl
mov
push
add
stos
js
inc
loopne
jbe
pop
push
push
lea
sbb
add
push
fs
rol
pop
out
jne
mov
lock
out
sahf
xchg
call
in
jne
inc
imul
gs
pop
inc
adc
jnp
into
fsub
adc
jo
inc
mov
rorb
push
movsb
jp
ljmp
test
jge
fmuls
and
xchg
aad
mov
cmpb
mov
je
ds
popf
mov
dec
fists
mov
mov
push
rorl
jg
incl
adc
inc
push
dec
loope
stc
mull
push
js
xchg
sbb
lock
mov
sub
mov
in
mov
cld
iret
cmp
and
push
sti
loope
addr16
lods
lcall
in
mov
lock
aaa
cmp
pusha
out
call
jp
push
lahf
inc
insl
xorl
mov
inc
aad
subb
mov
outsl
clc
xchg
lahf
data16
push
cmpsl
imul
in
push
lods
jmp
icebp
push
insl
mov
push
dec
ret
nop
mov
or
cs
mov
cmpsb
mov
sub
mov
adc
mov
dec
stos
xlat
cmp
mov
adc
shrl
dec
mov
xchg
ds
dec
mov
adc
adcl
xchg
aas
sub
push
pushf
and
cmpsb
jp
xlat
xchg
jg
dec
mov
ljmp
xor
or
outsl
inc
rclb
fildll
cmp
and
icebp
mov
sub
push
or
sbbb
xchg
jl
mov
repnz
lcall
or
cmpsl
arpl
sbb
push
ficomps
fs
ret
test
cltd
mov
lret
iret
inc
sub
int
cmp
daa
mov
movb
pop
repz
sbb
sub
aas
in
addb
push
daa
fs
inc
arpl
mov
mov
fidivrs
arpl
sub
mov
dec
sub
mov
mov
scas
testb
pop
sub
in
adc
jecxz
stc
fldt
je
push
jle
xchg
sub
xchg
or
mov
loope
inc
or
cli
mov
and
jecxz
repz
addl
fs
adc
sbb
jb
xchg
cwtl
insb
fildll
jl
cmp
xchg
mov
push
js
mov
pop
add
mov
fs
movsl
sti
adc
sahf
push
dec
dec
bound
call
mov
cmpsb
adc
daa
push
mov
aad
call
stos
and
scas
pop
and
movsl
in
mov
lods
dec
ja
or
mov
imul
outsb
inc
lret
loop
mov
inc
xchg
add
out
jge
stc
sub
sbb
fisubs
mov
xchg
inc
sar
mov
push
jmp
xchg
mov
push
sub
in
xor
ret
es
fstps
xor
push
int3
iret
jge
add
jl
rcrl
adc
aaa
mov
imul
mov
std
cli
jg
or
fistpl
daa
movsl
or
jbe
out
in
ja
mov
jo
lret
mov
dec
lods
mov
addb
fwait
mov
test
add
loopne
push
je
sub
movsb
pop
xchg
push
mov
jnp
mov
or
and
mov
or
adc
xor
adc
inc
test
mov
mov
stos
or
scas
mov
inc
dec
int
sub
or
pop
or
outsb
daa
jmp
xchg
mov
jecxz
pop
push
aad
and
mov
std
cmp
daa
push
inc
mov
xchg
sbb
loopne
out
clc
pop
sahf
shll
jbe
test
loope
jne
es
xor
jo
sti
pop
es
jno
jbe
or
jg
or
adc
idivb
dec
out
push
int
sbb
stos
mov
jae
cmpsb
cmpsb
sub
inc
into
aam
shrl
mov
pop
movb
ja
jbe
les
imull
jle
pop
test
push
push
or
push
jnp
add
xor
je
js
jb
mov
and
xchg
call
in
jp
pop
ja
stc
inc
ja
mov
lds
sub
ret
push
inc
mov
mov
mov
push
jecxz
sub
push
insb
jp
cmp
lods
jl
dec
jns
mov
int3
lock
pusha
pop
into
mov
fisubrl
add
out
mov
lahf
jmp
dec
and
lock
rcrb
shl
pop
mov
inc
fistl
insb
pop
mov
sub
pop
aaa
addr16
inc
hlt
pop
fcomps
mov
jl
or
arpl
pop
lretw
xchg
enter
or
cmp
xchg
mov
dec
fnsave
dec
ret
js
cwtl
outsl
pop
outsl
pop
mov
jecxz
aam
dec
mov
push
int3
mov
repnz
mov
aam
aad
adc
aam
call
pop
jmp
repz
mov
faddl
cmp
cmc
rcrb
lret
jg
sub
jbe
lret
mov
ja
addr16
iret
xor
shll
inc
ja
mov
jnp
stos
sar
jge
inc
push
movsb
pop
lcall
jb
insl
sub
add
in
push
fdivl
popa
jecxz
cltd
mov
xor
push
pop
mov
repz
xchg
sbb
jb
rcll
into
mov
nop
inc
sbb
sbb
sti
clc
test
xlat
or
sbb
testb
mov
sbb
in
or
sbb
inc
xor
popf
aam
rcrb
jp
shl
dec
and
das
lahf
mov
mov
xchg
sub
mov
fcmovbe
push
mov
dec
sub
push
repz
xor
xchg
fbld
jns
or
xor
int
xchg
jmp
cmpb
mov
fs
sub
dec
and
adc
stos
cmp
sahf
mov
and
dec
cmp
lock
ljmp
xchg
jg
idivb
pusha
sar
inc
dec
icebp
xor
lods
add
xor
sbb
lahf
sub
lahf
xlat
insl
cmp
in
mov
dec
push
es
fistps
ret
lea
jp
mov
sbb
or
or
xor
out
lds
sti
jle
and
mov
and
sti
insb
inc
and
or
sti
fists
mov
orb
imul
push
int3
ret
xchg
push
xor
sub
and
cmpsl
es
xlat
mov
inc
cltd
add
stos
fsubl
mov
fimull
ja
ja
int
xlat
repnz
fucomp
and
test
fucomip
mov
push
aad
fld
or
wbinvd
cltd
add
cmp
add
cmp
add
mov
sub
mov
jg
into
push
inc
ror
xchg
daa
cmp
aas
clc
pop
dec
sbb
cmpsl
ja
icebp
lret
je
mov
hlt
lahf
aas
das
adc
dec
cmp
push
adc
cmp
es
cmpsl
fisubrl
add
sahf
stos
icebp
testl
sbb
mov
pop
or
xchg
sbb
movsb
outsb
pop
andb
bound
xchg
ds
cmp
push
lock
cld
xchg
nop
pop
sub
inc
daa
cmpsl
in
xchg
addb
jl
sbb
pop
in
jb
test
movsl
imul
insl
cmp
pop
test
sbb
in
les
push
dec
sub
mul
aas
insl
jge
push
scas
je
jmp
lock
mov
and
into
cli
adc
mov
and
cmpsl
ds
xor
sbb
aad
or
es
aam
sub
push
cld
enter
aas
dec
imul
dec
sbb
sbb
movsl
pop
loope
outsb
enter
cmp
test
rorb
mov
loop
xchg
lods
xlat
xlat
pop
loope
mov
inc
sub
sbb
movsb
dec
xchg
mov
sti
pushf
lock
jl
lea
xor
bound
inc
mov
push
mov
testl
sbb
sbb
dec
and
es
push
js
xor
aad
pop
lock
leave
pusha
insl
push
and
int3
xchg
movsb
cmc
stos
push
test
mov
fst
push
push
push
dec
dec
inc
fstps
filds
icebp
xchg
ret
cmp
int3
and
lds
adc
or
inc
sbb
sub
add
jne
lea
xlat
int
jae
or
cmpsl
mov
push
mov
xor
inc
mov
repnz
enter
mov
jle
mov
jl
or
dec
add
aam
jne
les
lahf
ljmp
nop
fstpl
dec
adc
jns
ds
xchg
xchg
ret
add
inc
inc
adc
mov
adc
cmpsb
pop
or
mov
xchg
call
dec
std
or
mov
cli
mov
push
adc
mov
int3
mov
lret
mov
mov
stos
and
mov
test
nop
mov
add
arpl
mov
inc
outsb
out
push
sbb
subb
adc
jae
cmp
cltd
mov
xor
pop
out
lret
mov
psubw
adc
scas
movsl
mov
pop
in
push
mov
inc
daa
orb
outsb
lret
jle
cmp
pop
and
sahf
push
out
ror
sub
mov
add
aam
and
and
insl
idivb
scas
ret
stos
cltd
addr16
cltd
jno
cmp
jmp
in
push
in
mov
js
jns
jg
dec
scas
pop
mov
mov
je
fcomi
dec
xchg
jbe
xchg
push
enter
sub
dec
xor
mov
xchg
inc
and
sbb
das
push
xchg
popa
push
scas
popa
pop
adc
push
jnp
sbb
cmp
jno
xchg
or
cmp
xchg
jle
sahf
jnp
in
gs
aad
mov
fisubl
jns
scas
sub
ss
adc
push
cmp
adc
jbe
sbb
arpl
lods
mov
push
xchg
pop
fwait
push
aad
outsb
data16
test
xchg
xchg
test
rorb
ret
and
rcrb
clc
xchg
push
mov
adc
mov
cmp
cmp
sbb
iret
sub
clc
pop
xchg
imul
into
sub
jo
push
cmc
dec
sbb
inc
xorb
loop
add
push
mov
fdivrl
shll
sti
dec
scas
add
pop
add
add
jae
fucomi
cltd
test
push
dec
fcompl
pop
adc
xchg
mov
mov
lret
push
shr
in
mov
aaa
and
jbe
leave
fs
pop
lahf
call
ret
pop
out
lcall
mov
sbb
xlat
mov
pusha
inc
ficoml
sbb
mov
lds
xchg
test
dec
sbb
xchg
and
add
pop
cmpsl
mov
and
and
lcall
ficomps
push
cmpsl
inc
push
jne
push
mov
and
sbb
push
imul
in
sub
stc
leave
push
test
arpl
pop
ljmp
lds
jae
inc
les
call
into
je
jge
mov
out
pop
pop
jp
out
loopne
mov
in
fs
xor
mov
jge
orb
movsb
loope
xor
jo
pop
sub
adc
push
shl
hlt
cmp
insb
inc
loop
repz
stos
xorl
push
or
pop
add
jmp
and
cs
into
lahf
and
pop
sarl
nop
jnp
fwait
pushf
jbe
or
mov
mov
jb
sub
push
andb
rolb
xor
je
movsl
or
out
in
lahf
insb
scas
push
sbb
mov
inc
push
xor
jg
lret
aas
mov
sbb
push
test
mov
cwtl
aad
call
rcrl
int
lret
aam
lcall
loopne
mov
aas
xor
push
pop
pop
repz
and
fcomip
dec
iret
and
push
out
jne
repz
outsb
pop
cld
mov
jnp
xchg
lods
adc
ja
mov
mov
jecxz
loopne
addr16
pop
mov
popa
jno
in
aaa
or
cltd
and
mov
sbb
sub
adc
in
adc
cmpsl
xchg
inc
insb
cli
fnsave
mov
cld
pop
jne
lcall
sbb
adc
jne
mov
mov
ljmp
add
insb
jne
xor
add
mov
sub
push
mov
add
sub
push
and
push
ja
push
xor
pop
add
jo
xor
cmpl
mov
mov
jecxz
xchg
push
mov
testl
cli
xlat
movsl
popa
stos
sbb
cld
idiv
jecxz
dec
jmp
or
leave
add
lcall
inc
pop
dec
pusha
lds
repz
pop
ss
shll
aad
pop
rcr
lret
cwtl
call
scas
data16
out
or
inc
andl
movb
ja
mov
lea
jno
sub
mov
dec
fsubs
aas
stos
xor
aas
popa
rcrb
lea
shlb
fidivl
sti
lds
fdivp
aas
jg
sbb
mul
out
aad
xchg
jg
ljmp
sahf
adc
lock
mov
aas
movsb
pop
jnp
leave
neg
ret
loope
mov
mov
inc
mov
jae
cltd
push
sub
mov
adc
ja
push
inc
rol
stos
addl
push
push
pop
jge
sub
pop
loopne
loop
add
push
andl
or
les
add
adc
ljmp
mov
jb
lods
rorb
stos
push
jne
sbb
filds
mov
aas
sbb
shlb
cltd
rcll
xchg
loop
cltd
sbb
rcll
cmpsb
out
adc
adc
mov
in
cmp
pusha
pushf
sub
xlat
push
fst
outsl
out
aaa
leave
stc
mov
cmp
popl
pushf
shl
mov
jg
sub
mov
cmp
imul
fldl
jo
xchg
clc
jle
test
push
dec
insl
inc
inc
hlt
xchg
push
repz
jl
in
cmp
mov
jl
loop
fscale
movsb
iret
lods
pop
test
push
dec
or
gs
inc
leave
loope
sub
in
aam
dec
lods
push
arpl
lea
or
scas
cwtl
sub
dec
sbb
in
int3
sub
push
movsl
mov
jae
xor
fwait
cltd
sbb
xchg
add
push
loope
inc
jbe
adc
outsb
movl
push
lock
pop
cli
lret
xor
push
bound
cmpsb
jg
xor
test
sbb
outsl
pop
or
call
jb
repz
in
fbstp
stc
sahf
sbb
mov
push
fisttpl
mov
sub
ret
mov
aad
cmp
add
in
sahf
pop
aas
jae
repnz
stos
pop
mov
je
jl
sbb
mov
mov
lea
xor
loopne
add
dec
adc
jno
xor
ja
outsb
jno
hlt
out
call
repz
jae
into
pop
int
and
sbb
pusha
jg
inc
test
lods
repz
push
mov
push
fsincos
ja
mov
and
hlt
loope
scas
and
pop
pop
popf
jo
cmp
sub
dec
dec
or
and
sub
push
xor
ds
inc
ud0
mov
call
data16
iret
xor
fidivl
jno
cli
and
xor
fdivp
mov
and
int
int
dec
mov
push
pop
pop
cwtl
out
fidivl
imul
es
pop
inc
mov
jne
test
fisubrs
andl
imul
lret
pop
jo
and
nop
or
inc
pop
cmp
add
ljmp
daa
jle
outsb
pop
int
pop
es
jnp
jns
cmp
cmp
mov
add
pop
push
dec
fldl
xchg
stos
jae
lcall
icebp
inc
inc
cmp
lret
adc
loope
imul
das
pushf
shrb
jp
fisubrs
pop
je
add
mov
sbb
inc
ljmp
mov
sub
xor
cmp
std
inc
test
pop
jp
push
arpl
daa
stos
and
lock
rdmsr
mov
or
inc
aas
in
add
mov
test
and
clc
sub
dec
dec
push
push
and
or
sarb
push
cmc
jno
sbb
sti
in
pop
std
add
adc
dec
test
in
pop
sbb
fldz
cwtl
add
stc
js
cli
lcall
add
mov
inc
pusha
rcll
xchg
push
loope
mov
dec
mov
addr16
jp
mov
popl
jae
sahf
aam
sbb
push
mov
ja
mov
push
jecxz
or
mov
movsl
test
nop
lods
xor
repz
xchg
xchg
push
jbe
dec
jo
mov
xchg
lea
jp
ljmp
push
out
jae
outsb
sub
cmc
cmpsb
inc
scas
jb
frndint
xchg
ss
popa
sub
aas
dec
lcall
outsl
add
inc
stc
xchg
sbb
repnz
loopne
idiv
out
rorb
or
aas
in
lret
cmp
orl
jecxz
pusha
jg
loop
hlt
xchg
pop
aaa
mov
fdiv
xlat
jb
sub
outsl
aas
cmp
lahf
cltd
inc
fiaddl
bound
xor
notb
lock
cmp
adc
scas
xchg
push
adc
in
jg
pop
mov
jp
shrb
das
mov
jle
or
lret
inc
pop
jne
outsb
mov
xor
stos
sub
cltd
xor
and
sub
dec
xor
mov
mov
mov
clc
lea
test
in
es
xchg
jns
sbb
mov
jns
inc
jno
aaa
pop
push
pop
mov
insb
mov
xchg
pop
fnsave
xchg
mov
mov
movsb
fsubl
mov
cmpsl
cmp
lea
push
cmp
push
pop
insl
push
enter
mov
lahf
sub
mov
push
push
push
rcl
out
dec
repnz
loop
loop
jb
add
cmp
xchg
sti
into
jb
addr16
xchg
inc
sub
addr16
test
cwtl
jecxz
das
sub
cli
lar
push
add
xchg
int3
add
arpl
add
orb
call
cltd
and
xor
arpl
ljmp
out
and
ljmp
pusha
test
neg
shlb
sahf
inc
inc
sti
popa
xchg
js
lock
jp
es
mov
cmp
jmp
jo
pop
add
cmp
mov
adc
into
fldt
cmc
sbbl
stos
dec
arpl
mov
mov
push
sarb
fsts
ja
idivb
jl
mov
pop
aam
cmpsb
sbb
mov
xor
xchg
js
xor
fsubrp
mov
inc
or
push
std
xchg
popa
hlt
out
mov
test
insb
sub
fidivs
jnp
ds
fcomp
pop
jne
mov
inc
or
sbb
aad
mov
into
scas
sbb
pop
mov
xchg
popf
xchg
sub
cmc
aam
setne
sbb
push
stc
lods
mov
cld
aam
jle
pop
xchg
cld
test
ds
test
data16
mov
outsl
xchg
inc
xchg
and
push
inc
rorb
cmp
cmc
cmpsl
pop
icebp
incb
fsubrl
ret
pop
cmp
mov
lea
mov
outsb
jno
push
sbb
fs
movsb
stos
and
cltd
mov
xor
xchg
push
roll
mov
ror
cld
mov
xchg
push
loope
into
dec
icebp
pop
mov
xchg
sub
in
mov
incb
push
neg
lcallw
xor
jp
int
icebp
das
push
pop
dec
les
xor
push
jle
sbb
stos
jnp
rolb
sbb
ja
xchg
inc
iret
mov
popa
mov
clc
sub
jno
mov
jg
addr16
imul
adc
arpl
hlt
or
lods
inc
in
insl
fwait
inc
jb
sbb
mov
jae
fmuls
mov
movsb
cmpsb
sbb
xlat
jo
sbb
push
mov
cmpsl
xor
fldenv
gs
lret
jmp
push
xor
sbb
sbb
xor
pop
enter
pop
jp
sub
or
arpl
imul
dec
sub
test
outsl
sbb
inc
push
and
test
incl
push
or
mov
or
enter
lds
fs
or
popa
mov
adc
and
addl
arpl
and
pop
inc
rclb
inc
ret
fstps
out
and
push
divl
pusha
mov
cmc
xor
imul
mov
cmp
leave
cmp
ds
mov
push
mov
repz
pop
xchg
sti
push
push
lods
jo
rcll
push
enter
xchg
arpl
jbe
lahf
add
dec
out
fs
mov
or
push
sub
int
dec
add
lret
ret
clc
repnz
arpl
xchg
rcrb
icebp
lret
and
mov
test
repnz
in
jne
xlat
lcall
push
stc
inc
ss
or
mov
xchg
jecxz
jo
cmp
enter
dec
inc
sub
in
pop
sti
pop
fwait
mov
and
dec
leave
cmpsb
jne
sub
mov
jae
mov
inc
dec
sti
cltd
ljmp
mov
aaa
lods
push
mov
loope
ficompl
adc
test
mov
jmp
mov
inc
loop
sahf
cmp
fs
data16
inc
lods
fidivrl
or
in
push
mov
in
inc
emms
fcoms
test
mov
adc
movsb
sub
subl
ret
stos
bound
stc
and
push
sbb
pop
push
push
insb
shll
jecxz
popa
sbb
sub
ljmp
dec
xchg
in
fadds
inc
sub
insl
pop
scas
xchg
fnstsw
mov
rcr
pop
arpl
inc
mov
add
or
dec
mov
rorb
mov
adc
pusha
add
mov
lahf
dec
mov
and
dec
xchg
movsl
push
cli
cld
dec
mov
or
ss
dec
gs
add
push
aaa
daa
inc
pop
test
mov
fldt
lcall
and
cmpsb
test
cmp
sarl
cltd
mov
push
fidivs
and
mov
icebp
xor
add
cmp
or
sbb
ficoms
aad
mov
xlat
loope
aaa
clc
call
add
mov
gs
sbb
outsb
push
addr16
iret
test
ret
push
inc
dec
mov
fucomp
mov
mov
jle
mov
cmc
idivl
mov
jg
arpl
rclb
fiaddl
imul
ret
shr
sub
and
xor
dec
add
das
push
mov
sarb
jle
imul
rol
int3
ds
mov
xchg
add
xchg
inc
pop
into
and
push
adc
jo
dec
int
outsl
movsl
gs
orl
mov
lahf
test
cltd
mov
mov
mov
bound
cmpsb
pop
push
pop
shll
sar
int
and
and
push
je
cmp
mov
jb
mov
fdivrs
mov
repz
xchg
or
stc
test
out
sbb
or
icebp
inc
bound
addr16
js
cmp
adcl
cmpsb
dec
cmp
push
mov
test
inc
xorb
cmp
lcall
popa
lret
xchg
push
outsl
xor
push
push
stc
cmp
adc
dec
out
xchg
or
jecxz
lcall
int3
in
mov
jae
dec
mov
hlt
sub
adc
fsubr
ficoms
mov
int3
xchg
sub
in
das
insb
pop
fcoms
lds
lock
push
mov
flds
jbe
lcall
add
add
pop
pop
adc
divb
ja
mov
bnd
pop
and
in
test
xchg
xor
pop
iret
je
dec
sub
js
daa
push
into
push
jecxz
jnp
aad
push
aad
mov
xchg
in
push
cmpsb
or
dec
jnp
jg
ja
fs
lcall
fadd
out
pop
cmpsb
pop
pop
pop
pop
sbb
mov
push
jne
repz
and
loopne
xchg
aaa
lds
jo
jge
push
call
mulb
push
sbb
jae
push
cltd
mov
xchg
mov
fdivs
sub
mov
lods
movsl
mov
push
lock
pusha
sbb
inc
pushf
pusha
ret
test
sbbb
sub
jecxz
inc
fwait
cld
mov
and
jnp
add
lahf
xor
xor
fcompl
and
push
xlat
out
fistpll
jb
cli
or
out
push
inc
jno
dec
mov
mov
mov
xor
dec
inc
or
scas
and
pusha
ss
push
clc
mov
jmp
and
sub
ret
les
xchg
scas
in
popa
subl
cmp
xor
push
and
push
pusha
out
out
jb
mov
int3
sbb
lea
mov
int3
lods
fisubrl
hlt
stc
sub
mov
test
test
push
mov
fwait
shrl
aad
stc
sbb
sbbl
jb
ss
mov
daa
jmp
and
or
xor
lea
bnd
inc
inc
cmpsl
add
and
divl
test
pop
xor
add
push
jae
xor
jnp
hlt
cmc
fldl2e
imul
sbb
mov
cmc
test
xchg
loop
or
jmp
aas
mov
in
shl
pushf
xor
mov
xor
push
cs
icebp
mov
je
ret
push
loop
push
inc
dec
inc
fdivl
add
dec
out
das
ret
jbe
inc
not
leave
cmp
lock
or
inc
cs
mov
cmp
in
scas
jecxz
test
cwtl
mov
jecxz
js
call
ljmp
inc
or
sbb
pop
bound
cmc
mov
and
movsb
and
add
fildl
mov
add
into
subl
stos
sarl
fistpll
sbb
adc
test
into
mov
pop
ss
add
daa
adc
mov
xchg
xchg
mov
xlat
mov
adc
jnp
cmp
or
gs
sub
loopne
and
push
fwait
sub
into
xchg
dec
sbb
leave
lods
cmp
mov
lahf
pop
sbb
cmp
adc
icebp
pushf
dec
test
mov
mov
lock
pop
inc
sub
out
mov
es
mov
cmp
and
cmp
push
or
fstl
add
fidivl
mov
mov
lahf
popl
or
cmp
shlb
fbstp
mov
xor
cmc
mov
cmpsb
sarb
push
das
sub
iret
xchg
cld
push
add
lock
lock
hlt
lds
xchg
sbb
pushf
orl
movsb
xchg
js
pop
imul
mov
push
cmc
mov
in
add
ds
idiv
cmpsl
xchg
pop
fistpl
call
mov
mov
lcall
dec
stc
in
stc
insb
adc
mov
out
sub
adc
outsl
test
push
ljmp
ror
mov
cmpl
not
mov
jmp
mov
jne
pushl
push
pushl
pushl
pushl
call
sbb
xorl
add
addl
movzbl
or
mov
sub
adc
mov
addl
mov
cmpl
mov
movl
movl
jmp
movl
not
jbe
push
push
push
push
push
call
movzbl
sbb
adcl
mov
and
xor
xor
xor
mov
and
add
cmpl
mov
mov
movl
not
jmp
movl
jbe
pushl
push
pushl
call
xor
add
sub
inc
adc
orl
adcl
mov
mov
mov
add
shrd
incl
shr
adc
mov
cmpl
movl
mov
mov
jmp
movl
movl
jle
pushl
pushl
push
push
call
xor
and
xor
movzwl
sbb
subl
xor
or
mov
sbb
mov
and
mov
sub
xor
sbb
shl
sub
xor
orl
or
mov
cmpl
mov
mov
mov
mov
jmp
mov
jb
pushl
call
subl
movzbl
and
mov
add
orl
sbb
sbb
sub
mov
shrd
addl
shr
mov
mov
adc
mov
addl
xor
xor
adcl
or
shl
lea
mov
subl
mov
shrd
shr
xor
mov
sbb
mov
inc
mov
movzwl
sbb
xor
mov
and
mov
xor
andl
or
adcl
shl
cmpl
mov
mov
mov
movl
jmp
movl
jbe
push
push
push
pushl
call
sbb
addl
mov
sbb
mov
xor
sbbl
neg
imul
xor
jmp
fistpl
sbb
jmp
push
test
jae
test
dec
push
push
sub
push
push
mov
sub
inc
push
jno
imul
add
test
jge
sub
jp
fmul
shl
leave
push
adcb
scas
jmp
xchg
and
inc
imul
pop
mov
into
mov
mov
add
dec
fcmove
mov
push
xchg
mov
mov
leave
insb
sub
iret
rcrb
inc
in
and
bound
cmpsl
vmulps
nop
mov
inc
pop
cmp
mov
xor
mov
ds
cmp
adc
loop
inc
loopne
jmp
fbstp
and
add
dec
pop
sbb
movl
sti
or
cmp
and
push
mov
and
inc
loop
aad
pop
lahf
and
push
idiv
pop
push
inc
dec
sub
push
pop
dec
pushf
lods
mov
arpl
pop
add
pushf
lods
pop
out
movsl
or
pop
pop
aad
ds
gs
inc
dec
push
push
jno
pushf
push
out
sub
movsb
cmp
prefetchwt1
or
into
lahf
xchg
js
in
mov
and
sbb
out
pop
cmp
jp
in
mov
shr
mov
fstl
or
mov
arpl
sbb
xchg
dec
cmpsb
movsb
cmp
cltd
mov
arpl
jnp
sub
adc
pop
movsb
adc
xor
inc
imull
int
cltd
in
push
push
enter
addr16
cmp
xor
mov
and
insb
adc
sbb
inc
popf
popf
xchg
add
scas
or
ret
add
cmp
or
dec
lea
jae
push
mov
mov
jle
pop
je
lret
fldenvs
xchg
lcall
sub
scas
pop
pcmpgtw
cli
pop
mov
and
pop
inc
stos
xor
shl
xchg
mov
prefetchw
rcr
or
shrb
ret
adc
out
dec
fnsave
sbb
addr16
inc
aam
xor
in
es
leave
fisubrl
fwait
aaa
pop
xchg
dec
rclb
pop
call
je
adc
mov
fistl
cmp
icebp
push
push
dec
sbb
movsb
shll
shll
jg
das
lcall
mov
inc
xchg
dec
jmp
cli
into
out
ret
out
or
in
int
jnp
inc
mov
adc
dec
jnp
pop
mov
sbb
fldln2
xor
adc
xchg
xchg
inc
call
cmp
insl
jp
xor
in
aas
xor
imul
xchg
jbe
rsqrtps
out
lods
cmp
dec
mov
push
or
sbb
loopne
adc
mov
and
xor
inc
mov
add
push
rolb
or
test
jp
xor
jg
in
push
insb
imul
or
iret
das
jae
fstl
call
inc
mov
lret
pcmpgtd
cs
or
aas
adc
imul
ss
ret
mov
inc
cmp
push
mov
mov
push
aad
out
inc
pop
xlat
ret
icebp
cmp
xor
testl
jno
cs
push
fmull
sub
das
repz
and
inc
int3
mov
dec
out
popf
movl
dec
dec
push
mov
test
adc
dec
xor
fsubl
xchg
adc
jo
cwtl
adc
jle
mov
fmul
or
hlt
out
or
insl
push
je
std
inc
aaa
mov
adc
fildl
fs
lcall
dec
adc
popa
rol
push
xorb
push
jo
icebp
sahf
stos
imul
cmp
xchg
pop
jno
cmp
pusha
sub
and
xchg
paddusb
push
mov
xchg
ljmp
in
xor
jp
rorl
inc
xor
sbb
in
or
or
push
out
ja
push
mov
mov
je
repnz
mov
fwait
jns
vaddps
or
cmc
push
fadds
add
xor
dec
aaa
shrb
cmc
sbb
xor
jno
inc
iret
sbb
hlt
add
dec
repnz
cmp
mov
push
jmp
sub
cs
icebp
lods
daa
xlat
mov
popf
pop
inc
cld
loop
jb
xor
xor
ret
dec
pop
fstps
loope
adc
cli
and
mov
push
imul
imul
fsubrs
sbb
testl
data16
and
loopne
mov
sub
add
mov
es
mov
sbb
push
pushf
sub
pop
out
mov
or
xlat
push
sahf
jb
add
stc
bswap
push
add
mov
pop
stos
xchg
sbb
jb
cmpsb
scas
aas
je
popa
pop
jl
xor
jecxz
sbb
idivl
imul
push
xor
mov
fs
fwait
pop
mov
js
jne
sbb
and
ret
pushf
test
sub
lret
mov
xchg
cmp
imul
inc
outsb
shll
subb
cmpsl
jmp
hlt
and
int3
fnsave
cmp
push
and
mov
mov
or
adc
pop
or
in
xchg
lahf
out
cmp
loop
or
shll
test
pop
insb
cmpl
aas
in
and
out
lock
scas
inc
inc
cmp
repnz
lahf
shrl
push
arpl
std
xchg
mov
sbb
das
adc
push
jb
mov
jae
push
and
sti
mov
mov
mov
push
xor
mov
mov
jae
xchg
adc
mov
pop
pop
repz
test
lahf
das
push
nop
ret
cltd
pushf
out
xchg
popf
fisubrs
mov
mov
jg
mov
mov
jl
icebp
lret
sahf
sub
rcrl
mov
andb
cmp
xchg
push
das
and
jg
lock
jb
scas
rorl
mov
ds
adc
mov
cmpsb
cmp
jmp
sbb
test
pop
cmp
xor
lods
icebp
lds
aaa
mov
inc
cmpsb
or
dec
mov
popf
inc
inc
inc
pop
push
test
push
pop
rcrl
push
out
cltd
mov
cmp
dec
cmpsl
fists
jecxz
nop
push
sbb
mov
inc
push
rorb
xor
mov
cmp
push
cmpsl
mov
addr16
imul
mov
fwait
loop
cmc
jg
es
fsubrs
cmpsl
cmc
out
icebp
fisubl
push
xchg
adc
xchg
fistpll
fst
jecxz
das
imul
sets
lods
mov
jle
push
cmp
fimull
jmp
push
and
dec
xchg
enter
cmp
and
lret
int3
enter
iret
inc
and
movsb
xchg
push
adc
and
out
sahf
and
xlat
out
inc
mov
or
or
xchg
cmp
inc
push
loope
lcall
cmc
call
and
adc
cwtl
aaa
adc
adc
inc
or
cmpsl
sahf
sub
mov
push
sub
mov
or
loop
push
enter
push
cmp
data16
scas
xor
jbe
jg
xchg
jo
movsl
repnz
adc
insb
inc
sahf
sbb
mov
mov
xor
das
mov
out
int
jae
or
scas
lds
lods
push
call
mov
adc
pop
sbb
push
and
add
cld
sbb
out
and
push
outsb
call
mov
mov
nop
pop
out
add
mov
xlat
pop
cmpsl
int
addl
shr
xchg
and
mov
lods
sbb
inc
shl
mov
fadds
push
mov
decl
in
pop
subl
cld
xor
pop
lret
pop
or
mov
in
add
dec
dec
sbbb
test
aaa
pop
xchg
cmp
sbb
jg
xchg
minps
fimuls
orl
inc
out
jge
cli
stos
je
inc
insl
jns
mov
or
or
inc
and
sub
fmuls
mov
clc
pop
adc
pusha
sub
push
cmp
test
jmp
xchg
imulb
data16
sbb
rorl
cmp
dec
dec
pop
cmp
aaa
push
dec
push
adc
add
xchg
adc
jl
jecxz
mov
andnps
arpl
scas
into
pushf
xchg
insb
pushf
aad
pop
aad
popa
pusha
mov
xchg
aad
push
xchg
xor
adc
push
or
fcomps
mov
sub
mov
pop
pop
mov
dec
mov
push
lea
jp
jnp
ja
dec
cmp
sub
adc
dec
fsubrs
dec
sbb
dec
ljmp
mov
push
aad
jmp
inc
inc
push
stos
mov
into
xchg
mov
fisubl
cmp
sub
out
xor
int3
icebp
xchg
rol
jnp
push
fcoms
pop
sbb
jmp
jb
cmp
pop
mov
mov
mov
adc
add
adc
popf
push
stos
bound
adc
cmpsl
or
push
decl
in
lds
addl
notl
pop
ror
mov
mov
or
loop
sbb
inc
shl
out
and
cmc
loop
movsb
imul
adc
incl
je
and
inc
sub
lods
xor
jge
into
adc
movsl
imul
jg
jmp
or
lahf
ds
ret
pushf
repz
push
sbb
push
jbe
pop
xor
dec
outsb
dec
mov
mov
dec
les
aad
cmc
in
cmp
fs
pusha
cmpsb
in
cmp
data16
sbb
arpl
mov
adc
sbb
or
or
insl
shll
jp
popa
movsl
xor
or
in
ja
lret
dec
mov
cli
in
in
pop
fimuls
fcompl
push
xor
and
sti
sub
imulb
jg
sbb
xor
dec
mov
mov
push
test
sbb
sub
and
xlat
daa
mov
shlb
cmp
outsl
pushaw
repz
cs
in
cmp
xchg
xor
mov
push
outsl
mov
adc
adc
mov
fisttpll
in
addl
cld
sahf
aaa
mov
dec
add
jp
sarl
push
xlat
sahf
cwtl
movsb
in
inc
and
xor
in
mov
out
push
and
negb
mov
lcall
in
mov
adc
sbb
ficoml
or
test
xchg
nop
jl
cs
outsb
mov
pop
xchg
cmp
cmp
mov
lcall
adc
lea
cwtl
jae
ret
adc
jmp
xlat
shrl
jo
in
inc
pop
add
subb
ljmp
dec
mov
cmp
push
es
aad
shl
xchg
in
xchg
jge
pop
pop
push
lahf
shrb
cmp
rcrl
xorl
rorl
cs
and
stc
push
push
daa
xchg
aaa
push
dec
insb
push
stos
stos
xchg
cmp
xor
inc
add
xlat
ret
nop
sub
aam
mov
or
and
loopne
adc
jl
pop
clc
decb
xchg
loope
out
jne
mov
jnp
add
mov
aad
out
daa
data16
xor
insl
cmp
sbb
push
scas
adc
aad
lock
xor
mov
add
jo,pn
fidivl
xchg
je
es
jl
mov
stos
inc
outsl
add
push
ss
sti
lahf
and
push
popa
mov
push
adc
xor
addr16
xor
sti
mov
andl
xchg
add
jl
sbb
repz
fidivs
lahf
pop
pop
cmp
push
add
adc
call
mov
xchg
inc
outsl
or
sbb
mov
addr16
sub
dec
test
jge
test
jmp
sub
dec
repnz
sub
test
in
cmp
xchg
inc
or
push
mov
pop
add
xor
mov
or
sub
pop
inc
mov
pop
dec
fistps
xchg
aas
xchg
je
insb
imul
iret
inc
mov
pop
mov
ss
dec
pop
mov
add
add
cmp
jnp
roll
iret
insb
aad
or
inc
dec
dec
addr16
daa
stc
pop
sbb
das
sub
dec
pushf
setbe
imul
scas
in
dec
add
iret
int
ljmp
test
push
pop
aas
push
jns
scas
mov
int
cmp
sbb
pop
mov
add
dec
push
in
sub
mov
fisubs
je
add
test
jo
dec
dec
int3
loop
out
mov
dec
pop
pop
add
addr16
jo
test
push
sub
fists
mov
das
aaa
fists
cmp
movsl
mov
out
insl
jbe
mov
inc
sbb
pop
mov
xchg
xchg
mov
in
add
jns
outsl
icebp
stos
inc
in
or
movsb
stos
loop
pushf
pop
mov
aaa
and
cli
fstpt
or
shl
mov
push
sti
push
cmpl
adc
leave
mov
sbb
dec
div
fmull
jg
cltd
sbb
sub
pop
jg
incl
push
inc
out
pop
lods
shl
test
mov
daa
pop
sub
imulb
mov
addr16
add
add
pop
or
fcomps
inc
pushf
mov
cmp
negl
xchg
add
mov
mov
inc
pop
lds
cli
mov
into
xorb
lock
cltd
les
xchg
xchg
scas
orl
imul
push
inc
xchg
push
addb
fiadds
xchg
movsl
jmp
aad
into
xlat
sub
insl
pop
push
cmp
push
pop
xchg
lods
gs
jae
in
xchg
ds
push
into
and
pop
bound
xlat
xor
lods
cwtl
pop
adcb
stos
fdivl
sub
adc
push
loope
jnp
in
and
xchg
adc
mov
xor
mov
imul
push
lods
insl
push
std
xlat
fmull
cmp
addl
adc
push
jp
lahf
push
pop
pop
stc
sub
cmp
xchg
sub
cltd
std
sbb
lcall
add
lods
adc
into
push
pop
testl
in
mov
push
aad
sbb
or
pop
dec
mov
and
xchg
ja
das
dec
outsl
or
sbb
pop
insl
in
jmp
mov
test
es
clc
and
stos
sbb
std
addr16
add
cmp
out
lods
xor
xlat
outsl
loope
nop
and
insb
dec
push
adc
inc
mov
test
int3
int3
jo
lds
int3
mov
and
jl
xchg
fs
xor
stc
adcb
jecxz
adc
les
in
data16
xorl
cltd
push
push
dec
add
pop
das
rcrb
push
pop
adc
ss
pusha
fsubr
outsb
sbb
sti
dec
test
jbe
or
clc
push
mov
mov
in
dec
xorb
mov
push
iret
ficompl
lret
sub
or
cwtl
xor
xchg
lea
adc
sub
rcr
addr16
inc
xchg
add
cmp
mov
popf
stos
inc
fwait
lods
fisubrs
gs
mov
shl
mov
mov
cs
pop
ret
lock
or
or
xchg
and
lret
jb
adc
xor
inc
sbb
adc
daa
cmp
cmc
scas
jl
jle
jno
es
fiaddl
sbb
mov
add
sub
push
fdivrs
pop
and
cmp
xchg
scas
ret
clc
push
fwait
ja
mov
push
dec
dec
cmpsl
lret
jb
and
jae
ljmp
into
rolb
leave
mov
lret
sub
sarl
testb
mov
pusha
pushf
or
sbb
and
and
pop
inc
aam
push
out
or
scas
or
lahf
rorl
jns
adc
pop
test
bound
dec
inc
jae
push
in
jecxz
pop
das
push
fisttpl
sti
shr
adc
addr16
pop
and
xchg
aaa
sub
or
xor
mov
xor
out
push
test
out
jge
loop
fistpll
in
shrb
jbe
lret
gs
xor
pop
dec
orb
inc
in
dec
cwtl
mov
xchg
jbe
gs
andl
xchg
addl
cmp
mov
leave
aaa
lcall
fmull
iret
push
add
and
nop
scas
mov
ljmp
orb
pop
dec
mov
mov
stos
mov
imul
sti
lods
mov
mov
popa
push
hlt
sbbl
xchg
push
and
pop
dec
mov
pop
fnstsw
add
push
push
cmp
js
sbb
loop
inc
cwtl
lds
dec
hlt
push
xchg
and
int
int3
push
aaa
ss
or
popl
lds
aad
jno
in
inc
xchg
jno
jo
push
rorl
daa
std
sbb
sbb
aam
xchg
dec
xchg
test
lods
cld
jge
movb
pop
push
dec
fstpt
xchg
xor
cwtd
mov
mov
and
and
adc
bswap
nop
cld
mov
add
cld
sbb
lds
mov
mov
bound
ss
jecxz
mov
into
sub
mov
test
sbb
in
xchg
iret
pop
mov
push
orb
lahf
mov
add
xor
mov
out
jo
jg
push
sub
cmp
int
push
push
pushf
ret
jnp
shl
mov
and
loopne
mov
fwait
inc
aas
lds
push
pop
push
sarl
mov
xor
insb
shlb
sub
pop
jns
sub
lret
and
outsb
cmp
pop
push
aaa
cmpsl
dec
mov
xchg
dec
cli
fists
cltd
enter
adc
sbb
pop
adc
aam
add
rclb
mov
movsb
add
jle
push
jle
pushf
mov
jecxz
out
mov
mov
addr16
negb
fwait
daa
aad
cmp
fadds
sahf
stos
push
fcom
or
cs
jne
or
out
adc
jnp
mov
sbb
push
jmp
and
mov
fadd
xchg
push
inc
out
inc
out
adc
sti
testl
sti
fcomps
loopne
mov
xlat
sarb
ljmp
inc
popf
mov
push
inc
loope
sub
cmp
aam
test
pop
lcall
jg
jl
mov
in
sahf
adc
leave
int3
dec
xor
xor
mov
jge
test
roll
lods
dec
mov
jne
pusha
jno
pop
loopne
lcall
shlb
xchg
clc
stc
mov
sbb
inc
sbb
gs
and
mov
mov
ret
out
cmp
lods
insb
iret
stos
repnz
sub
cmp
notl
mov
mov
daa
adc
add
movsb
jle
pusha
test
imul
or
sti
pop
inc
sub
push
inc
in
inc
add
sub
enter
test
mov
adc
push
test
dec
inc
xor
jg
adc
movsl
loope
or
aaa
jg
cwtl
fdivrs
jle
mov
mov
xor
clc
or
outsb
push
push
dec
outsb
add
aad
rol
dec
scas
mov
in
insl
jecxz
fmuls
jne
cwtl
adcb
add
mov
popf
fsubrl
das
ljmp
lds
pusha
sti
inc
lcall
pop
das
pop
ja
out
stc
jae
adc
das
clc
inc
popa
mov
pop
jns
mov
data16
push
mov
push
adc
fdiv
push
adc
iret
mov
clc
push
xchg
lock
mov
mov
into
es
sbb
mov
jl
xchg
dec
push
mov
dec
and
call
mov
pop
mov
add
stc
xchg
mov
popf
inc
daa
movsl
mov
push
movl
pop
dec
xorl
mov
js
ds
lahf
jmp
add
jae
rcrb
clc
ss
imul
inc
push
dec
out
xchg
scas
adc
dec
and
or
add
lret
jb
shrb
cmp
jne
stos
imul
int3
sti
jge
and
shlb
and
mov
imul
test
mov
mov
inc
std
dec
mov
jne
cmc
in
xor
pop
inc
and
inc
adc
movb
cmpb
hlt
add
xchg
insb
out
lahf
fiadds
adc
mov
jnp
fwait
call
dec
lock
cmp
stc
cmp
js
mov
jo
icebp
mov
and
or
arpl
and
sub
fsubrl
xchg
rolb
rcr
sub
mov
push
mov
xchg
lahf
pop
jg
fldcw
icebp
push
push
mov
repz
mov
das
xchg
lcall
sub
dec
cltd
dec
jo
hlt
sbb
leave
mov
cmpsl
cltd
sarb
push
mov
ja
inc
out
pop
and
and
mov
mov
jno
cwtl
js
nop
dec
out
adc
scas
xchg
mov
or
inc
pusha
mov
mov
sahf
scas
jb
jmp
test
or
iret
pop
repz
dec
cmpps
mov
rorb
xchg
push
mov
mov
fldt
inc
cmp
int3
scas
ret
test
std
mov
or
aad
fildl
in
push
in
jne
pusha
repnz
dec
iret
add
imul
xchg
add
fcoms
aas
push
js
pop
xchg
jo
ja
sbb
sbb
sub
loopne
push
repz
push
mov
xchg
xchg
push
aad
aad
mov
push
xchg
mov
sub
enter
and
pop
hlt
dec
cld
das
lods
lods
sub
add
pop
inc
mov
push
mov
es
mov
push
ja
mov
dec
push
jle
sarb
rep
scas
dec
ficomps
or
popa
push
xor
lcall
sahf
push
sub
movsl
fadds
jae
in
xchg
insb
inc
sbb
adc
push
push
cmp
sub
les
push
sbb
outsb
lret
nop
cmc
mov
xchg
mov
insb
shrb
pop
insb
xlat
ja
push
mov
cmp
pop
sbb
repnz
lret
add
das
sbb
and
fmull
mov
push
mov
fcomip
fisubl
mov
nop
insb
and
lahf
mov
xchg
pop
cmp
xchg
xchg
push
sarb
faddl
call
aaa
insl
lds
lods
arpl
ljmp
add
or
in
inc
popa
pusha
lahf
adc
std
mov
movsl
sub
je
je
xchg
fcoms
ja
imul
dec
mov
dec
pusha
sahf
xchg
movsl
jbe
push
xor
lcall
sbb
stos
pushf
sbb
pop
adc
push
sbb
cld
into
sbbl
lcall
inc
test
int
loop
mov
push
push
scas
sti
sbb
jg
pusha
leave
mov
xchg
sti
fstp
push
fsubrs
cmp
and
xor
dec
dec
jnp
ret
sub
add
jb
inc
loope
popf
jle
rcrb
stc
lret
aad
jbe
inc
dec
mov
cmp
add
push
sbb
shll
popf
or
cwtl
xor
add
xor
jne
clc
add
push
in
test
adc
pop
and
lahf
rorb
and
movsb
or
pop
outsb
loopne
pop
cmp
or
test
push
inc
cld
xchg
or
mov
adc
lods
fwait
xor
cmp
xor
sti
push
pop
fidivrs
stos
orl
test
fsubl
lock
fs
push
ss
jns
and
sbb
fistpl
roll
ja
insb
popa
xchg
and
testb
and
lock
mov
jb
and
int3
lcall
push
in
cmp
add
pop
mov
mov
fwait
lods
sbb
out
repnz
mov
sarb
xor
xor
dec
in
jmp
xchg
orl
enter
mov
std
iret
mov
cmc
clc
out
decb
orl
xor
pop
xchg
xchg
je
mov
icebp
cmp
xor
pop
add
and
adc
sti
dec
pop
lods
pop
js
insl
cmp
rorl
cmp
lcall
js
mov
stos
sub
movb
ljmp
adc
stos
aam
and
mov
nop
push
add
in
bound
icebp
movsb
popf
lods
movsb
add
dec
adc
cmp
pop
inc
cmp
imul
mov
addr16
fs
mov
or
pop
push
lods
cli
lret
popa
dec
mov
fs
xor
into
add
fists
jecxz
loope
mov
or
xchg
pop
rcrb
adc
adc
bound
xchg
mov
jmp
xchg
mov
push
lock
lahf
cmp
shrb
mov
push
js
inc
push
sbb
add
fcomps
jmp
ljmp
mov
in
sub
inc
lods
and
lcall
xlat
adc
nopl
das
xor
aaa
stc
lods
cs
or
xchg
cmpsb
movsl
push
mov
mov
add
cmp
dec
fiaddl
or
push
xchg
les
add
out
lret
mov
mov
inc
mov
jmp
pop
fsubl
xchg
lock
hlt
add
outsb
add
xchg
data16
push
mov
mov
dec
push
out
jmp
jp
ljmp
iret
cvtsd2si
xor
or
sahf
insl
js
push
jecxz
xlat
call
jns
sbb
sbb
sarb
lret
test
ja
sub
orb
and
les
int3
jge
icebp
mov
out
scas
pop
jne
testb
add
inc
xor
add
in
test
adc
bound
loope
xchg
icebp
lds
arpl
jae
sub
push
cmp
jne
lcall
sub
sbb
and
clc
iret
or
sub
jno
xchg
push
aam
or
xor
jbe
aas
jnp
movsb
cmc
orl
mov
scas
jle
mov
test
and
ror
mov
cmp
jne
jbe
xorb
and
and
dec
ljmp
sarb
pop
and
mov
and
int
aaa
pop
jmp
cli
popa
adc
push
aam
fistl
add
cmp
jae
out
sub
loop
mov
repnz
or
jmp
lret
mov
out
mov
xlat
fildll
inc
stos
aad
jbe
mov
les
xor
jnp
notb
lds
jbe
or
sbb
or
out
bound
lret
add
sbb
test
push
add
mov
xchg
push
int
mov
enter
pop
fimull
xchg
stos
jge
ror
xor
or
pop
aaa
jge
pop
fidivrl
xor
sbb
pop
subl
mov
sbb
pop
sbb
cmpsl
xchg
idivl
call
mulb
inc
adc
leave
bound
les
hlt
loope
pop
adc
pop
sub
sub
or
mov
and
cmp
pop
int3
mov
mov
xchg
bound
inc
jle
xor
into
lds
mov
loopne
pop
dec
sub
outsl
bound
adc
xor
pushf
fsubrl
inc
ficompl
dec
ret
xor
stc
popf
xchg
inc
mov
adc
sbb
mov
ss
adc
mov
inc
mov
push
iret
out
push
fnstenv
xor
and
mov
sbb
sbb
and
push
movl
inc
psraw
test
inc
and
cwtl
xor
sub
dec
push
sub
outsl
push
mov
xor
cmp
sbb
add
aam
and
movl
xorw
dec
cmp
in
pop
xor
mov
daa
popa
cmp
dec
cmp
add
jge
subl
lea
pop
add
and
mov
dec
stos
and
xor
test
pop
ret
pop
jecxz
jp
pop
mov
movzbl
or
mov
adcl
shrd
addl
mov
mov
xor
xorl
shr
sbb
mov
mov
xor
or
addl
shl
sub
mov
mov
cmp
mov
movl
jg
sub
mov
and
mov
subl
shrd
addl
mov
movzwl
xor
mov
mov
xor
xorl
shl
xor
or
xorl
shr
xor
mov
mov
mov
addl
mov
xorl
shrd
shr
cmpl
mov
mov
jmp
mov
jge
push
push
call
mov
adc
movl
and
and
mov
mov
mov
sub
imul
mov
mov
xor
xor
or
shl
imul
sub
jmp
mov
mov
shrd
mov
mov
xor
shl
xor
or
shr
mov
mov
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
jmp
lock
cmp
mov
jae
test
sbb
push
push
sub
push
push
cwtl
daa
and
dec
out
stc
pushf
in
push
xchg
enter
and
int
cmp
sub
push
ret
add
les
ds
adc
jecxz
scas
xchg
js
adc
dec
push
pop
pop
lods
xchg
test
sbb
test
or
out
cltd
std
pushf
mov
movsb
sahf
jno
and
cmp
icebp
jno
adc
scas
inc
nop
adc
inc
ss
std
cld
or
push
aam
sahf
pushf
add
sbb
data16
aas
jecxz
sub
mov
sahf
mov
lds
jae
mov
xchg
hlt
sbb
aaa
or
rclb
idiv
adc
sub
lock
push
or
lods
dec
and
insb
push
inc
imul
lods
push
adc
jns
in
mov
cmp
adc
lret
dec
push
notl
cmpsb
fnstcw
decb
adcb
call
push
je
or
push
out
je
mov
cld
sub
sbb
cmp
mov
ss
call
negl
inc
les
or
pop
ljmp
cmpl
divl
cmp
loopne
andb
aaa
stos
enter
pop
or
push
jmp
pushf
mov
lods
cmp
add
inc
ljmp
bound
ja
rclb
push
repnz
clc
mov
mov
imul
mov
lret
cmp
xchg
jge
daa
repz
cltd
hlt
repnz
popf
mov
push
lods
and
jne
fnstenv
rcll
xchg
sbb
movsl
sar
das
jg
popl
sub
jp
mov
out
cwtl
popa
mov
push
gs
shr
fwait
pushf
pop
lock
push
and
int3
sbb
cli
mov
iret
inc
fistpl
dec
jmp
cld
das
lcall
int3
jb
cmp
add
repz
in
mov
repz
mov
repnz
xor
mov
cmpl
dec
pop
cmp
pop
cmpsb
sub
push
jae
jecxz
cli
jns
mov
fsubrs
push
cmc
je
xchg
pop
into
mov
test
mov
ljmp
movl
add
gs
repnz
inc
or
xor
int3
push
xor
xor
mov
jnp
push
mov
cmpsl
test
xchg
not
lea
jp
mov
inc
movsb
mov
mov
nop
outsb
pop
hlt
mov
sub
icebp
lods
dec
aaa
mov
call
xchg
aam
adc
add
lea
outsb
push
inc
movsb
mov
pop
xorl
in
mov
movsl
insb
aaa
loop
cltd
pop
fstpl
jmp
cs
xchg
aam
and
std
loop
jbe
icebp
dec
jl
xor
test
xchg
inc
shrl
outsb
lahf
fucom
shll
fnsave
jne
out
pop
mov
xchg
xchg
dec
shll
insl
or
lods
cld
xchg
lret
shll
jo
je
ja
popl
pop
scas
lods
pop
out
mov
add
jl
repnz
mov
aam
jmp
xor
test
roll
lahf
jl
xchg
leave
ljmp
xor
xchg
cmpsl
xchg
incl
cmpsb
cld
daa
mov
jecxz
gs
aam
arpl
test
test
pop
mov
inc
jbe
pusha
jecxz
lretw
xor
sub
pop
inc
nop
dec
pop
outsl
pop
sti
dec
xchg
pop
inc
inc
adc
or
cmpsl
xchg
shll
add
mov
daa
dec
mov
movsl
and
or
adc
xchg
pop
xor
addr16
push
mov
jb
or
sbb
fildl
and
mov
bound
mov
jne
and
xchg
and
xchg
push
in
push
incl
push
pop
int
in
cmp
mov
call
orl
cmpsb
jg
out
lock
sub
pusha
xor
add
lods
or
jo
push
iret
popa
test
dec
shlb
mov
popa
test
cmp
test
xchg
dec
add
fdivrl
loope
fildl
ret
jmp
push
jecxz
mov
jns
mov
je
out
or
ja
dec
mov
rorb
in
daa
and
lret
lods
add
es
fnstenv
mov
inc
frstor
gs
cli
adc
fmull
push
mov
fsubrp
push
or
lea
inc
push
repz
sbb
aam
sbb
jp
and
int3
gs
pop
cmp
push
push
jo
imul
in
mov
add
dec
das
xchg
sub
cli
jbe
or
inc
lea
mov
insb
lods
cs
push
sbb
inc
bound
lret
xchg
sbb
mov
fdivl
sbbl
xchg
xor
out
repnz
test
or
pop
gs
cltd
pop
or
outsb
test
mov
xchg
push
mov
pop
cmp
fstps
negl
xchg
out
inc
loope
mov
mov
mov
mov
xchg
lods
inc
push
fldl
push
insb
inc
hlt
mov
cli
or
cli
sbb
roll
test
out
int3
cmp
imulb
clc
enter
and
jmp
pop
sub
sbb
out
hlt
ss
cmpsb
inc
popf
cld
cmp
test
imul
dec
outsl
pop
test
and
pop
jne
jge
xchg
mov
mov
data16
and
inc
mov
cs
popa
xchg
lahf
fldt
add
sub
pop
or
scas
imul
call
adc
or
xor
icebp
mov
aad
mov
out
xor
aad
push
push
or
cltd
jge
xchg
lock
lock
lea
lods
cs
mov
loop
push
pop
nop
int
adc
int
arpl
push
push
ror
inc
test
imul
gs
loop
or
ss
xor
aas
pop
nopl
pop
xchg
jbe
add
test
and
and
push
loope
lods
jg
xor
lcall
into
insb
cmp
jg
and
xlat
and
fsincos
mov
jbe
jno
push
sahf
mov
inc
jg
test
jg
inc
aad
outsl
rclb
lods
icebp
push
imul
sub
in
mov
push
outsb
test
xor
mov
mov
jge
inc
pop
adc
subl
mov
xchg
push
cmp
xchg
inc
and
aas
movsl
jo
jp
and
fadd
ret
add
addr16
fnstsw
sahf
xor
insb
xchg
mov
mov
fdivr
or
sbb
cmp
mov
adc
stos
add
mov
jns
movsb
push
shlb
pushf
push
leave
jmp
lock
jl
scas
mov
outsl
jo
sbb
xchg
mov
aas
pop
sbb
pushw
cli
shrl
mov
pop
lret
pushf
pop
adc
js
nop
sbb
push
sbb
es
or
mov
mov
and
std
dec
pop
js
mov
sub
xchg
mov
insl
push
subb
add
xchg
sti
aas
jb
adc
jge
sub
dec
sub
out
fcompl
leave
test
sub
sahf
shll
inc
subl
scas
cmp
push
hlt
jns
push
or
or
roll
pop
jl
rep
pop
cwtl
mov
dec
xchg
fcompl
call
andb
inc
enter
fnsave
aam
arpl
cmp
mov
icebp
pop
in
loop
cmp
mov
sahf
and
test
mov
jmp
or
xlat
das
xorl
push
push
mov
arpl
or
call
insl
ljmp
pop
int3
leave
adc
add
sub
mov
sbb
or
push
dec
add
mov
sbbl
cmp
outsl
aad
xchg
mov
fs
icebp
inc
fsub
sahf
arpl
enter
scas
rorb
push
lods
add
jnp
mov
xlat
pop
js
cvtss2sd
sbb
sub
gs
mov
mov
mov
mov
fmull
mov
shrb
psubsw
xor
jb
mov
sahf
enter
lret
add
pop
roll
sbb
int3
ja
fldl
mov
or
aas
lock
cltd
in
push
mov
pop
lahf
adc
dec
adc
mov
sbb
sub
sti
stos
pop
imul
sbb
in
inc
xchg
in
mov
loopne
testl
xlat
das
mov
jmp
aaa
or
push
outsl
mov
mov
push
mov
mov
shll
js
rcl
mov
lea
sub
jno
mov
iret
mov
inc
jecxz
pusha
and
icebp
mov
ret
xchg
sbb
mov
cmp
sub
mov
ficompl
xchg
push
lahf
adc
icebp
les
and
mov
hlt
orl
in
lcall
sbb
cmp
imul
pop
xor
mov
cmpsl
stos
aad
ret
push
jns
xchg
outsb
ja
sub
jecxz
aad
je
xchg
outsl
adc
cmp
mov
jmp
sbb
cmpsl
std
mov
add
es
int
mov
cmp
mov
jno
mov
and
cmp
add
inc
xchg
xchg
into
mov
dec
rcll
lea
mov
mov
and
mov
dec
mov
lret
sbb
cmp
mov
es
jle
mov
pop
lea
call
stos
roll
sub
dec
scas
pop
dec
mov
mov
xchg
or
xchg
lock
popf
ljmp
add
insb
out
lds
lcall
dec
adc
pop
add
nop
bound
repz
push
iret
xchg
or
mov
inc
or
mov
sub
dec
lret
sbb
add
stc
sarb
mov
jne
mov
sbb
insb
jno
outsb
mov
xchg
aad
dec
fdivs
aas
or
lods
inc
mov
popf
or
adcl
jge
fstl
push
sub
add
sub
pop
mov
loop
ljmp
lret
in
lret
lcall
es
je
js
push
jge
or
xor
pop
je
mov
inc
jle
mov
cltd
xor
fwait
lods
xchg
scas
lret
shrl
cld
sti
clc
xchg
pop
inc
stc
jne
sub
mov
adc
mov
xchg
test
jmp
mov
lcall
xchg
cmp
in
inc
scas
cmp
roll
test
rsqrtps
movsb
cld
xchg
push
xor
add
jbe
cwtl
stc
push
cmp
pop
adc
sbb
pop
inc
xchg
repnz
lret
cmp
or
sub
insb
cmp
stos
mov
out
fwait
in
or
fxch
movsb
movsl
cmp
push
imul
xchg
int3
pop
mov
scas
pop
xor
jg
lock
jb
mov
clc
std
ret
inc
lods
push
pop
xchg
xor
pop
jle
adc
jae
mov
mov
or
push
dec
cmc
mov
sbb
mov
std
xor
pop
popa
imul
cmp
ret
es
xchg
fxch
sbb
ljmp
pop
push
scas
pushf
cmp
xchg
test
adc
jp
fistpl
in
push
int3
jl
andb
jl
cmp
or
jg
mov
loopne
sbb
sbb
mov
push
std
frstor
shll
or
shl
xor
adc
jbe
push
adc
dec
inc
hlt
mov
and
and
adc
push
sbb
and
in
daa
nop
jo
xchg
jns
stc
data16
cld
data16
sar
jmp
mov
lea
inc
ffreep
or
sti
xchg
cmp
das
lret
jae
cs
fdivl
int
out
dec
popa
rcl
xor
cmpsl
add
cld
mov
scas
or
icebp
pop
rcl
mov
idivb
lahf
add
xor
es
enter
fldcw
cmpsb
iret
test
ja
movsl
add
test
sbb
sub
inc
aam
cltd
cmp
xor
shll
sbb
or
xlat
jns
pushf
xchg
inc
xor
ds
pop
jno
jmp
es
xchg
cmpsl
int3
mov
jno
pop
addr16
cmp
push
add
xor
andl
sbb
mov
mov
int3
rolb
xchg
int3
mov
xor
fcompl
mov
lea
sub
cmp
xor
insl
fwait
popf
mov
sti
gs
addr16
inc
push
pushf
pop
cmc
sbb
jo
sbb
adc
cmpsb
inc
repnz
in
call
inc
cmpsl
bnd
sldt
push
scas
pusha
scas
les
pop
add
xchg
loop
stos
or
fisubrs
mov
negb
lds
and
sbb
push
xchg
loopne
dec
subl
outsb
xchg
xcrypt-ofb
cmpsl
test
bound
jo
insb
imul
inc
fiadds
pop
or
dec
aaa
inc
pop
adc
adc
jl
scas
mov
inc
jae
cmp
mov
ds
push
jne
and
rcrl
adc
ss
fdivrl
pop
cmp
push
xchg
mov
sub
and
fdivs
add
stc
mov
jnp
out
mov
pop
stos
fwait
xchg
mov
adc
xor
sub
xor
or
mov
aas
insb
test
fstps
or
mov
sub
pop
out
sbb
fwait
dec
outsl
jmp
lahf
inc
stc
lods
pop
push
dec
xor
sahf
mov
inc
fidivs
jl
movsb
xor
xchg
inc
mov
xor
xor
and
sbb
sub
xor
sbb
scas
ljmp
sub
or
lahf
sahf
mov
or
bound
mov
pop
movsl
adc
adc
mov
mov
adc
add
nop
loope
out
shrb
shll
into
loopne
lcall
imulb
jg
out
dec
ja
ja
mov
outsb
fisubrl
aad
mov
add
insb
cli
push
pusha
cmp
xchg
cwtl
inc
les
aas
lcall
add
loopne
mul
add
stos
dec
push
adc
xorb
mul
xchg
or
jmp
lea
repnz
jp
dec
test
cmp
mov
es
pop
pop
and
jbe
in
lcall
pop
cwtl
es
cmc
lret
cmpl
test
das
rcrl
adc
xchg
fcompl
pop
xor
lret
push
mov
mov
mov
xchg
or
push
dec
or
or
scas
or
stc
stos
and
lock
and
cmc
pop
ss
hlt
pushf
dec
adc
mov
inc
mov
nop
loope
add
push
jb
je
push
cmpl
ret
adc
cmp
push
or
in
in
mov
rcr
dec
xchg
adc
mov
loop
shll
bound
xorl
in
xor
mov
jae
pop
inc
std
ds
mov
inc
pop
xchg
shrb
insl
stos
dec
jle
jb
mov
cld
int3
sbb
jno
int
icebp
mov
stos
push
insb
dec
in
bnd
pop
mov
jns
cli
clc
repnz
jnp
sub
jmp
aam
enter
push
call
imul
lds
inc
inc
fldt
push
pop
sub
push
pop
loopne
std
lods
xorl
data16
mov
rcrb
stc
leave
pop
das
xor
push
fcompl
xor
lcall
pop
cli
lods
hlt
mov
mov
addr16
jge
nop
pushf
ja
in
pop
insl
push
int
stos
insb
inc
cs
ja
mov
ja
aad
sahf
jno
dec
sbbb
jae
adc
das
cmp
adc
cmp
inc
push
push
fnstenv
repnz
cmpsl
enter
mov
cmp
pushf
cli
push
std
getsec
pop
ret
call
imul
out
arpl
imul
xchg
movsl
xor
es
jno
pop
cli
mov
idivb
dec
insb
sub
sub
ss
dec
enter
repz
dec
cmp
das
xchg
inc
outsb
xchg
scas
push
lds
fistpl
push
loop
or
sub
cmp
imul
fs
inc
lret
xchg
push
loopne
cmp
mov
jno
clc
add
adc
xor
ret
xchg
pop
sbb
ljmp
outsl
outsl
repnz
lahf
shll
xor
pop
shl
inc
mov
aam
leave
sbb
dec
lods
ljmp
fists
dec
ffreep
pop
aam
fiadds
popa
sarb
xchg
imul
cmp
jmp
mov
rclb
clc
mov
and
ljmp
fiadds
mov
jle
movsb
cmp
mov
sbb
rorl
in
mov
ja
loopne
idivb
fisttpll
sub
jl
les
xchg
mov
or
adc
xchg
pop
test
fbstp
jmp
push
adc
push
sbb
mov
jp
xchg
icebp
sub
aas
push
jge
dec
sahf
pop
mov
aaa
shrb
adc
inc
nop
push
outsl
aas
shrl
and
jp
out
mov
mov
ljmp
imul
push
roll
bound
adc
aad
jg
or
leave
mov
aaa
xchg
add
iret
push
and
xchg
inc
xor
sahf
xor
shll
inc
inc
popw
xchg
adc
push
push
pop
sub
hlt
rclb
and
xchg
adc
stos
or
stc
push
adc
adc
out
movsb
pop
fucomp
scas
lret
lods
adc
dec
iret
into
inc
repz
inc
jae
dec
inc
lods
xor
cmpsb
adc
leave
push
lcall
in
leave
outsb
loope
fwait
outsl
inc
xor
jle
or
dec
adc
sub
xor
cmpsb
mov
sub
cmp
cmp
lret
out
fdivrs
inc
outsl
jne
cmp
adcl
lock
pop
dec
xor
iret
sbb
inc
hlt
add
push
ret
inc
std
test
xchg
out
mov
jg
iret
jo
loope,pt
jmp
fdivp
cmp
int3
and
in
adc
push
or
adc
data16
out
test
xor
lret
and
sbb
stos
sarb
insb
push
test
push
int
out
insl
adc
dec
or
xor
xchg
mov
orb
jb
sbb
out
jp
in
mov
sub
adc
xchg
aas
push
xchg
aam
or
int3
mov
rorl
dec
je
movsb
jns
rolb
out
adc
pop
and
mov
fdivs
andb
push
imul
cwtl
mov
stos
into
icebp
pop
data16
pop
gs
cwtl
or
pop
es
in
dec
jge
mov
ljmp
or
and
and
or
negb
sub
iret
cwtl
and
dec
mov
adc
sahf
mov
xor
or
fsubr
jns
pop
hlt
fmul
pop
mov
adc
imul
daa
shll
test
adc
mov
mov
cmp
or
adc
cmp
sbb
xchg
sbb
adc
mov
ss
fstpt
jb
mov
mov
and
dec
mov
and
jno
mov
pushf
mov
xchg
mov
rcll
jnp
lret
push
mov
sbb
into
popf
cwtl
icebp
imul
ss
iret
lock
and
outsl
sub
add
mov
inc
fildl
push
xchg
out
jnp
addr16
lahf
add
add
xor
pushf
imul
hlt
ds
xor
scas
bound
xor
jge
cmp
add
or
push
and
xchg
mov
mov
inc
mov
dec
test
das
outsl
jbe
out
das
int3
dec
repnz
mov
xchg
outsl
xchg
and
pop
cli
mov
and
mov
inc
jle
add
cmp
fwait
cld
mov
push
fistps
mov
out
add
cmp
sub
jo
movsl
out
xchg
loop
aas
sub
jge
pusha
inc
cs
xor
add
sub
push
outsb
dec
enter
lahf
js
setnp
add
adc
loope
out
data16
xchg
jle
and
push
and
cmp
in
insl
fnstenv
cmp
dec
lcall
mov
aam
dec
cmp
out
popa
rcrb
add
rorl
cmpb
inc
lret
loop
dec
mov
cmp
into
cwtl
sbb
call
mov
and
push
xor
xor
int3
mov
lret
insb
adc
jmp
sub
push
inc
cs
fisubrl
aaa
out
icebp
data16
add
mov
mov
mov
loopne
sahf
outsl
lods
and
sbb
aam
pop
jg
test
rcrb
or
push
adc
push
mov
or
fsts
lcall
push
jl
outsl
ja
mov
inc
inc
push
inc
stos
int3
add
mov
adc
and
outsl
stos
pop
pusha
int
mov
aaa
and
add
mov
add
comiss
mov
movsl
les
cmpsl
mov
arpl
movsb
repz
stc
sub
aad
mov
outsb
push
subb
mov
mov
inc
adc
sbb
in
out
movb
pop
scas
js
jno
outsl
out
mov
cmp
push
sbb
or
mov
bound
fsts
mov
js
subb
cltd
insb
pop
ds
xor
add
aam
sub
jl
jo
xor
bound
jp
add
mov
and
cld
jo
mov
int
lock
jno
pop
sbb
adc
aas
xor
stc
jle
insb
call
addr16
pop
cmc
fidivrs
clc
idivl
test
jae
in
xor
mov
xor
jp
lods
or
xlat
sbb
std
sbb
xor
out
sbb
jmp
mov
or
loope
push
push
push
nop
cmp
and
sbb
push
sub
mov
fs
inc
cmpsb
xchg
in
push
push
inc
xchg
mov
jp
pop
insb
int
adc
out
xor
pop
sbb
xorb
punpckhbw
pop
jns
cmp
mov
outsb
add
xchg
adc
cmp
ret
inc
sbb
mov
mov
iret
xchg
addr16
std
mov
add
pop
push
mov
and
scas
xchg
inc
and
sub
sub
xchg
push
sub
jl
cmpsl
inc
mov
add
test
cmpl
test
test
movsb
pusha
inc
fimull
or
inc
mov
mov
pop
cmp
shll
out
mov
aas
push
fiaddl
ss
mov
add
ja
xchg
jnp
fwait
xchg
jae
jl
fcompl
sbb
inc
ds
xchg
loop
ljmp
in
ja
add
sbb
pushl
jl
add
jmp
jae
test
adc
and
jg
lcall
pop
and
lock
cmpsb
into
shll
lret
lahf
mov
mov
or
fcomp
inc
pop
jmp
xchg
cmc
or
sti
cwtl
jo
test
cld
add
insb
xchg
jl
add
lret
xchg
divb
fdivl
imul
roll
and
xor
xchg
pop
or
mov
or
out
sub
mov
cwtl
adc
mov
orb
les
data16
imul
stc
mov
xor
sub
add
jmp
leave
movsl
sbb
xor
mov
outsb
sahf
dec
cwtl
pop
sbb
jp
xor
aam
xor
push
cmp
jle
leave
sub
out
lret
sub
mov
inc
ds
pushf
arpl
dec
sub
xor
ficomps
sub
inc
xor
sub
inc
mov
addr16
mov
fcoml
loope
push
inc
or
inc
into
adc
pop
jns
and
mov
sbb
inc
call
inc
add
or
jecxz
sti
loope
sub
or
mov
subb
inc
jnp
and
cmc
orl
call
mov
loope
add
fwait
es
sub
mov
fimull
outsl
fcoml
push
shrb
out
cmp
stc
addr16
adc
adc
movsl
mov
test
push
aad
not
cld
prefetch
or
inc
push
xchg
pop
pushf
push
sbb
or
jno
or
test
fisttpl
or
mov
dec
syscall
pop
test
ja
pop
jecxz
shll
icebp
fsubrl
push
adc
fwait
stos
jp
das
and
shll
mov
xchg
imul
mov
movsb
adc
fcomi
lahf
test
lret
imul
fwait
sub
ret
mov
inc
fsubp
sbb
jmp
fnsave
fnstcw
in
sbb
hlt
or
add
stc
xchg
cmp
or
iret
pinsrw
roll
ret
loope
mov
mov
xor
mov
cmp
mov
sbb
xor
imul
js
mov
add
inc
daa
rorb
repz
idivb
leave
shll
xchg
adcl
and
stos
ljmp
cmpsl
sub
lds
lods
push
adc
and
sbb
fisubs
or
addr16
or
xchg
std
push
imul
imul
addr16
jns
imul
icebp
or
and
cmp
or
fwait
jmp
int3
mov
sub
lds
pop
jl
test
das
test
outsb
shll
aad
mov
jg
cmc
jl
int3
xor
pop
iret
xor
lds
push
jl
mov
jne
inc
mov
loopne
pop
mov
insl
arpl
les
ror
push
mov
pop
cltd
arpl
scas
xor
leave
stc
or
cmp
pop
cmp
xchg
mulb
fsts
inc
mov
js
cmp
ret
inc
xchg
xor
lcall
xchg
adc
push
mov
mov
imul
sbb
pop
pop
mov
lret
lock
out
push
cmc
test
xchg
js
sarl
sbb
cmp
sub
mov
mov
les
and
xchg
loope
mov
pop
inc
insb
shl
dec
mov
jne
dec
sub
daa
popf
mov
mov
mov
notb
nop
loop
in
or
and
cli
sub
and
mov
sub
sub
mov
test
lret
cld
gs
in
mov
xchg
pop
fidivrl
movsl
out
insb
push
divl
jmp
sbb
stc
sbb
xchg
lret
lods
mov
movsl
mov
push
add
mov
insl
pop
or
mov
inc
test
pop
jb
mov
add
or
pop
into
es
xor
les
inc
insl
mov
and
push
push
call
sti
popf
mov
stos
mov
mov
lea
jecxz
sub
jbe
fnstcw
sbb
cmp
adc
or
jg
and
sahf
imul
loopne
cmpsb
in
mov
loopne
int
pop
popl
ret
adc
jmp
in
jo
pop
test
lahf
add
dec
inc
xor
mov
cs
in
or
int
adc
xorb
push
pop
push
lods
sbb
in
cmp
gs
pop
cs
pop
arpl
mov
cli
add
test
popa
mov
sbb
push
js
mov
fsubrl
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
jmp
push
cli
imul
inc
iret
adc
pop
ret
jno
push
push
sub
push
push
and
addr16
stos
pushf
es
in
js
leave
aam
je
data16
dec
scas
lahf
inc
push
ja
xchg
je
ja
jnp
and
cs
clc
mov
dec
popa
outsb
addr16
push
repnz
jno
sub
in
js
jp
mov
mov
js
cmp
jle
cmp
pop
xlat
lds
xor
inc
cs
insb
cs
lock
xchg
das
jp
sub
fimull
xchg
jge
repnz
inc
cld
dec
jb
jo
dec
jl
into
inc
es
dec
or
loopne
mov
mov
pusha
adcl
sbb
inc
ficoms
mov
adc
dec
jl
aam
cld
xlat
pop
aas
test
push
push
ss
test
shll
ret
out
mov
mov
leave
xchg
mov
flds
sub
hlt
or
inc
data16
mov
jge
add
push
mov
inc
pushf
aad
call
sbbl
sbb
xchg
pop
insl
ret
mov
lods
mov
mov
test
repz
pop
int
stos
jo
stc
xor
xchg
fs
ja
push
sub
sbb
mov
jno
into
dec
nop
mov
jbe
pop
cmp
xor
and
gs
push
in
adc
pop
push
jecxz
jle
sti
and
and
cli
in
jge
div
sbb
mov
xchg
movsl
scas
sub
hlt
sarb
fnsave
pop
lea
movb
imul
push
or
sbb
push
int
fstp
add
dec
ljmp
popa
adc
cmpsl
scas
ficompl
and
loop
push
mov
in
adc
adc
out
add
pusha
jo
jg
sbb
jmp
sbb
les
pushf
test
mov
sbb
pop
jle
cli
xchg
in
stos
mov
clc
mov
icebp
or
and
xchg
gs
orl
pop
add
aam
pop
aad
mov
and
lahf
mov
fdivrs
cmp
ret
pop
je
mov
mov
mov
inc
testb
test
jo
clc
negl
cmp
dec
rorb
aaa
and
mov
inc
test
call
insl
sbb
dec
pop
jge
sub
ds
sub
add
ljmp
repz
xchg
std
pop
adc
stos
fld
fiadds
out
inc
jb
das
je
ljmp
xor
push
push
mov
clc
sub
xchg
imull
icebp
out
cs
movsl
in
sub
cmc
aad
jmp
inc
jecxz
sbb
jno
xchg
popw
sahf
pop
add
inc
rcl
cmc
stos
ja
xor
scas
push
pop
mov
into
scas
and
loopne
jle
cltd
cmp
lcall
cwtl
loopne
mov
xor
rcr
movsl
and
xorl
movsl
or
mov
setno
mov
mov
aaa
cltd
xor
jbe
jle
sub
push
clc
dec
push
mov
mov
jg
sbb
inc
in
lcall
sub
dec
mov
dec
push
lahf
in
daa
out
pusha
ljmp
cmp
fistps
outsl
ret
repz
jmp
pop
lods
jb
pushf
sub
adc
cs
loope
stc
sub
xor
mov
jle
outsl
shl
add
outsb
in
dec
xchg
jl
adc
inc
sbb
xchg
mov
push
adc
js
push
mov
xlat
xchg
and
push
push
popa
movsb
leave
sbb
mov
cmpsl
negl
popa
mov
cmp
mov
fiaddl
fsubs
push
test
stos
ds
fdiv
mov
dec
test
pop
pop
and
lahf
mov
jnp
fstpl
std
or
fwait
pop
jae
jnp
jmp
xchg
hlt
pop
or
mov
jne
adc
test
push
push
pop
jl
push
jecxz
or
stos
sub
out
ss
insl
dec
loop
dec
mov
scas
shlb
or
out
xor
ljmp
sbb
mov
xor
stc
mov
dec
shll
xor
mov
mov
bound
jg
cmpsb
inc
xor
imul
inc
clc
int
cs
xorl
sbb
lea
shrl
sahf
push
dec
jmp
mov
rolb
subb
mov
and
xor
sarb
daa
and
and
adc
ret
scas
fimuls
inc
insb
lock
push
dec
adc
mov
imulb
ret
stos
andl
sub
xlat
add
outsl
or
xchg
into
gs
and
jnp
outsb
nop
jl
movsl
pop
mov
insb
dec
jnp
test
and
push
into
mov
sbbb
stos
andb
shrl
aaa
push
mov
fisubs
scas
jge
or
daa
lret
sub
outsl
addl
icebp
or
movsl
repz
inc
push
xor
out
aam
ja
in
sahf
out
push
outsb
pop
inc
add
ljmp
cld
push
in
inc
adc
lcall
inc
xchg
test
in
out
mov
adc
mov
aas
xlat
ret
repz
jg
xchg
addb
or
cmpb
fidivrl
jp
aad
test
mov
or
push
mov
jno
sbb
mov
movsl
adc
xorl
andb
ljmp
mov
push
rorb
jp
mov
out
pusha
stos
cltd
or
jecxz
xlat
adc
sub
jmp
cmp
inc
adc
imul
js
push
out
cwtl
mov
add
popa
push
das
adc
mov
cmpsb
int
dec
push
nop
cli
xlat
mov
mov
add
or
inc
repz
inc
movsl
jle
mov
pop
or
cmpsl
push
pop
insl
mov
jnp
and
jo
leave
xor
pop
cwtl
cmc
jg
hlt
das
inc
outsl
mov
iret
inc
cmpb
xchg
or
aas
mov
cli
push
stc
test
rorl
jg
jae
cmp
xchg
mov
arpl
test
mov
loopne
inc
dec
jns
imul
mov
iret
roll
lret
outsl
sbb
insb
test
movb
ret
jl
xor
and
push
out
popf
lret
mov
testl
push
in
push
push
jns
mov
cmpsl
je
mov
pop
jg
pop
repz
cmc
lds
mov
mov
cltd
mov
cmovg
xchg
fisttpl
imul
push
bound
cmp
mov
add
jno
jp
lds
imul
movsb
mov
mov
lahf
leave
ficoml
lods
cld
sub
and
rorl
mov
vminps
cmp
sahf
mov
push
and
dec
bound
add
shrb
inc
xor
cmp
and
sbb
jg
stc
mov
shrl
adc
mov
xor
sti
int
outsb
inc
out
insb
dec
in
test
jg
jno
cli
push
lds
test
negl
jb
aaa
xlat
test
iret
jl
or
jl
xchg
xchg
stc
adc
out
movsl
mov
or
mov
adc
dec
sbb
dec
imul
jmp
push
pop
fcmovnbe
pop
push
jle
mov
mov
or
std
ss
aad
hlt
cmpsl
adc
xor
and
xor
sub
lret
cltd
mov
adc
add
mov
lds
and
insl
movsb
or
inc
sbb
neg
stos
jmp
xchg
push
jnp
sbb
and
lret
push
shr
jae
rclb
jmp
pusha
lods
or
out
cmp
fcompl
test
push
sbb
in
negb
pop
jmp
and
daa
mov
jae
test
cmp
scas
mov
sarl
ret
test
sub
pop
loop
cmpsl
cmpsb
incb
mov
and
jge
je
cmp
add
das
mov
inc
jmp
out
xor
addr16
bound
jb
xchg
cmpsl
pop
pop
movsl
loopne
imul
test
xchg
inc
jmp
jmp
pop
and
in
xlat
addr16
lret
lret
lods
pop
dec
xor
inc
xchg
clc
loopne
dec
loope
pop
repnz
xor
fwait
and
repz
mov
and
xor
in
jae
push
cmp
push
jmp
jp
fmulp
rorb
dec
jge
das
daa
dec
insl
sbb
mov
pop
les
jno
in
adc
or
popa
mov
repnz
pop
add
lahf
pop
stos
xlat
dec
xor
inc
adc
jp
pop
popf
sbb
bound
jno
lret
stos
das
popw
push
in
xchg
fwait
fwait
popf
pop
push
sar
pop
cmpsl
sar
imul
jecxz
jmp
dec
jmp
fst
int3
pop
test
les
jmp
lret
repnz
xor
sbb
xchg
in
mov
jne
movsl
hlt
dec
test
sbb
hlt
rcrl
scas
dec
pop
sbb
lret
mov
dec
mov
pop
push
outsl
out
aas
bound
int3
pop
repz
fcmovbe
out
dec
loopne
sub
pop
push
inc
cltd
dec
aaa
push
xor
outsl
rorl
adc
xor
mov
mov
sbb
iret
pop
rorl
adc
mov
adc
call
test
mov
jcxz
movsb
addr16
dec
pop
cmp
xchg
jne
mov
inc
push
test
loop
cwtl
sbb
inc
dec
jl
les
out
lods
mov
pushf
imul
sbb
fdivr
popa
push
xor
cld
sub
mov
dec
and
pop
mov
add
mov
dec
faddl
dec
loope
mov
sbb
cld
cmp
xor
jg
loope
cld
sbb
pushf
nop
push
mov
stos
jmp
jmp
mov
pop
add
sahf
jg
mov
cmpsl
mov
inc
fcoml
inc
stc
push
ds
out
in
jno
add
sub
incl
in
hlt
mov
mov
xor
nop
andl
adc
pop
push
lret
sti
mov
dec
popa
jmp
sub
xor
shlb
faddl
faddl
pop
divl
inc
xorl
mov
cltd
push
popa
cmpsb
sbb
int3
mov
add
test
scas
mov
pushf
xchg
pop
inc
and
lock
mov
outsl
xlat
lahf
out
fdivp
jle
inc
stos
cmp
mov
sub
xor
cmp
inc
ret
fiadds
mov
push
or
add
out
cmp
stos
jmp
out
std
or
push
mov
mov
mov
fisttpll
imul
cmp
push
mov
gs
test
sahf
cmpsb
mov
fbstp
outsb
jnp
xchg
into
movsl
xlat
sti
ret
cmc
xchg
fisubl
jge
gs
cmp
pusha
jp
xchg
insl
test
or
add
xchg
or
push
sbb
or
mov
incb
out
int3
pop
pop
loope
mov
sbb
out
idivb
or
test
sub
repz
fdivrs
ret
test
dec
int3
imul
jmp
pop
pop
aas
cs
scas
push
leave
sbb
jne
cmp
push
jbe
dec
sbb
rsqrtps
fcoms
negl
fmuls
clc
push
or
sub
push
aaa
scas
iret
add
stos
lock
test
faddl
fdivrl
aad
in
mov
int3
rorb
pop
inc
sub
je
mov
iret
pop
sbb
scas
lahf
xchg
xchg
mov
dec
mov
shrb
mov
das
cld
cmp
adc
mov
in
cld
into
xchg
mov
jb
loopne
cld
jmp
les
insl
movsl
lods
bound
popf
add
push
imul
xchg
aas
lret
jo
sbb
fxch
loopne
out
xor
xor
or
loop
popa
fmul
inc
test
jecxz
pusha
jae
or
mov
out
jae
push
lret
pop
sbb
and
mov
xchg
adc
pop
or
into
or
dec
movsb
jp
stos
outsb
das
les
popa
int
std
inc
hlt
jp
bnd
push
ja
aam
or
test
mov
stc
sbbl
fmulp
scas
shll
inc
stos
js
mov
mov
push
mov
xlat
iret
xchg
lock
fidivrl
aaa
sbb
es
sub
mov
and
daa
cmp
lcall
mov
cltd
and
aad
dec
fmulp
sub
jl
repz
call
dec
pop
insl
or
xchg
test
jg
inc
ss
mov
push
jnp
sub
mov
jns
ds
pop
sahf
pusha
mov
sbb
inc
xchg
pusha
leave
repnz
lock
jmp
pusha
add
and
xorl
add
mov
sub
xor
neg
sti
push
push
or
lret
lods
xor
in
enter
push
out
je
mov
jmp
xor
inc
dec
popf
rorl
mov
out
push
jno
movsl
jne
jae
cld
pop
xchg
imul
cmp
dec
loope
jg
daa
cmp
sbb
mov
shrl
mov
aad
data16
icebp
push
pop
dec
loope
stc
es
out
add
ret
xchg
shrb
popf
cli
mov
inc
test
sub
cmp
insl
sti
js
nop
sub
push
ret
xlat
leave
add
mov
enter
decl
sbb
xchg
push
dec
subb
or
sub
std
cmc
cmp
test
out
pop
sbb
jp
in
push
xor
jle
cmp
mov
ret
lahf
sub
push
movsb
fdivrl
insb
stos
mov
bound
cltd
pop
scas
scas
outsl
mov
mov
lods
icebp
clc
lret
xor
inc
xchg
cwtl
mov
ja
xchg
push
outsb
jg
ret
adc
adc
pop
xchg
adc
mov
pushf
test
xchg
cld
test
or
push
push
ret
pusha
mov
mov
jne
lret
repnz
adc
sbb
arpl
mov
aas
mov
and
adc
outsb
jbe
push
push
adc
das
mov
xlat
sbb
mov
sub
sbb
cwtl
xchg
add
xor
mov
fstpt
sub
fisubrs
dec
mov
sub
pop
iret
mov
adc
lret
mov
ret
mov
fdivs
push
int3
into
mov
lds
xchg
jbe
ljmp
sti
dec
and
cli
xchg
inc
push
pop
lods
jecxz
mov
and
gs
pop
xor
push
pop
mov
mov
cmp
inc
out
daa
nop
pop
in
mov
ds
pop
jl
scas
and
push
bound
ss
lret
cwtl
es
and
out
jb
jl
test
mov
and
test
and
inc
inc
lahf
lret
and
pusha
ja
pop
sub
pop
mov
dec
inc
jb
inc
clc
cli
sbb
xchg
xor
sbb
inc
and
mov
nop
lds
mov
bound
stos
adc
lock
orb
cs
adc
xor
pop
in
insb
adc
mov
sub
jns
mov
xlat
fdivs
pop
cmpsl
scas
xor
inc
and
rorl
dec
mov
dec
sbb
and
mov
shll
jns
adc
test
cmp
dec
push
cmpsl
ss
cs
into
mov
ss
mov
cmpsb
divl
cmc
sti
and
adc
cli
imul
movsl
or
cmp
pusha
scas
sbb
or
pop
dec
xlat
cmp
mov
iret
jl
cltd
popa
enter
adc
jecxz
add
cmpsl
add
stos
mov
gs
sarb
pop
dec
enter
and
push
mov
loopne
and
mull
dec
aam
bound
stc
inc
sarl
pop
jmp
cltd
mov
xor
dec
ret
outsl
sub
sarl
push
jne
mov
test
cmc
shll
cltd
rcrb
sbb
pop
cmp
xor
out
jno
pusha
bound
jb
or
call
sahf
xor
add
test
mov
or
jecxz
das
sbb
sub
cmp
xchg
sahf
pop
xlat
js
jbe
pop
rcll
stos
mov
push
les
jnp
mov
lds
ret
jle
stos
div
js
or
gs
pop
mov
loopne
jbe
data16
push
xor
add
lret
sahf
jecxz
jge
push
paddd
dec
dec
daa
inc
orb
cmp
sub
pop
or
aam
dec
stc
popa
out
loopne
icebp
push
ret
jbe
push
outsb
mov
leave
shll
scas
insl
xchg
xchg
outsl
jne
jo
cmp
stos
sub
cmp
sub
dec
mov
and
cmpsb
aam
popf
inc
mov
lret
movsb
pushf
xor
jbe
fs
rorl
sub
push
popa
xchg
popf
inc
cmp
mov
xchg
into
bound
repz
js
pop
imul
mov
imulb
mov
addr16
mov
sahf
fsubrp
enter
cmp
and
and
call
lock
loopne
sbb
pop
lds
jge
jl
rcrl
hlt
xor
mov
sbb
loope
ljmp
mov
out
inc
es
filds
pushf
jbe
hlt
pop
mov
cmp
cld
outsb
int3
push
mov
popa
pop
push
arpl
inc
inc
sub
das
sarl
out
mov
lahf
cmpl
sbb
mov
mov
ss
in
jl,pn
mov
jae
movsl
fwait
js
or
mov
dec
int3
push
dec
dec
mov
mov
push
in
cld
xchg
cwtl
loopne
pop
xor
ja
aas
push
outsb
pop
fs
ja
inc
in
pop
pop
in
mov
cmp
lds
push
rcr
pop
out
xchg
loopne
adc
cmp
jb
out
int3
fdivrl
jnp
test
jno
jnp
pop
dec
xchg
test
sub
les
jl
aas
js
shrl
sub
sarl
movsb
rcrl
jo
stc
jle
or
and
in
imul
adc
push
jmp
in
fists
pusha
mov
mov
inc
adc
cwtl
push
sbb
arpl
icebp
insb
jae
ret
fnstenv
cwtl
mov
pop
mov
in
push
add
aam
or
adc
adc
xchg
mov
icebp
test
xor
mov
out
jp
cmp
jno
mov
shll
arpl
cmp
dec
pushf
ret
insb
push
repnz
add
and
out
sbb
pop
inc
push
adc
mov
cmp
pop
out
stos
jae
out
jns
pop
add
jb
pop
mov
mov
jmp
cmpsb
loop
sub
into
dec
inc
std
cmpsl
jo
stos
and
jecxz
add
dec
xchg
xchg
and
call
dec
rorl
xchg
pop
mov
pop
out
xor
inc
mov
fmul
in
mov
jge
loop
inc
jbe
inc
mov
mov
pop
insl
or
mov
repz
dec
push
xchg
in
aad
test
mov
addr16
test
mov
push
lahf
shrb
push
mov
cmp
filds
jns
push
lods
lahf
les
pop
dec
jmp
call
int3
jecxz
in
mov
loopne
xor
les
dec
iret
adc
in
mov
push
jle
fsubs
pop
fucomp
lods
mov
pop
ss
ret
lock
sub
dec
hlt
sbb
and
movsb
mov
dec
xchg
push
dec
pop
xchg
mov
ret
outsb
stos
add
mov
or
lods
jbe
mov
jnp
jp
cmp
or
leave
mov
loop
movsb
fldcw
dec
pop
rcrl
xchg
inc
mov
stos
fwait
sti
out
arpl
rep
lahf
iret
cmp
push
xchg
or
rcrl
enter
jmp
pop
inc
lods
jae
sbb
and
or
fldl
cmp
xor
cmpsl
pusha
adc
fwait
int
rorl
in
icebp
adc
add
jns
sbb
rcrl
cmp
loope
cmp
lret
jmp
inc
cmpsb
or
popa
sub
pop
jbe
jne
dec
gs
loopne
pop
sbb
jmp
sti
mov
aas
mov
pop
push
pop
outsl
ljmp
lods
and
adc
nop
loopne
mov
or
mov
testb
sarl
icebp
adcb
stc
dec
sub
aaa
mov
mov
rolb
sti
adc
xor
dec
dec
out
lods
adc
add
push
arpl
aaa
sahf
leave
mov
sbbb
in
out
aam
rcr
mov
in
fwait
scas
mov
ret
lea
pop
movsb
sub
cwtl
movsb
dec
xchg
fadds
subb
jecxz
clc
fdivl
sbb
jle
cmp
or
sub
jmp
xchg
push
cwtl
and
sbb
push
mov
mov
stos
out
sub
test
repnz
cmp
and
adc
jnp
mov
mov
rcll
adc
fwait
mov
adc
enter
setns
sbb
scas
enter
inc
sbb
sub
scas
test
lods
test
out
sarl
int
jb
loopne
aaa
mov
scas
xor
cmp
jno
mov
imul
push
imul
pop
jnp
add
push
insl
aaa
enter
nop
jge
popf
mov
jns
dec
sahf
push
addr16
mov
lret
push
or
jl
fs
sbb
cmc
loope
icebp
gs
sahf
out
dec
xchg
shrb
clc
sub
or
push
fucom
pusha
into
push
sub
xchg
xchg
push
mov
pop
push
adc
and
jg
mull
imul
sub
lret
fmull
mov
adc
stc
add
repnz
mov
outsb
pop
orb
shrl
pop
sarl
iret
dec
lea
mov
cli
sub
ljmp
or
mov
ret
rolb
and
mov
mov
jno
div
pusha
dec
leave
jne
inc
test
adc
int3
mov
sbb
int3
test
test
push
jo
mov
int3
sub
addr16
cmpl
pushf
rcrl
int
pop
sbb
adc
rcrl
and
cmp
insl
clc
insb
or
sbb
in
lea
mov
jne
jns
xchg
movsl
or
jno
push
and
dec
mov
pop
rorb
mull
sbb
orl
lcall
subl
sub
and
stos
pop
ja
gs
or
std
cwtl
jle
and
gs
mov
mov
push
or
push
xchg
js
xchg
inc
mov
xlat
inc
xchg
mov
loop
push
jae
sti
leave
mov
mov
jmp
push
adc
jmp
mov
xchg
in
ret
jmp
cmc
mov
lcall
push
cmpsl
scas
imul
xor
jo
fsubrs
out
inc
sahf
pop
push
cmp
pushf
fistpl
decl
jge
xchg
comiss
mov
lcall
test
insl
aaa
push
mov
adc
daa
loop
test
pop
repz
sbb
mov
or
lods
pop
mov
mov
sub
inc
int
mov
mulb
inc
repnz
adc
dec
mov
int
pop
mov
ds
jp
hlt
sbb
pop
mov
pusha
leave
cmp
gs
test
sahf
outsb
cmpb
mov
jbe
mov
mov
icebp
stos
divl
push
fsubrp
xorb
fs
hlt
repnz
sbb
and
dec
mov
sti
cwtl
and
lret
sbb
push
xchg
ret
fisubs
sub
into
xchg
out
dec
cmp
bound
aaa
out
movsb
add
sub
addr16
std
fsin
fs
jg
inc
xchg
jecxz
sbb
movsl
mov
jl
jge
pop
or
mov
mov
cmpb
ss
outsb
inc
test
push
rol
sarb
or
lret
out
pop
nop
adc
out
ja
sbb
lea
sbb
jmp
mov
cltd
dec
mov
push
out
adc
rcr
stos
movsl
scas
xor
jp
xchg
adcb
pop
jnp
cmpl
jo
jmp
push
cltd
pop
popa
cwtl
fidivrl
mov
loop
test
fs
inc
pop
push
pop
adc
scas
fnstenv
push
or
notb
mov
loope
mov
mov
xor
repnz
movsl
mov
lods
outsl
dec
push
pop
enter
fs
nop
fs
pop
mov
imull
test
pop
cld
pushf
push
mov
es
fstp
aas
xchg
in
repnz
repz
scas
imul
repz
add
push
insl
into
dec
inc
dec
lret
jno
pop
xlat
sbb
sbb
outsl
js
icebp
xor
xor
jp
inc
dec
icebp
and
sub
add
and
adc
leave
push
push
lcall
fldcw
push
lahf
insb
pop
jle
fsubrl
int3
push
jbe
mov
adc
popf
mov
iret
sub
xchg
sahf
sbb
test
js
dec
mov
jne
pusha
arpl
shll
push
in
scas
aas
mull
xor
sti
arpl
aad
xlat
mov
aaa
movsb
pop
scas
call
stos
inc
lret
lea
leave
pushf
xchg
pop
or
in
pop
lea
and
push
jbe
cmp
rclb
xchg
aam
lret
leave
imul
ljmp
pop
xor
mov
fildl
ljmp
insb
sub
cmp
fistps
cmpsl
and
xor
mov
test
push
pusha
mov
dec
inc
leave
and
outsl
js
pop
jno
test
out
and
cmc
adc
add
cmpsl
mov
mov
push
stos
jmp
xchg
inc
lea
cmp
je
outsl
add
stos
cmp
mov
push
xor
sbb
in
imul
fs
movsl
mov
fsubr
mov
fs
outsb
pop
test
aam
sub
gs
xchg
sar
jbe
lea
xchg
jge
ret
xchg
scas
aas
mov
inc
cmpsb
xchg
cltd
sbb
cmpsl
in
inc
fisttpl
lret
loop
inc
dec
jne
testl
aaa
call
std
int3
xchg
lods
in
inc
jns
pop
bound
mov
mov
push
imul
out
jns
cwtl
gs
cmp
add
scas
mov
lods
mov
shll
or
ret
jne
xchg
xchg
imul
stos
cwtl
loop
sbb
cmp
or
mov
push
pop
or
xlat
sahf
or
in
mov
mov
data16
daa
xchg
mov
push
repnz
icebp
movsl
push
scas
sub
dec
ljmp
ja
imul
jmp
cld
rcrl
xacquire
inc
dec
scas
aad
fxam
scas
hlt
cmpsb
sub
mov
ja
dec
cltd
or
jg
sbb
mov
out
sub
cmp
out
mov
and
jno
xor
add
cmp
mov
negb
cmp
loop
stc
xchg
fisubl
test
pop
pushl
test
cli
sahf
sub
add
push
rcr
jle
or
inc
and
into
or
mov
ret
jp
into
push
pop
jno
xor
in
xchg
dec
lcall
pushf
cli
addl
xor
jp
les
les
lods
js
scas
jnp
push
xchg
pop
repnz
cmp
lods
lods
scas
mul
rcrb
and
and
jle
data16
push
ss
out
aaa
pop
pop
mov
inc
enter
lahf
mov
popf
into
dec
test
and
dec
mov
mov
call
adc
hlt
pop
mov
insl
cmpsb
jne
add
and
nop
mov
popa
nop
cmp
cmc
xchg
jge
ss
add
adc
mov
lods
call
or
cli
into
push
cmpsb
repnz
inc
add
add
push
add
push
and
addr16
mov
add
xor
and
and
cmpsb
mov
jle
mov
push
push
inc
add
aas
das
add
icebp
int
leave
push
daa
dec
jge
mov
fsubl
cltd
xchg
out
orl
mov
cli
pop
lret
sti
rorl
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
jmp
cs
lods
pushf
ds
enter
fwait
push
push
push
sub
push
push
and
adc
adc
mov
pusha
lock
add
cli
fucomip
sbb
mov
mov
sarb
pop
mov
xorb
aas
mov
cmp
add
decl
addl
in
cli
pop
jno
mov
jne
icebp
xchg
dec
loop
xchg
inc
mov
or
sub
repz
mov
jbe
lds
inc
adc
lock
addr16
adc
fimuls
roll
lret
pop
sub
adc
sub
push
dec
push
cmp
cmp
adc
icebp
rorb
sub
mov
cmp
into
mov
or
ficomps
mov
mov
sti
test
jnp
dec
fmull
sarb
movsl
lods
lcall
add
add
data16
cmpsl
mov
xlat
inc
xchg
loopne
and
mov
xor
rclb
xchg
das
mov
xchg
fcomp
rclb
push
mov
loop
fwait
sarl
inc
fmull
int3
jbe
adc
ficoml
call
push
push
dec
mov
sbb
push
xchg
mov
pop
push
xchg
mov
inc
and
imul
sbb
jne
xchg
cwtl
fistpl
int
lret
xchg
outsl
test
dec
pop
or
mov
sub
pop
xchg
fidivs
cmpsb
jno
scas
pusha
int
cmpl
call
and
call
xor
add
mov
test
jle
pop
cmc
and
xchg
lret
cmp
pop
mov
leave
inc
mov
jb
shll
cmp
dec
xchg
rcrb
addr16
jg
mov
aam
repz
xchg
ret
stos
mov
pop
out
data16
mov
les
aad
rorb
fidivrl
lock
ret
dec
call
adc
scas
das
inc
sub
xlat
jmp
ret
sahf
adc
bound
push
mov
pop
cmpsl
ljmp
push
lods
loope
xor
pop
jnp
arpl
push
cwtl
decb
loopne
adc
lods
in
pop
adc
loope
dec
stc
mov
sahf
mov
jle
xchg
cmp
int
jecxz
xchg
sbb
mov
pop
and
es
imul
movsl
sbb
mov
jmp
std
loop
xchg
fs
mov
jns
das
loope
cwtl
sub
dec
inc
in
jne
fisttpl
mov
push
xor
aad
add
sbb
ss
stos
adc
cmp
cltd
pusha
push
push
int
push
or
cld
mov
add
sub
mov
ss
out
movswl
or
push
ss
sub
int3
and
cmpsb
fs
lret
sbb
repz
jge
jns
pushw
jp
cmp
sub
xchg
outsb
cmp
out
xor
test
mov
jnp
xchg
divb
aad
daa
or
mov
shll
lret
outsb
jae
test
add
cmp
mov
aam
pop
in
shrl
inc
fmulp
leave
jg
popa
outsb
mov
std
sub
sub
out
hlt
mov
std
inc
in
lret
scas
jns
fidivl
movsb
addr16
or
sub
push
xchg
mov
ja
mov
push
test
roll
shlb
sub
mov
rcr
or
sub
pop
cs
sub
adc
cmp
sbb
push
pop
test
push
out
mov
push
mov
xchg
and
dec
sub
adc
xor
fsubl
sarl
jns
testl
ljmp
loopne
pushf
adc
lcall
xchg
xchg
daa
cwtl
orps
cwtl
je
mov
push
push
ljmp
out
and
jg
push
in
pop
arpl
int
loope
push
daa
mov
shlb
mov
jl
out
xor
mov
dec
in
leave
pop
movb
cwtl
xor
cmp
xor
insb
jb
sti
test
pop
mov
cwtl
out
mov
test
in
les
jge
mov
or
cmp
imul
jo
mov
jae
pusha
sbb
sbb
mov
sbb
jae
lret
out
aas
and
fildl
rcrl
pop
outsl
lcall
jl
push
sub
mov
imul
sub
sti
adc
mov
dec
lret
inc
lret
ret
aad
aas
and
adc
and
test
pushf
dec
fisubl
sti
sub
in
and
fmuls
jae
mov
add
int3
jmp
cltd
cwtl
aad
jle
xchg
lahf
pop
xor
xchg
and
xchg
sub
in
iret
ljmp
out
xchg
xchg
test
or
cmp
repnz
mov
cltd
inc
mov
push
push
call
xor
add
and
cmp
push
int3
into
push
pop
jbe
pop
sbb
or
push
adc
lret
push
mov
jge
inc
sbb
or
pop
add
mov
scas
inc
int
dec
adc
mov
xchg
dec
pop
adc
dec
inc
leave
je
xchg
sbb
jg
popa
jnp
outsl
cmp
dec
lea
inc
test
mov
loope
insb
adc
stc
pushf
gs
cs
aad
out
push
adc
cmpsb
mull
xor
or
shlb
mov
lret
mov
jp
mov
jle
test
ljmp
fs
or
orw
test
push
stos
jno
mov
outsb
mov
aad
push
pop
fbstp
rolb
mov
imull
out
into
imulb
add
pop
xor
sbb
scas
inc
xor
xchg
int3
lahf
and
faddp
inc
jnp
pop
jl
mov
add
mov
movsb
daa
xchg
clc
test
and
test
addr16
push
mov
nopl
stos
dec
enter
mov
pop
cmp
test
into
stc
inc
fst
ljmp
dec
jecxz
cmp
pushf
jge
lds
mov
xchg
cmpsb
mov
test
sub
xor
dec
stos
cmpsb
dec
sub
mov
fs
sti
rcll
jmp
imul
test
add
outsb
xchg
lea
mov
pop
int3
cmpsb
rol
lsl
jge
jp
jmp
lods
push
and
mov
inc
lds
push
in
add
or
std
icebp
xchg
mov
sub
jne
jge
inc
mov
mov
lock
popa
and
push
fstpt
icebp
orl
xor
pop
mov
adc
adc
xor
dec
ret
enter
mov
mov
mov
pop
test
pop
jnp
in
fstl
fbld
mov
lret
pushf
jo
divb
fwait
or
das
dec
push
in
pop
sbb
adc
mov
ret
jmp
faddl
and
or
clc
dec
or
out
ret
popa
inc
dec
xor
jno
mov
shrl
out
mov
inc
and
jnp
jle
icebp
add
out
dec
sub
pop
mov
aas
lods
add
int3
sahf
sti
xor
imulb
sarl
loope
imul
fisttpl
nop
insb
les
popa
cmpsl
cwtl
xor
mov
fsubrs
pop
inc
xchg
imul
test
pop
addr16
cltd
ret
rorl
and
es
dec
xchg
mov
lds
es
repz
sub
push
ja
or
inc
mov
dec
push
mov
xor
popf
ljmp
push
jle
shrb
dec
or
push
stos
jmp
or
loopne
pop
xchg
and
icebp
pop
xor
lock
mov
inc
or
rclb
xchg
add
mov
loop
iret
or
push
adc
movsl
dec
inc
mov
add
inc
enter
cltd
into
xor
sbb
clc
fnsetpm(287
int3
movsb
in
xchg
adc
or
dec
pop
imul
aas
ret
imul
nop
stos
popf
stos
mov
pop
and
data16
cmp
add
hlt
icebp
dec
les
sub
popf
pop
lret
fdivs
loope
dec
bound
mov
sahf
fstl
push
sbb
sbb
lcall
icebp
or
cld
xor
out
xor
inc
popf
jnp
adc
add
fs
dec
nop
mov
adc
jl
lret
mov
and
push
insb
int
or
jle
stos
adc
inc
fs
shl
dec
sbb
test
fs
and
mov
pop
mov
loope
lcall
std
add
jmp
lea
call
xor
dec
faddp
scas
cmc
rcrb
hlt
scas
mov
mov
xor
cwtl
stc
pop
mov
xor
stos
dec
jmp
loop
xor
insb
out
test
dec
stos
dec
adc
lcall
sar
mov
roll
push
jmp
out
adc
inc
pminsw
jnp
xchg
mov
addr16
pop
fistps
jg
jno
xchg
out
lcall
cmpsb
push
sbb
ret
aam
xor
sbb
ljmp
mov
sub
fcomip
lcall
sti
cmp
loopne
inc
std
stos
in
push
sbb
mov
dec
jb
in
xchg
sbb
sub
add
fwait
sub
mov
das
jge
test
jo
sbb
push
rcrl
mov
pop
and
cmpsl
cmc
and
into
xlat
cmp
test
jmp
sub
mov
jecxz
or
nop
aam
stos
xchg
inc
inc
cld
mov
add
adc
cmp
add
fwait
jle
xor
outsl
arpl
xchg
lds
sbb
test
mov
sbb
cmp
cmp
jns
test
mov
pushf
xchg
aad
push
or
mov
dec
mov
mov
addb
lods
inc
sbb
inc
daa
loopne
sbb
rcr
dec
out
add
testb
mov
outsl
mov
out
push
clc
in
sub
shrb
in
push
inc
and
cmc
and
call
xchg
test
pop
gs
lahf
sbb
ljmp
inc
xchg
insl
dec
inc
or
enter
push
sbb
add
pop
sub
cltd
out
ret
push
or
imull
and
mov
adc
shrl
jmp
xor
dec
std
out
sbb
cwtl
jnp
sub
fst
sub
and
adc
pusha
adc
and
cli
xchg
mov
mov
cwtl
mov
aad
iret
clc
sbbb
push
xor
and
mov
xor
inc
sub
push
rcll
jecxz
cmp
dec
sub
inc
mov
repnz
ss
xchg
aas
jae
das
pop
sti
inc
movsl
jmp
dec
or
pusha
jmp
int3
cltd
and
inc
aam
shrb
in
jmp
jno
xor
in
cmp
mov
pop
nop
jl
stc
cmp
stos
imul
adc
js
mov
xor
mov
mov
and
orb
imul
push
andb
and
mov
jno
out
add
xchg
jns
sbb
push
mov
in
sbb
scas
push
in
leave
fimull
or
lods
fadds
xchg
scas
adc
fimuls
mov
inc
dec
xchg
lods
js
addr16
pusha
add
aam
inc
xchg
dec
cmp
mov
call
xchg
mov
cld
fidivrl
inc
into
lret
adc
out
dec
pusha
sbbb
mov
adc
dec
sbb
mov
loop
lds
sarb
xchg
cltd
jae
fs
sub
leave
mov
aaa
xchg
addb
add
adc
out
sub
add
xlat
aaa
shrb
or
xor
mov
sub
enter
dec
add
jo
push
mov
popa
gs
jae
out
ljmp
das
stc
aad
test
cmp
add
mov
push
mov
dec
inc
mov
jmp
and
divl
cmpsb
pop
and
in
lcall
inc
mov
jle
into
mov
sbb
test
cmp
in
mulb
jmp
stos
repz
xchg
test
pop
add
gs
jle
cli
sbb
rclb
jge
push
mov
imul
lcall
mov
pop
inc
cmc
popf
jl
pop
xchg
add
stos
and
loope
fcmovnbe
mov
ljmpw
shll
dec
fimuls
pop
gs
push
cmp
fistpll
adc
pop
pop
popf
leave
cli
arpl
mov
sbb
and
jle
bound
xor
mov
pop
cmp
out
push
jl
or
inc
dec
jge
jno
cld
jle
or
ret
clc
dec
mov
cs
sub
xchg
lcall
jae
xchg
testb
jecxz
add
fstp
mov
jge
sbb
divl
xlat
negb
cmp
add
outsb
xor
fidivl
loopne
in
xchg
je
fdivrl
popa
icebp
scas
pop
std
pop
push
rcrl
repnz
xor
mov
dec
aaa
sbb
cltd
hlt
mov
mov
outsb
xlat
add
hlt
sbbl
xor
cld
aas
lods
lods
aad
add
in
imul
sbbl
inc
aaa
lock
inc
dec
rclb
cmc
xorl
aam
inc
sub
mov
dec
bound
push
jb
push
es
les
push
popf
lock
mov
mov
prefetch
or
jg
mov
test
sbb
dec
add
xor
adc
aad
shrb
js
pop
xchg
testl
push
pop
insb
and
jecxz
xchg
call
cmp
dec
mov
jnp
divb
dec
inc
movsb
dec
pop
mov
sahf
mov
sbb
in
ss
sub
imul
add
jecxz
out
roll
jg
mov
mov
xchg
in
mov
in
push
test
sbb
push
pop
adc
mov
addr16
fsub
mov
mov
das
adc
stc
inc
mov
mov
dec
pop
adc
xchg
call
cmpl
inc
add
arpl
push
fldenv
add
jl
mov
sbbl
mov
xor
xchg
ret
mov
incb
xlat
xchg
cmp
ss
adc
pop
cmp
adc
rcr
xor
dec
mov
gs
stc
jmp
les
push
dec
pop
xchg
mov
xchg
push
cltd
repz
loope
mov
mull
inc
mov
gs
notl
lock
loop
cmpsl
movsl
test
sbb
das
push
mov
push
mov
add
insb
ljmp
insl
jmp
jp
dec
adc
push
jno
adc
sahf
add
arpl
fidivrs
mov
imul
xlat
adc
sti
insb
rclb
inc
dec
les
andb
js
test
jae
scas
sub
loop
adc
fisubrl
loope
sbb
dec
jle
inc
daa
jo
pop
xorb
loope
pop
or
pushl
sbb
ss
es
push
mov
repz
ret
mov
pop
loop
xchg
dec
lcall
mov
scas
jns
inc
in
dec
call
imul
sub
ja
and
jnp
cmpsb
push
mov
inc
and
push
xchg
pusha
inc
xchg
out
jne
jmp
dec
jbe
into
adc
mov
push
popa
cmp
in
pop
jle
push
sti
faddp
push
pop
sbb
dec
in
or
xchg
lea
imull
push
fwait
mov
adc
xor
js
iret
cs
mov
inc
add
push
sbb
mov
mov
mov
pushf
mov
and
outsl
int
xor
movntps
rorl
scas
fstpt
incl
or
stos
inc
test
test
movsb
clc
or
lds
xchg
fidivrl
dec
jp
push
cmp
std
data16
cmp
pop
and
int3
inc
rorb
fmull
mov
mov
xor
push
adc
xchg
xor
dec
ss
sbb
mov
inc
je
adcl
jns
xchg
bound
mov
sub
fistps
xchg
and
mov
addb
pop
push
cmp
add
stos
test
push
pop
jae
sub
adc
std
mov
es
sbb
jl
rorl
sub
ret
sbb
jno
mov
push
sub
mov
std
std
cwtl
test
jno
cwtl
lret
mov
sub
pop
jmp
aad
jne
sub
add
cmp
inc
dec
lcall
test
and
inc
xor
int3
out
hlt
pop
adc
inc
dec
push
xchg
jle
fcoms
mov
roll
stos
sbb
sbb
mov
jbe
or
jle
iret
insb
pop
pop
jmp
cmpsb
sbb
cmp
cmc
or
jo
and
mov
and
outsb
or
out
rcr
add
inc
mov
fisttpl
lret
fmul
pop
push
cmp
inc
mov
mov
push
xor
fldenv
mov
mov
cmpsl
repz
push
pop
push
insl
imul
test
pop
cwtl
pop
mov
jae
repz
movsl
inc
cmp
stos
aas
dec
xchg
or
add
std
lods
xchg
sbb
mov
incl
aas
lock
lods
add
pop
lret
scas
pop
jl
adc
sar
mov
repnz
repz
sti
rclb
add
inc
pop
das
pushf
andb
out
hlt
jbe
pop
add
mov
aas
jne,pt
lods
mov
test
rep
adc
out
ret
jecxz
pusha
mov
xorb
push
sahf
faddl
and
test
xor
mov
loop
and
fstpl
xchg
mov
cltd
cwtl
mov
lahf
pop
push
mov
lds
mov
or
pop
pop
push
xchg
xor
mov
test
ljmp
push
push
loopne
fsubrs
test
ret
fwait
mov
stc
ds
mov
mov
iret
inc
les
pop
ffreep
hlt
mov
cmp
and
nop
push
cs
test
sarl
sub
pusha
divl
mov
pop
fwait
addr16
mov
inc
ficoms
sub
es
or
loope
mov
movsl
inc
popa
cltd
and
jecxz
in
out
ds
dec
xchg
sbb
in
pop
addb
rclb
in
dec
or
lds
push
imul
lahf
cmp
test
movsb
outsl
mov
mov
lds
mov
rcll
addb
cltd
pop
lea
stc
in
push
jecxz
ljmp
dec
out
fs
pushf
addb
aam
push
test
push
mov
fucomip
cli
inc
das
scas
mov
xchg
add
sbb
and
xor
stc
sub
out
xchg
mov
es
mov
and
enter
and
mov
mov
push
push
mov
inc
dec
stc
nop
icebp
popa
add
inc
xchg
mov
inc
ds
inc
push
addl
lea
mov
or
sub
ljmp
mov
pop
ret
ds
in
leave
or
out
inc
pushf
loope
jno
mov
adc
pop
mov
mov
lock
test
cmp
das
jo
test
js
sbb
jo
mov
and
or
shrl
mov
xor
mov
lgs
mov
scas
lock
aad
add
rcll
dec
mov
iret
add
roll
das
adc
inc
cmp
sbb
inc
mov
xchg
jmp
push
fbstp
addl
nop
dec
aaa
cltd
add
cmp
lcall
or
loop
or
mov
sbb
push
add
mov
call
jbe
loop
outsl
imul
cmp
adc
inc
and
and
popa
cli
pop
movsl
jae
push
repnz
lods
or
mov
jge
ficompl
out
mov
int
sbb
cmc
cld
fwait
jb
cmc
jl
mov
or
push
cmpsb
mov
in
leave
cwtl
addr16
push
fcoms
aas
mov
out
insl
movsb
adc
pop
mov
daa
jnp
xchg
mov
mov
mov
adc
sub
cs
loopne
popf
mov
mov
pushf
fcmovnu
shrb
stos
mov
mov
xor
lahf
jp
stos
jmp
push
and
xchg
gs
and
fs
mov
xchg
add
mov
dec
outsb
fsts
mov
dec
loopne
lea
push
daa
scas
leavew
and
jp
jae
fdivr
out
loop
jp
dec
daa
es
repnz
aam
dec
jecxz
dec
mov
push
xor
out
and
dec
mov
loopne
orl
xchg
loop
fnstenv
nop
movsb
rol
out
mov
fldt
push
imul
test
fldenv
xor
or
into
data16
mov
test
mov
dec
jge
call
add
mov
jecxz
ljmp
daa
add
outsb
in
sbb
inc
lahf
std
mov
jnp
cmp
insl
sub
adc
adc
xor
or
idivl
sbb
int
leave
rolb
test
xor
and
push
jno
adc
push
loopne
adc
stos
jmp
ja
sbbl
xor
mov
or
lds
into
into
mov
adc
jns
fwait
stos
xchg
cmp
outsb
cmpsl
cmp
loopne
cmp
pop
rcrl
movsb
cmpsb
int3
les
sarl
insb
negl
xor
mov
pop
int
lret
not
sub
xchg
int3
imul
cmp
push
int3
jbe
icebp
pop
cmpsb
push
cs
pop
icebp
js
add
lea
xlat
cltd
fcmovne
cmp
andl
scas
in
ret
insb
addr16
cltd
dec
push
pop
inc
gs
jnp
mov
ret
dec
and
lods
xchg
push
lods
sbbb
dec
xor
jb
xor
jo
mov
fwait
cmp
mov
test
mov
push
subl
mov
mov
jmp
pop
lock
or
fstpt
jnp
pop
sahf
test
xchg
sub
aas
jno
sub
lahf
aad
xor
mov
xor
scas
nopl
jp
dec
pushf
sbb
leave
sti
pushf
in
jbe
call
call
pop
sub
lcall
xor
or
pop
jg
xchg
push
pop
jg
pop
jns
in
icebp
xchg
loopne
mov
daa
aaa
sbb
xchg
cmp
xor
push
xor
outsl
icebp
inc
movsb
add
ja
mov
sahf
stos
adc
or
sbb
sub
xor
jnp
and
pop
dec
push
xor
lahf
into
stc
xchg
pop
test
das
dec
sub
jb
nop
or
rcrl
sarl
fstpt
sbb
inc
push
orl
ds
out
push
ja
mov
jns
addl
add
shlb
aas
icebp
mov
aaa
cltd
rclb
push
push
xlat
cmpsb
loop
outsb
mov
and
sbb
test
push
sahf
xor
int
popf
addl
ljmp
fnstsw
mov
cmp
pop
pop
xor
cmc
mov
dec
sub
push
jo
cmp
mov
sti
enter
inc
addr16
xchg
adc
add
loope
subb
sahf
jmp
mov
jecxz
inc
jge
sub
and
in
jbe
negl
enter
popf
mov
roll
adcl
mov
sub
movsl
cltd
stos
mov
push
xchg
imul
sbb
in
sbb
lcall
mov
jge
out
adcl
cltd
cmp
pop
adc
add
out
movsl
jno
dec
or
pop
pxor
jae
cmp
pop
pop
sub
push
rol
push
or
push
xchg
sahf
cmpsb
adc
arpl
pushf
or
imul
cmp
adc
data16
inc
cld
popl
push
pop
movsb
sub
imul
rclb
iret
push
add
movsb
mov
sub
fstpt
pushf
push
pop
xor
adc
sbb
xchg
bound
mov
shlb
sub
lock
mov
scas
test
mov
lahf
int3
inc
rolb
mov
imul
jo
stc
pop
jp
loope
nop
movsb
leave
sub
mov
ret
pop
jecxz
jbe
sar
cmpsl
or
adc
mov
popa
xor
clc
jns
movzbl
jns
lds
shlb
bswap
stos
pop
outsl
jp
xor
lea
arpl
cs
inc
mulb
popl
xchg
call
dec
or
nop
mov
out
dec
jge
ret
ja
fistl
jle
das
out
add
dec
add
push
stc
dec
xchg
les
jmp
ljmp
push
dec
inc
push
cs
cmp
out
mov
push
inc
lahf
and
push
xlat
mov
aad
nop
dec
repz
pop
outsl
adc
cwtl
insl
xor
xchg
mov
xchg
dec
fisttps
mov
mov
jecxz
lods
imul
ret
xchg
sbb
js
push
ja
pop
inc
mov
stos
out
loop
loopne
pop
pop
or
jne
inc
pushl
pop
or
fnstenv
shr
outsl
insl
ja
es
mov
test
jae
icebp
inc
xlat
aad
cmp
sbb
test
test
int3
lahf
sbb
movsb
test
inc
mov
mov
loope
loop
jecxz
ret
mov
imul
popf
dec
add
or
jb
mov
aas
cmp
sbb
mov
and
pop
xchg
loopne
fstpl
movsl
push
imulb
add
adc
inc
push
dec
in
stos
pop
lahf
pop
and
imul
lret
adc
mov
pop
mov
aaa
cmp
aaa
jb
mov
bound
ds
jp
int
lds
push
stos
or
les
stos
loopne
outsl
ret
out
push
addr16
sbb
push
cs
mov
pushaw
push
mov
lret
or
adc
xchg
jo
fsubl
in
mov
in
xlat
in
movl
stc
jge
xchg
dec
mov
mov
xlat
lods
fstp
mov
inc
inc
or
mov
add
ret
pusha
stc
hlt
xchg
rcrl
push
xor
sbb
subb
cmc
rcll
mov
xorl
sbbl
mov
popf
mov
clc
cs
sub
int3
or
lret
jp
scas
jle
mov
mov
fiaddl
cltd
loop
or
sub
lds
mov
icebp
cwtl
and
fbld
sahf
pop
push
stc
fdivrs
insb
inc
cli
inc
and
xchg
lea
outsl
movsb
fstps
mov
or
fsubp
fadd
gs
loopne
notl
pop
mov
int
xor
sub
mov
or
mov
stc
sbb
and
fcmove
lcall
pop
jns
push
push
jmp
sbb
mov
pop
jp
jle
into
lcall
mov
mov
fsubrs
add
adc
popa
popf
outsb
or
mov
fcmovnb
repz
inc
insl
push
fbstp
sti
xchg
xchg
xor
and
push
jmp
fldenv
stos
push
subb
enter
out
sbb
add
dec
stos
ss
int3
add
in
scas
fisubl
xor
adc
push
gs
cltd
pop
sub
lods
ficompl
jnp
push
jnp
ror
pusha
pop
popa
ljmp
sbb
inc
mov
add
sbb
aaa
dec
jl
mov
lret
add
add
push
negb
adc
sub
adc
pop
fcos
sub
xchg
negb
jns
jmp
es
lock
mov
push
jmp
mov
or
jmp
pop
insl
sub
cmp
icebp
or
push
sub
push
push
xor
pop
push
arpl
add
in
insb
push
stos
movsl
les
xchg
push
rcrb
pusha
test
jl
stc
inc
sbb
mov
das
pop
repnz
outsl
pop
cmp
xchg
push
ret
push
test
push
or
test
xor
xchg
fmul
dec
sbbl
int3
cmpsl
pop
mov
sub
pop
jae
and
sbb
insl
dec
enter
sbb
into
outsb
add
xchg
cmp
pop
outsl
push
mov
add
adc
not
jo
cmp
mov
dec
push
gs
sub
lods
inc
dec
aas
push
daa
mov
dec
add
mov
mov
in
pop
shr
inc
push
or
cmc
push
negb
icebp
xchg
sub
stos
fbstp
dec
pop
repnz
outsb
or
pop
cltd
fdivrp
lahf
add
xchg
outsb
mov
xlat
adc
or
je
clc
test
scas
testb
sbb
xchg
add
outsl
or
das
inc
popf
jle
cmp
data16
in
xor
fcoms
or
xchg
or
jle
rcrb
inc
aaa
test
or
mov
jbe
test
iret
pop
test
add
mov
cmp
out
jle
and
cmp
mov
adc
fistps
and
mov
xchg
in
or
js
xor
sub
cwtl
adc
or
ja
lods
mov
ret
mov
dec
pop
push
cmpsb
pop
outsl
cmp
fadd
lods
or
pop
xlat
sbb
adc
fwait
xchg
daa
and
inc
pop
jmp
xor
jae
cmp
adc
sarb
dec
lcall
xor
loop
movl
mov
add
xchg
insb
mov
mov
pop
ficomps
and
std
push
in
cmpsb
jb
sub
xchg
pusha
or
inc
sub
bound
movsb
dec
adc
cs
enter
leave
mov
inc
leave
inc
adc
imul
iret
cmpsl
cmove
cmpsl
ret
je
push
ds
out
imul
cltd
push
mov
addb
jl
jne
mov
movsb
dec
sub
push
inc
jno
lahf
cmpsb
data16
sarb
inc
lds
jg
pop
push
pop
fsubl
outsb
dec
jmp
cmp
lea
incb
in
inc
bound
sbb
movsb
cltd
mov
dec
and
cmp
and
xchg
fwait
and
aad
loop
scas
dec
adc
stc
or
aas
leave
push
inc
dec
or
mov
cld
xchg
imul
popa
je
flds
in
push
out
dec
in
mov
pop
repnz
jbe
fs
push
repnz
dec
mov
in
jp
jle
sub
mov
add
push
dec
xchg
es
std
rcl
dec
mov
sub
rcrl
repz
mov
inc
push
mov
cmp
insl
stc
mov
cmp
fmuls
test
mov
mov
xchg
ret
jns
hlt
and
or
and
push
stos
mov
dec
int
fdivrl
insb
xor
das
call
fwait
test
xor
mov
fdivl
pushf
stos
jo
sbb
mov
imul
pop
mov
stos
mov
sbb
inc
add
mov
insb
fstpl
out
adc
mov
lcall
and
mov
and
inc
adc
mov
xor
aad
ret
gs
out
add
pop
hlt
mov
std
mov
popa
shlb
sub
jne
adc
fidivs
mov
push
lcall
adc
sub
jb
xchg
cmpsl
loopne
inc
jae
mov
mov
push
pushf
sbb
mov
adc
fs
sub
or
outsl
jbe
xchg
pop
shrl
pop
adc
pop
inc
pop
mov
jge
fadd
adc
xchg
test
aaa
sbb
jle
fldl2t
xor
lahf
enter
fwait
aas
jg
out
decb
mov
push
lret
push
push
ja
repz
in
out
mov
sub
adc
data16
push
out
push
pop
or
mov
pop
gs
pop
add
stc
adc
xchg
pop
pop
mov
inc
in
cmpsb
dec
popa
mov
and
sub
lcall
mov
and
push
push
dec
loop
repnz
mov
dec
xchg
daa
iret
imul
jae
xchg
and
arpl
fstpt
mov
pop
pop
dec
nopl
sub
add
data16
fs
cmp
divb
mov
xchg
pop
jecxz
movsb
repz
and
repz
mov
fstl
or
sarb
enter
mov
push
bound
popf
bnd
mov
adc
arpl
stc
inc
lahf
faddl
std
pushf
shrb
xchg
pushf
iret
cmpsl
jnp
wrmsr
daa
sahf
lock
in
push
inc
mov
xor
idiv
mov
fildll
sbb
inc
jne
lods
push
addb
xor
or
enter
sbb
xor
fisttps
sbb
es
bound
ds
lret
scas
mov
inc
lahf
cmpsl
aaa
fisubs
push
sbb
mov
push
ss
stc
call
adc
dec
aam
mov
pop
daa
mov
popf
push
stos
sub
out
jmp
xchg
cmp
pop
les
pushf
push
push
int3
imul
jg
insb
imul
cli
mov
push
cmp
add
xor
stc
mov
dec
aas
idivb
dec
sbb
inc
stos
ja
cmp
incb
pop
in
scas
mov
and
scas
xchg
flds
lcall
mov
add
pop
push
cmp
imul
add
nop
mov
inc
sarl
mov
jle
out
mov
out
push
std
jmp
pop
xchg
jb
dec
notl
sbb
cmpsb
mov
mov
sbb
fiadds
lods
js
cmp
mov
in
mov
or
adc
in
push
mov
dec
in
cmp
loope
xor
lahf
xchg
pusha
mov
imul
inc
lods
xor
decl
imul
dec
pop
mov
lret
push
inc
jle
push
lahf
push
pop
push
mov
xchg
sub
add
outsb
and
sarl
aad
mov
mov
mov
jl
and
in
sub
push
bound
inc
mov
xchg
fimull
inc
ret
push
rcrl
dec
stos
add
sarb
jp
repz
and
nop
push
repz
pop
push
loope
mov
cmp
imul
jo
icebp
faddl
ljmp
outsl
mov
and
scas
push
call
clc
inc
lds
mov
pop
inc
hlt
cmp
push
inc
stos
call
jge
pop
pusha
jp
or
repnz
lea
add
xchg
inc
insl
adc
sbb
sbb
les
cli
or
pop
pop
clc
pop
ljmp
cmc
inc
addr16
test
call
xchg
in
jo
dec
imul
inc
aad
pop
adc
shll
ss
leave
adc
pop
rcll
pusha
pop
cmp
data16
movsb
xor
mov
push
js
pop
cltd
ljmp
lret
add
pusha
out
pop
in
jo
std
dec
insb
dec
repnz
xorb
ret
push
fistl
mov
out
stos
addl
cs
mov
adc
xchg
push
jle
xchg
rorl
out
xor
rolb
cmp
dec
mov
pop
xchg
push
roll
rorb
pusha
fadds
out
mov
sarb
test
imul
pop
clc
or
or
mov
xchg
ja
jge
rorb
jne
out
and
fwait
pop
cmp
jecxz
inc
push
dec
add
std
xchg
sbbb
ss
pop
and
fwait
mov
sub
scas
call
cmp
hlt
jne
push
push
fwait
sar
leave
hlt
lods
faddl
jmp
jl
ljmp
lret
and
aaa
fnstenv
outsl
xchg
pop
mov
imul
in
mov
mov
push
shr
cmp
inc
push
pop
mov
and
je
call
lret
dec
pop
dec
jno
xor
xor
ss
pop
fists
xor
and
mov
add
cmp
cli
in
pusha
ss
mov
loope
or
mov
jle
xor
dec
add
push
test
mov
add
notl
lahf
fwait
jl
jnp
outsl
xor
incb
outsb
loope
gs
mov
lds
pop
or
inc
mov
jecxz
sbb
push
movsb
ds
cs
fmuls
jl
in
lret
add
xor
popa
inc
aaa
lret
inc
and
stc
sub
jbe
inc
mov
mov
ret
test
jl
or
scas
sbb
cld
mov
mov
sbb
cmp
movsb
mov
lret
jmp
push
rcr
dec
push
repnz
adc
or
fists
mov
and
aaa
xchg
dec
rorl
mov
fldl
std
mov
in
dec
movsl
out
int3
mov
int3
inc
xor
and
add
push
pop
inc
inc
sbb
push
adcb
in
sti
shll
jb
outsb
aad
std
cmp
and
xchg
adc
fisttpll
xor
jp
das
into
sarl
jb,pn
jl
push
mov
jge
jo
adc
mov
scas
sahf
lods
push
xchg
into
pop
daa
pop
or
cwtl
mov
shll
mov
pop
addr16
jmp
ror
dec
leave
jecxz
daa
sbb
add
shlb
add
mov
adc
mov
cli
cld
scas
clc
scas
sub
test
mov
lret
aaa
hlt
dec
mov
cmp
mov
pushf
xor
lds
or
rcrb
lods
out
mov
dec
inc
outsb
sarb
pusha
inc
fldcw
sbb
imul
and
mov
mov
or
dec
mov
ret
jecxz
add
shrd
xlat
stos
xchg
cmc
cmpsl
das
stc
ss
ja
ret
div
xor
adc
mov
movl
and
adc
jnp
sub
out
push
or
out
subb
mov
out
mov
pop
in
jg
mov
cmp
inc
mov
xchg
into
inc
xor
loopne
cmp
or
repz
in
rclb
push
push
mov
lret
and
push
lcall
pop
xchg
jb
inc
in
arpl
ficomps
sbb
xchg
stos
jl
cli
lret
imul
and
jb
shrb
and
sub
xchg
adc
mov
loope
es
pop
lea
dec
jl
fs
and
cs
rol
mov
dec
sub
mov
sbb
mov
jg
arpl
lahf
mov
pop
adc
scas
push
jnp
sbb
and
and
ret
xor
and
js
movsl
aam
fs
stc
push
sti
into
arpl
or
cmpsb
lret
sub
xor
aas
loop
mov
call
aaa
push
fdivrl
or
sub
mov
push
adc
xchg
jl
mov
add
cmp
faddp
ss
add
push
push
mov
add
cld
cmp
push
mov
test
inc
dec
ret
add
jl
out
sarl
jp
fildl
enter
mov
fwait
jmp
cmp
aad
cvtpi2ps
pusha
or
aam
sarl
push
ja
adc
mov
lea
dec
pop
cmp
in
adc
pop
outsb
adc
dec
repnz
xchg
ret
mov
dec
outsb
in
and
out
ss
inc
cld
roll
dec
sub
test
ret
subb
xchg
xchg
dec
inc
mov
scas
fsubrp
mov
mov
jbe
out
jno
inc
sbb
fstps
enter
and
lcall
cmp
idivb
mov
push
ret
faddp
sub
cmp
hlt
movsl
mov
scas
fldt
jmp
jbe
fsubrl
js
xlat
shll
push
shrl
pop
mov
shlb
lock
sahf
sub
or
cmpsl
dec
leave
cwtl
add
pop
outsl
pop
outsl
jmp
jecxz
scas
inc
xchg
mov
int
inc
fistpll
jle
jo
mov
aam
leave
scas
mov
loope
loop
jg
jno
or
lock
cli
mov
in
xchg
cmp
sub
adc
ret
sbb
ljmp
adc
popa
mov
mov
xor
fdivrl
ret
pop
xchg
or
jl
dec
sub
push
popf
movsb
out
adc
shll
les
int3
shlb
leave
cld
inc
add
fs
jne
xchg
or
daa
mov
mov
cmp
fcoms
mov
fidivrs
dec
bound
ret
sub
lcall
and
hlt
push
pop
dec
dec
push
shll
arpl
jmp
mov
adc
xorl
xor
push
mov
inc
lret
mov
sub
mov
mov
pop
jno
inc
sbb
mov
fdivrs
or
mov
fwait
pop
push
xor
cmp
dec
jge
sbb
mov
jno
jp
xchg
jmp
rcrb
enter
jne
add
scas
dec
or
movsb
fstpl
scas
push
scas
lock
repnz
mov
gs
or
inc
xor
aaa
dec
loopne
test
lea
pop
aam
movsb
push
pop
push
popf
adc
js
inc
scas
lea
jge
push
lret
outsb
adc
daa
lcall
pop
adc
cmp
cli
mov
cmpsl
leave
xor
xlat
jbe
test
dec
stos
insl
pop
fldcw
or
notl
sub
pop
loop
lret
mov
lret
mov
aas
inc
dec
xor
lods
push
sbb
daa
lret
push
sti
int
xor
test
pop
push
icebp
jg
insl
dec
int
push
test
imul
rolb
add
insl
test
mov
and
xchg
cmp
dec
cmpsb
cmpb
ja
mov
cld
loope
mov
ljmp
push
jo
jmp
daa
cld
jns
xor
mov
sub
xchg
inc
dec
and
std
mov
test
and
pop
pushf
pusha
mov
add
lock
insb
and
hlt
int
pusha
aad
andb
push
cwtl
inc
jo
add
sub
lret
xchg
fsubr
repz
test
movsb
in
into
fdivr
fs
outsl
dec
dec
cwtl
js
xor
pop
xchg
add
insl
mov
shlb
orl
or
pop
jb
xchg
inc
push
aas
push
lret
cli
pop
mov
repnz
adc
jbe
inc
lock
sbb
push
aad
push
mov
cs
lods
push
cmc
lock
orb
movsb
mov
jb
push
outsb
xor
xor
xor
cmc
shll
adc
cwtl
jne
cmpsb
xor
jp
lret
and
push
je
loope
jl
cmp
fs
mov
push
fisttpl
push
icebp
or
jns
sbb
push
ss
rclb
sti
mov
cwtl
pop
mov
inc
jle
push
and
rorl
mov
xchg
cmp
mov
std
int3
lcall
loope
mov
mov
ror
clc
adc
cmp
test
sti
inc
repz
shlb
lret
cmp
inc
mov
icebp
jo
push
insl
jp
sbb
and
lcall
imul
int3
test
mov
jp
cld
mov
jl
mull
cwtl
adc
inc
mov
in
and
inc
xor
mov
rcrb
jo
jl
add
inc
adc
int3
xor
data16
imul
xchg
push
mov
mov
pop
imul
mov
adc
mov
adcl
xor
loopne
sbb
stos
pop
xor
inc
dec
popa
or
pop
stc
sarl
popl
pop
xchg
pop
lret
jno
mov
in
les
add
sbb
cmp
pop
arpl
adc
cmpsb
dec
lods
push
xchg
inc
push
adc
push
ja
and
jns
in
jle
add
shl
or
xchg
dec
pop
fldcw
add
in
sahf
lods
mov
enter
imul
popa
test
xchg
xchg
in
mov
stos
sbbl
jne
gs
test
scas
repnz
fisttpll
mov
test
push
mov
or
mov
mov
inc
xchg
or
xchg
in
les
cmp
test
jmp
repnz
loopne
sub
adc
and
pop
fistpl
daa
rcll
dec
pmaxub
and
xor
jne
pushl
sarb
jne
xor
dec
mov
push
imul
mov
je
outsb
dec
dec
arpl
loop
push
fcomps
rcrl
mov
xor
push
jge
sub
pop
cli
dec
jns
mov
pop
sub
js
cltd
filds
xchg
sahf
jg
iret
loop
pop
test
cltd
sti
cltd
jae
xor
push
fdivrs
ret
icebp
lahf
lcall
sub
mull
jbe
xchg
icebp
jns
pop
cmpsb
sub
or
fisttpl
sarl
mov
pop
popf
jmp
push
dec
scas
sti
inc
lea
rolb
movsb
add
scas
push
push
xor
mov
outsl
inc
push
rclb
mov
push
or
sbb
adc
add
test
addr16
mov
push
sbb
add
stos
sub
xlat
and
push
divb
in
push
int
gs
inc
out
pushl
add
sbb
mov
daa
cmp
push
popa
sbb
xor
pop
ss
rcl
ja
mov
imul
or
dec
imul
lds
inc
cmpsl
pop
push
push
mov
or
movsb
adc
nop
sbb
cmp
enter
ja
sbb
inc
and
inc
add
push
inc
ljmpw
pop
or
ljmp
inc
xchg
in
lods
dec
sub
out
sub
mov
ficompl
xchg
nop
mov
or
dec
sub
mov
xchg
cwtl
repnz
jmp
fisttpl
repnz
or
shlb
ret
mov
mov
jae
mov
mov
jo
in
inc
loopne
lea
int
mov
lret
pop
jb
mov
mov
inc
add
dec
movsl
mov
mov
push
sbb
pop
xchg
pop
xor
sbb
clc
fidivl
push
xor
mov
or
xchg
ja
and
pop
pusha
lods
add
ljmp
mov
xor
ds
pusha
fs
inc
and
dec
add
fisubrs
inc
ljmp
jmp
dec
mov
add
sub
int3
xchg
popf
movsb
push
vpmaxsw
repnz
sbb
aam
push
out
testl
ljmp
pop
sub
stos
dec
mov
pop
js
mov
xchg
jns
dec
jmp
xorb
jnp
pop
inc
repnz
jge
xchg
nop
mov
nop
jmp
jmp
xchg
or
mov
in
test
mov
mov
mov
xor
jge
dec
jg
mov
fstps
and
lahf
add
loope
cmp
pop
leave
lock
fldl
push
inc
ss
adc
inc
mov
dec
aad
cwtl
sahf
loope
ja
leave
mov
mov
mov
fildll
lds
inc
sub
ljmp
mov
loopne
insl
and
fldenv
pop
fdivs
push
popa
adc
or
lret
into
je
std
shlb
shll
stos
mov
mov
add
mov
push
lods
mov
js
leave
mov
pop
rcrl
or
mov
adc
xchg
push
pusha
adc
mov
aaa
aam
push
xor
sub
sbb
push
mov
xchg
or
aam
or
jge
inc
xchg
dec
subb
std
cmp
arpl
or
add
enter
and
sub
in
or
cmp
add
out
lock
sub
hlt
rcrb
and
dec
or
cvtpi2ps
xor
imul
sbb
loope
test
ret
in
add
sti
mov
push
and
popf
xor
pop
insb
or
push
out
sbb
lahf
xlat
fs
add
pop
popa
les
cmpsb
addr16
fimuls
int
popa
pushf
mov
cmp
lret
adc
xor
in
repnz
xor
aas
loopne
pop
das
pop
xchg
scas
jo
test
fnstcw
ds
stos
xor
or
pushf
ja
sti
ljmp
pop
mov
pop
rcrl
xor
push
push
inc
rorl
push
xor
add
mov
aad
inc
mov
aaa
xchg
jo
neg
sahf
cmp
xor
xchg
ret
lods
jns
jecxz
or
mov
pushf
pushf
lret
testl
push
and
xlat
dec
scas
dec
mov
into
adc
jb
and
mov
xor
mov
jmp
enter
jno
shl
pop
xchg
sbb
test
push
pushf
ds
shlb
push
addr16
jae
movsl
lret
mov
cmp
popf
in
in
or
pop
les
stos
bound
push
push
repz
les
xor
xchg
pop
hlt
jb
inc
nop
loope
dec
cmp
pop
testb
pop
shll
cmc
nop
addr16
lock
mov
add
fcmovb
xor
jbe
jg
test
fnstsw
mov
and
xor
dec
push
and
popa
pop
add
lret
xchg
mull
mov
xchg
cmp
sbb
in
pop
mov
rcrl
add
fs
fs
xchg
imul
mov
pop
pop
out
add
adc
mov
sbb
inc
sbb
lock
cwtl
pusha
lea
adc
mov
xor
out
fcompl
dec
fldl
add
rorb
lods
and
cmp
mov
ja
in
push
negb
jnp
fistpll
pop
pop
fs
push
cmc
popf
fidivs
or
call
fdivrs
scas
xor
lret
jmp
lock
out
mov
xchg
pop
mov
imul
leave
mov
mov
inc
xor
jb
scas
xchg
mov
negb
imul
aad
add
shl
dec
bound
out
inc
leave
mov
dec
add
lock
loop
cmp
mov
mulb
aad
dec
or
cmp
pushf
mov
mov
inc
daa
aaa
jmp
test
mov
or
push
pop
cmpsb
test
pop
add
inc
pop
jne
js
loop
aaa
push
das
fmull
or
push
sbb
and
mov
mov
js
dec
push
shll
insl
push
fsubrl
lret
cwtl
cmp
and
and
fsub
shr
lock
out
pop
cmp
dec
push
in
xlat
shlb
cmpsl
fisttpl
or
inc
pop
inc
shl
insl
getsec
fists
dec
jmp
sub
lcall
adc
push
mov
jg
add
fadds
test
mov
sbb
mov
push
sti
mov
push
push
inc
fcomps
ret
out
mov
sub
mov
jnp
mov
lods
jecxz
adc
pop
out
cld
adc
test
inc
xchg
cltd
in
xchg
loop
xchg
lds
subb
test
iret
out
fdivs
fistpl
pop
mov
lods
loop
test
aam
and
nop
or
mov
xchg
out
push
add
mov
mov
and
or
mov
fstpt
insl
push
dec
fdivr
aam
dec
sub
daa
jle
sbb
xchg
mov
jns
pop
mov
arpl
push
xor
xchg
mov
hlt
js
les
pop
aas
cmp
inc
popa
mov
xchg
ja
sbb
adc
xchg
xchg
inc
and
xchg
xor
into
stos
mov
pop
pop
add
mov
cltd
pop
outsb
insl
pop
mov
push
mov
addr16
sbb
push
xor
xchg
push
out
test
inc
mov
movsb
leave
add
outsb
add
imul
lret
mov
test
imul
stos
lea
jbe
and
std
popa
inc
call
icebp
rorl
fisubrs
sub
sbb
and
cmpsl
sub
mov
push
mov
jg
insl
push
sub
mov
int
iret
sbbl
push
gs
ror
push
xchg
add
pop
push
inc
or
ds
mov
popa
popf
scas
std
mov
jmp
jmp
mov
jne
mov
or
push
popf
cld
in
cld
cltd
je
aaa
push
sub
and
mov
imul
jge
rcl
cmp
mov
xchg
dec
lcall
ja
cmc
pop
lahf
filds
insl
into
fmul
add
jp
xchg
mov
adc
and
mov
lret
lods
pop
rolb
push
pusha
leave
inc
pop
or
mov
adc
and
mov
lds
lcall
mov
aam
ret
outsl
int
and
ljmp
shll
mov
mov
clc
xchg
fnstsw
sahf
inc
pop
dec
lret
push
xor
insl
in
and
jecxz
inc
mov
loop
adc
imul
movb
scas
imul
aad
lret
inc
cmp
mov
int3
popf
and
sub
rclb
fcoml
out
ret
out
fbld
shll
jmp
int
xor
cwtl
add
lock
adc
push
cli
xchg
xlat
inc
lods
stos
fxch
adc
stc
data16
xchg
and
daa
add
arpl
lods
into
jecxz
stos
lods
xorb
xchg
int
lods
stos
icebp
fs
inc
lret
hlt
pop
in
loop
div
cmp
test
add
imul
inc
lds
in
faddp
in
sbb
clc
cmp
and
or
ror
loopne
out
push
fidivs
in
aam
ss
xchg
addl
aas
pop
je
loope
add
pop
stos
fadds
ss
pop
dec
lret
dec
lock
xorl
mov
js
jl
ljmp
popf
stos
cmp
adc
test
rcr
int3
cmpsb
cwtl
fsub
fsubrs
cltd
mov
fdivs
lcall
outsb
nop
test
sbb
jecxz
fsubl
in
sub
mov
and
pop
rclb
fsubs
cltd
sub
and
fdivs
add
ljmp
fiaddl
push
push
sbbl
aas
inc
and
fisttps
lods
clc
mov
fsubp
fisubrl
mov
je
out
lea
xor
jae
sbb
and
pop
push
or
dec
cli
mov
test
mov
mov
notl
sbb
stc
iret
jecxz
sti
add
inc
sar
add
or
cmp
sarb
repz
ror
or
repz
jl
inc
cld
test
sbb
out
jne
jb
mov
pop
xchg
je
xchg
cwtl
cs
in
ret
xor
sub
jbe
fstp
lods
lods
xchg
sahf
pusha
jl
rcll
js
pop
sub
dec
xchg
insl
mov
bound
jecxz
ja
lock
sub
cmp
push
rorl
jle,pt
pop
sahf
leave
mov
xchg
cltd
mov
sub
inc
test
pop
dec
inc
jo
cld
xchg
stc
xchg
inc
rolb
inc
mov
sarl
sti
pop
or
pop
jnp
xor
pop
std
xor
sub
std
in
sbb
xchg
aad
iret
cmp
cli
mov
movsb
push
mov
or
les
push
push
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
jmp
jl
in
sub
adcb
or
push
sub
push
push
mov
outsl
push
ret
xor
mov
jl
jmp
inc
push
and
outsl
jb
mov
xchg
out
in
adc
dec
adc
call
cmp
jo
jb
push
or
dec
mov
fdivrp
ret
mov
pop
mov
inc
sub
das
test
add
sbb
cld
popa
shll
dec
xchg
mov
push
push
and
imul
and
incl
push
loop
jmp
in
lret
mov
lock
sub
movsl
mov
cmp
test
sti
hlt
test
shrb
add
fs
push
ds
pop
adc
mov
or
test
mov
lods
popa
xorl
pop
out
xchg
pmaddwd
sub
shll
loope
mov
jae
inc
mov
pop
les
fisttpl
clc
xchg
insl
mov
adc
repnz
sub
mov
pop
mov
dec
dec
fst
xor
jbe
push
or
xchg
inc
insl
es
sub
and
test
inc
outsl
jbe
in
mov
das
ljmp
aas
sbb
leave
dec
movl
mov
add
sbb
fdivr
xor
lea
push
push
out
xchg
test
enter
icebp
insb
into
mov
xchg
icebp
jle
sbb
xor
ljmp
adc
mov
add
push
inc
dec
inc
jecxz
mov
or
scas
mov
push
subb
fisttps
aas
out
mov
xchg
stos
leave
inc
mov
fwait
int3
ds
push
inc
ljmp
fmull
jno
out
adc
mov
sbbl
push
xor
cwtl
adc
sbb
xchg
pusha
cmp
pop
or
xchg
jbe,pt
and
jb
push
ret
loope
mov
sub
popa
add
jns
out
add
fmull
mov
push
lea
in
fdivrl
jmp
ja
pop
jb
iret
jno
out
idivl
dec
mov
rcrl
inc
mov
and
jge
mov
neg
mov
icebp
sub
jg
mov
orl
lahf
jg
push
inc
cli
sbb
outsb
insl
aas
out
cmpsb
dec
and
push
out
fsin
xor
inc
inc
mov
fcom
pop
in
outsl
adc
fs
imul
clc
mov
and
cmp
aad
fmull
lahf
sub
gs
cmpsl
and
xor
daa
cli
xor
cmpb
cmpb
sub
mov
sbb
push
fcomps
jo
repnz
jnp
sub
fimull
stos
sub
bound
add
and
inc
jp
ja
sub
cmp
and
jbe
push
je
and
inc
ds
xorb
aaa
out
or
jp
shlb
or
mov
pop
std
dec
fsubrs
jbe
or
jge
xchg
sub
xchg
sub
mov
insl
sahf
mov
aas
pop
mov
mov
xchg
sarb
int
xchg
sub
dec
xor
sub
ret
jnp
int
sbb
testl
aas
add
das
sub
in
mov
pop
nop
pop
lret
sbb
add
or
inc
clc
dec
xor
add
mov
sbb
adc
xor
jbe
stc
mov
je
je
ret
out
stos
outsb
lcall
cmpsl
mov
adc
movsb
icebp
pushf
or
xchg
dec
mov
enter
scas
inc
mov
je
xor
int
mov
lcall
pop
adc
mov
js
mov
shlb
cmc
lods
mov
jne
or
dec
dec
jnp
es
cmp
shlb
daa
pop
or
push
addb
je
dec
adc
pop
shrl
movb
xor
iret
arpl
xor
inc
jo
sar
mov
dec
xchg
add
aad
mov
push
mov
out
fdivrs
mov
hlt
sbb
jae
lret
shrl
inc
je
lock
and
mov
add
xchg
fnstcw
movsb
xor
sbb
jp
repz
xchg
call
cld
lds
xor
jmp
pop
aam
ror
arpl
test
push
pusha
mov
jge
movsb
inc
das
dec
adc
stos
sub
rcl
ss
sti
imul
iret
cmp
push
cld
adc
aad
call
add
je
xchg
mov
jns
stc
and
pusha
stc
ljmp
call
cltd
and
fidivrl
add
add
scas
cmp
mov
fsts
test
and
popf
or
jg
loop
ds
sbb
ja
int3
jae
jp
lds
and
adc
mov
shll
arpl
lods
inc
rol
stc
sub
pop
xorl
xchg
xor
lret
out
dec
scas
sub
scas
in
repnz
addr16
pop
sbb
sub
sbb
xorl
jo
mov
mov
daa
cmpsb
mov
in
mov
inc
xchg
roll
xchg
clc
ret
in
call
adc
mov
sub
mov
je
in
inc
insb
jbe
ss
cmpsl
cmpsl
adcb
adc
xchg
sarb
popf
or
cmp
mov
dec
mov
shll
cmp
sbb
imulb
in
enter
mov
push
push
push
ss
fdivrp
out
aaa
lods
test
rorb
pop
lods
shrb
fs
mov
scas
mov
daa
xchg
sbb
je
test
adc
add
jo
les
mov
jl
xorb
add
xchg
adc
js
cmpsl
aas
mov
sti
cmp
loopne
jns
push
xchg
fcmove
jno
scas
mov
stc
pop
lret
or
lret
shlb
addr16
out
or
repnz
test
ror
lds
xchg
rolb
mov
daa
push
jge
stos
add
push
ljmp
add
lods
mov
inc
mov
addr16
mov
pusha
in
jmp
add
add
mov
stos
xor
mov
adc
cmp
fsubs
mov
pop
cmp
scas
loopne
pushf
fsubrs
bound
je
or
jl
adc
ret
outsl
inc
cld
xchg
std
mov
pop
into
out
scas
jmp
mov
mov
jle
push
mov
inc
popa
sub
mov
mov
bound
xchg
sub
push
push
mov
lret
and
add
mov
jae
rcrb
push
pop
adc
inc
adc
loopne
pop
mov
rcrl
jbe
ror
push
xchg
test
xor
jl
out
lret
pop
aad
call
fs
and
xchg
testb
add
ret
adc
andl
sbb
ret
jg
in
xor
les
sbb
and
ficoms
shld
add
mov
push
lds
lret
test
or
sbb
pand
daa
mov
mov
out
cld
sbbb
lds
dec
xchg
cmp
mov
fstpl
in
pop
test
mov
mov
in
xlat
out
incb
subb
jle
or
or
ret
in
dec
cmp
cmp
inc
cwtl
adc
add
insb
test
js
lahf
imul
push
pop
push
ja
movsl
xor
jbe
sub
jns
xchg
sub
les
and
and
xor
mov
daa
ret
sub
insb
dec
lock
fidivrs
cmpsl
lea
sub
repnz
adc
pop
or
adc
lods
adc
ljmp
fcoml
and
xor
negl
cmp
jge
fmull
jno
sub
dec
arpl
xchg
test
jmp
popa
add
rol
aas
cmp
push
mov
jae
outsl
push
mov
push
imul
xchg
mov
popf
adc
subb
or
hlt
mov
sub
cmp
decl
adc
xchg
jno
insb
or
inc
mov
out
mov
cmp
mov
dec
jae
and
and
out
mov
rorb
test
cli
jno
push
add
mov
pop
sbb
out
xor
mov
lret
sub
je
add
pop
lock
mov
push
dec
adc
or
mov
rclb
mov
fnstcw
aad
aas
xchg
inc
inc
and
sbb
imul
xchg
std
lods
dec
repnz
xchg
jmp
aas
mov
lret
pop
ds
rolb
aam
ljmp
mov
pop
push
imul
pop
loop
mov
inc
jge
and
pop
in
cld
mov
cmp
or
inc
ret
mov
push
out
xor
xlat
inc
xchg
mov
lods
in
cmpsb
dec
xchg
pop
xchg
dec
inc
inc
cmpsl
andb
cld
adc
mov
fs
xchg
imul
sub
scas
mov
fiadds
mov
xchg
push
and
adc
mov
lret
mov
decb
fs
fldenv
js
lea
adc
aad
xor
sbbb
lret
cmp
mov
pop
sub
hlt
push
iret
ljmp
lods
addb
movntq
out
lss
xchg
popa
repz
testl
inc
std
stc
lods
mov
fisubrs
cmp
ss
bound
test
rcll
sub
fimuls
cld
push
sub
sub
pop
sbb
lock
push
cs
mov
dec
xor
jmp
aad
jg
pop
bound
aaa
sbb
xor
xor
add
into
loopne
fwait
das
cmp
push
mov
fimuls
bound
adc
sbb
scas
fidivrl
adc
int3
push
jl
push
pop
pushf
jecxz
outsl
xchg
je
xchg
in
cmp
cmc
int
andl
out
lock
or
ss
cltd
push
adc
imul
daa
fdiv
push
sub
int
int
mov
mov
add
les
jns
imul
inc
addl
xchg
adc
out
iret
fistpll
jl
pop
mov
daa
sti
sbb
pop
nop
sub
mov
adc
inc
out
out
sub
inc
int3
adc
stos
xor
andb
std
or
cmp
dec
jecxz
or
jae
and
xor
fbld
push
pop
xchg
xchg
pop
mov
cmc
aam
movb
popa
cmp
rcll
pop
fistps
lods
dec
loope
shr
stos
outsb
pusha
sbb
insb
fdivs
in
ret
xor
xchg
mov
add
inc
out
sbb
pop
mov
or
out
jno
or
icebp
addl
negb
push
cmp
mov
addr16
inc
popf
xchg
add
sub
inc
out
pop
fistpl
adc
inc
loopne
cli
jmp
sbb
das
push
xlat
adc
test
out
sahf
adc
insl
dec
or
mov
mov
mov
push
popa
lahf
mov
xor
add
jno
loope
rcrb
ret
shlb
mov
ror
add
push
push
cmp
push
sub
pop
and
lret
ljmp
out
pop
gs
or
jns
aam
push
repnz
imul
mov
mov
lds
and
jecxz
in
jle
sti
ret
sbb
sbb
xlat
jne
cmpsl
inc
lock
xor
push
call
sub
mov
sbb
inc
push
adcb
test
icebp
xor
out
iret
xor
mov
pop
dec
outsl
jbe
jp
repnz
roll
inc
jo
cmp
jmp
gs
or
add
dec
mov
fadds
mov
test
iret
movsl
add
pop
aas
jb
pop
jno
inc
addb
or
arpl
or
cs
inc
negl
inc
sbb
sub
subl
xor
in
int
push
push
movsl
inc
mov
sbb
xchg
lds
lahf
fidivrl
xor
ss
ret
mov
dec
test
iret
mov
cmp
or
stos
stos
push
mov
mov
cmpsb
call
sub
popf
cmp
je
push
add
dec
pushf
adc
stos
cld
hlt
or
jno
int3
cmp
jns
xchg
cmpsb
out
sbb
jle
addr16
mov
mov
pop
push
divb
xchg
add
sbb
gs
stc
into
rorl
jle
or
sbb
js
push
and
aas
arpl
out
je
lcall
icebp
test
out
inc
movsb
xchg
popa
mov
add
pop
aam
in
scas
mov
arpl
inc
jne
inc
adc
and
in
aaa
icebp
sti
in
mov
and
fld
adc
push
mov
rorl
xor
orl
sbb
popa
add
pushf
jge
fisttpll
mov
outsb
fs
scas
fmul
xlat
mov
push
sbbb
cli
jecxz
loopne
in
pop
loop
xchg
jo
mov
imul
insb
mov
pop
pop
mov
mov
call
ja
adc
adc
push
fnstenv
repz
xor
loope
inc
mov
aam
loopne
loopne
pop
dec
add
imull
xor
mov
jns
aas
shl
int
or
test
fsubr
sbb
inc
dec
les
stos
out
out
popa
int3
or
mov
lock
xchg
bound
mov
pop
sti
lods
add
fmull
add
test
fmuls
lcall
hlt
xchg
test
pop
cmpsl
ja
and
or
sbb
add
mov
faddp
pop
push
inc
mov
xchg
mov
mov
add
mov
add
int3
inc
xchg
mov
inc
push
cmp
ss
push
test
stc
je
loop
cltd
test
push
nop
pop
mov
or
dec
movsb
inc
es
xchg
inc
les
cmp
and
xor
pop
data16
test
fs
popa
push
dec
sarl
clc
in
inc
push
push
pop
loopne
jg
jo
add
out
push
jl
push
or
or
xchg
ret
xor
and
mov
add
dec
pusha
inc
push
cwtl
icebp
mov
cmp
cmpsb
sub
dec
adc
rcll
ret
inc
jmp
fwait
int3
pop
jno
pop
add
add
mov
xchg
jecxz
push
dec
daa
inc
xchg
xor
outsl
inc
mov
inc
lea
push
aad
mov
shl
dec
cs
orps
and
xchg
adc
in
cmpsb
clc
into
xchg
sbb
test
xchg
pop
mov
sub
or
adc
mov
cmp
jo
jle
loope
out
push
sub
inc
stc
lods
jle
xor
insb
jae
gs
fidivl
cmp
add
clc
mov
sbb
add
and
stos
add
aam
add
imul
cmp
sahf
mov
lock
push
rcll
push
std
or
cmp
mov
xchg
ds
pop
loope
mov
xor
fisubrl
xchg
xchg
xchg
xchg
cmp
pop
mov
pop
loopne
cmp
add
inc
daa
jne
pop
cld
mov
or
push
mov
popa
mov
mov
pop
aad
sub
mov
icebp
in
addr16
ljmp
adc
btc
je
lret
test
pop
sarb
enter
imul
jno
int3
mov
int
stos
aam
xor
push
jmp
xchg
adc
sub
les
xor
shlb
mov
les
fcmovnu
mov
test
subb
push
adc
jmp
push
dec
scas
fstpl
inc
and
mov
pop
xchg
xor
neg
or
repz
adc
cmp
std
lcall
sub
mov
hlt
push
ja
mov
pop
cs
outsl
sbb
adc
push
insb
xor
testl
out
idiv
jb
hlt
stos
dec
std
push
jecxz
or
xchg
bnd
inc
adc
sub
in
dec
arpl
cmpsb
jg
jnp
repz
movb
xor
xor
leave
xchg
jle
jbe
sub
dec
dec
adcb
pop
jno
scas
test
push
movb
sub
pop
push
cmp
aad
jge
xchg
mov
packsswb
iret
jbe
add
dec
ret
mov
jp
fwait
or
fstpl
jnp
cmc
sahf
outsb
jb
icebp
adc
xor
push
sbb
pop
and
gs
inc
mov
xchg
stos
mov
pop
sahf
ret
je
scas
sub
movsb
pop
rcrb
inc
mov
in
or
pop
sub
shlb
sub
xchg
lret
or
inc
mov
mov
pusha
out
into
push
push
adc
xor
sub
fiadds
mov
sbb
lahf
imulb
xor
out
stos
cmp
das
xor
mov
xlat
cli
ss
push
leave
pop
push
nop
add
dec
aaa
xchg
addl
sub
stc
outsl
fucomp
xchg
sbb
inc
xchg
cmp
add
test
mov
sahf
dec
out
aas
fstpl
cmp
inc
adc
jno
mov
cmpsl
scas
sub
mov
inc
inc
sbb
std
lods
jns
pop
mov
jae
shll
inc
sub
fwait
push
loop
jno
dec
sub
push
add
jb
jg
arpl
dec
pop
ret
in
mov
mov
xchg
lret
ljmp
pop
adc
dec
fstpt
push
push
dec
sbb
jmp
sbb
dec
ret
fbld
fucomip
push
scas
sbb
lock
aas
xor
push
jecxz
mov
lret
pop
fstps
inc
mov
js
cmp
aaa
rcrl
jl
les
sub
test
and
mov
popf
les
xor
ljmp
xchg
out
xor
aas
es
test
bnd
out
mov
sub
cmp
add
les
mov
int
mov
xchg
adc
or
pop
cmp
jbe
dec
cmp
cmp
cmp
popa
mov
mov
jp
lock
mov
scas
mov
lcall
cs
hlt
ret
sti
mov
inc
sbb
ds
xor
loopne
int3
imul
std
ss
mov
call
sub
rorl
cmpsl
adc
aam
mov
push
subb
mov
ret
fwait
inc
imul
pop
jle
pop
dec
jmp
nop
stos
lret
cmp
in
js
das
sub
outsb
add
iret
sub
xchg
add
call
xor
xor
xchg
sti
cmp
dec
cmpsb
pop
cmpsl
pop
sbb
mov
push
fnstenv
mov
adc
in
fdivrl
cld
ja
std
sbb
or
push
sbb
push
data16
mov
fldpi
imul
pop
sub
ljmp
or
mov
cmp
sarl
popa
mov
cltd
out
xchg
mov
mov
rcr
stos
add
ss
fdivs
jns
dec
adcl
and
lea
mov
arpl
dec
xchg
mov
adc
aam
xchg
divb
cmp
popf
push
sbb
std
jb
ljmp
jae
pushf
mov
pusha
mov
loopnew
testb
popa
or
fdivl
gs
fs
jae
inc
mov
sub
inc
jno
lret
daa
xchg
mov
daa
mov
push
in
outsb
cmpsl
rcll
addl
push
xchg
lret
enter
idivb
dec
bound
mov
stos
loopne
sti
ret
stc
or
ja
mov
jmp
movsl
lea
inc
jno
cltd
dec
js
fidivrl
mov
push
roll
cmp
dec
in
fstpl
xchg
icebp
pop
push
fwait
loop
sbb
add
roll
popa
sbb
add
les
call
loopne
push
repz
lock
imul
and
sbb
add
jmp
ds
pop
mov
loope
enter
add
xchg
leave
stc
in
pop
dec
xchg
bnd
aad
loope
mov
icebp
out
dec
in
dec
fstpt
dec
jge
fidivl
int
xchg
inc
push
and
push
pop
jp
loopne
inc
xlat
mov
lock
sbb
scas
insl
repnz
pop
mov
jb
push
or
cmpsl
and
out
mov
pushl
pop
aas
jnp
xor
and
lea
sub
inc
jbe
fsubrl
mov
aam
les
adc
jb
mov
cmpsb
add
mov
and
insb
test
rol
cwtl
test
jecxz
repnz
pop
fisttps
mov
fildl
dec
outsl
in
pop
fdivs
or
mov
push
lods
lds
inc
or
filds
outsl
das
rep
xchg
pop
sub
xor
xlat
jge
dec
enter
inc
aaa
sahf
xchg
repz
popa
leave
rorb
loop
xchg
add
mov
shrb
sub
jb
cmpsb
push
sub
aad
stos
push
mov
movsb
mov
fwait
pop
inc
adc
or
bound
xchg
stc
jle
xchg
pop
data16
mov
xor
and
int3
jmp
jle
std
sub
xchg
jle
mov
sbb
lods
mov
and
add
scas
divb
mov
add
xchg
leave
dec
ffree
pop
subb
subb
or
pop
cltd
cmpsb
push
pop
adc
jb
lea
mov
das
pop
sub
rorl
sub
clc
xor
rorb
stc
and
add
jae
xor
adc
add
or
push
sahf
nop
jnp
lock
filds
add
sbb
jns
jbe
or
aaa
pop
lods
jae
lret
sbb
push
sbb
xchg
ja
sbb
jb
cli
xchg
sub
cld
and
jae
cs
xorl
mov
pop
xchg
or
fdivl
push
sub
xchg
mov
or
lods
and
mov
insl
stos
or
mov
sub
loope
enter
pop
sbb
rclb
fsts
or
fyl2xp1
aad
mov
inc
icebp
mov
jle
jp
cltd
das
or
sub
push
sti
mov
mov
push
cli
pop
mov
sbb
sbb
aas
inc
pop
test
lahf
loope
fstpl
push
ret
xor
shlb
push
jmp
xchg
push
pop
das
flds
xchg
pop
and
pop
push
dec
daa
call
mov
push
lret
cmp
mov
sub
insl
les
dec
and
mov
call
xor
add
scas
push
sbb
fwait
jle
dec
popf
scas
jb
xchg
push
inc
imul
pop
in
divb
xor
push
nop
dec
xor
xchg
ja
push
out
test
loopne
out
out
insl
add
dec
imul
or
jmp
push
cmp
addr16
add
fwait
hlt
or
scas
aam
outsb
lahf
pop
arpl
xor
jnp
cmp
in
push
ret
out
push
mov
dec
ja
pop
adc
mov
mov
inc
adc
sub
cmp
scas
in
inc
arpl
sub
jbe
mov
rolb
rcl
push
mov
add
dec
test
push
add
andb
inc
sbb
push
cli
in
add
outsl
lock
into
xor
jb
sub
int
aas
fdivl
adcl
je
aam
or
cmp
sub
les
leave
cmp
in
jno
test
cmpb
lahf
inc
das
and
push
adc
pop
xor
xchg
push
inc
into
sub
outsb
imul
mov
hlt
jmp
ficomps
mov
adc
inc
loope
dec
adc
mov
fdivr
and
dec
out
jmp
sub
xchg
push
xor
cmp
out
arpl
test
jle
mov
sbb
jno
add
hlt
cmp
cmp
inc
in
fcomps
fistl
out
and
cmpb
insb
popf
movsb
xlat
dec
jle
fs
xchg
fs
dec
xchg
daa
iret
cmp
stc
pop
in
ljmp
fdivp
inc
adc
inc
lods
hlt
scas
cmp
xchg
lcall
leave
dec
cmc
out
mov
cmc
adc
pop
and
notl
cmp
stc
jl
bound
sub
cmp
jnp
loope
sbb
fwait
or
pop
adc
xor
mov
inc
loop
sub
cs
inc
aas
mov
ljmp
mov
mov
cmpsb
in
lods
out
mov
mov
mov
fwait
push
imul
inc
push
add
push
pop
call
push
mov
jbe
sub
loop
push
popf
add
lds
scas
sbb
xchg
scas
insl
dec
mov
or
xchg
leave
mov
push
data16
jae
dec
imul
lret
sub
jae
mov
loopne
pop
cmp
cmpsl
popa
jae
inc
iret
or
xor
jne
out
dec
xchg
jmp
lret
movsb
lods
mov
addl
sub
sti
outsl
xor
lret
mov
dec
dec
cmp
mov
fadd
xor
test
xchg
test
test
mov
neg
push
lea
mov
adc
arpl
pushw
sahf
je
fildl
mov
stc
test
imulb
xor
mov
out
pop
dec
push
call
stos
mov
test
sub
pop
add
add
out
cli
int3
push
lods
jmp
aad
mov
mov
mov
mov
mov
js
lods
int3
test
push
les
mov
das
and
scas
imull
fstpl
cld
pop
mov
inc
jmp
shll
cmpsb
sbb
and
add
pop
or
inc
cmp
arpl
cmp
arpl
jnp
mov
sbb
popa
xlat
mov
rcl
movsl
mov
fs
clc
jae
pop
cmpsb
cmp
pop
in
cmp
stc
xchg
or
mov
or
das
jg
pop
mov
sbb
push
out
push
rolb
pop
iret
das
popa
pop
icebp
mov
mov
pop
pop
xchg
add
add
push
xor
jbe
ret
ss
lock
cs
lds
js
xor
cmp
imulb
mov
pushf
mov
pop
dec
push
roll
mov
push
dec
mov
inc
insl
xchg
int3
pop
push
fsub
mov
sub
push
jecxz
jns
cltd
jne
nop
mov
out
aaa
rcll
dec
cs
lret
adc
test
int3
jge
jmp
xchg
scas
rcll
add
imul
mov
pop
dec
adc
int3
dec
jb
push
xlat
pop
out
mov
stos
movsl
rcr
das
rcll
inc
push
xchg
add
in
sub
pusha
mov
pop
fsts
xor
pop
pop
lret
cmp
dec
sub
imul
jmp
lahf
pop
cmp
dec
cmpsb
popa
cmp
ss
ljmp
in
mov
sbb
sub
xchg
jg
push
jle
add
rorb
xor
jnp
cmpsl
or
lahf
jl
xchg
stc
hlt
or
negb
in
loop
and
xor
lods
mov
icebp
scas
lcall
jmp
jns
aas
mov
jp
pop
and
sbb
mov
cs
xchg
inc
inc
add
cmp
daa
out
rol
les
pop
pusha
adc
out
xchg
dec
sbb
decb
sub
add
shll
adc
leave
sahf
out
mov
sets
jg
flds
js
lock
or
les
xchg
ret
cmp
cmp
test
pushf
aas
push
fcoms
stos
leave
std
in
out
push
mov
filds
and
icebp
popa
ja
lret
jns
xchg
and
sub
shrb
cmp
in
add
and
xchg
test
and
jnp
lret
shl
jns
xchg
shll
mov
test
scas
cld
test
cmp
add
ljmp
jnp
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
jmp
dec
inc
aad
push
pop
movsl
sbb
les
mov
xlat
push
push
jo
mov
adc
lods
lea
rol
and
cltd
mov
push
loopne
pop
jb
mov
xchg
or
mov
and
or
testb
xchg
cmp
stos
xchg
movsb
cwtl
sarb
sbb
add
nop
fwait
and
imul
movsb
sbb
mov
push
lcall
push
and
lds
wrmsr
cmpsb
inc
mov
lock
insb
hlt
aam
xchg
lahf
mov
movsb
xor
xor
cmp
enter
outsb
and
jge
mulb
in
bound
adc
mov
sub
pop
arpl
in
cli
mov
outsb
jg
insb
clc
pushf
fs
in
xchg
pop
adc
and
xor
xor
lds
dec
sbb
push
pop
mov
jecxz
sbb
sbb
iret
mov
iret
push
pop
int3
dec
andb
adc
enter
inc
xchg
cmc
cld
iret
sub
int
pop
jne
out
in
fs
stos
pop
jo
arpl
xlat
ret
add
mov
xor
mov
jae
jecxz
push
and
lock
fsincos
cmp
push
sub
inc
adc
push
movzbl
mov
xlat
jmp
jno
mov
daa
outsb
add
pop
test
das
ret
ficoml
or
stc
shll
push
repz
fwait
push
mov
pop
push
mov
sbb
adc
cs
jne
push
cmp
sub
push
jno
ljmp
icebp
scas
jmp
sub
cmpsb
jae
ficoms
stos
mov
mov
dec
pop
xor
push
xchg
cmc
dec
jb
test
mov
push
sti
jae
mov
jno
dec
adc
adc
push
les
mov
dec
mov
or
pop
inc
sbb
sbb
jge
divb
jae
lret
fistpll
sbb
jmp
sti
adc
into
pop
lahf
xchg
push
mov
mov
shrb
sub
imul
lahf
insl
lret
push
lods
outsb
cltd
repz
cld
mov
lahf
pop
push
jg
aas
mov
negl
adc
filds
cld
inc
xchg
ja
or
lods
xchg
dec
ficoms
shll
cwtl
jl
shlb
sub
imulb
movsb
push
cmp
xor
aaa
adc
jg
lods
sub
cmp
jo
sbb
dec
mov
cmc
cltd
in
inc
cmpb
sbb
sbb
push
sbbl
leave
push
insl
fucomip
rcrb
ret
xchg
sbb
cmpsl
pop
cmp
xchg
jbe
pop
push
in
cmp
and
fnstsw
push
test
out
insl
push
fisttpl
test
iret
push
jnp
js
dec
push
mov
stos
xchg
jge
sbb
ss
sbb
insl
push
outsl
sub
imul
es
out
push
mov
adcl
mov
vpmacssdql
cmp
inc
xchg
aaa
add
and
sub
rorb
adc
lods
mov
int3
ljmp
or
lea
movsb
sbb
cmp
mov
subl
inc
jae
insb
insl
or
dec
out
movsb
dec
arpl
xor
sbb
lods
jnp
leave
stc
shlb
lret
lods
xchg
ret
jge
cmp
inc
sbb
mov
jnp
repnz
lret
in
mov
add
bound
or
push
inc
adc
add
lods
sub
mov
sti
aaa
or
xor
nop
push
xchg
jp
cmc
mov
scas
sub
lods
xchg
aam
aad
pusha
dec
fwait
fwait
arpl
aaa
mov
loope
decb
imul
dec
and
inc
shrl
adc
xchg
in
rcll
repnz
mov
orl
aad
mov
scas
mov
dec
das
dec
pop
mov
dec
mov
loope
fidivrl
mov
sub
jp
push
sub
rclb
lods
outsb
push
lret
stos
aad
mov
mov
mov
movsl
aas
mov
stos
dec
sub
loope
inc
inc
leave
or
in
pop
add
psubd
es
scas
jns
sbb
push
cmpsb
pop
lods
std
cli
loopne
or
xchg
je
push
and
xchg
and
fcomip
inc
jecxz
mov
xchg
dec
cmpsl
mov
mov
pop
jg
mov
ss
push
das
cmp
cmpsb
popf
test
fs
dec
gs
dec
mov
push
add
ret
inc
mov
lods
cmp
pop
sbb
add
ficoms
and
mov
into
scas
mov
fnstsw
pop
cwtl
cmp
imull
popa
dec
adcb
fidivrs
ret
jne
mov
or
fs
cwtl
xor
leave
inc
dec
into
jnp
roll
cmpsb
imul
mov
bound
enter
sub
int3
push
add
aad
mov
out
add
dec
dec
lcall
add
mov
rcl
add
mov
cmpsl
jne
or
imul
jl
out
or
pop
mov
inc
movsl
pop
in
dec
adc
xor
insl
jb
stos
ss
scas
mov
push
clc
sbbl
mov
inc
xchg
cmpsl
xchg
ds
into
jmp
int3
outsb
lods
jbe
cmc
cmp
sub
add
dec
ds
ret
pop
push
jne
sub
jmp
add
xchg
mov
adc
subl
xor
push
mov
xchg
sbb
push
dec
adc
fwait
add
scas
pop
adcl
sbb
sub
js
rorl
mov
mov
pop
mov
mov
addr16
sbbb
xor
std
in
into
mov
ret
add
adc
fcoms
add
and
fwait
sbb
int3
loope
sbb
das
lret
loopne
sarb
xchg
and
loopne
fcompl
data16
test
and
add
loope
xchg
add
scas
xchg
das
stos
loop
mov
push
andl
lock
adc
fsubrp
mov
mov
loopne
mov
sbb
jecxz
cmpsb
dec
xchg
flds
dec
cmc
insl
jno
jbe
sub
push
insl
mov
sub
and
int3
popf
dec
xchg
fs
mov
ret
or
fldcw
inc
test
xchg
std
dec
lcall
or
pushf
inc
xchg
dec
mov
ret
and
or
popa
xchg
inc
sub
mov
xchg
cmp
scas
xchg
sbbb
jecxz
dec
mov
rolb
xor
jne
int3
jno
insl
xchg
addl
mov
or
mov
push
dec
push
jnp
pop
adc
cmpsl
daa
pusha
sbb
pop
movsl
jecxz
adc
in
inc
xchg
mov
adc
jns
pop
shlb
xchg
shrl
rcll
sbb
sarl
loopne
or
and
out
sbb
dec
lcall
push
les
in
mov
adc
test
add
sbb
xchg
sub
into
mov
add
xor
cwtl
adc
fmul
sbb
cmp
pop
mov
adc
jno
mov
mov
aaa
lock
xchg
sub
sahf
push
pop
or
je
int3
push
jmp
clc
adcb
jno
in
add
roll
scas
in
adc
adc
insb
push
adc
arpl
and
and
pop
sbb
repnz
pop
sbb
xchg
outsb
movsl
leave
je
cmp
sub
mov
jnp
addr16
or
outsb
cmp
out
rorl
and
rcrl
cwtl
jo
cs
xor
sub
sbb
xlat
jle
aaa
pop
mov
in
icebp
pop
jmp
mov
jae
out
mov
inc
outsl
in
hlt
roll
cmp
out
daa
adc
and
mov
iret
jp
out
jne
es
mov
mov
and
fwait
push
sbb
mov
sbb
mov
push
gs
leave
xchg
into
lods
sub
mov
int3
add
sbb
add
cmp
pop
iret
add
fbld
ds
pop
sar
pushf
fadds
fcompl
cmpsb
ret
or
imul
xor
fwait
inc
sbb
or
or
inc
int
xor
and
rcrb
aaa
xlat
add
dec
stc
mov
daa
cmpsb
pop
jno
in
adc
std
mov
mov
adc
fucomp
mov
and
or
mov
in
sbb
or
stos
or
or
insl
cmp
out
cmp
adc
cmc
outsl
and
sbb
mov
fwait
dec
pop
cmp
sarb
popf
scas
repnz
repnz
lea
sarl
xchg
mov
xchg
leave
icebp
mov
push
fsubs
leave
pop
iret
shrb
sbb
push
jmp
dec
daa
xor
add
dec
xor
notb
loope
mov
xchg
mov
xor
clc
in
pushf
sbb
xor
push
gs
fisttps
xor
dec
sbb
mov
imul
push
push
dec
cmp
mov
mov
sahf
mov
xor
jns,pn
cmp
sahf
into
hlt
in
out
popf
shlb
insb
lds
mov
inc
dec
scas
repnz
das
aas
xchg
insl
pushf
push
push
mov
adc
ffreep
lock
shlb
or
icebp
scas
dec
icebp
lcall
jmp
and
jae
nop
addr16
xchg
adc
sub
clc
sbb
lea
movsb
lock
or
lea
mov
push
pop
dec
cmpsl
pop
push
xchg
insb
jb
test
inc
ja
inc
js
xchg
push
ret
mov
cli
dec
es
or
add
xor
outsb
xchg
idiv
cmpsb
sbb
loope
mov
pop
int3
fwait
or
xor
pop
shlb
and
dec
lds
shl
jnp
xchg
jecxz
xor
cld
fisubs
or
xor
out
int3
stos
stc
lret
sahf
and
enter
pop
movsb
mov
repz
cmp
xlat
mov
or
mov
loope
inc
mov
repnz
mov
push
push
jmp
mov
xlat
add
stos
push
lods
fdivrp
sub
test
dec
cli
sti
rclb
mov
xchg
lahf
out
adc
ss
lock
push
negl
pop
rolb
lret
pop
movsb
sub
insb
out
dec
adcl
push
pop
into
push
mov
pop
popf
enter
sti
jecxz
mov
or
adc
xchg
adc
stc
adc
dec
jmp
xor
mov
in
jg
iret
jno
inc
pop
aas
inc
insl
out
inc
mov
xchg
andb
cmp
sahf
outsb
adc
dec
ret
hlt
dec
sahf
and
in
rcrl
lcall
add
insl
and
sti
xchg
ss
movsb
fs
dec
and
or
xor
call
loope
into
je
test
sbb
fsubrp
dec
ret
lea
sarl
mov
mov
insl
pop
mov
dec
pop
fdiv
icebp
xor
dec
dec
and
sbb
push
inc
jl
mov
icebp
shlb
testl
cli
int3
gs
scas
leave
sub
stc
adc
jae
outsw
push
mov
mov
pushf
pusha
cwtl
sti
test
cmp
pop
xchg
adc
gs
ds
mov
mov
pop
mov
cmp
mov
dec
loop
mov
adc
and
sub
rolb
test
xor
dec
rcll
rol
push
shrb
mov
sti
jge
ret
fbstp
loop
add
fwait
test
in
cmpsb
pop
add
repnz
xchg
xchg
adc
test
outsb
push
cmpsb
addl
lea
popa
mov
dec
out
push
in
jg
jp
int
jl
add
or
fnsetpm(287
and
lock
loopne
iret
mov
pop
xchg
xor
jle
in
pop
cmp
jns
mov
dec
xchg
lret
inc
gs
and
insb
and
fisubrl
jle
shlb
cmp
mov
clc
and
cwtl
aad
ljmp
sbb
lret
push
test
into
cli
jb
enter
mov
mov
cmp
mov
and
enter
add
ret
int
ret
jbe
das
or
out
jns
push
call
cmpsl
mov
xor
mov
dec
sub
cli
push
inc
jne
out
push
pusha
dec
fs
jo
push
or
test
into
sub
push
pop
nop
std
cmp
xchg
and
cmp
stc
inc
mov
inc
das
repnz
sub
xchg
daa
mov
rorb
sub
dec
adc
add
cwtl
fnstcw
jne
fidivs
xchg
aas
repz
imul
dec
addb
mov
loopne
inc
repz
cmp
ds
mov
jp
pop
mov
xchg
rolb
push
popl
not
cli
ret
cmp
and
push
daa
xor
xor
clc
add
cltd
jge
mov
mov
arpl
movsb
into
clc
outsl
ljmp
daa
pandn
push
icebp
mov
sarb
lea
pop
icebp
push
jg
out
imul
push
cmp
pop
shlb
mov
lock
daa
mov
sbb
push
mov
call
rorb
stc
pop
push
lock
sarb
lcall
ljmp
sahf
fnsave
je
aam
frstor
push
fs
mov
out
cs
scas
adc
inc
popa
push
or
xorb
pusha
mov
into
das
jbe
xor
mov
mov
mov
and
push
sbb
pop
sub
mov
hlt
data16
and
out
xchg
prefetchnta
jp
mov
xlat
pop
pop
adc
outsl
pop
push
cld
push
inc
push
cwtl
int
inc
sbb
inc
mov
xlat
mov
adc
xlat
cmc
aam
leave
loope
xchg
scas
jg
mov
pop
and
loop
sub
cmp
mov
dec
mov
dec
lock
out
iret
xchg
mov
sti
add
push
fistpll
aam
clc
jne
dec
mov
lods
mov
incl
sbb
dec
lret
pop
or
dec
fldcw
adc
mov
aas
sub
sbb
jecxz
adc
sub
pop
mov
mov
lea
int
enter
mov
loope
mov
cld
adc
xchg
int
sub
or
adc
mov
xor
adc
leave
ljmp
pusha
loopne
inc
jl
daa
push
ret
dec
cmp
aam
daa
pop
icebp
mov
out
test
add
sub
cmp
adc
faddl
mov
jge
dec
rorl
fisubrs
xchg
popf
pop
fldenv
or
dec
fs
add
rol
push
lock
sbb
and
std
mov
add
ja
mov
lea
xor
cli
sbb
push
push
mov
mov
lea
mov
es
and
scas
in
ja
leave
xor
movsb
dec
cmc
sub
fwait
ss
add
movsb
pop
xor
xor
mov
mov
out
mov
cmpl
test
pop
cmp
pop
add
mov
out
std
cli
sub
adc
clc
std
push
pop
cmp
int
notb
sti
sbb
icebp
sbb
mov
push
xor
or
mov
hlt
fstl
or
push
pop
in
lock
jge
xor
or
mov
and
data16
pop
push
add
inc
adc
mov
pop
sbb
faddl
lea
jmp
in
sub
mov
mov
ret
jg
or
add
out
pop
out
inc
add
frstor
jl
sahf
sarl
pop
ja
sub
ljmp
nop
lods
sbb
jo
les
dec
stc
mov
sub
fxch
repnz
adc
xor
and
sbb
mov
xchg
out
dec
fstp
in
mov
dec
in
jne
push
pushf
adc
mov
addb
pop
dec
or
ficompl
lcall
and
insb
xor
popaw
loopne
ss
push
mov
sbb
fldcw
or
cwtl
scas
inc
movsl
das
inc
ss
add
xor
push
pop
popa
xchg
cmp
inc
sarl
cmp
push
inc
repnz
sbb
cmc
adc
jb
xchg
adc
push
dec
lret
adcb
pop
movl
js
pop
jmp
cltd
das
loope
in
sub
ret
and
jp
sub
imul
sbb
fwait
hlt
ret
jmp
pop
dec
test
test
or
mov
mov
clc
shll
pop
shrl
jle
sub
or
or
sbb
arpl
or
int3
arpl
or
mov
sbb
repnz
xor
ja
dec
sbbl
bound
cmp
mov
cmc
and
push
pop
sub
insb
push
iret
xchg
lahf
movsb
cmpsb
jne
jmp
mov
or
mov
lods
mov
add
shrb
pop
fmull
into
cmpsb
adc
xor
sub
out
push
pop
arpl
or
xchg
or
add
sbb
inc
fsubl
mov
repz
and
push
dec
cs
inc
mov
adc
push
out
inc
and
je
xor
fdiv
cli
int
xchg
in
vmwrite
pop
mov
fcomip
pop
gs
lock
ret
out
mov
int
adc
or
and
fldenv
push
add
sbb
adc
dec
push
bnd
lock
push
aam
pop
jo
dec
bound
sub
mov
out
ds
subb
stos
push
add
sahf
xor
push
mov
xchg
repnz
jecxz
inc
and
int3
loop
sbb
cs
das
jle
adc
xchg
mov
sub
xor
out
ret
sahf
lock
sub
jnp
mov
adc
repnz
pop
sahf
pop
jp
dec
or
pop
xchg
push
push
mov
push
rolb
hlt
dec
insb
cmp
insb
sub
nop
clc
mov
out
and
jnp
fiadds
mov
fisttpl
mov
shl
dec
cs
andb
push
push
insl
iret
push
flds
in
enter
pop
out
ljmp
mov
cmpsl
shr
mov
lock
inc
dec
dec
mov
mov
cmp
lahf
push
popf
ds
jge
mov
aaa
adc
testl
pushf
jbe
loope
pop
mov
jno
daa
mov
ffreep
andb
or
out
xchg
scas
jae
jo
sbb
dec
inc
sub
inc
jmp
fstl
sbb
jbe
cmp
dec
jae
sbb
loope
fimull
rorb
arpl
sbb
sub
test
cmp
xchg
add
out
jmp
and
cmpl
cwtl
into
out
in
lcall
in
xor
js
sbb
xor
adc
add
mov
or
xor
cmpsl
notb
mov
iret
push
mov
lretw
mov
loope
cltd
sbb
add
and
cmp
bound
into
ret
mov
xchg
push
jbe
pushf
jle
in
aam
sahf
int3
push
scas
jmp
lahf
rcrl
inc
movsb
cltd
jl
fwait
mov
std
pushf
icebp
push
push
imul
les
dec
xchg
and
int3
add
jp
jbe
sarb
jmp
pop
inc
sbb
push
push
ja
inc
pop
rcl
popf
inc
sub
stos
pop
pop
aaa
inc
mov
enter
fcomp
scas
mov
pop
mov
or
push
cmp
call
mov
clc
mov
das
jecxz
dec
jno
lea
dec
icebp
inc
mov
and
daa
push
sbb
ret
add
pop
cmp
sub
scas
stc
xor
ja
cwtl
lret
dec
lahf
enter
xor
inc
inc
mov
xor
mov
lods
jge
movsl
scas
bound
fisubrl
sub
mov
mov
adc
outsl
repnz
dec
xchg
jae
inc
pop
lahf
inc
push
jns
push
sbb
test
pop
xchg
pop
and
or
mov
add
repnz
xchg
push
mov
movl
gs
testl
stos
les
pop
add
jbe
in
mov
and
cmpsb
jle
cmp
out
xor
xor
push
sbb
dec
lea
pop
pop
cmc
sbb
mov
pop
jb
inc
lcall
es
push
daa
and
scas
lret
dec
xor
mov
cmpsl
js
fistpl
test
and
notl
cmpsb
dec
repnz
sbb
dec
roll
jp
rcr
or
inc
mov
movsl
fstl
movsl
jle
in
mov
sarl
jae
pop
in
pop
add
aaa
ss
stos
cmp
out
fstpt
scas
fidivl
sahf
dec
push
mov
cmc
xlat
mov
jo
adc
or
js
movsb
mov
mov
jl
cmc
dec
jg
jne
xor
pop
push
mov
dec
push
shrl
les
rcr
shll
mov
sub
cmp
test
push
inc
pop
sub
pop
fidivl
notl
mov
je
in
mov
pop
xchg
pop
or
std
loop
cmp
clc
adc
aas
and
mov
and
repz
pop
mov
pop
stos
xchg
icebp
jge
sti
pop
jae
insb
xor
fldz
call
push
shl
adc
cmp
dec
rcrl
test
mov
loopne
inc
lods
jg
insl
fwait
xor
mov
scas
jae
mov
subl
sbb
xchg
sahf
cmp
ret
loopne
mov
push
es
lock
pop
mov
lcall
stos
xor
inc
out
push
fnstcw
xlat
shl
mov
add
jp
mov
shlb
aad
insl
jecxz
xchg
cmp
jp
cmc
insl
adc
cmp
jmp
cld
dec
aas
lds
pushf
dec
in
cmp
movsl
std
xor
push
mov
pop
xor
push
lret
ljmp
shl
dec
push
inc
jnp
jne
nop
adcl
jmp
push
outsl
or
addr16
sbb
sar
mov
push
pop
jbe
inc
int3
push
aaa
cs
daa
adc
pop
jg
sahf
sbb
xchg
ss
cld
mov
pushf
pop
or
repnz
hlt
fbld
fldcw
and
xchg
frstor
add
imul
xchg
or
out
scas
sahf
dec
in
xchg
aad
push
sbb
scas
inc
out
bound
sbb
cmovg
mov
addr16
test
mov
test
xchg
cmp
mov
sub
mov
add
test
icebp
fidivrl
jnp
pop
xor
pop
dec
xchg
mov
mov
idivl
inc
fldenv
scas
jns
fstp
cmc
push
sub
sub
inc
xor
mov
fisubs
movsl
cmpsl
cmpsl
pushf
mov
xchg
mov
push
cmpsl
sarl
popf
shll
mov
loopne
ret
push
lcall
pop
add
stos
dec
jge
jnp
add
or
negb
pop
mov
add
pop
inc
jmp
js
mov
adc
add
sarl
rorb
push
icebp
jno
inc
out
roll
xchg
fcomi
shl
shl
arpl
inc
mov
lds
jmp
xor
or
lret
nop
mov
aam
sub
sub
push
mov
ss
and
test
xlat
arpl
cli
push
ret
in
out
inc
out
in
and
stos
scas
mov
add
pop
negb
lahf
pop
push
sbb
sub
hlt
jns
cmp
lahf
xchg
outsb
stc
sub
push
test
push
jbe
addb
pop
cmp
xchg
mov
mov
fisubrs
dec
iret
into
out
clc
jp
mov
add
cs
sub
adc
dec
fs
in
xor
fnstenv
cmp
mov
dec
stos
jne
jbe
pusha
add
loope
jae
jns
jg
mov
pop
jne,pt
xor
outsb
pop
pop
pop
cld
leave
xchg
pop
push
dec
punpckldq
mov
mov
neg
jle
sbb
shll
test
pand
jnp
hlt
jns
jmp
and
or
push
imul
or
jb
mov
out
adc
push
pusha
mov
out
nop
out
jg
mov
sbb
and
je
xchg
out
pop
inc
cmp
mov
insb
shrb
and
mov
imul
rclb
int
testb
jbe
int3
out
mov
push
vmread
push
xor
adc
mov
mov
cltd
andb
icebp
cmp
dec
imul
inc
les
xchg
ret
jl
pop
js
dec
int
add
mov
push
iret
loope
mov
mov
ret
xchg
xchg
sub
data16
cmpl
sbbb
movsb
mov
aad
lods
in
and
aaa
dec
pusha
adc
mov
mov
hlt
mov
mov
add
cltd
movsl
jbe
int3
jmp
pop
dec
in
stc
pop
aad
int3
mov
imul
mov
imul
insl
outsl
mov
repz
push
out
add
loopne
push
imul
mov
mov
int
stc
icebp
mov
xor
cwtl
mov
in
pop
andb
mov
ja
das
loopne
jns
xchg
pop
mov
and
in
push
sub
mov
jmp
push
sbb
mov
mov
sub
insl
lahf
fistps
cmp
cltd
inc
mov
push
clc
mov
and
push
jnp
aas
lds
punpckhdq
mov
add
cmpsb
daa
stos
idivl
inc
push
cmp
call
orb
sti
or
movsl
push
lods
mov
test
leave
dec
inc
and
daa
cmp
jl
inc
and
test
inc
xchg
xor
rorb
outsb
lret
inc
pop
pop
out
add
fldt
fwait
cmp
push
or
aaa
mov
lods
push
fists
or
hlt
movsb
xor
xchg
inc
clc
repz
mov
pop
jae
mov
jp
xor
out
mov
mov
cmp
adc
jbe
orl
pop
mov
rorb
push
cs
or
fstpt
add
in
dec
sbb
test
sti
mov
push
inc
fidivs
fnstcw
or
ja
mov
sbb
nop
mov
xchg
cltd
jns
cmp
mov
stos
pop
dec
lock
pop
imul
mov
push
xor
lret
stc
or
mov
and
xor
fisubrs
xor
lahf
mov
stc
in
fistpl
xor
repz
cmp
pop
cmp
jmp
lods
dec
push
sar
cmp
dec
xchg
ret
pop
xchg
pusha
push
outsl
test
jb
jo
lret
enter
out
lahf
test
mov
lock
lcall
iret
mov
inc
mov
repnz
push
dec
movsb
inc
divl
insb
stc
push
nop
xchg
out
dec
movsl
mov
sub
push
push
mov
lret
mov
mov
imul
into
jb
xorl
shl
imul
push
dec
mov
inc
push
jno
xor
xchg
push
cld
adc
fcompl
dec
push
inc
push
dec
jo
cmp
out
ds
pop
sbb
mov
mov
xchg
xlat
push
ds
jecxz
jge
adc
js
js
sub
stos
inc
ds
sub
dec
ret
arpl
je
or
out
adc
sbb
lahf
aas
jp
xchg
imul
fs
xor
pop
or
jle
xor
out
test
in
and
and
cwtl
mov
cmp
dec
adc
inc
pop
cmpl
mov
idivl
add
idivl
or
add
inc
push
cmpsb
mov
pushf
cmp
inc
call
mov
jecxz
lahf
ret
subb
dec
mov
fsts
test
adc
mov
push
jp
out
pusha
dec
xchg
loopne
lock
enter
xor
rorl
movsb
ret
rorl
test
loopne
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
shl
mov
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
jmp
cli
shll
mov
xchg
mov
jmp
mov
or
sub
push
push
mov
fnsave
lea
test
inc
mov
sbb
mov
js
mov
jb
and
daa
stc
sbb
cmpl
jo
nop
inc
jne
add
sub
mov
xchg
shll
cmp
jg
or
dec
mov
dec
adc
adcl
pop
lock
jge
in
inc
arpl
shlb
jb
fcompl
int3
add
insb
call
sbb
outsb
pushf
std
dec
enter
out
push
dec
cmc
push
bound
faddl
roll
cltd
sub
ret
ret
out
les
mov
sub
or
or
mov
ret
cmp
jge
pop
test
decl
mov
shrl
pushf
arpl
sbb
or
popa
mov
out
xor
cmpsb
xor
pop
arpl
sbb
mov
jo
sub
lahf
insb
bound
leave
sahf
lods
and
cltd
mov
iret
pop
loope
nop
add
cmp
mov
adc
mov
and
lret
inc
pop
xorl
mov
push
stc
inc
lahf
or
adc
xchg
ds
in
js
sbb
dec
jo
lcall
adc
or
push
and
mov
cmp
pop
xor
sbb
xor
xchg
cmp
cltd
mov
adc
add
add
and
pop
in
inc
inc
movsb
int3
cmp
jge
adc
xchg
scas
mov
sti
xchg
pop
mov
sbb
sub
pop
xor
movsb
out
inc
xchg
xchg
and
push
or
xlat
aaa
pop
cld
fdivl
cmc
sti
mov
popf
sti
mov
repz
mov
lea
aaa
jle
add
lahf
push
ja
jl
xchg
cmp
push
sub
xchg
aam
push
fcoml
xchg
mov
pop
pushf
loope
ret
add
mov
ror
dec
and
inc
lods
push
jns
and
loopne
lock
dec
sti
dec
fsubp
loope
add
sbb
aas
popa
std
xchg
scas
xchg
adc
pop
adc
mov
jbe
sar
stos
outsl
jo
scas
jle
popf
outsl
stos
mov
sub
movsl
push
add
mov
mov
inc
mov
loopne
dec
dec
gs
mov
inc
xor
push
add
dec
in
xor
push
jecxz
sbb
in
add
xchg
sti
test
dec
xlat
sub
jge
sbb
add
cmpsb
hlt
cli
cmp
push
outsb
enter
mov
adc
movsl
sub
xor
popf
rorl
add
push
call
and
pop
mov
sahf
testb
repnz
aad
aam
inc
jmp
out
stc
popa
mov
mov
jmp
jnp
arpl
lds
pop
or
dec
iret
mov
andb
xchg
xchg
xorb
icebp
or
cmp
andl
adc
xor
mov
xchg
stos
repz
xchg
jge
and
shlb
in
pop
and
xchg
mov
loope
addr16
dec
in
leave
subl
xchg
push
pushf
dec
and
jp
rorb
dec
hlt
inc
cmpsl
cmp
roll
arpl
add
add
imul
ret
cmpsb
and
das
cmp
sbb
aam
jns
rcl
xor
mul
xor
repnz
outsb
fidivl
xor
mov
dec
jge
cmp
mov
ds
jbe
and
jge
push
repz
push
mov
js
fs
cld
jecxz
leave
addl
sbb
cli
int3
adc
cmc
mov
and
cltd
sub
push
dec
shlb
bound
mov
js
add
mov
test
iret
xchg
jno
push
inc
clc
ds
or
push
or
inc
test
xchg
mov
jns
leave
enter
mov
mov
or
divb
aam
sahf
mov
xchg
out
add
clc
mov
hlt
popa
pop
sub
cmpsl
in
repz
mov
gs
shlb
pusha
cmp
push
test
and
fstpl
jmp
mov
adc
fcomi
mov
out
aad
je
jmp
cmpsl
bound
cs
mov
jne
shll
inc
mov
nop
ficoms
repnz
xor
loopne
mov
push
mov
xchg
jne
sub
pop
pop
jecxz
scas
push
push
pusha
repz
scas
pusha
outsb
test
out
popf
ret
cmpl
test
or
aam
mov
jae
jnp
popf
lcall
fsubrs
mov
lods
pop
pop
add
pusha
jle
test
mov
not
adc
xor
gs
adc
jle
add
sub
mov
inc
icebp
dec
xor
mov
mov
jnp
fimuls
pushf
fdivp
xchg
mov
mov
xor
mov
std
sub
movsb
mov
jae
inc
and
sbb
data16
pop
pop
jmp
sbb
fs
ror
outsb
loopne
fists
leave
cli
jmp
dec
fcoms
sbb
ret
fldcw
ljmp
dec
outsl
shl
mov
lods
and
bound
sbb
jl
add
xlat
mov
fs
xchg
in
insl
popa
lret
jmp
shll
push
and
xor
jb
mov
sub
cwtl
incl
daa
data16
jg
inc
lea
frstor
add
jp
nop
addr16
es
jl
cld
lock
add
pop
xor
adc
sub
jge
mov
sbb
loope
add
xor
out
test
pop
int
mov
out
subb
fsubrs
lds
movsb
adc
adc
mov
adc
inc
dec
fisttps
push
loop
add
add
ret
sbb
jl
or
jno
xchg
les
movsb
adcl
jne
and
daa
popf
clc
pop
call
insl
aaa
push
or
call
mov
rolb
mov
in
idiv
jne
inc
inc
and
movsl
sbb
xchg
int
lock
call
pop
dec
xlat
pop
pop
sub
rclb
rorl
out
sbb
mov
sbb
xchg
jne
and
jp
shll
or
daa
or
xchg
fidivrl
dec
mov
push
aas
popf
pop
mov
aas
das
mov
vpcmpeqd
jecxz
add
add
jae
nop
rclb
cli
jnp
mov
scas
popa
jge
mov
sub
inc
jmp
push
push
jl
xchg
sub
pop
add
mov
out
inc
inc
repnz
xchg
sub
cs
daa
imul
xor
les
jne
mov
pop
jge
adc
xchg
repz
sub
mov
and
inc
mov
pop
adc
inc
adc
pop
dec
and
mov
in
push
xor
xor
sub
xchg
push
sbb
int3
add
push
adc
and
inc
jo
pusha
ror
xchg
jb
gs
out
fmuls
daa
inc
and
in
pushl
fsubl
or
push
out
mov
push
mov
jmp
push
scas
lret
push
pop
jno
stos
and
stc
inc
jle
popf
subb
jno
cltd
aaa
xor
push
fwait
and
cmp
xor
pop
lret
mov
cwtl
push
sbb
jmp
or
sub
mov
fcoml
dec
mov
cld
sub
mov
push
shl
xor
in
dec
test
ljmp
add
or
movb
leave
sub
shll
cmp
repnz
mov
mov
dec
adc
sbb
xchg
je
lea
test
or
gs
sbb
out
roll
fwait
or
lret
pop
mov
mov
pop
sub
stos
mov
sbb
add
int
add
push
aad
fdiv
xor
lcall
mov
fisubl
lret
pop
jg
sub
mov
and
mov
mov
push
shl
test
xor
pusha
pop
mov
jmp
loop
int
rcrb
clc
xor
cmp
sub
xchg
push
scas
push
fldcw
sbb
cli
stc
mov
in
xchg
ret
cltd
sub
or
or
mov
insb
aaa
icebp
pop
jecxz
addr16
ljmp
lcall
fsub
cmc
mov
sub
lds
mov
mov
cmp
fcmovbe
testl
inc
sbb
xor
mov
xchg
cmpsb
adc
mov
fwait
in
add
and
mov
jo
rcrb
and
pop
adc
add
xor
ljmp
inc
and
into
imul
aas
cltd
jo
push
insl
lret
mov
jnp
and
push
sub
incl
lods
je
imul
dec
adc
dec
jne
es
mov
adc
mov
inc
sub
xchg
lret
lods
push
loope
pop
dec
mov
jl
lods
lcall
test
mov
das
call
out
outsb
jno
repz
inc
and
inc
loopne
jmp
jmp
sbb
jmp
and
mov
jp
dec
adcl
mov
lods
jmp
call
lods
add
fldcw
lods
push
add
fists
dec
pop
sub
nop
mov
mov
xor
adc
mov
fidivrl
xchg
into
and
or
mov
mov
outsl
xchg
push
into
stos
cltd
mov
pop
mov
aam
in
lods
inc
arpl
pop
dec
dec
pop
mov
ss
pushf
daa
repz
sub
mov
imul
xchg
mov
ret
jns
mov
or
imul
cld
movsl
and
je
mov
fs
cli
push
scas
outsb
dec
adc
mov
out
mov
mov
inc
inc
dec
mov
gs
movsl
dec
xchg
push
pop
jmp
or
out
add
data16
cmp
mov
mov
xor
cli
ret
adc
mov
mov
inc
dec
jae
inc
roll
lret
xchg
enter
sarb
out
arpl
idiv
cwtl
gs
adc
sbb
loopne
sub
ljmp
pop
fcom
xor
jne
pop
mov
adc
mov
push
bound
cmp
xchg
pop
push
push
scas
and
push
or
add
pop
daa
inc
adc
or
push
enter
or
jae
sbb
iret
mov
xor
mov
push
lret
loopne
or
dec
or
clc
ss
gs
or
mov
imul
or
xchg
xchg
loopne
pop
sbb
in
in
lds
lret
fsub
xchg
test
mov
ficoml
mov
or
movsb
outsb
mov
jl
jb
mov
jecxz
cmp
cmpsl
xor
movsl
hlt
sahf
sbb
mov
out
sub
push
adc
arpl
mov
mov
sbb
in
pop
mov
andl
jne
js
lods
add
dec
mull
mov
gs
or
or
xor
adc
xchg
xorb
sub
inc
jbe
fisubl
pop
and
inc
loope
int
sti
shl
enter
test
in
test
and
jnp
pop
push
add
sbb
jmp
xchg
aam
test
scas
fstp
jle
std
rcrb
push
xor
adc
cmpsl
cld
sahf
scas
in
rclb
loope
sub
incl
pop
testl
idivl
popa
icebp
or
and
push
push
sahf
popa
mov
popf
jne
dec
das
lret
enter
add
sbb
add
pop
cmp
mov
mov
ret
adc
pop
pop
cmpsl
ret
setne
xchg
ds
dec
fldenv
mov
call
inc
dec
dec
mov
or
sub
mov
fstpl
test
mov
mov
xchg
jmp
mov
adc
inc
dec
xchg
gs
jns
inc
pop
inc
inc
mov
sub
sub
jp
mov
add
cli
outsb
repz
int
pop
enter
cmpsl
xorl
mov
les
push
inc
or
cmpsb
jns
inc
dec
push
mov
mov
push
mov
lret
mov
inc
or
mov
jg
cmp
ja
ja
jo
bound
jp
adc
inc
fistps
clc
test
lahf
cmp
fwait
lods
mov
adcb
lcall
dec
cmp
dec
cmp
mov
jecxz
outsl
in
pusha
divl
insb
mov
imull
push
mov
xlat
into
xor
inc
push
pushf
cmp
mov
aaa
cwtl
cli
adc
push
adc
jb
or
adc
scas
jmp
xor
les
outsl
push
ret
pop
test
std
in
sbb
sub
mov
sbb
lcall
idivl
fs
push
call
test
ret
xchg
or
enter
outsb
cmp
popa
adc
cltd
xor
aas
pop
and
inc
into
cmp
jmp
loopne
int3
rol
dec
enter
inc
cltd
mov
ficompl
arpl
cmpsb
pop
loope
mov
dec
mov
jno
cltd
pop
mov
and
clc
xor
arpl
lcall
lcall
jmp
jl
mov
loop
pop
in
cltd
mov
xchg
cld
out
nop
and
pop
scas
faddp
enter
push
push
pop
inc
int
int
rolb
and
test
xchg
aad
jbe
dec
loope
das
movsb
or
lret
arpl
cmp
jno
sub
das
daa
les
stos
sbb
les
fwait
mov
iret
es
jge
leave
and
imul
enter
pusha
das
push
loope
xor
movsl
fxch
imul
sub
out
fistpll
add
push
mov
or
jnp
idiv
jae
jle
xchg
mov
shrb
fstpt
dec
lods
shrb
fidivl
imul
out
and
lahf
xchg
push
rorl
mov
insl
scas
shlb
cli
adc
in
jns
cmp
into
rcll
insb
cld
dec
popa
fcoms
push
addr16
cmp
hlt
cmp
fistl
ss
subl
stc
incl
lcall
pcmpgtb
sub
adc
pop
int
pop
in
inc
sbb
mov
xchg
jns
push
cld
cmc
add
lds
mov
sahf
jae
xchg
ja
daa
mov
ficompl
lahf
push
fisubl
test
or
push
xchg
addl
push
stos
mov
sub
and
cmp
xchg
dec
push
and
cli
lods
addl
movsl
into
bound
jl
ja
lahf
or
jb
cmp
jge
xor
fs
int
inc
sub
popf
icebp
out
scas
push
mov
cltd
mov
inc
push
mov
nop
es
mov
push
mov
out
mov
jle
fldl
jl
repz
insb
adc
pop
jl
aaa
push
loopne
or
pushf
add
insb
sbb
scas
out
mov
insl
mov
je
jns
mov
orb
jp
jmp
imul
push
xchg
imul
sbb
and
loope
insb
pop
dec
imul
xor
sub
jnp
push
xchg
repz
fwait
dec
lea
adc
gs
inc
sahf
das
push
inc
sarl
adc
jle
and
pushl
or
leave
and
aad
and
stos
add
mov
xor
sbb
test
decb
adc
mov
add
pop
in
mov
mov
js
lahf
rcrl
lret
test
sahf
fs
mov
mov
aam
mov
clc
and
pop
das
mov
push
inc
aam
insb
dec
pop
insl
or
cmp
mov
mov
jne
imul
in
repz
dec
push
adc
scas
aaa
into
inc
js
lods
and
push
xchg
sbb
cmp
insb
mull
nop
xor
xchg
mov
pusha
cmp
imul
cli
inc
sbb
out
cwtl
int3
push
inc
mov
mov
dec
das
add
jp
int3
add
enter
sub
or
inc
out
fsubl
pushl
in
mov
cmc
in
imull
cmc
dec
mov
movsb
mov
push
les
and
orb
adc
xchg
jae
and
cmp
sub
in
dec
mov
hlt
in
movsl
adc
cli
repz
xchg
dec
cltd
repz
xor
push
pop
sarl
sub
jne
sbbl
xchg
jno
das
cmp
or
fwait
pop
scas
dec
test
jecxz
fwait
push
scas
in
mov
insl
sub
inc
sub
gs
in
sub
clc
push
lods
movsl
popa
cmp
mov
cmp
popf
cwtl
lds
fstps
imul
stc
xor
rcrl
cmpsb
or
test
outsl
push
mov
mov
sbb
imul
xchg
loope
push
pop
imul
jmp
test
das
popa
popa
insb
fiaddl
xchg
pop
mov
jne
add
pop
fiaddl
call
call
pop
xor
mov
iret
xlat
inc
push
test
data16
add
popa
sub
and
add
jo
pop
cwtl
ret
jp
in
cmpl
popa
nop
stos
fcom
out
sbb
inc
mov
out
add
push
xchg
jmp
xchg
mov
xchg
dec
push
in
or
movsl
cwtl
jbe
xchg
daa
in
out
and
cmpsb
lret
leave
sub
add
lds
pop
shrl
test
cmp
out
mov
outsb
pop
in
pop
call
inc
daa
fcoms
mov
fimull
push
mov
ljmp
mov
in
cmpsl
or
int3
fcomps
push
rcrl
mov
pop
mov
xchg
in
or
pop
popf
pop
lahf
sub
sbb
xchg
test
dec
lods
inc
aad
fsts
and
imul
and
out
daa
loopne
rcrl
movl
adc
pop
lds
rcll
dec
push
mov
push
xor
movsl
push
or
dec
sbb
sub
jne
lret
les
sbb
clc
in
push
pop
stos
sbb
test
hlt
xchg
ja
aam
addb
jne
adc
add
fimuls
dec
inc
sbb
push
aam
sub
mov
adc
push
inc
cmp
addr16
test
aaa
xchg
test
push
mov
sub
cmp
hlt
adc
sbb
or
push
movsb
aam
jl
ret
sub
test
in
jmp
js
add
pushf
jl
mov
fs
arpl
mov
aas
add
sti
repz
mov
jbe
xor
and
cli
jbe
jns
xchg
in
int
les
sub
push
sbb
mov
mov
pop
cwtl
jnp
aam
shll
cmp
es
loope
in
stos
and
loop
test
push
push
mov
inc
iret
jp
mov
mov
enter
fstps
in
sbb
lret
lods
mov
mov
xchg
jbe
call
sti
adc
jg
and
into
loop
mov
test
cmc
sbb
dec
cs
mov
test
adc
push
cmp
push
fbld
pop
je
mov
imul
bound
lock
dec
lret
scas
mov
push
adc
mov
mov
aad
ret
sub
repz
inc
iret
and
pop
mov
add
mov
adc
dec
ja
sbb
rcrb
outsb
loope
insb
call
fnsave
call
idiv
xor
and
gs
fwait
iret
mov
xor
or
mov
push
push
ror
jbe
test
xchg
pinsrw
aaa
jne
adc
std
or
or
cld
sbb
xchg
mov
sti
or
in
pop
cwtl
jle
pop
movsb
jns
or
ret
mov
stos
inc
mov
mul
xor
mov
pop
sub
cwtl
insb
in
out
xchg
nop
add
dec
adc
fstpl
stos
into
sub
das
shlw
ret
lods
pop
jmp
insb
test
dec
pop
fimuls
jbe
xchg
lods
enter
sbb
mov
test
jne
mov
xchg
inc
or
in
push
daa
subb
push
pop
xchg
cmp
std
cs
sbb
xor
inc
mov
and
pop
lcall
pop
inc
and
or
insl
mov
pop
les
imul
lds
mov
mov
xchg
xor
sbb
out
adc
mov
and
lret
mov
mov
xchg
dec
test
into
pop
mov
jg
lds
inc
test
cmc
jae
rcrb
mov
cmp
fnstcw
and
jecxz
mov
xchg
outsb
in
cwtl
leave
cmp
xchg
test
cltd
jle
sahf
imul
push
xor
nop
mov
orb
cltd
push
push
aad
dec
push
ret
subl
arpl
call
cli
mov
lret
and
hlt
mov
xchg
popa
mov
dec
mov
push
aad
arpl
mov
js
stc
rolb
cmp
pushf
jge
js
clc
fistps
dec
cs
mov
xchg
xor
mov
inc
arpl
lahf
mov
ljmp
into
push
add
fildll
dec
addr16
je
mov
lahf
cmp
movsb
cld
in
jb
mov
enter
das
out
out
cmp
mov
loopne
xorl
std
dec
mov
lea
jecxz
lahf
or
lcall
add
repnz
int3
ficompl
scas
stc
push
push
mov
sub
test
dec
sub
add
imul
xchg
addr16
aad
and
sbb
and
test
pop
repz
shl
lcall
mov
dec
out
inc
fwait
pop
into
push
push
out
cld
push
shl
jmp
push
jb
mov
mov
loopne
pop
and
inc
push
xchg
sbb
pop
lods
add
cli
cwtl
jnp
cmpsl
pop
pop
add
lcall
cld
jecxz
jnp
movsb
js
mov
fcomps
mov
int3
ja
into
sub
rolb
call
push
dec
inc
pop
xchg
packsswb
add
adc
xchg
fcomp
dec
out
jb
int3
xchg
jo
inc
ljmp
jo
cmp
jmp
scas
xchg
sub
pusha
push
push
push
icebp
xor
jmp
mov
pop
ret
insb
lods
test
pusha
fwait
xchg
jecxz
pop
test
pop
and
stc
movups
lods
div
sub
ret
rcl
scas
std
mov
dec
out
mov
je
xchg
mov
cmp
pop
xchg
pop
pop
insb
cmpsl
enter
daa
jl
bound
mov
aaa
xor
mov
dec
loop
adc
outsb
or
mov
mov
inc
in
lea
jne
push
inc
js
into
push
pusha
into
mov
or
mov
daa
ds
hlt
jo
aaa
push
mov
jp
inc
scas
out
add
leave
in
out
or
sub
je
lret
adc
test
jnp
stos
leave
iret
sub
inc
jp
cld
xchg
popa
bound
xchg
aas
mov
xchg
pop
add
cli
fs
rol
jle
dec
or
jecxz
and
xchg
sahf
xorl
push
push
call
sbb
movsb
jl
inc
outsl
fstpl
xchg
lea
xor
xchg
push
adc
fs
xchg
lcall
xlat
cmp
shl
and
xlat
sti
test
outsb
add
cmp
xor
test
loop
aad
fwait
lea
cli
js
std
xor
or
mov
push
dec
arpl
popa
test
imul
mov
out
call
ret
sub
push
rcrl
out
imul
loop
jle
shll
popa
pop
add
arpl
pop
hlt
jne
dec
mov
int3
sbb
add
cmp
cltd
add
sbb
jmp
push
jmp
orl
push
adc
pop
sub
icebp
es
clc
cmp
cs
mov
aaa
inc
test
lds
hlt
pusha
mov
cmc
repnz
mov
jns
loop,pn
cmp
mov
out
mov
add
xchg
add
xchg
in
dec
pop
test
and
or
pop
movsl
ficomps
and
sbb
mov
sub
cli
jg
pop
push
stos
and
push
imul
cltd
cmp
push
jg
xchg
jle
jl
loopne
clc
xchg
jg
fscale
je
jbe
jp
insb
add
cmp
pop
lret
add
or
lret
negl
enter
pop
jbe
lock
mov
jmp
hlt
shlb
leave
pop
mov
or
or
jns
mov
or
lea
call
out
movsb
fldenv
jmp
adc
insb
data16
jb
sub
push
xorb
in
cld
xlat
jnp
push
jae
mov
and
sti
fidivl
repnz
loop
mov
enter
adc
push
and
int
dec
adc
fisubrs
inc
add
js
in
xor
pop
mov
push
mov
in
dec
int3
incl
ljmp
sub
dec
cmpsb
fcomi
inc
push
in
sahf
flds
jl
dec
js
ret
ret
mov
out
outsl
imul
push
std
sub
add
cmp
xchg
push
nop
xchg
xor
jl
dec
push
idivl
mov
pop
nop
and
and
insl
inc
cmp
sahf
fisttps
fcmove
sbb
push
jg
stos
jno
jg
in
xor
pop
popa
mov
jle
inc
cld
ret
jg
pushf
xor
fwait
ds
push
jno
xchg
adcl
xor
dec
addb
dec
js
sarl
xchg
xchg
pop
lret
xchg
fwait
inc
push
test
imul
ss
cld
cmp
add
mov
fstpt
ja
or
scas
cmp
outsb
mov
xchg
in
adc
lock
imul
out
clc
ljmp
mov
test
inc
js
test
test
mov
cld
leave
add
ljmp
jne
cmc
or
out
rorb
and
mov
push
jbe
insl
jns
aaa
cmp
pop
scas
lret
add
pop
inc
and
adc
inc
or
jns
xchg
test
lods
push
mov
loope
mov
xor
repz
sub
arpl
stos
das
add
sahf
xor
dec
lds
jb
in
sub
push
push
add
jmp
mov
push
xchg
mov
pop
dec
out
push
or
mov
andb
push
cmp
bound
mov
add
call
xor
xor
add
and
daa
cmp
inc
test
sti
rolb
xchg
shll
ljmp
jnp
sbb
jae
fcmovb
mov
outsl
push
sub
iret
lret
fisubrs
std
cmp
jne
jmp
arpl
rcl
mov
sbb
lock
dec
stos
test
shrb
sbb
inc
add
xor
cmc
jne
mov
push
pop
das
sub
xchg
pop
dec
adc
negb
jnp
sub
jnp
in
pop
iret
adc
and
xor
or
mov
mov
push
dec
jne
mov
and
outsl
sub
inc
or
call
inc
mov
outsl
ds
mov
jp
cltd
dec
xor
push
dec
mov
or
dec
cmp
push
push
pop
push
pop
icebp
mov
sub
dec
push
insb
insb
dec
fwait
pushf
sub
gs
or
bound
repnz
push
das
inc
ss
rcll
mov
lret
dec
leave
das
xor
repz
mov
mov
icebp
mov
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
mov
or
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
jae
cmp
jae
shrd
movl
shr
ret
xorl
mov
xor
and
movl
shr
ret
xor
xor
ret
push
mov
sub
movl
cmpl
movzwl
mov
movl
jmp
mov
mov
je
pushl
pushl
pushl
push
push
pushl
call
not
or
and
xor
mov
mov
movl
cmpl
movl
mov
mov
mov
jmp
movl
mov
jg
pushl
call
orl
sbb
sub
sbb
adcl
mov
or
mov
movl
cmpl
mov
mov
mov
jmp
not
jb
pushl
pushl
call
adc
xor
or
xor
add
or
sbb
inc
addl
movl
dec
movl
decl
movl
movl
movzbl
or
movl
cmpl
movl
movl
jmp
mov
movl
jge
push
call
adc
mov
mov
sub
and
sbb
subl
mov
or
mov
mov
sbb
mov
mov
sub
mov
push
mov
movl
sbb
mov
andl
mov
xorl
push
orl
push
xorl
push
subl
push
addl
call
xor
mov
cmpl
mov
mov
mov
movzwl
jmp
movl
movl
jg
push
pushl
push
pushl
pushl
call
or
or
adc
addl
xor
add
adc
sbb
mov
xorl
xor
and
cmpl
mov
movl
jmp
movl
movl
jg
push
push
call
sbb
sbbl
sub
notl
xor
add
sbb
xor
xor
add
and
mov
mov
sub
or
and
or
mov
adcl
and
cmpl
mov
mov
mov
jmp
movl
jl
push
pushl
push
pushl
call
add
sbbl
and
or
mov
sub
sbb
movl
mov
or
movl
movl
movl
movl
mov
addl
mov
mov
mov
add
movl
push
adc
push
subl
and
and
push
andl
push
xorl
call
mov
mov
cmp
movl
ja
jb
cmp
jae
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
or
or
add
adc
xor
xor
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
jmp
loope
cwtl
cwtl
mov
push
mov
inc
or
xchg
int
push
fnstenv
xor
mov
andb
rolb
iret
push
sub
test
movsb
in
das
sub
sub
inc
dec
push
ljmp
insb
shll
insl
xlat
push
adc
aaa
fisubl
mov
inc
test
push
sub
mov
xlat
cmc
fcompl
jmp
and
fidivrs
pop
dec
add
ja
adc
leave
ja
out
jbe
sete
xorl
mov
cld
xchg
shlb
sub
ficomps
xchg
movsl
or
mov
lock
xchg
sahf
jbe
lret
outsl
mov
js
test
jno
mov
sbb
fimuls
leave
incl
dec
dec
pop
lds
mov
cmc
cli
mov
mov
jb
mov
cmpsb
mov
mov
js
sub
sbb
xor
mov
push
mov
push
test
sbb
mov
xor
mov
fwait
add
lcall
inc
pop
or
jne
lock
add
push
pop
jge
mov
push
ds
push
imul
mov
in
gs
push
mov
into
mov
decb
jle
rcll
dec
xchg
dec
pushf
push
repz
lcall
sbb
cltd
mov
insb
xchg
insb
mov
adc
pop
mov
std
xchg
std
das
inc
push
sbb
sub
movsl
pushf
and
dec
dec
push
in
addr16
shrb
xchg
push
fnsave
push
pop
push
or
mov
sbbl
popf
mov
movsb
adcb
fisttpl
out
pushf
fmuls
orps
fldt
test
fstps
cmp
fs
call
stos
sub
add
mov
jp
jne
cmpsl
arpl
mov
into
mov
bound
lock
sbb
lock
insl
lds
mov
cmp
or
dec
or
js
out
lock
pop
loop
jbe
mov
and
cmpsl
mov
inc
inc
mov
push
ja
mov
inc
mov
pusha
insb
stos
aad
mov
ret
pop
pop
xchg
lock
jbe
mov
les
mov
mov
jns
inc
sub
push
mov
dec
shrl
fisubs
loope
aas
adc
adc
mov
fldln2
inc
jp
outsl
jmp
js
mov
pusha
adc
dec
outsl
je
popl
mov
xchg
insl
push
cwtl
cltd
xchg
and
mov
in
sbb
idivl
stos
dec
addr16
push
lea
xor
inc
out
mov
jns
xor
arpl
sbb
lcall
idivb
sar
fmull
lock
mov
pop
int
lods
int
test
lcall
fidivs
sub
xchg
mov
push
sti
inc
fwait
mov
push
loop
add
mov
setl
xchg
xor
sahf
fiaddl
xor
mov
pop
iret
mov
adc
es
data16
jne
aaa
push
mov
xchg
fwait
pop
fcompl
mov
stc
aam
lock
xor
ret
cmpsb
int3
and
adc
push
js
mov
xlat
sbb
icebp
mov
popf
pop
decb
pop
sub
fistpll
movsl
cwtl
dec
xchg
fisubs
ret
xchg
jl
rorb
push
cltd
ret
push
lock
inc
adc
hlt
ret
lds
push
add
decb
inc
add
insb
div
stc
dec
cmp
xchg
add
js
lods
repnz
fcoml
in
sarl
mov
test
loopne
test
mov
test
sbb
enter
cs
cmc
movsl
cmp
mov
xor
fidivs
mov
push
es
mov
shll
adc
adc
bound
and
dec
pop
inc
mov
aad
jl
cs
mov
push
jp
int
popa
loope
gs
outsb
cmp
pop
mov
inc
jns
sub
inc
cmpsb
push
mov
cmpsl
or
loop
ds
cmp
sub
dec
add
loope
inc
or
lds
jns
mov
test
add
imul
xchg
mov
xchg
inc
xor
lret
mov
lret
and
add
rorb
inc
sub
pushf
add
cmc
inc
inc
call
jb
jge
cmp
mov
mov
adc
adc
cmpsb
test
xor
add
pop
push
push
test
repz
inc
and
xchg
fcmovne
bnd
mov
out
nop
mov
mov
xchg
outsb
xchg
cmp
push
mov
jmp
xchg
pop
push
push
je
in
add
repz
push
inc
xchg
inc
call
mov
sub
jl
stos
and
repz
rcrb
dec
inc
lcall
mov
mov
movl
cmp
ljmp
ja
adc
pushf
xchg
lods
outsl
addr16
sbb
lahf
mov
jl
adc
je
cmp
jge
je
stc
jl
test
push
or
out
xor
lcall
jb
leave
aaa
mov
cmpb
mov
stos
cmpsl
push
push
cs
sub
and
aam
fidivrs
popf
or
xlat
mov
mov
test
add
sub
adc
push
jo
xrelease
and
and
jb
xchg
imul
add
jnp
push
dec
outsl
fs
or
push
sub
sbb
std
sbb
lods
jmp
xchg
test
inc
shl
cvtdq2ps
push
popf
mov
xor
sub
and
jae
sbb
sahf
inc
push
sbb
outsl
rclb
repnz
jae
loopne
inc
dec
out
cmp
sub
push
mov
mov
das
xchg
into
add
jmp
icebp
into
test
mov
aas
jg
jne
cmp
sbb
stos
add
mov
movsb
sub
xchg
pop
test
sub
cmp
jecxz
clc
mov
lods
xor
pusha
sbb
stos
jns
xor
cs
popf
dec
leave
mov
or
aaa
cltd
xchg
fsincos
push
pop
pusha
call
adc
loop
loope
subl
cmp
or
das
pop
sbb
pusha
rorb
popf
jb
push
fmull
xchg
jnp
imul
jne
add
jns
nop
js
dec
cmp
or
or
test
mov
or
pop
ret
jecxz
iret
ljmp
imulb
cmp
aas
xchg
jmp
jns
rol
and
xor
cli
push
mov
fwait
and
xor
sbb
cmp
ret
sbb
loopne
and
push
inc
mov
and
sbb
sub
movsl
jg
gs
imul
xchg
sti
mov
mov
or
mulb
mov
jle
lret
div
mov
int
dec
xor
cs
das
pop
xchg
xor
mov
inc
add
dec
fbld
mov
dec
dec
mov
and
bound
in
mov
into
jns
in
xchg
mov
sub
call
popf
xchg
iret
ljmp
ret
fistl
dec
push
adc
cmpsl
push
dec
dec
pop
xchg
imul
cmpsb
stos
jp
pop
int3
sub
lahf
mov
push
addr16
rorl
sub
pop
sub
push
and
cmc
mov
jnp
sbb
xchg
inc
add
lds
outsl
insb
test
or
adc
movsb
je
sbb
repz
into
mov
mov
into
add
dec
sbb
mov
in
push
out
fisubl
test
mov
jg
mov
inc
lock
mov
stc
out
mov
xchg
jecxz
add
and
push
imul
push
sbb
mov
dec
movsb
xlat
mov
xor
mov
inc
mov
push
insb
insb
mov
dec
into
add
movsb
mov
jg
xorb
inc
pop
xor
push
jl
and
add
sub
aas
jnp
dec
repz
pop
test
adc
jo
mov
dec
sub
push
mov
jmp
mov
movsl
in
iret
daa
loop
add
rcrl
and
jle
pop
xor
jge
xchg
repnz
outsl
mov
insb
xchg
andb
pop
mov
stos
notl
and
xchg
dec
nop
mov
push
icebp
mov
std
cmp
std
mov
popa
jae
das
jmp
add
fnsave
jo
sbb
sub
mov
push
sub
mov
and
shl
sbb
and
lcall
cmpsb
inc
fbstp
out
fs
aaa
and
mov
cmp
sub
lods
lcall
cmp
bound
cwtl
push
lods
incl
pop
jge
stos
sub
stc
ficomps
pop
fcomp
roll
je
lock
mov
rcl
nop
insl
xchg
or
mov
incb
mov
les
sub
mov
mov
rorl
mov
out
repnz
shrb
das
fnstsw
jp
dec
in
sub
movsb
mov
push
adc
ret
mov
dec
or
and
jbe
jbe
cmp
sbb
sarb
xorb
push
scas
movsl
cmp
cmp
sarb
jmp
inc
in
in
call
sub
mov
clc
pop
xchg
add
in
mov
lods
inc
push
or
mov
mov
xchg
pop
testb
scas
mov
jb
cwtl
insl
push
cli
jecxz
scas
mov
pop
imul
mov
sahf
dec
movsb
icebp
out
push
inc
mov
test
scas
inc
adc
aam
shrl
lock
mov
and
andb
push
sub
sub
mov
xchg
dec
cltd
mov
mov
add
data16
sub
lahf
adc
sahf
and
insb
xlat
or
mov
cli
pushf
rolb
popa
sub
mov
mov
inc
fstpt
in
mov
or
add
nop
mov
cmp
mov
lods
push
cmpsl
xchg
mov
lods
aaa
mov
sbb
pop
dec
in
jecxz
gs
jae
cs
jae
and
stos
mov
push
sbb
mov
das
xchg
cmp
jne
xor
lret
out
cld
jl
add
lret
or
dec
bound
add
jp
arpl
ljmp
and
cmp
xchg
in
inc
inc
mov
mov
daa
sbb
bswap
xchg
sub
movsb
push
mov
adc
testb
rorl
shr
insb
mov
add
mov
push
mov
flds
fildl
inc
xchg
lods
jp
jecxz
dec
jl
adc
movsl
and
iret
cld
or
imul
dec
in
jb
movb
push
xor
sarl
pusha
xor
and
push
xor
sbb
ljmp
cmp
es
test
mov
and
je
cs
mov
dec
ljmp
xchg
insb
push
aaa
shl
imul
xor
lret
mov
xor
cltd
pop
push
aas
addr16
shll
add
clc
add
pop
mov
gs
movsl
or
test
dec
inc
ja
fists
in
xchg
xchg
fwait
ud1
adc
test
addr16
in
mov
leave
out
dec
addr16
cs
iret
jmp
or
pop
push
cli
adc
scas
mov
or
mull
adc
rolb
mov
ds
add
xchg
adc
lret
loope
leave
jnp
adc
pop
aad
jge
popf
fwait
js
xor
xlat
insl
sub
arpl
xchg
nop
dec
je
dec
inc
jge
xchg
or
enter
mov
adc
mov
xchg
movsb
inc
mov
cmp
sti
mov
lret
dec
xor
mull
ja
ds
xor
es
leave
push
clc
dec
cmpsb
mov
and
pop
and
push
push
add
stos
scas
sub
out
in
xchg
sub
xor
scas
pop
repnz
aas
xor
pusha
fsubrp
mov
and
xchg
mov
xchg
out
mov
xor
rcl
or
jle
stc
dec
std
orl
fdivp
cmp
ja
inc
fmuls
mov
test
arpl
cwtl
das
xor
jno
or
or
flds
cmc
fdiv
sbb
xor
into
rclb
xor
or
or
sti
incb
gs
mov
aas
in
add
fsubr
lret
xor
andb
mov
pop
inc
popa
ljmp
lret
in
cltd
pop
fidivs
inc
jmp
mov
iret
test
out
pcmpeqw
fisttpll
and
xor
sub
push
cmp
jp
imul
ja
mov
mov
pop
cmp
stc
jbe
iret
xor
xchg
push
into
cs
loopne
stc
enter
std
cmp
inc
dec
cmp
sbb
js
xor
clc
sub
mov
push
rcr
dec
mov
push
cmpb
lea
ds
outsl
and
scas
sti
repnz
inc
xorb
mov
xor
out
clc
sbb
movsb
scas
paddd
scas
jb
cs
mov
push
mov
lahf
jae
push
cmpsb
cli
push
cmpb
mov
bound
mov
jns
stc
pop
clc
popa
adc
cwtl
xchg
push
mov
out
icebp
fcoml
in
sub
ret
inc
mov
test
aad
cmp
mov
test
pop
aad
push
cmp
pop
xchg
sarb
out
cmp
clc
decl
inc
fisttpl
pop
mov
popf
mov
push
add
mov
idivb
ljmp
lock
rorl
stc
gs
repnz
bound
repz
gs
mov
xlat
lock
das
sarb
jge
mov
repnz
rclb
cmp
daa
sub
loop
dec
out
ds
popa
push
cmp
inc
pop
mov
dec
push
xlat
xchg
incb
sysexit
sbb
and
push
cmpl
je
mov
iret
dec
cmpsb
iret
inc
sbb
add
xor
mov
mov
scas
pop
icebp
xor
xchg
jle
adc
fldcw
push
mov
pop
cmp
scas
mov
push
outsl
stc
jecxz
mov
shlb
jo
mov
leave
mov
mov
int
mov
adcl
jne
push
mov
jge
push
into
push
xor
mov
pop
and
lahf
bound
jmp
mov
dec
pop
cmp
push
jg
cld
xchg
sbb
jp
test
mov
adc
pop
test
sub
leave
inc
inc
pop
das
iret
cmp
orb
aas
jb
mov
lea
or
ret
in
mul
push
mov
outsb
jl
pop
ljmp
cs
inc
inc
inc
dec
mov
scas
jb
mov
push
out
out
sti
xchg
dec
cmp
clc
imul
xchg
inc
lahf
jo
dec
outsl
mov
mov
movsl
in
insb
mov
mov
mov
lods
lret
repz
sbb
xor
ret
xor
stos
fstpl
or
imul
xchg
negl
mov
inc
jns
nop
mov
push
mov
dec
lahf
addr16
sub
lcall
rol
repz
sbb
cld
pop
mov
fdivs
xor
mov
test
sbb
cmp
add
aaa
loope
ljmp
sub
jg,pt
add
cld
mov
xor
cwtl
jae
sbbl
bound
out
adc
fdivp
js
adc
ljmp
cmpsb
repz
push
sbb
into
adc
and
loopne
push
sub
xor
aas
icebp
adc
cmp
lret
push
pop
sub
int
xor
adc
fidivrl
and
mov
and
and
push
lea
mov
cmp
and
int3
jg
cmpsl
mov
mov
lds
sarb
pop
dec
sub
ret
xor
pop
dec
aad
and
push
test
movsb
push
pop
cmp
lahf
mov
scas
xlat
xchg
mov
dec
nop
loopne
fnstsw
repnz
out
mov
xchg
mov
jne,pn
lcall
into
int
xchg
jle
fnstenv
xor
lds
int
jbe
jb
xor
shlb
repnz
shrl
or
and
mov
xchg
xlat
out
dec
ljmp
sub
inc
scas
mov
loope
jbe
test
mov
inc
fwait
int
daa
in
daa
and
jle
out
fmull
pop
jp
cli
and
aad
mov
dec
mov
inc
mov
mov
fsubrl
fs
dec
dec
inc
das
xchg
daa
fwait
jmp
and
mov
sti
push
mov
into
out
repnz
mov
mov
ret
les
shlb
fwait
mov
ss
jg
pop
inc
fadds
cmp
and
sbb
pop
sub
dec
and
hlt
inc
lret
or
rcrb
pop
mov
jge
inc
mov
cmpsb
movsb
dec
or
xor
pusha
pslld
out
mov
cmp
in
rorl
shll
xchg
sbb
lret
mov
sub
jno
fsubrs
int3
dec
cmp
xchg
stc
fdiv
hlt
in
push
imul
jno
dec
int3
push
jb
jmp
or
adc
xchg
mov
and
in
cmp
cmp
or
push
hlt
inc
inc
push
cmc
adc
push
mov
aam
imulb
test
and
cmp
mov
sbb
jo
test
fidivs
and
dec
xlat
outsl
pop
into
out
mov
inc
cmp
nop
jp
dec
cmpsb
push
rep
mov
aaa
and
imul
xor
sub
call
jle
or
and
and
cmp
sbb
add
pop
das
cmp
enter
add
lcall
into
shll
movsl
repz
mov
mov
mov
stos
rcrb
into
dec
jecxz
test
mov
call
xor
dec
sub
or
pcmpgtd
adc
xchg
xorb
data16
add
adc
and
hlt
xchg
jp
or
leave
ret
push
scas
das
fidivrl
pop
push
dec
popf
pop
sub
negl
push
outsb
sbb
mov
ljmp
or
in
mov
cmpsb
xchg
inc
mov
bound
xor
push
jle
ret
insb
repnz
xlat
push
push
scas
jbe
mov
mov
enter
mov
add
add
stc
jns
aad
cmp
push
sbb
mov
sbb
data16
lea
or
adc
add
or
fsubl
xchg
leave
lods
pop
and
mov
mov
in
out
pusha
xchg
sbb
fndisi(8087
sub
add
and
and
mulb
adc
mov
sub
sub
movsb
or
jb
mov
cltd
mov
mov
ret
push
movsb
pop
push
mov
mov
xchg
sbb
jecxz
push
jo
fstpl
ja
xchg
mov
cli
pop
adc
hlt
adc
adc
xchg
ja
cmpsl
xorl
xor
popa
decb
inc
lea
loop
insb
fs
ss
xor
sub
cmp
sarb
cld
repz
push
out
pusha
push
inc
cli
pop
add
fisubrs
cli
ss
sbb
mov
pop
addr16
dec
push
inc
jmp
scas
cmp
inc
xor
outsb
xor
sti
mov
sub
stos
mov
les
push
xor
lea
ss
or
cmpl
or
mov
push
lcall
sbb
sub
dec
rcrl
mov
mov
lea
loope
jae
lcall
mov
cli
imul
cmp
ror
in
cmp
mov
pusha
jnp
push
pop
pop
or
dec
pop
js
pop
pop
push
mov
enter
in
lret
xchg
lods
in
cmp
int3
xor
data16
icebp
je
test
cwtl
pop
aaa
dec
adcl
lret
clc
sub
pop
mov
fidivrs
jl
inc
fisttps
ljmp
jns
fidivrl
push
inc
jnp
lret
lods
add
add
push
bound
and
repz
add
cld
add
in
pushf
stc
sbb
push
pop
or
or
mov
in
push
pop
shlb
fdivl
outsl
loop
lods
or
fcomip
inc
pop
out
xchg
lret
cli
popa
add
ja
int3
or
push
jb
xor
push
inc
push
mov
aas
xlat
dec
imul
je
ret
jns
jb
and
jae
sub
pop
mov
dec
cmp
cmp
fimuls
jbe
mov
inc
or
ss
lock
hlt
push
sub
add
dec
inc
cmpsl
xor
loope
push
sbb
in
cmp
in
fldt
jmp
push
cmpsl
ficompl
inc
or
sbb
ss
inc
test
mov
je
add
pop
lods
mov
inc
jns
mov
fwait
lret
leave
cmp
hlt
popa
jbe
in
push
gs
push
jns
push
pop
mov
test
andb
add
dec
cld
adc
imul
xchg
aam
mov
mov
xor
sub
sub
icebp
lds
subps
mov
jne
adc
imulb
push
insb
sub
lock
outsl
push
push
pushf
cmp
xor
sarl
jg
addb
inc
pushf
add
rcl
inc
add
cmp
push
cmp
add
adc
mov
adc
lds
or
mov
dec
and
jae
nop
xor
jge
push
xor
sub
in
pop
and
filds
repz
fidivl
call
jmp
ficomps
add
test
jae
pop
inc
aaa
xor
out
icebp
add
aad
test
pop
xchg
jbe
xchg
imul
cli
test
aam
bswap
mov
jnp
dec
xchg
fsubl
clc
cmp
xor
inc
gs
and
push
mov
xor
cwtl
je
popa
xchg
test
mov
pop
rorb
jns
fmull
jo
sub
loopne
das
mov
dec
mov
push
mov
push
orb
leave
scas
and
xchg
fnsave
scas
pushaw
dec
in
mov
hlt
fwait
inc
jns
cltd
mov
or
lods
lods
adc
add
test
js
xchg
mov
pop
mov
popa
std
fildll
mov
mov
push
mov
and
cmp
jle
xor
adc
jnp
cmp
lock
aaa
or
mov
das
cmp
ficoml
sarl
xchg
outsl
js
push
mov
popa
and
ljmp
insl
sarl
cmpsb
sbb
xor
inc
adc
sarw
sbb
arpl
test
fsts
insb
stos
mov
test
jg
mov
movsb
loop
and
pop
mov
inc
bound
sti
jg
lahf
mov
and
mov
lret
dec
adc
xor
mov
ret
jle
push
push
sbb
xchg
xor
lods
mov
xor
mov
mov
js
arpl
or
aaa
inc
pop
xchg
dec
rcl
xchg
cmpsl
lahf
andl
or
adc
fst
sbb
mov
adc
cmp
mov
ja
decb
outsb
test
mov
and
fcoms
or
jle
xor
inc
daa
sbb
and
loope
or
or
mov
xchg
mov
dec
xor
and
mov
and
adc
fildl
jno
fcmovb
mov
outsl
dec
mov
fists
push
xchg
movsl
stos
out
inc
xor
xor
cmpsb
dec
adc
pop
enter
aaa
scas
mov
int3
sub
mov
mulb
jmp
mov
sbb
enter
stos
bound
jo
jae
loopne
xor
lret
cmp
mov
enter
into
aas
push
sbb
jb
mov
jle
adc
mov
mov
and
jl
adc
xor
int
les
lcall
mov
fcmovnbe
in
add
mov
and
cmp
push
dec
push
mov
aaa
dec
mov
stos
out
repz
stos
dec
mov
sarb
sub
add
arpl
jne
lea
std
dec
mov
jnp
jg
fbld
outsb
jecxz
lods
pop
dec
xchg
out
test
mov
adc
mov
loop
cmp
cwtl
xchg
pop
sbb
xor
test
cwtl
cmp
int
inc
jmp
jae
test
or
xchg
dec
xchg
pop
int
mov
rorb
int3
filds
and
popf
roll
iretw
movsb
mov
fisubrl
add
out
sbb
cmpl
push
mov
push
mov
mov
rol
sbb
pop
cmp
mov
shlb
adc
or
add
cmp
leave
out
popa
mov
cmp
into
mov
sub
mov
jne
icebp
rcll
in
insb
push
cmp
mov
fldenv
outsl
pop
orl
inc
sub
jecxz
jb
fcoml
lcall
nop
gs
xchg
dec
pop
jo
mov
xchg
dec
push
ret
jge
mov
scas
adc
lahf
das
xchg
enter
adc
int
pushf
aam
jle
dec
cmpsb
aaa
jl
xchg
add
pop
stos
in
pushf
lret
push
ret
push
bound
popf
sbb
xlat
mov
push
xor
ljmp
inc
push
sbbl
jl
xorl
adc
add
andl
jae
mov
mov
pop
mov
add
xchg
xor
gs
out
xor
jl
out
cmp
mov
xchg
pop
push
movsb
pusha
pop
jle
aad
stc
and
lcall
pop
or
iret
sbb
jmp
sbb
imulb
lods
aaa
das
dec
push
sub
shll
pusha
test
sbb
pop
dec
addr16
call
shrb
sti
repz
fcomp
jb
iret
or
sahf
push
sub
call
or
stos
xor
mov
pop
mov
lods
push
mov
pusha
dec
mov
mov
inc
mov
lcall
sub
cmp
cmp
stc
push
call
scas
dec
jp
add
pop
mov
push
pusha
xchg
lock
or
pop
popa
flds
scas
cmp
mov
mov
int
push
scas
test
inc
aas
inc
sub
and
negb
test
int
ror
push
bound
or
mov
or
hlt
mov
mov
jns
lret
repz
testl
test
daa
pop
clc
jmp
popf
push
repz
mov
mov
inc
sarb
mov
insl
mov
push
lods
xchg
pop
and
mov
daa
xchg
out
xlat
mov
aas
fstpl
xchg
pop
and
or
outsl
pop
cmp
xchg
add
inc
pop
cltd
imulb
push
nop
jmp
jmp
fs
testl
push
mov
fs
popf
inc
pop
inc
out
mov
mov
xlat
sbb
cmpsb
mov
orl
mov
mov
push
stos
or
out
cmp
jae
jno
ljmp
add
ss
loop
pusha
aaa
andl
and
mov
push
and
mov
lcall
mov
mov
sbb
mov
xchg
and
ss
and
sub
frstor
dec
rcrb
std
sbb
inc
iret
add
das
mov
push
adc
movsl
adc
jl
pop
popf
and
xor
push
xchg
jmp
or
push
add
daa
and
aas
lds
loop
nop
inc
mov
jnp
icebp
xor
pop
sub
bound
imul
push
lret
call
rcl
fs
jl,pn
pop
mov
xchg
mov
dec
push
lahf
jge
mov
adc
scas
lock
movb
insl
fucompp
xchg
dec
jno
fisubl
mov
mov
notb
and
and
orl
adc
pop
push
cwtl
and
icebp
cmp
adcb
outsl
imul
push
sbb
pop
aaa
mov
and
stc
out
adc
dec
pusha
sbb
mov
addr16
dec
mov
mov
icebp
add
dec
add
adc
lods
ret
add
inc
fwait
mov
mov
mov
gs
sbb
daa
ret
jmp
test
lea
xor
loope
add
pop
out
mov
dec
test
dec
mov
pop
adc
jmp
inc
hlt
movsl
mov
mov
inc
nop
roll
xchg
sbbb
enter
insb
xor
mov
sbb
inc
push
test
sbb
frstpm(287
outsl
inc
xor
xor
cmc
sub
hlt
cmp
movsb
and
mov
dec
adc
sbb
adc
rclb
mov
pushl
aad
xor
repnz
loopne
mov
push
and
xor
popa
mov
cwtl
aaa
mov
enter
mov
and
mov
or
push
add
and
gs
repz
dec
fmull
in
ret
lock
mov
push
push
push
push
call
push
push
jmp
into
cmc
je
xor
mov
jb
jp
test
add
hlt
or
push
and
cs
mov
cmpl
addr16
add
lahf
pop
sti
sbb
mov
cwtl
bound
or
add
shlb
sub
lret
cs
add
push
sbb
rorb
jle
xchg
mov
cmp
pushf
loope
mov
arpl
push
xor
insl
xchg
hlt
out
sbb
sub
inc
mulb
adc
in
mov
add
mov
outsb
mov
and
icebp
mov
xchg
mov
cmpsl
push
add
ret
mov
aad
sub
cmpsb
out
test
sarl
movsb
xchg
movlps
jno
mov
xor
push
dec
xlat
addr16
jmp
xor
lret
inc
inc
push
mov
fsubrs
call
loop
gs
jnp
lret
les
mov
jle
les
dec
xor
mov
push
push
call
mov
mov
add
mov
adc
mov
and
mov
and
mov
cmp
jne
cmp
je
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
xor
shr
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movb
movb
movb
movb
mov
movzbl
mov
movzbl
shl
cltd
idiv
mov
movzbl
movzbl
or
mov
movzbl
cltd
idiv
mov
movzbl
movzbl
cltd
idiv
movzbl
and
mov
movb
movb
mov
mov
add
add
mov
imul
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
xor
mov
mov
add
mov
shrd
xor
shl
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
mov
imul
mov
imul
xor
or
mov
mov
xor
mov
and
sub
xor
xor
add
div
mov
jmp
movl
mov
movl
movl
mov
mov
or
xor
mov
sub
xor
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
imul
sub
imul
xor
add
mov
mov
xor
mov
and
sub
xor
xor
mov
div
mov
sub
mov
add
xor
add
mov
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
incl
push
orl
push
xor
add
mov
sub
push
adc
mov
cmpl
movzbl
movl
mov
movzbl
jmp
movl
movl
jbe
pushl
pushl
call
xor
add
mov
sub
xor
add
inc
movzwl
or
mov
and
sbb
mov
addl
shrd
cmpl
movl
movzbl
jmp
mov
mov
jbe
pushl
call
add
addl
movzwl
sub
inc
movzwl
sbb
shr
mov
mov
xor
mov
or
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
push
call
sub
mov
xor
sub
or
and
xor
or
sbbl
mov
mov
xor
mov
shl
mov
subl
shrd
cmpl
mov
mov
mov
mov
jmp
mov
mov
jne
push
push
pushl
call
mov
mov
sub
imul
subl
mov
and
mov
and
mov
adc
xor
shr
mov
mov
cmpl
mov
mov
jmp
mov
mov
jle
push
push
call
mov
sbb
and
or
neg
adc
add
xor
xor
add
or
cmpl
not
mov
mov
jmp
movl
mov
jg
push
call
mov
and
xor
add
orl
subl
and
sbb
mov
sbb
mov
xor
mov
mov
adc
mov
dec
mov
adc
mov
neg
mov
cmpl
mov
not
movl
jmp
mov
mov
jbe
pushl
call
or
sub
xorl
add
adc
dec
movzwl
sbb
mov
and
mov
xor
mov
andl
shl
sbb
xor
add
shld
mov
xor
mov
shl
adcl
mov
neg
xor
cmpl
mov
mov
movl
mov
jmp
movl
jg
pushl
call
and
or
sbbl
inc
subl
mov
xor
sbbl
xor
movl
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
mov
mov
sub
and
mov
and
mov
xor
adcl
shld
or
shl
cmpl
mov
mov
movl
jmp
mov
movl
jge
push
push
push
push
push
push
push
call
adcl
movzbl
adc
sbb
and
mov
adc
adcl
xor
mov
xor
or
sbb
mov
mov
xorl
xor
movl
cmp
jne
movl
cmp
je
add
mov
mov
cmpl
mov
movzbl
notl
mov
jmp
mov
ja
push
push
pushl
push
push
push
pushl
call
orl
adc
and
orl
xorl
xor
shl
mov
sbbl
xor
addl
shr
or
adc
mov
mov
sub
mov
mov
mov
sub
xor
mov
subl
mov
mov
xor
or
sub
xor
mov
push
and
pop
orl
sub
cmpl
movl
mov
mov
jmp
movl
jg
push
push
push
push
push
call
adc
sbb
xorl
orl
sub
sub
xor
mov
sub
mov
notl
add
subl
mov
addl
lea
not
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
inc
xor
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
movl
mov
xor
mov
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
mov
andl
or
mov
mov
jne
mov
movl
mul
ret
andl
push
cmpl
mov
movl
mov
movl
jmp
movl
movl
jg
push
pushl
pushl
pushl
call
and
sbbl
subl
sbb
andl
sbb
and
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
add
mov
mov
sub
imul
add
xor
div
mov
mov
jmp
movl
movl
movl
movl
mov
mov
or
mov
imul
add
xor
mov
div
mov
mov
xor
sub
mov
mov
mov
xor
sub
mov
sub
mov
add
mov
mov
sub
and
add
xor
mov
div
xor
add
mov
mov
sub
imul
add
div
mov
xor
mov
sub
mov
and
or
sub
xor
mov
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
xor
push
push
call
mov
movzbl
push
call
test
jne
xor
movl
jmp
cmpl
movl
mov
mov
jmp
mov
jne
pushl
pushl
push
push
pushl
call
xor
and
xor
or
sub
or
sbbl
cmpl
movl
mov
mov
jmp
mov
mov
jg
pushl
pushl
call
andl
xor
and
adc
adcl
xor
xor
xor
or
sub
sub
mov
adcl
movl
movl
xor
movl
cmpl
mov
mov
notl
jmp
mov
jl
pushl
push
call
inc
mov
xor
mov
inc
and
sub
movl
mov
mov
adc
movl
add
movl
mov
add
movl
orl
push
add
movl
cmpl
not
notl
jmp
mov
jl
pushl
call
or
xor
xor
adc
andl
mov
cmpl
movl
not
not
movl
jmp
mov
mov
jg
call
xor
subl
orl
sbb
xor
xor
or
or
mov
push
subl
push
push
sbbl
call
xor
mov
mov
push
adcl
push
xorl
push
xorl
push
call
notl
mov
adcl
mov
addl
add
mov
adc
adc
mov
orl
xor
or
mov
adc
xor
mov
adc
movl
add
movl
or
movl
cmpl
movzwl
movl
jmp
movl
je
push
push
push
call
inc
add
mov
xor
adc
add
xor
movl
xor
or
mov
sub
xor
movl
cmpl
movl
mov
jmp
notl
mov
jg
push
push
call
adc
and
sub
sbb
add
sbb
mov
mov
or
push
movl
mov
add
mov
sbbl
push
adcl
push
push
andl
call
sbbl
mov
mov
push
push
xorl
push
andl
push
sbbl
call
mov
sbb
mov
sbbl
xor
mov
xor
mov
and
mov
movl
xor
xor
cmp
jne
movl
cmp
jne
sbb
movl
cmpl
mov
mov
jmp
notl
jb
push
pushl
pushl
push
call
xor
and
add
add
movzwl
add
mov
cmpl
not
mov
movl
movl
jmp
mov
jae
push
push
pushl
push
call
adc
and
mov
sub
sbb
movzbl
or
or
and
movl
movl
mov
cmpl
movl
mov
mov
movl
jmp
movl
movl
jle
push
push
push
call
incl
adc
and
adcl
xor
imul
and
xor
sbbl
mov
div
sub
pushl
cmpl
mov
movl
mov
jmp
mov
movl
jae
pushl
push
call
sbb
movzwl
and
mov
add
xor
mov
mov
or
sbb
addl
xor
xor
adcl
and
xor
subl
pushl
mov
cmpl
mov
mov
jmp
movl
movl
jg
push
call
sbb
sbb
addl
or
or
xor
adc
push
pop
div
cmpl
mov
movl
mov
jmp
movl
movl
jl
pushl
push
pushl
call
and
and
movzwl
sub
not
mov
or
mov
addl
sub
add
imul
subl
and
adcl
xor
pushl
notl
pushl
pushl
andl
pushl
andl
pushl
subl
call
cmpl
mov
mov
jmp
movl
mov
jne
push
pushl
pushl
call
xorl
sub
mov
mov
adc
orl
sub
sbb
xor
movl
movl
xor
or
mov
sub
or
mov
addl
mov
sub
xor
mov
xorl
xor
xor
movl
div
imul
xor
orl
pushl
pushl
call
decl
movl
adc
mov
movl
movl
sub
mov
cmpl
movl
mov
mov
movl
jmp
movl
movl
jb
push
push
push
pushl
push
push
push
pushl
call
add
adc
add
xor
xor
or
mov
sbb
mov
mov
adc
mov
mov
mov
push
push
xor
xor
adcl
push
xorl
push
call
xorl
add
mov
movl
adc
adcl
mov
movl
movl
movl
movl
dec
movl
jne
sbb
mov
not
mov
subl
mov
addl
mov
movl
movl
mov
call
add
lea
or
mov
lea
mov
sub
mov
mov
sub
mov
mov
mov
mov
addl
xor
xor
xor
shl
and
shr
movzbl
add
or
mov
mov
lea
xor
add
xor
mov
mov
mov
mov
sub
or
mov
or
mov
mov
add
shrd
sub
shr
mov
mov
adc
mov
mov
xor
subl
xor
or
xor
mov
push
pushl
lea
push
adcl
shl
addl
call
orl
lea
subl
push
mov
subl
mov
movl
lea
sbbl
push
xorl
mov
orl
lea
mov
orl
mov
sbbl
mov
addl
push
sbbl
call
push
andl
push
pushl
call
add
mov
mov
mov
sub
or
mov
and
mov
sub
mov
movzwl
sbb
shr
xor
or
sub
shl
or
cmpl
movl
movl
movl
jmp
movzwl
movl
jne
pushl
pushl
pushl
pushl
pushl
push
call
xor
xor
xor
mov
add
addl
mov
xor
mov
adc
lea
cmpl
mov
not
movl
jmp
mov
mov
jb
pushl
push
push
call
sbb
mov
xor
or
sub
or
mov
mov
xor
subl
movzwl
add
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
xor
mov
mov
or
mov
shl
xor
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
incl
push
movl
cmpl
movl
mov
mov
jmp
mov
movl
jae
pushl
call
adc
sub
andl
and
mov
and
xor
or
mov
sub
and
movl
adcl
movl
mov
mov
sub
add
mov
cmpl
movl
movl
jmp
mov
mov
jbe
push
call
addl
addl
orl
adcl
mov
xor
subl
div
cmpl
movl
mov
jmp
movl
movl
jle
pushl
push
call
xor
incl
add
and
dec
xorl
sub
cmpl
movl
movzwl
jmp
notl
jbe
push
push
pushl
push
pushl
push
pushl
call
xor
or
adc
sub
mov
mov
sub
mov
sbb
mov
imul
mov
sbbl
xor
and
dec
mov
xor
div
sub
mov
and
mov
movl
movl
movl
movzwl
sbb
mov
mov
xor
or
add
add
xor
xor
orl
imul
mov
adc
mov
mov
and
sub
mov
xor
xor
sub
or
mov
movl
movl
cmpl
mov
mov
mov
jmp
movl
ja
push
pushl
pushl
call
and
mov
add
add
movl
adc
sbb
movl
movl
and
mov
movl
imul
cmpl
mov
not
movl
jmp
mov
jg
call
xor
dec
sbbl
and
and
mov
adc
imul
imul
sbb
mov
andl
and
cmpl
mov
movzbl
mov
movl
jmp
mov
mov
jne
push
push
pushl
push
call
xorl
decl
adcl
adcl
sbbl
or
mov
xor
mov
mov
lea
cmpl
movl
mov
jmp
movl
movl
jg
push
pushl
push
push
pushl
push
call
and
adc
mov
adc
mov
addl
and
and
or
mov
movl
mov
mov
sub
add
movl
movl
mov
movzbl
adc
mov
xor
movzwl
sub
mov
mov
incl
or
cmpl
not
mov
mov
jmp
movl
movl
jle
push
call
xor
or
sbb
mov
xor
inc
orl
addl
negl
mov
or
cmpl
mov
mov
jmp
movl
ja
push
pushl
call
adc
inc
adc
mov
adc
xorl
add
adc
mov
or
cmpl
not
not
mov
movl
jmp
movl
movl
jne
call
mov
xor
sbbl
notl
xor
xor
xor
sbb
subl
add
xor
not
mov
cmpl
not
mov
movl
jmp
movl
jb
push
call
orl
mov
sbb
inc
adcl
movl
sub
movl
movl
mov
add
mov
sub
orl
mov
lea
cmpl
mov
mov
jmp
movl
jne
push
call
inc
mov
sub
orl
movl
adcl
incl
cmpl
mov
mov
notl
jmp
movl
jbe
pushl
push
call
add
xor
add
notl
mov
sub
mov
or
and
sub
mov
mov
adc
mov
movl
movl
not
mov
or
add
imul
mov
imul
notl
xor
cmpl
mov
movl
movzwl
jmp
movl
je
push
pushl
call
and
subl
subl
sub
inc
cmpl
mov
movl
mov
jmp
movzwl
jg
push
push
push
push
call
mov
sub
not
sub
sbb
mov
or
mov
div
cmpl
mov
movl
movl
mov
jmp
movl
jg
pushl
call
xor
mov
or
mov
and
subl
add
and
adc
sub
andl
sub
subl
mov
movl
cmpl
not
mov
mov
jmp
movl
movl
ja
pushl
push
push
call
add
addl
sbbl
adc
not
mov
sbb
mov
sbbl
movl
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
xor
addl
xorl
adc
mov
mov
add
xorl
mov
adc
movl
mov
mov
movl
xor
sbbl
div
movl
imul
inc
add
mov
subl
xor
andl
xor
subl
mov
xorl
div
xor
or
adc
xor
mov
movl
subl
movl
addl
movl
xor
add
xor
xor
sub
xor
mov
xor
mov
sub
shr
sub
cmpl
movl
notl
jmp
notl
movl
jl
pushl
push
pushl
call
xorl
andl
subl
orl
movl
xor
xor
and
mov
mov
imul
mov
orl
and
or
mov
orl
sub
xor
or
add
mov
mov
movl
movl
mov
or
mov
or
cmpl
mov
mov
jmp
mov
jl
pushl
call
or
sub
xor
or
subl
sub
xor
mov
cmpl
movzwl
mov
mov
jmp
movl
movl
jne
pushl
pushl
pushl
push
push
call
or
xor
sub
xor
xor
and
mov
sub
and
xorl
movl
movl
cmpl
movl
movl
jmp
mov
jb
push
pushl
pushl
pushl
pushl
pushl
call
and
orl
andl
sbb
or
movl
movl
xor
movl
sub
movl
xor
movl
mov
xor
add
mov
sub
add
mov
imul
mov
sbb
imul
mov
or
mov
adcl
lea
andl
push
call
mov
xor
add
sub
mov
mov
notl
imul
adc
add
cmpl
mov
movl
not
mov
jmp
movzbl
jl
push
call
mov
add
adcl
movzbl
or
xor
or
xor
orl
and
sub
cmpl
movl
mov
jmp
movl
ja
push
pushl
push
pushl
push
push
call
sbb
or
and
movzwl
sub
mov
mov
adc
mov
addl
xor
andl
mov
xorl
div
xor
mov
mov
sub
add
add
mov
movl
movl
movl
movl
cmpl
mov
not
notl
jmp
not
je
push
push
call
adcl
dec
mov
mov
sub
or
adc
xor
cmpl
mov
movl
jmp
movl
jge
pushl
push
call
sbbl
sub
sbb
mov
mov
sub
and
xor
sbb
addl
movl
movl
movl
xor
movl
adc
movl
movl
movl
or
movl
mov
mov
cmpl
mov
movl
movl
jmp
movl
notl
jl
pushl
call
add
adc
and
adc
and
mov
cmpl
mov
not
mov
jmp
movl
jbe
push
push
push
pushl
call
neg
mov
sub
sub
decl
sbbl
and
neg
sub
sub
imul
mov
sub
lea
mov
xor
mov
mov
sub
mov
movzbl
adc
xor
add
cmpl
mov
not
mov
movl
jmp
mov
je
push
push
call
addl
mov
and
mov
sbb
not
sub
incl
mov
lea
mov
or
and
mov
sub
inc
add
xorl
mov
movl
cmpl
mov
mov
mov
not
jmp
mov
movl
jg
pushl
push
call
mov
sub
mov
movzwl
or
subl
xor
add
adc
movl
mov
mov
sub
sub
movl
movl
mov
mov
mov
sub
or
mov
mov
adcl
xor
xor
sbbl
mov
call
mov
mov
mov
and
mov
xor
xor
orl
mov
sbbl
call
xorl
or
cmpl
movl
movl
jmp
movl
mov
jl
push
pushl
pushl
call
subl
adcl
andl
sbbl
addl
xorl
or
mov
movl
mov
xor
xor
addl
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
andl
push
cmpl
movl
movl
movl
movl
jmp
movl
jle
push
push
push
push
pushl
push
call
subl
orl
subl
andl
subl
sbbl
addl
sub
mov
or
jne
mov
cmpl
mov
mov
movl
mov
jmp
mov
movl
jl
push
push
call
xor
adc
adcl
xor
neg
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
subl
cmpl
je
mov
xor
add
sub
xor
add
mov
mov
mov
pop
pop
pop
leave
ret
cmp
jae
movl
cmp
jae
adcl
shld
movl
shl
ret
mov
xor
orl
and
shl
ret
xor
xor
ret
