push
mov
sub
movl
movl
cmpl
je
cmpl
jge
jmp
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
push
push
push
mov
mov
xor
or
sub
or
mov
lea
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
sbb
xor
or
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
mov
adc
mov
movl
movzwl
sub
mov
or
movl
subl
mov
mov
sbb
mov
xor
inc
mov
orl
add
movzwl
xor
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
xor
orl
add
movl
jmp
mov
mov
mov
mov
movl
inc
movl
cmp
movl
jb
mov
addl
mov
adcl
xor
orl
add
jmp
add
mov
not
mov
addl
xor
sub
mov
add
movzwl
mov
mov
movzwl
mov
xor
add
mov
jmp
mov
je
je
leave
imul
jnp
jnp
cwtl
jnp
ror
sarb
add
xchg
mov
sbb
lea
jge
xchg
sub
pusha
ja
stos
js
insl
inc
js
inc
mov
clc
xchg
sti
mov
or
int3
pop
fs
call
lock
loope
out
sti
aad
jmp
dec
int3
sahf
loop
clc
push
cmpsb
les
and
jne
jl
push
cwtl
fs
arpl
insb
in
lret
mov
xchg
cld
sub
sub
mov
mov
in
mov
dec
movsb
sub
sbb
xchg
inc
testb
stos
push
xchg
jo
mov
fs
dec
add
test
cmp
inc
imul
xchg
or
daa
mov
mov
ja
in
pop
or
fidivrl
add
or
ja
ja
and
push
ret
sti
cmpsb
lds
pop
inc
mov
addl
lahf
xor
pusha
jmp
cmp
or
adc
push
push
or
int
movsb
out
jmp
add
fwait
imul
xchg
enter
std
mov
pop
xlat
xlat
enter
addb
decl
jno
je
fisttpl
sbb
mov
pop
xchg
inc
out
xor
sub
fwait
jecxz
aaa
mov
cltd
jne
or
fidivs
adc
out
sbb
pop
add
inc
pop
hlt
pop
xlat
cltd
gs
inc
or
dec
std
or
mov
add
xor
sbb
adc
ljmp
push
cwtl
clc
in
mov
mov
xchg
repnz
jnp
xor
add
sub
inc
test
ljmp
xor
lcall
filds
sarb
push
cld
enter
leave
add
movsb
data16
mov
jbe
adcl
insb
rcrl
cmc
pop
jae
adc
mov
mov
or
jge
pop
in
stos
scas
in
cmp
push
and
mov
or
int
fninit
cmp
adc
pushf
fwait
cmp
push
and
inc
sbb
pop
cltd
loope
pop
xor
fdivrs
mov
andb
mov
clc
xor
and
shlb
xchg
stos
sub
mov
push
cli
das
cld
ss
rorb
xchg
inc
nop
mov
in
add
daa
adcl
push
aaa
mov
jecxz
lock
jmp
leave
rclb
std
iret
push
inc
scas
sbb
test
out
xchg
test
mov
mov
call
mov
jmp
shlb
mov
lods
mov
xchg
mov
xor
push
jmp
sub
es
movsb
inc
loopne
jecxz
fidivs
push
in
mov
mov
cld
add
and
adc
movl
or
cmp
fsub
test
xor
ds
movsl
mov
cld
dec
push
and
xor
mov
sbb
fiadds
in
lahf
add
es
inc
dec
repnz
sbb
sbb
out
enter
sub
pop
jno
jne
sub
jae
adc
setl
adc
psrlq
cmp
int3
mov
jnp
aas
mov
loope
lahf
cmpsl
push
inc
frstor
sbb
fistpl
out
lock
sub
enter
sahf
and
cwtl
dec
sbb
fsts
mov
loop
mov
movsl
gs
cmp
repnz
cmp
aam
imul
lahf
or
inc
int3
out
addr16
add
push
push
mov
jbe
ror
mov
icebp
dec
dec
jbe
pushf
outsb
xor
loope
dec
es
addr16
repz
movb
add
ret
jne
pop
shll
xchg
xchg
fldt
adcl
pop
mov
into
jo
cmp
fldt
les
iret
add
jmp
aam
lret
sub
enter
rorb
sub
cmp
aas
out
inc
stc
mov
stc
fisubl
mov
mov
ret
push
popf
jge
pop
add
jae
movsb
or
jle
mov
or
dec
jge
js
sub
push
es
imul
inc
push
movsbl
adc
xlat
aam
push
push
into
pop
xor
dec
cld
repnz
pop
jno
or
adc
pop
gs
out
mov
xor
inc
movsl
fildl
dec
fnstsw
aad
sti
xchg
int
add
das
dec
inc
cli
dec
sbb
xor
das
mov
in
loope
js
or
scas
inc
jns
sahf
cmp
enter
xchg
pop
repz
int3
nop
daa
imul
shl
push
mov
mov
inc
or
push
clc
lods
inc
sbb
aaa
xchg
dec
and
loop
aad
mov
addr16
mov
mov
arpl
sub
das
icebp
aad
jbe
sub
mov
xor
push
inc
shrb
add
or
scas
mov
enter
sbb
stos
out
adc
jne
or
ret
mov
mov
js
mov
mov
popf
xor
rcll
lcall
lret
inc
lock
inc
enter
mov
ret
pushf
rclb
stc
test
in
imul
pop
shll
mov
stos
ja
xchg
rcl
sbb
xchg
addr16
in
insl
rcrb
add
mov
cmc
idivb
daa
hlt
sub
or
fisubrl
mov
jle
pop
and
mov
adc
adc
cmp
mov
and
or
lods
dec
lods
and
aaa
jge
pop
mov
fadds
in
leave
fnstenv
test
out
mov
and
icebp
mov
xor
fbstp
xchg
dec
jp
xchg
mov
push
fstpl
lods
dec
adc
mov
push
test
ds
pop
add
insb
mov
jmp
les
mov
xor
jmp
enter
fstl
sub
out
push
and
xor
je
adc
out
adc
adc
sub
pop
aam
lahf
jo
jle
shlb
leave
or
sub
imul
and
mov
adc
lret
sbb
mov
lcall
xchg
mov
pop
push
xlat
pop
std
je
roll
fstpt
mov
cmp
and
mov
imul
cmpsb
stos
outsb
jo
push
cmp
ret
lods
pop
mov
mov
mov
mov
pop
in
aad
movsb
movsl
add
in
inc
hlt
jae
push
lds
add
jge
lret
movsl
cli
test
pushf
ret
fstpt
arpl
push
xor
cmp
mov
sub
push
push
xchg
js
js
dec
dec
arpl
jp
cwtl
call
bound
cmp
mov
push
call
push
popa
pushf
aad
jl
outsl
popa
pop
int3
xchg
shll
in
add
lods
lds
call
out
cmp
adc
mov
ss
sbb
inc
lahf
mov
add
pop
mov
sub
mov
leave
and
mov
rcrl
andb
push
divl
test
imul
or
mov
loope
add
mov
icebp
pop
dec
dec
jecxz
dec
xchg
xor
jb
popa
call
adc
mov
xor
idivl
mov
xchg
das
sub
jmp
inc
inc
imul
rorl
pop
xlat
xor
dec
mov
lahf
iret
and
and
mov
and
xchg
lret
inc
rcr
out
lods
out
stos
cs
jb
cmp
mov
pop
adc
sub
jl
adc
ja
adc
jo
mov
aad
movsb
scas
mov
sbb
sahf
jge
rol
inc
in
pop
sahf
ss
inc
fs
cld
mov
push
xchg
aad
jmp
out
or
inc
mov
xor
pop
pop
insb
dec
lods
mov
popa
add
cmp
stc
cld
adc
and
cli
inc
imul
jecxz
clc
mov
in
hlt
ret
je
fcompl
les
jg
rcrl
sbb
paddusw
negb
icebp
arpl
sbb
imul
out
loope
dec
push
add
mov
cmp
xorl
adc
dec
sahf
insl
ja
inc
cmp
aas
test
test
jl
outsb
cmpsb
nop
push
pop
pop
sub
int3
fadd
std
fildl
mov
and
in
mov
repz
cs
xchg
sub
ljmp
adc
out
leave
mov
push
out
sbb
add
stos
cmp
pop
pusha
and
fcmovnbe
sub
mov
mov
mov
enter
push
jmp
or
add
cmp
outsl
je
lahf
aam
mov
mov
lods
xor
aas
cmp
cmp
jne
rcrb
inc
fsubrs
cmp
addr16
mov
push
sub
jmp
add
inc
fbstp
pop
or
test
inc
push
mov
jne
jp
push
or
pop
add
xchg
sbbb
dec
xor
dec
lea
arpl
push
mov
pop
mov
cmpsb
adc
das
cmp
and
cs
cmc
aaa
or
adc
movsb
andb
jbe
pop
gs
push
dec
cmp
fldl
pop
mov
jg
push
insl
pop
cmp
cmp
into
lret
mov
mov
loop
push
push
push
jl
or
fnsave
sub
xchg
in
shl
scas
and
adc
outsl
stos
stos
or
sub
imul
stc
push
jo
xchg
outsb
imul
arpl
xchg
jge
ret
add
dec
loop
and
add
push
icebp
pop
inc
mov
pop
sub
andb
fs
push
je
pop
aad
mov
jmp
adc
push
ds
mov
xor
sahf
fistpll
mov
push
xchg
mov
adcl
jne
mov
jge
cmc
mov
sbb
popf
mov
clc
movsb
mov
gs
fld
popa
js
mov
push
dec
jecxz
push
hlt
mov
or
flds
bound
or
pop
inc
mov
xchg
mov
sbb
repz
mov
xchg
xor
cltd
cmpsl
or
inc
or
loopne
test
xchg
nop
lods
clc
sub
xchg
cld
push
sub
and
adc
xor
lahf
cwtl
js
sub
jbe
je
cld
ss
dec
insb
negb
cld
js
mov
add
pop
push
je
xor
mov
jp
cmp
aad
ljmp
sbb
sub
pushf
insb
mov
int3
rcrl
jno
and
fildl
call
pop
fmuls
jns
add
mov
add
shrb
xor
pop
jae
inc
sbb
sub
push
lea
push
js
fisubrl
pop
out
pop
in
ret
cltd
sub
pushf
sbb
into
push
les
inc
add
sub
inc
push
mov
push
pop
pop
call
or
push
lret
push
imulb
xor
and
in
jle
lock
mov
xchg
jle
mov
enter
mov
gs
popa
sbb
xchg
pop
loop
insl
incb
push
xchg
xor
adc
or
or
adc
push
jnp
add
imul
and
sahf
add
cld
jb
mov
sbb
mov
cmp
push
fisubrs
daa
fildll
add
inc
hlt
sub
int
pop
arpl
jle
test
cmp
imul
movsb
inc
cltd
movsb
dec
pushf
and
sti
andb
enter
and
lcall
push
or
or
addr16
outsb
sar
test
or
cwtl
daa
jl
shlb
mov
repnz
int
enter
fwait
sbb
orb
pusha
add
mov
jo
sbb
cmp
xchg
push
scas
and
test
dec
imul
addr16
les
xor
xchg
out
jle
in
jg
dec
mov
inc
in
xor
dec
or
int
xchg
jmp
fisubrs
inc
inc
ret
push
sti
xchg
outsl
jne
into
mov
lret
jge
pop
je
cs
pop
pop
mov
ss
inc
divl
ret
mov
pop
stc
push
arpl
jmp
xor
aad
adc
shlb
aad
cmpsb
jmp
fiaddl
inc
cmp
sbb
cmp
test
xor
out
dec
inc
outsb
jno
imul
divb
inc
mov
xor
lea
daa
test
cmpsb
add
mov
dec
mov
mov
mov
add
fadds
jg
sahf
in
mov
in
add
inc
sbb
jp
fwait
dec
xchg
lahf
sbb
mov
scas
cmp
lea
je
sub
lcall
aaa
test
lret
and
sbb
scas
mov
pop
test
and
int
sub
sub
jne
cmp
cmp
popf
nop
ljmp
xorb
jo
cmc
xchg
jmp
aam
lret
mov
popf
jae
adc
add
sbb
xor
lods
pusha
xor
jne
dec
xchg
div
call
shlb
add
inc
mov
icebp
sbb
out
lock
adc
pop
test
cli
bound
jp
sti
std
mov
cmp
sub
scas
mov
divb
jns
rclb
adc
mov
cmpsl
cmp
pop
stos
mov
nop
loop
dec
call
xchg
xchg
push
stc
out
and
sub
mov
outsb
test
jb
test
mov
pushf
int3
sub
leave
aam
aas
lock
sbb
fidivl
push
sbb
cmpsb
mov
lret
fwait
lods
iret
or
sbb
dec
jg
fsubr
popa
jl
fs
ret
inc
mov
mov
sbb
fdivs
lods
scas
cmp
daa
popf
int
inc
sub
addl
les
add
ja
mov
push
test
mov
inc
shl
mov
icebp
xchg
das
dec
sub
xor
push
jo
jmp
fsubs
pusha
sbb
sub
pop
scas
sub
daa
mov
pop
xchg
pop
mov
aad
sub
popl
shl
sbb
loopne
inc
adc
dec
pop
cmp
inc
xchg
mov
icebp
ret
outsl
ret
cld
stos
push
lcall
scas
adc
push
in
orl
xor
push
addr16
popa
and
outsl
or
inc
xchg
mov
mov
fists
mov
mov
jo
js
adc
push
in
insl
jbe
and
pop
adc
pop
mov
xor
adc
push
or
or
or
inc
and
fs
jo
aam
jo
pop
ss
lret
cmp
call
pop
out
sbb
adc
push
test
lods
sbb
mov
fadd
test
jp
mov
add
cmp
cmp
pop
leave
lock
sub
dec
stos
fimuls
subb
sub
hlt
mov
mov
out
mov
mov
mov
lea
and
sub
out
adc
fs
out
bound
mov
jp
xor
sub
out
int3
inc
ret
leave
mov
arpl
add
stos
lds
xlat
cmp
push
ds
add
test
pop
cmp
sub
adcl
sub
fxch
ja
scas
pop
jmp
fwait
aas
loope
daa
mov
cmpsl
cmp
add
add
add
dec
or
inc
jge
add
cmp
lret
mov
xchg
jge
mov
sbbb
xor
mov
loopne
xlat
bsr
push
inc
mov
cmp
mov
push
lea
jne
scas
ficoms
lea
xor
mov
or
dec
or
ja
xchg
dec
mov
cltd
xchg
lock
push
lods
std
dec
js
mov
adc
add
mov
dec
dec
sbb
enter
ret
jns
adc
push
push
jns
ljmp
lahf
clc
mov
into
out
sti
jmp
pop
sarl
add
test
push
adc
pop
xchg
xchg
xor
inc
sub
mov
add
test
adc
xchg
test
ret
jl
xor
cld
and
insb
jp
iret
push
sub
mov
icebp
repz
into
test
cltd
push
sub
xchg
push
addr16
dec
cmp
and
push
mov
push
cmpsb
mov
mov
sub
sbbl
add
stc
add
int3
dec
stos
mov
psubsw
and
imul
icebp
inc
bound
push
push
nop
fimull
int
sbb
jnp
push
fnstenv
push
add
dec
in
repz
fstl
sbb
lcall
and
sub
mov
jnp
test
cli
mov
push
mov
adc
cmpsl
push
inc
inc
mov
popf
sbb
iret
outsb
pushl
jg
push
js
aas
stos
push
inc
xor
lret
into
pop
sbb
repz
jle
cmp
shlb
js
adc
jns
pop
lods
sarl
loope
ljmp
cmp
ret
or
jne
xrelease
jg
pop
sahf
cmpsl
scas
vhaddps
mov
cmpsb
popa
pop
cmp
add
ljmp
push
test
fmull
aaa
jecxz
stos
or
jmp
out
mov
ret
dec
jmp
xor
sti
jg
loopne
sbb
push
xchg
jg
cmp
mov
sbb
dec
jle
xchg
insb
rolb
cmp
add
mov
fldpi
mov
stos
inc
cwtl
mov
shrl
pop
xor
daa
fisubl
xchg
push
mov
jmp
ret
stos
adc
mov
mov
mov
imul
and
popf
jecxz
add
cmp
add
lods
sub
out
inc
les
fwait
out
out
and
mov
das
dec
loope
aaa
div
dec
cld
mov
movb
mov
pop
add
dec
inc
mov
mov
cli
mov
clc
jne
aaa
or
pop
dec
xchg
rclb
xor
add
fwait
test
out
fwait
pop
outsl
mov
ds
pop
outsb
push
sub
loope
xchg
jl
cmp
push
xchg
outsl
mov
mov
cmp
cmpsl
scas
lea
pop
adcb
movsl
sbb
mov
xchg
je
mov
sub
xchg
cmpsb
out
and
test
lock
leave
aaa
mov
sub
test
jno
scas
sub
mov
fldcw
orl
push
sub
mov
xchg
imul
sbbl
mov
clc
jecxz
insb
mov
cmpl
xchg
cltd
fildl
mov
sbb
pop
mov
lahf
or
push
cli
in
movsb
cmpsl
inc
jg
or
aad
mov
fisttpl
or
mov
loopne
xor
mov
pop
test
int
es
and
push
cltd
or
aam
test
lock
icebp
inc
dec
iret
sub
mov
xor
outsb
xchg
mov
sbb
ljmp
mov
mov
pop
dec
loope
aam
lret
lret
add
and
jb
or
inc
movsl
sub
and
ljmp
das
out
stos
mov
or
add
mov
clc
mov
dec
mov
mov
aad
or
mov
arpl
aad
rcrl
sub
mov
mov
in
test
mov
fisubl
fwait
sahf
xchg
rep
push
pop
icebp
aas
adc
inc
lahf
scas
hlt
out
and
add
das
or
scas
push
shlb
xchg
xchg
mov
fucomip
negl
add
test
mov
loope
inc
rcrb
ljmp
pusha
xor
mov
out
jbe
pop
outsl
stos
jne
lret
movsl
or
mov
xchg
fldl
call
test
popa
mov
outsl
push
dec
or
arpl
fs
sub
sub
mov
lock
inc
shlb
mov
pop
mov
xchg
inc
sub
lds
fdivrs
add
out
mov
xchg
xor
sub
pop
aam
fadd
mov
lret
int
in
loopne
xor
repz
ds
sbb
push
fucom
mov
scas
js
or
fwait
leave
push
stc
sub
xchg
dec
mov
or
loop
int3
loopne
lea
xchg
scas
ss
xor
push
loop
out
cltd
out
lods
mov
dec
movsl
fs
add
add
addr16
xchg
and
mov
fwait
aam
fisubl
pop
fwait
sub
loope
mov
pop
mov
gs
push
mov
push
mov
jno
and
data16
loop
mov
add
add
scas
dec
out
rcr
cmp
call
test
leave
shl
xchg
test
and
xlat
and
movsl
mov
lds
sbb
adc
inc
cltd
and
push
jmp
fisttpl
xor
inc
sub
outsb
aad
adc
and
add
dec
mov
dec
dec
out
imul
mov
pop
pusha
leave
jbe
mov
lods
cmc
push
dec
imul
adc
sbb
mov
cltd
ficoms
adc
mov
lea
loope
insb
jecxz
in
imul
cmp
dec
fstpl
loope
cmp
push
ficomps
addr16
sub
negb
inc
dec
mov
dec
sbb
jp
or
pop
out
ret
push
xor
xor
rorb
movsb
stos
in
dec
jmp
cltd
mov
sbb
fsubl
pop
mov
add
adc
jo
rep
js
xchg
xchg
dec
jae
lcall
pop
sbb
xchg
add
out
sub
mov
inc
out
cmpsl
repnz
mov
inc
push
xchg
or
inc
mov
decl
jmp
negl
cmc
sub
sub
rolb
adc
cs
jecxz
mov
test
and
jl
dec
or
imul
out
jne
xchg
cmp
dec
inc
push
add
ret
or
push
cmpsb
cld
adc
das
insb
xlat
pop
insl
std
and
hlt
push
inc
fxch
das
sbb
jle
pop
add
mov
push
mov
daa
cmpl
mov
dec
jp
and
rcrl
aad
adc
sbb
test
push
push
mov
sbb
repnz
pop
inc
xchg
shlb
rorl
mov
cld
mov
lds
xchg
loopne
mov
adc
sub
sarb
ret
int
mov
orb
aam
dec
and
sbbb
ror
mov
mov
je
xchg
and
in
sbb
sub
ss
xchg
sti
rcrb
sbb
insl
imul
jecxz
xor
or
je
mov
out
daa
and
popa
adc
pop
imul
mov
insb
jo
push
filds
aad
mov
sub
xchg
addr16
mov
jmp
popf
jo
in
lods
bound
jne
pop
sbb
cld
loopne
lods
mov
or
cmp
ja
loop
mov
jae
in
adc
add
or
jecxz
iret
push
pop
shll
mov
das
jnp
add
sbb
push
rcl
lcall
dec
lret
sbb
mov
inc
adc
mov
outsl
lock
aas
jl
and
in
inc
cld
cmp
data16
push
in
insb
push
and
mov
push
daa
xchg
jno
into
stc
and
mov
nop
pop
inc
add
es
xchg
out
sbb
inc
cmp
mov
jp
scas
mov
dec
mov
jle
sub
pusha
rcrb
add
cmp
sahf
in
mov
std
cs
inc
pop
repnz
test
pop
or
mov
pushf
dec
xchg
movsl
push
addr16
pusha
xchg
clc
ret
ret
push
fists
sbb
out
fdivrp
inc
mov
pop
mov
fucomip
sarb
ja
pop
in
ja
xor
jl
push
sbb
dec
lcall
cmp
cld
xchg
cld
fwait
cmp
shl
jmp
adc
cwtl
push
dec
dec
dec
mov
adc
add
xor
movsb
cmp
fimull
test
xor
or
sub
mov
mov
cwtl
rclb
xchg
mov
adc
fwait
pop
aas
push
out
mov
xchg
enter
mov
pop
push
repz
mov
loop
dec
dec
dec
cmp
lret
ljmp
and
pop
test
hlt
cs
dec
lret
lds
es
inc
fldcw
mov
xchg
lret
cltd
rorl
repz
lea
rcrb
adc
into
inc
cmpl
mov
in
and
sahf
aad
sbb
in
jmp
cmp
dec
dec
ja
push
pop
xchg
test
mov
sti
mov
mov
jle
loope
test
sahf
stos
push
mov
mov
js
fbld
imul
pop
cmpsl
add
pop
andl
cmpsl
jbe
std
xor
xor
sahf
dec
stos
pop
leave
stos
in
stos
jb
cmpsl
dec
mov
insb
and
jns
jl
out
jo
mov
cwtl
lcall
inc
ret
adc
and
je
mov
imul
push
sbb
insb
addb
jg
dec
mov
fucomp
iret
mov
or
inc
dec
mov
in
orl
pop
cmpsl
mov
cmp
fnsave
or
pop
push
mov
cltd
mov
insb
scas
les
xor
mov
add
aaa
push
movsb
sub
and
rcr
into
icebp
addr16
push
push
cmp
xchg
pop
aas
push
jne
jg
inc
fadds
fsubrl
sub
test
jns
and
aad
pop
cmpsb
int
or
cmp
testl
push
cmp
or
in
inc
int
mov
jl
mov
jbe
cwtl
inc
js
cli
push
mov
jb
xor
push
or
xor
mov
es
idiv
dec
dec
or
faddl
out
je
xchg
sbb
stos
mov
inc
push
push
lcall
or
xor
or
adc
std
imul
lcall
rclb
push
clc
xchg
sbb
data16
cwtl
enter
xorb
and
adc
das
pop
xchg
iret
dec
lret
sbb
push
sbb
pop
adc
sub
sahf
push
mov
movsb
cli
pop
mov
pushf
cmpsl
sub
arpl
jo
xor
mov
or
aam
sbb
aas
inc
inc
pusha
mov
test
xor
mov
and
pop
stos
mov
mov
jmp
xlat
xor
ror
mov
or
test
aad
outsl
lock
stos
sbb
bound
sbb
add
pop
adc
fstp
xchg
mulb
ds
or
and
mov
loopne
stc
cmpsl
mov
inc
or
and
or
clc
push
mov
loope
inc
ficompl
inc
fwait
test
shl
push
xlat
jne
add
divl
insl
adc
dec
aaa
pop
xor
mov
pop
jl
sbb
dec
mov
jecxz
xor
pop
out
in
pushf
push
movl
xor
push
push
fisubrs
mov
push
ja
pop
mov
adc
pop
sbb
and
jge
or
xchg
mov
or
push
ret
insl
ja
jno
test
jge
stos
shll
push
insl
sub
mov
jns
sbb
stc
gs
mov
or
pop
bnd
ja
add
lock
dec
icebp
or
loopne
cmp
arpl
out
sub
pandn
cmp
mov
push
icebp
orb
ss
adc
push
mov
lods
clc
or
adc
jo
out
insb
pop
add
lods
imul
aaa
adc
push
cmpsl
pop
dec
mov
testl
push
cmp
mov
scas
sbb
dec
sbb
sbb
mov
imul
inc
and
push
xchg
sub
daa
mov
ja
mov
aaa
sub
xor
jge
fwait
push
jno
jo
ret
scas
ds
cmpsl
clc
subl
cmp
push
fwait
pop
add
addr16
lret
data16
cmp
mov
repnz
cs
icebp
sub
test
jle
mov
mov
mov
xor
mov
int3
divl
pushf
dec
lock
outsl
dec
fwait
pavgb
adc
call
pop
xchg
inc
xor
sub
test
jae
and
pushf
mov
push
adc
pop
ds
and
mov
lss
add
sub
mov
sti
in
and
jne
faddp
jge
pop
fstps
mov
pusha
arpl
pushf
add
mov
push
cmp
gs
sub
lret
add
mov
popa
aam
jle
mov
xorl
dec
mov
cmp
jae
jg
mov
cmp
mulb
jno
das
sub
xor
ja
and
adc
lock
into
fistpl
xchg
push
mov
sub
xchg
mov
pop
call
imul
pop
mov
add
popf
rclb
mov
shll
sbb
lods
popf
pop
fmuls
shll
shrl
jns
mov
test
sub
add
xchg
sub
mov
xchg
aas
pop
push
lock
popa
push
js
push
je
lods
xchg
cmc
lods
sar
push
leave
push
insl
daa
es
out
push
sub
icebp
xchg
sbb
idivb
clc
and
call
mov
popf
mov
sbb
adc
jl
repnz
xchg
cld
out
push
inc
pop
pop
or
and
sbb
test
xor
push
sub
js
or
xor
mov
jb
dec
pop
js
cmp
mov
cwtl
mov
sarl
cmp
fucomp
sahf
xchg
push
mov
mov
scas
add
mov
repz
imul
jae
fsubrs
je
cld
andl
xor
xor
popa
push
push
outsl
mov
sbb
mov
fdivrl
inc
add
rcr
cmc
sub
fwait
call
je
incl
jb
cmp
dec
sub
adcl
sub
sub
daa
jg
movsb
scas
sub
mov
in
rorl
cs
fildll
jle
inc
sub
lock
shlb
lret
addr16
movsb
push
add
in
lock
lcall
mov
insl
add
cmp
in
and
out
outsl
movl
xchg
jmp
loopne
ret
mov
mov
cmc
mov
pusha
jno
xor
sahf
and
inc
xor
outsl
int
das
add
out
fwait
sbb
push
mov
adc
jge
mov
lea
and
jne
outsl
mov
andb
lock
jne
adc
push
mov
inc
mov
mov
cmp
jne
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
movl
mov
mov
jmp
mov
sub
xor
mov
mov
mov
xor
mov
mov
xor
xor
xor
sub
sbb
add
adc
xor
mov
mov
xor
mov
mov
mov
mov
mov
cmp
je
jmp
and
and
cmp
in
jnp
in
jnp
pusha
xchg
jno
int
push
xchg
or
dec
bound
xchg
sbb
sub
inc
pusha
roll
popf
add
xor
stos
lea
lock
andb
cwtl
outsl
call
adc
imul
out
jl
insb
push
clc
shlb
nop
and
push
jg
cltd
push
add
dec
xchg
gs
stos
int
fnstcw
xchg
sub
bound
out
mov
jno
lods
inc
jo
and
xor
adc
pushf
xchg
xor
dec
jbe
jl
cmp
adcl
push
and
sub
mov
cmp
mov
or
mov
imul
add
cli
cmp
jae
mov
pusha
loop
fcmovnbe
fnstsw
sub
and
or
ljmp
stc
push
and
mov
sbb
pop
arpl
out
aam
or
aam
jb
or
fistps
add
mov
in
hlt
xorl
lea
mov
jno
sbb
pop
cs
adc
mov
dec
mov
and
lret
adc
fadds
je
jecxz
nop
jg
cwtl
movq
mov
jae
je
imul
add
mov
adc
scas
pop
mov
push
push
sub
mov
pop
enter
stos
movl
mov
add
or
sbb
icebp
or
or
sbb
jmp
sbb
pop
mov
rorb
lahf
mov
int3
cmp
mov
into
adc
cmp
cltd
pop
inc
cmp
fsubs
mov
and
out
fildl
sub
or
mov
rolb
jle
repz
pusha
insb
dec
fsubrl
loop
dec
jne
xchg
sub
lea
dec
dec
ret
jnp
push
push
jns
loop
or
adcb
pop
add
pop
xchg
sub
lock
ja
xor
dec
xchg
pop
data16
inc
out
pop
dec
dec
test
call
xchg
andb
mov
andb
not
sub
test
shlb
mov
sbb
pop
push
lock
movsl
jecxz
mov
xchg
scas
jo
jo
mov
icebp
dec
ss
sub
nop
sbb
dec
out
dec
lea
out
out
jae
je
jns
insl
jmp
inc
cmp
shll
mov
or
mov
icebp
sub
fnsave
xchg
adc
jmp
cli
pop
test
jge
cmpb
mov
add
jg
or
xor
cmp
and
push
stos
push
or
xor
add
outsb
jl
mov
sbb
push
push
sbb
inc
cmp
sbbb
push
leave
add
lods
push
inc
cmpsb
lods
lea
popf
clc
xor
imulb
out
mov
inc
mov
arpl
or
rorb
fsin
jne
ret
pop
xchg
sub
xor
cs
mov
int3
add
ljmp
mov
or
mov
dec
mov
neg
shll
push
cmp
or
and
sub
push
divb
lcall
cmp
loop
jns
outsl
aaa
xor
out
lea
push
sahf
pop
inc
daa
test
daa
add
outsb
mov
cltd
xchg
aad
jl
jae
gs
test
test
or
int3
sbb
gs
xchg
mov
scas
jo
adc
adc
jnp
sti
js
or
add
push
pop
pop
cmpsb
push
sbb
cs
fld1
outsl
pop
adc
rclb
mov
sarb
mov
inc
xchg
and
xor
sbb
mov
popa
mov
push
sbb
fldl
std
aam
cs
call
push
mov
shll
aaa
shrl
iret
pop
mov
sub
jecxz
xor
inc
inc
sahf
das
test
dec
lods
cmp
andl
movsl
ds
adc
dec
cli
js
icebp
insb
pop
cmp
into
xchg
dec
mov
in
in
mov
jne
jmp
data16
ds
mov
cltd
sbbl
push
aam
jl
enter
push
dec
mov
nop
xchg
stos
or
push
inc
or
rep
aam
mov
div
adc
roll
pop
adc
in
and
sbb
cmc
stc
cmp
xchg
cmpsl
clc
cmp
and
rcrb
std
push
ret
or
cli
lret
xchg
pop
mov
mov
cmp
or
push
scas
insb
lock
sub
jae
lea
ret
shlb
fldenv
bound
push
sub
pushf
or
push
mov
clc
popa
movsl
out
fdivs
inc
pop
mov
outsb
addr16
les
add
in
sbb
pop
mov
add
aas
lahf
push
imul
ficompl
sarb
xchg
shl
fs
shlb
incb
xchg
pop
into
mov
int
or
test
lea
mov
cmp
mov
or
bound
shr
jp
xchg
rcl
pop
mov
clc
xor
mov
push
ljmp
stc
dec
mov
sub
test
data16
sbb
call
adc
out
jbe
and
mov
sub
adc
ljmp
inc
imulb
xor
loop
pop
push
mov
out
mov
or
test
pop
and
sub
cmp
pusha
dec
mov
imul
sub
jae
cmc
fcomps
lahf
ficoml
pop
pop
stos
or
cli
movsb
sarl
icebp
repnz
loop
pop
ljmp
and
mov
pop
dec
push
lods
arpl
loope
jns
jb
mov
jp
aaa
sbb
cli
or
js
popf
ss
lret
and
add
insb
cmp
pop
les
add
in
xchg
sub
pop
xor
mov
ret
or
out
cmp
mov
outsl
sti
dec
add
jmp
repz
std
popa
js
pop
lahf
pop
and
stos
sbb
xchg
pop
in
xor
sbb
ja
shll
cmc
imul
push
outsb
popf
inc
dec
and
sub
push
aas
mov
push
jg
push
add
mov
mov
inc
add
pusha
scas
mov
insl
cmp
addr16
imul
sbb
iret
jge
testb
dec
ret
sbb
repz
xchg
aaa
adcl
xchg
push
int
ret
sar
jne
jmp
xchg
mov
push
fstps
add
leave
ret
mov
icebp
subl
sbb
fs
sarb
push
sub
lock
sti
mov
addl
movsb
jp
pop
rolb
sub
enter
pusha
insl
dec
mov
xor
dec
je
mov
ljmp
jno
in
pop
mov
in
and
sti
out
movsb
push
shll
mov
stos
fwait
scas
nop
enter
and
jo
popf
cmpsb
lcall
out
cmpsb
dec
xor
shlb
push
dec
jl
in
mov
gs
fwait
das
push
ret
dec
subb
pop
lret
inc
sbb
call
and
sbb
scas
rep
mov
ret
xchg
in
fstps
inc
jl
mov
jle
sbb
mov
mov
dec
push
outsb
or
andl
mov
scas
out
inc
test
mov
scas
sar
mov
adc
insl
dec
jg
pop
or
pop
ret
xlat
jo
jecxz
sbb
fnstenv
les
pop
iret
lahf
ret
fwait
mov
dec
xchg
cmpl
add
inc
cs
fs
sbb
inc
inc
mov
xor
lahf
leave
mov
push
cmp
xchg
adc
mov
ret
popf
hlt
icebp
in
repnz
pop
jne
jne
or
jle
out
rorb
outsb
pop
inc
jnp
jns
adc
inc
pop
lahf
sti
and
xchg
js
aad
push
xor
mov
rcll
and
les
test
adc
gs
mov
jne
jmp
cmp
add
xchg
xor
push
cmp
sub
lock
push
sahf
loop
pop
test
push
int3
shlb
jbe
mov
sub
adc
push
neg
pop
out
inc
sub
mov
pop
test
cmc
sub
in
xchg
push
dec
inc
inc
pop
push
jnp
and
mov
pop
fwait
jno
pop
cld
stos
jecxz
jmp
push
mov
adc
add
int3
loope
adc
arpl
cltd
je
fsts
les
or
ret
fmuls
testb
adc
pop
push
or
cmpb
lret
mov
pop
jle
out
mov
ret
cli
jl
lahf
sarb
inc
lret
jo
pop
mov
xchg
fwait
in
bnd
cmp
test
negl
jp
out
nop
xor
fdivl
or
hlt
lods
mov
and
inc
mov
ficoms
or
jp
enter
scas
mov
lock
out
loopne
pushf
push
dec
int
jle
aad
push
arpl
dec
add
cmpsb
inc
andl
roll
out
aaa
lods
jl
mov
shrb
jb
add
push
dec
cmp
mov
cmp
sbb
or
cmpsb
js
cld
or
jmp
ret
pop
loope
call
lea
pop
push
std
sarb
dec
or
scas
jle
lcall
cmpsb
test
dec
mov
pop
icebp
fs
sub
lock
fwait
out
mov
jle
jg
push
int3
cltd
mov
mov
ret
inc
cs
xor
bound
cmp
addl
mov
add
mov
push
push
das
out
push
test
sbb
leave
xchg
shrb
divl
int3
mov
fs
push
iret
rcrb
out
mov
sub
sbb
inc
xchg
js
lahf
in
mov
lods
inc
xlat
or
aas
or
js
test
sbb
lds
mov
arpl
inc
pop
sbb
and
stos
and
push
mov
dec
mov
mov
hlt
bound
in
jno
in
imul
stc
fbld
in
pop
ret
pop
into
call
fcomp
mov
xchg
in
mov
xchg
out
enter
js
adc
movsl
cltd
daa
sbb
dec
jge
mov
push
sarb
mov
xchg
out
push
scas
mov
or
fadd
xor
jns
mov
loopne
sub
dec
xchg
xchg
jae
push
lcall
test
mov
sbb
ds
mov
push
sub
xchg
xchg
dec
pop
dec
pop
fdivrl
jnp
lret
ja
push
mov
call
mov
mov
sub
stos
std
dec
ret
xlat
pop
mov
adc
jmp
arpl
js
cltd
cmp
aam
stos
push
cld
fmul
insb
into
inc
ss
adc
loopne
push
pop
xlat
rorb
jne
jo
xlat
adc
faddl
sub
jmp
js
rcll
xor
mov
xchg
push
pop
les
and
enter
call
flds
repnz
sub
mov
mov
ret
mov
cmp
int3
repnz
andl
mov
mov
mov
ds
mov
pop
rolb
jecxz
inc
cmp
mov
mov
cmp
adc
stos
xor
outsl
lds
popl
jecxz
movsb
imul
scas
mov
jl
repnz
jno
xchg
adc
loope
mov
mov
leave
je
inc
outsl
mov
cs
jnp
out
sbb
sub
addr16
and
fwait
out
shl
mov
or
mov
mov
pop
orl
pop
cmp
mov
dec
aas
mov
jmp
jg
pusha
imul
jp
cmp
imul
ljmp
sbb
push
dec
mov
leave
cmp
in
adc
mov
pop
adc
jmp
in
pushf
scas
data16
in
mov
mov
cmpsb
xor
pop
cwtl
rolb
nop
andl
xor
jb
inc
adc
jo
cmpsb
repz
pop
lcall
xor
rcrl
jno
bnd
sbbb
into
jmp
inc
and
js
xlat
xor
out
test
cmp
ja
repnz
push
push
jb
pop
inc
sub
jb
lds
orl
js
mov
mov
mov
enter
sbb
add
test
xchg
mov
mov
lock
shll
inc
mov
inc
pop
in
xchg
mov
fs
sub
adc
push
jmp
arpl
nop
mov
or
adc
jo
adc
jne
pushf
popa
xor
jo
xchg
subl
jg
cmpsb
movsb
pop
pop
cmp
repnz
jl
movsb
xorl
xor
cmp
inc
sbb
mov
push
dec
push
push
aas
mov
dec
bound
and
jo
cli
movsl
jg
sbb
lcall
sbb
or
mov
in
out
test
add
fsubs
int
aas
pop
push
es
mov
or
pop
outsb
jae
dec
cs
movsl
and
arpl
jbe
xchg
sbb
mov
push
fs
jmp
pop
mov
mov
jle
jmp
push
or
add
je
fwait
or
fs
js
or
out
loopne
loope
rcl
dec
cmp
mov
push
add
mov
mov
and
push
jae
dec
sub
lret
ss
mov
imul
inc
xor
sti
aas
xor
mov
roll
mov
inc
adcb
cmp
push
push
xor
arpl
movsb
pusha
sbb
sub
jmp
xchg
sbb
dec
xor
add
and
add
xchg
jo
sbb
adc
sub
out
xlat
dec
sbb
jp
insl
adc
pop
fistps
in
test
inc
xchg
push
xor
adc
in
push
push
and
lea
ror
pop
movsb
xor
sub
aaa
popa
out
icebp
out
push
cmp
sub
sub
jl
gs
and
sbb
clc
sbb
jns
jge
add
int3
repnz
sbb
das
in
insb
jg
int
cld
nop
subb
jns
cmpsl
lods
inc
loop
aam
inc
stos
sbb
stc
mov
jbe
loop
or
icebp
in
sar
ss
pop
ss
mov
mov
adc
dec
test
or
lock
add
mov
nop
mov
dec
and
adc
xchg
scas
inc
call
mov
jb
jns
fisttpl
cmpb
push
lret
inc
divb
adc
push
std
leave
and
data16
emms
gs
in
mov
mov
scas
das
xor
lea
das
inc
lea
sbb
jns
iret
dec
cmc
arpl
lret
cmp
into
push
inc
adc
fcomps
and
ljmp
or
repz
fnstsw
pop
mov
pop
mov
cmp
mov
adc
push
std
jecxz
aam
or
ja
mov
add
gs
mov
xchg
cmpsb
fadd
dec
das
shlb
jecxz
mov
and
fnsave
and
push
cmp
test
shlb
popa
insb
or
cli
mov
out
iret
jge
idivl
pop
push
outsl
ret
bound
nop
mov
mov
cmp
aas
scas
shrl
push
mov
pop
adc
or
inc
out
lcall
fcmovb
jnp
cs
cmc
arpl
int3
sahf
fnstcw
sbb
inc
push
cwtl
jb
xorb
sub
jns
sbb
out
xor
adc
ds
dec
inc
or
dec
or
jge
inc
outsb
mov
inc
dec
adc
mov
xor
push
daa
pop
popf
rcr
push
fbstp
mov
mov
out
nop
mov
mov
imul
inc
pop
hlt
es
jb
cmpsl
mov
les
jns
sub
ja
shll
jns
arpl
das
inc
pop
sub
test
leave
mov
lea
add
cmpsl
xor
or
popf
push
sbb
jmp
mov
iret
iret
sub
pop
pushf
cmp
sbb
mov
aad
cmp
js
cmp
mov
sub
xor
jg
sbb
adc
lcall
ljmp
mov
push
inc
add
mov
aas
lea
push
enter
shl
inc
mov
sbb
cmp
cmpsb
lock
icebp
sbb
ds
inc
clc
es
iret
cmp
push
repz
jg,pt
push
sahf
jmp
cmpsl
lret
movsb
stc
mov
xchg
bnd
or
cmp
cld
cs
cmp
leave
dec
je
push
inc
jecxz
mov
and
dec
inc
out
or
fsts
push
mov
xchg
mov
push
add
frstor
inc
aaa
fisubl
adc
pop
pop
stos
or
push
push
mov
scas
cmpsb
ror
inc
or
notb
fnstenv
addr16
mov
xlat
clc
js
testl
leave
pushf
rcrl
out
mov
mov
mov
mov
mov
jae
and
movl
sub
and
add
nop
mov
lods
je
sub
sub
clc
out
clc
pop
sar
adc
stc
mov
sub
push
es
mov
mov
ds
push
popf
lea
sarb
fsubrl
sub
ss
lods
mov
pop
add
pcmpgtw
mov
xchg
inc
fwait
lret
pop
sarb
sub
das
popf
sub
xchg
loope
fisubrl
dec
push
mov
inc
sti
xor
cmpsb
cli
xor
jo
xor
movsl
rorl
jno
dec
jge
mov
sub
sahf
cmp
jb
push
cmp
data16
inc
push
sbb
test
inc
imul
out
lret
push
mov
adc
cltd
test
or
loopne
inc
dec
clc
sbb
or
jge
cmpsb
pop
inc
jnp
xlat
in
imul
adc
test
ret
movsl
push
loop
aaa
repnz
call
cld
jo
cmp
pop
lahf
loopne
dec
cltd
movsl
jmp
mov
inc
pop
into
mov
cwtl
xchg
pop
aas
fisttpl
lret
add
jae
adc
ss
and
cmp
into
insl
out
fdivl
daa
xor
daa
movsl
lods
inc
ljmp
sahf
jg
xchg
fldenv
mov
sahf
push
adcl
ret
pop
cltd
mov
nop
imul
js
xor
pop
nop
pushf
sub
xchg
mov
inc
fucomp
xchg
push
jae
aaa
fdivrs
loop
movsb
jge
shll
test
movsl
arpl
jbe
add
out
jb
mov
xor
inc
popl
sahf
add
insb
scas
push
cmp
push
mov
add
cmp
jecxz
arpl
adc
sub
into
pop
add
xchg
lret
sub
pop
xchg
hlt
mov
out
cmp
jp
faddl
mov
pop
pop
push
or
xchg
cmp
loopne
and
mov
lsl
movb
mov
out
mov
cwtl
pop
sbb
mov
outsl
sub
mov
in
inc
lret
shlb
add
js
pusha
faddl
jle
add
mov
int
inc
pop
mov
jns
mov
adc
scas
jne
mov
dec
stos
fdivs
adc
xchg
aad
mov
adcb
ja
inc
xchg
cmpl
adc
push
cltd
hlt
cmpsb
iret
popf
insl
jmp
clc
scas
mov
xchg
xor
cli
leave
in
jle
jne
bound
mov
fdivrs
jno
ds
or
nop
std
rcrl
jmp
and
call
insb
push
test
push
imul
flds
iret
rorb
or
lds
or
push
es
inc
cli
iret
inc
lea
add
add
outsb
jne
aam
and
mov
cmp
fisubs
push
xor
jno
ds
mov
enter
push
add
cmc
adc
mov
gs
test
in
pop
leave
adc
adc
adc
cmp
xchg
std
push
push
jns
mov
sub
push
lcall
addr16
movsb
xchg
mov
fstp
xchg
lds
fwait
jne
ds
jge
in
lret
mov
push
jo
jbe
sbb
pop
cmpsl
mov
movsl
xor
loop
ret
rorl
mov
pop
mov
iret
int3
xor
mov
ffreep
loope
fcompl
xor
pop
insb
jnp
adc
popa
xor
mov
pop
test
dec
out
sbb
lods
sbb
iret
shl
cmc
nop
lret
mov
cld
mov
in
mov
scas
repz
pop
fisubrl
shrd
adc
andb
popa
enter
daa
xor
or
adc
frstor
je
cmpsl
or
adc
pop
sbb
popa
fwait
xor
test
inc
mov
adc
xor
cltd
dec
pop
enter
scas
test
add
enter
in
push
inc
cli
sbb
int3
inc
rorb
xchg
mov
out
push
adc
mov
mov
xchg
inc
xchg
fmuls
pop
fstpl
sbb
pushf
mov
inc
mov
aaa
push
adc
outsb
mov
pusha
aam
cmp
and
or
stos
loopne
idivb
add
cmp
das
in
stos
jo
add
mov
or
sbb
xor
mov
dec
mov
insb
sbb
sub
xor
sub
hlt
mov
mov
mov
cmp
in
dec
or
jl
repz
push
iret
adc
das
out
lds
xor
cld
inc
inc
dec
cli
dec
mov
and
inc
dec
cltd
push
mov
cmpsl
pop
orb
inc
add
and
cmpsb
shr
in
cltd
jp
test
jl
mov
mov
or
stos
mov
xlat
test
mov
repz
addr16
pusha
mov
xchg
aam
sbb
add
xchg
in
and
mov
ljmp
arpl
fiaddl
xor
xor
xor
adc
rolb
dec
adc
in
lods
xor
sbb
jne
mov
adc
jecxz
out
xchg
stos
xchg
repz
daa
jnp
shl
sub
cmp
add
scas
fiadds
fstpt
cmp
cli
movsl
leave
add
insl
mov
hlt
mov
fldenv
sub
ljmp
aaa
stos
ja
add
mov
mov
cmc
cmpsl
aad
mov
inc
adc
enter
stos
ret
cmp
repnz
in
push
loope
xlat
mov
aad
aam
push
push
scas
addr16
fidivrs
jecxz
cmc
mov
push
mov
xchg
sbb
dec
in
aaa
cmpsl
push
movb
mov
sub
xchg
pop
or
scas
lret
cmp
xchg
ds
add
pop
ljmp
xlat
lret
inc
mov
add
push
in
frstpm(287
add
xlat
mov
cltd
cmp
stc
jae
add
sub
xorb
fwait
mov
les
cwtl
jnp
push
orb
push
fs
test
push
sahf
test
sub
jae
adc
sbb
inc
cs
scas
test
or
lods
xor
push
mov
pop
stc
out
pop
mov
xor
scas
es
push
imul
gs
es
xor
xchg
adc
test
push
push
jb
scas
jp
mov
sbb
sub
lock
mov
into
lea
push
mov
pop
scas
loop
lods
rorb
and
sub
outsb
mov
inc
xchg
int
hlt
bound
repz
mov
popf
inc
imul
adc
out
mov
cli
mov
push
insl
out
insl
adc
mov
push
sbb
bt
pop
stos
or
dec
pop
imul
mov
push
add
dec
push
cmp
xor
aam
sub
adc
sahf
xor
fistps
adc
testl
fcompl
jge
adc
add
mov
push
xor
mov
subb
xchg
and
pusha
stos
pmaxsw
lock
inc
push
add
sti
xor
xchg
push
ja
cmpsb
and
inc
push
add
das
daa
je
scas
mov
ss
push
xor
mov
cmp
add
fisttps
outsb
iret
jl
pop
push
jbe
movsl
clc
pop
pop
loope
cmp
push
out
add
and
or
xchg
pop
inc
mov
enter
mov
sub
leave
das
out
insl
fimuls
dec
out
data16
jp
in
sti
mov
test
or
into
in
inc
jg
cmp
and
push
dec
inc
push
cmpsl
push
or
jo
imul
hlt
inc
sbb
lahf
xor
scas
shr
in
mov
fistpl
mov
jmp
jnp
cli
jbe
xor
ss
pop
or
mov
fs
add
push
es
stc
rol
das
jb
sbb
lods
ja
cmp
addr16
fs
inc
out
ds
scas
pop
outsl
and
pop
out
cmp
arpl
lret
insb
pause
xlat
lahf
out
daa
dec
iret
or
fdivrs
aas
and
lds
fistpll
push
pushf
stos
popf
divb
lods
push
jns
pop
aas
pop
push
jmp
inc
adc
pop
add
bound
xchg
or
push
lret
fldpi
pop
jne
push
push
dec
pusha
or
fstpt
lea
push
mov
mov
adc
js
inc
cld
jne
cmp
fists
dec
lahf
into
mov
push
sbb
cmp
adcl
inc
mov
cmpsl
test
sbb
loope
outsb
mov
mov
add
mov
roll
cmpb
imul
arpl
sub
mov
jg
mov
test
clc
jp
push
push
int
ret
or
mov
pop
scas
sbb
scas
repz
sub
push
daa
cwtl
ljmp
fxch
and
fsubrs
daa
sbb
cmp
dec
add
sbb
loopne
pop
mov
and
cmpsl
or
add
push
cli
test
add
loope
pop
out
push
and
add
hlt
cs
or
dec
inc
test
test
gs
sbb
insl
or
movsb
sbb
sub
xchg
mov
in
sub
mov
jl
sti
in
pop
cwtl
sub
jmp
adc
mov
fbld
or
lret
aam
dec
mov
lock
mov
mov
ror
jecxz
aad
out
in
incb
insl
shrb
pop
mov
mov
movsl
add
push
adc
push
fdivs
sbb
jge
ljmp
test
or
int
push
dec
loopne
pop
push
rclb
cmpsb
xchg
jle
lcall
movsl
adc
popa
cmp
loop
mov
cmp
clc
out
std
test
xor
inc
int3
xor
out
lret
repnz
aad
push
mov
and
dec
mov
jns
adc
ss
in
adc
xor
adc
lret
inc
sbb
xor
addr16
push
push
bound
mov
sbb
lahf
data16
xor
dec
stc
jns
or
mov
dec
inc
pop
jge
std
aam
test
cmp
xor
fisubrs
xor
dec
jno
mov
mov
rorb
std
enter
aam
rorb
in
enter
cmp
jo
iret
cmpb
aad
mov
into
mov
mov
cltd
jmp
or
lods
sub
aam
and
cmc
lahf
mov
and
shrb
sbb
neg
cmp
or
adc
pop
out
inc
fmull
jg
leave
jnp
push
loope
lea
or
je
aad
push
rcr
xor
int
fpatan
dec
xchg
out
jns
ljmp
pop
int3
lods
cmp
movsb
sbb
mov
pop
sahf
xchg
in
addr16
pushl
push
daa
push
faddl
xor
mov
je
mov
scas
pop
mov
cmp
jno
sti
xor
add
xor
inc
and
iret
testl
jmp
in
repz
bound
addr16
pop
addl
and
mov
mov
in
cmc
fadd
sub
jmp
mov
mov
loop
dec
push
xor
add
pusha
lods
sahf
inc
push
pop
daa
les
add
pusha
scas
sti
mov
ja
adc
sub
sub
adc
ret
add
dec
repz
inc
lock
ds
mov
jno
add
adc
testb
xchg
sub
add
das
sub
inc
js
pop
das
mov
stos
std
jb
fisubrl
pop
scas
dec
mov
mov
aad
inc
test
sub
and
ja
mov
ficomps
mov
pop
bound
mov
xlat
xlat
fwait
push
les
mov
xchg
jle,pt
fisttpll
sbb
mov
cmp
lahf
jge
dec
imul
mov
cmp
orb
out
xchg
out
mov
jbe
xor
add
pop
aaa
outsl
inc
mov
sub
inc
mov
cmp
jo
xchg
fwait
outsb
push
push
pop
push
pop
cld
cmp
pop
cmp
out
jp
adc
adc
xor
sub
dec
cld
cmp
pop
mov
xchg
jbe
imul
pop
aaa
jmp
ljmp
cmp
pop
xchg
jp
mov
movsl
add
dec
or
lret
cmp
outsl
aaa
pop
bnd
pusha
sbb
mov
pop
insb
inc
es
pop
sub
lcall
fdivr
push
lods
add
fs
fdivrp
mov
rol
jp
icebp
mov
mov
in
inc
and
jb
ja
and
lret
icebp
xor
jl
imul
adc
jp
lock
or
pusha
jno
lcall
into
shrb
pop
nop
in
jne
inc
das
push
push
fdivrs
cmpsb
in
jge
ds
xchg
aaa
mov
int3
or
cmc
sahf
std
add
leave
xor
jle
stos
mov
fucom
add
pop
loopew
outsb
jbe
mov
aam
cli
sbbl
pop
repz
jae
icebp
aaa
rcll
adc
arpl
ljmp
cwtl
popf
pop
shlb
inc
pop
adc
jp
mov
and
out
push
dec
push
pop
mov
sbb
jmp
je
inc
mov
add
pavgw
data16
insb
idivb
in
dec
jae
cli
iret
lock
popf
push
sub
loopne
leave
incb
std
push
sub
sti
in
data16
dec
hlt
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
add
adc
or
jne
mov
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
mov
mov
ret
mov
jmp
ljmp
hlt
out
adc
mov
jnp
cmp
xor
loope
xchg
cmp
outsl
push
jbe
aaa
xor
mov
pop
xlat
push
push
fldl2t
push
xchg
and
outsb
inc
gs
sub
dec
ret
fists
inc
in
stos
scas
call
add
ja
xchg
popa
shrl
test
dec
push
nop
int3
flds
mov
push
xor
sub
dec
pop
sub
out
fs
sub
scas
add
xchg
mov
repnz
js
inc
orb
out
scas
in
push
jbe
pushf
ds
lret
outsb
sbb
xor
aam
decb
in
shll
std
lea
scas
push
lods
sbb
add
or
pop
mov
push
sbb
imull
or
ljmp
push
es
leave
pop
imul
test
dec
sbb
daa
divl
aam
data16
jmp
lret
or
sbb
jbe
lock
in
inc
pop
mov
push
shlb
sbb
lods
pusha
dec
in
sbb
xor
push
aas
sti
stc
dec
or
sbb
mov
xchg
enter
sti
pop
loop,pt
jnp
mov
mov
sbb
dec
into
shrl
es
cmp
mov
sbb
or
jge
xor
adc
xor
lret
dec
and
inc
in
or
pop
repnz
push
push
das
cmp
add
ljmp
xchg
lcall
int
dec
stc
bound
and
or
pop
movsl
xchg
scas
arpl
aas
mov
and
fcmovb
cmp
add
push
jp
dec
adc
mov
mov
push
in
icebp
repz
push
scas
push
sub
mov
lahf
jmp
or
movl
aas
outsl
mov
inc
in
clc
inc
mov
pop
imulb
test
andl
les
mov
mov
shrb
or
pop
push
push
mov
jle
jae
or
cmp
jae
sahf
cmp
jecxz
lcall
xor
je
stos
call
mov
mov
mov
scas
clc
cmp
fwait
or
add
into
dec
shll
scas
xchg
adc
iret
icebp
ret
jge
repz
jecxz
mov
push
in
mov
adc
popf
out
insb
stos
push
adc
mov
sub
add
mov
fcmovnb
lcall
sbb
fists
cmpsb
push
sub
repnz
pop
mov
es
pushf
inc
pop
jmp
pop
push
cmpsl
outsb
push
add
sub
pop
insb
adc
int
test
subb
mov
or
subl
test
lcall
testl
xor
pop
fidivs
fidivrl
pop
jecxz
lcall
das
mov
test
xchg
js
xchg
jne
cld
loope
stos
adc
lods
mov
push
insl
aaa
sbb
ficomps
in
cmpsb
hlt
dec
test
cmp
aaa
xor
cmp
aam
in
adc
push
icebp
mov
jae
and
xchg
adc
cltd
sub
cmp
or
dec
lret
pop
jae
dec
pop
jo
jo
cmp
mov
jmp
mov
mov
mov
cmc
imul
out
fwait
or
stc
cmc
out
negb
push
xor
addr16
dec
ljmp
cltd
cmc
loopne
icebp
lcall
mov
fsubrp
int
inc
fsubl
mov
pop
lcall
xchg
adc
add
insl
sub
flds
mov
lret
mov
iret
sti
negl
shlb
jmp
bound
bound
sbbb
jo
fld
push
pusha
jb
jl
aad
ss
mov
das
jo
fnsave
mov
rcrl
negl
negl
push
fmull
push
sbb
insl
xchg
cmp
pushf
dec
jecxz
push
stos
jns
je
daa
xor
adc
negl
mov
jb
pop
test
test
pop
nop
movsb
push
insl
jge
push
inc
rcr
mov
sub
add
je
pop
dec
movsl
rcr
int
xchg
ljmp
dec
pop
or
inc
mov
mov
in
fbstp
arpl
mov
or
dec
or
aam
jae
mov
fsub
rcll
xor
jne
das
lahf
outsb
push
inc
jg
xchg
outsb
fistps
pop
shll
das
ljmp
ret
subl
xchg
dec
mov
or
lds
mov
clc
rorl
mov
sbb
insl
pop
loop
aad
pop
pop
push
jnp
jg
movsb
rcr
or
push
sbb
test
sbb
test
lods
iret
cmp
in
pop
neg
stc
movsb
das
adc
push
inc
mov
cmp
mov
outsl
sti
mov
test
xlat
dec
mov
cli
out
cmpb
mov
xchg
gs
sarb
mov
je
jae
mov
push
push
sbb
out
pop
or
sbb
andb
adc
push
int
pop
xor
or
jle
xchg
les
mov
sbb
mov
or
mov
inc
xchg
dec
cltd
lea
pusha
pop
sbb
xchg
push
cltd
adc
imul
mov
mov
fbstp
stos
mov
sbb
out
sti
movsl
lcall
cmp
xor
rorl
mov
es
pop
call
sti
sbb
loopne
sub
in
mov
pop
fcompl
pop
sbb
xor
lods
fidivrs
sbb
cmp
fiaddl
xchg
adc
pop
sbb
lds
dec
in
mov
xchg
jne
das
mov
xchg
std
movsb
lret
mov
fbstp
andb
push
arpl
adc
inc
or
loope
pushf
jno
sbb
sbb
sbb
aad
fimuls
push
jp
mov
cltd
aas
jecxz
pop
aas
out
shrl
pop
lods
iret
pop
in
xor
adc
cmpsb
sub
jns
push
or
push
add
ds
xor
dec
shlb
gs
iret
ffreep
sbb
and
cwtl
and
cmp
pop
xchg
mov
jno
mov
push
pop
in
int3
lret
jl
daa
popa
push
rorb
mov
mov
sar
inc
mov
mov
movsl
mov
ret
frstor
test
mov
pop
in
scas
hlt
fsubr
mov
iret
cmp
or
dec
pushf
adc
js
mov
icebp
lea
shl
sbb
mov
ret
mov
hlt
adc
je
mov
pop
xchg
iret
xor
leave
hlt
outsb
into
adc
mov
das
sub
cltd
out
inc
fcomps
sub
leave
std
iret
and
or
in
rorl
pop
inc
xor
jbe
lock
jmp
pop
or
roll
adc
mov
stc
aas
pop
jnp
rcrb
and
fildl
push
jbe
call
sahf
out
fwait
adc
add
sbbl
mov
fcomps
lahf
mov
popa
push
hlt
xor
jbe
push
orl
mov
add
int3
shll
push
xor
outsl
or
rcll
or
inc
jl
jge
add
jecxz
xor
xor
xchg
xlat
je
adc
aaa
xchg
rcrl
push
or
fdivrl
xchg
call
pop
movsl
movsl
gs
outsl
pop
loop
push
adc
ljmp
push
cmp
push
ds
iret
push
pop
rcrl
jg
adc
ret
addr16
pop
xor
test
push
frstor
aas
mov
call
add
repz
push
mov
inc
add
sbb
fwait
and
cmpsl
cmp
jecxz
rol
lahf
xchg
lahf
xor
push
cmp
fstps
cld
add
add
jecxz
sarl
jp
mov
div
push
mov
testb
fistpl
mov
lock
daa
in
fisubl
xor
mov
mov
xchg
dec
cmpb
and
sub
ja
das
sarl
imul
or
and
sbb
repnz
jecxz
aad
sub
push
aad
addr16
mov
inc
mov
pmuludq
and
call
movsw
cmp
xorb
cmpsb
add
lods
pop
push
adc
adc
mov
mov
xchg
lods
insl
or
xor
test
in
add
xor
ret
jno
scas
xorl
jno
mov
xor
pop
inc
inc
cmp
test
int3
out
lock
or
incb
add
mov
push
dec
outsb
fcomps
in
sahf
adc
repz
scas
xor
jl
add
push
sbb
mov
xor
lcall
push
clc
sub
mov
test
cmp
scas
push
inc
lahf
push
mov
mov
jmp
aaa
mov
iret
loopne
popa
pop
ljmp
enter
mov
xor
loope
add
daa
or
ret
ljmp
dec
push
sub
xchg
inc
subb
add
push
dec
lods
jl
lahf
sub
mov
es
push
lret
mov
pop
lods
fisttpl
pop
insb
xchg
movb
mov
jge
mov
xchg
mov
mov
adc
adc
lea
repz
roll
or
xchg
jns
es
das
mov
nop
dec
icebp
sbb
mov
je
repz
loop
mov
xchg
rorb
push
jl
mov
jne
pop
scas
ret
xchg
pop
xchg
mov
test
out
and
sbb
insb
ret
popf
repz
or
fsubs
aaa
push
add
pop
adc
pop
or
and
bound
mov
icebp
mov
cmp
arpl
stos
xor
dec
and
xchg
fcmovu
xchg
je
jmp
imul
and
and
shll
mov
mov
lds
pop
inc
cld
fidivl
xor
and
mov
adc
mov
mov
mov
or
dec
xchg
shl
lea
jns
cs
xchg
xor
fdivl
adc
add
insl
push
test
js
jo
sahf
dec
inc
mov
xchg
mov
mov
ss
or
dec
mov
lahf
pushf
aam
or
inc
add
and
inc
lret
dec
sbb
sbb
and
add
jnp
fdivs
pop
xchg
push
outsl
pop
mov
inc
mov
std
sub
mov
lret
shr
fimuls
adc
push
in
pushf
cmpsb
fistl
dec
popa
std
sbb
fsubrl
pushf
scas
jge
sub
lods
jb
mov
jg
mov
rclb
mov
out
fidivs
fdivl
add
sbb
movsb
shlb
add
fisubrs
or
mov
pop
mov
dec
sbb
shrl
adcb
clc
or
and
mov
pusha
bound
enter
cli
cld
jg
and
leave
lret
pop
cld
cmp
cli
rorl
lods
mov
and
push
mov
push
pusha
jno
push
inc
in
stos
sbb
fstl
sahf
inc
pop
jg
cld
adc
dec
dec
jo
lahf
in
in
mov
add
loope
scas
mov
call
nop
lahf
popa
icebp
lret
sub
es
lods
call
lods
imul
dec
fdivrs
hlt
xchg
cltd
pop
out
xchg
jmp
dec
cmpsl
sbb
add
test
into
test
movsl
jae
jl
xchg
cld
clc
scas
orb
cmp
dec
adc
sub
xchg
loop
pushf
ss
pop
pop
fisubl
lret
sbb
outsl
icebp
pop
ja
pop
xchg
adc
pop
pop
and
push
test
stc
mov
clc
je
xchg
scas
cmp
fnstcw
jnp
pop
sarb
testl
xchg
jns
push
mov
test
imulb
rcrb
cmp
xor
ret
sti
popa
mov
int3
out
add
cmp
int
mov
dec
into
into
cmp
mov
pop
xor
int
add
and
in
cmp
jg
fildl
test
lret
and
lods
roll
adcb
lcall
incl
cmc
jbe
sub
inc
sub
in
rcl
inc
mov
mov
adc
lahf
cmp
loop
inc
loopne
in
mov
pop
push
repnz
enter
in
jno
fildll
cmpsb
push
and
hlt
adc
sbb
add
sbb
inc
sarb
push
jnp
cld
shlb
jns
jg
icebp
loope
das
cmp
mov
xor
loopne
rolb
fnstenv
adc
jae
ret
sub
xor
push
lcall
out
fcomip
push
xor
loopne
push
or
les
in
shlb
mov
fucom
sti
das
xchg
jne
lea
push
out
ret
dec
mov
and
aaa
cmc
xchg
hlt
xchg
push
push
push
add
lret
loope
shrl
lods
fwait
enter
xlat
scas
push
jns
lods
pop
jns
divb
in
cmp
pop
pop
mov
ds
adcl
jo
mov
test
cmpsl
or
test
cmp
sahf
mov
pop
push
cmp
mov
mov
mov
std
inc
dec
and
pusha
lods
jl
xchg
pop
outsb
in
mov
divb
cmpl
daa
rcl
shrb
or
lret
ret
sub
xchg
xchg
and
ljmp
cmp
fsubrs
cmp
jo
jb
sub
es
mov
add
mov
sub
pusha
popa
cmpsl
shrl
stos
out
mov
or
in
sbb
mov
pop
push
xchg
lods
pop
fiadds
nop
pop
mov
inc
xor
jg
ret
testl
leave
xlat
icebp
add
in
push
orl
clc
dec
jno
aaa
lock
scas
pop
shl
in
iret
bnd
inc
cwtl
data16
xor
ss
pop
mov
stos
sub
ljmp
pop
xorl
dec
or
rcrb
push
push
mov
and
or
or
xchg
std
xchg
push
jle
or
sarl
popa
outsl
sub
fwait
mov
shl
arpl
or
add
sbb
cmc
or
and
push
push
aaa
mov
adcb
lret
aam
in
mov
jno
scas
repnz
sub
je
push
cltd
es
jg
pop
lret
lret
int3
pop
mov
je
dec
popf
fsubl
xorb
popa
popf
outsl
add
mov
mov
into
add
or
shr
and
mov
dec
dec
jb
xor
arpl
pop
iret
test
sti
jmp
jecxz
mov
xor
push
xchg
jb
icebp
stos
lea
ret
loope
bound
fs
jb
pop
stos
mov
push
jns
popf
mov
mov
inc
and
pusha
cmpsb
mov
test
mov
rcl
mov
iret
xchg
mov
test
sbb
mov
lahf
jle
les
adc
xchg
repz
ret
aam
xchg
or
sub
mov
shrb
adc
rcrl
popl
xchg
inc
int
xchg
pop
jle
scas
out
daa
mov
lods
add
dec
inc
arpl
mov
dec
sub
jl
push
shrl
xchg
ficoms
push
mov
push
mov
cmpsl
dec
push
jecxz
sahf
das
enter
jno
pop
mov
ljmp
pushf
aaa
outsb
out
mov
add
mov
clc
and
push
mov
mov
pop
mov
cmp
sar
pop
std
adc
mov
inc
fstp
adc
push
out
out
push
push
mov
jl
inc
leave
lea
outsl
clc
shrb
rcl
mov
cli
enter
sub
lret
test
jl
or
neg
mov
les
sub
pop
mov
test
loope
in
mov
sbb
adc
inc
std
dec
jle
adc
or
add
push
ret
or
ds
fwait
push
push
or
rcrl
cmpsb
push
scas
xor
in
mull
int
shll
in
sub
lea
mov
lret
hlt
mov
mov
pop
cmpsb
cmp
mov
mov
je
and
hlt
in
dec
adc
sub
sahf
cmpsb
and
sbb
push
xor
pusha
mov
cmp
cli
sub
stos
push
testl
lods
dec
xor
test
addr16
or
iret
scas
or
pop
push
mov
test
stc
mov
push
sti
daa
iret
int3
in
fs
lret
jae
sbb
add
add
iret
out
xor
and
inc
adc
pop
cmc
fstl
dec
outsl
pop
jnp
mov
jg
outsb
out
in
mov
fists
jl
gs
xchg
jecxz
jg
in
icebp
push
fisubrl
cmp
or
cmp
lods
test
dec
cwtl
rorl
add
adc
and
cmp
aas
sbb
cmp
lahf
repnz
loopne
sub
jo
and
or
fdivl
ror
jb
les
or
or
mov
out
lods
sbb
cmp
das
js
push
lods
imul
dec
ja
dec
jg
mov
les
ljmp
clc
lret
in
inc
xor
pop
or
into
pop
in
outsb
aad
mov
rolb
mov
mov
mov
test
mov
sbb
jle
adc
push
shlb
and
mov
fcomps
and
jecxz
pop
push
mov
in
stos
aaa
jae
add
data16
pop
sahf
or
les
xor
hlt
adc
jnp
push
call
leave
mov
push
adc
and
xlat
movsb
xor
je
push
push
in
stc
or
lret
push
cmp
adcl
movsl
sub
cmpsb
and
inc
stc
pop
lods
in
pop
sbb
mov
mov
inc
cwtl
xchg
and
iret
push
mov
rcrl
pop
pop
rorl
sbbb
push
mov
aaa
orb
push
jae
js
inc
insl
mov
xchg
add
fwait
cmp
adc
or
dec
cmp
clc
adc
leave
pusha
int
enter
lret
fdiv
lret
dec
dec
push
xchg
shrl
out
aas
popf
rcrb
fists
cld
add
int
rcrl
test
push
enter
jg
sbb
adcb
and
ret
mov
inc
cmpsb
fneni(8087
pusha
inc
jmp
in
in
or
dec
push
pop
ds
sbb
inc
fnstenv
jmp
pop
cmc
movsb
pop
inc
mov
popf
ret
ja
adc
lock
arpl
sub
inc
ja
lds
repz
and
cmp
cld
add
or
pop
push
shll
pop
jo
jmp
jl
xor
jb
sub
fbld
rorl
fwait
adc
push
ret
cmp
outsb
movb
out
sar
and
sub
cmpb
hlt
lret
arpl
sub
xchg
xchg
mov
js
xorb
test
out
test
shl
sub
lahf
clc
or
add
pop
adc
ret
inc
mov
hlt
add
aam
pushf
pusha
cmp
mov
pop
jmp
and
inc
lahf
andb
ret
xchg
shll
loope
sarl
push
sub
mov
ja
fcomip
cmpsl
loop
test
jg
xchg
or
icebp
xor
lock
xchg
stc
fldt
sub
sub
jae
jge
arpl
mov
js
mov
cmpsb
xchg
fsubs
test
lcall
pop
in
popf
mov
repnz
std
pop
stos
fptan
outsl
mov
xchg
int3
shr
in
lods
mov
and
int3
push
mov
test
xor
inc
inc
orb
adc
dec
xor
cmc
cmpsb
scas
sub
scas
loope
jnp
inc
push
jg
xchg
xrelease
jp
pop
pop
sub
lock
adcl
lods
fildl
and
pop
sahf
ja
xor
fs
repz
icebp
mov
inc
dec
aad
iret
xchg
stos
and
adc
out
mov
inc
int3
rcrl
movsl
sbb
nop
xchg
ja
clc
sbb
jl
adc
and
mov
std
and
mov
psubusb
push
aaa
imul
aad
push
pop
loopne
xlat
cld
inc
fwait
xor
jno
cmc
loop
fucomp
jne
sarl
adc
js
adc
sub
mov
std
xchg
fildl
sub
daa
pushfw
lahf
xor
ret
shl
dec
adc
xchg
pop
inc
push
dec
leave
jns
aaa
xchg
lahf
into
loopne
loope
mov
xchg
negl
jno
cmpsb
je
popa
movsl
addb
adc
cmp
test
in
loopne
inc
cmpsl
lea
dec
hlt
hlt
cmp
ret
sarl
stc
ret
inc
popf
pand
sarl
pop
add
std
dec
dec
test
cmp
sub
int
shll
inc
mov
xchg
pop
cmp
je
data16
cmc
or
sahf
xor
or
and
jbe
xchg
iret
mov
dec
mov
fcompl
mov
sbb
mov
cli
jmp
cmp
push
cmp
fisubs
mov
mov
shlb
dec
jae
and
jge
fwait
xchg
call
stos
mov
dec
jne
insb
cli
ficoms
sahf
xor
stos
lret
dec
xchg
dec
push
xchg
subl
inc
add
fildl
in
inc
cltd
xchg
int3
dec
js
dec
test
js
fisubs
jae
shrb
shll
shll
or
xchg
leave
inc
aad
ljmp
cld
addr16
int3
push
xor
in
mov
repz
cmp
mov
inc
mov
mov
call
adc
or
int3
insl
or
icebp
stos
mov
xor
jmp
in
cmp
sbb
mov
arpl
je
push
pop
xchg
in
je
inc
loopne
push
pushf
loop
lock
nop
mov
cmp
sti
mov
pop
in
cmpsl
inc
pop
inc
rorl
out
dec
and
mov
mov
push
ss
cmp
test
popf
pop
or
mov
and
leave
jp
sbb
mov
dec
push
push
push
ficomps
xlat
ja
mov
xchg
adc
cmp
jg
out
arpl
fdivrs
js
outsb
fmull
fsubs
fwait
mov
add
push
lods
push
push
sti
pop
jbe
xchg
sbb
mov
push
hlt
mov
dec
fdivrs
imul
inc
xchg
cmp
or
fidivl
stos
xchg
xchg
pop
adc
movsb
mov
xlat
popf
icebp
mov
call
jl
lea
or
popf
ficompl
add
mov
jbe
arpl
jg
cmp
jns
in
xchg
xchg
mov
scas
sti
mov
lcall
jne
and
cmp
lahf
inc
in
insl
sahf
or
adc
fs
mov
xchg
aam
push
jmp
inc
lret
pop
aaa
sub
jecxz
mov
rcll
fimuls
xor
subl
push
push
dec
mov
std
jmp
lods
fnstenv
mov
mov
jl
dec
and
lods
jl
mov
incl
lods
xchg
test
popf
xor
lods
and
test
aaa
shrl
jbe
or
push
iret
push
jbe
in
xlat
or
das
mov
push
stos
insb
sbb
mov
dec
xor
mov
enter
cmpsl
cmp
lock
push
int3
xor
rcll
ljmp
mov
out
cmp
xchg
cltd
call
inc
push
xor
inc
loope
lret
xlat
sub
jge
mov
xchg
sub
xchg
lods
mov
mov
push
ret
mov
dec
sub
lea
lret
popf
lahf
adc
xlat
pop
test
jns
loope
out
lcall
cmp
lcall
cwtl
sub
mov
aaa
xor
pop
repnz
push
sub
xor
mov
cs
xlat
push
les
or
mov
loopne
adc
imul
fldz
or
aad
and
hlt
and
fistpll
xchg
mov
xor
or
sahf
rorl
push
rcrl
mov
je
clc
add
push
stos
aam
jo
fwait
stc
out
dec
mov
sarb
sub
mov
mov
inc
sti
adc
int3
out
arpl
push
mov
fwait
and
rolb
roll
pop
inc
add
inc
xlat
sub
sub
cmpsb
adc
repz
xchg
or
xor
aam
cmp
cltd
into
or
jne
jnp
jno
in
dec
icebp
enter
dec
js
scas
push
adcb
fnstenv
mov
or
xchg
nop
mov
inc
mov
push
cmp
push
pop
xor
or
cli
mov
xor
cmp
out
insb
hlt
in
sbb
cmpsl
mov
shrl
sbb
arpl
rolb
popa
cld
lret
lcall
dec
add
push
inc
mov
dec
jl
xchg
inc
out
insl
call
mov
xchg
je
outsl
nop
xchg
enter
mov
dec
or
daa
xchg
aad
rorb
repz
fisttps
iret
scas
xchg
out
fucomip
jecxz
xchg
and
and
fidivrs
arpl
cmpl
gs
push
fimull
or
mov
hlt
dec
jo
shl
js
inc
inc
fidivs
mov
mov
mov
push
add
iret
xor
cmpsb
mov
test
fmuls
fisttpl
push
and
pushfw
xchg
int3
ret
or
incl
loopne
pop
xchg
nop
pop
and
mov
mov
push
jnp
out
outsb
push
push
and
hlt
std
sti
adc
popa
adc
mov
aam
out
add
lods
ss
jae
jg
lea
sub
inc
sbb
cmc
xchg
pop
leave
xor
jbe
subb
test
divb
jge
mov
fstpl
scas
lods
jno
cld
mov
cltd
rorb
adcb
ja
mov
and
rcrl
shl
das
divb
imul
nop
mov
stos
add
jmp
cli
xor
jnp
mov
pop
xchg
push
out
adc
mov
or
mov
jo
add
jecxz
pop
adc
adc
pop
dec
inc
int3
stos
xorb
mov
mov
cmp
xchg
bswap
mov
ja
clc
mov
stc
xchg
shl
mull
cmpsb
outsb
xchg
xor
sbb
cs
lods
pop
cmp
sub
pushf
push
cmp
cli
or
es
ja
mov
mov
addb
pushf
inc
cmpsl
leave
in
xchg
mov
lds
push
fbstp
adc
mov
pop
pushf
fwait
cmpsb
sbb
adc
cmp
mov
in
rolb
pushf
xchg
push
js
in
dec
movsl
mov
pop
cmp
hlt
pop
popf
push
adc
je
add
movsb
mov
inc
fisttpl
sub
jne
sbb
loopne
cltd
scas
imul
and
pop
inc
add
lret
out
divl
dec
in
insb
and
scas
and
xor
in
repz
data16
sbb
jo
lahf
mov
push
lahf
inc
cmp
dec
lret
dec
out
add
mov
push
inc
jmp
aad
mov
cmp
inc
xchg
test
jb
iret
pop
adc
xlat
jp
lcall
push
arpl
pop
inc
cmp
dec
xchg
mov
pop
push
or
mov
icebp
cmpsl
jne
aad
add
add
push
jns
div
lock
cmp
dec
shlb
scas
xor
push
lcall
setle
add
repnz
stc
stc
leave
xchg
sahf
in
or
push
jecxz
outsl
lret
scas
cld
jb
pop
pop
mov
jp
jp
mov
cmp
out
lock
in
ja
push
in
cmpsl
je
push
jecxz
push
popf
rol
enter
cmpsb
test
orl
or
sub
gs
shr
jo
xlat
add
shrb
inc
sbb
inc
lret
lcall
lods
lods
subb
imul
or
mov
pop
jo
mov
cmc
icebp
or
aad
lcall
jecxz
mov
rorb
fiaddl
and
jle
add
popa
pushf
and
fadd
data16
push
adc
jb
pushf
xor
adc
inc
clc
lock
fstpt
sub
test
jmp
push
test
stos
sbb
fs
xchg
mov
hlt
mov
add
mov
mov
mov
pop
sarl
inc
fwait
addl
mov
aas
or
mov
cmp
mov
sar
out
dec
xor
xchg
mov
mov
jle
mov
mov
movl
jecxz
push
inc
mov
jne
push
and
mov
sub
mov
std
mov
lret
cld
lret
and
imull
insb
mov
stos
lret
in
jmp
aad
mov
fildl
shrb
fld
cmpsb
and
sbb
call
std
xchg
jmp
lea
pop
xchg
in
or
negb
mov
adc
pop
jne
scas
mov
pop
cmp
mov
bound
clc
pushf
mov
popa
cmp
mov
inc
mov
jno
repz
xchg
fistps
mov
dec
cmpl
cwtl
mov
mov
dec
mov
arpl
or
mov
inc
iret
fnstcw
loopne
dec
jbe
icebp
jns
xor
js
loopne
mov
inc
adc
fisttpll
or
push
xlat
ja
es
add
or
adc
or
cmp
push
subl
enter
std
mov
mov
test
mov
xchg
iret
in
out
lock
mov
pop
xchg
mov
push
in
int3
fcmovnu
jns
sahf
adc
add
mov
fcompl
dec
xor
or
pop
jecxz
mov
ret
push
mov
sub
xor
push
mov
mov
sub
add
movl
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
or
movl
push
sub
mov
negl
mov
sbbl
xor
push
mov
add
mov
mov
adc
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
jmp
mov
xor
xorl
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
mov
xor
movl
mov
movl
cmp
jne
mov
cmp
je
mov
mov
cmp
je
mov
mov
mov
andl
mov
xor
add
add
mov
mov
adc
xor
mov
mov
andl
xor
mov
mov
add
jmp
xchg
popa
in
jne
jbe
in
sbb
cld
xor
fmull
jnp
adc
push
scas
dec
sbb
repz
mov
sub
dec
pushf
xchg
push
xchg
mov
add
push
out
les
cmp
push
sub
mov
and
xchg
dec
add
aam
inc
gs
stc
dec
lds
xchg
mov
pop
into
jae
adc
insl
mov
push
and
sbb
pusha
xor
xlat
loop
insb
in
mov
sub
jecxz
sarb
jl
inc
push
adc
inc
lea
adc
scas
clc
inc
push
sub
mov
sbb
mov
mov
sbb
sub
jle
push
mov
jg
ljmp
cwtl
dec
les
mov
ss
mov
push
xchg
loope
xchg
inc
adc
fldt
jno
hlt
and
inc
mov
sbb
pop
dec
fistps
sbb
rolb
push
ret
daa
scas
sarb
aas
and
jle
lcall
jnp
sbb
mov
xor
aad
sbb
and
adc
stos
jmp
xchg
andb
fstps
enter
bound
ret
addr16
loope
mov
popa
ss
add
push
pop
add
add
lods
lods
or
dec
and
repz
xchg
jb
dec
dec
and
xchg
fs
and
cmp
inc
fdivl
iret
xchg
mov
or
mov
jbe
pusha
fucomi
adc
adc
xor
ja
rorb
loope
test
mov
or
shr
mov
stc
mov
lods
inc
add
repz
lret
std
ds
popa
jmp
push
dec
xor
cltd
dec
add
dec
cld
pop
jl
out
inc
cld
shl
xchg
or
add
scas
jl
popw
loopne
int3
les
int3
imul
adc
jbe
push
in
and
in
js
mov
jmp
or
int3
jmp
sub
push
in
scas
stos
mov
scas
clc
fistps
into
call
in
jae
sub
push
dec
and
lret
push
mov
pop
addr16
mov
push
es
sbb
mov
or
pop
rcll
mov
call
int3
scas
cmp
popa
inc
sub
fwait
call
jl
inc
and
pop
adc
push
repz
jmp
insl
clc
cmpsb
add
inc
add
sahf
cmp
test
sub
mov
xchg
mov
mov
jno
mov
and
fidivrl
aad
cltd
or
clc
stc
std
sub
sub
cmpl
or
push
mov
int3
shll
mov
add
dec
fldenv
mov
mov
shll
pop
sub
inc
mov
addr16
shll
in
sbb
sti
andl
outsb
xchg
sbb
fs
fwait
std
push
jno
cmp
cli
dec
into
jl
jge
sbb
inc
xor
pop
cmp
outsb
test
lea
sbb
or
mov
inc
loop
and
mov
fs
add
fsubs
fstpt
in
push
mov
into
pop
xchg
and
mov
xor
loop
or
loop
jl
push
pop
sbb
sub
xchg
sub
out
jns
inc
fst
sbb
xchg
fnstsw
and
add
scas
mov
lret
mov
xlat
cmpsl
lods
sub
cmp
ljmp
pop
lahf
mov
cmpsl
adc
lods
xor
dec
pop
xor
xor
pop
inc
xor
mov
icebp
repz
ret
push
pop
xchg
gs
mov
add
mov
add
sbb
jnp
jg
xchg
mov
nop
stos
push
scas
inc
popf
rcll
cmp
mov
or
test
dec
icebp
push
imul
jecxz
call
sbb
ret
mov
andl
adc
mov
lahf
imul
and
bound
mov
fisubl
popf
aas
add
jmp
pop
and
jo
rclb
add
fs
pushf
std
scas
lea
add
enter
stc
and
inc
ret
fdivl
and
fsubl
pop
mov
fdivl
sub
push
mov
addr16
stos
aas
cld
mov
sbb
lods
push
imul
insb
sub
leave
int3
cmc
in
or
sbb
popa
cmp
adc
mov
mov
pop
das
xchg
out
sbb
xor
fldcw
sbb
das
stc
fsubrp
daa
aaa
sbb
stos
movsb
push
loopne
scas
fldcw
sbb
loop
testl
mov
pop
outsl
cmc
shlb
push
aam
movsl
lcall
outsl
xchg
out
jmp
sub
nop
std
cmp
push
icebp
fadds
pop
sub
mov
int
mov
cmp
pop
add
leave
js
xorl
enter
jo
inc
or
shlb
mov
mov
push
push
in
insl
inc
xor
mov
push
je
xchg
int
jne
adc
sub
jmp
mov
pop
mov
stc
aas
push
sbb
cmp
mov
cmp
adc
insb
sub
xchg
xchg
jl
sub
shlb
and
sahf
insl
cmp
lret
cmpsl
sti
jecxz
lods
cmp
xlat
sub
jge
pop
mov
dec
movsb
inc
xchg
jnp
mov
mov
aaa
shl
mov
lcall
dec
shl
pusha
mov
ret
repnz
cmc
or
clc
add
jecxz
sbb
inc
int3
add
pushf
push
test
addr16
out
nop
xchg
fstl
cli
fwait
pop
sbb
push
add
ss
iret
pushf
inc
outsb
lahf
popf
fwait
aas
push
add
sbb
push
xchg
std
cmc
xchg
out
pop
xchg
pop
rclb
bound
movsb
pushf
sarb
xor
fisubs
mov
xor
repnz
shll
mov
in
sti
or
jmp
out
popa
pop
sbb
lret
xor
mov
sub
push
cmp
jns
out
inc
daa
lds
push
xchg
test
jmp
xlat
fcmovu
aam
cmpsl
es
pop
out
dec
icebp
in
mov
mov
in
imul
lods
test
adc
pushl
je
inc
cmc
mov
cmp
es
int
xlat
lret
push
add
mov
inc
cmpsb
in
jecxz
adc
movsb
inc
cmc
jl
mov
stos
mov
imul
pusha
xchg
xchg
xchg
inc
push
lcall
cld
pushf
and
sub
xchg
or
adc
in
pop
push
pop
cmp
or
inc
sbb
and
cwtl
xor
push
adc
or
push
stc
js
scas
loope
dec
cli
push
xchg
or
add
cmp
shrb
icebp
mov
cmovnp
test
popa
xchg
inc
sub
xor
cwtl
xchg
pop
adc
xor
fiadds
xchg
out
mov
jae
sub
jmp
jae
lea
arpl
mov
sub
xchg
inc
dec
sub
mov
insl
jp
dec
dec
jmp
movzbl
aam
jmp
cld
jno
outsl
add
test
cs
ljmp
insb
sub
push
adc
aad
or
mov
ja
decl
mov
scas
pusha
imul
and
adc
int
ja
mov
dec
in
lcall
int
mov
xchg
mov
xor
mov
insl
dec
insb
dec
adc
and
mov
out
popa
les
inc
in
rorl
inc
adc
xchg
push
lods
dec
mov
stos
data16
stos
mov
lods
repnz
loope
sbb
push
outsb
mov
fwait
jnp
into
sbb
imul
jb
mov
lsl
mov
rcl
daa
out
loopne
pop
or
pop
lock
insl
jb
mov
dec
mul
enter
sub
mov
xlat
aad
push
or
loopne
push
not
push
jp
cmp
add
sbb
sahf
cmp
or
je
adc
subl
cmp
jl
lea
xchg
outsb
ljmp
or
xchg
lahf
mov
jmp
icebp
cmp
imul
and
movsb
stc
mov
cli
je
mov
jge
pop
xchg
xlat
mov
pop
sarl
push
and
sub
add
addl
stc
pop
pop
dec
jno
pop
in
arpl
jle
mov
add
adc
xor
pop
mov
mov
mov
scas
lods
loop
shll
rolb
jb
call
rorb
jecxz
sti
inc
jbe
es
ret
sub
stos
ljmp
shll
out
push
mov
adc
pop
add
in
in
push
aad
inc
and
pop
sti
jmp
outsb
jecxz
mov
out
test
sub
pop
ljmp
inc
pop
std
push
in
rcrb
fimull
adc
jbe
sbb
add
cmp
mov
push
outsb
aas
lcall
es
insl
enter
mov
in
fimuls
sahf
push
adcl
inc
fiadds
das
jb
fdivrs
pop
sub
mov
arpl
stc
movsb
pop
push
inc
out
nop
adc
pop
rclb
xchg
cmp
sti
xchg
rcrb
stos
jle
in
dec
in
lods
enter
ficoms
sbbl
arpl
pop
dec
inc
fisubs
clc
mov
shrl
sbb
aas
jmp
lret
icebp
jmp
mov
mov
insb
and
pop
pop
in
mov
xchg
in
cmp
ss
shr
adc
std
push
dec
aad
cmp
dec
stos
jp
test
xor
jecxz
and
mov
or
adc
xchg
or
mov
iret
ja
testl
and
push
out
fsubl
clc
mov
sbb
sbb
mov
mov
repz
lods
repz
test
mov
mov
nop
in
dec
aad
js
inc
and
aam
mov
jns
cmp
and
data16
cmp
or
cmp
cld
das
cmpsl
ja
or
jg
iret
loopne
sub
insl
dec
jecxz
pop
inc
dec
inc
jg
mov
inc
int
out
add
push
daa
ret
filds
sbb
aam
loopne
inc
mov
sub
in
aaa
push
xor
mov
lods
mov
xchg
jb
xor
jbe
cltd
mov
call
add
bound
mov
std
mov
pop
cmpsl
mov
inc
xor
jne
fisubrl
arpl
jle
and
cli
mov
test
mov
in
jmp
shll
add
ljmp
add
rcr
dec
xchg
inc
xchg
ret
inc
xlat
add
leave
test
iret
and
xor
lret
xor
bound
sbb
jmp
pop
rorl
aam
lcall
sbb
pop
test
scas
jmp
jb
add
adc
insl
sub
dec
and
jle
jl
ljmp
push
fistl
imul
and
sub
fidivrl
stos
jo
jo
sub
dec
xor
ja
mov
jge
insl
ja
aam
adc
inc
xor
arpl
push
lods
push
or
scas
dec
out
mov
jno
repnz
les
ds
sar
adc
or
sbb
orl
lods
mov
xor
movsl
add
and
notl
xchg
mov
gs
ss
dec
sub
popf
into
jbe
out
movl
in
inc
lock
push
dec
mov
push
mov
pop
out
out
ret
repz
ds
sbb
sbbl
je
mov
push
test
xchg
inc
lods
push
imul
pop
nop
outsl
imul
rcrb
push
pop
test
mov
cmp
or
jmp
pop
aaa
pop
xchg
push
cmp
int
inc
pushf
hlt
divl
adc
out
pop
cli
int
in
push
xchg
pop
xchg
test
pushl
jbe
push
pop
sbb
cmp
out
add
leave
pop
fwait
rcrb
scas
xchg
aas
lcall
in
lods
mov
filds
pop
in
lds
gs
ja
leave
out
js
mov
jae
xor
xchg
jno
jp
push
xor
lods
aam
cltd
xchg
inc
sub
stos
push
push
and
popl
dec
cmp
js
into
add
sbb
mov
cmc
sarb
mov
or
inc
test
stos
cmpsl
jle
dec
out
lahf
rclb
sub
lcall
dec
pushf
je
es
pop
jnp
negb
fstpt
cmp
mov
out
testl
sarl
outsl
dec
adc
jmp
test
aad
fisubrl
sbb
inc
push
or
cmp
inc
sub
in
xor
sbb
hlt
inc
or
mov
lahf
xchg
jg
outsl
push
inc
hlt
cld
cwtl
cmp
or
mov
loop
bound
fs
jmp
adc
and
out
push
int3
xor
or
mov
stos
popf
out
mov
cs
jns
adc
xor
lret
ds
and
push
mov
mov
cmp
sbb
imul
roll
mov
loop
in
mov
dec
jae
ret
xchg
scas
pop
popa
mov
mov
aad
push
lret
loopne
daa
shlb
dec
into
mul
adc
pop
push
push
xlat
mov
adc
stos
pop
cmp
and
mov
aad
jb
xor
mov
mov
xchg
push
stc
push
jge
stc
leave
aaa
sbb
or
mov
mov
std
inc
pop
movntps
dec
fmul
mov
pop
repnz
push
fwait
dec
mov
cmp
adc
fildll
dec
imul
es
jge
mov
fildll
into
dec
jns,pt
rcll
pop
mov
xor
inc
mov
sbb
push
adc
xchg
push
and
loop
minps
xchg
cmp
xchg
dec
inc
movsb
or
push
out
int3
loopne
mov
pop
cltd
or
and
dec
dec
cmc
push
cmp
mov
dec
sahf
js
pop
jbe
arpl
dec
xor
jecxz
adcb
mov
scas
xchg
pop
xchg
add
cs
sub
jbe
inc
enter
ljmp
iret
mov
fnstcw
js
les
sahf
shrb
adc
repz
mov
mov
dec
mov
cmp
adc
cmp
ret
gs
or
ljmp
pop
pop
fisubrs
pop
movsl
clc
lcall
dec
push
add
sti
test
mov
arpl
push
xor
out
adc
xchg
mov
arpl
lock
cmp
sub
mov
movsb
lds
cmp
xchg
xchg
add
xor
pop
das
xor
mov
ss
push
push
popf
sbb
pop
adc
mov
mov
pushf
popa
call
fiadds
push
shrl
sub
mov
xchg
test
jo
dec
pop
outsb
cmp
mov
lock
and
push
xlat
cmp
add
and
sahf
ret
adc
loopne
mov
insb
movsb
rol
and
push
js
mov
les
outsl
pop
das
dec
setp
sub
mov
je
adc
sub
test
or
push
mov
movsl
mov
sarl
jg
cld
gs
scas
and
jp
sub
lret
stos
je
lock
fdivrs
xor
pop
icebp
jge
jb
lods
jmp
pop
and
sbb
jp
push
aad
es
mov
fistpl
movsl
mov
sbb
xchg
lahf
or
sub
cld
xor
sub
cwtl
js
dec
out
mov
jmp
test
push
jmp
and
arpl
in
mov
dec
inc
fs
inc
add
lcall
fildll
ret
leave
pop
cmp
fbstp
popw
test
lea
inc
cltd
push
pop
rcrl
in
bound
or
in
inc
dec
pop
jmp
fnstcw
sub
into
insb
push
adc
data16
rcrl
push
push
xchg
inc
adc
sti
mov
and
mov
push
jmp
outsb
xor
ficompl
mov
mov
imul
xor
sub
lea
arpl
sbb
xor
mov
in
jns
add
aam
out
xor
hlt
cmpsb
jl
xchg
imul
jge
shlb
xchg
xor
lods
je
adc
je
cld
cli
lods
push
pop
subb
sbb
sahf
divb
fcoml
ds
data16
ja
cmp
pop
outsl
xor
repz
ror
in
xchg
outsl
or
dec
xor
jge
push
or
int
or
push
insl
lods
and
out
sbb
sbb
lods
aam
jo
enter
cwtl
in
lea
arpl
cmpsl
adc
js
pushf
popa
repz
jp
fs
in
test
lcall
cmp
ds
and
lcall
adc
or
adc
cmc
xchg
stos
xchg
fldcw
xchg
jl
fs
add
fdivl
jmp
mov
and
jb
pop
out
ret
ja
mov
push
sub
pop
fcomps
jg
in
lock
dec
mov
bound
lret
ljmp
add
xor
xchg
out
mov
push
mov
data16
sbb
mov
mov
mov
mov
andb
pop
hlt
sbb
cmp
xchg
jno
xor
out
test
cwtl
pushf
cmp
xor
dec
push
daa
outsb
adc
rorb
out
pop
cmpsb
sub
adc
sahf
leave
movsb
das
jo
std
pushf
cmp
or
xchg
in
lods
mov
xchg
out
shlb
mov
fs
loope
roll
cmpsb
aam
mov
ficoms
fwait
cmp
fsubl
mov
imul
mov
cwtl
and
call
sub
jne
cld
fisttps
pop
jbe
mov
adc
stc
mov
cli
jecxz
loopne
daa
cmp
and
adc
and
push
or
fisubs
cmp
adcl
jb
push
xorb
mov
stc
cmc
imul
in
adc
popf
iret
push
repz
iret
call
mov
sar
cmp
inc
cmp
outsb
lock
xchg
mov
ja
push
jb
cmc
in
arpl
mov
jmp
mov
inc
xchg
enter
imul
or
sti
mov
std
loopne
xchg
cmpsb
inc
cmp
or
xchg
into
fdivl
mov
inc
push
and
dec
xor
push
jno
xor
ret
cmp
cmp
imul
ret
cmp
hlt
add
aaa
ss
lret
popf
movsl
insl
mov
xchg
shll
jno
push
andb
stos
adc
sub
movsl
mov
dec
cmpb
dec
incb
aad
inc
lcall
test
call
addr16
push
ja
popf
cmp
ficomps
mov
mov
mov
inc
sbbb
and
push
push
jp
push
es
cmp
pop
ffreep
enter
lcall
repz
inc
xchg
mov
cmp
xchg
int3
loopne
stos
xor
push
les
add
add
faddl
cmp
les
sub
js
insl
inc
lret
mov
jg
add
popf
lret
push
mov
fisubrs
mov
jle
adc
push
jmp
gs
dec
mov
call
je
pop
sub
sub
test
inc
mov
dec
xlat
pop
push
xchg
outsb
lret
ss
or
test
mov
loopne
pop
cmp
je
adc
ss
mov
scas
adc
or
imul
mov
jno
inc
push
push
jnp
test
push
push
and
and
data16
insb
jae
aad
cmc
sbb
cmp
dec
shlb
popf
inc
or
and
rorl
cmp
cmc
ja
sub
xor
jecxz
cmp
jp
lea
and
ja
xor
xor
call
dec
cmpsl
idivl
cmpsb
cmp
lcall
and
xchg
add
sub
pop
aaa
fsubrs
mov
int3
fs
outsl
loop
mov
inc
sbb
nop
out
lods
mov
xchg
pusha
scas
and
push
hlt
jmp
mov
sbb
bound
add
mov
shrl
and
add
data16
fstl
or
jnp
in
jne
loope
or
out
xchg
xchg
popa
dec
mov
inc
daa
leave
loopne
mov
adc
sub
pop
shll
jns
sbb
dec
jbe
fistps
push
pop
push
fbstp
pop
add
call
sbb
adc
test
sub
xor
aad
xchg
lea
pop
mov
js
xor
xor
push
in
mov
outsl
push
push
test
jp
fldenv
stos
loop
or
inc
in
cwtl
sbb
jmp
cmp
cmp
popf
and
movb
enter
pop
das
mov
pop
adc
aam
dec
ret
testb
sub
popf
cmp
jbe
shll
jle
mov
sbb
and
test
sub
pusha
neg
dec
xor
dec
inc
ljmp
aaa
mov
cs
lods
xor
loopne
sti
jae
xor
push
int
cmc
or
sub
xchg
xchg
add
fisubrs
pusha
push
rorb
xchg
mov
pusha
sub
mov
push
xchg
out
mov
subl
inc
xchg
pop
mov
rcrb
stos
and
ret
and
jne
enter
xlat
push
enter
xlat
mov
daa
lret
test
mov
xchg
jg
push
jo
stos
das
xchg
sub
fnstsw
and
mov
mov
ret
mov
mov
cmc
jecxz
out
out
pop
and
fsin
push
cmp
fs
mov
xchg
jge
popf
and
jbe
cmpsl
in
cmpsl
scas
sbb
xor
jl
outsb
mov
lods
jmp
data16
les
pop
shr
shrl
arpl
jb
sti
aam
hlt
out
jg
ss
mov
dec
test
out
insb
dec
orl
in
mov
aad
movsb
mov
jp
arpl
pop
mov
ljmp
dec
fnsave
pop
mov
loope
mov
sahf
push
mov
stos
aaa
out
imul
xchg
mov
outsl
mov
inc
sub
ljmp
mov
pusha
adc
push
push
leave
out
cmp
push
rcll
cmp
cmpsb
test
sub
mov
push
inc
inc
add
add
pushf
pop
mov
bound
out
or
mov
push
dec
adc
cmp
roll
or
push
push
aaa
fldln2
add
mov
dec
push
pushf
repnz
jnp
notb
insb
js
push
add
loopne
sub
int3
adc
xchg
inc
fildll
outsb
inc
and
xor
fistps
test
push
mov
push
repnz
sbbl
xlat
aas
pop
xorl
inc
inc
xor
cs
pop
mov
and
ret
icebp
sub
cmp
loop
cli
cmpsl
add
sbb
mov
push
sarl
je
add
out
outsb
ss
test
dec
mov
add
dec
add
in
mov
ss
lods
pop
push
mov
jb
pop
cmp
mov
insl
sbb
and
inc
cmc
jg
fpatan
les
imul
push
pop
push
mov
fstpt
mov
sub
insb
xchg
jo
insl
pop
incb
insl
loope
scas
push
pusha
sbb
jb
lods
pushl
jmp
inc
cwtl
repnz
jae
push
inc
cmp
sub
mov
ficomps
adc
mov
sahf
inc
das
jo
mov
sbb
dec
jl
mov
sbb
out
das
adc
pop
cmpsl
jmp
lret
cmp
pop
lods
mov
xchg
pop
bnd
xchg
cmp
es
jle
cmc
mov
je
xor
icebp
rcll
cmp
leave
arpl
mov
popf
pop
pop
sarb
jns
push
mov
xor
out
dec
xlat
out
out
bound
sub
add
push
or
ja
outsb
cmp
repnz
int
loopne
jle
lcall
mov
lea
mov
sbb
dec
clc
pop
or
or
or
movsb
jg
sbb
mov
or
xchg
dec
mov
dec
mov
inc
js
cmp
inc
fdivrl
and
inc
lods
cmc
jmp
rcrb
push
mov
lea
mov
mov
dec
or
int
loope
and
ss
int
adc
mov
ljmp
repz
mov
fistl
or
add
in
push
fsubrs
sti
jl
rorb
jne
daa
mov
inc
jno
cmp
xor
cmpsl
ficompl
pop
into
push
xchg
or
or
xlat
lods
xchg
xor
mov
cs
xchg
adc
scas
push
idivl
insb
js
jnp
jg
cltd
int
ds
cmc
push
outsb
xchg
cmc
mov
cmpsl
in
inc
mov
cltd
test
add
push
jmp
dec
mov
mov
movsl
iret
pop
sub
pop
add
mov
sbb
mov
add
push
sub
xchg
lahf
sahf
add
lods
movsl
or
inc
out
dec
push
shrl
sbb
loope
repz
mov
es
cs
xlat
dec
iret
lahf
inc
inc
cmpl
adc
cmp
in
rcr
cli
mov
pop
stos
or
dec
mull
movsl
sub
popa
aaa
es
dec
sbb
insb
and
pusha
inc
lret
scas
movsl
repz
pop
pop
pop
cmpsb
push
mov
fldenv
inc
sbb
sub
pusha
or
mov
aad
mov
pop
mov
xlat
sub
testb
popa
pop
testl
out
lods
xchg
cmp
xchg
int3
jb
data16
and
jle
pop
sub
xor
repnz
mov
pop
ljmp
outsl
test
mov
clc
aad
lret
fidivs
cmp
mov
in
insl
sahf
push
push
xor
jecxz
xor
jne
mov
out
jle
mov
shl
or
cld
pop
or
out
xor
iret
push
mov
or
mov
ret
loop
push
cmc
xor
mov
aad
sub
and
filds
cmc
jne
mov
jg
lcall
adc
and
es
sub
jb
mov
loopne
dec
pop
cwtl
enter
jnp
cmp
add
clc
and
sarl
dec
sub
test
pushf
and
jle
pop
add
cltd
cmp
into
mov
mov
lods
fwait
xor
cli
jbe
jae
icebp
daa
xchg
sub
push
or
xorb
mov
push
lock
outsb
lret
aam
pop
fsubs
negb
mov
fbstp
sbb
pop
add
bound
or
sbb
cmc
pop
sbb
roll
mov
adc
lret
adc
dec
add
and
imul
inc
or
inc
adc
lods
repz
pop
mov
sbb
lret
pop
das
or
xchg
mov
es
incl
mulb
pop
test
cwtl
popa
je
push
inc
lret
push
pop
test
sub
xchg
push
add
addr16
addr16
repz
cs
test
dec
ja
sub
sbb
mov
jns
xor
mov
popf
push
mov
cmp
popa
stos
sub
pop
pop
shr
pop
int3
push
sub
lret
stc
or
cmp
adc
fucomi
subb
ficomps
popa
rorb
xchg
fndisi(8087
push
jnp
xchg
ret
in
lahf
movsb
xlat
cmp
sbb
test
jbe
push
fcom
xchg
stos
and
or
mov
adc
sbb
mov
fcompl
jbe
sbb
sbb
and
bound
jle
arpl
fidivl
in
out
sub
outsb
clc
pop
and
lret
mov
push
bound
jo
ja
cmpsl
cmpsl
scas
sbb
mov
pushf
dec
cld
mov
push
insl
or
sbb
sub
xor
fnsave
sbb
repnz
mov
or
inc
jnp
ds
dec
test
adc
pop
adc
pop
mov
jo
add
fstpl
pop
subl
cltd
int3
in
cs
cltd
mov
call
sbb
pop
call
jbe
inc
incb
push
imul
out
cmp
mov
jl
out
mov
push
and
pop
scas
mov
data16
mov
add
or
sahf
je
xchg
popa
leave
cs
outsl
scas
je
mov
adc
adc
addr16
mov
mov
cmp
and
mov
pop
inc
mov
xorb
cmc
cmp
out
int
push
xor
push
mov
cmc
mov
dec
stc
out
movsl
in
pop
les
sub
inc
mov
stc
shrl
repnz
mov
inc
add
out
ds
insb
xchg
outsl
xlat
cltd
shrl
sub
jecxz
loope
add
and
icebp
xchg
in
shl
and
cmp
shl
popf
nop
jnp
mov
jg
lret
in
dec
ss
inc
jb
or
cltd
ja
fbstp
in
push
dec
push
sbb
lret
xchg
push
mov
fists
sub
dec
pop
lahf
sub
sbb
and
insl
iret
mov
dec
or
add
mov
mov
mov
sahf
pop
mov
mov
icebp
inc
stc
xchg
lcall
imul
rclb
mov
mov
mov
fisttps
pop
sbb
cwtl
test
cmpxchg
loopne
iret
fdivrl
ret
stos
jge
stos
inc
pusha
mov
jg
shl
fsts
popa
test
cmpsl
lods
xor
mov
fldenv
mov
cmp
imul
shl
xlat
xchg
xchg
out
out
gs
push
fs
movsl
aas
push
cmp
sub
sub
xchg
rcrl
bound
xchg
and
fidivs
push
inc
adc
loop
xor
mov
es
mov
pop
std
adc
das
stos
arpl
es
psubb
dec
push
leave
pop
jbe
jns
int
lretw
cmp
out
aam
sbb
popa
push
adc
inc
jp
ss
mov
jge
adc
jmp
jmp
add
adc
jb
mov
test
rolb
jnp
cwtl
jnp
mov
ja
ret
inc
lock
mov
insb
xchg
push
lcall
jmp
or
push
cwtl
les
pop
cmp
cmpsb
lock
cwtl
imul
out
movl
add
push
adc
pop
outsb
and
data16
jmp
mov
xchg
dec
jne
int3
loop
or
xchg
inc
inc
mov
aad
stos
add
lock
ss
dec
cmp
out
mov
xor
inc
dec
lods
and
mov
sbb
inc
cmp
data16
adc
sbb
jne
push
mov
lahf
fistpl
stc
cmc
mov
dec
sbbb
js
push
mov
add
push
hlt
out
or
sub
fsubs
dec
es
xchg
xor
call
xchg
xchg
int3
cld
in
shlb
push
addl
adc
xchg
xchg
and
inc
fs
push
popf
mov
push
xor
inc
ljmp
mov
fwait
xchg
cltd
fcoms
xchg
jb
fstpl
sub
or
pop
jae
fcmovu
dec
or
into
int
decl
icebp
inc
subps
mov
clc
ds
cmp
ljmp
imul
jge
xchg
lahf
adc
sub
repnz
xor
outsl
mov
lret
and
mov
int3
jb
push
out
jp
xlat
pushf
pusha
mov
pop
es
add
and
mov
pop
jns
ja
fxch
test
jbe
inc
xchg
shlb
mov
inc
mov
mov
dec
subb
imul
lret
adcl
fistl
out
out
and
push
cs
mov
xchg
xor
cmp
push
ljmp
inc
outsl
fidivs
sbb
jnp
sbb
insb
movsb
outsb
lcall
jg
push
dec
and
cltd
mov
xchg
das
sbb
sbb
ds
insl
repnz
ja
fwait
into
shr
xor
lret
popa
bound
mov
test
pop
lcall
pop
filds
jb
in
xchg
xor
dec
shrb
adc
imul
fistpl
ja
cmp
sti
lods
lahf
mov
fwait
sub
mov
dec
xor
jb
push
lds
and
add
movsl
sbb
data16
inc
xor
fwait
ja
into
jmp
test
inc
movb
movsl
xchg
loope
add
mov
xlat
xchg
xchg
push
roll
mov
inc
addr16
and
or
aas
nop
xchg
daa
push
scas
sub
dec
mov
movsb
sti
clc
jmp
cmc
sarl
jge
push
mov
push
adc
sbb
call
mov
jmp
test
push
lods
stos
mov
movsb
cmp
push
loopne
enter
movsb
mov
xor
pop
push
test
inc
pop
mov
add
xchg
leave
rorl
fcompl
inc
dec
adc
xchg
sbb
test
adc
add
mov
faddp
aam
out
movsb
adc
inc
add
cmp
mov
cwtl
inc
dec
push
in
sub
cmp
dec
or
movsl
imul
test
rcrb
dec
mov
push
and
aam
dec
clc
scas
std
mov
enter
adc
cmp
xor
inc
pop
cmp
scas
sti
add
push
and
pop
in
outsl
std
inc
idiv
lcall
imul
daa
arpl
pop
sub
leave
out
loopne
sub
clc
jecxz
push
cwtl
mov
lock
push
xor
pmaxsw
dec
mov
sub
xchg
jl
adcb
xchg
mov
iret
jbe
lock
mov
lea
dec
mov
stos
add
enter
jb
loopne
or
jnp
fidivs
stc
rcl
pop
jae
insb
sub
or
adc
clc
or
in
cmp
enter
sbb
jge,pn
push
jle
mov
das
fiadds
ret
scas
stc
dec
xchg
ds
mov
mov
out
outsl
mov
lds
aas
scas
sbb
imul
xor
inc
popf
ret
dec
jmp
pop
jns
pop
ret
push
jb
push
repz
lock
inc
jne
ljmp
push
cs
fcoml
outsl
jp
mov
jl
mov
movsl
popa
jb,pn
outsl
pop
mov
push
mov
xlat
std
cmp
std
cmp
and
movsb
insl
adc
pop
mov
stc
imul
popf
sbbb
mov
xchg
dec
xor
imul
adc
pop
int
out
push
outsl
pop
mov
mov
cmp
sbb
decl
jb
loop
xchg
aad
aaa
aaa
sbb
imul
mov
sub
or
fists
fisubrl
push
cltd
es
popa
call
xchg
mov
sbb
sbb
fstpl
pop
add
test
leave
sbb
dec
arpl
lock
jmp
and
sub
mov
cmp
add
jno,pt
pop
div
pop
testb
aaa
ret
iret
sbb
sub
inc
ds
mov
in
cmpsb
scas
rol
jb
add
les
mov
cmpsb
rcll
test
cli
ljmp
lea
arpl
lcall
icebp
dec
mov
add
lcall
mov
popf
push
jp
cmp
popf
mov
mov
into
pop
mov
xchg
out
push
mov
mov
js
push
aas
inc
push
mov
cmp
outsl
jl
sarl
push
jns
lret
shrl
sub
pop
cmp
or
jl
mov
out
and
loope
sbb
movsb
in
mov
dec
idivb
call
ds
mov
sbb
push
icebp
movsl
lcall
inc
dec
movsb
pop
mov
ficomps
jno
inc
cmp
mov
and
push
std
dec
pop
add
out
mov
cwtl
pop
dec
icebp
cmp
sbb
es
insb
jg
mov
pop
mov
or
mov
shrb
push
in
sbb
adc
insl
pop
add
xor
mov
jge
sub
daa
out
in
lods
sub
popa
cmpsb
int
aad
pop
pop
stos
in
mov
int
xor
ret
test
lock
dec
testl
push
jb
mov
mov
add
mov
cmp
or
jmp
dec
out
cmpl
fsubrl
addb
lock
movsb
mov
mov
xchg
testl
movsb
xorl
xor
lods
jle
xchg
xchg
dec
cmpsb
rcrb
dec
das
icebp
in
dec
das
insb
mov
xchg
out
jg
dec
incb
and
adc
cmp
xchg
mov
aaa
dec
pop
push
mov
ret
inc
lds
sbb
out
pop
lock
jge
addb
loopne
push
fdivr
push
fdivrp
shll
out
int3
fsubrl
loop
imul
loop
or
or
xor
sub
popa
inc
arpl
addb
rorl
subl
mov
fcmovb
pop
fnstsw
outsl
dec
sub
sbb
adc
test
xchg
cmp
and
xchg
push
dec
and
mov
push
outsb
cmp
cmpsl
cmp
and
dec
jb
imul
add
xchg
pop
cmp
xchg
insl
into
rorl
inc
jmp
xlat
dec
shl
in
es
mov
pop
push
jecxz
add
outsb
fiaddl
pop
pop
ja
shll
imul
and
out
push
fcoml
cmp
mov
jp
xor
cli
xchg
mov
mov
adc
std
imul
inc
xor
or
movsb
dec
sbb
hlt
aaa
stc
or
aad
or
adc
sti
in
pop
daa
push
mov
js
pop
xchg
nop
inc
int3
push
loop
testl
pop
inc
ja
fisubrs
imul
cmpsl
loopne
stos
sub
iret
lods
add
push
shrl
pop
push
pop
xchg
mov
icebp
pop
loop
scas
mov
test
xor
fucom
iret
ljmp
xchg
loop
push
pop
push
ret
pop
or
push
xor
mov
imul
divl
push
out
aad
dec
pop
mov
js
icebp
xchg
push
dec
cmp
ret
push
cmp
fcmovbe
jp
repnz
negb
mov
xchg
notl
icebp
sbb
sbb
pop
push
pop
sbb
mov
xchg
push
rcll
mov
jne
scas
jle
adc
mov
enter
xchg
mov
ljmp
js
ficoml
or
add
cmp
aaa
movsb
push
and
adc
sbb
pop
jmp
and
lock
mov
inc
out
sub
sub
or
and
mov
push
mov
dec
out
adc
xchg
loop
into
xchg
pop
sbb
repnz
leave
cmpsb
adc
in
enter
and
mov
mov
popa
test
sahf
hlt
xor
sbb
lahf
xchg
cmp
les
movb
push
dec
cmp
push
sti
fs
xchg
mov
popa
dec
sub
push
outsl
lods
int3
jg
jb
or
mov
addr16
pop
leave
lock
and
rorb
fisttpl
mov
lods
gs
inc
jmp
pop
jns
ss
into
mov
ja
ss
mov
loop
push
jae
mov
enter
loope
adc
outsl
xor
testb
adc
jo
or
pop
mov
out
andl
push
sarl
mov
mov
cmp
fidivrs
sahf
adc
push
movsl
mov
inc
jbe
mov
lret
pop
dec
and
jge
stos
and
out
and
mov
and
cmpsl
push
add
out
dec
jge
cli
ds
ljmp
jmp
call
mov
mov
jp
xorl
cmpsl
je
dec
inc
daa
cmp
bound
pop
sub
mov
scas
mov
lret
jp
mov
inc
cmp
test
roll
popa
cs
lret
inc
les
imul
or
divb
ret
jp
lcall
lret
aaa
mov
lock
outsb
ret
xchg
jb
adc
pop
fstpt
add
jns
sbb
rcrb
test
pop
mov
sbb
or
mov
pop
js
cmp
sub
sbb
shl
out
rcr
or
or
sbb
push
aam
call
jbe
fwait
pop
and
mov
clc
push
and
pop
out
sub
ror
stos
sub
xor
mov
sub
pop
push
sub
mulb
pop
or
iret
mov
cmp
add
jmp
cmp
mov
jne
insl
cmp
sbbb
popf
test
aaa
push
nopl
push
enter
out
cmp
lahf
sbbb
sbb
mov
mov
or
test
out
push
jb
jno
xlat
xchg
test
mov
mov
scas
push
mov
imul
cmpsb
addr16
stos
adc
int3
shlb
std
mov
xchg
mov
add
push
divl
out
inc
mov
hlt
adc
seta
mov
dec
xchg
ja
xor
orb
mov
std
dec
scas
push
and
aas
or
jecxz
daa
iret
test
das
into
enter
into
jl
add
sar
fisubl
idivb
push
xchg
jl
lret
and
sbb
mov
mov
mov
lods
jmp
clc
inc
in
dec
xor
leave
mov
andl
mov
cmp
inc
cli
ret
rolb
dec
loope
adc
adc
ljmp
xchg
sbb
sub
aam
xchg
jp
pop
bound
lret
cwtl
jge
ljmp
inc
cmp
pop
jo
cmp
mov
fdivr
ret
cmp
push
int
ss
cmp
xor
and
inc
sbb
and
mov
push
inc
cmpsb
pop
out
bswap
pop
es
xchg
aad
push
push
repnz
fnsave
adc
sbb
pop
das
cmp
xchg
lcall
pushf
aaa
xorb
add
cmp
pop
jge
adc
cmovb
js
jge
push
mov
push
outsb
into
mov
ds
ficoms
lock
loopne
mul
mov
inc
mov
mov
dec
lds
test
arpl
faddl
push
xorl
fistl
pop
cmpsl
push
or
imul
push
imul
sbbl
lock
pop
insb
loope
imul
dec
xor
ret
mov
leave
mov
icebp
sbb
push
negb
and
es
xchg
pop
xor
and
les
mov
jle
faddl
mov
mov
sub
ret
pop
mov
imul
lds
data16
xor
loop
adc
dec
cmp
cmc
adc
sub
add
outsb
and
lcall
sbb
mov
sbb
add
iret
rorl
mov
lahf
es
push
pop
jnp
mov
out
stos
arpl
scas
push
arpl
sahf
adc
add
sbb
in
fsubp
adcl
iret
in
cmpsb
mov
xchg
shrl
loop
popl
addb
popa
sub
push
or
scas
cwtl
mov
sbb
icebp
fs
jae
sbb
dec
mov
int
add
rcll
sub
mov
pop
cli
in
inc
jecxz
in
xor
adc
test
xor
mov
addr16
das
dec
aam
dec
stos
jge
frstor
xor
fistpl
jmp
in
popf
xchg
pop
in
imul
cwtl
ret
fdivs
lcall
xchg
dec
outsb
jmp
in
out
mov
pop
lahf
sbb
je
loope
mov
into
push
sar
mov
adc
cs
in
sub
push
pop
sub
jecxz
mov
lcall
jne
or
std
add
sbb
lret
cmp
arpl
mov
xchg
pop
das
add
cmp
cs
aad
mov
and
jl
aad
stos
leave
fldenv
mov
xchg
jmp
dec
int
popa
rcrl
xchg
xchg
xor
movsb
adc
adc
or
gs
out
pop
push
shlb
fdivrp
out
jo
pop
adc
adc
std
fdivs
repz
hlt
mov
ljmp
stos
arpl
aam
push
adc
cmp
enter
mov
cld
pop
mov
push
dec
adc
inc
mov
in
jo
fstpt
sub
push
xchg
and
sub
ss
dec
flds
lea
xchg
ljmp
dec
sahf
imul
les
pop
jo
inc
ret
clc
lock
adc
and
hlt
inc
je
imul
cmp
mov
sbb
pop
sar
mov
jl
fidivrl
inc
add
xchg
sub
jecxz
sub
sub
ficoml
pslld
xchg
insb
shl
push
inc
das
hlt
inc
data16
xchg
and
imul
int
mov
and
cmp
shll
ja
sbb
mov
mull
int3
xor
cmp
and
outsl
bound
and
aam
xchg
roll
jns
dec
xor
daa
bound
stos
shll
mov
sbb
ret
fcompl
xor
lea
rclb
movsb
push
popa
mov
pop
pop
repnz
call
mov
iret
inc
popa
adc
jne
pop
test
stc
pusha
jmp
das
push
xchg
jb
xor
sub
xor
es
pop
xor
mov
scas
stos
adc
out
cmp
divl
add
dec
and
popa
sbb
ja
aad
lcall
fsubrs
pop
dec
push
inc
loopne
loopne
jb
aas
cld
fisttps
mov
pusha
test
sbb
lret
scas
addr16
xchg
or
ja
and
lods
loop
lret
sti
loope
stc
add
mov
dec
jg
lods
adc
or
pop
sub
jge
loopne
inc
clc
xchg
aam
add
shl
call
xchg
fistpl
lods
cmpsl
jo
sub
andl
lock
xorl
cli
xchg
mov
adc
ret
pop
stos
lock
jmp
rcl
or
push
aad
insb
test
inc
mov
adc
jg
mov
adc
in
pmulhuw
inc
lcall
out
jmp
ja
dec
enter
dec
in
push
fs
or
cli
cmp
out
pop
mov
sbb
or
clc
pop
mov
or
jmp
sub
dec
push
in
pop
cmp
pop
jmp
add
sub
lcall
aam
or
push
inc
push
mov
in
mov
xor
cmp
mov
adc
ret
jns
jns
shll
jne
sahf
scas
xchg
ja
clc
dec
push
fucomip
xor
xlat
jmp
imul
mov
imul
add
stc
insl
xchg
fsubl
mov
arpl
jg
movsl
cs
fcompl
imulb
imul
outsl
sbb
mov
mov
sub
aaa
mov
sub
push
lock
ss
rolb
mov
aas
shrl
dec
pop
lods
push
aas
ds
loopne
dec
push
jp
mov
mov
jp
inc
idivl
sbb
push
in
out
sub
xchg
lock
out
push
mov
in
imul
and
inc
xor
jae
lock
sbb
cmp
das
lods
mov
nop
jo
xchg
dec
jmp
fadds
cltd
mov
out
arpl
movb
cmp
enter
cmp
cmc
inc
sbb
mov
insl
and
cmp
ret
shl
mov
sti
mov
div
or
loope
js
loope
ja
xor
inc
aad
sub
stos
add
imull
out
xchg
xor
lea
movsb
test
icebp
dec
sub
or
jne
jno
aaa
fnstcw
pop
add
dec
jmp
sub
mov
push
jg
loop
sub
addb
xchg
mov
dec
xor
fldln2
lea
inc
ret
pop
sub
push
dec
sub
mov
dec
ds
fidivs
int3
lods
rcll
pusha
aad
inc
jae
fbstp
mov
xor
mov
arpl
and
xorb
xchg
sub
inc
mov
inc
jno
mov
popf
mov
dec
lock
xchg
mov
out
scas
add
lret
mov
loope
xchg
or
mul
cmp
data16
rcrb
loop
cmpsl
jle
js
mov
nop
in
adc
shrl
addr16
in
aaa
sbb
inc
mov
mov
movq
jmp
sub
fwait
jb
and
adc
insl
cmp
cmp
int
jge
call
jbe
shl
sbbb
lret
subb
filds
adc
lret
addl
enter
push
cmpsb
push
pop
inc
xchg
add
hlt
icebp
dec
les
push
xor
mov
xor
faddp
push
repnz
ja
mov
ret
aad
mov
dec
test
xor
aaa
popa
in
mulb
dec
xchg
inc
repnz
cld
js
and
jo
imul
pop
cld
pop
loope
mov
dec
nop
mov
insl
fwait
int
sbb
push
jmp
ss
clc
jb
cmp
rcrl
cltd
loop
jno
sbb
gs
sub
xor
push
jg
fisttps
pop
fdivrl
aaa
xchg
test
cmp
pop
out
dec
mov
and
push
fstl
push
sbb
push
int3
test
and
xchg
inc
icebp
shll
fnsetpm(287
inc
pop
adc
jp
add
ret
sbb
adc
add
sub
cmp
out
out
push
scas
pushl
mov
jns
jns
stos
mov
ss
pop
mov
jg
jecxz
push
jae
rolb
pop
imul
int3
pop
push
out
enter
mov
fstpt
dec
in
add
aaa
rcrl
add
out
dec
ret
xor
loop
in
xor
scas
xchg
sbb
mov
in
mov
popf
into
jb
mov
int3
push
in
hlt
xlat
xor
mov
pushf
xor
dec
sbb
push
testl
sub
mov
mov
clc
leave
inc
enter
adc
sbb
dec
adc
sti
xor
dec
std
fnsave
cld
adc
fwait
cmpsl
repnz
pop
daa
popf
pop
dec
lretw
ja
popa
mov
nop
movsl
jmp
outsb
mov
pop
in
pop
jp
cmp
je
leave
mov
jbe
add
outsl
incl
inc
mov
xchg
int3
jg
frndint
xchg
in
jno
xchg
sbb
lahf
pop
push
std
mov
fisttpll
adc
jp
jno
add
mov
cli
test
lret
mov
push
iret
in
and
clc
sbb
scas
jl
enter
das
out
in
inc
inc
adc
add
imull
or
pop
sub
mov
cmp
iret
int
sbb
cmp
jg
pop
imul
enter
inc
dec
mov
lcall
icebp
mov
nop
cwtl
insl
inc
inc
test
idivl
dec
cmp
out
adc
push
mov
xlat
sub
outsl
or
js
add
loopne
ljmp
popl
push
jg
push
aaa
adc
adc
cmc
fisttps
iret
push
enter
daa
cmc
orb
xor
sbb
daa
scas
cmp
xor
call
repnz
sti
addr16
mov
adc
orl
fdivl
lods
sub
inc
dec
clc
out
filds
push
subb
adc
mov
stc
push
jno
jns
js
and
dec
xchg
add
dec
les
movsb
mov
jl
jmp
mov
or
popf
test
leave
or
std
add
test
shlb
add
inc
push
and
inc
push
in
xchg
push
push
aas
cmp
push
or
or
cmp
sti
ss
mov
pop
mov
mov
lods
cmp
lods
jns
lret
bound
mov
cmp
push
mov
jo
pop
add
xor
add
enter
out
js
add
pop
loop
dec
in
dec
fidivs
subb
add
outsl
aas
sbb
imul
inc
or
imul
cmp
cmpsb
test
adc
push
lock
inc
je
mov
push
lret
mov
movsb
into
andl
je
jae
xchg
lods
in
fstps
push
out
pop
into
xchg
inc
dec
rcll
gs
cmc
mov
loopne
insl
inc
pushf
in
adc
add
pop
jle
dec
and
push
cmp
lret
jecxz
cmp
testl
clc
cmpsl
add
pop
aaa
mov
cmpsl
mov
arpl
or
mov
out
gs
push
iret
lret
ficoml
jge
loope
icebp
adcb
jae
fcomps
imul
data16
fidivrs
pop
or
scas
sti
mov
pop
sbb
cmovb
fsts
aam
lcall
mov
testl
mov
divb
cmp
sub
push
dec
bound
or
in
test
mov
xlat
inc
add
adc
stc
lea
aam
js
rcl
jp
rclb
fcomps
mov
shrb
rcrb
insb
icebp
sub
mov
sbb
int3
call
jb
push
test
aad
add
jmp
ret
out
ror
pop
sti
push
insb
test
enter
frstor
xchg
pop
sub
test
inc
rclb
scas
in
push
jno
aas
dec
test
dec
xor
or
dec
lods
xor
or
xor
loop
stos
or
sub
fistl
bound
dec
mov
int
pop
pop
jg
and
test
test
pop
test
std
dec
xchg
das
ret
mov
test
outsl
or
imul
jo
gs
and
lret
adc
push
subl
cmp
mov
push
adcl
testb
add
mov
add
jno
cmp
gs
mov
jmp
call
sti
lods
and
cmpsl
push
fistl
pusha
mov
or
adc
xor
lcall
mov
add
add
popa
or
test
dec
mov
xchg
mov
stos
sbb
or
lsl
pop
mov
fisubrs
enter
aad
les
pop
jmp
inc
add
add
popa
adc
sahf
inc
repnz
repz
test
or
mov
popf
dec
sub
daa
and
cpuid
and
popa
sbb
aas
cld
aas
mov
inc
imul
xchg
inc
in
andl
pop
lret
lods
pushl
or
loope
pop
and
hlt
pop
lods
mov
inc
nop
mov
mov
pop
out
inc
scas
ss
xorb
and
mov
aad
fdivrp
push
jmp
jmp
sti
outsl
mov
push
mov
inc
push
jl
test
xor
inc
sbb
mov
sub
roll
ficomps
adc
inc
std
dec
inc
sub
pop
cmpb
or
mov
out
enter
mov
sub
sub
xchg
mov
bound
sub
pop
fstpt
ret
sbb
leave
pop
xor
dec
jne
cltd
repnz
xor
sub
cmpsl
mov
test
xor
fwait
rcrb
sbb
rclb
add
jl
dec
and
shlb
test
mov
ljmp
cmp
dec
js
clc
mov
xor
adcl
enter
dec
xchg
cli
xor
int
mov
lock
push
mov
icebp
stc
test
adc
sub
mov
add
loop
push
mov
cli
mul
scas
sbb
jl
inc
xor
push
cmp
imul
mov
and
or
mov
es
ljmp
lods
dec
xchg
and
xchg
jl
xchg
fadd
scas
icebp
mov
xchg
mov
lods
aam
addb
cmp
mov
add
jecxz
lods
enter
cwtl
pop
pop
mov
insl
mov
push
cmc
loop
in
cmp
jb
or
add
jg
dec
les
movsl
cmp
sbb
test
and
pop
fstpl
sbb
stos
outsb
into
mov
inc
fs
fiaddl
mov
pop
filds
movsb
scas
and
shl
out
fbld
adc
cmp
adc
xchg
movsb
mov
and
fstpl
jecxz
movsb
insb
lea
fwait
mov
jg
movsb
pop
mov
jno
std
jle
xchg
test
insb
fidivs
push
out
dec
insb
cli
adc
test
fwait
jp
shlb
or
add
outsb
cltd
popa
int3
push
inc
loopne
shrl
push
mov
sub
into
sbbb
add
or
mov
adc
ja
xor
jp
dec
pop
mov
mov
pop
movsb
sbb
inc
push
mov
sahf
loop
in
jecxz
mov
sti
push
repnz
in
cmp
pop
cmp
jg
sahf
adc
out
adc
sbb
and
inc
and
jno
jns
add
ljmp
xor
mov
test
jge,pt
jno
imul
scas
jmp
jb
cld
aaa
arpl
jmp
mov
mov
loope
mov
divl
cmpsl
sahf
mov
xchg
aas
add
add
jecxz
repz
cmpsb
mov
jbe
les
xlat
in
shr
sahf
imul
jnp
lahf
jmp
mov
test
adc
ljmp
inc
ss
xchg
xor
sub
inc
dec
mov
push
fwait
idiv
lcall
outsb
mov
cltd
inc
enter
negb
hlt
inc
ja
imull
ds
cmpsb
or
test
jnp
pop
cld
mov
pushf
std
lods
fisttpl
rorb
xorb
jmp
leave
fdiv
mov
sub
imul
sbb
mov
addr16
cmpsb
jbe
imul
pop
push
sbb
enter
lods
mov
and
fstpt
aam
and
into
jae
test
add
push
shrl
or
ds
push
mov
fsubl
fs
aaa
pop
fdivl
rol
add
inc
loopne
cmp
mov
jns
pop
or
pop
mov
cmp
movsb
jl
rcrl
sbb
jns
mov
divb
xor
jae
cli
jne
inc
add
adc
jmp
mov
mov
mov
pushf
in
cld
inc
pop
or
lds
fwait
or
and
mov
lods
mov
test
xchg
sti
out
sti
pop
mov
repnz
push
add
fwait
cmp
pop
inc
xchg
js
mov
mov
scas
pusha
xchg
insb
jecxz
sbb
dec
movsb
push
sbb
in
stos
add
fdivrs
shl
bound
sub
fldcw
push
loopne
daa
xchg
pop
dec
inc
jbe
ds
aaa
cli
xchg
lods
pop
add
sbb
and
pop
mov
adc
adc
leave
lahf
jp
xchg
xor
bound
mov
ss
dec
aas
std
inc
xor
pusha
xchg
in
inc
sbb
mov
xchg
rcr
mov
icebp
sub
subb
xor
cmp
jae
aad
imul
mov
push
mov
scas
fbstp
pop
sbb
pop
jnp
mov
iret
cmp
popf
mov
jnp
pop
js
rcrl
mov
out
inc
and
sub
mov
inc
jl
test
cli
push
aaa
in
lods
cli
sbb
pushf
ljmp
lahf
mov
pushf
aaa
xchg
insb
xchg
and
insb
imull
aad
push
add
and
repnz
gs
jp
loope
cmp
sub
fcmovb
and
xchg
and
lret
int
or
pusha
inc
repz
js
in
stos
pop
inc
mov
xor
xor
mov
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
or
movl
mov
mov
add
movl
neg
mov
mov
mov
sub
and
mov
mov
andl
push
xorl
push
movzwl
xor
mov
xor
push
mov
subl
add
addl
mov
orl
mov
test
movl
je
movzbl
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
inc
mov
mov
xor
or
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
dec
mov
mov
sbb
xor
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jb
add
mov
mov
adc
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
call
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
mov
mov
or
xor
add
or
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
pushl
call
mov
dec
mov
jmp
sub
add
mov
subl
jmp
into
in
push
mov
push
in
imul
aam
hlt
sub
repnz
jnp
fdivl
stos
mov
fs
les
popf
rol
nop
stc
push
iret
or
xor
and
inc
test
dec
mull
in
aaa
xor
ror
dec
imul
int3
sbb
stos
leave
outsl
push
inc
std
xor
or
adc
pop
mov
add
pop
xor
imul
xor
cmp
xchg
out
mov
inc
jg
jge
subb
ja
mov
sbb
jae
mov
sbb
add
in
in
adc
jno
inc
jp
pop
mov
cmp
dec
mov
push
or
pusha
push
nop
stos
mov
aad
test
xchg
outsl
setae
mov
sub
insb
push
inc
mov
xor
sbb
arpl
mov
cmp
fwait
pop
rcr
push
andnps
leave
adc
test
aam
push
sub
pop
imull
pop
push
dec
or
cmpl
add
dec
mov
ss
pop
scas
mov
mov
ljmp
jle
arpl
add
int3
jb
sbbl
mov
jge
data16
inc
mov
add
int
jb
inc
adc
stos
inc
ret
int3
imul
popf
sbb
rol
dec
icebp
pop
lcall
ret
imul
dec
imul
in
cmp
lcall
jo
jae
adc
mov
xchg
test
pusha
jecxz
adc
cmp
roll
loopne
push
jmp
xor
insl
cmp
xor
loope
jecxz
cmp
jo
out
jae
test
or
das
push
lret
cmp
jl
add
push
cmpb
pop
jge
mov
int3
call
xchg
and
ljmp
inc
pop
jmp
repnz
mov
push
or
hlt
test
push
fs
ds
mov
sub
inc
cmp
xchg
pop
cwtl
inc
repz
push
cmc
mov
insl
imul
icebp
xchg
dec
test
cmp
xchg
fisttpll
add
cmpb
mov
mov
loop
std
or
fldl
lcall
gs
arpl
and
xchg
xchg
insl
jno
stos
sub
xor
lock
xchg
movsl
cmp
adc
mov
in
sub
pop
push
or
inc
cld
sarl
pop
scas
repz
and
cmpsl
cmp
pop
imul
outsl
mov
mov
out
mov
lods
mov
jge
aad
in
pop
jnp
mov
push
stc
xor
xchg
inc
aaa
in
dec
jecxz
pop
xorb
jae
popa
pop
adc
cmc
dec
and
in
and
outsl
sbb
arpl
mov
xor
push
in
jle
mov
inc
das
mov
fs
scas
pop
int
sub
out
jp,pt
jp
out
leave
ror
xor
jb
jae
or
push
aam
push
pop
mov
cmp
or
call
pop
iret
mov
hlt
xlat
outsb
mov
adc
stos
push
xchg
ret
push
pop
mov
enter
insb
rdpmc
mov
mov
gs
test
in
in
mov
or
cmp
mulb
stos
sbb
cli
push
mov
clc
dec
pop
push
inc
xor
or
mov
push
lock
pop
mov
mov
push
jg
aad
cmp
test
lods
mov
mov
jns
rcl
dec
inc
mov
and
jecxz
pop
icebp
loop
stc
sbb
int3
pop
cli
lds
mov
xor
sbb
xchg
adc
fcoms
dec
mov
iret
and
push
xor
xchg
fnstsw
lcall
xlat
aam
or
pop
repnz
dec
push
jl
or
mov
test
xor
sub
idiv
sbbl
sub
jle
stc
out
xor
push
vsqrtps
dec
out
pop
femms
sub
leave
stos
mov
out
dec
pop
dec
sbb
test
es
and
push
pop
mov
xchg
push
sbb
icebp
fildll
xor
adc
or
movsl
ds
cmpsb
mov
jmp
fwait
or
idivb
jns
push
aam
daa
in
jno
jb
xlat
jp
mov
cld
xchg
xchg
dec
sub
mov
fists
test
dec
imul
push
inc
inc
inc
jns
mov
push
lods
jno
add
mov
mov
ret
fwait
inc
rcl
xor
test
dec
repnz
paddd
xlat
sti
addr16
insb
iret
cmp
inc
mov
inc
cmp
adc
pop
lock
gs
lods
xor
sbb
sbb
push
mov
sahf
sub
je
mov
pop
sub
xchg
xor
insl
xchg
add
mov
and
stc
lret
push
aas
pop
sti
jne
loop
fwait
imul
into
adc
cli
mov
sbb
or
in
lds
sbb
int3
jne
or
fisubs
scas
popf
xor
xchg
jns
inc
mov
xchg
push
dec
rorb
sarl
jbe
and
push
cld
je
mov
enter
cmpsl
mov
inc
inc
aam
push
insl
popf
pop
int3
xchg
fmull
mov
int
xor
movl
arpl
sub
mov
cmc
add
sbb
add
mov
or
idivb
jbe
cmp
into
mov
jae
xchg
les
lret
mov
fs
cltd
aas
sbbb
lods
ficoms
daa
mov
dec
inc
adc
inc
dec
dec
outsl
ds
cmp
xor
mov
adc
ljmp
in
xchg
hlt
pop
aaa
hlt
icebp
mov
cmpsl
add
push
fildl
lret
xchg
fcomi
cltd
decl
push
test
outsl
add
xlat
ljmp
mov
jne
dec
sub
lahf
insl
in
lock
pop
cmc
das
decb
jge
adc
fsubs
sbb
dec
dec
xor
adc
cmp
inc
cwtl
enter
push
push
or
scas
sub
fcompl
sbb
pop
js
jmp
pop
pop
push
lods
test
inc
push
out
xchg
or
mov
imulb
das
push
push
loop
ret
outsb
fsts
shll
negb
cmp
cmp
and
push
sbb
push
jns
pop
jl
pop
iret
pop
dec
add
cmpsl
xchg
jo
fldenv
xchg
pop
cmpsb
rdmsr
dec
or
loop
pop
outsb
jb
cmp
jb
jmp
xlat
imul
gs
pop
lret
jbe
pusha
fucomp
lock
addr16
mov
pop
dec
push
imul
or
adc
xor
push
mov
jb
in
xor
repz
cmp
fld
jmp
adc
andb
sbb
in
mov
fldenv
and
jnp
movsb
mov
frstor
pop
jns
or
mov
icebp
dec
cmp
push
pusha
lock
cmc
cwtl
and
inc
pop
popf
sbb
push
push
dec
adc
xchg
mov
icebp
pop
sub
decb
mov
jg
adc
insb
and
aad
fwait
mov
ja
and
push
repnz
mov
dec
adc
and
fsts
notl
pusha
adc
stc
or
outsl
push
mov
shrl
adc
jecxz
inc
std
mov
mov
cmp
mov
and
cmc
mov
int3
dec
or
cltd
adc
je
or
adc
and
popa
dec
in
cmp
int3
fists
ss
jbe
add
jno
outsl
addl
dec
rcr
sbb
xchg
xlat
fcoml
into
mov
push
fisttpll
mov
dec
movsl
push
sub
dec
xor
cmp
sub
aaa
fisubl
and
in
dec
pop
ss
mov
loope
loopne
shll
mov
add
dec
jae
jge
jl
jbe
leave
mov
fisubs
push
and
jnp
cld
subb
jg
clc
fstpt
es
stos
iret
adc
pop
xchg
jns
sarb
stos
or
out
loope
lods
lret
test
ds
mov
adc
nop
cli
aad
add
mov
stos
test
mov
push
and
mov
push
nop
jbe
aaa
and
sub
repnz
inc
xchg
out
in
mov
call
mov
cmp
push
jbe
imul
jae
push
ret
lods
jmp
cld
mov
pusha
push
inc
xchg
xchg
mov
lods
insb
call
lds
decb
or
jns
arpl
loope
sbb
das
movb
stc
cmp
les
in
and
mov
lds
loop
adc
mov
xchg
sub
and
sarb
fstpt
cmpsl
ja
dec
inc
push
pop
je
xchg
mov
inc
andb
pop
shlb
adc
lods
sub
sahf
mov
fwait
xchg
movsb
daa
cwtl
outsl
jl
mov
aas
loope
push
pop
add
out
or
adc
outsb
pusha
insb
jne
test
push
pop
stos
sub
xor
orb
mov
scas
or
repz
cmp
ss
pop
lret
cwtl
nop
in
xchg
dec
pop
subb
mov
pop
pusha
clc
mov
sbb
ljmp
data16
fdivrl
jl
push
pop
jl
push
imul
xchg
lret
jns
mov
sbb
rcr
jg
daa
mov
insb
sbb
insb
stos
push
mov
mov
xor
pop
push
add
jae
and
arpl
xchg
outsb
sub
sub
stos
add
dec
stos
jbe
out
mov
dec
adc
dec
sub
in
adc
lret
aam
jl
inc
dec
dec
xchg
js
cli
lret
je
jo
sahf
mov
jae
jne
sbb
fwait
and
bound
repz
add
fisubrl
add
lea
movsb
cmc
push
adc
cltd
fwait
xchg
add
jl
dec
jb
test
mov
push
inc
inc
aam
lods
dec
or
sbb
sbb
mov
mov
fnsave
push
orb
xchg
fsubrs
xchg
and
out
mov
and
lods
jae
adc
imul
loopne
test
mov
popf
jge
in
pop
jle
shll
mov
xlat
in
int
fs
mov
out
jns
subl
xor
imul
mov
jo
cmp
rcrb
add
dec
jne
jecxz
pop
mov
aas
push
loope
mull
jno
pushf
cmp
pop
icebp
sub
pusha
sub
push
repnz
icebp
outsb
cmpsl
and
fidivrl
ret
cmp
add
sarb
stos
dec
iret
pop
popf
push
jb
add
xor
in
cmp
dec
push
jl
in
jmp
leave
aas
lock
inc
popl
movsb
jns
lretw
mov
les
mov
notb
mov
out
inc
cld
stos
incb
ljmp
add
or
add
xchg
or
sbb
imul
outsl
cmp
jns
out
push
ret
push
rorl
sub
loopne
js
mov
push
es
dec
hlt
mov
jle
xor
cmp
leave
cmp
sahf
mov
adc
add
xor
fcmovu
fsub
flds
je
ss
mov
jmp
sub
shr
ret
lret
pop
xor
jno
scas
mov
jmp
test
clc
cld
cmc
and
mov
rolb
and
push
dec
int
xchg
rcrb
mov
or
adc
push
cmp
loop
adc
cmp
add
mov
add
std
repz
xchg
pop
test
pop
inc
lock
cmp
rorl
lahf
stos
ret
enter
cwtl
dec
jo
pop
cmp
in
mov
push
and
call
mov
xchg
inc
dec
rcll
ret
xor
imul
sbb
lret
mov
lret
cmp
jle
iret
mov
aas
fisubs
dec
adc
leave
negl
push
enter
jmp
pop
add
dec
pop
es
out
ds
xor
pop
inc
ret
mov
dec
push
push
cmpsl
or
fstl
clc
cmp
xor
dec
pop
out
lahf
jle
inc
xchg
or
inc
inc
and
pop
cmc
jg
jb
dec
jae
push
aam
out
sub
mov
pop
inc
sub
je
das
pop
cmp
inc
mov
or
lahf
dec
add
and
mov
jecxz
adc
ret
cmp
test
pop
xchg
inc
cmpsl
add
je,pt
mov
jg
idivl
clc
jae
jecxz
add
std
mov
test
dec
mov
ja
cwtl
push
pop
push
cld
ss
into
repz
push
inc
out
out
mov
imul
out
jmp
dec
jno
outsl
in
insb
ja
fcompl
aad
pop
in
push
xchg
mull
pop
jmp
mov
adc
mov
xchg
repz
add
push
xchg
rclb
sub
jb
scas
sbb
pop
push
sbbb
mov
sbb
stos
pop
cmpsb
and
out
cld
lock
repnz
adc
cmp
add
adc
loope
sub
dec
mov
out
pop
jg
mov
fisubrs
fcomps
roll
jo
loope
jne
pusha
pop
adc
sbb
std
add
jno
stos
popa
cmp
ljmp
cld
add
xlat
cmp
dec
lods
in
in
add
js
fs
int
ljmp
lock
bound
push
add
in
mov
in
and
jnp
xor
rcrl
jecxz
push
sub
out
insb
loope
mov
adc
cwtl
cmpsl
add
enter
mov
jns
sbb
and
pop
enter
jb
push
lret
sub
out
push
sbb
movl
idivb
mov
xor
loop
mov
roll
je
pslld
dec
jae
loopne
cli
loop
cltd
mov
rcr
pop
ja
inc
mov
pop
push
xor
mov
es
mov
repz
stos
inc
into
cmpsl
cs
ljmp
cwtl
cli
leave
leave
jae
movsb
sbb
mov
and
mov
jbe
sub
cmp
add
push
stos
inc
cmpsl
jno
data16
ficoml
vmovntps
imul
and
neg
push
lcall
aam
mulb
push
or
or
adc
sbb
rclb
mov
push
imul
bound
sub
stc
test
and
in
aaa
adc
xor
ss
mov
and
jbe
mov
mov
fcompl
pop
shll
add
daa
daa
mov
or
xchg
ret
inc
sbb
icebp
scas
inc
mov
jle
stc
scas
scas
in
testb
lock
jp
aam
stc
pop
out
xchg
mov
cltd
cwtl
push
cmp
or
out
dec
xor
lods
jle
add
lea
insb
jmp
imul
sahf
xlat
je
dec
sbb
mov
push
cmp
sti
adc
shl
sub
jbe
jecxz
dec
sbb
mov
leave
lahf
je
scas
mov
sbb
hlt
or
enter
sarl
xor
jecxz
ss
notb
dec
dec
dec
mov
mov
push
mov
cwtl
jae
jne
mov
imul
out
pop
test
or
and
sahf
push
cltd
pushf
mov
adc
setb
cmp
fisubrs
ljmp
hlt
mov
out
jno
and
fwait
pop
test
inc
out
or
fiaddl
jmp
ljmp
jo
dec
sub
push
insl
aaa
xchg
push
cmp
jp
daa
shr
cwtl
fistpll
stos
in
pop
mov
popa
mov
pop
push
lret
inc
cmp
outsb
push
push
mov
add
mov
stos
xor
inc
xor
pop
ja
into
in
mov
negb
leave
test
jg
mulb
xor
mov
shl
inc
adc
sub
mov
mov
sarl
xchg
ljmp
je
test
btc
add
fisttpl
mov
lds
imul
or
push
rcr
fidivrl
push
fst
out
jge
cwtl
xor
add
push
xchg
aam
shll
xor
jno
mov
and
sbb
loopne
cmp
inc
jae
add
ficomps
jbe
push
loop
xchg
in
fldcw
std
jmp
dec
pop
xchg
xchg
scas
movsb
pop
pop
stos
addr16
adc
jns
xchg
out
pop
jl
js
jge
fcompl
arpl
shlb
or
hlt
inc
lods
cld
jle
mov
daa
push
mov
stos
add
loope
cli
insb
lods
jno
iret
push
es
inc
insb
fcomps
in
mov
cmp
mov
testl
cmp
xchg
jle
loope
flds
push
inc
mov
outsb
fcomi
fs
fwait
lcall
ror
dec
cmpsb
frstor
bound
pop
pop
add
push
popa
dec
ret
shlb
xchg
inc
xor
jl
cmp
lahf
inc
shll
adc
xor
mov
insl
cmp
and
and
aas
fcoms
xchg
in
mov
fidivrs
mov
jge
cmc
icebp
push
add
add
jno
adc
cmp
xor
sbb
cmp
xchg
lds
ja
mulb
pusha
inc
mov
mov
push
jmp
enter
mov
icebp
sub
mov
push
pushf
add
out
mov
lret
pop
push
add
stos
add
orb
mov
aaa
fmuls
xchg
leave
dec
mov
fisttpl
or
lock
pop
jns
xchg
addl
sub
jns
jecxz
loope
sub
sti
fwait
stos
ret
rcr
fnsave
inc
ret
dec
jns
ror
jl
add
sub
inc
int3
xchg
xchg
or
popf
sbb
fistps
pusha
orl
daa
scas
pop
mov
add
mov
xchg
sub
insl
mov
xchg
dec
dec
sbb
js
test
scas
sub
ret
mov
fsubp
ljmp
mov
jo
inc
and
mov
mov
push
aaa
shll
icebp
fildl
push
mov
and
mov
pop
adc
sub
cmpb
push
stos
or
rcr
xchg
fwait
sub
arpl
js
xchg
xchg
xor
fidivrl
xor
sub
jne
loop
loopne
mov
out
mov
fstps
jae
xorl
and
loop
and
jno
out
outsb
mov
cmpl
and
out
mov
or
and
mov
cmp
cvttps2dq
rorl
dec
mov
cltd
xchg
mov
fcompp
pusha
and
jmp
les
mov
push
pop
mov
sbb
and
in
xor
int3
aam
std
movsb
stos
pop
sub
clc
lds
out
jg
push
push
cwtl
mov
lcall
cmp
das
add
push
jl
or
mov
movsl
jge
ret
pop
mov
sahf
imul
aas
and
fwait
mov
imul
scas
ljmp
insl
inc
xor
test
push
sbb
or
adc
pop
jp
push
add
stos
mov
orb
dec
adc
fwait
cmp
scas
add
sub
gs
je
add
in
outsl
es
xor
and
jmp
add
pop
and
test
in
sub
push
cmc
xchg
mov
xor
xchg
fs
dec
lcall
jg
ss
mov
cltd
jo
cmp
xor
shll
ja
js
cli
mov
std
sbb
shrb
in
mov
inc
sub
mov
inc
xor
cwtl
arpl
lods
jb
push
mov
sub
dec
enter
test
int
push
or
xchg
jbe
rorl
pop
inc
movsw
xor
push
popa
cli
sbbb
test
add
mov
lahf
pop
mov
divb
add
inc
insb
jbe
push
cmpsl
fsubr
dec
pop
jmp
arpl
fsubr
sbb
je
jge
adc
jmp
ret
xor
or
push
push
push
mov
aad
dec
cmp
mov
sar
aam
sbb
lcall
outsl
inc
lods
cltd
xchg
es
jns
mov
dec
ds
and
rclb
iret
sbb
jne
xlat
addb
aam
adc
in
int
fdivr
jne
push
jle
pushf
xchg
mov
imul
dec
call
ja
fidivrl
add
cld
xchg
sub
dec
mov
dec
xchg
sbb
add
out
mov
push
pop
add
mov
rcrb
fs
inc
inc
pop
xchg
push
js
mov
mov
hlt
push
xchg
xor
add
hlt
das
test
mov
ret
fwait
icebp
jle
ja
outsb
hlt
mov
cld
sbbl
push
adc
outsl
pop
out
inc
sbb
int
and
mov
fnstsw
push
cwtl
xor
or
dec
cltd
mov
sub
repnz
pop
inc
jb
adc
movsl
pop
push
out
sub
sub
repz
xor
pusha
outsl
sub
push
aad
dec
mov
add
dec
in
add
inc
cmp
inc
sbb
repz
test
fstpl
loop
or
mov
ss
mov
and
movsb
icebp
aam
scas
xor
loope,pt
arpl
and
or
xlat
lods
rcrl
movsb
das
pusha
cmc
or
pop
imul
add
in
lret
mov
mov
mov
sarb
or
cmp
cmpb
cmp
setb
roll
fbstp
dec
mov
or
insl
xor
mov
filds
std
shrb
mov
push
and
pop
push
xchg
add
cmp
aad
mov
pushf
and
fcmovnbe
insl
fwait
dec
sahf
jo
rorb
aam
and
cmp
repnz
jo
les
jg
xor
cli
and
mov
xchg
imul
xchg
pop
jp
xchg
xor
adc
jnp
or
sub
shrb
xchg
push
jmp
and
movsb
movsb
paddsw
xor
lds
and
push
add
loope
push
pop
fistpll
dec
rcll
gs
scas
outsb
cmc
push
pop
xor
add
jns
xchg
pop
loop
stos
xchg
das
ljmp
jmp
mov
ficoms
mov
mov
outsl
jp
out
xchg
mov
jo
ss
add
mov
pop
es
push
mov
lcall
bound
lock
mov
xchg
inc
mov
rorl
inc
pop
dec
repnz
ja
sbb
leave
xor
sahf
adc
inc
lea
aas
ljmp
outsb
movsb
test
pushf
lret
pop
push
and
and
jg
mov
mov
enter
jecxz
scas
sbb
jns
and
mov
push
les
rcrb
add
mov
jns
mov
lahf
mov
mov
sbb
loopne
and
sbb
xor
out
adc
ret
sbb
xchg
std
out
mov
imul
jg
sub
imul
lods
fs
cltd
les
into
jb
xchg
daa
lret
ds
jnp
xchg
sbb
push
inc
scas
mov
push
mov
stos
push
cmp
push
sub
xor
jo
mov
add
push
push
push
in
push
repz
test
aas
gs
outsl
xor
jno
loop
mov
andl
imul
sbb
fildll
sub
mov
jo
or
out
and
or
stos
shlb
xor
insl
or
dec
xchg
or
jnp
rorl
xchg
mov
sahf
in
cld
ljmp
or
movsb
mov
mov
cmpsl
push
jae
push
mov
and
cmp
test
data16
and
lahf
test
or
or
mov
test
mov
or
push
sub
je
push
jmp
lock
or
and
adc
inc
mov
popa
fiadds
cmp
imul
aam
aaa
or
sbb
jge
call
cltd
fs
jnp
in
lahf
shll
push
and
jnp
add
adc
push
aad
sub
mov
cmp
inc
scas
pop
scas
push
push
stos
es
fld
cld
xchg
rcrl
sbb
pop
xor
xor
mov
mov
loopne
jns
jno
div
aad
call
mov
loope
xor
mov
scas
imul
jnp
in
dec
mov
leave
ret
adc
ja
sub
mov
pop
jne
into
movsl
add
fistl
jmp
sub
icebp
jne
mov
std
scas
sub
sbb
stos
arpl
stc
mov
cmp
lea
xchg
jmp
mov
pop
pop
xchg
jb
xor
sbb
push
push
ds
inc
das
loopne
shl
dec
ja
mov
adcl
push
cmp
or
jmp
dec
inc
add
inc
mov
add
fstpl
pushf
xchg
jmp
lret
mov
iret
scas
fbstp
jbe
cmp
mov
in
ds
data16
push
movb
xchg
pop
ror
jmp
fcompl
std
scas
insl
clc
mov
mov
stos
dec
int3
push
push
or
pop
xlat
out
mov
fiaddl
sub
xchg
pop
fcmovne
sbb
repnz
fisubs
push
test
mov
sbb
fwait
adc
push
imul
mov
mov
add
and
gs
or
inc
je
jnp
and
dec
xchg
imul
inc
sub
sahf
rorb
mov
mov
and
cwtl
in
or
aad
mov
xor
cmp
lock
aad
out
lods
push
dec
push
and
shlb
and
cld
fwait
sub
bound
xchg
insl
push
inc
rclb
fstp
push
popl
jge
adc
cmc
aaa
fisubrl
out
mov
loop
pop
mov
insl
bound
roll
loope
addb
jp
gs
pmaddwd
push
nop
fs
hlt
loope
in
scas
xchg
jle
jno
leave
pop
jnp
sbbb
adc
std
adc
stos
mov
pop
ja
repnz
jae
enter
popa
dec
in
mov
mov
bound
xchg
fistps
mov
or
cs
sti
xor
adc
xor
sbb
out
mov
mov
xor
or
add
xchg
lret
sbb
les
lahf
pop
sbb
test
aam
push
sahf
fwait
and
stos
mov
mov
pop
pop
hlt
rorb
mov
loopne
movsb
mov
mov
ret
inc
insl
jp
mov
xlat
jle
imul
test
xchg
pop
out
xor
mov
cmpsl
pusha
jmp
and
aaa
sub
mov
adc
fists
jne
mov
push
ret
cmpsb
push
rclb
push
iret
mov
mov
dec
sub
xor
movsl
fucomi
adc
hlt
fnstenv
lret
ret
sbb
mov
arpl
lahf
add
adc
ds
adc
push
sti
and
mov
mov
loopne
jp
cmp
sub
xchg
in
in
sbb
sbb
jmp
and
lds
icebp
test
sbb
fisubrl
nop
sbb
add
popf
xchg
cmp
lods
shll
mov
ss
cs
test
mov
mov
inc
ss
ret
adc
adc
nop
lahf
rol
scas
mov
and
add
adc
movsb
adc
out
inc
lea
lock
xor
jp
and
push
repnz
mov
pop
cmp
add
lret
xchg
push
rolb
inc
pop
xor
les
or
popa
xor
movsb
js
dec
mov
jmp
cmp
dec
cmpsl
outsb
inc
cmp
xchg
mov
cmc
and
xchg
jecxz
cli
lock
xchg
pop
add
adc
sub
sbb
movsb
insb
dec
sbb
aaa
mov
push
dec
and
jmp
scas
lahf
mov
pop
mov
test
imul
jo
sti
dec
or
push
cmp
fcmovnu
out
mov
push
pop
pushf
in
sarb
adc
adc
aad
out
in
sub
mull
adc
push
jmp
imul
fidivrs
xchg
int
push
fnstenv
and
mov
js
ret
pop
mov
icebp
mov
sbb
and
int
cmp
lcall
lods
or
inc
pop
shrl
in
mov
inc
mov
cwtl
inc
enter
and
mov
insl
mov
or
out
push
lock
mov
ret
lock
adc
in
or
lock
leave
xchg
ficoms
jnp
pop
mov
dec
pop
shrb
sub
mov
sbb
fnstcw
clc
mov
mov
cwtl
data16
mov
xchg
pop
mov
sbb
mov
adc
negl
xor
sarl
movl
mov
addr16
mov
rcr
hlt
xchg
or
mov
sbb
out
xor
icebp
lock
flds
sarl
jmp
mov
mov
mov
out
xor
inc
fucomi
hlt
ds
test
jae
imul
or
daa
pop
call
ret
mov
jl
xchg
pop
dec
pop
fprem1
and
scas
movsb
dec
pop
cmp
or
push
sub
sub
fisubrl
pop
pushf
mov
div
ja
hlt
fldt
inc
sbb
ljmp
mov
jne
int3
sbb
cli
daa
xchg
dec
inc
push
loop
pop
out
inc
jae
adc
sub
dec
mov
jle
lods
mov
xlat
mov
popf
les
cmp
sarl
es
lock
jns
xchg
cli
jbe
pop
inc
mov
jl
daa
mov
cmc
push
jecxz
cmp
mov
dec
lcall
hlt
jmp
jae
mov
lret
call
cltd
icebp
ret
lock
pop
notb
iret
push
sahf
cmpsb
add
jle
hlt
stc
test
dec
data16
sti
pop
inc
jae
xchg
sbb
sbbb
jl
pop
clc
push
jno
roll
cltd
rcr
sbbl
push
in
cmp
lret
sub
icebp
js
adc
inc
gs
iret
push
stos
jl
imul
inc
in
adc
lea
push
inc
add
enter
add
int
add
cmp
movl
je
xor
or
add
mov
movl
cmpl
je
cmpl
jge
jmp
push
call
mov
dec
mov
jmp
mov
xorl
xor
add
cmp
movl
jne
pushl
call
mov
mov
adcl
mov
mov
addl
xor
sbbl
add
cmp
movl
je
pushl
pushl
addl
call
sub
mov
decl
mov
mov
or
mov
xor
andl
add
movl
cmp
je
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adc
mov
adc
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
xor
add
cmp
mov
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
mov
xor
lea
jmp
mov
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
pop
push
sub
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
add
jmp
mov
mov
mov
mov
mov
xor
xor
add
div
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
mov
jmp
cmpsb
daa
arpl
push
mov
adc
cmp
and
jae
jnp
repnz
jnp
cmpsl
nop
inc
fidivrl
fwait
jl
divb
lcall
movsb
pop
dec
inc
mov
in
adc
mov
sub
adc
mov
lods
ud0
movsl
ror
and
test
sbb
push
dec
aad
in
or
negb
xchg
jo
sbbb
test
ds
mov
sbb
cld
iret
inc
and
and
push
push
cmpb
jo
ss
pusha
inc
icebp
dec
lea
push
adc
mov
xor
mov
stc
ds
je
fst
pop
std
jmp
lods
imul
sahf
jp
ffreep
and
clc
jmp
jl
rorb
xchg
pop
push
cld
rcrl
ds
into
add
sub
pop
iret
loope
xchg
shr
lods
xor
dec
mov
cwtl
lock
push
fnstsw
les
daa
sub
jg
pop
add
ds
mov
ficompl
mov
add
imulb
ss
xorps
inc
jl
popa
sbb
push
xor
mov
cmp
mov
jg
xor
in
aam
or
xor
pop
jecxz
bound
jae
outsl
mov
lods
jl
jae
cmpsl
xchg
stos
ja
rorb
sbb
add
xor
inc
mov
int
fidivrs
push
sub
xchg
mov
mov
or
push
scas
iret
imul
stos
push
bound
mov
push
cmp
test
js
mov
cmp
push
jae
cli
lcall
aam
sbb
or
adc
lds
gs
adc
xchg
jg
cmp
scas
ret
xchg
jbe
cmp
lcall
test
fldl
or
or
cmp
hlt
fiaddl
insb
adc
std
jbe
pop
mov
ds
push
jno
into
mov
lahf
dec
movsl
dec
mov
sub
mov
aam
sbb
add
jb
and
fcmovbe
push
out
mov
test
stos
cmp
enter
jb
mov
and
jo
xchg
aad
jp
sub
sbb
popf
and
push
outsb
xchg
xchg
pushf
add
cmpl
stos
jno
lea
pop
fchs
mov
inc
fists
adc
or
inc
pop
inc
sub
mov
add
and
xchg
xor
ret
lock
dec
aam
inc
jne
cld
jb
icebp
cmp
out
mov
push
popf
lods
ret
pop
xor
aas
test
stc
or
mov
xchg
xor
mov
inc
cmp
push
imulb
test
sti
add
sbb
cmp
mov
and
cld
xor
sbb
jmp
movsl
push
and
mov
cmpsb
sub
mov
sub
sub
movsb
pop
inc
or
fsubp
cs
add
xchg
adc
lahf
mov
loope
ret
sub
xor
scas
fsts
mov
push
clc
mov
xlat
xor
outsb
jl
sub
cmp
adc
push
into
mov
adc
jo
or
stc
pop
mov
lods
popf
lahf
adc
fldenv
imul
lret
addr16
fstps
dec
add
xlat
dec
fdivs
sub
out
mov
out
add
xchg
pop
mov
fwait
clc
sbb
test
lds
mov
mov
and
addb
jns
addr16
aam
out
cmp
jp
fs
sub
arpl
push
aam
inc
popa
in
sbb
xor
repz
jg
outsb
in
shlb
enter
adc
aad
pop
clc
fabs
jae
xor
sbb
xchg
jge
jge
lret
inc
cmpsl
dec
push
mov
imul
sub
popf
loop
adc
addr16
inc
add
movsl
jl
add
mov
cmp
mov
and
mov
jl
ja
data16
mov
push
mov
xor
imul
in
inc
pop
fstpt
adc
mov
movsl
mov
inc
popa
test
shll
xchg
imul
mov
xchg
shl
push
cmp
rcrl
out
mov
jnp
cmc
sahf
les
cld
addr16
dec
pusha
movsl
xchg
decl
mov
inc
shrl
fstps
add
shld
cmc
aas
ficomps
mov
cmp
push
fisttps
xor
lret
fstl
jle
mov
data16
push
mov
cmp
xchg
test
pop
sub
fldt
cld
xchg
jo
out
cli
rolb
xchg
popf
xchg
cmp
test
mov
xchg
cwtl
jns
sbb
fildl
mov
pop
cmp
jo
loop
and
mov
jb
lcall
mov
or
add
inc
inc
mov
adc
cmp
shlb
adc
nop
push
xor
or
jo
popf
mov
add
add
orl
movsl
clc
shrl
enter
and
mov
push
repz
xor
pusha
nop
jecxz
and
jno
mov
pop
movsl
mov
pop
dec
and
pop
mov
adc
bound
bound
push
rorl
out
cmp
mov
cld
cmpsb
rol
mov
test
mov
out
test
sti
hlt
insb
jg
lods
stc
mov
pop
adc
je
fwait
aad
mov
cmp
mov
pop
xchg
pop
push
and
xchg
rcll
mov
lea
sbb
lahf
aam
jge
push
insl
push
pop
adc
sbbl
dec
jae
shll
movntq
inc
pop
insl
xor
stos
xor
divb
scas
cmp
add
add
pop
xchg
cmpsl
adc
out
mov
cmp
xchg
adc
push
mov
push
adc
mov
add
fucomi
mov
insb
dec
arpl
into
adc
loope
loop
push
push
rcrl
pop
xchg
inc
sub
xor
in
hlt
dec
push
dec
dec
xor
cmp
call
xchg
sbb
xchg
mov
push
testb
dec
nop
icebp
adc
stos
inc
loop
sbb
int3
movsl
jb
cmc
popf
nop
pushf
push
imul
mov
in
or
aas
rcr
movsl
dec
enter
and
lock
mov
aad
mov
jmp
cmp
mov
movsb
arpl
sbb
test
inc
adcb
jno
or
in
fbstp
in
pop
sbb
loopne
jae
aas
sarl
call
sub
into
ret
lahf
jge
xor
sti
rcr
out
pop
pop
fiaddl
pop
cli
ljmp
dec
xchg
fstps
lods
mov
rolb
sahf
mov
and
jl
cmpb
or
imul
mov
int
pop
or
lds
push
test
add
dec
mov
std
lahf
into
sbb
xor
lcall
fcoml
pmaxsw
sbb
dec
pop
pop
addr16
nop
jae
addr16
clc
sbb
add
inc
sub
ds
push
adc
mov
jle
iret
dec
mov
loopne
roll
popf
mov
jge
nop
lods
clc
cmpl
std
mov
sbb
jecxz
pop
mov
orb
andl
xor
fidivrl
add
insb
shl
xchg
xor
movsb
mov
lods
push
mov
lods
xchg
loopne
ret
nop
std
jb
jae
mov
mov
xchg
inc
dec
mov
push
jmp
mov
int3
mov
mov
cmc
dec
inc
xchg
rcll
xor
jne
xor
jecxz
xlat
mov
mov
sub
stc
loope
xor
movsb
adc
cmpb
push
movsb
imul
sub
mov
pop
repnz
xchg
or
aam
movsb
rclb
test
adc
mov
sbb
mov
cmc
icebp
push
jecxz
push
inc
xor
push
aas
pushf
popa
jg
mov
lds
jne
popf
leave
add
push
outsl
push
call
xchg
push
jns
xor
mov
into
xchg
insb
cmpsb
imul
fdiv
pop
push
push
fstl
push
dec
adc
sbb
inc
das
fdivs
cmp
jge
cli
icebp
fsubrs
adcb
pop
mov
in
cmpsb
decl
pop
mov
out
xchg
sbb
and
add
pop
and
and
pop
int3
fmull
xlat
xchg
jb
stos
cmpl
ficoml
mov
ljmp
pop
jno
or
gs
pop
sbb
mov
mov
adc
ljmp
std
mov
les
xchg
rolb
stc
inc
mov
jnp
inc
mov
movsl
testb
std
inc
and
aaa
jmp
push
pop
mull
out
mov
pop
add
insb
cs
adc
lods
popf
and
fcoms
add
popf
adc
jl
xor
lret
shll
mov
jo
pop
sub
fld1
fists
ja
popf
lock
push
cmp
out
pusha
orb
adc
bound
mov
scas
std
cmpsl
sahf
arpl
aad
das
test
mov
dec
mov
hlt
xor
cltd
push
pusha
push
js
in
call
push
into
loopne
ja
das
enter
mov
fs
shl
outsb
and
mov
xchg
jbe
cmc
stc
lods
pop
pop
push
mov
adc
insl
andb
or
lock
subb
mov
and
movsl
bound
mov
inc
push
aam
lods
ret
je
adc
test
mov
test
inc
ficoms
out
mov
sarb
hlt
jle
sub
mov
in
ja
lea
adcl
clc
stos
inc
fstpt
dec
cli
push
push
adc
sti
sub
dec
mov
dec
ja
mov
xor
jne
inc
add
jo
das
popa
cltd
jbe
testb
scas
sbb
jecxz
pop
stos
fisttps
leave
and
popf
sbb
cmp
jle
aad
cmpsl
jns
or
pop
fs
test
add
sbb
fs
sbb
pop
pushw
push
inc
pop
xchg
or
cmp
in
push
sbbl
sub
into
fidivs
aas
shll
cmp
adc
or
dec
jno
lods
adc
cmp
xchg
mov
push
sub
xchg
push
cmp
in
outsl
lret
add
xor
fnstcw
dec
aaa
xchg
mov
push
sbb
and
fisttpll
inc
pop
cltd
mov
shll
std
add
fistl
inc
push
insb
int3
jp
adc
add
fs
push
and
lods
push
xor
pop
repnz
mov
xchg
and
push
add
loop
xorl
test
je
lret
out
inc
sub
mov
inc
xchg
push
xchg
sub
cmpsl
mov
in
clc
jecxz
jecxz
sub
cmp
in
addr16
dec
add
notl
cmp
xchg
out
mov
sahf
pop
incb
add
xchg
movsl
jns
xor
add
sub
repz
add
jmp
mov
repz
aaa
shrl
rclb
cmp
cmp
dec
rcr
cli
leave
mov
sbb
inc
inc
hlt
sbbl
rep
mov
jmp
nop
or
mov
jmp
insl
imul
shlb
push
jecxz
data16
les
rorl
mov
dec
push
shll
fistps
mov
xchg
xchg
loopne
shrl
fisttpl
fidivl
out
movnti
pop
cmp
lret
push
xchg
fs
outsl
ss
mov
jecxz
mov
cld
cmpl
mov
add
lcall
scas
sbb
es
scas
lret
flds
lods
or
test
push
and
jle
jp
mov
je
and
clc
pushf
adc
or
mov
jno
fdivrl
push
push
outsl
jns
push
in
sahf
xor
sti
les
fstpt
mov
pop
dec
xchg
mov
and
push
rorb
das
ljmp
lahf
add
pop
push
jmp
adc
or
sahf
or
or
mov
sti
in
or
data16
sbb
rcl
mov
daa
cltd
push
lret
inc
sbb
mov
dec
push
mov
ja
ret
mov
mov
pop
insb
and
les
lret
cmp
scas
std
scas
mov
test
lock
out
data16
add
daa
add
push
mov
xchg
mov
fs
add
jbe
push
fsubrp
xor
sahf
xorb
adcb
mov
mov
push
in
mov
mov
and
mov
test
fcompl
pop
in
xor
and
jb
xchg
sbb
pop
test
jo
cmp
or
setnp
insl
arpl
hlt
mov
sbb
out
xchg
adc
pop
repnz
lock
outsl
or
cmpl
test
pop
movb
or
sti
fadd
icebp
gs
push
lds
dec
add
xchg
add
or
insl
lret
cmp
mov
in
jmp
mov
jmp
xchg
push
lods
mov
pop
lret
xor
bound
popf
loope
mov
imul
mov
data16
out
pop
out
clc
add
mov
add
xchg
xchg
add
xor
rorb
inc
cmc
mov
cwtl
int3
adc
mov
sbb
mov
jno
push
ss
loop
std
xor
push
cmc
jb
sbb
and
mov
bnd
loop
js
and
xchg
sahf
insl
cmp
xor
fadds
inc
popa
fiaddl
cmp
pushf
cmpsl
add
iret
xchg
imul
sti
scas
cli
fdivs
mov
dec
xchg
inc
ret
ss
dec
mov
sbb
in
in
bound
aad
xor
data16
adc
int3
movsl
inc
inc
adc
sub
push
aam
scas
inc
mov
push
into
popf
add
adc
add
xchg
mov
hlt
dec
jns
sbb
lcall
rcr
and
and
dec
or
lcall
lods
lcall
cs
ret
insb
lahf
sarb
sahf
ss
lock
jns
pusha
fldt
sbb
fildl
call
or
sbb
inc
mov
cmpsb
outsl
add
sub
pusha
hlt
aam
xor
subb
imull
xor
sbbl
mov
and
push
or
cmp
lods
cmpsb
loopne
fcoms
dec
mov
cmp
mov
mov
lret
pusha
sbb
pusha
mov
sarb
dec
jne
xor
andb
jle
sbb
jae
pop
dec
and
adc
bound
loope
into
sub
xchg
sahf
fwait
imul
and
push
adc
mov
xor
push
repnz
and
decl
dec
push
push
add
lock
mov
xorl
add
or
push
or
push
enter
mov
lock
imul
jle
or
aaa
mov
or
or
cld
pop
lret
jbe
xlat
xor
fs
enterw
lock
or
daa
mov
shrb
fsts
and
push
test
or
comiss
cmp
xchg
inc
sbb
or
daa
leave
test
call
sbb
mov
cmpsb
push
adc
int
cmpsb
or
sbb
js
sbb
ret
cmpsb
dec
sti
in
inc
stos
adc
aam
idivb
push
shr
jle
mov
fwait
aas
and
adc
ss
out
push
mov
lods
cmc
into
lret
sub
pop
mov
lods
jmp
inc
pop
cltd
rclb
out
mov
rorb
push
int3
mov
mov
cmp
cmpsb
mov
leave
sahf
sub
pop
negl
push
adc
cmp
mov
jae
lods
xchg
lret
and
ret
arpl
sbb
repz
stc
cwtl
jnp
hlt
mov
jb
cltd
pop
and
imul
jmp
mov
mov
push
xsha256
cmpsb
aad
pop
lret
shl
cli
jno
or
iret
or
fisubl
pop
in
push
outsb
cmp
mov
test
mov
mov
cmp
mov
sahf
xlat
mov
add
cmc
das
push
popf
ret
or
mov
mov
enter
outsb
or
mov
out
outsl
xlat
dec
in
sbb
in
xor
test
and
cltd
sti
jae
rcrb
push
ror
les
adc
in
sub
out
jle
out
hlt
mov
inc
in
repnz
xor
mov
push
imul
xrelease
xchg
pop
pop
add
inc
cwtl
jg
mov
popf
add
lods
push
push
jecxz
loope
rcr
adc
pop
xchg
rcll
push
repz
xchg
pop
and
add
push
out
adcl
sub
rorl
pop
hlt
adc
decb
xor
movsb
popa
xor
lock
out
mov
ret
lock
pop
scas
jbe
cmp
pop
lcall
jl
scas
in
pop
test
imul
sub
out
decb
cmp
fistps
jnp
xlat
je
jno
mov
xchg
adc
sbb
dec
sbb
mov
leave
add
adc
push
sub
sub
jnp
call
inc
adc
or
lock
push
mov
int3
enter
icebp
stos
jle
fstpl
fdivrs
add
push
mov
test
sahf
imulb
repz
xor
inc
ds
push
cmp
inc
js
and
jmp
inc
mov
adc
and
jae
push
add
and
je
cs
lret
push
dec
cltd
mov
in
loop
sub
pop
sahf
test
inc
add
inc
out
outsl
dec
adc
add
cltd
test
cmpsb
push
pop
adc
xor
data16
in
setne
mov
push
mov
or
mov
push
cmp
addb
or
lock
mov
mov
rol
xchg
mov
xchg
mov
jb
mov
addr16
ficompl
ss
push
xlat
popf
push
je
push
test
in
mov
lret
xchg
loope
js
fwait
aam
xchg
sub
repz
repz
sub
cld
mov
and
scas
out
pop
pop
pop
sub
inc
sbb
and
xor
sbb
movsl
sbb
jbe
iret
cmp
mov
and
dec
loop
imul
sbb
jae
mov
test
fldt
push
or
add
aad
js
sahf
mov
xchg
sub
cltd
pop
xchg
cmp
pop
mov
dec
xchg
out
je
movsb
mov
je
mov
xchg
push
gs
push
push
lea
or
pop
inc
jmp
adc
mov
nopl
sub
push
ljmp
insb
pusha
sbb
lock
popa
pop
xor
mov
lret
xchg
push
div
imul
movsl
rorb
adc
das
lds
mov
mov
out
popa
pop
mov
aad
xor
xor
fcmove
cmc
insb
mov
mov
push
and
outsb
and
jae
nop
out
or
cld
pop
add
fwait
vhaddpd
push
mov
cwtl
aaa
aas
leave
mov
jge
in
dec
dec
test
rorb
adc
loopne
dec
mov
xorb
dec
popf
jp
data16
rorl
sub
aad
mov
mov
mov
inc
push
push
pushf
mov
pop
testl
or
xchg
dec
aad
sub
jle
out
sub
inc
or
push
imul
ja
movsl
and
dec
adc
push
add
pusha
movb
pop
fiaddl
pop
stc
dec
xlat
push
jge
stos
ffreep
cltd
pusha
sub
pop
lcall
js
xchg
push
push
idivb
jnp
es
or
fdivrs
enter
pop
cmp
pop
push
cmp
cli
lret
pop
adc
push
pop
stos
gs
mov
pop
jg
dec
stc
pop
adc
xor
mov
jmp
or
cmpsb
idivb
imulb
jecxz
add
sahf
sub
jne
in
fbld
push
in
sbb
and
fwait
and
mov
pop
ljmp
dec
das
xor
call
lahf
in
and
dec
sub
ficompl
dec
fsubrp
inc
add
sbb
or
mov
push
scas
jle
xor
push
jbe
jne
arpl
mov
mov
repnz
addr16
pop
dec
lret
fcmovnu
inc
sbb
push
popf
mov
dec
xchg
push
sub
mov
cmp
mov
lock
fstl
or
std
sbb
ret
jno
jnp
rcrb
out
loope
movsb
jmp
xchg
add
imul
test
jbe
test
fidivrs
adc
insb
pop
pop
divl
mov
jae
aam
xchg
movsl
and
pop
loope
inc
xor
xchg
adc
cmp
in
dec
or
shrb
mov
imul
mov
cmp
test
mov
std
mov
cmc
fstpl
inc
data16
repz
scas
adc
sarl
jl
in
mov
jae
jp
imul
ret
ljmp
cmp
pop
pusha
mov
and
mov
push
mov
or
sub
add
enter
pmullw
mov
lea
and
mov
in
dec
mov
jmp
push
vcvttsd2si
sub
xchg
xor
jns
dec
mov
roll
pop
fdivrs
daa
dec
or
mulb
add
sub
sub
leave
mov
and
daa
mov
cmpsb
mov
jl
inc
decl
int
push
test
add
lahf
mov
rclb
lds
insl
jno
inc
sbb
fwait
cmp
sbb
sbb
cli
lods
scas
push
pop
lcall
movsb
inc
mov
inc
xchg
lret
ret
cld
dec
mov
repz
subb
bnd
adcb
rorb
sbb
or
pop
bound
and
cmp
pop
or
out
pop
mov
sub
mov
jle
cs
inc
push
mov
movb
cmp
xor
pushf
arpl
jge
adc
out
in
mov
clc
lahf
xor
jae
shl
pop
lcall
adc
enter
popa
or
fisubrl
out
adc
rcrb
mov
fcompl
dec
movsl
push
cli
mov
cmpsl
cltd
or
fsubrp
mov
in
cmp
xlat
shrl
cmpsl
jns
fnstenv
xor
fidivrs
cmp
inc
jge
ror
cmp
jne
in
dec
out
jno
loopne
mov
mov
jge
mov
cmpsl
sahf
sub
pushf
lahf
xlat
pop
dec
xor
leave
sbb
hlt
jmp
aaa
cmc
test
and
loop
outsl
das
xor
and
sbb
cmp
andl
pop
inc
dec
pop
cmp
test
mov
repz
shl
inc
pop
mov
inc
js
icebp
pop
dec
stc
add
cmp
pop
roll
aas
pop
xchg
sub
in
iret
stc
test
sub
out
xor
jle
pop
sbb
adc
js
jbe
into
jmp
adc
mov
jo
in
repz
aaa
enter
dec
ss
xor
cmc
pop
pusha
xchg
mov
mov
fbld
idiv
cltd
int
mov
popf
movntps
in
xchg
pop
int3
mov
les
sbb
mov
inc
dec
fdivl
aaa
pop
dec
xchg
sub
out
pop
pop
enter
jae
adcb
inc
or
adc
jnp
test
out
jg
jb
or
xchg
hlt
inc
mov
mov
cwtl
loope
mov
and
xchg
fiaddl
imul
and
mov
or
mov
ja
mov
push
jne
clc
inc
push
push
andl
dec
call
repz
rorb
pushf
and
in
stos
icebp
add
add
loopne
pop
inc
lds
push
fstpt
fwait
rorl
outsb
pop
cmpsl
sub
and
int3
pop
shrl
dec
sub
mov
and
call
add
pop
out
jae
jmp
push
push
js
jne
gs
dec
add
mov
notb
inc
pop
loop
cmp
mov
push
xchg
push
adc
xchg
daa
jmp
mov
fldl
adc
stc
in
sbb
xchg
or
cmpsb
pop
hlt
clc
mov
jl
or
out
inc
loopne
mov
enter
cmc
jp
dec
lods
and
loopne
sub
adc
push
mov
adc
cmc
sahf
add
xchg
lods
dec
push
movsl
adc
sti
mov
push
jecxz
xor
stos
fisttps
mov
cmpsb
mov
insb
popa
in
lods
jmp
adc
mov
inc
jmp
push
lret
stos
clc
les
popa
xchg
jmp
test
xor
mov
shlb
aaa
fidivl
lds
mov
push
xchg
repnz
jne
cmc
push
adc
sbb
and
pop
int3
sarb
inc
cltd
jae
dec
dec
gs
into
or
xor
cwtl
xchg
jno
rorb
stc
iret
cmpsb
lret
ds
inc
push
es
mov
inc
rolb
mov
cmp
pop
aad
xor
test
mov
adc
mov
adc
inc
out
push
or
push
ljmp
sub
popa
nop
das
stos
add
sub
divb
loop
add
insl
mov
dec
lcall
bound
xchg
rclb
mov
mov
adcb
xchg
sbb
test
push
mov
movsb
sbbb
fisubrl
test
mov
cli
or
jecxz
inc
ss
mov
iret
movsl
sbbl
sub
pop
enter
not
fsubl
aas
shrl
fisubs
das
das
cmp
jle
cmpxchg8b
push
mov
fwait
xor
shll
iret
ljmp
stos
lahf
jnp
lds
lods
add
pushf
or
adc
cmp
push
enter
sbb
xchg
mov
std
std
xchg
into
push
js
cmpsb
jle
jg
int
inc
xor
add
xchg
test
lret
mov
lret
lods
pop
inc
call
leave
xlat
negb
sarl
insb
pushf
icebp
jno
std
bound
adc
mov
xchg
in
adc
aaa
or
inc
sbb
std
or
mov
ret
xor
or
mov
xchg
add
test
sbb
push
cmp
mov
int3
or
mov
mov
and
mov
dec
pusha
mov
sahf
push
mov
jle
or
out
das
std
pop
rorb
mov
shlb
imul
pop
out
int3
jg
mov
xlat
jo
or
xorl
cld
sub
jge
dec
jns
adc
dec
fcomps
xchg
insl
jmp
push
push
push
mov
aaa
xchg
adc
jbe
push
cmp
ret
in
jecxz
scas
pmaxub
dec
je
in
mov
push
xchg
pop
push
add
mov
sbb
pusha
xchg
insb
daa
and
jecxz
dec
dec
clc
mov
bound
push
sahf
mov
mov
out
inc
test
jbe
popf
into
lods
cmp
outsb
jle
sbbl
jp
push
mov
push
fs
push
aad
out
das
into
das
repnz
sbb
push
and
xchg
insb
arpl
sahf
cld
xchg
jae
lea
outsb
mov
mov
sbb
jmp
mov
test
xor
and
mov
pop
pop
ja
and
fidivl
inc
adcb
mov
nop
aas
les
mov
push
lods
pop
iret
mov
addr16
bswap
enter
add
mov
xor
enter
xchg
adc
fstl
jl
mov
pop
inc
rcl
or
shll
xor
mov
cs
and
mov
cmp
loop
sbb
xchg
out
icebp
lea
je
mov
jo
lret
imul
dec
pop
push
js
shl
mov
mov
pop
outsl
jmp
test
adc
stos
fisttps
into
jnp
mov
mov
scas
push
push
jl
sub
add
inc
sub
movsl
cmp
ss
xor
xchg
dec
inc
jmp
push
das
jns
shlb
mov
arpl
inc
xor
jg
and
sbbl
inc
stos
cld
inc
aad
rorb
pop
gs
sub
scas
rcrl
lods
inc
out
sbb
int3
mov
in
cltd
cwtl
mov
adc
or
repz
or
lock
imul
hlt
push
push
jne
jo
cmp
popf
cmp
push
mov
dec
stos
xor
push
js
adc
xor
into
add
cmp
jb
enter
mov
jecxz
add
push
mov
fdivrp
fisttpl
inc
jae
push
and
sbb
cmp
leave
mov
popa
or
jecxz
adc
jecxz
call
lret
push
test
xchg
iret
and
out
or
cmp
cs
lods
sbb
mov
push
pop
testl
out
out
rolb
mov
mull
adc
pop
mov
loopne
js
xlat
and
dec
pop
adc
mov
xchg
inc
roll
outsl
adc
addb
int
push
sbb
sbb
add
dec
mov
in
add
aam
popf
cmp
jle
cmovg
test
out
scas
ljmp
decb
xorb
and
mov
mov
not
pop
xorb
aad
mov
add
repz
cld
xor
mov
es
out
push
adc
xchg
push
xor
add
sbbb
pop
in
mov
adc
das
stc
lods
aad
shll
sbb
popa
xor
and
dec
shll
adc
push
push
xchg
adc
std
leave
xchg
je
mov
inc
push
jge
scas
dec
out
adc
lret
or
cmpsb
lods
or
push
mov
sti
adc
lea
mov
sbb
lds
test
pusha
adc
lock
mov
addl
xchg
adcb
gs
push
icebp
dec
push
in
and
inc
push
or
out
test
jge
imul
cmpsb
pop
dec
imul
fisubl
hlt
xor
imul
int
sahf
and
inc
push
sti
xor
fstl
imul
inc
sub
iret
lcall
outsb
xor
pop
jno
lds
movb
imul
mov
mov
mov
xor
lea
cmp
jne
mov
mov
xor
add
mov
and
xor
xchg
xor
push
mov
jmp
cli
test
pop
jo
inc
add
and
insb
jnp
repnz
jnp
mov
in
jl
dec
and
pop
outsl
inc
xchg
sarl
stc
jae
pop
jecxz
rcr
sbb
or
cwtl
nop
hlt
push
sahf
imul
push
push
add
loop
testl
shlb
lods
sub
adc
call
rcl
jmp
xchg
out
and
lcall
inc
lret
dec
cltd
roll
sahf
sbb
jge
push
and
sub
movsl
xchg
jo
stos
push
sub
xchg
push
hlt
cmp
or
sti
add
pop
or
aas
mov
out
xor
mov
cmpsb
and
cmp
push
cmp
or
jbe
mov
push
sub
mov
fwait
lods
sub
inc
sub
out
mov
pop
inc
sbb
hlt
cwtl
sar
fdivs
imull
in
cmp
cmpsl
jmp
rclb
orl
xchg
pusha
add
stos
adc
cmp
out
insl
adc
xchg
and
std
jle
sub
or
xor
adc
xchg
fdivrl
iret
and
or
aad
push
add
jecxz
fbld
push
or
into
xchg
mov
cmpsl
shll
adc
xchg
fidivrl
mov
stc
or
mov
adc
in
xor
inc
fldcw
scas
sbbb
push
loopne
xor
mov
mov
je
call
movsl
out
adcb
insl
fcomip
mov
xor
adc
mov
and
out
ds
push
add
mov
mov
xor
lods
enter
out
push
cmp
mov
inc
das
aaa
mov
test
cmp
and
push
push
mov
cmpsb
mov
ljmp
popf
out
add
test
sub
mov
loope
xor
sbb
add
imul
adc
ret
adc
cmpsl
out
xor
bound
mov
mov
inc
sbb
xor
cmp
dec
pop
rcrl
sub
jnp
fdivrp
fbstp
jmp
sti
sub
shrb
mov
pushf
fucomip
push
int
fisubs
or
pop
stc
jp
dec
stos
push
push
in
cltd
dec
out
push
jae
dec
sbb
icebp
and
mov
movsb
push
mov
jmp
test
scas
cld
flds
or
fs
inc
mov
dec
stc
bound
addr16
mov
push
mov
daa
push
or
sbb
fists
out
sbb
or
scas
mov
fprem
lahf
and
push
mov
andb
pusha
mov
int3
adc
mov
mov
xor
stos
add
ja
mov
jbe
ss
sub
cmp
bound
push
lcall
lret
mov
push
inc
cld
pop
imul
aas
mov
int3
jp
mov
lahf
add
sub
lods
rcrl
data16
andb
out
loope
daa
arpl
pop
adcb
ja
and
dec
cld
insb
or
jbe
add
mov
sarl
dec
xchg
pushf
iret
mov
sub
pusha
cmp
insb
cmpsb
xlat
sub
mov
jo
jl
imul
xor
popl
lahf
insl
cmp
leave
stc
shll
or
push
mov
adc
xchg
insb
xchg
or
std
rcrl
movsb
ret
insl
pop
mov
dec
pusha
mov
push
mul
cmp
repz
cmp
jge
ss
and
daa
fists
inc
jbe
mov
addb
int
in
mov
inc
sub
loopne,pn
push
dec
xor
add
or
test
imul
pop
cmp
cli
and
std
bound
stc
mov
push
outsb
ror
lods
je
adc
nop
ljmp
dec
pusha
inc
in
lret
lods
jp
lahf
ret
mov
inc
adcb
fcoml
push
and
stos
nop
jg
les
inc
inc
jo
repnz
test
ss
cltd
ds
pop
sbb
and
cld
into
sub
imul
icebp
jp
outsl
idivl
cmpsb
popa
mov
cld
fistpl
outsl
inc
repnz
cmpsb
enter
sub
jno
divl
push
or
mov
mov
loop
inc
push
js
iret
sub
loopne
hlt
sbb
syscall
inc
sub
jecxz
dec
jae
inc
lahf
push
xor
fsubs
pop
ja
cwtl
mov
pop
fs
scas
roll
test
movsl
pop
add
add
and
mov
mov
es
dec
or
fs
mov
cmp
mov
push
sub
test
adc
sub
scas
add
out
jecxz
enter
out
add
lret
pop
negl
add
ljmp
ss
sbb
jns
addr16
jbe
sbbl
mov
test
inc
enter
subl
faddl
push
add
pushf
stos
xchg
pusha
jae
std
xchg
mov
mov
sub
movsl
and
imul
or
mov
ds
outsb
loope
out
sbb
out
mov
in
xchg
ret
push
xor
repz
push
daa
lcall
mov
cmp
out
mov
xor
cmc
sub
in
xor
iret
das
fcoml
iret
lods
hlt
pop
sub
in
adc
cmp
shll
cmp
xor
pop
and
in
movsl
fdivrl
into
and
mov
push
push
jg
mov
insb
xchg
jns
pop
sub
mov
out
loope
pusha
jbe
pop
dec
lahf
inc
repnz
hlt
sbb
cmp
xchg
mov
mov
cmpb
dec
jmp
fidivrs
into
lea
cs
mov
rorl
jnp
xchg
movsl
add
scas
push
inc
pop
and
add
cmp
or
xor
or
mov
and
add
int3
pop
cmp
mov
adc
mov
cwtl
stos
cmp
in
in
sahf
push
dec
fwait
add
stos
inc
add
adc
pop
stc
cmp
andl
jo
xchg
inc
push
imul
in
sbb
jb
enter
xor
xchg
xchg
xor
mov
cli
inc
cli
xchg
mov
mov
jl
sbbb
or
cmc
fildll
xor
insl
mov
inc
add
fwait
orl
cmp
adc
or
subl
xchg
sar
and
mov
pop
add
mov
push
xor
add
xchg
cmp
xchg
sbb
sub
stos
mov
cmp
std
fcmovbe
mov
mull
xchg
mov
lret
push
imul
mov
scas
in
insb
bnd
idivl
cmpsl
sbb
dec
sahf
mov
movsl
sub
int
lcall
jmp
ds
jae
aas
fs
xchg
into
leave
sub
dec
paddb
xor
and
enter
popa
mov
add
ficoms
adc
inc
lret
cld
cmpsb
scas
fsts
nop
dec
xor
sbb
dec
jae
mov
mov
test
adc
sti
cmpsb
and
out
divb
hlt
mov
mov
std
outsl
mov
bound
pop
jne
jno
adc
or
pop
fidivrl
in
cmp
xor
dec
xlat
mov
in
push
cmp
and
fcompl
xor
andb
daa
cmpsb
mov
add
push
icebp
cmp
and
push
dec
xchg
xchg
mov
dec
or
push
pop
dec
into
or
imul
xchg
rorb
in
loope
pop
xor
movl
sub
pop
hlt
push
outsb
in
lcall
sti
mov
jmp
pop
jb
insb
sbb
out
dec
add
add
cli
fstpt
lcall
ljmp
je
hlt
stos
test
mov
out
mov
pop
and
and
fbstp
mov
loope
movsl
xchg
jo
lods
in
stos
lods
dec
aaa
jle
sub
sti
pop
fisubrs
sbb
ljmp
nop
insb
outsl
cmc
pop
mov
jg
or
dec
orl
int3
jo
inc
mov
arpl
roll
adc
xchg
adc
jns
bound
hlt
insb
inc
sub
fiaddl
fdivrs
xadd
dec
or
xchg
xchg
xchg
sarb
mov
lods
adc
outsb
stos
or
xchg
jo
pop
fbstp
movsl
inc
adc
xor
loopne
ds
pop
fstl
daa
dec
sub
filds
adc
cmp
pop
mov
and
mov
test
pushf
dec
and
xor
or
push
cs
push
xchg
adc
push
shrl
scas
mov
jnp
lret
or
pop
sub
mov
cmp
or
and
xor
pop
cmc
jl
pop
fwait
adc
push
adc
gs
lcall
push
test
cmpsl
leave
sub
cli
bound
pusha
pop
and
cmpsb
mov
ss
std
inc
push
aad
imul
adc
icebp
lds
sub
pop
xchg
mov
xchg
mov
mov
xchg
cltd
out
or
ficoml
xchg
int3
mov
or
shl
lcall
sub
xchg
clc
mov
mov
lret
and
out
cld
adc
jae
pusha
xor
mov
add
mov
mov
mov
pop
aam
cs
sarb
inc
aaa
iret
jnp
lods
test
cmp
add
mov
shll
pop
mov
imul
push
and
lret
and
sahf
cmp
sahf
mov
and
dec
ret
lods
pop
pop
push
mov
inc
cltd
xlat
or
das
sbb
divl
ficoms
dec
pop
imul
fcmovu
inc
sbb
pop
add
stc
lock
or
adc
mov
mov
lret
fxch
fnstenv
icebp
in
sbb
inc
loope
or
cmp
fs
push
xchg
inc
jne
ljmp
jo
xchg
dec
or
mov
and
mov
adcb
dec
arpl
sbbb
cwtl
aaa
inc
stc
gs
sti
push
mov
icebp
pop
adc
outsb
xchg
push
lds
dec
das
movsl
mov
into
inc
iret
sub
test
ja
and
mov
pop
sub
adc
je
pop
sti
pusha
pop
jecxz
enter
pop
fimull
outsb
jns
xor
sbb
jg
cmp
stos
sbb
pusha
jb
push
into
ret
mov
mov
add
mov
insl
scas
mov
and
loope
testb
pop
cmp
inc
addr16
aam
movsb
lahf
scas
sbb
outsb
pop
mov
shrl
mov
out
sti
mov
cld
mov
xchg
sub
pop
sbb
jo
insb
ret
jnp
cmp
loope
jo
pop
scas
movsb
loopne
sarb
mov
pop
enter
psllq
and
ficoms
js
xlat
jno
nop
cltd
ljmp
or
call
enter
fcomp
ljmp
push
std
lock
push
repz
cld
dec
call
jle
lret
lods
int
aas
fdivs
movb
dec
add
test
popa
pop
or
insb
mov
xchg
xchg
mov
std
sub
ds
lea
xchg
sti
inc
and
pop
jae
clc
cmpsl
jmp
fs
mov
add
cmp
cmp
and
hlt
sahf
sarl
adc
fdivl
pop
jne
addl
inc
pop
dec
jmp
dec
shr
inc
jmp
add
lret
inc
in
fstpl
inc
cmp
xchg
sar
jl
ljmp
call
orb
or
mov
fwait
pop
ret
dec
mov
in
mov
mov
fsub
cmp
jae
mov
imul
dec
inc
push
sub
sbb
mov
movsl
or
pop
cmc
ds
jo
stos
das
mov
add
sub
imul
mov
cltd
mov
lcall
or
lret
inc
sub
arpl
imul
sar
sti
cwtl
mov
xchg
mov
cmp
add
cmp
cs
push
pop
fnstcw
fs
or
mov
sbb
int
sub
and
movsb
dec
in
cmp
outsl
inc
add
cld
or
out
push
jp
out
arpl
mov
insl
sbb
test
jno
aad
ret
xchg
adc
pop
std
inc
sbb
in
icebp
adc
sbb
jo
and
mov
jno
cwtl
fiaddl
test
insb
cmp
out
lods
daa
jmp
in
decb
in
or
inc
cmp
movsb
cs
imul
movsl
mov
jno
scas
repz
out
inc
mov
mov
lahf
scas
jno
pop
out
cld
pop
xchg
jl
add
imul
test
pop
je
insb
pushf
in
or
lock
xor
dec
jp
inc
mov
jmp
mov
aaa
mov
inc
lock
xchg
jmp
add
cmpsb
mov
test
or
sbb
mov
lods
pop
mov
xchg
cmp
jp
cmp
sarl
icebp
push
push
adc
cmpsb
mov
cmpsb
lock
data16
stos
mov
subl
mov
pop
stc
pusha
and
xchg
insb
enter
fwait
je
shl
adc
mov
jecxz
xor
mov
sbb
dec
stos
xchg
pop
test
fcoms
jno
scas
pop
iret
cmp
lods
imul
inc
sbb
xchg
out
out
mov
ljmp
pusha
mov
cltd
pusha
lock
cmp
es
mov
adc
fs
and
mov
cltd
and
ficomps
push
cmovs
mov
cmpsl
pop
and
mov
aas
rorl
cwtl
xchg
or
and
sbb
ret
cmc
lds
cmp
enter
push
pushw
inc
fsts
lds
clc
mov
sti
loop
mov
dec
inc
adc
shl
ret
int3
icebp
sub
dec
dec
pushf
addps
negb
pop
jno
cmpb
gs
scas
jae
popa
data16
sbb
mov
sarl
cli
push
in
or
data16
add
dec
mov
movb
lcall
xchg
call
stos
js
clc
mov
mov
in
les
rorb
aaa
enter
adc
xchg
sbb
inc
xchg
sbb
mov
jp
iret
into
mov
pop
xlat
popa
jne
mov
mov
mov
push
rorl
enter
sub
std
inc
jns
or
jnp
push
clc
cmp
dec
xor
in
or
int
ret
lahf
daa
mov
movsb
scas
addr16
mov
cmp
loopne
or
movsl
fwait
push
fsubp
inc
pop
push
test
test
xchg
movb
inc
push
es
xor
mov
lret
mov
fwait
inc
stc
cmpsb
push
daa
fs
jge
aam
sahf
repnz
sahf
test
dec
mov
shrl
adc
add
or
scas
jne
ja
adc
pop
loop
add
mov
gs
jae
mov
dec
mov
stos
sub
dec
mov
adc
push
repz
push
ret
jnp
insl
imul
cli
gs
push
cmc
sbb
loopne
fbstp
dec
pop
dec
lret
sub
add
xorb
ljmp
leave
mov
pushf
jp
out
or
pop
stos
and
mov
lds
adc
cmp
aam
in
push
fwait
hlt
jnp
data16
and
stos
mov
xor
cli
movl
push
dec
mov
cltd
je
or
xchg
ret
inc
test
sbb
sarb
in
mov
mov
iret
mov
popf
jp
test
xchg
dec
std
in
mov
jbe
aas
outsl
leave
cltd
push
xchg
jp
mov
mov
into
mov
mov
cmp
or
rcl
push
or
fidivs
or
fwait
sub
sahf
data16
mov
clc
sub
imul
pop
sub
and
outsl
ret
xor
push
sub
xchg
xchg
xchg
ds
insl
cmp
adc
lea
popf
mov
das
test
std
xor
movsb
or
mov
mov
leave
pop
iret
ror
addb
pop
cli
xor
mov
mov
add
dec
fsubrl
xchg
nop
mov
test
inc
hlt
mov
std
scas
jo
mov
sub
pop
cs
aaa
xchg
decl
inc
shll
and
das
or
cwtl
cld
add
orl
cmp
stc
repnz
xchg
shlb
int
in
jnp
push
adc
jo
jge
mov
jp
movsb
test
mov
jbe
outsl
cltd
stos
outsb
lods
jns
dec
aas
add
add
cmp
jl
pushf
in
stos
popf
jge
popa
icebp
dec
pop
mov
pop
push
adc
dec
insb
sbb
das
rcll
xor
andl
aas
mov
adc
cmc
cmp
fdivrs
mov
orb
hlt
out
clc
mov
mov
mov
adc
jb
aad
mov
shrl
je
ret
adc
repz
push
das
ds
mov
cmc
xchg
sub
push
mov
dec
push
mov
fisubl
ss
mov
mov
sbb
js
test
pusha
ljmp
inc
push
into
push
sbbb
ret
mov
mov
adc
arpl
div
inc
mov
pop
mov
fucom
dec
inc
pop
sub
dec
sti
les
lock
cs
cmc
sub
ss
mov
push
loope
mov
inc
scas
and
ret
test
xchg
sbb
inc
lods
mov
lods
rol
sbb
adcb
cli
in
mov
xlat
mov
fcmovne
cmp
lret
mov
mov
push
daa
dec
dec
xchg
dec
inc
inc
imul
pop
pop
or
add
or
cli
repnz
mov
push
nop
aas
mov
lods
test
mov
push
mov
mov
inc
xor
arpl
scas
mov
insl
aad
push
add
xor
lds
icebp
ret
inc
jmp
pop
cmpsb
mov
stos
js
mov
pop
xorb
nop
int3
int3
add
stc
scas
dec
cmp
rolb
andl
cmp
mov
inc
and
imul
in
stc
mov
jb
mov
aaa
in
jnp
mov
jmp
std
and
push
inc
or
mov
fwait
pusha
movsl
addr16
aam
xor
dec
aas
sahf
xchg
test
lock
add
jb
mov
pop
xlat
rclb
push
sbb
sbb
in
ja
int3
in
jle
and
dec
mov
aas
ds
add
cs
lret
cltd
adc
push
sbb
push
jmp
sub
mov
jg
xor
jp
cmp
dec
mov
xor
add
leave
outsl
cmp
ret
mov
out
mov
push
jmp
xchg
jl
jno
subb
push
insl
lods
sbb
and
cmp
movsl
fidivrs
jbe
or
and
push
pop
fisubl
cmp
jne
mov
aam
mov
inc
lcall
mov
and
addr16
clc
adc
inc
xchg
jnp
mov
add
sbb
fdivrs
out
mov
lea
es
mov
push
fldl
mov
adc
add
mov
sub
lds
and
sub
fistps
pop
or
cmp
mov
lods
add
add
mov
or
jb
cmc
aas
repnz
fstpl
jle
dec
xchg
mov
pop
data16
movsl
jg
jp
adc
imul
stos
and
push
les
clc
lods
cmpsb
xor
fbstp
mov
mov
push
inc
mov
test
into
sub
or
ret
mov
and
mov
sub
test
out
pushf
xchg
cmp
subb
mov
ja
dec
push
xor
insl
mov
sti
mov
mov
test
pusha
cs
add
xchg
jmp
xchg
dec
ljmp
mov
cmp
adc
jge
mov
scas
mov
and
and
mov
cmp
sar
faddl
pop
lret
dec
out
pop
ds
or
lock
in
ret
into
add
add
in
inc
jno
stos
inc
cwtl
aas
jle
idivb
sub
pop
mov
xlat
por
movsl
mov
add
inc
cmpl
scas
cmc
cli
imul
int
lods
xchg
jg
pop
mov
push
ss
cli
sub
add
in
adc
iret
sub
mov
scas
cmpsb
adc
daa
out
arpl
rcrb
jo
adc
mov
mov
std
inc
sbb
mov
stc
aad
push
dec
icebp
xor
push
fisubs
nop
sahf
jl
lret
addr16
or
jge
dec
cmp
rcll
add
push
sub
cmp
dec
jnp
xchg
rorl
xchg
adc
das
mov
fwait
add
fxch
cld
pop
shl
mov
cmp
imul
js
cmpsb
mov
sub
sbbl
push
aas
xchg
movl
inc
sbbl
mov
les
data16
or
and
lds
mov
lret
jb
mov
pop
sbb
and
daa
xorb
sbb
jns
inc
loope
mov
jae
pusha
in
out
or
aaa
add
je
lods
rolb
popa
in
aad
cmc
push
xchg
pop
sub
push
movb
sub
sbb
mov
fistpll
cltd
sbb
out
fistpll
adc
pusha
adc
into
mov
fwait
dec
ret
mov
push
jg
loope
dec
dec
sbb
pop
inc
mov
pushf
inc
mov
xchg
pop
dec
add
push
fcompp
je
cmp
dec
pop
mov
pop
mov
shlb
insb
fsubr
mov
jns
jo
jb
dec
rorb
ret
aaa
add
mov
or
dec
pushl
ljmp
das
fs
xchg
dec
or
in
fidivrl
mov
daa
hlt
js
ret
cltd
xchg
or
stc
jbe
idivb
xchg
jp
dec
xorl
or
push
arpl
popl
jecxz
sub
cmc
ljmp
or
hlt
push
push
dec
push
add
fwait
pop
addb
dec
add
xlat
pusha
paddd
insl
loop
out
or
out
shlb
mov
mov
fisttps
mov
mov
rcr
mov
lock
or
cld
jne
cld
out
xor
xor
mov
jns
insb
xlat
loope
pushf
sbb
mov
push
lods
imul
xor
loopne
push
cmpsb
mov
cmc
xlat
loop
les
inc
call
test
imul
mov
and
sub
jo
push
adc
pop
scas
popf
jl
or
lock
push
pop
mov
or
ret
and
inc
addr16
xor
xchg
popf
pushf
cs
arpl
out
add
cs
test
sbb
inc
xlat
xchg
fcomps
add
int
pop
push
scas
lret
inc
xor
inc
and
fiaddl
stos
cmp
call
xchg
xchg
pop
sbb
test
mov
ret
stos
xchg
push
add
lret
ljmp
ret
mov
test
or
das
dec
not
clc
push
mov
iret
jo
scas
mov
mov
mov
insb
stc
dec
sub
lahf
sbb
mov
inc
xchg
in
hlt
imul
xchg
or
aas
stos
cmpsl
xchg
add
add
loop
mov
movl
stos
lret
and
and
out
les
aad
adc
mov
stos
mov
mov
mov
cmp
sbb
dec
pop
lds
adc
push
jae
call
das
add
sti
mov
inc
cmp
ds
ds
push
lock
inc
cmp
hlt
cld
outsb
xchg
mov
pmaxsw
lahf
push
add
cmpl
sbb
test
out
pop
push
shlb
xchg
add
xchg
aad
mov
mov
add
outsl
cli
mov
lcall
push
and
dec
push
stos
std
flds
inc
daa
adc
sub
in
test
out
and
xchg
mov
sbb
push
test
jle
and
inc
ss
mov
fisttps
js
mov
or
xor
lods
movsb
inc
sub
mov
add
in
xchg
push
sbb
or
call
cmp
ljmp
and
daa
lods
xchg
xor
jge
nop
mov
lahf
cmp
movl
dec
pmuludq
fdivl
aam
loopne
pushf
leave
pop
pop
fstpl
sub
dec
sub
lcall
bound
insb
sbb
or
call
push
xlat
dec
das
pop
mov
and
pushf
sub
dec
sarl
jae
jl
out
repnz
or
push
ret
imul
pop
mov
imul
fsub
rcl
sub
mov
cmpsl
nop
push
arpl
xchg
icebp
push
push
mov
sbb
ja
int
dec
mov
jbe
xchg
sti
sbb
xor
adc
aad
movsb
dec
mov
add
stos
adc
in
shl
pop
cwtl
scas
push
xor
push
sub
std
pusha
push
in
mov
sub
in
push
mov
fnstcw
fmul
mov
push
mov
dec
jae
jge
and
push
dec
xchg
inc
lret
mov
mov
push
jg
mov
leave
fwait
iret
pop
push
adc
dec
adc
mov
pop
clc
ret
add
inc
mov
mov
inc
inc
rol
mov
jne
test
addb
cmp
sub
jmp
jmp
inc
cmp
cli
mov
das
notb
bound
or
adc
xor
sbb
mov
inc
jmp
arpl
dec
jb
rorl
ret
minps
dec
shr
into
insl
fdivrl
movb
adc
sbb
dec
push
outsl
fcompl
mov
mov
aas
inc
or
and
sub
pop
aaa
dec
and
adc
test
sbb
addl
push
sahf
pop
cs
mov
add
rolb
or
lret
insl
inc
adc
push
shll
testl
icebp
xchg
cmpsb
aaa
pop
sbb
mov
mov
icebp
sub
clc
pop
xchg
rorb
rol
pop
fs
fwait
in
cmp
mov
arpl
stc
mov
sub
sahf
aam
mov
fisttpll
mov
adc
or
cmpsb
mov
subl
or
mov
inc
lock
repnz
out
jbe
adc
mov
lahf
pop
mov
inc
push
mov
sbb
sbb
xchg
ljmp
jl
jo
ljmp
rclb
shlb
cmp
lock
add
imul
decl
arpl
mov
pop
test
ficoml
push
cs
pushf
mov
or
arpl
lcall
mov
jno
fbld
add
ret
cli
xchg
imul
lods
cmp
mov
mov
gs
mov
sbb
jp
lock
lret
mov
push
push
stc
add
es
add
adc
lahf
movsb
fistpl
xchg
cmp
fs
adc
sub
and
andb
out
dec
enter
dec
inc
test
insb
adc
fs
jno
cli
decb
shll
lock
mov
shlb
jecxz
ljmp
shr
mov
hlt
and
xchg
xchg
xchg
orb
jle
movsl
sbb
lods
xor
arpl
imul
push
out
push
jmp
dec
rolb
test
pop
hlt
fisttps
daa
mov
scas
std
xchg
push
push
repz
sub
mov
dec
cltd
adc
or
inc
adc
repnz
mov
addl
fsts
add
xchg
add
cmc
dec
mov
in
xor
mov
repnz
arpl
sub
imulb
mov
popf
sbb
sbb
inc
stc
xchg
and
mov
cltd
adc
cli
cmpsl
fnstenv
pop
pop
add
cmpsb
push
cmp
push
sahf
and
mov
out
lock
push
adc
add
pop
scas
std
cmpsl
pop
jbe
pushf
push
mov
push
xchg
repnz
xchg
fwait
push
mov
nop
push
pop
mov
push
lock
pop
inc
faddl
fsubs
jns
mov
xchg
sub
mov
pmulhw
adc
lock
sbb
jb
mov
mov
xor
js
in
and
push
adc
cmpsb
push
jge
mov
xor
push
push
cmp
push
fnstenv
push
and
clc
sub
add
sub
testl
and
loopne
lcall
jp
ljmp
fs
or
adc
mov
sbb
add
pushf
mov
dec
push
fs
shufps
shr
sbb
adc
sub
cmpsb
lods
lret
cld
es
mov
sbb
cmp
jg
push
cmp
or
sbbb
add
pushf
push
jb
mov
dec
fisubl
out
or
xchg
cld
mov
sub
pop
and
aam
add
sbb
insl
stos
cltd
in
xchg
sub
arpl
push
inc
dec
adc
jno
dec
mov
loopne
ret
jnp
jae
stc
sbb
push
and
loopne
mov
les
iret
sarl
scas
pop
mov
loope
adc
push
test
sub
push
outsb
fst
mov
popa
lcall
mov
pop
movsl
stos
fidivl
mov
dec
imul
lds
mov
es
jl
inc
subb
xchg
jbe
mov
js
cmp
and
and
aam
and
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
jmp
lea
sub
insb
int
xchg
mov
dec
negb
repnz
jnp
aaa
xlat
or
push
outsb
dec
xorb
ljmp
loopne
test
xor
xchg
int
mov
xor
jae
orl
xchg
movsb
test
repnz
pop
orl
std
push
out
pushf
jne
xchg
push
addb
jbe
xor
flds
js
pop
mov
jle
shlb
adc
cmp
pop
inc
sub
mov
les
popf
mov
and
and
cmp
xor
jne
push
mov
push
push
outsl
jo
sbb
lods
adc
dec
lcall
out
and
dec
sub
mov
ficoml
or
sbb
mov
aam
xchg
cld
js
pop
or
dec
pushf
mov
aas
popa
jmp
enter
popf
mov
and
popa
out
dec
cmp
movsb
xor
test
sbb
or
imul
in
push
jbe
xor
jnp
and
adc
mov
jns
lds
or
jl
adc
in
jmp
test
sbb
lea
jmp
sbb
in
movsb
mov
jge
inc
lock
dec
add
lock
cwtl
insb
or
movsl
mov
repz
ss
mov
in
sbb
flds
rcrb
movsb
and
movsl
xor
test
test
push
popf
jmp
inc
fldt
clc
lret
imul
loope
push
inc
push
jge
gs
jecxz
cmp
pop
imul
dec
adc
insl
jmp
arpl
inc
lahf
xchg
out
sub
loop
arpl
jp
in
repz
adcl
mov
stos
adc
push
js
dec
out
adc
loopne
popf
test
jmp
mov
push
or
adc
fucomp
divl
mov
and
mov
or
adc
mov
add
and
fildl
add
cmp
xchg
xchg
or
push
lcall
je
dec
shrl
add
sbb
inc
sbb
add
lret
test
inc
jae
xor
inc
xlat
mov
push
loope
sbbb
or
xchg
fldenv
jns
test
cmc
cmp
daa
lds
xchg
insb
push
mov
in
pop
ret
inc
ss
dec
xlat
sbb
aaa
sahf
mov
outsb
loope
popa
call
push
pop
xchg
jge
addl
inc
std
add
adc
ds
fistl
cmp
lcall
push
popa
lcall
cmp
nop
and
or
or
fstl
in
mov
js
jo
les
in
mov
sub
xchg
out
es
jo
pop
xor
ss
or
or
fldt
ljmp
cmc
ret
fsubrs
cmpb
test
xchg
xor
add
add
xchg
sbb
cmpsb
sub
adc
negb
fcmovnbe
xor
xchg
cmp
xor
sbb
or
xchg
mov
lahf
int3
mov
mov
add
add
push
aaa
ret
mov
dec
adc
test
imull
sti
cmc
sarl
cli
adc
shlb
jno
int3
mov
icebp
pop
pop
imull
mov
test
or
dec
cwtl
cmp
push
ds
lods
add
aam
aam
push
ror
rclb
sbb
push
and
call
stos
cmp
cmpsb
mov
mov
outsl
cmp
hlt
cmc
inc
jno
cld
push
adc
lret
jbe
xor
inc
dec
aad
in
popf
push
mov
loope
inc
dec
addr16
test
lds
popl
in
ja
add
sbb
mov
xchg
add
push
dec
mov
push
pop
mov
ds
ss
adcb
jmp
dec
mov
cmp
clc
push
mov
xlat
jmp
xchg
push
ja
and
sub
punpckhdq
sub
sub
in
cwtl
and
mov
jmp
add
xchg
xchg
lahf
push
pop
jg
inc
sub
add
add
add
mov
das
xchg
push
add
andl
adc
dec
adc
push
cwtl
cli
add
imul
xchg
mov
jb
je
and
scas
inc
cltd
loop
into
aam
adc
jae
jp
mov
cmp
xchg
mov
pop
movsl
adc
pop
insl
sbb
aaa
fwait
addr16
xchg
mov
push
xchg
ljmp
add
push
mov
jl
cmp
cmp
jecxz
xchg
into
mov
xor
out
mov
mov
mov
nop
xchg
daa
push
mov
jns
mov
pushl
mov
js
jmp
xor
sbbl
bound
mov
movsl
das
in
mov
push
aad
push
stos
add
fisubs
or
andl
xchg
xlat
xchg
ds
sub
push
mov
or
mov
mov
mov
sbb
fistps
push
mov
test
sahf
pusha
negb
in
stos
or
cltd
jne
loop
mov
sub
es
sub
out
push
push
imul
es
adcb
adc
in
bound
cmp
cld
rclb
jb
fcom
cmpsl
aam
sbb
ljmp
pusha
test
sbb
jbe
das
pop
and
jge
lds
pop
xchg
pop
lea
dec
push
mov
add
cmpsl
stc
imul
mov
test
lods
and
push
sbb
jno
shrl
test
fsubrp
nop
mov
sbb
xor
sti
cld
les
xorb
jo
jae
loop
and
sub
sbb
ret
xchg
xchg
nop
cmp
add
inc
adc
or
jno
pcmpgtb
xchg
add
enter
orb
and
mov
lods
sbbl
add
stos
sbb
adc
push
jp
cmp
fisubl
xchg
in
imul
sub
fwait
or
int3
rol
ja
popa
enter
mov
fistpl
mov
push
fmul
sti
and
adc
cmp
insl
adc
cld
cmp
inc
leave
mov
pop
jns
cmp
dec
rolb
in
cmc
decl
inc
sbb
xchg
pop
aam
jnp
xor
imul
ret
pop
imul
inc
push
lods
add
add
sbb
or
and
in
outsl
adc
inc
bound
pop
aaa
stos
fistl
imul
pop
xor
stos
sbb
and
fcomps
adc
push
cltd
stos
ja
sub
fcompl
sbbl
xor
inc
mov
fildl
add
xchg
mov
push
sbb
fildll
mov
repnz
lcall
xlat
mov
pop
es
lds
in
inc
inc
adc
inc
in
sahf
bound
adc
popf
sbb
and
fwait
push
dec
inc
outsb
jp
test
add
jecxz
push
out
mov
lock
lcall
jns
adc
test
cmc
push
xor
test
jbe
inc
icebp
dec
add
cmp
mov
pop
addr16
mov
inc
movsb
inc
cmp
stos
std
mov
mov
cmp
lret
cmp
movsb
inc
jae
jb
pop
xchg
push
xchg
ss
lods
in
cmp
jecxz
shl
movsb
sub
mov
dec
push
iret
data16
jne
adc
pop
ret
int
push
xchg
mov
imul
stos
jnp
xor
lret
daa
jecxz
sub
inc
adc
scas
mov
ja
or
mov
xchg
pop
lods
faddl
test
rclb
mov
hlt
lea
shr
das
pop
cmp
popa
mov
inc
dec
out
test
xchg
lret
mov
ret
hlt
test
or
ds
push
and
fistps
pop
lea
fadd
flds
mov
rclb
push
push
or
jne
mov
hlt
mov
rcll
mov
mov
mov
mov
lock
sub
pusha
ljmp
bound
inc
and
mov
les
sub
jecxz
rcl
push
jp
sbb
cwtl
das
sub
pop
sub
sub
lahf
add
int3
scas
mov
ret
mov
sub
and
adc
cli
adc
sarl
test
daa
cwtl
push
std
jnp
ds
rorb
dec
push
sbb
aaa
out
es
cmp
jb
push
shrb
lea
pop
sub
subb
pop
mov
and
mov
jno
xor
push
cli
addr16
add
mov
inc
popa
sub
je
das
in
add
enter
cwtl
xor
add
inc
popa
push
xor
popa
mov
jmp
sahf
mov
cltd
lods
adcl
adcl
inc
or
divl
or
sbb
cwtl
out
and
das
addr16
mov
outsl
loope
mov
and
notl
jbe
cwtl
sub
jmp
iret
aad
or
bound
xor
cltd
fsubrl
xor
xchg
enter
fidivl
das
cld
mov
ljmp
loop
int
sbb
pop
mov
fiaddl
mov
xor
cwtl
mov
gs
and
mov
pusha
dec
mov
pop
sbb
or
xor
xor
cs
pand
adc
sub
jno
popf
jl
or
sub
mov
pop
dec
cmc
leave
cld
inc
lods
int3
pop
sahf
and
xchg
daa
ficomps
ret
xchg
push
shlb
adc
in
add
mov
mov
sub
dec
mov
push
mov
inc
jge
out
shlb
xor
push
lcall
stos
rcr
cmc
incl
xchg
dec
mov
sub
jl
mov
in
daa
jp
jge
out
mov
cmp
mov
cltd
lods
sbb
rol
add
imul
in
fistpll
insb
or
lea
xor
sub
push
xlat
aas
out
out
fstl
xor
fidivrl
out
and
out
aam
cmp
push
jbe
jge
fidivl
mov
popf
push
out
je
mov
push
mov
in
mov
ss
mov
push
jp
mov
cmp
js
inc
dec
and
les
cld
das
xchg
dec
insb
sbb
xchg
or
inc
sbb
jle
sub
test
xor
mov
in
xchg
sbb
jb
inc
insl
sub
push
sti
or
jae
fs
testb
pop
mov
das
loop
sub
test
aam
popa
mov
pop
mov
scas
fildl
test
push
xchg
push
mov
test
scas
cmp
push
iret
jl
nop
jae
lahf
push
pop
je
repnz
jo
cmp
roll
pop
test
mov
jmp
push
pop
mov
jb
or
test
push
lods
in
mov
bound
sbb
cmp
inc
int3
js
test
jl
xorl
fdivl
fs
lods
and
decb
insl
shll
dec
ljmp
icebp
jnp
or
xchg
movsl
or
add
lock
pop
or
push
cmp
js
inc
jle
push
dec
insb
mov
fdivrs
cmc
scas
int3
nop
push
fmull
mov
push
in
pop
outsl
ret
mov
push
std
js
cmpsl
mov
jb
push
pop
int
shl
fisubrs
fs
sub
dec
out
add
stc
xor
sar
aas
xchg
inc
jmp
inc
mov
mov
in
movsl
scas
in
pop
outsl
mov
cli
das
aad
inc
and
mov
xor
mov
fsubr
int3
push
pop
or
jmp
jmp
dec
lcall
lret
jp
mov
jmp
add
ret
xor
cltd
shrl
and
push
stos
aad
sahf
dec
pop
lods
push
rol
popf
push
test
js
and
cmpsl
es
adc
inc
lock
pusha
and
loope
fcompl
mov
xchg
jnp
push
dec
popa
shrl
mov
inc
xchg
outsb
adc
ficomps
dec
mov
les
lcall
cmp
mov
adc
pop
in
leave
add
stos
xor
andb
cmp
mov
mov
xchg
xchg
pop
imul
movsl
push
pop
std
scas
xlat
mov
xlat
push
fs
and
pop
out
jg
mov
or
and
mov
das
push
mov
inc
test
jb
dec
mov
daa
nop
xchg
ret
dec
pop
xchg
loope
xchg
in
mov
and
leave
mov
sub
jl
out
lock
stos
add
icebp
cmp
mov
ja
arpl
std
clc
mov
adc
lret
stos
cmp
scas
in
jae
fs
ss
rclb
xlat
adc
jbe
jnp
jb
pop
popf
push
add
pop
dec
pop
or
clc
call
add
out
cltd
xor
pop
jl
cmovl
jp
sbb
mov
in
or
add
sub
int
pusha
and
fwait
lahf
pusha
sahf
xchg
push
mov
roll
mov
fmuls
pop
scas
jl
fstps
or
xchg
sub
ret
dec
mov
mov
ljmp
mov
xchg
dec
sbb
jae
add
adc
xchg
mov
in
cli
jno
fwait
mov
inc
mov
repnz
xor
xlat
cld
addr16
dec
add
xor
iret
ficoms
cmp
movsl
and
push
stos
enter
mov
out
xchg
test
mov
sar
ljmp
cmp
popa
jns
sbbl
jp
sub
jge
lahf
test
stc
sub
das
fsts
sub
push
stc
pop
in
rorb
pusha
adc
sub
sahf
dec
jp
movsb
inc
jae
mov
shl
js
xor
aaa
aaa
aad
ret
xchg
and
dec
daa
pushf
cmp
lods
sar
add
mov
arpl
mov
fiaddl
or
shll
mov
adc
pushf
add
or
push
ja
rcr
sbb
cmpsl
jl
or
loope
sbb
push
cld
jno
mov
jmp
cmp
in
jnp
jl
cltd
and
jae
pusha
pop
mov
jmp
jg
push
sub
out
hlt
int
and
mov
mov
jbe
cmp
mov
cs
pop
dec
jmp
incb
mov
mov
adc
fcmovu
out
ja
adc
iret
add
lea
bnd
popf
dec
insb
test
neg
push
fs
imul
addr16
imul
aad
pop
xchg
push
unpckhps
arpl
in
mov
sub
adc
add
cltd
inc
or
gs
movsl
sub
cs
inc
ficomps
add
ret
add
aaa
xor
dec
es
mov
add
sarl
movsb
jnp
stos
pop
pop
clc
cltd
fbstp
nop
lds
shrb
cmpsl
mov
adc
call
cmp
xor
daa
mov
js
and
imulb
imul
sub
rcr
fsubrs
scas
outsl
push
jns
and
mov
repnz
mov
addr16
call
mov
jp
es
sbbb
in
out
lock
sub
fisubl
xchg
push
lahf
mov
sahf
pop
fsts
scas
lock
fsubrs
add
cs
es
jl
xchg
push
or
jl
xchg
pop
scas
arpl
aas
inc
inc
mov
jo
pop
push
fcoml
pusha
xchg
pop
dec
jbe
scas
testl
mov
and
pop
mov
fwait
das
mov
jae
mov
pop
rolb
fs
xchg
xchg
pop
cld
test
xor
ss
push
pop
movsb
adc
lret
push
sbb
jbe
dec
mov
divl
stos
adc
es
aaa
notb
pop
and
je
inc
insb
mov
lret
std
adc
int
rolb
cli
movsl
hlt
jb
jb
outsl
fcmovbe
pop
lods
pop
aaa
xor
mov
fsubrl
enter
cmp
out
add
dec
adc
adc
aam
add
cwtl
addr16
test
fcompl
movsl
loope
mov
fiaddl
lret
aam
ret
mov
inc
pop
cmp
insl
jle
and
pop
aad
xchg
jp
inc
movsl
cmp
aam
pop
sti
adc
dec
out
add
xor
lret
pop
inc
pushf
int3
mov
push
sub
mov
sbb
pop
addr16
push
cmp
gs
adc
mov
jb
jmp
and
out
dec
pop
jns
std
fcomi
xor
repz
repnz
inc
ljmp
int3
xor
adc
dec
xchg
adc
jnp
push
repz
sti
cmp
nop
mov
outsb
inc
repz
ljmp
adc
jb
cli
xlat
mov
int
ret
leave
sub
loopne
mov
sub
xor
jno
mov
into
inc
push
into
mov
jno
push
lods
test
out
loope,pn
rcrl
fidivl
es
ds
inc
fcmovnu
mov
push
jae
mov
icebp
cmp
aam
add
out
ljmp
loop
popf
cmp
mov
xchg
int
mov
sti
push
jl
adc
xor
or
je
imul
das
mov
aad
or
cmp
add
adc
adc
pop
jmp
fimull
jle
pop
jp
sbb
xor
push
aas
pop
pusha
push
xchg
pop
fisubl
aaa
loope
jmp
aad
je
add
mov
xor
pop
xor
sbb
ljmp
or
jns
cmp
mov
and
mov
in
cwtl
ja
into
repz
ss
test
loopne
pop
push
cld
jnp
out
daa
aaa
xchg
lahf
sub
or
xchg
mov
mov
or
popf
aad
or
imul
jp
rorl
in
fidivl
aad
xor
loop
lods
dec
add
sbb
cwtl
mov
ljmp
jmp
dec
or
outsb
jae
mov
call
add
dec
sub
push
cmp
cmp
cwtl
xor
or
pop
inc
incb
pop
test
ret
andb
mov
lds
ss
xor
decb
outsl
mov
mov
inc
aaa
subb
or
dec
sub
add
push
pop
jnp
pop
inc
jbe
adc
sti
mov
ljmp
mov
xor
repz
insl
aam
adc
push
iret
cs
fcoml
das
jmp
inc
add
aaa
int3
repz
mov
lret
mov
xchg
arpl
insb
out
rcll
aad
enter
add
push
mov
push
pop
mov
jmp
movb
out
out
mov
rcll
sbbb
aaa
icebp
xor
and
xchg
mov
ficompl
push
ljmp
mov
mov
fs
xchg
xlat
in
js
in
and
incb
jg
pop
shlb
in
cltd
mov
and
jecxz
mov
adc
and
insb
fcompl
jns
movsl
push
cld
pop
pop
mov
jl
repz
jnp
mov
mov
cs
test
inc
daa
iret
mov
loopne
std
xor
aad
repz
add
cs
sub
sti
fistl
test
cmc
push
sbb
sti
cs
rorb
scas
cmp
jnp
cmp
add
xor
mov
xchg
ret
add
mov
sarl
jg
in
cwtl
es
adc
adc
bound
lret
or
addr16
add
mov
cmpsb
out
pop
xlat
fadds
jbe
nop
sub
jno
pop
je
mov
lods
add
mov
pop
or
add
and
push
pop
in
and
inc
ds
push
mov
repz
sub
add
jl
adc
imul
pop
das
inc
mov
mov
ja
sub
push
mov
out
sahf
inc
xor
mov
adc
xor
jno
flds
cwtl
loopne
nop
jae
inc
sbb
push
add
dec
out
mov
fmul
xor
lea
mov
fimuls
imul
aas
jne
push
fimuls
mov
dec
fcomps
stc
jb
push
shll
pusha
or
call
mov
sar
mov
and
dec
cmp
and
lahf
out
and
lods
or
mov
cmc
ss
jg
ficoms
repnz
sbb
add
addr16
outsl
aas
jp
inc
xchg
mov
mov
clc
xlat
sub
adc
lods
and
jns
pop
cmpsb
ss
xor
push
sti
test
lcall
sbb
sahf
xor
fcmovbe
movsb
int
cmp
mov
sbb
loopne
aad
jb
ds
push
sub
or
push
leave
mov
pusha
add
std
add
mov
mov
int3
push
adcl
or
dec
or
jp
adc
cmp
lcall
xchg
loop
push
xor
mov
mov
sub
pop
testb
xor
stc
and
lods
or
dec
cmp
cwtd
sub
add
mov
jno
movsb
sub
cli
mov
mov
xor
movsb
xor
loop
in
test
stos
bswap
xchg
jp
mov
sbb
inc
inc
xor
andb
stos
jno
aam
inc
push
and
inc
call
out
movsl
rep
mov
scas
loopne
in
popf
jge
insb
or
lods
jg
pop
xchg
jns
inc
in
push
pop
mov
sbb
cmp
mov
repnz
in
or
call
sbb
subl
scas
push
jle
sarb
add
jmp
mov
test
negl
xor
aaa
adc
stos
inc
lds
add
sub
push
pop
das
aad
push
inc
int
push
shlb
repnz
mov
scas
outsl
or
or
out
cmp
dec
add
xabort
rolb
aam
mov
mov
sub
repz
outsb
ret
mov
sti
dec
arpl
xchg
xchg
into
rclb
popa
icebp
jno
mov
movsb
xchg
fldl2t
cmpsb
mov
mov
and
cli
loope
aas
xchg
push
push
movsl
in
into
mov
sbb
sub
sub
xor
or
das
in
or
out
push
add
mov
mov
or
mov
add
fildll
xlat
loopne
xchg
add
aas
mov
out
scas
sub
cltd
push
shr
cwtl
int
add
sti
test
xchg
xchg
adcb
pop
ja
jne
dec
add
insb
adcl
into
xchg
jecxz
packuswb
mov
jle
fdivrl
xor
pop
in
adc
sub
fcmove
insl
or
cmp
sub
leave
xchg
xchg
in
xchg
into
push
jg
xchg
into
testb
mov
or
into
xor
scas
ret
roll
bound
pop
adc
mov
xchg
xchg
je
test
fistl
ja
inc
jg
pushf
sarl
call
in
mov
je
jb
sbb
aam
xor
xor
fwait
push
add
pop
testb
jmp
pop
dec
and
cmp
repz
movsl
pop
push
pop
mov
jle
dec
xor
sbb
fcmovb
cmpsb
mov
fs
xor
jg
push
or
movsb
test
push
sub
aaa
add
sub
pop
lds
mov
dec
enter
or
aad
jle
mov
int3
inc
icebp
mov
pop
imul
pop
lock
fisubrl
adc
xor
cmp
lahf
mov
int
les
pusha
xlat
jp
out
test
jo
jb
mov
push
mov
movsb
mov
stos
jecxz
ds
adc
cmp
mov
or
cmpsb
inc
cmpsl
shrl
push
sub
mov
or
inc
ret
jle
fucomi
out
aaa
shlb
scas
pop
jne
in
inc
arpl
push
dec
sub
dec
add
gs
es
jno
dec
inc
add
jmp
cmp
adc
lahf
adc
lahf
test
mov
jbe
xchg
push
mov
pusha
add
pushf
adcl
roll
mov
movsb
cs
jmp
test
jg
mov
and
fwait
pop
pop
js
push
or
add
and
shll
jno
jbe
fdiv
mov
inc
push
out
je
adc
add
mov
dec
or
int3
mov
or
cmc
push
lahf
jne
push
adc
in
mov
std
popf
sbb
cmpsb
mov
adc
inc
int
mov
in
in
das
dec
andps
jg
fists
xor
int3
push
stos
push
stos
pop
xchg
xchg
icebp
bound
push
jbe
in
js
ljmp
inc
xor
je
dec
cld
or
mov
mov
pop
sub
mov
fsubrs
mov
adc
and
cmp
sahf
stc
sub
xchg
loop
push
divl
cs
push
mov
mov
in
or
bound
mov
pop
daa
shll
lret
inc
sbb
data16
lcall
scas
inc
xor
mov
and
sbb
sub
xor
std
xchg
sarb
mov
movsl
jp
lds
inc
aas
jno
divl
je
out
rcrl
in
outsl
dec
sbb
pop
cld
add
sub
inc
push
sarb
jl
mov
testb
ja
sbb
jne
push
ret
dec
repnz
rcll
adc
add
or
mov
std
xchg
je
xchg
mov
int
push
push
in
push
iret
jmp
mov
mov
ret
aaa
outsl
inc
imulb
add
pusha
mov
ret
sti
cld
leave
scas
lret
cltd
jb
sub
and
hlt
in
push
mov
cmpsb
and
push
mov
and
mov
add
cmpl
sub
int
incl
cli
inc
xor
cmp
dec
xor
sti
mov
test
xchg
sbb
xchg
ret
cmc
xor
ret
insb
cmc
in
lcall
dec
cmc
or
fwait
stc
ret
pop
inc
inc
dec
dec
aam
in
mov
cs
dec
repz
sbb
push
out
sbb
out
test
cmpsb
notb
mov
lret
in
xor
pop
jmp
mov
jne
push
pop
out
sub
je
cmp
sub
fcompp
xor
sub
xchg
cmp
testb
fwait
dec
push
popa
xor
cmp
dec
scas
cmp
jno
js
cmpsb
mov
movsl
push
or
mov
sbb
dec
pusha
in
fst
in
es
aam
aaa
pusha
rorl
pop
cmp
jl
ss
and
sbb
cmp
in
std
jae
mov
popf
or
in
pushf
xor
int3
sub
fdivl
fistps
inc
into
ret
sub
cli
push
push
mov
and
and
sbb
ret
leave
shlb
adc
out
cmp
sub
int
inc
push
cmc
and
jecxz
add
repnz
adc
xchg
and
or
adc
mov
aad
xchg
ljmp
rol
fldenv
push
lcall
jl
and
sbb
orb
popf
mov
movsl
adc
stc
movsb
inc
insl
dec
sahf
lock
inc
xchg
mul
insb
pop
insb
push
add
xlat
test
inc
sbb
ljmp
mov
adc
aas
or
xchg
pop
movsb
adc
push
dec
cmpsl
in
mov
xlat
mov
jns
dec
sbb
nop
dec
mov
sbb
mov
mov
cltd
jle
mov
sbb
stos
pushf
and
push
test
adc
or
xor
xor
xchg
cmpb
add
cli
mov
mov
jg
mov
lcall
test
jle
push
mov
and
jg
fsubrp
sbb
je
pop
inc
xchg
imul
mov
ja
in
adcl
test
xor
push
mov
fbld
and
scas
sbb
xor
mov
jo
fldenv
jns
mov
xchg
adc
push
data16
pop
push
aaa
es
push
dec
jmp
insl
pop
adc
pop
fsubl
aas
negb
jl
mov
adc
fdivs
mov
mov
xchg
push
jge
mov
adc
lds
dec
xor
pop
scas
fimull
loope
and
lea
sahf
mov
jecxz
scas
mov
mov
mov
sbb
mov
add
mov
popf
out
cmp
push
popa
dec
push
ds
clc
add
dec
xchg
test
dec
pushf
es
in
xchg
lea
add
and
movsb
insl
mov
imul
xchg
dec
stos
rorl
mov
add
mov
pop
fimuls
mov
inc
out
pop
add
mov
das
and
and
ss
cwtl
into
cld
jmp
pop
sub
aaa
aad
jns
jle
call
scas
mov
jp
loope
push
xchg
push
cmp
sbb
jmp
inc
xor
mov
sbb
mov
movsl
pop
imul
cltd
xor
fiaddl
push
xchg
pop
arpl
pop
xor
mov
mov
out
mov
sbb
mov
dec
jg
je
ljmp
sub
add
sbb
mov
test
stc
outsl
icebp
inc
mov
sub
insb
insb
mov
inc
aad
inc
fisubrl
push
cwtl
jecxz
push
rorl
js
or
inc
cld
mov
roll
int3
scas
lret
adc
push
mov
xor
std
pop
inc
push
or
xchg
ret
sbb
fists
mov
pop
and
mov
lcall
sbb
sub
in
dec
jo
nop
dec
mov
repnz
int3
lcall
push
or
dec
cli
sub
xor
add
test
arpl
xor
hlt
xor
push
xor
fists
mov
aas
fistpl
jge
xchg
faddl
and
pushf
addr16
loopne
mov
sub
imul
sti
mov
shrb
xchg
out
cmp
and
xchg
jl
mov
cwtl
daa
lret
and
push
pop
inc
sub
mov
and
std
nop
add
nop
pop
call
scas
aad
inc
sbb
pop
cmp
bound
mov
movsl
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
jmp
mov
je
fs
stc
cmp
stos
push
adc
repnz
jnp
cmp
push
and
sbb
mov
pop
pop
sbbb
jecxz
pop
and
mov
add
lock
push
aam
adc
scas
cld
shl
adc
out
mov
addl
adc
ret
add
cmp
in
jbe
ss
push
gs
lret
movsb
push
and
imul
jo
aam
mov
pop
xor
pushw
cmc
cli
sti
jle
fmulp
jecxz
fsubs
pop
push
cmp
cmpsl
scas
aas
shr
lods
ja
dec
int3
movsl
hlt
loopne
jle
adc
fimull
insb
dec
iret
sti
push
inc
lea
test
in
lods
pushf
addl
inc
sbb
ljmp
cli
xchg
fmuls
sbb
aas
dec
sbb
dec
pushf
insl
insl
push
mov
repnz
nop
jno
mov
outsb
and
dec
loop
add
jge
mov
rcrl
push
subb
incb
cmp
call
mov
and
das
and
mov
sub
jne
cmp
push
das
aas
mov
sub
pop
mov
stos
movsb
scas
dec
clc
cld
mov
fldl
push
mov
int3
sbb
insb
cmp
jns
aas
mov
imul
jp
addr16
in
jnp
push
fisubrl
push
mov
aam
divb
fidivrs
shrb
pop
or
iret
and
sbb
cmp
mov
addb
fdivrp
roll
pop
aaa
addb
in
push
shlb
dec
cli
test
andl
and
mov
pop
xchg
push
mov
sbb
mov
jae
loopne
int3
jo
fcmovnbe
into
loopne
and
mov
adc
addl
js
nop
cmp
cld
sarl
mov
leave
sarl
push
mov
repnz
xor
xor
mov
sbb
cmpsb
sub
insb
mov
or
idivb
and
int
sbb
imul
aaa
pop
jo
and
mov
ss
test
rol
aam
pop
out
sbb
xor
test
sub
xchg
pop
cmp
stos
sbb
adc
and
test
sahf
jmp
pop
or
imul
add
adc
lods
push
inc
jmp
add
in
or
push
jg
inc
popf
xor
push
fistpl
mov
lret
adc
into
jbe
lock
subl
dec
outsl
rorl
cmpsb
cli
cmpsb
clc
mov
mov
xchg
or
sahf
add
xor
inc
pop
xlat
jmp
shll
pop
subb
shl
arpl
dec
mov
out
imull
mov
mov
outsb
push
and
xorl
jbe
int
mov
loopne
repnz
pop
xchg
aaa
inc
aas
push
aam
fstps
xchg
xchg
push
test
dec
xlat
push
popa
pop
int3
mov
mov
imul
pusha
fs
or
scas
stos
xchg
dec
dec
lea
jg
xor
xchg
fwait
je
or
xor
dec
mov
jae
fs
xchg
insl
sarb
inc
fidivl
push
in
aam
jmp
or
and
aad
sbb
push
pop
cmpsl
dec
fucomi
and
push
sbb
inc
mov
and
rorl
shr
in
mov
loope
inc
or
lods
aam
xlat
nop
adc
ds
fsubp
mov
jle
adc
pop
push
loopne
push
pushf
in
or
lea
hlt
lcall
sbb
mov
ficoml
arpl
cmp
addr16
pop
mov
leave
insl
cmp
dec
pushw
inc
and
sbb
shrl
pop
rcrl
sbb
sub
ret
sbb
sbb
negb
cmp
mov
cmp
or
sbb
push
int3
scas
loopne
insb
cmp
je
addr16
bound
jge
mov
mov
fidivl
test
dec
clc
jg
jb
arpl
cltd
fmulp
add
insb
push
fdivrs
test
pushf
aas
test
push
inc
repz
test
inc
enter
xlat
adc
xor
xor
bound
push
xlat
or
sbb
mov
xchg
or
ljmp
sarl
push
lahf
fidivl
inc
and
js
mov
push
rorb
test
test
fbstp
pop
pop
rcr
andb
xchg
inc
adc
dec
mov
inc
mov
push
jbe
rolb
lcall
or
push
mov
insb
lock
mov
jge
xor
jl
xor
dec
test
ret
adc
inc
in
icebp
outsl
sbb
movsl
xchg
jp
push
scas
je
outsb
roll
inc
fsubr
xchg
push
mov
pop
add
sub
mov
sub
mov
jge
ss
cmp
mov
and
test
mov
push
mov
dec
jno
sbb
pop
mov
jecxz
in
dec
adc
or
jge
dec
xchg
mov
xchg
push
xor
push
fs
out
jp
dec
in
mov
or
hlt
das
add
pop
pop
into
mov
xor
in
mov
repz
das
shrl
test
lcall
dec
or
mov
mov
ss
fwait
mov
lods
adc
jae
clc
andb
out
or
mov
mov
mov
or
sahf
ljmp
adc
dec
loopne
outsl
mov
icebp
aam
pop
xor
clc
bound
jns
xchg
int3
xor
xchg
out
or
into
subl
shr
jmp
dec
sub
test
jmp
jmp
lea
mov
inc
mov
add
in
rcrb
insl
adc
mov
or
out
sbb
or
repnz
leave
aad
inc
popf
sbb
jg
cmp
add
pop
lcall
das
in
jle
add
data16
cmovp
push
scas
xor
add
iret
add
stc
xchg
rcrb
fildl
inc
pop
xchg
and
int
dec
sub
xor
clc
lcall
jne
xchg
jnp
call
dec
inc
pop
lock
fdiv
pop
jo
aas
ljmp
fnstsw
es
pop
nop
arpl
jmp
cli
and
fchs
pop
gs
iret
xlat
xchg
stos
push
mov
lock
push
xchg
or
insl
mov
loop
mov
ljmp
jb
push
ret
mov
loope
sbb
mov
and
imul
push
add
out
in
out
jbe
mov
movsl
imul
lsl
aad
insb
lods
fisubrs
jne
cmp
add
int
or
orb
adc
enter
adc
aas
jno
or
cltd
ror
sbb
icebp
xchg
sbb
xchg
adc
movsl
mov
and
insb
pop
cmpsl
mov
leave
clc
push
fldcw
dec
sbb
sbb
mov
pusha
jns
cld
add
sbb
add
fcomps
and
cmpsl
sbb
lds
mov
std
jmp
in
movsl
imul
inc
nop
fnstcw
sub
push
jecxz
push
add
jb
mov
mov
jle
push
jle
cmp
clc
jecxz
rcll
sbb
mov
xchg
fmuls
imul
fists
adc
push
ljmp
daa
lods
cmp
push
mov
pushf
mov
dec
sbb
pop
fisubrl
data16
mov
test
mov
popa
jl
es
push
sar
xor
scas
gs
fwait
add
out
xchg
mov
jo
pop
lock
imul
jl
sti
pop
dec
fs
js
ret
mov
push
arpl
push
sub
arpl
sbb
je
pop
out
xchg
push
xor
incw
jbe
fists
and
mov
cmp
mov
jle
mov
pop
mov
sahf
in
jmp
or
sahf
cwtl
scas
popf
add
iret
sbb
push
je
ret
movsb
cmpb
js
sbb
cmp
fs
dec
cmp
add
call
dec
repz
fistpll
xor
mov
jns
popl
add
rolb
insb
push
xchg
outsb
inc
jne
sbb
pop
jl
fnop
push
sub
add
push
and
cltd
lahf
xor
aaa
loopne
into
push
ret
data16
ret
jns
inc
jns
mov
xchg
dec
sbb
repnz
aad
int
test
fsubrs
mov
add
into
mov
inc
fucomi
mov
icebp
pop
test
mov
iret
fwait
lret
xchg
adc
mov
loop
cmc
mov
and
adc
movsb
mov
mov
jno
stc
fidivl
cmpsl
add
mov
lcall
sub
sbb
jno
push
jecxz
inc
mov
mov
aaa
dec
jl
mov
mov
sbb
mov
push
imul
movzbl
mov
aas
jg
pop
fwait
in
add
insb
insl
mov
fwait
cmp
outsl
ret
or
push
dec
jae
pop
out
in
lds
sub
jns
xor
stos
pushf
test
mull
in
mov
loop
imul
or
popa
stc
xchg
adc
jbe
insl
sbb
lock
sarb
lret
pop
jbe
mov
lds
std
xor
not
xchg
dec
dec
dec
jmp
pushf
aas
xchg
orl
cltd
scas
loopne
jp
test
xchg
arpl
jl
or
sub
sbb
fs
adc
test
add
sub
clc
aam
sub
out
bound
ret
jmp
aas
push
fadds
mov
or
loopne
adc
push
sbb
or
add
jle
push
pop
mov
ja
dec
sub
mov
jl
sbb
stos
xlat
or
mov
mov
pop
inc
cmc
scas
add
fsubs
sub
cmp
mov
push
arpl
mov
inc
fisubs
or
pop
mov
repnz
mov
inc
jmp
andl
push
push
and
pop
pop
pop
sahf
mov
ds
inc
punpckldq
xchg
sub
movsl
xchg
nop
repnz
rcrb
mov
out
popf
test
sahf
adc
in
arpl
repnz
pop
in
push
aaa
xor
aaa
sub
outsb
adcl
nop
imul
jno
dec
jecxz
cmp
lret
outsl
jb
sar
or
and
sbb
je
push
sbb
pop
test
aad
call
lds
orl
fisubs
push
fisubs
nop
fsubs
adc
mov
out
cmpsl
je
add
sarb
imul
stc
mov
movb
shlb
out
aam
stos
shrb
push
mov
popf
mov
stos
loop
or
clc
out
push
daa
je
mov
outsb
aam
mov
xchg
shlb
js
xchg
pop
push
xchg
call
bndstx
ret
adc
mov
ss
imul
jl
cmpsb
repnz
inc
adc
mov
icebp
or
int
cmp
sbb
push
dec
mov
mov
xchg
rcrb
or
and
sbb
pop
in
sbb
push
push
scas
mov
jle
arpl
loop
fnstcw
sub
icebp
pusha
fwait
jo
push
adc
ja
dec
pop
jbe
jp
cmc
sbb
sub
pop
pop
jge
or
lahf
push
daa
jle
outsw
jae
push
das
add
outsl
icebp
dec
daa
adc
insb
aas
fistpl
sbb
sub
and
xchg
and
inc
inc
add
addr16
das
add
insb
or
jnp
sbb
mov
jno
xor
rcll
sub
out
sti
scas
mov
push
inc
mov
push
jmp
inc
mov
mov
sub
aaa
std
jp
cwtl
xchg
loopne
pop
fmuls
mov
xchg
inc
cmp
mov
adc
xchg
jo
and
push
test
mov
testb
or
ja
mov
jp
fcompl
insl
int
in
sbb
cmp
sbb
stos
je
sub
dec
inc
and
mov
xchg
loop
pop
xchg
jb
adc
jge
sub
add
in
mov
test
jbe
fldenv
jle
test
imul
xor
jle
insl
btsl
stos
ljmp
loopne
jg
test
push
pop
mov
pop
enter
mov
jb
imul
push
mov
adcl
fs
das
cli
jmp
testl
ret
inc
adc
ss
push
push
and
adc
push
fdivs
scas
loopne
loope
fmull
cmp
je
negb
push
or
popf
xchg
pop
fisubrl
inc
dec
mov
stos
xchg
fildll
imul
popf
cmpb
bound
inc
push
stc
mov
cmpsl
daa
scas
xchg
incl
pop
add
xor
adc
fwait
sub
xor
imul
scas
lcall
mov
pop
jae
push
dec
inc
add
dec
add
in
popf
cmpsl
icebp
inc
jle
and
cli
nop
out
sub
mov
pop
jnp
lock
adc
sub
int3
jmp
jbe
and
push
rolb
int
mov
pop
dec
mul
or
jle
fcmove
pop
add
adc
jl
pop
pop
sub
lahf
cli
fnsetpm(287
sub
pop
cmp
mov
clc
and
popf
int
aaa
stos
hlt
jae
data16
jo
jo
repnz
xchg
cs
les
pop
xor
add
and
push
dec
sbb
cmpsl
add
test
addr16
out
bound
jle
cmpsb
lahf
int
scas
sub
cmp
jle
flds
inc
pusha
mov
fs
mov
adc
xchg
leave
cmpsb
insl
inc
js
xor
insb
jno
xchg
jmp
add
ret
jnp
aas
imul
xchg
stc
dec
mov
or
push
push
mov
sub
pop
jg
or
enter
cmpl
sbb
int3
sub
mov
push
repz
sub
mov
negb
cmc
idivl
jle
adc
push
mov
cmpsl
loop
insl
sub
sub
add
cmp
mov
cmp
mov
and
leave
sbb
icebp
or
cs
mov
xor
iret
mov
adc
mov
andb
sub
dec
mov
jge
jbe
sbb
icebp
xchg
cmp
jnp
inc
mov
lods
cli
int
scas
movsl
in
pop
mov
sub
jns
jno
mov
mov
dec
into
or
out
fistpll
lods
xchg
sbb
sub
adc
das
mov
daa
or
inc
popf
sahf
repnz
stc
sbb
inc
xchg
xor
adc
repz
and
xchg
and
jmp
jg
popf
mov
mov
jns
push
sbb
ret
cmpsb
mov
xchg
pop
cmpsb
mov
adc
adc
add
adc
jmp
mov
mov
inc
sbb
rcrb
sbb
in
push
inc
adc
pusha
pop
xor
or
dec
inc
or
jge
out
test
int
cld
pop
inc
xor
or
sarb
mov
loope
fadd
cmc
mov
mov
pushf
or
and
xchg
adc
pushf
push
adcl
push
data16
das
cwtl
mov
sbb
push
fstps
lods
or
xor
mov
xchg
cmp
sub
shrl
sub
outsl
cld
sarb
sbb
and
jl
outsb
pop
or
xor
ss
sbb
sti
int
or
in
aad
shrl
fnstsw
xor
adc
lret
jbe
lcall
jne
cmc
clc
push
jno
mov
cmc
jp
and
jp
lock
mov
mov
stc
dec
mov
pop
jne
call
dec
cmp
mov
push
std
xchg
ficoml
cmpsb
stos
push
lcall
cmpl
adc
dec
dec
inc
jge
or
pop
add
or
in
ret
xlat
mov
xchg
dec
pop
icebp
mulb
aaa
inc
and
mov
test
push
sbb
stos
cmpsb
out
cmp
int3
dec
pop
out
push
out
xchg
imul
in
pop
cmp
shll
cmp
daa
push
add
leave
xor
adc
or
cmp
xlat
xchg
lcall
cmp
mov
mov
mov
lcall
and
test
push
mov
xchg
add
sub
popf
mov
dec
adc
loopne
sti
out
clc
jne
mov
mov
or
mov
lea
add
adc
int
out
mov
push
cmp
pop
jno
clc
fidivrs
inc
push
mov
mov
int
stc
insl
jb
lock
ja
cltd
adc
fldt
loopne
pop
mov
sbb
test
ss
addl
and
daa
push
pop
out
or
inc
lds
out
xchg
jmp
mov
scas
leave
mov
insb
imull
out
in
test
sbb
loope
mov
sbbl
mov
dec
mov
jae
sub
sub
cmp
dec
fs
push
inc
cs
mov
jl
add
jo
xchg
mov
push
cmp
add
inc
cmpsb
push
int3
push
sarb
and
cld
mov
push
call
repz
jbe
ret
nop
mov
jg
jle
jo
inc
stos
imul
outsb
or
push
lret
push
sahf
xorl
repnz
mov
inc
adcl
shll
aaa
adc
inc
xchg
sbb
arpl
mov
xor
cltd
jg
jb
mov
mov
jo
fcmovnbe
mov
popa
fnstsw
push
in
xchg
push
pusha
sbb
scas
test
push
dec
jmp
jae
jecxz
pop
sub
aas
and
mov
movsl
mov
fidivrl
cwtl
pop
popa
lods
clc
sub
movl
fadds
mov
jl
mov
jg
addr16
mov
or
movsb
scas
xchg
jle
jmp
sbb
test
or
push
mov
repz
stos
ljmp
pop
dec
adc
jmp
pop
inc
fistps
jge
xchg
jmp
push
lea
sbb
dec
aaa
mov
adc
or
lcall
in
sub
jmp
mov
mov
mov
out
fwait
mov
adc
fldlg2
sub
xlat
ja
jge
movsl
imul
ret
adc
in
jbe
cmp
leave
es
push
das
push
sbb
mov
mov
pop
jns
mull
or
arpl
xchg
lahf
popa
and
out
lea
sub
xlat
mov
jge
mov
dec
sub
mov
out
adc
pop
mov
insb
push
fs
ljmp
fidivrl
nop
dec
popa
cli
call
xor
test
pop
adc
push
jge
xchg
or
xor
mov
clc
push
inc
cmpsl
mov
cli
stos
pop
lock
pop
xor
adc
fnstsw
or
jbe
xchg
or
push
xchg
shll
mov
mov
or
inc
dec
xor
jnp
sbb
sub
fstps
scas
bound
lahf
inc
jge
cmp
gs
cmp
or
mov
ss
pop
popa
cmp
ss
lock
push
jne
or
stc
insb
stos
mov
lea
nop
sbb
mov
dec
jb
in
outsl
mov
mov
xchg
or
incb
xchg
cmpsb
mov
cmpsb
movsl
pushf
fisttps
xor
add
mov
jg
aad
pop
sbb
mov
in
inc
popf
dec
fwait
outsb
adc
push
movl
movsl
sub
sbb
dec
out
lcall
in
cmp
mov
pushf
jno
cltd
jmp
clc
jae
jmp
aad
push
inc
push
xchg
push
lret
out
ret
sub
cmpsb
popa
cwtl
and
ret
dec
test
in
mov
mov
xor
addr16
shll
scas
je
xor
mov
dec
dec
sbb
enter
aad
jae
xchg
jp
and
add
js
cwtl
sbb
fdiv
sahf
test
sbb
mov
jge
shl
clc
in
orb
xor
or
ss
lea
lahf
xor
movsb
in
push
cmpsl
pop
cmp
ljmp
jmp
cmpb
xchg
cmp
inc
cmp
inc
cmp
mov
jle
fcoms
add
lcall
mov
push
sub
pop
cmp
push
mov
push
lods
daa
xchg
dec
xchg
je
ficoms
jb
imul
or
rcrl
incb
icebp
sub
pop
or
jp
enter
ficomps
pop
mov
jg
loope
test
addr16
mov
das
mov
lock
les
pop
pop
push
sti
add
stos
cmp
sbb
xor
enter
fistpl
mov
cmp
mov
sbb
sbb
movsl
rclb
lea
push
sbb
movsb
jecxz
adc
addr16
into
mov
test
add
pushf
sub
adc
loope
mov
iret
addb
cmp
mov
or
inc
repz
xchg
fstpt
adc
jg
cmpsb
ds
jp
or
push
jp
popa
mov
addr16
lret
sbbl
loopne
hlt
adc
fwait
hlt
sti
adc
test
jmp
mov
xor
inc
dec
push
sbb
dec
pop
cmpsl
int3
aaa
mov
fsts
add
xchg
lock
inc
pop
mov
bound
hlt
cwtl
ret
inc
aas
sub
jns
cmp
inc
mov
jne
ljmp
pop
dec
movsb
pop
cs
or
je
jl
push
div
enter
pop
cmp
movsb
adc
test
adc
fsubs
movhlps
push
xor
jne
xchg
jmp
stc
pop
aam
aaa
inc
cmpsl
test
in
in
andb
cli
ret
pop
push
jecxz
pop
or
mov
xchg
outsl
mov
lcall
mov
out
bound
mov
and
fldt
pop
aas
in
sahf
out
pushf
cwtl
mov
nop
stos
inc
mulb
push
shrl
inc
pop
movsl
sub
xor
jbe
xchg
jl
test
fdivl
inc
pop
test
sub
push
jno
ror
jmp
nop
mov
les
push
rorl
dec
jae
or
stos
adc
je
xchg
mov
xor
xor
scas
stc
jp
cs
xor
stc
or
mov
mov
push
cmp
int3
xchg
popa
jg
fs
xor
add
out
jecxz
outsb
xchg
jns
push
not
test
jne
cmp
das
cmp
xchg
mov
movsb
xchg
ljmp
push
ja
fs
cltd
loope
jno
movsl
pop
es
dec
sbb
in
nop
push
in
push
ja
fldz
or
jp
mov
cmp
loopne
dec
push
mov
pop
adc
dec
popf
jnp
out
xchg
mov
jae
cmp
push
loopne
aaa
stc
addl
fstpl
lfs
fdivl
sbb
pop
sub
sub
push
jmp
push
arpl
outsl
pop
mov
pop
and
inc
outsb
outsl
xor
adc
mov
push
pop
pop
imul
xor
lods
sbb
dec
xchg
orb
inc
in
iret
js
in
lret
xor
pop
hlt
xchg
ret
and
sarb
lea
aad
subl
mov
lds
inc
popf
ret
fwait
je
xchg
mov
movsb
add
clc
xchg
inc
sbb
jno
mov
lcall
mov
xor
mov
xor
dec
mov
aam
outsb
shlb
mov
test
imul
push
cmp
mov
div
mov
mov
mov
cwtl
sbb
std
xchg
inc
xor
in
data16
inc
shll
arpl
out
fadds
fstps
es
fidivrl
fwait
mov
movsb
xor
enter
dec
dec
pushf
push
mov
and
jnp
pop
repnz
dec
mov
pop
movb
add
sub
add
sbb
sbb
push
shlb
ret
mov
xor
pop
lahf
lds
push
mov
mov
pop
mov
lcall
int
push
jno
aas
push
lock
cld
inc
mov
les
adc
lock
jecxz
lods
sbb
push
lds
pop
mov
lret
push
test
fbstp
jp
lahf
sbb
jle,pt
cmp
add
sub
xchg
jmp
mov
dec
mov
mov
fmull
mov
imull
int3
ss
stc
cmp
inc
sbb
out
into
div
lock
fadd
sar
dec
or
cmc
mov
xchg
test
or
add
mov
push
sbb
xor
pop
inc
cmp
xchg
sbb
push
mov
out
inc
xor
push
jne
and
hlt
push
mov
jb
mov
sahf
lds
lret
cwtl
pop
xchg
rolb
sarl
cld
scas
sbb
insb
adc
mov
cmpl
arpl
jne
mov
mov
push
jb
push
lret
push
mov
enter
fildll
lret
mov
cmp
imul
mov
das
push
cmp
aas
push
or
js
in
dec
xchg
out
mov
sbb
add
sbb
lret
notb
adc
adc
shr
leave
push
pop
les
cmpsl
shll
push
ds
xchg
pushf
aaa
dec
in
mov
loope
xchg
in
dec
cmp
sub
lods
lret
stc
pushf
adc
jno
inc
adc
mov
sarb
inc
jae
dec
divb
cmc
decb
push
push
xor
lods
aas
movsb
xor
pop
fisttps
mov
dec
xor
loop
iret
cwtl
js
out
je
mov
inc
fs
push
fildl
js
mov
pmulhuw
push
inc
in
mov
cmp
xor
sub
shrb
mov
hlt
fsts
popf
xorb
shll
mov
xor
and
sahf
cld
inc
pop
pop
aad
inc
in
stos
cmp
mov
sbb
sbb
imul
inc
xchg
cmpsl
iret
mov
icebp
or
xor
shll
flds
jo
push
dec
sbb
ret
or
push
xor
ja
pop
arpl
cmp
not
sub
js
push
cmpsl
fsts
outsb
in
jae
mov
inc
sub
mov
rcrb
mov
jno
cmp
in
push
add
dec
lcall
in
cmp
pop
adc
push
xchg
mov
cmp
test
mov
or
cmc
loop
je
dec
js
cmp
jno
loop
sbb
jns
xor
push
jg
jns
xchg
adc
repnz
nop
push
daa
mov
xchg
xchg
js
dec
fs
ficoms
cmp
xlat
jmp
xchg
add
adcb
lds
dec
mov
xchg
iret
shll
cmp
lret
cld
out
push
sbb
ss
dec
ljmp
prefetch
or
cltd
sbb
in
mov
ja
test
imul
arpl
pop
add
sbb
adc
test
mov
lods
pop
filds
test
in
jp
mov
adc
pop
mov
xchg
jno
pop
lds
pop
pusha
push
popf
push
pop
mov
mov
add
xor
mov
fidivrl
in
cwtl
repz
lds
lods
sbb
mov
push
rol
dec
outsb
out
pop
in
lock
mov
sarb
lods
adc
xor
pop
dec
mov
leave
jne
mov
pop
stos
fisubs
adc
pop
addb
inc
pusha
mov
add
fldl
push
rcll
les
icebp
sahf
jo
inc
dec
jecxz
push
push
jns
orb
sarb
push
jp
mov
cmp
stos
in
loope
icebp
pop
xchg
adc
pop
cltd
adc
dec
push
pop
loope
pop
imul
leave
adc
cmpsl
sbb
xchg
jo
sbb
xchg
adcl
mov
mov
dec
and
cmp
test
pop
jge
mov
mov
rcrb
adc
push
cltd
sti
sar
fs
dec
dec
pop
cwtl
adc
dec
rcr
dec
dec
repnz
aas
bound
jns
jae
movsl
out
xchg
cld
call
push
repnz
cld
xchg
aas
pop
inc
lret
jmp
leave
sbb
push
cmp
adc
mov
pop
add
imul
and
sbbb
pop
mov
xor
mov
stos
hlt
jecxz
jge
mov
xor
sub
ss
mov
aas
jl
jns
xchg
stc
movsb
or
push
imull
jb
cmc
pop
sub
dec
mov
stos
scas
in
sub
fdivl
mov
lds
iret
ficomps
stc
adc
inc
clc
and
loopne
jnp
out
adcb
xor
fwait
repz
addr16
inc
jmp
or
jecxz
adc
xor
aad
repnz
das
rcrl
sub
subb
addr16
adcb
dec
dec
inc
adc
and
lcall
xor
std
sbb
lea
jo
clc
pop
cmpb
rolb
bound
push
call
sbb
cmp
fs
cmp
outsl
dec
adc
or
and
iret
mov
jge
sub
cmp
mov
inc
je
je
test
jmp
js
and
push
testl
or
sahf
bound
xchg
pushl
mov
popf
enter
dec
loope
repnz
jecxz
pop
or
cmp
mov
ja
movsl
enter
rclb
fmull
xchg
xor
lods
mov
pop
cs
sub
xor
sbb
and
fstpt
push
les
das
andb
test
in
pop
push
sub
dec
push
adc
add
enter
pop
cmp
call
loope
je
je
mov
jmp
fmul
sub
flds
xor
sbb
subb
stos
mov
and
inc
pop
cld
push
adc
add
lret
push
mov
popf
sahf
push
pop
push
and
push
adc
mov
xchg
mov
pop
jmp
push
aaa
test
add
out
inc
sahf
xor
xor
sbb
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
inc
mov
mov
movzbl
and
mov
mov
xorl
mov
adc
sub
decl
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
push
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
push
movl
cmpl
je
cmpl
ja
jmp
push
pushl
push
push
pushl
push
call
mov
dec
mov
jmp
movl
movl
xor
xorl
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
sub
push
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
pushl
call
jmp
mov
adc
mov
subl
mov
adc
mov
mov
not
mov
movl
cmpl
je
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
push
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
push
call
jmp
push
add
push
inc
mov
movl
adc
xor
mov
andl
mov
inc
mov
cmpl
jge
jmp
pushl
call
cmpl
jb
mov
xor
mov
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
jmp
mov
mov
xor
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
movl
mov
mov
cmp
jne
cmp
jne
mov
mov
xor
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
and
mov
adc
mov
mov
mov
jmp
pop
aad
dec
xor
insb
hlt
xchg
das
mov
dec
xchg
mov
jnp
cwtl
jnp
dec
mov
iret
cmp
test
and
push
int
xlat
xor
add
lods
dec
push
lock
lcall
daa
mov
cmpsl
push
fidivl
ja
and
add
mov
lods
test
mov
xchg
jp
ds
mov
cli
adc
pop
sbb
add
rcrl
fdiv
mov
jne
sbb
xor
sub
lods
shrl
cmp
psrld
xor
dec
add
in
mov
add
jle
xor
mov
scas
cltd
pop
rorb
adc
xchg
mov
imul
shrb
sub
aaa
jne
lock
fiadds
jae
pusha
stos
ja
mov
push
mov
stos
inc
xor
scas
xchg
out
je
dec
xchg
or
mov
dec
dec
cwtl
xor
mov
cmp
cmp
js
mov
iret
arpl
insl
jl
cltd
roll
ret
jg
jp
fdiv
imul
sbb
bound
gs
mov
pop
sahf
jbe
out
push
ljmp
mov
insl
xor
icebp
add
leave
xchg
mov
arpl
repz
jg
add
adc
into
push
sub
cmp
adc
mov
sbb
add
pusha
add
aam
lret
jne
sbb
enter
pop
out
aam
sub
or
pop
jo
out
ror
jmp
inc
sub
xchg
sbb
popa
shl
xor
mov
cmp
out
xor
mov
insl
sarl
ret
or
pxor
rolb
pusha
shr
nop
lcall
fmuls
mov
orb
in
shll
inc
wbinvd
push
cmpsl
or
insl
lahf
jne
in
mov
pop
xchg
cmp
ds
aaa
decb
sahf
cmp
test
adc
push
mov
out
mov
push
aaa
daa
rorb
xorb
cmp
push
push
jmp
inc
das
lret
aas
stc
fwait
and
enter
pop
mov
fnstsw
scas
ljmp
jne
cmp
add
adc
push
xchg
add
lock
movsb
sarb
fxch
dec
cmpsl
jne
je
sub
movsb
pop
pop
lret
push
or
sbb
cmp
sub
xchg
insb
inc
cmpsl
sub
fcoms
inc
mov
add
mov
into
daa
jo
shr
adc
cmp
stos
in
and
or
lea
push
pop
xchg
lods
adc
xchg
xchg
test
scas
loopne
sbb
data16
cmp
cmpl
push
call
push
fucomi
lods
inc
ja
xor
call
adc
int
popa
stc
mov
sbb
sub
das
or
out
div
xchg
in
xchg
jns
ljmpw
jmp
aam
dec
xchg
rcr
hlt
rorb
hlt
and
push
pop
fdivrl
jmp
pop
adc
sti
mov
inc
shll
fcompl
es
das
pop
inc
ljmp
ss
repz
adc
lods
cs
pushf
js
jbe
xchg
out
daa
out
dec
jno
pop
xor
pop
das
mov
call
sub
and
mov
js
fstl
dec
dec
push
aad
fsubl
inc
jle
scas
stos
cmp
sti
lahf
outsb
cmpsl
xchg
loope
in
push
pop
insb
xor
movsl
test
fcmovnu
cmc
mov
ret
inc
pop
jle
jno
mov
mov
dec
mov
cmp
arpl
frstor
ja
in
xchg
cmpl
subb
lcall
fmuls
sbb
xchg
outsb
mov
jo
cwtl
mov
leave
sbbb
cmp
dec
push
xor
xchg
pop
popa
adc
mov
cmpsl
xor
insb
nop
sub
in
jbe
or
jae
pop
dec
test
testb
pop
adc
gs
imul
sub
inc
xor
xchg
jne
sarl
pop
jae
cmp
sub
sbb
mov
jmp
xor
out
xchg
sarb
dec
jns
loop
andb
add
repz
push
mov
adc
mov
in
push
shl
adc
scas
inc
testl
push
mov
cmp
push
jmp
roll
xchg
push
out
lret
xor
push
out
add
xchg
pop
and
dec
mov
pop
int3
and
stos
mov
xchg
and
and
sti
push
xor
xchg
pusha
imull
sbb
lret
add
divb
fistps
pop
jle
or
fdivs
lods
out
dec
cmp
test
add
fwait
push
cld
fnsave
js
stos
or
add
xchg
movsb
jb
je
movsl
pop
lods
adc
xchg
adc
add
push
sub
inc
mov
fdivl
popa
mov
mov
inc
aad
xchg
out
xorl
xchg
mov
in
data16
mov
es
fcoms
jg
out
xchg
mulb
out
xchg
adc
js
testl
mov
cli
adc
loope
xor
push
adc
mov
cmp
push
mov
roll
scas
arpl
xor
mov
std
repnz
dec
ds
lcall
repnz
cmp
mov
dec
pop
lcall
mov
pushf
inc
mov
inc
xchg
in
jno
fucomi
xchg
movsb
decl
mov
push
iret
flds
sub
gs
fsts
push
sarl
mov
stos
lcall
push
push
lods
inc
in
jo
je
cmpsb
mov
arpl
adc
aas
mov
out
stc
fdivrl
lods
or
popf
dec
insl
sbb
outsb
push
xlat
movsb
jmp
sub
xor
arpl
mov
clc
push
out
lahf
cs
push
cmc
imul
xor
clc
sbb
mov
and
test
mov
fadds
adc
outsb
xchg
fists
jo
dec
int
or
popa
insb
pop
mov
testb
daa
fidivrs
clc
jns
pop
sahf
loope
xchg
ljmp
inc
pop
push
add
push
push
out
int
enter
mov
cmp
ret
mov
jg
and
loopne
stc
jne
fsts
dec
inc
int3
fistps
sbb
jbe
push
sub
cwtl
daa
cmpsl
dec
push
aad
or
stc
jns,pn
push
js
mov
imul
xchg
addb
and
jp
or
push
in
jl
sub
fsubs
adcb
imul
test
outsl
gs
hlt
lea
mov
stc
push
fadd
lcall
lea
fucomp
inc
add
cli
dec
jl
daa
dec
xor
cmpsl
lret
cmp
out
mov
ror
dec
push
rorl
push
sbb
mov
enter
push
or
pop
aas
adc
rcrb
into
mov
push
aam
xor
mov
inc
mov
ret
gs
ja
cltd
aas
sub
adc
dec
testb
enter
adc
mov
movsb
sahf
xchg
fcomps
js
aam
jl
scas
int
add
dec
mov
in
mov
sbb
fs
xchg
cli
pop
mov
ljmp
dec
add
cltd
and
jge
aam
push
in
xchg
sbb
insl
test
sahf
into
mov
xchg
add
insl
add
aas
repz
sub
xchg
mov
pop
aam
js
dec
sbb
add
decb
aas
loope
push
leave
jo
sbb
test
rclb
add
into
dec
imul
stos
mov
in
jl
icebp
cmpb
xor
loop
mov
or
data16
mov
in
pop
dec
lahf
xchg
mov
leave
inc
sub
adc
add
pop
lret
push
pusha
ja
fisubl
testl
and
gs
repnz
lods
cmp
add
lahf
push
stc
imul
leave
pusha
inc
mov
mov
dec
outsb
bound
fcompl
add
mov
sbb
int
aam
dec
out
cld
adc
sub
ds
xchg
das
clc
push
lds
jl
adc
outsb
imul
pop
loope
add
xor
sub
orb
jno
scas
push
sti
dec
or
fadd
xchg
and
push
test
add
fnsave
xor
and
idiv
xchg
sahf
fnstcw
gs
inc
sarl
inc
and
mov
nop
add
movsl
push
incb
rorb
stos
out
sub
cwtl
jo
clc
xor
ss
js
jo
jp
xor
mov
sbb
sub
leave
inc
shlb
dec
ja
ss
push
add
inc
and
inc
rorb
daa
push
jnp
cmp
int3
jae
xor
xor
push
or
addr16
pop
aad
icebp
cli
das
popf
xchg
xlat
jae
inc
icebp
dec
cwtl
jmp
mov
loop
loop
xchg
stc
xor
lods
xchg
lahf
in
ds
mov
pop
inc
mov
mul
pop
xchg
outsb
rcl
rdtsc
outsb
dec
cli
ljmp
dec
mov
adc
outsb
add
stos
fdivl
mov
mov
mov
mov
fwait
ljmp
push
or
das
push
sahf
jae
and
jo,pn
fwait
adc
jmp
jnp
shrb
cwtl
push
xor
and
push
lods
mov
shl
and
scas
pop
sub
mov
ficomps
xor
jmp
in
xor
test
shll
jp
push
push
test
into
data16
outsb
daa
mov
addr16
mov
std
mov
jo
sbb
mov
lret
xor
lock
popa
movsl
or
ss
mov
in
inc
mov
dec
dec
sub
je
insb
sub
ss
cld
sub
mov
mov
or
sub
push
push
fcom
ret
push
es
mov
sub
stos
jno
sti
pushl
pop
popa
lcall
xchg
fs
data16
push
mov
test
ds
out
xchg
pop
rorb
cmp
mov
das
and
jmp
push
fucom
adc
ret
cmpsl
dec
adc
mov
dec
mov
cmovae
and
mov
sarl
scas
lds
cmpsb
cmp
test
mov
test
fucomip
lods
sbb
mov
loope
ja
pop
jo
dec
inc
lahf
and
ja
ss
mov
push
dec
add
ja
jae
js
sbb
jmp
mov
arpl
push
xchg
ss
sahf
xor
push
sub
mov
jp
or
mov
imul
daa
shl
cmc
cwtl
xor
test
divl
fdivp
push
sub
sub
push
int3
test
push
stos
mov
mov
mov
or
mov
out
imul
loope
xchg
cmpsb
cli
cmpsl
in
mov
push
mov
mov
test
movsb
mov
lret
insb
in
stc
test
shr
out
jg
mov
mov
jmp
enter
ss
ljmp
xor
insb
mov
sbb
add
sbb
es
sbbb
mov
rorl
jmp
scas
push
mov
mov
jno
jmp
out
fsubp
cmp
jo
xor
jmp
std
in
and
stos
xchg
sbb
daa
loope
gs
dec
movsb
push
scas
adc
fsubr
sbb
xorl
mov
cld
cli
jecxz
jle
testl
sbb
xor
lret
cmp
lea
loop
and
cmp
sti
out
popa
add
cmp
arpl
or
jl
jne
data16
mov
and
sti
aad
xlat
ds
cmp
dec
push
mov
lock
js
fists
fidivrl
inc
out
cmpb
divl
lcall
mov
sub
testl
notl
jg
jbe
inc
and
xor
push
loop
popa
ljmp
jle
fs
jae
repz
fnsave
in
xchg
in
jmp
jecxz
lods
lahf
outsb
sarl
jecxz
aaa
adc
orb
push
xor
xchg
push
imul
push
insb
add
addr16
cmpsb
in
add
mov
xchg
insb
dec
or
cmc
xor
xchg
inc
cmp
sarl
shll
out
loop
aam
add
and
enter
cmpsb
push
inc
xchg
out
push
or
jl
mov
xchg
inc
dec
lcall
arpl
push
icebp
mov
push
ds
mov
dec
int
cmpsb
push
dec
lods
jns
cmp
movsl
scas
xchg
fcoms
int
dec
and
popf
mov
mov
insl
mov
push
in
pop
or
pop
icebp
ljmp
cmp
push
cmp
inc
bnd
mov
sahf
push
jo
cli
popa
push
pop
or
mov
add
lret
jmp
xor
jns
pop
cltd
dec
loop
popa
inc
ret
aas
ficoms
fisttpl
push
flds
push
stos
inc
sbb
add
leave
push
ss
arpl
push
aaa
inc
inc
mov
pop
mov
test
pop
lea
fidivl
cmp
sub
mov
add
cs
sahf
fildll
clc
aam
sysexit
cmp
cld
test
dec
push
or
mov
xchg
jge
test
mull
aas
addr16
inc
xlat
hlt
loope
inc
xchg
unpckhps
or
xchg
adc
jo
mov
mov
mov
psrad
and
imul
cmp
or
lock
out
cltd
push
sar
in
jle
loop
notb
je
mov
mov
aas
push
jl
test
mov
iret
scas
jbe
mov
xor
mov
dec
push
pop
dec
mov
push
mov
in
enter
popf
popa
int
fs
push
push
stos
adc
adc
aas
cmp
andl
stos
cli
dec
push
mov
scas
and
test
push
out
fucomip
aam
xchg
jle
xor
push
mov
pop
and
stos
inc
test
jo
xchg
mov
aas
addr16
ret
in
xlat
mov
imul
fdivrs
popw
addr16
out
mov
inc
dec
loop
jae
mov
xchg
pop
ljmp
fmuls
jecxz
mov
call
mov
cli
push
mov
pop
out
mov
shlb
sahf
jo
pop
iret
nop
adc
cmp
sbb
imul
or
dec
ret
fistpll
adc
sbb
push
dec
xor
aam
mov
shlb
fsubr
js
xchg
add
adcb
mov
push
xor
add
mov
rcrl
enter
push
sarb
and
pop
xor
lods
dec
jp
call
shl
outsl
jmp
lock
filds
mov
lods
jle
nop
daa
or
fimull
lods
sub
pop
jle
mov
push
sbb
add
push
lock
int3
and
mov
gs
cmp
jb
cs
cmp
fnstsw
push
es
xor
in
push
xchg
mov
dec
lock
inc
cmp
cmp
test
rcrb
xchg
pop
mov
mull
fcomi
mov
daa
test
int
xor
dec
dec
std
mov
test
js
mov
mov
dec
ret
and
xchg
mov
xchg
adc
insl
cmpl
xchg
xchg
xchg
sbb
daa
repz
jg
mov
sbb
xchg
dec
fcoms
adc
sahf
xchg
or
pop
jp
dec
push
pop
sub
ret
push
jb
lahf
or
push
fs
jl
ficompl
cld
add
jl
sub
jl
sbb
hlt
mov
jns
jne
sbb
lcall
lods
and
mov
mov
flds
les
das
sbb
pop
ja
test
adc
test
jne
adc
add
mov
mov
mov
out
xchg
icebp
hlt
dec
xchg
lock
in
dec
rorw
aas
pop
in
add
hlt
push
jns
xchg
xor
push
popa
or
sahf
stos
pop
in
sbb
mov
sub
or
ror
outsb
jo
and
fs
lods
add
xor
das
mov
mov
fnsave
and
or
sbb
mov
shrl
cmp
push
test
jg
or
pop
cmp
mov
mov
cld
roll
repnz
jp
inc
stos
lods
sbb
imul
scas
mov
rcrb
push
outsl
fwait
das
pop
jb
dec
mov
or
cmc
add
mov
mov
das
loope
notb
pop
movsb
out
jp
stos
je
xchg
test
test
aad
js
or
outsl
dec
jg
sub
test
fcoml
into
rcrl
xor
push
cmpsb
sub
xchg
es
pusha
gs
push
ja
xchg
push
push
cmpsl
jae
push
movsb
inc
int
mov
lds
push
and
mov
mov
test
adc
stos
push
lods
rep
pop
in
stos
mov
xor
pop
jecxz
imul
repz
adc
mov
into
jecxz
add
aaa
and
jmp
mov
jle
ret
and
pop
mov
es
dec
scas
or
cmpsb
push
sub
cmpsl
insb
or
imul
test
push
jb
hlt
dec
pop
sti
cmp
and
loope
mov
fs
ret
push
xchg
jae
sub
dec
cmp
in
test
and
ret
push
out
xor
push
cltd
inc
and
jnp
jno
aam
pop
dec
xchg
and
fs
adc
outsl
cld
fwait
test
and
jecxz
cmc
mov
ficompl
mov
lods
mov
insb
pushf
push
roll
mov
dec
stos
dec
or
sub
xor
mov
stc
fists
add
into
mov
outsb
dec
jno
fsubrs
push
adcl
cmp
out
shl
dec
daa
lcall
cmpsb
cmp
or
pop
lds
add
and
mov
push
int3
mov
lods
insb
in
aas
jg
mov
mov
push
call
push
and
arpl
addr16
jne
shrl
and
mov
inc
loop
add
insb
sahf
xor
mov
mov
outsb
test
cmp
popa
por
xchg
in
dec
test
adc
add
aaa
mov
inc
addr16
lcall
mov
cld
mov
and
and
inc
mov
out
ret
mov
add
pop
ds
fdivrp
or
or
add
mov
add
xor
jb
mov
lret
fidivrl
nop
repz
iret
xor
fstl
syscall
out
mov
int
dec
add
or
stos
and
jns
hlt
sti
vpsrad
xchg
inc
dec
cmpsb
test
nop
adc
aam
lahf
mov
cwtl
and
cmp
jno
inc
xor
mov
bound
cmpsb
cmpl
ljmp
cltd
add
sub
inc
mov
push
inc
xor
push
push
pause
loop
scas
push
push
loop
pop
pop
scas
cwtl
dec
xchg
adc
dec
xor
or
sbb
rcrb
ds
sahf
xor
xchg
gs
xchg
add
in
aam
in
mull
rorb
loop
push
jg
push
cmp
andl
stc
or
out
lods
mov
and
fucomi
hlt
enter
mov
out
stos
sub
mov
int3
adc
and
inc
adc
push
fiaddl
inc
or
ds
sbb
lea
rorb
xor
fstpl
daa
aaa
test
lock
or
jl
aaa
mov
push
sbb
in
sbb
inc
lcall
xchg
hlt
inc
lcall
std
iret
cmp
mov
mov
cltd
divl
cmpsl
mov
cltd
stos
mov
inc
lahf
aam
fdivrs
mov
xor
insb
inc
xchg
push
inc
sbb
fbstp
loop
das
dec
lea
into
aad
pop
je
dec
push
movntq
adc
movsl
test
or
add
push
mov
loopne
cli
sub
stc
outsl
pushf
inc
mov
iret
lret
xlat
dec
aas
and
xor
cmp
fdivs
xor
call
icebp
cmc
jge
pop
movsb
cmp
sti
rorl
mov
icebp
cld
jl
mov
mov
mov
jl
sbb
sub
sahf
sub
stos
jns
adc
or
mov
pop
outsb
div
jo
push
ret
mov
pop
or
imul
fcom
lret
cmp
lds
mov
sarl
je
paddq
sub
mov
add
cmp
dec
mov
leave
push
mov
mov
xchg
jo
in
add
mov
adc
nop
out
jecxz
ja
or
je
or
sub
lcall
daa
push
pop
add
testb
push
adc
ret
outsb
mov
aad
or
cmp
or
sti
sbb
mov
or
mov
fistl
mov
out
shl
xchg
shrb
jl,pt
xor
aam
jo
enter
inc
mov
arpl
add
xchg
xor
sbb
shlb
inc
xchg
or
std
mov
mov
jle
movsl
shl
cmp
ror
fadds
or
and
pop
rorb
rclb
stos
ds
je
fnstcw
dec
mov
sbb
or
decl
shll
mov
iret
and
ss
dec
mov
push
mov
lret
rcll
adc
xor
jno
push
sub
addr16
or
js
shl
ret
ja
push
cwtl
push
jns
sbb
mov
xchg
pop
rcll
sub
jl
int
push
popa
dec
mov
test
lcall
sbb
movsl
xchg
outsb
lods
jns
in
dec
jl
inc
xchg
les
push
outsl
add
mov
jae
mov
sahf
xchg
mov
and
or
rorb
pop
push
mov
orl
mov
test
jae
and
mov
mov
aas
test
push
shlb
data16
insb
fwait
sarb
push
dec
lea
push
sub
ljmp
xor
push
xlat
push
pop
aas
int3
dec
pop
cmp
mov
or
mov
jne
jg
mov
xchg
cmp
stc
pop
aaa
pop
das
mov
jl
jbe
out
jo
add
push
adc
rcr
mov
mov
mov
cmp
mov
jo
xor
jb
rcrl
xor
cmp
shlb
sub
sbb
sbb
ss
and
adc
mov
or
or
scas
cmpl
mov
inc
sbb
gs
sahf
clc
addb
pop
jmp
es
push
dec
push
push
aaa
mov
imul
cld
sahf
pop
sub
or
or
adc
mov
pop
ljmp
xor
cltd
ljmp
xchg
xchg
shll
sbb
pop
sub
outsl
push
nop
or
jecxz
in
jne
add
pop
mov
mov
int
jmp
leave
gs
maskmovq
mull
cli
ja
mov
mov
stc
mov
sub
movsl
sahf
fld
push
and
out
add
hlt
aaa
inc
lea
out
add
add
pushf
cwtl
iret
cmpb
imul
out
mov
orb
add
pop
aas
or
xlat
pop
xlat
stos
push
sub
or
jb
and
cmp
bnd
dec
js
jmp
movsl
mov
clc
iret
xchg
sub
cwtl
and
and
push
cwtl
sbb
sbb
out
mov
ret
push
scas
and
xchg
mov
rolb
icebp
and
movsl
push
in
xchg
add
push
mov
dec
sbb
xor
test
push
repz
pop
mov
imul
dec
data16
or
or
jns
icebp
push
js
mov
mov
ror
arpl
fimuls
sbb
lock
and
mov
lods
xchg
push
lret
pop
jl
mov
jecxz
mov
jecxz
sarb
sub
ss
fbstp
adc
mov
inc
addr16
es
repz
pop
or
sbb
notl
lock
or
xchg
sbb
dec
ljmp
je
movsl
fsts
enter
push
mov
push
movsb
les
mov
dec
enter
arpl
push
jl
stos
sub
lcall
sbb
sbb
bound
mov
iret
insb
jno
dec
mov
cs
sbb
jecxz
cmp
std
sbb
cs
mov
mov
out
pop
into
push
filds
push
push
xlat
xchg
outsb
mov
xchg
ja
push
les
mov
sti
imul
sub
sbb
movsl
sub
adc
stos
repz
sub
xchg
jbe
add
mov
xchg
and
pop
nop
fadds
rorb
add
xor
cs
cmp
xor
or
in
lods
pushf
add
popa
fwait
push
xlat
lods
mov
or
comiss
insl
adcb
jmp
jo
cmp
pop
idiv
out
cmp
mov
outsb
mov
xor
ja
cmpsl
aas
int
xchg
int
stos
pop
jne
out
ss
cmpb
push
xor
mov
mov
xchg
pop
in
ljmp
xchg
fcoml
pop
xor
add
sub
inc
mov
add
jns
cmp
and
push
stos
iret
push
ret
or
jns
testl
dec
sub
mov
xchg
xor
scas
cmp
add
and
inc
movsl
outsl
jmp
jp
push
sbb
pop
jbe
out
pop
ja
or
loopne
lea
cmp
int
mov
pop
mov
jmp
inc
mov
xor
test
dec
push
mov
xchg
pop
out
and
imul
stos
loope
dec
cmp
mov
mov
enter
push
cmp
lahf
adc
pusha
push
mov
push
fsubp
inc
mov
les
xchg
jmp
mov
xchg
fisubl
std
pushf
loope
adc
adc
sbb
dec
sub
mov
stos
dec
pop
or
push
jae
xchg
xchg
or
mov
mov
mov
sbb
pop
push
mulb
inc
inc
ficoml
cmpsl
inc
repnz
imul
pop
dec
push
aam
outsb
rol
rorb
pop
int
lret
cld
mov
lcall
cli
sub
mov
push
cmp
mov
adc
ret
xchg
mov
cmp
inc
xchg
cmp
push
mull
aaa
jnp
push
pusha
add
cmp
clc
fdivs
test
mov
repnz
and
stos
insl
sahf
xlat
inc
dec
jl
dec
gs
jl
mov
inc
sahf
add
mov
or
insb
sub
andl
xchg
orb
fiadds
jns
outsl
lahf
sti
pop
sub
jmp
push
sub
mov
arpl
hlt
inc
cli
in
fldenv
cmp
aam
test
out
roll
add
inc
mov
pop
dec
jge
pop
pop
sub
test
and
rcrb
arpl
loopne
push
and
insb
or
je
push
dec
aad
sub
cld
mov
mov
je
shlb
lock
shll
push
mull
or
xchg
loopne
in
cmpb
sbb
push
pop
jae
xlat
hlt
test
sub
sub
dec
cmpsl
push
mov
rcll
notl
stos
dec
push
push
lahf
or
push
adc
fadd
cmp
jb
dec
dec
bound
mov
mov
mov
push
std
mov
xor
fistl
pop
in
aad
popf
orl
cwtl
in
lret
pushf
adc
pop
test
popf
mov
xchg
add
das
push
sbbb
jae
push
int3
inc
pushf
sbb
cmp
mov
fbld
loopne
sti
xchg
or
imul
leave
pop
clc
rcrb
xchg
std
lret
sbb
mov
ljmp
insl
cmpsb
cmp
jl
sub
ret
dec
pop
mov
adc
divl
scas
aad
leave
cmp
inc
inc
sbb
adcl
dec
add
int
mov
adc
imulb
push
push
xchg
rcrb
xchg
outsb
dec
pop
imul
popa
leave
outsb
lock
jl
pop
lods
sbb
jge
mov
pop
or
xchg
cmpsb
imul
arpl
jmp
sub
stc
adc
and
xchg
mov
xlat
icebp
lahf
int
xor
mov
mov
loop
xchg
mov
cmp
inc
in
or
inc
nop
push
cmp
push
test
xchg
mov
inc
mov
push
mov
jo
mov
adc
inc
test
xor
or
inc
inc
xorb
pop
push
dec
iret
mov
popa
jge
add
daa
push
pusha
add
fcmovb
and
cmc
pop
mov
mov
iret
jno
mov
xchg
sub
repz
and
mov
mov
lret
outsl
xchg
in
inc
sbb
dec
or
xlat
lret
mov
rol
cmp
mov
inc
pop
mov
insl
jle
dec
or
popf
arpl
push
outsl
mov
mov
out
int
cmpsl
ret
cmp
icebp
mov
lret
mov
sub
shl
mov
lock
sarb
xor
fisttps
pusha
and
mov
sarl
xor
movsl
mov
pop
test
and
add
mov
popf
mov
int
fadds
leave
mov
mov
adc
cmp
add
jno
je
mov
leave
inc
jmp
enter
mov
inc
jb,pt
pop
orb
cltd
xchg
ret
sarb
adc
mov
shlb
pop
xor
xor
int3
pop
add
bound
xchg
repz
pop
jb
or
imul
cmc
icebp
inc
ljmp
movsb
fcoms
mov
shlb
xor
int
jne
jnp
pop
push
nop
pop
movl
int3
imul
loop
and
add
push
mov
jg
mov
or
push
mov
movsb
out
notb
sarl
clc
adcb
aas
jnp
adc
movl
add
mov
subl
mov
movl
cmpl
je
cmpl
ja
jmp
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
push
movl
and
mov
push
xor
mov
or
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
pushl
pushl
pushl
call
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xorl
xor
mov
sub
mov
sub
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzbl
add
mov
orl
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
push
pushl
call
mov
dec
mov
jmp
mov
mov
sub
mov
xor
mov
and
orl
adc
mov
sub
mov
xor
or
mov
sub
imul
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
mov
xor
mov
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
call
test
je
lea
push
mov
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
sub
xor
mov
cmp
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
jmp
mov
into
gs
xchg
xchg
ret
pushf
jp
rcrb
sbb
addl
test
sbb
mov
sub
daa
sbb
xchg
roll
leave
sbb
xor
or
sub
mov
push
or
jns
lods
cmc
pop
rorb
jle
xor
jb
arpl
cli
cmpb
ds
test
mov
push
lods
adc
ret
sub
leave
imul
repnz
or
lahf
push
pop
fnstsw
and
sub
mov
mov
inc
xor
arpl
bound
subl
xor
inc
add
jmp
xchg
shrl
fdivp
pop
ja
jecxz
and
pop
idivl
xchg
dec
adc
xor
mov
imul
mov
or
xchg
shrb
xlat
or
lds
sbb
scas
gs
and
push
jbe
xchg
sub
lods
dec
fisubs
icebp
inc
adc
or
adc
clc
cld
push
inc
add
ja
sbbb
popf
mov
xor
lcall
mov
sbb
jl
push
in
in
push
or
popa
jbe
inc
sarl
repz
inc
jle
cwtl
and
dec
adc
adcl
and
xchg
ljmp
jmp
push
fcmove
push
push
rcrl
add
imul
pop
jmp
cmpsb
sub
pop
arpl
rcl
xchg
push
xchg
inc
adc
mov
dec
jmp
adc
pushf
lods
addb
lds
xchg
jmp
sub
xlat
out
adc
xchg
or
scas
xchg
orb
ror
and
jle
fldenv
hlt
and
xchg
xor
cmp
imul
pop
and
xor
sti
jnp
add
popf
cld
xchg
mov
inc
mov
iret
movaps
jo
subb
xor
dec
inc
pop
data16
imul
pop
std
icebp
sbb
inc
push
lds
ds
sbb
xbegin
shrb
sub
shlb
inc
cltd
push
xchg
mov
aad
stc
fs
divl
shll
inc
xchg
add
in
mov
pop
adc
jp
dec
mov
dec
mov
xchg
sub
clc
std
sub
addl
arpl
sbb
pusha
lock
fsubl
adc
mov
sub
xchg
ret
sub
into
pandn
call
rorl
pop
shlb
in
push
subb
sarl
mov
sub
mov
inc
in
call
fs
mov
adc
dec
lcall
lock
imul
popa
mov
push
fdivrl
add
ret
mov
and
shlb
loope
lea
dec
call
arpl
arpl
jno
fwait
pop
gs
shlb
rol
jg
insb
ret
sbb
out
or
clc
inc
insl
int3
push
fwait
xchg
fisubrl
or
test
in
sbb
test
loop
sbb
mov
mov
mov
or
adc
shl
subl
je
adc
push
idivl
sub
out
sbb
adc
fwait
mov
cmp
or
pop
push
sub
mov
jmp
stos
outsb
cmp
jbe
add
lret
sbb
lea
ds
xor
pop
push
es
test
fbstp
mov
push
pop
popf
pushf
gs
imul
in
imul
jl
xor
nop
fdivl
push
mov
sub
inc
pop
jp
das
imul
popf
push
out
mov
cmp
mov
pop
scas
ror
or
mov
mov
es
fst
adc
cmpsl
in
fldenv
mov
movsl
add
cmc
nop
jle
fwait
int
mov
int3
outsl
and
dec
inc
jne
data16
mov
ds
mov
add
shll
adc
es
rorb
sarl
push
and
add
push
jb
shll
and
out
pop
daa
aad
cld
scas
mov
ss
jge
and
push
cmp
sahf
rcl
or
cvtps2pi
mov
in
jb
cmovae
lods
sbb
cltd
mov
aas
jo
xor
or
xchg
iret
pop
and
sbb
mov
mov
scas
test
ss
es
bound
pop
add
push
fimull
or
add
out
or
mov
cmpsl
sbb
xor
lea
imul
movsb
jg
push
push
pusha
sbb
cmpsb
loop
lods
mov
pop
imul
test
dec
out
das
imul
pop
cmp
cli
cli
xchg
mov
cli
subb
add
daa
out
js
jg
gs
and
jg
and
es
mov
dec
xchg
addr16
in
add
mov
xchg
dec
dec
aam
jae
inc
sti
pop
ret
and
jmp
fisubs
jnp
gs
and
jecxz
jmp
cli
repz
add
dec
inc
xchg
mov
mulb
gs
in
mov
cmp
popa
mov
mov
dec
pop
inc
xchg
mov
icebp
pusha
ret
add
pop
dec
movsl
movsl
stos
js
dec
incb
push
dec
test
cmp
dec
inc
push
cmc
js
movsb
xor
lret
xchg
ret
mov
inc
ret
jp
cmp
dec
notb
movsb
jb
jmpw
and
stos
mov
inc
mov
mov
sbb
xor
pop
test
and
jne
and
jae
mov
insl
fistpll
sahf
call
adc
fs
movsb
sub
addr16
lods
cltd
aas
xchg
lea
sbb
hlt
ficomps
shll
xchg
xchg
test
jb
pop
out
jb
push
mov
mov
in
aaa
push
in
mov
shrl
mov
clc
mov
imul
pop
inc
sub
lret
outsb
jne
stos
movsl
lods
lods
pop
push
cmovne
xor
jecxz
push
xlat
ret
mov
gs
push
lahf
aad
movsl
adc
ss
mov
push
mov
push
mov
xchg
mov
pop
xchg
sub
jmp
xor
mov
jecxz
lds
xorl
mov
in
jg
aaa
in
mov
stos
test
aaa
inc
push
pop
mov
lods
inc
loop
sbb
dec
lods
lahf
clc
dec
cmp
fnstenv
fs
lods
roll
mov
mov
fisubs
gs
jmp
and
pop
xchg
inc
adc
cmc
mov
pop
test
pop
ss
xchg
inc
or
jnp
mov
sarb
pop
or
test
sub
or
push
or
iret
aad
inc
jecxz
push
jnp
push
cmp
mov
into
lret
xchg
cmpsl
push
imul
out
in
jae
push
mov
dec
sbbb
mov
xchg
ds
or
sub
inc
mov
push
sub
inc
dec
popf
or
ret
inc
andl
jnp
in
in
cld
inc
dec
pop
ret
dec
pop
repnz
mov
rcll
negb
fcmovnb
aaa
xchg
pop
aam
sub
pop
sar
xor
imul
cmp
or
xor
stc
jl
loop
cmpsb
fbstp
xchg
or
adc
movsl
pop
cmp
sbb
popa
mov
iret
dec
out
mov
les
test
hlt
rcr
aaa
lahf
js
cmp
adc
push
imul
inc
dec
mov
jp
movsl
dec
test
arpl
insb
mov
or
sub
push
cs
ljmp
mov
mov
in
and
and
leave
fwait
andb
and
jecxz
sbb
cmp
cmc
addr16
dec
fs
pop
call
int3
jbe
mov
in
jbe
pop
lods
and
mov
sbbl
and
pop
aad
mov
push
das
mov
sub
inc
xor
ljmp
mov
aaa
adc
mov
pop
push
fdivl
ljmp
sub
mov
dec
pushf
fbld
js
and
lea
add
mov
ret
mov
dec
xor
js
cmpsl
xchg
jnp
sub
imul
cmp
fwait
xor
jo
push
insl
xchg
daa
aaa
aas
shll
mov
ja
outsl
push
mov
pop
imulb
push
pop
and
stc
js
mov
ss
loop
jg
inc
xchg
loopne
lahf
mov
test
arpl
xchg
pop
inc
insl
ficompl
cmp
popa
nop
sub
clc
lods
sbb
sub
fisubs
repnz
jno
addr16
shrl
fs
sbb
aad
cmp
xorb
xor
int
sbb
mov
push
sbb
in
mov
adc
adc
in
add
mov
sbb
pusha
xchg
lret
xor
mov
and
jl
xchg
popa
add
sbb
ret
cmp
ret
test
jne
sets
fs
mov
loope
add
in
iret
cmp
imul
push
insl
add
mov
cmp
sub
adc
cmp
mov
add
cmc
xor
decl
mov
add
ret
out
shrb
insl
push
mov
mov
jae
xor
ss
roll
mov
ret
lret
outsb
daa
int
and
dec
lcall
mov
cs
sti
sti
das
jb
xor
aam
dec
int
mov
mov
push
pop
stos
and
test
shlb
cmp
out
mov
jae
dec
insb
stos
cld
ror
aas
and
leave
or
add
pop
mov
scas
mov
push
lods
arpl
loopne
adc
mov
aaa
icebp
adc
pop
jo
xor
pop
leave
mov
inc
popf
rorb
xlat
mov
adc
insl
ja
xchg
and
int
sub
xor
xchg
cld
stos
pop
xchg
clc
mov
test
jnp
cmp
mov
in
cmc
loopne
rcrb
cmp
mov
or
jle
rclb
jo
cmp
fadd
data16
xor
insb
mov
cmpl
sub
sub
in
mov
iret
and
xlat
pop
pop
imul
fldenv
pop
scas
scas
xchg
adc
std
ds
lahf
pushl
andb
inc
loop
dec
jge
aam
mov
adc
repz
jb
xor
pop
and
or
or
sub
cli
ror
sbb
fwait
add
lock
sbb
pushf
arpl
ret
frstor
std
sbb
iret
push
mov
xchg
push
nop
out
mov
jmp
xor
jg
push
hlt
jle
dec
repnz
add
jecxz
xchg
in
in
xchg
dec
push
push
xchg
testb
rep
mov
in
outsl
or
lds
push
xchg
jno
hlt
test
test
pop
jnp
mov
push
sbbl
ljmp
dec
xor
push
int
pop
xor
shufps
push
inc
adc
ret
adc
dec
rclb
push
xor
insb
stos
es
sahf
aas
pop
sbb
aas
inc
xor
mov
and
imulb
push
in
add
lret
stos
mov
add
cmp
dec
stos
push
add
adc
pop
stc
xchg
mov
xor
daa
out
lock
inc
cmp
in
jo
repnz
cmp
cmp
sbb
sbb
sub
xchg
xlat
cmp
in
and
and
mov
fdivrl
push
ja
rcrb
daa
push
pop
clc
pusha
dec
push
shlb
pushf
cwtl
out
inc
jl
add
and
rolb
in
test
jecxz
rcrl
sub
mov
adc
or
popf
aas
movb
jbe
stc
cmp
adc
iret
lods
xor
pop
outsl
ss
xchg
cmp
mov
mov
or
mov
and
js
mov
and
cmpsl
shl
clc
mov
and
aam
sbb
div
push
push
cli
dec
scas
sub
mov
dec
lcall
in
sub
div
repz
jmp
dec
subb
push
inc
mov
in
cltd
push
sahf
into
mov
mov
and
lret
xor
mov
dec
mov
pop
push
inc
cltd
cmp
mov
mov
loope
loope
mov
std
inc
out
es
and
pushf
mov
dec
cmp
sub
aaa
inc
xchg
or
sub
pop
add
insb
xchg
push
mov
insl
testb
sarb
or
das
jmp
xor
cwtl
jb
mov
lock
mull
ds
movsl
mov
cmpsl
ja
inc
xchg
sbb
mov
jnp
adc
jnp
cwtl
and
mov
push
xchg
sub
mov
stc
adc
adc
jle
fwait
mov
pop
jno
mov
stos
dec
rcpps
pop
fisubl
imul
testb
push
inc
jmp
push
mov
std
lock
outsl
shl
lcall
sbb
imul
jo
imul
jmp
dec
repnz
inc
jmp
cmp
out
or
mov
test
and
outsl
xor
or
mov
push
jge
sub
push
test
insl
clc
clc
fisttpll
dec
dec
and
call
cwtl
pushf
stc
call
test
test
outsl
mov
dec
scas
sbb
inc
jge
pop
and
jne
and
xor
aas
cmp
and
xlat
aad
cmp
loop
mov
cli
mov
mov
mov
jmp
jecxz
pop
ljmp
adc
jbe
rclb
xor
inc
das
orl
mov
scas
push
movl
mov
clc
test
outsl
jp
dec
divb
popf
aam
cli
test
push
shlb
sbb
adc
mov
test
clc
jne
jge
add
inc
jne
jo
into
mov
int3
inc
mov
das
cmp
jne
int
es
jno
or
mov
icebp
jge
xor
dec
dec
and
mov
std
shr
rcrl
cmp
sbb
lret
aas
rcrl
sub
outsb
cmp
cwtl
push
mov
fistps
lret
js
std
fiadds
sub
jno
mov
or
push
pop
and
push
xor
enter
test
mov
push
dec
dec
inc
push
ljmp
pop
xchg
imul
push
test
pop
and
dec
dec
scas
mov
sar
add
ss
ret
add
rorb
cmc
popf
xchg
imul
add
jle
xor
in
xchg
fwait
adc
xchg
sbb
test
dec
nop
stc
xchg
mov
lods
cwtl
adc
xchg
dec
push
fimuls
xchg
je
addr16
adc
or
jp
push
insb
jns
cmpsl
imul
stos
std
xor
adc
pop
add
pop
push
push
aaa
and
and
inc
adc
leave
jmp
cmp
out
dec
pop
or
inc
cmp
imul
cmp
sbbb
xchg
insl
jl
xor
adc
sbb
enter
and
and
insl
mov
sbb
out
fbstp
cwtl
out
mov
inc
cmp
pop
cs
mov
inc
or
div
dec
and
xorb
outsl
mov
add
sub
leave
mov
in
outsb
insb
adc
clc
mov
xor
inc
insl
xorl
and
popa
jp
push
bound
xchg
mov
pop
leave
mov
fisttpll
xchg
scas
adc
aam
xchg
fistpll
das
inc
or
add
sbb
push
shlb
push
loop
adc
push
insl
sahf
push
mov
pop
movsb
rorb
ja
repnz
jne
fcompl
je
fnstsw
jge
mov
jl
fstl
fldenv
xor
and
sub
data16
push
cmp
rcll
mov
adc
pop
mov
push
lods
dec
xchg
sbb
sub
jno
lret
sub
add
insl
fs
jmp
dec
sub
cltd
mov
ret
fistl
xor
subl
add
adc
xchg
rcll
and
scas
stc
lret
arpl
push
cmc
lcall
subl
popf
sbb
lcall
sahf
jne
dec
xor
in
out
hlt
adc
sbb
test
xor
shlb
inc
mov
add
cmp
dec
sub
inc
xchg
xchg
faddp
xchg
out
arpl
flds
mov
mov
sti
out
sbb
mov
cli
popf
xlat
rorl
push
mov
pop
or
inc
pop
addr16
xchg
xchg
iret
out
fldcw
cmovae
xchg
repnz
stos
imul
mov
mov
mov
lret
pop
adc
mov
jae
and
movsl
or
add
push
xor
sar
aaa
dec
mov
sub
xchg
pusha
inc
add
sbb
xor
mov
in
roll
mov
push
fiadds
pop
inc
data16
lods
into
out
insb
or
imul
xchg
push
scas
outsb
pop
dec
enter
dec
mov
rcrl
in
xor
push
sbb
das
popf
in
lock
sbb
loope
sarb
lods
std
push
es
leave
lahf
jge
movsl
jmp
mov
and
add
fisttpl
adc
hlt
insl
pop
js
scas
adc
nop
lcall
xchg
sbb
movsl
and
push
cmp
inc
jno
mov
or
test
xor
mov
mov
xor
xchg
dec
xor
loopne
add
aam
decb
add
push
adc
xlat
cmp
inc
mov
cld
push
dec
jae
push
sub
loop
test
data16
inc
pop
inc
lea
movsb
pushf
cmp
int
pop
sbb
in
jp
xchg
ljmp
xchg
cwtl
ds
sbb
scas
ja
push
mov
mov
lods
cmp
jo
mov
fmull
jp
pop
xchg
xchg
shlb
jne
shrb
roll
shrb
xchg
pop
in
mov
mov
lcall
inc
stc
mov
aaa
mov
loope
movsb
jnp
push
add
cmpsb
adc
out
sbb
in
sub
pop
ljmp
sub
cmpsl
push
mov
jo
and
xor
sbb
fwait
mov
push
mov
xlat
lahf
hlt
push
loope
dec
filds
jnp
mov
cli
int3
xor
jmp
notb
mov
jmp
dec
cs
pop
lods
into
mov
pop
xor
pop
mov
sbb
aad
ss
mov
divl
jecxz
loop
gs
out
sbb
aad
lock
and
push
lcall
adc
cmp
lcall
or
cld
fs
add
and
mov
pop
and
pop
in
adc
inc
in
cmp
mov
mov
lahf
push
test
push
mov
ljmp
inc
movsl
sbb
fistpl
sbb
in
rcll
sbb
xchg
fwait
cmp
lret
pop
test
lcall
add
mov
inc
push
ret
dec
rcrb
or
cmp
dec
jno
je
sar
xor
js
adc
inc
outsl
cmp
add
mov
dec
movl
cmp
lods
aad
mov
test
inc
lods
mov
adc
mov
mov
pop
mov
insb
fisttps
out
add
and
adc
cli
cmpsl
push
push
xor
cs
jne
shrl
xor
cld
into
imul
adc
inc
push
movsb
mov
add
loop
dec
adc
lods
imul
enter
cmpsl
ret
jae
mov
inc
dec
jns
jnp
mov
push
rcrl
xchg
nop
xor
dec
xchg
fs
or
addsd
jae
adc
std
jp
jne
push
pop
push
test
ret
call
adc
dec
imul
fs
ret
jmp
sbb
inc
out
sub
mov
pop
mov
dec
push
adc
std
jle
mov
mov
lret
jbe
cmp
int3
ror
xlat
push
push
mov
and
add
fdivr
scas
mov
or
inc
and
pusha
and
lret
jg
popa
ret
aaa
call
xchg
clc
cmp
aad
aaa
pop
push
push
in
sub
cmp
les
jp
jbe
scas
je
jb
jecxz
into
iret
pop
push
dec
fisubrl
imull
inc
mov
popl
add
xchg
out
jge
xlat
jecxz
inc
pop
pslld
out
xchg
inc
push
jp
movsl
out
stos
cmp
lcall
leave
or
dec
lea
dec
push
in
repz
jae
popf
repz
test
push
dec
cmp
lock
sahf
or
adc
mov
add
sbb
out
js
jns
xchg
rolb
aaa
fmul
pop
xchg
and
pop
or
xor
pop
ss
sbb
sbb
ror
lods
sub
xor
orl
into
aas
lock
cmp
sti
fsubs
data16
push
loopne
add
cld
shlb
mov
cli
ds
mov
mov
in
jae
mov
sti
inc
dec
mov
mov
dec
jo
jne
fiadds
mov
out
pusha
jb
loop
insl
andb
repz
add
jmp
adc
lcall
sub
push
int
movsb
mov
sub
fnstsw
leave
aad
lds
mov
jp,pn
mov
mov
push
xor
pop
add
jnp
out
cli
jo
fstpt
arpl
push
dec
jl
mov
push
imul
mov
outsl
std
dec
jl
pop
jge
mov
inc
xor
mov
inc
push
sbb
jmp
lcall
cwtl
inc
mov
sub
mov
jmp
mov
mov
fnstsw
jle
testb
loopne
mov
xor
insb
mov
mov
and
fcoml
xchg
mov
dec
adc
je
and
lods
sbb
sbb
sub
loopne
xlat
fisubrl
sbbl
stc
shlb
orb
dec
add
push
mov
push
push
xor
test
adcl
int3
icebp
dec
nop
adc
adc
dec
pop
inc
or
pop
fisubl
arpl
cwtl
or
lods
aam
sarl
lods
stc
jl
cmp
sub
lock
pop
daa
pop
xchg
nop
test
aad
add
stos
inc
push
mov
mov
rcrb
xchg
or
shll
not
fildl
and
push
xor
fisubrl
push
cwtl
xor
xor
clc
cltd
repz
and
sarb
add
loope
pop
jmp
popa
ss
dec
pop
push
shlb
jmp
pop
fists
xchg
insb
jg
sub
pop
pop
cltd
ljmp
movsb
push
lahf
mov
imul
test
call
gs
enter
neg
mov
jl
xor
push
push
in
and
and
outsl
aad
lock
sahf
testl
add
mov
adc
movsb
lock
lcall
sub
push
or
mov
mov
mov
xchg
sub
mov
cmc
arpl
fs
sub
js
cli
stos
dec
dec
movsb
je
dec
aam
insb
lcall
inc
sub
ret
lret
mov
or
mov
sub
inc
ret
popa
mov
add
mov
sub
leave
int3
xor
aam
push
push
test
test
fs
jl
xchg
pop
sub
mov
sbb
lahf
lea
sti
cmp
negb
jns
fmull
xor
fstl
icebp
ljmp
xchg
das
cwtl
je
push
dec
and
arpl
mov
xor
pop
outsl
add
pop
lret
rorl
lcall
pushf
and
imul
into
xor
int3
push
push
out
pop
pop
ja
jns
inc
or
sub
mov
ret
loopne
idivb
sbb
shlb
xor
scas
out
adc
xor
adc
lret
fcoms
pop
cwtl
pop
mov
idivl
or
movsb
cltd
adc
fstp
fs
pop
test
out
loop
jne
mov
jmp
out
adc
add
pusha
bound
ret
nop
sub
adc
or
fs
fwait
push
and
js
out
mov
fiaddl
dec
push
pop
push
fistpl
jne
dec
push
lret
sub
jle
inc
lods
inc
fcmovnb
pop
sub
dec
push
ds
xchg
mov
movsb
out
mov
jb
stc
ljmp
imul
test
loop
push
add
jmp
arpl
adc
pop
icebp
icebp
leave
jno
addr16
sbbl
and
test
and
sahf
push
rcll
shlb
mov
jl
les
fisttps
addl
iret
add
in
mov
xor
cmpsl
insb
pop
sub
fsubs
xchg
xchg
pop
or
cwtl
cmp
or
fwait
cmp
pop
or
mov
push
imul
mov
outsb
cmp
push
jb
dec
fidivrs
jl
ja
jo
or
sub
ret
dec
jmp
inc
xor
fs
addr16
pop
out
inc
push
ret
cmc
pop
jle,pn
ror
push
insb
ret
mov
fstps
mov
lret
and
cmpsl
xor
inc
add
stc
es
std
ljmp
out
dec
cmp
cwtl
pop
mov
xchg
test
hlt
add
or
fadd
call
mov
mov
movsl
xchg
insb
or
movsb
ja
or
add
xor
rolb
inc
nop
mov
in
aaa
inc
fcompl
clc
hlt
sbb
mov
lods
testb
xchg
cmp
cltd
dec
int
jno
insb
push
fs
sub
adc
adc
shrb
dec
lods
cli
jle
pop
aam
mov
fstl
sbb
negb
xor
xchg
and
movsl
inc
in
iret
inc
dec
or
lods
mov
inc
cmp
test
gs
ret
test
xor
leave
mov
xor
sub
mov
inc
outsb
test
xor
jmp
pop
push
mov
test
test
mov
mov
data16
dec
arpl
jb
mov
stc
shl
shrb
loop
dec
mov
aad
sbb
dec
shrl
add
xor
inc
fisttpll
jbe
shlb
xor
jno
ljmp
cli
bound
int3
fimull
test
push
adc
sahf
testl
rcr
dec
jl
sub
inc
stos
lcall
out
insb
jge
lock
shlb
push
aad
aaa
fisttps
mov
push
jns
ret
repz
or
imul
mov
mov
sub
lods
xor
mov
gs
xchg
adc
dec
mov
add
jo
cli
das
int3
popa
xlat
push
xchg
scas
les
outsb
jge
cld
push
adc
push
or
cmp
in
dec
jmp
movsl
add
pop
sub
cmp
dec
test
dec
aam
subb
inc
stos
jle
sbb
ss
js
fcompl
pop
test
rcr
inc
sbb
aad
aas
push
es
adcl
testl
sbb
leave
pop
xchg
je
xor
popf
mul
lret
addr16
in
xchg
out
cmc
enter
inc
xor
loop
sti
insl
das
loopne
mov
int3
call
sub
arpl
hlt
arpl
icebp
fst
adc
push
pop
adc
gs
sbb
loope
les
jp
cmpsl
and
addr16
cmc
mov
or
imul
mov
loope
adc
lods
pop
jae
adc
pop
cmp
mov
and
sub
dec
sub
mov
int3
and
faddl
std
xchg
add
and
outsb
adc
pop
in
add
sbb
push
or
mov
in
pop
and
mov
pushf
sbb
aad
ds
cli
cmp
mov
or
inc
mov
enter
cmpsb
in
bound
in
fdivrl
pop
mov
mov
es
lahf
cwtl
fmulp
mov
sub
mov
dec
ljmp
scas
test
and
sbb
ret
xchg
cmpsb
mov
xlat
imul
ret
xor
in
orb
jb
xor
je
xchg
push
fistpll
ret
scas
imul
xor
inc
add
pop
repz
inc
insl
jg
adc
pop
icebp
push
sahf
pop
and
jne
data16
movsl
mov
fwait
cld
ljmp
jg
scas
adc
cmp
push
adc
call
cmc
fisubl
xor
imul
add
jnp
fildl
out
dec
loop
ljmp
shlb
hlt
inc
popf
and
push
scas
mov
call
hlt
or
dec
sbb
xchg
push
movsb
mov
fdivrl
inc
and
dec
mov
xor
jns
inc
lret
push
jg
push
js
cmp
fstpl
cli
xchg
mov
je
int3
andb
and
ja
mov
jb
fwait
repz
lds
shll
shrb
je
mov
mov
xchg
jbe
xor
mov
sahf
gs
ja
push
adc
sarb
out
push
dec
testl
lods
add
adc
fnstenv
xchg
push
mov
jne
or
daa
mov
movsl
pop
inc
decb
nop
mov
sbb
xchg
cs
sbb
add
or
xor
pushf
sub
int3
mov
and
ss
jge
int
or
imul
call
icebp
pop
mov
inc
icebp
inc
enter
sbb
mov
mov
ja
pop
aam
loopne
sbb
jp
rclb
dec
mov
std
repz
das
mov
nop
or
icebp
fbstp
pop
adc
cmc
fwait
lcall
pop
jp
add
cld
xchg
ss
pop
push
cld
sbb
jecxz
jle
xchg
sti
outsb
loop
or
movsl
mov
push
arpl
imul
pop
push
cmp
int3
push
cmp
fisubrl
addr16
pushf
fists
inc
test
lret
repnz
mov
push
mov
dec
inc
lods
mov
cmp
mov
push
frstor
mov
in
adc
xchg
movb
add
push
aaa
dec
xorl
bound
popf
cmp
lods
dec
jmp
scas
int3
lea
dec
pop
mov
push
xlat
cltd
and
jbe
cmpsb
sbb
lock
sub
cmp
lods
mov
das
inc
daa
and
sbb
repnz
cmp
mov
aas
les
movsl
dec
in
mov
insl
add
sbb
mov
mov
push
aaa
mov
inc
in
movl
movl
jmp
sahf
aas
mov
je
movsb
dec
sbb
mov
jnp
cwtl
jnp
add
insl
push
sbb
jns
fmul
and
popa
cmp
sub
cmpsl
xor
imul
dec
cmp
stos
inc
out
jmp
pop
xchg
xchg
bound
fsts
pop
or
in
push
sub
stos
mov
clc
push
daa
scas
int3
adc
repnz
iret
cmc
ret
mov
mov
call
xor
pusha
push
das
repz
test
sbb
les
leave
mov
sub
adc
hlt
jne
inc
in
shrb
movsb
dec
push
jb
addb
push
inc
mov
inc
push
inc
xchg
cmp
push
jmp
adc
mov
cmp
bound
xchg
push
pop
or
mov
sub
sbb
lret
fwait
inc
testb
xor
xchg
sti
stc
lods
jno
in
lock
leave
fwait
dec
xlat
pop
lods
or
movl
dec
sub
mov
pop
insl
mov
leave
int3
mov
or
cli
hlt
popf
xor
xor
pop
int
pop
adcb
or
cltd
xor
mov
mov
adcl
fsubrs
sub
outsb
fimuls
inc
addl
push
repnz
mov
lock
sti
inc
push
adc
std
mov
cltd
cmp
dec
icebp
leave
pop
enter
pop
push
mov
mov
aad
mov
cli
jne
ficoml
icebp
out
and
xor
push
cld
sti
fwait
and
int3
inc
push
imul
imul
lcall
jnp
imull
or
mov
std
mov
mov
out
movsl
mov
and
lret
jns
mov
sti
xor
enter
rorb
mov
fstpl
pop
mov
leave
je
cmp
jno
xchg
out
inc
ja
push
pushf
out
arpl
jb
in
mov
push
cmp
in
push
push
mov
je
mov
xlat
es
sbb
or
sub
es
lret
addl
ds
push
int3
push
jp
shrl
adc
mov
into
hlt
cmpsb
add
cwtl
xorl
std
mov
mov
adc
sbb
dec
pop
adc
xchg
cs
lcall
mov
loope
mov
push
and
sub
xchg
sbb
dec
lahf
popf
push
lcall
and
mov
xlat
sbb
inc
test
scas
loope
mov
dec
sbb
or
pop
js
in
sarb
lcall
daa
push
pop
pop
inc
test
fst
jl
sbb
lret
mov
lahf
in
mov
rcrb
int3
xchg
dec
les
sub
jl
lret
rcrb
ja
outsl
stc
std
in
mov
xchg
sahf
sti
ljmp
jle
and
jecxz
cmpsb
int
lods
js
pop
sarl
inc
mov
push
jbe
xchg
fcomi
sahf
int3
imulb
repnz
adc
push
jns
mov
dec
xchg
aas
in
cwtl
arpl
xchg
pop
jg
leave
int
inc
pop
cmc
mov
or
movsb
ficompl
jo
mov
add
push
mov
cs
and
sub
dec
and
mov
jns
sub
cmc
cs
and
mov
mov
adc
pop
fcmovnbe
pop
mov
stc
mov
icebp
lahf
aaa
in
sbb
mov
jb
xor
cmp
stc
popa
popa
lods
push
xchg
or
decl
dec
lret
shll
cmpsl
pop
mov
mov
and
or
pop
push
push
div
mov
loopne
mov
sub
xor
lods
mov
stos
and
icebp
xchg
loope
add
cmp
loope
mov
das
adc
add
std
enter
sbb
int3
lods
out
loop
push
jb
push
scas
inc
xor
mov
lds
dec
ret
fucomp
mov
mov
push
cli
mov
cli
sub
shlb
mov
jle
cmpsl
roll
in
jne,pt
dec
int3
push
pop
loope
inc
jae
bound
cmp
int
pushf
sbb
ds
cmp
rolb
mov
subb
lahf
xor
rcrb
and
daa
cmp
cmp
lret
jb
pop
mov
ljmp
cmp
shrl
dec
sti
and
or
in
aaa
clc
mov
cmp
in
idivb
icebp
fpatan
cmc
pop
sub
jg,pn
push
ds
mov
mov
mov
daa
pop
mov
ds
inc
and
movsb
xor
and
sbb
mov
jnp
fldt
dec
jge
mov
nop
insl
add
xchg
push
int
sarb
lahf
test
mov
ret
adc
adc
addr16
ret
ss
add
shrb
ret
jno
dec
enter
pop
push
cld
push
jl
add
xor
out
push
or
pop
xchg
stc
pop
icebp
insb
xor
cmc
pop
insb
or
sbb
mov
test
cmp
fsubs
std
dec
lods
lods
push
jb
sarb
in
lahf
dec
jb
bound
test
inc
push
dec
data16
jmp
mov
mov
movsl
pop
sti
cwtl
test
or
mov
pop
ss
fnstsw
jmp
push
pop
pushf
jbe
cmp
mov
add
xchg
clc
push
xor
cli
call
pop
inc
clc
int3
ja
sahf
push
dec
aam
and
sbb
rcrl
and
cmpsb
pop
popf
dec
cmpsl
rcrb
or
adc
lahf
dec
stos
dec
add
and
enter
not
add
hlt
lret
nop
pop
sbb
jecxz
dec
jnp
decb
mov
push
mov
and
fwait
mull
and
push
and
or
lea
xchg
stos
cs
add
jbe
mov
and
sub
dec
insb
pushf
push
rolb
out
leave
arpl
loopne
aas
or
repnz
mov
jl
dec
mov
and
sbb
jl
lock
jb
mov
clc
fdivr
iret
mov
dec
push
negl
add
mov
test
mov
stos
and
mov
push
mov
cld
lret
in
aas
repnz
aaa
sbb
cmpsl
icebp
push
xor
rclb
mov
mov
lods
in
jg
nop
cmp
outsl
cld
dec
jo
mov
jmp
adc
fwait
es
lret
repz
sub
mov
sahf
idivl
hlt
adc
push
cmp
movl
cs
stc
fwait
or
int
popl
aam
mov
jl
cmp
lock
ds
cmp
sbb
std
icebp
add
cmp
cltd
int3
mov
out
or
inc
clc
jae
fdivr
add
js
and
fstl
push
inc
push
imul
lock
ret
enter
mov
or
fwait
xchg
push
jl
hlt
lock
repnz
lcall
js
mov
mov
inc
cmp
cmp
aaa
pop
or
sub
sbb
mov
test
ret
iret
pextrw
xchg
push
xor
and
mov
outsl
mov
cltd
inc
popf
mov
jmp
xor
in
repnz
test
mov
sub
lea
sahf
push
mov
jnp
negl
movsl
out
stos
ret
imul
cmpsb
popf
sbb
sub
lret
sub
cmpsl
xchg
or
fninit
lds
ljmp
or
dec
or
jnp
js
mov
and
cmc
loop
test
and
seto
das
mov
ss
sub
outsb
pusha
mov
dec
xchg
mov
dec
push
adc
inc
js
clc
inc
jbe
icebp
test
daa
push
adc
addl
jb
pop
jnp
repnz
lahf
std
sbb
imul
sub
testb
xchg
bndstx
out
xchg
xor
mov
jmp
adc
xchg
xlat
sbb
cmp
dec
and
shrl
or
dec
add
iret
or
jmp
xor
out
les
hlt
add
xchg
mov
outsb
cltd
in
bound
mov
ljmp
negl
rcl
mov
jle
mov
std
outsl
ds
divl
cwtl
mov
repz
lahf
sub
out
loope
and
add
sbb
mov
js
dec
jns
jmp
stos
mov
push
lock
pop
insl
mov
add
gs
xor
mov
pushf
lahf
int
scas
or
fs
outsb
mov
jmp
mov
push
pop
loopne
es
int3
sub
test
ljmp
cmp
push
sbb
test
cmp
cmp
sti
lahf
push
test
mov
inc
sbb
repz
push
add
inc
test
popa
mov
in
mov
les
test
repz
cmp
out
xor
adc
jne
cmp
sbb
add
mov
ret
sbb
arpl
sahf
xchg
cltd
xor
inc
dec
sarb
dec
lds
xor
es
outsl
fcoms
or
adc
lds
movsb
and
xor
mov
lahf
lea
push
pushf
fstpt
sub
sbb
andl
lret
fidivl
daa
loop
mov
mov
add
sub
jle
loope
rcrl
cs
insb
pushf
icebp
shl
jns
lahf
pop
sub
push
das
sub
insl
push
cmp
jb
dec
add
mov
pop
int3
addr16
iret
movsl
inc
call
push
outsb
fs
mov
jne
mov
sbb
leave
mov
lods
aad
imul
and
cmp
popa
je
or
sbb
xlat
aam
ljmp
out
pusha
inc
xchg
aad
xchg
popf
dec
aad
icebp
lods
xorl
cwtl
cmp
pop
rol
mov
scas
fdivrs
loopne
cmp
mov
jmp
dec
lock
xchg
sub
std
inc
add
imul
scas
jae
fnstsw
jle
ret
out
and
lret
test
pop
or
jmp
js
pop
mov
sbbl
or
push
xor
cs
sub
bound
lret
sbbb
mov
add
bound
push
sbb
mov
xor
movb
int3
dec
roll
out
and
push
pop
pop
mov
js
or
mov
fwait
push
cmp
mov
int
mov
xchg
cmpl
mov
pop
add
in
fcmovne
fdivl
mov
add
xchg
stos
test
sub
adc
test
sub
adc
movsl
ja
movsl
test
dec
out
or
test
adc
je
in
or
gs
loope
dec
adc
jo
fsts
xor
jne
adc
addr16
rcll
hlt
xchg
adc
cli
outsb
and
mov
or
mov
in
dec
ret
aam
aam
dec
test
rclb
cmp
imul
sahf
subl
nop
out
mov
sub
jne
aas
dec
and
xchg
dec
stos
pop
repnz
jle
xor
imul
or
jecxz
xchg
sub
orb
sbb
and
ss
in
xor
cmp
test
jnp
push
and
popa
mov
cs
cwtl
and
cmpsb
inc
mov
add
push
push
cmp
cmp
fwait
int
add
or
aam
ss
in
jae
mov
test
mov
ja
in
lods
pusha
fildl
scas
pop
mov
dec
cmp
push
addb
add
ret
loop
pop
test
test
xchg
dec
adc
jmp
lock
push
les
pop
fcomi
mov
cmp
xchg
lods
in
jge
vhaddpd
repz
adc
xchg
pop
jns
pop
shll
loop
sub
jl
mov
push
cli
jno
repnz
addr16
jecxz
lods
pop
push
inc
cwtl
pop
pop
cwtl
mov
pop
mov
jns
fs
mov
rorb
xor
xchg
xlat
mov
push
cmp
cmpsl
pop
fisttpll
mov
xchg
dec
int3
hlt
fsubs
lds
add
dec
xchg
clc
addr16
test
sbb
add
mov
mov
push
jno
xchg
xor
stos
mov
cli
sub
sete
cmp
jnp
push
or
xor
loope
mov
mov
mov
cmpsl
arpl
ljmp
and
xchg
daa
inc
ret
and
jbe
aaa
inc
sbb
adc
adc
icebp
sbbb
pop
lods
data16
repz
pusha
xchg
jmp
dec
dec
jns
repz
push
insl
dec
out
daa
sbb
xchg
xlat
cmp
mov
je
fwait
test
loope
mov
pusha
pop
xchg
outsb
ss
inc
out
xchg
cli
dec
nop
xchg
cmc
push
cmp
add
xor
adc
pop
cwtl
in
aad
mov
sub
pusha
mov
cld
les
ja
insl
fisubl
clc
cmc
movsb
movsl
arpl
out
inc
add
jecxz
add
pop
and
aas
outsb
cmp
push
pop
sub
mov
inc
inc
shrl
mov
jp
stc
mov
sbb
xchg
sbb
cs
insb
or
out
int
mov
cmpsl
mov
sbb
cmc
jge
out
repz
enter
daa
shlb
je
dec
shlb
loopne
sbb
and
inc
push
xlat
push
movl
cmp
test
xor
stos
nop
test
scas
add
js,pn
push
fwait
jbe
loopne
lahf
mov
mov
inc
shlb
inc
cmpsl
mov
and
jge
mov
lahf
lds
lods
mov
ret
add
lret
add
mov
test
nop
mov
and
cltd
pop
xchg
add
or
push
adc
jae
xor
movsb
dec
xor
cld
iret
das
sti
and
pop
mov
cli
lock
ss
rcrb
mov
mov
cvtps2pd
mov
rolb
lahf
in
sub
pop
mov
in
sub
fst
andl
ds
mov
cmp
xor
mov
out
lods
movsl
adc
enter
sti
out
lret
jg
ja
or
xor
icebp
mov
lahf
mov
push
les
cmp
dec
mov
lret
or
sahf
out
mov
movsb
clc
decb
nop
fdivrp
sub
xchg
xchg
cmp
negl
repz
aad
and
in
aaa
jae
mov
dec
inc
jmp
orl
adc
mov
dec
dec
inc
imul
scas
mov
fldl
mov
ss
bound
add
sub
mov
rorb
pop
pop
test
dec
cmp
and
dec
sub
mov
dec
push
icebp
adc
movsl
or
in
outsl
fcmovnbe
es
cmp
scas
mov
push
cmpsb
sbb
leave
lret
ret
nop
out
adc
push
sarb
sub
test
jmp
pop
sub
pop
outsb
push
inc
cmp
int
sbb
lea
dec
shll
in
in
out
aas
fsubrs
push
nop
insl
mov
mov
ret
test
or
dec
loopne
cwtl
sbb
or
loope
jmp
fistpll
cmp
and
push
sbb
inc
test
sbb
cmp
adc
jg
iret
call
and
xchg
or
mov
dec
cmpsb
dec
in
sub
test
pop
xor
mov
or
aad
test
out
mov
cmp
data16
roll
cmp
pop
scas
push
cmp
dec
cmp
test
or
jmp
jo
pushf
mov
std
addl
mov
sbb
popa
push
cmp
adc
push
in
lods
and
and
sub
mov
rclb
adcb
hlt
bound
dec
adc
or
cmp
or
enter
mov
in
out
add
lahf
mov
ss
pop
das
outsl
adc
call
and
adc
pusha
dec
nop
gs
xchg
inc
call
add
aaa
cmp
int
cmc
paddw
ja
pop
fisubrs
cmp
dec
repnz
add
cmpsl
out
cmp
dec
mov
sub
mov
int
sub
inc
rcl
ret
xchg
dec
inc
jb
lret
mov
stos
mov
cltd
jle
push
inc
mov
mov
aam
out
fwait
push
mov
outsl
push
test
mov
in
loop
sti
add
inc
inc
out
sbb
mov
icebp
test
cmp
outsb
jp
iret
fxch
fcomip
sbb
push
mov
jecxz
rcr
notb
push
mov
sti
mov
adc
xchg
sbb
pusha
popa
aam
mov
xor
sub
out
mov
dec
cli
pusha
sub
xlat
in
pushf
hlt
popf
lret
inc
negl
sub
pop
mov
jae
pop
adc
dec
mov
data16
or
xor
mov
loopne
add
or
cmpsb
jno
mov
data16
inc
dec
add
popa
inc
stos
dec
sub
icebp
jbe
mov
jo
inc
xlat
xor
outsl
and
mov
stos
scas
dec
inc
push
inc
and
lods
xchg
sahf
movsl
mov
cmp
add
add
sahf
out
popa
clc
stos
jnp
cmc
shrl
cmpsb
fidivrs
jo
cld
lahf
outsb
dec
xor
cmp
cmc
aam
inc
xor
scas
inc
and
xor
fcoml
ficompl
test
fidivrs
cmp
mov
pop
cmpb
addr16
inc
adc
fidivl
xor
push
ljmp
inc
sub
scas
xlat
jp
test
inc
icebp
adc
loop
in
ds
mov
fidivs
test
xor
push
repnz
lret
mov
or
or
or
cmp
mov
outsl
gs
push
inc
sbb
mov
pop
dec
add
imul
pop
std
cmpb
clc
inc
ret
mov
dec
mov
data16
mov
push
inc
sbb
orb
inc
lds
lds
les
cmp
or
aas
pop
icebp
mov
fs
mov
in
add
outsl
xor
sub
xchg
mov
pop
lock
jecxz
hlt
xchg
jb
nop
addl
dec
nop
mov
push
lock
mov
xlat
mov
into
imul
push
es
push
dec
xor
jg
mov
icebp
xchg
aaa
rorl
xchg
mov
mov
sbb
push
bound
and
aaa
mov
sub
movsb
fcoml
push
insl
shl
mov
outsb
add
push
inc
mov
xchg
and
cmp
rolb
stos
into
lret
inc
cwtl
mov
insl
movsb
test
mulb
pop
aam
insb
xchg
lock
mov
pop
insl
jg
jge
ljmp
je
push
lock
sub
jne
mov
subb
jp
cmp
out
shll
shrb
mov
sbb
mov
sub
repz
cld
mov
repnz
mov
mov
pop
or
pop
icebp
enter
cmp
or
push
xchg
push
pop
js
shll
dec
dec
cmpsl
mov
pop
out
imul
xor
mov
pop
ljmp
call
mov
xor
cmpxchg
jmp
movsl
cmp
hlt
cmp
sub
dec
xlat
xor
enter
inc
inc
cmpsb
pop
push
cmpsb
mov
xor
bound
sub
fwait
out
cmp
adc
xlat
out
or
cmpsb
lret
clc
ds
lcall
xor
in
movsb
outsb
push
adc
das
js
mov
addr16
sbb
jo
adc
test
bound
mov
lret
xchg
mov
cmp
cmpsb
pushf
xchg
pop
cmp
cmpsb
fdivrs
cltd
sub
adc
adc
mov
dec
xchg
mov
shlb
mov
cmp
inc
mov
ds
inc
ds
xlat
lahf
dec
inc
jle
jle
sub
xlat
arpl
jns
xchg
jo
jb
fdivs
xchg
xbegin
xor
sub
xchg
rcl
xor
lretw
arpl
loop
jp
iret
leave
jne
sbb
in
cmc
mov
mov
jbe
mov
mov
aas
and
movsl
mov
inc
jno
xchg
inc
mov
adc
fstl
and
ret
add
jle
sub
and
shrb
pop
jp
sbbb
in
add
xchg
pop
lcall
jge
lret
aas
push
cmpsb
mov
repnz
xor
mov
mov
mov
movsb
sahf
stos
add
outsb
jmp
or
and
outsb
scas
push
mov
push
mov
mov
cmpsb
and
fmuls
cmp
inc
std
inc
inc
mov
jns
fisttps
push
dec
outsl
push
inc
sbb
sub
xor
lret
shlb
sub
sub
movsl
sbb
pop
outsb
pop
jecxz
and
shl
test
data16
int3
jge
mov
or
rclb
push
dec
cs
addb
lods
dec
adc
hlt
call
jne
sti
jne
rcrl
sbb
cmc
movb
and
outsl
mov
insl
mov
xchg
insb
fldl
push
shlb
popa
stos
andl
sahf
cltd
add
dec
mov
cmpl
cmp
xchg
or
inc
nop
xchg
cwtl
sti
fnstenv
push
les
rcpps
mov
cltd
mov
or
xacquire
mov
sbb
out
cltd
das
adc
push
jnp
test
jbe
mov
adc
dec
aam
or
pop
add
sub
cmp
imul
notl
pop
pop
rol
subb
push
pusha
jb
daa
xchg
fildl
out
jp
pop
jb
lret
out
push
dec
aas
es
cmp
rol
lahf
cmp
sub
push
mov
aaa
filds
mov
subb
cmp
ficoms
pop
data16
xor
cmc
flds
inc
inc
stos
mov
mov
jo
adc
call
mov
sbb
add
sbb
adc
xlat
sub
mov
pop
adc
sti
js
loope
mov
cli
mov
pop
mov
stos
xchg
dec
rcl
xor
sbb
data16
insb
jbe
cmp
dec
push
inc
lret
fisubs
std
sbb
pop
mov
sbb
ss
repz
adc
cmpsb
jae
or
jne
mov
rep
cmp
or
mov
and
and
mov
mov
mov
push
inc
mov
adc
jbe
popa
push
les
lahf
shlb
jmp
cmp
rcrl
mov
fwait
xchg
jnp
pop
cli
pop
test
cmpsb
inc
cmp
mov
jno
insl
test
icebp
sti
sub
iret
inc
add
sbb
fisttps
loop
push
nop
mov
cwtl
pop
insl
or
lods
clc
add
adc
pop
inc
mov
and
repz
or
jns
addr16
jmp
pop
out
and
into
ja
in
cwtl
mov
add
cmp
sub
dec
sub
ret
stos
jg
popf
jmp
push
and
push
jo
xor
jmp
jle
iret
clc
aad
pop
hlt
jge
cld
sbb
push
and
mov
sbb
iret
mov
jecxz
sub
xor
cs
loop
ds
sbb
shll
aam
push
and
shlb
push
dec
pushl
ja
push
sbb
ja
and
ljmp
or
daa
in
in
push
int3
in
hlt
sti
lret
add
xchg
lods
dec
stc
cmp
in
add
jmp
mov
xchg
adc
repz
adc
mov
mov
dec
pop
mov
fidivl
mov
add
in
mov
and
movsb
cwtl
add
outsl
jge
mov
and
dec
pop
enter
dec
out
sbb
mov
loop
aam
repz
rolb
outsb
fs
mov
sub
jl
jnp
inc
push
mov
jp
rol
dec
xchg
jnp
jnp
scas
js
pop
jg
xchg
jge
inc
sub
and
cmp
mov
lds
popa
icebp
mov
mov
repz
dec
bound
xchg
sbb
fwait
mov
pop
xlat
mov
xor
pop
mov
clc
mov
ss
adc
push
std
mov
popf
aaa
adc
jp
sbb
dec
aam
or
ret
xchg
lods
out
push
or
test
inc
push
lret
adc
aad
xchg
and
enter
out
fwait
imul
xchg
call
inc
outsl
stos
repz
and
cs
push
fadd
jno
aas
add
push
decb
fcmovnu
jnp
test
dec
adc
pop
pusha
lea
andl
or
test
dec
or
or
and
fldcw
enter
xchg
bound
inc
vpshlw
xchg
mov
sbb
in
ja
mov
mov
xchg
fisttpl
jmp
iret
int3
nop
xlat
jo
jmp
data16
xchg
xor
mov
dec
jnp
xor
daa
mov
pop
cmp
and
bound
jns
loopne
pop
lcall
push
ret
and
lods
or
lods
jnp
xor
cmp
add
jno
xchg
inc
push
inc
mov
insb
stos
or
aam
jmp
test
out
jns
mov
es
push
mov
test
in
or
jp
fistpl
inc
repnz
mov
cmp
call
iret
mov
xchg
pushf
mov
cmpsb
mov
inc
das
xchg
push
pop
cmp
movsb
jmp
mov
out
xor
jp
scas
jnp
push
fstl
or
daa
cmp
call
add
pop
mov
jp
into
jge
cmp
mov
mov
fisttpl
dec
icebp
fidivrl
sbb
push
stc
ja
lea
mov
stos
das
les
int3
xchg
jp
mov
jmp
pushf
repnz
aad
jl
or
mov
in
idiv
jp
sbbl
lock
ja
sbb
pop
rcrb
add
jle
cmp
mov
loop
mov
dec
xor
mov
shrl
pop
inc
inc
gs
lds
add
xor
sub
std
lcall
push
aaa
inc
sbb
pop
jbe
dec
xchg
push
mov
ret
jb,pt
pop
test
fcmove
sub
jbe
mov
cmpb
int
inc
sub
lahf
pop
arpl
fstpt
mov
sbb
repnz
and
inc
sub
shll
and
enter
sbb
sarb
push
pop
ret
cmpsl
lods
mov
jno
jo
push
enter
fwait
dec
push
xor
pop
fldcw
dec
cs
aaa
inc
and
jns
and
mov
lea
hlt
xchg
imul
or
xor
jmp
jl
mov
push
mov
xor
lock
sub
mov
inc
jnp,pt
add
cmpsl
lea
pop
rcll
pop
icebp
enter
xchg
sar
dec
mov
dec
inc
mov
imul
or
scas
sub
mov
push
mov
enter
or
lcall
sub
scas
add
in
xor
pop
je
pop
dec
int
mov
or
xchg
clc
push
push
dec
fwait
inc
es
fnstcw
fmuls
mov
aas
push
xor
mov
aas
lds
hlt
mov
add
faddl
leave
sbb
sbb
xchg
fnstsw
outsl
jbe
insb
idivb
add
fcom
ret
push
cwtl
inc
xchg
flds
out
jns
hlt
cld
leave
dec
movsl
sti
fsubrl
je
xor
fsts
pushf
pusha
xor
int
in
ficoms
sti
or
aam
jo
add
push
into
jmp
jo
push
dec
insb
xlat
mov
lods
cmc
out
sti
lods
gs
lret
enter
cli
cmp
aas
adc
sbb
dec
je
movsl
out
out
add
xchg
cld
cli
inc
push
outsb
pop
pop
ret
jg
mov
inc
fmul
vxorpd
repz
mov
std
inc
jo
js
out
nop
ret
sbb
cmpsl
sub
clc
scas
inc
insb
out
das
inc
fsub
push
push
int3
pop
pop
ret
xchg
clc
in
mov
add
adcl
lea
adc
jle
jmp
sub
mov
adc
and
outsl
cld
out
jg
cwtl
clc
sub
bound
test
addr16
call
push
ljmp
mov
and
cwtl
lret
pop
sub
and
in
popa
push
cltd
arpl
aaa
mov
mov
out
cmp
or
rclb
push
sbb
pop
ds
xchg
scas
jl
loop
or
enter
or
inc
int
ret
push
gs
inc
lcall
adc
outsb
enter
std
movsl
in
jns
adc
sbb
mov
mov
mov
insl
pop
mov
jg
imul
and
xor
mov
outsl
lcall
aam
adc
out
aaa
xchg
push
scas
pop
mov
sbbl
sbb
dec
jmp
mov
sbb
and
jg
aas
push
in
cli
sar
and
pop
mov
lods
jae
ftst
int
das
fisttps
mov
xchg
neg
xor
out
xor
int
divb
ficomps
or
outsl
or
ss
push
daa
icebp
push
and
stos
and
scas
push
rorl
mov
sub
dec
test
xchg
jb
arpl
daa
push
mov
xor
filds
push
jmp
lock
gs
inc
loopne
stc
sub
or
and
mov
lcall
in
xchg
pop
cmpsb
bound
sub
inc
es
cmp
jg
hlt
out
sbb
xor
popf
loope
pop
int
aam
stos
inc
leave
out
jle
pop
test
xor
pop
sbb
sbb
push
shl
stc
ss
jb
jp
pop
in
pop
and
repnz
movsb
subl
add
jne
outsl
dec
lea
clc
cs
mov
gs
inc
test
adc
pop
incl
insl
adc
call
popf
test
dec
pop
shll
push
out
call
das
test
cmpl
aam
ret
cmp
cmp
cmpsb
lods
fsubrs
mov
jb
movsb
cmp
adc
ficoml
loop
imul
testb
xlat
hlt
gs
xlat
es
insb
rclb
xchg
rolb
add
cmpl
in
pushl
mov
mov
pushl
pushl
pushl
pushl
mov
pushl
push
push
call
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jb
jmp
push
pushl
push
push
call
mov
dec
mov
jmp
movl
xor
lea
andl
mov
adc
movl
lea
xor
mov
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
push
pushl
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jl
jmp
push
pushl
call
xor
add
dec
mov
jmp
mov
andl
push
adcl
xor
subl
push
add
push
mov
xor
mov
mov
movl
cmpl
je
cmpl
jle
jmp
push
call
mov
dec
mov
jmp
mov
add
mov
sub
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
jmp
cmp
xor
insl
or
dec
xor
jp
xlat
cwtl
jnp
roll
fcomi
inc
jbe
das
insl
in
inc
pop
mov
or
movsl
xchg
push
xchg
push
imul
push
call
mov
dec
outsb
mov
sbb
sub
and
mov
sub
pop
adcl
out
std
sbb
xor
insl
or
push
xor
js
jne
mov
push
mov
or
leave
insl
mov
mov
pop
inc
lea
add
sbb
and
imul
aas
sub
outsl
push
aas
or
sbb
mov
not
sub
sahf
cmp
inc
pop
inc
add
popa
lcall
int
in
das
xlat
jmp
in
mov
mov
jmp
or
mov
stos
pushw
xchg
insl
add
imull
jno
mov
test
mov
xchg
fsubl
and
jl
pop
xchg
xlat
out
fs
cld
xlat
shll
and
movsl
and
and
imul
and
popf
xchg
repz
dec
jb
adc
lret
xchg
inc
xchg
cmpl
imul
cmp
movsb
rorl
push
lret
mov
inc
ss
sbb
xchg
inc
mov
or
or
sahf
daa
mov
push
jmp
repz
das
popf
inc
cltd
into
dec
std
dec
cs
enter
mov
pushf
and
sbb
jle
je
lcall
cmc
and
es
cs
test
cwtl
rorl
mov
add
lock
bound
dec
xchg
xor
mov
cmp
add
daa
pop
pushf
inc
fnstsw
es
rolb
xor
sbb
fisttpl
jge
push
add
popf
mov
fadd
push
lock
mov
movsb
dec
add
js
dec
inc
or
insb
cld
lock
out
lret
test
mov
xor
xchg
mov
mov
je
outsl
sbb
mov
add
nop
out
pop
addr16
shll
push
cmpsl
cmp
pop
jl
pop
sub
fdivr
mov
dec
add
outsl
mov
into
sarl
call
push
nop
adcl
pop
pop
jge
add
lods
mov
sbb
cltd
in
add
push
sbb
sbb
rorl
fstps
test
outsb
mov
mov
dec
cwtl
out
jno
mov
and
or
mov
xor
nop
cli
loop
sbbl
das
pusha
cmc
and
iret
into
in
dec
loope
addr16
insl
cmp
cmp
and
mov
push
out
xchg
pop
adc
dec
cld
popa
cmpl
cwtl
xchg
push
xor
add
xchg
lahf
addb
dec
xor
js
pushf
mov
dec
imul
mov
inc
pop
sbb
repz
ficompl
sahf
add
jbe
loopne
ret
subl
outsl
mov
popa
push
in
adc
das
outsb
mov
xchg
cmp
loope
jmp
and
pop
sbb
cmp
jl
add
jl
mov
loopne
mov
add
fisubs
sbb
jo
clc
push
xchg
inc
or
fs
in
scas
fsts
cmp
cmpsb
movsl
mov
sbb
sbb
rcl
jb
mov
in
xchg
clts
and
xorl
mov
xchg
mov
sub
ret
xchg
test
and
jns
mov
jge
imul
enter
in
push
push
and
push
mov
out
lods
ret
into
dec
mov
push
jo
push
ss
adc
setp
xchg
sub
pop
jecxz
repnz
xlat
outsl
add
sub
sub
pusha
sahf
test
lds
dec
jle
imul
push
outsl
xchg
movsb
pop
lock
pusha
xor
xorb
pop
add
xchg
jle
fsubrl
fcomps
div
pavgw
sub
sub
mov
bound
jge
mov
outsl
push
cmp
mov
cmp
int
mov
adc
push
andb
sub
jge
push
push
out
inc
push
js
into
mov
xchg
adc
push
push
xchg
adcl
push
mov
rcrb
icebp
jge
mov
in
push
pushf
push
ljmp
adc
subb
fiaddl
lcall
insb
loop
sbb
or
cwtl
cmp
xchg
lods
push
jnp
adc
adc
cmc
cmp
imul
imul
pop
xor
mov
xor
cmp
stos
lcall
push
adc
xchg
push
cmp
imul
and
fildl
std
js
push
mov
sub
adc
lret
cli
scas
adcl
xchg
mov
inc
cmp
xchg
dec
es
sbb
pop
fisttps
sti
addr16
jbe
into
es
cld
pop
lods
out
dec
pop
adc
pop
xlat
push
xchg
adc
lahf
or
test
sbb
lret
cmp
js
or
movsl
jbe
fsubrs
pop
cmpsl
out
xchg
sbb
and
sti
xor
mov
les
das
xchg
sbb
adc
arpl
mov
jo
scas
pushf
cmpsl
pushf
mov
pop
add
mov
stos
dec
jne
add
mov
push
sarl
popf
inc
popf
shlb
cmc
mov
cs
aaa
jnp
testl
roll
adc
das
icebp
jb
or
mov
adc
inc
or
cmp
mov
loope
imul
inc
mov
mov
fwait
lods
mov
pushf
lea
outsl
std
mov
scas
sub
dec
mov
scas
jecxz
mov
mov
call
lret
mov
outsb
fnstsw
adc
or
pop
loop
insl
shlb
dec
add
and
pop
adc
or
xor
sub
fmul
dec
fwait
arpl
out
push
movsl
rorb
lret
shll
sbb
shrl
insb
insb
push
arpl
enter
xchg
sbb
rcll
push
hlt
cmpsl
outsb
push
out
mov
push
xor
xchg
push
cmpsb
inc
dec
or
popf
in
ja
mov
loopne
pop
scas
pop
sub
xchg
adc
sti
push
and
ffree
outsl
cltd
sti
add
push
add
dec
mov
mov
sbb
push
aad
sbb
shlb
cmp
push
or
les
repnz
icebp
mov
mov
sbb
lret
out
fimuls
sti
aas
mov
sbb
add
inc
fists
adc
call
fdivr
mov
fmull
pusha
int
push
and
jl
mov
mov
adc
mov
dec
jns
mov
add
cltd
pop
test
test
popf
aas
push
ljmp
inc
lcall
loopne
mov
movsl
adc
sub
fwait
mov
inc
stos
cmpl
mov
imul
jl
jb
sbb
inc
mov
scas
cmp
stc
out
jp
lea
repz
je
pop
mov
sbb
aam
pop
mov
aaa
pop
cmp
xchg
xor
test
repz
das
push
cmp
dec
jg
fldl
cmp
mov
push
outsb
lds
popf
xor
adc
or
nop
inc
adc
fldt
icebp
test
xor
mov
into
mov
fwait
add
push
sub
push
stc
in
clc
pushf
jbe
fwait
movsl
push
xor
sarb
cmpsb
arpl
adc
imul
jbe
cmp
mov
and
lret
inc
sub
out
pop
bound
mov
sbb
pop
cld
add
push
mov
mov
push
dec
jo
sub
aad
cld
lock
out
lods
sbb
call
fcmove
push
jnp
out
outsb
jae
and
inc
les
ljmp
incb
fwait
push
out
imul
inc
lcall
sbb
ja
jns
rcll
lcall
test
subb
push
sub
sub
jp
imul
jg
pop
aad
jmp
pop
mov
fistps
sbb
fdivrs
in
xchg
shrb
shl
jo
and
xchg
daa
outsl
xchg
stos
data16
call
cltd
cmp
int
stos
jne
outsb
push
mov
xchg
mov
add
push
mov
dec
sbb
pop
add
out
test
imul
fsts
cmpsb
fwait
cmpsb
adc
sub
mov
dec
test
loope
stc
cmpsl
mov
mov
cmp
push
cs
in
xchg
cmpsl
ret
arpl
jl
jl
or
call
stc
cmpsl
jg
dec
loope
lret
push
bound
or
jno
xor
imul
mov
pop
pop
popf
cli
push
stos
into
jne
lret
popa
test
mov
mov
in
push
ret
jb
push
cmp
fs
fsubl
fadds
dec
and
and
push
or
jle
jb
pop
cwtl
pop
inc
and
fs
sub
subl
add
mov
sbb
inc
add
insl
out
lds
mov
subb
cltd
mov
shrl
test
outsl
mov
jae
inc
xlat
clc
xchg
xchg
add
inc
dec
xor
mov
mov
leave
jl
cmp
cmpb
lods
lea
pop
andb
leave
sbb
je
ret
out
add
mov
pop
leave
xor
in
daa
mov
pusha
jo
std
xor
fsubs
into
mov
mov
jb
cmpsl
std
and
outsl
add
arpl
dec
xchg
rorl
mov
jl
sub
in
xchg
shl
push
fimull
ficomps
sti
push
in
lret
scas
mov
inc
psrad
sub
jno
add
subb
sbb
cld
push
jnp
cmpsb
mov
xchg
out
xchg
ret
push
add
nop
ret
mov
pop
sbb
in
popa
scas
jno
and
ret
jge
popf
xor
loop
push
sub
les
jl
popf
insb
jne
adc
test
mov
clc
jno
add
cmp
jg
sub
pop
sub
ss
xchg
lods
dec
mov
fmull
fsub
dec
dec
push
jl
popa
jno
imul
shll
add
cmp
dec
jb
addr16
lret
pop
xor
sahf
ret
shlb
out
mov
shrb
inc
adc
push
mov
jae
lods
test
out
ds
xorl
push
std
jmp
ja
adc
xchg
jbe
sub
xchg
or
adc
in
popf
cmc
sub
sahf
dec
mov
fbld
xor
and
stos
cli
into
stos
fisttps
ret
lds
pop
xchg
xlat
in
repz
out
arpl
divl
and
je
cwtl
dec
xor
sbb
pop
dec
ds
pop
ljmp
and
aas
sub
mov
nop
inc
and
sbb
testb
imul
push
lods
push
jns
adc
adc
hlt
sub
popf
push
out
mov
and
leave
jb
and
pop
lret
or
sahf
rclb
repz
jbe
call
cmp
inc
ret
or
sarl
cltd
cmp
jp
inc
in
mov
sbb
imul
or
dec
fistl
push
sub
retw
out
aam
scas
scas
out
pop
in
or
cmp
mov
in
lods
sahf
mov
cli
test
and
ljmp
dec
adc
pop
dec
gs
imul
sbb
mov
push
cmp
in
lret
push
pusha
jl
inc
cmp
lds
adc
aaa
dec
call
inc
test
int
push
popf
jb
mov
and
scas
aaa
shl
xchg
jne
xchg
xor
in
and
dec
inc
stos
push
mov
add
xlat
aas
inc
in
stos
stos
popa
cld
sbb
ret
jp
lcall
daa
mov
sub
dec
or
mov
lcall
cmpl
imul
mov
pusha
xor
lods
jne
jne
or
leave
popf
xor
lds
mov
pop
aas
sub
and
fisubs
in
ja
mov
adc
ds
imul
clc
out
mov
cmp
mov
popf
jns
lahf
popf
out
mov
iret
out
mov
fdivrs
xor
mov
scas
lahf
xchg
push
pop
sbb
out
pop
aas
xor
cmp
mov
in
push
imul
mov
addr16
in
add
mov
out
in
repnz
xor
pushf
xchg
sbb
push
insl
cmp
movsb
outsl
add
mov
inc
bound
fcoml
push
arpl
push
sbb
scas
fsub
outsb
int3
aad
rcrl
lret
pop
pop
hlt
xor
imul
xchg
aas
lahf
stos
addr16
xlat
jne
out
cmpsl
int
bound
jl
fs
mov
jae
and
sbb
stc
sbb
adc
sti
std
push
inc
push
or
xchg
add
or
in
push
dec
xor
dec
fidivrs
dec
cltd
add
mov
imul
inc
leave
dec
popa
rorb
mov
leave
lahf
inc
pop
sbb
fcmovne
rclb
ds
or
pop
push
jmp
xchg
dec
add
bound
pop
jle
pop
popa
and
push
xor
jg
enter
aam
out
or
int3
cmp
adc
jp
in
lcall
getsec
xchg
int
lock
in
loopne
stos
xlat
rcl
popa
in
add
mov
mov
aaa
fsubrl
cmp
fcompl
sbb
int
cmpsl
push
dec
pop
xchg
rcrl
es
les
jmp
add
adc
jb
push
fisubrs
loopne
lods
sti
dec
cld
icebp
push
sbb
xor
mov
push
pushl
and
cmp
fildll
cvtdq2ps
mov
mov
pop
sub
mov
xor
shlb
jbe
mov
ficomps
inc
in
imul
int
jecxz
popf
push
cli
pop
jg
adcl
mov
inc
cmpsb
in
adc
lods
loopne
dec
bound
sbb
add
sub
push
xchg
push
xchg
aam
out
push
cmp
adcb
mov
push
jecxz
repnz
inc
mov
adc
mov
mov
push
roll
gs
inc
leave
xchg
cmp
mov
sub
push
sub
addb
lods
cwtl
jmp
pop
icebp
or
cmp
cltd
cmc
inc
adc
pop
rorb
sub
icebp
fstpl
fldenv
ror
xchg
fiaddl
ja
or
pushf
cs
pop
or
add
adc
lods
add
hlt
adc
andb
dec
add
les
pop
add
jbe
push
adcl
push
aad
das
push
inc
lods
sbb
rorl
xor
in
and
popf
sub
nop
dec
mov
subl
sub
jb
fwait
in
dec
push
fcmovnbe
lahf
mov
jbe
add
xchg
cmc
test
dec
pushf
test
repnz
or
pop
dec
je
fs
lock
pop
loope
outsb
lea
jge
xor
lods
add
mov
cmp
mov
sbb
in
loope
aas
adc
inc
mov
add
sahf
outsl
testl
mov
pop
mov
mov
add
pop
mov
or
sahf
das
dec
add
mov
mov
ljmp
iret
pop
pusha
adc
ljmp
ficomps
cmp
dec
aam
pop
shlb
cmp
dec
in
subb
cmp
imul
pavgb
jae
and
les
mov
add
or
mov
fwait
pop
into
and
push
adc
and
out
inc
mov
stc
pop
push
prefetchw
sub
roll
pop
shlb
out
in
xor
stc
jbe
int
stos
nop
cmp
ror
fidivl
push
aam
cld
mov
mov
sub
lods
lock
jae
leave
sub
pop
stos
fxch
or
sbb
mov
mov
lahf
push
pop
xor
ss
popf
mulps
ljmp
loop
jecxz
stos
and
lea
outsb
and
rolb
les
inc
ds
cli
hlt
cltd
negl
pop
dec
dec
popf
inc
mov
mov
sbb
mov
inc
divl
xor
cwtl
pushf
js
das
out
scas
push
dec
popf
sub
ficomps
rclb
adc
testb
out
sbb
popl
test
hlt
sbb
pop
test
scas
cmp
popf
inc
leave
or
push
xchg
push
addr16
pop
pop
jns
insl
fidivl
in
adc
mov
pop
jge
lret
out
popf
sbb
icebp
and
loopne
and
lds
xchg
dec
fs
and
adcl
cmc
fwait
dec
test
pop
movsl
out
sar
std
popa
xchg
xchg
lods
sbb
into
xchg
pop
in
adc
cmpsb
mov
or
cmovge
xor
daa
mov
lea
aad
pop
mov
lret
aas
add
mov
mov
imul
filds
loopne
mov
pop
cltd
dec
jmp
nop
sar
mov
mov
jp
jae
sbb
pop
and
add
repz
adc
and
test
cmp
cwtl
es
movsb
mov
fnsave
mov
adc
cwtl
push
loope
lock
dec
push
call
mov
sbb
and
push
lahf
nop
clc
push
jnp
leave
data16
push
outsb
pop
and
pop
pop
test
mov
xchg
pop
sub
xor
hlt
fcompl
push
xchg
outsl
xor
pop
mov
adc
sbb
mov
and
add
push
dec
fnsave
pop
aaa
cmc
mov
pusha
mov
add
test
test
mov
cmc
clc
icebp
ret
sarl
repnz
inc
enter
and
sarb
rcl
xlat
jmp
test
pop
mov
mov
mov
mov
sarl
pop
stos
mov
xlat
inc
ljmp
fs
add
cmp
sbb
xchg
pop
lar
sbb
mov
adc
jnp
pushf
mov
add
or
pop
imul
pop
jo
decl
leave
adc
in
and
ss
fists
or
cli
iret
jne
pushf
cli
aaa
bound
push
sub
xchg
scas
mov
inc
dec
push
xor
and
fs
mov
inc
xchg
sub
movsb
or
add
xlat
cmc
mov
ja
and
cld
aad
pop
dec
scas
push
icebp
sub
dec
lret
sti
popf
sub
cmpsb
or
pop
jle
mov
shlb
mov
push
mov
add
add
int
in
cmpsl
loope
test
jge
xor
inc
xchg
sbb
iret
push
jae
stc
push
cmp
sbb
cmpsb
outsb
icebp
fadds
mov
lods
sbb
fnsave
xchg
es
aas
daa
pop
xadd
les
and
aas
sbb
mov
je
ss
push
into
ja
sbb
and
push
fcmovnu
insb
sub
xor
jno
jle
dec
xor
mov
mov
and
pop
shl
cld
insb
bound
ds
jae
sub
cwtl
xor
cmpsl
sub
mov
mov
cmpsb
sub
mov
subb
mov
cmp
mov
data16
outsl
xor
arpl
jecxz
nop
pop
mov
ret
pop
or
ja
mulb
lea
mov
sti
nop
inc
mov
xor
jns
cmp
xchg
outsl
aas
sub
mov
cmp
pop
repz
xchg
iret
test
add
subl
pop
add
add
pop
cwtl
aaa
add
inc
or
sub
sbb
hlt
push
mov
inc
pop
jmp
shll
mov
cmp
popa
xor
push
rclb
fwait
push
aad
add
sbb
call
xor
icebp
out
adc
push
idivb
inc
xor
inc
xchg
jecxz
fstps
shr
test
jg
fcoml
scas
dec
scas
movsb
icebp
shll
lods
adcb
stos
sub
pop
pmuludq
imul
cli
push
mov
pushf
pop
and
add
xchg
test
sbbl
ds
rcl
fstpt
rcr
cmpsb
jno
mov
xor
pop
dec
outsl
cmp
or
xchg
les
sbb
and
jecxz
sub
pop
push
pusha
lret
notl
loope
aad
jo
mov
adc
add
dec
cld
adc
push
or
xchg
es
ret
cmp
mov
cmpl
push
bound
push
add
cmc
insl
andl
in
je
addr16
scas
icebp
addr16
out
inc
push
nop
inc
das
out
inc
shl
pop
mov
int
sbb
lret
dec
lret
loope
pop
dec
xor
imul
out
into
mov
div
cmpsb
add
in
dec
mov
mov
lahf
push
mov
lods
xor
mov
outsb
or
dec
xchg
jne
xor
xchg
jecxz
ljmp
subl
popf
daa
pop
lret
dec
add
data16
xchg
push
mov
xchg
lods
ja
pushl
leave
fucomp
push
repnz
in
lods
push
mov
jae
jnp
es
jecxz
sbbb
lods
xor
bound
repz
fwait
push
inc
mov
inc
mov
dec
sbb
into
fwait
push
shlb
cmp
pop
rcrl
rorb
inc
faddp
mov
and
test
jle
addr16
push
shrb
sub
mov
popl
dec
mov
imul
jecxz
mov
movsb
dec
out
std
stc
ud2
inc
mov
jbe
jbe
fiaddl
adc
mov
xchg
sbb
in
repz
in
xchg
xchg
popf
jbe
mov
scas
sub
dec
push
js
xchg
pusha
sti
iret
loope
jb
sbb
mov
call
sub
insl
pop
nop
adc
add
roll
inc
dec
addr16
xchg
movsb
in
mov
imul
hlt
sti
push
push
cs
decb
xor
add
std
aad
mov
out
cmc
cltd
dec
mov
ja
pusha
lret
xchg
lods
xchg
cli
jg
xchg
ds
sbb
push
aam
repnz
mov
xchg
jecxz
mov
jne
shr
dec
jo
loop
sbb
ja
mov
nop
fdivr
pop
mov
push
bound
push
add
in
sub
cmp
mov
push
arpl
lods
arpl
mov
negl
hlt
or
add
mov
jae
jae
pop
test
pusha
jge
int3
jbe
aas
fcomps
push
leave
jb
xchg
cmp
adc
sarb
ss
xchg
inc
mov
outsb
pop
and
jns
je
add
dec
mov
rorb
lock
or
cmpsl
popa
cmp
pop
sar
outsl
add
roll
ljmp
repnz
mov
call
jle
push
daa
ja
popf
xchg
fnstsw
hlt
dec
orl
notl
pop
xor
subb
or
test
mov
test
push
outsl
cli
sbb
inc
stos
in
data16
sbb
push
xlat
push
test
pop
test
xor
mov
stos
or
inc
mov
or
jecxz
push
inc
dec
push
jecxz
ljmp
cld
jns
add
dec
xor
push
lock
add
ljmp
xchg
je
dec
push
jno
rcll
xchg
repnz
sbb
enter
nop
cltd
xor
sbb
pop
sbbl
aad
mov
adc
inc
clc
push
jge
xchg
xchg
in
add
test
cmp
mov
lock
in
int3
lea
jl
adc
movb
stos
pusha
cmp
lret
cmpsb
out
insl
push
lahf
xor
sbb
arpl
jp
sub
pop
push
aad
pop
lods
jg
shr
dec
imulb
rcll
test
sub
rcrb
mov
dec
add
cli
adc
stc
and
pop
mov
xor
jle
mov
lea
fldl
xor
lods
imul
or
addr16
lods
push
mov
fidivs
pop
or
xchg
mov
xlat
leave
scas
aam
adc
or
or
shll
cmp
push
fstpt
int
or
cld
pop
cmp
mov
add
jo
fsubrs
dec
inc
dec
cwtl
mov
or
mov
jp
mov
ja
rolb
fs
sub
test
sahf
adc
xchg
idivl
aad
cmp
xor
jmp
stc
jle
dec
adc
in
and
clc
cmpsb
inc
addr16
decl
push
fcomp
add
dec
xchg
sahf
filds
icebp
inc
fildll
pop
mov
in
stos
daa
jl
nop
cmpl
mov
test
mov
jbe
cld
adc
cli
push
mov
or
push
cmpl
push
cmp
jecxz
jg
push
mov
in
aaa
pop
shlb
cmp
out
inc
je
pop
xchg
cmp
xchg
aad
addb
add
pop
sbb
mov
sub
fistpl
nop
shr
sbb
in
sbb
cwtl
ficomps
popa
xor
push
into
sbb
or
scas
xchg
sbb
dec
sub
sub
xchg
iret
in
mov
mov
add
out
pop
aaa
mov
sub
cmpsb
loop
xchg
and
push
push
sbb
aad
aad
xchg
subl
js
sub
sarl
ljmp
or
out
xchg
sub
fucomi
inc
popa
outsb
cmpsb
sbb
xchg
aad
nop
or
inc
sub
pushf
mov
ret
jne
inc
pop
xchg
inc
inc
sbb
lret
cmp
aam
outsb
jg
jns
inc
pushf
into
movb
pop
mov
movsl
addr16
test
in
mov
mov
lahf
mov
push
cld
inc
mov
inc
adc
or
jb
mov
cmc
xchg
jne
push
mov
dec
jne
das
mov
or
call
in
xor
xor
jb
mov
cmpsb
aaa
mov
cli
adc
sub
push
ret
xchg
lret
adc
lods
xor
mov
int3
int3
imul
dec
adc
stos
stos
out
or
imul
sub
cmp
test
insl
out
ds
mov
xor
jg
into
in
enter
push
bound
icebp
add
xchg
add
cld
mov
xchg
repnz
mov
popa
add
sbb
cli
aad
jp
sbb
fidivrl
or
mov
mov
lret
in
xchg
pop
pop
scas
mov
sub
repz
lret
mov
pop
push
sbb
xchg
jne
rcrb
adc
in
dec
in
dec
push
sub
mov
int
test
nop
jp
jge
test
lcall
xor
dec
push
out
push
mov
repnz
jno
add
iret
mov
test
cmp
mov
push
lods
jb
sub
add
movsb
sbb
out
xor
add
rorb
push
pop
pop
add
or
outsl
mov
jle
jle
test
mov
leave
or
xor
cmpsb
or
test
mov
pop
in
lcall
in
inc
jl
pop
das
in
mov
jno
inc
mov
fstl
push
fisubl
sbb
inc
inc
and
out
repnz
inc
and
aas
xor
in
out
and
in
mov
xchg
in
fsub
imul
xchg
cmp
sahf
in
test
out
mov
mov
push
adc
cmp
and
inc
shrb
cmp
push
mov
test
and
mov
xor
ficoml
sub
inc
incl
addr16
inc
dec
jno
add
pop
btc
je
or
jl
pop
xlat
mov
sbb
mov
shll
jmp
and
push
inc
scas
fisttps
inc
daa
mov
dec
movsb
test
test
pop
adc
sub
dec
ja
lret
rcll
or
repz
sahf
and
add
mov
loopne
mov
insl
in
test
sbb
js
push
xchg
mov
cwtl
lret
xchg
negb
cmp
sub
mov
enter
scas
or
mov
mov
leave
cmp
int
mov
dec
lods
jno
lea
sub
icebp
lahf
push
mov
test
les
clc
push
xchg
ss
mov
pop
sbb
clc
int3
idiv
stc
insl
scas
out
lds
xchg
sbb
add
sub
pop
cmpb
xor
lock
test
dec
ss
ficoms
mov
mov
jge
jmp
xchg
ljmp
fildll
call
cmp
xor
mov
sbb
and
test
imul
or
dec
cltd
lcall
pop
das
fs
mov
jp
repz
jae
fucompp
nop
mov
xor
cmc
sub
js
push
sub
xchg
sub
jbe
jle
and
jns
adc
ficomps
push
dec
xor
jp
out
push
dec
add
or
daa
pusha
movsb
jae
and
inc
push
and
cmpsl
add
pushf
ja
repnz
inc
inc
subl
lret
jo
adc
dec
lods
fcoml
std
pop
pop
and
cmp
push
push
out
arpl
stos
dec
and
insb
popa
fs
cmp
push
and
sbb
sarl
adc
mov
out
ret
jle
pusha
add
loop
clc
adc
insl
insl
aas
into
sub
xchg
in
sbb
sub
add
les
sub
stos
push
fsub
out
data16
or
bound
je
jp
lods
lahf
loope
cli
dec
jecxz
jmpw
sub
xchg
data16
push
jae
add
jmp
jbe
pop
push
pop
xchg
dec
jmp
push
shr
and
mov
push
ret
arpl
aad
and
rcll
mov
aad
or
inc
dec
or
orb
mov
ss
movsb
std
loop
lret
lret
sub
xor
adc
sbb
imul
icebp
xlat
xorl
mov
inc
or
mov
dec
push
pop
dec
rcrl
inc
pop
ja
mov
cmp
add
test
clc
pop
clc
rol
xchg
adc
fmuls
mov
loop
sub
std
mov
jmp
aam
scas
scas
stc
dec
in
leave
daa
sub
cmp
shrl
sbb
test
xchg
sarl
loope
xchg
dec
cmp
leave
lcall
call
mov
push
pop
mov
inc
xlat
rolb
mov
adc
lret
js
and
cmpsb
push
push
add
test
jecxz
mov
sbbb
lea
mov
sbb
mov
sub
mov
xor
add
movl
cmp
movl
jne
movl
jmp
dec
cmc
pushf
adc
je
mov
popf
push
xchg
sbb
xchg
jnp
dec
or
cmp
sbb
test
frstor
or
xor
das
add
dec
mov
loopne
addl
jge
pop
idivb
in
fnsave
push
xchg
cld
ds
insb
xor
xchg
aad
dec
cmp
into
test
shll
int3
lahf
mov
cltd
stos
cmc
mov
in
bound
inc
addr16
sub
enter
push
outsb
std
mov
lods
mov
call
inc
mov
test
cmp
mov
cwtl
mov
outsb
aam
xlat
dec
loop
divb
jle
sbb
cli
cltd
adc
mov
xor
icebp
or
enter
mov
mov
push
cltd
jne
fimuls
adc
adc
dec
adc
mov
or
jg
inc
in
mov
adcl
out
jae
push
mov
jb
xor
sub
mov
cmp
push
or
fisubrs
lds
adc
dec
or
repz
push
fdivs
mov
sub
mov
mov
bound
out
shlb
aaa
test
movsb
aam
push
lds
add
or
pop
xor
movsl
mov
mov
push
or
outsl
test
ljmp
jnp
pop
lods
add
shl
jbe
cld
repz
and
add
int3
jne
mov
xor
stc
adc
xchg
push
and
outsl
test
nop
add
push
jbe
pop
pop
pop
mov
leave
cli
ret
jecxz
push
shll
jns
pop
pop
and
sarb
icebp
enter
in
das
mov
add
outsl
sbb
insb
or
jb
aad
repnz
loope
mov
test
loopne
aaa
jecxz
std
int3
inc
inc
popa
decl
jecxz
dec
xchg
and
lahf
stc
sub
pop
repz
scas
and
and
xor
jnp
mov
stc
aas
xor
fwait
enter
xchg
pop
and
sub
jg
and
cmc
jno
loope
add
and
or
inc
jns
xchg
ror
sti
cmpsb
mov
addb
lret
incb
outsl
cmc
bound
jl
mov
adc
pop
aad
pop
push
cli
sub
sbb
lods
roll
push
lret
loope
sbb
jmp
cmp
lret
pop
loop
nop
adcb
xchg
call
xorb
jae
jae
mov
sub
scas
pop
pop
xchg
lcall
sub
pusha
cld
loope
adc
inc
cmp
ss
adc
adc
dec
mov
push
inc
push
cmp
pop
filds
or
insl
stos
lahf
negb
push
int3
xor
ret
jl
sub
push
imul
dec
jl
aas
inc
insb
lcall
sbb
in
pop
lods
or
sbb
cmc
lods
or
lcall
fsubs
xor
imul
test
cmpsb
rcl
inc
dec
pop
incb
lret
inc
pop
xor
cld
mov
dec
aaa
push
sbb
sti
xchg
outsb
cld
xor
pop
mov
sub
clc
dec
imul
cmp
jo
mov
jg
jecxz
push
lds
cmpb
or
xor
adc
pushf
sub
jmp
ds
cmp
pusha
addr16
dec
pop
ror
and
xor
test
adc
sar
xchg
lock
pusha
imul
or
jae
ljmp
add
pop
sti
rcr
mov
mov
sub
cmp
add
out
mov
inc
in
mov
aaa
mov
sbb
sahf
cmc
lods
in
mov
add
xor
push
mov
scas
xor
aas
daa
scas
shll
icebp
mov
mov
fcoml
sbb
fsubl
std
cmp
ljmp
dec
jmp
hlt
mov
mov
inc
inc
adc
out
xor
rorb
xchg
cmp
mov
ret
mov
lcall
mov
and
je
insb
ss
rcrb
je
out
mov
repz
ss
jmp
xlat
mov
xchg
negl
dec
fnsave
daa
sbb
cmp
xor
dec
xor
das
pop
and
sub
xor
jge
push
adc
stos
out
xchg
xchg
dec
aaa
jmp
sub
mov
pop
add
aam
pop
test
ret
aaa
push
enter
jne
push
aad
cmp
jmp
aad
hlt
pop
fs
mov
push
stos
xchg
imull
sbb
ficompl
xchg
dec
loopne
jg
repz
aaa
push
jge
mov
imul
mov
lret
xor
clc
pop
push
lock
js
mov
clc
push
sbb
daa
pop
call
fisttpll
loopne
cltd
and
jo
in
sbb
jp
mov
and
xchg
sub
adc
shll
insb
arpl
js
ficoms
mov
dec
add
xchg
fiadds
lret
xchg
cmp
negb
lret
out
loopne
daa
movsl
xchg
addl
mov
mov
jo
sub
jb
lea
xor
leave
pop
into
sti
data16
adc
cmp
scas
xchg
pop
adc
je
movsb
ja
sub
and
mul
sbb
flds
mov
dec
mov
mov
lods
out
daa
enter
pop
faddl
mov
mov
cmpsb
jbe
fnstcw
std
cmpsb
xor
fwait
cmp
mov
mov
mov
and
and
cmp
outsb
sbb
stos
ja
add
jo
xor
aam
adc
mov
addr16
cmp
ret
and
sbb
jae
or
sbb
test
outsl
jecxz
and
jge
sub
or
je
loop
jno
idivl
enter
or
sbb
mov
arpl
xchg
aam
movsb
into
adc
mov
jg
aaa
nop
fidivrs
pop
or
mov
mov
arpl
inc
nop
pop
add
dec
lock
pusha
loop
out
push
xor
in
shll
aas
stc
dec
jns
add
or
stos
sbb
out
jmp
mov
add
mov
out
pop
xor
jae
jle
les
cmp
inc
pop
std
scas
lods
int3
pushl
adc
stos
jmp
pop
lds
outsb
fbstp
shlb
scas
mov
aas
je
jnp
xchg
mov
leave
cwtl
and
loopne
mov
mov
jg
dec
dec
dec
ja
add
iret
je
jg
push
xchg
add
jne
and
dec
jle
or
xchg
and
xor
push
mov
jns
add
inc
ljmp
cwtl
cs
xchg
lcall
inc
std
out
fistpll
add
fsubl
and
pusha
sub
jbe
push
das
pop
gs
and
cli
adc
and
adc
sub
sub
mov
shrb
adc
xor
dec
mov
adc
les
sahf
lods
jmp
xor
cmpsb
rcll
fisttpl
xchg
lods
add
mov
mov
aas
pop
push
add
rclb
sbb
lods
cmp
xor
xchg
jmp
cmp
sub
fcomps
pop
push
mov
sbb
je
push
inc
out
fcmovnbe
and
call
out
add
loop
pop
sbb
int
out
clc
pusha
cld
test
mov
and
add
inc
pushf
lcall
or
int3
in
xchg
shrl
jno
xchg
sbb
shrb
pop
fadds
xchg
pop
sub
out
mul
dec
inc
and
lahf
shl
lcall
les
cld
adc
xchg
in
add
adc
mov
mov
nop
lahf
pop
das
lcall
sub
adc
inc
adc
pop
and
push
hlt
shrb
adc
add
mov
add
mov
mov
adc
adc
pop
imul
or
xchg
stos
popa
xchg
fbld
add
or
test
enter
push
and
jns
je
mov
ficompl
dec
push
mov
mov
xor
shr
stos
in
repz
aam
jecxz
xchg
inc
int3
mov
mov
sbbb
fdivr
out
aad
jmp
out
pop
pop
mov
dec
movb
add
bound
xchg
mov
xor
stos
pop
sbb
pop
add
cmpsl
pop
jbe
push
xchg
ret
stos
jns
mov
jge
xchg
and
xor
ret
cs
iret
dec
cmpsl
in
add
adc
pop
cli
sbb
std
mov
lcall
or
pushl
in
or
movsb
add
mov
shl
insb
adc
addr16
rolb
outsl
mov
and
das
lret
fnsave
scas
test
push
xchg
ret
and
push
add
sub
sbb
mov
xor
inc
sti
push
mov
push
aad
sahf
mov
jno
add
pop
ja
scas
mov
or
sbb
or
loope
mov
dec
xchg
fiadds
cmpsl
sti
push
aas
shl
mov
sub
dec
dec
cmp
push
mov
sbb
imul
xchg
pop
push
dec
xor
lods
ja
or
cli
jno
inc
push
jge
mov
fwait
xor
xchg
cltd
pop
adc
dec
cmc
cmp
push
xor
jb
or
add
loope
mov
xchg
pop
addl
test
sbb
into
mov
loop
ljmp
shl
repnz
fwait
adc
rcrb
pop
cmp
movsl
adc
mov
push
pop
mov
cld
and
int
sti
lds
icebp
repnz
lods
xor
ret
jecxz
inc
inc
add
cmp
cmpsl
test
jbe
jl
mov
pusha
call
add
fldenv
mov
out
cmp
push
bound
sti
jmp
sbb
push
mov
cs
mov
dec
rcrl
pop
dec
mov
push
xor
insl
jnp
dec
cmp
test
inc
inc
js
push
mov
xchg
cmc
adcb
movl
push
aam
fs
fiadds
push
push
cld
xchg
adc
jl
mov
sbb
sub
adc
je
lods
shll
lahf
test
pop
subl
cmp
and
repnz
push
insb
sahf
stc
ret
mov
outsb
jmp
repz
pop
mov
add
daa
mov
jl
adc
dec
sti
ljmp
imul
ja
frstor
stos
jbe
test
pop
add
xor
insb
mov
adc
push
std
and
dec
loope
push
sub
cmp
leave
add
sti
mov
mov
dec
sti
xor
mov
lahf
mov
inc
jl
pop
xor
jae
mov
or
lret
cltd
pop
lahf
xor
cmp
pop
and
and
mov
pushf
ja
test
int3
jecxz
mov
jmp
push
inc
insl
cmp
sub
inc
xchg
pop
xor
mov
test
cmp
push
aam
mov
jge
stos
imul
push
xor
mov
cmpsl
pop
pop
xor
sub
pop
mov
mov
mov
xchg
jns
xor
push
dec
outsb
mov
push
mov
out
in
outsb
fildll
lret
leave
mov
pop
mov
sbb
outsb
cmp
pop
fsqrt
or
jbe
pop
mov
cld
stos
loop
sub
sbb
push
ret
call
pop
adc
sbb
outsb
adc
daa
mov
sbb
lahf
mulw
push
stos
pop
sub
cmpsl
pop
and
jns
sarl
pop
in
pop
mov
das
fdivrl
push
enter
std
jp
out
scas
xchg
popf
push
jbe
test
hlt
leave
ret
xadd
add
in
andb
mov
inc
push
mov
jo
jl
xchg
rorl
inc
mov
mov
lcall
dec
jmp
inc
lods
stc
ja
sub
push
mov
out
sub
sti
fdiv
jl,pn
bound
ficoml
xorl
stos
push
loop
push
out
dec
mov
cmpsl
push
pop
outsb
rcpps
nop
adc
sbb
push
ja
mov
push
sub
test
movsb
int3
fidivl
dec
lea
fisttpll
fistpll
and
fcoml
pop
cmp
out
fisttps
mov
add
in
xchg
xchg
jl
add
mov
fdivrl
idiv
test
push
addr16
jno
ret
xor
mov
push
dec
imul
test
lock
push
dec
sub
movsb
emms
dec
xchg
jg
in
int
stos
popf
lret
ja
adc
and
rcll
sbb
lahf
add
sbb
mov
mov
cwtl
sbb
enter
lods
rcrb
jno
pop
push
pop
pop
mov
rcrb
leave
leave
jecxz
ret
cli
icebp
ret
iret
cmc
xor
mov
mov
popa
mov
mov
pop
in
fdivp
mov
shl
mov
push
push
dec
mov
pop
pop
pop
jo
add
lds
pop
jp
xor
ljmp
jl
aaa
rcl
inc
adcl
test
mov
xchg
xor
cld
cmp
lock
pop
xchg
mov
inc
out
stos
loop
and
and
pop
fldt
xor
push
xlat
loop
mov
dec
addr16
negl
aas
pop
jecxz
mov
inc
imul
lret
pop
or
out
sub
mov
jge
mov
ret
mov
in
mov
in
jno
push
sahf
dec
lea
xor
dec
popa
ljmp
jp
bndstx
stos
pop
pop
mov
jbe
icebp
jnp
ss
xor
stos
mov
ret
push
cmp
push
push
test
dec
push
call
cmc
popa
push
idivb
int3
scas
xchg
sbb
aaa
leave
xchg
jl
mov
mov
and
jmp
mov
push
dec
lret
clc
data16
adc
ret
sbb
subb
inc
and
lahf
shll
cmc
and
pop
mov
mov
testl
sub
ds
mov
jo
mov
mov
int3
repz
sub
mov
mov
outsb
lods
sahf
dec
push
cmc
int3
jl
cmp
inc
or
decl
sbb
repnz
pushl
push
sti
cmpsb
xchg
rclb
sarb
daa
or
das
or
push
mov
mov
icebp
mov
fwait
push
jmp
push
jns
inc
rol
sub
push
test
shll
call
popf
xlat
into
cmp
xor
das
sub
imul
add
sahf
pop
fwait
sahf
lds
cltd
bound
pop
xor
jo
in
int
cmp
jno
ljmp
out
cmp
mov
push
aaa
icebp
stc
inc
mov
cmc
push
nop
decl
inc
xchg
push
cmc
xchg
popa
xchg
xor
arpl
sbb
cmp
sub
loope
insl
cmp
repz
movsb
push
mov
rorl
out
dec
orb
loopne
lock
je
mov
pop
or
sbb
shl
xlat
xchg
xchg
out
mov
mov
stos
inc
sub
dec
inc
or
sub
mov
pop
jge
les
xor
jl
pop
pop
std
xor
sbb
out
sub
jns
ds
decb
dec
mov
rcll
mov
sbb
pop
jne
and
pushf
pop
mov
popa
pop
fs
and
pop
into
adc
outsb
xlat
and
jmp
outsb
and
mov
mov
inc
lret
jb
xchg
jae
pushl
dec
jge
mov
add
adc
lods
rcll
rcll
add
xchg
add
jmp
pop
sbb
lock
jg
mov
scas
mov
push
mov
dec
sbb
xor
jo
mov
fmull
data16
mov
sti
dec
icebp
movsl
mov
xchg
pop
arpl
push
push
sub
bound
cmp
mov
push
pop
mov
mov
sahf
fcmovnbe
and
add
jo
xchg
pop
ret
sbb
push
adc
or
outsb
or
mov
aas
cli
pop
daa
cmp
fimuls
fadds
adc
sbb
or
sub
cmp
popa
jne
adc
into
imul
mov
scas
jmp
cmpsb
popf
inc
scas
jb
popf
nop
inc
shlb
call
sub
mov
mov
pop
fwait
pop
ud0
add
popf
lods
dec
fsub
sub
in
push
jge
add
ja
xor
sbb
sbb
das
or
test
fildl
fidivrl
add
mov
std
inc
push
fldl
or
loop
imulb
or
cmp
test
pop
adc
hlt
inc
mov
in
popfw
sbb
lods
mov
add
sbb
cmc
mov
jecxz
sub
cwtl
add
push
adc
inc
inc
sbb
jecxz
pushf
mov
call
xor
rorb
dec
lret
sbb
aad
cmpsb
cmp
outsl
pushf
cli
test
aas
pop
insb
into
movsb
inc
push
xchg
pop
jnp
dec
adc
mov
in
mov
sbb
daa
nop
mov
jecxz
mov
cmp
lahf
mov
sub
xchg
cs
insl
adc
pop
stos
ds
mov
xlat
addr16
xlat
mov
jecxz
pusha
call
rcrl
mov
push
sar
sbb
jge
stos
push
in
or
pop
xor
mov
out
fwait
out
adc
mov
lds
into
lahf
mov
dec
lods
jmp
xchg
popl
jne
cmp
imul
mov
incb
push
pop
and
or
jmp
cmp
mov
pop
cltd
jb
mov
repz
das
insb
cmp
and
sahf
insb
push
push
sub
cmpsb
fnstenv
in
cwtl
dec
ljmp
mov
orl
scas
cmpl
mov
push
xor
fwait
push
popf
aam
jmp
and
sub
push
dec
mov
dec
adc
lods
sub
jnp
fsubs
push
jns
jmp
mov
jno
mov
cmpsb
xchg
shl
cmp
pop
jae
push
les
inc
mov
inc
cmp
test
xor
add
scas
mov
adc
cmp
in
xchg
sub
adc
hlt
mov
test
mov
loopw
add
push
push
in
lds
jns
mov
sub
and
mov
vpxor
push
sbb
dec
push
test
pop
add
movsb
data16
popa
pop
rcr
lea
fadds
adc
cmpl
mov
jle
movsb
xchg
sbb
cmpsb
movsb
pop
lds
xor
in
nop
pop
int
push
lcall
enter
andb
out
dec
vmovmskps
addb
dec
push
xor
or
lret
pop
dec
mov
fldcw
test
mov
add
inc
sub
xchg
daa
pop
int3
cld
inc
xchg
lcall
roll
shl
fisttpl
dec
adc
cmp
repnz
inc
test
inc
testb
jnp
lcall
push
sub
aam
cmp
mov
int
mov
dec
add
xor
jmp
and
loope
test
daa
jp
stos
adc
or
cmp
aaa
sbbl
jno
cs
fldl
mov
mov
mov
arpl
loope
or
lock
push
lahf
adc
mov
cmpsl
sub
cmp
fdivrl
inc
addr16
and
xchg
jmp
inc
sahf
dec
or
lods
jne
sbb
je
mov
imulb
mov
in
xchg
fiaddl
or
dec
pushf
push
add
adc
mov
hlt
out
cmp
testl
dec
hlt
dec
hlt
adc
xor
call
ret
divb
lds
mov
cld
dec
popf
push
lahf
pop
fldl
mov
jge
das
iret
sar
and
jmp
lcall
mov
dec
loop
pusha
lds
sbb
mov
fwait
xor
flds
mov
sbb
add
std
lods
cmp
test
and
jg
and
movsl
mov
mov
sbb
pop
jmp
imul
lea
pop
imul
enter
and
dec
pop
dec
aaa
mov
push
jmp
fcmove
jge
imul
mov
jl
ret
cmp
adcl
fstps
les
lods
aas
mov
ss
dec
xchg
xchg
outsb
pop
mov
cli
pop
xchg
adc
daa
and
out
loopne
js
repnz
jmp
jns
fidivl
cld
sbb
icebp
aad
ljmp
mov
mov
pop
pop
fdivl
fimull
lods
and
add
mov
mov
insl
mov
shll
sahf
pop
inc
pop
das
xchg
jle
dec
dec
int3
mov
lret
xchg
test
jl
xlat
xor
xor
fistpll
jmp
xchg
lret
jb
jo
loop
adc
out
out
test
mov
pop
dec
mov
add
and
sub
sub
test
mov
movzwl
mov
mov
mov
movl
cmp
jne
cmp
je
mov
xor
or
add
mov
mov
mov
or
mov
sbb
xor
xorl
add
imul
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
call
jmp
mov
xor
notl
add
movl
cmp
mov
je
mov
add
or
mov
mov
mov
xor
add
sbbl
imul
movl
mov
jmp
adc
mov
sbb
xor
mov
mov
xor
mov
sub
add
mov
mov
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
mov
xor
add
imul
mov
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
jmp
mov
xor
mov
sub
add
movl
mov
mov
movl
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
add
mov
mov
cmp
jne
mov
mov
mov
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
sub
push
addl
push
andl
push
orl
xor
addl
push
push
push
addl
push
orl
push
addl
push
orl
push
call
movl
cmp
movl
je
andl
xor
movl
jmp
subl
push
call
addl
test
movl
jne
xorl
push
call
adcl
test
movl
jne
movl
mov
or
mov
xor
movl
mov
and
lea
mov
movzwl
xor
lea
movl
cmpl
je
cmpl
ja
jmp
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
add
mov
sbb
xor
mov
add
mov
mov
mov
mov
cmp
jne
sbb
mov
neg
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
call
jmp
xor
notl
mov
subl
add
xorl
mov
sub
mov
mov
mov
xor
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
adc
add
and
mov
mov
mov
and
mov
movzwl
or
mov
andl
xor
movl
add
movl
mov
jmp
sbb
mov
add
mov
add
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jb
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jl
jmp
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzwl
sub
mov
and
mov
mov
mov
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
push
push
pushl
push
call
mov
dec
mov
jmp
movl
xor
or
and
mov
mov
mov
and
mov
orl
mov
movl
mov
mov
addl
mov
xor
add
jmp
dec
mov
mov
or
mov
xor
lea
mov
adc
mov
push
mov
add
mov
xor
sbbl
lea
push
sbb
mov
sbbl
pushl
call
or
mov
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
call
cmpl
jb
mov
xor
lea
mov
or
mov
and
mov
or
mov
mov
movl
xor
xor
add
xor
or
mov
add
mov
add
mov
sbbl
xor
lea
movl
cmp
jbe
sbb
mov
mov
xor
subl
add
jmp
mov
mov
mov
xor
lea
push
mov
mov
xor
lea
push
mov
pushl
call
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
xor
xor
add
mov
mov
xor
lea
cmp
jbe
mov
mov
xor
add
jmp
mov
mov
mov
xor
lea
push
mov
mov
xor
lea
push
mov
pushl
call
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
xor
xor
add
mov
mov
xor
lea
cmp
jbe
mov
mov
sub
mov
xor
mov
lea
mov
lea
mov
mov
xor
add
xor
add
mov
adc
mov
xor
xor
cmp
jne
cmp
je
mov
mov
cltd
add
adc
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
mov
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
jmp
mov
xor
add
adc
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
xor
add
push
push
pushl
pushl
pushl
pushl
call
pushl
pushl
pushl
pushl
call
mov
mov
xor
add
mov
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
xor
xor
add
adc
xor
cmp
jne
cmp
je
movl
movl
movl
movl
call
mov
lea
push
pushl
pushl
pushl
pushl
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
sbbl
mov
and
mov
mov
sbb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
movzbl
and
mov
orl
mov
orl
mov
movl
cmpl
je
cmpl
jb
jmp
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
adcl
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
call
xor
or
dec
mov
jmp
mov
adcl
xor
push
andl
mov
inc
mov
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
subl
add
push
mov
movl
adc
xor
orl
xor
movl
push
mov
notl
movl
movzwl
movl
mov
mov
cmp
movl
jne
cmp
je
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
andl
xor
add
notl
adc
mov
sbbl
mov
negl
xor
notl
xor
movl
mov
cmp
movl
jne
movl
cmp
movl
je
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
xor
add
mov
mov
add
mov
mov
orl
mov
mov
mov
add
push
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
pop
xorl
sub
add
movzbl
xor
mov
mov
add
movl
xor
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
mov
xor
sbb
add
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
lea
add
mov
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
add
sbb
mov
movl
lea
push
mov
xor
or
sub
add
mov
mov
sbb
mov
mov
andl
xor
mov
add
xorl
push
push
addl
pushl
xorl
call
dec
mov
and
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
lea
not
xor
mov
mov
movl
mov
movl
cmp
jne
xor
movl
jmp
movl
cmpl
je
cmpl
jle
jmp
push
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
movl
movl
adcl
mov
neg
movl
dec
movl
adc
mov
adcl
mov
addl
xor
subl
sub
sub
mov
movl
movl
mov
mov
cmp
movl
je
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzbl
xor
mov
subl
xor
xor
adcl
lea
mov
xorl
xor
adcl
div
mov
mov
sub
add
mov
xor
mov
adcl
xor
xor
andl
sub
movl
cmp
movl
jne
mov
or
mov
or
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
mov
andl
xor
andl
xor
movl
add
sbbl
add
movl
mov
movl
cmp
jae
lea
neg
mov
incl
mov
xor
add
movl
lea
mov
mov
mov
cmp
movl
jbe
adcl
addl
jmp
decl
addl
mov
adcl
xor
inc
incl
subl
add
cmp
movl
jb
mov
add
mov
mov
add
xor
movl
cmpl
je
cmpl
jge
jmp
push
push
call
mov
dec
mov
jmp
add
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
movl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
addl
sub
sbbl
xor
movl
cmp
movl
jne
sbb
mov
add
mov
xorl
xor
xor
subl
sub
mov
movl
sub
subl
xor
xorl
mov
mov
xor
xorl
sub
orl
sub
movl
jmp
mov
or
mov
xor
mov
orl
sub
add
mov
mov
movl
cmp
movl
jne
mov
or
mov
mov
subl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
add
mov
movl
movl
mov
mov
xor
sub
sub
mov
movl
mov
cmp
je
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
mov
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
movl
mov
dec
and
mov
mov
movl
movl
mov
movl
movl
mov
mov
xor
sub
sub
mov
movl
mov
cmp
je
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
mov
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
mov
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
mov
mov
xor
lea
lea
xor
mov
cmp
jne
decl
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jle
jmp
push
push
push
pushl
call
mov
dec
mov
jmp
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
push
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
mov
mov
mov
movsbl
cltd
add
adc
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
jmp
mov
mov
xor
add
jmp
mov
mov
xor
add
pop
leave
ret
push
mov
sub
subl
movl
mov
mov
mov
and
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
adc
mov
push
mov
adc
mov
movzbl
or
mov
mov
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
add
add
imul
push
mov
mov
cmp
je
movl
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
mov
xor
add
mov
imul
add
mov
mov
jmp
mov
mov
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
add
add
add
add
add
dec
add
add
add
push
push
inc
push
inc
add
jns
gs
xchg
add
xor
inc
cmp
insb
insb
outsl
pop
dec
outsb
jae
jb
pop
inc
popa
je
pop
inc
imul
add
push
mov
add
cld
push
add
add
add
add
add
add
add
call
push
add
clc
push
add
pop
pop
add
push
pop
add
or
add
ss
add
add
add
push
arpl
outsb
inc
popa
je
cs
add
gs
gs
popa
addr16
js
jb
dec
outsb
outsw
push
gs
gs
popa
addr16
js
jb
dec
outsb
outsw
inc
xor
pop
push
gs
gs
popa
addr16
js
jb
dec
outsb
outsw
push
gs
gs
popa
addr16
js
jb
dec
outsb
outsw
push
gs
gs
popa
addr16
js
jb
dec
outsb
outsw
inc
xor
add
imul
add
imul
add
push
add
push
add
add
push
push
add
add
jle
add
add
add
xchg
push
add
push
add
push
add
push
add
push
add
imul
and
add
imul
inc
imul
push
imul
pusha
imul
jb
add
mov
add
add
