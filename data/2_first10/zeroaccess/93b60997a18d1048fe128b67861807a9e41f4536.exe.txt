push
mov
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
push
andl
xor
or
inc
mov
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
push
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
decl
add
add
mov
mov
xorl
mov
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movl
mov
xor
xor
add
or
mov
adc
mov
xorl
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
push
orl
pop
andl
sub
dec
add
movl
adcl
mov
movl
orl
mov
xorl
mov
adc
mov
andl
mov
xor
mov
adcl
xor
add
addl
mov
andl
lea
mov
add
mov
xor
subl
add
mov
incl
lea
addl
push
sub
mov
andl
xor
add
push
and
mov
subl
push
andl
pushl
call
mov
add
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
or
movl
subl
mov
sbbl
mov
sub
lea
adc
mov
inc
movl
or
mov
mov
xor
xor
sub
sub
mov
xor
xor
sub
mov
sbbl
sub
mov
movl
mov
movl
mov
movl
cmp
movl
je
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
call
jmp
mov
adcl
xor
xor
orl
lea
mov
xor
mov
xor
xorl
div
mov
sub
mov
xor
addl
xor
sub
movl
cmp
movl
jne
mov
xor
mov
mov
addl
mov
orl
xor
addl
xor
orl
add
adcl
add
mov
cmp
jae
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
lea
adcl
mov
mov
xor
addl
add
lea
movl
mov
mov
cmp
movl
jbe
addl
movl
jmp
addl
sbbl
mov
xorl
xor
xorl
inc
incl
adcl
add
cmp
jb
movl
cmpl
je
cmpl
jl
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
jmp
mov
dec
and
adc
push
pop
inc
imul
dec
pop
addl
cmp
js,pn
je
xor
dec
fsub
cld
insl
push
jb
bound
pusha
push
cmp
push
jle
lea
xor
ja
add
pop
lock
rol
lock
sub
xchg
xor
fs
flds
jo
sbb
lsl
and
jne
scas
sub
hlt
push
xor
and
test
mov
or
jecxz
imul
xchg
xor
int
rcll
push
adc
or
mov
shll
add
mov
pop
pop
add
ds
mov
in
inc
or
jmp
cmp
lods
xchg
dec
mulb
add
out
repz
xor
mov
push
inc
ds
loop
cltd
cmpsb
je
lret
xor
lods
cmp
sub
out
fstpl
jecxz
ds
sbb
and
stos
or
imul
aaa
xchg
loopne,pt
ja
cmp
push
jl
loop
fwait
repnz
lret
jmp
dec
push
aad
or
ss
cmp
ret
icebp
sbb
filds
pop
sbb
jp
pop
ss
aam
xor
gs
lret
and
es
imul
decb
mov
cmp
lcall
popa
ret
mov
or
fstpt
jb
adc
push
aam
sub
xchg
es
ret
adc
lods
add
mov
cmp
pop
jecxz
sub
int
cmpsb
call
test
inc
xlat
lods
and
mov
mov
cmp
xchg
mov
xchg
mov
push
in
daa
cs
push
out
and
xchg
insl
dec
std
or
into
dec
rcll
jb
ljmp
sub
xor
sbbb
lret
cmc
pop
enter
push
and
push
xchg
jg
adc
or
inc
sub
dec
fstpt
ret
mov
pop
dec
je
and
add
fcmovbe
mov
adc
fidivs
push
std
jae
cmp
idivl
lahf
xchg
dec
cli
adc
add
sub
roll
les
mov
sbb
mov
js
mov
out
bound
mov
es
or
sub
xchg
mov
mov
sahf
test
cwtl
clc
cmp
or
jl
jmp
push
leave
cmp
xchg
loopne
outsl
mov
es
push
sub
add
pop
sbb
in
scas
jno
push
stos
jb
jb
test
jo
inc
je
shrl
lret
test
rorl
sbb
add
das
inc
add
pop
aas
loopne
push
sarb
enter
ljmp
xchg
jmp
add
pop
jecxz
out
hlt
dec
mov
push
pushf
push
xchg
scas
rcrb
cmp
aad
add
push
in
jle
push
push
mov
negl
sahf
les
lods
ss
bound
cmp
mov
lock
imul
cli
push
lock
and
mov
mov
rcrl
push
jle
sar
lahf
cmp
xor
dec
cld
sub
out
sub
sub
mov
int
jnp
mov
dec
pushf
out
cmp
adc
jecxz
mov
mov
xor
and
test
out
decl
movsb
sbb
jbe
mov
mov
lds
insl
in
mov
mov
daa
scas
sti
cltd
jae
xor
hlt
out
ja
jge
movsb
bnd
sbb
fsubr
push
icebp
push
push
js
test
add
dec
repz
mov
mov
push
pop
xor
mov
cmc
xor
hlt
lea
les
add
adcb
push
fisubrl
inc
daa
daa
mov
sbb
inc
add
xlat
cmpsl
jmp
add
cmp
pop
arpl
or
adcl
les
js
cmc
sub
clc
in
push
or
cmp
scas
pushf
loope
pop
jle
sbb
add
add
neg
mov
imul
xchg
and
andl
lcall
push
push
dec
mov
add
adc
outsb
jae
mov
and
sub
jo
inc
add
pop
andb
xchg
sti
fldt
add
stc
jo
loope
in
gs
add
fistpll
and
fwait
mov
jb
into
int
pushf
mov
xchg
lods
xchg
mov
and
cmp
mov
sbb
xchg
sub
sub
jne
mov
pop
xchg
fstp
repnz
or
pop
dec
rcrl
jp
push
fimuls
ret
aam
xor
dec
adc
mov
mov
jle
int3
test
jbe
nop
cmp
and
nop
lock
das
stos
aam
shl
mov
jne
jmp
adc
pop
mov
push
jmp
jbe
mov
xchg
jnp
sti
push
in
in
inc
pop
fwait
or
sbb
xor
xor
incb
sub
adcb
out
inc
loop
mov
xchg
and
mov
mov
or
mov
mov
jo
fucom
inc
adc
mov
cmpsb
mov
or
adc
sbb
movsl
scas
mov
pop
inc
or
jno
jno
rcrb
adc
in
lret
add
cmp
and
jb
mov
pop
ret
and
add
and
push
jecxz
jp
inc
push
dec
push
dec
sbb
jle
mov
scas
xor
pop
sbb
sbb
js
repnz
and
sbb
mov
fldln2
cmp
jg
add
or
adc
mov
aaa
cmp
pop
cs
adc
les
shld
adc
ret
jns
data16
add
push
test
xchg
mov
mov
stos
std
in
cwtl
outsl
pop
pop
jle
push
mov
mov
pop
sub
pushf
sbb
cli
sub
cmc
mov
movsb
jbe
cmp
push
cmpb
xchg
and
cmpl
aam
sbb
pop
mov
cs
mov
mov
push
addb
and
and
out
les
jp
pop
negb
jno
add
hlt
inc
loope
inc
pop
cmp
addr16
dec
in
mov
aaa
loopne
aaa
data16
and
jnp
mov
nop
lds
shrb
add
in
shl
movsl
jl
cs
movsl
pop
mov
mull
xlat
sahf
std
lods
cmpsb
es
jbe
ret
jae,pt
add
mov
pushf
adc
pop
out
out
mov
scas
pop
cmp
fsubl
movsb
in
mov
dec
pop
mov
xchg
sub
push
cmp
adcl
mov
mov
pop
leave
push
mov
mov
mov
dec
out
mov
xchg
or
sub
adc
inc
or
sub
xchg
bound
inc
enter
fstpl
stos
add
mov
fs
cli
pop
push
add
pop
jmp
and
xchg
out
movsl
mov
add
fptan
out
orl
aas
les
and
cmpsb
dec
inc
ss
int3
out
dec
sbb
orl
push
mov
insl
in
out
lret
jg
fiadds
testl
mov
shlb
mov
aaa
sarb
jnp
mov
icebp
scas
push
lret
pop
lret
push
icebp
clc
test
or
rcrl
sbb
shr
ficoml
and
std
fwait
push
push
repz
sbb
sbb
mov
dec
das
push
or
ja
sub
push
test
in
cmc
cmp
loop
in
jecxz
insl
movsl
repnz
sbb
add
pop
in
sub
stos
pop
xchg
mov
mov
orb
cmp
jl
insb
ret
add
out
shll
and
add
dec
stc
and
xor
dec
inc
stos
pop
gs
cmpl
jno
flds
mov
push
movsl
push
popa
ss
push
sti
xor
je
ret
popa
mov
ret
add
mov
iret
pop
pop
mov
pop
jne
ss
lret
ja
mov
xchg
nopl
nop
popa
pushl
fucomp
add
or
mov
clc
sbb
je
movb
shrb
mov
dec
xchg
out
mov
jl
and
out
jnp
gs
loope
pop
cmp
add
mov
mov
mov
pusha
rolb
mulb
cmpsl
cmp
jb
add
fmuls
push
and
js
les
xchg
cli
enter
adc
pushf
mov
and
sub
mov
jns
scas
xor
add
push
sahf
repz
push
cmp
mov
cwtl
mov
cmc
addr16
lea
and
dec
sub
ja
push
int3
xor
lods
fists
push
loopne
jmp
ljmp
jge
mov
fstl
test
int
insl
pop
cmp
subb
cmc
ret
xchg
inc
adc
push
outsb
dec
stos
mov
jmp
into
mov
dec
out
lea
and
jbe
sbb
and
andb
sub
mov
cld
mov
mov
out
ss
notb
sarl
mov
out
adc
add
enter
sbb
es
ds
inc
jnp
xor
mov
ds
jge
inc
out
jecxz
push
and
js
cmp
outsl
scas
mov
repnz
loope
pop
dec
jns
xor
pop
outsl
jbe
adc
addr16
data16
xchg
xchg
push
lahf
das
popa
mov
test
cmp
mov
cli
lahf
xchg
xor
mov
shlb
mov
repnz
mov
adc
aam
jne
insl
pushf
dec
mov
repnz
adc
js
pop
or
std
cmovle
lds
xchg
sub
je
mov
xor
movsb
xchg
or
sbb
push
dec
lcall
cli
cmp
std
in
loop
jl
jb
into
mov
dec
jbe
push
mov
mov
jl
pop
stos
push
pop
add
push
xor
and
sub
lock
mov
adc
js
push
lcall
hlt
cmp
imul
out
jno
push
das
cltd
inc
repz
pop
xor
cmpsl
sbb
add
xchg
ret
lret
lret
jae
or
aas
lret
andb
mov
inc
pop
or
movsb
ret
fidivs
adcl
std
inc
dec
mov
hlt
mov
test
dec
jge
dec
push
movsb
xor
jb
nopl
out
add
mov
dec
push
pop
cmp
inc
jmp
push
cmp
rcrl
mov
fxch
dec
mov
or
adc
push
out
or
pop
mov
loop
add
xlat
or
sbb
push
movsb
icebp
cmp
out
not
adc
push
dec
push
jae
inc
insb
out
dec
aam
ret
aas
inc
mov
sub
js
mov
cld
sub
test
dec
jle
pop
in
add
std
pop
jl
add
scas
scas
dec
les
or
mov
aam
aas
xor
and
push
push
lret
mov
cmp
imul
hlt
mov
scas
jmp
inc
loopne
cmp
jno
xor
incl
fstl
and
sbb
jg
pop
lods
nopl
jp
sub
out
jg
mov
cmc
jb
pushf
xorl
cs
dec
std
in
insl
cltd
imul
mov
in
fs
adcl
dec
inc
xor
pop
push
pop
adc
push
cs
mov
xchg
lea
mov
stos
test
lods
or
loope
inc
pop
push
push
sbb
or
push
lea
jl
dec
or
aaa
outsl
or
fs
loop
xor
add
mov
stos
in
test
mov
aas
clc
add
pop
sub
cltd
push
lcall
adc
jo
pop
mov
outsb
cmpsl
cmpsl
repnz
repz
call
mov
sarb
add
mov
jns
test
xchg
sbbb
cmp
push
jecxz
or
mov
lds
int3
push
movsl
jmp
pop
jbe
and
pop
insb
mov
cmp
push
mov
jnp
mov
aam
mov
add
mov
sbb
loope
dec
addr16
or
insb
data16
repnz
pop
sub
stos
add
ds
cmp
out
push
sti
je
inc
stos
repz
sbb
cmpsl
mov
mov
pop
mov
scas
lret
pop
push
push
aam
and
rcll
hlt
add
pop
push
fisubrl
es
add
push
clc
mov
xor
xchg
jl
or
stos
cwtl
xchg
pop
inc
pushf
test
or
mov
add
adc
call
fildl
sbb
daa
lods
lcall
add
push
loop
jno
adc
ret
sbb
in
outsl
sbb
movsl
call
aas
inc
mov
pop
in
leave
stos
cs
lock
inc
cmc
dec
adc
js
lea
imul
push
adc
xor
jmp
xor
jne
xacquire
xchg
rol
fs
adc
and
popa
test
inc
loope
add
nop
fnstsw
push
mov
xlat
mov
mov
dec
ret
mov
xor
push
stc
fadds
pushf
mov
add
shlb
push
or
mov
das
out
sbb
mov
and
mov
adcb
and
lret
stos
mov
add
xchg
mov
in
rclb
sbb
xchg
push
jbe
or
sbb
fistl
lcall
data16
fidivrs
cmpsl
sarl
stos
gs
int
lret
jl
mov
inc
dec
pusha
lret
lods
scas
js
push
mov
test
sub
jle
push
rorl
add
mov
mov
xor
faddp
inc
push
dec
cmp
mov
jge
xor
pop
cmp
sti
xchg
test
lret
hlt
mov
dec
jae
dec
push
jge
in
movsb
ja
push
and
xchg
xor
xchg
and
cmp
es
xor
mov
xor
jecxz
mov
das
enter
push
cwtl
loope
mov
jns
sbb
js
push
jmp
jecxz
mov
pop
cltd
loop
adc
pop
test
and
jl
mov
cmp
add
xchg
and
push
fdivrs
pop
ja
xchg
pop
xor
adc
mov
scas
mov
mov
movsw
loopne
xchg
or
mov
adc
cmp
dec
and
pop
push
dec
scas
aad
xchg
fisubrs
and
fldt
arpl
add
mov
testl
fs
pop
mov
mov
pop
jne
xchg
cmpsl
pop
pop
addr16
std
mov
rol
rcll
dec
idivb
push
dec
mov
frstor
cmp
jmp
mov
jge
decl
xor
xchg
ss
jg
sub
lret
ja
jne
loopne,pt
dec
push
dec
fcom
xchg
jecxz
dec
dec
jo
jnp
push
shr
movl
stc
mov
hlt
fistl
and
data16
loopne
daa
pop
icebp
sub
imul
dec
inc
jmp
fsqrt
das
push
aaa
sbb
cwtl
cld
js
xchg
ret
bnd
insl
stos
fnsave
xchg
lods
roll
push
filds
cmp
into
es
xor
adc
out
stos
lods
mov
pop
test
push
test
ja
das
push
dec
in
nop
jmp
ficoms
pusha
add
sbb
stos
aad
xchg
xor
andl
inc
jnp
repnz
and
add
cmp
inc
cmp
inc
adc
decl
inc
dec
jmp
pop
int
rclb
arpl
mov
add
stc
and
sarb
pop
imul
scas
aam
xchg
movsl
clc
or
in
mov
xor
aam
xlat
arpl
jle
aad
xchg
sbb
mov
pop
movsb
push
cmp
xor
sar
scas
stos
adc
scas
cmp
mov
popf
out
jmp
mov
mov
mov
cmp
xor
sbb
arpl
push
sahf
repz
jmp
dec
jl
fs
cmp
rolb
or
xchg
mov
cltd
mov
jge
mov
lock
add
pop
adc
add
jb
or
mov
jg
xchg
dec
inc
adc
out
pop
add
mov
dec
rcrb
mov
test
in
cmc
dec
ss
pushl
push
inc
and
mov
fcmove
jecxz
jnp
fdivrs
lods
or
sub
pop
fidivrs
into
mov
xlat
inc
hlt
fdivs
or
sub
out
fstpt
mov
and
pop
loop
adc
repnz
movsb
xchg
sarl
sub
sub
xchg
insb
sbb
fwait
clc
sbb
inc
rcrl
int
ljmp
aad
mull
in
push
jnp
popf
stos
aaa
rolb
cld
jno
jmp
sbb
xchg
sbb
add
fcompl
fstpl
or
mov
cwtl
clc
fistpl
icebp
inc
mov
in
jne
jmp
and
add
pusha
push
popf
xchg
sbb
push
inc
inc
int3
xchg
imul
cltd
mov
dec
mov
insl
inc
cmp
or
mov
mov
out
xlat
cmpsl
xchg
or
shlb
popa
push
in
and
arpl
jge
xor
dec
push
fwait
sub
imul
sub
les
pop
out
xchg
mov
fs
adcb
push
inc
cmc
loopne
cli
popa
imul
andb
push
lock
mov
ljmp
add
cli
xor
jge
lret
sbb
add
in
repz
lock
stc
mov
std
popa
push
adc
hlt
cld
addb
dec
push
mov
xor
mov
shlb
shr
loop
rorl
push
sbb
xor
enter
sbb
out
xlat
or
enter
iret
rep
push
adc
adc
push
aaa
imulb
lds
call
inc
out
dec
pop
clc
push
sbb
dec
insb
int3
mov
xor
mov
jnp
stos
lret
std
add
jge
xchg
sub
pop
outsb
cmp
xchg
fwait
jmp
jmp
jl
lcall
jns
inc
mov
jns
nop
dec
shlb
lock
mov
cmp
in
inc
loope
pushl
xchg
rcl
xchg
mov
xchg
xchg
cmp
jg
enter
fs
out
push
repnz
or
adc
lret
cmpsl
xchg
dec
mov
dec
inc
push
adc
jmp
xchg
cmp
ljmp
and
clts
bound
std
cmpsb
sahf
je
cwtl
aas
lods
mov
cmc
fldenv
xor
sarb
sub
leave
pop
fistps
jg
out
push
dec
adc
xchg
pop
imul
lret
jbe
pop
jge
hlt
out
xchg
jg
cmp
mov
add
pop
inc
test
push
idivb
adc
out
push
ret
xlat
cmc
push
and
ret
jmp
sbb
rcr
test
cltd
data16
pusha
sub
mov
push
popa
repnz
sbb
push
pop
mov
pop
mov
adc
sbb
ljmp
pop
cmpsl
and
inc
lret
in
sub
mov
and
inc
dec
cmp
jp
pusha
lcall
add
inc
test
call
push
pushf
loopne
sub
pushl
sti
push
push
in
inc
inc
cmpsb
add
sbb
data16
mov
mov
sub
imul
mov
jecxz
imul
lret
iret
and
ret
mov
movsl
mov
nop
test
adc
scas
jp
xor
shrl
sahf
stos
adc
cmp
dec
andl
pop
inc
lock
lcall
pushf
inc
into
cmp
fisubs
ror
dec
mov
add
fsubrl
push
jo
mov
sub
xchg
dec
cmp
sbb
push
stos
jns
mov
xor
dec
mov
or
dec
aaa
push
xchg
jnp
xchg
in
bnd
fidivl
aam
in
int3
jecxz
loop
sbb
jo
dec
dec
fcomp
out
aad
xor
inc
aad
sbbb
loope
pop
mul
jge
ljmp
out
cmp
jg
pop
jg
or
mov
add
dec
fisttpl
mov
add
jne
jno
insl
xchg
cmpsl
ret
imul
and
jmp
mov
push
shll
and
mov
dec
mov
in
xor
scas
rol
outsl
mov
xlat
ret
repnz
cmp
clc
sti
fdivr
add
jno
cwtl
adc
imulb
add
adc
je
xlat
jle
mov
shll
mov
ja
insl
pop
int3
cmpsb
inc
rolb
or
das
iret
inc
sbb
push
jns
jmp
xor
mov
xchg
push
lret
testb
les
pushf
enter
jo
popf
jo
dec
lret
outsl
in
adcl
or
push
es
dec
mov
add
add
aam
mov
dec
in
cmc
sub
inc
call
arpl
xchg
inc
rorb
test
dec
ljmp
fdivrs
sbb
aam
push
and
or
addr16
mov
daa
push
out
rorl
popa
cmp
shll
rorb
nop
mov
jns
adc
cmpsb
ret
mov
push
popf
cmp
mov
mov
sbb
mov
dec
ds
cwtl
xchg
push
fdivr
rep
push
xchg
sbb
pop
mov
sbb
dec
andl
scas
mov
ficompl
xorb
lahf
dec
or
hlt
rcrl
iret
inc
jmp
cmpsb
push
mov
das
call
mov
jl
jle
lret
xor
sbb
inc
gs
aaa
nop
sub
push
stc
mov
push
jne
mov
imul
or
lea
mov
add
mov
sbb
inc
or
push
ljmp
insb
lret
mov
imul
imul
xchg
pop
decb
test
xor
dec
es
push
fistl
dec
in
xorl
aam
icebp
cmp
lods
inc
mov
cs
xchg
pop
jecxz
fsubs
add
pop
or
add
out
mov
fildl
test
mov
int3
jo
pop
and
pop
xchg
stc
xchg
dec
mov
push
dec
fldl
jno
es
inc
insb
push
fmuls
jmp
repz
pop
inc
mov
xchg
mov
inc
xor
stos
je
stc
fs
data16
aas
mov
xor
add
push
fs
push
idivl
mov
out
xchg
dec
imulb
pop
lds
shlb
int
mov
repz
not
xchg
adc
mov
lock
stc
cmp
mov
and
mov
push
movsl
cld
xor
inc
and
add
mov
jg,pn
dec
stos
or
mov
jl
ds
repnz
lret
adc
loopne
dec
jmp
mov
cmp
pushf
add
xchg
jp
mov
mov
push
mov
cmc
in
aas
mov
fdivrp
int
dec
das
and
sub
xchg
xor
fists
inc
xchg
gs
mov
mov
push
inc
and
sub
ja
lret
xchg
arpl
push
out
pop
xchg
mov
sub
xor
jb
popa
iret
mov
fcompl
in
cmp
lds
xor
test
jbe
mov
lods
jns
pop
jp
adc
mov
or
and
sbb
dec
push
add
cmp
outsb
aam
push
out
jmp
sarb
xor
xlat
pop
adc
pop
vrcpps
stos
sbb
push
xchg
mov
add
sub
sub
sub
inc
sbb
jne
ret
mov
mov
mov
push
add
cld
cmp
pop
popf
rcll
xchg
pushf
fsubs
sbb
cmp
inc
lods
rcll
stos
xor
mov
cltd
aas
sub
xchg
std
lret
out
bound
stos
or
mov
sbb
leave
ds
insb
rorl
jo
sbb
fdivr
ja
rorb
push
js
push
mov
js
fnstcw
push
pop
mov
shl
jg
out
mov
dec
mov
adc
mov
mov
sbb
dec
cmp
inc
lea
gs
int
bswap
sub
jg
xor
inc
mov
pop
push
inc
in
ficoml
dec
and
sbb
add
lods
adcl
in
sub
inc
or
fdivp
shrb
repnz
xor
lock
sbb
into
bound
cwtl
push
mov
aam
pusha
or
aad
lret
adc
clc
ljmp
inc
push
int
fwait
popa
and
pop
sarl
dec
fildll
mov
pop
sub
cmp
sbb
mov
mov
lea
add
call
outsb
push
rorl
aas
call
cmpsl
int
out
pop
lods
test
out
pop
mov
inc
pushf
jp
mov
mov
push
sbb
or
cmp
adc
add
rol
mov
lods
mov
adc
repnz
add
jbe
outsb
fsts
jo
mov
loopne
xchg
idivl
mov
inc
push
addl
std
inc
int3
add
sar
mov
and
cmpxchg
push
lcall
dec
xchg
inc
jmp
xorl
jmp
mov
cwtl
mov
push
cli
dec
push
scas
or
scas
jae
in
popf
mov
xchg
in
adc
mov
faddl
jb
sar
xchg
clc
mov
inc
shll
idivl
loop
and
leave
int
leave
test
scas
mov
aaa
gs
aas
pop
std
fidivl
jge
outsl
xchg
std
loope
cmp
addr16
xchg
dec
mov
outsl
fs
mov
aaa
dec
jl
or
loopne
inc
out
mov
sbb
arpl
fistps
pop
into
clc
imul
xchg
fiadds
mov
push
cs
arpl
sar
outsb
mov
gs
mov
ds
mov
fstl
imulb
mov
and
push
pop
jo
add
xchg
mov
int3
xor
ret
je
sbb
adc
mov
adc
fildl
or
stc
ss
cmp
lods
fistl
es
xchg
roll
fmul
fsubrs
sbb
mov
enter
sub
dec
sti
orl
aam
lcall
sub
fdivrs
dec
inc
push
mov
leave
in
push
mov
cld
cmp
dec
jno
mov
das
shlb
in
xor
cmp
sbb
inc
in
daa
gs
pop
inc
pop
push
sbb
dec
call
xchg
cld
mov
mov
xor
faddl
mov
fisttps
stc
pushf
enter
in
adc
addb
andl
add
test
sti
mov
pop
aas
cmp
push
les
and
jecxz
push
jmp
gs
xor
xor
dec
xor
cmpsl
insl
jle
pop
add
in
cltd
jnp
and
cld
rolb
mov
stos
std
mov
xchg
pop
sbb
push
mov
mov
jo
xor
test
es
fadd
outsb
es
loop
iret
sub
mov
and
in
dec
jb
sbb
int3
jbe
out
push
mov
mov
xorb
dec
cmp
sbb
dec
icebp
xchg
dec
inc
xor
sbb
test
push
xor
xor
xchg
popa
fsubrs
cmp
sbb
adcb
jns
inc
push
jmp
pop
mov
mov
cmc
mov
xchg
ss
in
adc
test
add
call
lret
sub
xor
pusha
rep
push
or
andl
subl
leave
call
push
jnp
push
push
pop
cmpsb
jle
adc
xchg
or
stos
jg
sbb
int
inc
out
xchg
popa
xchg
push
inc
je
hlt
outsl
divb
push
or
sub
daa
aas
pop
lds
mov
cli
sub
sub
or
aam
rorb
int3
mov
sub
cmpsl
scas
mov
cmp
inc
pop
xchg
jmp
sbb
lods
jo
sub
pop
popf
das
lcall
ret
fsubl
cmp
push
cwtl
icebp
jns
je
cmp
xchg
xor
daa
xchg
ret
adc
pusha
mov
je
pop
add
mov
push
gs
cli
fldt
add
sub
pop
lcall
outsb
pop
out
pop
imul
sbb
bound
cmpsl
xchg
test
lcall
leave
adc
xchg
xor
idiv
loop
jbe
vpcmpeqw
pop
scas
mov
adc
dec
movsb
enter
xchg
jno
add
repz
inc
sbb
jp
fstl
sbb
and
mov
adc
inc
out
lods
lock
dec
fnsave
shll
mov
lahf
dec
inc
jns
sbb
jg
not
je
rclb
sbb
popf
je
xchg
lods
add
add
ljmp
cmp
jno
sahf
ficomps
scas
stos
ljmp
dec
cmp
push
inc
lahf
sbb
into
sbb
mov
jo
aad
inc
inc
sahf
test
pop
xor
in
call
pop
test
fadds
fdivrp
jle
push
insb
iret
js
mov
dec
mov
cld
filds
dec
mov
sbb
cmp
pop
insl
cmc
scas
and
xchg
aas
xor
testl
sub
ss
lret
cs
movsl
inc
cmpsl
inc
incl
dec
fisubl
fistpll
enter
hlt
loop
lods
in
adc
inc
cli
xor
aas
clc
push
add
stos
push
movsl
dec
aad
dec
insb
test
pop
nop
cmp
add
pop
lahf
std
shrb
das
mov
xor
ret
arpl
mov
sbb
testb
jb
insb
mov
add
jnp
and
scas
push
mov
add
jmp
pop
adc
sbb
add
sahf
xchg
or
mov
adc
adc
inc
pop
loopne
pop
cmp
lret
clc
cmp
sub
push
aam
mov
sahf
add
nop
mov
movsb
adc
xchg
mov
imul
lds
and
insb
lods
aas
aam
push
inc
push
xor
inc
mov
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
dec
inc
sub
scas
push
stc
ret
pop
addl
and
bound
inc
daa
xchg
adc
mov
pop
daa
stc
iret
je
pop
push
popa
leave
jl
xchg
jae
mov
out
jge
inc
fisubrs
inc
sbb
mov
or
sbb
xor
and
lret
inc
and
mov
xchg
imul
mov
sti
dec
subl
pop
out
or
lods
mov
mov
dec
sub
pop
mov
dec
cmp
sub
jns
xor
sti
imul
jle
loope
cmp
out
mov
dec
jns
push
cmp
mov
push
lods
sub
mov
cmp
cli
lcall
ja
add
xor
daa
loopne
pop
pop
sbb
jns
jg
cmp
fwait
ret
insb
shl
xchg
dec
movsl
clc
inc
pop
xchg
cmp
into
mov
enter
push
scas
push
in
cli
cmp
xor
dec
push
mov
push
shll
int3
shlb
loope
xchg
sti
and
jmp
mov
xlat
leave
fwait
or
dec
dec
test
mov
sbb
xchg
stc
imul
pop
mov
clc
add
push
sbb
cmpl
sti
push
add
stos
shl
mov
fldt
sub
push
add
cltd
ret
int
jns
xchg
jg
stos
jge
xor
insl
lds
xchg
sub
gs
repz
ss
rclb
xchg
aad
adc
sbb
repnz
negb
pop
sub
pop
ja
pop
jge
jmp
fnstenv
dec
push
fdivr
sahf
out
cmp
cmp
or
cmp
negb
orb
shlb
dec
gs
loop,pt
add
daa
inc
inc
xchg
mov
cmp
cli
lcall
fsubr
mov
sbb
sub
push
imul
sub
sub
lods
mov
out
sti
mov
jl
ds
xchg
cwtl
inc
sarb
insb
pop
cltd
fs
sub
cmpsb
pop
mov
or
add
js
xchg
add
loop
mov
fwait
bound
mov
xor
mov
dec
out
fcmovne
in
jl
in
sub
ss
push
test
es
mov
add
out
sbb
cmp
sbb
cltd
or
cmp
sub
add
vcvtdq2ps
rcr
cmp
pop
pushf
in
ja
jl
jo
or
fcoms
imull
enter
int
jmp
dec
add
in
push
jbe
ss
mov
jns
nop
xor
jp
push
ds
std
pop
inc
dec
and
cli
inc
aas
xchg
cwtl
scas
inc
dec
mov
xchg
shrb
jmp
ljmp
leave
sarl
out
pop
pusha
daa
cwtl
ss
lahf
cmp
sbb
dec
fsubrs
cltd
popa
insb
inc
inc
xchg
out
pop
js
pusha
mov
and
bound
or
pusha
les
inc
jmp
scas
mov
sub
push
divl
mov
leave
add
jge
dec
sub
mov
or
cmp
in
or
xchg
mov
mov
mov
or
mov
sbb
sbb
xchg
mov
inc
jb
popf
add
cmp
push
gs
and
jnp
cmpsl
jno
dec
out
iret
lods
dec
mov
jge
ds
leave
and
mov
add
jne
add
pop
in
xor
cmp
mov
cmp
dec
dec
test
mov
mov
push
lcall
fmuls
adcb
push
vmovaps
rcrb
mov
pushf
sbb
mov
lock
mov
jne
stos
jno
loop
rolb
push
sub
call
leave
fld
xor
sbb
sbb
xor
mov
or
jg
mov
ret
mov
movb
push
mov
lret
ja
cmp
sahf
xor
mov
sbb
xchg
adc
push
sbb
inc
stos
jno
mov
sub
icebp
pop
loope
pusha
mov
andb
pop
pop
fisubrl
dec
mov
lds
mov
aas
sahf
out
roll
mov
jge
sbb
test
and
xor
stc
fiadds
adc
test
data16
xchg
pop
lds
fadd
test
shrl
call
xchg
stc
adc
popa
jl
inc
jmp
insl
sahf
mov
add
cmp
jnp
pushf
stos
inc
stos
sub
xlat
jo
add
pop
jl
sbb
sbb
sahf
and
call
sub
sbb
cmpsl
shlb
filds
add
xor
in
movsl
leave
xchg
rcr
inc
je
scas
loop
dec
inc
add
aas
gs
cltd
aam
or
add
in
loope
out
int
test
insb
lcall
jg
cwtl
je
sarb
add
cmp
ss
mov
enter
xchg
pusha
lahf
cltd
pop
adc
push
inc
fisttpll
mov
sub
mov
xchg
cwtl
jnp
das
push
loop
xchg
cltd
jle
sti
xchg
pop
add
jl,pt
xchg
test
push
js
mov
mov
sub
xchg
push
add
pop
jo
stc
js
ret
jo
push
push
xor
test
call
jno
cwtl
movsb
es
jecxz
pop
ljmp
bound
xchg
xchg
dec
add
out
xchg
outsb
add
lea
jb
inc
mov
fwait
inc
shlb
pushf
hlt
popf
push
shr
jnp
icebp
jb
mov
stos
cmp
adc
xchg
gs
in
mov
test
add
jecxz
inc
cmp
fsubrs
js
ss
lods
aad
jge
ret
dec
data16
dec
push
lret
rcr
and
push
cmc
lret
subl
dec
pop
adc
repz
inc
mov
imul
cmova
outsl
adc
pop
pop
adc
adc
and
inc
mov
sub
aad
mov
int3
dec
popa
andb
add
xchg
dec
cs
xor
dec
mov
lock
stos
and
mov
ljmp
icebp
push
frstor
cmpsl
inc
addr16
pop
and
jbe
gs
adc
orb
xchg
inc
pushf
out
cli
lcall
in
sahf
jns
jns
lods
shll
mov
cmp
xchg
lcall
in
lahf
lods
loope
xchg
fbld
loop
sbb
jbe
and
inc
jecxz
mov
push
add
out
xorl
mov
mov
jno
jbe
mov
sbb
mov
sub
or
mov
cmp
push
dec
xor
test
int3
sub
mov
clc
cmpb
sub
imulb
push
and
fucomip
mov
dec
lods
mov
cmp
push
push
cmp
je
cmp
adc
and
lcall
xchg
sti
pushw
je
sahf
out
mov
daa
sbb
das
fbstp
outsl
icebp
xor
push
xchg
dec
mov
xor
push
and
negb
pop
xchg
add
add
jge
loopne
sbbl
or
xchg
cmp
pop
cmpsb
insb
xor
dec
in
out
ret
xchg
and
mov
bound
adc
icebp
pop
inc
push
movsl
jne
mov
cmp
in
mov
lret
pop
cmc
and
xlat
in
jae
nop
fmuls
data16
aas
xchg
mov
sbb
xchg
xor
stc
cmpsl
xchg
rcll
rolb
call
cld
sbb
fadd
jl
pushf
ds
stc
nop
in
pop
stos
xchg
xchg
and
jp
outsl
addr16
in
inc
insl
clc
iret
aas
pop
lods
mov
lds
mov
sub
or
sbb
test
das
js
push
mov
or
xor
or
jnp
and
cmp
rolb
shll
pop
popl
fisttps
in
and
jl
jmp
out
mov
mov
sub
aaa
test
dec
dec
jmp
mov
add
push
cmp
lea
lret
shll
dec
fists
cltd
in
push
negl
je
hlt
jge
loop
icebp
stos
lret
dec
lret
push
fistpl
xchg
outsl
dec
dec
daa
jmp
xchg
inc
jge
das
jp
dec
lods
mov
mov
insb
dec
cwtl
in
add
leave
xchg
adc
notb
ret
jmp
dec
pusha
mov
in
pop
aam
lahf
stos
out
xchg
stc
movsb
cmp
jmp
push
sbb
mov
sub
fsubrp
or
icebp
aaa
xlat
pop
stos
mov
flds
sahf
in
in
mov
subl
jne
push
lret
sbb
fadds
xchg
inc
loopne
cmpsb
inc
out
xor
add
mov
add
jp
pop
out
cmc
in
andl
adc
hlt
call
xchg
test
leave
cs
sub
inc
lret
pop
lret
mov
icebp
cwtl
cwtl
aam
or
mov
jb
ss
rolb
fistpl
sub
mov
jnp
xchg
inc
ret
in
dec
xchg
inc
cmpsl
xor
nop
inc
fcoml
and
popa
aaa
pop
gs
leave
sbb
xchg
es
fisubs
sub
xchg
and
mov
pushf
and
xor
adc
cltd
pop
cs
lea
sub
sahf
ja
and
fcomp
js
push
dec
sti
pop
scas
mov
pop
push
sub
and
aad
fsubrs
test
jecxz
pop
fwait
mov
jecxz
mov
mov
mov
add
out
mov
dec
int3
xchg
xor
int3
pop
pop
ljmp
cmp
icebp
mov
pusha
clc
xor
jb
outsb
dec
fists
xchg
mov
andl
iret
mov
gs
ret
ret
enter
scas
mov
xchg
shll
das
lods
addb
movmskps
pushf
sub
dec
mov
flds
subl
add
xchg
movsb
out
cmp
xchg
movsl
xchg
inc
mov
sahf
lcall
mov
xor
in
pop
push
sbb
sbbb
add
popf
iret
dec
xchg
bound
testl
inc
push
fmulp
iret
pavgw
jae
mov
adc
rorb
and
push
mov
rorb
adc
pop
cmpsb
subl
jg
fstl
jae
add
jno
jl
or
or
cmp
leave
push
ficompl
mov
and
rcrl
mov
mov
jnp
aam
in
clc
popf
jae
out
add
das
divb
stos
sti
sub
lcall
js
sbb
mov
sub
andl
push
pop
adc
test
fnsave
xor
out
lods
push
pop
sti
cltd
fs
inc
aas
jbe
add
lods
push
ficoml
fwait
or
xchg
int
mov
mov
bound
fyl2x
dec
jae
fisubrs
jg
cmpsb
mov
mov
lods
bound
lock
pop
push
and
add
cltd
xor
pop
lea
push
or
pop
xorl
shr
test
iret
ret
and
cmc
sbb
xlat
clc
sub
push
xchg
cmp
cs
inc
clc
cli
ja
sub
and
xchg
emms
push
and
xor
mov
inc
adc
sbb
xchg
jo
push
daa
push
fildl
in
inc
jb
fxtract
xor
cmp
insl
mov
fmul
aas
outsl
imul
imull
jge
pushf
add
or
mov
sub
aad
sbb
jmp
xchg
mov
fucomp
aaa
cli
inc
xchg
pop
pop
push
sbb
lret
inc
mov
cltd
mov
mov
nop
push
shll
movsb
cs
cld
jne
xor
xlat
insb
out
push
out
sbb
add
jnp,pt
icebp
jg
inc
sbb
dec
xlat
pop
shll
pop
mov
out
mov
mov
addr16
and
xchg
mov
adc
rorl
cmp
and
inc
inc
or
loop
imul
outsl
sub
xor
add
jle
mov
sub
or
mov
jl
push
shlb
mov
outsl
xor
enter
dec
scas
fsts
mov
push
inc
cmc
in
loope
in
mov
or
in
dec
mov
bound
and
icebp
stos
daa
sub
insl
push
hlt
es
mov
inc
inc
sbb
adc
cwtl
subl
movsl
xchg
mov
and
jge
mov
idiv
fistl
mov
loope
rorl
lock
out
mov
sub
aas
cmp
test
call
fstl
gs
std
int3
push
outsb
cld
inc
clc
fdiv
aaa
rorb
jl
mov
and
cli
hlt
lret
adc
loope
negl
test
jns
pop
lret
jo
adc
mov
xchg
mov
ds
jp
mov
icebp
xchg
push
stc
mov
loop
hlt
inc
ficomps
dec
add
scas
mov
scas
out
bnd
add
addr16
test
jge
jnp
inc
cmpsl
cmpsb
jecxz
scas
cmovle
mov
mov
repnz
or
xchg
data16
jl
inc
adc
jbe
mov
in
cmp
sbb
or
loopne
nop
add
dec
jns
mov
fistl
sbb
je
jae
push
rol
cmp
and
imul
jmp
sbb
jecxz
jg
xor
sbb
mov
pop
pop
lock
insb
sub
mov
mov
sub
mov
or
pop
pop
and
notl
xor
cmp
sub
dec
lods
jp,pt
pop
leave
jnp
xor
mov
adc
cmp
arpl
out
or
data16
je
ror
xchg
mov
loop
push
lret
adc
jb
lock
jecxz
xchg
pop
cmp
push
movsl
movsl
into
jno
popa
dec
sub
movl
push
and
or
dec
fadds
sbb
movsl
xor
pop
fcmovb
aaa
and
cmpsl
insl
push
lret
inc
outsb
jae
ljmp
lcall
cmp
inc
sub
mov
xor
xchg
fdivrp
out
fistpl
jno
xchg
jle
adc
add
inc
jnp
xor
push
mov
push
add
adc
cmp
out
call
mov
xchg
push
data16
inc
adc
stos
adc
fdiv
add
out
dec
jmp
push
adc
inc
fs
or
mov
or
lods
add
test
data16
loopne
push
sahf
jmp
fldenv
mov
and
fsts
insl
sbb
out
xlat
adc
push
xchg
mov
pusha
dec
dec
or
mov
ret
movsb
dec
imul
sub
lret
mov
in
scas
js
mov
aas
mov
mov
mov
push
xchg
mov
pop
push
xchg
xchg
fstl
xor
jg
push
xor
scas
mov
bound
mov
pop
xor
mov
xlat
adc
mov
cwtl
jle
cmpsb
stos
cmpsl
movsl
fimull
sarb
ret
cli
fdivrl
push
loop
push
cli
pusha
clc
and
out
or
mov
sbb
test
mov
xchg
sub
test
repz
lret
adcl
mull
push
lcall
aad
jp
stos
xchg
dec
sbb
std
mov
inc
nop
add
pop
aam
decl
test
loop
nop
stos
divl
pop
outsl
adc
jl
scas
in
mov
fcoms
aas
fildll
scas
into
call
popl
add
cmp
inc
shlb
pusha
xchg
inc
push
fsincos
jmp
pop
add
cwtl
pop
fidivs
mov
fcompl
pop
and
push
and
xchg
xchg
add
movsb
popa
jno
lds
pcmpeqb
xor
dec
imul
xchg
xchg
shlb
gs
in
mov
js
js
aas
jl
jno
and
call
ja
stc
sti
insl
jnp
stos
jl
jbe
ds
xchg
mov
cwtl
cmpsb
mov
mov
mov
cmp
xor
fwait
mov
sub
movsl
inc
mov
mov
mov
pushf
cmpl
pop
xchg
bound
fs
aad
nop
test
out
hlt
add
xor
ficomps
jge
lret
outsb
fucomp
cmpsl
movsl
and
loopne
jne
addr16
gs
lret
fldenv
add
adc
or
mov
pop
sub
inc
sub
aad
aaa
adc
adc
inc
dec
pop
outsb
push
ljmp
in
lds
pop
adc
mov
aad
adc
push
sahf
cli
out
in
mov
test
pop
leave
dec
lahf
push
adc
mov
out
shlb
aad
cs
xchg
fisttpll
push
fcmovne
mov
and
aas
xor
rclb
mov
jge
inc
mov
jnp
mov
or
ficomps
mov
daa
stos
xchg
fiadds
push
fdivs
fdivl
fisttps
push
inc
les
clc
andb
xchg
stos
mov
add
mov
into
sbb
sub
daa
jno
lods
cli
cmp
aaa
mov
xor
mov
iret
sub
dec
loopne
repz
cwtl
cmp
test
cwtl
daa
jmp
pop
rcr
fld
fnsave
and
aad
test
in
mov
testl
or
sti
cs
add
ficompl
dec
sbb
cmc
loope
cld
jae
leave
cltd
das
mov
adc
nop
cmp
movsb
arpl
mov
shll
btsl
mov
adc
shlb
cmp
ja
jg
sbb
jno
shlb
mov
inc
jp
loopne
sub
xchg
hlt
dec
std
jg
pushf
in
mov
movsb
imul
dec
mov
and
sub
mov
outsb
mov
int3
and
fs
or
das
js
jmp
xchg
mov
arpl
mov
mov
stos
adc
xchg
sbb
scas
jae
stos
out
xchg
jb
inc
sub
push
mov
push
or
mov
xchg
and
cld
xor
imul
hlt
mov
mov
mov
out
adc
scas
repnz
out
xchg
add
mov
adc
and
inc
xchg
out
xor
gs
fs
fnstenv
adc
dec
jg
and
aas
cmp
cmp
inc
int
add
inc
inc
dec
xchg
inc
push
cmp
imul
xchg
xor
and
imull
pop
scas
mov
in
cmp
pop
xor
icebp
xchg
cli
scas
inc
xor
leave
add
jae
leave
adc
and
bound
and
ficoms
movsb
roll
call
lods
sbb
fcomps
sbb
pop
test
inc
mov
jecxz
sub
sbb
je
add
jp
sbb
jae
iret
add
dec
in
dec
fsubl
mov
cwtl
inc
jge
mov
test
or
mov
sub
sahf
mov
mov
sbb
mov
out
out
mov
dec
jmp
imul
xchg
cmpsb
out
ds
gs
pusha
pop
fcomps
xchg
sar
and
xor
xchg
lahf
cs
mov
push
data16
stos
popa
in
aam
test
mov
push
push
push
in
sti
mov
cmp
outsl
stos
ret
pop
inc
push
fdivrl
or
dec
ret
movsb
mov
testb
dec
xor
aas
sbb
sti
lea
add
or
repnz
pop
stos
inc
cs
insl
loopne
pop
mov
jns
sar
imul
mulb
dec
jne
rcrb
pushf
lret
xchg
adcl
xchg
mov
xchg
jg
push
stos
jmp
in
testl
cmp
mov
out
lret
ja
aad
jo
inc
mov
mov
das
fcomps
mov
push
sbb
mov
pusha
into
dec
and
test
push
push
popf
push
mov
or
mov
pop
or
pop
cmp
idivb
leave
adc
jns
mov
lahf
loope
les
pop
ficoml
sub
sub
sbbb
mov
pop
fiaddl
push
xor
adc
dec
test
mov
inc
into
mull
dec
mov
ja
fidivl
and
shl
pop
jge
sub
add
test
insb
loope
mov
call
cmp
inc
fdivrs
addb
call
sub
jns
lock
dec
jns
sbb
xor
in
inc
fcomps
lret
push
sub
pop
add
xchg
addr16
sbb
lea
cwtl
dec
lret
pop
inc
cmp
inc
leave
je
pop
jae
add
sub
mov
jbe
filds
arpl
or
or
jp
sti
mov
adc
loopne
jnp
ljmp
bound
mov
mov
xor
inc
and
jle
cs
dec
inc
aam
xchg
lods
enter
ljmp
insb
jl
sub
sbb
outsl
sub
leave
xchg
push
inc
inc
popa
and
fisubl
pop
or
rol
test
adc
push
or
ljmp
add
mov
or
sub
fdivrl
adc
mov
push
movsb
insb
jb
les
inc
adc
xchg
iret
jns
outsl
cmpl
mov
sbbb
or
jno
and
daa
lcall
adc
jo
loop,pn
fcomip
dec
adc
xchg
cmpsl
hlt
or
push
inc
mov
mov
pop
loope
jbe
mov
mov
push
aam
pop
out
cs
addb
repnz
dec
in
push
xor
std
mov
inc
inc
into
inc
leave
leave
pop
je
sub
push
mov
in
cmp
pusha
jne
ret
adc
sti
mov
out
je
cltd
xor
lret
sub
pop
cmp
mov
icebp
fimull
lret
cld
repz
loope
aam
add
inc
mov
mov
test
sub
je
mov
dec
inc
cmp
sub
pop
sbb
in
and
cltd
mov
aad
cmp
pop
mov
sbb
call
aam
jge
pop
mov
sbb
mov
jg
cmp
shll
cmp
idiv
cmpsl
xchg
xor
inc
das
outsb
imul
leave
sub
xor
subb
add
dec
jecxz
and
push
mov
mov
push
out
jno
loop
mov
ret
lods
xchg
xor
pusha
mov
pop
out
xchg
push
or
fadd
sbb
cmp
ljmp
mov
add
mov
bound
dec
pop
jl
inc
jae
cmpsb
or
cmp
cmpsl
repz
jns
or
pop
into
outsl
add
pop
sbb
shrb
xchg
clc
mov
sti
xorb
inc
lea
push
out
mov
loop
jno
pop
and
int
cwtl
jg
inc
lret
dec
scas
pop
cmp
mov
push
pop
sub
ret
add
cpuid
insb
inc
mov
pop
pop
mov
ret
lods
pop
dec
sbb
je
sub
or
aaa
push
xor
mov
cmp
mov
mov
mov
xchg
notb
or
xchg
aad
les
lock
inc
repnz
xchg
mov
faddp
imul
fwait
push
and
loop
cwtl
xchg
and
mov
xchg
sarl
jnp
das
testl
call
out
adc
jo
insl
idivb
rorl
sbb
push
dec
fs
jne
xchg
je
mov
aad
cmc
xchg
daa
adc
lods
movsb
hlt
loopne
pop
dec
aad
insl
shrl
pop
repz
cli
cwtl
mov
fcomi
dec
adc
fdivrs
addl
mov
xchg
inc
cmp
mov
add
std
decl
sub
test
dec
sti
dec
pushf
ret
dec
inc
xchg
xor
aaa
xchg
sub
mov
dec
push
mov
out
xlat
xchg
push
jb
iret
shrb
int3
jo
add
bound
icebp
sbb
hlt
movsl
ficoml
lret
pop
mov
mov
frstor
stc
adc
stc
push
dec
stc
xlat
cltd
out
cmpsb
xor
add
dec
int3
enter
ljmp
sbb
mov
sbb
addl
pusha
mov
jno
dec
cld
pop
adc
mov
and
cmpsb
cltd
add
aam
push
lret
or
push
loopne
pop
ss
sub
les
dec
push
mov
xor
sbb
mov
mov
sahf
mov
cwtl
push
xor
fucomi
xchg
mov
inc
scas
andl
jnp
inc
fwait
loope
or
jbe
push
jns
filds
xchg
test
push
ret
sbb
hlt
mov
std
push
das
int
push
int
push
ljmp
dec
stos
mov
mov
add
mov
pop
ror
stc
clc
mov
enter
jl
mov
hlt
push
jno
mov
fildll
pop
jnp
sub
dec
sub
add
les
sahf
js
imul
insb
mov
out
xchg
mov
mov
push
mov
es
push
int
adc
cmp
lock
push
and
adc
inc
pop
popa
pop
cmp
inc
scas
pop
sar
jo
fwait
inc
dec
mov
mov
inc
test
call
xorl
fnstenv
xor
mov
cltd
repz
cmp
xor
fcomip
mov
movsb
icebp
cld
les
push
mov
pushf
out
into
adc
inc
mov
popf
je
jne
xor
mov
pop
ljmp
push
sbb
push
imul
js
pushf
mov
add
and
cmp
les
inc
dec
mov
es
adcl
inc
leave
push
enter
jnp
or
inc
fwait
xorl
sub
adc
insb
dec
push
cmp
outsb
mov
xchg
movsl
mov
pushf
mov
ja
and
popa
or
adc
jecxz
inc
shlb
or
sub
in
adc
cld
xchg
popl
jmp
add
mov
imul
leave
outsb
ds
fdivrs
inc
xchg
xchg
jg
rorl
pop
xor
push
and
mov
aam
jae
into
aas
add
jecxz
loopne
mov
in
rcll
fcmovbe
std
sub
aas
adc
icebp
je
push
and
stos
pop
push
add
push
inc
imul
push
push
inc
out
mov
cmp
lea
stos
iret
cmp
sets
mov
cmp
cltd
arpl
clc
es
push
jg
cmp
jl
xor
dec
push
and
aad
cmc
jo
cld
nop
dec
adc
movsb
push
pusha
es
push
or
mov
xchg
jae
lret
insb
lods
xor
out
mov
imull
outsb
stos
cpuid
jmp
stc
xchg
in
dec
add
mov
mov
loopne
jecxz
insb
and
inc
leave
shl
push
pop
xchg
sub
jp
enter
cltd
add
jmp
movsl
inc
jle
xchg
out
sbb
daa
add
pop
mov
imul
sub
push
fimull
sub
lods
sub
hlt
or
mov
imul
stc
loopne
pop
fcomps
test
mov
das
ja
sbbb
addl
int3
push
mov
push
fidivrl
mov
lods
repz
psubw
mov
pushf
ss
push
rcrl
lret
test
push
outsl
cmpsl
mov
das
pusha
int
mov
mov
xchg
cld
cmp
lahf
sub
inc
lds
pop
sbb
inc
imul
and
aas
sahf
nop
out
and
repz
mov
dec
rolb
add
imul
push
sbbb
insb
imul
inc
insl
jbe
test
cli
or
xchg
shlb
divb
cmpsl
cmp
push
outsl
mov
xchg
les
xchg
push
adc
mov
jns
or
mov
fidivrs
pop
cld
pop
cwtl
icebp
add
iret
cmp
mov
push
mov
cmpsb
push
mov
ud0
ja
in
add
shlb
daa
push
pusha
sub
or
mov
xor
or
xor
xchg
lods
loopne
aaa
ja
or
out
scas
xchg
xchg
jecxz
adc
mov
xchg
and
dec
pusha
sub
int
scas
add
xchg
ja
cmp
or
push
mov
imul
leave
sar
stos
loope
movsl
leave
push
add
jmp
sub
mov
inc
jge
insl
sti
mov
scas
cmp
and
sbb
ljmp
ja
into
dec
ror
cld
add
jb
gs
aas
insl
hlt
sbb
lcall
cmp
xchg
stos
push
fcompl
dec
out
loop
into
and
push
mov
pop
sub
push
loopne
scas
inc
negb
aas
mov
mov
pop
fs
fistl
or
shlb
iret
adc
inc
xchg
and
roll
pushf
or
or
jge
dec
std
mov
jge
cmpsb
stc
out
jmp
mov
shrl
pop
or
adc
ja
sub
in
sub
push
stos
pusha
pop
push
xor
out
cltd
ret
cmc
lock
mov
mov
fstpt
xor
add
sbb
jge
std
gs
push
imul
ret
and
mov
out
ss
pop
mov
mov
add
mov
push
iret
push
mov
mov
sarb
jmp
mov
inc
mov
ds
jbe
and
leave
std
call
cmc
xchg
mov
mov
add
loop
lds
lret
cmp
das
mov
dec
out
mov
test
test
pop
pop
sbb
inc
inc
int3
in
and
push
dec
stos
sub
orl
push
pop
or
xchg
jae
or
out
lock
push
insb
sub
push
aam
and
sbb
push
sub
and
stc
add
iret
xor
xchg
loopne
mov
sub
in
mov
mov
pop
enter
dec
inc
rep
jno
stos
pop
repnz
pop
dec
jns
icebp
rcrb
fs
xchg
xor
shl
push
push
repnz
flds
call
pusha
sub
xor
int
dec
add
push
cmp
sbb
sbb
cmp
xchg
xchg
xor
xchg
adc
ja
gs
pop
adc
cmp
mov
pop
adc
jae
or
cmpsb
push
sbb
das
js
mov
stc
push
xor
cmp
push
insb
std
sub
xchg
push
mov
out
or
in
adc
sub
inc
movsb
inc
jle
subb
jnp
cli
mov
add
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
sbbl
xor
sbbl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jb
movl
push
movl
mov
push
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
orl
xor
subl
push
addl
mov
andl
add
mov
mov
addl
test
je
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbb
mov
mov
and
mov
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
add
mov
sub
mov
add
xor
adc
add
add
mov
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
push
call
jmp
add
mov
movzbl
add
mov
mov
xor
mov
or
add
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
mov
andl
sub
subl
lea
xorl
xor
adcl
xor
cmp
je
mov
sbb
mov
mov
xor
add
movl
cmp
movl
jne
xorl
pushl
call
xor
mov
mov
mov
sbb
mov
sbb
mov
xor
add
movl
cmp
je
pushl
pushl
movl
call
mov
adc
mov
adc
mov
subl
xor
adcl
add
cmp
movl
je
xor
add
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
mov
mov
orl
add
and
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
adcl
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
jmp
mov
mov
pop
mov
orl
xorl
add
inc
dec
les
mov
popf
cli
stc
jp
gs
cmpsl
sub
mov
outsl
add
in
sbb
sbb
adc
jbe
inc
xchg
lahf
icebp
or
xor
data16
rcll
fisubrl
addr16
lea
sahf
add
bound
mov
fidivrl
adc
sbb
pop
jnp
test
push
fwait
stos
ficomps
testl
nop
push
dec
or
in
xchg
pop
jae
ret
sbb
lods
outsl
xchg
mov
mov
sub
and
lcall
dec
xor
pop
inc
je
adc
outsl
jecxz
pop
push
push
lock
inc
scas
mov
lahf
mov
mov
or
ss
pop
adc
fabs
push
dec
in
fisttpll
lods
mov
mov
push
push
mov
pop
std
adc
sub
push
or
or
je
lods
add
dec
sbb
out
into
xor
pop
lahf
nop
dec
xor
jl
adc
inc
cld
cwtl
mov
push
cmpsb
and
orl
loopne
xchg
xorb
mov
mov
pushl
add
push
repnz
mov
ss
jno
gs
nop
or
fstps
mov
push
jmp
xor
in
fst
movsb
jb
loope
sbb
pop
or
sahf
push
xchg
xor
int3
movsl
shrb
les
xor
aas
mov
pop
adc
and
fdivl
jae
adc
push
jp
dec
rorl
pop
push
and
arpl
icebp
cwtl
out
lret
lea
cld
jnp
jmp
adc
divb
scas
loop
push
mov
or
mov
fwait
sub
cmp
cwtl
sbb
cmc
cmp
das
movsb
stos
lret
push
mov
dec
mov
xlat
nop
or
push
lahf
pop
popf
adc
lods
xor
dec
mov
mov
outsl
cli
inc
pop
popf
rclb
cmpxchg
or
pop
fsubrl
mov
es
das
xor
jno
es
xor
inc
fstps
aad
and
clc
dec
loop
sbb
loope
les
xchg
mulb
sub
divl
std
jl
jns
adc
or
sbb
inc
ret
js
mov
jno
dec
inc
ficoms
loope
test
lods
dec
clc
ds
jns
iret
pushf
mov
or
jge
adc
adc
dec
loop
jns
inc
out
out
or
cmp
inc
sub
add
pushf
pop
mov
pop
popa
jb
out
int3
add
add
sti
pop
add
pushl
cmp
pop
sub
push
cltd
xlat
jbe
and
and
inc
mov
subb
sbb
test
das
jo
cmpsb
add
jmp
jle
sbb
mov
pop
in
jo
adc
and
loop
jg
cmp
in
pusha
xchg
outsl
adc
movsb
arpl
outsl
mov
push
inc
mov
jne
push
jae
xchg
inc
ret
cmc
fimuls
sub
cmp
mov
mov
fs
mov
cmp
inc
cli
push
out
loopne
push
inc
xor
xor
push
add
xchg
movsl
fdivl
vpsraw
or
lret
push
icebp
push
cmpb
mov
push
fisubrs
movsl
sub
push
push
loope
fadds
or
cmc
jg
lods
push
test
mov
pop
ja
pop
inc
xchg
sbb
jno
add
lcall
scas
sbb
dec
or
fwait
stc
inc
insb
addr16
xchg
ficoml
out
mov
shl
or
or
aas
pop
mov
add
cwtl
scas
pop
xchg
aaa
loopne
add
cltd
xor
movsl
jae
scas
xchg
xlat
loope
cmp
test
mov
push
add
dec
mov
lods
ljmp
add
addr16
iret
roll
int3
ret
push
add
daa
xchg
jl
aam
jp
sub
add
aad
fs
inc
test
call
sbb
xchg
and
out
arpl
cmp
jno
cmpsl
and
adc
lret
inc
xlat
lods
jae
cld
sub
push
add
fisttps
push
jb
xchg
cmpb
test
hlt
or
jmp
mov
push
mov
xor
test
and
mov
cmp
fsubrl
test
inc
and
jle
repnz
adc
enter
mov
pusha
mov
shl
push
add
nop
xor
dec
mov
mov
mov
jae
add
adc
popf
dec
inc
loop
mov
push
add
testb
pushw
daa
cli
sub
add
imul
push
test
ja
cmc
mov
dec
fdivrl
xor
or
fnstsw
pop
faddl
out
jge
add
test
pop
aam
cmp
jl
ljmp
mov
lcall
insb
add
adc
lods
mov
jl
addr16
push
ja
inc
ficompl
cmp
jb
or
fdivrp
shll
fimull
arpl
ret
mov
cltd
sub
cmp
cmp
shll
scas
in
push
inc
fidivrl
repz
mov
mov
pop
mov
bnd
lret
popa
jmp
daa
cli
lret
dec
lret
rdpmc
add
gs
stc
sti
jmp
adc
jmp
and
imul
sbb
add
xlat
in
xchg
xchg
pop
mov
xchg
out
pop
fists
or
mul
push
jns
pop
fwait
adc
negb
add
test
outsl
push
ja
pop
mov
push
dec
pop
gs
and
in
add
sub
sub
xor
mov
or
sub
and
hlt
mov
sbb
jp,pt
ret
mov
pop
push
mov
ret
lret
or
fcmovb
test
dec
jo
clc
push
mov
add
loope
mov
mov
sub
rclb
ffreep
bound
int
rclb
xor
fmulp
xchg
cltd
rolb
les
stos
cwtl
and
ret
loopne
and
aad
cmp
adc
cli
push
cld
mov
mov
sub
lret
sub
cmp
test
sbbl
pop
push
add
push
leave
into
leave
inc
cltd
repnz
divl
fs
test
mov
cwtl
jg
cli
or
sbb
aad
xor
mov
push
push
mov
jp
inc
arpl
loop
shlb
ret
cwtl
xor
mov
sbb
stc
cmp
cld
push
ljmp
mov
dec
mov
and
and
sub
leave
jne
xchg
sub
es
idivb
mov
xchg
popa
xor
or
inc
mov
sub
gs
pop
nop
int3
xor
aaa
test
push
insl
or
sbb
daa
sbb
out
sahf
int3
xor
div
loop
mov
push
or
xchg
add
bound
or
or
popa
dec
hlt
cmc
shlb
xcrypt-cfb
cmpsl
frstor
mov
mov
xchg
and
movsb
xchg
out
cmp
fcoms
xchg
push
pop
and
andb
das
movsl
jno
or
in
sub
ss
sbb
xchg
or
out
ret
push
push
push
pop
js
sub
xor
mov
jecxz
pop
inc
jnp
ja
lds
aaa
cmc
fsubrs
xchg
xchg
cmp
push
cltd
mov
std
or
sbb
jle
aad
andl
subl
jl
outsl
fmull
hlt
pop
mov
pop
mov
inc
stos
push
mov
in
push
aam
test
add
push
adc
mov
or
jb
mov
mov
out
gs
cmp
dec
mov
jge
mov
or
xor
inc
adc
mov
repz
adc
dec
call
mov
push
into
jmp
push
inc
orl
cltd
imul
xchg
js
test
or
hlt
adc
xor
sbb
rolb
jbe
dec
mov
jecxz
or
icebp
and
fnstenv
daa
ficompl
ljmp
shlb
fwait
and
add
mov
or
sbb
dec
sub
nop
std
aas
add
jl
dec
fstl
lret
sbb
insl
inc
adc
mov
je
shlb
dec
add
sub
rolb
jle
lds
sbb
pop
or
test
cmp
dec
push
jb
aas
incb
test
stos
lret
mov
sub
or
cmp
in
lods
mov
jbe
mov
mov
pop
js
sub
cltd
in
mov
mov
jg
and
push
push
aad
ret
mov
xor
and
cld
push
adc
sbb
pop
cwtl
addr16
dec
add
cmc
aad
mov
dec
push
jbe
divb
mov
pop
in
repnz
mov
push
fwait
in
leave
xor
pop
xchg
out
sbbl
pop
icebp
inc
pop
int3
roll
mov
flds
adcb
sbb
int3
les
mov
shrd
sub
cmp
pop
data16
dec
repz
ds
out
cmpsb
dec
push
mov
dec
addb
pop
cld
nop
mov
cmp
subb
negl
jmp
push
aam
xchg
pop
lods
sbb
sahf
popf
xor
ret
push
out
jbe
out
mov
mov
xlat
ja
pop
push
out
inc
les
jmp
lods
add
xor
xor
xchg
sub
pop
out
lock
push
repz
push
and
xchg
mov
jae
push
add
insl
pusha
push
cmp
aam
aad
mov
fcomps
cmc
aas
gs
faddl
out
insb
xor
and
in
jmp
inc
das
sub
cmpsl
fcompl
stos
fcomps
or
dec
fdivl
data16
mov
mov
test
sbb
adc
push
and
jns
pop
repnz
ds
dec
sbb
in
dec
in
xchg
shrb
mov
push
mov
jo
fadd
mov
or
loope
cmp
daa
mov
xorb
std
arpl
inc
loop
mov
lahf
and
xor
pop
ret
loope
xlat
jp
ret
cmp
mov
adc
aad
mov
add
pop
add
fwait
and
ja
popa
outsb
mov
flds
sbb
fdivrl
aas
decl
rcr
mov
jp
pop
mov
shll
pop
xchg
test
enter
and
mov
ret
sbb
inc
leave
aas
jmp
fimull
sar
mov
movsl
aas
cld
les
xlat
xchg
hlt
movsb
lret
pop
aad
pop
add
iret
cmp
push
stos
dec
cmpsb
test
cmpb
add
jp
loopne
push
adc
dec
push
sub
mov
inc
gs
incb
jno
fsubrs
outsb
hlt
mov
lods
or
js
in
mov
adc
fldt
jle
inc
movsl
cmc
sub
mov
shll
xchg
les
xchg
ljmp
inc
mov
and
sub
subb
jbe
push
dec
xchg
inc
outsb
into
sub
jns
mov
jno
outsb
adc
mov
jecxz
xor
or
push
xor
mov
push
jmp
or
mov
adc
jp
jl
orl
rcr
push
pusha
inc
ss
ja
jp
je
pop
inc
push
sbb
lock
mov
dec
movsb
mov
xchg
or
test
cli
mov
cmp
dec
mov
inc
in
mov
sbb
insb
test
mov
xchg
clc
inc
adc
ljmp
lret
jbe
cli
dec
mov
outsb
test
daa
addl
xlat
mov
mov
cmp
stc
cli
fcmovnu
pop
or
lods
push
ficomps
in
popa
lds
lret
lahf
loopne
pop
test
and
aad
lcall
jo
addr16
ret
das
dec
xor
or
repnz
aaa
cmpsl
dec
jns
mov
dec
popa
icebp
sbb
push
dec
jge
dec
int
addl
or
mov
push
mov
xlat
xchg
sub
sbb
popa
push
enter
push
add
xchg
lock
xchg
sub
rorb
fs
shrl
mov
je
out
mov
imul
add
call
mov
push
adc
and
dec
repz
add
data16
in
cwtl
mov
test
out
daa
pop
stos
inc
fnstenv
or
jb
or
mov
sbb
mov
cld
test
movsb
xchg
mov
ret
cwtl
sbb
push
or
movsb
andl
inc
stos
out
xor
ret
and
out
xchg
daa
lret
push
pop
lock
movsb
addr16
xor
shlb
stos
mov
es
test
mov
sti
cmp
sub
sar
cmp
sub
leave
sarl
pop
loopne
es
js
pop
push
xchg
outsb
xor
sbb
or
cld
mov
mov
loop
adc
or
std
sarl
push
sub
push
adc
das
jle
cmc
inc
fdivl
jbe
pop
xchg
lea
in
xchg
data16
xchg
arpl
sbb
adcl
idivb
mov
xor
shlb
pop
in
push
pop
cltd
mov
bound
push
mov
es
xor
lret
sarb
mov
cmp
pusha
xchg
outsb
pop
dec
fcmovnu
outsb
clc
arpl
push
cmp
adc
mov
aam
insl
rcrb
shlb
cld
ds
sbb
mov
jmp
std
xchg
in
nop
jp
jb
aaa
mov
adc
add
lea
in
mov
dec
mov
mov
and
mov
add
shl
xor
out
cwtl
jo
leave
mov
mov
loopne
lds
ret
pop
arpl
arpl
sarb
mov
xor
rorb
mov
jmp
addl
mov
jl
add
rcll
jo
mov
sbb
fstps
jecxz
dec
in
mov
or
js
insb
into
push
addr16
pop
lea
mov
or
cli
cmp
insb
pop
cmpsl
enter
and
stos
rcl
mov
pop
daa
testl
stos
mov
cmp
nop
mov
repz
lret
mov
mov
add
flds
inc
inc
ja
add
jb
sbb
mov
pop
rorb
in
adc
fisubrl
xchg
lret
xlat
inc
mov
xchg
jns
testl
xchg
jp
outsl
mov
xlat
fsubl
arpl
js
adc
mov
push
test
aas
mov
push
cmpsb
in
shrb
adc
ljmp
movsb
ficompl
cwtl
jo
cmp
inc
xor
cmp
push
xor
je
in
cmpsb
loop
jg
and
outsb
cmp
repz
xchg
or
jns
insb
mov
rolb
iret
shl
mov
push
das
repnz
jns
out
mov
pop
mov
jns
shlb
insl
jmp
mov
dec
mov
cmp
out
or
out
sbb
test
add
xchg
das
enter
pop
cmp
out
cmp
xor
adcl
ja
jb
shrb
mov
in
add
hlt
fimuls
rcl
or
and
jnp
clc
xor
test
and
mov
mov
jne
fucom
mov
mov
insb
ljmp
lods
dec
lock
pop
or
adc
lahf
adc
xorl
mov
loope
out
fldt
scas
mov
inc
out
scas
jo
dec
or
inc
adc
push
into
or
or
std
mov
sub
outsl
aaa
cwtl
fistl
jnp
sbb
cmpsb
inc
adc
loopne
push
cli
add
out
sbb
jb
cs
clc
in
cs
or
or
shll
data16
push
cli
loope
stc
xchg
ljmp
pop
pusha
cs
incl
inc
xchg
sar
mov
mov
fisttps
shll
push
out
cmc
fisubs
jb
loopne
sub
push
mov
xchg
add
sbb
in
stc
lock
add
lret
repz
adc
sub
mov
loope
jecxz
lret
out
lahf
inc
sahf
inc
jb
cltd
in
adc
sub
imull
test
js
jbe
sbb
mov
test
push
jnp
call
mov
in
out
mov
hlt
push
adc
jbe
hlt
add
xchg
dec
test
pop
dec
insb
lret
pop
aaa
or
movlps
xor
xchg
enter
cld
push
mov
int3
push
adc
sbb
std
mov
fldcw
mov
fwait
add
dec
ret
adc
mov
adc
mov
push
jmp
pop
dec
jnp
push
daa
xchg
lret
pop
iret
jecxz
cmp
iret
fidivl
inc
adc
mov
adc
outsl
xor
jg
jne
cwtl
nop
xchg
sbb
or
jbe
mov
add
inc
divb
inc
fcomp
add
or
cs
cmp
xor
push
adc
add
outsl
cmp
pop
or
add
out
dec
ss
mov
ret
in
mov
jne
mov
pop
movsb
addr16
jb
outsb
aaa
and
xor
lods
jnp
jp
pushf
sub
mov
ljmp
icebp
sub
or
cmp
inc
mov
icebp
cli
or
xor
stos
xor
mov
mov
out
mov
mov
pop
rcl
scas
xor
iret
sbbb
fsubl
sbb
popf
clc
mov
lcall
pop
in
ss
add
lea
in
test
insl
in
add
imul
rclb
mov
mov
push
mov
jecxz
inc
int3
mov
fimull
in
into
mov
test
or
insl
sbb
shr
add
xchg
scas
mov
sbb
jbe
aas
js
push
shl
std
mov
mov
clc
xor
lgdtl
xchg
mov
fsubs
and
js
sbb
popa
aas
xor
xchg
daa
mov
fstpt
imul
jmp
mov
outsl
dec
setae
daa
xchg
cmp
and
in
adc
int
push
xchg
notb
mov
adc
and
xchg
dec
mov
jb
add
bound
loop
test
adc
pop
pop
outsb
lret
jecxz
cld
inc
dec
mov
pop
sub
loope
mov
xchg
jmp
je
push
xchg
outsb
push
pop
or
and
xchg
xchg
fdivl
rcrb
mov
loop
mov
mov
jnp
inc
cmp
aaa
jge
mov
outsl
or
popf
aad
or
cli
jecxz
bound
sbb
popa
xchg
je
dec
daa
inc
push
int
scas
out
repnz
insb
push
insb
add
sahf
dec
rcr
dec
mov
jge
jg
mov
adc
shr
call
and
cmp
lret
sbb
mov
mov
test
dec
xchg
fdiv
sbb
mov
and
ss
jnp
jmp
jnp
xor
lea
sub
xchg
jb
mov
imul
or
jle
ss
scas
scas
jp
xor
pop
mov
out
mov
mov
incb
std
inc
decl
adc
dec
fdiv
xor
lds
mov
inc
jmp
push
ss
lcall
cmp
rcrl
repz
sub
cmp
lods
fstpl
xchg
movsl
rcrb
inc
movsb
or
mov
pminsw
leave
rcll
cmc
sti
bound
cld
sub
cwtl
or
fisubl
jmp
or
leave
mov
lods
mov
insl
or
rolb
dec
lea
inc
stos
popf
inc
iret
into
add
add
xchg
ja
xchg
std
pop
out
jle
lods
icebp
nop
popa
mov
movsb
add
xor
adc
jle
shrl
mov
push
cmp
sub
adc
cmp
aas
scas
aaa
jl
xor
insb
or
into
loop
pop
mov
data16
lds
pushw
and
mov
out
imul
lret
test
loopne
icebp
mov
sub
jae
cwtl
mov
pop
push
add
out
inc
loopne
lret
xor
push
dec
dec
fdivl
nop
pop
or
dec
pop
push
push
push
cmp
jmp
pop
dec
sub
addr16
mov
inc
outsb
adc
rol
push
movsl
mov
mov
xor
call
or
out
xchg
jl
mov
lods
inc
insl
imul
jo
inc
sub
sahf
mov
jo
lcall
in
out
es
sub
fisttps
or
mov
dec
sub
cmp
pop
pusha
xor
xor
xor
jo
imul
and
pop
jns
xchg
lods
das
fdiv
xchg
lea
or
or
fs
or
xor
mov
push
outsl
inc
xor
testb
lods
push
mov
add
inc
push
mov
inc
out
lods
ja
xchg
xchg
repz
inc
decl
aas
testb
xchg
ja
imul
inc
test
cmpsl
add
ja
cli
pop
mov
cmc
inc
in
sbb
mov
out
cmpb
push
mov
insb
push
jb
xchg
shlb
fimuls
into
mulb
push
jge
popa
outsl
in
ds
fdiv
aad
mov
aad
movsl
mov
xorb
adc
jecxz
stos
les
stos
add
loop
and
scas
fcoms
imul
push
aas
insl
cmpl
lods
jae
add
stos
out
sbb
mov
and
rolb
push
jns
sub
mov
std
aas
dec
pop
mov
fstl
rcr
orb
add
out
pop
sub
xorb
sarl
rcr
push
lret
mov
xor
xchg
sub
shll
test
movsb
and
test
add
test
or
or
sub
jno
mov
mov
push
adc
xor
adc
fucomi
lods
or
push
aam
push
cltd
cmp
inc
xchg
loop
cld
xchg
imul
pop
jge
or
int3
inc
frstor
scas
daa
mov
cmp
div
sbb
outsl
mov
lahf
pop
inc
adc
dec
inc
fstl
je
pop
arpl
adc
sub
mov
add
stos
movsl
fstl
or
cmp
xor
inc
ja
std
pop
sub
pop
mov
lretw
mov
cmc
adc
jmp
lret
lahf
int
and
pop
or
out
mov
push
pop
pusha
addr16
cli
leave
lods
pop
jmp
and
dec
xorl
daa
cmp
mov
pushf
mov
mov
jecxz
dec
push
push
divb
rorb
aas
push
icebp
arpl
and
mov
nop
loope
lock
push
rorl
sub
data16
sti
xchg
loope
xchg
fcmovb
lods
jecxz
jb
xchg
loope
imul
mov
sahf
shll
pop
imul
mov
iret
jbe
rorl
movsl
jl
adc
pop
dec
lret
and
out
fstpt
ljmp
mov
adc
dec
or
inc
sbb
imul
sarl
repz
mov
mov
aas
lret
inc
fsubrs
mov
add
cmc
dec
out
sbb
xor
call
jecxz
inc
into
packuswb
aam
sub
out
repnz
xor
sbb
aaa
add
outsb
mov
lods
mov
push
stos
xlat
pop
add
mov
in
iret
jg
pop
test
mov
and
stc
xchg
sub
mov
pop
or
je
inc
inc
pop
cmp
outsb
test
sub
jns
clc
lahf
int3
subl
je
cmp
or
lret
cli
into
ret
mov
outsl
mov
push
repz
gs
xchg
pop
pop
outsl
and
adc
out
lods
push
mov
in
ljmpw
fistl
inc
mov
inc
jne
or
loopne
scas
lea
adc
mov
es
pop
mov
scas
out
stos
dec
andl
push
sbb
stos
cmovle
aad
xchg
out
xchg
pop
pop
mov
fs
cmc
or
adc
shl
xchg
jno
adcl
push
sub
mov
jo
aaa
shrl
add
data16
fsts
popf
ss
sbbb
imulb
lds
push
lret
or
sbb
sub
std
nop
aaa
mulb
or
test
repnz
cmp
bound
mov
cmp
pop
icebp
xor
jb
mov
pop
idivb
dec
mov
out
push
lahf
stos
into
sar
mov
inc
aas
les
dec
lock
cmp
sarb
add
aaa
ds
mov
mov
sarl
push
fldt
sub
push
mov
lret
insl
push
jmp
inc
arpl
push
push
cwtl
jbe
or
cltd
xor
and
loopne
fcoml
or
adc
xor
or
fcoml
test
cmp
into
mov
push
mov
xchg
sub
stos
cmp
pop
add
cmp
jp
shrl
addb
adc
lcall
iret
pop
insb
pop
adc
test
rcll
out
in
jns
mov
cmpsl
fldl
jne
lds
mov
test
out
and
frstor
jb
mov
pop
pop
insb
pop
mov
out
stos
inc
jns
xor
cli
xor
sti
roll
addr16
rol
dec
cmp
and
sub
push
enter
jmp
arpl
vprotd
rorb
outsb
dec
add
inc
je
or
mov
aaa
sub
mov
inc
or
inc
add
pusha
adc
xorb
sarb
test
call
mov
jmp
push
mov
or
int
mov
out
jne
jmp
popa
int
mov
sub
sbb
in
scas
xchg
mov
repnz
push
in
mov
sbb
pop
clc
pop
add
loopne
aad
sbb
je
call
test
pop
pop
aaa
mov
movsb
mov
sub
push
mov
fs
dec
subb
jbe
testb
gs
pop
xor
ret
lahf
pop
jmp
sbb
es
mov
add
sbb
cmp
xchg
fcompl
adc
mov
or
lock
lods
js
mov
aas
mov
cmp
push
sti
aad
cmp
add
adc
rol
jecxz
jns
clc
pusha
sarb
inc
add
mov
pop
loopne
into
jbe
push
lods
sbb
jo
in
stos
add
addl
and
mov
mov
sub
into
push
cmpsb
push
je
xchg
jb
je
test
in
sbb
je
std
ss
cmp
mov
xor
bound
push
mov
data16
lock
inc
test
aad
addr16
pop
cmpl
lahf
xor
in
daa
sub
adc
push
lods
pop
mov
adc
imul
add
aas
xor
das
inc
sbb
shr
pop
loop
and
xchg
pop
xlat
push
mov
xchg
loop
or
xchg
or
pop
sub
mov
pop
mov
push
mov
push
addb
sub
sbb
sub
popf
das
adc
out
jmp
inc
mov
xlat
enter
add
jns
das
loope
jo
cmp
pop
pop
popa
dec
lret
sbb
jge
push
int
push
imul
push
in
lds
jbe
gs
jg
imul
rolb
cmc
fldl
inc
fmulp
leave
mov
push
or
enter
pusha
xchg
inc
push
mov
clc
mov
into
mov
pusha
mov
and
lret
arpl
repnz
inc
sbb
ss
outsb
lea
outsb
push
inc
fwait
and
cld
iret
insl
lods
out
xchg
mov
adc
mov
xchg
bound
outsl
mov
lock
jle
arpl
add
jg
xchg
aam
push
sub
xor
push
xor
dec
mov
and
loopne
rcrb
or
pusha
cld
data16
rcrl
cli
adc
xor
imull
js
cmpsb
sahf
add
nop
sbb
pop
inc
leave
cwtl
xor
mov
test
cmp
mov
mov
into
mov
add
mov
clc
mov
push
cli
mulb
or
jne
movsb
sbb
lret
mov
push
out
idivl
iret
test
dec
and
lret
adc
inc
pop
jnp
inc
sahf
add
mov
jg
in
cmp
cmpsb
mov
movsb
hlt
icebp
pop
in
daa
in
in
mov
pop
fcomps
or
or
sub
test
xor
enter
loop
or
push
js
mov
movsb
or
negl
loopne
mov
jo
sbb
pop
and
in
std
xchg
xor
out
divb
pushf
cmp
xor
outsb
aad
les
sub
pop
add
into
fadds
fs
jge
sbb
add
inc
sub
push
imul
shl
cmp
enter
jnp
jo
cmpsb
fmull
sub
movsb
cltd
mov
shl
cwtl
call
push
rcrl
movsb
jp
dec
jo
aam
in
mov
cld
pop
cli
fs
cmpsl
fmull
add
jne
and
outsb
mov
cltd
daa
test
repnz
or
aas
push
xchg
jo
pop
sbb
js
sbb
movsl
add
nop
icebp
mov
xchg
and
push
add
inc
fmull
ret
das
loopne
enter
sub
popa
pop
frstor
adc
push
dec
mulb
or
scas
sbb
sub
pop
gs
stc
daa
addr16
insb
inc
pop
test
add
or
sti
inc
testb
sbb
mov
push
cltd
cmp
and
dec
sub
mov
das
dec
lcall
cmp
mov
incb
rcl
sub
sub
xor
fs
in
mov
or
push
inc
add
xchg
adc
mov
movsl
pop
pop
lea
lahf
push
subl
inc
call
into
stos
popl
in
push
xor
scas
dec
test
imul
mov
repnz
or
addb
sub
loope
rcrb
ficoml
pop
fists
lcall
aas
push
pushl
stc
push
dec
mov
cmp
jecxz
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
jmp
or
mov
into
and
and
sbb
addl
push
sahf
or
loop
out
dec
mov
inc
pop
ljmp
fldenv
mov
loop
fcmovbe
inc
mov
push
in
sar
insb
hlt
leave
nop
pop
data16
and
sub
mov
loopne
daa
pop
loop
mov
sbbl
dec
lcall
adc
push
imul
mov
popa
sbb
aas
jp
pop
hlt
or
adc
pop
cmp
ja
inc
clc
xchg
pop
into
loop
popa
mov
je
mov
dec
or
push
pop
mov
pop
aam
test
add
pop
imul
loope
mov
dec
xchg
mov
lahf
inc
aam
in
and
rolb
not
fwait
cmp
mov
xor
hlt
pop
pop
xchg
jmp
jno
pusha
lret
or
sub
fidivrl
mov
mov
xor
xchg
push
ret
out
cmp
ljmp
mov
mov
push
push
adc
mov
imul
out
or
popf
fdivs
hlt
dec
inc
sti
mov
jne
subb
enter
std
cmpsl
or
pop
ret
add
into
loopne
mov
movsl
inc
pop
jae
addb
xor
jl
or
popf
das
icebp
or
test
ljmp
push
push
arpl
negb
adc
negl
loop
mov
subl
cmc
push
add
fsubrs
add
movsb
scas
mov
outsl
mov
lcall
inc
nop
js
notl
ror
call
cmp
mov
lods
faddl
fyl2x
nop
notb
cld
in
push
sbb
fsubl
ja
test
rclb
int
mov
ja
insb
mov
cli
pop
mov
mov
xchg
popa
pop
xor
inc
mov
ficoml
jmp
bound
sbb
dec
mov
and
leave
dec
fldcw
andl
insl
insl
inc
sbb
mov
sbb
sarb
mov
push
repnz
inc
and
aad
scas
and
idivl
lea
add
lret
test
shr
mov
out
mov
mov
aaa
pop
nop
mov
andb
pop
je
mov
dec
pop
push
sub
or
xor
outsl
repz
add
adc
xchg
jle
push
psraw
jb
adc
ret
sub
or
inc
lock
inc
sbb
xor
push
push
leave
loop
mov
shll
pop
call
fsts
sub
dec
jmp
sub
add
mov
ds
fdivrl
xor
insb
xor
mov
sbb
fidivs
xor
ja
loop
and
lahf
out
cmp
aam
mov
sub
lahf
enter
cli
loope
mov
enter
sti
push
cmc
repz
inc
xor
mov
shl
xor
sbb
into
jge
or
push
dec
dec
mov
mov
stos
add
das
aaa
jns
lret
adc
push
out
outsl
call
cld
dec
and
test
xlat
test
xlat
inc
inc
lock
stc
insb
mov
int
lods
fstpt
je
pop
pusha
pop
fucom
lds
fildl
ja
lods
cltd
inc
jcxz
jge
jl
cs
fwait
fsubrl
jb
add
mov
push
fdivrs
mov
and
push
pop
sbb
inc
repnz
rcl
cmpsl
sbb
sbb
sbb
jae
fiaddl
add
outsb
daa
inc
divb
lcall
aam
xor
mov
ret
enter
adc
adc
data16
hlt
aam
daa
paddsw
sbb
cmpsb
pop
dec
adc
xor
in
xor
loop
inc
mov
add
add
cmpsb
fnstsw
cmp
and
add
cmp
cmc
dec
pop
adc
push
cwtl
pop
ds
and
jecxz
mov
mov
xchg
sarl
pop
iret
adc
hlt
dec
lds
mov
ret
mov
daa
mov
jb
jecxz
inc
cmp
sbb
push
mov
jl
aam
inc
stc
jne
fwait
push
and
sub
sbb
sub
pop
test
jo
fldl
pop
jecxz
mov
lock
imul
scas
mov
stos
inc
ja
fadds
fwait
test
adc
bound
rolb
push
jae
aas
into
fisubs
add
loopne
cmp
repnz
pop
mov
icebp
dec
mov
fimull
add
mov
push
jge
push
fistl
sbb
push
daa
xlat
jae
cld
mov
inc
test
pop
out
js
addr16
fmuls
popa
sbb
jl
nop
adc
in
addr16
inc
cwtl
daa
lods
std
insl
aaa
push
js
xchg
mov
and
sarb
ret
outsb
pop
nop
movsb
movsl
and
mov
cmp
or
pop
dec
cmpsl
ja
stc
inc
push
push
mov
rorl
adc
push
gs
mov
and
jbe
inc
dec
xchg
dec
cmp
xchg
mov
aas
push
lahf
fsubl
lea
ss
jb
cmc
sahf
jecxz
dec
inc
clc
cs
test
xchg
add
stc
inc
fmul
mov
fidivrl
nop
imul
pushf
movsl
adc
stc
push
stos
int3
add
mov
lods
sub
sub
mov
inc
dec
enter
pop
stc
mov
jl
int3
scas
pop
rorl
aas
pop
sub
mov
jg
push
pop
cltd
push
frstor
cmp
inc
in
adc
repnz
sbb
stc
mov
or
xchg
xor
xchg
jl
rorl
notb
xorb
push
pop
arpl
dec
mov
inc
inc
rcrl
xchg
xor
sbb
add
cmc
xor
xor
scas
jno
ret
nop
dec
punpcklwd
out
sbb
clc
scas
loope
cld
pop
mov
dec
pop
jae
pop
pop
in
je
into
aaa
sti
sbb
jg
xchg
xor
stc
stos
movsb
leave
push
dec
notb
outsl
jge
xchg
stc
fwait
pushf
out
es
movsl
dec
lds
js
pop
fnstcw
mov
arpl
repz
repz
pop
iret
push
mov
imul
jb
jmpw
mov
dec
imull
mov
rolb
jg
lock
lret
loope
lret
cmpxchg
inc
imul
push
sbb
loopne
int
sbb
mov
aas
xor
mov
cmp
stos
idiv
out
pop
pop
or
rolb
pushf
dec
jb
jnp
or
js
dec
or
mov
pop
out
xor
daa
push
mov
aam
xchg
jb
xor
xchg
js,pt
jg
push
mov
imul
ret
pop
sub
outsl
inc
or
push
jae
cmp
add
outsb
dec
imul
jl
mov
xchg
jo
xchg
push
or
in
push
das
sub
in
mov
xchg
lea
lret
mov
ss
repnz
push
fcmovu
lea
faddl
mov
mov
or
ja
in
sub
push
adc
xchg
es
cs
inc
dec
fsubrs
push
arpl
xchg
call
inc
jle
sbb
and
sbb
or
xchg
jb
add
jns
jmp
add
push
pop
shrl
push
sbb
ljmp
sbb
test
pop
sub
ja
jecxz
lods
push
or
inc
xchg
iret
out
sbb
iret
lret
or
das
std
jp
fisttps
insb
xchg
scas
jmp
push
add
mov
mov
lock
xlat
mov
ficompl
fnsave
inc
adc
xchg
jecxz
mov
mov
lret
pop
dec
loope
push
loop
decb
sub
cwtl
pop
movsb
movq
test
mov
aad
xor
into
adc
push
xchg
xchg
pop
sub
pop
shrl
jae
loopne
into
and
xor
es
xchg
arpl
push
loope
and
xlat
add
fildl
sub
fs
xchg
xchg
mov
into
fwait
pop
inc
stos
test
std
dec
mov
cmp
cmp
xor
mov
cli
add
mov
xor
sbb
jecxz
pop
repz
mov
inc
mov
mov
les
test
sarb
sbb
pop
mov
mov
xchg
push
shl
les
cli
test
jecxz
test
mov
outsb
in
test
mov
std
lahf
fdivp
in
ss
std
ret
idiv
fcoms
mov
stos
shlb
cmc
lret
dec
vmread
shrb
je
or
fistpll
xchg
push
test
stc
insb
jmp
xchg
inc
inc
jns
mov
sub
sub
add
loope
mov
fxch
aam
mov
jmp
loopne
cmp
insb
and
mov
jb
adc
fwait
sbb
lds
push
and
lock
clc
mov
jno
jo
hlt
sub
jp
fs
push
ret
test
adc
aas
cltd
sahf
xchg
dec
mov
adc
xchg
jmp
xchg
pop
jg
adc
mov
mov
mov
dec
mov
xchg
jmp
call
int
inc
jle
sub
sahf
ret
adc
jbe
xchg
sbb
lcall
xor
aad
stos
call
mov
mov
push
pop
mov
js
lcall
sti
add
hlt
movsl
mov
add
insb
xor
es
inc
mov
aaa
xor
adc
xchg
in
daa
xor
mov
add
inc
test
int
xchg
push
push
sub
inc
add
call
cmpsl
ret
dec
mov
or
sub
pop
sub
jne
add
mov
xor
loope
sbb
jmp
xchg
inc
clc
sti
sub
mov
mov
jnp
adc
dec
sub
mov
fnstsw
lods
scas
push
xor
jmp
ljmp
pop
test
dec
adc
cld
in
insl
jno
dec
in
test
inc
scas
repz
mov
ss
xchg
pop
dec
fisttps
popf
fcmovbe
aad
popa
shrb
daa
inc
notb
push
mov
iret
mov
decl
dec
mov
bndldx
pop
xor
mov
movsb
xor
fnstsw
loop
cld
inc
sbb
imulb
inc
or
fs
outsl
jno
sbb
lret
cmp
in
popf
mov
xor
mov
jp
adc
inc
sbb
or
pop
daa
aad
lods
or
out
jb
out
xchg
movntps
out
testl
cmp
ficompl
pop
jnp
cs
sbb
cmpsl
mov
jp
or
imul
push
pushf
add
xchg
in
insb
jge
test
out
mov
xor
mov
sub
mov
ss
add
push
pop
adc
xchg
pop
pop
sub
lods
xchg
clc
sarb
jno
xor
sub
int
xor
fiaddl
jp
stc
pop
pop
jg
clc
inc
and
cmp
jb
test
ja
add
in
in
adc
xchg
mov
push
and
mov
sbbb
dec
imul
xlat
leave
stc
gs
or
cmp
fwait
aam
adc
sbb
mov
jg
xor
enter
out
jl
inc
mov
xchg
aas
fcmovb
std
std
insl
in
ret
repz
fdivrs
jnp
cmp
scas
push
sbb
push
inc
loopne
gs
in
out
pop
test
xorl
rorb
in
pusha
pop
inc
dec
scas
in
cmp
shl
stc
add
aaa
insb
mov
fadds
shll
scas
and
fldcw
rol
push
sub
xchg
cmp
mov
mov
in
pusha
insb
ss
loope
sub
xor
lock
aam
sbb
lea
xchg
ljmp
aam
les
pop
cltd
scas
sbb
jmp
xchg
lahf
andb
mov
dec
push
mov
xchg
xchg
xor
test
mov
inc
out
iret
mov
and
inc
and
sub
jp
cwtl
or
enter
fnstcw
inc
sahf
leave
inc
insb
cmc
and
push
leave
xchg
jmp
pop
int3
outsl
orb
or
in
stc
scas
add
xchg
or
ds
fbstp
adc
iret
les
jp
mov
js
add
inc
sahf
push
out
ds
stos
xchg
adc
popa
mov
mov
sub
xchg
mov
lret
aad
mov
adc
scas
ret
int
mov
cmp
ss
jbe
leave
pop
push
aam
push
outsb
int3
mov
sub
scas
and
cld
outsl
fcoml
aas
pop
cmp
jmp
icebp
cmc
jbe
sahf
movsl
dec
xchg
xorb
mov
pop
xor
or
pop
into
hlt
dec
dec
mov
jp
incl
lods
test
sahf
adc
out
aaa
cmp
addr16
sbb
cltd
out
jg
enter
mov
push
test
pop
jecxz
xor
jg
inc
out
adc
lret
ret
sbbb
cmp
and
xor
arpl
jae
mov
add
fiaddl
jb
lock
push
lock
push
pop
ss
jle
imul
daa
imul
mov
das
and
pusha
or
popa
xchg
insb
jno
push
xchg
dec
stc
lcall
mov
sub
inc
addl
mov
mov
xor
inc
test
loop
sbb
sbb
mov
mov
mov
sbb
lods
int3
add
push
movsb
mov
dec
mov
sahf
lcall
lea
or
andb
mov
arpl
cmpsb
ret
inc
js
subb
movsl
subl
test
pop
and
orb
or
lret
ret
inc
xchg
mov
sub
cmp
sbb
lea
jae
es
or
aad
dec
xchg
pushf
insb
sub
xchg
inc
adc
cmp
pushf
es
mov
mov
sub
test
and
loopne
clc
push
fucomip
mov
push
daa
mov
in
xchg
push
pop
lcall
lea
mov
sbb
bound
loopne
push
mov
sub
inc
fstp
dec
in
rcll
inc
pop
mov
cmp
pushf
sahf
mov
fnstcw
mov
push
mov
rclb
add
jne
cmp
fcoms
iret
iret
sarb
jns
test
loopne
push
dec
mov
fldl
lret
cmp
and
jae
or
nop
push
clc
icebp
sub
and
ret
cld
pop
add
pop
sbb
sbb
mov
cmp
jae
push
aaa
mov
fwait
mov
and
add
xchg
ret
cmp
xchg
xchg
push
push
push
sarl
lea
ja
jae
mov
sbb
cmp
push
ret
jae
add
adc
aad
cld
in
cmp
push
jecxz
int
and
movsb
fldl
cmpb
inc
jg
call
scas
jae
add
mov
sbb
lea
mov
xchg
les
cmp
aam
mov
out
scas
push
xchg
mov
movsl
fildll
push
inc
lds
push
std
sahf
sahf
adc
lret
aaa
dec
adcb
and
pop
out
mov
repnz
cltd
xchg
sarl
mov
outsl
dec
aad
sub
jl
adc
mov
mov
mov
xor
sub
out
fdivs
pop
inc
daa
or
mov
das
add
sub
push
loope
xchg
mov
inc
add
inc
ds
xchg
jmp
push
jl
aad
test
jg
ds
shl
test
adc
cmp
das
aaa
aas
cltd
mov
xor
cmp
pusha
fiaddl
fs
jae
sub
out
das
push
out
int3
push
xor
lret
fucom
cmp
aam
test
outsb
outsb
into
out
cmpsl
gs
push
loop
add
cmc
pop
jno
fld
stos
ret
in
jb
faddp
push
pop
lds
ja
mull
sbb
mov
outsl
pop
mov
loop
push
xchg
dec
mov
or
aam
jns
dec
outsl
sub
mov
add
scas
fldenv
fcmovb
push
xor
arpl
mov
or
out
insl
shlb
pcmpeqd
dec
pop
mov
lds
inc
dec
divl
and
adc
xchg
dec
int3
nop
jge
mov
outsb
fisttpll
insb
mov
outsl
jbe
fldcw
add
shr
cmp
push
xor
lds
push
ficomps
aas
mov
lods
sub
push
sbb
and
bound
test
imul
lret
es
add
lds
xchg
lcall
jl
mov
sub
mov
mov
and
sbb
mov
dec
fs
sbb
and
mulb
cmp
dec
inc
mov
ja
adc
xor
shrb
fsubl
aas
sti
xchg
int
loopne
aam
mov
jl
and
inc
sub
lea
mov
sbb
add
cli
in
sti
xor
dec
add
sbb
fidivrl
sub
loope
inc
and
pop
pop
jae
jp
or
sbb
test
hlt
mov
pushf
inc
add
rclb
test
je
inc
mov
ss
dec
ret
sarl
pop
addb
jnp
out
insb
dec
pop
xor
psrlw
add
and
sub
and
dec
popf
sbb
dec
iret
cwtl
gs
js
dec
loope
repz
pop
hlt
mov
pop
add
addr16
ss
popa
scas
adc
enter
jne
cmp
xor
push
aad
lea
inc
movsl
adc
in
mov
out
mov
dec
outsl
sub
adc
fldt
cmpsl
sbb
adc
into
push
jle
mov
add
cmove
loope
daa
out
je
push
sbb
xchg
cltd
fwait
adc
mov
out
popa
mov
pop
and
or
ret
sbb
dec
daa
push
pushf
out
ljmp
mov
subl
test
or
or
sub
das
or
mov
push
push
xor
fucomi
lock
adc
xlat
nop
cmc
and
fcomp
icebp
adc
push
fstpt
mov
xor
mov
pop
icebp
pop
lock
leave
sbb
insl
xchg
pop
in
cmpsb
mov
dec
xor
inc
lods
fstl
mov
xchg
xchg
addr16
test
repz
xor
cltd
int3
in
outsb
test
push
jmp
mov
mov
inc
and
inc
faddp
add
repz
xor
and
push
movsb
leave
sti
mov
lahf
cmpsb
cmp
mov
add
popa
insb
lds
or
stc
and
jno
jb
xchg
jge
jl
mov
movsl
rclb
fwait
jg
outsb
gs
in
icebp
aas
in
pop
xchg
popa
and
xor
xchg
xor
in
loopne
mov
xorb
mov
lock
mov
dec
push
cmp
cmp
out
pop
add
inc
push
cld
xor
test
push
ret
dec
xchg
pop
or
movsl
mov
jp
nop
test
lret
sub
out
add
ret
pop
and
jle
pop
pushf
ret
sub
out
and
or
leave
push
inc
mov
jmp
stos
and
mov
mov
or
outsb
or
push
imul
subl
dec
leave
sti
ja
and
or
lret
into
xchg
loopne
inc
imul
pop
into
pop
mov
test
jbe
push
jl
jns
fwait
jle
adc
enter
decl
cld
pushf
push
lods
outsb
jge
sti
xchg
cli
sub
push
cmp
ficompl
pop
stos
hlt
lcall
push
add
adc
in
cwtl
xor
popa
pop
jnp
cmc
cs
xchg
insl
mov
punpckhbw
fs
xor
movsl
imul
out
lret
and
xor
or
fdivrl
nop
test
in
insb
outsl
dec
and
jo
lods
sub
xchg
or
xchg
in
cmpsl
jmp
inc
clc
stos
push
in
inc
and
sub
aam
test
jg
out
mov
test
cmp
sbb
dec
cmpsl
sub
jge
loope
pop
mov
in
xchg
hlt
loopne
xor
repz
loop
pop
mov
xchg
and
inc
or
popa
leave
mov
mov
mov
les
dec
int3
add
jmp
inc
inc
daa
push
std
dec
dec
dec
pop
dec
cmp
push
sti
iret
and
jg
mov
dec
lcall
loop
add
push
movsl
xor
add
mov
or
jo
dec
sahf
clc
stos
push
add
daa
or
pusha
dec
jl
cli
mov
sbb
dec
cmp
test
sbb
add
leave
nop
dec
loopne
cmpsl
enter
xor
aam
iret
adc
pop
jecxz
push
pop
insl
dec
or
loopne
push
sbb
or
sbb
enter
sbb
and
pop
jge
mov
xor
adc
push
adc
sti
int3
add
sbb
jne
test
sub
repnz
in
iret
dec
std
repnz
into
cmc
add
xchg
aaa
mov
rclb
ja
shrb
add
mov
lea
rcr
mov
inc
jmp
sub
js
fwait
lcall
mov
bound
sub
dec
addr16
xchg
fucom
mov
rolb
fadds
mov
jno
stc
dec
mov
cmp
and
data16
popl
aaa
sbb
cmp
in
imul
pop
pusha
das
jge
jb
in
jl
pushf
mov
xchg
add
sub
in
inc
or
push
add
mov
inc
ds
sub
mov
push
lret
mov
movsl
fildl
movd
add
lods
add
imul
mov
ljmp
sub
xor
add
fistl
push
imul
cli
repnz
sub
xor
imul
in
xor
adc
fcmovne
cmp
loope
outsb
jl
aad
adc
jbe
clc
jg
xor
xchg
jnp
sbb
inc
scas
push
cmp
xor
mov
es
push
push
insb
sbb
sbb
mov
add
fsts
jo
sti
iret
mov
inc
cmp
cs
frstor
mov
xchg
sub
xchg
pop
rcrb
mov
test
adcb
shll
jg
repnz
adc
jae
ss
pop
loope
xchg
fwait
repz
jl
int3
loope
je
leave
sbb
shlb
and
mov
xchg
mov
pop
ljmp
mov
into
and
sbb
cli
int
sbb
sbb
rcr
imulw
mov
aam
imul
sub
fisubs
cld
cmp
iret
pop
mov
mov
cmp
jbe
fisttpl
sahf
outsl
adc
cmp
dec
and
pop
lahf
or
sub
push
movsl
pop
sahf
dec
cli
popa
jg
jmp
cmp
cli
out
les
repz
sub
daa
or
rorl
rcrl
ja
mov
pop
push
adc
xchg
pop
test
sti
mov
jmp
aam
imul
lods
or
xlat
pop
repz
mov
js
jbe
outsl
cmp
cwtl
in
stc
in
and
and
cmc
out
addr16
push
shrb
and
sbb
fs
insl
imul
and
xchg
xchg
pop
adc
cmc
gs
cwtl
popf
cmp
cmc
pop
out
das
notb
mov
imul
sahf
sbb
mov
cli
push
rolb
popf
jmp
pop
sahf
cld
xchg
shrl
fs
adc
mov
lock
jnp
lock
shlb
and
add
movsb
push
test
xor
push
push
dec
pop
inc
lods
in
ss
mov
dec
xchg
fldt
cmp
xchg
loopne
aaa
scas
jg
insl
out
sti
lods
sbb
push
xchg
clc
and
push
lahf
and
mov
cmp
repnz
insl
ja
cmpsb
lcall
xchg
mov
imul
inc
int
pop
lock
pop
mov
inc
jg
movl
pop
cmp
aam
adc
push
inc
aad
lods
push
lods
imul
idivb
pop
inc
enter
je
inc
popl
sub
repz
pop
cli
arpl
call
mov
jbe
jne
push
lret
inc
pop
cmpsb
mov
mov
xchg
cmpsb
fldl
push
jbe
sub
fbld
pop
push
lock
cwtl
sbb
pop
nop
xor
mov
das
pop
adc
fs
mov
mov
out
jge
dec
mov
mov
sbb
repnz
xchg
push
gs
dec
stos
out
test
dec
clc
cmp
pusha
test
jae
aad
pop
cs
sub
lods
and
cltd
fidivs
mov
insb
hlt
aam
cmpsl
add
push
mov
xor
in
and
push
lods
add
and
or
pop
scas
jle
or
rcrb
and
inc
add
mov
cmp
popa
test
cs
leave
jns
sbbb
movsb
nop
in
mov
mov
xchg
cmpl
inc
jb
jl
addb
adc
mulb
nop
iret
sub
lahf
cmpsb
in
in
or
fsub
mov
lret
xchg
lods
sahf
add
sub
int
jle
scas
mov
adc
sbb
dec
in
insl
in
sub
xor
movsb
popa
imul
push
sti
flds
inc
and
test
leave
sub
or
int3
push
insl
movsl
cmp
sbb
push
das
adc
movnti
jg
or
xor
sbb
loop
xor
test
aaa
or
cmpsb
fildl
jnp
add
mov
es
jns
arpl
inc
mov
lret
cmp
divb
test
repnz
stc
fsubrp
imul
je
les
aam
push
adc
ss
mov
push
mov
enter
push
mov
or
xchg
shll
inc
mov
mov
mov
dec
jae
add
jo
addb
mov
xchg
push
jge
push
dec
xchg
pop
sbb
repz
out
jno
mov
cltd
negl
cmp
and
cmp
imul
sbb
in
pop
and
cs
mov
dec
sahf
jbe
fildl
es
cmpsl
sub
mov
sbb
xchg
and
jmp
out
mov
sbb
sbb
repnz
pop
iret
mov
out
stos
pop
nop
and
fidivl
add
out
popf
imul
pop
ja
push
orl
cmpsb
dec
mov
sarb
ror
jb
incl
lods
mov
bound
notl
mov
aam
cmp
sub
and
inc
sub
add
jge
addr16
test
arpl
sbb
mov
mov
dec
popf
es
mov
jge
nop
sub
fnstcw
xchg
enter
ljmp
jno
out
mov
jmp
popf
in
test
xlat
sbbl
add
fsubl
sub
flds
jle
nop
adc
gs
mov
out
mov
push
pop
sbb
lea
dec
push
fisubrl
lock
push
and
xor
jg
adc
lret
lods
je
jmp
ljmp
push
test
mov
scas
xor
in
jae
mov
int
lret
roll
test
insl
sbb
ljmp
enter
sahf
and
mov
jae
call
aad
out
outsl
push
sbb
inc
fnstcw
pusha
push
in
pop
sti
jo
and
stc
int3
push
mov
pop
test
pusha
leave
in
xchg
push
sar
pop
out
sti
push
inc
add
mov
mov
pop
clc
popa
jne
and
inc
pop
enter
incl
mov
in
or
jmp
das
cmpsb
insb
gs
push
das
lret
mov
mov
pusha
pop
fildll
sub
mov
shl
addb
and
mov
cwtl
int3
cmp
jo
sbbb
lcall
hlt
fidivl
pushf
jmp
or
push
scas
daa
mov
lahf
cmpsl
clc
push
mov
mov
mov
inc
push
fldcw
push
adc
out
jns
dec
in
dec
inc
push
arpl
mov
lret
or
lret
leave
mov
pop
or
outsb
cmc
in
pop
push
fdivp
mov
xor
mov
mov
cltd
or
jnp
cmp
add
adc
js
xchg
in
pop
fwait
scas
xchg
data16
out
adc
xchg
cmpsb
nop
jp
mov
hlt
inc
repz
test
adc
push
dec
add
cmp
sbb
cmp
push
and
gs
loop
adc
sbb
rcrl
cmp
dec
into
adc
fsubrs
jg
inc
ja
call
ret
aam
xchg
push
push
cld
mov
or
xchg
push
negb
ret
and
insb
cld
and
aaa
fadds
mov
hlt
das
into
popa
cmpsb
inc
out
stos
in
or
sub
mov
repnz
pop
outsb
add
push
fld
ficompl
or
dec
pop
test
sbb
ljmp
pusha
dec
and
jg
aaa
rol
enter
fxch
cmp
xor
jne
dec
mov
sbb
lcall
or
add
mov
cli
jle
sbb
shlb
sub
fistps
jge
mov
fsts
xor
xor
mov
mov
add
xchg
jno
hlt
jle
les
test
dec
and
add
pop
mov
xchg
inc
xchg
adc
mov
jno
in
loope
and
jl
sahf
lock
xor
pop
aad
push
leave
or
push
xlat
cmp
dec
pusha
enter
sarl
gs
stc
fnop
inc
iret
sbb
adc
std
xor
cld
add
loope
mov
jns
shr
cmpsb
sti
cmp
outsb
dec
jecxz
mov
shll
subb
push
je
push
ljmp
loopne
pop
cwtl
repnz
push
lret
sub
sbb
mov
frstor
and
pusha
rcrb
in
mov
fwait
leave
mov
xchg
test
dec
add
sbb
popl
stc
mov
sub
sub
mov
mov
pop
mov
dec
les
inc
mov
xlat
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
jmp
cli
mov
addb
mov
orl
cmp
adc
push
adc
jmp
inc
out
lds
or
ret
test
fs
cmp
mov
jb
cmpsb
mov
in
das
push
pop
mov
jne
loop
push
xchg
rorb
addr16
les
cmpsl
int3
fistps
out
mov
cwtl
mov
push
sub
jge
xchg
pop
mov
xor
popf
sbb
les
jbe
iret
push
jne
dec
mov
sbb
cmp
dec
roll
insb
nop
sbb
in
mov
dec
dec
fisubrl
cs
fs
stos
mov
cld
lret
dec
jg
mov
inc
in
test
mov
or
jge
sbb
inc
fimull
lock
mov
jp
xchg
rol
sbbb
mov
icebp
mov
aaa
sub
pop
cmpsl
cmp
mov
xchg
popa
xchg
push
xor
nop
push
movsb
adc
and
cmp
jno
jnp
arpl
aas
inc
into
sub
ljmp
dec
pop
das
sti
movsl
stos
inc
insl
pop
rol
cli
pop
xor
push
jl
loope
repz
sbb
add
dec
mov
or
push
cli
mov
adc
sbb
jle
adc
cmpb
jb
add
add
call
les
dec
sbb
test
aas
and
clc
lds
dec
pop
notl
dec
jmp
mov
xlat
sbb
mov
jnp
push
sbb
xor
movsl
out
out
lret
loopne
mov
aad
sahf
mov
popa
test
aas
mov
or
fmulp
scas
ret
xchg
xor
xchg
test
jnp
push
mov
mov
daa
outsl
enter
pop
orb
fldt
cltd
mov
sbb
aam
mov
or
ret
xchg
sub
lcall
adc
jnp
lea
insl
push
sub
inc
mov
inc
hlt
jle
jmp
scas
inc
or
dec
push
rcll
loopne
pop
push
mov
mov
sti
pop
jg
in
mov
fwait
push
loopne
loopne
add
jns
les
inc
jle
mov
outsl
pop
sub
lods
fdivl
and
mov
dec
dec
xor
and
icebp
movsl
rcl
push
jmp
ljmp
into
das
sbb
inc
cltd
xor
int3
fs
cmpb
pop
xchg
scas
add
fwait
movsl
aaa
lods
fisttpll
out
lea
or
xor
mov
divb
mov
lea
fwait
adc
loopne
in
mov
jle
ds
aad
push
cmpsb
cmp
adcb
dec
pop
in
mov
in
cmpsb
sub
movsl
arpl
xor
in
std
adc
dec
stc
cmp
adc
in
xchg
mov
insl
je
cmp
cmp
mov
mov
push
fs
mov
mov
pop
and
fnstenv
pop
iret
xchg
in
jp
les
mov
aam
negl
adc
mov
cmp
push
rorb
das
out
scas
jb
jne
mov
paddsw
dec
or
out
xchg
pop
outsb
fcmovbe
push
repz
cmp
mov
idivl
cmp
aaa
pop
cmp
mov
cld
out
mov
rep
repz
sbb
aas
cli
mov
adc
pop
repnz
jge
lea
out
sub
xor
ds
fbld
ret
push
lods
xor
and
mov
dec
icebp
sub
jl
jae
es
jp
xchg
dec
aaa
outsb
icebp
fimull
push
xchg
stc
cmc
xor
cmpsl
or
dec
gs
jge
daa
test
aam
xorb
jmp
cmp
test
add
cmp
lds
add
xor
loop
jge
in
js
sub
inc
xchg
mov
inc
mov
xchg
in
cld
notb
fs
or
jae
jmp
adc
dec
mov
xchg
lcall
test
jg
rcr
test
fiadds
xchg
jae
inc
fimull
in
and
shlb
and
ret
adc
and
push
popa
jp
or
lcall
lret
cld
push
mov
xor
ss
out
dec
xchg
das
scas
xor
fsqrt
sub
arpl
test
jl
into
xchg
loop
cmp
int3
test
stos
mov
push
mov
xor
sbbb
dec
movsl
loope
inc
jge
mov
lea
stc
dec
stos
push
cld
aad
pop
or
shll
pop
iret
fistps
xchg
stos
scas
out
push
push
mov
add
test
shlb
jns
and
xchg
or
xor
cltd
movsl
jae
aam
jmp
in
adc
fmuls
add
jbe
mov
mov
pop
hlt
add
jl
rcr
stos
pusha
jecxz
dec
push
movsl
out
rolb
ljmp
cmpsb
push
add
pop
ret
dec
and
dec
or
fbld
push
mov
cmpb
inc
jno
int
xchg
cmp
cwtl
xchg
lahf
int3
jno
mov
das
and
mov
rclb
daa
test
test
aas
mov
into
xor
iret
loop
cli
pop
xchg
addr16
jecxz
cmp
xlat
mov
movl
jg
xchg
fwait
push
fcoms
js
inc
push
cs
data16
lds
lea
xor
mov
add
dec
xor
xchg
call
in
imul
jp
mov
cmp
inc
fmuls
add
movsb
mov
scas
cltd
xlat
push
jae,pt
rorl
xchg
mov
adc
xchg
sbb
mov
jle
inc
mov
pushl
push
clc
dec
jo
push
outsl
or
fisubs
sub
cltd
or
push
cli
sti
lret
sbb
sub
cs
mov
and
push
adc
test
imul
scas
add
roll
cmp
aam
movsl
pop
pop
decb
pop
pusha
call
jb
imul
sar
ret
pop
imul
in
cmp
xor
fcmovu
dec
mov
sahf
dec
sarb
pop
aad
rcl
ret
fldcw
ds
pop
fs
cli
sub
imul
jo
cwtl
fisttpll
mov
adc
pop
and
mov
das
cld
mov
xchg
jge
sahf
xlat
and
lret
sbb
add
pop
mov
int3
test
repz
lret
repz
ret
xchg
inc
sbb
negb
pop
mov
jnp
shll
das
and
int
sub
sub
fmulp
sbb
out
rorl
jnp
and
ret
xchg
mov
dec
mov
mov
stos
rcl
lret
mov
mov
test
sub
push
adc
lret
mov
aad
mov
dec
or
and
ds
sub
mov
jne
dec
cwtl
out
dec
pushf
xor
adc
gs
inc
and
fldenv
scas
jne
aam
push
add
cwtl
mov
inc
inc
dec
pop
scas
imul
cmc
jge,pt
ret
loopne
lock
filds
rcr
push
xor
in
test
fcoms
inc
jmp
mov
int
sub
mov
xchg
incb
cmp
xchg
lret
inc
aaa
adc
jnp
push
sbb
mov
out
dec
ss
add
mov
loop
inc
inc
cmpsb
js
cwtl
fmul
sub
sahf
mov
pop
loopne
xchg
mov
pop
push
fisttpll
cmpsb
inc
out
fidivs
cmpsb
test
outsl
dec
and
inc
pop
sbb
cmp
insb
in
xchg
fsubr
mov
mov
mov
adc
loopne
push
mov
dec
stos
xorb
push
mov
mov
mov
into
cmp
push
inc
ret
insb
and
adcb
push
dec
jb
jnp
mov
push
xchg
xor
jg
cltd
out
adc
movl
je
mov
add
fdivrp
xor
leave
repnz
mov
js
mov
xor
sub
adc
cwtl
inc
jg
ja
and
int3
nop
sub
lcall
movsb
popf
mov
pop
cmp
mov
js
call
aad
movsl
jle
fs
mov
and
lea
fidivrs
std
jecxz
nop
xchg
repnz
insl
iret
sbb
das
popf
lret
lret
ror
gs
test
hlt
jb
repz
xlat
lcall
mov
ret
pop
stos
mov
shll
mov
ljmp
mov
imul
push
fcmovne
or
or
repz
clc
xchg
pop
sbb
sub
inc
test
ja
mov
addb
incb
pop
adc
inc
xchg
sbb
jmp
les
fldcw
or
data16
mov
int3
xchg
jmp
inc
lahf
cmpsl
mov
testb
cld
and
xor
dec
jl
fildll
call
jne
or
xchg
push
cs
or
mov
loopne
lret
push
dec
xchg
das
cltd
cltd
sub
sahf
aam
imul
repnz
xor
js
sahf
sqrtps
mov
adc
or
jo
xchg
push
mov
mov
push
pop
sahf
ss
mov
movsb
lret
aas
inc
or
std
rcrl
cli
mov
mov
mov
add
inc
xchg
imul
gs
or
call
test
popa
pushaw
aad
inc
jl
std
sub
mov
sub
into
adc
or
push
hlt
jno
pop
in
push
filds
mov
cwtl
fwait
add
ret
or
ja
into
cmp
rcr
xchg
xor
and
imul
shll
popf
imul
out
jne
cs
es
and
int3
mov
outsl
movsl
out
push
es
and
mov
pop
addr16
jne
out
add
adc
cld
lods
jb
imul
pusha
fdivrs
add
cld
xor
ss
and
in
jmp
cmp
fisubs
stc
lods
shr
pop
scas
mov
inc
fildl
inc
icebp
xchg
addl
fcmovbe
jmp
mov
add
mov
rcr
mov
dec
call
mov
xchg
mov
push
stos
movsl
add
ret
push
int
leave
ret
cmp
je
cmpsl
test
loop
test
jnp
inc
shrb
dec
icebp
push
divl
popf
mov
fsubrp
out
cmpl
push
aaa
jg
push
in
ss
in
pop
fnstenv
out
int
add
lock
adc
mov
cmovno
push
mov
es
and
inc
pop
lret
xchg
popf
div
or
push
daa
out
and
test
inc
jnp
mov
xlat
sbb
push
and
test
mov
popa
fcomi
mov
push
xchg
and
in
orl
enter
mov
stos
fiadds
imul
sub
cmpsb
xchg
sub
imul
add
mov
jecxz
jecxz
pop
shrb
and
and
add
mov
ja
mov
enter
fdivs
out
mov
jbe
pop
add
stos
xor
jae
lods
ljmp
mov
cwtl
rcll
scas
push
push
push
test
fisttps
stc
xchg
icebp
mov
imul
sbb
sti
insl
and
sbb
mov
cmpl
cli
xchg
sub
jl
subl
js
rorb
test
mov
in
cmpl
test
gs
push
ljmp
jnp
xchg
xchg
push
pop
jmp
pushf
out
xor
hlt
mov
seto
rcr
sbb
pop
sub
mov
out
sti
lea
sub
or
in
push
xor
mov
mov
sub
ja
pusha
push
jnp
and
or
sti
je
xchg
movl
inc
out
or
mov
repz
stos
jp
stos
cs
scas
xor
into
jmp
sti
push
gs
out
orl
jmp
mov
lods
xor
sub
lods
and
les
sub
aam
das
sub
add
lcall
mov
mov
cltd
jle
addr16
pushf
lret
into
cwtl
fsub
push
jns
pop
xchg
sub
mov
pop
fmuls
rolb
lods
outsb
mov
adc
adc
in
jne
sub
push
out
adc
clc
fdivl
mov
pop
mov
icebp
out
mov
pop
ja
leave
cmc
roll
jecxz
mov
inc
adcb
add
add
in
pop
hlt
adc
clc
add
aas
int
aam
add
push
faddl
xchg
cwtl
xor
in
mov
adc
add
lret
lret
lock
lods
sbb
pop
xchg
loop
xor
mov
insb
push
ja
sub
ret
dec
jmp
test
dec
mov
out
sub
shl
ret
rcll
xor
or
pushf
xchg
lahf
xchg
cli
cmp
iret
mov
bound
add
mov
cmpsl
mov
xchg
into
test
outsl
sbb
int3
fdivl
or
mov
sub
jae
xchg
cld
aaa
in
fadds
dec
gs
fcompl
jl
pop
aad
sahf
jecxz
setp
adc
jmp
sub
xchg
add
into
or
xchg
sub
test
mov
or
insl
mov
mov
mov
mov
dec
mov
addl
inc
sbb
xchg
out
push
xor
negl
stos
stos
imul
adc
dec
mov
test
sub
pushf
cmp
xchg
in
sub
xor
mov
add
pop
fsubrl
fst
mov
push
rcll
cmpsl
pand
add
mov
dec
les
mov
scas
repz
jmp
sbbb
sbb
loope
xchg
in
or
outsl
ret
jns
in
add
int3
mov
cmp
pushf
dec
aam
das
adc
xchg
and
int
jmp
xchg
jl
popf
sbb
fmul
imul
cmp
xor
sarb
fsubrp
xchg
shrl
pop
fcmovb
cmp
adcl
mov
mov
int
jg
cmp
cs
jb
or
or
or
mov
lods
lret
pop
stos
repnz
cmc
dec
adc
dec
test
push
push
mov
mov
das
dec
xchg
lcall
mov
or
outsl
jno
pop
movsl
xchg
ja
mov
mov
pop
repz
es
sub
fsubs
jo
test
pop
cmp
mov
loope
or
jo
sbb
out
nop
adcb
dec
jne
out
fcmovbe
loope
jp
inc
frstor
cs
jecxz
adc
sub
pop
mov
enter
repz
add
and
fcomps
mov
sahf
out
and
scas
out
add
add
ljmp
scas
and
dec
cmp
cmp
mov
sbb
pop
sarb
mov
stos
aad
pop
mov
xlat
aaa
lods
or
push
pop
cmp
ds
mov
test
dec
add
push
int
lods
cmpsl
mov
rcrb
adc
sbb
shlb
add
xchg
adc
cmp
adc
or
xchg
cmp
fldenv
mov
inc
sahf
mov
subb
stc
sahf
sub
sbb
lret
jecxz
push
xchg
cltd
shlb
adc
jne
push
sub
outsl
out
jo
add
pop
jne
adcb
xchg
xor
sti
mov
loope
int
inc
push
cmpsl
lods
cmpsb
push
cmp
fxch
cltd
call
mov
inc
push
add
adc
leave
ret
lock
pusha
xchg
imul
hlt
andb
out
xchg
pushf
shlb
scas
inc
fsubs
insl
xor
cmp
dec
cmpsl
mov
jbe
push
jo
jmp
stc
loop
out
add
loopne
in
in
dec
cmpsl
js
cli
in
sub
fildll
iret
sar
insl
xlat
popa
shrb
movsb
mov
js
inc
push
push
inc
add
dec
adc
mov
ljmp
xchg
mov
or
inc
dec
jbe
jo
and
xchg
iret
inc
ret
mov
adc
xor
mov
xchg
cmpsl
adc
push
jmp
pop
sbb
adc
pop
sub
pop
push
lods
or
pop
mov
div
je
push
int3
loope
outsb
es
dec
sbb
push
jno
imul
cmp
and
sub
and
pusha
mov
cs
outsl
cmp
lcall
pop
cltd
inc
pop
dec
mov
test
leave
jns
dec
or
mov
loop
test
adc
ljmp
jle
add
je
cli
in
lahf
sub
cwtl
leave
or
sbb
mov
ljmp
stos
or
push
jg
sbb
sahf
pop
int3
push
push
into
push
dec
mov
outsl
sti
daa
push
jp
lret
js
mov
and
pop
fwait
repnz
mov
inc
test
das
mov
jge
in
lcall
and
mov
leave
sbb
sub
inc
dec
lcall
ret
and
and
sbb
clc
cmp
into
sbb
mov
dec
sbbb
scas
xor
sub
cmp
mov
mov
xchg
out
stos
lret
icebp
ds
fcoml
inc
sbb
roll
jge
jl
push
and
xor
mov
pop
jg
fs
arpl
xlat
in
int
loope
jp
xchg
loopne
arpl
add
arpl
int
mov
sbb
into
test
outsl
ljmp
fsts
imul
mov
cltd
ret
add
loop
enter
js
in
cmp
cmp
fs
ficoml
loopne
jl
aad
icebp
aaa
stos
mov
push
sub
mov
inc
fldl2e
mov
insl
xor
popa
out
sbb
xchg
daa
fdiv
dec
mov
adc
mov
cmp
jg
stos
push
or
xchg
insl
inc
mov
inc
push
aaa
pop
mov
dec
pop
mov
leave
adc
xorb
jne
std
push
sti
mov
rcrl
enter
imul
jg
cmp
ret
lea
mov
sahf
add
cmp
outsl
ja
arpl
scas
mov
push
adc
jg
sbb
inc
mov
or
les
addr16
aad
inc
or
cmp
cwtl
sub
fsts
ret
push
and
lret
imul
push
int
negl
add
js
pop
jl
pop
cli
shrb
pop
movb
push
jne
dec
sub
jb
adc
sub
cs
aas
adc
ljmp
hlt
push
into
sti
cmpsb
and
xchg
lea
xchg
ret
cli
push
sahf
mov
sarl
inc
jl
pop
ror
xchg
mov
or
inc
xchg
adc
fsub
je
test
or
fnstsw
cmp
xor
and
aas
adc
ljmp
add
popa
ret
std
in
sub
ficomps
push
outsb
add
rcrb
in
inc
and
inc
mov
jg
pusha
ret
push
insb
jp
jmp
test
pusha
push
xor
sub
pusha
aas
sbb
add
popa
jle
fcomi
cli
adc
fdivrl
cmc
sub
fldenv
pop
cmp
pop
inc
ljmp
xchg
dec
xchg
aad
sbb
pop
adc
fs
shll
sti
or
sar
stos
ja
inc
mov
aad
mov
push
lods
sbb
cmpb
pop
testb
int
rcr
sti
rcrb
lea
pop
xchg
je
out
mov
nop
sbb
push
add
cmp
loop
ja
inc
das
shl
mov
lds
mov
mov
rcll
dec
mov
sbb
jg
fdivrl
lcall
or
jg
mov
xor
xchg
in
mov
sub
cmp
in
gs
lods
push
push
jg
pop
pop
mov
addr16
leave
mov
enter
xchg
push
stc
xor
test
mov
xchg
int
pop
dec
nop
sarb
ja
dec
and
mov
popa
pop
inc
or
pop
insb
sbb
pushf
nop
popf
in
xor
push
divl
in
sub
cmp
xor
add
add
movsl
xlat
imul
mov
add
and
jp
push
cwtl
in
lret
ss
int
mov
stc
ffreep
cmp
js
push
push
xor
loopne
in
aad
xor
xchg
jl
mov
popf
fstpl
imul
mov
adc
push
mov
lock
pop
fwait
mov
and
rdpmc
call
fbld
xchg
clc
xchg
lcall
int3
repnz
hlt
pop
sbb
mov
xor
dec
xor
repnz
or
inc
jg
xor
lods
mov
rorl
repz
cmp
cmp
loop
adc
jg
shlb
arpl
mov
iret
imull
push
dec
sub
jne
sub
mov
mov
clc
sbb
cmc
fdivl
push
or
jecxz
xor
jl
adc
xchg
xlat
pop
cmp
outsb
repz
clc
mov
fiadds
lret
div
lock
int3
pop
ret
cmpsl
mov
in
stos
std
dec
sbb
sbb
arpl
negl
mov
and
lods
mov
js
add
adc
lret
push
mov
ret
movsl
or
ds
aad
aam
shl
inc
pop
stos
mov
test
sub
jmp
ret
or
je
rcr
pop
or
enter
adc
fildl
adc
xor
paddd
lret
imul
adc
scas
imul
imul
dec
push
out
and
lcall
lcall
jecxz
push
out
fdivrs
sub
aaa
mov
fucom
inc
mov
cmp
cmc
mov
mov
mov
jne
sub
addr16
dec
lret
out
mov
pop
xchg
adc
pop
fiaddl
xchg
push
mov
movsl
mov
lcall
xor
andl
ret
lds
push
add
cmp
leave
rcrb
inc
lds
cltd
ror
add
dec
xchg
dec
ljmp
jns
int3
packuswb
cmp
filds
gs
leave
stos
mov
mov
cmp
out
mov
and
inc
mov
or
orb
addl
sti
gs
pop
shr
lret
cmp
mov
jne
mov
pushf
arpl
aas
adc
dec
or
cmpsb
mov
es
or
inc
sbb
gs
push
sbb
adc
xchg
jo
mov
out
mov
pop
cmpsl
xchg
cmpsb
cs
and
jp
mov
out
mov
div
int3
jno
push
jp
fcoms
cmc
xor
jge
adc
cmp
daa
arpl
mov
mov
and
test
pop
cmpsl
bound
in
shrb
pushf
mov
enter
mov
cs
and
sarb
dec
data16
outsl
es
inc
repz
orb
ficomps
or
stos
pop
popa
jecxz
jmp
or
mov
mov
or
inc
xchg
scas
test
push
add
leave
leave
adcb
xchg
jg
cmp
outsl
js
xorl
sbb
fists
jo
xor
pop
vpackuswb
jno
cmc
xchg
push
and
xchg
pop
arpl
xor
dec
je
inc
push
cs
loopne
and
test
inc
out
sbb
stos
sbb
lret
popa
mov
scas
push
orl
xor
dec
dec
add
test
sub
mov
jns
add
or
idiv
sbb
adc
dec
sub
lahf
cmp
imull
inc
aas
add
inc
jae
dec
lea
lahf
push
cmp
in
lret
cli
sbb
cmpsl
mov
mov
divl
adc
add
cld
mov
sti
sbb
js
rorl
mov
daa
mov
xchg
loope
push
cmp
movups
push
sahf
mov
mov
not
mov
jne
mov
in
mov
mov
adc
rcl
or
scas
push
sub
push
sti
ss
push
push
out
xor
adc
popl
mov
jge
sub
mov
jns
add
mov
adc
xchg
rcrl
or
sar
dec
sarb
je
iret
add
inc
fisttpll
mov
inc
add
or
xor
sbb
jge
and
je
dec
aaa
repz
or
lcall
pop
cwtl
loope
lret
cmp
xor
add
test
push
dec
test
jp
mov
jmp
sub
xchg
add
mov
sbb
mov
lahf
dec
mov
jns
rclb
mov
xchg
cmpsl
ret
jo
push
inc
test
int3
imul
insb
jae
test
sub
add
push
jo
push
mov
cmc
adc
pop
pop
rcrl
inc
dec
test
dec
insl
push
cmp
pop
cwtl
jp
popa
or
mov
jp
push
sub
insl
add
lret
ror
nop
or
movsl
daa
sarb
addb
lcall
fmuls
adc
mov
lcall
mov
fidivrs
jnp
lods
iret
test
sahf
std
rclb
pop
push
lea
in
xchg
xchg
or
int3
fimuls
xchg
jne
jle
mov
mov
lea
fs
xchg
pushf
test
cld
cs
xchg
stc
dec
xor
inc
push
pop
pop
flds
inc
aam
pusha
shl
pop
or
inc
clc
and
roll
add
cmpsl
sub
es
enter
lods
lods
jg
dec
mov
outsb
xchg
test
popa
push
sbb
mov
jb
mov
jl
pop
shll
dec
add
adc
jne
xchg
mov
adc
and
pop
data16
cltd
jno
shr
xor
adc
and
jo
mov
jnp
out
xor
sbb
xchg
dec
fsubrs
pop
fmul
outsb
shll
jl
ficoms
enter
dec
cmpb
insl
fwait
dec
lods
sbb
loope
aas
aaa
sbb
data16
jmp
pusha
mov
out
push
out
jns
mov
mov
adc
popf
dec
ss
mov
push
lods
xchg
aad
addr16
pop
cs
bound
cld
adc
ljmp
lods
mov
bnd
push
ret
or
fists
clc
jge
jne
not
jne
and
inc
adc
sub
sub
jp
or
fidivs
movsl
mov
cmpsl
daa
inc
scas
imul
test
push
xchg
movsb
test
sub
insl
add
aaa
xchg
inc
dec
ss
cmp
push
adc
test
add
out
movsb
lods
lea
push
xchg
imul
mov
pop
inc
xor
sbb
dec
mov
ljmp
or
push
jae
fadd
add
ss
iret
jbe
lahf
sbb
lahf
adc
push
cs
arpl
or
cmp
insl
and
sbb
lcall
test
mov
stos
arpl
jns
mov
lret
mov
repnz
fs
mov
cltd
imul
and
mov
or
popa
mov
pop
and
adc
subl
inc
dec
ds
dec
inc
jbe
cmpsb
lock
mov
adc
inc
xchg
xchg
cs
ret
xor
ret
aam
xchg
push
xchg
pop
mov
std
std
out
daa
fs
jecxz
mov
pop
sbb
pop
popf
das
fstl
or
rcrb
outsb
mov
ficompl
dec
mov
cld
and
sub
in
pushf
add
shll
cltd
mov
clc
pop
andb
mov
iret
addr16
mov
out
or
sub
ret
hlt
mov
ss
inc
jbe
faddl
aaa
ja
push
dec
incb
or
sbb
mov
stos
jae
call
lods
push
test
test
ja
pop
in
inc
push
lea
lcall
jo
testl
rcr
loopne
movsb
xchg
mov
mov
test
lods
test
in
cmp
cmpsb
dec
xlat
scas
cmp
test
js
js
lods
xor
inc
inc
cld
sub
xchg
xchg
aad
fs
and
mov
pop
stos
and
xor
insl
or
pop
pop
jg
loopne
outsl
lea
enter
in
sbb
decl
push
push
test
inc
sub
mov
xchg
xchg
andb
fisttpl
or
fwait
mov
outsb
mov
add
enter
push
loope
fstl
daa
push
mov
pop
jae
dec
add
and
mov
mov
inc
dec
scas
sbb
inc
jae
xor
shrb
inc
or
ljmp
fnclex
lods
ficompl
rolb
shll
cmp
out
in
push
sub
popf
or
cmp
mov
mov
push
jl
push
sub
popf
addr16
mov
outsl
push
mov
fstps
push
out
imulb
adc
insb
jnp
push
gs
imul
mov
sub
loopne
inc
sub
and
and
and
xor
shr
leave
push
pop
mov
pop
jbe
aad
push
mov
cmp
pusha
xchg
sbb
and
sbb
mov
loope
test
lods
cmp
pusha
mov
xlat
dec
dec
pop
call
rolb
mov
int
dec
and
lret
jmp
jb
add
dec
dec
push
xchg
pop
es
lahf
push
push
sub
lods
mov
and
pop
push
cmp
iret
push
dec
fsub
xor
pushf
stos
pop
loop
cmp
pop
fcoms
push
push
das
mov
or
inc
test
jp
sub
neg
sbb
int3
ret
hlt
mov
sahf
inc
ror
aas
mov
aad
dec
xor
cwtl
mov
mov
push
loop
sbb
daa
mov
es
mov
aad
mov
scas
test
mov
std
shll
mov
data16
pop
add
and
fmul
cmp
js
and
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
jmp
inc
sbb
push
mov
aad
push
xchg
sbb
mov
addl
int
adc
cli
aam
mov
lea
or
jmp
std
xor
push
sbb
and
xor
and
jle
shll
mov
outsl
push
in
nop
jb
or
fcoms
mov
fnstenv
and
hlt
or
mov
adcb
cs
sbb
pop
jecxz
call
push
loopne
insb
int
ljmp
adcl
les
and
out
mov
rclb
lea
add
push
sahf
sub
mov
mov
cwtl
ljmp
out
aam
add
mov
stos
mov
sti
cmc
ljmp
lret
iret
xchg
in
scas
outsb
scas
mov
out
mov
outsl
and
inc
test
jbe
xchg
add
nop
xlat
rcrl
lods
cmpsl
movsl
cmp
cmp
cwtl
or
jae
xchg
scas
sarl
sarb
add
push
mov
jp
pop
mov
ljmp
dec
mov
cmp
pusha
mov
mov
movsb
insl
mov
mov
add
jbe
rcrl
xchg
sbb
add
mov
jmp
lret
fimuls
repz
cltd
mov
sub
adc
xlat
dec
adc
cmc
mov
pop
iret
or
sti
fstpl
in
mov
dec
pop
pop
mov
sbb
or
jbe
mov
pop
les
xor
sub
sbb
repz
xlat
int
pushf
or
cmpsb
aaa
jns
cli
adc
lock
and
and
push
mov
adc
rcll
xor
jle
adc
mov
sub
lods
sub
rcr
push
adcl
test
cltd
pusha
cmpsl
xor
pushf
cs
xor
lea
scas
jmp
mov
in
lock
adc
xor
push
clc
mov
mov
xchg
mov
adc
cmp
sti
outsl
addr16
icebp
mov
ljmp
ret
testl
xchg
dec
xchg
sub
ljmp
out
pop
shlb
inc
mov
cmpsl
jno
mov
push
ss
cld
pop
cli
add
adc
xlat
dec
adc
push
sahf
test
ja
xchg
int
sbb
outsl
pop
pop
xorl
outsb
dec
addr16
and
outsb
or
xor
xchg
add
andl
sbb
cmp
push
adc
in
dec
mov
dec
xchg
adc
pop
loope
neg
add
jmp
aam
test
js
pop
sub
xchg
pop
inc
cmp
out
mov
dec
rcl
lret
popf
lea
dec
ret
fstl
sbb
xlat
adc
xchg
mov
pop
fwait
jbe
mov
push
rcrb
push
and
scas
pop
dec
iret
add
adc
loop
out
add
cs
out
adc
stos
jns
xor
xchg
popa
pop
div
xchg
push
ficompl
sub
fsubrp
stos
xchg
mov
jo
dec
xchg
les
adc
stc
mov
adc
jp
inc
imul
push
pminsw
push
sahf
xchg
adc
mulb
outsl
pop
mov
int
mov
cmp
push
in
dec
or
jl
in
sbb
mov
outsl
xchg
out
pop
pop
xlat
pop
fld
ja
inc
add
jno
enter
mov
cmpsl
icebp
xor
jae
pop
loopne
mov
xor
pop
mov
jecxz
or
enter
cmp
repnz
mov
jg
mov
cli
push
rcrb
dec
cmp
shrl
fadd
jl
shlb
aam
xchg
xor
mov
mov
shll
inc
adc
mov
jp
packuswb
rclb
jmp
mov
mov
inc
clc
lahf
ss
outsb
daa
xchg
mov
arpl
or
fwait
jo
mov
and
popf
jno
mov
ja
jb
inc
outsb
stos
sbb
mov
push
cmp
lods
pop
or
fsubs
cmp
ret
sbb
ud1
xor
iret
mov
rorb
cs
lret
fstpt
fstpt
push
push
call
fidivrl
xor
fbld
push
sub
jns
mov
hlt
stc
inc
popa
add
sbb
push
cli
insl
xchg
cltd
mov
mov
imulb
out
cmc
test
jg
test
stos
loopne
lret
cmpsl
lea
mov
push
push
sahf
push
imul
adc
aaa
mov
mov
imul
loop
scas
test
rclb
jl
xor
cmpsl
repz
loop
mov
std
in
outsl
fs
xchg
cmpb
and
in
adc
push
jns
pushf
add
adc
imulb
mov
testl
fstpt
loopne
jne
into
add
add
clc
ljmp
push
inc
and
pop
mov
daa
repnz
cmp
xor
mov
rclb
or
mov
test
std
aaa
scas
lret
or
inc
mov
mov
movsb
mov
jmp
and
xchg
outsb
les
sub
enter
stos
jl
movsl
movsl
push
xchg
or
sahf
jno
js
pop
mov
cld
sbb
mov
fsubs
jne
inc
pop
mov
fwait
data16
repz
les
nop
fldl
in
sbbl
mov
xchg
jge
test
xor
add
xchg
or
into
loop
xor
add
inc
cmp
fprem
dec
push
icebp
shll
mov
aad
jp
xor
aad
lahf
arpl
insb
insb
pop
cltd
insb
add
jg
sbb
push
inc
loopne
lret
dec
ret
mov
xor
cmp
cmp
xor
in
outsb
ljmp
adc
daa
scas
loope
das
inc
ss
scas
xor
dec
popf
mov
sub
loope
in
fdivl
ret
and
push
adc
dec
out
xchg
pop
cmp
jb
jg
test
and
mov
push
test
dec
fsubr
inc
push
pop
and
inc
fsubs
add
ret
and
xchg
hlt
fs
or
sbb
mov
xchg
sbb
test
jmp
xlat
xchg
pop
stos
in
stos
popa
mov
mov
scas
lcall
shll
pop
push
adc
jbe
push
sub
cmp
jo
imul
mov
cmp
decl
dec
lret
lds
adc
mov
outsl
mov
mov
ja
xor
jne
cltd
sub
popf
push
or
push
fldt
in
and
jo
lock
lret
add
pop
dec
adc
cltd
push
and
jo
sbb
call
aam
cmp
outsl
or
push
adc
inc
pushf
dec
cwtl
pop
shrb
inc
fwait
mov
fs
cmc
scas
xor
lods
int3
push
fisubrs
push
stos
push
push
nop
add
cltd
or
jl
in
cmc
stc
mov
int3
push
xor
sub
aas
cmp
scas
mov
jle
mov
inc
imul
cli
popf
xchg
fwait
movb
mov
push
sub
mov
adc
push
loope
andl
sbbl
cwtl
clc
xor
or
jp
push
sti
cld
popa
cmp
and
mov
jg
test
sahf
mov
or
xor
cwtl
lcall
es
out
adc
call
fcmovu
bound
push
pop
mov
aam
cmpsl
xor
cmp
xchg
jl
loopne
xor
cltd
dec
pop
and
adc
test
xor
and
push
ror
nop
mov
insl
adc
jecxz
test
mov
imul
ja
test
adc
push
add
mov
mov
jb
fildll
ss
mov
xchg
xchg
lret
fisubrl
cmpsl
sub
mov
in
sahf
xor
pop
xchg
fldz
sub
jle
mov
xor
sbb
pop
inc
inc
and
les
push
mov
pushf
test
divb
pusha
ljmp
ficomps
hlt
outsl
ds
in
das
sahf
repnz
mov
out
adc
in
das
shr
sbb
jb
xchg
jp
adc
jmp
jle
mov
mov
sub
popa
andl
es
out
xchg
mull
jno
scas
jl
jle
xchg
cltd
stc
xchg
pop
pop
movsl
cli
inc
hlt
xchg
lods
jno
shrb
or
testb
adc
orl
jmp
out
push
adc
cld
pop
cmp
out
daa
scas
and
pop
fcmovnu
notl
mov
ljmp
xchg
mov
inc
adc
and
pushf
pop
mov
xorb
mov
test
lods
mov
jge
jnp
adc
mov
xchg
jl
inc
mov
leave
mov
rclb
int3
inc
cmpsl
aas
loopne
sbb
sbb
daa
push
ljmp
push
out
mov
sbb
dec
jle
das
or
inc
or
inc
and
xlat
arpl
enter
imul
pop
dec
push
inc
mov
bound
or
call
cmp
out
dec
fisubl
xchg
mov
mov
mov
loope
mov
inc
add
jo
dec
inc
mov
adc
sub
pusha
pusha
lds
pop
mov
ficoml
add
test
hlt
ss
mov
add
pop
fcmovb
xchg
push
js
bound
rol
lret
repz
sarw
xchg
repz
rcrb
xor
pop
xchg
dec
cmp
test
xchg
test
jb
in
aam
outsb
jae
out
inc
inc
adc
mov
cmpl
in
push
dec
andb
ret
push
push
sub
jle
loope
mov
mov
test
xor
outsb
mov
sbb
imul
rolb
cld
pop
sbb
ret
inc
xchg
notb
dec
cld
mov
jecxz
ja
cmp
das
and
pop
push
and
shr
xor
push
bound
fsub
dec
stos
nop
jp
sbb
outsb
adc
cmp
int
cmpsl
xor
push
adc
sbb
push
mov
stos
in
add
rclb
pop
push
lar
mov
mov
mov
inc
lds
nop
fsubl
xchg
push
insb
lret
mov
les
inc
fmuls
mov
adc
dec
packuswb
shrl
fadds
push
jmp
add
mov
xor
dec
or
xchg
shll
mov
dec
loope
inc
dec
bound
inc
cmp
dec
cmc
mov
mov
cmp
jle
mov
cmpsl
out
add
cwtl
mov
xor
insb
gs
bound
out
repz
int3
add
fs
scas
lret
push
xchg
js
cmpb
mov
push
fidivs
jo
je
jg
adc
mov
pop
ja
mov
vcvttsd2si
bound
adc
fsubs
mov
add
aaa
in
push
insl
inc
xchg
shr
cli
out
int
pop
jge
out
fs
mov
push
mov
mov
dec
dec
cwtl
mov
add
pop
jnp
jg
sbb
jb
std
or
cmp
jae
fs
test
mov
aad
jo
jl
cmp
pop
mov
and
cmpb
xchg
sub
xor
cmpb
jecxz
push
cmp
mov
es
xchg
loopne
and
push
leave
in
rolb
xchg
in
arpl
mov
push
sbb
adc
jae
jg
jecxz
cmp
stos
icebp
ret
dec
xor
cld
mov
mov
mov
mov
inc
fbld
ljmp
test
stc
insb
addl
xchg
jnp
scas
outsl
leave
jns
jge
dec
loope
ds
lea
or
js
pop
adcl
push
lret
movsb
jo
sti
cmp
sbb
fdivl
into
fisubs
push
sub
cmp
cmp
pop
jae
fcmovnb
push
jecxz
dec
or
imul
mov
and
xor
sbb
cmp
pop
call
mov
sbb
adc
adc
jecxz
fs
test
sti
sub
sub
lods
subb
dec
fwait
jne
negb
decl
fwait
xor
mov
add
and
push
aas
add
add
movsb
dec
int
nop
sbbl
and
fs
push
add
jae
mov
and
ljmp
movsl
xor
jecxz
test
pop
leave
cmp
jbe
cmp
leave
popa
xchg
push
adc
dec
lret
call
mov
out
xlat
in
cmpsb
mov
cmp
test
adc
inc
jl
xchg
pusha
mov
scas
mov
and
lahf
jb
jnp
mov
fidivrs
sub
cmp
jo
or
scas
lea
xlat
hlt
add
adc
adcl
cmp
cld
jge
hlt
arpl
in
xchg
sub
sub
sbb
fs
ret
and
fidivrl
cmp
aad
lods
idiv
icebp
jnp
adc
cld
icebp
push
xchg
andb
in
aam
stc
addr16
mov
mov
jb
and
enter
imul
push
stos
shl
xlat
addr16
push
jl
mov
push
and
mov
or
inc
fcmovnbe
mov
push
mov
mov
ss
out
out
aaa
lds
cs
test
push
mov
jl
arpl
lret
fwait
mov
aad
shrl
xchg
mov
pop
mov
sub
push
xchg
mov
pop
lods
movsb
jecxz
inc
in
pop
loope
sahf
dec
jne
leave
testb
push
jo
mov
dec
mov
mov
cmc
ret
ljmp
cmpl
punpckldq
sbb
call
jbe
nop
jne
add
jecxz
daa
push
xchg
pusha
xor
in
xor
and
add
mov
inc
sbb
stc
xchg
push
sub
aaa
andl
aam
jbe
stos
push
mov
and
dec
or
sbb
and
pxor
movsb
inc
jmp
cmp
cmpsl
shr
dec
in
mov
insb
lock
call
cmp
outsl
into
fildl
cmp
jge
xlat
lds
adc
xchg
xor
test
dec
xchg
dec
push
jb
jb
xor
mov
fidivrl
fbstp
fstl
das
add
jno,pt
mov
dec
mov
lret
xchg
jbe
out
aam
ret
mov
push
push
mov
sbb
test
test
pop
stos
inc
test
in
in
push
cmp
leave
lea
adc
pop
mov
mov
pop
jbe
iret
sub
insb
lock
int
and
sbb
out
aas
sbb
ds
cmpsl
negb
repz
pop
pop
inc
cmc
sub
test
pop
clc
pop
cwtl
xor
add
sbb
lret
jecxz
push
rclb
mov
rorb
sbb
je
fstps
push
sub
daa
inc
jo
cmp
mov
aam
jl
mov
ljmp
pop
rolb
in
jmp
xchg
mov
or
pushl
jo
pop
cmpsl
out
rclb
pop
cmp
call
cmp
jecxz
push
scas
js
xchg
xor
dec
stos
mov
xor
dec
leave
mov
data16
mov
add
adc
jns
xchg
push
lods
adc
cmpl
or
sub
cmp
adc
movaps
xchg
push
cmc
xor
pop
xchg
xchg
sub
push
jmp
inc
mov
push
fiadds
scas
xorb
outsl
mul
mov
stc
xchg
push
and
mov
test
loopne
sub
fistps
in
clc
mov
mov
std
sbb
in
jno
and
fcmovne
mov
xchg
jge
sbb
adc
std
je
pop
pusha
mov
xlat
mov
sub
dec
repz
in
ret
jo
fnclex
dec
sahf
outsl
add
ds
push
dec
pop
and
int3
outsb
in
xchg
mov
mov
mov
outsl
cltd
sub
loope
jnp
lods
inc
fdivp
subl
adc
inc
add
push
dec
or
jbe
mov
jnp
pop
ja
mov
mov
or
mov
scas
aas
inc
mov
je
ss
fwait
push
sub
push
push
ret
popa
repnz
rcr
xor
mov
aaa
sub
cltd
je
cld
xchg
adc
orb
les
mov
adc
bound
arpl
test
inc
cmp
xlat
add
call
fistps
pop
pop
insb
filds
jns
push
dec
insl
test
pop
cmpsb
pop
cmp
leave
inc
push
aad
mov
xchg
test
mov
in
inc
xchg
inc
test
mov
push
popf
int3
push
repz
out
add
pop
cmp
inc
cltd
lods
pop
ret
dec
ss
sahf
mov
jne
bound
push
mov
mov
and
inc
sub
ja
mov
div
rorl
mov
xchg
sahf
or
or
mov
addr16
lret
sbb
fidivl
ds
out
sbb
dec
inc
lret
rcrl
mov
nopl
push
or
rorl
les
fcoml
mov
je
or
pop
lret
ficomps
xchg
mov
dec
test
jle
aas
icebp
outsb
or
mov
incl
mov
xchg
subl
sbbl
adc
icebp
jo
rcrl
movsb
xchg
lods
std
sarl
repz
sbb
inc
xchg
js
imull
lods
dec
mov
aam
and
mov
ror
or
decb
mov
pushf
jl
push
cmp
aad
and
xlat
std
or
test
rorl
call
js
fadd
das
jg
orl
ds
shll
fsubl
cmp
or
std
aad
jns
stc
dec
mov
ja
jecxz
cs
mov
or
decb
sbb
jbe
pop
incl
cmc
cmp
sti
or
divps
lret
lods
jle
push
jle
hlt
les
cmpsl
mov
je
sub
push
cmp
pushf
insb
xchg
insl
js
fistpl
mov
test
adc
mov
test
and
sub
and
mov
xchg
xor
imul
stos
mov
scas
mov
mov
or
fdivrl
push
fcompl
and
std
sti
mov
arpl
stos
mov
int
es
das
enter
mov
mov
or
jo
push
pop
pop
fadds
mov
leave
orl
jae
xor
daa
std
lahf
sub
cmp
and
ja
js
dec
sub
sub
sbb
rorl
mov
lcall
xor
stos
imul
cmp
jo
shll
loope
addr16
jne
add
mov
cld
pop
cmpsl
or
xorl
sbb
stc
or
push
mov
add
and
dec
jl
aam
rorb
xor
sbb
cmp
jno
mov
cmpb
pop
mov
in
sub
jle
add
mov
jb
add
fprem
pop
lods
jmp
dec
std
push
cmpsb
and
lea
int
clc
fs
mov
sub
lea
imul
cmp
notl
into
mov
js
ljmp
insb
loop
pop
ljmp
lahf
adc
pop
and
rorl
xchg
pop
pop
adc
decb
push
je
repz
enter
mov
testb
sub
loop
sbb
cmp
imul
cltd
pop
xor
shlb
icebp
jmp
add
orb
jg
adc
mov
popl
sbb
push
xchg
ficoml
xor
dec
xor
andl
mov
pop
mov
pop
pop
push
add
je
jno
jp
ret
pop
fwait
mov
fnstsw
xchg
mov
dec
mov
push
sbb
adc
cmp
mov
pop
pop
scas
mov
push
adc
and
push
or
and
lahf
or
xchg
push
aas
xor
scas
add
and
outsb
mov
sub
mov
nop
in
adc
in
mov
int
fcomi
jge
mov
rorb
lods
scas
push
mov
mov
cld
mov
cmp
inc
leave
popa
repz
inc
adc
orl
mov
rorb
pop
mov
sbbb
push
pop
adc
sub
lea
push
jecxz
jae
stc
call
cmpsl
arpl
cli
popf
pop
loopne
jmp
aam
shlb
pop
pop
idivl
sub
and
add
loope
inc
inc
data16
mov
fisubrs
mov
inc
cmp
push
push
in
sbb
in
pop
int3
stc
cli
cmpsb
mov
xchg
inc
test
icebp
jl
rorb
shrb
inc
addr16
cld
or
idivl
mov
sub
cmp
fdivrs
inc
outsb
je
bnd
inc
mov
mov
hlt
sub
out
sub
call
mov
push
das
int3
push
mull
add
in
into
les
jge
inc
adc
push
and
imul
lds
lret
movsl
xchg
hlt
jne
loope
mov
push
jnp
push
ret
pop
test
inc
and
xor
popa
jle
cmp
int
cmp
dec
sbb
xor
sahf
ja
cmp
stos
sub
cli
add
jns
aam
xchg
inc
out
xor
xor
movsl
lods
pcmpgtb
out
repnz
ret
mov
dec
nop
sbb
hlt
add
mov
push
jae
movsb
push
add
addr16
inc
push
stc
and
fisubs
pushf
js
dec
fdivrs
mov
js
inc
in
xchg
mov
cmp
jecxz
inc
jae
adc
inc
or
pop
cwtl
pop
inc
data16
pop
jb
xchg
ret
jp
xchg
shlb
je
daa
mulb
mov
cmc
clc
stos
adc
pop
adc
stos
sti
mov
outsl
or
sub
or
lods
sub
xchg
insl
and
cmp
jno
adc
sub
adc
test
adc
cld
and
push
or
in
mov
out
movsl
mov
push
adc
ds
lcall
repnz
int3
jge
cmp
int3
add
es
lods
hlt
stc
leave
dec
fsubrs
loope
jle
pop
call
sbb
pushl
insb
inc
inc
and
jge
pop
rorb
cwtl
lret
fdivl
jnp
rolb
fdivl
cs
xchg
repnz
push
gs
sub
push
lods
gs
test
add
push
jae
inc
int3
push
test
or
into
dec
dec
sbb
arpl
push
insb
test
mov
sti
inc
inc
xchg
pop
jnp
outsb
inc
hlt
xchg
jo
lods
ret
inc
cmp
push
cmpsl
hlt
pop
mov
push
negb
shlb
xchg
sbb
in
rolb
xlat
xor
and
pop
iret
cmp
in
pop
cmp
fldenv
push
mov
push
mov
popa
pop
les
mov
push
adc
jbe
sbb
mov
add
pop
xchg
add
inc
jmp
mov
ss
aaa
inc
inc
or
icebp
scas
jmp
mov
popf
aam
insb
cmp
repnz
sbb
jge
insb
cmp
cld
mov
and
mov
push
jge
out
mov
out
mov
mov
movsl
pop
adc
pop
push
push
insl
mov
add
call
jecxz
leave
add
idiv
adcb
movsb
sbb
xor
les
scas
call
or
add
clc
pop
adc
pop
in
je
push
ljmp
mov
cld
push
pop
add
adcl
mov
jbe
inc
daa
sbb
dec
push
adc
pop
cli
ret
pop
mov
adc
jno
mov
pop
sub
or
lcall
popf
sbb
into
or
repz
dec
std
out
xor
cmp
lret
insb
push
clc
dec
stos
imul
xchg
add
arpl
xchg
mov
jae
pop
cli
popa
aas
jb
fiaddl
inc
insl
mov
push
xor
mull
cmc
fwait
or
add
mov
div
sbb
jae
push
test
sub
and
jnp
dec
out
mov
cmc
mov
xor
jg
pop
sahf
mov
mov
std
test
xor
pop
push
adcb
pop
adc
stos
and
push
jne
ficomps
mov
pop
pop
mov
sub
lock
clc
sbb
pop
or
and
sub
push
xor
push
xchg
dec
lock
push
pushf
mov
dec
cmpsb
int3
pop
aam
cmp
xchg
inc
sbb
pop
xchg
jno
outsl
xor
lahf
mov
dec
xchg
or
scas
ror
push
data16
add
or
dec
and
adc
je
xorl
cmp
jb
popa
pop
cmpl
loopne
imul
test
lea
cmpsb
jg
cmp
jnp
jmp
sub
lret
out
jp
outsl
loopne
mov
test
je
dec
xchg
int3
sbb
xchg
jo
lods
and
mov
sbb
popf
leave
or
adc
lret
xchg
scas
mov
int3
stc
pop
mov
iret
sbb
cli
cmp
cmp
fs
adc
or
insl
cmc
loop
xchg
loope
icebp
inc
movsl
lret
leave
insl
imul
jns
fsubl
inc
xor
cmp
mov
mov
cmp
incb
cmpsl
xchg
ljmp
nop
xchg
popa
imul
imul
push
jnp
cmp
sbb
jmp
ss
pop
fldenv
jae
cli
cmpsl
imul
xor
xchg
mov
jg
inc
add
push
test
rclb
icebp
jae
bound
and
mov
mov
rcr
ljmp
pop
push
andb
aaa
scas
jg
jb
les
xor
lods
add
cmc
or
cwtl
cmovg
outsb
outsb
mov
adcl
pop
je
mov
imul
push
scas
cmpsl
mov
into
ret
ds
lock
inc
pop
scas
addr16
clc
jnp
dec
mov
into
xchg
dec
jbe
stc
mov
mov
xchg
or
cmpsb
jle
mov
jns
jb
inc
pop
hlt
dec
sub
and
ja
sbb
mov
int
into
fidivs
jl
test
inc
pop
jg
fwait
sub
enter
mov
cmp
imul
cmp
add
sub
inc
lock
pop
loopne
les
fwait
lcall
jne
mov
mov
insb
lahf
cltd
icebp
or
repz
xchg
ret
mov
bound
sub
dec
mov
dec
xor
push
cld
inc
mov
push
inc
xchg
jecxz
and
or
fdivrs
in
out
xchg
cltd
out
call
sbb
mov
sub
dec
xchg
outsb
gs
popf
inc
adcb
orb
fidivl
test
pusha
mov
inc
pusha
icebp
jecxz
xchg
cs
out
or
je
cltd
andb
mov
cltd
pop
push
inc
xor
pop
call
pop
loopne
dec
push
jno
outsl
add
inc
jne
mov
jbe
gs
jo
cli
push
adc
and
sub
stos
lods
rcll
arpl
push
lods
mov
andb
mov
outsl
or
xchg
pop
xor
icebp
in
push
add
lahf
push
leave
add
shlb
sbb
pop
and
shl
jmp
sub
nop
addr16
or
ljmp
insb
jo
cmp
out
jmp
push
lods
inc
add
in
lds
addr16
bound
in
jbe
lret
shlb
pop
insb
xor
jg
pop
pop
subl
ss
mov
xor
es
sbb
push
xchg
out
sahf
cmp
xlat
cmp
repz
test
cltd
sahf
or
xor
jns
inc
and
push
adc
ret
dec
loopne
mov
xchg
push
lock
mov
iret
push
sahf
xor
daa
dec
sbb
lahf
fsub
jb
scas
leave
mov
mov
push
pop
imul
daa
cmpsb
jecxz
mov
imul
insb
sbb
xor
dec
ljmp
xlat
and
or
shr
fistl
add
fldcw
dec
fildl
loop
insl
sub
pusha
and
pop
mov
xor
push
jecxz
or
loop
xchg
dec
dec
cltd
sti
loope
loopne
in
loop
shrb
cmp
lret
das
pop
jle
or
sti
daa
insb
addr16
cltd
sub
ja
xchg
fucomip
mov
stc
daa
mov
sbb
push
ret
into
xchg
inc
movsb
lret
out
mov
ds
fisubrs
and
cwtl
sub
stos
fwait
lock
adc
les
add
jle
roll
aam
adc
addr16
adc
out
dec
ficoms
dec
pop
scas
cmp
inc
stos
addr16
dec
hlt
xor
aas
cld
clc
data16
adc
cmpsl
mov
enter
xchg
mov
hlt
enter
shl
add
mov
or
adc
shl
adc
mov
sahf
cmp
aaa
mov
sub
mov
les
dec
mov
gs
push
lods
pop
adc
std
xor
dec
mov
xchg
xor
jl
pop
iret
mov
lods
pop
fwait
sub
loop
je
fisttpll
or
add
lods
loop
shlb
add
mov
jne
add
fwait
pop
mov
cmp
cmp
insb
out
inc
jle
fsubrl
xchg
loopne
add
loop
aam
adc
fcompl
sbb
pop
vpsubsb
push
xchg
jno
cwtl
ljmp
fldt
leave
jl
xchg
loope
mov
mov
lock
adc
mov
enter
pop
push
xchg
mov
sahf
icebp
nop
lret
call
mov
push
cmpsb
and
adc
rcl
sti
and
and
mov
mov
shll
pop
sbb
dec
jmp
sub
clc
and
jbe
cmp
ja
jnp
and
iret
or
movsb
into
fdivs
lock
lds
xchg
push
iret
mov
jp
sub
and
icebp
pushf
je
xchg
mov
fxch
or
add
jb
xchg
mov
push
xor
test
pop
cltd
jge
add
or
xor
jo
push
pop
jecxz
pop
xchg
ret
in
sbb
xor
hlt
pop
push
pop
mov
jns
and
loopne
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sub
xor
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
addl
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
xor
xor
mov
adcl
add
andl
mov
inc
mov
cmpl
jge
jmp
pushl
call
cmpl
jb
movzwl
or
mov
andl
movb
mov
sub
lea
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
xorl
mov
xor
add
andl
mov
sbb
movl
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
subl
push
dec
mov
andl
xor
or
mov
adcl
push
andl
add
movl
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
jb
sbb
mov
adcl
xor
subl
add
jmp
mov
mov
sbbl
xor
adc
mov
xorl
add
adcl
movzwl
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
addl
movzwl
xor
add
mov
mov
inc
mov
mov
cmp
jne
movl
cmpl
je
cmpl
jle
jmp
push
call
xor
add
dec
mov
jmp
mov
and
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
pushl
push
pushl
call
cmpl
jb
xor
inc
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
mov
andl
xor
xor
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
xor
and
add
orl
mov
adc
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
mov
mov
mov
xor
xor
or
add
mov
mov
je
addl
mov
mov
and
mov
mov
xor
xor
xorl
sub
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
call
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
add
imul
orl
mov
sub
jmp
add
cld
shl
mov
xchg
lret
add
scas
addl
sbb
clc
pop
inc
add
push
leave
dec
aam
mov
xor
loope
test
cs
out
or
jne
mov
pop
inc
loop
cltd
pop
std
enter
pop
test
push
stos
xor
cltd
and
lods
rcr
dec
insb
out
outsb
and
pextrw
pusha
sti
mull
popf
popf
push
shll
bnd
int3
sahf
xchg
std
cmpb
js
fbld
pop
cmp
fbld
dec
sbb
mov
sub
push
add
xchg
mov
sub
loopne
or
outsb
sarb
adc
xchg
xor
jge
cmp
add
jno
sbbb
leave
sbb
nop
popf
mov
mov
and
jl
ret
fimuls
mov
insb
mov
xchg
xor
rcll
out
bound
xchg
cmpsl
sbbb
mov
dec
pop
cmpsb
jge
inc
shlb
shll
xor
lret
mov
inc
xchg
pop
into
xchg
cld
sub
xor
call
call
sub
sub
ret
mov
mov
repz
or
hlt
pop
repz
push
in
push
push
pop
int
rcl
mov
leave
repnz
xchg
adc
jo
jno
cltd
lahf
sbb
mov
and
lods
or
push
inc
pxor
ret
inc
and
shrl
scas
push
mov
shrb
mov
xchg
add
in
repnz
sbb
push
stos
test
sarb
fdivp
push
xchg
je
shll
sub
enter
icebp
jbe
das
out
call
mov
add
lahf
cmp
adc
lds
pop
test
ret
sbb
es
sbb
outsb
mov
repnz
scas
adc
lcall
lods
scas
mov
push
mull
movsw
es
lock
and
adc
popf
cmp
lods
xor
and
sarb
sbb
inc
rorb
sar
fists
xchg
mov
mov
push
stos
mov
clc
imull
popf
mov
addl
aaa
mov
call
aad
ret
adc
add
ds
inc
inc
mov
cmpsl
add
test
fcomip
pop
out
jns
jecxz
pop
add
jle
mov
mov
adc
rcr
into
mov
sub
mov
lret
xchg
movsb
mov
lret
or
jecxz
cltd
add
test
daa
jno
adc
scas
and
imul
and
in
jae
ss
shlb
fnstcw
cmp
push
sbb
fs
xor
ret
jmp
outsb
test
ret
sbb
push
movsb
dec
rclb
cmpsb
data16
mov
add
and
fwait
jno
adc
and
aad
fadd
or
pop
and
lds
inc
leave
cmp
stc
dec
mov
mov
fdivl
insl
daa
ret
lret
cmp
shll
or
mov
or
imul
ljmp
mov
lock
call
jb
stos
xor
mov
ficoms
stos
rorl
jle
and
xor
pushf
dec
addr16
xchg
shll
adc
pop
cltd
inc
cmp
inc
sub
int
in
xor
imul
and
inc
mov
ret
fs
pusha
xlat
enter
scas
insb
cmp
jp
test
push
add
fsts
notb
jae
scas
icebp
mov
dec
xchg
jl
jp
jg
add
lret
cmp
test
adc
lret
lods
mov
add
push
cmovle
mov
popa
ss
xchg
cmp
rorl
cmp
dec
sti
ror
jge
xchg
push
push
mov
fwait
lcall
xor
popa
inc
movsl
aam
fbstp
mov
fcomps
ja
push
movl
cld
jbe
push
sbb
xchg
inc
cmp
xchg
mov
int
sub
and
add
fcomps
jl
push
jnp
dec
int
pop
out
mov
mov
mov
xchg
and
aas
sbb
xor
dec
out
cld
mov
dec
pop
cmp
jns
hlt
dec
jecxz
jmp
mov
mov
cld
sbb
mov
push
jge
sub
mov
xor
mov
call
inc
and
ljmp
out
cmc
sbb
adc
xchg
cltd
repnz
popf
dec
inc
dec
push
rcrb
testb
sbb
cmp
je
pop
inc
xchg
sub
mov
repz
ficoms
fiaddl
push
rsqrtps
adc
add
aad
or
pop
and
loope
cmp
ja
scas
mov
scas
cmp
jnp
pop
sub
or
sbb
adc
xor
cmpb
mov
cmp
lret
rclb
sbb
into
shrl
push
testl
sbb
add
mov
lahf
dec
pop
push
mov
xchg
pushl
fmuls
data16
push
mov
sub
push
push
fsts
dec
fldenv
dec
mov
addl
lret
sbb
and
sub
add
cmp
xchg
test
mov
lods
cmp
aas
fwait
mov
loop
mov
addr16
inc
mov
lcall
dec
add
lahf
push
imul
insl
mov
mov
bound
lods
cmc
test
dec
pop
add
loopne
and
push
xchg
pusha
and
cmp
xchg
cs
fs
jp
fnstcw
int
out
pusha
sub
jmp
dec
push
cmpsb
mov
dec
push
rcr
ret
js
sub
scas
jmp
xor
lods
mov
sbb
xchg
test
xor
shll
cmp
mov
cmp
repz
sti
dec
shrb
sbb
mov
stc
cld
or
imul
sarl
shrb
push
fisttpl
out
stos
into
mov
cmp
in
jmp
cs
xchg
mov
or
aaa
loop
jmp
push
mov
push
pop
cmp
mov
or
sub
dec
scas
xor
out
or
popa
inc
ds
xchg
xchg
jmp
jns
xor
sub
scas
dec
jle
or
nop
pushf
cmp
sub
dec
cli
adc
mov
and
sahf
rorb
xor
pop
push
jg
pop
or
sbb
adc
add
lahf
movsb
scas
mov
mov
jne
mov
loopne
or
das
enter
cwtl
push
filds
add
add
ljmp
cmpsl
fwait
xchg
test
out
ljmp
in
lret
int
and
in
and
push
cld
and
out
xchg
daa
shrb
rolb
xor
movsb
aaa
popa
xchg
push
leave
in
imulb
clc
sbb
insl
mov
lret
outsb
sbb
jbe
fists
lods
leave
sbb
cmp
jmp
sahf
std
into
ljmp
pop
xchg
pusha
xlat
jb
int3
pusha
jl
cmp
gs
push
pushf
jo
cmp
mov
aaa
push
sub
cmp
out
fs
fs
in
inc
pop
sub
adcl
inc
hlt
loopne
mov
ds
cmovno
shll
sub
ja
lds
negb
mov
jle
push
xor
lea
cmp
int3
mov
inc
dec
add
sti
xlat
aam
dec
inc
pop
enter
mov
mov
out
inc
sbb
clc
mov
lds
fs
jb
sub
xchg
mov
mov
in
mov
jge
and
lds
lods
xlat
add
daa
inc
xchg
fbld
pop
adc
mov
shl
cmpsb
pusha
in
cltd
out
push
jg
jle
cmpsb
mov
movsb
sbb
sbb
inc
int
ljmp
imul
call
add
xchg
dec
lds
ret
in
test
inc
rcr
scas
and
xor
mov
sarl
js
movsl
sub
stos
in
decb
add
shll
mov
jb
sub
in
mov
adc
in
into
popa
push
orb
sarb
popf
int3
dec
sbb
repz
pusha
ds
loope
cmp
je
fimull
mov
jmp
or
push
fistl
xchg
lcall
pop
dec
repnz
cmpsb
lcall
imul
ret
pop
jle
push
mov
out
sub
rcrl
adc
cmp
push
push
cld
jmp
jg
cltd
or
test
aas
shll
pop
mov
test
mov
adc
out
mov
in
xor
mov
pushf
add
pop
clc
fcmovb
ret
addr16
sbb
sti
add
pop
aam
dec
cmpsl
adc
or
pop
cmp
cli
push
shlb
int
in
sbb
pop
fistl
pop
xor
ror
inc
cmp
stos
cwtl
inc
shl
push
add
addl
mov
or
cmp
mov
cmp
shrl
push
jae
imul
rcrl
sahf
dec
rorb
leave
sub
jmp
scas
fisttps
push
add
jle
aam
arpl
stc
sub
insl
scas
adc
das
cld
loop
sbbl
sub
add
add
push
roll
mov
adc
sbb
mov
xorl
cmc
popa
in
cmp
mov
sub
sub
mov
mov
loopne
imul
sub
adc
ljmp
jnp
daa
out
jb
in
jmp
std
adc
xchg
pusha
xor
test
das
pcmpgtd
jle
or
cli
pop
enter
lahf
cmp
mov
push
jns
inc
rolb
jb
dec
shrb
fs
jge
das
xor
int
mov
jmp
test
addb
ljmp
push
mov
sbb
or
or
sub
icebp
stos
mov
jae
xor
mov
in
xor
loop
pop
jg
test
dec
lods
mov
into
fnsave
or
mov
test
ja
mov
add
inc
popa
out
cld
inc
push
lock
fidivrs
adc
mov
gs
fstpl
addr16
jae
adc
pop
mov
push
pop
arpl
stos
subl
add
inc
mov
stos
mov
cmp
rcll
mov
imul
cmp
inc
xchg
or
jge
lar
roll
scas
fwait
ljmp
xchg
rorl
mov
or
and
loopne
jb
scas
mov
add
or
mov
inc
cwtl
test
and
lret
pop
jne
xlat
mov
inc
xchg
xchg
loop
cwtl
mov
rclb
adc
cli
jge
popa
xchg
loopne
jle
movsl
adc
jne
or
fsts
mov
inc
xchg
sub
pushf
jl
push
push
out
push
movsb
das
xlat
sbb
mov
mov
mov
dec
add
jns
xchg
fwait
xchg
shlb
fisubrl
pop
popf
inc
mov
push
movsb
xor
cmp
loope
int3
fdivr
push
in
sarl
dec
mov
mov
mov
rorb
js
xor
fwait
sbb
pop
or
xchg
xlat
inc
shlb
inc
sub
adc
shlb
xchg
aas
jns
ret
cli
push
dec
out
dec
xchg
shl
ret
sti
push
lcall
adc
cmp
mov
push
push
push
lods
scas
es
lds
fistpll
push
sahf
leave
or
xchg
nop
mov
cmpsl
mov
sbb
ja
sti
or
sub
insb
test
mov
pop
xchg
sti
repnz
dec
pop
test
mov
mov
or
or
add
loop
mov
dec
aad
adc
mov
imul
jns
aaa
sbbl
jl
xchg
fmull
xchg
cld
sti
out
mov
ret
je
es
push
cmp
xor
xor
push
sti
cmp
xlat
jge
dec
fs
adc
push
push
adc
xchg
js
nop
ficoml
cmpsb
cmp
pop
jg
ret
jecxz
mov
add
cmp
imul
daa
push
cmp
pop
jae
js
cmpsb
mov
mov
add
cld
jo
pop
xor
cmp
adc
outsl
inc
fstp
insb
stos
xor
push
dec
scas
mov
rorb
sub
mov
mov
pop
jg
push
out
sbbl
fsubl
push
popf
sti
fadd
cmpsb
sbb
clc
repz
inc
stos
insl
je
cmp
decb
aaa
adc
pusha
mov
shll
pop
or
push
mov
std
jle
adc
cmp
push
ljmp
xchg
pusha
push
sbb
jge
push
pusha
roll
int
fildll
stos
dec
pushf
mov
xchg
ds
cmp
addr16
dec
pop
xchg
test
cmp
cmp
add
bnd
jl
in
xor
mov
data16
dec
xchg
rcr
sbb
sti
arpl
test
pop
sbb
mov
mov
sbb
aas
fimuls
mov
xchg
stos
jmp
addr16
cwtl
mov
ja
sbb
cltd
movsl
fldl2t
or
lods
or
rcr
mov
xchg
mov
xchg
je
inc
mov
push
adc
push
mov
lods
andl
shrb
int3
dec
mov
adc
cli
xor
gs
movsb
jg
rol
insb
add
icebp
adc
lods
test
cmpsb
pop
je
lea
mov
and
lds
inc
inc
xchg
je
cld
and
std
jp
pop
or
ret
bound
xorl
test
ret
hlt
mov
pusha
adc
pop
pusha
icebp
dec
jb
or
lods
xlat
mov
cmp
xchg
and
push
test
push
sub
cmpl
mov
jne
mov
inc
dec
xchg
and
mov
cmp
int
addl
mov
stc
xchg
hlt
cmp
dec
mov
push
dec
sbb
cmpsb
jl
jae
sahf
pushf
mov
movsb
or
xor
sahf
in
fsubrs
sub
inc
jle
rcl
in
jb
fs
sarl
push
inc
shlb
push
cltd
fisubs
sahf
jl
pop
popa
push
cli
push
repz
rorl
mov
lea
xchg
xchg
mov
jle
flds
mov
mov
jae
xlat
dec
hlt
mov
xor
adc
mov
dec
test
lods
fsts
push
test
inc
sub
jp
sbb
cs
jno
popa
sbbl
cmpsl
mov
add
aas
and
adc
and
stos
pop
pop
loope
lds
sub
aad
sub
lock
in
sbb
mov
lea
inc
sub
pusha
mov
and
adc
sbb
mov
xor
leave
cmp
cmpl
mov
test
xlat
pushf
or
and
in
xchg
lcall
and
jmp
xchg
inc
sub
in
xchg
xchg
jmp
fisubrl
or
cld
xchg
jmp
je
inc
sbb
lock
les
out
pop
push
fdivr
dec
add
lods
lods
cmp
test
inc
rolw
popl
sbb
sub
shll
xchg
xor
pusha
inc
sbb
movsl
aam
fnsave
push
cmp
das
pop
inc
insb
sbb
ds
ljmp
enter
jecxz
pop
adc
jl
fidivrs
and
mov
adc
push
outsb
xchg
mov
pop
add
xor
clc
mov
outsb
inc
or
gs
sub
mov
insl
lcallw
dec
cmpsb
fwait
adc
outsl
adc
and
mov
fcmovu
clc
mov
fmuls
dec
xor
mov
xchg
sar
ds
or
rclb
ljmp
sbb
shrl
pop
pop
add
andl
mov
repz
mov
xchg
std
dec
aad
fbstp
scas
mov
push
jae
scas
push
push
push
jbe
iret
inc
and
jmp
mov
cmp
mov
mov
int3
ja
cmp
outsl
push
jnp
aaa
js
stos
sbb
addl
testb
cmp
gs
fs
pop
notl
sub
enter
and
dec
dec
ja
mov
push
icebp
aaa
fiadds
or
pop
fiaddl
cld
shl
dec
pop
test
cli
leave
addr16
and
aaa
mov
sub
add
ljmp
push
shrb
mov
bound
loopne
loope
adc
push
cwtl
aam
mov
mov
cmp
fucomi
std
mov
insb
mov
in
pop
sbbl
push
repz
jge
push
xor
jb
das
movsl
cltd
mov
lcall
and
xor
push
dec
jl
ss
popa
xchg
pop
xchg
mov
js
and
mov
mov
mov
pop
rorl
daa
rolb
je
mov
mov
scas
sbb
shll
add
push
call
hlt
out
adc
sarb
adc
xor
mov
add
stc
xchg
inc
pop
sbb
imull
mov
mov
enter
mov
xor
push
lods
divb
xor
gs
fs
in
jmp
mov
ljmp
add
push
repz
icebp
pop
add
call
out
repnz
cmpl
faddl
rolb
xlat
out
sbb
xchg
cmp
push
inc
in
push
sbb
inc
daa
mov
mov
or
ss
rclb
mov
pop
call
out
sbb
xchg
es
mov
xchg
add
imul
cmp
or
ja
sbb
dec
aad
sarb
inc
mov
jg
cmpsb
sub
mov
popf
push
or
or
jp
jbe
hlt
movsb
icebp
sub
sub
push
daa
sbb
adc
lahf
scas
and
ficoms
pop
jne
dec
orl
test
inc
sub
add
xor
sub
lds
pusha
dec
sti
sub
out
pop
or
aam
or
push
nop
pusha
ds
mov
rol
mov
jecxz
mov
imul
mov
loope
dec
clc
adc
inc
rclb
xchg
push
fmull
xchg
mov
pop
imul
movsl
xor
int3
test
inc
ret
jle
out
or
cmpsl
mov
cmp
cmp
sub
mov
xchg
and
into
and
push
or
push
icebp
xlat
jp
aas
jge
sbb
sub
fs
xchg
ja
mov
in
lret
dec
or
loop
addr16
fwait
xchg
icebp
mov
lcall
jns
xor
inc
dec
inc
aaa
lods
xor
and
mov
pop
cmp
adc
cmc
lds
push
iret
fstps
and
dec
scas
sti
xor
cld
or
in
dec
push
xor
les
out
lret
and
inc
pop
lahf
jnp
jo
add
xchg
in
scas
imul
xchg
cmc
popf
mov
xchg
dec
outsb
stos
enter
adc
mov
fistpl
ljmp
cmp
add
and
lods
adc
fwait
jle
mov
mov
hlt
fst
cmp
nop
mov
les
cli
in
das
jp
scas
int
shr
jb
leave
ljmp
fstpt
lcall
ja
xchg
mov
sbb
mov
add
adc
fidivs
and
push
int
and
dec
cltd
push
outsl
scas
or
mov
jp
cltd
cs
std
cld
mov
jnp
sti
push
xchg
lods
push
test
and
insb
sbb
cmp
xchg
cltd
jb
mov
pop
scas
insl
mov
push
outsb
adc
loope
cmpsb
adc
adc
mov
pop
and
outsl
out
pop
pop
data16
push
hlt
test
mov
sbb
sub
pop
lahf
dec
sti
jle
or
or
mov
mov
gs
dec
xchg
loope
rcl
push
ret
cmc
imul
cmpsl
out
xchg
push
jns
ret
cltd
ror
aad
ret
and
jl
xchg
mov
test
inc
cmc
fwait
aaa
rcll
mov
mov
push
sub
in
lea
add
xchg
repz
ret
push
xor
pop
mov
push
pop
pop
lret
movsl
imull
cwtl
loop
jecxz
stc
mov
sub
mov
sub
int
fidivrs
sub
stos
sbb
jecxz
lahf
sti
data16
mov
pop
pop
imul
movsb
mov
inc
lret
and
lds
cli
aaa
dec
and
mulb
repnz
pop
pop
mov
add
jnp
xchg
inc
xchg
dec
or
repnz
and
orl
add
hlt
mov
int3
cli
xchg
lea
cmp
insl
orb
xchg
movsl
jb
xor
dec
arpl
sbb
or
incl
lods
push
mov
and
mov
cld
mov
dec
enter
and
mov
mov
aam
fwait
xchg
pop
jo
rcrb
nop
aas
sbb
add
cmp
cmp
fistpl
ror
adc
gs
fsubs
mov
loop
push
scas
test
flds
inc
jae
push
xchg
sub
ds
mov
fcmovne
or
stc
outsb
ja
inc
ss
sahf
fwait
cmpsb
cld
js
stc
pop
jns
cmpsb
fwait
mov
push
jnp
sbb
or
inc
insl
mov
test
les
stc
mov
outsb
fdivs
jae
daa
out
js
mov
ret
cmp
push
cmp
sbb
push
pusha
push
js
sbb
insb
pop
inc
jp
cld
ja
dec
jbe
push
or
fidivs
sbb
jae
mov
push
scas
pop
or
bound
in
out
out
std
pop
bound
jge
inc
add
adc
dec
jns
inc
sahf
ds
inc
loope
mov
sub
jae
jecxz
mov
adc
xlat
lret
jno
in
data16
cmp
mov
xchg
mov
popl
fcomps
mov
lcall
mov
fcomps
mov
dec
lahf
add
bound
aam
popf
movb
sbb
mov
cmp
mov
pop
and
xor
adc
jb
jns
xorl
nop
imul
ja
mov
adc
cmp
repnz
sub
lret
test
fs
test
add
test
in
cmp
fmulp
insb
jp
dec
xor
stos
xchg
push
fmuls
fists
int
nop
jle
or
jb
popa
jg
int3
test
and
mov
fsubl
mov
mov
inc
cltd
or
mov
adc
push
push
in
xchg
shlb
xchg
addb
out
push
inc
add
js
les
mov
xchg
cmc
sbb
mov
sub
mov
fdivrl
fadd
pop
xchg
inc
popf
out
or
xchg
rorb
sbb
ds
sub
mov
fwait
add
fsubp
dec
leave
push
pop
fsubl
dec
mov
sub
out
leave
lret
dec
ror
out
xor
or
xlat
xlat
pusha
mov
sti
lcall
xchg
hlt
dec
sbb
mov
out
mov
test
aas
fcmovb
push
push
xchg
cmp
xchg
xor
pop
mov
aaa
push
dec
push
or
jne
cmp
iret
dec
mov
repnz
fs
or
rorl
imul
outsb
jns
iret
mov
dec
cmp
icebp
jo
mov
cmp
add
jns
fdivrl
out
adc
sbb
fs
or
mov
cmp
pop
aaa
ret
pop
fst
ss
mov
psrlw
mov
enter
stos
aad
wrmsr
mov
jnp
int3
jo
inc
sub
xor
adc
int3
mov
xlat
daa
dec
push
lds
adc
into
out
or
hlt
xor
stos
lea
mov
mov
rcll
xchg
movsb
test
add
out
xor
sbb
icebp
shlb
mov
cmpsb
inc
int
cmp
movsl
push
inc
sub
addl
pop
adc
out
sbb
cmp
mov
add
xor
inc
inc
imul
testb
fwait
js
push
popa
in
loop
jb
add
cld
stos
mov
cmp
outsb
mov
aad
jbe
stos
dec
sti
loope
mov
sbb
pop
mov
cld
xor
pop
mov
mov
pop
jge
nop
rol
cld
lods
test
or
xchg
mov
inc
fists
outsl
dec
mov
je
adc
movsb
popl
jbe
jb
xchg
ja
adc
aam
inc
push
mov
sbb
pusha
imul
dec
sub
mov
aaa
add
dec
scas
pop
mov
incl
adc
bnd
lret
mov
aaa
xchg
pushf
fisubrl
pop
shl
popf
xchg
dec
je
scas
xlat
cmp
or
roll
arpl
jns
cmovns
inc
xchg
pop
movsl
jo
jo
jns
cmc
mov
lods
xor
mov
inc
pop
hlt
sahf
aad
pop
jns
mov
mov
in
pop
int
in
jae
pop
xlat
jo
addb
sub
inc
loopne
mov
js
xchg
pop
outsl
inc
pop
cmp
stos
rol
dec
push
mov
xor
jecxz
scas
in
jo
stc
pop
sarb
test
mov
int3
fistl
jmp
lock
jl
idivb
cld
out
inc
sub
data16
mov
lahf
cmp
dec
stos
bound
loop
sbb
test
mov
inc
std
cmpsl
add
lret
sbb
clc
pop
loope
dec
ljmp
sbb
xchg
repz
mov
cmp
sti
push
filds
push
cmp
or
pop
dec
imul
outsl
push
fbld
xor
test
xchg
aam
lret
daa
imul
mov
xor
shlb
sub
std
test
ret
pusha
mov
sarb
add
jae
pop
mov
test
pop
les
inc
and
or
sbb
ret
scas
add
sub
xchg
dec
pop
dec
mov
stos
loope
adc
loop
ja
push
sub
mov
xchg
cmpsb
shll
sub
pop
bound
dec
ret
mov
insb
push
rorb
or
jle
repnz
jmp
cmc
and
cmp
stos
pushf
adcl
shlb
fisubl
sbb
lret
ja
sbb
jl
adcl
pop
add
jnp
dec
rclb
pop
mov
imul
pop
sub
pop
rcrb
lret
test
icebp
je
push
dec
inc
cmp
mov
pop
xchg
xor
faddl
mov
das
negb
xchg
scas
lar
dec
notb
mov
fwait
mov
lahf
sbb
pop
cmc
or
daa
cmp
bound
movsl
enter
jb
fcompl
popa
jle
sbb
sahf
pop
sub
jbe
mov
mov
sbb
push
fstsw
je
test
push
push
lret
pop
or
in
sub
mov
mov
cmpsb
jmp
pop
sbb
shrl
sbb
cmpsl
push
sbb
subb
mov
lret
push
fldl
inc
push
cmp
mov
lcall
gs
push
xor
es
or
sahf
xlat
hlt
lcall
push
inc
xor
cwtl
pop
push
scas
int
daa
rorl
stos
push
lret
out
sub
mov
repnz
cli
xor
enter
in
aad
ss
mov
icebp
jp
hlt
xchg
mov
out
pop
push
or
pop
cwtl
sbb
add
vphaddbw
push
pop
add
repz
mov
inc
push
sub
add
les
sti
lods
popa
ljmp
test
mov
push
xchg
pop
pop
push
sbb
cmp
fisubs
loopne
adc
dec
sahf
stos
out
imul
cltd
and
shlb
stos
xor
shll
add
decl
mov
mov
cli
inc
add
jmp
xchg
cmp
insl
shrl
or
push
cmp
gs
and
push
jns
mov
push
mov
testl
test
pop
jmp
negl
test
loopne,pn
bound
mov
clc
fidivrl
push
sub
cli
push
fldenv
jno
jp
inc
pusha
and
imul
fisubl
cmpsl
dec
or
mov
loopne
repz
jno
dec
jmp
loope
cld
fistps
adcl
test
addr16
loop
add
aas
and
aaa
test
dec
sarb
sub
sbb
gs
push
fstps
sbb
add
or
push
inc
dec
push
pop
loope
fbstp
in
xor
mov
xchg
inc
jp
push
fsubrs
or
stos
lcall
pop
pop
ljmp
inc
idivb
mov
imul
xchg
cmp
enter
xchg
loop
inc
pop
cmc
pop
push
adc
mov
mov
xor
xchg
fwait
jl
mov
int
mov
sub
unpckhps
dec
out
mov
push
aad
sub
push
iret
xor
sbb
test
lods
sub
enter
mov
pop
xchg
pushf
ret
mov
movsb
cli
sub
inc
inc
fiaddl
xchg
orl
lock
popf
mov
test
aaa
fdivrs
push
add
add
inc
arpl
fiaddl
inc
pop
ret
adcl
push
fcomps
ja
add
mov
jle
movsb
pushf
sub
or
pop
jne
push
stos
sub
insb
mov
and
inc
xor
rcr
cmp
xor
cs
movsb
xor
shlb
add
jmp
sbb
dec
pshufw
sahf
out
movsl
stc
sub
push
xor
mov
cld
push
idiv
insl
jmp
adc
fadds
pusha
pop
fsubs
adc
aam
xor
cmpsl
daa
jne
jg
repnz
cs
adc
and
inc
cmp
fisubl
ret
loop
test
xchg
repnz
shrl
ret
dec
mov
xchg
mov
or
xchg
out
push
or
faddl
ljmp
xchg
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
add
or
mov
mov
xor
mov
andl
add
sbbl
xor
mov
movl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
and
mov
add
mov
addl
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
jmp
xlat
push
xchg
repz
addb
testb
or
ds
addl
add
xchg
and
or
aad
stc
sarl
imul
aas
dec
loopne
mov
jmp
das
iret
sub
test
mov
iret
sbb
aas
jo
dec
cld
push
adc
movsb
ret
in
jb
divb
in
mov
sbb
les
sbb
lds
mov
repz
mov
mov
stc
gs
add
imul
stos
push
add
outsb
cs
ret
mov
cmp
and
sbb
mov
bound
ja
push
add
jmp
fbld
ljmp
loopne
lods
dec
mov
xlat
test
xor
mov
clc
add
test
bound
xchg
rcrb
lcall
fsts
cmp
lods
mov
inc
in
mov
mov
cs
cmp
sub
aas
das
mov
jne
pop
jns
inc
jl
scas
pop
ret
jle
cltd
lods
xor
xor
popa
shl
pop
arpl
fcoml
scas
scas
outsl
lods
fdivrs
jle
sarl
dec
shr
mov
loope
mov
fs
sbb
fdivs
sub
lods
push
in
sub
push
aad
xor
out
out
insl
fnstsw
adc
xchg
out
add
mov
pop
jge
fbld
sbb
std
pushf
mov
mov
xor
push
dec
sub
cmp
and
dec
fnsave
or
std
gs
xchg
sbb
mov
sbb
popf
mov
mov
fstpl
cmp
cwtl
repnz
cmp
and
jge
or
cmpb
mov
push
xchg
aam
adc
jo
adc
arpl
push
mov
test
push
pop
loop
stc
dec
push
xor
fs
or
into
lret
rorl
rcrl
and
ljmp
sbb
aas
pop
pop
sub
imul
sub
orl
dec
fildl
mov
movb
jns
sbb
ja
or
sub
std
xchg
mov
and
rcll
mov
shlb
pushf
xor
xchg
jge
cmp
aam
das
ljmp
push
gs
fs
sahf
loop
add
popf
dec
adc
jo
xchg
xchg
loop
push
dec
inc
sti
or
frstor
sbbb
notl
aaa
mov
sbb
fsubrs
mov
or
jecxz
fisttpll
in
cmpsb
pop
lret
pop
inc
iret
mov
movsb
or
cli
mov
enter
xchg
mov
cmp
js
pop
xor
fimuls
test
es
sub
aad
lods
enter
dec
sub
daa
hlt
jns
jns
inc
cmp
mov
push
ret
js
in
pop
xor
jno
sbb
cmpsl
arpl
xlat
pop
rcl
loope
icebp
dec
lods
mov
sub
mov
out
fxch
loope
int
dec
call
fcmovbe
adc
xorl
dec
xchg
and
adcb
push
data16
pop
inc
ja
outsl
cmp
into
xor
sbb
loop
push
hlt
je
hlt
pop
xchg
mov
cmp
ret
pop
sub
inc
mov
imul
dec
addr16
pop
jge
ret
mov
aas
loop
add
inc
mov
add
add
or
ja
and
sbb
push
pop
mov
dec
xor
iret
jg
les
mov
inc
jno
and
call
pop
in
jg
jecxz
jbe
cmpsl
es
mov
jnp
mov
inc
dec
mov
pop
inc
pop
aaa
push
pop
shr
jle
in
imul
push
cltd
clc
cmp
jno
movsb
imul
and
sub
scas
and
ret
aas
add
xchg
aad
mov
add
and
dec
into
and
ret
xchg
dec
pop
lods
rcr
push
movsl
pop
jns
mov
fcoml
test
mov
pop
sub
cwtl
test
cmc
mov
pop
lds
mov
xor
in
loopne
scas
fldcw
xchg
cld
pushf
outsb
scas
xchg
mov
jl
dec
jne
fwait
cmp
cmc
xor
push
psrad
sbb
mov
mov
mov
mov
adc
movsl
ret
mov
mov
cmpsb
orl
sbb
js
jmp
les
imul
stos
imul
mov
popf
cwtl
orl
add
add
xchg
add
xlat
and
cmova
out
test
or
mov
daa
lea
dec
mov
decb
es
jno
xchg
push
lcall
inc
rolb
mov
mov
fists
mov
cmp
stos
std
cwtl
mov
fimuls
push
repnz
mov
lock
mov
mov
xor
cmovbe
adc
fdivrs
jne
data16
movsl
jmp
pop
aaa
negb
cmp
std
xlat
arpl
in
mov
fisttpl
test
inc
imul
std
push
mov
ljmp
test
repnz
jo
cmpsb
into
imul
cld
lret
shrb
aaa
pop
aas
out
mov
pop
lods
ljmp
loope
add
loope
daa
test
fisubs
xor
iret
shrb
shl
lret
cmp
out
in
add
sbb
rcl
lcall
and
aaa
cmp
mov
mov
jno
inc
hlt
or
cli
xchg
and
mov
cmpsl
out
cmp
repz
inc
adc
movsb
and
push
push
mov
jne
pop
stos
and
cmc
adc
ficoms
add
in
xchg
ljmp
rol
and
cmp
sub
lret
pop
sahf
push
clc
outsb
mov
outsl
sub
hlt
leave
cmp
aad
pop
dec
cmc
xor
data16
xchg
xchg
and
mov
call
push
fldenv
lock
je
sbb
push
aaa
push
add
dec
jbe
test
fcompl
sbbb
mov
repz
imul
aas
ds
mov
jnp
adc
pushf
dec
cltd
and
mov
mov
addr16
adc
dec
jns
jo
iret
sbb
cmc
and
inc
scas
int
arpl
xchg
cmp
mov
hlt
in
test
loope
mov
fidivrl
aaa
inc
sub
ss
or
in
int3
cmp
daa
cmp
xor
les
or
mov
loope
movsl
out
adc
popf
adc
adc
jae
test
inc
xor
adc
test
aad
jo
fwait
ja
inc
stos
testl
jmp
cwtl
dec
cld
pop
jl
inc
dec
add
stc
mov
and
mov
arpl
ss
push
cmp
sahf
shlb
mov
jne
mov
cmp
push
les
les
insb
sub
xor
in
js
jmp
xchg
ja
incl
xor
dec
mov
sarl
in
adc
jbe
je
pushf
pop
in
mov
xor
js
mov
cmp
xchg
icebp
adc
mov
in
in
inc
sub
push
add
fldt
xchg
mov
ficoms
xchg
xor
sbbb
push
inc
ss
stos
mov
in
insl
or
nop
in
sub
adc
adc
aaa
jle
add
ja
insb
jp
cltd
inc
rorb
xchg
cltd
pop
jp
aad
enter
out
push
sub
loop,pn
xlat
inc
ja
popa
rol
pop
mov
jo
fwait
data16
mov
test
sub
pavgb
nop
orl
fucom
addr16
fwait
or
call
sbb
inc
push
xchg
push
mov
gs
int3
in
lods
out
pop
dec
rcrb
stc
xchg
push
icebp
in
lock
sub
and
scas
cmpsb
xor
cmpsb
lahf
dec
mov
clc
pop
mov
inc
jecxz
xchg
pop
ljmp
ljmp
aaa
cmp
incl
addr16
dec
negl
data16
mov
pushw
xchg
cmp
in
dec
pop
inc
std
add
sarl
xchg
cmp
dec
movsl
add
pop
cmp
int
faddl
mov
push
lcall
mov
popa
imul
rorb
mov
xor
pusha
inc
lea
or
pop
pop
shr
hlt
push
fsubrl
fisubl
pushf
leave
loope
movsl
mov
xchg
adc
and
adc
mov
adc
add
dec
adc
dec
xor
jne
jmp
jae
scas
push
jmp
insl
into
mov
xchg
ja
mov
cld
mov
dec
cmp
out
imulb
sbb
mov
pop
icebp
mov
jl
push
lret
movsb
push
sub
pop
pop
jbe
sub
in
cmpsb
aam
pop
xlat
outsl
out
cmp
jle
out
fsts
arpl
aas
push
stos
xchg
inc
jo
lcall
insl
sub
inc
bound
gs
pop
cmpsl
clc
fadd
data16
fdivrl
add
movsl
dec
pop
push
push
repz
or
fwait
push
lods
cmp
lea
repnz
jns
or
mov
sub
inc
ret
or
pushf
inc
cmp
ret
aad
aam
loop
cld
loope
aam
mov
ds
lret
xlat
mov
pop
pop
lea
cwtl
js
mov
fst
sub
test
aad
push
and
pop
adc
xor
lret
pusha
mov
lock
aas
push
mov
mov
cmpsb
xchg
test
out
in
xchg
outsl
cmc
mov
push
aaa
jo
lret
xchg
movsl
jo
cwtl
xchg
inc
fucomi
shlb
mov
ljmp
xchg
lods
into
es
lahf
jo
test
cmpsb
and
pop
mov
arpl
pop
mov
test
xchg
cs
sbb
xchg
ljmp
mov
push
out
into
sub
test
cmpsl
repnz
adc
xor
out
push
mov
xchg
jmp
xchg
jl
sbb
cltd
test
fwait
jb
mov
sbb
lret
xchg
enter
add
mov
lods
xorb
pusha
aam
jp
cld
popf
arpl
sahf
mov
cmpsl
jecxz
sti
inc
xchg
leave
inc
sbb
push
cmp
jno
push
mov
or
loop
rcll
xchg
js
or
lret
xchg
xor
lahf
movsl
or
out
popa
cmp
add
in
scas
push
dec
int3
insl
out
fsubs
lcall
cli
in
bound
push
pop
jge
int3
jb
mov
pop
dec
cmp
in
xchg
stos
call
or
jb
ret
aam
xor
gs
mov
and
fdivs
ja
pop
stc
in
ror
sub
push
outsl
in
in
arpl
dec
add
loopne
add
shl
mov
loopne
mov
loopne
cmpsb
lock
push
xor
ficoms
divb
mov
lock
or
out
mov
pop
sub
pop
test
mov
push
cmp
mov
lds
ds
rol
dec
adc
cmp
mov
push
out
loope
loop
inc
xchg
xlat
push
int3
ds
shrb
cs
lret
push
add
mov
push
mov
mov
out
enter
inc
push
pop
and
lea
inc
stc
sti
fldenv
loope
pop
mov
adc
xor
add
stc
sub
pop
pop
fwait
test
sti
jnp
mov
int3
bound
pop
jle
dec
dec
lods
jne
ret
xor
cwtl
arpl
subb
mov
pop
icebp
out
dec
lods
xchg
pop
stc
inc
outsb
jg
mov
mov
dec
sub
cmp
adc
rolb
aad
mov
mov
insl
pop
xchg
js
push
movsb
and
or
xchg
dec
pop
outsb
fs
test
mov
jne
insb
testl
cmp
cmc
mov
ret
aad
xor
in
std
arpl
mov
cltd
push
or
dec
js
inc
sub
or
xchg
xor
cmp
mov
scas
cmp
sub
inc
xor
je
sub
lcall
inc
bound
adcb
test
into
push
jae
js
add
shlb
jne
insl
ret
xor
xor
in
and
mov
jp
mov
dec
sti
addb
mov
xchg
lcall
js
adc
sbb
inc
in
jp
jo
int3
filds
xchg
fcoml
hlt
sbb
mov
nop
cmp
and
add
mov
cmp
rcll
ja
adc
jmp
lea
fwait
push
addr16
mov
arpl
jmp
iret
inc
cltd
jmp
rorl
shlb
xor
cmpsb
inc
das
sub
mov
pushf
xadd
les
lds
jecxz
aad
xor
scas
mov
push
ret
cmpsl
mov
aas
mov
or
int3
jbe
ljmp
dec
jp
pop
nop
jnp
js
popa
andl
push
cmp
or
xchg
nop
cmc
add
or
fcmovnb
in
sub
and
stc
rorb
dec
jle
cli
nop
test
xor
cmc
mov
imul
clc
sbb
mov
outsb
icebp
mov
cwtl
cwtl
cmp
pop
sahf
push
push
or
xor
sub
fs
add
popa
lods
pop
mov
mov
jg
std
adc
adc
xchg
sub
loopne
inc
lock
adc
lret
xchg
sbb
loop
mov
cmp
inc
dec
jae
fcmovne
inc
das
mov
sbb
mov
adc
cltd
push
push
mov
add
cmc
inc
inc
sub
and
mov
cmc
fidivrl
loopne
lcall
jae
pop
data16
adc
jb
jmp
shll
out
mov
subl
push
lahf
pop
sub
and
cwtl
call
xor
in
sahf
sbb
xor
inc
stc
shl
mov
subps
xor
adc
test
inc
shlb
test
mov
sub
push
lods
cmp
call
sbb
pop
mov
movsl
xchg
into
jecxz
iret
xlat
or
jmp
imul
sbb
mov
mov
mov
and
mov
lods
into
bnd
mov
loopne
xlat
adc
sub
xchg
and
mov
xorb
mov
add
jle
mov
dec
pop
cmc
shrl
mov
xchg
mov
fcoms
push
push
dec
push
fsubrl
add
ja
inc
pop
pop
inc
sbb
pop
sbb
mov
pop
int3
in
aam
test
shrl
lahf
sub
fistps
xchg
jnp
inc
jne
pusha
or
lahf
mov
mov
sbb
dec
scas
pop
or
sub
lods
lock
xchg
push
jp
add
sbb
in
jns
dec
popf
mov
add
dec
jge
lahf
scas
hlt
stos
out
push
popa
jo
xchg
out
push
mov
push
fstps
loop
mov
movsl
xchg
jl
xor
push
or
xchg
mov
adc
lods
stc
jnp
into
fdivs
push
in
jmp
add
fs
cmp
out
inc
rcrb
out
inc
es
and
pop
lods
sbb
mov
xor
adc
and
and
sbb
mov
push
sbb
out
lock
notb
lock
sub
dec
jae
divl
xor
aaa
aas
test
popa
shll
insb
dec
fistpl
jb
push
dec
cmp
shrl
or
xor
mov
pop
xchg
in
jle
sbb
int3
insb
aaa
iret
xchg
xchg
pusha
push
stc
testb
sub
dec
cmp
js
pop
jl
and
lret
dec
gs
pushf
jnp
aam
xchg
cli
idivb
mov
dec
pusha
cs
dec
aad
mov
std
aas
popa
cmpsb
in
mov
bswap
sti
xor
add
and
enter
ja
mov
pop
sub
jl
cmp
pop
shlb
faddp
pop
lock
cld
das
jle
mov
icebp
cmp
nop
mov
mov
sahf
push
fstps
sbb
adc
mov
fdivr
fldcw
add
xlat
jecxz
push
push
ljmp
imulb
dec
bnd
mov
and
or
xor
sahf
fwait
push
mov
mov
leave
cmp
stos
xor
and
lret
dec
gs
mov
mov
mov
sbb
test
add
push
clc
scas
dec
xchg
fldenv
scas
movl
add
pop
out
jb
in
shr
faddp
inc
pop
cmp
xor
into
add
mov
mov
pop
paddusw
mov
loop
and
jg
jmp
mov
push
mull
and
xor
idivb
pop
cmp
inc
adcb
sub
inc
pop
and
orb
dec
js
xlat
xor
jae,pt
pop
in
adc
mov
push
imul
sbb
or
jb,pn
push
jge
jg
es
cmp
mov
mov
inc
adc
das
mov
mov
xchg
mov
cmp
icebp
xchg
mov
jns
leave
sbb
rcrl
rolb
test
dec
inc
xor
pop
push
cmp
sahf
lcall
add
sub
adc
aad
or
cmp
xchg
scas
sti
pop
adc
dec
ficoml
mov
sbb
adc
push
sbb
add
and
dec
js
and
outsl
fstpl
call
stos
loope
fildl
mov
push
mov
sbbb
aas
enter
scas
mov
movsl
pushf
inc
loope
pop
cmp
inc
sbb
shll
push
movsb
rcrl
adc
mov
ffreep
dec
into
jnp
mov
xor
pop
out
xchg
and
test
aad
std
enter
mov
in
inc
mov
mov
push
adc
dec
fidivrs
daa
xchg
mov
push
std
lcall
xor
push
dec
xlat
sub
mov
popa
pop
jl
dec
cmp
mov
push
push
fisttps
mov
pop
leave
fcomi
sbb
lcall
insl
ret
mov
call
in
testb
cli
pop
mov
pop
mov
stos
sbb
xor
jl
mov
sbb
adc
mov
cli
test
jl
leave
xor
mov
incl
lds
pop
mov
adc
in
lods
push
out
pusha
out
rcr
sti
leave
inc
gs
xchg
pop
mov
xchg
mulb
imul
lret
gs
pop
xchg
fs
icebp
fnstsw
leave
pop
adcb
pop
xchg
sbb
and
dec
add
dec
loope
jmp
ret
fnstcw
pop
adc
scas
in
push
andb
or
cmp
enter
push
repnz
aaa
pop
test
pop
cmc
sbb
aad
sub
jge
mov
pop
xchg
rorb
mov
addr16
out
fs
outsl
push
add
cs
jnp
out
inc
jp
data16
outsb
push
or
mov
sub
jmp
cmp
sahf
gs
push
int3
clc
lods
or
mov
mov
or
push
sahf
nop
jnp
lahf
and
pop
dec
nop
push
ret
push
fsubl
loope
pop
lods
pop
imulb
xor
test
inc
sub
hlt
test
stc
sbb
cmpsl
push
and
jb
push
loopne
adc
mov
rcr
inc
aas
and
cmpsb
jb
adc
xchg
push
es
test
or
push
or
dec
fwait
pop
lock
or
cmp
test
jae
xor
push
js
pop
in
in
mov
dec
push
pop
push
shlb
mov
imul
cltd
cwtl
sbb
dec
or
outsl
mov
adc
cmp
sbb
shl
fisubrl
xor
mov
je
fwait
pop
pop
xchg
rclb
cmp
sub
jae
xchg
cmp
inc
loopne
mov
add
js
cli
ret
je
cmp
pop
loopne
dec
sarb
inc
pusha
sbb
out
ss
adc
or
mov
push
mov
out
js
push
jle
stos
scas
jo
andl
test
fsub
ficoms
mov
xchg
subl
pushf
into
imul
test
pop
add
fucomi
mov
enter
repnz
insl
cltd
lods
sub
jmp
roll
jns
dec
test
push
mov
shrl
lock
in
cmp
mov
jns
and
push
dec
pushf
dec
pop
arpl
cwtl
push
movb
ret
pop
dec
mulb
imul
push
ss
jmp
jge
adc
ja
cmp
mov
sbb
xor
and
call
add
and
repz
pop
mov
scas
push
ljmp
call
mov
out
sbb
cmp
adc
pop
sub
test
adc
add
fdivs
ret
xor
push
mov
mov
lea
and
push
roll
imul
or
mov
mov
addl
push
cmpsb
cwtl
push
mov
xchg
jb
lahf
mov
in
and
gs
mov
out
or
mov
jg
adc
test
pop
repnz
loop
test
test
adc
push
addl
repz
push
cmp
ljmp
sar
xchg
imul
mov
pop
icebp
hlt
pop
or
mov
aad
sub
xor
out
jmp
out
adc
inc
push
sbb
jns
das
jns
jle
pop
test
jg
fistpll
mov
ss
dec
cmpsb
pusha
mov
adc
shll
sbbl
mov
xor
dec
sbb
imul
sbb
imul
or
loop
inc
jne
cmp
imul
fildl
mov
les
jnp
std
jbe
outsl
decb
cmpsl
hlt
jnp
adc
fidivrl
fists
scas
scas
push
rorl
jecxz
negb
aaa
inc
cmp
ja
add
jnp
cld
or
jnp
aam
pop
dec
jbe
sbb
movsb
add
adc
ret
emms
and
add
mov
sub
or
mov
mov
add
scas
sbb
xor
pop
enter
sbb
pop
lcall
in
sub
stos
scas
ljmp
lahf
mov
lret
jo
test
sbb
push
dec
push
mov
stos
std
fidivl
pop
fnstcw
dec
arpl
outsb
ret
shl
nop
lea
add
xlat
sahf
std
jg
cld
mov
or
sub
mov
stos
loope
lock
and
lea
popf
bound
into
ds
test
add
insb
pop
push
leave
cwtl
stos
push
icebp
mov
mov
addr16
into
stos
push
inc
adc
xchg
xor
movsb
sub
in
out
and
hlt
cmp
stc
add
in
inc
pushf
rorb
cli
movsl
cmp
les
daa
and
xbegin
pop
xchg
and
xchg
xor
lahf
push
push
push
mov
lea
out
ds
mov
push
ja
lret
ficomps
lcall
popa
popa
cmpsb
cmp
push
mov
pop
sbb
pop
mov
sbb
sub
lds
push
mov
adc
sub
mov
xchg
sti
in
dec
pop
xchg
imul
test
rol
ja
pusha
adc
inc
dec
ret
jno
sar
cmp
movsl
insl
xor
xor
adc
inc
pop
and
mov
adc
add
bound
add
mov
push
xchg
jmp
add
stc
inc
cmp
ss
fcoms
jnp
jno
cmp
imul
add
pop
lea
out
fcom
dec
inc
xchg
mov
or
daa
and
and
push
mov
or
push
jle
xchg
fmull
xor
pop
pop
xor
sbb
aaa
orl
popa
ljmp
cmp
sbb
lds
insb
adc
shr
mov
int
cli
repz
and
mov
orl
rol
sti
loopne
jmp
aad
jb
push
in
insl
or
outsb
add
adc
jge
loopne
imul
jge
cwtl
and
das
enter
icebp
outsb
sub
cmp
dec
cli
fsubrs
jmp
add
inc
xchg
push
mov
adc
jle
nop
lods
ret
je
aam
test
jp
and
sti
mov
cwtl
sub
mov
adc
mov
xor
push
sarb
pop
flds
ret
leave
mov
mov
fs
fcmove
adc
les
xor
or
xlat
fwait
sbb
push
popa
jge
fs
sbb
movsb
add
cli
stc
in
out
dec
stos
add
jmp
lock
daa
insb
sarl
aam
jle
sub
in
or
xchg
push
clc
or
push
daa
lock
mov
inc
or
mov
scas
ficompl
xchg
fcompl
in
xchg
push
test
pop
inc
mov
add
pop
jmp
aam
pop
cmpl
push
adcb
daa
aad
lcall
xchg
jle
ds
test
aam
or
rcrl
mov
and
pop
js
dec
int3
lods
mov
pop
push
pop
mov
add
mov
mov
mov
sbb
arpl
xor
jmp
subb
add
xchg
dec
or
popa
jb
inc
xchg
gs
push
dec
jmp
lods
arpl
imul
out
into
mov
add
push
stc
stos
imul
push
add
cmp
pop
cli
cmp
sbb
fisttps
inc
cmp
in
adc
mov
dec
pop
mov
mov
fcomps
cmp
incl
fildl
and
mov
imul
jns
cwtl
test
sarl
nop
vunpckhps
sub
call
dec
or
pop
sub
mov
dec
add
sbb
das
xchg
pop
aas
in
in
mov
out
cmp
sub
fwait
push
mov
lock
and
imul
mov
cwtl
xchg
scas
xor
cmpsb
fidivl
mov
cmpsb
sub
into
mov
je
and
pop
jns
dec
aaa
push
pop
mov
and
mov
aad
or
xchg
xchg
sarb
jne
daa
push
xchg
xchg
sbb
mov
xchg
add
lea
adc
pop
push
sbb
stos
sub
pusha
insb
jb
xchg
lret
push
or
xor
aaa
out
cwtl
mov
ja
lret
aas
mov
or
outsl
nop
xchg
sub
insb
and
outsl
push
fwait
mov
fmuls
mov
push
clc
fnstcw
movsl
iret
mulb
lods
pop
sbb
andl
fisttpl
adc
jle
cld
jns
inc
inc
imul
mov
mov
sbb
dec
stc
fnsave
popf
pusha
in
xchg
xchg
dec
sub
xorl
jns
inc
sarl
push
clc
rolb
jb
fdivl
sahf
jp
xor
push
inc
pop
xchg
push
pandn
hlt
push
aam
inc
cmp
dec
popf
das
xchg
icebp
mov
fstpl
mov
icebp
sti
cmp
sbb
or
add
scas
test
leave
push
aad
mov
sub
xor
aas
fsubrs
xor
or
pop
xchg
inc
sbbl
sbb
cmp
adc
and
pusha
pop
mov
xor
lock
push
repnz
xchg
ret
sub
aam
sub
cltd
int3
pop
pop
sbb
fistpll
sub
inc
jmp
aas
movb
add
lret
sbb
cmpsl
xor
pop
jp
movsb
cs
mov
imull
xchg
imul
stos
mov
mov
and
push
stos
js
lret
fidivrl
imul
xchg
insb
loop
mov
cld
adc
aad
mov
mov
add
arpl
test
xchg
jo
mov
pop
push
negl
fwait
sahf
jb
sub
mov
negb
mov
add
push
mov
jl
push
fdiv
inc
inc
jbe
popa
fwait
enter
lods
or
loop
nop
dec
push
adc
push
pop
lds
addr16
mov
pop
fs
and
mov
ss
push
into
pop
cmpb
sub
shlb
mov
xchg
lods
mov
mov
push
push
inc
cmc
fmul
or
std
loopne
lock
pop
in
push
xchg
test
inc
push
repz
mov
gs
inc
out
push
int3
cli
jb
int
mov
out
mov
fs
sbb
syscall
or
js
shlb
lret
cwtl
xchg
mov
mov
inc
sbb
cmp
dec
arpl
xchg
not
inc
or
sarb
push
push
fisttpll
ds
sub
inc
iret
or
stc
int
adc
lods
cmp
add
mov
xor
fadds
les
cmpsl
xchg
test
xchg
sbb
mov
subl
adc
mov
push
adc
or
fnsave
lods
shll
dec
mov
fcomp
jl
popf
ja
movsb
xchg
cmp
mov
ljmp
jp,pn
int3
lret
mov
pop
inc
and
pop
insb
pusha
or
inc
xchg
pushf
mov
mov
in
mov
add
mov
pop
leave
sbb
das
or
sub
repz
sbb
mov
ficomps
fildl
mov
xor
mov
clc
jecxz
mov
arpl
dec
sub
dec
jo
sub
sarl
aam
add
cwtl
and
and
and
sub
mov
std
ret
xor
sarl
clc
test
jb
inc
outsb
test
or
xor
lahf
push
clc
ja
xor
cwtl
in
notl
or
je
int
adc
addr16
xor
cwtl
loop
mov
inc
pop
in
mov
pop
repnz
adc
xor
sub
pop
inc
push
push
push
push
push
movsl
adc
jecxz
fimull
mov
scas
push
sahf
mov
scas
add
add
icebp
jle
push
mov
das
addb
push
cmp
jg
push
mov
outsl
add
pop
hlt
dec
jae
mov
scas
dec
sub
sysexit
pushf
es
int3
and
cltd
sub
insl
xor
sub
sub
out
mov
inc
imul
inc
test
adc
jecxz
mov
push
xchg
leave
and
push
ljmp
cld
hlt
adc
addb
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
jmp
jo
cmc
dec
orb
sub
mov
pop
addl
push
mov
setl
xor
add
std
insl
mov
mov
pop
and
push
cli
popa
xor
xchg
xchg
mov
jmp
out
sub
cmc
loope
xor
arpl
rcl
dec
jp
jge
loop
adc
outsb
pop
push
jae
loope
inc
pop
scas
mov
out
lock
mov
jmp
dec
sub
imul
jg
mov
pop
adc
sub
pop
dec
setno
pop
fsubs
or
fdivs
insb
fwait
pop
mov
and
insb
sbb
and
repz
outsl
jg
stc
or
ljmp
cwtl
stc
fnstcw
xor
sub
movsl
xchg
or
pop
shl
jo
bound
jbe
ja
out
pusha
pop
add
jl
pop
imul
repnz
sahf
sti
add
push
sbb
int
xor
jo
clc
cmc
push
push
or
xlat
adc
cmp
ss
xor
dec
in
inc
xchg
or
mov
cmp
push
jno
adc
sub
lret
jne
call
not
mov
sbb
inc
ret
add
mov
sub
and
xor
insl
das
mov
mov
inc
jl
popf
outsb
lds
mov
or
cmp
gs
inc
xchg
test
shl
or
sti
stc
inc
push
data16
adc
nop
adc
inc
subl
mov
inc
mov
or
dec
fildl
dec
dec
pop
mov
cmc
sbb
out
insl
mov
leave
push
daa
daa
icebp
out
test
cs
push
push
inc
orl
loope
mov
cltd
xchg
push
sbb
mov
push
jl
nop
pop
push
pop
insb
add
or
jne
mov
sbb
shl
mov
std
xor
mov
repz
push
mov
mov
pushf
cmp
or
inc
push
mov
arpl
je
into
lods
push
mov
or
popa
movsl
xchg
mov
mov
cmpsb
xorb
into
aaa
push
mov
repz
xchg
arpl
sub
inc
push
push
pop
popf
jg
xchg
popl
cmp
int3
inc
fimull
test
shrb
pop
pop
pop
rcl
ret
pusha
cmp
dec
dec
loopne
test
data16
and
das
pslld
out
ret
jp
icebp
popf
or
pop
push
loop
loop
inc
shlb
into
mov
sbb
rcl
ljmp
test
fsubl
sub
mov
ds
cmp
arpl
ja
mov
inc
shll
outsb
dec
fistpll
jno
sbb
jae
sub
icebp
jle
pushf
loop
xchg
outsl
js
jae
daa
movsb
outsl
xlat
das
rcrb
bound
mov
dec
loope
es
jp
xchg
xor
lret
mov
lcall
inc
faddl
movsl
scas
mov
jg
and
enter
or
rorb
repz
stos
dec
pop
cmp
adc
fucomip
sahf
sub
jge
outsb
pop
push
push
inc
test
pop
xor
icebp
sub
add
lods
iret
cmp
jmp
js
xor
mov
add
sbb
pusha
std
inc
adc
dec
lods
or
rcll
mov
xchg
adc
mov
in
jp
xor
movb
or
lahf
mov
mov
jbe
xor
inc
dec
cmpsl
loopne
dec
dec
inc
sbb
sbb
jne
out
sti
out
mov
shll
pop
fcomip
dec
pop
xchg
sub
sbb
sub
insb
mov
enter
lds
arpl
sbb
push
cmp
lret
movsl
cmpsl
out
adc
lahf
std
xchg
jle
loop
repnz
xor
lret
cmp
dec
dec
cli
repz
and
fmull
adc
xor
push
lret
daa
push
ret
or
mov
addr16
mov
js
int3
aas
add
out
or
notl
mov
mov
test
imul
out
stc
aam
dec
push
xor
add
pop
sbb
mov
dec
shll
ljmp
xchg
push
stos
outsl
jle
les
cli
mov
push
ss
xchg
push
nop
pop
inc
cwtl
jnp
or
sbb
imul
outsl
idivl
cli
fs
dec
fcom
push
test
loopne
std
push
stos
mov
sbb
out
lcall
pop
and
aad
shlb
cmp
shr
xchg
call
pop
cld
dec
adc
int
sti
add
movsb
mov
xchg
mov
fsubrl
or
sub
xor
bound
push
ret
rorb
cmp
data16
sbb
jge
and
and
sub
fstl
and
mov
jp
jmp
and
call
aas
andb
pop
mov
sub
mov
in
xchg
rcrl
cmpl
fsubs
jg
pop
in
inc
lods
insl
insb
dec
dec
xorb
les
test
pop
in
hlt
enter
mov
push
imul
push
inc
push
ret
inc
jle
stos
dec
jbe
movsl
xchg
rcrb
push
jno
fdivp
sti
icebp
xchg
nop
sbbb
mov
dec
mov
sub
lock
ss
xchg
push
sbb
cvtps2pi
mov
or
inc
mov
jp
inc
shrb
test
sbb
xlat
cwtl
push
out
decb
cmp
or
push
mov
dec
repnz
mov
popf
sbbb
inc
mov
mov
mov
add
push
movsb
or
xor
push
pusha
xchg
and
sub
rcrb
dec
jg
out
adc
repz
data16
mov
in
adc
push
je
movsl
adc
clc
push
and
les
cmp
add
dec
aas
stc
fsub
push
push
out
popa
cmc
push
lds
sub
stos
je
jo
cmp
test
cmp
loope
movb
and
outsl
stc
push
loopne
jl
cs
and
and
std
jno
push
subl
imul
imul
add
pop
cmp
push
pop
hlt
fisttpll
xchg
push
and
adc
jle
jl
adc
push
adc
mov
and
movsl
cwtl
jae
aas
loope
jno
rcr
pop
loope
push
nop
pop
sbb
add
imul
jge
pop
out
ja
shl
mov
fiadds
push
push
das
fcomi
arpl
imul
xchg
push
inc
xchg
enter
test
jge
in
push
pop
or
jns
cmc
scas
bound
fadd
aad
loopne
pop
jns
xchg
sub
mov
les
dec
sahf
ds
dec
fisttpll
mov
push
lds
repz
std
in
cmp
jle
hlt
iret
in
push
in
popa
lock
push
push
cmpsb
sbb
or
in
jp
sub
dec
stos
loope
outsl
add
mov
mov
jnp
scas
das
push
sub
or
mov
repz
mov
push
lods
jg
icebp
cld
sbb
jns
add
mov
test
addr16
pop
stc
dec
lea
mov
jle
adc
bound
inc
call
jmp
jp
xor
in
repz
dec
xor
adc
fldt
data16
loop
jecxz
sahf
in
cmp
pop
and
xchg
jg
xchg
fstpt
std
or
movsb
enter
inc
sub
mov
daa
in
mov
adc
mov
pop
in
adc
xor
fs
pop
mov
push
jo
mov
addr16
add
out
adc
dec
xchg
fstps
mov
iret
xor
in
icebp
cltd
imul
adc
jge
jl
fsubr
gs
push
sub
adc
inc
jp
std
lahf
push
dec
add
mov
mov
jmp
jb
xchg
mov
test
and
outsl
cmpsl
push
loopne
movsl
lods
scas
mov
ja
test
jmp
sahf
sbb
push
inc
sub
cwtl
jl
add
jle
dec
sbb
aam
icebp
imul
in
push
mov
add
cmpsl
pop
leave
ja
jae
dec
jmp
es
js
and
inc
jge
jmp
loope
dec
dec
loope
js
mov
imul
pop
stos
add
pop
mov
pop
stc
jle
in
shr
ret
ja
sbb
out
je
in
sub
sbb
pop
lock
test
mov
jmp
dec
addb
enter
aaa
dec
jns
sub
repz
aad
jnp
mov
add
cs
and
jmp
fisttpll
jnp
fwait
pushf
jl
jne
mov
loope
and
subl
xchg
jbe
xchg
adc
pop
push
add
mov
bswap
mov
out
xor
or
dec
add
cltd
addr16
sub
dec
in
jp
out
xor
lret
xor
cltd
sub
sbb
loop
repnz
mov
stc
rcl
adc
cld
add
mov
pop
push
or
shl
push
ja
movl
lret
outsb
jecxz
aaa
mov
adc
cmp
icebp
mov
das
lahf
mov
mov
or
xor
pop
add
leave
leave
mov
rcrl
inc
les
sub
sub
ja
xchg
stc
lcall
inc
xchg
lods
sti
jge
mov
ljmp
int
dec
push
mov
lock
nop
pop
das
ja
gs
test
pop
jnp
inc
ja
push
xor
aam
jb
movsb
inc
sbb
aas
sbb
xor
jbe
cmp
inc
xchg
rcrl
div
mov
mov
mov
add
test
cli
dec
int3
mov
ret
fwait
jl
push
push
out
cmpsl
lock
mov
inc
inc
iret
cmc
int3
aaa
test
daa
and
lds
daa
les
das
and
out
jns
mov
push
xor
jbe
pause
dec
mov
in
xchg
mov
pop
imul
jp
jne
mov
add
xchg
pusha
mov
push
scas
fdivrl
mov
int
repnz
sub
or
mov
push
loopne
or
mov
inc
popf
test
cmp
pop
test
sarl
adc
sbb
scas
ja
in
decl
inc
push
push
cmp
adc
loopne
int
bsr
in
test
leave
mov
std
enter
mov
div
jb
jl
ljmp
and
je
and
pop
cmp
mov
lds
pop
std
mov
jmp
pop
mov
xor
adc
cmp
sbbl
xchg
scas
jno
mov
mov
mov
push
pop
bound
push
xorb
mov
cmpsl
mov
dec
es
jb
test
mov
mov
sub
xchg
push
inc
sub
sbb
pop
adc
xchg
mov
mov
cmpb
xchg
popf
jns
jo
shl
loop
push
mov
mov
mov
fs
fisubrs
scas
or
xchg
adc
pop
cltd
movsl
lea
movsl
arpl
mov
pusha
outsb
fcomps
outsl
cmpsb
or
lret
dec
out
mov
sub
add
fisubrl
mov
fdivs
mov
cmp
sub
mov
imul
jmp
in
test
jbe
stos
jb
fbstp
repnz
das
mov
mov
sub
jae
gs
pop
push
push
and
jae
dec
clc
push
imulb
outsb
sbb
mov
mov
fnstsw
movsl
cmpsl
sub
xchg
test
lret
xor
mov
idiv
pop
rcrl
adc
mov
xchg
daa
cmpsl
sub
cmp
xor
jo
das
cmp
cmc
xor
std
aad
test
xor
or
rorl
fstpt
xor
loopne
push
jo
cmp
add
dec
call
mov
cmp
cmp
js
jns
push
pop
adc
cmp
lret
imul
inc
mov
add
int
mov
mov
or
shll
cmp
mov
mov
dec
push
add
sub
dec
mov
inc
mov
aad
cld
xchg
cmpsb
scas
int
insl
fldcw
push
sub
notb
push
mov
popa
add
dec
into
adcl
sahf
test
incb
mov
push
jns
adc
ja
insb
fs
add
mov
or
addr16
test
lea
dec
test
push
mov
ret
je
adc
aam
mov
std
inc
lods
cmp
push
icebp
je
imul
std
lret
outsb
pop
pop
and
or
gs
cltd
jg
add
xchg
stos
xchg
mov
push
fbstp
fsubp
mov
sbb
mov
notb
pop
adc
adc
sbb
and
mov
pop
push
enter
ret
sub
mov
in
aaa
outsl
sub
xchg
xchg
cmc
mov
pop
cmp
in
jnp
and
rolb
sahf
or
jne
mov
sbb
out
jge
add
xchg
cmp
ret
ret
mov
dec
popa
dec
push
outsb
aas
and
xor
sub
lods
cmpsb
fstl
mov
pop
mov
jo
aad
out
pop
fs
mov
jle
icebp
aas
test
sbb
lods
test
xor
repz
into
push
sahf
cltd
jp
jne
push
std
inc
sbb
scas
ss
rorb
push
xchg
xchg
mulb
imul
inc
daa
clc
fs
xchg
mov
lret
add
xchg
or
rol
adc
rcrb
push
lret
xor
sti
pop
cmpsb
lods
scas
mov
outsl
enter
adc
nop
icebp
mov
inc
adc
dec
ret
ds
mov
sub
sub
ret
enter
pop
stos
xor
jno
fisttps
and
sbb
dec
adc
cmp
divps
push
loope
lahf
js
cltd
sub
pop
ss
sub
and
cs
int
or
and
popf
and
hlt
or
cld
mov
xor
mov
mov
mov
jne
mov
xor
xor
gs
cmp
fiaddl
push
fisubs
jecxz
loope
xchg
fldcw
jbe
fidivrl
jns
push
push
leave
sub
mov
cmpsb
lods
int3
xchg
lret
xchg
cld
repz
mov
dec
cli
addr16
push
aam
push
sbb
adc
cmpsl
jmp
lret
inc
mov
into
movsb
push
mov
pop
out
loop
pop
popf
imul
movsb
cltd
sub
mov
outsl
pushf
out
push
dec
push
mov
sub
push
lods
sbb
cmp
stos
popa
xor
sahf
in
nop
shlb
xchg
xchg
adcb
gs
insb
or
stos
addb
add
mov
ss
ljmp
aad
in
out
dec
dec
ret
in
ss
das
jle
xlat
mov
js
sbb
daa
aam
or
push
dec
movsb
fstps
pop
scas
xlat
jmp
insb
sub
cmp
aam
xchg
ds
pop
stc
insb
add
inc
stos
fsubrs
cli
push
add
pop
rcrb
lea
add
and
cmpsl
inc
mov
wrmsr
adc
inc
test
pop
mov
aaa
mov
sbb
test
xchg
bound
add
stos
mov
pop
call
adc
xchg
mov
sbb
sbbl
scas
test
push
dec
lret
jp
pop
ret
xchg
aad
cmp
mov
cmp
int
orl
adc
push
ror
outsb
jnp
push
or
jne
subl
push
pop
sbb
sbb
loop
and
fwait
xchg
xchg
jae
loopne
jecxz
xlat
jge
repz
aas
inc
repnz
out
add
jecxz
pop
sbb
mov
ror
stos
enter
inc
mov
push
jge
dec
cmpsb
xchg
repnz
sbbl
ds
xor
jecxz,pn
pusha
jnp
lock
mov
movsb
adc
pop
xor
dec
sbb
jae
jmp
mov
pop
mov
aam
xchg
fwait
stc
aad
sub
in
shr
test
cmp
push
pop
into
xor
xchg
and
stos
cmc
dec
mov
mov
movq
xchg
push
or
jns
aad
and
mull
icebp
mov
xchg
lcall
rorb
mov
fnsave
mov
fidivrl
mov
scas
adc
or
push
dec
addb
pusha
insb
test
shll
ss
fsubl
and
test
push
sarl
sub
daa
mov
movsb
or
cld
clc
adc
fistpll
mov
sahf
movsb
out
mov
inc
lea
in
jne
jl
pop
in
and
cmp
mov
mov
xchg
xorl
fwait
and
leave
xchg
fidivl
fmuls
xor
and
aam
outsb
imul
loop
pop
shll
fstpt
pop
lds
in
xor
test
xor
scas
nop
mov
push
jne
xchg
dec
xchg
push
cmp
call
insl
sti
jae
push
pop
push
jp
dec
fs
jg
xchg
fs
jmp
or
daa
mov
inc
mov
sub
outsl
inc
mov
popa
iret
aam
sub
lock
test
xor
mulb
inc
int
shll
jae
cli
cs
inc
push
in
pusha
out
test
es
cs
mov
mov
outsl
pusha
jae
xchg
sahf
mov
xor
insl
push
lret
push
pop
call
xchg
jecxz
out
xlat
nop
pop
jnp
ffree
test
pop
jg
mov
xchg
ss
loopne
idiv
movsb
mov
mov
push
inc
mull
lds
pop
pushf
arpl
sbb
outsb
jno
jle
mov
adc
stc
int
scas
ss
clc
scas
mov
aad
mov
into
dec
dec
xchg
jecxz
and
subl
add
in
adc
or
adc
mov
mov
xchg
fsin
cli
cli
enter
in
scas
mov
test
insl
lret
cs
lea
data16
xor
shlb
ret
fldcw
sub
jle
clc
out
mov
mov
mov
mov
cmp
imul
and
lods
mov
popf
dec
insb
cwtl
jne
loope
cli
icebp
mov
and
imul
push
rorl
test
mov
adc
mov
lds
and
jb
mov
pop
ficoms
mov
insl
dec
push
adc
jp
std
jno
xchg
jmp
aam
push
add
imul
push
cmpsl
cmp
sub
js
mov
sub
jp
imul
test
fmuls
dec
push
xlat
jns
cmp
mov
mov
js
rcrb
js
dec
push
jnp
add
jge
je
and
mov
dec
mov
daa
xorl
lock
lods
pop
inc
inc
cld
movsl
scas
in
adc
aam
imul
inc
aas
xchg
bound
out
push
not
cmc
arpl
loop
or
cmovp
fsubp
lcall
lock
xlat
pop
push
xchg
out
sub
in
lcall
fs
push
fdivrs
pop
fsubrp
insb
popa
in
pop
add
sbb
add
mov
pop
jnp
dec
mov
jae
movsl
jecxz
call
cmc
inc
pop
je
shl
adc
loope
xor
cld
inc
pop
add
and
pop
sbb
add
add
sbb
stc
jb
imul
push
xchg
imul
mov
xor
hlt
mov
clc
insl
xchg
nop
outsb
mov
mov
cli
xor
aad
xchg
xchg
add
fistpl
xor
sbb
xchg
lret
sub
inc
sbb
pop
mov
or
jne
jae
or
xor
out
jo
push
mov
inc
pop
push
mov
outsl
into
mov
in
and
jbe
pop
add
mov
jnp
pusha
jge
jb
sbb
inc
mov
mov
dec
fisubrs
push
jl
out
xchg
dec
add
xchg
push
pop
repnz
mov
xchg
rorl
dec
sbbb
repnz
rolb
mov
stos
flds
or
push
sub
cmp
add
test
sbb
out
adc
inc
adc
fsubrs
enter
scas
pop
jecxz
jae
push
or
fcoms
pop
lahf
lods
mov
xchg
pop
adc
adc
js
sbb
andl
mov
inc
das
jo
call
gs
stos
icebp
test
arpl
add
xchg
mov
bound
aas
imul
sarb
scas
insl
cmp
push
movsl
scas
ffreep
add
scas
sbb
fwait
mov
push
nop
push
xor
fistpl
scas
jle
js
mov
add
arpl
lret
jnp
stc
inc
mov
dec
ljmp
push
xor
js
and
jp
orb
add
mov
cld
movsb
push
loop
sub
and
repz
push
ds
fwait
xor
cmp
adc
in
clc
pop
dec
or
lds
mov
addr16
clc
lcall
pop
movsl
adc
sbbl
cmp
pop
adc
dec
nop
ficoml
aas
push
dec
imul
out
andl
dec
sub
cmp
rcll
repz
fs
jb
cmpsb
loop
aam
mov
push
mov
mov
dec
es
jmp
outsl
push
pushf
jb
jmp
mov
insl
xchg
jne
std
sub
loop
sti
loope
or
jle
fldt
ficoms
scas
and
inc
xorb
inc
or
out
pop
pop
ljmp
push
push
mov
gs
mov
into
cmp
push
vmovq
mov
cltd
repz
adc
andl
movsb
pop
adc
pop
scas
ficoms
pop
fnsave
loop
xor
fistpll
nop
adc
adc
push
fidivl
xor
and
outsl
jo
jns
lret
ret
iret
cltd
jbe
mov
add
je
iret
jge
sti
out
jle
fildll
mov
mov
ss
add
or
flds
sub
inc
dec
or
fcom
mov
lods
movsl
or
push
cmc
push
aam
idivl
and
xor
jnp
sbb
fwait
or
cmp
xchg
xor
sbb
add
int3
call
mov
or
lea
sbb
aam
jecxz
adc
add
popf
mov
lds
pop
or
cli
mov
mov
dec
cmp
rorl
or
fdivrs
push
lret
call
stos
mov
aad
or
pop
ds
cmp
inc
loope
lret
or
pushf
decb
lahf
push
sub
popa
jnp
clc
ss
in
and
aam
adc
fadds
mov
inc
dec
inc
les
repnz
int3
mov
into
repz
pusha
add
out
add
push
adc
leave
arpl
enter
pusha
repz
repz
xor
test
dec
xor
inc
jp
mov
xchg
imulb
stc
inc
movsb
cmp
push
xchg
fiadds
xchg
adc
push
imul
fwait
lret
pop
or
xor
lods
adcl
mov
jns
cli
fimull
inc
loop
jle
das
mov
fcoml
insl
sbb
sub
fwait
mov
mov
ds
xchg
pop
je
dec
dec
imul
xor
jae
jo
leave
push
shrb
sub
mov
lods
jle
cmc
test
and
sarb
mov
pop
xor
ja
sbb
outsb
loopne
ja
insb
outsb
sub
insb
mov
sbb
dec
aam
bound
popf
mov
cs
cmpsb
and
or
xor
jecxz
pop
iret
out
aaa
imulb
mov
ret
sbb
pop
into
stos
xchg
xchg
es
dec
aaa
je
inc
mov
inc
repz
test
test
sbb
sbb
cmpsl
xor
outsb
into
dec
ds
dec
sbb
aad
test
mov
mov
push
enter
negb
daa
pop
gs
test
cwtl
mov
iret
jp
jbe
ret
pop
leave
cltd
mov
imull
jle
data16
dec
jbe
movsl
sarl
cs
sub
xchg
xchg
test
fadd
mov
cmpsb
pop
push
les
or
cli
xchg
int
rorb
aam
and
jns
popa
push
jmp
shll
in
xchg
mov
sarb
adc
lahf
popa
test
nop
repnz
jnp
xchg
fiaddl
lds
and
pop
fcoms
jmp
sarl
or
nop
fcoms
je
xchg
push
mov
sahf
sbb
popf
cltd
mulb
repz
jl
test
mov
pusha
fisttpl
pop
stc
pop
insb
dec
dec
outsb
out
ret
test
cltd
xor
fmuls
in
pop
sbb
cmc
push
imul
repnz
xor
fiaddl
fldcw
sbb
std
shl
sbbl
ja
sbb
data16
rcl
test
aad
int3
mov
jno
popf
cltd
mov
mov
stos
orl
add
add
xchg
rorb
stc
in
push
cli
lea
imul
and
lret
stos
fwait
pusha
pop
lret
xor
jbe
movsb
pop
cmp
sbb
push
jae
mov
popf
xor
es
scas
js
pop
sub
pop
scas
jg
jnp
or
lods
push
pop
lods
and
jno
add
add
clc
enter
mov
test
iret
jae
sub
movl
pop
cmp
test
mov
sbb
es
in
movsb
bound
jbe
fidivrs
cmp
mov
fldcw
dec
jl
jle
sarl
shrl
mov
subl
push
pop
adc
inc
pop
sub
xor
pop
cld
add
pusha
out
fldenv
pop
mov
xor
xchg
data16
push
push
cmp
std
ficoml
push
cmp
je
fstl
orl
rcrb
stos
popa
push
mov
subps
mull
gs
hlt
pop
add
pop
cs
xlat
rorl
xor
and
mov
pop
mov
mov
sarl
ja
mov
mov
and
out
inc
jb
xchg
dec
jl
jae
push
xchg
scas
enter
les
sub
lods
push
test
sbb
xor
repnz
add
mov
mov
push
sbb
mov
shll
mov
and
xchg
cmpsl
aam
insb
andb
sbb
sbb
xchg
in
cmp
or
cmp
loope
and
dec
jae
jb
mov
mov
push
xchg
inc
sti
cmp
jns
ret
pop
mov
xor
push
pop
pusha
loope
lods
inc
dec
lds
fucomp
dec
in
jge
jmp
cmp
mov
into
popa
sbb
popa
test
pop
xchg
imul
fcomps
sbb
fcoml
or
mov
mov
mov
ret
dec
or
ds
jecxz
pop
push
into
cmp
inc
sub
or
outsl
pop
mov
or
mov
mov
fcmovu
iret
lock
xor
dec
sbb
fidivs
or
pop
sub
adcl
movsl
leave
bound
inc
addb
mov
inc
push
or
sub
int
lods
mov
fwait
js
decl
stos
add
cld
or
xor
cmc
push
cmpsl
dec
lds
test
in
xor
imul
in
lcall
dec
sub
daa
inc
push
ja
outsb
adc
cmp
push
out
and
out
mov
repz
cmp
mov
into
inc
add
cmp
xchg
imul
pop
sbb
cs
test
jge
pop
and
imul
and
or
push
hlt
xchg
cs
bound
imul
jo
sbbl
sahf
iret
icebp
std
mov
push
mov
mov
cmp
jno
scas
xlat
leave
sub
enter
shl
mov
jmp
iret
xor
mov
add
testl
lret
sub
inc
jo
xchg
mov
sahf
jle
mov
or
dec
jbe
mov
cld
pop
psraw
xor
call
mov
testl
jmp
xlat
outsl
fdiv
in
outsl
jg
fwait
xchg
push
jae
jne
sbb
add
inc
jge
xlat
jl
sub
adcl
fildl
cmp
mov
jmp
lods
mov
lret
stos
mov
icebp
pop
cmc
rcrb
pop
je
mov
jo
outsl
pop
push
inc
incl
adc
stos
xchg
loop
cmc
shll
sahf
pop
mov
adc
in
cmc
xor
insb
xchg
pop
movb
xor
sub
mov
xor
jl
loop
out
jp
pop
xchg
pop
xchg
out
sub
popf
lds
xchg
das
mov
cmpsl
push
xor
jge
sti
jo
jle
jle
and
lods
push
mov
adc
fsubs
in
xor
pop
out
jne,pn
ds
xchg
lea
jns
call
popf
rcll
and
out
js
fs
loopne
popa
loop
jne
sbb
je
inc
loop
mov
push
sbb
sahf
ficompl
push
dec
loop
or
sub
dec
iret
mov
mov
lret
and
cli
and
push
out
not
inc
xchg
lret
push
out
jns
cmp
xchg
mov
mov
jae
xchg
or
add
pop
xchg
fwait
bound
test
mov
jne
sub
push
js
data16
jg
jg
and
add
das
ss
adc
xchg
fadds
sbb
add
mov
mov
cltd
rcrb
pop
and
fisubl
push
jne
xchg
push
mov
adc
enter
dec
int
aas
and
jg
xor
xchg
and
cmp
fmull
sbb
and
dec
pop
fstpl
fiadds
lahf
xlat
xchg
stos
incb
sbb
fmul
sbb
out
jbe
bnd
cs
pop
bnd
into
sub
mov
pop
cmpsl
xor
sbb
xlat
inc
sbb
lcall
push
aam
pop
clc
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
jmp
adc
xchg
add
inc
addb
lahf
ss
or
das
add
inc
dec
xor
push
xor
and
stos
jae
shlb
dec
cs
leave
jmp
lea
mov
mov
mov
gs
xchg
add
add
scas
mov
neg
repnz
xorb
cmp
dec
int
mov
jae
xchg
sbb
dec
ds
lock
aam
lods
cmp
stos
adc
xor
sarl
sbb
fimuls
roll
scas
pop
pop
mov
sub
fs
push
into
lock
icebp
sbb
inc
mov
insl
inc
sub
shll
dec
repz
push
loop
bound
sbb
dec
or
pop
jmp
xchg
pop
and
dec
push
sub
cmp
cwtl
xor
mov
adc
xor
ja
popa
cmp
or
push
add
aam
loop
insb
mov
mov
add
sub
aad
cli
inc
jle
jb
inc
sub
cmc
mov
ret
loop
test
sti
mov
movsl
insb
mov
mov
ret
adc
scas
xor
jp
aaa
or
jbe
or
sub
or
pop
mov
cld
adc
sub
sub
addb
inc
fidivrl
jmp
ss
xor
push
icebp
sbb
out
add
gs
out
xor
xorl
xchg
lock
adc
mov
cmpsb
xchg
add
dec
fidivrl
pop
outsl
mov
mov
fsts
push
mov
out
dec
xchg
jne
rcr
adc
subl
jmp
pop
add
sbb
out
and
adc
dec
adc
xchg
pop
orb
out
cwtl
lcall
iret
inc
imul
mov
mov
dec
xchg
push
adc
xchg
out
lea
dec
dec
imul
inc
cmp
adc
outsl
loope
mov
out
jnp
mov
cld
test
int3
scas
sar
pop
popa
dec
jl
or
mov
xchg
loopne
sbbl
adc
xor
xchg
aas
daa
frstor
pop
xor
ror
mov
mov
and
stos
leave
fldcw
stos
mov
mov
rorb
outsl
xchg
or
icebp
sub
mov
mov
add
pushf
stos
adc
imul
lea
dec
and
in
rorb
mov
sbb
fdivl
jle
jmp
aad
aas
jp
push
insl
sub
mov
xchg
jno
mov
mull
rorl
jle
inc
jl
mov
clc
mov
cmp
inc
dec
cmc
push
push
andl
aam
mov
push
push
xor
or
mov
mov
subl
notl
imul
arpl
pop
cmp
mov
add
popa
aas
sbb
sbb
inc
call
xor
cmp
mov
popf
pop
cmpsl
das
lods
jge
aad
out
repnz
fisubrs
cwtl
push
loope
xor
or
add
in
addb
inc
inc
aad
test
add
mov
pop
lret
adc
lds
or
pop
jo
sahf
push
and
xchg
insb
or
dec
xchg
xchg
mov
push
jns
jl
add
jge,pn
fcoml
bound
cmp
adc
sahf
mov
xor
out
push
push
pop
xchg
out
add
mov
mov
lahf
iret
or
mov
cmpsb
das
stos
lods
in
mov
or
mov
sbb
cld
stc
in
mov
jb
pushf
sbb
push
or
push
mov
xchg
nop
test
in
add
mov
fidivs
outsb
xchg
iret
pop
sahf
xchg
adc
or
stos
sarl
fists
pop
add
daa
cmpsl
inc
inc
es
ja
or
jbe
inc
xor
stos
movsb
js
popa
movsl
or
cmp
fistpl
test
dec
insl
push
cmp
xor
test
and
inc
fiaddl
push
push
out
xor
mov
cmp
mov
mov
cmp
mov
sub
or
mov
fs
jg
andl
and
or
scas
shll
shll
sahf
push
lds
fildl
sbb
lea
mov
hlt
mov
aaa
inc
enter
outsb
mov
outsl
movsl
mov
add
shll
dec
icebp
shlb
in
in
cwtl
out
out
repz
mov
pusha
adc
sbb
fadd
xchg
cmpsb
shlb
push
out
jmp
mull
sub
xchg
add
add
xchg
andb
jp
push
popa
clc
xor
and
dec
jae
jnp
xchg
or
repz
pop
add
adcl
sbb
out
push
and
jb
mov
test
sub
xchg
in
inc
mov
or
xchg
fwait
jae
movb
mov
add
loop
mov
xor
test
add
mov
rcrl
mov
sub
stos
xchg
ljmp
mov
seta
arpl
inc
mov
vshufpd
sbb
addr16
imul
xchg
loop
push
stos
jne
pop
or
fnstsw
fists
fists
cltd
inc
cmp
std
cmpsl
rcll
addl
jp
fldcw
insb
and
hlt
sub
xchg
fistl
mov
or
cmp
lret
sbb
jg
xchg
xchg
mov
pusha
xor
test
push
xchg
cmp
mov
xchg
daa
push
icebp
mov
xor
in
test
cwtl
mov
add
or
and
lods
sub
cmpsb
decb
inc
dec
lahf
inc
fsubrl
push
insb
int3
out
xchg
sbb
arpl
bound
mov
cli
loope
stos
or
in
lock
xchg
pop
pop
jno
repnz
popa
xor
lcall
loopne
shlb
out
inc
jae
outsl
loope
cli
mov
dec
mov
lds
daa
and
fildl
adc
cmc
hlt
mov
and
je
in
call
sti
adc
cmp
lods
jle
pop
leave
movsb
xor
test
outsb
xchg
lret
sub
or
jne
mov
or
and
stos
or
adc
int
or
adc
dec
mov
mov
popa
jo
int
xchg
xor
data16
call
add
push
cmp
std
push
pop
popa
cmova
mov
imul
add
mov
and
cmpsl
cmpsl
lret
iret
test
sub
dec
test
std
cmpl
mov
xchg
out
stc
add
mov
shlb
lea
push
push
fldt
lret
ret
xchg
loope
fdivrl
xor
lods
repz
into
xchg
ja
out
mov
mov
inc
fdivrl
cs
pop
and
push
push
imul
cmp
scas
sbb
pusha
testl
jns
outsb
pop
sub
and
xchg
addb
repnz
jae
int
in
loopne
cmpsl
cmp
das
mov
add
and
mov
lret
out
fwait
clc
ss
popa
sub
adc
aas
or
mov
jl
popf
out
fldenv
push
cmpsb
push
mov
jnp
movsb
pushf
add
pop
out
inc
add
pop
inc
into
sti
sub
cltd
push
or
and
je
sbb
test
jo
dec
xchg
shr
sbbl
cld
test
leave
mov
popf
push
pop
xchg
movsb
lret
mov
adc
pushf
stos
mov
sti
je
inc
bound
xchg
jb
cs
inc
lret
rclb
cmp
and
mov
repz
cmp
pop
sarb
aam
jecxz
arpl
repnz
pop
or
push
test
fstp
push
ficoms
xchg
out
fmul
mov
push
add
pop
cmp
insl
loope
add
sbb
addr16
pop
jmp
xor
outsl
imul
adc
rolb
lds
mov
stc
loope
xor
sub
mov
jne
outsl
mov
jecxz
outsb
imul
ret
jb
dec
mov
jno
or
scas
shll
test
inc
rcl
jecxz
pop
cld
test
mov
dec
jno
nop
lret
fstpt
adc
push
mov
sbb
int3
pop
stos
and
fistl
loope
lock
adc
dec
movsb
fcoms
xlat
cwtl
inc
ficomps
jecxz
frstor
clc
mov
cmpsb
sti
jp
fmul
je
cltd
popf
push
add
sbb
int
fsts
and
jae
shr
pop
ud1
daa
gs
enter
xchg
sub
call
inc
xlat
jns
hlt
cmp
movsl
xor
mov
mov
push
dec
sti
mov
cltd
in
xor
movsb
loop
pushf
dec
pop
cmp
mov
imul
dec
out
mov
jge
jmp
mov
bound
lret
mov
lcall
add
push
in
mov
sub
push
lret
fdivl
jbe
and
cmp
lods
jb
mov
jle
nop
sbb
cltd
clc
scas
in
xchg
push
cmp
loopne
push
fstpl
out
out
cmp
orl
fnstsw
push
cmp
xchg
stc
stos
push
xchg
movsl
inc
stos
aam
insl
push
data16
in
add
mov
rcrb
rolb
mov
add
imul
subb
stos
lret
pop
pop
inc
stos
dec
in
aad
std
inc
ret
inc
ret
cli
jnp
loop
jno
mov
icebp
fisubl
jmp
in
mov
xchg
in
add
mov
stos
lahf
dec
push
shll
scas
shll
sub
push
cmp
xchg
pushl
pop
or
mov
mov
mov
or
adc
inc
cmp
sti
pop
rorb
mov
sbb
popf
sub
xor
adc
dec
sbb
jl
mov
dec
fstsw
sub
xchg
push
call
fnclex
arpl
shll
stos
lahf
mov
sti
inc
or
ljmp
int3
pusha
in
dec
mov
fsts
pop
and
xchg
enter
jle
repnz
stos
gs
dec
lret
stos
cmp
lds
cwtl
lahf
or
sbb
xor
sub
rcll
scas
sbb
xchg
pop
lahf
push
inc
movsl
cli
data16
sbb
imul
outsl
sbb
or
ret
mov
cmp
jnp
mov
fsubl
push
cmp
xor
insl
mov
fwait
push
fdivrl
inc
daa
outsl
inc
add
adc
insb
pop
add
fcomps
sti
inc
testb
js
cmp
rcrb
enter
int3
xor
xlat
fcmovnbe
cmc
adc
dec
sti
cmpb
cmp
add
adc
xchg
addr16
lods
cld
loop
push
movsb
add
add
pop
jmp
in
scas
lret
pop
mov
add
mov
cmc
mov
inc
shlb
inc
aad
inc
dec
das
adc
lahf
shll
jbe
fstpl
mov
cwtl
cld
add
pop
sbb
push
add
in
jno
cmc
addb
lock
mov
mov
or
mov
sbb
push
pop
pop
fmulp
jns
jae
pop
or
lret
mov
aad
filds
ljmp
jnp
push
jbe
pop
mov
aad
insb
inc
addr16
push
sub
sub
shlb
enter
mov
or
push
pop
or
and
aas
out
sarl
adc
ljmp
test
and
pop
xor
jmp
xor
les
sub
jle
sub
sbb
and
xchg
lds
mov
pop
in
dec
jo
lds
ljmp
mov
jo
inc
sbb
cmp
mov
das
sbb
pop
insl
sbb
int
fstpt
outsb
lods
loopne
adc
repz
cwtl
sti
mov
test
pusha
xor
jae
mov
mov
clc
dec
cmp
sti
add
cmc
push
mov
repnz
repnz
out
ret
in
add
fldt
inc
dec
lret
popa
jne
adc
mov
jno
aas
decl
lahf
xor
popf
mov
mov
test
cmp
mov
add
pop
sbb
das
ja
push
add
pop
add
sahf
fistpl
sbb
or
test
push
jne
sub
outsb
mov
sbb
and
push
punpckhbw
loop
sub
add
mov
and
aad
jl
cmpb
cltd
jmp
mov
mov
push
mov
dec
xchg
movsb
gs
mov
push
and
sbb
dec
lret
push
jb
test
loope
cltd
in
in
push
xchg
imul
cmp
movsl
sub
loop
das
aas
sub
sbb
xchg
dec
jo
cmp
xchg
xor
jne
mov
mov
pop
push
sbb
sbb
cltd
or
scas
cs
imul
clc
int3
outsl
cmp
cmp
fistps
js
push
imul
aam
jle
pop
mov
add
fmuls
or
xlat
bound
insl
push
cli
cmp
inc
cmp
sub
push
pop
fisubrl
xor
outsl
cmc
ss
fs
sub
shrl
mov
out
rcl
pop
lods
in
push
gs
fiaddl
push
cmp
scas
and
lds
roll
cmpsl
sub
ja
jecxz
loopne
pushf
push
in
ljmp
ja
mov
sti
je
or
inc
sbb
mov
ret
stos
repz
mov
repz
imul
mov
in
adc
gs
lret
adc
add
inc
mov
pop
popf
add
sub
divl
sbb
cmpsl
movsl
add
je
jb
inc
fnstcw
xchg
mov
cmp
lret
sbb
dec
lahf
xor
sub
sub
andl
pop
push
cmpl
sbb
shrl
imul
out
inc
in
lods
pop
pop
xchg
pusha
les
test
mov
rol
mov
sub
jmp
loop
jae
jns
lahf
into
sbb
scas
aam
je
sbbb
pop
lea
inc
push
mov
fstl
or
push
push
lock
push
inc
xchg
ret
ficoml
dec
mov
testb
cmovl
fwait
sub
mov
xor
fnstenv
sarl
add
call
push
lret
mov
mov
and
jp
mov
out
sbb
xchg
jge
test
and
fadds
rcll
ficoms
hlt
and
dec
int3
lcall
jns
cmp
lods
in
negb
hlt
push
inc
jnp
sbb
addr16
jl
inc
movsb
clc
rcr
inc
or
mov
mov
lods
gs
cmp
pop
inc
mov
pushf
jo
nop
mov
push
xor
lret
xchg
sbb
xor
sbb
ror
icebp
add
xchg
cmp
sub
mov
into
pop
mov
cmp
sub
sub
jno
test
sbbb
ss
xchg
sub
imul
dec
pop
jne
jecxz
fdivs
sbbl
js
aas
pop
adc
in
cmc
out
mov
fstps
repz
mov
mov
leave
cmp
sbb
lods
dec
ljmp
xor
xchg
das
test
repz
or
outsl
imul
mov
lahf
clc
into
push
cmp
jp
jno
lahf
stc
test
out
ret
dec
pop
out
lret
stos
add
xchg
mov
mov
mov
rol
and
adc
push
lods
popa
jne
and
xlat
push
scas
lea
popa
je
jmp
daa
lahf
dec
or
ficoms
jmp
stc
mov
pop
cltd
xchg
dec
and
and
rcll
cmp
notb
add
mov
add
cs
out
gs
sbb
scas
nop
cmpsl
adc
sub
in
jb
and
push
mov
stc
mul
dec
lods
lea
fdivrs
cmpsl
pop
inc
xlat
gs
ret
sub
push
js
push
in
pusha
test
and
sub
cli
in
cmc
push
call
adc
mov
dec
cwtl
jnp
jg
mov
jb
mov
les
xor
xchg
out
popf
lret
pop
test
push
popa
mov
mov
sti
in
loop
bound
push
xchg
imul
ret
jno
cs
sub
call
jno
mov
sti
xor
inc
lds
icebp
fstpt
push
lahf
in
dec
psrad
movsl
pop
sbb
int3
mov
push
dec
rorw
add
in
mov
inc
mov
jne
jbe
divl
jl
movsb
mov
lret
leave
sbb
loope
xor
mov
mov
jmp
insl
hlt
jle
and
push
test
cmp
push
xlat
test
hlt
emms
xor
adc
scas
adc
or
mov
add
stc
dec
addl
push
sbb
subl
or
lds
mov
fidivrs
in
nop
data16
fbld
cltd
and
test
mov
outsb
mov
lods
xchg
or
out
mov
xor
mov
loopne
rolb
icebp
pushf
repz
inc
test
add
xor
jo
push
out
mov
das
sub
sbbl
subb
jg
jnp
jge
sub
fsubs
cmp
mov
lret
sbb
int
int3
mov
push
inc
inc
jo
pop
cwtl
fld
sbb
mov
lahf
jns
cld
xor
lret
lahf
mov
xchg
pop
add
aaa
orl
pusha
scas
das
shlb
mov
nop
mov
sar
jp
xor
adc
pop
imul
xchg
jge
add
push
push
aam
sub
fwait
push
inc
fmuls
jb
adc
ret
je
push
sbb
cmp
add
fucompp
fwait
jae
push
jns
or
adc
enter
adc
sbbl
cmp
fiaddl
pop
push
scas
fstl
repz
shrb
pushf
jge
rcl
sub
call
dec
dec
mov
pop
roll
sub
jo
or
xchg
movsb
sub
sub
mov
or
mov
out
or
and
pop
cli
ljmp
out
xchg
xchg
sub
arpl
adc
es
movsb
xor
and
or
push
in
dec
enter
xchg
int
data16
add
dec
dec
popa
add
or
nop
sub
mov
or
mov
mov
fcomip
xlat
cwtl
xor
mov
dec
xchg
jp
xchg
fs
fisttpll
jecxz
xor
jl
jecxz
jbe
cltd
mov
mov
and
push
mov
mov
pop
mov
aam
mov
cs
inc
cmp
sbb
mov
dec
dec
decl
xchg
mov
mov
sub
popa
sbb
xchg
aas
mov
and
dec
mov
outsb
inc
sti
push
jge
out
cwtl
sarb
pop
mov
popa
mov
jae
cmpsb
push
add
lret
in
in
add
loopne
sub
pushf
mov
enter
lods
sub
data16
push
ljmp
push
in
lods
push
arpl
insl
outsb
negl
jno
push
jge
xchg
lea
dec
mov
mov
mov
cmp
leave
adc
cmpsl
adc
cmpsb
es
sub
test
mov
incb
sub
and
sbb
push
mov
psubsb
jp
xlat
or
push
and
xchg
leave
xchg
repnz
nop
and
sub
inc
jne
in
int3
xlat
js
fidivrs
data16
adc
repz
stc
inc
pop
adc
jb
cwtl
mov
inc
andl
cmp
ljmp
inc
jae
orl
cmp
in
stc
push
loope
mov
push
or
mov
call
pusha
sbb
push
inc
jnp
pop
cmpsb
test
cmpsb
jle
cld
ljmp
fsubl
stos
js
push
jg
dec
mov
inc
ds
push
mov
sbb
sub
dec
mov
mov
cmpl
sbb
pop
scas
sub
xchg
push
rcr
adc
jp
mov
fadds
popa
stc
repz
cmp
adc
sahf
mov
in
jmp
jbe
imulb
pop
out
jmp
adc
insb
insb
push
xor
mov
adcl
and
mov
and
pop
pop
and
adc
pop
xor
sub
xchg
clc
and
lea
insl
outsb
std
pop
lret
mov
xchg
xchg
jge
mov
inc
mov
lds
or
int
popa
mov
dec
ret
or
mov
push
rolb
dec
pop
js
and
inc
sbb
insb
xchg
adc
lahf
or
push
cmp
xchg
jl
fimull
movsl
frstor
jae
and
scas
es
loope
adc
pop
mov
aaa
or
idivb
adc
xchg
popa
mov
xor
cmp
push
mov
jnp
scas
std
pop
lret
scas
push
push
dec
repnz
ja
cli
mov
stos
in
jb
and
mov
mov
in
call
mov
sbb
imulb
or
push
fstl
ficompl
sub
mov
in
jle
xlat
and
stc
jl
leave
fisubrl
pop
cmp
xchg
pop
pop
push
xchg
xchg
mov
test
into
call
cmp
aas
ds
cmp
adc
pop
jnp
mov
mov
inc
mov
jb
repz
xor
decb
es
sub
sbb
rol
orl
out
rorl
sub
mov
xchg
loopne
mov
sbb
mov
mulb
mov
inc
push
xchg
or
popa
xorl
pop
pusha
xchg
ja
gs
in
fsubrl
sub
mov
push
mov
fcomp
inc
xchg
mov
inc
ja
jne
mov
shrb
lcall
sub
mov
adc
das
xor
jmp
push
rcll
add
cli
jno
sbb
inc
out
int3
test
fmull
mov
sar
add
inc
xchg
mov
jg
pop
mov
sbb
insl
mov
cmp
in
popf
aaa
shl
call
lahf
lret
dec
bound
pushf
and
movlps
dec
iret
xor
ss
and
add
or
pop
int3
mov
fwait
mov
pop
xor
jnp
imul
es
loop
jmp
jae
xlat
sarl
push
aam
cmp
xor
inc
stc
or
gs
mov
fldt
xor
xchg
pop
pop
mov
pop
pop
and
mov
xor
inc
jge
and
mov
push
mov
lods
xor
lahf
xchg
cmp
in
cmpb
mov
loopne
imul
jge
mov
rorb
hlt
ds
or
ret
scas
push
aaa
add
dec
mov
jecxz
jle
cli
insb
jle
test
mov
mov
dec
or
sub
dec
cmp
push
enter
xor
out
sbb
push
scas
jb
mov
cs
jmp
jecxz
shl
addb
push
int
fdivrl
mov
dec
pop
imul
ljmp
lret
enter
jge
mov
mov
mov
ficompl
push
das
or
scas
ds
cli
out
add
mov
cmpsl
sbb
pop
xchg
aas
sbb
sbb
push
cmpsb
jmp
nop
inc
inc
stos
sarb
add
gs
xor
les
jno
sub
xchg
insb
dec
mov
aad
cmp
sti
out
jmp
inc
fldenv
add
out
jle
mov
pop
mov
jbe
loope
std
das
repnz
js
sbb
aaa
cmp
pop
inc
cmp
loopne
sarb
data16
pop
lcall
popf
cmp
test
pop
xor
push
fadds
xchg
les
mov
lahf
mov
jno
xor
xor
repz
fsub
or
xchg
in
sbb
jmp
rclb
adc
repz
push
int3
and
mov
pop
push
fistpll
and
lods
xchg
push
or
add
or
jne
and
or
or
les
xor
sub
jnp
inc
inc
enter
outsl
or
pop
jbe
lcall
xor
test
subl
sbb
jo
dec
push
sbb
xchg
cltd
sbb
lret
adc
and
daa
sbb
dec
test
fwait
loopne
pop
mov
pop
jle
fsts
pop
ljmp
out
xchg
ret
jp
insb
hlt
pop
mov
leave
dec
push
add
mov
test
insb
pop
lahf
aam
xchg
nop
adc
cmpb
imul
lret
sbb
cwtl
shrb
and
leave
jle
pop
popa
pop
adc
jbe
xor
pop
push
loop
push
aas
xchg
dec
or
stos
testb
int
fisubrl
repnz
jmp
movl
or
mov
sub
sub
incl
pop
mov
daa
imull
jg
fnstenv
xlat
in
sub
pop
mov
pop
jmp
xor
ror
icebp
adc
enter
aam
mov
dec
pop
fldcw
cli
out
shlb
or
jns
addb
cmpsl
inc
mov
jo
mov
xor
adc
cltd
test
sbbl
jae
xchg
mov
insl
jno
into
dec
and
push
lahf
pop
aad
dec
mov
enter
and
mov
lods
std
iret
lea
dec
loope
decl
inc
jge
mov
mov
pop
in
inc
sub
mov
mov
adc
dec
aam
push
add
cmp
jmp
sbb
das
xlat
test
lcall
mov
call
add
jae
aam
enter
mov
repz
in
mov
push
sarl
cmc
sub
in
xor
std
inc
divb
cld
iret
mov
cmc
scas
gs
mov
push
xor
mov
xchg
lea
push
repz
sub
pop
je
sti
push
jne
mov
mov
bound
cld
or
cmp
inc
jno
aad
fwait
jae
fsubr
test
cmp
xchg
mov
movsl
xor
fldl
lods
inc
js
adc
dec
jp
xchg
jns
inc
sbb
ds
aad
or
sarl
mov
fs
out
mov
sub
das
clc
leave
xor
daa
adc
mov
jno
lahf
cli
dec
adc
rcr
rorl
sub
push
pop
add
cwtl
inc
in
in
sti
addr16
test
mov
jp
sahf
jne
mov
push
es
jmp
xchg
fucompp
xor
leave
aam
int
mov
mov
push
inc
sub
sbb
jae
adc
stos
jne
push
jo
mov
shll
cwtl
or
iret
fcomps
jge
mov
dec
xorl
loop
jae
aam
sub
rcrb
mov
cmpl
stos
sub
push
test
bound
rcrl
fisttpll
pop
bound
data16
jmp
mov
xchg
outsl
push
clc
scas
push
insb
lods
test
and
lock
pop
mov
and
fcmovnb
in
sbb
jne
mov
adc
cwtl
sub
insl
or
and
in
xor
cmp
fwait
mov
aaa
js
loop
mov
imul
inc
inc
repz
xlat
subl
jns
mov
out
loope
pop
pop
mov
repz
jo
pop
enter
imul
popa
adc
inc
add
enter
or
mov
jae
mul
xor
dec
lds
daa
push
sbb
cltd
sub
pop
ret
sbb
mov
scas
push
idivb
das
mov
pop
mov
lret
roll
imul
leave
xchg
out
paddb
jo
dec
lods
xor
add
dec
mov
mov
add
push
mov
mov
int
js
int3
and
mov
mov
add
add
out
add
dec
incb
fisttps
jns
ss
imul
data16
in
imul
sbb
rcll
inc
sti
sbb
push
mov
mov
xchg
lret
mov
out
adc
out
jge
xlat
pop
mov
inc
add
cmp
imul
std
cmp
insb
stos
sub
adc
ret
ljmp
pop
push
aaa
ja
shrd
mov
cmp
xorb
lcall
or
mov
jl
lret
mov
add
push
mov
xchg
inc
push
mov
outsb
movsl
add
dec
push
xor
pop
movsl
lahf
ret
cltd
xchg
call
push
out
inc
sub
cmp
cs
fwait
mov
inc
push
add
aam
addr16
adc
mov
mov
jo
enter
xor
inc
mov
add
mov
jmp
lea
gs
imul
dec
mov
push
decl
mov
repz
pop
mov
mov
push
fs
dec
cmp
daa
lods
inc
inc
andb
jmp
add
mov
test
enter
cs
or
test
xor
lds
lea
inc
call
movsb
movsb
pop
push
jbe
push
fadd
dec
fcomps
cmp
out
je
subb
jle
xchg
or
popf
sub
jge
sub
pop
cld
ret
in
jno
mov
cmpsb
jecxz
push
or
fstps
sub
or
es
lea
sub
ret
test
dec
test
lret
inc
xchg
and
pop
push
call
idivl
xor
test
aas
cmc
clc
pushf
xchg
xchg
xlat
es
movsb
cmpsl
or
repz
dec
cmp
fildl
or
stos
sub
mov
cmp
pop
mov
and
adc
je
sbb
xor
popf
xor
ja
add
fldcw
int
jne
jecxz
mov
xchg
dec
insb
and
lds
dec
pop
mov
addl
or
and
in
push
adc
pop
inc
xchg
dec
mov
mov
frstpm(287
shrb
push
or
push
sub
out
sub
sub
out
cmp
outsl
into
subb
gs
mov
fwait
mov
pusha
sub
push
xchg
xor
xchg
xchg
scas
popf
or
out
clc
mov
in
mov
push
out
push
push
in
sarb
lcall
adc
sub
cwtl
or
add
jno
ljmp
pop
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
jmp
pop
cmp
inc
xchg
test
and
pop
in
xor
addb
dec
pusha
jne
jns
adc
insb
fsts
rorb
lods
fsts
or
sti
cld
xor
ret
in
inc
mov
imul
and
jo
add
in
lods
sti
adcl
mov
mov
cmp
insb
sub
cmpsl
es
add
aam
cmp
add
push
adc
lret
enter
adc
xor
bound
pop
cmpsb
bound
stos
push
jb
fs
daa
addr16
je
call
icebp
loopne
and
add
outsb
pop
mov
fidivl
imul
lcall
pop
or
jl
fwait
mov
dec
sub
mov
ja
sti
shll
sub
mov
mov
pop
ds
femms
push
in
xchg
jmp
cmpb
pop
fwait
dec
mov
xlat
pop
xchg
std
and
add
mov
fsts
pop
in
or
pusha
dec
jne
pop
test
ss
sub
jnp
into
aaa
mov
cwtl
cmc
out
mov
int
addr16
mov
lods
sbb
mov
rolb
shl
aad
mov
lods
mov
loope
leave
cmp
or
test
sarb
shrl
mov
push
xor
jae
outsb
sub
pop
push
test
cmc
mov
add
jnp
inc
das
jl
xchg
ret
fidivrs
xchg
push
cld
into
cltd
lds
rol
or
repz
pop
ficoms
repnz
cwtl
and
sbbl
xchg
cmp
cmp
adc
aaa
imul
cmc
adc
mov
lock
add
or
add
push
xchg
ret
lock
in
loope
outsl
xchg
out
mov
cld
mov
cld
jnp
or
lods
or
push
mov
lock
xchg
cs
aaa
add
inc
mov
fdivs
cmpb
xor
mov
lds
xchg
inc
inc
scas
xor
lret
or
hlt
xchg
cmp
fnstsw
sahf
loope
pop
and
push
mov
fsubr
lods
and
mov
bound
sbb
inc
lret
mov
or
jmp
add
lods
ja
aam
jge
xchg
push
je
movsl
mov
shll
push
dec
ret
ja
stos
cwtl
cltd
ss
in
push
lret
in
and
mov
mov
nop
push
ret
loop
sbb
xchg
movsb
nop
dec
insb
mov
push
mov
cwtl
sbb
inc
outsb
outsl
ljmp
std
ds
or
lret
push
cmp
fs
es
mov
jl,pn
outsl
gs
cmp
xchg
pop
lea
sub
adc
sbbl
cli
add
pop
cwtl
leave
rcl
sbb
arpl
sub
shlb
mov
lahf
repnz
xchg
addr16
in
fwait
stc
dec
aad
fcomps
dec
mov
xchg
xchg
cmp
bound
add
sub
or
push
sbb
and
dec
loope
les
lds
aas
mov
dec
imul
loope
push
xchg
test
arpl
mov
loope
sbb
adc
cmpsb
jmp
cltd
push
loope
push
clc
pop
insb
mov
dec
lock
pop
out
aad
xchg
lcall
pushf
push
push
rcrb
jae
lret
call
adc
je
adc
fsubr
sub
and
pop
sbb
jge
pop
and
xlat
mov
sub
inc
loope
movsl
pushf
mov
cmp
lds
add
push
lret
push
outsb
out
mov
outsl
jl
fldl
insl
mov
push
add
xor
fistps
roll
out
mov
rolb
cmp
mov
lods
lock
scas
jl
fimull
popf
push
jo
add
jo
aad
push
sbb
add
dec
stos
std
les
inc
mov
andb
adc
test
add
inc
xlat
aam
mov
sbb
fs
cltd
shll
xchg
sbb
cld
pushf
inc
fisubs
inc
sbb
inc
xor
decw
fstl
xchg
repnz
and
cmp
call
mov
and
sti
pop
addr16
lret
popf
scas
int3
add
test
add
push
popf
add
icebp
stos
jge
push
ret
add
and
push
int
lret
mulb
repz
lds
pusha
test
push
mov
fnstcw
add
push
xor
dec
inc
leave
mull
push
or
mov
or
popf
inc
sub
push
cmp
je
mov
push
xchg
mov
mov
and
shll
shrb
lea
add
jmp
fstpl
in
push
fldt
push
or
cld
and
mov
gs
out
inc
sbb
mov
adc
sbb
aas
jmp
mov
mov
dec
repz
pop
mov
pop
out
mov
jae
pop
pop
cmpsl
es
add
xor
mov
jae
and
movsl
and
dec
sbb
aad
pusha
pop
xor
sub
test
insl
jns
push
push
push
mov
loope
leave
sahf
inc
mov
add
xchg
jl
jle
mov
insb
adc
jge
mov
ds
outsl
insb
mov
jecxz
daa
sbbb
adc
xor
xor
xchg
and
sbb
into
cli
add
mov
pop
jae
scas
push
jge
int
sbb
nop
ficoms
cld
cs
movsl
mov
nop
adc
xchg
aas
in
jo
xchg
jbe
inc
lea
add
je
std
popa
push
mov
mov
mov
push
or
push
clc
sub
mov
in
xchg
stos
push
cmp
push
mov
lods
and
mov
ret
ret
jnp
mov
sahf
dec
push
insw
fidivl
inc
leave
jb
hlt
pop
enter
js
cmpsl
mov
jmp
or
mov
mov
xchg
inc
cmp
lods
sarl
mov
andl
and
rcr
icebp
add
dec
test
cwtl
cwtl
cmp
and
cli
mov
sbb
jnp
gs
jbe
mov
or
lret
sbb
outsl
push
sub
in
add
cmc
lods
mov
arpl
sbb
and
mov
les
and
mov
mov
lret
imulb
call
or
push
push
sahf
and
jbe
divps
inc
or
outsb
inc
inc
cmp
push
rcpps
mov
adc
shlb
aas
imul
jne
not
test
fisttpll
sbb
mov
and
in
push
mov
rcrb
pop
adc
sahf
mov
dec
mov
jnp
dec
cmp
jecxz
and
mov
push
pop
cld
test
add
cmp
dec
xchg
les
ret
dec
push
push
add
xor
lods
lods
lahf
stos
andb
cmp
jns
mov
shll
dec
xchg
pop
aad
repnz
inc
mov
repnz
or
outsl
fs
popf
out
xchg
sbb
dec
pop
jnp
fsts
repz
mov
ret
shll
popf
cmp
shl
in
rcll
repnz
pop
xlat
jp
dec
push
in
jbe
xchg
jno
aaa
jne
rcl
inc
rolb
lods
test
cmp
jae
sub
cld
xchg
out
test
add
push
and
lods
fisttpll
xchg
loop
out
test
pusha
mov
pop
mov
pcmpgtb
adc
cli
jae
jb
pop
and
dec
in
jns
xor
andl
dec
jmp
pop
pop
or
pop
mov
inc
aaa
xor
loopne
call
jae
out
fcomip
add
out
jge
inc
mov
cmp
int3
ret
or
iret
mov
sbb
mov
inc
ss
add
popf
lods
mov
push
cmp
sbb
xchg
mov
imul
or
add
and
xor
sub
mov
cld
xchg
jge
xor
xchg
jl
in
or
test
loope
test
aas
jl
mov
jno
xchg
shlb
push
mov
into
mov
jg
xchg
mov
pop
clc
sbbb
fidivs
cltd
mov
inc
mov
mov
or
in
or
mov
add
rorb
out
push
add
mov
push
inc
ss
push
fldcw
inc
cmp
sahf
mov
addl
xchg
jns
aad
inc
shll
jle
insl
jmp
jmp
jle
push
xchg
je
lcall
xor
mov
es
ja
fcompl
and
sarl
in
sbb
aad
js
xchg
ret
dec
int
inc
stos
xchg
movsb
dec
xchg
jge
push
arpl
xor
cwtl
fistl
inc
and
popf
push
loope
fstl
xchg
add
ljmp
ss
ficompl
mov
int
mov
add
loope
adc
ljmp
mov
insb
push
repnz
test
jle,pt
and
mov
cmpsb
sbb
pusha
mov
dec
jecxz
into
nop
cmp
lock
or
jl
in
xchg
mov
loopne
into
test
mov
scas
sbbb
and
int
push
out
lock
sbb
xor
xchg
lret
iret
inc
or
pop
orl
rcr
push
out
dec
jp
sbb
xor
mov
xchg
jl
push
aad
mov
lcall
test
gs
adc
push
fbld
icebp
mov
dec
in
jns
arpl
mov
or
test
fisubs
cs
testb
fsubs
jo
sub
jle
in
out
les
mov
push
daa
and
pushf
add
pusha
dec
movsb
inc
xchg
out
aaa
jmp
lret
push
roll
out
sub
add
and
mov
ret
xchg
sub
pop
fwait
adc
adc
faddp
mov
js
lahf
popa
cld
test
jbe
daa
jecxz
and
dec
clc
xchg
in
clc
push
pop
cwtl
test
cmp
add
test
aam
fucomp
mov
push
inc
and
pop
or
daa
aad
rorl
leave
inc
mov
test
call
repz
outsl
jbe
pop
and
mov
loopne
xchg
ds
ja
movsl
push
jb
fsubs
loopne
mov
jb
sbb
add
jo
in
pushf
lds
jle
lods
ret
jge
bound
insb
subb
jnp
stos
shrl
popa
add
fimuls
push
subl
shl
mov
stc
inc
push
xchg
fucomp
call
jb
lahf
out
lcall
jmp
lcall
pop
dec
and
mov
rclb
movsl
jp
add
imul
test
data16
out
push
xor
sbb
shr
sti
xchg
mov
jmp
sbb
inc
sub
dec
add
rorl
fxch
jno
dec
ret
pop
adc
mov
bnd
repz
and
imul
mov
cmp
lods
push
notb
hlt
mov
out
and
lahf
pushf
sbb
xor
cmp
sub
add
push
push
adcb
dec
data16
mov
add
jg
mov
cld
mov
mov
outsb
aas
push
and
nop
pop
mov
subb
std
clc
push
mov
push
mov
mov
in
frstor
mov
mov
sbb
pop
push
in
dec
push
je
aam
sub
int
and
mov
inc
pop
adc
pop
in
cmp
cmp
pop
movsl
insl
insb
mov
add
push
mov
cli
or
xchg
std
sbb
cwtl
repz
add
inc
int3
xlat
cmp
imulb
lds
xchg
sub
in
adcl
mull
test
aas
cwtl
mov
lahf
and
idivb
adcb
gs
imull
sahf
insl
pop
xchg
mov
jno
add
bound
jcxz
mov
addb
js
sub
pop
mov
and
push
int3
cld
lret
dec
sub
xlat
daa
xchg
mov
or
push
jne
shr
pop
fchs
mov
ljmp
test
pop
scas
pop
dec
dec
stos
lock
mov
cmp
cmp
scas
push
mov
jg
ja
out
adc
cmp
imul
mov
dec
stos
push
movsb
or
fiadds
daa
stos
out
ja
sarb
xor
fwait
lods
push
icebp
and
in
xchg
btc
nop
shlb
mov
sbb
iret
push
sarb
inc
out
hlt
add
out
movsl
js
mov
lret
cmpb
inc
dec
sbb
and
add
xor
out
mov
sub
fistps
mov
xchg
fcmovne
adc
add
ret
mov
cmp
mov
fcompl
mov
xchg
mov
ja
or
or
clc
mov
aam
push
or
cmp
popa
jbe
in
les
jle
outsl
jo
cmp
sub
add
jp
sub
dec
lods
inc
mov
mov
jmp
negl
movsl
dec
inc
add
fucomi
jecxz
iret
and
pusha
notl
out
mov
cmp
push
inc
mov
jge
and
lret
jb
js
nop
out
test
or
imul
test
mov
stos
dec
pop
and
ret
add
sbb
push
xor
sub
test
bound
stos
mov
sahf
add
dec
mov
gs
movb
adc
dec
fldenv
push
add
mov
cmp
out
mov
xor
sub
in
push
jl
mov
gs
mov
sahf
stc
cmpsl
mov
les
and
loopne
lea
movsl
scas
push
jo
mov
dec
bound
mov
push
lock
add
dec
push
sub
out
sbb
rcr
imul
imul
jge
fcoms
insl
inc
and
sbb
add
ret
lds
and
cmpsl
int
cmp
popf
xchg
adc
shlb
mov
aaa
mov
std
cmp
cli
lods
ret
lods
popa
test
pop
lcall
xchg
mov
cmp
dec
loope
aaa
outsb
mov
stc
or
fwait
jbe
xor
mov
add
scas
outsb
fmuls
push
push
jmp
mov
movsb
in
push
or
xorl
gs
mov
dec
imulb
cmp
adc
rcrb
pop
xchg
mov
mov
push
add
lods
and
pop
xchg
xor
sti
adc
xor
imulb
insb
popa
sub
mov
cli
vmulps
jns
int3
fildll
dec
and
mov
enter
shl
jg
repnz
pop
push
xchg
xchg
into
std
and
mov
sbb
cmp
mov
sarb
hlt
push
cmp
enter
ss
enter
mov
pop
xchg
shll
ja
imulb
jecxz
pop
bound
gs
cmp
mov
sbb
sbb
xlat
out
push
adcb
sbb
cld
repz
dec
stos
insb
sbb
mov
das
sbb
push
mov
lods
movsb
and
xchg
xor
outsb
xor
scas
push
ret
mov
lock
addb
arpl
cmp
ds
pop
sub
out
adc
out
repnz
push
jne
xchg
mov
xchg
mov
and
xchg
cmpsb
mov
dec
in
in
pusha
cmc
sub
out
push
adc
loope
test
inc
je
into
fwait
inc
and
xor
cli
inc
jge
popf
lea
inc
jmp
jge
pop
mov
mov
pop
mov
clc
cld
sbb
popa
popa
lods
dec
and
and
std
insb
fnstsw
pop
xor
mov
imul
dec
loopne
jns
dec
sub
add
dec
out
dec
loope
jp
mov
jl
mov
mov
shrl
jo
xchg
sbb
sub
sbb
xor
inc
inc
jbe
sahf
and
jo
cwtl
dec
into
mov
cmp
shrl
cmp
and
jg
xchg
pop
jae
je
mov
cltd
stos
ja
je
les
cs
in
and
mov
sbb
or
mov
xchg
adc
aam
lods
jecxz
push
cli
outsb
inc
fmuls
scas
pusha
iret
sahf
and
inc
jbe
sahf
movzbl
push
mull
stc
loope
mov
inc
xchg
out
cmp
cmp
or
popa
and
cwtl
push
xor
push
sbb
lret
push
push
cs
loope
add
fiadds
mov
adc
aad
push
xor
and
jae
stos
sub
idivl
pop
xchg
mov
mov
lret
cmpb
inc
push
or
call
scas
adc
cltd
rcll
lods
push
add
mov
in
add
xlat
cmp
cltd
adc
jns
adc
dec
cmpsl
in
inc
mov
mov
jns
jbe
push
add
sahf
enter
sbb
ljmp
js
sub
outsl
in
fisttpl
inc
or
fnstcw
movsb
addl
xor
adc
into
xchg
into
js
repz
and
scas
sbb
jno
sub
xchg
int3
int3
sub
rcrl
sub
pop
xor
xchg
je
pop
loopne
aas
and
aas
push
push
mov
xchg
leavew
lret
fucomi
add
pop
sub
xchg
xor
test
call
movsb
cmp
xchg
insb
dec
push
mov
scas
xlat
sbb
mov
jb
stc
test
dec
xchg
int3
stos
inc
jnp
rolb
xor
ret
cmp
xor
stos
call
or
jns
or
les
inc
hlt
jns
pop
cmc
test
jne
jo
js
scas
or
in
sub
jle
aam
ss
lret
mov
lahf
mov
push
dec
pop
imul
sbb
add
xchg
dec
cmp
pop
xchg
mov
mov
sbb
hlt
cmp
cmp
sub
testb
insl
data16
lcall
mov
xor
daa
cld
fidivrl
dec
xchg
in
incl
adc
cld
jbe
add
inc
fsub
pop
fistpl
mov
jb
fidivrs
mov
jb
cmp
mov
clc
outsb
xchg
sub
push
inc
insl
ret
mov
cmpsl
pop
mov
pop
sti
jp
mov
repz
fbstp
sbb
aam
mov
or
addr16
daa
jg
adc
mov
lea
inc
in
and
or
fdivl
mov
loope
aas
xchg
inc
cmpsl
out
mov
jne
ds
call
addr16
dec
mov
jmp
in
push
clc
fdivrp
jnp
fiaddl
jo
add
pop
loope
pop
icebp
mov
aas
xchg
xorl
push
mov
daa
pushf
repnz
ret
fistpll
mov
arpl
icebp
leave
ficoml
pop
sbb
sahf
aaa
pop
hlt
adc
notl
inc
testl
mov
aas
push
dec
mov
ss
push
mov
ret
sahf
and
inc
shr
notl
jmp
mov
dec
jecxz
push
fstpl
clc
imul
out
jge
adc
dec
sub
push
loop
cmc
pop
ss
or
or
repnz
scas
mulb
inc
fsubs
rcrl
add
push
ficoms
xor
xchg
gs
pop
subl
cwtl
stos
jnp
adc
outsb
adc
mov
stos
rcll
sbb
stos
idivb
xor
sub
cltd
jo
icebp
push
push
xchg
adc
mov
and
jb
push
jb
std
stos
fiaddl
or
mov
sbb
push
mov
sahf
sub
mov
or
lret
adc
stos
adc
jecxz
jge
xchg
mov
xchg
jb
outsb
dec
std
mov
sbb
testb
popa
jl
mov
xor
adc
scas
icebp
ja
and
inc
adc
pop
jbe
mov
dec
sub
sbb
cs
mov
mov
push
enter
lds
dec
nop
mov
mov
xchg
out
or
adc
dec
sbb
jne
add
and
sub
lods
jno
dec
je
outsl
cmpb
test
push
push
cmp
add
fidivl
sub
addr16
cmp
add
iret
call
pop
stc
hlt
cwtl
stc
pop
cmpb
cld
cmc
testl
aam
inc
pop
hlt
push
sbb
jecxz
cmp
xor
mov
add
shl
mov
mov
pop
jp
sbb
cmp
mov
mov
shrb
cmp
cli
xor
dec
add
cmp
ljmp
int
xchg
or
and
daa
push
mov
ljmp
xor
cmc
das
mov
mov
std
in
mov
mov
mov
xor
add
xlat
push
ret
cmp
dec
int
or
movsb
jbe
jmp
in
mov
pop
nop
sub
xlat
out
inc
fdiv
pop
dec
in
popa
mov
or
mov
test
sub
inc
std
mov
shrl
dec
lea
fmul
xchg
mov
aas
mov
xor
push
dec
pop
ja
xchg
mov
movsl
sbb
pop
sub
dec
sub
and
dec
cmp
rep
mov
or
popf
loop
inc
cmp
addb
repz
jbe
xlat
rorl
push
insl
and
pop
popa
scas
lahf
jns
bound
jmp
xchg
adc
mov
or
movsb
inc
cmpsb
cmp
jmp
rolb
mov
dec
stos
mov
cmp
test
adc
sarl
jb
mov
ja
push
xchg
or
lret
cmp
fisttpll
dec
xor
insb
push
sbb
outsb
jns
scas
ret
movsb
mov
cmp
pushf
mov
out
pop
add
lret
xchg
pushf
dec
xor
and
lret
leave
loop
or
das
nop
pop
or
inc
fld
pop
shrb
lret
aaa
insb
push
mov
into
inc
mov
insl
test
mov
in
js
mov
in
push
in
fisubl
mov
inc
mov
fwait
adc
stc
movsl
mov
mov
call
cmc
vmaxss
jmp
jp
rcll
pop
mov
pop
daa
sbb
test
ret
mov
repz
lret
cmp
jle
jl
adc
adc
sbb
shll
jle
xchg
mov
out
cmp
stos
fistpl
jo
push
std
inc
fsubrs
xor
outsb
test
aaa
dec
jo
incl
mov
xor
pop
mov
ret
in
rolb
push
sbb
jp
fwait
nop
shll
push
jb
divb
xor
outsl
cmpsl
test
xlat
or
cwtl
jle
mov
pusha
mov
or
and
pop
jge
jmp
sti
jl
push
cmpsb
andl
test
dec
fdiv
sbb
sub
test
aaa
xchg
outsl
mov
mov
cmp
inc
jl
lcall
mov
adc
lret
mov
sbb
lcall
in
mov
mov
test
cli
inc
dec
push
test
shl
mov
mov
pusha
mov
jg
stc
sbb
addb
sbb
add
arpl
repz
or
cmpsl
push
sub
aam
fildll
sbb
jmp
jns
push
pushl
out
push
xor
xchg
movsb
mov
jne
repnz
dec
or
add
jo
xchg
inc
das
ss
jbe
or
fadd
add
aas
dec
lock
pop
mov
jmp
cli
das
addr16
dec
inc
call
dec
fstps
jmp
loop
scas
lret
pop
sbb
insl
dec
adc
nop
daa
scas
ja
subl
sub
lret
hlt
sub
leave
dec
mov
jb
shr
xlat
adc
aas
int3
mov
fsubl
sub
lods
dec
push
mov
sbb
lcall
mov
sub
stos
add
xor
inc
mov
lcall
inc
mov
xchg
out
xchg
addl
loop
test
das
das
test
push
clc
sbbl
adc
dec
aad
in
or
jbe
int3
xchg
push
pop
mov
adc
push
lods
pop
ds
iret
inc
mov
adc
sarb
in
je
cmp
enter
lds
inc
xor
xor
dec
lret
xchg
addr16
add
dec
cmp
insl
jns
mov
aas
add
cmp
loop
push
dec
fisubrs
imul
fsubr
add
inc
stos
out
fnstsw
mov
mov
fucomip
mov
add
pop
in
data16
jo
sbb
push
call
jg
ds
test
mov
xchg
mov
inc
and
les
inc
imul
jb
je
mov
push
in
test
adc
addl
test
add
mov
shlb
fisubs
adc
in
dec
adc
mov
and
iret
or
filds
nop
addr16
cmp
js
mov
decl
insb
mov
push
ret
pop
cs
xchg
pusha
icebp
ficomps
and
adc
loop
incl
mov
mov
mov
inc
gs
repnz
ds
mov
or
fadds
ss
mull
repnz
popf
and
push
mov
inc
icebp
xchg
test
inc
lods
jbe
mov
add
add
xchg
out
rcl
push
out
xchg
pop
mov
scas
xlat
ss
and
sbb
jae
mov
sarl
or
add
or
mov
pop
pop
mov
push
xor
and
aas
imul
mov
sar
xchg
or
scas
push
mov
scas
out
aas
data16
mov
out
or
add
leave
shll
mov
aad
pop
repz
cmc
mov
clc
leave
pop
or
jmp
dec
call
mov
enter
mov
orb
adc
sbb
nop
inc
pop
imul
mov
in
clc
sahf
sarl
lret
test
add
movsl
jle
fldl
sbb
adc
or
outsb
push
jl
inc
dec
aaa
fsubs
fbstp
pop
xchg
stos
aaa
out
ja
dec
icebp
ss
push
int3
cmpsb
gs
xorl
jbe
cmpsl
pop
inc
adc
fdiv
je
adc
mov
adc
sbb
sbb
movsl
mov
mov
jle
insb
sbb
leave
xor
cmc
pop
test
rorb
enter
push
aam
or
pop
sahf
or
sahf
loop
pop
aaa
mov
dec
fnstenv
fisubrs
inc
add
mov
insl
inc
pop
inc
ljmp
add
lahf
es
sysexit
stc
push
push
xchg
enter
sbbl
sub
or
sub
or
test
cmp
sub
scas
push
or
and
rcrl
in
xchg
sub
pop
in
sub
xchg
fists
ror
ret
sahf
push
push
sub
hlt
pusha
sahf
data16
jnp
sti
call
push
dec
dec
jge
es
mov
rorl
pop
sbb
cmp
jnp
js
sub
pop
xchg
jne
xor
addb
push
stc
aad
xor
mov
cwtl
roll
pop
and
sub
sbb
mov
mov
cmp
std
data16
jp
xchg
fcmovb
push
dec
inc
sub
fmulp
sub
and
jecxz
scas
jnp
xchg
add
jae
adc
pop
repnz
push
sbb
mov
mov
jb
arpl
add
enter
gs
adc
clc
iret
mov
push
inc
mov
inc
les
or
xor
aad
xor
mov
loope
mov
mov
and
shl
pop
hlt
mov
rcll
cmpsb
pusha
inc
push
into
call
mov
setp
popa
xchg
shlb
fbstp
xchg
inc
aad
cmpsb
and
sub
negl
push
loop
cwtl
inc
clc
pop
xor
nop
sbb
jns
and
jb
adc
iret
lds
loopne
das
lret
pop
fsubl
out
add
fcmovb
in
cmp
sbb
sbb
inc
decb
lock
mov
stos
jnp
movsb
push
jmp
push
mov
cmp
fisttps
jl
pop
mov
popa
cs
pop
rcll
jg
cmp
cmpsl
xchg
cwtl
mov
es
add
in
push
aas
aaa
jge
out
jnp
pop
adc
xor
sarb
inc
pop
add
xchg
insl
add
jmp
mov
or
jbe
inc
jp
pop
lock
xchg
cmp
mov
xchg
scas
imul
std
test
in
adc
push
orl
jecxz
adc
xchg
cld
ja
enter
or
call
fwait
sbb
or
lods
xor
mov
push
mov
inc
psubd
jne
add
div
xor
push
or
scas
jg
cmp
xorb
push
mov
test
out
jmp
mulb
add
outsb
bound
test
aaa
jbe
cltd
add
frstor
cpuid
cmpsl
xchg
inc
inc
or
insl
fs
xchg
cmp
mov
mov
fcom
imul
nop
push
mov
fadds
pop
or
data16
jnp
dec
jecxz
dec
sbb
mov
int
inc
aas
push
adc
or
cmp
jge
das
push
in
mov
loop
push
xor
mov
roll
jg
xor
push
shrb
push
jge
scas
pop
and
insl
mov
cmp
andl
xchg
shl
jne
mov
sbb
xchg
fstps
cmc
inc
icebp
adc
call
lods
mov
mov
mov
mov
adc
pusha
adc
sub
test
pushf
sahf
fprem
mov
repnz
nop
dec
std
ficompl
xlat
cmpl
lea
enter
adc
lret
push
mov
jge
sbb
xor
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
push
movl
cmpl
je
cmpl
jle
jmp
push
push
push
push
call
mov
dec
mov
jmp
push
subl
mov
xor
xor
add
mov
mov
and
mov
mov
mov
xor
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
xor
dec
mov
jmp
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
and
jmp
xchg
fdiv
test
xchg
push
test
orl
addl
mov
aad
or
sub
dec
push
leave
jle
cmp
cmp
sbb
mov
into
popf
cmp
movsb
inc
push
packssdw
ret
push
cwtl
std
pop
stc
xchg
popf
stos
and
xchg
pop
pop
add
in
cmp
cs
cmp
and
xchg
pop
jecxz
inc
or
dec
pop
push
jmp
imul
inc
lahf
push
xor
xor
in
je
ja
mov
inc
push
imul
xor
dec
test
cs
mov
cmp
jp
mov
sbb
xchg
ret
inc
loopne
aad
mov
pop
les
dec
addr16
repnz
push
inc
enter
mov
movsl
jb
and
push
lcall
dec
pop
cli
ret
xorl
mov
es
adc
scas
xchg
icebp
push
andb
adcl
movsl
cmc
call
fucom
cmp
repnz
add
lods
out
inc
test
push
ss
fimull
in
lret
adc
push
xchg
mov
sbb
test
inc
mov
add
movsb
push
adc
mov
dec
add
mov
loope
mov
insl
mov
movsl
or
dec
movsl
push
push
mov
rep
pop
jns
lds
sbb
movsl
mov
pop
add
packssdw
movsb
das
gs
push
sbb
pop
test
dec
lret
and
out
lock
pop
push
std
inc
jge
or
in
dec
inc
jno
xchg
daa
out
lret
xchg
in
push
fldl
enter
aam
cmp
mov
sahf
stc
insb
pusha
das
repz
push
jmpw
mov
xor
sbb
xchg
shrl
xchg
xor
mov
pusha
sub
outsl
cltd
sub
aam
into
insl
pop
sti
jg
push
push
push
mov
cwtl
xor
jno
add
lock
sub
test
loop
call
in
pop
lahf
aad
out
das
scas
adc
xchg
aas
es
sub
xor
call
cld
icebp
ds
and
loopne
mov
mov
in
cwtl
rorb
jecxz
stos
int
pop
xor
mov
repnz
jbe
stos
es
push
mov
aaa
add
jo
cltd
movsb
dec
hlt
popf
or
or
test
sub
push
xor
es
jg
lcall
les
inc
pop
mov
fcomp
in
ss
ss
sub
cmc
mov
inc
xchg
or
lea
sbb
outsl
repnz
aad
icebp
jmp
mov
adc
aam
jo
stos
xor
jmp
gs
push
pop
xor
inc
jmp
cld
outsl
xchg
push
pop
leave
repz
adc
push
and
out
jg
sbb
iret
cmp
adc
cmp
mov
fbld
adc
xor
jnp,pn
pop
cld
lahf
adc
xchg
popa
pop
ret
in
repnz
scas
cmpsb
scas
ds
out
or
cmp
add
xchg
ljmp
jecxz
ss
sbb
jns
lret
pop
lahf
jge
popf
and
push
mov
movsl
inc
cwtl
sub
mov
orb
int3
ds
mov
test
xchg
sti
roll
add
push
mov
add
or
push
mov
lea
inc
mov
ds
dec
push
clts
jle
add
push
aam
lods
imul
adc
sti
shrl
loope
inc
lcall
dec
pop
push
add
cmpsl
mov
and
addr16
jo
mov
shrb
jns
iret
loop
dec
arpl
mov
or
jl
dec
push
xchg
mov
xor
push
mov
mov
adc
aas
cmpsl
out
loop
jbe
push
loop
pop
call
pushf
out
aas
inc
sbb
aad
mov
mov
lods
imul
aam
ja
xchg
inc
sub
pop
stos
jle
add
mov
xorb
xchg
jno
cmp
out
in
sub
add
pop
imul
adc
orb
cmovns
cltd
xor
mov
subl
mov
js
mov
mov
fiadds
rcrl
sbbb
jge
adc
xchg
jg
xchg
push
cmpsb
xor
mov
repnz
sub
jge
shrl
insb
insb
fmull
lahf
inc
push
sahf
filds
mov
mov
push
xchg
push
sub
or
lret
push
fcmove
pop
dec
lcall
stos
push
jb
and
testl
cwtl
xor
jmp
cs
sbb
inc
inc
xchg
jbe
scas
ja
push
add
lret
ds
mov
push
pop
jne
cwtl
js
pop
jne
insb
push
inc
in
test
scas
test
lret
bound
mov
sbb
mov
ljmp
or
aaa
shl
dec
outsl
test
push
sahf
negb
mov
or
gs
sub
stos
mov
sahf
lds
ret
stc
fcomp
dec
les
mov
jae
out
mov
int
pop
frstor
lock
jns
mov
jmp
enter
jmp
mov
aam
mov
test
push
js
jne
xchg
jne
hlt
aas
icebp
roll
push
dec
xchg
jb
idivb
pop
adc
pop
leave
ja
clc
popa
xor
mov
inc
fwait
mov
inc
popf
xor
push
jae
xorl
add
sti
stos
cmp
mov
cli
cmp
scas
loop
add
cmpsb
push
push
ret
test
jb
sbb
xor
mov
fstl
cmp
mov
pusha
or
out
mov
pop
push
shll
xchg
sbb
addb
mov
pop
mov
xor
cmp
and
lahf
xchg
jno
in
neg
imul
and
popa
pop
mov
push
movl
iret
mov
jge
push
pop
popa
sub
clc
das
mov
and
sub
adc
enter
enter
adc
pop
xchg
push
out
lods
and
loope
xchg
dec
jmp
dec
jecxz
fnsetpm(287
icebp
dec
sbb
or
dec
ja
push
push
mov
addr16
loopne
aam
ficompl
ds
mov
pusha
lcall
sti
push
cli
jmp
push
cmc
lods
in
rcrb
xor
xor
sbb
insl
jb
mov
movsl
std
jbe
ror
pusha
and
xchg
sbb
or
aam
divl
movsl
jbe,pn
in
int3
aad
mov
outsb
bound
out
and
sub
or
mov
mov
dec
jne
xor
fsub
cmp
push
jmp
push
xchg
and
push
aaa
xlat
icebp
lret
xchg
push
loopne
mov
cwtl
mov
push
stos
or
in
pop
mov
push
push
sahf
add
xchg
stos
test
std
and
and
mov
jo
xor
mov
insl
dec
mov
adc
test
ja
sub
bound
fisubrl
xor
adc
rcr
mov
push
sbb
sub
add
fldt
add
lods
mov
mov
xor
mov
dec
dec
adc
add
sahf
insb
les
jg
fdivrs
push
std
pusha
out
mov
stos
lock
addr16
dec
ret
dec
push
and
movsb
ret
push
lds
andl
cmp
into
stos
fcom
sub
jl
push
and
rorl
pop
pop
maxps
testl
int3
scas
add
mov
lock
insl
xorl
repz
jg,pt
adcl
insl
dec
cld
adc
loope
into
cmp
nop
test
fistpll
sbb
adc
xor
add
movl
jmp
adc
adc
lcall
dec
subb
mov
mov
pusha
jno
pop
cmp
loop
mov
sahf
xchg
fmull
insb
pop
and
ljmp
cwtl
hlt
icebp
lods
pusha
push
push
ret
push
mov
mov
push
mov
push
inc
dec
loop
cld
repz
lahf
sbb
jge
push
int
stos
xchg
jecxz
lahf
mov
loop
clc
sbb
pop
neg
cmp
icebp
lahf
scas
xor
xchg
lret
xchg
mov
or
ret
test
test
cmpsl
es
xchg
rol
inc
shlb
addr16
lock
or
push
cmpsl
sbb
and
rcll
lcall
in
imul
mov
icebp
ret
jg
inc
pop
mov
cmpsb
arpl
push
test
sbb
in
rdmsr
cmpsb
add
mov
cmc
lret
push
fwait
inc
daa
xchg
mov
fprem
data16
mov
inc
pop
pop
add
or
jae
dec
pop
arpl
push
into
pushf
push
adc
movsb
addl
jnp
cmpsb
push
xor
stos
xor
fiadds
fs
pop
add
add
cmp
cmp
adc
test
push
in
mov
mov
or
fidivl
add
mov
in
sub
push
out
add
lods
out
lcall
xor
imulb
stos
out
xchg
xor
andl
scas
sub
cmpl
sub
int
fidivrs
sbb
sahf
pop
mov
mov
and
hlt
dec
movsl
xchg
cmp
adc
iret
pop
dec
je
movsb
or
fadd
idivb
fs
enter
mov
inc
sbb
setg
outsb
sub
inc
and
movsb
mov
stos
loope
add
cltd
cmp
push
push
insb
add
mov
add
je
repz
imul
mov
ja
pop
pop
mov
lcall
cltd
mov
mov
mov
sbb
jo
jmp
insl
xor
sbb
imul
or
mov
xor
cmc
sub
jp
addr16
shrl
xchg
sbb
fwait
out
out
scas
jl
mov
jmp
mov
dec
sub
cli
push
dec
shlb
sub
pop
sbb
mov
fidivrs
mov
leave
jmp
add
sub
mov
cmp
movsl
push
inc
mov
mov
popl
sti
in
add
pop
repnz
aad
or
dec
adc
mov
jp
hlt
addb
arpl
adc
and
lret
clc
insl
cmpsl
cli
repnz
lret
rep
push
xor
fwait
in
dec
mov
mov
push
ficompl
bound
call
mov
cli
adc
pop
jle
push
enter
aam
leave
xchg
fst
insl
or
adc
sbb
add
lret
cmp
and
sbb
ret
jmp
fadds
mov
stc
add
mov
fisttps
jp
adc
lods
mov
push
in
in
cmp
lret
imul
cmp
add
or
inc
pop
ja
mov
sbb
jg
sbb
add
cmp
cmp
adc
or
xchg
je
push
mov
decl
or
cmp
dec
aad
je
decb
sub
leave
or
icebp
jecxz
repz
jb,pt
imul
jmp
mov
dec
push
sbb
xor
lods
add
jae
es
xchg
out
and
sarb
nop
imul
notl
lods
dec
inc
adc
daa
mov
es
int
shrb
push
daa
test
jns
lret
jbe
data16
or
les
in
shrl
dec
into
fisubl
loop
sub
es
mov
xchg
daa
out
sub
out
dec
push
inc
test
aam
add
sti
jmp
add
leave
repnz
push
pop
xchg
cmc
push
cmp
in
mov
fnstsw
repnz
mov
scas
cwtl
test
push
cmc
xor
scas
jae
repnz
cmp
jl
clc
add
divb
mov
loope
cmp
push
lods
pop
ficoms
xor
enter
in
iret
popf
fbstp
lods
push
or
call
pop
pushf
dec
dec
mov
repnz
mov
enter
xchg
pushf
imul
push
mov
mov
les
aaa
pop
subb
push
xor
cmpsb
inc
push
add
mov
inc
shlb
out
and
pop
bound
add
mov
adc
adc
dec
repnz
loopne
daa
sub
sbb
mov
sub
stos
aam
sub
inc
mov
sahf
sahf
sub
and
insb
xchg
hlt
pop
push
sbb
std
cmp
jnp
ljmp
std
cmpsb
xchg
test
sbb
mov
xorb
fimuls
rdtsc
outsb
scas
call
into
xlat
mov
or
push
test
mov
sub
imul
fadds
xor
adc
xchg
cmp
inc
and
xorl
jno
dec
jne
loop
and
cwtl
mov
aas
push
shlb
sbb
lcall
shlb
insl
mov
sbb
xchg
cmpsl
mov
cmp
rcrl
or
aam
xchg
push
adc
pushf
adc
cmp
mov
dec
jp
testl
int
gs
dec
fs
push
jo
loope
loopne
push
mov
scas
fs
jle
jg
cpuid
cli
out
lock
movsb
lea
lahf
pop
or
xor
xor
cmp
pushf
test
call
int
out
pop
sub
bound
dec
push
adc
xor
mov
inc
insl
add
or
and
shrl
xor
xchg
rcll
cld
adc
lds
jl
addr16
add
dec
loope
jle
daa
inc
gs
mov
pop
stos
push
lcall
xchg
gs
pop
mov
daa
xor
fstpt
in
pop
dec
iret
cld
out
cwtl
add
test
mov
and
jno
sbb
xor
ficoms
lret
or
dec
mov
in
sub
repnz
sbb
dec
mov
cmp
dec
aad
adc
das
pusha
xchg
mov
cmpsb
stc
cmp
fisubrs
jmp
testl
pop
xchg
int
xor
outsb
sub
jae
dec
imul
popf
jl
clc
xchg
int
test
aaa
fimull
lret
jg
dec
imul
aaa
rcr
mov
out
sbb
sbb
jl
cmc
mov
pop
push
pusha
push
loopne
arpl
ss
lcall
aam
stos
push
mull
pop
and
pusha
add
add
imul
jg
jmp
inc
inc
push
xchg
js
pop
int
fsubs
pushf
clc
outsl
add
and
pushf
or
aad
or
xchg
mov
sbb
sbb
jne
repnz
sub
flds
into
dec
push
xchg
or
cmpsb
cmp
fmulp
mov
mov
jg
xchg
lods
loop
rorb
fwait
add
xchg
pop
int
jle
sbb
xchg
push
xor
scas
jp
dec
or
mov
test
ljmp
in
push
pop
add
test
jmp
mov
mov
jmp
inc
jnp
mov
jle
ss
les
mov
aam
lret
push
fs
les
int
mov
stc
or
pushf
push
push
jl
lcall
sbb
jo
ret
je
fadd
leave
shrl
or
or
jns
sti
xor
jno
scas
test
and
ljmp
outsb
pop
in
lods
idivl
lea
sbb
dec
pop
pop
mov
jle
mov
xlat
out
in
pop
inc
sub
test
adc
aas
sub
in
pop
clc
lret
adc
insl
shlb
jb
movsb
jns
shrb
cmp
jl
out
push
add
push
add
ds
mov
lods
in
flds
insl
cmp
and
push
mull
mov
xchg
gs
jle
adc
mov
int
push
sti
hlt
lahf
shrb
add
clc
fucom
nop
fstpt
fcomip
enter
repnz
enter
lock
cmp
mov
out
mov
jns
pop
loope
testb
inc
shll
push
mov
fwait
out
xchg
fcmovb
fidivrl
and
or
test
out
ret
scas
fnstsw
insb
movsl
jle
es
jmp
repz
out
push
add
sbb
ss
push
mov
push
cmpsl
sub
call
fists
test
or
sub
in
ds
add
pop
fnstsw
xor
jg
aas
mov
es
inc
mov
out
pusha
cmp
je
and
and
leave
mov
scas
jbe
psrlw
mov
clc
es
xchg
or
sbb
pop
ja
out
cmp
cld
jbe
jnp
fildll
cs
inc
jmp
aam
sub
or
xchg
mov
mov
dec
pop
inc
inc
dec
sub
or
sub
mov
or
inc
mov
popf
addb
ljmp
inc
jb
repnz
or
jb
arpl
movsl
mov
or
inc
push
insl
cwtl
fisttpl
ljmp
mov
imul
sub
aaa
mov
push
mov
adc
outsb
rcl
sub
cmp
dec
stos
je
test
pop
iret
mov
xchg
xchg
fildll
lret
jno
das
push
adc
outsl
jbe
sti
inc
or
and
fdivs
insb
shll
outsb
push
xchg
out
shlb
subl
adc
push
mov
mov
test
call
ds
inc
add
stos
push
push
int
jg
pop
mov
rorl
adc
pop
push
push
out
add
xor
test
pop
into
mov
xchg
scas
enter
lcall
jp
std
or
lods
repz
jecxz
bound
imul
mov
push
push
xor
aad
fs
scas
jmp
ljmp
dec
add
jbe
dec
jb
iret
stos
cmp
inc
or
mov
imul
loope
subb
jae
pop
fisttpll
sbbb
das
out
test
sbb
pop
mov
jmp
sbb
sub
movsb
or
push
sub
cmp
call
loope
inc
out
js
arpl
bound
sub
mov
fisttps
popf
pushf
fmul
dec
ret
mov
lods
push
jmp
pop
rcrl
and
xlat
xlat
aam
loopne
or
jbe
pop
sbb
jb
mov
ret
icebp
movsb
adc
push
mov
xchg
push
or
xchg
fs
xlat
mov
test
mov
xorl
jg
fcmovbe
dec
xlat
and
push
mov
pop
aaa
inc
adc
and
stc
sub
aam
dec
sbb
xchg
ss
add
outsl
jg
insl
or
sbb
push
iret
and
in
mov
xchg
xrelease
sbb
int3
lods
lds
adc
out
xchg
dec
and
test
pusha
out
add
cmp
shlb
dec
sbb
push
std
clc
test
push
xchg
ret
dec
xor
xchg
jecxz
pop
int
push
rcpps
sbb
xor
adc
popf
sbb
out
or
jne
sti
dec
xchg
sbbb
jle
mov
mov
sub
xchg
mov
sbb
add
loop
dec
subl
adc
pop
pusha
xchg
pop
jl
sbb
fidivrs
pop
mov
gs
jae
andb
and
cli
sbb
sbb
pop
jmp
mov
pop
add
mov
lahf
cmpl
jne
and
xlat
mov
adc
data16
or
sub
loope
and
push
jl
loop
or
xchg
pop
cmp
out
push
stc
xchg
add
stos
jns
add
push
imul
cmpsb
sub
xlat
and
cltd
add
mov
push
xchg
xchg
inc
mov
aad
or
test
fcomps
mov
das
push
lcall
int3
cs
and
inc
push
negl
xor
ds
popa
mov
stc
pop
push
pop
pop
dec
cmp
lcall
dec
stos
fdivs
fwait
cmp
xor
fnsave
shr
popf
loop
jnp
fistps
outsb
loop
out
xlat
insl
add
ljmp
and
pop
xor
jb
data16
push
cmp
test
std
and
sbb
dec
rcrl
hlt
sti
dec
lds
fldcw
in
sub
xchg
mov
cld
jbe
or
gs
ret
push
sub
sub
sbb
sar
rorl
push
jg
fbld
aad
or
add
js
ret
push
fcmovbe
mov
jecxz
and
sbb
adc
push
enter
mov
ja
divl
movsl
stos
xchg
xchg
mov
aas
cwtl
ljmp
cs
fimull
loopne
pop
repz
scas
outsl
push
bound
or
mov
or
sbb
fimuls
fcoms
je
jns
or
data16
lock
mov
mov
fucom
adc
repnz
mov
sub
push
mov
int
push
jno
pop
in
mov
idiv
jbe
or
adc
fstpt
insb
mov
gs
jbe
cmp
sub
shll
sbb
or
inc
push
xor
or
sub
fidivrs
sbb
pushf
inc
jo
mov
arpl
sbb
test
int3
fs
dec
stc
rcrb
jge
std
lea
jge
or
scas
les
push
mov
ss
or
xor
push
dec
jp
shl
pop
inc
out
and
push
sub
jge
mov
pop
jae
pop
mov
pop
repnz
cmp
lahf
movsb
pop
cmp
aad
sub
mov
pop
jecxz
add
das
add
lods
fiadds
jl
pop
dec
sbb
imul
push
int3
out
dec
mov
and
sbb
inc
mov
and
and
arpl
arpl
jmp
cld
sub
sbb
call
in
inc
inc
int3
cmpsb
dec
jp
cmp
cs
mov
in
mov
push
push
stc
out
inc
fdivs
cwtl
sub
jle
cmp
pop
fstpl
into
std
and
jns
xchg
inc
mov
xchg
adc
in
call
rclb
push
lea
mov
adc
dec
outsb
int
push
mov
adc
xchg
cld
cmp
cmp
dec
sbb
enter
dec
or
jo
cmp
mov
lret
mov
imul
or
hlt
mov
adc
mov
addb
enter
lahf
xor
outsb
fsubr
mov
mov
in
shrb
jns
loopne
lods
inc
sbb
xor
pop
loope
push
shl
and
hlt
adc
push
add
sub
gs
popa
mov
repz
or
stos
enter
into
repz
xchg
aas
xchg
inc
rcrl
popa
pop
dec
and
pushf
adcb
int
mov
cmp
add
xlat
adc
into
pop
sbb
jl
cld
xchg
mov
mov
mov
insb
mov
jecxz
xchg
fwait
push
fcomps
cmp
in
fisttpl
aaa
enter
push
cmp
mov
jecxz
inc
int
mov
into
or
out
push
sbb
movl
iret
dec
repz
cmc
mov
xor
dec
cmp
or
lods
and
xor
test
cmp
movsl
pop
sub
stos
shll
imul
imul
add
xlat
push
adc
fcoms
push
xchg
movsb
pop
addl
pop
js
pop
xchg
jp
adc
insl
and
stos
jmp
sbb
mov
push
mov
sub
push
lret
pushf
add
sub
dec
fistpl
xor
and
xlat
es
mov
divb
or
lcall
outsb
std
aad
adc
jle
out
nop
out
mov
icebp
cmp
stc
push
repnz
aam
aam
push
xor
pop
cmp
jg
push
test
adc
pop
in
or
xor
mov
icebp
pop
jae
hlt
sbb
xlat
inc
or
outsb
pop
lds
loope
gs
push
mov
and
jnp
addb
insb
movsl
add
pushf
negb
mov
xchg
xchg
adc
cmpsb
cmp
repz
xchg
bound
push
lock
push
xor
sbbb
mov
lret
pop
and
add
dec
dec
in
add
in
shrl
lret
adc
and
fstpt
xor
xorb
jp
jno
add
pop
adc
jb
inc
sub
js
mov
mov
inc
mov
or
jbe
addr16
test
adc
cmp
setns
aam
call
jmp
icebp
sbb
mov
stc
cmp
nop
push
pop
push
mov
push
sarb
mov
push
push
rolb
sbb
addr16
sbb
repz
jl
pusha
cwtl
pop
sbb
adc
mov
push
in
hlt
dec
pop
leave
cmpsb
cld
and
xchg
into
mov
xor
je
shlb
adc
fimuls
jge
js
mov
add
push
xbegin
out
mov
push
mov
jo
xchg
rorl
outsb
push
pusha
es
iret
loope
leave
sbb
mov
ret
andl
pop
insb
adc
or
adc
pop
int3
pop
sbb
xor
adc
enter
adc
aad
fadds
push
mov
lea
push
aaa
or
and
mov
mov
mov
test
xchg
mov
sub
sbb
fmuls
dec
xchg
sahf
push
stos
mov
pop
xor
and
sahf
mov
out
inc
out
test
dec
sbb
subb
jecxz
idivl
jle
repnz
push
call
outsl
mov
and
adc
and
out
inc
mov
into
or
shll
pop
test
push
xchg
push
xor
sub
sub
sbb
mov
and
fsubp
mov
frstor
xor
rclb
shrb
aam
movsl
scas
in
xchg
jo
ds
inc
dec
dec
and
cld
jae
xor
cwtl
sub
int3
repz
xchg
adc
test
insb
mov
inc
call
mov
sbb
push
jne
push
fadds
mov
mov
dec
push
mov
mov
add
repz
jo
addb
mov
xor
clc
ret
fs
mov
and
fcomi
roll
iret
pop
inc
lea
cmovne
cmp
dec
cmpsb
aam
pusha
inc
fiaddl
pop
xchg
mov
dec
iret
lea
mov
adc
or
add
mov
aam
inc
in
push
xor
sub
jnp
jne
lahf
outsb
fucomip
sbbb
xor
icebp
sub
in
sbb
cmpsl
mov
gs
ja
aam
fsubl
icebp
shll
incl
and
xor
cmp
mov
sbb
lods
xchg
es
out
int
rol
nop
add
jno
xchg
inc
scas
cs
clc
inc
daa
ret
mov
cmp
jmp
adc
mov
mov
cmp
movsl
test
mulb
rcll
push
mov
sbb
push
mov
xor
xorl
mov
ror
inc
jmp
scas
or
pop
gs
lret
pop
test
stos
imul
xchg
xlat
bound
test
dec
fwait
pop
movsl
insl
repz
js
cmpsl
jns
arpl
cltd
stos
xchg
inc
enter
dec
pushl
in
hlt
lahf
enter
lret
rsqrtps
std
inc
mov
inc
daa
sbb
dec
mov
int3
sbb
jo
mov
adc
mov
xor
and
lahf
xor
mov
xchg
out
sbb
lahf
sbb
mov
xchg
xchg
lods
inc
repz
out
mov
sbb
mov
leave
shrl
push
xor
or
sbb
cwtl
dec
cmp
inc
mov
pop
testl
and
inc
push
insb
mov
add
pop
inc
mov
pop
xchg
je
in
rcrb
adc
cmp
mov
xlat
sub
xchg
sbb
fldl
enter
pop
les
mov
dec
push
stc
popf
mov
mov
data16
pop
mov
xor
push
push
pop
and
jae
aad
adc
sub
fstl
bound
adc
cmc
loope
inc
cld
cli
sbb
ja
or
push
pop
xchg
or
pop
icebp
sub
hlt
in
and
lret
xchg
pop
xor
shl
adc
data16
xor
pop
sbbb
lea
sahf
push
dec
xchg
sarb
out
xorb
jp
sahf
or
test
mov
test
fs
and
decl
sahf
jle
sub
mov
mov
imul
xchg
inc
xchg
outsl
out
pop
xor
je
dec
gs
push
roll
leave
sbb
inc
xchg
roll
daa
dec
lds
dec
jle
xchg
out
pop
jg
out
addb
mov
popa
pop
push
rorb
mov
mov
movsb
repz
pop
jecxz
mov
call
inc
daa
aam
into
mov
jns
aam
aas
lods
jae
push
setno
inc
pop
pop
xor
lods
fadd
adc
lea
dec
mov
sbbb
ja
and
mov
mov
cld
js
sub
decb
lcall
xor
in
push
jnp
cwtl
mov
sub
in
jnp
mov
outsl
and
cmp
frstor
adc
jge
push
mov
xchg
iret
out
cmpsb
xor
fdiv
es
imul
out
pop
mov
mov
sub
dec
push
dec
push
jge
mov
aas
dec
or
int
idiv
jnp
sti
dec
dec
push
add
stc
sbb
xchg
in
inc
mov
dec
push
mov
movsb
cmp
push
loop
cwtl
cmp
pop
push
cmp
fisubl
cwtl
arpl
xchg
arpl
jno
sahf
mov
fisubrl
push
add
xlat
adcl
insb
or
les
movsl
test
loopne
lea
push
pop
mov
or
enter
in
dec
cmp
mulb
cli
push
clc
cmp
fsubrl
sub
xchg
inc
sub
mov
dec
movsb
mov
adc
popf
arpl
test
mov
mov
and
xorl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
jmp
push
movb
movsl
mov
cs
cmp
xchg
jp
addb
add
stos
adc
daa
cmp
addl
insl
hlt
or
movsl
mov
push
jo
in
mov
movsb
adc
xor
adc
mov
mov
jg
ret
jbe
push
mov
ds
insl
mov
mov
iret
movsl
or
js
adc
mov
pop
shr
in
nop
mov
mov
cmc
scas
mov
dec
mov
dec
clc
dec
loopne
mov
cli
or
mov
repnz
mov
loop
iret
mov
xchg
ret
lret
in
cwtl
mulb
add
fwait
dec
mulb
or
movsb
mov
dec
addr16
lods
mov
aas
arpl
pop
mov
stc
lret
push
fiadds
and
lahf
jbe
in
xchg
subb
xor
hlt
xor
pop
add
push
pop
test
lcall
sbb
pop
mov
cld
rclb
fcoml
test
mov
adc
add
popa
mov
out
mov
sub
cli
adcl
push
cmp
push
mov
addr16
mov
leave
fnstcw
shll
mov
inc
mov
mov
mov
out
xchg
es
les
call
cmpsl
in
ret
int
testl
nop
das
aam
pop
cmpsl
jb
push
xor
into
jle
or
cli
jno
fistps
mov
dec
mov
xchg
hlt
sub
jo
scas
ficompl
cltd
das
in
in
xchg
sbb
movsl
push
xlat
fsubl
dec
and
lods
out
in
subb
scas
jne
sti
mov
mov
xchg
and
inc
pop
sub
push
pushf
add
ret
jl
aaa
es
in
and
popa
adc
dec
pop
loope
cmp
sbb
data16
clc
lcall
adc
xchg
mov
xor
js
stos
push
cmc
lock
test
or
mov
nop
xor
movsl
js
stc
lcall
dec
repnz
arpl
stc
cwtl
mov
pop
cmp
call
add
inc
fucompp
jl
push
addr16
jne
mov
fists
dec
pusha
push
rorl
sub
icebp
rcll
and
xchg
cmp
dec
popa
loop
fs
pushf
scas
shlb
test
sub
xor
jle
mov
lahf
ja
push
pop
xlat
mov
adc
test
jl
and
mov
enter
sbb
or
add
adc
add
mov
dec
jl
and
fwait
js
mov
adc
iret
into
mov
mov
rcll
pop
push
xchg
pop
in
fwait
lret
jmp
arpl
cld
push
js
test
mov
sub
jecxz
dec
addl
lea
aad
shrl
add
adc
add
cmpsb
push
sbb
leave
test
mov
ja
pusha
and
push
cmpsb
cmpsl
fldln2
push
into
out
mov
xchg
jmp
adc
or
xlat
add
or
push
pop
out
popf
jno
cmp
and
adc
and
adc
lahf
loope
test
jp
mov
test
pushf
inc
and
cmpsb
push
xchg
adc
pop
xor
scas
sub
sub
aam
cmc
int3
outsb
ficomps
inc
je
push
and
and
sbb
ret
adcb
outsb
adc
fildl
mov
hlt
jne
inc
jne
and
cmpsb
mov
pop
sub
inc
mov
out
mov
dec
xor
jno
push
test
sub
sti
lods
fidivrs
dec
pop
loopne
mov
push
pusha
ret
mov
test
shrl
es
and
mov
xchg
loope
add
clc
stc
jle
cmp
shl
dec
call
aam
outsl
sub
std
std
enter
aad
fisubs
xlat
leave
add
mov
jmp
cmpsb
imul
mov
and
outsb
je
jnp
arpl
ss
fidivl
lret
pop
or
xchg
cmp
xchg
lret
push
xchg
inc
testb
out
mov
nop
out
jbe
pop
popa
pusha
pop
jg
repnz
inc
push
lods
notb
push
sti
into
shrb
ret
cli
mov
pop
repz
sar
aam
mov
sbb
lret
in
mov
out
push
adc
jle
xor
sbb
daa
mov
nop
inc
sbb
or
cmovns
arpl
jne
ret
cmp
arpl
dec
mov
mov
dec
data16
repnz
jbe
adc
or
fmuls
push
push
mov
stos
rorl
mov
push
arpl
outsb
loopne
inc
pop
cmovle
int3
push
clc
or
or
call
push
ljmp
mov
jns
jg
add
wbinvd
jo
aas
cwtl
and
mov
pop
sbb
clc
aam
jnp
fstl
xor
movsb
push
or
sbb
and
mov
in
jno
cmp
mov
addr16
jmp
jbe
enter
push
mov
pop
pslld
cmpsl
lret
and
adc
clc
ss
cltd
mov
xor
cs
stos
jp
mov
push
jmp
loope
lods
pop
addb
shrb
lahf
mov
inc
dec
mov
push
or
cld
adc
jecxz
inc
pop
mov
dec
mov
add
arpl
outsb
mov
mov
xor
jae
fists
outsl
sbb
cmp
notb
movb
gs
jecxz
pop
mov
jns
dec
in
mov
cld
es
xor
sub
pop
in
dec
cmp
sub
cmp
into
imul
mov
test
lods
adc
jo
andb
pop
adc
test
xor
imul
xchg
mov
cwtl
popf
cmpsl
and
sbb
aad
xchg
in
adc
mov
add
dec
xor
mov
fbld
mov
notb
aaa
lods
cmp
jb
adc
xchg
mov
rolb
jmp
push
xor
xor
fimull
cld
jb
or
push
jp
xchg
insl
movb
xor
lds
addl
pop
xchg
inc
xchg
or
mov
enter
xor
out
mov
or
push
call
les
fdivl
in
lcall
rcll
testl
mov
jnp
sarl
int3
pushf
or
test
xchg
and
repz
sub
xchg
fstps
jmp
pop
sub
test
stos
loop
sub
inc
in
cmp
dec
xor
cwtl
ljmp
add
sbb
les
in
push
mov
fstl
mov
std
std
mov
xchg
repnz
leave
mov
aas
push
jno
mov
push
xchg
arpl
call
cmp
mov
aad
daa
jge
adc
mov
out
xlat
in
das
jbe
ljmp
or
sub
and
icebp
push
push
xor
sbbl
jmp
jle
stos
sub
jno
loop
jo
jg
push
mov
push
fldt
in
iret
ret
push
dec
movsb
cmp
jge
jne,pt
inc
in
iret
lods
scas
xchg
pop
ret
sbb
in
cmc
cwtl
add
out
xor
incl
push
orb
int3
cs
push
mov
lds
jne
adc
sub
lret
mov
movsw
int
cwtl
and
and
loop
bound
sbb
mov
aas
test
bound
stos
mov
sub
push
cld
rorb
aad
aaa
mov
mov
dec
and
push
imul
sbb
add
jbe
out
clc
adc
dec
js
pop
xlat
mov
jno
inc
popa
test
jae
pop
pop
jae
test
or
sbb
mov
xor
cmp
lcall
repnz
faddp
xchg
jno
sub
push
movsl
rcll
loopne
into
xor
or
pop
loopne
cmpsl
mov
add
xchg
movsl
lock
gs
dec
testb
jge
mov
xchg
lods
ret
std
sub
or
es
mov
bnd
and
pop
sbb
jecxz
insl
pop
push
mov
pusha
cld
lcall
fucomip
lret
pop
mov
cmpsb
insb
cmp
and
enter
xlat
outsb
cmpsl
dec
pop
xchg
mov
repnz
jmp
push
mov
shlb
sub
shl
sbb
jecxz
pop
or
jae
push
mov
prefetch
aam
and
cmc
jb
out
loope
cmc
fwait
inc
xor
mov
mov
push
mov
sbb
add
clc
xor
dec
imul
or
jbe
mov
addr16
or
outsb
push
sub
xchg
fisttpl
and
mov
xchg
xchg
sbb
adc
mov
std
and
cs
mov
cmc
ja
inc
sbbb
rorl
mov
xchg
dec
sti
sbb
mov
sub
adc
int
inc
cmp
inc
int3
popa
out
xchg
fidivs
and
arpl
sub
add
mov
xor
out
test
ret
ljmp
mov
add
scas
fld
add
cs
or
in
mov
dec
pop
out
mov
adc
pop
cmp
dec
add
inc
test
and
xor
shr
xchg
test
mov
ret
test
dec
push
pop
dec
mov
mov
xchg
sub
mov
sub
sbb
xchg
or
jnp
movsl
dec
push
xchg
int
sbb
inc
adc
push
sub
sub
rcrl
ss
jmp
bound
ss
popf
loop
imul
lahf
shll
int3
lock
iret
mov
sbb
iret
enter
cmp
mov
packssdw
hlt
cwtl
pop
dec
icebp
aaa
leave
pop
into
fldl
sub
sbb
enter
jge
xor
repnz
dec
mov
rolb
jg
mov
sub
mov
shll
aas
loop
data16
shll
cmpsb
enter
nop
sbb
in
pop
mov
jbe
leave
movsl
xor
out
outsb
xchg
lods
dec
push
mov
fdivs
push
loop
sub
add
sahf
pop
jge
pop
and
pusha
jl
push
jl
call
in
ja
jecxz
not
or
movl
mov
push
and
or
jae
mov
mov
dec
ficoml
inc
shr
and
fdivs
es
enter
xchg
push
out
fcompl
ja
sbbl
sub
pop
xchg
jmp
cmpsl
dec
jg
dec
sub
sbb
roll
push
loope
xor
insl
test
inc
mov
test
mov
sub
jo
mov
and
stos
andl
inc
jno
test
cmc
and
mov
jno
dec
jmp
jbe
sbb
xchg
sbb
stos
popa
sarb
loop
dec
fmull
sti
lods
call
and
jge
loope
jb
out
xchg
mov
and
lds
cmpsl
push
xor
push
push
push
pop
or
mov
leave
test
stos
adc
and
dec
stc
add
pop
and
push
dec
push
or
aaa
sbb
jmp
testl
lock
lahf
mov
mov
je
push
nop
push
pop
pop
or
push
sbb
pop
pop
mov
inc
lret
iret
mov
pushf
lds
outsb
adc
pop
cmpsb
xor
cmp
movsb
mov
nop
repnz
dec
xchg
jb
bound
push
in
cmp
imul
call
or
jl
jb
in
and
addl
or
sahf
jl
jp
jmp
data16
sarb
fidivl
lods
ja
cmp
loopne
das
dec
aas
xchg
jle
int
call
inc
jge
test
int
push
mov
jns
pop
mov
ja
sub
inc
in
jae
out
sub
cmp
pop
and
shll
je
pop
dec
int3
push
fisubl
daa
imul
pushf
sbbl
and
cwtl
mov
or
gs
out
xchg
xor
fisttpll
daa
inc
pop
iret
mov
daa
das
and
inc
push
mov
xchg
jae
aam
mov
sahf
jge
pop
adc
int
inc
idivb
mov
scas
mul
pop
cmp
mov
cld
mov
scas
not
fistpl
xchg
sub
jge
insb
imul
push
pop
push
and
ficoms
iret
sbb
loop
js
xor
mov
aam
mov
sub
ljmp
stos
cmp
pushf
sbb
mov
mov
dec
repnz
push
stos
fsubrs
xor
mov
out
mov
mov
mov
insl
push
cmpsb
imul
jmp
push
pop
mov
mov
stc
imul
sub
xor
jge
and
rorl
jg
sbb
xchg
lods
hlt
push
mov
push
cmp
jge
mov
pop
in
xor
or
push
cltd
movsl
fstps
movsb
int3
push
pushf
sub
inc
mov
adcl
mov
pushl
xchg
gs
cltd
lret
dec
testb
cmp
inc
xchg
rorl
int
insb
hlt
lock
int
cmp
in
and
lods
sub
insb
jb
icebp
mov
jnp
into
add
push
test
ljmp
add
dec
dec
shrl
mov
aas
inc
in
jns
ret
mov
add
mov
fldt
or
popl
loope
loop
leave
nop
int
jle
sahf
jp
stos
or
das
hlt
and
lahf
xchg
inc
sysenter
xor
push
cmp
cli
push
mov
std
sarl
stos
push
aam
jge
fisubrl
cs
ret
dec
cmc
lret
adc
add
mov
aam
iret
dec
mov
adc
cmc
sub
lcall
arpl
fimull
adc
sti
loopne
sbb
sub
adc
jge
xor
mov
je
sub
or
push
and
rcr
cli
into
xor
icebp
adc
jae
adc
outsl
ja
xchg
add
dec
jge
adc
dec
cltd
stc
loopne
lahf
push
push
or
insb
ret
test
addl
push
push
mov
and
xor
fsubp
add
mov
dec
and
cmpsl
test
popa
xchg
pop
test
pop
pushf
in
push
sbb
test
ficoms
mov
adc
addl
jns
cmp
sub
sbb
sbb
test
sub
ss
cmc
mov
fcoml
sub
jnp
add
test
divb
jae
sbb
mov
stos
scas
call
fildl
aas
std
jp
mov
sahf
jb
ljmp
mov
pop
mov
mov
jbe
inc
sbb
sub
push
in
mov
add
pop
cmp
in
pop
dec
addr16
mov
or
xchg
mov
cmpsb
jnp
push
adc
stos
int3
mov
imul
push
lods
test
or
dec
dec
jecxz
jns
roll
mov
xor
pushf
out
adc
pop
out
cmp
mov
scas
inc
ss
outsl
and
mov
jae
cmpsl
cs
push
stc
je
cmp
test
xchg
inc
mov
add
mov
adc
jo
sbb
gs
jnp
rcl
push
hlt
jecxz
push
das
loope
pop
mov
mov
subl
xor
push
es
ljmp
lahf
fstp
std
pop
jle
jl
xor
cld
fsubrs
aas
bound
je
add
stos
sub
and
les
aam
loop
push
and
mov
int3
shll
adcl
repnz
insl
and
inc
add
jbe
ds
mov
xorl
test
cmp
out
insl
lahf
push
mov
mov
and
add
es
clc
mov
adc
or
or
add
imul
addr16
push
dec
fimuls
fbld
jnp
pop
push
jl
out
stos
add
popa
ret
push
pop
jns
lock
cmp
sbb
mov
test
dec
ja
inc
xchg
scas
and
aas
fildll
cld
sbb
xor
add
mov
dec
out
inc
xlat
mov
inc
dec
cmp
pand
into
mov
iret
inc
jno
mov
outsb
movl
into
mov
mov
xor
mov
fsubrs
fidivl
ds
adc
sbb
sub
out
popf
pop
pop
sbb
fs
cmp
movsb
std
into
es
pusha
mov
cmp
jbe
inc
xor
bound
movsb
out
adc
je
fstl
dec
inc
in
pop
ja
ret
loop
xchg
test
rorl
out
loop
sub
imul
add
out
jecxz
adc
call
adc
and
arpl
and
je
xchg
out
mov
mov
outsb
jo
jnp
lods
pusha
jecxz
mov
xchg
or
pop
push
pushf
or
arpl
adcl
mov
daa
je
mov
xor
inc
movsb
aad
xor
lock
stos
and
mov
gs
scas
ret
icebp
fiadds
andl
and
andb
int3
mov
xchg
out
test
lret
add
es
arpl
dec
mov
fisttps
or
adc
pop
outsl
mov
insb
xor
mov
push
add
xchg
imul
push
add
mov
hlt
popf
xlat
cmp
dec
xchg
mov
push
jno
in
daa
xlat
mov
leave
push
cmp
lcall
mov
leave
aaa
xchg
aad
pop
lahf
aam
adc
loop
lods
cs
jno
andl
ret
movsb
repnz
loope
xchg
xor
loope
mov
add
outsb
stos
xchg
and
add
aaa
xchg
xlat
insl
outsb
movsl
fwait
sub
mov
inc
inc
ja
push
sti
mov
sti
stos
adc
push
jbe
xor
sbb
rcl
sub
push
dec
pop
clc
test
mov
scas
pop
mov
je
test
aas
mov
pop
bts
pop
lahf
out
testb
xchg
or
jl
das
jae
adc
xor
xchg
xor
xchg
mov
sahf
cmp
push
and
mov
push
dec
enter
add
mov
mov
repnz
and
int
mov
lahf
sbb
shrl
fisttpll
jmp
in
add
daa
sub
aaa
lea
sub
pop
aaa
in
ss
pusha
popa
dec
push
mov
fwait
adc
pop
flds
movsb
daa
dec
mov
sub
add
or
pushf
mov
mov
sarl
adc
hlt
iret
xchg
adc
ret
inc
fisttpll
mov
pop
push
mov
mov
pop
sub
inc
add
movsb
test
loopne
xchg
arpl
adc
mov
xor
inc
imul
sub
jno
cltd
ja
decb
bound
pop
jnp
pop
outsl
mov
fstl
inc
mov
pop
ja
jl
and
pusha
or
insl
mov
fsubs
aas
pop
push
cmpsl
inc
and
cmp
jge
push
and
rolb
movsb
jb
adc
dec
mov
jb
sub
ret
das
or
sbb
adc
fidivs
xchg
lret
push
jb
push
test
pop
imul
jbe
add
push
push
addr16
jl
push
xor
enter
cmp
inc
jae
nopl
fimuls
fstpl
lret
insb
mov
xchg
cmp
inc
push
xor
movl
jo
out
mov
sbb
daa
add
es
mov
fbld
inc
test
testl
mov
mov
in
push
aaa
mov
call
push
ja
stc
pop
test
pop
sti
pop
and
and
std
and
bound
outsl
movsb
ret
pop
and
aam
jp
std
xchg
push
or
push
lahf
pop
push
mov
je
test
cmp
pop
mov
add
shlb
fildl
inc
movsl
hlt
out
pop
xchg
and
xchg
imul
mov
adc
or
xchg
je
push
mov
jae
xacquire
fidivrs
xchg
icebp
push
jno
cmp
pop
shrd
mov
pop
cmc
jbe
xchg
push
jmp
scas
jno
inc
pusha
ds
mov
xchg
popa
clc
test
add
pop
lods
ljmp
mov
icebp
mov
xchg
pop
add
pushf
push
push
je
pop
pusha
xchg
loop
push
xlat
cmp
ss
inc
cmp
inc
xchg
pushf
sbb
inc
cmpsl
lods
dec
sbb
or
call
mov
stos
dec
cmc
jns
ret
adc
pop
add
sbb
add
cmp
popf
aad
imul
insb
xchg
adc
inc
into
aas
mov
mov
ret
repz
xchg
add
adc
sub
cmpsb
repnz
dec
loop
xor
bound
xchg
ret
daa
sbb
fstpt
sub
sub
push
push
dec
mov
int
addb
pop
or
jecxz
add
cmp
jne
pop
push
dec
stc
sub
jns
imul
push
jae
add
insb
inc
fists
leave
scas
xchg
fsubrs
jp
mov
out
lret
les
xchg
pop
ret
pop
push
imul
mull
pop
lods
adc
negb
stos
jae
stos
and
push
inc
repnz
cmc
lret
or
xor
xor
xchg
pusha
jbe
lret
lcall
sbb
in
lret
test
xchg
sub
dec
xchg
jb
repz
bound
adc
fisubrs
addb
arpl
push
test
sub
mov
mov
ljmp
or
dec
enter
cmp
xlat
mov
aas
scas
push
mov
and
mov
cli
cmp
jo
jb
inc
das
fldt
xorl
stc
ja
insb
or
or
daa
test
jmp
loop
mov
mov
pop
shll
into
push
add
sub
in
cmpsl
pop
ss
das
fcomps
es
aas
and
cli
mov
push
add
or
imul
mov
and
lods
xor
mov
stos
js
mov
js
cmp
hlt
adc
jge
sbb
gs
loopne
pop
orb
push
cmp
push
mov
mov
inc
jns
and
int3
jo
roll
fcomps
cmpsb
jno
add
mov
pop
sub
cmpsb
ss
pop
cmc
je
shlb
pop
fnsave
test
setne
mov
repz
adc
or
add
push
mov
mov
mov
movsb
aam
push
sahf
jae
jp
outsb
mov
cwtl
adc
inc
dec
jp
std
pop
inc
mov
inc
xchg
pop
movsl
cmp
pop
faddl
dec
out
movsb
test
divl
cltd
scas
mov
shlb
test
inc
and
sarb
lret
xchg
push
fidivrs
out
mov
mov
sahf
int3
in
imul
pop
imul
stc
xor
push
xor
fisttps
dec
push
sub
sahf
stos
jns
jle
mov
jne
orb
xchg
fcmove
iret
fldcw
movsl
std
fsubrl
pop
mov
shrb
pop
sub
sbb
mov
and
popa
ror
jl
mov
fldcw
and
push
sbb
adc
mov
mov
add
fnstenv
xchg
push
sub
insl
int
jl
add
and
jmp
sub
and
jmp
ds
pop
insl
iret
mov
dec
gs
sub
push
imul
sarl
pop
dec
add
mov
shlb
push
sbb
enter
dec
fimull
repz
push
loope
lds
dec
add
push
and
xor
stc
incl
mov
je
jge
fs
xchg
fcom
xor
sti
add
std
repnz
loop
mov
ss
mov
inc
pop
mov
jmp
enter
mov
and
cmp
cmpsl
outsb
adc
jmp
mov
jg
jmp
mov
lret
mov
popa
sbb
adc
ljmp
xor
ror
mov
fwait
jge
dec
cli
fsubrp
inc
pop
out
pop
and
xchg
or
and
xchg
popf
js
in
xchg
jp
jmp
mov
popf
sbb
push
das
sub
mov
rorb
int
daa
sbb
int
add
bound
xchg
push
push
xchg
xchg
mov
xor
pop
enter
add
push
sar
jle
divl
movsb
jbe
outsl
divb
pop
aad
xor
jge
int3
mov
aam
pop
lret
cmp
pop
nop
xor
lcallw
cmp
iret
lds
out
rclb
clc
lock
fsubs
arpl
add
loope
loope
fs
pushf
pusha
stos
sub
or
repnz
test
jl
stos
or
repnz
sbb
adcl
or
icebp
into
nop
rolb
or
xor
push
jecxz
add
fldenv
mov
ss
das
inc
scas
js
test
mov
je
add
fsts
cld
cmp
outsb
lods
jmp
in
inc
mov
pop
mov
push
jne
imul
ret
mov
call
adc
or
call
lods
xchg
adc
jnp
lahf
dec
xchg
push
js
jg
jo
dec
push
mov
std
sarl
test
loope
mov
push
adc
dec
out
pop
rcrb
in
adc
test
cmp
and
xchg
ljmp
test
cld
dec
rcl
push
mov
pop
push
mov
ja
mov
xchg
icebp
sti
loope
shr
scas
fsubl
inc
pop
or
sbb
jmp
sarl
cltd
or
or
jmp
dec
aad
sub
int3
rcrl
jo
and
pop
push
pop
movaps
sti
cmp
push
aaa
push
loope
push
pop
lods
into
adc
mov
mov
pop
outsl
add
cmpl
mov
mov
and
xor
xchg
das
jb
test
enter
dec
sbb
mull
xchg
lahf
test
cmc
and
into
jno
lock
jle
iret
mov
cmp
lret
or
add
adc
sti
leave
xor
jmp
js
mov
popf
add
dec
in
inc
lock
jne
pop
nop
les
xor
fisubrl
mov
into
push
sub
fwait
sub
push
sub
jmp
mov
popf
fdivrs
roll
mov
adc
mov
add
push
add
loop
pop
jg
mov
popa
daa
leave
mov
adc
push
or
in
adc
outsl
mov
push
popf
jb
loop
mov
dec
fisubs
push
scas
enter
inc
mov
push
test
in
jo
shl
sub
rcrb
inc
lds
jno
test
pop
push
sub
add
xchg
dec
mov
push
jns
sub
and
scas
das
push
inc
loope
cmp
mov
inc
fucomp
push
ret
mov
adc
std
mov
in
aad
movsl
mov
mov
jp
int
scas
movsl
jae
mov
xchg
pop
or
movd
or
and
movsb
ret
lcall
ret
sbb
stos
push
inc
inc
xor
push
imul
and
xchg
orl
xor
jl
cmp
jno
mov
ja
sbb
sub
dec
jl
add
cmp
or
sbb
sbb
ret
and
or
sbb
adc
sbb
int
inc
mov
mov
insl
xchg
movsb
daa
imul
mov
scas
push
xor
jg
mov
fistpl
adc
daa
mov
das
cmc
or
cmc
add
sbb
sub
or
add
pop
sbb
inc
add
pop
jns
inc
xchg
insb
sub
loope
div
sbb
nop
loope
xor
pop
mov
sbb
imul
xor
stos
add
mov
inc
jmp
mov
in
flds
ja
cmp
xor
inc
or
rcrl
pop
add
movsl
rcl
pop
lock
jb
filds
mov
lds
outsl
mov
daa
fs
adc
stos
lret
xor
stc
push
xchg
bound
mov
in
mov
outsl
jbe
insl
mov
int3
pop
jecxz
cmp
int
repz
lret
xor
inc
cli
icebp
mov
add
xchg
outsl
jb
mov
es
sub
add
nop
cmp
cmp
xchg
lea
gs
mov
push
or
mul
lods
test
push
enter
mov
aad
loopne
sub
jl
mov
or
cld
inc
add
fistps
outsb
out
jns
xchg
mov
inc
dec
xor
ljmp
call
mov
pop
pop
pop
pop
cmp
icebp
jp
mov
pushf
and
xor
xor
jecxz
cld
jnp
out
mov
lcall
cmp
sbb
or
sbb
pop
icebp
ret
dec
xorb
aaa
movl
out
fs
clc
sahf
sbb
pop
lahf
jl
insl
mov
inc
mov
xor
clc
ss
mov
xor
mov
or
mov
push
rcrb
mov
xchg
inc
rorb
or
pop
inc
add
mov
mov
dec
lods
les
add
pop
jle
or
shll
sahf
popa
je
cltd
xchg
mov
pop
jnp
iret
pop
fsubl
pusha
icebp
adc
rol
icebp
mov
jp
adc
sti
fs
sahf
movups
jb
mov
and
loop
loopne
pop
cmp
ficoml
or
mov
pop
xchg
cmp
xor
mov
adc
lret
mov
jl
mov
stos
inc
fiaddl
inc
mov
push
xchg
test
fnstenv
push
call
dec
shrb
xlat
or
pop
paddw
ret
in
popl
loopne
cmpsb
sbb
jns
aad
icebp
mov
push
xor
mov
jnp
push
mov
popa
mov
pop
push
push
cmp
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
jmp
adc
incb
cmpsb
xchg
or
lahf
cmp
roll
addb
sub
pause
jmp
pop
sahf
std
scas
cmpb
popf
pop
mov
jmp
rol
jp
pop
stos
rorb
andb
push
lahf
mov
sarb
out
inc
xor
mov
jge
pushf
es
sbb
jnp
or
andl
jae
popl
int3
fcmovnbe
hlt
xor
cld
xor
sbb
imul
xchg
shlb
dec
loopne
push
push
jge
inc
bound
or
movsl
or
jae
in
int
jp
insb
sti
and
xor
shl
sbb
add
test
lock
adc
mov
lds
and
loop
fisttps
rclb
mov
mov
jg
jae
cmpsb
adc
rdmsr
fnsave
lea
sbb
in
inc
insl
mov
mov
ret
enter
mov
jae
ret
test
sub
push
add
jnp
and
jecxz
jo
lock
orb
std
imul
cmp
adc
push
mov
or
xchg
aaa
push
jge
mov
movsb
jnp
jge
jno
mov
mov
inc
adcl
ret
sub
and
sub
in
mov
ja
pop
adc
sbb
sbb
sub
bound
fdivrl
add
pop
sbb
fstpl
loop
test
dec
sbb
push
mov
sub
mov
cmp
cmc
shlb
nop
push
mov
xchg
adc
mov
push
push
jg
repnz
enter
mov
pop
sbb
sbb
sub
jl
sub
std
clc
fmul
sub
sbb
shrl
add
add
std
in
cmpsl
les
out
dec
mov
add
outsb
cmpsl
repnz
scas
int3
pop
sbb
pop
shll
sub
xor
inc
pop
mov
mov
jecxz
inc
xorl
ficomps
pop
fidivrs
out
jne
leave
pop
pop
test
call
lods
shrl
in
jno
mov
loop
lods
pop
cmp
cltd
jns
mov
jbe
cltd
or
insb
call
and
mov
in
dec
xchg
mov
shr
addr16
sub
scas
push
mov
mov
outsb
out
je
inc
jns
pop
xchg
xchg
fidivrs
call
and
test
and
add
inc
jae
insb
pop
mov
cs
xchg
mov
shll
fsubp
sub
fld1
mov
incl
xor
hlt
aad
mov
mov
fstl
call
cli
cld
aad
xchg
or
fdivr
shlb
or
aaa
pop
cwtl
ss
ljmp
lret
das
inc
insl
pop
xchg
cmpsb
je
sub
inc
fdivrl
ret
insl
fisubrl
stc
aaa
les
or
xor
outsl
mov
rol
and
adc
or
sbb
fadds
jo
gs
push
cmp
push
and
lods
repz
push
xor
test
mov
popf
jno
xchg
js
xor
cltd
sub
cltd
push
sti
mov
fnstenv
and
in
ficompl
test
and
pop
jae
pop
dec
das
xchg
sbb
in
mov
fsubrs
ja
clc
dec
lods
jbe
shr
inc
rcrl
xchg
dec
int3
adc
mov
inc
in
mov
xor
addb
shrb
pop
enter
jmp
imulb
stos
and
jnp
xchg
adc
sub
or
adc
mov
addb
dec
cmp
and
mov
xor
dec
adc
out
lock
ja
out
pusha
into
lea
push
mov
pop
adc
dec
lcall
jge
das
cld
xor
sbb
outsb
jne
popf
cli
pop
lcall
pop
adc
aas
ds
test
dec
dec
lret
jae
xchg
test
in
add
mov
sub
cltd
nop
pusha
xchg
sbb
iret
cs
sub
xchg
in
and
and
mov
sbb
dec
sub
mov
test
cmpl
dec
daa
add
arpl
cli
push
inc
jle
lock
inc
fs
cli
pop
jne
daa
mov
mov
jae
cmc
fsts
adc
int3
je,pn
rcrl
push
lds
jns
cmp
je
or
shr
mov
pop
jnp
roll
loopne
mov
shlb
ljmp
xor
and
fs
or
pop
or
leave
mov
ret
add
stc
rcrb
xor
addr16
divb
mov
inc
push
clc
gs
mov
or
scas
jae
inc
sub
mov
jecxz
loope
ret
or
pop
xor
sahf
hlt
stos
rol
icebp
mov
subb
mov
jp
push
ret
mov
and
test
or
cmp
arpl
rorl
lret
sbb
and
jno
push
ja
shlb
add
popf
inc
sbb
cmp
rcll
add
dec
repz
mov
jge
out
push
push
lods
repnz
movsl
lea
sbb
xor
gs
sbb
push
leave
imul
imul
pop
jmp
dec
and
sbb
aaa
mov
sti
aam
bound
cltd
scas
addr16
popf
mov
sar
xlat
adc
ss
adc
sub
sbb
icebp
fwait
mov
ljmp
mov
movb
lods
sub
daa
xchg
and
jle
or
lds
fs
xor
xchg
mov
xchg
sarl
pop
fsubrp
sarl
mov
pop
mov
test
jno
stos
sbbb
push
cmp
test
xchg
cld
js
loop
movsb
add
or
mov
arpl
mov
addl
jp
jecxz
mov
test
push
pop
mov
xchg
cld
xchg
add
mov
stos
sbb
aam
push
dec
mov
sub
into
mov
shll
and
pop
cmp
aad
dec
in
add
fsubrp
mov
dec
mov
ljmp
mov
fdivs
aam
loop
inc
xchg
xchg
nop
mov
test
xchg
inc
into
sub
dec
pop
add
divb
cmpsb
jp
xchg
cmp
loopne
sbb
cmp
inc
movsb
mov
bound
push
notb
in
sub
leave
jg
ljmp
shrl
mov
mov
sbb
sti
and
imul
daa
cmp
mov
mov
cli
dec
in
jbe
mov
lods
pop
shr
xchg
xchg
sub
pop
cs
out
mov
pop
cwtl
jmp
test
add
inc
adc
call
adc
repnz
push
mov
push
lods
pop
ss
stos
addb
pop
mov
fistpl
repnz
push
sahf
jge
mov
inc
es
lret
fistpll
xchg
lret
and
xchg
cmp
inc
in
loope
enter
cmpsb
daa
xchg
loope
lret
jge
cltd
rorb
cmp
adc
lods
sbb
xor
xor
mov
push
xor
imul
pop
aaa
notb
mov
imul
dec
and
mov
sub
xor
pop
jnp
jns
jle
dec
push
adc
xor
xor
cmpb
ret
imul
les
int3
push
ja
stos
cwtl
repnz
cld
push
ret
jno
sti
xchg
inc
daa
xchg
push
sbb
or
movsb
mov
dec
mov
jg
jle
and
and
xor
stos
test
and
fnstenv
sub
push
iret
cmpsb
out
mov
int3
roll
xchg
aad
sub
sbb
mov
inc
cmc
orl
in
js
xchg
test
cmpb
leave
rcrb
jmp
or
jle
adc
pop
mov
xor
imul
jbe
inc
fs
xchg
in
cmp
inc
fsubs
or
stc
pop
in
jb
xor
loopne
or
sub
je
cmpb
mov
in
addb
pop
mov
pop
sbb
jno
lock
mov
xor
pop
out
mov
mov
push
jne
cmp
inc
mov
and
inc
lock
out
stc
mov
pop
mov
cmp
inc
mov
pop
pop
lods
bound
fildll
and
xor
cli
es
in
xor
test
adcb
daa
lcall
shll
ja
xchg
mov
pusha
shll
iret
imul
mov
sbb
mov
es
dec
lcall
es
in
push
jmp
lret
jno
in
mov
clc
sub
dec
push
sub
dec
nop
pop
push
mov
lret
out
mov
sti
xchg
jbe
push
push
jle
xor
and
pop
dec
movsb
mov
xchg
jbe
push
test
sub
cltd
and
push
lock
pop
out
inc
mov
pop
mov
frstor
jl
mov
or
enter
mov
pop
sub
js
push
mov
ds
ljmp
sub
ret
enter
dec
sbb
fcmovu
sahf
fucomi
add
cmp
je
test
pop
fwait
push
testb
dec
mov
scas
aaa
aad
pop
or
mov
rcrb
data16
pop
mov
pop
or
daa
sti
and
ret
pushf
fstl
dec
fadds
int3
movsb
lret
cmc
xchg
push
cmovg
cmc
push
shrl
xor
xchg
adc
xor
clc
xlat
or
data16
pushf
ret
lcall
sbb
pop
sub
adc
jb
add
bound
gs
dec
cmp
xchg
jnp
jo
movb
imul
jp
ds
leave
dec
xchg
pop
sub
sbb
dec
xlat
and
xor
mov
loopne
inc
cmpsl
inc
pop
dec
fmuls
cmp
mov
sub
jmp
sbb
or
jecxz
xor
stos
sbb
cmp
mov
addl
sub
insl
xchg
unpckhps
ljmp
pushf
dec
lds
adc
sar
nop
jge
xchg
shrl
cmp
fidivl
cwtl
and
inc
sahf
scas
pop
insl
fs
inc
repnz
sbb
sub
ret
cli
and
jno
es
push
ret
pop
push
std
mov
and
adcb
out
add
gs
or
mov
lock
test
inc
jmp
jecxz
bnd
rolb
inc
and
leave
aaa
lcall
pop
mov
test
popa
std
repnz
jecxz
and
xchg
cmpb
rcll
xor
inc
aam
pop
and
popf
ret
sub
sub
scas
out
enter
dec
daa
cwtl
lret
in
xor
push
sbb
enter
es
and
lock
test
insl
pop
int3
cmc
loope
mov
es
xor
incl
sti
fimull
pop
fstpl
inc
bound
mov
testl
pop
or
sub
mov
jp
cmp
pusha
mov
out
pop
imul
imul
mov
dec
jns
int
popf
mov
call
in
jl
repz
dec
dec
dec
into
test
dec
icebp
dec
cwtl
subb
adc
cmc
push
movsb
test
mov
push
mov
sbb
sahf
decb
mov
and
add
fidivl
add
xor
pop
pop
gs
xor
lret
xchg
cli
inc
jne
sub
or
mov
cmp
mov
lea
and
rcr
push
lahf
testl
ret
lret
mov
push
push
fs
and
dec
adc
sub
jecxz
fdivr
and
add
xchg
jecxz
test
int
fs
frstor
daa
fcmovne
cltd
frstpm(287
inc
mov
sbb
or
aam
jecxz
pop
jmp
sti
decl
pushf
pop
push
mov
fnstenv
inc
call
or
xchg
sub
jbe
push
jb
dec
adc
push
movsl
dec
addr16
xchg
inc
jnp
xor
sbbb
dec
inc
cli
popf
pop
fists
inc
ja
sbb
push
test
les
dec
jo
inc
mov
push
push
jl
sub
es
mov
push
sub
test
xorl
inc
sbb
jb
sbb
add
mov
fidivrl
jne
fstp
jmp
imull
lcall
xchg
add
push
in
in
sub
popa
repz
inc
xchg
xor
mov
aaa
inc
pushf
data16
enter
mov
imul
push
into
push
test
call
sbb
cmpsl
or
fcmovb
aas
bound
jno
in
mov
jg
or
xchg
cmpsb
das
mov
jg
xchg
fldenv
add
in
imul
xor
sbb
pop
lret
jne
shrl
cmp
lret
mov
mov
lret
jno
mov
cld
in
mov
mov
dec
jp
cmpsl
loop
xorb
ret
fnstcw
lods
pop
push
pop
inc
xchg
inc
xchg
jne
arpl
aam
lahf
xchg
addr16
jbe
fsubrl
mov
insl
jae
fwait
test
stc
lock
dec
insl
mull
jle
not
jl
hlt
mov
fidivrl
or
adcl
pop
pop
xor
ss
mov
enter
mov
subb
dec
lcall
pop
cltd
mov
dec
out
or
and
xor
cmp
cmpsb
lock
imul
notb
fsubs
adc
loope
push
leave
insl
mov
cmpsl
mov
cmp
mov
cmp
data16
lret
or
loopne
mov
mov
enter
adc
add
and
jge
xor
adc
orb
sbb
mov
xchg
insl
test
push
adc
fucomi
out
clc
xchg
fs
pop
loope
fistl
and
or
insl
nop
loop
cmp
jbe
mov
sbb
push
mov
call
mov
sub
xchg
pushf
inc
ret
je
jnp
int3
nop
pop
out
sub
jnp
adc
sbb
fists
bound
pusha
cmc
mov
jl
and
adc
lret
popf
call
pop
fcoml
and
mov
in
xchg
pop
arpl
push
int
xchg
aam
not
icebp
mov
jg
jge
mov
movsl
inc
cmp
push
jg
cld
pop
inc
cmp
ffreep
jle
and
in
inc
mov
mov
fsubr
xchg
imul
insl
or
movl
mov
mov
sub
jae
leave
dec
jge
movsl
adc
jae
push
fs
dec
sbb
sbb
lahf
stos
and
in
mov
out
pop
incb
pop
jo
mov
jp
xor
mov
push
jp
loop
lret
loopne
cltd
es
push
xchg
nop
andl
jb
call
fnstenv
cmp
nop
adc
adc
cmc
out
jl
insl
movl
stos
icebp
push
orb
and
popa
or
mov
lods
dec
js
inc
and
add
gs
cs
pop
or
jb
jl
addb
mov
pop
xor
arpl
xchg
dec
push
push
adc
rcll
pop
data16
mov
movsl
neg
incb
repz
loopne
jge
jae
pop
loopne
fadds
divl
xchg
fdivrp
imul
dec
jg
sub
xor
push
pop
jg
add
or
push
inc
mov
mov
fcoms
inc
mov
ret
fstpt
sbb
shll
jne
xchg
orl
mov
out
pop
sub
xchg
jle
mov
imul
cmp
or
xchg
inc
loop
outsb
inc
mov
lcall
cli
mov
repnz
or
dec
enter
sbb
mov
xor
xchg
bound
addr16
fistpll
inc
test
jp
std
or
cmp
sub
movsb
ja
sub
fstpt
mov
sub
sub
leave
cmpsl
inc
outsb
das
fwait
dec
jae
icebp
mov
in
fistps
push
xlat
sbb
add
cmpl
ficoms
cmp
test
mov
xchg
sub
aad
iret
mov
insl
pop
pop
pop
xchg
in
shrl
sahf
leave
and
int3
movsl
pop
cmpb
mov
dec
cwtl
movsl
bound
pop
jbe,pt
xchg
mov
jmp
push
stc
shll
mov
dec
lahf
dec
imul
sub
jmp
aas
out
sub
jbe
mov
call
jecxz
in
sahf
sbb
adc
push
mov
jge
dec
stos
or
out
push
loopne
xchg
cmp
outsl
cwtl
dec
sbb
and
scas
mov
pop
pop
cmc
lcall
cmp
xchg
fistpll
pop
xchg
push
pop
jmp
dec
or
pop
sub
inc
jo
sub
clc
or
xchg
test
add
cmp
xor
sti
je
js
and
cmp
or
loopne
mov
xchg
push
stos
popf
xchg
mov
pop
xchg
movsb
fstps
pop
inc
mov
sarl
pop
mov
pop
push
shlb
lea
add
sbb
fnstcw
and
adc
mov
js
ja
stos
ja
dec
or
fwait
xchg
fwait
aas
jecxz
jmp
dec
inc
sbb
cmpsl
aam
jo
jle
imul
pop
xchg
mov
and
lret
or
pushf
push
idivl
outsl
jmp
int3
push
sahf
cmp
xor
sbb
ds
sub
je
into
sti
jg
cmp
push
inc
xor
orb
in
fistpl
popa
roll
pop
lock
push
je
add
fstps
mov
sub
jecxz
push
ds
fimull
or
lods
testl
mov
and
cmp
push
daa
xchg
mov
shrl
xor
rcll
inc
aam
dec
cmpsb
fcmovu
je
or
popf
fisttpll
fmull
outsl
add
dec
fdiv
enter
subb
sti
fcoms
inc
int
dec
lahf
mov
rep
mov
out
notb
data16
pop
popa
faddl
cld
adc
dec
cwtl
and
adc
sbb
pop
jle
xor
or
cmpsl
jo
lahf
leave
xor
adc
fdivs
ss
mov
inc
xchg
imul
aaa
or
adc
in
fsubs
inc
cmp
clc
and
sbb
push
inc
push
scas
inc
and
mov
cmp
test
insb
pushf
popf
js
mov
mov
aam
inc
cmp
inc
jl
jp
out
mov
xchg
push
lods
cmp
ret
addr16
sahf
pop
jg
jecxz
shrb
ds
fnstenv
out
shrb
xlat
aaa
push
cli
jecxz
jae
sbb
push
arpl
pushf
sbb
or
lock
std
pop
jmp
pop
ljmp
sub
movsl
enter
nop
addr16
dec
add
xor
rolb
adc
jo
cmpsb
adc
leave
cmc
mov
das
mov
movl
jle
add
mov
jecxz
sub
sbb
mulb
insl
or
shlb
hlt
dec
es
cmpb
cltd
xor
cltd
dec
sti
mov
cmp
into
mov
push
ss
push
inc
pop
faddl
pop
inc
pop
lea
xor
scas
inc
insl
adc
pop
in
lcall
push
gs
pop
int3
add
data16
jge
ds
dec
or
or
push
xor
or
push
adc
push
dec
mov
lahf
jo
out
sub
add
aad
add
cld
aam
cmp
add
sbb
jl
mov
sbb
cmp
mov
insb
stos
pop
pop
xor
and
stos
mov
mov
call
sti
xchg
adcl
mov
addb
icebp
pop
cli
inc
xchg
xchg
std
ja
push
pop
sbb
stos
mov
pop
xchg
xchg
mov
mov
sub
fdivs
mov
mov
cmpsb
clc
test
mov
aas
dec
and
or
jbe
adc
repz
dec
js
xor
jae
call
push
cmc
pop
xchg
in
pop
xlat
scas
out
fdivr
scas
test
jne
stos
sbb
movsb
sbb
imul
imul
xchg
push
jl
xchg
and
stos
jae
mov
test
es
inc
adc
dec
and
mov
popl
and
dec
test
add
jnp
push
test
xchg
sub
stc
movsb
mov
cltd
dec
aaa
inc
pop
scas
jns
xchg
sarb
test
shll
insb
push
add
mov
adc
orb
inc
adc
clc
imul
lahf
sbb
mov
clc
mov
mov
sbb
or
push
call
or
xchg
inc
fidivrl
fiaddl
and
daa
mov
lahf
jmp
cld
lods
aam
negl
dec
mov
mov
mov
adc
sub
mov
stos
jp
test
and
push
shlb
out
add
pop
dec
pop
xor
shrb
sub
sbb
pop
notl
sub
rorl
mov
mov
aam
mov
jno
jne
test
pop
sub
adc
push
mov
loopne
fcmovb
push
or
sub
pop
jae
add
bound
aas
xor
and
pop
clc
enter
clc
pop
push
bswap
movsl
je
jg
fwait
int
imul
adcl
sahf
ret
lret
mov
jg
mov
cmp
xor
sub
outsl
shrb
xchg
mov
scas
mov
push
pop
addl
out
daa
cltd
push
mov
cmp
in
mov
stos
jl
pop
mov
std
ja
in
and
loop
push
push
mov
cwtl
ret
jecxz
add
les
sub
adc
jmp
or
ljmp
bound
aad
divps
and
cwtl
jge
dec
or
xor
out
cld
mov
call
imul
xchg
ss
inc
loopne
or
add
dec
pop
or
push
popf
xor
mov
sub
mov
sbb
cmc
xchg
xor
add
inc
cmp
jmp
subb
pop
xor
sub
nop
jge
iret
add
sub
bound
push
ja
jmp
fbld
inc
out
mov
rorl
xor
aad
je
mov
pop
into
repz
in
mov
pop
sub
mov
mov
push
iret
xchg
cmp
cmpsb
loop
cmpsb
xchg
add
mov
fmull
push
mov
test
add
and
sar
addb
jmp
cmp
int3
cli
mov
or
es
and
ja
inc
sub
mov
xchg
xor
movsl
push
pusha
test
pop
xchg
xchg
scas
jne
or
jae
cli
dec
popa
imul
xchg
mov
cwtl
cmpsb
dec
push
stos
or
add
xchg
push
jbe
in
xchg
jmp
jae
jecxz
lods
cmp
cld
cmp
sub
cmc
fwait
lret
jae
pop
mov
pop
sbb
mov
pop
adc
aas
push
lcall
cmp
mov
out
lods
dec
call
xchg
add
sbb
loopne
data16
cmp
movsl
mov
jno
out
sbb
mov
fld
dec
stos
stos
lea
fdivrs
lods
pusha
cmp
dec
pop
sarl
ljmp
rorl
dec
inc
cmp
scas
dec
es
or
mov
dec
xchg
sub
jl
roll
adc
scas
sub
scas
xchg
pop
and
cld
hlt
pop
mov
ljmp
adc
arpl
cmp
mov
scas
scas
addr16
mov
fdiv
cld
pop
jne
shll
inc
loopne
sbb
and
xor
xchg
fwait
mov
and
das
icebp
lahf
inc
dec
xor
and
inc
lret
in
leave
xchg
or
jb
fisubs
adc
or
cltd
adc
rcr
cwtl
inc
clc
pop
enter
pop
fisttps
add
rorb
cmpb
push
push
jnp
jns
out
add
pushf
out
dec
mov
mov
mov
jnp
in
mov
xor
sub
frstor
pop
or
ljmp
xchg
push
cltd
ret
jmp
sarl
dec
fs
inc
adc
js
push
push
sbb
int3
jg
mov
ds
mov
mov
jno
inc
jbe
dec
jnp
inc
mov
xchg
add
adc
or
mov
push
sti
mov
cmpsb
repz
mov
rcll
or
and
inc
sub
or
out
subb
scas
mov
mov
inc
push
mov
inc
pop
jl
repz
in
enter
mov
ja
cmp
cmp
and
ljmp
popa
lcall
push
stos
out
pop
sub
fisttpll
cwtl
subl
mov
dec
or
decb
mov
mov
jb
lods
lods
mov
xor
adc
in
jecxz
adc
jmp
push
pop
mov
testb
mov
hlt
sbb
push
in
lahf
mov
lahf
sub
mov
cmp
adc
js
test
movsl
adc
xchg
dec
dec
mov
cmp
aas
xadd
mov
adc
mov
loope
cmp
cld
pop
lea
or
dec
sub
cmp
data16
inc
jge
sub
and
cmp
rcll
xor
add
insb
leave
orl
in
subl
fstpl
lcall
push
in
mov
pusha
inc
sbbl
cmp
ret
jp
sub
scas
aaa
insb
mov
nop
mov
lods
xchg
andb
lahf
aas
out
jmp
inc
jae
les
popf
mov
sbb
fnsave
dec
lret
xor
dec
mov
mov
insl
and
jns
lods
pop
sub
bound
cld
inc
mov
imul
aad
xor
pop
or
pusha
dec
ret
lcall
arpl
fcmovb
pop
mov
xchg
ret
and
push
cltd
enter
scas
cmpsl
adc
mov
push
cmp
push
xchg
adc
xor
add
or
push
fcompl
ds
out
xchg
stc
xor
mov
loope
add
ror
jp
sub
mov
enter
sbb
std
nop
dec
jne
enter
insl
mov
std
stos
lcall
sbb
cmp
xchg
daa
dec
xchg
mov
dec
adc
add
scas
inc
insb
inc
aas
xor
mov
gs
insb
xchg
orb
ja
repz
inc
mov
jecxz
je
imul
cwtl
imul
lcall
pop
and
xor
cmpsl
gs
add
lcall
mov
enter
jecxz
mov
adc
stos
sub
divb
lods
push
int
jg
jne
cwtl
cmp
cltd
into
cmp
orl
cmp
adc
jb
adc
shlb
mov
movsb
mov
or
cli
outsb
or
loop
cmp
es
jg
fadds
jae
dec
lret
out
imul
test
push
dec
xchg
dec
pop
addb
out
pop
push
repz
push
or
dec
and
sbb
sahf
jecxz
jge
mov
sub
popa
cmpsb
outsl
jae
ljmp
fwait
popl
jg
fisubrs
in
push
testl
inc
inc
cmpsb
jge
pop
dec
dec
add
mov
mov
sbb
scas
xor
jae
test
pushf
push
or
push
sub
out
aaa
scas
adc
cmp
sub
pop
push
insl
jb
in
sbb
call
cmpsb
icebp
cltd
and
push
and
ja
inc
mov
and
roll
out
sbb
int3
inc
test
and
add
insb
inc
fistpl
cmp
and
leave
cmpsl
pop
repz
clc
loope
dec
sbb
cwtl
leave
leave
mov
push
loopne
in
nop
mov
adc
xchg
xor
jne
push
adc
cs
outsb
inc
lret
nop
mov
ljmp
cli
cwtl
jmp
lds
push
sti
jo
mov
cmp
sbb
jmp
icebp
je
mov
jnp
mov
jge
and
dec
push
xor
rcl
cwtl
push
outsb
movb
xchg
lds
jp
push
pop
xor
sahf
fcmovu
std
pop
outsl
lea
xchg
mov
out
stos
mov
jle
repz
xor
or
aas
cmp
lods
mov
pop
mov
pusha
mov
fidivs
xchg
xchg
xor
sub
ret
mov
aam
lds
je
push
gs
push
xchg
inc
sub
mov
or
xor
ja
call
add
ds
out
aas
add
cmp
aaa
cmp
push
aad
stos
push
xchg
xor
ss
mov
push
sub
aaa
dec
stos
xchg
fisubl
cwtl
fsub
sbb
adc
scas
mov
out
mov
cltd
pop
inc
sbb
loope
in
addr16
fnstenv
dec
mov
outsb
and
or
icebp
mov
or
rclb
inc
je
pop
andl
jbe
cmp
mov
movsb
fcmovb
fsubrl
push
mov
mov
push
out
mov
dec
imul
lcall
testb
cmp
stos
adc
lock
xor
sub
mov
shrl
inc
or
std
js
lods
mov
daa
out
sarl
jg
pop
test
test
dec
pop
jns
test
add
iret
adc
xchg
lret
sbb
cmp
fwait
cli
lock
add
pop
jmp
les
aad
dec
outsl
xchg
jb
push
das
ljmp
inc
inc
mov
sbb
jl
pop
in
mov
xchg
leave
jg
popa
mov
mov
addr16
scas
lcall
lock
and
ficompl
sarb
xor
lret
and
jle
lcall
aam
nopl
cmp
int3
lods
pop
ss
mov
push
push
insb
mov
sub
mov
add
mov
mov
lods
lds
mov
sbb
mov
je
mov
push
sar
aas
cwtl
jmp
shrl
sbb
mov
mov
jmp
test
arpl
insl
test
inc
sub
pop
stc
push
xor
outsl
push
jmp
adc
rcll
adc
insb
cltd
xlat
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
push
adc
push
movzbl
sbb
push
movl
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
lea
mov
movl
lea
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
mov
sbb
xor
add
mov
xor
or
mov
and
mov
mov
movzbl
adc
mov
add
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
mov
dec
mov
jmp
mov
movzwl
xor
mov
xor
andl
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
mov
adc
mov
or
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
push
movl
jmp
mov
mov
movl
cmp
jne
movl
cmp
movl
jne
push
push
jmp
mov
mov
cmp
jne
movl
cmp
jne
push
push
jmp
mov
movl
mov
cmp
movl
jne
cmp
jne
movl
push
movl
push
movl
jmp
mov
mov
mov
mov
mov
movl
cmp
movl
jne
cmp
movl
jne
sbbl
mov
or
xor
sbb
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
sub
orl
push
xorl
push
push
orl
lea
push
subl
push
call
movl
cmp
movl
je
subl
push
adcl
push
adcl
call
movl
jmp
andl
mov
addl
push
lea
push
push
push
movl
push
addl
call
imul
cmp
movl
je
xor
movl
jmp
addl
lea
orl
push
addl
push
xorl
call
test
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
push
call
cmpl
jb
mov
mov
mov
sub
add
movl
mov
xor
or
sub
and
lea
or
mov
adcl
lea
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
sub
add
mov
mov
mov
adc
mov
xor
mov
adc
xor
mov
sbb
mov
mov
add
movl
mov
mov
cmp
jne
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
mov
sbbl
xor
add
subl
mov
sbb
mov
xor
addl
add
orl
mov
mov
xor
adcl
add
sbbl
mov
sub
mov
adcl
mov
adcl
mov
orl
mov
not
mov
sbbl
mov
mov
sbbl
mov
mov
subl
mov
movl
andl
mov
addl
xor
add
jmp
orl
lea
push
push
call
movl
cmp
movl
jne
xorl
push
subl
lea
push
push
push
addl
push
decl
call
imul
cmp
jne
sbbl
lea
push
orl
push
addl
call
xorl
test
movl
jne
mov
mov
orl
xor
andl
lea
push
sub
mov
xor
lea
addl
push
adc
mov
pushl
andl
call
mov
neg
mov
xor
lea
adc
mov
add
mov
andl
xor
xor
notl
add
mov
and
mov
xor
movl
lea
movl
mov
cmp
jbe
xor
mov
adc
mov
mov
adc
mov
inc
mov
mov
and
mov
sub
sbbl
xor
xorl
mov
subl
lea
mov
lea
sbbl
mov
lea
push
xorl
push
movl
call
cmp
jne
push
lea
subl
push
orl
push
push
sbbl
push
xorl
call
imul
movl
cmp
movl
jne
lea
push
push
andl
call
sbbl
test
movl
jne
subl
lea
sbbl
push
push
adcl
call
movl
cmp
jne
adcl
push
lea
orl
push
push
decl
push
push
subl
call
imul
movl
cmp
movl
jne
lea
andl
push
addl
push
andl
call
movl
test
jne
andl
lea
push
addl
push
call
movl
cmp
jne
sbbl
push
subl
lea
push
push
push
push
call
andl
imul
cmp
movl
jne
lea
push
negl
push
call
sbbl
test
movl
jne
orl
lea
push
push
sbbl
call
cmp
movl
jne
push
orl
lea
push
push
xorl
push
subl
push
addl
call
addl
imul
movl
cmp
movl
jne
adcl
lea
orl
push
push
call
andl
test
movl
jne
decl
lea
decl
push
orl
push
addl
call
cmp
movl
jne
push
addl
lea
xorl
push
push
subl
push
push
orl
call
andl
imul
movl
cmp
jne
addl
lea
subl
push
sbbl
push
adcl
call
orl
test
jne
andl
lea
xorl
push
push
call
movl
cmp
movl
jne
subl
push
adcl
lea
andl
push
push
subl
push
movl
push
call
incl
imul
cmp
movl
jne
orl
lea
movl
push
adcl
push
andl
call
sbbl
test
movl
jne
subl
lea
addl
push
andl
push
sbbl
call
movl
cmp
movl
jne
orl
push
lea
orl
push
push
push
push
addl
call
xorl
imul
movl
cmp
jne
lea
xorl
push
push
call
test
jne
addl
lea
push
adcl
push
orl
call
movl
cmp
movl
jne
addl
push
lea
xorl
push
push
addl
push
push
xorl
call
xorl
imul
movl
cmp
movl
jne
orl
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
or
mov
mov
not
push
and
mov
xor
adc
mov
andl
push
adc
mov
xorl
add
movl
cmp
movl
je
xor
mov
sbbl
mov
subl
xor
xor
xorl
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
movl
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movsbl
mov
sub
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
push
andl
xor
or
inc
mov
cmpl
jl
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
orl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
jge
jnp
mov
mov
jmp
pop
sub
xchg
xchg
addb
pop
lds
jno
push
mov
jo
les
loopne
mov
jns
dec
pusha
stos
adc
ds
pop
fnstenv
outsb
test
fs
add
cltd
fbstp
adc
xor
outsb
sbb
daa
jns
sub
mov
add
fstpt
cwtl
mov
xchg
mov
lds
ja
adc
adcb
or
dec
mov
jbe
dec
cmp
lcall
cmpl
into
add
mov
cmp
divl
fwait
sbb
es
aam
add
mov
sub
jbe
movsb
jg
adc
mov
mov
and
mov
push
rol
ljmp
gs
pop
fwait
rcl
cli
popa
ljmp
data16
das
das
jns
inc
fildl
mov
cmp
pop
xchg
pop
xor
insb
fsubl
add
setnp
mov
sbb
movsb
dec
dec
or
loope
out
ds
fcomps
aam
arpl
pop
test
cmc
xor
sbb
or
mov
ljmp
in
mov
pop
add
jbe
mov
mov
dec
cmp
lahf
cmp
jae
ficoms
sub
add
sub
fninit
repnz
stos
test
stos
idiv
movsb
xorb
fwait
loope
out
negl
lds
xor
mov
and
out
push
sub
addl
mov
push
pop
lea
or
cmp
lock
or
inc
in
loope
jbe
add
out
dec
rolb
xor
ja
cmc
mov
push
sbb
mov
fucomip
lahf
jbe
mov
sub
dec
sbb
cwtl
std
inc
jnp
andl
sbb
add
arpl
mov
bound
leave
ret
sbb
sbb
sarl
inc
jb
adc
xor
fldcw
lcall
xor
sub
shrb
ret
add
in
push
mov
loop
xor
add
mov
sahf
insb
adc
rcrb
xor
loope
sub
imul
lods
gs
and
pop
stos
iret
leave
inc
inc
fisubrl
xor
xchg
test
in
int
mov
hlt
in
mov
cltd
scas
mov
es
inc
sbb
cmp
mov
nop
inc
pop
pop
and
fs
vaddsubps
lret
mov
mov
or
fiadds
mov
pop
push
mov
outsb
push
icebp
xor
sti
pushf
daa
gs
cmovbe
mov
pop
xchg
mov
imull
shrb
loope
or
cwtl
adc
gs
push
mov
pop
and
aad
pop
cltd
xchg
js
jl
dec
rorl
stc
stos
jae
mov
cld
outsb
mov
or
dec
test
ud1
xor
into
mov
jp
out
mov
inc
sbb
jp
cmpsl
fisttpl
inc
aas
mov
and
add
mov
iret
and
jecxz
dec
or
ljmp
sti
jg
movswl
iret
stos
cld
ja
leave
sbb
nop
mov
stc
loope
add
push
inc
test
jnp
test
pushf
jmp
xor
cmp
fadds
insl
lret
sbb
imul
xchg
lods
add
or
jmp
mov
jb
loope
mov
mov
xor
fcmovb
stos
xor
hlt
cld
pop
test
inc
dec
sbb
or
insb
dec
popa
mov
cwtl
dec
inc
out
rcl
loope
std
pop
cmpsl
jle
mov
sahf
sbb
in
ret
add
cld
mov
scas
lret
daa
fstps
push
sub
jmp
xchg
dec
loope
jae
jo
mov
mov
mov
daa
or
jo
mov
decl
aaa
xor
mov
push
insl
mov
enter
pop
push
push
dec
call
out
aaa
mov
xchg
adc
shlb
into
jno
cmp
adc
jle
imul
xchg
jge
and
test
subb
push
out
cmc
lods
leave
stos
jmp
jb
xchg
loopne
push
ss
jl
lcall
int
pusha
xor
jo
aam
jns
lods
and
jecxz
cmpsb
cmp
stos
mov
push
mov
mov
and
inc
push
adc
fdivrs
fwait
pop
jge
mov
xchg
lea
repz
xor
mov
mov
inc
mov
and
test
jo
iret
aas
mov
in
repz
data16
and
push
xchg
adcb
inc
jbe
adcb
cmp
cld
adc
xchg
into
jl
and
mov
pop
mov
out
mov
incb
mov
insb
fsubrl
push
addr16
xor
sub
aas
adc
cmp
sti
sbb
push
mov
ljmp
int3
jae
dec
cmp
gs
icebp
add
aam
in
stos
bound
js
cmp
lea
test
pop
out
or
dec
jge
adc
mov
popf
enter
pop
and
dec
inc
cld
jno
inc
inc
mov
lock
call
cwtl
ja
jle
pushf
push
sbb
mov
and
cli
jns
lret
pop
movsb
fldt
pop
add
leave
bound
loope
adc
fmuls
pop
pop
mov
cs
dec
sti
push
mov
mov
push
and
mov
xor
mov
fbstp
add
inc
pop
fiaddl
push
aas
sub
dec
push
js
mov
stos
imul
mov
inc
xlat
cld
call
pop
test
addr16
and
outsb
mull
lea
nop
or
scas
mov
push
cmp
mov
kunpckwd
cmp
out
outsb
adc
mulb
push
rorl
jmp
lahf
mov
mov
push
cld
mov
test
mul
dec
pop
xor
sbb
pop
mov
popf
sbb
push
in
push
adc
push
xchg
cmpsb
and
mov
push
xorb
cld
addb
pushf
jno
mov
sub
mov
push
loopne
xor
stos
mov
cmpl
mov
pop
xchg
fldt
lcall
insb
jmp
stos
gs
scas
dec
xchg
test
adc
inc
in
shr
stos
add
sbb
mov
push
mov
xchg
cmpsl
push
sti
scas
cmp
xchg
movsl
shl
dec
jo
lcall
seto
sti
sub
jle
out
mov
inc
test
mov
js
lods
cwtl
call
xor
pop
jno
call
leave
or
js
lret
das
cmp
jb
mov
jl
fdivr
jae
xchg
or
pusha
xchg
jl
xor
or
shrb
stos
xor
lods
pop
or
jno
popa
daa
lock
jl
cmpsb
pop
ds
lahf
jns
mov
mov
pop
dec
dec
jb
xor
scas
leave
icebp
jo
adc
mov
cmc
mov
sysexit
mov
or
push
mov
and
sub
sub
xchg
ret
mov
sti
jne
or
cmp
shrb
cmp
and
jb
out
mov
cmpsb
pop
xchg
lods
xor
cmp
pusha
int3
test
lods
mov
add
cmp
daa
in
lods
mov
and
mov
push
add
jl
clc
addr16
fsubrl
or
arpl
xchg
add
lret
jle
inc
ss
xchg
dec
aam
sub
adc
pop
inc
adc
adc
or
insl
jle
xchg
ds
in
fldcw
sbb
jle
mov
and
imul
idivl
jg
enter
xor
fucomp
popf
cmp
cld
xchg
sbb
jne
fsubrp
mov
fisubrl
dec
divl
push
pop
jge
or
outsl
add
gs
push
dec
stos
cmp
imul
stos
sti
lods
in
adc
cmp
loopne
mov
leave
cmp
xchg
bnd
cmp
stos
ja
fisubrl
loop
out
fidivrs
cmp
push
sub
or
jp
pop
and
mov
cld
xchg
sbb
jl
add
mov
test
add
mov
ffree
je
pop
xor
mov
aas
and
ret
and
scas
mov
push
loope
add
repz
jmp
add
into
or
roll
push
inc
jae
std
fsts
imulb
daa
mov
stos
clc
jno
jmp
test
sbb
inc
push
adc
mov
xor
aas
dec
loope
movsl
shlb
push
repnz
sub
inc
or
mov
mov
sar
cmpsb
xor
inc
adc
cmp
cs
xchg
jg
xchg
mov
jmp
arpl
xchg
mov
sub
adc
mov
scas
pop
cmp
adc
add
adc
mov
mov
mov
ret
aaa
cmpsb
push
sub
enter
adc
negb
cmp
push
add
sahf
movsl
xchg
mov
in
sub
fistpll
or
or
aas
daa
or
cmpxchg
sub
xchg
dec
ror
sub
add
push
lahf
push
mov
mov
js
jae
rorl
cld
jle
mov
lahf
shlb
jnp
clc
cmp
inc
ss
int
cwtl
cmp
or
dec
iret
loopne
dec
push
outsb
test
into
pop
cmp
fildll
mov
and
addr16
lahf
test
xor
pop
lds
stos
cwtl
adc
adc
add
aas
enter
mov
loop
fxch
adc
leave
or
rolb
repz
js
jne
lock
imul
add
lods
mov
jno
push
mov
xor
xchg
adc
xor
in
xchg
sbb
shr
pop
pusha
andl
imul
add
popa
daa
mov
xchg
inc
and
xchg
lock
stos
lea
inc
dec
xor
xor
insb
test
lret
mov
push
bound
hlt
xchg
adc
daa
mov
aaa
dec
jmp
ds
pushf
repz
jbe
mov
das
fwait
pusha
mov
sahf
imul
sub
adc
insl
bound
mov
and
push
aam
test
and
sbb
xchg
push
out
cwtl
xlat
in
subl
push
fldl
and
adc
movsb
mov
scas
mov
mov
scas
inc
repz
into
push
sub
or
cld
fildll
test
jo
data16
scas
sub
fwait
aaa
jns
pop
and
lret
cmp
daa
loop
mov
xchg
or
testl
cmp
jo
adc
cmp
ret
out
sbb
in
jp
popa
inc
mov
insb
pop
inc
cmp
ds
fdivl
mov
addl
mov
push
jnp
shld
push
mov
out
repz
cmp
jmp
insl
pop
dec
and
pop
push
in
add
dec
sbb
dec
cwtl
push
inc
std
jb
mov
push
pusha
or
js
push
mov
mov
lret
jae
pop
push
shr
sub
fs
popf
sbb
lahf
push
mov
mulps
cmpxchg
insb
mov
lods
orb
movsb
rorb
push
push
lods
sub
xor
in
sbb
jae
inc
add
in
pop
repnz
mov
mov
push
nop
sub
inc
sub
mov
aas
xchg
nop
fldenv
in
jecxz
mov
aas
sbb
fscale
dec
fimuls
push
pop
hlt
sub
push
into
jecxz
mov
cmp
mov
test
cld
lock
mov
add
cmpsb
mov
add
pusha
sbb
xlat
or
out
fwait
pop
and
pop
inc
fsub
mov
ucomiss
push
inc
cmp
jno
mov
inc
and
gs
or
loope
mov
stos
push
mov
aaa
lock
mov
push
jle
cmc
push
mov
icebp
out
rclb
pop
sub
jbe
enter
mov
call
lds
add
test
inc
scas
leave
inc
fiaddl
mov
mov
sbb
xor
jne
ds
sub
mov
mov
push
fsubs
mov
ret
push
movsb
inc
jnp
nop
jle
inc
cmp
aaa
dec
mov
loop
add
stc
sti
das
push
gs
sub
leave
bound
mov
in
repz
lods
popa
fstpt
lock
xor
adc
push
or
and
adc
push
cmpsl
push
or
or
push
loopne
fwait
jb
and
mov
or
ss
gs
daa
adc
bound
dec
xchg
hlt
adcb
jmp
lock
fdivs
sbb
lcall
dec
mov
and
lcall
rcl
inc
mov
dec
sbb
jle
insb
or
jge
nop
and
subps
sbb
sbb
mov
mov
call
int
lea
pop
sti
mov
or
hlt
xchg
cld
or
dec
mov
pop
mov
sti
and
jnp
out
mov
jne
adc
fcmovu
iret
mov
pusha
fwait
lret
mov
mov
cmp
pop
add
inc
lock
mov
fnstsw
sbb
or
jge
popl
or
mov
mov
movsl
push
cmp
xchg
sbbl
xor
xor
cltd
in
orl
and
mov
cmp
in
xor
mov
stos
inc
inc
mov
pop
jp
mov
fdivr
push
jnp
mov
pop
jmp
cmp
daa
andl
adcb
cmpsl
inc
xchg
inc
pop
into
xor
out
dec
mov
lahf
push
fldenv
sbb
jno
out
rclb
adc
jne
aam
mov
aam
push
adc
fldcw
pop
and
ja
stc
dec
xchg
movb
xor
and
sub
fsubrl
stc
jge
cmp
dec
andl
xlat
mov
mov
mov
faddl
push
adc
push
in
in
sub
mov
sbb
dec
loop
arpl
cli
fsubrs
and
xchg
cmp
xchg
fadds
jl
xor
pop
inc
adc
inc
xor
sbb
jo
sub
inc
dec
ljmp
dec
sub
dec
pusha
dec
sub
ret
pop
push
das
xchg
cmpsl
int3
mov
mov
out
sbb
inc
daa
fwait
lret
lods
add
cwtl
cltd
inc
neg
push
in
aas
pop
lcall
mov
sbbb
inc
adc
aam
or
testl
mov
inc
add
mov
push
in
xchg
lret
and
lahf
jb
fwait
cltd
scas
xchg
xor
jg
add
outsw
ss
jmp
sahf
nop
push
popa
dec
into
sbb
fs
fs
adc
inc
mov
mov
push
ret
pop
jnp
inc
scas
rol
ds
fwait
mov
jb
or
xchg
sub
aas
or
hlt
jg
cmp
in
insl
ret
aaa
fidivs
push
aaa
ss
lahf
or
push
pop
adc
pop
sbb
pusha
jne
movsl
lock
xor
inc
mov
mov
fsubrp
leave
adc
popa
les
cld
dec
jne
inc
xor
test
lcall
cmp
icebp
mov
mov
das
mov
call
out
fs
dec
pushf
subl
fimuls
ficoml
pop
outsb
mov
jno
loope
or
push
inc
mov
add
mov
ljmp
add
mov
jne
lods
lds
rclb
rclb
xor
filds
or
imul
cmp
lahf
adc
xchg
cld
in
mov
inc
pop
scas
dec
sub
jns
jae
cs
mov
aad
xchg
jb
jl
sbb
inc
jge
std
mov
jne
add
les
dec
push
movsb
xchg
aaa
pop
test
jae
mov
adc
add
mov
push
inc
cmp
add
scas
adc
adc
push
out
pop
xor
les
nop
ljmp
cltd
inc
mov
shll
adcl
ret
test
sub
inc
add
movsb
rcll
sub
imul
and
inc
pusha
push
aam
jbe
push
stos
dec
jmp
scas
jmp
push
cmp
add
cmp
inc
test
fstpt
mov
lods
cmp
popf
mov
sub
imul
cli
push
loopne
xchg
sbb
sbb
mov
stos
sub
fisubrl
rolw
fcompl
pusha
scas
scas
out
jecxz
mov
inc
jg
lcall
push
mov
sub
idivb
pusha
aas
jp
sbb
jae
fs
cmp
pop
test
das
int3
test
fnstsw
repnz
lahf
cmpsl
stos
add
movsb
ljmp
stos
fucomi
aas
in
push
mov
enter
mov
out
sarl
cs
xor
adc
inc
pop
cli
rol
repz
jmp
ret
xor
inc
xorb
sub
mov
sub
push
pop
cmp
jbe
icebp
mov
iret
sbb
add
pop
mov
and
sbb
cmc
sbb
xlat
jne
scas
sub
cmpl
mov
mov
ja
mov
push
inc
mov
pop
push
sbb
xor
xchg
ret
imul
mov
mov
testl
push
sbb
xchg
stc
push
imul
mov
sbb
sbb
fcmovnb
xchg
mov
hlt
pop
xchg
mov
daa
les
dec
fists
dec
dec
movsl
jge
jle
les
fs
es
cwtl
pop
fisttpll
or
rorl
cmp
add
sbb
pop
push
frstor
das
es
fs
cmc
push
push
scas
popf
mov
pop
fdivrl
pop
mov
inc
popf
cmp
je
xor
pop
xor
sbb
pop
pop
dec
loop,pn
push
jne
stc
jmp
enter
ret
mov
popa
scas
mov
fs
movsl
or
cmp
dec
mov
xchg
mov
or
cli
and
mov
hlt
cwtl
dec
mov
out
fisttpl
lcall
push
pop
adc
es
fucomp
sbb
rorb
sub
insb
inc
icebp
mov
not
lods
jb
push
xchg
pop
add
lock
lods
pop
cwtl
and
aaa
leave
xchg
dec
outsl
pop
int
cli
cmp
js
mov
ret
aad
in
test
sbb
data16
xor
imul
repnz
in
mov
adc
lods
and
push
sub
mov
xchg
dec
insl
mov
sbb
mov
or
clc
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
int3
cmp
dec
add
add
add
add
add
add
pop
add
rorb
add
add
push
push
inc
push
push
enter
lods
pop
incb
push
pop
lds
add
add
pop
push
jns
and
and
outsb
pop
inc
imul
outsb
jae
fs
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
cmp
sbb
add
jmp
jmp
ja
mov
pop
test
mov
imul
sbb
test
scas
popf
or
mov
fwait
les
sets
mov
popf
fwait
mov
stos
mov
mov
ja
mov
mov
sbb
test
mov
mov
xchg
test
push
and
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
