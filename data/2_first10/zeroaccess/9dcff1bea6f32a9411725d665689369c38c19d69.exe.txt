push
mov
sub
orl
push
adcl
push
decl
xor
notl
inc
push
push
call
test
movl
je
lea
notl
push
adcl
call
movl
jmp
subl
push
mov
push
subl
push
subl
call
sbbl
test
movl
je
lea
andl
push
incl
call
jmp
xorl
push
mov
addl
push
adcl
push
push
andl
call
test
movl
je
sbbl
lea
xorl
push
orl
call
movl
jmp
push
sbbl
push
sbbl
call
decl
test
jne
push
push
call
adcl
test
movl
jne
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
push
call
xorl
test
movl
jne
sbbl
push
push
sbbl
push
sbbl
call
adcl
test
movl
jne
subl
push
addl
push
call
test
movl
jne
orl
push
push
xorl
call
test
movl
jne
push
orl
push
sbbl
call
test
movl
jne
orl
push
push
subl
push
xorl
call
test
jne
subl
push
adcl
push
xorl
push
orl
call
subl
test
movl
jne
push
push
adcl
call
test
movl
jne
push
adcl
push
subl
call
adcl
test
jne
orl
push
subl
push
call
xorl
test
movl
jne
push
push
sbbl
push
call
sbbl
test
movl
jne
push
push
push
call
sbbl
test
movl
jne
adcl
push
push
sbbl
call
test
movl
jne
movl
push
orl
push
call
xorl
test
movl
jne
push
push
subl
call
subl
test
movl
jne
xorl
push
andl
push
push
sbbl
call
test
movl
jne
xorl
push
andl
push
orl
push
addl
call
xorl
test
movl
jne
movl
push
andl
push
call
test
movl
jne
sbbl
push
adcl
push
movl
call
xorl
test
jne
orl
push
orl
push
call
test
movl
jne
push
subl
push
adcl
push
addl
call
addl
test
movl
jne
addl
push
push
push
call
test
jne
subl
push
xorl
push
subl
call
notl
test
movl
jne
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
call
test
jne
orl
push
push
andl
push
call
subl
test
movl
jne
push
andl
push
push
call
subl
test
jne
push
push
call
orl
test
je
addl
xor
movl
jmp
subl
movl
sub
mov
adc
mov
sub
mov
xor
or
adc
mov
mov
sbb
mov
movl
add
lea
xor
mov
lea
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
adc
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
xorl
mov
or
mov
xor
mov
add
mov
movl
mov
cmp
movl
jne
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
jmp
and
mov
sbb
mov
inc
xor
movzwl
or
add
sub
mov
add
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
not
add
xor
mov
xorl
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
mov
mov
mov
or
mov
mov
mov
add
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
xor
add
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
xor
movl
mov
xor
orl
add
movl
jmp
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
xor
lea
push
mov
orl
xor
addl
lea
orl
push
adc
mov
pushl
sbbl
call
xor
mov
mov
xor
lea
mov
not
mov
sbbl
xor
xor
subl
add
mov
xor
movl
lea
mov
cmp
movl
jbe
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbb
mov
dec
mov
movl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
add
mov
andl
sub
xorl
xor
mov
movzbl
mov
cmp
movl
jne
lea
mov
orl
lea
addl
mov
mov
test
movl
je
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
addl
mov
mov
mov
movzbl
and
mov
notl
mov
cltd
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
add
mov
sbb
add
adc
mov
adc
andl
add
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
pushl
pushl
call
mov
dec
mov
jmp
xor
add
and
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
subl
inc
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
movl
mov
xor
push
adc
mov
sbbl
xor
and
mov
push
movl
mov
subl
add
cmp
movl
je
mov
mov
sbb
mov
xor
xor
xorl
add
xorl
add
adc
notl
xor
addl
mov
inc
push
add
xor
xor
mov
add
adc
movl
xor
xor
movl
cmp
movl
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
add
mov
movsbl
add
mov
sbbl
sub
mov
xorl
xor
movl
cmp
movl
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
adcl
push
push
lea
push
addl
lea
push
xorl
call
subl
push
push
sbbl
push
subl
call
xor
movl
movl
mov
mov
xor
mov
adc
mov
add
decl
mov
mov
adcl
test
je
mov
mov
mov
xor
xor
and
mov
mov
xor
adc
add
mov
sbb
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
xor
or
dec
mov
jmp
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
add
sub
mov
mov
xor
add
dec
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
push
call
xor
xor
dec
mov
jmp
andl
xor
xor
inc
mov
cmpl
jne
call
cmpl
jb
and
mov
xor
adcl
add
xorl
mov
xorl
sub
lea
adcl
xor
xor
cmp
movl
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
mov
and
mov
mov
xor
movl
add
cmp
movl
jne
pushl
negl
call
movzbl
xor
mov
sbb
mov
mov
sbbl
xor
add
movl
jmp
dec
je
dec
stos
cmp
adc
jp
jp
xor
jp
sub
cmp
popa
ss
push
imul
inc
imul
jl
push
iret
pop
dec
cmp
cli
xchg
dec
jg
mov
sub
data16
push
jg
jmp
xchg
fimuls
mov
imull
add
push
cli
es
or
imul
pop
add
jo
les
sbb
je
arpl
xchg
pop
mov
repz
cmp
or
sub
xor
push
jecxz
mov
test
inc
push
dec
or
repz
faddl
push
stc
push
push
mov
inc
adc
and
cwtl
jp
cmp
mov
adc
sbb
mov
cmpsl
fs
xor
jmp
cmp
jo
xabort
inc
testl
push
sbbl
jae
fstpl
stc
pop
in
incb
fcompl
enter
and
push
add
mov
mov
adc
cmpsb
repnz
or
xchg
adc
mov
movsb
and
sbb
dec
and
inc
cmp
in
mov
push
shlb
xchg
jne
add
xor
jmp
cltd
jmp
dec
test
fistl
out
daa
lods
jo
adc
jne
xchg
scas
jb
cmpsl
imul
jbe
jmp
int
adc
stos
in
test
fildll
gs
lods
pop
dec
or
lock
dec
jb
js
sti
fnop
sbb
test
cs
subb
sub
test
inc
pop
ret
xchg
ret
xchg
loop
mov
roll
mov
lods
cmpsb
ficoml
dec
stos
jns
lea
lret
pop
push
xor
adcl
xor
xor
lahf
shl
mov
ljmp
mov
in
imul
shlb
dec
pop
sahf
sub
icebp
jnp
cmp
cs
or
into
cmp
xlat
pop
imul
inc
dec
or
cmp
inc
xchg
xlat
aaa
adc
xor
ret
out
jge
sti
adc
movsl
jo
sbb
dec
sub
and
xchg
rorl
enter
call
int
pop
dec
test
sbb
mov
stos
xlat
jae
minps
jns
hlt
sbb
scas
filds
lret
jmp
mov
push
sbb
std
push
sub
aaa
jne
cmpsb
test
rcll
call
rorb
push
and
cmp
rorb
insl
mov
xor
push
push
aam
add
or
nop
sub
lret
jnp
inc
mov
xchg
mov
xchg
fcomi
test
lcall
popf
push
inc
lock
cmpsl
dec
pop
mov
ss
sub
jecxz
ljmp
out
pop
mov
pusha
rorl
pop
sub
loopne
xchg
mov
xor
testl
into
dec
das
bound
fs
daa
sbb
xor
push
inc
cmpsb
adc
push
ret
rcrl
or
ret
ss
mov
and
pop
insb
dec
int
fcoms
xchg
jnp
cli
mov
inc
xor
xchg
and
stos
inc
mov
mov
jbe
fwait
push
test
xor
and
and
sbb
out
popa
xor
or
mov
aas
xchg
adc
xchg
adc
negb
scas
jle
stc
lret
cli
adc
mov
and
adc
orl
insl
sub
cmp
dec
scas
in
dec
test
xor
push
lds
inc
fisubrl
int
bound
mov
mov
jmp
push
pop
pop
fsub
or
add
xor
inc
adc
sahf
daa
pop
lds
push
fwait
push
bound
lgs
inc
test
xor
jl
fdiv
movsb
dec
enter
mov
inc
inc
lock
sub
mov
cld
push
inc
insl
sub
adc
push
xchg
cmp
xchg
aas
mov
comiss
sbb
mov
pop
xor
stos
sbb
pop
loope,pn
sub
push
push
imul
or
adc
lret
and
test
sub
stos
jbe
jne
ds
stos
add
shll
cltd
aad
adc
bound
xchg
andb
cmp
sbb
sbb
push
pop
cs
pop
mov
sahf
push
fisttpll
cmp
pop
fnstcw
aam
daa
mov
sub
mov
out
mov
mov
iret
push
push
int3
sahf
push
mov
mov
add
test
jg
test
aaa
mov
test
lock
jmp
jo
sub
push
fistl
lds
sbb
mov
cmp
mov
jge
dec
jl
outsb
repnz
sbb
pushl
ds
cmp
mov
in
cmpsl
push
popf
bound
addr16
int
daa
ror
lahf
popf
cmpsb
push
lcall
lods
cltd
aam
or
push
mov
jp
jle
inc
pop
add
xchg
fldenv
enter
jno
mov
aaa
ds
adc
xor
cs
pop
adc
addb
xchg
mov
test
scas
or
pop
out
popf
mov
daa
hlt
mov
mov
cmpb
call
mov
cmpsb
jl
cli
lea
mov
ss
cwtl
xor
rcrl
push
mov
cmp
push
mov
sub
call
cmp
and
push
adc
pop
xlat
xchg
add
push
jb
mov
or
cmp
mov
push
push
push
mov
cmpsl
xchg
pop
pop
cmp
imul
dec
mov
dec
test
pop
mov
dec
aas
or
jnp
sbb
cmp
cmpsl
cli
jp
mov
sub
mov
cmp
jns
pop
xchg
pop
gs
sahf
mov
push
inc
and
xchg
dec
pop
dec
popa
lahf
mov
push
jecxz
roll
in
icebp
incl
leave
int
pop
cmp
stc
adc
sub
int3
mov
mov
loop
add
adc
or
pop
out
lods
add
enter
cmpsb
xlat
into
lahf
movsb
mov
cmpsl
sub
imul
or
aaa
xchg
sub
mov
xchg
mov
rcl
and
add
pop
dec
test
push
pop
in
jge
xchg
xor
cs
cmp
rcpps
cmp
sub
xor
sbb
sub
adc
or
scas
or
jge
xchg
cltd
pop
xor
inc
insl
dec
sbb
icebp
ljmp
out
xchg
xchg
repz
rcrl
mov
test
or
pop
in
add
mov
popa
jae
xchg
jl
cli
movsl
sub
test
jl
movsl
sub
sbb
cmpsb
pop
add
cmp
dec
jnp
lcall
inc
ljmp
mov
adc
out
ror
cmp
sarb
pop
mov
fdivrs
int3
addb
add
xorl
insl
fdivrl
mov
mov
fdivrs
pop
pop
fldl
test
stc
test
call
dec
negb
push
xor
out
iret
or
push
lock
fwait
inc
inc
lea
sbb
xchg
cmp
and
pop
mov
adc
jmp
jle
clc
jnp
imul
pop
push
jae
int
iret
xor
and
mov
mov
sahf
jle
pop
scas
push
jp
xchg
push
imul
inc
sti
test
in
call
clc
pop
jp
cwtl
xor
push
sub
call
add
push
mov
outsl
fmuls
push
pop
xchg
pop
cmpsb
inc
dec
retw
jp
pop
dec
push
das
sub
ljmp
xor
or
iret
xchg
test
sti
mov
xchg
push
outsb
es
cmp
fdivr
in
mov
je
add
jae
sbb
ficompl
insl
scas
mov
aam
cltd
mov
jne
inc
inc
jmp
mov
adc
jg
jge
scas
popf
dec
pop
push
out
pop
inc
jae
cs
or
mov
imul
jne
mov
cmp
stos
or
or
mov
or
or
aas
icebp
inc
jl
jecxz
in
jmp
adc
stos
pop
xor
sub
or
pop
xorb
push
inc
cmp
cmp
sarb
enter
pushf
and
pop
faddl
inc
mov
push
add
mov
pop
add
adc
inc
sub
jl
out
push
mov
mov
push
pop
in
xchg
mov
loope
mov
out
jb
inc
inc
mov
rcll
and
jae
cmpsb
pop
ret
jp
int
insb
xchg
mov
cmp
outsl
and
movsb
filds
leave
cli
push
xchg
hlt
outsl
pop
jne
repz
or
cwtl
inc
xor
inc
xor
or
orb
or
sbb
lret
das
adc
sbb
add
mov
or
movsl
out
ror
adc
loop
test
cs
cmc
jge
add
push
hlt
mov
mul
arpl
das
xchg
test
mov
sub
or
cli
dec
cmp
fisttps
fnstenv
dec
jecxz
ror
dec
and
jae
xchg
loop
cld
xchg
pop
push
or
inc
pushf
imul
lds
mov
jp
roll
pop
jl
xor
negb
mov
hlt
mov
jle
fmul
mov
call
rcl
les
jb
xor
push
mov
je
add
mov
out
or
dec
mov
in
pxor
push
jp
push
dec
push
xchg
ror
mov
mov
and
scas
mov
dec
jnp
jmp
sub
dec
fadds
mov
js
cmc
ret
push
xlat
int
ds
sahf
xchg
cmp
lcall
daa
gs
ror
enter
xchg
mov
push
jge
sub
push
ret
ret
lods
or
div
pusha
test
mov
sub
xchg
mov
mov
icebp
shlb
push
add
mov
insb
mov
dec
sub
popf
sti
xor
or
lock
mov
xchg
or
inc
add
and
aas
xchg
ss
repnz
js
xchg
divb
out
xchg
inc
lcall
dec
add
mov
icebp
ret
ret
ret
shrb
mov
inc
fldenv
into
fcmovnb
stos
jne
add
mov
cltd
xor
push
pushf
out
inc
dec
lods
cmp
inc
dec
std
out
add
pushw
push
mull
aad
push
xor
xor
mov
sbb
insb
or
popa
loopne
les
or
push
push
mov
fwait
and
add
mov
jg
mov
test
lahf
sub
cmp
xchg
out
out
rolb
add
inc
sti
loope
das
loopne
mov
adc
stos
cli
add
test
pop
sub
sbb
js
jl
mov
mov
adc
leave
cmp
popa
filds
daa
and
inc
and
jae
in
dec
lock
mov
xlat
push
out
rorl
sti
aas
xor
testb
cmp
aas
dec
inc
es
pop
lahf
and
pop
sub
pop
scas
sahf
push
bound
sub
out
sub
pop
dec
aaa
mov
inc
pop
into
mov
arpl
in
sub
outsl
adc
dec
mov
test
arpl
repz
jle
dec
cltd
jle
push
aas
inc
decb
movsl
cmp
xchg
movsl
pop
gs
mov
mov
jne
add
std
xchg
dec
aam
outsl
add
jmp
daa
subl
mov
sub
outsb
add
stc
daa
fistps
add
jne
incl
fadds
out
call
pop
sahf
es
jo
data16
mov
xchg
enter
push
stos
push
outsb
pop
xor
dec
cmp
jmp
mov
add
in
adc
cld
mov
or
subl
xchg
and
and
push
sbb
out
lahf
xor
mov
mov
mov
loop
inc
lea
insl
arpl
fbstp
xor
ds
mov
mov
ja
xchg
adc
frstor
shl
xor
sti
testl
push
xchg
dec
test
mov
jno
mov
pop
sub
xchg
sbb
scas
mov
cmpsb
gs
iret
jb
push
mov
loop
sub
xor
shl
out
data16
sahf
outsl
cmp
aaa
jno
jo
and
jecxz
and
cs
lock
sar
insb
xchg
es
test
mov
fimuls
das
clc
and
push
inc
popa
lods
dec
scas
mov
or
mov
fwait
xorl
mov
or
push
jo
stos
int
jmp
xchg
cmp
repz
and
out
jmp
xlat
ja
add
sub
stos
rcr
ljmp
push
adc
inc
stos
imul
add
in
das
fcmovbe
adc
ret
lods
mov
pop
loopne
ret
jle
push
dec
push
in
test
imul
xchg
ljmp
xor
in
in
jge
cwtl
je
fdivrp
lock
or
in
out
scas
jecxz
arpl
mov
and
add
xor
cmpxchg
push
ret
repz
mov
aas
sub
std
sub
xchg
mov
inc
and
xchg
fildll
dec
fsub
mov
dec
scas
scas
jnp
pcmpeqb
out
ja
fadds
lahf
and
xor
cmp
or
fstps
into
xor
ret
jg
int
test
adc
xor
dec
and
push
das
int
adc
inc
lahf
movsl
add
std
fwait
cli
xor
push
xchg
daa
imul
fisttpll
push
aaa
dec
fucomp
xorl
pop
filds
lret
test
jg
mov
cld
push
ret
dec
fildll
call
popf
pushf
fisttpl
lock
rclb
nop
and
mov
xor
mov
rorl
or
mov
popf
notb
cmp
mov
inc
shrl
mov
and
stc
mov
cs
in
mov
and
jge
enter
scas
xor
mov
push
daa
jo
rcrb
pusha
add
mov
stos
mov
push
sar
sub
adc
jecxz
or
sub
ljmp
push
sub
pushf
rorl
sub
adc
jl
mov
xlat
jb
mov
push
xlat
add
pop
cwtl
stc
adc
mov
xorb
jecxz
mov
loop
orl
repnz
xor
cld
adc
decl
jo
or
push
in
cmpl
loope
test
inc
js
xchg
xchg
pop
imul
in
and
xchg
mov
inc
addr16
sbbl
inc
cmp
arpl
sub
mov
push
push
mov
popa
mov
lahf
inc
mov
out
mov
mov
pop
dec
arpl
sbb
pop
xlat
in
movsl
push
cmp
dec
jecxz
iret
lcall
jle
mov
fmul
sub
test
cmpsl
sbb
push
aas
xchg
cmp
xchg
jbe
shl
adc
out
pushf
dec
and
das
popf
hlt
ljmp
and
xchg
push
fcoms
mov
sbb
mov
add
inc
cmp
cli
xor
fbld
jnp
inc
jmp
xchg
cmpsb
jnp
lret
dec
in
sub
mov
pop
psubusw
and
sbb
adc
addr16
inc
and
pop
xor
pop
rcr
andl
fisubrl
jp
ss
jp
push
call
aas
add
sub
repz
lods
sub
paddusw
cmp
push
cmp
out
sbbl
add
inc
sbb
and
cmp
fisttps
in
shlb
icebp
shll
pusha
xor
mov
movsl
rclb
xlat
pop
cli
jae
enter
cmp
push
jnp
jecxz
in
pusha
sub
mov
jge
xchg
jle
idivb
push
rorb
pop
adc
popa
cmp
push
cmp
sbb
xlat
movsb
cld
std
cltd
sti
mov
push
lods
pop
sub
lds
cmp
out
dec
out
ljmp
std
stos
mov
lret
push
movsl
adc
mov
xor
les
sbb
imul
cmpsl
lcall
test
or
mov
addl
cmp
arpl
mov
out
xor
jo
xor
fadd
test
xchg
inc
test
rolb
out
aad
mov
jnp
mov
sarl
nop
sahf
sub
inc
lcall
ljmp
in
xchg
cmpsl
cmp
dec
lds
and
mov
jo
test
ljmp
jo
negl
lea
push
inc
dec
sub
popf
fisubl
sbb
enter
sbb
adc
sub
inc
adc
test
ret
aam
loop
cltd
or
sarb
sbb
faddl
enter
sub
test
sbb
jp
sti
add
stos
and
jge
mov
loopne
fsubr
xacquire
xchg
aas
push
cmpsl
sub
jns
adc
stos
fcomps
stc
and
out
jmp
mov
cmpsb
cmpsl
inc
sbb
bound
xchg
mov
clc
sbb
xor
mov
push
popf
mov
jne
aad
lods
mov
mov
lcall
pop
adc
inc
mov
sbb
pop
push
push
cmp
push
dec
or
cmpsb
daa
cmp
std
inc
mov
xor
xchg
pop
mov
std
xor
jmp
inc
sub
push
iret
es
sub
adc
add
cli
cmpsb
mov
sbb
and
dec
sbb
and
push
test
mov
cmp
mov
pop
inc
ffreep
push
inc
mov
into
sbb
xchg
insb
pop
inc
dec
inc
cmp
sbb
pop
cmp
fs
ret
dec
pop
jmp
sbb
pop
fs
into
inc
jmp
inc
insb
imul
into
outsb
adc
mov
test
std
jmp
in
or
adc
inc
fld
inc
imul
dec
lds
loop
push
outsb
in
fcomps
add
cmp
es
mov
fsubp
sbb
pusha
inc
push
rol
mov
pop
cwtl
pushl
dec
int
sub
pop
loope
push
ljmp
ljmp
push
sub
and
mov
lcall
fsubl
add
aam
and
cmpsb
jns
test
inc
iret
adc
push
btc
xlat
or
fisubrl
mov
out
inc
out
push
lods
sub
fsubl
sti
sub
loopne
dec
jno
push
dec
cltd
icebp
mov
daa
sbb
call
jg
aad
cmc
dec
lock
jmp
pop
scas
lahf
stc
dec
shll
push
stc
lea
jecxz
sbb
daa
fisttpl
add
das
xor
imul
cmpsl
mov
mov
movsb
mov
outsl
ror
lods
jmp
xor
mov
stos
stc
cli
test
cwtl
lods
in
inc
mov
cmc
jbe
into
mov
jle
loop
cmc
repnz
push
xchg
insl
add
ja
mov
das
xchg
and
xchg
push
gs
push
lock
inc
dec
sahf
data16
shll
aad
mov
adc
les
repz
sbb
dec
xor
mov
shrb
sub
es
adc
jae
xor
pushf
lods
imul
sti
repz
xor
mov
mov
pop
inc
icebp
and
jae
fadd
adcl
ret
lock
add
xchg
and
mov
push
jb
dec
pop
fdivrp
add
xor
cmpsb
xor
test
mov
inc
jns
je
sub
fsub
or
arpl
repnz
xchg
test
shll
dec
xor
les
pop
pop
loopne
inc
inc
add
std
xor
into
ja
js
inc
mov
je
cmp
inc
cmp
mov
jae
std
inc
xor
sub
ja
mov
mov
mov
jge
xchg
dec
mov
push
jo
add
adc
fdivrs
addr16
mov
ret
lahf
mov
mov
rcll
out
sub
fs
cmc
outsl
and
pop
imul
jae
pop
add
or
sbb
cltd
push
mov
dec
and
pop
test
je
pusha
xchg
loopne
mov
sub
mov
fs
or
cmp
pop
es
fwait
jns
outsb
jne
aaa
jne
xor
xchg
movsb
mov
test
push
push
mov
in
xchg
pop
jb
mov
mov
mov
pop
xor
data16
loope
insb
sbb
dec
jl
or
xchg
jae
test
or
sahf
push
ljmp
loope
mov
push
sahf
pusha
out
pop
nop
pop
jmp
ret
and
dec
or
jno
or
xchg
mov
fcmovne
bound
adc
push
jl,pn
fwait
push
ret
sahf
mov
jns
sub
and
xchg
mov
sbb
cmp
jecxz
push
inc
mov
stc
lcall
inc
push
popa
das
lea
icebp
push
dec
movsb
and
ljmp
cmp
mov
push
xchg
and
sbb
inc
mov
addb
fs
scas
mov
push
xchg
shlb
dec
imul
daa
stc
xor
fmull
dec
and
jne
pop
mov
or
push
std
add
dec
fisttpll
mov
add
stos
into
inc
mov
sbb
add
cmpsl
cs
repz
xor
lcall
jns
pop
dec
mov
ja
iret
sbb
xlat
out
cmp
lea
xorb
mov
mov
push
xchg
in
jl
dec
shll
sub
ret
stc
call
and
loop
push
ds
dec
mov
cmp
push
jns
inc
sub
mov
cs
sub
gs
clc
lods
add
loopne
ss
sti
mov
mov
mov
int
sbb
push
popa
scas
mov
push
push
cmp
pop
sahf
vzeroall
fbld
xchg
lock
xchg
popf
sub
mov
mov
sbb
stos
sbb
cld
inc
out
lods
sbb
cltd
inc
cmp
leave
int3
imul
xchg
xchg
les
jae
leave
or
xor
fsubl
fnstenv
pop
mov
cmpsb
ret
pop
mov
jo
mov
jmp
or
inc
fbld
lods
aaa
adc
stos
stos
and
aas
push
mov
js
std
ret
subb
popl
mov
inc
adc
cs
icebp
jle
loop
jno
or
ret
sub
or
cmp
test
mov
subb
sbb
stos
mov
insl
ds
lfs
dec
mov
ss
jmp
mov
xchg
and
sarl
lret
mov
sub
lahf
sbb
imul
jg
cmp
inc
stc
mov
lahf
and
stc
aaa
mov
loope
insl
dec
fstpl
scas
xor
mov
fbstp
adc
xorb
bound
jno
jno
pusha
addl
hlt
or
adc
imul
add
andl
mov
outsb
or
xchg
xor
test
iret
fwait
pop
fcoml
les
xchg
inc
addr16
and
inc
mov
sub
out
ljmp
inc
test
dec
sub
int
push
push
xchg
xor
pop
sarb
xor
xor
push
fs
sbb
push
mov
jge
cld
add
jl
push
mov
in
sbb
push
lods
ret
push
das
mov
ret
dec
int
push
and
jae
push
push
fs
mov
sbb
loopne
icebp
out
cmp
sbb
cmovle
daa
push
pop
jae
push
aas
faddl
mov
sarl
inc
adc
insb
adc
into
jne
mov
sub
pusha
or
dec
sbb
adc
mov
insl
sbb
aaa
test
popa
sbb
mov
aaa
call
mov
inc
inc
mov
cmp
fcom
lcall
call
mov
jecxz
out
xchg
push
jg
aas
mov
mov
jae
cmc
sub
inc
cmp
mov
jecxz
test
pop
unpckhps
popf
jmp
les
cwtl
cmp
push
lds
inc
imulb
lock
cmp
or
xor
xchg
or
sbb
bound
ds
inc
adcl
push
pop
jno
inc
adc
mov
fisttpll
clc
inc
inc
adc
fcompl
movups
pop
leave
movsb
mov
into
das
ljmp
cmp
pop
movsl
mov
sub
shrl
cld
ds
fisttpl
mov
pop
cmc
sbb
fldenv
outsl
pop
add
dec
inc
mov
xchg
pop
cltd
icebp
sahf
out
in
in
push
call
nop
flds
mov
mov
and
hlt
push
cmp
mulps
sbb
xlat
sub
xchg
dec
sti
movsl
sub
adc
jge
clc
jge
mov
popa
push
addr16
fs
inc
push
inc
or
das
fs
xchg
andb
mov
jl
adc
push
xchg
pop
ljmp
sub
test
push
loop
test
jno
jbe
cmp
jbe
sarl
adc
mov
xor
or
arpl
and
aad
icebp
sbb
jns
jno
sub
jne
cmp
out
divb
outsl
xchg
imul
cltd
cmp
sarl
xchg
adc
in
lds
jl
lret
lds
jmp
iret
mov
stos
adc
jno
mov
movsl
or
pop
out
jae
inc
mov
sbbb
xlat
fsincos
clc
xlat
mov
test
mov
or
std
jb
std
sub
push
loopne
cmp
xchg
cs
dec
and
bound
call
sbb
xchg
rcr
adc
loop
pop
xchg
jmp
add
neg
inc
or
xchg
dec
imul
loope
add
sbb
pop
mov
lods
out
lds
call
call
dec
nopl
add
stc
subl
dec
pop
pop
mov
packuswb
and
dec
add
xchg
arpl
inc
ss
pop
movsb
ljmp
and
arpl
outsb
cmc
jae
das
in
lahf
fistpll
pusha
inc
inc
in
cmp
push
mov
jno
loope
or
push
xlat
test
sbb
pushl
mov
xor
loopne
test
sti
fcomps
fistpl
sbb
sti
xchg
les
test
sub
cmp
cwtl
mov
adc
push
inc
inc
push
jle
std
cmp
sbb
stc
int3
ficoms
lock
lahf
in
imul
xchg
push
rclb
and
mov
mov
into
mov
sbb
out
loopne
mov
and
jno
repnz
test
push
add
movsl
icebp
xchg
pop
jg
pop
sbb
adc
sbb
sbb
fldt
jl
lret
out
push
mov
add
xor
aas
fisubl
inc
xor
out
out
mov
push
setno
and
mov
mov
jg
loopne
mov
fbld
cmp
insl
and
ljmp
je
mov
sahf
cmp
popa
outsb
jo
pop
fsubrl
icebp
jne,pt
jp
xor
add
and
push
mov
push
cli
mov
jl
rol
inc
lcall
mov
mov
loop
mov
insl
mov
repz
loopne
pop
jmp
lret
mov
data16
mov
xchg
flds
inc
lock
pop
or
hlt
cmpsb
mov
and
les
mov
rorl
and
mov
pop
jns
push
sub
imul
int3
sahf
cmc
mov
or
mov
aam
adc
clc
fnstsw
mov
into
cmp
mov
sbb
mov
inc
xor
test
sub
sub
push
mov
dec
in
mov
frstor
test
push
pop
sub
push
sub
outsl
pop
fnstcw
lods
mov
jecxz
fwait
rorl
mov
cld
mov
sbb
test
aas
add
fadd
popf
mov
inc
add
les
mov
jp
push
push
push
int3
lahf
fimull
cld
push
cltd
xchg
inc
jl
push
insl
data16
mov
add
cmc
push
push
adc
or
and
jne
movb
push
lretw
out
cmpl
and
arpl
mov
scas
lret
mov
mov
shll
dec
inc
movsb
or
mov
cmp
xor
arpl
arpl
ret
lret
adc
lret
imul
stos
and
jno
inc
fildl
int
inc
sub
icebp
mov
push
mov
inc
or
in
pop
arpl
mov
loope
icebp
jmp
cli
xor
fisttpl
or
insb
mov
sbb
scas
pushl
inc
cmpsl
imul
repnz
cmpsb
xchg
pusha
imul
out
push
xor
add
test
jae
inc
mov
out
pop
xchg
fmull
add
repnz
inc
and
loop
mov
int3
push
xor
push
and
xor
lods
add
scas
cmp
inc
js
mov
dec
hlt
push
pop
mov
inc
out
and
cmp
js
push
push
movsb
jge
das
mov
xchg
and
jl
mov
push
pushf
out
jmp
mov
xorl
out
movsb
pop
mov
nop
cmp
jne
stos
mov
icebp
mov
lock
jl
outsb
and
mov
dec
add
lret
stc
cld
cwtl
jnp
lret
jecxz
mov
sbb
test
pop
xchg
and
enter
push
lea
cmp
stc
sub
jecxz
xor
jo
dec
and
loope
xlat
push
insl
pop
inc
neg
pop
into
pop
arpl
cmpsl
andl
daa
mov
pop
mov
out
sahf
cld
aaa
or
mov
cmpsl
or
daa
pop
cmp
in
sbb
mov
xor
insb
cmp
je
addl
pushl
xorl
pushl
call
sbb
mov
or
mov
mov
adcl
xor
add
movl
cmp
movl
je
mov
mov
sbb
mov
mov
add
mov
sbbl
mov
xorl
add
xor
mov
or
mov
xor
mov
andl
add
mov
movzbl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
incl
mov
add
mov
jmp
sub
mov
mov
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xorl
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
push
adc
mov
mov
and
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
push
call
mov
dec
mov
jmp
andl
movl
add
movl
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jb
and
mov
sub
mov
xorl
mov
mov
sub
mov
orl
jmp
negl
pop
adc
divl
jge
aam
popf
inc
test
xor
jp
pop
jp
cld
add
test
insb
loopne
mov
hlt
out
cmp
inc
inc
outsb
xchg
fninit
lock
cld
stos
enter
fldt
inc
xor
scas
ret
lret
outsb
out
dec
xchg
add
adc
adc
dec
lods
cmp
mov
int
and
hlt
daa
mov
xorl
into
jmp
stos
mov
sbb
jl
push
inc
pusha
fs
push
jg
imul
ds
jb
das
push
adc
push
add
cs
jge
adc
xchg
aad
push
and
js
mov
test
mov
leave
xor
fcompl
inc
mov
jge
out
scas
scas
ds
push
dec
mov
mov
fldcw
out
negb
sbb
sahf
pop
into
lods
pop
xor
push
xor
aas
cwtl
sub
mov
int3
stos
fcomps
ds
jg
mov
repz
lret
movsl
and
push
scas
xor
pop
sbb
fsubs
mov
mov
push
call
and
pop
jb
adc
mov
or
scas
dec
or
or
cmpsb
pop
mov
out
jp
js
pop
dec
ljmp
test
out
jmp
inc
adc
mov
jle
and
cmp
inc
cmp
je
mov
xchg
sub
scas
add
cmp
outsb
or
or
cmp
sbb
leave
push
cli
add
outsl
xor
sbb
sti
ret
ss
sub
ret
xchg
cld
ss
jne
xor
cltd
jns
adc
filds
pop
mov
stos
jge
shrl
cltd
je
adc
jns
int
lret
and
jbe
mov
jo
fdivrs
cmpb
testb
call
addr16
movsl
or
mov
mov
push
ds
not
inc
mov
mov
and
cmp
push
es
arpl
jne
imul
push
mov
add
and
ficoml
add
aam
mov
and
test
loopne
mov
test
add
stos
shrl
idiv
inc
add
int3
xchg
xor
repnz
leave
out
xor
add
inc
jb
je
mov
gs
mov
je
dec
add
dec
icebp
stc
dec
aad
jbe
jmp
jb
outsl
in
push
lret
repz
sub
pop
and
mov
enter
mov
dec
cmpsb
aad
adc
and
pop
pop
jne
inc
mov
sub
test
or
mov
inc
movsl
xchg
icebp
lahf
addr16
ret
dec
pop
call
repnz
cs
sbb
inc
dec
push
mov
int
das
cmp
data16
sub
push
dec
xchg
cmp
fwait
stos
mov
cmpsl
mov
sbb
mov
sahf
insl
sub
pop
mov
cmc
push
ja
btr
jb
or
inc
push
add
cmp
mov
fidivrl
shll
mov
xor
scas
arpl
mov
sbb
shlb
shrb
xchg
adc
mov
add
out
out
adc
or
pop
sub
cmc
push
fsub
scas
imul
dec
pop
outsb
jp
lcall
jg
xor
test
inc
cmp
push
sbb
loop
xchg
paddd
shl
inc
arpl
aaa
add
or
shll
pop
push
dec
sahf
jnp
mov
out
arpl
sub
aam
enter
call
and
mov
jns
push
cmp
or
pop
cmp
fsubrp
or
mov
jne
fisttpll
inc
int
movsl
or
nop
pop
or
dec
aaa
test
pop
mov
mov
mov
into
decb
shr
test
jo
leave
cmp
lock
data16
push
xchg
sbbl
roll
lcall
cmp
sub
cmp
push
imul
lret
add
inc
repz
dec
mov
inc
mov
inc
push
dec
mov
loop
ret
iret
add
loope
popa
add
js
and
pop
push
out
adc
pop
jg
into
or
in
cmp
sub
insb
jo,pn
mov
loopne
push
mov
mov
jae
gs
iret
pop
fildll
stos
shlb
xlat
xchg
adc
sbb
push
sub
dec
sahf
fstpl
lcall
mov
pop
mov
insl
ficoms
out
shll
mov
in
stos
shll
lock
dec
into
pop
mov
mov
xchg
xchg
jo
mov
jno
add
xchg
mov
or
cmpsl
mov
xor
stc
pop
in
pushf
test
popw
lret
mov
fisttps
fwait
jae
cmpsl
add
clc
xchg
nop
push
subb
fcoml
in
pop
imull
xchg
pusha
jb
cwtl
and
mov
les
es
pop
andb
mov
loope
aas
cmc
dec
adc
mov
jne
leave
push
sub
cvttps2pi
gs
imul
cmp
xchg
mov
inc
cld
leave
jecxz
mov
xchg
fadd
inc
mov
ds
or
xchg
jge
aam
xchg
enter
fsubrs
andl
ljmp
test
scas
es
jle
into
adc
jo
or
dec
jo
mov
daa
mov
sub
cmp
stc
fimuls
adc
jmp
mov
jno
adc
scas
xor
es
push
mov
cmp
jns
cmp
into
out
mov
xchg
test
mov
shll
gs
pop
into
shll
add
lea
or
and
push
mov
jno
outsl
xchg
xchg
pop
jne
out
mov
xchg
daa
sarb
xor
push
lahf
inc
mov
movsl
lock
mov
xchg
inc
or
test
sbb
int3
enter
test
jmp
aad
push
je
fistpll
pop
xor
fldt
jp
push
mov
jo
scas
test
adc
popa
ret
cmpsb
imul
push
xchg
movsb
out
jecxz
sarb
fistps
add
inc
and
mov
bound
outsb
dec
xchg
mov
lret
inc
cmc
xchg
dec
push
call
or
xor
push
cmc
mov
jnp
mov
mov
push
call
orb
xchg
icebp
repnz
out
inc
inc
aas
gs
sbb
cmp
pop
dec
aad
aaa
jecxz
scas
ret
test
dec
fwait
ss
leave
fcomip
cmpsl
ja
ret
rclb
aad
mov
push
fs
xchg
dec
inc
sar
or
and
cs
popf
and
ljmp
popa
xor
sub
pop
dec
icebp
fsubrl
adc
push
mov
mov
test
pop
add
pop
rcl
mov
cltd
fadd
sbb
sbb
pop
adc
cmp
mov
and
push
adc
iret
xchg
jecxz
inc
and
xchg
in
xor
fsubl
shll
xchg
sbb
xchg
sub
sub
test
xchg
filds
es
push
push
fs
jmp
lret
inc
or
mov
sub
sarl
call
in
clc
xchg
mov
fsubs
inc
pop
jnp
loop
pop
pop
cmp
adc
mov
fucomp
mov
dec
addr16
filds
addr16
sar
outsl
cmp
aad
mov
ds
leave
jge
or
es
aad
or
popf
hlt
add
mov
lahf
cli
push
jno
and
xor
xlat
inc
ljmp
and
mov
sub
fildl
pop
add
outsl
adc
pop
cmp
pop
push
nop
out
rol
mov
lods
aaa
lret
mov
dec
dec
mov
lret
push
mov
sbb
shl
adc
push
inc
sub
jo
popf
test
cmovne
mov
inc
pushf
scas
enter
push
sbbb
xchg
lret
test
mov
or
or
push
inc
mov
jmp
insl
jge
cld
int
int3
scas
inc
pop
add
cli
ja
rcr
div
mov
dec
loope
push
pop
or
call
jmp
aam
pushf
mov
scas
sub
or
std
cmp
cmpsl
std
pop
xor
sub
jns
pop
xor
push
rcrl
dec
xchg
test
rcrl
repz
js
loopne
jmp
shlb
iret
push
mov
movsb
inc
dec
test
leave
mov
test
mov
fdivrl
outsb
dec
xor
inc
cltd
jae
mov
fcmovnu
mov
pop
push
cs
mov
iret
enter
mov
icebp
imul
repnz
cmp
mov
or
xorl
cld
xchg
and
cltd
inc
aas
xchg
lock
pusha
mov
push
dec
add
mov
loope
dec
inc
inc
sub
aam
dec
outsb
push
loope
dec
xchg
pop
jno
jae
adc
and
push
xchg
mov
mov
and
test
loop
push
daa
adc
stc
cmpsb
ja
adc
dec
movsl
add
push
aad
shrb
jmp
mov
outsl
pop
popa
mov
aaa
jmp
xchg
inc
mov
stos
pusha
pop
cmpsb
push
leave
cmc
ret
inc
mov
push
pop
in
fstpl
xor
das
aaa
icebp
push
and
lea
nop
dec
in
xchg
out
jae
mov
sub
add
es
andb
cld
mov
cmpsb
jbe
mov
out
dec
dec
mov
sbb
shrb
popa
pop
push
mov
xchg
jp
mov
sub
clc
xchg
arpl
repnz
rcrl
pop
orb
and
add
xor
aas
sbb
adc
xor
in
insb
pop
add
gs
sti
push
out
aam
jo
mov
pop
dec
xor
xor
jbe
in
add
jle
in
into
clc
mov
pop
test
shrb
rcr
jp
xchg
les
xor
mov
fbld
lods
jbe
fstp
mov
cld
inc
or
iret
dec
popa
mov
add
fcom
push
adc
nop
mov
lcall
inc
int3
dec
daa
or
inc
jae
sbb
mov
in
repz
outsl
stos
cmpsb
cmp
jl
add
xor
aaa
mov
lods
xchg
es
ror
test
sbb
push
shlb
adc
jle
hlt
shll
mov
movsb
mov
jne
pop
sbb
sbb
push
loopne
adcl
jg
pusha
int3
add
outsl
fildll
push
mov
add
vmread
leave
dec
mov
subb
add
and
shl
adc
push
adc
mov
subb
pop
nop
or
add
lock
lahf
lret
out
ret
imul
adc
pop
or
fs
cmp
les
fcmove
and
mov
push
stos
mov
dec
in
pop
add
mov
fcoml
add
cs
fisttpll
loope
lds
pop
outsl
call
jno
push
dec
cmp
sbbl
outsb
push
push
xchg
mov
xchg
xchg
adc
lea
lahf
scas
ja
outsb
insb
ret
out
stos
inc
mov
and
ret
std
xor
mov
pop
jp
inc
cmp
or
sbb
cmpsb
and
inc
lods
xchg
sbb
std
dec
sub
cmpl
enter
outsl
loop
or
popf
jb
addl
out
cmpsb
lret
sub
push
arpl
in
xor
gs
scas
test
bound
xchg
out
dec
sbbb
je
pop
xchg
pop
inc
repnz
js
iretw
pop
roll
cmp
push
fidivrs
fs
sarl
add
dec
or
inc
test
ja
dec
aas
mov
out
push
xchg
call
shrb
rcll
mov
sub
xor
gs
ds
mov
pop
call
cmc
xchg
daa
xchg
fnstenv
cmp
mov
in
les
jecxz
mov
ss
jl
fstp
in
xchg
or
dec
inc
sbb
shrl
and
adc
unpckhps
mov
cmc
mov
test
xor
sub
popa
or
leave
pushf
movsb
loop
lahf
or
ret
push
js
ljmp
out
inc
mov
movzbl
inc
jp
adc
or
or
outsl
insl
inc
daa
lods
adc
add
xchg
outsl
movsl
out
sub
sub
sbb
mov
push
ret
stos
lods
incb
out
ljmp
jg
dec
gs
lret
add
subb
mov
xlat
shrl
shll
decb
cmc
bound
mov
mov
aaa
jo
cmpsb
or
dec
in
out
and
outsl
add
testl
mov
addr16
mov
shl
arpl
push
bnd
xchg
insb
sbb
or
out
jns
sahf
les
fisubrl
es
mov
xor
xchg
push
adc
mov
popf
sbb
dec
dec
in
mov
jne
aam
push
cwtl
jne
ficoms
lea
push
fldt
fildl
add
sbb
out
and
mov
dec
testb
push
test
xchg
fwait
push
rcll
daa
jo
iret
adc
out
lahf
pusha
dec
push
sahf
inc
mov
mov
sbb
out
xor
xor
das
cmp
mov
mov
inc
jmp
and
repz
or
imul
pushf
test
cwtl
dec
addr16
push
inc
inc
int3
mov
fbstp
xchg
insl
js
inc
mov
pop
cmpb
mov
jno
lds
inc
jg
push
push
mov
xchg
flds
mov
loope
insb
gs
mov
js
xlat
pop
fdivs
and
jo
rcrl
adc
lahf
outsb
and
add
popl
dec
jp
mov
out
adc
rep
fimull
xchg
sbb
cwtl
int3
dec
daa
pop
pop
imul
pusha
push
scas
fsubp
shlb
inc
test
sbb
icebp
xor
mov
pop
je
clc
pop
cmp
lds
andl
daa
push
pop
mov
push
xchg
mov
nop
push
sarl
lods
shll
dec
cmp
pop
xor
cmp
lret
aas
dec
pushf
cli
mov
mov
inc
in
sub
out
ss
lcall
xchg
pop
xchg
pop
outsl
cs
add
in
adc
xchg
orb
pop
add
push
add
push
shlb
enter
jl
mov
ljmp
xor
lds
push
push
jp
or
mov
adc
call
std
fcomp
jb
xor
stos
mov
scas
mov
dec
add
fisttpl
xchg
xchg
inc
xchg
jmp
mov
sbb
pop
mov
fsub
pop
and
mov
data16
popa
sub
xor
jns
test
test
push
ret
paddusw
outsb
push
push
sub
push
daa
pusha
add
inc
pop
icebp
enter
imul
mov
xor
sub
mov
push
xor
or
cmp
xor
subb
xor
test
js
pop
jecxz
jne
sbb
mov
sbb
repnz
jb
divb
imul
dec
mov
repz
mov
imul
js
lods
call
push
mov
mov
and
cs
mov
pop
std
fisttpl
mov
bound
cmc
cli
in
add
xchg
jp
lret
call
test
push
adc
mov
lods
call
jb
mov
inc
hlt
pop
and
push
xchg
rclb
mov
rcl
add
dec
xchg
scas
inc
test
or
jns
lahf
cmp
popa
addr16
mov
sbb
and
pop
jo
cld
fld
test
mov
xlat
movsl
sbb
rcrl
mov
lahf
pop
popf
xor
ss
add
pop
xchg
jg
stos
pushf
add
sbb
sbb
push
inc
aam
sbb
and
push
mov
int
mov
jmp
sahf
clc
push
in
dec
push
mov
fwait
and
data16
cmp
or
insl
or
xor
push
stos
mov
shl
xor
std
stos
cmp
jle
pop
xor
sub
movb
rorl
je
aam
push
out
rorl
add
ret
imul
arpl
and
sbb
dec
cmp
clc
mov
mov
sbb
dec
sbb
insb
insl
sbb
cld
dec
dec
div
lret
scas
pop
call
int
test
push
jmp
icebp
fbld
mov
xor
or
rclb
xor
shlb
lods
leave
mov
mov
mov
push
dec
iret
and
shll
push
cmp
push
inc
jb
dec
inc
add
sub
fisubrl
fadds
push
jb
inc
mov
lret
movsb
out
testb
inc
xchg
hlt
xchg
inc
mov
sub
push
sub
mov
mov
jno
dec
es
pop
inc
jbe
sbb
xor
das
add
cmpsb
sub
or
xor
mov
call
xor
xor
lcall
or
aam
and
xchg
test
lret
ficoml
ds
ret
jb
and
sub
jbe
mov
or
xor
mov
movsl
mov
in
dec
cli
fistps
fsubrs
push
xchg
jb
dec
add
sbb
je
mov
and
dec
nop
jmp
pop
push
xor
jmp
test
imul
sbb
xchg
jae
dec
jmp
adc
pop
lcall
movsl
push
outsl
pop
mov
ret
hlt
sti
push
loopne
repz
insb
cmp
pop
lock
dec
mov
jo
fisttpl
es
or
jno
out
aam
jge
pop
loop
lds
jbe
cmp
leave
push
imul
add
jge
add
into
mov
inc
jecxz
subb
clc
sbb
cmpsb
pop
cld
jno
dec
repnz
push
outsl
stc
test
add
xor
mov
sarl
mov
pop
mov
in
lds
push
out
lret
push
adc
inc
cmp
jb
jecxz
push
mov
mov
cmpsl
imul
and
sub
imul
mov
push
std
out
int
xchg
dec
int
push
push
lea
icebp
jb
fdivp
add
jnp
inc
sbbb
pop
in
stos
jmp
push
push
mov
dec
xor
enter
sbb
adc
popf
push
mov
mov
cmp
add
mov
jae
push
je
dec
inc
push
in
add
xchg
push
loope
ret
inc
pop
sarb
js
movsl
jl
bound
cld
testb
or
arpl
sti
repz
movntq
sub
aam
push
jne
adc
pop
jmp
data16
cmp
jo
outsb
repz
arpl
movl
sahf
push
inc
daa
sub
nop
mov
push
pusha
mov
sbb
repz
mov
mov
sub
adc
ret
push
loope
sbb
aad
dec
scas
push
dec
pop
adcb
dec
out
mov
jns
dec
ret
add
sub
push
sub
nop
mov
jb
or
mov
pop
mov
adc
jp
xor
stos
xchg
push
inc
fwait
imul
lcall
mov
std
fcoms
out
aad
lods
or
in
inc
cmp
or
push
loopne
inc
xchg
sub
lds
jecxz
nop
fistps
call
fstpl
aaa
inc
sub
add
jmp
add
jns
mov
or
mov
roll
jge
sbb
test
jmp
cli
xor
jecxz
daa
cli
dec
pop
jo
mov
sbb
dec
ljmp
or
push
or
xor
sbb
imul
mov
lds
adcl
pop
scas
sub
cld
jmp
int3
jbe
pop
mov
jecxz,pn
call
cmp
jge
xchg
cs
les
imul
cmp
mov
fdecstp
add
push
ss
cmp
jge
dec
mov
cld
test
and
xlat
push
test
fcomps
pop
xor
mov
add
outsb
inc
nop
cld
add
pushf
inc
and
pop
xchg
lock
xchg
jge
xor
pop
push
mov
sbb
adc
xchg
lret
imul
cs
and
loope
ljmp
sub
xlat
dec
ljmp
xlat
pop
out
imul
inc
jmp
dec
test
data16
lcall
scas
out
inc
jne
or
call
xchg
push
into
push
cld
and
gs
sub
loopne
push
mov
sbb
sub
pop
or
pop
cli
inc
std
or
push
setnp
clc
mov
lock
stos
dec
adc
fbld
sub
rcll
cld
sbb
mov
pmulhuw
fst
inc
dec
scas
jbe
add
andl
inc
fsubl
xchg
adc
inc
out
sbbb
inc
mov
add
sar
xor
adc
sbb
ja
cmpsb
and
ret
lret
repnz
pop
aaa
push
sub
sbb
repnz
sub
addr16
pop
hlt
adcb
addr16
add
xchg
sub
lret
xchg
sahf
xchg
cmc
aaa
mov
sub
sarb
inc
cmp
mov
outsl
jmp
sbb
mov
sub
mov
sbb
cmp
pusha
push
jp
mov
sbb
into
sbb
or
orb
mov
cmp
push
dec
inc
rorb
sub
add
fcompl
in
cld
xor
mov
lret
movsl
mov
pop
and
cmp
cmp
xchg
jg
sbb
call
out
loop
lea
daa
ret
lock
rorb
mov
lret
mov
ljmp
fdivr
lea
in
or
in
in
mov
push
mov
enter
dec
sub
stc
int3
sub
mov
ds
or
pop
out
int
stos
or
dec
inc
xchg
cmp
cld
popa
sub
cmp
pushf
lds
sahf
sub
cmc
push
inc
ret
fisubs
and
sub
adc
fidivrs
aad
outsb
sbb
xor
pop
sbb
xor
push
pop
mov
dec
data16
xchg
dec
in
insb
inc
and
adcl
push
mov
icebp
push
pop
sub
adc
mov
aaa
pop
push
xor
cmp
xor
bound
cmpsl
fisttpll
adc
loop
adc
pop
pop
js
and
popa
lret
mov
sbb
xor
xor
fst
std
loopne
enter
fadd
int
cmp
inc
in
aaa
or
cmp
das
mov
add
mov
and
and
pminsw
lahf
negl
add
mov
in
movsl
inc
dec
je
andps
in
sti
std
pusha
mov
add
jmp
and
xchg
add
xchg
aas
xor
cltd
aad
mov
push
sub
cmp
xor
mov
mov
pop
insb
push
cwtl
and
jne
dec
lods
fadd
jmp
shrb
mov
ja
cmpsl
add
fs
jp
mov
out
int
int
adc
cltd
mov
sbb
outsl
popf
and
xchg
jns
or
ja
dec
sbb
sub
nop
dec
dec
inc
lea
or
mov
jle
adc
idivl
test
mov
push
out
test
jmp
xor
lods
ss
lcall
mov
xchg
lea
and
ret
sbbb
mov
scas
shrl
adc
inc
xorl
out
inc
mov
dec
and
fs
cmpsl
fsubrp
imull
lea
and
out
pushf
orb
inc
shr
dec
sbb
sarb
pop
clc
fildll
dec
pop
and
add
jnp
pop
mov
xchg
cmp
xor
fistpll
outsb
ss
aam
and
mov
add
les
ret
aas
fidivs
cli
pushf
mov
icebp
lock
outsl
rcrl
cmpsl
inc
add
ret
cmp
pop
push
lods
mov
push
xorb
sub
fcompl
adc
test
pop
and
out
xchg
sub
fsubrl
in
inc
jecxz
dec
adc
sti
cmp
add
mov
xchg
adc
dec
jns
pop
loopne
xchg
mov
add
shl
mov
mov
lahf
mov
sub
in
xchg
pop
push
mull
xor
xor
out
cs
loop
mov
dec
push
fwait
pop
sub
pop
out
cld
outsb
jmp
add
or
movsl
xor
incb
clc
rclb
stc
out
mov
pop
adc
iret
jo
mov
dec
cmp
jle
and
dec
add
loop
fimuls
push
ficomps
icebp
sbb
xchg
pop
movl
cli
or
lds
mov
pop
jp
and
adc
jo
fincstp
jle
lcall
inc
adc
mov
sub
inc
push
xor
jp
mov
sbb
daa
cli
mov
dec
lcall
ds
xchg
cmpsb
add
push
stos
cmc
fdivs
mov
stos
loop
cmp
mov
test
repnz
mov
outsb
pmaxsw
js
sti
js
aam
mov
dec
aad
sub
divl
adc
jne
cmpb
or
push
cld
dec
fcomp
and
mov
out
clc
inc
inc
push
xor
int3
mov
stc
data16
ss
dec
fsubs
xchg
call
xlat
mov
lcall
lea
outsl
sbb
jns
jg
xchg
push
out
clc
or
inc
mov
mov
push
and
pop
fwait
dec
mov
mov
push
js
fs
mov
lcall
sub
sub
nop
mov
in
mov
pop
fdivr
out
std
in
movsb
mov
mov
repz
fisttpll
pop
mov
xor
inc
pop
addr16
cvtps2pi
shl
cmp
or
enter
incb
adc
gs
call
fidivrl
dec
test
sub
cmp
lahf
call
and
inc
les
repnz
shrb
out
sub
movsl
cmc
push
dec
mov
mov
ret
fistps
je
jb
push
dec
bound
aaa
fwait
cmc
call
dec
loopne
jbe
cmp
jne
mov
int3
pop
inc
inc
push
test
fs
mov
clc
ret
add
popf
insl
mov
negl
cli
sti
stc
ret
fwait
out
mov
jg
pop
jne
addr16
dec
sbb
es
lret
cltd
fnstsw
cli
call
aam
test
inc
dec
xor
sti
inc
sbb
mov
js
fmuls
rorl
jnp
jle
push
sbb
stc
test
xor
xchg
inc
cld
jno
in
ret
adc
call
mov
dec
jl
lret
sub
pop
orb
and
mov
and
jg
fadd
movsb
push
test
jnp
int
jno
mov
jo
add
xchg
fidivrl
xchg
stos
push
or
stc
rorl
inc
jno
stos
rdmsr
pop
cwtl
adcl
jmp
test
iret
mov
or
add
sbb
cmp
push
test
sub
gs
xor
stos
mov
shlb
lret
or
xor
dec
sbbb
loop
imul
or
popa
cmp
cmpsl
sbb
leave
adc
push
fsts
dec
pop
inc
imul
sbb
pusha
in
outsl
or
inc
xchg
scas
inc
out
sbb
mov
cld
mov
aas
fs
xchg
sbb
adc
and
cmp
dec
and
icebp
xchg
push
icebp
int
mov
addr16
add
inc
dec
je
nop
ret
adc
jg
stos
cmpsl
notl
test
inc
xchg
and
in
loopne
sub
fimuls
push
std
mov
xor
mov
jecxz
in
push
adc
mov
dec
out
adc
add
push
ror
sbb
out
dec
imul
cmp
cmp
pop
pushf
popf
jno
loope
jp
mov
lahf
sahf
pop
mov
stc
lds
push
test
pusha
pop
sub
mov
mov
fisubs
daa
sub
in
and
arpl
jl
testl
mov
std
pop
fs
and
pop
push
cli
ljmp
in
xor
xor
rcrl
and
inc
fs
jg
mov
addr16
addr16
addl
ja
inc
jbe
mov
testl
movsl
pop
and
aam
push
sub
in
jecxz
or
cltd
je
pop
mov
sbb
cli
test
stos
push
jg
iret
faddl
scas
aad
add
mov
xor
pop
testb
fisttpll
inc
repnz
int3
shrl
repnz
sti
int
xchg
stc
xchg
fwait
ret
xor
jne
mov
faddl
cmpb
push
sub
push
sub
icebp
andl
mov
pop
xor
xor
aam
mov
mov
fmul
jle
insl
cmpsb
mov
in
add
push
les
lahf
jle
mov
dec
push
bound
sbb
in
mov
and
and
cwtl
std
or
jmp
mov
mov
adc
xor
pop
dec
inc
sub
jle
test
int3
mov
pop
mov
mov
and
pop
mov
push
mov
push
ja
push
cli
dec
sbb
sbb
push
pop
repz
lock
cli
dec
out
sbb
mov
inc
sbb
cmp
pop
popf
mov
jecxz
mov
dec
jmp
pop
insb
or
and
push
mov
jns
jmp
lods
jo
and
mov
xchg
gs
adc
xchg
push
lods
into
xlat
rclb
cmp
test
imul
mov
mov
rclb
ja
dec
sbb
aam
jmp
pop
je
imul
inc
lret
mov
mulb
sti
xchg
xor
pop
sbb
jecxz
shlb
insb
push
or
sbb
jae
jmp
mov
pop
push
mov
sub
xchg
aam
push
and
and
push
mov
daa
or
inc
hlt
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
jmp
clc
mov
cmpl
test
jp
pop
jp
dec
ljmp
ja
lea
sbb
andb
jbe
addr16
and
pop
ss
xchg
xchg
mov
sub
lds
inc
cmp
cmp
xchg
scas
in
sub
push
jge
mov
stos
loop
xor
pop
sub
sbb
mov
stc
adc
dec
pop
xchg
daa
or
xorb
jge
out
adc
sbb
cmpsb
lods
aas
mov
test
push
fsubrp
test
xor
adc
xchg
jmp
inc
cs
scas
in
popf
inc
dec
mov
imul
scas
cmp
repz
inc
lret
or
push
jnp
dec
xchg
or
fwait
cmp
jl
lcall
dec
sbb
pop
loopne
xchg
mov
add
popl
inc
mov
adc
out
or
xchg
fildl
aaa
in
in
ficompl
jnp
pop
sbb
sub
inc
pop
int3
addr16
inc
enter
fwait
xlat
cltd
stc
and
aas
sbb
cmp
cmpsl
dec
pop
jmp
pop
icebp
fidivrl
cmpsl
lret
jle
stos
in
lcall
ret
cmp
add
push
adc
mov
movsb
mov
into
ja
movzbl
push
mov
jg
mov
adcb
pop
or
jo
cld
popa
push
shlb
repz
imul
adc
mov
and
shlb
pop
outsl
ss
sub
add
loop
loope
jmp
iret
push
mov
sbb
xlat
sahf
jne
lcall
inc
or
cmpsb
inc
xchg
enter
imul
test
fimuls
and
testb
push
nop
lods
out
mov
adc
lea
mov
and
push
pop
mov
jo
xchg
inc
enter
aas
dec
cmp
loop
or
inc
int
faddp
repz
xor
mov
lods
jmp
jno
jl
push
cmp
pop
movsl
add
adc
imul
and
xchg
ss
in
sbb
and
mov
loop
shl
fwait
inc
nop
fistpll
or
lea
out
nop
push
in
jmp
sahf
test
stos
les
clc
xchg
mov
js
cwtl
scas
push
or
lods
and
out
nop
stc
sbb
mov
mov
fs
aad
insb
and
imul
jno
add
dec
cmpsl
cmpsl
aam
outsl
xlat
loope
mov
jo
or
lret
cwtl
xchg
arpl
push
push
or
push
pop
cmpsl
repnz
cmp
sbb
pushf
mov
loop
pop
cmp
or
sbb
xchg
push
fmulp
lea
dec
or
ret
xchg
dec
push
mov
pop
xlat
mov
mov
or
xor
cmpb
xchg
jae
setns
out
push
imul
into
sub
testb
ja
cli
fsubl
aam
cli
mov
xchg
jns
lret
lods
and
sub
sub
ds
push
sub
sub
test
xor
push
lret
jnp
and
imull
cld
jns
negb
inc
lods
fiaddl
js
aas
hlt
xlat
and
loopne
fisttpll
cmpsb
cmpsl
in
stos
mov
push
sub
sbb
pop
std
jp
arpl
jle
cmc
jge
out
dec
push
mov
mov
fcmovnb
stc
push
into
xchg
sbb
in
sahf
adc
insb
sahf
cmp
push
jno
sarl
lcall
pushf
xchg
pop
addr16
aas
lea
cwtl
jge
call
dec
push
fisubs
mov
inc
lahf
inc
jl
dec
push
xor
xchg
cmp
or
mov
push
cmp
movsl
xor
mov
mov
ret
or
cmp
lods
negb
mov
shrl
in
fmull
and
pushf
mov
fiadds
dec
cli
push
addl
dec
or
and
loope
adc
pop
inc
adcb
xchg
push
out
add
push
movsl
jl
and
xchg
mov
lds
ja
in
xlat
adc
pop
loope
in
lods
jo
cs
and
out
push
xchg
out
adc
in
add
movsb
cli
mov
loope
rorb
sub
add
cltd
mov
nop
inc
lock
dec
or
jnp
out
scas
sti
adcl
mov
insb
push
clc
or
data16
xchg
movsl
lock
fsubrl
jge
std
mov
jp
cmp
inc
pop
leave
pop
cmp
adc
popf
cmp
stc
jecxz
ror
or
cmpsb
aam
pushf
and
sub
stos
inc
cltd
std
xchg
daa
pop
inc
push
notb
sub
add
cmc
jp
imul
sbb
sbb
mov
ret
enter
lcall
pop
sub
sbb
mov
pop
aaa
sub
in
daa
mov
sti
and
orb
data16
or
pop
sbb
add
jg
jle
mov
movsl
jnp
xor
cltd
sub
insl
adc
movsb
xchg
call
add
and
fcoms
fidivrs
pop
aaa
movsb
pop
icebp
popf
out
aas
xchg
and
dec
mov
dec
sub
cwtl
daa
in
xchg
inc
push
shl
mov
mov
cmp
add
jae
mov
mov
nopl
sbb
nop
movq
inc
ja
nop
inc
jbe
pushf
dec
and
pop
call
push
bound
cmp
push
scas
jno
pop
push
dec
mov
fdivs
daa
sub
push
test
lea
stos
cmp
mov
insb
dec
jbe
xor
fmuls
stos
or
push
lcall
icebp
fists
inc
cs
mov
and
add
stc
bound
in
add
mov
mov
outsl
add
outsb
sub
hlt
fcomps
scas
int
jns
rcrl
int
lods
push
pop
pop
loopne
xchg
enter
idivl
fsubs
jns
xor
and
fdivp
jae
jb
sbb
lock
xchg
movsb
outsl
cwtl
mov
mov
mov
out
add
cmc
js
add
scas
imul
xor
dec
push
cli
ds
pop
jmp
pop
lret
int3
pop
fisubs
sub
and
dec
negl
in
ljmp
jecxz
and
stos
fyl2x
cmpsl
insl
mov
pop
pop
mov
pushf
arpl
jne
jecxz
add
jns
repnz
cmpsl
mov
pop
push
mov
jb
lret
cwtl
shrb
sahf
jns
xchg
in
and
test
movsb
and
out
negl
fwait
jae
and
jb
fistps
xor
mov
fxam
jbe
js
push
push
cmpsl
insb
movsb
cmp
scas
or
cltd
xchg
popf
inc
ljmp
enter
scas
mov
fsubrs
sti
xor
pop
test
icebp
in
in
hlt
sahf
mov
dec
mov
add
ret
mov
xcrypt-ctr
cmpsl
lahf
adc
pop
pop
cmp
or
lret
test
nop
lock
and
repz
xor
cmp
icebp
adc
pop
sub
xchg
aaa
xor
xchg
in
jecxz
xchg
xor
jg
cltd
popa
pushw
repnz
sahf
jge
lods
out
or
or
je
sbbb
and
sub
mov
loopne
or
mov
aaa
xchg
sbb
je
call
adc
mov
dec
lea
cmpsl
clc
cld
jle
sbb
ja
inc
xor
push
or
addr16
cli
add
jnp
lods
add
insb
mov
and
jg
add
inc
and
jns
jle
stos
cmp
xorb
sbb
xchg
lcall
dec
hlt
ret
mov
lods
mov
pop
or
int3
ret
pop
fdivrs
int
in
jno
lea
sbb
mov
daa
lods
jo
mov
jmp
lods
inc
adc
mov
mulb
orb
fcomip
push
insl
pop
stos
fisubl
in
sti
stos
push
pushf
mov
lods
xchg
sbb
add
jp
lret
push
inc
mov
sub
fadd
into
leave
mov
jecxz
dec
jge
clc
jb
pop
aad
sub
jns
frstor
cmpsb
jle
mov
lds
shrl
push
and
add
call
cli
sub
lcall
es
push
inc
mov
xchg
jns
sahf
xchg
mov
jp
jmp
adc
pusha
sub
jo
or
push
aas
cmp
imull
adc
or
fnstsw
popa
or
or
sub
ja
mov
xchg
or
jl
daa
imul
out
ljmp
add
adc
inc
and
xor
adc
mov
outsl
fnstcw
ret
xchg
movsb
jae
adc
ror
jmp
lds
test
sub
pop
mov
fdiv
in
or
pop
add
andb
mov
movsb
daa
or
or
mov
xor
mov
fsts
pop
cmp
mov
fwait
mov
das
mov
inc
inc
in
cmp
into
mov
jp
imul
mov
jg
gs
stos
pop
jne
jp
jge
mov
mov
and
pop
jmp
outsb
push
repz
or
push
enter
inc
popa
sbb
popf
nop
hlt
aam
test
dec
sub
pop
js
adc
sub
adc
cltd
xor
sbb
pop
cli
mov
enter
bound
hlt
jle
addl
out
pop
cwtl
cmc
pavgb
jne
mov
jp
in
pop
mov
xchg
mov
repnz
shll
shrl
add
fidivrl
jne
xchg
out
mov
sbb
push
mov
dec
xor
sub
cmpsb
sbb
cmpsb
mov
xchg
leave
pop
add
push
inc
xor
mov
adc
mov
sti
pop
cmp
xor
dec
sti
pop
iret
rcrl
aad
xor
jp
int3
test
pop
push
out
flds
shll
or
adc
sub
aaa
adc
and
loop
addl
jae
mov
std
lcall
ror
or
add
repz
push
les
sub
push
mov
inc
sbb
sbb
in
cs
fstps
lahf
or
lret
cmp
movsl
ret
jae
sbb
adc
and
add
int3
xchg
popa
push
push
cmp
fisttps
shlb
adc
ja
cmc
sub
cmp
cmpsb
xorb
mov
lds
sti
sahf
push
inc
and
push
push
je
cmp
jle
mov
jns
jl
rdseed
fsubl
pop
sbb
mov
sbb
push
pop
lea
test
add
cmp
xchg
pusha
xor
ljmp
sbb
loope
cmp
outsl
and
adc
sbb
lahf
test
xchg
add
push
fsubs
lret
pop
pop
sub
int
pop
mov
lea
and
dec
pop
and
jmp
rcl
rorl
out
mov
in
sbb
sti
dec
jb
cmc
out
pop
xor
stos
daa
mov
pop
mov
dec
push
rorl
mov
mov
mov
bswap
aaa
sbb
adc
ss
jle
jecxz
adc
mov
mov
add
clc
sub
lret
sti
enter
jns
add
push
mov
or
sub
push
sti
jge
or
xor
into
push
mov
xor
push
es
jle
repnz
insl
out
push
insl
sbb
mov
sbb
ret
mov
mov
cmpl
shll
and
xor
lea
inc
jl
dec
lcall
fcoml
cmpsl
in
push
fwait
xchg
sbb
loop
daa
push
das
sub
and
xchg
jg
ljmp
pop
or
mov
sbb
insb
rorb
xchg
xor
outsb
and
and
cmp
fs
cs
push
test
cltd
pop
fmull
loop
dec
mov
xchg
mov
ljmp
mov
and
daa
pop
test
inc
mov
fld1
mov
inc
clc
shll
rclb
sub
rdpmc
jo
rcrb
jne
sahf
repnz
rcl
inc
aam
mov
fdivl
cmp
in
cmp
xchg
stos
dec
cmp
or
push
bound
clc
out
adc
xor
outsl
push
lock
imul
xlat
cld
sahf
ja
mov
testb
inc
adcl
cld
std
mov
cmp
dec
mov
es
in
push
mov
mov
stc
xchg
arpl
scas
adc
jg
subl
nop
dec
iret
outsb
push
xor
movlps
sbb
mov
cmpsl
jne
lock
lock
xchg
scas
out
cmpsb
cmc
pop
xor
sub
mov
adc
push
push
sarl
sar
add
dec
rorl
stos
dec
mov
aas
out
lea
sub
dec
xchg
mov
inc
fsubrs
mov
jbe
rol
or
pop
or
pop
into
pop
in
hlt
lret
dec
dec
popl
pop
jae
and
dec
call
push
ss
jno
int
xchg
jge
inc
gs
movl
add
push
jnp
xor
bound
mov
mov
cli
xchg
push
pop
mov
mov
inc
push
stc
sbb
inc
loop
ja
test
push
push
cmpsl
xchg
loop
add
ds
fs
jnp
leave
iret
xor
out
js
stc
adc
in
outsb
repz
rorb
mov
xchg
aas
sti
clc
xchg
pusha
push
or
out
mov
fmulp
jle
fsubs
and
sbb
jg
in
cltd
push
fstpl
arpl
add
jo
stc
mov
mov
rclb
rcll
xchg
nopl
aad
inc
and
and
sub
jecxz
es
shlb
insl
or
dec
push
push
mov
inc
aas
lods
inc
imul
int3
cmc
xlat
pop
mov
dec
jp
xor
or
or
add
or
or
jb
fidivl
not
mov
cmc
lcall
mov
pop
push
stos
sbb
push
sbb
cmp
jge
sti
mov
or
pop
movsl
rcl
subl
popa
xchg
movsl
jg
pop
loop
rcrb
or
arpl
jl
mov
push
ja
fwait
test
xchg
or
or
xchg
jp
inc
add
insb
pop
cmc
and
adc
fildl
scas
out
xchg
dec
sbb
xor
push
bound
inc
test
mov
jne
jl
cltd
arpl
mov
jo
sbb
mov
inc
jb
movsb
shlb
jnp
sbb
cli
jne
mov
mov
ret
jge
mov
dec
mov
xor
push
cltd
icebp
and
in
push
jo
call
sbb
xchg
nop
mov
inc
sbb
in
daa
je
jbe,pn
push
push
stc
ss
fwait
cwtl
fbstp
ljmp
test
aam
sub
add
or
lods
into
xchg
mov
xor
xchg
push
stos
or
or
sub
xchg
mov
mov
lcall
mov
cmp
push
pop
xchg
pop
mov
cmpsb
into
push
es
outsb
movsl
xchg
inc
or
inc
jmp
sbb
and
xchg
add
lock
cmp
loopne
leave
add
inc
pop
add
in
iret
test
fidivrl
cwtl
sub
in
mov
mov
xchg
or
and
add
fisubs
inc
mov
cwtl
daa
int
sti
inc
scas
push
addr16
mov
push
enter
enter
add
push
and
sub
push
es
add
loope
add
mov
repnz
pop
das
stos
dec
push
scas
push
push
adc
xor
jns
ja,pn
inc
cmp
or
roll
sbb
mov
xchg
sti
movsl
test
push
das
adc
popf
testl
popf
mov
xchg
in
push
mov
xor
jecxz
jne
cmpsb
movsb
dec
jb
shlb
jo
sbb
dec
add
outsl
in
gs
and
ds
int3
or
or
mov
cmp
das
stos
sbb
inc
in
mov
pop
ret
addr16
jmp
into
push
push
sbb
jge
sbb
xchg
and
add
aad
jns
cmp
stc
cmp
sti
shl
fwait
movsl
aad
out
add
into
add
imul
dec
push
or
pop
mov
xor
loopne
testl
mov
xor
out
jb
sbb
andl
fstpt
inc
mov
popa
or
mov
push
and
out
enter
xor
pop
push
icebp
rcr
mov
adc
stos
jae
push
pop
das
leave
loop
icebp
cmp
and
je
push
and
in
dec
cmp
and
fsubrl
sub
fwait
mov
mov
insl
dec
ss
fwait
stos
bound
aaa
nop
mov
mov
xchg
adc
mov
sti
pop
shl
outsl
sub
adc
xor
inc
out
lds
xchg
imul
push
mov
xor
sti
mov
sbb
cltd
pusha
xor
cmovge
stc
inc
push
loope
repz
loope
fucomi
clc
or
xor
popf
dec
sbb
push
ror
adc
push
in
or
mov
pop
xor
add
xor
aad
cld
inc
fnstsw
mov
xchg
orb
enter
idivl
scas
push
and
leave
inc
xchg
lcall
flds
xchg
inc
sub
xor
icebp
sbb
lret
ficoml
xchg
mov
outsl
test
pusha
push
and
adc
xlat
out
shl
mov
loope
jb
addr16
inc
in
mov
and
imul
insl
pop
sbb
daa
jle
xor
stos
clc
lock
rorb
or
out
mov
mov
add
dec
cmp
out
mov
mov
jbe
pop
andl
or
xlat
jae
inc
jp
shr
mov
and
out
sbb
loope
fwait
mov
lock
sbb
lret
leave
stc
jmp
push
loope
gs
into
popf
inc
fiadds
xchg
xchg
xor
fidivs
sub
stc
mov
mov
sub
les
sub
xchg
adc
fbstp
data16
jno
inc
or
stos
idiv
jb
stc
loopne
hlt
clc
inc
push
mov
pop
mov
movsb
mov
push
xor
repnz
cltd
jp
cmpsl
xlat
jge
pop
aam
sarl
mov
inc
add
loopne
das
inc
cmpsl
mov
mov
sti
dec
inc
popf
push
jnp
je
pop
fdivr
mov
rcr
pop
pop
pop
mov
cmc
les
cli
sbbl
mov
mov
and
lahf
ds
adc
mov
sbb
dec
gs
sub
adc
or
enter
add
push
in
mov
cmp
mov
jge
loopne
mul
in
jecxz
mov
mov
jns
sub
mov
mov
cld
sub
jle
cs
mov
stc
inc
xor
sbb
mov
shll
mov
push
mov
pusha
mov
pop
shrb
mov
jmp
jae
xor
dec
sub
sbb
ficomps
fstpl
pop
push
movl
arpl
into
mov
dec
jnp
int
iret
sub
int
jae
cs
hlt
lret
jge
cmp
jns
sahf
inc
int3
js
popa
call
add
or
imul
add
dec
xchg
arpl
lahf
jmp
mov
loop
clc
sarl
push
push
xor
inc
mov
mov
in
jecxz
push
inc
ss
add
inc
jne
jp
push
mov
dec
mov
add
mov
sub
fwait
aad
push
aas
cmpsl
jno
inc
sbb
movsb
test
rcr
in
ja
adc
and
inc
xor
movb
mov
jb
xorl
int
ret
sub
dec
pop
ja
sub
jecxz
loope
test
mov
sti
cmc
adc
pusha
cmpsb
push
sbb
test
cmp
add
jo
jecxz
enter
mov
xor
in
pop
lods
jae
sub
ficoml
cmpl
jge
pop
rep
stos
add
lods
sub
stc
jnp
nop
mov
jnp
push
xchg
jmp
std
into
xchg
sub
push
pop
add
dec
jno
sti
lret
bound
arpl
dec
add
in
pop
adc
shll
je
loope
ljmp
lea
mov
rol
pop
jp
or
in
and
repz
jne
gs
push
imul
inc
push
shll
jecxz
push
inc
je
aas
cmpsl
push
cmpsb
dec
adcb
data16
and
mov
and
out
out
rorb
incb
sbb
xchg
sbb
test
sub
xchg
fsubrl
cmp
xchg
test
push
mov
sub
cs
or
sar
adc
mov
shrl
pop
into
imul
test
add
adc
mov
and
dec
fimull
cmpsl
or
int3
sub
push
cmp
sbb
ret
xor
sbb
gs
pop
cmp
xorb
mov
pushf
mov
dec
dec
push
add
mov
cmp
fmuls
nop
sbb
push
loop
pop
push
sarl
gs
jns
stc
icebp
mov
insl
pop
dec
or
cmc
notl
xchg
ret
rcr
cmp
outsb
std
add
das
in
mulb
mov
mov
xchg
addb
shlb
fcomps
pop
je
jl
lock
mov
mov
jbe
rcl
sbb
push
mov
sbb
jl
add
outsw
jo
pop
jns
dec
sbb
scas
bound
or
mov
mov
popa
test
sbb
cmc
mov
or
aaa
or
inc
mov
sti
mov
jmp
mov
decl
cwtl
outsl
pop
mov
or
fmull
mov
inc
cmpsl
xchg
cli
into
inc
adc
call
sbb
daa
aaa
leave
push
jo
jae
sub
and
sbb
out
inc
and
lahf
daa
out
cld
sub
xchg
repnz
repz
jo
inc
sahf
pop
outsl
mov
adc
xor
mov
cmp
rcrb
lret
xchg
or
ficompl
inc
push
out
jl
test
jae
sbb
ds
fdivp
into
add
loopne
popf
nop
push
sbb
inc
in
mov
cmp
mov
call
xor
and
loopne
xchg
hlt
sbb
js
pop
adc
repnz
mov
ret
js
subl
aad
fldenv
add
add
adc
pop
xlat
push
push
loope
adc
push
ljmp
cmp
push
xchg
dec
movsl
rcr
mov
dec
add
insl
mov
cmp
or
push
jbe
pop
sbb
repz
in
ret
andb
lods
adc
fisttps
adc
lret
sti
add
adc
imul
popa
mov
stos
push
fisttpll
fildl
xchg
leave
mov
rol
pop
out
shlb
std
arpl
dec
daa
movsl
push
dec
lret
jle
insb
sbb
push
test
mov
xchg
pop
push
xchg
pop
fcoml
pop
fiaddl
or
jns
loope
ds
test
mov
clc
or
pop
test
xor
xchg
in
jnp
xchg
push
les
mull
decl
or
dec
pop
leave
inc
in
test
gs
mov
cmp
mov
ret
decb
jg
in
sbb
scas
int
lock
gs
lret
shll
pop
xor
mov
dec
stos
mov
lret
cwtl
incb
or
jle
ret
jg
pop
rolb
popf
repz
lds
out
stc
outsl
sbb
in
mov
push
movsl
push
jg
popa
addr16
xchg
adc
or
rorb
std
test
push
in
int3
inc
jb
mov
inc
jecxz
mov
in
push
inc
add
inc
xchg
scas
nop
add
or
or
addr16
cmpsl
pop
das
mov
das
cmp
push
dec
jecxz
fs
mov
adc
sbb
popa
xchg
xlat
fildll
iret
jle
ret
rcrl
pop
sbb
add
xchg
pop
push
scas
aas
sar
popf
ja
cltd
adc
cs
sbb
pop
add
inc
fadd
lods
cli
inc
inc
add
jnp
shll
loope
mov
lret
outsl
xchg
sub
mov
insl
arpl
jbe
fmull
push
mov
inc
xchg
jo
jb
adc
in
hlt
pop
mov
xchg
or
lret
xchg
or
std
test
lret
dec
sbbl
shlb
imul
stos
sarl
imul
pop
rcrb
inc
mov
call
lock
movsl
das
xor
repz
dec
push
in
fstps
push
cmp
insb
push
adc
scas
pop
mov
retw
aas
push
jns
push
mov
xchg
dec
pop
fcomp
push
cmp
fisubl
adc
mov
and
aas
mov
hlt
push
int3
mov
cmp
inc
rcrl
sbb
mov
sarb
movsl
add
int
mull
out
movsb
add
jae
mov
adc
mov
inc
mov
pop
and
ja
repz
stos
inc
fdivs
enter
push
mov
xchg
fnstenv
and
fdivs
test
push
fidivrs
and
cmp
sbb
xchg
sub
sbb
cmp
mov
push
jl
cli
add
pushf
fldcw
jecxz
pop
jmp
divl
addr16
aas
fs
xchg
enter
test
out
movsl
sbb
push
push
aam
sub
stc
shrl
pop
sbb
jge
push
cmp
push
data16
int3
inc
and
fcoml
popa
add
cmpsl
and
icebp
out
pop
mov
out
push
and
sub
shlb
mov
mov
xchg
and
in
jmp
mov
and
orl
cli
filds
sbb
or
shld
fildll
repz
inc
pop
out
xor
adc
xchg
sbb
push
mov
inc
popa
adc
lock
outsl
sar
mov
in
lret
mov
dec
call
incl
add
dec
movsl
stos
sub
jmp
jp
outsl
cmp
push
shrb
jnp
sbb
lods
lret
adc
pop
sbb
jmp
mov
hlt
movsbl
mov
xchg
stos
add
jo
sti
out
xor
jae
aas
push
insl
dec
mov
stc
cmp
or
mov
or
repnz
adc
stos
jbe
pop
adc
sub
movsl
xor
add
fisubs
ret
imul
shl
pop
xchg
add
ret
pop
gs
popf
inc
in
xchg
push
shr
xchg
lods
popf
call
fistl
sub
es
in
imul
addr16
dec
push
in
push
and
out
adcb
inc
cmp
push
push
sbb
sarb
pop
cmpsb
or
ret
iret
sbb
ds
dec
mov
and
or
xchg
ret
cmp
add
pushf
sbb
scas
push
mov
popf
rol
cmc
popf
popf
push
pop
lods
mov
push
mov
and
xchg
cmc
mov
xorl
rol
call
and
xchg
les
xchg
mov
jb
mov
mov
stos
mov
mov
fiadds
std
in
push
and
jae
add
jmp
stc
leave
push
lret
or
vshufpd
orl
cld
jge
push
or
dec
test
sub
inc
jle
lods
dec
out
mov
xchg
jecxz
adcl
xor
lcall
sbb
imul
inc
fnsave
mov
jno
add
hlt
xor
pop
ja
and
xchg
cmp
inc
lock
loop
lock
mov
push
gs
cmp
mov
push
mov
push
and
mov
aad
je
cli
imul
mov
dec
lret
lock
adc
pushf
pop
and
mov
dec
out
cmp
xor
dec
inc
movb
testl
mov
popf
sbb
sbb
jle
push
jge
pop
cltd
mov
ljmp
std
in
mov
test
jbe
std
lahf
int3
out
in
inc
mov
dec
imul
inc
loop
std
in
mov
js
or
ds
jmp
push
cmp
in
iret
xchg
mov
dec
mov
imul
xor
rcrl
sbb
jae
out
sbb
xchg
aam
mov
xor
and
outsl
scas
inc
pusha
daa
xchg
cli
testl
and
jle
or
rcll
sarl
xchg
xor
std
sub
cmp
cmp
dec
gs
cs
xor
xorl
mov
pop
ret
and
inc
push
cld
dec
add
push
mov
leave
int
sub
sub
push
push
ja
and
das
loop
push
mov
adc
scas
icebp
add
add
ficoml
iret
out
fimull
pop
int
test
add
push
push
push
out
aad
clc
sub
push
in
xchg
adc
xor
shrb
cmp
enter
ret
out
test
into
xor
jg
addb
adc
lock
lcall
out
inc
leave
xchg
or
inc
pop
mov
scas
sbb
pop
stc
dec
stos
xor
xchg
pop
enter
pop
pop
fisubrs
mov
and
cs
ds
stc
push
stc
testl
jmp
iret
jnp
popf
enter
bound
fidivrl
cmp
xchg
push
movsb
xchg
gs
shr
cmc
fimull
mov
mov
xchg
leave
pop
fstpt
js
es
mov
jnp
std
clc
lret
ret
or
cmp
aam
pop
push
lcall
out
adc
xor
aaa
mov
arpl
lods
aas
aaa
and
pop
xchg
pop
mov
push
mov
scas
pop
jne
sbb
in
or
cmp
cmp
int3
mov
fwait
push
dec
xchg
or
mov
xchg
jl
xchg
int
lcall
or
xchg
aaa
xlat
and
mov
push
add
ja
and
cld
ret
js
icebp
loopne
cmpl
mov
add
cmpsb
push
lcall
mov
pop
roll
inc
xchg
aam
push
mov
xchg
mull
and
add
adcb
push
sbb
jae
mov
sub
mov
ss
xor
mov
push
mov
xchg
sahf
jle
jno
out
xchg
in
sub
cwtl
shlb
cmp
mov
fwait
sub
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
add
movl
xorl
lea
sbb
mov
add
push
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
mov
sub
xor
mov
xor
mov
sub
lea
movzbl
adc
mov
mov
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
push
call
jmp
mov
xor
add
mov
mov
add
mov
mov
addl
add
sbb
push
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
movzbl
sbb
mov
adc
mov
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
add
dec
mov
jmp
mov
xorl
add
cmp
movl
je
movl
mov
movl
jmp
mov
mov
cmp
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
add
mov
add
xor
or
add
mov
sbb
mov
add
mov
xor
movl
add
addl
imul
addl
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
jmp
neg
jns
xchg
mov
popf
outsb
mov
inc
jl
xchg
mov
add
inc
pop
jp
or
mov
jp
inc
xor
xchg
das
mov
jo
jle
sbb
sub
and
cmpsb
mov
mov
push
mov
xor
outsb
and
adc
fwait
sbb
mov
sub
out
ret
pop
fbld
cmpb
movsl
jns
fsubs
mov
movsl
dec
shrb
sbb
cmpl
mov
test
icebp
out
faddp
fdiv
dec
fimull
and
cmp
pop
shll
push
adc
dec
mov
lock
insb
stos
pop
imul
and
data16
dec
jbe
xor
cmpsl
scas
mov
xor
sbb
add
popa
lods
push
and
xor
mov
movsb
orb
insb
inc
incb
out
addr16
pushl
adc
mov
fdiv
aas
int3
sub
rcll
insl
mul
fmull
out
or
jp
fstps
les
mov
sbb
and
or
push
andl
inc
lods
aad
jo
xchg
push
pop
adc
cmp
cmp
xor
andl
dec
or
rclb
add
push
adc
xchg
xchg
adc
daa
iret
or
pop
ffreep
sti
loopne
jecxz
lock
enter
lods
lods
frstor
dec
pop
repz
das
ja
shlb
mov
mov
jns
fwait
push
dec
sub
and
sahf
fnstcw
jmp
xchg
idivl
in
mov
mov
testl
stc
pop
out
mov
pusha
movsb
inc
test
add
cmp
mov
mov
xor
sbb
je
pop
dec
push
jae
push
xchg
adc
ljmp
movsl
mov
cltd
push
xor
jne
fdivr
sahf
dec
add
in
dec
push
mov
in
push
xchg
fstpl
fcmovb
loope
adc
jae
mov
ja
lret
fcmovb
push
xchg
xchg
dec
mov
xchg
pop
mov
ret
in
pop
jb,pt
iret
xor
shll
jle
ret
jne
inc
testl
aas
movsl
sbb
fninit
dec
fmuls
call
hlt
sub
push
js
mov
repz
lahf
mov
mov
push
movsl
jne
pop
dec
test
dec
or
dec
adc
mov
sbb
das
testb
daa
cld
rorl
icebp
wbinvd
push
xor
xchg
insl
push
inc
dec
pop
cmp
shll
scas
outsb
lods
clc
std
aam
movsb
add
sahf
sub
cltd
adc
mov
inc
testl
jecxz
xchg
and
in
loopne
int
out
scas
in
ja
cmp
sbb
daa
dec
and
into
and
pop
push
sti
fidivrl
cld
stc
enter
sbb
cs
lods
je
js
aas
xchg
and
nop
sub
fidivrs
inc
fdivrl
jmp
testb
sub
jo
pusha
cli
add
jmp
in
jo
inc
mov
dec
dec
adc
sti
mov
pushf
test
je
pop
fildl
sub
push
and
loop
lcall
enter
add
rcrb
out
fwait
xor
repz
test
imul
je
hlt
loopne
inc
lock
xchg
in
cmp
dec
sbb
data16
mov
dec
fdivl
js
sbb
add
xlat
xchg
lcall
bound
sbb
cld
xor
out
es
test
loope
sbb
insl
xchg
out
jb
shll
enter
inc
stc
mov
adc
imul
cld
add
ss
arpl
xor
mov
xchg
and
jmp
mov
xchg
sahf
inc
adc
repnz
imul
fistps
mov
lods
fwait
js
jae
shl
push
cli
cmp
popf
xor
push
push
push
loopne
pop
jbe
mov
mov
ljmp
ss
inc
in
dec
jns
adc
push
test
xor
push
jl
mov
xchg
xor
mov
mov
ret
stc
addl
stos
dec
inc
movsl
mov
cmovns
pop
dec
dec
les
shlb
xor
mov
icebp
out
int
cmpsb
jns
in
hlt
mov
mul
or
and
repz
in
sbb
mov
shl
fstpt
jecxz
into
push
leave
and
aaa
loopne
mov
cli
mov
imul
mov
add
mov
and
xchg
mov
push
adc
lret
or
jne
dec
lock
dec
das
sub
mov
mov
and
in
add
xor
ljmp
roll
jns
call
inc
or
nop
pop
sub
and
add
inc
cmpsb
shl
jno
adc
rcll
push
mov
adc
dec
jp
mov
imul
std
stos
or
xor
pop
fmull
mov
cld
xor
xchg
negb
adc
pop
cltd
mov
pop
lock
xor
push
movsb
cmp
or
xor
clc
sub
or
jo
sbb
pop
adc
popa
adc
and
repnz
dec
mov
adc
adc
lea
insb
insl
push
jo
outsb
imul
cwtl
dec
pop
sub
lods
push
cmp
sahf
mov
mov
hlt
adcl
mov
pop
mov
jmp
out
lret
fs
mov
jae
dec
rclb
cs
mov
push
popa
lea
call
adc
stos
std
push
mov
ret
cmp
or
sbb
inc
popa
out
mov
enter
lret
dec
outsl
inc
mov
xor
fimuls
pop
lods
sub
shll
pop
test
xchg
lret
mov
sti
pop
pusha
dec
mov
ret
cmpl
ss
xor
in
jg
mov
das
xchg
and
add
mov
and
dec
xchg
popf
pop
jmp
or
xchg
adc
stos
shlb
mov
mov
stc
popf
sbb
and
shlb
push
jmp
nop
dec
xlat
cmp
inc
xchg
outsl
add
dec
aam
out
test
arpl
adc
push
add
dec
push
in
lret
leave
or
stos
js
outsl
xor
popa
pop
loopne
add
mov
ljmp
pop
lods
ret
sub
aad
dec
rcll
out
cmp
push
and
out
ljmp
cmp
pop
or
out
sub
adc
inc
xchg
rcrl
iret
andb
loop
ja
add
movsl
add
lods
mov
pop
cmp
lcall
dec
pop
std
add
mov
xor
dec
push
rcrl
and
mov
and
cmp
jle
outsl
jo
jnp
scas
aas
bound
cmp
inc
insl
scas
jmp
out
ret
in
lock
jae
inc
jo
inc
add
push
jne
and
xor
and
sti
add
enter
sti
out
xor
mov
repz
bound
cltd
test
cmp
or
pop
rcl
pop
out
add
jge
sub
dec
sbb
xor
sahf
lock
andb
xchg
les
int
jmp
mov
subl
aad
jmp
xlat
push
call
idiv
call
les
iret
xchg
aad
jl
adc
jle
clc
xchg
adc
cmpsb
adc
ficompl
xchg
and
or
in
std
jecxz
sbb
mov
inc
push
daa
pop
xor
xchg
push
adc
in
adc
or
mov
push
es
enter
push
repnz
movl
aas
fistps
jmp
loope
pop
mov
add
js
xchg
sub
lret
cmp
popa
test
sub
stos
jg
adc
fistpll
icebp
push
js
sub
pop
push
push
aad
xor
adc
std
shlb
testb
pop
push
mov
adc
inc
lods
outsb
pusha
std
cmp
push
mov
xlat
cli
cltd
jnp
jnp
sub
mov
mov
loopne
sub
shll
int3
imul
and
shlb
mov
loop
sbb
jb
sbb
xor
sbb
repnz
test
xor
push
or
les
data16
mov
xchg
jmp
add
fdivs
arpl
and
xor
lock
jp
fcompl
pop
mov
std
shrd
jp
cmpsb
xor
add
sti
in
movsb
fsts
arpl
mov
cmpsb
sbb
adc
outsb
dec
adc
add
xchg
sub
push
cmp
inc
data16
movsl
pop
xchg
ficomps
jbe
test
cltd
xchg
add
outsb
sbb
push
push
mov
or
dec
out
mov
fcompl
mov
pop
xor
and
out
movsb
dec
add
roll
mov
arpl
jbe
fcomi
imul
addr16
mov
fldcw
sti
push
repnz
push
rorb
ret
subl
jbe
push
icebp
jnp
icebp
add
inc
push
aad
jg
mov
shr
ret
aad
stos
fmull
dec
mov
in
sbb
lahf
dec
cwtl
inc
jbe
add
cmpsl
int
jae
insb
mov
lcall
mov
add
or
fcoml
icebp
js
jmp
pushf
cli
fnsave
cmpsl
arpl
sbb
xor
fists
lret
inc
icebp
fcoms
ds
leave
xchg
cmp
dec
cltd
sbb
mov
xor
sbb
pushf
lahf
movsb
and
shlb
push
or
jp
xor
push
fldt
nop
or
repnz
lahf
cltd
int
icebp
lret
rolb
mov
add
sub
fwait
xor
mov
mov
cld
dec
jbe
std
push
data16
or
pop
sbb
sbb
aad
paddd
lret
in
addr16
lds
scas
pop
xor
and
movsb
movsb
loop
inc
into
and
xlat
jle
push
xchg
xchg
lea
xchg
lods
jl
or
in
aas
daa
mov
les
out
pop
adc
or
and
cs
js
and
loopne
push
rolb
cmp
pop
fisttpl
mov
lock
div
das
lods
fisubl
iret
aam
pop
cwtl
xor
cmp
movsb
mov
cmp
add
xor
fwait
cwtl
add
xchg
imulb
or
mov
jnp
pop
add
inc
jp
cmp
gs
xchg
jp
push
out
mov
fldl
adc
mov
push
rcrl
sbb
std
xchg
push
sub
mov
add
mov
lods
and
xchg
repz
jbe
push
inc
jbe
ljmp
xchg
pop
push
pop
mov
pop
pop
push
fwait
mov
inc
rcr
mov
xchg
outsl
popf
push
dec
rolb
mov
mov
fnstcw
mov
clc
pop
aad
add
pop
movsb
cmpsb
xchg
xchg
pusha
pop
loope
and
xchg
add
scas
adc
adc
std
lock
out
addr16
mov
pop
int3
add
jne
cmpsb
test
jmp
fldt
xor
repnz
pop
pop
and
inc
test
cmp
mov
mov
dec
fnstenv
into
bound
pop
lret
sbb
cmp
cmp
mov
and
add
mov
mov
mov
mov
push
cmp
mov
andl
push
inc
orl
pop
adc
push
jb
in
or
cmp
outsb
cmp
or
push
inc
jl
ret
sub
cmp
aaa
xchg
xorl
push
xchg
fnstcw
mov
sbb
loopne
inc
cs
mov
push
jecxz
push
pop
test
lcall
cwtl
aad
inc
sub
out
pop
inc
sbb
add
ds
aad
xchg
pmaddwd
andb
cltd
mul
xchg
xchg
idivl
dec
inc
inc
pop
sbb
and
paddw
addr16
xor
dec
inc
mov
iret
inc
call
pop
mov
imul
and
dec
arpl
ret
and
rolb
add
xor
cmp
dec
sbb
repnz
pop
lds
clc
xchg
stc
scas
and
aam
bound
test
xor
int3
hlt
outsb
repnz
cmpsl
adc
pop
cmp
xchg
shll
sbb
les
js
adc
jp
nop
push
je
inc
rcrl
sbb
fcompl
pop
rcll
inc
cmp
and
add
in
lods
je
lods
out
mov
fidivrs
dec
push
push
or
fstpl
mov
push
in
idivb
mov
out
clc
jns
jg
jb
or
dec
inc
dec
imul
sbb
jp
xchg
les
lds
xchg
aaa
jmp
cmpsl
adc
arpl
pop
inc
std
mov
stc
push
jne
dec
shlb
xchg
lock
imul
daa
popf
inc
jmp
testb
sbb
outsb
mov
sbb
xor
jp
mov
mov
pop
addr16
sub
stos
mov
lret
xor
loop
push
mov
fists
cmc
or
out
push
cmp
dec
repnz
popa
push
push
fmul
mov
es
cmpsl
inc
mov
repnz
sti
mov
pushf
incl
ret
mov
aad
and
shrb
cmp
daa
cmp
mov
les
add
xchg
xchg
loopne
ljmp
hlt
mov
push
pop
push
add
insl
sbb
pop
sbb
repnz
enter
mov
sub
xchg
xchg
cld
fs
test
mov
and
mov
or
es
faddl
outsb
leave
stos
dec
ror
fidivrl
jp
xchg
cli
pop
xchg
push
pop
mov
jmp
mov
in
inc
or
leave
or
jno
dec
add
jo
dec
sbb
jp
cmp
out
daa
cmpsb
xchg
ret
jnp
add
mov
movsb
push
jmp
pop
add
lods
loop
pop
and
push
loopne
jle
clc
pop
and
pusha
xchg
pop
aad
mov
rcr
inc
loopne
cltd
lcall
mov
fidivl
stc
push
int
fbstp
into
push
xor
lock
xchg
in
xchg
pop
iret
in
xor
stos
lret
mov
mov
push
cmc
clc
lds
ja
push
arpl
adc
sbb
int
cmpsb
pop
fs
mov
push
fcompl
test
out
jge
sbb
sub
mov
inc
fwait
data16
es
push
mov
fld
mov
insb
gs
push
mov
imul
cli
paddsb
lock
dec
mov
push
clc
mov
cmp
cmp
inc
add
or
mov
adc
inc
mov
andl
int
push
orl
or
dec
fisttpll
arpl
loop
sbb
insl
jnp
pop
data16
or
outsl
and
fiadds
popa
or
imul
xorb
jnp
add
and
out
xor
iret
rolb
sub
jae
repz
cmpsb
rolb
fldl
stos
cmc
xor
std
xchg
mov
dec
fs
rolb
dec
cmp
push
mov
imul
lea
or
pop
fadd
lcallw
add
xor
add
dec
jnp
cmp
jl
movsl
push
movsl
cmp
rcll
lds
cltd
subb
jl
dec
adc
call
push
xor
mov
fsubl
loope
in
addr16
mov
mov
stc
adc
leave
xor
scas
or
ss
test
dec
mov
lods
sti
bound
dec
mov
ds
jle
nop
or
fnstsw
push
repz
mov
in
jns
mov
fstl
int3
ret
jmp
and
fistpll
pop
jbe
xor
outsl
lcall
outsl
sbb
aad
in
dec
jbe
jmp
xchg
jmp
inc
inc
test
inc
sarl
lods
or
and
or
mov
lock
xlat
xchg
aam
in
inc
xor
std
xor
or
xchg
pop
jmp
jbe
repz
fcompl
push
and
fsin
rol
lahf
jne
shlb
inc
cmpsb
stos
shll
push
outsb
scas
dec
iret
roll
jb
cwtl
mov
es
test
test
stos
push
ds
sbb
jo
frstor
pop
pusha
paddusw
jmp
sub
cmp
jecxz
popa
mov
inc
or
es
or
mov
adc
cmp
in
adc
dec
fwait
pop
xorl
fildl
loop
xlat
enter
sbb
aas
int
scas
inc
dec
xchg
fwait
cs
adc
adc
push
sar
leave
inc
daa
decb
mov
lret
or
sbbl
pop
xor
mov
ljmp
jbe
dec
dec
enter
loopne
lea
les
iret
sti
xor
xchg
cmp
pop
or
push
push
cld
pop
xchg
xor
jge
icebp
mov
mov
shrb
orb
sbb
test
and
rorb
and
pop
mov
hlt
adc
jmp
mov
dec
jmp
lahf
or
xchg
mov
sbb
mov
decl
loope
push
mov
sub
out
test
mov
imul
push
int3
loopne
sub
cmp
mov
popf
jg
mov
lret
or
jl
and
jb
jne
lods
xchg
repnz
adc
popa
loopne
adc
sub
in
xchg
sub
test
jmp
ret
sbb
pop
movsl
sti
sti
xchg
fmull
jb
lcall
lods
pop
loope
cwtl
push
jmp
adc
test
bound
pop
mov
mov
or
pop
out
mov
les
out
fcoms
pop
pusha
js
xchg
mov
pop
inc
and
andb
or
int
pop
xchg
mov
icebp
ret
cmpsl
iret
aaa
outsl
sub
push
lahf
std
mov
inc
shrb
jne
cld
sarl
imul
sbb
pop
rorl
or
xchg
jge
lods
and
cltd
inc
ljmp
or
stos
push
or
inc
stos
sub
mov
xchg
shll
cmp
mov
repnz
xchg
xchg
sbb
pop
repz
adc
push
pop
int3
jecxz
ljmp
mov
stos
mov
jb
sbb
repz
movsb
dec
int3
cmp
mov
pop
fsubs
sti
cmp
jno
push
pxor
pop
lahf
into
and
dec
lcall
xchg
leave
mov
xchg
je
in
cmp
xchg
xchg
aam
xchg
add
enter
xchg
push
jne
loope
mov
imul
push
into
ret
pop
bound
test
xor
mov
das
push
push
push
dec
push
in
sub
pop
or
mov
mov
gs
pop
ret
mov
mov
pop
cmpl
insb
mov
sub
ds
adc
jo
prefetcht2
cli
inc
cmp
les
test
fst
mov
jge
cmp
jo
test
xchg
aas
lods
adcb
xchg
mov
outsb
hlt
mov
mov
cmp
push
jne
popa
add
in
fstpl
lods
jb
sbb
loop
insb
fs
jns
movlps
orl
stc
repz
stos
inc
testb
push
scas
add
sbb
lret
mov
and
fildll
mov
adc
fistpl
xor
sbb
or
cmpsb
sar
mov
pop
sub
xchg
test
and
lret
inc
filds
enter
mov
mov
inc
aad
lock
push
addr16
jne
jnp
enter
stos
cmpsl
fwait
cmp
adc
cwtl
push
add
mov
jnp
mov
xchg
add
ja
push
es
popf
inc
cmpsl
xor
stos
in
inc
cmpsl
mov
and
dec
pop
jle
add
push
sti
call
mov
mov
cs
aas
lea
aas
fiaddl
jbe
aaa
stos
push
test
xchg
xchg
pop
inc
cmp
add
sahf
sub
in
sub
shl
mov
mov
or
cmp
rclb
add
push
adc
sbb
pcmpgtw
stos
push
mov
enter
lods
ljmp
inc
out
and
pop
lods
pop
les
insb
mov
fstp
shr
dec
sub
push
lahf
stos
xor
movsb
jo
mov
push
sbb
lods
out
and
test
inc
in
icebp
dec
cwtl
inc
subl
mov
in
inc
mov
sti
xchg
mov
mov
fadd
pop
mov
ss
addr16
lods
sbb
mov
leave
ljmp
addb
data16
sub
mov
mov
mov
dec
xchg
incl
mov
or
sub
idiv
rcrb
adc
sbb
xor
js
shll
xor
rorb
ja
std
repz
cld
std
notb
jge
cwtl
fiaddl
sti
in
adc
fldcw
add
aaa
pop
mov
sahf
xor
fldl
int
divl
pusha
jle
sbb
insb
push
jmp
in
jge
into
mov
sub
fs
insl
mov
dec
mov
leave
in
pop
popa
xchg
mov
imul
sub
sub
xchg
nop
inc
mov
aas
or
cld
lods
pop
loopne
push
inc
insl
scas
cmp
lods
xchg
fdivs
push
add
ds
ljmp
lcall
fdivs
shrl
jge
lret
lret
ret
push
inc
dec
insl
gs
daa
mov
and
sub
sub
sbb
inc
sarl
pusha
and
dec
fildll
mov
repz
hlt
leave
sahf
iret
mov
lods
xchg
push
push
inc
mov
shrl
aam
sar
inc
jl
popf
sbb
imul
sub
push
sbbl
add
xor
movsb
adc
push
scas
jmp
cmp
hlt
or
jmp
andb
mov
popf
mov
xor
loopne
jnp
pop
and
xchg
mov
mov
pop
mov
rol
int
dec
lahf
cli
pop
call
pop
sub
mov
jge
ret
arpl
xchg
and
push
or
lcall
push
pop
jb
mov
sti
cs
ret
iret
mov
and
sbb
rclb
xchg
testl
xor
pusha
cmp
dec
shrl
xlat
addr16
pop
add
les
add
out
xor
paddsb
in
std
xchg
push
jge
jle
jle
data16
jmp
iret
scas
ret
jmp
pop
roll
cmp
mov
adc
push
scas
divl
inc
aas
xchg
cmpsl
and
cwtl
lea
fs
xor
pop
mov
sub
jmp
aad
fcomps
inc
jecxz
adc
jge
push
arpl
scas
test
inc
lods
dec
adc
push
push
rclb
mov
bound
fldt
in
add
fimuls
cli
rcll
cmpsl
xor
ja
cld
in
fdivs
jmp
push
xor
or
push
dec
mov
jg
ljmp
and
scas
inc
mov
fmuls
or
dec
dec
dec
enter
cs
std
imul
out
dec
sub
sub
pop
xchg
test
pop
jmp
cmp
gs
mov
sbb
mov
adc
shlb
outsl
xchg
sub
and
test
add
sbb
loop
enter
lret
mov
cmp
mov
push
mov
into
test
and
jae
es
or
ja
aaa
imul
xlat
cmp
test
ret
mov
mov
push
cmp
xor
cmp
xchg
pop
clc
loopne
call
adc
aas
push
xor
in
mov
jbe
cmp
mov
arpl
adc
pusha
gs
roll
and
or
ucomiss
cmp
test
nop
push
movsb
lret
pop
dec
push
ds
loopne
sbb
mov
sub
and
jge
das
roll
add
cmp
dec
pop
faddl
mov
je
sub
cwtl
cmp
jbe
je
cmc
or
in
sbb
jle
fidivs
or
xchg
jg
mov
or
sbbb
xor
mov
mov
sahf
insl
sub
daa
mov
andb
sub
cmp
mov
faddl
lahf
pop
rcll
out
lods
inc
out
mov
lds
mov
imulb
daa
mov
cwtl
jae
sbbl
lods
addl
repnz
adc
dec
push
lahf
jbe
fdiv
push
jecxz
jae
sbb
cmp
and
cmp
pop
jb
in
pop
arpl
das
jo
icebp
leave
xor
ljmp
pop
int
xor
js
add
das
addb
inc
sbb
push
lret
cli
xor
shr
ret
mov
push
add
jns
mov
clc
fadd
subl
andl
xchg
aaa
pop
es
loopne
dec
popf
jle
les
decb
mov
jg
insl
or
sbb
pop
ja
lret
cwtl
xor
push
in
fidivrl
dec
lcall
test
push
and
mov
add
stos
and
ret
jle
out
in
xchg
out
push
push
inc
cmp
push
sub
shlb
insb
cltd
mov
aaa
movsl
and
je
les
pop
adc
mov
xorl
lret
or
sub
aad
scas
mov
in
ds
js
xchg
es
sub
iret
hlt
mov
jge
jmp
ljmp
lea
xchg
jns
icebp
lods
dec
pop
ret
inc
fisubl
test
adc
gs
or
adc
daa
push
jle
pop
in
add
shrb
movsb
jmp
into
mov
sahf
nop
sti
repz
sbb
jb
xchg
push
jbe
add
jnp
lea
jge
dec
inc
lods
jmp
or
pop
jb
cmp
or
aas
in
arpl
pop
pop
xor
pop
les
out
int3
movsl
lods
gs
lret
add
mov
lea
dec
dec
test
cli
mov
jo
mov
shll
jp
mov
addl
jmp
js
inc
js
mov
stc
jae
repz
xor
jge
out
scas
sbb
mov
pop
push
jno
ret
and
sbb
inc
pushf
lret
mov
add
xlat
shrl
imul
cli
jge
idivl
dec
add
leave
popf
cmp
movsb
cmp
sarl
sub
xchg
adc
int3
ja
hlt
cmp
cmp
mov
nop
mov
fidivrl
cwtl
int3
scas
loop
stc
and
pop
mov
repnz
jno
inc
pop
movsb
cmp
mov
jle
mov
mov
daa
or
into
icebp
xchg
mov
add
in
fidivl
xchg
into
adc
out
cmc
mov
and
les
movsl
mov
xchg
js
sbb
outsl
gs
sub
adc
je
jno
lock
jmp
pop
fwait
mov
mov
test
in
push
ret
xchg
stc
cmpsl
aad
call
cmpsl
jle
sbb
xchg
negb
sub
lea
push
mov
xchg
arpl
add
fstpt
jle
ja
orb
iret
test
dec
mov
push
mov
sub
pop
arpl
cmp
ljmp
fsubrs
outsb
pop
aad
ror
sti
xchg
addr16
lret
aam
loope
test
xchg
mov
imul
orb
cmp
xchg
lret
xor
sub
jno
scas
out
dec
ljmp
xor
mov
cwtl
push
jnp
push
or
jge
das
xor
dec
sahf
cmp
inc
ret
pop
xchg
jle
les
jnp
jl
js
sub
push
or
push
fisubl
aaa
outsl
pusha
shll
enter
imul
add
sbb
nop
fistpl
cmpsl
push
xor
mov
mov
cmp
cld
aad
mov
iret
in
aad
arpl
mov
xorl
push
or
aam
mov
cltd
cmp
into
aam
int
push
std
pop
roll
ret
ljmp
std
dec
mov
jnp
nop
movsb
inc
jecxz
inc
mov
cmpsl
fldcw
vaddps
shrb
xchg
insl
aam
movsb
add
loopne
mov
lahf
lahf
add
dec
sbb
add
pop
lods
sahf
xchg
mov
mov
lods
int3
les
or
mov
push
sbb
cmpsl
and
inc
subl
lahf
mov
hlt
pop
in
repz
addr16
rcrb
movsl
in
sbb
out
cld
fsubl
jmp
adc
addr16
lahf
sub
hlt
inc
mov
jo
pushf
gs
lods
mov
daa
out
mov
or
scas
addr16
mov
gs
pop
xor
lea
imul
xlat
jg
or
gs
or
fildll
add
add
mov
hlt
xchg
add
shrb
pusha
push
fs
cmpsb
and
outsb
push
jg
mov
or
cld
test
sub
adc
loope
mov
loope
mov
add
sub
push
or
repz
or
icebp
push
fidivrs
xor
mov
outsl
and
stc
jg
aam
fisubl
jno
repnz
ds
out
dec
push
push
mov
lea
push
mov
xor
fisubrl
fstps
or
sbb
mov
dec
push
ja
pop
dec
imul
jle
ret
inc
mov
shlb
mov
cmpb
xor
adc
xchg
test
ret
pushf
cwtl
lcall
inc
addr16
mov
jno
fwait
adc
sbb
rolb
icebp
out
mov
clc
out
lods
lock
mov
icebp
cs
push
pop
pushf
sbb
pop
outsb
or
mov
xchg
push
xchg
es
xchg
xor
jmp
pop
add
push
jge
pop
sarl
lods
mov
inc
lret
cmpb
loope
jmp
dec
jns
aas
int3
ror
sbb
scas
lock
inc
aaa
jno
sti
out
sub
xor
gs
jbe
icebp
add
jo
xchg
or
lea
cmp
in
add
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
push
mov
mov
sub
xor
mov
sub
mov
sub
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
push
mov
mov
mov
mov
xor
sub
xor
adcl
mov
movl
add
add
imul
mov
mov
cmp
je
mov
mov
sbbl
mov
subl
xor
lea
addl
mov
mov
not
mov
mov
orl
xor
xor
sbbl
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
add
movl
adc
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
xor
xorl
add
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
add
dec
mov
xor
add
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
subl
add
movzwl
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
movzbl
or
mov
movb
lea
and
mov
xor
jmp
mov
lea
jnp
imul
pop
jp
xor
mov
movsb
fadds
pop
lcall
jmp
cmp
aas
pop
push
lret
mov
xchg
aas
xchg
rcll
lods
faddl
push
pop
mov
dec
aas
loopne
stc
outsb
movsb
jns
outsb
shrb
mov
insl
cli
shl
js
pop
add
loope
lods
test
mov
cmp
mov
lods
jae
jl
adc
pop
lret
adc
je
mov
mov
dec
stos
and
cmp
xor
inc
ficoms
faddl
or
xchg
mov
and
jecxz
cmp
cmp
loope
dec
and
jne
movsl
dec
pop
mov
pop
adc
adc
in
fnsave
mov
push
jno
jp
scas
mov
jo
push
mov
cmpb
xchg
dec
in
aad
mov
and
popa
or
int3
mov
add
insl
outsl
lea
popf
stc
test
aaa
scas
outsl
out
inc
push
rorl
and
mov
and
ret
add
popa
jnp
popf
and
sub
aad
ss
jo
cmc
or
addr16
add
in
cmpsb
aam
roll
roll
aam
adc
push
in
out
sti
push
sbb
jl
jl
pop
bound
test
cli
mov
ss
out
fnsave
pop
out
push
in
fidivl
pop
in
or
arpl
jl
or
pushf
sub
aad
rorb
inc
rclb
xlat
orl
lahf
mov
mov
jp,pt
pusha
jno
add
push
cmpsl
inc
cmp
adc
jle
xchg
cmp
push
outsl
fs
add
test
and
cmp
fldenv
inc
sub
sbb
ljmp
loope
sarl
cmp
pusha
jge
das
xchg
sti
mov
insl
rorl
js
inc
icebp
out
mov
xor
outsl
int3
test
das
lret
loope
push
sbb
and
cltd
mov
jmp
jge
bound
out
mov
cmp
lret
int3
or
fcmovu
cs
test
imul
adc
repz
cli
movntq
fnsave
sub
xor
movsl
pop
gs
les
stos
push
dec
and
mov
dec
pmuludq
icebp
andl
pop
sub
xor
xor
sbb
and
dec
sbb
cld
call
decb
jg
lods
insb
imul
sub
das
cli
lods
gs
cmp
mov
add
sbb
repz
push
es
xchg
jne
push
sbb
mov
addr16
jae
push
lods
test
lcall
sbb
lock
shll
add
gs
mov
xor
mov
jo
stos
add
mov
fimuls
mov
inc
imul
pop
andb
adcl
arpl
leave
xor
push
stc
in
add
lods
xchg
mov
movsb
lds
orl
mov
jb
ret
outsb
inc
arpl
ret
sar
xor
add
sbb
jb
popa
pop
dec
mov
out
cmp
inc
xchg
test
add
das
ss
mov
jbe
hlt
and
clc
mov
shlb
push
dec
in
mov
enter
jmp
adc
add
lret
stos
std
fildll
js
gs
mov
sbb
xor
mov
dec
repz
lds
cwtl
jnp
push
or
ret
cmc
imul
push
outsb
mov
add
pop
int3
sbb
sbb
idivl
rcrl
dec
adc
push
loop
jo
stc
insb
jg
or
adc
mov
out
inc
outsb
outsl
cwtl
mov
mov
ds
xchg
stos
xlat
cwtl
loop
sti
pop
xchg
pushf
jmp
out
pop
mov
je
mov
cmpsl
call
ret
xor
xchg
push
out
jg
rcrl
dec
and
mov
push
mov
psrlq
lahf
adc
pop
cli
in
in
pop
sbb
lods
cmp
fst
or
imul
mov
mov
jle
ret
loopne
inc
mov
pusha
stos
adc
adc
xor
in
hlt
fildll
stos
and
xchg
fcom
rcrb
push
mov
sbb
inc
cmp
jo
inc
dec
ja
push
or
and
cmpb
inc
aaa
cmp
mov
movsl
sub
xchg
push
or
cmc
adc
test
mov
lcall
and
mov
rorb
ret
shlb
fists
int
scas
rclb
fadds
movsl
mov
cmp
xor
scas
jl
jle
push
mov
out
into
stc
cmpb
mov
push
or
mov
hlt
inc
and
xor
and
mov
pop
hlt
mov
jp
sbb
mov
sbb
add
lahf
sub
mov
pop
push
dec
or
mov
out
shr
xchg
dec
cmp
adc
orb
or
cmpsb
mov
lods
clc
pop
xchg
pop
rcrl
jno
and
and
mov
in
bound
insb
nop
xchg
xchg
lods
stc
dec
fsub
or
sub
out
in
pop
lcall
adc
scas
daa
dec
scas
jnp
test
push
mov
pop
mov
and
clc
nop
inc
bound
pushf
aaa
stc
out
out
test
fsubs
testl
and
aas
jae
cmpb
mov
mov
cmc
push
mov
stc
fstpl
dec
jo
push
cmp
pop
repz
aam
aas
push
push
mov
sbb
mov
filds
xor
mov
sub
scas
ret
imulb
lret
cmp
dec
rolb
jmp
inc
xor
imul
xor
loop
sti
cwtl
cld
fcmovb
xchg
mov
loope
xchg
in
stos
xchg
add
fildll
incl
push
outsl
and
xor
ja
xchg
dec
cltd
scas
and
lock
inc
adc
mov
mov
xor
or
pop
cmp
mov
inc
dec
mov
mov
push
cmp
mov
xor
push
cmc
push
sub
nop
lret
sbb
aaa
stos
mov
xlat
push
lret
sub
cmp
in
loopne
mov
gs
add
pusha
call
pop
mov
das
mov
inc
js
out
mov
mov
mov
mov
in
mov
cmp
fmull
lahf
gs
adc
shll
clc
mov
xlat
sbb
or
sub
or
jns
xchg
mov
jb
sub
adc
push
mov
ja
repnz
pop
sti
out
add
popa
shl
outsb
sti
ret
push
jne,pn
imul
sub
mov
aam
les
nop
outsl
jg
sbb
aaa
dec
fistl
mov
sbb
add
pop
cmp
xchg
aam
test
movsl
cmp
cmp
push
xor
adc
mov
push
div
sbb
dec
aam
xchg
xchg
xchg
xchg
mov
mov
push
push
xchg
lcall
inc
and
push
shld
mov
pushf
addl
in
in
leave
mov
xor
or
adc
dec
ficompl
mov
jmp
pushf
add
aas
ss
dec
pop
mov
add
fwait
or
and
cmp
sub
shrl
mov
test
lret
sbbl
push
dec
fildll
pop
shl
ss
or
inc
int3
ret
push
ds
cmc
fwait
push
fsubr
adc
xchg
add
fs
sbb
pop
fwait
jns
or
mov
les
mov
push
popf
xor
sbb
jnp
push
sub
mov
lds
sub
and
lock
test
lods
mov
push
xchg
add
add
jno
clc
sub
ss
mov
add
test
sbb
mov
mov
rclb
xchg
scas
jg
nop
hlt
shlb
xor
imul
shlb
gs
mov
dec
loope
pushf
pop
jmp
lcall
mov
push
leave
dec
lret
popf
mov
fwait
or
cmp
push
or
pop
cld
xchg
push
xchg
cwtl
mov
outsb
xchg
add
pop
mov
shl
int
jg
inc
scas
mov
inc
cmp
mov
jns
roll
xchg
les
push
sbb
xchg
push
in
and
jg
push
sahf
fsubrs
push
xchg
inc
dec
sub
mov
or
out
imul
xor
push
andb
cltd
jne
sbb
jecxz
mov
dec
fimull
sahf
scas
in
pop
jae
ficoml
sbb
mov
lods
or
or
jae
mov
lcall
dec
or
cli
inc
test
arpl
int
fxch
js
hlt
loope
sub
add
mov
into
xchg
and
bound
inc
in
jl
rcrb
fildl
xchg
pop
js
push
pop
ljmp
popf
aas
lahf
lods
loop
inc
out
xchg
cmp
adc
bound
mov
jge
push
ja
sub
popf
mov
push
or
out
mov
mov
fcmovnu
jbe
inc
ja
in
loope
or
js
and
adc
test
lock
enter
add
adc
dec
mov
push
xor
into
and
cmp
out
out
std
mov
test
das
and
xor
iret
sbb
pop
out
pop
sbb
mov
mov
jne
aam
push
jle
stos
bound
mov
pop
inc
mul
pop
popa
mov
sub
in
daa
mov
pop
insl
mov
jge
call
test
loop
mov
out
cld
aad
add
xchg
xchg
lret
sbb
push
or
test
xchg
push
jne
aad
pop
adc
loope
push
fldcw
pop
jmp
mov
mov
pusha
jno
fldcw
jb
mov
aam
popf
lahf
gs
or
xchg
sbb
mov
lea
pop
pop
dec
movsl
stc
adc
adc
dec
push
ljmp
xchg
xor
pop
call
push
push
xor
mov
insl
mov
pushf
in
jne
ss
inc
pop
out
aaa
aam
call
shrb
movsl
icebp
pop
xchg
add
and
xor
ja
jae
adc
pop
repnz
sub
pop
and
xchg
fstpl
push
xchg
inc
xor
dec
mov
sub
sbb
repz
test
push
jo
test
dec
mov
pop
push
inc
outsb
pushl
pop
mov
or
cwtl
into
pop
pop
push
xchg
bound
in
decb
out
pop
mov
ljmp
push
cmc
add
xchg
in
mov
ficompl
ret
mov
ret
and
nop
push
pcmpeqb
ffreep
movl
loop
mov
shr
sub
mov
jmp
inc
xchg
or
bound
out
dec
push
int3
dec
sti
in
aad
adc
cli
jo
jp
xchg
push
sub
xchg
lock
and
mov
push
push
cmp
insb
stos
repnz
lcall
int
pusha
jbe
subb
test
push
mov
mov
sbb
push
sub
int
aas
movsb
popf
ds
jne
or
mov
jns
pop
add
sbb
add
xor
mov
mov
sub
dec
jno
mov
pop
test
push
cmp
shll
scas
dec
add
push
fwait
adc
addb
test
adc
cmp
mov
sbb
adc
cmp
leave
shll
add
xor
mov
xchg
lahf
and
pop
push
add
sar
les
ds
dec
sub
clc
pop
mov
ljmp
stos
adc
xchg
mov
xchg
addr16
pop
and
sub
pushf
inc
adc
fwait
loop
add
push
std
imul
jle
scas
adc
inc
ret
or
std
aad
out
aaa
or
cli
imulb
das
cli
jae
pop
add
xchg
cmp
pushl
loope
push
int
add
mov
cmp
dec
xor
mov
jl
push
scas
xlat
mov
dec
fidivrl
sahf
xor
les
shrb
testl
test
or
imul
mov
int3
in
inc
push
cmpsl
sahf
ret
xchg
xlat
incl
and
mov
sbb
add
cmp
icebp
sub
jns
mov
mov
sub
mov
ret
bound
push
or
add
pusha
ljmp
mov
pop
add
scas
mov
sub
hlt
lea
jmp
out
scas
add
push
cwtl
xchg
das
add
das
mov
adc
adc
js
adc
mov
lds
fcomp
call
ljmp
pop
lock
push
sarb
xchg
xor
cli
mov
push
mov
xchg
bnd
and
out
sti
dec
push
push
jecxz
loope
pop
divb
xchg
xlat
ret
lahf
lods
dec
test
call
imul
mov
push
mov
pop
and
push
pop
fimuls
shrb
lret
inc
cltd
mull
mov
cmpb
inc
push
inc
std
jbe
fadd
test
xchg
xor
xchg
mov
adc
cmc
inc
sub
and
xor
push
add
ss
shrl
dec
insl
xlat
sbb
rcll
fdivrl
mov
jl
or
lea
ret
rorb
insb
orb
pop
lahf
xchg
fwait
inc
sub
imul
les
cli
and
out
iret
and
jg
or
jge
cmp
or
sbb
and
xchg
xor
fstp
pop
cmp
mov
mov
ja
js
jbe
mov
push
pop
ret
iret
dec
pop
xor
add
lds
cmpsl
clc
ret
insl
adc
inc
pop
icebp
dec
rcl
imul
lahf
adc
repnz
or
jmp
cli
pop
iret
dec
stos
pop
pushf
mov
xchg
xorb
jo
push
in
shrb
ficomps
mov
lret
mov
ja
mov
clc
inc
cmp
adc
outsb
xlat
mov
aam
jmp
dec
jbe
xchg
mov
dec
cmp
xor
mov
faddl
add
ret
aaa
mov
repnz
jmp
out
movsb
or
cltd
loop
cmp
insl
dec
sub
cmp
inc
jmp
xor
jmp
in
dec
arpl
dec
xchg
or
aam
sub
ja
adc
push
dec
push
or
jp
xlat
sbb
sub
mov
fists
or
dec
lods
add
add
or
lahf
jg
out
xchg
iret
inc
or
js
ja
in
push
dec
mov
xorl
daa
pop
nop
mov
roll
jbe
lods
cmp
fstpl
popa
aas
push
xor
mov
mov
sbb
shll
in
lods
in
or
sub
jns
dec
jbe
aas
mov
xchg
push
sbb
fwait
popa
sbb
es
imul
cld
fucomi
and
adc
insl
addr16
fwait
pop
or
mov
inc
sbb
xor
mov
ret
cwtl
and
pop
out
mov
adc
jb
stos
sub
push
inc
xchg
xor
xor
adc
mov
test
or
pop
jns
jae
es
cwtl
stos
jno
mov
sbb
sub
test
or
push
pop
inc
mov
inc
movsb
int3
scas
xor
add
bound
sahf
addr16
out
and
sbb
cmpsl
jp
push
sub
clc
xchg
rcll
push
mov
cmp
inc
push
loop
sahf
es
aad
jbe
fcmovu
addb
mov
xlat
mov
popf
dec
jno
jns
add
xchg
fbld
add
mov
sbb
push
out
lods
pop
lcall
mov
test
xchg
push
mov
out
iret
fdivrl
jmp
dec
mov
xchg
mov
push
insb
fs
jg
push
push
add
push
add
add
jae
mov
insl
fcomi
dec
andb
jge
sbb
sbb
fidivrl
cmpsl
cmp
addb
adc
mov
xchg
rolb
jle
mov
and
mov
out
sbb
sti
jg
shrl
xchg
jno
aam
mov
inc
cld
popf
push
cmp
or
xchg
shll
dec
mov
out
cli
in
loop
cld
dec
jge
or
push
movsl
out
shll
stos
cltd
push
sti
inc
xchg
sbb
mov
jae
ret
and
add
fsubr
sub
and
xchg
leave
aaa
jle
mov
adc
aaa
xor
push
push
pop
adc
adc
pop
ss
pop
daa
xor
sub
xor
sbb
enter
push
fwait
nop
pop
ljmp
fs
mov
mov
in
rol
jmp
cmp
xor
and
dec
int3
imul
ret
popa
pushf
inc
jns
lea
stos
test
push
arpl
and
dec
xchg
sub
pop
adc
inc
aad
popf
enter
lret
mov
insb
xchg
adc
pusha
xlat
icebp
mov
ret
jo
dec
mov
lcall
cwtl
sbb
sarb
inc
out
pop
loopne
pushf
loop
aad
and
inc
out
sbb
cmp
pop
xor
inc
popf
xchg
cld
push
or
aaa
cwtl
hlt
cltd
dec
fwait
das
pop
pop
pop
xor
call
pop
xlat
mov
xchg
sbb
xchg
push
frstor
mov
fisttpll
adc
cmp
push
test
xor
frstor
sub
jg
or
aaa
lcall
mov
int
mov
enter
cmp
mov
cmp
push
ret
cs
sub
gs
fs
addr16
decb
cmp
ja
hlt
adc
lea
lea
sarb
inc
sahf
xor
into
and
out
jecxz
mov
sub
inc
les
mov
adc
daa
jge
stos
bound
cmp
cmpsb
cmp
lcall
jge
xor
mov
jp
ret
dec
popl
mov
movsb
inc
out
loopne
sti
xchg
arpl
leave
enter
shlb
mov
sbb
mov
inc
mov
mov
call
pop
push
bound
fwait
push
mov
add
inc
scas
xor
subl
fstps
xchg
xor
sub
lret
movsl
add
dec
mov
xor
push
imul
jmp
jmp
inc
cmp
xchg
rcll
dec
cmp
repz
mov
dec
jbe
lahf
repnz
xor
jge
rclb
fwait
loop
or
cmp
popf
adc
hlt
dec
push
jns
mov
or
push
outsl
adc
ljmp
icebp
outsb
and
arpl
out
cwtl
in
fdivrs
inc
ja
dec
js,pt
shrb
scas
sub
orb
mov
shll
xor
lret
bound
xor
and
call
adc
fstpl
les
clc
push
dec
jns
inc
out
xor
mov
stos
adc
popa
ss
fidivrs
jae
dec
mov
add
sahf
add
fiadds
dec
mov
dec
xchg
mov
and
pop
test
sbb
jecxz
insl
dec
xchg
sarl
int3
cmp
and
in
or
pusha
insb
repnz
adcl
push
shlb
sbb
xchg
add
dec
add
push
aad
lea
mov
mov
sub
std
inc
daa
mov
push
and
adc
or
sub
inc
push
xor
mov
mov
fsubl
cld
adc
arpl
lds
and
insl
adc
mov
fidivrl
mov
popf
hlt
loope
xor
shll
jo
adc
repnz
mov
insb
dec
sub
lret
inc
in
popa
xchg
and
data16
movsb
mov
inc
sub
jl
lods
cs
call
paddb
jg
ret
mov
inc
jno
ljmp
push
sub
xchg
mulb
sahf
rcl
sbb
push
fistps
adc
jmp
sbb
jae
sub
sbbb
subl
stos
dec
les
int3
inc
adc
les
xlat
xchg
cmp
mov
jo
cmp
and
jbe
loope
clc
sub
push
push
ja
adc
inc
pop
jl
push
xchg
mov
add
hlt
fsubr
mov
xor
xchg
pop
in
pop
mov
aas
cld
pop
dec
orl
push
inc
stos
pop
andl
mov
mov
pop
mov
or
xchg
sub
flds
mov
lock
lods
cwtl
dec
outsl
sahf
or
cmp
test
sub
lret
cmp
sub
out
sbb
mov
inc
insb
movsl
icebp
or
xchg
inc
push
out
fisubrs
mov
rcrl
ret
hlt
jb
repnz
lea
push
ds
orb
push
adc
movsb
and
out
inc
stc
pop
adc
in
popf
mov
ret
and
std
mov
cmc
sbb
or
sbb
xchg
xchg
ret
xchg
in
push
adc
adc
mov
test
sti
mov
ret
jns
jp
pop
stos
ret
js
jae
mov
lods
xchg
ljmp
xor
ss
xchg
nop
std
xchg
cs
xchg
push
xchg
leave
fwait
ret
mov
daa
pop
lods
xchg
rol
pusha
es
mov
testb
sbb
dec
cmp
bound
decb
rcrb
inc
lahf
int
lock
push
out
lret
popa
dec
pop
xor
lock
sub
or
out
pop
mov
lds
adc
mov
pop
arpl
sbb
ficompl
dec
or
mov
inc
cmp
jp
pop
adc
dec
xchg
repz
cmp
icebp
dec
pushf
xchg
xchg
notb
mov
xchg
mov
cmp
ret
scas
adc
jge
jle
rcrl
push
push
daa
or
adc
leave
in
jno
movb
inc
jne
push
pushf
cmpsb
ss
sbb
pop
repz
push
das
cmp
mov
sub
inc
inc
fnstcw
push
loope
test
ss
ja
dec
rep
inc
scas
icebp
sub
ss
enter
scas
into
arpl
daa
xchg
sub
test
test
loop
outsb
sub
push
xchg
es
push
outsl
add
flds
lods
dec
inc
push
jb
xchg
push
sub
test
fidivs
push
adc
icebp
leave
jns
das
cmp
movsb
fbstp
sub
cmp
and
loopne
adc
icebp
dec
jne
movl
and
push
or
lcall
adcb
sbb
rolb
int
cmp
pop
cmpl
out
mov
mov
pusha
sahf
insb
mov
enter
imul
lds
scas
cli
sbb
mov
insl
aam
mull
add
lret
sahf
cld
jbe
jns
imul
xlat
rolb
cmp
sub
push
inc
loope
mov
cmp
sahf
push
pushf
add
xor
adcl
lods
jnp
cmpsl
sbb
pop
nop
lock
push
faddl
adc
fwait
lahf
cmc
add
xor
jnp
adc
adcl
stos
xchg
mov
xchg
pop
dec
or
inc
lret
inc
insl
mov
sub
scas
fldcw
mov
sbb
frstor
and
jne
jl
jb
push
cli
pop
mov
or
dec
xchg
xor
sti
mov
test
or
int
test
and
push
mov
pop
mov
push
push
mov
repz
mov
hlt
add
fnsave
cmp
pushf
in
mov
mov
js
fldcw
xor
dec
mov
outsb
mov
mov
fwait
cmpsl
scas
out
jmp
rcll
cli
push
dec
negl
mov
mov
push
popf
std
jmp
lock
insb
fsubs
adc
imul
cmp
xchg
in
in
jbe
mov
sahf
sub
or
add
mov
sbb
push
addb
jg
dec
xchg
and
inc
popf
in
sbb
ja
imull
pop
pop
mov
mov
dec
xor
or
push
cmp
add
and
dec
mov
push
or
fsubs
out
sbb
aad
push
fdivs
xchg
mov
lds
push
add
add
fcompl
mov
sub
mov
outsb
hlt
adc
or
push
cmpl
xor
sub
push
dec
push
test
insb
negl
cmp
add
std
mov
xchg
push
popa
lea
insl
fnstcw
xchg
lea
jbe
push
jns
cmp
pop
dec
in
add
sbb
sub
push
cmp
jno
nop
enter
hlt
jbe
daa
sub
popf
insl
cmc
mov
loop
and
pop
test
test
aad
std
cmp
sub
int3
jg
aaa
jbe
push
xor
mov
cmp
frstor
cmp
adc
or
stos
fs
pusha
and
les
das
cmpsb
and
test
mov
int
push
cmpsb
adc
dec
aas
mov
rcrl
add
out
in
push
sbb
push
push
pop
sub
mov
mov
sbb
in
xchg
loopne
push
mov
push
cmp
jbe
je
add
pusha
push
call
test
test
push
fsubp
shll
das
mov
cmpb
xchg
jg
lds
add
sbb
inc
or
mov
xchg
mov
and
mov
dec
roll
xlat
out
cli
add
pop
xor
fwait
adc
inc
outsb
movsl
fnstenv
pop
mov
and
push
and
xor
or
xor
dec
jl
pop
jl
clc
movsb
out
mov
mov
cmpsl
sarl
imul
imull
out
pop
das
stos
fcompp
dec
jle
sub
mov
xchg
fdiv
loopne
jmp
sbb
mov
fidivrl
inc
jb
fisubrl
cmp
ds
std
cmp
xchg
pop
cmp
sbb
inc
sbb
pop
xor
decb
stos
fdivl
ror
shl
daa
lahf
adc
xor
fnstsw
fisubs
sbb
xor
push
pop
jno
push
fcom
pop
xchg
push
push
mov
call
mov
adc
out
gs
pop
out
sub
cmp
xorb
mov
call
decb
adc
sahf
imul
cmp
xor
das
xchg
in
inc
xchg
movsl
adc
push
leave
inc
xchg
mov
fs
std
mov
orl
xchg
addr16
jecxz
lret
enter
dec
loop
aaa
push
repnz
in
scas
jmp
lahf
dec
cs
pop
ds
lock
adc
lds
les
pop
outsb
in
ss
mov
push
jle
xchg
add
dec
sub
std
and
movsb
jns
add
xor
out
rorl
jns
jmp
jae
and
std
jl
shlb
stos
icebp
mov
ljmp
xor
leave
jl
mov
mov
wbinvd
ljmp
pusha
les
in
add
filds
jb
push
pop
jge
sbb
push
mov
and
mov
adc
jge
out
jl
call
subl
hlt
add
mov
sub
stc
pop
inc
out
dec
lock
inc
mov
push
inc
out
pop
xlat
in
clc
loope
out
xchg
outsl
mov
stos
lret
test
dec
repz
push
adc
data16
mov
test
pop
rcll
xchg
xchg
and
jnp
sahf
punpcklbw
loopne
in
jl
cs
icebp
movsb
insl
xor
dec
in
dec
pop
dec
jo
push
mov
mov
mov
lret
mov
or
mov
xor
mov
dec
imul
test
loopne
jo
pusha
jb
aas
dec
push
sbb
xor
lret
cmp
and
pop
xorl
pop
push
mov
shlb
repnz
popa
movsl
xchg
dec
ja
in
or
mov
scas
mov
and
jno
leave
pop
or
xor
mov
jns
mov
dec
fs
dec
xchg
push
pop
and
xchg
rclb
push
outsb
add
addl
dec
dec
cmpsl
inc
jbe
es
call
leave
cltd
xorl
jne
sub
pop
shlb
stc
ljmp
dec
dec
lods
sbb
cli
mov
mov
imul
mov
sub
shl
jmp
lods
and
dec
cs
jno
mov
in
push
inc
lret
mov
ret
push
mov
sahf
out
in
rcll
in
jg,pn
inc
scas
add
add
stos
pop
jb
xchg
mov
or
add
jo
pop
data16
sub
cmp
xor
arpl
jns
pusha
mov
inc
cmp
jbe
in
jb
outsl
fidivs
ret
call
hlt
bnd
scas
push
push
push
sub
insl
pop
jo
pop
mov
scas
xchg
hlt
in
test
fs
mov
push
mov
imul
es
push
test
mov
fisubrl
pushf
inc
or
orl
loopnew
push
mov
xor
pop
inc
ret
lcall
or
cmp
test
filds
push
movsb
je
stos
test
cmp
xchg
notl
mov
iret
ret
push
or
mov
inc
mov
fstl
jns
inc
inc
nop
inc
xor
cmp
lahf
push
jecxz
adc
arpl
imul
xor
mov
push
cmp
cmpsl
inc
mov
lret
sub
idiv
cmpsb
lea
push
in
jle
imul
add
movsl
push
out
andb
push
add
mov
setl
orb
ret
sub
aad
imul
push
jbe
mov
xchg
xlat
inc
cli
cmpsl
repz
stos
inc
fnsave
or
insl
push
mov
xchg
fs
or
addb
mov
sbb
and
pop
loopne
lcall
push
pop
stc
std
push
xchg
movsb
hlt
daa
inc
insl
movsl
mov
out
in
sub
dec
jg
pop
call
xor
mov
js,pt
lret
xorl
push
or
pop
mov
vmovsd
inc
incl
add
add
add
leave
or
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
xor
sub
movl
mov
andl
movl
sbbl
push
movl
mov
xor
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
adcl
push
add
jmp
movl
mov
mov
movl
inc
movl
cmp
jb
mov
xor
add
movl
jmp
sub
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
xor
mov
xorl
xor
mov
addl
add
xorl
movzwl
mov
mov
addl
movzwl
movl
xor
add
mov
mov
mov
inc
movl
mov
movl
cmp
jne
xor
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adcl
mov
xor
xor
decl
add
mov
sbbl
mov
inc
xor
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
not
movl
movl
movl
and
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
notl
mov
sub
mov
andl
xor
add
mov
not
mov
je
mov
orl
mov
adcl
xor
xor
subl
sub
sub
xor
mov
incl
mov
mov
add
subl
imul
xor
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
add
xorl
or
adcl
mov
addl
mov
subl
mov
xorl
add
adcl
xor
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
inc
mov
mov
addl
add
adcl
and
mov
or
mov
mov
sub
mov
orl
lea
mov
mov
mov
incl
sub
movzwl
adc
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
addl
mov
adcl
xor
adcl
add
movl
jne
jmp
adc
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
jmp
aaa
xchg
jae
mov
xor
mov
jp
add
jp
hlt
jg
aad
xchg
xchg
add
imul
pop
mov
xchg
inc
xchg
leave
loopne
repz
clc
cs
call
shrl
jg
sahf
lcall
adc
mov
in
test
jns
mov
jne
arpl
jp
inc
call
int3
shll
inc
bound
xor
cs
and
cmp
aam
mov
or
adc
adc
cmp
sbb
and
cmpsb
push
fwait
pushl
sub
pop
fwait
mov
int
in
sar
dec
push
adc
insb
mov
mov
jnp
xchg
xor
outsl
xor
mov
mov
mov
loopne
push
and
pop
aaa
jp
add
movsl
add
jo
push
add
pop
mov
add
jecxz
jmp
idivl
stos
mov
mov
outsl
cmpsl
dec
es
ret
add
btc
xor
test
arpl
and
push
enter
out
sbb
dec
ret
jb
in
and
jmp
repnz
cmc
addr16
pop
std
dec
cmc
jl
aad
or
lcall
aaa
sub
push
push
jg
iret
mov
pop
cltd
cmp
cld
sarl
jg
in
sub
adc
mov
cmp
adc
fdivrl
fidivrs
adc
mov
and
mov
inc
stc
je
xchg
cmpsl
pop
sub
pop
test
add
cltd
push
adc
mov
loopne
xor
or
sub
or
daa
lock
ja
mov
test
and
aam
outsb
out
mov
add
das
xor
lcall
adc
aad
push
aaa
fbstp
roll
rcrl
in
mov
rcr
shlb
subl
mov
pop
outsl
addr16
pusha
jp
adc
popa
jae
mov
mov
fdecstp
pop
jp
mov
shrb
fwait
int
mov
aaa
dec
pop
out
mov
xor
mov
adc
lahf
iret
mov
xor
push
testb
sbb
sbb
je
pop
sub
push
and
cld
push
push
aam
or
jmp
leave
mov
jbe
je
mov
inc
je
mov
or
or
pop
dec
out
out
pop
mov
dec
sub
mov
xor
mov
jge
imul
testb
into
adc
or
repnz
xor
std
cmp
movl
mov
push
mov
in
ljmp
movsb
fildl
push
iret
push
mov
or
arpl
outsl
cld
cmp
sar
xchg
cmc
dec
aas
mov
mov
hlt
insb
pop
mov
cmp
repz
jg
pop
push
mov
mov
xorb
cmpsl
adc
arpl
jo
imul
in
pop
fsubrs
inc
jle
dec
inc
jb
es
test
xchg
jnp
in
std
sarl
push
xor
and
dec
pusha
enter
pushf
js
jae
notl
iret
mov
mov
fiaddl
mov
cmpsl
insl
mov
mov
inc
jns
dec
jbe
in
sbb
int
rorl
xor
xchg
or
pop
lods
dec
mov
add
sbb
lods
int3
push
out
xchg
xor
mov
inc
or
dec
fwait
xchg
aaa
cmc
in
aaa
call
jo
dec
popa
mov
mov
sub
ret
jl
jb
cltd
pop
cmpsl
cmc
mov
push
mov
cld
mov
orl
enter
dec
pop
cmpsb
push
xchg
ljmp
inc
inc
scas
test
dec
add
mov
adc
pop
mov
mov
mov
dec
mov
push
jo
pop
iret
dec
mov
aad
pop
xor
mov
cmc
jns
repnz
daa
sti
clc
gs
push
sbb
push
test
pop
fadds
dec
mov
and
lea
dec
inc
aam
stos
loope
or
cpuid
jno
in
insb
das
mov
mov
xor
sti
fistpl
push
dec
mov
xchg
roll
inc
xor
inc
xchg
push
lret
int3
inc
lea
xchg
pop
xor
xchg
and
pop
push
jecxz
sub
mov
pop
sarb
outsb
mull
push
adc
xchg
hlt
mov
mov
shl
lret
mov
dec
mov
jg
test
or
cld
and
mov
jno
mov
inc
pop
lods
jle
jne
mov
sti
fimull
mov
inc
sub
les
repnz
jnp
mov
adc
mov
xorl
in
ja
cmp
jle
adc
rcr
test
mov
inc
fists
mov
pop
push
adcl
dec
push
jae
scas
test
test
test
loope
dec
mov
fs
mov
ss
or
out
popf
cmp
mov
fstps
or
sub
mov
and
loop
lret
dec
sti
xor
dec
ja
int
inc
repnz
add
lods
and
test
cld
inc
mov
jecxz
out
aam
dec
cmp
out
dec
sbb
aad
dec
mov
jo
pop
xor
aad
or
test
or
adc
mov
push
shll
xchg
adc
jno
leave
les
ja
std
add
test
pop
loopne
stos
xor
aam
jnp
pop
mov
sbb
inc
test
daa
cmp
jae
jl
sub
pop
sbb
cmp
lret
es
mov
mov
push
pop
sbb
and
imul
je
pop
lea
jno
sahf
mov
adc
xchg
mov
cli
rol
mov
push
test
addr16
fisubl
xchg
scas
xor
mov
shlb
mov
mov
dec
jl
out
jne
cmp
sub
sub
std
push
jp
xchg
dec
lock
adcl
hlt
add
jnp
int3
xchg
ds
jl
mov
outsl
pop
dec
bound
jl
push
dec
inc
into
popa
or
jo
jmp
sub
mov
push
jnp
adc
xchg
in
orl
das
adc
je
mov
inc
movsb
into
or
in
sbb
mov
mov
into
inc
push
cli
mov
xchg
push
int
outsb
mov
sbb
or
cmp
lahf
andl
push
push
mov
adc
cmpsl
push
cwtl
roll
jb
in
icebp
push
outsl
jp
pop
adc
inc
test
mov
push
push
in
inc
ss
dec
shrb
mov
xor
dec
cmpsl
jbe
dec
enter
aam
pop
dec
seto
sahf
cmpsb
xor
ja
adcl
ret
and
dec
or
mov
cs
adc
aaa
shll
dec
add
mov
or
test
mov
cmpsl
imull
lahf
pop
es
mov
bound
loop
or
clc
cmpsb
fsts
push
dec
or
xchg
mov
int3
mov
xchg
fisttps
inc
test
dec
jne
xchg
add
inc
arpl
xor
nop
popa
fptan
cwtl
xchg
push
xor
fadds
loope
fildll
mov
mov
jge
fisttpl
inc
jo
dec
or
inc
pop
cmp
cmp
adc
test
add
sti
outsl
popa
lret
pop
mov
pop
mov
lods
loopne
xchg
ljmp
mov
xchg
or
lret
repnz
mov
xlat
add
jecxz
mov
xchg
ljmp
and
sbb
jae
loop
mov
push
std
xchg
jnp
xchg
adc
sub
mulb
fcoml
dec
call
leave
jns
insb
les
fwait
cmp
jno
jp
in
repnz
mov
outsb
les
pop
and
mov
jmp
sub
adc
adc
sub
and
pop
push
add
mov
push
add
jp
call
pop
and
mov
xchg
cld
inc
lods
inc
push
je
sbb
mov
inc
or
mov
lds
jb
in
repnz
into
and
outsb
jne
push
fstpt
cmp
add
jb
jg
int
out
mov
push
add
and
mov
stc
lods
ja
pushf
mov
mov
xchg
ja
lea
aaa
in
mov
sbb
xchg
ja
test
pop
xor
test
mov
psrld
icebp
jb
push
or
mov
add
hlt
out
rorl
pop
ja
mov
les
push
push
sub
imul
sbb
mov
in
sbb
adc
mov
cmp
imul
push
arpl
xchg
hlt
movsl
sahf
pop
ficompl
das
imul
push
pop
or
insl
adc
out
hlt
inc
test
sub
xchg
cmp
mov
movsl
mov
inc
fnsave
ret
adc
in
inc
inc
iret
add
push
subl
imul
xchg
nop
sub
mov
mov
aaa
imul
cmp
pop
jle
js
lods
pop
in
movsl
xchg
push
cmp
iret
or
ss
dec
push
daa
andb
lcall
adc
cmp
mov
dec
xchg
push
stos
cmc
xchg
pop
sub
jg
push
adc
imul
jne
in
popa
int3
dec
pop
mov
lcall
inc
mov
inc
addr16
dec
mov
push
xor
ja
test
xor
sub
movsb
sub
jle
add
xrelease
sahf
insb
in
inc
fiadds
add
std
arpl
cmp
push
lret
jle
inc
idivl
mov
aad
shrl
out
pop
pushf
iret
test
das
lock
sub
out
xchg
cmpb
into
out
fwait
inc
inc
outsl
dec
nop
sbb
pop
adc
sub
and
out
push
nop
sub
xchg
push
sahf
in
pusha
imul
xor
jo
lea
repnz
mov
fistpl
add
xor
in
insb
popf
dec
fmul
fsubs
outsl
out
test
xchg
ret
hlt
shl
nop
orb
jle
add
inc
stc
mov
aaa
xor
insl
adc
jne
sub
fisubrs
fsubp
and
pop
xchg
add
pusha
int
mov
sub
das
les
in
add
xor
inc
in
int3
stc
adc
xorl
jbe
aam
call
sbb
lods
out
add
enter
mov
mov
movsb
push
idivb
ja
lret
or
xor
cmpsl
mov
orl
ficompl
inc
aad
xchg
es
mull
cld
sahf
pop
xor
cmp
out
xchg
popf
pop
jp
sahf
push
out
sbbb
mov
push
lock
sarl
lret
arpl
out
sub
roll
dec
dec
adcb
cmp
xchg
xor
ficompl
incb
mov
test
cltd
pop
loop
dec
ret
int
xor
sbb
xorl
and
je
jmp
imul
jns
cmp
stos
cmc
xchg
repz
pop
jne
and
mov
xlat
push
jnp
imul
stos
mov
sbbl
jb
mov
ja
jo
push
in
daa
inc
jge
loope
sub
out
push
add
mov
sub
lahf
pop
cli
pop
cmp
lods
shlb
mov
pushl
cmp
xlat
dec
ret
mov
pushf
dec
and
fsubrs
inc
mov
mov
xor
jbe
cmp
dec
aam
bound
cmc
adc
std
jmp
into
sbb
iret
and
lret
sub
adc
cmp
stos
add
push
dec
gs
and
xchg
push
sbb
and
jno
popa
mov
pop
dec
mov
xor
test
adc
push
sbb
pop
pop
xchg
repnz
scas
jp
sub
ds
push
push
mov
imul
fwait
or
pop
mov
push
sbb
movsl
shll
push
leave
outsl
fcompl
pop
adc
xchg
pop
mov
cmp
mov
add
sub
daa
mov
aad
aas
adc
daa
pusha
inc
inc
mov
iret
out
fistl
test
jmp
mov
mov
jbe
cmp
repz
jge
and
idivb
add
push
gs
mov
or
rcr
xor
and
movsl
ljmp
push
testl
cmp
aam
cltd
fadd
or
into
pop
lds
add
pusha
pop
or
aas
mov
mov
bound
sub
mov
inc
sbb
or
fcomi
cvtpi2ps
out
leave
stos
iret
test
mov
mov
loope
jno
jnp
fnstcw
aaa
add
xor
orb
cmp
lods
xor
int
incl
cmp
test
imul
stos
push
pop
in
dec
mov
jne
lret
lea
fwait
loopne
push
ret
sub
xor
test
xor
pushl
cmpsl
mov
jp
push
sbb
out
inc
and
inc
sbb
or
or
or
fs
or
leave
xlat
mov
pushf
inc
xchg
xchg
rclb
les
test
pushf
sahf
int3
sbb
testb
push
and
adc
sbb
or
push
push
icebp
mov
sbb
and
repnz
idiv
and
mov
add
add
mov
sbb
ljmp
sbb
outsl
jns
inc
cmp
sbb
shlb
movntps
lods
adc
aaa
jne
adc
ljmp
fnstsw
add
mov
or
cmc
repz
mov
mov
cli
ret
sti
jno
add
xchg
mov
cmp
and
out
out
sub
fcomp
dec
lret
cwtl
sbb
cli
jge
inc
fsqrt
push
push
hlt
pop
push
mov
pop
test
lea
or
imul
dec
ss
cld
lahf
pop
arpl
std
stc
mov
movsb
jb
orl
or
ror
paddusb
pop
cmpsl
mov
rolb
in
jle
xor
sbb
push
adc
and
sub
mov
or
adc
cmp
mov
das
test
adc
mov
mov
iret
mov
fs
pop
add
inc
add
ret
int3
fisubs
sub
mov
inc
mov
test
lret
adc
popf
and
sbb
fistl
or
pop
das
jb
adc
mull
xchg
and
jecxz
ficompl
in
insl
rorb
arpl
test
cmp
inc
adc
mov
movsl
adc
mov
shr
test
push
std
jmp
pop
sub
cld
push
or
nop
dec
mov
movsb
push
adc
adc
inc
mov
cltd
stos
add
ss
sti
jo
pop
and
jb
dec
andb
enter
stos
pop
sbb
test
sub
or
push
scas
jle
adc
test
enter
scas
js
loop
test
arpl
mov
ss
pusha
mov
pop
test
and
mov
cmp
imul
ficomps
xor
lret
or
and
jnp
jmp
mov
lods
out
imul
sbb
push
std
lds
xor
notl
ljmp
push
test
stos
rcrl
lods
and
or
leave
add
cmc
imul
cmc
sub
sbb
xchg
cmp
jecxz
or
cmp
loope
pushf
stos
jp
jge
xorl
fs
adc
jle
adc
mov
mov
dec
pop
dec
enter
cmp
inc
cli
adc
lea
mov
scas
lcall
pop
pop
push
jb
or
int3
mov
sbb
dec
leavew
jns
lret
rcrl
xor
xlat
pop
cmp
xor
mov
je
aad
cmc
adcl
dec
push
sarl
push
adc
add
fadds
repz
fstps
int
imul
push
lret
jmp
aas
hlt
sub
sti
jecxz
push
sbb
sbb
inc
dec
subl
dec
ljmp
adc
or
cmp
aad
push
mov
pop
into
xor
jne
aas
xor
les
mov
mov
and
sti
daa
adc
and
insb
fnsave
std
hlt
cltd
leave
dec
mov
mov
in
mov
sti
insb
cmp
xor
lods
push
rorb
sti
mov
adc
addb
cmc
je
lret
sub
test
sub
dec
in
sub
jmp
jecxz
push
xor
daa
pop
enter
loopne
roll
pop
loopne
ret
pop
adc
xchg
mov
mov
and
aad
sahf
cmp
and
mov
jp
inc
mov
pop
ret
inc
std
sbb
pop
pop
and
cmp
enter
lcall
es
hlt
nop
xchg
cwtl
testb
mov
cld
cmpl
jecxz
cmp
mov
xchg
adc
movsb
inc
call
inc
jmp
lock
dec
inc
ljmp
popf
jae
or
jecxz
je
popa
fnstenv
cli
int
jecxz
cltd
and
js
fbld
inc
cmp
test
in
das
or
adc
rcll
mov
mov
jno
cmc
fs
ss
test
mov
in
sbb
xchg
into
push
leave
fdivl
lods
mov
mov
repz
or
mov
mov
sub
out
mov
push
aaa
push
push
shl
outsb
rclb
lret
lcall
fists
iret
push
xchg
jl
mov
pop
test
and
mov
cmp
cltd
mov
push
les
jnp,pn
int
xor
inc
add
leave
xlat
adc
orb
ss
jmp
sbb
or
add
lds
das
js
inc
xlat
bound
mov
sub
jl
in
adc
push
ss
mov
cmpsl
aas
cmpsb
push
jo
mov
imul
xor
push
pop
icebp
imul
test
repnz
sbbl
and
ljmp
bound
xchg
repnz
in
les
inc
push
jne,pn
out
ror
pop
mov
gs
lods
xchg
imul
xchg
call
bnd
popl
popf
lods
adc
or
call
dec
jecxz
ljmp
stos
out
xchg
xlat
sbb
push
stc
and
addr16
movsl
lds
ja
in
pop
scas
in
shll
outsl
xchg
mov
out
idivl
hlt
push
and
aad
mov
iret
arpl
nop
orb
push
in
repz
cld
dec
and
loopne
leave
mov
push
add
or
es
push
dec
sub
fwait
xchg
mov
push
pop
pop
push
push
pop
movsb
push
out
inc
fdivl
in
int
hlt
ret
stc
addr16
mov
pop
std
mov
or
add
mov
flds
push
pop
lods
mov
fwait
mov
loop
xchg
in
mov
sub
scas
scas
std
stc
cmpsl
vpsubusw
sbb
inc
jp
pop
ja
push
pop
push
mov
movsl
popf
nop
jo
mov
aaa
pusha
nop
jo
pop
fldt
push
lcall
inc
xchg
mov
mov
cmpb
pop
add
inc
inc
loope
test
pop
insb
js
test
stos
cs
inc
push
cmpsb
inc
dec
xor
jns
add
rep
add
jle
out
sbb
je
dec
mov
imul
cwtl
int
pop
xor
je
rclb
pop
icebp
jo
xchg
jp
out
inc
jo
js
and
lcall
xchg
jge
mov
adc
push
into
cli
mov
lret
mov
js
and
data16
cltd
and
adc
frstor
into
out
sub
in
and
jecxz
fwait
ret
jno
enter
add
mov
mov
sbb
sti
scas
icebp
or
sub
xlat
xor
es
inc
fucomi
shlb
ficoms
dec
add
lcall
out
adc
shl
mov
jnp
jle
and
nop
inc
cmp
nop
jns
imul
add
xchg
jb
lods
mov
cmp
mov
pop
add
inc
lea
call
ja
sub
pop
call
loopne
aad
push
pop
aas
and
les
mov
sti
subb
mov
fdivl
add
sahf
sahf
iret
jae
ret
mov
out
cmp
ficompl
inc
mov
add
test
aas
in
push
push
not
xor
pop
aam
mov
sub
out
sahf
jae
fs
mov
pop
jl
inc
mov
arpl
push
mov
or
lock
ret
pop
in
dec
xor
loope
and
rcrl
cmp
mov
mov
add
rorl
mov
fs
cmp
xchg
mov
adc
mov
ljmp
sub
adc
jg
sti
mov
cmpsb
es
jl
sub
mov
cs
mov
xlat
push
pop
lahf
xchg
xchg
test
sub
bound
cltd
data16
sahf
rclb
cs
js
dec
adc
jne
pusha
xor
dec
outsb
test
xchg
insb
inc
jns
sub
add
addr16
xlat
mov
out
dec
out
int3
adc
repnz
inc
mov
hlt
and
dec
stos
aad
into
jne
xchg
add
stc
pop
adc
xor
shl
iret
mov
andl
inc
stos
out
fnsetpm(287
cmpsl
push
or
xlat
out
outsl
aas
add
or
repnz
mov
loope
stc
jne
mov
inc
add
lahf
in
lret
fbld
push
outsb
fcoml
adc
aaa
pop
scas
xor
xchg
adcb
add
hlt
inc
cmp
jb
or
sub
cmp
adc
pusha
adc
es
mov
mov
cmp
dec
roll
jmp
xor
iret
and
test
pusha
mov
and
sti
into
sub
pop
cli
jnp
bound
jge
das
das
mov
cmp
mov
pop
mov
add
mov
loopne
dec
ja
push
jnp
stos
int
adc
inc
repz
mov
pop
pop
daa
dec
loop
sbb
outsl
xor
outsb
inc
mov
bound
pop
push
inc
decl
gs
push
cmp
dec
aaa
fimuls
mov
inc
hlt
lretw
popf
stos
cmp
mov
pop
iret
and
cmpsb
fimull
sti
dec
cmp
push
inc
in
push
xor
popf
jnp
negl
aas
test
sbb
push
inc
mov
das
leave
jnp
mov
ror
repnz
insb
add
loopne
loop
aaa
cmp
or
xor
shlb
jmp
pop
lret
test
cwtl
push
jo
das
mov
lock
jp
xchg
dec
in
subb
push
pop
jmp
in
mov
mov
rcpps
out
mov
in
or
aam
sub
sub
gs
sbb
sbb
cmc
jbe
das
add
jp
mov
xchg
aam
sub
push
push
cmp
fimuls
ljmp
int3
mov
gs
fnstcw
in
ja
stos
dec
pop
fisubrs
lcall
sub
sbb
jno
sti
movsb
inc
mov
sub
jp
insb
js
mov
mov
mov
mov
sub
outsb
or
sub
ret
in
bound
cmc
packuswb
fstl
cmp
add
out
dec
sbb
test
push
mov
and
fs
sarl
add
call
aaa
imul
xor
or
mov
les
dec
outsl
mov
cmp
mov
xchg
jl
incl
add
adc
xchg
pop
enter
mov
and
pop
sbb
jg
jp
pop
cmp
push
mov
rorl
pusha
test
push
dec
orb
push
gs
adc
fsub
and
xchg
ret
jmp
cmp
imul
push
insl
mov
frstor
mov
xor
inc
xchg
movsl
ret
jmp
roll
and
push
cmp
push
cmp
imul
mov
movsb
xor
add
iret
aas
pop
lret
fsub
int
dec
arpl
adc
mov
inc
cmp
jmp
xchg
jne
sub
leave
clc
les
add
insl
loop
inc
xor
js
cs
test
xor
and
and
mov
out
sbb
rcrl
jne
push
jge
scas
push
std
inc
jge
dec
mov
test
out
les
scas
add
jp
pop
loopne
xchg
lret
xchg
dec
pop
xchg
or
orb
dec
jmp
mov
fisubs
bound
cmp
xor
in
hlt
xchg
xor
adc
fbld
lea
xchg
std
cmpsb
xchg
push
ret
jb
and
repnz
push
adc
adc
dec
rcrb
lahf
hlt
mov
imul
sub
ret
xor
pop
jo
lds
pop
sbb
lret
push
lahf
xchg
sarl
and
and
xor
sahf
mov
xchg
or
pop
aam
daa
pop
loope
push
comiss
and
in
and
adc
stos
aaa
das
push
andb
and
icebp
mov
sbb
faddl
pop
pop
jg
aaa
jno
std
pop
decl
aaa
jae
addr16
pop
aaa
ds
fs
scas
jns
or
in
push
xor
popa
push
push
push
xor
mov
repz
mov
push
sub
es
mov
adc
mov
pop
nop
xchg
ja
inc
fxam
stc
dec
and
mov
inc
cmp
or
inc
push
pop
pushf
iret
cmp
sbb
jo
cltd
fmuls
jno
frstor
jmp
adc
ja
scas
sub
adc
ret
jle
pusha
les
faddp
dec
out
xchg
and
inc
call
inc
ret
cs
sti
and
in
xchg
xchg
add
lods
repz
shrl
adc
hlt
sub
stos
pop
cltd
push
mov
ret
push
addb
rcl
pusha
dec
or
mov
add
xchg
sbb
mov
push
dec
das
mov
adc
jl
call
rcrb
in
and
ds
mov
es
xor
mov
gs
rcrl
add
leave
mov
sarl
and
sub
sub
je
pop
mov
sbb
sub
push
cli
dec
xor
je
sub
push
jbe
inc
and
cmp
adc
pop
sub
mov
lret
pop
jmp
out
push
jge
jnp
and
or
push
mov
lods
lods
add
xchg
and
pop
imul
stos
inc
xor
xor
mov
push
dec
inc
out
push
cmovl
pop
add
mov
mov
in
xchg
mov
in
pop
adc
cli
cmp
dec
fcmove
mov
dec
lods
stos
jns
xlat
rolb
sub
pop
hlt
adc
mov
mov
cmp
ljmp
mov
dec
iret
and
mov
mov
mov
pop
cmc
inc
rcl
xor
jbe
outsl
xorb
outsl
xchg
out
cmp
sbb
sbb
in
mov
aas
inc
push
push
jnp
jno
or
mov
jno
movsb
lock
or
push
xorb
inc
loope
pop
mov
mov
inc
negb
stc
jbe
ret
mov
cmpb
add
lret
mov
mov
pop
jl
mov
cmp
mov
divl
xchg
js
int
xchg
pop
push
mov
ja
stos
jne
push
dec
repnz
inc
out
stos
jge
dec
call
test
pop
dec
stos
add
dec
js
loop
ret
fisttpl
or
shlb
lock
push
xor
jb
ljmp
xchg
jecxz
dec
dec
sbb
or
or
push
mov
cmp
mov
xchg
cmpsb
xchg
mov
cmpsl
imul
sbb
mov
mov
ret
bound
mov
or
into
cmp
sub
lods
sti
dec
xor
cmp
ljmp
outsl
iret
hlt
popl
or
add
out
data16
aad
int
std
int
lods
or
mov
arpl
mov
inc
ret
xchg
scas
mul
icebp
lea
movsl
dec
out
repz
mov
pop
adc
push
jmp
push
xor
pop
add
or
dec
nop
push
lock
mov
out
dec
pop
lret
xor
sub
dec
and
add
lock
jp
enter
pop
je
xabort
xchg
fiadds
test
push
repz
inc
das
add
push
scas
test
rcr
mov
or
sbbl
fdivrs
sub
inc
sahf
or
inc
mov
sbb
xchg
inc
pop
icebp
push
neg
sarl
pop
lds
pop
mov
jp
data16
mov
inc
movsl
lods
aaa
add
xchg
sub
pop
stos
insb
mov
iret
cmpsb
push
dec
jmp
popa
icebp
lret
scas
push
xchg
add
jecxz
inc
pushf
adc
and
in
fdivr
pop
mov
cmp
fyl2x
jge
pop
inc
lahf
inc
mov
rcl
das
rorl
sahf
pop
mov
loopne
jp
sub
rcl
sub
push
pop
pop
arpl
adc
mov
pmullw
jmp
inc
mov
sub
cld
cmc
ret
aaa
jp
push
pop
jecxz
push
lret
roll
fucom
cwtl
xor
sbb
add
jg
enter
jl
fidivrl
arpl
adc
and
sub
enter
cmpl
push
lods
xor
movb
enter
repz
xor
fistps
fidivs
sbb
std
aam
lret
sti
add
into
sbb
in
cmp
mov
mov
pop
imul
dec
sbb
xor
xor
jnp
push
rcr
sbb
cmpsb
lods
push
push
push
push
aaa
scas
xchg
mov
add
add
mov
fdivrs
or
xchg
cld
test
inc
lods
cmpsl
mov
lret
inc
xor
xor
mov
popa
cltd
jg
adc
lret
popf
sti
mov
fisubrl
mov
imul
dec
mov
cmpl
std
mov
sub
in
loop
shl
leave
repnz
jae
xor
lds
adc
mov
xchg
or
jnp
cmc
mov
scas
es
and
ds
repnz
add
mov
sbb
pop
xchg
push
or
lahf
insb
lcall
push
adc
and
add
dec
cs
mov
cmp
xchg
sahf
pop
ljmp
sub
cs
into
imul
std
xchg
rorb
pop
cs
repz
fldenv
jbe
sbb
and
cld
sbb
adc
vcvtsi2ssl
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
out
push
and
outsb
fs
xchg
cs
jp
add
jp
out
mov
sarb
dec
inc
fadds
aas
push
cmp
jp
sub
push
mov
mov
arpl
jle
add
mov
adc
icebp
out
fbld
adc
mov
cmp
enter
mov
add
jb
js
das
dec
shrb
cld
xchg
xchg
jno
cmc
or
add
push
inc
push
test
push
popf
stos
adc
mov
pop
addr16
cmp
rorb
sub
iret
push
test
jp
xor
lret
lret
rorb
pop
add
out
mov
bound
xlat
mov
aas
push
push
cmc
xchg
sub
pop
stos
aaa
sarl
mov
aaa
xor
loope
mov
push
mov
vxorps
fwait
leave
mov
mov
or
mov
fsubs
int3
iret
xor
out
push
fstpl
enter
call
daa
loope
or
lods
aad
cmp
scas
inc
sub
sarb
scas
cmpsl
add
inc
adc
or
and
jl
mov
ret
inc
rcll
add
ljmp
leave
dec
push
sbb
xchg
js
clc
ret
jb
or
mov
jmp
in
dec
rorl
and
mov
push
cmp
mov
roll
ja
insl
xchg
imul
pop
mov
mov
pop
loope
test
jmp
arpl
sbb
mov
xchg
xchg
ljmp
jns
hlt
ret
add
xor
add
mov
loope
stc
dec
mov
loopne
cmc
sahf
testb
sub
inc
hlt
bnd
xchg
xor
movsb
sti
out
or
repnz
mov
mov
mov
mov
sahf
jnp
enter
orl
sbb
in
mov
pop
stc
loopne
sub
sub
das
add
mov
je
into
out
mov
jp
daa
xchg
jp
repz
jmp
or
ficompl
or
in
push
out
loopne
sub
sahf
xchg
cwtl
jno
cmp
lret
sbb
jb
pop
jg
test
mov
sub
scas
mov
in
cmpsl
sbbb
dec
jb
xor
xlat
sub
inc
movsb
fwait
add
das
inc
dec
int
push
imul
inc
cwtl
fcoml
mov
cs
aad
out
out
fdiv
std
push
xor
add
jb
jmp
adcl
jne
xchg
inc
cli
push
mov
imul
adc
outsl
mov
push
pop
std
fwait
mov
or
sub
inc
adc
or
dec
pop
mov
cmpsb
dec
lds
sub
out
insl
int
jno
loop
fiaddl
fsts
cmp
add
stos
inc
fsubrp
lcall
push
add
ret
xor
outsb
add
push
adc
insb
insl
jb
and
sbb
push
cmp
out
mov
push
lock
ds
and
lahf
xchg
jp
inc
lahf
sbb
sbb
in
mov
mov
mov
cmp
fs
bound
push
std
dec
cltd
mov
je
pop
scas
add
pusha
sbb
cwtl
mov
add
in
mov
insl
cmp
xchg
xchg
or
add
dec
sub
fcompl
xor
mov
xchg
jnp
xor
pop
dec
clc
cmpb
add
fdivrl
inc
push
or
fwait
xchg
xor
ja
lock
sbb
adc
std
test
mov
inc
scas
sahf
mov
repz
cld
and
loope
push
cs
insl
mov
fldt
fdivr
push
jb
add
inc
and
xor
jecxz
inc
push
mov
stc
fwait
cltd
arpl
ret
adc
mov
fcompl
adc
xchg
out
sub
idiv
pusha
pusha
iret
aam
fnstenv
movsb
pop
cltd
movsb
or
push
xchg
popa
mov
xor
inc
jmp
xchg
xchg
jg
data16
enter
les
sarb
sub
ds
aas
ror
nop
sub
out
sub
cltd
and
fnsave
mov
lods
dec
xchg
xor
or
arpl
cmp
mov
scas
fisttpll
aaa
cmp
cltd
mov
dec
into
mov
or
aaa
fsubs
mov
lods
lods
cld
shll
roll
cmp
push
movsl
mov
adc
pushf
pushl
mov
xor
mov
jge
shll
xor
jb
jle
cld
and
sti
pushf
cld
test
xchg
push
scas
adc
xor
cmpsb
in
jg
xchg
push
jecxz
jmp
out
jb
icebp
sbb
in
xor
frstor
out
push
mov
outsl
mov
cmp
outsl
cwtl
mov
in
lods
addl
arpl
arpl
and
arpl
pop
leave
cmp
cmc
or
arpl
pop
xchg
mov
inc
adc
xor
fcomps
or
lds
mov
push
cmp
ja
inc
rolb
adcl
mov
xchg
mov
jmp
xchg
cltd
xchg
mov
sarb
mov
cli
ljmp
xchg
lea
imul
idiv
pop
or
les
xchg
outsl
int3
cmp
loopne
jle
aaa
ret
pop
lcall
cli
adc
jp
std
hlt
jge
fldenv
inc
dec
mov
mov
jle
out
pop
dec
push
mov
hlt
and
fstp
xchg
dec
stc
testb
pop
mov
sbb
hlt
test
or
or
dec
pop
nop
aaa
jmp
insl
mov
cvttps2pi
dec
testb
je
call
mov
orb
push
fwait
cmp
std
adc
dec
push
sub
iret
int3
arpl
fcompl
sub
ret
cmp
pusha
cmp
sub
mov
movsb
mov
jnp
inc
jae
push
mov
mov
mov
or
jae
int3
mov
fdivr
mov
mov
add
int
shlb
bound
xor
push
mov
push
mov
shlb
push
repnz
test
imul
cmp
call
mov
jl
bound
mov
pop
mov
scas
mov
lods
lret
xor
cmp
scas
xor
inc
sub
cmp
shll
pushf
mov
stos
pop
icebp
xchg
scas
aaa
mov
jo
call
jbe
aam
jno
mov
faddl
inc
inc
mov
jmp
add
adc
xchg
xchg
sub
xchg
add
and
or
pop
outsl
sbb
mov
outsl
pop
arpl
xchg
pop
sub
adc
xchg
jge
imul
adc
mov
lods
and
dec
xchg
shll
fmul
das
inc
adc
in
jg
ja
clc
adc
pushf
mov
jnp
xchg
push
mov
push
xor
sbb
imul
pop
adc
pop
je
push
stos
xor
pusha
adc
or
ror
adc
inc
arpl
xchg
adc
dec
mov
adc
ljmp
inc
add
cmp
dec
mov
movsl
ret
cmp
xchg
mov
jle
and
pop
and
nop
pop
cmp
push
jle
push
mov
jnp
iret
dec
cld
lock
popa
stos
or
add
jnp
push
xchg
mov
or
xchg
push
sub
dec
sub
xlat
movsb
sbb
dec
mov
push
add
cmpl
xor
sub
pop
ret
filds
icebp
sbb
xor
fcoms
hlt
dec
cmp
mov
idiv
ret
pop
fstpl
repz
xchg
xor
xchg
adc
mov
bnd
push
jne
int3
out
pop
hlt
jae
mov
out
jb
cs
movsl
inc
mov
sub
insl
jae
pop
inc
jbe
sbbb
subl
or
mov
repz
das
jo
sub
mov
jg
mov
or
cmpl
lahf
jmp
cwtl
js
adc
das
sub
pop
mov
cmp
mov
and
std
movsl
out
jg
sti
jbe
ret
and
fwait
push
adc
dec
mov
test
dec
add
xchg
pop
dec
out
insl
loop
push
adc
and
outsb
or
fs
mov
dec
arpl
xor
movsb
jbe
push
fstpl
not
push
and
push
loop
lret
xchg
fdivr
in
test
push
mov
insl
xchg
pushf
idivb
pop
cmp
pop
lea
adc
mov
sub
jo
xchg
mov
into
or
dec
mov
jmp
aaa
cmpsl
dec
test
sub
mov
and
shll
out
or
enter
mov
cli
pop
fldl
xchg
xor
lcall
pushf
push
adc
aam
xor
addr16
jnp
push
jbe
loop
lods
rcl
call
daa
ret
cmp
xor
or
sbb
mov
inc
pop
sbb
sbbl
test
dec
and
mov
lea
in
mov
scas
ljmp
out
xlat
subb
ljmp
pop
sub
aaa
xchg
pop
mov
repz
push
cmp
movsl
cmpsb
jp
aam
xchg
cmc
ljmp
mov
sub
je
mov
inc
stc
xor
aam
dec
xchg
cwtl
or
loopne
jb
xor
ret
sbb
mov
clc
stos
nop
and
xorb
xchg
test
xchg
mov
aam
fwait
xor
or
bound
lods
js
sbb
sub
xor
aaa
loopne
adc
push
inc
xor
jmp
ret
aad
xchg
out
loopne
xchg
stos
ja
sub
inc
es
mov
sub
pop
es
lret
xchg
or
jnp
mov
mov
mov
inc
outsb
xchg
lds
stos
push
pushf
fimuls
incb
push
mul
or
xor
inc
cli
repnz
cmp
pop
sbb
test
test
ja
lods
mov
xor
dec
out
call
push
in
dec
cmp
jno
mov
or
cmp
xchg
and
sbb
addr16
mov
ret
dec
imul
add
pop
movsb
loopne
pop
js
iret
push
jmp
or
cmp
fidivs
cmpb
out
lods
push
in
push
adc
push
xor
shr
mov
jb
pop
mov
in
imul
jne
xor
mov
mov
jecxz
push
cmp
movsb
incl
jmp
push
cli
lods
or
fbstp
popf
cli
pop
paddsb
in
sub
sbb
inc
in
lea
or
or
mov
inc
pop
inc
insl
push
testb
stos
mov
cs
jno
adc
insb
aad
push
mov
pop
cmp
not
jae
test
rcr
jno
sbb
ds
mov
jo
bound
cld
push
push
xor
daa
into
int3
mov
pop
xor
and
lret
jge
je
cmpsb
mov
push
xchg
pop
jae
ficompl
gs
adc
lea
movsl
push
jecxz
inc
sahf
sbb
jle
jmp
xlat
mov
cmp
fldenv
sbb
cmp
jns
outsb
fdivl
pop
dec
scas
in
pop
pop
insb
iret
or
repz
jp
pop
jnp
cwtl
inc
imul
mov
std
cld
xlat
nop
xchg
add
xchg
inc
test
mov
push
out
jnp
push
arpl
lahf
je
fadds
dec
roll
dec
adc
mov
pop
jno
adc
aam
leave
push
mov
xchg
popf
clc
push
or
dec
add
xor
mov
daa
clc
repz
roll
lahf
fiadds
sub
test
lods
movsb
pushf
lret
popa
ret
sbb
xor
inc
cli
mov
jb
fildll
cmp
add
fisttpll
movups
cwtl
inc
jo
mov
sub
jo
sub
mov
mov
movsl
dec
lea
loope
addl
xor
addr16
cmc
sbbl
insb
jle
aam
imul
mov
cmc
mov
add
push
mov
sbb
mov
pop
sbb
ljmp
cmpsl
mov
int3
and
add
movsb
js
shrl
fisubs
mov
push
loopne
sbb
adc
data16
pusha
push
push
in
shlb
sub
mov
movl
imul
scas
dec
add
adc
cmp
push
aad
and
push
ss
andb
adc
and
call
test
enter
out
aam
jp
mov
pop
jl
adc
sahf
outsl
xchg
push
xchg
pop
xchg
mov
call
call
movsb
lahf
xchg
dec
scas
cmpsb
out
mov
das
xchg
in
test
adc
mov
adc
enter
dec
scas
movsl
sub
cltd
inc
lods
std
dec
jbe
loopne
fisubl
in
loop
aaa
sub
xor
and
dec
mov
cwtl
out
jecxz
pop
hlt
sbb
cmp
sbb
or
sbb
sbb
aas
imul
mov
push
test
lea
fwait
mov
cwtl
add
sbb
sti
adc
add
lret
sub
cmp
xor
cmp
mov
mov
mov
out
sub
add
dec
addb
sbbl
push
sbbl
dec
dec
sbb
out
and
xchg
pushl
pop
xchg
lahf
xor
xchg
mov
mov
push
stos
rcrb
repz
mov
xchg
loope
pop
jnp
iret
in
ss
js
jp
mov
and
sbb
in
add
add
mov
iret
ja
jge
jp
mov
fdivl
fdivl
les
inc
mov
bound
rolb
sar
test
in
xor
mov
dec
aaa
push
insb
sub
sbb
mov
mov
stos
inc
cmpl
pushw
and
dec
movb
mov
decl
mov
mov
lret
pop
fwait
or
cmc
cli
mov
lods
out
mov
jmp
cmpsl
jns
dec
in
dec
sbb
neg
lock
gs
iret
sub
adc
inc
dec
dec
hlt
lahf
fnsave
mov
data16
mov
repz
add
out
push
adc
ja
daa
jnp
mov
xchg
and
dec
push
arpl
jae
pop
push
adc
std
xor
sub
mov
iret
sub
mov
in
dec
inc
inc
and
adc
add
push
addl
sub
mov
and
bound
popf
add
ljmp
push
data16
stos
adc
mov
std
inc
xchg
in
gs
pusha
mov
add
xchg
lds
neg
aas
cmpsb
xor
cltd
movsb
aam
mov
ret
adc
xchg
sarl
cs
iret
pop
aad
test
or
mov
call
and
lods
add
iret
push
cmc
inc
push
imul
jg
pop
int3
js
pushf
xor
cwtl
stos
arpl
mov
jns
and
dec
fildll
inc
stos
cli
mov
mov
sub
adcl
psrld
inc
or
pop
pop
and
push
popf
push
mov
out
insl
dec
mov
sub
ljmp
xorb
dec
adc
js
aaa
xchg
push
mov
ret
aad
ja
push
push
xchg
jbe
sbb
shlb
arpl
mov
idivb
mov
scas
pop
sbb
addr16
mov
test
cmp
jmp
or
adc
pop
xor
mov
push
cmc
shll
xchg
jle
aam
cmpsl
shll
js
aaa
ret
out
sar
fld
mov
or
mov
lret
cmpsb
cmp
fmul
mov
pop
fs
sbb
mov
outsl
sbb
jmp
out
aam
push
hlt
cld
xchg
pop
push
sbb
jae
mov
insl
pop
mov
jmp
inc
hlt
and
nop
mov
ja
outsb
pop
sbb
push
jnp
je
bound
push
xchg
std
out
push
xlat
jb
inc
dec
pop
lahf
call
std
inc
pop
xchg
leave
fdivl
nop
push
fildll
xchg
jmp
xchg
lahf
pop
dec
sbbb
pop
je
sub
adc
rorl
es
iret
test
popa
dec
mov
sbb
adc
dec
imul
out
xchg
sbb
ret
jle
mov
fs
adc
dec
mov
push
das
daa
xor
lahf
and
xor
pop
mov
and
push
in
ss
inc
inc
fidivl
adc
rolb
call
jmp
lahf
inc
ret
pop
jp
jp
dec
scas
and
xchg
insl
push
jp
push
int
push
push
rcr
mov
xor
rcl
aas
insl
lods
jno
lods
adc
inc
dec
xchg
sti
mov
xor
and
xchg
jae
sbb
mov
inc
fcoms
mov
insb
cmp
daa
inc
push
mov
fbld
jo
scas
pusha
xlat
movsb
dec
cmp
pop
pop
mov
lahf
jbe
jge
xor
loopne
xchg
mov
pop
cs
pop
xchg
leave
inc
mov
adc
scas
and
es
xchg
dec
xchg
mov
add
push
pop
jbe
mov
rcr
pop
or
xchg
stos
and
dec
sbb
mov
push
clc
lods
jp
ljmp
lcall
mov
mov
mov
jle
in
dec
mov
adc
ret
faddl
mov
aam
cwtl
and
sbb
mov
rcl
push
je
xchg
sbb
mov
xchg
outsl
sbb
mov
aad
les
push
dec
or
cmpsl
jmp
or
inc
int
pushf
popf
mov
outsb
sbb
and
or
stos
mov
cmpsb
and
test
mov
jns
add
sub
cwtl
jno
mov
dec
testb
loopne
loop
fs
cmp
or
pop
cwtl
cmpsb
mov
pop
sbb
movsb
bound
mov
add
popl
xchg
cmp
pop
cmp
ja
mov
mov
scas
ja
push
fldl2e
lods
mov
lahf
sbb
fcompl
fmuls
lods
std
push
sbb
add
xchg
stc
insl
out
push
test
xchg
dec
insl
and
mov
adc
iret
inc
fisttps
inc
loope
or
std
js
sbb
pop
mov
imul
jnp
pusha
or
insl
cmp
inc
test
sti
scas
or
add
adc
sar
jae
stc
daa
lret
adc
bound
shlb
adc
add
out
aaa
cwtl
push
insl
ret
or
mov
push
pop
cmp
and
jge
xor
fnstsw
hlt
pop
cwtl
outsl
pop
cmpsb
popf
add
xchg
aad
xchg
pop
in
mov
movsb
insb
out
sbb
out
mov
and
jl
jbe
or
mov
pop
leave
pusha
mov
dec
test
mov
xchg
movsb
jecxz
js
cmpsl
jne
aad
or
loop
test
or
lret
jp
inc
es
xor
pop
or
cmp
js
test
movb
cld
pop
into
xchg
pop
iret
rolb
push
in
lods
in
push
sub
enter
and
mov
or
cmp
decl
subl
cmp
test
mov
lea
sub
add
inc
cmp
fnstcw
cmc
xchg
mov
jg
clc
mov
leave
fsubrl
icebp
lret
aaa
mov
or
xchg
test
sub
dec
int3
jge
jp
push
test
ror
pop
addr16
inc
mov
repnz
stos
inc
jo
sub
dec
dec
cs
call
push
fmulp
push
push
push
push
dec
jl
rorb
dec
adc
ljmp
out
sbb
dec
jge
jmp
pop
cld
mov
xchg
sub
into
ret
add
xor
cmpsl
andl
js
mov
arpl
das
sub
lods
push
in
enter
notb
in
lds
rclb
sti
mov
or
fs
sub
xchg
xchg
mov
cmp
pop
jbe
leave
lret
inc
rcl
movsl
push
imul
fiaddl
jg
andl
and
inc
aad
cmpsb
pusha
push
div
cmp
add
inc
jb
pop
sbb
jae
in
mov
rcr
and
nop
cs
in
stc
lret
and
push
movntq
xor
lds
hlt
and
mov
dec
out
push
scas
addl
adc
inc
sub
push
adc
add
jl
idiv
and
leave
push
fsubp
std
and
sub
mov
lds
sub
pop
clc
into
mov
aaa
pushf
dec
inc
orb
fildll
xor
scas
sbb
scas
cs
decl
mov
rolb
imul
mov
testl
pop
mov
jp
lret
sbbb
cmp
popa
lcall
ja
hlt
subb
cld
adc
loope
fwait
movsl
dec
jo
push
hlt
cmp
pop
jno
mov
cld
data16
xor
push
aad
decb
lds
pop
pop
loop
int
ss
jmp
pop
fwait
mov
add
imul
jns
push
cmp
jge
push
leave
divl
mov
out
pop
std
add
mov
add
sbb
bound
dec
daa
adc
xor
int3
cwtl
out
nop
jmp
hlt
jb
mov
aas
nop
inc
testb
outsl
dec
sub
inc
outsl
mov
or
cwtl
dec
scas
push
dec
mov
or
inc
out
mov
mov
cmp
mov
stos
popf
adc
mov
ss
adc
dec
mov
fisttpl
cld
jmp
or
xor
xchg
add
xchg
in
push
cmp
jne
add
into
icebp
cmpsl
pop
sub
dec
out
iret
lock
repz
enter
and
xchg
xor
push
movb
sbb
repnz
int
mov
push
stos
loope
adc
in
sbb
jg
pop
inc
addr16
push
inc
lret
rclb
fcoms
sti
jne
cld
push
adc
push
dec
fucomip
int3
cmpsl
jge
push
punpckhdq
cld
mov
xor
repz
insl
call
fwait
div
pop
shlb
sahf
test
ret
ds
repnz
adc
adc
enter
or
and
cmp
movsb
jg
lahf
out
dec
lods
lods
call
notb
outsb
mov
mov
push
icebp
inc
mov
imul
das
movsl
sbb
xor
inc
pop
xchg
jo
test
and
cmp
push
add
push
add
testb
cmp
loopne
mov
sti
xchg
adc
fs
mov
pop
push
test
mov
mov
loopne
in
add
xchg
aam
lods
jl
int
pop
adc
or
outsl
out
out
and
or
in
or
sbb
push
loop
jl
in
xor
aad
xchg
cwtl
adc
mov
fcompl
lret
decl
xor
and
loopne
cld
loope
negl
push
dec
icebp
pop
out
push
hlt
mov
aas
cltd
jo
cmc
mov
jl
ffreep
dec
adc
les
pop
test
mov
hlt
fiadds
data16
jg
cmp
cltd
mov
cmp
jmp
stc
lret
sbb
outsl
push
dec
pop
mov
cld
push
je
pop
mov
mov
cwtl
pop
mov
and
sub
pop
or
das
out
in
push
mov
je
mov
popf
lret
testl
and
shll
sub
mov
or
inc
pop
pop
lahf
push
aaa
outsb
push
lods
jno
outsb
cmpsb
push
sbb
dec
into
in
enter
test
out
fidivrl
push
pop
mov
aaa
movd
adc
sub
int
out
cmp
loopne
pushl
and
orb
sarb
pop
dec
jl
pop
xchg
or
test
inc
lds
jbe
jmp
lcall
pop
and
test
cmp
mov
cld
dec
xchg
xor
movsl
rclb
notl
ffreep
mov
int
pusha
xchg
ljmp
movsl
jmp
xchg
push
sub
dec
mov
cmp
shll
ret
ret
mov
sti
loope
sbb
femms
andb
adc
popf
adc
adc
idivb
mov
xor
daa
daa
pop
out
mulb
add
adc
testb
push
int3
insl
ljmp
gs
push
in
jge
mov
leave
aas
stos
xchg
xchg
mov
add
jne
mov
xor
icebp
pop
aaa
pop
jno
aad
out
inc
inc
orl
mov
pop
mov
fiaddl
ret
pop
outsb
ja
bound
dec
inc
xchg
xchg
jbe
and
fisttpll
add
mov
scas
inc
ljmp
mov
movsl
hlt
into
imul
cmp
mov
out
mov
pop
fs
push
cmp
loop
mov
jl
xor
stc
lahf
lcall
add
xor
mov
and
xlat
dec
mov
gs
into
hlt
out
repz
call
xor
in
ds
and
xor
ljmp
inc
jecxz
adc
fistps
xchg
mov
fsts
inc
mov
add
xchg
movb
or
sub
imul
int3
in
stos
mov
xlat
mov
stos
lea
fdivr
dec
cmpsl
push
orb
cs
sub
addr16
sbbb
mov
sub
ja
pop
repnz
or
mov
inc
xor
test
xchg
out
push
popf
or
xchg
pop
or
jns
lods
shrl
push
inc
pop
sbb
push
xorb
lock
cli
jge
push
insl
sub
dec
pop
and
mov
mov
lds
cmp
fdivs
in
neg
cwtl
jmp
or
jmp
int3
xor
cld
loope
add
pop
lea
push
inc
xchg
arpl
ret
fsubrl
push
addl
xchg
and
lret
popf
add
imul
ret
push
test
test
out
cmp
xchg
adc
int3
sub
cmp
adcl
push
cmp
bound
pop
sbb
push
cs
cmp
ds
mov
loope
adc
cmc
pop
push
adc
lcall
xchg
clc
aas
mov
adc
xor
pop
insb
fcomps
push
and
shl
sar
aad
addl
pop
movsb
sbb
mov
insl
xchg
cld
and
ds
mov
daa
inc
in
test
add
stos
loope
add
push
lock
xor
cli
movzbl
out
sub
orb
xor
sub
cwtl
mov
xchg
aad
sahf
in
xchg
xor
and
mov
xor
cmp
mov
ss
xor
sub
bound
xchg
sub
sbb
adc
ss
hlt
adc
and
lret
ljmp
pop
xor
xchg
imul
or
dec
cmpsb
push
mov
adc
pop
and
fcomp
scas
das
push
test
enter
xor
mov
mov
push
cmpsl
mov
jne
arpl
mov
shlb
cld
dec
sbb
shrb
fwait
rol
mov
imul
popa
sbb
stos
and
add
ds
xor
cltd
js
call
mov
ds
inc
rclb
dec
std
sub
ficoml
call
and
fwait
adc
scas
sahf
in
pop
pushl
scas
popf
cwtl
pop
lcall
inc
test
jge
repz
pop
adc
push
gs
xchg
adc
xor
ss
mov
or
pushf
mov
sub
add
push
ret
jp
and
and
jb
sbbb
xchg
cmp
jg
mov
std
repz
mov
or
dec
imul
orb
leave
vpunpcklwd
pushf
push
push
bound
dec
stc
loopne
in
cmovp
rorl
test
insl
scas
jo
pop
adc
push
or
cmc
mov
lcall
push
or
push
ja
push
push
fwait
pop
jnp
xchg
add
out
xchg
mov
lock
rcl
xchg
into
pop
mov
or
cmpsb
xchg
sbb
shlb
in
in
dec
add
mov
dec
cmc
push
addb
int3
jp
popf
pop
icebp
and
insl
and
inc
arpl
out
pmaddwd
mov
xor
inc
pop
sbb
xor
and
cwtl
js
loopne
or
jg
xor
jle
lea
and
mov
jle
std
out
loopne
mov
xor
mov
ret
pop
sub
jbe
in
dec
stos
loope
xchg
jl
cmc
or
movsb
lcall
jl
inc
inc
movsb
imul
and
xor
xor
fstps
ds
sub
cli
scas
jnp
inc
push
dec
xchg
loopne
xchg
mov
popf
leave
jae
xchg
enter
push
fadds
sbb
lret
add
enter
repz
lods
push
test
or
sarl
dec
in
push
in
gs
or
cmp
push
mov
loopne
out
iret
sub
or
imul
rolb
inc
cmp
fsts
jmp
ffree
cwtl
xchg
lahf
imul
jnp
and
sbb
pop
vpminub
jno
dec
mov
push
dec
jecxz
mov
jb
sahf
cmp
jl
pop
aaa
rorl
fsubrs
pop
xchg
ss
std
inc
out
xor
shufps
dec
add
push
in
xor
jl
pop
fisubrl
sub
mov
push
cmp
inc
adc
lcall
test
inc
out
out
insl
adc
setns
ret
adc
push
adc
les
ret
add
xrelease
pop
mov
jmp
cwtl
mov
nop
xor
js
ljmp
push
pushf
in
mov
jbe
mov
insb
ss
inc
pop
add
out
test
std
push
dec
ss
dec
lea
insb
jg
xchg
mov
andl
mov
jmp
lret
lea
add
movsb
fcomi
jg
mov
dec
stos
pop
adc
pop
lret
xchg
in
into
add
rcl
push
imul
add
dec
add
push
mov
dec
aaa
push
aas
dec
loopne
hlt
xor
test
out
lret
outsb
push
add
aas
or
push
jl
out
insl
push
lods
mov
sub
mov
jbe
cmp
in
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
jmp
push
pusha
clc
push
call
add
or
jae
jp
pop
jp
push
adc
in
mov
inc
ss
add
xor
sbbb
inc
imul
cli
loop
sub
das
add
add
lret
or
mov
dec
outsl
hlt
mov
mov
je
scas
mov
daa
iret
add
loopne
push
add
mov
sub
out
and
adc
insb
arpl
clc
and
pop
icebp
in
popf
or
mov
push
in
xor
inc
fimuls
in
lods
mov
sbb
lods
cli
mov
dec
outsl
out
out
or
xchg
jge
sub
cmovbe
or
push
in
adc
mov
icebp
stos
loopne
jmp
and
std
jmp
cli
pop
add
call
mov
dec
jge
cmp
ja
xchg
cmp
hlt
sub
pusha
pop
push
push
leave
popa
mov
xchg
xchg
mov
insl
insb
and
pop
dec
push
in
pop
and
jmp
mov
lds
shll
sar
pop
lods
lea
insb
pop
fisttpll
mov
aas
aad
cmpsl
or
and
lret
repnz
stc
stos
add
stos
scas
xor
repnz
xchg
add
mov
and
push
mov
rorl
xchg
or
mov
pop
pop
mov
xchg
leave
rorl
repz
data16
loope
mov
push
pop
mov
and
rorb
adc
repz
pop
stos
test
dec
xchg
rorl
stc
xchg
mov
mov
fildl
cld
imul
mov
movsb
push
dec
fsubs
sbb
inc
cmpsl
xchg
arpl
bound
or
xchg
cmp
mov
pop
pop
sub
mov
nop
bnd
pop
in
in
cmpsl
addr16
mov
mov
sbb
mov
rcll
dec
scas
stc
jae,pn
dec
xchg
aam
lock
mov
enter
dec
or
movsl
push
pop
mov
jmp
sub
xchg
clc
lahf
cltd
jo
outsl
pop
cs
dec
cmc
lods
outsl
in
outsb
lahf
clc
mov
fwait
lods
xlat
aad
cmpsl
ret
fdivl
push
or
and
xor
lcall
movb
stc
xchg
mov
iret
jl
xchg
hlt
xchg
adc
cs
xor
imul
sub
popa
cmp
pushf
es
mov
int
xor
dec
loopne
clc
mov
adcl
jne
inc
and
mov
loope
and
insb
xor
adc
mov
xchg
pop
in
ret
iret
fcoms
cmp
jnp
push
ja
sbb
mov
or
mov
xchg
out
or
inc
fcoml
stc
clc
fwait
mov
jecxz
jmp
mov
jp
das
ja
clc
adc
mov
mov
xor
ss
lods
cmp
gs
les
pmulhw
sbb
sbb
pop
xor
inc
cmp
int
int
dec
out
push
mov
icebp
push
movsl
arpl
xchg
adcb
jl
sbb
dec
inc
into
add
mov
andb
lods
mov
push
fwait
iret
fwait
jmp
add
inc
in
push
push
cs
jo
fst
adc
mov
daa
xor
les
jg
mov
mov
lcall
pop
fistps
std
xlat
shlb
add
adc
das
shlb
ljmp
aaa
mov
sub
mov
add
ret
fs
popa
arpl
outsb
jge
dec
inc
mov
or
popa
mov
iret
jmp
add
xor
and
inc
push
cmp
scas
cld
xor
adc
cmp
adc
stc
sbb
lods
mov
cltd
or
cmc
pusha
xor
cmpsl
xor
pop
das
and
inc
xchg
push
dec
pop
cli
imul
movsl
sub
mov
testl
mov
js
cltd
fidivrs
inc
dec
jle
jbe
imul
push
xchg
rclb
jns
and
add
jle
repnz
ja
xlat
cmp
and
push
and
inc
test
sbb
out
mov
std
jno
scas
lret
cmpsl
addr16
mov
push
sbb
push
loope
and
addb
sub
lock
js
mov
lret
ja
mov
repnz
push
inc
repnz
insl
jae
ss
subl
ffreep
mov
jo
or
pop
cmp
and
movsb
out
test
pop
cmp
lods
popa
out
leave
movl
and
pop
dec
dec
aas
sub
sub
mov
dec
stos
std
call
and
mov
stos
stos
fistl
jle
or
fcompl
pop
push
and
out
lcall
fs
sahf
movl
mov
pop
xchg
clc
test
xor
ja
rep
mov
adc
push
jo
cltd
in
mov
and
fnstenv
push
fstl
push
imul
test
mov
push
and
subl
or
sub
dec
push
inc
cmp
and
push
fdivl
sub
mov
adc
hlt
sub
rol
inc
fcomps
arpl
int3
inc
and
jmp
jl
cli
gs
push
test
cli
or
fisubrl
cmpb
and
mov
pop
movsl
xor
and
mov
sub
mov
adc
pop
jae
movsl
sbb
xchg
pop
xchg
cmp
subl
cmpsl
cmp
push
addr16
test
xor
push
jb
adc
inc
mov
xor
and
or
lret
xchg
mov
ret
inc
jbe
popf
jge
leave
mov
cs
mov
push
push
notl
das
pushf
shlb
sahf
movsl
leave
mov
mov
cwtl
fwait
pop
adc
test
inc
scas
int
mov
pop
mov
mov
cmp
call
fwait
xchg
mov
jbe
test
and
inc
adc
and
fldl
das
sahf
sbb
aas
sbb
push
scas
mov
pop
xlat
imul
addr16
adc
loope
cmp
lcall
aaa
mov
push
pop
je
xchg
outsl
imul
push
push
dec
and
insb
loop
loop
bound
push
jo
inc
fnop
sbb
mov
sahf
arpl
push
push
stc
jle
adcb
adc
mov
xor
sbb
cmp
popf
popf
test
push
dec
insb
xchg
je
xor
or
xchg
roll
xchg
mov
push
or
xchg
cs
xchg
xor
lds
pop
popa
sbb
into
mov
inc
mov
or
cmpl
loopne
adc
jle
mov
and
xor
lret
pop
dec
adc
pop
or
xchg
dec
dec
ljmp
mov
mov
add
jb
les
stos
xchg
lahf
dec
inc
mov
or
xchg
cltd
ret
stc
jmp
lret
aas
jge
dec
outsb
in
notb
test
push
jnp
ret
pusha
or
mov
or
shrl
or
jno
pop
cli
add
pop
stos
push
jg
and
jmp
lcall
mov
dec
mov
xor
insl
stos
loop
ret
xor
mov
fcoms
movsl
jp
outsl
loope
sbb
data16
xor
scas
shlb
iret
xchg
mov
lock
cltd
js
pushf
cwtl
jbe
call
sbb
push
adc
decb
fidivl
push
mov
mov
data16
jnp
icebp
lret
lds
loopne
add
pusha
mov
mov
inc
ja
pop
ljmp
cmpsl
aaa
mov
cmc
inc
mov
arpl
pop
outsl
test
flds
xchg
rorl
loopne
rcrb
ret
push
cmp
lret
sub
icebp
loop
pop
fdivs
shll
or
push
aas
fsubrl
es
add
or
mov
or
shll
dec
ss
xchg
adc
or
adc
adc
dec
scas
xchg
xchg
rcll
xchg
shrb
or
outsl
sbb
mov
xchg
mov
xor
mov
call
sti
mov
out
add
in
add
mov
loope
push
jmp
cld
and
clc
idivb
mov
or
mov
jno
dec
sbb
push
jmp
dec
mov
outsl
stos
js
daa
orb
dec
xlat
les
xor
sbb
ljmp
out
jmp
cli
push
and
out
lret
sub
jecxz
hlt
popl
test
inc
jne
pop
mov
jnp
test
xor
cmp
pop
roll
or
test
fnsave
mov
insl
cmp
mov
and
mov
dec
and
jns
xor
jg
add
pop
int3
jp
hlt
push
cmp
movsb
xor
xchg
es
xchg
add
xchg
pop
mov
jecxz
jge
pushl
fildl
mov
mov
sub
dec
daa
lret
test
fbld
pushf
mov
adc
pop
lahf
enter
add
popf
sub
shrl
and
sub
out
pop
inc
and
mov
mov
pop
and
imul
add
mov
sbb
fsubrl
xor
jno
dec
cmpsb
dec
std
jae
pop
or
and
jmp
insl
dec
sahf
fwait
or
rcr
inc
jmp
mov
mov
xor
pop
push
sbb
out
xor
pop
dec
push
cmp
loop
pop
adc
mov
call
mov
je
adc
pop
xchg
mov
adc
inc
inc
and
mov
dec
scas
push
shrl
jno
xlat
jle
clc
mov
pop
xlat
sub
leave
movsb
jo
fcmovnu
push
adc
mov
jnp
push
int3
dec
aaa
std
lods
jp
xor
jle
shl
leave
dec
scas
mov
sub
es
and
cmp
sub
imulb
lcall
cs
cmpsb
jbe
xchg
stos
sbb
adc
aaa
movl
movsl
jne
cmp
pop
sub
lret
es
xchg
ja
sbb
aam
push
in
es
lcall
popf
es
pop
in
mov
popa
dec
sub
in
inc
scas
push
stos
and
ret
lock
cwtl
sbb
sub
aaa
push
lds
push
adc
jmp
push
dec
inc
pop
xchg
outsb
push
push
cmp
xchg
imul
jmp
movsb
imul
in
out
or
pusha
int
inc
cld
pop
out
xchg
inc
nop
loopne
or
mov
fisubl
ja
shrl
jnp
lret
mov
cld
test
dec
mov
ds
out
inc
adcl
test
data16
xor
or
cmp
jb
outsl
xor
xchg
xor
xchg
and
je
dec
jg
lahf
sbb
shl
or
xchg
dec
out
cmp
sbb
and
cltd
negb
and
and
sti
add
xor
es
rclb
jo
xor
or
push
sarb
lret
xchg
sub
lock
xor
out
pop
dec
jl
push
out
mov
sbb
xchg
or
xor
lahf
jp
adc
fwait
sbb
push
sbb
add
out
lock
repnz
jl
mov
xor
pop
sbb
leave
sub
mov
cmc
test
in
insl
insb
inc
dec
and
dec
lret
dec
cld
pusha
cmpsb
std
fmull
inc
sahf
mov
dec
inc
mov
xor
add
add
rclb
fistpl
cvttps2pi
data16
or
push
mov
or
out
pop
or
in
jecxz
daa
shr
xchg
add
mov
je
std
pusha
clc
cltd
or
jecxz
scas
addr16
stos
leave
sbb
negb
mov
jp
xchg
mov
lds
mov
loope
dec
dec
mov
push
add
add
dec
lret
pusha
pop
cli
icebp
inc
jbe,pn
or
xchg
lods
ret
iret
out
mov
push
stos
test
into
push
jg
cmp
or
xchg
loope
sub
mov
add
mov
in
mov
mov
adc
stc
out
xchg
jns
lea
sbb
cmp
push
dec
repnz
test
mov
hlt
inc
clc
cmpsl
xlat
mov
inc
loope
xor
jnp
outsb
cmp
aad
jne
sub
inc
ret
ljmp
mov
pop
cmp
cmp
inc
mov
test
cmp
push
test
add
mulb
mov
inc
adc
lods
popf
mov
imul
adc
mov
dec
and
dec
xchg
inc
adc
push
sub
mov
xchg
jge
jbe
sbb
cmpl
and
mov
xor
mov
inc
push
cltd
mov
stos
pop
add
fidivs
adc
lea
sahf
jo
add
enter
push
lcall
scas
nop
not
push
iret
and
lcall
push
dec
pop
fstpt
out
mov
arpl
push
push
outsl
hlt
cwtl
aas
lret
shll
lret
sub
cwtl
pop
pop
xchg
mov
cmpl
pop
mov
mov
sub
pop
push
fistpll
sub
adc
push
cmpb
int3
jg
add
and
xor
push
and
jle
mov
inc
or
xor
mov
fimull
or
push
insb
jae
ljmp
xchg
mov
push
cltd
xor
fbstp
push
dec
xor
dec
adc
fs
and
adcb
add
xchg
or
imul
pop
outsb
mov
loop
js
pop
lret
push
dec
test
out
outsl
xchg
cltd
dec
mov
les
aad
inc
shl
cld
xchg
push
ja
push
inc
and
int3
xor
dec
insl
pop
mov
lcall
mov
fcoml
pop
mov
xor
in
push
push
pop
pop
pop
imul
xchg
xchg
fcomp
scas
addr16
test
sbb
adc
ja
int3
push
sub
or
and
and
sub
sub
in
stos
dec
sbb
mov
mov
pop
fmulp
shlb
xchg
xchg
js
push
jae
insl
fsubrl
jo
loope
adc
shll
cmp
sbb
lock
xchg
adc
cs
sub
cmp
iret
mov
dec
fwait
cli
mov
je
xchg
sti
clc
push
insl
das
aad
xchg
aad
jne
cld
dec
loope
jecxz
sub
loope
jecxz
mov
and
fcmovu
inc
xchg
sub
mov
loope
inc
cmc
dec
addr16
or
cmp
mov
cli
arpl
fisttpl
sti
mov
and
imul
test
nop
push
ss
xchg
iret
pushf
mov
push
jnp
ja
dec
jge
mov
cmp
dec
hlt
insb
rcrb
iret
push
xor
in
sbb
loope
push
xor
mov
sbb
std
test
fs
xchg
and
jno
popa
js
sbb
aaa
xchg
sti
outsb
or
cld
shrb
push
jmp
sahf
xchg
mov
cmc
fwait
cmpsl
adc
dec
enter
insl
loopne
xchg
data16
push
aaa
and
inc
pop
jmp
into
outsb
push
gs
xchg
lret
adc
pop
dec
mov
ret
stc
sub
push
pop
js
mov
jno
cltd
mov
repz
sbb
and
ret
push
std
xchg
repz
pop
clc
cmp
sub
inc
lock
idivb
enter
pop
or
ficompl
daa
adc
dec
fld
mov
sub
cmp
jl
cltd
jne
or
sub
cwtl
stc
sbb
movsl
das
orl
imul
mov
imul
sbb
je
xchg
daa
outsb
mov
movsb
int3
mov
jae
cmpsb
pop
xchg
mov
scas
or
clc
adc
das
adc
pusha
fidivs
fstl
xchg
mov
sub
not
enter
xchg
mov
ds
jnp
mov
popf
lret
cli
fdivl
clc
les
adc
mov
and
cltd
aad
jnp
sub
jl
in
xor
popf
jp
lods
mov
xchg
pop
cmpsl
lods
and
fs
push
adc
lods
scas
mov
mov
lret
shrb
dec
mov
mov
sub
je
pop
dec
mov
stos
insb
push
mov
in
in
mov
stos
stc
dec
xchg
xlat
pop
test
std
cwtl
arpl
or
fdivrl
and
cmpsl
andb
dec
fiaddl
mov
mov
lds
mov
imul
inc
ljmp
out
cltd
test
cmp
or
mov
add
add
call
imul
or
cmp
sbb
pop
bound
pushf
pop
fnsave
andl
dec
add
fistps
mov
imul
popf
in
imul
pop
in
in
mov
jb
negl
movsb
call
jecxz
cmp
out
cwtl
and
add
test
adcl
pop
jmp
popa
fmuls
rorl
cmp
call
or
push
js
cmp
cwtl
pop
or
dec
leave
sbb
leave
hlt
xchg
loope
push
mov
fwait
inc
insb
xor
cld
cs
mov
sar
xor
or
jns
not
int3
inc
mov
das
mov
pushf
aam
mov
rcr
mov
sub
mov
jmp
scas
iret
aaa
push
shl
popf
test
add
addr16
push
adc
push
dec
jmp
or
adc
andb
in
nop
pop
mov
push
xor
arpl
fsubrs
jge
movsb
outsl
pop
inc
lret
scas
push
std
jge
mov
sbb
cmp
sbb
idiv
std
je
ficomps
daa
nop
lods
add
xchg
add
mov
pop
addl
mov
rcr
fwait
add
jno
iret
inc
lret
xor
je
popf
fcomp
bound
es
dec
mov
dec
fcomp
fisubs
inc
lods
add
dec
jp
and
pop
popf
adc
and
sbb
aaa
adc
cmp
pop
in
cmpsb
sbb
fcomps
pop
push
sahf
jmp
fstp
inc
orl
rcl
sti
or
divb
je
icebp
mov
jnp
sbb
ljmp
push
mov
mov
loop
cli
les
sub
popf
movl
aaa
cltd
inc
cmp
cwtl
aam
fs
jp
ja
and
jp
xchg
mov
lret
xchg
ja
stos
mov
jne
adc
cmp
or
sarb
leave
and
daa
cmpsb
subb
aaa
sub
push
mov
leave
push
and
jno
scas
ret
ss
test
cmc
push
cmpsl
push
popf
pusha
jg,pn
addb
addb
push
popf
jecxz
dec
les
mov
ficoms
aam
scas
cmpsl
mov
insb
jecxz
sti
lcall
lret
je
pop
scas
in
loop
lret
add
jnp
arpl
pop
fimull
sub
mov
ljmp
pop
scas
pop
mov
jle
dec
push
mov
xchg
scas
test
aaa
inc
test
push
outsl
cmpsl
lret
jmp
inc
ljmp
add
repz
iret
and
add
jmp
xchg
iret
inc
dec
cmp
movsl
dec
adc
jl
sbb
xchg
fnstsw
mov
pop
xchg
sub
lods
icebp
inc
subl
insb
stos
jge
into
add
cmp
rcr
ud1
or
jbe
rclb
adc
xor
xor
test
inc
jbe
fmuls
int3
pop
cs
adc
jge
int
insb
ret
xchg
mov
insb
outsb
xchg
mov
sub
push
cmp
movups
hlt
mov
and
xchg
mov
push
dec
xchg
ret
cmp
dec
pop
inc
imul
fists
jb
jge
pop
jb
popf
testl
fwait
int3
pop
jno
mov
movsb
jmp
push
es
loope
call
lds
xor
ret
add
aas
lret
inc
cmp
xor
leave
jo
bound
or
out
push
jmp
push
cmp
jle
sti
push
nop
cmp
repz
adc
mov
jne
imul
jle
add
xchg
inc
cmc
sub
xor
dec
ljmp
or
xor
out
shll
andl
push
lea
or
das
dec
mov
les
mov
daa
mov
jnp
data16
adc
xchg
shrb
lret
jmp
cli
xor
rcll
leave
jo
sbb
adc
xor
shll
inc
pop
mov
cmp
jl
or
jne
inc
nop
push
out
int3
lea
das
pop
mov
push
or
or
push
xchg
jns
fdivs
rolb
ret
stc
out
insl
cmp
lahf
add
imul
jbe
leave
test
push
jle
mov
mov
ljmp
cmp
mov
in
push
mov
push
ja
cld
mov
outsl
pop
sbb
aas
loop
dec
stos
xchg
xlat
xchg
imul
xchg
in
xor
and
insb
push
inc
mov
xchg
mov
call
jl
mov
inc
mov
mov
pop
fucomi
xlat
push
xchg
mov
inc
pop
insb
int3
mov
cmpsl
dec
rorl
and
pop
cmpb
loopne
add
sti
cmp
and
add
jne
call
push
jae
stos
mov
subb
lcall
lods
inc
add
pop
mov
push
sub
dec
mov
xor
mov
pop
sbb
std
and
mov
dec
stc
cmp
dec
xor
and
lods
jg
push
xchg
sub
jge
arpl
in
aaa
pop
jmp
add
adc
dec
sub
aaa
jae
mov
or
lods
cmc
mov
faddp
fnstcw
sbbl
xchg
cmp
mov
adc
fwait
stos
pusha
aam
dec
xor
add
mov
sbb
call
sti
inc
mov
push
lea
aam
pop
iret
test
mov
or
pop
rcrb
outsb
arpl
adc
pop
popf
mov
mov
mov
rcr
aad
jmp
ret
xchg
push
lahf
pop
stos
cld
dec
cmp
push
movl
jno
mov
adc
dec
xchg
mov
data16
jl
repz
xor
mov
cmp
sbb
aas
insl
inc
aas
shlb
inc
rep
pop
and
pop
dec
cs
data16
fidivl
xor
jbe
adc
ret
je
rorl
movsb
test
in
cmp
cltd
xchg
xchg
aaa
push
fbld
xor
mov
jns
outsb
sub
push
xor
push
push
rcr
out
mov
dec
mov
scas
and
fidivs
push
outsl
neg
fistpl
sbb
pop
cmp
iret
scas
fsts
add
rorb
dec
arpl
lret
mov
mov
je
jmp
mov
adc
lahf
clc
les
and
fidivl
cld
xchg
mov
or
dec
scas
mov
insl
sub
nop
int3
jle
fisttpll
popa
movsb
lret
data16
dec
rcrb
std
lods
test
fs
ficompl
xlat
clc
mov
cmp
filds
cli
pop
cmp
mov
push
notb
pop
inc
dec
lahf
inc
out
dec
dec
jnp
mov
mov
pushf
pop
stos
je
mov
inc
cmovo
les
scas
cmp
cmp
push
push
push
sbb
xlat
cs
push
ret
cmpsb
out
shr
push
sbb
loope
dec
negb
ljmp
clc
pop
add
dec
fs
mov
lcall
mov
int
aad
aaa
scas
mov
in
repnz
ss
pop
pop
or
push
icebp
shlb
inc
andl
aas
mov
fsubrl
push
sub
dec
dec
or
and
jno
adc
mov
cmc
bnd
sbb
lret
push
imul
xchg
daa
icebp
ss
inc
mov
scas
add
daa
and
aam
lods
das
mov
fdivrl
pop
add
fwait
dec
pop
dec
stc
sbb
lcall
mov
push
add
ret
mov
sub
pop
xor
das
lahf
test
add
ja
mov
push
aaa
inc
sub
cmp
sub
sub
in
jo
jb
inc
jbe
negb
insl
or
arpl
pushf
sub
inc
mov
adc
or
pop
dec
dec
test
push
dec
adc
pop
dec
xlat
fs
imul
out
mov
aad
mov
sbb
and
loop
lods
ljmp
lods
hlt
mov
mov
ror
daa
mov
in
lock
fidivrs
xorb
push
cmp
jge
jno
dec
fcompl
cmpsb
rcr
dec
mov
jle
sbb
pop
or
mov
dec
xchg
fs
leave
pusha
imul
add
dec
in
xchg
or
jg
fbld
adc
popf
hlt
pop
test
mov
outsl
dec
xchg
jae
mov
repz
sub
loopne
adc
scas
outsb
adc
notl
enter
and
mov
movsb
out
push
subb
sbb
mov
dec
addr16
icebp
or
cmp
lea
cmc
jmp
idivl
adcb
push
xorb
sub
std
xor
aam
sbb
jbe
cmp
jo
shlb
out
mov
cmp
loope
and
movsb
sbb
fsub
test
arpl
loop
push
push
pop
inc
xchg
adc
ss
iret
clc
enter
orb
inc
movsl
stos
jge
jno
mov
divb
addr16
push
jmp
stos
add
popf
adc
inc
xor
pushf
sti
sub
pop
xchg
call
jo
jnp
mov
fnstcw
and
sub
lret
in
jp
mov
mov
cli
pusha
mov
subb
out
cmp
ljmp
add
sbb
movsl
sarl
aaa
add
lret
xchg
ljmp
sbb
cltd
xchg
pop
pop
in
js
add
arpl
dec
pop
adcl
add
jecxz
clc
or
loopne
imul
push
test
enter
push
pop
aaa
add
mov
enterw
gs
jmp
pop
jmp
dec
xchg
pop
fstpt
in
test
shll
scas
mov
test
gs
add
xor
mov
mov
fisubl
xor
bswap
rcrl
xor
loop
mov
into
xchg
icebp
jno
xchg
jecxz
lea
mov
inc
pop
iret
jl
dec
jno
jno
mov
ja
adc
mov
sarl
push
mov
dec
push
push
rol
add
xlat
mov
repz
stos
add
call
in
shrb
xchg
and
mov
add
testb
mov
cmpsl
push
enter
jnp
out
lods
inc
scas
xor
jg
iret
stos
or
cs
push
xor
aam
mov
lock
loope
jp
fs
jecxz
mov
pushf
rorb
dec
pusha
adc
popa
push
int3
mov
xchg
xlat
mov
std
pop
and
rclb
mov
pop
mov
pop
mov
dec
popf
cmovno
mov
add
dec
add
inc
test
and
fwait
jmp
and
xor
mov
in
dec
leave
out
dec
or
insb
pushf
jo
jle
cwtl
pop
ret
mov
xor
push
out
mov
cli
icebp
aas
loopne
adc
insb
mov
adc
popf
incl
in
rorb
movsb
push
add
sub
enter
addr16
fcoml
ja
stos
int3
lret
and
add
add
add
sbb
cmp
cltd
pop
fucom
imul
repz
pop
loopne
push
mov
jmp
movsl
fcoml
sbb
pop
dec
out
loop
ret
shll
mov
mov
daa
std
in
out
add
or
or
xor
mov
pushf
lods
ret
cld
ret
adc
add
stc
cmpb
lea
cmp
test
adc
stc
stos
adc
jge
scas
jb
gs
sar
enter
out
cwtl
mov
push
call
sahf
add
dec
aaa
push
movl
jnp
fwait
push
in
push
add
lcall
push
rcll
imul
cmp
dec
pushf
mov
push
inc
and
pop
pop
xchg
addb
dec
dec
adc
jge
mov
add
addb
sbb
shlb
subl
sbb
jge
push
push
mov
js
or
xchg
mov
add
iret
or
out
xlat
jno
inc
add
fs
xor
xor
cmpsl
ss
std
pop
je
mov
cwtl
leave
and
xor
mov
xchg
pop
add
mov
adc
movsl
aaa
or
xchg
mov
mov
sub
loope
fimull
dec
cwtl
movsb
mov
imul
popa
inc
dec
fsubl
lcall
sub
mov
outsl
cmp
xchg
cmpsl
out
pop
stc
pop
mov
in
into
adc
fwait
push
pop
mov
into
subl
mov
pusha
mov
les
sbb
das
cltd
or
dec
jbe
mov
sub
sub
popa
out
sahf
mov
cld
mov
test
mov
mov
stc
cmp
fwait
pop
cli
mov
dec
push
xchg
aad
div
aas
sub
fidivs
icebp
test
mov
dec
addr16
loop
sub
data16
aam
das
test
ss
dec
loop
mov
bound
jecxz
arpl
scas
out
lcall
out
add
mov
das
scas
stos
jb
inc
dec
push
sub
cmp
out
xchg
bound
mov
cmpsl
mov
iret
jecxz
push
push
call
test
add
scas
cmp
lret
xchg
mov
dec
mov
pushf
jge
aad
sub
mov
mov
cwtl
lods
cmp
pop
xchg
fnstsw
pop
xlat
das
movsb
mov
xchg
loopne,pn
mov
xchg
data16
xor
in
xor
push
xor
aaa
adc
cld
lock
xchg
push
rol
nop
mov
fadds
inc
pmuludq
cmp
pop
sbb
jle
adc
pop
xor
jmp
fidivrs
adc
add
sbb
pop
push
fwait
pushf
sub
enter
inc
fistpll
mov
in
mov
int3
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
nop
testb
add
out
aad
sub
jp
pop
jp
jl
daa
dec
jne
dec
pop
jg
scas
or
inc
lahf
clc
xor
ds
and
stos
stc
push
mov
int
push
movsl
gs
ljmp
jno
dec
cmp
daa
gs
jno
push
adc
cmpsb
push
pop
pusha
pop
iret
push
sub
data16
shll
mov
pop
outsb
mov
jno
ret
add
adc
push
mov
sub
sbbl
push
ss
adc
mov
sub
mov
pop
daa
sbb
push
sahf
mov
lock
push
cmp
loop
cwtl
sub
mov
mov
in
das
aam
ljmp
xor
sbb
cmpsl
sub
divl
add
inc
dec
outsl
push
push
mov
add
jne
push
out
sti
adc
scas
stos
in
pushf
pop
xor
mov
mov
out
xchg
out
fiadds
push
pop
mov
sbb
pop
lock
mov
daa
insl
xchg
iret
insb
out
sub
push
jg
lcall
jnp
cmp
arpl
dec
and
sub
add
mov
pop
ret
xchg
ljmp
popf
and
add
cmp
shrb
or
mov
push
jp
test
aas
xor
sbb
jae
leave
xchg
insb
and
sbb
sbb
mov
int3
inc
add
push
int3
mov
cmpsl
add
pop
ds
mov
sub
xchg
ja
adc
fs
xor
test
cmp
aam
in
mov
leave
stos
xchg
js
or
clc
jle
cmp
jo
out
add
adc
ljmp
mov
cld
pop
fmull
scas
ja
pushf
rorl
out
sahf
sub
jge
jnp
cwtl
sbb
fisttpl
dec
insb
pop
dec
cmp
loop
dec
inc
push
jle
stc
arpl
mov
xchg
imul
inc
xchg
fwait
imul
and
int3
repz
or
push
leave
mov
push
cltd
stc
das
and
in
mov
mov
lret
jecxz
xchg
scas
mov
jbe
jle
pop
decb
push
or
and
push
cmp
mov
fimuls
sahf
stc
sti
sub
test
push
sub
das
mov
xchg
dec
pop
sub
cmp
mov
jae
stos
push
push
ret
addr16
sub
and
cmp
in
mov
mov
arpl
aad
mov
jg
popl
pusha
jg
add
out
bound
mov
adc
pop
add
lcall
mov
pusha
bound
test
or
pop
movsb
jb
push
pop
enter
push
pop
xor
cs
repnz
or
mov
test
add
dec
movsl
fistpll
xor
sbb
jb
dec
push
in
mov
scas
sub
inc
cld
pop
cld
adc
mov
cmp
dec
out
lret
cmp
adc
cmpsb
xor
cmpb
cmp
push
inc
add
adc
pop
or
cmp
rcrb
push
lret
jg
xchg
mov
es
mov
adc
jns
ret
fs
push
sbb
lret
sbb
je
enter
in
mov
sub
xor
sub
xor
pop
push
movsl
testl
xlat
or
cwtl
xor
fcomps
or
rcl
shrl
scas
inc
add
jb
mov
lret
les
inc
push
es
and
mov
sahf
imul
mov
cmpl
cmp
dec
jbe
xor
std
pop
ljmp
push
stc
fstl
dec
sbb
ja
lret
fdivrp
jno,pt
bound
lret
dec
pop
mov
mov
les
mov
add
jnp
dec
mov
orl
cmpsl
pop
outsl
outsb
xchg
jne
jbe
push
pop
out
lahf
fimull
imul
int3
test
mov
mov
push
push
ja,pt
mov
dec
xchg
call
mov
or
pop
mov
mov
loop
cmp
cmp
shll
repnz
in
je
stc
movsl
pop
mov
sbb
sub
mov
gs
jle
cmp
daa
int
sbb
ljmp
and
repnz
ss
std
test
cmp
out
push
dec
loope
in
pop
test
inc
scas
mov
add
jl
jge
lea
jae
pop
enter
fildll
mov
add
insb
push
push
imul
cmpsl
daa
movsb
xor
or
mov
cmpb
push
add
pushf
mov
into
into
xchg
ds
xor
dec
mov
das
les
xlat
iret
pop
lea
mov
sub
outsb
add
aaa
or
js
enter
adc
dec
testb
outsl
mov
jmp
loopne
rcrl
cmp
leave
aam
inc
jl
rcrb
or
int
xor
or
enter
dec
ret
pop
test
out
call
out
push
mov
addb
movsl
in
sub
jmp
inc
mov
punpckhwd
inc
int
inc
xor
adc
lock
add
lcall
mov
and
push
cltd
mov
ds
push
mov
sahf
inc
imul
push
sub
addr16
pop
cmc
push
aad
fnstcw
cmp
inc
pop
cmp
ljmp
std
xchg
ret
dec
dec
mov
fcmovbe
stc
adc
sub
outsl
fdivrl
inc
mov
sbb
sub
pop
pop
jge
stos
adc
ja
out
das
cmp
adcb
incb
repz
mov
cltd
sbb
and
ja
xchg
in
push
adc
iret
ret
push
mov
dec
arpl
mov
jecxz
je
sbb
popa
or
cmpsb
jmp
or
xchg
hlt
ret
fs
jp
xor
nop
dec
cli
lcall
nop
lea
out
inc
jecxz
push
mov
es
jne
cmp
mov
mov
add
out
jmp
mov
fcmovu
cmp
adc
mov
add
sbb
pop
pop
mov
divb
mov
mov
popf
sti
inc
aam
mov
mov
xorl
add
daa
out
push
mov
rsm
fidivl
push
adc
test
mov
ljmp
into
js
jbe
sbb
pop
adc
pop
dec
mov
xor
xor
sti
jne
into
mov
jae
jl
dec
cmp
cmp
ss
jne,pn
dec
inc
mov
ffree
xchg
mov
jmp
cltd
mov
jecxz
loopne
push
out
dec
shll
sub
or
std
hlt
test
outsl
pop
movsb
rcrl
std
jb
mov
xchg
daa
push
xchg
hlt
shlb
jle
ds
or
dec
jnp
loop
inc
mov
push
fnsave
mov
mov
sbb
popl
mov
fldt
dec
push
mov
loopne
nop
pop
jecxz
in
mov
ret
push
add
inc
cmc
cwtl
and
cwtl
push
cmpl
pop
cmc
into
loopne
aam
xor
fistpl
pop
jle
dec
addr16
jo
jp
jbe
push
scas
out
daa
arpl
nop
push
movsl
or
cli
test
xor
loop
sub
dec
in
and
outsl
xchg
inc
inc
sbb
enter
fdivl
test
mov
dec
or
outsb
stos
push
les
xor
dec
cmp
dec
inc
cld
aas
dec
sbb
dec
adc
dec
repnz
push
mov
xor
outsl
scas
sarb
daa
pop
movsl
push
test
xchg
aaa
inc
mov
push
mov
or
cltd
int3
outsl
ja
mov
xchg
or
xor
cmc
jge
push
lret
mov
daa
inc
sbb
jp
mov
mov
shlb
dec
push
orl
pusha
icebp
ret
cmp
xchg
cmp
or
and
jecxz
mov
or
mov
movsb
mov
sub
les
lahf
mov
dec
outsl
arpl
dec
push
add
and
notl
mov
adc
cs
dec
mov
and
loope
mov
cmpsb
and
push
sti
fstpl
push
ret
fs
xchg
cmp
mov
mov
pop
into
pop
test
xor
add
mov
jp
cmp
dec
arpl
xchg
movsb
stc
aaa
and
xchg
stos
jno
cli
adc
xorb
mov
push
inc
inc
and
push
lcall
daa
cmpsl
das
jb
mov
jecxz
inc
imul
hlt
add
jg
pop
ds
ds
mov
mov
jns
lret
lcall
jbe
mov
and
xor
push
pop
lret
arpl
rorb
pop
cli
sti
cmp
or
add
mov
cs
sbb
adc
jl
lret
and
out
movsb
test
lret
testb
and
pop
sbb
mulb
adc
xor
jg
mov
int3
add
or
sub
loopne
pop
repnz
popa
xorb
cmp
loope
daa
mov
scas
inc
mov
push
push
push
add
icebp
daa
pop
into
push
sub
lods
clc
cmc
fmul
rol
out
mov
jnp
cmp
andb
flds
lock
or
stc
and
jecxz
cli
push
sub
repz
adc
and
out
cmp
push
add
sbb
xchg
test
fdivrl
int
jns
xor
test
or
sub
mov
ss
cmpsb
stos
jae
sub
mov
fdivl
push
cmpsl
pop
jns
imul
dec
fadds
icebp
lcall
push
jmp
ja
mov
test
push
push
cmp
popf
add
sbb
mov
inc
dec
outsb
dec
bnd
jne
arpl
sbb
clc
mov
xchg
bound
xchg
shll
push
lcall
pop
xchg
cld
addr16
ds
add
int3
mov
arpl
and
rol
pop
scas
mov
aad
mov
data16
popf
push
xchg
movsl
nop
jmp
into
and
stc
jbe
mov
mov
pushl
add
and
xchg
sub
ljmp
mov
insl
push
jg
sbb
add
mov
cs
mov
xor
xchg
fscale
enter
les
xor
inc
dec
pop
popa
mov
sbb
int3
pop
pop
shlb
pop
loop
push
sbb
sub
in
or
mov
aas
mov
shrb
mov
popa
ret
es
in
xor
ret
mov
dec
adc
mov
pusha
push
pushf
je,pn
cmpsb
lea
push
aaa
sarl
add
mov
sar
lahf
aaa
gs
rorl
lcall
adc
pusha
loop
dec
bound
mov
test
and
scas
add
jg
pop
pop
jg
repnz
and
ja
xchg
out
ja
add
or
push
jne
inc
into
ss
sahf
xchg
frstor
or
ret
in
daa
pop
and
mov
cwtl
cmp
sarb
fcomps
mov
shlb
pop
es
adc
push
adc
ret
inc
xor
xchg
fisttpll
or
sti
mov
pop
lret
and
test
adc
add
sbb
adc
icebp
out
cld
insl
pop
repz
xor
lret
rorb
sub
int3
imul
dec
into
or
mov
mov
in
lods
ret
insl
sbb
movsb
push
shrb
mov
sub
fisubl
push
test
mov
and
mov
in
mov
and
inc
paddusb
imul
sub
pop
leave
adc
lds
mov
scas
test
loope
mov
mov
outsb
pop
ret
lods
adc
daa
test
movntq
adc
inc
cs
stc
mov
inc
or
mov
shlb
adc
sub
cmp
or
xchg
jmp
dec
mov
loop
dec
cmp
cmovb
das
inc
fs
lcall
or
mov
mov
push
shl
push
jmp
dec
sub
and
push
imul
into
pusha
push
mov
adc
push
sarl
daa
out
adcb
jl
andb
add
mov
mov
fsubrp
test
enter
xchg
in
push
dec
lock
jb
mov
or
popf
insl
pusha
cmpsl
mov
movsl
push
sbb
sbb
std
push
or
iret
lods
cmpsl
stos
pop
xlat
or
rclb
xor
loope
xor
dec
xor
lahf
jg
aas
ret
xor
push
mov
jmp
cmp
add
mov
addr16
clc
push
outsb
push
insl
outsl
mov
adc
adc
xchg
jae
rcrb
sub
addl
mov
fcomps
insb
inc
fsubp
loope
sub
jge
aas
and
adc
cmpsb
mov
or
pop
cmp
and
or
mov
insl
push
loop
sarb
jmp
lock
jbe
push
fwait
sbb
jb
jb
mov
push
xor
add
dec
loop
inc
dec
into
or
int
jg
out
cwtl
mov
or
add
jae
call
push
sbb
and
std
movsl
clc
pop
rcrl
dec
inc
nop
pusha
insb
xchg
push
and
dec
mov
jl
mov
add
pop
and
xor
mul
dec
fcomps
ss
sbb
andl
pop
xlat
imul
loope
push
addr16
test
inc
test
stos
ret
dec
leave
jg
clc
xchg
mov
and
sub
shrb
adc
test
mov
jnp
sbb
repnz
push
dec
outsl
jae
jbe
mul
cmp
pusha
dec
mov
cltd
jmp
and
jmp
push
popa
insb
popa
mov
cmc
and
ret
lahf
nop
push
pop
test
mov
int3
lock
and
adc
aas
mov
jne
jae
testl
daa
inc
add
pop
sub
fwait
and
inc
lods
jae
dec
mov
adc
jae
ficompl
loop
into
push
mov
scas
pop
xlat
and
xchg
mov
mov
fldenv
inc
mov
test
mov
lea
cmp
jae
ljmp
pop
mov
and
pop
jo
inc
mov
out
fldcw
mov
sti
jbe
fsubs
or
push
rclb
mov
mov
mov
aad
out
aas
fwait
xchg
jecxz
mov
xchg
sarl
daa
push
das
jb
pop
pop
jecxz
shll
aas
sub
sbb
test
fnstenv
pop
sub
mov
mov
lods
aas
lods
fiadds
mov
dec
popl
adc
pop
pop
sbb
mov
lea
gs
mov
std
add
mov
sbb
sub
ja
je
add
mov
dec
inc
fimuls
shlb
mov
inc
pop
jp
mov
fdivs
orl
push
fisttpl
mov
push
jmp
mov
mov
cwtl
stos
in
xor
adc
test
or
pop
push
or
insl
mov
pop
bound
mov
pop
or
lea
and
in
dec
sbb
cwtl
mov
add
xchg
aam
jg
jmp
daa
mov
test
xchg
mov
imul
in
jbe
jo
mov
fwait
add
in
pop
imul
sub
mov
fcomip
jp
insb
and
xor
mov
je
jle
sbb
ret
lret
jnp
stc
pop
dec
imul
loop
mov
insl
stos
xor
cltd
mov
pop
and
movsb
aad
xchg
call
jge
es
in
pusha
imul
xchg
cmp
pop
mov
jns
mov
int
add
hlt
and
roll
inc
cmp
test
inc
push
fsubl
bound
shlb
pop
fildll
sahf
cmp
and
sub
fimull
or
mov
inc
dec
add
cmc
mull
icebp
xor
dec
movsb
jno
push
dec
sbb
push
sbb
insb
jecxz
push
pop
or
xchg
jno
sti
imul
outsb
je
add
mov
jbe
sub
sbb
cs
jne
sub
mov
push
in
sub
bound
aas
test
out
sub
inc
push
shlb
call
shrb
xchg
push
lcall
add
mov
aaa
aad
idivb
cmp
bound
jge
lret
adc
mov
imul
jb
data16
adcb
sti
ret
push
outsl
sbb
insl
aad
ss
xchg
inc
dec
test
sbb
cltd
mov
and
mov
jnp
lret
mov
pushf
int
sbb
scas
cmp
gs
rol
icebp
sbb
pop
subl
mov
lock
arpl
fdivrs
xor
movsl
clc
pusha
test
scas
std
xchg
sbb
jbe
pusha
dec
cmp
mov
pop
lods
cli
and
stc
mov
xchg
mov
loopne
and
fwait
and
icebp
es
push
popf
dec
dec
jge
xchg
out
xor
adc
ljmp
cli
jl
adc
insb
movsl
sub
scas
inc
jmp
mov
stos
outsb
xchg
jg
xor
cmp
cli
jnp
xlat
cmovne
loop
aaa
mov
adc
aad
inc
pop
add
lret
push
fcmovnu
adcb
dec
cmp
loope
sbb
sbb
rcrl
mov
sti
jne
aam
xchg
movsb
xlat
fcoms
ret
inc
push
xor
addr16
loope
cmpsb
pop
test
mov
xchg
mov
mulb
hlt
ret
out
mov
push
nop
ficoml
popf
cmp
fwait
xchg
ds
scas
daa
mov
in
xor
fs
mov
je
pop
sarl
pop
fld
and
adc
mov
fldz
or
adc
push
and
pop
scas
inc
or
push
mov
inc
add
into
mov
mov
and
push
imul
shrb
and
mov
dec
cwtl
sahf
push
cmp
sub
jbe
lret
cs
or
or
jo
in
mov
mov
andl
and
pusha
outsb
hlt
jno
movswl
pop
pushf
call
dec
cmp
sub
xor
push
cwtl
fs
mov
stc
push
aam
pop
jae
lret
xchg
nop
and
sbb
lea
jmp
sbb
lods
adc
push
jl
push
js
ficoms
xchg
add
xchg
push
mov
jne
in
stos
fsubp
xchg
sbb
jmp
sub
js
test
fs
insl
stos
orb
push
addb
mov
movsb
sub
lock
pop
xor
int3
jnp
stc
mov
pop
jb
fstpl
scas
push
push
sti
sub
push
xlat
shll
loope
mov
int
call
lcall
outsl
add
das
fsubrs
outsb
inc
add
xor
notb
cmp
push
cmp
dec
jae
in
sti
sbbb
cmc
cs
imul
sahf
sbb
xlat
in
sbb
sub
lds
or
fs
cmc
in
and
stc
dec
dec
mov
push
fstl
dec
ss
push
jns
outsl
push
xchg
bound
jl
fcomps
sbb
js
das
pop
cmp
pop
xor
js
negl
mov
xor
enter
cs
push
clc
jp
icebp
test
dec
xchg
adc
and
mov
cmp
mov
flds
incb
std
and
lahf
push
pop
les
dec
jo
fisttps
mov
push
xchg
add
lds
insl
or
sbb
push
adc
ljmp
iret
push
test
cmp
sahf
call
jae
stc
cltd
mov
sub
mov
cli
movsb
shll
out
jbe
dec
call
xchg
je
cmp
popl
addr16
inc
ja
mov
std
cmp
shll
sbb
mov
mov
fbld
cmpsl
jb
pop
lret
aaa
ret
clc
retw
add
movsb
mov
xor
jns
or
jno
aad
add
and
xor
pop
movb
sub
mov
inc
xchg
add
pushw
out
pop
xchg
pusha
mov
xchg
xchg
das
or
cmp
popf
xor
sub
pushf
mov
mov
gs
loop
jbe
adc
insl
addb
cmp
push
cmp
shrb
dec
enter
jne
mov
outsb
add
xchg
sar
cmpsb
aas
subl
pop
mov
add
push
xchg
jle
arpl
add
jne
loop
das
jne
dec
dec
cmpsb
pop
lock
xchg
lret
or
js
mull
outsb
fdivr
sbb
jmp
std
push
mov
or
push
xchg
pop
or
or
adc
ficoml
push
lods
mov
xor
push
les
std
in
adc
or
shr
jecxz
les
mov
inc
leave
aas
daa
xor
cs
sbb
push
sbb
or
popa
lret
fsubs
dec
jmp
cmp
cmp
pop
add
call
or
mov
push
sbb
test
xor
mov
mov
fwait
cs
movsb
leave
xchg
cmp
adc
aam
push
push
popa
js
es
rcr
sub
stos
clc
test
adc
push
std
pop
adc
ja
or
gs
and
aam
cmp
out
sbb
aad
dec
aas
loopne
adc
in
sub
hlt
mov
lcall
lea
cli
addr16
ss
dec
jge
mov
mov
cmpsl
or
cmp
lret
int
jecxz
cmpsl
gs
pop
mov
push
call
rorb
mov
inc
lret
jo
adc
mov
mov
adc
push
fnstsw
je
jmp
sub
ret
jecxz
fistpl
push
cltd
and
lret
mov
mov
lods
js
out
shr
int3
push
movb
push
pushf
nop
sarb
xchg
adc
lock
clc
lds
jg
adc
cs
and
add
lahf
push
xor
fidivs
roll
cmp
gs
fstps
loope
ja
mov
jl
mov
test
repz
ror
mull
call
dec
pop
das
adc
mov
lods
loop
push
dec
test
std
arpl
ret
jnp
jmp
loope
popf
in
clc
addr16
rorb
pop
iret
mov
pcmpgtw
sub
fwait
std
out
daa
jge
fsqrt
icebp
pushf
in
mov
js
mov
je
sti
sub
mov
adcl
jle
mov
push
jne
stos
imul
jns
adc
sarl
jge
dec
icebp
insl
mov
fwait
sbb
imul
ja
aad
mov
fucomip
gs
ret
std
rcll
aaa
adc
cmpsb
adc
mov
inc
push
mov
push
hlt
pop
sbb
mov
push
add
mulb
jle
xlat
push
mov
cld
rcrl
jg
xor
pop
push
pop
cwtl
jb
loop
sub
int3
mov
mov
sti
repz
push
mov
mov
cmpsl
xchg
ljmp
cmpsb
push
add
and
dec
or
shl
mov
dec
sbb
push
push
stos
mov
push
xchg
sub
sahf
mov
mov
test
lahf
repz
mov
ret
in
aaa
lea
adc
out
cmpsb
enter
aad
push
mov
test
cltd
add
pop
fdivrs
ror
gs
push
insb
inc
test
icebp
dec
test
test
lahf
xor
sub
rol
dec
lods
mov
test
mov
lea
and
insl
xor
loopne
adc
in
cmpsl
sbb
ds
sub
shll
and
mov
imul
fwait
lods
add
fucomi
cmc
insl
cmp
imull
jo
cs
idivl
add
out
sub
dec
xor
mov
and
sub
cli
cmp
lods
mov
or
jge
loopne
or
jl
out
mov
xchg
jne
cmp
mov
and
outsb
cli
mov
cmp
xchg
int
leave
inc
push
aad
in
fwait
shl
xlat
adc
pop
and
fildl
clc
repnz
dec
mov
xchg
call
shll
in
lock
loop
movsb
or
jmp
setbe
mov
cli
jae
idiv
test
and
jp
xchg
aaa
scas
jecxz
mov
les
mov
repnz
xchg
aas
rolb
sub
scas
mov
push
insb
ja
jg,pt
in
inc
js
add
pop
pop
fnstsw
xchg
leave
xor
orb
xchg
aam
cmp
loope
popa
movsb
mov
push
cld
and
mov
iret
add
movsb
mov
xor
rcl
dec
sbb
and
add
pop
insb
int
lods
mov
stos
or
mov
js
cmc
in
or
cwtl
scas
pop
mov
dec
adc
jge
add
jmp
ret
cltd
sub
push
and
dec
leave
pop
adc
xchg
push
jecxz
fcmovu
fimuls
pop
cmp
cmp
xchg
push
jp
loopne
jo
sub
mov
ja
rcrb
popf
mov
scas
addr16
adc
sbb
cwtl
rolb
sub
in
add
lret
testl
mov
sub
jmp
mov
cli
mov
bound
push
daa
fsubl
cmpsb
xchg
cmpsb
orb
jecxz
push
mov
mov
xchg
adc
rcll
testl
leave
and
push
push
adc
lret
push
inc
mov
push
jns
dec
loopne
xchg
dec
push
rcr
jne
sbb
xchg
jle
cmp
inc
scas
arpl
ds
js
int
rcrb
ljmp
repz
call
lret
sbb
test
sarb
jns
add
dec
mov
adc
pop
sbb
mov
push
mov
cld
cwtl
inc
xchg
popf
or
ja
mov
in
xchg
fildll
sub
fs
std
leave
lods
std
repnz
ud1
pop
sarb
lret
clc
xor
sub
cmp
cs
pop
mov
stos
inc
xchg
es
arpl
push
or
shrb
add
jmp
inc
clc
jbe
imul
aam
xor
cmc
mov
xchg
jmp
jo
dec
jbe
adc
or
out
ficomps
push
sbb
pusha
mov
or
dec
xor
cmp
add
loope
push
push
in
lret
arpl
ficomps
cmp
lret
push
cwtl
or
sub
movsl
sub
outsl
aas
jnp
ljmp
sbb
push
push
addr16
xor
rclb
pop
or
sbb
lret
pop
pcmpgtw
int
imul
mov
pop
mov
push
jo
leave
test
hlt
jnp
std
jmp
shrl
xor
inc
inc
jno
adc
lock
jnp
shrl
fwait
mov
dec
or
shrl
aam
and
test
stos
cmp
mov
jb
sub
ds
adc
sbb
pop
xor
out
mov
repz
pop
mov
ds
fldt
mov
jl
adcb
add
mov
btc
lahf
mov
sbb
stc
in
sbb
cmc
add
in
or
mov
pop
push
pop
int3
xor
cli
scas
add
xchg
jo
jbe
push
cs
mov
loope
lds
cmp
xorl
pop
rdpmc
jmp
pop
dec
xchg
add
adc
ja
jmp
leave
addl
js
add
inc
movsl
mov
ret
push
and
push
clc
xchg
je
mov
fidivl
push
outsb
out
hlt
sub
and
xlat
xor
xor
cltd
jmp
sub
jmp
inc
mov
movsb
icebp
inc
adc
push
dec
nop
std
movsl
enter
hlt
stos
fistps
je
jp
aam
xor
push
add
pushf
mov
xchg
imul
jo
outsb
sub
cmp
cmp
mov
ret
and
adc
das
icebp
dec
pop
ss
xchg
mov
pop
xchg
popf
pop
xor
inc
in
sbb
pop
push
pop
fldcw
repnz
fwait
inc
jno
adc
sub
dec
push
test
push
adc
loop
cmp
aam
adc
lcall
inc
test
arpl
lods
loope
add
ret
and
into
push
mov
pop
xlat
addr16
xchg
imul
and
int
lahf
loop
fldl
xchg
and
sahf
repnz
sub
mov
loop
xor
adc
dec
add
xlat
or
movsl
stc
scas
and
cmp
pop
insb
lds
or
data16
jne
push
inc
mov
gs
call
sub
jne
add
xor
aam
jnp
cmpsl
inc
mov
mov
add
add
lock
out
cmp
clc
js
shll
popa
in
test
mov
leave
sbb
mov
mov
ss
mov
ja
sti
cli
mov
enter
int
stos
test
or
imul
aas
cs
stos
mov
rcl
adc
push
mov
enter
leave
xor
and
pop
scas
dec
and
andb
adc
mov
lret
stos
lods
add
fbstp
outsl
ja
out
scas
fcompl
icebp
fcompl
push
lods
dec
mov
and
push
stos
lret
xchg
pop
ljmp
xchg
sahf
cmp
scas
sbb
in
cmpsl
xlat
push
mov
mov
dec
enter
cwtl
sub
sti
sbb
mov
mov
lock
mov
mov
mov
in
xor
push
sbb
test
dec
jl
in
mov
aam
sbbb
ss
mov
neg
or
jno
aam
movsl
xchg
jae
mov
dec
inc
outsb
mov
or
mov
rol
out
cwtl
mov
sbb
sbb
gs
sub
in
jmp
xchg
cmp
loope
jbe
mov
or
xor
rcl
test
stc
mov
add
xchg
dec
dec
scas
je
lea
sub
lret
pop
add
clc
mov
imul
ja
cld
jge
ds
mov
movzbl
or
dec
mov
imul
sub
adc
movsl
aas
shrl
mov
mov
rorb
xor
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
sub
fwait
lods
fistpl
pop
imull
push
call
int3
jmp
jns
add
jp
and
lods
ljmp
mov
jl
dec
mov
dec
leave
arpl
imul
lock
repnz
in
xor
mov
popf
cwtl
inc
push
andl
jmp
mov
imul
pushl
fwait
xchg
and
fadds
lret
arpl
pop
add
mov
fpatan
pop
mov
bound
add
adc
stc
stc
outsb
mov
inc
inc
add
cld
dec
mov
cltd
ficomps
ja
xchg
or
xor
scas
xchg
xchg
dec
and
imul
sti
or
or
loope
inc
jecxz
stos
outsl
xlat
cmp
jle
popf
pop
cltd
into
icebp
inc
leave
hlt
cmp
sub
cmp
dec
xor
ljmp
fsubs
mov
das
addr16
mov
ds
xor
ljmp
int
mov
push
add
outsl
xor
sub
lgs
xchg
pop
pop
xor
lods
fldt
adc
push
mov
outsb
loop
xlat
mov
push
hlt
data16
sub
and
cld
out
pop
shll
xchg
inc
aas
push
mov
pop
lret
les
add
les
cwtl
sbb
test
clc
jns
sbb
adc
addr16
fbld
lods
pop
mov
shlb
movntps
or
pop
fs
or
bound
mov
or
in
aas
cmp
cld
push
ljmp
push
hlt
and
into
mov
jmp
push
push
mov
sti
xchg
out
fsubl
jg
out
xor
fstpl
and
sub
test
push
sub
orl
dec
sub
mov
sbb
add
cmp
xchg
pop
mov
pop
mov
repz
push
push
loop
fsub
andl
nop
pop
push
sarb
xchg
push
leave
sub
insb
sub
xlat
mov
mov
in
mov
sbb
lahf
mov
mov
fld
outsl
xchg
in
jmp
mov
shr
inc
cltd
lock
dec
add
aaa
inc
dec
pop
cmpsl
adc
jns
movsl
or
lea
sub
sbb
insb
mov
add
add
jo
xor
inc
mov
movsl
out
lds
jl
rcr
xchg
lahf
jnp
and
ljmp
jle
inc
ret
stc
roll
je
scas
inc
cmpsl
mov
outsb
jo
adc
mov
fsubp
icebp
xchg
ret
xor
out
xchg
or
fs
in
mov
and
cmpsl
fidivrs
push
adc
mov
push
repz
or
xlat
xlat
addr16
sub
iret
mov
sub
scas
cs
inc
push
loopne
or
jmp
xor
push
adc
xchg
stos
xor
fstps
pusha
out
loope
das
inc
ss
aad
sub
jge
mov
sbb
or
jno
aas
mov
mov
xchg
cs
inc
cmpsb
nop
insl
cmpsw
fdivs
js
cmc
ret
xchg
mov
jae
lret
xor
pop
xchg
clc
mov
fistpl
lods
push
mov
pop
cmpl
xor
stc
push
ljmp
daa
cli
adc
ljmp
sbbl
inc
dec
repnz
outsb
mov
dec
fimuls
cltd
inc
jp
sub
jo
pop
cmp
mov
std
xor
xorl
int3
fwait
mov
cmpsl
int
sub
pop
inc
push
jb
pop
or
mov
and
or
xchg
outsl
mov
mov
sbb
sbb
jno
push
shl
adcb
adc
jl
mov
mov
and
and
repnz
mov
add
jno,pn
add
and
call
insb
mov
test
mov
mov
jns
sub
push
sbb
cmp
insl
jnp
lds
test
mov
rorl
mov
and
aas
adc
jnp
jmp
cli
push
pop
stc
cmp
sub
out
add
jns
imul
pop
or
jl
ja
or
out
icebp
aaa
or
add
dec
lock
addb
mov
insl
sub
loopne
aam
imul
xchg
adc
mov
cmp
jnp
stos
pusha
xchg
xor
xlat
xor
dec
mov
fs
fst
sub
pop
ret
mov
cmp
mov
mov
xchg
nop
dec
xchg
cs
add
inc
repnz
mov
or
or
sbb
xor
jmp
lcall
ret
xchg
xchg
scas
cwtl
jne
xchg
push
push
add
xor
xor
pop
in
sbbb
mov
fyl2xp1
xchg
fwait
add
aam
call
xor
sub
call
xor
call
daa
shll
push
imul
je,pn
jne
mov
mov
fmull
mov
es
fldcw
mov
cmp
aas
dec
mov
mov
rolb
iret
dec
sbb
int
jl
stos
cltd
add
jne
hlt
lods
xor
cmp
xchg
in
mov
jnp
les
pop
lods
fisttpll
lds
mov
fnstenv
clc
movsl
push
inc
jmp
inc
mov
dec
lods
mov
cmpsl
dec
aad
test
dec
pop
jno
mov
imul
rcll
push
jecxz
das
jmp
push
je
call
fidivs
adcl
sub
and
or
lds
imul
arpl
and
xchg
loopne
cmp
imul
xchg
cli
inc
push
inc
and
cld
sub
es
lods
jmp
add
es
add
arpl
xchg
mov
into
pop
push
cmc
aaa
popa
and
push
jo
sub
int3
mov
cltd
lods
stos
adc
and
mov
cwtl
pop
rcl
or
sub
lock
cli
lods
hlt
lds
fstps
cmp
scas
sub
adc
je
test
or
enter
cmp
jne
in
popf
lret
fwait
mov
in
inc
mov
add
orb
fidivrs
push
mov
fistpl
popf
push
arpl
filds
mov
mov
push
outsb
sub
and
fs
pop
push
and
stc
dec
ds
jnp
in
sbbb
sbb
cmpl
mov
ljmp
scas
xor
iret
or
jp
aas
ficoms
aaa
imul
mov
push
scas
pop
mov
adc
or
out
fsubrs
jecxz
mov
jp
mov
and
push
cmp
jnp
clc
gs
shlb
std
mov
aam
mov
sbb
mov
ds
sbb
incl
sarl
call
pop
aad
in
arpl
fnstenv
cmp
pop
inc
lods
aas
movsl
int
dec
mov
testb
mov
add
add
mov
dec
inc
icebp
adc
cmp
adc
or
mov
mov
or
mov
adc
outsl
or
push
mov
arpl
cmp
sub
mov
icebp
sbb
mov
popf
lahf
ds
jns
jns
jnp
push
and
dec
scas
sub
jmp
fists
mov
push
add
xchg
jnp
int3
enter
add
mov
popa
add
aam
and
adc
add
mov
in
fsts
sbb
adc
sbb
or
nop
xchg
mov
jmp
arpl
inc
dec
push
stc
inc
cmp
mov
andb
mov
add
pop
movsl
xor
sti
pop
fistpll
repnz
jbe
out
jmp
rcr
mov
inc
loope
repnz
adc
add
out
mov
and
addr16
push
inc
mov
jecxz
ss
mov
push
push
dec
dec
mov
idiv
mov
push
or
mov
push
adc
sub
aas
push
lods
rcl
cmp
mov
in
inc
mov
sahf
fidivrl
aam
in
add
mov
test
lock
call
dec
xor
xor
jp
mov
jne
and
js
std
xchg
xchg
xchg
fsubr
int3
js
leave
mov
cmp
mov
movlps
aad
pop
cvttps2pi
test
flds
pusha
fidivs
fstpl
jecxz
pop
int
push
loop
into
jmp
xor
add
js
sbb
stc
xor
mov
xchg
cld
xor
scas
push
xor
in
mov
je
fsubrs
xor
fldt
and
add
pop
outsl
scas
mov
fldl
cli
lock
sbbl
inc
fdivl
lahf
iret
mov
in
adc
xchg
loopne
insl
inc
rclb
ss
dec
fstpl
push
cmp
test
cwtl
fsubrl
std
rcr
das
dec
jmp
mov
ja
dec
mov
idivl
mov
push
mov
jle
sti
or
fists
lret
jns
cld
stos
push
in
aas
and
scas
pop
sahf
xor
xor
mov
hlt
std
cmpsl
push
push
xor
mov
scas
add
hlt
sbb
xchg
mov
mov
lcall
sbb
xrelease
ja
pop
lea
cmp
sub
mov
gs
or
dec
shl
hlt
into
pop
pop
pop
adc
or
xchg
or
dec
and
jne
int
in
lcall
or
adc
lds
push
sub
ja
inc
xor
push
cmpsl
mov
subb
jmp
popa
pop
js
fcomi
fstpl
fisubl
jmp
inc
dec
popa
dec
mov
orb
push
or
jae
push
dec
mov
push
aam
push
int3
jp
je
imul
daa
xchg
xor
jnp
ds
adc
ja
out
mov
cld
lahf
jmp
aad
mov
mov
fmuls
mov
dec
cmpsb
cmp
in
cmp
push
inc
mov
and
and
add
pop
outsl
loopne
xchg
daa
cmpsb
aam
movsl
dec
add
scas
mov
push
int3
cmc
movsb
pop
in
dec
push
push
out
xchg
sub
sbb
outsl
mov
pop
dec
jp
enter
pop
loopne
or
fs
xlat
and
dec
add
testb
mov
lods
dec
dec
push
lods
xchg
aas
sub
adc
fildl
gs
push
sbb
mov
jle
mov
add
lods
add
fldenv
fiaddl
add
aas
sbb
jge
cmc
jg
push
loope
sbb
pop
in
xor
cwtl
jnp
xchg
cmp
sbb
xchg
pop
xchg
mov
cmp
pop
ret
shlb
dec
mov
cld
xchg
sbb
push
jbe
addl
dec
dec
popf
test
jnp
and
popa
leave
pop
arpl
push
mov
test
je
mov
lods
loopne
dec
js
sbb
xchg
aas
mov
cmpsb
xchg
pop
mov
inc
lea
sbb
jge
and
loope
mov
in
mov
dec
cmc
mov
loopne
or
dec
sbbb
adc
lock
xchg
cmp
cmp
add
fcoms
mov
inc
enter
repz
mov
xlat
pop
sbb
addr16
repz
icebp
sub
cmpl
into
imul
cmp
lea
add
icebp
daa
sub
xor
add
fs
cmp
sub
push
adc
inc
aas
data16
loope
mov
icebp
std
push
inc
mov
mov
mov
sub
mov
xchg
add
and
jbe
popf
out
jmp
mov
xchg
push
xchg
pop
sbb
je
shlb
lcall
xor
ljmp
movsl
push
aas
aad
mov
ds
jge
lock
out
insb
fneni(8087
in
idivl
out
into
xchg
rcll
subb
cmc
out
scas
cld
dec
adc
test
cmpsb
js
mov
scas
inc
int3
pop
mov
mov
jbe
push
addr16
xchg
lcall
scas
xchg
xchg
in
orb
mov
mov
push
fistpl
xchg
lret
cmpsb
aaa
sbb
sub
xor
arpl
mov
inc
add
dec
popf
pop
iret
mov
andb
fs
clc
ljmp
in
cmp
push
gs
jmp
or
sahf
out
lods
push
int
xor
xor
bound
sbb
or
xchg
fadds
xchg
outsb
jne
pop
fists
mov
daa
enter
jg
or
popa
inc
xchg
stc
call
cmp
loopne
cmp
pop
mov
add
ss
jnp
addr16
sub
mov
js
getsec
sahf
mov
loop
mov
inc
mov
int3
dec
push
cmp
lea
out
test
inc
mov
push
ljmp
imul
cmp
push
out
cmp
mov
mov
ret
cs
int
aas
dec
push
scas
imul
js
push
call
jne
pop
fwait
pop
in
pop
add
mov
icebp
dec
imul
jl
insb
das
cmp
jno
inc
cmp
sbb
sub
inc
lds
cmp
arpl
mov
insl
enter
lds
ficoml
stc
add
and
orl
sbb
fimull
cmc
and
push
aaa
pop
push
stos
fstpt
stos
stos
stos
and
push
cmp
adc
add
ss
cmp
test
add
cwtl
jecxz
mov
push
movsb
stos
rcr
popa
sbb
je
mov
inc
xor
in
roll
fcmovnbe
stos
inc
and
int3
sbb
out
stc
adc
stos
popf
addl
jne
repz
push
cmc
cli
jb
add
xchg
ret
sbb
stos
inc
mov
jge
addr16
ljmp
push
mov
sahf
mov
cmp
out
pop
imul
jns
pop
lahf
push
jg
mov
mov
xchg
push
stos
dec
jns
arpl
jmp
xchg
popf
mov
jbe
popa
dec
push
call
sub
inc
sbb
ss
mov
frstor
dec
jmp
test
dec
loopne
jle
push
and
and
aad
xchg
jno
subl
fmuls
popf
fmul
mov
pop
mov
mov
cmp
pop
mov
push
cmpsb
inc
push
ja
daa
xchg
repz
rcrb
lahf
add
inc
subb
dec
lods
add
cmp
jp
scas
in
dec
xchg
popf
popl
add
stc
cmp
dec
dec
jnp
faddl
loope
mov
outsb
out
adc
lret
inc
js
jnp
in
mov
mov
push
jae
movsl
pop
pusha
push
cmp
or
sub
fidivrs
xor
out
xor
cli
gs
push
and
clc
add
cmpsl
add
fdiv
jg
jle
lea
xchg
push
popa
jp
testb
add
aas
sub
xor
hlt
pop
addr16
pop
sbb
popf
or
fwait
adc
jnp
in
mov
lea
dec
jnp
inc
mov
push
scas
stos
xchg
test
data16
mov
and
cmp
pop
sub
shll
jl
lea
adc
aad
push
mov
push
stc
mov
cmpsb
jmp
lahf
cmc
roll
sbb
inc
cmc
stc
mov
or
push
test
leave
faddp
aaa
shrl
or
cmp
lret
inc
pop
loop
adc
jmp
addr16
pop
cmp
test
xor
in
test
jle
dec
mov
or
shlb
xchg
popa
ljmp
xor
push
sub
xor
je
repnz
xchg
aam
and
pop
shll
inc
dec
fnstcw
mov
lods
mov
push
mul
push
mov
icebp
fiadds
pop
out
js
add
cmp
aad
les
pop
pusha
inc
and
mov
cmp
in
cli
jae
aam
fnsave
mov
or
dec
ds
add
lret
aam
sub
pop
mov
push
es
stos
xchg
jb
sbb
mov
insb
jne
pop
mov
lea
movsl
stc
dec
jo
xchg
mov
scas
out
hlt
push
dec
repnz
jp
push
mov
stos
push
popa
adc
push
rclb
mov
js
mov
and
sbb
xor
cltd
movsb
or
testl
ss
sbb
push
data16
fldpi
mov
inc
push
ss
inc
ret
push
loop
push
inc
rclb
out
jns
pop
sbb
fwait
mov
loopne
xacquire
lret
inc
bound
dec
insl
sub
sbb
push
repz
pop
xchg
sub
stos
or
pop
cmp
rcll
std
xchg
mov
cmp
cld
ljmp
lods
int3
cmp
imul
lock
cmp
jne
jg
clc
add
ja
pushf
adc
test
xchg
vmovdqu
outsl
push
pop
sub
lret
ljmp
pop
adc
mov
jl
jp
inc
and
sub
push
lods
in
inc
mov
iret
bound
add
pop
pop
nop
xlat
icebp
inc
cmp
sti
mov
mov
jne
dec
into
sub
div
aam
pop
fsubl
inc
add
mull
js
roll
jnp
jne
inc
pause
scas
lea
mov
cmp
fsubrl
cmp
popf
cmpsl
cli
adc
sbb
test
sbb
mov
add
in
dec
xchg
int3
inc
into
xchg
orb
add
aas
xlat
stos
mov
jp
pushf
aad
mov
and
push
pmaddwd
push
jb
test
imul
jns
add
dec
ss
stc
and
shrb
cmp
add
fstpl
stos
adc
shll
mov
sbb
imul
xlat
jg
xor
sub
xor
pop
call
pushl
mov
xor
in
xor
addr16
mov
out
pop
push
pop
fdivl
xchg
data16
aad
add
loop
ret
dec
stos
xchg
std
out
dec
jne
lea
push
icebp
push
aam
add
or
xchg
mov
shlb
cltd
inc
xchg
insb
mov
xchg
call
cmp
sub
dec
jo
adc
cmpsl
dec
dec
enter
lret
adc
sbb
mov
inc
es
mov
xor
stos
push
andb
xchg
pop
sbb
xchg
jecxz
inc
psubsb
lods
and
lcall
leave
pop
cld
sbb
add
mov
adc
mov
pop
pop
jns
mov
out
pop
pop
adc
jmp
cmpsl
adc
pushf
mov
xchg
jmp
jno
push
clc
mov
xchg
pop
sbb
sub
mov
mov
dec
xor
jmp
repz
adc
jns
push
mov
push
mull
in
dec
cmp
push
fsubl
and
add
cmc
or
pusha
cmp
fsub
dec
pop
in
jne
jmp
repz
mov
fs
cmp
cmc
dec
sbb
or
pop
movsl
sbb
or
jae
xchg
imul
add
and
xchg
fidivrs
nop
sub
dec
jl
int
mov
and
dec
jg
cmp
xchg
adcl
mov
data16
in
xchg
pop
test
pop
sbb
jae
ret
pop
sbb
jno
scas
cld
xchg
sbb
repz
or
mov
scas
insb
addb
sub
outsl
pop
add
pop
and
cmp
inc
cmp
inc
cmp
jp
rclb
loope
stc
in
pop
sub
popa
arpl
cmp
push
dec
fsubl
or
sub
test
test
fidivrl
mov
ret
xor
jmp
stos
stc
xlat
leave
jns
and
sub
mov
cld
push
enter
mov
lods
push
mov
sahf
fmuls
xchg
cmp
scas
jb
xor
jb
inc
xor
jg
lret
iret
sti
loopne
add
scas
inc
pop
jecxz
mov
push
fisttpll
lret
cmp
nop
repnz
bound
scas
pusha
mov
addl
xlat
add
xchg
pop
pop
rorb
push
or
loope
movsb
or
rcl
je
mov
sarb
arpl
push
jecxz
movsl
jp
add
xchg
push
call
jecxz
mov
es
enter
pushf
ficompl
add
mov
sarb
sub
and
add
mov
add
cmpsb
and
sub
xchg
mov
mov
xor
or
jnp
dec
pop
pop
push
lods
dec
cmp
cmp
sub
mov
enter
add
ret
hlt
arpl
ror
cs
sub
int
xlat
lods
ds
fcmovne
cmp
jecxz
repz
push
jp
add
ljmp
shll
orb
jmp
push
out
shrl
or
or
push
mov
jnp
test
cmpsb
aaa
mov
add
icebp
cmp
jae
pop
lcall
inc
adc
lret
xlat
sub
mov
push
cmp
shlb
rcr
mov
jae
adc
movsl
mov
inc
lods
pop
aas
fsts
sub
push
xchg
sarb
subb
xchg
in
movsl
stos
inc
cmc
imul
mov
mov
fnsave
pop
lret
and
iret
mov
prefetch
cmp
std
xchg
subl
mov
pushf
cld
repnz
cmp
fs
ja
stos
mov
adc
loope
pushf
fisubrl
or
jb
les
xchg
sbb
out
fimuls
out
repnz
or
dec
sub
das
out
inc
mov
ss
aad
sbb
cld
cmp
out
mov
fadds
imul
and
mov
dec
nop
cmp
push
pushf
ljmp
iret
sub
inc
jbe
aas
sbb
inc
adc
popa
popa
repnz
iret
repz
fcompl
jbe
mov
dec
pop
pop
iret
lret
dec
cli
xchg
push
dec
xchg
ret
insb
test
aas
in
cli
cmpb
scas
cmc
adc
in
sti
insb
int
or
sti
outsb
mov
rcll
mov
xor
add
and
or
dec
repz
test
in
and
dec
push
pop
sub
dec
cli
loope
pop
inc
mov
out
sbb
int
jnp
aaa
cmp
adc
xor
xchg
insb
push
loope
add
cmp
lods
inc
sbb
ret
ljmp
ss
test
pop
cmp
pop
lret
iret
into
jg
sahf
stc
ret
scas
jge
xor
gs
mov
incb
test
dec
push
and
jmp
cld
dec
imul
imul
insl
pusha
inc
clc
outsl
aaa
xor
out
pop
dec
inc
pushl
jne
sbb
lret
add
in
mov
mov
ficoml
mov
mov
addps
sub
mov
fistpl
add
insl
jae
push
xor
jae
and
xchg
dec
lcall
ss
inc
jle
ds
mov
sbb
and
jns
sub
call
stos
lahf
and
sbb
out
xor
daa
xor
loopne
xchg
scas
int3
mov
jp
test
push
out
xor
stos
cli
out
and
jp
or
fldcw
add
inc
jg
cld
and
jmp
pop
or
add
push
ljmp
sti
cmp
sub
adc
es
jne
dec
fbld
ja
push
mov
sub
jo
popa
jl
xchg
jge
rcrb
test
xchg
fs
jno,pt
push
push
lret
js
inc
sbb
mov
lahf
cld
gs
popa
inc
pop
mov
mov
imul
sub
mov
dec
insl
mov
repz
push
sub
aaa
mov
subb
ja
dec
stc
mov
ss
std
push
sbb
sub
mov
out
fsubr
mov
insl
mov
ficompl
int3
in
xchg
inc
xor
gs
int3
ret
xchg
ret
nop
add
sub
cmpl
or
inc
xor
popl
mov
enter
nop
shlb
fbstp
push
xor
xor
cwtl
cld
loopne
add
sub
cmp
test
add
cmc
adc
out
mov
rcl
dec
mov
out
divb
shrl
scas
stc
add
push
cmp
sub
pop
mov
test
das
imul
ja
pop
hlt
rcll
xchg
sbb
sbbb
sub
fmulp
push
addr16
mov
adc
inc
or
testl
xchg
and
mov
adc
inc
cli
stc
insb
xchg
pmulhuw
nop
dec
stos
sub
aam
repnz
cwtl
mov
ret
mov
dec
xor
cli
jb
jge
imul
into
js
in
mov
xor
inc
mov
mov
xor
pop
test
lods
aam
movsl
out
or
out
insl
outsl
cmp
call
xchg
cwtl
push
mov
sub
jmp
je
mov
in
cmp
dec
andl
push
and
mov
repnz
adc
in
leave
cwtl
mov
xchg
mov
xor
mov
mov
xor
sub
xchg
aas
pop
popf
sbb
int3
xor
in
shl
jo
mov
push
sub
sbb
mov
mov
les
xchg
inc
jns
push
inc
jnp
push
repz
add
mov
test
cmp
xor
push
icebp
xchg
push
push
mov
push
jecxz
cs
add
int
mov
xchg
or
mov
nop
mov
dec
xchg
std
fdivrl
insl
mov
sub
pop
or
les
cmpsb
inc
lds
dec
js
ret
iret
add
mov
sbbl
push
ds
or
cmp
jge
and
and
mov
vphaddubq
fdivrp
jmp
movsb
cmpsl
or
repnz
jae
or
js
ret
push
shlb
adc
aas
mov
adc
push
fsubr
rcl
inc
adc
xor
movsl
push
shlb
notl
pop
adc
and
mov
movl
es
pop
fnstcw
insb
jge
inc
sbbl
jbe
xchg
lret
jecxz
push
add
lret
cmp
sub
mov
cmp
lods
and
or
outsl
je
push
add
inc
jle
push
mov
stos
ja
push
aad
fucomip
movsb
sub
jbe
xchg
adc
sbb
push
lahf
cmp
test
subl
decb
sub
je
or
jg
std
mov
int3
in
mov
lods
jo
jbe
lret
dec
adc
push
lret
xor
xchg
inc
cmp
inc
loopne
jle
es
icebp
or
enter
aas
sbb
sti
addr16
insl
fcoml
dec
fcmovnb
add
cltd
dec
sub
inc
jp
push
mov
jecxz
sbb
iret
inc
mov
in
lods
rcr
es
mov
enter
dec
dec
and
pop
inc
fisttps
test
jo
mov
shl
arpl
dec
dec
jp
mov
adc
jne
inc
out
insl
inc
xchg
roll
bound
sbb
and
pop
jno
mov
pop
mov
movsl
mov
mull
out
dec
es
sbbl
in
stc
jbe
and
mov
scas
dec
cwtl
add
clc
mov
movl
into
push
cli
lret
sub
xchg
sbb
call
xor
scas
out
cltd
push
mov
cmpsl
rolb
stos
mov
dec
jmp
bound
cli
imul
push
jp
jp
dec
cmp
mov
jecxz
mov
cmp
cwtl
pop
adc
out
das
pop
or
pop
outsl
dec
dec
dec
out
lock
filds
movsb
pop
or
pop
jno
xor
pushf
mov
sub
sahf
sub
mov
sbb
loope
push
lds
loope
aad
or
mov
out
movsb
nop
inc
dec
adc
mov
outsl
adc
enter
lock
jae
rcrb
loop
mov
pop
dec
push
dec
cld
jne
outsb
jbe
xchg
test
sbb
lock
pop
rcrl
sub
mov
jbe
fstpt
dec
mov
pop
push
push
mov
pop
sbb
in
and
pop
cmp
mov
fldl
pop
or
out
mov
sbb
cmpsl
push
mov
call
add
shlb
mov
pop
popa
adc
and
lahf
mov
fsubrl
out
cmp
xchg
xchg
fcmovnu
pop
sbb
fidivrs
sbb
dec
add
loope
xor
mov
xor
and
shlb
xor
std
jne
rcll
fidivrs
lret
sbb
dec
lret
and
fs
push
sbb
cmp
in
leave
addr16
lods
mov
sti
cltd
testl
es
jns
push
xchg
xor
pop
sub
and
or
icebp
xor
and
mov
mov
es
sti
orb
cmpsl
cmpsl
adc
jp
inc
jl
cmp
pop
pop
jmp
hlt
pusha
popf
scas
jns
sbb
jb
ret
fisttpl
lock
and
inc
in
in
je
cld
and
pushf
push
ds
jmp
pop
stc
xor
pop
lock
pop
movsl
jns
sub
movsl
push
mov
mov
cs
jns
cmp
inc
insl
pop
xchg
cmp
mov
inc
or
es
int
lret
int3
subb
push
sbb
mov
les
xchg
push
sub
inc
pop
cwtl
cmp
mov
xchg
xor
lcall
clc
out
out
adc
shr
les
scas
arpl
sub
mov
xor
adc
fstl
clc
dec
xchg
push
leave
inc
push
std
sub
movsl
jmp
cmpsl
jo
lods
xchg
push
pop
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
scas
pop
nop
dec
add
add
add
add
cmp
lods
add
mov
add
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
popf
mov
inc
loope
aaa
dec
add
rcll
rolb
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
push
mov
xchg
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
xor
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movl
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
dec
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
xorb
jl
popa
add
xchg
add
ljmp
inc
sahf
and
lods
clc
pop
shr
mov
imul
test
fwait
mov
movsb
popa
sti
test
or
mov
loop
xor
mov
outsb
mov
test
pushw
rcl
or
sbb
test
push
mov
pop
movsb
insl
bound
mov
icebp
push
test
hlt
dec
nop
mov
jb
push
lahf
ss
loopne
cld
dec
popf
xor
mov
or
ficoml
mov
movsl
dec
je
addr16
sub
cltd
scas
jne
cmp
test
clc
dec
cs
jbe
pop
jl
leave
or
jge
jl
sub
and
push
cli
xchg
push
pop
push
and
jb
cwtl
push
mov
mov
push
xlat
jge
movsb
test
movsb
lret
lahf
adc
push
push
lds
int
insl
fdivr
sbb
push
fnop
shlb
lock
mov
or
ljmp
and
pop
mov
push
out
jmp
adcl
or
stos
iret
adc
cmp
in
xchg
lcall
dec
xlat
or
mov
add
push
repz
imul
push
or
pop
shlb
int3
cwtl
arpl
leave
mov
cmp
pusha
out
cmp
std
test
je
inc
xchg
sbb
call
sub
ss
pop
outsl
sub
es
loopne
sbb
cmpsb
outsb
mov
sti
mov
ror
jmp
jne
in
dec
pop
push
add
std
jbe
bound
cmp
aam
or
lret
nop
mov
int
mov
adc
insl
in
inc
jecxz
pop
or
pusha
int
jecxz
mov
shrl
lods
in
cltd
push
mov
jle
lahf
jle
fwait
mov
leave
cmc
out
enter
popa
mov
fildl
pop
xor
adc
into
faddl
loope
iret
lea
cli
pushf
test
pop
shrb
fimuls
push
xchg
aam
inc
inc
lahf
leave
pusha
mov
fsts
cs
nop
das
add
cs
add
popa
leave
scas
push
mov
dec
data16
xchg
xchg
test
out
divl
fprem1
dec
enter
jo
push
repz
mov
lret
xor
fwait
mov
jecxz
scas
repnz
rorb
add
idiv
jg
mov
mov
fldl
aaa
out
jle
add
xchg
add
pop
rcrl
xchg
idivb
lds
jecxz
mov
fdivrs
dec
push
jge
mov
out
daa
loop
jb
mov
loope
push
faddl
and
lret
adc
mov
daa
inc
dec
inc
jle
mov
shl
jle
loopne
scas
mov
cmpsb
cltd
adcb
inc
mov
out
mov
push
jae
jo
add
and
sub
jg
adc
in
ret
int3
mov
rcrl
pop
jns
fnsave
je
fs
add
pop
dec
in
gs
mov
inc
out
inc
mov
add
ret
insw
pop
jle
out
add
cld
mov
lret
jle
subl
dec
mov
std
xor
jle
or
jnp
and
push
fwait
fs
pop
rcrb
lea
sbb
bound
in
cmpsl
aad
bound
lock
aad
xchg
aad
xchg
cmp
sbb
inc
mov
mov
inc
fistpll
and
sub
pusha
out
out
mov
es
pop
stos
shll
sti
fsubrl
mov
and
sbb
int3
sub
inc
push
cli
imul
or
pop
xchg
and
push
lcall
jl
imul
xchg
jns
mov
lods
shlb
push
dec
cltd
inc
jmp
sub
lahf
fdivr
fwait
push
jp
shrb
sbb
int3
xchg
mov
sub
add
int3
adcl
sub
loope
jns
call
mov
aas
xchg
push
add
call
out
sub
bound
push
inc
sbb
jl
mov
in
fdivrs
test
xor
nop
lods
rcrb
lret
shll
add
aam
mov
enter
testl
cmp
add
faddl
in
or
xor
push
les
mov
in
in
cmp
test
test
mov
sub
lcall
xchg
cmpsb
jnp
xchg
popa
push
mov
add
adc
and
lods
divl
lahf
push
aam
icebp
push
out
dec
dec
dec
mov
movsb
mov
pop
sbb
pop
xchg
mov
sub
add
xchg
add
sub
mov
ja
and
mov
shrb
movsb
jg
jnp
push
lods
daa
mov
mov
cli
movsb
push
inc
inc
rcll
push
out
add
out
jmp
insl
mov
ret
cmp
and
sbb
mov
cmp
insb
incb
leave
lods
jnp
push
and
add
pop
lock
lea
outsl
shrb
in
leave
jbe
adc
insb
pop
imul
adc
pop
lds
pop
adc
cwtl
shll
or
jmp
inc
or
ljmp
pusha
mov
shll
insb
mov
imul
pop
cmc
xchg
mov
cltd
loopne
xor
fnstenv
jb
mov
sub
rcrb
cli
add
jg
mov
fwait
jecxz
mov
lcall
push
fs
sbb
stos
jno
repnz
xor
movsb
repz
orw
dec
or
add
mov
shr
jbe
jbe
cli
mov
adc
inc
add
and
cmp
in
mov
call
xchg
dec
push
mov
pop
cli
push
repnz
insb
inc
call
jecxz
lds
or
fwait
imul
inc
test
stos
and
stos
stos
sub
fs
fs
pop
mov
mov
sti
dec
das
divl
cmovns
js
pop
test
lret
mov
addr16
sub
lss
pushf
push
push
xor
mov
jno
jl
cmp
sti
es
jnp
pusha
insb
sbbl
xchg
adc
fbld
out
inc
cmpsl
mov
test
sahf
frstor
mov
jbe
dec
mov
mov
rolb
aaa
adc
into
hlt
push
sti
iret
lcall
les
xor
fidivrs
sub
adc
call
or
push
rcr
jns
mov
adc
sbb
mov
lea
mov
loop
adc
fidivl
std
jnp
loopne
loope
lret
and
filds
inc
lret
sbb
lret
push
sbb
std
jecxz
insl
ficoml
mov
mov
mov
lcall
xchg
clc
add
push
add
mov
jp
push
dec
scas
aas
test
add
add
or
add
ud0
leave
and
inc
xor
push
jns
cs
rcl
xchg
daa
shrl
loop
ret
mov
dec
les
xchg
shl
xor
cmp
cwtl
les
mov
stc
fisubl
js
lcall
sbb
sarl
andl
cmpsb
lods
loop
adc
lret
cld
xor
cmpsl
dec
dec
bound
cmp
sbb
or
jge
sbb
inc
sub
dec
test
ret
mov
xor
fisubrs
dec
pop
pop
jae
lret
inc
cmp
jnp
in
outsl
mov
mov
sub
mov
cmovo
xchg
fistl
nop
mov
loopne
pop
push
into
rclw
sti
gs
sub
xor
out
push
sbb
pop
jp
iret
scas
loopne
rcr
in
out
cli
pop
jno
shrl
out
stos
xor
and
out
loope
mov
mov
push
lock
mov
push
cmp
imul
pusha
orl
push
mov
cmpsb
test
neg
sahf
mov
js
loope
loopne
lods
add
sbbb
lock
test
mov
dec
jns
aas
push
or
cltd
pop
fstp
mov
vpandn
adc
enter
jnp
ljmp
rcll
fnstenvs
sahf
jns
cmpsb
or
xchg
or
shl
and
add
jl
out
adc
dec
sub
scas
cwtl
insb
xor
dec
jno
inc
hlt
out
aam
lods
sub
push
mov
xor
stos
jmp
cmpsb
mov
dec
shl
add
or
jnp
mov
or
ss
inc
cwtl
mov
sarb
cmp
faddl
sub
fstpl
jp
addb
out
enter
mov
aam
mov
pop
adc
mov
mov
lea
xor
rcrb
arpl
pusha
arpl
fwait
jmpw
cmp
mov
and
and
std
lcall
adc
fisubs
icebp
cmp
jge
push
push
ja
loop
jae
rolb
push
jge
addr16
mov
rcrb
fmuls
mov
add
hlt
mov
std
jl
dec
pop
cmp
jo
add
mov
or
pop
scas
mov
adc
dec
loope
not
sbb
xlat
je
push
repz
mov
lcall
insb
dec
in
sub
cmp
dec
mov
add
sahf
mov
daa
aad
sub
mov
jns,pt
or
push
loopne
rorl
lock
hlt
push
sbb
jl
and
call
ret
popa
fsubl
bnd
dec
in
sub
xor
pop
adc
mov
push
sbb
push
cmpsl
jl
lret
shrb
and
and
in
mov
dec
rol
pop
ja
mov
rorb
push
cwtl
mov
pushl
mov
and
popa
fmull
inc
push
in
sahf
cld
ja
stc
scas
sub
mov
movsl
push
dec
dec
xchg
xchg
and
sub
gs
push
jge
rcl
arpl
sbb
call
pusha
lret
or
mov
mov
stos
fwait
mov
enter
or
ljmp
cmp
scas
mov
lahf
mov
loope
icebp
shl
or
xchg
scas
scas
notb
notl
dec
std
xchg
cmp
movsb
ja
jl
shl
mov
xchg
mov
scas
xchg
out
dec
dec
lret
jno
xor
mov
test
jno
rorl
pusha
out
add
sub
push
push
addr16
push
idivl
push
ret
imul
xor
sbb
paddsw
movsl
pop
add
sub
fnstsw
jne
mov
movsb
loop
xchg
xlat
stos
std
pop
pusha
test
mov
leave
add
and
inc
out
mov
xor
adc
fmuls
push
inc
or
xorl
lret
sti
xchg
xor
push
jb
cmpsl
cli
pop
pop
das
cmpsb
jp
shrl
cmovae
pop
inc
cltd
or
lds
pop
lea
sahf
mov
aas
and
scas
movsb
jg
jmp
enter
js
jmp
ja
ret
push
and
std
inc
mov
sahf
inc
sahf
cld
dec
pusha
push
jo
xchg
jo
test
mov
stos
or
std
hlt
dec
hlt
das
pop
fld
push
add
pop
mov
mov
push
xchg
fstpt
outsb
add
xchg
add
negb
test
jns
decb
or
frstor
imul
mov
in
sub
lock
sub
mov
sti
push
int
push
adc
xor
insl
cs
loop
xor
jne
xor
nop
nop
scas
or
sub
adc
or
and
mov
inc
in
jmp
push
mov
lock
inc
into
fwait
sub
mov
sub
adc
mov
hlt
push
dec
pop
mov
cmp
fistpll
jge
aad
fldl
loop
or
mov
mov
fxch
mov
jle
and
scas
cli
inc
push
subl
jo
sub
lcall
inc
insl
ret
mov
xchg
cmp
xchg
inc
idivb
mov
in
std
sub
sbb
into
mov
pop
movsb
lods
jne
push
cmp
inc
lcall
jl
xchg
and
lcall
int3
cmp
or
jge
lahf
mov
and
push
repnz
movsb
lret
inc
les
daa
mov
push
inc
dec
sub
sub
adc
sbb
das
fadd
dec
add
je
mov
inc
inc
mov
xor
int3
pop
out
hlt
sbb
xlat
xchg
push
push
iret
cmpsb
jb
test
jbe
loopne
sbb
imul
xlat
xchg
dec
sbb
mov
cmpsb
scas
cltd
mov
mov
jle
inc
mov
jo
ljmp
cmp
test
lcall
in
fcoms
push
jne
loope
pop
inc
cmpsb
push
dec
jb
aam
sahf
dec
iret
sbb
mov
xchg
cmc
mov
fisttpl
pop
xchg
xchg
and
setg
adc
and
in
es
popa
cmp
fidivrl
mov
shlb
enter
in
loopne
cmp
and
lea
sub
mov
in
addr16
int
push
jmp
ja
dec
cli
dec
and
jmp
jo
test
pop
pop
fistps
sbb
cmp
pop
sbb
xlat
insl
sub
dec
aaa
adc
dec
fdiv
cmpl
jmp
adc
into
rorl
xchg
mov
bound
ss
cli
lahf
mov
and
test
push
jnp
cmp
sbb
add
jg
pop
aad
push
dec
cmp
sbb
add
xchg
add
jp
dec
sub
orl
xor
inc
cld
and
hlt
nop
xchg
jp
lods
jbe
jp
or
jge
cmp
movb
push
test
pop
out
in
mov
jns
fidivs
inc
xlat
xor
outsl
test
mov
lock
sti
or
cmp
hlt
lods
lahf
inc
cmp
fidivs
inc
sub
adc
cmp
xchg
gs
fisubl
lds
bound
aam
and
adc
addr16
jne
fs
mov
test
mov
std
out
inc
lret
xor
jmp
sbb
sbb
xchg
mov
cmp
cmpsb
lock
xchg
jge
push
stc
jae
cmp
pop
shll
lahf
mov
out
lods
sbb
xchg
imul
aaa
jb
bound
dec
aas
pop
orb
cmp
adc
push
jbe
call
insb
adc
je
int
mov
add
inc
pop
jo
dec
movsl
dec
daa
or
sub
addr16
aas
jl
fistps
fdivrl
sbb
dec
adc
loopne
bound
push
das
or
or
pop
xor
push
push
and
enter
outsl
add
inc
gs
xchg
das
rolb
lods
xor
mov
xor
jg
inc
fidivs
out
rcll
nop
pop
sbb
movsl
cmp
xchg
xchg
sub
ss
xor
icebp
bound
inc
pop
movsl
xor
out
mov
pushf
and
mul
pop
push
push
mov
mov
sbb
jnp
inc
dec
scas
jno
nop
test
or
mov
int
lods
xor
push
sbb
lods
sbb
xchg
out
xor
mov
xchg
bound
aaa
test
popa
sbb
unpcklps
mov
push
inc
fnstenv
jo
gs
jb
adc
xor
dec
ds
push
sub
push
pop
loope
test
fldt
dec
sub
add
push
push
aas
ja
inc
mov
lea
addl
pop
xchg
mov
cmc
dec
dec
mov
cmp
inc
jns
icebp
jge
cmp
xchg
dec
sbb
jecxz
pop
adc
pop
pop
cwtl
cmp
sbb
ds
int
xlat
sahf
xchg
clc
insl
mov
inc
add
popf
paddd
cmpsl
mov
and
repz
add
add
loopne
mov
fiaddl
jb
aaa
fcompl
add
pop
pop
aaa
adc
push
mov
es
or
or
sub
add
sbbl
sub
int3
loop
fldenv
aad
pop
dec
mov
cmp
lea
imul
stc
test
in
stos
dec
mov
lret
insl
push
jmp
ds
inc
stos
insl
test
push
mov
pushf
aas
data16
stos
jp
mov
pusha
sub
sub
mov
dec
adc
pushw
pop
push
call
out
addr16
xor
faddl
xor
xor
clc
xchg
loopne
xchg
sarl
sarb
adc
imul
jnp
mov
popf
or
jbe
xor
shr
pop
iret
imul
stos
cmp
dec
cld
add
inc
add
ss
jb
push
aas
mov
fildll
add
adc
xor
icebp
jg
ja
pop
or
psubsw
mov
les
fdivp
inc
loopne
adc
aam
push
mov
imul
pop
in
testb
andl
mov
inc
mov
movsl
push
insl
fidivs
sbb
ret
cmp
sbb
cmp
and
ret
ret
stos
jbe
into
sub
scas
inc
or
fldenv
push
pop
dec
data16
jae
xchg
in
xor
mov
and
mov
sub
jns
lods
lea
add
scas
stc
rcl
xchg
cs
imul
cwtl
bnd
dec
movsl
mov
mov
jo
mov
push
jo
daa
jge
push
rcll
int
inc
lret
xor
std
inc
dec
imul
jecxz
inc
jb
icebp
dec
out
rcrb
sub
lret
xorb
pop
popa
repnz
pushf
lcall
sub
daa
or
jae
js
lds
fmuls
in
in
mov
mov
push
fisubrl
ror
push
fldenv
sbbl
push
inc
inc
mov
pop
xchg
jp
arpl
dec
push
addr16
rcll
jg
ljmp
std
pop
mov
mov
mov
push
pop
out
dec
ljmp
jmp
in
cmc
add
and
movsb
lea
lods
and
add
add
xchg
add
les
or
and
and
push
lret
pop
adcb
mov
xchg
fisubl
jns
int
data16
sbb
imul
insl
addb
negb
xchg
test
push
sub
dec
dec
sub
ret
lcall
xor
fldenv
sbb
cwtl
dec
test
and
jg
movsl
mov
aad
and
dec
stos
stc
sub
fisttpl
mov
mov
fs
jg
pop
mov
add
rcll
jae
push
lock
pop
xor
xchg
out
into
or
sbb
push
in
inc
or
test
mov
adc
test
dec
outsl
out
or
shrb
push
xor
ret
ror
outsb
push
repnz
push
adc
add
int
lret
lret
adc
and
jne
pop
or
aas
mov
aam
sub
jle
or
lret
fsubrl
fdivr
xor
testl
sub
lahf
mov
cli
imulb
adc
mulb
ss
movsl
jns
leave
stos
jle
nop
cmovg
cmp
mov
lahf
movsb
les
xchg
xor
scas
sub
add
jp
ljmp
stc
sbb
movl
sbb
out
in
std
lret
add
cli
xchg
movsb
popf
xor
xchg
mov
mov
jp
push
data16
lret
xchg
jnp
call
fcmove
sahf
add
stos
rorb
mov
arpl
test
cld
inc
adc
mov
adc
xchg
cmpsl
mov
clc
popf
jp
pop
clc
xchg
outsl
adc
stos
inc
sbb
out
cmp
sub
jmp
push
add
mov
adc
pushf
adc
mov
or
es
mov
adc
dec
imul
in
and
push
out
dec
leave
int3
sbb
fistpll
pop
push
fwait
sub
xor
stc
jae
repz
sub
cmp
mov
pusha
mov
int
sbb
inc
int3
pop
call
dec
jle
mov
popa
imul
repz
ljmp
movl
test
test
ret
xlat
scas
js
add
fwait
xchg
rcrl
sbb
andb
cmp
push
iret
push
ficoms
lock
iret
jno
popa
cmp
mov
jge
out
jne
scas
and
cld
xchg
popf
jnp
scas
push
inc
filds
cmp
cmp
cmc
ret
aad
out
scas
xor
xchg
xchg
cmpsb
xchg
and
mov
data16
pusha
push
adc
pop
lock
fs
sbb
inc
jle
cmpsb
mov
mov
inc
mov
out
adc
lcall
xor
ss
outsb
outsb
in
cld
aad
stos
fwait
jbe
lods
div
mov
ss
sbb
adc
test
ja
cmp
sub
mull
sbb
cltd
rol
and
arpl
aaa
mov
repz
mov
add
sbb
fwait
repnz
call
je
mov
mov
push
mov
sbb
dec
mov
es
outsl
or
pop
mov
fsubp
and
xchg
xor
lds
bound
inc
and
mov
sbb
adc
les
dec
in
sub
stos
pop
pushf
in
js
cli
xlat
int3
repz
push
out
pop
cmp
xchg
popf
popf
test
hlt
ret
and
xor
jg
cmp
jno
hlt
mov
mov
xlat
xor
push
lock
sub
cmpl
pop
ret
lods
xchg
and
inc
ret
inc
and
call
xlat
das
fsubrs
les
lods
sub
sti
ja
ja
cwtl
stos
pusha
jb
mov
mov
mov
add
jne
mov
mov
data16
rclb
out
pop
or
add
mov
ret
outsl
dec
insl
add
inc
jge
pushf
jg
out
cmpsb
jmp
clc
mov
and
repnz
sub
mov
push
scas
insb
jp
sti
mov
addb
rcrl
ret
aaa
scas
xchg
lret
sbb
mov
pop
add
mov
decl
mov
subl
daa
pop
adc
lcall
loopne
jg
fsubs
jae
out
mov
fadd
push
inc
popa
test
ret
sub
and
add
test
xchg
std
jg
in
pop
cmp
add
or
cli
shlb
and
mov
ja
insb
dec
sbb
int
dec
push
sub
ss
dec
add
aam
div
xchg
dec
sbb
cmpsb
mov
ret
cmp
add
insb
testl
pop
dec
and
js
loopne
and
xchg
jge
imul
ja
lret
ss
fcomps
aaa
pop
cltd
jns
pop
inc
mov
das
xlat
pop
out
clc
insl
stc
or
jmp
xchg
fsub
xchg
sub
adc
aam
mov
dec
test
cmp
into
test
or
or
les
loope
cmpl
in
loopne
xchg
pop
stc
mov
dec
sbb
popa
scas
test
and
pop
pop
sbb
cmp
movsl
xchg
sarb
les
cld
ret
cmc
mov
js
ret
loopne
into
or
push
xor
and
adc
sub
pusha
or
cltd
add
cmp
aam
int
test
adc
or
pop
lret
and
mov
pop
shrl
push
adc
jno
out
add
adc
add
mov
in
push
add
addr16
and
push
sub
fmull
bound
dec
push
jo
rclb
mov
sbbb
adc
cmp
mov
push
addr16
cmc
push
push
das
mov
outsb
mov
adc
add
lea
xchg
push
enter
cmpsl
ret
cli
dec
movsb
out
aam
shll
sub
mov
pop
push
and
pop
cmpsb
push
mov
scas
xor
jnp
fcmovnbe
xor
or
mov
mov
push
lods
mov
xchg
imul
pop
inc
in
pop
sub
test
ret
repnz
aam
imul
icebp
test
movsb
out
xchg
lea
add
mov
bound
adc
mov
imul
pop
add
ljmp
repz
or
outsb
and
fsubl
mov
adc
int
inc
insl
enter
xlat
cmp
les
das
jo
inc
push
adcb
lods
push
xor
inc
push
xchg
ds
mov
push
adc
mov
dec
push
movl
jne
idiv
iret
std
mov
lods
mov
add
add
and
in
sbb
sti
imul
sbb
test
test
xchg
loope
or
lret
leave
inc
push
inc
and
jb
gs
jno
clc
aas
call
push
jnp
sub
sbb
test
stos
fnsave
dec
cmp
push
mov
outsb
ror
xchg
popf
sbb
fmuls
xor
xchg
faddl
xchg
jecxz
jbe
hlt
fwait
push
fsubrl
ss
mov
idivl
cwtl
dec
int3
loope
adc
adcl
xor
test
std
fsubr
es
shr
mov
fs
xchg
cltd
or
xor
jge
push
jl
cmp
adc
pushl
sub
xchg
rcrl
and
dec
or
cmp
sahf
adc
out
cs
clc
ds
inc
pop
add
test
fdivs
push
dec
or
mov
xchg
inc
ret
cmp
dec
pushf
imul
jne
inc
outsb
xchg
inc
adc
push
pop
jge
sbb
js
mov
scas
rorl
jae
xor
mov
jg
mov
sbb
lcall
add
xor
xchg
cmp
jmp
adc
xchg
movb
loopne
sub
fldt
pop
out
mov
ja
aaa
int3
scas
cmp
xchg
xchg
or
xor
mov
inc
add
jp
push
jae
out
scas
adc
mov
movsl
sub
or
cltd
scas
sbbb
ficoms
out
pop
dec
sti
imul
scas
adc
inc
cmp
out
xor
ret
add
shll
lock
imul
bound
ljmp
dec
pop
mov
cwtl
into
dec
cmpb
or
xchg
sub
inc
push
pop
out
and
fiaddl
pop
stos
mov
dec
push
outsb
pop
iret
cltd
jl
jbe
xchg
lret
int3
push
loope
jbe
lods
add
inc
xor
test
and
push
cld
popa
xchg
xchg
shlb
sub
push
femms
jae
adc
lret
dec
inc
sub
lds
in
cwtl
stc
and
sub
sub
jne
pushf
ficoms
insb
pop
sbb
jnp
shll
movb
push
xor
mov
repz
setp
dec
js
pop
jnp
mov
jo
fiadds
add
ret
mov
out
mov
adc
add
xchg
add
insb
addr16
icebp
cmpsl
xchg
dec
pop
js
pop
or
popf
sub
push
push
pop
sti
std
cmp
fildll
gs
cltd
dec
mov
mov
aam
movsl
dec
inc
loop
jp
sbb
ja
pop
lock
jnp
dec
lret
pop
aas
mov
sarl
xchg
mov
jae
and
xchg
push
mov
pop
add
ljmp
lods
push
outsl
mov
push
dec
inc
sub
push
imul
push
jne
xchg
or
inc
jns
xor
std
imul
int
xor
cmp
jmpw
mov
xchg
test
dec
cmp
xchg
pop
scas
sub
jnp
std
subl
mul
jmp
out
mov
imul
and
dec
jl
jno
shl
pop
stos
xor
and
call
pop
add
pusha
sub
jnp
adc
adcb
sbb
movsb
lea
add
mov
push
outsl
call
cmp
fucomp
hlt
daa
lea
lahf
scas
sub
pop
ja
sub
mov
ret
fildll
sub
sbb
out
or
push
xor
jge
xchg
dec
das
lds
stos
pusha
lds
js
popa
sti
shlb
gs
or
fwait
lock
sti
cmp
cwtl
xchg
cmc
lock
call
pop
and
and
fadds
test
jge
loope
stos
mov
fisubs
dec
into
loope
add
imul
xor
lret
cltd
jo
iret
into
sbb
push
je
push
sub
fisttpll
cmpsb
jmp
sub
xchg
mov
js
mov
xchg
imul
dec
mov
in
stc
xchg
push
ret
cltd
clc
xor
jne
add
push
shl
fmull
xorb
ret
or
mov
xchg
adc
mov
scas
dec
dec
xor
iret
in
rcl
aas
roll
mov
nop
jmp
enter
jmp
push
jbe
and
sbbl
stos
jns
mov
dec
test
add
enterw
iret
das
or
iret
sub
push
fnstenv
and
and
add
push
jle
xlat
outsl
mov
lcall
add
xchg
add
push
fisttpll
inc
dec
xor
jnp
stos
sarl
fstl
repnz
test
rdpmc
xor
jb
imul
in
add
imul
push
mov
daa
sbb
cmp
mull
hlt
push
nop
pop
add
ret
mov
push
xchg
test
imul
add
pop
xor
sbb
and
sbb
das
jo
pop
mov
xchg
fldt
ret
scas
icebp
sbb
pop
roll
jmp
pop
cmp
jae
nop
jg
cld
es
lar
inc
fdivrl
cmp
add
test
enter
ss
fisttps
pop
lods
call
inc
sbb
loop
repnz
xchg
in
pop
loopne
imul
andb
adcl
out
cwtl
inc
js
addr16
jnp
cmp
dec
sub
sub
movsl
add
movsl
push
cmc
out
stos
xor
push
mov
ret
and
mov
clc
and
jmp
fmull
test
mov
pushf
add
lcall
pop
ds
cmp
inc
movsl
sub
add
pop
jecxz
call
movsl
push
sub
xchg
and
xor
xchg
in
out
in
and
mov
arpl
sti
push
movsb
and
add
push
es
faddl
push
add
arpl
adc
jns
pop
jg
mov
jnp
cs
xchg
mov
xor
aam
jge
push
loopne
dec
inc
movsb
out
jne
lods
add
popa
ret
xchg
mov
mov
mov
mov
cld
sbb
pop
scas
call
mov
mov
lahf
xor
push
pop
icebp
sbb
pop
into
aas
xlat
bound
aad
jnp
stos
je
mov
push
imul
or
pop
push
or
inc
cmp
into
cli
or
adc
jecxz
push
lds
into
outsb
push
sub
decb
xchg
cmp
pop
out
pop
das
aas
ds
mov
add
les
adcb
or
cmpsb
and
mov
xorb
sbb
fwait
lods
shll
les
pop
xor
adc
cmc
cs
jbe
and
rol
lret
push
pop
jno
inc
pop
adc
test
sub
add
push
or
pop
out
repz
jle
add
add
mov
sub
mov
movsl
call
or
cmpsb
sbb
push
pop
roll
adc
divb
cmpsl
mov
pushf
mov
cli
add
cld
jecxz
aas
xor
imul
insl
jp
notl
out
push
pop
outsb
outsb
push
adc
adc
inc
mov
dec
testl
andl
int
inc
lcall
outsb
je
jbe
push
aaa
ret
dec
push
sbb
pop
mov
cld
adc
fdivrl
cltd
push
je
fsubl
or
test
jl
mov
mov
sbb
push
jg
test
push
xorl
adc
cli
jbe
nop
cmp
iret
mov
sbb
and
cmp
sub
adc
push
jno
dec
add
rclb
pop
jo
leave
cmp
xor
cmp
lods
roll
push
dec
fwait
inc
fwait
adc
add
or
adc
adc
xor
jge
bound
int3
cmpsl
push
xchg
inc
cltd
les
cmp
aam
or
leave
or
jns
xor
shll
and
push
and
push
scas
mov
sub
imul
mov
imul
div
push
mov
jb
aaa
in
lds
sti
cltd
xchg
sbb
subl
push
mov
call
ljmp
sbb
movsb
sahf
stos
popa
jb
jo
pop
push
lret
iret
dec
inc
sub
xchg
sti
clc
rcll
pusha
cmp
xor
fstpl
int3
and
mov
int3
jle
jbe
out
stc
fisttpl
icebp
sbb
sbb
aas
leave
fistpll
mov
orb
out
outsl
dec
mov
ret
test
mov
mov
pop
or
adc
inc
mov
add
add
fcoms
dec
pop
dec
sar
xchg
sbb
jbe
pop
xchg
into
sbb
cmpsl
arpl
inc
int
inc
stos
sbb
cmpsb
test
xor
xchg
mov
mov
arpl
pop
je
int3
inc
outsb
and
or
or
cmp
xchg
test
push
dec
pop
adc
fisttpl
xchg
jb
ljmp
mov
inc
je
add
leave
xchg
insl
mov
aam
inc
fmuls
aaa
sbb
xchg
add
aas
call
or
dec
xchg
cli
pop
sahf
sti
cltd
dec
xchg
mov
icebp
movsb
jle
cli
repz
xor
loope
sub
sub
xlat
fmul
aam
js
mov
addr16
cmpsl
push
ds
mov
sbb
mov
out
lcall
sahf
mov
mov
into
mov
repnz
cli
arpl
lcall
add
test
mov
sbb
sysret
stc
out
pusha
push
lock
jns
jle
mov
add
and
lahf
stos
gs
sub
mov
mov
stos
rolb
dec
es
or
clc
or
push
and
pop
in
fs
mov
xchg
jns
adc
lods
enter
jge
sub
sub
fcomp
sub
sub
ret
insl
xor
cmp
rolb
xchg
mov
loopne
fwait
add
nop
or
scas
cltd
outsb
mov
or
ret
cmp
push
cld
xchg
subb
or
jge
sti
popa
push
lahf
es
lods
mov
pop
cs
inc
or
cmpsl
into
mov
adc
cwtl
xchg
pop
mov
cmpsl
jmp
iret
jns
stos
or
call
dec
and
cli
jns
notl
xchg
mov
mov
mov
xchg
or
repz
mov
test
es
lods
cld
ror
out
mov
push
push
cld
sahf
adc
mov
loopne
rcrb
mov
jp
pushf
fwait
shlb
and
or
inc
int3
int3
es
fwait
arpl
lahf
js
cli
mov
loope
xlat
add
stos
insb
pop
fists
jae
and
mov
aad
repz
lcall
pusha
mov
lret
dec
shlb
pop
lods
pop
jae
push
stos
cmp
xchg
icebp
cltd
mov
orb
popa
sbb
jae
cmp
xlat
in
in
xlat
jne,pt
std
lret
dec
mov
or
cwtl
bnd
jae
fistl
test
js
repz
xchg
xor
pop
cmp
mov
test
mov
pop
mov
sub
push
mov
or
dec
out
ja
idiv
pop
out
dec
mulb
jns,pn
push
pop
mov
add
jmp
cmovno
jmp
push
mov
in
std
xchg
js
les
and
lahf
cmp
cmp
sub
repnz
cmc
fwait
insb
dec
pop
popf
dec
pop
xor
push
mov
fisttpl
push
call
add
pushl
add
inc
add
out
stos
push
inc
fcompl
lock
insl
add
jmp
pop
fdivs
ret
frstor
fidivrl
mov
xor
les
dec
mov
stos
in
or
mov
out
ds
mov
arpl
sub
mov
stc
inc
jmp
cltd
das
xchg
mov
rol
xchg
push
test
mov
push
push
loopne
xchg
jae
push
into
mov
out
nop
inc
sub
xchg
mov
into
mov
movsb
ret
inc
adc
adc
inc
movsl
in
fisttps
xchg
cld
cli
std
cli
pushl
pop
push
add
mov
jl
or
insl
es
out
dec
lret
out
push
lock
adc
out
cmp
mov
or
hlt
pop
adc
fcoml
dec
xchg
subb
push
imul
sbb
insb
jp
shrl
clc
jns
iret
mov
or
mov
mov
pop
adc
fcompl
test
bound
mov
out
dec
sub
and
in
insl
call
fadds
mov
ss
imul
and
xorl
bound
sub
push
mov
jmp
mov
dec
xor
cld
jns
inc
fadd
jno
shlb
fidivrl
scas
addr16
fxtract
sahf
xor
loopne
mov
and
xor
sti
mov
aaa
std
ret
and
das
cmp
push
and
inc
orl
mov
mov
sahf
loope
icebp
mov
pusha
cli
cld
mov
fcmovb
push
daa
cmpsl
mov
push
lods
sbb
adc
jne
pop
cmpsl
in
sbb
jb
mov
lock
push
iret
add
cmpsl
dec
xlat
pop
mov
jl
sbb
aaa
cmp
cltd
mov
int
xor
mov
jecxz
xor
push
mov
ja
aad
filds
cmp
cmp
imul
mov
pop
jecxz
sti
mov
test
es
add
sbb
flds
rcl
into
std
mov
dec
shll
test
push
xor
scas
and
fwait
out
pop
and
mov
dec
or
movsw
xchg
jmp
lea
adc
jo
negl
pop
mov
pop
fisubl
mov
jle
daa
imul
fiadds
jp
sub
mov
dec
mov
stos
loopne
dec
stos
push
cmpsl
xor
int3
xchg
cmp
ror
ss
sub
mov
ficomps
jle
dec
sub
mov
int3
pop
rcpps
cmp
xor
aaa
aam
and
out
lock
mov
mov
dec
repz
nop
sbb
xchg
jp
in
jle
loopne
cli
pop
sbb
mov
push
cmp
or
int
mov
xchg
ja
ja
js
push
mul
enter
int
jge
lea
pop
dec
inc
pusha
insb
data16
aam
pop
mov
arpl
push
or
jmp
sbb
jns
int
sti
push
outsb
sbb
lods
dec
mov
jnp
jl
out
xchg
call
cs
dec
dec
mov
push
stos
negb
frstor
inc
fs
xchg
sbb
aad
lret
insl
dec
hlt
test
cmp
hlt
cli
cmp
fldenv
dec
adc
je
push
fidivs
mov
dec
sub
and
mulb
fdivrl
and
lods
add
pop
loop
imul
jge
aam
mov
dec
sbb
mov
arpl
mov
jae
cmp
scas
or
cwtl
and
mov
outsl
xchg
cmp
iret
stos
jecxz
xor
pop
movb
dec
iret
sbb
in
jle
inc
bnd
and
gs
xor
jne
imul
mov
outsb
jmp
cmp
test
outsl
xor
lret
and
ret
outsl
add
adc
lea
cmpsb
ljmp
jne
outsb
dec
push
cltd
rcll
add
jno
gs
dec
xchg
sbb
scas
imul
das
xor
xor
sbb
jne
jns
cwtl
jae
fmuls
xchg
hlt
xchg
rolb
pop
test
dec
mov
cmp
jg
aaa
insl
call
movsb
sbb
inc
pop
xchg
sub
add
xor
sahf
xor
mov
popl
add
and
dec
arpl
std
inc
aam
loop
mov
jne
sub
mov
out
push
iret
or
xlat
arpl
push
std
stos
add
and
ljmp
loopne
loop
xchg
and
imul
and
pushl
test
lcall
push
mov
stc
lods
pop
test
jge
jne
std
iret
mov
jmp
into
xchg
lret
push
sbb
scas
jmp
or
dec
cmp
clc
mov
pop
cld
jmp
push
inc
cs
mov
lods
jg
pop
and
nop
pop
stc
sbb
test
sbb
testl
pop
jge
shlb
movsb
clc
sub
xor
or
add
jp
jns
pushf
xchg
lret
and
fcompl
xchg
out
dec
aaa
sbb
jb
lret
pop
jecxz
fsubrl
dec
icebp
pop
mulb
into
cmp
in
xor
sbb
adc
test
insb
outsl
adc
xchg
out
mov
loopne
mov
pop
adc
push
xchg
jo
sbb
fs
xchg
movsb
mov
push
ss
fimuls
adc
ret
or
popf
lcall
psubusw
inc
jns
fisttps
mov
sbb
push
movsl
std
test
call
aad
out
leave
cmpsl
jmp
xchg
popf
mov
sbb
cmpsl
xor
sub
sbb
push
cltd
loopne
mov
shrb
jecxz
fisubrs
pop
vmread
cmp
push
jg
movsl
outsb
push
aad
mov
fistps
inc
test
inc
fdivl
sub
adc
xor
push
enter
out
jmp
xchg
xchg
ret
sub
dec
pop
jp
negb
jno
mov
xor
in
loope
push
outsb
add
icebp
mov
add
jb
fmull
call
mov
xor
sahf
addl
push
push
fidivrl
pop
jl
data16
daa
xchg
test
mov
movsb
daa
inc
jbe
es
xorl
arpl
bound
hlt
jecxz
js
xor
sbb
aas
cmp
push
icebp
sbb
movsb
xchg
ret
loopne
rol
push
mov
cltd
shl
inc
lahf
and
jnp
test
int3
cmc
push
cmp
jmp
jmp
add
std
in
mov
mov
std
pop
xor
int
test
add
sub
cmpsl
xor
sbb
inc
xchg
cld
dec
mov
out
popf
mov
adc
scas
std
mov
jnp
lahf
dec
fadds
shll
movsl
sti
fs
push
and
fadds
nop
test
outsb
inc
lods
xor
pop
movsl
int
xchg
dec
jne
push
dec
gs
xchg
daa
bound
mov
add
or
push
mov
jnp
fstps
cwtl
mov
pop
popa
movl
imul
add
pop
mov
inc
push
repz
inc
out
adc
ficoml
sahf
or
push
aad
sbb
nop
sub
jae
and
push
clc
pop
mov
push
jle
adcl
arpl
lea
xor
or
and
push
incb
pop
jns
scas
scas
aas
ljmp
adc
xchg
imul
mov
in
subl
repnz
push
mov
push
pop
sbb
sbb
mov
cmp
stos
push
decb
lds
add
lds
dec
push
divb
push
aaa
mov
std
por
or
push
inc
pop
scas
sub
mov
aas
mov
scas
add
es
and
out
xor
sub
nop
fimuls
leave
fisubrs
xorb
mov
fadds
dec
mov
mull
in
into
aad
fwait
dec
dec
orl
mov
pop
outsb
rclb
out
push
pop
cmp
adc
adcb
jmp
sbb
pushf
scas
out
or
jg
dec
call
in
xchg
fsubrl
lcall
mov
test
ljmp
push
sbb
and
xorl
adc
xchg
jne
cmp
imul
dec
mov
int
sub
lret
ja
mov
inc
loopne
and
pop
icebp
in
inc
out
int
xchg
inc
or
loope
mov
push
stos
mov
nop
addl
test
enter
xor
test
cmp
jg
and
inc
or
clc
pusha
stos
mov
jmp
subl
add
repnz
out
sub
syscall
aad
pshufw
xchg
inc
inc
es
push
rcll
push
into
dec
iret
push
gs
jne
stos
lcall
xchg
push
outsb
xlat
mov
decl
xchg
fadd
inc
jns
adc
out
mov
imul
adc
into
jp
and
cmp
test
outsl
xchg
dec
jbe
into
mov
arpl
subl
adc
add
add
lret
and
sbb
adc
dec
mov
jns
jno
and
mul
jae
sub
xor
aam
sub
or
cmp
jno
mov
leave
dec
ror
adc
insb
es
jae
repnz
add
or
pop
and
push
aam
adc
xchg
dec
push
fidivrs
push
mov
loop
adc
pop
push
mov
or
pop
sub
in
pop
cli
repnz
sbb
addr16
push
xor
cmp
push
into
cmp
lret
inc
mov
push
xlat
shrb
dec
cmp
jg
js
cmc
sbb
cltd
xchg
lcall
lds
pop
out
mov
pusha
je
int3
cmp
cmp
js
mov
mov
cmp
fisubrs
loop
rcrb
je
pop
adc
pop
mov
fsubs
jp
aas
dec
sbb
sar
scas
add
lods
call
sub
cmp
sub
dec
mov
iret
adc
movsl
les
push
outsb
in
fisubl
subb
fcomps
push
sbb
adc
and
ljmp
repnz
scas
aam
sub
jno
push
mov
xchg
das
ret
xor
mov
xor
outsb
scas
idivl
xchg
lahf
cltd
loope
leave
into
mov
jne
popf
stos
lcall
shlb
mov
in
mov
mov
das
mov
mov
dec
int
out
popa
je
adc
mov
imul
mov
mov
testb
cmp
jge
test
xchg
jecxz
lret
xor
in
mov
push
in
xchg
sbb
subl
aam
imul
pop
cs
mov
push
jecxz
lds
xor
push
stos
mov
fcmovne
lret
cli
ss
mov
inc
inc
popa
data16
rcrl
xor
lahf
jp
notb
add
xchg
jecxz
movsl
addr16
sub
aad
mov
pop
stos
in
rcrl
cltd
out
je
pushl
sti
sahf
mov
into
mov
cs
or
iret
xor
mov
xor
cwtl
mov
scas
rclb
dec
pop
ss
prefetchwt1
sbb
sti
cmp
adc
mov
shrl
cmc
popf
mov
push
jns
mov
frstor
loop
mov
ret
test
mov
call
add
aaa
leave
ss
inc
arpl
and
mov
sub
loopne
lods
dec
out
sbb
push
jne
push
mov
ud0
imul
jae
sahf
loop
cmc
mov
addr16
add
xchg
adc
and
cmp
sub
jbe
adc
add
sub
mov
add
jecxz
cmp
sub
sbbl
mov
or
out
lret
out
inc
iret
cli
mov
mov
gs
dec
cmp
push
mov
call
mov
push
adc
mov
gs
dec
push
xchg
inc
call
dec
pop
leave
fldcw
or
lods
test
pop
pop
paddb
ja
dec
rclb
mov
shl
cmpsb
xchg
cld
mov
aas
mov
or
xor
inc
loop
bound
pop
mov
cld
fwait
add
cmpsl
pop
imul
test
mov
cmp
je
adc
scas
and
cmp
pop
fisubrl
or
shl
dec
outsb
fdivr
sbb
xchg
xchg
mov
mov
fs
in
add
das
mov
dec
fimull
fwait
and
cmp
mov
jbe
add
rclb
fsubrl
popf
call
adc
in
scas
push
scas
hlt
adc
test
fldl
bound
daa
push
popa
shr
ds
mov
mov
hlt
adc
sbb
push
push
push
and
or
jmp
xlat
fiadds
mov
xor
gs
mov
add
bound
jmp
xchg
jns
aam
sbb
add
cmp
cli
in
jg
loopne
sub
jl
add
xchg
add
insb
cmp
subl
testl
das
xor
femms
int
out
lods
jnp
int
clc
dec
fisttpll
into
sti
xor
popa
push
add
mov
cmp
test
xor
mov
ljmp
jmp
cmp
js
movsb
or
add
push
push
mov
add
xor
dec
push
outsl
and
sbb
mov
lret
popa
inc
xchg
mov
and
cmp
in
inc
xchg
ret
je
out
les
lods
sub
xchg
call
sti
or
mov
mov
test
stc
jl
mov
hlt
lahf
or
out
jae
movsl
mov
insb
sti
cmp
insl
xchg
jae
cli
dec
daa
lods
mov
gs
cli
popa
push
xor
leave
lcall
cmp
addr16
outsl
pop
xchg
jne
mov
xchg
dec
cmc
mov
pop
movsl
push
pop
xlat
es
fstpl
or
cli
jmp
std
push
shrl
mov
xor
stos
add
ja
int3
in
shll
mov
mov
pop
data16
mov
notb
in
push
and
das
movsl
push
mov
mov
stos
bnd
fadds
in
shl
lahf
jle
ret
mov
xor
jle
adc
ljmp
repnz
insl
aam
dec
xlat
cwtl
outsb
fsubl
out
xchg
aaa
inc
xchg
scas
movb
jl
sar
subb
loop
int3
mov
ja
int3
or
data16
lock
dec
inc
stos
mov
lds
test
push
inc
ljmp
jecxz
js
ss
xor
insl
sbb
scas
pusha
call
and
mov
sub
cmp
aaa
mov
ljmp
fisttpll
sub
xchg
aaa
pushf
inc
js
xchg
xchg
hlt
mov
mov
scas
dec
jg
fs
sub
push
sub
rclb
mov
loop
movsb
jo
ret
ret
mov
pop
mov
or
jne
jge
popa
lds
je
cmp
jg
mov
and
pusha
movsb
movsb
or
inc
lret
shl
std
cld
xor
xlat
dec
rcll
sbb
jp
aas
iret
ret
sbb
add
shlb
xchg
lcall
cmpsb
and
push
cmp
pushf
add
xchg
add
movsb
lea
jge
add
cvttps2pi
js
mov
jp
ja
adc
xor
jno
mov
repnz
xchg
jle
test
les
sub
push
jmp
push
jg
mov
fxch
lahf
sub
mov
lahf
sbb
pop
lahf
sub
mov
xchg
jbe
mov
mov
test
int
mov
ljmp
ds
lahf
clc
repnz
sub
mov
mov
lret
notl
cli
adcl
or
sbb
xor
sahf
add
dec
jle
cwtl
cmp
cmpsl
xchg
cmp
jge
int3
cwtl
movsl
rorb
out
xlat
aaa
loope,pn
clc
cld
mov
cmp
cld
sbb
in
adc
pop
xacquire
cld
sub
or
push
andl
adc
cmp
in
in
and
and
sti
mov
or
or
cmp
iret
xchg
cmp
cmp
cli
xchg
jb
pop
cmp
jmp
and
sub
filds
imul
add
stc
insl
jg
xor
and
push
add
sti
jo
dec
jl
fisubl
xchg
cltd
lahf
sbbb
and
data16
dec
mov
and
loop
sbb
jmp
or
pusha
loop
imul
sub
xchg
test
movsl
adc
xchg
pop
jbe
mov
pop
cmp
xor
ljmp
xchg
mov
pop
aad
jge
ds
hlt
inc
fisubs
pop
adc
xor
inc
popf
movl
mov
leave
pop
ret
enter
nop
and
xchg
cmp
sbb
test
in
pushf
add
cmp
xor
out
mov
push
and
add
mov
push
roll
and
pop
or
mov
adc
in
push
test
inc
mov
xchg
sub
sbb
and
sbb
sub
ret
push
mov
mov
push
pop
sbb
pushf
testb
xor
mov
inc
and
popa
arpl
inc
testl
inc
or
in
imul
pop
or
xchg
ficoms
setns
push
push
jecxz
mov
xor
cli
lods
leave
or
fnstsw
mov
add
fmull
xchg
add
mov
test
in
mov
mov
out
out
jnp
std
adc
inc
and
je
sbbl
in
in
inc
mov
mov
shlb
repz
mov
mov
int3
subl
or
mov
pop
icebp
xor
pop
cmp
repz
jle
mov
add
int3
cld
call
lret
fcomps
pop
xchg
dec
mov
loopne
dec
int
sbb
sbb
cmp
cmp
pop
andl
popl
aas
fstpt
aad
jae
dec
jp
dec
mov
cwtl
call
jge
or
aad
ficoms
into
xchg
mov
inc
repnz
test
notb
inc
stos
rorl
clc
mov
cmp
push
int3
push
mov
xchg
dec
cmpsl
mov
subl
loopne
es
xchg
div
xor
subb
in
cmpsl
xor
mov
das
outsl
mov
lret
adc
xor
repnz
cwtl
xchg
xor
imul
sbb
push
adc
icebp
fwait
rorl
loope
aas
ljmp
test
pushf
xchg
xchg
push
movsl
cld
sub
loop
sbb
imul
lods
and
loop
jecxz
pop
popf
addr16
jmp
iret
lcall
sub
gs
js
dec
push
frstor
orl
xor
repz
arpl
xchg
mov
mov
rolb
mov
leave
xor
sahf
cli
jo
pushf
and
mov
xor
push
arpl
add
loop
dec
inc
jno
imul
or
roll
cmpsb
in
popf
fdiv
fimuls
subl
ret
insb
push
out
pop
cmp
mov
call
mov
cmp
jne
mov
jo
sti
stos
cmpsl
pop
cs
negb
aam
jb
xchg
divl
sbb
xchg
mov
lods
fnstsw
mov
jb
lds
and
popf
mov
mov
push
or
pop
or
xor
scas
mov
mov
fwait
add
inc
mov
and
push
mov
add
and
cli
das
dec
mov
ljmp
inc
ljmp
mov
cltd
test
int3
add
add
or
imul
sbb
aad
add
pminsw
sbb
or
lock
cld
sbb
fisttpll
push
pop
inc
sbb
leave
adc
sub
adc
addl
repz
mov
jno
xor
xchg
out
sub
ds
aad
adc
jb
push
js
dec
loop
jle
push
cmpsl
mov
pop
loopne
adc
shll
pop
leave
mov
dec
push
jge
inc
xchg
or
mov
fstl
mov
int3
jle
xchg
les
push
mov
pop
call
and
mov
dec
ret
loopne
in
into
push
dec
orl
scas
add
inc
or
aam
jl
xor
jo
lods
stos
aaa
les
mov
push
in
pop
add
pop
call
out
out
and
or
mov
pusha
test
data16
add
scas
mov
vmovss
adc
push
outsb
ljmp
dec
fwait
sub
cmc
or
in
add
pop
data16
jnp
mov
xchg
push
mov
fs
cmp
fldenv
ja
xchg
push
pop
add
ja
jp
daa
lcall
xor
mov
push
vmovlpd
int3
inc
dec
inc
mov
ljmp
cmp
sbb
xor
loope
rorb
js
sbb
insb
es
mov
jbe
cmp
jp
es
jl
jge
aam
and
testl
repz
scas
stos
and
subl
jne
clc
cmc
test
pop
sbb
inc
icebp
mov
dec
cmp
sbb
fsubs
sub
rcrl
std
xchg
adc
xchg
xchg
pop
andb
out
pop
push
push
add
sub
bound
push
push
movsb
sub
setns
fs
push
divb
and
sub
aad
ret
adc
add
insl
pop
ficomps
lret
scas
jns
jmp
in
shl
inc
lods
cs
cwtl
mov
mov
jnp
xor
arpl
outsb
mov
sub
adc
mov
cmp
jle
xor
inc
dec
adc
add
leave
mov
cs
add
lret
in
mov
addl
rolb
or
push
iret
push
sbb
ja
push
pop
adc
sarb
adc
jge
jno
push
repz
push
xor
scas
cmc
into
dec
aam
fsubrp
ja
sbb
sub
lods
pushf
push
stc
sti
call
popa
jne
call
xorb
pushl
adc
repz
aad
or
jmp
cmp
out
jecxz
pop
xchg
add
sub
inc
inc
ret
jl
or
xor
shll
nop
ljmp
adc
cmpsb
fdivl
mov
mov
movsb
pop
fsub
js
add
int
rcrl
out
jae
repz
fmuls
jb
fwait
cmp
mov
daa
xchg
test
push
incl
sbb
movsb
in
ret
xor
adc
jg
jbe
ror
pushl
test
cmpsb
fs
repz
fistpl
orl
adc
pop
xchg
inc
mov
sti
add
bound
faddl
mov
add
ret
pop
call
test
jg
inc
sbb
call
mov
sar
xor
idivb
mov
jmp
cmc
ret
int3
mov
cs
mov
outsb
orl
fisttpll
push
jp
mov
js
xchg
out
xchg
jp
jg
pop
xor
std
ds
xor
add
jle
pop
dec
mov
jg
arpl
cmp
arpl
push
mov
lock
ret
xchg
ret
mov
mov
arpl
inc
dec
imul
push
cmp
lahf
gs
call
dec
adc
push
pop
in
push
ret
push
test
fcmovu
mov
mov
int
mov
push
fwait
pop
rdpmc
pop
mov
es
adc
ljmp
xchg
mov
into
rcll
fadds
mov
dec
popf
xor
mov
mov
xchg
ret
aam
shl
int
mov
mov
jne
jecxz
and
inc
das
mov
in
xchg
jle
push
cmp
adc
push
icebp
imul
cmp
out
idivl
mov
sbbl
add
xchg
add
xchg
clc
mov
mov
call
inc
cmpsb
out
and
stc
push
mov
cmp
or
jnp
roll
loop
mov
lcall
push
cmp
xor
loope
stos
xor
mov
lahf
lods
fldcw
xchg
outsl
jle
pop
clc
cmpb
pop
pop
adc
jae
xor
repnz
pop
in
cltd
dec
notl
dec
rcl
data16
cltd
sub
mull
popf
lods
js
nop
lahf
ss
mov
inc
outsl
pop
mov
dec
mov
mov
and
mov
mov
mov
rclb
mov
les
pop
sub
dec
and
pop
jecxz
je
sub
loopne
stos
es
stos
aaa
or
inc
pop
stos
arpl
mov
bound
bound
popf
xor
sti
out
stos
nop
xchg
push
pop
pop
inc
and
dec
cmp
arpl
and
ficomps
adc
ficomps
push
dec
sbb
or
out
outsl
ror
jns
bound
insl
insb
stos
aam
repnz
or
ds
and
outsl
clc
and
fwait
xor
push
loopne
pop
sahf
insl
addr16
jecxz
movsb
pushf
mov
add
push
push
xchg
pop
enter
lea
ja
pop
push
jns
push
imul
jno
pop
xchg
jecxz
movsl
lea
mov
cmp
test
test
sub
out
xchg
xchg
push
jmp
sbb
sub
xor
sbb
std
ja
mov
adc
sub
test
cmp
sub
dec
push
push
ret
fs
out
cmp
out
leave
ljmp
push
dec
cmp
pusha
ret
inc
dec
in
mov
adc
outsl
sbb
cmc
iret
add
cltd
cld
xchg
inc
pop
scas
inc
dec
rcrl
frstor
mov
mov
bound
jecxz
out
movsl
popf
cltd
loopne
mov
xchg
repz
rclb
jecxz
sbb
pop
arpl
jl
fldl
inc
scas
sbb
add
mov
mov
mov
pop
adc
adc
sbb
inc
out
stos
pushl
add
cmp
ret
test
adc
ds
rclb
or
gs
fcompp
out
gs
negb
fstl
test
add
adc
cmp
adc
mov
or
pop
xor
adcl
addl
or
stos
mov
out
mov
ss
and
rcll
push
mov
mov
sahf
hlt
pop
and
and
sbb
pop
dec
and
fldlg2
cltd
pusha
clc
gs
push
gs
sbb
fsubs
cmp
rol
cmp
shl
sbb
scas
or
add
cmp
pop
lahf
and
cld
fisubrs
enter
xchg
adc
test
inc
and
push
xchg
jle
ds
int3
out
aam
nop
bound
mov
ja
movzbl
fisttpll
mov
jg
jnp
add
test
stc
mov
insb
push
mov
iret
in
mov
nop
mov
popa
push
dec
aad
out
test
dec
mov
add
cmp
mov
loop
push
aas
aaa
sub
push
pop
roll
add
mov
int
imul
cs
inc
icebp
jp
movsl
in
int3
inc
jnp
cmc
cmp
xchg
les
insl
mov
xchg
ret
test
ficoms
mov
shlw
adc
outsb
movl
jmp
ss
in
adc
rol
mov
int
movsb
loope
pop
mov
lret
ret
mov
outsl
lds
fwait
pop
adc
mov
pop
out
xor
test
pop
jmp
pop
add
jno
push
cmp
mov
neg
jbe
dec
push
mov
aas
and
cmpsb
lahf
stos
test
mov
jge
or
adc
mov
cmp
sub
mov
add
mov
xor
aad
fidivrs
xchg
outsb
mov
adc
and
sub
iret
xor
mov
cmc
adc
pop
in
dec
gs
scas
test
adc
mov
data16
cmc
mov
cmpsl
or
jp
in
or
addr16
lock
inc
push
dec
std
icebp
addl
push
mov
ljmp
and
fdivrs
mov
int3
ljmp
aad
aaa
inc
ljmp
inc
push
movsl
icebp
out
xorl
inc
add
adc
arpl
sti
adc
sub
inc
mov
xchg
add
loopne
ret
add
xchg
cli
inc
adc
cmp
insl
in
mov
adc
xchg
xor
mov
daa
std
jg
sbb
adc
cmpsb
cmp
jge
inc
cmpl
adcb
cltd
mov
mov
inc
pushf
push
or
ret
rcrb
std
test
xor
cmp
hlt
inc
cwtl
cwtl
mov
rclb
xchg
dec
lahf
mov
or
inc
lea
int
neg
and
push
adc
jnp
ljmp
sbb
xor
arpl
scas
xor
movsl
cmp
push
push
ljmp
mov
mov
ret
pop
les
add
ja
inc
xlat
imul
scas
mov
iret
gs
pop
xor
icebp
fcomp
gs
sbb
sbbl
mov
dec
aam
sbb
mov
jne
xor
test
outsl
inc
cmp
cs
imul
xchg
or
sub
fwait
pop
sub
push
iret
xchg
mov
push
sbbl
or
cmp
jb
add
mov
aas
jo
and
inc
xchg
add
cmp
cld
imul
and
ljmp
cmpsb
lods
callw
jg
outsl
adcl
loop
movsl
or
ss
push
mov
nop
rcrb
inc
pop
inc
jmp
shl
pmullw
pop
divl
frstor
push
ret
fwait
dec
xchg
inc
jp
jns
jmp
xchg
loop
sbb
idiv
mov
ljmp
cmpsl
push
pop
push
mov
js
adc
sti
adc
mov
arpl
mov
in
push
push
cmp
leave
pop
fwait
add
cmp
xor
lret
ja
leave
mov
repz
scas
jmp
jno
insb
pop
xor
xlat
mov
fcmove
loope
imul
jae
jne
xor
mov
repnz
ljmp
push
sub
cmp
lock
inc
jbe
mov
cmp
lock
and
xchg
or
scas
daa
pop
sbbb
jns
out
mov
gs
push
leave
cld
lods
fistpll
pop
fcomip
push
int
sar
pop
cmc
shll
add
and
xor
push
lahf
shrd
add
les
sub
out
mov
xchg
xor
cmp
pop
lahf
rol
or
mov
mov
pop
out
mov
jbe
clc
lds
inc
and
js
cmp
notb
mov
lods
pop
testb
lcall
stc
mov
mov
mov
or
ds
push
cmp
dec
cmp
repnz
out
pop
addl
cmpsb
push
in
mov
inc
jnp
jecxz
sub
jmp
mov
lret
jmp
mov
cwtl
test
aas
adc
loopne
mov
hlt
sbb
jp
or
mov
fisttpll
push
xchg
mov
mul
leave
ds
int
fiaddl
add
add
cwtl
jne
push
mov
fstpl
push
jp
xchg
jp
hlt
sbb
push
test
mov
sub
sbb
cmp
lahf
popf
mov
test
or
ja
add
pop
dec
pusha
push
and
dec
cmp
xchg
mov
jge
xor
pop
dec
mov
lods
cmp
pop
xchg
test
push
mov
hlt
mov
and
xor
mov
aad
jle
push
pop
lds
mov
fisttpl
scas
cmp
or
cmp
dec
dec
xor
jge
mov
adc
jae
cmpsb
lret
and
out
fiaddl
add
rcr
pop
dec
int
std
cmp
cmpsl
sbb
sahf
adc
or
mov
aam
pushf
fs
jo
xor
mov
lea
sub
ret
mov
mov
dec
mov
cs
nop
xchg
push
sahf
in
cmp
pop
sahf
out
loopne
adc
ds
or
cli
cs
addr16
mov
lret
sbb
ds
test
mov
sub
scas
add
imul
insl
jns
movsb
cwtl
loopne
or
stos
out
mov
push
mov
andl
fsubrs
xorb
or
inc
ja
in
rcrb
loope
add
in
add
inc
ficoml
subb
mov
jb
and
cmp
inc
dec
out
fbstp
xchg
cmp
jb
ret
push
dec
mov
int3
fs
notl
push
int
add
pop
mov
jg
popa
hlt
mov
xor
mov
add
mov
mov
mov
daa
lods
pop
add
fimuls
cmp
pop
leave
lahf
ret
cli
sti
pop
mov
test
rorb
push
cli
out
inc
or
sbb
loope
bound
xchg
add
cmp
fstl
aam
stos
lret
pop
pushf
dec
mov
xor
bound
jl
fcompl
adc
push
out
or
mov
dec
arpl
jnp
aad
xor
pop
fdivp
cs
test
sbb
in
fnstsw
in
cmp
inc
inc
and
push
push
push
sbb
pop
lret
clc
cwtl
pop
pop
mov
cmpsl
sahf
cltd
push
fidivrl
mov
inc
jb
or
inc
outsb
jbe
mov
xchg
mov
cmpsl
ds
into
push
and
lret
in
jmp
cmpsb
push
xor
insb
pop
add
sbb
ror
jle
or
push
pop
ds
mov
test
std
jmp
clc
jg
lret
pop
roll
iret
out
repnz
lcall
adc
dec
jae
or
xchg
iret
lcall
sub
lods
and
dec
jle
loopne
pop
jg
das
loop
int3
xor
pop
sti
pop
stos
mov
push
ljmp
fdivrl
out
subl
cli
sub
pop
mov
leave
xchg
int3
dec
jae
loop
lds
fadd
dec
mov
mov
es
mov
inc
js
std
sub
decb
xchg
aam
and
mov
jp
out
push
movsl
lea
mov
adc
js
jbe
and
loopne
aaa
stc
fs
insb
push
std
sbb
push
popa
mul
adc
xchg
mov
nop
leave
jne
sub
or
leave
adc
pop
daa
pushfw
or
enter
lea
xchg
mov
cmp
or
pop
sub
mov
and
adc
test
sub
inc
adc
fwait
into
sub
inc
lret
dec
shrl
insb
adc
xchg
leave
ja
cmp
or
dec
lret
sahf
fists
jmp
dec
out
xor
imul
out
xchg
sub
lock
jg
inc
mov
cli
pop
sbb
sub
imull
jo
test
fisttps
adc
dec
mov
pop
shll
addr16
movsb
xor
add
pusha
jbe
out
fnstsw
cmp
push
xchg
add
lods
fisttpll
sbb
pop
sbb
andb
inc
sub
xchg
sbb
and
test
mov
leave
pop
test
fsubs
ficomps
out
or
ret
pusha
lds
leave
cmp
popf
sbb
fwait
repnz
in
xchg
lds
in
inc
ret
leave
or
push
add
call
adc
mov
daa
inc
out
mov
mov
inc
loopne
fs
shlb
inc
add
std
mov
out
repnz
mov
les
mov
sub
ljmp
and
in
add
inc
pusha
dec
icebp
lock
sbb
xchg
mov
rcll
mov
add
getsec
push
push
pop
cmpsl
rolb
adc
fs
cwtl
repnz
shlb
fnstenv
mov
arpl
fidivl
not
mov
jb
jb
popa
lret
add
cmp
sub
cmp
pop
lea
cmp
lret
out
sbb
ja
push
movsl
fistpll
inc
mov
sbb
sub
stos
ds
cmp
jno
jmp
fwait
mov
cld
sub
fcompl
sbb
popf
out
popf
hlt
add
add
lods
test
fwait
mov
or
and
jmp
cmp
mov
mov
popa
test
cmp
test
scas
xor
jne
pop
push
pop
outsl
in
mov
fs
lret
insb
imul
mov
outsb
mov
add
iret
mov
mov
dec
outsl
aas
repz
adc
pop
push
jge
inc
sub
call
lret
xchg
mov
stos
and
je
xchg
loope
dec
mov
jnp
push
aas
push
or
outsl
sub
mov
mov
test
mov
iret
dec
lret
jnp
sub
stos
js
int
sbb
jno
rcrl
pop
sbb
mov
out
dec
aad
jb
repz
add
rolb
mov
or
jne
sub
ss
sbb
sahf
sarb
js
cwtl
cmp
push
add
test
into
jb
fisubrl
jb
xlat
cmp
lds
aam
dec
loope
mov
add
push
sub
fucomip
ficoms
adc
icebp
stc
push
ds
add
jns
outsb
ret
mov
lods
cwtl
cmc
add
add
adc
xchg
and
frstor
push
shll
das
jnp
popa
and
sbb
bound
and
shll
dec
shll
jg
lret
sahf
popa
sahf
repz
and
xor
das
xchg
mov
jno
ret
add
ret
scas
mov
adc
push
cld
xchg
out
mov
sbb
fstps
fildl
inc
mull
sbb
push
pop
xor
cmpsb
jae
add
lods
xor
sub
sbb
sbb
xor
inc
mov
nop
jecxz
sub
repnz
hlt
xchg
push
sbb
ret
mov
jnp
mov
cli
fidivrs
dec
push
pop
dec
or
push
jno
xchg
mov
mov
loop
hlt
nop
rolb
pop
jg
cmp
cmpsb
jb
xor
jo
sub
ret
test
insb
sbb
add
mov
cmc
push
gs
out
xor
inc
add
pop
adc
iret
test
popf
jno
daa
adc
xor
out
jp
sbb
pop
mov
jne
movsb
test
fsubl
pop
inc
cltd
in
push
adc
and
push
data16
aaa
xchg
jbe
int
and
js
xchg
stos
mov
or
mov
loop
sbb
sub
mov
dec
dec
fsubrl
pavgb
imul
cmp
cmp
jmp
mov
or
sub
push
in
movsb
loop
js
cwtl
push
icebp
clc
inc
clc
pop
push
sub
adc
adc
xor
mov
mov
push
lcall
scas
mov
jecxz
stos
aam
dec
inc
dec
pop
out
das
int3
test
add
gs
ja,pt
and
out
rorl
cmc
shlb
push
adc
pop
leave
loope
cmp
jle
enter
pop
out
inc
jb
jae
jl
add
adc
clc
lcall
outsl
adc
fdiv
mov
and
inc
enter
stc
arpl
cltd
hlt
mov
pop
lods
mov
movsb
xor
fiaddl
iret
push
sub
push
sbb
jns
fs
jmp
fcmovbe
inc
xorl
jb
cmp
dec
mov
lods
scas
call
insb
sub
outsl
daa
insl
push
push
stos
adc
mov
add
jmp
and
jle
mov
inc
aam
leave
dec
pop
pop
cmp
movsl
xchg
scas
mov
jne
or
iret
or
mov
mov
cmp
sub
cmpsb
sub
call
xchg
lds
inc
mov
sti
popf
leave
pushf
imul
or
leave
mov
mov
or
inc
xchg
and
mov
addr16
push
ljmp
loopne
mov
and
stc
and
in
push
sub
adc
cmp
orl
sbb
pop
mov
or
dec
cmp
out
pop
adc
jnp
into
jmp
ror
pop
push
out
pushf
dec
cwtl
jns
popf
cmp
cltd
pop
xor
das
fbstp
mov
hlt
inc
pop
mov
jo
xchg
outsb
mov
loopne
lret
fldl
xchg
ret
push
das
scas
add
pop
push
push
adc
pcmpgtd
jb
xchg
sahf
xchg
lcall
adcl
mov
testl
popl
iret
pushf
idivb
and
mov
aas
sub
aam
out
jmp
pop
and
add
mov
hlt
pop
and
sti
and
into
push
imul
sub
jnp
sub
pop
inc
and
neg
or
xor
int
shl
jnp
sbb
rcr
lods
inc
in
les
push
jmp
pushf
dec
scas
jne
sbb
adc
dec
sbbb
sti
jmp
push
push
mov
arpl
and
lahf
dec
mov
push
push
sti
sub
dec
mov
xchg
mov
mov
push
jge
inc
int3
loop
jp
sub
xor
add
ja
fs
es
sub
jno
std
sbb
push
repnz
xchg
add
ret
lret
mov
or
xchg
ljmp
push
add
dec
pop
xchg
lock
jnp
adc
ja
or
jnp
xor
rorb
stc
push
xor
in
cmp
out
cltd
mov
iret
add
pop
fwait
mov
cmpsb
push
add
jp
ss
scas
inc
std
cwtl
enter
stos
popa
rcrl
popa
dec
and
inc
lea
and
mov
out
add
les
dec
mov
add
fmuls
pop
sarb
ja
pop
add
xor
loope
fs
xor
xchg
shlb
sti
test
in
dec
cwtl
icebp
adc
clc
jmp
lret
lret
push
and
in
jno
scas
add
sbb
pop
mov
jmp
arpl
and
jecxz
lret
pop
incb
add
mov
stc
rolb
adc
jle
cmp
xor
imul
xchg
in
adc
mov
mov
out
jne
mov
je
pop
inc
push
pop
pop
jnp
sbb
xchg
push
add
rolb
iret
mov
in
popf
fs
sbb
enter
push
in
cltd
imul
loope
cld
mov
icebp
lret
cwtl
pop
popf
test
push
push
cli
mov
pushf
sbbb
std
jb
push
in
test
cld
mov
daa
jge
mov
push
jbe
int3
out
ss
xchg
loopne
xchg
inc
shl
inc
pusha
into
lds
mov
and
push
jl
mov
js
enter
call
shrb
pushf
adcl
push
mov
cmp
sub
jbe
cs
sbb
xor
xchg
testb
add
push
dec
lods
push
testb
pusha
mov
inc
mov
leave
inc
stos
mov
mov
clc
addr16
push
jbe
test
incb
repz
mov
test
push
pop
mov
cmpsl
cmp
addb
sarl
mov
pop
pop
out
xchg
jae
loop
mov
cmp
jo
adc
pop
out
and
xchg
dec
xchg
add
xchg
xor
push
and
ret
mov
fistps
jecxz
add
jl
mov
mov
scas
pop
pop
mov
movb
int
imul
ror
hlt
clc
jp
neg
adc
out
mov
aaa
int
jae
xchg
xchg
sub
xor
inc
js
pop
add
ds
packsswb
jecxz
imul
xor
mov
sbb
mov
mov
or
mov
mov
dec
cmc
mov
fldcw
cmp
or
lods
repz
inc
pop
stos
add
hlt
cmp
mov
pop
test
add
xchg
add
mov
pop
nop
ficoms
inc
aam
out
sub
lret
sbb
push
shr
mov
cmp
lcall
inc
cltd
in
loop
fs
mov
pushf
or
bound
mov
sti
push
inc
mov
enter
pusha
outsb
stos
dec
adc
clc
push
les
sbb
pop
add
out
cmp
cmpsb
cmp
and
in
fiaddl
dec
dec
movsl
mov
cmpsb
movsl
lods
or
addl
jle
push
repz
cmp
xchg
push
hlt
sbb
sbb
in
jne
ret
icebp
aam
loope
xor
fs
fsubrs
cwtl
loope
sub
idivl
dec
xor
or
mov
cmpsb
movsl
xchg
test
popa
xchg
push
out
ljmp
xchg
cmc
xor
sti
inc
cli
and
adc
mov
sub
ffreep
les
testl
xchg
dec
inc
pusha
adc
adc
push
mov
inc
repnz
jecxz
mov
ljmp
fsubrl
lods
adc
sub
pop
scas
xchg
push
movsl
cwtl
cmp
xchg
mov
rolb
push
jbe
adc
pop
jg
stc
xchg
pushf
mov
adc
out
or
mov
xlat
or
inc
das
sub
sbb
jmp
xchg
pop
aas
xchg
mov
inc
leave
stos
test
mov
fs
sbb
stos
push
cld
sub
mov
ss
pop
ljmp
push
imul
and
jnp
inc
adc
add
inc
xor
test
movsl
out
sub
mov
xlat
stos
pop
pop
fidivrl
add
jmp
and
cs
rorl
imul
out
repnz
js
loope
sub
outsl
outsl
idivb
stc
or
pop
popa
pop
dec
fnsave
xchg
rorb
adc
lods
sti
stc
inc
push
jbe
inc
sbb
cmpsl
repz
popa
xchg
loopne
sbb
daa
arpl
adc
adc
pop
je
aaa
hlt
cltd
adc
mov
test
inc
pop
jno
scas
jnp
jecxz
hlt
add
sub
jmp
mov
ret
jo
icebp
inc
iret
dec
dec
dec
sbbb
xor
mov
dec
xchg
mov
mov
addl
add
push
ds
outsb
sbb
mov
repnz
mov
add
push
imul
inc
push
sbb
rcr
add
jo
cmp
stc
lret
pop
sub
frstor
mov
repz
xor
nop
xchg
xchg
sub
gs
ds
mov
xchg
mov
xor
rcrl
repnz
notl
arpl
pop
cmp
pop
push
add
push
push
mov
jnp
out
sub
lahf
fs
enter
pusha
jnp
sbb
negb
mov
dec
enter
arpl
cwtl
cmp
pop
popf
test
xchg
mov
mov
jle
jle
popa
jecxz
imul
test
fwait
mov
mov
mov
jns
mov
jb
popa
popa
loop
fdivrs
leave
outsl
xor
je
dec
jg
lret
cmp
push
rorl
pop
lods
repz
or
mov
xorb
test
pop
lock
out
pop
fidivl
movsb
fildll
aaa
lret
adc
xchg
mov
push
pushf
lahf
cmp
daa
sub
repz
cli
cmpsb
das
sahf
test
repz
shll
or
lock
mov
pop
mov
sti
test
xchg
arpl
aas
iret
js
or
scas
out
adc
inc
mov
mov
add
xchg
sbb
in
mov
test
xor
popl
push
hlt
push
inc
push
stos
inc
sub
inc
pop
lock
outsl
lahf
insl
xor
lret
mov
jmp
enter
sub
insl
lods
xchg
test
xchg
bound
push
or
daa
hlt
flds
mov
sub
cmp
pop
sub
paddd
xor
push
dec
mov
aaa
int3
int
dec
movsb
data16
sbb
dec
std
sbb
pop
pop
cmp
mov
cmp
scas
pop
xchg
sub
push
test
jge
leave
xchg
xchg
jmp
inc
and
roll
into
xor
cmp
lods
pop
push
dec
push
sarb
push
cmp
adc
sub
lock
jg
push
out
imul
adcb
dec
out
xchg
push
jo
mov
repnz
rcl
pop
mov
test
xchg
mov
ss
lret
mov
mov
xor
add
xchg
add
mov
out
popa
fistps
loop
stos
std
mov
adc
and
push
mov
in
outsb
or
sahf
pop
and
rcrb
sub
ss
insl
icebp
cs
cmp
sbb
lock
mov
add
mov
fs
cmpsl
jmp
xlat
mov
dec
xor
pop
les
cltd
arpl
inc
sub
aas
mov
sbb
loope
inc
xchg
in
pop
sub
stos
mov
orl
sub
fiadds
sbb
cmp
test
cmpsl
lods
cmc
pop
push
mov
mov
pop
xchg
pop
mulb
inc
cmp
lret
push
ds
sahf
sub
xchg
mov
lods
cmpb
fxch
jo
cmp
pushf
mov
xor
and
sub
jp
je
cmp
mov
cmpl
int3
ds
cmp
dec
push
lcall
cltd
jae
dec
cmp
out
imul
adc
xor
mov
jnp
adc
pop
xor
cs
pushf
ds
jecxz
adc
lods
cmp
inc
and
mov
cmp
push
push
inc
pop
lds
sahf
repz
or
std
mov
mov
rol
jo
sbb
xchg
sbb
test
ror
push
arpl
xchg
lahf
jne
inc
adc
and
xchg
lcall
out
mov
inc
pop
lea
loop
jl
sub
popf
adcl
pop
mov
push
mov
imul
cwtl
mov
cld
je
stc
sbb
mov
jb
xchg
pushf
xchg
or
mov
cwtl
cmp
dec
leave
fst
imul
loope
sub
fstpt
and
dec
cmp
pusha
mov
imul
lea
sahf
addr16
cmpsl
pusha
jnp
insl
jns
xchg
lds
mov
ss
cmp
or
test
xchg
sub
clc
stos
cmp
out
cmpl
push
repnz
mov
shlb
filds
int
les
decb
add
pop
mov
sbbl
pop
inc
ja
subb
in
add
cmp
push
pop
cli
cmpsb
fnstenv
mov
xchg
repnz
sarl
jbe
mov
or
and
xchg
fnstsw
add
dec
inc
mov
in
stos
clc
adc
in
loope
les
add
and
ret
dec
adc
cld
mov
test
pushf
add
mov
mov
mov
out
test
sub
mov
xor
or
inc
aas
loopne
insb
cmp
out
mov
hlt
mov
adc
push
jbe
cmpsl
cltd
mov
aas
jo
inc
xor
rcrb
sbb
push
insl
lahf
jnp
and
mov
into
gs
and
sub
pop
mov
xor
dec
lds
icebp
xchg
pushf
mov
xor
inc
mov
fwait
sbb
into
fs
jl
in
in
mov
lods
scas
add
in
test
sahf
push
imul
and
or
icebp
leave
in
mov
fwait
imul
loope
inc
dec
and
jge
sub
dec
jmp
insb
insb
dec
sbb
add
and
int3
lods
sbb
mov
sub
mov
mov
push
popa
sub
test
xlat
aad
sbb
mov
pop
bound
push
pop
je
or
pop
dec
mov
nop
lds
push
xchg
pop
andb
sbb
sbb
jmp
js
pop
pop
mov
gs
mov
xor
sub
jecxz
cmp
xchg
and
xrelease
push
pop
jo
xlat
shlb
ja
sbb
lea
jne
xchg
mov
mov
cmp
fcoms
sbb
dec
adc
addr16
push
adc
sahf
mov
push
test
or
mov
jecxz
xchg
and
jmp
xchg
sub
rolb
fdivs
sbb
ss
adc
cmp
in
sarb
dec
in
imul
ja
adc
xlat
xchg
lcall
adc
fistpl
divb
nop
jge
stc
icebp
mov
ret
aad
data16
js
mov
arpl
icebp
enter
scas
jae
sub
push
mov
aas
pop
pushf
aam
int
rclb
imul
lods
sbb
add
dec
xchg
and
cmpb
sub
ret
int
icebp
imul
push
lcall
and
push
add
sub
cmp
jecxz
addr16
dec
add
add
fldcw
loopne
mov
insb
call
add
add
xchg
jbe
dec
loop
movsb
addr16
inc
add
mov
add
dec
imul
xchg
ljmp
add
jbe
lods
imul
push
lods
leave
sub
adc
insl
pop
push
ret
and
aam
push
hlt
lret
xchg
into
out
adc
insl
mul
dec
stos
add
push
pop
jo
jge
lcall
sub
fnstsw
or
stos
scas
mov
and
and
jae
test
icebp
pushl
jecxz
sub
scas
mov
in
in
cmp
xchg
or
ss
jp
pop
cmp
dec
in
repnz
lcall
mov
jb
cs
mov
xchg
lods
mov
push
je
xor
notb
out
aad
pusha
lock
pop
cmp
lods
sbb
fs
das
dec
aad
push
sub
aam
enter
xlat
add
test
push
popa
movsl
ret
jmp
sbb
repnz
sbb
repnz
sub
push
cmp
adc
sbb
outsl
fdivr
push
je
mov
push
dec
adc
ds
mov
pop
into
clc
add
imul
sub
ds
icebp
aaa
push
mov
jl
icebp
push
jnp
push
cmpb
enter
bound
pop
jecxz
imul
pop
xchg
and
inc
repz
xchg
cmpsb
pop
je
insb
rolb
pop
rorb
hlt
adcb
pop
xor
sbb
popa
push
sub
add
rorb
subl
xorb
ljmp
xchg
push
cmp
ret
mov
scas
dec
adc
leave
lock
aad
mov
mov
or
inc
mov
scas
jb
xchg
cmp
xchg
or
pop
pop
es
loopne
dec
into
dec
xlat
add
into
push
gs
test
daa
les
ret
inc
cmp
addl
adc
xorl
dec
pushf
in
mov
loope
push
jno
int
loop
push
into
xchg
movsb
mov
data16
jmp
push
in
pop
je
dec
mov
pusha
nopl
addr16
pop
push
sbb
mov
scas
pusha
dec
mov
or
jp
xor
jno
jno
dec
in
pop
sub
push
in
lods
stos
add
shll
aam
insl
cmpsb
lods
adc
loopne
int3
add
rclb
icebp
add
dec
xchg
pop
xchg
js
mov
outsb
leave
add
xchg
add
and
enter
idivb
mov
out
mov
aaa
pop
fcomi
imul
and
out
inc
popf
test
adc
xor
push
leave
dec
stos
jle
push
pop
icebp
pop
ret
lea
fcoml
cmpsl
add
dec
js
cmpsl
mov
decb
or
inc
mov
jo
mov
addb
fistl
mov
les
nop
inc
les
cltd
adc
inc
xor
sbb
aaa
or
jnp
pop
pusha
pop
jp
mov
dec
iret
call
cltd
popf
popf
inc
shlb
mov
cwtl
push
adc
popf
divb
and
mov
jo
jbe
imul
cmpsb
and
cmpsb
mov
mov
cmp
popf
ljmp
dec
or
ret
or
push
lock
push
push
repnz
fidivs
push
dec
adc
test
mov
or
xchg
add
cld
mov
mov
pushf
cld
lock
scas
push
outsl
adc
mov
in
les
xor
cmp
dec
jge
rorb
rorb
jb
sub
mov
ja
into
pushf
fidivl
dec
fmul
push
fisubl
push
mov
inc
mov
test
int
lods
xchg
mov
mov
xor
mov
cld
cmp
xor
mov
sti
out
adc
jne
loop
adc
pop
pop
or
sub
mov
mov
jg
testb
rcrl
mov
les
pushf
lea
arpl
cmp
mov
dec
dec
inc
mov
in
in
mov
mov
pop
mov
shrl
clc
dec
aas
or
push
dec
in
pop
in
pop
jb
xlat
pop
pop
cmpsb
pusha
cmp
xor
sahf
lcall
xor
clc
xchg
dec
into
or
mov
cmpsl
orl
shll
lret
xor
lret
push
aad
fwait
pop
mov
bound
repz
fdivs
sbb
stos
jecxz
xor
ljmp
pop
outsb
sub
push
jns
xchg
cmpsl
ljmp
outsl
cltd
and
fisttpll
add
xchg
jl
cld
decl
in
jo
lea
sbb
xchg
add
cmp
testl
adcb
or
shll
jne
hlt
lahf
sbb
addr16
lcall
das
and
sub
push
mov
repnz
mov
dec
test
popf
out
mov
jmp
popf
sbb
xchg
int
daa
sub
stos
testb
sti
xor
aam
push
loopne
shr
loopne
jle
popa
js
dec
shlb
outsl
out
jge
xor
sbb
or
dec
jne
pop
arpl
test
shll
js
jno
outsb
inc
cmp
outsb
push
fxtract
jle
add
mov
sbb
dec
pop
xor
ret
sbb
mov
adc
and
xor
leave
xlat
in
mov
xchg
outsb
or
ds
loopne
xor
dec
mov
dec
and
call
movsl
pmaddwd
fs
iret
fdivl
inc
sbb
sbb
shll
sub
insl
pop
leave
fldenv
sbbb
jo
push
pusha
fwait
out
rcrl
movsb
sub
int3
test
cmp
sbb
and
lock
in
sbb
repz
xchg
xchg
mov
inc
stos
and
add
pop
jle
mov
mov
int3
mov
push
es
or
jbe
and
aad
fsts
gs
xchg
iret
adc
outsl
mov
repz
xchg
add
inc
jge
mov
dec
mov
lret
nop
push
test
fwait
nop
cld
mov
popa
and
cwtl
xchg
out
cwtl
jl
mov
mov
mov
jg
negb
jae
pusha
add
mov
or
dec
xchg
in
fucomip
mov
mov
jmp
and
xor
cmpl
imul
sbb
mov
pop
notb
and
push
mov
adc
adc
or
dec
lret
cmp
pop
popf
aad
xchg
dec
shrl
cmp
push
or
adc
jg
cmp
push
sub
dec
sbb
arpl
call
out
scas
push
jns
int
adc
test
xor
jmp
enter
fnsave
add
push
add
repz
mov
mov
add
pop
inc
rclb
testb
out
movsl
clc
jecxz
les
add
and
dec
repz
fldt
fdivl
add
xchg
add
insb
sub
mov
insb
push
cs
and
or
dec
mov
mov
cwtl
jae
je
or
sub
mov
aam
mov
xchg
xchg
iret
addr16
push
dec
mov
stc
mov
testb
loopne
inc
inc
inc
aaa
test
cmp
push
test
jne
out
xor
mov
insb
sub
icebp
mov
xorl
mov
aam
mov
push
sbb
ja
cmpsl
or
mov
fmulp
inc
xchg
leave
fwait
push
outsb
pop
lock
mov
stc
mov
push
xor
push
cmp
xchg
dec
faddl
push
fldt
insb
jae
cmp
fwait
addb
andl
cmp
outsb
movsl
arpl
mov
test
mov
push
enter
add
push
add
push
mov
lret
cld
mov
xchg
mov
mov
sub
es
shrb
jne
rcll
mov
and
stos
cmpsl
ret
gs
cmpsl
pusha
xor
int3
adc
repnz
jae
inc
add
movsl
jbe
in
push
leave
mov
sub
fwait
addl
add
arpl
sbb
jo
cld
incb
or
dec
adc
add
pop
adc
ret
xor
clc
dec
mov
lods
lods
lods
jno
je
jg
sub
push
push
or
mov
int3
mov
cmp
inc
dec
outsl
fisubl
popa
pop
dec
or
cmpsl
and
mov
cmp
ljmp
gs
pop
mov
in
bound
loop
sub
mov
ja
in
in
gs
pop
and
dec
cmp
fistps
in
push
push
lock
push
in
clc
mov
divl
in
gs
xchg
jle
mov
rcrl
cmpsl
xchg
or
mov
std
imul
std
push
adc
xchg
add
mov
sub
push
insl
int3
pop
iret
fisttpll
inc
inc
mov
cmp
jl
int3
cmc
mov
jle
xchg
mov
and
pop
in
adc
add
jp
pop
icebp
scas
push
push
sub
cli
push
pop
sbb
in
and
ret
lea
mov
outsb
jge
xor
pop
dec
les
lcall
jnp
pop
pop
mov
jle
sub
roll
add
mov
out
mov
dec
cwtl
sti
aaa
jno
test
lret
inc
xchg
mov
xchg
lods
mov
fnstenv
jne
adc
insb
pop
jne
jecxz
mov
leave
lods
and
cwtl
jg
jo
lea
bnd
push
js
mov
sub
data16
xor
or
out
add
repz
sub
loop
dec
imul
aad
mov
outsb
lea
dec
fisubrl
in
cmp
out
mov
lret
lea
sub
sbb
movsb
inc
int
adc
imul
icebp
mov
pop
fs
or
cmpl
pop
xchg
inc
xchg
notl
xor
mov
roll
mov
inc
jo
cmpb
xor
leave
sbbl
shrl
push
dec
jp
xor
inc
fmuls
jmp
mov
cltd
aam
mov
sbb
test
lret
pushf
fldenv
les
mov
mov
sbbl
adc
mov
pop
add
pushf
sbb
cmp
or
divb
xchg
das
fnsave
rorl
push
es
daa
in
lock
sub
mov
aas
xchg
fiaddl
and
cmp
jle
push
std
iret
loopne
in
arpl
std
or
push
int
insb
cmp
pop
sub
pop
mov
test
jne
dec
pushl
fcomps
mov
cli
fmuls
out
and
mov
fnsave
lret
jbe
sbb
nop
stc
inc
add
and
mov
push
outsb
xor
mov
out
inc
sti
inc
inc
sub
push
or
loopne
dec
jmp
mov
push
pop
mov
repnz
sti
pop
iret
clc
or
push
mov
xor
adc
mov
mov
mov
mov
pushl
push
fsubrs
loop
add
adc
push
int
jge
scas
ljmp
insl
cmp
repnz
rcrl
adc
mov
adc
fisubl
and
or
insl
cmp
and
aas
mov
test
hlt
xor
xor
xor
pushf
cli
popa
and
lret
add
idivl
frstor
roll
add
mov
enter
out
movsb
shlb
or
or
pop
mov
adc
imul
and
lods
xor
das
inc
mov
push
movsl
test
or
pop
add
xlat
adc
clc
mov
mov
xlat
mov
mov
jb
mov
mov
push
testb
aad
pop
and
pop
xor
das
mov
add
movsb
fstpl
inc
sbb
jae
stos
xchg
jo
fbstp
cld
pop
sbb
mov
cmp
xor
mov
jo
or
push
lods
push
scas
pusha
dec
stos
sub
jb
loop
sub
jp
mov
xor
repnz
cwtl
mov
push
movsl
mov
imul
fisubs
adcb
adc
xchg
nop
mov
push
call
bound
loop
add
dec
sar
sub
bound
sbb
push
fisttps
ret
subb
xor
imul
jl
test
dec
aad
repz
sub
notl
sub
popa
xchg
aam
add
and
lods
sub
and
add
dec
push
les
hlt
dec
sahf
sbb
fwait
mov
push
push
test
mov
out
mov
sbb
sbb
jbe
test
mov
insb
movsl
pop
sbb
lock
jae
jge
mov
pushf
std
std
in
testl
int
pop
push
sub
lahf
mov
mov
jecxz
mov
jmp
xchg
inc
jno
pop
or
ljmp
mov
mov
xor
test
mov
push
nop
cs
adc
jbe
jge
and
in
jmp
xchg
push
js
inc
dec
mov
inc
mov
sbb
dec
mov
test
fiadds
ret
aaa
repnz
pop
jo
cmp
fcmovnu
cld
rolb
repz
mov
stos
stc
adc
dec
call
pop
jecxz
ror
xor
jge
xchg
cmpsl
xchg
and
lret
sbb
sub
das
xchg
mov
addl
cmc
mov
push
cmp
dec
mov
xchg
cmp
mov
jp
imul
add
mov
call
mov
insl
lea
or
add
xchg
add
jnp
mov
xor
cmp
loop
sub
aaa
popa
mov
call
jo
dec
cmpsl
mov
out
sbb
popf
jp
cmp
mov
cmp
data16
mov
insb
imul
cmp
add
or
jno
test
lret
adc
mov
jge
sub
mov
xor
adc
das
orl
scas
and
leave
in
cmp
mov
inc
cmp
lahf
outsl
fidivs
aam
lods
jecxz
ror
inc
lods
cmp
pop
jo
movsb
test
ss
and
mov
icebp
cltd
push
dec
pop
imul
xor
inc
xor
cmp
push
ss
pop
inc
push
in
cli
insl
cmovne
aas
fisubrl
mov
mov
dec
gs
cmpsb
rcll
divl
arpl
sbb
int
adc
sbb
mov
cmp
out
lock
xorl
aaa
push
out
or
add
loopne
mov
in
adc
dec
mov
inc
sti
imul
shlb
lcall
sbb
push
pop
stos
inc
stos
sub
insl
fcoml
pop
lahf
pushaw
mov
pop
pop
xor
jle
inc
push
scas
sbb
int
loopne
push
adc
and
and
pop
repz
sahf
in
test
icebp
add
xor
pop
decl
jae,pn
inc
xor
mov
pop
enter
divl
sbb
scas
jae
mov
adc
fmuls
cmp
out
cld
lcall
adc
sbb
add
cmpsl
mov
popa
stos
mov
shlb
test
daa
rol
out
sahf
ret
mov
sub
pusha
adc
leave
push
xchg
inc
outsl
sbb
fsubs
aad
movb
xlat
jg
cmc
iret
std
pop
push
mov
in
es
or
cwtl
test
xchg
icebp
inc
mov
jbe
out
mov
test
and
nop
jmp
mov
jb
imul
inc
rcrb
in
xorl
subl
bound
lods
mov
rcrl
or
xor
xchg
push
movnti
add
ficompl
mov
xchg
xchg
fadds
add
mov
push
pop
mov
imul
push
cmp
xchg
sub
fadd
mov
cmp
jnp
push
out
call
scas
sbb
pop
outsl
sbb
mov
imul
or
inc
add
repnz
aam
cli
lahf
mov
mov
jle
out
sub
loop
mov
sarb
cmp
lcall
rol
jbe
mov
outsb
cwtl
push
jnp
scas
xchg
add
mov
cmp
test
add
arpl
in
imull
scas
xchg
xchg
outsb
loop
push
adc
sub
pop
out
fs
xchg
cmpsb
shll
push
add
je
push
sub
cs
hlt
and
test
fldenv
xchg
add
sub
cltd
pusha
push
inc
xchg
and
scas
mov
or
lock
dec
jno
pop
cmpsb
idiv
in
jg,pn
scas
cltd
cmp
push
mov
repnz
call
movsl
mov
popl
repnz
iret
mov
int
xlat
jnp
in
jb
adc
mov
xchg
adc
lret
icebp
push
lods
out
cmp
adc
push
inc
in
xor
js
in
add
stos
int3
mov
jno
in
pop
dec
sub
or
rol
icebp
leave
adc
frstor
and
inc
and
movsb
shlb
xlat
xchg
cmp
inc
mov
out
and
xchg
hlt
mov
shll
call
cli
and
fnsave
sar
and
push
mov
mov
jmp
jp
sbb
push
bound
repz
push
stos
rcr
and
hlt
push
inc
sbb
jo
push
dec
inc
clc
fldcw
mov
mov
inc
repz
test
stc
imul
test
jae
cmp
iret
mov
fsubl
test
in
fdivs
push
gs
mov
pop
mov
ret
mov
and
mov
ds
sub
cltd
pop
mov
adc
and
aam
or
add
into
out
adc
loopne
mov
push
les
sbb
sub
dec
dec
lahf
shrl
adc
sbb
mov
cltd
xchg
lods
jo
cmp
sbb
jae
test
add
pop
sbb
cli
inc
cli
outsb
ljmp
sbb
add
xchg
add
sub
popa
addb
lods
pusha
ljmp
adc
cltd
out
call
mov
xor
push
fadd
xchg
adc
jl
jmp
mov
xor
popf
adc
sbb
xchg
int
mov
xor
out
add
das
lds
or
mov
or
mov
jecxz
mov
inc
inc
inc
enter
jnp
aaa
jge
fists
shlb
mov
pop
cmp
or
add
cmpsb
lret
lods
mov
inc
iret
sbb
xchg
outsl
cs
cmp
lea
add
in
or
cs
or
outsl
pop
jne
repz
pop
push
mov
mov
and
and
jbe
push
push
int3
inc
insb
push
pushf
jp
fistl
inc
jne
xlat
iret
inc
mov
add
in
int
jge
rclb
push
pushf
or
dec
push
mov
roll
mov
gs
jp
sub
cld
subl
jge
nop
cmp
xor
dec
adcl
imull
ja
rorl
ss
sarb
mov
les
dec
lret
int3
addr16
andl
cmp
xlat
mov
and
outsb
and
addr16
loop
aas
sub
or
test
pop
jmp
xor
cs
jle
out
sub
inc
lods
int3
cmp
syscall
xchg
int
dec
call
cltd
jl
and
mov
out
mov
xchg
mov
imul
pop
and
xorb
add
dec
inc
cmpsb
inc
ja
repnz
pusha
jle
bound
xor
outsl
jae
and
sarb
mov
aam
es
repnz
mov
pop
addr16
mov
sub
int
mov
add
rcr
arpl
in
jge
xor
xor
mov
cmpsl
out
popf
mov
add
sbb
enter
pop
sub
in
loope
fwait
jle
shlb
sbb
jo
daa
das
xor
jle
lcall
pop
jl
loope
cmpsl
mov
xchg
dec
sub
fimuls
lret
and
and
cmp
fwait
arpl
push
fimuls
mov
mov
or
fnstenv
mov
sbb
movaps
xlat
inc
loopne
outsl
and
into
loop
cli
mov
in
push
xlat
ja
out
ss
mov
sahf
fldl
add
pop
fs
pop
inc
std
mov
fcoms
xor
sub
dec
jg
addr16
int3
adc
xor
insl
mov
inc
and
sub
dec
test
jbe
fsts
ror
data16
mov
rorl
pop
sub
scas
push
and
mov
sahf
mov
les
popa
imul
out
mov
shl
jecxz
sbb
pop
xor
pop
jecxz
add
cmp
cwtl
mov
ds
xchg
push
imul
orb
incb
jmp
aad
in
pop
mov
pop
fbstp
inc
je
jmp
cwtl
out
gs
test
aas
rcrb
adc
inc
sbb
xchg
les
fnstcw
xor
pop
repz
and
inc
mov
out
fiaddl
mov
lods
adc
insl
movsl
sub
int3
jmp
adc
shl
shlb
imul
xchg
fwait
xchg
pinsrw
pop
mov
push
and
jle
jo
mov
mov
stc
aas
inc
fsubrs
int3
sbb
fmuls
pop
int3
fisttps
cwtl
push
int3
push
testl
movsl
fnstenv
mov
leave
inc
mov
aam
push
sbb
xchg
int
ds
outsl
push
and
jbe
jge
pop
xchg
pop
sbb
and
adc
pop
scas
mov
test
nop
ds
ljmp
and
mov
sub
ds
pusha
cmp
cmpsb
or
sub
or
lret
sub
cmpl
xlat
and
xchg
inc
sahf
int
test
pop
mov
cmp
std
jns
orl
imul
jns
pop
cs
xor
jmp
push
imul
adc
icebp
repnz
and
ret
imul
and
dec
mov
sbb
cwtl
xchg
inc
call
ds
arpl
pop
inc
lcall
mov
inc
mov
lcall
mov
inc
pop
test
dec
jns
pop
xorl
in
rorl
stos
test
inc
nop
dec
xchg
add
cli
rcll
pushl
push
movsl
dec
and
add
xchg
add
sbb
test
pop
pushf
jns
jle
insb
pop
cwtl
xchg
ror
aas
dec
jbe
adc
sub
jmp
xor
imul
data16
stos
scas
mov
lcall
push
and
mov
pop
inc
jmp
adc
mov
shll
insb
stc
pop
adc
fs
shrl
or
push
xchg
sarb
dec
int
lahf
xchg
sbb
aam
jl
movsl
test
scas
out
icebp
pop
cwtl
mov
and
rorl
dec
rcll
mov
lret
mov
mulb
and
and
ror
faddp
ds
pop
xchg
cltd
pop
sti
pop
jns
jl
jecxz
xor
ret
xor
mov
xchg
mov
cmp
xchg
ret
clc
xchg
leave
mov
xchg
mov
into
cld
cmp
lock
outsl
adc
or
xchg
push
pop
aaa
xchg
js
pop
mov
sub
mov
out
addr16
andb
dec
ss
mov
cwtl
in
and
addr16
imul
inc
jecxz
fsubr
mov
lods
cltd
rcr
or
mov
ss
lds
hlt
dec
dec
jnp
inc
shlb
lds
xlat
xor
stos
inc
dec
ret
aad
in
insl
xorl
aas
mov
inc
cmpl
xor
xchg
out
das
sub
ret
add
inc
out
and
adc
mov
push
sahf
pop
xchg
movsl
popa
ja
std
stos
stos
sbb
and
loope
jecxz
sbb
jbe
andl
mov
adc
popf
inc
push
adc
sub
mov
sbb
cld
lock
in
js
cmp
mov
lds
retw
orl
mov
mov
je
test
pop
pop
daa
inc
movsl
in
push
add
xchg
roll
inc
outsb
loope
fistpll
adc
cmp
rorl
mov
lock
sahf
inc
fistpll
mov
sub
dec
hlt
push
sub
jno
and
loop
or
pop
imul
dec
cwtl
mov
out
or
stc
in
mov
add
rorb
leave
and
in
aad
sbb
push
clc
fmull
fidivs
mov
push
mov
push
xor
add
add
negb
out
lods
push
insb
or
sbb
add
add
push
lret
addr16
jne
lock
lock
adc
std
repz
into
pop
pop
jl
divb
or
or
push
enter
push
mov
pop
pop
mov
push
pusha
jnp
stos
adc
adc
nop
repnz
adc
sarl
adcb
inc
mov
fdivl
add
lods
mov
hlt
pop
jge
and
lea
mov
xlat
aas
or
jno
mov
jle
mul
add
and
shrb
dec
imul
lea
add
and
or
mov
outsb
jmp
call
mov
es
fisubs
aaa
jne
js
jp
adc
pop
gs
mov
pop
arpl
sbb
mov
lahf
sub
cmc
hlt
insb
or
xchg
sub
mov
sbb
loope
xchg
imul
loop
xchg
inc
lods
jl
cmp
jo
inc
mov
outsb
and
pop
decl
mov
in
sub
ficoml
lock
xchg
rcrl
jae
mov
cmp
or
flds
movsb
loop
push
in
fsubrs
sbb
clc
jecxz
add
lods
jmp
adc
shll
push
push
and
mov
push
xor
pop
insl
movsb
hlt
xor
arpl
and
sahf
les
mov
mov
dec
loopne
lods
test
sbbl
dec
sub
imul
and
mov
dec
jecxz
add
flds
lods
cmpsl
adc
cmpsb
inc
and
rorl
push
dec
fmulp
sub
scas
sub
sbb
add
xchg
pop
out
and
inc
loop
imul
jno
pushf
nop
stc
cmp
std
fistpl
aam
inc
lods
jecxz
pop
sahf
xchg
inc
sbb
xor
or
add
lods
js
cwtl
add
mov
imul
imul
add
inc
or
push
fnstsw
std
xchg
insb
out
and
fstps
stos
pop
repz
cltd
faddl
aaa
mull
into
daa
jnp
jmp
lret
mov
mov
mov
mov
inc
mov
lahf
sub
sarl
adc
pop
sub
mov
add
inc
mov
gs
sbb
jno
pushf
fcomi
push
nop
add
push
push
jnp
fisubs
xchg
scas
xor
add
xchg
add
mov
jo
and
pop
call
inc
mov
mov
mov
push
addr16
popf
test
or
adc
xchg
and
je
dec
ds
repnz
test
sub
aas
fimuls
stc
inc
xlat
repnz
sub
xchg
and
rcrb
sub
movsb
in
xchg
imul
out
ss
push
mov
push
fwait
mov
cld
pop
cmc
ret
sub
inc
adc
mov
xchg
fcoms
pop
cmp
cmp
ds
das
pop
lods
test
fstpl
es
cmp
dec
fsubrs
fstpl
pop
jns
cli
pop
sbb
scas
adc
mov
movl
gs
out
jns
pushf
pusha
and
cmp
iret
fcmovu
movsb
lock
sub
sub
xchg
cli
frstor
dec
or
mov
ficoml
adc
pop
sbb
popf
mov
test
popa
mov
push
xchg
ficomps
jl
loope
ds
push
and
call
or
mov
ds
cmp
fldenv
jbe
or
les
jl
repnz
fsubrs
inc
or
bound
mov
mov
loop
xor
ljmp
hlt
jnp
mov
das
scas
fnstenv
roll
aaa
mov
icebp
jo
pop
rorb
xchg
and
push
pop
arpl
mov
sbb
jae
pop
mov
push
jle
mull
cltd
ljmp
push
fsts
xor
cmp
cmc
pop
fwait
mov
dec
jb
or
in
push
lcall
xor
cld
mov
mov
jmp
pushf
push
pop
dec
popf
cmc
pop
in
loop
in
daa
and
orl
or
lret
jecxz
cmp
leave
rolb
inc
mov
lahf
out
test
jmp
mov
xor
jg
cmp
inc
les
test
out
sub
mov
or
movsl
outsl
mov
xchg
sbb
lret
xchg
cmp
pusha
cmp
adc
mov
adc
inc
aad
aaa
mov
stos
sbb
test
add
cltd
enter
mov
push
outsb
pop
stc
mov
add
xchg
add
std
dec
pop
and
xor
jbe
xchg
cmpsb
dec
cs
lods
cld
ljmp
mov
jne
jb
xchg
iret
rolb
add
cmpsl
jo
xchg
test
fnstcw
inc
pop
add
or
add
aad
out
mov
subb
cmp
dec
push
jnp
aad
mov
and
dec
push
pop
int
adc
addb
fidivrl
lcall
sub
pop
ss
cmp
or
rclb
push
bound
xor
add
call
or
cli
adc
xchg
push
or
addr16
push
pop
cs
jmp
rol
fistps
loop
sbb
jns
test
lea
int3
imul
stos
in
shlb
es
js
push
mov
xor
push
mov
sub
and
std
xor
adc
aad
push
int
xlat
test
sub
sbb
jle
cmp
adc
cmp
repnz
inc
lret
jno
sub
adc
sbb
xor
cmpsb
xor
push
imul
cmp
aaa
scas
push
push
rcrb
lea
cli
and
lret
jbe
insl
lcall
cmc
lahf
add
jbe
xchg
sub
movsl
int3
gs
push
stos
cmp
inc
popf
cli
stos
scas
bound
lea
rcr
jo
pusha
or
push
xor
mov
xlat
lock
fistl
pop
mov
bound
mov
daa
xchg
cmc
dec
inc
cmpsb
dec
lock
jmp
pop
jo
or
fisubrl
mov
fsub
loope
lds
mov
pop
divb
inc
xchg
pop
enter
jecxz
fistpll
loop
lret
dec
std
jp
arpl
mov
add
divl
dec
aam
loopne
and
fdivrs
jb
push
in
lods
test
lret
in
mov
pop
aas
mov
lret
push
test
and
jne
cmp
sub
dec
orl
mov
int
jecxz
cmp
out
xor
push
mov
xor
lods
sub
stos
jae
je
cli
add
jns
sbb
jge
int3
outsb
xchg
fisubl
add
xchg
add
cs
push
or
dec
xchg
push
mov
in
mov
sub
pop
into
sbb
test
inc
sbb
dec
in
arpl
in
push
loopne
sbb
mov
cmp
inc
lret
dec
ljmp
or
jb
xlat
jecxz
cmp
cmp
push
adc
dec
sahf
icebp
mov
push
xchg
mov
xlat
push
std
call
test
adc
pop
xor
movsb
mov
dec
dec
jl
out
push
pop
mov
in
hlt
inc
pop
mov
sbb
leave
sub
pusha
ljmp
test
pop
cmc
push
add
inc
arpl
stc
test
out
push
popf
call
ret
pop
loopne
data16
mov
jmp
pop
xor
pop
mov
add
cmp
sbb
sar
idivb
out
pop
sahf
arpl
in
mov
xchg
idivb
lret
out
lcall
in
loop
sub
dec
mov
mov
sub
fs
inc
add
cltd
cmpsb
mov
shrl
adc
xor
ss
stos
lds
enter
idivb
push
inc
dec
int3
movsl
push
cmc
xchg
xor
dec
mov
add
mov
pusha
xchg
xor
inc
mov
int3
ficoml
js
xchg
dec
push
lret
adc
adc
xchg
dec
cmpsb
inc
push
cmpl
outsl
lods
ret
dec
mov
add
push
mov
xchg
cltd
jge
xchg
nop
mov
dec
and
xor
sub
and
rcrb
mov
mov
insb
pop
adcb
aam
cmp
adc
pop
in
pop
sbb
jae
jae
rorl
out
imul
mov
pop
idivl
push
negb
test
mov
fcompl
lods
out
sbb
sbb
xchg
mov
xor
add
push
adc
inc
in
rcl
xor
jmp
xchg
xchg
dec
jg
and
push
xchg
loopne
in
and
rcr
add
cmpsb
cwtl
cli
in
adc
xchg
aaa
cmp
push
sahf
mov
push
cmc
test
dec
in
pop
cmp
sub
mov
jmp
cmp
movsl
jns
cmp
pop
push
imul
scas
sbb
cmpxchg
or
roll
pop
sub
test
ret
add
push
xor
dec
inc
lret
jnp
scas
dec
push
test
popl
aaa
jb
add
sub
loop
stos
cmp
sbb
add
or
daa
sub
ja
sti
int3
mov
xchg
xor
fists
pop
sbb
stc
pop
xchg
add
lds
sbb
fcmovnu
mov
jbe
sub
or
and
outsb
mov
and
mov
fiaddl
mov
add
arpl
cmp
inc
inc
push
enter
sar
jecxz
mov
cwtl
test
out
sbb
dec
rolb
mov
repz
js
sbb
or
mov
push
inc
call
cmpsl
dec
in
je
jp
inc
xorb
rcr
xchg
sbb
dec
xchg
negb
sbb
add
enter
xorl
push
jecxz
movsb
int
std
mov
jbe
scas
sbb
cwtl
das
sarl
cmp
sbb
out
or
fsubl
push
dec
scas
lods
fsub
sub
stos
out
pop
mov
mov
insb
in
add
notb
dec
int3
mov
xchg
rcrl
xchg
dec
mov
pop
rclb
imul
lock
inc
jl
popa
add
sbb
jle
and
cltd
repz
jg
hlt
push
lods
cltd
divl
scas
cmp
lret
push
fisubrs
inc
das
lock
rorb
in
mov
and
mov
jae
xor
lods
push
push
vpsubd
inc
iret
stc
adc
fidivl
mov
cmpsl
xor
div
movsb
xor
inc
cwtl
or
lcall
cmp
stc
xchg
jmp
inc
cmc
mov
inc
mov
push
lcall
fadds
cmpl
popf
jp
or
into
or
outsl
popa
add
lea
fbstp
call
mov
lods
aad
dec
cmpsb
call
mov
mov
popf
push
idivl
pushf
mov
cwtl
push
pop
mov
dec
ret
lock
add
subl
andb
push
mov
xchg
fisubl
sbb
add
aas
dec
cli
jno
add
sbb
pushf
cli
mov
scas
aad
int3
sbb
add
rcl
lea
xchg
and
ret
cwtl
adc
dec
repnz
scas
sub
js
mov
arpl
gs
cltd
push
pusha
shl
es
cld
sbb
in
out
std
imul
inc
inc
or
push
rol
gs
les
jns
dec
mov
cwtl
inc
leave
nop
add
add
aaa
xor
push
enter
mov
int
xchg
imul
sbb
adc
mov
adc
adc
arpl
into
cltd
xchg
jecxz
in
je
dec
sahf
mov
test
sti
imul
ror
cmp
xchg
arpl
imulb
sbbb
mov
pop
add
out
hlt
jbe
in
jnp
mov
sub
add
add
cltd
out
mov
push
shll
sub
inc
jb
repz
add
pop
xchg
or
push
xor
push
enter
mov
arpl
jle
pop
lds
sbb
mov
pop
mov
cmp
jbe
mov
sbb
sti
and
jg
ret
fnstcw
push
or
cld
or
lcall
mov
push
ljmp
and
bound
call
test
dec
fs
out
mov
push
sarb
jbe
push
ds
dec
mov
jp
mov
cmp
fs
xor
xchg
in
pop
cmpsb
xchg
push
adc
ret
and
in
out
push
popf
push
ja
add
sub
push
out
push
push
fldenv
sub
in
dec
pop
bound
add
ds
cmp
das
mov
mov
bound
adc
mov
pop
rcll
dec
xchg
fnstsw
mov
jmp
mov
push
add
add
cli
fdivl
scas
inc
cmp
push
call
sub
movsb
daa
lret
test
pop
xor
mov
pop
mov
push
pop
pushf
lahf
sbb
sbb
shrl
ljmp
in
iret
cmp
ljmp
loopne
or
lret
xor
mov
inc
fsubrs
out
call
jbe
add
lcall
bound
bound
add
xchg
add
scas
xchg
leave
pop
inc
mov
movsl
jecxz
mov
pop
xchg
inc
jno
xchg
clc
addr16
push
push
dec
sbb
insb
jbe
out
jecxz
pop
jnp
lock
mov
mov
rclb
fadd
int3
jge
es
lcall
cmp
stos
jecxz
lods
icebp
pop
add
mov
repnz
jno
bound
icebp
inc
mov
out
psubq
enter
pop
and
sbb
sub
dec
out
insl
cmp
add
dec
jne
je
jecxz
push
sbb
nop
shrl
cltd
mov
stos
and
jnp
pushf
mov
pop
cli
hlt
push
test
int
push
ds
ret
cs
xchg
lods
out
adc
mov
jae
or
cs
xchg
cmpsb
test
xor
lods
cs
push
testb
in
xchg
daa
adc
cltd
inc
inc
pop
fcoml
scas
xchg
imul
lcall
lds
rcrl
scas
xor
aaa
frstor
mov
imul
jecxz
inc
bound
jae
insl
xor
loopne
arpl
add
lods
sub
aad
push
das
cmc
add
ss
xlat
adc
pop
or
cmp
adc
hlt
mov
repnz
xor
sub
pushf
or
mov
sub
sbb
js
cmpsl
in
sbb
sub
pop
pop
push
jge
sbb
movsb
adc
adc
push
inc
pop
and
call
add
lods
insb
test
fs
and
push
call
aas
fdivs
push
dec
add
rcrl
repz
xchg
stc
add
lcall
movsb
shrb
cli
frstor
inc
inc
jne
mov
pop
mov
les
clc
sub
push
push
mov
push
es
push
repnz
aad
sub
sub
dec
test
popf
iret
out
aaa
sub
test
sti
sub
fadds
gs
lret
mov
adc
lret
add
cmp
insl
mov
in
cmp
and
int3
push
mov
xor
add
mull
mov
repz
addr16
test
and
pop
inc
cmp
faddl
repnz
popf
fmul
lahf
jecxz
roll
nop
stos
es
aas
iret
cmc
sti
pushf
loop,pt
push
sub
loop
hlt
add
xchg
add
adc
and
loop
inc
pop
aas
pop
cmpsb
sbb
push
pop
rcrl
xor
ds
pop
sti
das
outsb
mov
stc
mov
fistpl
cmp
sub
pop
icebp
in
pop
add
outsb
jp
add
mov
mov
sub
daa
mov
pusha
jns
clc
mov
in
pusha
jp
insb
add
lds
or
jg
jg
fisubrl
fadds
out
mov
ljmp
ret
jge
pop
std
insb
dec
inc
stc
xlat
inc
ficompl
call
mov
and
loop
and
cmp
adc
fcoms
or
fnsave
adc
or
pop
loop
add
xor
dec
jge
and
shrl
add
cli
pop
mov
cmp
inc
cmp
jno
aam
mov
rcll
iret
lea
cmp
xchg
or
push
les
push
pop
inc
xchg
push
mov
cmp
dec
insb
or
or
push
pop
add
xor
xchg
push
push
cmp
scas
inc
repnz
test
mov
lahf
add
dec
push
mov
xchg
std
mov
ret
xchg
mov
add
stos
or
inc
scas
in
nop
pop
sahf
insb
nop
jge
sub
sub
stc
xor
cmovo
movsb
iret
or
mov
jns
jae
mov
leave
push
cmp
add
mov
aad
adc
pusha
push
or
inc
js
add
pop
jno
xchg
inc
sahf
in
xor
jecxz
imul
adc
les
lods
xchg
and
addr16
into
add
fdivrl
jmp
jne
push
push
inc
rolb
sbb
push
imul
mov
mov
mov
inc
pusha
ret
inc
mov
dec
out
adc
push
test
push
lock
stos
inc
pop
cli
scas
pop
or
inc
xorb
push
test
sbb
dec
lret
cmp
mov
loope
mov
pop
pop
inc
sbb
cwtl
mov
outsb
sub
adc
aam
or
dec
imul
shr
pop
sbb
xor
stc
int
xor
push
ja
add
jg
add
pushf
adc
movsl
ficoms
xchg
call
or
imul
cli
es
or
add
push
inc
cmpl
in
call
into
and
adc
push
xchg
push
hlt
push
mov
jle
dec
pop
pushf
insl
mov
inc
mov
push
mov
mov
pop
pushf
pushf
aaa
mov
jae
push
inc
mov
inc
roll
clc
jecxz
jbe
cmp
xor
mov
xchg
dec
add
xor
cwtl
movsl
lods
jno
xchg
mov
mov
pop
mov
daa
xor
scas
add
mov
push
ss
adc
arpl
bnd
leave
daa
fsubl
pusha
lret
lock
je
jo
repnz
mov
add
icebp
mov
pop
ficoms
insl
dec
leave
mov
lret
icebp
leave
es
cmp
pop
mov
gs
pop
cmp
dec
mov
push
lcall
adc
push
mov
cmp
mov
pusha
and
scas
addr16
repz
in
jbe
inc
jnp
mov
mov
add
cmp
sbb
push
lcall
movsb
and
loop
add
xor
imul
add
xchg
pop
cs
jg
xlat
push
mov
xchg
xchg
lret
pusha
je
sub
pusha
push
jl
adc
lods
cli
dec
xchg
adc
ret
fyl2xp1
jp
loopne
shl
fdivrs
out
icebp
jne
cld
aaa
pop
push
hlt
push
clc
in
ret
sahf
cmp
mov
out
push
pop
xchg
mov
cmpsl
jne
in
push
insb
and
mov
or
cmp
stc
decl
adc
shrb
inc
pop
filds
gs
aad
xor
sbb
xor
dec
xchg
in
out
test
add
inc
lods
call
hlt
push
out
test
dec
out
pop
xchg
dec
xor
jmp
jecxz
pop
fiadds
jle
popfw
and
inc
jno
fidivrs
dec
dec
mov
pop
std
sub
cmpsl
gs
mov
mov
testl
lock
clc
out
ret
jl
arpl
jl
test
