push
mov
sub
add
mov
cmpl
movl
not
jmp
movl
not
cmpl
jne
push
call
mov
sub
movzwl
and
add
mov
xor
add
sub
xor
adcl
mov
mov
sub
xor
adc
andl
jmp
jae
insl
mov
and
cmp
or
sbb
sahf
jl
rorb
cs
nop
mov
adc
pop
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
jp
clc
xchg
xorb
jle
sti
xchg
mov
arpl
jmp
adc
aam
push
or
and
lcall
cmp
movsl
inc
add
jmp
and
lretw
sbb
push
mov
inc
fsubrs
mov
jmp
and
fldl
mov
shll
dec
aas
pop
and
andb
dec
repnz
cltd
notl
out
aam
wbinvd
cli
pop
inc
fdivs
pop
mov
stc
std
nop
add
shr
imul
lret
inc
cmp
cltd
dec
mov
push
lock
jmp
adc
repz
repz
mov
out
popf
popf
xchg
mov
mov
shll
ret
pop
and
adc
and
mov
mov
popf
and
or
stos
cmp
hlt
sahf
cmp
cmpsb
push
add
jo
lcall
pushf
sti
ds
inc
or
lods
sub
mov
mov
mov
xor
inc
mov
sub
pusha
jns
jns
inc
jnp
les
fs
out
push
push
enter
push
sti
jo
les
pop
ja
movsb
leave
bound
test
shll
hlt
dec
loop
scas
pop
add
test
cmpsb
xchg
faddl
pop
jle
xor
movsl
adc
pop
xchg
rcr
inc
jecxz
or
lea
xor
xor
enter
inc
int
inc
ds
repnz
addr16
pop
jno
inc
sbb
sbb
inc
mov
pop
xor
and
idivb
add
hlt
lcall
iret
fstpl
outsb
int
pop
in
jl
aaa
loope
jbe
sarb
xchg
rcrl
pop
sub
dec
mov
xor
xchg
adcl
dec
sahf
jp
mov
lods
jno
mov
mov
dec
sarl
in
pushf
cmpsb
xchg
nop
outsb
lods
icebp
sti
pop
jbe
and
orb
std
inc
fwait
imul
lock
loope
mov
ja
fisttps
divl
and
xchg
cmp
adc
push
mov
xchg
xlat
push
pop
sbb
mov
adc
div
push
mov
jg
in
test
pop
xlat
push
pusha
push
cmpsb
dec
and
push
scas
scas
or
aas
sti
cld
xlat
mov
sbb
movsb
stc
add
les
js
mov
or
enter
dec
std
ljmp
cmp
push
and
push
mov
pushf
imul
loopne
movsl
pop
iret
jge
dec
imul
ds
scas
aad
push
mov
dec
add
cld
jbe
roll
popf
mov
in
gs
add
pop
aas
sahf
xchg
repz
in
mov
leave
cmp
lods
sub
xchg
call
loop
cmpsb
ds
stos
addb
loope,pn
fisttpl
adc
pop
stos
filds
aaa
lods
jecxz
outsl
cmpsb
push
dec
push
scas
mov
addr16
int3
pusha
js
jecxz
cmp
cli
dec
and
xchg
imul
insb
cmp
xchg
mov
in
cmpsl
inc
or
push
jmp
int
mov
popf
sbb
aad
js
sub
ljmp
mov
mov
sub
mov
push
mov
mov
mov
sbb
mov
mov
mov
and
orl
orl
andl
mov
add
mov
cmpl
mov
movl
mov
mov
jmp
notl
mov
cmpl
jae
push
call
mov
xor
or
sub
or
xor
add
mov
sub
imul
and
or
mov
mov
jmp
outsl
add
das
movsb
out
sbb
jl
adc
sbb
imul
popa
daa
std
iret
lods
jbe
push
stc
leave
out
je
testb
xlat
movsb
in
cmp
xor
and
stos
ja
adc
lods
lahf
jo
mov
iret
mov
pop
inc
pop
in
cmp
ficomps
mov
dec
xchg
jle
stos
push
neg
inc
pop
pop
scas
mov
dec
sar
out
add
add
push
popa
adc
cs
pushf
mov
adc
sub
jmp
xchg
mov
je
jle
test
mov
es
lock
or
adc
mov
hlt
jnp
adc
lods
fisttpll
fld1
ja
jl
sarb
dec
push
fsubrl
aam
stos
loop
sbb
xor
cltd
inc
in
test
arpl
pop
lahf
loopne
xor
jb
mov
push
push
jl
in
sbb
das
xchg
loop
jne
xchg
nop
and
loopne
mov
test
fs
mov
cmpsl
decb
pop
xor
imul
pushf
mov
adcb
mov
adc
inc
pop
add
cmp
mov
cmp
iret
adc
cwtl
stc
jmp
sub
add
push
sbb
mov
movsbl
std
adc
xchg
outsl
out
faddp
cmp
mov
popf
jne
sub
movsl
ret
push
mov
mov
and
ss
pop
scas
lock
mov
mov
xchg
mov
enter
dec
decl
xchg
test
arpl
in
iret
mov
fcmovnbe
inc
je
xor
jle
pushf
lods
stc
pop
popa
std
pop
xor
lock
pop
jp
adc
cmpsb
dec
iret
cmp
mov
xlat
jb
cmp
sbb
jne
insl
xchg
repnz
cmpsb
rcrb
movsb
pop
pop
pop
lret
scas
shll
pop
out
out
mov
pop
and
imul
xor
lret
xchg
fimull
popf
dec
pushf
flds
push
add
shlb
xchg
jne
or
popf
xchg
cmpl
jge
push
mov
sbb
cmp
mov
adc
stc
pop
adc
lods
push
mov
cmpl
out
jns
jns
or
add
test
mov
jg
sub
insb
mov
and
cld
jp
ss
sahf
fadds
sbb
xchg
adc
scas
test
addr16
add
pop
bound
mov
inc
movsl
cmp
adc
xor
in
xor
fbld
popf
les
insb
cmp
cmpsb
js
push
dec
fwait
inc
xchg
cmp
and
clc
lods
mov
in
lds
jns
sbb
xorb
call
jp
call
std
pop
add
xchg
add
adc
mov
add
or
and
in
sbb
adc
cmp
mul
xchg
rcrl
push
cmovg
scas
xchg
lock
movsl
repnz
push
fildll
popa
xchg
bnd
xor
fwait
inc
pushf
lcall
xchg
push
stos
xchg
inc
xchg
push
push
push
mov
lret
es
push
pushf
mov
jns
adc
jle
loope
xlat
lret
push
xor
xchg
fldl
push
jp
pusha
aam
cmp
mov
ljmp
gs
repz
adc
inc
mov
jmp
pop
sub
mov
mov
sbb
cmpl
notl
mov
mov
jmp
movl
not
cmpl
jge
push
call
mov
adc
and
add
mov
xor
and
mov
mov
sub
mov
orl
sbb
orl
adc
lea
mov
movl
mov
cmpl
mov
movzbl
mov
jmp
not
mov
cmpl
jg
push
push
pushl
push
call
adc
sbb
neg
adc
sub
addl
xor
mov
mov
add
sub
mov
mov
inc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jg
push
push
push
call
sub
or
sub
mov
adc
mov
xor
mov
shrd
cmpl
mov
movl
movl
jmp
movl
cmpl
jge
pushl
pushl
push
call
movzwl
and
mov
and
add
sub
add
or
shr
mov
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
push
push
call
sub
movzwl
add
add
sbb
incl
mov
xor
xor
orl
or
jmp
xchg
xchg
je
insb
sub
dec
and
mov
sbb
sahf
adc
sbb
sbb
stos
dec
mov
ljmp
jno
jle
push
fstpt
lods
in
popa
xor
dec
mov
sub
and
and
loope
mov
lea
lods
mov
sbb
push
inc
pop
and
add
mov
mov
dec
std
out
mov
in
jno
das
sarl
scas
push
les
ficoms
stc
pop
out
mov
xchg
loope
mov
fs
cmp
xchg
pushf
sbb
xchg
cmp
repnz
lea
std
fidivrl
pusha
loope
scas
sbbb
cmp
sbb
sub
cmpsb
js
pop
out
scas
mov
cmpsb
andl
push
mov
inc
jno
dec
ja
repz
ja
mov
dec
test
jb
mov
scas
into
mov
movsb
ljmp
xlat
jle
mov
roll
pop
cwtl
jae
imul
jecxz
jno
and
jecxz
add
subl
inc
or
das
adc
sbb
out
fdivrs
pop
xchg
je
xchg
sub
sub
add
xor
in
jne
cmpsl
loope
or
or
pusha
bound
mov
lods
orb
push
or
std
jns
mov
dec
repz
push
insl
les
inc
lods
mov
int3
aas
mov
cld
lcall
ror
in
or
neg
xor
enter
mov
xchg
adc
sub
jge
mov
cli
fwait
pop
int
jge
sub
iret
subl
jmp
mov
jne
pop
or
mov
jnp
shl
fdivs
ljmp
cmp
int3
scas
add
mov
fcomps
bound
fcomps
or
xor
xchg
or
out
dec
stos
sahf
mov
cltd
aaa
jle
stos
pop
adcb
jp
out
push
push
negl
xor
dec
jl
mov
lods
xchg
sub
pop
movsb
push
cmc
cmp
mov
pop
call
jae
arpl
mov
pop
mov
add
testl
arpl
out
cmp
inc
cmp
dec
outsl
out
insb
push
mov
andb
std
inc
movb
cmpsl
sbb
iret
dec
sub
lret
enter
shlb
or
mov
fsts
adc
add
or
push
dec
dec
and
pop
test
arpl
dec
cmp
stos
addr16
test
jbe
subb
fists
movsl
adc
ja
insl
je
xchg
lods
in
pop
mov
push
jmp
mov
jp
out
adc
cwtl
sbb
and
fstl
sub
out
sub
inc
shll
sbb
mov
mov
mov
mov
mov
pop
scas
movsb
add
sub
and
dec
fimuls
push
mov
jmp
mov
dec
and
cs
sbb
inc
and
jae
test
ret
scas
or
push
faddl
icebp
adc
out
xchg
daa
or
int
mov
dec
add
mov
stc
push
jp
inc
fdivl
leave
int3
xchg
dec
xor
cmc
outsl
cmp
mov
movl
mov
adc
movl
cmpl
movl
movl
jmp
mov
mov
cmpl
jbe
pushl
push
call
orl
xorl
addl
and
movl
subl
movl
cmpl
mov
movl
mov
movl
jmp
mov
cmpl
ja
push
pushl
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
movl
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
cmpl
jle
push
pushl
push
pushl
push
pushl
call
adcl
addl
subl
orl
mov
xor
movl
xor
jmp
stos
fisttpll
aas
and
mov
stos
add
sbb
divb
movsb
jmp
dec
dec
es
mov
test
or
std
xor
sub
int
mov
ss
xchg
pop
cmp
cli
push
sub
enter
push
mov
popa
ret
cmc
movsb
mov
lds
aam
xchg
ds
inc
add
jne
adc
fwait
or
xor
loope
fdivrl
and
orl
test
push
scas
mov
inc
stos
or
push
xor
mov
fstpl
push
inc
fistpl
cmp
scas
leave
and
add
jbe
jb
in
push
dec
rcll
dec
adc
and
insl
cmc
mov
stc
sti
aas
rolb
push
jbe
xlat
in
mov
xlat
call
and
sub
ss
push
out
aaa
jno
dec
adc
lods
fsts
ds
ret
pop
loopne
mov
cmp
sti
test
jge
shlb
push
push
cwtl
xchg
adc
cmp
stc
mov
je
mov
cmp
add
loop
jmp
xchg
pushf
lret
mull
or
jo
lods
dec
xor
jle
data16
daa
sub
leave
repz
std
sub
in
lahf
imul
jb
jb
enter
sarb
xlat
ja
dec
aam
push
sbbl
js
push
cmc
aad
jo
inc
jmp
test
dec
pusha
xchg
into
pop
movsb
aam
dec
adc
inc
test
stc
mov
mov
cmc
jmp
pop
mulb
pushf
and
xlat
out
xor
xlat
js
pop
dec
adc
inc
lea
or
dec
sub
push
rcl
sbbb
or
pop
jno
sub
lea
mov
inc
fisttpll
lods
lahf
sub
dec
adc
out
or
mov
jle
xor
cmpsb
add
in
adc
lock
andl
mov
mov
clc
outsl
sbbb
cmp
ja
mov
das
js
in
jecxz
or
and
jl
jmp
push
aas
xchg
fmuls
mov
cmpsl
xor
les
add
xchg
ret
add
fisttpl
mov
pop
mov
xchg
xor
sbb
fnstcw
imul
mov
aad
xor
enter
or
aam
add
push
jno
push
inc
into
cmpb
inc
pusha
inc
pop
mov
xor
addr16
dec
pop
scas
insl
lret
bound
lods
xor
inc
leave
jp
loop
xchg
jne,pt
cltd
in
mov
scas
inc
add
push
push
mov
in
or
dec
sbb
pop
lea
repz
in
xor
fcmovu
les
inc
dec
es
arpl
push
cli
sub
add
rcll
dec
jge
mov
fildll
rclb
inc
add
mov
fcoml
push
xchg
adc
cmp
fdivrs
in
mov
cld
insl
pop
mov
and
jne
test
mov
vcmpps
inc
pop
insl
mov
mov
sahf
xor
mov
in
jb
cwtl
addr16
fadd
cmpsl
xchg
and
aaa
sub
int3
add
dec
fisubrs
sub
mov
ret
mov
and
mov
cmp
pop
push
in
push
dec
or
out
mov
cmp
add
mov
pop
addl
add
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
ja
pushl
push
push
push
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
cmpl
jg
pushl
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
mov
decl
shl
not
mov
jmp
out
repz
cmp
pop
and
mov
sahf
adc
sbb
push
fists
lea
jns
mov
sub
dec
or
mov
mov
imul
or
dec
pushw
cwtl
pusha
pop
rorb
ljmp
stos
pop
mov
loope
or
mov
dec
clc
jne
and
dec
scas
mov
nop
add
and
pop
lea
negb
sbb
in
int
mov
inc
xchg
popa
mov
sub
outsl
gs
dec
roll
pop
cld
mov
repnz
popa
jns
in
jge
mov
sarb
jecxz
xchg
dec
mov
or
add
insl
cmp
sub
ja
jmp
jge
cltd
push
pop
xchg
adc
aaa
xor
int3
hlt
ret
leave
lcall
bnd
out
pop
add
ljmp
xchg
lock
insb
shll
std
gs
or
das
mov
sbb
shr
and
or
cmpsl
push
jae
inc
dec
add
mov
cmp
mov
sub
cmp
repnz
xor
xchg
in
fisttpl
push
push
aad
lds
adc
pop
mov
repnz
repz
add
pusha
push
sqrtps
addr16
or
or
add
adc
insl
out
xor
and
sub
pusha
dec
lcall
jp
add
xor
adc
xchg
push
es
lcall
pop
into
sbb
cli
inc
in
test
lret
xchg
adc
cmpsl
mov
mov
es
mov
and
clc
rcr
dec
xchg
mov
out
add
xchg
xor
or
fwait
fwait
adc
xlat
push
clc
rclb
push
push
sub
jno
bndldx
add
cmp
fld
scas
jl
cmpsl
mov
xor
jg
xor
push
lods
addr16
pop
adc
not
cmp
add
push
movsb
dec
mov
fildll
xchg
inc
fbld
aad
cmpb
arpl
adc
jne
divb
pop
repz
cltd
inc
repnz
add
jbe
mov
dec
and
mov
mov
push
sti
inc
add
jbe
pop
in
rolb
mov
mov
mov
mov
xchg
ja
cmpsl
push
mov
xor
sbb
jecxz
cld
push
andb
lret
jae
cmp
xor
shlb
sub
ret
mov
dec
pusha
js
mov
fcmovnbe
sub
lds
fldenv
mov
add
fnsave
cmp
test
xchg
dec
loop
je
mov
push
dec
inc
mov
mov
pop
data16
jecxz
call
out
sahf
inc
pop
ds
add
fsubrs
pushf
aas
pop
sahf
push
push
jb
lret
jae
pop
leave
mov
add
xchg
mov
addr16
cltd
sahf
xchg
inc
jmp
xchg
sub
or
lret
mov
add
pop
lret
cmc
add
ljmp
sub
xor
jmp
mov
out
push
pop
jb
mov
mov
rolb
lock
inc
and
mov
pushf
hlt
ljmp
paddusw
in
mov
jns
sbb
in
mov
fisttps
mov
inc
add
inc
add
push
call
mov
not
mov
cmpl
mov
movl
movzwl
jmp
mov
cmpl
jb
pushl
call
mov
add
movl
adc
mov
sbb
mov
xor
and
xor
mov
xor
mov
addl
sub
mov
mov
and
mov
orl
lea
mov
mov
sbbl
or
addl
jmp
nop
movsb
call
int
cmpl
mov
sahf
adc
sbb
out
mov
notb
sbb
mov
xchg
inc
xor
ja
cli
ds
fcoml
test
imul
dec
add
andb
bound
cld
push
xchg
sub
pop
xchg
cmpsb
add
xor
jo
cmc
xlat
ja
mov
sti
jno
and
push
out
dec
fisttps
inc
mov
repnz
xchg
into
stos
mov
into
ret
jae
jns
andb
add
shlb
fistpll
lods
dec
js
addl
ljmp
sti
aas
ja
in
mov
mov
icebp
mov
inc
aad
jae
push
jbe
dec
xchg
xchg
xor
jge
pop
inc
pop
out
outsb
push
jb
adc
dec
dec
push
imul
xchg
and
in
ja
pop
sub
lahf
adc
xor
popf
dec
jmp
adc
es
std
adc
inc
jp
add
popa
push
pop
aad
mov
or
jg
sub
cmp
and
xor
aas
fistps
mov
decl
sub
pop
dec
shll
fs
scas
mov
je
xlat
cmc
fucomp
test
pop
inc
lock
negb
test
lods
mov
clc
pop
inc
add
push
movsl
sti
stos
ret
stos
test
cltd
and
mov
fs
inc
xchg
in
fistpl
ja
aaa
clc
adc
idivl
mov
and
bound
leave
insb
mov
xor
mov
sub
pop
loopne
call
test
sahf
negl
mov
fiadds
in
data16
xchg
out
je
mov
movsl
ljmp
lcall
stos
imul
xchg
sub
nop
bound
cltd
ljmp
xchg
sbb
pop
push
xchg
push
cmp
inc
icebp
cltd
mov
sbbl
jmp
jle
or
pop
sub
sub
jecxz
ret
cmp
pop
out
and
pop
cs
push
adc
ficomps
loopne
daa
icebp
ja
mov
test
cld
cmp
cld
shrb
out
mov
clc
in
and
cltd
push
test
or
daa
xchg
xor
aam
outsb
or
outsl
out
daa
inc
imul
xor
adc
pop
jb
lods
ss
sbb
mov
mov
test
fcmovbe
jo
sub
adc
xlat
arpl
stos
sub
jno
test
into
outsl
xchg
push
push
js
dec
sub
push
dec
popf
ror
lods
push
push
das
and
xor
fyl2xp1
fcmove
stos
test
adc
jo
pop
loop
stc
add
add
es
cmp
cmc
mov
push
mov
enter
push
movl
lret
adcb
lds
dec
mov
inc
les
pushf
mov
adc
cwtl
add
movsb
pop
loop
push
cli
push
or
adc
ror
adc
mov
in
idivb
test
or
add
jle
fcoml
push
jne
fimull
aam
mov
andl
in
cmpsb
mov
std
push
jmp
popa
shll
std
mov
scas
jecxz
cmpsl
jno
xor
lahf
testl
rorb
stc
xchg
and
loopne
mov
cmp
mov
inc
adc
out
int
jnp
adc
int3
inc
or
movsl
loopne
daa
or
scas
sbb
fisttpll
fstpl
fimull
and
add
mov
or
xor
cmp
movl
jne
mov
cmpl
mov
movl
mov
jmp
movl
not
cmpl
jl
pushl
pushl
call
movl
incl
or
add
sub
add
sbb
mov
sbb
shrd
shr
mov
xor
mov
negl
shl
xor
xor
sbbl
or
jmp
and
push
repnz
inc
sarb
jo
add
stos
cmp
adc
sbb
dec
daa
fildl
fcompl
or
imul
xchg
mov
or
add
pop
popa
sti
mov
or
cmpsl
addl
in
stc
icebp
mov
push
pop
jo
mov
and
sahf
inc
and
aam
push
push
add
cmpsl
or
movb
stc
shll
cmc
inc
test
inc
aas
loopne
adc
sbb
sub
repnz
xchg
mov
mov
and
sar
mov
jg
push
mov
daa
jno
push
fldl
mov
cs
and
add
lret
jl
aas
insb
lds
push
stos
es
push
jp
ret
inc
fdivr
ffree
add
lea
subb
fs
ret
aas
add
test
xchg
mov
push
sbb
cs
or
pop
fdivl
mov
sub
pop
stos
lods
pop
ja
push
jo
or
push
jle
repnz
pop
fxch
sti
fwait
jle
insb
jno
cmp
call
pop
fstpt
sti
mov
push
int3
stos
es
fmulp
inc
jno
lock
out
clc
or
add
sahf
mov
pusha
icebp
mov
mov
test
mov
dec
mov
sub
fimuls
sahf
inc
sub
cmpsb
jmp
jl
dec
dec
shlb
push
jl
mov
dec
les
popf
mov
enter
cld
ret
pop
add
pop
mov
sahf
movb
and
scas
xchg
stc
mov
add
mov
lds
fldenv
jbe
rcrl
pop
out
xchg
js
jmp
aam
es
jge
sub
cmpsl
xorb
jne
cmp
push
test
out
test
test
enter
pushf
outsl
and
lds
pop
push
fmuls
pusha
sti
jo
mov
adc
in
in
and
cmp
mov
sbb
jbe
lret
dec
les
outsb
mov
fucomip
xchg
stos
jns
pop
dec
shll
testb
adc
jg
sbb
push
inc
dec
scas
xchg
lds
xor
mov
into
lret
push
adc
push
or
mov
sbb
stos
pop
xor
lds
sub
nop
cmp
mov
sarl
mov
or
mov
dec
fdivl
cld
nop
push
arpl
movsb
testl
pusha
lods
mov
cli
and
bound
ret
push
sub
cmp
lods
aad
iret
and
and
loop
in
dec
xchg
aad
and
or
jl
jecxz
xchg
ficompl
mov
test
mul
roll
out
stos
mov
jle
mov
sbb
mov
out
jmp
sub
pop
jne
xor
sub
xorb
push
xchg
sbb
cmpsl
test
in
enter
ret
lcall
adc
js
adc
jne
mov
and
fcom
jne
dec
test
inc
mov
std
ret
pop
mov
es
mov
mov
ljmp
mov
ret
cmp
cwtl
or
icebp
je
hlt
add
aam
cmpsl
xlat
fs
push
enter
dec
in
cmp
movl
jne
jmp
sbb
fldt
sbb
or
adc
sbb
sti
mov
sbb
xchg
cwtl
mov
or
pop
mov
xchg
sbb
cltd
je
mov
jge
in
lret
test
aam
jbe
xlat
mov
ljmp
lods
out
aas
mov
add
push
test
add
lcall
das
jl,pn
inc
add
jl
jne
pop
or
int3
call
xlat
jmp
xlat
fmul
cmp
cmc
sbb
punpcklbw
mov
mov
je
dec
pop
sub
subb
and
int3
or
out
pushf
dec
rorb
call
mov
loope
in
and
bound
insb
mov
mov
inc
or
sarb
dec
xchg
mov
sbb
sub
rcl
out
popa
push
rolb
adc
push
dec
imul
xchg
inc
and
stc
fucomi
adc
loope
adc
ja
xor
je
shl
mov
jl
enter
jg
dec
push
push
jle
cmp
dec
sub
std
jns
stos
arpl
pop
xor
inc
stc
popa
gs
aam
fcoml
jle
or
in
aas
andl
lods
mov
xor
sub
lds
sahf
fidivrs
aam
mov
in
mov
cmp
inc
or
enter
inc
call
pop
fcomi
sub
cli
icebp
pop
xchg
mov
sub
add
roll
xchg
add
sub
mov
out
mov
push
gs
lret
test
mov
lret
xchg
mov
mov
adc
jle
dec
sbb
out
divb
push
push
scas
xchg
aaa
push
pop
add
dec
pop
pusha
or
scas
jmp
ds
xchg
dec
clc
movsl
mov
jae
jg
inc
sub
imul
cmpsb
jb
dec
mov
fcomps
lock
mov
test
movsb
rclb
das
arpl
roll
mov
mov
jnp
cmc
ret
xor
xchg
pop
cmpsb
fcomps
cmp
jne
cmp
cwtl
lahf
sbb
std
jmp
movsb
lahf
sti
mov
xor
lods
cmp
cli
cmp
push
shlb
sbb
lcall
ljmp
test
pushf
and
out
nop
adc
fs
aas
rol
daa
into
xchg
mov
xchg
loop
inc
pop
dec
std
inc
push
mov
out
sub
arpl
sub
dec
movsl
mull
push
pop
adc
in
xchg
pop
sahf
cmpsb
add
aas
icebp
or
dec
cli
dec
mov
sbb
fstpl
dec
sub
outsb
das
in
out
mov
push
mov
pinsrw
sbb
nop
cli
push
cwtl
aad
roll
in
sub
push
jp
jae
cmc
jb
clc
fs
test
push
sub
nop
fcoml
movsl
iret
sub
mov
cmp
sbb
jecxz
jb
xchg
xor
dec
push
push
mov
push
mov
cli
fisttpl
into
lret
iret
ja
jbe
jecxz
mov
pop
cmpsl
xchg
mov
mov
mull
loopne
or
lea
arpl
jns
cmp
push
dec
fwait
sbb
or
push
sbb
add
pop
xor
sbb
test
inc
dec
and
jnp
and
jns
sbb
std
repz
mov
lds
ret
mov
cmpl
notl
mov
jmp
not
cmpl
jne
pushl
call
xor
negl
xorl
andl
sbb
or
mov
cmpl
movl
mov
jmp
mov
cmpl
jbe
push
push
call
adcl
sbbl
mov
or
xor
add
adc
mov
xor
orl
mov
mov
and
mov
orl
shrd
mov
adc
mov
xor
adcl
shr
orl
mov
sbbl
xor
orl
or
subl
shl
subl
sub
cmpl
movl
mov
jmp
mov
cmpl
jne
push
call
mov
xor
xor
sub
or
sbb
xorl
xor
sbbl
orl
mov
cmpl
mov
mov
movl
jmp
movl
movl
cmpl
jle
push
call
and
adc
or
add
add
mov
xorl
mov
add
jmp
and
fdivrl
xchg
mov
dec
fistps
sbb
xchg
sub
mov
fbstp
je
inc
jbe
test
adc
loopne
dec
xchg
or
add
mov
push
fildll
rclb
je
jno
daa
mov
hlt
aad
lahf
adc
fsubrp
arpl
sahf
out
xchg
cmp
pop
add
adc
out
inc
cmp
fwait
nop
bound
ret
negl
sub
lret
and
iret
outsl
lods
and
mov
sbb
adc
jg
inc
les
push
mov
mov
negl
mov
gs
mov
lret
mov
enter
mov
adc
add
sub
dec
cmp
add
cwtl
in
jns
pop
mov
push
sbb
outsb
sub
fists
add
stos
push
xchg
es
mov
jns
in
xor
xchg
jp
jbe
jle
jbe
ljmp
sbb
sbb
test
adcb
push
adc
jle
roll
inc
xor
sbb
scas
ljmp
ds
inc
mov
cmp
dec
jnp,pn
out
add
pop
cltd
sahf
dec
push
lcall
ja
ja
xchg
cmp
stos
je
mov
scas
pop
nop
lcall
sbb
pop
cmc
and
fsubl
push
add
inc
push
jp
cmc
ret
pop
xor
nop
sbb
mov
test
push
imul
lea
xor
cli
test
loopne
jp
pusha
pop
dec
lret
sbb
jns
xchg
mov
jnp
or
sbb
call
xchg
test
pop
fs
js
or
rorb
in
push
mov
std
das
scas
fidivrl
push
fimuls
mov
test
gs
add
dec
push
and
mov
lret
les
xor
dec
rep
mov
sbb
push
enter
mov
cmp
cli
mov
aad
or
or
mov
jno
push
push
pop
test
and
es
push
sub
in
inc
adc
jo
test
cmp
int3
shrl
lds
or
insb
xor
jge
cmp
cmc
xchg
cmpsb
fdivl
aaa
sub
adc
mov
xchg
iret
hlt
addr16
push
sbb
andb
sub
cmpsl
mov
pop
mov
inc
inc
loope
aad
mov
or
clc
mov
adc
inc
push
jp
out
jo
popa
cmp
cmp
push
sub
mov
int
fdivl
daa
aad
pusha
cli
repz
xchg
push
fisttpll
test
mov
jmp
fwait
or
aam
hlt
dec
jge
sbb
jo
mov
mov
outsb
pop
mov
pop
in
push
shll
mov
or
repz
mov
mov
pop
mov
push
dec
out
sbb
movsl
cmp
iret
pop
cmp
or
sti
mov
mov
stos
push
lods
or
mov
xor
test
jge
das
mov
psubb
scas
hlt
sub
scas
sub
mov
movsb
or
decb
pop
adc
xchg
push
xchg
ljmp
sub
ja
jmp
sti
cwtl
add
jmp
pop
push
ret
sub
cmp
cmp
test
fldcw
ret
inc
aad
push
add
pop
insl
add
sbb
mov
mov
mov
mov
mov
add
shrd
sub
shr
and
mov
andl
jmp
subl
and
sbb
mov
sahf
adc
sbb
jne
test
stos
adc
outsl
pop
repz
js
sahf
adc
mov
aad
scas
fdivl
outsb
cltd
ss
test
shll
cwtl
fwait
aam
xchg
jg
movhps
pop
pop
mov
jp
adc
cwtl
cmp
sbb
xchg
repnz
test
fwait
adc
inc
lods
jo
out
mov
mov
dec
jg
or
push
sahf
pop
and
dec
and
into
sbb
orb
fdivr
add
jnp
cwtl
imul
sbbb
sbb
add
inc
cmp
fistps
divl
rorb
int
jne
cli
mov
dec
push
push
inc
lea
roll
or
das
repnz
inc
cmp
pop
pop
nop
xchg
push
aam
jl
mov
or
cmc
sub
scas
dec
int3
add
dec
inc
cs
imul
ret
mov
dec
xchg
mov
jg
pop
add
push
or
cmc
xor
fwait
sub
push
add
mov
mov
jle
dec
jmp
add
add
mov
xchg
cwtl
js
or
aaa
cld
out
aad
orb
jne
hlt
inc
aad
sti
cmp
jge
sarb
xchg
adc
mov
cmp
dec
cmc
mov
ljmp
dec
xchg
xchg
inc
gs
test
and
je
pop
fldl
xor
pop
xor
inc
mov
dec
fsubs
fnsave
pop
xor
and
or
xor
cmpsb
in
adc
ret
inc
ja
sbb
mov
sub
fdivrp
stos
addb
add
fbstp
in
or
nop
ret
xor
add
test
cwtl
ljmp
stc
hlt
ds
sahf
das
addl
pop
mov
sbb
cmpsb
xor
inc
push
add
sub
push
or
mov
xor
movb
ror
imul
pop
push
movsl
enter
xchg
pop
roll
cwtl
mov
sarl
scas
adc
sarb
xor
cmpsl
add
mov
movsb
scas
pop
out
andb
push
call
pop
test
je
insb
adc
pop
es
push
push
adc
sub
mov
scas
or
insb
jmp
dec
cmp
push
popa
icebp
xor
adc
std
jno
fwait
push
insl
call
jne
push
addps
adc
pop
das
cmc
mov
xchg
inc
aaa
add
mov
iret
in
test
push
and
fnstenv
inc
push
nop
fwait
ss
fidivrl
lock
dec
jbe
push
inc
mov
bound
mov
xchg
push
jge
fiadds
insl
nop
push
xchg
or
int3
cmpsb
dec
or
push
jno
aad
xlat
pmaxsw
or
mov
fldt
sbb
in
push
push
aaa
adc
repz
xlat
mov
rolb
lods
mov
sbb
in
int
cmpl
je
pop
add
and
pop
dec
adc
adc
pushf
lcallw
cmp
xchg
aas
and
jge
or
mov
mov
int
in
dec
fdivp
xor
adc
mov
fstl
or
outsb
icebp
enter
in
adc
neg
stc
push
das
decb
push
aaa
cmc
cmp
jmp
and
xor
or
shl
and
xor
mov
and
or
mov
movzbl
sbb
mov
jmp
xchg
xchg
lcall
stos
xchg
adc
mov
iret
sbb
sahf
adc
sbb
iret
outsb
add
add
mov
add
mov
xor
adc
lods
fstps
pop
push
addl
mov
pop
sbb
pop
push
xlat
stc
fildll
push
or
fistps
mov
fiaddl
mov
adc
mov
push
push
je
xchg
hlt
fisubrs
dec
insl
jge
mov
push
mov
andb
fisubs
dec
leave
xor
sbb
pusha
stc
scas
mov
fisubrs
out
cmp
jmp
insb
ss
add
fcomi
xchg
mov
mov
push
xchg
imul
pop
mov
cs
mov
mov
or
adc
in
mov
dec
lahf
xchg
lret
xchg
or
pusha
jmp
and
jne
cmp
xchg
jnp
push
mov
mov
imul
cld
das
push
push
inc
push
push
leave
pop
bswap
into
cmp
or
jmp
xor
in
adc
dec
incl
jmp
adc
jle
and
test
loop
push
mov
outsb
and
mov
sahf
sub
mov
mov
test
adc
mov
outsb
sbb
ds
pushf
sbb
jae
and
xor
mov
inc
jp
dec
fistps
inc
int
mov
stos
and
push
sub
les
imul
fbld
dec
push
fisttps
mov
loope
push
sub
cli
enter
sbb
hlt
mov
mov
cmp
and
loop
mov
lods
clc
cmp
inc
fcoms
sub
push
ljmp
add
mov
push
test
imul
in
movsl
mov
mov
rorb
scas
cmp
leave
scas
xchg
push
add
fildll
jp
add
dec
mov
addb
pop
loop
sub
cwtl
pop
add
ja
aas
test
stos
mov
ss
sbb
movb
and
aad
aam
mov
jbe
cs
testl
add
push
fcompp
rcll
stc
mov
pop
loope
xchg
aad
cmpsb
lods
xlat
sub
out
in
in
lock
or
xor
xchg
shrb
je
and
gs
lods
pop
xchg
add
xchg
loopne
mov
or
pop
xchg
sbb
jnp
movsb
stc
movsl
faddl
fsubp
cmp
pusha
push
mov
xchg
sbb
in
std
push
mov
mov
mov
sub
sarl
pop
imul
fs
loop
test
xor
push
jecxz
sti
inc
lahf
jnp
lcall
aad
adc
imul
lcall
lcall
jno
and
pop
push
shrl
or
or
xor
sbb
mov
mov
mov
push
push
test
daa
lahf
lahf
sub
pop
add
sub
cmp
cmp
adc
push
cmpsl
stos
pop
mov
xor
xor
imulb
sbb
pop
mov
pushw
xchg
push
or
cmp
inc
mov
and
cmp
loopne
ret
out
shlb
mov
lods
popf
ror
add
lcall
cmp
xlat
shrd
orl
shr
mov
or
mov
jmp
add
lea
fcompl
pop
or
mov
fcmovnb
sbb
sahf
adc
sbb
out
xchg
ficomps
subl
xor
push
rcl
jmp
enter
mov
gs
pusha
rclb
push
sets
shrl
push
or
lods
xchg
fwait
sub
insl
stos
cmp
push
sbb
push
pop
push
xchg
repz
mov
push
daa
sbbl
lahf
popa
mov
xchg
arpl
ret
hlt
mov
dec
mov
dec
jecxz
sbb
lea
inc
pop
jmp
push
or
addr16
jns
shll
inc
es
pusha
push
je
je
push
icebp
mov
fstpl
mov
gs
inc
dec
fsubs
nop
mov
cmp
inc
arpl
mov
stos
leave
add
push
sub
ret
adc
pop
jae
jp
inc
xor
or
popa
and
sbb
rol
lods
repnz
xchg
lock
sub
idivl
mov
add
push
int3
test
mov
jecxz
push
xlat
ss
add
sub
std
dec
iret
cmpl
in
push
push
out
xor
push
sbb
or
adc
add
icebp
xchg
test
mov
or
test
outsl
in
jmp
and
mov
dec
int
popa
std
mov
mov
stos
mov
test
add
mov
mov
pop
cmp
cmp
or
stos
push
fnstcw
and
xchg
filds
dec
jnp
rcrl
lcall
outsb
pop
inc
leave
ljmp
jnp
add
and
inc
outsl
sahf
shlb
lock
loope
js
leave
jg
inc
push
aas
shll
sbb
sub
aaa
lods
push
mov
test
mov
xor
sub
dec
mov
sbb
fldln2
nop
repnz
incl
imul
pop
mov
movsb
fstpl
and
add
addl
daa
sbb
lea
aam
or
aaa
int
sti
lahf
cmp
push
test
cmovbe
inc
aaa
sbb
pop
clc
dec
fcmovu
mov
fbld
shll
push
out
stos
out
or
mov
jl
js
mov
mov
bound
pop
jae
sahf
clc
ror
dec
dec
in
in
lcall
cmp
out
mov
jbe
mov
dec
xor
inc
test
in
push
clc
shrl
xlat
pop
pop
push
nop
mov
mov
clc
cmpsb
push
js
stos
mov
cwtl
outsl
outsb
mov
mov
into
push
and
xchg
or
push
dec
inc
nop
inc
cltd
icebp
push
mov
in
enter
dec
cmp
insb
xchg
push
fwait
adc
jecxz
mov
push
xchg
scas
stos
pusha
mov
inc
adc
jne
out
das
mov
in
sarb
hlt
push
rcrl
addr16
hlt
stos
repz
pop
lcall
movsb
adc
mov
mov
pop
fidivrl
cmp
jae
adc
and
sbb
sub
stc
push
dec
jns
adc
sbb
sti
popa
mov
cs
out
lock
add
fldt
out
sbb
mov
sarb
or
cmp
ficomps
dec
pop
sub
xchg
sbb
push
notb
inc
fisttps
aaa
sbb
add
jge
addl
xor
jmp
scas
ds
and
sbb
fsubrp
push
stos
sub
jl
rcrl
sahf
adc
sbb
into
mov
pop
lock
pop
sbb
out
inc
dec
js
jns
sub
xchg
or
jo
add
movsl
jb
and
jmp
outsb
xchg
lods
cwtl
adc
pop
stos
lret
push
jbe
jp
cmpsl
int3
or
or
sahf
mov
fbstp
cmc
out
mov
mov
mov
mov
loopne
push
dec
cmp
mov
icebp
fbstp
mov
loopne
inc
mov
jmp
subb
sbb
cmp
xchg
lock
add
and
add
aam
inc
cmp
sbb
mov
cmp
pop
cmp
gs
imull
sub
add
cli
xchg
pop
push
add
std
adc
xor
cmpsl
movsb
mov
loopne
cmpl
mov
mov
fs
dec
cli
jno
inc
in
fnstenv
lahf
stos
mov
ljmp
xor
mov
push
mov
push
ds
mov
jo
jb
xchg
cmp
mov
test
adc
adc
cmp
mov
xchg
jnp
xchg
dec
loop
mov
adc
ds
inc
cmp
xchg
and
mov
dec
dec
jmp
xor
mov
bound
or
mov
push
add
and
adc
rcr
add
imull
sahf
push
jg
mov
or
dec
outsb
mov
pop
aas
adc
and
mov
push
sbb
mov
push
inc
xchg
fs
mov
std
arpl
or
je
add
sub
xchg
jle
sbb
jo
and
cmp
repz
xor
xchg
or
jp
pop
dec
dec
pop
pop
mov
xor
bound
leave
jecxz
xor
div
loop
sbb
and
pop
popf
or
aad
aaa
adc
inc
mul
adc
in
jp
jmp
fs
repnz
out
lods
xor
mov
cmp
cmc
outsb
jns
pop
cmp
and
fdivrl
mov
lds
aad
adc
sbb
and
mov
shll
dec
xchg
pushf
sub
xor
sub
sbb
sbb
cmc
cmp
lea
and
cmpsl
je
or
stc
je
gs
adc
xchg
sbb
dec
xchg
fisttpl
ss
jo
jp
movsb
or
stos
push
fdivrp
fcomps
mov
mov
pop
imul
cld
imul
fadds
cs
jg
adc
push
xor
leave
add
sbb
mov
aas
insl
push
jp
dec
std
inc
stos
xchg
inc
rcrb
adc
push
cmpsl
imul
repz
insl
not
jmp
xchg
mov
xchg
or
push
in
add
sbb
xchg
divl
popa
repnz
cmc
and
fwait
cwtl
cmpxchg
xchg
movd
mov
repnz
addr16
mov
jae
scas
fiadds
push
push
gs
inc
push
movsb
popf
fisubs
add
add
fmull
and
xchg
xor
inc
and
pop
cmp
add
xor
repz
aad
insl
pop
int3
ret
roll
add
mov
jb
push
push
and
in
jns
pop
pop
arpl
mov
daa
push
inc
xchg
mov
jge
push
in
sbb
push
je
add
loope
lea
adc
mov
or
mov
movl
shrd
adcl
shr
cmpl
mov
movl
movl
jmp
mov
movl
cmpl
jg
push
pushl
call
and
sub
orl
adcl
mov
mov
add
xor
xor
xor
mov
add
mov
mov
add
mov
sub
mov
xor
mov
xor
addl
or
subl
shl
and
imul
mov
mov
shrd
sbbl
mov
sbbl
mov
adcl
xor
shr
adc
mov
mov
xor
movl
or
adcl
shl
orl
sub
mov
movl
cmp
not
mov
movl
jg
mov
xor
mov
sbbl
shrd
sbbl
mov
mov
xor
orl
shl
xor
andl
or
shr
or
mov
mov
cmpl
mov
mov
not
jmp
movl
cmpl
ja
push
pushl
push
call
orl
add
adc
xorl
sbb
cmpl
movl
mov
mov
jmp
mov
cmpl
jge
pushl
pushl
call
incl
mov
mov
sub
imul
xorl
mov
mov
sub
mov
mov
sub
and
mov
subl
mov
shrd
shr
mov
xor
xor
sub
mov
inc
mov
addl
xor
xor
xorl
or
xorl
shl
andl
imul
addl
sub
jmp
addl
mov
cmpl
movl
mov
movl
jmp
movl
movl
cmpl
jae
push
push
call
add
adc
add
andl
dec
xor
or
add
mov
add
mov
xorl
shrd
mov
cmpl
mov
mov
jmp
movl
movl
cmpl
jb
push
push
call
not
adc
neg
mov
mov
sub
mov
xor
or
sbb
cmpl
mov
notl
jmp
movl
cmpl
jb
push
pushl
pushl
push
pushl
call
sub
subl
orl
adc
sub
movl
mov
xor
shl
adcl
xor
xorl
or
shr
mov
sub
mov
jmp
xchg
stc
xchg
out
insb
push
jbe
push
stos
pop
test
sbb
sahf
adc
sbb
and
sbb
dec
inc
std
mov
shrb
inc
inc
in
jl
xchg
das
decb
ds
das
int
pop
fmulp
lds
or
xor
lea
adc
ret
push
sahf
mov
or
push
call
cmp
adc
xchg
out
or
mov
jnp
fsubl
sbbb
push
pop
mov
fbstp
cmp
stos
sarl
outsb
push
sti
test
pop
mov
jmp
scas
jecxz
sbb
movq
dec
les
in
adc
xchg
push
cmpsl
fsub
cmp
pop
pop
sbb
addb
sbb
adc
sub
or
mov
rcrl
mov
lret
push
pusha
xor
and
cmp
xchg
div
fdivp
pop
popa
addr16
mov
mov
ss
jb
push
add
mov
pop
shlb
jg
and
adc
xchg
cs
sarl
dec
pop
pop
adc
push
mov
adc
cmp
js
cs
cmc
push
jecxz
in
and
inc
movsb
fwait
nopl
sbb
ss
fcomps
call
sub
xchg
rcrl
scas
test
leave
mov
sub
enter
cld
dec
insl
sbb
mov
jnp
mov
add
sub
incl
leave
push
call
cmc
fldt
fistpll
clc
mov
dec
xchg
cmp
dec
mov
addr16
add
xchg
shl
xor
enter
adc
shll
cs
negl
popl
cmp
cmp
lods
jns
ret
lahf
movsb
out
mov
sarl
dec
or
lcall
sbb
push
icebp
push
dec
xchg
pop
lret
fucomip
cmpsb
cs
punpckhdq
arpl
shlb
fisttpl
push
sub
cs
arpl
lds
int
adc
adc
mov
aad
push
jp
pushf
cmp
xor
imul
push
call
cmpsb
push
push
pop
mov
ja
cltd
out
dec
wbinvd
dec
cmp
inc
in
or
push
insb
sbb
cs
cmp
mov
push
sarb
inc
cmpb
add
sub
bnd
push
jg
or
hlt
insb
or
xor
mov
cs
out
aas
into
jae
jecxz
and
into
mull
mov
jp
xor
dec
cwtl
jmp
mov
dec
adc
sbb
mov
jle
inc
es
jg
fisubl
sbb
xchg
aaa
add
xchg
das
mov
mov
es
comiss
mov
fadds
xor
bound
fwait
jg
bound
sbb
dec
adc
scas
add
sub
lea
inc
daa
adc
hlt
rclb
das
dec
xchg
aad
and
jnp
cld
xor
or
mov
std
or
adc
int
gs
inc
pop
mov
mov
ja
sbb
insl
xor
sbb
sub
test
mov
movsb
pushf
arpl
and
fisubl
in
dec
pop
add
xchg
or
mov
push
and
sahf
fbld
insb
ja
jne
lret
add
andb
roll
mov
dec
stos
pop
aam
cmpsb
mov
std
jne
gs
fistpl
sbb
mov
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
jb
push
call
adc
orl
negl
sub
sub
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
jmp
ret
scas
sar
fcmovb
scas
mov
jl
push
daa
stos
insl
mov
sbb
notb
in
push
lods
fisubrs
dec
pop
pop
mov
or
ljmp
mov
and
and
push
fmull
push
inc
scas
data16
sbb
test
cltd
adc
xchg
sub
ds
xchg
sarb
mov
xlat
jne
arpl
jnp
push
adc
pop
popa
xchg
fwait
add
mov
sub
in
dec
pop
jg
push
cmpsl
cmp
orb
or
faddp
call
fisttps
add
cmp
mov
adc
add
jecxz
sbb
lret
addr16
adc
push
fnstsw
xor
xor
aas
faddp
imul
cltd
aaa
sarb
pop
mov
in
popa
std
rcrb
sub
movsl
mov
mov
sub
dec
push
lea
jp
and
add
push
test
aaa
xchg
xchg
dec
cmp
mov
inc
lcall
clc
popf
push
test
movsb
inc
shrb
out
jp
adc
pop
dec
xchg
adc
or
aas
rorb
mov
lock
sbb
mov
and
dec
inc
pop
adc
pop
mov
lds
pop
cmp
pop
out
dec
jg
or
or
mov
fnstcw
int3
roll
add
lcall
xchg
add
sub
sub
mov
push
test
xchg
cmp
mov
out
add
add
divb
sub
test
hlt
and
add
jmp
or
stos
in
mov
shlb
in
dec
pop
dec
in
insl
mov
jnp
sbb
add
push
add
mov
movsl
inc
inc
dec
icebp
shll
fsubrl
mov
cs
inc
int
inc
test
je
or
fwait
xor
adc
xor
xlat
aaa
dec
dec
cmp
ret
add
nop
pop
nop
stos
ss
pop
pushf
fistpl
xor
stos
movsb
adc
sbb
rclb
push
and
mov
aam
shrl
ss
cmp
push
jb
mov
add
stos
mov
mov
loop
mov
mov
mov
enter
dec
cmp
dec
sub
ljmp
jo
and
fdivs
jmp
ss
int3
mov
pop
je
test
pushf
mov
sahf
push
inc
and
insl
fdivr
push
add
jnp
insb
pop
adc
sbb
sahf
add
or
or
ja
dec
inc
cmp
faddl
lods
movsl
mov
push
jmp
ds
repz
mov
dec
mov
sti
lods
push
repz
mov
mov
aad
pusha
imul
in
inc
shlb
icebp
std
int3
lret
loopne
jns
add
dec
sahf
push
pop
xchg
es
mov
imul
cmpsb
mov
hlt
sbb
cmp
adc
add
pop
cld
xor
fs
test
inc
or
dec
dec
in
lock
cmp
add
jge
and
icebp
in
push
dec
mov
loop
add
push
push
push
push
fucomip
inc
in
and
mov
mov
movsb
xlat
test
notl
fwait
sub
mov
hlt
inc
icebp
lds
aaa
js
push
jl
loopne
out
imul
inc
aam
inc
loopne
movsl
jns
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
jmp
cmp
lock
shll
mov
stos
repnz
sbb
xorl
cmp
daa
mov
loope
lds
push
mov
mov
rolb
pop
jg
mov
mov
mov
iret
mov
or
repz
addr16
xor
sbb
mov
inc
pop
jl
pushf
movsb
mov
mov
testb
inc
adcl
adc
mov
imul
pop
adc
loopne
mov
dec
add
js
inc
bound
inc
mov
cmp
stc
lods
dec
fistps
pop
js
imul
in
pop
add
enter
loope
inc
loope
adc
mov
nop
imull
mov
push
push
cs
dec
push
and
ja
lea
cmc
loop
xor
cwtl
jns
cmpsl
subb
scas
ja
ljmp
mov
pop
push
xor
add
ds
adc
cmpsb
popf
ret
test
push
sarb
add
xchg
jl
rcl
fsubp
jbe
mov
cmp
sub
push
lahf
out
mov
movsl
sub
push
out
xchg
xrelease
fmul
adc
inc
outsb
ret
out
into
xor
cmc
xor
cmp
shrl
dec
dec
inc
lock
cmp
add
sbb
push
mov
inc
cmp
adc
sarl
pop
in
insl
arpl
mov
jnp
inc
bound
jne
xchg
push
push
xor
sahf
push
cwtl
lahf
ds
cmc
and
ret
or
push
repnz
sbb
sub
push
in
lret
lds
cmc
inc
rcrl
loop
jg
mov
xor
push
push
push
adc
xchg
mov
mov
sub
mov
stc
fwait
dec
inc
ja
enter
aam
sub
jge
cs
adc
jns
lahf
in
fstps
cmp
sub
outsl
sub
sbb
push
mov
dec
lock
pop
ljmp
cld
mov
inc
cmp
call
mov
mov
jmp
fisubrs
fnsave
pop
rcll
xchg
icebp
jns
icebp
std
mov
mov
xor
mov
cli
call
jns
sbb
jns
cmc
mov
leave
fs
popa
jnp
aad
cmp
xchg
imul
stc
int3
xchg
cld
adc
adc
test
in
inc
pop
loopne
add
arpl
faddp
inc
mov
icebp
xchg
inc
in
shll
mov
lods
fdivs
jg
cmpsb
nop
xchg
imul
adc
sbb
aad
sbb
jg
data16
fsubs
test
lods
cmpb
pop
mov
subl
imul
xor
inc
adc
imul
das
sbb
xchg
pusha
arpl
mov
jmp
and
lret
mov
dec
pop
or
dec
pop
push
dec
add
das
lock
popf
jecxz
fldenv
loopne
push
fs
arpl
cld
fisubrl
out
in
jne
push
mov
push
mov
lods
sub
xchg
push
shl
mov
add
mov
jnp
dec
fimuls
mov
cmp
mov
test
es
mov
insb
dec
mov
fistps
xor
pop
stos
outsl
mov
add
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
jmp
sarl
mov
lds
stos
push
push
pop
jo
mov
sbb
iret
divb
cs
xchg
sbb
push
pop
repz
jae
add
clc
add
mov
shrl
sub
inc
daa
or
dec
xchg
jne
ljmp
and
mov
and
or
ljmp
adc
sub
push
mov
xlat
xchg
pop
fldl
mov
cs
pop
add
arpl
mov
cmpb
stos
sub
and
sbb
mov
lods
cmc
fidivl
pop
addr16
out
sbbl
ss
loop
cmp
xchg
mov
mov
sbb
mov
pusha
ss
pop
das
inc
push
push
sub
repz
into
xor
inc
aad
test
cmp
lret
sbb
cmp
mov
stc
cmp
adc
push
mov
xchg
or
enter
add
cmp
fdivrl
xchg
data16
push
scas
sti
add
and
mov
sub
icebp
lret
cmp
add
arpl
xchg
or
int
cmpsb
pop
nop
shll
lret
sbb
push
bound
idivl
mov
inc
cld
xchg
jecxz
cmp
sbb
cmp
in
addr16
mov
xchg
pop
jo
shlb
xchg
out
mov
addr16
fstl
popa
inc
or
out
mov
int
cmpsl
test
pop
jo
lret
ss
jo
mov
js
dec
mov
mov
push
sahf
jb
mov
fsubs
shlb
rcr
mov
mov
ret
sti
aam
aas
jno
push
in
fildll
or
or
clc
pusha
lret
sti
jbe
pop
xor
mov
cmpsb
inc
dec
dec
jle
lods
inc
xor
lcall
ret
mov
pop
add
aas
add
bound
mov
mov
psadbw
dec
sbb
and
fwait
mov
je
xchg
fwait
adc
fimuls
das
or
cmp
add
mov
sahf
sbb
insb
push
xor
lods
push
cld
nop
imul
fistps
add
mov
inc
clc
loopne
inc
imul
inc
mov
cltd
xchg
cmp
cmp
dec
leave
aaa
in
lods
mov
ss
sbb
sti
inc
adc
rorb
js
ds
and
xchg
push
jb
fwait
adc
into
mov
mov
loop
idivb
add
call
fwait
outsb
xchg
cmp
lods
push
xor
cs
pop
dec
fisubrl
sub
mov
sbb
push
lret
cmp
insl
hlt
in
ret
push
mov
xchg
out
cmpsl
inc
stos
mov
imull
icebp
hlt
inc
jge
lret
xchg
ja
jge
jle
pop
xchg
in
xchg
mov
or
push
inc
adc
es
xchg
bound
andb
enter
adc
leave
sti
or
rcl
sbb
inc
insl
pinsrw
aaa
in
inc
cmpsl
xor
enter
int
push
sub
sub
jmp
pop
cmpsl
fs
inc
insb
or
fadds
std
push
in
lea
lahf
cmp
popa
push
xchg
xchg
jae
xchg
fdivl
xchg
dec
jb
lret
mov
mov
mov
mov
ja
je
xor
sbb
test
inc
xchg
outsb
add
repz
sbb
ret
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
push
sbb
sbb
aas
xor
lcall
sbb
rclb
inc
stc
test
and
cmp
xorb
enter
fidivrs
arpl
or
xchg
mov
push
adc
inc
pop
sbb
pop
rolb
jb
mov
cwtl
movsb
lahf
pushf
mov
xchg
pop
pop
nop
mov
lcall
pop
dec
cmp
js
xchg
js
out
sub
jmp
jae
push
add
dec
lahf
push
cs
pop
add
shrb
loop,pn
pushl
out
insl
fistps
push
loop
test
inc
pop
jnp
out
shlb
add
or
and
out
clc
sbb
adc
hlt
cmp
in
jb
arpl
mov
scas
adc
movb
ljmp
lret
cmp
sub
dec
sbb
push
cmc
add
xchg
std
rclb
lea
or
popa
pop
pop
imul
push
xor
pop
mov
out
adc
cwtl
xor
sub
stos
mov
cmp
lcall
std
jno
lods
sbb
dec
fsubs
rep
out
xchg
xor
outsl
cli
push
movsb
mov
add
mov
push
xor
inc
in
aam
out
jbe
mov
aad
ss
adc
dec
jg
out
mov
das
mov
cmp
add
in
cli
clc
aad
dec
push
test
popf
stos
inc
mov
cmp
adc
sub
push
aaa
mov
andl
pop
xchg
sbb
dec
pushf
mov
js
test
repnz
cli
xchg
add
add
cs
in
jno
ja
lahf
adc
mov
jne
fs
in
std
mov
jo
subl
in
lods
aam
push
inc
andb
lret
xchg
xor
aad
jne
scas
xor
test
shll
sub
testb
xor
sbb
push
add
fldcw
and
gs
sbb
push
xchg
dec
fsub
outsl
lret
or
test
mov
jae
or
and
pop
iret
call
shl
lods
and
bound
in
adc
dec
arpl
in
out
xorb
in
repz
cli
cltd
and
jmp
pusha
aas
mov
mov
arpl
dec
xchg
outsb
lahf
fwait
repnz
cltd
and
lahf
movsb
ss
inc
push
ss
repnz
shld
and
insl
jae
or
das
push
lcall
xor
pop
clc
xchg
ret
xor
addb
add
mov
dec
adc
shll
inc
mov
and
bound
push
mov
sbbl
mov
test
mov
std
xchg
aaa
leave
jb
push
xchg
shrl
add
lret
cli
mov
xchg
inc
dec
repz
xchg
out
xor
sbb
mov
sahf
lock
inc
cmpsl
dec
mov
iret
testl
cmpsb
mov
xchg
mov
inc
xor
push
mov
cmc
loope
pop
sub
lret
nop
hlt
imul
lea
dec
mov
pop
dec
stc
hlt
fidivrl
lcall
lods
jg
sub
inc
pop
jmp
scas
push
sub
pop
inc
jno
mov
add
jge
jae
icebp
popa
adc
and
push
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
arpl
test
ss
scas
addr16
test
sbb
push
dec
mov
xchg
imul
or
iret
aam
mov
ret
es
lods
call
and
fcompl
cmp
addl
add
dec
repnz
push
jp
add
ss
and
or
mov
xor
adc
lds
or
adc
lcall
cmp
out
jae
scas
outsb
xchg
push
out
test
divb
mov
loope
outsb
stc
test
lds
gs
jbe
pop
mov
les
sbb
insl
dec
jns
dec
cmc
mov
daa
scas
fs
scas
push
or
ja
das
mov
movsb
mov
mov
push
stc
xor
int
bound
mov
fistpl
or
or
pop
test
adc
sub
lods
adc
sbb
adc
or
std
test
clc
loop
push
adc
and
nopl
inc
in
fisubl
out
push
out
pop
adc
ficoml
mov
mov
test
xor
movsl
cwtl
sbb
pop
mov
pop
or
fldt
nop
icebp
jmp
sbb
out
insb
scas
xor
inc
repnz
xchg
jmp
pop
scas
sbb
enter
adc
aam
fidivl
mov
xchg
in
mov
pusha
addr16
and
loop
data16
add
or
arpl
test
fldenv
mov
mov
dec
addr16
inc
rcr
fisubs
sub
mov
out
xchg
ja
movsl
andl
lahf
or
lods
xchg
push
adcl
push
push
enter
stos
push
es
fistpl
cmpsl
xlat
popf
dec
adcl
add
pop
dec
ljmp
stos
aaa
das
in
fstpl
daa
dec
mov
dec
xchg
aaa
aas
cmp
int
cld
mov
stc
ficompl
sbb
out
xchg
pop
sahf
jbe
aaa
in
outsb
and
lods
mov
xor
sbb
sbb
pop
mov
outsl
or
lret
mov
lret
pop
jge
jg
cmp
leave
jle
mov
or
imul
push
jne
insl
pop
mov
and
inc
fisttps
lods
mov
icebp
test
fs
movsl
mov
call
jmp
pop
cmp
pop
sbb
add
icebp
pop
adc
xor
movsl
push
mov
test
clc
test
mov
sbb
pop
sarb
repz
stos
daa
cld
lahf
add
in
mov
movsb
inc
cmc
inc
ret
push
movl
int
cmp
dec
movsb
in
jge
cmc
push
fildl
push
jle
dec
test
push
mov
adc
les
or
xchg
imul
xor
ret
adc
adc
xor
fstpl
cmp
cwtl
mov
rolb
stc
and
sub
mov
adc
adc
adc
fnstcw
adc
es
lea
fldt
and
or
enter
adc
shlb
jecxz
scas
scas
out
aaa
jb
sub
sub
out
inc
into
adc
mov
jecxz
fiadds
and
shl
cld
out
pop
mov
out
fmuls
cwtl
and
loopne
out
mov
ret
mov
test
fmull
inc
pop
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
jmp
fcmovnb
int3
xchg
lods
jnp
sbb
push
lods
mov
mov
sbb
jmp
lods
leave
mov
iret
dec
dec
std
gs
popa
jne,pn
push
xor
popf
fs
rorl
inc
data16
sub
and
std
inc
enter
adc
out
call
in
jmp
stos
sub
test
mov
mov
xchg
in
js
inc
je
mov
mov
push
hlt
fcoms
fisttpl
push
mov
lahf
push
mov
clc
cmp
mov
pop
data16
jge
adc
jecxz
sbb
fimuls
negb
lea
daa
lods
imul
inc
push
push
jle
insb
xchg
pop
dec
bound
cmp
in
add
icebp
or
xor
pushf
pop
push
inc
xlat
xor
lods
clc
mov
dec
mov
xor
fldt
aas
mov
mov
scas
pop
aad
bound
fs
sbb
call
insb
mov
or
pop
in
stc
leave
xor
mov
popf
mov
mov
out
xchg
aas
shl
mov
ret
lret
jecxz
jle
fs
leave
loop
fcmovbe
mulb
repz
dec
jmp
push
ror
push
xor
sbb
dec
movsb
imul
pushf
leave
sti
inc
mov
jb
stos
movsl
xor
xchg
and
in
mov
mov
imul
jecxz
nop
jo
add
push
sbb
jns
dec
mov
push
in
aad
xchg
loop
inc
jp
xchg
mov
test
fs
stos
pop
addr16
aaa
add
lods
adc
or
jne
shrl
fcmovnbe
popf
aas
mov
and
leave
imul
xchg
adc
fstpl
and
cmp
add
xor
int
inc
sbb
mov
lock
push
and
fmull
fs
jae
xchg
cmpl
imul
mov
pop
and
cli
mov
inc
and
stos
and
mov
sbb
lahf
adc
add
or
stos
xorb
jge
fstpl
pop
push
cltd
sti
inc
mov
outsl
shlb
add
inc
mov
outsb
call
xchg
arpl
loop
and
sarb
cmp
out
or
stos
ja
cmpl
mov
sub
es
sub
mov
outsb
mov
jmp
out
push
and
test
pusha
fsubs
in
xor
add
and
inc
jle
pushf
inc
daa
or
cmpsb
fldenv
rclb
mov
sbb
adc
rcrb
mov
xor
hlt
movsl
bound
sub
cmp
scas
xor
pusha
dec
xchg
xchg
mov
imul
outsl
clc
dec
aas
stos
mov
fwait
add
int3
mov
cmp
ret
dec
adc
in
dec
lock
add
add
sbb
stos
pop
jmp
cmp
sbb
fdivrl
hlt
mov
aam
jge
mov
sub
or
repz
and
mov
into
mov
out
jbe
inc
xor
push
subl
or
shlb
cmp
ss
decl
scas
mov
cmpsl
push
ret
daa
push
add
sbb
ds
cmp
mov
dec
push
sub
jge
push
arpl
adc
out
add
iret
rcrb
lods
roll
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
jmp
fiaddl
mov
sub
jnp
mov
xchg
xchg
clc
push
test
sbb
loop
sub
add
lods
jg
jp
and
je
std
cmp
and
repz
cmp
loope
sbb
sarl
popa
add
ficompl
sbb
pushf
test
in
xchg
jge
clc
pop
pop
jle
and
and
xchg
mov
push
and
sub
sub
mov
cmp
cmp
ficoml
cmp
insb
lods
arpl
inc
in
test
cltd
jb
xchg
mov
movsb
fistps
pushf
call
sbb
push
push
mov
sbb
jl
or
mov
negl
adc
jnp
jle
adc
into
cmc
sub
mov
dec
dec
adc
jns
mov
adc
dec
cs
jo
push
xor
jg
lods
shll
cld
xor
jmp
inc
add
addr16
cmp
fwait
into
or
xchg
inc
mov
iret
lods
repz
adc
cmp
leave
dec
cmp
in
xchg
stos
fisubl
sbb
jge
xlat
cmp
nopl
jbe
pushf
loop
dec
mov
imul
aam
sar
jecxz
mov
sti
xchg
jle
inc
xor
nop
enter
dec
push
dec
add
ret
neg
jg
mov
pop
jno
fbld
mov
fsubr
shll
push
leave
lret
orb
mov
xchg
xchg
daa
pop
rolb
es
aas
sbb
call
jle
sahf
xchg
sub
jbe
xchg
xchg
std
adc
push
repnz
or
test
das
ds
adc
add
push
inc
repz
pop
cmpsl
xor
into
inc
bound
or
adc
jno
and
xchg
sub
into
pop
jmp
push
or
sbb
lods
test
and
lcall
pop
dec
das
into
push
iret
push
icebp
movl
cmp
shlb
nop
movsl
xchg
and
push
repnz
stos
add
push
push
inc
adc
lods
xchg
pop
dec
add
fcomps
dec
in
jo
push
cmp
xchg
inc
lret
add
in
xchg
jno
lahf
loope
sahf
xchg
inc
stc
popf
dec
inc
mov
lods
movsl
and
push
jmp
xchg
in
pop
push
mov
sub
jns
loop
mov
sbb
enter
test
test
imul
sbb
hlt
dec
mov
dec
mov
mov
sahf
push
fsubr
and
sarl
fnstenv
xchg
push
sbb
fisttps
sarl
pusha
sti
insb
xor
sbb
stc
dec
jecxz
loop
and
shrb
pop
fcoms
cmc
mov
inc
sbb
xchg
imul
aam
cli
les
out
mov
push
pop
orl
mov
xor
mov
push
je
and
pop
or
xor
daa
and
mov
dec
push
mulb
push
jns
rcll
mov
sub
dec
xor
cmc
out
mov
lret
popf
in
mov
bound
push
and
scas
test
jbe
sub
jg
inc
movsb
push
add
xchg
mov
into
mov
scas
adc
sub
sub
push
mov
jg
stos
movsb
fsub
sbb
in
stos
add
mov
sbb
and
sarl
xchg
enter
add
enter
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
jmp
mov
jg
cmp
sbb
or
mov
dec
mov
pop
jge
sbb
lahf
outsb
xor
cmc
xchg
jne
movsl
jl
clc
stos
mov
sub
dec
push
dec
aaa
sbbl
shlb
jns
xlat
nop
outsl
inc
rolb
fstpt
dec
jge
movsl
negl
push
lret
xor
mov
cwtl
jne
dec
int
cmp
aaa
rcrl
fs
push
jnp
int3
adc
insl
fs
sbb
arpl
mov
add
mov
dec
sbb
adc
sbb
inc
popa
sbb
mov
push
negb
test
fwait
and
sbb
and
dec
aad
lret
cwtl
ret
adc
pop
push
test
pop
pop
add
or
mov
lock
adc
out
cs
lret
stc
les
add
inc
pop
adc
cmp
mov
call
gs
insb
pop
aad
dec
lock
mov
pop
ljmp
mov
and
fadds
leave
lret
aas
or
inc
stc
add
jo
out
and
sub
add
cmpsb
inc
cltd
test
outsl
sbb
out
in
mov
lea
mov
sub
std
lods
arpl
cmp
loop
bound
adc
jne
cmpsl
lea
push
lods
and
fstpt
pop
pop
out
xchg
repz
jbe
lret
cli
aam
mov
sub
inc
and
stos
push
cltd
frstor
push
mov
rclb
cmp
inc
int
or
aas
xlat
std
pop
rcl
sbb
push
fstp
mov
stos
adc
xchg
xor
pop
mov
adc
cmovg
in
ud1
loopne
xchg
int
mov
cmc
mov
fwait
das
fadd
xor
into
mov
popf
ja
popa
scas
cs
lock
add
cmp
pop
mov
cmovne
in
jne
xchg
repnz
inc
push
sahf
scas
cwtl
mov
dec
cltd
scas
xlat
mov
cmpsl
dec
mov
sahf
mov
xor
test
fdiv
mov
sub
add
ja
dec
mov
std
pop
cmp
mov
dec
test
mov
movsb
sub
lret
jae
jmp
or
jecxz
fidivs
sbb
and
sbb
cmp
shll
int3
jns
mov
push
push
jg
mov
int
mov
cmpsl
adc
sub
daa
adc
outsl
pop
repz
mov
push
das
outsb
jle
cs
cmc
sti
movl
dec
cwtl
push
leave
das
mov
xchg
dec
mov
lahf
sub
sub
mov
inc
negb
push
pop
cwtl
push
dec
clc
push
call
rolb
push
mov
test
mov
push
mov
add
or
cmp
sbb
xchg
arpl
xchg
lea
repz
dec
mov
dec
cli
movsl
pop
mov
fisubs
pop
xor
inc
mov
mov
mov
addr16
sbb
push
daa
icebp
aaa
xor
lahf
test
stos
cli
leave
popf
pop
je
dec
ds
dec
repnz
pushl
push
inc
xchg
push
hlt
sahf
fildl
cmpsl
fmul
fwait
adc
sbb
popa
movsl
into
shrb
fisttps
lret
cmp
push
ljmp
jmp
add
mov
addr16
xor
mov
fcmovbe
mov
cmp
jge
and
jle
mov
lods
ficompl
xlat
cmp
cwtl
mov
and
xchg
dec
mov
jmp
repnz
jmp
imul
pushf
pop
jle
sub
sbb
sbb
push
and
xor
and
mov
jbe
xlat
lahf
call
call
mull
push
rolb
in
clc
notl
push
ja
notb
add
push
hlt
mov
add
mov
andl
into
adc
cmp
sub
cwtl
xor
and
mov
lret
or
cmp
or
je
jo
push
aam
test
jmp
les
pop
jns
dec
add
fwait
xchg
into
jnp
fdivrl
scas
xchg
add
jmp
dec
or
fstl
xor
loop
fists
xchg
fstl
cld
in
daa
sbb
mov
sbbl
mov
pop
xor
ds
mov
in
mov
loope
mov
and
shrb
inc
sti
xor
test
mov
iret
imul
xchg
jb
mov
mov
call
rcll
out
das
bound
jbe
shlb
dec
xorb
fldcw
shlb
jp
cmc
aas
or
leave
imul
outsb
lods
dec
mov
add
sub
out
sbb
adc
cmp
jo
hlt
lahf
and
loopne
stc
movsb
xchg
mov
xor
and
jo
dec
inc
jle
sub
lods
xlat
push
into
in
jp
imul
loop
mov
jbe
mov
xor
lahf
mov
movsl
and
in
mov
cmp
arpl
jg
lods
dec
fsin
call
inc
data16
sbb
enter
adc
jb
jne
sub
js
in
sub
test
mov
std
ret
xchg
mov
push
jnp
test
xor
add
adc
rolb
mov
fcmovnbe
adc
inc
insb
stos
test
push
outsl
mov
subl
scas
ds
adc
rclb
inc
sub
xchg
das
sub
mov
pop
xchg
fistl
jne
add
fwait
sub
cmp
subl
pop
push
scas
lds
fistps
sbb
adcb
mov
fucompp
push
dec
mov
iret
lods
cmc
jmp
sar
enter
shlb
add
ja
inc
movsb
inc
int
arpl
popa
nop
ds
int
xchg
inc
dec
adc
dec
inc
cwtl
xchg
inc
int
outsl
push
inc
jno
ljmp
cld
int
xchg
loopne
outsb
dec
sahf
sbbl
sbb
loopne
fs
jo
pop
xchg
call
aad
xor
aad
adc
push
xor
popf
jecxz
sbb
fisubrl
dec
mov
mov
pop
mov
scas
xlat
stc
out
scas
lret
orl
dec
addr16
sbb
xor
inc
aad
mov
das
rorl
imul
or
jge
cld
shll
lea
stos
stos
sub
sub
cmp
xor
out
jae
inc
push
ljmp
in
les
cmpsb
xor
add
sbb
hlt
sub
mov
mov
push
inc
inc
dec
fsts
and
int3
jl
jae
scas
jae
xchg
lcall
pop
stos
fiadds
inc
cmc
lret
out
stos
daa
scas
je
xchg
std
pop
sahf
enter
add
inc
sbb
xor
notl
pop
lods
imul
add
loop
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
xor
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
jmp
push
dec
dec
testb
cs
sbb
mov
sahf
adc
sbb
popa
pushf
idivb
dec
sub
cli
repnz
movsl
mov
cli
jge
movsl
ljmp
pop
mov
fwait
gs
sbb
push
paddw
mov
mov
clts
push
add
inc
sbb
addr16
sbb
loopne
add
imul
xchg
push
sub
mov
or
pop
insl
imul
xchg
dec
add
vpsravq
xor
fs
inc
shl
sub
cs
push
mov
push
lock
inc
dec
out
mov
out
adc
pop
arpl
aad
xor
subl
pop
shrl
mov
add
jp
inc
pop
xor
out
into
loop
mov
xor
out
orb
adc
es
arpl
lret
arpl
mov
lods
sbb
xorl
mov
insl
cmp
xchg
mov
dec
call
fsts
adc
cmp
add
test
cld
daa
gs
es
sbb
sub
xlat
outsl
push
sbb
lahf
shlb
mov
sbb
adc
jg
push
fxch
xlat
or
pop
pop
inc
cli
xchg
pop
ds
fnstsw
xor
lds
mov
notl
xchg
and
mov
dec
push
or
pop
mov
clc
jno
cld
arpl
push
loopne
jmp
sbb
sub
lds
mov
xchg
outsl
jno
inc
je
loope
fdivrs
sbb
test
fiadds
or
pop
or
adc
jl
aad
jbe
and
jp
mov
leave
popa
je
shrl
push
sbb
lcall
js
push
ret
lds
lea
xchg
cmp
mov
ret
outsb
mov
jne
negb
inc
out
mov
frstor
sbbl
dec
cmpsl
jp
or
or
jl
mov
push
xor
les
loope
in
movsb
enter
ret
insb
mov
cmp
pop
adcb
scas
insb
xchg
or
test
imul
cwtl
lcall
scas
push
jno
dec
push
pop
push
xchg
pop
out
jbe
or
ljmp
cltd
sbb
stc
inc
adc
insl
std
mov
subb
pop
sbb
or
dec
aas
jns
nop
int
pop
push
inc
ret
mov
adc
insl
ret
subl
xor
xlat
cltd
mov
mov
push
mov
imulb
push
pushf
mov
stos
xor
outsb
and
jecxz
pop
cmp
push
jns
sbb
mov
jg
lods
dec
jo
push
sub
jmp
cld
in
mov
dec
sarb
stc
dec
push
mov
jo
icebp
es
pop
dec
cmp
xchg
out
mov
xchg
push
sbb
mov
pop
xlat
pop
aad
lods
inc
fdivr
lods
divl
sub
repz
lods
movsb
mov
cmp
popf
cmp
test
pop
pusha
jae
nop
out
fwait
bound
fnsave
xchg
sbb
dec
mov
movsb
lea
pushf
out
inc
clc
mov
mov
or
dec
cmc
leave
stc
cld
sbb
and
outsb
inc
sub
lock
bound
pop
pop
or
aaa
mov
aaa
stc
mov
fwait
adc
shll
sbb
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jmp
xchg
hlt
xchg
addr16
in
mov
or
test
sbb
sahf
adc
sbb
rcr
lods
int3
int
xchg
mov
fsubrl
mov
cmp
shr
nop
mov
dec
mov
aad
cmp
xlat
sbb
dec
add
nop
loopne
out
push
cmp
inc
xchg
sbb
sub
daa
mov
add
jbe
je
cmp
aam
adc
jae
pop
xchg
pop
stos
sub
in
lret
mov
repnz
jno
inc
es
mov
enter
mov
cmp
inc
lret
call
sarl
or
dec
cmpsl
pop
imul
xor
jae
bts
lret
outsl
push
xchg
mov
jle
enter
cmpsl
mov
sbb
mov
movsl
in
inc
fdivp
loope
iret
cmp
pushf
sarl
jae
jb
rcrl
pop
movsl
mov
mov
outsl
lock
sbb
mov
dec
mov
test
imul
cwtl
pop
xchg
dec
inc
call
popf
in
jp
leave
pop
sbb
jge
loope
push
adc
fldl
dec
ror
enter
daa
lret
aam
sbb
lret
inc
cwtl
movsb
ljmp
jecxz
xor
ds
movsl
mov
xchg
xchg
cmp
fwait
mov
mov
xor
aad
shrb
ss
dec
js
mov
sub
sarl
mov
push
les
push
dec
repz
pop
adc
lcall
sbb
das
and
fisubrs
mov
mov
fld
notl
mov
add
cmp
sahf
fnsave
mov
nop
add
lea
cmp
pusha
imul
sti
cmpsb
rcrl
mov
lods
mov
aaa
push
fimuls
lea
dec
sbb
sbb
jno
jecxz
jge
inc
xor
es
sbb
mov
push
fdivrs
push
xchg
stc
popf
gs
insl
mov
mov
aam
sub
aam
dec
fs
jno
lock
xchg
sub
and
pop
cmp
sub
xor
dec
push
push
xor
imul
adc
or
mov
cli
repnz
add
loope
popa
ret
lahf
lods
jns
aaa
mov
dec
insl
int
sbb
adc
jle
dec
adcb
popa
push
sahf
mov
xchg
or
aam
dec
or
adc
rorl
lahf
sar
jp
bound
xor
and
clc
lret
inc
or
test
nop
xchg
std
popa
repnz
test
lcall
mov
and
lret
inc
rcr
pop
cmp
pop
rorb
in
dec
enter
imul
jns
pushf
stc
in
inc
jge
adc
outsl
mov
ret
xor
cmpsl
aas
stc
into
sub
adcb
pop
pop
inc
aas
mov
aad
add
xchg
mov
mov
and
lahf
mov
pop
xor
rcrl
xchg
sub
jmp
cmp
imul
xor
arpl
xor
aam
xchg
imul
pop
les
or
sahf
imul
out
inc
aas
bound
mov
and
mov
outsl
mov
stos
cmc
xor
sti
out
loope
stos
lcall
nop
std
inc
cmp
pusha
mov
jcxz
call
push
arpl
add
add
movsb
je
mov
mov
mov
mov
lea
mov
mov
mov
jmp
or
jns
arpl
pop
faddl
mov
das
pop
sbb
sahf
adc
sbb
fsubs
in
or
sbbl
jne
test
ss
leave
or
std
inc
call
mov
mov
rep
faddp
mov
jne
in
fdivs
aaa
sbb
mov
shlb
test
rcll
add
ss
jb
pop
outsl
pop
imul
fnsave
std
pop
push
inc
adc
mov
addl
add
dec
xor
push
lahf
cmp
insl
xchg
int3
fdivrp
jge
mov
jge
push
enter
inc
push
in
cwtl
test
scas
arpl
sub
test
aas
movsl
repz
jg
cmp
neg
shll
dec
cmp
leave
mov
add
pop
cli
xchg
or
dec
adc
sti
mov
not
and
and
stos
mov
push
xor
adc
clc
jecxz
xchg
xchg
pop
cltd
in
cmpsl
push
mov
scas
or
adc
cmp
sbb
pop
cmp
ficoml
push
mov
sahf
jnp
loopne
push
mov
in
sub
cmpsl
push
push
jno
loopne
outsl
pop
dec
hlt
lret
lcall
rorb
sub
int
mov
jae
jno
sahf
popf
fbstp
jl
cmp
jo
fildl
mov
or
clc
dec
inc
rolb
add
jne
xorb
out
call
insl
cmovg
call
pop
mov
outsb
xor
mov
andb
cmp
ret
inc
cs
out
dec
fldl
daa
and
push
pop
jmp
sarl
sbb
lret
push
ja
or
iret
sbb
inc
sbb
lcall
mov
mov
mov
jns
hlt
out
and
scas
test
xlat
cli
outsb
mov
xchg
and
jle
jl
mov
ret
xor
nop
mov
push
mov
cltd
mov
movsl
jae
aas
mov
lahf
jno
aaa
in
addr16
daa
lahf
call
fabs
sub
inc
imul
mov
out
je
dec
insb
ffree
dec
lds
fwait
daa
inc
loop
aad
clc
dec
and
shrb
cmovno
add
ljmp
sbb
ss
hlt
sbb
pop
or
xorl
inc
push
mov
loop
pop
jnp
pop
cld
stos
mov
pop
and
sub
dec
jae
leave
imul
mov
je
mov
and
ja
dec
iret
dec
sub
stos
std
mov
jecxz
xor
ds
in
arpl
dec
and
fmuls
std
leave
mov
xchg
jae
movsb
xchg
inc
movsb
jge
jle
fisttpl
mov
mov
jmp
push
aam
xor
mov
pop
sbb
iret
sbb
dec
es
sbb
scas
cltd
push
sub
daa
leave
sti
cmp
shlb
mov
mov
rcrl
push
cli
mov
jmp
inc
jg
cmpsb
mov
pushl
dec
jne
add
adc
das
clc
jg
sbb
inc
xchg
or
push
icebp
dec
daa
jno
movsl
push
scas
dec
sub
test
loopne
jbe
int3
cmovbe
add
out
mov
and
xlat
xor
adcl
cmp
dec
sub
outsl
pop
outsb
fstps
adc
push
mov
jmp
pop
jno
mov
xchg
mov
push
sbb
sahf
adc
sbb
cwtl
and
lcall
repz
push
jecxz
loopne,pn
or
mov
es
xor
push
or
inc
mov
clc
stos
lods
adc
jno
push
xchg
lret
lcall
loope,pt
jl
inc
mov
outsb
jg
pop
lret
mov
aaa
mov
mov
outsl
fcoml
sub
pop
push
push
sub
sbb
cmc
fsubs
push
jb
adcb
enter
adc
lret
in
push
push
xor
sbb
sbb
pop
repnz
enter
and
mov
cmp
cmp
mov
testb
inc
cmp
stos
jno
adc
push
mov
mov
mov
pop
push
aas
mov
insl
dec
dec
fisttpll
movsl
or
pop
test
mov
jl
into
sbb
sahf
scas
adcl
mov
hlt
dec
lds
call
sti
daa
popf
test
or
sub
xchg
mov
scas
lods
cmp
fyl2xp1
ret
and
aaa
in
mov
jnp
pushf
ud1
data16
out
xor
inc
push
jecxz
xor
inc
out
lea
stos
pusha
lahf
xor
fisttpl
mov
lahf
jl,pn
and
inc
cli
scas
push
or
xlat
and
fisttpll
clc
aad
pusha
adc
mov
cmpsl
push
les
mov
lock
sbb
sbb
pop
jns
fsubrs
leave
xor
sub
jge
fidivl
pop
lcall
lods
xchg
mull
pop
cmpsb
arpl
jnp
in
imul
and
mov
rorl
jl
sub
fildll
push
jl
inc
mov
lods
stos
xchg
jb
push
stos
aad
mov
cltd
or
fcoml
sahf
hlt
add
xchg
cmc
dec
es
outsl
jns
xchg
arpl
fcom
xchg
repz
pop
inc
lea
pop
inc
jge
push
add
pop
aam
dec
fcomps
lahf
and
jne
cmp
in
fsts
ret
dec
aad
fs
mov
insb
jno
pop
sbb
into
cmp
cwtl
pop
sub
movsl
mov
jns
jb
mov
pusha
icebp
mull
sti
or
sbb
push
in
decl
cli
sti
jne
sbbb
insb
aam
jne
mov
insb
xor
cmp
scas
cmp
data16
inc
cmp
fwait
mov
mov
mov
inc
test
fs
mov
xor
in
clc
lods
repnz
jnp
cmp
push
scas
or
dec
ljmp
add
jp
pop
sar
mov
xor
sub
jge
out
nop
orl
sub
xor
std
mov
orb
ljmp
dec
jp
es
and
stc
xor
fsub
xchg
in
lds
das
ss
jge
sbb
mov
faddl
or
mov
pushw
or
xor
xor
iret
les
leave
pop
int
jge
cld
dec
inc
mov
or
mov
iret
xor
push
sub
push
add
shll
aaa
arpl
and
loopne
imul
arpl
rcr
into
dec
addr16
in
push
insl
test
push
negb
mov
ret
jne
repnz
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
and
pop
jb
and
adc
sbb
sahf
adc
sbb
jecxz
mul
mov
out
mov
mov
inc
sbb
pop
lods
in
add
ss
jmp
ljmp
pop
push
mov
and
cmp
popf
leave
lods
add
negb
pop
scas
dec
sahf
dec
ja
fwait
push
js
adc
push
jge
mov
inc
int3
and
aas
mov
pop
sysexit
addb
inc
jecxz
aad
xor
inc
movsl
pop
fcom
insl
iret
inc
out
hlt
fadd
jo
mov
jns
pushf
jo
jo
mov
jge
add
pop
and
mov
or
je
out
push
popf
add
divl
js
fnstsw
pop
sub
in
bound
int3
lods
mov
mov
fstpt
mov
daa
in
outsl
sti
fbstp
cli
mov
mov
pop
in
push
jge
push
push
rorl
inc
aad
imul
xor
dec
jne
jl
dec
scas
cmc
inc
test
push
xchg
sbb
data16
icebp
movb
mov
jge
jo
and
mov
sti
outsb
xchg
faddp
jo
adc
xchg
mov
sub
sbb
cli
cmp
inc
pop
jns
js
adc
stos
adc
lods
mov
mov
in
sahf
mov
cld
pushl
dec
add
dec
mov
push
arpl
data16
mov
fidivrs
shll
clc
in
jecxz
shlb
jp
out
push
dec
in
mov
loope
push
jge
call
cmpsl
fdivp
sub
in
dec
lock
dec
aas
in
hlt
xor
fmull
aam
dec
cmp
push
pop
push
mov
mov
shll
std
out
jmp
jle
pushf
loop
mov
repnz
push
loop
stos
mov
xchg
jns
mov
addr16
and
sahf
mov
mov
lea
dec
cmp
sbb
jae
lret
jg
pop
or
or
xchg
enter
fbstp
shr
mov
ss
lods
and
jp
lcall
dec
jecxz
add
cmp
cmpb
mov
push
sub
sbb
mov
push
xor
or
sbb
rol
mov
int
cmc
daa
push
mov
nop
inc
mov
push
adc
ja
enter
or
nop
mov
add
aam
xor
mov
mov
pop
mov
and
or
xchg
es
jmp
mov
fnstsw
push
pop
imul
mov
mov
jne
testl
loop
inc
xchg
mov
inc
call
inc
sub
roll
lock
mov
fstl
push
in
inc
push
or
or
xor
sub
push
xchg
movsb
or
cmp
sarb
jnp
fwait
push
mov
mov
pop
sti
cmpsl
mov
dec
dec
and
sbb
dec
sbb
popa
cmp
loopne
push
daa
addr16
mov
arpl
fwait
je
stc
aaa
mov
imul
jns
scas
add
inc
mov
out
pop
pop
sbb
jmp
cli
lcall
inc
and
movsl
and
ljmp
mov
jb
mov
mov
sbb
pop
adc
sub
jb
in
sub
sub
rorb
movsb
ret
rorl
add
add
and
sbb
xor
mov
dec
sbb
sahf
adc
sbb
adc
decl
xchg
pop
lcall
mov
clc
dec
mov
jg
adc
mov
sub
inc
dec
cmpb
push
lret
rep
pop
add
xchg
push
sub
jno
xor
push
testb
test
cmp
inc
cmc
xchg
ds
jo
data16
xlat
adc
mov
sub
stc
out
int
mov
cmpsb
lcall
or
dec
or
mov
ss
and
sahf
adc
mov
push
fwait
les
shlb
xchg
ja
fxch
and
cmpsb
xor
fsubrl
leave
dec
pop
and
adc
mov
mov
ret
sub
dec
fcmovnu
adc
fmull
idivb
cs
sub
mov
std
inc
mov
les
push
in
fdivrl
or
out
clc
je
add
jae
arpl
pop
pushf
aas
adc
mov
dec
daa
pop
cmc
in
aad
ret
flds
push
movsl
outsl
mov
push
out
mov
dec
mov
or
sbb
xchg
push
stc
mov
bound
dec
cld
mov
out
inc
cmp
fdiv
dec
daa
mov
lock
int
cmp
push
std
in
inc
jae
int3
cmpsl
rcrb
and
ds
clc
js
and
das
or
shlb
pop
dec
push
push
rorl
mov
out
mov
xlat
mulb
pop
dec
stos
pop
xchg
push
mov
adc
in
pop
push
add
out
sub
cs
add
roll
loope
fnsave
ljmp
in
fmuls
push
jnp
push
sbb
push
add
fdivrl
loop
loopne
inc
mov
sub
imul
aaa
push
scas
lcall
neg
cmp
loope
push
cmpsl
jecxz
mov
xchg
out
sub
mov
pop
cmp
adcb
test
and
shll
mov
xchg
mov
mov
je
movsl
insl
push
stos
xchg
xlat
or
push
int
xor
imul
push
fisttpl
push
jo
leave
outsb
push
out
insb
mov
je
pop
lea
pop
sub
loope
jnp
into
sub
adc
push
cmpsb
stos
call
push
lcall
add
sub
inc
xor
addl
pushf
in
jle
push
push
outsb
sbb
stos
lds
dec
push
pop
lock
cmp
es
jno
mov
mov
out
pushf
xor
ja
add
jne
xorb
pop
mov
scas
adcl
fbld
inc
lods
dec
rcrb
idivb
sbb
clc
cmp
scas
imul
dec
rcll
inc
sbb
and
pop
ret
cld
lcall
aas
fisubrs
add
pminub
xor
les
jge
cmp
xchg
xchg
jl
scas
push
mul
int
out
xor
sbb
ror
sub
sub
ljmp
sbb
cmpsl
jg
int
in
mov
subl
adc
push
xchg
jbe
add
add
xor
aad
cmp
call
iret
fnstenv
jl
mov
mov
fucom
int
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
or
cmp
mov
rcll
inc
inc
sbb
sahf
adc
sbb
in
stc
jb
dec
test
pusha
jns
cmpsl
lcall
dec
mov
fstps
pop
add
cmp
xchg
fstp
xlat
inc
jb
push
jecxz
stos
adc
xchg
shl
inc
pushl
jbe
jmp
inc
jp
pop
cs
jnp
mov
mov
mov
div
int
int
fstps
into
enter
jl
shr
lock
aas
xchg
ss
jbe
loopne
add
adc
adc
aam
cmp
lds
and
imul
orl
pop
cli
les
sbb
cmp
call
cli
test
insb
lret
imul
jl
iret
es
jmp
mov
fmul
ja
fwait
jb
int3
repz
mul
inc
int3
scas
dec
addb
mov
jae
dec
rorb
repnz
or
data16
cwtl
mov
rcll
dec
test
push
dec
insb
mov
dec
mov
dec
arpl
jmp
outsb
rorl
mov
dec
xor
into
stos
inc
insb
cmpsl
movsb
push
jl
shl
mov
xlat
repnz
sbb
test
cltd
mov
insb
lock
sbb
movsb
push
cmp
in
rorb
add
sub
int3
sub
mov
mov
repz
add
push
ror
mov
dec
gs
push
mov
pop
ljmp
movsb
aas
push
aaa
xor
in
mov
popa
lahf
orb
inc
add
inc
cmpsl
in
inc
pop
xor
adc
ljmp
xor
test
outsl
and
mov
jle
sub
cmpsb
mov
jp
fistpl
mov
jg
hlt
arpl
sub
inc
push
inc
jg
out
ret
rcrb
or
iret
inc
mov
inc
pop
jnp
mov
fiaddl
mov
mov
js
pop
mov
enter
gs
mov
pop
sbb
or
inc
jns
dec
lea
and
xchg
mov
lret
loop
leave
or
push
aaa
stos
jmp
jge
fcomps
xchg
mov
pop
pop
push
add
cmc
mov
das
mov
roll
xor
and
inc
or
cmp
push
push
ret
xchg
push
into
mov
push
scas
test
test
std
mov
lods
sub
mov
and
mov
pop
popf
adc
loopne
dec
test
scas
rsm
pop
xchg
repnz
push
xor
jp
imul
xchg
dec
cmp
push
xor
bound
xor
mov
imul
push
pop
mov
stc
shlb
adc
aas
cmp
addr16
icebp
imul
sbb
xor
mov
imul
or
pop
jo
mov
lahf
subb
xchg
roll
lret
dec
and
in
sbb
loope
push
incl
out
sub
mov
stos
sub
clc
subl
mov
test
rcrl
fimull
les
cmpsl
add
jns
mov
mov
imul
push
or
sahf
test
movsl
xlat
adc
mov
arpl
push
and
mov
cltd
rol
push
xor
popf
xchg
repnz
ss
ret
decl
add
pop
popa
add
repz
rep
sahf
mov
push
outsb
xor
rorb
mov
xor
lret
cmp
mov
sbb
ja
insl
push
push
sti
xchg
jb
adc
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
mov
mov
mov
mov
xor
or
mov
shll
xor
mov
jmp
jbe
fstpt
insl
cmpl
jl
cmp
sbb
loope
ficomps
push
dec
cmp
push
and
outsl
into
push
and
imul
imul
dec
mov
outsb
out
push
mov
ljmp
int3
insb
idivl
popf
movb
xlat
xchg
or
or
xchg
test
popf
ss
cwtl
leave
icebp
pop
xchg
bnd
icebp
les
es
mov
popf
or
push
cs
or
mov
sub
ffreep
dec
pop
insl
cmp
stos
sub
arpl
popf
and
pop
pop
aam
lock
sbb
js
jne
mov
dec
das
out
js
stc
test
cs
mov
clc
outsb
sbb
and
mov
inc
js
addb
mov
lret
mov
je
sub
push
and
adc
adc
fs
pusha
sbb
xchg
aas
movsb
mov
dec
dec
cmp
pop
cmp
cmpsl
inc
and
adc
retw
test
clc
pop
inc
aad
lahf
ja
xor
sti
sbb
push
mov
aad
jbe
ja
sbb
enter
outsb
loopne
mov
mov
mov
jns
arpl
sub
xor
mov
sub
dec
fnstcw
or
outsb
int
sbb
jmp
pop
stos
cwtl
sbb
mov
cmp
in
jg
cwtl
clc
jae
shl
clc
adc
adc
jb
insl
push
xlat
pop
jne
sbb
stc
push
pop
jecxz
insl
test
aam
pop
xchg
mov
mov
addr16
mov
cwtl
clc
xchg
das
cmp
fadd
sti
in
clc
negb
iret
push
jae
xlat
jmp
loopne
inc
fsubrp
add
insl
push
filds
cmpb
ret
das
cmp
mov
cmp
mov
cmp
or
and
push
pop
push
add
stos
fiadds
les
sbb
sbb
mov
mov
jo
sub
mov
test
test
jmp
iret
in
fimull
sti
mov
push
dec
xchg
sti
enter
mov
push
sbb
cmp
dec
jl
out
rcll
loopne
sbb
dec
push
jne
adc
mov
incb
in
outsl
push
mov
lahf
sarb
add
adc
mov
jne
adc
iret
sub
jae
jp
jns
add
dec
int3
sbb
sub
sub
cmp
das
scas
inc
jbe
cld
sbb
or
sbb
and
imul
outsl
mov
mov
test
push
data16
nop
pop
rcr
mov
xchg
or
out
fdiv
aad
out
in
or
mov
mov
add
pop
jae
in
lret
add
mov
cmp
jnp
ljmp
adc
lods
mov
sahf
cwtl
sbb
dec
mov
stc
dec
sbb
add
push
push
aaa
pop
xchg
imul
sub
pop
pushf
cmp
mov
push
lcall
sub
scas
mov
push
fdivrl
repz
imulb
push
in
inc
cli
add
xlat
test
cmp
cmp
pop
fists
sbb
jp
xor
enter
jae
ds
jmp
jno
in
mov
aaa
fwait
adc
jge
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
jmp
std
dec
mov
sub
fidivrl
test
push
stos
stos
jo
mov
xor
sbb
jl
xor
mov
add
sbb
rorb
lods
dec
in
addr16
jmp
lret
nop
imul
shrb
clc
fimuls
xchg
dec
xchg
stos
cmp
mov
test
iret
insb
cld
into
pop
or
or
movsl
cmp
add
shlb
push
stc
icebp
into
dec
out
adc
adc
mov
mov
and
lock
xor
mov
pusha
fcomps
mov
mov
mov
shr
pushf
xchg
mov
in
push
popf
jl
xchg
lret
test
clc
mov
dec
jg
dec
add
das
add
push
jnp
mov
add
mov
loop
mov
mov
rorl
arpl
in
sub
cld
add
sbb
into
jae
add
daa
daa
pop
sbb
shrl
inc
in
jae
js
and
icebp
jle
mov
fstl
xchg
adc
stos
loope
mov
xchg
and
cmp
add
pop
cmp
sub
mov
xchg
or
lret
mov
xchg
and
mov
lahf
sbb
sbb
mov
jae
pusha
fidivs
mov
pop
pop
cwtl
jge
xlat
scas
jb
nop
pusha
out
rorl
movsl
pop
push
nop
xor
mov
or
push
inc
pop
arpl
pop
ljmp
repz
adc
pusha
dec
sub
into
add
xor
cmp
and
mov
xchg
adc
push
iret
js
addr16
push
fucomi
xor
or
sub
mov
jmp
add
leave
imul
insl
lahf
fadd
fucom
popf
jne
push
mov
cltd
movsb
dec
in
and
das
jmp
ja
movsl
cwtl
adc
jg
xchg
lds
pop
adc
mov
lret
push
mov
push
addr16
mov
cmp
mov
stos
cmp
push
xor
inc
cmpsl
loope
jbe
push
jb
ret
in
dec
aam
mull
xchg
xchg
jno
mov
add
xchg
into
pop
loopne
lret
xchg
adc
mov
sahf
sbb
popf
stc
add
xchg
aaa
push
add
gs
inc
lds
ljmp
adc
jge
scas
ror
cmp
adc
cmp
sbb
int
lahf
jae
test
xlat
out
inc
cmp
leave
cmpsl
dec
xor
fldl
jbe
cmp
jl
scas
push
test
mov
out
stc
pop
inc
shll
add
lahf
mov
jbe
push
push
push
add
xor
sub
repnz
test
cltd
shrb
ficompl
adc
mov
iret
xchg
movsb
aas
sbb
out
popf
jg
jb
xchg
arpl
lds
shlb
xlat
sub
mull
cmp
cmpsl
cmp
ffreep
add
pop
imul
outsb
lret
dec
mov
pop
add
arpl
adc
push
pusha
push
bound
or
mov
jno
mov
or
jo
and
stc
lret
roll
mov
sbb
mov
push
jne
add
call
mov
mov
shrd
shr
shr
xor
push
xor
jmp
sbb
jmp
ljmp
jo
enter
sub
sbb
popf
pop
sub
push
mov
outsb
add
and
cmp
or
popa
sbb
pop
pop
mov
jp
and
stc
xchg
jnp
dec
pop
addb
in
push
iret
daa
shrb
mov
push
lds
inc
loope
clc
or
scas
push
fsubrs
dec
rclb
popa
jg
in
lods
imul
add
popf
insl
xchg
loop
cmp
cmp
daa
xchg
cmpsl
aaa
mov
bound
add
xchg
sbb
in
aad
pop
sbb
out
mov
mov
xchg
in
and
xor
popa
shrl
lret
mov
mov
mov
mov
lret
insb
bound
push
jb
push
int3
jle
jmp
push
icebp
cmp
rclb
mov
sub
popf
mov
int
cwtl
lea
mov
addr16
sub
and
sbb
xchg
jecxz
loopnew
insl
test
jbe
es
int3
sub
sbb
repz
jge
cli
sbb
jge
dec
hlt
add
jo
adc
push
jecxz
sahf
cmp
aas
add
xor
adc
fists
add
mov
mov
pop
xchg
stos
cmp
hlt
mull
lods
or
int
xor
aad
rcll
dec
aaa
ret
leave
ja
aad
and
mov
mov
gs
xchg
pop
push
mov
fxch
hlt
repnz
inc
jno
fadds
xlat
mov
inc
aam
iret
jno
test
mov
inc
sbb
lock
push
mov
aad
mov
and
popa
add
sbb
inc
xlat
insb
adc
out
mov
pusha
aam
or
inc
sub
fstpl
pushl
mov
sub
aad
fwait
jle
and
add
sub
push
sarl
sub
ja
movsb
pushf
in
int
mov
mov
xchg
and
jo
shlb
daa
cli
mov
adc
popf
lods
add
nop
jecxz
data16
into
push
imul
loopne
inc
push
or
mov
movsb
xchg
insb
jo
in
push
xor
and
and
notl
xchg
mov
arpl
inc
scas
cwtl
cld
stc
cli
mov
or
jne
sbb
dec
lahf
in
mov
das
fldenv
orb
fistps
adc
test
ds
mov
add
aad
orb
cmp
add
sbb
sbbl
xchg
lret
xor
inc
out
enter
jl
mov
stc
fs
dec
rorl
and
push
mov
fisttpl
sub
pop
xchg
popa
or
rorb
cmp
daa
ja
mov
out
iret
push
aam
pusha
lea
inc
fld
stos
in
push
in
mov
out
jno
movl
add
jnp
adc
xchg
inc
mov
mov
scas
mov
pop
popf
scas
sub
stos
mov
decb
in
idivb
adc
cmp
jmp
push
push
ret
divl
xchg
dec
sti
and
jp
jno
adc
ja
popf
push
cmp
and
leave
insl
fisubl
dec
mov
out
mov
add
xor
flds
push
sbbb
adc
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
movl
shrd
notl
shr
ret
add
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movl
xor
mov
mov
not
movl
decl
mov
movl
mov
sbb
movl
jmp
clc
sub
sub
into
mov
pop
and
sbb
sbb
xlat
push
and
jb
xchg
cmp
jmp
adc
jle
or
jg
inc
dec
iret
pushf
outsl
arpl
or
and
scas
movsb
fimull
adc
jmp
mov
pop
fsubrl
cmc
push
pop
push
mov
cmc
cmpsl
je
push
lcall
jge
inc
jae
fdivrl
hlt
arpl
in
cmp
cwtl
repnz
pop
adc
jbe
test
add
add
mov
roll
insb
imul
decl
mov
push
mov
lcall
dec
inc
sub
stc
dec
fisubs
aas
sbb
movsb
ds
mov
arpl
cmpsb
jns
movntps
cltd
cmp
rcrl
adc
and
jle
push
call
nop
or
push
push
push
cli
gs
jo
adc
ss
sub
fs
ja
aad
xor
hlt
jno,pn
inc
sbb
mov
jg
push
pop
push
or
xor
pop
add
cmp
jno
or
mov
mov
pop
mov
and
pop
gs
test
dec
mov
sbb
addr16
add
jns
push
sub
aad
test
sbb
pushf
lahf
sub
add
jae
sub
xlat
mov
loope
out
jl
movsb
mov
pusha
inc
dec
imul
adc
mov
push
std
sarl
repnz
push
fisubrs
shl
xchg
hlt
sbb
adc
xchg
imul
fdivp
faddl
in
das
add
imull
sbb
mov
xchg
xor
mov
mov
lea
push
out
cmp
pop
pop
popf
sti
pop
fwait
jmp
xor
inc
dec
rcr
xchg
xchg
in
xchg
les
dec
pop
jnp
popa
outsb
inc
xchg
movl
daa
xchg
sub
xor
es
js
pop
rcr
int3
es
and
or
lock
push
into
add
lret
mov
data16
push
or
bound
sti
insb
int3
movsb
fldcw
mov
xlat
std
leave
mov
ljmp
outsl
adc
mov
xchg
rorb
adc
pop
jg
dec
mov
xchg
dec
ss
jbe
lea
inc
jo
dec
cld
mov
adc
fists
mov
push
pop
sahf
mov
pushl
mov
repnz
bound
push
les
das
xor
mov
mov
outsb
xor
data16
ljmp
xlat
dec
xorl
fdivrs
push
xchg
jecxz
mov
sub
icebp
ja
fidivl
int3
pop
rorl
mov
repz
mov
daa
fimull
filds
test
push
fs
and
push
scas
hlt
adc
and
pusha
sahf
insl
mov
or
repz
or
xchg
cmp
test
cltd
aas
rolb
pop
mov
xchg
imul
inc
cltd
repz
push
mov
movsb
hlt
push
pop
mov
pop
stos
bound
sbb
inc
xchg
icebp
popf
movsl
imul
insb
or
pop
jmp
jle
addr16
js
cs
sar
ja
push
les
lret
clc
repnz
mov
test
sbb
or
adc
jmp
in
inc
addb
pop
or
pop
sahf
xor
xor
inc
loopne
outsb
add
xor
push
movl
movl
push
xor
movl
sbb
mov
cmpl
mov
mov
jmp
mov
movzbl
cmpl
ja
push
pushl
pushl
push
call
mov
xor
or
or
mov
adc
xor
or
adc
mov
and
mov
push
adcl
push
andl
jmp
xchg
sahf
push
push
fists
leave
push
sbb
sbb
sbb
decb
push
jmp
pop
mov
and
fcom
repnz
xlat
mov
xorl
repnz
mov
mov
into
inc
or
inc
rcl
mov
inc
sbbl
dec
adc
xchg
sub
lret
and
stc
add
mov
mov
xlat
rorb
mov
mov
sub
mov
add
push
scas
in
or
jmp
arpl
lds
dec
lret
repz
loopew
nop
aad
push
js
mov
std
jmp
out
loop
vsubsd
lcall
std
mov
sub
loope
and
fisttpll
inc
pushf
push
mov
shld
pop
call
jge
testb
cltd
pop
mov
push
out
in
arpl
lock
dec
mov
out
hlt
popa
fistps
pop
or
jo
xchg
idiv
call
movl
xchg
cmp
sbb
shll
js
mov
mov
mov
jo
popf
rolb
push
adc
pushf
push
leave
and
lock
add
push
mov
xor
or
inc
enter
out
or
fld
addr16
popf
xchg
nop
mov
sub
mov
xor
mov
mov
sub
loop
jmp
insb
out
pop
mov
push
xchg
rol
cltd
iret
or
sub
sub
mov
mov
sbb
fwait
mov
or
js
shll
push
push
scas
jnp
mov
push
mov
jnp
add
push
ljmp
xchg
dec
je
mov
ret
sub
andl
das
sbb
mov
adcb
pop
sbb
cmpsl
pop
add
inc
mov
sub
adc
repz
fimuls
add
mov
sti
mov
mov
cmpsl
inc
ret
cmpsl
js
shlb
retw
push
cmp
pop
dec
cmp
push
outsl
loopne
jae
roll
pop
mov
stc
xchg
shrb
sbb
sbb
cld
xor
push
sub
mov
adc
xchg
in
mov
sub
mov
mov
adcl
dec
scas
mov
mov
inc
jbe
dec
xor
bound
xchg
aas
outsl
popf
or
pop
or
xchg
add
andl
jle
in
pop
pop
jo
aad
sbb
dec
mov
ds
sbb
jbe
or
or
sahf
sub
mov
mov
in
add
sub
cs
dec
jae
and
inc
movb
lret
test
xchg
xchg
sub
test
xor
inc
jnp
push
push
in
or
fiadds
cmp
inc
sbb
outsb
cmpsb
dec
repz
rorl
test
cmpsl
mov
sbb
jns
shlb
gs
or
adc
pop
add
lahf
pop
inc
dec
in
jo
jae
mov
jg
fwait
push
mov
pop
push
mov
je
or
movsb
sbb
fildll
lahf
xchg
jg
xchg
icebp
cmp
fsubrs
icebp
inc
mov
cmc
pop
xchg
push
lcall
fstpl
sub
mov
inc
ljmp
push
std
fcomps
mov
or
add
or
dec
dec
pop
loope,pt
mov
xchg
mov
push
lahf
cmp
lret
cmp
mov
imul
push
adcl
call
sbb
mov
adc
mov
sbbl
push
or
subl
push
xorl
or
xor
xor
subl
push
push
call
xor
or
adc
mov
xor
mov
andl
push
addl
push
subl
push
push
subl
call
mov
add
mov
cmpl
not
movl
jmp
notl
mov
cmpl
jl
push
pushl
call
xor
and
movzwl
or
add
adcl
sub
cmpl
mov
movl
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
xor
adc
andl
and
add
movl
movzwl
xor
movl
decl
movl
movl
cmpl
mov
mov
not
movzbl
jmp
movl
movl
cmpl
je
push
push
call
sbb
mov
xor
or
sub
imul
and
sbb
movl
movl
mov
sbb
mov
notl
mov
or
mov
sbbl
jmp
adc
packssdw
jb
jnp
push
es
push
adc
sbb
sbb
movaps
int3
cmp
adc
ljmp
loop
mov
cmp
push
out
sub
ss
push
cwtl
pop
mov
sbb
pop
lcall
in
sbb
je
cmc
dec
mov
pop
xchg
fisubl
or
les
mov
ljmp
mov
push
repz
std
or
cmp
out
testb
cmp
mov
inc
or
fisttpll
scas
mov
fbld
das
in
inc
orl
test
loope
ds
jge
in
sub
mov
in
adc
stc
stos
ret
sti
push
stos
jae
mov
lods
push
add
inc
and
push
cld
mov
int3
pop
out
shll
aas
cld
lret
lret
int3
pop
dec
ficoml
jge
outsl
inc
lock
in
stos
jecxz
mov
out
addr16
fimuls
test
lea
fiaddl
add
fimull
jp
test
pop
pusha
add
xchg
add
adc
gs
and
jl
dec
arpl
stos
sub
or
pop
cmp
cmc
loopne
sbb
xor
pop
push
push
lock
lret
adc
or
popl
shl
mov
mov
jmp
sbb
xchg
mov
jp
ret
mov
mov
or
and
mov
and
jp
add
xor
repz
mov
cs
mov
shlb
jo
push
jg,pn
add
adc
mov
inc
xor
pop
sbb
enter
out
stos
cs
ljmp
jb
outsl
shlb
fsubs
or
loop
loope
pop
stos
les
dec
mov
mov
cmpsl
and
add
in
xchg
outsl
jmp
repnz
add
aas
in
cltd
stc
lods
and
je
pop
sub
jbe
test
ljmp
jae
xor
jns
push
fstps
jle
fadd
jbe
inc
xchg
shll
or
push
jb
sub
xor
inc
push
sbb
nop
lds
addr16
cld
push
mov
es
push
in
jl
aas
and
movsb
jecxz
mov
cs
jecxz
jmp
ja
xchg
mov
sbb
test
in
mov
pop
shufps
rcrb
and
push
movsb
dec
call
repz
xor
mov
imulb
orl
jne
dec
pop
imul
jae
rolb
cmp
dec
int
push
mov
insb
out
fmull
cmp
jg
insl
inc
adc
stc
xor
dec
xchg
js
sub
pop
divb
and
popa
sbb
xchg
decb
pop
repnz
and
lock
mov
add
lahf
cmp
insb
outsl
cmc
fimull
mov
movsl
in
sbb
jecxz
fucomp
or
sti
xor
mov
mov
pop
inc
sub
inc
cmpsb
imul
push
push
push
or
pop
mov
stos
mov
test
dec
jae
mov
sub
jecxz
dec
scas
xchg
push
and
xchg
xchg
jle
mov
pop
pusha
and
xor
pushf
fisubs
std
lcall
xchg
sahf
and
js
cld
cmpsl
push
cmp
fwait
push
jne
fcmovnbe
rclb
cmp
cmp
aad
out
and
inc
dec
stc
push
xor
add
adc
adcl
or
mov
or
and
mov
andl
or
cmpl
mov
not
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
adcl
not
movzwl
sub
mov
adcl
mov
xor
orl
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
jmp
movsl
movsb
test
test
sbb
fdivl
mov
ljmp
sbb
sbb
mov
movsl
mov
xor
pop
pusha
push
data16
lods
dec
movb
cltd
scas
push
pop
es
push
cmc
push
imul
lods
dec
ficoml
mov
add
lods
sub
enter
sbb
in
test
mov
fdivr
jecxz
hlt
add
mov
xchg
push
aas
sbb
add
pushf
sub
pop
test
push
xor
jbe
pop
inc
mov
cwtl
or
adc
pop
push
xor
daa
mov
roll
jp
adc
stos
test
xchg
xor
and
out
repz
stos
sub
repz
dec
int3
sub
sar
lods
ds
test
push
mov
and
mov
insb
dec
and
cli
std
test
mov
mov
lods
inc
sbb
pop
mov
mov
sub
push
jo
and
mov
iret
outsb
and
cmc
lcall
inc
pop
xlat
fisttps
in
cld
icebp
stos
xchg
pushl
push
sbb
pop
pop
sbb
add
and
push
xchg
faddl
ljmp
mov
or
mov
daa
int3
mov
dec
inc
pop
push
fadds
stc
pusha
js
lahf
cld
test
iret
mov
mov
xor
dec
insl
into
adc
mov
mov
jge
ficoml
hlt
mov
xchg
hlt
cmc
push
int
adc
xchg
push
loopne
ret
push
dec
inc
mov
xchg
mov
jae
cwtl
xchg
fisttpl
mov
test
sub
shr
xchg
mov
subb
sbb
icebp
sbb
xlat
pusha
std
lds
sbb
jmp
subl
adc
adc
insb
lcall
push
mov
scas
push
dec
or
sub
adc
inc
sahf
mov
xor
jne
lret
mull
movl
xlat
add
lds
cmp
cld
and
in
andl
push
xor
fwait
or
out
jecxz
mov
xchg
jae
or
std
sbb
mov
rep
pop
out
lock
loop
push
xor
mov
or
jmp
jmp
mov
xor
cmc
sbb
mov
mov
inc
lea
xor
adc
iret
notb
int
cmp
mov
mov
scas
int
shr
fisubrl
repz
fcoml
sub
dec
or
sarl
mov
mov
sub
pushf
enter
jle
mov
push
sbb
pop
jmp
out
jg
test
and
xor
dec
shr
mov
pop
jge
pop
nop
mov
sar
mov
adc
inc
inc
and
add
loop
xor
rorb
sub
dec
aaa
push
and
xor
movsl
sub
mov
roll
aaa
fstps
push
popa
out
decb
fnstsw
cmpb
pop
cltd
jne
icebp
xorl
loopne
add
xor
mov
dec
lret
mov
bound
dec
inc
push
xlat
das
dec
loope
movsb
mov
push
cmp
pop
testl
cwtl
add
pusha
push
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
jmp
fsts
or
push
jp
jo
sub
mov
sbb
outsb
adc
sbb
xchg
push
ja
fcoms
sub
cmc
mov
inc
jno
outsb
or
sbb
adc
jge
iret
pop
mov
and
aam
xor
cmp
cli
push
cmp
cltd
ret
das
cmp
cmp
xor
cmp
fmull
sbb
popa
lods
ds
js
push
add
mov
jns
pop
pop
jp
and
fcom
push
jae
push
push
inc
lahf
je
jge
pop
in
push
jns
sti
jmp
jp
mov
rcl
mov
jle
pop
dec
mov
mov
outsl
das
adc
fs
jge
push
mov
outsb
pop
add
sub
pop
rorb
in
orb
sub
mov
mulb
js
mov
fisubrs
jg
pop
xor
inc
inc
mov
and
jns
sbbb
incl
push
inc
cltd
add
jno
push
stos
je
fsubp
fisubs
cmp
mov
mov
xor
aaa
sub
clc
sahf
mov
push
lds
pop
jle
daa
mov
mov
pusha
xor
push
lds
mov
out
pop
js
sti
fdivs
mov
jle
adc
xchg
add
idivb
dec
fmuls
jbe
cmp
xor
lods
pop
std
add
push
jl
and
xchg
add
cld
leave
sbb
xor
xor
in
out
mov
cmc
xorb
shrb
cld
jne
jne
fildl
testb
pushf
push
int3
fdivrl
jmp
adc
enter
jae
sbb
mov
shlb
orb
rcrl
loop
pop
enter
aad
lret
cld
inc
sbb
scas
sbbl
lds
imul
jb
rcrl
adc
sbb
jae
sbb
ficoml
jb
in
lea
dec
cmc
mov
or
or
push
icebp
and
add
aad
mov
rolb
testl
les
mov
jmp
arpl
jle
pop
mov
xor
xchg
testl
cld
and
nop
into
lods
call
mov
pop
pop
pop
outsl
loop
andb
push
jle
cli
rolb
adc
or
outsl
enter
jbe
xor
mov
fdivrl
in
jnp
das
nop
mov
pop
ret
sbb
jbe
adc
jns
xchg
sbb
push
insl
mov
sarb
jo
mov
popa
das
cmp
icebp
flds
push
mov
data16
or
lods
push
push
inc
and
aas
in
adc
cwtl
rcr
cli
dec
movb
dec
xor
add
lea
mov
dec
scas
push
sbb
mov
lret
addr16
inc
or
xchg
into
icebp
rcrl
mov
sbb
jp
xor
js
dec
mov
xchg
pop
or
aad
and
ljmp
rcl
xlat
or
mov
mov
pushf
mov
sbb
js
rcrl
sbb
repz
jge
lea
mov
mov
or
mov
stos
je
dec
mov
repz
sub
lret
cmpsb
js
mov
adcb
and
or
pop
pop
sub
clc
cmp
push
stos
jmp
outsl
sub
test
add
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
jmp
xor
mov
lcall
or
stos
or
adc
sbb
movsl
push
sub
rorb
jecxz
xchg
push
xchg
mov
inc
push
pop
iret
scas
mov
sub
inc
call
xchg
aam
pop
lods
cs
sub
push
js
lds
sbb
icebp
mov
gs
nop
das
or
push
scas
pusha
and
negl
sub
xchg
pop
jb
xor
inc
adc
mov
jecxz
sbb
ja
fs
aam
out
enter
nop
jp
cmp
adcb
adc
xchg
aaa
and
xchg
xchg
call
add
mov
int3
mov
mov
xchg
push
adc
ret
push
add
or
and
aam
pop
xchg
xchg
rorl
sub
cmp
cmp
out
xor
sbb
and
xor
cmc
lret
test
jp
jl
adc
sarl
push
pop
add
addl
arpl
cmp
es
jecxz
ljmpw
leave
mov
cmp
mov
aaa
sub
cltd
lret
lret
mov
dec
repnz
in
pop
adc
xor
test
xchg
leave
mov
jb
sub
arpl
xchg
or
and
ss
cmp
out
mov
cwtl
cld
stos
clc
out
cmp
fisubrl
jno
shl
mov
sub
mov
imul
push
addr16
sbbb
outsl
push
inc
and
pop
popa
test
ret
jmp
inc
movsb
movsb
push
stc
xchg
dec
mov
mov
imul
mov
mov
jmp
out
dec
cld
sub
sub
or
sbb
cmp
xchg
mov
das
pop
sti
pop
loope
enter
add
leave
inc
jmp
xchg
xor
lea
add
lods
lcall
dec
movsl
lea
stos
or
shl
jns
cmp
hlt
daa
jmp
xchg
inc
testb
mov
repnz
cmp
nop
dec
xchg
movsl
or
dec
pop
mov
aam
xor
sub
xchg
mov
cmpb
jl
lods
mov
insl
dec
xchg
enter
clc
dec
cmc
pop
fcoms
xorb
mov
pop
add
hlt
icebp
out
in
orb
add
add
loope
clc
arpl
into
sbb
xchg
out
popf
pusha
fs
push
xchg
jp
int3
data16
fdivs
inc
mov
into
lods
mov
mov
je
int3
xor
mov
hlt
jae
and
mov
into
rcrl
adc
mov
scas
dec
mov
fildll
xorl
cmp
jns
sbb
sbb
adc
mov
ret
movsb
sahf
test
jle
out
stos
cli
lret
hlt
jnp
sbb
movsl
scas
xchg
mov
mov
xchg
cmp
popa
push
orl
fcompl
mov
rol
inc
dec
dec
test
jns
mov
push
int
mov
ret
lcall
push
cltd
enter
push
jne
pusha
dec
pusha
sub
fcompl
xor
mov
dec
test
fdivrl
adc
iret
dec
sbb
or
dec
jmp
mov
xchg
mov
ja
cmpsb
mov
incl
insb
jno
loop
ret
mov
or
jo
sbb
stos
mov
ljmp
mov
in
popf
lods
lret
ljmp
add
ljmp
in
pushf
mov
add
or
mov
daa
mov
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jmp
xchg
and
cmc
mov
mov
mov
cmc
sbb
outsb
adc
sbb
dec
neg
dec
iret
jp
mov
and
pop
in
push
sbb
mov
jbe
bnd
repnz
neg
cmp
aas
add
inc
pop
cmpl
dec
or
xchg
in
or
and
add
negl
push
jmp
dec
movsl
jge
loope
popa
movsb
ljmp
jns
aas
adc
pop
sbb
mov
nop
push
jno
push
mov
xor
xchg
and
sub
dec
mov
adc
mov
nop
push
dec
int3
cs
loop
popf
fwait
jb
sahf
pushf
add
pop
xchg
or
mov
cmpsl
jnp
push
cltd
or
lods
add
ja
adc
cmp
sbb
xor
iret
pop
push
fwait
lock
test
lcall
pop
stos
xor
cmpsl
mov
pusha
push
js
cmp
ljmp
mov
in
das
insb
scas
movsl
cmp
aad
xor
pushf
lret
mov
in
mov
mov
mov
cmpsb
lcall
frstor
in
inc
mov
aam
push
in
outsb
adc
and
xor
pop
cmpsl
je
pop
jno
stos
cmc
sbb
and
sti
push
mov
popf
shll
and
insl
out
push
ljmp
push
push
jnp
mov
ficoml
cld
sbb
and
or
and
cmp
adc
mov
cmpl
aam
lahf
scas
test
dec
mov
mov
in
sti
test
cltd
mov
pushf
adc
add
loope
mov
mov
int
sub
sbb
add
add
pop
aad
cmp
and
or
popa
cwtl
lock
sbb
inc
in
fistpll
sbb
and
rcr
pop
pop
xor
dec
and
test
ja
mov
jmp
xchg
insl
dec
lret
xchg
in
rcrl
sarl
lcall
leave
push
mov
ror
dec
rol
cld
outsb
mov
push
daa
jp
subl
or
ret
scas
push
mov
sbb
xor
jb
add
das
pop
popf
sbb
scas
mov
inc
cmp
lea
inc
mov
stc
jmp
jnp
or
cmpsb
ljmp
and
inc
or
data16
mov
mov
dec
cmp
push
fstl
divb
jl
sub
mov
out
insl
lret
imul
dec
pushf
xor
push
popf
in
jmp
pop
cmpb
pushf
cwtl
jb
leave
arpl
mov
out
mov
mov
loop
rolb
mov
lock
test
mov
push
scas
push
hlt
add
out
mov
dec
lea
mov
jnp
scas
stos
mov
repz
insb
enter
shll
xchg
adc
incl
mov
shrb
fsub
in
cmpsb
add
fisubrs
xlat
push
sbb
or
jmp
cmp
call
leave
inc
ss
data16
xor
cmc
xchg
adcb
jecxz
rorb
mov
dec
cmp
jbe
pop
setge
das
dec
sbb
xor
js
lea
insl
add
ja
pop
jp
stos
dec
lods
adcb
mov
gs
in
out
xorb
sub
push
mov
xchg
jmp
aaa
xchg
enter
scas
pusha
cmc
xor
sub
fs
jp
push
pop
stos
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
jmp
sub
sti
xchg
sbb
xorl
rclb
sbb
xor
es
sub
aam
fisubs
enter
xlat
jecxz
sbb
jne
pushf
mov
pop
xor
add
xor
push
outsl
jae
add
das
or
fistpll
xchg
scas
xchg
xchg
cmp
pop
or
inc
cmpb
lcall
nop
repnz
inc
pop
das
aaa
adc
push
dec
pushf
into
iret
xchg
inc
mov
xchg
jg
in
sbb
js
jmp
shlb
push
shlb
xor
fdivrl
or
push
imul
adc
mov
cltd
mov
cmp
nop
push
fwait
dec
push
mov
arpl
lea
sub
fisubrl
outsb
lds
adc
push
leave
add
push
mov
sbb
xchg
or
sbb
or
sub
lcall
push
fisttpl
mov
mov
jae
add
mov
add
movsl
stos
sbb
adc
in
pop
and
sbb
jecxz
nop
push
insl
mov
push
pop
push
cmp
cmp
lods
jp
ret
push
ficomps
jns
mov
mov
out
daa
mov
push
sarl
inc
push
jg
sahf
div
scas
std
scas
movsb
mov
js
shrl
fs
mul
dec
movsb
call
jmp
iret
rol
xchg
xor
adc
xchg
test
inc
pop
loop
jne
lss
jle
dec
jl
cli
mov
jp
jmp
inc
mov
xor
aaa
cmp
out
push
insl
outsb
sti
jo
out
rclb
aas
mov
jg
imul
mov
out
adc
in
adc
xchg
imul
sahf
notl
stc
inc
int
jne
icebp
scas
pop
out
loopne
cmp
xchg
xchg
cltd
mov
cmp
pop
hlt
xchg
sub
stos
jbe
ljmp
push
pop
insb
mov
or
ds
icebp
daa
adcl
cmp
mov
in
dec
jo
lcall
inc
xor
pop
xchg
popa
iret
adc
outsb
inc
fsts
in
cmp
inc
xchg
mov
je
add
jb
in
xchg
and
dec
sub
or
pop
push
imul
in
xor
jb
cmpsb
arpl
aaa
ret
cmpsb
xchg
insl
fistps
pop
insb
cmp
mov
and
mov
std
mov
out
cltd
inc
xor
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
jmp
nop
xchg
lret
ja
das
sub
sbb
aaa
push
call
sbb
xchg
es
out
rcl
dec
or
sub
pop
xchg
mov
arpl
out
repnz
dec
mov
add
pop
enter
pop
sahf
sub
or
jl
pop
adc
loope
mov
dec
push
sbb
out
shr
mov
xlat
and
jae
push
jle
cmpsb
xchg
mov
xor
adc
mov
adc
mov
cltd
xchg
add
lea
xchg
test
addr16
pop
pop
mov
in
adc
pop
add
sarl
mov
test
xchg
push
in
xchg
enter
daa
paddd
cmpsl
movsbl
jg
inc
and
adc
scas
cmpsl
xchg
adc
mov
sahf
daa
adc
xchg
mov
sbbl
add
stos
incl
mov
call
jg
adc
jl
pop
jge
sbb
into
mov
push
jl
out
nop
or
sbb
stos
jmp
les
outsl
mov
fildl
pop
fiadds
rol
jae
imulb
mov
mov
add
xchg
test
pop
mov
in
std
pop
push
leave
insb
sbb
dec
sti
add
lcall
in
push
xchg
mov
insl
mov
pop
outsl
clc
outsl
push
js
mov
cmp
xor
pop
sub
arpl
lea
or
and
pusha
scas
push
movsl
idivb
jns
roll
inc
ds
mov
pusha
sub
mov
push
pop
mov
enter
jno
sbb
mov
out
pop
test
cmp
cmp
jge
dec
mov
loopne
stc
rcll
sbb
out
push
xor
cmp
xchg
jecxz
mov
insb
arpl
push
fwait
jl
sbb
rclb
subl
lret
ret
sub
add
or
rcl
pop
mov
cmpl
xchg
or
adc
dec
cmp
lcall
fcoml
push
adcb
out
pop
jnp
sbb
ret
and
mov
xor
sahf
mov
push
mov
or
dec
push
in
sar
cmp
repnz
gs
and
test
pop
pop
aam
out
dec
mov
adc
xchg
inc
mov
stos
inc
rorb
mov
test
and
inc
or
add
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
jmp
test
push
inc
sbb
jnp
inc
sbb
sub
pop
jo
loop
sbb
adc
sbb
xor
push
dec
cltd
rclb
inc
addl
pop
popf
ja
call
cmp
xchg
inc
inc
add
add
dec
mov
add
lahf
inc
xor
push
lods
jo
aam
std
sbb
fiadds
enter
int3
dec
dec
outsl
enter
fidivrs
and
lock
push
dec
hlt
test
mov
repnz
adc
ret
fucomip
jge
pop
mov
repnz
jmp
rcl
ds
js
stos
incb
pop
stos
fwait
push
sbbb
popf
mov
add
mov
push
lds
pop
idivl
flds
push
pop
popa
pusha
or
sbb
push
xor
nop
jecxz
xor
daa
or
jns
fwait
cmp
mov
in
inc
cwtl
xchg
pop
dec
mov
jae
push
push
scas
out
xchg
out
sub
xchg
cmp
jae
adc
jp
pop
pop
sub
jge
stc
push
jno
loop
fcompl
cmp
lds
loop
mov
xor
call
lret
ss
inc
jle
mov
mov
xchg
mov
shrl
push
fidivrl
data16
jg
in
in
xchg
int3
lods
jbe
push
sbb
fisubs
out
mov
das
pop
test
daa
mov
xor
sub
sti
adc
aad
popf
movsb
lds
xor
xchg
jmp
push
dec
sub
dec
jl
jmp
xchg
test
mov
pop
adc
test
add
sub
movsl
adc
daa
cwtl
movsl
add
mov
push
test
shl
leave
adc
and
mov
mov
je
jg
jle
inc
lods
mov
arpl
pop
imul
push
push
jne
mov
and
and
test
mov
and
ljmp
xchg
adc
push
mov
pop
pushf
cs
in
xor
lret
fs
fldl
mov
fsts
repz
insb
aad
ljmp
xchg
xchg
mov
ror
and
cmp
lret
and
mov
xchg
xor
loopne
int
stc
arpl
push
data16
sub
stc
aam
inc
out
in
push
icebp
ja
push
xor
cmp
and
imul
sub
movsl
add
pop
xor
pop
or
add
mov
std
cmp
test
shr
mov
fdivs
sbb
pop
into
sbb
jae
shrb
stos
out
sbb
rclb
sbb
and
jmp
sub
aad
xor
jl
mov
stc
ffreep
sub
lret
cmpsl
loope
sub
out
sbb
fidivs
and
popa
push
cmpsl
pop
jmp
push
inc
cmc
mov
push
repnz
push
push
adc
push
sub
jbe
pop
stos
sub
sbb
test
push
rorb
fsubl
xor
iret
jl
std
adc
sti
inc
fs
add
jl
mov
lock
mov
les
add
push
push
xor
aaa
or
mov
lds
cmp
xor
cmp
popa
cmp
dec
jbe
dec
push
dec
xchg
mov
aad
sbb
cmp
sahf
jo
adc
adc
add
mov
jns
cld
xor
adc
jnp
std
and
jp
mov
inc
mov
fwait
xchg
adc
arpl
push
fistl
cmp
mov
fidivrs
mov
cltd
dec
pop
iret
repnz
out
pop
xor
pop
fidivrs
inc
imul
stos
push
and
int3
incb
jecxz
imul
adc
add
pop
or
adc
mov
pop
mov
jae
mov
jo
cmpsl
lods
pop
or
pop
mov
mov
popa
push
mov
adc
jg
mov
ret
xor
imul
test
inc
push
mov
xchg
rep
and
jmp
push
dec
vcmppd
mov
adc
pop
scas
adc
push
jg
pop
mov
subb
jo
mov
decl
flds
add
cld
or
xchg
inc
stos
aad
std
and
mov
clc
stos
sbb
aam
lods
mov
popa
push
push
ljmp
xchg
and
or
shlb
mov
xor
ds
rsqrtps
sbbb
lock
mov
gs
fsubrl
push
or
ljmp
jmp
into
daa
sahf
or
add
int3
xchg
push
mov
mov
mov
shll
dec
cmp
in
mov
xchg
scas
mov
adc
sub
mov
std
sbb
jl
popf
ret
sahf
js
adc
cld
scas
std
pushf
mov
imul
int
cmp
call
mov
xchg
lds
xor
sbb
aad
xor
xchg
imul
add
adc
push
mov
cmp
or
mov
add
div
mov
xor
div
xor
mov
jmp
aam
sbb
and
test
push
fcomps
sbb
adc
sbb
xor
or
idiv
xor
cmp
jle
je
int3
scas
adc
loope
mov
pop
xor
mov
push
cmpsl
fdivrs
ret
adc
sub
add
pop
incl
mov
lods
jbe
mov
inc
or
sbb
std
sbb
in
js
jae
test
dec
jmp
add
enter
mov
mov
cmp
xchg
dec
ffreep
pusha
out
pusha
stc
mov
add
lret
ja
mov
out
aam
je
inc
insb
dec
pop
push
jno
les
mov
stc
sub
lret
stc
pushf
lock
andb
arpl
pushf
mov
and
rcr
fdivrs
adc
out
xchg
xor
push
or
inc
arpl
mov
iret
mov
mov
aad
ret
cmc
andb
lahf
bound
into
xchg
xor
xor
pop
fwait
icebp
pop
test
les
repz
mov
jmp
stc
xchg
scas
push
sbb
aaa
mov
dec
ds
ficoms
subl
jae
lock
jle
and
adcl
mov
scas
fildll
mov
ss
cmpl
clc
jmp
lret
enter
mov
and
test
mov
sub
cli
cmp
rorl
or
jnp
sub
cli
mov
loop
and
int3
push
pop
shl
mov
sub
push
test
negb
cmp
repnz
jecxz
dec
adc
jge
sub
sub
mov
daa
popf
xchg
xchg
and
test
jnp
cmp
pop
mov
arpl
cmpsb
xchg
cltd
mov
loope
sbb
rclb
xchg
fs
sbb
mov
ja
cli
jae
or
in
outsl
imul
mov
cmp
or
jb
add
fwait
mov
jg
test
add
addb
cmpsl
cmpsl
dec
mov
lahf
push
in
inc
pop
pop
inc
push
mov
and
fs
sysexit
push
xchg
jle
loope
test
lret
andw
add
mov
add
inc
sbb
push
ret
inc
stos
shll
insl
jg
xor
xor
sub
cmp
daa
rorb
jp
xchg
call
jns
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
jmp
test
in
gs
les
jo
outsl
iret
jo
rcrb
sbb
adc
sbb
repz
push
mov
push
fld
mov
fwait
or
lods
lock
sub
sar
pop
mov
in
pushf
faddp
and
xor
cld
cmp
jle
stc
dec
sbbb
sbb
cltd
inc
cli
add
sub
pop
adc
mov
jg
ret
jns
fmuls
adc
fsqrt
rcrb
add
movl
jp
or
leave
adcl
fs
mov
xor
hlt
iret
pusha
bound
adc
push
cmp
movsl
and
jl
nop
xchg
mov
xor
and
dec
sub
lods
out
jmp
jb
jne
fs
divl
cmp
fldl
pusha
mov
call
jnp
sbb
pop
adc
jecxz
mov
lahf
cmpb
pop
fisttpl
cmpsl
out
mov
add
xor
clc
jbe
inc
fidivrs
inc
jae
push
push
cmp
aaa
and
jbe
mov
xor
cmp
inc
jg
das
jae
sub
dec
or
sbb
gs
jnp
push
jp
xor
mov
push
jae
push
jp
fs
iret
test
cmc
jae
ror
pop
mov
ss
xchg
mov
movl
test
addr16
sarl
sbb
aaa
aaa
mov
sbb
adc
sarb
mov
loopne
pop
mov
dec
or
push
aaa
lods
dec
jne
jb
inc
mov
mov
push
jecxz
pop
mov
inc
push
and
outsb
cmp
jb
je
sub
pop
cmpsl
fnstsw
fwait
sub
mov
repz
mov
pop
lds
mov
iret
lock
dec
clc
imul
cmpsb
inc
push
cmp
in
cmpsb
lods
xor
xrelease
xor
int3
fistl
stos
jbe
push
mov
cmp
jo
inc
lret
sub
out
adc
inc
cmc
push
cwtl
jo
cmp
cmp
iret
xchg
mov
mov
and
mov
ja
movsb
lret
sub
outsl
or
cltd
pop
add
xchg
andb
mov
adc
out
pusha
into
xor
out
out
sub
insl
movsb
lea
mov
insb
movsl
mov
xchg
pop
test
cld
shr
adc
sub
jmp
das
inc
or
adcb
add
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
jmp
rep
add
mov
inc
leave
jl
jnp
jle
int3
sbb
rclb
sbb
or
add
arpl
pop
lods
popa
cltd
lds
xchg
pop
out
sti
mov
fwait
xchg
dec
sbb
fisubrs
loop
pop
icebp
enter
shlb
jge
xor
movb
xchg
and
andb
repnz
sub
push
in
cmpsl
out
out
nop
push
mov
mov
mov
fidivs
push
xchg
jne
fs
jb
mov
pop
add
aad
fwait
mov
inc
loopne
dec
xor
mov
cmp
inc
fbld
pop
ljmp
fcomip
mov
mov
pcmpeqd
stc
fnstenv
cltd
push
cmpsl
sub
cmp
cmp
in
xchg
stos
ljmp
fwait
cld
subl
rcrl
mov
adc
aam
mov
jmp
sti
call
dec
dec
push
gs
ret
push
in
cmp
ljmp
sub
sub
adc
mov
aas
pop
test
and
and
xor
jno
outsl
xor
inc
xchg
daa
jg
jge
jmp
cmovge
popf
call
movsl
sbb
in
fwait
cmp
push
cmp
pop
test
inc
mov
lds
arpl
xorb
sti
mov
inc
cmpsb
call
imul
mov
push
rcl
cmp
pop
and
dec
push
mov
push
and
and
push
icebp
xor
dec
popf
mov
dec
nop
in
ret
xchg
es
rol
ljmp
cltd
pop
inc
pop
sbb
jae
jb
or
je
dec
mov
xchg
pop
cmp
in
push
loope
fwait
mov
dec
jle
mov
mull
add
fdivs
in
cmp
fiadds
xchg
mov
lods
dec
loopne
jle
cmp
fsub
std
test
fsubrp
loopne
mov
ja
cmp
or
repz
cmp
xchg
rcrb
dec
mov
sub
adc
jg
xchg
jo
xchg
mov
in
and
dec
test
out
stos
xchg
or
add
cmp
jb
popa
push
pop
loopne
mov
scas
inc
dec
lret
rcrl
iret
add
cmp
scas
pop
add
cmp
xor
sbb
stc
mov
pop
rorb
xchg
sub
xchg
push
es
dec
pextrw
xor
es
jno
xor
imul
sbb
jno
test
inc
lock
add
jmp
sub
mov
inc
pop
and
leave
out
jle
dec
imul
adc
sbb
sbb
js
sar
lea
aaa
sbb
mov
lock
adc
add
test
xchg
fcmovb
outsl
mov
enter
scas
xor
stos
sbb
adc
int3
and
ljmp
mov
add
push
idivl
push
mov
dec
dec
mov
dec
jbe
fsubrl
mov
outsb
pop
ret
mov
xchg
sbb
test
fwait
inc
test
jmp
lea
hlt
mov
mov
test
jge
cwtl
xlat
popf
aam
mov
call
into
punpckldq
ds
jmp
clc
jecxz
mov
out
mov
xchg
mov
pop
xchg
enter
mov
push
test
sbb
dec
adc
leave
jmp
or
pop
xchg
ja
dec
dec
dec
in
or
jno
inc
adc
cmpsl
xchg
xlat
pushf
push
int
push
mov
mov
push
fistps
std
outsl
out
lods
negl
popl
add
mov
fidivs
ror
fsubs
lds
stos
sbb
xor
out
jbe
aam
xor
leave
dec
aas
lret
loopne
or
insb
pop
repz
push
sbbl
and
push
push
dec
jae
testb
scas
faddl
or
jno
test
aam
sbb
aad
add
cltd
xchg
and
lret
pushf
jle
push
and
jmp
xor
scas
fsubr
scas
jae
xchg
mov
lret
addr16
jl
xchg
sbb
fldl
sub
fsubrl
cld
dec
mov
jb
pusha
xor
add
xorb
inc
adc
and
jb
test
cmp
xchg
in
sbb
mov
aam
jecxz
fcmovnb
out
in
test
add
xor
stos
in
sbb
fmull
les
lret
bound
rolb
mov
daa
movsb
lret
or
jle
push
inc
mov
stos
std
sbb
mov
loopne
std
inc
jb
stos
fcoml
adc
test
mov
movsl
pop
cs
popa
add
xor
je
data16
arpl
add
ljmp
dec
sahf
mov
mov
stos
pop
out
inc
and
fbld
outsb
fcoms
test
adc
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
jmp
mov
and
ss
xorl
rclb
sbb
movsb
testb
or
add
push
xlat
cltd
sbb
sbb
push
add
dec
rcrb
xor
loopne
arpl
lret
add
cmp
sbb
mov
mov
aad
jge
call
dec
add
mov
push
bound
stos
jp
dec
jbe
jb
or
mov
adc
xchg
cmp
mov
loop
inc
jbe
sbb
bound
cltd
subl
dec
and
add
or
mov
cmp
inc
pushf
lock
cwtl
ficompl
popf
repnz
dec
mov
movsl
and
sahf
inc
sub
cmp
adc
mov
jmp
push
mov
adc
push
arpl
adc
cmovb
xor
and
fs
loop
add
std
cmp
movsl
inc
loope
push
pop
jnp
mov
pop
test
mov
cmp
and
pop
aad
mov
popf
fmull
push
rcrl
insb
cltd
sarb
testl
lods
jge
mov
or
mov
add
clc
xor
sbb
xchg
add
in
add
push
dec
mov
cmp
xor
in
xor
jns
pop
mov
dec
shr
ret
lret
das
aaa
adc
dec
add
mov
and
jns
mov
pushl
lea
inc
dec
pop
aam
mov
pop
inc
movsb
push
mov
sbbl
add
sub
pusha
loopne
adc
push
lds
lds
sahf
ja
shlb
movsl
shr
or
cld
dec
and
pop
cld
and
jne
mov
outsl
adc
insb
adc
test
cmpsl
into
and
mov
test
sahf
mov
sahf
jo
inc
push
inc
dec
outsb
addl
dec
jns
or
dec
nop
adc
les
and
jl
call
push
dec
inc
push
inc
xchg
mov
cmp
mov
xor
dec
add
fdivrl
jecxz
add
mov
fcoml
cltd
adc
movsl
lds
dec
jns
adc
jb
in
enter
imul
fs
rclb
jmp
mov
xor
jno
js
fnsave
mov
jmp
es
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
jmp
orb
loop
sbb
call
sbb
fistpll
mov
sbb
ja
aaa
stc
das
sub
outsb
repz
shr
movsb
xor
push
sub
adc
fwait
mov
jge
or
scas
push
inc
add
aaa
lea
xchg
jno,pt
ret
hlt
movb
test
stos
jbe
push
fistpl
push
dec
push
xchg
and
fstl
out
add
adc
test
popa
or
stos
je
push
push
fidivrs
add
je
jg
pop
cmp
inc
dec
lock
cmp
cmp
test
es
sub
out
push
cmp
sbbl
shl
aam
sub
clc
outsl
fistl
test
cmpsb
movsb
sbb
lahf
push
insl
push
xchg
ror
stc
fs
adc
icebp
pop
xchg
mov
subl
cmp
push
and
icebp
leave
mov
into
pop
jb
dec
push
nop
sar
adc
mov
pusha
outsl
call
fld
mov
sti
int3
pop
pop
je
aam
das
popf
add
add
mov
mov
movsl
scas
sarb
outsb
sbb
ret
pop
repnz
in
inc
add
cltd
ror
mov
cld
push
mov
enter
lea
stos
sub
leave
lret
in
stos
jl
or
xchg
jno
add
xor
fsts
es
xor
dec
insb
call
jg
insl
cwtl
jne
mov
in
dec
mov
push
xchg
push
nop
rcll
pop
ja
add
mov
xor
data16
in
mov
dec
dec
cmpsl
leave
add
ljmp
jns
movsb
cmp
outsl
clc
dec
jno
fisubs
jmp
insl
and
or
pushf
imulb
mov
sub
out
sub
clc
hlt
jne
sub
xchg
lahf
movsl
in
aam
xchg
adc
add
inc
and
inc
inc
aaa
fisttpll
scas
jg
mov
mov
pop
dec
cld
add
inc
or
movsl
mov
nop
sbb
nop
out
jo
fwait
nop
xchg
imul
inc
insl
or
outsb
pop
push
mov
cmpsb
xchg
gs
mov
dec
movsl
cmc
push
adc
pop
mov
or
out
mov
daa
push
pop
arpl
push
cmp
mov
in
mov
hlt
movsl
xchg
ljmp
in
aam
call
and
loope
push
adc
mov
adc
pop
sub
cmpsb
or
js
xor
rclb
adc
and
aam
out
mov
dec
data16
shl
testl
add
add
rorb
push
mov
mov
mov
imul
mov
imul
or
mov
or
xor
jmp
subb
pushf
sbb
pop
mov
inc
or
mov
sbb
pop
mov
adc
adc
xchg
jg
push
std
mov
inc
push
out
adc
clc
mov
push
fs
in
movsb
inc
insl
ljmp
test
mov
mov
mov
clc
xor
sbb
divl
adc
out
shll
jnp
mov
shll
mov
idiv
xlat
filds
orl
test
ret
clc
and
jno
inc
call
mov
mov
push
mov
test
push
sbb
jno
mov
xchg
push
sub
push
std
inc
xor
leave
int
lret
test
ss
pushf
mov
leave
stos
pop
ljmp
into
mov
add
dec
xor
and
xor
test
xor
push
mov
fstpl
lcall
dec
aas
sbb
mov
mov
pop
push
mov
and
add
cld
imul
sbb
je
push
int3
xor
stos
call
sub
dec
loop
push
mov
shlb
aad
pushl
mov
add
or
and
ss
cld
subl
pop
and
mov
inc
fs
add
imul
enter
cmp
cmp
pop
arpl
sub
push
ret
jecxz
dec
rclb
mov
lds
dec
insl
mov
lds
jge
jo
lods
lahf
sub
aam
jae
dec
adc
arpl
xor
adc
dec
sbb
mov
xor
je
test
cmpsb
adc
and
sar
call
mov
xchg
or
pusha
test
cmp
ret
sbb
jae
out
xchg
cli
cltd
jae
cwtl
in
loopne
sub
les
push
pop
iret
lcall
mov
push
xor
insb
mov
inc
shll
and
mov
mov
pop
adc
jl
xchg
inc
dec
push
outsl
je
loopne
add
xlat
out
insl
ret
mov
lock
inc
inc
loop
mov
mov
int
pusha
mov
rorb
cli
pop
gs
jle
into
repnz
test
mulb
cmp
or
dec
hlt
cmp
jmp
fwait
mov
loopne
mov
jmp
lahf
in
cwtl
test
xchg
or
xchg
lea
mov
and
add
xor
add
cmp
jmp
cmp
daa
sub
xor
sbb
rclb
sbb
arpl
addb
fstpt
pop
pop
out
or
arpl
sub
xor
repz
bound
popa
lea
icebp
or
testl
mov
pushf
inc
dec
lods
pop
jg
aaa
sahf
mov
lcall
mov
ret
sub
jmp
ja
fisttps
push
mov
mov
cld
dec
lret
popf
sti
and
mov
push
inc
mov
stos
rorb
jp
jne
sbb
and
sub
push
inc
jb
aas
cmp
cmpsl
pop
enter
dec
xchg
pusha
test
xchg
pop
jbe
cltd
ja
insl
adc
dec
and
inc
inc
nop
xchg
lcall
mov
adc
imul
jecxz
xchg
popa
dec
js
insb
adc
jae
pusha
mov
in
pop
sti
sub
ficoml
aas
jg
jmp
fbstp
cld
inc
adc
jo
fistps
pop
lret
fwait
or
xor
lea
mov
or
or
sbb
jl
aad
pushf
cmp
repz
mov
je
mov
jecxz
jmp
pop
push
sub
mov
sub
mov
push
jnp
inc
or
sahf
sbb
xchg
mov
rorb
dec
xor
mov
jno
scas
jb
outsl
push
xchg
push
test
test
mov
mov
fcoms
lret
xor
out
loopne
jns
mov
jbe
fucom
push
pushf
xchg
sbb
cmpsl
xlat
out
inc
das
rcrl
lea
stos
fildll
aam
fs
push
repz
fisubrl
aad
pushl
das
dec
cwtl
mov
imul
sbb
and
cmpsl
lea
cli
add
mov
stc
mov
arpl
fcompl
imul
mov
or
mov
popl
mov
test
xor
pusha
push
and
aaa
ret
sbb
mov
addr16
pop
out
ret
out
ss
cmpl
and
xor
jp
test
jmp
cmp
xchg
xor
push
mov
inc
dec
mov
in
in
mov
out
push
cmp
and
add
jg
mov
mov
jle
mov
fimull
lret
dec
sub
jnp
sbb
xor
mov
out
sbb
insl
lret
test
idiv
lcall
mov
mov
inc
lcall
sub
sbb
adc
sbb
xchg
aad
push
and
out
xor
jl
pop
test
jle
adc
add
int3
cmc
sub
mov
adc
fisubrl
gs
enter
xchg
xor
ja
sbb
jmp
imul
mov
stos
test
inc
or
fldt
addr16
xchg
jge
test
xchg
inc
imul
out
jmp
test
jb
sahf
push
aad
mov
nop
faddp
mov
dec
data16
stos
mov
lahf
ja
aam
push
mov
outsl
cmp
shll
out
fildl
cmp
pop
adc
or
ja
pop
adc
and
mov
stos
insl
push
mov
or
lret
and
xchg
ljmp
sbb
and
leave
cltd
xor
dec
subl
iret
sarb
xor
mov
xor
fldcw
mov
cld
call
mov
adc
sbb
jg
lahf
in
mov
test
lods
pop
inc
xor
lods
mov
sbb
xchg
pop
xlat
mov
cmpsl
rcl
jne
mov
jnp
add
shl
lock
loope
add
das
ljmp
jmp
push
mov
sbb
out
ret
adc
jbe
lret
sub
dec
jbe
and
imul
std
dec
sub
stc
push
sar
aam
clc
mov
lahf
rcrl
inc
push
stos
xor
outsb
mov
in
mov
push
inc
or
test
dec
pusha
fs
testl
fdiv
sub
decl
out
push
test
cwtl
xlat
in
arpl
or
pusha
repnz
in
outsl
lret
mov
pushf
scas
ret
fnstsw
cmpsl
jb
jo
push
push
aaa
adc
push
jno
ffreep
imul
push
push
add
sub
sub
jno
or
add
or
or
insb
push
jns
aas
ret
ret
cmp
and
fistpl
inc
cwtl
in
mov
push
sbb
add
pop
lahf
data16
jo
mov
outsl
out
mov
add
dec
push
cmp
mov
dec
popa
push
adc
xchg
outsb
add
xchg
cs
xchg
movl
ret
push
mov
sub
push
push
movl
movl
mov
jmp
outsb
rolb
jnp
cmp
ret
push
into
mov
sbb
push
nop
loopne
sbb
or
adc
in
popa
scas
je
out
mov
sahf
jo
cmc
in
mov
mull
push
mov
pop
clc
addr16
sbb
out
call
les
cmp
cmc
lahf
xchg
ret
pusha
pop
xor
sbb
and
inc
and
xchg
outsl
push
jl
push
int
dec
inc
mov
clc
push
fcoml
and
mov
fs
jno
addl
or
sbb
sbbl
cmpsb
push
jno
test
cli
fincstp
je
jae
or
lcall
pop
jmp
movsl
cmpsl
imul
xchg
cs
mov
mov
sub
xor
xor
sti
adc
in
out
int
cmpsb
pusha
jnp
sub
push
jno
mov
add
stc
add
adc
push
shlb
mov
and
dec
outsb
cmpsb
xor
adc
scas
dec
addr16
xor
cmp
bound
or
fiadds
call
fisttpl
ror
cmpsb
cs
dec
ja
mov
lods
sub
cmp
mov
mov
add
jp
inc
push
mov
or
or
mov
xchg
lcall
inc
into
mov
mov
push
mov
dec
inc
ret
mov
inc
mov
cmp
ret
pop
jbe
sbb
sbb
push
loope
test
das
cmp
out
lods
xchg
push
add
and
xchg
addl
rcrl
loopne
push
adc
aam
sub
sti
push
xor
fs
mov
decb
mov
and
repz
xor
inc
inc
ss
cmc
in
mov
lods
mov
in
xor
rolb
nop
pushf
addr16
loopne
jns
sbb
gs
jns
test
mov
cld
push
popf
test
cmp
cmp
push
mov
lret
pop
popf
in
or
popa
dec
ljmp
ret
in
in
push
in
push
fldt
push
push
mov
mov
and
sbbb
inc
sub
jg
sub
ret
sub
out
ret
or
lahf
ljmp
aam
xchg
cmp
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
jmp
mov
pop
mov
stos
and
sbb
shll
sbb
outsb
test
cs
movsb
or
adc
lret
or
or
push
xchg
push
outsl
jg
jl
cld
out
fwait
in
fsubs
mov
lea
cmp
sahf
int
mov
push
xor
sbb
mov
mov
test
or
out
inc
into
imul
out
cmp
mov
cmp
xor
push
dec
cmp
xor
dec
pop
ljmp
push
mov
dec
jo
in
xor
xor
stos
mov
sarb
or
out
stos
mov
mov
popa
push
je
pop
mov
movsl
xchg
mov
ret
push
pusha
std
xchg
push
test
adc
or
out
xchg
adc
xor
pcmpeqw
cmpsl
lcall
cwtl
pop
inc
jl
adc
scas
inc
push
pushf
push
ljmp
dec
sub
cmp
pop
cmpsb
mov
mov
cmp
xchg
inc
outsl
cmp
xchg
mov
xchg
inc
test
sbb
cld
mov
xlat
dec
js
mov
repnz
loope
pushl
mov
mov
xchg
fst
sub
cs
jno
lahf
test
scas
pop
push
loope
mov
add
mov
dec
movsl
scas
in
fiadds
xchg
rcr
and
xor
and
push
clc
xchg
push
lahf
adc
sti
mov
test
xor
ret
xchg
mov
outsb
inc
jle
and
mov
dec
js
enter
push
sub
sub
out
daa
jne
dec
cltd
lea
scas
fs
pop
mov
das
das
push
lds
fisubrs
stos
addb
clc
jle
xorb
inc
leave
sbb
negw
daa
test
cli
fldenv
jmp
push
or
int3
jmp
ret
dec
es
sub
xor
mov
outsb
xchg
cmp
dec
inc
jbe
imul
pusha
ret
jne
push
dec
cmp
cmp
xlat
jecxz
aaa
xchg
fsubl
xor
add
adc
js
pop
mov
mov
cli
inc
jecxz
push
or
subb
sub
sub
mov
mov
mov
mov
and
cmp
dec
hlt
mov
jae
nop
stc
sbb
dec
ss
mov
or
cmp
fiadds
push
enter
aas
add
dec
sub
jmp
in
dec
jecxz
lods
push
repz
shrb
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
jmp
fiadds
rcrl
dec
fisubl
out
mov
mov
mov
push
mov
out
mov
push
test
fwait
cmpsb
and
mov
mov
leave
fiaddl
mov
inc
xchg
xchg
add
divb
imul
clc
popa
andl
jnp
jbe
jb
test
pop
push
aas
mov
fisttps
sahf
movsl
iret
and
mov
pop
test
out
or
dec
lods
loopne
lcall
call
cmp
mov
mov
cmp
inc
out
mov
jl
andl
or
sti
push
add
xchg
xchg
aam
sti
dec
pop
test
push
insl
xchg
clc
mov
mov
loope
mov
mov
pushf
pop
jg
sbb
cwtl
lea
mov
cwtl
jecxz
adc
and
jle
xor
mov
push
add
ss
cld
arpl
stos
inc
xchg
push
and
mov
hlt
add
cmp
xchg
add
push
movsl
outsl
mov
push
push
or
rcll
pop
cld
mov
fstps
and
sub
gs
shrb
dec
inc
sub
push
jle
sub
movsb
pop
xorl
cmp
fildl
jno
subb
imul
push
sbb
daa
cmp
cmpl
mov
inc
pop
jl
inc
call
ffree
iret
push
lret
dec
pop
jle
mov
sbb
jl
mov
xor
mov
jb
mov
out
mov
mov
daa
pop
ja
inc
adc
mov
cmp
lcall
mov
dec
in
outsl
add
mov
in
adc
cmp
sub
mov
fcoml
push
daa
les
mov
das
mov
or
out
enter
icebp
dec
and
add
sub
push
mov
mov
sbb
gs
adc
or
lea
xchg
xor
mov
repz
sbb
or
sbb
pop
adc
lcall
xor
mov
pop
and
iret
aas
daa
icebp
inc
popf
aas
jnp
mov
jmp
sti
lds
mov
dec
xor
mov
divb
fnstenv
pop
fimuls
in
mov
imul
addr16
inc
or
and
or
cmpsl
cmpsl
or
lea
add
add
xor
xor
mov
div
cmp
jmp
ss
jnp
pop
xor
out
cltd
mov
mov
orb
pop
or
and
jae
addl
sbb
sti
lret
lock
mov
pop
push
loop
fnstenv
sbb
rcrl
scas
popf
mov
sub
adc
mov
push
popf
sub
insb
movsb
adc
jb
ss
or
stos
cmpsl
mov
or
lods
mov
inc
and
popf
mov
int
and
test
sbb
fwait
into
fsubrl
bound
ret
pusha
lcall
dec
inc
mov
pop
cmp
xlat
ret
mov
mov
mov
scas
repz
in
mov
mov
out
in
scas
dec
mov
xchg
add
inc
int3
push
pop
mov
lods
imul
fs
js
rcrb
push
lods
inc
jne
mov
jo
add
test
lahf
mov
je
inc
dec
adcb
mov
test
lds
pop
or
ret
repz
push
dec
jne
dec
jne
lds
jns
fisubrs
imul
dec
js
and
and
mov
iret
jb
daa
dec
sahf
and
mov
cmpsb
cmpsl
xchg
movsw
and
ja
lods
jne
cmp
mov
movsb
xor
xchg
imul
add
rorl
out
pop
sbb
jge
mov
fwait
add
roll
data16
push
mov
sbb
push
arpl
jmp
mov
sbb
cmpsb
fisubs
xor
in
notb
push
js
xor
xor
leave
cmp
adc
mov
jmp
pop
lods
mov
sbb
std
outsb
fwait
sub
adc
cli
sti
mov
aam
sti
insb
jno
push
sub
jmp
pop
adc
xchg
mov
cmp
fs
fadds
lret
daa
dec
push
dec
test
sbbl
popf
and
mov
loop
out
xor
or
daa
arpl
fstl
dec
or
push
ret
pushf
loopne
scas
xchg
push
mov
out
lahf
pushf
xchg
sub
in
sbb
jl
clc
pop
xor
iret
sti
jle
cmc
data16
dec
inc
popa
cwtl
clc
sub
fmul
mov
leave
xor
push
lret
inc
std
in
sub
jne
dec
and
mov
sbb
xorl
xor
dec
mov
sarb
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
jmp
sbb
cmpsb
fs
mov
mov
jmp
sbb
rclb
roll
inc
inc
cli
movsl
scas
push
xor
in
frstor
pop
dec
xchg
int
mov
sub
insl
pop
xor
lea
xor
loopne
xor
subl
and
inc
movsb
out
dec
das
jno
add
sub
push
fxch
movsl
mov
scas
jp
mov
ret
rcl
pop
mov
icebp
stos
repz
sub
ss
adc
and
inc
jmp
mov
or
mov
sbb
jae
sbb
lret
int
and
and
inc
and
repnz
aam
sahf
adc
repnz
popf
in
dec
pop
add
and
fwait
adc
loop
icebp
orl
pop
andb
divb
movsl
mov
cmc
lcall
gs
sbbl
cmpb
bound
xchg
mov
mov
mov
jb
inc
ficoms
icebp
xchg
stos
sbb
lds
sbbl
xor
adc
bound
and
xor
adc
stos
in
push
push
cmp
imul
xchg
push
dec
jle
out
out
xor
es
jnp
lods
jecxz
add
push
add
pop
inc
mov
ljmp
leave
adc
mov
mov
cli
ret
xchg
mov
inc
pop
stc
mov
or
sbb
jp
dec
adc
fucom
fstpt
imulb
xchg
imul
leave
imul
call
sub
push
push
movsl
inc
push
mov
cmp
sbb
and
aad
daa
xor
repnz
hlt
push
enter
fcoml
sub
cmc
dec
shr
xor
push
push
out
sbb
cltd
mul
jmp
xorb
jecxz
xchg
rcrb
xor
mov
push
dec
loope
jle
mov
xchg
orl
inc
cmp
gs
movsb
lds
jo
sbb
add
sub
mov
in
xor
cs
fisubrl
cmp
mov
jg
data16
xchg
es
inc
and
mov
hlt
ds
and
mov
fiadds
or
mov
outsl
sbb
adc
sbb
fsub
dec
int3
push
bound
stos
xlat
adc
imul
fisttpll
and
fimull
push
shl
frstor
sub
stos
xor
ljmp
xchg
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
jmp
pop
jp
movsb
mov
fsubl
sbb
xchg
mov
lcall
jmp
xchg
and
cmp
dec
jnp
inc
bound
sub
test
xlat
xorl
mov
nop
xor
out
outsb
ljmp
movsb
dec
inc
scas
and
or
mov
push
scas
lods
mov
sub
aam
jns
fnstcw
lock
imul
mov
push
mov
sbb
inc
test
out
sub
jae
or
cmp
lock
xchg
mov
jl
sub
imul
aas
sbb
lret
mov
aaa
stc
fs
push
fdivl
inc
rolb
test
add
xchg
pop
mov
addr16
mov
scas
mov
inc
frstor
test
ds
adc
ja
cmpsl
incl
jp
xor
icebp
fisttpll
pop
imul
pop
xor
aaa
inc
push
sbb
dec
cmp
fwait
xchg
cmp
bound
mov
psrad
aam
sub
pop
mov
insl
mov
cmp
push
push
dec
xchg
adc
aam
test
xchg
fsubr
iret
pop
cmp
call
lahf
pop
mov
nop
and
push
stc
out
xor
cmp
pop
loopne
mov
fidivs
and
push
jecxz
test
mov
jg
sahf
fmull
sbb
pop
sbb
ja
add
mov
fdiv
mov
insl
icebp
cmpsb
clc
ret
pop
loop
inc
adc
or
dec
iret
cmovge
jnp
jge
aad
repz
push
cmp
xchg
scas
mov
add
pop
add
out
or
push
or
mov
mov
inc
scas
push
sub
mov
stos
mov
mov
loop
ret
xchg
fwait
push
shll
andb
mov
outsl
clc
insl
mov
inc
jg
sub
pusha
and
dec
inc
xchg
repz
jns
addb
add
fiaddl
in
lahf
xchg
jo
cmp
or
mov
add
sub
hlt
popf
cmp
adc
cmp
or
dec
outsb
in
movsb
inc
stos
jo
ja
out
mov
mov
pop
mov
out
sahf
icebp
cltd
xor
add
mov
call
push
cmc
or
xchg
inc
mov
popa
adc
push
push
mov
idivl
insl
addr16
push
ds
mov
add
sbb
testb
bnd
add
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
jmp
jno
xchg
mull
mov
ljmp
sbb
std
or
sbb
mov
lahf
lds
movsl
sahf
ficoml
inc
or
movl
repz
pop
adc
mov
cmp
jmp
dec
out
xor
push
mov
lret
xor
mov
scas
movsl
das
in
movsb
xor
test
pushf
sbb
xchg
sub
pop
dec
mov
test
addr16
imul
iret
sub
lea
stos
xor
cmc
adc
push
push
repnz
push
andb
add
adc
sbb
mov
push
movsl
mov
lcall
xor
and
ja
int
aaa
or
pop
into
bound
mov
lret
add
ret
sub
lcall
push
sub
mov
sub
outsl
into
jae
xchg
je
test
mov
loop
dec
cmpsb
aaa
repz
adc
rcll
repz
pushf
mov
inc
sahf
out
lret
fsubrs
xchg
pop
cmp
std
mov
icebp
xor
das
push
lods
adc
and
jmp
stc
pop
ret
and
xor
clc
aaa
int
fucomp
mov
add
addl
mov
xor
out
xchg
cltd
or
and
pop
xchg
mov
sti
push
dec
stos
and
in
inc
mov
cmpsl
outsl
adc
or
rcl
das
shlb
dec
cmc
lods
ret
add
loop
lcall
cwtl
mov
and
fiadds
jl
pop
push
mov
mov
push
xchg
push
mov
mov
rcr
jg
sbb
add
xor
sti
filds
jne
sbb
adc
fmull
sti
inc
jae
daa
cmp
fdivl
add
mov
out
sbb
hlt
push
xor
jo
les
sub
sub
and
and
adc
sub
adc
pop
push
add
pop
ficoms
mov
in
inc
sub
dec
or
lret
jecxz
cmp
fs
and
and
jns
sbb
jge
addr16
roll
xchg
cltd
inc
mov
andl
cmc
xchg
lahf
hlt
test
fcmove
xchg
inc
iret
sbb
ds
or
insl
fstpl
fsubrs
and
pop
mov
ss
xchg
mov
mov
sub
or
cmp
jbe
stc
mov
ja
sub
hlt
mov
add
inc
add
sub
jmp
test
mov
push
xchg
jle
sbbb
lcall
stc
out
push
loopne
add
mov
fldt
rorl
scas
into
push
mov
out
pop
out
lea
repnz
popf
mov
push
or
lahf
xchg
inc
cmpsl
pop
cmp
push
inc
rcrl
lds
cmp
push
jp
cvttps2pi
subb
jb
fwait
and
jb
and
mov
push
stos
mov
repnz
mov
js
cli
adc
or
je
or
adc
sbb
rcr
push
jmp
in
flds
push
and
mov
or
das
pushf
out
cmp
adc
sbb
out
lods
clc
dec
and
jmp
pop
int3
push
sub
inc
out
movsb
add
cmpsl
in
push
adc
or
lret
push
or
mov
xor
out
xor
mov
jae
pop
das
dec
push
test
add
outsb
mov
fcomi
stos
pop
je
jns
sahf
cmpsl
sti
and
aaa
scas
mov
ljmp
dec
xlat
xor
xchg
xchg
shll
je
fcmove
data16
mov
aad
inc
mov
and
dec
mov
xchg
arpl
jle
mov
cmpsb
xor
lods
jno
xchg
ds
iret
test
xchg
cmpl
push
push
and
xchg
movsl
or
mov
xor
bound
in
nopl
test
pop
lret
movsbl
js
daa
arpl
je
xor
sbb
les
xchg
and
popa
pop
pop
in
jne
jg
cli
mov
push
sbb
sub
or
mov
dec
jae
and
jmp
testb
andl
pop
addl
ja
adc
into
mov
test
fsub
lods
mov
out
xor
fidivs
jle
sbbl
pop
push
cmp
ljmp
icebp
lock
jne
sbb
fwait
push
xchg
fucomip
inc
mov
mov
pop
fstl
incl
inc
dec
clc
test
pop
sbb
sbb
call
mov
push
popf
loope
pop
fstps
mov
arpl
mov
push
in
int
scas
repz
pop
test
hlt
mov
pop
sbb
ret
jl
lods
cmp
test
jnp
movsl
ficoml
push
dec
jnp
movl
add
add
xchg
jo
adc
addr16
test
rol
mov
inc
or
fidivrl
hlt
js
xor
and
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
jnp
push
jl
mov
adc
push
jl
sbb
sbb
xchg
in
mov
subl
cli
lcall
push
pushf
xchg
push
int3
adc
mov
ljmp
shlb
sbb
fs
jnp
pop
and
std
pop
add
clc
jge
pop
leave
adc
es
leave
push
lcall
push
bound
jns
xor
mov
or
mov
hlt
xchg
mov
roll
and
lods
addr16
mov
inc
lcall
jmp
subb
jle
leave
add
pop
shlb
pusha
cmp
inc
aad
mov
add
mov
test
mov
jns
mov
mov
cmp
push
repz
ja
jae
enter
mov
test
cmpsb
mov
sub
add
cmpsb
dec
lods
call
in
cmpsl
pop
pop
jns
cld
pop
in
mov
ja
stos
into
dec
pop
push
fucomi
js
pop
stos
cmp
mov
ss
pusha
inc
mov
xchg
pop
repnz
pop
mov
adc
shlb
mov
stc
mov
push
rcrl
pushf
aaa
and
std
adc
pop
aas
dec
mov
ss
jg
mov
add
or
adc
or
adc
or
sub
mov
scas
loope
std
add
xchg
mov
int
fstpl
lret
cmp
xchg
mov
shrl
negb
adc
ss
rclb
stc
cmp
xor
cmp
xchg
or
ret
lods
or
cmp
mov
mov
aaa
add
cmp
adc
mov
jmp
push
push
xchg
dec
inc
es
ret
mov
addr16
push
sarl
scas
mov
dec
jl
jmp
lret
mov
xchg
pop
sbb
fidivrs
or
bound
push
push
mov
ja
jne
push
jnp,pt
in
add
lcall
push
jmp
add
test
dec
sbb
add
test
pushl
test
decl
test
push
adc
add
test
ljmp
data16
add
inc
clc
shrb
add
jle
add
jo
add
dec
sub
sub
xor
mov
jno
sbb
jo
jae
cmp
shll
mov
mov
sub
ja
mov
loope
add
cs
and
aam
fbld
fadds
rclb
xchg
push
ret
pop
lock
xchg
mov
out
push
out
inc
iret
pop
rcrb
push
dec
pop
in
das
cmp
inc
jecxz
mov
or
sarb
shl
out
push
insb
and
aaa
scas
push
daa
sub
lcall
xor
mov
and
lahf
jle
dec
in
cwtl
jnp
push
cmp
into
inc
add
loop
pop
daa
push
sbb
jmp
add
sti
rorl
subb
inc
or
mov
fsubl
mov
pop
adc
mov
ja
xor
addr16
rcl
movsb
inc
cmpsb
jg
add
mov
data16
adc
adc
fadd
fs
push
sbb
cmp
out
cmpsb
lock
mov
icebp
and
mov
dec
mov
dec
jmp
sub
dec
out
push
out
test
xor
xchg
sub
loopne
jmp
and
jnp
pushf
sub
in
or
pushl
sbb
cs
lea
cltd
or
and
mov
int3
mov
push
ret
fldenv
scas
in
or
stos
mov
scas
push
push
fwait
daa
jne
cmovo
adc
adc
pop
lcall
mov
in
pop
ss
mov
xor
lds
cmp
mov
loopne
sub
loop
in
xchg
dec
mov
jge
lret
in
adc
dec
inc
mov
cmp
mov
inc
add
push
xchg
mov
sub
sbb
rcll
add
ss
hlt
test
adc
xchg
repnz
notb
test
cmp
bound
sub
push
pop
inc
push
dec
xchg
push
mov
aad
jle
cmpsb
xchg
ljmp
and
cmp
loopne
dec
sub
hlt
xor
add
in
adcb
push
push
call
mov
mov
xor
mov
mov
mov
xor
jmp
lds
fisubrs
sbb
pusha
mov
shll
je
sbb
sbb
pop
ljmp
shrb
mov
mov
repnz
repnz
loope
jecxz
adc
xchg
or
hlt
mov
or
jl
dec
mov
out
xor
mov
jl
repnz
je
mov
xor
jg
inc
xlat
jb
movsl
xor
mov
dec
call
pop
fmul
sbb
add
out
outsl
add
pop
lret
cld
push
jbe
xchg
sti
sub
in
test
inc
xchg
rcrb
incb
scas
pop
es
out
loopne
xlat
sub
and
ret
xchg
mov
hlt
inc
das
and
stos
jae
cld
or
insl
mov
in
int
and
inc
mov
sub
add
inc
cmp
jb
idivl
pop
in
cmp
arpl
jnp
bound
xor
push
cmp
ss
or
jl
pop
push
int3
orb
out
xor
inc
push
mov
adc
mov
shll
mov
xor
and
std
psubb
adc
mov
or
and
ds
loop
mov
cmp
fidivl
out
test
lods
cmpsb
add
xorb
xchg
sbbl
mov
mov
xchg
push
mov
sbb
lds
dec
sbb
ret
lret
mov
inc
or
xchg
fst
outsl
test
aaa
xor
and
adc
es
push
lock
jno
xor
cmp
cwtl
lahf
sub
js
lret
je
lret
in
inc
icebp
fnstenv
mov
hlt
or
xlat
das
rcr
xchg
aad
js
jl
int3
add
sub
lahf
ss
jb
inc
idivl
add
push
je
adc
cmp
roll
and
scas
fwait
cmc
ss
rorb
icebp
aas
aad
fldenv
dec
out
shll
movsl
bound
push
pop
mov
andl
mov
jo
mov
test
mov
inc
sbb
pop
cmc
adc
das
loope
jns
stos
stos
mov
in
loope
pop
not
sbb
push
dec
outsb
adc
insl
out
into
push
add
iret
jne
lret
movsl
jle
xchg
jecxz
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
jmp
loope
lods
aam
mov
gs
imulb
sbb
sbb
test
jmp
mov
or
test
mov
rcrb
fucomp
push
mov
pop
jno
xchg
stos
insb
cmpsb
pushf
packssdw
pusha
lahf
mov
imull
lods
lds
popf
jo
sahf
pop
and
ds
fwait
cli
loop
and
mov
push
ret
rcr
mov
addl
ret
mov
add
mov
pop
mov
add
push
add
mov
shrb
aam
add
pop
clc
cmp
cmp
mov
inc
mov
loope
jno
fbstp
jg
push
mov
add
pop
inc
jecxz
test
jne
mov
dec
pop
sbb
call
push
test
jno
fldenv
cmp
stos
sar
pop
rorb
mov
inc
cld
out
mov
cltd
fldenv
enter
out
nop
sarb
fldcw
pop
loopne
adc
jns
mov
jns
mov
pop
lret
push
ja
inc
jg
xlat
les
mov
je
push
mov
das
rcrl
loopne
xlat
and
cmpsl
adc
pop
mov
shlb
sbb
lds
mov
and
in
jne
push
or
jle
lods
jmp
into
push
push
movb
dec
inc
mov
jl
adc
repz
pop
sbb
mov
ja
jge
mov
pop
pusha
sbb
lahf
dec
loope
aas
add
lea
mov
mov
outsb
iret
mov
sbb
loop
scas
or
je
pusha
out
andl
fimuls
dec
test
fwait
adc
popf
jno
adc
inc
and
fcompl
mov
cmpsb
fidivl
jne
stos
xchg
popa
adc
fistpll
push
pop
and
mov
lods
add
jno
cmpsb
dec
pop
leave
test
xor
out
cmp
jae
or
iret
sub
iret
outsl
pop
int3
clc
jl
xor
int3
jno
mov
xchg
inc
mov
icebp
jno
pushf
push
fimull
push
popa
mov
faddl
outsb
sbb
mov
xchg
mov
xor
lahf
fmull
rcl
rdtsc
icebp
sub
push
jns
pop
or
mov
mov
add
adc
or
mov
jmp
pop
and
xor
pop
sbb
sub
sbb
sbb
imul
jmp
pop
das
jo
cwtl
jmp
xor
sub
xchg
xchg
inc
dec
and
pop
popa
test
movsl
add
adc
push
or
cld
adc
aad
and
cmpsb
pop
dec
out
jge
jmp
sub
jne
popa
pop
dec
cmp
and
add
out
into
push
cmpsb
mov
cmpsb
inc
fiadds
test
push
out
jbe
pushl
pop
scas
test
aaa
cmc
xor
push
sti
js
icebp
or
mov
pop
shrl
je
lret
mov
js
fwait
sub
aad
pop
mov
rorb
jmp
ja
adc
push
lods
mov
sub
lock
dec
jmp
fsubs
loope
mov
popf
xchg
int3
ficoml
stos
adc
pop
mov
in
in
fidivs
add
out
jno
xchg
cmp
aad
cmp
sbb
fsubrl
add
daa
mov
push
push
cli
int
dec
push
adc
sub
mov
lods
daa
jmp
pusha
cs
ret
shrl
push
les
pusha
adc
xor
mov
inc
cmp
push
push
in
mov
cmp
daa
shrl
insb
test
pop
xchg
addr16
ja
mov
test
push
or
das
mov
test
add
ret
das
sahf
test
out
mov
aad
add
ficomps
sbb
cmp
fwait
and
cmc
les
cld
mov
mov
jae
fcomip
jle
icebp
or
jg
add
adc
xchg
scas
insl
dec
lret
add
mov
faddl
ret
lods
pop
addr16
mov
cmp
pop
mov
mov
mov
cwtl
into
xchg
stos
mov
es
movsb
ds
sbb
test
add
sahf
out
fbld
mov
ja
add
lcall
mov
outsb
push
ds
je
stc
cmp
jno
push
hlt
mov
inc
mov
shll
jmp
and
sub
sahf
out
push
test
dec
aam
xchg
mov
jne
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
jmp
mov
push
jle
inc
inc
jne
sbb
mov
jno
sbb
jns
push
push
fstpt
sti
cwtl
and
mov
mov
gs
addr16
stos
repz
cmp
test
add
mov
pushf
aaa
rcl
sbb
incl
mov
mov
nop
xor
xchg
shlb
pop
xchg
cmp
sahf
lock
cmc
sbb
fisubl
push
stos
test
aaa
xchg
jnp
add
mov
movsb
pop
pop
cld
mov
cmpsb
adc
movsl
loop
outsb
push
jp
into
rolb
dec
movl
pop
mov
add
jae
mov
mov
mov
and
jbe
lahf
add
inc
pop
xor
mov
cmp
test
xchg
inc
xor
mov
xor
insl
scas
cmp
dec
mov
aaa
dec
out
addr16
mov
and
imul
jecxz
dec
inc
lds
cwtl
aad
out
mov
sub
jno
in
testl
cmp
dec
test
inc
push
test
mov
mov
sbb
mov
inc
jnp
pop
ja
insl
mov
and
cmp
cmpsb
ror
mov
mov
rorl
and
out
js
push
idivl
cmp
and
push
ss
or
jle
xchg
clc
aaa
test
fchs
ja
cltd
push
xchg
pop
jns
add
sbb
mov
pop
and
mov
test
push
sub
inc
pop
je
lds
xchg
push
xchg
fmull
scas
mov
cld
mov
mov
inc
adc
pop
inc
shlb
push
push
popa
std
loopnew
mov
repnz
push
leave
and
fists
or
mov
daa
xchg
pop
mov
xchg
mov
out
into
daa
mov
jo
push
mov
push
imul
pop
and
add
inc
and
lods
mov
or
shlb
sti
push
loop
inc
mov
popa
cmc
call
call
int3
lcall
pop
cwtl
xor
aas
fistpl
jmp
mov
inc
and
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
jmp
mov
xchg
cli
push
fistpl
jge,pn
stos
xor
pusha
sbb
jno
sbb
push
cmp
mov
arpl
push
xor
mov
ret
xchg
adc
lds
xchg
sbb
repnz
sbb
les
mov
mov
scas
dec
lea
xor
aas
mov
aaa
loope
int3
loop
pop
jnp
mov
sbb
mov
into
cltd
test
inc
push
divb
fs
loopne
add
test
add
into
jnp
cld
mov
sarb
repnz
and
sarb
imul
mov
loopne
cmp
int3
pop
mov
cmovno
out
jl
adc
jecxz
add
push
pop
sbb
pop
add
mov
outsl
inc
mov
mov
ret
cmp
mov
pushf
call
jne
test
mov
scas
nop
xor
scas
repnz
sti
xorb
negb
push
mov
ret
mov
or
fsubrs
notl
adc
pop
stc
jg
ret
mov
sub
xlat
inc
sbb
mov
je
add
fdivr
aas
inc
insl
cmp
jb
adc
mov
push
gs
das
cltd
filds
mov
and
jo
sbb
push
or
inc
mov
test
inc
or
fldcw
sub
jne
and
das
test
sbb
or
lahf
fidivl
insl
inc
mov
clc
rclb
jbe
pushf
jnp
pop
or
lea
addr16
cmpsl
mov
jecxz
xor
fs
mov
cmp
dec
scas
jae
lods
shl
mov
pop
jge
out
jmp
jns
out
cli
daa
std
dec
sbb
xchg
adc
mov
outsb
sub
xchg
or
xor
pop
cltd
add
cli
push
pop
test
movsb
cmp
gs
xchg
fstpt
mov
inc
xchg
std
xor
add
sbb
nop
pushf
fwait
int3
ret
lret
sbb
sub
or
sbb
test
outsb
mov
lahf
or
jb
rclb
icebp
add
adc
push
push
call
mov
sub
push
pop
jmp
jae
mov
sbb
jo
lret
push
pop
sbb
jno
sbb
fcomps
push
sub
mov
into
jg
shl
cltd
adc
ljmp
xor
lods
arpl
pop
idiv
mov
repz
cmpsb
aad
push
xlat
popa
add
xorb
fcoms
bound
loope,pt
ds
pushf
xchg
cmp
int
jns
mov
adc
hlt
pop
xchg
out
pop
inc
out
bound
mov
pop
sbb
loope
movsl
and
ljmp
and
mov
rcll
add
cmp
dec
int3
xchg
aaa
imul
std
mov
dec
sbb
jne
push
sub
push
mov
loop
cs
sub
inc
repz
xor
mov
pop
or
sbbl
pop
shll
stos
outsl
dec
cli
mov
in
xchg
daa
mov
dec
rcl
mov
sbb
popa
fidivrs
in
fsubr
sub
sub
in
add
cli
mov
bound
jg
push
adc
cltd
mov
pop
int3
sti
loope
push
mov
sub
pop
pop
jle
xchg
adc
mull
fisttpl
mov
add
dec
out
fldt
push
dec
xchg
add
bsr
sbb
mov
movsl
dec
shl
or
xor
pop
adc
xor
sub
pop
and
push
ds
dec
notl
pop
mov
jbe
scas
int
cmp
mov
std
push
sub
cs
icebp
addr16
sbb
gs
pop
fnsave
xchg
jmp
lods
xor
sti
add
xchg
dec
fadds
neg
jg
mov
inc
xorl
pushf
pop
lcall
mov
in
loop
test
jle
pop
jmp
mov
inc
mov
repz
jge
out
ds
shl
stos
sub
adc
cmp
test
push
pop
push
xor
je
into
cmp
je
gs
pcmpgtd
add
shrb
cmp
xor
int
sbb
push
mov
push
add
loopne
mov
sbb
jge
ss
pop
arpl
ret
or
inc
add
idivb
rorl
test
lock
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
jmp
icebp
not
xchg
into
xor
jbe
cmc
gs
scas
pop
sbb
stos
adc
sbb
imul
enter
and
sbb
inc
dec
in
fcompl
sbb
jb
add
pusha
iret
add
add
adc
adcb
jae
cmpxchg
add
pop
lret
mov
add
xchg
cli
test
add
inc
sbb
push
data16
mov
push
mov
xchg
and
and
out
add
mov
lods
xor
movsl
sub
jae
xchg
cs
push
pop
subl
mov
add
nop
rcrb
xor
sahf
push
mov
std
xchg
in
push
cs
jne
loop
xor
jne
ret
inc
inc
mov
lods
enter
fs
push
mov
sahf
push
add
mov
clc
or
les
pop
shll
aas
inc
and
fs
push
out
iret
stos
cmpl
push
rcrb
push
pop
jne
dec
clc
fildll
mov
jo
mov
dec
inc
test
loope
roll
out
and
fists
daa
nop
test
es
push
mov
and
sbb
xchg
fistps
xor
lcall
dec
lahf
pushf
sbb
pop
div
daa
or
scas
outsb
sbb
std
std
dec
fsubrp
cmpsl
jle
sbb
insb
fs
call
cwtl
pop
mov
mov
xchg
mov
pop
inc
mov
jmp
rclb
hlt
clc
push
ljmp
mov
stc
jno
dec
stc
sbb
rolb
aaa
ret
jge
clc
inc
cmp
outsl
outsb
mov
push
cmpsl
xchg
xchg
sbb
ret
pop
sub
jae
je
cmc
mov
mov
bound
adc
xchg
push
movsl
insb
pop
fidivrl
insb
pop
bound
test
js
pop
ljmp
in
xlat
stos
xchg
loop
push
repz
fbstp
adc
sbbb
dec
jae
xorl
pop
add
mov
or
mov
and
jp
add
mov
lds
mov
jmp
repz
or
inc
mov
mov
outsb
cwtl
mov
rorb
add
lcall
cmpsl
andb
sbb
outsb
push
out
ds
pop
push
pop
mov
pop
xor
mov
ret
sbb
adc
cmp
enter
dec
sbb
out
jbe
js
ja
dec
cmpsb
pop
jno
pop
inc
pusha
cltd
in
adc
das
jg
gs
clc
insb
in
repz
sbb
pop
cmp
aas
inc
out
cmp
dec
xchg
orl
popa
sbb
clc
negb
popf
scas
es
inc
hlt
decl
mov
inc
shll
cmpsb
fucomi
std
jno
insb
add
stc
pop
dec
ja
mov
and
xchg
sub
jnp
lods
stos
sbb
cs
outsl
in
sub
popf
call
dec
imul
ret
sub
and
xor
cmp
pop
xchg
cld
movsl
ds
das
jge
enter
mov
stos
sbb
dec
jne
lea
insl
sbb
loope
sub
lock
insb
lods
xor
movw
lock
bound
fsts
add
jno
dec
or
inc
ss
pop
in
ret
loope
push
negl
xor
add
sbb
add
fsubrl
jo
popa
rcrb
fadds
fsubs
rcll
sub
dec
mov
popa
imul
lret
xor
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
jmp
cmp
sahf
cmp
mov
inc
push
sbb
stos
adc
sbb
leave
jecxz
jbe
dec
pop
fildl
jne
stos
jno
punpckldq
xor
pop
inc
cmpsl
add
andb
out
lds
sub
das
leave
js
sti
jns
call
stc
inc
jne
dec
dec
es
cmp
loope
or
aas
or
and
cld
jge,pt
mov
cmpsb
into
dec
cmp
pop
or
jne
pop
jne
aas
ja
scas
sbb
xchg
or
pushf
dec
jno
mov
pop
pop
mov
jg
ss
xor
xlat
or
cld
inc
fcomps
jp
push
cmp
cmp
add
and
in
shll
fbstp
inc
stos
outsb
pop
pop
iret
ret
std
cmpl
add
shll
mov
dec
jb
or
aas
and
xor
dec
dec
inc
jbe
pop
es
mov
dec
pushf
mov
mov
loopne
mov
out
pop
dec
call
subl
lret
out
sbb
pop
xor
and
fnstenv
or
adc
adcb
aaa
movsw
jb
xchg
daa
sbb
aam
mov
inc
sbb
dec
in
repnz
nop
jg
lret
xorb
pcmpeqb
xor
pushf
sub
scas
call
pop
and
push
mov
dec
cs
and
subb
lds
push
aad
movhps
ret
hlt
sbb
out
and
arpl
rorl
std
xchg
sti
mov
mov
push
sbb
or
adc
popa
mov
out
fstps
in
cs
lods
mov
mov
cmp
mov
mov
push
pop
xor
fdivrp
push
adc
outsb
aad
adc
insl
in
aad
cmp
loop
xor
loop
jp
mov
repnz
jg
loopne
int
adc
inc
cld
mov
jne
adc
repnz
jge
pop
ja
mov
test
cmpsl
popa
fimull
sub
cmp
xor
sbb
jmp
inc
stos
mov
jp
jae
pop
or
int3
fs
mov
movsb
sbb
loop
pop
mov
xchg
or
or
mov
dec
jmp
sub
movsl
mov
sbb
clc
mov
push
sbb
or
fwait
or
mov
push
fisubl
mov
ljmp
jne
cld
stos
push
icebp
add
mov
aaa
xor
fisubs
fwait
xchg
push
imul
push
sbb
pop
cmpsb
mov
xchg
adc
push
leave
xchg
xor
int3
sahf
push
mov
or
xchg
mov
or
lahf
or
jl
inc
push
test
je
fisubl
push
pop
ds
popf
popf
cmc
sbb
rclb
pop
jl
jecxz
xor
add
fsubs
mov
in
shr
rolb
imul
out
cmp
test
in
cmpsb
cmp
pusha
leave
aad
mov
adc
lret
sahf
push
mov
jle
sbb
xchg
mov
inc
je
rclb
popa
out
push
in
jo
jo
push
mov
sbb
mov
xor
push
std
lret
jg
or
xchg
xor
inc
push
or
lock
cmpsl
cld
sub
pusha
jle
jbe
subl
dec
sub
inc
sub
xorb
xorb
cmc
inc
xor
shl
jo
pop
sbb
push
lock
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
jmp
push
push
jbe
jb
mov
push
xchg
lret
jo
dec
sbb
stos
adc
sbb
cli
sarb
stc
or
xchg
nop
mov
arpl
mov
push
dec
adc
mov
cmp
sbb
dec
loope
andb
mov
inc
sub
xchg
xor
call
or
out
repnz
cmpsl
pop
lock
rorb
push
fsubl
outsl
xchg
and
inc
dec
fwait
test
imul
out
push
mov
iret
jge
repnz
xchg
jns
in
mov
call
jns
xor
jnp
push
jo
add
sbb
lds
xchg
xchg
jns
daa
push
and
hlt
insl
imul
inc
jae
xchg
fimull
push
dec
push
push
test
jb
ss
sbb
add
imul
insl
lret
sahf
inc
negl
imul
lcall
aaa
jns
pop
jbe
lcall
jge
pop
push
inc
aaa
mov
sub
outsb
int3
outsb
out
into
stos
aaa
inc
push
sbb
mov
pop
call
jne
cmp
mov
gs
popf
lock
pop
ss
fstpl
shll
lods
or
xchg
mov
pop
jns
lret
cmp
push
jle
dec
mov
repnz
adc
dec
mov
inc
fstps
pushf
movsl
cwtl
xchg
stc
loopne
ja
cmp
sbb
iret
mov
or
loop
je
xchg
out
in
sub
adc
in
xchg
xchg
mov
mov
xchg
test
mov
pusha
jle
inc
mov
and
out
inc
loope
lods
inc
lods
cmpsl
pusha
jne
xchg
fnstenv
sub
iret
push
pop
jge
out
ja
or
push
dec
lret
cwtl
push
mov
js
adc
push
popf
ja
mov
jne
mov
push
fdivrs
icebp
fnstenv
pop
adc
jp
pusha
inc
sub
adc
adc
cmp
repnz
lret
sub
cmpsb
cwtl
xchg
test
push
gs
call
or
in
add
add
aaa
dec
mov
pop
xchg
movsb
cmp
dec
mov
add
adc
mov
sbb
fmuls
push
mov
js
mov
adc
jmp
adc
js
stos
stos
mov
mov
fistpl
into
addl
stc
lret
outsl
aas
sbb
push
add
and
jl
cmp
cli
insl
mov
call
int3
mov
mov
lret
or
les
mov
cs
inc
in
mov
jmp
cli
mov
out
jb
pop
dec
es
repz
shll
or
int
iret
idiv
jno
xor
add
push
mov
lahf
cmp
mov
cli
fsubrl
sub
decb
inc
scas
in
and
jge
or
in
mov
sub
dec
insl
add
push
mov
sahf
mov
movlhps
imul
aam
pop
cmp
pop
hlt
jp
pop
mov
push
mov
push
rcll
xor
push
jbe
int
lahf
loopne
xchg
fnsave
pop
pop
scas
adc
add
xchg
mov
push
lds
add
sub
jge
shll
mov
insl
hlt
sbbl
aam
mov
mov
shrl
ret
mov
jns
jae
cmp
or
push
mov
pop
arpl
push
inc
enter
add
add
add
push
push
push
call
mov
mov
jmp
or
sbb
jmp
mov
sbb
push
sub
movsb
jae
subl
hlt
and
out
int3
into
jecxz
popf
sbb
mov
test
scas
xor
or
mov
cmp
pop
pop
repz
dec
xor
pop
xor
arpl
negb
hlt
xchg
push
sub
dec
inc
pop
and
das
xor
jmp
sbb
scas
repnz
popa
das
lcall
lret
or
jmp
pop
push
testl
jmp
and
movsb
shrl
inc
jae
mov
sub
inc
mov
xchg
xor
popf
lahf
into
add
test
sbb
cmp
pop
or
xchg
sbbl
scas
movsb
xor
mov
mov
pop
xchg
xor
dec
sbb
fs
lock
fnstsw
int3
pop
call
jbe
adc
or
or
movlps
test
insb
xor
dec
push
int
dec
push
clc
arpl
jo
mov
iret
pop
mov
lods
addr16
outsl
icebp
das
and
adc
mov
cmp
or
popa
repnz
xchg
jo
das
fidivs
pop
jmp
jns
loope
pop
pop
scas
roll
iret
shl
sub
sbbl
stc
xchg
popa
dec
xor
cwtl
popf
testl
out
out
in
mov
inc
adc
insl
pusha
in
sub
and
insl
inc
pusha
and
and
lods
jb
pop
pop
negb
jge
mov
shrl
xor
jg
xor
jns
aaa
test
sub
addr16
enter
and
sbb
sbb
ret
and
bound
js
pushf
aad
add
fwait
pop
shr
fnstenv
enter
rcll
mov
xlat
cmc
push
jmp
subl
push
jl
mov
leave
stc
xor
inc
enter
dec
loop
into
into
push
test
sbb
sub
inc
mov
dec
jp
xlat
adc
int3
xor
nop
cmc
dec
imul
sbb
insb
xchg
cli
push
or
jmp
push
push
pop
hlt
jne
mov
fs
cli
cmp
mov
mov
jns
loopne
or
add
jle
lahf
xorl
xchg
lret
pop
bound
jmp
push
pop
or
or
loopne
cmpsl
xchg
std
test
dec
popa
mov
cli
call
hlt
push
adc
into
js
jecxz
jle
orl
adc
addr16
pop
dec
negb
pop
or
add
mov
and
cmp
subl
add
dec
loop
jmp
and
cmpsl
xchg
int
js
jp
ret
xor
int3
out
in
mov
and
mov
adc
into
jl
jmp
int3
adc
xchg
xor
or
fldenvs
mov
mov
scas
stos
je
fdivrl
les
inc
lea
mov
sbb
jne
dec
pop
jle
or
xchg
repnz
jbe
lock
sub
ja
xlat
pop
mov
push
xor
fcmovne
jns
aam
notl
xchg
mov
adcb
mov
mov
out
or
mov
stos
sbb
out
scas
out
test
popf
inc
inc
jae
loop
push
in
or
es
gs
dec
and
icebp
mov
add
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
jmp
out
inc
jp
jp
sub
xchg
cmp
jl
push
cmp
sbb
int3
into
es
push
adc
repnz
jns
lahf
mov
push
repz
jno
loope
push
mov
addr16
aam
dec
inc
in
lret
and
pushf
adc
mov
mov
sub
mov
jmp
add
lcall
inc
jge
mov
cmp
and
xor
jge
rcrb
xchg
pushf
adc
or
xlat
fnsave
mov
fnstcw
pop
cmpsl
mov
pop
cwtl
leave
iret
fstl
xchg
sub
addr16
sub
sbb
sbb
in
imul
push
jnp
dec
sub
stc
jl
out
test
clc
mov
call
mov
pop
mov
sti
add
lahf
pop
roll
mov
pushf
sub
inc
das
xor
sarb
lahf
or
dec
dec
cmpl
mov
push
dec
cmp
stos
jns
icebp
loopne
mov
lret
in
cmpsb
xchg
xchg
adc
add
sub
pop
idivb
in
sbb
test
add
imul
arpl
fsubrp
cmp
cmc
rolb
int
push
std
pop
imul
jmp
adc
fcmovnbe
inc
jb
mov
popf
hlt
insl
sbb
sbb
mov
mov
subl
aad
loopne
and
cmpsl
mov
add
add
pop
sbb
mov
cltd
mov
scas
test
add
and
rorb
loopne
xchg
insl
mov
lods
ljmp
xchg
in
xor
xlat
jecxz
inc
mov
loop
stos
pop
punpckhbw
jb
mov
out
rcrl
and
std
fcoms
orb
out
and
push
int3
push
fcomp
pop
jo
rolb
sbb
mov
sub
jbe
js
mov
xor
jns
shlb
sarb
aaa
sahf
popa
xchg
dec
ja
movl
popa
pop
cwtl
mov
adc
fiaddl
ret
sub
fdivs
or
cmpsb
cmp
mov
and
lods
pop
dec
jle
cli
sub
js
xor
add
popf
mov
cltd
sub
pop
imul
pop
rcrb
pop
or
nop
push
les
mov
icebp
xchg
mov
or
hlt
push
inc
and
adc
push
hlt
dec
sbb
mov
cmp
cmpb
xchg
bound
cmc
xorb
push
sub
repnz
fdivs
fwait
aad
movsl
or
ja
adc
stc
jbe
inc
mov
scas
mov
lahf
jbe
out
sub
lret
fmuls
mov
pop
and
lahf
cmp
cmp
mov
adc
stc
xchg
aas
add
cmp
insb
adc
inc
sbb
or
clc
push
mov
pop
jecxz
enter
add
jne
les
ja
dec
or
mov
outsb
mov
mov
push
movsb
jnp
add
fldenv
aam
xor
inc
sbb
adc
push
fnstsw
sub
xchg
add
add
mov
imul
pop
cmp
or
sub
out
add
lea
push
or
lcall
xchg
mov
mov
les
aad
lock
in
das
pop
and
xchg
push
out
xchg
cld
sahf
and
cmpsl
xor
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
jmp
mov
fcompl
stos
xor
adc
xor
sbb
mov
jae
mov
or
enter
fwait
rcr
mov
je
fstpt
inc
jae
insl
iret
pop
mov
loopne
xchg
xchg
cli
int3
add
pop
xlat
sbb
adc
ja
out
addl
push
scas
mov
leave
insl
push
pushf
loopne
sub
jo
inc
inc
ljmp
loopne
sub
sub
outsb
mov
cmp
mov
xchg
in
xchg
mov
cmp
int3
ja
rcr
cmc
ret
and
inc
daa
nop
mov
push
adc
aam
nop
fisttps
pop
jnp
aas
bound
pop
mov
pop
inc
icebp
dec
sbb
es
fcmove
ret
dec
out
adc
fldl
jmp
lds
hlt
das
jnp
xorb
notl
fs
mov
daa
push
out
sahf
ljmp
jmp
loopne
inc
fstl
mov
mov
jp
pop
pop
insb
iret
or
pushl
ljmp
fcmovne
pop
adc
aas
cmc
mov
inc
xlat
add
lret
sbb
enter
mov
inc
movsb
pop
lods
xorl
pop
das
or
mov
frstor
jle
xor
hlt
loopne
lock
xchg
stos
lahf
jmp
ljmp
adc
push
outsb
xchg
popf
scas
icebp
cmp
and
jle
and
lea
mov
add
out
pop
insb
push
cwtl
adc
js
xchg
in
jae
dec
mov
cmp
mov
pushf
and
inc
fmull
or
inc
pop
mov
add
add
lods
jp
adc
adc
mov
js
or
scas
mov
push
jnp
std
in
repz
jne
ret
push
mov
xorl
stos
sub
cmpsl
into
sub
leave
out
cs
jp
xlat
iret
dec
incb
xor
or
xchg
push
daa
lods
addr16
sbb
stos
jp
das
ja
jbe
sbb
push
lret
mov
sti
out
outsl
loop
or
adc
loopne
or
mov
ret
dec
xor
add
jne
fsubl
inc
ljmp
rolb
aas
jae
pop
lds
lret
loopne
stc
cmp
loop
mov
out
dec
out
xor
jb
loop
push
and
lret
and
inc
pop
push
push
movsb
es
xchg
push
sub
lahf
popa
ljmp
xchg
and
cltd
mov
or
xor
clc
jmp
jmp
adc
jae
push
loope
xorl
sbb
test
xchg
cmp
adc
cmpsl
aad
pop
push
and
push
lret
arpl
add
aas
and
inc
xlat
xchg
mov
cmpsb
cwtl
mov
xor
push
mov
subl
daa
inc
pusha
negb
icebp
sbb
pop
stos
mov
mov
loopne
cmp
ret
jbe
in
insb
cmp
imul
sbb
or
sub
xchg
sahf
pop
fistpll
adcb
mov
mov
adc
ljmp
aad
maxps
movsb
mov
repnz
mov
jne
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jnp
xlat
dec
sarl
jnp
add
lds
imulb
sub
sbb
adc
sbb
xchg
sub
or
faddl
and
push
sub
aam
fimuls
loopne
imul
dec
insl
lods
mov
loop
jno
add
xchg
jp
xchg
lock
js
rclb
daa
mov
pusha
jmp
insb
loop
lcall
shl
adcb
add
mov
sbb
dec
push
jae
cmpsb
enter
mov
sub
fstps
hlt
cmc
push
mov
arpl
lret
loopne
and
pop
stos
push
dec
pusha
jle
jns
dec
andl
xchg
mov
jno,pt
xchg
sub
scas
xchg
scas
clc
xor
lret
decb
test
icebp
stos
ret
and
jo
sbb
inc
lcall
sub
cmp
scas
sub
xchg
mov
mov
push
dec
adc
scas
and
add
mov
cmpsb
push
cltd
mov
pop
xchg
xchg
dec
sub
cmp
pop
cmc
pop
ja
insl
test
es
repz
jmp
aad
xor
cmp
jno
xchg
xchg
or
cwtl
fs
push
mov
mov
mov
mov
or
lret
lcall
pop
loopne
inc
xchg
lcall
stc
ss
in
les
sub
les
inc
repnz
mov
mov
sti
loope
mov
add
pop
out
mov
fbld
les
inc
sub
add
in
imul
xor
pusha
leave
mov
pop
cmp
and
sbb
xor
ret
xor
lcall
add
xchg
mov
ss
js
adc
js
frstor
pop
jns
jecxz
movsb
mov
sub
rorl
js
add
xchg
xchg
adc
mov
dec
pop
cmpb
mov
dec
dec
or
jae
or
push
cmp
clc
or
clc
push
push
in
fnstcw
into
jp
sbb
jmp
fbld
or
ljmp
test
pop
rorb
imul
dec
xchg
cmc
mov
je
pop
test
ja
pusha
jno
xlat
call
jno
mov
scas
mov
sbb
lods
mov
mov
in
lret
cmp
out
pop
dec
jp
hlt
ds
in
clc
div
sbb
in
insl
xchg
push
and
dec
mov
fsubrp
test
enter
lcall
adc
mov
sbb
or
mov
jo
pushf
mov
add
out
inc
sub
cmc
push
cwtl
jns
sbb
sub
popf
push
push
jle
sbb
push
outsb
pop
aad
data16
mov
out
lea
xchg
sbb
in
cmp
adc
pop
fwait
and
mov
scas
dec
popa
mov
inc
pop
mov
xor
or
out
mov
inc
sbb
jns
jae
les
stos
sub
scas
cmpsb
outsl
dec
xchg
js
mov
icebp
pop
push
daa
cmc
push
les
stc
iret
pop
mov
test
cmc
out
ret
mov
sbb
ljmp
and
push
daa
sub
adc
test
mov
sub
out
rolb
pop
adc
inc
clc
add
add
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
jmp
push
mov
dec
sub
ljmp
shrb
shlb
sbb
adc
sbb
hlt
push
fists
cmp
pop
mov
dec
addr16
popf
mov
xor
mov
aas
xchg
imul
or
popa
popf
mov
dec
das
pushfw
mov
outsb
cmp
mov
xchg
scas
fcompl
int3
jns
leave
in
repz
aad
xor
mov
xchg
iret
addr16
dec
mov
test
scas
mov
icebp
outsl
dec
in
cmp
push
testl
lds
xlat
pushf
sbb
ds
cmp
or
inc
sarb
adc
pop
out
sbb
push
shlb
scas
loopne
xchg
jno
test
inc
cmp
insb
shl
je
push
enter
and
mov
or
sbb
rcll
scas
xchg
jbe
movsb
and
jecxz
or
and
jge
mov
mov
rcl
adcb
lahf
mov
fwait
jne
push
cmp
daa
call
pushf
call
call
test
popf
dec
add
cmp
xchg
and
aam
cltd
outsb
inc
enter
rcrl
jl
mov
dec
insb
adc
dec
adc
fcoml
dec
subb
popa
out
fwait
lret
lcall
jg
pop
sub
std
lret
imul
mov
mov
fidivrl
and
mov
aaa
dec
add
jmp
or
xchg
pop
mov
loopne
shrl
dec
in
sti
or
push
inc
adc
cmp
mov
dec
adc
add
xchg
pop
loop,pn
aam
push
rorl
js
andb
adc
or
lret
xchg
pop
push
leave
lahf
les
pop
cmp
xchg
popf
test
pop
lcall
mov
repnz
jl
xchg
lds
in
pop
dec
movsl
test
cmp
jecxz
xchg
xchg
cmp
adc
pop
mov
movsl
mov
bound
and
pop
cmpsl
sbb
mov
enter
sbbl
or
sbbl
rcr
icebp
popf
fsubl
mov
divb
fmull
testl
ror
push
addb
pusha
inc
cmp
mov
outsl
jnp
pop
xchg
sbb
repz
mov
aam
jbe
hlt
push
aam
xchg
inc
cltd
jge
sbb
add
movsl
pop
lret
jae,pn
test
daa
fs
push
mov
cli
push
loop
xchg
or
movsl
add
jl
jl
push
testl
in
out
into
lods
sub
xor
ljmp
jg
inc
inc
aam
push
gs
adcb
sbb
aad
dec
inc
xor
iret
push
ss
adc
xlat
sub
ret
ds
pop
fcoml
pop
or
and
repz
shll
icebp
lock
jae
pop
out
push
movsb
bound
cwtl
jb
cwtl
push
rclb
jg
cmpsl
and
pop
adc
fstps
icebp
insb
movb
mov
or
test
das
lea
dec
xor
push
mov
dec
bnd
inc
scas
xchg
arpl
fimuls
loopne
int3
imul
fs
lods
lock
xchg
jno
xchg
xor
dec
xchg
shlb
enter
sbb
loop
pop
pusha
mov
leave
js
aas
xchg
xor
mov
dec
cld
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
jmp
lret
mov
pop
inc
repnz
xchg
jo
sbb
sbb
adc
sbb
cmpsl
in
jno,pn
cmpsb
and
ret
loop
sbb
in
iret
mov
popf
add
adc
in
sub
fldcw
mov
mov
cltd
inc
je
int
aad
xchg
push
pop
sti
jbe
mov
sub
aam
out
ret
cmc
or
mov
cmp
popf
mov
hlt
leave
inc
cmp
shlb
xchg
out
push
xorl
sbb
stos
lea
cli
ljmp
in
mov
daa
scas
lods
push
out
xchg
repnz
scas
inc
mov
push
and
call
mov
jl
dec
sub
xchg
aad
ds
dec
cwtl
add
ds
sub
outsb
jl
jmp
out
in
and
sbb
or
adcb
push
cs
mov
xchg
ret
jp
xchg
mov
pop
xor
ret
xor
sub
pop
movsl
stos
mov
mov
push
es
cli
imul
pop
rol
push
push
icebp
scas
aad
jb
inc
jns
inc
jge
mov
pop
sbb
sbb
int
movsl
pop
inc
adc
cmp
call
inc
xlat
push
dec
or
mov
adc
stc
fdivrp
and
sub
test
lahf
jecxz
mov
scas
pop
fisubrl
inc
iret
pop
mov
xor
jg
and
int3
cmpsb
xor
adc
icebp
fildl
fisttps
lods
xor
bound
push
loop
icebp
cmp
jns
mov
test
scas
adc
cmp
push
dec
xor
rcrb
out
jg
mov
xchg
pop
or
xlat
ljmp
push
dec
mov
push
psrlq
leave
dec
cld
lods
xchg
or
clc
test
negb
popf
ds
sbb
mov
outsl
xchg
push
lret
and
mov
sub
aam
bswap
xchg
das
pushf
mov
dec
fiaddl
roll
out
add
addb
dec
jns
mov
ret
or
arpl
lret
cltd
pop
pop
jb
cmp
push
call
jmp
es
cmc
in
push
lret
fisttpl
add
dec
adc
push
mov
and
sbb
addr16
loope
adc
mov
outsb
pushf
call
push
xlat
mov
mov
add
shll
fildl
xor
addb
aaa
fiaddl
add
cmp
addr16
jl
xchg
pop
xorb
push
push
aam
movsb
push
xor
inc
push
shll
int3
in
pop
aad
imul
enter
movsl
cmp
fstpl
or
rcll
pop
subl
adc
mov
or
loope
orb
pop
movsb
test
push
mov
xlat
mov
ret
stos
push
sub
jecxz
in
mov
push
mov
test
repnz
cmp
fnstsw
mov
aam
sub
lea
fidivrl
cmp
fst
pop
jl
movsb
rcll
jecxz
adc
mov
pop
stos
mov
test
mov
stc
cmp
cld
enter
xor
je
push
loop
mov
ficomps
cmpsl
pop
and
fimull
dec
frstor
cmc
dec
out
push
cmpsl
cltd
add
les
pushf
adc
repz
rorl
dec
or
fsubs
rorl
dec
rorb
scas
rorl
dec
enter
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
jmp
sbb
cli
sbb
lret
mov
mov
jle
push
push
sbb
jae
imul
rorl
scas
stos
out
jp
test
mov
xor
lods
add
mov
jmp
mov
inc
push
ljmp
dec
into
xchg
mov
jb
jle
xor
lret
popf
outsl
lods
jg
daa
adc
pusha
mov
pop
inc
mov
push
out
xor
pop
xor
mov
push
pop
push
mov
into
ret
out
std
add
cmp
dec
clc
push
ss
decb
hlt
add
daa
test
push
subb
pusha
iret
jb
pop
cld
sbb
lret
pusha
mov
fcmovb
mov
iret
aaa
inc
rcrb
cmp
push
lock
iret
mov
repz
cmc
jmp
lret
sub
lcall
inc
ja
or
inc
repz
rclb
scas
divb
loopne
out
out
cmpsl
inc
jae
cs
jle
ret
cmp
inc
dec
push
or
push
sub
lods
push
ret
push
lahf
test
ja
xchg
fimuls
mov
adc
pusha
pop
push
frstor
sbb
add
jl
andb
icebp
fadds
mov
xor
jae
cld
fnstcw
xchg
push
sub
movsl
pop
push
mov
pop
xor
adc
mov
sti
outsl
dec
jb
mov
out
push
movsl
mov
lods
and
rcrl
cmp
jnp
movsl
icebp
ret
xor
fcoml
loop,pn
jg
xor
jmp
mov
jo
fdivrs
pop
enter
pop
sbb
in
inc
insb
sti
mov
mov
in
sub
loope
incl
ja
mov
call
and
in
bound
daa
mov
movsl
and
push
xor
in
fidivrs
mov
enter
mov
js
insl
mov
cwtl
iret
push
xchg
add
setle
inc
movsb
mov
repnz
dec
push
mov
sub
gs
xchg
loopne
in
mov
xor
stos
inc
dec
or
in
es
inc
pop
mov
adc
fimull
lahf
sub
repz
pop
int3
leave
jbe
xchg
imul
das
rolb
inc
cmp
lock
iret
in
ljmp
fistpll
sti
iret
mov
mov
xchg
sub
pop
js
shr
into
daa
push
mov
fistps
fistl
and
ficompl
shl
xchg
fdivs
or
enter
cwtl
call
mov
xor
mov
fildl
ficomps
or
mov
adc
mov
fcmovbe
inc
test
inc
fsubrl
jbe
inc
mov
or
mov
adc
dec
xchg
mov
fnstenv
cmp
hlt
lret
imul
popf
bound
lcall
mov
jmp
mov
inc
cwtl
cmpsb
mov
movsl
inc
clc
cmpsl
lret
jecxz
xor
push
scas
add
pop
out
mov
test
xor
cwtl
icebp
popf
push
or
je
dec
outsb
ljmp
mov
and
or
jle
loop
int
mov
push
mov
ret
push
mov
xor
push
mov
xor
cmpsl
leave
inc
lret
sub
ret
mov
jmp
lea
xlat
mov
cmp
lods
aad
je
mov
jp
jl
xchg
out
push
xlat
dec
mov
lds
lods
cmpsb
cld
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
jmp
mov
aas
sbb
sub
sbb
push
sbb
dec
jb
jecxz
incb
outsl
sbb
mov
xchg
inc
inc
pop
rorb
inc
cmpl
jb
cmp
jbe
mov
xor
lock
leave
mov
cmp
mov
scas
rorb
mov
dec
sbb
pop
pop
pop
lock
jns
fcomip
jo
lcall
fistl
pop
js
aaa
xor
adc
clc
push
fistps
adc
jnp
mov
cs
sbb
outsl
pushf
push
lods
sbb
out
lahf
jb
dec
or
rcrb
lret
das
sub
insl
mov
inc
or
cmp
mov
lret
push
cmpsb
jno
pop
imul
xchg
and
stos
sbb
mov
jae
xor
mov
sti
dec
lea
xchg
jg
roll
mov
scas
mov
cld
mov
mov
inc
sub
aad
cmc
incl
jbe
mov
push
fisttpll
pop
dec
dec
push
adc
mov
mov
sub
test
add
xchg
iret
test
sar
cmpsl
invd
xor
or
adc
pop
adc
add
lock
push
js
cmp
decl
jecxz
repz
stc
test
push
loope
pop
out
loop
jnp
lret
jne
fxch
sbb
loopne
sbb
sbb
nop
pop
push
paddsw
jmp
les
adc
mov
imul
sbb
fwait
test
pop
adc
fcmove
pop
inc
adc
in
cmp
outsb
imull
mov
cltd
popa
mov
aam
test
dec
and
mov
nop
lods
ljmp
xchg
divl
push
mov
jmp
jns
in
jo
shrb
jle
xchg
scas
sub
lret
xor
lea
adc
out
dec
scas
shrl
int
orl
xchg
sub
imul
and
mov
pop
je
cli
cmp
lret
cs
es
cmpl
cmp
aas
cs
jmp
xor
mov
les
movsl
or
and
xchg
xchg
ss
push
test
lea
into
gs
and
inc
rorb
shrb
rcll
cmp
cmp
outsb
call
lods
push
decl
aam
xlat
shll
leave
push
ljmp
orl
xor
mov
sub
jo
jnp
lods
daa
sbb
lock
mov
into
sbb
push
out
or
cld
dec
aad
outsb
lods
adc
push
shlb
mov
je
push
int3
pushf
mov
test
sbb
jmp
pusha
xchg
pop
insb
das
lods
xchg
fsubrl
call
pop
or
and
cwtl
mov
mov
ss
push
jg
ror
roll
mov
gs
xchg
scas
xor
icebp
stos
ds
lock
shrl
out
xchg
outsb
jae
inc
dec
ja
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
jmp
pop
pushf
lds
pop
pushf
push
cwtl
pop
jo
dec
jae
pop
or
sbb
lahf
xchg
inc
andl
cmp
adc
int
repz
stos
adc
and
cmp
inc
rorb
addb
xor
pop
or
push
pop
scas
sbb
stos
shlb
imul
scas
int3
fadds
test
dec
cmpsl
loopne
pop
adc
sub
fldt
lahf
or
pop
scas
or
lods
lret
push
es
xchg
bound
in
jbe
mov
jp
add
lret
jle
jb
push
xchg
ja
cmp
jle
dec
jae
fadd
repnz
testl
cli
xlat
testb
jmp
sbb
subl
sbb
fwait
mov
stos
pop
xor
outsl
in
mov
sbb
push
in
out
nop
pop
inc
lar
add
sub
jae
sti
add
push
nop
add
hlt
pusha
sub
shrl
jnp
mov
cmp
or
push
or
scas
pop
jecxz
pop
pop
pop
sti
stos
je
cmp
dec
js
aam
pop
aam
adc
lahf
or
cmpsb
pop
inc
popf
and
test
xor
stos
add
and
rcl
and
sbb
in
dec
dec
jnp
pop
mov
xchg
xor
lds
test
pop
inc
and
mov
sub
fwait
arpl
cmp
mov
cmp
push
test
lds
xchg
addr16
cli
dec
in
sbb
xchg
push
mov
pop
sbb
stos
inc
cmp
imul
sbb
jmp
rclb
mov
lock
pop
scas
and
and
insb
popf
mov
aad
gs
mov
mov
out
push
inc
mov
outsl
pop
sub
mov
mov
aaa
mov
sbb
scas
dec
adc
scas
add
add
fidivrl
and
aad
scas
inc
pop
mov
jb
in
fwait
inc
ss
aas
hlt
dec
cs
rol
jne
xchg
scas
push
inc
mov
jmp
xchg
cmpsl
fnstenv
cmc
test
sbb
stos
push
imul
lret
scas
fistps
dec
or
xchg
jo
sub
ret
sbb
js
test
in
jmp
and
scas
pop
and
add
adc
ret
and
test
data16
sbb
into
xor
out
xor
stos
sub
sbb
sub
cmp
fucom
call
xor
sub
push
push
loop
mov
sub
xchg
push
icebp
xchg
mov
mov
pop
ss
fcmovnb
cmc
lods
aas
out
arpl
inc
stos
cmp
mov
jecxz
inc
mov
pusha
fwait
add
sub
insl
fisubl
mov
out
or
cmc
push
into
jl
add
sbb
subl
orl
dec
repz
or
call
imul
dec
test
xchg
jmp
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
xor
push
push
push
orl
mov
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
pushl
pushl
pushl
pushl
push
push
pushl
call
mov
xor
or
sub
imul
movzwl
and
xorl
sbb
adc
mov
shrd
shr
mov
and
mov
mov
xor
xor
xor
xor
xor
or
sub
or
mov
xor
adc
or
mov
not
mov
sbb
shl
mov
shrd
adc
xor
shr
sbb
mov
mov
mov
sub
and
mov
cmpl
notl
movl
movl
jmp
movl
cmpl
jge
pushl
push
push
call
addl
inc
add
sbbl
mov
adc
xor
xor
add
or
cmpl
movl
movl
jmp
mov
mov
cmpl
jl
push
push
call
sub
sbb
and
mov
and
orl
mov
mov
sub
xor
mov
cmpl
mov
mov
jmp
mov
cmpl
jbe
push
push
push
push
push
pushl
push
push
call
mov
mov
sub
sub
add
or
add
or
and
mov
xor
mov
or
mov
and
mov
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
ja
pushl
push
pushl
pushl
call
or
or
adc
and
sbb
add
sbb
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
mov
cmpl
jg
push
push
call
and
sub
xor
xor
sbb
or
sbbl
shl
xor
adc
shld
shl
mov
mov
orl
mov
mov
xorl
xor
subl
xor
movl
movl
movl
movl
mov
movl
cmp
movl
jne
movl
cmp
je
mov
adc
mov
xor
shld
andl
shl
xor
cmpl
not
mov
mov
jmp
movl
movl
cmpl
je
push
push
call
orl
or
subl
movl
mov
add
mov
or
mov
or
mov
xor
mov
mov
cmp
jne
cmp
movl
je
cmpl
movl
movzwl
not
jmp
mov
cmpl
jne
push
push
pushl
push
pushl
pushl
push
pushl
push
call
xor
sbb
subl
sub
add
dec
and
mov
and
mov
push
pop
andl
xor
movzbl
add
shl
cmpl
mov
mov
movl
mov
jmp
movl
movl
cmpl
jg
push
call
add
neg
movl
and
and
movzwl
adc
mov
andl
xor
subl
shr
or
cmpl
movl
mov
movzwl
jmp
not
mov
cmpl
jg
pushl
pushl
call
adc
orl
mov
sub
addl
dec
mov
mov
and
mov
mov
mov
xor
mov
orl
push
cmpl
movl
movl
jmp
movl
cmpl
jle
pushl
call
xorl
subl
sbbl
andl
xorl
pop
orl
sub
mov
add
mov
mov
mov
sbb
lea
mov
and
mov
mov
xor
xor
subl
shr
andl
shl
sbbl
or
orl
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
jmp
sbb
lods
sbb
xor
loope
jge
hlt
add
sbb
test
out
push
and
inc
cs
aaa
scas
es
pop
scas
adc
or
xchg
fcmovb
jns
ljmp
pop
cmpsb
fisubs
push
rcrl
addr16
add
xor
lret
lock
imul
mov
mov
sti
sub
enter
xor
and
jno
adc
shlb
lahf
paddusw
jb
out
js
add
mov
imul
arpl
mov
mov
mov
sbb
pop
dec
scas
pop
rcll
mov
lods
push
sbb
clc
pop
pop
push
mov
insl
test
mov
jmp
jle
lret
mov
ror
lods
dec
aam
sti
sti
fwait
pop
ret
xor
test
rorl
pop
xor
inc
cmp
mov
mov
and
and
add
inc
lock
or
sbb
sbb
ret
xchg
sti
pop
in
hlt
lods
sarb
std
out
lret
adc
adc
arpl
shlb
push
rorl
add
mov
jae
xchg
insl
fnstcw
stos
xor
insb
clc
jmp
pop
push
and
mov
das
outsb
shr
repnz
push
stc
mov
repnz
mov
push
repnz
push
mov
pushf
rep
xchg
popa
sub
dec
unpckhps
pop
mov
push
cmpb
mov
mov
jns
in
push
dec
ret
pop
loope
movl
push
div
push
push
or
pop
fsubs
mov
incl
pop
stc
xchg
shll
mov
mov
cwtl
jns
cmc
call
movsb
dec
loope
xor
xor
movb
jae
ret
push
sbb
sub
lahf
inc
mov
fldpi
push
mov
add
cld
ret
adc
popa
shrl
mov
shll
idivl
xor
test
xchg
das
xchg
pop
mov
pop
cwtl
mov
lret
or
sahf
gs
sub
into
stos
cltd
mov
cli
scas
fidivl
cwtl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
out
mov
dec
xchg
fistps
mov
fwait
adc
sbb
add
pusha
gs
imul
cmpsl
ja
mov
les
fistl
sti
pop
mov
mov
sahf
jno
sbb
mov
iret
psubsw
pop
sbb
xchg
xor
ja
mov
and
mov
push
or
fildl
lahf
push
gs
jae
into
outsb
dec
add
push
repnz
cmp
inc
or
sub
xor
rcrl
push
jnp
lret
ret
add
testl
xor
mov
test
pop
fistl
cmp
shll
cmp
mov
xor
jecxz
sbb
xchg
dec
jns
dec
aaa
jnp
aas
pop
int
popa
out
test
repnz
cltd
jg
inc
dec
pop
leave
push
xchg
cmpsl
nop
inc
mov
push
add
xlat
add
xchg
shlb
and
jb
in
sbb
fldl
adc
and
sub
dec
mov
lret
and
aas
imul
lret
jmp
movsb
hlt
imul
sub
jns
pop
push
cmp
stc
add
lahf
mov
jecxz
gs
dec
jecxz
mov
pop
mov
push
lcall
popa
lret
inc
cltd
jl
push
xchg
sbb
sub
shll
jo
and
insl
dec
iret
imul
add
repz
jbe
sar
sarb
lods
dec
jg
idivl
mov
mov
sbb
jo
pop
in
sti
in
das
test
andb
dec
filds
and
xor
cmp
xor
add
movsl
cmp
xlat
arpl
cwtl
pop
xor
data16
sbb
sbb
inc
movsb
imul
aam
sub
cwtl
and
push
leave
ret
aaa
cltd
pushf
push
icebp
loop
loope
dec
jbe
add
ljmp
add
ja
jno
lea
pushf
mov
inc
icebp
jge
jl
mov
aam
lret
lcall
pop
xor
out
popa
aam
inc
push
mov
mov
shrd
shr
mov
mov
xor
jmp
mov
sbb
mov
stc
clc
push
sbb
ss
cmp
into
mov
pop
adc
fiaddl
test
stos
fldl
mov
mov
jne
dec
xchg
xor
xor
das
movsb
and
lret
pop
imul
cmp
gs
ss
loop
sbb
mov
xchg
add
test
xor
cli
jle
push
mov
sbb
jge
test
icebp
sbb
sub
scas
stc
test
jl
icebp
hlt
or
ss
push
mov
dec
mov
pop
test
das
lods
aas
add
and
sbbl
in
fadd
xor
xchg
mov
or
int
mov
aam
mov
sahf
insb
fadd
iret
inc
mov
mov
out
insl
mov
sti
mov
stos
sub
nop
push
lcall
stos
cs
inc
and
push
enter
add
mov
push
sbb
gs
lock
std
icebp
cmp
cmp
mov
xor
fsts
dec
movsb
fisttpl
mov
xchg
test
pop
aaa
mov
rolb
add
mov
xor
out
fwait
scas
cmpsb
and
filds
and
das
sbb
cmpsl
adc
jo
into
sti
push
mov
adc
fistl
cld
mov
imul
rcrl
dec
add
jge
adc
push
lods
bound
lea
jnp
scas
push
jle
inc
aaa
or
inc
and
jnp
repz
xchg
in
jmp
fiadds
push
sub
lahf
lret
test
idivb
test
pop
jns
jae
sbb
jae
jmp
daa
adc
mov
popa
push
dec
jl
push
loope
int
loopne
mov
jb
neg
xchg
pop
sahf
cmp
cmp
mov
mov
xor
jecxz
mov
mov
arpl
push
nop
pop
out
negb
out
js
test
icebp
popa
jno
cltd
adc
cld
and
inc
loope
mov
jecxz
xchg
gs
dec
push
aas
cmp
stc
enter
rorb
ret
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
or
mov
mov
jne
mov
xorl
mul
ret
subl
push
sbbl
mul
addl
mov
xor
add
mov
adc
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
jmp
dec
jbe
imulb
dec
sub
push
mov
push
dec
jle
hlt
push
sbb
adc
sbb
pop
mov
fxch
dec
outsl
out
fistpl
inc
pop
test
dec
ja
xchg
jmp
sub
mov
cmpsb
push
push
testb
mov
insl
xchg
dec
lods
add
add
fcomip
filds
fadds
push
push
inc
test
ret
daa
call
dec
rolb
imul
pop
cmp
pusha
mov
mov
scas
lret
inc
mov
daa
and
xchg
shl
sbb
mov
dec
std
xor
pop
push
sbb
int3
das
ss
jle
and
lcall
add
call
outsb
in
adc
mov
jne
pop
push
dec
mov
jns
ds
push
movsl
cmpsl
pushf
pop
mov
adc
into
popf
push
cmp
pop
fisubs
lahf
add
mov
pop
mov
mov
fildl
fnstenv
dec
mov
jbe
cmp
in
lods
ss
sbb
loope
outsl
lds
out
fs
sbb
rol
movb
scas
push
adc
fists
pop
test
addb
mov
int3
mov
lret
movsl
insl
sbb
sbb
jecxz
fadds
add
and
dec
pop
push
pop
dec
or
push
xlat
or
imul
push
scas
dec
sahf
pop
out
out
fidivrs
loop
cmp
aas
mov
push
push
dec
les
or
fistl
out
popf
iret
imul
ret
xchg
mov
aaa
leave
aad
jo
daa
sbb
into
les
aaa
sub
test
jbe
rorb
push
fdivrp
adc
inc
xor
test
nop
call
inc
or
cmp
in
xchg
fimuls
icebp
data16
pop
xor
and
aaa
pop
stc
insb
inc
insb
xchg
sahf
or
arpl
inc
cmp
test
addl
jmp
pop
mov
shlb
loop
pop
push
pop
enter
loopne
push
jae
jg
cwtl
push
jae
jg
mov
mov
sub
inc
pop
daa
inc
add
mov
hlt
xchg
ret
pop
xchg
and
jo
xor
iret
pop
or
fs
popf
test
xchg
fsubs
sub
xchg
jo
mov
cwtl
out
addr16
mov
stc
mulb
addr16
add
pop
loopne
nop
sbb
in
pushf
and
xchg
aas
adc
into
and
and
mov
fmul
jp
sahf
mov
sbb
lret
shrl
mov
hlt
mov
hlt
dec
aaa
test
xchg
cs
sbb
mov
adc
mov
cmovnp
jecxz
cmc
fmuls
add
je
mov
cwtl
xchg
es
lcall
adc
in
and
lock
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
jmp
in
lret
repnz
pushf
pop
stos
movl
inc
out
push
sbb
adc
sbb
dec
xchg
xor
sub
stc
add
fimuls
ljmp
das
notl
scas
nop
inc
fisubs
push
mov
aad
aas
lcall
mov
jge
or
movsb
adc
lahf
inc
mov
repnz
sub
sbb
adcb
mov
int3
icebp
jae
mov
pop
sbb
add
in
lds
inc
mov
pusha
repz
xchg
pop
inc
repz
loop
gs
lahf
cmovae
fs
pop
xchg
int3
lods
push
repnz
addb
push
das
xor
icebp
sub
xor
jne
addr16
cmp
mov
scas
pushf
mov
aad
out
cmp
arpl
mov
data16
push
in
imul
adc
cmp
test
mov
imul
xchg
addr16
jno
loop
push
stos
cld
inc
mov
mov
cmp
or
repnz
cli
cwtl
xor
sti
insl
aad
loopne,pn
add
push
add
insl
lret
in
data16
data16
ret
push
add
loop
pop
xor
xchg
mov
fiaddl
add
xchg
lea
mov
call
in
adc
add
jo
imul
fwait
arpl
mov
shlb
or
mov
or
or
jmp
ret
xchg
cmp
mov
xchg
sahf
sbb
mov
push
aad
cmp
popa
and
or
js
and
lds
repnz
adc
xchg
aad
lds
cltd
cs
scas
cmpsb
push
negb
jne
dec
mov
adc
inc
cmp
icebp
out
sar
cld
mov
je
add
sahf
sbb
and
jp
fisubs
mov
sbb
lods
aad
ljmp
xchg
fdiv
add
lods
xchg
push
add
mov
dec
test
inc
imul
sub
add
jno
pushf
and
insb
scas
stos
jmp
cmp
inc
mov
push
fimull
lcall
movsb
sbb
aad
mov
pop
inc
aam
dec
sbb
sbb
in
stos
aaa
xchg
fwait
mov
int
fs
lret
lds
cs
outsb
jl
mov
int
fmuls
arpl
ljmp
sbb
out
cmp
gs
xor
test
xchg
pusha
xchg
inc
xchg
es
jmp
sub
repnz
lds
pop
sbb
jns
and
imul
in
xchg
dec
xchg
mov
out
shr
sti
out
and
lcall
lods
int3
xlat
lahf
mov
push
dec
outsb
inc
and
sahf
pushl
fimuls
call
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
lea
push
call
pushl
pushl
call
push
call
mov
subl
jmp
iret
and
inc
sbb
and
fnstcw
out
sbb
rcr
incb
sbb
test
int3
cld
sub
cmp
aad
test
push
dec
mov
lcall
and
pop
addb
popa
loope
dec
xor
stos
lcall
sti
int3
cmpsb
pop
jp
popf
sub
ja
pop
lds
lahf
mov
push
or
ficoms
mov
out
dec
outsl
jmp
filds
rorl
mov
cmp
mov
xchg
in
xchg
jl
out
mov
xor
cmp
test
cmp
sbb
sbb
dec
mov
movsb
lret
fwait
adc
cmp
fadds
aas
ret
cmp
fcompl
enter
lcall
movsb
xchg
insb
imul
push
imul
or
addr16
lret
lahf
cs
push
rorl
insl
int3
and
jg
leave
pop
aam
mov
data16
push
cmp
and
insb
and
sbb
mov
pusha
mov
cmp
cltd
bnd
sbb
icebp
inc
sar
aad
daa
mov
shll
in
aaa
sbb
int3
mov
or
mov
mov
xor
cwtl
xchg
add
add
add
sarb
outsl
ss
add
push
fldenv
mov
les
popf
pop
lods
lcall
or
cmp
lret
dec
push
lea
movsl
sbb
push
icebp
mov
and
std
ds
add
cli
xchg
cmp
stos
lcall
imul
cmp
xor
sbb
in
or
in
je,pn
fs
jmp
nop
jbe
je
sti
shll
sbb
jno
icebp
sub
aam
rcll
jns
sbb
mov
or
icebp
addr16
and
mov
mov
cmp
aaa
popf
xchg
push
dec
and
sub
jne
push
testb
push
mov
push
dec
in
adc
or
inc
sub
push
add
cld
cmp
mov
in
sbb
jo
out
cwtl
xchg
pop
cmp
jle
imul
cmp
pushf
in
adc
cmpb
rorb
or
hlt
cltd
aas
shl
loop
push
cld
fdivl
hlt
mov
lock
inc
nop
mov
sub
mov
sbb
sub
sub
mov
sbb
cli
ret
lods
aaa
es
mov
and
addl
dec
jns
inc
push
insl
dec
ja
mov
push
mov
sub
sbb
call
xchg
ret
push
mov
add
xor
mov
and
mov
sub
fnstenv
inc
fistl
inc
sahf
push
mov
sub
das
loopne
lret
aad
dec
ljmp
fimuls
aam
lret
test
popf
daa
bnd
in
popa
adc
dec
int
push
sub
jp
pop
jl
je
jbe
pushf
divl
pop
mov
pop
js
ja
lahf
fldenv
mov
push
inc
popf
adc
movsb
cld
stos
inc
xor
imul
out
jecxz
jmp
mov
mov
movsb
cmp
sub
dec
and
mov
ret
inc
sbbb
mov
mov
sbb
add
add
xor
add
add
call
adc
mov
add
movl
movl
addl
mov
mov
mov
and
mov
subl
xor
xorl
imul
and
sub
xorl
mov
xorl
movl
movl
adcl
movl
add
movl
xor
add
add
mov
mov
addl
sub
and
mov
and
mov
sbbl
xor
sub
imul
mov
mov
cmp
movl
jne
and
movl
movl
xor
movl
movl
add
pushl
cmpl
mov
mov
mov
jmp
movl
cmpl
je
pushl
pushl
push
pushl
call
not
sub
or
mov
mov
and
sbb
add
add
movl
xor
movl
movl
negl
jmp
xor
fwait
clc
dec
arpl
loope
sbb
mov
lods
test
or
loope
jb
mov
arpl
shll
icebp
push
inc
pop
dec
pop
aad
dec
sahf
scas
loope
xor
cmpsl
add
bound
stc
out
stos
scas
data16
xchg
mov
cs
adc
std
mov
pop
jge
hlt
and
add
jne
mov
and
push
xor
aaa
sbb
nop
jg
jge
test
adc
push
xchg
test
sarl
loope
fs
xor
or
inc
das
jo
sub
push
sbb
clc
or
adc
add
cld
sbb
adc
cli
insb
xchg
lock
mov
aaa
shrl
repz
imul
cmp
es
xor
rcrl
addr16
icebp
sub
add
sbb
xchg
or
mov
mov
adc
clc
fninit
movaps
sbb
adc
aam
clc
lock
aas
dec
rorl
or
adc
or
gs
inc
mov
xchg
data16
cmp
push
jae,pn
stc
cmc
and
jl
stos
arpl
out
mov
dec
fmuls
stos
mov
inc
push
out
pop
js
outsb
fxch
xor
xor
mov
shlb
inc
fs
mov
jbe
xchg
sub
jnp
mov
clc
mov
cli
arpl
inc
int3
ljmp
mov
ss
xchg
test
xchg
xchg
fimuls
outsb
repz
popf
in
push
hlt
dec
lcall
das
in
and
out
aam
addr16
repnz
fldt
pop
repz
jle
push
adc
test
rclb
lret
cmp
or
test
cltd
aaa
cs
and
and
and
and
clc
jae
fs
sub
lcall
dec
or
ja
pusha
mov
inc
loope
inc
imul
mov
lahf
popa
inc
mov
cld
cmc
pop
nopl
fdivs
les
int
lds
lods
mov
jne
leave
add
mov
fsubs
push
aas
rorb
cmpsb
hlt
pop
jg
push
xor
scas
ss
popf
outsl
xchg
lea
lea
xchg
xchg
xor
imul
pop
testb
jo
mov
out
add
lcall
mov
add
xor
mov
adc
sub
and
into
jl
add
jp
leave
lret
jecxz
push
repnz
xchg
ljmp
icebp
aam
or
inc
pop
adc
sbb
and
pop
les
arpl
out
hlt
mov
pop
mov
int3
maxps
add
sub
shrb
pop
movsl
mov
les
stc
int
fs
aaa
mov
sub
fsubrs
and
inc
jb
mov
cli
cmp
add
lods
pop
insl
hlt
fwait
cwtl
xlat
mov
dec
pusha
out
orl
and
push
jmp
mov
inc
mov
pop
jnp
mov
test
imul
je
cmp
addr16
sbb
sti
ss
test
sbb
adc
mov
jnp
aad
nop
add
add
rclb
xor
call
and
aad
add
movl
movl
movl
movl
mov
mov
subl
imul
or
xor
cmpl
mov
mov
mov
jmp
movl
movl
cmpl
jge
pushl
pushl
call
subl
xor
mov
and
xor
mov
or
mov
or
jmp
jp
lock
dec
pop
push
dec
lret
repnz
pushf
dec
jle
fsts
sbb
loopne
cwtl
push
jge
gs
faddl
lcall
fdivl
imul
cmp
push
lret
cmpsb
sub
jmp
xchg
hlt
xchg
insb
jo
clc
fisubrs
loope
enter
inc
clc
xchg
outsb
test
cmpsb
call
insb
pop
pop
in
cltd
lea
mov
iret
notb
popl
ljmp
ja
fcom
inc
icebp
popf
cli
repz
negl
mov
dec
mov
repnz
lahf
xor
pop
xchg
mov
jle
out
xchg
loope
xor
mov
pop
push
jmp
shlb
repnz
mov
add
adc
or
push
sub
jmp
aaa
add
dec
movsl
stc
mov
sbb
hlt
push
pop
cmpsl
aam
jl
ja
and
scas
push
mov
cmpb
sarb
add
mov
push
insl
in
dec
insl
mov
loope
sbb
bound
push
sbb
sbb
mov
or
out
and
push
push
ljmp
xor
rcr
jl
jecxz
mov
xchg
ret
cltd
fldt
sbb
mov
mov
pop
mov
inc
addb
xchg
loop
hlt
cmp
ljmp
call
rorl
js
lcall
pop
fs
std
data16
subl
mov
jmp
int3
out
stos
dec
push
sahf
enter
and
data16
inc
mov
or
sbb
lds
sub
push
call
push
push
xchg
lcall
insb
push
mov
xchg
stos
jnp
or
sub
outsl
rcrl
lcall
rclb
xchg
hlt
mov
or
les
add
sbb
in
sbb
repnz
mov
decl
paddq
sti
jno
mulb
lahf
in
mov
pop
addr16
adcb
mov
mov
mov
fisttpll
movsl
jge
pop
inc
push
cmc
or
dec
xchg
in
popa
test
addr16
pop
sub
xor
pop
ret
cmp
xchg
xor
dec
das
sbb
ret
and
dec
insl
fadds
leave
call
aam
jnp
mov
sub
add
out
std
lock
inc
in
cs
xchg
cmpsl
pop
sbb
enter
arpl
out
clc
mov
in
loope
popf
dec
sbbl
imulb
jecxz
fsubrl
out
push
rorb
jmp
iret
sub
das
xor
popf
enter
orb
pop
shrl
mov
and
insl
push
and
aam
or
js
cmc
insl
dec
leave
lcall
cmpsb
mov
mov
jmp
out
push
ja
sti
sbb
sbb
jb,pt
shrl
and
jg
imul
mov
sarb
addb
dec
sti
ja
popf
inc
ja
rorl
jns
inc
mov
imul
gs
fsub
loopne
inc
imul
sub
mov
fisubs
adc
into
mov
mov
icebp
xlat
xchg
es
cmp
push
sti
push
lea
sahf
mov
mov
fs
pop
pop
leave
pop
cli
or
jp
in
jle,pt
repz
inc
xchg
out
sbb
mov
insb
push
xor
push
rol
mov
sbb
sarb
pushl
mov
cmpl
movl
mov
movl
jmp
movl
movl
cmpl
ja
push
push
push
call
add
add
xor
mov
or
add
xor
push
not
pop
xor
div
mov
xor
xorl
or
mov
xorl
or
movzwl
or
mov
subl
div
xor
xor
cmpl
movl
mov
jmp
movl
cmpl
jl
push
push
call
sbbl
movl
or
xor
or
pushl
mov
or
mov
xorl
pushl
add
andl
pushl
orl
imul
pushl
mov
adc
jmp
and
sbb
sbb
push
inc
mov
not
push
sbb
outsb
xor
test
mov
add
mov
out
mov
inc
push
dec
dec
xchg
test
xchg
adc
std
aas
sub
pop
ret
lcall
adc
mov
test
xchg
add
sub
fiaddl
pop
mov
sbb
mov
ficoms
inc
stos
jno
pop
arpl
in
lea
js
xchg
jp
xor
pop
mov
movsl
add
scas
push
das
mov
xchg
daa
aam
cld
adc
adc
fs
outsl
in
pop
loop
cmc
lea
fisubrl
lods
dec
scas
int3
xor
sbb
xchg
sahf
nop
bound
js
repnz
bound
add
pop
inc
popa
out
fldl
jbe
sub
outsb
sbb
adc
test
adc
jle
xchg
bound
out
adc
push
and
fsubs
push
cltd
pop
add
pop
and
xchg
hlt
jmp
arpl
lcall
mov
test
mov
pop
popf
push
xor
sbb
mov
js
rorl
cltd
cmp
out
into
fsin
mov
lods
dec
sub
test
pop
ret
dec
ja
xchg
mov
lahf
out
sub
mov
cmp
pusha
inc
mov
add
mov
lock
push
xchg
pop
jmp
inc
dec
adc
scas
dec
pop
and
mov
or
sbb
inc
neg
je
xchg
scas
add
stc
adc
push
push
pop
xorl
adc
and
ljmp
in
outsl
pushf
insl
cmp
sbb
cmp
std
sub
jnp
or
scas
xchg
push
inc
bound
insl
andl
xchg
lret
ret
pushf
dec
pop
add
or
fs
in
leave
testb
lods
or
mov
push
psrlw
mov
subl
sub
int
and
aas
push
fdivrl
sti
mov
das
repnz
inc
pop
jecxz
arpl
xchg
push
hlt
push
mov
fwait
fs
fdivrl
or
test
test
sti
jns
ret
push
push
jo
xchg
aaa
int3
jl
jb
gs
xor
scas
jle
lods
add
ret
xchg
popa
scas
sbb
or
stos
cli
ss
mov
in
mov
imul
enter
repnz
mov
fnstenv
nop
or
push
pop
xchg
jnp
in
lods
pop
jecxz
pop
dec
sbb
mov
add
aad
arpl
cmp
mov
fwait
sub
addr16
iret
mov
decl
xchg
xlat
mov
push
in
stos
divb
or
xchg
inc
jnp
sbb
xchg
dec
or
das
imul
fwait
rorw
ret
fildll
imul
cli
add
lods
cld
aad
cmp
and
sahf
jge
mov
int
or
lea
push
imul
or
xlat
test
push
enter
test
lret
adc
sub
jge
mov
scas
out
mov
fistpll
adc
mov
add
sbb
sub
dec
xchg
aas
shlb
ss
jns
lods
jg
ret
push
push
imul
pop
lcall
jns
jle
cmc
jecxz
push
sbb
sub
dec
and
orl
xor
adc
mov
div
adcl
and
xorl
or
xorl
pushl
xorl
call
orl
dec
jne
add
movl
cmpl
mov
mov
mov
mov
jmp
mov
cmpl
jb
push
call
movzwl
sbb
adcl
xor
mov
xor
mov
addl
sbbl
mov
mov
andl
movl
mov
xorl
call
cmpl
mov
mov
not
jmp
movl
mov
cmpl
jle
call
adc
orl
xor
add
mov
sub
and
sub
sbb
lea
mov
lea
add
mov
cmpl
mov
movl
mov
jmp
movzwl
mov
cmpl
je
push
call
or
sbb
sbb
xorl
sub
orl
sbb
mov
mov
sbb
jmp
js
push
xor
or
fbstp
sbb
jl
mov
push
xchg
mov
add
xchg
das
add
or
sbb
pushf
mov
cwtl
mov
pop
lock
pusha
cs
mov
mov
out
call
ret
adc
push
dec
cltd
dec
mull
push
jae
jno
je
pop
push
dec
xor
pop
add
xlat
mov
popa
sub
insl
cld
insl
jmp
lea
repz
xchg
mov
es
sbb
hlt
sbb
in
or
mov
mov
inc
in
fs
lahf
jecxz
or
jp
in
sub
sub
popa
sti
divb
testb
jo
mov
and
sbb
adc
rcl
pop
movsl
push
cmc
mul
jmp
cmpsl
push
pop
adc
jmp
mov
cld
inc
ja
inc
and
sub
dec
clc
out
cltd
iret
incb
and
ret
cmp
or
lret
xor
hlt
inc
xchg
hlt
xchg
mov
fnsave
dec
xlat
or
inc
push
push
lods
adc
dec
mov
lret
push
push
mov
cltd
cmp
xor
aad
lret
cmc
jb
scas
out
dec
add
leave
std
xchg
int3
add
and
insb
loope
pop
and
pop
lock
popf
xchg
in
push
push
xorb
add
mov
scas
mov
lds
call
or
jle
cwtl
lret
test
push
jg
mov
stos
mov
push
fistl
cmp
stos
lret
imul
push
ror
or
sub
adc
xchg
ljmp
loop
sbb
xchg
hlt
pop
pusha
stc
and
add
in
and
outsb
mov
cmp
or
sub
mov
scas
mov
insl
insl
dec
out
insb
jnp
sbb
sub
shl
jae
lods
adc
fstl
or
ror
lods
pop
adc
sbb
push
lret
cmc
call
pop
pop
loop
adc
xchg
xor
push
jmp
cmpsb
fbstp
addr16
mov
xchg
or
mov
cmp
jecxz
pop
aas
ljmp
mov
adc
pop
flds
stos
mov
add
rcll
es
lahf
mov
and
sbb
sahf
cwtl
cltd
xor
out
jmp
mov
aam
or
mov
nop
int
test
jecxz
cltd
scas
xor
sahf
jnp
xchg
or
push
scas
imul
stc
out
test
add
in
inc
popa
psubq
out
sti
dec
xor
sbb
outsl
adc
lods
sub
into
xchg
mov
repnz
jecxz
push
push
add
jb
arpl
jmp
xchg
aas
sub
cmc
jne
dec
movsb
and
push
push
inc
jle
int
mov
int3
or
jg
jno
enter
frstor
mov
lods
mov
push
or
jo
or
mov
sub
push
xor
sbb
pop
rcrb
xor
in
je
dec
sub
insb
bound
test
mov
push
sbb
cmpsb
fldt
mov
sbb
sub
aad
lret
imull
sub
mov
push
sbb
fsubp
add
scas
add
int3
sbbb
cmp
leave
mov
xor
cmpl
movl
movl
movl
jmp
movl
movl
cmpl
jae
push
push
pushl
call
notl
subl
adc
sub
mov
sbb
xor
or
mov
and
xor
and
shl
shr
sbb
or
cmpl
notl
notl
movl
mov
jmp
mov
mov
cmpl
jae
push
push
pushl
push
call
inc
or
xor
sbb
xorl
sub
mov
mov
mov
addl
mov
and
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
jl
pushl
pushl
push
push
call
add
notl
or
movzbl
or
sub
add
mov
adc
jmp
lock
fidivs
push
push
call
call
push
sbb
adc
ss
xor
jno
pop
dec
aaa
call
hlt
pusha
adc
ds
insl
out
jge
gs
ror
mov
addb
scas
inc
cld
mov
aam
leave
scas
outsl
out
arpl
insb
out
outsb
lea
loope
stc
notl
push
inc
mov
xchg
xchg
xchg
jle
xor
push
lret
lds
xor
lods
jne
push
mov
in
fstps
fchs
popf
mov
pop
fidivl
dec
cmp
fdivs
sbb
mov
lret
mov
pusha
adc
mov
pop
mov
dec
sub
fidivrs
out
movl
push
push
aas
or
loop
add
loope
mov
cmp
icebp
pop
or
enter
fs
in
adc
arpl
in
imul
js,pn
dec
into
ds
xchg
push
mov
cmp
add
jle
movsl
lock
mov
pop
insb
js
mov
mov
adc
movsl
andl
movsl
mov
push
sahf
xchg
rcrb
xor
mov
push
stos
lret
and
fistpl
imul
popa
mov
fwait
cmp
and
or
movsl
inc
test
push
cmpsl
lds
lret
adc
test
outsl
jo
std
loope
xchg
jge
sbb
movsl
test
nop
inc
icebp
sub
cmp
xor
dec
fimull
bound
cld
loop
inc
fisttps
in
data16
pushf
ss
out
out
mov
lcall
xchg
mov
lahf
sub
inc
movsb
out
les
pushf
add
daa
push
in
push
pop
or
test
pop
pop
ljmp
push
and
div
dec
or
push
jmp
add
jge
mov
subb
or
or
gs
scas
fsub
inc
repnz
mov
stc
cmp
push
sbb
stos
adc
add
dec
ljmp
pop
lods
js
dec
jmp
dec
ja
push
jge
cmp
stc
pop
into
rorb
dec
jns
scas
adc
push
xchg
sahf
dec
leave
aam
andb
inc
inc
mov
movsl
sub
inc
fnstenv
and
mov
aaa
mov
loop,pn
ljmp
jecxz
xchg
push
pop
rolb
push
dec
imulb
sahf
xchg
jmp
icebp
jecxz
jecxz
ljmp
inc
ljmp
insl
call
jp
jo
test
lods
sub
pop
popf
add
jg
out
lock
inc
push
std
subb
cmp
or
dec
jb
xchg
js
icebp
push
dec
out
out
add
cmp
loopne
or
mov
add
cmp
sbb
cmp
xchg
pop
mov
cmp
das
fdivrs
sbb
leave
mov
fbstp
inc
adc
pop
mov
out
xchg
adcb
test
sbb
add
pop
or
je
std
pushf
aaa
sub
xor
stc
jle
push
subb
xchg
sbb
xchg
add
xor
lret
mov
imul
add
in
sub
mov
gs
test
sbb
pop
xor
addr16
xchg
jge
hlt
mov
shrd
cmpl
mov
not
not
jmp
mov
movl
cmpl
jae
push
call
movl
mov
mov
sbb
movl
or
and
cmpl
movl
mov
mov
movl
jmp
movl
movl
cmpl
jge
push
push
push
call
adcl
xor
xor
movl
adc
decl
shr
mov
xorl
mov
xor
xorl
xor
or
cmpl
movl
movl
movl
jmp
movl
mov
cmpl
jne
push
push
call
adc
andl
add
andl
add
mov
andl
push
pushl
lea
subl
push
subl
shl
andl
call
lea
orl
push
mov
mov
lea
push
negl
mov
lea
addl
mov
mov
adcl
mov
sbbl
push
negl
call
push
andl
push
sbbl
pushl
sbbl
call
sub
mov
movzbl
sbb
mov
adcl
mov
mov
shr
add
shl
and
or
adc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jbe
pushl
call
movzbl
adc
movzbl
add
and
sub
orl
xor
cmpl
mov
mov
jmp
mov
cmpl
jb
push
push
push
pushl
pushl
call
subl
addl
addl
mov
xor
add
sub
sub
sbb
add
and
mov
lea
neg
mov
add
lea
or
mov
cmpl
not
movl
mov
jmp
movl
movl
cmpl
jge
push
push
push
pushl
call
adc
add
and
mov
mov
sub
or
xor
cmpl
movl
movzwl
notl
jmp
mov
cmpl
jne
call
sbb
notl
and
mov
sbb
orl
adc
and
mov
sub
mov
xor
xor
sub
or
lea
cmpl
mov
not
not
jmp
movl
movl
cmpl
jne
push
pushl
pushl
push
pushl
call
sbb
add
sbbl
subl
movzbl
sub
mov
cmpl
movl
mov
movl
movl
jmp
mov
cmpl
jge
push
push
call
sub
mov
sbb
adc
and
adcl
sbb
xor
xor
mov
xor
movl
add
movl
sub
movl
movl
mov
jmp
xchg
inc
sub
and
jle
mov
sbb
dec
cmp
stc
add
hlt
movsl
in
std
jp
ret
jmp
pop
mov
xor
div
movl
mov
mov
negb
ljmp
popl
add
movsl
imul
mov
xchg
push
or
ljmp
cmp
sti
sbb
adc
sbb
std
stos
cmpsb
xchg
and
sbb
adc
pushl
loope
inc
mov
push
rolb
aam
jmp
cmc
jl
hlt
jmp
inc
lret
push
sbb
jp
sti
cwtl
jl
xor
leave
xchg
std
fstpl
fs
nop
and
cmp
sub
ljmp
xchg
pop
outsl
push
push
cs
cmp
cmpsb
pop
push
xchg
pop
mov
fistpll
inc
add
jns
cltd
inc
adc
xor
je
repnz
mov
arpl
add
fmull
jp
xchg
mov
gs
pop
jno
push
mov
ret
adc
push
mov
mov
popf
loope
iret
fwait
and
aas
shlb
sbb
in
aas
sbb
repnz
jae
cs
xchg
stc
xor
out
ret
std
lcall
inc
icebp
and
dec
xchg
das
mov
mov
cmc
xchg
fstpt
adc
xchg
sarl
adc
push
fstpt
outsb
movsb
jo
out
mov
je
lea
xor
pop
pushf
add
in
repnz
add
push
adc
mov
cltd
jns
mov
adc
imul
lret
imul
insb
inc
ret
adc
sbb
mov
ja
mov
mov
jl
fs
adc
adc
std
movsl
jge
fdiv
fucomip
xchg
adc
push
pop
pop
push
mov
int
je
xor
inc
add
cli
mov
ror
mov
and
and
jle
movsb
sarb
ja
fistl
mov
popf
je
lods
pop
pop
imul
push
outsl
mov
les
rcrl
cli
ljmp
dec
push
ds
dec
push
insl
js
add
mov
or
mov
adc
sbb
push
xchg
scas
mov
call
loopne
les
sub
cli
mov
popa
in
dec
pop
sub
or
jno
loop
mov
dec
mov
leave
test
rol
or
testb
fistpll
dec
loope
inc
outsl
mov
ret
out
mov
mov
ljmp
xor
mov
push
aam
inc
movsb
mov
sahf
dec
out
xchg
stc
xor
sub
xchg
in
jge
test
movb
mov
push
push
pop
xchg
cs
pop
pusha
add
mov
jbe
shlb
sub
xorb
cwtl
divps
inc
or
jge
xchg
xchg
test
mov
lret
inc
jecxz
sar
insl
pop
mov
cmc
mov
stos
sahf
xchg
mov
std
loop
mov
jno
popf
fadd
mov
pop
lods
popf
adc
xor
jg
stos
inc
addr16
test
std
or
or
mov
xchg
enter
and
mov
mov
add
adc
xor
xor
jmp
pop
es
sub
pusha
in
mov
xchg
sbb
iret
or
fidivrs
test
mov
xor
lret
pop
mov
andb
negl
pop
or
cmc
or
push
je
icebp
mov
icebp
ds
stc
scas
lea
testb
ljmp
inc
fucomi
popa
dec
adc
sub
aas
jle
xchg
lcall
sbb
jns
js
add
cli
push
insb
popf
subl
int
aaa
fidivrs
pop
or
je
cltd
fwait
cmpsb
xchg
ja
pop
jecxz
xor
add
adc
xor
ficompl
out
mov
xor
mov
xchg
popf
insl
mov
fs
mov
xor
xchg
xor
leave
dec
push
hlt
xchg
and
and
mov
ljmp
test
cmpsl
xchg
xor
outsl
xorl
out
leave
cmpsb
sub
std
adc
inc
scas
bound
inc
push
daa
inc
out
fimull
andb
add
mov
sbb
xchg
mov
imul
lahf
divl
xchg
jne
imul
jle
cmpsb
jnp
lods
fbstp
jne
outsl
xor
stos
push
bound
rep
aam
enter
lods
add
dec
jge
adc
int
ds
les
add
mov
inc
dec
mov
in
test
stc
inc
mov
cwtl
and
push
mov
es
jg
loope
jle
xchg
pop
sbb
xor
mov
mov
mov
leave
xor
xchg
ret
cltd
dec
rcll
in
mov
ds
rcrb
imul
je
push
xlat
pop
adc
sbb
push
xchg
cmp
xor
lcall
mov
mov
inc
or
push
pop
stc
mov
mov
pushf
cmp
insl
ds
in
xor
adc
cmp
sahf
or
sbb
cmp
and
xchg
add
jne
lret
cmpb
popa
cmpsl
mov
mov
daa
into
fwait
lds
lret
mov
pop
fwait
outsl
mov
sbb
daa
fxch
jmp
mov
push
lcall
or
and
xchg
bnd
xor
movsb
stos
outsb
sbb
adc
dec
cmp
xor
add
mov
lcall
fstl
sbb
cli
mov
mov
mov
imul
out
scas
xchg
cmp
cmp
mov
rcll
inc
imul
fimuls
mov
mov
jo
jecxz
dec
xorb
sbb
push
je
add
cltd
sbb
jbe
cmc
pop
orl
mov
inc
add
adcb
shr
xor
push
mov
jbe
lahf
dec
sbb
hlt
jne
sub
push
and
lret
lock
mov
ljmp
pop
loope
inc
push
outsb
cld
popf
xchg
hlt
add
cs
dec
iret
mov
cmpl
in
push
iret
xchg
or
loope
lea
jmp
negb
repz
roll
jb
je
out
lret
mov
into
sbb
jge
add
pop
repz
out
xor
sub
adc
mov
sub
in
mov
out
xlat
fldt
pop
cmpsb
dec
push
xchg
mov
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
jmp
lcall
es
lret
fldpi
pop
jle
lods
push
sbb
xor
mov
sub
push
ljmp
fadds
sbb
lods
lret
rorl
jl
rcrl
dec
repnz
js
xorl
inc
xchg
mov
mov
mov
bound
jl
cmpsl
add
push
mov
sub
jl
pop
cltd
mov
cwtl
mov
ljmp
inc
sbb
pop
das
sbb
jae
mov
xchg
jae
cmpsl
xchg
inc
mov
pop
repnz
gs
daa
and
mov
dec
or
ja
jl
outsb
push
inc
and
pop
outsl
or
or
xchg
pop
inc
xor
test
cli
push
test
repnz
mov
cmpsl
popf
stc
inc
stos
pop
out
arpl
and
push
xor
imul
scas
dec
lds
push
inc
mov
int3
cmp
gs
pop
hlt
sti
daa
mov
mov
lock
jmp
xor
movsl
or
push
push
mov
in
xor
les
dec
sarl
jp
and
loopne
xchg
mov
rol
inc
adc
push
lahf
and
mov
jno
rorb
pop
in
inc
add
push
jg
cmp
fsubl
cld
pop
pop
outsl
or
cmp
cmp
lds
jmp
pop
jp
or
mov
or
imul
int
mov
mov
scas
mov
fdivl
sub
jno
xorb
and
jb
mov
aaa
mov
mov
js
test
in
lcall
or
xchg
sahf
out
and
movl
jge
mov
xchg
xchg
test
xchg
pop
enter
rol
push
insl
xchg
or
push
cmp
outsb
testl
lock
decb
mov
push
mov
sub
cmpsb
mov
and
pushf
xchg
in
je
sub
pop
push
notb
dec
cli
outsl
adc
pop
add
mov
mov
inc
rorb
into
popf
push
ds
mov
jns
incb
xchg
mov
xor
sbbb
icebp
xchg
pop
jge
pop
mov
negb
mov
dec
dec
loop
cs
inc
jg
inc
adc
pop
shrl
jmp
jmp
cmp
cwtl
inc
jmp
push
mov
test
lods
adc
jns
gs
repz
and
lahf
sti
je
es
mov
and
fs
xchg
mov
or
pop
std
sbb
mov
scas
arpl
sbb
adc
popa
mov
cmp
jbe
aas
pop
adc
in
or
xor
mov
adc
adc
jmp
dec
or
pop
daa
rcll
adc
pop
cmpsl
mov
out
je
mov
add
jmp
iret
sbb
mov
into
cli
jb
push
pop
cmp
cmp
inc
leave
push
out
xor
pop
imul
mov
fucomip
push
call
dec
dec
int
loop
jge
mov
jbe
sub
sub
fsubl
mov
mov
xor
adc
scas
pop
aaa
cmp
push
lahf
xor
mov
mov
out
repnz
push
lahf
sbb
inc
icebp
and
jle
shlb
rorl
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
jmp
cmp
arpl
add
and
push
sbb
mov
iret
add
or
cmp
pop
add
fsubrl
xor
xor
imul
roll
inc
push
cmpsl
xor
push
or
dec
cmp
jecxz
aad
mov
dec
xor
inc
mov
roll
mov
int3
xchg
xchg
dec
and
lret
jo
jg
or
and
push
jnp
sbb
sbb
stos
jecxz
xchg
mov
rcll
push
sbb
xchg
push
dec
test
xchg
jnp
ret
sbb
add
in
inc
sbb
imul
mov
fists
cmp
push
test
sub
mov
arpl
adc
stos
jo
push
mulb
lods
scas
movsl
insb
dec
mov
and
cli
std
mov
sub
pop
roll
mov
iret
mov
cwtl
test
rcrb
mov
pop
inc
aad
stc
mov
out
cmp
mov
stc
pop
or
std
bound
les
insl
sahf
pop
inc
insb
cmp
push
cltd
fistl
xchg
sti
call
movsl
popf
mov
xor
rcr
xchg
jnp
in
mov
push
in
stos
ss
jle
call
dec
ljmp
popa
outsl
mov
mov
sbb
cmp
inc
lret
imul
and
leave
mov
sub
jo
ret
mov
stos
xor
and
clc
mov
cwtl
into
cmpsl
inc
or
fdivp
pop
insb
inc
dec
sbb
lea
jg
jnp
push
jns
xlat
mov
mov
or
ds
push
das
aam
and
ret
ds
mov
pop
push
inc
xchg
mov
ja
lock
pop
inc
fimull
mov
insb
cmp
mov
test
imul
jno
inc
popa
mov
out
inc
ljmp
and
repnz
cmpsb
add
pop
fwait
xchg
and
mov
xlat
enter
jns
xchg
mov
xchg
push
fstl
adc
pop
jbe
push
flds
dec
push
xchg
xor
lds
in
xor
dec
incl
push
cmp
sbb
andb
cmp
xor
nop
push
in
inc
adc
inc
lock
rcrl
lds
loop
testb
notb
xchg
jmp
std
pop
dec
cwtl
insb
mov
imul
rorl
pop
lock
inc
mov
dec
pop
mov
rcll
ror
sarb
pushf
dec
fnstsw
pop
outsb
xor
lcall
fmull
xor
ljmp
mov
lret
gs
pop
outsl
or
popf
insb
aad
das
les
push
xchg
cld
dec
dec
popf
add
rcrl
pushf
int
mov
push
stos
xchg
dec
cmp
inc
push
add
jmp
or
inc
pop
mov
pop
xchg
movsl
das
out
and
push
mov
stc
out
mov
jl
inc
imul
mov
add
imull
cli
add
hlt
pop
mov
insb
test
jp
xchg
cmpl
xchg
mov
mov
mov
jmp
stc
bound
jbe
add
test
jbe
lods
popf
jnp
pop
stos
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
jmp
xchg
loope
gs
fs
aam
imul
lahf
push
sbb
mov
test
imul
xchg
pop
inc
sub
stos
inc
arpl
sti
pushf
pop
aas
rcll
sarl
inc
out
mov
imul
daa
std
daa
pop
mov
aam
pusha
xchg
xchg
mov
xor
pop
xor
jbe
std
call
sar
loope
imul
inc
cli
daa
xchg
dec
xorl
jo
mov
or
xchg
lods
outsl
mov
iret
jmp
mov
fsts
ja
sbb
add
jnp
popf
int
inc
cli
jae
pusha
js
and
cmpsb
pop
cs
mov
pop
lcall
mov
and
stos
lock
ds
orb
sub
push
xchg
mov
xchg
pusha
xchg
xor
lcall
and
sahf
jae
adc
xor
test
push
sub
mov
lods
cmpsl
jo
addr16
mov
aaa
pop
mov
adc
xchg
mov
stos
xchg
rcrl
scas
cmp
fwait
xchg
insb
xor
insb
mov
jns
test
cwtl
jbe
xor
xor
or
xchg
lret
cmpsb
mov
xchg
xor
fs
jno
mov
pop
ds
cs
pop
dec
popf
ss
scas
lock
xor
inc
mov
pop
jp
out
lea
daa
cmp
out
or
adc
jmp
js
cmc
clc
or
mov
xor
jp
ret
int
mov
xchg
cmpsb
pop
loopne
ja
adc
shll
push
lcall
push
push
js
rolb
call
dec
outsb
mov
fiadds
sbb
ja
fidivl
loop
test
jnp
addb
pop
mov
inc
leave
pop
pop
push
jae
mov
call
add
pop
out
hlt
push
jge
and
cmpb
enter
mov
dec
mov
cmp
cltd
pop
jo
clc
pushf
xchg
mov
inc
inc
cltd
fwait
adc
lret
mov
fdivrl
pop
mov
cld
or
or
addr16
lcall
jg
pop
imul
lret
movsb
inc
xchg
jl
js
jp
int3
inc
testl
lret
mov
mov
rcrb
aad
dec
popf
mov
jne
sarl
inc
repnz
mov
mov
mov
hlt
inc
pop
or
push
rclb
sbb
in
mov
shlb
nop
in
out
pusha
add
lea
xor
rclb
cmpsb
testb
cmp
ljmp
mov
lret
inc
adc
jno
dec
idivb
adc
aaa
hlt
pop
mov
adc
pop
push
fnstcw
test
insb
mov
sbb
sbb
jnp
pop
hlt
dec
les
lds
pop
in
jecxz
addr16
inc
push
js
jae
pop
hlt
and
lahf
inc
in
std
cmpsb
in
sahf
add
ficoml
inc
fidivs
xchg
xor
cmp
mov
push
popl
and
sub
mov
pushf
pushf
or
push
xchg
add
scas
movsl
push
or
hlt
push
dec
ja
adc
pop
sub
out
iret
into
out
add
xor
mov
mov
inc
adc
adc
outsl
pop
cs
push
mov
sarb
push
mov
es
shlb
ljmp
xchg
jl
test
add
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
jmp
popa
cmp
cmpsb
stos
and
insl
jnp
jl
add
mov
mov
mov
clc
inc
dec
and
dec
dec
out
xor
or
pop
aaa
push
sbb
xchg
jge
in
addl
pop
cmp
pushf
call
fisubrs
mov
dec
add
repnz
sbb
fcomps
mov
sub
dec
nop
mov
imul
push
add
cmp
mov
scas
test
add
int3
sub
mov
popa
divb
fs
pusha
jmp
int
pop
rcrb
jmp
inc
mov
lret
js
add
iret
inc
aad
je
xchg
dec
notl
lret
and
std
lcall
mov
jns
push
jnp
and
je
int
xor
or
and
sub
mov
scas
notl
cmp
cmpsb
cmpsb
mov
subl
cwtl
test
fidivs
add
pop
xor
iret
and
add
shrb
cmovl
dec
and
xchg
fcomi
sub
inc
ljmp
xchg
orl
add
cmpsb
dec
lea
lahf
cwtl
mov
imul
adc
les
dec
mov
int
fildl
inc
mov
rcl
mov
pop
adc
lcall
mov
cmc
jmp
push
lret
or
cmp
out
addr16
pop
adc
adc
or
inc
repnz
dec
lods
sbb
gs
outsl
mov
add
cmp
jge
fiadds
xor
jp
sti
cli
jae
sti
gs
or
push
xor
test
cwtl
inc
aaa
iret
inc
pop
dec
test
cmp
cltd
dec
mov
or
in
cltd
imul
out
jb
jmp
stos
inc
mov
push
arpl
pop
inc
jmp
pop
out
call
sbb
mov
add
add
jle
fwait
xor
push
iret
pop
push
fwait
mov
mov
fcmovne
mov
mov
icebp
adc
out
add
test
scas
mov
mov
into
mov
ja
xchg
iret
xor
loopne
mov
push
les
xchg
popf
sub
push
and
pop
cmp
xchg
fdivs
ret
rorb
lods
fisttps
in
pop
mov
vhaddpd
lock
add
or
hlt
jp
jno
dec
and
lahf
inc
mov
divl
and
inc
dec
xchg
cmc
sbb
test
xchg
popf
lret
push
rorl
pop
outsl
mov
xchg
xor
lret
adc
jmp
lds
cwtl
jbe
dec
sahf
call
testl
dec
cmpl
or
lcall
dec
push
popa
dec
data16
aas
rep
aad
stos
cmpsl
pop
pop
mov
aad
push
jge
call
jno
sarb
jo
fwait
insb
je
mov
mov
dec
orl
pop
jg
push
fs
pop
sbb
push
rcrl
cmc
hlt
cwtl
icebp
mov
ret
cli
ret
pop
addr16
cmp
lret
jb
fcmovbe
stc
jno
jl
call
int3
cmp
pushf
mov
adc
adc
or
push
sbb
cmp
cmpsb
cmp
test
gs
mov
iret
out
inc
pop
fcompl
mov
mov
movsl
jns
shrd
shr
mov
mov
mov
jmp
push
or
sbb
scas
push
push
sbb
pop
das
fmull
stos
mov
cld
and
mov
jle
in
iret
rolb
into
out
push
js
jb
shrl
mov
loope
notb
dec
aam
jle
push
xor
xchg
jns
push
rolb
out
push
cli
or
sti
jo
int
adc
ror
js
stos
loop
int3
cmp
mov
rcl
xchg
pusha
push
adc
jnp
das
mov
std
inc
fs
sti
jmp
xlat
or
ds
xchg
or
sbb
dec
mov
shlb
dec
xor
mov
fs
inc
inc
test
dec
fiadds
and
dec
sti
and
and
pop
enter
push
pushf
sbb
outsl
jecxz
cld
dec
jmp
add
into
or
pop
cmc
xchg
repz
shlb
mov
out
out
adc
xor
les
ss
pushf
out
cmp
lret
std
cmpsl
mov
jg
or
mov
dec
mov
lahf
repz
fsubr
dec
aas
push
pusha
xor
fmuls
xchg
push
add
inc
test
dec
mov
mov
lret
jno
sub
add
int
popf
cmp
lods
insb
movsl
sarb
add
or
into
mov
pop
pushf
std
dec
ficomps
cli
loope
aam
mov
mov
cs
cs
lock
sub
in
mov
pop
clc
idivl
and
dec
out
push
push
enter
call
adc
dec
cmp
mov
mov
pop
lret
clc
sub
js
mov
fdivrl
jge
add
cli
mov
adc
add
push
mov
mov
cmp
adc
adc
rcrb
bound
mov
sarb
add
dec
mov
scas
rcl
mov
xchg
stos
enter
mov
rcrb
aad
adc
test
rorb
push
sti
pop
sbb
pop
push
adcl
pop
outsl
shrl
inc
sbb
jle
pop
or
xor
fistpl
test
fisttpl
mov
or
jge
sti
std
xchg
and
adc
arpl
add
and
aas
rcll
pop
sbb
sub
ja
sbb
hlt
cmp
sbb
pushl
pop
jno
fistps
push
mov
in
dec
push
sti
aam
ret
arpl
imul
insb
iret
xor
aas
mov
shlb
ss
xchg
mov
mov
jg
dec
push
fcomp
sahf
or
ja
inc
out
jp
fcomps
rolb
ret
sbb
mov
mov
cmp
push
mov
lods
roll
adc
fcompp
jge
mov
xchg
dec
pop
adc
cmpsb
sub
add
out
xor
sbb
subb
mov
inc
cmp
dec
scas
jb
cmp
mov
pushf
xchg
xchg
inc
scas
into
mov
movsb
ret
shrl
call
mov
je
test
cmpb
pop
fwait
inc
dec
xchg
jmp
pop
das
mov
mov
push
and
into
out
sub
fstps
push
cmp
xor
out
popf
xor
ss
pop
mov
adc
mov
pushf
or
out
fcom
mov
xchg
xchg
sub
or
daa
test
sub
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
jmp
push
and
and
jno
jl
mov
sbb
shl
scas
pusha
inc
movsb
push
push
xor
cmp
mov
cmp
jne
in
push
gs
mov
loope
xor
test
pop
das
cld
out
and
add
or
xor
stc
popf
add
xchg
pop
and
dec
test
outsb
in
in
dec
ss
loopne
scas
rdmsr
add
inc
inc
inc
out
in
adc
gs
rcll
inc
fstps
jno
movsl
outsb
imul
xchg
je
cwtl
sbb
cmp
mov
rorl
inc
sbb
and
in
cwtl
sarl
push
pop
cmp
cli
sub
sbb
adc
repnz
ja
ljmp
testl
shlb
nop
fldl
and
sbb
mov
and
repz
cli
scas
xchg
fisttpll
cmp
pop
leave
mov
addps
cmp
inc
in
jo
in
aaa
repz
pop
pushf
cmpsl
dec
das
adc
test
jecxz
aas
adc
push
mov
mov
aaa
push
out
adc
push
sub
xchg
insb
mov
rorl
sbb
jmp
mov
xchg
push
sbb
mov
sub
or
pusha
and
dec
jbe
and
xchg
dec
bound
dec
stos
popa
test
test
pop
jle
ror
test
jb
and
rcll
sbb
cmp
jg
mov
fs
or
insl
mov
cmp
jb
in
popa
jb
sarl
addb
jle
xchg
stc
imul
fsin
shlb
and
daa
inc
jae
into
push
dec
mov
push
jns
imul
mov
pop
dec
push
loopne
mov
pop
outsb
jno
lods
adc
xchg
and
jecxz
shll
adc
mov
xchg
pop
fwait
push
mov
mov
sti
cli
push
fnsave
jmp
jno
mov
inc
fldl
popf
mov
sub
xor
jae
dec
cmp
xor
aam
popf
fisttpl
packssdw
mov
pop
jb
scas
mov
pop
das
sbbl
jmp
gs
aam
mov
adc
adc
cmp
bound
sub
sbb
out
xchg
mov
aaa
int
icebp
add
add
pop
xchg
jl
mov
roll
ja
pop
jb
rcr
jae
push
cmp
inc
out
ret
hlt
mov
icebp
xor
and
push
mov
and
bound
jecxz
les
jbe
stos
popf
mov
sbb
idivb
xchg
jo
ficoml
ljmp
outsl
lea
mov
cmc
shll
dec
sub
outsb
lret
movsb
sbb
imul
dec
mov
cs
jnp
shlb
sbb
stos
sti
repz
movsl
jg
dec
cmpsl
clc
dec
dec
jg
adc
cmp
and
mov
push
rcrb
sbb
mov
pop
repnz
jo
fildll
xchg
jecxz
mov
out
clc
stos
sbb
out
xor
lods
and
push
push
out
sbb
gs
jne
or
or
or
mov
xor
push
push
push
xor
pop
ja
and
and
test
test
jae
scas
push
int3
into
lea
mov
bound
mov
inc
mov
jo
and
mov
or
mov
add
or
mov
jmp
inc
pop
push
fwait
xor
pop
stos
adc
adcl
sbb
call
jge
aaa
xchg
pop
inc
push
pop
mov
mov
and
mov
dec
leave
in
sbb
or
push
xor
mov
fwait
cs
adc
add
push
jmp
les
lahf
fimuls
leave
dec
movsl
aaa
in
inc
fldenv
add
popf
ret
mov
xor
rol
fst
enter
inc
out
jecxz
add
pop
repz
decl
mov
cli
xchg
daa
inc
ret
jle
mov
and
lea
mov
mov
fcomps
subl
push
inc
stos
mov
and
andl
insb
nop
mov
out
fistl
jge,pn
inc
sbb
es
ret
ret
add
lods
pusha
cli
ss
and
das
or
sbb
popf
mov
xchg
push
lea
scas
inc
les
push
ret
dec
dec
mov
xchg
sub
jl
xchg
stc
adc
cli
sahf
les
push
sbbl
cmpsb
lret
push
cmpsb
xchg
cmc
in
adc
sub
or
inc
stc
ja
dec
mov
mov
pop
and
cmp
lds
sbb
push
push
adc
mov
movsb
sti
repz
fs
jb
dec
shrl
xchg
push
movsl
es
mov
jecxz
cmp
call
popa
mov
jp
sbb
pop
and
cmc
push
pushf
or
aad
push
addb
adc
lods
mov
stos
lock
dec
xchg
cmp
dec
push
add
subl
popw
dec
adc
xor
aam
mov
mov
fists
adc
pushf
xchg
and
jecxz
cmc
pusha
inc
jnp
push
xchg
dec
loopne
test
sub
mov
and
dec
gs
test
mov
mov
mov
popa
aas
jge
nop
sbb
fldt
pop
in
sub
mov
sti
sbb
jo
imul
int
fbstp
mov
adc
xadd
sbb
dec
aad
pusha
push
jle
mov
cmp
cmp
xchg
sbb
and
lcall
add
dec
adc
mov
ret
sbb
mov
jge
pop
jge
mov
push
cmp
orb
sub
jecxz
fs
or
cmp
xchg
add
gs
out
mov
shrb
fldcw
arpl
push
cmp
bnd
and
mov
cmp
sbb
lock
push
xchg
rol
test
push
shr
adc
push
adc
fdivs
pushf
inc
cmp
adc
add
add
subb
xchg
jecxz
xchg
mov
dec
fs
insl
leave
jle
iret
xchg
ret
mov
into
pop
xor
mov
pop
push
cmp
xor
mov
les
test
rcll
mov
mov
cwtl
push
or
das
shl
xlat
and
fcomip
outsl
imul
sbb
fs
pusha
inc
mov
addr16
cmp
mov
out
ja
cvtdq2ps
push
adc
and
outsb
mov
add
adc
mov
pop
shl
inc
sbb
cmpsb
add
add
rcll
outsl
ja
jo
push
inc
fldenv
mov
adc
xor
lods
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
jmp
in
sarb
dec
sbb
icebp
scas
mov
dec
fistl
cmpsl
jns
sbb
add
or
dec
adc
out
jmp
push
sbb
cwtl
inc
push
in
jecxz
loope
push
unpcklps
cmp
cld
sbb
xchg
je
inc
scas
pop
xor
mov
xchg
or
je
sub
lock
insb
shl
imul
bound
lret
in
pop
in
sbb
inc
in
sbb
stc
cli
movsl
mov
sbb
aas
in
shrb
mov
test
or
mov
shrl
add
nop
xor
xor
ret
lods
inc
lcall
xchg
sbb
testl
cwtl
adc
repz
jecxz
loope
adc
cmp
mov
fiaddl
xchg
mov
mov
sub
lods
das
dec
sbb
or
mov
bound
inc
lahf
es
inc
cmp
or
and
in
and
jl
sbb
xor
scas
call
mov
insl
sbb
fiadds
int
insb
lret
xor
test
sbb
hlt
xlat
jecxz
pusha
js
ljmp
push
push
and
or
cltd
mov
in
jl
push
testl
rcll
push
cmp
push
cmpsb
fsubrp
pop
mulb
insw
sub
add
in
fisubl
inc
or
xchg
imul
mov
mov
std
cli
mov
out
jae
cmpl
adc
jns
jl
mov
pop
les
je
pop
and
inc
xchg
scas
cmp
aam
jp,pt
mov
out
pop
jb
std
in
ficomps
and
lret
jno
aas
cmpsb
cmp
mov
es
add
fwait
test
es
sahf
aad
mov
mov
xor
ret
fnsave
in
xchg
mov
leave
lcall
clc
mov
cld
dec
adc
fdivrs
orl
cmp
xchg
clc
jne
push
dec
jb
ljmp
loop
push
orb
repz
add
sbbb
nop
inc
cmc
mov
jp
dec
mov
aaa
dec
and
fstpt
sahf
enter
and
mov
dec
add
out
add
scas
mov
mov
fsubrl
and
mov
enter
mov
xor
cs
test
pop
iret
dec
and
cmpsb
cmc
shl
add
inc
outsb
out
mov
rorb
or
xchg
gs
sarl
or
sbb
cli
mov
mov
lods
icebp
lea
imul
aaa
cmp
fptan
aad
mov
push
pop
fs
jne
add
jl
sub
fwait
outsb
fs
pop
imul
inc
or
jge
inc
test
cs
js
pop
inc
cmp
xchg
xchg
fiaddl
or
popa
daa
xor
jmp
std
mov
pop
repz
or
in
repz
stc
stos
ret
adc
imul
cwtl
push
jl
or
jg
jge
xchg
sub
sbb
or
jnp
movntq
out
movsl
fimull
sub
fcmovnu
stos
adc
ret
mov
add
mov
jmp
inc
and
sbb
daa
and
cltd
lahf
jo
xchg
out
mov
mov
loop
clc
mov
into
jns
jge
sub
arpl
or
sub
popa
adc
dec
mov
or
mov
xchg
hlt
iretw
out
or
in
cmp
dec
xchg
rolb
or
xor
js
or
push
and
inc
es
push
push
jle
add
adc
stos
cmpsl
daa
pop
inc
and
outsl
mov
add
sub
outsb
push
mov
icebp
mov
mov
sub
pop
lea
dec
in
push
shll
dec
cmp
inc
ss
sbb
je
sbb
sub
dec
sbb
and
cmpsb
inc
dec
sub
sbbb
das
mov
pop
test
inc
push
incl
clc
lahf
leave
iret
movsb
xor
and
xchg
jle
pop
movsb
test
mov
push
sub
mov
int
pop
add
lcall
stos
push
mov
dec
adc
push
es
loope
sub
or
jle
adc
inc
inc
push
je
cltd
int3
cmp
icebp
sbb
stc
popa
inc
inc
lret
fs
fcoml
lret
pop
xchg
mov
lcall
in
not
clc
mov
shlb
lds
int3
fwait
push
sub
imul
fs
add
sub
je
lods
cmpl
sbb
inc
and
repz
das
pop
sub
es
mov
lods
inc
loope
jno
cmp
mov
cmpsl
pushf
std
jns
mov
fdivs
mov
movsb
cmc
insb
mov
or
mov
adc
sti
sahf
fs
xor
mov
mov
popa
into
dec
repz
fcmovnu
rcrb
mov
mov
scas
xchg
pop
inc
fcmovnu
mov
testb
iret
shl
std
jge
sub
pop
push
ficoms
inc
ss
cs
or
mov
adc
out
ret
sbb
jp
or
adc
scas
ficompl
mov
pop
sti
mov
int3
xchg
arpl
ja
push
popa
stos
rcll
xchg
sub
mov
cmp
jno
fcom
inc
enter
ja
sbb
cmp
mov
push
jg
xor
lret
jl
das
pop
xchg
xchg
aam
aam
lods
and
and
mov
mov
es
dec
sub
rcrb
xor
lret
mov
data16
cmpsb
andb
push
dec
popf
int
lock
rol
add
in
xor
out
adc
iret
add
ja
lahf
push
ficoml
push
inc
and
mov
mov
das
pop
sbb
outsl
inc
mov
fcomi
sbb
mov
cmp
cmp
sbb
sbb
or
or
xor
push
orl
add
adc
sub
popa
test
xlat
dec
pop
push
pop
shr
jae
xor
dec
or
dec
mov
or
jb
dec
ror
sub
stc
ret
adc
int
in
inc
push
xchg
loopne
pop
dec
test
dec
mov
lea
out
xorl
mov
mov
ss
inc
dec
mov
jnp
sbb
stos
aas
mov
arpl
je
je
je
je
je
and
je
and
imul
and
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
jmp
push
and
shll
push
and
jmp
dec
push
inc
push
imul
mov
mov
sub
ret
add
addr16
pop
insb
mov
je
mov
fs
std
xlat
ds
mov
jmp
ja
pop
xor
aam
jb
mov
sbb
clc
inc
rcl
mov
mov
test
leave
jns
xchg
movsb
pop
mov
xor
or
rorl
mov
ds
add
cmp
call
je
arpl
cmp
sub
push
inc
repz
jge
adc
out
test
out
mov
mov
mov
sar
cli
shrb
jnp
bnd
andb
aad
add
mov
add
adc
mov
pop
in
hlt
or
popa
adc
lea
pop
adc
push
push
xor
lock
inc
test
mov
rclb
xchg
push
dec
enter
mov
adc
dec
xor
adc
and
xor
hlt
push
xor
out
push
pop
stos
dec
mov
roll
push
pop
shll
fstpt
or
push
sbb
add
decb
adcl
jmp
and
popf
mov
mov
test
jbe
or
cmp
inc
cmp
xor
jp
shrl
mov
fstl
int3
mov
std
push
hlt
sarl
dec
mov
mov
test
push
mov
test
add
call
adc
daa
xchg
jg
loop
mov
push
in
into
or
push
into
lcall
push
jns
lock
adc
mov
and
mov
mov
cmp
push
adc
mov
sbb
add
cmpsb
jb
pop
scas
sub
outsb
lds
into
arpl
repz
and
sub
jno
sub
sbb
add
call
pop
cmpsb
push
mov
pop
call
shrl
sub
xchg
inc
pop
sbb
leave
adc
sbb
mov
mov
or
xchg
test
lds
les
out
mov
jle
and
push
movsb
fldenv
sub
test
cli
pop
dec
test
cli
lea
test
movsl
dec
inc
cmp
sub
stc
ja
sub
incl
pop
gs
lcall
xor
or
gs
xchg
push
jnp
call
rclb
aam
aad
inc
fsts
out
subl
mov
mov
pop
icebp
jns
out
dec
sub
mov
cmp
inc
sbb
fucomp
loopne
scas
sbb
dec
cli
incb
out
add
leave
sbbl
in
loope
ficoms
inc
in
and
lods
fidivrs
leave
lds
adc
out
xchg
stc
xchg
movsl
cmp
push
ja
test
pop
enter
jge
pushf
push
ret
call
push
push
mov
jb
clc
lods
jle
inc
sub
xchg
pop
aad
jl
dec
push
pop
enter
pop
dec
xchg
and
push
int
sbb
aaa
adc
xchg
inc
test
jmp
std
divb
orb
dec
mov
or
sbb
jecxz
lods
test
mov
gs
xchg
mov
sbb
or
push
orb
jmp
fimuls
jle
ds
je,pn
xchg
mov
xchg
arpl
sbb
loope,pt
add
adc
lret
int
iret
jle
or
mov
push
in
rcrb
cs
adc
lods
lock
mov
pop
stos
sub
adc
jnp
les
sbb
jne
cmp
sar
jnp
repnz
popf
inc
popf
adc
pop
sti
clc
sbb
xor
inc
cmp
cli
fstpt
pushf
add
in
xor
scas
aam
lods
cmpsl
pop
push
fsub
ret
mov
pop
stos
and
or
add
add
shrl
cmpsb
rorb
mov
pop
repnz
pushf
leave
loopne
imul
xchg
sbb
and
push
push
lds
scas
test
subb
in
daa
and
call
and
fadds
pushf
or
ret
cmp
jae
push
dec
loope
nop
push
out
pop
pop
ja
je
test
pop
cmpsb
add
cwtl
jl
insb
push
mov
hlt
xchg
sub
push
inc
shl
loop
adcl
fst
cmp
add
stc
andl
data16
or
rolb
mov
mov
cmp
movsl
out
test
cmpsl
lea
and
ss
aas
push
inc
or
cmp
dec
sti
adc
into
jo
imul
xor
add
ja
out
cltd
daa
vpaddq
jnp
and
lea
adc
add
loopne
out
lods
inc
xchg
add
sbb
pop
and
aad
loope
mov
cmp
cld
mov
sbb
iret
pop
les
popa
cld
jle
imul
test
dec
dec
xchg
mov
adc
mov
dec
push
pop
int
or
push
sub
insl
mov
lret
jne
dec
xlat
cmp
cltd
mov
addr16
dec
xor
vmulps
aaa
xchg
js
add
adcl
sahf
lea
or
not
gs
jns
out
std
add
pop
and
daa
cli
test
popf
jbe
mov
inc
out
pusha
sarb
shr
popa
cmpsb
add
rol
xor
pusha
hlt
mov
or
imul
jb
sbb
push
mov
sub
stc
pop
add
test
pusha
stc
jmp
imul
insl
and
inc
aam
test
jno
aam
cmpsb
add
pop
inc
push
ds
ret
inc
sub
in
fisttpll
jecxz
add
cmpsb
enter
xor
lret
and
inc
adc
dec
mov
xor
inc
inc
cmp
fld
jae
fstpt
testl
outsb
adc
dec
shll
push
cmp
add
dec
repnz
test
sti
push
movsl
call
fistps
jle
lcall
cmp
gs
and
push
loopne
mov
sti
inc
jmp
or
in
sub
movsl
leave
xor
fistps
cmp
mov
mov
jne
mov
jecxz
test
stos
cmp
fstl
lea
jmp
dec
jo
or
sub
xchg
iret
daa
push
femms
push
jle
mov
frstpm(287
mov
cmp
shlb
sub
rcrl
sub
addb
lods
test
test
lret
clc
sbb
fcoml
jae
popf
push
int3
ss
xchg
cltd
sub
dec
push
mov
push
mov
imul
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jmp
lahf
cmpsb
out
cltd
out
inc
push
push
mov
dec
cmp
pop
push
sbb
mov
inc
mov
pushf
cmp
push
fwait
inc
ss
dec
mov
mov
inc
pop
repnz
jmp
sahf
or
call
rcrb
xor
dec
cmp
fildl
xchg
imul
in
push
push
das
imul
outsl
ja
push
add
pop
pusha
dec
notb
add
aad
lret
aad
fadds
outsb
sub
mov
lods
dec
iret
push
pushf
leave
jbe
xchg
daa
scas
jg
jns
divb
dec
jae
push
push
iret
xchg
xor
js
rolb
jmp
xor
loopne
inc
inc
movsb
sahf
loope
jle
push
cmpsb
jo
push
jno
lret
aaa
scas
es
add
pop
inc
in
mov
mov
das
xor
xchg
pop
in
pop
mov
cs
jecxz
mov
or
arpl
or
push
ret
insb
pop
add
inc
and
jo
notb
push
or
add
add
xor
in
dec
xchg
add
cmp
mov
cmpl
into
scas
inc
pop
push
xor
xor
pop
lea
pushf
xor
idivl
fimuls
pop
rcll
in
mov
repnz
and
mov
adc
stos
daa
xchg
fstpt
mov
ret
in
lahf
sbb
clc
cmp
mov
push
shl
ret
std
dec
add
ljmp
test
stos
and
sti
sub
dec
test
fidivrl
jae
lods
mov
stc
jo
lahf
xor
sbb
or
sbb
loope
data16
adc
jo
nop
popf
and
push
xor
out
and
xorl
xor
pop
xor
stos
adc
lock
test
lds
mov
aad
xlat
rorl
pop
aas
jbe
pop
inc
cli
cmp
ss
pop
mov
xor
and
leave
jle
test
and
into
adc
test
lea
sbb
test
les
and
sub
push
push
xor
and
xlat
pop
push
push
jp
insb
mov
xacquire
sbb
cld
out
int
hlt
mov
adc
lcall
push
adc
ret
and
or
pop
inc
mov
xchg
aas
std
or
inc
inc
decb
cmp
xor
inc
loopne
lock
jge
pop
adc
dec
dec
mov
dec
dec
jae
sub
cmp
mov
and
or
cs
pop
inc
mov
lods
lcall
out
imul
xchg
mov
mov
pop
push
push
dec
daa
call
pop
jb
add
xor
lahf
fimull
scas
pop
or
lods
push
mov
mov
mov
sti
fidivl
xchg
pop
cli
jne
dec
mov
aad
in
xchg
stos
push
mov
dec
inc
pusha
arpl
arpl
das
push
add
lods
jg
ja
pushl
adc
adc
ret
insb
lds
dec
or
fimull
repz
sbb
push
mov
pop
adc
sbb
sahf
fs
imul
icebp
sub
loop
sti
nop
fmuls
nop
int3
or
jne
sbb
test
cmp
sub
mov
jne
cmp
jne
xor
jmp
mov
mov
jmp
ss
xchg
sbb
sbb
fwait
push
out
jl
xchg
and
push
push
sbb
notl
mov
adc
rol
push
and
adc
inc
dec
test
js
call
popa
mov
push
ja
pop
das
test
xchg
inc
cld
mov
and
loope
sbb
mov
mov
mov
inc
add
cmc
and
xchg
out
dec
jns
into
dec
push
fldcw
sti
mov
pop
adc
or
pop
xchg
and
cmpsb
sbb
inc
fldcw
and
sti
lock
imul
dec
test
jl
jno
mov
or
ret
jp
add
movsl
add
cli
jge
gs
mov
xor
jge
lret
lret
icebp
in
js
xlat
mov
add
daa
js
and
mov
fcmovnu
mov
mov
push
faddl
lret
sbb
out
je
testb
mov
ja
adc
pop
int
call
dec
ret
add
enter
in
lret
ljmp
int
and
xchg
cmp
int3
test
mov
mov
lret
inc
stos
pcmpeqb
jmp
jecxz
cli
dec
or
add
sbb
clc
ret
pop
sbb
movsb
test
cmpsb
mov
pop
fsubrl
imul
xchg
and
jecxz
jb
xchg
repnz
dec
popa
dec
push
andl
test
lret
pop
pop
xchg
lret
or
cmp
and
xchg
inc
add
lds
cmp
inc
cmpsl
fildll
push
inc
stc
jle
add
jbe
popa
movsl
movsl
mov
add
sbb
loope
cs
fimuls
xor
xchg
call
adc
mov
lods
cmpsb
adc
push
lret
cmp
fisttpll
jbe
out
xor
data16
ficoms
add
cltd
in
mov
nop
mov
pushf
fcmovb
jge
sbb
xor
push
dec
inc
shlb
pop
jp
cmp
inc
lods
scas
test
xor
mov
jmp
mov
mov
jae
ret
mov
stos
pop
or
testb
lods
sub
int
fiadds
lcall
movsl
ror
cmp
and
fs
out
idivl
out
mov
test
out
aaa
pop
call
pop
jecxz
cmp
icebp
push
pop
dec
mov
xchg
xchg
sbb
pmaddwd
gs
addr16
cmp
fxch
inc
add
dec
sub
pusha
sub
pop
pop
fstp
mov
test
aad
adc
push
add
gs
in
in
lret
stos
inc
lret
je
push
inc
leave
sub
sub
mov
movsb
xor
fwait
inc
jnp
inc
pop
orl
or
jo
andb
sarb
push
or
mov
fstl
testb
out
or
lcall
int3
cmp
dec
mov
cwtl
pop
fnstcw
xor
push
pop
xchg
insl
xor
aad
add
decl
daa
pop
adc
xlat
in
mov
mov
ficoml
add
xor
gs
movsb
lds
inc
jmp
in
xor
pusha
test
jle
xlat
imul
push
fwait
sbbl
jmp
shrl
je
mov
mov
add
adc
mov
mov
jmp
mov
push
push
jmp
mov
cltd
lahf
bound
mov
push
dec
push
sbb
lret
sub
mov
xchg
sub
xor
sbb
orl
in
xor
sub
jecxz
add
pop
data16
inc
mov
repnz
and
sub
out
or
movsb
pop
mov
xlat
jae
popf
inc
xor
dec
adc
mov
adc
jge
mov
cwtl
ret
jmp
lds
in
lods
xchg
push
or
int
mov
jnp
and
movsl
stos
cmp
push
lock
outsl
imul
push
and
mov
jp
adc
sbb
aaa
pop
jle
mov
pushf
mov
incl
mov
pop
out
call
cmp
jmp
sub
cwtl
insl
bound
rsqrtps
pusha
cmp
mov
jne
jne
popf
add
insl
push
in
and
sub
mov
add
cmp
inc
mov
pop
add
std
mov
jmp
in
in
mov
push
test
pop
or
or
push
lret
xchg
mov
decl
insl
aas
xchg
inc
xor
pop
sub
pop
pop
cmp
sub
push
int
mov
int3
xchg
popf
stos
stos
sbb
xor
pop
arpl
fisubl
cmc
ret
shrb
adc
pop
stc
sbb
ret
xor
fcmovne
mov
shr
mov
push
popa
xor
out
out
push
int
shlb
out
ja
arpl
or
lods
sarb
mov
cmp
mov
sbb
data16
mov
rcrb
xchg
xlat
push
add
push
pop
dec
test
jge
mov
jnp
xor
pop
pop
or
fwait
cmp
pop
dec
enter
lea
cmp
in
push
daa
sbb
push
push
and
cmp
jg
mov
sub
push
sbb
push
xor
aam
adc
lea
addr16
push
clc
mov
add
lahf
add
sbb
mov
int3
int
mov
jne
jmp
pop
mov
mov
repnz
cmp
ljmp
cmp
jg
shr
inc
iret
dec
mov
imul
add
sti
fstpl
xchg
jg
adc
pop
dec
das
out
push
jmp
jg
stc
andb
mov
stos
pop
xlat
dec
jae
je
add
fmull
inc
adcb
jge
stos
jne
xor
out
pusha
mov
out
enter
rcrl
jg
jb
sub
iret
stc
ja
dec
mov
hlt
lret
or
aad
push
scas
mov
repnz
out
les
push
sbb
std
in
mov
adc
std
mov
fstpl
repz
mov
ret
sub
adc
ret
jns
pop
sbb
rcll
adc
inc
div
out
jp
out
pushf
test
jns
jns
push
ret
mov
push
mov
scas
das
dec
push
add
pusha
jg
fdivp
mov
fwait
jae
addr16
iret
imul
int3
ss
push
adc
icebp
inc
addr16
mov
pop
ja
cmp
mov
pop
adc
movsl
sbb
divb
push
fimuls
stos
pop
push
add
fmul
outsb
nop
push
xchg
ret
add
pop
dec
jnp
and
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
jmp
dec
inc
mov
push
push
push
lds
push
sbb
shl
mov
xor
cmpsl
fidivs
or
jae
hlt
popf
mov
adc
push
mov
lahf
repnz
adc
xchg
sbb
pop
js
jbe
or
es
jne
imul
cmp
and
shrb
inc
push
cmp
add
lcall
lea
dec
jb
jecxz
cmp
and
popa
loope
insl
loope
xchg
xchg
sub
js
mov
lock
push
shl
mov
cmc
cmpsb
dec
std
sarb
dec
jns
frstor
pop
sar
addr16
testl
sub
xchg
inc
jmp
cmpsb
ja
mov
gs
push
xor
rol
xchg
jae
xor
test
xchg
push
push
mov
inc
mov
sbb
xchg
ds
xchg
jp
fs
mov
out
add
push
push
xor
lret
sbb
sbbl
mov
clc
xor
inc
fstl
ss
add
pushf
shrb
sti
lret
mov
pop
pop
dec
cmp
inc
pop
imul
mov
lcall
test
sub
or
jnp
and
inc
popa
or
stos
test
sbb
fisubl
lods
sbb
pusha
notb
dec
test
inc
stos
jmp
add
stos
call
std
bnd
arpl
cmp
in
inc
arpl
jbe
outsb
sbb
rcll
jge
xor
fisttpll
lcall
push
mov
movsl
jo
cltd
cld
ja
lock
cmpsb
push
adc
inc
push
scas
cmp
and
lret
rcll
or
shlb
andb
mov
inc
adc
hlt
push
xor
lret
inc
push
nop
jmp
and
adc
jb
dec
adc
or
iret
and
inc
mov
imul
pop
or
mov
scas
aam
aad
testb
sub
add
movsl
jl
test
call
xor
in
orl
xor
mov
fsubrs
jno
pop
xchg
or
lret
mov
mov
push
jp
pop
mov
popf
jno
pop
pop
in
lods
sub
xor
lahf
sbb
cmpsl
arpl
je
out
in
and
in
rcl
cli
xchg
jp
adc
jae
sub
inc
int
mov
leave
jecxz
xchg
pop
xchg
lea
jmp
mov
or
xchg
andb
push
iret
add
and
sub
xor
repz
mov
inc
mov
cmp
push
push
mov
adc
aas
and
adc
mov
bswap
xchg
iret
xor
jmp
loope
lgs
cmp
push
scas
gs
push
sbb
shll
rolb
pusha
cmpsb
sub
and
cld
sarl
push
cltd
xor
mov
pusha
ljmp
cmpsl
lods
push
dec
les
dec
pop
jp
loopne
fidivrs
jl
cmp
pop
push
mov
aaa
adc
pop
sub
xchg
test
lods
and
mov
lods
cli
rorl
jns
nop
mov
inc
leave
jns
ljmp
out
adc
popa
dec
cmp
jns
je
cld
std
jno
mov
sub
sub
jbe
imul
int
push
mov
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
jmp
inc
mov
and
xchg
movsl
mov
mov
pop
inc
loope
inc
pop
rol
into
sbb
shll
jnp
arpl
xchg
adc
mov
fcmove
sub
std
add
xlat
outsl
jl
sbb
in
cwtl
pop
inc
cwtl
fwait
push
lds
fucomi
sub
or
and
inc
sub
pop
cmpsb
inc
adc
sbb
mov
push
leave
stos
jbe
rcrl
push
push
aam
cli
or
add
fmuls
test
popf
push
mov
jnp
scas
mov
int3
mov
pop
lret
popf
xor
inc
jns
cmp
xchg
ds
or
jnp
jmp
mov
cmp
and
mov
or
dec
mov
aas
fldl
insl
movsl
stc
loop
int3
mov
cli
icebp
cmpl
dec
dec
or
inc
insb
push
lock
inc
lret
pop
adc
jae
in
cmpl
out
int
mov
cmp
pop
push
inc
stos
mov
sbb
arpl
dec
imul
push
sub
cmp
ds
std
es
sbb
mov
nop
sarl
add
jb
idivl
mov
mov
or
movsl
lods
jb
sub
gs
pop
fwait
repz
scas
inc
push
cmp
xchg
sub
mov
in
loopne
mov
cmpl
sub
pop
dec
sub
js
loopne
push
hlt
hlt
pop
popf
sti
pop
arpl
or
je
inc
or
sub
xchg
lret
in
inc
cmp
in
clc
sub
jecxz
ds
xchg
sub
fs
pop
jbe
jbe
mov
adc
stos
int3
mov
xchg
std
and
test
jl
popf
dec
outsl
push
in
lods
fldcw
fiaddl
cmpb
inc
mov
inc
inc
xchg
movl
xor
lret
rcrb
or
add
cmpsb
fisubs
xor
mov
shl
data16
and
pop
cmp
pop
xchg
sarb
shr
lahf
jnp
sbb
insb
adcl
xchg
inc
sub
add
mov
sbb
js
or
pop
lea
sahf
mov
mov
das
in
adc
pop
dec
jle
dec
mov
stos
mov
cmpsb
dec
lock
popf
outsb
mov
outsl
outsl
jo
cmpsb
sti
sbb
iret
push
sbb
fcoml
pop
test
and
push
mov
lahf
loope
xchg
jo
dec
adc
sbb
jmp
adc
lret
mov
or
jae
pusha
bound
cli
mov
or
and
mov
clc
int3
mov
xchg
cmpsb
add
mov
out
and
jnp
out
xchg
cmpsb
cmp
aad
xchg
fldcw
jmp
cmp
cmp
xor
mov
cwtl
jbe
lea
add
cmp
dec
jmp
jl
dec
jne
das
mov
adc
popf
fnstenv
je
jb
cmp
xchg
add
mov
mov
outsb
ret
fs
mov
movsb
insb
mov
pop
test
dec
aaa
mov
push
xchg
sub
add
sub
inc
pop
xchg
les
aaa
adc
dec
ret
orl
repz
idivb
imull
dec
std
int
nop
cmp
insb
push
movsb
cmp
stos
add
ret
pop
fs
dec
lret
popf
and
shl
or
jmp
test
nop
lahf
jp
and
xor
cld
aas
mov
mov
shlb
xchg
inc
ret
jae
shl
gs
mov
daa
les
mov
jnp
pop
pop
mov
ds
lahf
mov
fcoms
xlat
push
xchg
cmc
dec
out
mov
loopne
mov
std
fisubrl
int
roll
mov
sbb
out
fmul
jmp
push
test
push
and
or
jae
xor
cs
in
xchg
push
fsub
inc
sti
push
jno
mov
out
push
sti
mov
push
cs
sbb
imul
insb
les
mov
jnp
cmp
jmp
subb
xor
adc
pusha
sub
es
sbb
lahf
out
pop
pop
mov
sti
std
rclb
arpl
in
mov
jno
shrb
sbb
es
shrl
fsubs
mov
int
movsl
push
fs
cmp
cmp
pop
fs
dec
cmp
jmp
stos
aam
mov
and
push
and
jg
or
sbb
pop
in
add
jecxz
fsub
add
xor
xor
add
insl
mov
es
pop
testl
jae
nop
xor
push
dec
pusha
mov
sbb
mov
mov
pop
imul
mov
push
mov
jp
ret
pop
push
je
popf
xor
aad
mov
xlat
mov
inc
pop
sbb
fcoml
xchg
in
mov
pushf
add
mov
js
enter
pop
pusha
dec
push
jbe
push
xor
loope
rol
jbe
mov
mov
mov
pop
xchg
lea
movsl
daa
ret
mov
ror
sbb
pushf
pop
sbb
xor
adc
xlat
out
divb
imul
jg
xchg
fucomi
sub
xchg
mov
pusha
imul
dec
insb
stos
gs
clc
lret
mov
add
mov
xor
pop
sub
mov
sub
lret
cwtl
push
aad
push
adc
sub
adc
push
pushf
imul
xchg
adc
mov
push
jbe
push
not
sahf
jg
pop
test
out
jo
fwait
mov
fdivr
test
xchg
and
push
or
insb
js
and
push
jbe
xchg
jp
popa
je
pop
jb
sub
idivl
lcall
ss
lods
and
int
mov
gs
sub
dec
fisttpl
push
fildl
jmp
mov
loop
inc
jl
xchg
push
add
sarb
aaa
inc
out
mov
or
mov
fisubrs
clc
push
lods
xchg
jns
adc
mov
add
sub
adc
stc
pusha
aaa
daa
in
jl
cmpsl
enter
and
add
rorb
mov
mov
push
mov
in
cmpsl
adc
or
push
mov
cmp
mov
test
adcl
push
sbb
mov
inc
mov
daa
mov
jmp
jecxz
and
xor
add
sahf
arpl
popa
sub
idivb
stos
dec
ret
imul
das
sbb
mov
pusha
jg
pop
aam
call
std
push
andb
mov
fdivl
mov
mov
loopne
aam
stos
mov
lcall
push
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
or
push
cmpl
movl
mov
mov
movl
jmp
mov
cmpl
jg
push
push
call
sbb
mov
xor
mov
sbb
neg
xor
adc
mov
mov
and
push
mov
mov
sub
imul
push
add
movl
sub
movl
xorl
movl
mov
add
mov
xor
sbbl
div
xor
imul
neg
mov
orl
xor
and
xor
mov
xor
andl
div
orl
sub
cmpl
mov
mov
notl
jmp
movl
notl
cmpl
je
pushl
push
push
pushl
call
add
add
sub
adc
sub
movl
and
mov
mov
mov
sbb
movl
addl
movl
xor
movl
or
jmp
ret
push
sbb
mov
mov
int3
dec
push
das
push
sbb
adc
es
jge
clc
ret
repz
insl
sahf
divb
mov
pop
dec
stos
iret
lds
stc
jp
jo
fcmovu
data16
out
test
add
sub
int3
adc
aas
xchg
dec
push
sbb
inc
dec
aad
fwait
xor
rorl
or
xchg
fisubrs
sbb
aad
mov
sub
push
jp
mov
xor
call
jb
sub
pushf
jecxz
push
add
jnp
cli
inc
mov
inc
sbb
dec
and
cli
inc
jle
xor
cltd
pop
adc
push
inc
push
jg
fsubs
and
and
xor
cli
test
or
fldcw
call
icebp
movsl
push
sub
rcrb
jl
ficompl
lret
push
stos
adc
test
xorb
sub
push
dec
xlat
iret
mov
push
cmp
sahf
cmp
mov
add
adc
add
in
add
iret
mov
jns
adc
idivl
push
and
sbb
stc
or
into
and
jg
out
sbb
gs
faddl
lea
repz
std
popf
and
push
rorl
push
or
and
pop
jae
jge
daa
enter
cmpl
push
aas
dec
cmp
cmp
dec
mov
sbb
jecxz
push
les
jg
popa
shr
shll
sub
fnop
pop
xchg
inc
xchg
xor
insb
adc
mov
orl
ret
lret
jecxz
das
mov
daa
xchg
lods
int
or
mov
loopne
mov
out
lcall
nop
movsb
sub
xchg
xchg
add
test
shll
lret
inc
cltd
dec
enter
and
insl
cmp
mov
popa
cmp
push
jecxz
test
fists
loope
sub
xchg
mov
inc
daa
pop
lea
sahf
cmp
ljmp
cs
pop
shrl
pop
sarl
and
push
js
insl
dec
or
push
cmp
ss
push
pop
xchg
push
adc
sbb
rorl
cld
mov
out
or
loope
push
outsb
orl
cmpsb
cmpsl
dec
cmp
aaa
jl
add
xchg
jns
sub
aam
scas
sub
pop
inc
push
je
loopne
mov
cmp
shl
jmp
mov
testl
loop
mov
test
add
dec
pop
cmc
mov
push
add
pop
xchg
out
mov
sbb
setae
or
mov
xchg
scas
jge
fsubrs
es
mov
sti
jle
ds
fstl
dec
lock
arpl
shll
sbb
xchg
pop
push
fistl
aad
dec
push
mov
add
mov
sti
and
adc
xchg
xor
add
test
incl
add
sbb
xor
movzwl
sbb
imul
and
mov
cmpl
mov
mov
mov
jmp
movl
cmpl
jb
pushl
push
push
call
sub
inc
and
movl
and
xor
and
and
sub
mov
jmp
adc
fstps
and
cmpsl
repz
jo
sub
sbb
cmp
cs
sub
fnsetpm(287
lds
lahf
in
adc
cmp
inc
pop
sbb
out
insl
jns
out
mov
mov
xchg
and
inc
sub
adc
and
xorl
fistpl
xor
jg
ljmp
adc
inc
adc
adc
cmp
sub
enter
leave
xchg
cs
xchg
lcall
add
sti
adc
cwtl
stc
mov
jl
mov
inc
inc
outsl
dec
bound
xchg
adcb
jp
insl
dec
adc
ja
fiaddl
idivl
cmp
cmp
sti
adc
rcl
mov
xchg
push
sbb
or
mov
dec
inc
fadd
fdiv
jns
repnz
ret
arpl
inc
mov
out
outsb
mov
jo
sub
das
pop
cld
jae
push
pop
inc
push
in
mov
xchg
sbb
pushf
js
mov
mov
dec
aad
mov
fstps
jecxz
sbb
xchg
xlat
xor
fsubrs
mov
adcb
inc
movsb
xor
mov
jnp
test
out
les
push
mov
out
cs
test
push
adc
lock
or
daa
xlat
in
scas
sahf
dec
aam
into
jge
push
add
cltd
test
xor
jbe
fnstsw
xor
mov
and
xor
dec
xor
inc
xor
int
xchg
into
repz
rcrb
push
sbb
push
fmuls
sbbl
divb
je
pop
imul
or
jae
xlat
mov
inc
inc
push
or
data16
in
into
out
testl
adc
inc
push
cli
js
xchg
mov
orb
mov
xor
xchg
fsqrt
xchg
mov
lods
stos
adc
adcb
mov
dec
ds
inc
daa
lea
jne
shrb
aad
sub
daa
jo
int
mov
fwait
popa
shr
inc
stos
dec
jbe
pop
and
popa
int
xor
int3
cmp
imulb
mov
ss
nop
or
clc
icebp
cmp
mov
add
cmp
lea
aam
out
jo
mov
faddl
xchg
pop
dec
or
or
xchg
pop
inc
cmpsb
ljmp
test
addr16
mov
mov
into
adc
shlb
fwait
mov
xor
lret
call
stos
xor
push
or
daa
insb
inc
jae
pop
jecxz
bound
fwait
add
pop
mov
je,pn
add
mov
es
into
lret
adc
sbb
rorl
inc
adc
call
push
sbb
jl
cmp
lds
fstpl
divb
cmp
add
ljmp
push
xchg
popf
mov
lret
push
xchg
adc
imul
cmp
rcrl
pop
fiaddl
lds
pop
not
mov
inc
nop
mov
add
add
movzwl
mov
mov
jmp
not
mov
cmpl
jbe
pushl
pushl
pushl
push
push
push
push
call
sub
movl
and
or
xor
or
mov
sbb
movl
movl
movl
orl
mov
imul
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
ja
pushl
push
call
sub
incl
add
or
sub
mov
cmpl
not
movl
movl
mov
jmp
movl
cmpl
ja
push
pushl
call
negl
andl
and
movzbl
sbb
mov
subl
and
imul
and
imul
mov
sbbl
and
cmpl
movl
mov
not
jmp
movl
notl
cmpl
jg
push
pushl
push
pushl
push
pushl
push
push
pushl
pushl
call
inc
adc
and
movzwl
add
mov
addl
adcl
dec
subl
or
movl
mov
adcl
xor
or
mov
adcl
mov
xorl
lea
cmpl
mov
mov
mov
notl
jmp
movl
cmpl
jae
push
call
dec
orl
mov
add
sbb
mov
adc
and
mov
mov
mov
xor
movl
not
movl
subl
movl
xor
mov
cmpl
movl
notl
mov
jmp
movl
mov
cmpl
jb
push
push
call
movzwl
xor
mov
add
mov
mov
adc
inc
xor
sub
andl
xor
add
mov
addl
or
andl
add
or
mov
addl
or
add
add
or
xor
mov
cmpl
mov
mov
movl
jmp
movl
mov
cmpl
jne
pushl
push
push
call
sub
xor
add
mov
add
adc
andl
movl
cmpl
mov
movl
movl
mov
jmp
mov
cmpl
jge
push
push
push
call
and
add
adcl
and
sub
subl
movl
or
movl
movl
mov
add
xorl
mov
subl
sub
decl
mov
lea
or
adc
sub
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
je
call
sbbl
xorl
add
andl
or
movl
movl
xor
mov
movzwl
or
add
cmpl
movl
movl
jmp
mov
cmpl
jg
push
call
adc
sbb
movzwl
add
addl
orl
mov
and
imul
mov
addl
imul
xor
mov
div
or
sub
mov
cmpl
mov
mov
jmp
mov
movl
cmpl
jb
push
pushl
call
adc
dec
movzbl
sbb
mov
xor
movzwl
or
xor
add
add
and
movl
cmpl
mov
mov
mov
movl
jmp
not
cmpl
jne
push
push
call
and
mov
or
mov
mov
add
mov
sbb
adc
movl
xor
movl
or
mov
sub
mov
orl
xor
xorl
div
imul
add
cmpl
mov
movl
jmp
movl
movl
cmpl
jne
push
call
and
adc
sub
mov
sbb
mov
andl
add
mov
adcl
xor
or
xor
or
mov
subl
div
cmpl
mov
mov
movl
mov
jmp
movl
cmpl
jbe
push
push
pushl
call
neg
sbb
andl
mov
xor
movzbl
sub
movl
xor
adc
mov
movl
mov
add
mov
movl
xor
movl
cmpl
mov
mov
mov
movzwl
jmp
mov
mov
cmpl
ja
pushl
call
and
xorl
add
or
mov
mov
sbb
sbbl
mov
mov
sub
shr
sub
xor
mov
imul
mov
sbbl
and
xor
mov
sub
mov
movl
movl
sub
mov
xor
or
xor
add
xor
mov
or
sub
mov
adc
movl
sub
movl
movl
cmpl
notl
mov
jmp
mov
cmpl
jne
pushl
call
andl
add
movzwl
and
and
add
mov
mov
sub
and
movl
not
movl
movzbl
or
movl
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
push
call
or
and
adc
adc
sbb
movl
mov
and
add
jmp
test
cmp
pop
cmp
mov
cli
jge
and
push
sbb
fcomps
xlat
cmpsl
imul
fcompl
enter
sub
xchg
xchg
movsl
jb
nop
jae
aaa
lret
dec
cmpsl
fcomip
add
adc
pop
pop
mov
shlb
sbb
call
mov
pop
out
outsb
push
xchg
mov
mov
dec
mov
push
out
cmpb
into
dec
ja
cmp
lds
xor
dec
jbe
cltd
pop
xor
mov
cmc
js
xor
out
sub
test
test
cmp
cli
sub
xchg
xor
cs
push
jnp
imul
adc
jbe
mov
sbbl
cmpsl
enter
cmp
mov
imul
jno
outsl
dec
pop
pop
dec
mov
sub
gs
mov
pop
enter
int3
jns
or
mov
insl
jl
mov
inc
pop
xlat
mulb
sti
scas
xorb
es
test
mov
and
test
scas
dec
test
mov
adc
jae
int3
insl
test
loop
js
push
and
xchg
cmp
push
imul
rolb
sub
lods
test
out
lret
mov
mov
mov
aam
aaa
hlt
jno
or
cli
or
cli
addr16
dec
adcb
jne
pop
stos
daa
sbb
adc
xlat
lods
and
xchg
dec
aas
pop
sbb
out
mov
aaa
repnz
mov
jno
and
sub
icebp
and
mov
mov
push
inc
push
xlat
aaa
test
cli
sub
or
out
out
or
test
cmp
aam
iret
jle
mov
int3
cmp
loopne
scas
push
dec
bound
aam
arpl
je
je
jno
jge
out
sub
dec
in
fisubrl
in
mov
fs
and
pop
cwtl
adc
mov
nop
and
mov
sbb
inc
inc
pushf
movsl
inc
push
test
xchg
sub
arpl
mov
loop
mov
adc
push
or
inc
jne
int
jl
add
aaa
mov
stos
leave
add
or
and
orb
jno
rorl
loope
or
inc
add
outsb
cmc
inc
loope
pop
jmp
out
imul
iret
xchg
sbb
pop
cmpsl
shlb
xchg
fdivl
sbb
test
pushf
mov
add
pusha
test
dec
sbb
cs
xor
or
loopne
outsl
ja
or
mov
cmc
cmp
pop
jmp
in
xchg
insb
ljmp
pusha
out
mov
fcmovnbe
or
push
ljmp
add
cmpsl
lods
xchg
test
pop
mov
out
fsubrl
jg
popa
dec
and
add
hlt
std
repnz
loopne
add
mov
xchg
addr16
aad
orl
loop
dec
or
adc
int
jbe
stos
scas
rolb
mov
in
incl
add
addl
rorl
add
mov
imul
imul
mov
or
and
mov
subl
lea
addl
push
addl
call
cmpl
mov
mov
mov
movl
jmp
movl
notl
cmpl
jae
pushl
push
pushl
pushl
push
call
adc
xor
add
mov
mov
sub
and
sbb
mov
mov
add
imul
sbb
add
and
cmpl
mov
mov
movzwl
jmp
movl
mov
cmpl
jae
push
call
movzwl
add
adc
addl
and
or
sbb
sub
cmpl
movl
movl
movl
notl
jmp
mov
cmpl
je
push
pushl
call
subl
movzwl
xor
mov
mov
or
xor
add
orl
xor
addl
mov
div
xor
xor
add
adc
mov
sbbl
movl
movl
cmpl
movl
mov
jmp
movzwl
cmpl
jne
push
pushl
push
push
pushl
call
mov
sbb
and
sbb
mov
or
mov
mov
sub
and
adc
movl
movl
adc
movl
cmpl
not
movl
jmp
movl
notl
cmpl
jge
push
push
push
pushl
call
xor
mov
or
mov
mov
and
and
and
mov
xor
movzwl
and
mov
sub
movl
xorl
movl
sbb
movl
jmp
movsl
mov
push
and
stos
sub
push
sbb
das
add
sub
and
or
aaa
movsb
pop
mov
xorb
rolb
aas
addb
sbb
in
sbb
and
mov
cld
rolb
cwtl
lock
fiaddl
mov
loop
xchg
jg
xchg
pushf
dec
ficoms
es
adc
rcrb
pop
jns
inc
jb
dec
lods
mov
jns
scas
inc
faddl
inc
imul
xor
and
loop
jo
mov
mov
add
pop
add
in
mov
lods
lret
aaa
inc
xor
and
test
inc
sbb
sub
lds
pop
in
mov
and
rdpmc
cmp
dec
jo
les
loopne
xor
clc
pop
test
in
xor
pop
movsb
push
sbb
ror
movsl
inc
testb
mov
push
leave
push
fisubrs
ret
mov
pop
loop
or
lods
loop
xchg
or
loopne
scas
xchg
mov
adc
gs
rcll
test
ja
pop
xor
adc
jl
dec
cmpsb
xchg
cmc
ror
sti
add
arpl
lds
shl
pop
jl,pn
pop
pop
jp
sbb
inc
jp
jmp
sbb
xor
fists
jg
cltd
mov
jp
sbb
fsubrl
pop
push
push
push
xchg
fs
push
sbb
jo
arpl
movsb
and
lcall
sub
out
into
mov
sbb
scas
push
sbb
mov
jmp
outsb
ret
lock
add
sahf
mov
lcall
rcrb
vaddsd
or
inc
repnz
int
xchg
aas
and
sarb
mov
mov
xchg
imul
push
jmp
mov
mov
fldl
add
jb
mov
cld
inc
adc
in
adc
insb
cmpsb
adc
insl
jp
cwtl
add
leave
cld
xlat
cmc
in
pushf
sti
ficomps
int3
int
mov
int3
and
insl
repnz
fcomps
mov
rolb
lret
int
push
addr16
sub
subl
fcmovu
faddl
mov
sub
cli
jnp
dec
inc
xchg
or
xor
pop
push
out
mov
add
mov
adc
mov
cmp
out
jo
loop
mov
inc
pop
cmp
ja
cmpsb
or
xlat
lds
xchg
and
jo
and
jle
xor
mov
ja
in
sub
add
push
adc
push
loop
jl
dec
xchg
stos
jns
mov
mov
jmp
pop
repnz
loope
imul
shl
mov
sbb
cwtl
loopne
jmp
es
movsl
xlat
stos
addr16
add
sub
pop
imul
mov
out
out
pop
dec
nop
in
sub
mov
hlt
imul
stos
sbb
movl
movl
movl
xor
movl
xorl
mov
cmpl
movzwl
mov
jmp
movl
movl
cmpl
jne
push
push
call
subl
inc
inc
and
and
sbb
and
mov
adc
mov
mov
sub
and
add
sub
cmpl
mov
mov
jmp
movl
cmpl
je
pushl
push
pushl
pushl
call
mov
or
xor
add
mov
sub
or
mov
or
add
sbb
sub
or
jmp
mov
lds
stos
xorb
push
gs
mov
hlt
cmp
inc
int3
rcrl
mov
insb
mov
aas
icebp
outsb
fcmovnb
or
cmp
daa
lods
rcl
call
mov
orl
push
repnz
xchg
xchg
dec
test
jmp
orl
push
lea
pop
add
mov
dec
mov
inc
push
mov
sub
pop
mov
mov
inc
stc
int3
sbb
jecxz
sub
inc
mov
arpl
das
jae
dec
mov
fcoml
adc
inc
sub
or
dec
mov
outsl
and
cmp
jmp
cmp
add
movsb
sub
cmp
fs
test
jle
jmp
sub
pop
and
sub
dec
pusha
mov
xchg
das
decl
sub
jnp
lock
out
mov
cmp
adc
test
dec
std
filds
pop
or
scas
int
fmuls
insl
fnsetpm(287
cmp
cmp
out
fisubl
sub
sbb
push
iret
outsl
lret
pop
les
mov
dec
in
pop
sbb
ja
push
inc
cmp
pop
adc
jmp
pop
jl
jmp
insb
push
adc
call
mov
dec
add
push
xchg
movsl
retw
jb
test
pop
xchg
mov
jp
movsb
outsl
daa
mov
mov
sub
push
push
filds
mov
mov
aam
loop
sbb
jecxz
jmp
daa
push
pop
cld
mov
mov
insb
xor
inc
sub
add
add
data16
sub
cltd
es
js
mov
push
jbe
xor
or
sbb
mov
scas
jle
pop
and
test
add
pop
mov
mov
pop
add
jo
aaa
push
dec
jge
mov
adc
sbb
inc
fimuls
and
xor
or
mov
and
popf
mov
push
cld
or
lock
xchg
and
shll
cmp
dec
popa
adc
ret
sub
jno
push
cld
sbb
jg
dec
jae
or
dec
lods
pop
lds
scas
fdivrs
or
icebp
jns
sub
mov
mov
shrl
push
xor
ret
movsl
loopne
sbb
push
jne
mov
vcvtsd2si
adc
add
mov
lret
cmp
xor
mov
pop
test
inc
cmpsl
fidivs
dec
and
xor
shl
mov
lret
rcl
aam
dec
sahf
inc
sub
mov
imul
loop
cmp
sub
cmp
lahf
xor
pop
movsb
gs
aaa
ficoms
cwtl
lahf
sbb
jle
mov
adc
shr
fcmovne
ret
lret
movsb
inc
aad
in
test
out
jne
lcall
scas
and
jl
sbb
mov
mov
add
mov
sbb
imul
cmpl
mov
movl
jmp
mov
movl
cmpl
jle
push
push
call
add
xor
adc
xor
mov
or
mov
and
negl
dec
movzwl
sbb
mov
mov
xor
add
xor
add
sub
xor
lea
cmpl
movl
mov
mov
jmp
movl
cmpl
ja
pushl
pushl
pushl
call
neg
xor
or
xor
add
sub
or
sub
mov
sbb
mov
add
subl
cmpl
mov
movzbl
movl
mov
jmp
movl
cmpl
jle
pushl
call
xor
add
xor
mov
sbb
movzwl
or
mov
decl
subl
mov
mov
mov
add
mov
neg
xor
cmpl
movl
movl
movl
mov
jmp
movl
cmpl
jae
pushl
push
pushl
push
pushl
call
sbb
adc
and
sbb
add
mov
lea
and
mov
sub
add
mov
movl
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
test
fdivr
and
lcall
xchg
clc
push
movhps
mov
sbb
push
and
lret
dec
aam
jno
clts
sbb
cmp
jmp
push
leave
mov
pop
add
push
cmp
mov
dec
cld
sub
in
pop
add
xor
imul
lods
pop
jle
cld
xchg
jnp
clc
movsb
idivl
or
sbb
outsl
out
fs
xchg
dec
jns
mov
test
jle
inc
xchg
mov
pause
mov
cmpsl
push
mov
test
out
cs
push
repz
lret
out
pusha
cmp
es
ret
ret
lea
mov
pop
movl
test
cwtl
mov
dec
daa
and
lahf
jg
add
je
rep
sbb
inc
test
jmp
pop
push
cs
loope
iret
insb
inc
mov
data16
addr16
sti
imul
cmp
call
mov
and
outsl
lret
in
cmp
jp
push
rcrb
popa
fmul
dec
loop
nop
sti
addr16
subl
gs
ss
into
push
int3
jecxz
jge
int
mov
xor
ja
pop
bound
mov
mov
fistps
adc
shll
adc
add
xchg
adc
mov
popf
fs
out
sub
je
mov
repnz
daa
xchg
mov
or
aas
cmp
xchg
loop
xchg
cwtl
sbb
cmpsl
negl
dec
stc
xlat
cmp
addr16
push
sub
mov
mov
mov
mov
int3
pop
adc
xor
jecxz
cwtl
imul
pop
xchg
xor
sub
mov
jno
out
test
jb
notb
movsl
out
xorl
ficoml
xchg
xchg
aas
sti
icebp
adc
push
shll
cltd
cmc
dec
mov
jnp
adc
es
lret
imul
adc
clc
sbb
jecxz
xchg
add
orl
or
inc
cli
arpl
loopne
fdivl
aaa
out
add
daa
gs
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
movl
movl
jmp
mov
cmpl
jbe
push
call
incl
subl
incl
adc
orl
not
push
push
sbb
mov
or
jne
mov
mov
xor
div
xorl
mov
mov
div
mov
mov
jmp
mov
sbb
mov
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jle
push
call
xorl
sub
sbbl
dec
not
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
orl
subl
movl
cmpl
movl
je
xor
add
mov
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
orl
shld
movl
shl
ret
inc
mov
subl
xor
and
shl
ret
xor
xor
ret
add
add
jmp
es
jno
ja
int3
fsubrl
jo
popa
insb
push
lods
xor
insb
popa
outsb
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
outsl
add
add
jne
je
xor
xor
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
dec
and
dec
insb
gs
arpl
push
outsl
inc
jne
jae
jb
aam
inc
add
daa
inc
add
inc
add
inc
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
add
add
inc
add
inc
add
inc
add
es
add
inc
add
jle
add
daa
inc
add
inc
add
and
inc
add
add
push
movsb
scas
or
movsb
adc
inc
add
es
add
es
add
es
add
es
add
inc
add
and
push
es
add
lcall
js
inc
add
es
add
loopne
jbe
pop
cmpsb
add
inc
add
rcl
pop
out
jle
add
outsl
arpl
pop
xor
cmpsl
mov
xchg
test
es
add
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
hlt
and
in
inc
add
loop
js
lcall
and
add
lock
and
addb
add
hlt
clc
sarb
sub
jle
add
add
inc
add
jmp
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
mov
jb
pop
sub
and
inc
add
fbld
adc
popa
arpl
popa
outsl
gs
jae
outsl
insb
gs
in
jg
ja
jp
inc
push
movsl
push
dec
gs
popa
push
jne
jae
imul
inc
jae
imul
jb
gs
lds
xor
fs
push
gs
popa
insl
imul
add
add
push
mov
jb
jno
or
lods
repnz
je
je
js
cmc
outsl
insl
popa
imul
popa
jb
push
imul
mov
jns
outsl
addr16
add
sub
icebp
gs
jae
popa
je
insl
add
in
mov
insl
imul
gs
add
jne
popa
or
popa
push
loope
stos
je
push
popa
jb
jae
imul
loope
aad
jb
imul
je
adc
outsl
gs
imul
outsb
shrl
ja
outsl
popa
outsb
gs
imul
imul
inc
jb
sbb
jo
addr16
jo
fs
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
insb
jae
bound
bound
add
insb
popa
inc
gs
fs
add
push
outsl
jns
add
jns
popa
outsl
bound
add
push
add
arpl
popa
insb
jne
gs
insl
imul
outsl
jb
jo
ja
gs
jb
bound
add
outsb
addr16
outsb
arpl
add
jne
je
outsb
push
popa
jb
add
jb
popa
insb
insl
je
outsl
ja
jb
jo
insl
jns
push
outsb
push
imul
inc
outsl
popa
insb
popa
imul
je
outsl
outsb
gs
inc
push
jns
jns
jne
imul
outsl
je
gs
outsl
je
imul
jo
popa
insb
dec
outsb
popa
jo
add
je
gs
jae
js
popa
data16
insb
popa
imul
gs
jb
inc
insb
popa
bound
je
insb
jns
push
popa
inc
popa
insb
insb
push
outsl
insl
outsl
jb
data16
jae
bound
add
outsb
gs
je
gs
add
outsl
inc
popa
imul
jo
fs
je
imul
outsl
add
jne
add
popa
add
add
add
insl
add
add
jb
ja
imul
outsb
add
add
ja
imul
push
add
je
jbe
add
je
add
insb
add
imul
outsl
add
je
popa
add
push
add
arpl
imul
add
outsl
add
add
jns
add
insb
add
jns
jbe
popa
add
popa
add
outsl
add
add
jb
jae
imul
imul
bound
outsl
add
imul
js
jae
outsl
add
popa
add
je
add
bound
jns
add
add
add
add
js
imul
imul
popa
add
add
add
ja
insb
add
popa
add
jo
popa
add
imul
add
jbe
add
jb
jne
je
insl
add
arpl
jne
jo
add
jae
outsl
add
imul
outsl
add
jb
jae
outsl
add
add
outsl
add
popa
add
jae
data16
jb
popa
add
add
add
adc
out
adc
js
adc
test
adc
fs
adc
jp
adc
enter
loop
adc
ja
adc
cmp
adc
rclb
adc
sbb
add
add
add
adc
mov
adc
out
sbb
adc
add
jbe
add
inc
add
inc
add
inc
add
inc
add
addl
popl
inc
add
addl
mov
addl
scas
addl
mov
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
or
add
push
adc
cmpsl
outsl
adc
push
popa
adc
add
add
jle
add
adc
mov
adc
aas
inc
adc
pop
and
add
jl
add
adc
inc
push
adc
mov
pop
adc
sub
add
ja
add
sbb
add
adc
or
adc
sbb
data16
xchg
bound
add
dec
adc
in
adc
sub
add
adc
imul
rolb
in
adc
mov
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
and
add
push
adc
testb
add
sbb
add
or
add
pop
adc
adc
cmp
add
sbb
add
adc
push
adc
mov
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
pusha
adc
pop
js
add
dec
adc
cmp
adc
aam
adc
or
adc
pop
push
adc
mov
xor
add
and
adc
adc
add
dec
adc
jae
adc
dec
add
inc
add
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
cmp
dec
add
add
jo
add
add
add
add
add
add
add
inc
lea
add
add
push
lea
add
xchg
add
add
xchg
add
add
pusha
xchg
add
add
add
add
xchg
add
xchg
add
xchg
add
xchg
add
add
push
xchg
add
xchg
add
xchg
add
add
bound
add
jle
add
nop
xchg
add
add
les
add
loop
add
xacquire
add
mov
add
mov
add
add
mov
add
add
add
insb
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
cmp
add
mov
add
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
add
add
sub
add
dec
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
jl
add
xchg
mov
add
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
add
sub
add
cmp
add
add
bound
add
mov
add
add
aam
add
loop
add
cli
mov
add
add
push
lea
add
fs
add
add
je
outsl
jns
jb
jo
jb
jns
push
popa
add
pop
add
outsl
jo
jb
jns
push
add
pop
add
outsl
jo
jb
jns
push
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
je
outsl
jns
inc
add
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
dec
add
popa
addr16
imul
outsl
jbe
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
push
add
gs
je
inc
imul
imul
jb
insl
push
add
xor
push
gs
popa
jb
je
outsl
jae
cmp
inc
gs
gs
popa
addr16
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
arpl
outsl
jo
jo
outsb
jne
add
add
outsb
imul
push
arpl
add
popa
jb
jo
gs
add
add
je
insb
addr16
je
insl
push
gs
inc
add
push
outsb
gs
outsl
jo
jo
add
add
insl
outsl
jbe
push
jb
jo
add
push
push
outsb
outsl
ja
add
add
insb
insb
push
imul
outsl
arpl
mov
dec
outsl
popa
fs
outsb
jne
add
arpl
outsl
push
push
outsb
outsl
ja
add
add
jb
insb
insb
push
imul
add
popl
inc
gs
imul
outsl
arpl
add
add
popa
jb
jb
jbe
add
fs
je
push
arpl
xor
inc
gs
outsb
jne
je
insl
dec
inc
add
fs
outsl
je
data16
gs
popa
addr16
add
mov
dec
outsl
popa
fs
arpl
push
add
imul
popa
bound
add
inc
outsl
jb
addr16
jne
fs
imul
add
je
imul
js
inc
add
add
je
gs
popa
addr16
add
add
outsb
fs
gs
popa
addr16
add
das
add
je
arpl
gs
imul
add
imul
popa
jae
inc
js
add
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
dec
gs
popa
addr16
imul
inc
popa
jae
popa
fs
imul
add
add
imul
jae
js
repnz
jae
dec
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
test
fs
imul
add
ja
je
je
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
inc
push
jo
jb
jne
push
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
inc
gs
jb
jo
add
dec
add
jo
push
arpl
sub
jb
gs
push
add
push
ja
jb
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
fs
je
imul
inc
gs
imul
outsb
addr16
add
leave
add
jo
imul
imul
inc
push
dec
gs
push
add
push
push
inc
push
xor
cs
insb
add
xchg
add
insb
dec
outsb
imul
jb
outsb
add
fs
insb
cs
insb
add
dec
outsl
arpl
gs
outsb
outsw
push
add
inc
add
je
jb
arpl
fs
jae
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
sub
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
gs
je
dec
popa
imul
popl
inc
gs
je
insl
dec
popa
insl
gs
add
pusha
add
je
jns
je
insl
push
imul
imul
jns
add
aas
add
fs
imul
add
xchg
add
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
jne
jb
add
testl
imul
jb
inc
imul
jne
arpl
add
add
jbe
inc
imul
popa
imul
jo
imul
inc
gs
imul
jo
inc
add
and
gs
imul
bound
gs
add
add
jbe
inc
imul
add
jo
inc
imul
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
sub
gs
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
push
add
je
jb
jb
je
arpl
push
arpl
outsb
add
jg
inc
outsl
insb
fs
je
imul
insb
jae
jb
outsb
inc
add
sahf
add
je
outsl
insl
insl
push
imul
add
gs
push
push
imul
inc
push
dec
inc
dec
xor
cs
insb
add
mov
push
outsl
insb
jns
outsl
outsb
add
gs
bound
arpl
add
gs
inc
inc
add
roll
push
gs
arpl
push
arpl
jmp
push
gs
popa
jo
outsl
fs
leave
add
jne
fs
arpl
add
je
insb
je
add
insb
imul
je
add
jge
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
push
gs
inc
js
outsb
je
outsl
imul
push
arpl
gs
imul
inc
js
inc
js
add
add
insb
arpl
imul
add
je
gs
inc
outsl
insb
outsl
jb
add
push
imul
inc
outsl
insl
bound
gs
outsb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
outsl
add
mov
popa
je
dec
inc
push
add
je
imul
movsl
add
gs
je
push
popa
insb
gs
add
dec
xor
cs
insb
add
add
add
add
imul
outsl
insl
add
je
outsb
arpl
jb
jb
imul
add
add
add
xchg
add
add
xchg
add
add
pusha
xchg
add
add
add
add
xchg
add
xchg
add
xchg
add
xchg
add
add
push
xchg
add
xchg
add
xchg
add
add
bound
add
jle
add
nop
xchg
add
add
les
add
loop
add
xacquire
add
mov
add
mov
add
add
mov
add
add
add
insb
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
cmp
add
mov
add
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
add
add
sub
add
dec
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
jl
add
xchg
mov
add
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
add
sub
add
cmp
add
add
bound
add
mov
add
add
aam
add
loop
add
cli
mov
add
add
push
lea
add
add
