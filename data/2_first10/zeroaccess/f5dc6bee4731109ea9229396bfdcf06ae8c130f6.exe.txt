push
mov
sub
xorl
push
movzwl
sub
mov
push
push
andl
call
test
movl
je
adcl
xor
jmp
push
push
xor
andl
inc
push
push
call
xorl
test
movl
je
xor
movl
jmp
sbbl
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
subl
push
movl
push
call
andl
test
jne
push
push
adcl
call
test
movl
jne
push
push
call
xorl
test
jne
addl
push
andl
push
addl
call
test
movl
jne
push
xorl
push
push
subl
call
notl
test
movl
jne
push
push
adcl
push
call
test
jne
xorl
push
andl
push
subl
call
subl
test
jne
push
push
andl
call
test
movl
jne
andl
push
sbbl
push
addl
call
test
movl
jne
push
andl
push
push
call
orl
test
jne
addl
push
andl
push
push
andl
call
xorl
test
jne
push
push
xorl
call
movl
test
movl
jne
subl
push
xorl
push
andl
call
test
movl
jne
subl
push
adcl
push
xorl
call
test
movl
jne
push
xorl
push
push
decl
call
test
movl
jne
push
push
adcl
push
sbbl
call
xorl
test
movl
jne
push
orl
push
call
test
movl
jne
andl
push
push
addl
call
adcl
test
jne
push
push
orl
call
test
jne
push
push
addl
push
call
subl
test
movl
jne
push
addl
push
push
xorl
call
movl
test
jne
push
push
call
andl
test
movl
jne
orl
push
push
negl
call
orl
test
movl
jne
subl
push
push
call
test
jne
xorl
push
push
sbbl
push
adcl
call
xorl
test
movl
jne
sbbl
push
push
xorl
push
addl
call
sbbl
test
jne
orl
push
push
adcl
call
test
jne
sbbl
push
adcl
push
xorl
call
test
movl
jne
addl
push
subl
push
xorl
call
addl
test
jne
xorl
push
notl
push
andl
push
call
test
jne
push
push
push
xorl
call
sbbl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
xorl
push
call
subl
test
movl
jne
push
push
call
orl
test
jne
subl
push
adcl
push
push
andl
call
addl
test
movl
jne
addl
push
push
adcl
push
call
adcl
test
movl
jne
subl
push
push
subl
call
subl
test
movl
jne
adcl
push
adcl
push
call
orl
test
jne
subl
push
push
call
orl
test
movl
jne
push
push
push
orl
call
test
jne
push
movl
push
movl
push
call
test
movl
jne
movl
push
xorl
push
call
test
movl
jne
push
subl
push
subl
call
addl
test
movl
jne
subl
push
push
call
subl
test
movl
jne
sbbl
push
adcl
push
adcl
push
xorl
call
andl
test
jne
movl
push
xorl
push
xorl
push
andl
call
adcl
test
movl
jne
subl
push
addl
push
subl
call
xorl
test
jne
addl
push
push
adcl
call
test
jne
push
addl
push
call
orl
test
movl
jne
subl
push
push
andl
push
xorl
call
adcl
test
movl
jne
push
movl
push
push
call
addl
test
movl
jne
movl
push
subl
push
call
test
movl
jne
push
push
call
addl
test
jne
addl
push
subl
push
call
test
movl
jne
sbbl
push
xorl
push
addl
push
addl
call
movl
test
movl
jne
andl
push
push
push
call
sbbl
test
movl
jne
xorl
push
adcl
push
adcl
call
addl
test
movl
jne
adcl
push
adcl
push
call
test
movl
jne
adcl
push
xorl
push
subl
call
xorl
test
jne
push
adcl
push
push
andl
call
andl
test
jne
push
push
subl
push
call
test
jne
push
push
sbbl
call
test
movl
jne
subl
push
push
call
test
movl
jne
adcl
push
subl
push
andl
call
test
movl
jne
andl
push
orl
push
orl
push
adcl
call
andl
test
jne
orl
push
push
push
call
sbbl
test
movl
jne
sbbl
push
push
call
sbbl
test
movl
jne
sbbl
push
orl
push
call
test
movl
je
subl
xor
movl
jmp
or
movl
movzbl
add
mov
dec
mov
mov
mov
mov
sub
imul
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
sbbl
lea
mov
mov
and
mov
lea
mov
subl
mov
mov
orl
mov
mov
mov
adc
xor
mov
add
movl
mov
mov
mov
cmp
jne
xor
mov
mov
orl
mov
or
xor
and
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
sub
mov
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
xor
add
mov
sub
mov
mov
sbb
mov
mov
orl
mov
mov
decl
mov
subl
mov
andl
mov
mov
addl
movl
adcl
mov
andl
xor
add
movl
jmp
add
mov
adcl
mov
xor
subl
lea
push
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
sub
mov
adcl
xor
lea
push
addl
mov
pushl
xorl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
xor
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
andl
mov
xor
mov
addl
xor
xor
andl
add
mov
negl
xor
lea
movl
mov
movl
cmp
movl
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
adcl
inc
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
movzwl
xor
mov
mov
sbb
push
mov
sbb
mov
mov
mov
add
xor
add
mov
subl
push
mov
add
movl
cmp
movl
je
inc
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
sbb
mov
xorl
xor
xorl
xor
addl
add
add
movl
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
jmp
jmp
iret
push
jae
lret
xchg
mov
jnp
stc
jp
jp
xlat
pop
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
xchg
ret
addr16
and
jbe
ds
faddl
pop
jecxz
add
jecxz
cmpsb
xor
jle
and
jb
stc
stos
push
je
call
jnp
push
add
sub
jne
mov
or
in
in
clc
in
pop
or
pop
scas
or
push
aam
sub
sub
popa
xchg
mov
or
xlat
or
hlt
add
pushl
out
mov
aad
stc
arpl
sbb
xchg
mov
sti
fwait
xchg
in
outsb
pop
xlat
and
mov
xchg
push
sbb
ljmp
aam
cld
movsl
and
or
cwtl
adc
out
in
xchg
pop
rcll
or
jo
xchg
cld
cli
ret
xlat
cmp
rcll
mov
mov
pusha
inc
leave
add
dec
rcrl
dec
in
ljmp
pop
push
imul
mov
sahf
aam
ljmp
js
loop
ret
and
lcall
es
xchg
inc
xor
aad
jno
bound
mov
nop
inc
push
dec
sbbb
xchg
jno
pop
sub
add
int3
mov
stos
cld
or
inc
cmp
or
and
cmc
cmpsb
push
mov
ljmp
out
insb
dec
sub
adc
xchg
sbb
push
fcompl
xor
and
mov
mov
mov
adc
dec
es
dec
jb
fmulp
call
mulb
cmc
cmc
movsb
insb
adc
daa
push
add
inc
mov
dec
mov
es
ja
or
jbe
and
orl
pop
xchg
pop
mov
jecxz
es
imul
nop
shr
shld
aam
xorl
pop
lret
sbb
iret
jne
push
sub
mov
adc
rcr
xor
mov
repnz
push
cmpsb
sbb
add
xchg
imul
clc
dec
ret
cmp
mov
jp
jns
push
test
cmp
into
xchg
ljmp
hlt
dec
mov
xchg
mov
insb
aam
lret
popa
cmp
aas
je
inc
cltd
mov
rorb
ret
cmp
add
stos
mov
out
push
mov
in
ret
push
sbb
popf
ds
xor
jecxz
loop
jecxz
sbb
ds
or
mov
and
mov
and
shl
add
daa
dec
je
xchg
mov
pusha
jb
loopne
push
xor
outsl
mov
jmp
mov
and
ret
gs
inc
test
movl
dec
cmpsl
pop
sti
adc
and
sbb
lods
cs
les
pop
into
xor
stos
push
ret
call
push
js
or
mov
cmpsb
ds
cmpsb
bound
push
adc
pop
xor
mov
xchg
pop
insb
filds
xor
push
jb
jl
ja
and
popf
pop
repz
xorl
sub
pop
xchg
ja
dec
aaa
mov
mov
pop
lea
sub
out
or
push
push
aam
testl
call
or
sub
pop
xchg
pop
mov
movsl
fiaddl
xor
sbb
scas
cmpsb
fsqrt
loop
inc
sub
and
pop
std
mov
push
mov
mov
std
add
lret
jg
jbe
ret
movsb
inc
adc
mov
add
mov
push
gs
cli
dec
sbb
mov
sub
dec
mov
nop
in
add
sti
jl
pop
inc
push
jo
lods
loop
lret
mov
push
daa
jle
lods
out
in
repnz
mov
mov
js
pop
imul
cld
inc
nop
mov
or
das
adc
gs
dec
out
cli
dec
inc
lret
or
in
imul
xchg
loop
lds
negb
jno
sahf
std
add
dec
lret
arpl
sahf
push
lock
jp
jns
pop
jle
mov
adc
xchg
cmp
add
xor
scas
mov
in
dec
std
aas
xor
pop
mov
jle
mov
jb
decb
ret
scas
int
in
lods
gs
in
xchg
jnp
stos
lea
dec
push
adc
adc
mov
stos
scas
mov
xor
jb
sbb
sbb
psubsw
and
cld
dec
call
pop
cwtl
push
das
jne
xor
pusha
sar
push
pop
sbb
das
push
popf
insb
inc
and
mov
mov
shlb
add
cmp
add
dec
mov
rolb
loopne
test
shrl
mov
out
mov
xor
cmc
mov
rcr
out
cs
push
xchg
fsubl
cmp
arpl
jecxz
sub
aad
icebp
mov
ss
cmp
dec
popa
xchg
sbb
aaa
inc
or
hlt
pop
cmp
movsl
setb
sub
fldl
ret
js
pop
pop
mov
mov
mov
mov
outsl
fisubl
fisubrl
jmp
jbe
out
xchg
mov
sbb
fcomp
gs
cmp
and
popf
and
dec
inc
xor
inc
sbb
ds
das
rorb
mov
cltd
jne
std
mov
sub
mov
sbb
sbb
jmp
pop
adc
pop
mov
mov
loopne
push
dec
sub
push
sbb
xchg
add
test
les
adc
daa
scas
jns
cltd
push
cmpsl
lahf
xor
int
lahf
mov
adc
xchg
inc
mov
and
cmp
mov
mov
lret
mov
and
arpl
test
ljmp
or
push
in
add
cmp
test
or
ret
out
adc
rorb
mov
sbbl
loope
repz
sub
pop
sti
repz
in
or
mov
or
hlt
sub
imul
mov
add
xchg
or
push
xor
xchg
mov
pop
inc
sbb
sub
sbb
pusha
ljmp
out
ds
fmul
add
loopne
jle
mov
jnp
stos
enter
sahf
xor
test
xchg
push
test
mov
gs
inc
jbe
addl
pop
push
jmp
call
or
clc
jno
sarl
das
sub
test
cmpb
xchg
or
inc
sbb
push
sub
leave
jnp
leave
or
daa
neg
mov
lock
test
sarl
js
mov
ja
fildll
negl
aad
imul
or
and
ljmp
push
in
sbb
lea
clc
ret
enter
repz
xchg
test
repz
adc
out
lret
add
cmp
aam
pop
mov
les
mov
jg
ficoms
shrd
cmpsl
in
xor
std
je
inc
int3
ret
call
or
outsb
gs
cld
aam
in
mov
ja
adcl
mov
push
push
jg
pop
sub
data16
jmp
or
test
and
sbb
mov
push
jo
aaa
arpl
sbb
mov
add
daa
inc
movsl
icebp
or
push
sti
call
push
xor
and
jge
jecxz
in
clc
mov
mov
or
fdivrl
movsl
dec
or
jmp
or
sahf
push
ret
pop
popf
sub
inc
ljmp
mov
dec
fdivr
sub
mov
mov
fisttpll
out
jp
stos
repnz
iret
ret
scas
dec
jne
in
aaa
lret
adc
cmp
orl
jp
jmp
adc
movsb
loop
pop
rclb
ss
pop
test
sub
xor
or
or
paddq
inc
in
jo
es
pop
xchg
xor
pop
xor
sub
enter
scas
in
insl
sbb
es
and
and
xchg
stos
lods
fbstp
xchg
xchg
ret
gs
jl
add
cmp
in
xchg
xchg
adc
cmp
hlt
adcb
enter
dec
pop
shll
nop
stos
shl
mov
outsl
es
cli
adc
int3
insb
xchg
call
add
call
sbb
mov
mov
or
test
movsb
ret
mov
shll
lods
orl
movsb
xchg
in
sub
xchg
pop
pushf
sbb
scas
call
loope
lds
add
cmpl
ret
out
sbbl
mov
arpl
pop
lea
imul
jb
pusha
popa
cli
add
mov
mov
ja
call
icebp
push
jns
sbb
popa
imul
shll
jecxz
dec
pop
cmc
jnp
nop
sbb
add
sub
fdivrs
pusha
rep
mov
sbb
mov
je
das
in
data16
pop
test
sbb
jo
mov
push
and
sti
subl
jno
insl
or
aam
arpl
jbe
adc
add
test
lods
sbb
leave
adc
into
sub
mov
inc
mov
jmp
fisubs
mov
or
mov
sbb
pusha
lahf
pop
push
pop
sub
inc
push
fmull
xchg
call
push
sub
stos
sbb
hlt
mov
mov
add
in
sub
inc
jp
mov
cmp
mov
ja
and
dec
jo
jae
cmp
mov
insb
lret
lret
adc
imul
cmc
lds
popa
jno
repz
loope
lods
in
sub
cmc
sti
mov
push
push
add
xchg
mov
ds
xchg
jmp
inc
sbb
cwtl
cmpsb
test
lret
popa
inc
fstl
pop
imul
sbb
call
pop
push
orb
stc
add
and
and
jge
into
pop
sbb
push
cmc
lcall
xchg
leave
mov
rcrb
std
bound
sbb
dec
notb
daa
jne
rcll
mov
fisubrl
mov
jo
push
mov
jmp
xchg
xchg
xor
rol
dec
sbb
jge
or
outsl
or
popa
jle
outsl
and
insb
lods
push
mov
inc
into
xor
insl
sti
fsubp
sbb
add
sar
ret
jae
lock
mov
xor
adc
cltd
pop
mov
andl
cld
pushf
orps
and
pop
cmp
inc
imul
rcll
dec
mov
lock
outsl
test
jp
dec
or
pop
icebp
push
sbb
setg
shll
out
insl
mov
mov
inc
jecxz
les
lock
insl
loope
sub
jg
xor
insb
outsb
imul
aad
jbe
push
test
mov
pop
push
test
pop
out
xor
or
mov
inc
pop
jnp
xor
mov
push
sub
lret
xchg
pop
sahf
fwait
fistps
pop
xchg
out
pop
rcll
xchg
fimull
lods
aaa
lahf
inc
sbb
and
xchg
sahf
sbb
fimull
and
icebp
inc
mov
ficoms
jns
jge
push
fisubl
xor
cmpb
or
sbb
jo
mov
out
call
or
int
jp
cli
jmp
stos
ret
jnp
cld
test
xchg
push
in
out
dec
mov
js
pop
fsubrp
mov
push
pop
je
rclb
push
fidivrs
fiadds
ljmp
fstps
sbb
int
fs
shll
dec
xchg
xor
jp
cmpb
sarb
xor
pop
lahf
cs
jl
adc
test
rcrl
adc
std
loop
ds
and
shrl
call
ffree
jl
or
dec
and
inc
jecxz
ret
movsb
outsl
lea
pusha
mov
mov
gs
cmp
mov
das
mov
je
imul
pop
aad
add
std
adc
xor
add
lret
add
aaa
dec
lret
inc
cmp
add
or
jmp
adc
outsl
sbb
ret
movsb
int
fidivl
rorb
adc
inc
and
fildll
pop
ror
xor
fisttpll
xlat
mov
adc
sub
xchg
cmp
fimuls
ljmp
pusha
in
loopne
test
outsl
jg
mov
orl
mov
in
inc
bound
xchg
xchg
dec
pop
add
jnp
les
mov
push
pop
addl
ljmp
or
les
addb
cli
push
cmpsb
jmp
shl
lods
xchg
ds
mov
ljmp
jo
stos
cwtl
aad
idivb
xchg
jl
ja
xchg
inc
fildll
inc
xchg
jmp
dec
aas
sub
mov
cmp
sbb
outsl
inc
movsl
add
and
dec
jbe
add
call
jg
adc
aam
cltd
push
xlat
adc
mov
mov
add
sti
and
inc
xor
mov
dec
loopne
sub
cmp
outsl
push
pushf
popl
idivl
jbe
inc
mov
test
adc
out
fcmovu
loope
mov
inc
loope
or
repz
out
mov
mov
test
jb
stc
scas
xor
mov
pop
push
push
push
outsl
movsb
sub
mov
loopne
or
or
leave
xlat
push
out
scas
fcmovb
test
and
xor
insl
lock
mov
mov
push
iret
ret
cmp
cmp
and
mov
sub
aas
sub
pop
pop
add
cmp
stos
into
or
push
jecxz
ror
ljmp
cmp
nop
xor
mov
std
push
fcmove
xchg
mov
xor
inc
out
mov
jno
fcompl
push
jne
xchg
xor
mov
mov
ret
mov
clc
aam
fidivl
insl
das
jg
pop
jmp
and
repnz
cld
rolb
mov
inc
mov
push
rclb
mov
pop
mov
js
sub
mov
popa
nop
pop
pop
push
pop
rcll
insb
push
pop
rorb
or
lahf
push
add
int3
es
xor
ret
pop
pop
pop
rcrl
sbb
fisttpll
sbb
bound
jl
cld
mov
jnp
lret
daa
ret
lcall
xor
fwait
cltd
cltd
cmpsb
jo
adcb
jns
mov
lahf
mov
push
cwtl
in
push
lods
xor
mov
xor
hlt
push
or
pop
cmp
in
imul
mov
sbb
mov
cltd
inc
dec
pusha
cmp
pop
cmp
stc
sub
call
hlt
sbb
mov
push
insb
push
ljmp
stc
push
int
mov
sbb
call
gs
fs
rcrb
mov
xor
dec
pop
jo
adc
pop
jne
xchg
mov
dec
cmp
add
popl
or
mov
mov
xchg
adc
mov
pushl
lods
xchg
lret
jp
je
inc
inc
push
sbb
mov
rcll
gs
lock
mov
xor
pop
push
dec
cmpsb
cmp
idiv
push
mov
shlb
ficompl
adc
fsubl
mov
lods
icebp
xchg
dec
jae
pop
ss
mov
or
das
aad
fwait
jge
jae
mov
pop
pop
mov
out
and
dec
or
das
sub
dec
loope
test
cmpsb
addr16
xchg
lods
sub
cmc
cmp
es
out
add
js
pusha
lahf
pop
dec
iret
sbb
aam
sbb
clc
mov
or
jo
adc
sub
xchg
cmp
ret
push
mov
mov
adc
xor
jmp
xor
jns
clc
movb
pop
and
push
xor
cld
push
cmp
std
push
scas
andl
fcomps
xchg
aam
push
cmp
popf
or
mov
jo
out
not
xor
sub
xchg
test
rorb
push
pop
ds
mov
xor
adc
push
aad
notl
and
fldl
pop
ret
call
and
lahf
push
dec
inc
cmp
scas
jo
push
xchg
fildll
pop
dec
movb
addb
int
sub
xor
pop
push
push
inc
and
or
add
xor
add
scas
cmp
sub
in
fstpt
sub
ret
cwtl
out
fisttpll
iret
imul
push
adc
adc
sub
dec
dec
gs
int3
or
jo
inc
scas
mov
out
data16
fmuls
outsb
push
mov
jnp
xchg
iret
sti
dec
les
cmp
cltd
and
xor
jns
or
cmp
js
andl
pushf
in
std
jbe
or
les
cltd
dec
mov
xor
jb
pop
wbinvd
in
dec
pop
xchg
fdivrp
jb
add
add
push
mov
inc
movsb
xorl
pop
cmpsb
fisubrs
les
push
test
push
cmp
ds
mov
shlb
outsl
cmp
sarl
add
dec
inc
arpl
imul
mov
out
pop
dec
inc
cwtl
xor
imul
addr16
cli
sti
inc
fldl
or
or
add
fs
stc
sub
rorb
jne
push
jne
push
or
ss
push
jecxz
xchg
outsb
xlat
out
sahf
and
lcall
cmp
add
inc
fdivrs
outsl
and
in
mov
flds
test
rolb
mov
pop
or
jo
pop
insb
lret
xchg
push
jno
add
call
push
sarb
dec
outsl
lds
jns
mov
inc
clc
xchg
iret
into
jecxz
pop
inc
jns
adc
loopne
mov
push
test
fnstenv
add
push
jns
pop
pop
push
jbe
sub
ljmp
push
mov
data16
stos
cmc
mov
inc
sbb
push
jno
int3
mov
mov
inc
mov
or
inc
or
mov
test
repnz
fwait
pop
inc
ret
cmp
mov
loop
loopne
and
pop
ljmp
aad
adc
aam
stos
or
add
push
scas
fsub
xchg
dec
rcll
push
mov
sbb
ds
or
or
jno
xor
insb
lock
inc
xchg
rcrl
add
push
insl
cltd
mov
xor
and
ljmp
pop
aas
xor
or
test
in
cmpsb
repz
out
add
fcomi
bound
fistpll
xchg
mov
and
incb
ret
add
jle
dec
inc
pop
inc
cmp
aad
lcall
mov
mov
dec
jns
mov
cmpsb
data16
fcmovbe
or
mov
aam
cvttps2pi
pop
jmp
xor
pusha
jmp
lds
dec
loopne
xor
ja
and
sub
hlt
imul
outsb
cld
adc
ficomps
sub
mov
add
mov
sbb
push
inc
pusha
sbb
rcrb
loope
push
push
mov
push
cmp
in
sbb
jne
jp
ja
xor
das
adc
cwtl
dec
jp
in
mov
dec
or
mull
repz
loope
fs
sarl
lret
aaa
xchg
hlt
rcrb
jp
ret
inc
outsb
lods
js
aaa
jl
and
push
call
fisubs
movsb
lds
or
adc
jae
mov
fs
cld
jecxz
mov
stos
jl
mov
sub
xor
inc
jecxz
call
add
js
rol
test
loope
push
das
fs
fwait
pop
push
testl
xor
cmp
sbb
mov
inc
rol
cmp
pop
ja
stc
divps
mov
fisubrl
aaa
mov
jb
mov
ds
idivl
jno
or
in
jmp
mov
push
mov
cmpsb
les
jnp
or
inc
inc
fmull
cmpsl
mov
inc
jbe
pop
imul
cmp
push
or
ljmp
cmc
jmp
adc
jns
xchg
sbb
xchg
loop
scas
clc
jnp
xchg
mov
xor
cmp
push
jecxz
cld
dec
rolb
pushf
jb
leave
pushf
jns
cmp
push
mov
pop
ret
sbb
inc
sbb
cmpsl
dec
sti
aam
bound
mov
sub
repnz
gs
mov
out
jno
jno
push
xchg
mov
data16
sahf
mov
jmp
test
fwait
ret
int3
insl
fldenv
cltd
pop
sbb
ret
mov
hlt
popa
lea
repnz
cmp
movsb
roll
xchg
pusha
and
sbb
adc
les
dec
mov
pop
lods
fnstsw
adc
sub
inc
push
fcmovbe
inc
insb
sti
push
inc
pop
fsubrs
and
arpl
add
xor
inc
mov
xchg
repnz
div
jecxz
push
test
adc
jbe
out
push
sub
pushf
idivl
call
xor
sub
cli
aad
iret
adc
adc
data16
loopne
test
rol
push
fisubs
jns
fnstenv
push
fidivrs
mov
int3
or
sbb
sub
inc
repz
xchg
dec
stc
je
data16
mov
mov
sti
movsl
jnp
xchg
lea
gs
lods
hlt
dec
mov
push
fs
cmp
arpl
and
adc
aaa
jne
imul
ja
scas
xchg
or
pop
rol
bound
aas
cmp
jb
in
popa
dec
xchg
jbe
es
mov
adc
hlt
lods
subl
rcrb
add
iret
pushf
cwtl
fisttpl
push
or
inc
clc
add
xor
adc
pop
loopne
mov
pop
or
xchg
fwait
imul
decl
add
push
cmp
pop
mov
push
rcrb
mov
repnz
xlat
adc
push
mov
gs
cmpsl
sub
lcall
shl
mov
in
mov
in
and
mov
push
xor
xor
in
insb
sub
scas
movsl
xor
mov
outsb
ret
sub
filds
cmp
mov
lcall
push
mov
xchg
in
mov
andb
aaa
xchg
out
push
pop
fdivr
sti
push
shll
mov
cld
mov
xor
dec
adcl
mov
xchg
dec
jp
in
lret
arpl
jge
movsl
inc
jecxz
adc
pop
adc
jbe
bound
mov
loop
lahf
push
add
aaa
jp
test
repnz
pop
and
xchg
add
fbld
das
cmp
jg
sub
jns
sub
lods
imul
lea
sub
sbb
push
movsb
add
inc
popa
mov
popf
mov
fiadds
inc
data16
inc
mov
push
dec
fsubrl
scas
sbb
adc
aam
test
adc
mov
cmp
fldt
jbe
jge
pushf
pop
fildl
sbb
xor
arpl
xchg
cmp
inc
mov
into
cmp
js
loope
les
or
lcall
dec
insl
push
subb
fcoms
and
incl
repnz
mov
pop
test
scas
sub
loop
pop
mov
jle
add
mov
mov
lcall
pop
xchg
xchg
popf
filds
mov
ja
das
xchg
insb
adc
cwtl
loopne
bound
mov
pop
out
dec
test
loopne
out
push
sbb
out
scas
out
mov
and
movsb
cli
add
mov
lret
mov
repz
sbb
and
arpl
out
mov
push
push
inc
jno
popa
mov
ljmp
imul
lods
aad
push
push
call
mov
hlt
sahf
adc
xor
pusha
push
pop
jl
and
movsb
or
mov
push
jmp
or
clc
fmul
icebp
clc
jge
mov
into
jp
inc
jmp
out
add
jl
add
mov
lret
mov
lods
cltd
push
push
dec
les
or
ljmp
mov
sub
push
dec
divl
in
jb
inc
xchg
xor
pop
ret
fmuls
mov
jae
fs
mov
pop
sahf
into
mov
pop
pop
sub
mov
or
mov
pop
dec
adc
sbb
pop
scas
mov
jns
inc
sbb
das
mov
or
in
gs
out
mov
je
shlb
daa
mov
add
cld
add
mov
test
nop
clc
call
xchg
loope
nop
lret
stos
in
pop
ja
nop
xchg
aas
xor
push
pop
xchg
pushf
xlat
repnz
into
jne
pop
rol
jbe
cs
inc
sub
int
addl
jns
punpckhdq
jo
jp
mov
add
adc
movsb
push
imul
dec
clc
iret
lret
enter
mov
mov
aaa
dec
mov
into
hlt
loopne
inc
das
add
loop
mov
cmp
jp
add
push
dec
xor
jge
xor
sbbb
push
clc
sti
pop
aam
stos
lret
mov
xchg
cmp
fs
in
rcl
inc
xchg
add
pop
loopne
push
inc
lahf
in
shlb
mov
inc
add
mov
adc
push
loopne
popl
sbbl
imul
int3
in
gs
cli
push
mov
jge
xor
add
shl
xlat
in
in
jne
into
das
mov
xor
bound
cs
repz
test
and
add
test
movl
jecxz
sub
push
push
iret
daa
in
mov
rorb
addb
test
cs
lea
or
lock
xchg
dec
inc
test
arpl
movsl
xchg
cli
shrl
aam
cltd
inc
in
arpl
and
movsl
mov
push
gs
add
xchg
data16
cmp
pop
stc
imul
stos
cmp
jg
int
cwtl
shll
shl
lods
mov
in
jbe
jo
or
push
pop
xor
jg
mov
fwait
outsl
sub
push
scas
mov
xchg
mov
and
lods
test
or
int3
dec
mov
into
pop
stc
jne
pop
lret
mov
cmp
shlb
pop
repz
in
hlt
jle
push
jns
gs
xor
push
je
clc
pusha
xchg
mov
mov
loopne
jg
dec
test
cmpsb
pop
xchg
andps
xor
repz
or
jbe
cmp
sbb
cs
ja
hlt
in
lahf
jae
sbbb
das
push
and
loopne
adc
int3
pop
aaa
mov
stos
or
clc
sti
jmp
jle
dec
ja
aam
ss
pop
fs
or
cld
adc
mov
ljmp
ljmp
lock
ja
outsl
scas
pcmpgtw
adc
inc
cwtl
pushf
mulb
aad
out
ret
lret
lods
cmp
idiv
je
repz
aam
mov
sub
mov
clc
imul
shl
and
ret
fistps
xor
insl
in
cs
push
shl
adc
mov
adc
add
sbb
and
jne
or
mov
push
shrb
pop
mov
in
rorb
lret
insl
fdivs
cmp
int
xor
sub
aas
sti
das
testb
xor
dec
call
mov
mov
outsb
imul
cmpsl
mov
dec
add
stos
cmp
dec
adc
cmp
jb
enter
sbb
fmuls
ja
mov
mov
lahf
xchg
xor
pop
mov
flds
sti
in
fldt
jmp
dec
mov
rcrb
les
push
jno
or
test
pop
lock
xchg
stos
nop
sbb
mov
aas
fisttpll
out
lds
adc
mov
add
rcrl
ret
push
push
sub
adc
sub
leave
sub
push
popa
pop
and
mov
ret
jbe
popf
fistpl
out
bound
lea
xchg
push
or
cmp
mov
fistl
aad
jmp
xlat
fbstp
xchg
ds
es
and
andl
sub
pop
out
inc
add
sbb
sbb
insb
mov
dec
xor
std
out
repnz
ret
aam
aad
mov
shl
push
ss
adc
push
pop
shrl
nop
cmc
mov
xchg
stos
imul
sub
movsb
lea
stc
mov
push
cli
ds
jge
mov
push
push
jp
popf
int
cmp
jns
bound
inc
jge
sub
xor
cmc
movsb
push
lods
out
and
mov
push
cmp
xchg
add
add
repz
dec
repnz
call
adc
gs
dec
movsb
popa
mov
and
js
and
scas
mov
sub
repnz
mov
xchg
push
out
xorl
adc
mov
xchg
pop
inc
dec
ja
jmp
cmpsl
mov
outsb
sbb
inc
adc
dec
jne
les
repz
sub
out
dec
lret
loope
les
mov
push
das
mov
jle
xchg
flds
out
daa
movsl
lret
cmpsl
arpl
les
xor
pop
cmc
cmpsl
pop
mov
sbb
out
ret
adc
scas
loopne
mov
cmpsb
mov
hlt
cmp
shrb
filds
orl
xchg
and
push
xor
or
cmp
imul
mov
pusha
cmpb
iret
int
push
pop
fstpt
push
enter
leave
loopne
scas
push
push
adc
pop
sbb
ret
mov
test
sbb
lcall
out
xchg
jnp
lahf
fwait
sarb
pop
js
sahf
mov
inc
sbb
or
ret
cmpsb
mov
xor
sbb
cmpsb
ja
test
es
out
mov
push
leave
fiadds
xchg
or
cmc
loopne
add
mov
into
bound
roll
mov
push
into
bound
push
mov
cmpsl
aam
loop
daa
sarb
dec
out
cmc
jne
jg
add
sahf
mov
je
fs
repz
fcompl
pop
imul
outsl
and
xor
mov
gs
ss
in
inc
cld
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
add
movl
sbbl
mov
xorl
mov
add
xor
cmp
movl
jne
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
orl
add
mov
mov
mov
xor
push
mov
and
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
push
push
push
lea
xorl
push
push
movl
call
addl
push
call
adcl
movl
movl
mov
mov
addl
xor
orl
mov
add
mov
notl
mov
test
movl
je
inc
mov
andl
mov
dec
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
imul
movzbl
xor
mov
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
adcl
xchg
xor
mov
sub
sbb
mov
sub
xor
mov
and
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
andl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
mov
xor
add
sub
mov
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
or
xor
dec
add
mov
andl
sub
orl
lea
addl
xor
adcl
xor
cmp
je
mov
orl
xor
sbbl
add
cmp
movl
jne
andl
pushl
addl
call
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
mov
dec
xor
sub
mov
movl
add
movl
cmp
movl
je
addl
pushl
pushl
call
mov
sub
mov
mov
mov
movl
xor
orl
add
movl
cmp
movl
je
mov
mov
sub
sub
mov
mov
mov
and
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
jmp
or
xchg
loop
movsb
emms
adc
jb
xlat
pop
jp
aaa
pop
jp
popa
jo
jne
int3
aam
mov
xchg
mov
daa
and
ljmp
aam
pop
scas
pop
test
mov
jae
and
js
popa
mov
clc
rorl
ja
mov
xchg
xchg
xor
xchg
or
out
push
mov
push
jne
push
lock
por
xlat
push
das
repnz
loope
cwtl
imul
shll
fs
call
adc
leave
sbb
leave
in
dec
mov
jl
jecxz
cmp
mov
add
mov
arpl
leave
ds
jmp
pop
mov
data16
daa
in
incl
ficoms
insl
mov
scas
fnstenv
int3
test
pop
in
adc
push
je
mov
jg
pusha
fsts
cmp
mulb
imul
outsl
lcall
ret
imul
mov
push
dec
enter
or
adcl
push
out
xor
jl
sbb
sbbl
mov
aaa
jg
and
out
ljmp
sbb
jle
sahf
mov
cwtl
push
xchg
iret
ret
add
test
daa
dec
xorb
int
mov
pop
insb
outsl
hlt
mov
aam
pop
pushf
sub
mov
cmpb
aas
inc
scas
inc
jmp
xchg
imul
hlt
out
int3
pop
dec
inc
test
adc
or
lcall
mov
dec
and
das
sub
jp
nop
xor
cltd
mov
sbb
push
mov
pop
adc
pusha
imul
jae
pop
push
test
fwait
cmc
mov
mov
fnsave
stos
arpl
push
xor
movsl
sbb
mov
iret
cli
or
jae
adc
mov
xchg
mov
in
adc
les
inc
clc
fldenv
xor
xor
push
inc
popf
pop
adc
fistpl
mov
lret
push
fcmovu
pusha
cmp
subl
shl
and
nop
mov
jne
inc
sbb
jb
sub
adc
lahf
mov
jmp
das
fisttps
jns
jns
ja
sti
dec
pop
or
lods
mov
sbb
fs
aad
xchg
sarb
mov
rorl
add
sbb
push
ret
in
dec
enter
pop
sub
mov
loope
jns
stos
sbb
pop
xchg
mov
in
daa
out
mov
pop
movsb
pop
aas
cmp
inc
cmpsl
jo
mov
or
jge
adc
mov
xor
jl
rclb
push
inc
mov
loop
imul
lods
mulb
cmp
lcall
jp
xchg
mov
stos
mov
lods
sbb
iret
js
pop
xchg
sub
ss
cmp
and
scas
jge
orl
pop
jne
push
imul
es
mov
mov
or
push
sahf
adcb
cmp
adc
incb
icebp
ficoms
les
mov
lahf
dec
daa
sbb
dec
popf
movsb
int
and
add
push
inc
push
into
loop
popa
shlb
mov
mov
outsl
pop
test
sub
or
pop
jmp
mov
or
call
insl
sub
lret
mov
mov
xchg
sahf
sti
pop
data16
test
sub
arpl
sbb
xchg
outsl
jne
mov
inc
jge
std
sbb
mov
cmp
inc
pop
repz
push
sahf
cmp
js
scas
dec
sbb
xchg
jmp
movsb
or
test
sar
fdivrs
dec
sbb
cmc
sbb
loopne
dec
dec
push
push
daa
fstpt
sbb
mov
or
imul
and
cmp
rorl
aad
call
cmp
jnp
lret
cmp
and
scas
addr16
mov
dec
sub
sbb
nop
call
pushl
jl
push
xor
fists
inc
ja
bound
mov
orl
xchg
mov
sarb
push
cmpsb
in
data16
gs
mov
jb
mov
xor
ret
or
pop
push
xor
xor
icebp
mov
add
dec
cmp
push
push
lret
push
xchg
es
mov
pop
push
mov
jg
jmp
mov
movb
dec
shll
andl
and
pop
sbb
xlat
popf
sub
and
aaa
sbb
hlt
loope
push
js
mov
stos
push
mov
imul
aad
push
pusha
mov
jbe
xlat
fdivs
pop
sbb
pop
adc
lret
fdecstp
stos
fmul
or
jb
psrlq
add
sub
push
cmp
xchg
pop
mov
sahf
pop
out
rolb
icebp
imul
adcb
inc
pop
sub
fmul
mov
int3
mov
xor
push
scas
inc
add
test
adc
lcall
mov
jle
xchg
xchg
mov
push
cmp
fidivrs
mov
or
pushf
ss
or
cmp
cmp
leave
and
movsl
jb
sub
jmp
or
xchg
popa
inc
adc
lods
xchg
enter
cmc
les
and
enter
add
xor
push
dec
mov
xor
push
push
jmp
jle
push
mov
ja
fdivrs
push
arpl
dec
add
add
fldcw
out
inc
dec
dec
dec
movsl
mov
pop
push
mov
pop
es
lock
cmp
and
loop
jno
lret
pop
lods
and
adc
mov
insl
pop
sahf
cs
pop
jmp
es
push
mov
jae
imul
lret
das
mov
inc
cmp
ss
add
or
imul
out
add
pop
or
and
inc
in
sti
push
mov
repnz
push
mov
leave
es
ret
cmp
xchg
inc
push
push
sub
lods
mov
mov
or
loop
jmp
xchg
pop
cmp
ret
mov
shll
xchg
mov
sbb
pop
cmp
xchg
xorb
es
add
sbb
lret
sbb
repnz
jo
inc
or
add
mov
adc
add
sbb
pusha
fdivrs
jg
call
je
inc
pusha
out
add
and
paddd
pop
test
mov
fsubrp
pop
mov
fs
xchg
loop
add
in
push
testl
lret
mov
pushf
cli
sub
push
adc
adc
and
lds
fnstcw
push
sbb
or
out
shlb
frstor
add
scas
mov
lds
je
xchg
mov
lahf
jl
fcomps
inc
out
inc
ss
das
inc
movsb
or
push
pop
mov
pop
sahf
stos
movb
dec
sbb
les
xchg
int3
lret
xlat
push
pop
andb
psubq
lock
movsb
std
sbb
pop
mov
jne
mov
xorb
jns
pop
addr16
outsl
or
out
jne
fdivr
sti
dec
aad
mov
xor
int
test
sub
hlt
lods
mov
sub
mov
subps
pusha
sbb
ds
movsl
icebp
lds
out
std
popf
jecxz
sub
pop
aaa
cmpsl
push
divl
or
scas
ds
dec
and
pop
stos
stc
shl
insb
lret
xor
lahf
dec
mov
js
mov
add
repz
icebp
adc
cmp
subb
push
and
dec
push
movsl
stos
in
cwtl
rclb
imul
aas
cld
das
push
inc
inc
jle
cs
or
fldcw
pop
js
sbb
les
xchg
jecxz
pop
into
out
mov
test
mov
sbb
lret
push
leave
ffreep
bnd
movsb
jne
mov
jbe
inc
inc
shr
pmulhuw
fwait
xor
sbb
push
fs
push
lods
sti
mov
cmc
xchg
out
jg
std
xor
xchg
xor
and
gs
jp
xchg
or
mov
hlt
xchg
mov
adc
adc
repnz
mov
clc
add
inc
fld
call
xor
pop
or
jmp
inc
movl
pushf
push
dec
jae
fists
and
aas
jb
and
out
and
pop
jg,pn
xor
out
popa
inc
shll
std
or
mov
int3
cltd
pop
lods
mov
fsubp
cmp
pop
cwtl
cwtl
push
xor
mov
sbb
mov
scas
cwtl
in
push
push
int
ljmp
es
jb
loopne
fdivs
dec
fwait
and
and
cmp
pop
iret
inc
pop
inc
sbbl
fsubs
cli
imul
int3
fcomp
enter
scas
xchg
out
test
cmpsb
push
sbb
in
rorl
xchg
jbe
jp
aaa
push
notl
cmc
lahf
inc
sbb
clc
adc
test
push
outsb
push
loopne
mov
scas
aaa
xor
xor
aam
imul
lods
jno
inc
popa
mov
adc
lret
pop
sbb
loopne
cltd
push
mov
je
aam
fs
xor
in
ficoml
jl
bound
mov
fmull
in
xlat
rclb
cltd
in
hlt
pushf
dec
insb
aas
inc
mov
out
push
or
sahf
arpl
push
lods
push
out
pop
daa
xchg
fmuls
cmp
out
outsl
int
jns
cld
jecxz
bound
lods
in
imul
cli
in
repz
das
add
popl
and
inc
wbinvd
pusha
pop
inc
dec
mov
mov
xchg
or
jns
sbb
push
clc
cs
pop
add
xlat
mov
dec
test
testl
cmp
incl
rcl
push
push
mov
fs
jnp
cmp
dec
sbb
punpckhdq
push
repz
fsubrl
push
ljmp
fs
shrb
mov
dec
jns
fmull
mov
dec
xor
in
sbb
insb
inc
mov
mov
shll
add
cmp
xchg
jo
cwtl
inc
movsl
stos
pop
fisubrl
jg
shl
ud1
dec
lds
xchg
lds
js
push
pop
jb
or
xchg
inc
mov
inc
fmull
adc
adc
ss
jge
xchg
or
cmp
sub
mov
jg
je
arpl
sti
and
dec
js
mov
add
ret
add
loop
hlt
icebp
lds
sahf
jnp
dec
mov
sbb
inc
mov
ds
mov
cmp
gs
aad
pop
arpl
or
cmp
movb
mov
sarb
sahf
test
loop
out
dec
or
test
push
das
jmp
jl
popa
pop
xorb
into
mov
pop
jo
dec
mov
cs
and
fadd
xor
and
xchg
gs
mov
mov
mov
ret
cwtl
cwtl
ljmp
jmp
aas
es
ret
lret
popa
jg
stos
hlt
inc
test
xchg
popf
mov
or
in
cmp
inc
addr16
xchg
in
sub
sub
repz
jle
xchg
lret
nop
xchg
aaa
or
lret
inc
add
or
rcl
push
jp
mov
mov
push
fs
push
cbtw
cmp
cmp
fs
movsb
jmp
aaa
xchg
mov
or
int3
pop
push
lods
gs
daa
dec
pop
inc
loope
clc
pop
mov
in
loop
jb
nop
in
pop
or
dec
xchg
dec
fldt
sti
enter
adc
stos
sub
push
push
adc
adc
sbb
dec
out
add
repz
push
cmp
adc
rorl
imul
mov
ror
adc
test
testb
push
lods
loopne
enter
mov
stc
stos
loope
lea
cli
sbbb
xor
mov
in
xchg
pop
das
inc
rol
stc
dec
sub
test
fists
out
daa
sbb
inc
sbb
and
fwait
leave
dec
push
std
jo
fcos
add
pop
icebp
push
out
dec
or
in
mov
push
popf
sti
and
jmp
in
fnstenv
repz
xor
push
sbb
push
add
and
cwtl
mov
sbbb
push
data16
mov
adc
in
int
ljmp
mov
jmp
bound
adc
inc
cmp
mov
mov
xchg
bound
jg
dec
mov
pop
sub
shr
sub
mov
inc
adcb
lock
fiaddl
into
push
xor
int
imull
add
sbb
inc
je
and
cmc
ret
movsl
push
loop
cs
aam
enter
stos
push
lock
jmp
lcall
mov
lock
cltd
insb
fstpt
pop
jge
mov
push
out
cmp
fcomps
lahf
lret
js
pop
in
fcmovnb
mov
push
jg
int
mov
or
or
push
mov
fcmovb
inc
xor
rorb
aam
mov
xchg
jbe
pop
jno
in
stc
jmp
sbb
icebp
or
mov
cmp
xor
and
xlat
inc
push
add
adc
insb
insl
xchg
loop
or
inc
add
and
and
or
sub
push
or
inc
leave
or
dec
icebp
adcb
mov
mov
call
pusha
mov
sub
inc
pop
filds
pushf
ficoms
icebp
adc
mov
out
mov
sbb
leave
das
lods
xor
lods
movsb
ficoml
inc
mov
pop
je
subl
push
outsl
out
xchg
mov
arpl
adc
mov
inc
test
scas
test
cmp
sbb
out
scas
xor
jns
in
mov
dec
and
in
sub
sub
ret
mov
in
movsl
inc
das
inc
enter
fnsave
push
test
mov
outsb
mov
mov
cmove
push
aad
xchg
mov
add
popa
outsb
in
push
loopne
cld
rolb
fimuls
pop
mov
cmp
jge
out
pop
push
mov
loope
loope
pop
jp
or
je
push
dec
jbe
sub
cmpsb
out
arpl
mov
adc
cmp
and
cs
adc
xchg
hlt
jle
mov
stc
shlb
mull
es
call
stos
hlt
mov
nop
fdivrs
rorl
mov
or
and
shll
push
adc
loop
cs
mov
popa
cmp
dec
and
out
pushf
cs
call
xor
sub
cmp
lret
pause
enter
enter
dec
fisubl
cmpsb
sub
xor
dec
ljmp
shlb
sahf
cmpsl
dec
lcall
fstpl
mov
adc
loope
popf
loopne
jnp
cltd
daa
jmp
mov
mov
mov
mov
aas
sub
loope
mov
add
dec
in
popf
sbb
loop
aam
aad
addr16
call
cwtl
dec
rcl
pop
jb
ret
insb
ret
jae
outsb
insb
clc
divb
in
sub
leave
clc
dec
pop
test
lcall
and
loop
pop
insb
ret
adc
mov
sbbb
decl
lock
and
cmpsl
pop
and
and
or
and
xchg
lret
imul
idivl
outsl
inc
incl
push
and
and
ror
sti
popf
inc
inc
lgs
repz
xor
lods
pusha
xor
xchg
jle
popf
in
cltd
jmp
ret
mov
add
xchg
int3
dec
dec
pop
test
push
mov
jae
inc
jns
fidivl
pop
dec
pop
in
jae
cmc
int3
sbb
adc
pop
ss
xor
mov
out
ficoml
stos
fadds
in
mov
or
dec
pop
hlt
pop
mull
ds
cmpsb
cmp
push
jne
dec
cmpl
pop
push
xchg
push
in
xchg
ljmp
enter
mov
add
or
add
xchg
mov
inc
cmp
jl
out
aas
dec
mov
and
mov
sub
add
scas
pop
xor
subl
fidivl
push
jle
jne
aas
add
or
ljmp
and
rol
cmp
push
xorb
jnp
xor
test
lahf
xor
idiv
dec
movsb
and
adc
dec
outsb
mov
out
fistl
shl
mov
jmp
pop
pop
xor
int3
pusha
cmovne
sahf
cmpsl
repnz
lahf
cld
mov
cmp
bound
sub
sub
dec
cmpb
jne
in
popf
test
fildl
push
pop
nop
sarb
push
push
jno
out
push
sbb
sbb
test
inc
pop
inc
cltd
cmc
out
mov
aam
sti
out
sti
sub
repnz
xor
mov
xchg
jne
cmp
dec
mov
mov
dec
js
and
stos
push
xor
iret
pop
xlat
ljmp
pop
mov
fisubrl
add
loop
push
sbb
stos
jno
addr16
pop
or
sbb
and
cwtl
cmc
pop
aad
mov
and
fwait
mov
inc
leave
mov
jp
imul
push
push
js
sub
add
std
mov
jns
pop
jae
cmp
fstps
aam
int3
mov
data16
jb
mov
inc
inc
cs
aaa
xor
mov
test
push
std
insb
leave
out
sbb
int3
or
ret
adc
lret
outsb
add
cmp
addr16
mov
add
addr16
cs
jle
shll
xchg
aas
lret
inc
clc
daa
rcrl
pusha
add
mov
lcall
out
pop
cltd
out
sub
out
arpl
xchg
inc
jns
pop
mov
lods
fs
std
sub
insb
adc
orb
cmp
mov
test
inc
repnz
mov
pop
sbb
mov
jno
xchg
aam
fdiv
das
push
xchg
sub
cmpsw
lock
push
or
lods
fstl
packsswb
jmp
mov
test
rolb
mov
xchg
sbb
pusha
lods
pop
mov
cmp
arpl
out
icebp
imulb
orb
mov
xor
inc
ds
fdivs
push
xchg
lods
jmp
lret
loope
les
pushl
clc
mov
inc
out
mov
cmp
call
xor
jg,pt
aas
jno
push
pop
bound
jmp
sbb
push
dec
sub
test
dec
inc
jmp
push
repnz
movsl
out
jns
cltd
cmc
xor
lret
shrb
shlb
sub
inc
jo
aad
add
js
pop
jnp
jp
and
or
sbb
jb
rol
lds
sbb
enter
stc
jo
inc
rcr
xchg
jo
rcrb
into
inc
dec
cs
push
ret
mov
xor
pop
sub
in
gs
outsl
mov
mov
cld
add
test
jbe
or
xor
iret
inc
scas
mov
inc
test
mov
sbb
xchg
lahf
fdivs
mov
sti
es
or
das
adc
push
push
mov
mov
iret
sbb
stc
or
or
jge
xor
pop
push
outsb
add
mov
or
mov
outsb
das
push
adc
out
or
push
scas
shrb
out
fidivs
push
repnz
mov
cmp
push
pop
outsl
iret
and
arpl
inc
scas
insb
xchg
sub
mov
cld
and
cmp
jo
pop
mov
pop
push
in
jo
pusha
inc
in
test
adc
in
outsl
jl
sub
ror
imul
mov
push
dec
popf
jb
inc
test
decl
lock
lret
adc
jnp
stc
dec
push
lods
xchg
ja
idiv
push
sbb
ljmp
je
dec
pop
repz
mov
aas
mov
push
js
jp
addb
inc
xorl
mov
push
sub
cltd
iret
adc
sti
pop
mov
out
loopne
xlat
add
jg
ja
loopne
movsb
pop
mov
pushf
aad
icebp
sub
clflush
subl
sub
push
lahf
jns
hlt
test
add
push
dec
shrb
sbb
imul
adcb
ja
pop
dec
enter
aaa
or
dec
add
icebp
add
cltd
pop
fsubr
jne
push
dec
or
test
pusha
vphaddubw
into
sub
xchg
add
cli
movsb
test
sub
ljmp
mov
mov
and
push
push
inc
or
jle
pop
call
insl
jecxz
mov
lock
cli
cmp
xor
dec
pop
inc
or
rcrl
mov
inc
repnz
xchg
xchg
inc
dec
and
push
pop
repz
lods
jno
fstpl
cmp
imulb
push
xchg
mov
pop
xchg
mov
addb
jge
cs
mov
adc
pushf
test
inc
mov
iret
lods
call
mov
or
mov
notb
imulb
stos
jl
add
mov
pop
ret
jg
hlt
test
dec
ja
and
out
daa
ss
jecxz
ja
mov
daa
jle
and
push
ds
xchg
jecxz
roll
test
sbb
test
inc
push
leave
or
mov
fwait
xor
and
pop
jmp
pop
je
inc
mov
mov
sbb
in
add
clc
out
xlat
cmp
insl
iret
xchg
bswap
cld
repz
sbb
xor
xor
das
push
iret
mov
inc
jecxz
hlt
mov
imul
mov
inc
std
pop
mov
ss
dec
das
push
fsubrp
aad
xlat
movsb
add
xchg
jmp
nop
mov
xchg
mov
dec
sti
mov
dec
or
cmp
jl
incl
sbb
and
out
mov
leave
pop
xorl
jo
jo
shll
mov
inc
cld
pop
sub
in
sub
cmp
out
shlb
inc
or
cs
mov
js
ljmp
inc
cmp
push
adc
mov
stos
push
lock
mov
mov
stos
mov
dec
sub
pop
fcomp
jbe
ljmp
inc
outsb
sahf
mov
xor
mov
scas
mov
jb
jge
cmp
sahf
mov
dec
subb
clc
shll
or
shll
popf
xchg
mov
lock
aaa
push
into
xchg
decl
mov
sub
push
in
jecxz
scas
sub
or
push
out
xor
adc
and
cmp
adc
mov
xor
sbb
cli
fdivrl
enter
jmp
cli
cld
scas
mov
add
add
jo
cmp
ret
sub
jae
jne
icebp
sbb
adc
xor
sub
push
pop
or
pop
jmp
sbb
push
scas
jns
mov
xorl
cwtl
jge
lds
clc
enterw
mov
movups
pop
out
sbb
pop
push
lods
leave
mov
mov
pushl
jo
mov
out
xor
jbe
stos
jg
add
fdivrl
mov
push
jne
inc
sub
fiaddl
cmp
mov
push
jmp
add
lods
push
cld
add
adc
cmpb
test
lock
fidivl
idiv
mov
lock
xchg
nop
add
insb
xchg
fisubrl
or
leave
push
cli
cs
dec
fidivs
adc
arpl
dec
aaa
xor
and
pop
pop
inc
lea
add
and
and
mov
repz
sub
xor
mov
stc
rcrl
push
out
lods
arpl
push
call
xor
jmp
dec
push
xchg
push
dec
cmp
push
mov
inc
jbe
or
and
pop
popf
scas
xor
add
xchg
movb
cmp
push
nop
dec
pop
inc
jbe
add
pop
jmp
add
push
push
jg
and
repnz
xor
int
xor
pop
ja
repz
lcall
xchg
loope
call
mov
add
ret
fwait
adc
js
jae
and
ja
leave
iret
sub
mov
and
mov
cmp
xchg
or
pop
gs
mov
mov
pop
pop
loop
pushl
jg
mov
bnd
jae
dec
jge
outsl
int
lods
out
cli
sub
outsl
js,pn
mov
inc
divb
jns
fists
lret
cmc
inc
test
sbb
movsb
cmc
xor
arpl
or
jnp
dec
mov
push
xchg
xchg
dec
stc
or
rolb
je
jns
push
lock
adc
mov
pop
dec
lock
lcall
lahf
fnstcw
aaa
mov
ljmp
fsubrp
mov
inc
push
lock
shrl
gs
cs
das
xchg
fwait
push
xchg
xor
inc
js
popf
cmp
roll
fmulp
shlb
and
dec
dec
mov
mov
mov
in
shlb
inc
lret
xor
pop
or
mov
cld
repnz
jp
and
repz
push
into
lea
out
jbe
cmp
jg
ss
xchg
mov
mov
les
cld
sbb
pop
push
and
insl
ds
loope
inc
mov
scas
dec
ret
add
push
ficoml
adc
fldcw
jns
loopne
hlt
cmp
scas
adc
enter
cmp
outsb
push
das
bound
ret
into
das
fstpl
test
cld
or
add
insb
mov
pushf
sbb
lret
jl
fidivl
jo
cmp
jbe
mov
dec
fidivrs
pop
fists
hlt
daa
mov
mov
mov
dec
add
jge
movsl
and
loopne
xchg
cmp
fs
add
data16
xor
test
call
outsl
push
jmp
insb
or
mov
aas
loopne
inc
shll
lcall
jo
mov
or
xor
mov
out
sub
cwtl
mov
sbb
insb
in
add
pop
mov
sub
imul
or
adc
xchg
mov
and
aas
dec
shlw
dec
lret
jge
das
xchg
mov
ret
cld
into
mov
incb
pusha
test
add
cmc
pop
mov
lea
xchg
cwtl
inc
mov
dec
adc
in
rcll
inc
aam
enter
mov
jge
lret
dec
xchg
dec
cltd
imul
leave
out
inc
cmpsb
and
ficoml
inc
fstpl
fwait
arpl
cmpsl
fs
cmp
inc
xor
ror
push
dec
iret
pop
adc
fwait
push
subb
lahf
andb
or
aam
mov
push
lods
lds
sbb
rorb
loop
jmp
in
ljmp
fs
sub
xor
test
adc
sub
int3
pop
es
data16
mov
rorl
aam
xchg
movswl
xchg
mov
fstps
movsb
mov
pushf
mov
and
js
xor
mov
and
sub
out
add
xchg
int
out
pop
sub
aad
jo
jne
sub
mov
push
xor
cld
and
dec
sarl
xlat
push
or
daa
cmpsb
sub
insb
pushf
cmpsl
pop
mov
insl
dec
xor
xchg
sbb
push
push
pop
sbb
es
mov
movsb
frstor
cmp
mov
in
pop
daa
xor
test
outsb
inc
int3
jg
pusha
movsb
shlb
loope
repz
xchg
adc
nop
ja
aaa
cmp
mov
imul
in
je
lcall
sti
xchg
aaa
call
decb
stos
cwtl
and
loopne
sbbl
jns
or
dec
iret
jb
pop
loop
in
cmpsl
xchg
mov
xchg
sbb
sbb
insl
xchg
push
lods
jbe
daa
loopne
rorb
test
dec
loope
mov
enter
sahf
lret
lods
mov
movsl
xchg
movsl
popf
stos
dec
jne
scas
jo
push
aam
cmp
rcr
push
xchg
pusha
and
mov
pop
sbb
fisubrs
movsl
fs
loope
adc
dec
cmp
pop
cwtl
adc
test
stos
xor
sti
js
sbb
test
xchg
pop
push
orl
and
cmc
jle
es
ret
in
sbbb
pop
js
push
popf
insl
ds
data16
and
fs
js
add
xor
and
adcb
pop
xor
lods
in
test
fdivrl
andw
ret
lahf
cmp
sbb
push
nop
rcl
fdivp
mov
pop
test
call
xchg
inc
sub
rorl
adc
scas
lret
test
dec
and
repz
insl
dec
or
fstl
pop
test
jo
jge
fcoml
jne
imul
pop
sbb
sub
xchg
xor
cli
adc
lds
test
lods
xor
fimuls
cld
fsqrt
aas
aas
sub
cld
je
mov
push
std
mov
and
jmp
mov
xlat
cmp
mov
in
push
jae
and
push
pop
xor
in
xchg
fs
xchg
fmul
testb
cld
adc
lret
sub
rorb
cmp
in
push
mov
bound
xchg
test
dec
sbb
xlat
mov
xor
sub
mov
mov
fbstp
adc
cmp
inc
lret
lcall
jb
int3
push
mov
lret
ret
cmpsb
push
scas
jne
bound
xchg
fldcw
imul
pop
aas
mov
fistpl
std
dec
sbb
mov
mull
mov
es
push
push
sub
notb
pop
add
sbb
adc
dec
and
add
mov
cwtl
mov
pop
movsl
or
imul
shrl
test
pusha
testl
sub
xor
push
outsb
in
in
jne
push
jl
push
fwait
adc
mov
loope
sti
lret
xchg
movsb
enter
xchg
adcb
in
fs
sbb
push
das
sbb
cmpsl
imul
mov
pusha
mov
inc
pop
rcrb
fistl
fadd
lret
cmp
pop
pushf
stos
dec
cmpsl
jmp
mov
xchg
mov
jg
xor
sbb
mov
sbb
fisubs
mov
sub
cli
pop
in
or
shld
imul
int3
push
jnp
dec
lret
adc
ret
jae
mov
and
xchg
mov
imul
pushl
mov
mov
cld
pop
mov
push
gs
adc
lcall
push
shlb
lret
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
push
or
xchg
xchg
xor
nop
and
aaa
pop
jp
jg
sub
or
loopne
and
adc
jmp
pop
es
dec
push
sub
hlt
lods
test
stc
jnp
nop
and
or
ret
arpl
int3
fstpl
cmp
test
outsl
xlat
test
hlt
push
push
repz
jl
pop
xorb
repz
ljmp
pop
xchg
add
inc
sahf
insl
adc
popf
cmp
sub
xor
mov
mov
lret
cmp
sbb
scas
movsl
iret
xchg
cmpsl
sub
in
xorl
mov
loopne
cmp
shl
sbb
jbe
insl
push
pop
sub
jns
inc
inc
stos
in
inc
cmp
sub
int3
jp
or
pop
mov
add
aas
dec
in
jle
insl
rcrb
sbb
jmp
push
pop
add
insl
inc
jmp
cmp
int3
arpl
xor
sbb
icebp
lret
mov
cmpsl
out
dec
pop
jp
xor
hlt
es
int
scas
xor
lcall
ljmp
in
push
jge
inc
lret
dec
dec
scas
jmp
in
mov
pop
pop
bnd
dec
sub
jno
cli
inc
cld
xlat
fs
pop
repnz
jb
jecxz
int
push
adc
cmpl
push
test
sub
mov
mov
xor
cmp
pop
clc
jo
or
ss
mov
aaa
adc
nop
aas
and
imul
xchg
pop
test
add
outsb
repnz
mov
push
push
stos
xchg
enter
dec
sar
fimuls
xor
pop
push
jecxz
xchg
lahf
add
mov
add
inc
loop
push
bound
xor
js
lret
jmp
jae
inc
test
add
insl
and
aad
pop
mov
fadd
lret
dec
pop
mov
loop
jmp
mov
push
testb
jle
push
add
xor
stos
outsl
cwtl
subl
sub
mov
repnz
nop
nop
testb
rcl
add
push
dec
xchg
ret
mov
xlat
jne
ret
popa
pop
loopne
xor
adc
dec
lods
push
sbb
int3
or
imul
ss
inc
popf
stos
inc
test
xor
loop
clc
rcl
fldenv
cmp
icebp
movb
dec
jno
lret
mov
lods
push
push
aad
xor
and
pushf
xchg
adc
std
lahf
in
orl
push
push
int
dec
sub
push
mov
push
mov
or
add
pop
popa
xchg
lcall
scas
sub
or
cltd
into
fwait
cmc
inc
pop
cltd
loop
xor
xor
add
pop
jnp
inc
stos
or
cs
push
sub
int3
adc
imul
inc
loop
jge
cmp
or
icebp
or
or
push
pusha
pop
xor
adc
xlat
out
pop
sbb
adc
push
out
lret
test
out
aam
test
ss
push
inc
inc
fwait
adc
lret
xchg
inc
lods
movsb
movsb
ja
inc
popa
les
iret
test
lea
sub
inc
jo
mov
lret
and
aaa
xchg
cmp
roll
push
xchg
stos
imul
push
jno
sbb
jnp
pop
ret
insl
or
jb
arpl
mov
bound
jne
mulb
push
fs
fidivs
ret
lcall
lret
or
sub
fs
andb
ds
dec
pop
mov
pop
shl
lahf
inc
mov
or
loopne
jbe
arpl
aam
loop
dec
push
sbb
push
popa
xor
cmpsl
cmp
fs
sbb
or
lods
or
pop
jne
mov
or
pop
sub
mov
stos
cmp
out
fbld
add
mov
pop
mov
push
and
cld
sbb
out
stos
mov
fs
test
pushf
adc
insb
adc
rclb
push
cli
ficoml
sbb
dec
mov
clc
iret
mov
out
loopne
rcl
arpl
fstl
xchg
pop
pop
jecxz
mov
mov
mov
xlat
in
cwtl
sbb
mov
cmpsb
imul
dec
packsswb
enter
test
fcom
dec
sbb
xchg
inc
out
lret
pop
inc
or
inc
pop
lods
loop
mov
mov
xchg
fimull
outsb
outsb
xor
mov
mov
repz
add
cmp
xchg
xor
sub
inc
int
int3
inc
adc
ret
andl
std
je
nop
mov
ret
jns
in
xchg
adc
jno
jae
adc
pop
das
push
lcall
xchg
jnp
sub
adc
clc
mov
adc
dec
out
into
shl
roll
jecxz
or
ja
cld
jno
mov
mov
enter
rorb
add
pop
jns
jo
lods
adc
arpl
in
jns
sbb
clc
and
xor
sbb
sbb
aaa
inc
in
shrb
mov
test
pop
pop
fsubr
pop
mov
jb
lds
xchg
mov
mov
push
fnstcw
gs
inc
ss
or
test
int
ja
in
pop
cmp
stos
sub
call
mov
sub
mov
push
sub
fidivrs
stos
outsl
fldl
test
mov
xchg
cs
inc
fisttpll
stc
or
bound
cmp
call
xlat
pop
mov
ljmp
jmp
nop
dec
fwait
notb
adc
inc
sbb
insb
fstl
andl
xchg
fimull
fwait
ret
stc
aam
mov
mov
repz
push
cmp
rorb
inc
orl
fsubr
aam
or
je
test
xchg
and
lahf
cwtl
mov
js
fnsave
xlat
push
xlat
or
jp
xchg
push
cltd
negl
ret
in
cmp
pop
andl
adc
cmpsl
cs
mov
aaa
ja
jg
outsl
add
pushf
ja
data16
or
push
sub
and
movsl
mov
and
fstpl
pop
jne
rsqrtps
addl
mov
cmc
cmp
rcr
jp
xor
js
jo
pop
add
movsl
shlb
xor
mov
les
loope
push
jbe
sub
frstor
subb
cmp
push
out
in
adc
imulb
movsb
sbb
mov
ljmp
bound
jne
sti
imul
cmp
clc
cld
out
mov
adc
std
inc
test
insb
aas
push
vpmulhw
incl
jne
mov
xor
push
inc
mov
fsubp
lds
cltd
int3
ficoms
mov
jl
mov
xchg
cs
jbe
dec
in
or
enter
pushf
cmp
dec
dec
push
leave
jne
mov
in
daa
mov
sub
enter
adc
or
xor
stos
inc
mov
push
cmpsb
add
pop
cmp
mov
aaa
dec
icebp
lock
scas
mov
jmp
mov
orl
mov
es
test
faddl
repz
ret
mov
lock
mov
jb
cmp
aaa
bound
push
sbb
clc
push
push
dec
out
add
addr16
mov
lahf
ficoms
rorb
inc
ss
dec
push
popa
inc
arpl
sub
and
add
pop
xor
dec
mov
inc
push
push
or
ffree
lods
mov
xor
incb
inc
jbe
ja
sarl
in
call
pop
add
sahf
jle
jg
mov
std
push
movsl
xor
push
pop
pop
orl
movsb
xchg
or
nop
mov
cmp
test
std
dec
rclb
lods
jmp
adc
ljmp
mov
jecxz
in
jmp
ret
test
cmpsl
loopne
leave
in
rcrl
cli
add
sub
sbb
push
mov
mov
cwtl
push
add
jp
sbb
sub
pop
insb
xor
lea
in
inc
lret
rcrl
rolb
rorb
or
hlt
cmp
mov
test
adc
out
ret
fidivl
push
push
or
add
pop
scas
icebp
sysenter
cmp
nop
mov
jae
jmp
call
jnp
push
add
xchg
mov
addb
or
add
sub
cmpsl
aad
insl
pop
dec
repz
les
inc
imul
lret
xchg
lock
ficomps
pushfw
gs
xor
stos
and
jl
push
sub
test
and
sub
jge
sub
andnps
jl
lods
in
or
sub
pop
mov
mov
fwait
int
inc
call
cmpl
push
pop
scas
dec
mov
xchg
mov
push
xchg
repz
scas
cmp
decb
xor
aaa
scas
adc
adc
pushf
out
xchg
dec
mov
mov
xchg
sbb
jns
sbb
aaa
xor
mov
xor
and
mov
mov
clc
cwtl
pop
lahf
sbb
adc
arpl
or
movl
dec
gs
cld
sbbl
xchg
movl
cmp
xchg
mov
test
mul
lcall
lea
in
mov
inc
js
dec
sub
stc
loopne
adc
jb
fimuls
adc
jo
add
mov
out
push
dec
sub
jno
testl
lret
or
fsincos
outsl
mov
stos
pushf
les
out
sub
incb
mov
xchg
push
jecxz
jle
adc
sub
add
mov
inc
les
and
jb
dec
jl
mov
mov
orl
andb
inc
stos
aaa
xchg
cmp
sub
pop
jbe
orl
sarl
lea
dec
cltd
les
mov
clc
popf
popf
ret
notb
stos
mov
loope
push
iret
push
push
pop
ljmp
xor
out
cli
in
mov
inc
push
rorb
xor
out
ret
jae
push
inc
mov
jb
movsb
add
imul
mov
push
jle
xchg
mov
sbb
loop
decb
test
xlat
scas
or
cmpsb
jge
inc
jge
adc
imul
inc
mov
dec
jg
jmp
lods
and
dec
mov
pop
repnz
dec
aaa
dec
or
cmpsb
aad
cmp
ss
inc
jl
mov
jno
enter
mov
xchg
loop
mov
or
or
repnz
gs
lret
mov
xchg
in
nop
clc
xchg
xchg
cmp
jmp
push
mov
push
iret
flds
stc
inc
cmp
pop
stc
imul
lods
ljmp
test
jb
mov
inc
pusha
dec
push
xor
push
mov
mov
cwtl
and
shrl
daa
adc
xchg
dec
mov
je
sti
cmp
push
push
fdivr
imul
xchg
call
lds
cwtl
add
je
add
test
lods
dec
xchg
stos
imul
jo
sbb
adc
push
stos
pop
int
dec
aaa
dec
daa
push
ret
scas
pop
mov
and
rorb
sub
cmpsl
pushf
ss
sub
or
xchg
bound
hlt
mov
xchg
push
xchg
mov
cli
pop
stos
es
push
jo
push
pop
icebp
xchg
cmp
mov
or
pop
or
lcall
or
iret
cltd
int
xchg
add
test
jmp
push
bound
lods
lods
cmp
dec
dec
call
add
jle
mov
movl
mov
adc
jl
loop
int
ret
jae
cmc
push
sbbl
add
mov
add
in
pop
das
xchg
nop
subb
pop
testb
cmp
xor
pop
movsb
nop
and
iret
dec
scas
decb
mov
xchg
mov
cmpsb
bound
sahf
into
mov
jno
pop
jg
into
cli
bound
movsb
sub
inc
push
xor
dec
or
rorl
mov
loope
cmc
hlt
mov
add
mov
leave
aam
and
mov
iret
mov
popf
mov
or
movntq
pop
jle
mov
hlt
jge
shl
fdiv
push
imulb
inc
in
mov
adc
test
loop
pushf
ss
lods
sub
push
inc
aas
loope
mov
and
fisubrs
call
push
ds
sbb
jmp
fisttpll
push
mov
fs
add
es
pop
shlb
jle
scas
xor
or
mov
popw
xor
lret
adc
or
daa
jmp
sub
pop
and
loop
hlt
add
pop
xor
jg
sub
scas
nop
mov
adc
iret
push
lock
lods
sbb
rorb
scas
pop
mov
ja
fnstcw
lock
cmp
daa
pop
xchg
sbb
pop
dec
jbe
ficompl
bound
jl
fldt
ljmp
pushl
xchg
scas
js
pop
sub
out
inc
inc
jns
test
xlat
rcrb
cmp
xchg
sbb
or
repz
mov
addr16
in
jmp
arpl
sbb
mov
mov
xor
xlat
xor
lods
adc
fsubrp
sarl
inc
shrl
xor
lahf
push
addr16
dec
mov
xor
into
bound
notb
cwtl
sub
xchg
xchg
lods
and
sbb
negb
inc
fnstcw
frndint
shlb
loope
lcall
cli
xlat
pop
sub
fucomi
fwait
mov
cmp
add
dec
push
scas
jae
push
dec
mov
and
mov
sbb
stos
xchg
mov
faddl
push
sbb
jp
shll
sub
out
jns
push
xor
outsl
scas
xor
leave
xor
sbb
scas
pop
xchg
bound
xor
mov
jns
lea
das
jnp
in
popf
cmp
mov
rorb
inc
adc
sub
add
or
std
xchg
sahf
push
xor
cld
imul
outsb
cmp
cmp
shll
jns
xchg
jbe
push
or
inc
cmp
mov
lcall
sub
outsb
push
shr
xchg
ljmp
int
add
push
xchg
mov
fdivrl
clc
aaa
mov
icebp
xchg
andb
mov
pop
test
mov
jp
mov
iret
loope
add
mov
mov
xchg
jne
inc
es
test
and
lcall
in
popa
lock
cmp
inc
dec
fiadds
and
outsl
mov
or
jno
inc
sbb
xor
pushf
cmp
test
xchg
repnz
ficoms
and
fs
cmp
les
add
lea
xchg
and
call
aam
insb
sub
xchg
aad
pushf
fsubrl
xor
mov
out
pop
outsb
fs
pop
mov
test
xor
fimuls
rcrb
and
stc
push
fs
icebp
fisubl
and
popf
dec
xorl
js
sub
pop
sbb
jg
addr16
add
inc
mov
jbe
push
fsubs
xchg
nop
mov
jns
les
movsl
daa
leave
pop
out
popf
mov
pop
or
mov
dec
movl
roll
dec
mov
movsb
or
gs
jne
aad
or
xchg
dec
fistl
or
sbb
fisubs
cmp
sub
sub
mov
mov
das
hlt
sub
ret
dec
int3
popf
inc
movl
loop
push
cwtl
and
xchg
jecxz
cld
lret
pop
mov
out
cmp
push
rolb
je
mov
adc
popa
movsl
movsb
scas
adcb
inc
fsubs
out
mov
fwait
mov
cmp
jle
icebp
and
loope
xor
adc
clc
aaa
lods
lahf
fldenv
flds
iret
pop
pop
push
adc
ret
mov
out
call
shrb
adc
dec
xchg
rcr
popa
xor
mov
flds
or
fdiv
mov
cmpb
sub
incb
xor
inc
and
mov
xor
jl
sbb
cmova
mov
aam
and
push
and
or
ficoms
xchg
ret
movsb
ss
mov
push
xchg
push
or
pop
add
cld
in
popf
inc
imul
sub
xchg
mov
pushf
fwait
mov
iret
sbb
add
into
lea
mov
shl
jne
pop
lcall
jbe
adc
xchg
push
daa
faddl
ret
lret
xchg
decl
sub
add
movsl
stos
adc
or
sub
xchg
adc
jl
or
clc
adc
outsl
lret
sub
in
cs
adc
cmp
scas
inc
cmp
mov
mov
daa
out
bound
dec
push
sbb
les
adc
xor
mov
xchg
pop
add
cs
or
mov
and
add
aad
fwait
sbbb
sahf
scas
pop
jo
jge
mov
sbb
fdivrl
mov
cmpl
add
movsb
arpl
mov
mov
insb
or
orl
xchg
in
pop
outsl
mov
movsb
pusha
ljmp
or
add
cmp
cmpsb
sub
mov
aaa
sbb
clc
push
xchg
or
mov
outsl
mov
dec
fildll
and
daa
inc
mov
mov
das
pop
fidivrl
sbb
add
js
jns
and
ret
jns
bound
sbb
add
mov
insb
or
lods
movsb
adc
out
leave
pop
jns
imul
mov
jl
insb
adc
push
and
mov
test
ja
cltd
mov
aas
stc
push
repz
nop
scas
ds
stc
sbb
daa
aad
and
xor
rolb
mov
sbb
fnsave
jbe
xor
mov
pop
inc
test
test
bound
push
stos
lods
fcoml
lods
sub
test
mov
sahf
push
sti
push
xor
xchg
sub
mov
mov
add
inc
inc
jp
inc
sub
mov
mov
in
stos
mov
loop
jns
mov
jbe
in
sbb
test
imul
daa
sbb
lcall
mov
dec
jp
sbb
pop
data16
dec
mov
mov
xor
scas
aam
or
rcll
in
insl
movsl
out
rol
out
jno
mov
pop
shl
popf
xor
jbe
mov
ret
inc
xchg
xchg
lahf
test
outsl
test
aam
mov
popf
xchg
prefetcht1
xchg
push
pushf
repnz
xchg
mov
es
ret
pop
mov
push
inc
das
mov
imul
fwait
cs
in
pop
and
jg
adc
mov
aad
out
add
sub
push
dec
insl
cmp
dec
imulb
test
sub
cmc
cwtl
and
sti
jecxz
jb
push
dec
repnz
xchg
aas
push
cmp
jp
clc
shll
ja
in
inc
out
xchg
icebp
daa
xchg
int3
sahf
jmp
mov
mov
movsl
mov
jo
cld
outsb
leave
hlt
xchg
hlt
out
daa
lods
inc
pop
ds
add
jecxz
inc
outsb
sub
pop
movsl
mov
outsl
and
mov
add
or
sub
sbb
mov
movsl
mov
sarl
mov
fucomi
in
push
inc
mov
ss
pop
dec
dec
ljmp
test
cli
adc
fdivs
clc
xchg
or
cs
inc
push
pop
lret
adc
inc
push
testb
ljmp
xor
cli
mov
jmp
pop
in
push
lret
xor
adc
ffree
int
or
loope
leave
arpl
outsb
gs
scas
cmp
sbb
inc
sub
loope
sub
pop
hlt
push
inc
mov
mov
inc
cmp
cmpb
loope
leave
jl
fildll
fdivp
sahf
push
lahf
cmpsb
sbb
ljmp
lahf
jne
aaa
stc
icebp
out
mov
lods
xchg
into
daa
push
rcl
stos
inc
xor
andl
fwait
inc
dec
and
fldcw
hlt
mov
test
mov
mov
mov
inc
push
call
xchg
push
nop
jb
imul
aad
insb
adc
push
fwait
adc
xchg
mov
movb
cli
ret
inc
repnz
dec
cmc
sarl
out
mov
cld
cmpsb
xchg
xor
xchg
xchg
mov
jg
push
jmp
jle
jne
call
lcall
and
fildl
std
mov
jp
out
push
add
pop
adcb
sbb
rorl
jg
push
repz
dec
pop
inc
sbb
roll
mov
mov
cmpsl
push
das
pop
jnp
mov
fcoms
out
cmp
mov
and
mov
bound
dec
cmp
xor
push
cmpl
cld
mov
dec
lahf
ja
test
add
into
lea
je
imul
mov
jle
stos
inc
xchg
aas
cmc
movsl
cmpsl
lahf
adcl
jg
dec
jb
pop
pop
subl
es
inc
sub
inc
out
or
je
icebp
int3
xor
jbe
lods
movsb
inc
mov
xor
sbb
in
mov
lods
inc
ret
idivb
fists
hlt
xchg
popa
push
cmpsb
test
in
dec
add
jae
pusha
xor
out
inc
and
dec
rolb
or
popa
notl
test
frstor
cmp
lret
dec
mov
push
jo
gs
cmp
push
xchg
into
out
rclb
xorb
jl
or
orb
arpl
and
and
test
xorb
xor
repz
loopne
mov
push
int3
sbb
movsb
sub
xchg
es
add
lret
inc
mov
enter
jb
sahf
daa
dec
shll
out
call
mov
popa
pop
push
push
inc
pavgb
sub
fwait
jbe
push
and
stc
lcall
out
mov
xchg
xor
lret
outsb
add
adc
push
sub
leave
notb
sbb
inc
jne
sub
add
sbb
sbb
shl
xchg
jle
jg
pop
test
xor
jecxz
add
xchg
cmc
cmp
sbb
iret
div
out
clc
push
mov
mov
mov
jno
icebp
arpl
jmp
lock
int3
or
xor
sahf
int
mov
jne
icebp
addr16
out
lret
sbb
sbb
lods
mov
shll
rcr
aaa
stos
adc
add
xchg
imul
jp
jmp
iret
add
into
roll
pop
jbe
insl
sub
aaa
out
mov
adc
adc
push
mov
fwait
imul
sub
in
add
ljmp
das
sub
add
cmp
pop
shr
lcall
cli
xor
scas
test
push
jae
fsubs
pop
mov
out
outsb
ss
std
inc
es
in
pushf
cmp
mov
filds
dec
scas
int
add
mov
sbb
ret
sub
add
das
movsl
popf
lret
add
addr16
into
mov
fists
pop
jge
sub
mov
pop
iret
cmp
rolb
sub
dec
push
mov
daa
fcoms
push
aas
test
add
test
mov
mov
stos
stos
rolb
sbb
adc
sti
imul
setb
cmp
pmulhw
mov
mov
imul
add
xchg
mov
mov
lods
fs
icebp
sub
test
popf
and
jno
nop
sub
mov
ficoml
cmp
xor
fistpll
cmpl
scas
gs
test
or
ss
jae
fistpll
ljmp
xchg
push
mov
mov
jo
aas
adc
fdivr
jl
pushf
push
adcl
int
adc
jmp
mov
cld
inc
sub
pop
stos
cmp
or
inc
pusha
test
pop
cmovbe
xor
aas
or
or
dec
in
out
out
jo
das
inc
int
loopne
fs
fwait
cs
dec
xchg
push
mov
inc
test
adc
dec
fldt
sbb
lods
sbb
int
add
sarb
add
xor
xor
test
adc
inc
adc
and
inc
pop
jmp
dec
cmp
push
addr16
adc
arpl
mov
push
imull
adc
lret
fwait
or
inc
sub
aam
jecxz
jmp
jae
or
push
cmp
mov
fbstp
inc
test
inc
add
js
pop
jno
btc
ljmp
loopne
imul
cmc
scas
data16
bound
push
or
mov
and
hlt
inc
fcomip
and
push
inc
stc
stos
outsb
aas
adc
adc
pop
out
cmovs
ja
adc
lahf
jo
pop
into
adc
les
xchg
dec
outsl
cmp
mov
das
mov
pushf
mov
es
or
sub
sbb
push
fidivs
frstpm(287
mov
jo
andl
cmpsb
inc
mov
dec
sub
pop
mov
movsb
xchg
cmp
xchg
in
jmp
nop
fstpl
pop
xor
add
cmp
and
cli
dec
pop
xlat
xchg
dec
lret
cmp
fidivs
jb
je
fnsave
cmp
fistpll
repnz
nop
in
sub
jbe
sti
sub
leave
push
outsb
in
cltd
push
sbbb
lea
outsl
jae
mov
and
lcall
cld
lock
or
jmp
in
inc
aas
push
adcb
shr
sar
pop
jb
mov
aam
pop
dec
imul
addr16
mov
push
data16
jae
or
stos
fists
movsl
xorl
and
dec
pop
lret
inc
mov
out
sub
push
jno
out
xorb
dec
add
je
js
adc
das
mov
inc
fsub
sub
aam
pop
or
js
out
push
adc
xchg
out
xor
mov
aas
popa
fistpl
pusha
movsl
mov
xor
sbb
pusha
sub
out
js
lcall
mov
xor
mov
cmp
xlat
sub
mov
cld
xchg
xor
test
push
mov
das
rorl
loope
mov
cmc
or
cmpsb
fldt
push
pop
aaa
cmc
mov
fimull
bound
mov
ds
call
sub
lock
aas
mov
add
stos
sti
inc
cli
addr16
jo
test
inc
dec
adc
popa
mov
push
cwtl
inc
mov
clc
fwait
je
jae
sarb
pusha
or
js
xchg
sub
or
mov
jmp
xor
cmc
aas
mov
pop
popf
xor
pop
adc
jp
daa
cli
add
sbb
dec
fs
jge
pusha
lret
mov
mov
inc
aam
mov
out
or
mov
mov
sbb
push
in
add
push
push
sbb
xchg
dec
xor
pusha
lds
push
mov
test
mov
mov
loop
jge
push
ljmp
cmpsb
daa
and
inc
scas
adc
add
les
mov
aaa
add
gs
cld
idivl
enter
push
push
push
lds
sahf
iret
cmpsl
test
stc
popf
test
lods
xchg
push
push
and
xor
xchg
test
cmc
aam
ficoms
xor
imul
incl
stos
nop
scas
lret
sbb
ds
inc
pop
leave
or
xchg
jle
mov
fidivrl
pushf
adc
es
cli
sti
das
fcom
jmp
mov
data16
or
std
imul
loopne
pop
cs
stos
lret
sbb
test
negl
add
lret
lock
mov
cwtl
or
mov
aad
dec
and
pop
outsb
xor
pusha
xchg
fdivrp
xchg
pusha
dec
mov
xlat
add
mov
jo
mov
fsubrl
insb
pusha
insb
jnp
add
jmp
cs
cmpsb
ds
push
xchg
add
nop
or
jbe
ret
aas
pop
cmpsb
lds
cmpl
sub
js
mov
pop
ja
sub
or
pop
popa
adc
jnp
ret
mov
xorl
out
iret
or
jge
arpl
test
sti
fisttpl
cltd
pop
sbb
ret
lcall
jb
pushf
inc
dec
inc
roll
lea
or
mov
mov
aas
adc
dec
mov
jecxz
mov
jecxz
outsl
dec
push
test
cmpsb
lds
es
xor
mov
pop
repz
insb
repnz
and
idiv
addl
sub
jbe
mov
lret
mov
and
jle
aam
cltd
jp
test
cli
ja
cmp
stos
outsb
xor
push
pop
ret
pop
lcall
sub
jge
xchg
adc
pop
nop
cmp
push
popf
mov
mov
mov
je
lahf
cmp
mov
dec
in
out
push
jb
xchg
rcrb
popa
into
inc
gs
jbe
inc
popa
push
iret
psllq
fstpt
aaa
push
jbe
mov
mov
pop
mov
cmpl
xchg
vpcomleb
in
pop
rorb
jecxz
addr16
push
push
aas
cld
jecxz
mov
xorb
inc
ret
push
jmp
inc
inc
add
rorl
loopne
cmpsb
add
xchg
xchg
or
push
das
sbb
mov
add
pop
pop
cmp
in
dec
repz
jp
add
dec
movb
iret
inc
cmp
ficompl
fsubr
cld
push
int
fdivp
ds
cmp
cmpsb
mov
ja
leave
cli
xor
aad
hlt
cwtl
mov
push
loop
je
pop
ficomps
negl
scas
data16
fs
js
imul
jbe
pop
in
adc
addr16
cmp
sbb
jge
in
pushf
mov
enter
cmp
daa
in
out
notb
cmpsb
inc
xor
xor
outsl
enter
and
push
leave
lret
dec
add
popa
mov
push
fs
pop
pop
mov
mov
sbb
fldcw
loope
notb
and
pushf
les
mov
loope
mov
lds
pop
sbb
xor
dec
into
loopne
add
jmp
jnp
mov
ret
arpl
pop
arpl
jl
outsb
test
xchg
lret
and
add
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
xor
xor
push
push
movzwl
adc
mov
mov
or
mov
mov
mov
or
andl
xorl
movl
movl
mov
mov
sub
mov
xorl
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
orl
mov
mov
or
sub
xor
xor
and
mov
sbbl
orl
adc
mov
mov
xor
xor
mov
sub
and
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jb
add
mov
adc
orl
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
add
push
and
mov
mov
lea
mov
mov
mov
mov
andl
xor
subl
add
adcl
mov
dec
mov
sub
mov
mov
andl
add
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
mov
xor
mov
andl
add
movl
cmp
je
movl
mov
jmp
mov
mov
cmp
movl
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
mov
xor
mov
dec
xor
adc
add
xor
or
adc
mov
mov
adcl
mov
xor
addl
add
imul
mov
orl
xor
movl
add
movl
cmp
mov
mov
push
movl
je
movl
mov
orl
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
subl
mov
addl
xor
xorl
add
xorl
imul
mov
movl
jmp
and
mov
xor
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
mov
sub
jmp
inc
sbb
fwait
jnp
mov
jnp
test
jp
out
jp
lods
movsl
mov
into
and
lods
stos
jle
das
pop
cmpsl
das
mov
call
jp
in
pop
cmpsl
adc
aam
and
xchg
inc
mov
mov
imul
gs
pop
pop
lret
aaa
add
lret
mov
cmpsl
popf
lahf
and
repz
scas
mov
or
aad
pop
mov
imul
out
sbb
mov
addr16
std
inc
pop
inc
pop
or
dec
leave
push
into
shrl
xchg
sbb
stos
mov
mov
cmp
and
jmp
pop
push
xor
cmpsb
pusha
fwait
aas
mov
cmp
int3
jp
adc
lret
loopne
sti
add
pusha
lret
pop
dec
jp
xorb
sbb
mov
fnsetpm(287
insb
in
std
dec
sbb
sbb
and
cmp
gs
add
test
out
lcall
fsubrl
or
gs
loop
push
shlb
imul
frstor
out
inc
xor
mov
popa
sbb
or
lea
add
xor
jmp
lock
adc
mov
pop
daa
inc
dec
jl
add
pop
rcrb
fisubl
sub
or
xchg
cmp
adc
jo
mov
inc
out
mov
scas
subb
shrb
mov
adc
lods
mov
cmpsl
add
xorl
adc
dec
adc
rorl
or
lock
cmpsl
mov
inc
inc
daa
mov
fidivrl
inc
add
pop
dec
pop
pop
pushf
stc
xor
vunpcklps
mov
mov
hlt
movsl
adc
stos
popf
mov
inc
mov
mov
xchg
fwait
sbb
ss
mov
dec
xor
ss
push
cmp
fiaddl
ss
push
push
mov
push
inc
sbb
test
dec
lea
nop
push
outsl
push
mov
push
jp
outsb
pop
cmp
imul
cltd
lcall
out
cld
inc
mov
push
dec
inc
in
mov
fs
inc
adc
xor
in
or
jb
sub
repnz
add
mov
fisubrs
xor
sbb
jbe
sbb
sub
decl
cltd
pop
xchg
jl
mov
push
ret
aam
test
sub
ljmp
ds
push
rep
lds
and
xor
and
xor
fcomps
stc
add
sbb
inc
xor
sarl
jno
int3
fdivr
clc
push
std
pop
dec
xor
mov
mov
lahf
add
bound
mov
dec
jnp
and
sub
push
sub
mov
std
or
or
les
xlat
imul
dec
pop
aaa
cmp
xlat
add
mov
popa
sub
jne
lret
xor
xchg
sub
push
jp
sub
pop
fcmovbe
insb
lcall
push
mov
mull
mov
and
inc
mov
adc
mov
pop
inc
add
sub
add
stc
push
outsb
add
add
les
int3
sti
sub
inc
mov
cmp
add
fistpll
ror
sub
std
push
gs
mov
dec
lcall
lcall
jl
mov
in
lods
pop
stos
subl
mov
xor
sbb
mov
repz
fstps
ds
mov
sub
and
es
call
fsubrl
mov
pop
mov
cmc
mov
jbe
inc
adc
sub
mul
inc
add
int3
mov
lret
insl
mov
mov
mov
pop
pusha
xchg
sub
outsl
insb
lea
xchg
push
lds
daa
lret
es
shrb
daa
push
int
jnp
jbe
and
pushf
sbb
xchg
sub
add
lcall
mov
lahf
jbe
lahf
stos
lahf
lock
add
lock
lahf
mov
push
imul
popf
jo
data16
jle
das
out
cmpsb
rcrb
dec
cmpsb
pop
movaps
js
mov
mov
inc
negl
lock
fmuls
scas
cmp
outsb
push
stos
es
sbb
push
js
and
xchg
dec
stos
push
jne
in
pushl
out
insl
xor
dec
bound
out
and
push
sbb
int3
shlb
push
jo
push
sbb
dec
mov
cmp
sub
out
sbb
jg
xor
stc
mov
adcb
imul
popf
or
cwtl
push
daa
dec
adc
scas
xchg
push
rorl
push
xchg
mov
shl
mov
cmp
xor
pop
mov
inc
aaa
adc
adc
mov
in
sti
loope
sub
jmp
arpl
jbe
mov
ficompl
fstps
inc
jg
xor
bound
loopne
pusha
add
cmpsb
out
push
test
sbb
mov
mov
outsl
addr16
push
sahf
rcll
out
pop
leave
xor
push
ret
mov
mov
mov
add
jno
ret
in
mov
mov
mov
pushf
stc
add
fwait
shrb
and
lock
cmp
adc
xchg
test
dec
repnz
and
data16
ds
out
sbb
aas
jns
mov
cmpsl
mov
dec
outsb
or
std
inc
jno
push
and
and
inc
push
cmp
mov
dec
je
add
into
je
or
or
stos
fidivrs
mov
jnp
pop
enter
pop
mov
inc
sub
adc
mov
sbb
imul
mov
aaa
and
scas
mov
incl
cmp
and
andb
inc
notl
out
xor
sbb
pop
bound
sbbl
cmp
loope
and
call
pop
pop
pushf
jbe
xor
fmul
lcall
cmc
inc
mov
sbb
aaa
xor
add
inc
cld
pushf
mov
icebp
push
negl
xor
fldenv
pop
enter
mov
icebp
mov
dec
inc
data16
pop
loop
les
sub
daa
inc
sbb
push
adc
js
inc
lods
push
jp
xchg
neg
pop
lcall
cmp
mov
or
jns
aas
addb
push
je
or
xchg
jmp
sub
xor
sub
gs
dec
jp
bound
xorb
in
adc
jmp
cmp
cmp
add
jecxz
or
fsubrl
mov
rorb
lea
leave
xor
mov
push
xor
or
loopne
dec
int3
or
stc
adc
jmp
and
lds
push
lods
and
insb
mov
rcrb
add
xchg
xchg
push
mov
mov
mov
dec
lcall
lods
shll
adc
mov
loope
mov
call
icebp
repnz
out
mov
push
in
daa
jno
push
cltd
push
sti
pop
in
cmpsb
scas
popf
mov
xor
aam
testb
jp
cmp
cmp
jmp
mov
sbb
andl
and
sbb
sbb
stos
dec
pop
push
sub
push
scas
bound
outsl
jbe
fs
mov
jge
jl
les
lret
xor
shlb
rolb
divb
jl
pop
sti
int
test
mov
js
mov
mov
and
mov
dec
sbb
hlt
imul
imul
ljmp
pop
icebp
insl
pop
movl
jge
nop
jne
dec
mov
stos
je
xchg
cmp
fbstp
popf
inc
dec
repnz
xchg
imul
lret
jecxz
sti
and
lea
mov
sbb
orl
jns
xchg
sbb
in
test
insl
mul
cmp
enter
xlat
movsb
sub
pop
pop
lock
push
mov
dec
mov
in
push
pop
rcrb
pop
mov
xchg
cmc
test
pop
aas
mov
scas
sbb
adc
mov
loop
xor
jl
arpl
mov
int
cmc
cwtl
movsl
mov
lods
mov
or
popl
dec
sbb
call
bound
rcrl
int3
mov
in
mov
push
leave
dec
jp
push
sub
cltd
push
pop
pop
pushf
lret
xchg
mov
xchg
into
lret
sub
mov
push
adc
mov
repnz
push
jmp
sbb
cmc
xor
add
pop
popa
aas
lods
shll
and
dec
les
push
out
push
bound
pushf
inc
cli
test
or
dec
das
xchg
in
sub
loope
jmp
push
mov
jns
sti
divb
loopne
xchg
xchg
leave
and
sbb
push
push
mov
stos
jmp
in
pop
xor
mov
mov
jns
dec
fsubrs
imul
mov
test
sub
dec
push
lret
sbb
mov
scas
mov
pop
jg
jne
cltd
mov
test
xorb
scas
add
pop
aas
jg
mov
cli
jmp
scas
int
add
and
mov
dec
out
imul
call
popa
jp
jb,pt
out
or
inc
fildl
and
nop
cmp
or
lahf
fildll
dec
push
into
mov
ss
cmc
jp
inc
xchg
fcomp
repz
inc
ljmp
mov
push
mov
outsl
clc
vandnps
xor
mov
add
rcrb
mov
add
push
mov
xor
jns
jl
xchg
inc
sub
cmp
mov
push
loopne
les
cmp
loop
arpl
aam
push
int
mov
jb
lods
pop
jle
xchg
mov
inc
mov
insl
repz
mov
mov
cmp
cltd
sub
lcall
aam
jecxz
xchg
fmuls
cltd
stc
mov
xchg
clc
push
fs
lea
mov
cmp
add
pop
xchg
rcl
int3
out
pop
outsl
sub
cmc
and
pop
jge
inc
mov
jecxz
cmp
dec
mov
cmc
dec
movsb
push
or
pop
sbb
int
fnsave
push
cmp
or
lcall
xchg
outsb
in
jae
aaa
test
scas
mov
xchg
dec
pop
or
or
cli
push
add
mov
jl
pop
sbb
cli
call
jno
cs
mov
pop
lcall
inc
inc
xchg
mov
push
jns
lahf
fildll
repz
outsb
rcrl
xchg
loop
pop
mov
and
push
cmpl
mov
lds
ja
jae
sbb
cmp
lret
fcoml
add
or
adc
movsb
xor
repnz
inc
lcall
out
dec
xchg
push
movsl
stc
cmp
insb
inc
jle
add
loope
or
call
adc
pop
aam
sbb
inc
gs
mov
lds
cmp
dec
into
dec
loop
call
pusha
mov
jae
pop
cmpsb
mov
push
jb
add
pop
xchg
adcb
mov
mov
xor
std
dec
add
into
fcompp
pushl
clc
mov
pusha
push
inc
and
outsb
int3
pop
xchg
inc
fstp
mov
dec
mov
inc
fcoms
mov
das
repnz
add
imul
dec
es
ljmp
movhps
dec
into
cmp
dec
adc
push
aaa
cmp
ret
loope
adc
mov
outsl
cmp
aas
sbb
push
inc
push
or
in
mov
and
mov
std
xchg
icebp
xchg
imul
scas
int
cmp
test
add
vmread
xchg
dec
xchg
rolb
sarb
lret
mov
adc
sbbb
movlps
mov
inc
aam
clc
lret
sub
scas
push
ljmp
jle
cmc
xchg
pop
and
mov
add
scas
mov
sbb
push
mov
scas
pop
xor
xchg
out
adc
sbb
mov
cmp
stos
fstl
daa
pop
add
mov
jae
xor
inc
or
pop
das
sbb
insl
scas
sub
mov
dec
aam
fwait
push
mov
jns
fs
adc
loop
jecxz
xchg
repnz
movb
imul
xchg
outsl
pusha
inc
jns
push
shll
aam
push
cmp
add
test
bound
loop
add
push
and
sbb
dec
and
lahf
fstps
xor
andnps
push
ja
xchg
jg
and
push
xor
pop
xchg
cmp
movsl
fs
aad
shlb
mov
test
ja
ja
adc
jg
adc
mov
cmpsl
fisttps
mov
shlb
push
pop
sub
test
xor
call
sti
mov
cmp
pop
add
and
fnsave
ss
push
mov
adc
cmpsb
add
dec
sti
lea
mov
push
push
jg
dec
mov
int3
in
in
stos
dec
dec
add
popf
jmp
xor
test
cs
lods
in
pop
ret
jecxz
push
and
jns
faddp
shlb
mov
mov
lods
insb
push
mov
push
rdpmc
fs
shll
out
inc
fiadds
inc
fdivrl
and
pop
sub
idivl
mov
xor
push
std
or
das
xor
pusha
jl
xor
test
xor
addr16
je
xchg
jg
add
movsl
mov
scas
xlat
jecxz
scas
or
loope
fmull
xlat
call
aam
inc
mov
cmp
jne
pop
sbb
dec
std
fbld
push
cmpl
jae
lea
test
inc
mov
xchg
pushf
stos
cmpsb
out
fcoms
repz
mov
dec
lea
frstor
xchg
fwait
dec
fsubs
xor
push
mov
movsl
sbb
inc
and
cmp
push
mov
push
mov
js
dec
cmp
cmp
xchg
mov
andb
adc
int
cmp
jge
push
dec
iret
mov
xchg
pop
out
mov
jge
sub
hlt
cmp
dec
test
dec
scas
test
xor
cmp
push
out
addr16
lahf
sbb
xor
inc
mov
sbb
and
pop
inc
xchg
jno
daa
push
test
inc
pop
aaa
int
mov
or
stos
add
mov
cmp
or
sub
adc
dec
jl
push
ljmp
sbb
add
gs
imul
adc
inc
push
sbb
icebp
lret
andb
fidivrs
push
pop
fwait
testl
jo
frstor
cmp
mov
test
scas
mov
mov
les
test
repz
sub
adc
jmp
dec
test
cmp
push
ret
es
mov
add
xchg
ljmp
xor
jae
jo
dec
lods
jno
addr16
jo
aas
cmpsl
dec
mov
scas
es
fiadds
sub
lock
adc
adc
pushf
in
sbbb
nop
divb
xchg
adc
mov
jne
ja
cmpsb
cmpsb
xchg
pop
xchg
xchg
rorl
xchg
sub
xchg
push
mov
push
xor
xor
push
fwait
jb
scas
dec
stc
movsb
scas
push
mov
mov
mov
fmul
cmpsb
add
mov
fcmovb
lahf
mov
ficoms
sub
in
xchg
sbb
lds
jle
ss
pusha
dec
sbb
jb
ss
jl
or
cltd
add
cmp
call
xchg
push
jl
jmp
mov
in
mov
cmp
outsl
and
ss
adc
inc
mov
xor
stc
jle
insb
loope
pop
jno
cmp
jmp
scas
mov
push
repnz
xor
adc
jle
insb
sarl
rcpps
notl
jg
dec
dec
cmp
or
sahf
rcrb
push
in
test
sub
push
scas
pop
loop
pusha
sub
sub
int3
lods
stos
jg
fwait
out
in
imul
push
test
and
pop
cwtl
lret
int3
mov
ds
aad
or
push
adc
cli
popa
or
mov
subl
into
iret
pop
js
int3
lret
sbb
xlat
idivb
js
mov
pop
sahf
aam
stc
xor
pop
daa
notb
je
dec
into
out
or
cmp
inc
aas
and
stos
fwait
sbb
insb
mov
nop
subl
mov
mov
hlt
cli
fstpt
lret
add
insl
inc
je
jmp
lret
xchg
cmp
xlat
dec
or
shl
cmp
jg
add
mov
lcall
sbb
js
sub
xchg
ja
mov
popf
dec
aam
inc
sub
jmp
leave
xchg
xor
mov
lar
fimull
push
mov
inc
fisubl
mov
arpl
cs
out
pop
pop
mov
lea
leave
outsb
or
addl
jno
lods
xlat
pop
adcb
jmp
adc
xchg
test
mov
fsubrl
pushf
repz
pop
xor
lock
push
daa
aad
jb
mov
jno
mov
stc
or
and
popf
mov
push
test
repnz
rcrl
cmp
fiadds
loopne
jb
mov
fldcw
mov
sbb
es
inc
and
xchg
sbb
shlb
dec
out
mov
stc
inc
mov
jecxz
mov
shlb
add
push
lret
lock
fnsave
mov
add
xchg
icebp
push
movsb
mulb
stos
int3
bound
push
xchg
shr
pmuludq
imul
daa
into
jp
insl
jnp
dec
jecxz
stos
sarl
mov
dec
mov
mov
js
pushf
ret
adc
jae
cmp
neg
outsb
xchg
cmp
fdiv
xor
fwait
inc
fs
jg
jge
jb
dec
mov
loopne
jno
lods
sahf
cmpsl
xchg
or
shlb
jl
les
sbbb
mov
mov
je
into
sbb
mov
xchg
inc
das
popf
push
and
out
mov
jbe
fcomps
jg
rorb
dec
loopne
sbb
ja
mov
testb
je
xor
mov
lock
imul
scas
add
xchg
inc
mov
outsl
fidivrs
sarb
repz
add
adc
scas
lock
aam
mov
fisubrs
stos
dec
sti
fisubrs
cli
push
xchg
xor
jge
sbb
pop
popf
mov
test
mov
aas
sbb
xchg
sbb
cld
idivb
int3
repnz
fdiv
adc
cmc
loope
lahf
mov
je
jbe
sbb
in
div
ja
add
xor
loop
lds
cmpsb
push
xor
test
shl
cmp
aam
popa
mov
inc
mov
jmp
out
lret
into
jmp
push
in
fs
scas
pop
out
sbb
mov
movsb
add
dec
mov
subb
mov
push
roll
dec
cmp
mov
xchg
push
add
data16
push
xor
fs
into
aad
add
incb
mov
and
int3
fwait
cmpsl
and
cmc
aaa
iret
std
xor
repnz
leave
bound
dec
dec
push
cmp
test
add
push
loop
adc
flds
push
jno
jg
lods
outsb
sub
data16
nop
pop
and
xlat
inc
imul
lret
or
mov
xcrypt-ecb
cmpsl
lret
mov
cwtl
inc
ret
stos
add
jne
add
lods
add
inc
aaa
cmp
jo
dec
pop
mov
dec
adcl
cmp
xchg
push
mov
lds
test
push
mov
push
jl
xorb
jno
jge
jmp
rep
scas
fimull
mov
mov
cmp
sbb
mov
mov
inc
inc
add
xor
mov
insl
pop
pushf
sub
jg
dec
scas
push
mov
aas
mov
xlat
ja
int3
or
inc
and
pop
pop
std
dec
push
mov
lock
stos
std
push
push
push
repz
loopne
dec
or
scas
or
pop
adc
xor
and
clc
and
cmp
push
mov
sbb
fnstcw
mov
pop
idiv
inc
fs
loop
hlt
xchg
sar
mov
sbb
test
arpl
nop
push
data16
mov
add
mov
test
movsl
int
jmp
fisttpll
fdivrs
outsb
or
les
jecxz
xchg
adcl
scas
jns
lds
jno
push
mov
outsb
roll
xchg
jle
imul
pop
jmp
and
push
jns
roll
jns
jne
push
adc
sub
into
xchg
adcl
mov
xchg
sub
mov
movsb
cmpsl
sbb
push
ljmp
mov
fisubrl
shlb
mov
sidtl
daa
xchg
popf
pusha
or
mov
in
rorl
mov
pop
setno
pop
jae
jge
jmp
hlt
cmc
mov
or
pop
jae
and
sbb
mov
scas
push
cmovae
out
inc
xor
test
popf
insb
addl
and
mov
adc
imul
add
xchg
mov
xor
add
push
or
imul
jo
mov
inc
gs
mov
rorl
jl
dec
add
add
push
and
into
iret
jmp
sti
sbb
sahf
fadds
mov
mov
aaa
or
rcrb
in
fdivl
jl
or
xchg
lea
mov
test
xchg
insl
sarb
icebp
pop
push
mov
sbb
and
shr
mov
andl
xchg
cmc
push
test
jnp
insb
hlt
cmp
in
pusha
push
int
push
and
mov
aaa
fldcw
std
ljmp
hlt
cmpsb
jnp
jl
add
or
bound
pop
jo
pop
adc
sbb
sub
imul
sbb
in
shrb
mov
mov
lods
pop
mov
push
dec
iret
cs
cmc
movsb
ljmp
xchg
sarl
cs
jne
push
rcll
out
ljmp
jmp
into
hlt
jmp
shll
dec
and
jle
mov
lods
mov
or
gs
pop
mov
adc
pop
adc
fbstp
lods
mov
mov
adc
jecxz
in
adc
icebp
insl
sub
ss
decl
mov
inc
pop
loope
fisubs
ror
scas
scas
push
cld
shll
inc
jg
sub
movsb
mov
xor
cmp
and
scas
in
insl
xor
xchg
das
mov
mov
test
dec
data16
mov
es
sub
leave
dec
sarl
or
arpl
cmpsl
xchg
pusha
stc
sub
lods
mov
pop
pop
mov
and
pop
ret
mov
push
push
jmp
andl
mov
hlt
cli
dec
ja
stc
cmp
lcall
jg
mov
or
push
mulb
pop
cli
pop
fisubrs
stc
int3
fs
push
xchg
faddl
xchg
and
in
sub
icebp
sub
dec
xchg
fwait
cwtl
fsts
iret
pop
dec
xor
pop
popa
cmp
adc
or
add
sbb
push
sbb
imul
cwtl
mov
daa
lret
out
mov
or
pop
dec
shlb
inc
mov
pop
sub
sbb
jmp
mov
lods
pop
ret
scas
call
sti
sub
insb
jmp
js
mov
jae
jnp
mov
fcomp
dec
sub
sbb
addr16
adc
cmc
adc
mov
pop
scas
mov
push
fbstp
iret
add
adc
test
sub
fwait
mov
jl
cltd
add
enter
fs
ljmp
fistpll
test
adc
mov
imul
pop
push
fldcw
pop
mov
stos
adc
dec
cmpsb
sti
decb
sub
loope
stos
rcrb
cld
sti
jb
cli
inc
mov
sbb
incl
and
dec
push
sbb
pop
lds
scas
push
aaa
popa
fs
sbb
ds
xchg
sarb
in
inc
aaa
inc
call
ss
outsb
fwait
xchg
iret
adc
aas
jno
arpl
das
mov
xchg
dec
mov
or
jo
xor
inc
aas
decb
mov
and
pop
push
mov
dec
pop
fsubp
mov
fnstenv
cmp
data16
jp
jb
loope
shrb
imul
inc
repz
mov
cmpb
aaa
in
daa
sar
xchg
test
shrb
fcom
clc
xchg
sbb
inc
add
loopne
adc
lret
nop
pop
imul
push
pop
and
jle
aaa
pop
fildl
push
sahf
pop
sub
jne
mov
fidivs
inc
pop
lea
jno
mov
mov
push
pop
push
mov
sub
inc
cltd
outsb
pop
mov
loopne
daa
inc
push
and
jmp
mov
pop
dec
repz
ljmp
xor
sbb
int3
adc
jecxz
pop
subb
jnp
adc
lcall
out
jg
loopne
lret
in
lods
in
lahf
sub
cmpl
adc
dec
lahf
aaa
loop
in
test
pop
bound
adcb
daa
xchg
lds
cld
xchg
call
adc
call
ret
pusha
out
cmpsl
xor
mov
jne
fcomps
lea
mov
adc
sub
dec
push
outsl
fsts
add
icebp
xchg
fstpl
push
push
leave
fidivs
xor
jmp
insl
pop
push
loope
aad
xor
stos
repnz
js
cmpsl
add
and
addr16
mov
pop
cmpsl
insl
and
js
push
mov
dec
mov
xor
stos
mov
sub
push
sar
cbtw
addb
rcrl
nop
mov
pop
mov
in
and
push
pop
sbb
jae
mov
cltd
jmp
idivl
dec
pop
adc
jne
mov
int
test
jecxz
mov
lret
xchg
je
cmp
dec
add
test
das
xchg
jecxz
push
or
cmp
xor
xchg
or
and
sahf
cmp
push
xchg
subl
xor
in
mov
out
sub
leave
insb
pop
inc
push
cld
sub
sub
push
push
sub
lds
push
ss
xchg
test
push
cmp
enter
xor
jle
test
bound
mov
imul
into
push
ret
outsl
sub
leave
loopne
shr
out
mov
mov
adc
aas
mov
add
inc
out
adc
out
pop
punpcklbw
lock
std
pop
dec
lret
test
out
addb
and
outsl
movsb
movsb
push
or
push
jno
mov
mov
pusha
in
lods
dec
iret
dec
test
sub
mov
test
cmp
push
test
mov
xchg
jmp
daa
data16
or
nop
push
stos
jge
lods
xor
cmpsb
push
inc
mov
lcall
pusha
movsb
sub
dec
outsl
adc
adc
aas
mov
pop
lds
cltd
push
out
lea
outsl
and
jo
cwtl
arpl
sub
shlb
in
std
fbstp
js
mov
gs
inc
test
dec
out
mov
jl
or
sub
mov
add
xor
push
jle
fdivrl
xchg
lret
fldt
cmp
mov
mov
add
xor
icebp
leave
pusha
popf
push
imul
and
loopne
loope
imul
or
arpl
xchg
test
xchg
dec
cmpsb
and
sbb
cmp
add
test
ficoms
pop
fdivl
xchg
pop
movsb
fidivrs
int3
cmp
dec
xor
sbb
icebp
push
sub
and
push
xchg
inc
pushf
inc
pop
jl
ljmp
popa
xchg
jo
lahf
xchg
lret
push
push
int3
shll
inc
loope
and
push
imul
inc
inc
xchg
dec
mov
out
jo
or
sbb
shlb
lea
inc
divl
test
cwtl
dec
xchg
sbb
jge
movsb
mov
inc
adc
mov
rcl
mov
cmp
jbe
xchg
mov
dec
std
xorl
mov
sbb
inc
cmpsb
ljmp
ljmp
inc
pop
xor
das
pusha
pop
sti
lahf
pop
add
mov
pop
addr16
vcmplt_oqsd
stc
or
in
stos
stos
or
sub
push
and
mov
xor
scas
movsb
loopne
insb
into
inc
jne
pop
sahf
rcrl
mov
xchg
mov
push
pop
sbb
movsb
setp
repz
icebp
inc
adc
repnz
xorb
mov
pop
cmpl
in
add
mov
sbb
cmp
in
or
test
lods
pop
cmpsl
xor
into
sbb
stos
stos
frstor
in
xlat
call
int
idivb
bound
adc
fisttpll
push
push
lods
out
and
bound
xor
xor
cmp
pushf
jo
lahf
xchg
xchg
mov
daa
and
dec
andb
lret
fsubs
adc
pop
insb
push
enter
add
cmp
sbbl
jno
inc
mov
xlat
leave
push
aas
icebp
pop
cmp
in
xor
push
scas
les
shl
rclb
lods
sbb
mov
xor
call
cmp
mov
or
add
arpl
jne
fstl
lods
cmpsb
inc
pop
arpl
shl
rcl
fisttps
jo
mov
sub
mov
sub
loop
loop
fwait
add
popf
push
push
jecxz
xor
mov
fldcw
in
push
cld
js
shl
mov
js
fcompl
jns
std
jg
and
push
jb
adc
mov
movsl
xor
or
in
sub
xor
lock
push
jp
leave
xchg
cld
setle
cmpsb
xor
xor
mov
xor
xchg
push
andb
push
rclb
mov
lcall
call
mov
mov
pop
xchg
lods
sti
jb
inc
pop
and
js
sub
in
lods
fs
nop
mov
or
andb
int3
mov
lcall
into
into
sbb
in
jge
mov
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
push
add
movl
subl
movl
and
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
xor
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
push
pop
rcll
fwait
pop
push
outsb
adc
fldl2t
jp
sbb
jp
sbb
xchg
adc
mov
xor
fcomps
jp
push
sub
adc
sbb
pusha
add
inc
inc
push
leave
pusha
or
pop
lods
imul
daa
out
pop
inc
cmp
popf
mov
adc
leave
popf
xchg
inc
popa
jge
outsb
enter
fmull
xorl
ja
push
jo
jecxz
dec
sub
fwait
xor
and
mov
dec
das
inc
push
cmp
or
adc
mov
jp
cmp
mov
sub
int3
adc
mov
sahf
mov
out
lock
loopne
fisttpll
int3
pop
inc
int
xchg
insb
adc
xchg
fnstenv
fs
push
sub
jo
adc
xor
shll
mov
xchg
dec
nop
rorb
push
and
or
sub
sub
loope
shr
loopne
and
insb
adc
aad
leave
lods
adc
jmp
pop
loop
sarl
xchg
xchg
xor
cmp
mov
push
jl
pop
data16
mov
insb
pop
or
sbb
xor
aaa
mov
jns
push
xchg
pop
xchg
mov
pop
pop
dec
add
lahf
jnp
cld
pushf
rcr
loope
cmp
dec
ja
push
jl
stos
rcrl
andb
add
cmp
inc
sub
scas
xchg
pushf
stos
xchg
movsb
rclb
mov
mov
lret
mov
mov
dec
inc
insb
aaa
push
pop
repz
jno
movsb
inc
mov
xchg
fcmovu
addr16
fisubrs
bound
cmc
push
lods
test
test
cmpsl
jmp
scas
repz
push
sahf
mov
push
mov
clc
sbbl
jmp
sbb
dec
fwait
pop
mov
int3
add
cmpsl
pusha
ds
rcr
sbb
les
sbb
and
push
cld
add
and
mov
xor
mov
or
cmpsb
sub
in
movsl
mov
push
mov
push
lods
ljmp
int
fwait
in
fcomps
loop
imul
dec
xchg
dec
jp
movsb
into
sbb
pop
rolb
hlt
push
nop
movsl
sbb
in
daa
out
jp
lds
dec
mov
jmp
add
pop
xor
rcrl
dec
dec
rorl
xchg
jp
out
pop
sub
btcl
xchg
popf
mov
push
or
sbb
enter
cmpsl
cmp
xor
push
mov
inc
sbb
pop
adc
sub
sub
hlt
cs
inc
sub
sahf
mov
outsb
mov
and
loop
data16
rep
fiadds
jmp
and
insl
push
and
ss
cld
fstpt
sub
fisttps
jl
ds
xchg
movsb
push
jl
scas
lret
fildll
adcb
push
inc
jmp
gs
mov
test
push
lods
leave
sahf
mov
or
adc
dec
cmpsl
mov
xchg
jg
mov
int3
ljmp
dec
mov
test
jecxz
pop
imul
xor
shlb
sti
sub
notb
enter
fmull
mov
shll
out
sub
cmpsl
je
push
xchg
push
mov
out
add
imul
xchg
test
and
mov
les
aaa
inc
or
push
loop
out
mov
mov
xchg
and
outsb
mov
cld
pushl
or
vcvttpd2dqx
sbb
jmp
or
cmc
and
dec
xor
lret
xchg
out
xor
cltd
fwait
and
mov
cmc
dec
add
test
arpl
scas
xchg
cmp
adc
lcall
pop
imul
xchg
nop
sub
fadds
inc
jb
cli
push
aas
inc
jg
bound
xchg
pop
popa
push
and
jge
pushf
rorb
add
push
hlt
or
sbb
mov
in
xor
ret
or
and
and
gs
push
sbb
addr16
cmp
xchg
sbb
movsb
pop
fwait
sahf
jbe
pop
pushf
out
sub
inc
das
xor
and
sbb
notl
scas
mov
fiadds
dec
je
jbe
mov
or
cmc
lea
loop
outsl
push
dec
ret
jecxz
aaa
xlat
push
addr16
cmpsl
js
les
pop
jns
loope
gs
daa
nop
add
ds
pop
inc
jns
gs
inc
pop
stos
stos
inc
adcl
add
xchg
ja
and
rcrl
and
out
fidivl
fcmovnu
cltd
and
insl
lods
xor
enter
fldcw
dec
mov
push
insb
adc
leave
pusha
xchg
add
movsb
sub
jbe
shll
sbb
mov
jnp
lods
inc
aad
jo
push
mov
add
nop
out
sbb
push
push
mov
loop
mov
mov
inc
insb
mov
sub
aad
in
mov
loope
jle
fstpt
shr
inc
movsb
cmp
outsb
push
rcrb
mov
jge
jmp
stc
xchg
add
push
lret
xchg
icebp
dec
daa
ds
in
push
inc
frstor
fs
push
shlb
sbb
jb
dec
loop
je
sarl
sahf
sbb
jae
clc
addb
xchg
add
mov
aam
ret
sub
mov
enter
mov
add
in
mov
mov
sbb
sub
dec
int
je
nop
sbb
dec
xchg
loopne
pop
jle
sub
or
scas
fnstcw
out
inc
dec
mov
and
pop
mov
test
sti
mov
adc
mov
lcall
add
push
in
jne
movsb
jnp
mov
xlat
inc
ljmp
push
xchg
pop
xchg
sti
push
in
shlb
mov
push
jno
hlt
mov
mov
or
dec
inc
loope
xchg
inc
daa
dec
pop
cs
cltd
nop
adc
icebp
bound
xchg
pop
push
in
adc
jg
mov
outsl
jb
scas
inc
jg
sti
jle
daa
int
aam
mov
es
jb
ror
jo
push
push
jmp
xchg
adc
stos
inc
xor
jne
ret
pop
imull
jo
mov
adc
or
pusha
mov
mov
hlt
icebp
pusha
push
insl
rcrl
orl
test
das
incl
push
or
add
add
mov
xchg
imul
push
cmpsl
sahf
loopne
clc
pop
ficomps
popa
mov
in
xor
inc
lea
ret
cltd
mov
push
pushf
sbb
dec
sbb
inc
mov
fs
xchg
pop
das
xor
sub
notl
shlb
mov
sub
negl
les
jnp
pop
mov
or
out
sub
push
mov
loop
sbb
stc
or
data16
lods
jae
lea
rcrl
das
sub
aas
cwtl
test
add
fdiv
jmp
pop
and
inc
push
cmp
push
dec
lcall
mov
dec
loopne
ja
lret
dec
adc
mov
cmp
adc
mov
data16
cld
mov
xchg
mov
call
insl
aaa
xchg
pop
mov
lahf
push
test
or
aas
cmp
or
daa
popl
dec
fidivrs
mov
xchg
imul
xor
daa
sub
xchg
idiv
das
jne
jns
jb
out
fs
xor
mov
es
inc
push
mov
xor
xor
mov
in
push
imul
fcom
outsl
iret
jmp
idivb
into
addr16
xchg
sbb
insb
jle
dec
test
xchg
cmp
addr16
xor
cmp
or
push
fstpl
mov
fs
imul
mov
call
imul
aaa
scas
adc
gs
sbb
shrl
and
loope
loop
imul
test
rorb
jno
push
imul
je
add
test
push
sarb
jge
inc
or
test
dec
xchg
dec
jno
lea
inc
loope
sahf
and
lds
mov
mov
adc
cmp
enter
cwtl
cmpsb
movsb
loope
sahf
ret
out
xor
sar
push
xchg
cli
pop
sbb
test
jno
ret
inc
fsubl
push
or
repnz
adc
ret
jo
sbb
sub
into
dec
jle
rol
sahf
cmpsb
enter
aad
lods
out
cmp
xor
jge
clc
sub
shl
add
orl
xchg
aam
mov
or
xchg
xchg
mov
sub
jge
orl
xchg
pop
imul
loop
lret
dec
xchg
iret
in
inc
sbb
mov
adc
dec
jno
xchg
sub
pop
cmp
or
mov
push
xor
lcall
daa
adc
sbb
fnstcw
xchg
push
enter
dec
cwtl
and
pop
mov
ss
mov
in
scas
fsin
enter
pop
sbb
mov
push
cs
orb
add
bound
mov
arpl
add
pop
decl
decb
xchg
ret
imul
sbb
mov
movsl
mov
jecxz
mov
jle
pop
clc
stc
add
jno
lods
lds
js
setb
sbb
dec
dec
xchg
xor
cmp
mov
sub
aaa
jmp
pop
xchg
mov
jle
push
xor
icebp
std
shl
jne,pt
repz
rolb
fs
int
xor
nop
adc
pop
dec
jns
xor
add
xor
jle
loope
mov
movsb
push
ljmp
lods
arpl
popa
enter
js
sub
stos
add
js
cmpsb
popa
sub
mov
mov
ficomps
add
loope
out
jle
push
push
pop
xchg
mov
test
cmp
std
mov
mov
cmp
dec
push
pop
iret
pushf
and
sub
sarb
push
xchg
fdivs
pusha
cmpb
sbb
lahf
daa
dec
jg
bound
ljmp
dec
xchg
shl
data16
dec
movsb
pop
movd
cs
push
lcall
xchg
cld
repnz
in
dec
jp
mov
cmpl
push
mov
cmp
testl
int3
xchg
sbb
jg
inc
in
sub
cld
aam
sub
outsl
lret
aad
sbb
inc
mov
scas
out
lds
testb
add
xchg
popa
or
sbb
push
movsl
into
sarl
clc
jb,pn
std
or
sbb
popf
or
aad
pushf
lods
int
imull
loop
adc
lods
adc
inc
pop
pop
int3
fwait
adc
mov
jno
xor
enter
xor
or
sbb
mov
out
fs
int
into
lahf
mov
cmc
dec
sbb
cmp
int
dec
dec
pop
sbb
fsubrl
jns
enter
rclb
sbb
js
call
aad
jg
jbe
in
shll
pop
or
arpl
or
and
subb
sbb
sub
fadds
shlb
mov
ljmp
push
cmp
sub
cs
pushf
add
jecxz
rcrl
xchg
push
xorl
jns
js
mov
fwait
lcall
loopne
andnps
mov
inc
cwtl
lret
cltd
jp
cmc
stos
inc
jmp
add
lods
jne
mov
rcr
jl
inc
call
test
push
push
and
mov
push
stos
mov
mov
and
dec
adc
lods
dec
sahf
arpl
push
jns
sarl
addr16
jecxz
push
xchg
pop
pop
shll
roll
pop
push
mov
dec
dec
int
movsb
sub
leave
mov
add
xor
movsl
popf
arpl
mov
mov
xor
mov
adc
sub
lods
cld
pop
lcall
or
out
divb
xchg
js
fmull
xchg
fstps
fmul
mov
les
call
push
mov
xor
stos
or
pop
movsl
jne
ret
sbb
call
cmp
push
xchg
nop
pop
dec
cli
stos
or
xor
loope
fstpt
dec
sarl
outsb
lods
pop
data16
pop
add
mov
pop
pop
bound
outsb
xchg
push
xchg
push
jae
push
rorb
mul
fimuls
jg
lcall
pop
sub
inc
push
xor
pushf
inc
or
mov
fsubrs
fadds
hlt
push
add
push
aas
ljmp
push
sbb
and
test
xchg
into
xchg
add
mov
into
les
in
push
outsb
shrb
cld
xor
inc
and
imul
mov
add
imul
mov
jo
pushf
push
shrb
pop
fdivs
ret
loop
ret
ss
stos
sahf
xor
pop
xor
and
jae
in
shlb
mov
sarb
addr16
cmp
mov
mov
daa
push
aas
sbbb
movl
jl
imul
pop
adc
out
mov
push
push
add
aad
scas
inc
and
adc
adc
jge
adc
test
call
addr16
push
and
adc
xor
dec
lock
rcl
inc
mov
mov
das
push
loope
cmp
add
loopne
mov
das
or
jmp
jmp
mov
or
je
in
sahf
cmp
add
push
ljmp
in
in
push
jp
cmc
pop
fsubr
sbb
push
pop
xchg
mov
mov
rcll
enter
fists
or
rclb
xor
dec
sbb
pop
jecxz
and
jmp
xchg
cmp
cmpsb
jmp
push
cmp
enter
lcall
inc
popa
sar
push
sub
mov
fsubs
int3
and
cld
dec
ljmp
insl
les
outsl
xchg
imul
js
xor
shr
cmp
push
cwtl
iret
out
pusha
ja
adc
dec
and
int
mov
and
xor
subb
jp
push
xor
and
int
dec
xor
push
ljmp
sub
aas
pusha
mov
outsb
xor
arpl
dec
mov
inc
and
xchg
aad
call
mov
dec
mov
int3
ror
add
jge
mov
sbb
loop
out
cmp
popf
or
div
stos
pop
ljmp
mov
out
push
jg
and
inc
inc
jge
pop
int
mov
xchg
jnp
sbb
mov
imul
xchg
jecxz
mov
gs
sbb
inc
imull
cwtl
pop
fdivs
pop
inc
cs
mov
call
repnz
mov
mov
sbb
cmc
jns
sub
xlat
fsubs
adc
and
cmp
lcall
stos
adc
test
fnstcw
mov
cmp
mull
cmp
call
and
out
and
aad
xlat
xor
sti
xor
loope
ljmp
outsl
mov
arpl
loopne
add
sub
imul
popa
bound
add
jmp
repz
jle
sbb
clc
dec
add
into
fwait
mov
insl
or
repz
jns
mov
std
test
adc
into
cmp
movb
jl
or
in
mov
pop
lahf
sbb
xchg
addr16
aam
xchg
outsl
dec
sub
sub
dec
sbbl
mov
in
mov
dec
test
stos
mov
xchg
cli
sahf
mov
pop
clc
cmp
flds
cmc
mov
pop
ds
das
aaa
push
xchg
mov
cmp
mov
mov
sbb
mov
jmp
enter
xor
fs
jns
push
into
bound
dec
mov
int
jno
inc
imulb
lret
inc
pop
push
sbb
lds
nop
cmp
pop
pop
sahf
imul
jne
in
sbb
mov
inc
or
loop
jmp
or
dec
enter
popa
jg
mov
xchg
push
lods
out
and
aam
xchg
mov
push
cmpsb
ss
sub
int
cmpsb
das
jne
imul
fistps
aam
fnstenv
mov
std
gs
les
and
aaa
xchg
lods
xchg
xchg
jb
inc
xor
scas
stos
aad
cld
bound
jmp
and
aad
add
call
into
neg
stos
xorb
sti
pop
test
daa
scas
testb
pusha
pushf
push
sbb
cmpl
fs
outsl
add
mov
je
cs
jle
push
push
xchg
dec
fxch
ds
xchg
cli
pop
gs
adc
pop
xor
push
fists
mov
xchg
add
test
pop
aas
inc
sbb
dec
out
inc
pop
cmp
mov
inc
xchg
cli
push
sbb
test
mov
sahf
jg
cmp
or
pushf
scas
push
inc
hlt
out
ret
mov
test
add
mov
dec
fsubp
hlt
mov
test
inc
repz
add
cmp
push
adc
in
sub
xor
dec
inc
enter
xchg
adc
jbe
xchg
int
lods
repz
lret
scas
push
mov
dec
sbb
outsb
push
jb
push
inc
xchg
jle
insl
sbb
and
jmp
lods
pop
fcmovne
jne
pusha
dec
sbb
imul
sbb
sbb
xchg
xchg
xchg
cltd
js
test
mov
ja
mov
js
iret
cmp
jle
cmpb
inc
adc
daa
mov
test
fdecstp
das
insb
movsb
adc
push
scas
push
push
stos
int
xor
je
mov
outsb
mov
fstpl
push
jo
popf
rcll
ficomps
leave
out
repnz
push
adc
mov
push
cmp
call
add
push
loop
add
pop
pop
gs
movsb
mov
mov
shlb
add
cmp
mov
dec
stos
xchg
add
scas
mov
lret
jae
js
ret
mov
lds
pop
cmc
loopne
pusha
xorl
std
inc
lea
sbbl
fsubp
sub
xchg
cmpsb
cltd
mov
sub
or
lcall
ljmp
dec
or
and
ds
adc
out
pop
push
sbb
sti
pop
fsubrl
test
push
fwait
add
jp
sbb
xorb
lahf
clc
enter
cmp
fdivr
xchg
xchg
fsubr
mov
test
adc
ret
aam
xchg
pop
jecxz
dec
daa
push
shll
enter
jnp
xor
loopne
push
sbb
sbb
and
mov
dec
mov
lods
loopne
push
shrb
sarl
mov
sub
cltd
int
shll
arpl
sbb
pop
mov
icebp
mov
sub
in
shll
dec
roll
xlat
mov
cmp
in
mov
inc
mov
or
add
mov
in
pop
xchg
insl
lods
decb
jbe
sbb
sub
aad
and
dec
mov
out
xorl
jle
cmpsb
scas
pop
fcoml
push
add
stos
push
in
inc
movsb
mov
push
sbb
cli
dec
push
xchg
lret
pop
out
mov
jle
addb
add
out
decl
in
rcl
and
mov
das
mov
xchg
inc
repnz
or
sti
pop
push
push
and
lret
jnp
out
and
xchg
cwtl
lahf
sub
or
insl
popf
inc
test
addr16
add
cmp
cs
ret
test
and
loope
out
xchg
jne
je
cmp
cmp
jp
and
or
mov
adc
out
fstpt
mov
movsb
pop
or
mov
cmp
mov
cli
sub
repnz
pop
dec
cld
stc
lods
neg
xor
cli
mov
cmc
movsl
lock
or
add
not
cs
inc
sbb
lds
aam
in
pop
shll
sbb
test
jge
popf
mov
mov
hlt
jp
dec
xchg
imul
jge
not
pop
add
call
xor
add
jg
dec
loop
push
les
pop
imul
jno
push
inc
in
sbb
mov
push
or
mov
and
rorb
cltd
pop
mov
aaa
sub
mov
and
push
fmuls
xor
shll
sbb
or
scas
and
fldl
jl
sub
cmpb
scas
cmc
jp
mov
adc
dec
xor
shll
mov
sbb
xchg
cld
mov
and
stc
imul
xlat
xchg
pushf
sbb
pusha
cld
mov
ss
shr
dec
mov
fiaddl
xchg
inc
ds
cmp
push
adc
test
sti
push
scas
pop
movsbl
fimull
repz
sub
push
mov
adc
sti
lea
xchg
in
repnz
xor
xchg
repnz
mov
mov
xor
xchg
cmp
inc
jae
mov
dec
mov
jo
pop
dec
clc
xorl
iret
mov
out
add
and
dec
incb
xor
cmc
sbb
push
test
aas
sbb
or
les
or
jge
add
mov
push
jge
int
mov
stc
dec
jg
daa
dec
dec
insb
mov
mov
push
pop
cltd
push
loope
cmp
mov
out
or
shlb
and
mov
jns,pn
and
sub
pushf
sub
or
adc
cmp
out
or
mov
gs
cmpsb
test
cs
sub
mov
mov
nop
push
cmp
pop
pop
stos
ss
clc
clc
imul
sub
loope
xor
rolb
test
pop
arpl
in
mov
imul
jl
lods
xor
filds
adc
dec
cmpsb
mov
pop
pop
cmc
jno
jg
pop
mov
xor
imul
sbb
push
jge
sub
out
inc
jns
sbb
arpl
sub
mov
dec
cmc
jo
ljmp
fwait
pusha
jne
test
lea
ss
mov
add
imul
lea
mov
xchg
push
pop
divb
test
inc
jo
sbb
insb
stos
int3
dec
in
and
mov
lds
jge
rcrl
cmp
xchg
mov
pop
xchg
push
shll
jecxz
in
push
jnp
jecxz
pushl
outsb
loope
mov
dec
pop
mov
jle
sbb
lret
notb
sub
popa
mov
jmp
aam
js
push
sub
aaa
mov
push
shll
es
andl
adc
cmp
dec
loope
daa
mov
pushf
icebp
fnsave
mov
push
jno
cmpsl
adc
ret
mov
sarl
inc
and
xchg
test
add
fs
or
mov
adc
sbb
push
sti
inc
xor
push
jo
dec
adc
xor
lahf
xchg
jp
stc
das
cmpsl
mov
scas
cli
jg
and
sbb
sbbb
mov
mov
push
imul
addl
hlt
xchg
xor
sbbb
iret
mov
mov
outsb
cmpsb
xor
pop
aas
in
mov
mov
daa
adc
mov
sbb
push
dec
fldt
sub
adc
mov
mov
in
jle
lcall
cltd
dec
push
jbe
xor
sub
jo
scas
sbb
pop
test
xor
pop
outsb
ret
pop
lret
xchg
mov
dec
nop
rclb
scas
out
push
mov
push
mov
or
sub
lods
dec
rorl
out
mov
dec
je
scas
enter
push
add
or
ja
add
ror
xchg
add
add
mov
sub
inc
mov
pop
sub
add
cmc
lret
mov
bound
jl
push
xchg
std
inc
jne
mov
push
cli
fists
and
shl
lea
loop
lcall
push
xchg
daa
mov
jmp
pop
imul
ds
dec
xor
test
loope
test
add
repnz
mov
pop
push
inc
xchg
cmp
scas
data16
mov
in
push
inc
xchg
movsl
sbb
push
mov
xlat
dec
cmpsb
imul
pop
sahf
sub
test
movsb
mov
shlb
test
adc
inc
inc
push
jnp
cmpsl
xor
inc
es
mov
mov
enter
out
push
std
imul
dec
push
loopne
mov
sarl
xchg
or
dec
repnz
sbb
mov
pop
and
and
dec
inc
jmp
sbb
lods
xchg
cli
dec
xchg
lds
daa
cmp
push
dec
cmp
push
push
rcrl
adc
decb
insl
int3
lahf
xchg
pop
push
xchg
stos
sbb
and
iret
cmp
and
xorl
mov
imul
jbe
add
bound
int3
mov
fldt
int
mov
xchg
addb
in
neg
orb
push
pop
mov
push
dec
pusha
jecxz
out
push
add
xor
cmpl
sub
into
fidivl
pop
xchg
push
xchg
daa
sahf
mov
push
sahf
jbe
dec
ffreep
cwtl
stos
testl
xchg
ficomps
mov
jns
lret
int
rorl
mov
xlat
pop
data16
addr16
pop
pop
dec
repz
inc
push
dec
imul
adcl
cmp
mov
les
mov
scas
gs
sub
loop
fs
mulb
xchg
sub
add
enter
sahf
enter
fs
ljmp
add
xlat
out
leave
into
pop
cmp
stos
lock
push
cmp
cmp
cmp
or
push
xchg
rol
lock
int3
clc
xchg
je
fildl
shl
jno
in
adc
jmp
lahf
ret
jo
aas
dec
fbld
mov
jle
mov
jbe
mov
adc
mov
enter
adc
pop
dec
test
inc
test
xor
jg
shlb
cmpsb
cmp
inc
in
dec
hlt
xchg
cmp
lret
andl
jge
in
stos
fdivl
dec
adc
fistpl
sub
pop
ret
std
sti
sbb
lds
fwait
in
enter
sub
mov
int3
jae
mov
cld
inc
int
dec
repz
push
stc
arpl
xorl
cmp
mov
xor
jp
and
jl
xchg
inc
cmp
jecxz
lds
mov
pop
mov
push
jmp
push
call
mov
arpl
fs
inc
jg
jp
dec
lock
das
lods
rol
icebp
jl
cwtl
fisubl
sub
pop
add
mov
pop
mul
pop
pusha
clc
mov
mov
repz
loope
mov
sbb
cmpsb
sub
dec
incl
sub
and
add
enter
int3
or
and
and
ljmp
daa
and
in
loopne
adc
fistl
jmp
pop
clc
pushf
fcmovbe
lea
mov
jae
xor
cmc
inc
jp
inc
ficomps
mov
jg
jnp
packuswb
in
fcmovu
cmp
push
lods
scas
sbb
sbb
jp
xor
adc
pop
mov
adc
cli
stc
cld
xor
loope
mov
sub
push
add
push
or
fisubs
insb
pop
das
inc
test
cmp
push
fucomip
int3
jl
cwtl
adc
or
aas
push
dec
push
stc
sub
cmpsb
es
cmp
rcr
cmpsl
or
ret
lock
sbbl
pop
sarl
xor
adc
rcll
repnz
inc
xchg
add
iret
lahf
cmp
mov
int3
xchg
xor
jecxz
and
ja
cmp
jg
mov
lret
dec
imul
leave
pop
push
mov
mov
mull
es
add
mov
roll
mov
mov
imul
and
cmpsb
xchg
add
push
lret
cmp
push
mov
mov
dec
mov
dec
dec
push
fisttpl
or
add
mov
or
fimull
cwtl
xchg
cmpsb
or
decl
cld
push
sub
add
fsubs
bound
shl
imul
andb
mov
aam
imul
or
aam
fildll
sub
into
bound
insl
sub
into
jp
out
mov
xchg
adc
inc
mov
mov
dec
add
adc
add
jno
xchg
cmp
daa
pop
add
insl
mov
addr16
push
inc
jmp
sarl
dec
dec
mov
enter
xor
push
imul
repz
bound
fdivrl
adc
pushf
lret
mov
xchg
das
xchg
cmp
inc
sub
push
cmp
clc
loop
lock
scas
push
cli
or
xchg
cmp
dec
inc
aaa
das
test
aad
addl
jae
cmp
notl
std
movsl
and
out
movsl
lods
inc
repnz
mov
mov
push
sub
movsl
insb
lcall
mov
sub
lds
add
test
rcr
fwait
loopne
inc
push
xor
jmp
jne
xor
mov
lds
fildll
xor
mov
imul
out
mov
pop
xchg
add
sbb
imul
in
cmp
push
out
cmovp
outsl
sbb
push
jge
addr16
push
and
pop
pop
pop
scas
repz
cld
mov
rclb
adc
lods
popa
ljmp
sahf
xchg
xchg
inc
sbb
xor
sbb
jo
sbb
ljmp
lahf
mov
and
stc
ret
les
roll
fbstp
pop
fidivl
adc
loopne
das
icebp
xor
mov
cld
add
mov
insl
in
dec
insb
dec
sbb
icebp
minps
jo
push
pop
pop
test
xchg
fists
xchg
mov
xchg
inc
clc
push
cmpsb
subl
mov
shlb
ds
rcrb
sarb
xor
jp
lock
notl
dec
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
or
movl
adcl
mov
mov
mov
add
mov
negl
xor
add
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
or
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
mov
adc
mov
adcl
xor
mov
and
mov
decl
add
movzwl
add
mov
movb
mov
mov
adc
lea
subl
mov
mov
inc
mov
xor
adcl
sub
adcl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
sbbl
movl
push
movl
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
xor
or
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xor
mov
or
mov
sbb
xor
or
mov
push
add
jmp
movl
mov
mov
movl
inc
cmp
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
not
mov
subl
xor
adcl
add
movl
jmp
decl
mov
adc
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
subl
add
movzwl
negl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movzwl
movl
xor
add
movl
mov
movl
mov
mov
inc
mov
movl
cmp
jne
mov
mov
adcl
xor
movl
add
subl
mov
add
mov
addl
xor
add
movl
mov
mov
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
jmp
sbbl
mov
and
mov
xorl
xor
xor
sub
sub
sub
xor
mov
mov
mov
subl
lea
movzwl
adc
mov
sbbl
mov
dec
mov
lea
mov
sbbl
mov
add
mov
lea
mov
incl
mov
sbb
mov
andl
lea
dec
mov
movzwl
adc
mov
mov
addl
lea
mov
xorl
mov
andl
mov
orl
lea
addl
mov
or
mov
xor
add
movl
jne
jmp
negl
mov
mov
subl
xor
xor
sbbl
sub
orl
sub
xor
movl
mov
movl
mov
movl
mov
jmp
mov
mov
xor
adc
xor
xorl
sub
sub
or
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
jmp
fstps
sti
sarl
jnp
inc
xchg
or
cmp
lret
sti
pop
jp
cmp
sar
and
pusha
out
or
xchg
out
adc
fwait
imul
or
mov
insb
dec
pop
push
pop
loope
xchg
jl
jle
test
in
jns
xchg
inc
cmp
jo
movhlps
lods
jmp
push
mov
aas
fwait
pop
imul
mov
stc
aas
sub
loope
mov
test
pushf
pop
mov
mov
jno
fldcw
movsl
adc
notl
mov
bound
out
stos
pop
sub
xchg
push
inc
or
rcrb
out
idivb
jnp
call
jns
push
pop
hlt
pop
jno
or
pop
jno
jle
repnz
shll
jae
jo
adc
push
push
lock
sbb
or
mov
ds
insb
es
fildll
push
scas
xlat
xchg
mov
stc
xchg
clc
sbbb
mov
jne
adc
jle
stos
jae
and
mov
jne
mov
mov
ficoml
and
outsl
cmc
push
andl
sbb
push
jno
and
cs
out
and
push
push
jo
dec
sub
or
jnp
sbb
adc
sar
inc
cmp
fistpll
jns
movsl
push
mov
repnz
add
lods
mov
inc
adc
and
cmpsl
fs
and
mov
push
aas
rolb
inc
rcrb
sti
add
test
or
pop
nop
mov
sahf
add
push
sbb
mov
mov
mov
or
mov
loope
jno
or
call
jno
mov
hlt
lods
jae
sub
fistl
xor
sub
push
jmp
aad
adc
xchg
test
fs
push
dec
inc
inc
les
inc
bound
lcall
xor
nop
cmp
mov
jmp
dec
cmpl
cltd
sbb
pushf
xor
mov
xor
xchg
pop
ds
mov
shrl
and
add
fwait
jne
cltd
sarl
mov
sub
pop
imul
mov
insl
shlb
out
xchg
imul
pop
leave
je
stc
sub
dec
pop
mov
dec
cmpsb
jbe
jbe
mov
xchg
je
or
fmul
ss
push
lret
dec
test
jle
int3
jmp
pop
pop
pop
or
cwtl
inc
add
addl
inc
sub
mov
aad
mov
shr
lret
adc
sti
repz
jno
mov
mov
adc
iret
test
pop
or
xor
add
aam
inc
inc
hlt
xchg
call
andb
aad
mov
mull
jl
pusha
mov
outsl
scas
pop
push
imul
dec
or
sbb
jne
into
push
test
mov
lahf
push
xchg
dec
les
test
and
ficoms
jl
xchg
stos
dec
cmpsb
add
into
call
xchg
lods
mov
stos
mov
nop
and
push
sbb
mov
inc
jns
adc
gs
mov
pop
and
lods
dec
fbld
orl
xchg
xchg
sbb
stc
push
or
xchg
and
mov
inc
push
outsb
loop
push
jns
fs
xchg
pop
push
xor
push
inc
cld
push
dec
cli
fcompl
cli
mov
in
push
sti
jg
mov
outsb
push
cmpsb
mov
adc
dec
lcall
or
sub
pop
aam
shl
pop
test
subb
push
fsts
fiadds
hlt
pop
mov
adc
mov
dec
mov
mov
rol
mov
dec
lods
cmc
jl
mov
cli
xchg
mov
imul
lds
cld
pop
dec
lock
insl
cli
inc
sbb
sub
std
sbb
sub
xor
pcmpgtb
dec
cmp
mov
and
pusha
sbb
aam
stc
out
stos
pop
mov
mov
aad
notl
pop
mov
mov
sbb
sub
mov
add
and
push
fs
push
mov
xor
loopne
aam
mov
mov
jmp
mulb
enter
and
fs
test
call
out
in
cwtl
repnz
jp
or
mov
pop
inc
mov
mov
shll
lahf
dec
xchg
inc
pop
out
outsb
scas
pop
sub
sub
testl
mov
pop
mov
adc
or
xchg
enter
incb
and
cmp
sub
ss
fidivs
mov
mov
dec
push
xchg
in
mov
sub
inc
std
dec
and
xlat
rolb
pop
add
push
imul
rclb
pop
sbb
push
jecxz
aad
xchg
mov
sar
fcompl
push
cld
orb
xchg
jne
push
idiv
inc
jae
xor
flds
loop
pop
jo
push
cmpsb
push
xor
in
rol
je
int3
push
sahf
lods
pop
cmp
sti
stc
rcll
mov
iret
orl
mov
xchg
sahf
inc
dec
faddl
rcl
cmp
adc
dec
cltd
ss
pop
mov
andl
mov
ja
scas
xchg
add
ret
ja
mov
stos
out
inc
pop
jle
sub
add
lds
jnp
inc
imul
pushf
push
cwtl
xchg
incl
mov
mov
or
pop
ljmp
fwait
xor
xchg
mov
mov
ret
in
adc
addb
mov
lds
mov
lods
sbb
fldenv
ja
or
scas
xor
add
inc
fs
insl
xchg
dec
icebp
push
dec
mov
jp
test
dec
movsl
sub
inc
imul
add
in
cld
pop
and
sub
mov
jle
jae
cli
mov
mov
repnz
rol
jl
sti
in
sbb
cmp
xor
sub
imul
in
dec
hlt
fildll
pusha
inc
iret
fs
js
mov
mov
mov
push
ja
popf
repz
xor
xor
ja
pusha
push
inc
mov
mov
mov
mov
cld
xchg
add
xchg
add
je
mov
ficompl
test
and
lds
and
push
mov
adc
pop
and
and
aaa
sbb
in
mov
adc
dec
imul
data16
xchg
pop
dec
bswap
inc
jno
lods
xchg
out
sbb
inc
dec
or
xor
loope
fcomp
dec
ret
xor
lock
test
in
popa
shlb
test
js
out
movb
dec
imul
in
adc
lea
jmp
pop
push
xchg
and
add
pop
test
jno
xchg
push
lock
in
cltd
xor
shrb
pop
bound
fstpt
aaa
xorl
pop
pop
push
fnstsw
pop
imul
cmpsb
fidivs
jnp
lods
hlt
shll
ret
leavew
ja
inc
lds
pop
jecxz
xchg
loop
sbb
push
stc
inc
push
pusha
push
loope
in
inc
popa
das
rolb
int
rorb
sub
adc
mov
jns
test
sarb
jp
jb
les
jns
std
push
mov
and
bound
or
add
pop
mov
dec
sti
test
sub
sbb
idivl
in
jl
sbb
popf
es
or
jg
test
sub
movsb
into
hlt
inc
stc
imul
loop
add
mov
stos
lods
gs
push
pushf
add
and
jbe
int3
mov
outsl
mov
in
sub
xchg
jb
sub
and
lock
js
cmp
mov
or
xchg
sbb
and
outsl
inc
stos
lock
jnp
test
aam
ret
xchg
push
sub
fs
push
or
sub
das
or
mov
mov
aas
mov
adc
dec
pop
mov
and
fs
cmpsb
mov
ret
pop
call
jle
push
xor
in
aam
std
push
mov
cmpsl
jg
jno
out
fwait
sub
jae
test
repz
push
ja
das
sub
cmpsb
fs
not
popa
jecxz
and
pop
dec
jmp
adc
ficomps
sub
test
sbb
and
sub
das
rorb
jg
inc
fcoml
mov
dec
loop
jae
hlt
jb
rcll
cmp
add
pop
jo
jae
ljmp
imul
inc
jno
push
jmp
mov
lock
jecxz
loope
shl
push
push
push
test
adc
test
jae
popf
cmpsb
loopne
stos
fstpl
cs
mov
iret
sub
dec
out
dec
add
movsb
or
push
loop
cltd
in
pop
mov
add
mov
mov
and
or
push
sub
adc
inc
dec
pusha
push
cli
dec
jge
and
imul
ds
xor
out
sbb
push
adc
adc
sub
aas
inc
aas
xor
cmc
lret
or
jecxz
and
sbb
bound
repnz
fistps
mov
adc
push
jno
inc
sub
cmp
test
mov
pop
pop
cmp
xchg
pop
addr16
lock
xchg
leave
shrl
aas
or
mov
inc
das
pop
adc
int3
es
mov
inc
jbe
mov
push
and
xchg
inc
add
outsb
sbb
pop
test
lret
and
or
or
mov
int
cmp
popf
ret
inc
ljmp
daa
adc
xchg
push
lret
or
xchg
das
mov
int
rep
orl
loopne
test
inc
sub
clc
or
pop
mov
mov
sbb
outsl
test
std
adc
test
mov
mov
push
lahf
ss
xor
jg
insl
add
mov
call
sub
mov
and
cmp
xlat
movsl
sti
fucomi
cmp
xchg
or
and
inc
ja
inc
dec
and
or
or
mov
or
gs
push
inc
movsl
lahf
xor
lds
pop
push
pop
cmpsb
mov
inc
jae
cld
sbb
jno
arpl
imul
push
pavgw
mov
inc
cmp
popa
icebp
sbb
in
sti
pop
jns
cmc
sbb
pop
imul
lods
dec
jg
mov
adc
loopne,pn
out
lret
repz
push
mov
push
pop
or
lcall
add
mov
xlat
imul
std
sub
outsb
pop
pushf
fistl
dec
jne
mov
fistpl
sbb
mov
insl
xor
pop
jbe
scas
std
loopne
inc
push
test
mov
inc
xchg
sbb
xchg
jns
aad
gs
dec
jb
cs
push
pop
or
in
dec
das
adc
inc
shr
pop
idivb
gs
data16
xlat
rcrl
stos
jns
pop
inc
ret
jb
lds
or
push
mov
aaa
cmpb
xchg
js
push
lret
or
xchg
jl
out
or
leave
out
mov
xchg
enter
jne
ret
adc
cltd
popa
icebp
push
iret
icebp
push
push
cmp
and
jbe
push
arpl
movsl
jl
mov
add
adc
xchg
out
mov
jmp
dec
pop
cmp
dec
mov
push
sbb
scas
gs
jl
sub
andb
arpl
push
lods
arpl
mov
nop
dec
addl
sbb
sub
in
mov
pop
jb
pop
pop
int
test
and
je
movsl
pop
enter
xchg
cmp
imul
orb
cltd
dec
repz
push
pop
mov
inc
xchg
ja
jge
dec
sbb
repz
aad
or
insl
mov
arpl
inc
dec
mov
push
leave
cmp
pusha
rcll
dec
cmp
cmpsb
inc
fisubrs
ret
pop
xchg
lahf
out
enter
ret
into
sbbl
push
cltd
cmpsb
pop
pop
fstps
out
and
push
lock
scas
gs
cmp
aaa
sub
inc
in
mov
dec
pusha
cmp
dec
rolb
or
inc
movsb
rcrb
ror
mov
lcall
in
cmp
fimull
inc
lds
sub
lret
sbb
mov
mov
mov
je
sub
mov
lcall
imul
pop
in
out
pop
out
add
add
pop
mov
aam
adc
lock
adc
and
mov
mov
mov
imul
sub
int3
aad
es
rcr
enter
cmp
mov
adc
fcomps
add
lock
sbb
xchg
fadd
jbe
push
push
popf
lret
dec
fwait
cli
rclb
in
fwait
imul
pop
scas
and
sub
xor
push
cmpb
jecxz
jns
xchg
jb
sbb
cmp
pop
stc
int
inc
pop
mov
dec
inc
cli
cli
add
movsl
ljmp
scas
call
int3
mov
add
push
mov
dec
mov
test
pop
xor
inc
out
mov
fiadds
add
mov
mov
lods
mov
dec
mov
dec
ficompl
gs
jae
subb
fwait
imul
fs
add
dec
test
mov
cmp
mov
adc
fldenv
js
mov
insl
js
inc
xor
xor
or
ret
cmp
pop
std
add
push
push
stc
inc
push
decl
sub
cwtl
and
sbb
add
insl
mov
push
pop
jb
inc
jle
mov
jae
inc
out
or
movsl
fisubrs
int
in
xor
stos
cs
aad
mov
fcoms
push
popa
sbb
pop
pop
dec
push
lea
call
mov
and
shr
sbb
nop
xchg
mov
sti
adc
push
xor
dec
pop
mov
pop
clc
and
pusha
fsubrs
pop
lret
mov
mov
ficompl
or
push
sti
lcall
scas
adc
ret
shr
outsl
mov
adc
daa
divl
xchg
insl
pop
mov
adc
repz
add
lods
daa
and
jmp
sub
fimull
sbb
dec
cmp
mov
repz
pushf
sbb
shl
or
cmp
popf
adc
mov
testl
outsb
rclb
aas
add
mov
dec
sarb
es
clc
jp
mov
mov
in
or
fstps
cli
xchg
scas
insb
loop
and
insl
movsb
xor
aaa
sbb
out
ljmp
out
xor
stc
inc
jge
fwait
scas
dec
ficomps
pop
imul
outsb
popa
inc
sub
imul
add
fcompl
les
sub
ror
adc
fstpl
cmpsl
je
and
cltd
xchg
mov
clc
mov
xor
jne
xchg
xchg
inc
jae
stos
rcrl
data16
adc
sub
pop
jg
out
jmp
jecxz
mov
jl
mov
cli
out
clc
mov
and
mov
out
add
adc
insl
pop
xchg
jne
mov
add
pop
xor
or
aaa
and
mov
inc
gs
ret
and
out
les
aam
subl
in
jno
mov
push
jnp
cs
cld
jmp
sti
lods
popa
jae
sbb
push
or
mov
xchg
lahf
adc
xchg
jno
jo
inc
mov
cs
sbb
inc
sub
cmpsb
push
mov
jnp
jl
push
jmp
dec
jle
stos
cmp
test
in
jns
ffree
jns
out
xlat
push
addr16
push
jg
fs
or
inc
pop
xchg
mov
cmp
push
pop
shrl
inc
rcl
push
sub
mov
adc
jo
or
push
and
jbe
fcomp
insl
inc
lretw
mov
loope
loopne
call
data16
push
andl
pop
mov
dec
mov
mov
imul
mov
sub
inc
cmp
fst
mov
lods
dec
int
mov
addl
js
mov
jnp
sub
mov
push
mov
mov
push
int
das
scas
cmp
xchg
arpl
add
cmp
mov
outsb
ss
test
sbbb
mov
mov
lret
jo
repnz
les
mov
mov
sub
xor
outsl
mov
daa
mov
rol
pop
push
jge
pop
or
mov
rcrb
push
insb
xorl
aam
ja
lods
mov
shlb
add
pop
sahf
xor
xchg
adc
mov
pop
xchg
enter
out
xchg
dec
mov
cmp
hlt
in
jge
mov
call
insl
mov
arpl
rcrl
data16
mov
loop
pop
xor
pop
insl
data16
push
scas
xchg
adc
push
das
push
lods
mov
sub
lods
xchg
push
insb
xor
aad
or
xor
mov
mov
fisttps
adc
leave
ljmp
sbb
sahf
sbb
add
dec
adc
cmp
sti
cmp
and
xchg
add
mov
stc
repnz
daa
daa
inc
ss
test
mov
loop
lods
add
dec
dec
or
xlat
jo
les
sbb
movsb
add
xchg
mov
or
test
loop
repnz
and
stos
cwtl
imul
daa
int3
loop
lret
sub
imul
outsb
test
adcb
insb
imul
rcrb
dec
add
into
add
sahf
je
fistpl
and
aam
fistpl
pop
cmpsl
push
call
inc
mov
jae
movl
mov
outsb
test
ljmp
cltd
pop
xchg
mov
jp
mov
in
adc
jo
add
xcrypt-cbc
cmpsl
adc
fisttpl
add
dec
notb
lods
pop
sbb
and
sub
repz
inc
gs
inc
hlt
mov
inc
adc
insb
xor
in
sti
sub
repnz
idivl
into
mov
jl
pop
dec
push
repz
sbb
dec
lret
cmp
jnp
pop
or
in
lcall
jns
adc
push
adc
int
inc
adc
pop
jg
lea
sbbb
add
in
push
lds
xorl
test
pop
std
imul
sub
dec
js
xchg
add
jp
mov
add
cmpsb
dec
pop
sahf
neg
dec
mov
xor
out
mov
cmp
mov
pop
and
xchg
shrb
hlt
icebp
mov
mov
cli
aad
xchg
mov
xor
mov
inc
ja,pt
call
jmp
cli
mov
push
inc
gs
stc
push
jp
sub
jae
and
ret
not
sbb
lcall
fdivrl
nop
push
mov
cmp
jecxz
mov
xor
adc
xor
fsubs
dec
xor
mov
inc
mov
into
inc
add
mov
add
insb
mov
popa
test
and
aas
inc
out
xor
das
xorb
aam
mov
cltd
pop
fmull
bound
imul
push
inc
or
test
and
jl
sub
popl
mov
sbb
mov
popa
pushf
outsl
sysenter
pushl
pop
aad
sbb
pop
pusha
dec
jmp
popa
ficomps
mov
sbb
adc
xor
pop
pop
bound
sbb
jmp
sti
mov
lods
andb
push
xchg
ljmp
out
xor
inc
movsb
xchg
xchg
mov
and
insl
loope
shl
dec
push
mov
and
sahf
sbb
xor
lock
sti
and
outsb
or
movsb
rolb
pushf
shll
mov
jl
inc
clc
aam
outsb
mov
arpl
jge
push
push
scas
popf
cmp
adc
mov
lods
or
cmp
iret
jge
inc
push
jmp
rolb
mov
daa
scas
push
jo
fwait
mov
pop
xchg
mov
inc
daa
cmp
and
aas
jbe,pn
lea
and
jle
test
dec
ficoms
stos
mov
cs
add
push
das
cmp
aam
or
loope
cmp
push
test
xor
andps
or
test
mov
xor
and
andb
roll
cmp
cmp
add
shll
pop
jge
cmp
mov
add
ss
int
les
enter
insb
adc
xor
or
or
dec
cmp
icebp
push
pop
lret
push
inc
stos
push
lret
add
stos
popa
fcmovbe
adc
sbb
sbb
cli
bound
add
or
or
pop
add
xor
mov
popf
fadd
hlt
push
lods
fcompl
jo
dec
mov
rorl
or
mov
add
fstpt
xor
or
scas
xchg
and
daa
cs
mov
push
cmp
movsl
je
dec
pop
and
sahf
cmpsb
jae
lods
test
out
adc
lods
pop
bound
jge
stos
jae
lret
mov
repnz
scas
sbb
cmc
pop
dec
xor
cld
push
jmp
pop
and
sub
outsb
mov
pop
push
cmp
pop
pop
xchg
enter
pop
cwtl
sbb
cmp
imulb
addr16
addb
movaps
sbb
pop
sub
adc
lahf
repnz
aad
sbb
nop
fucomi
jbe
and
sbb
inc
mov
insl
mov
sahf
cmp
test
jne,pn
jmp
adc
push
inc
repnz
in
jae
jnp
movsb
test
repnz
cltd
popf
ret
je
sbb
push
push
and
dec
pop
loop
aam
or
push
stos
cli
clc
lahf
and
ja
jnp
push
stos
dec
xchg
pop
sub
jg
cmp
add
xchg
imul
dec
mov
push
push
test
xlat
sbb
outsb
and
lods
icebp
or
fdivrp
in
scas
push
sub
popa
mov
add
pop
jae
fdivs
call
popa
int3
jl
and
int
sub
xchg
mov
insb
rcl
insl
addr16
test
inc
jmp
inc
sbb
mov
into
pop
mov
and
mov
out
cwtl
hlt
aas
mov
sub
lret
fdivrs
pop
inc
fnstenv
insl
inc
push
xor
mov
mov
sbb
jmp
mov
dec
xchg
cmpsl
loope,pn
in
divl
lods
push
fsts
adc
xlat
fidivrl
xchg
mov
add
jge
repnz
adc
sub
add
icebp
sahf
pop
push
fisttps
out
addr16
pop
mov
sahf
repz
lock
insl
aaa
xchg
aas
imul
out
and
sbb
arpl
adc
test
mov
and
lret
aaa
xor
add
jo
call
mul
mov
call
mov
push
push
mov
jnp
jle
fdivrs
stc
shl
mov
add
repz
ret
mov
adc
sbb
aas
insl
add
sahf
or
dec
jno
mov
sub
ja
xchg
shlb
repz
leave
xchg
scas
push
les
inc
call
pop
test
inc
mov
adc
mov
ret
repz
sahf
mov
lods
adc
and
mov
fiaddl
data16
lods
and
sti
mov
data16
fwait
mov
stos
mov
es
aaa
orl
scas
inc
or
repz
mov
fcomps
jns
xchg
cs
cs
mov
and
pop
sahf
pop
fsubrs
sbb
add
pop
in
pop
jmp
add
gs
inc
mov
int
xor
test
push
dec
leave
sbb
cmpb
dec
out
js
imul
mov
gs
adc
arpl
push
and
pushf
and
aam
cmp
mov
sahf
mov
add
loope
sub
sub
add
rcl
push
gs
pop
inc
aad
fisubl
lahf
adc
push
mov
daa
bound
ret
pusha
test
out
push
add
pushf
mov
or
je
fbstp
pop
and
mov
xchg
xchg
test
nop
repnz
xchg
test
xchg
jnp
mov
jg
push
xlat
pop
lods
adc
mov
jg
in
push
insb
cmp
add
bound
test
jge
jns
xor
xchg
lea
out
mov
and
and
bound
add
adcl
jge
scas
mov
aaa
pop
jae
mov
inc
jns
xchg
data16
popf
pop
scas
xchg
idivb
stc
ljmp
jne
dec
inc
or
cld
popw
shll
push
inc
cmc
cmpsb
push
popl
dec
mov
xlat
lock
add
push
stos
mov
adc
hlt
inc
bound
xchg
push
inc
pusha
dec
adc
sub
inc
or
stos
jb
sub
mov
and
pop
enter
ljmp
shrb
dec
push
inc
rol
push
shll
push
dec
fidivrs
mov
sbb
xchg
inc
lock
or
jno
into
xlat
mov
sub
mov
ljmp
lret
andb
imul
xchg
jmp
test
xchg
jae
fldenv
pop
sahf
jbe
popa
ljmp
daa
outsb
scas
pop
xor
out
push
cli
mov
add
ljmp
movsb
lods
aas
mov
repz
pop
clc
jle
orb
mov
cmp
cmp
mov
mov
fisttpl
or
or
cwtl
sub
sub
sub
xlat
bound
or
or
pop
loop
xchg
sub
push
ja
adc
fs
jg
es
sbb
mov
jmp
in
fldcw
mov
mov
ds
pop
fs
jns
cmp
stos
sub
xlat
adc
mov
xchg
xchg
inc
into
push
icebp
leave
imul
icebp
and
adc
dec
data16
movsb
xchg
push
cmp
xlat
sti
or
data16
pop
shr
test
pop
outsb
mov
cmp
jmp
ret
popf
jo
jb
xchg
inc
lods
call
pop
lcall
fstpl
mov
into
lock
sub
dec
add
inc
aas
push
xlat
adc
mov
or
fildll
mov
cmp
fistps
pop
neg
mov
addr16
mov
pop
xor
xorb
mov
cld
fnsave
mov
jp
sbb
mov
xchg
fsub
inc
sarb
xchg
fs
stos
rcll
aas
or
aad
push
mov
jp
imul
lret
mov
lahf
pop
sbb
pop
pop
sti
incb
rcrl
sub
jle
fiaddl
ja
ds
clc
out
icebp
sub
je
xchg
mov
mov
ror
mov
mov
adc
test
pop
lock
cwtl
pop
push
mov
pop
sbb
fisubrs
ja
repz
and
icebp
nop
icebp
or
jg
or
popl
cmp
movsb
mov
lahf
mov
cmp
adc
xor
jg
inc
push
jmp
fwait
test
fwait
bound
leave
aaa
push
adc
insl
insl
push
mov
adcl
out
jb
popa
rorb
loop
pop
cld
fwait
xor
push
loope
add
adc
cltd
out
or
outsl
filds
pop
xor
mov
repnz
xchg
xchg
sbb
mov
add
xchg
dec
stc
cmp
xorl
ljmp
mov
shlb
inc
pusha
jbe
cld
or
popl
push
ret
popa
and
jge
sbb
jno
mov
or
loope
in
push
scas
ret
dec
popa
fwait
pop
cmp
xor
icebp
mov
jns
jne
mov
inc
mov
push
jb
mov
lret
mov
mov
aaa
add
rol
enter
mov
arpl
xor
test
xorl
jb
cmpb
xchg
xchg
fildll
xchg
jg
loop
inc
xor
mov
mov
sbb
je
mov
das
fadd
imul
in
dec
push
add
cltd
fsubl
ficoms
or
sub
jecxz
lods
into
and
sarb
jecxz
test
mov
stc
adc
shll
sub
inc
ret
mov
inc
xchg
inc
push
sbbb
push
or
dec
fs
ret
ljmp
jmp
and
mov
mov
pop
sub
movsb
lea
lret
xor
inc
mov
out
or
fcmove
test
mov
sub
sbb
sahf
xor
stos
and
imul
faddl
stc
gs
insb
call
fsubrl
xchg
fwait
add
jbe
add
fdivp
lods
cmp
arpl
pop
cs
mov
sbb
fwait
xor
jb
cmp
adc
fisttps
adc
fistps
aas
lret
pop
repnz
lock
mov
mov
push
inc
fwait
jg
pop
into
add
xor
push
lods
jbe
add
fldpi
xchg
addr16
sbb
test
sarl
xor
jae
mov
inc
push
cld
out
jecxz
test
shll
cmp
and
xchg
pop
and
hlt
into
mov
faddl
adc
xor
xchg
in
and
dec
adc
pop
push
repnz
mov
mov
jae
pop
inc
inc
inc
in
sbb
popf
cmp
push
push
call
mov
pop
jnp
call
cli
pop
lret
addr16
fdivp
mov
mov
jge
aas
xor
pop
jge
inc
cmp
pop
cltd
lods
test
and
xor
inc
pop
cmpb
les
mov
testb
sub
adc
rorl
pop
pop
sbb
shl
mov
push
inc
test
jbe
dec
adc
inc
les
bound
icebp
mov
xor
cmp
cmp
fwait
je
mov
addr16
bound
or
iret
clc
lds
mov
movsl
pop
jl
fstp
ds
lret
daa
fdivr
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
pop
mov
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
test
pop
add
add
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
rorb
add
add
add
add
and
add
adc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
lret
ja
lret
lods
fnstcw
pop
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
push
movb
xor
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
push
mov
inc
pop
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
movl
movl
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
movl
movl
lea
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
mov
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jb
mov
mov
mov
add
cmp
jae
sub
add
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
pushl
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
lea
add
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
mov
add
mov
mov
xor
add
mov
push
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
push
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
xor
add
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
mov
mov
add
mov
mov
mov
add
andl
mov
mov
mov
mov
mov
mov
lea
mov
xor
mov
add
incl
cmpl
mov
jb
movl
movl
movl
movl
movl
movw
movb
xor
lea
mov
xor
sub
inc
mov
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
movzwl
movzwl
mov
xor
mov
xor
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
jmp
mov
xor
mov
lea
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
sub
xor
cmp
jne
xor
jmp
xor
inc
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
push
push
movl
movl
xor
inc
je
mov
xor
add
cmp
jne
jmp
mov
xor
add
mov
sub
mov
mov
xor
add
mov
add
mov
jmp
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
pushl
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
push
pushl
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
add
push
lea
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
mov
popa
test
cmc
aaa
push
shrb
js
cmpsb
sarb
add
hlt
add
add
fwait
push
rcrl
outsb
das
movsb
fs
outsl
add
in
cli
jmp
inc
js
repnz
push
mov
mov
lcall
mov
out
lcall
mov
and
pop
lods
test
pop
pop
insb
sbb
push
xchg
lret
cmp
lea
ret
arpl
sbb
mov
fs
or
in
jle
hlt
es
sub
or
or
xor
or
out
lods
xchg
push
into
jne
mov
jne
pop
lods
inc
cltd
mov
shrb
hlt
mov
ja
sub
and
jp
lds
andl
mov
sub
xchg
mov
dec
std
jl
dec
int3
push
out
dec
fadd
cmpl
cli
shl
gs
add
sbb
cmp
mov
in
bound
cs
dec
dec
cmp
inc
and
sahf
cmp
popf
sarb
inc
in
cli
or
int3
in
jns
mov
mov
jge
ljmp
cmp
inc
pop
daa
cltd
lds
and
pop
fucomi
dec
sub
adc
sbb
movsl
mov
push
sbb
sbb
psrad
lods
pop
jno
and
fidivrl
inc
fcmovb
mov
or
push
add
cmpl
cmpb
ja
push
push
add
inc
mov
xchg
xchg
pop
pop
xor
sub
inc
and
and
faddl
sbb
mov
pushf
incl
in
cwtl
xor
push
mov
sub
pop
test
movsl
or
repnz
mov
aam
aam
xchg
aad
aad
mov
xchg
sub
pop
jg
jo
dec
dec
or
push
popl
xor
jmp
pop
ret
jp
sub
lea
subl
cmc
fsts
inc
mov
inc
rcr
sub
ss
loop
or
sub
ds
pop
mov
xchg
lahf
sub
mov
add
adc
jmp
pushf
jp
dec
stos
sbb
insl
or
push
or
mov
cmpsl
dec
cmc
adc
xchg
sub
push
push
loop
mov
mov
jle
pop
push
mov
test
push
imul
jbe
fistpll
fimull
cmp
xor
or
mov
mov
fdivrl
daa
pop
and
or
popa
loope
pop
cmpsb
cmp
loope
or
scas
test
or
movsl
popa
ret
je
subl
adc
nop
cmp
mov
dec
shll
dec
sahf
cmp
inc
fs
test
fimull
repnz
inc
jg
sbb
sbb
mov
and
adc
out
insb
aam
mov
clc
sahf
inc
sbb
repnz
dec
and
adc
mov
fs
mov
repz
adc
shl
repz
imul
outsb
cmp
lea
push
jne
or
scas
jbe
cmp
das
fiadds
jnp
in
inc
jbe
lahf
mov
cmp
enter
cltd
insl
push
and
sbb
sub
aad
cs
and
inc
roll
in
mov
in
loop
in
lahf
insl
lcall
outsb
cltd
stc
sub
xlat
xchg
fisttps
pop
or
imul
dec
cmpsl
out
cmc
mov
fwait
inc
adc
out
mov
inc
push
imul
cmp
jne
push
pushf
imul
sbb
js
add
pushf
sub
sbb
sbbb
mov
lock
into
clc
stos
mov
jnp
sbb
call
lods
cmp
or
int
cwtl
daa
sbbb
adc
imul
cmp
dec
or
cli
jns
push
push
mov
mov
cld
stos
xchg
repnz
divb
std
clc
jl
ja
jb
fnstenv
pushf
ret
mov
xchg
sub
mov
fmuls
jge
sti
pop
test
xadd
iret
jnp
addr16
xchg
pushf
insb
and
cmp
cmp
mov
cmovns
mov
cmpsb
jl
adc
jle
out
xor
mov
cmc
mov
mov
test
dec
loope
leave
addb
xchg
xchg
cld
daa
inc
mov
repnz
sti
cmpsl
adc
dec
dec
scas
js
mov
dec
add
adc
xor
sbb
add
push
sbbb
fistpl
ss
shrb
add
hlt
add
add
cmp
es
mov
and
mov
data16
cmpsb
push
jbe
aad
cmp
hlt
popl
ffreep
inc
cmp
in
cmpsb
pop
mov
jge
imul
mov
sbb
gs
aaa
sub
out
sbb
xor
mov
dec
adc
or
mov
jbe
movsl
stc
pushf
xchg
aad
sub
xor
outsb
mov
pop
mov
enter
cwtl
adc
popf
or
push
lcall
inc
inc
mov
sub
jns
push
orl
icebp
addl
inc
or
push
std
int
cmp
dec
test
sar
fsin
addl
insl
jg
daa
cmp
int3
sub
xor
sbb
movsl
popf
jbe
mov
cmp
insl
ljmp
adc
sahf
or
test
sbb
sar
push
xor
lock
clc
inc
adc
es
jg
adc
or
mov
push
shl
pushf
inc
and
mov
hlt
jns
test
adc
pop
out
and
test
ja
aaa
and
inc
sarb
pusha
adc
lea
aas
ret
dec
xchg
or
jno
mov
das
out
add
sbb
enter
rorb
sbb
int3
test
push
mov
add
pop
and
in
loopne
mov
adc
dec
fistpl
xchg
loop
imul
mov
pop
icebp
sbbb
scas
add
jp
mov
ficoms
mov
neg
mov
ja
into
cmp
dec
inc
push
int3
sahf
shlb
sub
test
lods
mov
mov
mov
dec
rcrl
pop
mov
data16
mov
or
mov
mov
in
dec
xor
inc
in
jp
push
add
out
jae
into
push
cmc
pop
xor
sub
ds
repnz
pop
mov
jecxz
mov
shll
aad
adc
lods
pop
popa
jno
rol
incb
jo
jbe
ret
fwait
iret
repz
scas
mov
aaa
jns
sub
pop
pop
stos
out
push
movsb
sbbl
mov
adc
into
pop
lahf
pop
daa
push
subb
add
inc
and
dec
xchg
pop
jl
iret
lret
mov
cmp
les
mov
js
daa
in
jl
push
scas
stc
repnz
ret
cltd
and
xchg
lret
pop
aas
test
sub
cmp
push
cmp
and
adc
nop
or
mov
cmp
mov
jbe
inc
aas
lahf
push
sbb
pop
mov
imul
js
pop
sbb
or
inc
ljmp
jo
wbinvd
jge
cltd
imul
push
and
gs
aaa
mov
xlat
pop
mov
xchg
cmp
imul
call
mov
push
adc
out
into
dec
rol
pop
js
enter
mov
test
adc
pop
push
pop
sbb
xorb
cmovbe
inc
fs
into
xor
add
pop
add
xor
pusha
in
outsb
inc
pop
lahf
and
adc
test
push
mov
push
adc
cld
je
or
push
sub
enter
nop
cmp
cmp
pop
jg
mov
out
mov
xchg
or
mov
mulb
iret
int
pop
and
mov
cmp
enter
cmp
mov
andl
dec
repz
jecxz
cs
xlat
stos
aaa
dec
fcmovbe
clc
es
lods
jge
ret
sbb
pop
mov
dec
enter
sub
push
das
fisubl
jg
lods
in
pop
adc
fnstsw
jmp
iret
adc
dec
divb
lret
out
mov
push
push
cmp
lahf
repnz
cmp
insb
lods
or
int
dec
cmc
sbbb
sub
pop
shlb
jge
call
xchg
push
mov
movsb
jmp
iret
lret
shr
dec
cmc
jmp
out
test
sahf
dec
call
cmc
mov
jns
ret
xor
scas
fcmove
imul
loopne
arpl
ds
test
cs
xor
data16
fnsave
push
and
loop
ds
test
lcall
test
loope
inc
add
add
xchg
jle
fbld
xlat
divl
repnz
in
sub
inc
xchg
or
cmp
repz
ljmp
cmovns
xor
fiaddl
or
loope
les
add
add
cmp
cmpsb
jg
mov
jae
inc
jp
popa
fiadds
add
add
add
cmpsb
repnz
test
add
insl
xchg
push
or
ret
push
and
sbb
jg
insb
xchg
push
mov
add
mov
dec
push
and
arpl
sbb
mov
std
mov
sbbl
hlt
lret
mov
ljmp
leave
mov
mov
sbb
push
lahf
addr16
inc
pop
sbbb
fsubrl
xchg
fdivrl
nop
inc
mov
sti
pop
in
out
shll
dec
push
loopne
push
inc
sub
imul
lcall
std
mov
adc
pop
cs
fs
aaa
mov
ljmp
and
or
jge
adcl
rorb
stc
sti
aad
es
mov
dec
into
xchg
add
add
mov
sbb
pop
add
jne
push
imul
or
iret
pop
dec
or
sbb
icebp
and
xlat
test
jmp
xchg
or
jl
jl
mov
clc
lret
lock
sub
and
stc
movsb
mov
pop
lods
inc
sar
pop
cmp
pop
jl
mov
addr16
xor
pop
pop
jecxz
sub
xor
and
in
and
mov
nop
clc
or
les
pop
sbb
jecxz
xchg
xlat
rclb
stc
out
inc
rcrl
shll
loope
loope
shr
lcall
mov
push
add
test
fimull
fiaddl
call
cmpsb
lcall
cmp
stc
inc
es
clc
jl
testl
ja
mov
ljmp
push
mov
dec
sar
sbb
ljmp
xor
xchg
pop
ss
inc
aaa
cmp
xor
shll
mov
push
pusha
jp
andl
popf
ret
movsb
inc
mov
push
add
jmp
jp
xchg
xor
into
test
or
dec
cmc
loopne
push
je
movsb
nop
cmp
jl
xchg
cmp
outsl
repz
or
dec
out
sbb
mov
lahf
pop
out
add
stc
inc
addr16
push
int3
jno
int
pop
dec
jg
dec
mov
inc
adc
fs
adc
test
push
loop
sub
and
addr16
push
outsl
pop
arpl
adc
or
fdivl
and
mov
xchg
sbb
popa
sbb
or
aas
idivb
loop
outsl
fsubrl
jl
call
xchg
pop
or
push
aaa
jecxz
repnz
jg
adc
orb
sbb
test
mov
test
leave
xor
cmp
movb
push
xlat
int
ljmp
pop
mov
ret
dec
fists
add
cs
inc
cmpsb
sbb
dec
sbb
pop
imul
xchg
cmp
pop
dec
sub
sub
jne
test
sbbb
ficompl
jbe
adc
outsl
rorl
xchg
xchg
pop
push
mov
insb
lret
movsl
add
pop
subl
push
neg
sub
movsl
rcr
dec
and
jecxz
sbbb
aas
in
daa
outsl
lods
mov
clc
dec
lds
push
xchg
fsubs
ffree
out
xor
cs
mov
int3
pop
inc
inc
in
jle
sti
inc
fiaddl
fnstsw
xchg
dec
call
push
idivb
sbb
sub
jge
dec
jnp
add
mov
cwtl
jno
mov
mov
and
and
jne
out
lret
xchg
mov
test
jbe
jle
clc
pop
dec
push
in
xchg
jb
repz
lods
dec
push
mov
pop
xchg
lcall
inc
shll
aad
daa
push
pop
xchg
pop
mov
fucomp
outsb
leave
arpl
xchg
pop
cld
loopne
out
mov
into
fs
jle
cs
sbb
mov
or
or
aas
xchg
out
aam
in
hlt
cmpsl
mov
popf
and
in
mov
adc
xchg
jecxz
cmpsl
nop
pop
push
lahf
in
and
dec
sub
mov
sbb
mov
test
arpl
sbb
imul
adc
into
inc
pop
xor
jg
mov
or
fidivs
or
adc
test
stos
mov
and
sahf
pusha
mov
mov
push
push
cmp
fdivp
gs
into
xchg
pminub
and
shrl
int
ret
add
clc
pminsw
idiv
repz
lret
test
add
hlt
add
add
jmp
les
mov
cmc
cmpsl
jnp
pop
xor
fildl
jle
and
rorb
test
adc
out
mov
sub
cmc
in
jecxz
not
fucomi
pushf
adc
dec
andb
sbb
xor
jns
pusha
adc
test
jb
lret
orb
loopne
xor
sbb
mov
pop
stos
js
inc
jae
loop
mov
mov
mov
push
dec
hlt
push
fcoml
shl
dec
or
shrb
and
mov
fsubrs
pop
cmp
or
ss
fdivrl
push
adc
hlt
pop
test
ficomps
jb
stos
xchg
sub
frstor
sbb
cmpl
insb
jg
push
jbe
and
cmpsb
mov
imul
fimull
push
dec
frstor
fs
pop
jl
dec
mov
xchg
xor
fsubl
pop
test
pop
jb
adc
ja
icebp
fnstcw
sub
aas
fdivp
inc
inc
sbb
or
ljmp
imul
push
hlt
and
ret
lret
shll
or
xor
idivl
fisubrs
pop
stc
gs
arpl
pop
and
stos
lret
out
lods
pop
adc
scas
xchg
sbb
sub
mov
rcrb
mov
push
popf
repz
pop
aas
add
jnp
or
mov
inc
popf
loopne
lds
leave
sub
mov
xchg
push
into
add
fcmovb
sti
push
inc
push
inc
or
shlb
movsb
cmpsb
pop
inc
arpl
jbe
pop
xor
fs
decb
pop
jnp
dec
xor
cmp
xchg
sbb
divb
movsl
int3
lahf
fwait
inc
sbb
scas
loope
and
mov
clc
lret
push
xchg
adc
dec
outsl
lds
into
sar
lea
mov
into
popa
sub
lret
pop
mov
in
mov
popa
into
outsb
cmp
jae
inc
in
idivb
mov
push
fmulp
cmpsl
add
push
pop
inc
daa
sub
hlt
mov
mov
mov
pusha
popf
ds
fnstsw
inc
pop
jns
ja
pop
divb
outsb
sbb
xchg
insb
jnp
pop
xchg
push
mov
pop
push
push
addr16
jo
repnz
mov
jnp
lds
shl
cltd
xor
ja
mov
lds
fisttps
loop
lea
mov
jae
push
push
incl
inc
loope
imul
or
btc
mov
mov
mov
pop
inc
sahf
das
mov
and
and
fisttpll
add
rorl
imul
sar
add
out
aaa
iret
sti
out
cmp
cwtl
push
lret
loop
or
mov
loope
xorb
sub
xchg
and
add
dec
cmp
inc
adc
imul
adc
push
push
inc
das
mov
arpl
and
adc
fisubs
popf
push
nop
or
and
hlt
sub
add
add
out
loope
loopne
adc
adc
fbstp
pop
adc
insb
stos
ss
imul
inc
xchg
sub
mov
hlt
in
inc
in
out
aad
sbb
sbb
loope
dec
xchg
and
jb
das
pop
adc
repnz
jg
pop
ds
popf
jae
mov
push
push
xor
sub
cmp
mov
stos
mov
adc
add
pusha
or
int
sub
test
icebp
mov
cmp
mov
sub
xchg
push
into
xchg
and
popf
mov
inc
jae
fnstsw
push
xchg
gs
mov
mov
loope
mov
orb
pop
inc
popa
ja,pt
jp
pop
and
stc
icebp
mov
lock
iret
xchg
xchg
pop
and
cs
pushf
gs
into
hlt
outsl
add
adc
adc
mov
inc
std
ret
fsubrs
jle
call
out
jecxz
cmpsl
negl
out
mov
jg
xchg
fstl
cmp
and
pushf
insb
rorl
loop
insl
mov
je
mov
mov
or
and
mov
test
loopne
sub
aad
jecxz
subl
dec
ss
jmp
fwait
jle
mov
ret
adc
pop
int3
add
mov
mov
pop
iret
fidivrs
xchg
inc
cmp
repnz
movsl
jns
xchg
sbb
mov
bound
loopne
inc
dec
shrb
sub
mov
mov
sbb
add
add
xchg
lret
jnp
sarl
push
int
dec
call
add
enter
inc
pop
mov
ja
jb
es
lods
scas
jmp
xchg
insl
lret
in
lock
ficoms
mov
jle
jae
push
std
jo
mov
adc
jecxz
imul
sahf
add
dec
xorb
cmpb
mov
push
dec
testb
inc
mov
or
jmp
jnp
xor
sbb
push
xchg
imul
pusha
xor
mov
mov
rcrl
test
insb
pusha
mov
xchg
ret
xor
mov
pop
scas
mov
popf
je
jle
push
test
mov
cmp
bound
fadd
xor
in
fsubrs
dec
cmp
loope
mov
pop
mov
or
jns
inc
xchg
pop
sbb
push
cmpsb
fnstcw
dec
mov
xchg
shll
repnz
outsb
stos
adc
cmp
mov
data16
or
outsl
ret
push
xchg
dec
insb
xchg
sahf
scas
in
pop
adc
inc
icebp
test
cmpl
cli
addr16
push
fsub
and
shr
subb
je
push
mov
pop
jmp
jl
inc
xchg
xchg
int
xor
jge
out
ret
out
call
mov
ret
cmpsb
push
cltd
std
ret
addb
cmpsb
imul
fidivrs
add
test
je
hlt
hlt
and
and
shlb
jns
popl
roll
data16
pop
push
nop
mov
testl
sbb
xor
sbb
lods
scas
lahf
jp
push
add
ret
add
mov
imul
cmp
jnp
stc
mov
xor
out
ret
in
sbb
push
sub
test
aas
xchg
cld
adc
pop
idivl
loope
push
addr16
js
dec
call
bound
fadds
imul
fs
stc
pop
mov
pop
sub
iret
fcmovb
add
adc
inc
sahf
lds
cmp
fdivs
dec
rorb
repnz
fwait
or
ret
sti
addb
into
dec
push
sbb
inc
nop
addr16
sub
push
les
mov
mov
dec
mov
and
cwtl
pusha
imul
aas
xchg
lahf
mov
jle
scas
aas
cwtl
push
pop
pop
jno
add
mov
subb
fistps
mov
pop
mov
jp
outsl
hlt
ret
iret
into
fisubrs
inc
xchg
mov
push
in
pop
push
repz
repnz
sysexit
ds
lret
and
jle
xchg
cmp
adc
repz
int
xchg
jae
insl
dec
lods
adc
popf
xchg
insb
cs
jne
or
and
popf
pop
mov
pop
lcall
jno
xor
xor
test
jae
imul
pop
sub
pop
add
xlat
orb
jne
loop
dec
lock
push
xor
mov
in
cmp
sbb
hlt
cmp
in
cmpsl
imul
and
inc
mov
push
inc
int3
hlt
cltd
jp
xchg
mov
dec
scas
cs
sub
xor
inc
fstl
jnp
test
js
cmp
in
es
fwait
cltd
clc
je
roll
ss
les
push
xor
ljmp
movsb
and
cld
jecxz
push
cmp
pop
dec
sbb
stos
insl
and
arpl
loopne
cmc
xchg
or
xchg
ds
xchg
adc
dec
test
movsl
inc
cmp
pop
mov
jb
cmc
adc
lds
into
es
or
dec
sbb
mov
int3
push
xor
lock
pop
mov
lods
adc
mov
mov
jae
test
dec
and
jge
inc
xor
add
jmp
ljmp
jecxz
mov
outsl
lret
bound
mov
mov
pop
out
cltd
aad
and
enter
cmp
push
jg
mov
mov
mov
dec
arpl
scas
lret
xchg
xorb
dec
pop
stos
lock
test
jns
sub
sub
sub
sbbl
add
lea
repz
inc
stc
rorb
sar
mov
lret
adc
cmp
add
adc
scas
push
sub
sub
mov
jne
sar
mov
sbb
outsb
out
iret
jecxz
pop
or
mov
insb
sbb
sub
ja
xor
add
pushf
dec
and
add
add
push
sub
test
adc
and
add
add
add
adc
jmp
pop
test
loop
outsl
xor
shl
into
inc
sub
cmc
js
sbb
or
and
out
jbe
shr
ret
lret
aaa
bswap
push
xchg
je
xor
mov
movsb
lret
shll
out
push
fimull
in
mov
fidivrl
mov
popa
mov
loope
sbb
stos
adc
adc
outsl
lahf
movntps
pop
stos
or
mov
or
jae
negb
mov
pop
pop
movsl
or
mov
mov
ret
inc
mov
aam
xchg
out
fisubrs
push
stos
arpl
sub
mov
or
les
ret
xchg
lock
cmpsl
cmpsb
insl
lret
push
push
mov
mov
push
mov
adcl
lock
ljmp
inc
or
cmp
push
clc
fxch
stc
xor
mov
push
mov
sarl
lds
adc
fwait
jle
lds
sbb
sbb
inc
adc
cmp
push
xor
out
insl
xor
xor
fisttpl
jnp
sarl
jnp
xchg
lods
and
mov
push
add
arpl
rolb
inc
out
ficoms
mov
mov
jp
inc
test
insb
jne
ja
mov
jnp
mov
sti
shr
ss
roll
movsb
nop
jnp
and
cwtl
xchg
and
jb
jo
andl
mov
or
fwait
or
xorl
and
mov
or
xor
mov
pop
dec
mov
mov
std
jecxz
jns
inc
jmp
dec
pushf
push
pop
cmp
jmp
iret
cmp
cmp
jge
arpl
loope
push
cmp
sar
out
inc
std
cli
icebp
jp
xor
sub
mov
stc
xor
nop
push
jle
int3
movsl
scas
sub
adc
mov
ds
jbe
arpl
jge
pop
fimuls
ljmp
mov
lahf
mov
cmc
sbb
dec
inc
loope
imul
push
xchg
inc
xor
je
push
jmp
sub
mov
cli
xchg
imul
les
xcrypt-ctr
cmpsl
pop
pop
jecxz
sbb
mov
pusha
fs
or
lret
and
popf
leave
aas
cmp
fldt
and
add
jecxz
mov
fsts
fnstenv
cmc
imul
and
enter
mov
jmp
lahf
pushf
es
push
cmc
add
int
fstps
pop
psubusb
lea
mov
xlat
xchg
pusha
jge
lods
adc
aam
inc
roll
andl
es
and
jge
scas
xor
fs
lds
lcall
mov
lret
xchg
lahf
and
imul
mov
xchg
and
pushl
sbb
jb
push
test
imul
cmp
fdivl
xchg
shrb
in
inc
popa
sub
test
mov
lods
inc
lret
hlt
jne
sbb
gs
aas
cmp
loop
fwait
daa
pop
movsb
lahf
inc
outsl
stos
addr16
test
imulb
xlat
mov
mov
mov
cltd
decl
lods
push
out
pop
fisubl
push
in
and
out
rol
adcb
dec
imul
inc
out
inc
sub
jbe
dec
lcall
or
jp
ds
fwait
dec
jne
dec
inc
xchg
out
sub
into
popa
arpl
adc
add
jo
add
lret
xchg
andnps
je
push
jp
push
push
mov
dec
adc
adc
sub
addb
stc
xor
inc
xchg
jno
lea
inc
test
popa
jae
mov
std
lcall
dec
inc
sbb
push
arpl
jp
js
popa
xchg
lea
aad
dec
in
dec
mov
fbstp
rcrb
jns
dec
fisubrl
sub
adc
inc
mov
push
push
inc
popf
lcall
jp
dec
xchg
in
mov
mov
dec
add
xor
enter
mov
call
repnz
mov
and
mov
xor
shl
xchg
gs
sub
mov
mov
lcall
xchg
pop
fimuls
orb
insl
popa
popa
xchg
add
add
fisttps
mov
adc
lret
cltd
jg
repnz
hlt
add
add
je
mov
ja
xor
adc
dec
out
lcall
mov
push
lods
xchg
subl
mov
adc
orl
pop
bnd
sbb
add
adc
xchg
cmpsl
pop
lods
push
add
push
sub
outsb
ss
insl
lods
lahf
subb
jp
mov
inc
iretw
jecxz
loope
outsb
xlat
scas
rorb
cli
mov
jbe
push
negl
mov
movsb
push
andl
in
rcr
in
ret
inc
cmove
and
sub
mov
add
add
daa
jp
loopne
inc
aad
or
cld
push
movsl
and
outsb
mov
mov
push
push
mov
std
xchg
arpl
imul
pop
mov
gs
repnz
pop
push
pop
pop
pop
mov
pop
sarb
ror
rcr
stc
fldenv
cmp
mov
inc
repz
outsb
scas
xchg
lods
pop
out
jb
xchg
xlat
pop
loopne
stc
sbb
pop
adc
test
movsb
fsubr
mov
hlt
pop
stc
and
cmpb
and
scas
adc
jne
gs
xor
cmc
add
mov
mov
outsb
push
push
mov
orl
lods
mov
aas
in
adc
sub
inc
shlb
jge
jae
mov
in
cmp
push
jmp
cmp
push
or
cld
mov
push
mov
pop
jmp
xchg
pop
inc
adc
sbb
pusha
xchg
lods
ficomps
cmpsl
cmp
stos
add
mov
enter
fwait
mov
jne
jp
add
cli
shrb
pop
addr16
aaa
cmpsl
int3
lret
adc
fldenv
je
in
aad
mul
mov
mov
ds
mov
fistpll
ficompl
scas
cmp
dec
inc
jecxz
push
sub
les
sti
jae
dec
adc
cmp
insb
push
mov
testl
mov
pushf
mov
inc
pop
out
xor
cmp
packsswb
in
mov
imull
or
ljmp
push
sub
adc
je
cmp
jge
dec
ret
push
mov
dec
sub
icebp
or
or
ss
std
out
pop
lret
push
pop
mov
subl
mov
cmp
out
cltd
jno
jmp
lret
jl
and
push
addr16
mov
int
inc
in
jmp
mov
add
out
cli
fistpl
push
ficoml
push
mov
and
inc
push
nop
dec
push
and
pop
out
dec
cmpsb
scas
fldcw
mov
mov
lods
xchg
jle
add
xchg
inc
into
mov
sbb
insl
int3
or
std
jne
adc
iret
jle
xchg
insb
xlat
fwait
es
in
repnz
lods
sti
bnd
in
fcoml
mov
xor
cmp
mov
insb
fsubs
sub
add
adc
mov
mov
xlat
fwait
push
xchg
imul
test
cmc
jmp
ret
lahf
les
out
hlt
sbb
mov
dec
push
lea
lret
xchg
sarl
cmp
movsl
mov
push
fwait
bound
cwtl
sti
arpl
mov
bound
and
mov
or
fsubp
loope
or
adc
int3
dec
idivl
adc
xorl
int
cmp
outsl
inc
or
mov
gs
push
test
enter
test
mov
frstor
mov
pop
dec
mov
inc
popa
jae
ret
jae
loope
pop
andl
mov
in
fists
repnz
dec
mov
mov
push
mov
ror
adc
js
cmp
daa
rcll
pop
out
xchg
add
jae
loop
addr16
pop
mov
mov
mov
or
push
stos
out
outsl
divb
loope
popa
push
or
out
fimull
orl
push
js
pop
js
loope
jg
in
dec
rorl
fisubrs
test
sbb
mov
shr
xchg
icebp
mov
test
pop
and
outsl
stos
movsb
xor
pusha
pop
fcoms
bound
and
cmp
cld
xchg
mov
or
mov
sub
mov
pop
repnz
dec
add
add
es
jno
cmc
divl
mov
pop
and
add
add
cltd
sbb
sub
mov
and
jnp
int
mov
outsb
mov
xchg
repz
aaa
push
pop
push
sarb
cltd
insl
cmpsl
xlat
pop
mov
xchg
adc
dec
sub
insb
dec
insb
sti
int3
in
nop
push
fadd
inc
rcl
or
adc
dec
push
ljmp
testb
push
nop
lret
jle
inc
scas
in
jae
mov
push
clc
hlt
jo
pop
stc
inc
das
repz
jecxz
mov
stos
ss
lcall
lock
repz
jle
iret
orb
int
jle
pop
push
pop
popw
in
leave
out
sub
loope
mov
dec
mov
mov
inc
jp
lret
jle
test
or
fadds
xchg
dec
push
cld
sub
in
pop
test
push
mov
sbb
xor
test
push
sub
xchg
or
ljmp
aaa
fwait
pop
mov
jo
or
mov
adcb
jmp
adc
lods
cmpb
fcom
mov
push
jbe
cwtl
pop
cmp
or
dec
pop
push
jo
loope
nop
mov
push
out
rcll
cmp
add
iret
pop
scas
inc
xchg
sbb
clc
xor
popa
dec
andb
lahf
sub
xchg
mov
add
jne
or
icebp
enter
nop
sub
test
repz
stos
push
popf
lock
cltd
jno
cmc
jb
or
inc
and
dec
jl
sti
negb
add
pop
dec
rorl
nop
fs
add
adc
inc
adc
mov
les
xchg
dec
imul
xor
stos
cs
push
xlat
sbb
pop
sbbb
nop
fisttps
dec
or
push
xorb
sbb
addl
mov
mov
enter
hlt
mov
jae
xchg
cmpsb
pushf
jne
add
push
dec
loope
scas
xor
push
mov
or
mov
xor
pop
mov
sub
mov
push
test
inc
out
les
call
push
mov
stos
cmp
jecxz
add
sub
jp
shll
loopne
int3
cmc
add
jg
sahf
dec
inc
imul
pop
int3
xchg
ficomps
out
push
cltd
dec
add
hlt
cmp
je
mov
into
cmp
fisubs
xor
cmpsb
pop
xor
cmp
roll
les
xchg
ret
cs
movsb
mov
push
stc
sub
rclb
icebp
clc
mov
lds
popf
jecxz
sbb
cmove
cmpsl
cwtl
in
lret
xor
mov
mov
lret
dec
fadds
jmp
sarl
daa
pop
movsb
cmp
daa
xchg
aam
sub
mov
sbb
adc
push
insb
cmp
movl
aas
fucomip
mov
xchg
clc
push
mov
hlt
dec
mov
push
je
sbbb
jb
sarl
cmpsb
and
enter
sub
rcrb
sbb
scas
stos
sbb
test
decb
or
leave
enter
call
inc
data16
pop
iret
pop
lret
xchg
mov
pusha
cmp
pop
xchg
gs
push
xchg
mov
dec
repnz
or
aam
mov
sbb
int
addb
lret
mov
add
xchg
cmp
add
add
ds
or
inc
push
orb
jle
daa
sub
xorl
in
sbb
jl
aad
or
shlb
jno
pop
inc
adc
jns
mov
test
jb
fcoml
pop
mov
out
and
xor
xchg
cli
sbb
mov
notb
add
mov
shlb
sub
jo
push
mov
out
xor
cmc
je
loop
aas
mov
mov
shlb
push
sbb
fildll
sbb
mov
mov
adc
pop
add
loope
and
push
dec
pusha
imul
sbb
mov
pop
xchg
push
dec
iret
lods
or
push
and
scas
cmp
or
inc
push
outsl
andb
mov
shrb
aas
pusha
repz
popa
pop
xchg
stos
inc
lods
mov
aad
aam
cwtl
scas
xor
sahf
jp
jg
lea
repz
int
movsb
insb
inc
es
dec
mov
pop
push
pop
adc
xchg
in
popl
xchg
leave
jns
adc
dec
inc
push
cmp
xchg
insb
testb
scas
mov
add
add
ret
inc
fisttps
lahf
int
push
invd
jp
or
cld
add
hlt
add
add
xor
sbb
sbb
jno
data16
fs
cmpsl
add
test
insb
insb
pop
or
or
fdiv
scas
call
mov
pushf
adc
inc
pop
int
sahf
jp
jb
pop
cs
subl
leave
lret
pop
sub
iret
xchg
shlb
pop
adc
push
dec
cmp
adcb
sub
sbb
push
scas
cmpsl
shl
mov
sub
add
sbb
mov
out
xor
imull
add
cmp
push
sti
xorl
pop
stos
xchg
cmp
push
jmp
dec
jb
movsl
xor
bound
test
fistpll
rcl
cmc
xor
fmulp
dec
lcall
decb
xchg
repnz
cmp
adc
enter
sub
mov
popf
pop
push
xchg
les
adc
inc
jl
out
jp
ficomps
test
pusha
popa
leave
mov
inc
sbb
jne
and
bound
or
and
test
test
mov
or
out
fs
mov
lods
loopne
jp
push
outsl
mov
add
hlt
mov
cltd
adc
mov
testb
jecxz
dec
inc
call
loopne
push
sbb
push
or
aad
pop
push
xor
mov
inc
add
sbb
mov
pop
push
mov
test
popa
cs
mov
push
add
mov
ljmp
sbbl
data16
adc
fmull
inc
pop
cmpsl
xor
mov
inc
test
enter
and
dec
xchg
cmp
dec
jp
enter
daa
and
cwtl
jle
loop
cld
cmc
jecxz
sbb
cld
mov
arpl
das
or
push
xchg
popa
in
dec
adc
jno
mov
sahf
scas
imul
add
es
test
test
mov
lcall
jl
push
out
call
xor
dec
mov
push
sbb
mov
sub
sbb
cld
pusha
sbb
jb
add
sub
pop
loopne
ss
stos
push
pop
mov
jno
ja
data16
ds
mov
je
sbb
sbb
mov
sub
aas
mov
ja
mov
dec
push
cld
inc
test
outsl
inc
ret
mov
outsb
dec
in
std
adc
shll
add
jp
shl
cbtw
loope
outsb
jo
sarl
lret
ret
sub
hlt
fs
pop
mov
mov
mov
fnstenv
icebp
dec
lds
cmovg
xor
jle
mov
add
or
pusha
xor
iret
cmp
insl
lcall
jno
and
std
cmp
popa
sub
push
mov
cmp
cli
push
into
mov
fnstenv
lds
mov
cmp
fs
aaa
out
xor
rclb
jp
push
jns
shrl
xchg
imul
jecxz
lods
fs
in
cmp
xor
clc
popa
jl
cmp
stc
jbe
mov
iret
nop
sub
pop
bound
aas
mov
adc
ljmp
js
ret
mov
mov
pop
jns
jbe
ds
les
jns
mov
jmp
pop
ror
scas
sbb
ret
cmp
outsb
test
and
push
jne
js
mov
jns
dec
das
mov
jmp
pop
pop
mov
dec
dec
lcall
sub
into
sbb
outsb
pop
cmpsb
inc
iret
pop
mov
mov
bound
scas
sbb
ficoms
dec
mov
int3
cmp
cmp
and
cmpsl
pop
mov
sahf
cs
push
popf
rcl
mov
ficomps
aas
es
sti
lods
out
mov
adc
sbb
sub
adc
pop
sub
int3
imul
lret
sbb
pop
pop
inc
jmp
les
pop
mov
jns
adc
into
ror
imul
insb
test
movsl
cmp
shlb
in
mov
in
or
push
fldenv
mov
or
stos
inc
dec
das
shll
iret
sub
aad
mov
addr16
sub
lcall
inc
pop
aad
pop
gs
lahf
das
daa
cmp
jns
push
call
in
and
pusha
outsl
ds
mov
inc
pop
jo
scas
roll
lahf
sbb
xchg
cmc
inc
js
add
add
call
aas
popa
adc
adc
outsl
hlt
or
add
add
cmp
insb
inc
int3
mov
push
and
sbbb
sbb
sbbb
mov
sbb
fnstenv
ss
cmp
xorl
push
subb
dec
imul
pushf
clc
arpl
inc
inc
rclb
dec
inc
sub
lret
pusha
lret
mov
cwtl
mov
fdivrs
nop
lods
ret
subl
push
daa
in
push
out
cwtl
dec
in
cmc
jmp
fstl
xor
pop
fstpl
aad
cmp
xchg
scas
lahf
dec
xor
and
sbb
and
test
pop
jg
imul
std
add
push
cwtl
scas
shll
or
or
pop
add
imul
or
mov
out
je
out
mov
push
or
aaa
sub
sar
adc
adc
pusha
jno
js
mov
push
mov
aam
add
icebp
mov
sub
test
popa
xchg
push
hlt
cmp
rcrb
cmc
dec
rclb
ljmp
sub
ret
icebp
push
icebp
fadd
ret
mov
ss
lret
mov
push
cs
push
rcll
xchg
ret
loopne
xlat
push
mov
and
shll
fiadds
subb
adc
xlat
ffreep
or
lcall
pop
jmp
push
inc
mov
mov
orb
inc
dec
pop
daa
mov
test
lret
inc
js
pop
fsubrp
push
subb
js
inc
lods
cmp
add
iret
stos
mov
inc
stos
cmp
outsl
in
jno
cwtl
xlat
xchg
xlat
mov
jne
push
test
mov
jae
loope
cmpsl
jmp
mov
insb
jo
icebp
pop
ljmp
push
mov
push
mov
addr16
dec
das
push
xchg
adcl
cwtl
ljmp
pop
sahf
out
roll
sbb
outsb
lds
and
inc
ljmp
xchg
adc
add
adc
or
pop
loope
xor
dec
pop
popa
cmp
push
je
mov
adc
push
or
mov
popl
adc
mov
sbbl
cld
lret
pop
cli
mov
lret
add
hlt
xchg
or
lods
xor
cmpsb
sub
dec
cld
lea
pop
sbb
clc
dec
stos
mov
filds
inc
pop
xchg
cmp
popf
mov
pop
mov
or
iret
pop
scas
inc
pushf
xor
mov
xchg
mov
jnp
pop
in
mov
cmp
dec
imul
aaa
repz
mov
das
fmull
cmp
pusha
ljmp
lds
sbb
loop
jb
outsb
mov
inc
scas
jecxz
push
mov
ret
rol
cld
cmp
hlt
cmovle
outsl
sbb
notl
pop
outsl
leave
outsb
mov
xor
dec
je
lods
std
add
nop
mov
rcll
loop
divl
jne
push
notl
mov
inc
jmp
rclb
gs
stos
addr16
ja
and
cmp
jo
pop
movsb
aad
fsubl
xchg
lcall
or
xor
lret
pop
in
jbe
in
mov
lret
xchg
pop
sub
jae
mov
lods
jp
or
jmp
pop
cmpsb
and
inc
fistl
pop
and
call
fildll
mov
mov
xor
lret
jl
xor
sarb
xchg
dec
je
cltd
pop
call
push
rcr
add
pop
bnd
push
xchg
mov
xchg
mov
cld
cmp
arpl
xor
lret
mov
xor
mov
scas
pop
outsl
aaa
mov
or
scas
mov
cmp
ljmp
bound
mov
dec
xor
push
mov
aaa
add
sbb
jnp
arpl
flds
cld
lds
push
inc
rcr
fwait
xchg
or
stos
xchg
nop
outsl
dec
leave
iret
daa
iret
ja
rorb
repnz
mov
into
shll
jp
mov
rcll
sub
mov
dec
xchg
insb
ret
fildl
aaa
inc
bound
mov
out
push
inc
bound
cmp
addr16
jg
cmp
bound
dec
pushf
fwait
sub
add
add
fidivrs
int
xchg
sub
add
add
add
mov
inc
push
outsb
add
out
sbb
mov
jmp
add
mov
and
and
repnz
sbb
fldenv
pop
fdivrs
ret
gs
sbb
pop
lods
inc
and
push
gs
sub
push
mov
jo
shll
pop
cmpb
mov
in
aam
pop
andb
cmpsl
jne
and
cltd
xchg
movsb
xor
fnstsw
push
push
out
sbb
lcall
jecxz
jne
aam
aam
mov
pusha
out
adc
dec
inc
push
jle
jmp
fdivrl
ds
popl
dec
ret
cmp
out
cmp
test
jg
sbb
sbb
jnp
cmp
enter
les
aaa
mov
mov
ffree
pop
add
ss
clc
data16
cmpb
pushf
or
sbb
push
je
mov
insb
and
imul
lret
cmp
cmp
cmp
inc
xchg
mov
cmp
jg
lahf
popa
outsb
cs
int
xor
pop
dec
and
mov
bound
dec
xchg
adc
push
push
je
cmp
xchg
cltd
dec
data16
mulb
xchg
imul
repnz
decb
iret
pop
sti
ret
dec
daa
xchg
jnp
sub
sbb
pop
adcb
das
faddl
mov
rcll
adc
xor
mov
adc
pop
gs
push
fcompl
cmp
std
cli
ds
and
outsb
push
faddl
fcompl
insl
jae,pn
pop
jbe
mov
mov
addb
mov
fistl
push
mov
push
pop
pop
bound
movsl
les
subl
ror
stos
pop
push
ds
inc
fimuls
mov
jno
jae
jl
sbb
inc
insb
es
sbb
out
push
aas
push
pop
mov
out
add
push
lret
adc
rcrb
adc
dec
test
pop
hlt
in
xchg
les
push
je
mov
out
push
sub
cmp
shlb
add
dec
mov
lods
cs
lcall
and
ret
lahf
pushf
and
add
xchg
push
out
and
insl
or
imulb
mov
test
lea
mov
cmp
cmp
and
movsl
jbe
fdivrs
mov
cld
xor
push
dec
or
mov
jne
shlb
pushf
negl
mov
lods
lds
jp
inc
sub
and
cwtl
xor
cmp
mov
mov
test
and
add
xchg
jl
dec
pop
sarb
inc
adcl
les
rorb
enter
or
in
push
in
repnz
mov
pop
cli
pop
cmp
outsb
push
mov
mov
jne
popf
lret
pop
mov
push
pop
jmp
sbb
pop
mov
mov
pop
cmpb
iret
sbb
prefetchw
imul
push
clc
test
inc
imul
cmc
cmp
jbe
mov
test
inc
pop
out
ret
enter
scas
mov
mov
ljmp
aam
cmp
repnz
loope
xor
pop
in
push
inc
scas
es
sbb
enter
adc
pop
pop
jecxz
adc
and
loope
mov
mov
or
xchg
inc
dec
mov
bswap
or
pop
cmp
xor
mov
shll
or
pop
sahf
aas
rcrb
jae
cmp
es
push
call
out
mov
mov
aad
jecxz
cmp
ret
std
xchg
add
lods
jb
pusha
fld1
ret
xor
jb
xchg
cmp
icebp
movsb
or
xchg
sub
add
push
and
aam
xor
loope
or
jmp
mov
in
cli
cmp
mov
mov
mov
mov
xor
sbb
mov
daa
test
add
xor
add
out
mov
fidivs
push
movsb
es
cmp
inc
fisubs
push
dec
nop
pop
pushf
sbb
push
cwtl
mov
pop
test
mov
rolb
mov
push
lret
cld
mov
mov
fisttpl
pop
dec
hlt
subb
shlb
int
fdivrs
mov
or
add
jne
outsl
cmpl
fmuls
mov
incl
push
pop
cmp
xlat
dec
fsubs
pushf
xchg
inc
ds
inc
into
cwtl
movb
add
mov
push
out
std
mov
push
jg
mov
cmc
or
add
add
add
pop
ljmp
arpl
xchg
lods
pushf
cmpsl
dec
dec
mov
lock
sub
mov
popf
scas
mov
out
xchg
xor
mov
nop
xor
or
movsl
fimuls
ja
or
shrl
xchg
mov
popa
inc
inc
mov
pop
fmul
inc
addr16
outsb
js
jbe
leave
push
mov
xchg
push
sub
jbe
mov
addb
adc
mov
in
loopne
and
mov
xchg
lea
push
jl
sbb
cmpsb
lea
sbb
mov
es
cmp
fnstenv
repnz
mov
xchg
jnp
pushf
push
push
ds
popa
mov
in
or
mov
fwait
pop
sbb
inc
push
cmp
and
addr16
ret
xorb
and
sbb
xchg
cld
xchg
in
inc
xchg
xor
subl
lea
aaa
jo
xor
ret
xor
push
or
nop
scas
xlat
bound
enter
adc
or
fyl2xp1
testl
movsl
cld
xchg
lcall
out
add
test
ret
xor
das
rorb
add
dec
sub
outsl
popf
inc
fisubrl
cld
pusha
mov
es
test
xchg
pop
mov
jg
push
dec
or
leave
adc
cmp
xchg
fwait
and
inc
in
pop
nop
fists
xor
jnp
into
pop
xor
adc
shl
xor
or
cwtl
pop
mov
cs
into
enter
push
out
or
pop
dec
fidivrs
or
pop
mov
stos
inc
out
sbb
sbb
mov
nopl
push
dec
add
enter
lahf
shlb
xchg
mov
mov
into
or
sti
xor
je
inc
jle
and
or
mov
or
mov
imul
shrl
inc
stos
inc
cwtl
sub
cs
outsb
adc
out
insl
stc
fnstcw
lcall
pop
jp
xor
add
adc
pop
sub
inc
inc
jae
inc
idiv
stos
sub
fwait
out
xor
xor
xchg
loop
adc
jmp
outsb
cwtl
cs
aas
push
push
cmpsl
add
pusha
xor
cmp
xchg
rcrl
sbb
shll
arpl
jmp
sbb
sbb
adc
mov
ds
sub
dec
mov
scas
xor
out
push
pop
jbe
pop
jae
xchg
pushf
mov
jo
dec
pop
outsl
xchg
cmp
cmp
inc
shll
jns
mov
xchg
out
sbb
sti
out
push
movsb
fimuls
orb
ss
jmp
xchg
bound
mov
xchg
outsl
xchg
sti
push
inc
xchg
lea
lcall
inc
es
jg
cmpsl
pop
stos
jno
mov
int3
ficomps
sub
add
cmp
mov
ret
add
idivl
movsl
mov
dec
test
out
mov
fs
sbb
out
xchg
dec
mov
pop
outsb
mov
pop
stc
push
adc
ja
jle
jp
clc
popf
push
xchg
in
bound
test
pop
lret
push
and
adc
out
lods
test
xor
rcll
gs
pop
xchg
cmp
pusha
roll
push
mov
cmpsl
push
mov
int3
mov
add
sahf
ds
mov
add
dec
nop
out
jmp
jmp
push
sbb
test
in
fs
ret
sub
movsl
bound
mov
cmp
mov
data16
adc
clc
insb
mov
mov
mov
jle
and
iret
movsl
lods
sbb
outsl
xchg
mov
add
mov
ret
mov
stc
jp
jp
and
dec
inc
push
cmp
je
mov
and
int
daa
int
sub
xchg
or
adc
or
sbb
ret
int
popa
mov
pusha
jne
jb
push
mov
mov
push
and
sti
cmpsb
cld
std
fst
adc
dec
push
movsl
xchg
lret
xor
in
push
cli
mov
sahf
ret
mov
rcll
out
cmpsl
xchg
jecxz
jae
sti
xchg
jp
inc
aaa
ss
aam
pop
out
in
dec
jb
push
dec
pop
pop
push
ds
fcomps
andl
mov
jns
and
cmpxchg
fsts
xor
inc
dec
pushf
fsubs
arpl
les
xor
dec
arpl
pop
rcrb
and
push
cmp
out
jo
add
add
lret
in
out
dec
add
cltd
add
sgdtl
hlt
add
add
mov
adc
mov
push
sub
out
dec
inc
adc
xchg
xor
adcb
jle
sbb
lahf
add
loope
popa
sub
jno
or
mov
jecxz
mov
dec
jmp
cmp
cmp
inc
jbe
adc
mov
dec
jg
adcb
xchg
decl
pop
sub
inc
xlat
mov
fwait
push
incb
pop
xor
mov
addb
push
or
xor
mov
add
jo
jle
je
popl
fxam
out
fs
inc
fcomps
inc
push
scas
nop
mov
aam
repnz
add
adc
adc
inc
ja
into
cld
pop
out
pop
jg
in
adc
inc
dec
add
lds
sbb
sbb
vcvtdq2pd
fcoms
insb
or
sub
movl
mov
lea
xor
vcvttss2si
outsl
fistps
imull
outsl
lea
les
out
xchg
pop
sbb
mov
mov
in
rorb
xchg
sub
xor
cmp
pop
or
mov
shl
mov
in
mov
cmp
inc
insb
fdivs
out
shll
push
in
fs
fistl
ss
push
sbb
dec
fisubrs
call
pop
and
test
lahf
push
inc
std
imul
push
push
test
sub
gs
cmp
pop
xor
push
popa
mov
jo
cmpsb
into
aas
jge
push
jmp
mov
pop
scas
jbe
adcb
sub
movsb
adc
and
add
cmp
leave
aam
inc
rcl
cmp
dec
outsl
add
jp
cmpsb
addr16
sbb
out
fneni(8087
pop
in
mov
jno
imul
jp
mov
mov
daa
xchg
sbb
mov
sbb
stos
mov
pushf
xchg
aad
pop
jle
cld
mov
sub
jns
pop
cmpb
pause
and
incb
shlb
xchg
hlt
cmp
xchg
negb
push
movsl
insb
sbb
xor
cltd
xor
xor
push
mov
dec
mov
push
jno
es
mov
add
lret
idivb
sub
sti
add
out
sbb
arpl
jecxz
sbb
popf
ss
sbb
cli
dec
aaa
mov
leave
or
sub
stos
ds
sbb
rol
jge
pushf
push
jecxz
ss
mov
in
stos
in
lea
sbb
rclb
and
in
push
in
into
jae,pt
repnz
in
rol
jne
orb
inc
adc
incb
cld
inc
add
orb
xchg
rcrl
out
fs
jg
or
enter
or
popf
lds
push
push
add
or
popa
add
dec
jp
mov
icebp
movsl
or
nop
inc
cmp
dec
or
andl
imul
fs
xor
xchg
fwait
je
dec
jbe
movsl
jo
xor
imul
pop
jp
dec
in
push
arpl
int
push
push
or
xor
mov
jl
rcrl
and
stos
xor
dec
push
loopne
jmp
repnz
lock
call
add
jle
ficomps
xchg
mov
adcl
xor
sub
test
push
scas
or
adc
mov
jmp
sub
cld
xchg
mov
adc
lahf
push
jns
push
ret
pop
iret
call
fldl
inc
lods
out
xor
jns
fnstsw
hlt
xchg
push
ja
pushf
cmp
fcmovnbe
clc
loopne
loope
pop
jne
orb
int3
cld
dec
shr
movb
adc
pop
pop
aaa
aad
jns
push
inc
mov
adcl
jnp
push
cmpsb
mov
dec
vrsqrtps
or
inc
mov
jmp
pusha
cwtl
sbb
inc
and
add
xchg
scas
sub
xchg
add
les
adc
mov
lret
mov
mov
int
adc
stc
ret
xchg
push
sub
mov
rorl
in
in
mov
call
jnp
idivb
out
aas
out
xor
jecxz
lret
adc
add
add
je
std
mov
rorb
adc
add
add
add
sub
push
push
cmpsb
shrl
call
stc
insl
push
ss
inc
fimuls
jne
sub
push
mov
out
call
xor
add
sahf
and
xor
xlat
pop
ja
test
hlt
cli
jp
mov
rcrb
les
sbb
inc
sbb
fsubl
dec
outsl
mov
push
lods
pop
sbb
cmpsb
jmp
or
jo
mov
cmp
ds
in
xchg
fmuls
divl
sub
dec
mov
or
xor
repz
out
cmpsl
dec
out
inc
aad
mov
mov
rcl
dec
jns
and
push
mov
inc
stos
push
sub
insb
stc
fwait
pop
dec
sub
sti
jb
nop
ret
imul
and
sub
push
xor
jl
divl
stos
movsb
add
cwtl
cmpsl
jne
fbld
fs
lock
notl
leave
daa
adc
es
insb
or
fadds
outsb
push
lea
cmpsb
pop
xchg
pop
add
push
xchg
cli
mov
nop
dec
mov
fimull
rorl
dec
es
lock
push
leave
mov
sub
jo
inc
cmpsl
or
repz
cmc
xchg
dec
pop
loope
loope
movsb
mov
pop
ret
pop
popf
mov
stc
xor
out
or
xor
adc
jl
cmp
xor
bound
mov
ficoml
std
and
mov
movsb
addb
pop
push
pop
and
add
lret
ret
or
sub
rcr
arpl
icebp
pusha
frstor
fwait
subl
dec
loop
icebp
movsl
out
imul
mov
sub
aam
movsb
jmp
cmpsl
pop
sub
ficoms
dec
pop
pushf
clc
je
inc
in
insb
push
cli
insb
iret
adc
push
lds
insb
test
jp
xor
test
xchg
jb
popa
dec
sub
dec
stos
xchg
sbb
out
mov
iret
add
dec
add
pop
test
sahf
loope
jns
lahf
stos
scas
fisubs
shll
inc
xchg
movsl
xchg
inc
lret
pop
cmc
or
int3
cmp
jg
sub
imul
push
shlb
cmp
rolb
aaa
stos
mov
and
cmpsl
cli
or
icebp
lahf
outsb
push
lcall
push
mov
or
mov
bound
outsl
into
scas
mov
pop
ss
aaa
arpl
mov
aas
and
jecxz
imul
add
mov
xor
mov
out
xor
imul
ret
jecxz
cmp
out
int3
idivl
sti
lea
sahf
scas
hlt
sub
pop
dec
pushf
sahf
out
addr16
pop
fsubrl
repz
xchg
out
into
rclb
or
fsubl
inc
jo
mov
lret
jmp
nop
cmpsl
sbb
lahf
adc
das
xor
mull
outsb
xor
pop
xchg
jne
lods
adc
add
insl
test
xchg
call
scas
ficomps
popf
xor
bsf
inc
push
ror
es
mov
pop
mov
sub
aas
out
daa
sbb
orb
dec
mov
or
cmp
rcll
out
sbb
mov
lods
jg
addl
fs
dec
sbb
jno
fld
lds
pushf
mov
cmp
adc
fists
sub
lcall
fucomip
mov
loope
test
test
push
cltd
dec
aaa
xchg
cmpsl
sub
inc
sub
jg
adc
daa
loopne
aas
jnp
in
sti
iret
stos
pop
push
or
loop,pn
adc
and
inc
es
stos
lock
push
iret
adc
loopne
lods
leave
lret
out
fs
daa
mov
push
aaa
jge
arpl
mov
movl
and
dec
nop
imul
adc
pushf
jno
cs
fstps
sub
jne
mov
call
sbb
into
in
push
in
icebp
ja
into
stos
clc
pop
outsb
fcompp
stos
and
aas
call
sbb
outsl
subb
mov
rol
and
inc
push
push
jbe
sbb
add
push
jge
fcmovbe
xor
add
aaa
je
ljmp
int
pop
jmp
mov
aaa
cmp
fisttps
xor
xchg
call
test
or
sub
paddq
sub
sbb
adcl
add
mov
fs
lods
in
or
sub
rcrl
add
hlt
add
add
clc
imul
push
xor
or
lods
dec
sub
xchg
adc
jno
sti
xchg
ret
pop
aaa
dec
push
pop
cmp
das
mov
xor
xor
xor
hlt
pop
xor
je
xor
cmp
insb
inc
mov
dec
in
in
test
test
mov
adc
sti
and
lds
inc
gs
inc
add
mov
movsl
cmp
pop
mov
jno
mov
xor
leave
pusha
add
fs
popf
adc
inc
addr16
out
jnp
push
movsb
jle,pt
jns
mov
decb
mov
stos
pop
push
movsb
xchg
movb
adc
lahf
sub
es
push
in
imul
jno
es
lea
cltd
xor
gs
xor
test
das
fisubs
in
stos
out
repnz
mov
adc
dec
inc
jb
fnstenv
icebp
dec
rcl
cmp
mov
scas
fcoml
xchg
mov
pop
dec
repnz
hlt
cpuid
adc
mov
movsl
mov
clc
mov
cmp
pop
inc
in
and
les
out
test
in
jbe
dec
pop
xchg
popa
jl
and
cld
xchg
sub
roll
sbb
iret
lea
xchg
ss
ljmp
cmpsl
repnz
sbb
aad
mov
outsl
add
test
cmp
aas
sub
aad
cltd
sbb
jnp
popf
sub
aad
fs
jo
sbb
arpl
into
inc
lods
int
inc
mov
fisttpll
add
sub
mov
fidivs
lock
ficomps
fisubrl
gs
inc
xchg
aam
sbb
fildl
cmp
push
push
aas
and
test
mov
mov
dec
or
scas
sbb
imul
xor
stos
or
push
xor
push
sbb
iret
jecxz
cmc
test
aad
test
je
insl
xchg
fs
fwait
test
lods
push
bound
push
sub
sub
lret
dec
fiadds
xor
cli
repnz
popf
aas
xor
popa
jns
jmp
aas
jecxz
sub
pop
push
out
jne
into
mov
sub
test
dec
in
cmpsl
lcall
sbb
loopne
sub
pushf
ja
add
jb
and
jmp
dec
or
imul
add
pushf
ret
into
adc
jg,pn
xor
subl
loop
xlat
cs
sbb
mov
imul
and
xchg
add
js
mov
push
ret
loope
inc
jo
sbb
roll
dec
mov
dec
mov
fsubp
push
push
cmp
loope
xchg
and
jl
xor
and
nop
adc
xor
push
mov
data16
dec
pop
mov
pop
gs
push
cmpsb
jne
repnz
in
mov
arpl
jbe
lods
xchg
inc
icebp
addr16
push
int
fildll
cli
jae
push
dec
cmp
loop
out
adc
daa
pop
cli
inc
stos
mov
inc
or
xor
movsl
faddl
push
in
mov
test
popa
pop
pop
lcall
sbb
insb
repz
stc
jmp
cltd
pop
stc
repnz
mov
push
sahf
or
je
subl
out
add
enter
fbld
aas
cmp
xor
xchg
xchg
add
push
insb
std
fimull
arpl
adc
negb
adc
mov
hlt
shr
pop
sahf
jl
xchg
ss
je
sti
xchg
inc
jmp
fs
xor
aaa
rcll
dec
enter
mov
rcrb
sahf
lcall
adcl
shr
xchg
mov
push
imul
xor
aaa
je
xchg
cmp
inc
dec
ret
adc
pop
test
lods
or
ror
repz
jb
fsubrl
in
insb
push
jge,pt
fs
pop
sbb
pop
pop
adc
dec
xlat
rorb
popa
mov
pop
xchg
icebp
icebp
rcrl
ljmp
sahf
pop
out
dec
pusha
pop
mov
inc
fcomp
push
inc
dec
pop
or
sbb
lahf
imul
mov
test
sub
repz
mov
rcrb
mov
mov
adc
and
pop
enter
loopne
mov
les
loopw
mov
and
ret
dec
or
ljmp
movsb
shrl
inc
push
add
add
push
push
add
lods
test
gs
rclb
add
add
inc
mov
mov
shl
sbb
mov
adc
sub
jo
cmp
lret
mov
cli
inc
adc
sbb
sbb
adc
pop
cli
rclb
jb
adc
xchg
mov
dec
in
pop
or
out
dec
rolb
insb
cltd
cmp
jno
xor
iret
sahf
int3
insl
inc
cs
aaa
test
in
xor
mov
ret
pop
cmp
xchg
addr16
mov
lcall
xor
cmc
xor
incb
mov
mov
jae
inc
inc
or
add
sub
xchg
adc
jns
fsts
aad
push
xchg
sub
lcall
pop
or
or
jnp,pn
push
test
pop
push
pop
and
push
es
mov
les
aaa
repz
and
add
inc
dec
mov
push
xor
and
in
scas
insl
or
rolb
sub
jmp
mov
xchg
aaa
das
in
mulb
cmp
xchg
xchg
call
jge
inc
out
lock
cmp
mov
nop
iret
xor
sub
pop
iret
fadds
fidivl
mov
dec
sbb
ss
pop
incl
cwtl
imul
cltd
vandps
call
enter
mov
lods
aad
mov
and
test
js
xchg
pop
loopne
pop
mov
add
rolb
shrd
loop
pop
int
mov
cmp
mov
push
sbbb
sarl
lret
jo
adc
movsb
xor
jp
icebp
testb
leave
mov
nop
aam
and
imul
xor
icebp
push
lods
les
mov
cmp
into
lock
inc
test
clc
pop
add
enter
mov
popa
adcb
int
in
rcll
imul
sub
jae
sub
push
cmc
repnz
stos
sbb
out
or
mov
mov
fstl
imull
jmp
adcl
xor
subb
outsl
inc
xchg
cmpsb
ret
xor
sbb
xor
clc
ljmp
nop
jae
es
sbb
fdiv
mull
rcrb
xchg
push
jb
mov
repnz
lahf
pop
pop
pop
scas
and
mov
sahf
aas
cld
dec
std
dec
push
pop
adc
repnz
mov
nop
clc
mov
aas
push
inc
xor
loope
scas
sub
test
jecxz
cmp
fdiv
nop
pop
pop
ficompl
sub
dec
out
sbb
push
in
aas
test
movsl
add
jno
in
adc
xchg
jne
test
sub
push
or
and
push
or
sub
loope
pop
mov
aad
inc
in
jns
mov
repnz
not
push
push
push
sbb
pop
fsubr
int
push
out
or
xor
imul
xor
adc
js
mov
insb
or
idivb
mov
push
lahf
push
mov
call
loop
jle
fs
rcrb
aam
ss
aaa
push
mov
mov
cld
push
xor
push
in
stos
aas
xor
push
test
adc
sub
dec
jecxz
sbb
hlt
cmpsl
and
and
adc
dec
and
stos
xchg
pop
add
repz
pop
xchg
jp
sti
push
push
cmp
out
add
loop
ljmp
addb
test
and
pushf
notb
ret
mov
imul
outsl
out
ljmp
mov
dec
aas
sbb
inc
sub
es
clc
inc
incb
push
cmp
outsb
jmp
inc
imul
xchg
sbb
in
in
test
dec
cmpsl
insb
mov
add
ds
mov
inc
push
enter
jmp
retw
or
jno
pop
inc
into
in
fdivrs
fwait
and
dec
aaa
xlat
or
test
lahf
or
popa
scas
insl
std
lret
sub
adc
push
xchg
dec
or
inc
cmpsl
sub
cld
hlt
pop
int
or
add
push
xlat
jmp
stc
push
ss
cmpsb
shl
mull
and
push
jmp
scas
icebp
outsb
and
negl
cmp
push
popf
push
ss
xrelease
sub
add
add
je
jne
pop
outsl
out
aaa
jae
mov
and
add
add
add
ficoml
adc
or
jno
push
mov
sub
xchg
sahf
or
pop
mov
add
cmpsl
pushf
mov
xchg
sbb
mov
xor
push
and
inc
adc
stos
jle
mov
cmp
ljmp
add
enter
lods
mov
cmpsl
cld
mov
and
mov
push
rorl
lret
push
or
aam
das
enter
nop
lods
dec
test
cwtl
dec
cmc
or
stc
je
fisttpl
jg
xchg
add
cmpb
adc
cmc
jno
add
loope
leave
aad
or
xchg
shr
add
pop
inc
xchg
and
mov
test
xor
inc
cmpsb
test
mov
outsb
sbb
loope
in
rcrb
in
cmp
pusha
and
aam
ja
mov
push
xlat
imul
mov
xchg
add
lahf
adc
and
or
and
dec
movsb
into
xchg
outsb
xchg
test
sbb
cmp
inc
pop
int
or
sbb
sbb
xchg
and
out
fstps
dec
and
dec
push
icebp
or
jl
or
xor
xchg
negl
cmp
nop
xor
repz
push
jl
stos
loopne
movsl
loopne
cmp
xchg
pusha
ds
lret
push
push
mov
cmp
jae
test
cld
stc
stos
scas
add
movsl
mov
bound
cmp
inc
pop
mov
push
ljmp
test
sbbb
push
xchg
mov
cmp
xchg
inc
stos
and
test
sub
addr16
negl
sti
fnstenv
rcrl
scas
in
test
sbb
sbb
jg
movsb
rolb
rorb
sbb
divb
fmull
icebp
jbe
push
adcl
sbb
cmpsl
iret
sub
push
push
shr
cmp
pop
test
cmc
cltd
iret
fs
dec
xor
mov
and
movsl
xor
enter
rcl
fdivr
push
mov
movsl
fisubrl
mov
add
lret
cltd
jo
fcomps
and
cltd
fstps
mov
push
push
hlt
addl
sbbl
test
sub
inc
jg
adc
mov
push
cmpsb
inc
addr16
leave
cli
mov
or
loope
mov
mov
mov
sbb
xchg
xchg
scas
aas
inc
xor
mov
testb
addl
jg
sbb
and
push
sub
test
adc
xchg
push
int
xchg
dec
ret
clc
mov
sub
mov
xor
cmp
adc
mov
out
mov
ret
int3
jl
fdivrs
int3
ds
stc
jecxz
add
cmp
iret
in
cmp
les
inc
mov
aas
jg
mov
and
push
or
ljmp
sub
sub
xor
outsl
shrb
pop
mov
hlt
mov
inc
aad
frstor
dec
lea
into
push
pop
pop
pop
subb
movsl
jl
mov
arpl
lock
add
adc
jbe
fimuls
sbbb
sbbb
enterw
adc
ja
xchg
out
xchg
jl
adc
lcall
ljmp
lahf
mov
sub
aas
es
or
jle
jg
std
inc
mov
mov
add
sub
loope
jnp
ror
push
popa
addr16
jecxz
dec
mov
stc
int
cli
dec
call
pop
push
sbb
arpl
test
mov
enter
imul
clc
or
iret
cwtl
mov
xchg
push
cmpsb
stos
mov
pop
lret
jns
pop
mov
push
fs
sub
sbb
test
sub
pusha
xor
nop
dec
aad
inc
leave
call
mov
jno
cmp
shll
cmp
jnp
rcrl
add
add
xlat
adc
mov
lods
ret
inc
push
adc
int3
pop
outsl
push
int3
push
sti
and
push
xchg
add
je
push
jae
popa
sbb
add
add
and
sub
add
cmp
decl
adc
aaa
cwtl
mov
leave
insl
mov
mov
xlat
sbb
inc
pop
dec
adc
jo
test
pop
and
call
es
add
xor
mov
add
add
ss
std
iret
cmp
cld
add
adc
add
add
add
mov
or
and
das
loopne
mov
push
loop
fldl
xchg
in
pop
cwtl
mov
xchg
cli
das
fidivs
adc
lods
test
shlb
or
imul
cmp
pop
call
ret
pop
call
sub
pop
cld
iret
add
jne
daa
stos
lods
insb
jnp
in
mov
mul
or
xchg
dec
inc
in
mov
pop
sbb
mov
adc
mov
jg
lds
inc
or
jne
push
inc
jo
add
mov
sahf
inc
xor
xor
push
arpl
mov
add
mov
xor
sarb
pop
call
pushf
in
push
dec
jo
lods
andb
pop
mov
movsb
and
ja
leave
jl
movsl
mov
mov
imull
inc
jae
mov
fwait
or
jp
ss
aas
inc
jge
fistpll
and
shrb
mov
imul
xchg
push
fbstp
sbb
cmpsl
add
cmp
cltd
ja
inc
insb
imul
jnp
rclb
test
insb
fiadds
jp
xchg
xor
or
ds
push
stos
mov
cli
repz
stos
jge
or
inc
jmp
mov
nop
mov
and
xor
mov
cltd
das
pop
sti
push
mov
pop
sbb
aaa
mov
pop
subl
iret
call
sahf
ret
hlt
dec
ss
sbb
fcoms
mov
pop
jecxz
sbb
mov
ljmp
movb
mov
repnz
push
mov
sahf
adc
fstpt
ret
and
jg
fimuls
popa
sub
lea
lret
mov
ljmp
cwtl
mov
lret
scas
out
push
scas
lea
test
sub
in
push
gs
nop
xchg
lock
pop
and
push
cltd
mov
fmul
cli
mov
xor
mov
lahf
insb
daa
sub
in
cmp
sub
push
cs
je
loop
testl
das
adc
adc
ret
jge
cmc
stos
lea
xor
enter
sti
stos
lcall
das
stc
mov
push
dec
not
fs
push
out
cld
push
mov
dec
ljmp
xor
test
popa
adc
adc
ror
add
inc
mov
dec
lret
mov
gs
das
cwtl
cmp
not
in
inc
negl
iret
mov
test
mov
adc
xchg
loope
out
jmp
push
and
fwait
xchg
sarb
pmuludq
push
int
inc
dec
lock
inc
mov
xor
or
pop
in
inc
es
addr16
adc
mov
out
test
and
mov
jge
mov
mov
mov
mov
add
hlt
mov
rol
fsub
mov
jle
mov
xchg
pop
int
mov
sub
mov
mov
xor
std
cmp
adc
addl
stos
shr
xor
gs
pop
mov
inc
jb
loope
call
dec
pop
clc
push
or
mov
test
cmc
out
ja
pop
xlat
inc
cmovnp
cmp
pop
cwtl
mov
add
adc
rcr
xchg
rorl
add
sub
adc
add
inc
call
gs
sub
lock
rcrl
testl
bound
cmp
push
inc
test
jb
sub
pop
add
mov
in
jns
mov
or
pop
mov
popf
sbb
and
test
in
jp
inc
das
jl
cmp
out
sbb
adcl
inc
aad
ja
or
and
or
out
or
jbe
subl
fsubrl
push
inc
xchg
sbb
shll
daa
inc
loopne
inc
rorl
hlt
adc
jae
lahf
and
jmp
js
inc
dec
push
lds
inc
sub
sahf
jne
adc
push
mov
xchg
out
mov
inc
dec
test
call
xor
mov
ret
push
pop
xor
add
clc
dec
push
jb
push
in
adc
vpsrad
xor
and
sbb
mov
cmp
daa
push
sbb
stc
mov
insl
add
add
cld
es
mov
jmp
fdivrp
push
popa
sbb
sub
add
iret
cmp
in
fdivrl
sbb
stc
insb
icebp
pop
cmc
cld
or
pop
nop
sbb
icebp
aas
mov
pop
popl
dec
cmp
xchg
sbb
incl
jns
popl
cmp
hlt
inc
into
enter
jp
sbb
in
xor
xor
movsl
mov
int
cmc
sbbl
insl
aam
sub
fidivrs
ret
pop
lds
lods
pop
movb
cmp
dec
aaa
sbb
stos
fidivrs
loopne
dec
mov
mov
data16
call
sbb
dec
adc
bound
gs
adc
repnz
xchg
loopne
sub
cs
dec
xchg
bound
into
or
sahf
xchg
test
xchg
fdivrl
dec
or
clc
jno
or
cmpsb
pop
push
test
test
sub
cli
mov
test
xor
into
xor
pop
nop
push
xor
mov
mov
sub
jecxz
orb
lods
xchg
cmp
rol
push
ffree
ret
add
xchg
lods
jecxz
push
nop
sti
jae
push
mov
and
jns
aas
sbb
aad
cli
push
aaa
jne
popa
xor
xchg
add
clc
addr16
cmp
hlt
push
ja
inc
sbb
mov
or
jbe
fcom
xchg
pushl
pushf
cmp
jbe
pop
mov
mov
sub
insl
jno
stos
ss
mov
jne
jnp
jb
sub
push
gs
sub
push
pop
out
xchg
sarb
cmpb
mov
adc
mov
dec
insl
and
sbb
lahf
xchg
out
xchg
and
test
data16
sahf
mov
push
insl
nop
cmp
shl
sbb
mov
or
lret
xor
or
imulb
mov
sub
jb
sbb
push
inc
mov
xchg
ss
test
std
dec
aad
cmp
hlt
push
xor
and
cld
pop
inc
jns
xchg
mov
push
es
ljmp
sub
clc
cmp
clc
mov
mov
push
dec
jns
jns
mov
and
sub
cli
dec
or
stos
push
push
in
dec
xchg
cli
push
insl
mov
xchg
pop
xchg
imul
push
mov
mov
push
loop
sub
mov
cmp
ds
mov
lea
fnstsw
ret
mov
pushf
gs
dec
mov
cmc
mov
fisubs
mov
adc
outsb
aaa
push
sbb
sbbb
js
mov
cmp
push
sahf
inc
push
or
fisttps
popa
mov
cmp
insl
ljmp
cld
inc
std
in
test
pop
in
shl
movlps
ret
sahf
gs
repz
sar
cmp
and
arpl
mov
pop
mov
in
pop
xchg
adc
fmuls
lret
sub
xor
pmuludq
or
mov
add
push
sub
xchg
sbbb
mov
stos
fucomip
mov
push
dec
ret
inc
sti
dec
mov
xchg
push
test
sbb
mov
and
loopne
lods
xchg
mov
mov
mov
fwait
jbe
sub
xlat
int3
pop
cmp
xchg
and
loop
xchg
int3
pop
in
jg
es
sbb
adc
xlat
xchg
push
xchg
add
pop
ret
xchg
insb
js
mov
fdivl
cmp
inc
int3
pop
mov
xor
xchg
sbb
sub
cmp
das
adc
xchg
cmp
pop
inc
push
into
js
dec
push
mov
and
inc
or
inc
clc
lods
or
push
cmpsb
inc
inc
leave
jp
bound
enter
dec
push
dec
inc
push
insl
or
fucomi
fwait
test
jnp
movsl
pusha
popf
mov
xor
lods
jnp
dec
sahf
jg
sahf
xor
jp
sub
test
pusha
cmc
jne
or
cmc
int3
pusha
jl
push
jle
xlat
mov
movsb
in
sub
sbb
fcomps
push
jnp
lahf
dec
cli
and
loop
mov
dec
ret
xchg
hlt
fs
xor
mov
sahf
rol
jle
mov
dec
and
roll
lock
inc
rcrl
outsl
call
push
repz
fisttps
mov
lret
mov
jle
adc
mov
scas
test
lock
inc
je
dec
dec
adc
pop
in
cmc
out
mov
add
sahf
push
iret
cmp
xor
sub
xor
hlt
enter
add
test
xchg
sub
sub
xchg
xchg
add
mov
je
mov
add
add
aaa
sti
addr16
out
fidivs
ret
cmpsb
inc
aam
xor
add
add
add
js
sti
xor
or
repnz
inc
mov
sbb
ror
mov
gs
push
mov
mov
dec
addr16
pop
sub
js
jmp
outsb
ljmp
mov
add
sub
adc
addr16
inc
gs
incl
adc
into
inc
pop
int
mov
inc
cmpsl
loopne
inc
or
sbb
xchg
out
jnp
xor
cwtl
mov
push
sahf
jns
adcl
ds
jmp
fnstsw
idivl
mov
pop
scas
and
test
clc
mov
xchg
iret
fcmovu
push
test
lret
ret
jmp
out
in
jns
xchg
ss
xchg
pop
or
pop
fimuls
dec
in
js
and
inc
popf
aad
jae
dec
mov
pop
fdivs
sbb
pop
push
ret
adc
mov
cmp
rclb
sub
js
rolb
ljmp
out
sbb
rcll
sub
mov
xor
mov
sbbb
add
pop
or
or
xor
bound
lea
fldcw
scas
mov
cmpsl
dec
dec
in
dec
cmpsb
jbe
pop
stos
filds
adc
mov
adc
out
shll
pop
clc
clc
fisubl
je
fmulp
ficompl
mov
sbbl
jecxz
les
push
test
push
test
mov
push
inc
and
je
shrl
mov
and
add
sbb
out
movsl
inc
mov
xor
cmc
dec
fdivp
mov
popa
mov
xchg
fldenv
aas
clc
add
shrb
lcall
mov
and
push
dec
das
test
cmpsb
in
and
fsubr
shrb
pop
fs
add
shlb
popf
sbb
add
cmp
cmp
jo
mov
ficompl
jecxz
ret
les
sub
mov
jmp
pop
xor
and
rorb
mov
push
inc
pusha
lock
cmpsb
jnp
push
sbb
call
arpl
xor
aad
in
stos
movsl
push
popf
dec
shlb
dec
cmpsb
leave
mov
xchg
call
jmp
rcrl
daa
int3
cmp
mov
pop
and
pop
rol
pop
pop
mov
sbb
test
pop
hlt
clc
sub
out
into
fmul
in
rcr
xchg
dec
push
jb
mov
sbb
mov
mov
cmp
and
dec
cs
imul
xchg
jge
mov
push
or
adc
mov
cmp
mov
cmpl
test
xor
pop
mov
fwait
fwait
cmp
mov
ret
sub
pop
or
pushf
cmc
xor
test
push
and
adc
adc
cli
out
orl
pop
or
jge
mov
jmp
mov
mov
scas
dec
lcall
imulb
xor
push
mov
xchg
dec
sti
xor
dec
cmc
push
test
fimuls
xchg
mov
push
xor
aas
adc
add
lcall
in
mov
xchg
pop
loope
xchg
sahf
xchg
fwait
xor
cltd
mov
add
pop
mov
popa
pushf
and
xchg
out
dec
test
jae
into
ret
dec
addb
imul
push
js
popa
inc
jp
sub
out
xor
xchg
inc
push
aam
dec
mov
inc
dec
add
inc
fidivrs
mov
aas
inc
dec
imul
stos
stc
ret
pop
adc
jb
leave
pop
gs
xor
sub
js
jns
adc
sub
push
sti
shr
repnz
je
and
insl
fstps
ret
add
ss
cmpsb
xor
adc
push
insl
jnp
pop
test
and
enter
outsl
adc
inc
push
add
mov
pop
outsb
sti
rolb
sub
or
test
push
mov
pop
sub
inc
outsl
and
lds
cmp
ljmp
and
xchg
stc
es
cmc
dec
sub
cmove
clc
test
test
mov
or
cltd
mov
dec
xor
push
cli
jle
sbbl
xor
movsb
in
lock
add
add
out
sbb
repz
sbb
cmp
add
add
icebp
xor
addr16
clc
push
mov
or
dec
movswl
fnstsw
jns
in
adc
jns
lods
lea
mov
xchg
fcomps
mov
jno
pop
jnp
imul
pop
inc
ficomps
add
dec
mov
xor
jae
in
dec
push
jge
scas
dec
inc
or
mov
scas
and
icebp
popf
das
cwtl
loopne
adc
or
repz
test
or
repz
dec
nop
cmpb
in
stc
cmp
dec
test
push
jb
sbb
push
stos
xlat
fdiv
out
lahf
dec
inc
jge
mov
push
jb
push
and
fnstsw
jl
mov
add
sub
iret
mov
jecxz
shll
mov
adc
adc
mov
repz
stc
ds
jbe
loop
lcall
cltd
je
and
jp
test
ds
out
xchg
data16
lcall
ret
jge
lret
in
sarl
mov
jbe
out
mov
xchg
mov
cmc
sub
jle
aas
cmpsl
test
in
pusha
xchg
addb
cmpsb
inc
sub
xor
cmpsl
sbb
sub
mov
mov
jmp
fiadds
fnstsw
stos
inc
mov
cmp
enter
jge
fisubl
sbb
sti
fcmovnbe
clc
cmpsb
rol
adc
das
cmpsl
cmp
push
adc
repnz
xor
cli
pop
jp
mov
out
fwait
ds
and
hlt
insb
pop
mov
cmp
inc
xchg
loope
call
daa
mov
xchg
mov
idiv
stos
add
sub
ljmp
fstpl
mov
sbb
popf
insb
add
popa
adc
ds
cmp
xchg
dec
and
out
data16
test
lods
mov
push
jbe
cmp
add
push
mov
clc
jg
cmpsl
in
iret
std
pop
jns
inc
je
xchg
rorl
jmp
adc
add
addl
fnstsw
in
out
xchg
out
cmp
ret
sbb
repnz
shlb
scas
cmp
inc
push
sbb
out
lcall
pop
mov
test
je
push
mov
aas
sbb
incb
dec
imul
add
sbb
xor
popf
das
cld
outsl
aas
jb
xchg
jmp
js
sub
lret
dec
jo
xchg
push
and
js
pop
lea
std
out
dec
decb
lahf
movsl
pushf
add
out
in
mov
mov
int
sbb
test
addb
pop
and
aad
inc
aas
pop
xchg
and
jmp
fs
fldl
cmp
xor
loope
jns
imulb
add
aas
mov
fldpi
filds
les
mov
pop
mov
das
or
push
push
add
movsl
inc
mov
push
nop
in
in
xor
fadds
jg
ret
mov
and
mov
pop
lods
std
sti
add
cmc
adc
inc
cld
cs
test
mov
add
xchg
add
lret
mov
lods
dec
add
jmp
repz
pop
jg
push
and
xchg
mov
jo
pop
or
push
pop
aam
push
mov
push
mov
test
imull
call
xchg
add
out
mov
cmp
je
cmpsb
push
outsb
jecxz
fs
sbb
jmp
pop
jns
xchg
pop
inc
repz
pop
xor
xor
das
and
lret
jns
push
hlt
test
in
lock
dec
dec
add
lods
lea
insb
sahf
mov
mov
sbb
pop
std
pop
mov
in
fidivrs
je
sbb
pop
popa
mov
add
ljmp
push
sbb
aaa
jno
fs
mov
xchg
lds
sbb
inc
fldenv
or
fidivl
cmp
jl
jbe
cmp
jmp
xor
inc
scas
sub
jge
push
jl
pop
les
pop
bound
lret
inc
in
fadd
dec
adcb
sub
aas
push
push
pop
xchg
addb
push
or
inc
xchg
shr
out
loopne
ja
nop
lret
jns
rorl
add
inc
outsl
mov
ret
nop
add
push
xor
cmp
mov
mov
add
mov
add
add
mov
sub
cmp
add
add
add
testl
xchg
dec
sbb
sahf
pop
out
xchg
pop
or
cmp
stc
xchg
dec
xchg
outsb
cmp
mov
cld
in
imul
jmp
xchg
lret
or
pop
cmp
aaa
fsubl
sub
ret
je
xchg
mov
mull
or
scas
mov
adc
lret
jnp
mov
xchg
mov
inc
cld
popa
movsb
jo
xor
pop
add
sbb
ljmp
addr16
and
cmp
dec
adc
sub
fisubl
xchg
fxch
sbb
fists
repnz
xchg
inc
pop
mov
push
aas
ljmp
and
or
jecxz
or
aaa
and
cmpsb
out
insb
and
cmp
out
or
popf
adc
mov
pop
loopne
addr16
out
int3
xor
test
jo
lahf
jl
xor
sbbl
dec
mov
jns
inc
cld
shlb
mov
aas
xchg
pushf
addr16
sbb
sbb
jno
jne
mov
inc
or
imul
jo
mov
inc
xchg
mov
sub
je
lret
sbb
mov
mov
pop
cmpsl
jle
pop
sub
lods
mov
pop
fbld
jl
faddl
test
stos
roll
stos
jb
ja
inc
push
push
cmp
scas
int3
pop
sti
das
aam
and
rcr
mov
push
push
adc
mov
shlb
lock
add
sub
ret
outsl
lcall
lret
xor
insl
inc
je
cs
fwait
rsm
mov
jl
leave
nop
jl
xchg
cs
je
loope
sbb
testl
xor
dec
push
cltd
inc
mov
rorb
out
and
xchg
insl
push
adcl
rcrl
dec
pop
test
xchg
jecxz
lret
dec
ja
outsb
pusha
and
jns
les
mov
jl
jne
imull
ja
ljmp
pop
sahf
mov
adc
ja
aam
ljmp
xchg
push
sarb
dec
mov
mov
lds
bound
xorb
pop
dec
mov
cltd
in
mov
sbb
pop
sti
pop
or
test
aad
mov
int3
aaa
clc
aas
push
push
daa
xchg
arpl
lods
or
lahf
and
mov
insl
adc
cs
stos
pop
push
push
test
inc
dec
cmpsl
mov
out
scas
adc
adc
push
sbb
sub
mov
xor
cld
adcl
das
fs
daa
scas
push
cmp
enter
adc
or
idiv
pop
outsl
xchg
or
fs
outsl
pop
sbb
mov
inc
dec
push
xchg
pop
ds
jg
or
dec
xchg
adc
xchg
push
xor
cmp
mov
pusha
adcb
xchg
and
and
dec
test
push
addr16
decl
ds
cmpsl
push
pop
divl
pushf
xchg
add
addr16
push
xor
xor
sub
jge
sti
mov
jp
dec
add
pop
xchg
or
fldt
mov
inc
stos
pop
call
imul
sbb
add
xchg
fadd
jecxz
inc
insl
dec
jge
sar
loop
inc
sbb
mov
mov
ss
xchg
add
cmpsb
mov
incb
leave
and
ja
pop
and
fists
outsb
cmpsb
pusha
insb
sbb
cmp
sahf
add
scas
or
sbb
ds
movsb
sub
mov
mov
test
pop
shll
inc
mov
scas
sbbl
mov
inc
testb
popa
and
or
xor
cltd
fnstsw
mov
aad
jne
jecxz
pop
lret
int3
sbb
nop
bound
test
div
inc
popf
rclb
rolb
ja
enter
in
xchg
adcb
pop
push
lock
sbb
test
mov
enter
xor
int
mov
mov
mov
mov
in
clc
ret
jge
popa
lods
pop
and
int
popf
inc
loope
pushl
scas
bswap
jge
jmp
push
cltd
fsubs
mov
pop
lahf
mov
sbb
or
loop
jp
and
scas
mov
popa
mov
xchg
loop
cmp
xchg
aaa
push
push
clc
fadds
arpl
ljmp
push
orl
mov
adc
addl
adc
dec
negl
mov
sub
cwtl
int
inc
add
hlt
add
add
ss
pop
mov
nop
or
adc
mov
dec
push
ljmp
ret
imul
dec
sbb
lret
mov
bound
xor
inc
js
mov
add
pop
xor
push
push
idivb
lock
mov
outsb
mov
xchg
and
push
xor
ljmp
cmp
cmp
cwtl
push
setns
enter
or
ret
inc
pop
popa
addb
sbb
inc
lahf
cmp
movl
stos
loop
enter
loopne
lods
inc
mov
sub
cmp
movsb
mov
hlt
cmp
pushfw
or
enter
add
sbb
pop
dec
adc
push
sub
jb
jnp
pop
dec
xchg
into
lock
fidivrs
fisubl
cmp
lahf
rclb
sub
push
and
adc
lar
jp
loopne
loop
fdivp
sarb
mov
lock
lds
movsl
outsl
scas
jne
xchg
push
outsb
stc
xlat
insl
or
xchg
pop
mov
out
dec
popf
inc
jmp
pop
sub
lret
mov
fistl
in
sub
mov
inc
sub
mov
mov
sbb
xchg
out
cmp
dec
sub
mov
mov
jle
mov
cmp
or
cmp
in
aas
dec
loope
jno
inc
in
outsl
add
or
imul
out
hlt
sub
mov
cli
iret
jo
fs
dec
jb
shrb
pop
pop
std
pusha
outsl
cmp
add
mov
ss
and
repnz
mov
add
adc
xchg
adc
mov
xchg
arpl
leave
inc
movsb
sbb
and
jnp
lcall
hlt
inc
inc
imul
int3
inc
in
adc
loopne
icebp
push
jnp
lret
lret
pusha
popf
xor
or
lret
andb
cwtl
sub
aad
out
test
sahf
inc
adc
push
ljmp
data16
pushw
lds
push
jle
dec
sbb
shr
rcrl
dec
dec
xor
cli
movsb
in
fdivrl
mov
rorb
ret
mov
fisubs
pop
lcall
fs
xor
jno
dec
adc
ret
or
add
ret
xorb
pop
aam
push
leave
mov
cli
jne
cmovae
xchg
movaps
in
inc
inc
in
ret
shlb
sbb
jae
lods
les
bound
inc
mov
stc
mov
jge
push
sarl
pop
mov
movsl
popa
aas
popa
fistps
iret
in
xor
movlps
jnp
cld
das
lcall
lds
dec
pop
cli
enter
cmc
in
mov
out
inc
sub
arpl
push
dec
add
adc
jle
das
scas
xchg
xor
cmp
mov
or
push
adc
xor
outsl
xor
inc
mov
adc
in
mov
xor
gs
sub
jnp
imull
mov
dec
jno
xchg
gs
cwtl
dec
xchg
adcl
push
stc
xchg
das
inc
insl
lret
fwait
sub
nop
inc
lahf
clc
pop
fstps
decb
push
mov
addl
sbb
pop
jecxz
das
pop
cli
in
shrb
nop
cmp
xchg
je,pt
adc
inc
int3
out
idivb
cld
aam
sub
out
sbb
cmpsl
mov
movsl
in
cmp
test
imul
xchg
dec
scas
daa
or
pop
add
pushf
pop
and
cmp
lea
rolb
sbb
daa
mov
subl
lods
push
xor
stc
adc
jmp
and
iret
xor
dec
xor
cmc
repnz
pop
cmpsb
cmp
jge
or
movsb
inc
push
xor
mov
lods
lcall
mov
jae
imul
cmp
call
sub
dec
jb
daa
dec
int
popa
jb
aam
pop
movsl
loopne
jns
sbb
jne
and
ret
sbb
dec
xchg
xchg
adcb
pop
cltd
jecxz
jecxz
inc
pop
and
dec
adc
fimuls
sbb
scas
sub
and
in
cmp
and
gs
jnp
fidivl
xor
push
adc
mov
and
add
add
ds
fdivp
cld
ds
daa
cmp
mov
or
add
hlt
add
add
xor
popa
sub
inc
mov
sub
nop
cwtl
in
lahf
jno
fildll
repnz
fcoms
scas
mov
subb
and
sbb
ljmp
popf
push
cmp
popf
fs
push
adc
out
add
dec
jno
adc
outsl
dec
mov
and
cwtl
push
in
dec
jge
icebp
in
out
data16
sub
out
push
pop
enter
testl
lock
push
push
and
xor
xchg
push
lods
mov
pop
insl
cmc
add
pusha
mov
mov
dec
add
hlt
sbb
fisubs
popf
lock
loopne
xchg
dec
jge
mov
repnz
aad
loop
js
adc
stos
sub
cmpl
mov
lea
cmp
push
pop
pop
sahf
add
clc
inc
sub
mov
lods
inc
push
loop
and
aad
sar
jbe
arpl
push
sub
mull
sub
jnp
les
sbb
cmp
testb
mov
fbld
jb
dec
inc
push
dec
mov
xchg
es
stc
lea
xchg
xor
and
pop
scas
or
subl
push
sahf
push
jg,pn
test
cmp
out
icebp
into
and
xchg
jnp,pt
decb
ja
xor
mov
and
mov
or
dec
xchg
test
dec
loop
pop
inc
xchg
jge
inc
insb
xchg
clc
aam
data16
fsubrp
sub
flds
sti
dec
add
mov
jo
push
ja
mov
or
int3
in
xchg
jecxz
scas
or
add
cmc
inc
fld
sbb
or
popf
mov
or
jbe
xchg
sub
cmp
pop
inc
or
lock
or
filds
sbb
pop
lret
in
mov
mov
jnp
into
inc
mov
inc
lock
fnstsw
cmc
es
in
mov
lock
dec
add
int3
cmp
sarl
daa
mov
fs
pop
inc
adc
mov
or
mov
lahf
call
test
fisttps
mov
xchg
sbb
push
dec
lcall
lods
adc
pop
popa
pop
adc
iret
adc
movsl
sbb
out
cmpsl
sarl
adc
dec
push
imul
lea
mov
mov
ret
xor
adc
push
ds
fwait
pop
mov
jb
mov
callw
add
or
fcmovb
sbb
cmc
mov
flds
cmp
mov
mov
mov
cli
mov
cmp
int
sti
jb
mov
aam
jecxz
mov
sbb
pop
call
xor
movsl
mov
in
add
sbb
repnz
xchg
xor
fs
sbb
pop
loope
jno
push
pop
xchg
es
xchg
push
cmp
cmp
in
ret
cmp
in
xlat
cmc
iret
outsl
and
ror
mov
mov
mov
test
pop
mov
add
andb
lods
fadd
clc
mov
xor
sub
cwtl
xchg
add
inc
sub
scas
adc
shlb
mov
incb
lods
stc
fcmovb
popf
rclb
cmpsl
inc
test
fwait
jge
or
push
push
jne
dec
sub
jmp
xlat
inc
xchg
movsl
sti
lahf
repz
sub
jecxz
sbb
insl
or
lods
aas
add
push
fistl
sbb
jle
fwait
test
mov
out
dec
dec
sti
pop
lret
leave
scas
dec
fsubl
jge
int3
idivb
int3
jp
sub
iret
inc
les
pop
test
push
lret
and
or
inc
stos
out
fbld
rcll
add
push
aam
lea
mov
stos
add
push
sub
mov
outsl
stc
fwait
xchg
out
cmp
dec
loopne
jnp
mov
imul
add
inc
xor
fcomps
das
pushf
xchg
rcll
jl
jmp
ja
fs
xchg
repz
push
adc
inc
in
xlat
xor
sbb
arpl
cmp
dec
jno
push
outsl
inc
out
pop
sub
inc
push
fnsave
jp
popa
test
lret
fcomps
add
add
mov
pop
xchg
pusha
push
pop
mov
jge
jl
iret
cmp
notl
scas
lods
rclb
adc
xor
pop
imul
jl
inc
bound
jp
insl
mov
fldl
std
pop
mov
inc
add
add
jnp
xor
jg
sbbl
pop
dec
add
hlt
add
add
mov
pop
add
jns
insb
jge
xor
pop
jl
lret
mov
push
jne
stos
pop
imul
mov
outsl
inc
mov
inc
fwait
icebp
lret
mov
push
cmp
stos
mov
pop
mulps
push
mov
test
jns
out
into
inc
fwait
cmpsb
inc
lea
mov
les
stos
cmp
lods
scas
addl
dec
adcl
cmp
ja
out
scas
jge
mov
lcall
mov
nop
sub
test
add
and
leave
les
dec
fsubs
jecxz
jno
sub
addr16
cs
and
add
pop
sbb
add
xchg
ja
jnp
lea
idiv
or
iret
mov
das
fimuls
daa
pushf
aaa
insl
fbstp
insl
repz
insl
add
out
sbb
dec
mov
jb
mov
push
xchg
dec
and
mov
inc
xor
xor
add
fdivrl
push
push
fwait
sahf
filds
mov
out
or
push
addr16
les
je
lahf
nop
pop
ficoml
push
je
inc
aad
hlt
add
mov
jbe
dec
ret
jmp
sahf
jmp
jns
out
push
imul
add
push
loope
pop
cmc
mov
sub
xor
cld
rclb
dec
inc
dec
mov
mov
jo
pop
std
cmc
xchg
push
inc
sahf
lret
xchg
das
sti
push
scas
xor
outsb
dec
icebp
xor
sahf
mov
mov
dec
mov
mov
jns
fwait
jns
stos
push
sti
push
xlat
nop
mov
in
push
xchg
lods
pop
xchg
stos
xlat
fwait
inc
fadds
cltd
bound
or
cmp
andl
pop
test
sub
adc
packssdw
les
mov
cli
mov
fisttpl
daa
sbb
bound
in
jle
xchg
ljmp
aas
mov
lcall
outsb
xchg
jnp
mov
mov
lahf
or
int3
mov
cmc
gs
mov
ljmp
shlb
add
dec
jo
push
mov
in
pop
jno
sub
xor
outsl
fs
push
push
pusha
inc
pop
mov
iret
addr16
aas
fwait
inc
and
and
dec
in
mov
mov
push
inc
pop
cmpsl
inc
imulb
adc
in
sahf
ret
shll
stos
icebp
fsubs
pop
sub
cwtl
xlat
pop
hlt
and
rcll
xchg
push
cmp
jmp
hlt
and
sub
mov
fdivs
cwtl
addr16
mov
add
out
xchg
fdivs
mov
ret
stos
mov
pop
out
in
sbb
mov
push
test
data16
xchg
pop
pop
push
out
lea
ss
test
mov
jl
cmpsl
popa
lcall
xchg
sti
push
pushf
push
dec
push
xor
or
lea
pop
cmp
add
shlb
or
cmp
icebp
or
xlat
lods
jo
das
dec
jbe
add
movsl
and
cmc
sbb
lret
jmp
mov
sbb
mov
in
xchg
jb
nop
mov
ljmp
push
inc
push
dec
cltd
jae
in
sub
xor
mov
adc
call
pop
scas
xor
stc
out
xor
jg
shrb
jp
xchg
imul
lret
ficoms
or
ds
xor
pop
in
jne
imul
or
cli
add
dec
das
add
out
jnp
fisubl
cld
fucomi
mov
xchg
adc
sub
outsb
fldenv
nop
jmp
jmp
and
in
jns
iret
inc
push
loop
shll
mov
jecxz
popf
and
dec
fisubrs
mov
outsl
in
pop
aas
pop
lds
icebp
dec
sahf
ljmp
scas
pushf
xchg
test
xor
pushf
rcll
cmpsb
sbb
push
repnz
push
repz
adc
cld
dec
and
subb
and
jle
xor
iret
scas
xchg
sbb
in
pop
xchg
add
xor
lcall
sbb
pop
pop
jns
mov
imul
scas
lahf
in
in
jbe
flds
xor
mov
xor
stc
xchg
sti
ror
out
dec
dec
mov
sar
adc
test
add
clc
shll
xor
loopne
int3
jmp
mov
into
or
pop
mov
repz
xchg
jo
loop
mov
jmp
cli
mov
fisubrl
cmpb
pusha
fs
stos
sub
add
add
or
xchg
jmp
adc
pop
shrb
push
add
hlt
add
add
ds
or
scas
mov
mov
pop
sbb
cmp
daa
rcll
repz
imul
test
sub
inc
cltd
icebp
daa
pop
push
dec
es
xchg
sti
sub
cmpsl
pop
out
mov
dec
fisubrs
out
and
rorl
dec
mov
mov
shl
mov
adc
leave
cmp
scas
mov
fimuls
sbb
fwait
ror
incb
or
lods
lret
mov
jo
sub
xchg
sub
sahf
cmp
fimuls
arpl
push
add
shll
test
push
fwait
es
out
out
dec
idivl
popa
jne
daa
cmpl
insb
pop
jg
cmpsl
lret
sbb
dec
ret
aas
xchg
mov
idivb
dec
xor
shll
adc
aaa
mov
fwait
or
sub
aaa
adc
lods
xor
jg
add
arpl
call
or
stos
lret
xchg
sbb
or
out
cmp
fcoml
dec
loop
push
mov
lods
inc
or
inc
and
push
mov
jbe
ret
jmp
mov
sti
stos
inc
aaa
add
lret
in
dec
fsubrp
int
leave
rorl
or
loop
push
sbb
adc
adc
push
add
out
mov
mov
xchg
adc
mov
sub
nop
jns
daa
stos
dec
daa
inc
mov
push
sbb
sbb
mov
stc
and
movsl
pushf
test
clc
jle
sub
push
and
cmp
inc
push
mov
outsl
lods
mov
pop
ljmp
and
ror
xchg
push
aam
mov
outsb
ljmp
negl
int
ficoml
clc
push
jno
lret
jns
daa
sub
inc
xlat
mov
push
es
rcrb
int
lea
leave
adc
ss
sbb
xlat
in
cld
aad
jmp
push
jno
inc
dec
pop
pop
push
inc
out
xchg
sar
pop
scas
mov
inc
movsb
sbb
jecxz
shrl
push
cmpsl
push
lock
adc
adc
stc
adc
mov
cmp
dec
push
mov
pop
push
xor
cmp
sbb
mov
cmp
gs
fsts
push
test
xchg
sbb
bound
inc
dec
dec
pop
push
out
jbe
pop
into
inc
or
lock
mulb
mov
add
call
out
js
mov
fsub
push
jno
in
pushf
cltd
ret
cmp
add
jmp
incl
adc
enter
sbb
sti
cmp
inc
inc
fcoml
imul
imul
test
push
outsl
sbb
jns
push
fildll
int3
out
xor
and
shrl
test
mov
outsl
test
aam
xor
adc
lock
stos
sbb
sti
ja
sub
pop
daa
pop
shl
pop
sub
scas
leave
cmp
jae
cmp
jnp
inc
jecxz
ljmp
pop
outsl
pushf
fsubr
lahf
mov
movsl
sub
std
loop
lods
xor
adcb
mov
imul
pop
outsl
mov
dec
lret
add
jmp
test
inc
sbb
and
je
andb
out
cmp
iret
inc
pop
cmp
loope
pop
mov
popa
push
enter
fmull
adc
orl
and
adc
xor
test
push
jp
dec
sbb
divl
cmp
jl
xchg
pop
inc
jecxz
lcall
loope
mov
dec
adc
pop
and
in
lret
inc
rcl
and
sahf
data16
cmpsb
or
sbb
and
jecxz
push
jbe
xchg
mov
lds
inc
aaa
adc
jge
lahf
test
vmovddup
jno
lock
rcrb
jno
lock
fldt
mov
imul
and
fnsave
or
pop
addr16
xchg
adc
movsb
jmp
jo
mov
cltd
pop
mov
inc
push
je
fstl
mov
ljmp
out
xor
and
fwait
popf
jl
je
lahf
mov
jns
lret
outsl
iret
xlat
jmp
cwtl
loope
shrl
aad
mov
inc
and
and
or
inc
int
cmp
enter
adc
dec
inc
fwait
xor
insb
int3
fsubs
push
call
lret
js
es
sbb
cmp
shrb
add
loope
loope
fistpll
adcl
imul
add
hlt
add
add
in
cli
btc
ret
and
add
mov
xchg
stc
out
loope
cmp
adc
in
bnd
fiaddl
xor
jmp
imul
ret
or
int3
int
movsb
shll
push
adc
ja
ret
pop
mov
repnz
push
pop
jns
dec
mov
sbb
fwait
xchg
mov
out
std
stc
add
mov
pusha
xor
xor
imul
sub
cltd
lret
push
mov
mov
xchg
push
insb
inc
cmpsl
dec
nop
mov
lods
js
jp
xabort
pop
sbb
stos
inc
and
pop
adcl
incb
arpl
push
fdivrl
addr16
mov
xor
mov
add
leave
dec
xor
adc
into
add
push
in
sub
adc
ret
ljmp
stc
ljmp
mov
pop
add
js
fnstsw
xchg
add
inc
ficoms
mov
xchg
nop
ret
arpl
cmp
daa
scas
mov
rolb
jg
daa
jmp
mov
sbb
jbe
mov
or
fidivs
fisubrl
test
int3
int
call
fldcw
jp
je
jb
sbb
and
ss
int3
lret
in
adcl
xchg
dec
in
push
hlt
loope
pop
mov
call
push
adc
std
mov
mov
xchg
mov
insl
fsts
jns
sub
push
data16
inc
into
std
and
loope
enter
mov
aam
mov
jbe
ret
add
cmpsb
fucomp
xor
int3
in
or
mov
mov
mov
mov
mov
xchg
mov
fisttps
mov
add
jg
dec
adc
dec
mov
push
xor
pop
dec
lcall
xor
mov
or
xor
rolb
cmc
pop
jg
lock
jl
pop
inc
ret
mov
or
pop
movsb
jne
dec
rolb
push
ds
ret
js
jl
lock
and
fwait
xchg
xchg
mov
int3
fdivl
fnsave
popl
jle
cmpsl
scas
xchg
mov
or
jae
sub
fmuls
imul
or
and
mov
push
inc
mov
xchg
cmp
hlt
popf
jecxz
mov
pusha
push
leave
aas
push
jl
or
sti
rol
bound
in
enter
mov
iret
push
adc
adc
push
test
mov
cmp
xchg
xchg
pop
in
seto
jecxz
insl
push
xchg
stc
mov
xchg
xorb
adc
insb
std
cmp
lahf
arpl
dec
lret
inc
fnstcw
clc
push
dec
test
inc
daa
add
out
push
dec
mov
daa
sub
fdivrs
push
adc
fs
dec
adc
negl
xchg
dec
ret
mov
into
test
and
in
sub
popa
xchg
cmp
cmp
ljmp
int3
dec
xor
cmpsb
out
push
sub
push
enter
xor
mov
sbb
inc
xor
jge
test
adc
mov
hlt
sub
push
inc
test
loopne
dec
mov
shl
inc
xor
rcll
and
ljmp
ret
xlat
fwait
repnz
sbb
push
loop
pop
jnp
cld
rcl
test
loop
jecxz
insb
push
pop
and
cwtl
xchg
out
dec
mov
fisubrl
ret
mulb
add
mov
xchg
out
push
push
mov
xor
jg
out
or
sbb
push
pushf
and
pop
push
push
dec
adcb
inc
shrb
sub
testb
mov
and
mov
and
mov
mov
aas
cmpl
sub
hlt
fiaddl
jg
mov
jle
daa
add
iret
sbb
mov
push
mov
jne
push
mov
ss
or
aas
repz
dec
jmp
mov
xchg
cmp
and
or
popa
orb
xchg
jns
ret
out
sbb
jns
add
push
adc
fidivrl
stc
inc
mov
cli
dec
mov
jecxz
and
jns
mov
shlb
add
add
loope
xchg
out
notl
xchg
ja
xor
add
add
pusha
or
mov
sub
mov
add
fadds
nop
jle
mov
rclb
mov
jb
mov
push
nop
pop
bound
adc
mov
add
imul
popa
and
push
bound
cmc
nop
daa
dec
add
cmp
xor
jnp
shlb
ja
mov
popl
add
negl
jnp
inc
stos
pop
mov
sbb
ja
sahf
test
push
into
mov
into
jp
dec
jmp
jb
rcrb
mov
cli
jmp
dec
mov
add
mov
subb
jo
mov
inc
pop
push
mov
cld
and
mov
loope
test
mov
imul
push
xor
xchg
inc
lock
dec
subb
ss
jl
mov
jle
fisttps
or
loop
mov
bound
inc
rolb
daa
xor
fistps
pop
or
bound
shl
inc
ret
and
pusha
push
repnz
inc
daa
sbb
xchg
adc
stos
sti
arpl
jns
jmp
xchg
lret
lods
jno
xchg
cmp
pop
adc
sub
pusha
jbe
shlb
enter
xchg
gs
out
mov
cmp
cmpl
imul
xor
test
mov
pop
mov
mov
mov
and
xchg
aas
adc
insl
fnstenv
sub
fs
dec
dec
out
in
je
jl
xchg
xor
ja
out
ljmp
lods
jae
out
jecxz
xor
jmp
leave
jae
out
ja
lea
test
mov
xor
cmpb
push
push
add
stos
lods
movsb
rorl
mov
ficoms
dec
stos
dec
call
nop
into
pusha
lods
xor
cmc
push
clc
ljmp
sub
jo
sub
jnp
mov
out
jecxz
jp
add
mov
repz
mov
shll
xor
mov
stc
sahf
stc
cmp
jmp
push
cmp
push
test
push
push
sbb
ljmp
ds
push
pause
jae
lock
pusha
xchg
pop
mov
jge
and
insl
sbb
or
test
in
lret
jp
and
sahf
inc
dec
pop
or
lahf
into
enter
andl
xchg
pop
jl
pop
pusha
add
sbb
push
outsl
rorb
push
xchg
xchg
negl
and
dec
shrb
ret
adc
jno
loope
icebp
cmp
std
sti
xor
cmpb
gs
pop
insb
ds
out
ret
pop
ljmp
jnp
adc
filds
aam
inc
adc
cltd
mov
in
add
mov
pusha
int3
or
dec
mov
pop
aaa
andb
pop
pusha
dec
jne
mov
push
xchg
sbb
pusha
or
inc
add
lret
sbb
cmpsb
into
push
cmp
push
jae
and
fcomps
out
sbb
xchg
or
shll
loope
and
cmp
test
mov
jns
sbb
jo
add
xchg
mov
stc
lods
xor
inc
pop
out
cli
fidivl
arpl
lret
fwait
and
mov
pop
add
daa
rol
gs
fnstenv
sub
xor
or
fimull
jmp
xor
mov
sbbl
inc
lods
xchg
mov
hlt
int
adcb
call
dec
les
jg
and
ja
inc
fbld
push
into
and
mov
js
movsb
push
addr16
mov
jecxz
sub
mov
cmc
test
fimuls
mov
mov
out
sbb
cmpsl
or
ret
es
bsr
sub
mov
loopne
aad
mov
lret
add
or
xor
push
movsl
or
or
addb
fbld
and
hlt
dec
xchg
jp
data16
pop
xadd
push
inc
fidivs
mov
aam
adc
int
call
scas
shlb
or
add
ss
je
cmp
in
mov
outsb
fldcw
fs
jnp
dec
xchg
cmp
cwtl
dec
scas
lds
loop
ret
inc
xchg
sbbl
mov
jne
test
loope
adc
push
push
mov
std
cmc
add
add
add
and
cmp
loope
mov
nop
or
pop
add
hlt
add
add
xchg
mov
fbld
push
fsubl
shlb
dec
aad
fisubl
arpl
fidivl
daa
push
std
jnp
pop
mov
cmpsb
mov
jmp
mov
xchg
ljmp
add
ret
add
xor
push
imul
sbb
fwait
loop
std
mov
pop
lea
test
hlt
out
iret
sbb
jl
mov
mov
dec
loop
daa
int
xorb
push
or
imul
push
sbb
pop
ret
and
xor
outsl
repnz
inc
mov
bound
mov
shrl
xchg
nop
jmp
mov
dec
adc
outsl
les
sbb
stos
adc
mov
sub
ljmp
out
cltd
in
push
pop
and
daa
push
jg
testl
xor
fwait
adcl
jbe
sbb
pushf
adc
test
hlt
mov
sbb
mov
mov
test
popl
mov
cmpsl
and
out
jmp
fstps
inc
mov
pop
insl
mov
sar
push
cmp
mov
xchg
iret
pop
shl
mov
jbe
mov
shrl
arpl
imul
cmpsb
cmp
jle
adc
pop
jge
cli
mov
inc
jge
or
dec
adcb
testl
loop
sub
adc
cmpsb
xor
ss
mov
xlat
xor
xchg
hlt
shr
xor
push
jnp
jl
xchg
add
int3
pushf
aas
movsl
lea
cs
pop
test
imul
pop
xor
dec
shll
add
adc
iret
das
or
jns
sbb
in
rcrb
sbb
dec
mov
mov
repz
fs
out
lock
sub
test
and
cmp
incl
lret
cmpsb
push
ljmp
test
scas
inc
push
in
int
push
add
mov
cmp
adc
ljmp
outsl
outsl
push
jae
push
rolb
lds
add
jl
jecxz
cmpsb
or
out
dec
adc
fcoms
fs
fistl
jbe
cwtl
sub
test
jp
lcall
jne
xchg
add
mov
out
dec
sti
sbb
std
inc
add
xor
test
xchg
mov
dec
nop
pop
jbe
cmp
xor
add
jno
adc
adc
push
les
xchg
bound
and
loope
in
mov
inc
lea
mov
stos
cmpsl
mov
divb
movl
mov
andl
push
stos
mov
insb
xchg
clc
icebp
cmpsb
sti
and
or
ret
xchg
int3
push
mov
and
jbe
pop
push
mov
or
nop
movl
addl
insl
adc
push
jno
xor
adc
sti
imul
out
out
clc
in
test
sub
ret
mov
mov
adc
shlb
fiadds
mov
je
bound
mov
arpl
add
movsl
xor
je
dec
mov
into
jecxz
jg
pushl
mov
imull
in
aam
and
adc
sbb
cmp
adc
xchg
nop
adc
bound
and
push
cs
call
fdivrl
push
in
into
inc
cmc
mov
ljmp
enter
push
ret
scas
sbb
gs
movsb
push
cmp
scas
adc
mov
adc
push
pop
or
and
jl
jne
cs
adc
xchg
scas
jl
push
fmul
aad
mov
movsb
mov
test
sbb
push
adc
push
pop
sub
daa
dec
dec
push
daa
cmp
push
xchg
mul
and
je
jo
push
cmpsb
ret
mov
push
pushf
mov
adc
dec
fistps
mov
sbb
fisttpl
and
stos
cs
adc
inc
add
pop
fisttps
jge
insb
mov
add
js
out
xor
sbbb
in
push
inc
jns
sbb
cld
outsl
mov
cld
clts
and
dec
push
mov
push
lods
test
in
push
popf
cs
aas
cmp
rcr
add
int
adcl
std
sub
into
xor
shrb
push
or
aaa
scas
jo
pop
add
add
jg
mov
jp
ret
lods
sarb
push
sbb
add
add
sbb
sti
and
cwtl
add
icebp
and
push
lock
add
addl
or
jns
inc
dec
in
push
mov
cltd
aas
mov
mov
xor
pusha
cwtl
iret
push
fstpt
fbstp
sti
sbb
cmpsl
test
js
adc
sbb
xor
push
pop
xchg
leave
in
mov
mov
xchg
inc
int3
sub
lret
sbb
rep
ret
fsubrs
cld
aam
inc
dec
mov
push
ljmp
sbb
lock
ds
mov
jl
pushf
cmp
out
pop
das
xchg
pop
cmc
lds
push
test
insl
test
icebp
pop
daa
push
flds
mov
fchs
or
cwtl
jp
push
lcall
and
in
jl
sahf
sbb
cmp
hlt
pushf
inc
dec
mov
mov
sbb
loop
mov
andb
negl
addb
jo
into
fcmovnb
insl
push
push
pop
enter
inc
cmp
inc
fnstsw
push
lcall
dec
jns
lahf
addb
dec
movsb
xchg
mov
pop
sub
cli
xbegin
in
aas
fwait
xlat
pop
and
push
pop
jle
test
cmp
adc
pop
retw
cmpsl
inc
popf
hlt
mov
xchg
inc
addl
aas
jge
int3
push
pop
aam
lds
adc
sahf
fld
insl
ficomps
outsl
enter
push
jnp
adc
lea
mov
mov
pusha
loopne
cmp
mov
xchg
xlat
inc
inc
and
sub
fnstsw
mov
scas
sub
push
pop
mov
pop
inc
lcall
scas
loope
jge
mov
xchg
xlat
scas
xor
in
outsl
mov
lods
andl
jg
loopne
pop
xlat
shrl
mov
call
mov
insl
nop
mov
aam
adc
jbe
fdivs
push
ds
shll
jns
jns
in
mov
and
ret
cmp
iret
sbb
loopne
lock
insb
mov
fwait
clc
mov
outsl
xor
pusha
adc
test
add
es
test
daa
roll
xor
test
pop
mov
sarb
test
add
push
push
sar
cmc
lock
adc
mov
jbe
dec
jno
jl
sbb
ja
bound
insl
mov
jo
cwtl
sub
enter
pop
pushf
xchg
test
push
out
ja
add
cltd
sub
jnp
shll
insl
jmp
add
ja
pusha
jb
push
arpl
leave
repnz
push
cmp
xchg
mov
pop
cltd
mov
and
ljmp
and
cmp
xchg
jbe
mov
cmp
bnd
or
fwait
shrl
mov
inc
out
push
inc
add
push
in
or
sahf
pcmpgtb
pop
rcl
pusha
cltd
rcrb
sbb
stos
roll
sbb
jg
cltd
dec
push
push
lock
icebp
into
rolb
adc
jo
add
xchg
rorl
cmp
leave
adc
mov
mov
and
fisubs
inc
adc
movsl
call
nop
imul
dec
push
and
push
adc
add
mov
int
add
cmpsb
sti
cli
lret
jmp
adcl
push
jbe
adc
fidivrl
adc
cmp
pop
ret
lods
inc
ja
inc
popf
flds
or
lea
out
add
test
sarb
mov
icebp
add
adc
pusha
sbb
sahf
dec
lock
cmpsl
sarb
cmp
fisubl
in
das
pop
arpl
and
ds
push
pop
xchg
adc
insl
int
mov
xchg
es
xchg
lods
fsts
jp
pop
pop
sub
add
push
mov
loope
popa
ds
int3
aaa
stos
jnp
push
sbb
and
out
cmp
cmp
xchg
stos
inc
xchg
and
jmp
dec
and
pop
je
mov
and
mov
fwait
cmp
lods
fisttpl
sub
xchg
mov
jg
arpl
rol
dec
in
push
outsl
mov
cmp
lods
sbb
adc
leave
mov
sbb
or
outsl
jae
xchg
add
add
push
push
cmp
cmp
push
pop
mov
lahf
mov
add
hlt
add
add
bound
sub
ljmp
xor
xchg
mov
mov
cmc
inc
xchg
mov
xor
mov
orl
std
sbb
out
pop
adc
jbe
pop
jae
and
cmpsb
xchg
or
inc
push
mov
test
fsubl
jno
jp
out
lods
push
out
dec
sahf
and
pop
lock
cmp
scas
insl
xor
iret
xchg
lods
add
ja
std
movsl
pop
mov
or
adc
push
mov
fiadds
adc
shll
fnstcw
xchg
xchg
xchg
pop
fsubrl
mov
add
sarb
and
arpl
sub
push
pop
inc
pop
jl
negb
dec
out
into
nop
movsb
loop
dec
aad
mov
out
scas
lret
sub
gs
sbb
movzbl
mov
inc
nop
jg
dec
pop
stos
out
mov
xchg
mov
mov
test
cli
dec
lcall
scas
int3
inc
xor
push
mov
popf
mov
call
dec
mov
clc
cmpsl
in
mov
fstpt
insl
aas
mov
sub
shrl
iret
jl
stos
pop
pusha
stc
imul
sahf
xchg
and
fildll
sbbb
mov
lcall
mov
je
pusha
and
sub
xchg
call
ljmp
mov
stos
sahf
sarb
sub
push
mov
in
sarl
push
cltd
sub
loopne
mov
jge
sar
inc
sarb
xchg
iret
pop
and
inc
pop
repnz
out
fiaddl
jge
ds
int3
cli
adc
push
adc
in
cli
pop
sbb
xchg
jg
jle
adc
nop
int
mov
out
push
push
and
into
push
pop
jnp
fdivrl
fcompp
pop
test
push
cmpsl
in
das
test
loopne
fstpt
lock
push
aas
jmp
xor
sbb
fldl
pop
and
pop
mov
stc
insl
je
js
adc
sbb
cld
repnz
mov
pop
stos
sbb
fstp
pop
dec
mov
fidivrl
icebp
dec
loope
movsb
gs
ja
stc
into
repnz
or
outsl
call
dec
dec
int3
mov
int3
jmp
xor
xor
adc
in
xchg
jno
scas
test
inc
mov
dec
sti
orl
insb
mov
pop
sbb
mov
cmp
push
leave
mov
push
jmp
scas
push
xchg
add
hlt
adc
leave
imul
and
mov
xor
repnz
js
dec
xchg
out
rcrb
jecxz
in
jb
xchg
or
addb
inc
add
push
sbb
push
push
jmp
jg
xor
jmp
pop
xor
in
jg
cli
pop
add
out
dec
pusha
scas
ds
mov
jmp
xor
fisubrs
js
lods
cmp
sahf
outsl
fcmovb
lcall
mov
or
stc
cmpsl
mov
out
mov
jg
mov
fistpl
jmp
in
fmull
jb
mov
shll
je
ja
mov
sub
icebp
in
pop
and
xchg
cmpsb
cmp
sub
push
xchg
jg
jbe
es
xchg
sub
xor
cmp
pop
push
jb
sbb
addr16
or
dec
xchg
xlat
je
mov
pop
sbb
add
cmpsl
pushf
add
scas
in
nop
in
mov
imul
cmpsl
sarl
ret
in
add
pop
dec
adc
push
fstl
ljmp
add
dec
mov
inc
push
lds
loopne
int
or
sub
sahf
pop
mov
fnstsw
fadds
sbbb
negl
loop
xchg
addl
sub
lret
or
dec
inc
pop
or
jle
sti
bound
or
push
or
ret
les
movsl
enter
or
orl
fwait
cs
loopne
fstps
push
push
clc
mov
call
jns
sbb
lds
ftst
std
popa
and
scas
xor
push
pop
add
enter
in
jno
adc
or
xor
dec
std
loopne
sahf
add
mov
jnp
xor
mov
into
repnz
adc
rcll
stos
dec
xor
add
add
sub
jg
test
out
addb
add
hlt
add
add
sub
fwait
jp
mov
outsw
inc
pop
shrl
dec
push
jno
or
xchg
loop
movsb
sub
test
pusha
adc
add
cld
outsb
and
dec
fdivrl
les
stos
mov
dec
xor
push
mov
or
or
enter
lds
aaa
std
xchg
dec
mov
fldenv
shll
dec
mov
pop
lods
xchg
and
outsb
or
or
dec
ret
popa
jnp
push
hlt
cli
mov
jecxz
fstpt
mov
add
dec
mov
xchg
xchg
jnp
sub
inc
pop
notl
pop
inc
dec
xor
lods
xchg
mov
push
push
push
xchg
xchg
xor
and
ficoms
mov
mov
rep
sbb
paddsw
mov
aas
mov
jns
in
dec
fwait
int
sub
mov
pusha
pop
push
or
adc
pop
pusha
addr16
lret
out
in
xor
ficomps
push
mov
xchg
icebp
and
adc
sbb
fnstsw
hlt
fidivrl
stc
and
cli
arpl
es
dec
lret
pushf
lock
inc
sahf
imul
dec
jne
and
sarl
outsb
rcl
sbb
push
cwtl
mov
pop
push
cmp
sahf
cmpsb
call
add
jne,pt
add
push
push
scas
bnd
fcompl
fwait
mov
and
add
mov
int3
add
xor
dec
and
add
add
loope
or
cmc
fwait
cmp
lahf
fbstp
insb
or
dec
and
icebp
call
int
aas
mov
push
out
cmpl
out
and
cmp
cmp
pop
adc
jae
jmp
scas
fdivr
fidivrl
fidivs
ret
sub
sti
push
cmp
cwtl
jns
pop
mov
fwait
sub
lret
dec
xor
jl
insl
push
adc
mov
scas
arpl
mov
lods
jbe
jecxz
nop
cmp
mov
subb
mov
jle
xchg
lahf
mov
daa
sti
repz
push
fdivl
or
mov
into
cmp
rorb
jo
mov
std
ja
cmp
mov
or
dec
leave
into
pushf
pop
and
pop
loopne
test
cmp
push
adc
mov
stc
cmc
leave
push
push
test
loop
out
push
aas
xor
sub
pushf
jl
push
shll
sti
cmpl
sbb
sbb
mov
inc
cmp
adc
jmp
loope
les
aam
cmp
push
sub
or
lahf
mov
or
aad
aam
inc
pop
inc
aas
cmp
cvtpi2ps
addr16
addr16
sbb
fs
sub
movsl
out
sbb
daa
ret
pushf
xchg
and
xchg
push
push
pop
repz
and
out
and
ret
or
fld
pop
sbb
mov
fiaddl
cmc
mov
mov
jmp
jg
gs
push
or
mov
adc
lods
jnp
nop
or
inc
sbb
mov
mov
imul
dec
dec
push
sahf
repz
fildll
sbb
add
or
or
bts
push
sbb
push
leave
insb
pop
call
std
das
push
jge
fimuls
addl
leave
das
mov
xchg
or
xchg
ljmp
test
shlb
mov
mov
movsl
lret
pushf
add
inc
je
stos
clc
mov
arpl
cmp
ljmp
xor
js
lods
and
cld
lock
jmp
ljmp
jecxz
xchg
lock
pop
arpl
cmpsl
mov
mov
push
jno
out
aad
and
pop
push
mov
movb
push
pop
and
cmc
xchg
sahf
push
dec
fcomps
jno
pop
or
mov
cli
pushf
out
les
je
inc
mov
cmp
pop
dec
sub
mov
dec
jno
sub
nop
mov
mov
xchg
jne
test
jb
xlat
xchg
sub
sarl
pushf
mov
pop
js
xchg
jno
es
add
fldcw
clc
or
popw
pop
xor
lret
and
test
pusha
cmp
scas
cvttps2pi
jle
push
popf
sbb
in
mov
and
and
adcb
cmpsb
add
out
add
xchg
call
pop
add
add
dec
mulb
repnz
out
paddusw
add
add
add
dec
and
fwait
loope
and
sbb
mov
sbb
lods
in
dec
xchg
pop
adc
inc
jg
xor
mov
stos
and
inc
dec
addr16
inc
adc
jecxz
scas
sub
xor
ret
add
test
gs
mov
testl
push
xchg
int
push
sub
lds
dec
fimuls
xlat
and
or
aad
sbb
mov
jbe
dec
out
jecxz
sub
aaa
pop
jbe
or
sahf
push
daa
adc
add
add
out
je
ljmp
shll
pop
sbbb
inc
int3
cli
mov
adc
xchg
jmp
jp
sbb
cs
push
jnp
mov
sub
lret
or
in
aam
mov
ret
ja
lcall
sbb
dec
mov
adc
or
into
xorl
pop
aas
sbb
jnp
pop
jb
add
xor
or
cli
mov
mov
push
mov
cmpsl
push
test
sti
xchg
sbb
cmpsl
push
addr16
loop
push
fistpll
dec
fdiv
fdivr
cmc
movsl
out
inc
push
insl
lahf
mov
inc
push
loopne
xchg
repz
push
es
sub
mov
cmp
inc
sbb
nop
outsb
xlat
cmpsl
xchg
out
in
mov
movsl
dec
cmpsb
popa
and
inc
mov
scas
call
push
ret
into
sbb
repz
addb
mov
imul
lret
fisubrs
sbb
js
pop
test
enter
rcrb
xor
cmp
jb
addb
push
loope
adc
and
scas
xor
pop
xchg
js
imul
dec
inc
or
cmp
enter
xor
fadd
pusha
xchg
jnp
test
mov
xlat
out
in
aad
sbb
adc
adc
bound
scas
mov
scas
mov
rcr
inc
dec
scas
mov
das
cltd
mov
test
outsb
jecxz
jle
call
out
jo
cmpsl
mov
and
xor
push
into
mov
lds
jae
je
add
mov
xor
adc
int3
push
pop
pop
scas
xchg
out
inc
pop
and
pop
addr16
adc
push
icebp
and
sti
iret
jge
in
push
lahf
cmp
and
ja
inc
sbb
mov
and
xchg
or
pop
push
jp
or
push
mov
mov
pop
cmp
fsub
push
push
es
movsl
inc
cmp
pop
scas
xchg
push
ljmp
xor
add
cmp
cld
inc
pop
and
mov
fdivl
sub
loop
out
sbb
adc
scas
jecxz
shl
fldt
inc
lods
or
jne
cltd
push
jo
adc
lret
push
jp
sbb
cmp
arpl
push
mov
pusha
and
xchg
adc
dec
mov
mov
cmpsl
outsb
xchg
outsl
dec
pop
in
pop
jnp
lock
pop
or
aam
and
or
out
imul
loop
mov
imul
cmp
lret
pop
push
adc
pop
sbb
add
sub
arpl
ljmp
imul
mov
jbe
je
fidivl
cmp
out
cmp
clc
dec
mov
out
fs
in
pusha
dec
jge
ret
cli
sub
out
mov
shll
lock
lods
lahf
push
pop
shrb
dec
add
mov
xchg
ljmp
push
or
pop
adc
shll
fdivrs
cmp
loopne
jmp
mov
xchg
or
xchg
dec
adc
pop
loope
inc
into
arpl
js
sub
pop
ds
lds
cmp
in
mov
cmp
scas
int
xchg
icebp
out
bound
out
pusha
sbb
pop
dec
movsl
std
jbe
mov
sbb
andb
rcr
les
roll
loopne
mov
dec
imul
mov
adc
scas
int
sbb
aam
sub
data16
mov
lret
movsb
test
mov
sub
clc
xchg
imul
jl,pt
nop
mov
inc
loop
add
adc
or
call
ds
repz
and
test
xchg
inc
jnp
dec
xor
cmp
add
pop
add
sbb
lock
adc
test
and
ret
push
xlat
daa
push
jo
test
pop
cs
add
mov
mov
mov
mov
add
in
ja
add
add
add
idivl
popa
cmp
add
adc
pop
adc
pop
push
imul
cld
std
push
stos
ret
push
dec
sub
mov
mov
push
out
adc
inc
cmp
push
sub
pop
cmp
mov
mov
sbbl
lds
mov
ljmp
adc
fsubp
in
lret
sbb
sub
cmp
int
push
sbb
or
cmp
sub
xlat
shrb
adc
dec
mov
jno
mov
cwtl
lret
cwtl
fmulp
leave
rcrb
int
jg
stos
stc
sahf
ret
rorl
pop
daa
xchg
inc
leave
jp
out
or
mov
xchg
or
xor
ja
mov
popa
and
lock
inc
jbe
ds
decl
jg
sahf
fistl
in
int3
in
mov
popa
push
les
cltd
sub
je
loopne
cmp
arpl
out
sbb
sub
inc
popa
ja
or
jl
jmp
sar
fldenv
ss
sbb
je
dec
inc
fisubs
inc
push
into
jmp
push
pusha
fdivs
cmp
xor
leave
fsubp
jo
lock
fisubrl
adc
push
shrl
push
jmp
cmp
push
pop
pop
and
dec
out
lods
sbb
pusha
inc
ss
mov
inc
std
or
repnz
sub
inc
sbb
imul
aas
pop
leave
or
jg
cmc
sub
in
lahf
das
pop
sti
in
gs
jecxz
xchg
sbb
enter
mov
inc
adc
fsubrl
pushf
inc
pop
pop
dec
xor
add
mov
mov
adc
loopne
cmp
mov
pop
sub
sbb
inc
pop
push
nop
test
ds
inc
fwait
popf
inc
push
add
inc
mov
pop
jmp
xor
fistps
repnz
xor
sbb
mov
push
minps
aas
out
jp
sbb
jne
out
lahf
popf
fs
lea
sub
mov
clc
and
inc
pusha
mov
out
aad
test
cmp
addl
jl
mov
and
xchg
out
stos
add
fisubs
mov
loope
movsl
pusha
lret
stos
stos
push
sub
mov
push
dec
notl
cwtl
bound
test
sub
aad
clc
sti
dec
loop
je
fwait
mov
push
imul
fstps
inc
loope
xchg
push
jmp
cli
lods
cmp
stc
cltd
sub
iret
pop
lret
jecxz
jle
inc
lcall
mov
xchg
adc
bound
mov
or
jmp
xchg
insb
mov
imul
call
adcl
mov
scas
fwait
outsl
jne
and
fisttps
stos
and
cmc
sbb
pusha
inc
adc
adc
dec
stos
orl
jno
inc
fwait
dec
in
andb
shrb
inc
movsl
add
cmp
popf
push
jecxz
int3
int
push
ljmp
xorb
jno
jl
jae
bound
xchg
les
pop
stos
add
jmp
jl
jb
out
jbe
jmp
mov
pop
movsb
xorb
dec
das
subl
ret
outsl
in
sub
lret
repz
call
and
popf
mov
out
xchg
rolb
bound
push
in
xor
mov
jb
roll
sbb
sub
add
lret
lods
fisttps
inc
lret
lret
push
xor
and
dec
add
xchg
divps
fnstcw
rorb
mov
pop
fwait
push
fstpt
pop
cld
sub
mov
xchg
add
clc
lea
add
push
xchg
dec
sbb
sbb
jae
jne
ljmp
pop
sbb
push
call
mov
jmp
xlat
dec
into
push
js
movsb
aam
popa
lret
aad
cmp
and
idivb
or
mov
out
repnz
pop
cltd
out
xor
fsub
dec
xor
scas
imul
stos
push
adc
jle
clc
shlb
gs
gs
inc
ljmp
dec
pop
xor
fstpl
sub
data16
and
dec
outsl
xchg
fistps
pusha
or
or
popa
pop
mov
pop
jo
jp
repnz
scas
out
imul
add
js,pt
pop
out
daa
mov
fcom
add
add
xchg
test
push
mov
and
clc
in
jl
add
add
add
adc
lcall
repz
popa
push
dec
pop
int3
dec
mov
mov
mov
fimuls
mov
add
adc
test
incl
in
cmp
imul
sahf
pop
jl
jbe
ss
divl
adc
mov
out
and
inc
cmp
scas
sbb
out
mov
js
gs
rcrb
enter
lods
std
shrl
scas
hlt
imul
clc
inc
mov
mov
or
movsb
mov
in
xchg
fcom
test
mov
stos
aas
es
xchg
or
or
sbbl
in
inc
filds
das
mov
loopne
jnp
pusha
push
ret
mov
jmp
les
aaa
shlb
pop
cmpl
in
mul
sbb
cmpsb
push
ds
mov
pop
push
lea
pop
icebp
int
mov
xor
aam
outsl
xchg
outsl
aas
mov
insb
mov
push
xchg
orl
mov
mov
inc
pop
pushl
and
xlat
lahf
loopne
add
xchg
sahf
pop
outsb
loop
les
testb
inc
imul
nop
inc
imull
stos
sub
and
out
pop
push
nop
in
movsb
mov
adc
fnstenv
push
scas
jb
orl
jae
dec
mov
push
jle
push
push
cli
push
ret
push
cmp
adc
in
xchg
fucomp
pop
ret
rol
push
push
cli
adcb
imul
jno
pop
add
subb
mov
ret
lock
ret
xchg
push
inc
xor
jge
cltd
movsb
xor
cmp
pop
jl
pop
cmp
int3
pop
mov
pop
mov
push
std
push
ja
scas
pop
mov
jb
and
inc
arpl
xchg
pop
mov
es
mov
jb
jg
sti
adc
lods
arpl
or
data16
or
cmp
popa
pusha
and
sbb
fisubrs
push
rorb
mov
loopne
out
push
dec
lcall
and
rcll
cmpb
mov
adc
pop
sar
fbld
lret
loopne
mov
xor
pushf
xor
ret
and
mov
ret
stos
cs
fidivrs
out
lea
add
inc
pop
outsb
push
sbb
inc
xchg
iret
cmpb
adc
xor
mov
arpl
mov
es
jg
mov
sub
sti
push
sti
adcl
jl
cmp
jecxz
int
xchg
jnp
emms
cmpsb
into
cmpsb
cmpsb
or
mov
jle
pop
sub
mov
je
lret
aaa
cwtl
daa
inc
pop
aas
lahf
hlt
xor
outsb
movsl
lea
sahf
sbb
or
inc
loopne
sbb
out
fnsave
xor
or
lcall
mov
rcrl
sbb
ret
mov
and
lahf
mov
dec
adc
cwtl
sub
inc
jae
aad
mov
xor
cs
mov
push
outsb
xchg
sub
mov
movsb
dec
pop
movl
xor
adc
fiaddl
mov
ljmp
and
outsb
mov
inc
lahf
cmp
push
jg
mov
shrb
xchg
fscale
pusha
add
ficoms
and
enter
jl
in
cmp
out
iret
movl
test
pop
dec
sub
imul
add
push
add
lea
mov
jp
pop
imul
jmp
dec
push
cmp
xchg
mov
enter
fbstp
add
jp
dec
addr16
dec
in
or
out
or
idivl
add
jne
incl
test
sbb
arpl
pop
fdivl
fsubrs
jne
scas
jo
fcmovbe
push
daa
test
push
andl
rorb
jnp
adc
fistpl
fld
cs
test
daa
sbb
ret
fwait
add
lods
mov
fldcw
js
clc
aad
sbb
xchg
idiv
sub
aaa
les
mov
pop
mov
or
or
xchg
cltd
aam
jecxz
sarl
adc
rcr
test
mov
cmpsl
in
jbe
cs
jge
rcl
imul
mov
cld
mov
mov
aas
fsubrs
shlb
loop
sbb
inc
into
add
add
and
fldl
inc
sti
aas
jb
add
imul
add
add
add
shr
jne
adc
cwtl
clc
fimuls
bound
fisubs
adc
rorb
loop
loop
xlat
data16
jne
cmp
std
lock
xchg
sub
xchg
adc
outsb
stos
rorb
dec
faddl
mov
add
inc
jae
movsl
je
mov
add
xchg
cmp
in
fs
jne
push
fcmovu
jne
insl
xor
jno
push
jo
push
loope
loop
sub
xor
mov
sub
mov
push
lret
cmp
incl
arpl
cmp
js
xchg
cld
mov
push
add
xor
xrelease
pop
dec
filds
int3
adc
mov
jge
lds
mov
sbb
jno
enter
rol
stos
in
inc
pop
sahf
div
add
shrb
imul
push
fidivrs
pop
addl
mull
daa
mov
in
jmp
test
jmp
rcr
mov
rcll
mov
test
adc
xchg
jbe
dec
xchg
test
and
cmc
std
adc
add
add
adc
call
movsl
dec
je
loopne
stc
into
roll
add
push
cs
cmp
and
je
xchg
or
xchg
insb
dec
jecxz
push
popa
mov
mov
call
filds
fnstsw
push
dec
cmc
and
xchg
jb
psadbw
mov
push
or
shlb
sbb
ret
rolb
sub
mov
and
cmp
mov
je
frstor
je
test
mov
sti
ss
cld
scas
cs
fs
out
or
jnp
sbb
sti
subl
xorl
sbb
divl
adc
add
in
aad
lret
jae
mov
in
jg
cs
cli
int3
dec
sub
stos
in
popf
jb
ret
out
test
cmc
jns
jo
inc
add
clc
sub
cmp
sbb
adc
xchg
enter
mov
fmulp
mov
cmp
outsl
pop
repnz
add
clc
lods
lret
cmp
pusha
fdivl
mov
push
push
xchg
dec
xchg
subl
sbb
xlat
sar
pushf
cld
bound
pop
pop
fwait
daa
adc
pusha
mov
stc
push
lret
stos
cmp
adcl
mov
ss
inc
push
add
adc
dec
jmp
jae
mov
mov
mov
xchg
into
in
js
mov
ss
add
jl
jnp
pop
inc
jb
adcb
xorl
movd
inc
xor
ljmp
jl
test
fwait
aad
and
bound
out
shlb
and
stos
inc
sub
or
cmp
mov
inc
cs
lret
les
jo
addr16
std
pop
cltd
outsl
mov
add
cmc
xchg
loope
inc
mov
xchg
mov
mov
inc
pop
sbb
imul
add
jmp
xchg
in
scas
lret
into
fs
xchg
add
and
rolb
rorl
adc
cmp
fnsave
movsl
sub
mov
mov
sub
dec
mov
jns
xlat
pop
dec
test
cmpsl
lods
call
cld
cmp
cmp
and
mov
ret
outsb
sahf
ss
cmp
in
stc
jp
subb
fildll
addr16
gs
dec
push
jb
pop
loop
addr16
cli
push
mov
mov
call
and
idivb
add
stc
or
inc
test
pop
xor
pop
lock
lret
mov
lahf
inc
fxch
in
xor
pop
ret
adc
imul
pushf
cs
aas
shll
mov
mov
clc
push
ljmp
mov
repnz
jo
pop
mov
jns
inc
icebp
push
imul
incb
sub
mov
xchg
mov
pop
shrb
out
jo
icebp
in
cmc
dec
xor
fstpl
mov
push
bndldx
xor
cmp
orl
cmp
pop
popf
cmp
loope
int3
mov
xor
and
lret
int
add
in
jne
out
pusha
sub
jg
mov
jae
sbb
mov
imull
dec
jbe
xchg
jns
iret
mov
lret
dec
push
fsubrp
stc
cmp
mov
movsl
sti
test
bound
inc
mov
add
add
add
mov
or
stos
or
hlt
add
add
push
inc
out
inc
imul
jno
mov
ljmp
sahf
frstor
popf
clc
fstl
into
test
ds
into
std
xchg
jp
pusha
push
testb
push
push
mov
fmull
mov
or
add
scas
repnz
movsb
andb
push
sub
dec
fstpl
sahf
sbb
lret
repz
subb
imul
mov
mov
enter
xor
rol
or
std
and
fsubrp
out
cmp
js
icebp
pop
mov
push
insl
ret
inc
hlt
and
in
pushf
pop
mov
clc
adc
movsb
cmp
inc
stc
or
mov
shll
lods
pop
rcrb
pusha
insb
jne
fmuls
fwait
sub
push
sbb
out
aad
mov
mov
test
cmpb
daa
sbb
call
ret
jb
mov
daa
lret
lahf
mov
cli
jmp
mov
sub
jae
pop
jecxz
lods
push
in
fisubrl
movsl
cld
mov
push
mov
pop
mov
int
test
xchg
add
xchg
sbb
mov
lret
daa
inc
fsub
push
jecxz
mov
sbb
enter
or
dec
cmpsb
push
icebp
pop
lods
or
and
pop
jg
cmc
cmpsb
mov
and
pop
test
pushf
adc
mulb
push
sbb
pushf
jmp
popf
mov
cmp
sub
pop
mov
ja
pop
mov
mov
mov
test
daa
cmp
movsb
bswap
inc
jecxz
stos
leave
and
sub
into
xchg
inc
dec
mov
pop
popa
mov
sub
xorl
sbb
mov
sub
pusha
inc
cltd
test
in
pushf
cmp
xlat
cld
push
or
rolb
nop
xor
mov
loopne
sbbl
xchg
lods
int3
dec
xchg
xchg
push
aam
jbe
adcl
jb
lret
rorl
jae
mov
aam
xchg
inc
push
jmp
es
or
in
sub
fs
cld
inc
lahf
js
es
fisubrl
sub
jne
and
lret
test
ficoms
sbb
jb
cmp
rcll
xchg
xor
mov
jg
fstpt
xchg
int
and
mov
mov
pop
jge
out
lds
adc
lds
inc
add
mov
adc
das
add
push
fstl
mov
push
shll
mov
test
outsb
addps
cmp
jne
fnstsw
xor
sub
jl
mov
icebp
sbb
adc
pusha
gs
lret
movsb
xor
or
dec
sbb
rcrl
adc
xchg
and
das
nop
inc
jno
loopne
ljmp
adc
fmuls
jo
stos
jo
xchg
jbe
out
rcr
jmp
fsubp
dec
sbb
or
call
lahf
mov
dec
adc
jmp
push
sbb
push
ficomps
sbb
cmp
dec
cwtl
mov
jno
or
sets
push
imul
sbbb
stos
fcoms
pop
mov
jp
mov
aas
dec
cmpsb
insl
and
mov
push
and
ret
xchg
mov
sbb
cli
test
jge
push
add
adc
inc
sbb
pusha
in
outsb
pop
test
fcomps
mov
push
and
mov
in
jl
push
test
xor
rcrb
push
call
ret
push
leave
pop
pop
fldln2
setp
mov
jns
inc
into
fdivl
in
and
ret
fmuls
cmc
add
inc
cmpsb
jecxz
stos
and
aas
or
sub
scas
add
pop
fnstcw
mov
xor
ljmp
xlat
inc
sbb
loope
mov
pop
arpl
add
iret
movsb
ja
sbb
outsb
insb
aam
push
test
pushf
mov
icebp
fisubrs
push
repnz
xchg
pop
push
push
inc
jne
inc
sub
dec
pop
push
adc
adc
in
mov
hlt
inc
scas
aad
dec
jno
mov
pusha
fdivr
or
cmp
repnz
sbb
fstps
push
xor
pop
add
push
mov
fsubs
pop
ror
lea
das
xchg
fimull
nop
jno
and
sbb
js
repnz
call
or
add
mov
cmp
dec
mov
mov
add
add
in
repz
inc
jns
test
sbb
inc
xchg
data16
adc
or
nop
js
loope
cli
arpl
mov
ss
scas
sti
jnp
fwait
xor
lock
into
cmp
in
mov
sbb
outsb
push
cmp
jae
mov
xchg
nop
sub
fs
xchg
xor
or
pushf
in
neg
mov
pop
mov
hlt
jp
int3
repz
std
push
gs
adc
lds
mov
sbb
movsb
xor
xchg
cmp
adc
dec
adc
cmp
and
stos
push
push
lret
mov
xorb
or
sti
or
jns
push
add
leave
das
jp
pop
subb
mov
and
xor
and
or
dec
xorl
scas
inc
jns
xchg
inc
std
rcrb
or
jle
push
push
mov
fiadds
jb
push
sbb
pop
mov
dec
xlat
mov
out
mov
and
rorl
mov
mov
lret
push
jmp
and
mov
fsubr
int
and
jae
inc
and
in
pusha
xchg
and
imul
cmp
cs
xchg
das
loopne
stc
pop
cmpsl
mov
roll
and
das
sbb
xlat
scas
mov
inc
fstl
sub
ja
fimuls
jecxz
aam
or
jecxz
in
sub
inc
or
aad
ror
in
cmp
loope
inc
xorl
sbbl
shrl
stos
aaa
xor
in
dec
hlt
jecxz
adc
dec
roll
call
and
call
sbb
stos
mov
in
fnstsw
cmove
pop
sub
loop
sbb
adc
xchg
fnstsw
sahf
xor
cmpb
movsl
mov
movsl
repnz
xlat
jno
push
fcmovnb
out
lret
jo
aaa
icebp
outsl
add
dec
ret
pop
cld
outsl
push
add
lods
loop
xor
sbb
in
ss
dec
mov
int3
nop
adc
dec
out
push
and
inc
mov
mov
dec
push
popf
fwait
jnp
pushf
enter
inc
mov
sub
push
stos
jne
ljmp
dec
lcall
jae
push
adc
pop
xchg
insb
aas
test
cwtl
aaa
or
push
and
outsb
fcmove
sub
nop
mov
lcall
cld
xchg
jae
jecxz
dec
mov
dec
aam
data16
cmp
and
int
fpatan
ret
add
cltd
and
dec
xor
je
mov
mov
pop
stc
mov
insl
cmp
cli
in
popf
testb
xchg
in
jl
std
mov
test
or
mov
out
les
stos
pusha
int
jmp
xlat
ss
xchg
lods
pop
test
inc
rcrb
adc
insb
mov
out
cmp
data16
xchg
fldt
mov
mov
sub
cmp
adc
or
jbe
call
inc
lea
popf
and
pop
add
inc
fcomi
pop
fwait
movsb
sbb
cmpsb
into
dec
aaa
sub
aad
inc
and
data16
ja
push
dec
fiadds
ljmp
xor
js
cmp
mov
das
fsubl
imul
sub
push
push
stos
push
push
dec
rclb
loop
inc
mov
jno
jns
mov
int3
insb
mov
adcl
inc
mov
push
add
lahf
sbb
lret
jne
loopne
imul
leave
leave
mov
lret
mov
inc
loop
aam
or
jnp
fstp
add
movsb
and
jmp
loope
sub
pop
push
test
mull
es
scas
decb
mov
hlt
iret
andl
cmp
and
push
stos
cld
clc
cmpb
mov
inc
insb
fmuls
sbb
mov
cmp
adc
xor
or
scas
cmc
cli
and
sbb
lock
out
inc
leave
mulb
pop
sbb
dec
clc
dec
inc
pop
jae
test
push
jb
rcr
sub
cltd
mov
xchg
mov
gs
jo
mov
push
sub
shl
xchg
mov
aas
sub
stos
notb
fs
fsub
out
lahf
lods
push
lods
iret
xor
sbb
out
or
push
xchg
push
pusha
pop
mov
mov
lcall
aad
test
fld
insl
rcrb
mov
jnp
cmpsl
icebp
fwait
int3
mov
pop
xor
mov
jbe
mov
dec
lods
add
bound
add
add
sti
and
es
sti
std
sbb
adc
xchg
mov
add
hlt
add
add
push
mov
ret
das
add
hlt
pop
xchg
mov
cld
mov
and
and
imul
adcl
mov
mov
shl
push
test
cwtl
test
jbe
in
lret
inc
xchg
inc
sbb
jo
jge
dec
fmulp
push
sbb
aaa
mov
mov
into
adc
push
lret
jle
xchg
push
push
or
or
int
in
test
pop
repnz
cmp
lret
shl
dec
in
leave
xchg
loope
dec
gs
rcll
xchg
jb
add
lods
add
add
jecxz
gs
shlb
xor
pop
mov
push
mov
cmpsb
sbbb
outsb
les
imul
or
fnstsw
adc
mov
shlb
test
scas
scas
mov
in
stos
or
cmp
inc
add
and
insb
outsb
gs
dec
adc
fwait
push
aas
dec
push
lods
pusha
mov
lret
adc
mov
loop
inc
pop
push
push
into
dec
and
stos
test
mov
jno
ja
jbe
jae
mov
pop
adc
mov
js
xchg
dec
mov
les
cwtl
mov
loope,pt
pcmpgtw
lods
call
cwtl
ljmp
popf
pusha
repnz
sbb
repnz
mov
mov
outsl
or
sbbl
fs
out
adc
test
dec
loopne
cltd
adcl
or
ss
and
int3
icebp
xor
mov
or
mov
fidivs
loopne
and
push
adc
inc
movsb
insb
ljmp
sbb
cmp
jle
fwait
jne
sub
pop
adc
cmpl
add
popa
adc
xor
popf
dec
aas
cmpsl
sub
xlat
adc
std
push
xchg
mov
cmpsl
ja
std
jp
lret
or
xor
adc
jae
ljmp
lret
adc
movsb
jp
lcall
jg
mov
xor
test
jno
jne
filds
xor
aas
jp
fmul
fildl
pop
jg
and
out
mov
out
mov
mov
dec
jo
stos
inc
pop
mov
neg
xlat
fmul
movb
aas
lods
mov
in
lret
jp
xchg
lods
mov
mov
scas
lret
stos
arpl
daa
outsb
push
fs
cmp
jo
pop
and
xchg
hlt
or
scas
js
lret
sti
jo
jmp
or
shrl
add
ljmp
inc
dec
add
jge,pt
cmp
add
or
adc
lahf
mov
out
stos
and
sub
adc
aam
sahf
lret
decb
push
movsl
xchg
mov
adc
inc
les
je
cmp
mov
adc
test
fnstcw
cli
push
scas
mov
clc
xchg
movsb
sbb
leave
jno
mov
lds
jp
push
cmp
adc
jnp
repz
cmc
cmc
fnstsw
cmp
rolb
cld
leave
mov
inc
push
jbe
adc
sbb
adc
pop
jns
mov
testl
add
loope
mov
mov
loopne
popa
ja
add
scas
out
and
xchg
clc
cmp
xor
mov
push
mov
jne
push
icebp
in
scas
cwtl
push
or
pop
sub
shlb
stos
mov
popf
pop
outsl
mov
cmp
sub
int3
cmp
stos
movsb
pop
call
mov
or
cltd
push
in
daa
shrb
shlb
cli
scas
dec
add
lahf
sub
jp
jno
push
adc
nop
mov
outsb
loope
test
cltd
popa
cltd
push
push
xchg
jo
sub
lahf
and
mov
pop
jecxz
sarl
jo
dec
repz
idivb
sub
pop
adc
dec
dec
xchg
shrb
ss
and
popa
add
and
in
and
inc
adc
xchg
lahf
insb
lcall
movsl
or
movsl
bound
dec
push
jo
and
inc
jno
jne
inc
mov
push
adc
ror
and
sbb
dec
add
lahf
add
mov
addr16
fdiv
sbb
lds
sbb
sbb
sti
pusha
push
into
mov
subb
divb
cli
mov
pop
ljmp
out
lcall
or
imul
sub
cmp
notl
push
out
mov
inc
orb
imulb
loope
popa
sub
lret
call
cmp
lock
or
lret
sahf
xor
popa
int
add
push
outsl
xchg
inc
ret
xor
pop
xor
fbstp
jg
scas
jmp
test
imul
pop
adc
push
mov
test
inc
mov
cmpsb
faddl
hlt
and
mov
mov
xchg
test
roll
or
and
adc
jl
leave
test
sahf
lods
adc
mov
push
xchg
pop
jae
push
out
rcll
outsb
cmpsl
leave
mov
arpl
pushl
cmp
imul
outsl
xorl
fiaddl
xor
nop
ds
mov
sbb
dec
mov
push
inc
adc
loopne
test
mov
jle
movsb
jle
mov
mov
jae
test
fmuls
and
mov
test
test
mov
loopne
es
in
mov
push
xchg
outsb
jg
sub
ds
jecxz
push
mov
icebp
je
cmp
dec
xchg
jl
mov
ficoml
mov
xchg
aad
aad
out
out
fldt
aaa
push
lock
cmpl
adcb
or
fisubrs
out
jge
lret
pop
pop
aaa
xlat
int3
jo
mov
sbb
cmp
sub
fcos
xchg
xchg
sub
xadd
mov
in
mov
lret
dec
sarl
adc
outsl
mov
fs
xor
or
stc
fsubr
cmp
pop
aaa
jae
cmpsb
mov
shll
mov
mov
mov
pop
inc
imul
jecxz
inc
pusha
pop
mov
cli
sub
mov
mov
lcall
push
jnp
push
or
movsl
xchg
loope
jecxz
out
std
and
inc
mov
add
inc
cs
notl
out
out
xchg
push
and
xchg
scas
xchg
outsl
popa
push
lock
addb
aad
loop
xchg
jge
add
xchg
sub
mov
sbb
fimull
push
scas
adc
das
xor
sub
aas
pop
jns
vhsubpd
jle
dec
test
adc
or
push
xor
mov
fistpl
dec
arpl
out
or
test
inc
mov
js
push
mov
mov
in
mull
pusha
jmp
jge
cmp
xor
jbe
push
imulb
or
sub
inc
lock
xchg
std
shll
sub
add
jbe
std
push
shr
add
pushl
mov
out
loopne
mov
dec
nop
sub
cmpsl
inc
cmp
adc
lret
sub
pop
mov
hlt
scas
stos
lret
inc
push
fsub
pop
leave
add
xor
arpl
pop
xor
xchg
pusha
push
pop
pop
push
fs
ret
push
mov
xor
adc
out
mov
push
outsl
jmp
jb
mov
lahf
adc
subb
mov
scas
jb
repnz
ds
push
inc
clc
jmp
inc
imul
sbb
fwait
pop
xor
inc
xchg
mov
push
int
ljmp
xchg
cmpsl
cmp
add
cmpsl
xor
push
cmp
add
adc
imul
push
xchg
outsb
jp
pop
push
sub
sahf
mov
xchg
popa
push
int3
pop
imul
data16
adc
mov
jbe
gs
xchg
dec
inc
scas
into
ror
xor
mov
pusha
jl
je
push
sub
sahf
fmuls
out
bound
inc
sub
outsl
jle
mov
xlat
mov
push
pop
es
ret
test
dec
sbb
mov
sub
pop
enter
ja
jp
jb
xor
mov
popa
pop
lea
stos
add
pop
scas
arpl
lret
js
xchg
lret
mov
pop
sub
int3
and
loope
imul
cmpsb
mov
lret
test
popa
jns
gs
aad
shl
push
add
sub
pop
add
mov
popa
or
cmp
jae
mov
cmp
sub
xchg
aad
fidivrl
out
pop
xchg
shll
push
jo
push
cltd
push
sub
and
pop
pop
sbb
ja
ret
addb
add
add
cmp
pop
sub
stos
jns
dec
sub
loopne
cmpb
lcall
push
cmp
or
cmp
push
sbb
sbb
mov
das
jmp
and
repnz
mov
cmp
pop
ret
roll
jnp
add
adc
sarl
scas
cltd
or
out
lds
subb
aas
popf
test
rorb
jge
add
in
pushf
in
pop
ja
jnp
mov
pop
push
rcr
lret
adc
sbb
jmp
inc
mov
cwtl
pushf
lcall
out
and
decl
addr16
cs
daa
adc
fstl
sub
cs
pushf
jb
cmp
xor
dec
mov
lret
xchg
inc
jg
shrb
jbe
or
dec
je
mov
test
nop
call
add
cltd
mov
ljmp
adc
lret
mov
push
add
and
and
cmpsl
mov
les
jns
stos
shl
fs
aad
lea
dec
aaa
dec
mov
outsl
data16
mov
sahf
xor
mov
mov
das
test
pop
shrb
bound
or
arpl
lahf
cmp
sub
pop
sbb
sbb
insb
ds
outsb
mov
pop
add
xchg
ds
scas
mov
sahf
adc
push
leave
pusha
push
inc
or
xor
data16
call
adc
imul
inc
icebp
lods
in
mov
mov
mov
pop
mov
push
xchg
ds
push
push
sbb
xchg
jnp
jno
int3
into
ja
rcr
test
stos
and
xchg
inc
sbb
les
mov
repz
add
mov
int3
adc
test
add
or
and
addb
loope
out
clc
xor
cs
outsl
lods
out
imul
loop
xchg
daa
jle
inc
fimuls
stos
test
adc
or
sub
and
fildll
test
or
dec
and
call
into
shl
rcrb
shll
das
out
cmc
sarb
adc
mov
inc
pusha
add
sub
jl
cmp
stos
adc
cmc
pop
shl
cld
push
cmp
lock
push
cmp
push
cmp
ja
stc
mov
sbb
cmp
jecxz
cmp
gs
adc
fnstsw
inc
test
sti
cmpb
and
mov
push
dec
inc
mov
cltd
adc
pop
scas
adc
push
out
xchg
test
xchg
dec
sub
pushf
dec
sbb
mov
ficoms
xchg
pop
scas
enter
mov
mov
xchg
out
pop
fsubrp
fldt
push
mov
adc
xchg
add
js
xorb
or
pop
mov
jae
shll
xor
loopne
cmp
cmp
outsl
dec
xchg
sbb
lock
mov
adc
int
sbb
mov
mov
cmp
mov
aad
rol
mov
in
push
and
adc
adc
sub
fdivrl
mov
cmpsl
cmpsl
icebp
imul
repz
dec
and
insl
xchg
shl
test
cs
dec
addr16
sarl
cmp
mov
lods
js
jno
or
sub
aas
jg
push
shlb
fidivs
in
jl,pn
pop
stos
pop
mov
adc
stc
imul
push
and
and
ret
loop
mov
xor
roll
rolb
popl
add
repnz
adc
pop
test
xor
sub
aad
pop
scas
xchg
and
imul
cs
and
cmpsl
pop
pop
fnstsw
cmp
inc
xchg
sbb
loope
js
cmc
fmulp
cmp
xor
gs
std
in
push
xchg
xorl
sub
ja
inc
adc
dec
clc
leave
jmp
aaa
xor
mov
roll
sub
fildl
jno
in
in
or
push
or
mov
push
pop
sbb
push
stc
imul
xor
and
xorb
inc
lret
clc
insb
xor
xor
imul
in
or
sti
in
mov
or
insl
mov
incb
pop
je
out
add
cmpsb
sbb
dec
pop
adc
mov
push
pusha
xchg
add
adc
dec
jge
xchg
outsl
jge
lcall
add
hlt
add
add
aaa
cmp
in
repnz
mov
iret
or
sbb
push
std
inc
jl
lds
sbb
repnz
jp
inc
jae
loop
push
pop
pop
push
insl
and
dec
int
mov
insb
mov
xchg
sahf
cld
jbe
fwait
lcall
fwait
addl
div
pop
sub
mov
mov
adc
adc
jmp
adc
in
aas
xlat
aas
rsqrtps
pop
mov
dec
in
add
xor
lods
cmpsl
inc
icebp
and
aas
push
or
xchg
inc
push
aam
xchg
push
loopne
scas
loop
add
adc
mov
mov
and
js
fdivl
adcl
test
pop
push
xor
decb
je
shll
mov
les
insl
icebp
pop
mov
repz
dec
std
dec
jp
sub
mov
push
push
loop
leave
pop
push
ret
xor
xor
test
sub
pop
jb
cmp
fidivl
data16
mov
dec
popa
enter
es
jg
sbb
insb
sbbb
test
scas
push
jmp
pop
inc
mov
push
addr16
test
out
push
jb
mull
jp
and
aas
xchg
out
pop
cltd
push
jae
outsl
gs
add
out
mov
jge
out
mov
or
sbb
or
xchg
sub
or
jbe
fcmovb
add
add
push
add
inc
cwtl
int
xchg
rcl
pop
jmp
cltd
push
out
test
sbbb
rcl
mov
iret
xchg
push
aad
pop
xor
mov
jp
mov
aam
sub
push
sbb
loopne
jle
pop
gs
scas
add
je
add
xor
in
in
xor
leave
or
push
mov
les
mov
sub
aas
std
push
pop
pop
cld
icebp
or
cwtl
popa
xorb
add
js
into
lret
push
xchg
ljmp
into
mov
xchg
fbld
movsl
loope
sub
outsb
inc
shlb
in
mov
rcrb
cmp
add
push
dec
ja
fiaddl
in
inc
inc
pop
es
repnz
lods
inc
push
add
fildll
adc
arpl
lret
mov
or
outsl
push
mov
inc
pop
jnp
jle
test
mov
or
xorps
stos
add
pop
in
cli
das
push
cmpsb
cmp
mov
into
fs
nop
mov
fnstsw
imul
call
lahf
mov
popa
movsl
add
jo
sbb
pop
gs
adcl
imul
inc
cmp
fisttps
and
aaa
mov
ret
sbb
sbb
push
movsb
or
pop
loope
ficoml
gs
ds
pop
dec
jo
daa
mov
hlt
fsubrl
mov
mov
sbb
sbbb
sbb
jo
cmc
push
dec
cmp
mov
sbb
jno
sub
xor
lahf
lret
mov
mov
or
rcrl
cmp
clc
mov
jmp
or
xrelease
xchg
dec
dec
push
test
js
repnz
movsl
bound
dec
xor
ja
call
jmp
fwait
xchg
sti
pop
popa
jmp
in
sbb
dec
imul
xchg
ljmp
mov
gs
je
in
pop
ret
jmp
test
aad
loop
fnstsw
dec
push
mov
bound
and
pop
push
ljmp
xchg
lock
daa
pop
into
bswap
lock
inc
ljmp
sbb
mov
xchg
cmpsl
inc
cmpl
mov
repz
mov
stos
push
stos
jnp
repz
inc
jecxz
std
inc
mov
lock
lahf
rorl
das
jno
int
rorb
push
mov
xor
into
test
mov
sbb
sbb
imul
out
in
xchg
push
jg
pop
mov
mov
hlt
add
add
nop
push
enter
jp
daa
movsb
mov
jae
popa
loop
pop
or
dec
outsl
sbb
mov
add
xchg
sub
jno
loopne
aas
cmc
cmc
xchg
inc
enter
mov
and
pop
cmp
std
cltd
rorb
cmp
fcmovb
popf
jle
pop
dec
jns
test
add
mov
pusha
std
and
or
add
add
hlt
push
ljmp
sub
cmp
andl
mov
inc
insb
push
add
mov
lcall
mov
adc
and
lcall
sub
inc
mov
jl
and
xlat
dec
frstor
jmp
mov
xchg
mov
inc
inc
out
int
fisubrl
cmp
popf
or
push
or
jmp
les
in
cmp
or
inc
mov
sahf
incb
xor
sahf
repz
int3
sti
cmpsb
cmp
insl
xor
es
push
or
clc
cli
jl
pop
out
jnp
in
loope
das
push
aas
gs
sub
xchg
shrl
daa
sbb
adc
adc
rorb
icebp
dec
push
or
jmp
push
sub
into
fnsave
mov
pop
mov
ffree
imul
xchg
sub
xchg
loope
rorb
push
xor
pop
enter
adc
mov
popf
cs
add
or
std
pop
bound
mov
cmp
jl
dec
mov
popf
negl
push
fisttpll
hlt
stos
sub
push
nop
ror
cmp
incl
outsb
in
add
pop
leave
loopne
jne
scas
lcall
fistl
movsb
sub
inc
inc
inc
scas
cmpsb
scas
jle
ljmp
scas
lahf
xor
or
arpl
mulb
fs
lret
push
ret
pushl
push
stos
lahf
ret
mov
cli
mov
sbb
in
stos
push
mov
jecxz
jo
xor
pusha
push
adc
stc
push
sbb
push
mov
mov
pop
push
xchg
mull
sahf
and
scas
insb
mov
outsl
lds
test
mov
je
or
movsb
xchg
stc
out
or
daa
int
mov
push
pop
arpl
jp
cs
xchg
add
adc
dec
and
jnp
push
ret
inc
pop
push
cmp
out
and
addr16
pop
ja
arpl
cmc
add
scas
cmp
or
mov
push
mov
outsb
outsb
leave
fildl
jne
inc
push
xchg
jle
cmp
idiv
dec
mov
jmp
std
cli
dec
lret
scas
mov
cmp
repnz
daa
sbb
dec
fs
loope
jl
push
push
loope
ss
nop
mov
jl
inc
fadds
mov
add
pop
adc
nop
xor
mov
push
testb
test
ds
jmp
mov
push
adc
mov
sub
or
mov
lahf
or
inc
push
imul
sbbl
lds
cmp
jmp
negb
push
iret
dec
lods
addl
shrl
xchg
sti
addr16
adc
ds
test
ret
push
xlat
aam
jb
sub
fisttpl
push
insl
inc
pop
or
adc
lret
std
shlb
xor
cltd
push
mov
fmull
fists
adc
mov
aaa
pop
inc
or
jnp
xchg
or
enter
idiv
cmpsb
pop
imul
add
xchg
imul
fdivs
leave
in
repz
lock
lret
cld
fmulp
cmp
cmc
fnstcw
push
dec
out
add
adc
or
push
mov
mov
xchg
jle
insb
data16
out
stc
xlat
idivb
mov
dec
push
pop
add
pop
jg
adc
jl
xchg
out
inc
stc
sub
inc
push
jmp
sub
fiadds
ds
lds
cmp
shrl
jb
lock
mov
imul
lods
mov
pop
push
int3
jmp
pop
loopne
adc
pusha
std
mov
movsl
fstpl
inc
mov
mov
jb
int3
dec
xchg
pop
adc
out
mov
ds
lea
sub
jecxz
fistl
mov
jle
movsb
push
insb
fdivr
js
outsl
mov
mov
arpl
mov
imul
pop
lcall
clc
dec
xorb
push
stos
jae
xchg
push
jg
fwait
jp
or
fimull
xlat
adc
test
jae
dec
nop
cld
pop
aaa
and
xchg
mov
ss
testb
xchg
xchg
imul
lods
cmpsb
int3
mov
dec
movsb
orb
lock
adc
imul
data16
je
mov
lock
pop
jecxz
mull
stos
insl
pushf
fimuls
cli
mov
or
repz
pop
fsubl
ror
test
ret
add
jae
sub
frstor
add
add
pop
test
aam
lahf
pop
dec
sar
adc
lret
sbb
jne
add
hlt
add
add
inc
shl
and
mov
cmpsl
mov
out
stos
out
or
movsl
mov
pop
mov
maxps
mov
mov
je
xor
inc
xchg
pushf
push
pop
aaa
dec
push
fwait
mov
mov
pop
or
int3
mov
mov
jae
jp
rcrl
ja
dec
or
mov
xor
daa
push
mov
cwtl
pop
cmc
push
jl
add
insl
pop
pop
js
fildll
adc
cli
cmp
ret
jns
imul
and
loope
xchg
mov
cmp
cmpsb
mov
popf
xchg
xor
mov
sub
fwait
add
fcomip
jbe
js
mov
mov
es
xorl
jge
lcall
jnp
aad
mov
imul
scas
loop
push
pushf
push
fcomps
es
in
hlt
faddl
scas
fiaddl
jne,pt
pop
aad
cmp
xor
cmp
dec
adc
cld
push
pop
sbb
mov
rclb
mov
cld
sub
add
movl
mov
sahf
fnstenv
addr16
outsl
jge
mov
add
sbb
stos
and
orb
pusha
pop
mov
loop
daa
je
mov
xchg
lods
mov
rcll
bound
adc
push
add
out
gs
push
sti
or
insl
pop
ficompl
inc
pop
cmp
movsb
or
stos
sub
dec
insl
enter
mov
repz
mov
rorl
mov
daa
sbb
loopne
push
ja
adc
std
repnz
inc
xor
jle
sahf
add
push
fcom
mov
xchg
xor
mov
loope
daa
out
jmp
sbb
adc
adc
out
jns
call
stos
leave
cvtps2pi
shlb
hlt
std
mov
xchg
subl
pushf
or
sbb
jmp
xchg
popf
scas
cmc
sub
mov
sbb
sub
cmp
cmp
ds
or
cld
mov
dec
sbb
pusha
add
jmp
loope
fnstenv
ret
ret
cltd
outsb
nop
leave
jle
jecxz
inc
in
add
sbb
xchg
mov
mov
in
xor
adc
push
imul
pop
mov
adc
movsl
pop
aam
inc
and
sbb
aad
dec
mov
push
ss
or
xor
dec
xchg
xchg
inc
lret
xchg
sub
xchg
inc
or
mov
sbb
pop
or
enter
mov
sbb
jle
push
and
sub
in
nop
push
pop
xchg
xor
sub
push
repz
jecxz
lods
and
std
mov
lock
xchg
je
stos
dec
aam
adcl
insb
mov
orb
repz
inc
ja
popa
lret
mov
loopne
lock
and
mov
add
mov
mov
notb
out
lods
mov
pop
and
sub
xchg
loopne
pop
filds
xor
add
aad
sub
adc
cwtl
fnstcw
xchg
adc
in
sbb
shll
sub
fisubl
mov
mov
adc
mov
cmp
repnz
call
and
adc
enter
clc
xchg
test
lods
add
cs
cld
xchg
cmc
xor
cltd
sbb
pushf
scas
xor
and
pop
cmp
mov
cmp
fsubp
fisttpll
notb
mov
ret
repz
testl
sahf
adc
or
cmp
and
or
repz
mov
pushf
sti
subb
push
inc
fcompl
mov
cmp
in
addl
xchg
inc
lret
push
sub
inc
pop
push
add
enter
lret
in
jmp
pop
xor
popf
mov
or
aas
sub
xor
dec
pusha
sbb
stos
gs
mov
cmp
or
loopne
pop
xchg
shl
pop
sbb
je
loope
outsb
pop
ja
xor
xorb
sbb
mov
pushl
mov
popf
lret
fdivs
and
mov
mov
hlt
xchg
outsl
ffree
jle
lock
xchg
in
push
lahf
movsb
pop
inc
repz
int
xchg
adc
pop
les
push
in
inc
inc
es
mov
test
jbe
jle
xchg
adc
dec
mov
lret
mov
pop
inc
scas
add
hlt
add
add
lea
int3
loope
and
orb
jl
jg
pop
sub
push
add
cmpsl
hlt
aaa
jnp
stos
sub
sbb
pop
rol
mov
call
mov
out
aaa
cmpsw
call
mov
fsubs
into
add
cmp
imul
push
pop
sbb
lds
imul
les
push
inc
std
adc
and
aam
pop
cmp
xchg
add
push
lahf
xchg
leave
rorb
push
jecxz
inc
imul
mov
leave
cltd
aaa
pop
sarb
push
jp
xchg
mov
jne
pushf
packsswb
push
fsubrl
js
mov
pop
cmp
test
sub
mov
mov
jno
hlt
and
hlt
lcall
data16
inc
sbb
in
insb
jmp
shll
mov
sahf
jmp
lcall
cmp
push
lods
xchg
loopne
fbld
jmp
aad
or
in
ret
xchg
and
insb
cmc
jae
push
cs
enter
clc
rcrb
lahf
call
into
or
jp
push
and
pop
xor
and
stos
repnz
repnz
cli
aaa
mulb
sbb
mov
xchg
pusha
dec
xlat
clc
cmp
xchg
test
pusha
add
cmc
stos
fcoms
mov
add
or
inc
ljmp
andb
dec
add
loope
inc
fildll
adc
sub
scas
adc
mov
sub
call
imul
inc
in
mov
push
mov
sub
pop
mov
push
mov
out
rorb
xchg
jo
mov
dec
aad
rclb
mov
sbb
mov
adc
scas
pop
xchg
aas
xchg
pusha
push
roll
dec
sub
mov
mov
fidivl
pop
rolb
cld
cmp
sbb
xor
mov
push
fistl
bound
dec
jl
mov
adc
jg
sbb
cmp
and
add
dec
mov
mov
cld
arpl
movsl
jns
mov
lret
jae
je
pushfw
adc
sbb
sarb
add
fwait
xchg
fs
push
jae
adc
inc
cli
inc
lea
jne
in
sub
add
adc
dec
sarl
mul
mov
push
mov
cmp
or
test
cltd
pop
xor
mov
jle
jge
xlat
jae
sub
and
enter
push
dec
mov
lahf
sub
mov
loop
cmp
jle
sbb
and
xchg
jge
pop
das
sub
cmpsl
pop
nop
arpl
daa
sub
jne
shl
or
jb
test
add
es
cmp
push
xorl
pop
and
hlt
negb
jbe
lods
stos
cmpsb
test
test
ss
daa
mov
cli
cs
jl
arpl
sub
lods
mov
jb
into
fs
enter
stos
adc
push
stc
jb
mov
push
repnz
sbb
jo
sub
jle
mov
add
cmpsb
sub
lret
movsl
bound
sbb
inc
or
pop
int3
mov
inc
sbb
jmp
cmp
repz
scas
cld
mov
or
push
cmp
cmpsb
popa
jno
inc
adc
push
fdivrl
sub
and
xchg
test
push
xchg
int3
lret
jmp
mov
mov
xor
mov
pop
hlt
call
cmpsb
xlat
mov
cmpb
shlb
and
bound
xchg
adc
fldenv
jns
dec
pop
push
push
xlat
mov
sbb
xchg
mov
mov
lret
and
imul
mov
mov
mov
fiaddl
xor
outsb
jp
in
int3
inc
fldcw
mov
fidivrs
add
mov
ret
xchg
mov
push
hlt
mov
loop
or
mov
jmp
push
pop
dec
out
out
or
scas
imul
test
dec
pop
sbb
movb
push
mov
lds
adc
in
lret
fcoml
shrl
lcall
or
cmpsb
test
enter
and
fmuls
enter
cld
call
inc
loope
xor
fimuls
inc
sub
push
adc
mov
ja
dec
cmpsl
dec
add
add
inc
xchg
daa
cmp
mov
and
pop
mov
add
add
add
in
push
nop
xchg
pop
jmp
jmp
xor
xor
inc
lock
inc
mov
dec
and
and
add
push
mov
inc
xor
xor
fwait
mov
and
sbb
sbb
cmp
adc
mov
fadd
test
cld
mov
sbb
shrl
jnp
lcall
lcall
mov
push
dec
dec
fstl
scas
orb
fcoms
mov
jmp
pop
outsl
adc
fdivl
shrl
mov
push
sbb
and
data16
mov
jb
jmp
sbb
xor
add
dec
xor
cli
xor
jl
sti
lret
and
cmp
iret
fisttpll
mov
mov
aas
andb
add
popf
adc
mov
xor
push
mov
xchg
pop
jmp
mov
or
mov
out
stc
pop
leave
lods
xor
and
mov
jae
cmp
add
xor
mov
or
xor
sbb
jno
inc
stc
xor
or
xchg
frstor
in
xlat
mov
test
jnp
cli
lret
in
push
or
bound
int
cs
mov
dec
stos
ret
jnp
mov
pop
shrb
add
cmpsb
mov
inc
xchg
out
lret
pop
insl
or
add
ja
ja
or
jle
sbb
jle
repz
inc
scas
cmp
fchs
and
mov
test
stos
xor
stos
adc
dec
int
rcl
dec
lods
out
arpl
sub
and
xor
fwait
cli
push
lcall
xchg
imul
jecxz
les
mov
movsl
loop
mov
push
aad
pop
in
popa
ljmp
insb
adc
outsl
ror
cltd
lods
fs
jecxz
pusha
mov
sbb
xchg
and
sub
xchg
fiaddl
pop
lea
es
icebp
lcall
gs
mov
cs
inc
and
scas
xchg
dec
cmp
repz
out
fst
fidivl
ss
hlt
notb
xor
sub
pop
push
dec
cmp
mov
inc
push
cli
xor
popf
mov
stos
mov
push
push
aam
mov
sti
movsl
pop
ret
or
dec
inc
dec
mov
sub
sbbb
subl
in
push
jl
adc
gs
xor
or
jle
xchg
sahf
xchg
cmp
inc
xchg
xor
or
iret
in
sub
ja
leave
hlt
jg
mov
pop
jle
dec
cmpsb
testl
imul
outsl
dec
dec
xchg
push
shrl
xchg
in
testl
pop
out
xchg
cmp
jne
inc
cld
mov
mov
sbbb
adc
fdivrs
scas
mov
movsb
pop
ja
fs
jnp
sbbl
jnp
in
mov
mov
jg
outsb
mov
lock
lcall
inc
mov
push
xlat
movsb
loop
stos
mov
jge
or
imul
inc
mov
inc
std
or
or
gs
inc
jbe
adc
and
add
mov
leave
or
and
scas
mov
out
or
pop
xchg
test
enter
sbb
pop
dec
adc
in
popf
and
aaa
and
int3
fsubs
push
mov
loope
sbb
leave
xchg
lret
fsubr
xor
shr
jo
sarb
push
aaa
lret
pop
loop
ja
mov
inc
jg
xchg
dec
push
mov
xlat
stos
ja
add
xchg
movhps
into
dec
mov
call
jno
jmp
lea
mov
sbb
jmp
ds
in
mov
push
adc
aas
or
sub
xchg
mov
mov
jecxz
std
in
cmc
jmp
adc
imul
loop
lcall
inc
cmp
addr16
int
fwait
cmpsl
scas
imul
mov
mov
mov
mov
and
pusha
or
sbb
and
push
push
neg
jge
les
cld
dec
sti
mov
adc
dec
stos
sbb
addr16
cmp
xchg
xor
push
and
loop
sbb
lock
push
hlt
mov
adc
sahf
pop
pop
aad
sbb
sbb
sti
cmp
lret
sub
add
add
sar
data16
mov
out
jns
mov
hlt
add
add
jnp
pushf
pop
jae
cs
push
aaa
push
mov
lods
xchg
sar
and
mov
mul
pop
add
xchg
hlt
stos
pop
not
and
pop
pop
fcompl
or
xlat
fistps
les
ja
pop
addr16
test
daa
loop
cwtl
imul
test
inc
std
nop
ljmp
pop
mov
je
fcoml
adc
mov
cmova
shll
push
lcall
adc
cmc
js
clc
xor
adc
jl
xor
xchg
dec
sub
or
add
popa
cmp
ret
pop
jge
fwait
jns
test
repz
add
dec
push
push
xchg
jnp
dec
sti
inc
push
push
jp
int3
pop
imul
repz
loopne
dec
jb
pop
pop
xchg
in
scas
or
cltd
jae
and
inc
pop
mov
jne
std
jb
cmp
jecxz
pop
rcr
add
mov
xlat
repz
lods
pop
fisubrl
cld
les
pop
mov
loopne
dec
aam
int
pop
xchg
push
add
sbb
cmp
pop
adc
or
sbb
pop
inc
mov
add
mov
test
pushf
cwtl
pop
mov
lods
ds
ds
fnsave
pshufw
fwait
xchg
lock
jmp
xchg
addr16
jae
add
shrb
push
lret
jge
aad
cmp
jne
mov
dec
adc
inc
enter
or
add
mov
pop
imull
jle
je
sub
les
push
inc
ret
ret
outsb
mov
adc
push
ds
lock
aam
xor
stos
add
mov
sbb
cli
iret
adc
sbb
rolb
stc
sarb
cmp
cwtl
xor
mov
int3
jno
adc
arpl
lret
push
test
mov
pop
pop
dec
inc
and
inc
fidivrl
int
roll
and
adc
inc
push
sti
leave
scas
out
out
in
outsl
int3
movl
sbb
add
mov
jle
jbe
mov
test
xor
jl
sbb
ret
push
xor
jae
outsl
pop
and
add
pop
push
lret
aaa
out
adc
test
add
mov
pop
stc
lret
aas
lods
xchg
jg
jne
ljmp
data16
mov
adc
cwtl
ds
mov
pop
scas
jbe
cmp
mov
cmpsl
repnz
movsl
pop
jg
aaa
into
ret
pop
adcb
aam
sub
stc
inc
adc
mov
pop
lods
orl
and
jo
push
push
mov
mov
or
js
adc
push
pop
leave
xor
int
xchg
mov
cmp
push
push
arpl
test
xor
jp
sbb
xor
rcrb
xchg
test
bound
ss
aad
jecxz
test
iret
add
cld
lahf
push
pop
or
xchg
mov
stc
cmpsl
fldl
fdivrl
outsb
push
pop
mov
push
outsl
dec
adc
push
add
cmpsl
mov
pop
ret
mov
repz
jne
aaa
inc
and
sarb
dec
shll
mov
add
and
sub
adc
add
fsts
rorl
dec
push
mov
mov
into
sbb
pop
add
dec
repz
cld
sub
jl
push
jecxz
movsb
xchg
stc
loope
mov
rcr
mov
sub
pop
bound
js
data16
out
aaa
shlb
sub
mov
jg
sub
aaa
or
or
add
mov
repnz
xchg
mov
ffreep
mov
popa
aaa
stc
psubq
sbb
and
cwtl
push
das
insl
push
mov
repnz
mov
mov
int
xor
mov
addr16
mov
loopne
fs
add
mov
jae
dec
in
cld
sub
iret
out
rcr
mov
in
xchg
mov
lods
jne
es
push
rcr
daa
mov
jle
mov
mov
test
sub
inc
xor
or
outsl
lea
call
das
popa
shrb
jmp
xor
in
sbb
push
lahf
enter
mov
push
xchg
loopne
das
stos
add
jp
in
fistpll
and
loope
sbb
mov
shr
nop
lcall
cmp
sbb
lahf
loop
fiadds
add
add
iret
cmp
outsl
jecxz
push
insl
into
and
add
add
add
bound
or
dec
xlat
dec
push
popf
rclb
mov
shll
xchg
clc
int
jg
sub
push
mov
cmpsl
ljmp
clc
enter
or
jge
jae
push
movsb
push
repnz
push
int
jle
push
ret
aam
push
or
push
pop
dec
fildl
jo
popf
add
cmp
jecxz
pmaxub
mov
les
xor
jmp
lds
out
jne
xchg
roll
jne
sbb
mov
add
pop
xor
mov
jae
or
js
enter
dec
add
add
and
xchg
jge
int3
or
fs
dec
ljmp
jbe
rolb
xchg
sbb
cltd
cmp
xlat
push
inc
int3
dec
cmp
push
aam
pop
and
out
bound
repz
xchg
sub
dec
js
xchg
lock
jbe
mov
mov
lahf
mov
sbb
cs
int
inc
stos
pop
add
xor
jo
mov
into
fdiv
xchg
jle
mov
jb
inc
jae
or
mov
mov
cmpsb
pop
pusha
dec
fsubs
jae
pop
stos
fsts
popa
mov
push
pusha
mov
scas
inc
push
aam
filds
or
and
and
or
mov
pop
aam
push
add
mov
xchg
push
push
cmpsl
loopne
mov
or
das
loope
sbb
leave
dec
cmp
cs
fiadds
adc
iret
in
out
mov
int
xchg
pop
and
sbb
jmp
test
adc
in
xchg
fwait
push
jl
lds
adc
mov
adc
mov
cltd
mov
inc
test
psrld
lods
cmp
pushf
and
cmp
into
insl
imul
mov
incb
pop
xchg
jno
jmp
loopne
int3
mov
loop
jo
push
sbb
pop
mov
jp
leave
dec
lock
jae
or
mov
inc
loop
lods
jmp
sar
jl
arpl
repnz
addr16
and
in
xchg
cs
adc
adc
adc
cmp
pop
sbb
pop
div
add
lahf
push
inc
pusha
inc
xor
push
push
fdivp
dec
out
insl
mov
test
insb
jae
xchg
imul
jge
cmc
pop
sbb
mov
movl
test
ss
clc
mov
sbb
dec
xchg
mov
jnp
push
adc
aam
xchg
dec
outsb
and
rcll
repz
xchg
dec
inc
hlt
mov
xor
mov
cltd
inc
mov
aad
dec
cli
and
cmp
daa
insb
mov
jge
ss
push
sarb
mov
aas
inc
xchg
inc
mov
je
aaa
or
sbb
leave
ret
outsb
je
mov
cmp
cmp
leave
mov
leave
xchg
xchg
inc
or
insl
fwait
pushf
xchg
and
adc
std
inc
insb
xor
pop
pusha
les
les
xchg
adc
idiv
mov
or
std
addr16
repz
sbb
adc
int
xchg
mov
xor
xchg
inc
inc
sbb
sbb
test
push
push
stos
das
cli
or
pop
repz
fnsave
ficompl
out
vmwrite
aam
mov
jge
dec
inc
dec
or
sub
sahf
mov
push
inc
push
imul
repz
adc
mov
stos
mov
filds
imul
lcall
ljmp
stos
adc
scas
ret
mov
jo
nop
ud2
mov
dec
add
adc
inc
cmc
cmp
jge
xchg
enter
ja
pop
sub
mov
or
jns
mov
lcall
lods
or
rol
hlt
mov
test
mov
and
loopne
aas
xor
sbb
xchg
sbb
mov
faddl
mov
movsb
cltd
ds
push
dec
pop
pop
js
jns
data16
das
or
jp
mov
loope
pop
dec
out
sbbb
adc
mov
in
popa
cmpl
ss
sahf
and
mov
addr16
stos
adc
cli
es
mov
cmpsl
push
mov
cmp
push
pop
add
push
in
enter
aad
lds
out
test
inc
jl
jo
add
add
adc
push
std
and
movb
add
hlt
add
add
inc
incb
mov
push
imul
stos
inc
and
and
lods
adcl
mov
jns
orl
jmp
and
enter
rcll
push
sub
xchg
push
mov
ja
xlat
push
and
in
push
es
jno
popf
repz
ds
pop
incl
movsl
dec
in
xchg
fildll
stos
scas
xor
mov
fiaddl
dec
mov
imul
inc
mov
adc
negl
int3
divl
fisttpll
mov
sub
cmp
pop
rcl
add
and
insb
dec
inc
in
or
dec
and
pop
push
cmp
mulb
repnz
inc
mov
mov
dec
dec
cmp
mov
push
test
push
pusha
pop
in
fistps
jne
mov
mov
testb
negb
xlat
adc
dec
jae
test
js
cli
negl
insl
xor
push
nop
cmp
mov
ljmp
cmp
je
xchg
sbb
lret
out
sub
frstor
mov
jle
mov
sub
and
xorb
add
in
stc
xchg
mov
jae
pop
mov
and
mov
mov
aam
or
add
xchg
test
inc
add
sbb
dec
inc
mov
repnz
jnp
ljmp
sub
adc
pop
mov
lds
leave
or
inc
sbb
stos
xchg
fisttps
add
out
push
shll
pop
xor
and
jl
js
addr16
imul
jge
cmp
inc
add
mov
pop
xor
ret
cmp
cwtl
jnp
fwait
es
mov
fisttpll
inc
je
sbb
cmc
mov
sub
outsb
xchg
xor
imul
cmp
stos
mov
repz
pop
push
stc
fisubs
mov
sbb
pop
rcll
and
in
xchg
adc
cli
xorl
stos
dec
add
and
stos
and
mov
mov
xor
cmc
ret
adc
or
cli
mov
icebp
jmp
aam
xor
test
stos
mov
sub
stos
adc
insb
xchg
dec
adcl
mov
xchg
loop
jp
icebp
fmulp
lods
mov
popa
cmpb
loopne
enter
xchg
bound
dec
icebp
stos
dec
pusha
mov
fldl
mov
jp
mov
hlt
adc
adc
fwait
in
loopne
cmp
xchg
push
xchg
fiadds
cmp
aaa
jne
jo
fs
jae
xor
sub
sbb
or
clc
xchg
mov
pop
dec
sub
jl
in
xchg
rolb
xor
repz
mov
cmpsb
jle
fucomip
cld
and
nop
ljmp
pop
push
arpl
incb
add
cmp
out
xchg
and
pop
call
or
lcall
testb
jp
ja
cmp
lds
insb
pop
mov
cmp
fidivs
pusha
or
mov
mov
dec
xor
sub
aad
in
sub
push
test
dec
ds
pop
cmpsl
push
jl
imul
and
mov
adc
rclb
ljmp
movsb
iret
int
scas
jg
test
jle
pop
enter
jbe
jp
rcrb
stos
mov
fsubl
dec
in
daa
inc
mov
push
or
mov
ljmp
and
push
mov
in
loope
jbe
pop
add
cld
push
mov
mov
loopne
addr16
xor
enter
popf
loop
stos
or
xchg
cmpsl
sbb
das
mov
ds
dec
in
or
inc
test
cmp
mov
aaa
sbb
dec
xchg
out
mov
mov
ljmp
adc
ja,pt
mov
icebp
test
pop
ljmp
cmp
push
insb
cs
push
andb
mov
out
out
pop
cmp
sub
pop
dec
daa
es
cmc
cwtl
cmp
jge
nop
jge
test
sbb
ja
jae
fstpl
test
xor
mov
sub
enter
cmc
clc
gs
fnstsw
shr
loop
adc
sahf
mov
lahf
pop
lods
or
addr16
ret
mov
mov
fbld
cmp
add
add
addb
bswap
test
dec
or
mov
sahf
sub
add
add
daa
pop
push
mov
mov
cwtl
inc
lcall
dec
jg
sbb
cmpsb
mov
fiadds
or
adc
xchg
mov
ds
sahf
sub
ja
dec
ret
in
fstl
rorb
mov
lock
stos
xchg
push
sbb
mov
push
rcll
popf
es
loop
icebp
sub
push
inc
sahf
lods
testl
ret
out
xor
incb
sbb
xchg
xlat
push
stos
int3
imul
push
lret
push
lods
mov
aam
push
in
push
and
fs
fwait
outsl
test
arpl
mov
mov
aas
jp
ret
into
decl
add
fsts
ret
popa
jae
dec
mov
xor
jbe
mov
or
jno
or
mov
mov
bound
mov
push
dec
xor
fninit
in
cli
lahf
fiadds
pop
mov
popl
add
ja
xchg
cmp
pop
jb
int
bound
dec
outsl
inc
lods
aas
mov
and
lcall
jge
push
push
xchg
or
iret
sub
adc
adc
mov
and
addr16
jo
sbb
stos
and
mov
gs
stc
test
daa
sub
xorl
ret
mov
int3
sarb
pop
stos
into
push
mov
inc
pusha
mov
fsubr
xchg
loope
or
into
insl
inc
sarb
hlt
lcall
push
sbb
test
outsb
add
lea
popf
ret
xchg
popf
sub
std
add
in
mov
xchg
filds
mov
out
stos
pop
mov
mov
xor
or
adc
stos
mov
jle
xchg
addr16
push
mov
fcmovb
leave
in
jbe
pop
lods
sarb
cli
js
dec
aaa
or
nop
daa
lock
loopne
mov
push
inc
cs
outsb
add
leave
jp
or
daa
cmpsl
jns
mov
in
xchg
or
xchg
jbe
mov
jnp
pop
pop
ss
push
mov
mov
lahf
push
cmpsl
or
addr16
insb
add
outsl
push
stos
out
enter
scas
cli
les
or
cmp
shrl
nop
xchg
ret
aad
adc
adc
incl
push
adcl
sub
jno
pop
push
mov
mov
leave
mov
mov
xor
je
cmp
pop
xchg
sbb
loopne
xchg
into
xchg
mov
fcomps
out
rep
shll
lcall
nop
ss
loopne
addb
cli
loope
push
sub
les
cs
jbe
xchg
inc
mov
frstor
adc
mov
lea
scas
je
mov
add
xor
xor
mov
dec
aaa
shrl
test
add
std
fdivrl
mov
and
mov
je
in
jle
das
lret
sti
sbb
and
das
pop
shll
insb
cmp
mov
inc
test
movsl
sbb
or
mov
stos
gs
fcoml
insl
cmp
cli
je
sub
icebp
xor
daa
icebp
popa
rclb
mov
and
add
pop
jge
sub
inc
mov
ds
neg
int
pop
fwait
push
pushf
notl
data16
inc
int
jge
inc
xchg
out
into
push
aaa
mov
mov
mov
sub
or
nop
ret
je
mov
test
fmuls
test
inc
pop
adc
inc
adc
adc
repnz
aas
sub
push
jl
sub
pop
inc
mov
lds
add
rclb
pop
mov
mov
std
insl
std
push
test
mov
lea
and
push
cmp
xor
fadd
sbb
jnp
loopne
outsb
fcomi
push
addr16
ljmp
insb
jmp
xor
add
mov
inc
dec
xchg
or
jl
and
into
call
or
sub
xchg
test
rolb
sub
xchg
clc
cmp
loopne
cmp
jb
int
jo
out
and
in
inc
lds
and
push
cmp
fcomps
gs
loope
lods
divb
lret
mov
cli
daa
jecxz,pn
movsl
sbb
lcall
inc
cmp
sub
std
stos
addr16
pop
and
test
inc
inc
sub
dec
popf
rcrb
fimull
mov
sahf
int
add
add
fwait
push
pusha
outsl
out
jg
cmc
or
cld
rorl
and
add
hlt
add
add
insb
jo
js
jg
je
and
cmp
pusha
mov
daa
xor
test
iret
dec
popa
pusha
sub
ret
add
out
mov
enter
jne
je
lea
mov
sub
xchg
lods
inc
jp
xchg
mov
push
mov
xlat
xchg
fldt
inc
inc
enter
sahf
fldt
xchg
outsb
cmc
sbb
sub
or
mov
cmp
lods
push
movsl
out
fcompl
xor
dec
aaa
inc
xchg
ret
jo
push
pop
jle
add
out
insb
and
popa
jbe
mov
in
icebp
mov
mov
js
pusha
push
in
cmp
jne
xor
adc
inc
adcb
jge
fld
add
in
jg
incl
js
daa
imul
mov
jge
pop
ljmp
bound
pop
nop
insl
fs
xor
jo
adc
jb
mov
and
cld
push
push
add
call
roll
mov
rorl
mov
test
sbb
dec
xchg
add
push
mov
mov
pushf
xchg
repnz
sbb
pop
sahf
inc
roll
lods
or
xchg
das
xlat
sahf
sbb
shl
jp
lea
xor
cmp
sbb
and
leave
lods
inc
bound
pop
dec
and
adc
std
int3
xchg
in
sub
jle
add
dec
shlb
shlb
repnz
test
jp
clc
repz
inc
and
inc
cmp
pusha
adcb
push
stos
in
add
shll
cmp
jle
fs
xchg
adc
insl
mov
sarl
xchg
popa
movsl
xchg
sysret
bound
out
popf
inc
pop
xor
cld
cwtl
lcall
jnp
movsb
adc
push
fs
ret
mov
adc
xor
push
in
pop
mov
cmp
push
or
inc
adc
fwait
ret
into
sar
popf
aaa
dec
push
xor
lods
mov
adc
fucomi
jne
inc
mov
pusha
int
sub
movsb
or
repnz
push
iret
sbb
pop
dec
xor
cmpsb
push
ss
cld
cmovo
bound
ds
push
adcl
sbb
pop
not
push
xchg
sbb
jns
loopne
mov
insl
mov
out
adc
nop
sub
clc
insb
fiaddl
adc
xor
pusha
shll
sub
repnz
cmp
mov
out
mov
cmp
sbb
ret
sbb
int
sub
dec
mov
sub
mov
icebp
and
lock
mov
push
ret
iret
sti
scas
dec
mov
jmp
rdtsc
push
sbb
addr16
lods
xchg
cltd
loop
cmp
jbe
cmp
rcr
pusha
mov
loop
jp
cli
lock
mov
setbe
in
ret
test
test
out
ret
clc
sub
movsb
xchg
les
pop
sbb
xor
fiadds
dec
sbb
fs
jae
shl
fwait
inc
dec
mov
clc
push
adc
and
adc
and
and
sarl
imul
movsb
and
lcall
movsl
in
sbb
sub
fmull
xor
or
insl
ljmp
mov
repnz
movsb
call
lods
mov
insb
repz
and
mov
nop
jns
pop
mov
and
pop
hlt
testl
jp
pushf
std
or
cld
loope
adc
push
cmp
mov
clc
mov
mov
mov
mov
xchg
jl
add
dec
mov
mov
inc
pop
xchg
sbb
pop
jnp
inc
or
shlb
lods
push
sbb
mov
pusha
mov
sub
inc
outsb
jmp
out
in
xor
popf
xor
ljmp
dec
and
shlb
daa
add
xchg
cmpsl
or
cli
sbb
and
adc
push
add
pop
mov
mov
test
daa
popf
shr
jle
mov
mov
cmp
inc
pop
outsl
inc
cmp
and
test
rclb
movsb
into
xchg
pop
inc
adc
fcoms
aad
dec
push
pop
rcr
pop
mov
in
push
add
mov
and
sbb
dec
mov
xlat
negb
shrl
gs
out
pop
xorl
aad
add
bnd
fiaddl
jo
cs
mov
push
out
mov
in
push
test
add
enter
les
jns
in
add
add
add
outsb
out
lds
cld
pop
addr16
add
add
ljmp
cmp
pop
out
mov
out
imul
shll
icebp
arpl
cltd
pop
jmp
orl
xlat
pop
pop
stc
xchg
ljmp
stos
sub
sub
movsb
and
rcrl
loope
push
mov
pushf
popa
in
jae
jle
cli
jecxz
pop
pop
movl
add
xor
popa
js
flds
les
std
push
pop
pop
add
aas
jecxz
sbb
lods
fsub
dec
or
gs
in
mulb
cwtl
fadd
negb
fnstsw
fisttpll
fisttpll
cmp
jne
jg
mov
add
cmp
jns
rol
sbb
stc
mov
add
jmp
or
fs
jne
xor
mov
sbb
idivl
xchg
or
aad
scas
mov
dec
jb
aam
mov
call
jae
and
jge
push
bswap
sub
fnstenv
add
add
movzbl
leave
sbb
or
pop
sub
je
jecxz
inc
cmp
pushf
int
pop
mov
ljmp
enter
js
jne
gs
inc
ret
inc
hlt
pushf
xchg
mov
jle
fstps
fimull
lcall
testl
sub
or
test
pop
push
and
or
leave
subb
jl
add
xchg
push
imul
jns
cld
mov
mov
pop
push
jl
pop
and
mov
cmp
jl
sub
pop
add
test
sbb
lods
sbb
daa
es
in
inc
xchg
and
and
fidivrs
popf
mov
ficompl
mov
push
stos
int3
adc
adc
mov
mov
scas
fpatan
cmp
sub
jle
pop
pusha
xchg
ljmp
push
divb
clc
pop
dec
fiadds
inc
fs
mov
ret
popa
jo
push
in
fsubrs
mov
in
and
outsl
stos
sub
xor
fmull
push
xchg
push
mov
jmp
xlat
enter
fsubrl
jp
lea
jle
inc
push
xchg
es
or
or
mov
lds
stos
xor
popf
cmp
push
dec
pop
scas
icebp
loope
sub
cmpl
jecxz
repz
mov
clc
cltd
push
mov
movsl
mov
dec
sbb
movsl
add
adc
pop
imul
fiaddl
or
test
add
pop
rorl
stos
add
pop
pop
lea
flds
repz
scas
jle
pop
xchg
inc
mov
and
loope
ljmp
push
sbb
call
or
sbb
in
pop
xorb
or
cmp
lcall
adcb
xchg
inc
sbbl
movl
cli
mov
sbb
cmp
add
vphaddwq
test
test
mov
dec
scas
mov
ret
stc
nop
ja
pop
sbb
repz
jmp
fisubrs
xchg
sub
dec
xor
adc
push
mov
jge
push
call
ss
dec
clc
jecxz
insb
mov
in
cmp
jle
and
jno
jl
xchg
rcll
stc
xor
fs
jmp
cli
push
jecxz
and
mov
add
pop
cmp
cmp
xor
jge
fxch
inc
fs
ss
sti
mov
mov
jb
int3
jb
mov
xchg
pop
std
loope
mov
rcll
mov
lret
push
loopne
sahf
ds
push
add
ja
inc
add
inc
out
bound
loop
or
cmp
sbb
jg
mov
aas
sbb
in
js
movb
jmp
xor
mov
inc
dec
push
pop
shll
inc
iret
and
or
sbb
dec
or
and
xchg
pop
jnp
dec
sbb
test
jbe
xchg
sub
and
push
mov
dec
lret
sarl
sbb
stos
sti
pop
lods
cmp
daa
and
adc
mov
mov
insl
xchg
add
hlt
dec
jg
push
in
movsb
cmp
pop
frstor
inc
int3
pop
sbb
add
out
lret
lods
xlat
sti
mov
or
or
add
hlt
add
add
xchg
sbb
cmp
jp
pop
and
pop
data16
xor
and
add
mov
outsl
rcll
push
adc
xor
imul
mov
cmpsl
aad
movsl
std
mov
xchg
sbb
mov
adc
test
daa
call
cltd
ja
call
pop
and
jbe
jno
xchg
jo
jle
sub
mov
call
sbb
push
adc
roll
movsl
aam
dec
lods
push
imul
xchg
notb
mov
lcall
je
mov
fidivs
stc
cmc
icebp
in
jnp
inc
push
mov
je
fnstenv
into
or
mov
or
movsl
js
fnsave
test
jp
jle
push
fldt
aas
mov
or
jo
or
dec
sbbb
mov
and
fwait
addl
lods
inc
and
push
pop
xchg
sbb
dec
add
ret
adc
lods
lea
mov
mov
test
jl
out
outsb
add
inc
popa
jmp
push
lock
fmull
xor
addr16
add
and
stos
cmpsb
sub
int
jl
out
and
and
or
jl
mov
cli
jmp
jge
and
adc
mov
outsb
sub
pop
jmp
pop
and
jge
jo
add
inc
inc
call
ljmp
movsb
jae
icebp
scas
sub
test
xchg
add
sub
shll
dec
adc
cmove
sbb
imul
adcb
repnz
adc
rep
ljmp
lret
and
xchg
xor
jb
pushf
dec
cmpsb
mov
lock
lahf
mov
xchg
out
adc
or
push
xor
clflush
aaa
popa
sbb
jbe
push
inc
adc
dec
push
lds
sbb
out
repnz
dec
iret
push
fisubrl
sbb
pop
pcmpgtw
mov
inc
out
cmp
repnz
ret
bswap
mov
jp
jmp
jmp
lds
ret
push
filds
mov
push
pop
repnz
lods
clc
insb
inc
dec
inc
rcl
dec
mov
mov
loopne
cmp
lea
fs
sub
shrl
sbb
clc
nop
inc
dec
call
xlat
dec
stos
mov
jmp
lods
bound
jb
fnstsw
out
lahf
out
sbb
sar
mov
or
sub
cld
pushf
mov
cmp
adc
pop
ljmp
shlb
aaa
sub
mov
xchg
jle
movsb
push
xorl
cli
fwait
xor
and
or
call
sub
push
fistpll
mov
icebp
mov
cmp
popf
notb
dec
mov
sti
aad
mov
push
ret
mov
es
jl
jno
push
test
popl
pop
cli
or
sbb
mov
fildl
mov
jns
fmull
adc
adc
lcall
xchg
js
push
or
mov
add
xor
mov
and
add
fistl
jecxz
sub
jge
fbstp
test
pop
imul
loope
hlt
test
inc
inc
addr16
pop
fbld
add
mov
sbb
hlt
push
scas
pop
inc
adc
subl
cli
mov
xor
imul
scas
hlt
lahf
outsb
arpl
outsb
sub
add
cmp
dec
icebp
in
in
roll
std
push
loopne
popa
jbe
and
das
addr16
mov
mov
mov
cmp
lds
lret
dec
inc
dec
push
add
cmp
mov
inc
repnz
adc
call
in
out
dec
cltd
aad
inc
pop
mov
sahf
sub
mov
pop
ds
sub
add
mov
ss
in
adc
les
mov
les
cmp
icebp
je
cmp
add
sub
fisttpll
popf
rol
and
and
mov
sbb
in
cld
outsb
and
int3
stos
ret
push
mov
add
xor
in
mov
jb
cmpsb
loope
fcomi
data16
frstor
sti
in
jg
add
loopne
out
mov
cwtl
mov
jg
or
add
or
push
mov
test
repnz
cld
pop
addb
push
and
outsb
mov
inc
add
add
jno
loop
bnd
fcomi
mov
or
aaa
std
fiaddl
add
add
add
xchg
dec
out
add
lods
xchg
test
mov
xchg
leave
cmp
dec
imul
mov
out
pop
int3
rclb
lods
fwait
mov
sub
dec
push
dec
data16
mov
int3
out
lods
sub
jmp
cmc
sti
sub
fisttps
ljmp
push
or
repnz
lret
test
jle
insb
inc
jae
xorl
jecxz
sbb
lds
fsubrs
repnz
push
sbb
push
into
inc
ret
ret
adc
cli
inc
and
adc
in
je
lods
js
jno
cld
sub
ficompl
sub
in
push
xchg
imull
fistpll
push
and
lock
in
das
sbb
inc
mov
inc
sbb
std
xor
mov
xlat
mov
jo
or
or
xchg
movsl
and
dec
jp
add
xor
shll
dec
pop
notb
xor
mov
mov
shll
das
xor
lahf
cmp
aaa
inc
dec
xor
mov
sub
lea
sbb
push
fwait
mov
dec
pop
add
lahf
xor
pop
lcall
shlb
pop
flds
adc
sub
ret
pop
pop
add
pop
in
push
pop
cs
std
mov
inc
jne
dec
and
cmp
out
cmp
xchg
fldl
xor
mov
stos
push
mov
lock
popa
sub
mov
fidivs
add
cmp
jnp
aaa
sub
subb
scas
loopne
into
and
mov
loopne
hlt
jmp
lret
roll
lret
roll
or
pop
cltd
jg
adc
clc
jg
stos
add
loopne
or
int
jne
cmpsl
arpl
mov
mov
mov
jmp
lock
nop
jl
icebp
mov
dec
mov
sub
shrb
mov
cmp
outsb
mov
ds
jae
cmpb
jb
cmp
shrl
push
mov
leave
dec
pop
adc
jmp
in
push
push
mov
adc
inc
in
aad
movsb
hlt
cmpsl
aam
mov
mov
sub
sub
adc
push
adcl
push
roll
sahf
mov
nopl
add
movsb
mov
lret
push
xor
cld
push
push
aas
nop
in
jo
add
inc
out
fnstcw
fucom
sub
mov
push
inc
push
or
das
push
sub
icebp
popa
daa
out
cs
pop
xlat
mov
hlt
pop
pop
add
jno
inc
ljmp
xchg
out
out
ret
mov
jle
fadd
xchg
adc
popa
inc
jge
and
xchg
ljmp
out
stos
cmp
sbb
test
pop
in
loopne
dec
sbb
adc
pop
sub
cmp
das
scas
add
pushf
add
test
sti
pop
out
xchg
pop
pushl
flds
popf
fs
mov
movsb
movsl
enter
loopne
and
lea
or
add
out
mov
adc
jae
test
movsb
push
mov
outsl
scas
movsl
sti
cmp
or
sub
add
addr16
rolb
lret
mov
push
shl
inc
xchg
ds
cmc
fmull
sbb
sbb
cmp
mov
mov
sbb
add
add
sub
loopne
push
lret
repnz
push
sar
movsb
int
stc
or
call
je
sub
and
fistpll
cwtl
leave
js
stc
xor
xor
xchg
adc
lahf
mov
push
lcall
cmp
jae
cltd
cwtl
outsb
int3
fwait
cmp
or
faddl
aam
or
mov
idivl
adc
or
xor
cs
out
mov
in
loopne
sbb
xor
dec
jge
in
push
push
imul
cmp
pop
decb
test
addl
lret
dec
in
jnp
pop
notb
add
popa
test
mov
sub
imul
test
sar
dec
js
or
int
jns
mov
sub
rcll
pop
xchg
push
pop
loope
fistpl
inc
inc
cmp
repnz
jns
xor
jmp
xor
mov
ja
lods
ret
popf
mov
jno
pxor
mov
mov
fldcw
mov
daa
inc
push
mov
test
aas
mov
pop
push
add
add
ss
in
inc
sub
add
add
add
ror
ret
andb
daa
aam
sbb
push
sbb
sbb
adc
xor
cmp
fwait
clc
mov
pop
das
inc
or
pusha
jmp
mov
sarb
lods
pusha
cmc
xor
loop
and
clc
lret
jecxz
stos
pop
push
cs
fdivrs
stos
lea
loop
sbb
dec
mov
mov
lahf
jbe
hlt
dec
pop
clc
stos
sub
lret
push
adc
adc
in
ret
or
jne
call
push
mov
and
pop
ret
repnz
repz
push
aas
mov
popf
movsb
push
and
dec
push
iret
std
sub
xchg
xor
dec
mov
popl
inc
or
and
test
push
shll
je
loope
cwtl
sti
xchg
je
adc
stos
mov
cmp
or
clc
lret
mov
pop
or
ffree
lahf
mov
jmp
push
cmpsb
jle
xor
scas
insb
jnp
jecxz
test
sub
push
into
and
cmp
lcall
sub
rcr
push
sbb
xor
xchg
mov
add
hlt
jle
adc
je
pop
mov
mov
sahf
jg
testl
dec
imulb
movsb
pop
xchg
mov
out
mov
xorb
cwtl
mov
sub
xchg
or
pop
mov
or
popa
dec
jnp
testb
sbb
in
bound
jnp
jle
sbb
cli
fidivs
sub
pop
stos
ds
mov
dec
inc
dec
cmp
cmp
xchg
mov
leave
jbe
test
mov
inc
jmp
jmp
or
gs
and
fcoml
dec
lcall
in
stos
jnp
inc
jmp
enter
mov
lods
mov
mov
clc
adc
aad
dec
or
fistpl
adc
aaa
cld
popf
pop
pop
adc
jnp
in
scas
inc
cmc
adc
inc
adc
mov
sbb
sbb
jo
dec
lock
fsub
dec
xchg
imul
adc
or
push
cmp
into
loop
outsb
cmp
or
dec
stos
out
fstpt
popf
cmpsb
cltd
add
xchg
sar
xlat
mov
cli
mov
popa
jb
out
mov
sahf
inc
cmp
out
pop
or
xchg
xchg
jb
mov
push
sub
shll
ljmp
and
test
and
lods
pop
push
loop
pop
pop
xchg
cmpsl
and
mov
jo
mov
xlat
add
dec
adc
inc
cmp
leave
test
fsub
test
movsl
mov
test
fs
cs
xchg
adc
into
lahf
xor
in
cmp
mov
aas
push
and
movsb
xlat
iret
mov
rcrl
dec
outsb
push
and
repz
xchg
push
cli
push
xor
xchg
lea
mov
out
sar
leave
jne
mov
jmp
in
mov
xlat
push
push
arpl
fadd
lods
imul
daa
mov
outsb
imul
mov
sub
fisttps
xchg
cs
inc
xchg
push
test
xor
out
out
fwait
popa
sbb
cmp
push
pop
rorl
jno
pop
je
jecxz
xchg
shr
mov
dec
pop
stos
push
xlat
out
stos
pop
loope
jp
mov
rcr
lret
pushf
push
inc
jne
shrb
push
xor
jo
clc
push
imul
rcll
shrl
fdivrl
test
pushf
ja
push
fsubrs
pop
fucomp
mov
das
xchg
push
dec
arpl
imul
arpl
mov
pop
ret
mov
leave
mov
leave
stos
movsl
cmpsl
hlt
dec
mov
rolb
jnp
jg
js
xchg
and
popl
jne
cmpsl
test
out
ja
jno
xor
add
pop
mov
mov
cmc
fcmove
in
jmp
sub
jge
ficomps
mov
js
inc
imul
fistpll
scas
push
or
adc
bsf
subl
pop
pushf
jecxz
mov
out
imul
rorb
and
popa
jle
push
mov
cmp
xchg
in
adc
loope
js
arpl
das
stos
dec
mov
shl
add
cmp
adc
aad
push
pusha
loop
fadds
mov
mov
push
lcall
std
jb
lods
mov
add
add
xchg
rcrb
pop
roll
sahf
dec
jmp
hlt
add
add
aam
xchg
add
mov
leave
loop
or
flds
lods
adc
mov
stc
jp
add
loop
into
jge
xor
push
jno
adc
jnp
lahf
jg
adc
lock
mov
pusha
sbb
mov
sbb
pop
test
int3
sarb
inc
mov
jl
add
pusha
mov
sub
ret
cmp
adc
mov
push
lahf
mov
lcall
fists
push
sti
dec
pop
lret
push
ret
dec
out
aaa
sahf
mov
adc
xchg
jo
adc
orl
orl
fwait
outsb
pop
dec
lods
stos
mov
ja
in
dec
add
aad
jb
std
fistps
icebp
jbe
xchg
cmp
fstl
icebp
mov
mov
out
mov
jne
jae
scas
dec
pop
gs
pop
dec
mov
rcr
and
mov
mov
loopne
std
lods
pop
lds
movsl
aaa
enter
aas
repnz
testl
xor
movsl
cmp
sbb
notb
ficomps
rcrl
in
in
iret
aas
in
adc
push
arpl
sbb
dec
fistps
inc
sbb
push
dec
inc
jl
push
andl
add
sub
nop
xchg
cwtl
mov
jp
sbb
ficompl
arpl
icebp
and
lahf
divb
arpl
or
add
aaa
adc
int3
adc
pop
hlt
addb
fs
out
in
in
mov
ljmp
cmp
pop
mov
lods
push
mov
mov
sub
dec
sbb
imul
loopne
dec
and
out
ret
push
pushf
push
mov
pusha
sub
xchg
cli
jae
pop
repnz
push
fimuls
sbb
push
dec
cmp
fs
lea
pop
or
rcrb
fdivrl
cld
mov
mov
pop
movsl
outsl
std
flds
cmc
push
and
daa
gs
sbb
jle
mov
rorl
es
push
shll
fldenv
dec
das
mov
push
notl
dec
rorb
imulb
inc
pop
int
decb
pop
xchg
mov
xchg
ds
or
jne
ss
inc
and
cmpsb
test
mov
jmp
pop
fldlg2
imul
decb
adc
ss
cmp
call
jnp
sub
daa
mov
je
dec
test
pop
out
cmp
cwtl
iret
push
xor
fs
pop
or
mov
lret
mov
mov
fwait
lods
rcrl
push
xchg
or
jo
pushf
imul
aas
loope
dec
in
push
sbb
mov
mov
nop
pop
add
test
movb
or
push
pop
loopne
ret
inc
mov
in
inc
stos
mov
xchg
cli
xor
out
cmp
sbb
xchg
sti
sub
jmp
inc
stos
and
xchg
stos
jbe
insl
addr16
pop
icebp
xor
test
sbb
fnstenv
lods
imul
dec
mov
xchg
dec
mov
jle
mov
addb
test
aad
hlt
mov
jecxz
mov
cmp
mul
jecxz
std
in
pop
push
pusha
out
jp
mov
mov
mov
sub
ret
and
inc
in
int3
jnp
adc
and
mov
sub
inc
aad
push
sarb
mov
rcrb
xor
imul
bound
xchg
int
and
ljmp
fwait
sti
les
stos
repnz
xchg
push
popf
jb
dec
adc
lds
pop
jne
adc
adc
jo
shrl
jg
pusha
test
mov
iret
sbb
dec
xorl
fs
and
dec
out
enter
dec
jae
push
cmpsb
pop
xor
loop
jbe
daa
cmp
cmp
in
insb
push
xor
aaa
insl
loopne
ret
dec
push
mov
hlt
xor
sub
cmpsl
mov
xchg
shl
mov
pusha
daa
mov
mov
cmc
jg
outsb
xchg
pop
and
maxps
in
mov
je
xor
and
subb
inc
testb
sarb
movsb
push
stos
or
and
out
push
aas
pop
das
sub
xchg
add
cmp
xor
dec
xchg
push
xor
jne
add
scas
pop
test
xchg
fidivs
xor
xchg
notb
mov
xchg
cmp
mov
inc
push
xor
mov
push
xchg
xchg
jns
add
add
sub
mov
inc
cmp
idivb
hlt
add
add
inc
int
xor
or
std
loopew
cs
add
adc
add
cmpl
sub
mov
lock
popf
hlt
mov
xchg
sti
sbb
cli
xchg
pop
pop
rcrb
and
sub
push
pop
cmp
cmp
std
sub
jne
or
loope
mov
aaa
daa
out
add
mov
pop
stos
sub
inc
adc
fsubl
mov
gs
add
loopne
push
inc
jg
sub
jne
push
jbe
pop
cmp
cmc
sbb
xchg
or
in
repnz
push
outsb
push
gs
xchg
test
or
and
rcrl
jl
in
aam
subl
jmp
sbb
pop
add
dec
push
sbb
sub
aaa
or
dec
dec
outsb
sarl
mov
xchg
outsl
mov
out
pop
mov
cmpsl
push
sbb
popf
jns
stos
lcall
test
inc
cli
ret
xchg
fucomip
pushf
add
outsl
scas
cmpsl
xor
fists
cld
xor
adc
scas
adcb
lock
dec
mov
ret
add
lds
jmp
mov
add
ret
sti
jnp
cs
addr16
data16
push
mov
mov
dec
push
mov
mov
jp
pop
emms
push
jbe
loopne
cmovg
mov
insb
xchg
orb
and
ds
fnclex
cmpsl
jl
fmull
cmp
in
sub
xor
pop
test
mov
inc
cmp
stos
pop
ficoms
into
pop
mov
xchg
mov
mov
cmp
insb
mov
into
in
or
insl
popa
jecxz
scas
inc
mov
adc
mov
ja
jmp
es
mov
xchg
add
fsubl
sbb
movsb
jne
aad
arpl
aam
lea
jnp
adc
loop
mov
out
test
push
insb
fs
shll
stos
jnp
jmp
mov
bound
lods
push
cli
and
in
pop
inc
or
pushf
out
lcall
pop
and
fdivrl
das
mov
mov
lret
scas
mov
test
mov
jne
sbb
jne
lret
stc
push
inc
repnz
out
pop
sarb
cmp
xchg
add
mov
je
push
jo
repnz
xchg
lahf
sbb
or
icebp
push
das
mov
imul
repz
mov
lds
movsl
cmpsb
fldenv
dec
sub
dec
dec
adc
cmp
or
mov
or
xchg
inc
out
ret
lcall
pushf
imul
push
js
and
lret
jo
aaa
mov
jae
mov
out
stos
jns
into
xchg
xor
cld
mov
faddl
xchg
xchg
in
dec
mov
fstpl
ss
popf
sub
dec
cli
jmp
and
mov
cmp
adc
lret
insb
push
jo
stc
cli
test
fstpt
xchg
sarl
push
add
dec
das
gs
faddl
fldl
in
add
mov
repnz
xor
nop
inc
lock
adc
xchg
push
out
pop
cmpl
inc
aas
mov
imul
call
mov
daa
or
ljmp
jecxz
dec
mov
clc
xor
push
sub
daa
and
les
into
aam
push
cmpsl
fbstp
icebp
jno
fisttpl
movsb
mov
adc
jo
repz
sbb
iret
loope
inc
dec
scas
mov
aad
in
stos
jns
xchg
fstp
xlat
sahf
pushf
fildl
push
xchg
push
test
ficoml
add
iret
xchg
aam
mov
sbb
pop
sub
inc
add
mov
jno
das
aaa
or
pop
cwtl
lret
insb
mov
fcmovu
mov
mov
pop
cli
loopne
sti
int3
jecxz
xor
stc
pop
loope
pusha
dec
repz
movsb
xchg
xchg
mov
mov
repnz
or
xchg
stos
out
xchg
cmc
cwtl
push
xchg
mov
ljmp
xchg
add
sbb
pop
fiadds
inc
popf
push
pusha
sbb
or
loop
inc
adc
or
iret
cmp
or
dec
cmc
mov
dec
jne
push
mov
dec
dec
mov
cld
inc
icebp
subl
mov
add
xor
mov
js
loope
add
add
les
std
mov
cli
cmp
out
add
hlt
add
add
mov
inc
enter
or
xor
imul
data16
daa
inc
xor
sahf
add
jmp
movsl
mov
rolb
jg
test
sub
xchg
out
pop
ret
jecxz
pop
ret
add
test
inc
jo
push
adc
xor
in
mov
pushl
add
iret
call
push
adc
and
ficomps
xchg
lods
and
pusha
movsb
cli
adc
aam
std
iret
jo
add
pushf
aam
mov
stos
cmp
cmp
or
jge
ss
jle
pop
xchg
xor
ja
mov
inc
sbb
repz
cmc
hlt
push
sbb
push
fildll
fiadds
xor
cltd
fistpll
jge
or
xchg
mov
stos
mov
test
pop
mov
loope
xchg
adc
imul
shr
or
xchg
mov
hlt
bound
cmp
adc
cmp
mov
or
adc
mov
pop
mov
addr16
adc
cmp
popf
fisubrs
aam
pop
lret
add
inc
int3
jae
aad
lahf
popa
and
je
cmp
outsb
jecxz
iret
dec
xor
or
jb
push
sbb
stc
dec
add
cld
cltd
cmp
mov
xlat
mov
pop
cmp
scas
inc
sbb
lret
lds
or
mov
or
mov
ds
xor
cmpsb
std
mov
sarl
mov
out
push
mov
arpl
loop
push
inc
lret
and
out
mov
mull
out
js
or
inc
inc
orl
inc
les
or
cmpsl
fsubs
and
rclb
mov
ja
int3
repz
mov
jge
jg
std
jae
mov
sahf
lahf
xchg
adc
jg
pusha
stc
cwtl
cmp
sahf
pop
add
jp
ss
mov
jno
xchg
or
add
scas
mov
cmp
ret
and
push
call
mov
push
add
das
dec
std
rorl
push
insl
dec
nop
sbb
in
jl
lahf
inc
xlat
in
jl
pop
sub
push
dec
inc
push
sbb
mov
mov
lcall
cli
in
cmp
mov
jno
jbe
inc
adc
jnp
into
xchg
lods
mov
or
aam
and
jo
repz
dec
lock
ss
and
call
cltd
nop
mul
mov
mov
sub
xchg
pop
mov
das
mov
sub
xor
icebp
pop
imul
mov
lcall
dec
mov
pushl
push
adc
cs
jnp
scas
test
mov
addl
stos
aas
fwait
mov
or
loopne
inc
subl
rorb
push
add
scas
and
test
adc
or
sbb
inc
inc
fnstcw
shll
add
ss
arpl
adc
mov
insl
insb
jle
stos
and
jae
loope
sahf
pop
ja
and
xchg
lcall
addr16
popf
shr
bound
sbb
nop
cmpsb
pop
out
jecxz
pop
leave
popf
mov
jecxz
jg
bound
lds
pop
sbb
test
es
or
aad
arpl
sysexit
inc
sub
in
xchg
stc
dec
and
imul
cld
mov
inc
aaa
pop
and
or
fcoms
fstps
push
add
mov
js
mov
shll
aaa
mov
fwait
cmovnp
test
mov
or
subl
inc
pop
push
or
push
fldcw
enter
adc
mov
xchg
add
and
imul
lds
push
mov
ljmp
leave
sbb
jecxz
xor
fnstsw
scas
stos
jp
xchg
mov
inc
cmp
jb
scas
xor
add
imul
jno
push
mov
movd
jecxz
mov
inc
pop
adc
jp
aam
scas
aaa
push
jo
addb
jae
sarl
and
push
adc
out
lock
scas
xor
lret
popa
pcmpeqw
pop
cld
adc
mov
stos
mov
or
inc
fs
test
xlat
std
sbb
xor
sub
arpl
ja
push
dec
shr
jg
push
mov
je
shl
add
add
add
jl
mov
mov
mov
jp
add
cmp
andl
cld
cmp
les
mov
adc
and
sahf
aaa
pusha
notl
std
pop
ffreep
popf
les
cmc
scas
shll
sbb
lahf
insb
cmpsl
sbb
push
mov
mov
xor
push
enter
jmp
pop
insb
push
shld
push
test
sbb
test
stc
sub
mov
dec
in
sbb
or
xchg
fwait
es
negl
jle
pop
enter
fistpll
pop
pushf
ds
fcomi
arpl
mov
lret
adcl
lea
dec
cmc
fidivs
lds
mov
subl
js
cmc
cmp
xor
xchg
insb
add
pusha
push
cld
cmpb
rorb
je
mov
rclb
sti
pop
lret
xor
sub
add
mov
lea
cli
fistpll
mov
pop
add
fs
jge
call
cmpsb
add
gs
ljmp
push
js
or
cmp
sub
mov
mov
xor
test
and
imul
or
fs
dec
jb
cltd
in
mov
inc
shl
lcall
cli
arpl
sbb
pushl
dec
rol
mov
adc
push
fcoms
add
pusha
inc
dec
ret
mov
jg
sub
repz
cs
dec
punpcklbw
jb
int
andb
lods
lock
pop
cmc
mov
xchg
aaa
push
xchg
sub
repnz
fs
jb
mov
cltd
rcrl
add
pop
inc
and
clc
add
pop
xor
adc
and
xchg
pop
cmp
pop
daa
sub
insl
push
mov
jg
scas
mov
adc
stc
cmp
xchg
les
sub
xchg
or
xchg
pop
sub
iret
inc
mov
lcall
fcomi
push
je
test
cli
ds
jae
or
cmp
cmp
mov
jns
cmp
gs
and
mov
push
lahf
imul
pop
jns
dec
mov
nop
les
std
mov
and
lods
sarl
in
and
shll
mov
add
lret
test
mov
dec
jmp
in
xchg
add
and
add
xchg
pop
jecxz
jno
gs
pusha
xchg
aaa
popf
mov
sbb
repnz
mov
mov
adc
fnstcw
clc
dec
xchg
mov
sbb
movsb
xor
xor
rorb
dec
mov
mov
xchg
sub
xor
sub
jbe
mov
adc
scas
sahf
sar
outsl
insb
stos
mov
fcomps
enter
xor
cwtl
push
fwait
jecxz
les
xchg
or
push
add
or
hlt
cmc
push
test
pop
jne
cmpsl
cmp
shlb
sbb
movsl
jge
adc
xchg
push
adc
inc
into
cmp
pop
mov
sbb
fiadds
jle
xchg
shrl
rcll
fwait
push
mov
xchg
adcl
fstps
lcall
mov
js
loope
into
test
dec
js
test
shlb
cli
outsb
and
sub
lret
jne
scas
fprem
inc
or
sbb
sub
test
test
adc
fisubl
cmp
pusha
jne
mov
or
pop
aaa
dec
cmp
mov
pop
aas
push
mov
pop
int
cmp
xchg
scas
and
jg
jl
outsb
add
cmp
gs
cld
je
lea
push
jb
and
and
mov
cmpsl
mov
xorl
out
or
mov
dec
pop
ret
xchg
mov
inc
call
imul
push
add
arpl
add
pop
jnp
mov
mov
sub
rolb
sbb
and
repnz
mov
aaa
loopne
xchg
add
lcall
lock
int
adc
scas
data16
lret
popf
adc
dec
mov
push
es
cmc
pop
jbe
test
cmpsb
pushf
mov
mov
lahf
in
jnp
sar
jbe
stos
sti
jno
pop
mov
and
fisttps
add
add
movsl
push
movsl
shl
divl
fwait
js
mov
add
flds
add
nop
or
call
leave
popl
and
xor
cmp
or
mov
leave
out
rorl
outsb
mov
mov
in
adc
cmp
shl
mov
cmp
call
or
cmpsb
mov
stos
dec
nop
es
clc
jecxz
fdivrl
mov
movsl
inc
fdivrl
fcmovnbe
pop
cmp
popf
xlat
lret
in
xchg
cmpsl
dec
push
pop
shlb
pop
and
bound
in
rsm
push
repnz
test
sub
inc
xlat
ds
ljmp
daa
push
mov
movsl
dec
rclb
enter
or
sub
aas
sbb
add
fs
test
out
pop
addr16
frstor
xchg
repz
jbe
sbb
idivl
xor
jle
adc
loopne
filds
cmp
addr16
xchg
shl
ficoml
push
aaa
push
adc
sbb
xor
hlt
mov
or
mov
dec
xchg
dec
xchg
push
xchg
mov
out
push
push
push
add
dec
out
mov
outsl
push
mov
cs
mov
loopne
aaa
imul
cmpsb
jl
out
xor
jl
mov
jbe
pop
pusha
add
dec
jge
inc
leave
xabort
dec
orl
fwait
cld
jle
xor
movsl
sbb
pop
adc
imul
push
dec
pop
mov
jns
repz
lock
jp
test
sbb
lds
mov
sub
mov
and
mov
repnz
dec
cmp
out
ss
out
outsb
adc
lea
stos
call
frstor
test
testb
fistpl
xchg
add
lds
bound
leave
push
push
call
lods
mov
xchg
loop
and
ja
ror
add
lahf
stos
je
add
and
pop
out
stc
aaa
push
fsubl
outsl
jns
push
arpl
in
rcrb
mov
pop
add
out
jle
stos
cli
loopne
int
inc
jne
je
sahf
aaa
ja
fsubs
movsl
xchg
dec
rolb
or
inc
add
pop
xchg
cmpsl
call
test
jle
out
lahf
outsb
push
fwait
lods
jmp
call
mov
xchg
fnsave
in
pop
pop
xor
or
jbe
aad
cmpsb
mov
cmpsb
pop
mov
xchg
mov
sbb
push
insb
popf
xchg
adc
fistpl
ljmp
dec
js
jne
gs
add
pop
pop
jne
add
ss
pop
or
aad
jae
cmp
aam
dec
scas
jmp
sbb
test
stos
fmull
jae
inc
sub
xchg
jbe
mov
mov
mov
scas
cwtl
mov
fisubl
jle
cmpsb
inc
test
rcrb
dec
dec
push
subl
sub
sbb
stc
enter
inc
cld
mov
and
push
stos
adc
test
adc
dec
cs
jne
lock
jne
pop
popa
jecxz
cltd
adc
ss
enter
jnp
mov
adcb
push
mov
ret
jne
ret
mov
mov
clc
push
xor
push
into
imul
dec
cmp
push
sub
lods
xor
xor
push
lods
cli
aam
fs
push
mov
mov
lods
test
and
jp
or
dec
int3
ja
jp
lock
lcall
xchg
test
or
mov
sub
xor
or
rcll
or
cli
inc
push
lret
in
js
mov
loop
stc
adc
push
sbb
ret
pop
rcll
mov
mov
ja
out
dec
inc
fdivrl
inc
shll
jle
jle
es
movsl
nop
mov
push
pushl
int
pop
xchg
ss
or
outsb
mov
scas
fwait
or
leave
jg
mov
test
popa
lret
mov
mov
rcrl
sbb
mov
jns
dec
xchg
rcrl
loope
add
pushf
mov
push
push
push
dec
push
mov
adcb
shl
mov
inc
cli
leave
dec
pop
jle
fistl
adc
fnstenv
xorl
lods
mov
xlat
jns
lcall
or
movsb
out
xchg
out
lcall
in
data16
iret
adc
jbe
pusha
mov
or
push
