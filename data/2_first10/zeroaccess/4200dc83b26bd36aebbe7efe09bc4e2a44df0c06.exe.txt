push
mov
sub
mov
movzbl
mov
mov
movl
movl
cmp
movl
jne
or
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
push
pushl
pushl
call
xor
or
dec
mov
jmp
add
push
xor
or
adc
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movzwl
not
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
push
mov
movzwl
mov
mov
mov
movl
movl
mov
jmp
sbbb
cltd
js
mov
sbb
adc
jo
jo
jo
rcl
aad
ror
rol
pop
push
add
in
rdpmc
cmpps
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
int
jle
sub
push
notb
stos
xor
push
movsl
jb
xlat
and
clc
mov
aam
fwait
adc
fwait
js
push
sbb
jg
fcmovb
je
dec
pushf
push
xchg
mov
addr16
pop
test
jp
rolb
push
enter
js
mov
stos
dec
outsb
dec
iret
aad
repz
call
sbb
push
lcall
cmp
dec
xor
push
push
lret
sar
inc
add
jb
mov
add
dec
mov
cmp
or
pop
xchg
cmp
lcall
fdivs
sub
cmc
and
fwait
mov
sub
insb
dec
testb
dec
icebp
das
daa
fs
dec
pop
scas
push
repnz
shrb
stc
cmpl
mov
vshufpd
jmp
enter
std
mov
mov
pop
or
mov
jmp
xor
out
fildl
or
xchg
loopne
arpl
test
sub
cmc
add
and
jo
mov
jl
popf
mov
jo
sub
loopnew
cmp
fcoml
mov
adc
mov
insl
lods
js
in
pop
jb
sti
add
sub
fisubrs
out
decb
notl
mov
jmp
clc
icebp
mov
icebp
ficompl
in
jo
jo
jo
jo
popf
add
cmpsb
mov
stos
lahf
sub
dec
cmp
or
nop
sbb
in
cwtl
mov
out
leave
or
dec
das
mov
mov
dec
cmp
xor
outsl
gs
sub
test
inc
jo
cld
mov
lret
xchg
sbb
fwait
xor
mov
jno
fcoml
in
int
rcl
scas
xor
scas
mov
adc
mov
lahf
stc
scas
and
mov
push
das
test
test
mov
mov
mov
or
mov
lock
xlat
test
lods
jg
std
mov
xorl
out
test
cmp
cs
or
add
xor
push
fxtract
mov
xor
loopne
mov
cli
sbb
das
in
or
out
out
mov
dec
scas
in
jb
int
loop
xchg
cmp
aad
xchg
sbb
std
je
mov
dec
add
mov
imulb
pushf
cmc
or
test
arpl
test
jnp
sub
mov
ret
jmp
or
out
pop
xchg
mov
dec
lods
push
xchg
jg
popa
pop
imulb
fwait
push
add
mulb
jmp
pop
fsts
sbb
cmpb
xor
fs
mov
outsb
dec
xchg
sub
in
mov
sbb
pop
cmc
pop
mov
inc
jecxz
dec
test
adc
pop
and
loope
test
data16
dec
dec
adc
sbb
repz
test
jo
lods
dec
arpl
lea
jg
gs
push
jle
stos
sbb
pushf
call
jl
mov
aad
ret
cmc
pop
xor
repz
mov
xchg
incb
insb
mov
in
adc
jo
test
jmp
mov
mov
and
xor
lea
mov
mov
mov
lea
jmp
dec
iret
lods
dec
lods
imul
xor
jl
jo
jle
jo
test
xchg
push
jno
sahf
pop
notb
sbb
ss
cltd
imul
ljmp
push
lret
push
repnz
inc
in
mov
std
dec
jo
or
xor
mov
pusha
mov
outsb
ret
cltd
xchg
hlt
xchg
bound
pop
imul
push
dec
lods
cwtl
in
mov
xor
sub
cwtl
xchg
xor
int
les
inc
mov
mov
movsl
cs
mov
inc
and
xor
jge
or
dec
movsl
mov
sub
jb
jecxz
fistpll
imul
test
cli
rorb
inc
ljmp
inc
mov
pop
jg
scas
shll
in
xchg
sub
add
jb
rorl
cmp
lret
mov
aas
ljmp
imul
pop
inc
test
pushf
and
jl
cli
fwait
or
sub
insl
sbb
push
pmaxsw
orb
arpl
cmpsl
push
cmp
shl
jo
sbb
and
pop
mov
xor
add
arpl
movsl
xchg
push
add
mov
ffreep
mov
lock
pop
push
iret
scas
inc
out
aad
rolw
scas
inc
scas
and
fstpt
pop
push
shrb
push
and
cwtl
dec
leave
test
mov
jae
aad
call
pop
xchg
cmp
int3
cmp
cs
cld
addr16
repz
in
movsb
mov
and
pand
push
jg
mov
movsb
jb
aam
test
add
test
jae,pn
fstps
pushl
out
lds
jno
in
imul
dec
sbb
jnp
adc
dec
xchg
jbe
mov
jl
inc
in
inc
in
add
inc
in
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
jmp
int3
sub
push
mov
fucomp
mov
jo
jo
js
push
xchg
pop
mov
repz
mov
pop
cltd
and
cmpsb
sahf
dec
and
sub
dec
dec
out
push
sub
aam
int3
pop
mov
push
mov
roll
vpmacssdql
cwtl
or
das
sbb
ss
cltd
outsl
nop
enter
inc
xchg
push
sbb
inc
test
pop
pop
cmp
ljmp
shll
shrl
cmp
mov
roll
ss
dec
test
sbb
cmp
icebp
data16
imul
pop
js
mov
stos
cmp
or
mov
out
adc
or
lock
cmp
mov
push
outsb
xor
mov
fxch
addr16
inc
or
push
mov
cld
adc
std
aad
mov
dec
xor
popa
mov
cmpsb
mov
cmpsl
mov
add
xchg
dec
ret
sarl
jbe
cmp
push
loopne
xor
xor
mov
fs
aaa
fucomi
mov
add
imul
and
int
pop
sbb
test
lods
arpl
jb
js
inc
imul
push
stc
and
test
mov
fdivrs
jl
clc
jae
dec
addr16
push
movsb
shlb
jnp
or
push
push
add
push
push
insl
pusha
mov
xchg
clc
push
and
lcall
into
dec
pushf
out
xlat
jmp
inc
push
jp
fimuls
hlt
addr16
fwait
shl
test
pop
adc
add
jmp
lods
adc
imul
push
movhps
push
in
lahf
jnp
lds
movsb
pop
dec
sub
loop
daa
mov
xor
mov
jle
push
mov
dec
repz
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
jmp
popa
ja
add
xorl
adc
mov
inc
scas
cmpsl
jo
jo
jo
jo
movsb
fcomp
loop
push
das
in
xchg
and
fimull
cmp
jl
divb
pop
sbb
mov
mov
mov
sub
mov
add
scas
xchg
lret
sbb
fists
xchg
out
out
fiaddl
cmp
test
rsm
iret
movsb
cmp
jns
dec
addr16
mov
scas
pop
mov
movsl
andb
xor
pop
xchg
mov
add
stos
pop
test
sub
push
das
mov
adc
pop
xor
cmp
adc
mov
lcall
xor
mov
cltd
mov
sub
cmp
sahf
cmp
pop
lods
sbb
or
fimull
mov
xchg
xchg
out
lock
push
out
fs
mov
add
repnz
lds
push
add
cwtl
rcrl
imul
jmp
jecxz
pusha
pop
pop
xchg
jnp
mov
push
xchg
std
int3
mov
xchg
outsl
fldenv
inc
pop
adc
shl
push
divl
aam
test
sahf
sbb
push
xor
add
mov
sub
ror
mov
in
cli
adc
sbb
clc
mov
cmpsl
lods
outsb
mov
clc
jb
xchg
xchg
xchg
enter
loope
mov
in
cmp
xchg
sbb
loopne
sarl
pop
test
cmp
xchg
or
outsl
xchg
pop
xor
jbe
das
mov
pop
aas
inc
pop
xchg
push
add
xchg
push
jecxz
push
and
cmp
add
divb
out
dec
dec
mov
inc
ja
out
in
shll
mov
push
ss
clc
clc
imul
xchg
loopne
lods
xor
andb
jne
pop
mov
mov
out
popa
xchg
push
stos
and
jmp
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
jmp
cld
test
jb
stos
inc
inc
cmp
fwait
scas
jo
jo
jo
jo
and
xor
out
sbb
xchg
bound
les
sbb
rcll
sbb
leave
stc
cs
xor
xchg
data16
roll
scas
pop
dec
mov
sub
cld
lahf
data16
add
and
cmp
fmul
xor
pop
js
outsb
xchg
imul
sbb
sbb
xor
repz
jecxz
push
add
adc
xchg
cmp
ljmp
mov
cmp
pop
les
xchg
fwait
in
faddp
fdiv
pop
pop
jge
mov
dec
fnsave
pop
jno
cmc
mov
aas
mov
cld
shrb
sub
fadds
fsubrs
lahf
or
xchg
mov
inc
iret
sbb
mov
inc
clc
or
xorl
push
and
int
inc
jo
add
xchg
aas
lret
out
dec
idiv
cmp
fs
dec
call
cmp
pop
mov
and
push
iret
mov
sub
sub
add
sbb
xchg
add
xchg
cmpsb
fbld
lock
pop
xchg
int
insl
push
push
jp
xchg
test
cs
test
dec
push
mov
jbe
mov
add
dec
enter
mov
iret
insb
out
pop
mov
adc
ds
pop
aas
test
jmp
es
push
jb
xchg
mov
jae
xchg
dec
and
or
or
lret
mov
je
aas
pop
dec
push
mov
cmc
push
imul
rclb
addr16
stc
leave
mov
int
ret
lcall
jo
push
fcmovbe
ret
jns
das
data16
loop
testb
movsb
rcl
fwait
aad
push
das
insb
movsl
jae
aam
imul
pusha
adc
sbb
stos
and
std
aam
lahf
push
add
cmp
pushf
xor
push
fmuls
cmp
jmp
ret
gs
cmpsl
insb
orb
jo
jo
jo
mov
repz
ss
mov
imul
enter
adc
push
pop
incl
inc
xor
stos
xor
xchg
fs
inc
pop
daa
dec
dec
inc
into
cwtl
in
daa
xor
mov
aam
pop
leave
sub
icebp
sti
lock
adc
subb
and
aaa
mov
cmp
jbe
mov
dec
add
xchg
jl
xor
jne
xor
leave
push
add
sbb
pop
das
les
stc
or
into
pusha
sub
es
cmpsb
jbe
mov
jnp
sub
xchg
mov
outsb
xor
xchg
sbb
mov
lcall
repnz
dec
scas
jns
jnp
icebp
cmpsl
rcl
loopne
int
jns
mov
push
roll
icebp
std
in
dec
adc
sbbb
ss
cmp
jecxz
pop
data16
mov
int3
push
sbb
mov
lds
jne
push
inc
mov
inc
pop
sbbb
lods
outsl
cmovns
and
or
addl
jno
imul
arpl
push
or
lret
stc
fidivl
mov
jecxz
mov
xchg
sub
lds
jno
int3
inc
pop
mov
insb
lcall
clc
jbe
push
and
ret
push
mov
fisttps
sbbb
xchg
mov
sub
push
loope
orb
pop
rorb
mov
adc
and
fistps
jmp
aad
mov
inc
mov
test
mov
stos
repz
das
arpl
mov
mov
cmpsl
pop
test
data16
jecxz
sbb
push
inc
cwtl
xchg
lods
pushf
mov
ret
ficompl
adc
sbb
xchg
and
test
inc
in
xor
add
mov
mov
jmp
jp
sbb
cltd
ja
jno
sbb
sub
add
jo
jo
lret
ds
xchg
push
in
loop
xchg
insb
lcall
push
mov
dec
sub
pop
push
pop
inc
sub
and
je
mov
xchg
jne
cmp
xchg
mov
mov
cli
movsb
mov
mov
out
fcmovne
sbb
outsb
xchg
inc
add
or
ss
jae
jne
cld
push
adc
push
or
cmp
sti
xorl
xor
out
test
dec
insl
iret
add
sub
movsl
je
push
add
mov
mov
push
dec
mov
xor
and
pusha
in
cwtl
pop
sub
or
in
sub
test
aam
popa
nop
jecxz
nop
sti
mov
jo
inc
sub
out
int3
xlat
sbb
xor
bound
add
addr16
mov
mov
xchg
in
cmp
loop
push
xlat
mov
and
movsl
mov
fimuls
xor
jbe
push
faddp
cmp
sbb
fs
xor
and
addr16
loop
push
xchg
test
loopne
xor
pop
rcrl
cmpsb
cli
lahf
in
pop
jmp
jecxz
cmpb
outsl
lcall
xor
adc
xor
in
sub
leave
adc
jns
adc
insl
pop
jno
cmp
cbtw
js
pop
lds
add
imul
sti
add
cmp
adc
xchg
movsl
je
jae
xor
jno
adc
lea
sbb
sbb
lds
fsub
sbb
bound
mov
push
push
int
and
push
lahf
jecxz
xor
fidivl
add
mov
cs
ret
les
sahf
inc
push
scas
gs
and
adc
mov
fisubs
test
mov
mov
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
jmp
and
jae
xor
in
jo
jo
jo
jo
inc
push
mov
sub
inc
test
fiadds
jne
addr16
aad
out
mov
gs
mov
jle
repnz
add
adc
xchg
adc
sub
inc
cld
xlat
xchg
into
sbb
adc
insb
jbe
add
sub
mov
in
jp
adcb
sub
mov
xor
pop
xchg
push
mull
les
cmp
mov
stos
in
xchg
xchg
jbe
mov
mov
ficomps
mov
mov
lods
aad
and
aaa
sub
mov
or
mov
out
push
mov
rep
adc
fisttps
popa
inc
inc
bound
adc
insl
mov
lods
lar
imul
mov
dec
pusha
add
fnsave
inc
jno
dec
xchg
jbe
mov
mov
fcoml
jmp
mov
lahf
cmpsb
sarb
stos
mov
ljmp
loopne
mov
jb
lretw
rolb
adc
mov
fs
icebp
das
xor
jle
add
test
iret
xchg
in
lret
adcb
jns
lahf
jae
xchg
cmpsb
aad
add
jecxz
inc
stos
jmp
dec
mov
iret
std
or
and
jne
xchg
insl
cwtl
jae
and
sub
lock
lock
ret
iret
fnstenv
sbb
mov
lea
divl
mov
inc
gs
fisubrs
mov
test
in
dec
stos
test
pop
scas
jb
or
jae
cltd
hlt
ljmp
push
dec
jo
jne
mov
sbb
xor
out
in
cmp
cmp
arpl
fcomps
inc
push
leave
sub
sti
add
popf
push
cwtl
adc
test
pop
mov
mov
lds
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
jmp
cs
add
popa
push
in
jno
imul
jo
jo
jo
jo
test
dec
lea
add
mov
push
or
loope
cmp
push
push
sbb
jge
dec
rorl
pop
add
ds
jge
test
xchg
cmp
push
jg
jno
leave
std
mov
dec
xchg
fldl
out
xor
jmp
shrl
push
in
fwait
lods
mov
ljmp
adc
pop
out
lods
in
xchg
mov
out
or
scas
cli
imul
aad
cmc
test
fldcw
pop
and
mov
scas
repz
cmc
and
push
pop
cltd
adc
out
sbb
sub
pop
inc
add
and
xchg
xchg
or
xlat
or
cld
mov
push
fcompp
inc
xchg
push
mov
cld
lret
push
sbb
sub
popa
aam
arpl
sbb
or
push
mov
inc
push
out
or
lea
sub
incl
xor
lret
cli
paddsb
cmpsl
pop
dec
dec
push
add
sub
pop
je
popf
es
dec
dec
jae
es
ret
mov
pop
or
lret
mov
inc
mov
int
or
sbb
stos
xlat
cmp
mov
sarb
sub
bound
lods
test
pop
xchg
aaa
stc
es
adc
dec
sbb
movsb
mov
ret
mov
and
aad
loop
fwait
push
outsb
test
scas
mov
mov
jne
xchg
jns
not
xchg
sub
mov
repnz
popf
adc
jbe
inc
add
aaa
movsb
mov
sbb
push
pushf
or
and
popf
and
mov
aam
sub
mov
adc
sbb
or
mov
imul
push
dec
mov
pop
or
int
fdivp
jne
mov
adc
or
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
push
movzwl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
mov
mov
xor
push
mov
or
xor
sbb
mov
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
jmp
imul
cmp
jae
jl
dec
mov
jo
jo
mov
xchg
mov
inc
xchg
xchg
cmp
xor
pop
notb
and
add
aas
inc
mov
and
fcomip
aad
in
xorb
inc
mov
movsl
fdiv
movsl
addr16
out
daa
mov
test
sti
stc
aam
pop
js
mov
mov
adc
inc
popa
shlb
or
pop
sub
sahf
sub
shlb
mov
jge
cltd
movsl
jno
sub
xchg
pop
cmc
and
cltd
mov
dec
dec
lret
and
push
pop
ficompl
and
fcoms
rcll
jl
ja
and
xor
dec
sti
push
jl
inc
outsb
sbb
pusha
in
fimull
test
xor
add
in
test
inc
jae
xchg
loopne
xor
outsb
and
inc
aaa
test
mov
sti
xor
xchg
es
cld
shr
and
enter
shll
mov
ds
mov
js
jno
jecxz
fsubrl
fbstp
push
sbb
loope
imul
insl
add
test
in
xor
dec
jecxz
lcall
fsubrs
pop
push
arpl
jo
sbb
fucom
push
sbb
ret
and
or
push
ja
in
push
xor
out
inc
pop
rorb
push
mov
movsl
pop
cs
fcmovnu
call
push
repz
cwtl
adc
or
stos
in
aam
loopne
adc
aas
push
pop
push
add
sbb
out
xor
mov
sbb
and
test
push
cmpsb
cmc
js
xor
add
cld
ss
pop
cwtl
into
test
mov
call
mov
mov
lea
mov
icebp
int
mov
sahf
repz
out
pop
cmpsb
sarl
or
dec
cwtl
push
jle
test
sahf
adc
cli
xchg
sar
mov
jge
sub
adc
inc
jno
mov
jl
sbb
xchg
ficoml
cmpsb
out
xchg
sbb
dec
adc
xor
pop
jb
into
ret
cmp
sub
add
cmpsb
xor
gs
repz
dec
lods
int
fwait
lock
int3
add
dec
js
ret
push
xchg
pop
jno
and
roll
xor
jns
in
pop
insl
cmpsb
sub
xor
and
fisttpll
sub
pop
data16
pop
insl
std
sti
mov
mov
ja
fcoml
sub
pusha
adc
mov
mov
filds
fld
cmp
xlat
ja
push
jmp
jmp
mov
ja
push
aas
xchg
out
movsl
cmp
jo
mov
sub
xchg
imul
push
xchg
xlat
sbb
jl
mov
cmp
mov
popf
mov
xchg
ret
add
repnz
pop
mov
mov
xchg
ja
push
cmp
adc
clc
cwtl
outsl
stos
dec
pop
cmp
bound
hlt
stc
and
lret
xchg
add
les
adc
mov
ss
lret
out
leave
loopne
aaa
mov
inc
cmpsb
jb
sbb
aas
aam
mov
popl
sub
adc
inc
jge
ret
mov
testb
icebp
or
and
pop
scas
cmpsl
sbb
jmp
or
adc
mov
fcmovnbe
sub
mov
iret
push
popf
jne
pop
stc
pop
js
xchg
je
mov
push
addr16
or
das
fucom
push
add
push
pusha
lcall
cld
pop
popf
inc
insl
test
loope
jmp
jg
xor
in
jne
stos
test
sub
jnp
jge,pt
sbb
xor
xor
sbb
repz
mull
or
add
xchg
jge
es
xchg
xor
das
sub
ret
cld
sar
je
popa
sbb
add
cmp
mov
les
jmp
daa
and
jge
xor
stos
xchg
mov
insb
lods
mov
enter
lods
inc
mov
mov
setl
xor
mov
mov
sbb
iret
bnd
dec
and
test
bound
into
call
inc
jg
fidivl
push
sbb
mov
or
add
cmp
imul
fidivs
xchg
pop
lea
ret
test
ret
dec
dec
dec
sub
push
inc
mov
pop
and
shll
sbb
and
call
add
mov
scas
loope
mov
mov
mov
clc
mov
insb
in
cmp
aad
jae
fsubp
pop
ffree
loope
dec
and
cmpsb
fldenv
inc
mov
out
aas
cmpsl
rorb
mov
push
js
stos
movsl
dec
sbb
adc
lods
les
aaa
and
jnp
leave
or
mov
out
dec
xlat
push
jmp
or
mov
xchg
imul
or
or
pushf
repz
xor
mov
aad
das
loop
inc
dec
jne
push
sbb
clc
or
sbb
xchg
inc
push
ret
sbb
cmp
shrb
repz
mov
mov
mov
xor
add
jmp
fistl
loope
lds
add
xchg
pop
pop
jo
mov
mov
cmp
leave
ret
mov
in
pop
std
sbb
mov
xor
adc
ret
loope
test
iret
sub
xor
xor
cld
pop
jo
lock
xchg
ss
imul
sahf
push
inc
lods
push
pop
es
scas
imul
gs
or
pop
mov
popa
mov
pop
jg
repnz
xor
fsubr
adc
aas
push
into
lahf
dec
inc
jb
push
test
push
lret
xor
inc
push
mov
out
xchg
fwait
lea
test
fadds
and
mov
imul
test
int3
and
sbb
xchg
data16
mov
pop
sbb
test
in
lds
clc
mov
adc
cltd
cmp
out
mov
lea
adc
adc
jb
outsb
ja
lret
lcall
mov
xchg
movsb
jns
cmpsb
ret
aas
in
call
inc
es
mov
xor
and
jo
add
inc
or
cmp
adc
and
add
cmp
mov
stos
jl
sub
mov
add
sub
add
test
push
subb
push
cmp
jmp
inc
test
xlat
scas
loop
mov
push
loope
mov
pusha
gs
add
mov
lret
mov
sbb
inc
fwait
movsl
mov
leave
negb
and
add
loop
outsl
inc
out
ret
fstps
cltd
mov
aad
in
in
mov
mov
pop
or
daa
xchg
xchg
call
addr16
add
mov
pop
inc
xchg
popf
dec
jmp
mov
push
xchg
les
fwait
fwait
loop
mov
mov
push
nop
out
sub
pop
pop
js
push
push
int3
xor
mov
sbb
aas
out
inc
clc
or
pop
pop
adc
push
test
push
in
fisttpll
ret
sub
dec
mov
or
scas
cmp
xchg
dec
xor
shrl
mov
and
sub
xchg
mov
fsts
fdivrs
pop
push
scas
dec
mov
scas
jle
std
xchg
xor
jbe
or
scas
in
std
push
or
cmp
out
sbb
jb
push
fistps
lock
divl
push
adc
xor
jg
in
dec
shrb
or
hlt
pushf
adc
adc
adc
in
or
inc
jbe
data16
out
loop
mov
scas
mov
jl
jne
imul
mov
xor
add
jmp
jecxz
fcoms
out
icebp
icebp
pop
xchg
aaa
aas
fimull
jo
mov
aas
lcall
lea
xchg
sarl
out
jge
ret
in
add
das
repnz
insl
sub
push
cld
dec
add
imul
lock
push
jo
shlb
xchg
and
cmp
cmp
inc
push
pavgw
sti
adc
jp
inc
shl
push
pop
loope
add
xchg
push
call
test
sbb
jg
or
pop
push
lahf
mov
mov
sti
or
cmp
mov
add
xor
cmp
cmp
cltd
insb
les
stos
xor
call
xor
mov
sarl
push
xor
pushf
mov
mov
or
sub
push
call
mov
inc
xor
movsl
lods
hlt
mov
sbb
mov
and
jb
cmc
scas
shll
bound
popf
cmc
xchg
dec
je
test
and
mov
xchg
or
sti
repz
out
sbb
sbbl
fucomip
cli
xlat
pushf
sub
push
jb
sbb
loopne
push
test
bound
imul
push
inc
mov
lcall
xlat
mov
cmpsb
pop
mov
mov
ret
jl
cmp
xchg
jo
fldt
je
sbb
sub
pop
scas
xor
adc
test
mov
imul
aas
sub
cli
movsl
mov
push
addr16
scas
xor
in
pop
mov
movsl
xor
or
outsl
mov
dec
leave
and
cmp
pop
mov
xchg
xor
test
iret
pop
orl
mov
hlt
sub
fmul
ficoml
test
mov
push
dec
ss
sahf
popa
or
cld
cmp
mov
push
dec
into
push
pop
pop
cld
insl
rclb
push
ja
sti
insl
rolb
pop
fwait
out
jae
or
dec
mov
jae
arpl
fidivrl
cwtl
xchg
dec
mov
dec
xor
cmp
push
incb
incl
xorl
mov
xor
mov
mov
jle
shrl
cli
test
in
shll
sub
in
sub
cmpsb
movsl
mov
int3
mov
pop
aas
add
add
push
jno
ss
aaa
pop
xchg
push
xor
ljmp
in
iret
sarl
sbb
rorl
sub
dec
roll
cltd
fdivs
jmp
in
inc
aam
fs
jle
mov
addr16
pop
xor
imul
push
push
mov
jb
add
cld
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adc
mov
addl
mov
adcl
xor
adc
mov
andl
add
movl
movzwl
mov
orl
movb
not
lea
mov
or
jmp
out
out
jno
in
or
and
mov
js
jo
cmp
movsl
test
ja
inc
push
jecxz
sti
in
xor
xchg
push
lock
sbb
rclb
sbb
out
dec
out
pusha
mov
mov
adc
xor
push
ljmp
imul
lods
mov
dec
mov
jecxz
shrl
test
arpl
test
cli
or
mov
lods
dec
mov
pushf
popa
jb
add
pop
xchg
or
mov
push
push
dec
xchg
ljmp
fisttpl
ret
mov
sbb
hlt
mov
repz
bnd
mov
pushl
loopne
mov
mov
or
xchg
fisubs
pop
faddp
pushf
sbb
pop
xchg
sarb
xor
test
into
and
sub
pop
iret
mov
ficoms
lcall
mov
nop
mov
or
xchg
iret
dec
inc
dec
cmp
lock
rclb
sbb
mov
imul
imul
mov
xchg
mov
fwait
mov
xor
dec
sub
addr16
dec
arpl
and
sub
adc
shrb
cmp
pop
aas
movsl
movsl
aam
push
jg
cmp
mov
adc
jnp
popa
fs
jmp
xor
fwait
cmpsb
cltd
pop
dec
fwait
adc
or
sub
jne
jecxz
cmpsl
sub
fsubrs
mov
push
cmc
add
xor
sub
xor
pop
dec
lds
cltd
imul
adc
repnz
data16
mov
fs
pop
bound
ret
push
xchg
cmc
fldcw
insb
pop
pop
rolw
icebp
or
xchg
pop
hlt
push
cwtl
es
lcall
xor
mov
sub
imul
out
ja
nop
cltd
hlt
push
add
xchg
or
mov
xchg
jp
pop
inc
test
xchg
adcl
repz
jp
popa
xchg
scas
mov
xor
xchg
cmp
loopne
fstps
stos
aas
sub
in
inc
pop
sbb
mov
ljmp
stc
push
ret
pop
jge
in
aam
popa
mov
xlat
aaa
outsb
mov
fldenv
into
notb
add
scas
outsb
xchg
std
jb
jmp
cmp
adc
xchg
clc
pop
bound
notl
out
pusha
imul
jno
mov
dec
and
inc
loop
mov
add
test
idiv
ja
sarb
lods
xchg
imul
mov
rol
sub
xchg
mov
xchg
test
in
cmp
mov
pushf
repnz
jnp
pop
outsl
dec
dec
lcall
cs
mov
ret
pop
add
cmp
ljmp
add
mov
inc
inc
movsl
icebp
stc
lahf
nopl
and
fiadds
xor
out
inc
mov
jo
cmp
inc
push
and
xor
lahf
mov
decl
mov
jmp
inc
add
or
mov
subl
xor
sub
andl
mov
negl
movl
jmp
fists
cltd
mov
addr16
push
and
xchg
push
jo
cmp
inc
xorb
sub
xlat
cltd
push
mov
mov
pop
mov
cmp
stos
sub
mov
jl
fcoml
aad
testb
push
cmc
daa
test
pop
mov
push
xor
xor
add
sbb
xchg
mov
adc
scas
sahf
fs
push
mov
vpshufhw
mov
xor
mov
sarb
icebp
sub
cmc
es
rorb
mov
iret
mov
rorl
cmpsl
add
xor
push
jecxz
outsb
xchg
inc
fsubs
pop
pusha
fildl
lahf
push
pop
jle
jbe
push
inc
cmp
cs
hlt
lds
shll
adc
clc
imul
mov
cmp
inc
and
js
fwait
adc
cwtl
mov
shll
xchg
fmul
cmp
add
adc
int3
enter
add
or
add
rcll
pop
xor
and
jno
xlat
test
movsl
out
inc
inc
push
movsl
mov
insl
sub
test
stc
mov
dec
xlat
cmpsb
xchg
cmp
pop
push
shrl
xlat
sbb
dec
inc
test
dec
les
xchg
leave
inc
into
mov
lods
or
jmp
cmp
and
sub
mov
out
jecxz
popf
cmpsl
mov
frstor
out
filds
mov
fidivl
mov
xchg
sbb
fbstp
jbe
dec
mov
outsl
aas
or
bound
pusha
xor
mov
xchg
mov
shll
orb
ret
shrb
ret
xchg
mov
test
dec
add
and
mov
imul
and
mov
sbb
icebp
insb
scas
jns
adc
or
sub
dec
mov
xchg
xchg
sbb
add
lret
or
or
jnp
mov
pop
xchg
mov
testl
fldcw
into
icebp
out
push
outsl
nop
lods
mov
mov
jg
hlt
cs
pop
sub
adc
popf
jnp
inc
jl
add
dec
outsl
sub
cmpsb
push
int
mov
jge
xchg
in
adc
cmpsb
imul
in
sbb
push
ss
lret
scas
push
or
lret
insl
inc
clc
sub
dec
jb
xchg
xchg
xchg
jnp
movsb
sub
mov
lock
pop
loop
fdivrl
and
xor
cwtl
aas
and
sbb
push
add
lods
sbb
inc
sbb
pop
mov
out
and
cmp
mov
xor
jns
mov
mov
mov
sub
shr
sbb
mov
int
hlt
hlt
rol
in
sub
aam
cltd
call
cmp
sti
dec
xor
inc
and
enter
lret
xor
imull
pop
mov
fs
mov
mov
and
bound
pop
add
imul
int
jns
and
lock
clc
mov
push
xor
mov
adc
mov
add
movl
jmp
mov
movl
mov
movl
jmp
jge
lret
in
icebp
ss
add
cmp
mov
inc
sbb
push
lea
rclb
ret
pop
outsl
and
lcall
rorl
fildll
sbb
lea
loopne
movsb
test
leave
je
fcmovnbe
push
or
xor
jecxz
movsb
sub
movsl
fsubs
cmp
pushl
popf
add
mov
mov
cmp
xlat
jle
rolb
scas
inc
cmp
std
stos
iret
aaa
pavgw
xlat
outsl
mov
sub
push
in
jge
cwtl
mov
or
xchg
inc
xchg
cli
xlat
push
js
bndstx
push
fsubl
shrb
or
sub
mov
stos
test
adc
sbb
cmp
lods
mov
in
xchg
sub
testb
cmp
lahf
mov
test
flds
test
or
mov
insl
xchg
out
cmp
cmp
daa
or
std
inc
fs
push
rcrl
push
mov
cmp
push
push
mov
rdmsr
mov
mov
jno
sarl
mull
test
push
sub
sbb
cmpsb
or
pop
sbb
adc
mov
xrelease
cmp
push
int
imull
fldl
pop
pop
out
xlat
adc
or
rcl
mov
mov
cmpsl
cltd
push
enter
and
not
idivb
fwait
mov
mov
pop
icebp
jp
mov
fwait
andl
adc
jle
adc
cmp
arpl
mov
test
js
push
lcall
sub
and
xchg
divl
out
int3
sbb
outsl
xor
and
mov
sbb
jae
loop
push
and
popf
out
adc
xor
add
shrb
out
imul
imull
aaa
pusha
aas
inc
scas
xor
sar
sub
jnp
shl
loopne
imul
lahf
mov
cmp
sub
mov
sbb
call
iret
ret
pushf
dec
adcl
adc
aaa
push
dec
or
pushf
int3
mov
xor
lret
movsb
push
dec
jecxz
add
cli
xchg
clc
ljmp
call
pop
jnp
mov
jecxz
test
push
jp
xchg
ds
faddl
sti
insl
out
movsb
fs
adc
jb
hlt
jne
imul
xchg
rcl
mov
mov
aaa
mov
enter
mov
outsl
push
lahf
xlat
pop
rcrb
pop
inc
push
arpl
adc
mov
xchg
les
dec
sub
ds
adc
push
mov
popf
sbb
jle
fists
ljmp
insl
adc
rcll
mov
jno
cld
push
ret
ljmp
call
mov
lea
cmp
pop
mov
cmp
in
lock
fidivrs
jmp
push
test
clc
inc
movl
jmp
leave
daa
rclb
repnz
jecxz
cmpsb
dec
dec
cmp
cmp
daa
sub
je
mov
mov
call
ret
push
push
loope
test
xlat
pop
mov
int3
inc
pop
xchg
cmp
fwait
jbe
movsb
ds
mov
sub
cli
cmp
and
loopne
cs
and
or
sub
cmpsb
hlt
test
mov
rcll
add
out
cmpsl
push
xchg
mov
hlt
scas
stos
sbb
insl
and
jae
lret
pop
add
jl
xchg
in
pop
iret
sbb
add
mov
gs
lret
pop
inc
in
loope
pop
lods
pushw
testb
xchg
loope
pop
test
dec
xchg
push
pusha
jg
iret
ret
mov
or
cmp
pop
cld
es
push
cmp
cmpsb
mov
mov
adc
pop
jl
cwtl
in
jbe
mov
adc
mov
sti
ret
push
xchg
push
orl
push
lods
inc
out
adc
cmp
fs
loop
xorl
ja
dec
mov
sbb
enter
mov
shlb
cmpsl
push
xor
and
and
and
movsb
aad
in
mov
jmp
icebp
loopne
xor
int
and
rolb
jl
scas
int
mov
mov
xor
mov
inc
sbb
xchg
mov
push
sub
gs
or
cwtl
or
xor
mov
pop
jne
fmul
cmp
inc
lcall
pop
ret
insb
ljmp
mov
arpl
arpl
mov
adc
xchg
test
and
shrb
or
add
mov
push
fs
fstps
mov
inc
mov
sbb
shl
enter
xchg
sub
ret
xchg
test
imul
push
sub
sbb
leave
stc
dec
cmp
push
mov
ds
mov
dec
adc
mov
icebp
std
push
push
or
mov
lods
cmp
mov
repnz
stos
or
mov
add
jg
push
add
inc
jmp
stos
mov
jl
dec
jp
out
mov
pusha
cmpb
mov
fsubl
repnz
push
push
and
repnz
paddsb
cld
xlat
mov
xchg
dec
mov
iret
inc
xchg
sub
pop
int3
mov
in
test
add
mov
xchg
push
mov
fldln2
sahf
pop
xor
and
repz
fwait
adc
xor
or
adc
clc
mov
jo
lea
int
inc
add
std
xor
cli
sbb
jns
scas
xor
inc
pop
loopne
xchg
insl
pop
push
into
mov
pop
push
pop
std
cmpsl
movsb
sbb
test
inc
inc
pop
mov
adcb
jmp
adc
mov
jmp
push
jge
add
jb
inc
sbb
push
mov
inc
or
jo
cmp
jl
dec
insb
mov
jg
lahf
dec
or
imul
out
js
adc
jecxz
mov
cmc
imul
jmp
sbb
mov
lea
gs
mov
jmp
fwait
lahf
pop
rcrb
sbb
inc
sub
sahf
add
jp
dec
das
xchg
xor
insb
push
mov
jbe
mov
cmp
jb
insl
notl
dec
std
pop
fsts
or
push
pop
fsubl
movb
lcall
les
ficomps
push
pop
xchg
jg
and
dec
sahf
push
pop
xchg
xchg
inc
cmp
mov
xor
clc
pop
js
jg
repnz
jp
out
stc
adc
pop
xchg
sub
bound
push
adc
pop
loope
dec
jecxz
loop
jns
jmp
push
or
lds
rcrb
mov
push
xchg
adc
or
test
je
dec
xchg
mov
clc
repnz
inc
adc
lret
sbb
inc
movsb
stos
jne
dec
in
sbb
vpmacsdqh
mov
nop
adc
mov
cmp
fdivs
repz
aam
sahf
or
sub
jnp
aad
outsl
popa
xor
pop
mov
psubq
rorl
xlat
imul
je
in
adc
or
fdivrl
ficoms
add
or
ljmp
pushf
mov
push
data16
movsl
inc
xchg
popa
mov
adc
pushf
mov
sbb
mov
push
lcall
mov
sahf
cmp
cwtl
cs
es
pop
mov
xchg
fs
xor
repnz
jbe
cmp
lcall
int
xchg
movsb
xchg
movsl
pop
and
sub
cwtl
scas
ret
push
movsb
aas
stos
add
xor
lods
jge
jle
adc
jmp
data16
clc
outsl
in
in
mov
dec
xchg
cmp
mov
mov
sub
imul
addps
xor
xchg
jae
dec
aaa
xor
mov
insb
leave
scas
pusha
dec
mov
movsb
xchg
sarb
inc
xlat
or
mov
xorb
call
orb
and
sub
leave
rcrl
cltd
mov
add
icebp
iret
nop
sub
sarl
cmp
mov
jb
add
mov
hlt
repz
mov
scas
push
jns
sub
rolb
dec
insl
orl
fstp
jb
cltd
divl
pop
into
cmpsl
test
insl
mov
push
jb
add
dec
lods
arpl
push
xchg
outsl
or
add
std
das
ret
push
shlb
addr16
roll
cltd
xor
decl
mov
roll
cmp
movl
je
add
push
adc
push
mov
mov
andl
xor
mov
add
addl
movzwl
andl
mov
sbbl
mov
addl
movzwl
sbbl
xor
addl
jmp
fdivl
dec
rsqrtps
icebp
inc
sub
push
cmp
leave
and
cmp
enter
insb
jge
inc
and
lcall
in
arpl
sbb
popf
inc
jo
sub
decl
movsb
bound
shrl
leave
andb
add
xor
arpl
inc
cli
jmp
xor
sub
sub
imul
pop
popl
add
mov
mov
in
lret
fdivs
lret
cmp
push
in
mov
shrb
push
cld
mov
sub
test
loope
clc
lret
lcall
scas
mov
mov
sbb
adc
test
aam
xchg
xor
inc
sub
mov
push
lock
pushf
push
dec
sahf
das
mov
sbbl
mov
add
lds
arpl
aaa
cmp
add
xchg
dec
int
jg
mov
dec
and
scas
enter
das
pop
mov
mov
cmp
icebp
pop
xor
hlt
int
adc
jno
test
add
outsl
add
icebp
mov
xor
xchg
and
jg
mov
sbb
lea
xchg
int
movsb
dec
movsb
je
cmp
cmp
cmp
movsl
je
jne
fucomi
lcall
int3
lcall
cmpsl
not
cmp
popa
pop
insl
jge
pop
ja
inc
jmp
stos
js
outsl
in
mov
jns
pop
pop
std
push
aad
xor
adc
out
sub
add
sbb
jo
sbb
in
aas
cmp
lods
das
mov
add
jns
xchg
enter
and
rclb
and
jg
shl
ja
les
std
sub
and
push
call
daa
adc
push
pop
lods
idiv
movsb
xchg
rclb
js
jns
movsb
mov
movsb
push
mov
xchg
sub
call
push
mov
rorl
int3
pushf
add
cvtps2pd
out
insb
popf
test
gs
sbb
stc
xchg
xor
es
push
testl
sbb
out
xchg
divl
push
mov
sahf
aas
andl
aaa
push
jecxz
adc
dec
arpl
sbb
or
dec
daa
loope
push
pop
xor
push
pop
add
cmpsl
mov
lods
mov
cmpsb
jg
jmp
lds
imul
mov
orl
imul
fwait
push
in
add
inc
mov
add
pusha
mov
xor
jae
hlt
add
popl
push
ror
lds
or
mov
mov
dec
cmp
and
fnstsw
jb
push
addr16
ret
sti
sbb
pusha
pushf
adc
adc
out
dec
les
popf
adc
imul
movsb
dec
cmp
mov
out
jmp
mov
or
jno
sbbb
mov
insb
ret
xchg
and
adc
or
xchg
add
movl
mov
movl
mov
jmp
or
daa
arpl
fisttpll
dec
or
jge
jo
std
ror
cli
pop
xchg
mov
dec
cmp
mov
cli
jbe
jg
add
pop
mov
push
xor
inc
jo
add
loope
push
add
push
pop
outsl
cmpsb
mov
adc
pop
addl
in
das
pop
xor
addr16
mov
bound
inc
sub
mov
ret
jg
pusha
jge
xchg
inc
adc
nop
inc
and
sub
shrb
xchg
or
aam
pushf
or
jecxz
mov
in
add
or
push
xor
lahf
popf
ret
adc
fs
iret
outsl
mov
mov
lret
cmp
aad
lods
jle
mov
adc
inc
test
jmp
adc
push
icebp
les
mov
fldl
and
mov
movsl
insl
mov
test
test
sbb
js
setnp
inc
mov
sub
iret
inc
sub
jnp
notb
lea
xchg
lods
popa
lahf
mov
mov
test
les
lods
sub
in
ficoms
mov
popf
sbb
lock
jbe
jne
jne
iret
add
push
mov
pop
inc
adc
sti
xchg
dec
dec
add
int3
les
je
dec
andb
inc
inc
or
adc
das
out
cltd
imul
push
xchg
sbb
mov
cvtps2pi
jns
jecxz
jns
mov
xchg
and
mov
mov
jecxz
rcl
mov
insb
ret
ljmp
and
dec
or
jle
cli
mov
in
pop
repnz
xor
pop
nop
push
sub
insb
hlt
lods
imul
lods
sbb
mov
xchg
jae
das
mov
or
in
push
andl
sahf
mov
xor
sub
lahf
jae
stc
push
push
jnp
jmp
sub
jne
jno
mov
and
push
xrstors
mov
pop
mov
mov
call
xchg
inc
pusha
imul
adc
xchg
push
pop
lret
dec
std
jle
xchg
aad
pop
test
fs
xchg
inc
jge
inc
mov
sti
or
push
mov
push
iret
lods
iret
notl
xchg
push
inc
mov
icebp
push
or
sub
sbb
in
cmpsb
push
and
xor
sbb
adc
xchg
mull
pop
push
ficoms
sbb
pop
push
xchg
push
imul
aaa
cmpsl
mov
scas
mov
inc
das
adc
mov
push
fcoml
addl
aaa
fcoml
int3
stos
int3
ljmp
sub
inc
decl
cmc
ja
test
xchg
inc
dec
mov
mov
jecxz
sub
cmp
inc
shll
sbb
iret
and
lret
daa
add
lods
test
mov
xchg
test
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
jmp
xchg
roll
icebp
lods
add
ror
xchg
mov
jo
cmp
movsb
ret
imul
dec
add
xchg
rcll
or
mov
popf
xor
gs
cmpb
repnz
ss
xor
xor
push
and
shr
mov
jl
cwtl
insl
inc
pop
mov
cmp
sub
mov
add
push
mov
mov
repz
mov
mov
push
push
xor
jge
dec
jmp
shll
insb
mul
lods
push
call
shrl
out
mov
push
enter
jmp
xor
mov
cmpsb
vphadddq
xchg
mov
jnp
inc
cmp
inc
cwtl
push
test
mov
jp
fdiv
scas
sbb
mov
into
cs
or
add
rclb
loope
push
add
jge
pop
rol
fs
lea
sbbl
imul
xchg
and
in
mov
jecxz
inc
sbb
or
cmp
icebp
ret
loopne
faddl
adc
popa
mov
pop
cli
xor
sub
inc
adc
movb
jge
aas
or
in
push
or
pop
ja
pop
push
push
in
adc
xchg
jne
xchg
int
cmp
sbb
add
cmpb
push
mov
push
cltd
push
xchg
mov
pop
pop
cwtl
test
pop
je
mov
mov
xchg
jns
in
adc
dec
inc
lret
fildll
stos
ljmp
lea
push
imul
dec
mov
cwtl
lea
call
popf
sbb
dec
or
push
pushf
cmp
or
mov
adc
not
pop
adc
xchg
icebp
mov
jno
xor
cmp
xorb
pop
stc
fistl
addr16
and
jl
cmc
inc
jmp
movsl
outsl
sysret
pop
jnp
push
cmpsl
lods
fs
fidivs
push
add
popf
lock
sbb
pop
mov
dec
jmp
notb
addb
arpl
xchg
adc
dec
imul
data16
lcall
sarb
cltd
mov
push
sub
dec
cltd
sub
lods
xchg
jl
aam
sub
or
fcomp
out
add
aad
jmp
mov
loope
mov
mov
enter
cmp
pop
xor
out
xchg
fidivl
inc
lret
xlat
cli
mov
mov
pop
nop
roll
mov
inc
lds
bound
mov
add
hlt
sub
sbb
add
cltd
cmc
daa
sbb
jmp
ljmp
pop
xchg
addb
fmull
pop
std
bound
je
jp
icebp
push
test
dec
sbb
push
xchg
outsb
fidivrl
and
sub
mov
out
push
xchg
stc
cmpb
decb
jl
mov
lret
std
arpl
cmp
pushf
or
ja
lret
sub
cmp
jge
adc
mov
sub
mov
sbb
add
in
push
mov
mov
sbb
jmp
pop
scas
sbb
push
pop
mov
xchg
aad
aas
adc
jo
stos
jle
jo
test
scas
cmc
or
sti
pop
adc
in
mov
push
insl
test
scas
xor
in
in
mov
and
sbb
sub
fisubrl
movsl
das
push
adc
pop
sub
and
pop
ret
cmpsl
out
sbb
adc
lea
cmp
sahf
mov
add
mov
xchg
adc
lock
mov
xchg
imul
pop
insb
movsb
xchg
jmp
adc
jl
inc
in
ss
sub
cmp
add
enter
cmp
mov
inc
test
mov
add
xor
add
push
test
mov
jmp
or
add
pusha
mov
sahf
xchg
xchg
push
inc
cs
mov
inc
stos
aas
enter
xchg
xor
aaa
pop
dec
push
and
dec
mov
outsb
push
xor
nop
and
jb
adc
mov
insb
sbb
ret
data16
subb
pop
ljmp
xor
cmp
out
mov
gs
push
xor
adc
mov
inc
adc
lahf
inc
push
mov
fnsave
sbb
test
sahf
fs
sbb
subb
push
cwtl
push
sub
lds
stos
jg
ds
add
movsl
inc
adc
fwait
pop
lcall
push
push
dec
xor
sub
adc
cmc
push
clc
push
lahf
sarl
orb
stos
nop
cltd
mov
cmp
cmp
mov
imul
sbb
dec
imul
push
mov
jae
js
popa
pushf
repnz
adc
xor
rcrl
loope
inc
xor
pushf
dec
adc
sub
push
pop
sub
in
je
xor
sahf
cltd
push
xchg
arpl
cltd
push
lods
xor
mov
cmpsl
sahf
pushf
outsb
and
xorb
mov
and
dec
jne
daa
imul
fisttpl
or
fnstcw
lcall
shrl
inc
mov
fsubs
lods
xchg
mov
ficoms
out
or
xchg
push
inc
aad
pusha
hlt
cmp
jecxz
fiaddl
mov
push
rcrb
fnstcw
mov
mov
mov
or
sbb
jnp
adc
cmp
lea
jo
scas
jno
sub
mov
hlt
xchg
pusha
and
mov
add
and
mov
jmp
ja
and
dec
xchg
mov
dec
xor
jo
add
movsl
andl
outsb
sub
iret
mov
jl
sti
test
and
add
inc
in
jg
pop
or
xorl
jne
int
pusha
xchg
scas
fmulp
cmpsl
adc
movsl
jb
vpshab
mov
pop
negb
dec
pop
dec
mov
mov
cmp
outsl
lock
cmc
push
push
add
inc
repnz
mov
das
mov
roll
out
cmp
testb
icebp
jbe
cmpsb
push
cs
jbe
jnp
jl
inc
popf
xor
push
iret
jns
pop
stos
cmpsb
dec
call
ret
imul
xchg
push
in
xor
xorb
ljmp
mov
popf
inc
lret
jno
xchg
jo
stos
pop
cmp
movsb
mov
call
leave
mov
pusha
insb
cmpsl
aaa
cmpsb
jns
mov
mov
imul
dec
jmp
sarl
aam
bound
pop
cmp
sahf
xchg
mov
mov
fdivl
dec
ja
push
into
adc
xchg
ret
ret
data16
mov
mov
es
mov
xor
mov
ror
lea
and
out
mov
jns
xorb
xor
pop
add
clc
sbb
mov
xor
jle
jb
insl
adc
pop
lahf
xchg
pop
adc
rcrl
insl
rclb
test
faddl
mov
mov
mov
fbld
outsl
add
bound
add
push
sbb
in
enter
mov
mov
dec
fbstp
fdivrl
push
xor
inc
lahf
sub
cmp
push
xchg
ss
push
sub
enterw
dec
or
push
outsb
dec
and
cmpsl
mov
out
insl
lret
sbb
mov
cmpsb
cli
inc
fs
push
mov
je
xchg
movsb
cmp
jg
in
fsts
mov
push
sbb
xchg
inc
sub
pop
mov
imul
add
mov
in
push
cs
fnstcw
bswap
popf
lret
stos
push
lds
jo
lcall
cwtl
sbb
sti
cli
pop
lret
push
ljmp
xorb
or
je
jg
pop
and
lods
and
mov
inc
dec
inc
jns
pusha
jle
fnstsw
mov
xchg
fwait
xchg
and
cmp
and
test
fsub
sub
push
xor
jg
ljmp
clc
xor
jnp
add
movl
and
mov
sbb
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
call
xor
xor
dec
mov
jmp
mov
add
xor
and
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
jmp
xchg
imul
movsb
mov
xor
stos
jle
jo
and
shr
inc
mov
inc
dec
cmp
or
test
inc
and
jg
fwait
loop
jb
push
aad
movsl
test
scas
insl
push
push
mov
pop
je
shl
push
enter
pop
xlat
frstor
mov
pop
out
daa
push
or
sbb
int3
fsubrl
in
mov
cli
sub
xchg
mov
and
xor
pop
pop
pushf
push
test
fbld
cmp
es
push
pop
fstpl
sbb
stos
test
xchg
adc
fs
hlt
mov
in
inc
js
cmp
pop
fidivrs
hlt
or
lods
mov
in
rorl
jg
sbb
mov
sahf
jnp
mov
cld
jl
adc
and
cmc
cmp
shll
sub
rcl
pop
cmc
xor
mov
xor
inc
sbb
leave
das
outsl
mov
xor
jnp
pop
out
aaa
pushf
rol
vmrun
in
adc
std
sbb
dec
xor
loop
popa
mov
and
das
push
repnz
fcomps
fisttps
gs
pop
push
mov
push
imull
shlb
shlb
nop
orb
fwait
add
mov
loopne
ret
sti
cli
lock
mov
aas
mov
xchg
scas
mov
dec
adc
and
xlat
aaa
clc
xchg
pop
mov
dec
mov
jmp
ds
ret
out
repz
sub
test
mov
test
js
or
js
lods
inc
lods
adc
into
add
jae
or
xlat
scas
out
lret
pusha
clc
and
lock
adc
lods
jmp
wbinvd
clc
sbb
movsl
push
sbb
and
arpl
imul
loopne
movsl
out
mov
rclb
test
inc
and
arpl
cld
insb
arpl
ss
mov
shrb
pop
das
loopne
mov
inc
out
cmp
repz
pop
das
inc
push
js
sti
shrl
aad
jmp
mov
sbb
idivl
sub
inc
rorl
pop
jecxz
ljmp
xor
jno
pop
popa
es
pop
std
inc
mov
jne
bswap
push
add
lods
xor
lahf
pop
out
jmp
icebp
xor
jp
jb
cmp
cmp
dec
inc
or
ret
or
xchg
pushf
fldl
jne
cmp
dec
xchg
and
rorl
add
mov
mov
pop
leave
ret
push
mov
push
addl
movl
mov
mov
adcl
mov
xorl
xor
jmp
fidivl
jle
jne
jb
sub
out
push
cmpsl
jg
jo
inc
mov
pop
out
xchg
ja
lcall
and
push
repnz
mov
pusha
xlat
test
icebp
sub
jge,pn
sbb
push
sbb
popf
jl
or
push
cltd
mov
push
lcall
mov
add
mov
and
jnp
or
out
xchg
adc
fmuls
mov
movsl
outsl
xor
pop
inc
pop
and
imul
cli
xor
mov
mov
mov
push
dec
movsl
mov
mov
repnz
leave
add
pop
stos
cld
imul
mov
hlt
in
aaa
xor
fistpll
outsl
out
sahf
or
sbb
aas
pop
add
fstps
or
adc
xchg
arpl
fwait
mov
aam
sbb
int
out
xor
pop
xchg
mov
or
enter
mov
and
and
adc
cmp
js
cwtl
jno
das
aaa
shlb
jns
jo
mov
negl
repnz
aad
addr16
popa
jg
stc
lret
ds
pusha
arpl
ficompl
int
cmp
mov
aad
mov
push
adcb
lret
or
sbb
xchg
leave
jmp
adc
mov
add
mov
xlat
js
mov
push
scas
or
dec
pop
sub
pop
inc
arpl
or
pop
adc
test
divl
dec
mov
loope,pt
movsb
data16
push
loopne
in
mov
pushf
jb
add
add
or
add
xor
push
sbb
mov
or
mov
sbbl
add
adcl
mov
sbb
mov
adcl
mov
subl
mov
or
jmp
out
hlt
arpl
popa
xchg
insl
hlt
pop
xor
je
jo,pt
cmpsl
jg
jo
nop
fdivrs
jno
test
hlt
jl
xor
bound
repz
into
rorl
or
cmovns
add
jb
mov
out
adcb
cs
dec
es
fisttpll
and
add
mov
dec
jne
out
insb
push
jp
stos
push
ret
nop
cli
orl
test
in
dec
or
xor
int3
lock
repz
xchg
mov
add
lahf
cmc
add
aas
inc
ss
fbld
jb
and
pop
dec
push
push
imul
adc
jnp
push
icebp
decb
pop
repz
loop
enter
pop
jnp
testb
cmpsb
fcmovb
ret
fadd
out
inc
lret
mov
sti
inc
add
mov
loop
insb
add
out
mov
xor
pop
ficoml
inc
data16
mov
mov
add
push
jge
test
hlt
rcrb
dec
and
xchg
mov
xchg
pop
jnp
jb
jle
or
out
stc
notb
adc
rcr
fstl
test
test
xlat
push
inc
and
repnz
or
xchg
jmp
dec
jbe
jae
daa
pusha
int3
scas
sbb
fdivrs
push
or
or
and
cltd
mov
mov
inc
cwtl
adc
cmpsb
jne
xchg
inc
insb
je
fisubl
pop
arpl
aaa
fcomp
push
aam
ds
cwtl
shll
mov
call
into
cld
testl
or
sub
sbb
or
inc
add
inc
or
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
xor
add
jmp
jge
gs
gs
sti
ret
pusha
jo
adc
sti
fmull
jo
out
cmp
mov
sbb
or
scas
cs
les
xor
mov
fidivrl
mov
in
fistl
mov
sbb
ss
cli
in
jg
lds
push
pop
cmpsb
int
repz
popl
leave
jns
scas
xchg
dec
add
pop
jp
xor
clc
jb
sub
dec
xor
inc
pop
les
lods
pop
jmp
or
pop
adc
fdivrl
orb
push
dec
pop
orb
jns
sub
mov
into
push
ret
loop
imulb
lea
in
pop
andb
adc
out
and
nop
add
sahf
pop
or
mov
push
mov
adcl
es
out
mov
sbb
out
test
xchg
fimull
fnstcw
pushf
xor
jo
fcmove
int3
mov
aas
sub
sub
jp
pop
pop
xchg
xor
xchg
push
out
shll
leave
or
popa
cwtl
pop
lret
adc
inc
test
std
and
push
cmp
inc
xlat
pop
sub
pop
arpl
popf
scas
lretw
xchg
xchg
xor
or
addb
call
dec
in
jecxz
movsl
pushf
arpl
imul
fstl
mov
cmp
cmp
inc
or
jne
jno
cmpsb
fcmovne
out
icebp
add
or
push
std
imul
scas
aas
xor
adc
add
mov
xchg
sub
jo
xor
insb
xor
push
xor
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
adc
movl
mov
sbb
mov
mov
xor
add
mov
sub
mov
sub
mov
andl
mov
mov
jmp
mov
jg
inc
rorl
jae
pop
dec
ljmp
jo
jle
jo
lahf
push
lahf
adc
test
bound
lahf
lret
iret
test
sbb
lret
aas
dec
gs
add
fildl
inc
or
sti
out
test
call
inc
sbb
cmp
aaa
jmp
es
xor
mov
clc
xor
pop
ret
pop
stos
add
xor
repz
add
cmp
je
cmpb
mov
mov
sar
add
gs
sbb
dec
loopne
add
inc
mov
xchg
jns
or
sahf
sbb
fldcw
xor
xchg
sarl
mov
xor
push
js
stc
jg
dec
outsb
stc
das
fsubs
dec
cmpsb
stc
outsb
test
jl
cld
fnstcw
daa
lret
jp
inc
adc
cmpsl
lock
sub
cli
stc
mov
add
xchg
add
sbb
inc
mov
int3
jo
into
mov
subb
hlt
push
pop
imul
std
negl
andb
and
dec
pop
push
scas
mov
adc
add
add
add
or
push
pop
jae
test
mov
fisubrs
lret
rorb
xchg
xor
sbb
mov
pop
stos
ja
dec
shlb
jp
pop
push
pop
jnp
xor
mov
mov
aaa
shll
jne
fst
popf
iret
arpl
xchg
arpl
fsubrs
daa
push
clc
jle
lods
xor
jbe
cmp
inc
shr
or
inc
mov
rclb
jl
cwtl
dec
xor
test
jnp
fldcw
add
or
mov
mov
lods
jle
add
rol
lcall
nop
and
popf
insl
or
rcrb
lock
stos
outsb
cmpsb
push
mov
mov
inc
bound
cmp
aam
push
push
lods
ror
repnz
or
jg
cmpsb
push
cmpsb
movsl
jle
dec
cmp
lods
mov
and
cltd
insl
lea
sti
sbb
mov
pop
sub
mov
pushf
sahf
scas
jne
cwtl
xchg
inc
ja
icebp
xor
adc
push
in
adc
push
sub
and
push
push
andl
push
adc
mov
mov
adcl
mov
mov
orl
mov
subl
mov
andl
mov
mov
test
mov
jne
mov
jmp
sub
test
pushf
jle
push
mov
jle
jo
sbb
sbbl
lds
jb
aam
fistpl
sub
popa
stc
jo
std
or
pop
fimull
cmpsb
inc
mov
lea
clc
jge
mov
push
sub
insl
lahf
xchg
dec
mov
jg
dec
data16
push
ret
lds
les
lea
sti
test
add
popf
push
mov
shl
push
scas
pop
sar
aas
xor
sbbl
sub
std
mov
fidivrs
pop
add
inc
mov
leave
ret
xchg
ds
xchg
cmp
ret
pop
jmp
mov
or
insl
data16
sbb
lock
push
divl
adc
fisubrs
clc
les
cltd
imul
aam
jl
ljmp
mov
add
leave
push
faddl
add
jae
shlb
and
mov
xor
push
mov
push
pop
mov
aam
outsl
add
push
inc
lret
cmpb
mov
sub
xor
std
pop
pop
inc
dec
xchg
jmp
push
cmp
dec
cmpsb
in
push
adcb
je
rep
loop
loop
xor
push
add
mov
in
push
sub
shlb
mov
push
cmp
push
fisubl
enter
rcll
lcall
jl
or
mov
push
pop
nop
cwtl
or
xorl
cld
ja
jmp
push
or
aam
in
lahf
xchg
push
dec
cmp
hlt
xchg
pop
push
or
fs
fidivs
sarl
inc
jbe
dec
adc
loopne
ljmp
in
movsb
loopne
popa
add
mov
call
dec
xchg
xchg
adc
loopne
lahf
bound
test
cmpsb
mov
xor
lock
sub
push
stos
insb
mov
jb
mov
test
sbb
cmpsb
mov
inc
ret
jne
test
xchg
sbb
gs
es
or
push
xchg
ret
ljmp
addr16
pop
fidivs
insl
pushf
sub
pop
insl
popf
jnp
imul
adc
rcrb
shll
roll
ret
push
mov
sub
mov
mov
mov
subl
mov
xorl
movl
incl
movl
subl
mov
push
push
push
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
add
xorl
mov
movl
jmp
inc
jae
pop
sub
jae
and
mov
lea
pop
lds
and
jo
lea
mov
enter
push
push
sub
push
es
fnstcw
fistpll
ret
shll
add
mov
jo
lock
mov
fidivs
leave
loopne
lret
lea
xor
mov
test
xchg
loop
push
mov
add
int
adc
jp
icebp
cmp
sbb
aam
mov
in
mov
dec
sbb
mov
inc
cs
mov
mov
and
cmp
pushf
lea
in
lods
loopne
lret
cmp
movsb
dec
pop
insl
cs
push
or
sbb
cmpsl
or
cmp
mov
xor
arpl
xor
push
pop
imul
decb
stc
pushf
gs
repnz
pop
aaa
add
add
dec
mov
lods
jae
insl
into
jnp
xor
inc
inc
sub
mov
sbb
lahf
hlt
mov
in
ja
movsl
mov
pop
mov
dec
scas
loop
je
mov
jge
in
repz
outsb
pop
dec
mov
ljmp
cmp
cmpsl
mov
sti
popf
es
shl
movsl
js
cmp
mov
cmp
int
sbb
dec
out
cmp
shlb
data16
or
nop
cmp
xor
push
mov
or
mov
adc
lret
dec
xchg
xchg
pop
dec
xor
add
sti
aad
mov
sub
filds
pop
imul
cmc
jne
subl
xchg
xlat
std
push
jmp
dec
orb
orb
repnz
cli
mov
jmp
ja
pop
inc
mov
push
andl
aam
neg
pop
loop
pop
insl
jle
test
xor
aas
shrl
cmp
incl
shld
mov
pushf
leave
test
lahf
sbb
fistpll
sbb
into
jae
ret
movsb
inc
incb
sbb
xchg
push
movsl
pop
arpl
nop
jne
and
cltd
fwait
repz
pop
fwait
repnz
ror
lea
push
pop
xchg
jbe
or
xor
mov
cmp
and
jo
test
mov
nop
mov
xchg
mov
sarb
mov
push
or
fldl2t
cmp
or
fsubrl
mov
pop
stc
leave
out
mov
sahf
cmp
stos
dec
cmp
stos
call
pushf
sub
enter
into
push
mov
sbb
outsb
cmp
cmc
hlt
mov
inc
inc
in
push
push
ljmp
xor
aad
lods
fbstp
xor
lret
push
or
mov
js
scas
lcall
scas
loop
in
fdivrp
mov
psubusb
pusha
sub
cmc
lret
mov
ja
sbb
and
mov
cmp
inc
xchg
push
mov
pop
push
psubsw
push
aaa
sbb
popa
inc
lods
and
push
mov
int3
xor
jb
inc
add
call
aam
test
test
add
dec
add
add
mov
lahf
popa
sti
arpl
push
mov
ret
and
jo
mov
aad
cs
out
out
mov
pusha
cld
sub
xor
mov
add
cmp
push
adc
pop
pop
sbb
fs
xchg
and
scas
hlt
loop
inc
cwtl
inc
sub
xor
jecxz
icebp
out
cmpsb
and
mov
les
xlat
stos
das
jg
mov
lods
sub
add
in
adc
jo
cwtl
sti
push
xchg
inc
stos
xor
jb
jmp
and
pop
xchg
cmp
lahf
or
daa
lea
mov
cmc
lret
and
push
pop
in
dec
adcb
lods
add
mov
fmull
movsl
dec
or
scas
test
aam
push
mov
pop
pop
hlt
ret
and
pop
rclb
jle
mov
dec
mov
dec
mov
inc
into
cmp
dec
jb
cmp
int
sbb
test
mov
test
push
jle
sub
aam
jle
pop
lcall
mov
in
data16
aas
lcall
mov
add
jle
inc
adc
cmp
and
inc
sbb
iret
inc
cs
loope
insb
rol
das
cld
inc
sub
insb
pop
pop
mov
es
adc
pop
push
pop
fs
aaa
btrl
jno
xchg
mov
adc
test
sbb
jecxz
jl
lret
jp
aas
popf
sbb
shrl
fld
popf
cmp
filds
movsb
push
imul
and
push
push
sahf
aam
and
sbb
cwtl
scas
scas
es
add
dec
es
mov
xchg
mov
test
aad
int
notl
sub
dec
lock
pop
and
inc
mov
cmp
popf
test
xor
pop
xchg
add
rcr
lcall
dec
out
mov
fnop
stos
scas
into
nop
xchg
out
xor
sbb
mov
rep
mov
shlb
pop
test
or
int3
cbtw
dec
and
rcrb
stos
add
aad
xlat
xchg
add
fnstenv
rolb
cld
imulb
rcll
sbb
dec
imul
xchg
dec
je
xlat
cli
leave
scas
subl
push
cmp
adc
dec
mov
xor
xchg
adc
dec
jae
popf
mov
sbb
jecxz
lods
cltd
xchg
jne
xchg
mov
jecxz
push
cld
loope
jmp
testb
pop
pop
enter
pusha
shrl
les
nop
jle
add
mov
and
sbb
lods
push
sub
pop
or
aaa
adc
loop
pop
inc
cmp
mov
mov
push
andl
dec
cmp
and
fstpl
push
aas
cmc
js
pushf
ss
pop
xchg
mov
xchg
xor
push
jmp
jns
pop
data16
cmc
xlat
test
pop
addr16
push
out
ror
mov
addl
xor
addl
add
xorl
mov
movl
movb
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
add
orl
mov
adc
jmp
or
rcl
cmp
pop
jns
popa
dec
fimuls
jo
jge
jo
dec
sbb
loope
dec
sub
dec
out
xchg
sbb
inc
jbe
dec
adc
or
add
daa
jmp
xor
pushf
loope
negb
adc
lret
and
pop
mov
or
sub
add
sbb
jg
lods
arpl
jns
push
or
push
divl
fldl
sub
lret
and
out
cmp
jg
and
jo
inc
jne
xorl
leave
mov
clc
nop
popf
clc
imul
mov
sbb
xor
mov
inc
inc
leave
movsl
andb
jge
jmp
or
dec
and
and
and
adc
fnsave
push
sbb
aam
add
xchg
das
movsl
outsl
sub
mov
icebp
movsl
cmp
pusha
out
xchg
xchg
loope
xor
or
aaa
push
pusha
and
mov
shll
mov
jle
andl
int3
jmp
lcall
dec
imul
and
push
push
dec
hlt
cmp
repz
cmp
mov
add
pop
pop
xor
lahf
out
or
mov
enter
xorl
and
xchg
es
pop
lock
jno
testb
push
add
fucomp
add
xor
imul
dec
aaa
cmp
dec
scas
in
repnz
mov
ud2
leave
mov
nop
sbb
pop
mov
mov
xchg
test
adc
inc
xchg
mov
mov
js
data16
loope
fisubrs
cs
cltd
adc
dec
mov
xchg
dec
nop
pop
aad
cmpsl
jns
or
movsl
and
inc
mov
test
jl
lret
scas
lret
jns
and
push
dec
ret
pusha
xchg
add
addl
cli
push
arpl
addr16
sbb
ljmp
ret
mov
push
es
push
and
in
or
mov
subps
pop
jecxz
push
mov
push
mov
push
or
into
push
dec
fidivrl
mov
sbb
and
and
xchg
mov
cmp
call
adc
xor
cmp
adc
sbb
outsl
adc
inc
sub
inc
sti
stos
dec
call
fwait
or
xchg
lods
dec
cwtl
ljmp
xor
mov
and
jg
into
das
cs
push
cli
mov
pop
cmp
lahf
nop
xchg
xchg
inc
in
fcom
sbb
test
scas
mov
cs
fildll
pop
fstpl
aam
sar
inc
insb
add
stos
and
push
push
xchg
mov
aaa
pop
jle
aas
pop
insb
xor
push
flds
push
push
popa
mov
lahf
in
rol
ficoml
cli
stc
push
sbb
or
add
out
lds
inc
sti
or
lods
std
push
test
xor
add
adcl
push
inc
mov
sbbl
xor
add
push
mov
orl
xor
addl
add
xorl
push
lea
push
addl
pushl
adcl
pushl
call
adcl
test
je
lea
sbbl
push
mov
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
and
int3
jo
and
jo
mov
outsb
fs
sub
lea
and
imul
xor
push
pop
or
xor
mov
sub
test
dec
jp
add
sahf
into
cmp
mov
pop
imul
sbb
leave
aas
jnp
out
jmp
loope
mov
sbb
lods
and
ss
add
add
sbb
cwtl
mov
pop
cmp
cmpsb
mov
and
mov
add
pop
adc
test
or
pop
dec
jl
sub
mov
dec
xor
push
cmpsb
dec
dec
pop
adc
mov
in
xchg
outsb
scas
jo
dec
idivb
jne
gs
popl
sbb
repz
sub
jnp
or
dec
in
sbb
xor
enter
mov
push
lret
nop
xor
push
in
sub
cmp
inc
push
idivb
int3
lds
sub
mov
mov
sbb
int
data16
sub
dec
pop
xchg
dec
inc
jb
adc
or
pop
cmp
xor
imul
mov
mov
mov
gs
aam
cwtl
jl
jbe
test
sbbb
jnp
mov
data16
cmc
xor
inc
into
dec
mov
sbb
call
ds
das
pop
adc
inc
in
mov
roll
pop
push
xchg
mov
loopne
shll
and
popf
shlb
mov
arpl
arpl
test
lock
lcall
mov
mov
xor
sub
sbb
cmp
adc
push
test
inc
and
icebp
in
jno
dec
jns
jl
loop
rcrb
jb
xorb
arpl
test
pop
xor
addr16
jmp
ja
mov
loop
xlat
fstpt
aaa
mov
in
loope
lret
push
add
pop
fistl
xchg
or
jmp
cs
iretw
shll
insb
mov
lods
repz
push
mov
out
addr16
dec
adc
and
or
dec
lods
lahf
mov
mov
xor
inc
jmp
lahf
jns
add
inc
jbe
add
dec
mov
ljmp
mov
cmp
insb
pushw
popa
enter
sbb
fmul
sar
sarb
add
loope
test
inc
loope
insl
xchg
xor
and
in
push
mov
mov
in
call
add
rolb
repnz
xchg
das
inc
xchg
mov
inc
shl
mov
pusha
adc
rcr
or
or
jp
push
xor
jae
xchg
sahf
xchg
jecxz
mov
movb
push
mov
add
push
mov
mov
pushl
jmp
sahf
das
or
mov
mov
pop
mov
dec
insl
jg
push
leave
jo
and
jo
mov
add
xor
outsb
sub
lock
scas
out
xor
out
add
push
inc
add
push
xchg
mov
xor
pop
cltd
into
dec
and
push
js
or
bound
nop
dec
lret
mov
test
dec
js
inc
pop
xor
adc
push
loopne
test
mov
pop
pop
cmpsb
mov
cmp
mov
xchg
dec
lret
pop
push
arpl
cmp
push
mov
push
jne
sub
inc
adc
aad
clc
or
addr16
push
cmp
jno
dec
and
lods
pop
sbb
jge
inc
hlt
idivl
pusha
mov
adc
xchg
out
inc
ja
mov
xchg
xchg
cmp
dec
mov
adc
dec
or
and
mov
mov
popa
xchg
pop
jno
fmuls
movsl
and
push
arpl
and
jmp
scas
imul
scas
mov
mov
mov
and
pop
in
clc
mov
ds
adc
sbb
lret
sbb
sbb
and
shr
push
xchg
or
into
xlat
negb
out
das
fstpt
jb
xchg
adc
fdivs
mov
inc
aad
dec
push
or
cmp
frndint
jge
cs
stos
repz
fadds
and
push
testb
outsl
fmull
jl
mov
xlat
mov
cmp
sub
sub
rorl
xor
cmp
xchg
add
mov
jne
sbb
dec
xchg
jl
inc
inc
jbe
dec
js,pt
xchg
call
lret
mov
push
add
dec
insl
sbb
mov
jbe
les
xor
in
sbb
xor
inc
lcall
mov
mov
daa
cmp
adc
test
xchg
rcrb
mov
push
outsb
inc
lret
push
mov
mov
popf
inc
cli
enter
adc
push
cmp
aam
cmp
dec
insl
mov
xor
in
mov
inc
rcrb
push
jne
loopne
push
adc
jp
pushf
pop
test
pop
add
outsb
sahf
dec
sbb
and
aam
arpl
sbb
jno
inc
sti
pop
mov
shlb
shrl
fs
imul
bound
sub
inc
rorl
decb
push
in
subl
ror
add
test
rcrl
loopne
mov
rol
xchg
pop
mov
ror
or
fimuls
cld
ret
xchg
adc
arpl
xchg
inc
js
inc
push
call
pop
sub
jns
ds
xor
in
add
lret
out
mov
mov
push
cmpsl
xorb
or
and
sub
sub
pop
rcll
mov
hlt
push
push
popl
popa
jmp
dec
jns
pop
insb
and
sub
mov
clc
cmpl
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
jne
gs
and
jo
decl
je
dec
jge
push
xchg
sbb
ret
cmp
xchg
test
out
cmp
jne
vmptrst
pop
or
and
jmp
push
out
fnstenv
dec
data16
into
cs
push
jl
xor
xchg
orb
jmp
sar
mov
das
mov
mov
sub
aaa
sti
loop
xor
xor
dec
sub
sbb
sub
stos
into
mull
push
cld
mov
shll
xor
fadds
push
fwait
rol
mov
enter
mov
outsb
mov
loopne
or
jnp
iret
xor
stos
out
iret
movsb
test
and
cmp
inc
cli
adc
in
inc
dec
bound
and
xchg
cmp
call
dec
stos
scas
inc
jmp
pop
jg
popa
sbb
inc
add
ds
mov
inc
leave
or
sbb
jno
mov
sbb
xor
stos
fistpll
jae
mov
cmp
and
push
ss
insb
adc
dec
mov
inc
push
or
jb
jb,pn
in
mov
xor
sahf
jl
dec
jecxz
cld
mov
push
inc
mov
imul
mov
jae
mov
push
ds
cli
mov
cmp
xchg
mov
jbe
pop
pop
fidivrl
fs
xchg
cmp
mov
aaa
sub
lret
ret
add
nop
dec
sbb
pop
mov
sub
add
sbb
dec
sub
pop
aad
or
push
imul
cli
or
cwtd
lods
adc
sar
xchg
inc
xor
push
mov
nop
cmc
sbbb
mov
pop
cwtl
mov
mov
add
sub
cmp
sub
xor
clc
cmp
insl
or
or
mov
pop
pop
imul
stos
out
add
jno
pop
xor
lea
fsubl
xchg
out
fcomi
adc
pusha
popf
xchg
arpl
dec
les
movsl
inc
push
outsb
jb
fbld
sbb
jb
ss
jmp
aam
lea
or
popa
ret
xlat
adc
sahf
mov
dec
push
sbb
inc
shlb
mov
nop
and
mov
and
inc
inc
jmp
daa
mov
or
or
pop
cmpsb
mov
lods
ds
pop
test
push
sti
push
mov
dec
enter
insl
and
enter
and
adc
aam
xchg
xchg
lods
mov
xor
nop
outsl
dec
outsb
and
push
sbbl
je
les
xlat
cmp
xor
pop
mov
add
adc
aad
dec
sub
les
xchg
insb
jge
stos
and
pop
scas
iret
push
vpcomd
pop
adc
or
pop
dec
cmp
mov
jge
cmp
in
jl
push
popa
ret
sahf
mov
adc
xor
loopne
test
call
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
jmp
ja
mov
mov
adc
xchg
in
aaa
shlb
and
jo
sub
pmaxsw
negb
repnz
lods
out
call
pushf
cmc
cs
mov
jp
rol
fwait
jg
adc
cli
imul
mov
loopne
cmpsl
lock
jl
movsb
fildll
cmp
test
inc
negb
mov
xchg
cmc
aad
xchg
cli
sub
xchg
sarb
adc
mov
and
loop
iret
mov
test
push
and
dec
cmp
in
idiv
mov
mov
cmp
sahf
mov
adc
outsl
movsl
mov
out
fidivl
fisubl
notb
pop
fwait
dec
fs
xchg
insb
sarb
fisubl
jmp
sub
dec
repnz
or
sub
test
mov
int
lods
nop
sbb
dec
xorb
fistl
adc
xchg
mov
data16
push
leave
shlb
sbb
neg
mov
pop
lods
dec
pop
clc
xor
xor
or
das
or
hlt
sbb
stos
push
and
cmp
mov
and
inc
je
bnd
xchg
jne
sbb
inc
xchg
pop
jg
xor
nop
rorl
fdivr
sbbb
sahf
nop
mov
and
pop
out
pop
int
mov
aad
cmpsb
pop
fwait
in
or
xor
cmpsb
out
mov
mov
imul
and
cmpl
push
in
lock
xor
cwtl
mov
stc
cmp
rcll
loope
aaa
mov
jle
adc
subl
cmp
mov
iret
in
cmp
xor
jle
sbb
inc
jp
add
push
in
adc
inc
xchg
stc
dec
cmpsb
sbb
xor
in
pop
add
sarb
in
add
adc
cmp
xlat
jns
mov
inc
ljmp
mov
je
xor
sub
icebp
xchg
movsl
sub
out
cmp
aaa
ret
or
mov
sub
sbb
mov
sub
fldcw
mov
es
adc
add
xchg
cmp
cmpsb
lods
std
stc
cld
fildll
push
stos
mov
mov
out
sub
push
adc
mov
in
jns
jbe
push
mov
imul
or
sbb
inc
sarl
push
es
int
sub
scas
lods
dec
fwait
lea
and
ja
bound
push
imul
add
push
or
sub
xchg
xchg
mov
test
cld
jecxz
jo
or
sarb
orb
adc
test
fsub
divb
add
jb
cltd
adc
mov
mov
repnz
mov
test
aad
cmc
adc
mov
popf
fldt
xor
mov
movsb
xor
shll
psadbw
rorl
add
inc
cli
fisttpl
jp
xchg
mov
out
jo
and
jo
rcl
or
xor
cmpsb
mov
dec
lds
je
aad
push
sub
cmc
icebp
or
jno
into
aas
rclb
je
iret
jmp
push
popf
sti
lods
std
mov
out
sub
mov
imul
pop
stc
shll
pop
push
push
pop
rcrl
jnp
loop
or
test
add
scas
jle
sbb
add
add
push
jp
pusha
pop
stc
mov
pop
insb
pop
outsb
inc
subb
xor
call
clc
iret
in
inc
lods
or
xchg
push
push
xlat
xor
add
lret
dec
jb
mov
jecxz
jle
idivl
int3
mov
or
call
mov
mov
test
sahf
rcll
in
ds
push
and
loopne
mov
lods
mov
xor
jg
mov
xor
out
mov
inc
fistpll
inc
cltd
or
add
pop
pop
and
hlt
filds
jp
jbe
scas
test
js
dec
or
hlt
popf
in
aad
mov
imul
mov
sbb
rcrb
outsl
cmpsb
lcall
push
outsl
inc
jecxz
xchg
icebp
and
test
fdivs
jb
aam
dec
push
add
xchg
add
stos
adc
xchg
mov
jp
orb
pop
aas
fisttps
push
into
add
xor
shll
lcall
lock
xchg
push
dec
mov
and
xchg
out
ja
dec
push
mov
je
clc
jns
das
lret
jecxz
fcomp
fucomi
adc
pop
xchg
mov
mov
fwait
repnz
hlt
outsb
enter
nop
mov
mov
int
xor
jno
aam
stos
pop
lea
pop
cld
stos
rcrl
jns
pop
ljmp
pop
cmpsb
push
fdivr
and
and
xor
xor
in
inc
cmc
cmpsl
add
xor
xchg
insl
mov
xor
add
xor
jecxz
sarl
add
pushf
mov
pop
lahf
mov
sti
lods
mov
xor
jb
cmp
pop
test
sub
sub
jmp
lds
xor
inc
popf
fstl
dec
and
ret
ljmp
jle
mov
adc
or
aas
add
push
imul
fldt
insl
cmc
mov
test
mov
cmpsl
xor
cmpsb
lods
adc
inc
lret
pop
push
mov
fs
sub
repnz
test
and
inc
or
lret
scas
repnz
iret
out
inc
imul
xchg
inc
lods
xor
fstpt
mov
mov
inc
shlb
mov
sarl
aam
ss
jg
add
adc
test
sbb
bound
ds
mov
clc
incb
inc
push
jmp
mov
fwait
xchg
fwait
jae
roll
in
enter
jo
and
jo
pop
in
push
pop
lret
mov
subl
das
pop
inc
push
insb
xorl
xchg
sub
add
push
xor
sub
movsb
adc
repz
ja
jp
xchg
das
sub
jmp
jb
cld
xchg
jmp
dec
mov
sbb
dec
xlat
xchg
rorb
jo,pn
push
movsl
mov
imul
into
pop
jle
inc
pop
outsb
inc
push
gs
aas
and
sub
jnp
fcomi
xchg
jecxz
into
sbb
out
in
sbb
fbstp
fs
xchg
add
pop
subb
in
pop
and
cmp
mov
sub
push
outsl
sub
in
sbb
mov
jnp
mov
pushf
mov
fstpl
inc
fistpll
aad
push
andb
hlt
push
jne
xchg
pop
pop
xor
ss
bound
lea
pop
icebp
or
mov
sbb
loope
popa
inc
fwait
jecxz
push
xchg
stos
ljmp
sbb
push
sub
pop
in
sub
mov
jo
and
lds
push
es
hlt
mov
xor
sub
inc
jns
push
push
jecxz
jns
lcall
mov
into
in
idivb
mov
test
aaa
in
and
inc
addl
data16
or
push
arpl
dec
mov
scas
js
sbb
mov
mov
scas
fsubrl
jg
out
mov
jp
xchg
into
subl
clc
test
cmc
inc
mov
inc
out
sub
pop
dec
leave
pop
scas
out
xor
je
dec
std
lret
out
cli
push
hlt
dec
adc
cld
push
roll
pop
push
mov
inc
mov
insl
out
and
lahf
dec
and
cmp
out
add
imul
sub
and
xchg
je
repz
xchg
push
mov
scas
jmp
call
popf
xor
insl
insl
sbb
sbb
pop
mov
add
mov
fdivrs
mov
in
aad
mov
xorl
jae
lret
xchg
push
dec
and
aas
or
insb
dec
add
add
sti
lret
sub
out
mov
xchg
outsb
or
mov
xchg
outsb
inc
insl
mov
test
lahf
shrd
cmp
inc
aas
mov
hlt
adc
sub
cld
xor
or
pop
add
sbb
outsb
or
sub
jo
sarl
in
mov
scas
loopne
mov
punpckhwd
pop
pusha
dec
jo
scas
xchg
fisubs
in
xchg
push
iret
mov
jnp
push
mov
stc
mov
cs
loope
push
popf
movsl
les
pusha
xor
bound
fdivs
ret
icebp
popa
adc
cmpsb
and
dec
dec
xor
mov
imul
jp
or
mov
xchg
decb
pushl
mov
mov
pushl
lea
jmp
mov
push
mov
bound
fnstenv
and
jo
sbb
in
stos
outsb
push
mov
addr16
add
cmp
cmp
les
mov
sub
cmp
out
adc
stc
shlb
lret
xchg
xchg
insl
fwait
cltd
or
in
adc
repnz
mov
inc
push
pop
add
push
outsb
or
bound
jmp
fstps
lcall
push
in
fxch
data16
cmp
dec
fcompl
mov
mov
lock
pop
int3
sarl
lock
push
lock
mov
mov
jge
mov
push
xor
xlat
bound
mov
std
sub
xorb
xlat
stc
icebp
int3
pop
test
push
push
mov
movsl
in
mov
int
lret
jmp
adc
ret
sahf
loop
std
popf
nop
mov
and
sub
mov
das
cmpl
arpl
mov
push
jecxz
dec
and
call
test
js
mov
subl
call
jne
jne
dec
stc
jo
push
pop
pop
int
paddb
inc
addb
cs
shl
dec
add
xor
and
mov
pop
jl
add
int3
mov
cmp
shrl
mov
pop
adc
in
fisubl
call
out
cmpsb
xchg
adc
and
push
scas
mov
dec
inc
and
mov
ss
and
fwait
sub
xlat
inc
push
mov
jne
sub
dec
outsb
adc
sub
xchg
lea
jmp
push
pop
dec
aam
popf
popf
sub
jge
shl
test
mov
lret
jne
add
leave
adc
inc
in
mov
in
stos
lock
add
popf
mov
jns
push
add
sub
fwait
lret
fnstenv
scas
xchg
popa
sbb
mov
ficompl
mov
lock
int
cmc
sub
or
in
loopne
loope
dec
addr16
imul
std
push
les
mov
adc
rcll
push
std
jp
es
push
and
pop
mov
pop
fwait
sbb
popw
inc
mov
pop
xchg
shl
lock
pop
mov
jge
movsb
movb
and
ret
adc
xchg
in
mov
and
mov
sub
bound
jb
mov
xchg
push
movsb
jle
mov
sub
inc
add
imul
mov
add
cltd
push
or
jb
arpl
push
sub
jae
add
xlat
pop
add
jmp
cmp
cmp
es
jne
or
mov
mov
dec
mov
or
add
sti
les
movsl
scas
mov
ja
add
cmpb
xor
add
dec
add
add
out
out
xor
call
shrb
jo
and
jo
mov
insb
jae
mov
cmp
pop
mov
cmp
arpl
cwtl
arpl
ja
jl
in
adcl
ret
les
out
mov
push
pop
cwtl
or
cmp
pop
hlt
adc
lret
arpl
adc
scas
bound
cld
outsb
imul
mov
stos
fistpll
sbb
mov
ss
gs
mov
jl
bound
and
and
mov
std
jecxz
inc
xor
inc
arpl
cmc
sbb
push
mov
push
sub
sub
dec
xor
sbb
fnstsw
push
mov
sbb
cwtl
xor
mov
rclb
push
dec
fptan
cld
and
pop
adc
test
setle
pop
js
div
ficompl
inc
jle
xchg
bound
movsl
jnp
adc
test
mov
cmp
mov
mov
lret
or
clc
mov
decb
pop
sbb
movsl
inc
pop
outsb
pop
popa
jno
cmc
sbb
sbb
std
inc
scas
gs
inc
sub
mov
insb
jle
cmpsb
and
hlt
repz
fwait
add
dec
arpl
cs
loopne
adc
pop
cmpsb
iret
mov
mov
jp
mov
xor
push
pop
or
loop
imul
bswap
mov
setb
mov
dec
jg
add
mov
popf
lret
cmp
in
jb
jne
adc
ret
push
insl
daa
push
testl
xor
push
jb
mov
xchg
sbbl
sti
in
mov
mov
adc
sub
sti
addr16
hlt
movsb
jge
mov
xchg
test
xchg
outsl
subl
mov
lret
xor
hlt
push
int
mov
testb
shrl
in
call
jle
stos
aas
jge
cli
cli
ror
cmp
or
xchg
fstl
sarb
aaa
jecxz
shl
or
sub
insb
add
mov
and
test
mov
lds
mov
je
test
pop
push
loopne
das
fadds
ljmp
insl
or
sub
add
or
test
push
inc
jns
hlt
nop
dec
arpl
jb
xchg
pop
mov
dec
stos
lcall
push
jo
adc
xor
jmp
std
jmp
fstp
xor
aam
mov
test
stos
cmp
sbb
jae
out
jp
mov
clc
lahf
cmp
loopne
mov
add
cs
ror
dec
push
or
mov
sbbl
sub
mov
hlt
cmp
popf
out
push
and
sbb
ret
insl
mov
in
loope
popa
pop
ds
leave
cli
adc
cs
je
jp
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
jmp
cmpsb
jnp
or
lahf
jo
xor
mov
jo
jge
jo
nop
pusha
bound
icebp
pop
jg,pt
cmc
es
mov
xor
inc
mov
movsb
imul
dec
add
push
cwtl
in
loope
add
jl
dec
cmp
mov
or
adc
pusha
popa
cmp
dec
mov
fsts
sbb
ret
sbb
cmp
push
test
fcmovu
sti
push
pop
arpl
xor
mov
push
lcall
or
pushf
pop
xchg
dec
cmp
enter
jmp
imul
or
lea
adc
mov
xor
mov
das
dec
lahf
fnstsw
mov
movsb
mov
popf
add
mov
jge
cmpsl
lcall
jne
mov
push
fnsave
inc
cmpsl
adc
enter
lahf
repz
cmp
jg
xlat
pusha
jb
and
fmull
jg
outsl
pop
cs
push
hlt
cltd
mov
movsl
push
push
xor
cwtl
sub
mov
fmull
in
xchg
cld
cmp
mov
test
xor
sbb
out
lahf
lods
mov
jge
mov
in
mov
mov
jbe
jae
clc
and
dec
mov
jl
adc
xchg
aad
gs
push
scas
cmp
and
sub
inc
jo
jmp
out
sub
fwait
push
incl
push
xchg
cs
dec
scas
push
dec
cmp
testb
dec
pop
or
inc
scas
pop
xor
push
fldl
mov
jg
mov
repz
pop
mov
jecxz
sub
jmp
gs
stos
adc
or
xchg
mov
js
jne
sar
test
jl
dec
pop
xor
outsb
shll
and
dec
pop
mov
insb
mov
scas
and
ds
xchg
pop
mov
sbb
rolb
dec
dec
pop
pop
push
cs
lock
and
fisttpll
std
jge
mov
test
jns,pt
push
jp
lret
jp
mov
mulb
xchg
repnz
lcall
jno
imul
xor
xchg
mov
lahf
ret
aas
pop
inc
test
xlat
mov
ret
and
push
push
out
sbbb
fs
aaa
inc
hlt
and
mov
movsb
aas
mov
ja
mov
dec
jmp
cmc
dec
sbb
mov
and
jmp
ret
pop
mov
xor
loope
and
mov
jmp
xchg
mov
test
aam
pop
inc
and
push
push
popf
test
bsf
cmp
mov
mov
push
push
fldt
shlb
je
mov
lcall
xchg
jnp
in
jle
add
scas
push
out
mov
mov
or
add
add
lret
cmc
negb
aaa
adc
push
sbb
mov
mov
jmp
out
mov
ja
add
xchg
repz
and
jo
and
enter
inc
adc
dec
mov
imul
data16
jmp
xor
cli
fdivrs
out
jl
xchg
addr16
xor
lcall
xor
std
jmp
fnstsw
arpl
lret
sarl
icebp
xchg
mov
mov
lods
or
subl
lea
test
push
sub
call
sbb
ret
inc
xchg
test
repz
scas
xorl
jl
andl
test
add
push
loop
and
xor
into
icebp
mov
subl
pop
adc
adc
std
daa
mov
out
add
jnp
push
mov
mov
aas
sub
sbb
fistpl
scas
mov
aad
mov
adc
jg
lods
inc
test
insb
xchg
int
lret
cmp
adc
filds
jp
iret
int
pop
sbb
or
xchg
mov
adc
pusha
cmp
mov
mov
fwait
pop
xchg
mov
ficomps
sub
sub
adc
xor
cld
fidivrs
clc
popa
cmp
pop
and
movsb
mov
xchg
negb
add
sbbb
out
xlat
stc
into
in
loopne
mov
shlb
and
xor
push
mov
jge
aas
xchg
xchg
or
mov
adcl
inc
xlat
or
hlt
rcrb
std
popf
or
aam
cmpsl
andl
sti
cmpsl
lcall
sbb
cmpsl
cmpsl
lret
jge
xchg
mov
xchg
les
je
cld
ss
ja
and
or
or
mov
or
cmp
dec
shlb
inc
test
mov
push
inc
outsb
bound
test
push
clc
sub
push
repz
inc
xor
mov
mov
insl
pop
daa
stos
xchg
mov
xor
dec
in
or
pop
adc
jge
push
mov
andl
into
jno
mov
popa
popa
fs
and
call
rcrl
outsl
cli
in
sbb
xchg
out
mov
loopne
mov
sahf
outsb
xor
into
sbb
sbb
mov
jns
pop
or
in
int
es
dec
add
rorl
jns
rolb
and
cmp
pusha
mov
cli
dec
test
xor
arpl
fdivl
adc
outsb
and
cld
mov
adc
push
ret
mov
fistpl
xchg
xchg
xchg
repnz
xchg
pop
out
cmp
sarb
orl
xor
mov
notb
sbb
jbe
fldl
inc
in
pushf
cmp
mov
shlb
imul
or
or
pop
leave
ret
push
mov
sub
push
subl
mov
sbb
mov
mov
mov
sub
imul
mov
movl
neg
movl
mov
mov
or
mov
add
mov
adcl
mov
xor
xor
mov
sbb
mov
jmp
arpl
cmc
xchg
cmc
arpl
pop
das
mull
in
jo
lahf
jge
jo
jmp
inc
clc
jne
sub
pop
lret
mov
lods
sbb
xor
pop
imul
or
popf
xchg
sbb
in
mov
jmp
mov
pop
xchg
outsl
stc
add
dec
hlt
fnsave
inc
mov
or
in
insl
pop
fwait
mov
mov
data16
lcall
lds
cmp
mov
jnp
mov
xor
and
xchg
jnp
mov
aas
pop
jmp
sbb
mov
stos
adc
adc
mov
adc
adc
lcall
push
movsb
stos
mov
dec
cmp
sub
pop
hlt
or
xchg
fwait
sub
leave
pusha
jg
stos
and
sbb
inc
cmp
out
cli
jno
mov
lret
mov
mov
adc
cmc
dec
in
jp
fidivl
popf
mov
mov
pop
add
inc
adc
jge
and
fiadds
enter
cltd
in
sub
rol
lea
xor
add
mov
call
pop
movb
cmp
dec
sbb
add
push
cmp
adc
sti
add
xor
movsl
dec
cld
popa
je
push
jecxz
push
test
pop
call
ret
push
movsl
push
xor
mov
mov
insb
scas
sbbb
fmulp
xchg
int3
mov
jp
jnp
jmp
mov
mov
sub
fldenv
jp
pop
push
arpl
adc
cmp
sub
lret
dec
filds
pop
imul
cli
push
sahf
ja
popf
cmpsb
in
lods
shlb
fcomps
jge
inc
xchg
je
lods
ljmp
xor
mov
jbe
jg
or
call
sbb
mov
inc
out
lcall
in
sarl
push
orb
int
sbb
adc
mov
and
js
lock
mov
fstl
cmp
ret
or
nop
jne
rcrl
js
call
jp
xchg
pop
dec
pop
lods
cmp
sti
test
lahf
dec
mov
and
cmp
nop
idiv
decl
cmp
aaa
aam
outsb
dec
mov
sbb
add
adc
in
mov
movsb
pop
pop
jne
cmp
mov
jbe
idivl
js
and
push
cmp
das
mov
inc
sbb
dec
pop
xchg
jne
mov
fisubrs
jp
push
mov
int3
mov
or
xchg
mov
inc
daa
jecxz
push
jg
and
aaa
out
std
and
call
ffree
test
fistpll
std
in
sub
or
cmp
loopne
or
cli
or
notl
icebp
das
add
cmp
and
ret
sbb
lods
subb
les
mov
and
inc
push
nop
lds
aas
inc
fsubl
jle
mov
in
lds
repz
inc
pop
stos
movsb
out
mov
jle
orb
nop
mov
scas
jg
jno
repz
outsb
ficoml
lret
cli
ja
pop
aad
faddl
je
popf
adc
or
lret
add
xor
mov
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
adcl
jmp
xlat
mov
mull
mov
mov
rolb
jo
lahf
jge
jo
mov
inc
mov
andl
sahf
xor
jp
add
repnz
xor
cmpb
sub
not
fisttpll
xchg
jo
cmpl
incl
out
fistl
jne
cmp
sbb
sarl
mov
sbb
mov
mov
pop
popf
dec
in
lock
dec
inc
cmp
call
jns
aaa
xor
insb
fwait
aas
jb
xchg
mulb
test
xchg
sbb
jno
xor
stos
add
mov
repz
lock
lcall
lea
daa
in
push
bound
call
push
xor
leave
ret
call
insl
in
imul
jo
nop
in
in
cmp
pop
sti
out
inc
shll
mov
jle
dec
pop
pop
add
mov
xlat
and
orl
pop
ret
lods
aam
pop
scas
cmc
adc
adc
sub
jae
ret
popa
inc
lret
or
xchg
inc
les
roll
call
cs
cmp
cmp
sbb
mov
rol
mov
fucomip
gs
lret
lods
frstor
pop
pop
inc
mov
sub
and
mov
add
fucomi
addr16
pusha
arpl
jg
popa
mov
adc
pop
test
sub
cltd
adc
add
adc
loope
dec
rcr
pop
mov
push
pop
xlat
lods
cmp
sub
cltd
js
push
jle
dec
jb
mov
or
cmp
sub
pusha
sbb
lods
mov
inc
xchg
sub
lret
and
jnp
cmp
cmp
jmp
lahf
cmp
inc
push
pop
fdiv
sbb
in
cwtl
sbb
mov
sbb
xlat
cmp
mov
fcoms
rolb
add
in
xor
fwait
pushf
sub
hlt
xor
neg
mov
int
out
fistpl
in
and
addr16
movsl
in
xchg
iret
jae
jp
sub
xchg
mov
pop
loope
popf
out
sub
sbb
xor
std
mov
pop
mov
outsl
pmulhw
loopne
icebp
sti
inc
rclb
xor
ror
addr16
cs
rolb
add
fidivl
lods
xchg
std
scas
ds
mov
and
test
nop
xchg
daa
in
in
aad
ds
sti
nop
dec
inc
xor
jle
jmp
cmp
ret
jp
xchg
sub
push
outsb
stos
mov
test
sti
sbb
mov
pop
or
dec
mov
ret
scas
inc
jbe
in
dec
push
gs
inc
xchg
iret
bound
jae
jmp
adc
fsts
cmp
dec
mov
pop
inc
sbb
adc
icebp
cmpsl
cmp
out
out
xor
dec
push
ret
mov
mov
dec
cmpsl
movsb
iret
mov
fbld
adc
ret
jle,pn
das
mov
test
lds
mov
sbb
mov
mov
shrb
sbb
aaa
mov
mov
lcall
dec
incl
jmp
jmp
xor
iret
lcall
xor
fisubs
adc
cs
xchg
mov
inc
jne
call
add
fst
xchg
mov
jns
dec
xlat
out
cltd
mov
dec
shrb
cmp
xor
cmp
int3
adc
xchg
roll
fdivs
test
aam
test
inc
add
add
add
sldt
add
rorb
adc
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
add
movl
andl
jmp
into
iret
cmpsb
cmp
sbb
lcall
jo
jge
jo
inc
sub
dec
andl
adc
test
inc
in
add
lahf
lods
mov
cmp
jb
inc
mov
mov
and
pushf
xchg
divl
lods
sub
iret
push
in
out
mov
add
sub
scas
adc
sub
std
std
out
shrb
addr16
inc
dec
iret
icebp
jae
ds
jnp
outsb
or
sub
mov
aas
dec
popf
mov
cmp
imul
mov
push
repnz
movsl
popf
mov
inc
enter
sub
mov
nop
iret
rorb
xchg
loopne
push
out
je
repz
in
es
push
lods
call
inc
test
pop
adc
fnsave
cmp
xlat
mov
in
aam
leave
inc
std
mov
xor
repz
insb
xor
xchg
scas
fisubrl
mov
inc
cs
cmp
lret
push
outsb
xchg
loopne
pop
mov
jmp
fs
xor
lock
je
fs
pop
jg
and
cmpsl
pushf
or
mov
outsl
pop
clc
lock
sub
movsl
jb
xor
std
xchg
pop
stos
orl
xlat
pop
fsubl
outsl
pop
mov
pop
mov
adc
fistps
jb
sub
sbb
test
rclb
or
clc
loope
je
icebp
jns
add
sbb
xor
push
add
and
insb
adc
imul
test
shll
js
jo
dec
or
stos
arpl
push
jl
dec
imul
add
inc
xlat
jno
inc
cld
sbb
mov
add
xor
jp
pop
or
xchg
testb
movsb
icebp
add
movsb
add
fmulp
push
sqrtps
jnp
stc
push
lea
xchg
shl
fcmovnbe
shlb
mov
xor
ds
dec
jno
mov
insb
js
ret
lock
mov
mov
mov
xchg
shr
testl
xor
jmp
xchg
push
push
aas
adc
lret
xchg
sbb
push
mov
xchg
mov
adc
inc
xchg
fwait
insb
adc
std
pop
subl
mov
pop
clc
std
dec
ja
pop
mov
loopne
push
pop
scas
mov
adc
push
dec
pop
ret
or
or
js
sub
mov
into
sbbb
test
xchg
xor
mov
lret
mov
js
push
fisttpl
adc
push
cltd
adc
xchg
dec
ljmp
movsb
jae
fucomp
xor
jnp
sbb
aaa
faddl
out
dec
sub
enter
cmp
ret
jne
stc
out
mov
pushf
jmp
xchg
scas
and
xor
fnstsw
cld
xchg
cmp
aaa
cli
stc
jg
mov
lcall
gs
push
aam
into
and
cwtl
xchg
out
jle
movsl
aas
jb
xor
jl
mov
mov
pop
xchg
pop
out
in
push
call
inc
xchg
dec
inc
adc
cmp
fists
mov
shr
pop
xor
movsl
notl
pop
shrb
pushf
or
dec
in
push
movsb
adc
mov
dec
std
in
pop
xor
inc
imul
jne
loope
shlb
xor
mov
inc
out
out
test
lahf
jno
insb
stos
rcll
push
xchg
adc
movl
movl
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
movl
adc
mov
xor
sub
mov
add
movl
cmp
movl
je
movl
push
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
sub
mov
add
mov
jmp
addr16
xchg
jno
ja
dec
in
std
jnp
es
in
jo
lahf
jge
jo
cli
lcall
aaa
jno
xchg
mov
push
cmc
movsbl
jnp
ss
stc
or
or
js
mov
add
test
add
dec
js
jecxz
hlt
xchg
cmp
sub
mov
mov
movsl
daa
jb
lods
and
adc
jp
or
xor
scas
test
adc
lret
cld
mov
test
test
jne
test
jl
push
and
scas
mov
push
dec
fidivs
jl
loope
es
mov
pop
in
jbe
stos
out
in
bound
pop
dec
jno
stos
mov
xchg
bound
insb
andl
xor
sbb
add
push
lods
lahf
jb
pop
sub
shl
mov
int
int
push
decb
mov
test
cmpb
mov
iret
mov
ret
ja
cli
pushf
aaa
add
js
xchg
clc
mov
adc
push
jae
lea
pushf
pushf
push
dec
test
fwait
outsl
mull
mov
aam
mov
jo
arpl
jno
inc
imul
fs
jmp
jae
cmpsb
jns
insl
into
paddb
popa
je
and
pop
aaa
cmp
call
cmp
inc
and
aad
cmp
rcrl
call
out
rolb
mov
dec
ja
cmp
ljmp
mov
fwait
push
pop
push
push
fcmovbe
imul
sub
jecxz
mov
mov
pop
roll
js
pop
jns
or
es
mov
and
xor
loop
cmp
ficompl
or
or
into
movsb
or
xchg
sbb
mov
xor
and
lods
mov
andb
movsl
clc
andb
xchg
insl
xchg
dec
mov
sbb
add
push
mov
std
popl
sub
add
out
push
inc
adc
das
sbbb
mov
sbb
cmp
sub
jecxz
mov
mov
xchg
sub
pop
fmull
aad
std
inc
adc
sbb
ss
cmpsb
xchg
pusha
icebp
mov
call
icebp
stc
shll
inc
call
data16
or
test
testb
shrl
cmp
repnz
fsub
leave
inc
lea
cmp
pop
fidivrl
popf
clc
scas
sbb
fucom
movsb
pop
mov
pop
dec
test
push
lea
pop
mov
inc
aaa
repnz
adc
dec
mov
ja
ds
pop
shrb
xchg
jle
sbb
insl
aad
call
sbb
push
addr16
pop
xorb
and
xor
add
push
or
int3
xor
or
pusha
movb
aaa
hlt
outsb
dec
je
lods
test
pop
icebp
pop
rol
push
lahf
or
push
arpl
aam
mov
in
aam
push
aad
das
inc
jg
inc
xchg
cwtl
jae
mov
inc
lahf
xor
xlat
fninit
shl
rcr
fidivs
repz
jo
sbbl
mov
icebp
ror
lcall
ss
loop
insb
pop
addr16
xchg
fildll
arpl
xchg
mov
and
movsl
cmpsb
ja
ret
jle
pop
mov
je
negl
cmpl
aas
and
mov
sbb
add
push
mov
rolb
add
call
movl
cmp
movl
jb
mov
sbb
mov
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
add
sbb
add
imul
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
xor
mov
mov
jae
jg
ja
stc
rcll
lahf
jge
jo
jle
xchg
dec
mov
pushf
jl
pop
xor
xchg
call
movsl
lcall
xor
shll
imul
movsl
mov
jmp
lar
mov
sub
pop
ret
mov
adc
xchg
out
lret
das
mov
push
push
mov
add
arpl
flds
rorl
pop
mov
add
mov
out
sub
jecxz
scas
fwait
or
lock
mov
xchg
cmp
arpl
call
fimull
push
or
or
icebp
xor
sarb
dec
pop
sub
enter
sbb
hlt
hlt
cmp
lds
cmp
lds
lods
rolb
les
cltd
es
js
in
dec
push
fucompp
add
push
stos
adcl
xchg
rolb
ret
arpl
stos
mov
fdiv
pop
insb
into
mov
dec
and
repz
pop
adc
mov
imul
faddl
in
in
lock
mov
repnz
iret
xor
stc
pop
imul
enter
push
cmpsl
aaa
int
nop
rolb
out
sbb
dec
in
dec
jae
cmpsb
sbb
stos
jecxz
adc
xchg
dec
int3
inc
xchg
adc
push
daa
push
dec
mov
cmp
pop
sub
sub
int
int
fxch
cs
aad
sub
xchg
adc
or
push
sar
xchg
mov
add
add
jg
mov
dec
adc
negb
mov
mov
addr16
pop
scas
push
pop
mov
add
in
add
stos
mov
fs
movsbl
or
inc
jo
icebp
mov
scas
push
testl
test
mov
xchg
stos
rcll
push
hlt
inc
imul
dec
mov
mov
movsl
lret
fwait
adc
xchg
inc
mov
es
jne
data16
pop
in
push
cmp
sub
rcll
ficompl
shlb
and
fwait
mov
push
mov
in
mov
push
mov
push
movzwl
ror
mull
insb
and
push
push
xchg
cmpsl
mov
bound
sub
mov
adc
lds
jno
out
aam
dec
jmp
mov
push
test
jl
andl
mov
and
push
nop
cmp
test
lret
jecxz
int3
movsl
and
stos
add
adc
and
lock
jge
mov
dec
cmp
mov
cmp
xor
mov
popf
aas
xor
and
test
mov
lret
or
sub
sub
stos
out
xlat
mov
out
xor
mov
jb
sub
push
xchg
xor
test
imul
into
dec
inc
sub
adc
mov
cmpsl
sbb
mov
pop
mov
add
movsl
mov
jg
push
cmp
xchg
push
push
xchg
push
mov
or
inc
pushl
jmp
jno
xchg
stos
push
lcall
mov
push
out
lahf
xor
mov
lock
aas
adc
cmc
mov
aad
pop
mov
xor
aad
mov
shr
mov
jne
sub
lret
repz
sbb
cli
jo
lahf
jge
jo
iret
pop
ret
test
mov
outsb
cmp
inc
jno
inc
mov
sub
xor
iret
mov
es
int
loopne
cli
les
loop
fstps
pop
add
loope
cmc
mul
or
fldenv
and
add
dec
sbb
lds
cmpsl
paddw
in
imul
mov
cmp
enter
pop
sti
test
pop
and
scas
addr16
jmp
mov
jecxz
mov
out
repnz
cs
cld
scas
popa
sub
xor
sbb
icebp
push
xchg
ror
sbb
push
movb
cli
adc
movsl
mov
lahf
sbb
mov
std
sbb
pusha
mov
push
sub
loope
fwait
insl
mov
testl
xor
test
push
outsb
sub
xchg
fnstsw
or
aam
add
jp
xchg
cmpsl
dec
xor
test
nop
in
stos
aas
das
push
jne
popl
cwtl
push
dec
imul
jp
xor
xchg
and
call
pop
les
movsl
mov
pop
and
inc
inc
lods
xchg
out
mov
cmp
xchg
dec
ds
rcrb
pop
inc
push
inc
push
iret
sub
mov
roll
xchg
sbb
jge
into
cmp
fiadds
test
xchg
add
jnp
jmp
dec
push
test
sbb
dec
pop
xchg
jno
cmp
fsubrs
ja,pt
sub
mov
jge
cmp
jbe
test
loop
in
fistps
nop
sbb
lock
stc
int3
lods
out
pop
xor
jecxz
push
insb
movsb
xchg
pop
jp
nop
cmp
bound
push
lods
and
dec
loopne
cmp
out
xlat
sbb
into
and
ficomps
mov
and
inc
xorl
lea
icebp
fwait
fs
and
cli
fstl
cltd
pop
aam
stos
pusha
mov
add
lea
movsl
pusha
mov
xor
adc
mov
insb
sbb
jp
out
out
adc
mov
data16
add
or
and
xchg
xlat
insb
dec
ret
js
iret
inc
mov
repnz
enter
push
or
pop
mov
push
xor
imul
into
cli
push
xchg
aam
mov
sub
mov
addb
shrl
dec
jbe
jo
inc
inc
pusha
xchg
sbbb
xor
fwait
mov
and
sbb
shl
in
sbb
xchg
cmp
mov
hlt
ret
and
aas
lods
xchg
xlat
pusha
cmp
vpackssdw
jne
xchg
stos
sbb
in
push
adc
xlat
adc
idivb
jns
loopne
sub
dec
add
fists
lds
ljmp
cli
in
jmp
test
daa
test
jnp
andb
sbb
aas
shlw
and
mov
orb
cmp
push
inc
dec
aas
jbe
pcmpeqw
imul
and
mov
aam
imul
data16
adc
xchg
inc
in
and
test
clc
and
fcomps
cs
psubw
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
jmp
cmp
mov
loope
loop
pop
mov
xchg
lahf
jge
jo
dec
fistpll
add
push
cmp
adc
inc
push
lds
lcall
add
jl
int
adc
hlt
ret
lods
js
int3
es
insb
jmp
cld
enter
outsb
push
sahf
mov
and
les
pop
loope
notb
cmpsb
andl
stc
stc
dec
stc
mov
inc
xor
push
fbstp
inc
mov
xor
and
and
sbb
mov
popa
jne
pop
int3
sbb
mov
pop
mov
in
in
mov
jecxz
mov
or
js
push
cli
jae
xchg
call
lods
movsb
aad
add
popf
jmp
sub
pop
xor
cld
and
xor
xchg
icebp
xchg
out
xor
pusha
pusha
rclb
les
fs
xor
sbb
dec
add
sahf
test
nop
jne
addb
xchg
mov
shl
xor
adc
cmp
xlat
xchg
enter
mov
mov
jb
cmpsl
jmp
bound
xor
ret
hlt
or
cmp
jle
xchg
mov
imul
xor
mov
lahf
outsb
in
cld
push
sahf
mov
push
jp
add
xchg
push
out
popf
pop
adc
loopne
cmp
inc
mov
xor
mov
in
or
xchg
out
into
repnz
push
inc
outsb
rcrl
ja,pn
divl
jl
mov
test
aaa
ljmp
lods
lea
movsl
mov
cmp
stc
push
mov
mov
icebp
adc
std
pushl
or
lea
dec
cmc
repnz
and
fwait
or
push
jno
mov
dec
shll
sbb
mov
imul
push
cmpsb
jbe
cltd
add
inc
aam
add
ljmp
pop
mov
fwait
stc
rcr
mov
lock
lret
mov
clc
cld
xor
xchg
cltd
fiadds
mov
clc
pop
and
ja
hlt
sub
xchg
ret
in
sbb
negl
push
sarl
dec
ljmp
rorb
imul
jns
push
and
movsl
aad
mov
std
shl
lahf
cmp
jne
out
into
adc
dec
sub
xchg
xchg
jl
cmpl
pop
sbb
inc
decb
push
sbb
cmp
cmp
cmc
cmp
mov
out
xor
aad
xchg
aas
outsb
sub
push
lret
jmp
lret
xor
lret
dec
pop
imul
lods
stc
mov
aad
and
ds
push
inc
or
cmpsb
mov
xlat
daa
inc
enter
sbb
fcmovnbe
bnd
in
push
push
inc
xchg
and
xor
in
fs
push
sbb
lahf
inc
rcll
enter
lock
sbb
pushf
in
lods
fistl
scas
daa
pusha
jle
cmp
pop
add
cmpsl
and
push
scas
cli
mov
ja
jle
enter
imul
sarl
lcall
mov
ljmp
mov
sub
in
in
mov
test
cmpsb
dec
jns
aaa
data16
mov
inc
push
cltd
jne
and
loopne
pop
cmp
jge
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
xchg
fcomi
push
jb
mov
shlb
dec
or
lahf
jge
jo
jo
fcomi
bound
xchg
popf
cs
adc
fmuls
lods
jmp
cmpsb
mov
mov
jae
rcll
data16
hlt
ja
and
and
xor
add
cltd
fcom
fdivrl
sbb
ret
sbb
mov
cwtl
sbb
iret
adc
or
shl
dec
dec
insl
and
ficompl
aaa
insb
aas
movsb
add
repnz
push
sbb
adc
mov
jns
pop
mov
mov
jb
dec
outsb
add
mov
test
jno
and
in
pusha
push
ds
jae
fisubrl
pop
test
jnp
mov
push
aaa
repz
xchg
mov
icebp
push
lcall
cmp
push
add
push
sub
cmp
hlt
bound
mov
push
xor
fs
sub
shll
or
inc
xor
xchg
pop
inc
jbe
or
xor
xchg
sbb
push
cmpsb
or
ds
aam
leave
sbb
cmp
adc
add
cltd
jecxz
push
add
hlt
fldenv
inc
pop
cld
cld
in
and
daa
mov
adcb
lods
movsl
xchg
shlb
stos
xchg
adc
pushf
cwtl
lods
stos
inc
js
pop
cs
addr16
stc
push
fwait
in
cltd
pop
addr16
cli
repnz
scas
incb
add
jno
jge
jp
dec
lahf
sbb
jle
inc
pop
scas
sbb
and
jnp
sarl
mov
sbb
pop
mov
fs
rcll
orb
pop
lock
push
outsb
cs
push
lahf
xchg
iret
loopne
jecxz
adc
imul
cwtl
popa
sub
push
movsl
jo
xor
mov
lds
and
push
or
ss
bsr
insl
je
jge
popl
jno
pop
inc
fwait
scas
cmp
pop
pusha
inc
fstpt
push
cld
mov
enter
jnp
int
inc
and
sbb
add
cmp
mov
mov
outsb
rcl
dec
sub
adc
rclb
popa
pop
xor
push
jno
cmp
iret
mov
sbb
imul
fwait
mov
jbe
enter
cmp
xchg
sbb
outsb
pop
jecxz
pop
or
je
dec
mov
xchg
adc
lock
orl
dec
or
xor
or
add
mov
xchg
aaa
sbb
lods
insb
jno
or
mov
ljmp
mov
enter
cmp
mov
je
mov
cmp
xor
cmp
fcmove
lret
sub
mov
cmp
cli
adcb
and
out
sub
sti
in
cmp
jge
fisttpl
mov
test
xor
jnp
inc
xor
loope
adc
and
mov
inc
ret
or
lds
mov
xor
dec
mov
jl
dec
mull
mov
jge
aam
adc
loop
jp
pop
inc
jno
hlt
xor
xchg
mov
dec
xchg
pop
xor
xchg
std
rolb
sbb
cwtl
xor
scas
inc
call
insl
cltd
lret
adc
sub
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
xchg
dec
inc
inc
inc
push
xchg
dec
fdivs
adc
das
lcall
jge
jo
rcrl
adc
shll
xchg
insb
xchg
fsincos
fwait
push
pop
daa
adc
add
outsb
sbb
leave
int
fildl
sbb
cmc
sbb
mov
mov
ficoml
jge
jb
int3
test
push
loop
arpl
jecxz
jb
insl
jmp
pop
xor
mov
adc
aam
sti
and
js
test
shr
xor
and
push
fs
sub
dec
or
xchg
adc
nop
test
pushf
test
cmp
lret
mov
aaa
or
cmc
sbb
sub
shrb
dec
mov
xchg
dec
notb
or
adc
in
and
pop
loopne
bound
data16
and
icebp
clc
or
pop
das
ds
aad
dec
push
loopne
out
iret
fbstp
jecxz
jnp
mov
mov
mov
inc
mov
std
or
cmc
push
or
mov
daa
inc
ss
xor
and
add
je
adc
fcomps
mov
ficoms
icebp
insl
jmp
mov
cmp
cmp
lahf
jge
out
push
mov
test
sbb
daa
insl
mov
adc
xchg
movsb
xor
inc
fs
in
icebp
sbb
mov
pop
sub
mov
xchg
out
mov
pop
sub
jns
cmp
shrb
jmp
pop
icebp
sahf
cmc
testl
pop
jle
xor
mull
mov
inc
loopne
inc
mov
in
xor
pop
lock
cmpsb
jae
aad
jmp
mov
xchg
test
int3
mov
mov
jae
out
lds
sub
inc
mov
push
fcoms
ljmp
inc
xchg
in
add
sbb
subl
movsl
ljmp
fbld
lret
test
das
mov
sbb
jo
inc
jo
push
clc
mov
and
jg
sbb
push
mov
mov
push
adcl
inc
pop
push
pop
cmpsb
cmp
xchg
mov
pop
addr16
sub
jne
stos
shrl
rolb
gs
sbb
push
cmpsl
dec
mov
cmp
mov
push
xchg
push
inc
adc
in
loop
cltd
lods
jg
stos
adc
xchg
into
or
mov
sub
sbb
stos
pusha
repnz
stos
mov
jle
lahf
inc
out
ja
mov
divb
aaa
xchg
loop
xor
jmp
pop
push
mov
jge
sbb
pop
bound
outsb
mov
and
pushf
pop
xchg
adc
mov
sbb
insb
ss
sub
cmp
and
jle
inc
cmp
mov
mov
daa
push
loop
aam
or
imul
xchg
nop
lock
push
aad
add
repz
mov
pop
inc
jp
mov
fwait
lock
adc
out
jnp
enter
nop
rolb
jge
mov
pop
mov
mov
clc
fldl
jmp
dec
stos
xchg
loop
dec
sbb
push
and
xchg
jg
stos
push
pop
adc
cmp
dec
mov
cmpsb
cmp
in
jo
jbe
sahf
dec
scas
cltd
xchg
add
xchg
popf
jl,pn
jmp
jmp
sarb
nop
lock
pop
daa
hlt
imul
xchg
into
fcompl
in
jmp
les
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
lcall
out
ds
ss
mov
lahf
jge
jo
sub
and
jae
scas
mov
add
pop
insl
daa
mov
in
sbb
xchg
into
stos
or
push
or
pmulhuw
xchg
mov
adc
cmp
mov
loop
sub
adc
sbb
xchg
test
sbb
scas
adc
add
sbb
adc
jns
pusha
ljmp
fldt
mov
loopne
int
adc
jo
inc
or
sbb
fistl
push
mov
fidivl
mov
jg
mov
stos
mov
jl
cmp
gs
out
movsb
add
mov
subl
jge
xor
mov
and
sub
out
ss
icebp
push
inc
sub
testl
cmc
shrl
mov
and
jecxz
mov
lret
push
xchg
movsl
pushf
dec
xchg
les
sub
cli
jmp
cwtl
nop
out
scas
gs
cmc
rorb
inc
push
enter
frstor
movsl
aad
pusha
dec
push
jl
in
addr16
addr16
out
enter
call
orb
stos
xchg
lods
movsb
mov
add
dec
in
cmpb
cltd
mov
mov
shrb
out
adc
std
inc
nop
jnp
mov
cmpsb
mov
repz
xchg
adc
add
mov
in
jle
jl
mov
out
test
cwtl
lahf
loope
cmp
fisubrl
aam
adc
int
jge
mov
les
cmp
out
lret
mov
jne
pop
lock
inc
lods
mov
inc
popf
cmp
push
call
das
insb
push
add
hlt
fidivs
mov
ret
insl
jbe
mov
xchg
xchg
cmpsl
inc
inc
aas
pop
jbe
loop
dec
dec
sti
push
or
test
push
cmc
pop
pop
popf
fdivrp
push
jge
test
fldl
and
rolb
pmulhuw
insl
jl
popf
sub
adc
stc
call
daa
jb
mov
ret
pop
lret
jnp
cmpsb
icebp
xor
cmpb
dec
loopne
cld
mov
mov
jbe
adc
stc
dec
loope
jmp
push
dec
mov
inc
xchg
or
xchg
jg
mov
mov
xor
popa
pop
dec
xchg
or
hlt
mov
mov
imul
sbb
mov
icebp
dec
sub
push
add
add
xorb
fistpl
adc
or
mov
mov
pusha
popa
adc
sbb
mov
pop
and
push
enter
lea
xchg
out
push
pop
and
dec
out
jns
pop
push
int
call
dec
dec
cmp
fwait
into
push
mov
push
into
std
and
in
lds
ss
push
sbb
mov
aaa
cmp
sub
movsb
pop
dec
lods
lcall
jns
test
inc
or
inc
repnz
adc
iret
lock
xchg
out
fsts
aad
mov
shll
sub
cmp
sti
lcall
in
adc
bound
sub
int3
push
mov
cmp
add
das
popf
xor
in
xor
lea
mov
xchg
add
rolb
push
in
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xchg
dec
push
adc
push
xchg
dec
lock
pop
hlt
aaa
data16
mov
lahf
jge
jo
mov
xor
mov
adc
loop
scas
out
adcl
cmp
loopne
sub
add
rorl
ret
out
insb
mov
mulb
arpl
mov
push
aad
rol
flds
fsubl
dec
out
jnp
cmpsl
ljmp
insl
sti
pop
popf
sti
filds
xchg
jbe
mov
sub
es
mov
inc
pop
test
adc
enter
fsubs
repnz
sbb
loope
clc
xor
xchg
rcrl
cmovge
bound
jmp
inc
xor
scas
cmp
pop
inc
aad
mov
and
xchg
mov
cmc
lahf
mov
adc
or
or
push
adc
iret
mov
popf
xor
out
pop
sbb
les
in
dec
xor
jmp
in
mov
push
and
or
bound
add
sub
call
repnz
and
pop
test
xor
out
lds
mov
sub
arpl
mov
popa
jmp
push
outsl
enter
xchg
lds
lret
into
push
jle
jne
fs
jmp
insb
into
cmp
into
sub
inc
aas
xchg
push
add
adc
ljmp
mov
adc
loope
mov
aam
dec
js
popa
pop
cli
mov
jae
adc
jmp
jp
jns
cwtl
add
imull
imul
or
out
js
or
xchg
adc
push
bound
rcr
inc
cmc
lods
pop
inc
iret
dec
addl
push
imul
icebp
aad
repz
mov
out
lcall
mov
mov
aam
add
incl
push
lret
scas
mov
sbb
jecxz
enter
sbb
dec
mov
or
out
xchg
imul
cmpsl
out
insb
push
les
xor
sbb
rcll
loopne
aam
and
popa
lock
lock
mov
push
or
add
das
test
or
arpl
inc
repnz
mov
mov
cmp
mov
add
adc
inc
cmp
sbb
pop
lds
fisttpl
lret
leave
repnz
sub
lea
adc
lret
movsb
pop
xchg
aad
mov
jnp
push
fidivl
pop
cmpsb
jno
sub
scas
aam
fs
xor
mov
sbb
jae
sti
in
adc
scas
pushf
rorl
xchg
push
mov
out
iret
dec
xor
daa
aaa
nop
sti
mov
jecxz
mov
std
outsb
data16
xorb
enter
jne
fistpl
or
push
jecxz
pop
cld
fs
push
repz
pop
xchg
repnz
jmp
sahf
mov
dec
jecxz
stos
nop
aad
xor
cmpl
jmp
or
jno
xchg
hlt
mov
mov
adc
mov
mov
jecxz
and
xlat
insb
imul
pop
push
fiadds
popf
or
dec
stc
repnz
pop
push
inc
sbb
or
out
xor
xor
jne
jmp
xchg
aad
mov
pop
icebp
and
dec
lods
adc
jge
xor
add
mov
mov
mov
mov
xor
jmp
sbb
pop
pop
pop
pop
sbb
adc
testb
jo
jge
jo
out
xchg
pop
jnp
inc
adc
sbb
repz
cld
push
rcll
sarl
sbb
movsb
rorl
arpl
jecxz
pop
jno
dec
cli
repz
out
sub
iret
sahf
js
outsl
mov
inc
cld
sub
iret
inc
add
push
pop
inc
xchg
hlt
in
aas
fmuls
mov
adc
xlat
hlt
je
and
dec
ja
dec
xchg
sbb
shll
mov
in
adc
push
xor
aam
pop
les
insl
dec
mov
inc
shll
push
and
jmp
or
dec
add
cmp
sbb
sub
and
and
cmp
push
sbb
xchg
mov
pushf
lods
or
rorb
cmc
dec
sbb
jb
rorl
dec
mov
pusha
push
sbb
lahf
mov
sub
iret
jb
out
xor
aaa
xchg
jp
ret
push
int3
test
scas
jne
test
mov
adc
add
js
sbb
arpl
sbb
test
test
orb
std
sahf
clc
aaa
mov
jae
mov
inc
xchg
rorb
inc
movsb
out
das
and
popa
dec
dec
das
inc
mov
cli
shr
loope
pop
addr16
dec
inc
push
adc
and
dec
inc
int3
das
test
out
jg
ret
or
cmp
cmc
ficoml
nop
xlat
sti
cmpsl
push
pop
test
xchg
sub
pop
mov
aas
mov
je
lods
out
or
leave
pop
insb
inc
push
xor
sub
push
roll
or
lods
ret
dec
out
jns
and
subl
add
jno
push
iret
mov
push
scas
aad
js
or
add
inc
pop
xor
into
mov
pushf
lahf
pop
loope
push
clc
les
int3
int
xchg
or
mov
mov
sub
push
subb
fs
jns
aad
mov
addr16
mov
je
and
xchg
add
inc
repz
ret
push
xchg
push
in
mov
and
mov
cmp
lret
out
out
and
xor
cli
ja
mov
jmp
es
sbb
dec
aad
add
add
stos
push
cmp
enter
cld
or
sbb
bnd
std
dec
es
movsb
js
int
std
ja
es
jbe
mov
call
stc
lods
jecxz
data16
ret
push
and
add
jmp
or
loop
xchg
pop
mov
push
addr16
lahf
inc
insb
lock
ja
imul
adc
mov
push
jl
dec
fsubs
mov
fdivl
add
mov
test
push
test
xchg
neg
inc
adc
push
push
add
jbe
outsl
mov
push
sbb
pop
rol
cmpsl
cltd
push
add
cmp
cmp
and
rorl
mov
addl
out
sub
pusha
in
ds
aaa
pop
adc
fstl
and
xor
cmp
call
jl
dec
dec
and
cmpsb
adc
adc
xchg
and
push
and
cltd
subb
jb
into
repnz
push
ja
fcomi
lods
mov
std
stos
ret
daa
dec
out
clc
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jmp
mov
popa
jbe
xchg
orl
jo
jge
jo
push
sbb
cmp
and
mov
sbb
ss
popf
ret
andl
push
or
fucomip
cltd
pop
sub
mov
jno
or
sub
lcall
inc
sub
dec
mov
scas
lahf
test
and
mov
sub
dec
aas
fcoms
xor
enter
or
mov
inc
lock
mov
movsb
push
cltd
sahf
push
xchg
cmp
push
pop
xchg
sub
inc
adc
sbb
in
sub
or
push
ret
lea
fadds
ljmp
push
movsb
and
mov
xor
jne
fs
call
subl
dec
popf
repnz
dec
push
fs
in
repz
ds
adc
jg
lds
cmp
push
orb
adc
orb
push
iret
int
or
dec
scas
and
movsb
cmp
in
ret
or
jg
iret
ror
sti
xor
cltd
sub
push
pop
jge
lret
call
outsl
add
mov
xor
enter
aad
pop
pushw
sub
mov
pop
add
movsl
insl
adc
sarl
xchg
lret
jge
and
mov
mov
xor
pop
inc
mov
outsb
daa
dec
lds
imul
loope
push
lahf
pop
adc
adc
xchg
shll
cmpl
sub
jl
outsb
or
add
lret
out
sub
push
loopne
popf
adc
mov
push
aam
cmpsb
fcmovne
call
xor
stc
or
cli
sub
add
das
jae
jge
in
cmp
mov
fsqrt
ret
pop
xlat
das
out
xchg
imul
fsubl
clc
inc
adc
into
or
jno
dec
rcr
lds
jbe
je
add
je
xchg
into
and
cmpsb
mov
stos
dec
mov
rorl
xchg
das
mov
inc
mov
inc
jge
test
scas
dec
in
in
push
cwtl
jb
out
jmp
pop
iret
rclb
mov
iret
mov
push
sahf
pop
je
ret
mov
and
je
lods
cmpsb
inc
jnp
mov
pop
push
lcall
and
jo
loopne
test
or
aas
ljmp
int3
mov
cmp
ds
jns
orl
xchg
jo
les
shrl
inc
adc
outsl
mov
ret
push
mov
xchg
lods
inc
pop
adc
lds
pusha
rorb
dec
fisttps
sub
lock
int3
arpl
jle
sbb
aaa
into
xchg
pop
adc
xor
mov
sbb
ja
call
lds
les
push
hlt
sbb
dec
jnp
push
mov
mov
push
std
push
dec
xchg
push
cs
int3
scas
inc
dec
fsubr
test
or
js
xor
xchg
add
and
or
jmp
xchg
roll
jae
mov
and
sbb
jmp
mov
jecxz
add
mov
mov
lods
mov
mov
ds
repz
mov
stos
sbb
xchg
shlb
out
stc
stos
in
leave
in
jbe
mov
mov
xor
add
imul
mov
xor
add
jmp
xor
out
icebp
xor
cmp
lods
les
fwait
cmp
popf
jo
lahf
jge
jo
hlt
lea
inc
adc
clc
adc
sub
movl
js
dec
pusha
cwtl
aas
cmp
xor
cmpsl
test
pop
adc
stos
mov
cmp
hlt
lea
outsl
mov
imul
sarb
shr
and
dec
in
pop
sub
mov
push
into
push
rcrb
jecxz
mov
int
sbb
or
ss
test
imul
popa
pop
xor
jle
jns
xchg
pushf
call
das
sti
das
mov
aaa
mov
xor
jl
sub
not
roll
fs
outsb
popf
add
nop
xor
rcrl
mov
and
aaa
into
rcll
dec
push
popa
or
pop
roll
fistps
arpl
bound
pop
nop
adc
fistpll
mov
ficoml
adc
shrl
shll
adc
adc
cli
int
inc
subb
cmpsl
addr16
dec
jo
aad
repz
mov
iret
lcall
incb
inc
daa
push
fnstenv
ds
lds
pop
jp
pop
adc
fisubs
push
jl
adc
xchg
pop
sbb
mov
pop
shlb
xor
fisttps
lods
lret
sahf
nop
jp
enter
add
jle
out
xchg
jne
push
mov
push
out
mov
xchg
std
cmpl
jns
push
fnstenv
out
sub
push
adc
mov
icebp
push
lret
push
aas
sbb
add
and
std
pushf
fistps
jbe
or
cmp
lock
mov
sarb
stos
mov
cmp
repnz
mov
mov
pop
push
sub
mov
push
pop
repnz
add
int3
xchg
das
les
pop
aaa
dec
andl
leave
pop
xor
cmp
fldenv
gs
movsl
out
sarl
cs
or
shll
call
and
test
adc
gs
jmp
pop
push
xchg
scas
cli
inc
in
or
push
rolb
nop
scas
mov
lods
jle
jo
mov
mov
adc
shlb
scas
ficomps
insb
insl
leave
insl
jge
mov
or
xor
mov
enter
cld
repnz
mov
dec
filds
daa
jle
pop
clc
movsb
cmp
dec
popa
jo
mov
aam
jmp
sub
adc
js
dec
xor
xor
fldl
and
insl
stos
cmp
and
push
dec
lret
fiadds
push
pop
in
xchg
cld
inc
push
or
mov
fstl
cmpsb
sti
fisttps
dec
fmul
inc
inc
test
movsl
and
push
xlat
in
and
push
sahf
inc
jecxz
ret
mov
orb
mov
lds
add
inc
das
bnd
mov
push
cmp
sub
sbb
bound
scas
xlat
sahf
jne
lods
dec
pop
mov
bound
fs
mov
repnz
push
inc
test
fs
insl
popf
test
pop
push
test
add
push
call
popf
xchg
outsb
mov
inc
jmp
in
out
jge
lea
mov
mov
xor
mov
sub
jmp
out
inc
push
jno
ljmp
je
mov
cltd
jo
lahf
jge
jo
sbb
rol
jno
xor
int3
mov
mov
scas
add
push
or
ret
inc
into
rcrl
lods
mov
xchg
inc
add
pop
pusha
jecxz
cmpsl
push
jbe
fidivs
sbb
pop
adc
ljmp
mov
aas
arpl
mov
lcall
mov
bnd
ss
mov
mov
faddl
mov
sub
icebp
xchg
ja
dec
fisubrs
xchg
or
mov
dec
dec
xor
mov
or
pop
sub
fwait
inc
xchg
inc
lret
dec
xor
add
loope
adc
invd
sbb
icebp
cwtl
adc
xchg
pusha
push
pusha
sub
jge
and
xchg
inc
in
outsb
mov
outsb
aas
cs
fcmovnb
gs
mov
cmp
stc
scas
push
mov
push
and
jb
jo
jns
lret
lret
mov
mov
or
push
mov
jbe
xchg
in
sbb
mov
mov
stos
fs
daa
mov
mov
cmp
cld
cli
xlat
mov
fstpt
xchg
in
and
leave
push
xor
out
fcmovb
pop
adc
mov
push
mov
cmc
jns
es
cmp
mov
push
xorb
lcall
push
cmp
stos
sti
fs
into
hlt
hlt
and
cmpsl
out
shlb
cwtl
fcoms
scas
adc
push
xor
shrb
je
jnp
negb
cld
or
fsubr
ljmp
je
lods
mov
insl
push
lds
cmp
mov
fcmovnu
and
or
add
call
dec
mov
adc
and
out
cld
sub
out
xchg
lcall
mov
xlat
popf
and
dec
inc
addr16
movsb
mov
ljmp
fiaddl
inc
inc
dec
jbe
xorl
das
sbb
pop
aam
imul
fs
mov
loopne
xchg
jg
pop
cmpsb
test
scas
dec
fisttpl
inc
imul
adc
mov
in
sbb
das
jecxz
sbb
out
mov
scas
into
insl
scas
movsl
or
dec
sub
add
and
xor
rep
pop
test
cmpsl
xor
xchg
dec
setb
loopne
imul
test
mov
inc
cltd
imul
xchg
loope
inc
mov
xchg
inc
jmp
dec
lds
insb
imul
clc
das
dec
pusha
push
adc
fcoms
mov
sbb
test
fstl
addl
cmp
mov
push
test
mov
push
jp
jno
pop
cmp
mov
inc
mov
negl
mov
xchg
in
dec
or
js
bound
mov
hlt
pop
xlat
mov
push
fs
pop
mov
iret
push
jne
cmp
loope
fbstp
sub
cmp
in
mov
jmp
cmp
in
mov
adc
jae
leave
insb
popa
bnd
faddp
cmpsl
sti
rcll
fs
aaa
push
dec
or
sbb
inc
inc
jns
shlb
pop
push
cmpsb
mov
aas
movsb
mov
rcr
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
orl
push
sbbl
call
andl
test
jne
xor
movl
jmp
adcl
push
call
sbbl
test
movl
je
call
cltd
movl
cmp
jne
movl
cmp
jne
push
push
adcl
push
push
push
push
push
xorl
push
orl
call
movl
jmp
push
call
test
je
sbbl
push
andl
call
movl
jmp
push
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
movl
lea
adc
mov
adcl
lea
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
or
mov
or
mov
mov
push
mov
subl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
jmp
mov
add
mov
mov
mov
movl
cmp
mov
movl
je
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
xor
andl
add
imul
mov
movl
jmp
sbb
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
or
xor
sub
add
mov
mov
mov
xor
add
movl
cmp
jne
subl
pushl
andl
pushl
adcl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
adc
mov
mov
xorl
push
push
mov
xor
not
push
mov
add
sbb
jmp
sub
gs
mov
fstps
notl
ret
jg
jo
sti
mov
sbb
pop
inc
dec
xlat
xchg
adc
xor
mov
push
lods
add
adc
inc
fwait
lds
dec
jmp
shlb
lret
sahf
xor
scas
pop
scas
push
inc
dec
fstps
sub
movsb
adc
stc
mov
rcrb
xor
addb
pop
pushf
jle
xchg
adc
and
pop
cmpsb
sarb
lcall
ss
fwait
mov
aaa
inc
xor
in
icebp
sbb
les
enter
in
cmpl
xchg
std
arpl
cmpb
add
push
or
cmc
pop
in
testb
mov
pushf
fs
lods
out
mov
cltd
leave
mov
mov
ljmp
mov
sbb
dec
lods
add
adc
sbb
jge
enter
push
or
inc
mov
dec
test
in
ja
hlt
adc
jno
adc
push
pop
pusha
shlb
adc
fcmovbe
or
pop
and
clc
fnstcw
push
push
iret
aas
sbb
inc
mov
jle
pusha
dec
pop
aaa
xchg
xchg
mov
jmp
lock
mov
bound
aaa
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
imul
mov
sub
mov
and
mov
sbb
xor
add
mov
jmp
icebp
ja
pop
inc
scas
icebp
jno
push
inc
movsl
push
ficompl
cmp
jo
mov
xchg
push
xchg
orb
or
xor
test
in
xlat
and
inc
mov
xlat
xorb
sarb
xor
inc
sti
push
xchg
les
adc
arpl
push
ss
ret
add
js
ja
sbb
loop
dec
dec
sub
inc
imul
mov
fldl
popa
aad
inc
mov
pusha
inc
dec
inc
push
stc
mov
add
pusha
rcr
mov
inc
dec
jne
ret
or
int
scas
fsubrp
inc
popf
jno
xor
jecxz
lds
js
in
xchg
lea
sbb
lret
in
jne
add
cmpsb
ja
jecxz
in
push
cmp
or
hlt
aad
or
inc
mov
and
clc
mov
std
fcompl
mov
test
jmp
inc
xchg
rcrb
scas
adc
mov
xchg
xchg
fwait
and
mov
push
dec
imul
inc
sub
in
std
push
pop
mov
sti
loop
cld
sbb
pop
inc
adc
adcl
mov
or
iret
add
mov
inc
dec
inc
rcrl
ja
inc
call
and
lea
mov
jmp
rorl
sbb
add
mov
jo
jae
push
sbb
jne
xchg
sub
jno
lret
sub
add
adc
xlat
sub
pop
in
orl
xor
pop
sub
fistps
mov
pusha
add
int
jmp
lret
in
adc
adcl
daa
sti
adc
popl
jbe
ret
and
mov
and
push
cwtl
lock
test
rcl
stos
in
jmp
xchg
out
jbe
and
imul
arpl
insl
insb
adc
stc
mov
adc
dec
jmp
jecxz
imul
push
xor
mov
jg
push
inc
mov
and
int
loope
xchg
in
rolb
adc
mov
mov
cmp
sub
nop
test
push
vpaddq
or
int
dec
clc
sbb
inc
xor
pop
jge
fwait
mov
fdivrs
shrl
mov
mov
cld
and
mov
idivb
ret
loope
add
repz
inc
mov
xchg
mov
lcall
push
aad
jae
inc
call
inc
add
add
add
or
sbb
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
neg
mov
add
xor
add
sub
mov
mov
adc
mov
mov
adcl
jmp
cmp
in
fcomi
jecxz
icebp
xor
iret
cmpsb
sbb
mov
jo
insl
cs
lea
lock
or
xchg
or
jecxz
nop
push
push
and
mov
lods
sbb
dec
xchg
mov
dec
cli
insb
lahf
pop
shl
test
enter
ja
in
inc
stos
pop
lcall
aam
popf
sub
dec
cld
negl
rcrl
idivl
push
jb
fstl
repz
adc
popf
hlt
jecxz
xchg
mov
mov
push
add
cli
roll
push
push
sbb
push
mov
xor
mov
xchg
paddb
jecxz
xlat
or
mov
orb
clc
push
lods
pop
jmp
mov
and
popf
ficoml
sbb
mov
jg
jg
lods
xchg
adc
dec
push
mov
mov
dec
jp
sub
sub
sub
xchg
or
push
fildl
mov
add
cmp
push
mov
je
scas
js
mov
pop
cli
in
jne
shl
sbb
imul
ret
cmp
xchg
cwtl
fadd
call
lret
and
loop
mov
xchg
call
adc
mov
adcl
mov
xorl
movzwl
add
neg
movl
sbb
mov
mov
sbb
mov
xorl
xor
andl
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movzbl
adc
mov
xorl
mov
andl
xor
notl
add
movl
cmp
movl
jmp
fistpl
shlb
hlt
mov
jo
jg
jo
arpl
push
test
sub
notl
ss
push
mov
mov
sbb
xchg
cmp
punpckhwd
sbb
sub
and
dec
xchg
fbld
cld
fwait
push
cmp
lret
inc
hlt
int3
out
mov
inc
push
outsl
mov
out
mov
mov
mov
xchg
jnp
dec
xchg
and
mov
in
add
sahf
sti
in
imul
xchg
lock
nop
or
cmp
pop
inc
mov
xchg
imul
test
mov
xchg
and
xchg
xlat
repz
clc
xlat
stos
mov
test
inc
fbld
leave
cmp
addl
fisttpll
pop
jae
jb
popa
rorb
mov
stc
out
add
mov
jmp
xchg
push
mov
loop
nop
jmp
std
rcll
adc
pushf
aas
mov
mov
mov
cwtl
dec
add
ret
icebp
es
jne
insl
clc
rcrb
push
icebp
lds
scas
test
fidivrs
icebp
mov
xlat
outsl
mov
inc
xchg
pop
cmp
mov
lcall
add
stos
fildl
add
add
mov
sbb
mov
adc
xor
add
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
jmp
or
shrb
mov
inc
pop
mov
xchg
mov
jo
jg
jo
mov
sub
push
mov
push
loope
mov
incl
mov
xlat
cmp
or
mov
dec
cmp
gs
fnstsw
popa
add
mov
imul
ss
sbb
mov
sar
dec
shl
jno
and
es
inc
js
test
lahf
mov
xchg
and
mov
jge
decb
sub
jge
push
lret
push
in
mov
mov
cmp
pop
pop
out
repz
pop
sub
pop
dec
subb
decl
or
outsb
mov
fcoml
cltd
jno
fsubl
pop
dec
les
cmp
push
push
out
or
in
xor
sbb
adc
shl
mov
out
xor
cmp
in
xor
mov
dec
push
fucompp
lods
repz
sar
mov
lods
xor
lahf
jmp
pop
dec
mov
mov
jb
mov
je
push
xchg
outsl
mov
sbb
ret
adc
mov
loopne
add
mov
aam
sbb
xor
push
jno
xchg
mov
mov
jmp
cmp
mov
movzwl
jmp
movntps
push
rep
mov
push
jle
xor
mov
jg
jo
or
repnz
dec
movsb
push
jg
rorb
jge
int3
popa
sub
xlat
mov
dec
mov
jle
dec
test
dec
fistpll
and
xchg
outsl
ja
add
stc
lea
ds
cmp
mov
pop
loope
sub
push
test
pop
ja
loope
mov
aaa
inc
out
fdivrs
jle
sbb
add
cmp
fisubl
and
push
mov
outsb
outsl
mov
repz
add
hlt
fnstenv
or
stos
cmpsb
adc
mov
cmp
sbb
aad
xor
xor
sbb
xchg
inc
or
cmc
xchg
jnp
add
stc
mov
fimull
jns
inc
sub
test
stos
or
push
in
out
nop
subb
addr16
test
mov
out
push
loop
fisttpll
sub
xchg
add
arpl
sub
bt
dec
cmp
mov
push
adc
jno
addr16
or
ja
jge
scas
es
and
xchg
cld
inc
aas
das
dec
pop
lea
xchg
or
push
cmc
sub
jnp
push
and
sti
sti
push
loop
cs
sbb
jge
sti
enter
xor
jns
add
xor
sub
sub
mov
jmp
jmp
int3
push
icebp
xchg
icebp
je
in
pop
mov
les
pop
or
jg
jo
es
add
or
pop
lret
lods
xor
cmp
mov
aas
leave
lahf
xor
lret
leave
push
imul
jmp
mov
cmp
imul
inc
cmp
iret
popf
jne
call
sub
lret
sbb
int
xchg
and
cmp
rol
clc
fwait
stc
mov
jne
jmp
inc
xchg
lcall
mov
mov
sbb
and
mov
les
inc
rorl
jg
mov
imul
int
sub
ljmp
fstps
outsl
lahf
xchg
lods
ljmp
inc
lahf
movsl
aam
xor
jp
push
add
inc
push
lock
movsl
ljmp
in
es
loop
or
mov
loop
pop
cs
leave
psubsb
test
add
pop
xchg
aad
scas
add
loope
sbb
push
and
mov
push
or
loop
popf
cltd
lds
sahf
hlt
lret
aam
pop
adc
inc
and
and
mov
out
popf
pusha
iret
ds
xchg
fadds
pushf
cmc
movsl
out
adc
mov
loop
xor
rclb
or
inc
cld
mov
cmp
jmp
mov
enter
lea
leave
inc
inc
inc
mov
jo
jg
jo
fldcw
rcll
pusha
outsb
popf
addr16
repz
lahf
pop
repz
xchg
fbstp
ljmp
movsl
jb
jo
push
add
cmp
aas
ja
clc
mov
sub
not
xchg
jae
scas
clc
mull
iret
sbb
mov
cmpsl
scas
adc
imul
arpl
adc
sbb
jb
loopne
mov
cmp
inc
es
shlb
xor
mov
add
aad
push
addr16
and
xor
fldenv
jl
test
int3
adc
sbb
jns
jle
cmp
dec
or
cmp
inc
sbb
gs
pop
ret
aaa
adc
inc
into
dec
lods
mov
pop
loope
inc
imul
mov
lods
mov
push
jne
cmp
sbb
jl
dec
sbb
test
lahf
cmp
jle
mov
cmc
stc
std
mov
nop
subb
loopne
or
fdiv
repz
bound
or
in
jecxz
push
stos
mov
fwait
je
xor
xor
mov
sub
iret
push
int3
mov
jns
outsl
push
hlt
mov
mov
add
test
add
mov
jmp
lods
ret
jno
insl
popa
fdivrs
xchg
test
stos
jo
ret
jg
jo
pop
nop
shlb
jnp
mov
xchg
stos
jnp
lods
outsb
dec
inc
and
popf
mov
rcrb
rcrb
mov
imul
ja
pop
hlt
jmp
xor
sbb
mov
pop
out
mov
js
adc
sbb
insl
mov
loopne
lock
popf
push
pop
stc
sbb
add
xor
cmpsb
nop
cmp
sub
rclb
lds
sub
negb
xor
mov
push
inc
mov
jge
mov
jbe
sti
and
push
scas
incl
xor
je
xor
jecxz
outsl
rcl
adc
xchg
push
mov
cltd
xor
addb
xchg
or
adc
mov
stc
push
fdivr
jns
push
add
add
lahf
mov
je
outsb
add
adc
aam
subl
push
mov
or
add
add
pop
ds
cmpsb
xchg
xchg
xor
mov
adc
sub
imul
push
cmpl
lahf
xchg
movsb
loop
add
sub
mov
insl
imul
add
in
add
mov
mov
xor
add
cmp
je
mov
jmp
dec
int3
cmp
mov
add
rclb
iret
add
test
jo
jb
mov
cmpsl
mov
pop
cli
add
push
cmp
loop
inc
mov
jl
dec
push
loop
loope
jge
scas
lcall
jg
outsb
ficompl
jl
mov
pop
push
ds
cmp
xor
adc
sbb
aaa
stc
adc
mov
mov
jge
sub
fldenv
mov
push
cmp
lret
mov
out
mov
rcl
inc
mov
mov
jmp
sbb
aaa
push
push
out
lret
push
pusha
jb
cmp
fsubrl
mov
push
cmp
xlat
jb
sahf
loop
out
and
movsb
mov
rorb
or
sbb
pop
into
jns
push
ljmp
in
mov
outsb
mov
push
loope
fisttpl
stc
lds
xor
add
jno
dec
ds
lcall
mov
jp
shl
shlb
add
push
dec
mov
inc
xor
xchg
xchg
and
pop
lcall
imul
push
inc
mov
pop
or
xor
imulb
jl
sahf
shlb
jnp
pop
es
das
call
mov
mov
loopne
mov
add
add
ror
icebp
imul
xor
add
cmp
jo
shl
repz
sahf
test
sbb
aam
and
repnz
outsb
inc
aaa
mov
add
xchg
sbb
inc
rcr
es
mov
sbb
mov
pop
pusha
into
pop
sbb
pop
idiv
xor
mov
push
add
mov
lods
rcll
cmpsl
jnp
cwtl
adc
bnd
inc
mov
mov
push
pop
and
mov
jecxz
int
inc
adc
cs
inc
dec
mov
repz
cwtl
in
adc
inc
stc
push
adc
sti
jne
lds
mov
mov
es
and
xor
xchg
aas
outsb
mov
cmpsb
xor
insb
mov
xchg
xor
push
adc
cld
addr16
push
or
filds
inc
rcrl
gs
ljmp
pop
lea
test
fdivrl
call
inc
mov
out
sti
scas
cs
lods
and
inc
xor
jb
adc
lret
jge
mov
lock
push
or
in
mov
pop
sub
pop
es
out
jb
jle
add
int
add
add
rorl
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
jmp
pop
out
dec
mov
mov
testb
dec
cmp
mov
jo
jg
jo
imul
aam
push
and
and
into
cmp
mov
sub
and
sub
jl
and
xor
jecxz
ret
add
test
push
and
icebp
in
cmp
jnp
cmp
mov
dec
sub
roll
add
aaa
and
xor
into
sbb
repz
movsl
adc
mov
test
cmp
and
push
adc
jns
xchg
cmp
add
cwtl
cmp
xor
mov
imul
jecxz
cwtl
add
jns
push
xor
sbb
inc
pop
adc
int3
in
mov
dec
push
icebp
ret
push
jge
dec
and
push
mov
sbbl
fidivs
andb
mov
adc
sub
add
lret
leave
lahf
or
xor
mov
sub
lret
and
dec
mov
mov
mov
inc
pusha
lret
jbe
sarl
insl
and
inc
fisttpll
pop
xchg
data16
dec
inc
aad
in
ficoml
out
scas
rcrb
call
pop
ret
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
ds
adc
dec
xor
cltd
test
mov
jo
jge
jo
dec
cmp
divl
movsb
inc
mov
pop
je
es
xor
dec
leave
sub
out
add
shr
pop
jbe
pop
xor
mov
push
cmp
je
nop
mov
ret
loop
in
mov
popa
xchg
jecxz
inc
xchg
sbb
subb
repz
sbb
stc
push
xlat
cmp
mov
rorb
lods
cmp
mov
mov
ds
pusha
inc
ss
test
int
jnp
pop
test
jbe
lret
push
fisubl
sbb
mov
mov
stos
lcall
sub
lods
mov
movsb
push
sbb
out
pop
outsb
in
mov
not
movsb
jle,pn
aaa
pop
cltd
mov
mov
add
cli
mov
add
cmc
dec
mov
bnd
mov
mov
insb
jo
cmp
adc
aas
jecxz
xchg
inc
into
outsb
mov
movsb
jge
stos
mov
or
pop
addr16
fiaddl
out
mov
sbb
gs
xor
xlat
inc
pop
fwait
and
ds
dec
fidivs
js
lcall
out
inc
repz
adc
js
gs
pop
fs
mov
fsubr
repz
cli
mov
mov
or
repz
adc
mov
inc
push
pushf
mov
into
test
imul
or
insb
pushl
push
xchg
dec
sbb
stos
fdivl
push
repnz
jle
lea
push
fmulp
fistps
daa
loop
pop
ss
sub
ret
test
addr16
inc
mov
cmc
or
dec
push
xor
notl
mov
and
push
xchg
mov
inc
dec
adc
pop
sub
ss
jle
lods
les
out
cmp
ljmp
mov
adc
xor
pop
sub
div
push
sbb
mov
das
ror
add
fnstenv
mov
popf
sbb
lcall
mov
outsl
ret
mov
ja
adc
in
inc
sub
push
in
push
stc
lcall
pushf
cmp
mov
ficoml
mov
leave
add
outsl
test
jns
pushf
inc
in
push
sub
fnstenv
fbstp
test
repnz
cmc
mov
fldenv
sub
jecxz
add
push
jb
repz
int3
mov
stc
adc
inc
jbe
inc
mov
pop
outsb
shrb
sbb
mov
das
dec
or
mov
test
sbb
jns
les
into
out
std
sbb
add
jns
dec
adc
mov
push
lods
mov
jmp
add
xor
das
pop
out
pop
test
mov
inc
adc
sub
leave
mov
call
adc
daa
out
cmp
jl
xor
mov
mov
jbe
inc
dec
gs
and
xchg
incl
lock
test
popf
std
mov
lahf
inc
jnp
incb
mov
fnstsw
sahf
inc
sub
divb
dec
movsl
mov
popf
imul
insl
stos
jb
subl
std
div
test
sub
nop
loopne
imul
cli
pop
divb
push
xchg
adc
push
negl
jmp
mov
cli
xor
testb
ja
sbb
jge
jo
push
mov
stos
xor
testl
leave
lods
and
push
and
push
cmpsb
jb
mov
test
je
mov
adc
inc
xchg
jge
jno
jbe
in
pop
out
jbe
dec
call
adc
fists
cli
aad
out
pop
sbb
push
data16
sbb
adc
stc
insb
incb
pop
pop
out
or
mov
add
das
dec
and
mov
mov
out
repz
push
push
xlat
fmull
insl
adc
xlat
or
xlat
and
add
dec
xchg
enter
xor
adc
xchg
sub
sub
repz
adc
cld
in
xor
stc
out
mov
push
movsl
adc
mov
and
cltd
push
ja
sbb
int3
lock
cs
stos
dec
and
aaa
in
dec
lods
inc
mov
mov
mov
lret
sahf
sub
addb
inc
jae
push
mov
outsl
and
adc
mov
push
pop
dec
mov
leave
iret
popf
sahf
lret
mov
pusha
testl
std
ds
add
xor
sub
ss
aam
xchg
or
cmc
bound
push
or
xchg
mov
xor
pop
push
mov
push
and
inc
and
mov
in
xchg
fldcw
aam
dec
pop
cmpsb
and
pushf
mov
push
mov
mov
add
mov
movl
je
adc
and
ret
mov
clc
xor
dec
and
nop
adc
insb
mov
stos
push
fwait
enter
jb
inc
xchg
push
jbe
cltd
std
mov
jle
popf
ret
bound
xor
fpatan
xor
bound
adc
jge
pop
push
jl
insl
iret
mov
adc
fsubrl
and
daa
je
cld
aad
popf
cmp
add
jmp
jo
push
and
jge
test
ja
dec
jnp
push
mov
inc
inc
jne
cmp
orl
cs
loop
mov
into
mov
outsb
cld
arpl
test
roll
bnd
pop
scas
push
fxch
lds
mull
aam
sbb
mov
sub
out
fmul
mov
xchg
enter
push
mov
loopne
and
fiadds
push
xchg
jns
sbb
leave
ja
shl
sti
call
lret
cli
adc
fisubrl
shr
jge
dec
dec
jno
rorb
loopne
mov
mov
mov
xor
xchg
mov
push
mov
sub
push
repnz
jae
cli
daa
sbb
adc
mov
xor
fiaddl
xchg
push
push
fnstenv
inc
es
aas
push
add
lock
bound
jo
movsb
xchg
push
ds
ja
lea
scas
js
stos
cmc
ja
rcl
jle
pop
stc
rcr
inc
popl
sahf
in
cmp
pop
xchg
sti
dec
xor
in
mov
dec
fbstp
loopne
fisubl
das
daa
fimull
xor
mov
sbb
or
cld
xor
or
loop
add
cmp
add
xorl
xor
movl
cmp
jne
mov
mov
and
mov
mov
movl
add
mov
jmp
fcmovnbe
aam
repz
push
jae
ds
insb
xor
jge
jo
xchg
mov
hlt
cmp
jne
lret
and
repz
sub
test
and
sarb
jmp
je
inc
arpl
aad
dec
and
adc
sbb
cmp
rol
pop
test
mov
push
cmpl
lret
adcl
mov
roll
jb
or
cmp
cmpsb
lock
mov
sub
ljmp
xchg
mov
loopne
out
mov
xchg
fmuls
mov
ficompl
or
aad
jo
ret
cmp
scas
lods
sub
xchg
imul
and
and
dec
insb
and
adc
jae
pop
in
dec
sub
out
mov
pop
pop
shlb
add
sbb
in
std
call
sbb
mov
adcb
mov
sarl
xchg
pop
bound
mov
pop
fldcw
je
add
shr
pop
ret
pop
add
sahf
sahf
cltd
jb
js
fs
cmp
jae
jb
xor
out
sub
xor
in
jp
jecxz
out
and
in
out
movb
scas
cwtl
cmpb
in
pop
inc
mov
mov
scas
sub
ret
mov
aam
sub
cmpsl
fdivl
cltd
xchg
or
scas
sbb
pop
in
repz
xor
and
ljmp
or
add
jp
jnp
je
aas
rcrb
push
fists
adc
cmp
into
lds
pop
lcall
fucomi
mov
and
std
cmpl
bound
aad
sub
adc
sbb
inc
pop
shlb
adc
cmp
mov
imul
sub
mov
xor
jecxz
mov
or
mov
pop
adc
iret
xor
daa
xchg
out
mov
and
std
xchg
xlat
inc
push
push
stos
sbb
stos
inc
into
push
fs
aad
loope
dec
inc
sub
or
xchg
fdivr
sahf
pop
cmp
cmp
mov
std
loop
sti
imul
imul
mov
dec
mov
push
stc
roll
das
or
dec
sub
cmp
xchg
mov
push
test
push
pop
aaa
dec
jo
dec
mov
adc
lret
orb
xorl
jmp
sbb
mov
xchg
nop
repz
pop
adcl
int3
push
ss
pusha
add
add
in
scas
dec
jbe
pop
mov
and
dec
inc
cmp
outsl
pushw
cmp
aad
aaa
jmp
dec
or
or
jl
out
aam
jne
leave
add
mov
sahf
fcomi
jbe
add
adcb
cltd
xlat
and
add
inc
aad
or
push
sti
test
test
inc
loope
mov
xlat
test
gs
sti
pop
mov
leave
nop
rclb
xchg
fwait
inc
add
mov
fsub
push
cmp
in
push
fisttps
test
popf
adc
jne
mov
pop
ficompl
dec
mov
mov
xor
push
mov
mov
es
test
int3
scas
fisttps
xor
enter
cmc
and
mov
add
mov
mov
add
mov
xor
sub
push
sbb
jmp
lods
das
mov
mov
lcall
pop
mov
jo
sar
jge
lret
jle
call
mov
gs
aad
dec
cwtl
mov
out
jecxz
arpl
sarb
dec
jecxz
loop
pop
dec
leave
in
gs
jp
repnz
sbb
js
fsubrl
fiaddl
mov
fwait
into
mov
push
dec
dec
roll
out
fsub
mov
xchg
or
aad
and
add
push
xor
jb
sub
sbb
movsl
dec
pop
ljmp
cmpsb
or
mul
in
push
pushl
test
js
adc
and
aaa
rclb
push
mov
cltd
or
cmp
adc
sub
call
mov
jnp
sub
jle
push
movsl
out
ret
sbb
out
aaa
int
out
test
inc
movb
mov
sahf
push
and
popf
cld
aad
stos
bound
push
ret
shll
dec
push
adc
add
mov
mov
ljmp
sub
pop
roll
jle
adc
loopne
inc
dec
popf
arpl
into
push
or
aaa
and
xor
sbb
push
dec
in
adcb
shlb
sarl
loopne
hlt
dec
mov
and
sahf
mov
out
in
and
mov
test
cmc
push
enter
push
aad
sar
aad
pushf
add
hlt
push
int3
mov
push
pop
xchg
stos
mov
sbb
mov
test
xchg
rcl
or
mov
lret
imul
mov
dec
and
inc
je
xchg
dec
push
cltd
cltd
cmc
out
ret
dec
mov
inc
fistpll
cmp
jns
mov
inc
std
adc
mov
xlat
mov
mov
test
adc
pop
sti
scas
rorl
sub
and
cmp
ret
xlat
loop
into
pop
test
cld
or
pop
inc
jnp
jmp
add
pop
test
lods
jmp
popa
mov
hlt
notl
ret
push
fisubrl
cmp
dec
jg
sbb
lods
pop
out
push
push
pop
fdivs
repnz
and
cmp
push
fxch
push
push
ds
sub
lea
mov
push
push
xchg
pushf
jg
mov
into
aaa
call
cmp
test
sub
lock
cs
movsb
jle
scas
mov
adc
lcall
push
shl
push
pusha
push
mov
sti
push
out
in
cmpsl
push
cmpsb
int
add
imul
or
std
stos
shlb
rorl
daa
inc
inc
jmp
mov
sub
fistpl
lahf
fimuls
test
test
popf
lods
lret
sbb
xor
push
jge
cmp
test
push
es
sbb
fwait
pop
adc
sub
lahf
lcall
mov
cmp
das
mov
je
pop
xchg
movzwl
or
cmp
xchg
ret
add
pushw
nop
mov
cld
cmp
loopne
xor
pop
mov
adc
push
addr16
mov
jno
sahf
insl
call
test
cmpsb
dec
clc
in
jg
xor
push
cmc
out
xor
js
xchg
fmull
dec
subb
ficompl
xor
sbb
and
push
cmp
mov
lcall
cmc
outsb
push
movsl
pop
lcall
jp
and
mov
mov
xchg
pop
inc
sbb
rcrl
xor
data16
adc
es
add
mov
add
jmp
outsl
mov
or
imul
push
scas
cmpsb
pop
mov
jo
jge
jo
and
push
leave
xchg
pusha
xlat
outsl
mov
mov
mov
mov
sbb
clc
and
adc
sub
jbe
cmp
cmc
adc
aam
ss
push
push
xchg
lods
adc
mov
push
scas
lret
leave
movsb
out
xchg
mov
flds
in
mov
test
fidivrl
and
pop
jecxz
insb
insl
andb
cmp
cli
mov
push
daa
test
pusha
nop
popa
add
mov
insb
jecxz
lods
add
jecxz
jge
lret
stc
jo
adc
dec
sbb
test
inc
xchg
or
push
and
add
xor
das
cs
dec
cli
adc
mov
cmpsl
or
dec
rcrl
addr16
pop
int
lcall
int
lret
int3
and
outsb
sbb
arpl
sbb
nop
fcom
inc
fnstcw
or
sbb
mov
push
cmp
scas
xchg
or
cmp
sub
cmp
adc
rcrl
les
and
add
push
xchg
rolb
push
xchg
add
cmpsl
pop
repz
xlat
push
insb
cld
int
mov
test
sahf
add
repz
mov
push
xor
xchg
ds
push
lcall
mov
idiv
imul
mov
jl
cld
and
cltd
mov
mov
subb
mov
fwait
das
xor
lds
leave
out
mov
jmp
imul
xchg
out
ds
enter
cmp
mov
xchg
es
test
test
jns
lret
ror
lret
shll
dec
xchg
pop
sahf
aas
ds
sub
add
push
sub
add
jmp
out
out
mov
and
xor
dec
xorb
pop
leave
jmp
cmp
sar
mov
lret
sub
xchg
int3
inc
arpl
adc
push
push
out
sub
xchg
repnz
mov
xchg
pop
inc
pop
icebp
ja,pt
add
nop
xchg
clc
push
sub
loop
cmp
jge
and
cmpl
jne
mov
mov
loop
es
enter
jnp
addr16
scas
pushf
in
cli
xchg
jnp
sbb
rolb
pop
inc
fs
jbe
arpl
lret
stos
cli
loop
push
test
jno
jle
mov
sbbl
js
scas
les
iret
xorb
ljmp
add
adc
out
orb
jmp
dec
or
or
pop
adc
sbb
cmp
xchg
mov
sub
stos
add
pop
push
int
pop
ret
push
pop
inc
jns
pop
repz
jnp
pop
ret
sbb
in
addl
frstor
jae
iret
loop
imul
popfw
inc
out
inc
sbb
xlat
repnz
mov
outsl
jecxz
jle
notl
dec
push
cltd
ja
scas
pop
and
int
insl
pop
popa
fiadds
mov
repnz
aad
jns
xor
les
mov
jb
mov
in
jo
pushf
pop
xchg
xor
lahf
pusha
out
lret
cmpsb
xchg
push
lahf
mov
jbe
sbb
push
lea
pop
out
xchg
sub
in
outsl
or
inc
mov
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
jmp
outsl
mov
jae
dec
cmpsl
repz
adc
ds
jo
pop
jge
jo
pusha
sahf
mov
dec
nop
sub
adc
movsl
mov
popf
bound
aas
and
sbb
or
sub
mov
mov
sbb
pushf
xchg
push
and
pusha
push
adc
sahf
imul
int
adc
mov
div
mov
call
jp
mov
out
adc
std
add
mov
popa
in
imul
popf
scas
pop
inc
xor
sub
push
pop
adc
popf
jge
loop
ret
mov
inc
lret
lcall
or
out
in
int
dec
add
push
outsb
mov
lods
or
repnz
divb
push
and
push
cmp
das
mov
sbb
faddp
push
cs
pop
lds
or
cmp
mov
sbb
cmp
pop
jb
test
jb
in
sub
sahf
push
aam
bound
push
cwtl
dec
push
int3
fucomi
cld
es
enter
sti
dec
or
fcmovnu
cmp
daa
mov
das
in
jg
das
cmpsl
adc
cli
adcl
in
pop
or
mov
add
jne
out
shl
loopne
cmpsb
jmp
movsb
xchg
pop
xor
cwtl
and
ja
pop
mov
jne
inc
push
imul
mov
mov
jo
ret
and
xorl
pop
repnz
mov
cmp
pop
jbe
jmp
or
jle
pusha
mov
and
pusha
push
cltd
fsubl
js
lods
test
test
mov
popa
mov
fsts
test
lret
loopne
add
inc
les
icebp
sbb
push
push
push
or
jecxz
popf
out
ret
or
cld
sbb
fbld
push
arpl
sbb
int3
pushf
pop
mov
mov
test
mov
fistl
push
xchg
jne
std
sbb
iret
aaa
mov
sbb
adc
mov
push
cld
push
in
mov
nop
enter
sub
mov
mov
lret
sbb
shl
and
mov
dec
paddd
sbbb
inc
push
scas
icebp
jbe
daa
inc
pop
rorl
push
fildll
loopne
jo
sbb
test
cmp
pop
cmp
mov
inc
push
mov
dec
jl
xchg
push
dec
add
rcl
mov
insl
and
xchg
cmc
fs
ds
negl
out
or
leave
inc
aam
mov
add
jne
scas
mov
or
adc
popf
inc
test
in
jmp
push
mov
mov
pop
add
xor
pop
out
add
nop
pushl
pop
xor
xchg
dec
dec
outsl
inc
negb
lcall
xor
sub
inc
pop
hlt
iret
lcall
xor
out
call
ret
hlt
mov
cmp
mov
sub
rorl
sub
mov
inc
mov
inc
lahf
ficompl
imul
add
ja
and
pop
cli
mov
jge
fldl
sbb
in
and
mov
cmp
xchg
or
popa
lret
lds
jae
push
jp
cmp
cmc
shrb
adc
push
xchg
outsl
jmp
bound
pop
fucom
lds
fldl
sub
pop
xchg
sbb
pop
sbb
mov
mov
insl
mov
mov
sub
adc
mov
push
mov
xor
movl
jmp
xchg
shll
push
paddsw
es
jo
pop
jge
jo
jae
xor
push
aaa
push
addr16
jae
xchg
mov
pop
push
repnz
cmpsl
lods
pop
mov
mov
stos
cmp
mov
cmp
popf
sub
xchg
addr16
les
hlt
ja
clc
xchg
je
inc
movsl
fadd
js
xor
mov
fbld
pop
mov
rolb
loope
mov
cmp
ret
adc
sbb
sub
mov
ficompl
ficoml
push
dec
cld
cmc
mov
mov
xchg
add
push
and
shlb
xchg
mov
test
in
mov
out
test
pop
xchg
cli
inc
push
scas
negb
jo
jae
adc
in
mov
sbb
mov
in
mov
adc
inc
xor
lds
sbb
divb
jae
leave
rcl
iret
mov
imul
out
sub
sbb
xchg
cmp
testb
out
push
pop
jno
movsl
mov
add
add
bound
add
cmp
sub
xor
test
in
movsl
sbbl
ljmp
imul
fs
pop
mov
int3
fistpll
clts
sub
jl
push
into
mov
movsl
or
cmp
mov
dec
movsl
outsl
or
popa
scas
and
jo
call
mov
cmpsl
mov
enter
xor
xchg
icebp
cmpsb
push
stc
mov
ja
and
sub
mov
scas
xchg
jo
sub
and
push
in
cmpsb
rorl
addr16
cmp
mov
mov
in
jmp
ffree
rcr
fsubl
dec
mov
mov
into
cmpsb
outsl
push
mov
adc
and
or
mov
xor
in
cmpsl
je
mul
aaa
out
cmp
add
and
and
pop
ja
lods
imul
test
mov
outsl
mov
test
dec
adc
jl
inc
in
mov
cmp
push
aam
lea
cmp
jle
das
into
shlb
jl
loop
cwtl
popl
xor
jle
xlat
gs
shr
lods
fdiv
mov
xchg
or
add
inc
inc
inc
push
jno
test
mov
repz
mov
pop
jb
test
and
jbe
sti
xchg
lea
fisttps
stos
xor
mov
rclb
xchg
scas
cmp
mov
and
xchg
sbb
sahf
test
mov
mov
or
inc
stc
fadd
dec
outsl
mov
std
and
je
sub
repnz
push
scas
or
or
inc
push
pop
xchg
test
xor
fists
jg
jae
add
jno
test
lahf
jmp
out
xor
aad
bound
mov
xchg
repnz
cmp
repz
mov
push
out
adc
inc
add
test
add
or
scas
out
sbb
mov
jmp
jno
test
subl
mov
arpl
push
pop
cwtl
jnp
sahf
xor
std
sub
cmp
out
mov
xchg
pop
push
popf
xlat
jne
cmp
mov
sub
adc
outsb
jnp
mov
outsl
jne
pusha
xchg
jecxz
cmc
mov
enter
mov
push
popf
lock
mov
xchg
out
sbb
ljmp
gs
mov
mov
add
mov
mov
mov
icebp
std
inc
add
js
add
test
or
add
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
and
leave
adc
adc
call
fdivrl
jo
jge
jo
in
sti
push
jge
insl
add
dec
jae
mov
rcll
push
adc
lods
mov
es
testl
lds
sbb
fnstcw
dec
ljmp
inc
adc
aad
cmp
bound
mov
sbb
push
sbb
pop
stos
add
xchg
popf
pop
xor
mov
addr16
jp
xor
aam
fsts
mov
xor
fisubrs
adc
leave
pusha
push
and
pop
call
insb
pop
int
cmpsl
adc
in
pop
aad
lret
fs
cwtl
and
cmp
adc
jnp
std
xor
inc
mov
or
stos
nop
stos
ds
inc
aas
jnp
movsl
test
repnz
repz
dec
mov
push
mov
or
mov
das
pop
adc
popf
xchg
or
xor
jno
push
dec
inc
in
xor
jmp
jp
int3
cmpsl
ja
ja
mov
push
xor
mov
repnz
mov
push
inc
andb
ss
ss
dec
mov
stos
or
jnp
or
rorb
in
mov
dec
sub
dec
and
cltd
mov
pop
int3
or
xchg
out
out
insl
in
aas
push
fistpll
xorb
mov
lcall
sub
sub
push
adc
and
out
xchg
ja
inc
aas
push
pop
in
leave
pop
mov
push
jo
mov
push
add
dec
mov
int
sub
andl
push
hlt
and
pop
jbe
pop
fiadds
cmpsl
movsb
and
adcl
cmc
lcall
and
jecxz
cltd
divb
stc
sbb
les
aam
push
mov
sbb
dec
push
xchg
jp
push
shl
xchg
xor
inc
mov
mov
xchg
scas
js
sub
inc
jae
enter
das
sar
xchg
sub
jmp
inc
mov
in
dec
xchg
inc
pop
jne
arpl
testb
das
push
and
mov
jge
push
out
lods
or
stc
xchg
push
adc
or
xchg
mov
jno
sahf
inc
into
lods
and
test
push
jmp
or
push
ret
mov
in
pinsrw
lods
sbbb
cli
aam
stc
cmp
imul
insb
in
cmp
shl
xor
arpl
sahf
jo
xchg
in
ja
loope
xor
mov
loopne
dec
cltd
clts
xchg
aad
imul
xor
push
insb
loopne
lcall
dec
in
jne
add
xor
cld
pop
pop
in
leave
scas
rcr
sbb
scas
push
push
shlb
mov
inc
pop
jae
xor
sub
sub
in
dec
sub
stc
jo
mov
pop
jnp
insl
leave
xchg
mov
shll
dec
mov
fisubs
xchg
inc
xchg
ds
into
inc
fucomi
cmp
lock
out
es
mov
sbb
xor
shlb
ds
ret
lcall
aam
aad
jnp
mov
push
fstpt
mov
mov
pusha
push
adc
arpl
fnsave
popa
lods
pop
xchg
lds
aaa
jl
inc
call
aas
add
xor
in
sti
mov
aaa
xor
shll
sub
test
or
xchg
lds
ljmp
fdiv
in
xor
mov
push
cmp
adc
and
insb
shll
mull
cmp
sub
addl
xor
movl
cmp
movl
jne
jmp
js
stos
loopne
jae
cmc
pop
sub
fbstp
jo
pop
jge
jo
fst
pop
inc
mov
rclb
or
mov
rolb
jno
push
insb
jl
mov
scas
and
mov
add
inc
push
sub
js
mov
out
aam
aam
das
fsubrl
into
mov
cmp
in
cltd
dec
mov
loopne
fwait
vhaddpd
cli
mov
mov
or
insb
mov
lds
and
fldenv
sub
lds
sahf
cld
pop
push
sti
rcrl
fld
or
mov
ficomps
pop
push
xchg
orb
adc
push
cli
jnp
out
pop
fstps
stos
sbb
pop
xor
mov
cltd
xor
test
scas
xor
xlat
and
cltd
shrl
scas
lds
xlat
ss
movsb
enter
lret
jmp
out
dec
out
sub
movl
sub
jp
pusha
popf
ds
test
scas
jb
sbb
stos
cli
rcll
mov
inc
cmp
add
dec
xor
ficoml
loop
fsubl
jecxz
inc
outsb
out
push
cmp
loope
pop
roll
out
in
sahf
lret
jo
lcall
ss
loope
shrl
outsl
xlat
pop
dec
jle
xchg
test
hlt
cs
push
repnz
sbb
andb
cmp
in
add
push
icebp
adc
nop
cmc
popf
push
test
mov
mov
cwtl
insb
inc
jmp
pop
test
scas
lods
or
push
jl
loope
jg
sbb
das
call
jne,pn
jo
out
loope
mov
push
sbb
push
jmp
push
mov
dec
xchg
dec
push
test
mov
cmpl
fnstenv
les
ljmp
mov
cmc
hlt
xor
aaa
lahf
push
pop
rcl
mov
ficompl
jg
stos
lcall
or
insl
aad
loope
repz
rcrb
out
fdivrl
outsb
sub
aad
add
rclb
outsl
mov
sub
push
out
test
adc
pop
call
xchg
push
clc
int
aad
nop
mov
out
enter
mov
or
xor
das
push
and
inc
fistl
mov
pop
int
xchg
or
lock
clc
out
inc
xor
aas
insb
and
sub
mov
inc
int3
xor
mov
xor
push
loope
fcoms
loop
int
jmp
sti
xchg
rorb
jp
data16
inc
adc
xchg
testb
push
flds
sbb
cmp
dec
xor
push
push
inc
inc
mov
pop
pop
out
je
sub
pop
pslld
and
mov
fdivs
pop
xor
ss
call
lea
sub
sbb
inc
inc
inc
add
cmp
rcrl
dec
xchg
imul
xlat
and
repz
sbb
repnz
dec
pushf
dec
and
mov
cwtl
sahf
and
popa
xchg
cltd
mov
stos
scas
push
jle
mov
insl
outsl
add
jl
lahf
cmpsb
add
push
loopne
or
xlat
testb
xor
dec
jmp
push
jo
fcomps
inc
loop
jp
icebp
pop
add
fsubrs
lahf
xchg
fcmovnb
popf
in
cmp
mov
or
adc
lock
movups
add
xchg
mov
mov
in
call
outsl
insl
push
dec
cltd
gs
inc
push
aaa
mov
shl
cmpsl
or
add
jb
or
jl
or
cmp
xchg
sub
stc
js
inc
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
jmp
mov
cwtl
test
jb
jb
xchg
adc
sbb
push
jo
pop
jge
jo
imul
in
mov
add
or
nop
add
sub
adc
insb
lock
jno
cmp
gs
xchg
xchg
cmp
sub
call
adc
incl
pop
mov
stos
pop
mov
ret
or
daa
cmp
nop
push
cs
out
sub
xor
xchg
in
imul
ror
bound
sahf
out
push
cmp
pop
push
mov
cmpsl
push
shlb
xchg
or
cmp
or
sbb
cmp
out
push
jne
xchg
in
sub
or
bound
push
xor
imul
jns
test
push
mov
xchg
mov
cmc
test
cld
popa
test
aas
mov
mov
aad
out
lods
jne
stc
jl
adc
lcall
sbb
lods
shrb
lock
dec
add
je
xchg
lcall
pop
xor
pop
popa
dec
cmp
leave
gs
xor
mov
adc
pop
addb
jns
movsl
iret
jmp
pusha
lea
push
mov
add
mov
js
mov
sbb
sbb
add
out
cmp
pop
pop
mov
ljmp
stos
xchg
daa
adc
movsl
mov
jne
push
jnp
addr16
popa
out
and
inc
mov
cmpsb
pop
in
ret
test
sbb
add
les
mov
push
adc
shl
mov
xchg
scas
clc
in
pop
jle
push
popa
test
dec
jne
shll
push
nop
adc
arpl
xchg
out
jl
lds
aad
mul
ret
or
into
scas
lcall
or
roll
push
insl
pop
mov
sub
xchg
notb
or
adc
adc
mov
in
fildl
push
push
inc
jg
incb
loop
cmpsl
sbb
jle
inc
mov
test
dec
xor
roll
fisttpl
inc
add
sti
lret
pushf
adc
push
push
mov
repz
in
jb
lahf
and
xor
cmp
and
sbb
mov
iret
sbb
or
imul
loope
mov
loope
in
fsub
jmp
les
mov
pushf
mov
push
dec
mov
out
sbb
inc
mov
test
mov
lock
pop
call
dec
outsb
jb
cli
orb
into
mov
xor
iret
imul
das
out
in
or
push
cmp
jmp
scas
pop
sbb
mov
ljmp
jae
jl
imul
in
mov
into
push
movb
rorl
enter
shrb
test
xchg
mov
pop
lock
xchg
add
xchg
sbb
sub
mov
sbb
out
out
pusha
bound
jno
cs
sbb
aad
and
or
jl
mov
push
shlb
sub
out
sbb
mov
dec
std
lods
lods
js
jmp
aaa
push
add
cmc
mov
adc
div
mov
cli
mov
sbb
test
dec
imul
cmpsb
push
mov
jmp
inc
cli
push
jge
add
std
cmp
xchg
ljmp
fimull
or
inc
fsts
sbb
or
aad
cmc
movsb
add
stc
movsl
sub
inc
or
mov
add
or
ret
push
mov
sub
and
movl
mov
adc
movl
sbbl
mov
subl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
xor
sub
mov
sbbl
jmp
mov
mov
pop
dec
xor
insl
mov
jo
jle
jo
sub
rol
mov
mov
pop
cltd
testl
mov
aam
dec
mov
adc
clc
les
mov
or
adc
pop
test
mov
cltd
shrb
push
rcrl
dec
inc
int
ds
sbb
out
scas
aaa
cmc
sahf
push
mov
push
popf
sub
popa
jae
leave
insb
xor
and
pop
jge
repnz
xor
dec
inc
adc
jle
ds
xor
sbb
adc
test
adc
mov
inc
cmc
je
xchg
mov
sbb
ja
rorl
scas
dec
daa
and
dec
mov
add
push
aaa
andl
les
lods
lods
roll
mov
lods
push
pop
mov
nop
bound
dec
mov
dec
ss
in
pop
jno
test
push
sub
popa
or
adc
mov
fmul
push
xchg
test
jp
mov
jmp
push
jle
cmpsl
popf
or
addb
cmp
sub
cmc
adc
dec
mov
fimull
and
cld
or
decl
icebp
lret
pop
es
lods
pop
inc
jo
inc
mul
sti
xor
or
fmull
mov
fmuls
jns
inc
xchg
leave
ss
pop
cwtl
int3
xor
std
or
or
and
push
dec
enter
xor
xor
or
hlt
and
out
cmp
setb
rcrb
dec
xchg
addl
sti
jle
pop
lahf
test
pop
mov
mov
pop
ret
shlb
cmp
adc
lods
sti
add
sub
sbb
and
pop
aam
jmp
or
jne
sub
dec
and
lret
xor
popf
jne
jbe
and
ds
inc
aaa
call
out
and
pop
dec
lds
hlt
adc
dec
mov
pop
mov
mov
pop
mov
out
dec
dec
negl
add
jecxz
inc
lods
push
adc
sarb
out
rcrb
hlt
cmpl
sbb
mov
sub
in
mov
xlat
lahf
dec
jne
pop
bound
or
int3
sbb
xlat
pop
sbb
jae
fnsave
inc
ret
xor
dec
lods
imul
sub
push
sbb
jae
pop
push
xchg
into
pop
inc
jae
push
jb
pop
pushf
repnz
jmp
xor
daa
mov
loop
mov
pop
mov
cmp
into
add
lret
subl
jmp
hlt
xor
fwait
repz
inc
xchg
aaa
test
pop
jo
mov
loopne
scas
push
cltd
dec
loopne
out
mov
and
jns
rclb
stos
mov
outsl
dec
int
iret
out
icebp
inc
inc
test
push
stos
pop
out
test
sarb
mov
dec
stc
sub
jbe
jno
ret
mov
cmc
or
stos
shll
pop
outsl
sbb
cmp
or
adcl
push
sbb
pop
mov
push
movsb
call
mov
push
sub
mov
mov
adc
push
lahf
mov
daa
hlt
loop
jns
xchg
mov
xor
fnsave
and
imulb
push
pop
inc
pop
lcall
aam
jae
ss
push
and
pop
sbbb
sbb
push
xlat
fwait
imul
scas
jae
sbb
enter
push
and
rcll
outsb
sbb
es
xor
push
mov
int3
js
mov
fld
test
outsl
add
jg
aaa
cmpsl
sarb
jno
js
lcall
std
les
push
sahf
pop
imul
scas
mov
iret
stc
movsb
xchg
ss
hlt
push
movsl
ror
popl
xor
popa
ret
adc
sub
lock
inc
repz
mov
sbb
std
ret
dec
cld
loope
jbe
xor
add
out
rorl
mov
je
es
mov
pop
loop
push
enter
push
cmpb
nop
sbb
lock
pop
jnp
int3
int3
push
pop
test
add
mov
dec
ret
jl
lods
mov
mov
fisttpl
mov
or
and
inc
mov
lods
insb
mov
insb
bound
imul
iret
js
pop
cmp
pop
seta
fldt
es
jae
mov
mov
lret
mov
mov
xor
aam
sbb
cltd
jle
push
dec
cmp
xchg
push
dec
pop
movsb
jecxz
es
test
mov
fisubrs
ds
sbb
push
jmp
push
nop
movsl
in
mov
lea
jbe
push
scas
push
adc
fimull
push
das
scas
mov
mov
jge
sbb
push
int
push
dec
jb
xor
fists
sub
jp
into
dec
dec
dec
xor
jns
mov
sbb
adc
and
xchg
jmp
jmp
in
mov
dec
mov
push
shrb
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
push
xorl
push
test
jmp
mov
mov
jne
jne
sub
sti
mov
pop
jo
mov
jns
in
neg
test
push
jbe
sbb
mov
addb
lcall
push
mov
mov
jno
dec
xlat
std
add
jbe
clc
pop
jge
jo
xchg
jb
loopne
out
mov
pop
xor
mov
les
ds
aaa
xchg
ljmp
clc
popa
mov
addr16
cld
movsl
pop
repnz
mov
shlb
lock
repz
ret
fcomps
repnz
sbb
repnz
stos
mov
outsb
xor
or
and
bound
sbb
sbbb
inc
mov
sahf
sete
cmpb
fimuls
into
repnz
add
test
mov
mov
test
mov
push
lods
mov
out
jp
popf
dec
cmp
testb
and
mov
mov
push
pop
sub
dec
jne
sub
push
push
mov
enter
adc
inc
push
cmpsl
stos
mov
je
clc
jecxz
lea
xor
or
fs
stos
imul
xchg
sub
push
in
push
hlt
xor
rorb
mov
xor
imul
loopne
push
loop
and
sbb
sbb
cmpsb
mov
cltd
inc
dec
mov
cmp
jle
push
in
sbb
sbb
push
out
adc
ja
xor
xchg
xor
xorb
dec
mov
fisubl
inc
inc
faddl
xlat
test
xor
hlt
push
ljmp
add
jmp
add
filds
mov
jns
jnp
xchg
daa
dec
outsb
fcompl
lods
mov
jecxz
or
push
xchg
mov
push
rol
addl
push
icebp
and
push
jns
and
fucomi
out
pop
insb
sub
int3
xchg
add
sbbl
outsl
push
lods
push
cmp
jns
aam
mov
pop
mov
jo
jecxz
aad
movsb
mov
or
adc
andb
dec
push
mov
push
sub
dec
pop
cmp
xchg
hlt
mov
shlb
sbb
mov
fwait
push
sbb
mov
out
in
push
fiadds
fildl
jo
daa
jp
in
mov
xchg
ja
loope
push
jp
or
or
adc
pop
mov
add
xor
mov
addr16
mov
js
movsl
mov
mov
fs
test
iret
sub
shll
fwait
cmp
jmp
lds
xchg
in
inc
faddp
mov
inc
dec
je
mov
add
mov
or
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
pushl
push
push
call
mov
dec
mov
jmp
and
imul
mov
add
add
mov
sub
mov
jmp
lret
sbb
inc
loopne
push
mov
rorb
ja
subl
mov
call
adc
les
arpl
or
cwtl
mulb
add
cmpsb
sub
sub
push
sub
mov
or
xor
push
leave
lcall
roll
jmp
ljmp
pusha
outsb
adc
inc
shl
mov
std
ds
orb
jmp
mov
inc
mov
scas
dec
cs
or
mov
mov
dec
cmp
out
lahf
mov
jl
jno
mov
add
rcl
fcomi
cmp
loopne
in
mov
mov
rolb
leave
inc
dec
adc
test
xchg
or
lods
dec
xchg
cwtl
paddb
aas
lcall
jno
aaa
mov
shll
pop
lret
jns
pop
loopne
ret
dec
pop
icebp
push
movw
mov
jp
push
fwait
rorl
add
fwait
rclb
movl
fs
adc
sbb
xchg
push
mov
jl
add
fstps
dec
aad
push
js
cmp
clc
push
xchg
je
sub
loop,pn
jecxz
sub
ljmp
inc
cmpl
ss
cld
lret
xchg
or
jbe
shrl
sbb
rorb
xor
mov
loopne
insb
xor
jae
xor
xor
ljmp
push
insl
in
movsl
adc
jns
sbb
leave
lds
outsb
mov
xchg
adc
mov
dec
jge
sub
sbb
adc
adc
lret
mov
add
xor
xchg
pop
push
sub
or
loop
in
imul
test
push
cltd
xchg
mov
test
imul
mov
jnp
pushf
jbe
cmpsl
cltd
sub
push
push
mov
push
xorb
popa
bswap
mov
push
imul
outsl
test
sub
sahf
push
fidivrl
inc
pop
inc
addr16
sarl
sub
pop
dec
push
int3
idivb
rclb
pop
mov
adc
mov
jnp
xlat
jle
push
popf
out
in
and
aad
adc
or
sbbb
cli
and
and
xchg
or
push
in
stos
cmpl
cmp
les
add
xlat
popf
mov
xor
mov
jle
pop
bound
decl
stc
shll
mov
orb
sbb
pop
lods
pop
loop
ds
fisubs
sbb
imul
and
add
add
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
sub
xor
jmp
call
jno
popa
push
xchg
arpl
fs
mov
fimuls
lods
jle
pop
mov
shrb
inc
mov
push
inc
cmc
and
sbb
inc
add
push
loop
ss
mov
adc
mov
pop
sbb
mov
hlt
dec
loopne
mov
movsb
push
cmp
fists
ds
cmp
mov
jbe
out
test
add
push
enter
adc
lods
insl
jmp
or
or
cwtl
outsl
pop
cli
sbb
dec
jg
mov
mov
or
xchg
fdivrl
out
xlat
out
out
pop
inc
mov
jmp
arpl
out
mov
arpl
and
or
jne
adc
and
cmpsb
iret
sbb
in
test
outsb
std
int
adc
stos
shlb
dec
aad
and
xchg
push
sub
mov
in
pop
pop
dec
adc
shr
addr16
inc
sti
dec
test
outsb
pop
add
xchg
mov
inc
push
mov
dec
insl
and
fisubs
mov
out
lcall
mov
mov
cmp
adc
fisubrl
addl
fdivs
loope
cmp
sbb
xchg
in
call
inc
fistpl
push
js
lcall
cmpb
shlb
icebp
sbb
pop
loope
movswl
mov
test
in
jecxz
lret
popa
testl
or
vmread
sbb
mov
insl
in
repz
pop
mov
fistpl
sub
imul
cmpsl
pop
push
cmc
je
in
shl
push
mov
fbstp
out
sbb
outsb
xchg
cmp
pop
cmpsb
sbb
cmp
sbbl
repnz
mov
push
sbb
cwtl
push
bound
cmp
lds
jge
add
pop
test
xchg
hlt
mov
nop
mov
subl
dec
in
and
cmp
cmp
stc
stos
pop
pusha
cli
hlt
js
adc
push
cld
push
insl
int
or
aaa
mov
out
sub
add
sub
imul
cwtl
add
push
test
xchg
popa
pop
test
sbb
sub
fptan
arpl
lahf
movsb
mov
lods
test
dec
and
addr16
in
cmp
adcb
fildll
mov
pop
jge
je
mov
and
sub
push
mov
xorb
inc
or
hlt
push
mov
mov
mov
adc
mov
xor
mov
xor
adc
xor
jmp
push
popa
jne
add
cmp
outsl
loope,pt
mov
jle
jo
sbb
or
mov
cs
std
aad
inc
lock
scas
aad
mov
mov
pop
sub
pusha
frstor
xor
adc
enter
hlt
cmp
icebp
push
mov
mov
in
repnz
xchg
outsb
pop
mov
sti
les
or
add
or
mov
xor
sahf
mov
int3
xor
jo
mov
cmp
mov
imul
mov
pop
in
cmc
scas
cmpb
lret
sar
insb
xchg
icebp
std
jns
push
dec
addr16
mov
pop
addr16
mov
mov
inc
sarb
rolb
jo
add
je
jl
test
jl
mov
stc
rol
repz
adc
in
jle
je
fsub
or
enter
jl
add
cmpsb
sbb
scas
movsl
xchg
jns
pop
sub
fucomi
daa
xor
rcrl
mov
xchg
popa
xchg
fadd
and
scas
jne
mov
divb
test
sub
inc
cs
mov
pop
cmp
and
and
ss
inc
gs
loop
pop
xchg
mov
xor
push
pop
or
or
aad
sbb
xchg
xchg
outsl
mov
stc
add
mov
insb
xor
sbb
cmpsb
rclb
jo
jmp
imul
nop
pop
sub
xor
mov
xor
mov
adc
int
adc
dec
mov
ret
leave
leave
inc
fisttpll
sub
js
or
mov
or
xchg
pop
mov
jle
jbe
leave
adc
je
xchg
push
pop
sbbb
cli
and
dec
ficoml
xchg
loope
xchg
add
inc
jmp
aaa
mov
fucomp
mov
xchg
inc
push
ret
movsb
lea
cmp
enter
sbb
fadds
scas
jb
popf
stos
data16
mov
hlt
sbb
inc
pop
push
cmp
sub
jp
xchg
dec
aas
inc
inc
inc
and
stos
js
jecxz
jae
xchg
dec
in
pop
and
adc
pop
shlb
dec
aam
out
cmpsl
and
adc
je
adc
dec
or
fidivs
xchg
mov
clc
mov
mov
xlat
in
daa
pushf
cmc
adc
pushf
mov
sub
push
add
inc
lret
cld
mov
mov
pop
jp
faddl
enter
mov
fistl
into
cmp
movl
imul
mov
arpl
pop
pop
dec
leave
push
add
mov
mov
mov
je
notl
mov
xor
xorl
add
jmp
inc
mov
jp
adcb
mov
loopne
outsb
jo
mov
test
add
fdivp
xor
adcl
stos
dec
mov
pusha
and
movb
push
out
mov
ficomps
mov
mov
inc
pop
in
and
loopne
popl
mov
shlb
adc
mov
clc
cmpb
repnz
xor
ljmp
hlt
mov
out
vmovsd
cmp
les
xor
jp
jle
jbe
ss
and
out
std
mov
xor
mov
push
fimull
adc
jbe
sti
adc
dec
das
int
ljmp
lods
js
jl
in
cltd
repz
mov
cmp
add
jl
decb
loop
sbb
mov
and
add
mov
add
sti
xor
or
inc
cmc
sub
pop
test
ret
xchg
orb
xchg
out
xchg
push
sbb
adc
mov
sub
in
sub
repz
scas
rcll
aas
inc
adc
pop
fs
js
shl
cwtl
fsubs
hlt
add
fs
xchg
cmp
mov
xchg
dec
int
sbb
jns
cmc
rcr
stos
in
mov
jne
mov
lcall
xor
jns
dec
lret
addr16
adc
or
les
sar
fiaddl
insl
sbb
out
push
sub
cltd
icebp
mov
jbe
loop
rcrb
daa
pushf
cmpsb
dec
into
xchg
inc
push
add
xchg
add
jno
je
iret
xchg
mov
jmp
jb
jae
insl
aaa
in
jl
mov
sbb
mov
or
jbe
or
addr16
pop
push
cmp
sti
mov
sti
data16
test
adcl
xchg
decb
dec
test
jle
imul
and
stc
mov
inc
jl
sbb
shrl
test
pop
jb
cmp
dec
sahf
leave
inc
out
cmp
jmp
push
jns
leave
mov
insb
iret
jns
jae
subl
push
popa
mov
jmp
cmc
ret
cmc
cs
jp
ret
lret
jno
xlat
js
cmp
jne
sbb
dec
leave
jnp
and
bound
xlat
pop
adc
jge
inc
lds
add
fcoms
push
sub
in
pop
test
outsl
pop
imul
and
loope
fmull
and
in
pop
adcb
mov
mov
dec
pop
fs
cmp
jne
pushl
jmp
and
lods
shrb
in
repz
xor
jle
jo
ljmp
sub
xchg
int
add
xchg
add
jo
sub
int3
test
std
mov
lods
ret
cli
xchg
cltd
repz
loope
leave
out
mov
pop
inc
pop
fcomi
pop
mov
push
scas
mov
mov
push
xchg
xor
roll
data16
cmp
testb
xor
xchg
xchg
daa
xor
jmp
xor
dec
fs
scas
push
gs
or
mov
mov
mov
xor
inc
scas
ljmp
jbe
inc
mov
and
fstpl
push
jnp
nop
xor
insl
pop
xor
pop
mov
call
jge
adc
ret
sbb
push
jmp
and
jae
xor
push
in
add
fwait
and
icebp
ja
pop
hlt
bound
stc
jge
aaa
add
adc
mov
add
sarl
inc
stos
sub
push
and
push
xor
arpl
jnp
xchg
data16
out
inc
sub
clc
fwait
cwtl
inc
mov
push
loope
inc
xchg
xchg
sub
lret
xor
pop
pop
mov
popf
loop
outsl
dec
and
insb
adc
dec
cmp
xlat
jb
sub
dec
pop
xor
mov
and
cmp
cmp
or
scas
aaa
nop
sbb
push
mov
cmpsl
ret
add
scas
pop
jl
push
shrb
lods
arpl
xor
repz
cmpsb
xchg
mov
jmp
sub
aad
popa
test
lods
lea
adc
sub
mov
push
dec
sbb
popa
fldcw
push
push
mov
mov
lods
sub
je
movsl
in
div
xchg
xchg
cli
mov
ljmp
insl
stc
or
jae
push
and
and
sbb
paddq
sub
test
xor
lds
ljmp
push
dec
ficoms
mov
lret
dec
adc
inc
mov
sti
xor
dec
cli
xor
loop
into
pop
int
and
nop
into
negl
test
inc
divl
push
push
lahf
lds
mov
cld
call
pushw
lcall
mov
out
in
sbb
das
in
mov
out
mov
jb
sbb
cwtl
xor
cmp
push
call
jmp
pop
insl
and
xor
insl
jp
or
and
jle
jo
mov
xor
mov
cmpl
mov
jo
add
insl
lock
fstpt
ljmp
rclb
add
lret
mov
pushf
hlt
sarb
data16
xor
xchg
stos
push
icebp
lods
mov
cwtl
jmp
filds
fcmovnb
lock
dec
push
push
jp
sub
mov
ret
mov
add
into
adcb
cs
es
sti
in
add
stos
sti
fldln2
mov
mov
mov
aam
shlb
pop
or
jae
cwtl
add
aaa
xchg
ret
adc
fildl
not
shr
jl
push
sub
cwtl
dec
shl
pusha
mov
mov
subl
dec
sbb
mov
sti
aas
sub
pop
lds
cmp
push
sub
std
sub
pop
cmpsl
mov
jecxz
stc
and
repz
stos
jecxz
enter
dec
or
cmpsl
fsubp
aad
rorl
dec
daa
clc
addr16
sub
jge
sahf
shl
or
xchg
inc
imulb
je
mov
test
fistpl
jp
imul
mov
lods
hlt
add
lahf
sub
popa
negl
loope
enter
xchg
ja
xor
sbb
rcr
scas
int
sarb
push
push
es
cmp
and
mov
jb
jae
outsl
les
xor
std
mov
or
dec
lcall
imul
loopne
test
bound
iret
pop
divb
jmp
pop
jne
orb
incl
mov
pusha
scas
bound
jbe
cltd
divb
insb
dec
xchg
jo
jecxz
push
ud2
leave
test
xchg
or
orb
lea
inc
and
stc
jbe
mov
sti
sbb
push
jmp
sahf
in
adc
push
adc
pop
or
fcmovnb
push
push
pop
arpl
stc
push
pop
lcall
ss
in
or
fs
cmp
cmpsl
push
or
add
popa
nop
rol
pusha
add
andb
push
cwtl
xor
xchg
data16
in
pop
jns
fidivrs
data16
mov
ljmp
push
jle
adc
ljmp
pusha
popl
cmp
nop
mov
in
in
push
add
mov
lahf
jg
push
aas
xchg
scas
mov
stc
popa
hlt
mov
and
pop
xor
cmp
out
out
xor
out
ficompl
mov
mov
decl
cld
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
cmp
movl
je
pushl
decl
pushl
xorl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
or
mov
adcl
xor
decl
add
movl
cmp
je
not
mov
mov
mov
xorl
jmp
lods
mov
loopne
outsb
push
repz
scas
vpcomud
jbe
jo
jle
jo
pop
adcl
not
jo
fs
jmp
lahf
mov
incl
pop
negb
bound
mov
fnstsw
test
imul
xor
adc
out
test
xchg
add
mov
xchg
rcr
cld
xchg
and
push
and
addr16
sbb
xchg
sbbb
mov
decb
pop
ja
out
lahf
stos
add
and
out
lret
pop
fdivr
data16
pop
sti
dec
int3
sti
mov
jnp
nop
mov
jbe
and
jp
test
adc
xlat
movsb
sub
and
je
int3
mov
cwtl
sub
push
bound
xor
cs
clc
stos
jge
cmp
dec
out
sarl
cmpsb
jle
cli
jne
test
pop
iret
decl
popl
out
or
ret
xchg
jbe
jb
je
aas
imul
sub
push
dec
push
rclb
sub
adc
adc
xor
div
testl
cmp
decb
aaa
hlt
inc
fidivrl
jbe
ljmp
and
lea
divb
mov
xor
add
xchg
jp
lods
inc
mov
push
jne
sahf
and
and
mov
lret
iret
mov
lret
jno
adc
sub
mov
es
xor
jbe
dec
adc
cmp
stc
and
je
mov
ja
sbb
add
push
in
cltd
in
pop
lahf
mov
mov
lcall
mov
pop
dec
pop
cmp
push
xchg
push
mov
sbb
imul
shr
xor
or
daa
pop
xor
push
jno
out
mov
push
cmpsb
jnp
out
test
ja
push
repz
cmp
cmovp
mov
pop
cmp
movsl
repz
repz
in
adc
call
jo
jecxz
das
imul
fdivl
sbb
sahf
and
daa
xor
adc
cmp
mov
es
pop
jnp
push
sti
lods
inc
jecxz
mov
jl
jo
imul
sbb
push
addr16
jle
aad
xchg
repz
repz
int3
scas
stc
lahf
lea
dec
sub
xor
mov
xchg
in
xchg
dec
xor
loop
pusha
mov
clc
fiadds
orb
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
orl
add
mov
or
mov
mov
sbb
mov
addl
add
add
mov
mov
mov
add
neg
xor
and
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
add
lea
mov
push
jmp
add
xor
inc
cld
xchg
loop
lods
mov
jo
jle
jo
ljmp
loop
inc
rclb
jns
fdivs
adc
imul
lds
pop
stc
imulb
xor
call
sub
jbe
nop
or
ret
pop
int
pop
loopne
mov
ret
rorl
cmp
dec
push
jmp
and
int
xlat
xchg
icebp
and
sbb
sbb
push
adc
out
add
inc
out
daa
sbb
and
testb
aam
lret
out
mov
xlat
pop
mov
push
add
repnz
sbb
outsl
cli
lock
xor
mov
stos
scas
cli
sbb
inc
dec
push
repnz
insb
push
sub
mov
and
jns
jnp
push
lcall
jge
mov
or
loopne
fsubrs
lock
cmp
decl
mov
cmpsl
call
aaa
cld
push
and
insl
mov
addr16
popl
daa
shll
aaa
pushf
and
mov
data16
dec
push
sub
xchg
lret
addr16
and
subb
push
enter
loope
dec
dec
mov
fmul
loop
or
int
xchg
mov
lret
xor
pop
fidivrs
lea
pop
cmpsb
adc
shl
pop
pop
cli
xor
data16
hlt
jnp
xor
and
cmp
mov
pusha
sbb
and
xlat
pop
pop
repnz
call
sbb
inc
fdivrp
lret
xlat
add
pop
stc
mov
add
and
mov
inc
inc
push
xor
sbb
insb
xchg
fs
ss
xchg
imul
adc
int3
or
enter
jecxz
ss
mov
adc
mov
aas
icebp
fimuls
jb
insl
ds
inc
xchg
dec
fnstenv
into
jecxz
and
push
leave
sbb
fsqrt
xchg
int3
idivb
or
mov
adc
aas
sub
movsl
stos
rol
ja
roll
pop
ss
adc
pop
sbb
cmp
icebp
dec
and
call
cmp
adc
leave
lods
or
lods
rcll
and
scas
aam
add
jnp
test
pop
bound
add
addr16
aam
jae
mov
mov
loope
push
in
ret
or
mov
mov
lcall
mov
mov
add
mov
lds
xchg
test
pop
gs
ljmp
mov
pop
subb
sahf
cmp
outsb
lahf
mov
jne
pushl
call
mov
jmp
ret
sbb
sub
jno
pop
or
cmp
mov
in
cmp
lret
mov
popf
push
mov
jae
pop
lret
jmp
flds
inc
mov
xchg
jae
xchg
rcl
xor
cmp
push
or
xchg
cmpsl
mov
xor
cmpsb
jmp
std
outsl
jp
xchg
or
fdivrl
pop
mov
daa
cmpsb
mov
sbb
daa
flds
cmp
das
xchg
in
mov
addl
int
es
jae
dec
add
data16
push
pop
sbb
fadds
mov
push
push
sbb
fs
rcrb
adc
mov
test
mov
cmp
rcrb
js
mov
mov
scas
in
adc
or
dec
das
outsl
in
cmpsb
imul
es
cmp
mov
cmp
pop
xor
and
mov
sbb
loopne
into
adc
xor
dec
mov
in
sub
push
lock
cmp
into
ss
mov
fwait
icebp
dec
loopne
jle
test
dec
mov
sbb
mov
popf
xchg
fsubs
mov
fstpt
sub
xor
mov
nop
mul
int
xchg
scas
imul
stos
loope
mov
out
popf
lods
js
ss
mov
imul
sub
lods
fcmovb
adc
cmp
mov
dec
loope
scas
in
xor
mov
cwtl
int3
push
hlt
cmc
fucomip
add
pop
sti
mov
in
clc
les
inc
sbb
mov
push
xchg
stos
cmp
nop
xor
popf
faddl
xor
push
xlat
or
mov
in
sbb
xchg
adc
cwtl
dec
adc
or
mov
mov
xchg
add
jmp
adc
paddsb
jl
mov
test
xor
test
clc
jno
cld
jmp
push
mov
cmp
std
call
lret
mov
mul
xor
adc
sbb
adc
cwtl
sarl
xchg
cmp
ljmp
lret
cmpsb
std
pop
into
push
aam
mov
cmp
mov
les
test
fiaddl
mov
mov
cmp
pop
daa
push
xor
adc
jle
xor
mov
incb
gs
xchg
shrb
xchg
scas
push
fwait
je
jne
jp
push
std
sahf
sbb
xchg
xchg
jno
gs
or
std
add
cmpsl
xlat
push
adc
leave
ficompl
dec
addr16
imul
and
aam
adc
add
jp
mov
xor
jmp
add
mov
jb
jge
jge
push
cwtl
and
jge
jo
jle
jo
stos
icebp
sub
sbb
mov
xor
aam
imul
roll
adc
lds
mov
icebp
lock
into
mov
in
pop
mov
lahf
adc
add
gs
jo
call
mov
std
cmp
or
aam
clc
mov
or
mov
jmp
test
andb
lods
sub
push
fcmovu
fmull
jne
mov
or
sub
movsl
in
pop
ss
mov
mov
lahf
insb
fbstp
stos
mov
or
fs
out
sub
mulps
cmp
mov
addl
mov
sub
daa
add
pop
inc
cmp
mov
aad
dec
imul
xor
inc
ss
int3
push
jmp
adcl
jp
add
rcr
stc
pop
add
ficoms
inc
jb
or
cmp
jne
shlb
add
mov
xchg
aam
aad
sbb
adc
jmp
aam
push
inc
jne
mov
mov
lea
pop
ret
cltd
mov
sbb
mov
dec
inc
idivb
jno
std
jbe
sub
pop
aaa
insl
es
add
sub
sbb
push
mov
ret
cwtl
lret
inc
loop
pushf
aad
mov
test
and
out
xor
add
xchg
arpl
bound
sti
repnz
test
mov
inc
sbb
pop
add
lds
xchg
jnp
jns
push
push
adc
xchg
ret
test
jmp
mov
fnstsw
lahf
mov
loopne
adc
bound
cmp
fcoml
scas
or
nop
dec
enter
pop
inc
xor
lds
cmp
sub
dec
cwtl
out
imul
xchg
scas
jecxz
call
ja
ds
cmp
fdivl
adc
xchg
pop
mov
xor
outsl
pop
sbb
cmp
pop
adc
dec
jo
int3
daa
stc
subb
mov
pop
subl
jnp
insb
mov
or
push
js
push
shlb
push
and
loop
sbb
dec
fldt
loopne
fucompp
mov
arpl
fadds
inc
mov
out
push
sub
fucom
mov
test
jg
mov
sub
add
stos
shrb
stos
repz
and
xor
ja
dec
jg
push
dec
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
icebp
sbb
imul
outsl
stc
movsb
fs
jo
jle
jo
jl
test
std
ljmp
push
lods
es
pop
inc
adc
imul
and
xor
push
ss
jmp
pop
fldl
mov
mov
data16
xchg
xor
shlb
cmp
or
push
ret
mov
test
mov
nop
enter
out
mov
sub
inc
lds
xchg
icebp
jmp
cmp
mov
mov
popa
rcr
ja
outsb
mov
xor
pop
xchg
inc
ljmp
mov
push
jo
sub
aaa
fs
adc
dec
jg
and
rorb
cmp
fwait
loopne
xchg
ds
mov
bound
mov
sub
sahf
lds
fisttps
xchg
out
test
outsb
fs
call
adc
stc
lods
sbb
jno
pop
pop
les
mov
mov
rcrb
add
cmpsb
nop
xlat
or
push
xor
mov
inc
mov
cmpsb
push
mov
sub
pop
mov
xchg
cwtl
fildl
scas
scas
movq
out
sbb
scas
pop
push
and
and
stc
pop
stc
in
popf
ja
xchg
and
jle
mov
and
aad
sub
lock
sub
mov
and
xchg
call
imul
sbb
jl
xor
nop
movsl
inc
mov
sub
add
mov
js
lret
fstl
aaa
cmp
cltd
clc
es
call
shl
movsl
adc
stos
data16
cmpsb
popf
mov
mov
imul
pop
int3
or
stos
or
call
dec
insb
addb
xchg
insb
sbbb
pop
pop
jle
mov
sbb
ljmp
and
mov
ds
cmpsb
xor
pushf
mov
idivb
test
fcmovnu
mov
pop
mov
test
decl
mov
and
jb
inc
dec
sti
bound
ret
inc
adc
dec
not
adc
cmpsb
mov
outsl
add
test
cmp
jno
sahf
adc
xchg
dec
push
ja
push
pop
xchg
xchg
push
add
mov
cmp
mov
mov
jo
cmc
gs
andb
les
pop
cmp
addb
push
dec
pop
xchg
sub
xchg
dec
mov
imul
jmp
aas
fidivrl
sbb
bound
sub
cmpsl
sbb
js
jo
jle
jo
inc
xchg
mov
pop
jno
push
enter
les
out
insl
aaa
jns
out
mov
push
ret
das
sub
sub
int
pop
dec
cmp
inc
mov
ja
imul
enter
imul
mov
fnstcw
mov
push
jns
or
sub
jg
pop
or
mov
jnp
fwait
cmc
pop
push
inc
cmp
jbe
add
stc
jle
loope
mov
inc
sti
loopne
cmpl
jmp
lret
sub
insl
push
cld
in
dec
or
sub
call
dec
or
push
test
sub
mov
lods
and
scas
jl
lods
fnsave
or
push
jb
mov
sbb
pushf
stos
aaa
mov
push
add
lea
incl
mov
mov
push
les
add
dec
in
rclb
xlat
sar
inc
or
cmp
sarl
incl
je
mov
push
add
in
or
cmc
js
es
addr16
out
and
dec
xor
or
fnstenv
jmp
xchg
cs
jno
testl
push
in
fldenv
add
push
add
jns
sbb
movsl
inc
mov
sub
adc
jae
ficoms
ja,pn
hlt
lcall
nop
cli
xchg
jmp
jo
mov
int3
mov
and
and
sub
jle
and
loop
in
mov
pop
sbb
test
mov
mov
ds
fldcw
imul
loope
fwait
adc
lods
jbe
fadds
adc
jo
cltd
push
dec
pusha
fcoml
sti
add
fimuls
mov
xchg
popa
or
out
insb
pop
jg
push
mov
dec
xor
arpl
push
fadd
push
fwait
jnp
or
js
add
stos
jbe
mov
and
pushf
shr
sbb
in
fchs
mov
aas
mov
adc
loopne
in
mov
shll
cwtl
gs
hlt
std
leave
or
out
int
push
hlt
jnp
imul
push
pushf
inc
repnz
adc
fs
cmp
dec
stos
decb
nop
test
mov
jo
fwait
std
fwait
xcrypt-ecb
cmpsl
push
mull
cmc
and
sub
ret
rolb
addr16
out
xor
loopne
fmull
or
xor
mov
jmp
mov
jne
pop
push
fldenv
jmp
jo
jle
jo
lea
adc
adc
rcll
push
cmp
dec
cmp
mov
mov
mov
insb
mov
cmp
add
mov
aad
adc
pop
add
sub
or
jb
aaa
mov
addb
push
aaa
fisttpll
sbb
insl
add
int
call
xor
jg
adc
or
sbb
jl
pusha
negl
jno
push
imul
lcall
cmpsb
inc
or
repnz
push
bnd
dec
add
mov
je
inc
sbb
mov
jo
xchg
sahf
mov
outsl
push
push
lods
inc
pusha
fs
or
pop
sub
testb
push
add
or
arpl
xchg
push
sbb
call
rolb
ret
add
movsb
and
xchg
push
mov
xchg
fidivrl
sti
cmpsb
pop
or
or
push
in
ret
sbb
and
jp
mov
movsb
scas
pop
imul
fs
cmp
mov
js
xor
fwait
cmp
nop
cmp
lods
jno
sub
cs
pop
subl
hlt
jne
xor
push
dec
loope
in
and
jae
and
daa
movsb
int
scas
cmc
or
and
repnz
push
nop
jns
add
mov
sbb
inc
xchg
jp
fiadds
add
inc
xchg
mov
mov
les
or
pop
in
cmp
mov
adc
fs
xlat
and
mov
or
sbb
int
testb
pop
jo
imul
insb
daa
popf
jns
dec
frstor
loopne
rcl
leave
icebp
ret
imulb
aam
push
lods
nop
pop
daa
push
cs
xor
and
stc
sub
xchg
hlt
ret
lret
or
or
imul
adc
inc
inc
jne
push
stc
mov
jo
imul
push
fs
push
lods
mov
orb
lock
orl
inc
inc
testl
xrelease
lret
dec
ret
adc
jmp
insb
imul
arpl
je
jnp
and
cwtl
dec
scas
push
cmpb
dec
jecxz
outsl
and
lahf
xor
sub
imul
push
cmp
dec
loope
push
pop
adc
int3
stos
inc
shlb
lahf
shll
filds
xchg
int
pop
mov
jg
pop
adc
xor
xchg
xchg
push
sbb
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
sub
sub
xchg
push
mov
lock
loop
add
mov
mov
icebp
shlb
outsb
insl
enter
jp
test
pop
daa
stc
mov
sbb
mov
adc
push
lret
cmp
jl
bound
shlb
or
sub
icebp
popf
xchg
fiaddl
ljmp
xor
aas
xlat
lods
add
shlb
decb
pop
inc
pusha
cmp
in
les
or
mov
lret
imul
cmp
mov
test
sti
clc
sar
xchg
out
cmp
add
mov
in
add
js
jmp
mov
cltd
js
insl
mov
mov
xchg
ds
xor
xor
jb
popa
adc
adc
or
inc
push
cmpsb
pop
mov
dec
mov
pop
pop
dec
or
mov
fisubl
jae
rcrl
cmpsl
scas
xacquire
xor
inc
incb
icebp
stc
lahf
rorl
es
cmp
add
and
ds
fidivrs
pop
xchg
test
fisttps
fwait
jmp
pop
xchg
xchg
add
rcrl
stc
push
mov
mov
or
mov
and
adc
std
out
adc
sahf
xchg
or
outsl
iret
adc
sub
test
cs
clc
jp
sub
push
insl
movsl
add
xor
push
xor
adc
jecxz
push
ss
lahf
xchg
mov
fbld
adc
sbb
loop
or
cwtl
xchg
dec
nopl
mov
jecxz
in
je
mov
shlb
es
stos
out
seta
mov
in
insl
jmp
ret
out
int3
ret
fisubrs
in
ss
pop
xchg
aam
and
fcmovnb
xorl
std
dec
daa
pop
pop
aaa
push
add
stos
xor
and
cs
test
cmpsl
jmp
rcrl
outsb
fwait
xchg
inc
pop
jae
es
mov
loopne
pop
xchg
pop
std
icebp
or
add
pop
xchg
jmp
jmp
pop
outsl
adc
or
mov
mov
pop
das
fs
xchg
push
and
sbb
jns
out
adc
xlat
mov
fs
testb
ss
or
lret
fadds
dec
ret
loop
push
pop
imul
shll
scas
std
fistpll
xchg
test
mov
mov
sbb
xor
pop
mov
ret
rorb
imul
pop
into
sbb
xchg
out
arpl
sbb
pop
pushf
adc
in
mov
sub
add
push
fs
imul
in
add
dec
daa
imul
inc
ljmp
jb
add
div
mov
jmp
adc
inc
rolb
xchg
int
rcll
test
movq
jle
jo
pop
pop
ss
cmp
pop
or
push
inc
test
and
xor
das
pushf
mov
jae
negl
push
push
add
and
sbb
int3
iret
pop
lods
mov
mov
fs
js
xlat
test
cmpl
or
movsl
fistl
clc
mov
adc
inc
lea
js
xchg
push
ret
push
nop
push
clc
jbe
cmp
and
lock
das
in
jnp
mov
gs
adc
sub
push
jmp
lcall
arpl
movl
lea
mov
por
adc
push
pop
mov
cltd
pop
fcomps
pop
mov
insl
out
std
f2xm1
inc
inc
inc
sub
popa
icebp
adc
popa
and
adc
imul
mov
fisttps
jg
pop
iret
xchg
clc
mov
shrb
outsl
in
pop
daa
cmp
adc
loope
lock
xchg
dec
inc
dec
cmpsl
cld
cmp
inc
push
lock
push
nop
nop
cmc
xlat
push
loope
mov
push
pop
enter
mov
jmp
in
mov
daa
hlt
inc
jns
outsb
lds
subl
xchg
adc
dec
jmp
sahf
pop
adc
pop
xchg
pusha
bound
dec
rolb
lea
decb
cs
inc
xor
mov
mov
pop
and
dec
fcmovbe
mov
pop
push
fsts
ljmp
mov
stos
cwtl
push
mov
xchg
ja
je
cmp
ss
push
mov
xor
mov
mov
mov
inc
fiaddl
lock
mov
mov
adc
mov
push
nopl
mov
adc
call
shll
push
roll
test
shll
pushf
sarl
insb
xor
dec
inc
je
and
lret
in
icebp
pop
std
sbb
jle
in
jns
cmpsl
stos
nop
lcall
inc
ds
stos
ret
xchg
popw
sbb
add
xchg
cs
ret
xchg
jns
lds
into
xchg
test
and
mov
dec
xchg
in
mov
push
dec
out
decl
mov
inc
jl
scas
cwtl
fmul
sahf
dec
xchg
mov
push
cmp
or
mov
test
subb
mov
mov
dec
idivb
arpl
mov
cmp
dec
test
mov
rorl
xor
jmp
sub
mov
popa
pop
xchg
aas
and
or
jo
xlat
push
and
cmpsl
push
pop
fsub
or
sbb
xor
adc
add
mov
and
cs
adc
pop
mov
mov
movsl
cwtl
sbb
push
xor
mov
sarl
pop
pop
lcall
cmp
sub
add
lods
sub
stos
jmp
add
mov
jle
rcrb
imul
mov
decb
jo
ficoml
mov
dec
cmpsb
mov
movsb
out
clc
dec
sbb
and
add
es
ficompl
aad
jo
cmp
leave
outsb
and
sbb
inc
inc
inc
bound
sbb
jl
mov
or
arpl
sub
sbb
lea
sti
loop
scas
nop
pop
or
inc
push
xchg
add
mov
push
stos
mov
insb
cli
negl
mov
mov
and
xor
add
in
inc
sub
sub
ret
mov
pop
xor
xor
mov
es
shlb
dec
outsb
xor
daa
outsb
pop
xchg
cmpsl
inc
test
arpl
addb
cmp
das
xchg
xchg
mov
shrl
inc
ljmp
notb
outsl
dec
mov
int3
xchg
sub
loop
sbb
adc
push
fnstcw
test
int3
arpl
pusha
inc
sub
sti
sti
pushf
stos
lret
mov
sbb
lret
hlt
add
fmull
cli
sbb
rolb
enter
cmpsl
cld
add
inc
scas
cmpb
mov
ficompl
xchg
call
addr16
or
aas
pop
in
push
lahf
push
jae
nop
int
popf
pushf
lock
fcoml
cmpsb
stos
push
stc
ret
or
ljmp
les
xchg
fistl
ror
push
ret
sbb
es
jle
pop
pmulhuw
aad
into
add
addr16
lea
mov
stos
xchg
sbb
andb
jmp
or
push
data16
or
in
aaa
xor
clc
cmp
lods
dec
stc
pop
pop
inc
and
adc
mov
imul
push
fnstsw
iret
adc
sbbl
hlt
and
push
fwait
inc
jne
adc
and
xchg
mov
test
xchg
push
xchg
leave
xchg
enter
mov
lret
or
xor
aaa
das
inc
push
mov
lret
push
or
add
inc
aas
mov
scas
xor
xor
bound
iret
add
jge
mov
mov
jmp
dec
fistpll
arpl
pop
jp
sti
push
push
orl
jo
and
lret
pusha
sarb
int
xor
push
cltd
leave
xor
jns
pop
fimull
sbb
test
and
cmpsb
sti
add
mov
out
in
repz
jge
lea
lea
jl
xor
mov
add
fwait
lret
push
sbb
cmp
mov
jbe
test
or
dec
nop
xor
rcrl
and
push
xchg
les
push
xor
mov
divl
lods
fs
lret
mov
push
rorl
cmpsb
dec
loope
pop
pop
or
xor
sbb
fnstsw
sub
cmp
int
es
cmpsl
inc
cwtl
mov
fwait
xorl
dec
imul
popa
test
loopne
ds
lods
inc
jl
mov
push
push
imul
test
adc
sbb
xchg
cwtl
pop
pop
jno
mov
out
sbb
iret
cmpsl
lods
xchg
xorl
pop
ror
add
pop
fs
dec
xor
mov
pop
push
lds
jle
jmp
adc
arpl
test
cmp
les
aam
inc
mov
or
xor
movsl
jg
jae
xchg
shlb
aaa
xor
fistpl
cmpl
negl
jg
inc
jecxz
mov
push
inc
ja
sbb
mov
sub
xor
push
dec
jge
cmp
sub
test
mov
enter
leave
js
xchg
lret
pmaxsw
or
push
mov
xchg
xchg
or
jg
pop
pop
cs
rep
addr16
mov
fidivrs
jbe
shl
test
mul
in
jge
lret
outsb
push
test
cltd
lea
cmp
lret
mov
out
icebp
jbe
cmpsl
mull
rclb
push
popa
fdivs
cltd
mul
jae
daa
daa
xchg
clc
lahf
xchg
jb
outsb
cmpsl
mov
jg
lcall
mov
shll
push
push
repnz
loop
add
mov
mov
or
movsl
xorl
and
lcall
test
add
mov
das
aaa
xchg
out
subb
jmp
repz
arpl
lcall
scas
adc
xor
mov
aas
faddl
push
mov
and
aam
shlb
add
mov
dec
and
out
sti
pop
out
out
adcb
stos
jecxz
cmp
mov
dec
insb
das
decb
pop
jo
jge
xchg
movsb
mov
fs
fimull
lret
pop
xor
dec
or
sbb
or
rorl
add
call
roll
imul
mov
xor
jmp
adc
iret
cmpsl
aad
jae
jl
jge,pn
shl
add
pop
jg
mov
sub
xor
cwtl
frstor
ficomps
push
mov
icebp
jmp
gs
xchg
adc
mov
pop
ss
ja
mov
out
and
insb
int
out
mov
xchg
dec
dec
mov
push
rorl
push
stos
dec
push
xor
leave
sub
in
imul
mov
push
adc
sahf
int3
push
aas
jecxz
andl
aas
push
mov
cmp
jnp
adc
dec
dec
mov
adc
int
mov
xchg
lea
dec
bound
ljmp
add
jl
imul
call
cld
dec
scas
sbb
test
sub
and
mov
lods
loop
mov
addr16
inc
lods
sbb
or
jecxz
sub
xor
mov
and
mov
pop
push
pop
xchg
daa
fdivrs
and
popf
in
ja
pop
push
inc
or
and
leave
mov
xchg
sbb
or
cld
dec
ja
in
sub
and
nop
in
push
shr
bound
fldt
imul
dec
pop
mov
push
cltd
test
mov
out
pusha
jp
pop
mov
fsts
add
sub
fwait
adc
test
mov
mov
cmp
adc
test
adc
jb
sub
push
jle
sahf
lahf
push
and
test
mov
fld
cwtl
stc
and
jo
lds
dec
and
aas
leave
mov
sub
cmpsl
mov
and
cmp
rorb
ret
pushf
repz
andb
ret
pop
insb
jo
xchg
and
push
jo
cld
cwtl
repnz
test
sbb
dec
test
or
jae
add
fmul
iret
mov
pop
cmpb
inc
push
out
out
xor
xchg
sbb
and
ret
pop
data16
inc
ret
jns
sbb
adc
xchg
mov
jge
insb
cwtl
mov
aam
sti
jecxz
xchg
and
data16
clc
jp
sub
push
cmp
add
lcall
in
adc
gs
jne
push
cmpsb
sub
xor
ds
cmp
in
clc
outsb
mov
xor
aaa
mov
shrl
or
sahf
sub
mov
ds
pop
subb
cltd
out
fists
movb
dec
mov
jno
bound
xchg
sub
scas
sbb
es
imul
mov
pushf
jb
add
enter
icebp
decl
add
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
jmp
or
shll
jno
jmp
lds
movswl
adc
jo
jle
jo
and
stos
add
daa
fstpt
sub
jne
xchg
inc
sbb
das
jo
repz
lret
push
mov
push
jne
push
jecxz
sub
xchg
xlat
std
fidivrs
sbb
xor
xchg
loop
pcmpeqd
test
sub
inc
pop
call
sti
add
rolb
xor
rclb
cld
add
pop
mov
jne
push
xchg
ficompl
movsl
sbb
movsl
popf
pop
jb
dec
jbe
mov
pop
sub
shlb
adc
inc
scas
icebp
mov
nop
enter
iret
mov
adc
and
xor
sti
dec
add
inc
pop
or
mov
movsb
sbb
outsb
xchg
aaa
mov
mov
fcmovne
es
aad
inc
loopne
inc
js
jmp
cli
push
push
aad
outsb
sub
push
adc
lret
push
xchg
sti
mov
je
xchg
add
sub
cmpsb
lods
pop
sbb
ret
outsl
neg
xor
dec
pusha
xor
dec
dec
mov
aaa
pusha
adc
jl
xor
shll
push
icebp
sbb
pusha
dec
jmp
xor
cs
inc
jb
lods
add
cld
aas
in
jno
xchg
jmp
inc
push
in
repnz
push
mov
jge
in
xor
push
and
cltd
negb
int
push
jb
adc
movhps
mov
jae
xlat
cmp
fnstcw
lea
movsl
in
xchg
aam
dec
mov
mov
add
fildll
imul
add
ja
pop
xor
js
and
fs
mov
adc
int3
sub
bound
out
dec
mov
sub
xor
adc
icebp
sarb
push
test
mov
jecxz
cmp
cmpsb
int3
out
in
lgs
in
sub
mov
das
xor
out
gs
mov
push
mov
test
mov
inc
cmp
out
insb
dec
test
sahf
pop
sbb
or
rcll
cmp
push
xchg
orl
push
into
fsubrs
jo
rorb
int3
pop
sbb
jl
fisttps
push
divl
popf
mov
enter
cmp
sbb
rorb
xchg
outsb
fs
mov
dec
faddl
movsl
push
jne
push
sub
cmpsl
and
lds
sbb
into
push
sbb
jne
inc
pop
mov
cmc
leave
sbb
aad
mov
inc
and
inc
or
stc
jle
std
add
lds
outsl
js
jl
loop
hlt
cmp
mov
push
pop
push
pop
inc
xchg
sub
jmp
cmc
icebp
lret
mov
test
jnp
cli
push
jo
jle
jo
dec
dec
enter
sub
icebp
mov
aam
ffreep
pop
cmp
dec
ffree
gs
addl
adc
mov
fiadds
push
stos
jo
mov
test
jno
popf
add
aaa
sbb
mov
test
aam
rorl
push
cmp
xchg
in
pop
jne
or
outsb
sbb
inc
sub
pop
clc
sti
ljmp
gs
test
dec
enter
xchg
test
dec
imul
and
push
jo
pop
cmp
je
out
aas
cmpsb
enter
xchg
ds
jmp
sub
fildll
mov
mov
sub
push
and
sub
and
cld
jmp
inc
cli
xor
pop
das
scas
sub
pop
cmp
in
rclb
int3
loop
adc
pop
enter
cltd
daa
clc
dec
jmpw
pop
out
or
push
pshufw
adc
roll
icebp
pop
push
outsl
filds
outsl
sbb
sbb
pop
std
rorl
out
lods
sbb
pop
fldenv
frstor
inc
scas
lock
or
test
xor
or
inc
sbb
mov
dec
call
loopne
in
jne
pop
adcb
mov
xchg
fcoms
pop
push
jmp
lcall
jb
xchg
mov
xor
pushl
stos
ret
xchg
daa
mov
mov
into
mov
jae
mov
orb
repnz
insl
mov
mov
icebp
push
sbb
arpl
mov
adc
and
imul
sub
jb
insl
lock
hlt
add
push
lahf
pushf
mov
sbb
xchg
xchg
or
add
es
lret
pop
pop
adcl
inc
outsl
out
add
adc
add
in
push
add
mov
out
xchg
lea
xchg
xor
pop
pop
push
xchg
lea
ret
push
jge
enter
jbe
dec
mov
push
out
out
push
cli
mov
hlt
into
pop
pop
push
movsb
sbb
imul
or
out
sarb
pop
mov
mov
xchg
fadd
pop
outsl
insl
aam
lock
jns
or
out
inc
fisttpll
ja
jmp
add
inc
xchg
add
cmovne
lcall
movsb
loopne
mov
xorb
mov
loop
jae
pop
out
xor
clc
push
movsb
cld
mov
out
inc
popf
imull
testl
scas
mov
bnd
test
out
push
popa
je
xlat
sbb
lret
jmp
cmc
std
fs
jno
mov
push
xor
jo
jle
jo
and
rorl
cltd
mov
popa
les
mov
mov
cmp
xor
or
jne
aad
jge
ret
and
fistps
push
mov
leave
xor
push
cmpl
inc
ja
and
jno
aam
mull
mov
and
dec
dec
xchg
stos
mov
int3
pushf
adc
test
sbb
dec
in
mov
aad
into
push
push
popa
jge
xlat
add
xchg
call
testl
mov
aas
fwait
lea
xlat
sti
arpl
xchg
jle
dec
push
sub
mov
cs
jmp
fidivrl
mov
aam
in
insb
enter
xor
insb
cmp
sub
jecxz
mov
fs
mov
jmp
lret
cwtl
push
jns
mov
cmpsb
lcall
js
lods
jp
in
xchg
rcrb
and
cmc
test
push
jle
aas
js
push
push
loopne
sub
jmp
pop
and
push
leave
inc
into
and
pop
out
pop
popa
jge
dec
into
sub
or
sub
into
cltd
shll
dec
and
dec
jno
fcompl
repnz
jb
leave
jg
xchg
jbe
and
divb
lods
xchg
aaa
cmc
cmp
ret
dec
mov
sbb
xchg
cld
addr16
subl
add
aaa
mov
xor
sbb
push
imul
insl
stc
das
mov
testb
cmp
or
inc
adc
sub
rolb
ss
push
jmp
daa
cmpsb
js
mov
cli
sub
sub
xor
inc
cmp
movhps
shrl
xchg
and
nop
fcmove
xlat
mov
insl
add
push
ja
fmuls
insl
das
xchg
mov
mov
lea
mov
and
jb
adc
inc
mov
fwait
insb
xchg
and
sti
adc
add
add
movsb
inc
sbb
pop
mov
orl
inc
mov
popa
cmc
scas
dec
cmpsl
jmp
jl
mov
fiaddl
sahf
cmpl
sbbb
and
sub
xchg
jnp
mov
jge
pop
dec
lahf
std
movsl
xchg
ja
dec
jle
mov
adcl
cld
jnp
mov
ljmp
pop
out
inc
sbb
lds
xchg
or
inc
movsb
icebp
and
mov
insl
in
lcall
in
filds
add
outsb
ds
loopne
outsb
outsb
mov
lods
sbb
out
sbb
jo
jle
jo
stos
inc
pop
cmp
mov
and
scas
adc
push
dec
xor
jns
add
arpl
out
xchg
lahf
les
xchg
sahf
push
aam
outsb
or
mov
leave
cli
and
xchg
and
mov
adc
jbe
lret
adcb
cmp
pop
sub
gs
mov
das
in
xchg
fs
fwait
jmp
ss
rclb
adc
or
out
dec
icebp
xchg
adc
push
js
ret
sub
ds
fldl
add
ds
add
pop
sub
jbe
push
std
jge
xchg
in
stos
cmp
mov
inc
test
xor
jecxz,pt
or
mov
mov
into
jl
pop
jne
push
hlt
cmpsl
add
fldz
test
mov
ds
out
inc
push
aad
xchg
add
daa
cmp
rcrb
xlat
mov
inc
cli
dec
mov
mov
fisttps
lods
out
bound
and
popf
pop
dec
out
mov
jg
test
scas
subl
out
lods
sti
sbb
lcall
xchg
pop
mov
pop
les
mov
xor
ret
push
fwait
repnz
mov
test
pop
push
fwait
mov
xor
push
inc
lods
mov
fs
int
in
mov
or
push
fistl
xchg
and
adc
push
fs
repz
hlt
add
loope
rcll
outsl
and
cmp
mov
test
lea
inc
and
adc
sbb
dec
stos
jmp
push
into
mov
and
xor
mov
pop
adc
data16
stc
outsl
std
push
dec
mov
mov
fsubrp
testl
jae
mov
outsb
xchg
or
cbtw
ret
out
outsb
nop
xchg
push
jmp
jae
je
subl
push
dec
arpl
dec
stc
and
int
and
xor
sbb
sub
mov
popl
repz
mov
sbb
addb
xorb
jge,pn
xorl
outsb
loope
les
inc
lahf
pop
lods
test
adc
xchg
aad
sub
or
cmp
pusha
mov
inc
jne
pop
mov
test
and
add
mov
add
sub
cmp
stos
push
push
es
or
lea
cmp
sub
add
stos
push
lods
aad
mov
rcl
mov
fstl
mov
add
imul
add
xchg
push
xor
mov
jmp
cmp
push
add
data16
and
aam
sub
mov
xchg
add
shlb
and
jnp
aam
dec
lock
test
fwait
cli
loope
cmp
mov
mov
jle
int3
nop
jge
inc
data16
out
or
cmp
inc
jl
push
inc
and
fstpl
sar
aad
xchg
jecxz
int
push
cmc
outsl
repnz
jg
dec
xchg
andl
mov
dec
dec
mov
test
adc
pop
pop
lret
enter
inc
mov
lret
mov
adc
out
xchg
leave
inc
shll
int
adc
push
mov
push
xchg
jo
rorl
xor
add
movsl
in
call
xorl
xchg
out
jae
scas
in
lock
fcmovbe
and
adcl
jnp
dec
cli
enter
fs
inc
or
ret
sub
rcll
jns
adc
sbb
sahf
xchg
leave
push
dec
fnstsw
and
push
add
push
hlt
mov
pop
xlat
or
jl
and
arpl
mov
test
push
ret
xor
jae
jae
jne
mov
push
fwait
mov
sub
addb
mov
inc
xor
mov
jnp
subb
xchg
outsl
or
xchg
iret
adcb
test
out
mov
inc
sbb
in
mov
ss
sti
dec
enter
add
mov
rcl
out
fwait
sqrtps
pop
push
loopne
aaa
mov
mov
xchg
sti
xlat
jno
cmovb
dec
jmp
xchg
loope
xor
jl
pop
sbb
or
fsub
fldcw
pop
mov
shlb
das
adc
xor
in
push
adc
xchg
daa
arpl
xchg
or
je
inc
mov
scas
stos
sbb
add
ljmp
pop
mov
fbstp
roll
jns
push
decb
jbe
mov
push
inc
in
jno
orb
cmp
mov
dec
and
mov
pop
mov
fnstcw
sarl
xchg
adc
scas
daa
jae
push
pushf
add
jo
fiaddl
jecxz
push
out
mov
shrb
mov
insl
sub
in
mov
shlb
cmp
push
jnp
pop
adc
aas
sub
inc
div
pop
push
mov
shll
outsl
fnsave
inc
roll
push
pop
cmpl
jo
in
leave
in
lcall
dec
inc
add
dec
jmp
fsubp
stos
mov
insb
leave
pop
sub
cmp
xor
jo
jg
mov
fsubl
movsb
sub
pushf
push
into
sti
and
dec
add
mov
loop
inc
clc
push
add
ja
jae
gs
push
repz
sti
enter
dec
inc
push
mov
cmc
or
adc
jnp
in
fwait
or
push
stos
dec
cmp
loop
int
jl
mov
cwtl
pop
xor
fdivrl
into
or
repz
add
mov
inc
inc
or
add
cmp
mov
pop
fimull
ds
jne
popf
push
push
sub
lcall
mov
push
mov
push
inc
xchg
lds
inc
loope
ret
adc
cs
or
mov
cmpsl
lret
xchg
sbb
mov
je
arpl
popf
mov
jge
mov
outsl
pop
jp
dec
js
push
fcmovnb
aam
xchg
movl
loopne
mov
jmp
imul
popa
inc
ficomps
dec
pop
ret
pop
mov
stos
test
rcl
pop
push
add
dec
mov
fstp
les
push
loope
jns
jae
inc
idivl
and
push
mov
scas
pop
rcll
sbb
pop
and
pop
push
int3
js
roll
jg
pop
mov
and
xchg
mov
imulb
cwtl
mov
cmc
jl
sub
aam
mov
jae
cmp
mov
lea
mov
fisubl
xchg
dec
cmc
psrld
jnp
dec
daa
sub
test
js
push
cmp
sti
iret
sub
test
movsl
inc
aad
dec
lret
idiv
xor
jne
dec
ficoml
and
jb
int3
jmp
mov
jns
push
and
inc
jns
sbb
cmp
lods
lret
in
push
movsb
pushf
cld
ficomps
lds
inc
dec
jnp
test
cmp
lahf
mov
mov
adc
push
in
push
xor
bound
andb
in
cmpsb
sbb
jbe
int3
and
outsb
pop
nop
lds
test
movsl
ds
cmpsb
lds
xor
out
in
mov
les
lret
mov
pusha
lock
jno
cwtl
sub
or
out
xor
sub
dec
inc
xor
pop
mov
sbb
mov
lea
xorb
icebp
loope
pop
inc
out
adc
movsb
inc
mov
addl
mov
pushf
dec
inc
add
jg
push
pop
ret
push
mov
xlat
inc
out
and
cmp
out
push
aaa
pop
xor
or
or
push
aas
idivb
jmp
rolb
pop
hlt
pop
mov
pop
jmp
cld
pop
cmpsl
addr16
gs
mov
mov
jg
mov
icebp
imul
adc
arpl
lock
fs
xlat
fs
cmp
xchg
in
shlb
sbb
lahf
pop
and
inc
jp
push
mov
mov
pop
jne
adcb
loope
mov
cltd
flds
pusha
jp
mov
add
pop
push
jmp
and
pop
jne
repnz
imul
ja
push
push
out
jecxz
pop
xchg
sbb
adc
add
pop
fisubrs
adc
pushf
insl
xchg
ds
popl
add
loope
movsb
cltd
sbb
scas
rorl
shl
xlat
fisttps
xchg
repnz
aam
daa
inc
lock
jb
in
mov
repnz
push
push
popf
jge
subb
cmp
leave
xor
pusha
add
iret
sbb
lcall
fistps
cmc
sbb
jb
fdivp
sbb
mov
int3
and
cli
pop
mov
test
cmp
dec
mov
sbb
aaa
mov
rolb
incl
adc
pop
sub
aas
popw
call
ret
inc
addl
inc
jge
punpckhdq
fistpl
pop
rorb
inc
mov
imul
sbbl
jae
aad
jp
cltd
mov
mov
loop
loopne
mov
decl
mov
add
es
add
cmp
jge
jp
xchg
ret
cmp
xor
xchg
addl
iret
jno
or
aaa
hlt
mov
push
sub
inc
testb
pop
je
cltd
add
and
cld
ret
dec
inc
mov
mov
inc
jmp
pop
jns
and
jb
and
ss
sbb
or
stos
add
scas
push
mov
lds
repz
js
inc
xchg
cli
sub
ljmp
outsl
inc
scas
test
mov
inc
lahf
xor
cmp
mov
int3
mov
inc
sub
in
stos
xorl
pusha
lret
int
mov
pop
pop
xor
mov
inc
je
adc
inc
push
add
scas
rorb
call
rol
sahf
mov
arpl
xor
xchg
mov
xor
ror
lds
jp
ljmp
xchg
bound
popf
ja
js
gs
inc
push
or
movsl
test
xchg
pushf
mov
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
