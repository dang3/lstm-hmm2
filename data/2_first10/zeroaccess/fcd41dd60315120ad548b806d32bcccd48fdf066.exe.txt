push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
or
mov
mov
mov
sbb
mov
mov
orl
push
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
push
jmp
enter
fldenv
add
ds
arpl
addb
jl
aam
ret
rol
in
lret
fmul
cli
icebp
fmul
aam
adc
rcl
xchg
mov
loopne
cli
jmp
leave
xor
icebp
xor
neg
aad
int
fnclex
out
repz
ljmp
out
ret
clc
fxch
in
leave
icebp
hlt
dec
cmp
rolb
repnz
in
fildl
shl
sub
shl
xlat
stc
aas
adc
out
out
test
mov
iret
cld
fdivp
jecxz
hlt
jecxz
aaa
ret
fcmovu
neg
in
iret
out
lock
in
lock
in
aad
jmp
sti
call
aam
int
int3
out
ds
fmulp
sti
out
fmuls
hlt
icebp
rol
repnz
aad
xor
lret
sarl
cld
hlt
cmp
ret
loopne
out
sti
xchg
call
jecxz
iret
cmp
lock
cmp
jecxz
test
test
cmp
std
jmp
rcr
out
xlat
icebp
shll
fsubr
in
out
ret
aad
filds
test
out
enter
cmc
mov
iret
leave
cs
xlat
cmp
into
aaa
int
cmp
clc
cld
fcomp
fld
les
in
in
int
cli
lret
hlt
iret
cmp
cmp
ret
out
xchg
fimuls
ljmp
aam
incl
sti
lock
add
fsub
cli
icebp
mov
repz
rol
lret
iret
cld
fcos
idiv
enter
xor
cmc
mov
fisttpll
out
lock
lock
leave
cmp
repnz
sub
cmc
rcr
in
jmp
in
xchg
jmp
repz
ljmp
lret
out
loopne
rcr
fmuls
loope
ljmp
icebp
jecxz
aad
xor
iret
test
ds
fabs
loopne
xchg
icebp
cld
std
test
int
out
out
stc
fistpll
fsub
shl
repz
xchg
into
out
aad
xlat
out
xor
fxch
cld
idiv
hlt
xchg
xlat
out
call
out
leave
loope
in
xlat
in
sub
std
cmp
sti
aas
hlt
fucomi
lock
out
in
repz
out
loopne
xchg
mov
std
shrb
sub
out
lret
out
aaa
fdiv
rol
aad
fadd
shl
cmp
cli
out
sti
leave
clc
repz
int3
out
fcomp
int3
ds
cli
xor
out
ret
in
stc
jmp
out
icebp
mov
xchg
addb
xor
aaa
sarb
iret
rol
cmp
ret
stc
ljmp
xlat
int
iret
xor
stc
lock
xor
into
leave
loope
mov
sub
into
xor
ljmp
lret
in
fdivr
ljmp
test
xchg
xchg
hlt
int
iret
xor
cld
cmc
xor
fcom
jecxz
rol
cld
xchg
jmp
test
in
xor
xor
test
lret
out
not
aas
test
rorb
loope
int
lock
in
in
out
int3
fcmovne
icebp
inc
in
test
cmp
lock
xor
fdivrs
hlt
fmul
cmc
loop
cmc
xlat
call
jecxz
stc
xchg
faddl
lret
icebp
xor
fidivl
cmp
out
lock
filds
faddl
xchg
ret
cmp
in
fsubr
ss
idiv
rcl
test
out
repnz
call
call
shl
jmp
in
cmp
icebp
jmp
clc
mul
ss
push
in
xor
loop
rcr
shl
ret
cli
hlt
hlt
icebp
cmp
cmp
out
stc
f2xm1
not
in
cmp
test
xchg
ds
icebp
in
cmp
xor
cmp
cmp
testb
int
incb
lret
jmp
ljmp
icebp
fstp
out
loope
mov
test
into
rclb
ss
std
iret
aad
lret
repnz
cmp
hlt
cld
sti
in
mov
int
loope
lret
fcmovb
repz
out
aas
shl
sbb
fadd
fcmove
addb
das
in
out
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
enter
lret
xor
inc
and
lock
addb
jl
in
cmp
aad
into
test
incb
cmc
ljmp
mov
shl
xor
repnz
shl
lret
std
out
aam
lret
out
cld
jmp
loop
mov
call
xorl
in
clc
dec
int3
out
loopne
decb
xor
aam
ljmp
out
ljmp
mov
sar
jmp
lock
in
idiv
vpmaxsw
mov
mov
fstp
iret
ljmp
xor
xor
lret
aad
in
cmp
mov
ficoml
cmp
icebp
div
stc
xlat
cmp
sarb
fstpt
les
in
cli
out
iret
jmp
fnstenv
cmp
cmp
fsubrp
enter
ret
xchg
aam
int
vpmacssdql
into
ret
cmp
sarl
fcom
xlat
aas
lock
test
out
fadds
mov
rcl
shl
call
call
rcr
mov
int3
fldl
in
shl
into
sar
cmp
loopne
ror
sar
hlt
lret
out
hlt
in
into
ffreep
lea
lret
sti
in
cld
sti
ss
repnz
cmp
ret
sti
flds
roll
shll
xor
repnz
lock
fucom
lret
jmp
out
shl
xor
cli
ss
jmp
ds
fsub
out
sti
std
orl
in
shl
fsubr
in
ljmp
out
lock
repz
jecxz
in
add
fstp
leave
cmc
lret
lock
jmp
jmp
iret
fprem
cmp
ljmp
call
int
cli
xchg
sbb
ror
icebp
enter
aaa
int3
not
clc
ror
fiadds
test
xchg
and
xchg
loope
into
lock
div
jmp
iret
in
fnstcw
in
enter
lret
jecxz
loope
mov
out
rcr
neg
lret
cmp
fidivs
and
sbb
fcmovb
call
leave
nop
xchg
ror
hlt
das
out
xlat
xor
les
ror
out
cld
sti
repnz
aad
ror
in
fcmovnb
loop
repnz
in
shl
out
cmp
cmp
ror
xor
stc
aam
std
sti
aas
in
out
sti
icebp
fdivr
filds
loopne
test
iret
cli
call
sar
into
cld
in
stc
and
xchg
aam
fcomi
out
call
out
cmp
dec
repnz
loopne
jmp
lock
repnz
fidivrs
leave
hlt
fmulp
cli
cmp
fnstsw
neg
in
iret
xchg
test
loopne
leave
hlt
out
sarb
aaa
xor
lock
shr
test
xlat
out
mov
lea
sar
xor
jmp
ljmp
rol
call
cli
iret
xchg
lret
mov
jecxz
out
out
in
shll
sarl
int3
clc
cmp
fsubr
aad
addl
repnz
shl
fdivrs
xabort
inc
fdivr
add
fldl
in
shr
add
out
fcomi
leave
out
leave
fsubr
cmc
xor
sti
out
rcr
cli
out
jmp
addb
xor
shl
int
fsubr
test
loope
cmp
test
cmpb
int3
out
fldl
fsubp
shl
hlt
in
cmp
ljmp
out
call
call
nop
jmp
shr
xor
std
xor
std
in
fstp
clc
sti
fnstsw
sbb
test
cmp
mov
lock
das
xor
shrb
cld
lret
fstpt
repnz
aad
ret
loope
ljmp
cld
jecxz
out
int
lret
shl
out
fidivs
rol
xlat
test
add
lea
mov
in
iret
xor
leave
int3
in
rcr
enter
loopne
sti
and
jmp
in
clc
fistl
mov
jecxz
ror
cmc
ljmp
fsub
rorb
sbb
ret
loopne
jmp
ror
xor
int
sti
call
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
adc
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
mov
lea
mov
mov
sub
and
mov
jmp
lret
aad
fcmovu
adc
scas
dec
loop
or
jl
addb
jl
fucomp
lock
loop
mov
mov
xor
cmp
in
aad
clc
xlat
rol
stc
cmp
test
cli
test
ret
ljmp
xchg
cmp
xor
ljmp
cli
iret
in
repnz
fucom
mov
lret
cmp
fcmovbe
out
fnstcw
inc
cmp
xlat
mov
sub
out
out
cld
in
xor
lock
fptan
in
shr
repz
rol
std
out
sarb
shl
lea
int
cli
vprotb
in
leave
cmp
xor
xlat
add
cld
out
cld
shr
hlt
int
jmp
fisttpll
aaa
xor
leave
enter
div
sar
adc
test
test
jmp
nop
call
shl
rcl
ljmp
loopne
hlt
shl
sti
sti
add
xlat
orl
cmp
cmp
sarl
int
into
enter
filds
enter
orb
cmc
xor
int3
loop
fcmovne
cmp
ljmp
cmc
cmpb
into
clc
lret
mov
in
mov
xor
jecxz
ret
clc
int
sti
icebp
fcomp
roll
mov
lret
icebp
xor
clc
in
fxch
leave
lock
rol
ss
sarb
xchg
ljmp
in
jmp
aas
hlt
aam
cld
rol
loop,pt
cmp
cld
lret
out
ljmp
xor
xor
in
idiv
not
fiaddl
mov
or
rcl
int
xor
jmp
ljmp
fcmovnu
aad
sarl
jmp
inc
out
repz
xor
int
fmul
jmp
cmp
xlat
repnz
test
xor
xchg
mov
out
iret
shrl
jecxz
fldln2
frndint
ds
int3
sti
in
jecxz
out
in
out
out
rcll
loop
not
rol
in
idivb
rcr
loop
shl
rol
test
fiadds
add
idivl
call
shl
fdivrp
fadd
clc
rolb
mov
icebp
ret
mov
repz
rol
lret
stc
fnstsw
sti
cmp
sti
rolb
lret
mov
mov
test
enter
imul
out
repz
call
enter
clc
in
sar
xlat
mov
sub
jmp
fsubp
in
out
hlt
out
jmp
in
cmp
sti
cmpl
call
shl
mov
out
lret
xor
leave
fcmovnbe
loop
cli
aad
addl
xchg
int3
enter
out
lds
fcomi
aad
jmp
cmp
out
xlat
incl
shl
in
mov
cli
loop
nop
sub
into
shlb
in
stc
cmp
int
aad
div
loopne
jmp
lret
mov
loop
out
shr
fucomp
cmc
repnz
into
cld
xlat
addl
loop
repz
ds
aam
fdiv
fcmovne
shr
stc
xlat
neg
in
xchg
fdivr
ljmp
into
call
lret
enter
fcmovbe
mul
jmp
loopne
fxch
xchg
fimuls
ror
stc
aaa
xlat
fucomp
adc
xchg
repz
fdiv
loopne
jecxz
jecxz
rorb
stc
ss
f2xm1
jmp
aas
loopne
test
jmp
sti
out
test
aam
cli
std
fdiv
cmp
cmp
icebp
test
out
adc
out
leave
ljmp
rol
cmp
div
jmp
stc
cmc
std
in
loopne
cli
cli
jmp
fstp
out
in
mov
in
xchg
cmc
xor
aaa
aam
cmp
fdivr
aam
xlat
fdivr
repz
sar
hlt
out
iret
iret
test
fcmovnu
fcoml
jmp
int3
cmp
std
ss
lock
in
jmp
lret
test
hlt
xchg
loope
enter
xor
adc
faddp
test
not
int3
enter
rol
mov
jecxz
jmp
int
cmc
enter
fcomp
xlat
loop
add
jmp
les
int3
in
shlb
int
lret
cmp
cmc
rolb
inc
or
or
mov
orl
jmp
rol
aas
ror
daa
jae
fimull
mov
jl
addb
jl
aam
test
call
lock
in
lret
lret
xor
int3
cmp
cmp
cmp
push
xchg
jmp
loop
aam
lret
loop
xchg
loope
cmc
das
xlat
fmul
cli
fdivrl
cmc
roll
cli
fimuls
repz
in
xor
jecxz
hlt
ljmp
fsubp
repnz
icebp
jmp
ljmp
jecxz
call
call
cmp
cmp
aad
aad
test
cli
cld
sub
fiadds
cs
sarl
shr
jmp
xchg
mov
repz
ret
cmp
cmp
adc
in
fldl
in
cmp
nop
in
repnz
aas
into
xor
cli
in
in
in
jmp
inc
sti
test
aad
cmp
sti
jmp
in
rcr
mul
out
int3
xor
std
repz
std
repz
ret
loopne
fmulp
fld
mov
iret
sar
in
ds
in
out
aaa
cmc
cmp
std
cmc
shl
or
cld
icebp
xchg
std
fcomip
iret
int
loope
icebp
sar
aaa
enter
roll
fsubr
mul
loop
lock
mov
mov
in
ror
std
aaa
mul
jmp
int
sub
xchg
mov
xchg
int
call
out
cmc
int
aad
sti
out
jmp
cmp
aaa
ss
cld
in
fucomp
test
lret
mov
shr
lock
sbb
cmc
out
into
shr
loopne
enter
roll
lret
in
aad
clc
dec
ljmp
sti
hlt
fsub
enter
int3
icebp
iret
test
aas
cs
xor
aam
shll
std
int
in
lock
sbb
fld
cmc
idiv
leave
ret
out
or
jmp
fucomp
fistpll
cmp
sti
out
filds
int
int3
loopne
loopne
rorb
leave
out
cmp
cmp
fpatan
ret
in
cld
addb
std
int3
call
shl
xor
ss
in
rcr
in
ds
ljmp
enter
loop
call
int
cmp
aaa
enter
fcmovnu
out
xor
decl
into
fimuls
in
xlat
in
repnz
enter
ds
jecxz
mul
neg
in
lret
xchg
int
shl
xor
cmp
out
aas
into
ffreep
rcl
cmc
jmp
sbb
out
fidivs
fcmovnbe
shr
xlat
repz
cli
in
fdivr
hlt
fucomp
mov
ljmp
lret
cmp
out
cmp
hlt
jecxz
filds
vpmacssdqh
sub
repnz
cmp
hlt
aas
cli
shl
aad
in
call
test
cmp
ret
shl
in
icebp
xor
cmp
fiaddl
cmp
std
fmul
faddl
in
xlat
int3
aad
aam
ljmp
clc
std
fadd
hlt
ret
in
cli
adcb
xor
int3
into
div
cli
shl
cli
ds
sti
ret
aad
xchg
leave
neg
test
repnz
repz
out
int3
cli
in
lock
int
aas
repz
loope
cli
out
sbb
fucomip
int3
cld
fucom
mov
shl
in
loopne
out
in
fcmovne
cmp
ljmp
rolb
clc
stc
jmp
shl
jmp
loope
jecxz
incl
addl
cmc
icebp
iret
in
fmul
aad
into
aad
jmp
ss
roll
dec
jmp
mov
xor
ret
neg
aad
cmp
ror
stc
cmp
cld
mov
lret
loopne
jmp
fcomi
into
xlat
fcmovnu
fsubrp
sti
fstp
sar
ret
rcl
in
decl
adc
shl
stc
fdivrp
fcomi
and
fdivr
cmc
test
jmp
fucom
loop
lret
lock
out
cmp
xor
ror
out
add
in
lret
icebp
int3
jecxz
les
fsub
cmc
xor
cmp
cmp
cmp
sarl
lret
enter
xor
add
mov
add
add
mov
movl
lea
jmp
ror
rcl
fcmovnu
ror
and
and
adc
jl
addb
jl
xchg
vpcomw
xor
cs
std
clc
ss
fiaddl
clc
cld
mov
clc
out
out
lret
xchg
xchg
orb
repz
iret
cmp
hlt
xlat
cld
cli
addb
test
jmp
rcl
idivb
ss
ret
int3
cli
jmp
hlt
in
out
mov
ljmp
clc
xor
aad
aaa
xor
loope
in
out
lock
rol
movl
shl
xor
xor
ss
cmp
repz
test
mov
sti
in
out
adcl
stc
out
fxch
in
cmc
aam
idiv
rcr
ljmp
ret
repz
imul
mov
cmp
ljmp
loopne
mov
into
test
mov
out
out
hlt
out
sar
xor
lock
fnclex
fxtract
shl
ds
cli
and
in
call
adcl
aam
clc
xor
and
rolb
fildl
jecxz
sub
in
fcmovne
sti
cmp
cmp
lock
sar
loop
jmp
cmp
xchg
iret
mov
xlat
int3
lock
xor
fcmovu
cmp
push
cmp
shl
testb
mov
repz
ljmp
xor
cld
cmp
out
in
cmp
test
sbb
cmp
xchg
ret
out
xor
ss
shl
lret
fsin
ffreep
sti
orb
rcl
ret
lds
out
aaa
divb
ffree
repnz
cld
and
loope
xchg
fcmovne
into
and
cmpl
in
xlat
cmp
test
loope
ret
ret
test
mov
cmp
jmp
repz
out
in
sub
ss
push
enter
iret
loopne
test
mov
jmp
mov
sub
cli
in
aam
xlat
cmp
ds
fmuls
in
ror
lock
ret
repnz
in
out
fcmove
aas
aam
in
ret
addl
out
clc
loope
test
lret
shl
repz
out
cmp
hlt
xor
clc
cli
cmc
in
in
loope
addb
das
stc
xor
neg
cmp
loope
cmp
sti
sbb
or
fsubp
int3
sti
test
roll
sub
xor
call
std
roll
sti
cld
leave
mov
decb
iret
cs
ret
xor
in
shl
in
xlat
stc
cmc
cmp
call
fdiv
fnstsw
call
loop
cs
int
out
out
fucomi
xor
ffree
jmp
aam
fld
in
fisttpll
xor
loope
xor
cmp
cmc
aas
enter
push
out
xchg
addb
in
clc
xlat
in
aas
fucomp
xor
sti
in
loopne
loopne
neg
stc
fsqrt
mov
xchg
lret
ss
jmp
aaa
aaa
rolb
xchg
test
mov
enter
icebp
cmp
out
leave
fcom
add
rolb
jmp
nop
cmc
into
int
enter
jmp
sti
fstp
in
ret
fsub
aam
jecxz
lock
shr
lret
jecxz
xor
aaa
xor
in
sarl
repnz
xchg
fsub
mov
shl
xor
out
xor
clc
std
cmp
ret
cmp
out
rol
xlat
testl
loop
cmc
aam
call
fsubp
fnstcw
cli
stc
shl
lret
cld
in
xchg
jmp
leave
loop
out
aad
not
sarl
ljmp
cmc
cli
test
icebp
fstp
mov
das
aad
xor
in
icebp
ss
filds
lds
out
sub
shr
fiadds
out
jmp
lret
cmp
cmp
cld
mov
fucomip
ds
cli
jmp
shrl
cmp
cli
hlt
hlt
div
add
cmc
rorb
fdivrp
clc
xchg
addl
fdivl
rcl
into
aas
loop
cmp
lret
sti
xlat
mov
inc
loopne
inc
in
mov
jmp
aam
into
lret
rcr
fstp
les
add
lcall
jl
or
shl
hlt
call
iret
hlt
aam
shr
test
loope
test
call
xchg
loopne
out
ljmp
fistpll
rcr
fcmovb
sti
faddp
mov
addl
ljmp
div
not
iret
lock
in
rolb
fdivr
out
loopne
addl
cmp
call
cld
ret
div
cli
sti
loop
fst
mov
in
jmp
into
jmp
into
lret
cmp
aam
ss
cmp
fdiv
stc
fcmovu
loopne
fcomip
in
xlat
mov
fcomip
cli
std
ffreep
test
cmp
repnz
fmul
aam
loopne
loope
cmc
cmp
out
xchg
aam
shr
divl
hlt
lock
push
sti
repnz
adc
leave
adcl
into
cmp
fst
xor
cmp
xlat
lock
ret
in
xchg
decb
iret
out
shll
lret
sti
fnstcw
cmp
cmp
in
std
fisttpll
rol
shl
lret
jmp
fidivrs
sarb
shl
in
jecxz
jmp
mov
clc
mov
out
lock
ret
cmc
rcl
stc
cmp
repz
cmpl
ljmp
rorl
ss
out
out
aad
repz
fsubr
not
mov
fadds
int3
sub
into
xor
ss
cmp
jmp
xor
std
fadd
loope
jmp
xchg
into
jecxz
rcl
cmp
rcr
ss
int
cli
aas
xor
loope
leave
into
loopne
mov
ljmp
out
jmp
shl
fcomi
repz
xchg
sub
clc
out
fst
loope
loope
into
vpsrld
cmp
std
fcmovnu
sarl
int3
icebp
test
hlt
lock
fdivr
test
iret
enter
cmp
fdivrl
ljmp
stc
lds
test
in
xchg
xchg
xor
ljmp
aam
inc
flds
enter
jmp
std
mov
into
into
icebp
vpsubusb
int3
int
aas
repnz
jecxz
lock
sbb
sub
and
out
hlt
enter
xor
addb
mov
xor
mov
hlt
out
xor
cmp
icebp
cmp
roll
aam
fmul
in
in
xchg
jmp
icebp
loopne
xor
int3
hlt
clc
cli
fcomip
into
fdivrl
ds
add
sti
aam
incl
filds
stc
cs
cmc
fstpt
out
decl
clc
mov
out
test
call
icebp
aad
cmp
sti
cmp
fcmovnu
hlt
test
xchg
jmp
shr
out
rol
leave
das
rcl
ljmp
cmp
clc
fucom
clc
out
decl
iret
in
jmp
into
xor
sar
int3
imul
repnz
xor
hlt
std
jmp
call
lret
out
mov
shll
int3
lock
xor
add
fld
aad
in
movl
cmc
int3
repnz
cmp
iret
int3
out
rcl
icebp
test
testb
out
out
test
shr
icebp
out
int3
cmp
jecxz
out
aas
jmp
jmp
sub
out
loopne
cmp
in
lret
xlat
repz
fcmovnu
jmp
in
faddl
shl
loopne
ljmp
int
out
adc
fdiv
cmc
sti
hlt
lea
jecxz
ljmp
ret
cmp
lock
fcmovu
sti
jecxz
testb
in
lret
aad
out
cld
mov
cmc
ftst
ds
repz
jmp
std
call
rcr
repz
int
cmp
fmulp
out
aas
ret
fcmovb
lock
fucomi
out
enter
iret
out
sub
xor
xlat
fsubr
lock
cmp
faddl
dec
fcmovne
xchg
cli
les
div
iret
test
cmp
and
out
fdivrp
test
les
loop
jecxz
sub
xor
add
mov
mov
mov
mov
mov
jmp
ret
rcl
rcl
aad
shrl
pop
enter
jl
addb
jl
jmp
loope
cld
shl
repz
icebp
fldl
stc
cmp
fdivp
shrl
repz
lds
xor
xlat
rolb
hlt
aad
loop
enter
mov
cli
in
out
nop
sub
imulb
int
cmp
cmp
aam
faddp
mov
ret
lret
lret
enter
out
sub
loopne
rcl
aad
sarb
cld
call
in
ret
clc
fstpt
loop
ret
jecxz
loop
test
neg
ret
xor
cli
lret
cmc
std
fmul
cmpb
cmp
cld
test
sti
call
xchg
lock
aam
jmp
xor
cli
sub
cld
aam
jecxz
lret
icebp
fsubrp
test
ds
icebp
clc
int
sar
cmp
sti
rcl
ret
int3
xchg
xlat
leave
mov
in
in
fxch
in
call
clc
sti
lret
cli
aam
fcmovne
ffree
testb
mov
out
out
out
in
rol
lret
stc
ror
iret
int3
clc
fidivrl
shll
cmc
test
cmp
sbb
in
in
cs
xor
int
lret
imul
fdivp
loope
cli
rcr
cli
hlt
stc
or
enter
fsubp
test
cmp
shlb
shr
iret
hlt
dec
in
aam
ret
sbb
in
rorl
jmp
out
std
xor
lret
std
sti
loop
div
xchg
mov
mov
out
std
out
clc
xor
in
sub
test
test
jecxz
std
adc
xor
icebp
into
xor
int3
rcr
aas
in
fcmovnb
out
test
rorb
call
out
repz
out
loopne
std
icebp
shr
xchg
aam
fcomp
fchs
out
ror
int3
xor
xor
loop
aam
aad
ss
rcr
jecxz
out
or
fdivrp
ljmp
shrb
clc
xor
out
rcl
rol
loopne
stc
stc
cmp
mov
stc
call
out
fldl
shr
iret
xor
lret
cmc
fdivr
rcr
fsub
mov
or
in
xchg
mov
das
out
jmp
out
aas
and
leave
std
ret
vmovq
xor
sar
jecxz
cmp
lret
int
ds
out
fildl
call
jmp
iret
div
hlt
xor
call
lock
into
aas
cli
idiv
fisttps
fmul
mov
xor
xor
fucomi
rcl
sarl
in
loop
loope
cmp
enter
int
test
out
out
ljmp
xlat
aaa
ror
in
call
out
jmp
sti
mov
mov
shl
lret
xlat
in
fsubrp
neg
repnz
fcomp
call
int
out
in
or
xor
into
fcmovnbe
cld
cmp
fucomp
testl
loope
fdiv
mov
leave
std
xchg
lock
loop
into
fmul
into
sarl
aam
jecxz
clc
ret
out
std
in
fsubr
dec
jmp
xchg
rcl
xor
xor
ljmp
shl
ret
shr
rol
lea
enter
fsubrp
into
leave
cmc
repnz
fdivr
aam
faddl
bnd
out
into
in
in
xchg
mov
ror
aam
xor
cmp
cli
into
std
cmpb
shl
fdivrp
loop
leave
in
loopne
mov
mov
loop
loop
repz
fcmovnbe
call
ret
into
test
cmc
jecxz
enter
xchg
nop
mov
in
xlat
ljmp
cmp
into
cli
cmc
test
decb
cld
xor
out
ret
cmp
iret
idivl
fmul
cmp
out
addb
ds
fmull
out
call
int
shll
aam
ret
aam
rol
jmp
ret
into
jecxz
in
xchg
icebp
loop
ljmp
aad
test
aas
ds
out
fldl2e
in
jmp
leave
out
mov
iret
cs
xor
test
hlt
xlat
jmp
fdivr
hlt
mov
cmc
xchg
ret
ss
enter
rolb
mov
ret
call
enter
sub
in
ret
call
out
mov
jmp
sarb
enter
fidivl
mov
movsl
lods
cmpsb
sbb
jl
cmp
lock
in
add
repnz
stc
jecxz
movb
sub
out
xor
sar
int
fdivr
out
repnz
out
fucomp
mul
mov
in
lock
clc
fld
cmp
out
dec
shl
sar
leave
xlat
repz
fcomi
fcmovu
mov
nop
aad
ljmp
rcl
aad
ret
clc
rol
in
ret
cmc
or
int3
sar
cld
cmp
sub
in
leave
ret
fimull
in
out
sarb
sub
ljmp
std
stc
and
jmp
xchg
out
clc
xchg
in
xor
leave
fsubr
repnz
repnz
fdivr
fcmovu
jecxz
jmp
int
mov
into
jecxz
fld1
icebp
aad
hlt
cld
fcmovnbe
aas
aam
icebp
repz
lock
xlat
repnz
ret
shll
cmc
imul
stc
int
in
flds
lret
std
lret
fadd
icebp
out
xor
cli
xor
fcomp
std
rcr
shl
loop
ret
fisttpll
loope
call
fxch
iret
int
xor
into
out
xlat
not
lea
iret
repnz
cmc
ret
ljmp
xor
fnstsw
out
repz
in
fstp
lret
addb
jmp
cmp
int3
in
loopne
ds
aam
fcmovbe
fiadds
mov
enter
xor
out
xor
rol
out
div
call
lock
clc
neg
xlat
std
xchg
lret
xchg
in
lock
loop
test
cld
cmp
jecxz
fcmove
fsub
cmp
cmc
mov
decl
mov
jmp
out
sarb
hlt
clc
fsubp
rol
repz
cmc
fadd
mov
out
enter
pushl
jmp
std
lock
lret
ffreep
aam
cmc
lock
test
jmp
loope
in
repz
sar
call
cmp
fdivrl
in
out
sbb
clc
cmc
in
fimuls
mov
in
enter
jmp
mul
cmpb
loope
cmp
xchg
call
leave
ret
out
idiv
sti
clc
rcl
cmp
stc
movl
imul
loop
in
aaa
cmp
test
idivl
jmp
mov
test
enter
loope
ret
idiv
sti
xlat
lock
loopne
jecxz
fsubrp
sarb
mov
cmc
int3
ljmp
lock
jmp
fidivs
fmul
cmp
in
cmc
loopne
fcom
mov
orb
lret
repz
sub
leave
and
shl
out
leave
sti
mov
into
add
adcb
out
rcl
aaa
out
sarb
sti
cmc
ret
fdivr
fabs
leave
iret
enter
shr
in
xor
shl
leave
out
cmp
lret
xchg
hlt
fsubr
addb
rcr
loope
out
lock
lret
repz
shl
idiv
bnd
shl
fcmovu
xchg
and
in
in
jecxz
shl
int
out
call
cmp
lock
div
in
cmp
loope
xor
fsubr
loope
ror
in
in
ror
lret
lock
std
shl
aam
test
sub
in
into
xchg
aam
sub
vcvtpd2dq
fdivr
aaa
cld
clc
adc
cli
shl
xor
test
clc
jmp
loop
rcl
call
std
rolb
sar
mov
xchg
int3
repnz
shl
repnz
hlt
xlat
out
repz
jecxz
clc
test
out
orb
hlt
fcmovne
fdivrs
fstp
not
jmp
aas
into
addb
std
stc
adc
loope
jmp
sub
idiv
int
aad
shl
fdivp
mul
ret
mov
jmp
leave
sti
lret
sub
lret
repnz
shr
lret
ljmp
vpsubsb
out
call
int
mul
out
out
fldln2
enter
fucomip
std
sar
xlat
lock
adc
repnz
in
out
int
test
fdiv
in
test
cmp
mov
add
mov
mov
mov
xor
add
cmp
jmp
iret
leave
rcl
fstp
leave
repz
mov
mov
addb
jl
jecxz
enter
fsubr
mov
mov
test
jmp
sti
enter
loop
cmpl
jecxz
sti
cld
out
icebp
shl
out
iret
mov
into
std
jmp
aaa
xor
iret
cld
rcl
cmp
filds
jmp
xchg
fsubp
shl
cs
lock
shl
xlat
ljmp
loope
mul
movb
in
lret
divb
cs
jmp
lret
ljmp
aas
loope
loop
test
mov
mov
iret
lret
xor
repnz
repz
and
aas
cmpb
shl
movb
shr
xor
mov
hlt
fsubr
fmulp
rcr
inc
cmp
test
mov
in
out
int3
clc
into
int
fcmove
jmp
hlt
in
loopne
loope
mov
in
loop
xchg
in
jecxz
sub
cmp
fcomip
cmp
cmp
ret
sar
xchg
repz
lret
cmp
std
icebp
iret
jmp
into
frndint
idiv
aam
mov
in
jmp
mov
aaa
xor
ret
out
stc
cmp
out
cmp
sar
loope
cli
adcl
leave
jecxz
bnd
xlat
jecxz
sarl
aam
test
loopne
lret
lret
std
mov
std
inc
shll
aas
int
or
or
loope
jecxz
call
mov
lock
iret
out
aad
cmp
clc
xlat
cmp
fmul
cmp
xlat
ret
fimull
fucompp
lret
in
div
cmc
roll
xlat
xlat
mov
mov
lret
orl
bnd
in
cmp
std
into
cmp
cmp
xlat
repnz
ljmp
cmp
jecxz
ss
in
call
aas
ds
add
xchg
in
iret
test
lret
std
icebp
rcr
shl
cmp
out
out
ds
in
out
out
fstp
std
std
lret
call
lret
cmp
ror
std
shl
cli
rcl
fmull
loope
fcmovnu
test
in
shlb
ljmp
test
ljmp
mov
test
call
sti
enter
aam
jecxz
xor
rcr
ret
leave
mov
std
jecxz
jmp
loopne
loope
call
rcr
call
jecxz
and
sti
fsubrp
loopne
filds
shll
xor
lret
cmp
out
jecxz
cmp
std
sar
lret
in
cli
fcomip
xchg
fbstp
in
lock
jmp
shr
cmp
cmp
hlt
fabs
repz
leave
aaa
stc
loop
out
sar
int3
addl
cmp
mov
std
sbb
lock
das
in
cli
shll
call
call
sarb
fnstsw
fld
rol
sub
clc
fisttps
shll
cmp
aaa
rol
cmc
flds
call
jecxz
ljmp
hlt
iret
in
lock
std
icebp
stc
cmpb
fst
xlat
lock
fstp
loopne
repz
addl
xor
ss
aam
icebp
repz
addb
leave
in
sar
out
xchg
xorl
leave
in
ss
in
sarb
into
int3
jmp
cmp
fildl
in
mov
in
out
out
lret
hlt
fdivrs
shl
fdivr
repz
loop
sar
sti
aas
ds
in
call
lret
stc
rcr
lret
cmp
inc
aas
fld
aam
rcl
faddl
out
das
in
shl
int3
lret
shlb
loopne
in
test
lds
in
std
jmp
in
in
clc
int
repz
cmp
fdivrs
ljmp
hlt
enter
ffreep
enter
addl
out
loop
enter
xor
repz
rcr
test
xlat
in
out
xchg
xchg
nop
in
out
aam
out
cmp
or
ds
std
aam
cli
loop
mov
sub
out
jmp
xlat
clc
out
cld
div
rcr
ror
ss
fldl
in
add
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
jmp
int
lret
xlat
int
es
adc
mov
jl
add
fcmovne
shl
xchg
popl
shr
iret
lret
in
aad
int3
cmp
aas
fnstcw
cli
loop
lret
addl
loop
sub
icebp
in
aaa
xor
into
xor
sti
lret
cmp
sbb
ret
dec
in
fldl
shrb
in
repnz
clc
into
jmp
cmp
cmp
out
jmp
cli
cld
fdivr
in
jmp
ss
aad
out
ljmp
cmp
out
mov
lea
xor
fstpt
aad
stc
cld
ljmp
sar
cld
lds
test
leave
in
aad
out
out
loope
clc
clc
out
neg
std
adc
int3
mov
repz
xor
neg
cmp
lret
hlt
mul
in
ds
test
std
loop
int3
fldl
out
loopne
shlb
cmp
repz
fldln2
cmpb
in
jmp
int
ljmp
int
stc
lret
out
stc
int3
rcl
repz
cld
loopne
loope
idiv
out
fsqrt
cld
in
iret
fdivrp
lret
stc
fdiv
icebp
fnstsw
repz
int3
fmul
lock
ret
loopne
jmp
call
xchg
enter
lret
int3
xor
cmp
lret
xlat
int
fmulp
addl
out
mov
test
lret
int
in
hlt
neg
add
cli
loop
in
stc
xchg
rcl
or
xor
cmp
aad
cmp
rcl
aas
xor
fdivr
repz
jmp
sti
in
out
out
loopne
sub
jmp
out
out
fld
std
inc
jmp
fcmovu
out
in
in
xchg
jmp
ret
ljmp
fmul
cmp
cmp
test
in
fucomi
int3
mov
fiadds
aad
aaa
rcr
aad
fidivrl
rol
xchg
test
out
mov
mov
xlat
call
repz
divl
hlt
and
clc
icebp
in
clc
ret
aad
fiaddl
xchg
aam
mov
fcmovnu
fsubr
cmp
rcr
out
mov
xlat
in
test
test
lret
sub
in
cmp
fidivs
loopne
loope
div
test
fcoms
icebp
in
shl
in
cld
shl
iret
int
lret
out
neg
filds
movb
sub
repnz
fcomp
std
lret
fucomip
int3
xchg
fadds
xchg
xor
aad
lret
repz
in
repz
jmp
xlat
in
shl
fisttpll
lret
iret
repz
lea
out
lret
icebp
lret
xor
icebp
iret
ss
sarl
into
cli
fildl
rorl
fdivp
out
in
jecxz
repnz
repz
out
int3
loope
xchg
idiv
test
lret
out
jmp
cmp
shl
aas
fsubrp
aam
repnz
std
fcmovne
ret
call
into
into
shl
sar
leave
or
ffree
lock
orb
pushl
int
jmp
fstp
sar
int
rcl
cld
loope
lea
out
das
fprem1
jmp
shl
enter
fcomip
loop
mov
rcr
fsubr
leave
jmp
call
xor
cli
lret
fucomi
cld
hlt
jmp
imul
sar
in
shr
lock
ret
shlb
test
in
in
xlat
jecxz
lret
out
orb
stc
in
cmp
rcr
ret
loope
in
jmp
test
int
faddl
out
enter
lret
cmp
cmp
adc
xchg
addl
call
hlt
rcl
std
frndint
fiaddl
mov
fsub
in
test
shl
call
xor
repnz
sbb
ds
cld
out
mov
xchg
call
clc
sti
repz
lret
repz
repnz
rcr
fstp
into
test
int3
int
aam
int3
xor
enter
jmp
icebp
cmp
fadds
fdiv
fcmovne
out
mov
jmp
into
les
rcr
fxch
enter
loope
mov
jl
add
xchg
call
rol
xlat
lret
cmp
cli
hlt
stc
out
aam
mov
xchg
mov
mov
sub
dec
fprem
cli
sbb
xchg
jmp
xchg
fsubp
std
fucomip
xor
int3
into
fidivl
xor
xlat
lock
ret
in
fadd
enter
fmull
and
int
in
test
lock
jmp
aas
repz
cmc
leave
in
std
in
out
call
xchg
lret
stc
jmp
out
iret
ljmp
xchg
int3
test
sbb
loop
icebp
xor
leave
fcomi
fnsave
mul
adc
test
out
ret
loopne
icebp
fdivp
mov
leave
shl
cmp
fdivr
out
add
fadd
ss
faddp
repnz
jmp
out
in
std
xchg
les
xor
aam
out
lret
std
out
hlt
test
cmp
fcmovu
rolb
iret
lret
repz
aam
shl
aad
fidivrs
xlat
out
jmp
fdivr
call
ljmp
int
hlt
lock
lock
clc
icebp
into
out
cmp
mov
loopne
ljmp
cmp
cli
in
aaa
into
clc
int
sar
testl
jmp
add
lret
repz
fsubr
ljmp
out
jmp
icebp
vphadddq
sub
hlt
clc
sti
ss
repnz
not
out
fld
std
jmp
in
leave
sbb
jmp
jmp
cmp
ss
cmp
cmp
out
out
ljmp
call
fst
int3
sarl
ffreep
sar
fcmovu
or
xchg
aad
not
ror
aad
fcmovnu
loope
int
out
ror
cmc
fdivr
sbb
mov
stc
out
rcr
add
shl
xor
lret
repz
fdivr
in
iret
repnz
ds
fadd
sti
stc
test
shl
lock
aad
leave
ror
sar
enter
addl
out
sti
ror
ror
hlt
hlt
out
lret
mul
aaa
cmp
std
cmp
fdivr
repz
aad
testb
cli
mov
mov
out
enter
into
or
ds
std
ffree
mov
leave
mov
out
xchg
loopne
mov
hlt
out
xor
sar
lret
in
fst
cmp
ds
lock
icebp
filds
in
cmc
stc
fsubr
cmp
add
lock
out
loope
fdivrp
out
repz
fldpi
jmp
xor
sti
cmp
loopne
call
test
stc
in
mov
out
xor
ss
out
icebp
shl
int
jmp
fcmove
jecxz
test
out
ffreep
out
jmp
into
leave
hlt
aad
lret
ds
sti
test
rcr
mov
loope
jmp
cld
xchg
idivb
into
xor
in
adc
hlt
cmp
neg
out
enter
shl
lea
into
jmp
fmulp
out
in
addb
fcomp
ret
mov
xor
stc
sarb
ss
iret
ds
aad
sti
sar
add
in
int3
out
in
mov
xor
lds
xor
cld
leave
shl
xlat
xor
aas
cmp
loop
mov
lret
loope
aaa
xor
cmp
lret
fnstsw
cmc
cmp
xchg
cld
lret
into
leave
sti
out
loop
xor
aam
cmp
f2xm1
ss
shl
leave
fld
loope
loope
test
loopne
sti
repnz
sar
shr
cmp
clc
iret
in
inc
loopne
xchg
call
test
sub
cmp
rcr
stc
aaa
sti
mul
cmp
test
xchg
xchg
mov
iret
xchg
xchg
xchg
out
loope
jmp
aam
xorb
cmc
xlat
loop
clc
call
in
loopne
jmp
sti
rol
loopne
rcl
in
fnstenv
sarb
int3
loop
iret
aas
fucomip
sti
jmp
std
xchg
out
in
sub
sub
cmp
aaa
sti
cmp
jmp
cmp
mov
test
icebp
xor
mov
mov
xor
jmp
enter
vpsubusb
sub
xor
adc
add
cmp
cli
cmp
ds
cmp
shl
xchg
sbb
mov
call
cmp
xor
ret
xlat
xor
ljmp
clc
jmp
lret
jecxz
sti
out
fcmovu
out
aad
repz
rcl
loop
cmc
cld
repz
jecxz
mov
xchg
ror
out
out
xor
cmp
rcl
shl
jmp
xchg
iret
enter
mov
out
in
fucomp
idiv
xor
aam
add
into
jmp
rcl
xchg
lret
out
rcl
in
jmp
int
lock
fucom
call
loopne
in
leave
icebp
fsub
xchg
aam
int3
clc
shr
in
cmp
into
xorb
clc
les
std
std
incb
mov
cmp
cmp
fadd
rorb
fcmovb
out
sar
jmp
shlb
leave
in
aad
into
shr
ret
cli
fcmovu
sti
hlt
mov
in
xor
fcmovnb
loop
fcmovne
lret
lock
fcmovnbe
cmc
hlt
repz
ret
enter
fucom
fnclex
int3
mov
iret
fcom
xlat
aaa
repz
out
call
not
fsubp
repnz
cld
mov
mov
xchg
mov
les
cmp
shlb
ss
fiadds
rol
clc
aam
cld
mov
loope
shll
clc
sti
ljmp
sarl
adc
loop
jmp
loope
int
aam
xor
xlat
fsubr
fdivp
in
cld
cmp
xchg
cmp
enter
cli
mov
and
cmc
hlt
out
ret
out
rol
ss
fsubr
hlt
in
loop
loopne
cmp
loopne
fmul
ljmp
mov
in
in
lret
fldz
loope
fsub
sar
clc
cli
out
shr
enter
or
call
call
cmp
repnz
out
in
cmc
ret
roll
mov
in
loop
hlt
jmp
rcr
in
leave
ds
in
aaa
loop
les
clc
sub
shl
test
in
hlt
hlt
out
aad
sti
fstp
rcl
clc
out
stc
in
aam
enter
std
icebp
xchg
lret
into
ret
aaa
cld
repnz
cmp
jecxz
aam
addl
fisubrs
cmp
xor
hlt
sar
fiaddl
loope
fsin
stc
int
repz
cmc
lock
cmp
div
fbstp
cmp
aam
les
out
clc
out
filds
xor
repnz
jmp
sar
into
repz
test
incl
cli
repnz
out
lock
icebp
jmp
icebp
lret
fincstp
clc
icebp
repnz
out
rcr
mov
xchg
lock
jmp
repz
icebp
ss
xor
xor
stc
call
test
rorl
in
not
bnd
das
fidivrl
int
ljmp
mov
icebp
clc
xchg
in
jmp
aaa
icebp
xlat
out
fucomp
in
clc
cli
fsub
mov
les
iret
out
aad
ss
call
ret
fcmovu
cmc
out
neg
sti
xlat
rcr
cld
out
frstpm(287
sar
iret
aam
lret
fdiv
into
lret
int
sti
testl
ffreep
test
dec
enter
repz
cmc
out
jmp
cmp
std
fnstcw
in
mov
in
loopne
icebp
mov
into
jmp
iret
cs
not
int3
and
rolb
ljmp
xlat
xor
imul
shl
loopne
aam
in
lock
cli
shl
jecxz
aas
loop
clc
xchg
xchg
fiadds
jmp
iret
std
sti
not
out
fiaddl
cmp
sti
leave
test
out
call
out
in
iret
xor
jmp
sbb
std
hlt
enter
out
loope
xchg
jmp
lock
rcl
aad
out
sarl
cmpb
jmp
testb
in
in
int
int
xor
jecxz
xor
xchg
ljmp
cmp
in
ret
lret
xor
rcr
mov
sub
add
mov
mov
mov
movzwl
add
mov
jmp
iret
int3
ror
fcmovu
frstor
movsl
je
pop
lret
les
jl
addb
jl
cmp
fidivs
mov
and
jecxz
jecxz
jmp
rol
shl
lret
ljmp
iret
test
vcmppd
in
into
xchg
iret
mov
vpmaddwd
sub
iret
xor
cmp
in
loop
lds
xchg
out
loop
rcr
icebp
fsub
int3
fdiv
cli
fucomip
fldz
out
repz
fsubr
lret
fsubr
enter
loopne
int3
fcmovu
rol
cmp
stc
sbb
cmp
out
out
cli
in
std
ljmp
in
loop
lret
fdivrp
ds
xlat
cmp
stc
shr
addb
nop
call
in
ret
xlat
enter
into
rcl
ljmp
add
test
loope
fmul
xor
out
leave
fld
fucomip
std
stc
cmpb
out
fldl
add
fldl
jecxz
jmp
sub
cmp
fdivrl
in
roll
stc
std
loopne
ret
loopne
fcomip
loop
shl
ss
not
std
loope
cmp
flds
mov
jmp
rol
cmp
lret
ss
in
fsubp
clc
fcomip
in
cmc
loop
in
call
and
out
fcom
aaa
neg
ljmp
aad
loop
sti
aad
call
adcb
aaa
lock
sti
fdivl
jmp
in
loop
fadd
stc
out
leave
jmp
fadd
xchg
iret
xchg
call
out
std
shl
fdivrp
in
cmc
sar
out
fdiv
fiadds
clc
mov
int3
jecxz
ss
repnz
ljmp
fcom
fninit
xchg
xchg
iret
mov
cli
lret
jmp
out
lret
out
jmp
out
ds
rcl
and
clc
and
in
xchg
jmp
cmc
lret
aam
fsubp
hlt
cmc
loop
loope
fprem
sbb
loope
fcoml
xor
int3
xor
fsubr
cmc
ret
loopne
shl
repz
fsub
and
call
div
in
ret
aad
xor
cmp
rol
aas
ret
mov
jecxz
mov
loopne
lret
in
call
fcomi
fcomi
hlt
std
ljmp
cli
addb
loopne
lret
call
cmp
out
cld
hlt
sbb
test
loop
mov
filds
cli
into
in
ljmp
xor
int
aas
cmp
cld
cmp
fsubp
out
icebp
mov
xlat
shr
aad
loope
icebp
cld
aas
out
shl
jmp
in
repnz
ds
lock
std
cld
test
int3
cmc
jecxz
out
hlt
out
fmulp
in
lock
aad
std
hlt
div
aam
aam
ret
std
out
xchg
xchg
loope
cld
in
xchg
fsub
hlt
faddp
not
fcmovnbe
stc
in
imul
sub
jecxz
bnd
cmc
ftst
fcomp
in
fucomp
shl
in
icebp
inc
cmc
shl
jecxz
icebp
in
stc
in
loopne
lock
fldl
ret
mov
mov
int3
shl
xchg
in
ret
lret
out
idiv
int
repz
lds
sub
les
mov
out
in
shll
sti
enter
aad
aam
aas
not
rol
loop
fsub
loopne
out
shr
mov
sub
ss
clc
in
test
int
jecxz
cli
shl
add
xchg
mov
cmp
nop
xchg
rcl
vpminsw
ljmp
clc
cmp
ds
addl
shl
out
cmp
xor
cmp
fprem
fdivr
icebp
shl
fisttpl
shr
loop
leave
in
cmp
cmp
adc
bnd
stc
loopne
nop
addb
fnop
out
ror
ss
fldl
test
sbb
in
ljmp
iret
cmp
int3
icebp
lret
loope
test
cli
rol
cli
fucom
ret
mov
in
lret
fcmovbe
jmp
int
out
std
repz
faddl
out
out
loope
lret
orb
dec
fsubp
jmp
shl
in
repz
or
sahf
add
add
iret
leave
ret
int
xor
dec
push
cmp
dec
ss
addb
jl
aas
std
xor
sti
kmovb
test
dec
xor
clc
aad
shr
ljmp
aam
repnz
xlat
jmp
jecxz
shr
std
repz
xor
fdivrs
xor
test
mov
std
mov
enter
addl
jmp
fcmovnbe
sarl
hlt
loopne
std
lret
rclb
out
repnz
lock
sti
fcomi
test
leave
iret
loop
test
sar
nop
out
loopne
out
repnz
lret
xlat
lret
cmp
repnz
fadd
sti
testl
xlat
ror
repnz
sti
cmpb
std
test
xchg
xchg
stc
std
loopne
clc
fldl
enter
jecxz
int3
iret
xlat
out
repnz
stc
mov
test
in
clc
out
enter
fxch
test
orl
cld
xchg
test
aas
rol
out
cmc
mul
out
cmp
rcl
jecxz
fdiv
loopne
ret
idiv
in
mov
in
test
cmp
cmp
leave
cld
fistpll
ds
in
aad
jecxz
cmp
test
fstl
int
sti
fcmovu
not
int
fstp
fucom
add
filds
out
rorb
in
div
fcomp
aam
shl
cmp
cmp
jmp
cld
in
loop
frstpm(287
cld
nop
mov
loop
cli
icebp
cmp
shl
in
loop
and
dec
cld
mov
lock
aaa
ljmp
cmp
repz
cmp
fcomp
out
sti
mov
mov
leave
lock
aam
lock
std
cld
cld
clc
sarl
loope
cmp
cld
les
mov
shl
icebp
in
fildll
xor
iret
hlt
out
cli
jmp
cmp
rcr
aad
idiv
fdivr
leave
not
sbb
loop
loope
aad
cmp
repz
fcomip
fcmovnbe
aas
fdivrp
loope
ret
rcr
clc
sbb
loope
icebp
xchg
cs
xor
repnz
lock
xlat
std
repz
loop
out
sti
test
leave
fcmovu
loopne
enter
in
in
sti
dec
cli
icebp
cmpl
lock
icebp
ljmp
in
repz
in
fdivr
cmp
cmp
iret
loopne
shr
in
loope
aam
in
aad
ljmp
lock
aas
xlat
repz
jmp
stc
les
nop
call
ljmp
addb
lret
loop
xchg
lret
repz
shll
ret
out
int3
cmp
jecxz
cli
xchg
loop
filds
lret
les
lret
rol
fld
cld
into
icebp
clc
and
loop
in
nop
out
aam
out
leave
lds
out
repnz
aad
hlt
roll
aad
and
test
fucomi
repnz
ret
shll
cmp
ljmp
repz
rolb
fmulp
into
mov
fmul
in
in
stc
clc
in
ret
int3
ret
xchg
lret
test
cli
in
repz
hlt
test
hlt
rol
int
in
in
ds
loop
fiaddl
enter
movl
test
cld
jmp
shl
in
shr
ret
fcmovnu
mul
xchg
faddp
out
fmulp
sar
lret
leave
cmp
call
loop
out
cli
cld
and
jecxz
fldt
jmp
clc
fucom
icebp
jmp
jmp
mov
in
jmp
xor
hlt
shlb
in
fprem1
int
lret
repz
aas
mov
fsub
ffreep
fldl
in
aaa
xor
shr
xlat
in
aam
cmc
fcmovnbe
stc
mov
fucom
out
loopne
std
xchg
in
lret
aad
out
fsub
loop
add
leave
cld
loope
sti
in
lock
leave
nop
iret
jmp
fsubrp
jmp
sarb
stc
ffreep
cli
int3
cmp
ret
shl
loopne
fmul
test
out
aad
lret
sub
cmc
clc
out
icebp
lock
out
iret
stc
sbb
icebp
shlb
lea
jmp
rcl
int3
iret
rol
shll
or
insb
sarb
jl
cmp
xor
in
rol
sti
in
cli
xor
cmpb
jecxz
fcom
div
test
fcmove
rolb
loopne
rcl
not
ljmp
fdivr
roll
ret
mov
div
sub
leave
leave
cmp
sarl
repz
fucomi
notrack
jecxz
cmp
mov
xchg
loope
call
hlt
xor
stc
cmp
out
sbb
sti
shl
fst
ret
dec
test
xchg
xchg
rcl
leave
cmp
into
cld
aad
cmp
frndint
loope
xlat
jmp
sbb
fsub
lret
ljmp
clc
loop
sar
loope
cld
shr
loop
int
enter
test
hlt
out
sub
shl
out
out
int3
sarl
shl
lock
movb
mov
loop
aam
xor
aaa
call
aas
std
rcl
leave
fucom
mov
int
cli
jecxz
out
in
in
out
cmp
lock
cli
ds
cli
rolb
cld
cli
fsubr
mul
in
shr
int
shl
leave
hlt
jecxz
clc
cmp
into
loopne
lret
repnz
mov
jecxz
iret
test
jmp
shl
clc
in
cmp
loop
xchg
jmp
mov
xchg
iret
faddp
call
clc
fdivr
hlt
enter
fdiv
out
jecxz
fld
fnstsw
roll
xor
loope
stc
aaa
shl
cmp
rolb
out
ret
loopne
cli
jmp
into
lret
ljmp
xlat
leave
sar
into
std
jmp
cmp
fstp
in
ret
lret
mov
in
in
test
lret
iret
in
aaa
cmp
rcr
cmp
icebp
aad
sti
cld
aam
int
mov
jecxz
loop
in
mov
fidivrl
xor
out
xorb
hlt
xlat
cld
out
mov
int3
call
into
in
in
in
aaa
aad
fcmove
ds
hlt
ret
in
aam
aam
mov
rcll
jecxz
lret
jmp
cmp
into
cmp
out
roll
enter
xchg
cmc
hlt
jmp
into
lock
testb
hlt
repz
xlat
lret
std
call
xchg
aam
jecxz
out
cmp
call
rcr
add
lock
fildl
in
xor
repz
repz
int
shl
aam
cmp
rolb
ret
clc
jmp
rol
stc
repnz
sti
icebp
int
hlt
fucomi
loopne
cmc
rcr
not
mov
test
iret
std
std
lret
lret
jmp
leave
shr
lret
cmp
sbb
aam
fsubr
or
mov
xchg
fdivrp
cmc
loopne
sub
xor
out
xlat
cmp
sti
in
jecxz
ret
fnstsw
repnz
xchg
rcl
fsubp
into
ss
cli
cmc
cmp
lock
loop
dec
jmp
iret
in
jmp
xlat
xlat
xor
in
xor
out
sbb
aas
hlt
jecxz
mov
loope
xor
into
cmp
into
cmp
int3
int
ds
shl
leave
mov
in
out
rol
ljmp
clc
cmp
cmp
fcmovnbe
jmp
ds
jmp
mov
jecxz
fldl
cs
into
das
out
idivl
idivb
iret
int
ret
fcomp
call
jmp
out
in
jecxz
out
in
iret
ljmp
xor
out
int
fdiv
loopne
clc
mov
jecxz
in
xchg
out
xor
xlat
into
ror
in
cmp
sarl
test
loop
in
xchg
enter
ljmp
cmp
fcomip
in
aad
cmc
mov
ror
lret
ret
das
repnz
ljmp
std
sti
decb
decb
xchg
repz
jmp
hlt
sub
test
cmp
lret
int3
into
out
enter
icebp
rol
fld
in
repz
neg
jmp
roll
mov
loop
sti
loopne
icebp
ljmp
cmc
fnsetpm(287
repnz
cmp
in
fdivr
cld
orb
mov
movzwl
cmp
jmp
lret
rcr
int
orb
xor
dec
into
push
sarl
jl
xchg
test
mov
xor
iret
in
ret
rcr
shr
fcmovu
aas
sbb
rcr
orl
stc
sub
repnz
cmc
hlt
out
int
lret
out
sti
out
hlt
stc
fdivp
std
int
out
icebp
lret
loopne
loop
int3
enter
loopne
in
cmp
fimull
test
fcmovnbe
fxtract
cli
cmpb
stc
rcr
and
xlat
int3
out
fisttpl
lret
xor
clc
lock
fdivrs
out
fsub
shl
out
std
rcl
fcomp
out
clc
fxch
fmuls
xor
sub
xor
in
xlat
jmp
cmp
loopne
test
out
loop
out
test
cs
hlt
hlt
loopne
fcom
cmp
std
ffree
call
jmp
and
lret
jmp
bnd
cmc
icebp
neg
cmp
clc
fucom
ret
in
icebp
out
jmp
out
hlt
loopne
aam
jecxz
cmp
into
aam
xlat
test
sub
repnz
std
call
in
call
enter
stc
xlat
cmp
ds
cmp
sti
lret
fabs
rorl
clc
out
sar
in
int3
aam
cmp
rolb
addb
nop
icebp
fst
xchg
xor
int3
aad
cmp
idivl
int
addl
xchg
fisttpl
nop
aad
int
in
out
lret
int
hlt
fdivrl
loop
fcmovu
out
sti
sub
jmp
in
leave
repz
cld
call
ds
hlt
shl
loope
rolb
in
and
addl
xor
cmp
in
int
fdiv
ret
sarl
cmp
out
xchg
test
cmc
jmp
cmc
out
neg
lock
clc
hlt
cmp
adc
hlt
cld
cld
lret
notl
into
in
jecxz
hlt
shl
in
fmul
repnz
cmc
not
aam
ljmp
cli
sbb
xor
ror
jmp
loopne
jecxz
xor
leave
cmp
aam
test
into
xchg
xchg
not
cmc
ror
iret
cmp
lret
cld
rcl
icebp
call
out
mov
jmp
cmp
sar
fildl
jecxz
into
cmp
cmp
sti
loope
xor
stc
cs
enter
enter
into
in
ret
fndisi(8087
push
ljmp
mov
shr
loopne
jmp
clc
out
cmp
cmp
shl
mov
jecxz
in
sti
rorb
fcom
cli
in
out
repnz
std
neg
cmp
rcll
iret
imul
icebp
cmp
rcl
aas
lock
into
fadd
sti
addl
or
filds
enter
cmp
loop
rolb
enter
loopne
xchg
jmp
stc
ljmp
xor
out
lret
fdivr
mov
std
aam
ret
orb
cmc
into
xor
cli
enter
clc
fdivrl
lock
rcl
out
out
jmp
out
fmulp
repnz
jecxz
int3
stc
out
in
aaa
clc
iret
xorb
neg
cld
int3
sti
cli
addl
cmp
into
aas
enter
std
test
cli
shl
addl
out
int3
ljmp
cmp
shr
cmp
fiadds
std
out
orl
int3
enter
fdivs
in
repz
hlt
fld
repnz
out
mov
dec
fsubp
and
shl
loop
out
call
repnz
cld
fcompp
cld
std
ret
cmp
cld
call
into
bnd
in
jecxz
ljmp
faddl
loopne
xchg
sti
lret
lea
ds
sti
sub
aas
push
cld
div
sbb
repz
in
into
cli
sbb
shl
out
call
idiv
aad
in
sti
std
rcr
ret
addl
jecxz
jmp
xlat
into
xor
lock
cmp
repnz
idiv
sub
jmp
jecxz
jmp
mov
movzwl
jg
xor
sub
jmp
rcl
rcr
fcmovbe
xlat
ja
inc
mov
fadd
jl
addb
jl
jmp
fdivr
cld
repnz
cli
cmp
jecxz,pt
shl
loop
and
leave
cld
fmuls
out
aad
rcr
div
repnz
cmp
fdivr
fsubp
jmp
out
sub
xor
in
clc
loope
loopne
int3
in
repz
aas
loop
xchg
call
in
leave
fucomip
cmp
loope
in
repz
fcomip
stc
movb
ljmp
clc
into
ss
cmp
in
clc
aam
fdivr
call
mov
nop
icebp
int3
ljmp
int
jmp
fdivp
icebp
aas
in
fsub
loopne
test
out
xchg
cld
in
cmc
rcr
shr
int
cmp
hlt
out
rcr
rorl
jecxz
out
ror
mov
aad
fmul
cmp
cmp
fdivrl
stc
fcmovbe
loopne
int3
call
jmp
xor
cmp
cld
out
xlat
stc
sbb
fcmovnb
testb
lock
roll
jmp
aaa
call
cmp
not
not
in
ljmp
aad
fchs
leave
in
fidivl
out
int
icebp
cmp
icebp
addb
loopne
test
test
ror
in
aaa
shr
jecxz
test
rcr
test
stc
in
int
icebp
test
std
loopne
loop
jmp
call
cmc
out
cld
not
std
cmc
cli
test
jmp
test
int
xor
shll
fadd
fdiv
out
sarb
loop
rol
ljmp
adcl
sti
xor
iret
shl
xlat
loope
imul
jmp
xor
out
jmp
out
sub
ror
lret
fdivr
cli
cmp
xor
addb
in
mov
mov
int3
leave
rol
leave
fcom
jmp
sarl
cmp
test
xchg
repnz
fsubrp
fdivr
in
icebp
out
out
icebp
stc
jmp
out
iret
hlt
xor
fucomi
in
lds
rolb
ljmp
cmc
repz
sar
in
aaa
idivb
cmp
repz
ret
shl
in
orl
mov
test
enter
xor
aad
fcmovnu
clc
hlt
in
into
cmpl
jecxz
clc
mov
shl
iret
lea
ss
clc
int
fcmovne
sarb
clc
rcl
jmp
in
mov
int3
jecxz
nop
mov
xor
xor
das
cmc
xor
lock
leave
cld
in
sti
orl
cmc
rol
lds
stc
icebp
in
fdivs
lock
ljmp
push
loop
out
mov
fcmove
mov
shl
sti
xor
call
cmp
hlt
roll
xchg
fcmovbe
adcb
test
lret
fmul
aam
lds
fisttpll
mov
repnz
int3
fcmovne
int3
fildl
out
leave
jecxz
iret
out
out
adc
loope
into
cmp
cmp
loopne
in
fninit
cli
cli
fdivr
cmc
ds
into
ror
shl
xor
call
out
repnz
ret
sarb
cld
out
mov
fmuls
out
sub
jmp
cld
sarb
std
test
fists
mov
fdivrs
shll
jmp
or
cld
std
mov
std
ret
addl
xor
fdivr
out
in
fucomi
ljmp
out
dec
out
clc
cld
nop
xchg
clc
clc
sub
xor
xor
enter
out
loopne
leave
xchg
jecxz
jmp
ficoml
aam
fcomi
shl
lret
jmp
in
sarb
cmp
out
idiv
xlat
lret
out
leave
loopne
icebp
xor
into
cli
hlt
shl
fidivs
cmp
fdivrs
iret
lock
leave
icebp
jmp
ror
xor
icebp
aaa
divl
hlt
xor
adc
repnz
std
clc
rolb
leave
call
ljmp
icebp
out
roll
roll
xlat
in
jmp
test
int
xlat
aaa
sub
mov
jmp
jmp
rcl
rol
fstp
int3
outsb
lea
jl
addb
jl
enter
test
fyl2x
rol
jmp
mov
fmulp
mov
xor
ljmp
out
cmp
out
cmp
mov
add
std
jmp
call
ljmp
lock
ret
call
out
orb
in
fdecstp
in
xor
loope
ret
cmp
ffree
shr
xor
cli
in
icebp
out
hlt
xor
ror
int
repz
cli
repz
sti
div
in
addl
iret
jecxz
lret
rol
cmp
icebp
xor
ret
shl
loopne
stc
lret
fisttps
call
icebp
shll
cmp
adc
ds
call
testb
xor
int
idivb
lock
and
sar
ljmp
iret
loopne
in
out
xlat
sti
aas
fsub
int3
rcl
shl
cmc
xchg
clc
loope
stc
int3
ret
hlt
cmc
xlat
int3
aad
lock
aas
ss
test
rcr
incl
mov
incb
in
xlat
jmp
int
ljmp
incb
int
into
decl
out
ret
icebp
fldcw
out
shr
out
ffree
incb
lret
cld
lret
clc
jmp
out
xchg
jmp
iret
not
aaa
cmp
cmpl
cmp
aam
cli
enter
into
loop
leave
int3
call
cs
in
lret
in
cld
lret
int3
fsubrp
in
repz
aam
xor
leave
ljmp
fiadds
iret
sti
out
cmp
out
ss
jecxz
cmp
orl
jmp
ret
jecxz
iret
hlt
fidivl
sar
repnz
loop
ret
out
ljmp
shlb
leave
jmp
xor
fchs
std
ret
ljmp
rol
mov
jecxz
sbb
ds
vpmulhuw
clc
out
imul
int3
test
ds
adc
leave
lret
int3
jmp
in
shll
xor
iret
aad
iret
xor
fstpt
loopne
xlat
fmul
in
ffreep
repz
in
cmp
fxch
repnz
shl
stc
clc
fcmovnu
sar
orb
xor
loop
repz
int3
xor
jecxz
lock
stc
sbb
xchg
fxch
loope
xchg
rcr
xor
jmp
cmc
fucomip
lock
aam
aam
mov
xchg
fists
mov
sub
out
repz
xor
cmp
aad
loope
xchg
fucomip
int3
in
repz
fmulp
out
fidivl
fnstenv
clc
lock
std
repz
imul
repz
fsub
call
icebp
inc
mov
repnz
xor
aad
leave
lock
aad
shl
ds
aad
xor
add
out
mov
in
test
out
aad
ret
orb
out
out
orb
out
cmp
leave
shr
ljmp
jecxz
fdivr
ror
stc
out
jmp
ficoml
xor
out
lret
cli
std
loopne
repz
call
jmp
fsubr
in
in
in
fidivs
jecxz
out
xor
cli
loopne
aam
ret
xchg
idiv
incb
or
aad
idivl
out
cld
into
idivb
sar
repz
rol
fucom
xchg
orl
leave
xor
fninit
int3
idiv
shl
loopne
cli
orb
rcl
mov
leave
cmp
xor
in
hlt
stc
leave
int3
ds
repz
cld
repz
test
jmp
loopne
xor
fsubr
ror
aaa
aad
cmp
aad
and
leave
xlat
out
int3
stc
in
loop
loopne
shlb
lret
stc
out
ss
fcmovu
sti
aas
cmp
les
cli
fcomp
ffree
add
movl
lret
xlat
xor
hlt
aaa
aad
in
stc
sbb
fcomp
out
fcomp
out
cld
rorl
ljmp
idiv
clc
clc
loopne
fcmovnu
loop
xchg
orl
xchg
in
into
iret
hlt
neg
aas
neg
loopne
lea
mov
jmp
mov
lret
fnstenv
mov
jl
addb
jl
in
rcr
jecxz
mov
test
cld
enter
mov
out
cmc
call
xor
repnz
hlt
int
ss
aad
fdivr
xchg
sub
in
repz
out
xor
enter
hlt
adc
iret
add
xchg
sar
rol
std
and
cld
into
f2xm1
out
jmp
sti
lret
lret
xlat
repz
ljmp
aaa
lret
in
in
sar
clc
xor
cmp
aam
flds
leave
idiv
jecxz
test
shrl
hlt
xor
ds
repnz
test
repz
mov
mov
in
out
xchg
in
lock
cmpl
out
cmp
call
vpshlb
jmp
hlt
leave
shl
cmp
mov
in
jmp
cli
lret
orb
cs
jecxz
icebp
xor
lret
f2xm1
cmc
shl
cmp
loop
sar
rol
rcr
enter
lock
sbb
roll
roll
in
rcll
leave
shr
cli
repnz
loopne
rcr
rcr
shl
and
jecxz
ret
loop
iret
call
fstp
aaa
lret
rcr
fldl2e
loopne
lock
fsubr
xchg
lock
cld
lock
in
iret
icebp
std
rcr
cmc
in
out
aas
lock
lret
jmp
ljmp
aaa
sub
fcmovnbe
lock
rol
out
jecxz
fcmovnb
adc
jecxz
lret
hlt
nop
rcl
aam
lock
fdivr
lock
int3
sar
fcomp
ds
jmp
fsubp
enter
repnz
mov
out
shr
loop
out
into
loope
aas
cmp
test
lock
mov
mov
mov
in
xor
aam
fcmovnb
test
cld
cmp
cld
sti
enter
ffree
jecxz
xor
das
fldcw
in
into
in
cmp
cmp
xlat
out
loope
fabs
pop
lock
cs
cmp
xor
cmc
shl
loopne
neg
in
cmc
ret
cli
sti
cld
lret
in
shl
lret
out
ret
in
std
fld1
int
cmp
fdivrp
fsub
loope
fsubrp
mov
cld
xchg
mov
sub
into
aam
out
stc
cmp
sar
cmp
aas
loope
mov
jmp
movl
fmul
out
ljmp
fcmovu
aas
sarl
aad
vcvttpd2dq
out
icebp
iret
mov
enter
repnz
jmp
lret
repz
in
clc
fimuls
xchg
mov
ret
jmp
cmp
jmp
clc
jmp
stc
int3
out
mov
loopne
xchg
int
clc
jmp
ljmp
lret
stc
std
in
in
in
fdivr
mov
iret
in
xchg
xor
xor
test
xor
fdivp
sti
cmp
mov
nop
xchg
incl
xlat
in
repz
sti
rcl
fldz
shl
mov
out
sbb
pop
aad
xor
xor
fcmovnu
jecxz
bnd
adc
sti
icebp
icebp
sub
in
int3
enter
repz
lret
in
stc
aam
not
lret
fmul
mov
repz
cs
lock
cmc
call
lock
mov
in
mul
loopne
mov
xchg
lret
lret
aaa
sti
stc
shl
out
rcl
aam
rcl
sti
rcr
in
mov
loope
ret
in
into
cli
ljmp
loop
test
in
fdiv
loopne
fucomi
mov
icebp
iret
xor
leave
in
lret
cld
repnz
int
div
loopne
bnd
fdivrp
mov
mov
imul
cmc
loopne
cmp
xor
cld
test
fmul
in
iret
jecxz
xlat
icebp
loop
ss
leave
call
cmp
fld
cmp
jecxz
xchg
fcoml
xchg
repz
aaa
ss
aas
cmp
ret
in
xlat
clc
xchg
aad
mov
mov
fucom
sti
ljmp
rcr
repnz
shl
ss
aam
stc
mov
cmp
je
mov
jmp
ror
lret
int
loopne
and
outsb
sarl
add
rcr
ret
lea
divb
aaa
call
ror
aaa
in
fsubr
sar
fst
ret
aad
in
test
xchg
aas
aad
icebp
out
icebp
lock
cmp
sbb
aas
ftst
sti
faddp
ret
jmp
lea
xchg
lret
out
aad
cmp
aas
and
out
neg
cmp
fldpi
mov
sarl
out
icebp
idiv
jmp
shl
sar
stc
sarl
repz
jmp
loopne
repz
leave
shll
fnstcw
stc
aas
shr
fcmovb
ds
xlat
in
loop
and
int3
inc
lock
leave
out
fdivs
iret
cli
cmp
fcmovne
iret
ds
hlt
xchg
test
fstp
loop
fadd
imul
lds
shr
dec
fstp
repnz
test
jmp
ffreep
leave
xchg
lret
lock
xor
out
xor
sar
idiv
cmp
cli
test
std
stc
enter
orl
xor
icebp
imull
lret
loope
shl
lock
mov
sti
test
lret
not
call
out
out
fiaddl
stc
mov
sti
mov
filds
iret
xor
das
sarb
fdivr
test
ret
idiv
mov
xor
ret
lret
int
cmp
leave
in
lret
sti
cmpl
sti
in
mov
out
cld
mov
int3
xchg
repnz
cmp
repnz
icebp
cmp
aam
ret
fadd
cld
loopne
loope
xchg
iret
sar
mov
into
cmp
cli
ror
aad
and
rol
loop
out
clc
fscale
stc
icebp
jmp
not
icebp
in
xlat
aaa
repz
out
jmp
int
xchg
rolb
icebp
jmp
ljmp
into
xor
rcr
aam
shl
repz
test
fdivp
movb
repnz
jecxz
ss
repnz
cmp
shl
repnz
jmp
inc
cli
sti
in
lret
loope
icebp
ret
ljmp
cmp
lret
cld
stc
jecxz
fcmovnu
enter
les
repnz
ret
aam
cmp
fsubp
loopne
loop
leave
loop
fcmovu
fninit
lock
in
out
cmp
hlt
jmp
lret
xlat
sarl
loop
leave
enter
fsubp
lret
out
cmc
xor
xor
aad
les
fiadds
icebp
sar
test
or
jmp
lds
shl
ret
ds
stc
xor
lock
fst
add
jmp
xchg
std
lock
rcl
lret
out
fmul
out
cld
int3
sti
out
clc
call
out
in
fmuls
jecxz
ror
fnstenv
clc
lock
leave
cmp
enter
iret
mov
cld
test
in
in
fiaddl
shr
out
clc
stc
int
hlt
std
cmp
shl
test
aam
fxch
fsubr
cmp
lret
shr
iret
int3
aaa
hlt
jmp
sti
fidivrs
int
std
fucom
hlt
call
jecxz
cli
loop
out
sub
leave
shll
hlt
aam
fbstp
cmpl
mov
clc
call
iret
jmp
ror
in
fcmovnu
fsubr
std
test
aam
ret
decl
cld
loopne
hlt
into
lret
in
std
aam
fcmovbe
rcl
std
fcmovnb
fisttps
lea
jecxz
lea
lret
ret
iret
in
cld
icebp
ror
stc
ljmp
in
mov
std
call
cld
int
lock
xor
aad
xor
cmp
ret
xchg
cli
fimuls
leave
loope
int
xor
testl
lock
out
out
jecxz
std
in
int3
sbb
rcl
leave
repnz
lock
loope
enter
lret
jmp
sub
in
enter
rol
in
test
mov
xchg
ret
xor
fdivrp
int3
ror
shl
into
fadds
mov
hlt
iret
in
hlt
xlat
leave
xlat
xor
stc
xor
int
loop
loopne
jecxz
test
pusha
jmp
jmp
ret
lret
enter
dec
into
jmp
inc
hlt
jl
addb
jl
test
mov
mov
in
lret
rcl
iret
lock
cmp
jmp
fsubrp
int
loope
mov
xchg
loope
stc
hlt
out
rcr
fistpll
ds
repnz
loopne
call
sti
filds
aad
xor
clc
ds
repnz
not
fpatan
ret
fimull
fmulp
lock
sub
lret
aaa
out
cmp
xlat
cld
cmc
cmp
in
clc
ret
call
out
test
aam
cmp
loope
loopne
lock
cld
les
out
loope
cli
loop
lds
stc
call
repz
xor
in
div
ror
cmc
xor
movl
jecxz
int
jmp
cmc
lock
shl
aad
loopne
fdivr
shr
out
cmc
call
clc
out
clc
hlt
cmp
fmul
ret
and
movl
hlt
in
vpsubq
jmp
repnz
mov
rorl
sar
test
aad
ss
shl
out
incl
les
fdiv
enter
xor
jmp
cs
shl
in
hlt
aad
fsub
ljmp
mov
xlat
cmp
fucom
cmp
icebp
fsubrp
cmp
sar
call
in
add
lret
sar
shl
shl
xor
iret
fsin
cmp
in
cmp
aam
out
ds
testb
and
cld
enter
in
ss
cmp
fadds
add
lret
sti
in
mov
ds
fcmovnbe
jmp
hlt
lock
loope
repz
std
test
out
xchg
orb
cmc
les
cmp
out
cmp
mov
out
lock
out
stc
loop
aad
xlat
pushl
leave
ljmp
adc
addb
in
xchg
mov
lret
aam
out
cld
xor
aam
fsubr
int
test
fdiv
cli
mov
int3
aaa
test
in
sar
fcomi
cmc
loop
call
test
addb
enter
xlat
repz
iret
loopne
loope
loope
xchg
cli
orl
loope
xor
cmp
out
in
sti
call
inc
cmp
fmull
mov
in
out
iret
idivl
divl
sti
rcr
out
hlt
cld
rol
ds
aad
jmp
jmp
repnz
in
xor
jecxz
cmp
cmp
fchs
cld
lock
iret
aad
test
cld
in
orl
mov
out
enter
hlt
fidivrl
loopne
loop
test
mov
xchg
mov
xchg
loope
stc
cmp
stc
std
fdivs
hlt
lock
fadd
in
sub
xchg
test
cli
in
fimull
in
jecxz
in
aad
fcmovnu
ffree
jecxz
xchg
ror
mov
nop
fiadds
in
shr
rcr
xor
stc
out
in
leave
lds
out
out
in
mov
loopne
loop
out
out
aaa
fcom
icebp
ret
rolb
fldl
nop
xchg
push
mov
ljmp
enter
xlat
xor
cli
jmp
std
in
lock
mov
xor
stc
xlat
cmp
hlt
fsubr
add
fsubp
repz
into
shl
in
mov
clc
out
loope
mov
aam
aaa
ljmp
cmc
hlt
in
in
repz
sbb
fdivr
out
call
imul
in
sar
cmp
cmp
fidivrs
cmp
sbb
lock
in
out
repnz
xor
xlat
cmp
iret
neg
clc
aad
fcmovnbe
xlat
jmp
lock
loope
std
enter
out
jmp
in
jmp
out
lock
testb
in
ljmp
icebp
in
icebp
les
lock
cmp
cmp
std
incl
ret
fsub
mov
in
decl
xor
xor
aad
jmp
rcl
jecxz
cmc
test
clc
loope
mov
int3
mov
jmp
ret
aad
lret
enter
fmul
les
jl
addb
jl
mov
out
sar
fidivl
std
call
aaa
icebp
incl
clc
flds
in
out
fidivs
xor
ljmp
out
call
xchg
cli
cmc
jmp
xchg
ljmp
out
test
repnz
int3
cmp
int3
fcmovu
fadds
lea
mov
out
sarb
lock
loope
clc
rcr
add
test
ret
enter
fucompp
sub
mov
in
divb
in
cmp
ret
mov
ret
fcomp
cld
std
cli
sti
into
xchg
repz
xor
out
aas
call
jecxz
cmp
mov
sti
leave
clc
xchg
lea
shl
lret
ljmp
icebp
shl
rcr
loopne
fiadds
mul
mov
aas
lret
lret
fidivrl
clc
cmp
aas
fcomip
flds
lret
filds
test
mov
into
xor
sar
clc
test
repnz
fidivrl
loop
and
out
mov
iret
sub
shr
fcmove
xor
roll
repnz
in
mov
out
out
xlat
ror
enter
cmc
shlb
into
iret
cld
ljmp
in
ljmp
mov
int3
jecxz
ret
fcomi
aam
ljmp
sti
repnz
loop
ret
out
mov
mov
shr
call
rcl
cld
cmp
aad
rolb
mov
ffree
lea
lret
leave
cmp
jmp
cmp
sbb
ret
jecxz
loope
leave
iret
sti
fmul
out
jmp
neg
ffreep
lret
fnop
cmp
icebp
repnz
aad
xchg
adcl
cmp
out
out
cmp
out
loopne
cld
sti
fiaddl
in
ds
xor
fcomp
push
clc
hlt
aad
loopne
cli
test
not
movb
loopne
ret
hlt
aam
stc
in
in
xchg
ret
cli
rol
fmulp
enter
loope
das
repnz
xor
int
ljmp
clc
ror
fmuls
sti
out
int3
in
mov
xor
div
xor
xor
cmp
clc
icebp
lock
test
loopne
loop
or
shl
int3
iret
xchg
leave
aam
ljmp
lock
repz
in
cld
call
int3
mov
icebp
loopne
lret
loop
sub
cmc
int3
shr
out
faddl
lret
ret
aam
out
fsubr
xchg
repnz
xor
lock
cs
fcmovnb
lret
repz
cmp
cmc
ret
mov
jecxz
iret
lret
fimuls
out
fld
ret
std
jmp
loopne
out
sti
icebp
in
roll
mov
subb
loop
cmp
fcom
in
div
aas
cmc
icebp
hlt
clc
xchg
xchg
fmulp
out
out
mov
out
lret
aaa
xor
rol
into
cmp
in
cmp
cmp
add
test
lret
std
xchg
mov
mov
shl
loop
out
out
leave
out
out
xor
in
fyl2xp1
out
loopne
shl
mov
fucomip
leave
out
ljmp
cli
repnz
out
int3
ds
not
div
repz
loop
neg
loopne
in
ljmp
iret
xor
xor
into
shlb
ret
loope
mov
jmp
mov
adcl
ljmp
std
in
fisttpl
lea
sub
shll
shl
lret
aas
cmp
xor
iret
xchg
rcr
lret
fstp
mov
out
shrl
cmp
icebp
call
fsubp
cmp
loopne
lret
out
mov
xchg
int
loope
lock
rol
lock
jmp
sarl
div
jmp
in
xchg
shr
jmp
cmc
ds
shl
ret
hlt
in
loop
rcr
lea
out
int3
in
sarb
neg
fcmovnb
sarl
and
roll
out
lret
out
out
ss
sarb
in
repz
iret
shlb
aas
aam
mov
stc
xlat
test
in
mov
shl
into
in
rorb
add
jmp
rol
rcr
jbe
ss
hlt
and
jl
add
lock
aad
fdivrl
iret
rcl
repz
sti
hlt
sar
lret
in
fucomip
in
in
call
lock
ljmp
repnz
mov
std
jecxz
iret
fildl
das
xor
jmp
xor
shr
sar
cmp
loope
cmc
ret
mov
xor
xlat
lock
repz
xor
cmp
hlt
sarl
fnstsw
ljmp
loop
shl
xor
xlat
ffreep
aam
rcr
jecxz
call
test
in
mov
test
mov
cmc
les
call
fmul
ror
clc
lds
in
enter
xchg
call
cmp
stc
std
imul
loopne
in
sar
fcmovnbe
icebp
neg
ret
int3
ffree
in
in
xor
cmp
hlt
ror
clc
sarl
cmp
faddl
in
lret
int
out
in
shr
int3
in
les
cmp
cli
cld
jmp
fyl2xp1
fnstcw
xlat
call
out
test
out
fisttps
stc
lret
fucomp
leave
icebp
xor
out
in
flds
popl
mov
into
jecxz
loop
into
fdivrp
and
cld
fdecstp
shl
flds
out
incb
div
lret
leave
cmp
cmp
cli
rcr
rolb
ror
xchg
nop
test
lret
leave
test
fcomip
cmp
fiaddl
jecxz
std
test
loopne
lock
xor
repnz
jmp
fnsave
ss
into
int
xlat
jecxz
jmp
mov
mov
xlat
in
in
ljmp
fadds
aam
aam
out
in
ror
xchg
cs
lret
shrb
leave
call
shl
addl
fmull
out
in
shrl
ret
aaa
xor
repnz
cmc
rcl
roll
in
fiaddl
hlt
aaa
in
int
hlt
cmp
loope
call
in
loop
rcl
fxch
idiv
out
xchg
int3
shll
in
ret
iret
repz
lret
roll
xlat
aas
cmc
rolb
cli
fucomip
out
repnz
int
jecxz
out
hlt
cmp
repnz
cmc
fcmovb
hlt
fcmovnu
jmp
jmp
into
jmp
xor
ror
cmp
cld
jmp
incl
aad
xchg
fucomi
clc
xchg
sti
xchg
test
out
fpatan
sarb
imul
ss
clc
ror
in
fcomp
ds
fadds
rcr
xchg
aam
xor
xor
repnz
push
rcr
out
repz
lock
flds
lret
rorb
xor
xor
fcmovu
fldl
add
mov
in
fsubp
mov
enter
hlt
int3
out
out
cmp
cmp
in
out
xlat
cmp
lret
in
fdivp
lock
iret
out
jmp
xor
aam
lock
cmp
aaa
hlt
ret
mov
mov
leave
fninit
ljmp
ror
xor
cmc
sbb
lock
jecxz
in
test
test
mov
out
repz
cmc
shl
enter
xlat
lret
ret
in
test
xlat
hlt
mov
jmp
test
xlat
icebp
cs
repz
iret
cld
fcmovnbe
iret
cmp
cmp
std
fcomip
ffree
iret
lea
jmp
icebp
lret
aam
fidivrl
hlt
rolb
out
stc
xchg
test
xchg
jmp
shr
int3
shr
repnz
icebp
out
lock
call
std
enter
ror
test
icebp
aad
fcmovnu
das
xor
iret
loopne
rcl
fcomip
cmp
lds
fmul
and
aam
in
clc
jmp
lret
fxch
repz
cli
cli
loope
ret
clc
fucomip
out
mov
xor
cmp
aas
lret
cli
mul
std
iret
xchg
xchg
in
xchg
ds
out
jmp
fcmovbe
out
call
stc
out
ds
ret
enter
lock
and
shr
lock
xor
in
sar
int3
cld
cmp
shl
mov
aad
in
fsub
icebp
shr
xchg
ret
shr
lock
lock
je
mov
mov
mov
mov
lea
add
jmp
mov
fcmovnu
jnp
clc
mov
lret
push
in
jl
add
xlat
fscale
ffree
stc
out
std
test
lret
test
out
lock
fucomip
xor
lock
shl
mov
ljmp
out
rol
xor
sarb
out
mov
shr
jmp
xchg
xchg
shr
shr
jmp
sarb
cmp
mov
sti
out
fsub
rcl
aam
ror
cmp
cmp
vpmullw
mov
leave
testl
iret
lret
lock
icebp
rcr
cld
in
into
icebp
fcomp
ret
cld
in
sti
iret
std
xchg
lock
icebp
xor
xor
sar
clc
xor
aad
movl
loope
cld
rcl
out
loopne
enter
std
cmp
shl
jecxz
test
mov
out
cld
out
repnz
icebp
xor
sar
rcr
cmp
int
aas
int
fadd
jmp
out
aam
in
out
loope
and
ret
out
fcmove
cmp
fdivp
loopne
in
lret
in
shl
mov
mov
xchg
xchg
in
aaa
repnz
fildl
ds
cmc
loop
in
out
into
test
call
cli
sarl
sti
int3
sarl
lret
in
orb
aaa
out
ljmp
out
cmp
test
test
enter
out
out
divb
lret
in
aaa
enter
aaa
sar
aad
into
ds
add
frstpm(287
jmp
lock
leave
divl
out
shlb
out
jmp
sar
fiadds
loope
mov
lret
rcl
shr
hlt
cmc
in
xor
int3
shl
ljmp
out
cmp
mov
filds
xchg
xchg
xchg
xor
shl
ss
clc
lret
ljmp
fdivr
filds
out
dec
icebp
mov
ljmp
in
cmp
aam
shl
clc
hlt
cmp
xlat
test
add
lret
std
out
xchg
xor
int
shr
icebp
lret
ret
jmp
xchg
std
in
into
mov
lret
ljmp
aad
out
test
sti
mov
lret
sbb
adc
xabort
ljmp
lock
stc
aad
loop
fcom
out
loopne
mov
mov
jecxz
ss
aaa
repz
sarl
icebp
faddp
loope
shl
repnz
sti
repz
in
jecxz
int3
test
fdivr
ss
jecxz
adc
sub
fsub
jmp
ror
das
xlat
xor
aad
cmc
cli
fxch
loopne
cld
xchg
fcmovnu
xor
fmul
test
loopne
sarb
cmp
fdivp
cmp
ret
into
in
in
cld
fld
imul
test
lret
in
mov
into
test
cli
in
int3
ds
ss
fyl2xp1
div
sub
in
test
mov
ret
adc
fdivs
in
in
clc
xlat
std
rolb
in
mov
mov
repz
hlt
shlb
xor
cmp
cld
and
ffree
hlt
in
test
repnz
loopne
repnz
xor
rcr
lret
jmp
stc
neg
ds
incb
flds
mov
loopne
icebp
int3
jmp
shr
repnz
hlt
loope
cli
fxch
mov
test
inc
fcmove
or
lret
lock
imul
lret
sub
ret
test
mov
fildl
out
iret
repz
xor
ror
std
loop
loope
shl
in
xor
jmp
ret
fdivp
jmp
lret
fdivrs
adc
in
ds
fcmovb
cli
icebp
ljmp
into
test
ret
xor
loop
sarl
aam
jmp
dec
in
out
test
int3
test
repnz
lock
out
out
fcmovbe
cmp
iret
inc
aam
repnz
rorl
ret
iret
rcll
fnstenv
aaa
ret
cmp
sarl
ret
clc
rcr
sar
fsubr
fdivrp
loop
out
in
call
fmul
out
aaa
icebp
cmp
stc
in
dec
clc
jmp
int
xlat
int3
int
cmc
or
imulb
gs
jo
call
jl
out
fadd
leave
mov
test
testb
in
out
das
xor
cmp
icebp
int
xor
shr
int
loopne
out
ret
jmp
in
loopne
lock
ret
xor
cmp
in
rcl
into
lock
cmp
xchg
repnz
clc
xlat
repnz
in
in
rcr
sbb
aad
fmul
out
int
std
adc
test
fimuls
and
out
call
fsubrp
fucomp
shl
fstpt
ret
cmc
fdivr
fdivr
out
out
ljmp
clc
repnz
leave
cld
fistpll
in
icebp
cli
cmc
fcmovb
cli
ror
fmull
mov
jmp
lret
int
loop
ror
rcl
clc
lock
rorl
fld
out
aad
out
lock
lret
cmc
test
repz
out
mov
lret
ss
ljmp
jmp
in
rol
call
shr
repnz
ljmp
aad
in
vpmulhw
lret
out
faddp
cmp
repz
aam
xchg
rcr
addb
int
shlb
xor
fmul
cmp
lock
mov
int3
iret
jmp
aam
jmp
imul
into
call
shl
xlat
cmp
ret
leave
int3
out
in
fadds
loopne
ret
int3
rol
ss
fcmovne
xor
loopne
cli
sbb
loope
in
fldz
mov
call
int3
lock
int
adc
sbb
hlt
in
mov
ljmp
jmp
shr
sar
shl
jmp
aas
stc
testb
loope
ds
idivl
in
sar
rcr
enter
ret
test
loope
fdivp
int3
fsubr
jmp
xchg
aaa
in
jmp
aam
shll
repz
mov
test
clc
roll
jecxz
call
aam
divl
cmc
aas
in
mul
div
fadd
cld
cli
sbb
loop
fcoml
jmp
in
sub
sub
std
stc
ret
leave
filds
out
xor
sub
xor
lret
not
testb
loopne
out
addb
xchg
ror
loop
in
cmp
icebp
xor
repz
loop
mov
idivb
xlat
sbb
mov
ljmp
out
fucomip
icebp
sarl
xlat
xlat
sbb
mov
std
out
loopne
sbb
das
ret
out
lret
into
stc
clc
jmp
out
cld
cli
sti
fucompp
jmp
aas
clc
incb
xchg
xchg
ret
int3
rol
out
cmp
cmp
aam
call
sti
icebp
hlt
bnd
xor
test
repz
cmp
std
aas
ss
hlt
xlat
mul
lock
cmp
stc
clc
inc
in
fnstenv
icebp
cmp
cmp
fmulp
std
cli
adc
test
fucomp
mov
fldz
fcmovnb
cld
out
loope
lret
sar
xlat
sbb
test
in
mov
in
enter
int3
clc
aaa
fnstsw
icebp
hlt
into
into
shr
in
repz
out
add
leave
jecxz
cmc
in
cli
out
fucomp
ror
cmp
cli
icebp
leave
cld
xchg
fsubp
shl
call
fcmovnb
neg
loope
cmp
in
hlt
rolb
sti
xlat
out
mov
sarb
stc
lret
ljmp
sti
aas
in
add
xlat
lds
and
in
rolb
in
xor
das
lret
aam
shll
clc
cld
cmp
cli
out
aad
ljmp
xchg
out
ret
ss
in
lret
rcl
ss
int
xlat
loop
fdivp
ljmp
in
jmp
out
loopne
aaa
leave
xor
xor
addb
test
imul
xchg
mov
out
xchg
jecxz
ljmp
aas
xlat
fistpll
test
rol
rcr
xchg
stc
aam
std
loopne
sbb
mov
idiv
cmp
aam
in
jecxz
into
clc
xor
test
out
ljmp
iret
out
ret
in
neg
stc
shlb
shl
sbb
shl
leave
cli
test
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
jmp
leave
aam
fld
fpatan
cwtl
jp
enter
adc
jl
addb
jl
xchg
mov
and
lret
hlt
xor
ret
xlat
in
cld
aaa
rcl
cli
test
xchg
in
out
std
out
dec
adcl
out
aad
in
int
call
into
aas
repnz
fcmovu
std
lret
icebp
out
icebp
rcl
fincstp
hlt
sarb
xor
cld
fsubr
hlt
idiv
stc
xchg
sti
mov
vpmulhw
sub
stc
clc
sti
xor
aaa
rol
int
out
sti
std
rcl
not
cld
call
std
lret
ljmp
xor
cmp
icebp
cld
cmp
fcomi
test
flds
xchg
fadds
cmc
loop
out
call
int
shr
cmp
lock
jecxz
ror
test
fcmovu
fdiv
jmp
hlt
int
rcl
aad
jmp
loope
in
fdivrp
rorb
fidivrl
clc
out
cmp
hlt
fsub
into
stc
rcr
ret
loopne
fcmovnu
int3
in
loope
aad
jmp
out
xor
xlat
fcomp
ror
neg
cld
cld
filds
jmp
leave
loop
das
in
sar
std
shr
jecxz
roll
cli
mov
addl
out
out
lret
in
cmp
fldlg2
ret
sub
stc
ret
jecxz
xchg
sbb
fdiv
in
cmp
int
sti
out
neg
repz
clc
loope
mov
jmp
jmp
in
aaa
int3
pushl
fmul
loopne
out
roll
call
loop
cmc
lea
leave
jmp
stc
jecxz
test
sar
repnz
jmp
sti
lret
loopne
xchg
xchg
mov
xor
xor
int3
leave
jmp
rcl
fpatan
xlat
fdivp
fcom
sbb
ret
in
repz
not
cli
push
lret
cmp
xchg
test
hlt
fadds
xchg
cld
aad
out
ss
xor
fdivp
out
ss
cmp
fdivr
loopne
xchg
addl
loopne
lret
hlt
out
sti
xor
stc
cmc
sti
fcmove
xor
mov
ror
shl
loop
xor
sti
cld
cmp
aas
rcl
stc
fsub
fld
shl
clc
testl
shl
xor
sub
into
fcmove
xlat
cmc
out
aam
ret
incl
mov
test
loope
iret
repz
cmp
ss
aam
in
test
ret
fcmovu
leave
loop
lret
out
mov
mov
ljmp
cmp
rcl
cmp
cmc
test
incl
ret
repz
int3
out
into
enter
call
fsub
test
test
ret
fcmovnb
testb
lret
enter
cmp
and
aas
xchg
repz
fcmovb
in
mov
mov
ret
xor
fsubr
fstp
sar
into
fcmovu
xlat
loopne
in
aam
and
in
int
in
xor
hlt
lret
lret
xor
ret
rol
repz
cli
mov
loopne
std
cmc
lret
sub
fmul
call
ror
cmc
test
xchg
repz
loop
adcb
shl
fxch
idiv
loopne
fiaddl
aad
fsubrp
ret
ljmp
xchg
shrb
in
lret
jmp
shr
ljmp
ret
ffree
jmp
std
sub
test
cmp
in
aas
in
xor
hlt
repnz
loop
out
stc
lret
icebp
jecxz
out
leave
xor
fdivs
dec
lock
int3
jecxz
inc
lret
or
shr
ret
enter
in
repz
addb
icebp
enter
jmp
shll
into
cmp
stc
into
into
cmp
mov
call
enter
shr
lret
rcr
shll
xor
cmp
cmp
repnz
shl
test
fcoml
xlat
cmp
jecxz
cld
div
div
in
sar
xchg
xlat
hlt
fmulp
test
std
rcl
xchg
cmc
rcl
sub
xor
shl
xor
out
rcl
iret
in
mul
out
int
lret
jmp
ror
int
fcmove
mov
push
sub
cwtl
repz
addb
jl
ljmp
int3
in
out
ljmp
fadd
jmp
lret
int3
iret
fucomip
movl
cli
aaa
stc
clc
hlt
cmp
test
add
repz
test
leave
cmc
fcomi
loop
ljmp
mul
mul
fabs
cmc
sti
xlat
mov
call
repz
lret
fadd
jmp
out
shl
fsub
aad
cmp
repz
mov
cmc
loop
fmul
int
fxch
out
xor
cld
fdivr
fsubp
inc
out
ljmp
mov
cld
shr
aad
repnz
rol
jmp
sar
ret
stc
aad
cld
out
loop
repz
jmp
cmp
ffree
cld
out
int3
std
out
iret
hlt
div
xchg
enter
cli
in
in
test
sub
sub
xor
xlat
ss
cmp
testb
mov
test
jmp
loop
shlb
iret
xor
hlt
sti
shr
out
loope
lret
aam
vpmaxub
loopne
jmp
fucomp
shr
jmp
fucomip
not
fcmovbe
lret
rcl
xlat
loope
aas
xlat
neg
xchg
in
mov
mov
out
fiaddl
jmp
out
sti
fsin
out
cmp
cmc
or
addb
mov
xor
out
call
xor
call
test
in
cmp
xchg
test
aam
sar
into
sti
cmp
neg
cmp
fnstcw
roll
lret
ljmp
call
in
adc
mul
cmc
loope
ret
fucomip
mov
iret
int3
out
cmp
enter
stc
loope
repnz
incl
stc
out
adc
jmp
jecxz
repz
cld
int
xlat
aas
test
mov
or
std
loope
fmulp
xrelease
in
aaa
sarb
iret
iret
cld
adc
in
iret
fiadds
in
loop
clc
shl
xchg
test
out
iret
in
shlb
test
int
fucom
out
sti
stc
stc
dec
iret
icebp
loope
call
int3
into
lock
fnstcw
icebp
out
ffreep
fdivr
addb
fiadds
enter
cli
cmp
lock
fcomp
fcmovu
mul
faddl
nop
test
iret
into
out
aam
out
into
jmp
add
xchg
loopne
loope
jmp
mov
cs
ljmp
out
sub
std
cli
sar
repnz
stc
test
ljmp
fcmovnbe
sar
loope
add
aas
icebp
in
call
lret
enter
add
xor
jecxz
enter
aaa
shr
loop
fucom
lock
in
loop
xchg
in
in
out
aad
fnstsw
repnz
faddp
testb
les
repnz
xor
fcmovbe
rcr
icebp
mov
xchg
xchg
ljmp
cmc
xor
clc
iret
repz
rcr
cmc
int3
cmp
cli
xor
out
out
mov
cld
mov
int
cmc
out
cmp
sti
cli
rcl
xlat
into
leave
shr
sti
enter
fldl
ljmp
cmp
lret
xlat
inc
aam
in
aam
out
in
nop
icebp
out
icebp
mov
xor
in
out
ror
xlat
lret
mul
std
fidivrs
repnz
aad
cld
loop
nop
lock
out
xor
repz
icebp
enter
clc
cmp
hlt
aas
rolb
out
cld
xchg
in
in
xor
iret
cmc
aam
shr
ds
test
ret
leave
in
out
cli
fcomp
jecxz
xchg
xchg
rcl
in
leave
rcr
xor
lret
stc
jecxz
sarl
fstp
sbb
out
sub
cmc
imull
icebp
rcl
fcom
iret
in
idivl
cmp
aad
repnz
test
loopne
cli
lret
loop
shrl
shl
xor
lret
shr
fiadds
ds
loop
mov
in
cli
loopne
out
xor
dec
aam
cmp
loopne
xlat
orl
sti
sbb
jmp
je
mov
jmp
xlat
ror
ror
xlat
fisttpl
lock
adc
push
idivb
add
cs
out
leave
jmp
fscale
test
std
test
xchg
into
enter
in
call
idivl
fidivrs
lock
adc
inc
mov
lock
enter
out
xlat
cmp
shl
cli
fucomp
xor
leave
out
out
out
leave
clc
fnclex
dec
iret
xlat
xor
rol
xor
jmp
loopne
cmp
lock
std
test
shr
xchg
call
fdivl
fdivrp
leave
loop
test
xchg
lret
fucomp
in
xlat
ror
sti
int
xor
cld
out
xchg
loopne
repz
fiaddl
lea
sar
cmc
xlat
idiv
into
shr
in
aam
cld
std
mov
xlat
std
lret
mov
shlb
shl
sar
in
rcl
repz
std
repz
mov
into
fdivr
fldl
int
std
in
fnop
cld
sti
lock
lock
fcmove
cmp
mov
clc
cld
repz
out
xor
sar
repnz
cli
sti
not
ret
bnd
leave
int
jecxz
ljmp
ret
ljmp
cmc
sub
test
cli
in
ljmp
divl
fsubr
xlat
hlt
loope
std
fld
aad
in
nop
fdivp
sub
out
repnz
int3
lret
lret
fnsave
cmp
cmc
jmp
aas
loopne
addb
mov
jecxz
iret
jmp
loop
ss
stc
fdivs
fdiv
rcl
in
shl
clc
mov
cld
aam
xchg
out
enter
out
lret
fdivs
and
mov
cld
iret
clc
leave
incb
stc
xor
out
leave
aas
clc
rcl
into
stc
xlat
xchg
incb
idiv
stc
push
sar
xchg
in
shl
hlt
out
fcomp
xlat
jmp
cmp
repnz
fstpt
cld
incl
stc
ret
rcll
aam
repnz
shl
lret
aad
not
fsubr
mov
mov
lret
lret
aaa
lret
aam
leave
icebp
ds
sti
test
aam
aam
int
xchg
in
in
in
in
cmp
cmp
aad
idivb
mul
call
out
popl
hlt
imul
in
icebp
cmp
std
fldl
faddp
aam
loope
iret
call
shl
fcmovbe
xor
aad
ljmp
and
and
lock
int
aaa
fdivrs
cmc
icebp
rcr
imul
aam
test
enter
test
xchg
out
loopne
rol
cmc
out
in
jmp
repnz
loope
loop
loopne
xchg
lret
jmp
rol
fmul
aas
icebp
repnz
cmpb
fdivp
loope
stc
les
fisttpll
xlat
lock
into
lock
loop
std
call
enter
jecxz
into
out
das
lret
sti
stc
idivl
xlat
shl
xlat
out
loopne
out
lret
iret
test
ret
shl
repz
cmp
adc
mov
sti
icebp
icebp
out
repnz
jmp
repz
int3
in
cmp
testb
in
int3
xchg
cli
fmul
ljmp
jmp
hlt
xor
fnclex
sar
test
sbb
mov
and
out
rcl
int3
repnz
ljmp
cmp
test
std
aam
lret
mov
int3
lret
into
in
shl
xor
clc
enter
cli
aas
in
cmc
test
ljmp
out
lret
jmp
cli
cmp
fmulp
jmp
loopne
cli
test
loope
cli
orl
fnstenv
repnz
aad
int3
fnstcw
int
fdiv
loope
repnz
test
mov
xchg
aam
out
lock
cmp
aam
aad
xor
neg
cmp
rcl
call
leave
loope
std
loope
jmp
sarb
aam
fnstcw
aas
icebp
jecxz
test
aad
shl
leave
loopne
std
in
xchg
lret
int
sub
shrb
loop
xor
dec
in
or
add
add
leave
iret
xlat
rcr
flds
cwtl
pop
dec
mov
push
aas
movsb
cli
jl
addb
jl
enter
rcr
ds
aam
shl
sti
xchg
int3
lret
orl
jmp
shl
cmp
test
lret
cmp
fcmovu
repnz
mov
hlt
mov
in
in
sti
cmc
iret
lock
repz
hlt
divl
cmp
jecxz
or
fcmovnb
fdivr
orl
sub
cmp
xor
cs
xor
cmp
xlat
hlt
fldl
jecxz
icebp
shlb
sub
cmp
shr
lock
clc
int
ffreep
std
ret
out
in
loope
mov
xchg
call
in
call
enter
in
cmc
rol
shr
out
in
orb
neg
in
fucomip
shlb
clc
cli
hlt
xchg
fucomp
xchg
sub
xor
into
out
xlat
out
rcl
ljmp
ds
cli
ljmp
cmc
xor
xlat
jmp
lret
cmp
int
loope
loope
rol
out
loop
ljmp
lret
repnz
clc
cmp
sti
clc
sbb
aam
ror
sub
enter
loope
int3
int3
sub
cmc
out
ljmp
cld
shl
not
std
add
lea
shr
in
shl
sti
in
out
fnstenv
loopne
loop
xlat
cmp
ds
cli
jecxz
mov
xchg
enter
fstp
out
loopne
jmp
aaa
std
icebp
rcl
cli
xlat
addb
fdivr
out
repnz
aas
loop
sub
lock
shl
test
xchg
test
mov
out
sti
int
cmc
xor
out
aaa
lret
int
sarb
cmp
int
jmp
in
ret
out
cli
loopne
rcl
in
cmc
int3
in
xor
out
fcom
and
loop
loope
in
fsubrp
int
adcb
test
cmp
cmp
hlt
sar
test
mov
mov
cld
mov
cld
ror
fcomip
shl
clc
fcmovnu
int3
imul
xor
shl
in
ffreep
loop
ret
lret
testl
shl
rcl
cmp
xor
stc
int3
sar
sti
jecxz
cmp
ret
out
xchg
iret
xor
xor
cli
lret
div
testl
cli
in
ljmp
in
fsub
ljmp
out
aaa
hlt
fucom
xlat
ret
enter
orb
ljmp
ds
xlat
in
in
cli
fneni(8087
ds
out
fdiv
xchg
test
jecxz
neg
cmc
out
aas
ffree
icebp
aaa
cld
inc
xlat
orl
leave
repz
in
aaa
loopne
int3
fsub
lret
sarb
into
std
sarb
ds
stc
movl
int
lret
neg
cmp
fsubp
sti
into
aas
xor
out
int3
sar
xchg
mov
shlb
icebp
jmp
cmp
jmp
idiv
filds
loop
sub
loope
fdiv
rclb
xor
sti
in
xor
sbb
jecxz
cli
cmp
lds
iret
xchg
ljmp
cmc
aad
ds
iret
shlb
rol
lock
in
fucomip
loop
mov
rcl
mov
rol
cs
xor
aad
loopne
sar
ret
std
roll
mov
xchg
cmc
in
ds
fcomp
loop
call
ds
out
xchg
sti
cli
in
leave
incl
ss
xor
cld
cmp
cld
cld
inc
fiadds
call
in
orb
cmp
ljmp
fadd
lock
in
out
iret
in
aad
imul
cmc
les
sar
int
fucomip
in
and
out
enter
flds
int
mul
rcl
clc
cmp
xor
sbb
aad
hlt
aam
flds
out
ljmp
repnz
aaa
ss
fdivrl
in
lock
repnz
add
in
xchg
shl
fdivr
aas
icebp
add
cmpl
stc
in
jmp
xlat
aam
cli
out
in
into
shl
sub
jmp
leave
int
int
int
mov
aam
outsb
jo
sub
jl
jecxz
into
rol
in
clc
fmul
iret
mov
lret
into
xor
aad
in
repnz
cmp
out
shl
cmp
mov
cld
repnz
aam
rol
ret
xor
cmp
xlat
enter
rcl
rolb
loope
ret
popl
cmc
out
les
in
out
aad
cld
fmulp
cmp
shr
inc
loope
enter
in
in
or
call
sarb
inc
shl
aad
roll
leave
decb
das
ret
stc
out
jmp
ret
int3
loopne
movb
out
loopne
loope
xor
xor
aaa
sti
hlt
cmp
std
fstp
in
out
ret
mov
clc
ljmp
lret
xor
xlat
idiv
sti
in
ljmp
repnz
loopne
push
cli
hlt
clc
mov
and
fmull
ljmp
repz
in
cld
jecxz
sbb
xlat
into
mov
filds
fcom
enter
ds
cld
call
test
shl
xchg
out
fxam
div
in
std
loope
fst
rcr
int3
cli
ror
fcom
lret
int
mov
xchg
sub
repz
cmp
stc
rol
ret
loop
loope
in
neg
addb
in
mov
ss
lock
fcmovb
xor
or
cli
in
decb
call
cmc
lret
loope
les
cmp
lret
out
in
fcomi
icebp
loop
fsub
fidivrl
in
mov
addb
repnz
fndisi(8087
cld
in
xlat
fstp
addb
decb
jmp
repnz
cmp
rcl
fcomp
test
lret
lret
roll
cmc
lret
cmp
int
cmp
out
loopne
shr
cmc
xor
in
loop
sti
in
int3
iret
out
into
cs
leave
ljmp
stc
lock
rcl
hlt
shl
jmp
incl
xchg
lock
imul
icebp
out
xor
and
cmp
xlat
leave
fisttpll
out
xchg
loopne
fmulp
aam
out
aam
loope
cmp
fcomp
repz
fsub
test
mov
loop
rorl
sti
ret
std
xor
fidivl
cmc
sbb
test
rcr
test
popl
sar
in
cmp
sbb
ret
sar
loope
mov
fisttps
lret
iret
xor
in
out
fdiv
aas
aam
call
ss
faddl
fsubrp
jmp
out
xor
out
into
lret
ss
rcl
cmp
testb
xchg
jmp
xor
std
in
out
cld
call
xchg
jmp
call
mov
xor
cmp
iret
int
lock
repnz
stc
cli
xchg
mov
ror
xor
hlt
cld
aam
fcmovb
in
ret
std
fst
leave
xchg
std
clc
leave
lock
in
rol
loopne
xor
repz
in
roll
and
cmc
rol
cli
sub
loope
icebp
xchg
iret
call
ljmp
loopne
sti
lock
in
test
fmul
out
cld
xchg
repz
ss
cmp
cld
sti
xlat
incb
cmp
out
in
lret
addb
in
hlt
fcmovnbe
jmp
iret
aam
xor
fadds
ret
cld
int
repnz
sti
cmp
iret
clc
fcmovnu
imul
cmp
cmp
fsubrp
aas
lret
out
cli
jmp
rcr
leave
repz
shlb
fscale
cmp
stc
cmp
sar
fsubr
mov
stc
stc
test
nop
repnz
xchg
jmp
aam
jmp
cmp
icebp
fiaddl
mov
leave
xchg
xchg
xchg
iret
mov
out
fpatan
cmc
sarl
fadd
mul
xabort
xchg
jmp
cld
mov
call
fxch
out
lret
fcomp
faddl
incb
stc
mov
ret
loop
rol
out
in
jmp
cmpb
sarb
orb
jmp
aad
leave
lret
fstp
aad
mov
icebp
adc
add
cld
lret
in
iret
xor
xchg
divl
in
in
call
cld
cli
xlat
add
testl
fbstp
ljmp
aas
adc
out
test
lds
in
shl
jmp
cmp
cmp
imul
loopne
jmp
incb
icebp
jecxz
test
aad
cmp
sti
cmp
out
ds
orb
aam
aad
jmp
aam
out
cmp
fdivr
sti
enter
in
out
fiadds
loopne
int
fstpt
int
fcomip
std
test
sti
stc
fdivrp
stc
in
int3
addl
and
das
ss
cmp
shr
hlt
lret
aam
rol
test
std
fadd
out
std
int3
push
xor
out
clc
in
leave
xor
jmp
ffreep
cmp
fidivrl
cmc
loope
test
xchg
or
out
call
enter
ljmp
loop
in
xchg
mov
mov
xchg
in
ljmp
out
ret
cli
repnz
cmp
ret
fsubrp
loope
shl
call
jmp
iret
call
hlt
icebp
repz
cmp
divb
shr
std
ret
hlt
ret
cld
lea
xchg
out
fists
fldl
rorl
test
int
fmuls
loop
in
repz
in
jmp
fucom
fdivr
aam
clc
in
in
in
cmp
xchg
sub
int
cmp
in
push
out
xlat
aas
ret
loope
cld
cmp
bnd
in
ficoms
xor
shrl
ret
cmp
dec
dec
loopne
adc
cli
ret
addl
enter
lock
lret
int
divl
in
lret
stc
sar
mov
cli
fmul
shr
mov
jecxz
jecxz
ret
imul
fcmove
rol
cmp
fucomp
jecxz
sti
icebp
fstpt
repnz
movb
xchg
cmc
repnz
out
shrl
repnz
out
hlt
loope
fnstcw
sar
aad
icebp
test
repnz
in
fsubr
lret
xchg
lock
fnstenv
out
iret
call
out
int3
test
xor
in
lea
jmp
in
jecxz
ret
out
cmp
fsubrp
incl
aas
leave
testl
mov
aam
aaa
cs
aam
fcmovu
rcl
lret
adc
aad
out
test
in
icebp
enter
xlat
in
into
xlat
rcl
sar
lock
cli
aam
test
lret
test
out
xchg
xchg
shl
aaa
hlt
fsubr
enter
cmp
shr
hlt
hlt
repz
hlt
xlat
std
mov
mov
into
in
add
aam
shr
cmp
ret
ffree
rorb
in
int3
mov
int
fnstsw
ss
test
std
loopne
jmp
sti
xchg
lock
out
xlat
icebp
aad
cmp
fnstcw
cmp
rcl
out
test
idiv
jmp
in
xchg
shl
enter
cli
fsubr
enter
iret
loop
repz
rol
out
test
out
rorb
aas
xor
in
cmp
xor
aaa
cmp
loopne
loopne
adc
in
xlat
in
test
out
jmp
enter
sarb
and
jmp
loop
lret
nop
xchg
jecxz
ljmp
iret
loope
sti
in
lret
loope
xchg
test
lret
cmp
lret
cmp
cli
cld
loopne
icebp
mov
aam
mov
and
cs
fstp
cmp
xor
call
rcl
mul
not
loope
fld
and
cld
cmc
in
out
ljmp
enter
in
fdivl
xchg
sar
lea
or
into
leave
lret
cmp
std
in
fcmovnbe
fdiv
xlat
hlt
fnop
out
std
xchg
xchg
sti
ror
adcb
lock
clc
shl
ljmp
fisttpl
int
jmp
repz
cmc
rcr
out
int3
shr
lret
imul
in
iret
jecxz
rcl
cmp
rorb
add
add
xor
cmp
je
mov
mov
jmp
rol
lds
aad
aad
lcall
jns
mov
add
fdiv
repz
lret
lds
into
enter
aaa
int
sar
rcr
cmp
sbb
call
loope
cli
call
lret
cmp
cmc
call
stc
icebp
rcl
out
lock
jecxz
mov
iret
in
xor
call
xor
stc
jmp
fidivrl
repnz
rolb
faddl
in
shl
xor
out
cmp
std
neg
testb
fincstp
fcmovb
loop
lock
loop
out
ror
not
fstpt
jmp
stc
testl
ljmp
lock
aam
fucomi
in
enter
cmp
in
aad
lock
in
fmull
jmp
int3
jmp
jmp
out
ds
aad
test
int
cld
clc
xchg
fmulp
rol
aam
ss
into
enter
ljmp
sar
mul
mov
std
loope
jmp
jmp
repz
aaa
out
out
fdivr
fidivrl
cmp
sar
std
mov
mov
or
call
out
in
ss
aaa
hlt
ror
lret
xor
repz
out
iret
test
xchg
jmp
xor
xlat
cli
cli
incl
bnd
in
loope
in
repz
enter
fcmovnbe
into
xor
out
fdivr
and
jecxz
and
into
mov
sub
shlb
stc
lret
hlt
repz
ffreep
in
mov
xchg
mov
cmc
shr
xor
xor
enter
int3
xlat
shr
fcmovnb
jmp
ret
mov
jecxz
cld
repz
iret
std
ror
int3
xlat
cmpb
xchg
rol
loop
stc
orl
into
cmp
xor
fstpt
int3
rolb
shl
aad
sti
stc
leave
test
sti
fcomi
repz
cmp
rcr
int3
sbb
out
testl
xor
das
in
in
in
call
ljmp
loopne
cmc
in
rcr
out
xor
iret
loope
repz
shr
int
shr
hlt
ret
test
xchg
mov
out
fmul
lock
xchg
xor
xor
idivb
cmc
fdiv
xlat
stc
in
shl
lret
out
xlat
int
enter
mov
loop
repnz
into
ljmp
loope
jecxz
loopne
jecxz
fcmovne
lret
ljmp
cmp
int
stc
lock
cmp
jecxz
into
leave
fiadds
les
jecxz
enter
neg
fidivrl
out
hlt
jecxz
aad
ret
leave
xchg
test
xchg
test
idivl
lret
iret
hlt
neg
sti
cmp
cli
cmp
jmp
lock
aad
ret
loope
leave
loopne
mov
loop
test
adcl
rcr
sar
hlt
fiadds
lret
fsubr
in
out
lock
ss
out
fcmovnu
rcl
ret
shl
jmp
xlat
loop
std
stc
in
jmp
cmp
sub
jmp
out
imul
hlt
aad
cli
fld
repz
enter
lret
lret
lret
mov
imul
jecxz
in
jmp
clc
ds
loope
fdiv
cmp
out
leave
in
mul
iret
out
mov
cs
cli
ljmp
loopne
fsubrp
repz
aad
mov
jmp
mov
lea
sti
ss
jmp
out
in
ds
lds
idiv
mov
iret
shl
fdiv
shl
repz
std
aam
fdivrl
sbb
leave
add
out
ljmp
icebp
leave
ss
ror
fildl
loopne
addl
icebp
sbb
sub
xor
out
iret
jmp
shl
rol
test
xlat
les
in
out
cmc
xchg
aas
aaa
out
xor
fcmovbe
xor
aas
loopne
lock
shr
push
mov
loop
xchg
decl
aam
xor
clc
loope
sbb
fucom
fcmovb
rolb
loopne
lret
xchg
xchg
in
mov
shl
repnz
loop
xchg
leave
mov
add
jmp
xlat
aad
rcr
fstp
loopne
mov
add
xor
cs
clc
xlat
xlat
divb
divl
rcr
jecxz
addl
out
loopne
into
xor
aam
adc
out
lock
mov
cli
fmul
int
cmc
orb
iret
cli
out
ljmp
ret
loop
repz
out
fldz
and
jmp
iret
test
jmp
aam
cli
int3
cmp
cmc
and
ret
cmp
sub
in
xor
cmp
cmp
fimuls
sbb
fsub
aas
in
cmp
lock
jmp
xlat
aaa
fcmovbe
faddl
cld
xor
jmp
in
iret
fxch
jmp
cmp
div
cld
cld
loopne
fst
test
cld
clc
or
mov
int
fcom
call
hlt
ss
loopne
in
sbb
test
ret
ret
loope
xchg
xchg
mov
shll
sti
not
out
shl
cmp
lock
xlat
repz
out
test
xchg
loope
int
call
jmp
cmp
loope
in
ret
aad
std
movl
iret
lret
lret
push
sti
clc
lret
repnz
repnz
call
fiaddl
enter
out
ret
cld
leave
neg
in
xor
into
addb
or
lret
call
icebp
shr
cmp
hlt
sti
fidivrl
fnstsw
enter
fucom
xchg
sub
out
aas
fabs
loop
repz
div
dec
out
cmp
enter
sti
call
mov
test
aam
hlt
call
sti
ljmp
cmc
ljmp
mov
out
std
in
jecxz
cmp
cmp
xor
neg
aad
mov
jmp
int
in
or
rcl
shrl
int3
into
rcr
lock
out
idivb
loope
sbb
xchg
xchg
hlt
enter
jecxz
std
lret
ret
sub
xlat
out
loop
sti
out
hlt
sar
hlt
ds
out
jmp
mov
jecxz
loope
lds
fidivl
sti
stc
faddl
jecxz
addb
std
mov
mov
xchg
shl
into
imul
out
icebp
fdiv
inc
loop
cmp
fucomip
fistl
int
hlt
shll
repz
icebp
cmc
cld
ror
fucomi
test
cmp
fiadds
mov
das
in
xor
loop
repnz
rcr
fsub
jmp
clc
in
flds
aam
aaa
les
int3
jmp
ljmp
fadd
idiv
fsubp
out
icebp
stc
aam
fcmovne
in
cmp
xor
fidivrl
fcmovb
lock
in
in
cli
or
ret
xor
aaa
ror
in
fucomip
hlt
cmpb
cli
loop
cmc
mov
loope
fdivr
enter
rorb
sti
fcom
cmp
aad
xor
xchg
loopne
rol
lds
out
aad
in
clc
int
fcmovnbe
cmp
cmp
out
sar
fsubr
rcr
xchg
repnz
aam
in
mov
xchg
mov
repnz
repnz
int3
cmp
shl
int
cmp
cmc
fsub
testl
repnz
lret
ss
call
loop
xchg
cmp
shl
ffree
stc
mov
mov
xor
cmp
ret
ret
and
sar
cld
clc
mov
xchg
lret
fucomp
xchg
repnz
cmc
aad
ss
lock
stc
icebp
in
xlat
std
xchg
leave
test
jmp
out
out
clc
lret
ror
cli
add
loop
cld
xchg
mov
loop
in
xor
xor
out
repnz
mul
icebp
lds
and
roll
aad
cmp
sti
out
iret
loope
xor
hlt
cmp
loope
ret
out
shl
aad
aam
ret
in
hlt
out
leave
xorl
cmp
jmp
sti
out
loopne
iret
or
shl
xor
cmp
cs
in
fildl
ret
cli
rolb
loopne
ror
int3
sub
aaa
fmul
testb
add
sahf
add
add
ror
leave
fstp
ret
lds
ret
jl
add
cli
cmp
cmp
in
shl
xlat
mov
mov
decb
aad
xor
in
sarl
shl
hlt
in
faddp
stc
jecxz
xchg
sbb
loope
lock
das
xor
hlt
icebp
and
test
out
fnclex
mov
incb
cli
iret
and
clc
shr
out
cli
out
lret
fcmovbe
int3
xlat
test
ret
int
fisttpl
jmp
rcl
cli
aam
lret
jmp
in
mov
loopne
ret
loopne
out
ret
jmp
cmp
test
hlt
xchg
in
std
int
in
xchg
jmp
jmp
sti
rcl
fdivl
icebp
fld
ds
fcmovnb
and
sub
or
adcb
leave
lret
dec
ds
in
cmc
div
out
ficoml
or
les
cmc
int3
out
repnz
sarl
icebp
cld
out
fsub
mov
xor
repz
xor
xor
cld
jmp
idivb
ds
fptan
sti
mov
mov
jmp
lret
sub
jmp
in
int
in
cli
into
add
loope
clc
testl
loope
into
out
int3
loop
shlb
divb
repnz
sti
xlat
xor
loopne
sti
ds
cmp
cmc
stc
fisttpll
out
int3
test
repz
sub
rcr
aad
std
cmp
cld
xchg
cli
fincstp
mov
mov
lock
cmp
int3
shl
lock
fadds
loopne
std
loopne
call
jmp
ret
int3
iret
lds
out
cmp
iret
shl
inc
fildl
loop
fstl
cmc
sti
cmp
sarb
fnstcw
hlt
sti
icebp
lds
out
leave
fmul
enter
in
aam
repnz
rol
fcmovu
fmulp
repnz
aam
lds
jmp
cmc
jmp
ret
neg
int3
imul
aad
enter
call
addb
sti
ljmp
xchg
hlt
les
aam
ror
xor
loop
jmp
loop
int3
loope
xchg
lret
loop
xor
ss
int
loopne
addb
ljmp
mov
in
lret
lret
cmc
cmc
fcmovu
mov
in
xor
mov
lret
out
repz
loope
cmc
stc
fcmove
sti
out
out
or
in
test
iret
xchg
loopne
in
aam
rcl
cmp
fcmovbe
lret
cmp
out
addb
xchg
cld
lret
call
int3
fdivs
in
out
aad
hlt
fcmovu
out
aad
hlt
out
loope
fmul
and
fucomp
lea
ror
jecxz
loop
repnz
ds
out
iret
and
xchg
not
fcomip
out
xchg
test
jecxz
aaa
loopne
cmp
fsubr
fnstcw
rolb
loope
rorb
mov
out
rol
out
clc
loop
aaa
leave
enter
inc
test
fmuls
xor
clc
clc
xchg
jecxz
clc
hlt
icebp
clc
std
sub
xlat
xlat
repz
lret
orb
loopne
xor
shl
jmp
lock
into
repz
repnz
cld
fmulp
sti
int3
lret
mov
loop
shl
ret
rcr
into
clc
in
iret
cmp
in
jecxz
cmp
lock
loopne
in
fimuls
clc
jecxz
in
cmp
int
cmc
ror
test
jmp
std
aam
jmp
nop
test
shl
into
clc
xor
shr
int3
fucomip
aad
ds
fdivr
cli
aad
loop
loope
and
test
int3
loope
fxch
jecxz
lret
aam
iret
sti
f2xm1
in
shl
rol
enter
stc
mov
iret
xchg
leave
aaa
xlat
xor
in
hlt
cmp
enter
shl
cmpb
ret
xlat
int
lret
cli
addl
aad
fxch
cmp
ret
test
in
ret
xor
xchg
adc
fsub
out
in
frstpm(287
in
fdivr
div
xchg
jmp
ljmp
xchg
into
fdivrp
stc
icebp
cli
lret
cld
neg
xorl
jmp
jmp
ror
int3
fcmovne
inc
clc
adc
adc
rorl
jl
addb
jl
in
shl
repnz
call
lret
enter
mov
div
leave
aam
xor
int
std
out
addl
int
aaa
lret
leave
clc
fcmovnb
ds
shl
cmp
fndisi(8087
ds
int
ljmp
in
lret
vpsllw
clc
call
rcr
shl
cli
std
std
in
fmul
fucomip
lock
aaa
icebp
ret
lret
lock
fmul
in
sub
sarl
sbb
mov
icebp
cld
shl
fldpi
aam
out
aaa
cmp
ds
icebp
addb
fmulp
fisttpl
jmp
hlt
hlt
loop
jmp
ljmp
icebp
aas
loop
test
leave
jmp
lea
sub
rcl
div
xor
ds
loopne
sarl
loopne
jecxz
in
fucomi
test
or
lret
loope
jmp
call
iret
out
clc
lret
cmc
xor
fmul
test
int
sub
into
out
aam
cli
rcl
fstp
out
loop
aas
loope
cli
jmp
call
sbb
out
cmp
ss
cmc
icebp
ljmp
sbb
loop
loop
jmp
shrb
in
hlt
into
cmp
jmp
repz
xlat
aas
lock
in
aas
out
loopne
out
lret
rcl
stc
cmp
sar
lock
fprem1
fsubrp
test
roll
cli
mov
ror
shr
in
fdivr
cmp
icebp
in
std
in
cmp
clc
ffreep
or
fsubr
jmp
int
cmc
cmp
shll
in
out
out
fmulp
filds
in
int3
in
jecxz
out
xchg
das
ret
cmp
jmp
aad
cmpl
fsub
mov
aam
int3
or
out
xor
shl
jmp
xor
leave
repnz
cmc
cli
cli
stc
aam
out
ljmp
std
sub
in
fidivrl
shl
cli
cli
fmul
hlt
sbb
cli
faddp
fcmovnbe
popl
in
sbb
xlat
fdivrl
fcos
out
ljmp
cmp
sti
xlat
fmuls
add
cs
in
cmp
cld
cmp
repnz
xlat
cmc
out
test
lret
rcll
xor
in
fdiv
ror
loope
test
idiv
sub
fcmovnu
in
leave
xchg
fneni(8087
shl
xchg
into
loope
out
std
mul
iret
iret
enter
inc
add
in
lret
test
lret
jmp
ljmp
cmp
into
and
out
mov
mov
lret
repnz
out
iret
cmp
test
out
mov
out
enter
loope
lock
loopne,pn
xor
fcomip
sbb
aas
test
xchg
mov
fildl
in
fcomip
sar
fsubr
stc
in
cmp
in
jecxz
in
stc
leave
mov
cli
cld
ljmp
xlat
rol
ss
out
jmp
loopne
jecxz
xchg
ret
std
jmp
lds
divb
jecxz
xor
lret
in
repz
mov
mov
int3
lock
cli
jmp
ss
in
fadds
in
fsub
fadds
aam
sub
xor
in
fiaddl
fld
sarb
mov
ljmp
out
aam
xor
lret
sar
clc
out
int
div
leave
test
loope
int3
in
lock
cmc
icebp
lock
jmp
fmul
shl
leave
cli
fildl
xchg
lock
shr
das
xor
repz
stc
xor
test
xlat
aad
clc
xchg
loope
jmp
in
cmp
out
out
sti
cmp
cmp
testl
into
xor
leave
jmp
ss
aas
cld
into
cli
loop
out
lret
mov
int3
loop
faddp
vpsllq
cmp
frndint
neg
cli
fdivrs
clc
cmp
into
out
mov
test
stc
divl
roll
loopne
inc
clc
mov
mov
mov
mov
mov
pushl
call
mov
cmp
jmp
lret
leave
aas
lret
int
pop
push
icebp
inc
sub
or
addb
jl
loope
sti
fadds
int3
xchg
in
das
repnz
das
in
int
aad
aam
and
in
int
lret
addl
rol
ss
cli
incb
push
into
test
ret
in
ror
xchg
int
fdiv
repz
lret
test
test
fxch
loope
mov
in
test
das
ror
fdivrs
xlat
aas
leave
stc
aad
loopne
rol
std
cli
loopne
sti
fiadds
addl
cmp
std
aas
out
fdivp
mov
int
lea
xchg
rol
xor
cld
in
loop
lock
div
fcomi
ljmp
in
in
int3
fsubrp
lret
not
ljmp
fstp
neg
in
xlat
test
mov
ret
leave
fimuls
out
xlat
lret
in
lret
aad
loop
cmc
loopne
fucomip
repnz
enter
out
xchg
jecxz
in
out
icebp
ss
dec
ffree
cmp
xlat
loopne
jecxz
ljmp
call
stc
fadd
ret
jmp
cmp
cmp
repz
xlat
jecxz
fcomp
cmp
xchg
rcl
ret
fidivl
xlat
std
test
repz
rolb
in
nop
mov
lret
enter
fnstenv
xlat
cld
cli
fdivrp
fcmovnu
movl
jecxz
xchg
mov
aaa
shl
jmp
jmp
ds
loope
cmp
call
xchg
repnz
sub
ret
xor
out
cmp
aaa
in
cmp
cld
shl
and
mov
in
int
mov
shrb
xor
icebp
out
fdivr
faddl
fincstp
lret
clc
xchg
jmp
out
in
xor
out
cmc
out
div
jecxz
test
in
cmp
mov
rolb
xchg
xor
call
xor
xlat
neg
fcomp
into
std
test
call
icebp
fcmove
jmp
aam
cmp
cmp
lock
loopne
cmp
xlat
leave
cld
mov
fcom
mov
leave
int
div
icebp
in
out
in
fidivrl
cli
aaa
hlt
ret
fxtract
fndisi(8087
leave
enter
fucomip
in
xchg
hlt
loop
rol
aad
sar
std
fdiv
sti
decb
shr
loope
rol
out
divl
idiv
xlat
out
sti
aam
lock
xchg
rolb
fdivr
loopne
xchg
aaa
in
iret
cs
jmp
int3
fadd
ds
in
incb
not
xor
fcmove
fcmovne
rcr
ljmp
out
addb
fsubr
jmp
aaa
xor
ljmp
shll
fcmovnb
clc
repz
fucom
out
std
jmp
call
lret
into
cmp
rol
xchg
in
ret
lret
std
clc
fsubr
cld
rol
neg
shl
clc
out
sti
out
fnstcw
leave
fdiv
lret
xchg
jmp
nop
jecxz
loop
in
icebp
mov
aam
in
sti
fdivr
in
test
xchg
adc
leave
mov
int3
jmp
in
cmc
rcr
in
in
aaa
shl
aam
out
mul
mov
inc
xchg
in
orl
in
into
fmul
int
fst
fsubrp
sar
loope
rcr
out
mov
add
mov
orb
in
cmc
flds
xor
add
cli
fmuls
out
mov
repnz
sti
clc
jmp
inc
hlt
out
rol
rolb
sub
call
sar
int
std
ljmp
not
clc
call
and
mov
shll
call
shl
loope
and
out
cmpl
fdivr
stc
loopne
xchg
xchg
into
mov
not
jmp
into
div
enter
int3
icebp
sbb
loop
sti
mov
clc
shl
cmc
lret
xor
aad
cmp
sbb
addb
std
loop
in
loope
xchg
shl
lret
icebp
fcmovnbe
cmp
sarb
loope
add
fdivrp
lret
in
je
mov
mov
jmp
iret
iret
ror
ror
xlat
fnop
and
xor
sub
jl
addb
jl
orb
out
loop
jmp
cmc
ds
cmp
cli
fsin
dec
stc
cld
mov
call
cmp
in
ret
neg
enter
mov
sub
into
xor
out
ss
int
int
lock
xchg
fdiv
fcomp
loop
mov
cs
lret
in
in
xor
cld
loop
ds
xlat
out
in
xchg
in
fisttpl
lock
leave
aas
out
iret
call
sti
cmp
enter
sub
shl
xor
hlt
hlt
in
cmp
into
neg
sarb
stc
aas
idiv
call
mov
lret
adcl
ret
hlt
fucomp
out
cmp
std
fidivrl
call
mov
in
nop
repz
sti
jmp
sti
push
xor
cmp
out
sti
jecxz
stc
shl
out
fcmovb
cld
out
aad
loopne
loopne
ror
xor
repz
and
aam
movb
out
and
xchg
ret
rcl
shll
in
clc
int3
int3
hlt
fcomi
xchg
call
mov
ljmp
lret
cs
int
aaa
cld
flds
aas
loopne
adc
iret
icebp
jmp
int3
in
rol
aad
lock
aas
rcl
icebp
clc
loop
ret
xlat
stc
mov
fdivr
out
cld
test
out
lret
aam
stc
fcomp
call
rcr
fiadds
mov
fdiv
jecxz
ficoms
jmp
cmc
cmp
sbb
add
ret
test
ljmp
lret
out
aad
sti
les
enter
cmp
rcl
cmc
ffree
jmp
fisttpll
hlt
loop
fxch
les
ljmp
repz
in
fildl
jmp
out
in
out
mul
sti
call
lock
repnz
ror
cld
lret
cli
iret
mov
in
fnstenv
xor
xor
aad
loope
lret
fptan
icebp
repz
jecxz
jmp
mov
sub
cmp
into
cmp
shr
cld
in
loopne
fcmovnu
leave
jmp
shl
loopne
cli
neg
xlat
lret
cmc
fdivp
cld
cmp
inc
in
fmull
incl
xor
into
hlt
aam
adc
fadd
xlat
test
loopne
loopne
xchg
iret
into
fldl2e
xor
ljmp
int3
sti
cmc
rcl
lock
mov
rcl
xchg
in
int3
jmp
in
call
lret
xchg
fdiv
cli
rcr
loop
or
rcll
stc
fnop
fdivr
cmp
cmp
rcl
mov
loop
add
test
in
int
sub
xor
int
ror
stc
into
ret
shl
out
in
clc
test
mov
xchg
das
shl
imul
mul
lock
cmp
rcl
hlt
loopne
addb
incb
aam
fnsave
cmp
fbstp
adc
fildl
lret
mov
rorb
cmp
in
sti
in
not
cmp
jecxz
in
shr
les
fimuls
loop
in
sarb
ljmp
fdivr
call
mov
loop
ret
mov
aam
shl
repnz
cld
out
imul
testb
out
fmul
lret
fucomp
incl
out
int3
sti
rcr
cmp
in
fdivrp
loope
shl
clc
cmc
loope
idiv
int
xchg
test
xor
fsubrs
out
cmp
lret
fldl
loope
jmp
lret
in
cld
loop
les
leave
cld
enter
in
sbb
into
flds
cld
clc
repz
out
aam
jmp
in
rcl
ret
in
movb
icebp
fsubr
shl
icebp
int
xor
ljmp
div
cli
cmp
xchg
jecxz
flds
xchg
ret
sti
jmp
shl
call
roll
out
xchg
in
test
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
mov
jmp
xlat
enter
fcmovbe
cmp
rolb
fisubl
jl
ljmp
clc
in
cld
loope
in
cld
int
into
ret
fiaddl
jmp
stc
repz
int3
icebp
in
aad
loopne
sti
aad
call
int3
fxtract
loope
xchg
cli
cli
mov
iret
jmp
not
in
out
in
fcmovu
in
sarb
cmp
test
in
xchg
out
test
mov
repz
jmp
iret
clc
icebp
not
aas
cmc
repnz
fcos
lea
mov
lret
leave
loop
shr
lock
cmp
shl
icebp
rcr
loope
loope
in
fiadds
loope
xchg
faddl
fxch
xlat
sti
lret
call
jecxz
in
fisttps
decb
loope
xor
cmpl
shr
out
loopne
mov
testb
cs
jmp
out
cmp
ljmp
icebp
imul
mov
ljmp
loopne
xlat
aam
in
iret
rcl
adc
addb
cmc
mov
xchg
in
jmp
lret
ljmp
cmp
rcl
icebp
shl
cli
vshufps
ret
lret
mov
cmc
xlat
rol
lret
ror
icebp
jmp
repz
jecxz
out
out
movl
shl
jmp
out
fcom
ds
out
fabs
jmp
jmp
jmp
icebp
lret
call
clc
jmp
std
aad
icebp
jmp
xlat
in
loope
cld
repz
cs
hlt
out
cld
jmp
aas
rorl
in
lock
ljmp
xlat
call
ljmp
movl
mov
out
test
loope
sub
stc
in
in
in
cmp
in
lret
cmp
loope
ds
out
jmp
aaa
icebp
cmp
rol
xor
mov
test
lret
mov
leave
loopne
repz
fldt
shl
div
clc
aas
out
xchg
in
fscale
loopne
ljmp
xor
xor
repnz
std
int
fcomip
xchg
and
in
fadds
into
repnz
in
fcmove
fdivr
aam
in
cmp
in
in
lds
faddl
rcl
out
in
shl
xor
aad
fdivr
iret
test
stc
hlt
cmc
fucomi
out
cli
call
out
sub
stc
out
in
hlt
fnstsw
ds
fadd
aaa
icebp
loope
roll
out
lock
rolb
iret
das
iret
fdivp
rcl
adc
loop
rorb
mov
jmp
shl
xor
hlt
sar
clc
jmp
test
std
in
call
mov
out
jecxz
xor
xor
out
rcl
shr
int3
fcmovb
shl
aad
test
test
call
icebp
ss
lock
out
fcmovne
cmp
icebp
aam
icebp
fsubr
clc
orb
xchg
decb
xor
neg
xor
fnstsw
aam
ror
fdivrp
std
repz
in
int
sti
stc
fdivrp
fucomip
shl
ss
in
out
out
repnz
clc
int3
fnstcw
cmpb
fdivrp
ljmp
out
adcb
int3
xlat
leave
divl
xor
loop
sti
fdiv
fiadds
in
repz
out
icebp
ds
lret
cli
aaa
int3
out
rcl
rcl
icebp
hlt
xlat
and
lret
stc
xchg
out
out
shr
test
in
leave
cmp
sar
cmp
ret
xchg
out
out
stc
in
xchg
out
xor
clc
aaa
iret
fistpll
fcmovnu
mul
fadd
enter
clc
fcmovne
incb
in
ror
into
aaa
cld
jmp
aad
faddp
aad
fxtract
std
fsubr
out
in
icebp
xchg
rcl
lock
in
shl
shl
xor
rcl
lds
in
rolb
in
out
repz
lds
call
in
movl
jb
add
add
or
mov
sub
mov
sbbl
push
inc
jmp
aas
lret
lret
xchg
cmp
mov
jl
flds
jl
fiadds
test
ret
lock
jmp
jmp
idiv
shll
loopne
ret
mov
mov
mov
loope
xlat
fucomi
in
test
aam
out
out
aas
sarl
out
clc
loop
sbb
xchg
out
lock
fucomi
loope
xor
jmp
filds
jmp
hlt
sbb
mov
nop
loope
call
aad
hlt
repz
icebp
fld
shl
jmp
xlat
lret
in
jmp
sub
int
ljmp
fucomp
int
repz
mov
leave
cli
in
fdivr
lret
repz
aam
out
ret
out
loop
cld
idivl
fsubrp
in
in
test
ffree
loopne
roll
mov
xchg
in
aaa
ljmp
rolb
xlat
mul
jmp
iret
in
shl
clc
out
sar
fdivp
rolb
hlt
shr
test
lret
iret
xor
sar
jmp
cld
int3
fcmovb
aad
aas
shl
ret
fxam
cld
test
mov
int3
lock
rcl
repnz
rcr
ret
adc
inc
faddl
hlt
xchg
rol
shrb
hlt
sar
cmp
aam
aad
fldl
out
in
xchg
stc
cmp
ret
cmp
repz
cmp
out
jecxz
fdiv
fildl
mov
xchg
cli
addb
in
out
test
xlat
sti
out
dec
ret
fstp
mov
fiadds
xchg
mov
shlb
test
aaa
cmp
out
xlat
int
shl
fninit
out
ret
iret
int
mov
icebp
shl
aam
hlt
ljmp
aam
jecxz
leave
or
lret
jecxz
aaa
shl
int3
clc
aad
ljmp
in
cli
cmp
sub
into
cmc
iret
not
jecxz
aad
cld
cmp
into
loop
loop
roll
sti
out
iret
xchg
sub
aam
jmp
icebp
xlat
not
hlt
ret
cmp
loope
sti
fdivr
aad
in
leave
addl
shl
xor
std
iret
pushl
addb
in
cli
std
and
fstl
out
fcomi
repz
in
out
cmp
cmp
test
rolb
out
clc
jmp
ds
jmp
call
out
lret
ret
out
jmp
cli
icebp
ficoms
iret
out
xor
cmp
fcmove
aam
in
aaa
clc
loopne
hlt
cmp
mov
ret
adc
loopne
shl
ljmp
jecxz
jmp
div
fcmovnu
mov
in
in
shr
fisubrs
int
xor
stc
fdivl
out
ljmp
out
aam
in
loope
in
repz
xor
cmp
aam
int3
int
icebp
fcmovnu
flds
lock
loop
ret
stc
xor
sarb
jecxz
aaa
xor
out
sar
xlat
in
xchg
icebp
lret
loop
shr
enter
call
fdivrl
stc
fld
sti
cld
in
out
mov
mov
ret
sub
xor
loop
into
hlt
cld
lret
fsubr
loope
aas
repnz
les
xchg
xchg
cmc
out
clc
cli
clc
out
aad
fadd
std
in
loopne
rcl
ljmp
rcr
out
int3
hlt
cmp
out
mul
repnz
ds
hlt
loopne
repnz
call
nop
lret
int3
out
into
ror
lret
in
shl
stc
ljmp
repz
std
out
lret
loop
icebp
xorl
jecxz
xor
std
out
fcomp
aad
loope
cmp
lret
fcmovnu
jecxz
cli
xor
rcl
loope
imul
lds
jmp
imul
stc
into
cmp
cmpl
orl
call
in
repz
lret
cli
jmp
fcmovnb
ret
mov
aam
les
sti
mov
xchg
std
mov
hlt
iret
cs
das
cmp
icebp
cld
rolb
or
sub
into
push
add
xor
jmp
ret
lret
ror
lret
sub
sahf
in
cmp
jl
flds
jl
fldl
loopne
enter
shlb
in
xor
jmp
jmp
ror
loopne
cmc
xchg
in
std
sti
test
nop
test
cmp
out
repnz
aaa
lret
aas
or
rcl
into
shl
mov
loopne
into
ljmp
ret
xor
fnstenv
fdiv
cmp
ret
ror
sti
jmp
movb
sar
shl
cmp
cmp
int
fdivr
ret
or
hlt
xchg
fimuls
hlt
ret
repnz
idiv
shr
aas
enter
faddl
xlat
hlt
cmp
fcmovu
ret
shr
lock
cmc
in
sti
iret
leave
stc
xor
icebp
cli
cmp
testb
cmp
aas
repz
jecxz
xor
xor
call
std
loope
rolb
iret
mov
call
xor
int3
lret
fsubr
cmc
fcompp
iret
aam
loop
rorb
int
int3
repz
out
ret
ljmp
cld
lret
fmul
call
nop
loop
into
shl
sub
shr
xor
cmpl
jecxz
loop
ljmp
loop
call
ror
ss
rcl
shl
out
mov
int3
sub
loope
out
loop
xor
enter
std
aad
fidivrl
sub
in
jmp
loope
shrl
fistpll
std
aas
aad
ret
imul
loope
fucomi
mov
icebp
into
in
std
test
xlat
aad
shl
cmp
fdivp
cmp
lds
loope
call
mov
call
test
cmp
out
repz
cmc
ret
xlat
lret
fsubr
fdivr
int
fdivp
into
stc
in
into
ljmp
ds
jecxz
cmc
std
loop
mov
loope
in
in
in
xor
hlt
repnz
xor
int
loopne
fcomp
addb
fndisi(8087
out
loope
xor
xor
cmp
lock
enter
cli
icebp
fcmovnu
lock
stc
in
frndint
ljmp
out
lock
xor
lret
hlt
leave
lock
fucom
cmp
enter
mov
call
xor
stc
fdivl
iret
aaa
cmp
pushl
cmp
faddp
in
enter
sti
mov
cmc
repz
clc
aam
cmc
xor
xor
stc
ds
ret
xor
and
jecxz
xchg
lret
adcl
icebp
fsub
into
lret
fdivrp
shl
xlat
loopne
ds
ret
in
xchg
mov
out
and
in
rcl
aaa
idivl
sarb
cld
shlb
in
fcmovnu
lock
out
rol
mov
jmp
adc
ror
ret
into
lret
xor
aam
cmp
in
sbb
les
fcmovb
test
in
aaa
leave
jecxz
not
rcr
out
in
idivl
lret
xor
fdivrp
cmp
out
out
int
xchg
out
out
jmp
xor
sti
out
leave
repnz
cmc
rcl
cmpl
faddl
cmc
sub
enter
std
out
lock
int
cld
jmp
sti
cmp
enter
xor
aad
fcos
out
cmp
in
fprem
cmc
fadd
test
sub
iret
loop
in
int
enter
int
aaa
clc
neg
aam
cmp
aam
idiv
test
fucomi
lock
xchg
out
xor
ret
lds
fstpt
cmc
lock
fyl2xp1
fdivrp
fildl
test
std
fsubrl
cmp
repnz
rcr
xlat
fcomp
into
ret
mov
out
ljmp
rcl
in
aaa
div
cmp
cmp
xor
xlat
aam
fcmovnbe
xlat
lret
fmull
ror
lret
xor
aam
xor
std
cmp
div
add
test
repz
sub
adcb
out
into
rcl
ror
int3
aad
not
sarl
jecxz
xchg
xchg
xchg
into
in
mov
repz
cmc
out
sti
aam
lret
cmp
test
add
jmp
iret
aad
aad
aad
aad
mov
mov
jl
in
mov
jl
add
sarb
rcr
xchg
lret
iret
lret
loop
ror
test
int3
out
shlb
in
cmp
clc
fadds
xchg
loopne
loop
filds
test
fdiv
into
repnz
call
aad
std
mov
inc
out
loop
icebp
mov
mov
xor
out
icebp
fldl
cmp
test
in
cld
in
int3
xchg
fucomip
xchg
in
das
divl
repnz
std
cli
lret
cmp
aad
repz
call
in
clc
cmp
rol
das
enter
ljmp
loopne
loopne
fdiv
roll
mov
xor
mov
icebp
ret
fucomi
lret
sar
add
loopne
cmp
jmp
jmp
shl
out
cmc
sarb
ret
xor
ror
aas
fstp
xor
out
xchg
jmp
fmulp
fcmovu
mov
out
jecxz
cs
out
cmp
xor
cli
std
cmp
in
lock
mov
ljmp
in
int
fidivrl
in
sarb
ror
ffree
sbb
in
idiv
in
mov
into
repz
aas
int3
out
ss
into
fcmovbe
sarb
rol
int
icebp
loop
icebp
repnz
out
mov
fdivr
repnz
and
ljmp
lock
lds
test
fisttpll
fidivs
neg
call
aam
lock
iret
cmp
rcl
add
jmp
loope
lock
hlt
ret
cmp
int3
out
xor
loopne
cmp
jmp
xchg
jmp
fsubr
out
or
xor
out
out
cmc
int
roll
in
jmp
hlt
loop
loopne
loope
fisttps
in
leave
cmp
std
xor
cmp
cmp
aad
sar
int3
out
mov
in
leave
leave
out
int
std
out
sbb
out
fisttpl
and
jmp
fcom
clc
hlt
aam
cmp
std
imul
aam
ret
rolb
mov
shl
hlt
cmc
repnz
out
repnz
xchg
call
or
in
test
ss
cmp
std
aam
add
in
clc
jmp
fadd
mul
in
test
jmp
ss
cmp
call
clc
faddp
xlat
cmp
xor
jmp
out
repz
ror
xor
into
jmp
cmp
div
xlat
loopne
aas
cmp
jmp
decb
xchg
xor
clc
ss
cmp
adc
jmp
ljmp
ffreep
lret
cld
lock
xor
xor
shll
repz
fcmovbe
fidivrl
sti
xlat
out
int
pop
leave
in
loopne
in
shl
xor
cld
stc
sub
loope
lock
sar
decb
sub
ret
icebp
hlt
cld
cmc
lret
adc
fucom
mov
call
jmp
xor
leave
xor
ljmp
cmp
icebp
sarb
ljmp
sbb
in
in
sti
out
xor
aaa
cmp
stc
mul
in
hlt
loop
fsub
jmp
xchg
mov
aad
xor
lret
in
aad
rolb
fidivrl
cmc
shl
hlt
aam
lret
lea
mov
ss
shl
cli
test
aad
lock
into
lds
fadd
xlat
loop
jmp
call
clc
enter
fcomip
out
ljmp
mov
rolb
lock
cmc
xlat
hlt
call
in
out
fucomip
fcmovbe
push
rcl
imul
ret
aad
xchg
shl
mov
jmp
sub
lret
lret
call
cmc
faddp
fstp
stc
test
cli
cld
mov
cld
nop
mov
mov
cmp
out
lret
loop
aas
repnz
mov
cli
cmp
xor
ljmp
sarl
repz
addl
mov
leave
xor
cmc
leave
incb
add
subl
xor
movl
cmp
movl
jne
xor
jmp
ds
ret
ds
jmp
or
jl
add
rcl
clc
cli
fstp
loop
clc
fsubp
loop
fists
iret
ret
ret
hlt
sarl
iret
cmp
test
fiaddl
push
into
leave
sub
ror
lret
jmp
xor
test
xor
fmul
inc
or
xchg
out
enter
fld
into
cmp
shl
clc
rcl
or
in
aad
jecxz
in
leave
call
out
in
fcomi
call
rcr
cli
xchg
loopne
sub
iret
fdivp
out
loopne
icebp
stc
in
out
stc
xor
repz
out
fcom
ror
xlat
out
mov
in
mov
fdivrp
ljmp
cmp
jecxz
cmpb
mov
ds
jmp
mov
mov
xor
xor
cmc
xor
icebp
iret
loope
hlt
clc
mov
cmp
cld
jmp
incb
ss
into
enter
sarl
repnz
test
test
mov
lock
shll
icebp
hlt
fxch
cmp
in
idiv
jmp
mov
xchg
enter
xor
repnz
cld
repz
ds
icebp
hlt
shl
ror
jmp
out
xchg
repnz
nop
jmp
cmp
fsubp
in
fdivrl
icebp
cld
fadds
adcb
jmp
xlat
cmp
sarl
cmp
cmp
jmp
in
xlat
in
repz
stc
leave
cli
xlat
xor
sti
repz
repz
aam
repnz
lret
fimuls
xchg
sub
ror
cmp
xor
lret
loope
lret
lret
cmp
sti
jecxz
incb
loopne
les
idiv
out
shl
jmp
clc
aad
repz
mov
mov
mov
out
fucom
in
bnd
out
cli
aaa
sti
aas
ljmp
test
addl
sbb
xor
repz
std
lock
in
lret
test
stc
fsub
lret
hlt
cmp
in
clc
iret
in
int3
shr
loop
icebp
call
sarl
sbb
out
std
hlt
jmp
std
int3
mov
sti
in
xchg
test
call
test
lret
ror
fcmovnb
sar
call
lea
sub
into
lds
ds
stc
int3
shl
or
cli
stc
fsub
fimuls
xchg
nop
out
loopne
out
out
clc
rol
lret
cmpl
out
cmp
cmc
mov
int
mov
aam
fcmovnbe
rcl
into
fcomi
xlat
repnz
out
jmp
fnsetpm(287
mov
lret
jmp
lock
ret
cmp
xlat
lret
stc
icebp
cld
ds
aas
cld
mov
in
call
loope
sub
xor
mul
std
mul
neg
faddp
cmp
out
mov
stc
imul
ret
test
loop
mov
hlt
icebp
sub
lret
aad
roll
fcmovnb
call
in
nop
filds
jmp
ljmp
shl
ret
loopne
xlat
jmp
int
jmp
in
icebp
into
adc
in
lret
aaa
repnz
sti
lock
ror
int3
cmc
cmp
out
loop
fdivr
out
ror
fsubp
in
icebp
xor
repnz
das
xor
fistpll
cmp
faddl
mov
fcom
cld
out
in
in
hlt
fcmovnu
int
ljmp
in
orb
call
lret
into
aam
sti
repz
aas
loope
clc
fadds
xchg
movb
int
stc
shr
stc
shll
cmc
int
sar
cmp
loopne
fsubr
ret
int3
clc
iret
fldl
shl
in
fsubrp
fcom
icebp
ffree
icebp
mul
mov
std
ljmp
sbb
jmp
repnz
cmc
shr
int
roll
aam
fcmovnb
xlat
jecxz
out
fsubrp
out
loopne
std
out
jmp
roll
sti
sti
mov
mov
int3
cmp
in
rcl
loopne
lret
xor
add
jmp
mov
andl
xor
jmp
ds
rcr
fcmovbe
rcl
aad
sbb
and
xchg
and
jl
sub
rcl
int3
rol
out
fcmove
fildl
call
shr
aad
shl
ljmp
fldpi
icebp
test
into
loop
xlat
jmp
leave
call
fcmovne
fcos
xor
in
fdiv
int3
loopne
call
ljmp
or
fcomp
out
aaa
sarb
neg
adc
clc
fdivrs
test
fiaddl
mov
fstl
jecxz
icebp
shr
xlat
cmc
cmp
loop
ds
std
sbb
mov
enter
out
out
ds
jmp
ds
into
adc
test
call
lret
add
loop
in
rol
lret
cmp
out
lock
xlat
addl
xchg
neg
fsub
shl
ljmp
lret
repnz
fcmovnb
jecxz
out
ds
leave
mov
test
shl
orl
xor
xlat
stc
cmp
loope
fsub
aad
ret
ret
jmp
std
lock
sti
les
jmp
out
out
neg
cld
rcr
sti
testl
fucom
iret
xchg
xchg
call
aaa
enter
cli
cmp
fsubr
cli
mov
sbb
enter
clc
jecxz
xchg
xor
in
sar
call
addl
mov
adcb
in
hlt
loop
repnz
aad
std
in
sti
shl
jecxz
icebp
shl
ljmp
repnz
in
ss
leave
cmp
aad
leave
test
cli
xchg
mov
in
out
jecxz
fucomi
lret
jmp
sti
cmp
xor
icebp
adc
ljmp
xchg
loope
xor
stc
ss
clc
fst
or
fmull
cld
fmuls
loopne
rol
in
repnz
out
out
in
xor
hlt
fldl
jmp
sbb
rcr
mov
rol
sti
hlt
fdiv
fdivr
cmp
fcmovnu
call
movl
rcl
xor
out
sti
cmp
sti
test
ljmp
fcomip
nop
cld
push
xor
ss
xor
hlt
fmul
lret
repnz
loope
aam
int3
loop
mov
lret
into
ret
enter
testb
hlt
ljmp
xchg
mov
xchg
aas
cmc
lock
out
fcomp
cmp
out
cld
out
rorb
xchg
out
orl
aas
loope
out
aas
xlat
ffreep
cmp
call
mov
loopne
mov
les
lret
cmc
clc
aaa
out
call
iret
aas
fiadds
testl
ror
call
cmp
sti
aad
fiaddl
repnz
sti
iret
lret
xchg
vphadddq
call
lock
hlt
cli
iret
loope
icebp
sar
fld
mov
rclb
xor
fucomi
cmp
repnz
aam
cld
into
mul
rcl
test
fisttps
fucomip
cli
xchg
call
xor
call
jmp
xor
sar
repz
lret
testb
call
out
repz
fdivs
std
aas
clc
test
flds
out
jecxz
les
int3
call
loope,pt
lds
aad
aam
or
ror
xlat
icebp
fldcw
ret
lret
in
roll
test
loopne
rcr
fisttpll
lret
in
repz
jmp
call
loope
cmp
ret
test
out
mov
jmp
mov
shll
repz
jmp
stc
stc
cmp
in
popl
in
orl
fldz
cmp
aad
shl
in
clc
cld
loop
addb
rcl
cs
xlat
stc
enter
in
aad
fxtract
aas
fdivrs
out
fucomip
shl
out
ret
sub
mov
xorl
jmp
ds
aam
aam
aad
inc
dec
push
pop
inc
jg
clc
cld
mov
jl
xor
xor
jecxz
cli
xor
jmp
aad
xchg
cld
in
ror
mov
ljmp
int3
call
ror
xlat
int3
fucomp
loope
ds
call
out
fldl
in
sub
ret
cmc
cmp
movb
loope
aam
loope
aas
loopne
decl
lock
stc
enter
call
xlat
aad
in
test
test
loope
fdivr
ror
jmp
out
out
sarl
cmp
shl
clc
aam
cmc
fcomi
stc
icebp
std
ret
out
fucom
jmp
shrl
fidivrl
cld
shl
cli
out
aas
sarb
fsub
les
jmp
fnstcw
in
shr
cmp
cmp
stc
jmp
test
mov
fdivr
iret
addl
loope
or
shr
test
in
loop
orl
call
aas
out
loop
cmp
inc
in
loope
in
mov
out
icebp
lock
out
ss
fisubrl
xor
out
repz
lock
icebp
mul
loop
sbb
in
fmull
hlt
cmp
fsub
jmp
fcmovu
adc
in
test
ret
idiv
out
leave
out
call
not
jmp
cld
jmp
std
sar
xchg
mov
iret
out
call
ss
cmp
sar
xlat
repnz
ds
mov
mov
vmovq
out
xor
in
out
out
into
addl
in
in
iret
shr
loopne
shll
divl
out
cli
ss
sar
test
or
int
out
loope
call
hlt
cmp
fcmovnu
cmpb
rcl
lock
clc
jmp
jmp
jmp
iret
xor
sub
fdivrl
int3
sarb
ds
mov
xchg
std
xchg
fmuls
repz
icebp
ret
fidivrl
xlat
cmp
inc
rcr
rcr
in
fcomp
movl
loope
cmp
imulb
in
cmp
sti
fadd
in
stc
cld
repz
sti
fiadds
icebp
out
out
sub
loopne
cmp
lret
out
cmp
addb
stc
jecxz
mov
enter
in
int
xor
out
xlat
out
fsubr
cmp
cmc
shl
std
aad
ljmp
icebp
in
mov
xor
shlb
cmc
cmp
fstp
aaa
std
cmp
roll
xchg
faddp
cld
int3
fucomip
in
int
aam
in
cmp
hlt
xor
xor
loope
test
cmc
mov
out
jecxz
fldl
in
out
aaa
rcl
out
fdivrp
jecxz
int3
fcmovnb
les
jmp
mov
in
fstl
ljmp
jmp
icebp
fcmovu
vcvttpd2dqy
ljmp
in
rol
int
call
cmp
cmp
test
adc
cmp
std
faddp
out
sti
lret
aad
icebp
fmul
cli
xor
rcl
hlt
fcmovu
xchg
mov
flds
xchg
addl
out
aaa
std
in
xor
neg
xlat
stc
repz
fmull
lock
fsubrp
clc
sar
lret
cmp
rolb
fsubr
shr
dec
loope
xchg
xchg
fucomp
repnz
int3
fnstsw
fmul
std
repnz
cld
aad
xlat
loop
lret
fcmovnb
xchg
out
lret
ret
aam
into
out
fadd
cmp
rcr
fldl2t
stc
fsub
into
shr
ljmp
repz
out
sarb
aam
ljmp
std
cmc
mov
into
jmp
int
ffreep
sub
jecxz
enter
fcomip
cmp
rcr
cli
idivb
adc
fxtract
fadds
out
call
shl
clc
sbb
jmp
mul
lret
mov
loopne
xchg
in
shl
aam
out
ror
sarl
fcom
out
shr
leave
in
mov
icebp
xor
add
notl
mov
movl
jmp
mov
xor
or
sub
add
jmp
ret
aad
fstp
int
ja
imul
pop
inc
jl
flds
jl
sar
enter
aam
ret
sti
hlt
out
imul
jecxz
ror
aad
shl
cmc
cld
ret
test
cli
int3
mov
lock
xor
lret
cli
sar
fidivrs
sti
sti
aad
int3
icebp
clc
call
fxch
xchg
stc
mov
jecxz
iret
rcl
loop
shl
out
repz
fdivr
cmp
mov
orl
rcl
xor
out
xor
stc
roll
ret
out
in
ret
icebp
enter
sub
aam
cmp
lret
lock
roll
test
mov
out
shl
lock
ljmp
shl
stc
out
rol
shl
lret
fld
fucomi
fiaddl
in
ret
ret
aad
imul
fidivrl
cli
std
jmp
mov
inc
test
out
xchg
ljmp
cmp
clc
fdiv
rolb
test
mov
out
into
in
roll
in
in
das
in
xor
call
sbb
clc
ret
and
flds
adc
xor
cmc
jmp
out
cld
roll
out
fadds
into
mov
leave
aad
cmp
ret
ds
into
rcl
loopne
neg
cld
std
test
ror
jecxz
xchg
xor
sub
sti
shr
fst
loope
cmp
fcmovnb
aas
adc
xchg
leave
fdivr
loopne
in
out
out
out
aaa
rcl
stc
fsubp
repz
hlt
loopne
stc
loop
out
ret
les
loope
in
in
enter
in
fst
fadds
sbb
ret
fcmovbe
fimuls
loope
shlb
clc
lret
sub
into
fadd
mov
stc
out
fdivr
call
aad
ljmp
cmp
cmp
cmp
fcmovb
fdivrs
enter
int3
cli
call
divb
out
lret
rcl
jmp
std
cld
cmpl
jmp
iret
ffree
ljmp
lock
aad
stc
aaa
aaa
ss
cmp
sbb
fcmovu
loopne
fldl2e
lds
loopne
repz
xor
fucomi
enter
int3
into
roll
cld
rcr
in
mov
out
test
enter
cli
fdivr
lret
loop
rcr
sar
xchg
fucom
ljmp
in
enter
cmp
in
jmp
enter
xchg
testb
cmc
into
loope
in
cli
aad
ljmp
fcom
std
cli
in
ffree
in
out
mov
ljmp
jmp
cmp
repz
repnz
test
fsub
mov
sbb
out
iret
repz
lret
aas
out
in
xor
cmpl
fdivr
ds
fprem
jmp
iret
fimuls
lock
xor
cmc
cli
shr
loope
add
fucom
mov
fucomip
in
out
rcl
cmp
into
enter
sarl
ret
aad
cli
jmp
lret
loope
int3
int
call
mul
cmp
fiadds
sar
fmul
test
in
jmp
loopne
xchg
mov
out
cmc
lret
cld
rcr
fucom
sar
icebp
ret
rorb
jmp
cli
test
lret
iret
sub
jmp
jmp
leave
cmc
fidivrl
add
mov
cmc
sbb
xchg
icebp
cld
ret
xor
enter
rcl
fchs
stc
lock
aad
cmp
xlat
aas
fstp
fcmove
out
icebp
xchg
jmp
ljmp
lret
adc
add
fcmovnb
repz
mov
out
rcl
out
cmp
out
in
fcmovnu
iret
hlt
fprem
out
in
cmc
aas
xchg
fucom
or
loopne
xchg
orl
fdiv
repnz
enter
out
xor
ret
leave
mov
shr
fsubp
in
jmp
jmp
jecxz
ljmp
test
std
fcompp
cmc
in
mov
shl
ror
adcb
cmp
in
repz
fidivrl
cli
loope
fsubrl
inc
add
add
add
add
or
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
pushl
call
jmp
mov
mov
jmp
iret
ror
fstp
xlat
ret
dec
or
pop
xchg
mov
flds
jl
cld
sti
fmul
fcmovnu
ror
out
xor
cmp
ljmp
ret
ds
call
std
cli
movb
divl
ret
xor
xor
xchg
cmp
out
sub
in
loop
loopne
shr
fdivr
ss
sti
cmp
clc
addb
iret
cld
fdivrp
sub
sub
cli
out
cmp
ljmp
into
add
mov
inc
cmp
enter
mul
xor
clc
ljmp
not
xlat
repnz
add
ljmp
icebp
iret
ljmp
jmp
cmp
stc
in
loop
mov
int3
loop
cmp
mov
aad
xor
fnsave
lret
fst
cld
fdiv
aam
leave
mov
in
dec
mov
out
sub
xor
in
xor
cli
cmp
add
ret
jecxz
aam
out
movl
fidivs
shr
shl
inc
xlat
test
test
test
sub
test
mul
iret
lret
shl
lret
cli
ss
into
loopne
xlat
iret
sar
hlt
call
neg
in
int
aad
aaa
cmc
lock
jmp
fcom
fmulp
rcl
xlat
cld
in
cli
in
jecxz
in
mov
loope
dec
in
not
ljmp
test
lock
hlt
loop
lea
lret
cmc
in
xor
xor
xor
int3
sar
push
out
fucom
ret
fadd
cli
mov
xchg
test
shr
stc
fcomi
jmp
jmp
ret
ss
testl
in
loope
rol
lock
cs
cmp
fsubp
std
cmp
mov
aas
clc
fmull
in
xchg
int3
ret
call
lret
cmp
fucomip
xlat
cmp
not
out
fstp
jecxz
in
ljmp
jmp
in
in
in
lret
ret
fcmovnbe
sar
ret
fdivrp
loop
out
int
cmc
ljmp
shr
ror
lock
lock
sti
in
mov
mov
sti
cld
test
in
int3
mov
lret
xor
fcomip
leave
in
xlat
int
int3
fiaddl
lret
shr
jmp
int
int3
sub
aad
enter
out
cmp
hlt
loop
les
mov
cmp
in
repz
int
fucomi
hlt
cmp
cmpl
std
loop
call
out
iret
stc
addl
enter
std
sti
fprem
loopne
test
out
call
add
loop
in
jecxz
xlat
ret
icebp
cmp
cli
int
xor
ds
out
fidivrs
mul
cmp
sub
ljmp
ss
xor
fcmovu
out
icebp
in
sti
loope
aam
rol
hlt
xor
or
enter
rorl
mov
repz
ds
repnz
test
mov
clc
mov
in
shl
in
jmp
clc
repz
shl
sbb
fsubp
loopne
sti
rolb
cld
int
lret
ror
xlat
xor
xlat
shl
int3
sar
testl
mov
in
hlt
enter
iret
cmp
loopne
lock
in
cli
into
test
lock
out
test
enter
cmc
enter
cld
out
cmp
xor
lock
xlat
test
xchg
xchg
fucomp
in
jmp
iret
ret
lret
repz
shl
fstp
rcr
jecxz
enter
call
cs
cmc
test
rcr
in
std
icebp
stc
mov
ret
hlt
fcmovu
sti
mov
rcr
lock
cli
sub
shl
fmulp
cmp
stc
in
xchg
test
fld
out
fmulp
enter
xchg
mov
jmp
ss
ljmp
iret
std
clc
in
ret
test
jmp
in
mov
icebp
bnd
aaa
cmp
fdivrs
sti
loope
in
leave
leave
sti
jmp
and
sub
das
xor
repz
aas
neg
into
repz
out
mov
jmp
lret
aam
fstp
fisubrl
push
int3
mov
fimuls
add
add
mul
int3
jmp
enter
neg
cmp
leave
rcl
loop
repz
ret
in
ljmp
loope
hlt
out
clc
int3
cmc
out
cmp
int3
lret
incb
test
xor
icebp
jmp
xlat
sarb
fsubp
int3
rcl
cmp
xchg
out
out
call
sub
xor
ror
jmp
aas
out
and
jmp
fsubrp
clc
dec
xchg
int3
fidivrs
ljmp
sti
fcmovu
int
and
cld
jecxz
ret
leave
out
fiaddl
jmp
in
loopne
cmp
leave
iret
jmp
fdivrp
cmc
fmuls
enter
mov
aad
xor
rcr
xor
fsqrt
repnz
xlat
enter
test
dec
cmp
ljmp
aas
or
loopne
fcmovnb
bnd
std
lret
icebp
icebp
shl
xchg
test
loopne
out
lock
lret
aad
cld
shl
shl
jmp
jmp
decb
xor
jecxz
jmp
ds
cmp
fst
hlt
movl
xchg
cs
rcr
int3
out
clc
cmp
jecxz
sti
imul
cmp
not
mov
in
into
in
loope
aad
xor
shl
ljmp
lret
fdivr
imul
test
cld
ds
les
xor
vpsrlw
out
cli
aas
fnstenv
xlat
fistpll
test
test
lret
ficoml
ror
rcl
cli
jmp
cmpl
std
cmp
ljmp
in
repnz
xlat
icebp
cmp
xor
clc
repnz
ret
test
mov
out
fcmove
xchg
sub
div
cmp
cmc
cmc
cli
sti
fsubp
cmp
into
ret
cmp
enter
addl
sti
out
fucompp
stc
lret
clc
loop
cmp
loopne
loope
cmc
lock
xchg
xor
int3
aam
ljmp
fsubr
aad
loope
cld
in
mov
ret
xchg
aad
cmc
out
fadd
in
xor
xor
idiv
int
aam
out
idivl
out
mov
loopne
fimull
mov
lock
neg
out
in
jmp
jmp
std
mov
in
lock
out
in
cmp
std
fdivrp
icebp
fdivp
loope
inc
hlt
out
cld
int
orb
call
call
neg
sar
call
cld
call
fcom
clc
call
stc
cmp
cmp
repnz
mov
fcomip
ret
xor
cmc
cli
cmc
iret
out
cmp
ret
jecxz
nop
xchg
iret
in
divl
jecxz
repz
imul
fcmovnu
out
iret
fiadds
xchg
fsub
sti
jecxz
nop
fsubrp
out
out
jmp
idivb
fcmovnbe
ljmp
fcomi
sti
fimull
fisubrs
hlt
in
jecxz
in
fdivl
in
into
cmc
not
ds
fsubp
cmp
lret
iret
enter
enter
xor
sarb
ror
cmp
fdivrs
loopne,pt
in
out
icebp
fcomip
xchg
out
call
ror
in
cmp
lret
cmp
rcl
mov
sti
mov
int3
ljmp
iret
cli
fcmovnbe
int
jmp
fcmovnbe
cmpb
aam
out
fmull
xchg
sub
shlb
xlat
in
iret
aad
lock
sti
and
lret
mul
out
sti
shr
shl
shr
hlt
cmp
rcl
cmp
cmp
repnz
test
mov
lock
ror
in
iret
lock
out
icebp
aad
test
iret
xchg
test
incb
nop
aam
xor
out
cmc
test
ljmp
ds
sti
sti
lret
jecxz
fcmovbe
repz
ss
clc
xor
cmp
repnz
mov
add
pop
pop
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
iret
into
ret
ror
aad
addb
imul
lret
jl
jecxz
shr
ffreep
and
in
clc
sbb
xor
icebp
fxam
cmp
rcr
test
call
mov
xchg
jmp
enter
fnstcw
cmp
fcomi
into
std
sar
inc
int
les
lock
loope
fcom
out
repz
fcomi
xlat
cmp
sti
std
call
into
out
shl
xchg
jecxz
rcr
leave
shl
xor
cmp
clc
xlat
or
loope
mov
lret
aad
in
out
out
rol
aaa
ret
out
jmp
int
mov
out
in
std
xchg
ss
cmp
fxch
fcmovu
out
lret
lock
cmc
call
call
aaa
ret
xor
in
cmp
cmp
sti
fiadds
sti
call
inc
cli
ljmp
shl
fucomi
ljmp
fcos
loope
call
xchg
in
sub
int
iret
cli
cmp
std
loopne
out
repz
cmp
inc
stc
sbb
nop
addb
jmp
fcmovnu
out
ret
xrelease
cld
clc
lret
adcb
shr
lret
std
cmp
cmp
fucom
fcmovnb
out
out
jmp
cli
les
cld
and
shll
cli
clc
fdivr
clc
cmp
rcl
test
mov
in
shr
aas
cmc
lret
enter
lret
aas
cmp
shl
idiv
testb
fdivr
int3
dec
out
out
xor
cmp
hlt
jecxz
cmc
out
in
mov
clc
out
mov
repz
clc
das
xlat
sti
loope
int3
cmp
out
iret
rcr
aas
rol
dec
fmul
jmp
leave
leave
cmp
fnop
fdiv
aam
divl
shlb
cmp
sar
fcmove
ret
out
jmp
mov
fld1
enter
cld
repnz
repnz
jmp
test
ror
std
iret
sub
jecxz
jmp
shr
out
shl
shl
jecxz
sti
rorb
fisttpll
enter
cli
clc
int3
call
enter
ljmp
xlat
ret
in
into
in
enter
in
xor
cmp
into
cmc
jmp
std
test
ffreep
std
hlt
test
mov
cmp
loope
into
repnz
loope
jmp
hlt
xlat
xlat
in
ljmp
xlat
sar
repz
out
stc
stc
mov
call
jmp
fucom
aas
xor
lock
loop
repnz
mov
fstp
fcomp
in
mov
lret
jecxz
shrb
sub
cmp
aam
leave
cmc
xor
rcr
icebp
lock
testl
call
jmp
aaa
ljmp
shr
xchg
jecxz
ljmp
shl
mov
test
fnsave
icebp
call
cmp
lds
lds
shl
cld
shl
in
call
ss
aam
cli
mov
fadd
loopne
popl
pop
not
in
repnz
jmp
fcmovu
in
iret
fdiv
cli
cmc
hlt
dec
mul
sti
mov
cmp
in
repz
int
jmp
cmc
in
aad
call
rol
call
xchg
fsubp
lret
enter
enter
lock
inc
int
xlat
fdivp
jmp
jmp
fprem
orl
xor
lock
lock
loop
iret
xchg
leave
call
lret
clc
int3
out
cli
enter
repnz
xchg
loop
ljmp
jmp
int3
enter
jmp
jmp
jecxz
out
out
ret
cli
filds
mov
loop
fmulp
iret
aaa
ss
cli
fmulp
into
cmc
lret
rcl
aas
ds
sarb
test
loop
loope
loope
enter
mul
xor
fdivr
int
cmp
addb
loop
cli
stc
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
push
pushl
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
add
mov
orl
xor
sub
mov
xorl
add
movzwl
movl
mov
movl
movb
sbbl
lea
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
mov
xor
incl
sub
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
jmp
ret
rcl
rol
aad
nop
push
pop
jnp
or
push
jl
lret
jl
shl
mov
loopne
ror
fucom
shr
shl
repnz
loope
mov
ror
jecxz
fmulp
out
mov
shl
shr
aam
clc
sti
jmp
std
cmp
cmp
out
aas
mov
out
cmc
loopne
shl
leave
fcomp
ret
idiv
sarl
sti
aas
out
into
bnd
in
out
in
int
call
in
fnstenv
xor
ret
fldl
mov
lock
mov
out
in
cmp
jmp
aas
fdiv
aas
mov
mov
mov
rorb
fildll
sarb
jmp
aas
enter
rol
aad
mov
out
orb
mov
loope
in
hlt
out
jmp
cli
out
clc
cli
xlat
loopne
icebp
repnz
clc
adc
into
fiaddl
xor
out
cli
ljmp
sar
cmc
aad
ljmp
mov
nop
shl
loope
hlt
enter
fiadds
stc
std
icebp
in
in
mov
xchg
aad
lret
sarb
lock
rcr
cld
loope
int
in
jecxz
cmp
fimull
repz
fldpi
leave
aam
fcmovbe
xlat
sar
mul
ret
loop
stc
fscale
lret
rclb
loop
call
loope
cmpb
idiv
fistpll
mov
int
test
mov
mul
cmp
fcmovu
sti
out
inc
sarl
cmp
loopne
sub
iret
ljmp
lock
xlat
cmp
lret
push
fdivrs
lret
cli
addb
fsub
nop
xchg
loopne
out
lret
cli
jmp
call
push
aam
in
loop
leave
fld
in
in
in
in
hlt
fsubr
in
cmp
lret
lret
testb
cmc
ret
cli
hlt
imul
in
lret
xchg
repz
ret
int
int
stc
sar
loopne
loop
rol
out
fxtract
lret
int
mov
enter
leave
rcl
idiv
stc
fdivrs
sti
out
shl
xlat
int
ret
lock
fsub
jecxz
in
repz
cmc
mul
xlat
leave
sar
xlat
shll
cmp
sti
xor
fadd
sti
and
int3
lret
cld
lea
jecxz
lock
clc
int3
cmp
loop
lock
out
stc
loopne
xchg
in
xchg
in
rcl
cs
sarl
fistpll
ret
test
hlt
not
leave
sub
enter
aad
out
aaa
cmc
lret
fcmove
repz
aam
lret
ret
out
mov
xlat
xor
aam
iret
shl
std
lret
ret
cmp
faddp
loopne
sub
loope
movb
in
into
in
mov
xlat
enter
rcr
iret
testl
int3
into
out
loopne
xor
vpaddsw
out
bnd
sbb
ret
jmp
mov
icebp
imul
hlt
repz
sti
cmp
lret
lret
aad
xlat
out
in
cli
mov
icebp
lret
cmp
aaa
enter
ror
cmc
fdivs
std
aad
cmp
addb
iret
mov
into
cli
repnz
shlb
fdivrs
lock
aam
div
hlt
out
aas
leave
rolb
enter
cmc
nop
call
cmp
cld
cmp
shl
out
shl
idiv
test
testb
vpsrlw
lock
lret
loopne
std
rol
fcmovb
flds
jecxz
test
into
mov
jecxz
fcmovnb
in
aad
lret
hlt
xlat
into
fsubr
xchg
out
ds
sti
jmp
leave
out
imul
cmc
rcl
lret
clc
xlat
repz
div
mov
or
std
call
cmp
rcr
repz
repz
hlt
loop
not
call
ljmp
ljmp
in
leave
cmp
and
ljmp
int
loop
iret
ret
les
sti
icebp
cmc
in
inc
lock
dec
or
push
xor
mov
add
jmp
jmp
aad
shlb
jl
jo
pop
jl
lret
jl
sar
cmp
loopne
xchg
cmc
in
enter
sub
call
lret
lock
xor
fucomi
sti
into
cmp
cmpl
clc
ljmp
leave
out
aad
ret
rcr
stc
lret
ror
idivl
loopne
cmp
stc
mov
in
xchg
xor
ret
shl
cmp
lret
neg
out
fdiv
lock
faddp
in
stc
jmp
std
cld
ljmp
cmp
stc
xlat
cli
clc
out
cld
ret
call
ffreep
ret
jecxz
ror
mov
lret
mov
jmp
xor
divb
int
in
repz
fisttps
add
out
repz
mov
out
xor
xor
int3
aam
sub
ror
leave
lret
jecxz
into
ljmp
rol
int3
test
int
ljmp
loop
orl
jmp
lret
sub
rcl
cmp
mul
fdivp
ds
xlat
inc
jecxz
flds
jmp
rol
xor
ret
stc
aas
rcr
jecxz
ret
xchg
out
ret
std
ljmp
loopne
xor
out
repz
cmp
test
xlat
fiaddl
addl
stc
jmp
aas
stc
xor
sti
shl
movb
loope
loope
orl
enter
roll
iret
shl
sbb
cli
xlat
xchg
xchg
cmp
aaa
fucomip
xor
std
shl
ret
ret
test
popl
sub
out
fcmovnbe
fcmovu
fucomp
call
lock
lock
mov
xchg
mov
ss
call
cmp
cld
clc
out
fst
cli
repz
lret
cmp
hlt
ds
repz
fidivl
aam
cld
call
mov
enter
nop
hlt
fdivp
jecxz
stc
idivb
icebp
loope
ffreep
fcomip
ret
loope
enter
rorl
int
xor
clc
das
lock
in
clc
in
adc
rcr
xchg
fimull
and
lret
mov
in
loopne
call
ss
aas
shr
in
vaddsubpd
loop
fcomi
clc
xchg
in
loope
loope
jmp
xor
das
std
repz
fsubr
loopne
rcl
ret
ret
jmp
out
xabort
mov
iret
sub
call
xor
repnz
in
hlt
fdivr
ret
fiadds
mov
das
jecxz
icebp
aad
in
sar
rcr
in
into
fnstsw
decl
icebp
and
shl
div
enter
imul
cmc
aaa
cmp
cmp
out
test
mov
iret
icebp
int3
cmp
ljmp
iret
test
xchg
std
aad
out
xchg
int
loop
aam
stc
leave
vpmulhw
cs
fidivrs
idiv
stc
loop
fsubp
cld
in
in
loope
jmp
fsub
shlb
in
xlat
loop
sar
and
fsub
cld
xchg
or
repnz
fucomi
add
std
lock
fucom
mov
xlat
in
cli
mov
xor
loop
xor
shl
aas
out
xlat
cmp
icebp
out
clc
hlt
ret
fmul
fildl
loope
shr
out
enter
call
in
faddp
stc
enter
sti
test
jmp
mov
into
rol
lret
leave
not
cmp
repnz
test
orb
ljmp
cmp
fnstenv
into
jecxz
loope
add
loopne
loope
std
leave
in
in
out
int
aam
in
cmp
mul
cmp
repz
loopne
xbegin
repnz
stc
shlb
call
aam
repnz
stc
hlt
xlat
addl
mov
ret
shl
int
cmpb
loopne
shl
aam
sar
in
xlat
xor
mov
lret
fisttps
add
add
rol
aad
aad
fcmovne
scas
push
mov
pushf
test
fistl
jl
lret
jl
fisttpl
lret
repz
shlb
xlat
rcr
ss
rol
repnz
out
aad
cmp
loopne
in
fsub
in
xchg
les
out
cmp
jmp
iret
int
repz
test
out
ret
cmp
call
xchg
ror
shll
cli
aam
out
xor
fmul
fld
repz
cmp
sti
out
mov
int
repnz
lret
call
xor
cmp
lock
flds
fcmovnu
in
iret
xor
into
repz
in
out
cmp
out
sti
std
cmp
out
loopne
aam
shl
out
test
int3
in
stc
cmp
xor
stc
xchg
loope
roll
fucomip
out
xor
aaa
xor
rcl
fcom
fmulp
ret
fnstcw
clc
hlt
stc
cmp
int
fucom
mov
cs
ss
idivl
loopne,pt
cmp
addb
in
loope
lret
xlat
stc
jmp
cmp
cmp
aam
in
rcr
loopne
fucom
lret
ljmp
cld
fdiv
aam
test
enter
aam
fisttpll
sbb
in
icebp
clc
jmp
fcmove
icebp
aad
lock
loope
test
lret
iret
lret
mov
call
in
xor
ds
xor
adc
sbb
rolb
in
lret
in
shr
shr
fcmovnbe
adc
cmp
rol
out
in
fsubrp
std
out
out
in
fsub
in
into
fcmovu
aaa
cmp
cmp
cli
into
loop
clc
in
out
fsub
jmp
in
in
clc
hlt
in
xor
leave
clc
aam
cmp
into
stc
ds
loope
fildl
rorb
iret
xor
shll
rol
sar
loope
ljmp
fmuls
int
shl
hlt
cmp
fcmove
cmc
in
into
stc
out
jecxz
loop
cmc
repz
xchg
mov
and
decl
loope
cmp
mov
cmc
int
out
cmp
test
xchg
shr
xor
enter
dec
stc
cmp
iret
rcr
ftst
ljmp
mov
xor
cmc
jecxz
sar
xlat
jmp
aad
out
dec
in
cmp
in
clc
out
std
and
out
ret
fdivs
out
shr
out
fprem
in
ret
dec
xchg
shr
mov
rorb
icebp
aaa
fcom
lret
loopne
sti
fmul
std
mov
enter
int3
nop
mov
out
ret
cmc
cmp
call
cld
loop
loope
cmc
sbb
fcmovb
roll
rol
mul
xor
aam
jmp
rcl
push
xchg
test
clc
call
fcomip
mov
out
iret
iret
aaa
xlat
into
cmp
test
cld
or
xor
xchg
decl
xor
fstp
rcr
out
cmp
cmp
sar
out
in
mov
xchg
loop
roll
out
cmp
std
aas
aaa
ljmp
into
movl
out
jmp
shr
xlat
in
xor
aad
adc
faddp
mov
mov
in
out
enter
std
ljmp
cmc
leave
jmp
shr
icebp
jmp
fldl
ret
ret
int3
loope
and
xor
iret
out
out
cmp
ds
hlt
add
cmc
rol
aam
mul
loop
leave
int
into
xor
xor
out
cmp
int3
std
repnz
aas
stc
addl
test
out
in
ret
bnd
loop
out
out
aad
cld
fidivrs
cld
sar
fcmovnb
sar
ffreep
leave
stc
fiaddl
lret
ds
call
repnz
call
repz
cmp
neg
jmp
in
cli
xchg
and
shl
jecxz
shr
enter
int3
loope
aad
jmp
jecxz
fucom
mov
sbb
ljmp
addb
mov
xor
add
cmp
je
push
push
mov
mov
jmp
aad
xor
sar
imul
jl
lret
jl
repnz
aad
loopne
in
xlat
mul
sar
xchg
cmc
cmc
fcmovne
ret
loope
enter
cmp
in
out
cmp
icebp
clc
jecxz
loop
aas
adc
enter
fcmovne
ret
xchg
dec
inc
ror
repnz
out
dec
int3
fcomip
aad
out
cld
fucomi
fcompp
mov
orb
fdiv
fcmovnbe
jmp
jmp
shl
fildl
jmp
or
aas
in
neg
idiv
cli
xor
icebp
shl
cmp
cli
ret
fucomip
addb
test
enter
sub
cmp
int3
fmul
clc
enter
int3
out
out
test
fcom
fists
out
ror
lret
fldpi
sarb
cmp
std
ret
leave
leave
or
lret
out
call
ljmp
cmp
aam
fiadds
jmp
out
loopne
shr
xor
shl
fst
in
fdivrl
iret
xlat
loopne
sarb
shl
in
lret
fcmovbe
aad
cs
in
aad
fsub
out
incb
cli
clc
roll
icebp
shr
xchg
int3
rcr
stc
idivb
fidivs
fcmovbe
ffreep
cld
mov
ljmp
xchg
sti
iret
sti
aaa
out
pushl
fadd
xlat
out
in
in
mov
or
out
icebp
jmp
into
imul
int
not
sti
hlt
cli
fcmovnu
aas
out
sbb
ret
int
jecxz
rorl
ret
lret
fucom
lret
fnstsw
cmpb
test
mov
aas
jmp
out
xchg
out
adc
in
in
aad
cmp
stc
xor
cli
ror
cmp
stc
mov
cld
fsubr
fadds
xchg
xchg
xor
icebp
aaa
cmp
std
aam
int
out
loopne
sar
hlt
icebp
mov
push
fildl
out
in
mov
xor
clc
out
out
loope
repz
mov
in
sbb
in
mov
int3
fsubr
aas
cmp
aaa
fnop
and
loopne
cli
sub
in
or
loopne
int3
lret
hlt
loop
iret
fstpt
cmp
aam
std
cmc
xchg
filds
test
cld
in
xchg
int
icebp
in
in
cmc
cmp
icebp
in
fcomp
xor
test
testb
mov
xchg
aaa
lock
ss
cmc
icebp
lret
cmpb
cmc
rcl
loopne
stc
enter
idiv
rolb
xor
in
ss
leave
jmp
test
xlat
xbegin
int3
fldl
in
loope
in
loop
clc
ss
enter
roll
faddl
iret
mov
stc
sub
int3
cmp
xor
int
lock
in
icebp
loopne
hlt
xchg
loop
repnz
test
in
int3
ret
xlat
not
repz
fyl2x
sar
hlt
ds
mov
call
leave
stc
std
cli
sti
repz
shl
int3
fdivr
stc
clc
loop
fisttpl
nop
dec
in
jmp
ror
cmp
lret
rol
cmp
aas
out
clc
aad
jecxz
in
clc
mov
mov
rol
xlat
iret
into
iret
in
shl
lret
ret
sar
icebp
rcr
fdiv
rorl
xchg
xor
neg
cld
or
rcr
sti
cld
ret
aam
xor
loope
fsub
in
xor
out
call
lret
in
aam
out
std
cmp
fiaddl
loope
call
jmp
leave
lock
xlat
cld
in
lock
sar
fcmovbe
sub
mov
iret
xchg
lret
repnz
jmp
in
in
into
call
clc
loopne
in
xchg
nop
in
test
jmp
aam
lock
loop
call
in
lret
jmp
fmulp
ljmp
cli
ds
aam
loope
into
div
sti
rorb
xchg
rcl
in
ret
fnstcw
aad
fidivrs
xor
mov
add
jmp
ret
int
lret
sub
ds
out
fs
lret
jl
mov
and
iret
iret
icebp
xchg
xchg
jecxz
out
enter
aam
int3
icebp
cmp
icebp
rcl
rol
mov
clc
fcmovu
fadds
xchg
cmp
repnz
cmp
bnd
test
in
fucom
test
sub
mov
repz
xor
repnz
call
xor
ds
mul
inc
jmp
int3
enter
ss
ret
out
cmc
clc
fcomp
cmp
fcmovbe
in
loope
out
fsubr
cld
out
out
mov
hlt
shll
shr
lret
hlt
idiv
cmp
cmp
sub
int3
int
enter
xor
shlb
repz
cmp
repz
addl
filds
fiaddl
lds
aam
aad
aaa
icebp
cmp
loopne
fprem1
in
mov
loopne
cmp
call
out
std
aas
in
int3
xor
sti
rolb
call
loope
sub
ljmp
int
repnz
loop
cld
xchg
sti
idiv
mov
and
sub
xor
cmp
xor
repnz
sar
fmuls
fcmovne
ret
mov
out
loope
lret
dec
call
cmp
in
stc
xor
in
mov
rol
ret
lret
icebp
ss
loope
cmp
ret
sti
repnz
std
enter
fadds
aad
icebp
ljmp
cmp
cmp
rcr
cmc
mov
cli
clc
fdivr
fadds
ljmp
aam
sti
in
aam
fucom
call
call
out
int3
int3
int
clc
shl
ljmp
fildl
call
fmulp
push
out
in
test
not
sub
fld1
cli
out
jmp
stc
cmp
fneni(8087
shr
vpextrw
mov
repz
std
icebp
out
cs
aad
std
iret
iret
cmp
cmp
ret
repnz
xlat
fldl
out
xchg
in
shr
xchg
xchg
repz
lock
hlt
aad
hlt
in
repnz
shr
aas
into
ret
rcr
mov
call
loope
loop
call
aas
call
repz
repnz
pop
rolb
sub
fnstcw
aas
fadd
hlt
xor
fiaddl
addl
int3
ret
out
rcl
lock
fstp
rcl
std
repz
mov
in
fsts
ljmp
leave
iret
aaa
shr
enter
lock
cmc
rolb
ffreep
call
std
in
in
aam
cmc
std
rol
loope
decb
orl
xor
fistpll
not
neg
sti
aad
shl
call
iret
into
les
shl
out
jmp
cmp
ss
loop
leave
xlat
fildl
icebp
nop
in
in
stc
xlat
sar
repz
stc
cld
cli
ret
sti
in
in
iret
test
out
loope
xchg
shl
jecxz
lret
not
ss
cmp
stc
std
cli
lds
mov
jecxz
loopne
xor
cmc
fnstenv
in
cmp
aaa
aas
aad
rcl
sbb
out
out
call
les
sarl
hlt
ror
aas
in
lret
jecxz
clc
loop
xor
loop
ret
lret
cli
imul
icebp
sub
faddl
fld
fcomi
loop
in
sub
into
jecxz
enter
cli
rcr
std
cmp
sti
ret
div
cmc
adc
out
in
mov
mov
ss
cmc
test
xor
in
call
mov
rcl
cld
xchg
cld
loopne
loopne
in
lret
sar
shl
out
jmp
std
loope
cld
fneni(8087
ljmp
cli
test
call
jmp
xor
int
ljmp
aam
mov
mov
xchg
movzwl
mov
mov
jmp
ds
int
int
int
mov
xor
adc
mov
add
repnz
rol
enter
in
cmp
cmc
and
cmc
lret
lea
jmp
stc
xor
xor
fstp
xor
sar
adc
repnz
stc
ret
aas
loop
fimuls
loop
shl
cmc
shll
cmp
neg
ds
bnd
int3
std
fadds
lret
rcl
fdivrs
in
cmp
cmc
cli
jmp
in
aas
sbb
fucomip
mov
int3
aam
das
xlat
xor
jmp
shl
jecxz
sar
loopne
adc
call
faddp
aaa
test
enter
in
xor
sti
loopne
mov
int
iret
xchg
xor
ror
int
das
cmc
cmp
fcomp
cmp
stc
rolb
out
mov
jmp
sar
aam
xor
lret
repnz
fldl
aad
ret
fiadds
xchg
imul
xor
rcl
jmp
xlat
cli
fucomp
repnz
sar
and
sti
ror
shlb
int
in
int3
iret
shr
cmc
into
addb
stc
fisttpll
and
shr
xor
aaa
lret
ss
fildl
cmp
jecxz
ljmp
into
ljmp
cmp
aas
roll
mov
lock
xor
shr
cmp
lret
ror
loope
fucomp
adc
mov
loopne
mov
in
int
rol
lret
aam
aas
xor
cmp
repnz
clc
mov
clc
rcr
into
cs
out
into
std
adc
std
in
test
loope
cmc
mov
xor
xor
cmc
fidivs
int
sub
fcom
sbb
mov
in
mov
call
hlt
out
stc
jmp
leave
in
int
test
test
lds
out
ret
icebp
rcr
int3
cmp
jmp
xlat
jmp
sbb
xchg
fcomi
test
fldl
xchg
sub
out
icebp
clc
fstp
in
cmp
call
test
cmc
fisttpll
into
xchg
test
icebp
xor
hlt
in
rcr
or
cli
faddp
cmp
jecxz
out
int3
test
fmull
out
cmp
cmp
enter
ljmp
repnz
lret
jecxz
repz
mov
enter
xor
repnz
cld
aad
fpatan
ljmp
int
lock
iret
ljmp
test
icebp
ret
rcr
xlat
mov
out
aad
lock
cmp
out
int3
stc
cmc
jmp
into
repz
shl
aad
enter
sti
mov
sub
ljmp
iret
lret
xlat
shr
aas
adc
sti
xchg
mov
shl
repz
hlt
idivb
xor
adc
rcr
cld
fsub
int
mov
cli
in
shr
ss
fsubr
aad
out
iret
rcl
iret
clc
hlt
frndint
ds
jecxz
jecxz
mov
loopne
stc
stc
cmp
ljmp
ffreep
shl
flds
xlat
int3
loop
fdivr
lock
clc
sti
fcmove
div
loope
repz
out
out
lock
fadd
hlt
jecxz
lds
repnz
out
sti
in
enter
fdiv
cmp
fcmovb
fst
cmc
aad
mov
in
in
fcoml
hlt
lock
in
shr
aad
in
cld
cmc
xchg
mov
test
jmp
sti
lret
in
int3
in
int
stc
out
lock
std
imul
in
ds
test
stc
pop
int
jmp
out
mov
rcl
in
sub
sarb
repnz
sar
sar
addb
call
and
ds
rol
rcl
ss
ds
testb
icebp
loopne
out
test
mov
xchg
icebp
lret
out
fcmovnu
rcr
cmp
cmp
into
movzwl
xor
add
mov
jmp
rcl
ret
fst
xlat
inc
dec
push
lods
hlt
push
out
or
jl
add
cli
clc
ret
mov
fucom
xchg
divl
jmp
loope
test
out
loope
int3
ror
repz
shl
call
clc
int3
mul
aam
iret
ret
leave
adc
hlt
les
lret
jmp
aaa
not
xor
hlt
call
fadds
rolb
iret
cld
iret
mov
shr
shl
xor
repnz
cmp
rolb
clc
loopne
addl
out
int3
lock
neg
aam
rcl
out
fcomp
test
leave
fsqrt
icebp
lret
cld
xchg
in
enter
out
ljmp
loopne
cld
in
lock
in
xchg
nop
lret
divb
lret
aaa
out
out
fmul
cmp
iret
in
rcr
idiv
sbb
mov
mov
mov
xor
int3
xor
lock
out
shl
clc
xor
in
xlat
in
fld1
fmul
lret
ljmp
hlt
div
cmp
not
decl
sbb
mov
xchg
repz
jmp
int3
aad
into
int3
ljmp
fcmovnbe
jmp
in
enter
shl
jmp
lret
sarb
xor
repz
aam
jecxz
adc
int
xchg
xchg
xchg
fsubp
int3
ror
frstpm(287
aaa
fcom
cmp
lock
cmc
jmp
cld
lret
ficoms
enter
std
das
ss
jmp
icebp
aam
fsubr
jmp
jmp
call
ljmp
repnz
loop
rol
lock
jmp
mov
xchg
nop
mov
sub
vpaddsb
cmp
lock
lock
out
shl
sti
lret
lret
and
in
aam
iret
into
repnz
lret
aad
sbb
shl
cmp
cld
stc
ret
out
fsubrp
xchg
ljmp
fchs
ret
cs
lret
ss
lock
repnz
int3
in
sar
dec
out
hlt
jmp
rcr
cmp
repz
iret
ret
test
fcom
shl
mov
sti
mov
cld
xchg
sub
xor
ss
leave
cmp
call
loop
repz
add
loopne
jmp
mov
call
icebp
cld
lret
shl
ljmp
loope
out
test
out
out
loop
shl
out
jmp
cmp
fcmove
cmp
xchg
fsub
xchg
cli
cli
fdivr
test
test
fucom
clc
stc
in
hlt
cmp
ret
testb
out
test
movb
xor
icebp
sarl
fdivr
cmc
aaa
aad
in
repz
addl
lret
fisttpll
out
fcmovu
cmc
rcr
repz
ret
iret
aam
test
repnz
std
test
enter
xchg
xor
repnz
lret
cld
fcmove
neg
iret
lret
ret
ds
in
loopne
call
mov
int
in
iret
icebp
lock
test
enter
cmp
in
lret
int3
in
out
enter
xchg
repz
shlb
out
xor
fucomp
shl
aad
in
jecxz
movl
mov
xlat
repz
sar
fdivrp
into
std
in
ror
in
enter
cld
aam
iret
xor
fcom
fcmovnbe
aaa
into
loopne
cmp
hlt
ret
out
fcmovb
call
into
enter
loop
aaa
in
fsub
cmp
aam
lock
jecxz
rcl
leave
mov
sti
jmp
in
in
ljmp
xor
ror
fnstcw
xor
rcr
cli
xchg
cmp
icebp
loope
mov
into
aaa
xor
icebp
ljmp
in
xor
cmp
repz
repnz
loopne
stc
xchg
shl
cld
in
int3
xor
fcmove
stc
aaa
out
sarl
cmc
loopne
test
fcom
jecxz
xlat
in
mov
rclb
jmp
in
xor
cmp
rolb
out
ljmp
mov
jmp
aad
enter
fsts
lret
fdivs
jl
add
xchg
mov
lret
ror
idivl
fnstenv
shl
fdiv
fdivs
in
icebp
ds
cmc
fldl2t
iret
mov
lret
in
jmp
in
fucomi
aaa
hlt
icebp
shl
testb
stc
fsubp
loopne
jecxz
into
ret
in
mov
loope
lock
cmp
icebp
rol
sti
leave
loop
mov
loop
loop
repnz
aad
repz
cmp
call
fcmovu
cli
lock
cmc
fcmovu
or
sub
fcomip
jecxz
clc
loop
lret
fdivp
icebp
aad
cmc
ret
cld
test
int3
filds
sub
repnz
div
enter
test
repnz
repnz
sti
vpxor
sub
xchg
sub
sti
aad
std
ss
cmp
dec
ret
mov
std
out
out
xchg
cli
out
cmc
sub
lret
in
out
aaa
jmp
std
cmp
repnz
ret
repnz
out
ret
cmc
ljmp
clc
cmp
int
cmp
test
cmc
ret
clc
ds
test
into
cmc
int
div
aam
fdiv
adc
mov
shl
ret
jmp
loop
popl
out
repz
repz
int
int3
rcr
cld
fcmovnu
test
lret
xchg
xchg
fsubr
shr
mov
shr
fcmovnb
sarl
ljmp
fcmovnb
sti
cmc
and
xchg
nop
mov
lret
icebp
out
cmp
xlat
icebp
cmp
loopne
cmp
loope
shl
clc
test
xchg
xchg
in
xor
int3
out
shll
cmp
ret
lock
ficoml
cs
xor
cli
cmp
aam
out
add
stc
faddp
roll
in
adcb
lret
repnz
cmp
shl
idivl
ds
out
std
jmp
loope
ret
hlt
in
jmp
xor
jmp
in
cli
call
sub
cli
std
test
testl
lret
xor
repz
clc
enter
rcl
fsub
shl
in
flds
mov
xchg
ret
lret
fmul
stc
repnz
loope
icebp
std
rolb
cli
cli
cld
cld
in
shr
loopne
stc
ljmp
rolb
test
and
enter
call
loopne
sarl
cmp
cmp
sti
cmp
jmp
fimuls
ret
fsub
cmp
jmp
repz
std
shl
sar
and
test
out
in
in
int
cmp
enter
lret
fcomp
cmp
aam
repz
repnz
in
leave
lea
pushl
out
rcl
enter
in
repnz
into
lret
sti
repz
loop
int3
out
jmp
mov
stc
lret
leave
lock
push
aam
xlat
test
div
fucom
call
dec
nop
mov
in
fnstenv
fdivrs
cmp
in
icebp
aam
fucomi
shl
jmp
lret
fsub
rorb
shr
std
leave
fxch
repnz
div
in
fstp
cli
std
fdivr
mov
leave
testb
int
xor
rcr
xor
sarl
fnstsw
hlt
cli
cmc
xchg
mul
in
stc
sti
mov
cmc
out
icebp
fyl2xp1
sub
cmp
out
out
cli
cmp
cmp
clc
jmp
xchg
xchg
mov
repz
cmp
fucomi
bnd
aam
in
repnz
std
clc
test
into
call
in
jecxz
sub
repnz
out
in
in
and
rcr
std
loope
sar
leave
in
iret
loop
out
sub
call
leave
loopne
cmp
add
ljmp
lret
mov
das
call
lret
aaa
aam
shl
int3
xlat
stc
loopne
cmpl
mov
xchg
xchg
sub
shlb
fstpt
clc
cmp
xor
fdivp
jmp
jecxz
inc
cli
xchg
out
shl
aam
int
ljmp
data16
add
xlat
aas
fst
fcmovne
mov
imul
lret
jl
int3
out
or
repnz
and
fst
test
jecxz
leave
aam
lret
aas
int
clc
cmp
hlt
stc
rol
movl
icebp
mov
rcl
in
in
cld
cmp
add
xlat
mul
testb
ljmp
out
fnstenv
aad
lret
shl
fdivp
out
out
aas
rcr
rolb
out
jmp
mov
repnz
lret
jmp
fdivs
in
fnstsw
fucom
out
sarl
fimuls
loop
in
lea
div
jmp
out
hlt
iret
out
cld
fdivp
iret
incl
lret
lret
xor
xor
fsubr
sti
cld
std
stc
lret
sbb
out
jmp
std
in
jmp
xchg
xchg
cmc
loop
xor
fstp
xor
sti
aas
adc
xchg
test
jmp
mov
out
xchg
ror
nop
in
fsubp
rol
lock
xor
cld
cmp
fabs
test
test
int3
ror
clc
aam
cs
stc
repz
cmp
jecxz
ret
ljmp
cmp
xchg
lret
neg
jmp
neg
xor
in
fsub
fisttpl
xchg
loop
or
out
aaa
fcmove
call
ret
int3
and
test
cmp
int
xchg
rcl
in
hlt
lock
cmp
neg
cli
into
clc
cmp
add
lret
icebp
mov
out
ret
rcr
repnz
into
in
jecxz
cld
dec
sbb
icebp
cld
enter
out
sar
out
repnz
fidivs
neg
sar
loop
fsubrp
cld
lock
out
out
xchg
out
rolb
sarb
out
repnz
lock
sti
sbb
std
add
icebp
in
aam
clc
sti
fcomi
shl
loope
fadd
jmp
in
iret
cld
shl
out
jmp
lret
shr
stc
lret
ret
iret
rcl
xlat
in
loop
cmp
aam
ljmp
ret
ror
int3
loop
fdivr
in
out
aad
cmp
mov
fisttps
out
jmp
call
lret
call
out
aam
mov
jecxz
ret
in
in
icebp
sar
in
out
shr
iret
into
jmp
ljmp
fcomp
lea
xchg
mov
fisttps
shl
xor
aaa
rcr
in
stc
rcr
cmp
loop
loopne
cmp
nop
mov
xlat
jmp
jmp
shl
rcr
shl
out
fadd
roll
out
dec
sbb
in
out
xor
test
jmp
cmc
cmp
lock
test
out
cmp
enter
cld
xchg
xchg
ds
ret
sti
lret
leave
in
loope
fsub
ror
sar
cld
cmp
clc
test
fiaddl
xchg
test
icebp
out
rcl
int
shl
fld
aas
rolb
out
xchg
clc
int
xchg
repz
cmc
call
cmp
out
sbb
fsubrp
into
jmp
ror
iret
sub
into
int
shl
cmp
mov
test
fxam
test
lea
aad
cli
enter
in
aas
ret
aas
xor
enter
xlat
fdivrp
rcll
aad
out
sti
hlt
aaa
xlat
aam
lock
mov
addl
fisttpl
les
in
xor
ss
rcl
xlat
clc
loop
test
test
sbb
out
repnz
rcr
aas
aas
cld
ds
repz
ret
add
dec
out
hlt
sub
std
sti
repnz
cmc
into
loope
cmp
faddp
rolb
and
repnz
test
hlt
leave
loope
icebp
cld
into
out
xchg
mov
cli
into
fdiv
xor
lock
cmp
fcmovb
cmp
testb
cmp
jne
pop
pop
jmp
int
into
fcmove
fst
aam
lods
push
inc
sbbl
jl
lret
jl
in
in
and
ljmp
iret
lock
loop
out
loopne
fmulp
out
jecxz
push
jmp
xlat
lock
in
out
shl
cmc
cmp
jecxz
shl
rorb
call
loop
ffreep
icebp
in
fcomp
ss
call
fnstsw
repnz
ffreep
cmp
icebp
mov
ret
test
cld
enter
jmp
hlt
mul
filds
lea
iret
sti
into
out
into
rcr
rcr
div
fadds
rcr
test
stc
enter
adc
xor
xlat
out
les
lock
lock
ds
ror
in
int3
clc
stc
int
incb
loop
xor
aaa
push
lret
aaa
fsubp
xchg
loopne
in
jecxz
cmp
nop
xchg
in
shl
xlat
sub
cmc
rcl
int3
cmp
into
std
jecxz
fdivr
ljmp
ljmp
aaa
stc
xor
das
cmp
out
int3
in
aam
and
in
ljmp
xchg
xlat
ror
sub
test
aas
fidivrl
sti
enter
lret
or
enter
lock
sub
xor
ljmp
cli
repz
shl
and
test
lret
mov
ret
out
into
xor
cli
shr
cli
cmp
sti
ror
fnstsw
fcmovb
mov
shr
mov
loop
xlat
lret
xor
cmp
hlt
out
jmp
mov
test
in
sarb
lock
fadd
int3
addb
mov
mov
mov
xchg
in
sub
out
out
lret
into
not
or
out
testb
in
jmp
into
out
shl
in
test
rcr
fcmovnu
and
rol
ljmp
mov
ret
hlt
xor
aaa
ljmp
fprem
repnz
out
aam
clc
cld
fmuls
jmp
xor
cmp
clc
lock
loope
sti
loopne
enter
lock
ror
stc
jecxz
int
in
sarb
aaa
lret
lock
in
lock
hlt
enter
jmp
loop
lock
xor
hlt
ljmp
rcl
aas
in
out
jmp
ljmp
in
cld
aad
cli
in
into
fiadds
out
cmp
lock
ret
enter
into
lret
aam
cmc
in
cmp
xor
add
jmp
mov
shlb
xor
cmp
lret
cmp
hlt
fimull
xchg
mov
lret
repz
xlat
in
cmp
loop
fstp
out
xchg
loopne
fsubp
cmc
test
aad
out
aam
lret
jecxz
clc
iret
cmpb
bnd
fdivrp
icebp
int3
into
rcl
rol
xor
fdiv
aam
xlat
cmc
cld
jmp
shr
repnz
loope
testb
test
lret
loopne
loopne
test
clc
xlat
aam
sti
fnstsw
lret
ret
cmp
aad
repnz
fidivrl
test
sti
repz
jmp
shl
hlt
in
jmp
filds
cli
shl
loopne
neg
jecxz
fimull
loopne
icebp
lock
out
fdivrp
int3
in
xlat
test
xlat
jmp
sti
mov
icebp
out
shr
aaa
into
jmp
shr
xor
loopne
into
fcmovu
std
stc
testl
leave
xchg
into
dec
cs
cli
sub
repz
loope
ljmp
aas
stc
aas
jecxz
cld
leave
jmp
in
loop
ljmp
aad
rcr
cli
out
xor
fdivp
leave
enter
stc
imul
fsub
lret
iret
enter
sti
cmp
orl
out
test
cmc
repz
repnz
ljmp
sti
rcl
into
cmc
shl
stc
mov
out
cmp
lret
lret
iret
mov
mov
xor
add
mov
mov
xor
add
mov
mov
jmp
sarl
rcr
ret
fucomp
xchg
sub
sub
jle
jl
add
fxch
shl
fldl
fcmovne
ret
test
nop
lock
ret
call
in
neg
icebp
into
xor
sti
orb
fdivr
ror
jecxz
div
out
iret
out
int3
ds
not
out
hlt
mul
loopne
lret
mov
lret
into
icebp
orb
das
ret
out
into
aaa
in
imul
xlat
aam
test
std
fcmovu
aam
loopne
out
int
in
jecxz
ljmp
sti
leave
cld
aas
cmp
ror
faddl
fisttps
out
sub
in
enter
ljmp
test
hlt
jmp
in
sub
iret
in
out
loope
addl
or
iret
jmp
iret
in
jmp
jmp
ds
rcl
test
fiadds
xchg
nop
xchg
out
leave
cmp
in
not
rcr
fcmovbe
test
sar
enter
fisttpl
int
sub
enter
aad
ljmp
adc
hlt
in
jmp
jmp
xor
repz
lock
std
rcr
stc
mov
out
orb
aaa
sar
xlat
cmp
int3
cmp
rcr
faddp
aad
in
loope
loop
cld
cld
fcomip
aad
hlt
repz
in
call
rcl
lock
sti
jecxz
in
lret
mul
int3
xchg
xor
out
jecxz
rcr
ror
cmp
loopne
add
neg
fucom
loop
fucomp
into
mov
fdivp
aaa
fcmovne
xor
xor
cmpl
jmp
jmp
test
repnz
xor
clc
int3
std
div
loopne
loope
fcmovu
add
in
int3
loope
out
lock
cmc
sub
int
cmp
sti
aaa
fcmovnu
xlat
cmp
faddp
xchg
loopne
mov
push
ljmp
std
iret
cmc
clc
rcl
ds
cmc
fisttpl
fst
in
cs
icebp
cmp
stc
in
cmc
in
sti
loope
enter
movl
call
cld
clc
rcr
cmp
push
iret
into
rolb
mov
mov
in
jmp
repnz
fdivs
lock
aas
jmp
shl
in
xlat
fdivr
testl
stc
ret
fnop
in
cli
ljmp
icebp
cmp
shl
mov
test
mov
repnz
out
int3
rcl
rcl
rcr
out
sbb
loop
aam
xchg
hlt
loop
sti
mov
mov
lret
repnz
cs
leave
lret
repz
repnz
loopne
out
loope
in
rcl
hlt
fildll
xor
loopne
repz
idivb
cld
fidivrl
mov
sti
xlat
les
call
cmp
xor
lret
jmp
cmp
and
test
mov
mov
loopne
cli
icebp
push
cld
shrl
sub
ds
icebp
int
in
xor
lret
xchg
lret
jmp
sub
repnz
hlt
hlt
in
lret
aam
int3
fdivrl
ret
cmc
in
loope
in
leave
fsubr
out
jmp
ret
ret
xor
cmp
lock
xor
rolb
add
hlt
lret
call
out
shr
aam
in
xor
out
neg
aaa
loop
icebp
jmp
jmp
loope
mov
ljmp
cmp
cmp
jmp
aam
sti
fadd
clc
clc
rorl
lock
ss
int3
ds
stc
ds
fsubp
test
fcoms
enter
ss
out
divb
divl
aas
cmp
addl
lds
shl
lret
test
icebp
shlb
cmp
fmul
in
clc
rolb
lret
orb
in
test
ret
not
cmp
jecxz
in
aas
std
mov
jmp
ror
ds
ret
or
mov
jg
lret
jl
loope
out
xor
call
enter
call
sarl
loopne
aas
out
sti
xchg
call
icebp
adc
clc
in
icebp
clc
cmp
xor
jecxz
sbb
mov
xchg
cld
loop
lret
das
cld
jmp
repz
mov
in
out
xchg
nop
in
out
lret
lret
into
cmp
cmp
fiadds
hlt
xlat
jmp
dec
mov
rcr
fcmovne
jmp
rol
shll
out
cmp
std
jecxz
out
ljmp
cli
repz
sar
into
leave
cli
std
leave
repnz
and
loope
in
mul
out
fmull
xor
iret
int3
rcr
idiv
fcmove
out
aam
cmp
incl
xlat
enter
out
jmp
out
lret
imul
sti
jmp
fcomi
ret
out
jmp
in
mov
mov
jecxz
jmp
out
into
loop
out
cmp
jecxz
clc
std
and
rol
out
xchg
lret
lret
enter
enter
xor
std
cmp
clc
fcomip
fdivp
clc
enter
sbb
cld
loopne
loope
jmp
out
out
jmp
in
aas
ljmp
cmp
and
test
into
or
leave
sarl
hlt
cmp
fdivrp
ljmp
fstp
hlt
xchg
adcl
jmp
fmulp
int
icebp
std
icebp
repz
in
icebp
repz
out
xor
cmp
cmp
fcomip
ret
in
clc
fsubr
fcmovnu
shr
xlat
sti
call
cld
jecxz
lds
rcl
cmc
in
loope
into
cmp
repz
vpmullw
lds
adc
xlat
aam
int
xlat
cld
into
aad
sti
iret
hlt
test
in
jmp
xchg
enter
jmp
cmp
cmp
cmp
in
test
xchg
mov
leave
aad
jmp
fucomip
rcl
lock
test
mov
test
into
loopne
cmc
out
xlat
cld
shr
in
sti
in
jecxz
rol
test
lret
int
into
ror
jecxz
sar
xor
int3
out
vpmuludq
cmc
hlt
loopne
cmp
into
ret
in
call
enter
in
mov
xor
in
lret
rcr
xor
rcr
aas
cmp
out
decb
fcmovnu
in
out
lret
test
xchg
lock
cmp
fcmove
sarl
xor
adc
rcl
inc
call
in
out
std
in
lea
xlat
xor
std
rcl
aas
xor
in
sbb
cmp
xor
in
jmp
ljmp
cmp
sar
int
jmp
in
shl
hlt
ds
test
xlat
mov
cld
sbb
lock
ds
not
lock
cmp
fldl2t
or
aam
in
ljmp
neg
sbb
cmc
stc
addb
mov
lock
enter
shl
xlat
sbb
lock
cld
orl
loopne
xchg
ror
jmp
imulb
enter
xor
jmp
sub
sti
ffreep
jmp
lock
fucomip
lret
cmp
xor
iret
jmp
filds
aad
adc
mov
in
cli
out
shl
fnstenv
clc
sti
int3
fcomp
std
fidivrl
repz
adc
test
lret
in
mov
mov
int
into
fxch
cmp
into
cmp
int3
in
shl
loopne
xchg
in
nop
in
loopne
das
hlt
out
xor
cld
call
xor
neg
sti
loope
cld
cli
orb
idivl
call
aad
cmp
out
incl
cmp
mov
ret
xchg
sbb
jecxz
icebp
lret
fdivs
cmp
fdivr
cmp
enter
xchg
in
in
not
leave
mov
cmp
je
mov
mov
mov
jmp
lret
aam
fcomp
aad
andb
jmp
jg
lret
jl
repnz
out
shr
aad
shl
out
aad
out
repz
in
lret
xchg
ror
iret
div
ljmp
sub
repz
fcmovbe
repnz
std
call
fucomp
loop
into
aad
aaa
cmp
hlt
int3
addl
or
cmp
cli
test
das
shlb
fucomi
fnstsw
ljmp
std
stc
clc
stc
out
cld
lret
rcl
xchg
into
ret
shl
in
shl
out
jmp
hlt
sti
cmp
in
sub
enter
in
ljmp
ror
ljmp
aam
aas
faddl
in
mov
in
call
out
stc
in
std
out
std
fiaddl
hlt
repz
xchg
loop
loopne
lret
test
cmp
aaa
neg
xor
testl
jecxz
iret
in
out
repnz
sti
iret
cs
testl
loope
cmc
and
loope
lock
test
repnz
out
fsubr
cmc
iret
int3
xor
idiv
rol
xchg
loope
call
aad
call
lret
out
ss
cmc
jecxz
add
fiaddl
into
nop
xchg
push
jecxz
in
ret
vpsllq
enter
sti
cmp
bnd
jmp
inc
xchg
fimuls
sub
cmp
jmp
aaa
out
cmp
sar
in
fcmovbe
aas
loope
call
xchg
out
rcr
loop
jmp
xor
ret
fdivrs
orl
loopne
xchg
addl
xor
xor
cld
pushl
cmp
sbb
clc
incb
loop
nop
int
fstl
xor
shl
lret
in
fldl
aas
in
fstp
fucomi
loope
nop
xor
ror
in
lret
aas
fucomip
sar
cmp
sar
aas
in
stc
mov
out
test
fmul
lock
aad
cmp
lret
rcl
xlat
stc
hlt
neg
mov
enter
fst
icebp
xchg
xor
repz
lds
cmp
sbb
test
fprem
iret
ret
fadds
call
in
div
fmul
ret
movl
lock
fsubp
out
lret
lds
fcmovu
sar
shr
iret
xchg
rorl
test
fildl
fxam
loopne
leave
fnstenv
cmp
cmc
loop
mul
movl
xchg
mov
out
aam
rcl
std
out
int3
loope
fcmovne
sar
faddp
ret
cmc
in
fmulp
in
out
fisttpll
ret
fnstenv
aad
imul
in
fsubr
fidivrl
rcr
cmc
ret
cld
cld
test
xchg
loope
xchg
shl
cld
sti
int3
cld
xor
shr
shl
rcr
ret
aam
test
or
lret
out
leave
aaa
in
cli
shl
call
cmp
ret
in
adcb
in
jecxz
aam
xor
in
aaa
leave
cmc
stc
jecxz
sar
fyl2xp1
test
flds
std
nop
cld
int
lret
jecxz
fdivrs
lock
clc
out
lret
jmp
xlat
repnz
loopne
mov
shl
xchg
xchg
xor
into
xlat
rcl
xor
icebp
repnz
loopne
shl
mov
test
out
leave
lret
enter
shrl
lret
cli
aas
sti
fcmovne
cmp
aam
fidivrl
xor
xchg
mov
xchg
ds
out
int
lock
ret
cli
in
filds
out
in
in
fdiv
out
ror
xchg
aad
out
out
enter
cmp
sarb
test
fdiv
stc
std
out
ds
into
loop
lret
out
loopne
shl
enter
fidivrl
cmc
idivb
cmp
xlat
jmp
out
out
lea
xor
loope
aam
rcl
sti
xor
shr
std
fcmovb
sbb
leave
loop
cmc
loop
enter
lret
call
cmp
cmc
clc
shl
cmp
jmp
mov
fcmovnb
in
mov
jg
sub
jg
lret
jl
xchg
leave
call
jmp
ret
xchg
int
rcl
xor
sti
cli
cld
fdiv
int
test
repnz
out
mov
leave
mul
stc
cli
loope
xor
xor
out
cli
repnz
lret
loopne
addl
orl
sub
in
repz
cmp
sbb
cli
ljmp
repz
cmp
imul
stc
rol
xor
cmp
cmp
ror
fdivr
int3
out
sti
rorl
out
int3
cmp
int
ss
ret
cmp
mov
ret
jmp
icebp
mov
loop
lock
lock
aad
idiv
fsubr
ljmp
mov
mov
lret
call
leave
jecxz
hlt
in
int3
aas
fdiv
icebp
addb
fadds
mov
mov
repnz
fsubr
repnz
ljmp
fdiv
mov
fadd
fcomp
in
ljmp
xor
lock
fstpt
ss
cmp
repz
xlat
xchg
cli
ret
icebp
xchg
xchg
jecxz
ds
fsubr
out
ljmp
shl
sar
sar
out
fyl2xp1
out
lret
int
shl
ljmp
in
loope
jmp
cmp
aad
mov
jmp
icebp
incb
clc
ljmp
sti
int
fiadds
loopne
jecxz
sti
std
mov
loopne
std
nop
shl
int3
xor
rcl
fucomp
hlt
cmp
enter
fucomi
cmp
loope
call
fcmovne
into
xchg
out
iret
in
icebp
cmp
divl
icebp
ljmp
fnstsw
aad
sub
mov
test
das
shrl
int3
stc
shl
out
aam
loope
out
icebp
mov
jecxz
repnz
loop
clc
mov
in
xor
in
out
enter
xlat
fmulp
fdiv
lock
fsub
rcr
ljmp
test
not
leave
fdiv
cld
call
ret
lock
fdiv
stc
sub
lret
sub
in
shl
in
cmp
xor
lret
jecxz
loope
leave
xchg
lea
sub
xor
ljmp
fcmovnb
loop
mov
ljmp
call
shl
cmp
aad
repnz
lret
repz
xchg
test
repnz
hlt
iret
int
jmp
ror
call
aam
incl
xchg
rol
fld
aam
not
test
loop
loopne
fimull
out
loopne
les
hlt
int3
repz
in
hlt
leave
loope
aad
in
aad
sub
in
loopne
iret
repz
xchg
in
fsub
clc
xor
cmp
aad
test
imul
neg
in
std
int
iret
out
out
fnstenv
ffree
fdivp
lock
cmp
fdivr
xlat
fcmovnbe
adc
aam
lea
lret
out
aam
aaa
in
call
into
loop
out
repz
lret
xchg
ficoms
cmp
out
out
lock
loopne
fldln2
fcmovnb
ret
fcmovne
and
loope
repnz
in
enter
cmp
ss
cmpl
rcr
loopne
ret
icebp
lret
shr
fcomip
out
loop
out
cli
fmul
in
ret
cmp
ret
jecxz
orb
in
div
clc
fcmove
in
cmp
cli
jmp
ds
aad
cmp
enter
lea
les
lret
in
call
ror
test
in
loopne
hlt
in
in
out
loop
lock
mov
icebp
jmp
stc
ds
out
leave
test
enter
fstp
in
loop
aam
out
repnz
cmp
into
ftst
mov
cli
out
vcvtpd2dq
mov
jmp
cmc
fmul
stc
repnz
into
aam
repz
in
xchg
lock
loope
test
add
mov
mov
movsbl
xor
jmp
rcl
rcr
int
add
test
adc
lret
jl
jecxz
xor
jmp
sarb
shl
aam
jecxz
jmp
jecxz,pt
loopne
enter
loop,pt
out
jmp
rcl
ljmp
imul
fcmovu
cmp
loop
icebp
lret
mov
leave
xor
fsubr
cmp
repz
out
hlt
movl
call
call
aad
into
aad
rolb
filds
lret
fucomip
xchg
mov
test
cmc
xor
enter
clc
in
jmp
leave
mov
test
xchg
xor
cmp
cmp
cld
loopne
icebp
xlat
faddl
in
loop
fst
mov
iret
into
sarl
cmp
idivb
icebp
sti
cmp
mov
mov
fsubr
sarl
jmp
cmp
out
std
loop
and
hlt
loopne
in
sti
lret
mov
jecxz
aad
xlat
xor
ret
lock
out
aam
rcr
loope
fcom
lds
out
icebp
into
in
int
iret
ss
cld
cmp
iret
aas
hlt
iret
rcr
xlat
movb
loope
mov
mov
cld
fsubrl
rol
sub
repnz
lret
jmp
aad
icebp
test
cmp
xlat
loopne,pt
addl
enter
out
sarb
cmp
ret
vpaddq
out
fucomip
enter
call
rol
sarl
fsub
xlat
fldl
cld
aam
xchg
loop
fsubr
out
cli
fsub
out
add
out
sti
ss
out
aam
ret
fcomi
vmovq
fucomi
in
fcmovu
cmc
int
cs
xor
cmp
fcmove
fld
repnz
stc
cmc
out
test
hlt
std
std
mov
lret
out
in
xor
cmp
xor
xor
fsubr
cmp
idiv
shl
jmp
sar
incl
lret
lret
loop
repz
xor
aaa
cmc
aam
int
fsub
sarl
loope
sti
sti
out
fsubr
in
enter
lret
rcl
aaa
ror
aas
jmp
jmp
fucom
test
fcmovne
out
xchg
mov
in
xchg
aas
xlat
ss
int3
cmp
jmp
cmp
sti
ds
mov
loopne
xchg
enter
jmp
out
xor
in
cmp
ljmp
ret
mov
idiv
xchg
sub
out
jmp
cmp
iret
cmp
xlat
sar
aas
rcr
div
rcl
ret
aas
in
mul
jmp
mov
nop
mov
in
sti
into
icebp
cmp
fmul
addb
rorb
fmull
loopne
cs
not
mul
jmp
aas
std
cli
cli
out
out
in
out
leave
test
xchg
xchg
leave
aaa
ret
cmp
cmp
cmc
fidivrl
test
in
out
call
in
addl
enter
cld
rcr
xor
clc
cmc
cmp
aam
roll
in
decb
in
xor
aaa
clc
icebp
out
cmp
int
int3
inc
aad
jmp
incb
enter
mov
int
out
lret
call
repz
jecxz
aam
fld
jmp
shr
and
lock
aad
idiv
xlat
cmp
loop
div
cmc
idivb
jmp
in
faddp
xor
rcl
fcmovu
fdivl
cmc
sar
int3
shl
and
cmp
fcmovbe
f2xm1
test
and
icebp
xor
aam
iret
int
aad
jecxz
xlat
repz
addb
mov
orb
in
lret
fnsave
aas
cmp
std
loopne
cmc
cmc
filds
test
adcl
not
jmp
cli
sub
int3
sbb
mov
testl
xor
repz
neg
cmp
loopne
out
xchg
rolb
enter
test
out
loopne
xor
call
ljmp
mul
rol
test
loopne
xlat
lret
mov
ljmp
enter
clc
stc
dec
cmp
cmp
je
movl
jmp
rcl
rcl
roll
dec
rorb
dec
adc
jl
cmp
jecxz
lret
cmc
ret
fmul
fstl
ret
cmp
clc
rcl
les
idivl
sarl
fiaddl
out
nop
xchg
out
and
clc
repz
xor
fxch
repz
movl
cli
xchg
divl
shlb
bnd
rcl
fbstp
xlat
neg
lret
fcmovbe
hlt
out
out
adc
adc
iret
idivb
rcl
out
fcmovnb
aaa
sar
repnz
roll
icebp
sti
jmp
lock
loop
leave
cmp
cli
loop
test
aad
out
fisttpl
nop
loopne
fisubrs
out
fnstcw
leave
sti
roll
out
idiv
in
mov
cli
stc
fucomip
out
out
out
out
out
in
jmp
fcmovbe
iret
xchg
xchg
out
cli
xchg
int
ret
out
fdivr
xor
rcr
fsub
cmp
hlt
mov
enter
jecxz
out
mul
cmp
xor
shlb
xchg
rolb
lret
in
or
xchg
xor
aam
xlat
cmp
sti
fcmovnu
loopne
sbb
cmp
clc
mov
faddp
repnz
cmp
aam
jmp
aad
xchg
out
fcomp
sub
test
call
repz
shll
out
ror
in
std
loop
mov
in
xchg
xchg
test
in
rcl
sti
in
sti
repz
aad
aad
loop
fxch
fimull
ret
xor
in
lret
shr
cli
lret
out
shl
loop
in
test
xlat
mov
les
jecxz
shll
cli
sti
cmp
int
idivl
sar
int3
rcl
add
std
ffreep
fmul
mov
rcr
xchg
xchg
in
fsubr
aad
cmp
out
fdivrl
fcmovbe
lds
fldln2
in
mov
out
call
ss
aam
leave
clc
ss
std
faddp
ds
aam
decb
mov
mov
cmp
stc
fcmovbe
jmp
into
ret
and
lds
out
sub
jmp
in
out
cmp
lret
shl
shl
mov
fildl
clc
int3
jmp
ds
lds
int
bnd
lret
aas
test
in
fcmovbe
fcomi
sti
mov
lret
stc
loope
jecxz
lret
sar
ret
in
in
ljmp
into
roll
clc
ret
call
int
jecxz
cmp
cli
jmp
jecxz
aam
loope
aad
test
jecxz
int
shr
lock
in
in
call
fdiv
jmp
cmp
ds
mov
fsubr
popl
ror
sar
lock
ss
shl
ror
roll
testb
fsub
sub
repnz
cmp
lret
cmc
ljmp
hlt
mul
test
in
loope
in
aad
repnz
cmp
lret
xor
iret
cmp
cld
iret
in
clc
aam
leave
leave
cmp
std
jmp
int3
fadd
cli
cli
shll
fstpt
mul
cmp
std
out
fsubp
ret
jmp
cld
lret
test
out
out
hlt
stc
fcmovne
clc
lret
cmp
cmp
int
stc
vpmullw
lret
aas
out
stc
sti
push
cmc
lock
ljmp
cld
cmp
fsqrt
out
cmp
loope
aam
hlt
xchg
int
mov
mov
divb
rcl
cmp
shr
cmc
aam
addb
loop
lock
call
out
div
cmp
loopne
fcmovnb
lock
loop
cli
enter
call
lret
out
aaa
cli
adc
shl
mov
sub
out
in
jmp
cs
ds
hlt
icebp
cmc
aam
fucomi
stc
lock
rclb
out
cmc
iret
xor
xor
ss
in
loopne
test
cmp
sti
jecxz
fmull
add
add
lret
ret
int
jle
shr
loop
push
sbb
lret
jl
nop
fcomip
mov
out
repz
call
cmp
ljmp
loop
std
leave
loope
mov
aaa
int3
in
cmp
sti
cld
repz
or
sbb
rcr
and
mov
repz
mov
fucompp
hlt
lret
aam
xlat
icebp
sti
clc
shl
fcmovu
fdiv
mov
out
into
int3
xor
repz
out
out
out
cmp
repnz
fistpll
lret
adc
fmuls
std
int3
rcl
ss
out
lock
jmp
cmp
mov
fucom
mov
std
cld
out
xchg
out
xor
aam
hlt
in
sti
out
xlat
icebp
cmp
int3
icebp
jmp
out
decl
aad
int3
repnz
xlat
aaa
in
xor
cmc
test
iret
into
jecxz
aad
lret
iret
int3
mov
in
cli
jmp
ds
lret
in
sti
repnz
aad
lret
aaa
clc
add
ffreep
out
xchg
xchg
repz
out
out
test
cmp
jecxz
in
aas
flds
mov
ljmp
out
xor
int3
stc
ds
xlat
bnd
mov
loopne
testb
decb
jmp
repz
icebp
rcr
std
test
lret
in
mov
xchg
in
repz
jmp
out
sti
int
cmc
lret
jmp
idivb
aas
repnz
out
fcmove
rcll
call
hlt
out
call
mov
fdivrp
iret
jmp
repnz
into
ss
call
aad
cli
clc
test
nop
xchg
jecxz
in
aam
aad
rcl
aas
fcomip
std
sbb
jmp
jmp
int
xor
xor
cmp
fdiv
cmp
xor
fisttps
int
jmp
xchg
jecxz
mov
push
xor
test
iret
cld
ret
cmp
mov
sti
mov
ljmp
loopne
icebp
cmc
ljmp
iret
shl
ret
loope
enter
xchg
shlb
xor
ljmp
sti
cmp
ret
hlt
sar
in
lret
leave
out
shr
loope
out
repnz
test
cmp
out
cmc
in
leave
mov
fucomp
nop
ljmp
ret
fdivrl
clc
shr
and
sti
std
jecxz
out
mov
repz
out
xor
shll
fdivrs
sar
repz
jmp
shl
fdivrp
iret
aad
into
loop
aaa
ljmp
xlat
ljmp
hlt
fiadds
stc
in
xchg
xchg
mov
iret
clc
cmp
repz
sarl
fidivrs
repz
cld
repz
fadds
nop
int
jmp
lock
cmp
std
cmp
ret
jmp
lea
int
in
fsubp
sub
in
sarb
jecxz
aad
sarl
xchg
int3
int
call
shl
ljmp
fdivr
fcmovu
hlt
shl
fildl
int3
out
test
lock
int3
icebp
aaa
das
out
cmp
rcr
xchg
fcmovnu
sti
xchg
mov
out
loope
iret
lret
cmp
in
shr
cmp
shl
aam
xchg
std
mov
mov
jmp
repz
lret
aas
cmc
cmpb
ss
ret
shl
sbb
fld
repz
xchg
or
idiv
lret
stc
xor
cmp
or
out
sbb
loope
ror
incb
fninit
fsubr
xor
enter
aad
fildl
cld
sub
fmulp
cld
ljmp
hlt
loop
cs
repnz
out
adc
fprem1
out
and
std
test
in
test
cmc
xor
div
idivb
lock
aam
incb
enter
int
lea
xor
sarb
fimull
in
addl
mov
jmp
rol
into
ret
rcl
aad
pop
repz
jl
fsubrs
sbb
jl
add
leave
cmp
xchg
lock
sti
lret
in
mov
repz
ret
ror
aad
in
sarl
aad
lock
std
cld
jecxz
jmp
sti
mov
shr
repnz
int3
clc
int
xor
xor
iret
int3
stc
repz
not
stc
enter
sti
roll
ljmp
into
repnz
fcmove
lock
repz
jmp
fisttpll
out
xor
ret
clc
aad
int
jmp
cmp
loope
stc
hlt
std
in
addl
aam
xlat
cli
int3
jmp
fcmovnu
cli
aas
out
std
aad
fmul
neg
loopne
loope
jmp
shl
into
xor
repz
aad
cli
int3
sub
sti
lock
out
int3
out
mov
orb
xor
out
cld
ds
rcl
xor
rol
cmp
in
sar
lret
lret
enter
xor
aas
aas
in
in
testb
test
rorb
aam
std
rcl
repz
fidivs
fdivrs
loop
lret
xchg
call
lret
ret
loop
lock
fxch
push
cmp
icebp
rol
fdivrp
ret
call
decl
jmp
jecxz
xor
aad
in
fucomp
hlt
jecxz
ds
call
add
nop
ljmp
hlt
out
xor
ror
rcr
fsub
cld
fcmovu
fld
mov
enter
into
fiadds
in
clc
fucomp
int
ss
rcl
into
cmp
icebp
fxtract
cli
testb
mov
hlt
out
xor
out
cmp
out
call
test
loope
clc
loop
fcmove
mov
fisttpl
in
cmp
leave
clc
sar
in
fscale
iret
ret
ret
cmp
lds
in
into
xchg
aam
jecxz
in
lock
addb
shl
cld
fcmove
sti
in
out
icebp
lea
loope
call
fildl
iret
rcr
xchg
in
in
std
xchg
sti
roll
in
in
vpaddusb
cmp
fdivr
cld
fadd
fcmovb
out
loop
add
int
int3
fxch
cmp
cld
not
hlt
lret
adc
xlat
std
enter
out
fadds
int
into
repnz
ds
out
rcr
loopne
fucom
rcr
aam
fmul
or
xchg
ffreep
jecxz,pn
hlt
ljmp
ret
aas
inc
lock
cmp
ret
mov
test
xorb
xor
iret
std
icebp
fdivr
fdivrl
aad
int3
aad
xlat
rorl
fucom
int3
out
std
icebp
mov
repz
not
leave
clc
cld
add
sar
stc
add
std
addb
mov
cli
ljmp
ror
lock
in
lock
in
mov
out
in
xor
ror
cld
lock
aad
lret
sar
aam
loopne
int3
jmp
shr
aam
les
neg
ljmp
in
fcmovnu
sti
out
xchg
lret
into
jmp
loop
icebp
xor
fcmovne
repz
cmp
clc
fsub
ds
in
mov
mov
in
out
enter
test
out
in
jecxz
out
jmp
sar
mul
aaa
loopne
xlat
idiv
in
and
faddl
int
cs
in
in
xlat
aaa
shl
jecxz
shl
in
addl
iret
std
xchg
loop
rol
ss
lock
aaa
lock
shr
iret
faddl
aam
ljmp
xor
in
fstpt
icebp
fnstcw
cmp
loop
std
out
hlt
xchg
out
loop
out
in
imul
shr
iret
out
lock
in
aad
adc
int
fsubr
fimuls
sub
enter
div
fcmovb
in
shl
mov
test
sub
jecxz
out
test
xor
shrb
idiv
int3
xor
enter
cmp
repnz
fsubp
idiv
fimull
lea
mov
jmp
into
int3
ret
ds
jge
jae
mov
icebp
sbb
lret
jl
enter
mov
idiv
hlt
aaa
cmp
jecxz
cld
sti
add
aam
out
int
fimull
ss
lret
shl
int3
ds
fiaddl
leave
aas
xchg
stc
roll
ss
out
cmp
neg
cmc
aam
loope
addb
int3
aad
ret
cmc
int
hlt
shl
incb
faddp
ljmp
mov
loopne
leave
cld
fcmovnu
call
rolb
lret
loop
lret
xchg
enter
ljmp
call
loopne
repnz
sti
repnz
loop
in
test
loopne
xchg
loopne
fidivrs
xor
out
repz
enter
int3
cli
fnstcw
fdivr
xlat
out
in
fmulp
in
call
std
jmp
div
xlat
out
test
jmp
out
fsub
icebp
jmp
xor
aaa
ror
xorl
std
ds
loopne
in
jmp
cld
int
out
aas
sarb
shll
das
cld
lock
sti
rol
fucomi
cmp
loopne
out
sbb
ljmp
loopne
neg
test
ret
clc
in
mov
lock
loop
loop
neg
lret
stc
out
xor
repnz
into
ljmp
incl
loopne
fisttps
aad
fcomi
in
jmp
aam
loope
repnz
fiadds
repnz
lock
int
enter
divl
ds
xchg
hlt
cld
xlat
in
lea
into
loopne
jmp
out
out
hlt
repz
sti
shr
clc
ror
rol
orb
and
xor
call
fdiv
div
fdivp
idiv
std
xchg
cmc
cmp
int
lret
out
in
repnz
stc
into
in
fnstenv
repz
cmc
idiv
test
ffree
fadds
lret
mov
lret
lret
fucomp
out
lret
ret
cmp
shl
mov
leave
out
orb
shl
in
in
rcr
clc
xchg
sbb
loopne
mov
fdivr
in
sti
xchg
cmp
cmp
in
cmp
cmp
icebp
aas
clc
repz
xlat
cmc
cmc
fdivrp
jmp
out
xchg
divb
cmc
fucomp
sti
xor
cmc
lock
out
xlat
into
lock
in
jecxz
int
icebp
xchg
icebp
loop
ret
rcl
in
cmp
cmpl
fiaddl
sub
jmp
aad
shl
out
jmp
int
cld
iret
loopne
aas
sti
leave
jmp
in
fdiv
ror
jmp
jecxz
lret
call
lock
cld
div
ds
lock
ds
lret
cli
jmp
mov
out
sub
ljmp
rcr
sar
repnz
fdiv
loop
enter
loop,pt
repz
cli
xchg
ret
leave
cmc
fistpll
xor
repz
loop
in
lea
aam
xor
int
std
loop
fsubp
iret
mov
ret
jmp
fadd
cld
loop
nop
repz
f2xm1
iret
out
lret
sar
idiv
imul
aas
repnz
incl
out
enter
out
out
loopne
out
fnstcw
in
shl
hlt
cmp
call
mov
shl
mov
out
test
out
lock
cmc
movb
test
int3
xchg
call
shl
xlat
hlt
cmp
cmp
test
in
jmp
xchg
in
jecxz
aaa
sarl
ret
xor
enter
ds
rcl
jmp
lea
jmp
xor
cs
aam
rolb
loop
fld
leave
loopne
jmp
test
test
repz
iret
jecxz
out
sti
rcl
in
in
xor
rol
fnstsw
stc
iret
mov
jecxz
iret
incl
jmp
mov
jmp
lret
ds
fcmove
fisubrl
cmp
add
jg
lret
jl
ljmp
rcr
iret
rcr
test
loop
sti
cli
into
in
jmp
cs
lock
cld
fsubr
in
jecxz
xor
cmp
in
incl
loop
hlt
ss
call
clc
shl
test
clc
hlt
repnz
out
jmp
jecxz
sub
rcl
cmp
cmp
aam
aam
stc
test
lret
test
iret
jmp
out
std
int
sub
lret
cmp
aad
repz
cmp
fsqrt
jmp
cmp
dec
fchs
iret
cli
int
out
xor
into
into
int
not
cmc
adc
xchg
mov
stc
fsubr
mov
fimull
shlb
std
fsubrl
enter
jmp
shl
shl
out
loope
sub
inc
rol
fdiv
divb
lock
test
fld
push
filds
cld
shl
fsubp
not
aaa
out
call
lock
loopne
test
filds
out
leave
xchg
add
rol
fdivrs
idiv
aad
hlt
jecxz,pt
cmc
ds
hlt
fdivr
call
shl
aaa
in
int
out
aaa
idivb
in
idivb
ret
test
call
loop
std
in
fildl
out
cs
out
sti
ss
cmp
ret
int
shr
lock
xchg
xor
fld
fcom
aam
jmp
fiaddl
sbb
test
in
repnz
jmp
xor
xor
lret
adc
fdivrp
in
mov
cmc
in
ljmp
into
bnd
repz
sar
aad
cmp
aad
and
repz
lret
neg
xchg
mov
in
iret
lret
out
enter
and
neg
loope
loop
in
iret
lock
xchg
int3
fmulp
lret
lock
aaa
cmc
call
enter
icebp
cmp
call
sbb
out
fcmovne
test
repnz
aam
out
neg
std
hlt
sbb
rorl
cli
jmp
cmp
jmp
sub
push
aas
fcomi
ret
push
aad
jmp
out
jmp
out
cmp
ret
out
xor
aaa
repz
cli
cli
aad
in
mov
shl
repz
hlt
int
les
div
out
cmp
cmp
stc
incl
decb
loope
ljmp
repz
loop
std
xor
icebp
repnz
clc
aas
idivb
fdivp
cli
mov
movb
out
rol
xor
in
int
int3
div
cmp
shl
cmp
ret
aas
xor
ljmp
enter
lret
enter
std
ss
test
test
rol
fld
icebp
enter
xor
out
iret
ljmp
xlat
aad
in
in
repnz
div
sbb
out
lock
fsubr
shl
xor
idivl
flds
filds
lret
and
mov
ror
stc
les
int3
neg
cmp
idivb
hlt
stc
neg
imul
call
xchg
int3
fcmovne
fadd
jmp
cmp
cmp
fprem
fcmovnbe
ret
jmp
sti
out
mov
xor
out
shl
lock
out
cmp
aas
cmp
ffreep
sbb
leave
out
out
loop
enter
loop
std
cmc
ljmp
int3
fiaddl
cld
lret
lret
in
addb
shl
aad
lret
aam
in
aad
xlat
sarb
in
faddl
lret
ss
icebp
not
xor
clc
test
rcl
repz
cmp
popl
cs
xor
ror
adc
fcomi
loopne
call
test
in
in
lret
and
out
jmp
clc
icebp
xor
out
fcmovb
repz
out
add
cld
mov
call
hlt
jmp
clc
cmp
int
cli
fxch
fucom
jecxz
out
shlb
shr
add
add
ds
rcr
fsubr
push
mov
add
into
sub
lret
jl
aam
in
ret
addl
in
cmp
xor
enter
rcl
fiadds
dec
icebp
mov
fdivp
int
xor
icebp
repz
fdiv
sti
neg
xlat
mov
xlat
int
jmp
repz
cmc
sub
lds
fincstp
fildl
xchg
in
movl
shr
out
leave
xor
sbb
xchg
mov
cld
loope
cmc
enter
xlat
stc
int
loop
out
add
and
in
ljmp
aam
div
fcmovbe
sti
repnz
sti
sar
into
out
xchg
into
loopne
sti
cli
test
xor
xor
out
out
roll
out
test
mov
sti
out
in
lock
ror
xorl
div
jmp
out
test
clc
addb
fxam
fstp
xchg
xlat
sarl
ss
in
fdivrs
lock
jecxz
sti
jecxz
rcr
hlt
faddp
stc
mov
test
ljmp
lret
in
fstp
cmp
sti
ret
flds
cmp
repz
cs
in
cmp
in
icebp
repnz
jecxz
fadd
xchg
lret
xchg
loope
out
ljmp
fnstcw
aam
loopne
sub
in
enter
test
lock
in
icebp
lret
int3
clc
loopne
out
out
addb
int3
enter
cld
iret
xchg
loop
cmc
cs
ffree
ss
fcom
cmp
fst
std
lret
fcomp
int3
sar
decb
int3
icebp
ss
repz
loopne
cmc
ffree
xlat
cmp
fdivr
orb
loopne
jmp
ljmp
std
call
aas
repz
cmp
aam
ret
mov
mov
cld
xorl
enter
cld
stc
jmp
stc
adc
jecxz
fsub
xchg
enter
mov
and
xchg
int
aad
lock
fidivrl
idiv
sarb
sarl
jmp
leave
loope
fmull
int3
shll
ljmp
cmp
adc
fcmovbe
fildl
mov
out
or
in
xchg
xor
cs
enter
xor
call
cli
inc
lock
cmc
in
jecxz
stc
out
rorl
xor
call
ror
sar
repz
out
icebp
filds
iret
out
out
out
loopne
loope
xor
rcl
into
aaa
out
hlt
jmp
xlat
ret
jecxz
repz
mov
xlat
fimull
iret
xor
fcom
aam
fistpll
cmp
hlt
cld
in
sti
out
jmp
fucomip
in
in
xor
icebp
repnz
ss
out
cli
fcmovb
in
stc
mov
repz
xchg
out
out
cmp
fsubrs
repz
shl
out
loop
hlt
cmp
shr
aad
repnz
lret
loopne
jmp
leave
ljmp
shl
int
ret
cmp
ffree
cmp
xchg
xchg
into
in
mov
icebp
div
neg
xor
aad
in
clc
loopne
clc
rolb
call
jecxz
xchg
fmul
ds
aam
xor
rolb
add
neg
clc
ret
les
ljmp
stc
frndint
repnz
repnz
xchg
aam
idiv
popl
jecxz
mov
stc
hlt
xor
ljmp
cmc
cli
test
rcl
jecxz
sbb
loop
int3
nop
loop
iret
int3
ljmp
sub
cmp
loop
std
fcmove
jmp
fisttps
aas
cmc
xor
iret
ror
hlt
out
clc
xlat
xchg
test
in
mov
ss
cmp
sti
fadds
faddl
imul
test
leave
std
shl
xchg
loope
sub
fxch
fcmovne
out
cmp
iret
fidivrl
aaa
cmc
xlat
fsin
lock
loope
xchg
addb
dec
adc
data16
add
int3
fcmovnbe
int
loope
insl
lahf
mov
das
jg
lret
jl
repnz
vshufps
sar
aas
aad
cmp
loope
sar
loop
in
in
std
test
adc
ljmp
fidivrl
clc
lret
cmp
loope
cmp
jmp
ret
ljmp
jmp
xor
cmpl
repz
in
hlt
mov
int3
ret
ficoms
jecxz
rcl
xlat
jmp
aad
cli
loope
cli
test
mov
faddl
mov
xor
rcr
lret
fucomi
cld
shlb
testb
std
test
lock
out
rcr
xchg
ret
out
xor
rol
xor
icebp
xor
ret
mov
out
xchg
ret
lret
test
int
in
fstpt
fstpt
shl
fadd
icebp
cmc
stc
sbb
enter
out
orl
out
lret
rolb
loopne
jecxz
out
lret
cld
test
out
in
ret
enter
enter
repnz
xchg
hlt
cmp
cld
or
lret
xor
cmp
std
int3
repnz
clc
loop
out
loope
cli
incb
xchg
aas
jmp
lret
xor
ljmp
int3
rcl
out
aas
loope
jmp
loop
loopne
mov
out
out
cmc
enter
or
aam
std
ret
lds
ror
mov
out
aaa
cld
ror
int
out
shl
rcr
out
into
test
iret
out
jmp
ror
aaa
cmc
call
ret
xchg
loop
out
mov
loop
xchg
lret
xor
into
shr
in
aad
cmp
ljmp
shl
clc
or
call
xchg
xor
into
fdivs
jmp
cmp
shl
fst
testb
fucomip
mov
loopne
fiaddl
xor
idiv
fnstsw
push
ljmp
fimull
mov
call
ror
repnz
into
rcl
incl
xchg
fcmove
jmp
loopne
out
leave
cs
lock
std
in
cld
lret
std
fildl
ffree
sub
xchg
loopne
repz
repz
lret
clc
in
loop
in
lock
repnz
in
sti
fsubr
loop
xchg
fsubrp
sub
xlat
out
cmp
loope
into
cmp
cmc
repnz
loop
out
loope
fsubrp
out
repnz
vpsubusb
cmc
xor
cmp
leave
fcmovnu
cmp
ds
rcr
jmp
cli
out
xchg
icebp
mov
aam
sti
repnz
ss
cmc
cmp
rcr
mov
addb
xchg
ljmp
frndint
aam
int
out
fcmovnu
jecxz
std
fdivr
lret
orb
sub
xor
repnz
icebp
fcmovu
rol
aam
cld
ret
cli
mov
int3
ss
stc
cmp
lret
cld
fmulp
in
loop
fadd
loope
xlat
xchg
and
clc
fadds
in
ljmp
leave
leave
ss
rol
in
call
sub
mov
loopne
xlat
shl
fpatan
xor
cmp
repnz
out
cmc
fcomip
incl
jmp
ljmp
divl
std
cld
in
xlat
clc
in
sarl
xchg
out
mov
test
fst
rcl
idivl
int
cli
repz
fcomi
fucomi
in
xchg
cld
xchg
in
das
lret
jmp
xlat
jmp
dec
std
cmp
adc
sti
cld
xchg
cli
loope
adc
jmp
shr
repnz
cmp
cmp
cmp
loopne
cld
loopne
enter
flds
jecxz,pn
in
hlt
in
ror
int
lock
sti
adc
test
loope
repnz
in
rcr
div
leave
lret
xabort
cmc
jmp
ret
iret
shl
mov
xchg
in
popl
cmc
shl
aad
out
fsubr
add
add
jmp
iret
iret
sarb
aad
aad
pop
sbb
repz
push
jg
lret
jl
neg
mov
xor
jmp
xchg
out
std
xchg
shl
into
cmc
cmc
das
shl
lret
sbb
fcomp
ljmp
out
std
iret
rcl
ljmp
repnz
fdivrp
cmp
xchg
lock
call
or
out
les
int3
out
in
into
loope
in
fdivp
into
lds
test
jecxz
test
xchg
int
xor
cli
cmp
in
in
lret
rcl
out
stc
in
sti
sbb
clc
shl
lret
jecxz
hlt
xor
sub
idiv
lret
aad
shl
rol
hlt
aas
loopne
loopne
out
jecxz
enter
xor
in
jecxz
cmp
fdivrl
fndisi(8087
aad
loope
test
lock
xor
cmp
call
ss
loopne
cmp
ret
xlat
repnz
in
test
out
out
mov
out
out
div
sarb
fnstenv
clc
fldln2
repnz
stc
aas
vpextrw
addb
fdivp
xor
lret
cli
std
cmp
jmp
cmc
out
ret
std
into
test
mov
clc
test
fcmove
mov
lret
fmul
loop
cld
cmp
shl
fucomi
xchg
clc
stc
mov
hlt
lret
mov
in
ljmp
cmp
int3
into
int
lock
not
ljmp
in
loope
xchg
mov
aaa
imul
xor
cld
ds
neg
xor
test
out
ret
leave
call
dec
cld
ror
shrb
xor
fdivrs
test
filds
rol
imul
call
xor
cmp
icebp
cmp
out
cmc
jmp
fildl
fmul
mov
xor
xor
fidivs
aad
shl
in
vpsrad
ret
mov
sti
cli
rolb
shl
call
cmp
loope
in
out
rcr
test
mov
call
xlat
cmp
jmp
cmp
cmp
neg
cmp
rcl
lds
enter
sub
in
sub
ret
loop
repz
repnz
loope
sarl
in
clc
fmull
xlat
xchg
jecxz
sbb
xchg
int
lret
jmp
faddp
repnz
cmp
loop
mov
in
lock
cmp
fcmovb
lock
shr
test
in
vshufps
out
cmp
rcll
lock
jmp
divb
cmp
in
aam
loope
sti
loope
ljmp
bnd
clc
cmp
rol
hlt
loope
rol
xchg
mov
in
int3
jecxz
ljmp
vpsrlq
cmp
cmc
aaa
shl
xchg
enter
fsubr
xabort
mov
ficoms
out
iret
clc
aad
xor
fst
lock
cmp
aam
in
test
iret
xchg
shr
rol
cmp
xor
out
int3
sar
fadd
cld
jmp
cmp
in
ljmp
xchg
shrl
lret
ljmp
cmc
ds
hlt
enter
mov
out
sti
jecxz
ss
leave
xor
fucomip
loopne
cli
cmp
loope
sti
sti
out
loopne
nop
xor
int
ret
not
in
in
aam
fadds
jmp
aas
fcmovu
in
xchg
in
int
out
lret
cmp
aaa
fcmovbe
lret
rcl
sbb
out
mov
aas
fiadds
out
std
into
xor
cli
fcomi
cld
call
xlat
xlat
cmp
fisttps
in
mov
sti
ret
out
stc
stc
div
xlat
std
ds
cmc
test
mov
mov
xor
xor
xor
out
aam
cmp
fdivrl
cmp
in
imul
faddp
fadd
cli
in
icebp
jmp
loopne
enter
cmp
icebp
std
sti
shr
cmp
aas
fiaddl
mov
iret
cmc
ret
out
out
aaa
jmp
aam
clc
out
aad
fmuls
notb
pop
leave
ret
push
mov
jmp
rol
rol
fstp
dec
lahf
push
dec
or
jg
add
xchg
out
lock
repz
into
into
cmc
in
cld
ret
out
flds
jmp
call
loope
ror
add
ffreep
std
xor
std
std
cld
out
loopne
out
repnz
enter
shl
into
cmp
fdivp
ret
repz
cmc
leave
orb
lea
repz
bnd
xlat
icebp
rcr
and
cmp
in
repz
into
in
out
repz
ds
mov
div
xchg
icebp
dec
mov
xlat
aam
in
cmp
in
ds
fdiv
stc
xchg
lock
mov
into
out
loop
fisubrs
lock
xor
clc
out
or
cmp
mov
lret
mov
out
xchg
aam
in
lret
repnz
std
ljmp
or
add
dec
mov
test
std
cld
into
lret
shlb
ss
rcr
cli
lock
out
sbb
cmc
rcr
in
loopne
ljmp
xor
call
leave
enter
fiadds
in
cli
mov
xchg
fcmovnu
ljmp
enter
idivb
lret
fsubr
hlt
xchg
leave
cmc
aad
sbb
cli
out
test
mov
ror
into
ret
in
imulb
fmul
fidivrl
fidivrs
cld
loopne
out
sti
loop
and
loope
in
out
hlt
stc
cmc
lret
fucomi
roll
cmc
rolb
stc
mov
fstp
loopne
sub
xor
fnstenv
aas
cmpl
loop
fdivrp
neg
ffreep
fcom
xchg
xchg
ror
xor
repz
aaa
enter
cmp
cmp
inc
cmp
leave
frstpm(287
int
rorl
lock
ret
fcmovb
cmp
lret
cld
shl
int3
out
loop
stc
fldln2
add
orl
icebp
xlat
hlt
xor
ror
lret
int
cmp
add
in
fisttpll
addb
std
shr
rcr
cmp
sti
in
std
xor
sti
and
out
addl
repnz
cmp
rol
aad
fndisi(8087
in
fisttpll
xchg
loopne
rcl
in
icebp
int3
imul
or
bnd
addl
xchg
or
out
in
das
cli
call
sti
cmp
aam
adc
jecxz
enter
in
mov
hlt
cmc
leave
shl
hlt
hlt
shll
clc
fcomip
aad
hlt
shl
cli
jecxz
loop
idiv
addl
hlt
xlat
ret
lds
adc
rcr
rol
sti
repnz
mov
cli
mov
fldl
in
cmp
in
cmp
test
fnstsw
xor
mov
mov
lret
loope
lock
aaa
enter
out
imul
cld
cld
jmp
aad
icebp
rorb
int
sti
int
loop
ljmp
xor
in
in
in
fcmovnb
aad
leave
fildl
and
mov
in
xor
leave
repz
idivb
aad
in
test
ljmp
rcl
test
mov
sub
aad
clc
into
ljmp
hlt
cld
loope
cmc
aad
stc
mov
mov
into
cmc
xor
enter
jmp
in
fptan
stc
fcos
jmp
mov
lret
xchg
shl
shll
cmp
into
cmp
fnop
loopne
hlt
repz
int3
jmp
lret
xor
icebp
aad
cmp
stc
fdivp
fsub
fistpll
roll
fmuls
in
ror
in
xor
aaa
shr
sbb
int3
xchg
fcos
faddp
neg
jmp
shl
les
repz
xor
jmp
cld
loope
test
stc
or
xchg
int3
ss
rcl
out
aam
testl
and
sbb
ror
xchg
jmp
rol
imul
ljmp
lock
loope
loop
fdiv
ret
test
out
rclb
call
rcr
stc
sub
addb
leave
iret
in
xchg
xor
aam
out
lret
out
iret
shl
jecxz
lret
ljmp
lret
xor
xor
ds
clc
fcmovu
cmp
cmc
ds
xor
xor
cmc
xor
ss
int3
hlt
shr
ret
repnz
in
xchg
sbb
lret
ror
push
xor
push
movl
jmp
into
rol
aad
rcl
jmp
pusha
push
andb
jg
add
xor
iret
lock
cmp
shl
out
lock
mov
stc
loopne
int3
mov
fcmovne
loopne
jecxz
aam
not
lds
iret
xlat
cmc
aas
loopne
f2xm1
std
aad
jecxz
call
int3
out
or
out
lock
xor
jmp
int3
fdiv
repz
ret
neg
fadds
lds
out
icebp
cli
fdiv
fbstp
cli
cmpl
sti
addb
stc
fdivr
fscale
cld
jecxz
mov
aad
rcl
cmp
in
hlt
aad
hlt
call
cmp
jecxz
test
call
lock
xchg
aad
loope
cmp
jmp
lock
int
adc
fcomi
aas
xchg
mov
loop
std
icebp
out
aam
icebp
cmp
cmp
aad
in
repnz
cld
loop
enter
divl
cmp
in
out
ss
in
in
fdivrl
loope
mov
mov
jmp
int
xor
xor
in
std
int
int3
fsub
repnz
ret
jmp
lret
flds
mov
lock
enter
fnstcw
adc
in
rorl
loope
mov
xchg
mov
leave
fcom
std
cld
repnz
out
lock
loop
and
incb
clc
xchg
fucomip
xchg
in
jmp
stc
hlt
imul
aam
in
fidivrl
cli
cmp
shl
jmp
xchg
adc
int3
fmulp
xor
aam
in
aad
std
fcomp
cmp
iret
roll
cmc
in
lret
fisttps
mov
rol
enter
out
div
loopne
incl
cld
or
clc
jmp
clc
std
xchg
ror
into
jmp
fcmove
imul
fnstsw
shl
out
cmp
ret
mov
sub
out
cmp
xlat
int
cli
add
loopne
loope
jmp
sar
xchg
lret
sti
ljmp
fxtract
repz
lock
xchg
call
icebp
mov
out
sar
std
lret
ljmp
sti
jmp
orl
mov
shl
out
ljmp
fdivp
adc
repz
test
aam
cmp
mov
vcvtpd2dq
loop
sar
imul
jecxz
in
cmp
rolb
mov
loope
mov
int
jmp
int3
stc
lock
cmc
out
cmp
rcl
ds
ret
clc
lret
lret
jecxz
dec
clc
xchg
loop
jecxz
idivb
cli
xor
cmp
loop
rol
cmp
hlt
cmp
loop
fucomi
fucomi
in
test
xor
ss
in
xor
test
loopne
fchs
lds
test
into
jecxz
hlt
adc
loope
call
cli
ror
loop
cmp
hlt
rcr
ret
test
icebp
fsub
mov
ss
sti
test
shl
in
testb
icebp
call
or
out
xor
in
xor
lock
loop
in
vshufps
loop
clc
mov
rcr
fcomip
int3
out
cmp
sti
loope
ret
rcr
fildl
lret
leave
in
loope
rorl
xor
enter
xor
fneni(8087
bnd
fnstcw
leave
mov
test
hlt
int
aad
aad
int3
repz
fcmovbe
lock
loopne
out
test
jmp
int
lret
in
cmc
hlt
cmp
fsub
div
iret
rorb
ffreep
in
addl
iret
iret
lret
sti
lret
int3
out
hlt
fadd
cmp
rcl
hlt
xlat
lret
sbb
ficoms
aam
shl
in
cmp
stc
f2xm1
rcl
aas
cmc
std
out
leave
mov
ljmp
shll
loop
xor
int3
enter
stc
xor
out
test
lret
ret
cli
out
adc
xor
int
lock
into
shl
xlat
hlt
iret
cmpl
clc
inc
aam
fcmovnbe
loope
test
xchg
cs
int3
test
jmp
clc
lret
cmp
int
fucomip
jecxz
call
ljmp
dec
ljmp
aaa
icebp
ljmp
stc
inc
test
fiadds
lea
clc
test
int3
out
int3
sti
into
neg
ror
out
ret
xchg
sub
test
fadds
out
jmp
ret
fadd
fcmovu
repnz
rolb
leave
testb
out
fmulp
xor
icebp
cmp
icebp
lret
jecxz
int3
sti
cmp
vpsubsb
nop
jmp
icebp
cld
aad
aad
aaa
cli
in
ss
movl
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
sbb
jmp
rol
enter
aad
add
xchg
push
dec
std
adc
sarb
add
sar
into
aaa
cmp
rcl
test
decl
loopne
mov
ror
out
xor
cmc
aaa
call
clc
icebp
in
cmc
aam
in
xabort
in
fisttpl
in
lock
fcom
icebp
into
lock
std
repz
rol
xchg
fdivrs
test
int3
out
enter
ror
xor
ret
ror
fcomi
rcr
loopne
sarb
clc
xchg
out
out
mov
sub
in
fnop
cmp
enter
enter
lds
hlt
fucomip
test
in
jmp
fnstenv
lret
jmp
iret
ffreep
xchg
jmp
fiadds
out
enter
xlat
lock
ss
cli
hlt
testl
aad
sub
out
fadd
into
shl
div
aad
int
cmp
test
clc
imul
nop
fcom
nop
popl
out
enter
fdivrl
fcomi
in
aas
ret
loope
xchg
leave
xor
nop
xchg
mov
shlb
test
cmp
aas
cmp
loope
into
orb
loope
xchg
lret
imulb
cmc
int3
fst
shl
lret
iret
out
mov
xchg
mov
fcomip
les
jmp
shr
ror
into
std
cld
fcomi
std
fstp
aas
leave
mov
ljmp
xchg
shrb
rol
xor
cmp
jmp
cmp
rolb
std
fdiv
call
jecxz
out
aam
ror
shl
leave
cmp
lock
lret
and
clc
jmp
ffreep
cld
icebp
repz
aas
jmp
out
out
out
cld
into
clc
mul
shl
xlat
ret
ret
xchg
into
sti
in
in
cmc
xchg
int3
out
ret
repz
fdiv
in
icebp
rcl
ffreep
adc
fstp
xchg
rcr
lock
aad
iret
cmp
xlat
fcmovnu
clc
in
repz
jmp
loope
test
out
loope
xor
repnz
lret
lret
sarl
in
out
out
cmp
repz
iret
jmp
fsubrp
xor
clc
fdivrp
aas
aam
out
out
sar
mov
repz
cli
out
cld
orl
in
hlt
iret
int3
jmp
addl
cmp
ljmp
das
aad
in
jmp
aad
fyl2xp1
cmc
aas
fcom
cld
filds
fdivrp
call
jmp
out
out
std
cmp
ljmp
repz
cli
call
call
xchg
aad
call
cmp
loop
iret
xchg
neg
mov
sar
clc
jmp
xchg
mov
out
loope
cmc
jmp
lock
hlt
add
fnclex
in
mov
mov
repnz
in
xor
in
out
repz
jmp
cmc
hlt
sti
jecxz
mul
out
add
ret
clc
lock
lret
clc
xlat
fcmovbe
faddl
leave
out
call
leave
sti
fimull
das
in
fdiv
lret
into
ss
cli
rcr
cmp
fdivr
aas
out
in
in
fiadds
shr
aaa
iret
iret
sti
ss
in
test
lock
sti
testl
out
rol
aaa
out
rcl
loop
jmp
iret
clc
aaa
loop
test
int3
lret
out
in
enter
enter
jecxz
xor
xor
in
test
xchg
xchg
sub
loopne
xchg
int
repz
xor
xlat
cmc
hlt
fpatan
repnz
lock
cld
mov
ljmp
xor
div
xlat
xlat
ror
fadd
hlt
jecxz
out
aad
mov
loop
iret
repnz
adc
out
xor
shl
int3
cmp
jmp
cmp
iret
hlt
hlt
icebp
jmp
decl
jmp
sti
rol
fxch
out
cld
leave
lret
xlat
not
test
fcmovnu
in
fsubrp
imul
xchg
out
enter
out
jmp
shr
mul
clc
cmc
rol
cmp
in
into
in
mov
call
int
test
icebp
in
icebp
adc
cld
mov
test
sub
ljmp
leave
repz
sti
enter
cmp
faddp
xchg
or
cli
loop
out
std
xchg
aad
iret
int3
in
ljmp
std
std
sar
sarb
xlat
hlt
sub
leave
out
lock
nop
iret
xchg
out
rcl
xor
jmp
into
out
add
jecxz
out
test
sub
ljmp
out
int3
sarl
shl
mov
movzbl
and
mov
mov
adc
xor
or
jmp
int3
ror
fnop
xchg
sti
add
les
add
call
mov
call
jmp
fldl2e
jmp
cmc
xlat
lret
fucomp
icebp
loopne
in
mov
movb
jecxz
call
imul
cmp
rol
vpmovmskb
aad
fcmovu
hlt
cld
mov
icebp
fimull
jmp
out
cmp
out
ror
std
lock
movb
ljmp
shl
aad
leave
ss
rcr
roll
loop
clc
fdivr
mov
fdivr
fcmovnu
fcomip
xchg
sub
icebp
cmc
out
out
cmp
ror
leave
cmp
cmp
fadd
xchg
sarb
enter
out
in
aam
in
cmp
sti
lret
in
aam
sub
cli
enter
leave
mov
xchg
rcl
hlt
lock
cmp
out
adc
icebp
jecxz
out
fld1
in
fst
cmp
jecxz
nop
xchg
xchg
xor
in
leave
lds
cmp
hlt
lret
enter
incb
mov
fcmovbe
jmp
shr
cli
out
cli
aaa
loop
cmp
in
roll
orb
fildll
loopne
loop
icebp
shr
sar
cmp
sti
lret
sti
jecxz
mov
hlt
idiv
aam
aaa
enter
out
mul
lock
add
incb
clc
mov
in
lock
out
int3
fdivrl
loopne
in
cmc
cld
fld
sti
lret
test
mov
loopne
rcl
clc
cmp
repz
fyl2x
cld
lret
loopne
div
mov
jecxz
fsubrp
in
mov
lret
aad
cmp
cmc
jmp
jecxz
shl
mov
call
in
mov
and
lret
xor
xor
cmp
sar
hlt
aad
cmc
movb
lret
jmp
loope
jecxz
xor
xor
cmpl
loope
rolb
xchg
loopne
fxch
icebp
cmp
out
sar
repnz
idivb
out
clc
fcmovnu
in
std
cld
fsubr
xchg
rcl
ljmp
hlt
cmp
jmp
ss
out
in
lock
and
xchg
xchg
ljmp
lock
std
not
ljmp
ret
ret
std
in
sub
fmul
in
ret
ret
jecxz
out
stc
ljmp
fiadds
xchg
fnclex
out
fnstsw
in
aam
lret
lret
not
jmp
cmp
lds
cld
mov
xchg
xor
xor
ljmp
fcomi
test
stc
rcl
loope
in
in
test
out
rcl
hlt
aam
clc
cmp
in
jecxz
cmc
mov
int
nop
cli
mov
out
lock
ljmp
aas
lret
fcmovu
ret
jmp
stc
sbb
mov
in
lret
cmp
lret
fsubr
rcl
ds
cmp
lret
cmp
lret
out
cs
loop
lret
shr
cld
cmp
sti
loop
idiv
lret
loope
fmuls
iret
loope
lret
xlat
xor
lret
sarl
jecxz
test
cld
and
aas
int
xchg
int
cli
xchg
sub
in
ljmp
cld
rcr
fsqrt
loope
in
cli
jmp
orb
loop
lret
cli
aad
cmp
cmp
test
loopne
mov
jecxz
xchg
mov
cs
xor
cmc
neg
fdiv
ljmp
stc
std
loopne
xchg
mov
in
ret
xor
fcmovu
loope
clc
int
aaa
aam
clc
in
fxch
in
in
repnz
sbb
repz
ljmp
fneni(8087
roll
jmp
rclb
call
incl
out
in
test
addl
iret
xor
loope
sub
jmp
rcl
loopne
repnz
std
fiaddl
shr
int3
test
out
shr
repnz
aas
in
xlat
jmp
hlt
into
mov
xrelease
xchg
xchg
mov
sub
jmp
repz
incl
in
out
sub
out
call
xlat
ret
int
cld
fcmovnu
add
repz
mov
leave
lret
cld
ret
call
imul
leave
hlt
xor
fsubrp
ror
cmc
shl
roll
mov
das
rol
shl
xor
fsubr
fucomp
aas
cmc
aam
loope
icebp
neg
vpminsw
bnd
xlat
ror
fcmovu
fcmovne
sbb
push
fcoml
jl
add
fsub
std
sti
and
in
xor
int3
hlt
aad
in
cmc
mul
sti
in
xchg
fiaddl
roll
in
lock
aam
loope
into
ljmp
fsubp
loopne
hlt
int
xchg
in
rol
hlt
xor
std
int
xor
int3
repnz
jecxz
fprem1
test
in
fdivr
icebp
lret
jecxz
enter
lock
idivl
cmp
loop
sar
loopne
in
ret
in
aam
in
icebp
xor
out
shl
cmp
stc
cld
cld
stc
fcmovb
in
xchg
nop
in
mov
enter
leave
in
fnsave
cli
cmpl
jmp
cmc
ljmp
mov
xlat
lret
xor
aaa
out
add
out
xlat
fcmovnu
fmulp
vcvtpd2dq
nop
fdivrp
lret
iret
xlat
into
cmp
cmp
leave
call
into
fsub
std
rorb
ljmp
in
out
sub
xlat
das
cmp
xlat
jmp
repnz
cmp
aas
addb
std
mov
loope
xchg
sti
sti
out
shl
iret
shr
into
xlat
loopne
cmp
stc
repnz
ret
mov
in
lock
rcl
out
jmp
cmp
xor
test
fdiv
in
addb
lock
ficoms
fxam
repnz
cmp
sti
in
loope
repz
loope
test
test
incl
xor
int
lds
enter
cmp
sbb
and
test
mov
cmc
cli
in
cld
test
repz
lret
fcom
out
cs
clc
cmp
incl
jecxz
mov
nop
ret
xchg
cs
cmp
ror
idiv
cmp
cmp
into
out
cld
xchg
loopne
cli
repnz
out
hlt
in
cs
cmp
out
repnz
loop
out
in
iret
fcoml
mov
out
into
aam
int
repz
aam
std
rcr
repnz
repnz
int
dec
loop
loopne
cmp
vpsrld
fpatan
cld
int
std
idiv
aam
fildl
or
int3
mov
hlt
out
repz
cmc
std
cmc
lret
inc
ret
fucom
cli
lret
fcmove
fmul
lret
lret
loope
ret
out
sti
ljmp
loopne
ret
loopne
cli
test
xor
mov
lret
xor
into
iret
xor
lret
in
fxch
cmp
shl
sar
repnz
xchg
fisttpll
loope
into
repz
in
repnz
cli
loop
aas
aas
ds
push
aad
xchg
mov
std
fimull
jecxz
not
clc
aad
ss
iret
clc
int
xlat
aad
rorb
call
call
jecxz
clc
out
ror
fdivr
out
int3
rcr
test
cli
out
in
fsubr
mov
loop
shl
xor
jmp
out
fadds
in
test
jmp
int
mov
icebp
ljmp
sbb
cmp
std
fmuls
sbb
ds
in
ljmp
cli
xor
out
mov
mov
mov
mov
cld
mov
loop
lret
out
xor
shr
not
ds
xlat
clc
sar
std
fmul
mov
int3
filds
out
loop
rol
cmp
aad
out
fcmovne
sar
shl
add
sti
cli
out
fmulp
into
xchg
ret
aad
jmp
rcl
shll
call
test
rcr
xchg
in
stc
cli
loope
in
lea
loop
cmp
jmp
cli
cmp
repnz
xchg
out
sar
call
out
loopne
repnz
fidivrs
xor
int3
stc
repnz
cld
xor
sti
mov
fimull
shl
ret
lock
shl
fmulp
into
fprem1
fadd
aam
xlat
mov
in
aam
leave
fimull
lret
loope
ret
out
div
cmp
in
rcl
test
cmc
xlat
jecxz
jmp
icebp
fsubrp
lret
lret
out
xor
loopne
stc
lret
out
in
xchg
in
sub
or
xchg
filds
hlt
hlt
icebp
ror
cld
fyl2xp1
sti
aad
xlat
mov
mov
test
into
int3
jmp
into
cmp
filds
hlt
iret
and
fxch
mov
test
lret
sub
ss
cmp
out
rcr
out
call
fsubr
cmp
adc
filds
ror
shrb
cs
xor
in
cmp
out
loop
les
int3
fmull
xchg
jb
add
incl
add
ds
fstp
fnstsw
aaa
dec
jmp
mov
add
das
xor
das
inc
std
shl
in
xorb
sub
mov
addb
int3
xchg
mov
xor
ss
in
dec
stc
fcmovu
loop
cli
fisttpl
enter
cld
iret
xchg
in
mov
icebp
xor
cs
repz
sti
rcr
ror
iret
aas
shl
cmc
mov
stc
fadds
mov
icebp
cmc
call
clc
rcl
flds
std
clc
mov
jmp
out
mov
call
sarb
cmp
into
dec
cmp
roll
out
ljmp
xchg
lret
aad
rcr
int
fdivr
sti
cmp
and
cmp
mov
test
repz
xchg
jmp
shl
xlat
cs
ljmp
aam
test
flds
enter
aad
repnz
xor
into
stc
fcom
sar
aad
ret
clc
cld
call
stc
and
call
jmp
sar
std
repnz
lret
aas
aam
and
std
out
xchg
fucomip
in
std
mov
ror
enter
fsubr
loope
into
filds
xlat
sub
enter
fdivr
jmp
test
bnd
cmp
lret
ffreep
icebp
ret
in
out
ds
clc
loop
orb
sub
int3
in
ljmp
cld
hlt
out
mov
sub
shl
iret
fsubp
lret
xor
xor
out
idivb
lock
aaa
std
sbb
fdiv
mov
fmulp
out
xchg
lret
ss
idivb
shl
loopne
int3
aas
in
fcomi
test
enter
orb
ret
int
lret
div
aas
fdivr
out
filds
enter
jmp
out
loopne,pn
fcmovb
repz
sti
hlt
rcl
hlt
shl
cld
out
jmp
clc
lret
bnd
hlt
fidivrl
shr
xlat
clc
aam
cmp
lds
test
idiv
fsubp
call
xor
cmc
lret
out
cld
not
cld
test
in
out
loope
mov
rolb
int3
shr
repnz
idivl
repnz
not
ljmp
cld
shl
xchg
fcomip
lds
sti
std
repnz
lock
icebp
idiv
in
xchg
int
loopne
into
repz
leave
xor
call
int3
loope
fadd
fucompp
mov
fdivr
fchs
ljmp
loop
jmp
jmp
ror
testb
shr
decb
out
hlt
xor
clc
repnz
int
cmp
ret
hlt
out
in
mov
mov
mov
nop
in
nop
icebp
loope
loop
aaa
into
aam
shr
fcom
rolb
cld
out
shl
out
mov
ds
aad
cld
jmp
cmc
int3
shl
ret
std
test
fsub
test
in
in
in
stc
out
rcl
loop
ret
jmp
adc
xchg
fdiv
xchg
loopne
cmp
in
sti
sti
cmp
loopne
addb
int3
lret
filds
test
call
shl
test
leave
call
loope
cld
lret
loopne
lock
cmp
fdiv
fldl
aam
mov
int3
in
loopne
stc
cmc
cmp
aad
sti
int
ds
fldlg2
out
jecxz
mul
mov
in
add
jmp
test
in
out
cmp
cmp
aaa
aaa
repz
cmc
jecxz
in
cmc
fdivr
shl
repz
call
jecxz
mov
ret
in
jmp
repnz
shl
fidivrs
div
in
sar
jecxz
mov
jmp
mov
orb
into
xor
shrb
clc
iret
icebp
idivl
cmpl
loope
addl
addl
repnz
lock
in
fiaddl
adc
decl
rcr
xor
jmp
cmp
cmp
aad
stc
out
cmp
loope
xchg
jecxz
mov
mov
jmp
ror
cmp
cmpl
fcmovb
loopne
cmc
stc
jmp
addl
fxch
lret
xlat
loopne
loope
sti
fdivr
out
int3
orb
int3
ss
hlt
cmp
enter
roll
rol
in
mov
int3
orb
lock
fnstenv
cmp
aas
neg
cmp
test
sti
ljmp
int
xor
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
jmp
iret
ret
fstp
insb
sub
repz
stos
test
aad
jl
add
jmp
incb
repnz
clc
mov
testl
ss
ror
cmc
in
xlat
shr
cli
int3
inc
inc
xchg
fdivrp
shl
out
shl
ljmp
jmp
aas
ret
fldlg2
cmp
rcr
mov
fmuls
test
repnz
in
xor
cmp
fsubr
jecxz
neg
cmp
loopne
ret
xchg
mov
rol
out
out
aam
cmp
cmp
fst
out
loopne
aad
in
std
mov
mov
not
sub
aam
aaa
fidivrs
cli
loopne
fsubr
mov
mov
call
mov
hlt
aad
fsub
cmp
loop
lock
ret
ret
mov
xchg
leave
in
fiadds
xor
imul
cli
repnz
repz
and
cmc
cld
ret
adc
movb
rcl
aaa
cs
aad
aaa
not
std
clc
cmp
fsub
xchg
sar
xlat
jmp
cli
loop
jmp
loop
in
xor
stc
xor
out
lock
cmp
int
shl
cmp
jecxz
fld
lret
fildl
out
loope
jmp
lock
out
loope
cli
int3
incl
loop
rcl
test
xchg
xchg
in
xor
idivb
loope
stc
rcr
rcl
stc
out
ret
mov
testb
hlt
in
in
stc
not
out
lret
out
fcmovb
idiv
ret
in
ljmp
xchg
ljmp
shlb
faddl
in
call
out
xchg
loopne
mov
xlat
rol
cmp
shl
fst
enter
stc
out
not
fsubrp
in
mov
repnz
xchg
xchg
in
in
stc
fdivrs
fcmovne
icebp
cmp
cmp
loop
in
mov
mov
enter
cmp
fldl
loopne
hlt
shl
test
flds
mov
loopne
int
cmp
fcmovne
into
fcmovbe
aad
sti
cmp
ret
mov
xchg
lret
std
iret
icebp
xchg
rcl
call
lret
cli
in
in
aam
in
fdivrl
aam
test
std
neg
aam
neg
call
filds
leave
cli
lret
xor
lret
rcr
push
cmp
loope
iret
in
in
orl
out
out
ror
jmp
jmp
mul
rol
loopne
out
out
int
and
ret
cmc
xor
rcl
xlat
cli
in
cmc
bnd
in
repnz
leave
ret
xchg
sti
in
ljmp
iret
hlt
jmp
shr
test
testl
nop
in
mov
orl
xlat
div
repnz
jmp
fnop
lret
rol
aaa
xor
loop
aaa
jmp
ds
jecxz
xlat
ret
mov
xchg
mov
test
xor
ror
loop,pt
int3
icebp
test
aas
addl
fptan
fidivl
xor
ret
into
fsubp
and
rolb
fcmovnu
test
xchg
cmp
into
cmp
out
rcr
aas
cld
in
neg
std
addb
out
repz
mov
int
stc
fldl2t
call
loopne
rcr
in
stc
sar
out
or
in
xchg
aad
enter
in
aam
cmp
cmc
aam
out
hlt
jecxz
test
cld
into
fsub
mov
sub
cld
aad
std
dec
cli
addl
enter
out
cmp
lret
fnstcw
jmp
cmp
cmc
loopne
aad
ljmp
out
out
sar
in
fcomi
hlt
cld
xlat
sar
aam
aam
test
jmp
mov
or
repz
into
aad
int
cmp
ss
int3
cmc
icebp
int3
icebp
cli
shr
rcl
add
ljmp
cmc
aaa
lock
lret
sti
lock
rcl
lock
fcmovnb
ret
rcr
mul
mov
in
fucomip
std
aas
xor
into
repnz
rcr
int
loope
cli
cmp
fmull
mov
in
xor
loopne
idiv
fstp
lret
leave
cld
iret
adc
sti
out
test
out
sti
leave
xchg
loope
aam
test
cld
int3
xor
clc
ror
hlt
ds
shl
ret
fucom
lock
loopne,pt
clc
aam
cs
xor
xlat
sarb
rol
std
cli
xchg
iret
test
inc
sub
lret
xor
clc
clc
int3
not
mov
mov
mov
mov
mov
xor
xor
add
add
jmp
rol
int3
fcmovnu
fcmovb
and
ja
pop
xchg
or
jl
add
cli
out
cmc
rcl
fneni(8087
sbb
xchg
loope
icebp
xchg
divl
enter
in
shll
fstpt
iret
jecxz
hlt
fadd
addl
call
cmp
xlat
cli
out
cmp
out
cld
out
rcr
std
aam
hlt
jecxz
mov
leave
out
orb
int
fcomp
xor
shl
cmp
stc
hlt
clc
loope
cli
orl
in
jmp
xlat
std
idiv
ss
rcr
aas
rorb
loop
fcoml
in
out
xor
imul
int
into
fcmovu
in
test
in
aad
leave
or
jecxz
adcl
xor
jmp
repz
fucom
sti
testb
loope
iret
fmul
das
aam
cmp
in
enter
sar
aaa
iret
out
shl
test
cmc
fimull
add
jecxz
cmc
int3
leave
into
rcr
fxch
loopne
test
out
xor
loopne
adc
mov
fmul
out
jmp
aam
out
loope
lret
loopne
mov
xchg
sub
repnz
out
xor
rcl
ljmp
aad
loop
add
aad
aam
xor
stc
xlat
cmp
fnstcw
out
stc
loopne
into
iret
aad
loop
cld
enter
std
dec
in
loop
xor
int3
sar
out
ds
cmp
cld
jmp
fcmovnu
jecxz
fiaddl
loop
repnz
cmp
cmp
lret
cmp
hlt
in
adc
std
call
xchg
cmc
out
jecxz
xor
cmp
cmp
sti
repnz
mov
shl
out
out
loopne
int3
cmc
int3
into
xor
out
in
cmp
addb
ret
mul
cld
fimuls
xchg
shl
rcr
out
call
cmp
sub
repz
sti
fcomip
out
loop
int
loope
ficoms
hlt
lret
repnz
fsubp
loopne
filds
leave
jmp
nop
iret
int
loopne
test
clc
aam
call
call
fnclex
xchg
call
jmp
iret
repz
icebp
xor
int3
fxch
out
sar
int3
ljmp
ret
and
stc
loop
int3
call
imul
stc
jecxz
xbegin
lret
jmp
shr
jmp
out
jmp
xchg
jecxz
test
leave
lock
out
repnz
adc
lea
rorl
cs
stc
fcmovnbe
idivl
cmp
int
int3
xlat
xlat
xchg
ret
enter
loope
xchg
call
lret
cmc
rcl
fucom
ffreep
repz
jmp
cli
test
int
iret
xchg
mov
sub
iret
clc
enter
in
lock
jecxz
repz
lock
fsubr
test
ror
xchg
lock
out
test
lock
in
and
fmul
fiaddl
mov
mov
rcl
cmp
out
int
icebp
fcmovu
lock
stc
in
cmp
in
in
cld
out
mov
sub
aam
in
shl
in
hlt
shr
rol
mov
in
jecxz
lret
into
xchg
cmp
das
jmp
out
cli
into
repz
hlt
out
jmp
sub
fiadds
shr
ret
shr
iret
lret
hlt
icebp
xor
iret
fildl
clc
fadd
out
jecxz
in
in
icebp
in
cs
xlat
ljmp
push
fdivrp
fsub
add
sar
ret
mov
jmp
call
repnz
cmp
in
shll
xor
jmp
mov
cli
jmp
xchg
out
and
int
cmp
aam
enter
into
fnstsw
stc
in
stc
in
std
stc
loop
jmp
aaa
fyl2xp1
lret
ljmp
aaa
aam
clc
rorl
xchg
fucomp
iret
in
int
cmp
jmp
aam
sbb
call
sti
mov
out
xchg
mov
cmp
lret
enter
cmp
rcr
ret
cld
out
icebp
cmc
in
cmp
stc
cmp
out
cmp
repz
test
xlat
loopne
fsub
call
out
in
jmp
repnz
loopne
in
cs
aas
rol
cld
iret
ret
rolb
mov
mov
xchg
xchg
cmc
icebp
aad
in
xor
out
cli
fsubp
cmp
cld
neg
loop
clc
out
into
mov
out
out
fdivrs
in
int3
adc
icebp
aad
imul
mov
cmp
jmp
iret
aad
ret
fst
dec
cwtl
mov
mov
add
fstp
lds
std
lret
div
cmp
aad
rcl
fbstp
addb
lock
sbb
mov
incl
loope
aaa
cmp
hlt
cmp
out
sti
test
cmp
stc
fldl
mov
cld
out
fmull
into
out
neg
bnd
xlat
repnz
ret
repz
rcl
in
ret
fldl
int3
in
cld
in
in
jmp
cmp
cmpl
std
and
jmp
int3
jmp
lea
ss
in
lret
cli
jecxz
cmc
cmp
loopne
call
fldl
xchg
nop
lret
into
jecxz
xor
test
cmp
iret
push
fiaddl
ret
in
cld
mov
lret
fnstsw
xor
iret
aas
sbb
rolb
jmp
jmp
lret
out
mov
loope
into
fiadds
ds
test
orb
repnz
loop
lret
ljmp
jecxz
repnz
mov
int3
div
test
in
mov
in
jmp
leave
hlt
hlt
jmp
cmp
rcl
sti
cmp
cmp
ret
jecxz
out
jecxz
loopne
jecxz
sub
ljmp
repz
ret
loope
sub
xlat
fiadds
xchg
loopne
mov
int
jecxz
cli
std
cmp
cmc
lock
cmp
fsub
test
loope
fcmovnbe
test
aad
jmp
lds
lret
lret
fsubr
loop
cmp
iret
cli
out
xlat
clc
ljmp
jecxz
ljmp
cmp
out
call
rcr
call
loope
fsub
cli
mov
xchg
das
ret
lret
divl
ljmp
fldpi
leave
stc
in
xlat
mov
jecxz
ljmp
out
fcomp
cli
fdiv
cmp
neg
add
mov
fucomip
in
in
xlat
shl
xor
hlt
div
rcl
int
sbb
test
aas
hlt
cmp
stc
loopne
into
out
xchg
test
ret
in
sti
xbegin
not
iret
loop
mov
int3
out
xchg
std
out
call
xor
ret
out
iret
aaa
sarb
fneni(8087
shr
in
out
mov
mov
stc
ss
out
out
in
cld
jmp
stc
test
cmp
mov
out
call
hlt
call
cli
enter
out
roll
loope
fstp
imul
mov
call
xor
in
sti
in
shr
xor
cld
repnz
add
decb
int3
xlat
cmp
in
cmp
in
repnz
std
shl
xchg
cld
orl
fsubp
aaa
xor
aam
iret
cmp
jecxz
mul
call
icebp
mov
rcl
fsubr
lret
iret
in
aam
ds
into
fsubrp
adc
imul
adcl
shll
icebp
ret
les
int
cmp
filds
aam
and
fsubr
fsubp
repz
jecxz
cmp
fndisi(8087
in
jecxz
mov
fsubr
dec
xchg
repnz
ds
out
ret
aaa
call
fcomip
loope
orb
in
enter
ror
in
xlat
cmc
xor
in
out
in
aad
cmp
lret
lds
enter
aaa
ret
lret
stc
hlt
cli
icebp
hlt
xlat
shl
fstp
adc
xchg
in
test
in
xor
cmp
cmp
leave
xor
xrelease
loopne
mov
fimuls
out
jmp
xor
stc
int3
sarl
bnd
test
cli
ljmp
cld
mov
xor
in
ror
shl
fnstsw
sar
hlt
cld
jmp
hlt
and
lret
jmp
sar
shlb
cmp
rolb
ret
lret
ljmp
cmc
ror
xor
sarb
jmp
sti
loop
fst
fcmovu
repnz
mov
sub
cld
ffreep
out
aaa
leave
clc
shl
lock
neg
imul
repnz
jmp
fsubrp
int3
fucomip
xchg
xchg
loopne
aaa
call
sti
fmul
shr
aaa
test
sti
rcr
cld
lret
decl
loop
jecxz
fxch
rcl
jecxz
loopne
idiv
decb
test
mov
loopne
out
jmp
int3
int3
int
ljmp
leave
sti
mov
incl
add
int
ret
fstp
sbb
and
loop
jl
add
out
std
in
fsubr
shrl
repz
jmp
cmp
sti
lock
shl
cli
sti
in
out
in
loopne
in
shlb
jecxz
ljmp
cmp
aaa
ds
std
cli
bnd
ljmp
repz
stc
xor
jmp
add
aad
test
idiv
fcmovnu
cld
shl
out
in
xor
xor
leave
shr
stc
shr
ds
rcl
sti
cmp
mov
fdivrp
adcl
fnstsw
std
loope
test
fisttps
fucomip
cmp
cld
in
cs
lds
out
aad
aad
int
adc
div
xchg
xlat
out
xlat
call
out
xor
ss
call
out
cld
std
cmp
sti
mov
lock
loop
fdivr
in
xor
xor
cmp
repz
add
fisttpl
loop
into
aad
cmp
imul
into
lock
jmp
aam
aas
jmp
out
enter
in
int
xor
ror
rol
cmc
ljmp
loopne
ffree
cli
test
test
out
fcmovu
rorb
jecxz
fcmovbe
fcomi
out
aam
cmp
roll
stc
in
sbb
loopne
rcl
rol
hlt
stc
lret
sti
in
aad
xor
fcomip
lock
mov
imul
std
jmp
rcl
xor
xor
cs
fucomip
fidivrs
in
clc
ds
ret
dec
stc
call
in
int
xlat
cs
xor
aad
aas
cmp
idiv
lock
add
in
and
repz
cmp
aaa
hlt
aas
in
loopne
icebp
out
loope
rcr
in
fcmovnb
ljmp
hlt
in
iret
aam
fsubr
fcom
cmp
in
stc
ret
adc
icebp
aad
aad
int
fcmovnu
ror
cli
mov
repnz
into
cmp
les
lock
repnz
stc
enter
mov
loop
fucomi
mov
jmp
ret
cmp
les
fcmovnbe
aaa
hlt
cli
fcmovu
repz
xor
jmp
cmc
xchg
xor
ss
imul
cmp
int
in
repz
testb
loope
out
mov
fadd
mov
xchg
cmc
aad
into
ss
fst
in
aaa
in
sar
fcmovnb
faddl
enter
mov
int
rcl
out
out
xor
iret
into
iret
fdiv
repnz
test
repnz
out
cmp
lret
fdivp
rolb
xchg
cld
aam
lret
mov
into
in
loop
hlt
repnz
rcl
cmp
fcmovu
aas
cld
cld
lock
out
loopne
mov
mov
in
in
ret
out
xor
int
cmpl
repz
stc
xchg
in
call
out
fmulp
ret
cmp
hlt
hlt
cmp
ror
ret
xor
jecxz
lret
mov
cmc
cmp
cmp
cmp
ds
lock
hlt
repnz
out
incl
shl
out
cmp
repz
loope
ljmp
out
out
ret
ds
clc
mov
int
jmp
clc
shr
int
icebp
cmp
cmp
idiv
loopne
loop
sbb
out
mov
fld1
ss
enter
cmp
clc
cmpl
in
std
fildl
test
cmc
aad
int3
icebp
jmp
fprem
jmp
rcr
ljmp
loop
test
test
lock
rol
neg
out
jmp
cmp
idiv
not
sbb
clc
clc
sti
call
repz
sar
sub
rcl
repnz
rcr
aam
jecxz
adc
fldz
sti
icebp
jmp
mov
jecxz
int
in
lret
iret
call
fadds
sbb
std
ror
enter
xor
call
jmp
fcmovnu
sar
cli
fsubp
aam
in
mov
flds
xchg
sub
int
ss
ror
xor
rcl
in
aas
iret
icebp
hlt
loopne
fcmove
fimull
xchg
xchg
repnz
rol
jmp
icebp
clc
hlt
fnstsw
fcomi
rolb
faddl
std
xchg
lret
icebp
ljmp
aam
shl
cmp
stc
loop
addl
fcmovne
repz
jmp
neg
int3
out
stc
fucomip
lret
ds
loopne
xrelease
jmp
mov
rcl
lock
xlat
iret
clc
ds
fnclex
test
xlat
mov
rolb
test
ret
jmp
rol
sarl
rcl
mov
enter
jmp
jl
aaa
clc
sti
aam
lret
out
aas
loop
shl
jmp
out
fimuls
xchg
aam
iret
hlt
rcl
sti
fucom
lret
cli
fxam
fninit
leave
clc
in
xchg
in
mov
sbb
rcr
enter
cmp
roll
jmp
lret
lret
fmull
ss
sar
call
in
shl
enter
in
leave
in
test
fucom
lret
lock
ffreep
xlat
not
cli
sub
int
cli
mov
iret
loop
xor
clc
fyl2xp1
cmp
ds
mov
sti
out
lret
shl
fprem
clc
cmp
lock
test
fmul
clc
out
repnz
rorl
enter
mov
test
cmp
cmp
cld
repnz
int3
jmp
jecxz
sti
shl
hlt
shl
enter
loop
lea
xor
repnz
ss
lock
aam
fdivr
call
fsubrp
add
int3
mov
in
lock
stc
call
cmp
aad
repnz
loope
repz
stc
cmc
fsubr
mov
jmp
xor
xor
xor
fcomip
fsubr
cmp
stc
adc
sbb
in
std
out
jmp
aad
int3
cli
rolb
in
cmp
lret
lret
leave
in
repnz
call
aaa
repnz
idiv
out
aas
rol
and
jecxz
repz
addb
jmp
iret
aad
sub
div
repnz
shl
jmp
xchg
mov
xor
repnz
lret
cmp
rcr
in
repnz
loop
sti
test
mov
int
lock
cmp
xor
fdivr
loop
test
icebp
in
jecxz
mov
leave
adcl
aas
out
jmp
cld
jmp
rcr
lock
lock
fcmovnu
mov
cli
call
les
shlb
xor
sti
fadd
jecxz
in
std
cmp
shl
ret
vpmovmskb
test
int3
xchg
in
jmp
leave
enter
rcr
lock
into
out
jmp
int3
test
lock
ret
clc
in
lret
cmp
out
repz
xlat
hlt
lret
mov
out
lea
fdivs
enter
loopne
fst
in
xchg
in
sub
ret
repz
stc
jmp
fdivrs
jmp
jmp
out
in
loopne
repnz
fabs
in
mov
fiadds
xor
clc
mul
lret
fmul
lret
stc
clc
int3
ret
out
bnd
cmp
xchg
in
into
fimuls
test
fdiv
shl
cmp
not
ret
xchg
ret
ljmp
jmp
icebp
hlt
repz
enter
rcl
cmp
shl
aad
ljmp
ljmp
iret
loop
sti
cmp
aad
std
cmp
lock
fiaddl
enter
xor
hlt
shlb
fucomp
rcr
int3
ds
loop
ds
cmp
loop
jecxz
out
loopne
leave
loop
mov
in
in
xlat
xor
sar
adc
call
in
cmc
mov
jmp
flds
repnz
icebp
xor
std
out
lret
aas
cmp
out
ljmp
shl
call
into
aad
repz
shl
fadds
flds
lret
test
int
jecxz
xor
iret
repz
sar
std
out
fyl2xp1
int3
loopne
shl
neg
mov
testl
aad
aam
xlat
cmp
clc
cmp
stc
int3
in
and
ds
ljmp
int
iret
roll
ljmp
lock
ret
test
imul
fdivr
mov
iret
xchg
shl
iret
cs
rcl
shl
lock
in
ret
jecxz
xchg
mov
xchg
call
out
in
sti
int3
jmp
icebp
cmp
xchg
test
out
cmc
jecxz
jmp
call
leave
repz
in
lock
iret
cmp
cmp
ret
test
rolb
mov
xchg
lret
out
enter
out
xlat
icebp
lret
cmp
out
rolb
mov
test
in
xor
in
int
repz
testl
ljmp
repz
lock
loope
rcl
sti
repz
orb
xchg
into
test
cs
rol
enter
mov
jmp
iret
aad
aad
push
addl
jl
roll
iret
stc
cmp
ret
fisttpll
mov
aas
ret
xlat
fmul
xor
ror
cld
in
repz
mov
fildl
xchg
fcoml
in
loop
in
sar
cmp
in
iret
out
decb
test
into
in
cmc
xor
jmp
rcr
cmp
fcmovnu
xchg
stc
fisttpll
hlt
lret
icebp
loope
cmc
iret
xlat
icebp
aam
rolb
int3
lret
enter
lret
in
out
ss
jmp
cmp
lock
clc
int3
into
jecxz
leave
fldl2t
orb
lret
out
xor
aas
cmp
fnstcw
les
rolb
clc
cld
fstp
jmp
stc
rol
leave
lret
call
fidivl
sar
repz
fiaddl
rorb
fmulp
in
in
fcmovbe
rcl
shr
sti
in
rol
xchg
clc
in
out
mov
int
ss
cmp
sar
lret
shl
in
test
out
ret
sub
int
jmp
sub
les
jmp
xor
rcr
mul
sbb
int
lret
ret
xchg
jmp
repz
out
aam
shl
shl
clc
repnz
clc
aad
filds
loop
fst
mov
sti
enter
lret
repnz
stc
cld
ret
loope
sbb
stc
enter
out
lock
loopne
lret
cmp
loop
fcmove
ds
hlt
repz
clc
ret
xchg
sbb
fdiv
loopne
xlat
ret
fcomp
idiv
shr
fcmovnbe
lock
fcmovu
jmp
std
inc
call
xchg
add
aaa
int
cmp
lret
fnstcw
xor
addl
int3
mov
xchg
lret
out
vpavgw
fdiv
aaa
repnz
in
ret
flds
int
leave
icebp
lret
ffreep
lret
sub
fst
xlat
loope
test
jecxz
cld
mov
call
loope
mov
jmp
jecxz
aam
int3
fdiv
leave
divl
cmp
rol
fadds
jmp
out
out
int
in
out
lret
int
cmp
clc
out
neg
mov
stc
int
mov
jecxz
ret
leave
leave
hlt
call
into
std
repz
cli
nop
leave
ljmp
out
aam
fcmovnbe
aaa
cmp
cmp
int3
in
stc
repnz
std
lret
xlat
std
cld
enter
in
lock
xor
jmp
out
into
fsubp
into
jecxz
test
fcomi
aad
out
int
sti
mov
mov
enter
cmc
out
std
cmp
sarl
hlt
testl
rol
call
iret
ss
rol
call
mov
lock
in
call
in
ss
xor
neg
roll
xchg
loope
nop
fidivs
loopne
mov
sti
fxtract
cmp
repnz
rcl
std
hlt
cli
mov
in
xchg
out
test
fcmovnbe
fucomi
div
lret
icebp
loope
test
loopne
xchg
ljmp
out
xor
loop
enter
cmc
leave
sti
out
lret
cmp
test
lock
fincstp
fisttps
lret
adc
ss
ds
fcomip
aas
mov
call
out
xchg
ds
iret
clc
sub
cmp
out
shlb
cmp
leave
cmp
jmp
mov
lock
jmp
xor
shl
adc
cmpb
cli
mov
mov
out
test
in
loopne
jmp
xor
clc
xor
cli
icebp
fcmovnu
rcl
hlt
lock
out
in
sti
fdivrp
in
in
aam
xor
cmp
hlt
out
repnz
clc
cmp
std
ret
out
in
call
orb
xlat
cmc
cmc
clc
cmp
in
loope
addb
out
clc
call
out
hlt
aaa
enter
cmp
int
cmp
loop
test
call
out
adcl
lret
cmp
loope
jecxz
in
roll
loope,pt
leave
adcb
in
jmp
cmp
xor
out
fadd
test
aas
fcmovb
ror
fdivp
ljmp
in
in
call
cli
call
out
aam
test
jecxz
mov
les
test
in
enter
int
cld
flds
imul
add
mov
mov
pop
leave
ret
push
mov
push
not
push
movl
mov
mov
mov
mov
mov
movl
cmp
movl
jmp
int3
aam
xlat
fst
fldl
mov
or
gs
or
jg
std
add
fcmovb
idiv
loopne
enter
mov
divl
lret
cmc
out
enter
ljmp
aad
shl
xchg
cld
rcll
hlt
stc
ljmp
int3
cmp
sarb
sar
clc
stc
ret
fsubp
fsubr
mov
mov
in
jecxz
out
cmp
cmc
repnz
stc
fcomip
aam
in
vcmpps
out
icebp
mov
mov
enter
xor
aam
cmp
repnz
icebp
cmp
shl
loopne
fisttpll
ljmp
lret
aam
cmp
rcr
std
iret
rcl
idiv
fnsetpm(287
fcomip
testb
loop
out
divl
xor
shr
call
stc
enter
jecxz
fdivr
test
loopne
jecxz
in
in
int3
ret
xor
icebp
aaa
aam
loope
in
add
mov
leave
xlat
mov
icebp
jmp
cmp
call
cld
aas
in
repnz
std
mov
jmp
test
clc
shl
ljmp
sti
xor
int
leave
aam
sarb
div
shl
filds
cld
test
out
cmp
ret
int
repz
cmp
fcmovbe
shl
hlt
test
aam
out
loopne
mov
lock
loop
in
sub
into
lret
xlat
cmp
clc
ret
sar
rcr
ljmp
loope
fisubrs
ret
rol
rcr
lret
aad
out
fcmovbe
div
xlat
testb
jecxz
into
out
loope
ljmp
in
aas
loope
clc
loop
hlt
hlt
aam
std
lret
or
test
xor
cmp
in
idiv
fcmovnbe
icebp
sti
stc
into
aad
lock
ljmp
call
int
fcomp
ss
fxtract
std
in
jmp
mov
mov
repnz
cmp
aad
jmp
aad
fidivrl
cld
out
xlat
fsin
in
in
fcmovnu
clc
out
or
loope
cmp
lret
neg
aas
fdiv
jecxz
fiadds
flds
fcomip
int
cmc
out
out
lret
fidivrl
lock
adc
neg
orb
jmp
stc
xor
sti
fcmovne
fcmovnu
std
xor
int3
stc
loopne
hlt
xchg
mov
jecxz
in
mov
sub
sar
fnstcw
fdiv
shl
ret
fadds
in
leave
in
out
repz
aad
dec
sarl
out
xorl
in
test
lret
and
orb
aaa
not
in
test
adc
xlat
out
jecxz
incb
nop
xchg
shl
iret
int3
lds
xor
cmp
add
fucom
lret
roll
out
jmp
repnz
cmp
cmc
sti
rcr
in
cld
shl
fdivr
rorl
shr
cli
aaa
jmp
xorl
lock
jmp
ds
in
decb
in
xor
leave
lret
fidivs
cmp
fld1
rcr
sar
jmp
jecxz
and
lock
xor
aam
iret
fdivrs
fcomp
ds
repnz
out
not
fcom
xchg
fcomip
iret
in
sar
xor
ss
cmp
cmp
addb
ret
loop
in
iret
out
shlb
leave
imul
int
out
sti
cld
shl
shl
incl
cld
out
xchg
loop
lock
out
xlat
aaa
hlt
sar
into
push
aam
stc
loopne
idivb
rcr
ljmp
xchg
jmp
subl
lock
cs
call
repz
mov
mov
std
ljmp
in
xlat
fiadds
stc
aad
fidivrs
leave
orb
lock
cli
cli
std
stc
std
xor
shl
test
mov
int
icebp
xchg
out
out
in
cs
repnz
out
cmp
fld
iret
stc
cmp
loop
in
clc
fucomp
call
test
into
in
icebp
xor
int
repz
aam
rol
fcmovu
div
jmp
aam
leave
in
fcmovb
call
test
shlb
cmp
xor
xlat
decb
test
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
add
mov
movzwl
not
jmp
rcl
ror
fstp
fldenv
std
ret
idivl
std
add
sbb
fadds
ljmp
icebp
loop
out
aad
cli
xor
jecxz
loopne
call
out
out
int3
fmulp
aaa
sti
sub
xor
fcmovu
in
aam
cld
test
sar
lret
sti
std
lret
stc
jmp
xor
rcl
fdivrs
out
roll
fcom
jecxz
xchg
enter
mov
loopne
loopne
jmp
lret
fdiv
fdiv
testl
out
xchg
mov
out
enter
jmp
fcmovb
fdiv
out
roll
movl
jmp
cmp
lock
iret
fiaddl
clc
std
addb
rorb
lock
cmc
into
leave
cmp
enter
cmp
repz
jecxz
out
xchg
loope
mov
ret
into
fsubr
out
out
lock
int3
out
hlt
cli
cli
ret
out
in
jmp
loope
fisubrs
aam
repnz
sti
stc
cmp
in
fmul
call
int
stc
ret
iret
aaa
in
into
call
fxtract
sar
icebp
loopne
cld
jmp
int
in
in
jecxz
lret
jecxz
aam
enter
out
cmp
ljmp
movb
xchg
icebp
mov
icebp
int3
xor
xor
out
sti
cli
cli
cmp
incl
fucomi
out
out
xchg
icebp
in
xchg
int
jmp
fst
out
jmp
cmp
inc
fdivp
xor
in
loop
mov
cmp
aad
sbb
fld
fdiv
loop
cmp
in
sub
lock
ret
repnz
enter
aas
sti
in
test
call
mov
jecxz
out
stc
xor
aad
aam
jecxz
roll
cmp
in
loopne
sub
xchg
call
ss
into
push
out
out
repz
mov
lock
loop
in
jmp
aad
ljmp
cmp
lds
into
int
aad
repnz
clc
jmp
ljmp
sarl
rorb
fcmovu
in
in
fcomip
test
rcl
std
aas
xor
rcl
stc
fidivrs
mov
cld
cli
fimull
lock
pushl
sub
fst
cmp
jecxz
aam
loope
sti
clc
roll
fcmovnu
xchg
mov
aam
ss
cmc
aam
cmc
lock
cli
enter
cli
out
sti
fiadds
jmp
shr
in
lock
xlat
out
out
jmp
in
jmp
jmp
jmp
sar
rcl
cmc
xchg
fmull
out
stc
loope
enter
cmp
sarb
cmp
out
shl
out
fildl
nop
repnz
xchg
ljmp
iret
cmp
into
aad
cld
aad
enter
iret
ljmp
ss
shl
cmp
out
fucom
ror
fidivrl
sti
icebp
test
fadd
fcmovbe
incb
xchg
lret
out
lret
cmp
sti
cmp
aad
cld
in
out
sar
sti
lret
in
int3
fmull
int3
into
xor
xlat
xor
xor
lret
int3
shl
std
cmc
inc
xchg
add
loopne
decl
fucomip
sub
clc
enter
xlat
icebp
int
lock
std
test
mov
xchg
call
aaa
fucomip
icebp
fcmovnu
shl
cmc
std
xchg
aad
sti
mov
leave
mov
jmp
aaa
cmp
aam
call
int
icebp
hlt
mul
ret
in
xchg
mov
fmul
xchg
sar
xor
loop
aaa
lret
mul
icebp
aas
aas
ss
ret
test
in
ljmp
test
into
icebp
aam
fistpll
out
ror
flds
ljmp
xchg
repz
xor
out
sub
in
jmp
incb
in
test
fdivp
shl
lret
sub
lock
neg
loope
shr
iret
test
fildl
ds
lret
filds
cmp
std
cmp
std
sti
repnz
cmc
loope
add
jmp
jmp
enter
fstp
fstp
adc
xor
std
add
hlt
ret
std
lret
jmp
nop
lret
mov
in
int
jmp
xlat
rol
roll
fildl
call
ret
repnz
aas
leave
stc
xor
fxam
shl
sti
rorb
rolb
out
xor
jmp
in
fcmovbe
cmp
ret
stc
loopne
roll
lock
xor
jmp
lret
out
clc
cli
aaa
cmp
xlat
int3
ret
repnz
xlat
repnz
repz
shl
xor
shl
icebp
fadds
stc
into
sti
loopne
fiadds
sub
aad
cmc
ret
lock
cmp
stc
icebp
sbb
fadds
cmpb
cli
mov
enter
call
ds
ret
aad
in
out
xlat
in
fdivrp
sti
loop
fsubrp
das
loopne
aaa
xor
int3
stc
aam
cmp
loope
cmpl
fcmovu
mov
call
mov
xor
out
bnd
jmp
std
adc
neg
ret
dec
std
into
fmulp
int
aaa
hlt
into
call
iret
fucom
cmp
out
in
rol
lret
aad
stc
and
and
xchg
rcl
aad
shl
lock
cmp
hlt
rol
incl
in
leave
ljmp
repz
xor
clc
hlt
shl
lock
incl
jmp
in
orb
jmp
into
into
repz
hlt
lret
hlt
shl
loop
cld
fcmovnu
ror
popl
jecxz
call
or
rcl
cmp
sub
out
imul
out
nop
nop
loope
ret
hlt
test
jmp
ror
out
out
stc
aas
ret
inc
in
jmp
enter
iret
loope
lock
loopne
iret
sar
test
in
call
mov
out
clc
aad
cmp
cmp
xor
cld
fiadds
fisttpll
loopne
in
leave
cli
jmp
out
ror
ror
xlat
lock
xchg
xchg
xlat
and
mov
loope
rcr
repz
fdivr
ror
in
leave
ror
fnstsw
test
icebp
rolb
out
leave
test
xor
leave
out
fcomp
std
out
jmp
fucomip
hlt
xchg
call
in
xchg
rcl
out
les
cmp
fadd
idiv
cmp
clc
shl
hlt
test
in
in
xchg
aad
leave
xor
lret
xlat
int
jecxz
fadd
rcr
leave
in
out
icebp
loopne
adcb
out
leave
cmp
ror
rcl
cmp
addb
lret
mov
loopne
loopne
mov
idiv
out
ss
lock
jecxz
int3
cmp
leave
cli
loop
out
in
mov
and
out
cs
xor
fdiv
into
shr
std
sti
sti
out
addl
int
shl
loop
loopne
stc
into
in
ljmp
clc
repz
roll
out
out
enter
cmc
cmp
cli
cmp
in
cld
cmp
idiv
test
out
test
xchg
test
leave
stc
xor
xor
aaa
sti
aam
xlat
xor
fidivrs
testb
xchg
fdiv
xchg
cld
jmp
xlat
hlt
xlat
cmp
cmpl
in
mul
jecxz
call
cld
and
in
clc
jmp
ror
int
cmp
faddl
into
xchg
xchg
loop
jmp
xor
hlt
fbstp
jmp
jecxz
sub
in
stc
mov
iret
loopne
aam
cmp
clc
shl
enter
cmp
sti
test
popl
ljmp
repz
lock
cmp
xlat
cmc
add
jmp
out
lock
out
adc
cs
out
xor
ss
stc
ljmp
call
mov
std
bnd
out
test
shl
aas
into
cmp
fadds
lret
ror
xchg
lret
ret
in
lret
call
cmp
mov
xchg
add
add
aad
rcr
fstp
sbb
and
jl
add
jecxz
test
in
cli
jecxz
fxch
jmp
xchg
mov
rol
jmp
lret
out
std
inc
flds
call
mul
aaa
fldlg2
cmp
repz
adc
sti
lds
cli
ljmp
jmp
lock
cmp
loope
lret
cmp
clc
loop
cli
mov
std
out
loope
jecxz
aad
xor
ror
in
cmp
into
cmp
std
mul
xlat
xchg
cmp
orl
xor
shl
iret
clc
in
in
fadd
fadd
out
enter
leave
in
cmp
ljmp
lret
shl
idiv
ljmp
loop
ljmp
in
in
adc
in
into
jecxz
jecxz
stc
fmuls
rolb
call
test
out
sar
int3
into
in
repz
fsub
flds
ljmp
lock
cli
fidivrl
out
call
clc
clc
ljmp
repnz
lret
enter
icebp
loope
cmp
jmp
fimull
ficoms
int3
sarl
dec
cli
cmp
ds
loope
aam
shl
add
in
lret
cli
cmc
into
cmc
sar
rcr
ror
rol
fdivr
rol
fdiv
fsubp
aad
repnz
mov
cli
std
xchg
icebp
out
xchg
lret
aad
out
sti
fnstcw
jmp
out
fcomp
in
sbb
jmp
decl
int3
shl
aam
mov
clc
aam
repz
movl
into
loope
int3
icebp
xor
sub
std
aaa
sarb
fdivp
icebp
repnz
ret
hlt
sti
mov
idiv
int
in
xchg
mov
in
lret
into
out
cld
repz
lret
out
out
cmc
fchs
ret
mov
lret
ror
repz
loop
in
not
int3
fnstcw
repnz
ds
lds
les
jmp
cli
out
cmp
cmp
call
out
sbb
leave
cmp
int3
ljmp
in
clc
jmp
fcmovnbe
out
hlt
fdivs
ret
rcr
xchg
mov
mov
xchg
lret
xor
ret
cmc
int3
out
cmc
aaa
out
aad
loop
div
fcmovbe
mov
addb
shl
ret
repz
clc
call
std
in
add
loope
test
fucomp
mov
dec
out
mov
in
icebp
cs
into
mov
xlat
repz
ret
shl
clc
fst
in
jecxz
cli
lret
leave
xchg
test
imul
shl
aad
shr
aas
in
int3
cmp
sub
fld
repz
repnz
xchg
loope
mov
into
ret
ljmp
cmc
aam
icebp
out
frstpm(287
hlt
out
lds
in
fadd
ljmp
out
sti
xor
out
out
std
test
aas
repnz
dec
stc
enter
loop
xor
xor
xor
out
in
ret
shr
lret
ds
sti
test
test
orb
aam
rcl
clc
iret
add
test
add
jmp
xchg
std
xchg
lock
in
out
idivb
std
aam
sar
cmp
fcmovb
xchg
leave
jmp
testb
xchg
shrl
in
out
aaa
sti
icebp
call
hlt
fld
rol
ljmp
rolb
loopne
xor
aaa
cmp
fcom
addb
xchg
out
in
cli
fxam
lea
ss
cmp
fdivr
clc
hlt
ret
hlt
sarb
cli
neg
in
lret
cli
fldl
xor
in
repnz
in
out
fbstp
rol
lock
mov
les
mov
fsub
sub
ret
out
lret
iret
iret
ss
repz
incl
jecxz
stc
loopne
rorb
loop
rcr
cmp
cmp
fcomip
in
neg
idivl
in
ljmp
ljmp
cmp
repnz
cmp
aad
div
aad
sti
test
test
aaa
ret
icebp
repz
aam
mov
pushl
call
test
je
leave
ret
push
mov
sub
adcl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
aad
xlat
int3
ret
sahf
pop
mov
jg
cmpsb
add
hlt
hlt
cli
inc
xlat
in
in
out
orl
aam
aad
aaa
fucomi
cld
loope
cmp
clc
out
xchg
ljmp
fimuls
out
into
aaa
fsubrs
in
ror
iret
aam
cmp
cmp
xchg
or
sar
repz
ror
loop
not
cmp
in
addl
mov
enter
incl
cmp
rcl
rcl
sarb
loope
div
div
repnz
xchg
ljmp
cmc
inc
into
enter
fidivl
out
fdivr
addb
test
out
ljmp
jmp
cmp
aaa
cmp
in
aad
int3
fcom
cmp
jecxz
clc
cmc
stc
stc
jmp
xchg
mov
xchg
cmc
fmulp
call
cmc
cli
into
ret
jecxz
xchg
test
int3
cli
in
ljmp
aam
out
fdivr
hlt
aas
out
cmp
shr
inc
cmc
ret
jecxz
fdiv
enter
jecxz
mul
xlat
jmp
sti
cmp
cmp
cli
lds
out
jmp
out
xchg
cmc
in
in
into
cmc
ljmp
xlat
rcr
in
jecxz
faddp
loope
int
iret
int3
aaa
into
sar
fidivrl
out
idiv
lret
xor
cmp
test
loopne
mov
leave
mov
fcoms
loop
out
fdiv
ss
std
jmp
fcom
fcomip
fildl
test
clc
repz
xchg
shr
mul
imull
ss
int3
jecxz
stc
ret
lock
jmp
mov
shr
sub
clc
iret
aad
idiv
fsubr
fsubp
cmc
jmp
clc
out
sti
stc
nop
enter
repnz
sub
into
hlt
std
aaa
sti
enter
idivb
xchg
in
cld
test
clc
movb
lock
int3
xor
fcmovnbe
testb
out
fmul
cld
fstp
fisttps
xor
div
out
lock
in
fnstsw
fcmovu
xlat
in
ffreep
out
imul
in
jmp
clc
enter
out
out
out
ss
into
stc
rcr
sar
fcmovb
cmp
mov
aas
loope
mov
ror
xlat
std
std
lock
icebp
sti
cmc
fcomp
loopne
cmp
or
les
cld
xchg
ret
int3
in
aaa
out
shl
call
sar
sbb
xchg
test
out
mov
int3
sub
repz
shl
cli
iret
fidivrs
ror
ds
stc
fdivrp
and
into
mov
out
shl
loope
jmp
fdivr
lret
iret
ret
inc
fucom
stc
xlat
ljmp
jmp
cs
enter
cmp
cmp
call
aas
cmp
in
sti
out
loopne
lock
aad
out
rol
xor
xor
fdivr
jmp
in
adc
add
out
hlt
fimuls
xchg
in
in
xlat
ljmp
fcmovu
sti
addl
xlat
ret
call
loopne
out
in
call
aas
sarl
shl
cmp
shl
jecxz
inc
cld
mov
jmp
addl
sub
in
int3
cmp
cli
loope
jecxz
in
into
sti
sar
in
jmp
loop
in
fcomip
shl
enter
icebp
aas
xor
cli
aam
ds
aad
loop
jmp
in
addb
int
int3
aaa
xor
jmp
fdivp
jecxz
push
ror
in
clc
fidivrs
sub
ficoms
das
ret
xor
fcmovnu
out
roll
fst
std
clc
lret
int
in
loopne
fisttps
fucomi
hlt
fidivrl
cmp
cmpb
int
cld
test
lock
fcomp
test
loop
out
sarl
clc
xor
cmp
in
in
repnz
fcomp
loop
rolb
fcoms
hlt
jecxz
out
out
int3
shll
jecxz
jecxz
std
leave
jmp
out
out
mov
xchg
xchg
jecxz
lret
cmp
imul
cli
neg
roll
mov
fucomip
lret
in
or
lret
ljmp
into
std
in
out
enter
out
aad
ffree
cld
ljmp
loopne
xor
sarb
out
fdivrs
in
sub
stc
ffree
aam
mov
sti
cli
out
ljmp
repnz
leave
cmp
lret
in
shl
xlat
shl
clc
movl
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
lea
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
jmp
ror
fcmovb
rcr
fs
lods
xchg
mov
jl
add
testb
ror
ljmp
cmp
rcr
or
aad
testl
mov
jmp
call
lock
idiv
loop
loopne,pt
jmp
stc
fmul
call
mov
imul
cmc
icebp
xlat
cmp
cmp
shl
fmul
jecxz
repz
stc
lret
xchg
out
fists
sub
repz
shl
cmp
enter
out
out
out
fcmovbe
fucomi
enter
in
fdivp
sti
cli
rcr
xor
lret
lock
mul
roll
in
xchg
out
fists
jmp
int
aam
repz
test
icebp
idivb
cmc
std
cli
lret
in
shl
jecxz
jecxz
lret
aad
cmp
in
iret
clc
mul
fbstp
into
addl
into
ljmp
sti
cmp
out
aam
xlat
aas
loope
iret
filds
mov
mov
icebp
adcl
cmc
xor
std
jmp
rcr
icebp
clc
lock
cld
mov
int3
icebp
mov
int3
sub
xor
rcl
into
in
ror
stc
jmp
clc
loope
sar
fucompp
in
ret
leave
xor
in
iret
out
repz
fidivs
ffreep
cld
fscale
cmc
fcmovbe
clc
in
xchg
stc
in
int
nop
shll
ret
iret
loop
in
lret
out
hlt
sbb
into
out
xchg
loopne
ret
mov
mov
xchg
aad
fxch
int
stc
out
fistpll
rcr
shl
cmp
testl
incb
ljmp
into
hlt
cmp
ret
cmp
lret
loop
mov
out
lock
lret
sar
repz
shl
cmc
cmp
faddp
test
fisttpll
jecxz
xor
xor
std
repnz
div
loopne
out
std
testl
mov
repnz
xor
in
out
loop
in
fucomi
iret
fdivrp
loopne
cmp
loopne
mov
test
icebp
fimuls
out
xor
aad
in
in
ljmp
fucompp
leave
aam
jmp
xchg
xchg
loopne
fsub
sub
call
in
loope
rol
std
ret
cli
xchg
in
repz
out
in
fmul
aad
jmp
loop
test
xlat
into
mov
shr
clc
repz
out
xlat
repnz
fmulp
in
xchg
lock
ret
int3
les
aad
iret
cmc
into
shl
rol
clc
sti
sti
in
loope
cmp
shl
and
leave
loope
cmc
out
xor
lret
aam
iret
fucomi
icebp
jmp
testb
repnz
roll
ror
out
iret
stc
fucomp
fdiv
aas
aad
sar
xchg
fsub
test
orb
int
fmul
cmp
aas
xor
in
rcl
out
call
int3
out
out
aaa
aaa
xor
std
aas
aas
clc
in
int
in
into
rol
cld
mul
mov
enter
xchg
shl
in
aam
idiv
lock
sbb
ljmp
out
lock
ret
ljmp
aad
in
std
jmp
int3
mov
fisttps
loop
ss
sar
aad
cli
cmc
xlat
test
cmp
jmp
out
ljmp
sub
xlat
into
cli
fdivr
loopne
cmc
call
loope
ret
sbb
mov
xchg
lock
jmp
cmpl
sti
repnz
jmp
leave
test
loopne
adc
div
xor
sti
repnz
fadds
in
loop
sti
int3
std
std
cmp
mov
xor
std
lock
fdivrs
cli
in
jecxz
test
xlat
xabort
enter
ljmp
xor
aas
lock
int3
ret
test
ret
or
mov
fstl
loop
xlat
aad
in
idiv
cmp
and
ds
sub
addb
aad
hlt
cmp
hlt
int3
idiv
sarl
out
out
fsubr
in
call
ret
jmp
sub
cmc
shl
ror
fcmovnu
std
cmc
fistpll
loop
cmc
in
fcomp
mov
mov
mov
mov
movzbl
xor
push
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
orl
jmp
rol
into
into
fnstcw
pop
sbb
cmpsb
add
lret
leave
ret
fucomi
clc
neg
inc
clc
aad
cmp
aam
cli
loop
ret
out
xchg
ljmp
ds
xor
fdivrl
enter
out
fcmovnbe
test
fildl
fadds
inc
rcl
xlat
in
cld
cs
not
sar
int3
std
xchg
fiadds
in
add
in
fcomi
clc
cmp
fcomp
repnz
cmp
loopne
lret
fcmovu
iret
fstl
clc
jmp
lret
iret
iret
cld
fistpll
repnz
sti
fsub
lret
xlat
cli
out
loop
int3
repz
shrb
aad
xor
aaa
repnz
into
loopne
roll
mov
ret
into
in
orl
cs
cmp
jmp
cld
ret
rcl
loope
xchg
fcmovnbe
out
mov
fsubr
in
sub
in
jmp
clc
ljmp
aas
clc
aas
bnd
filds
loop
das
ror
cmc
cmp
lret
ljmp
in
out
ror
sti
xchg
repz
cmp
sti
idivl
fidivs
fcom
leave
shr
loopne
out
call
out
lret
fnstsw
fdiv
cli
fistpll
lock
xlat
test
xchg
sti
mov
mov
shl
enter
lock
fdivp
out
shl
inc
test
cmp
sbb
mov
lock
out
out
sti
idivl
idivl
std
add
loopne
out
stc
and
rorl
iret
sub
xor
sub
faddl
mov
mov
fldcw
int
sti
call
repnz
std
jecxz
cmp
stc
fsubrp
xor
out
xor
enter
out
ljmp
testl
cld
in
sub
int
ret
into
imul
hlt
lret
sar
aad
in
repnz
div
mul
ljmp
into
xor
fdecstp
stc
cmp
mov
xchg
int
fsub
fistl
ret
in
leave
cmp
cli
lock
hlt
ret
adc
xchg
cli
in
mov
jmp
repz
enter
ror
cli
cld
sti
loope
cld
aam
std
lock
icebp
div
fld1
lret
xor
icebp
icebp
clc
out
ljmp
fcmovnb
rcr
cmc
popl
shl
int3
xor
xor
aad
idiv
jmp
int3
into
stc
jecxz
test
loopne
ljmp
rcl
repz
sti
aaa
cmp
idivl
repnz
loopne
decb
ss
iret
int3
leave
fcmovnu
in
ljmp
jecxz
sti
out
fmuls
out
rol
xor
leave
aas
into
rcr
addl
call
loope
ror
in
sti
stc
cmp
loopne
fidivrs
icebp
cmpb
test
xchg
test
out
lock
int3
int3
jmp
jmp
in
out
cmc
test
lock
loopne
shl
test
shr
idiv
in
mul
xlat
aam
cli
ds
shl
ret
fmuls
rcll
fsub
cmp
cmp
in
testl
cli
add
mov
rcr
jmp
icebp
xor
bnd
in
std
dec
mov
cli
fimull
xlat
shrb
fmul
sti
repz
cmc
cli
rcl
sbb
out
std
test
fst
in
loopne
in
xor
aam
cld
neg
shl
xor
stc
loope
fcmovbe
in
jecxz
stc
int
xchg
xchg
mov
in
das
xor
fdivrp
rcr
rcl
iret
aam
sti
loopne
test
xchg
ljmp
repz
xor
xor
lret
cmp
aad
repz
fcmovne
xchg
xor
cli
or
shl
xor
fstpt
ror
into
fcmovnbe
aad
clc
mov
cld
clc
fcmovb
enter
xchg
iret
out
lret
lret
xlat
repnz
lret
fcomip
ret
ret
jecxz
cld
or
out
cli
test
ficoms
clc
out
xor
cmp
fst
ds
aam
cmc
repz
or
mov
xchg
ljmp
ror
testl
xor
push
sbbl
push
mov
xorl
jmp
ror
rol
aad
ror
fstpt
jno
mov
xchg
jg
cmpsb
add
rolb
in
fmulp
addb
int
jmp
stc
ss
fcmove
int3
out
rcr
cli
int3
fdivp
lock
lret
clc
lret
xchg
ret
call
in
aad
cli
hlt
in
sbb
jmp
loopne
mov
vphaddwq
fcmove
lock
stc
lret
fdivrp
jmp
jecxz
cld
std
orb
fucomip
nop
out
cmc
int
sub
hlt
rcr
stc
xlat
fcmovnbe
shr
stc
lock
in
xlat
add
adc
std
call
xlat
jmp
out
stc
fdivr
jmp
loope
aas
in
clc
stc
shl
orb
popl
xlat
cmc
ljmp
in
rcr
out
fsub
mov
fcoms
jmp
in
shl
fnstcw
cmp
cmc
cmp
idivl
sti
ds
fchs
fiaddl
lret
int
aaa
ror
hlt
cmc
shll
aad
repnz
fadd
mov
sti
mov
mov
lret
fidivrl
cmp
test
int
test
push
clc
aam
in
mov
in
addb
fdecstp
fsubr
roll
aam
fucom
in
xchg
leave
mov
in
icebp
leave
aam
std
out
sar
rcr
cmp
fst
cmpl
jecxz
orb
out
xlat
ljmp
leave
ds
out
out
aam
fdivrs
repnz
inc
pop
mov
out
fucomi
mov
lret
cmp
out
int3
call
sarb
rcr
and
sti
ljmp
shl
out
xor
cmp
in
repnz
testl
jecxz
loope
ret
loop
fst
std
sti
cmpb
aad
std
icebp
or
lock
inc
aaa
ret
aad
fdivrs
cmp
xor
sti
clc
faddl
mov
mov
ret
in
ljmp
rcl
loopne
xor
clc
ljmp
xlat
ret
shl
in
hlt
rcr
cmp
fiadds
aas
sti
cmp
mov
in
fsub
test
out
in
enter
xor
div
aam
fld
cld
repnz
fsubp
test
mov
mov
xchg
fcmovnu
test
in
xlat
cmp
sarb
fyl2x
rcr
mul
stc
lret
decl
cmc
ss
icebp
int3
xor
cmp
fnstsw
cli
repz
idiv
fsubr
repnz
repz
int
jmp
ljmp
repnz
movb
fstp
xchg
sar
cld
ffreep
cmc
xor
cmc
xor
aad
rol
into
aas
imul
in
ret
cli
fimull
out
leave
xor
not
aas
xlat
cmp
aas
out
loop
in
cmc
cmc
out
out
mov
into
mov
in
in
fdivr
neg
aad
neg
hlt
ret
fisttpl
in
aam
in
xor
fnstcw
jecxz
sti
test
rorb
xchg
ror
hlt
stc
idiv
jmp
xor
aam
lds
loop
mov
out
shr
rcr
xlat
fsub
rcl
div
and
out
leave
enter
cli
in
xor
cs
hlt
out
sti
aad
aas
out
cmp
rcr
out
idiv
std
sti
clc
mov
out
in
xor
icebp
jmp
repnz
lret
sar
iret
into
hlt
xlat
incl
ret
xchg
orl
ds
loop
cmp
in
std
xlat
stc
int3
neg
test
cmc
loop
mov
xchg
jmp
test
ss
fadd
out
fucom
ret
test
loopne
jecxz
ljmp
int
stc
enter
aad
rcl
repz
in
test
enter
aaa
in
lret
ljmp
add
clc
xlat
jecxz
in
imul
mov
jmp
mov
xor
ljmp
stc
repz
jmp
mov
test
repz
int
xor
xor
cld
faddp
test
bnd
loopne
jmp
ret
in
lret
loope
xor
call
int
fneni(8087
cmp
in
sar
mov
mov
mov
mov
xor
mov
jmp
leave
mov
lret
mov
add
add
xchg
jg
cmpsb
add
in
in
test
jmp
aas
into
out
cmp
out
fcomp
cmp
aad
xchg
fsubrp
call
ret
hlt
shrb
aam
aam
jmp
repnz
fmulp
sarb
test
jmp
cli
in
jmp
clc
xchg
nop
xchg
in
iret
out
loop
repnz
fnstcw
cmp
shl
ret
sub
int3
les
into
adc
in
aad
cmp
rcl
cmp
aad
cli
repz
stc
jmp
mov
aam
ljmp
out
cmp
shl
rcl
clc
orl
lock
xor
std
stc
out
stc
lret
addl
cmp
ret
out
out
and
out
aam
int3
ss
aas
cmp
fcomp
xlat
icebp
ds
shl
loop
in
into
xor
xor
shll
cmc
xor
cmp
stc
ror
ret
loopne
xchg
out
mov
test
repz
rcll
stc
xlat
in
aad
call
fdiv
into
rorb
fldl2e
sti
into
iret
xchg
nop
call
in
das
fcomip
xlat
sbb
call
cmp
into
out
xchg
int3
iret
out
lret
test
int
in
sar
incl
in
jmp
sti
test
fsub
out
rcl
jmp
in
fdivp
jmp
lret
int
add
filds
jecxz
icebp
rolb
repz
call
out
int3
sbb
fadd
rorb
ds
add
xchg
fsubp
in
xor
sti
ljmp
adc
cld
ret
mov
in
jecxz
loope
subb
loopne
ret
xor
hlt
out
int3
aad
fucom
test
xlat
fdivr
fmulp
fmuls
orb
int
idiv
shl
fstpt
loop
fcomp
loope
cmpb
xchg
in
loope
out
in
aam
out
xor
lret
icebp
cmp
sti
out
xlat
std
lret
lret
fsub
fsubrp
repz
xlat
ljmp
cmp
into
ds
add
xlat
fdivrp
aas
xchg
cmp
lock
fincstp
aam
fdivrp
iret
int3
jecxz
xor
in
mov
ret
icebp
in
repnz
in
cmp
icebp
iret
xor
test
shl
test
int
out
imul
xor
das
sar
into
int3
xor
out
rolb
into
xchg
adc
hlt
xor
cmp
iret
clc
iret
icebp
ss
fistpll
cmp
in
mov
xlat
call
out
jmp
shl
xor
int
enter
repnz
xchg
cli
cmp
lret
in
loop
lret
cmc
shr
in
lock
in
into
cmp
idivl
fnstsw
faddp
fcmovne
faddp
fcmovu
iret
ljmp
jmp
sar
repnz
iret
loop
loop
hlt
lock
xlat
xchg
clc
cli
test
ret
into
in
lret
cli
stc
fsubrp
fucom
hlt
xlat
cmc
loopne
repz
orb
in
cmc
xchg
vpmulhuw
xor
aad
fmulp
sar
icebp
add
repz
ds
out
in
lock
xchg
jmp
int
into
in
rolb
int3
shl
stc
jmp
dec
incl
rol
xor
filds
shl
rol
mov
nop
mov
call
jmp
clc
into
out
xor
ret
roll
fdivr
test
filds
int3
aad
int
cld
fscale
enter
cli
loope
loopne
stc
lea
xchg
sub
xchg
fdivp
int
in
call
repz
rol
in
fadd
lret
loopne
out
ljmp
iret
xor
lret
jmp
fucomp
ror
aad
loop
in
in
loopne
enter
out
fiadds
in
hlt
out
ljmp
xchg
cmp
cmp
xchg
or
xor
fdivl
fsubr
roll
stc
cmp
mov
repz
les
in
in
cmp
cld
ret
incl
ret
ret
leave
jmp
in
iret
in
xor
out
repnz
iret
in
jecxz
mov
enter
jmp
xor
jmp
aad
rcl
fst
leave
pop
push
repnz
lcall
test
aam
repz
std
hlt
sar
in
test
repnz
fneni(8087
movb
int3
out
xor
xor
aad
rcl
loope
fsub
rcl
call
out
vphsubwd
leave
xor
fucomip
clc
xor
lock
test
jecxz
fcmovu
fcmovne
fiadds
jmp
lret
mul
cmp
sar
int3
roll
clc
shr
enter
call
std
xchg
xchg
loopne
cmc
out
out
out
fdiv
icebp
jecxz
cmp
std
imul
fsubp
xchg
xchg
lea
repnz
jmp
cmp
leave
fcmovbe
rcl
aam
rcl
dec
mov
mov
xchg
xchg
cld
aad
aam
rcr
idiv
fsqrt
fldl
shl
icebp
rolb
out
mov
in
iret
xchg
in
bnd
sarb
cmp
repz
cmp
dec
out
in
fcmovu
out
ljmp
aad
mov
stc
xlat
into
shr
cli
icebp
incb
loop
hlt
int
jmp
lret
cmc
in
out
out
jmp
xor
ret
in
int
in
clc
test
call
jecxz
jmp
jmp
int3
ret
cmp
in
aad
ffreep
sarl
leave
clc
leave
in
fdivr
test
in
xchg
in
ds
cmc
into
in
enter
enter
lock
std
aad
loopne
clc
testb
aam
ljmp
call
rcr
rolb
loop
mov
clc
enter
xlat
xor
les
div
jecxz
xlat
shl
jecxz
lock
cli
fucom
jmp
jecxz
into
loop
aad
xor
out
stc
fdivrs
fsub
fsubr
loopne
fiadds
int3
test
out
jmp
cld
neg
dec
rcr
cmc
fcomip
clc
test
fildl
out
leave
call
cld
aas
in
cli
out
ret
xchg
and
aad
std
xchg
nop
loop
fiadds
cmp
xor
repnz
aas
cmc
fcom
cli
ret
in
ret
cli
mov
clc
lea
in
hlt
cmp
cmp
repz
decb
into
mov
in
in
iret
cmc
rcl
shl
jmp
cld
xlat
faddp
adc
test
loop
lret
cli
cld
mov
xor
aaa
in
iret
in
in
in
lret
repz
shl
fsubr
ds
test
int3
testb
ljmp
repz
lock
int
cld
stc
cmc
hlt
lds
test
fimull
out
shl
sarb
hlt
aas
repz
loop
stc
fdivrp
test
xchg
hlt
rcl
jecxz
ljmp
cld
aas
sar
ljmp
std
jmp
call
int3
lret
cmc
filds
repnz
loop
test
xchg
icebp
in
rol
out
hlt
in
cld
aad
int
fnstsw
jecxz
clc
aad
call
in
cld
loop
ljmp
ret
jmp
int
out
out
cmp
out
loopne
and
loopne
fdivr
fdivr
fmulp
xchg
nop
hlt
aam
out
jecxz
xor
neg
idiv
int
roll
neg
call
jecxz
xor
ljmp
std
sar
cmp
out
out
jmp
rorb
out
test
cld
jmp
sub
aad
hlt
stc
int3
lock
shl
cli
ret
jmp
lret
mov
lock
xchg
out
icebp
rol
icebp
leave
out
stc
aam
lret
cmp
fldl
add
fmul
call
shl
in
lret
shr
fst
fsubr
cmp
jmp
jmp
lret
mov
ror
jecxz
jmp
lret
fcmovnu
test
shl
rol
cmp
mov
rcr
test
aaa
aaa
icebp
clc
out
icebp
fdivr
loope
rol
jmp
cli
in
imul
sbb
xchg
subb
in
cmp
call
fstp
incl
or
mov
adc
leave
ss
fcmovnu
shll
aaa
in
fdivp
test
mov
decl
loopne
clc
xor
ljmp
idiv
in
loop
jecxz
loope
stc
test
leave
mov
in
in
cli
xor
add
add
jmp
leave
sarl
rcl
int
mov
jge
gs
jg
cmpsb
add
cld
call
test
mov
lea
jmp
std
mov
fdivrs
fsub
incb
idiv
bnd
aad
les
in
xchg
mov
into
repnz
rcl
aas
cmp
sub
out
mov
and
icebp
aad
jmp
enter
fmulp
call
clc
std
add
aas
ret
in
out
in
repnz
iret
imul
enter
sti
fcomip
aam
jecxz
rolb
mov
clc
leave
jmp
out
out
int
out
aaa
lret
lret
in
out
call
cmp
ret
int3
sub
loop
lret
xor
out
out
clc
ds
ret
loopne
stc
mul
out
xchg
in
into
out
icebp
icebp
lock
div
clc
xor
jmp
fdivrp
jecxz
shl
ror
fadd
ds
xchg
mov
xchg
faddp
fldcw
loopne
ss
leave
xor
ret
loopne
jecxz
stc
fimull
repz
hlt
aad
hlt
lock
enter
int
ljmp
fsubp
fcmovb
lret
mov
out
ror
out
cli
out
cmp
lock
jecxz
loop
in
xchg
mov
fcmovb
sti
out
out
shll
in
cli
out
cli
jmp
ds
repnz
ret
fsub
fstp
testb
xor
stc
lret
shll
cmp
cmc
aad
into
repnz
out
stc
in
mov
jecxz
rorl
das
rcl
xor
jmp
aad
fiadds
ds
mov
in
orl
fldcw
div
and
out
addl
leave
xchg
not
stc
loope
cli
cmp
cmp
fidivrl
into
loop
cmp
in
and
int3
stc
out
call
hlt
int3
int
leave
ret
in
rcl
sar
aas
test
test
int
mov
loope
out
in
xlat
fistpll
aad
cmp
loopne
xlat
mov
addb
leave
cmp
divl
fnstsw
jmp
fcomp
out
test
out
xlat
fdivrp
mov
test
repnz
jmp
int3
in
lret
cmp
out
loope
cmp
aam
mov
test
mov
jmp
stc
into
repnz
stc
ss
aam
adc
cli
fxch
jmp
sub
into
rol
sti
aam
cmp
into
loop
enter
mov
xchg
repz
aam
cld
lret
cmp
sarl
roll
mov
iret
xchg
in
test
fsubp
sarl
not
fst
shl
cli
idiv
iret
sbb
mov
mov
xchg
loop
jecxz
ljmp
int3
clc
fcmovu
cld
fidivrl
roll
cli
out
std
out
sub
cmc
jmp
iret
fsubr
in
xlat
stc
icebp
add
sti
sti
aam
xor
cmc
mov
lret
cld
xchg
fdivr
int3
out
call
fcom
int
cmp
shl
jecxz
repz
out
jmp
ljmp
loop
shr
aam
xor
ds
loop
enter
cli
fldl2e
mov
call
shlb
rcl
iret
fidivl
jmp
lret
loopne
test
mov
mov
fdecstp
int3
shlb
call
fcmove
repnz
sar
ret
cmc
xlat
not
sbb
in
incb
out
shl
out
hlt
repz
cmp
out
std
ret
std
idiv
in
addb
xor
out
cmp
iret
cmp
cmp
int
adc
fcmovne
jmp
rcr
nop
call
out
dec
repz
out
sar
aam
std
roll
fsub
mov
bnd
cs
aad
xor
ds
cmp
test
ret
and
mov
fmulp
out
int3
int3
test
lret
xor
incb
lret
decb
or
cs
leave
into
cld
ss
repnz
out
ret
aam
loope
cmc
loop
std
and
jmp
iret
lret
xchg
xor
int
vpmovmskb
jmp
div
aad
ds
clc
sti
mov
out
fcmovnu
nop
mov
jmp
repnz
shl
xor
fcmovnbe
stc
adc
repz
movl
cmp
jmp
mov
leave
ret
int
leave
lret
and
scas
movsl
jg
cmpsb
add
cmp
cmp
sub
in
mov
int
stc
int
not
cmp
repnz
shl
ret
cmp
ljmp
cli
adc
jmp
ret
stc
hlt
fcmovne
out
out
loopne
out
cli
flds
int
jmp
iret
ror
ret
int3
iret
jmp
ds
xor
in
jmp
leave
xchg
clc
fisttpll
hlt
repz
lret
in
fucomip
repz
stc
neg
fdiv
filds
xchg
sub
lock
xor
cld
fstp
sbb
ret
fcomp
and
xor
mov
in
rclb
xor
into
clc
fcmovu
aad
fnstsw
incb
cli
icebp
loopne
mov
ljmp
xlat
cmp
loope
cld
std
xlat
cmc
loop
sbb
mov
hlt
repz
xor
into
lret
iret
repz
lret
in
repz
test
mov
xor
ret
xor
bnd
cld
cmp
cmpb
std
in
cld
testb
out
cmc
xor
leave
loop
iret
out
hlt
div
shl
adc
loopne
lret
fildl
loope
iret
jmp
cmp
cmc
ret
call
mov
enter
xlat
jmp
sbb
loopne
fstp
jmp
jmp
test
divl
fucomi
hlt
sarl
cmp
loop
add
std
test
nop
xchg
mov
jecxz
loop
shl
jmp
leave
cmpl
into
ds
xchg
xchg
in
loopne
mov
loope
xlat
clc
ret
out
stc
imul
clc
in
ljmp
xchg
ljmp
hlt
xchg
jmp
iret
call
in
not
test
cmp
fcmovnb
mov
shl
int
cmp
fucomp
enter
sarl
testb
in
jmp
jmp
loop
in
cmp
xor
cmp
fiadds
out
jecxz
xlat
roll
stc
out
mov
lret
out
icebp
lret
clc
aad
fadd
sar
rcl
cmp
test
stc
loop
jmp
cld
ljmp
test
cmc
out
std
call
out
stc
lds
repnz
jecxz
test
call
call
sar
jecxz
clc
fadd
in
int
lock
jecxz
xor
das
cs
loopne
ret
fucomp
xchg
fmul
loope
and
sti
iret
test
loop
xchg
fcomip
xor
fcmove
std
repnz
std
stc
sbb
flds
ror
into
shl
icebp
jmp
fdivr
fcmovne
xor
loopne
out
test
cmp
mov
and
icebp
dec
xlat
mul
xor
cmp
cli
ret
std
cmpb
std
lds
leave
iret
xchg
fsub
rcr
cmp
hlt
int3
xlat
cmp
bnd
rcr
lret
test
orb
in
iret
repz
sti
out
cmp
fcomip
ret
shl
jecxz
jmp
fisttpll
enter
call
aaa
ss
aam
in
stc
cmp
shl
loope
ds
rcr
mov
jmp
call
lock
cmpb
jecxz
ret
fldln2
test
int3
out
enter
rcr
out
loope
iret
xlat
fsub
ret
hlt
loopne
jecxz
cld
mov
aaa
sti
in
cs
idivl
cmp
stc
std
f2xm1
out
in
mov
clc
jmp
mov
jmp
in
cmp
cli
cmp
xor
clc
lret
dec
vaddsubps
lock
add
sar
loop
ret
ret
rol
out
cmp
leave
cli
aad
flds
loope
popl
out
xor
xor
cmp
jmp
shl
cmp
loopne
in
sub
cli
icebp
rcr
shll
in
pushl
test
shl
aas
sti
testl
jecxz
xchg
xor
xor
cmp
lret
cli
aam
fcmovnb
jecxz
loopne
movl
stc
iret
loopne
orl
das
aaa
clc
fcomi
fcmove
cmp
incb
loopne
ret
clc
repz
movl
jmp
sarl
rcl
rcl
rol
ret
bound
test
jl
add
shl
repz
xor
xor
in
lret
aas
ret
fcos
fxam
sar
lds
cli
ljmp
call
out
not
hlt
loope
ds
ret
and
hlt
mov
aad
lock
ss
cmp
xlat
clc
sar
repz
in
mov
mov
test
call
icebp
div
ds
lret
lock
sti
stc
std
ret
mov
in
test
out
lret
xchg
xor
stc
out
xor
cmp
rolb
aad
fsubp
jmp
ror
rorl
fcmovnbe
call
call
roll
out
cld
xchg
xchg
cli
jmp
int3
std
sarb
ds
shl
xlat
ljmp
out
lret
in
cmc
aaa
jmp
fucomp
fcmovbe
lock
fildl
stc
hlt
xlat
in
sub
jmp
int3
shr
cmp
cmp
cli
fdivp
xlat
cmp
enter
mov
out
iret
cmp
stc
icebp
xor
xor
repnz
jmp
fsubr
ds
sar
mov
std
call
xchg
in
cmc
jmp
lret
cld
in
faddl
adc
test
aam
in
mov
call
xchg
shll
xor
into
repnz
cmp
mul
or
ljmp
ret
in
out
repz
aaa
xor
aad
cmp
rol
adc
fmull
aaa
ss
loop
in
fsubp
cmp
shl
cmp
ret
mov
loope
out
xchg
aam
loope
repz
fcmovnu
enter
div
cmp
adc
shl
in
mov
icebp
cli
in
mov
aaa
loop
ret
in
repz
testb
in
rolb
ljmp
into
ftst
rcr
iret
cmp
roll
div
loop
loop
roll
orl
icebp
lret
fdivr
call
rcl
lock
ds
fld
lea
out
hlt
hlt
cmp
out
repz
std
cmp
repnz
xchg
fsub
xchg
in
test
lret
aam
ss
cmc
cmp
rol
mov
fucom
in
cmp
fdivr
lds
iret
cmc
xor
stc
cmp
loopne
icebp
stc
fadd
iret
std
fsubr
std
hlt
mov
test
mov
test
loope
loop
in
int3
repz
shll
shl
into
sbb
cld
stc
fstp
in
mov
in
out
shr
fcmovne
vpslld
aas
xlat
jmp
loopne
ss
sar
int
mov
decb
xor
xlat
not
aaa
icebp
iret
aaa
into
out
idivb
xlat
aas
out
lret
loopne
mov
icebp
leave
test
lock
ret
fucompp
cmp
icebp
not
shl
in
vshufps
jmp
xchg
shl
jmp
fcomi
cmp
out
cmp
cli
int3
repnz
testb
aam
aad
jmp
enter
mov
filds
shl
mov
xchg
in
test
icebp
xchg
out
aad
das
out
lret
shl
cmp
fdivr
iret
loop
cmp
clc
cld
mov
xlat
ret
in
repz
fdivrs
in
enter
xor
out
fcmovnb
sti
and
hlt
mov
xchg
lea
fld
shl
xor
cmp
ret
cmp
fsub
cli
cld
xlat
mov
clc
out
int3
loop
out
xor
xor
ret
ror
sar
clc
lock
ret
repz
cmp
mov
loop
lea
jmp
cli
shr
cmp
clc
test
cmp
rcl
leave
mov
ljmp
iret
stc
xor
ljmp
cmp
xlat
aam
in
lret
xchg
mov
mov
loopne
xor
jmp
aad
out
icebp
std
hlt
repnz
clc
cmc
jecxz
test
loopne
addl
shrl
aad
ror
add
sbb
ret
mov
jecxz
int3
std
in
aad
loop
xor
sar
leave
shr
aam
clc
ds
aam
xchg
fcom
loopne
iret
jmp
xor
aad
out
repnz
rcl
cmp
hlt
rcl
shl
enter
iret
fst
iret
adcb
into
lea
mov
mov
jmp
sarl
aad
aad
aad
sbb
or
test
mov
jl
add
xor
cmp
std
into
sar
fcmovb
aam
fadds
shlb
in
ror
xlat
fcmovnu
ss
add
test
sbb
leave
lret
jmp
jmp
enter
jmp
enter
ljmp
leave
inc
stc
mov
lock
xor
out
xor
repnz
rcl
ffree
sub
mov
loope
cmc
mov
lret
xor
icebp
int3
out
xor
in
fsubp
div
test
fcmovu
test
jecxz
out
lret
out
hlt
out
lret
repz
sti
aad
cmp
lock
rolb
ret
fimull
stc
xor
rcl
cmp
in
aad
shl
out
std
clc
cli
mov
and
lret
int3
lret
xchg
loop
repz
jmp
fucomi
clc
lock
fmul
ret
sti
faddl
xchg
xor
xlat
int3
out
loopne
repnz
add
loope
test
jecxz
mov
jecxz
in
fidivrl
repz
std
fst
out
into
shl
lret
fcmovu
adc
fstp
adcl
lret
cmp
int
loop
sarb
fdiv
cli
out
in
into
test
call
aam
sti
stc
out
aad
cmp
cmp
iret
cmc
rcr
addl
lret
mov
rcl
jecxz
xor
lret
fmul
ss
fistpll
stc
xchg
into
enter
subl
divb
jmp
sarl
xor
imul
loopne
loope
call
loop
fucomp
mov
mov
test
xor
in
sti
cmp
enter
cld
in
stc
lock
cld
cmc
out
xchg
xchg
xor
xor
out
in
ss
repnz
sarl
add
cld
mov
adc
in
ror
leave
clc
hlt
in
sti
aad
cli
rolb
xchg
in
cmc
out
das
shl
shl
xor
std
xor
std
in
imul
test
rcr
mov
out
out
orb
aad
lret
xlat
rcr
cli
out
cmp
aas
out
test
clc
loop
mov
mov
iret
out
shll
aas
cld
loope
sti
add
jmp
lret
icebp
sti
jecxz
lock
ret
jmp
fcmovne
fcomip
int
cmp
jecxz
jecxz
aad
lret
test
loop
xacquire
icebp
cmp
in
fdiv
cli
iret
cli
neg
cmc
loope
xchg
inc
ret
loop
adcl
cld
icebp
bnd
int3
adc
aam
in
in
ret
fisttpll
ret
sub
leave
aad
jmp
testl
mov
test
ljmp
out
cmp
jmp
repz
cmp
cmp
ret
cld
mov
mov
rorb
cmc
das
cmp
ffree
fdivrp
out
repz
mov
in
xchg
sub
loopne
cmp
sti
cmp
test
jmp
fcomp
out
enter
rclb
repnz
ror
out
sti
in
fdiv
clc
cmp
testb
fdivr
ljmp
mov
leave
sub
cmp
ror
idivb
aam
aas
aam
fincstp
stc
in
mov
loope
test
repnz
out
jmp
cmp
repz
repnz
test
int3
mov
loopne
fisttps
shr
cmp
stc
rol
cmp
shl
mov
leave
in
lret
sti
in
cld
cld
faddp
out
iret
cmc
cmp
repz
fxch
cld
cmp
sti
inc
hlt
sbb
xor
shl
in
xor
out
fidivl
xor
int3
fmul
ret
stc
stc
hlt
std
orb
repnz
out
in
clc
shl
aam
imul
lock
test
rcl
cli
hlt
dec
cld
cli
ret
xchg
into
ret
enter
fcmovnu
in
cmp
int3
cld
ds
fcmovnbe
jecxz
in
cmp
test
out
das
iret
jecxz
int3
fdecstp
out
in
repz
iret
shl
fld
cmp
loop
in
in
out
loopne
add
out
call
xor
sti
test
fcomip
test
loope
sub
loop
icebp
lret
rcl
rol
mov
imul
jmp
ret
fcmovnu
aad
inc
pop
inc
testl
jl
add
call
mul
hlt
ret
fcomp
fadds
in
leave
in
ljmp
int3
fndisi(8087
shl
cli
shl
jmp
orl
cmp
adc
loop
cli
aas
int
sti
stc
call
shl
lock
aaa
cmp
ss
into
rol
bnd
std
sub
loopne
out
mov
lret
jmp
int
repnz
int
loope
repz
out
sti
shl
xchg
repz
call
jmp
fcmovnu
cli
fucomp
jecxz
aad
repnz
ror
mov
clc
jmp
loop
lds
into
ret
lret
stc
cld
cli
int
in
sti
in
jecxz
icebp
sub
lds
out
xchg
loopne
xor
div
loop
call
xor
cli
out
fiaddl
std
loop
jmp
enter
in
loopne
xor
ror
jmp
fsubr
cmp
loopne
mov
jmp
jmp
loop
out
out
xor
int3
repz
rcr
sbb
fcmovnbe
aam
mov
test
aam
das
jecxz
cmp
idivl
sti
fsub
icebp
loop
fdivr
fiadds
in
rorl
sarl
sub
stc
xlat
out
cld
ret
xlat
cmp
stc
cld
aad
jmp
filds
mov
aad
cmp
out
fnstcw
fildl
xchg
fucom
loopne
fdivrp
iret
enter
iret
cmp
int
jmp
loopne
xlat
cmpb
fdivr
in
out
xchg
mov
out
cmp
in
ss
icebp
into
repnz
test
lret
leave
mov
mov
sub
xor
ret
idiv
lret
cmp
in
out
and
mov
lret
in
test
jmp
shl
sub
out
xlat
leave
out
aas
div
int3
loope
xlat
les
ljmp
xor
lret
jmp
cmp
out
leave
cmp
aam
shl
out
cli
cli
std
fisttpl
jmp
rcll
xor
fsincos
fcmovnbe
loop
test
aam
fcmovu
orb
xchg
lret
mov
stc
jmp
mul
cmp
jmp
lret
in
rcr
fmuls
int
jmp
sub
sub
ret
aam
cmp
lret
repnz
xchg
neg
ds
fmuls
xchg
lret
ss
aam
lret
sti
iret
xor
in
loop
adc
mov
clc
in
out
xor
repz
sub
xor
ret
cmp
aam
loop
ret
iret
loopne
lret
in
loopne
icebp
leave
mul
fucomi
jmp
cmp
icebp
test
ds
mov
enter
nop
mov
xchg
enter
xor
out
xor
sbb
xchg
and
out
xchg
sti
xor
cmp
shl
fcmovnu
ret
loope
in
jmp
stc
call
cs
shr
fld
icebp
lock
cmp
cmp
xchg
iret
test
test
cmc
stc
clc
lret
aaa
out
cmp
cli
sar
in
xchg
jmp
xor
xchg
sub
out
repnz
jmp
idiv
aam
std
xchg
lock
aad
test
fsub
xchg
mov
cmp
icebp
icebp
jmp
out
fcomi
int3
xor
loope
out
movb
fadds
in
fcomi
shl
jmp
ss
les
int
cld
iret
mov
call
ljmp
xchg
in
hlt
in
adc
xchg
sti
decl
leave
xlat
enter
enter
into
lret
stc
std
jmp
out
jmp
iret
mov
in
out
fsub
iret
std
out
ror
fxch
xlat
out
repz
test
fstp
mov
enter
jecxz
fdivrl
icebp
cmp
jmp
aam
sti
ds
loope
mov
loope
lret
leave
faddl
lret
icebp
jmp
fcmovbe
int3
iret
int3
stc
icebp
rol
sbb
test
fdivrp
out
std
xchg
xlat
call
hlt
cmp
div
fndisi(8087
testb
push
in
cmc
in
xor
int3
int
fucomi
sarb
cmc
xor
xlat
stc
loope
ds
ffreep
jecxz
fimull
cmp
je
mov
orl
mov
xor
jmp
xlat
int
ret
ljmp
jg
cmpsb
add
icebp
into
enter
xor
xor
sti
aam
sarb
out
test
loopne
xor
shr
shll
cld
div
call
cmp
cld
fdivrp
test
call
in
out
aam
enter
lret
ror
shr
out
test
fcmovne
in
int3
mov
in
test
neg
cmp
lock
iret
ljmp
ror
repz
ret
xchg
cld
iret
hlt
xchg
out
in
hlt
cmp
xor
cmp
cmp
ljmp
mov
in
fsubr
mov
xor
cmp
out
loope
shl
repnz
jecxz
fsincos
jecxz
fimull
out
ror
sti
aam
lock
cmc
clc
int3
cli
fcmovnbe
aam
in
ljmp
in
mov
fiadds
clc
rcl
iret
repnz
xor
std
in
addb
orl
loopne
aaa
loopne
int3
repz
int3
ljmp
shl
rol
neg
mov
fdiv
iret
into
mov
shl
clc
in
int3
in
loope
ljmp
aad
filds
into
call
xlat
enter
cmp
lret
idivl
cli
repnz
in
repnz
sti
enter
cld
jmp
into
repz
in
in
in
ret
leave
cmc
into
stc
aaa
cli
idivb
repz
in
fldpi
jecxz
enter
fdivr
adcb
ljmp
fistpll
shl
aaa
cmp
out
lret
std
shr
xchg
sar
out
fdivp
rcl
lock
fnstcw
flds
shl
fldl
mov
jmp
clc
loopne
aad
lock
jmp
shl
repnz
mov
or
xchg
cli
lret
in
loop
fldl2e
aad
cmc
ljmp
in
cli
cld
shr
mov
leave
testb
xchg
xor
fsubr
shr
std
loopne
lret
cmp
std
repz
jmp
sti
lret
mov
cli
xlat
sti
cld
fcomp
int
loopne
cmp
aam
in
fcomip
addb
cld
xchg
neg
jecxz
repz
aam
fdivr
repz
iret
out
sarl
jmp
in
jmp
int3
mov
out
out
fldpi
aam
imul
leave
hlt
sarb
lock
in
enter
jmp
orl
cmc
repnz
fcomip
shl
aam
cli
mov
testb
repnz
int
stc
rcr
fcom
cs
test
shl
mov
jmp
mov
lret
lret
xor
iret
clc
jmp
cmp
cmc
testl
cld
int3
in
mov
cmp
ljmp
call
cmp
aam
repnz
out
or
out
lret
popl
mul
jmp
fldl2t
fsub
cld
xor
ret
cmc
lret
lret
mov
out
shl
out
aad
cmpl
out
ret
in
idiv
xlat
loopne
loopne
sti
rcll
xlat
div
ss
aam
ret
hlt
call
stc
shl
mov
or
das
xor
xlat
cmp
int
sti
aam
sbb
cmp
jecxz
mov
in
leave
icebp
hlt
hlt
rcl
in
cmp
fsubrp
cmp
lock
out
stc
ret
jmp
repz
xchg
imull
iret
into
iret
sar
out
leave
cmp
addb
fsub
addb
leave
aad
int3
leave
out
sar
cmp
leave
neg
cli
in
imul
xchg
leave
ljmp
cmp
shr
lock
aam
call
xchg
fsub
call
out
enter
shl
neg
xchg
jmp
ljmp
out
and
clc
rcr
hlt
out
repz
fcmovnb
cli
cld
std
icebp
loop
loop
orb
orb
call
or
sti
ds
loopne
jecxz
aad
cld
leave
enter
loop
shlb
in
aaa
shl
clc
cmp
clc
cmp
loop
loope
xchg
test
jmp
int3
mov
subl
out
out
cmp
stc
cli
fsubrp
stc
and
fldl
rorl
enter
ret
add
int
fst
fcmovne
xor
call
cmpsb
add
into
icebp
xor
enter
out
test
sub
clc
in
jmp
in
out
out
rcl
cli
repnz
sar
cmp
orl
repnz
fnop
int
fdiv
call
clc
aad
and
lret
mov
shr
lret
out
aaa
out
mov
xlat
xor
aad
xor
aam
cmp
loope
stc
sti
cli
repz
jmp
cs
xor
sti
int
aas
adc
aas
add
stc
fiaddl
loope
call
in
hlt
out
iret
shl
cmp
fucomi
in
sti
cld
mov
fimuls
shl
cs
shr
xor
std
hlt
lret
cld
rcr
repnz
cmc
enter
jmp
jmp
test
loop
aaa
ss
repnz
cmp
test
icebp
std
test
div
dec
sti
mov
xchg
in
int3
out
stc
aaa
iret
in
cmp
into
call
ds
stc
stc
jmp
in
call
ret
lds
xor
hlt
cmpl
clc
fldl
shr
cld
rcl
sub
les
leave
aaa
div
ljmp
out
mul
fdivrp
int
fdivp
fcmovu
int3
int
jecxz
xor
xlat
stc
cld
ds
adc
div
std
xchg
xchg
filds
cs
repz
in
sti
out
cmp
cmp
repnz
sti
cmc
out
int3
fcomi
in
repz
shll
stc
repnz
icebp
repz
std
fnop
cmp
sarl
aas
in
aam
fiadds
in
leave
xor
call
hlt
shl
shl
out
cmp
std
adc
test
int3
iret
sti
in
xchg
xchg
xor
iret
in
out
fcomi
fcmovnbe
fcomip
aas
clc
aam
aad
std
sti
stc
jmp
out
lret
hlt
fidivs
loopne
aad
test
sbb
shl
loop
lds
jmp
iret
rol
jecxz
cmc
idivb
fstp
in
int
lock
repz
mov
rcl
testb
out
ret
out
stc
out
xor
idiv
fstp
jmp
iret
repz
repz
sti
cmp
jecxz
clc
jmp
loopne
xchg
jmp
in
repz
imul
lret
icebp
repnz
loop
ds
in
call
int3
ror
nop
subb
ss
in
into
fcmovnbe
in
std
aas
loop
lds
lock
ret
enter
int3
sbb
filds
jmp
cli
fld
aas
xlat
div
cmp
enter
xchg
xchg
cli
cmc
test
sub
lret
xor
hlt
aaa
fucomi
in
lret
cmc
test
rorl
fucomi
stc
cmp
mov
test
hlt
loopne,pn
cmp
in
fdivrs
repz
icebp
loop
stc
roll
call
add
xor
in
cmc
out
enter
rcr
loope
sti
adc
cld
cmc
xor
out
stc
jmp
idiv
lret
fcmovbe
fxch
fdivrp
cld
testl
rolb
in
ret
shl
ror
mul
xchg
in
aad
testl
xlat
in
int3
fucomi
aaa
xor
shl
sar
jecxz
jmp
into
mov
mov
xchg
fsubp
int3
xor
xor
aaa
bnd
xor
icebp
hlt
fcmovnu
in
fsubr
leave
loope
cmc
out
int3
hlt
xor
int3
into
aas
cmp
ror
shl
rcl
stc
test
sbb
and
mov
icebp
lret
in
repnz
icebp
into
lret
out
sar
lret
xor
jecxz
mov
aam
clc
faddl
into
in
in
int
ret
shll
cmp
cmp
ret
cmc
sbb
mov
xlat
jmp
clc
loop
into
test
out
repnz
shl
aam
cmp
cld
sbb
repnz
out
nop
int3
aam
int3
xor
aaa
leave
sarb
lret
aaa
aam
into
xlat
ret
loopne
sar
ret
sti
cld
fimuls
sub
xchg
out
iret
fdivs
lret
stc
rcr
lret
fdiv
cmp
xchg
loopne
mov
in
std
int3
cld
test
lret
jmp
loope
shl
hlt
shl
icebp
fcmovu
xchg
xchg
lret
mov
xor
cmp
std
sar
adc
stc
loope
out
std
xchg
jmp
jmp
ror
int3
repz
jmp
lret
jmp
lret
ret
fstpl
fidivrl
adc
jg
cmpsb
add
loop
aas
vpmulhw
sbb
out
enter
ror
lret
loop
cmp
fcom
std
int3
rol
out
shl
loop
cld
loope
in
mov
inc
xor
shl
xor
push
cmc
xor
cmp
aam
or
in
std
repnz
sub
fxch
shl
cmp
lret
cmp
in
out
aas
repz
aam
loopne
cmp
lret
idiv
cmp
fdivp
fdivrp
test
in
icebp
enter
and
in
int3
xchg
int3
xchg
aam
shrb
iret
fcmovbe
hlt
leave
shr
into
lret
hlt
faddp
test
ret
jmp
stc
enter
out
mov
nop
in
xor
icebp
lret
hlt
repnz
rcr
cmp
idiv
test
cld
call
out
in
cmc
enter
cmp
cmp
jecxz
jecxz
stc
in
out
xchg
mov
icebp
aad
lret
ss
sarb
sarl
clc
shl
jecxz
in
fxam
leave
mov
cli
mov
xor
in
ror
ss
hlt
hlt
shl
fiaddl
fiaddl
in
out
ret
std
out
cmp
int3
stc
ds
test
lock
rcl
hlt
std
xchg
lret
mov
call
das
out
repnz
stc
aad
icebp
ret
test
out
leave
cld
incb
mov
fsub
cmc
loope
fcmove
in
testb
mov
hlt
mov
adcl
std
ror
lock
repz
in
test
or
in
aad
out
rcr
cmp
int
out
push
fdivr
in
enter
fsub
rcl
into
call
shr
out
ss
lock
mov
lret
xchg
cld
xchg
shl
aad
loop
ror
clc
cmp
faddp
mul
fcom
cmc
mov
xlat
xchg
rol
hlt
ret
das
cs
clc
cmp
flds
jecxz
rcr
testb
xchg
aad
leave
xlat
aam
cld
sti
aam
rcl
test
jmp
fldl
in
rcl
aam
lock
stc
std
mul
repnz
lret
fiaddl
icebp
icebp
lret
ss
fdecstp
stc
iret
ror
stc
repnz
cmp
call
enter
lock
lret
icebp
xor
cmp
repnz
iret
cli
fdivr
repz
leave
ds
lea
int3
mov
ror
ljmp
cmpb
repnz
vphaddbw
lock
icebp
cmc
ss
std
call
cli
xchg
std
out
and
mov
rcl
cmp
cmc
cmp
out
rcl
mov
test
out
jmp
ljmp
fiaddl
jecxz
test
mul
jecxz
xchg
fldl
hlt
int
cmp
int3
and
jecxz
cmc
sar
mov
fcoms
call
icebp
cmp
loope
in
in
out
add
jmp
fsqrt
test
loop
fadd
ret
into
aam
xor
ds
cmpl
ds
mov
sub
hlt
lock
cli
repnz
ljmp
leave
clc
sti
clc
flds
cld
test
fidivrl
fdiv
fdivp
lret
cmc
loop
out
loopne
aad
mov
loope
test
iret
call
lret
aam
cld
lret
shl
cmp
cmp
fsubp
loope
lock
aad
rcr
lock
filds
cmp
out
out
ljmp
fldl2e
aaa
xlat
in
shr
loopne
fcmovnu
orl
int3
sbb
jmp
xor
jmp
cmp
icebp
repnz
cmp
fstp
xchg
mov
jmp
fld1
std
jmp
test
out
jecxz
fldl
mov
shr
icebp
in
xor
in
jmp
jmp
test
in
hlt
faddp
in
fadds
ljmp
jecxz
out
ljmp
into
and
std
and
pop
leave
ret
mov
jmp
aam
fcmovnu
mulb
divl
aam
jg
cmpsb
add
sti
ljmp
xor
out
cli
sarb
cmp
cmc
test
call
iret
test
fmul
xchg
or
fdivs
ljmp
rolb
rcl
clc
aad
out
int
sbb
xchg
mov
jmp
int3
leave
jmp
lret
rol
icebp
cmc
cld
in
mov
fdivp
in
fsubr
adcb
lock
out
into
in
iret
jmp
iret
cmp
fstp
test
ror
rol
xor
ljmp
cmp
cmp
stc
loop
jmp
cld
icebp
and
dec
dec
rcl
enter
cmp
sar
aas
cmp
test
aam
fsub
loope
fsubr
cli
aad
sub
call
lret
cmp
loopne
hlt
cli
rol
fsub
lds
xchg
in
filds
call
cmp
fcmovnu
out
fdivrp
out
jecxz
loopne
loopne
neg
stc
nop
int3
loopne
xchg
aaa
out
loop
out
rcl
aaa
testb
clc
lock
xchg
out
stc
loopne
mov
jecxz
cmc
out
cli
fadd
cmc
ljmp
cli
iret
les
mov
in
mov
into
repz
jmp
fcmovu
fucomp
rol
addl
cmp
repnz
aam
cmc
lock
cmp
fmulp
fcmovbe
hlt
out
stc
test
loopne
clc
in
fimull
enter
std
call
loop
or
test
cmc
fimull
out
out
xchg
into
out
fstpt
aaa
aam
fstpt
adc
std
not
fcmovbe
repnz
xchg
loope
in
jmp
loopne
xor
iret
int
clc
cmp
cld
stc
in
test
cmp
xchg
orl
hlt
div
int
fadd
int3
roll
test
movl
xchg
in
leave
cmp
cmc
sti
xlat
jecxz
test
push
enter
ljmp
in
jmp
fbstp
fnstsw
cld
clc
test
cmp
in
roll
and
repz
cmp
in
xor
xor
addb
sti
mov
xchg
jmp
lret
jmp
aaa
xor
in
aam
shr
into
cmc
test
orl
fildl
xor
xor
in
cli
in
hlt
cmc
in
sti
adc
mov
fsubr
out
fstl
sti
xor
cmp
cmp
faddl
repz
int
lea
mul
les
sarb
in
ret
int3
and
loope
call
in
mov
mov
loopne
call
icebp
divl
div
cmp
ret
cmpl
xchg
sti
ret
fucomp
lret
mov
ret
stc
aad
dec
cmc
int
cmp
ror
fcmovu
ds
enter
out
ljmp
ds
xor
cmp
leave
ss
in
not
ret
repnz
ljmp
ror
out
sub
out
hlt
shl
out
hlt
repnz
sarl
test
loopne
incl
out
mov
loopne
xchg
imul
shl
xor
rol
aam
rcr
aad
dec
test
fdivp
mov
lret
orb
int
out
les
aad
out
cmc
cld
loopne
out
clc
div
sti
sti
out
enter
loope
das
xor
cli
loop
ljmp
xlat
aam
xlat
div
add
icebp
xchg
jmp
repnz
out
cli
cmp
in
fdivrs
rol
clc
xlat
stc
ret
ret
loope
rcl
loop
enter
int3
aam
fidivrl
ljmp
lock
loopne
sti
leave
in
jmp
int3
loope
shr
cmp
std
xor
out
fdivr
xchg
sti
mov
cli
loopne
xor
xlat
icebp
into
ss
xor
dec
rcr
not
rcl
div
xchg
cld
mov
fsubp
in
out
lock
ror
lret
cld
xlat
faddl
int3
in
leave
cld
fucomp
xchg
clc
dec
fmul
icebp
shrl
cmp
call
sar
fpatan
rcr
rcl
cli
in
out
std
and
vpsllw
sarl
cmc
cmp
add
jmp
in
stc
mov
xchg
loop
shl
add
cmp
je
mov
jmp
int
aas
ror
rcr
fcmove
mov
js
lcall
cmpsb
add
stc
div
fcmove
stc
aam
stc
adc
aam
mov
neg
cmp
loope
jmp
in
leave
in
xor
fadds
repz
lock
shr
xchg
mov
lock
fcmovnu
int
into
ret
clc
xlat
in
xlat
out
mov
out
sbb
int
fucomip
jmp
rcr
lret
int
cli
int3
repnz
fisttpl
jmp
fiaddl
aaa
xor
shrb
fcmovne
ss
lock
incl
clc
xchg
out
nop
mov
xchg
lock
ret
aad
into
shl
aam
sarb
sar
out
cmp
not
dec
rcll
sub
loop
iret
stc
aaa
in
ljmp
adc
idiv
lret
std
jecxz
in
mov
rcl
in
fcomi
cmc
test
out
out
fsub
mov
cli
loopne
in
int
xchg
int
jecxz
hlt
repz
jmp
cld
sti
into
fmul
idivb
in
cmp
cli
testl
mov
shl
sub
hlt
xor
fdivp
repz
icebp
into
clc
cmp
repz
lds
stc
out
in
shlb
xor
fdivs
ss
fdivr
cmp
lock
mov
fmulp
xchg
xchg
jmp
in
not
cmp
fmul
stc
ret
out
cli
mov
ret
cld
mov
addb
out
repnz
in
ror
aam
xlat
cmp
repz
std
xchg
ds
fiadds
out
xchg
loop
leave
xor
hlt
fmul
int
aam
in
in
out
clc
aam
flds
test
mov
in
cmp
std
aam
iret
aad
fcmovnb
ss
fcmovbe
xchg
nop
into
xchg
int3
xor
xor
out
cld
fcmovbe
ljmp
aas
testb
enter
jecxz
repz
aam
out
int3
aad
cmp
out
aas
imul
stc
int3
in
out
fucomip
lock
xor
in
jmp
lock
std
out
in
aam
mov
sti
stc
mov
shl
lea
iret
idivl
ss
cli
sarl
ror
sbb
sti
ret
aad
mov
xchg
div
xor
jmp
lret
xor
into
loopne
jmp
int3
fucompp
repnz
fdiv
loope
call
lret
cld
idivb
fstpt
adc
fdivrp
xlat
or
mov
lret
xchg
shr
hlt
in
lret
into
cmp
iret
faddl
leave
std
stc
cmp
mov
enter
ss
fabs
aam
jecxz
cld
xchg
jmp
mov
orb
loop
jmp
rcl
fdivp
xor
in
fadd
sti
repz
shl
and
test
std
mov
xor
int3
out
fdivr
jmp
ds
sarb
sti
loope
fsub
loopne
mov
aam
jecxz
fcmovne
std
cmp
int3
aad
cli
fcmovu
addl
loope
sbb
xor
xor
hlt
ljmp
jmp
ds
addl
xlat
sub
cld
int3
cs
in
xlat
clc
lret
clc
ror
xlat
cli
rcl
cmp
ret
ljmp
mov
mov
hlt
iret
hlt
out
ljmp
rol
ss
fisttps
call
vpsubw
out
cmc
idiv
call
repnz
out
fsubp
jmp
vprotb
rol
int3
xor
jmp
in
test
cld
in
lret
ds
into
loopne
jecxz
test
out
aaa
idiv
shr
cmp
into
mul
add
loopne
sti
out
in
icebp
fcomp
cld
loope
jecxz
ss
imul
lret
cmp
out
clc
idiv
fldl
jmp
orl
ljmp
fcmovbe
out
push
loop
xlat
out
lret
in
in
test
int
aas
iret
leave
cmc
lret
std
clc
lock
xlat
cmc
lock
in
call
mov
out
in
call
in
sti
cmp
repz
test
repz
add
icebp
out
int
repz
int3
ret
in
cmp
fcmove
icebp
lret
out
xor
int3
out
in
ret
sbb
enter
mov
in
repz
fcmove
out
sti
fdivrs
sti
andl
jmp
mov
jmp
iret
aad
aad
adc
lea
bound
jp
dec
jg
cmpsb
add
xlat
fdivrl
aam
hlt
shr
adc
mov
sbb
int3
stc
idivl
cmp
call
filds
mov
lea
loopne
xlat
ror
lret
cmp
sub
into
shl
out
mov
loopne
fsubr
iret
iret
xchg
repnz
lret
ror
cmp
sti
cmp
cmp
aas
stc
cli
test
leave
or
leave
lret
xchg
rorl
fcmovb
idivb
int
jecxz
icebp
faddl
xchg
in
loop
mov
shl
adc
out
ljmp
lret
cmpl
in
sbb
in
leave
fadds
les
jmp
xor
repz
int
adc
loopne
rolb
mov
faddp
icebp
in
loop
repz
ss
int3
aam
rcr
sar
xchg
std
in
xchg
repz
faddp
aad
hlt
lret
shl
call
rcr
shl
incl
cld
jmp
xor
ret
repnz
fcmovu
shr
into
fndisi(8087
rcr
aam
repnz
fisttps
icebp
xchg
int
cmc
loopne
fxch
cmp
sti
rcr
ds
adc
in
imul
out
fucomip
loop
fst
jmp
aam
vpsubw
repnz
jecxz
int3
cmp
mov
lret
lret
in
shl
out
in
out
fcom
cld
ror
sar
stc
fcom
div
mov
sbb
fsub
mov
jmp
xchg
xor
out
call
sub
cmp
mul
ret
clc
in
xchg
xchg
jecxz
shr
in
out
fcom
shlb
shr
cmp
repnz
out
in
vpsrad
jmp
out
cs
ds
cmp
cli
adc
fldl
out
mov
iret
in
out
lock
repnz
aam
sar
repnz
cld
les
mov
loope
ret
call
repnz
cmp
fdiv
aas
enter
and
loop
test
int
out
fdivs
into
hlt
jmp
fcmove
lret
clc
hlt
neg
mov
enter
int3
jmp
fidivs
aam
enter
lock
out
test
fcmovnu
test
enter
fcmove
icebp
out
sub
iret
xlat
in
sarb
shl
out
in
ret
stc
cmc
fsubrp
lret
orb
iret
xor
lret
sub
int
in
fcmovnu
leave
fcomip
rol
in
loopne,pt
xchg
std
loope
out
aad
jmp
ljmp
int
out
fpatan
test
repnz
fisttps
lock
cmp
dec
hlt
sarl
xor
idiv
into
ds
hlt
faddl
int
jecxz
in
xor
int3
xor
xlat
enter
jecxz
in
sar
fsub
fsubp
out
aam
test
int
and
enter
cmp
out
repnz
xchg
loopne
mov
into
sar
loopne
in
xlat
jmp
loopne
repnz
jecxz
test
lds
clc
into
fmul
int3
ror
int
fdiv
in
icebp
icebp
fmul
into
rcl
stc
mov
sar
rol
rorl
jmp
ret
in
cmp
xlat
cmpl
aad
out
ljmp
shl
repz
in
repz
aad
lret
ffreep
aas
rcl
mul
out
hlt
leave
jmp
into
std
in
int3
in
das
stc
sti
cmp
fsubr
cli
call
out
aad
call
int
mov
test
xchg
jmp
cmp
out
repz
iret
int3
in
out
fld
out
addl
sub
sti
jmp
xlat
call
shl
vpavgb
cmp
in
out
lret
xchg
cmc
in
cmp
xor
sti
rolb
mov
mov
xlat
std
out
out
fsubp
lret
in
lret
repnz
out
int
enter
aam
cmc
sti
stc
fdivrp
fisttpll
xchg
mov
out
fcomi
in
lret
fidivrl
fidivrs
loopne
call
fmull
repnz
into
cmp
shr
rcr
out
fcmovnb
iret
cmp
std
in
hlt
fld
clc
call
cld
ror
rcl
sti
repz
int3
std
lret
int
loope
test
and
mov
jmp
mov
int
mov
mov
rclb
jl
add
stc
out
loope
adcb
ss
repz
lock
aam
shl
rol
stc
clc
test
mov
out
lret
loope
into
shlb
sarb
cli
cmpl
and
shr
fadds
sub
in
jecxz
repnz
call
roll
cmc
mov
imul
mov
int
rcll
cli
shlb
rcr
sar
fdivp
ds
xlat
stc
cmc
cmp
sub
lret
int3
rorb
repz
cmp
jecxz
stc
out
sarb
inc
lret
xchg
loop
jmp
sub
xor
ror
ss
int3
jecxz
cmp
loop
fdivrp
aad
xchg
out
test
div
xor
aam
rcl
cmp
rcr
test
call
jmp
imul
rol
xor
das
repz
hlt
aad
jecxz
shl
loopne
out
test
repz
out
hlt
xlat
lock
shr
in
incl
cmp
ljmp
cli
rclb
xor
lret
jmp
icebp
cmp
fsub
in
shl
shr
out
call
in
ss
lret
das
fcmovne
aas
loopne
shl
ds
lock
lret
cld
sti
out
xchg
xor
sub
not
cmp
xor
int
cld
addb
aad
stc
leave
loop
cmp
xor
int
ret
cli
fincstp
cmp
lret
xchg
cld
lock
ret
fcomip
mov
xor
aad
cmp
ret
sbb
std
fsub
stc
mov
in
mov
jmp
loopne
fsubr
xlat
aam
stc
shl
fst
jecxz
clc
cmp
out
in
rorb
call
sti
fsubr
rcl
cmc
fst
test
xchg
mov
lret
out
cmp
jmp
cmp
cmc
shr
xchg
xchg
lret
int
int3
loope
mov
and
aam
shlb
int3
xor
lret
ds
inc
out
cmc
sub
mov
int
in
das
into
int3
clc
int
ljmp
mov
aad
mov
cld
xchg
jmp
mov
out
cmp
cmp
fcom
loopne
loope
cld
rcl
in
sti
in
fsubrp
in
in
rcl
out
out
lret
xor
fdivr
fsubp
std
hlt
repz
ret
xchg
loop
icebp
ss
ret
hlt
in
sbb
cmp
sar
call
out
sar
repnz
aam
out
cli
das
jmp
cmp
fdecstp
filds
repz
enter
fucomi
jmp
adcb
jmp
cmp
cmp
neg
fcomip
enter
cld
mov
xor
cmp
lret
shr
in
addb
jecxz
out
std
mov
xchg
aaa
stc
xor
call
rcr
test
ffreep
loopne
xchg
out
repz
in
xchg
shl
test
cmp
cld
idiv
out
adc
std
fincstp
test
xchg
cmc
in
xlat
loop
repnz
cmp
hlt
incl
shl
call
loopne
out
iret
jecxz
call
lock
cmp
shl
fsubr
fcmovne
stc
mov
call
rorl
hlt
aam
fnsave
iret
fsubrp
int
fcomp
lock
inc
sti
nop
mov
shr
shll
iret
test
addb
fcmovnb
out
std
leave
nop
fmul
leave
into
shl
in
xlat
lret
int3
fsin
xor
fdivrp
xchg
mul
filds
ror
in
orl
cmp
not
cli
jecxz
loope
shl
rcr
std
lret
out
mov
fildl
rol
int
rcr
cs
cli
fnstcw
roll
aam
out
fcoms
sub
repnz
int3
lret
sub
orb
int3
into
xchg
fimull
xor
shl
sarl
int3
aas
fxch
cmp
loope
xchg
xchg
test
lret
ljmp
xor
jmp
testb
rcl
clc
cmp
sti
lock
out
jmp
iret
cs
clc
je
mov
jmp
int
aad
fstp
ffree
push
jl
push
jl
jg
cmpsb
add
xor
xor
lds
ss
test
xchg
aam
fmull
jecxz
in
xchg
out
leave
mul
loop
into
in
leave
aam
ljmp
in
lret
clc
fdivr
imul
and
xchg
mov
loop
out
call
cmc
cmp
repnz
aam
not
rcl
and
in
neg
mov
fmull
iret
iret
aaa
enter
sar
shl
in
stc
xchg
mov
test
fld
mov
inc
xchg
hlt
into
in
lret
fcomp
fsub
stc
sarb
adc
div
out
in
repz
int
icebp
clc
cmp
shr
cmc
clc
jmp
jecxz
cmp
jmp
out
lret
call
loopne
fmul
enter
imul
cmp
xor
fsubp
test
jmp
loopne
divb
aaa
cmc
fucomi
stc
call
xlat
fadd
out
ljmp
xor
into
cmc
cmp
cmp
fsubp
fcmovnu
out
sar
lret
fisttpll
xor
div
into
enter
fcomip
rcl
add
mov
fsub
out
cld
test
fdiv
fdivp
into
cmp
in
aam
repnz
clc
ds
cmp
fdivr
incl
icebp
mov
adc
in
out
fdiv
out
xlat
ret
iret
cmc
sar
test
out
fdivr
lret
cld
call
leave
shr
in
cld
int
lock
loopne
in
cmp
ffreep
lret
rcr
jmp
rcl
int3
lret
rol
fmul
rcl
sti
fcmovb
or
out
cli
in
repnz
addl
call
out
idivl
hlt
repz
fdiv
loope
testb
aam
addl
out
sub
fnstenv
out
inc
aad
iret
lock
repnz
sti
xlat
xchg
loope
fcmovnbe
lea
out
fcmovne
hlt
stc
int
cmpb
test
flds
lea
jmp
xor
xlat
jecxz
cmc
hlt
vpminub
xlat
int
xchg
nop
repz
stc
cmp
sarb
fidivl
loope
clc
addl
clc
std
loope
xchg
shr
loope
xor
sti
cli
out
fcom
aas
aam
rcl
icebp
cld
imul
in
fucomi
in
in
xchg
loope
mov
ljmp
cmp
xor
in
icebp
xlat
fcmovu
sbb
enter
mov
in
xlat
leave
leave
xor
rcl
aam
fmul
lret
cmc
and
out
rcr
fsub
loope
xchg
ljmp
enter
cmp
fst
repz
cmp
xchg
jmp
stc
loopne
xchg
mov
loop
fsub
fprem
in
cmp
ss
ljmp
repz
loop
iret
int
fstp
loopne
xor
ljmp
enter
aas
cmp
stc
fcos
aad
lret
in
fcmovnb
leave
ret
loopne
lret
ror
ljmp
fchs
adc
stc
xchg
mov
std
lock
sub
rcl
int
xlat
rcr
loopne,pt
repz
cld
shl
ret
faddl
test
clc
int3
clc
ljmp
shl
repnz
xlat
call
in
int
cli
call
lock
aam
cld
xor
jmp
aas
hlt
jmp
in
mov
in
mov
not
xor
cli
cli
cli
into
ljmp
rcl
fldl
int
out
in
loope
lret
xor
ss
xor
movl
out
nop
xchg
aas
in
xlat
fadd
out
ss
fcomp
cmp
jecxz
out
fiadds
mov
mov
mov
out
clc
shlb
ljmp
ds
ffree
or
test
rol
vshufps
cmp
cmpl
and
cld
ficoms
clc
xor
out
cmp
icebp
loope
clc
rol
sar
mov
hlt
adc
fdiv
leave
sarb
cld
in
clc
test
cmp
out
mov
xchg
out
mov
roll
sti
icebp
xor
call
repnz
int3
cmp
clc
xlat
xchg
fsubr
fsubr
mov
sub
call
fcomi
cmp
xor
jp
jmp
inc
cld
mov
mov
mov
xor
jmp
aam
ror
rcl
fld
sub
jnp
cmpsb
pop
jg
cmpsb
add
icebp
lret
aam
out
mov
in
lret
in
out
icebp
loopne
out
repz
ds
xlat
repnz
xchg
faddp
jmp
xchg
mov
lret
into
ret
jecxz
sarb
shlb
shl
cli
fdiv
xlat
fsubp
mov
fdivr
mov
ljmp
sub
xlat
imul
shr
cmp
cmp
hlt
sbb
xacquire
jecxz
fdivrp
rolb
lret
cmp
xor
aas
jecxz
cmpb
idiv
ds
leave
sbb
loop
enter
jmp
cld
stc
rcl
mov
jecxz
xchg
call
xchg
loopne
xor
loop
cmp
lock
out
lret
and
cmc
ljmp
inc
and
xor
in
xlat
rol
out
adc
lock
repnz
lret
mov
ret
idivb
out
fildl
in
neg
jecxz
sti
xchg
xchg
iret
xor
fdivs
out
xor
fcom
iret
cli
and
mul
cmc
add
jmp
mov
int
in
out
out
enter
iret
ret
test
mov
flds
loopne
mov
faddl
cli
jmp
in
fdivrs
cmp
loopne
fiaddl
and
xor
iret
divl
icebp
in
roll
lret
ret
nop
xchg
jecxz
in
sub
cmp
lret
aas
into
lret
cli
loop
ffreep
fcmovne
repnz
cld
int3
in
xchg
imul
lret
loop
out
ljmp
stc
cmp
out
out
in
hlt
stc
test
sub
sti
ret
clc
fucomip
cli
fdiv
cmc
repz
xlat
rolb
sti
leave
int
fninit
repnz
aad
cmc
jmp
bnd
std
ljmp
ret
jmp
clc
stc
mov
hlt
xor
aaa
fdiv
jmp
in
cmp
iret
idiv
out
flds
fstl
hlt
repz
repnz
int3
shll
sarb
lock
out
mov
addl
shl
cmc
lret
into
rol
lret
iret
stc
cmp
repnz
fstpt
shl
xlat
cmp
sub
fstp
xchg
ljmp
ss
fcmovne
cmp
shl
aas
in
faddl
call
cld
aas
icebp
ljmp
cmp
in
cmp
aad
movb
mov
ljmp
xor
cmp
aam
ds
repz
cmp
ljmp
mov
lret
aaa
aad
shll
fxch
cmp
stc
jecxz
and
loope
adc
leave
fimull
int
lret
leave
rcr
fdiv
ljmp
clc
test
mov
xchg
loopne
out
jecxz
cmc
out
shr
jmp
cmc
lds
in
cli
ffreep
mov
aam
int3
jmp
cmp
fsub
cmc
fucom
test
iret
lock
in
xor
repnz
xor
add
idivl
ffree
call
call
test
xlat
in
xor
rcr
jmp
aas
incb
decb
lock
idivl
icebp
lock
cli
aad
iret
sbb
jecxz
fistpll
xchg
fstp
in
shl
ret
sti
sti
jmp
repnz
out
in
out
clc
lret
cld
int3
test
xlat
cmc
iret
icebp
cmp
icebp
ss
lret
into
aad
ret
lret
fildl
in
ds
rol
call
shl
cmp
leave
ljmp
xor
out
aam
shr
incl
repz
out
stc
loope
out
int3
jecxz
enter
aam
fsubr
std
cmp
xchg
out
xlat
in
nop
out
xchg
jmp
icebp
xor
loop
icebp
ss
out
into
xlat
lock
out
icebp
xchg
mov
icebp
loop
nop
hlt
icebp
out
ljmp
rol
test
jecxz
dec
stc
sti
loope
orb
cmc
cs
in
jmp
stc
out
cld
out
fcomp
out
icebp
incl
add
add
cmp
je
mov
xor
add
mov
mov
jmp
enter
int
insb
push
push
mov
leave
xlat
shlb
jl
add
cmc
loope
in
out
mov
jmp
hlt
in
xor
lret
call
sarl
not
ds
aam
fcomi
loopne
leave
nop
mov
icebp
lock
lock
out
sub
cld
fiadds
test
mov
fsubrp
into
leave
ret
stc
in
out
repz
incl
rol
cld
fdivr
cmp
hlt
in
fadds
mov
sar
ljmp
jecxz
in
in
cmp
out
in
or
lea
jecxz
leave
cmp
in
cmp
cmp
hlt
test
fldl
xchg
xchg
repz
jecxz
enter
out
xor
xlat
adc
xabort
test
lret
xchg
mov
into
fyl2xp1
in
xlat
icebp
fsubr
clc
rcr
rol
repnz
call
loope
fimull
call
cmp
into
xor
cld
fdiv
hlt
test
enter
xchg
fstp
cmp
out
ror
aad
out
cld
cli
out
lock
fsubp
out
xlat
xor
into
fdiv
out
ds
clc
loopne
or
ljmp
nop
loope
out
xor
fcmovu
into
hlt
call
cmp
addl
addl
ss
call
out
sarb
rol
sti
ds
mov
in
out
lock
out
hlt
lock
repz
not
repnz
cmp
loopne
enter
cld
out
xchg
call
xlat
cmp
cli
addb
repnz
fcmove
cli
mov
rcr
fsub
aad
xor
out
out
stc
repz
neg
stc
cli
ret
cmc
incb
fxam
out
out
mov
shr
ds
fstp
sti
aad
iret
clc
fcmovnu
xchg
ret
xlat
mov
rcr
fimull
xor
cmp
neg
xlat
fcmovnu
clc
aas
mov
cld
out
out
out
jecxz
xchg
xchg
int3
ret
into
in
aad
repz
out
aas
into
test
clc
cmp
or
fisttpll
out
enter
out
cmp
cmp
lock
test
cli
leave
lock
fldl
cmp
cmp
rcr
cmp
ljmp
xchg
test
int
sub
mov
ret
sub
jmp
fcom
repz
into
loope
rcl
fadd
cmc
aam
fiaddl
ss
fld
sti
xor
xlat
rcl
rol
xlat
in
fsubr
jecxz
xlat
jmp
fmull
fcoml
iret
lock
fucomi
in
in
cmp
lock
cmp
into
out
icebp
aam
call
cmp
cld
fdivp
cmc
aad
aam
mov
fimuls
mov
in
in
rol
stc
icebp
icebp
jmp
repnz
shl
orl
ficoms
int
out
stc
clc
int3
lock
ret
sti
adc
aad
in
aam
fiadds
mov
aad
clc
int3
lret
repz
vpaddusb
leave
les
iret
fldl
out
hlt
mov
std
shl
shl
aas
ss
out
clc
test
iret
dec
repz
lret
jecxz
jecxz
xor
out
aaa
iret
cmp
fnstsw
or
in
mov
jecxz
icebp
out
repz
xor
std
cmp
repz
fucomi
in
loop
imul
mov
jmp
repz
fucomi
aad
lret
icebp
hlt
aam
in
lret
xrelease
test
lea
sub
xor
stc
cld
leave
repnz
xor
test
fdivr
mov
leave
enter
iret
enter
stc
sub
ror
enter
mul
iret
clc
sti
mul
lret
mov
in
call
mov
repz
call
cmp
sar
stc
in
fsubr
in
cli
out
popl
ret
into
ror
jmp
ds
test
loopne
in
push
leave
int
loopne
xchg
fimuls
xor
lock
cmp
in
test
cli
rcl
mov
mov
cli
rcll
in
aad
fdivs
std
hlt
shll
cmp
jmp
iret
jecxz
sbb
out
in
fsubrp
lret
fldl
aam
xor
add
add
aam
rcr
fcmovb
mov
fstpl
gs
into
xchg
jp
jg
cmpsb
add
mov
shl
xor
in
enter
in
rcr
shl
adc
call
fld
ror
loope
mov
lret
shr
ss
cmc
cs
aas
rcl
clc
out
cmp
idiv
lock
xchg
out
fdivp
jmp
lock
cmc
fsubr
int
ss
fdivrl
rcl
mov
jecxz
in
out
out
fisttps
loop
out
aam
idivb
hlt
loopne
aas
aas
rcr
jmp
xchg
std
cli
mov
jmp
xor
into
xor
xor
jecxz
xchg
in
jmp
jmp
jecxz
call
mov
int
stc
cmc
cmp
fdivr
cli
stc
int3
icebp
xor
xchg
aad
mov
jecxz
or
std
std
mov
std
lret
ljmp
in
out
ffree
sti
shr
repz
lret
enter
fadd
cmp
xorl
in
clc
mov
enter
in
xor
out
div
hlt
out
sub
fptan
xchg
addb
test
jmp
in
xor
cmp
int
jmp
cmc
cmp
cmp
mov
call
shl
cmp
stc
lock
rcr
mov
sar
ret
fimuls
cmc
repnz
cmp
enter
cli
shl
loop
xchg
in
in
in
fsub
shl
fprem
out
repnz
aad
into
sarb
mov
stc
or
in
mov
mov
jecxz
neg
sti
jmp
cli
in
icebp
in
ds
out
mov
int
mov
fcomp
shl
hlt
out
sarb
cli
int
fcomi
std
sar
sarb
loop
cld
jmp
int3
test
mov
fucomip
xor
aad
call
std
into
ds
rol
sar
aam
cmc
les
cmc
mov
aam
xor
not
xlat
rol
std
aas
vpaddusw
test
mov
test
jecxz
nop
repz
xor
call
fidivs
sti
fyl2x
inc
cld
lret
out
mov
cli
fucom
in
xchg
ret
std
leave
cld
stc
lock
fcmovu
test
testl
mov
call
jmp
leave
cli
cmp
int
sar
shl
enter
mov
ljmp
lret
loopne
test
out
iret
in
incl
rcl
xchg
iret
mov
fdiv
ror
cmp
shl
xorb
lock
lock
rcr
fiadds
leave
into
in
int3
xchg
repz
out
cld
out
xor
in
ret
repz
call
hlt
test
fucomp
fmul
iret
jmp
out
out
into
into
cmp
out
clc
rolb
shl
cmp
std
ljmp
sub
shll
cmp
iret
shl
out
out
aam
call
jmp
iret
xor
int
int3
jmp
cmp
or
test
inc
xchg
in
enter
rorl
lret
jmp
int3
call
hlt
loope
lds
out
leave
mov
out
das
cs
out
repnz
cmp
out
filds
movb
call
jmp
aad
shl
fstp
out
out
orb
out
std
in
in
lock
clc
cmp
in
sarl
and
fldz
shl
aam
cld
fildl
hlt
out
clc
shr
cli
cli
cmp
shl
iret
test
addb
in
orl
aad
loope
ror
lock
orb
ljmp
fdivr
xor
cld
int
ror
loop
cld
repnz
xchg
clc
xchg
ret
xchg
icebp
lock
xlat
enter
cmp
fadds
ffree
stc
int
mov
test
into
lock
rcr
test
ljmp
xchg
leave
mov
fucomi
cld
in
xchg
mov
jmp
jmp
cli
aas
ljmp
out
out
sbb
and
jecxz
repnz
ret
loop
dec
out
rol
xlat
jecxz
fcmovnbe
cmc
sar
into
test
fmull
ss
clc
out
aad
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
ds
leave
fstp
ror
cmp
mov
imul
add
not
rcl
idiv
div
icebp
call
lret
out
icebp
leave
int
call
cmp
ror
ss
cmp
into
neg
fcmovb
test
in
cld
jmp
leave
leave
in
nop
mov
in
loop
out
xor
cmc
aad
cli
std
in
jecxz
fucompp
out
lret
jecxz
fsubrl
ds
int3
xor
out
int3
cmp
ljmp
repz
addb
cli
lret
hlt
leave
lock
fadd
shl
fdivrs
in
cmp
cmp
rcr
enter
out
fildl
clc
leave
jmp
cmp
in
cmp
repz
fmuls
repnz
nop
test
in
loopne
imul
shl
sarl
cmp
out
cmp
cli
test
ljmp
out
sar
test
in
clc
aad
iret
int3
repnz
test
adc
fisttpl
jecxz
xchg
xchg
xchg
fmulp
test
iret
cli
ljmp
sbb
rol
out
cli
mov
in
enter
into
int
fcmovnbe
xor
fildl
sarl
loopne
stc
ljmp
jecxz
sub
fmul
fdivrl
xlat
stc
shr
addl
sti
iret
sub
mov
shrb
lret
int
out
clc
lret
mul
rol
aam
ret
mov
stc
jmp
ret
divl
fld
xor
idivl
ror
fdivp
cmp
testb
mov
shl
ret
enter
fidivl
adc
rorb
mov
mov
aad
test
clc
filds
neg
leave
faddp
loopne
lret
jmp
out
ljmp
iret
imul
ror
cmp
into
aam
ret
cli
clc
orl
shl
cmp
xor
out
cmc
xorl
xchg
icebp
vpcomuw
ss
lret
cmp
jmp
cmp
icebp
inc
rcr
cmpl
adcl
aad
jmp
shl
clc
rolb
mov
out
lret
cli
mov
xlat
in
xor
int3
out
not
lret
jmp
adc
fmulp
leave
fninit
int
out
out
mov
repnz
iret
repnz
aad
clc
aas
test
in
test
cli
xlat
ds
fstl
ret
out
in
xor
fst
fcomi
into
adc
mov
movl
int3
icebp
shl
in
fbstp
ds
fxam
sbb
test
idiv
shl
shl
out
call
imul
in
repz
incl
sar
std
xchg
leave
iret
in
jmp
in
xor
lock
xor
div
rcr
faddl
jmp
rcr
fstp
test
aad
int
cmp
idivl
cmp
in
cld
fcomip
out
loop
adcl
int3
aad
ds
bnd
xlat
xlat
leave
leave
mov
jmp
aad
fld
sub
cmp
cmp
into
out
jecxz
jecxz
mov
int3
mov
xchg
jecxz
out
hlt
loopne
xor
loope
fdivr
lock
cli
fadd
mov
lds
in
in
loop
out
mov
xor
in
cmp
aam
inc
cli
out
out
mov
fsub
decb
rcl
test
out
in
lret
out
iret
out
iret
ror
int3
in
shl
ljmp
mov
ss
out
jmp
lock
aam
aam
aas
add
hlt
xchg
xchg
loop
repnz
xor
out
xor
fnsave
loopne
lock
fmull
out
ss
sti
dec
fsubr
repnz
sbb
in
loop
xchg
jecxz
lret
hlt
out
out
xor
ljmp
hlt
jecxz
fdivr
fst
sbb
ret
out
fdivr
mov
clc
xor
idiv
fnstcw
idiv
hlt
fcmovu
aad
jmp
out
and
int3
fcmovnbe
fbstp
ljmp
cmp
sti
rorb
jecxz
leave
repz
lret
xor
aad
hlt
icebp
xor
ljmp
clc
sti
add
jmp
int
ret
fcmovu
add
dec
jp
rcr
into
outsb
jg
cmpsb
add
loopne
ljmp
fcmovu
out
mov
aad
repnz
in
sar
fnstsw
ss
ret
ffreep
cmp
fsubr
hlt
ljmp
repnz
nop
shl
rcr
fmul
idivl
fsubrp
cmp
rcl
xlat
rcr
jmp
mov
int
jmp
int
subl
fdivr
lock
ljmp
idiv
fiadds
rorl
das
int
repnz
cld
cmp
fnstcw
in
aam
mov
xchg
jmp
in
call
out
call
shl
stc
cmp
in
into
ds
fdivr
out
sti
loope
fcomp
fsubr
out
out
out
lret
sar
cmp
cmc
std
xlat
enter
stc
aam
call
out
nop
lret
out
test
jmp
in
clc
clc
cmc
int
add
loopne
clc
mov
fcmovu
in
xlat
aad
xor
fld
repnz
loope
adc
rol
shl
jmp
leave
icebp
enter
jmp
cmp
icebp
enter
add
inc
les
mov
mov
cld
out
int3
jecxz
xchg
lock
ljmp
cld
fcmovnu
shl
cmc
ret
fdivrp
call
test
fldl
mov
xor
xlat
stc
repz
fsubr
ds
hlt
int3
out
shl
sar
hlt
out
mov
fmuls
xor
ss
stc
fnstenv
jmp
fucomip
cmc
std
loope
mov
cli
mov
lret
jecxz
in
hlt
ljmp
int3
addl
call
ljmp
out
cmp
out
out
leave
imul
in
loope
cmp
iret
out
rol
fcomp
sbb
mov
out
int3
or
in
xor
std
cmp
fsubr
cli
into
hlt
clc
mul
orb
int3
out
ret
xlat
leave
leave
cmp
lret
fcompp
test
cmp
rorb
lret
std
aad
aas
xor
out
int3
fcmovbe
xor
ljmp
rcr
push
int3
iret
std
jmp
loop
not
imul
jmp
repz
repz
in
lret
jecxz
iret
lret
mov
xor
repnz
aad
clc
fdivr
rcl
rcl
repnz
loop
les
lock
test
aam
ljmp
mul
loope
aad
hlt
in
cli
orl
out
neg
ljmp
ret
clc
fld
in
lret
std
out
xor
cmp
ret
into
cld
cld
sti
in
out
cli
faddp
test
mov
mov
enter
in
xor
jmp
sarl
jmp
clc
stc
inc
vcvtdq2pd
incb
ror
shll
sarl
out
sbb
fxtract
div
ljmp
jecxz
mov
xor
lds
aam
flds
shl
cmc
enter
filds
loop
jmp
mul
aam
leave
cli
aad
filds
shl
rcr
loope
mov
fdivr
test
int3
in
rcl
cmp
dec
ss
ds
fcmove
in
repnz
cmp
dec
addl
fnop
fucomp
int3
aas
in
aas
int
in
cmp
ljmp
leave
mov
jmp
int3
ljmp
stc
rcr
fsubp
loopne
ret
les
fldpi
ret
out
cmp
fnstcw
test
repnz
mov
loopne
addl
out
repz
shr
out
icebp
mul
inc
clc
mov
int3
jmp
cli
lock
sub
xor
out
jmp
out
in
cld
into
shl
roll
idiv
fmul
ljmp
jmp
jmp
xor
fcmovbe
xlat
out
fucom
repnz
mov
fmul
inc
xor
neg
jmp
clc
rcr
out
loope
std
in
fcmovbe
ffreep
call
test
hlt
lret
sti
out
stc
ror
out
sti
sarl
enter
call
les
aaa
jecxz
cld
sti
neg
cmp
cmc
cmp
rcr
lret
cmc
out
xchg
xor
cmc
lock
icebp
in
xor
clc
out
aaa
ljmp
aas
aam
mov
mov
decl
xlat
sub
mov
jmp
mov
mov
xor
cmp
jmp
aas
enter
xlat
fcmovnu
mov
pop
icebp
js
mov
jb
jl
add
fisttpll
rcl
in
imul
ffree
fnstsw
rcl
sarl
loopne
sti
call
fcmovu
loop
in
rcl
in
ljmp
out
loope,pt
ret
ffreep
fdivr
loopne
mov
faddl
xor
iret
lret
jmp
cmp
mov
jmp
in
nop
cmc
xchg
sub
in
cli
fucomp
fpatan
jmp
cmp
cmp
in
xlat
faddl
mul
mov
test
and
rcr
out
xor
enter
aaa
rcr
into
ret
xchg
mov
test
in
fisttps
out
das
ljmp
in
clc
cmp
aad
sti
in
iret
in
addb
in
xor
enter
xor
clc
ljmp
bnd
fsubp
in
std
mov
xor
imul
in
std
ror
ljmp
mul
jecxz
fcomp
xlat
std
std
in
in
mov
aad
clc
idiv
hlt
cld
ss
icebp
fdiv
shl
repz
hlt
fmul
mov
fcom
in
in
icebp
xchg
shl
xor
into
sti
lret
sti
cmp
xchg
in
in
cmp
cmp
mov
call
divb
enter
ljmp
rcr
mov
or
out
in
mov
sub
leave
in
aaa
out
xor
cmp
into
inc
loopne
test
xchg
xlat
cld
loopne
fadd
out
test
into
ljmp
call
cmp
test
in
jmp
out
nop
out
aam
ss
sti
xor
cmp
jmp
cmc
in
fldl
fsub
fucomip
or
test
fbstp
in
in
into
into
divl
out
shr
xlat
ret
inc
fdiv
out
out
jmp
ljmp
aaa
imul
fucomi
cmp
fcomip
int3
cmp
cmp
call
orb
ljmp
in
enter
out
sarb
rcl
cli
hlt
enter
stc
in
icebp
xchg
jmp
ss
in
xor
rcr
loop
out
in
ljmp
loope
icebp
fadd
xor
jmp
shll
cmp
fnstsw
rol
aam
neg
and
call
xor
jmp
hlt
aaa
sti
cli
cld
stc
div
faddp
push
inc
leave
nop
into
ror
fsubr
xor
fdiv
enter
test
std
cmp
test
or
xchg
fcomip
sub
cmp
lock
out
in
fcomp
fsubp
out
repz
out
std
mov
addl
sarb
xor
fucompp
sti
cmp
int
cmp
cmp
fadds
ljmp
xor
int3
jmp
ljmp
in
incl
or
mov
jmp
xor
in
in
ljmp
out
loope
in
fucom
mov
out
fcoml
lret
out
xor
hlt
icebp
in
stc
icebp
sbb
cmp
jecxz
orb
decb
int3
lock
rcl
int
repz
xor
cli
cld
idiv
cld
in
test
sti
loope
enter
leave
in
repz
ror
in
xor
fsub
aas
out
fdivp
std
clc
jecxz
out
rorb
idiv
ss
aad
ror
idiv
loop
into
cmp
loope
jmp
mov
out
in
cld
in
lock
xor
stc
lret
iret
cmc
fcmovnb
lock
cmc
out
jecxz
xchg
repz
jmp
shrb
xlat
leave
aad
testl
mov
ljmp
in
shl
lret
repz
hlt
in
repnz
in
rcl
roll
loop
aam
or
sbb
ror
repz
icebp
repz
lret
ds
icebp
movl
xchg
shl
xor
xor
cmp
cmp
out
and
lock
jmp
loop
aam
rcl
in
rcr
stc
in
and
enter
fcoml
sub
fld
repz
int
out
sub
add
cmc
test
loopne
in
test
clc
lds
aas
fdiv
ffree
aad
test
xchg
neg
in
xchg
mul
xor
out
je
mov
addl
jmp
jmp
vpsrlq
rcl
aad
xchg
mov
in
scas
repnz
cmpsb
add
shl
ss
roll
stc
cld
out
in
sbb
repnz
fdiv
shl
stc
fucomi
jmp
cmp
jecxz
mov
iret
leave
int
xchg
lock
jmp
ss
cmp
ds
out
rol
ret
std
roll
cli
mov
lret
stc
xor
cmp
sti
clc
cmp
ret
xor
add
call
iret
orl
shr
loop
rcr
xor
cmp
jmp
loop
out
icebp
cmp
testl
loope
sub
xlat
fld
fcmovne
into
fdivrl
sbb
call
popl
loope
ror
rcr
cmp
int
cmp
cmp
out
xor
loopne
cmp
rcl
adc
lock
shl
rcl
fdiv
call
cmp
adc
aaa
not
rcl
xchg
xchg
mov
mov
fcom
clc
rcr
cmp
add
les
loop
jmp
stc
icebp
shll
in
enter
into
add
out
call
cld
repnz
shl
into
lret
xor
aaa
hlt
xlat
push
stc
clc
in
jmp
fdivrl
and
lock
filds
lock
repz
hlt
std
in
aas
cmp
in
ffree
mov
mov
xchg
loopne
lock
fxch
cli
test
rcl
cmp
loope
incl
int
xchg
or
test
clc
fcmovnu
cld
lock
loopne
testb
out
sti
in
mov
cmc
xchg
rol
lock
sar
hlt
rolb
repz
jecxz
jecxz
in
into
into
test
ljmp
icebp
in
sarl
sar
lock
addb
leave
leave
sbb
enter
loope
xor
hlt
int
repnz
shl
fsub
int
cmpl
in
hlt
out
leave
loope
ljmp
xor
std
cs
xor
ror
orl
xchg
out
iret
ror
lock
cli
jmp
ror
loope
sar
faddl
leave
in
out
mov
call
aam
out
fnstcw
call
repnz
xchg
cmp
call
int3
cmc
into
lret
ljmp
out
cmp
inc
aad
cli
call
cld
mov
test
jmp
loop
rcl
lock
lock
xlat
stc
fcmovnbe
test
ds
cmc
mov
jmp
lea
aam
in
rcl
imul
jmp
cmc
repnz
loop
icebp
out
shl
test
cmpb
xchg
xchg
loopne
int
int3
cmp
ret
sti
lds
idiv
mov
in
mov
in
lret
fsubr
cmp
clc
stc
rcr
flds
std
test
xchg
orl
aaa
in
rol
fmul
ljmp
shr
les
cmp
xchg
sub
rcr
in
in
out
out
aad
cmc
cmp
aas
cmp
lock
repz
clc
out
mov
loop
in
cld
in
shr
fdivs
fcomi
out
fsubrp
jecxz
in
int3
imul
test
loopne
addl
lret
call
ss
enter
fnstcw
fucomi
loopne
jmp
xchg
rorl
jecxz
hlt
aam
fcmovbe
into
int3
repnz
ret
movb
out
fld
in
loopne
in
in
rol
ret
iret
aad
ds
aas
icebp
xor
in
leave
out
lret
in
ljmp
out
fidivrl
fiaddl
hlt
cli
div
aam
in
fimuls
shl
in
sti
mul
cld
shr
cld
aad
sti
fptan
mov
hlt
stc
mov
nop
mov
int3
loopne
out
shl
iret
shr
cmp
fsubr
jmp
fiaddl
int
lock
ret
hlt
cmp
fnstcw
cmp
cmc
call
test
sti
ror
repz
xlat
aaa
neg
jecxz
icebp
ror
out
adc
out
rol
cmp
sar
xor
out
icebp
nop
out
jmp
clc
fsubr
loopne
stc
int
ret
iret
in
loopne
mov
int3
stc
fsts
test
cmc
xor
xor
cmp
icebp
fsub
repnz
cmp
je
mov
jmp
push
mov
sub
incl
mov
push
or
push
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
rol
sarb
aas
rcl
mov
idiv
mov
jge
jl
cmp
in
out
or
out
mov
mov
lock
enter
enter
rcl
in
xlat
lds
int3
addb
xor
out
loop
sar
cmp
cld
sti
xlat
ret
test
aam
fsubr
mov
fsub
mov
in
cli
hlt
cld
sti
sub
sarl
in
fcmovnb
loop
fsub
fst
xchg
jmp
cmc
std
in
lock
fdivrs
rol
fsubr
movb
out
aad
in
xor
ror
not
hlt
cld
cmp
shl
clc
fdiv
mul
cld
jmp
out
repz
out
enter
rcr
aas
aam
div
sar
mov
jmp
orb
neg
leave
ret
into
test
cmp
inc
cld
loope
jecxz
xlat
mov
cmp
test
iret
sar
xchg
xchg
shl
not
sub
loope
cld
aas
int
cli
jecxz
jmp
fimuls
std
out
xor
repnz
icebp
xor
aaa
shr
sbb
fadd
hlt
hlt
rcr
ljmp
loopne
in
test
cli
sub
fcmovnbe
call
cmc
hlt
into
fstp
push
call
cld
enter
ljmp
lret
jmp
lock
fdivrs
rcr
xlat
in
fisttpll
mov
out
in
loop
loopne
fidivrl
sti
call
rcl
xchg
mov
test
out
fsubrp
loop
rcl
mul
cmp
cmp
iret
shl
sti
xchg
cli
enter
fcmovne
std
xchg
xchg
lret
out
fdivr
ss
cmp
iret
ror
sarl
fadd
mov
fadd
lret
in
inc
int
out
out
aas
jmp
shr
xlat
sti
call
sar
in
hlt
shr
sbb
xchg
loopne
jmp
cmp
xor
cmp
int
addl
mov
jmp
out
test
xlat
ret
fnsave
fdiv
cmp
aas
cli
test
aad
enter
mov
fsub
call
iret
int3
enter
int3
idiv
out
ror
leave
cmp
incb
icebp
fimuls
in
aam
fcmovnu
ss
aaa
cmp
fimull
sti
mov
fimull
fdivs
repz
lret
loop
rolb
in
in
fildl
xchg
lret
repnz
cld
hlt
sbb
icebp
lock
in
xchg
stc
fstl
aas
ror
call
sti
lret
sar
shl
aam
leave
jmp
lea
ss
lret
std
cmp
aad
stc
hlt
test
mov
repz
in
jmp
mov
repz
hlt
test
fcom
in
call
iret
or
f2xm1
rol
sub
std
test
stc
loope
lock
xor
ss
sub
shl
int3
iret
shl
icebp
xor
jmp
test
sti
cli
out
cmp
in
ljmp
fcomi
testl
mov
int3
out
repz
xlat
div
fmulp
sti
aad
shl
jecxz
loopne
int3
jecxz
jecxz
sub
hlt
sub
xlat
cmp
call
sarl
fdivp
std
filds
leave
ret
hlt
xlat
xor
div
xor
cmp
fidivrl
ds
cmp
fsubp
loop
cli
sti
mov
jmp
in
call
test
int
fucomip
hlt
ljmp
repnz
rorb
sub
idiv
cmc
cld
in
jmp
loop,pt
ret
repnz
xlat
cmp
fcompp
stc
lock
adc
xlat
lret
aad
xor
repz
in
shl
cmc
fsqrt
fucomi
incl
aad
out
in
xor
leave
jmp
aad
aas
test
xchg
loop
enter
nop
in
nop
call
xor
sub
std
incl
fcmovnbe
clc
xor
cli
ror
xchg
shr
das
leave
out
cmp
lock
fdivrp
roll
cli
fucomip
in
fists
lret
xor
ljmp
cmc
sti
rcr
push
xor
xchg
int
test
ficoms
jecxz
fstpt
enter
std
loop
shl
jmp
mov
jmp
lret
test
sub
cs
in
jmp
into
clc
repz
rolb
fcmovnb
cmp
lock
rol
clc
into
repz
call
fcmovu
idiv
cmpb
aam
ret
out
out
loope
test
xchg
xlat
jecxz
in
xor
or
idivb
orl
add
sbbl
push
neg
jmp
int
aad
ffree
fstp
stos
push
push
shrb
add
jge
jl
icebp
repnz
loop
out
sbb
into
shl
repnz
repnz
xor
jecxz
rol
rcr
xlat
fcmovnbe
jmp
sbb
lret
out
divl
cmp
dec
fcmovnu
ss
shl
cmc
fmuls
in
fimull
xor
in
xor
int3
cmc
in
loope
xlat
aam
stc
test
fdivr
aas
cli
cld
into
mov
lret
out
test
rol
divb
cmp
stc
cli
cmp
lock
out
fcom
in
int
std
into
loopne
ljmp
aam
xor
repz
cmp
rol
test
jmp
rcll
ss
stc
lret
cmp
flds
ds
test
mov
test
test
mov
ljmp
fcomp
repnz
cld
iret
sarb
repnz
lea
test
rclb
out
int3
out
xlat
aad
cld
fcomp
iret
sti
fninit
sar
jecxz
cli
icebp
orl
jecxz
clc
in
loope
cmc
fdivr
cmp
fsubr
enter
fildl
into
sub
hlt
aam
xor
in
sar
leave
in
test
addl
cmc
ss
ror
fucomip
cmp
aam
repz
mov
leave
fucomp
call
test
loope
test
cld
cmp
sar
ss
std
ret
fcmovnbe
sbb
jmp
rolb
jecxz
xlat
test
icebp
lock
sti
rcl
aad
and
int3
fdivr
lea
out
in
fcmovnbe
rcr
into
fmulp
aad
cmc
jmp
test
mov
loope
repz
ret
leave
clc
enter
loop
inc
jmp
xlat
stc
call
iret
loope
jecxz
lock
mul
cs
fucomip
fiadds
loopne
leave
jecxz
hlt
test
int
icebp
shr
xlat
jmp
cmp
jecxz
repnz
in
clc
jmp
test
fst
hlt
lock
xor
xor
rol
into
cli
loopne
in
in
cli
fcmove
mov
icebp
out
int
out
fnstenv
fxch
jmp
cli
ljmp
test
in
repnz
icebp
ljmp
ljmp
jmp
ljmp
xchg
ror
in
xor
cli
rolb
xchg
jecxz
stc
leave
ss
rcr
ljmp
rcl
loop
xchg
movb
out
in
iret
xor
lret
fsubrp
int
repnz
stc
aam
in
in
aam
in
in
cli
loop
out
iret
xlat
ret
fadd
int
aam
loopne
cmp
test
jmp
leave
jmp
fcmovu
into
lock
repnz
fcmovbe
fdivl
fistpll
cmp
test
in
loop
adc
in
mul
std
rolb
out
loop
out
clc
lret
call
out
stc
jecxz
out
fadd
orb
call
hlt
lret
call
fcmove
cmp
test
cli
fstp
int
loop
enter
loope
in
loop
jmp
in
loopne
into
roll
out
push
loope
ficoms
ret
ret
in
lock
xlat
in
iret
int
and
shr
sti
aam
cld
lret
fsubr
xlat
xor
aad
out
repnz
into
leave
ss
and
xchg
xchg
fcmove
mov
mov
cld
test
shl
imul
ljmp
in
ret
cld
movl
loopne
xor
enter
out
fchs
hlt
cmp
jecxz
std
enter
cli
jmp
lret
lock
xor
ljmp
rcl
aas
aas
sar
repnz
hlt
orl
xor
into
fucomi
repz
call
div
lock
neg
loopne
fmul
test
flds
lret
out
cmp
div
into
into
out
shl
loope
repnz
cmp
loop
xchg
mov
in
ror
aam
iret
fadd
in
pushl
loopne
fcomi
or
aas
in
ljmp
test
sar
sub
cmc
xor
cmp
aam
repz
fucom
neg
clc
stc
div
cld
xchg
mov
out
fsub
in
shlb
sub
fcom
xor
cmp
cmp
sti
clc
rcl
sbb
fcoml
xchg
icebp
sub
xor
out
cmp
cmpb
fcomi
mov
fsubrp
sub
mov
sub
lock
in
fdiv
lock
loope
mov
or
mov
addl
xor
xorl
movl
sbbl
jmp
rcl
int3
fstp
arpl
test
xor
push
jle
jge
jl
hlt
icebp
in
aad
fcom
out
jmp
out
out
loopne
int
ljmp
jecxz
loopne
rol
ror
ror
clc
std
mov
leave
enter
repnz
loopne
xor
repnz
ret
clc
lock
in
ret
incb
rcl
xor
aam
icebp
sti
aam
repz
fiadds
filds
clc
in
cld
xchg
sbb
out
test
fcom
fcmovu
cli
ret
sbb
int
xchg
in
xor
in
cmp
into
sar
clc
cmc
loopne
rol
xlat
fcomp
in
out
mov
out
orb
in
out
fucomp
ss
xor
lret
xlat
clc
leave
loopne
out
and
xchg
loope
lret
out
imul
cli
jmp
cmp
cmp
sar
addb
xchg
sbb
sub
leave
sti
xor
int
xlat
cld
aam
rcr
lret
int3
xchg
repnz
xchg
xor
lret
in
in
das
lret
enter
jecxz
aam
movb
out
orl
in
leave
sar
repnz
out
leave
jmp
loopne
loope
into
ljmp
test
rcr
iret
lret
cld
aad
xchg
sbb
repz
jmp
int3
loopne
loop
sar
clc
cmp
repz
jmp
mov
fidivs
jmp
icebp
cmpl
fadd
sarb
xchg
enter
mov
lret
aad
in
das
xor
jmp
ljmp
fdiv
fucomip
jmp
xchg
ror
leave
rolb
clc
stc
loop
xor
cmp
enter
imul
fldl
cld
loopne
in
mov
stc
xor
cli
fcmovnb
fcmovbe
cmp
cmp
in
ret
xlat
test
repz
cli
mov
cli
test
xchg
ret
cmp
icebp
lock
hlt
icebp
rcl
iret
sti
xchg
cmc
fmull
int3
iret
out
in
xchg
repz
fcom
call
idivl
enter
loop
xchg
loopne
mov
into
loope
std
lret
xlat
repz
ret
int3
enter
lret
ret
ret
testl
mov
fst
sti
loope
ror
cmc
cmp
shl
mov
loop
out
roll
shl
aaa
cmp
sar
lret
flds
stc
enter
lret
out
incl
ljmp
in
shl
cmp
vcvttpd2dq
sti
aad
loop
std
loope
xchg
icebp
leave
das
leave
cmp
jmp
aad
fdivrs
div
in
int
out
hlt
test
leave
sar
mov
into
call
rol
hlt
sub
stc
not
int3
rcr
iret
loope
aaa
dec
sti
mov
mov
nop
in
aad
iret
xor
not
xor
into
fucom
fdivr
rol
cld
clc
mov
cli
mov
ss
rol
out
in
aaa
div
into
iret
lock
loop
std
idiv
jecxz
xchg
iret
rol
xor
lret
int
in
cld
cmc
roll
aad
call
repz
icebp
das
shlb
xor
adc
cmp
shl
mov
or
xor
in
ret
not
xlat
repz
cld
jecxz
out
jmp
in
cld
fildl
aad
cmc
xlat
xor
out
cli
in
fcomip
rcl
rcr
fmul
clc
test
ljmp
stc
repz
xor
leave
in
incb
sti
xlat
in
fsub
xlat
jecxz
loopne
cmp
in
icebp
out
shl
xlat
int3
in
xor
aas
stc
ljmp
call
add
fcmovnu
lret
jmp
fidivrl
ljmp
int3
rcr
cmc
mov
loop
into
sti
fiaddl
fyl2xp1
in
aam
stc
int3
jecxz
stc
sti
fdecstp
jecxz
fldl
enter
shl
xor
cmp
addb
ret
out
roll
lock
ljmp
xabort
test
ss
adc
lret
out
cli
out
xchg
and
in
in
stc
lret
out
shr
not
xor
inc
jecxz
out
int
out
lret
div
cs
fxch
sarl
cmc
aad
test
loope
fldl
enter
rol
aas
ret
loop
clc
out
aas
repz
lock
ret
hlt
ret
ret
sti
fmull
call
leave
out
out
aas
fninit
jecxz
inc
lock
xchg
fs
add
push
dec
add
movl
jmp
xlat
enter
enter
xchg
rol
inc
mov
lret
or
jl
cld
lock
roll
mov
dec
mov
mov
ror
shr
int
fcmovbe
in
fsubrp
sbb
lds
fucomip
mov
sti
jecxz
lret
das
out
in
lret
cmp
out
cmc
iret
not
stc
cld
cmp
mov
enter
mov
loop
shl
xor
jmp
fadd
cli
mov
testl
mov
fsubr
cmc
cmp
rcr
test
ds
ljmp
sub
jmp
stc
fistpll
cmp
test
fcomip
incl
testl
xor
repz
lock
out
leave
cmp
cld
aas
out
ret
cmp
repnz
in
mov
fabs
test
decl
in
cmp
cmp
ret
aad
loop
cli
stc
clc
in
loop
fiadds
jmp
int3
in
icebp
into
rcl
loopne
cmpb
out
aad
loopne
cmp
ror
int3
lret
leave
cmp
sti
in
ret
repz
int
xchg
incb
ror
fstp
fcmovu
aas
fdiv
ret
loope
aam
fadd
loope
lret
lret
ror
rolb
icebp
int
lret
in
loop
repz
rorb
xchg
popl
in
xor
cli
xor
lock
repnz
sbb
ljmp
xchg
xchg
in
ret
xlat
in
cli
xor
ljmp
sub
lret
lock
rol
and
sti
jmp
not
neg
cmp
lock
fimull
in
iret
jmp
into
xor
xor
into
aam
int
fsubr
and
aad
sbb
ret
neg
fdivr
lret
shll
test
loope
rcr
aad
clc
not
ret
mul
xlat
mov
mov
jmp
ror
cmp
test
ds
test
ljmp
xor
int
ror
enter
out
stc
sub
int3
rcr
fucom
xor
shl
stc
lret
rcl
repz
ds
xlat
loop
rol
mov
fsubr
out
lock
out
enter
jmp
call
iret
in
out
clc
test
cld
jmp
test
sub
fdivp
in
loope
fincstp
cmp
sbb
mov
mov
fbstp
xor
xor
aam
repz
sbb
testb
int
hlt
aad
ljmp
fucomi
hlt
in
sar
vpsubw
cmc
sar
adcb
xor
aaa
cmp
call
jmp
adc
shl
xchg
mov
jmp
loop
xchg
mul
stc
in
in
aam
lock
int
fnstcw
jecxz
aam
ljmp
lds
call
lret
ror
cmp
hlt
incl
out
cmc
adcb
ljmp
lret
shr
stc
loopne
test
test
fucom
mov
jecxz
loopne
int
shr
out
ljmp
into
leave
rolb
sub
fists
int
icebp
lret
cld
repz
cli
incb
jmp
clc
in
cli
mov
cmp
iret
sarl
shl
jecxz
leave
enter
sti
iret
sub
xchg
in
xor
in
xor
xor
icebp
cld
xor
repnz
mov
clc
test
loop
loop
sub
hlt
xor
leave
rcr
lret
clc
aam
ret
iret
out
and
mov
fdivrp
mov
loop
vpsrld
hlt
in
jecxz
stc
iret
test
stc
in
rolb
orl
stc
stc
shl
cli
hlt
into
ds
in
loop
xlat
shl
fucom
jecxz
std
jecxz
roll
jmp
clc
fcmove
aad
xor
fcmovnbe
lds
cli
fucom
sti
loopne
xchg
out
ror
out
aam
ljmp
cmp
fcomip
out
ret
jmp
jmp
aad
xor
iret
shl
iret
out
std
out
hlt
loopne
neg
cmc
neg
out
cli
addb
int3
int
xor
cmp
sti
shl
clc
stc
xchg
movl
leave
sar
xlat
xor
jmp
leave
sbb
sti
fcomp
rol
rolb
sub
icebp
cld
into
out
loop
xor
cmp
out
cmp
cmp
movl
jne
mov
movl
mov
movl
mov
mov
movl
jmp
aad
leave
fcmovne
fcmovbe
test
cld
sti
lods
cmpsb
enter
jge
jl
fadds
cld
fisttps
sub
cld
xor
iret
ljmp
ror
in
out
faddl
jmp
jmp
nop
shlb
divb
aam
mul
in
ljmp
cld
fldl
int3
cmc
mov
aam
cmp
repnz
cmp
dec
ret
jmp
fimull
xor
fxam
cmp
lret
cmc
repz
loop
fdivrs
ret
mov
int
xor
xor
fcmovnb
in
cld
jmp
div
sarl
jecxz
call
sub
leave
jecxz
repnz
stc
fcmove
aam
stc
add
ljmp
cmc
ror
rol
in
ffreep
fdivl
cld
ror
std
ret
fcmovnbe
aas
vmaskmovdqu
shl
mov
addl
jmp
fbstp
icebp
cmp
aas
xlat
enter
iret
std
out
xchg
mov
ror
int
stc
out
out
jecxz
in
std
cmp
shl
jmp
lret
shr
icebp
xor
jmp
cmp
enter
icebp
not
xlat
into
sti
xlat
out
fsin
in
fcmovu
mov
aad
iret
rcr
stc
neg
hlt
fxch
aas
icebp
shl
jmp
fdivp
or
jecxz
and
xor
leave
fcmovbe
cmc
std
jecxz
sar
cmc
xchg
adc
cld
enter
lret
ljmp
sti
lret
out
std
fadd
fmul
repz
loopne
leave
clc
filds
xrelease
call
in
lock
clc
repz
stc
cmp
out
mov
fdivrp
xchg
mov
mov
out
lret
call
rol
lock
fisttpl
cld
mov
sar
lret
int3
rcl
int3
loop
hlt
leave
cmp
call
cmp
fcmovb
mov
ljmp
ss
out
lret
dec
shl
sar
div
in
in
out
cmp
rol
out
fcmovnbe
lret
repz
int3
cmp
aas
cmp
cli
rcr
filds
mov
mov
test
jmp
fisubrl
sar
ljmp
aad
testb
std
fsubrp
jmp
mov
shrl
aaa
lock
xor
aad
fildl
fmuls
mov
ljmp
ss
repz
repnz
sar
clc
test
test
sti
in
mov
loop
out
aaa
aaa
fcmovu
in
aam
leave
repnz
jecxz
fxch
hlt
cld
in
sub
std
fisttps
out
enter
call
cli
fstpt
cld
loope
aam
fdivr
test
mov
in
test
xor
int3
rcl
cmp
xlat
cld
cmpb
rcr
lds
cmc
mov
and
xchg
loop
out
cmp
iret
lret
cli
clc
repz
out
fcom
fdivp
std
xor
in
mov
call
out
sarb
ror
idiv
ffree
loop
aas
sti
cld
jecxz
xchg
xchg
xchg
aad
lret
xor
cmc
clc
int3
cmc
ljmp
test
in
fmull
xor
fnop
out
jmp
and
xchg
loop
fucomip
xchg
test
roll
xor
enter
cmp
stc
int
xor
out
ffree
and
pop
orl
ror
sub
rcr
fdiv
int
loopne
rol
rolb
in
loopne
fsubp
ror
ljmp
aas
dec
fld
jecxz
cmp
cmp
fsub
in
addb
idiv
in
std
cmp
ret
shr
int3
out
loopne
loope
incl
mov
ds
aaa
enter
fcomp
lret
cmp
out
sar
repnz
int
out
fucom
aad
xor
repz
fucom
cmp
cmp
clc
loop
cli
out
ret
out
rcr
out
cmp
out
into
xor
sar
sbb
shl
mov
mov
mov
loop
and
out
shl
cmp
xlat
sti
xor
stc
loopne
test
cld
fdivrl
stc
decb
and
repnz
stc
into
call
loopne
xlat
test
xchg
addl
sbb
hlt
out
xor
lock
jmp
iret
cmp
cmp
testl
loope
cld
cs
shlb
jmp
in
fdiv
aas
fneni(8087
fcmovu
ss
fucom
fsub
aad
mov
mov
enter
jmp
cli
xlat
mov
mov
jmp
movl
cmp
jne
or
andl
or
mov
subl
jmp
int3
ds
rcl
iret
or
fadd
leave
pop
jle
jge
jl
call
clc
jmp
addl
rol
in
cmp
cmc
icebp
out
mul
cli
hlt
in
aad
sti
div
xchg
call
mov
fcomip
sub
xor
shr
cmp
cld
cmp
not
rcl
sti
rcr
decb
xchg
shl
int3
aam
std
out
xor
fildl
sbb
iret
out
fisttpll
aam
int
call
fnstsw
call
add
fsubr
leave
ljmp
test
xor
int
aas
xlat
aas
jecxz
loope
mov
test
in
iret
mov
sub
cmc
std
out
fnsave
in
cmp
ror
loop
cmp
fxch
fsubr
sti
test
in
repnz
jecxz
fcomi
cmp
int3
rol
not
aad
fcmovnb
aad
std
faddl
loope
iret
in
xlat
out
cmp
out
lret
int3
addl
hlt
stc
xchg
out
lea
aas
out
xor
int
out
rcl
in
cmp
cmp
sti
xchg
loopne
fimull
rol
orb
ss
lret
cmp
ds
shr
xlat
loop
mov
in
mov
fimull
sti
loop
jmp
cld
ror
and
repnz
aam
loopne
fimull
aad
rcl
cmp
cmp
in
loopne
jecxz
repz
xlat
fcomp
fsub
in
rcll
ret
xor
cli
sbb
rol
cli
and
icebp
xchg
xchg
out
std
mov
aaa
jmp
cli
out
into
lret
hlt
cmc
loope
aad
neg
sbb
lock
hlt
aaa
shl
cmp
int
icebp
loopne
ds
rcr
fucomp
call
jmp
iret
lock
fcmovnu
hlt
cmp
fdivr
addl
fcmovb
fisttpll
lret
call
jecxz
cmc
xor
aaa
cmp
ljmp
aam
decl
iret
int3
jecxz
jecxz
xor
out
xlat
jmp
ds
sub
clc
call
or
xor
mov
sti
icebp
jecxz
repz
div
out
sbb
fsubr
ljmp
xor
into
imul
rcl
call
cmp
call
std
mov
fdivrp
in
nop
out
xor
lret
repnz
out
cmc
fsin
ds
aas
ret
stc
xchg
in
iret
iret
loopne
lret
xchg
out
out
in
imulb
out
testb
into
cld
ds
rol
in
std
int
lock
in
lea
aaa
fdiv
ljmp
fcmovnu
out
cmp
fcomip
aam
aam
int3
loopne
sti
sti
call
sub
in
clc
repz
clc
in
fst
cmc
shl
std
test
int
cmc
ret
int3
int3
cld
out
cmc
repz
and
cld
aas
leave
test
ljmp
leave
jmp
fcomp
stc
xor
fcomi
loop
mov
shl
mov
stc
lret
ret
mov
in
divl
ret
sar
ret
int
leave
cmp
in
ljmp
rorb
loopne
mov
mov
out
xor
lret
std
hlt
shr
cmp
stc
test
std
aas
and
loope
les
sub
aad
xor
ss
aaa
fdiv
hlt
icebp
fcmovu
fdivp
loope
xlat
hlt
mov
mov
hlt
xor
icebp
cmp
in
xor
shr
fucom
rcl
add
loope
xlat
mov
call
das
lret
ret
out
push
jmp
repnz
shl
clc
xchg
and
orl
xor
xor
addb
enter
fadd
lret
test
call
fdivs
int3
xor
in
cld
test
enter
fdivrp
xchg
filds
rcl
rcr
rcr
into
cmp
rol
ret
lock
mov
out
nop
loop
ror
ljmp
aam
fdivrs
faddl
jecxz
int3
clc
ror
jmp
lret
xor
aaa
out
into
cmpl
test
out
adc
fucom
fimuls
in
loop
int
enter
leave
shl
jmp
int3
loope
fld
neg
test
rolb
repz
in
aaa
fdivr
xlat
enter
fcomp
std
sar
fadds
out
loope
jmp
out
ljmp
int
in
in
fadd
jmp
ljmp
repz
in
in
cmp
fsubrs
inc
or
add
fs
add
adc
mov
incl
add
orl
push
call
movl
incl
cmpl
jb
movl
jmp
cmp
movl
jmp
ror
int
lret
xchg
or
mov
jle
jge
jl
idivb
int3
repnz
sbb
aad
mov
shr
das
xor
enter
div
test
cld
cmp
loope
sti
bnd
fstp
std
loop
in
xlat
xor
lret
iret
leave
xor
fxch
xor
lds
fiadds
mov
ljmp
ror
xor
into
rcr
lock
fincstp
xor
in
mov
sti
xchg
sti
fiaddl
mov
shll
out
cli
cmp
sti
aas
xlat
cmp
in
jmp
loope
fmul
mov
call
mov
sarl
jecxz
into
ret
test
cmc
cli
stc
jmp
loope
call
leave
xlat
xor
lret
ds
incl
fucomi
clc
fcomip
xchg
repz
xchg
ds
xlat
repz
cli
into
in
ljmp
test
fdivp
loope
fmul
lret
mov
mov
in
lret
cld
cmp
loop
rcr
idiv
sub
enter
movb
xor
enter
fneni(8087
add
loopne
rol
addb
rcl
ror
xor
cmp
fdivp
sarb
shl
leave
cmc
repz
int3
int
icebp
mov
mov
xor
xor
fcmovnb
fsubr
stc
aam
int
rcl
repz
fisttpl
rolb
ret
out
ljmp
fst
cli
stc
shl
leave
test
fsts
jmp
rcr
les
iret
lret
icebp
test
loope
loopne
jmp
out
fiaddl
fadd
fldpi
into
aad
out
lock
aam
fdivrs
jmp
cli
call
jmp
xchg
lock
aam
shlb
icebp
jmp
xlat
iret
xlat
into
lock
call
in
and
xchg
loope
fcom
fadd
stc
out
hlt
enter
sbb
shl
loope
in
ds
lret
xchg
int3
mov
fdiv
out
lret
enter
xor
repnz
xor
in
mov
leave
decb
ljmp
icebp
ds
loop
adc
in
int3
in
icebp
repnz
int
out
xor
cmp
call
lock
repnz
loop
aas
int
xchg
out
iret
ljmp
in
iret
icebp
cmp
fnstsw
test
shl
ljmp
xchg
repz
shlb
cmp
ljmp
out
lds
cmp
ljmp
call
cmp
cmp
aad
loopne
fdivr
mov
ret
loope
in
enter
int3
shlb
std
lock
rcr
repnz
fucomip
int3
in
xchg
mov
sti
shl
repnz
cmp
icebp
cmp
ret
cmp
in
jmp
into
xchg
mov
jmp
xor
lret
cmp
fabs
out
hlt
aad
ret
add
fld1
mov
lock
in
xor
divl
jmp
rcr
fnstsw
flds
out
out
loope
xchg
and
repnz
jecxz
sti
rol
xlat
clc
fdecstp
neg
cld
push
iret
in
in
test
aam
mov
into
call
das
rol
in
repnz
leave
jmp
lock
call
clc
ror
shl
ljmp
div
out
cmc
std
out
hlt
cmc
sti
in
fstp
cmc
call
fsub
fucomip
call
mov
addb
incb
add
leave
loope
loopne
in
lock
std
out
xor
lock
aas
shl
fiadds
out
lret
in
in
mov
iret
repz
xor
lret
jmp
xor
lock
cli
cmp
roll
fdivr
in
cld
out
xchg
loopne
int3
aaa
cs
leave
ss
out
cmp
and
ret
ret
lret
inc
sti
fimuls
leave
int3
xor
out
aad
lret
in
ret
fisttpll
loope
loope
fisttpll
leave
test
fdivr
xlat
aas
fcmove
into
clc
call
mov
loope
out
xor
xor
hlt
repz
leave
std
lret
and
aam
incb
out
jmp
ds
xor
out
xor
shl
repz
ret
hlt
fcmovu
les
rcll
into
into
in
cmp
ljmp
mul
idiv
test
out
rcll
xor
cs
aaa
sti
lret
cmp
in
in
in
fucomip
leave
std
in
fiaddl
int
fld
jmp
jge
add
xor
or
adc
movl
orl
mov
sbbl
mov
xorl
jmp
rcl
lret
rcl
cmp
mov
dec
and
jge
jl
cmp
hlt
cmc
iret
fsubrp
sti
std
mov
fucomip
cmp
into
jecxz
leave
icebp
enter
out
lret
or
iret
aad
cmpb
fdiv
jmp
xchg
iret
in
cmc
in
aad
cmp
stc
lock
repz
fcomip
in
loope
fmulp
lea
fst
into
xchg
in
lret
hlt
xor
cmp
cmpb
rcr
adc
xlat
roll
out
mov
xchg
jmp
lock
xor
aas
jmp
ds
iret
decb
lock
test
cmp
ds
rolb
leave
sbb
enter
out
repnz
xor
sarb
jecxz
test
in
ret
out
lret
test
xchg
lret
mov
ret
fcmovbe
push
iret
int
iret
fst
cmc
fsub
filds
out
nop
lea
xlat
jmp
out
out
ror
ljmp
ror
ret
jmp
cli
std
loop
jmp
mov
sub
repz
fidivrs
std
iret
fld
loope
out
fcomi
imul
in
jmp
cmp
cmc
loopne
call
cld
lret
loopne
addl
jecxz
fildl
xchg
mov
call
iret
aad
stc
out
ret
loopne
out
call
test
in
loopne
cli
sub
xor
ret
ror
fchs
icebp
lret
in
jmp
mul
orl
aam
xor
cli
out
leave
int
loopne
std
sbb
jecxz
faddl
in
in
int3
jmp
repz
xor
ljmp
in
icebp
ljmp
fcmovbe
out
out
xchg
lock
into
std
subl
in
iret
out
cmp
std
xchg
cld
mov
in
jmp
xchg
out
div
in
shl
cmp
xlat
loopne
cli
repz
call
out
lret
mov
repz
int
int
testl
xlat
jecxz
test
orb
aad
cmp
xor
stc
jmp
aas
cmp
aas
fcmovne
shl
mul
ret
decl
mov
int3
ror
sub
aaa
icebp
jmp
clc
shl
sti
aad
jmp
neg
int
rorb
enter
out
iret
ljmp
test
out
loop
fmulp
cld
fst
std
ljmp
icebp
out
rcl
std
iret
cli
sti
cmp
cmc
rol
jmp
mov
out
lock
fmul
lret
call
xlat
jmp
hlt
in
repz
test
fldlg2
cmp
ror
aad
out
loopne
test
int3
div
aam
xlat
cmp
fnstsw
ror
sti
cmp
loopne
test
loop
lret
in
cmp
loop
int3
fcos
rcl
cmp
out
sti
repnz
repnz
int
icebp
mov
addl
xor
dec
cmp
ret
iret
int3
iret
iret
xlat
out
mov
rolb
aam
jecxz
cmp
fdivrs
icebp
aam
aam
jecxz
fcmovb
cld
cli
test
in
out
xor
fcmovne
xlat
les
sti
cmp
in
fildl
idiv
loopne
add
out
mov
repz
cs
aad
xor
not
iret
cmp
orl
jecxz
incb
call
jmp
jmp
iret
leave
cmp
loopne
call
cmp
and
shr
repnz
fcmove
stc
repnz
int3
cmp
sbb
ret
lret
icebp
shrl
xlat
fincstp
enter
rcl
incl
and
mov
int3
call
cld
lock
lds
fsubr
cmc
in
lock
repnz
aas
out
xlat
ret
test
int
xlat
leave
leave
jmp
ljmp
cli
lret
cmp
cli
cmp
rolb
int
test
xchg
ds
in
leave
in
sti
fucomp
cld
fstp
jecxz
lret
fdivr
fiaddl
xlat
fcmove
mov
div
lock
aam
int
aas
ror
rcl
ss
call
iret
into
lret
jecxz
int3
ss
rcl
repz
in
mov
loope
out
flds
int
xor
enter
leave
in
lret
repz
int3
clc
stc
out
xor
ljmp
rcll
jecxz
cmc
out
test
fildl
jmp
cli
int
test
hlt
jmp
shr
repnz
clc
lock
hlt
out
div
incl
nop
mov
iret
iret
in
ret
loopne
shl
cli
xor
incl
jmp
int
iret
rcl
fsts
fs
out
add
and
jl
add
fdivrs
sarb
xlat
ffree
clc
out
fmull
xor
xlat
loop
cmp
cmp
repnz
enter
decl
xchg
aaa
out
sti
aad
repnz
lock
fdivrp
cmp
out
loope
fmul
cld
out
rcl
faddl
leave
hlt
out
fdiv
ss
in
cmp
fadd
iret
testl
xchg
xrelease
xor
cmp
enter
iret
idiv
jmp
out
xlat
in
and
cld
in
mov
ret
in
xor
cmp
out
xor
div
repz
mov
lret
fucom
clc
into
fmull
sub
cli
xlat
cmp
repz
loop
int3
out
cli
rcr
mov
leave
jecxz
xchg
xlat
in
iret
aaa
repnz
cli
in
out
jmp
lock
jmp
enter
ret
rolb
das
hlt
ret
sti
call
aas
hlt
mul
test
out
repz
ret
mov
in
in
mov
test
out
mov
cmp
aas
neg
clc
aad
sti
lock
rol
in
lret
repz
repz
repz
call
hlt
stc
ret
repz
shl
fdivrp
enter
lret
xchg
fcomip
out
rcl
aam
in
std
add
test
aam
faddl
fcmovnu
in
mov
xchg
loop
loopne,pn
cmp
jmp
cld
fcmovne
fstp
out
shr
jmp
enter
shl
in
out
rcl
cmp
stc
loopne
aad
clc
repz
mov
mov
call
icebp
int
call
rcl
cmp
leave
aam
clc
cmp
aas
repnz
rorb
std
ret
int
loope
sarl
jecxz
xlat
cmp
std
cmp
adc
ss
loopne
loop
fsubr
stc
call
in
loop
hlt
into
xor
fdiv
aaa
out
ds
xlat
loop
orb
lret
xchg
leave
xor
int3
jmp
loope
shl
fildl
in
in
test
sti
out
cld
ljmp
call
aam
std
ljmp
fdivp
addl
int3
int
iret
fucomi
rcl
cmp
cmp
cmp
ret
xchg
aam
imul
ljmp
in
xor
ss
sti
lock
faddp
fsub
rolb
jecxz
out
sti
jmp
ljmp
cmp
fdivrp
repnz
cmp
lock
fdiv
jmp
iret
repz
mov
jmp
cmp
leave
cmp
in
xlat
push
fld
ret
fstp
xlat
leave
sbb
call
loope
lret
mul
leave
ret
int3
xlat
cmc
fdivrs
stc
mov
int
fcmove
call
not
xor
das
iret
fdivrs
out
loopne
xabort
idiv
loopne
into
shr
in
repnz
vcvtsi2ss
leave
das
leave
lret
in
clc
aam
std
aad
div
test
loop
lock
out
shlb
fnclex
in
cmp
cmp
cmp
rcr
les
enter
leave
out
jmp
loope
fcomi
shr
repz
int3
into
in
lret
cmp
fsub
sti
sub
ljmp
cmc
mul
iret
cld
in
ljmp
cli
xlat
icebp
ror
aad
lret
imul
xchg
in
out
jecxz
lret
fnsave
movl
test
test
in
fsubr
in
cmc
xrelease
ds
not
jmp
fadd
xlat
icebp
test
movb
fisttpl
into
repnz
imul
ret
call
sar
jecxz
not
repnz
ret
mov
repz
fdivp
hlt
int
in
in
hlt
icebp
xlat
aam
out
in
ret
enter
int3
jecxz
iret
mov
fisttpll
out
int3
fucomi
cmp
faddl
inc
mov
mov
loope
lret
int
shlb
into
cmp
into
cmp
mov
xchg
xchg
out
fldpi
ljmp
enter
cmp
ds
xchg
call
enter
ror
repz
icebp
cli
ljmp
iret
std
rol
fcom
xchg
sti
std
out
mov
shl
rol
hlt
out
fucomip
repnz
fadds
fdivp
clc
test
adcl
div
cmc
sti
cmp
add
rcl
loop
std
enter
iret
lret
xchg
out
sub
int3
cmp
cmc
jecxz
xor
aad
fcmovb
in
imul
test
mov
xchg
in
int3
sub
int
aaa
in
inc
test
inc
hlt
jmp
ds
aad
aad
aad
movb
lds
jle
jge
jl
cld
sti
fnstcw
loopne
int3
div
fxam
lock
rolb
loopne
loop
int3
cs
lret
lret
cmp
rcr
jmp
ret
rolb
in
icebp
call
ljmp
int3
lret
repz
mov
leave
xabort
in
fldl
jmp
call
lock
dec
clc
ljmp
call
call
cmp
fsubp
loopne
in
sar
sbb
cmp
flds
ret
cmc
ljmp
aam
sar
mov
int
mov
nop
mov
xchg
call
in
clc
shl
in
repnz
sti
cld
test
mov
ljmp
loope
aad
clc
in
jmp
leave
hlt
cmc
ret
aad
cmp
adc
ljmp
in
out
fsub
int
repz
out
enter
flds
xchg
in
in
repnz
xchg
jmp
clc
leave
clc
aad
imul
ss
xlat
hlt
cmp
into
sarb
orl
iret
xor
rcl
xor
fcmovbe
cmp
not
test
aas
rcr
xlat
xor
adc
sub
lea
int3
ret
hlt
out
out
cmc
int3
shr
hlt
icebp
cmp
rol
loop
test
fstp
lret
sbb
aad
out
rcl
cmp
ss
rcr
sar
cmc
into
idivb
cmc
mov
stc
mov
jecxz
decb
out
hlt
iret
fst
hlt
rcr
out
cmp
clc
loop
stc
mov
out
in
filds
jecxz
test
repz
fildl
ljmp
cmc
lret
xchg
out
xor
std
fcomi
out
cmp
xlat
cli
std
fcomi
cld
sar
cmp
call
test
aaa
leave
cmp
sarl
icebp
in
fstpt
aam
faddl
int3
fdivr
mov
in
in
shl
xor
test
aam
out
in
adc
jmp
mov
repnz
cmp
cmc
ljmp
in
ds
xchg
loopne
fcomp
lea
iret
into
cli
fcomp
lret
cmp
mul
out
fcmovnu
ret
mov
std
in
loop
jmp
faddl
out
out
ljmp
cmp
jmp
in
in
ret
enter
mov
xor
div
ljmp
addl
fisttpl
in
lock
loopne
std
stc
hlt
leave
aam
out
ds
stc
xchg
out
in
iret
adc
xchg
out
jmp
aad
cmpb
aad
adc
in
int
ror
out
int3
loop
lret
repz
cmp
repz
loop
cli
mov
out
int
mov
xor
fcmovnu
sar
xor
aam
ret
int3
xchg
lock
fxam
xchg
in
in
out
aad
fdivrl
into
shr
lret
and
idiv
loopne
xchg
stc
fucomi
in
xchg
aad
lret
in
fsubr
cli
xor
adc
test
mov
fstp
mov
idivl
lock
jmp
iret
div
ds
fcom
mov
loop
into
mov
int3
mov
loope
in
ret
clc
cmp
iret
fucomi
lret
clc
cmc
incb
enter
test
cs
jmp
into
shlb
test
stc
lock
into
out
repz
xor
imul
call
add
clc
stc
sbb
into
lock
int
into
ljmp
or
aad
rol
mov
stc
cld
enter
mov
enter
out
in
std
int
in
cmp
aas
shl
mov
cld
xchg
mov
lret
in
subb
test
lret
jmp
cli
iret
cld
icebp
cmc
cld
mul
test
cld
mov
ljmp
out
in
fcomip
hlt
cli
sarb
repnz
fstp
aam
out
ficoms
xchg
xor
rcr
int3
shr
rcl
aas
repz
jmp
testl
jecxz
xlat
shl
repnz
cmp
stc
loop
aam
repz
cmp
into
lret
fucomp
mov
lock
icebp
xor
iret
aas
icebp
aas
cmp
jmp
test
loopne
or
sarb
loop
xor
into
ss
lret
stc
lock
fcomi
roll
stc
mov
sub
jecxz
jmp
xor
jmp
rcl
aad
aad
rolb
push
jmp
cmpps
jl
add
ljmp
sti
out
std
sbb
jmp
into
mov
aad
div
into
out
hlt
cmp
sti
lock
test
mov
loope
clc
fucompp
shl
xchg
shl
in
aaa
cmc
aaa
leave
out
stc
int
icebp
in
aas
hlt
in
cld
hlt
leave
ljmp
xchg
bnd
sti
ret
leave
lock
aam
lret
stc
rol
test
jecxz
in
ljmp
mov
rcr
cmp
aam
cmp
clc
sarb
adc
fcomip
aam
mov
movb
xlat
xor
std
aad
cmp
sti
into
clc
addl
loop
mov
fsubrp
out
or
cs
shlb
lret
sti
add
cmp
in
xchg
add
lea
ljmp
into
lock
call
loop
into
hlt
loope
out
mov
fmuls
out
jmp
leave
xor
in
iret
les
test
lret
rcr
jmp
in
shr
hlt
ret
call
icebp
shr
xlat
lock
lock
fadds
fcom
out
mov
int
out
shl
mul
stc
lock
lret
sbb
bnd
sti
out
int
decb
call
fcmovne
into
call
cmp
ret
cld
loopne
in
fucomip
fmul
nop
cmc
xchg
xchg
xor
out
fdivrl
aas
fdiv
clc
xor
in
xlat
fdivrp
sar
cli
sub
lret
fmulp
in
cld
test
aaa
in
enter
in
cmp
fdivrp
xlat
xlat
sbb
push
in
clc
in
int
xchg
jmp
xchg
repz
fdivrs
xlat
sti
aaa
aas
jmp
rcl
loope
xchg
ret
shl
ret
cmc
stc
mov
shl
int3
stc
xor
lret
out
xlat
fistpll
flds
mov
leave
in
rcll
xor
xor
cmp
jecxz
out
or
loopne
cmc
mov
hlt
fscale
rcll
cmc
shl
in
ror
dec
shl
cmp
sti
fcmovnbe
ds
cld
sbb
mov
mov
fisttpl
aaa
mul
idiv
out
sar
cli
hlt
out
fdivp
cmc
rcr
ror
jmp
lret
test
mov
int3
mov
in
xor
in
idiv
loope
iret
fildl
cld
clc
cli
loope
sar
xor
cmc
hlt
hlt
ljmp
fistpll
or
out
loop
mov
adc
lret
rcl
aam
leave
xor
enter
xor
hlt
loopne
push
loop
out
int3
jecxz
xchg
ljmp
cmp
cmc
xlat
fdiv
loop
testl
out
or
cs
in
fsubr
cmp
neg
cld
in
loop
ds
xchg
mov
std
lret
loop
out
lock
lock
fcmovu
lret
fadd
sarb
sti
sti
aas
loop
aad
dec
enter
mov
call
call
repz
loopne
icebp
dec
ror
shl
aad
int3
fnstsw
cmp
repnz
loopne
xlat
loope
xchg
into
lret
out
loopne
ret
into
fdivrs
repnz
ret
ret
test
lock
lret
mov
jecxz
lret
stc
cmp
test
rcl
xchg
clc
ljmp
ljmp
lock
xlat
fcmovu
aam
rolb
mov
call
cli
loopne
jmp
in
xor
fdivrp
int
aas
stc
xchg
fistpll
ffreep
lret
in
mov
jmp
xor
cli
aam
cs
cmp
cmp
loop
stc
sub
in
lret
lea
xor
cmp
fidivrl
aad
stc
out
cmc
clc
ret
sti
in
ffree
repnz
hlt
stc
int3
fcmovne
aas
fsubr
iret
cmp
rcr
lock
ret
out
icebp
in
iret
into
shl
repnz
in
ret
icebp
ss
shl
ss
rol
fincstp
test
roll
ret
in
cli
fstpt
aam
jecxz
not
repz
xchg
mov
out
lret
lock
ds
fdivr
hlt
cmc
out
aam
mov
in
lret
out
mov
repnz
int3
out
cmp
call
in
out
cli
fcmovb
xlat
leave
out
inc
ljmp
aam
leave
aad
cld
iret
stc
cmp
ret
fdivr
cmp
test
lret
int
jecxz
xor
leave
cmp
fstp
test
idiv
in
repz
mov
in
in
test
cmc
hlt
xor
ret
mov
lea
mov
mov
xor
add
mov
lea
jmp
into
aad
int3
fcmovnu
aad
add
sub
ret
xor
jl
jmp
lret
in
fmulp
rcr
into
rcr
xchg
adc
loop
jecxz
cld
enter
out
xor
jmp
lds
fsubr
fdivrl
sarb
fadd
xchg
mov
jecxz
xchg
xchg
lock
cmp
int
out
cli
leave
jecxz
fcmove
ljmp
in
int3
xor
fsubr
enter
fsubr
test
cmp
in
orl
int
into
shl
clc
cmp
cmp
int
fcmovu
faddp
sti
mov
mov
hlt
aam
enter
xchg
out
out
ret
loop
fstp
div
jecxz
cmp
ret
xlat
cmc
sti
rol
jmp
int3
out
fucom
fldl
xlat
call
cmp
and
fcmovu
repnz
in
addb
ror
idiv
in
rcr
cmp
cli
cmp
cmp
cmp
shl
mov
fsubr
out
loope
loopne
in
out
ljmp
fcmovnu
int3
cmp
fmul
fcomp
sti
fildl
mov
lret
adcb
iret
out
cmc
out
cli
int3
xlat
cmp
and
rcr
hlt
cmc
fdivr
mul
test
rcr
shl
hlt
mov
lret
int
in
fcomp
iret
enter
into
fsubp
out
icebp
fiadds
lret
int3
out
add
xor
out
in
aas
aad
stc
loopne
aas
cmc
div
stc
lock
sti
cli
loop
mov
repnz
and
aam
sub
neg
hlt
int
imul
cmc
test
hlt
mov
or
xor
loopne
shl
lret
leave
loopne
std
cmp
cmp
aad
xchg
in
adcl
lds
cmc
out
lret
into
ljmp
fcmovb
movb
sti
bnd
ljmp
int3
testl
loopne
in
out
test
out
fisttps
jmp
xor
ss
into
shl
call
int
fucomp
iret
divl
ret
cmp
divl
rcl
cmp
lret
jmp
icebp
int
lret
loopne
icebp
fdiv
in
shlb
icebp
stc
out
cmp
mul
lret
loopne
into
cli
jmp
das
ss
aam
repnz
sti
cld
clc
cld
fadd
out
std
loop
testl
mov
xor
shl
jmp
int3
jmp
cmp
sti
fiaddl
xchg
sbb
in
icebp
out
cld
xchg
xor
fcom
xor
fdivr
in
ret
ret
xlat
ret
icebp
jmp
testl
icebp
cmc
into
icebp
stc
aam
ror
fmul
fidivrs
in
fcmovu
xchg
loopne
cs
fcmove
in
fidivl
enter
sub
call
lret
xchg
cmc
xchg
loopne
xor
shl
leave
aad
ljmp
sub
out
faddl
mov
xlat
cmp
hlt
fnop
cli
div
ror
fdivrp
in
rolb
iret
leave
mov
mov
out
ljmp
aaa
stc
adc
rol
loopne
aam
jmp
icebp
addl
xor
repnz
in
std
lret
stc
clc
int
in
idivl
into
cmc
jmp
ds
xchg
loope
in
cld
shr
cs
in
fmul
fcmovne
cmp
cmp
cmp
xchg
not
aas
mov
mov
jmp
xor
icebp
sarl
in
in
cli
ljmp
mov
in
loope
mov
repz
test
int3
aam
in
rcr
lret
cmp
adc
neg
mov
mul
fxch
std
int3
out
std
test
aad
enter
stc
cmc
fcmovb
shr
aad
loop
shl
cld
ret
les
mov
loopne
xor
xor
clc
call
dec
clc
cmp
fimull
jecxz
jecxz
cli
rolb
icebp
cmp
xlat
in
repz
loopne
sar
adc
sti
in
aad
fadd
out
xchg
loopne
ror
lret
iret
leave
fcmovnu
in
cmp
ror
in
fcomip
fadd
repnz
mov
mov
lock
int
into
into
cmp
fucomip
out
out
ret
aam
fcmovb
sti
hlt
std
fisttpl
in
in
shr
neg
int3
cmc
fucomp
cmc
sti
aaa
ret
into
out
hlt
ljmp
stc
int3
out
fmul
xlat
ds
ljmp
std
enter
call
icebp
incl
out
fcmove
call
testb
fiadds
sub
lret
in
lret
stc
loopne
hlt
aad
stc
cmp
rcl
filds
test
jmp
iret
fsub
rcr
nop
aad
cmc
xor
push
mov
xor
jmp
ror
ror
rcr
frstor
pop
sub
ds
popf
sarb
jl
add
into
in
ljmp
std
aas
xchg
mov
out
in
mov
sbb
sar
das
in
ret
les
cli
iret
test
jecxz
in
fdiv
sbb
xchg
in
xlat
xor
iret
fcmovb
cmpl
test
roll
leave
xor
mov
xlat
out
ss
cmp
aad
iret
flds
jmp
mov
fiadds
lock
xor
repz
in
aas
ret
jmp
leave
test
int3
ljmp
fcmovnbe
icebp
hlt
cmp
cld
ds
hlt
mov
cmp
out
loop
incl
jecxz
test
call
cmp
shr
in
loopne
cmc
loope
test
xchg
enter
sub
cld
xchg
aaa
cmc
out
cmp
jmp
and
aam
ret
mov
xchg
in
iret
dec
fidivs
fld
ljmp
int
aad
xchg
not
testl
mov
aaa
ss
ret
icebp
lock
ss
into
lock
into
sti
into
loope
cmp
cld
cli
int3
cld
in
shll
cmp
lds
rcl
sarl
fcomip
stc
fcomip
out
fld
mov
icebp
iret
in
icebp
shrl
cmp
out
iret
xor
push
loopne
xchg
loop
cld
stc
loopne
jecxz
xchg
ljmp
fdiv
into
clc
cmc
iret
aas
icebp
cmc
fsubrp
shl
fisttpl
repz
int3
call
ss
xor
hlt
mov
xchg
lock
xor
rcl
cmp
out
xchg
add
mov
in
stc
fmuls
imul
in
loopne
leave
hlt
out
lret
repnz
aas
loopne
xlat
neg
xchg
out
roll
loopne
xor
imul
shl
ss
adc
aad
repz
int
iret
out
ljmp
xlat
into
in
lret
aam
sub
repz
in
sarl
sti
jmp
test
xor
iret
rcr
in
cmp
cld
hlt
test
addl
xor
call
aad
iret
repz
leave
shl
lock
cmc
fninit
rcr
mov
or
iret
orb
shr
in
cmp
call
out
loop
aad
xchg
fmul
test
loopne
out
ss
iret
xor
xor
icebp
idiv
fmul
xchg
loope
mov
mov
mov
or
xchg
rol
bnd
ffree
loope
int
rcl
sti
into
fcomip
xchg
int3
fxch
iret
call
in
aaa
in
imul
sarl
fidivl
cmp
xor
icebp
fcmovu
ds
popl
xchg
into
jecxz
loop
fcmovbe
sarb
fmuls
mov
loop
out
xchg
sub
into
cmp
mul
fnstcw
ds
icebp
filds
les
sti
not
in
cmp
cmp
std
lds
jmp
fimull
rol
icebp
aaa
idivl
iret
lret
imul
cmp
aam
loop
sti
fildl
std
fcmovb
lock
xchg
cs
fdiv
aad
sti
ret
loopne
fcmovnu
fdivr
call
int
rcl
fdiv
into
iret
fsub
std
lock
hlt
jmp
jecxz
cli
cmp
xlat
addb
in
shl
fld
rol
fistpll
leave
stc
xor
test
ljmp
in
adc
xor
ljmp
fadd
icebp
lock
loopne
ret
in
icebp
loop
out
aad
repz
in
fcom
in
enter
shl
test
fistpll
faddl
std
fdiv
mov
in
cs
aam
clc
in
icebp
ss
shl
fcomp
aas
not
out
test
sub
in
aaa
out
into
leave
repz
int
cmp
sar
cmp
rcr
hlt
orb
in
in
lret
int
loope
cmp
repz
in
hlt
rorl
loopne
lea
in
not
repz
repz
xchg
out
jmp
test
rcl
ss
not
test
jecxz
xor
ss
aas
or
test
iret
cmc
lret
shl
repnz
fucomi
out
ds
or
fidivrl
cmc
imul
fdiv
filds
shl
and
lret
ret
cmp
std
stc
cmp
ret
addl
cld
mov
lock
loope
fsubrp
xlat
add
push
jmp
lret
ds
lret
rol
loop
sbb
jle
jge
jl
in
aam
idiv
imul
ror
xchg
xlat
in
and
loop
in
out
leave
rcl
ret
xor
stc
ror
call
xchg
stc
fucomp
nop
in
ror
int
aam
cmp
out
repnz
fcomp
jecxz
cmc
loop
out
rcr
adc
test
jmp
xor
lret
ljmp
std
cmp
icebp
cli
out
faddl
addb
das
aaa
cmc
aad
xor
cmp
cmp
test
icebp
cli
in
sbb
xchg
int
ljmp
rcr
in
roll
hlt
sub
lret
in
cmp
iret
repnz
into
fucomi
cmp
fmul
fptan
cmp
fnstsw
sbb
orb
lret
in
xor
sar
shl
into
in
test
cld
aad
jmp
enter
lret
enter
lret
div
test
jecxz
aad
loope
hlt
fcmove
mov
aam
icebp
lret
not
fcmovne
lret
cld
lret
bnd
mov
fiaddl
int3
iret
out
enter
shl
fcmovne
int3
rcr
std
out
loop
mov
iret
mov
test
in
aaa
cmp
xlat
aad
iret
int
sti
repnz
fcmovu
fsub
test
std
jecxz
fcomp
out
mov
loop
int
iret
int
iret
das
xor
xor
incl
repnz
in
out
xchg
in
bnd
enter
into
call
icebp
iret
adc
neg
clc
loopne
cli
loope
fsubr
mov
xor
xlat
enter
jmp
fdiv
loopne
ds
ds
loopne
in
repz
aaa
enter
enter
aam
cmp
cld
fadds
testb
lret
out
cmp
aaa
cmp
loope
loopne
leave
shl
ljmp
in
or
xlat
in
sti
in
fnstenv
loope
cmc
sti
iret
iret
into
fcomip
aam
rorb
bnd
icebp
hlt
enter
ret
repz
adc
div
aam
xchg
xchg
in
out
xchg
pushl
iret
cmp
fxch
iret
idiv
shl
ss
fdiv
ret
lock
enter
jmp
and
loope
rol
loop
imulb
aad
cmp
cmp
test
fmulp
fsqrt
out
icebp
xchg
fdivp
lock
xor
cli
int3
cmc
aaa
iret
incl
xlat
in
mov
xchg
cmp
jecxz
cs
in
into
fidivrl
ds
ret
aam
mov
enter
jmp
loope
call
leave
iret
int
in
loopne
xor
ror
fmulp
mov
nop
loop
lret
leave
jmp
out
fcmovnu
cmp
ror
mov
stc
mov
jecxz
in
cmp
xor
fistpll
cmc
aam
in
lds
mov
call
shl
jmp
ret
call
out
cmp
sarb
hlt
cmp
and
test
into
orb
cmc
lret
xor
cs
sti
fdiv
jecxz
iret
out
leave
testb
into
ljmp
icebp
loop
out
lret
cmp
aad
cmc
loop
out
cmp
xchg
leave
std
fdiv
int3
cs
out
xor
sti
cmp
cmp
into
testb
loop
mov
aad
in
hlt
clc
xor
icebp
not
fldl
filds
out
test
iret
mov
iret
call
ss
fcmovu
shll
jecxz
mov
ret
neg
mov
or
out
xlat
shl
cmp
icebp
cmp
clc
jecxz
repnz
leave
call
xor
enter
in
clc
aad
hlt
cmp
cld
loopne
cli
ret
enter
cmc
xchg
ljmp
cli
enter
into
jecxz
sti
xchg
fmulp
idiv
in
addl
int3
iret
repnz
fnstcw
shl
sti
out
cld
int3
sbb
out
fildll
ss
sar
into
lock
loopne
ret
jmp
sbb
mov
ror
xor
stc
das
call
aam
test
shl
lret
enter
mov
xor
lret
jmp
fcmovbe
repz
fdivr
jecxz
into
repz
int
sub
cli
not
hlt
idiv
ljmp
in
test
cld
xlat
clc
cli
out
lret
test
js
inc
add
sub
jmp
rcl
mov
neg
repnz
insb
mov
jle
jge
jl
ret
ror
jmp
loopne
ror
iret
loop
aad
shl
xchg
test
leave
in
in
fdivs
enter
rcr
cmc
ret
les
sub
mov
aaa
icebp
fcom
repz
ljmp
rcr
shr
loope
fcmove
xchg
cli
out
cmc
shlb
shl
leave
in
aam
fdivl
ds
fucomip
cli
adc
fsub
xchg
filds
jecxz
ret
rcl
xor
shl
roll
in
testb
xchg
aad
aam
xor
xlat
call
xlat
test
xchg
fimull
xchg
loope
lret
rol
fcmovbe
jmp
repnz
fcmovnbe
les
or
fsubr
cld
nop
shl
loop
das
rcr
icebp
call
call
loopne
ds
xlat
jmp
out
icebp
orl
lret
ljmp
repz
lret
fstp
mov
fucomip
mov
int
dec
loop
not
cli
cld
repz
dec
std
sarl
filds
int3
jmp
cmc
jmp
fcmovnbe
sti
xor
shll
lock
in
enter
test
sub
xor
in
lret
aad
cld
stc
addl
fdivrp
test
into
xchg
loope
ror
cmp
lret
clc
iret
cmp
in
int3
fadds
call
in
pop
cld
out
fstl
icebp
fcmovnbe
clc
shl
icebp
sti
lret
lock
sti
iret
fucomi
test
mov
in
xor
ss
fidivrs
cmp
stc
lret
addl
loope
iret
out
fcmovu
aaa
aad
leave
fcmovbe
add
clc
std
fld
fcmovnb
mov
test
ds
in
das
cmp
cld
or
ror
cmpb
hlt
fldl
in
out
cs
in
icebp
shl
std
cli
shl
mov
ljmp
call
loope
aad
out
out
cmp
fcmovu
sub
std
cmpl
lret
mov
loop
pop
mov
xor
pushl
cmp
test
rcr
movb
xchg
fsubp
iret
shr
lock
xor
lret
roll
aas
stc
ret
mov
neg
call
xchg
repnz
fstpt
xor
rcl
cmp
std
sti
mov
lret
mov
loop
loope
ljmp
sar
stc
sbb
rcr
out
loope
mov
mov
xchg
xchg
xor
jmp
aad
sarl
fdivrs
or
adc
jmp
sub
xor
fdiv
into
fnstsw
aas
dec
cmc
lret
rcr
cmc
test
mov
jmp
test
std
repz
lock
lret
call
shlb
shl
add
rorl
in
into
xchg
xchg
xchg
ljmp
xor
fdivr
ret
stc
fsubp
stc
loope
cld
repz
mov
cmc
lret
in
jmp
fdiv
inc
fcomip
fdiv
orb
lret
mov
lret
jecxz
in
hlt
cmp
aad
fistpll
shl
cmc
mov
jecxz
lret
in
icebp
shl
addl
cmp
call
aam
out
xlat
cmp
cld
jmp
lock
cmc
repnz
lret
fldz
fdivrs
cmp
loope
cmp
call
cli
ret
orl
fnsave
out
loopne
fcom
fpatan
out
fadd
mov
jecxz
std
mov
jecxz
call
shl
repnz
fcomi
aaa
jmp
cmpl
call
fdivr
xchg
shl
or
ret
aad
repnz
in
cmc
add
test
ljmp
incb
ret
aam
cmp
ror
aas
jmp
mov
xchg
test
loopne
rcl
int3
ret
aaa
in
sarb
sub
rolb
xlat
int3
mov
mov
out
out
cmp
repz
repnz
ss
fxtract
fst
loope
enter
xor
cmc
shl
aad
ljmp
xlat
testb
int
int3
call
xor
sar
lret
cld
icebp
iret
cmp
out
fucom
rol
neg
jmp
loop
aad
lret
jmp
clc
fnstenv
cmp
iret
cmp
std
cmc
testb
test
call
pushl
call
jmp
jmp
int
mov
cmp
xchg
push
cmp
jge
jl
vpsubusb
ljmp
repnz
loope
xlat
fprem
lret
clc
loopne
icebp
out
std
mov
orb
rcr
enter
xlat
cmp
lock
mov
enter
std
incl
imul
xor
cmc
xor
in
sarb
mov
mov
fcmove
loope
in
xchg
in
loop
ror
out
aam
leave
shr
cmp
ds
icebp
fdiv
cmp
out
fmul
call
lret
aad
fadds
rcl
aam
ret
mov
jmp
xchg
and
call
rcl
ror
int3
idivb
in
roll
incl
nop
sbb
repz
shl
aas
cmp
test
addl
jecxz
enter
xorl
xor
rcl
iret
out
repnz
fnsetpm(287
ret
test
mov
test
loopne
ljmp
xor
roll
out
mul
fidivrs
mov
xor
mov
ror
call
repz
loopne
repz
jmp
leave
xchg
enter
in
sti
iret
fdiv
std
cli
imul
rcr
out
shl
addl
repz
out
aaa
cli
cmp
enter
hlt
loop
mov
test
fcmovnbe
test
fsubrp
mov
ret
fucompp
fucomip
rcl
aam
fsqrt
xchg
xchg
out
fld
xor
std
loope
call
sar
out
jecxz
mov
loope
xchg
ret
clc
hlt
fcmovnb
fmul
xor
testb
mov
mov
leave
icebp
dec
lret
xchg
int
xor
shl
ret
shl
hlt
rcl
ret
shl
rorb
sbb
cli
ljmp
mul
cmp
divl
aas
xlat
jmp
lret
flds
aam
in
mul
shll
cmp
aas
clc
rcr
test
repz
out
mov
sti
jmp
shr
jmp
aaa
cmp
sti
std
xlat
testb
add
fcmovb
call
iret
shr
jmp
cmp
rcr
aas
cmpl
in
clc
mov
loope
ficoms
fcmove
icebp
icebp
cmc
dec
rcl
ror
stc
rcl
loope
mov
fcomp
jecxz
jecxz
das
div
ss
iret
aaa
in
lret
repnz
sarl
aas
into
cmp
ljmp
test
lds
lock
in
idiv
in
cli
xlat
aam
fiadds
fcmovnbe
loope
ljmp
shl
in
out
lds
in
fcmove
lret
cmp
fucomp
call
lret
lret
or
xchg
out
test
hlt
out
cmp
shl
fcmovnbe
cmp
sti
ljmp
xchg
aaa
ljmp
ds
test
enter
stc
out
sti
test
out
fyl2xp1
sti
sti
ds
cmp
fdivp
sti
test
sti
ret
mov
in
int3
out
enter
enter
fcmovnu
rcr
std
not
lock
stc
hlt
xlat
fyl2x
shr
cld
jecxz
enter
aam
xor
std
stc
fadds
rolb
clc
mov
xchg
xor
lret
ds
cli
fdivr
jmp
test
jecxz
call
call
call
in
rol
in
fcomip
xchg
orb
ret
into
lock
cmc
xor
fadds
call
testb
mov
repz
cmp
aam
test
cmc
out
jmp
loope
mov
out
ret
out
jmp
repz
cmp
cmp
loop
in
mov
shr
xor
ret
ret
aaa
xor
cld
cld
cmp
out
sti
cmc
mov
int3
fsubr
in
aaa
das
in
fcmovnb
sarl
loope,pt
xlat
in
out
out
cli
repnz
clc
jecxz
cld
lret
loope
out
hlt
sub
enter
stc
rcl
out
in
fcomi
loope
xchg
rol
rcl
loop
mov
call
cmc
cs
out
repnz
lock
icebp
hlt
xlat
lock
loop
fcos
int
in
into
lds
loop
in
les
fdivr
cmp
fucom
in
cli
cli
jmp
icebp
sub
cmc
aaa
fcmovnbe
call
idivl
jmp
hlt
lret
mov
incl
cmp
add
jne
mov
xor
add
mov
mov
mov
jmp
rol
leave
rcr
fstp
lds
mov
das
cmp
jle
jge
jl
das
loope
in
xor
neg
icebp
cmp
out
clc
cmc
fiaddl
cli
xchg
lret
out
cli
loop
out
xor
ret
jmp
ss
iret
loope
icebp
fcmovnu
repz
mov
in
repnz
xchg
loopne
in
stc
cmp
enter
rcl
xor
cmc
test
nop
fsub
std
xchg
loope
out
sarl
lock
cmp
ds
cmp
aad
stc
shl
fidivrs
aad
clc
call
leave
fiadds
sti
int3
fcomp
les
aad
cmp
test
lock
leave
call
in
in
repnz
xchg
hlt
loope
stc
out
clc
repz
rcr
aas
repz
loop
decb
std
test
in
iret
lret
cli
rcr
lret
cmp
jmp
cmp
fildl
cs
lret
rcl
xor
fsubr
fcomip
fdivrs
repnz
icebp
loop
xlat
ficoml
aad
lret
shr
xbegin
int3
sar
loopne
cmp
jmp
in
in
leave
int3
enter
das
repnz
icebp
stc
call
cmp
aas
sti
ret
aas
sti
lret
loopne
out
mov
cli
jmp
shl
lret
xor
fadd
lock
test
fldl
lret
ror
loop
cmp
rcl
fnstsw
loope
aad
fld
cmc
jmp
int3
into
iret
mov
ljmp
cli
fsubr
fcomi
cld
sti
aad
icebp
ss
ret
fdivrp
les
or
shl
fptan
in
cmc
icebp
int
int
cmp
fadds
out
mov
shrb
repnz
enter
cmc
jmp
in
fcmovb
out
mov
loop
inc
lret
int3
in
xor
ror
rcr
rcr
loopne
jmp
mov
mov
cld
iret
mov
out
xor
std
fcmovnbe
fsubrp
shr
fcomi
sti
stc
out
enter
out
cld
xchg
jecxz
lret
xor
std
aas
jmp
cmp
sar
loopne
idivb
test
aam
mov
mov
mov
repnz
out
in
cli
in
xor
aad
fdivrl
into
jmp
mov
leave
jecxz
repz
xor
loopne
shl
hlt
in
repnz
in
cmp
cmp
jmp
fcomp
jmp
fucomip
std
in
out
rol
fdivrl
aam
fucomip
in
xor
call
repz
jmp
icebp
ds
leave
xlat
out
stc
incl
cmp
in
jmp
leave
roll
ffree
out
enter
cmp
xor
clc
fildl
sar
ror
loope
iret
aaa
in
cld
leave
lret
cli
repnz
aad
cmp
xlat
cmp
in
std
in
lret
mov
xchg
lret
leave
out
into
aaa
into
fdivl
fsubrp
clc
int3
repnz
fsubr
fildl
out
add
mov
xor
rcl
cmp
fsubrp
test
loope
ret
fdivr
xchg
fdiv
in
decl
into
cmc
fadd
cli
int
xor
into
lock
out
idivb
xchg
fdivr
lret
ljmp
out
cmp
neg
aam
aam
cmp
aas
and
call
decb
jmp
out
lock
rcr
imul
in
test
movl
aam
shlb
jmp
fmul
fdivrp
cli
test
xchg
mov
jmp
out
sub
jecxz
jecxz
sar
dec
in
bnd
cmc
cld
leave
ret
sbb
out
test
jecxz
shrb
das
ror
xor
out
fistpll
icebp
ret
add
hlt
ds
lds
int
test
into
sub
aas
ds
shl
ss
repz
out
cli
fcmove
shl
fldl
std
fsub
lret
xchg
shl
in
cs
lret
leave
hlt
out
out
lock
loop
in
fcmovnu
fsubr
ret
mov
mov
int3
cld
ds
xor
shr
cld
sar
sti
fcom
cld
fcomip
roll
loopne
repz
xor
xlat
int
int
xor
icebp
out
fdivs
fcom
icebp
fxch
fcmovu
lret
into
cmc
shr
shr
cmc
ss
ljmp
aad
loop
aam
ret
loop
loopne
stc
sub
icebp
leave
xor
aam
leave
cmp
stc
rcr
lock
neg
fucomip
add
mov
mov
call
cli
aam
sti
ljmp
aas
fcmovnbe
jmp
rcl
lock
sarb
shr
ret
repz
out
cli
addb
rcl
xchg
leave
jmp
sub
fisttpll
cld
mov
push
pop
sub
add
jmp
ds
rcr
fst
xlat
xchg
icebp
mov
leave
mov
jl
add
ret
ret
enter
aas
cli
in
std
fcmovb
fdivrp
fyl2x
mov
test
lret
enter
xchg
xchg
adc
into
xor
in
lret
icebp
leave
sarb
cmc
fcmovu
div
in
in
iret
std
cmp
loopne
xchg
sub
mov
test
cmp
shl
cs
cmp
int3
cmc
in
fdiv
into
lret
out
mov
call
in
jecxz
into
fcmovnb
jmp
aaa
cmp
cmp
xlat
rol
ffree
jmp
xchg
repz
iret
enter
out
jmp
cmp
repz
std
aam
test
cmc
stc
fisttpl
nop
fsubrp
enter
iret
in
aaa
xor
aaa
lock
cmpb
out
cmc
not
aas
fisttpll
mov
sti
loope
xor
aad
ljmp
adc
int
ror
neg
aam
les
repz
fmulp
aad
xor
lock
xlat
shl
aas
clc
clc
rcr
cmc
idiv
lret
enter
jecxz
jmp
clc
ret
in
leave
std
cmp
clc
div
testl
fsubr
xchg
xorl
loopne
call
repz
cmp
hlt
hlt
fdivr
vpmaddwd
out
hlt
aaa
xor
repz
fcomi
cmp
cmp
fadd
hlt
iret
in
fmul
xchg
shl
repz
in
hlt
out
lock
aam
loop
sar
ret
loope
add
call
out
out
repz
ret
sbb
mov
std
xlat
mov
cld
xchg
fldl
clc
cmc
xor
cmp
jmp
stc
std
adc
mov
clc
or
incl
fsub
in
enter
xlat
fsubrp
cmp
ret
loopne
ret
mov
in
mov
nop
call
xor
loopne
cmc
in
icebp
cmc
aas
cmp
ds
sti
ljmp
jmp
aam
into
sub
int
enter
ds
cmpl
jmp
call
call
divl
out
lret
leave
lret
sub
mov
int3
in
call
repz
stc
ljmp
fcmovbe
cli
jecxz
or
in
mov
xchg
in
rcl
xor
repnz
icebp
call
call
cmc
out
std
movb
jmp
out
out
xchg
aas
sar
shr
cli
aad
aas
not
test
fidivrs
ret
mov
test
enter
aad
loopne
in
out
sarb
in
cmp
icebp
ret
rorl
ret
enter
addl
repz
cli
fst
iret
repnz
in
rcl
hlt
and
sub
std
xchg
out
xor
into
aad
clc
aad
ds
hlt
loop
ffreep
stc
sar
int
out
fildl
shl
lret
xor
cmp
repz
shr
loopne
ret
sbb
loop
jmp
xchg
mov
and
in
cmp
lret
fdiv
enter
int3
out
ror
xchg
out
in
fcomp
in
sub
jmp
aas
ds
in
ret
fdivr
loope
mov
jmp
faddp
into
aaa
imul
xor
call
ror
cld
repz
xlat
shl
in
xlat
int3
loop
nop
rcll
xor
in
int
cmp
int3
xchg
clc
lock
div
out
in
lret
mov
xchg
xor
xlat
xlat
xor
cmp
cmp
loop
or
hlt
and
lret
jecxz
lret
jmp
loope
in
out
out
cmc
ss
sarb
loope
into
cmp
std
ffree
aam
mov
leave
shl
lock
ljmp
aaa
aas
not
loopne
call
cmc
not
sti
jmp
cmp
loopne
iret
in
fisttpl
out
xor
xlat
jmp
leave
ror
cmp
hlt
clc
clc
rcr
sti
fdecstp
mul
out
jmp
fimuls
shl
jmp
std
in
fmulp
aas
cld
incb
ret
jmp
test
out
out
jmp
aas
fcomi
fmul
roll
ds
std
loopne
jmp
icebp
aaa
stc
loopne
shr
aad
repz
out
loope
push
rcl
mov
mov
lock
ss
cli
dec
cmp
out
loopne
testb
fldpi
or
shl
ds
rcl
mov
out
cmp
jmp
fmul
out
fsub
cld
call
test
test
das
xor
hlt
icebp
cmp
ljmp
sbb
sbb
nop
int3
icebp
icebp
ljmp
fdivr
cmp
lret
adc
fsubrp
lds
in
jmp
fistl
dec
clc
mov
xor
lea
cmp
jne
jmp
int
ds
int
lock
fidivrs
jle
jge
jl
test
sub
int3
icebp
sarb
ret
cld
shl
sub
fmuls
aam
sti
in
xlat
xor
test
cld
loope
xchg
icebp
mov
sti
fdivrs
fldl2t
lret
repnz
fcmovb
fiadds
in
leave
mov
test
into
ror
into
out
aad
fcmovne
repnz
out
stc
cli
cmp
xlat
in
repnz
jmp
jecxz
incb
ror
xchg
rol
jecxz
stc
out
cmp
jmp
rcl
aad
neg
incl
ljmp
dec
leave
fsub
loop
xor
repz
in
int
test
std
lret
neg
out
enter
jmp
loop
cmp
lret
out
out
ret
out
ret
loope
test
loop
incb
fcomp
jecxz
cmp
cmp
out
fstpt
fidivrs
fadd
movl
cmc
in
xor
shll
std
cli
sarl
fldl2e
ror
cmc
cmp
mov
xlat
aam
iret
lret
mov
repnz
aaa
xlat
in
aad
call
cmp
sub
aam
add
icebp
rcr
xchg
out
cld
out
repz
lds
rcl
call
filds
stc
fimull
test
cmp
cli
into
fsub
std
clc
sar
lock
cld
cld
clc
loope
neg
mov
mov
shr
aam
faddp
repnz
repz
cmp
fcmovb
cmp
fisttpl
lret
xor
in
leave
repnz
shl
aas
fdiv
fsub
loope
cmc
rcl
aam
movl
hlt
shl
out
cli
fidivl
std
sar
fdiv
aas
clc
in
hlt
faddl
loopne
xchg
sub
icebp
in
fnsave
idiv
out
ss
in
repz
enter
flds
shl
das
int
out
fcomp
xlat
fptan
lret
lret
clc
in
cld
xchg
mov
fucomp
and
xlat
xlat
into
iret
hlt
cmp
aam
rcl
cmp
sti
out
addl
ljmp
jmp
rcr
clc
fxtract
aam
sarb
repnz
enter
out
enter
loopne
mov
leave
in
in
sti
cli
fnsave
aam
iret
cli
roll
xlat
in
imul
in
int
loope
int3
cmp
jmp
fsubp
ljmp
shl
hlt
cmc
fisttpll
mov
into
in
out
xor
cmp
neg
repz
mov
clc
xlat
call
repnz
xor
xlat
ljmp
int3
loop
in
shr
orl
enter
out
rcl
repz
xor
cmp
shl
cmp
cmp
icebp
ret
rorb
xchg
xchg
leave
addl
mov
repz
ds
out
lea
ljmp
fmul
lret
ret
not
shl
cmp
repnz
lock
xlat
in
lret
out
xchg
fnsave
ds
loopne
out
int
cmp
mov
sarb
repz
aam
fxch
cld
in
into
hlt
decb
in
in
incb
repz
out
into
divb
std
sarl
shr
sar
aam
repnz
icebp
cmp
xchg
xchg
jmp
cli
loope
aad
in
in
jmp
clc
faddl
loop
clc
in
leave
ret
cld
cld
cmp
jmp
in
in
fnstsw
stc
aaa
cmp
iret
lret
rol
jecxz
out
loopne
dec
in
xchg
cmc
ret
lock
cmc
icebp
cld
fcmovbe
std
repnz
orb
test
loopne
std
or
sub
in
cmp
cmp
fxch
enter
fstp
roll
fcmovnb
leave
lock
out
in
out
aaa
f2xm1
jmp
fsub
cli
in
rol
fscale
rcl
xchg
decl
cmc
cmc
cmc
hlt
fsqrt
xlat
int3
push
inc
les
enter
out
mov
shll
jmp
shl
cmp
cld
enter
cmp
xchg
cli
ds
ljmp
sub
in
bnd
out
fbstp
in
fincstp
stc
aam
loop
in
lret
std
out
out
orb
iret
jmp
aad
aam
icebp
cmp
stc
lret
jecxz
call
in
sub
in
cmp
int
xlat
rcr
repnz
inc
mov
and
xchg
filds
icebp
jmp
idiv
rcr
shl
enter
mov
mov
jecxz
inc
or
xor
jmp
int
enter
int
lds
and
jge
jl
xchg
ror
iret
idivb
out
ret
xor
ror
ljmp
loopne
call
loopne
loopne
hlt
cld
int
enter
clc
loope
rcl
roll
call
lock
cld
xchg
xchg
enter
rol
int3
jmp
ror
sarl
mov
flds
sbb
xchg
lret
in
xor
int
shl
in
push
hlt
test
aad
ret
cli
out
loope
shl
int3
shl
in
in
aaa
stc
ljmp
iret
lock
mov
fdivrp
icebp
loope
rcr
sti
repnz
lock
cmc
xor
in
faddp
out
fimuls
jecxz
in
in
shrb
fdivs
xor
ljmp
in
lret
out
out
fisttps
jmp
cmp
repnz
jmp
aam
fucom
lock
leave
jmp
lock
fld
cs
fnstcw
rcl
mul
repz
cmp
jmp
ljmp
call
ss
iret
ss
loop
fsub
and
loope
mov
into
aam
int3
rcl
aad
fdivrl
xor
incb
xchg
jmp
mov
iret
mov
xchg
xchg
loopne
iret
xor
idivl
cmp
loopne
into
idivl
aad
push
fisttpl
mov
shl
in
mov
aaa
jmp
fcomp
cmc
out
cmp
cli
lret
fistl
div
xor
fcomip
leave
cmp
in
loope
in
xchg
loopne
clc
in
out
out
fcmovne
cli
jmp
sub
mov
shr
cli
shl
repnz
shr
fdivrp
repnz
fbstp
repz
jmp
jmp
in
cli
icebp
xchg
ror
ror
ljmp
xchg
xchg
xor
out
sarb
aaa
into
aas
in
repz
mov
cmc
ds
loope
in
test
ret
lock
stc
jmp
call
loope
cld
shl
test
fcomp
mov
fldlg2
clc
call
rcr
cmp
int
roll
xchg
xchg
jecxz
mov
lock
enter
sub
clc
clc
cli
loop
cmp
mov
xchg
int
lret
hlt
rol
ret
hlt
repz
fcomi
rcr
loopne
jmp
in
iret
leave
lret
int3
out
hlt
out
in
xlat
cmp
aas
int
fcmovu
cli
loope
mov
xchg
sti
loope
xchg
lret
aaa
aam
neg
call
cmp
roll
ljmp
xchg
adc
lret
sub
fcomp
rcr
enter
rcl
cmp
cli
cmp
out
test
lret
nop
or
out
ret
icebp
int3
cld
int3
cmp
cmp
jecxz
ret
cmp
adc
out
fistl
in
jecxz
lret
xor
in
into
neg
lret
fiaddl
mov
enter
xchg
loopne
ret
sar
into
cld
ror
ret
sar
lock
sbb
and
out
xchg
jmp
ffreep
xor
jmp
loope
cmp
mov
loope
fisttpll
lock
xor
fcmove
iret
ds
out
sbb
mov
repnz
xchg
into
xor
cmc
hlt
int3
iret
aaa
aam
rcr
xor
cli
rorl
out
lret
iret
icebp
mov
repz
lret
cmc
iret
fyl2x
jmp
out
shl
aam
cmp
mov
in
mov
sub
jmp
sarb
std
ds
in
fisttps
not
xor
jmp
repz
ss
sbb
std
repz
decb
lock
jmp
sarl
mov
cmp
cld
test
jecxz
enter
shl
in
out
aad
lock
int3
ror
rcl
aad
lds
push
cld
stc
into
in
nop
rcr
enter
ss
ror
out
cmp
cli
sti
xlat
roll
cld
cld
adc
cmc
divb
shl
fdivp
cmc
roll
jmp
lret
les
mov
in
repnz
into
into
call
cmp
fadds
sub
int3
shr
jmp
idivb
aaa
int3
fsubrp
into
stc
out
lret
addb
out
call
or
shl
hlt
leave
out
aad
hlt
int
aad
fcmovbe
in
imul
lret
jmp
ds
ror
aad
fistl
loop
inc
jo
sarl
loopne
jl
add
out
loope
iret
int3
icebp
lret
leave
xlat
fsubr
cli
clc
fcmovbe
rolb
fcmovb
mov
repnz
repnz
aam
cmp
repnz
cli
rcr
fnstcw
loope
aam
test
loop
xor
into
mov
in
sub
in
jmp
out
xlat
sar
loope
sar
in
out
mov
in
jmp
idiv
les
cmp
jmp
aaa
cli
rcl
into
shl
xlat
rorb
nop
mov
in
in
ret
in
lret
aas
fdivs
cmp
inc
std
rol
xchg
xchg
mov
into
into
shl
int
out
out
cmp
inc
idiv
jmp
xchg
aam
xchg
fcomip
enter
shl
sarl
cmp
aad
ds
leave
sti
test
xlat
cmc
xlat
ss
call
out
cmp
xlat
sbb
out
testb
dec
in
in
clc
div
enter
icebp
stc
loop
test
cmp
std
in
icebp
jmp
out
rcl
shl
repz
fcmovbe
ds
jmp
in
push
in
call
mov
sar
leave
out
lret
in
fnstenv
out
call
out
fcmove
out
call
rol
fdivrp
sar
loop
lock
aaa
aad
lret
hlt
int3
in
int3
lret
in
ss
cld
sar
cli
xchg
cld
mov
xchg
ljmp
in
aad
sbb
loopne
sti
jmp
in
nop
filds
enter
enter
clc
clc
imul
cmc
addl
fstp
iret
mov
mov
shr
xor
lock
ljmp
std
jmp
out
lea
test
ror
ror
int3
xor
rcl
mov
lret
clc
mov
mov
xchg
jmp
lock
mov
in
aas
out
fcomi
int3
out
add
loopne
stc
test
into
mov
rcr
sar
ds
shl
in
mov
faddl
imul
repnz
iret
div
iret
div
rcl
icebp
aad
ret
cld
aad
cli
and
in
jmp
lret
sarl
adc
sar
std
leave
cmc
xchg
jmp
loop
lret
xchg
cmc
repnz
lret
rcl
call
xlat
ror
test
cmc
fdivp
fmul
in
into
in
ffreep
shrl
out
cmp
cmp
jmp
loop
shl
aam
in
mov
cmp
sub
hlt
ror
hlt
fadd
xor
fdivl
cmp
int3
clc
rol
xlat
jmp
into
icebp
sar
ror
iret
aas
in
shlb
neg
stc
rcr
lock
repz
cmp
in
aas
fcmovu
leave
iret
mov
out
shr
lret
jmp
cmp
cmp
cli
jecxz
test
cld
ljmp
ror
jmp
int
lock
cmp
repz
cmp
fiaddl
xchg
decl
icebp
ret
out
iret
xor
out
out
lret
fadds
loop
cmp
out
ljmp
repnz
xor
xor
leave
out
lock
out
xchg
les
mov
jmp
cld
into
loope
jmp
xor
repz
jecxz
stc
in
mul
lds
xchg
out
xchg
enter
out
ret
stc
stc
cmc
xor
ljmp
out
mov
lret
ds
cmc
in
cmp
out
in
repz
in
rcr
fcomi
loope
mov
xchg
loopne
in
leave
rcr
sar
fdivrl
ss
sti
ds
div
shr
test
ljmp
xlat
in
jmp
cmc
rcl
cld
fnstcw
add
cld
mov
test
rcr
repz
nop
in
xor
ret
cmp
lret
hlt
cmp
and
loope
mov
jmp
xor
rol
ret
rcl
jmp
cmp
mov
mov
sbb
iret
ljmp
in
fdivr
ljmp
shl
cli
lret
loopne
clc
or
decb
jmp
imulb
jmp
sub
cmc
fadd
inc
loope
fdivr
out
in
mov
icebp
jmp
out
int
int
sti
fxch
lret
rcr
shl
fcmovbe
mov
xchg
cld
adcb
hlt
in
jecxz
out
repz
fst
aas
aam
std
test
mov
out
loop
mov
rcl
call
out
lret
jmp
int
repnz
loopne
test
add
pop
leave
ret
push
mov
jmp
int3
ret
ds
fst
decl
sub
dec
jo
out
jl
add
jmp
enter
ret
rcl
cmp
ret
xchg
fxam
fcmovbe
enter
orl
in
int3
cld
loope
out
test
out
ret
fldl
loopne
lret
shl
leave
cmp
out
bnd
cmp
loope
sti
ror
repz
jmp
or
lret
cmc
xlat
jmp
shr
loop
ret
rcr
cld
sbb
in
out
sbb
iret
shl
cld
loopne
int
cli
call
cmp
cmp
in
repnz
loope
in
lds
xchg
out
cmp
rcr
cld
fcmove
aam
ret
adc
add
fstl
sub
xor
xor
out
aad
in
clc
fnstsw
int3
cmp
loop
xbegin
sbb
mov
mov
xor
aad
xor
out
cmp
int
icebp
lock
vpavgb
out
xchg
nop
out
xchg
int
repnz
cmc
cmp
cmp
cmp
ds
int
loop
testb
and
mov
hlt
sbb
repz
ror
cld
into
fcomp
in
rcl
cmp
fnstcw
in
fildl
adc
out
das
lret
cli
shl
cld
cld
loop
roll
idiv
in
sub
loope
lock
in
in
ror
aad
std
shl
out
into
add
enter
sub
fucomp
rorb
leave
ss
fdivrl
ljmp
in
loopne
fsubr
mov
leave
cli
mov
aad
lock
cmp
icebp
iret
ss
icebp
fadds
ror
jecxz
jecxz
xchg
out
xor
stc
icebp
xlat
call
hlt
lret
loope
ds
loop
out
in
rol
out
xor
sub
sti
xor
lock
cmp
rcr
testb
ret
std
lret
mov
rol
int3
in
out
iret
repz
int
stc
incb
in
jecxz
xchg
lret
shl
shr
out
rcl
sarl
xlat
test
cmc
ds
rcr
xchg
shr
hlt
fldl2t
stc
dec
loope
rorl
jmp
xor
loop
fdivp
add
sub
call
in
in
loope
jecxz
repz
idiv
in
repz
test
xchg
repnz
sti
std
sti
xchg
enter
lock
icebp
in
int
fst
lock
idiv
jmp
mov
lea
mov
int
not
fucomp
int3
repz
sarl
aad
les
sar
jecxz
in
jmp
ror
loope
xor
jmp
cmp
in
cld
ds
lock
int
loope
sub
loope
add
cli
cli
int
mov
imull
xor
loop
lret
xlat
jecxz
cmp
test
xlat
clc
in
into
nop
rcr
jecxz
ror
shll
xor
leave
sarb
fdivrp
roll
clc
testb
nop
jmp
lret
iret
out
fscale
fst
iret
fcmovnbe
into
sarb
mov
hlt
ret
clc
addl
shll
shl
jmp
xlat
aas
out
stc
ret
sarl
clc
std
enter
fimull
into
lret
into
call
adc
fcomi
cld
ror
loop
in
mov
jmp
xor
out
stc
ljmp
icebp
test
ffree
jmp
sti
sti
xchg
repz
xor
out
cli
out
fucomi
loope
cmpl
cld
clc
ret
lret
jmp
lock
icebp
fcomp
int
fsub
aaa
fdivp
aam
cli
fst
stc
testl
xor
jecxz
not
leave
ss
hlt
hlt
in
xlat
repz
jmp
mov
out
out
aad
aad
ret
fstpt
fldl
std
roll
in
icebp
ret
mov
icebp
stc
lock
std
icebp
cli
sbb
into
jecxz
ds
call
cli
lret
incl
in
shl
rcl
not
aad
lret
stc
cmp
mov
mov
mov
xchg
int3
loopne
ljmp
cmp
xlat
lock
in
sbb
loope
test
cld
and
loope
adcb
xor
sbb
ret
xchg
out
int3
ror
jecxz
sar
repz
out
cmc
xor
rolb
loopne
add
mov
fmull
repnz
lret
xor
imul
cmp
lret
xlat
shl
ret
loop
fsubp
sbb
in
inc
xor
xor
and
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
mov
mov
mov
jmp
rcl
leave
leave
fst
fimull
mov
mov
adc
jle
pop
add
enter
in
loop
in
ret
xor
clc
fdivs
cld
fcmovnbe
cld
int
jecxz
loop
mov
in
enter
sbb
loop
enter
cmp
xor
in
fidivrl
hlt
out
icebp
jmp
mov
lret
iret
xchg
in
shl
lret
cmp
cmp
lret
hlt
roll
lret
fmuls
das
cmc
xor
loop
not
sarl
ljmp
not
mov
mov
in
lds
xor
enter
dec
in
loopne
hlt
rol
aad
mov
in
mov
xchg
lret
loop
ror
out
cmp
aam
sti
cmp
adc
hlt
and
in
lock
sar
cmp
hlt
add
cmc
add
leave
or
cld
iret
sub
shr
jecxz
out
out
ljmp
lock
in
in
call
int3
cld
iret
iret
in
test
ss
loopne
and
jecxz
out
addb
test
loope
cmp
xor
in
fnstenv
fxch
iret
aaa
test
cmp
out
rcr
jmp
jmp
ret
fidivrl
out
out
xor
idiv
div
ret
repz
in
ljmp
enter
sub
fdivr
loopne
fdivrl
cmp
cmp
loop
iret
orl
lret
rcr
xor
enter
xlat
cli
fld
xlat
test
rcr
mov
lret
nop
adc
jmp
jmp
out
lret
int
cmp
std
fld
sti
call
lea
repz
sub
lock
into
aad
cmp
mov
jecxz
fildl
out
lret
nop
xor
rcr
lds
int3
in
into
ror
stc
aas
xlat
aad
rol
sti
aam
stc
cmp
icebp
in
enter
call
cmpl
shl
xchg
fists
jmp
imull
aam
in
cmp
sarb
fsincos
ds
int
test
fmul
loop
jecxz
mov
ss
iret
fdivrl
sti
rcr
aad
ffreep
or
popl
fld
fcom
in
fidivl
lock
out
cmp
test
repnz
rcr
sti
ljmp
ret
loopne
in
fxtract
out
cs
roll
loope
xlat
addl
xlat
int3
cmp
int3
enter
lret
xor
frndint
cmc
in
loope
rcr
int
fdivr
sub
lock
xor
jmp
fcmove
sub
in
sar
ljmp
out
xchg
stc
xor
stc
sti
roll
ret
fldpi
fsubr
leave
adc
sbb
loope
in
cs
loop
out
fucompp
cmc
out
cld
repnz
in
out
test
test
aam
xchg
in
xor
fxch
fdivl
call
sar
out
shl
fcom
int3
cld
int
mov
test
jmp
out
iret
sti
jmp
out
cmp
xchg
icebp
mov
in
fcomp
out
lock
mov
fcmovu
clc
nop
xchg
iret
out
aaa
jmp
lret
fucom
lock
out
xlat
shr
sti
aam
stc
xchg
jecxz
fcmovb
in
lea
ret
ss
cmp
sti
fyl2xp1
in
cld
out
icebp
into
mov
shl
in
xor
not
sti
cld
loop
fcmovnbe
fcmovu
rolb
mov
loop
into
xor
cmp
cmc
fcmovnbe
aam
loopne
repz
out
jmp
mov
icebp
jmp
lds
out
in
repnz
repnz
cmc
aad
in
xlat
in
out
loopne
int
mov
aad
shl
clc
int3
xor
cld
cmp
aad
cli
std
mov
in
nop
loope
lock
shl
out
cmp
in
loop
sar
aas
ret
sar
aam
jmp
in
jmp
cs
xor
cld
jecxz
fistpll
test
xchg
jmp
sar
hlt
xor
cli
aam
in
out
in
incl
incb
loop
fsubrp
loopne
idivb
shll
sub
ret
lock
mov
addb
test
aas
jmp
ss
sti
fcmovne
shll
out
test
inc
or
test
inc
add
add
jmp
lret
ffree
fst
in
notl
stos
mov
jae,pn
jle
pop
add
mov
test
jmp
rol
out
mul
vpaddsb
enter
cmp
rcl
adc
sub
enter
lret
dec
into
ljmp
int3
stc
cli
cmc
cmp
cli
cli
shl
aad
loopne
mul
out
mov
cli
popl
sar
sti
out
divl
ds
ret
jmp
jmp
xor
ret
in
cmc
in
shr
aaa
sbb
iret
in
out
mov
jmp
int
ljmp
div
shl
sarb
test
loop
roll
mov
hlt
out
into
xlat
xor
cld
cld
leave
cmp
rcl
cmp
loopne
hlt
ljmp
test
repnz
cmp
cmc
aam
aas
iret
repnz
cli
in
in
test
jmp
iret
call
call
or
lock
out
fcomip
vpmulhw
iret
xchg
into
fidivs
xlat
cmp
aad
jmp
cmp
clc
fchs
std
in
fsub
cld
xchg
repnz
stc
ror
fxch
aaa
int
cmp
roll
loop
fucom
adcb
xor
neg
idiv
rcl
repz
loop
cmc
out
in
ljmp
mov
into
stc
enter
sbb
loope
shl
shl
mov
cli
iret
cld
repz
fucomip
loopne
leave
xor
sarb
fstpt
sarl
call
fsubp
cmc
faddp
std
aas
cld
int3
loop
xchg
xchg
jmp
jmp
in
cld
fucom
repnz
aas
loop
loope
in
iret
lock
loop
sub
idivl
shl
test
rol
xlat
test
in
cli
clc
enter
rcr
imull
xor
fdiv
out
sti
enter
fcmovnb
xchg
repz
ljmp
test
rol
ljmp
jmp
ret
clc
sti
repz
flds
loope
nop
aam
out
aam
stc
jmp
xlat
sar
rcr
cmp
addl
mov
out
test
ret
sti
xor
aaa
call
sarb
clc
filds
decb
lret
test
ss
call
lock
cmp
stc
fadds
mov
fdivr
into
lret
lret
xor
xor
jmp
in
cld
xlat
rcr
fmull
fmull
int
mov
aad
lds
sti
ljmp
sarl
mov
loopne
repz
sar
int3
std
cmp
repnz
ds
xchg
mov
in
lret
out
ret
jmp
lret
repnz
aad
cmpb
mov
clc
out
xchg
std
in
das
repnz
iret
out
cmp
jecxz
iret
in
ret
test
xchg
out
fsubrp
int3
xchg
out
xor
ret
lock
cmp
idiv
ret
roll
loop
out
ljmp
div
ss
les
aam
jecxz
ljmp
in
mov
popl
shl
out
das
fcmovnbe
repz
rcr
cmc
xchg
loope
push
iret
xor
in
fucomi
fsub
ror
sbb
iret
cmpl
sti
xchg
fimuls
cmc
loopne
fcmovbe
cmc
shlb
stc
int3
rcr
aaa
cmp
aam
stc
repz
out
fcomip
fmulp
int
cmc
out
not
out
repnz
loopne
fincstp
aam
ffreep
hlt
vshufpd
fmulp
addb
aad
cli
rcl
cmp
sti
hlt
cmp
clc
loopne
fucomi
int3
xchg
in
int
xor
fidivl
jecxz
aas
in
fsub
out
sar
flds
lret
cld
in
lret
repnz
out
ljmp
lock
jecxz
jmp
cld
in
sti
loop
mov
loope
xor
iret
out
xor
fsubr
fsub
ffree
mov
int3
out
mov
jmp
icebp
out
std
lock
cmp
ds
div
call
sti
out
mov
leave
fcmovnbe
out
into
hlt
testl
mul
lret
std
jmp
fstl
repz
repnz
ss
int3
cmp
sar
hlt
fcmovnb
xchg
in
repnz
mov
int
lret
aas
sarb
int
ret
out
inc
loopne
test
sub
sbb
cmc
add
add
ret
int3
ror
aad
lahf
mov
dec
cs
cmc
jle
pop
add
shl
adc
into
loopne
fucom
lret
sub
out
sub
cli
into
cmp
cli
ret
shl
cli
loop
xchg
rcr
in
incb
mov
shl
shl
fldt
xor
call
testb
in
mov
out
and
leave
shr
test
call
shl
sarb
shr
in
lret
fcmovu
in
in
imull
shr
sti
repnz
shl
test
icebp
ret
add
sbb
mov
test
sar
icebp
enter
ret
cld
cld
lock
ds
hlt
jecxz
in
fstl
hlt
mov
iret
loopne
iret
int3
in
jmp
int
sub
ret
in
out
jmp
aaa
fcomi
ss
ss
lock
clc
shl
testb
loope
fucomp
ret
xor
int3
ret
out
lret
cmc
adc
xlat
test
add
fsubr
ficoms
sub
sub
stc
fstp
cmp
fidivrl
aas
test
jecxz
xlat
cld
lock
into
out
in
ds
aaa
not
fcmovu
call
into
rcl
test
xlat
fucomi
out
mov
rcr
xor
cmp
shl
cmp
cli
jmp
int3
test
rcl
test
enter
out
out
les
sar
jmp
sti
rcr
cld
test
repz
std
test
aad
hlt
iret
rol
cli
lret
aam
lock
adc
enter
mov
enter
div
lock
sar
call
xor
rcl
xlat
aad
loop
mov
sub
div
jecxz
cld
cmp
aam
shl
ds
hlt
rcl
enter
xchg
fsub
ficoml
xlat
iret
fucomip
icebp
into
out
repz
out
in
sub
in
mov
sub
into
xor
aad
imul
loop
cmp
cmp
repnz
sbb
ljmp
aaa
fpatan
lret
shl
out
xor
cmp
fsubr
inc
mov
loopne
out
nop
roll
imul
sub
out
into
fcom
inc
fucomp
fisttps
fcomp
int
out
ret
xor
sar
leave
test
out
shr
cmp
ret
fst
fdiv
in
and
mov
int
cmc
xchg
loopne
lret
xor
xlat
xor
out
repz
int
out
test
xlat
addl
xchg
fucomip
cli
mov
hlt
in
ljmp
aaa
out
ljmp
std
fsubp
orb
movl
neg
int
fnstenv
cmp
mov
orb
mov
cli
aad
rol
fucomi
cmp
out
cli
into
fld
flds
out
lock
xchg
lea
cmp
jmp
cld
fmul
fcomip
xchg
mov
mov
test
loope
xchg
loope
sub
lret
ror
rcl
aam
cmp
int3
ror
sbb
ret
stc
sti
test
xchg
mov
lret
neg
in
jmp
fcom
ret
out
shl
enter
std
orb
in
aam
aaa
in
aad
bnd
shl
out
out
cmc
loopne
xchg
ficoml
int3
in
std
cmp
jecxz
ffreep
cmc
mul
cld
addl
in
ror
int
xlat
jmp
repnz
std
out
jecxz
cli
jmp
ljmp
fucomp
out
div
aam
cmp
lret
aam
roll
addl
rorl
fadd
jecxz
shr
xor
aas
rol
rcr
hlt
xchg
int
fucomp
enter
lret
out
cmp
iret
test
leave
icebp
cmp
int3
std
faddl
in
leave
jecxz
fcomip
das
xor
into
loop
xor
loopne
ljmp
std
and
faddp
in
nop
orb
divb
rcr
cld
xor
rol
call
enter
iret
mov
cli
jecxz
mov
jmp
shr
icebp
xlat
out
int
fcmovnbe
ret
incl
aam
stc
mov
loopne
std
shl
int3
loope
shl
xor
xor
cmp
mul
sar
adc
in
out
std
lret
jmp
rol
stc
shlb
icebp
ftst
hlt
jmp
in
aad
jecxz
cld
and
into
mov
sub
cmp
cmc
out
in
fdivr
iret
cmp
inc
shlb
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
leave
lret
aad
int
cmpsl
mov
es
lods
clc
jle
pop
add
loope
lock
iret
loop
fldl
stc
fcomp
sarb
jmp
sti
in
sti
icebp
int3
loop
in
inc
les
mov
repnz
xor
clc
fcomp
xor
aam
aad
loope
and
fadd
flds
loop
out
xlat
cmp
sarl
rol
aam
rcl
jecxz
fld
xchg
cmc
xchg
in
int
repz
in
int3
cmp
leave
iret
cmp
cmp
addb
jmp
rclb
xor
out
lret
xor
xor
clc
rolb
mov
in
jmp
mov
repnz
xor
jmp
fnstsw
rcl
aaa
out
rcr
aam
orb
repz
xchg
call
int3
cmp
out
clc
in
cld
repnz
aam
cli
fcmovnb
call
fmulp
iret
nop
mov
fiaddl
loop
shl
neg
sti
clc
in
out
lds
xchg
jecxz
orb
out
cmp
fcom
aam
xlat
clc
add
clc
incl
mov
jecxz
jmp
shr
in
cmpl
out
frndint
leave
fsubr
aam
clc
iret
ret
fsubrp
mov
mov
aad
out
in
xor
hlt
ljmp
stc
stc
mov
enter
call
rcl
out
ss
into
into
out
idiv
cmc
mul
leave
mov
decb
in
cmp
call
aaa
out
rol
repz
out
ret
clc
neg
out
cli
out
loop
aas
loope
sub
lret
les
out
leave
cmp
out
fiadds
shl
loop
call
repnz
cli
test
xlat
repnz
in
call
ljmp
hlt
in
call
repnz
int3
fdivp
repz
cmp
call
repnz
xor
int3
in
xor
sti
inc
jmp
repnz
fsub
dec
cmp
clc
loopne
cld
or
test
xor
lret
iret
loope
iret
clc
sar
in
testl
fsubrp
iret
repnz
aam
frndint
cli
fcomp
cld
enter
testb
test
in
orb
shlb
shr
jmp
int
rcl
adc
test
jecxz
repz
shr
cmc
cmp
leave
repz
cmp
jmp
clc
std
loopne
test
loop
sub
mul
std
lret
xor
cmc
loopne
rol
jecxz
call
faddp
icebp
into
enter
icebp
aam
ror
sarl
cmp
aas
in
not
fsubr
test
cld
rcl
leave
mov
sti
fscale
popl
jecxz
jmp
xor
hlt
dec
in
shl
repnz
aam
sub
mov
and
cld
fsubrp
xor
neg
leave
xor
call
xlat
iret
cld
cmc
repnz
or
fisttps
loop
ret
jmp
ss
std
aad
in
ret
aad
sti
sbb
mov
adcb
lock
in
icebp
repnz
shr
cmc
jmp
fld
test
addb
aaa
divb
fmul
repz
test
std
loope
cld
loope
fcmovnu
out
lea
iret
xlat
clc
out
out
out
cmp
lock
ds
cli
fdiv
fnstsw
lret
in
not
stc
cmp
out
fnsave
fnstsw
repz
repz
call
out
xchg
mov
or
xor
out
aam
fucomp
in
fst
int3
out
hlt
cmpl
clc
in
loop
enter
out
shl
cmp
cmc
fstpt
int3
cmp
loop
aad
stc
xchg
mov
xchg
repnz
cld
in
xor
lret
shr
iret
into
aad
int
in
fcmovbe
ret
ljmp
cmp
int3
clc
aad
cmp
cmp
repnz
div
repnz
loopne
mov
into
mov
lret
lret
fsub
into
clc
aam
out
loope
div
rcl
rcl
out
mov
or
xchg
mov
shl
xor
icebp
int3
fstpt
stc
fcmovnu
jmp
or
leave
lea
mov
fcmovbe
cli
cld
cmp
test
test
call
jmp
jecxz
imul
xlat
ss
fcom
cmp
ret
icebp
aas
cli
jmp
out
in
cmc
test
aaa
jecxz
int
sarl
xor
jmp
aas
ror
aas
aad
iret
rol
adcb
push
pop
jmp
jle
pop
add
in
push
cmp
call
in
out
cli
in
out
xchg
out
rol
out
aam
stc
dec
in
fmul
repz
filds
ljmp
in
repz
lret
vpand
fdivrl
repnz
out
ffreep
not
out
cli
in
jmp
mov
ffreep
lret
xor
shl
cmp
iret
rcr
idiv
std
sbb
xchg
xchg
out
xchg
inc
xor
loope
aaa
rcl
lock
div
jmp
int
cmp
xchg
lock
out
sub
call
call
sar
add
cld
in
ret
xchg
enter
xchg
xchg
jecxz
out
clc
cs
ret
clc
std
loopne
cmc
sub
aam
call
testb
lret
mov
int3
neg
out
cld
dec
flds
adc
test
and
xor
ror
int
cmp
shl
jmp
int3
cli
lock
popl
iret
cli
fcomi
shl
repnz
cmp
test
jmp
xchg
int
fmulp
int
shlb
hlt
idivl
int
hlt
xorb
rcr
add
ffreep
fcos
mov
fistl
loopne
in
out
fucomp
repnz
sar
out
int3
repz
repz
xchg
std
shl
lret
leave
cmp
out
aad
jmp
repz
ret
mov
out
into
stc
nop
lea
xor
rcr
xor
clc
aam
repnz
in
jecxz
cmp
cli
jmp
out
xchg
stc
iret
fldcw
stc
xor
sti
cmc
sbb
rol
rcr
call
test
cmp
lret
int3
cmp
jmp
in
aas
sub
cmp
jmp
cmp
lret
icebp
idiv
ljmp
aam
fsub
out
neg
xlat
xchg
jmp
mov
mov
int3
in
repz
xor
hlt
loopne
in
out
shl
sti
loope
xchg
xchg
lea
jmp
fldt
call
cli
repnz
rcl
addl
lret
repz
rcl
cmc
stc
shr
jecxz
sub
call
orb
in
out
div
xor
out
std
clc
lret
fdivrs
out
and
lea
jmp
leave
ror
aam
lock
not
cmc
sti
sub
ret
or
xchg
lret
enter
xlat
fmul
cmp
loopne
aam
flds
fisttpl
fcomip
ss
repnz
cmp
cmp
add
aam
mov
xchg
cmc
mov
xor
lds
cmp
out
fstpt
out
ret
aam
fdivr
test
int3
out
in
in
dec
aaa
in
rcl
shr
in
fmul
jmp
cmp
repz
fsin
in
out
addl
jmp
ljmp
stc
shl
icebp
cli
repz
fcomp
out
mov
out
faddl
sti
cli
stc
enter
in
int
cld
cmp
cmp
cli
addb
in
loope
enter
sti
int
stc
neg
enter
int3
xlat
ds
cld
in
jecxz
decl
cmc
out
int3
lock
aam
sarb
rol
out
stc
or
aad
rol
cmc
cli
jmp
shr
hlt
idiv
jmp
mov
leave
icebp
in
xchg
ret
shl
xor
xor
repnz
out
cmp
cmp
test
testl
leave
std
iret
fsubr
in
xor
sbb
int
cld
loope
rcl
jmp
mov
lret
out
out
repz
repz
sarb
in
hlt
aam
ret
loop
mov
sub
aaa
in
xor
aaa
out
cmp
cmp
fsubr
addl
lret
test
shr
aad
fcmovne
leave
in
xor
cmc
in
fucomp
leave
stc
test
xchg
lret
lock
ret
cmp
fpatan
cmp
call
cld
std
fucomi
cld
fldl
stc
mov
rorl
xor
enter
fildl
rol
fsubr
jmp
out
into
cmc
in
cmc
out
in
ret
ljmp
repnz
jmp
hlt
fxch
ljmp
into
lock
idivl
add
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
sbb
mov
subl
mov
add
xor
mov
mov
sbb
add
mov
xorl
jmp
enter
fstp
fstpl
sub
or
add
cmpb
add
out
lock
aam
icebp
out
xlat
cmc
xchg
nop
xchg
mov
int3
aam
fdiv
xor
iret
cmc
enter
cmp
repz
ds
call
out
or
lret
rol
cli
int3
xor
hlt
out
hlt
mul
xlat
ret
call
xlat
mov
xchg
ljmp
out
into
xlat
call
out
cmp
out
sarb
lret
cmp
int
cld
sub
out
cmp
ss
sti
in
xlat
rcr
fcomi
fmull
mov
shl
call
fyl2x
cld
int
int3
or
xchg
out
test
xchg
test
movl
int
filds
icebp
cli
shl
lret
leave
out
rolb
shl
xor
xor
fnstenv
lock
into
sar
out
mul
addb
xchg
xchg
call
xlat
call
cld
cld
std
ret
fdivr
test
ljmp
mov
cmp
cmp
cmp
fld
cld
repz
xchg
test
in
hlt
mov
test
leave
lret
sbb
out
stc
loop
jecxz
out
fdivr
fimull
out
hlt
loop
ror
rcl
incb
into
into
cmc
orl
cli
loopne
das
xor
leave
repnz
cmp
aas
rol
sti
cmp
out
repnz
sti
lret
int3
fildl
adcl
out
out
cli
cmp
out
fidivrs
stc
cld
aad
fdivr
sbb
sti
fildl
in
aad
ljmp
fcom
lret
out
out
mov
enter
icebp
jecxz
std
mov
stc
imul
jecxz
das
cmp
in
cmp
aas
xlat
in
mov
mov
mov
sti
mov
leave
fucomi
cli
jmp
ljmp
and
ret
loop
mov
mov
shl
jecxz
loope
xor
xor
jmp
cmc
aas
cmp
test
loop
loop
fimull
cld
mov
shll
fnstenv
into
rcl
lret
shl
ror
rolb
in
loope
xor
loopne
ret
ss
neg
cmp
cmp
aad
xchg
fcmovu
stc
xchg
mov
dec
in
rol
xor
lret
shlb
out
lret
hlt
cld
mov
loope
test
rol
fmull
mov
fst
ljmp
in
fmull
std
lret
xor
jmp
shr
shll
cmpl
cmp
loopne
jmp
loopne
ljmp
aad
hlt
lret
std
adc
aam
sti
xchg
in
std
addl
cld
dec
cmp
jecxz
cli
fadd
test
xchg
in
lret
xchg
in
jmp
loop
lock
aam
cmp
repz
mul
roll
jmp
mov
out
cld
sub
out
cmc
aaa
out
xor
rcl
out
repnz
add
jecxz
fcmovnu
cli
enter
test
lret
lret
in
test
sar
cld
fcomip
mov
cld
lret
jmp
jmp
lret
cmc
aaa
ss
cli
mul
out
int3
ret
in
out
cmp
ffree
leave
fdivp
clc
jmp
out
xlat
shrl
aas
cmp
cmp
aad
fadd
imul
out
in
std
mov
popl
cmp
int
int
in
filds
shl
fildl
mov
sub
aad
out
cmc
sarb
aas
not
std
cmc
in
aad
sar
test
ffreep
rorl
loop,pt
ss
cmp
sti
fistpll
frstpm(287
fucom
in
into
loopne
jmp
out
in
xor
mul
fucomp
into
lock
iret
aam
out
test
mov
fucomp
mov
cli
fst
into
ss
jmp
sarl
cld
fucomip
cli
rorl
into
iret
loope
cmc
xchg
in
in
xlat
xor
in
into
enter
repz
addb
stc
iret
in
fstp
std
loop
out
divb
hlt
hlt
aaa
divb
aas
adc
stc
sti
mov
stc
mov
lret
into
mov
icebp
cs
xor
fdiv
cmc
aam
xor
test
cmp
xor
mov
out
cmc
in
out
cs
out
into
xlat
out
in
sbb
cld
into
icebp
popl
jecxz
hlt
fcom
movl
and
movl
movl
movl
or
jmp
rcl
aad
aad
fstp
sub
cld
aaa
fildll
jl
add
clc
cmp
iret
out
aas
sar
rolb
int3
fstp
lret
ljmp
iret
ljmp
int3
test
xchg
out
fsubr
iret
fiadds
into
xor
in
stc
repnz
fadd
in
cmp
aas
cmp
fsubp
stc
jmp
enter
xchg
out
loopne
icebp
ret
cmp
cmp
addl
aam
clc
int3
mov
jecxz
xor
fxtract
xor
rcr
not
cmp
cmc
cli
fstpt
lds
pause
or
cmc
lret
aaa
enter
aas
sti
or
in
std
ret
imul
mov
ljmp
mov
jecxz
cmp
sti
cmp
jmp
cli
in
in
loop
test
stc
int
fscale
repnz
call
fprem1
aad
repz
call
mov
enter
mov
xor
in
shr
aam
push
aaa
ss
xchg
jmp
or
cmc
xchg
nop
out
icebp
out
in
cmc
in
hlt
cld
aam
call
cmp
imul
iret
stc
loop
and
out
cli
clc
aad
aaa
fidivrl
fiaddl
test
lret
ret
fisttpl
in
int3
fldlg2
sti
jmp
ljmp
loop
test
fdivr
loope
stc
jmp
enter
rcl
lret
mov
enter
repz
rol
loop
stc
loop
fiaddl
cmp
cmp
xor
cmp
aaa
stc
sub
test
fdivp
rorb
jecxz
shl
ror
in
aaa
lds
out
ljmp
aas
cld
cmp
test
jecxz
loope
mov
mov
shr
aaa
lret
sti
ret
rcr
std
in
fdivrp
repnz
std
enter
jmp
xchg
rcl
sub
call
jmp
fstpt
ret
loope
movb
and
xchg
loopne
mov
jmp
shr
int
xor
aam
ljmp
sti
loop
ljmp
shl
loop
xor
sar
jmp
fdivl
into
rcl
rolb
jecxz
sti
xchg
xor
out
ljmp
aam
iret
aad
jecxz,pt
aad
call
and
loopne
lock
xor
sub
call
aad
fcmovu
shr
mul
in
rorl
fdivr
xchg
jecxz
int3
out
out
repz
in
fcmovnb
cmp
cmp
sti
add
int3
fmull
out
hlt
leave
sub
clc
aam
iret
out
cmp
cmp
fucom
repnz
clc
stc
xor
icebp
std
ljmp
cmp
std
ret
sti
mov
lock
xchg
aad
loop
sub
iret
jmp
fdiv
loope
loopne
repnz
fiaddl
in
std
in
out
out
lret
stc
lock
xor
fdivr
in
ret
inc
cli
test
in
cld
in
test
shrb
loopne
repnz
xor
cmp
xor
loopne
mov
fsub
ret
nop
lret
lret
call
out
in
cli
fcomi
stc
aas
repz
cmc
out
xchg
hlt
cld
fadds
cld
rcl
rcl
cmp
cmp
not
rol
clc
clc
icebp
fprem
lret
iret
cld
leave
cli
repz
out
shl
xor
mul
cld
enter
in
les
loopne
loop
jecxz
xchg
rorb
cmp
jmp
shr
xlat
hlt
fdivr
cmp
jmp
ljmp
xchg
xlat
icebp
loope
fadd
cmp
sarb
int
cmp
cmp
cmp
aad
loopne
mul
test
lret
xchg
shlb
loop
lret
shrl
leave
out
cmp
in
repnz
lock
int
lock
rolb
jmp
mov
lret
lock
sar
loop
shl
xchg
mov
ljmp
xor
cmp
out
cmp
fmul
aad
lret
idiv
xlat
cmc
loop
xchg
les
shr
xchg
out
clc
lret
cmp
dec
test
roll
loopne
fsubr
out
mov
lock
out
int3
shl
lret
cmp
xor
dec
in
sbb
sub
out
les
xchg
loope
shrb
xor
aam
clc
aas
ljmp
call
icebp
xchg
out
lret
call
in
icebp
in
cmp
fildl
std
dec
out
stc
test
out
xchg
in
in
cld
repnz
movl
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
xor
movl
movl
xor
jmp
into
aad
lret
rcr
mov
loope
repz
jl
stc
out
hlt
into
ss
cld
shl
ret
in
sti
mov
jmp
xor
cs
jmp
fcmovu
rcl
shl
test
fmul
out
iret
cli
in
jmp
loop
in
stc
shlb
int3
not
ds
loop
cmp
aam
aam
std
icebp
mov
loopne
iret
lock
lock
rcl
out
imul
rcr
cmp
test
fcomp
hlt
cld
out
cld
mov
orl
clc
fmulp
fdivrs
loop
loope
ds
fdivr
loop
loop
lret
xchg
in
mov
sti
ret
aaa
xor
out
fstp
fdivp
cmc
cli
adc
ret
lds
std
in
test
repz
lock
sub
fldpi
cmp
in
div
loope
idivb
ds
ljmp
out
xchg
repnz
enter
int3
cmp
addb
repz
out
in
sub
aad
iret
repz
repz
loop
aam
aad
xchg
fsubp
jmp
mov
repnz
hlt
cmp
repnz
call
or
xor
repnz
testl
xlat
xor
out
aad
fpatan
loope
not
sar
sti
out
out
fucomi
loope
fcmovu
nop
mov
icebp
lret
mov
ss
lret
into
lret
addl
xchg
in
out
lock
ret
cmp
aam
aad
ds
fucom
clc
xchg
ljmp
xor
jmp
leave
xor
xor
faddl
mov
iret
ljmp
aam
jmp
lock
addl
sar
hlt
in
enter
xchg
nop
xchg
cmc
fnsave
sti
cld
lret
in
fyl2xp1
loopne
fcmovb
cli
rcr
ljmp
incb
out
in
aaa
lret
fmul
ds
ret
icebp
adc
cld
mov
into
lds
in
out
icebp
xor
out
xor
sti
std
out
div
orb
subl
shl
xor
cld
out
sti
icebp
aad
fdivrp
stc
repz
cli
fdivr
shl
int3
cld
aam
xor
cmp
stc
adc
roll
hlt
in
lret
enter
incb
ljmp
out
aas
in
loop
aam
out
mov
lret
xor
hlt
jmp
ror
rcr
shr
out
shr
aad
cmp
out
test
nop
mov
ljmp
std
into
iret
shl
xlat
fcmovne
loop
out
xchg
cli
mov
int3
mov
call
enter
stc
lock
xor
xlat
mov
out
in
out
in
int
and
lret
into
xor
repnz
ror
fcmovb
rol
out
xlat
out
enter
xchg
in
lock
xor
in
loop
fcmovu
leave
cmp
aam
fsub
push
fldl2t
neg
test
clc
xlat
leave
call
xchg
cs
cmc
xor
jmp
lock
repz
aas
repz
leave
lret
jmp
rcl
out
test
lret
lret
lock
faddl
fldl
sbb
rolb
in
out
fnop
call
aam
cmp
test
aad
addl
mov
enter
fcmovu
sti
out
cmp
int
aam
cld
cmp
int
out
mov
ljmp
xor
out
jmp
cmp
shl
fld
rol
lret
int3
in
out
into
xchg
xor
fldcw
out
fcmovne
fistpll
fmul
cmc
shl
loopne
fadd
mov
add
mov
cli
mov
das
jmp
aaa
lret
int
ret
test
test
fdivr
lret
testb
call
iret
xor
rcr
jmp
in
stc
out
fadd
hlt
cld
addb
lret
dec
enter
sti
cmp
cmp
aaa
ljmp
jmp
int3
lret
lea
sub
cs
loop
repnz
repnz
cmp
loop
shl
fsub
clc
leave
cld
in
in
rcr
shll
repnz
repnz
cmp
ds
sti
cmp
loopne
cli
jmp
call
shl
ret
rol
in
repz
repz
cmp
cmc
fcmove
in
out
hlt
imul
ret
in
xchg
icebp
nop
loopne
cmp
mov
jmp
xor
xlat
aas
inc
in
in
aam
cmc
fdiv
mov
in
jmp
addl
push
fs
add
cmc
add
add
rol
xlat
vpaddusw
xchg
jb
push
ret
in
jl
jle
pop
add
int
loopne
repz
cld
into
out
repz
loope
rcr
repnz
stc
fisttpll
in
into
ror
in
shl
in
lret
loope
adc
cmp
ror
aas
in
fxch
loop
in
std
lret
call
rcl
hlt
lret
cmc
fmulp
call
cmp
incb
out
mov
int
out
loope
std
in
cld
xlat
cli
cmp
repnz
loopne
fadd
mov
in
rol
lret
cld
in
out
aad
into
flds
cli
lret
out
std
fneni(8087
mov
loope
xchg
xchg
xor
jmp
leave
stc
iret
test
ret
cmp
loopne
hlt
fmulp
enter
nop
ljmp
cmc
into
test
sti
cmc
fcmovne
aad
sbb
ret
test
and
lock
stc
jmp
call
repz
loope
xlat
filds
jmp
loop
icebp
shll
xor
shlb
ss
cmp
cmp
push
dec
out
lret
cld
nop
jecxz
xchg
test
loope
cmp
jmp
jmp
sub
nop
test
cs
int
hlt
rcl
cmp
std
ret
enter
jecxz
nop
mov
shl
into
leave
fxch
sti
cmc
loope
rcl
in
hlt
fcomp
loopne
xchg
loopne
mov
or
jmp
xor
sub
jmp
cmp
div
std
jmp
lret
repnz
ljmp
jmp
cmp
out
cmp
fcmovb
mov
fxch
mov
out
out
xchg
ror
fld
in
xlat
divb
out
enter
iret
cmp
repz
mov
mov
int3
lret
out
aaa
xor
in
in
fistpll
add
ds
lret
in
std
lea
fidivs
aam
aaa
fiadds
xchg
idiv
sar
mov
mov
shr
icebp
fdiv
cs
cmp
int3
xlat
shr
loop
xchg
add
fdivr
out
jmp
idiv
xor
out
ds
stc
hlt
ror
stc
cld
addl
mov
icebp
iret
into
ljmp
rcl
shr
cld
sti
addl
xchg
mov
xchg
xor
int3
rcl
lock
fstp
call
in
fnstcw
test
out
fcmovnbe
in
bnd
xor
xor
icebp
clc
enter
stc
out
fisttpll
test
loopne
in
iret
in
jmp
cmp
xbegin
xor
ffreep
mov
and
lret
repz
out
mov
stc
xor
in
in
sti
lret
cli
repnz
neg
cld
out
ds
xchg
mov
clc
rolb
ds
std
iret
neg
ljmp
in
test
testl
leave
lret
clc
xor
fdivrl
fsub
fdiv
iret
jmp
ljmp
xor
sub
not
xor
ss
in
aam
xor
xchg
filds
xor
shl
ror
leave
xor
clc
cmp
cmp
add
call
cmc
loop
idiv
shl
cmp
call
stc
fdivr
repz
in
fucom
jmp
std
fdivr
jmp
jmp
xor
aad
xor
fnstsw
cli
ret
clc
repnz
cli
int
stc
test
loop
out
in
int
sub
sti
icebp
aaa
sti
cmp
sar
iret
test
ret
aam
fisttps
in
fdivp
xchg
xor
lret
fmul
ds
out
cmp
ret
mov
enter
xchg
loopne
call
or
rcl
cmp
cld
in
addl
mov
repnz
int
ljmp
repz
out
testl
int3
repz
shr
rcr
in
xlat
cmp
iret
cmp
lock
loope
test
sti
loop
dec
loope
lock
jmp
cmp
std
sarl
roll
leave
leave
ret
jmp
and
xor
jmp
in
fdiv
in
div
notrack
jmp
cmc
std
sbb
lret
aaa
xor
xor
fucomi
aas
lret
shl
jmp
fneni(8087
xchg
fcmovu
ret
lock
call
shl
jmp
int3
ljmp
push
in
shl
mov
mov
test
icebp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
jmp
iret
ror
aas
aad
iret
shlb
lods
jmp
sub
pop
add
out
xor
ljmp
in
lret
fdivr
std
lock
sub
jmp
enter
cmc
int
into
cli
cmc
cmp
fidivs
cmp
clc
cmc
neg
xchg
std
mov
stc
sti
add
jmp
fprem1
out
cmp
test
test
mov
icebp
jmp
xor
int3
ss
cmp
hlt
fnstcw
in
fcomip
cld
in
cmp
mov
cmp
sub
cmc
xchg
int3
test
ret
aaa
out
fucomi
fdiv
idiv
neg
sub
xchg
xlat
in
ljmp
ret
shl
call
fsubp
xlat
rcl
sti
xlat
shl
mov
mov
in
dec
sub
xlat
xor
in
hlt
and
cld
mov
fldl
fucomp
shr
shl
les
call
fmul
cmp
cmp
idiv
fst
jmp
mov
loope
icebp
clc
in
xor
sti
sti
enter
cli
div
clc
rol
fcmovne
mov
repz
lock
lock
icebp
std
lret
lock
fstp
clc
cld
faddp
aad
xchg
cmp
mul
lret
xchg
lret
fucom
ljmp
in
in
ljmp
out
shr
shl
xlat
cmp
in
fisttpll
nop
xchg
aaa
xor
leave
in
cmp
sar
aas
loopne
add
jecxz
mov
imul
aam
in
rcl
ror
repz
shr
test
xor
dec
hlt
call
xchg
out
aam
xor
std
jmp
loop
sarb
cld
and
jmp
xorl
in
repnz
lock
xor
jecxz
shl
ds
sbb
mov
nop
rcll
out
xor
in
leave
cmp
loop
in
cmpb
cmpl
mov
ret
hlt
enter
cmp
cmp
fsubr
cld
fdivr
stc
jmp
add
int
mov
hlt
xor
icebp
into
shl
int3
jmp
div
fabs
loop
mov
std
fld
ljmp
adc
shl
in
cmp
lret
hlt
repnz
fdiv
lock
loope
loopne
adcb
aad
jmp
cmp
cmp
loopne
rol
in
lds
out
sub
repz
hlt
aas
in
cmp
lock
xchg
fsub
and
in
in
jmp
xor
xor
lret
aaa
out
cmp
loop
stc
call
lret
loop
out
jmp
enter
cmp
shl
cmp
sti
rcl
xchg
sti
div
iret
std
ror
lea
repz
mul
cmp
aas
in
fdivp
fdivp
jmp
ljmp
ljmp
int3
cld
icebp
aam
cmp
fld
loope
jecxz
mov
xchg
cmc
out
shlb
sarb
out
in
rcl
loopne
ret
std
cld
into
test
in
jmp
ljmp
shl
clc
xor
cli
fmul
lret
cmp
sar
in
out
enter
vpor
hlt
das
cmc
xor
sti
cmp
loopne
sarl
hlt
std
cli
fsubp
leave
in
jmp
xchg
in
fdiv
roll
aad
ret
out
cld
lret
jmp
loopne
in
loop
into
jmp
in
ss
not
stc
xlat
cli
rol
jecxz
loope
int
cld
int
mov
iret
in
idivl
cld
loope
repnz
add
fimull
leave
loopne
iret
cmp
cmp
shlb
hlt
stc
in
mov
shl
repnz
testl
jecxz
sbb
ret
shr
call
cmc
into
out
in
lock
repnz
xor
hlt
cmp
mov
out
in
fdivrp
jecxz
xor
repz
loop
cmp
idivl
aam
enter
loop
shl
out
cli
loop
jecxz
ret
stc
icebp
hlt
aad
cmc
iret
in
aas
rcr
rcl
sar
lock
cmc
add
out
out
xor
cmp
shl
loopne
cmpb
icebp
xchg
test
ljmp
repnz
lock
cli
leave
neg
out
dec
aad
out
cli
in
fsubrp
out
jmp
repz
out
mov
xor
in
shlb
cmc
xor
rolb
in
mov
mov
xorl
add
movl
cmp
je
push
movl
jmp
and
jmp
enter
fcmovnbe
int
pushw
jle
mov
lcall
int3
mov
fmul
mov
repnz
div
jmp
xorl
clc
aas
clc
xlat
out
fcompp
mov
call
jmp
loop
test
xlat
xor
lret
cmpb
test
loope
cld
lret
jmp
in
out
jecxz
aaa
jmp
cmp
jmp
test
test
fcmovnbe
cld
test
fcmove
in
into
jecxz
repz
clc
loopne
in
aaa
lret
fabs
cmpl
jmp
cmp
fisttpll
out
out
iret
ss
iret
enter
xor
lret
jecxz
loop
ffree
xlat
test
out
call
out
aaa
shl
icebp
xlat
call
idiv
cmp
rol
loop
sti
test
out
orl
int
ljmp
lds
sbb
test
iret
xchg
xchg
enter
call
cmp
fcmovnu
out
aad
ret
test
mov
orl
stc
ret
shll
ljmp
jecxz
jecxz
fcmovu
in
fmulp
fstl
enter
das
int3
icebp
jmp
rolb
out
xor
xor
xor
in
std
cli
leave
cmp
fidivrl
add
mov
repz
xchg
out
in
loop
aam
lds
dec
ljmp
cld
jmp
out
call
mov
hlt
aad
cmp
cmp
repz
loope
ds
std
fcmovu
aad
testb
shlb
rcl
cmc
stc
cli
jmp
std
sarb
fsubr
enter
lret
cld
ljmp
int3
hlt
in
lock
xor
cmp
leave
fsubr
clc
in
in
in
mov
jmp
xor
jmp
shl
cld
jecxz
roll
add
clc
clc
fsubr
loopne
lret
aam
ss
out
enter
aaa
repz
shl
test
sti
std
xor
xchg
test
clc
shr
enter
out
aad
std
sar
clc
ljmp
ds
xor
in
shr
lock
loopne
cmpl
xchg
enter
mov
lock
lret
fcmovne
xlat
cli
clc
lret
ljmp
xor
jmp
fiadds
out
call
sti
call
and
jmp
rcl
iret
loope
int3
repz
xor
cmp
jmp
fadd
sub
test
jmp
fisttps
jmp
loopne
lret
rcl
cmp
cmp
fucompp
ds
cmp
sbb
fsubp
leave
stc
lret
incl
in
sub
into
f2xm1
jmp
fadds
fdiv
sbb
mov
ljmp
in
shl
in
push
fadds
div
in
cmp
and
loope
sub
leave
in
rcl
cli
call
div
ret
lock
stc
repz
lret
mov
aad
out
fdivrp
ds
lock
ret
fdiv
dec
sbb
decb
out
loopne
xor
shl
cmc
fxch
cld
cmp
fmul
cld
in
cli
sub
mov
lds
cli
fnstsw
cli
rcl
rcr
rol
sar
call
fsubr
loopne
shl
rorl
xor
into
xlat
int3
stc
out
cld
rol
orb
fdivrp
in
int3
int
test
loopne
out
shlb
int
sti
leave
inc
fst
rcl
into
flds
mov
mov
jmp
rcr
icebp
icebp
std
rcr
repnz
clc
in
int
fimuls
lret
xor
xor
out
xor
cmp
idiv
icebp
std
in
leave
imul
and
cld
repz
repnz
jmp
int
into
cmp
rolb
mov
lock
xor
aad
aad
xor
or
dec
incb
test
out
fsub
iret
xor
aaa
icebp
repz
cmp
cmp
aas
int3
fdivrs
cmp
in
test
lret
mov
xchg
aaa
xor
aad
xlat
out
sti
leave
not
icebp
cmp
hlt
test
sbb
xchg
loop
out
mov
lock
into
sar
fcomi
rcr
cmp
in
leave
ljmp
rorb
aaa
aam
ljmp
hlt
aam
cli
ret
mov
and
mov
xorl
jmp
leave
aam
xlat
in
fsubrl
jo
mov
jl
idiv
lret
in
loopne
shr
jmp
out
fstpt
ror
out
xor
sbb
xlat
xchg
lret
cli
clc
ficoms
xor
lret
out
loopne,pt
in
cmp
rcr
rolb
dec
cli
in
hlt
test
xlat
jmp
fucomip
iret
sar
in
cmp
cld
shl
ffree
ret
lock
out
iret
out
xor
repz
cli
cli
xorl
shl
mov
cld
leave
fmuls
ljmp
icebp
in
stc
cmp
lret
icebp
sti
incb
fsubrp
jmp
addb
aam
leave
call
lock
faddp
rol
out
test
out
cli
mov
shr
call
int3
sub
out
ds
std
cli
clc
in
jmp
xor
xchg
shl
leave
fadd
clc
jmp
aad
cli
aad
out
aad
jmp
mov
enter
mov
xor
fdiv
out
int3
shr
xor
aas
fcom
test
cld
rol
fyl2xp1
hlt
sbb
fimull
out
shl
ret
cmp
xlat
cmc
lock
call
fldpi
out
repnz
jmp
leave
repz
fmulp
in
in
cmc
aad
xlat
test
repnz
in
lret
sub
lret
in
xor
aad
repz
into
repz
stc
loope
cli
cli
in
loope
adcl
sarb
fmul
lock
in
idivb
and
lret
test
xchg
out
rcl
out
repnz
xor
cmp
hlt
clc
into
std
shl
icebp
inc
xlat
ret
sti
test
out
in
repnz
in
cmc
aaa
test
rcl
rol
fiadds
fcomi
or
lret
rolb
loop
call
loop
out
mov
xchg
call
cld
aad
clc
fidivrl
cmp
loop
rol
fiaddl
out
idivb
in
fsubr
cmp
cld
icebp
sub
sarl
repz
test
loopne
fcmove
lea
cmc
fdiv
stc
int3
aaa
sti
in
out
in
fdiv
lock
cli
in
in
in
int3
xchg
lock
xor
cmp
cmp
fcom
movl
xchg
jecxz
into
lret
lret
sbb
sar
rcl
jecxz
mov
lret
test
out
out
decl
cli
lret
out
xor
jmp
fdivr
cmp
ret
jmp
les
mov
in
out
sub
cmc
out
in
std
icebp
ds
xlat
sti
aam
cmp
ret
mov
lret
iret
cld
test
call
sti
cli
jmp
shr
repnz
fdiv
loop
std
into
repnz
ljmp
mov
sar
shl
jmp
jmp
cmp
out
into
incl
ret
mov
ljmp
icebp
xor
mul
icebp
fld
loopne
in
in
mov
leave
addb
in
bnd
enter
clc
int3
sar
repz
call
out
fld
cli
test
fsub
lret
cli
ljmp
cld
std
xchg
loopne
mov
int
fsts
repz
lret
xor
xor
cmc
in
hlt
repnz
xlat
cld
repnz
ljmp
fcmovnbe
jmp
xor
loop
fdivrs
cmp
cmp
clc
fcmovbe
fmul
mov
sti
out
or
xor
cli
hlt
repnz
aam
clc
test
div
aad
ret
loop
out
fdiv
sbb
xor
aaa
loop
out
into
xor
loop
loop
rorb
mov
mov
out
int3
imul
stc
xor
hlt
ds
fcmovne
fld
ror
in
not
lret
ljmp
xor
xlat
xchg
cmp
jmp
stc
xchg
in
in
leave
icebp
ljmp
stc
aas
into
icebp
cmc
sar
test
mov
xchg
out
in
rcl
std
rol
cld
repnz
aad
idiv
jecxz
lret
mul
fsubr
sub
ret
stc
lds
lret
fcmovne
into
cmc
cmp
into
jecxz
shl
call
loope
mov
fcmovne
lock
int3
ror
jmp
leave
fucomi
cmp
cmp
cmp
rcr
ffree
clc
fcmovnu
les
xchg
hlt
out
sub
in
cmp
inc
int
in
aad
repz
test
cli
adc
mov
jmp
leave
aam
rcl
aam
insb
int3
mov
jle
pop
add
cmp
faddp
dec
loopne
test
clc
out
shl
sti
in
shl
clc
div
adc
rcr
adc
out
xor
lret
rcr
repz
fildl
or
fmull
in
mov
fsub
in
cmp
call
ret
jmp
out
hlt
sbb
out
jmp
cmc
aam
int3
rcl
xor
jmp
call
jecxz
testb
test
in
leave
sti
lret
aad
sub
cs
cmp
fdiv
lret
aam
cmc
ret
cli
fndisi(8087
xlat
test
jmp
out
leave
in
cli
out
out
loope
and
jecxz
jecxz
ljmp
inc
xor
shl
div
lret
loop
in
std
clc
enter
mov
icebp
divb
cli
enter
cmp
in
xor
test
repz
jmp
ret
loopne
lret
in
and
enter
ljmp
fnstcw
repz
mov
lret
in
lret
jmp
lret
in
ds
std
icebp
fdivr
sti
adc
repz
test
fldlg2
call
xchg
test
rcl
idivb
xor
sti
in
icebp
sti
mov
jmp
int3
in
filds
repnz
fnstcw
ss
shl
xlat
mov
call
out
int
xor
out
sar
cmp
leave
cmp
fidivs
repz
fmulp
xchg
mov
repnz
in
shl
cmp
hlt
fst
fcmovbe
in
in
loope
in
fsubrp
ret
decb
fcmovne
repnz
sti
and
mov
testl
leave
stc
ljmp
icebp
aad
in
fdiv
cli
call
cli
xchg
mov
int
xor
out
stc
jmp
lret
rcl
rcr
cmp
jmp
call
out
mov
loop
in
jmp
aad
xor
leave
sarl
cld
cld
cmp
and
out
in
in
out
mov
aad
fsub
jmp
hlt
roll
loop
loope
sub
out
fucomip
lret
loop
aam
lret
sarl
aas
loopne
loopne
loop
rol
aad
loope
fdiv
xchg
lret
aad
icebp
cmp
xor
cmp
xchg
rolb
in
decl
sub
xor
call
test
test
lret
addb
mov
loope,pt
clc
clc
rcl
iret
ljmp
fadds
loopne
fsubrp
cld
jecxz
fdiv
sub
lret
out
imul
cmp
cmp
adc
mov
orl
cli
cld
out
repnz
int
fcmovnbe
ss
int
aam
xlat
out
call
sbb
test
fimull
xor
ret
idiv
ror
cmp
ret
call
cli
int
loopne
xor
xor
aam
in
icebp
out
shl
cmc
aas
fdivr
clc
in
cmp
jecxz
lock
or
xlat
mul
out
out
fucomi
cli
int3
shr
aam
out
ds
xchg
loopne
ljmp
aaa
xor
imul
cmp
ror
repz
aam
testl
mov
out
in
fmulp
xor
in
out
out
lock
out
cmp
testb
out
loopne
mov
int
cmc
int
shl
cmp
repz
cmp
rolb
jecxz
out
xchg
fcomip
mul
lret
cmp
aad
clc
rcl
ret
hlt
sti
mov
stc
fcmove
jmp
rorb
cli
call
call
idiv
into
lock
fiaddl
icebp
lock
ds
bnd
xor
enter
shl
aas
aad
jmp
enter
fmulp
xchg
in
std
xchg
rol
in
iret
in
iret
stc
cli
lret
aaa
icebp
std
stc
fcmovu
addl
sbb
repnz
lret
ljmp
ds
lret
ds
xor
std
shr
ljmp
in
icebp
lock
out
leave
jmp
aas
fcmovu
aam
ljmp
in
fimull
repz
test
jmp
fcmovb
stc
hlt
sbb
std
xchg
loope
addl
das
xor
xor
repnz
int
fidivs
rolb
rol
add
cmc
imul
add
rol
ret
ret
ret
fwait
cmp
iret
stos
jle
pop
add
cli
fsubr
cli
mov
jmp
jmp
icebp
aad
xor
repz
out
fdivr
int3
ds
cli
cmp
cmc
hlt
fdiv
aad
lea
shr
ret
in
into
lock
lret
cli
fdiv
out
in
enter
loop
in
and
xchg
lock
icebp
jmp
sti
aas
cmc
shl
loopne
loopne
decb
test
fsubrp
out
ljmp
cmp
cmc
out
and
mov
mul
enter
int
repnz
out
lret
rol
cmp
icebp
xor
repz
repnz
out
loopne
repz
shr
into
bnd
xor
xor
lret
fcmovnu
cli
fxch
rcl
idiv
ror
clc
out
into
loop
lock
in
div
xor
sti
iret
sar
lock
jecxz
cmc
jmp
out
in
into
lret
into
out
fnstcw
xlat
test
neg
cli
shr
lock
fisttps
int
cli
in
mov
decl
cmp
lock
ffree
cmc
rol
shl
fiadds
hlt
in
jecxz
loop
adc
rcl
xor
not
into
jmp
jecxz
sarb
not
mov
call
ficoml
ds
lret
shr
cmp
iret
repnz
sti
sti
neg
add
int
orl
lock
std
repnz
jecxz
in
std
int
faddp
fildl
ljmp
iret
cmp
fcomp
fucompp
test
jmp
out
mov
ds
shlb
ljmp
cmp
fldl
jmp
into
leave
fisttps
sti
into
xor
aaa
jmp
test
int3
mov
ret
xlat
call
ljmp
xor
clc
hlt
int3
aas
fadd
fsin
rcl
std
call
lret
lret
into
test
xchg
icebp
lret
lret
xlat
xlat
cmp
jmp
fcom
ret
jmp
neg
lret
lock
shl
nop
xor
xlat
cmc
fucomi
shr
into
sar
repz
cmc
sarl
clc
repz
std
fcmovu
test
std
into
clc
lea
jmp
in
aam
bnd
cmp
iret
xlat
cld
repnz
ret
jecxz
fimull
nop
ds
cmp
enter
aad
loope
hlt
rorb
xchg
mov
hlt
hlt
out
mul
int
aad
into
ss
cmp
repz
cmc
aas
ret
incb
into
xchg
loopne
xor
fcomp
sarb
iret
cmc
out
int
fdiv
fiaddl
jmp
out
faddl
ret
not
cmp
jmp
cmc
in
in
loopne
in
or
mov
out
loope
shl
loop
aad
cmc
stc
sar
test
icebp
out
loopne
cld
jecxz
fdivr
mov
stc
ret
repnz
jmp
ret
sarb
mov
into
leave
fcmovu
test
call
sti
fstp
dec
out
cld
lret
cmp
call
xchg
mov
in
int3
ror
lds
jecxz
xor
clc
fucomip
repnz
repz
leave
ljmp
adcl
repnz
into
xor
lret
loope
ror
fmul
out
rolb
ljmp
adc
jmp
cmp
iret
out
loopne
lock
test
aam
jmp
mov
repz
f2xm1
out
sti
clc
lret
icebp
in
enter
repz
cmc
rcl
cmc
loop
clc
cli
fiadds
repz
lret
out
xor
xor
cmc
rcl
ljmp
iret
xchg
cli
in
xchg
lret
xlat
in
in
repnz
clc
fucom
rolb
and
incb
enter
loopne
enter
lock
xor
repz
test
decl
fsub
loop
rclb
icebp
sti
not
int
int
cld
in
stc
cmp
in
enter
repnz
shlb
sar
sti
xlat
int3
lock
ds
fxch
xchg
sbb
iret
adc
mov
int3
in
shl
stc
sar
out
cmp
fdivp
out
out
test
aam
mov
cmp
rol
lret
enter
jmp
sti
bnd
loop,pt
jmp
in
in
nop
xchg
in
out
ret
rcr
shrl
in
ds
fsubrp
in
clc
jecxz
ljmp
loopne
fstl
aad
cmp
sarl
sar
out
cmp
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
orl
jmp
into
ds
rcl
aad
arpl
or
scas
jle
sub
jl
lock
fcmovnu
lret
ljmp
test
jecxz
lret
ret
aaa
int3
aad
cmp
aaa
cmp
rcr
aam
icebp
xor
add
mov
aad
in
cmc
iret
into
aaa
enter
sbb
aas
loop
lret
and
xchg
out
ror
div
int3
in
shl
stc
lret
aas
aad
loopne
incl
out
jmp
hlt
shl
lock
aad
fucomi
faddl
clc
addb
jmp
repnz
ret
lock
ljmp
shll
jmp
loope
rcr
mov
lret
xchg
xchg
repz
xlat
clc
cli
icebp
repnz
enter
jecxz
out
lock
lea
lock
into
aaa
in
xor
int3
cmp
cld
cmp
clc
shl
test
xchg
test
mov
iret
lret
rol
in
aas
jmp
ljmp
shl
aad
in
fsub
fmulp
int3
addl
rcl
in
cmp
loope
fstp
into
div
jecxz
les
repz
xor
fstp
xor
cmp
iret
clc
int
out
xchg
lret
out
in
call
xor
ljmp
fdiv
cld
jecxz
into
aad
jecxz
add
iret
shr
mov
cmp
xor
jmp
std
into
aad
rcr
out
jmp
in
call
xchg
ret
xor
ss
into
xor
loope
roll
mov
loop
nop
cli
ljmp
cli
leave
aaa
stc
sar
cmc
vpaddusb
jmp
out
out
addl
iret
lret
out
out
lock
int3
in
xlat
hlt
out
out
hlt
in
aas
fadd
cmp
mov
adcb
loop
xor
sub
jmp
addl
jecxz
hlt
cli
loop
test
int
test
xor
lret
cmc
cmc
sti
xor
aas
jmp
addl
in
das
into
ret
xor
out
lock
incb
fiadds
out
xchg
div
xor
stc
bnd
fidivl
aas
loop
out
rolb
xor
loope
xor
fld1
sar
cmp
int3
cmp
int3
in
into
in
mov
out
sti
mov
out
sub
in
enter
imul
jecxz
sub
fxtract
fsub
fucomi
fst
int3
mov
fstl
repz
clc
out
out
std
lock
test
fcmovu
fneni(8087
sti
into
in
xchg
lret
ret
das
jmp
xlat
iret
fsub
sar
push
out
jecxz
int
loope
std
mov
rol
ret
fdivs
icebp
sti
imul
enter
out
cmp
loopne
out
addl
loop
shl
cld
imul
aam
cmp
push
std
and
rol
into
jecxz
fisttpl
imull
in
into
lret
out
fidivl
loopne
fxch
idiv
loopne
aam
in
std
mov
jmp
cmp
clc
sub
enter
in
jmp
rolb
xlat
test
sti
out
test
out
aad
fdiv
aam
std
stc
cmp
imul
ret
loop
and
cli
dec
ljmp
aaa
ror
in
aaa
out
cmp
cmp
in
call
mov
out
out
jmp
leave
xor
xor
ss
icebp
icebp
fdiv
fdivr
stc
loopne
cli
jmp
sar
aam
nop
lock
loope,pt
lret
xlat
icebp
sarl
lret
fucom
clc
aad
clc
cli
cmp
out
fucomi
ds
enter
test
in
leave
aaa
int3
hlt
xlat
lret
aam
int3
ret
in
sar
ret
loopne
out
ljmp
clc
aam
into
shl
out
test
faddl
aam
jge
sbb
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
imul
mov
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
push
andl
push
subl
push
xorl
xor
lea
xor
movl
or
andl
xor
add
adcl
push
orl
lea
subl
push
push
xorl
lea
movl
inc
subl
xor
negl
xor
call
movl
movl
mov
mov
jmp
adcl
xor
movl
xor
sbb
xor
addl
xor
movl
incl
mov
mov
cmp
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jb
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
andl
movl
sub
lea
mov
sbb
mov
mov
and
lea
neg
mov
xor
or
sub
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
movzwl
sub
mov
mov
mov
add
mov
add
xor
mov
add
not
mov
mov
mov
cmp
mov
movl
mov
movl
je
sub
mov
xor
add
adcl
imul
mov
movl
jmp
sbbl
xor
movl
add
mov
xor
mov
mov
sub
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
add
mov
xorl
mov
xor
mov
orl
xor
movl
add
movl
cmp
movl
jne
push
pushl
andl
pushl
andl
call
mov
mov
mov
xorl
mov
mov
mov
mov
movl
movl
andl
mov
and
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
mov
xorl
xor
sbbl
add
movl
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
xorl
xor
sub
lea
mov
mov
xor
orl
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
and
mov
movl
mov
movl
or
mov
mov
xor
addl
add
cmp
movl
je
xor
mov
xor
addl
add
add
mov
mov
mov
sub
and
mov
xor
and
mov
orl
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
xor
add
adc
add
mov
movl
cmp
ja
mov
and
mov
movzwl
sub
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
push
push
call
mov
dec
mov
jmp
orl
imul
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
xor
add
and
mov
xor
adc
add
add
mov
mov
mov
mov
mov
mov
sub
or
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
push
mov
call
pushl
pushl
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
push
movl
mov
movl
mov
mov
push
not
mov
movzbl
mov
cmp
movl
je
mov
mov
xor
addl
add
cmp
je
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
xor
add
push
mov
adc
pushl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
push
movl
mov
mov
sbbl
add
andl
xor
movl
cmp
jne
and
mov
mov
movl
add
mov
mov
mov
movl
xor
and
push
xor
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movzbl
adc
mov
xor
mov
addl
xor
subl
add
movl
mov
mov
movl
movl
mov
movl
push
mov
movl
mov
cmp
movl
je
orl
mov
addl
xor
adcl
xor
xorl
lea
negl
xor
movl
cmp
movl
jne
jmp
add
mov
xor
addl
add
andl
mov
movl
mov
xor
and
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
adc
movl
dec
movl
mov
push
mov
adc
xor
mov
add
mov
xor
or
mov
add
mov
push
push
adcl
test
movl
je
mov
mov
mov
sbb
mov
mov
imul
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
sbbl
mov
add
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbbl
mov
xchg
sub
xor
orl
mov
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
sub
mov
xor
sub
xor
add
mov
movl
mov
movl
je
andl
mov
xorl
xor
andl
add
cmp
jne
adcl
pushl
call
subl
mov
movzwl
add
mov
mov
mov
or
mov
sbbl
mov
xor
andl
add
cmp
je
pushl
pushl
orl
call
movl
mov
mov
add
mov
xorl
xor
add
movl
cmp
movl
je
orl
mov
mov
mov
sbb
mov
mov
notl
add
movzwl
sbb
mov
sub
mov
subl
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
orl
mov
mov
subl
add
adc
xor
mov
sub
mov
xor
add
mov
sub
mov
add
xorl
lea
mov
xorl
push
pushl
subl
pushl
orl
call
mov
xor
add
sub
mov
mov
notl
xor
decl
add
movl
cmp
movl
jne
inc
mov
movl
inc
movl
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
