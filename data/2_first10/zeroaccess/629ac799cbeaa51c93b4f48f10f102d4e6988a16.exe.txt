push
mov
sub
mov
push
movzwl
or
push
add
push
mov
xor
mov
add
mov
xor
mov
mov
sbb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
mov
dec
mov
dec
mov
movl
subl
mov
xor
add
mov
movzwl
sbb
mov
mov
orl
mov
adcl
mov
sub
mov
push
adc
pop
orl
sub
add
sbb
movl
mov
mov
or
movl
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
pushl
push
push
pushl
push
call
cmpl
jb
mov
adcl
mov
mov
add
mov
mov
mov
incl
xor
sbbl
add
mov
lea
mov
sub
mov
xor
andl
add
mov
subl
lea
movl
push
and
mov
adcl
xor
add
movl
push
mov
xor
mov
mov
adcl
push
addl
pushl
adcl
call
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
dec
mov
sub
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
movl
xor
mov
inc
mov
lea
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
xor
inc
mov
adcl
sub
mov
movl
mov
mov
cmp
movl
je
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
xor
xorl
lea
or
mov
xor
sbbl
div
mov
andl
mov
inc
mov
cmpl
jg
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
sub
mov
pop
and
pop
xor
jnp
hlt
pushf
jnp
ror
aam
ret
add
xchg
mov
sbb
jle
push
orl
ja
stos
jl
jno
jl
inc
mov
sti
nop
jl
or
rcrb
push
imul
out
sti
fldcw
ss
rcrb
cmpsb
enter
cwtl
neg
sti
jns
sbbb
pushf
push
scas
lock
mov
lret
mov
xchg
add
xor
xchg
lods
in
mov
test
inc
mov
in
cli
xchg
xchg
inc
testb
insl
test
bound
jo
inc
cmp
pusha
push
fwait
rcrb
mov
mov
jae
push
scas
and
sbb
dec
xor
push
jmp
sub
mov
or
xchg
les
push
cmp
ret
xchg
and
jl
and
nop
popa
clc
lods
shl
mov
ret
mov
push
inc
stc
fwait
or
dec
dec
push
fsubr
fcompl
xchg
mov
cwtl
adc
sti
aam
inc
dec
sub
and
mov
subb
and
mov
pusha
push
in
cmc
add
or
and
xchg
loop
popa
push
aas
ljmp
jnp
popa
dec
fidivs
mov
movsb
dec
orl
inc
or
dec
nop
or
xor
mov
fisttpll
jbe
shll
test
push
push
enter
or
ljmp
loopne
andl
pop
and
data16
lods
jae
sub
and
pusha
in
mull
bound
mov
movsl
fsubs
pop
push
mov
mov
adc
jge
fsts
pushf
mov
js
adc
rcll
mov
dec
jno
jno
loop
pop
fnstsw
ret
pop
xchg
mov
mov
dec
adc
sub
into
xor
xchg
mov
cmpsb
add
xor
cmp
rcrb
cmp
hlt
or
call
out
pop
jae
xchg
cmpsl
stc
mov
sub
cld
pop
mov
mov
add
or
imul
push
xchg
mov
sbb
imulb
and
xchg
push
sbb
in
test
cmpsb
adc
or
sarl
mov
cmpsl
stc
mov
dec
cmp
pop
int
mov
adc
test
je
cwtl
and
cmp
stos
cmc
xor
inc
pop
repz
cli
jne
testb
and
push
sub
in
out
sub
sbb
mov
sub
cmp
pop
cmp
enter
push
xchg
pop
lds
movsb
popf
sbb
out
or
lret
test
lea
les
fistl
loope
clc
cmp
mov
lcall
fldcw
or
push
push
mov
cld
mov
adc
mov
inc
sar
jns
lods
pop
ret
jmp
mov
movsl
cltd
push
cmp
pop
imul
dec
movsb
add
xor
fld
adc
stos
or
pop
cs
mov
stos
std
bound
das
inc
pop
subb
aam
in
pop
or
jnp
adc
adc
xchg
cmp
mov
push
jmp
add
popa
xor
add
cmp
ficoml
add
mov
call
push
sbb
aaa
pop
or
push
jns
push
js
out
and
xor
mov
adc
clc
cwtl
aam
push
jmp
ljmp
mov
into
xor
cmp
xor
pop
ffreep
pop
mov
mov
and
sahf
jg
test
mov
fwait
pop
jbe
mov
jae
loop
jb
push
mov
cli
in
or
das
push
sbb
inc
pop
outsl
xlat
pop
add
inc
add
dec
popf
dec
jle
movsl
mov
xor
cmpsb
imul
pop
out
lahf
and
insb
xchg
sub
or
and
shll
or
xor
cmc
sbb
ljmp
icebp
shrl
test
int3
add
roll
jnp
sub
jne
xor
fdivrl
or
adc
xlat
jbe
jg
jl
xor
adc
mov
sub
insb
and
das
lock
pusha
and
xlat
int3
dec
pop
or
mov
les
popf
dec
je
add
xchg
mov
add
jp
test
cltd
call
rcl
inc
pop
int3
and
mov
add
int3
adc
dec
xor
xor
xor
pop
jmp
inc
cmovnp
lcall
mov
popa
xchg
mov
adc
testl
dec
into
sub
mov
sub
inc
mov
mov
sbb
in
pop
les
and
pop
neg
cmp
push
dec
jno
and
adc
cmc
dec
sub
fsts
leave
in
bound
cld
outsl
int
push
sti
push
test
add
add
pop
inc
loope
cmp
adc
rcrl
shlb
stc
xor
sarl
add
jno
mov
inc
pop
mov
push
outsb
xchg
dec
fstpt
push
sub
repnz
xor
mov
in
mov
iret
xorb
jl
inc
and
cld
pop
lcall
push
aad
adc
xor
test
arpl
sub
jno
mov
sahf
push
enter
ds
cmp
sub
nop
pop
stos
outsb
test
call
jl
aam
dec
jl
test
jbe
adc
rclb
je,pn
inc
jle
sarl
leave
lahf
outsb
les
testb
test
je
scas
sbb
push
jg
add
sub
mov
mov
icebp
popf
cmp
pop
mov
inc
mov
fimuls
xor
jno
fbld
stos
cmp
clc
pcmpeqd
jo
or
mov
jo
xchg
lcall
sbb
outsl
push
sub
ret
jg
or
lret
pop
sbb
adcl
xlat
cmp
test
xor
xchg
sub
pop
add
int
mov
test
subb
sbb
jmp
or
jecxz
mov
mov
outsb
fimuls
fadds
mov
push
add
mov
xlat
mov
pop
cmp
xchg
rcll
dec
push
int3
in
popf
lock
adc
out
insl
jp
pop
cmp
pushf
lahf
data16
mov
std
mov
sub
cmp
sbb
scas
dec
movsb
mov
shll
jo
mov
dec
adc
out
jl
pop
mov
inc
addb
xchg
test
setae
jb
loopne
daa
popf
inc
lret
leave
push
fstpl
std
ds
mov
adc
scas
stos
lods
xchg
testl
sub
or
pop
in
enter
ss
adcb
push
bound
sarb
cmp
adc
xor
sub
sti
sub
push
or
stos
adc
test
mov
lods
adc
pop
push
mov
mov
ret
sahf
push
cmp
ret
cmp
ret
aaa
rclb
data16
sub
pop
stos
cmp
enter
xorl
in
mov
pop
ja
mov
inc
xor
addr16
xor
pop
dec
call
dec
jmp
or
cmpsl
mov
cld
sbb
or
xchg
jbe
xchg
int3
incl
push
mov
pop
cmp
push
imulb
ret
mov
inc
test
sbb
adc
sarl
mov
mov
or
shlb
pop
mov
test
fs
iret
lock
lea
mov
mov
cmpsl
cmp
in
outsb
xor
jl
lea
pop
ss
out
in
and
les
inc
data16
dec
mov
shll
cmc
mov
test
aam
jb
shl
fisttpll
mov
nop
xchg
aam
cs
cmp
mov
adc
lea
ja
adc
cmpsl
adcl
xchg
rcll
xor
mov
and
shll
movsl
mov
push
pusha
jo
pop
aam
sbb
popa
adc
cmpb
cli
xor
mov
imulb
into
mov
int
jecxz
xchg
cmp
xor
insl
mov
aas
repz
sbb
or
in
sub
aam
loopne
scas
test
andb
sub
aam
sub
jnp
or
mov
repz
xchg
out
adc
cmp
cld
adc
and
shlb
pop
dec
ds
fsubr
jecxz
xchg
cmc
repz
xor
jp
leave
lods
or
repz
mov
leave
sti
mov
addl
repz
lds
inc
inc
lcall
jnp
shl
cmp
sbb
sub
mov
jle
sbb
andb
mov
inc
scas
xor
inc
dec
sbb
scas
sub
and
xlat
lock
scas
xchg
sub
rorb
push
les
push
test
gs
sarb
and
clc
mov
xchg
negb
inc
pop
push
cli
lcall
pop
push
mov
mov
and
ss
enter
fiaddl
and
pop
dec
shrb
xor
sbb
jnp
in
xchg
lcall
sub
fwait
inc
mov
add
add
mov
cmp
push
pop
es
mov
ljmp
hlt
xchg
cmc
ret
mov
ljmp
cli
and
push
jno
cmp
in
and
int
sar
in
jae
mov
test
sub
lea
pop
push
enter
pop
mov
xchg
dec
and
dec
pusha
sbb
jbe
pop
je
in
mov
js
jb
repnz
jo
xlat
cmp
lahf
push
push
cmpsl
mov
bound
jbe
sbb
movsl
mov
inc
cmp
fucomp
jbe
xor
mov
hlt
or
xchg
std
xor
add
aaa
add
xorb
jno
xchg
test
jmp
mov
shl
ja
scas
inc
roll
bound
adc
push
fdivl
sbb
inc
xchg
fwait
add
push
lds
loop
lcall
fildl
lahf
lret
pop
push
mov
xchg
sbb
rcl
ja
repz
popa
pop
fcmovu
int3
or
inc
sub
daa
jne
pushf
mov
xchg
and
fisttps
push
ret
push
mov
dec
loope
cmp
fwait
inc
mov
test
pop
mov
test
movb
in
mov
lret
mov
sbb
gs
sub
loop
lahf
mov
lods
mov
or
jmp
mulb
mov
sar
cmp
into
mov
test
jne
popa
cmpsl
negl
pushf
fadds
cmpl
sbb
shrl
aad
jo
push
push
into
pop
addr16
fisubrs
sbb
xor
mov
pop
and
mov
mov
sti
jnp
fsubs
pop
sbb
lret
lods
mov
mov
lcall
fdivrp
pop
adc
push
hlt
jmp
add
pop
cmc
aam
andl
adc
adc
add
mov
mov
das
xor
inc
js
adc
rorb
lods
repnz
loop
les
cltd
cmc
pop
jbe
sbb
jb
inc
loopne
xor
notl
into
jb
lret
or
cld
loopne
mov
test
popf
scas
push
or
mov
push
cli
repnz
std
pop
rorl
fstpt
xlat
leave
lock
push
nop
jg
testl
mov
xor
dec
cltd
dec
sub
xorb
sub
mov
pop
jle
out
clc
xor
outsl
dec
inc
enter
mov
xchg
test
xchg
inc
outsb
sti
lds
jge
or
xlat
xor
jb
pop
scas
jae
in
hlt
xchg
pop
in
mov
xlat
mov
push
sub
sub
cmc
mov
jmp
xlat
shrl
and
xchg
mov
push
pop
out
and
cmp
fisubl
in
sti
lods
xchg
insb
jg
push
inc
lods
adc
loope
cmp
xlat
push
jno
les
jbe
push
pushl
sub
dec
mov
jle
scas
dec
lret
add
jno
movsl
clc
decb
fs
and
jmp
cmpb
aas
aad
insb
adc
fdiv
add
sahf
or
sub
push
add
xor
cs
sub
sbb
cmpb
jmp
push
rcrb
mov
leave
in
rcrl
maskmovq
idivl
pop
fiadds
push
cld
loop
sahf
xorb
lahf
ljmp
lds
ret
add
cli
mov
push
stos
pushf
cmp
aaa
push
mov
lods
mulb
inc
xchg
or
loopne
mov
jns
pop
data16
adc
jecxz
rol
fisubl
dec
cli
mov
inc
dec
mov
popa
cld
add
mov
clc
mov
sbb
ja
out
mov
xchg
mov
scas
dec
xor
movsb
cmp
fwait
xchg
cs
mov
xchg
mov
fistl
orl
fdiv
mov
xchg
sbb
or
mov
push
enter
pushf
lock
test
out
ja
das
pop
cmp
inc
test
push
xor
mov
push
dec
inc
sub
mov
les
std
cltd
add
sbb
or
sub
mov
jle
mov
lret
test
push
cmp
int3
dec
or
cmp
addr16
sub
add
ljmp
jnp
icebp
push
divb
pop
add
outsb
cmp
mov
pop
pop
jle
sbb
bnd
xchg
les
out
aas
xchg
mov
push
add
jo
pop
ret
fildll
sbb
test
mov
lret
ljmp
mov
inc
adc
mov
stc
sbb
xor
lcall
ret
pushf
push
das
push
or
out
and
jnp
sbb
leave
pop
fwait
or
nop
les
out
mov
movlps
adc
je
ss
and
icebp
out
popa
or
add
jnp
cli
inc
mov
add
and
xor
ret
popa
and
out
or
cmp
or
outsl
or
push
movhps
jae
push
cmpsb
es
add
inc
lods
lea
int3
lret
cmp
in
mov
adc
lret
fnstenv
test
mov
les
js
xlat
push
add
mov
mov
sbb
inc
repz
push
sbb
inc
xor
dec
int
or
mov
adc
out
in
adc
cs
xor
inc
jno
or
scas
mov
cmc
xor
loope
push
push
jp
cmp
nop
adc
inc
or
sub
push
fmull
adc
jo
xchg
mov
xchg
aaa
jne
pop
sti
inc
mov
push
mov
sti
out
out
dec
pop
mov
pop
or
adc
xchg
inc
aas
jl
xor
hlt
lret
shrb
cmp
scas
jne
dec
mov
rcll
and
testb
sub
out
add
xchg
neg
mov
fisubs
push
movsb
jae
inc
xchg
dec
and
test
push
or
sahf
push
pop
es
sbb
roll
ret
lods
insb
xorl
sub
adc
rolb
in
notl
outsb
and
sbbl
arpl
jmp
mov
test
fistpl
rol
repz
imulb
ja
leave
aaa
xchg
les
sbbl
xor
xchg
inc
inc
mov
and
xor
lods
xchg
ucomiss
inc
js
fldt
test
adc
test
popa
mov
out
inc
jns
ss
popa
scas
sahf
inc
lods
nopl
inc
dec
je
ficomps
dec
mov
jne
pop
and
mov
gs
sti
or
pushf
popa
divl
pusha
or
xorb
inc
adc
dec
sub
jg
jl
mov
xlat
cmpsb
test
pusha
lock
sbb
idivl
mov
and
or
aad
jne
jne
xor
fidivrl
jne
inc
into
mov
xchg
sahf
js
out
js
lea
jb
fsubs
xchg
lret
mov
scas
out
xchg
cwtl
jp
es
jnp
push
in
adc
lods
jne
neg
test
cmpsb
dec
imul
push
jmp
sub
fwait
mov
loopne
inc
or
cmp
cwtl
dec
int3
inc
movsl
adc
int
cmp
stos
adc
daa
roll
inc
cwtl
shll
lock
in
inc
pop
and
iret
mov
rcr
sbb
loope
pushf
sub
xchg
sub
inc
repz
xor
stc
cmpsl
cmp
sbb
das
cmpsb
in
or
lock
sbb
adc
ja,pt
xchg
fmull
mov
movsb
jl
ds
or
std
xorl
xor
push
mov
fsubrs
testb
push
jb
icebp
mov
je
jge
and
aad
ljmp
pop
mov
or
imul
lret
xchg
fs
scas
es
xor
pop
jo
push
xor
or
push
sub
sub
ret
jg
enter
jl
xor
push
rorb
mov
lret
jle
inc
cltd
out
pop
push
lahf
or
insl
jecxz
sub
push
jns
sbb
ss
xchg
inc
clc
pop
fistl
add
sbb
pop
test
int
data16
out
js
jno
jg
add
lret
je
cmp
aas
push
aas
pop
xor
xchg
sub
or
xchg
pop
pop
xor
out
fimull
or
arpl
push
sbb
jmp
sub
fidivrl
push
arpl
jge
push
jo
mov
ds
adc
pop
fldl
cmpsb
jne
pushf
in
fildll
inc
std
gs
mov
inc
pusha
and
std
xor
jmp
out
andl
jecxz
and
jl
scas
cltd
push
fisttpll
popa
xchg
int3
rolb
xor
mov
pushaw
xchg
dec
inc
mov
mov
adc
mov
data16
mov
mov
mov
std
pop
jb
aam
mov
adc
mov
arpl
xchg
imul
or
push
mov
pop
lea
ja
test
lcall
sub
pop
fwait
mov
and
sbb
movsl
push
jecxz
clc
lahf
mov
rorb
push
or
pop
shr
push
fidivrl
inc
rol
pop
gs
int
pop
icebp
xor
xchg
movsl
loop
dec
inc
fmulp
dec
xor
sti
fsubs
mov
xchg
mov
xor
mov
mov
mov
or
or
dec
test
or
jae
dec
fcmovnbe
dec
sub
out
frstor
cmc
pop
inc
aam
dec
push
mov
push
push
int
xor
rcr
and
dec
mov
les
test
mov
mov
orl
mov
push
xchg
pop
add
inc
and
jae
jge
pop
out
insl
js
mov
or
jns
pusha
lahf
shr
shlb
mov
pop
repz
jne
dec
xchg
or
cmpl
loopne
or
ja
or
and
dec
pop
inc
add
mov
and
lahf
and
cltd
je
mov
xor
lahf
or
ljmp
adc
pop
iret
xor
call
fmuls
loop
push
lret
lcall
cmc
pop
mov
add
push
or
dec
mov
push
imul
mov
and
lret
std
aas
xlat
test
mov
cli
pop
push
sbb
jecxz
dec
xchg
mov
pop
in
xor
lret
out
into
ja
shlb
pop
sbbl
sub
imulb
dec
scas
rol
xlat
stos
pop
movsl
fcmovu
push
mov
jecxz
inc
imul
inc
fstpt
mov
jmp
scas
sarl
dec
inc
cmp
or
movsb
pop
call
mov
mov
mov
xchg
bnd
xor
mov
sub
and
hlt
in
int
ljmp
es
es
jbe
sub
cli
aaa
mov
add
xchg
popa
out
je
ror
mov
xchg
mov
or
inc
adc
xchg
stc
add
sbb
in
mov
lods
sbb
mov
and
xchg
popf
sahf
adc
mov
xchg
jle
in
addr16
dec
data16
cmp
nop
pop
dec
addr16
popa
inc
jl
add
in
shr
pop
adc
inc
ljmp
pusha
in
or
ret
and
pop
push
mov
mov
mov
jnp
mov
test
test
shl
mov
jmp
dec
add
divb
pop
lret
jle
pop
call
push
mov
xor
shr
mov
and
xor
dec
imul
pop
xchg
inc
adc
mov
adc
cmp
mov
sub
sbb
jmp
push
xchg
mov
inc
mov
cmp
andl
mov
mov
mov
xorb
or
aas
int3
pusha
jmp
loope
add
popa
mov
scas
jg
out
jle
loop
pop
push
and
mov
xorl
mov
arpl
inc
aam
sbb
pop
into
test
loopne
shll
test
adc
xchg
jl
jb
or
xchg
data16
sbb
adc
inc
xchg
dec
and
mov
inc
and
iret
push
sub
daa
fcomp
mov
ret
cmp
addr16
in
arpl
iret
jl
sub
push
mov
clc
ret
push
sbb
test
lcall
scas
aad
ds
xor
rcrl
xchg
jmp
shrl
or
inc
insl
shll
mov
stc
out
gs
push
sub
sti
mov
enter
push
sarb
inc
push
loopne
popw
mov
mov
std
testb
inc
sar
repnz
out
cmp
push
ja
mov
jne
nop
data16
xor
inc
movsb
outsl
cli
sbb
mov
jns
ja
cmp
fs
mov
mov
sbb
shl
nop
adc
lcall
mov
sub
lock
sti
mov
jp
fisttps
mov
dec
pop
lahf
fcoms
cmc
ds
mov
ret
pop
sub
or
sub
jmp
outsl
hlt
les
sbb
idivl
loope
and
loopne
bndstx
mov
ret
add
adc
sbb
sahf
into
fisubs
lods
int
nop
ret
add
testl
xchg
adc
jns
or
inc
outsl
xchg
pop
fstl
mov
sbb
in
test
das
arpl
std
mov
rolw
jnp
push
jp
cmp
decl
dec
mov
xchg
inc
repnz
add
sub
popf
and
outsl
mov
cmp
mov
lret
mov
push
int
icebp
and
test
test
pop
fadds
les
jl
sbb
gs
pop
inc
in
pop
mov
adc
push
pop
and
pop
or
jno
xchg
insl
test
sarl
jo
pop
cs
jg
and
loopne
mov
outsl
pop
loopne
inc
add
aas
mov
repz
sbb
mov
int3
dec
cmc
lock
in
pop
in
fsubr
imul
sbb
sbb
ret
mov
dec
mov
mov
sbb
xchg
cmp
cmpsl
in
sub
mov
mov
std
push
or
add
inc
gs
ss
fucomi
add
roll
jp
mov
mov
int
lret
sarb
pop
xchg
out
insb
call
xlat
std
gs
xchg
fistps
jp
xchg
int3
and
insl
xor
mov
xchg
iret
push
fbstp
sahf
jle
mov
mul
push
xor
xor
cmp
notl
pop
push
sub
rcll
xchg
or
arpl
mov
push
push
sbb
jp
push
mov
mov
push
adc
lret
loop
inc
sbb
sahf
cmpsl
xorl
rolb
jp
in
xor
mov
arpl
int3
dec
je
mov
sbb
mov
mov
xorb
inc
mov
push
cmp
mov
fdivs
dec
in
pusha
cmp
jae
sti
add
jecxz
push
mov
mov
adc
inc
jo
out
repz
or
lret
pop
pop
sbb
mov
aad
adc
out
xorb
mov
andb
pop
cmp
iret
scas
cmp
inc
jbe
sti
aam
jo
std
jg
sub
inc
ss
repnz
fldl
pushf
popf
pusha
cwtl
fwait
shrl
fisubs
pop
xchg
pop
xlat
jecxz
mov
xchg
sub
je
push
sbb
push
pop
cmpsb
mov
std
cltd
lahf
ljmp
rcrl
inc
test
out
scas
icebp
pop
mov
cmpsl
mov
lret
xor
in
xchg
push
xor
enter
xchg
ficompl
dec
pop
sbbl
xor
shr
mov
and
fucomip
ja
in
je
jno
adc
xchg
add
xor
test
xchg
or
sbb
stos
mov
stos
popf
das
dec
and
add
stos
pop
int3
ss
xchg
setbe
fists
sub
shrl
mov
test
aaa
gs
pop
popf
rcrl
dec
hlt
movsl
arpl
pop
scas
setb
add
std
pop
sbb
pop
xor
lcall
out
push
pop
mov
lret
push
into
test
jl
rcll
push
dec
mov
and
ss
and
sahf
inc
cli
pusha
xchg
ret
pop
mov
pusha
push
cwtl
scas
cmpb
lcall
loopne
pop
jmp
pusha
and
sarl
and
pushf
cmp
jp
jp
sbb
xor
mov
insb
test
aad
in
mov
push
pop
jno
sbb
sub
inc
pop
pop
daa
cmp
add
ds
sub
sti
push
lret
mov
lds
add
mov
add
icebp
mov
mov
pop
sub
aad
cmpb
dec
push
pushf
dec
hlt
rcr
jno
jnp
jno
inc
fdivs
adc
sbbb
sbb
mov
jl
inc
pop
mov
insl
repnz
and
or
iret
les
jo
cli
pushf
popa
jp
push
ss
adc
fldcw
jl
cld
mov
xchg
push
mov
cmpl
out
in
sqrtps
xor
callw
lods
aaa
das
enter
std
and
mov
mov
cwtl
mov
in
mov
mov
mov
fs
jecxz
mov
leave
push
xor
int3
js
shll
sub
cmp
inc
faddp
in
aaa
pop
push
mov
sub
mov
std
or
std
push
call
add
out
push
mov
mov
mov
add
xchg
icebp
push
cmpsl
dec
jle
jmp
push
mov
in
in
mov
pop
pop
cmp
fstps
push
dec
clc
sub
cwtl
outsb
ss
bound
aaa
and
xchg
xlat
sbb
inc
mov
arpl
rorb
test
test
pop
arpl
and
cmp
lock
mov
mov
jl
shll
mov
jo
push
add
std
jb
insl
cmp
and
fs
xchg
xchg
notb
xchg
or
and
cmpsl
jecxz
daa
or
add
leave
cltd
dec
es
jp
pop
pop
dec
push
rolb
push
jno
addl
push
pushf
push
dec
push
and
je
mov
sub
pop
adc
push
sbb
sub
dec
jp
cmp
loope
insb
test
lret
cmpsl
sbb
pushf
and
jmp
mov
sub
inc
orb
add
icebp
pop
push
arpl
fs
decb
mov
dec
filds
pop
and
incb
pop
cli
fcoms
fbstp
sub
xchg
jmp
pop
jg
stos
lock
data16
inc
fbld
je
movsb
in
xor
push
mov
jmp
or
xor
mov
in
inc
jnp
dec
in
lods
lods
neg
xchg
xlat
mov
cmp
xchg
pop
xchg
cmp
movsb
mov
imul
shrb
cmp
lret
inc
xchg
xchg
dec
les
mov
and
gs
sub
xlat
or
divl
sub
lds
cmp
push
aaa
idivb
cwtl
pop
lret
inc
sbb
das
xchg
test
sbb
xchg
cmp
pop
call
sbb
shlb
iret
dec
adc
jb
mov
adc
scas
mov
enter
movsb
jb
cltd
push
xchg
fsubs
adc
mov
adc
sbb
fsubrp
or
dec
fmuls
shlb
sbb
xchg
sarb
xchg
sbb
pop
add
shrb
xchg
dec
mov
jl
xor
cmpsb
addb
or
shrb
out
gs
fsubrl
cmpsl
mov
aaa
sti
dec
popf
or
into
pop
insl
out
aaa
sub
adc
push
fdivl
into
add
mov
xchg
dec
mov
inc
cltd
mov
cs
movsb
call
in
ja
xor
xchg
pop
sub
loop
aam
xor
and
jae
popa
mov
mov
pop
xchg
push
mov
lea
push
pop
out
push
or
mov
cmpsl
hlt
dec
leave
inc
incb
mov
push
push
mov
pop
mov
mov
js
cmp
cwtl
pop
push
ja
add
adc
into
stos
imul
mov
fsubrl
fdivrl
jle
shrb
jno
mov
inc
mov
xchg
out
xchg
mov
xchg
sub
fs
cmc
pop
stos
xchg
push
scas
mov
push
arpl
and
xchg
cmc
out
movb
dec
shlb
je
mov
in
test
pop
shr
aaa
push
push
xor
aaa
les
pop
notb
sub
xor
push
sbb
faddl
test
dec
jns
lods
or
daa
cmp
mov
inc
mov
pop
jnp
push
int
add
das
inc
out
aad
mov
data16
bound
sub
mov
sub
test
loopne
cmpsb
fwait
das
fcoms
sbb
sbb
sahf
cmpsb
std
xchg
mov
sbb
gs
inc
jns
xchg
das
cli
ds
inc
in
ljmp
mov
mov
mov
lahf
dec
pop
enter
pop
xchg
push
subb
out
push
mov
dec
daa
xchg
dec
outsb
mov
rcr
mov
jb
ja
push
cmp
push
mov
outsl
int3
test
and
mov
das
leave
test
jmp
out
sbb
push
mov
subl
xor
adcl
xor
sub
movl
cmp
jne
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
andl
xor
adcl
add
sbbl
add
movl
mov
cmp
movl
jae
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
call
jmp
mov
decl
mov
orl
xor
xorl
add
lea
movl
mov
movl
mov
cmp
jbe
addl
addl
jmp
addl
mov
xor
sbbl
inc
incl
sbbl
add
movl
cmp
jb
mov
xor
mov
add
mov
xor
notl
mov
sub
add
subl
mov
xor
sub
ror
xor
or
mov
mov
mov
mov
xorl
sub
xorl
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
jmp
lock
pop
pop
insb
js
mov
mov
jnp
hlt
pushf
jnp
lods
mov
fisttps
lcall
rorb
mov
cwtl
push
jo
push
repnz
xchg
adc
out
fmul
push
sysenter
dec
jne
out
stos
mov
lods
fisttpll
inc
cmpsl
lods
jb
loope,pn
xchg
pop
cmc
pop
popa
fucomip
xlat
testl
or
enter
stos
mov
aam
fcoms
sub
ja
jne
mov
xchg
jae
mov
mov
xrelease
mul
mov
movsl
cmp
mov
shll
je
sbb
stc
loopne
dec
mov
nop
cmp
loop
ret
push
and
insb
sbb
mov
scas
lods
jmp
daa
fbld
or
fdivl
jge
xchg
cmp
jmp
add
add
sbb
int
loope
xchg
test
andb
xchg
sbb
dec
dec
outsb
jge
rcll
pop
scas
cmp
mov
or
rcrl
movsb
sbb
xor
inc
inc
push
je
mov
ds
pusha
loope
ret
lret
pop
scas
adc
adcl
pop
insb
and
push
pop
rcrl
xchg
arpl
int3
mov
bound
cmp
xorl
out
dec
or
loopne
ds
xlat
mov
inc
sub
jne
xlat
jp
add
pop
dec
xchg
mov
ljmp
loop
jbe
clc
jp
dec
dec
mov
test
outsb
inc
cltd
add
cmp
inc
jae
gs
insl
push
pop
xchg
pop
lods
push
inc
or
inc
sub
sbb
push
inc
and
in
mov
fld
dec
cmp
aad
movsb
jl
jmp
in
xor
loope
sub
mov
cmp
push
cld
cmpsl
mov
aas
int
mov
jb
scas
push
inc
leave
lds
fwait
int
jmp
into
inc
xchg
int3
sub
mov
outsb
or
sub
cmp
jae
push
mov
jb
dec
in
jmpw
push
or
pop
or
mov
xchg
xchg
push
dec
inc
cmc
jmp
lcall
or
cmp
enter
add
and
or
mov
aaa
xchg
pop
je
ljmp
or
jmp
mov
inc
cwtl
mov
repz
sub
push
xchg
ds
xchg
js
repz
je
sbb
jge
lea
sbb
loope
mov
subl
lods
mulb
popl
out
popf
icebp
push
dec
push
movsb
sbb
sahf
cmp
mov
push
mov
mov
lock
mov
cmp
fisubl
aaa
jmp
nop
push
push
xor
push
push
adc
je
sahf
std
mov
stos
loopw
dec
es
and
pop
dec
popa
fbld
popl
mov
sarl
jge
cmp
jns
pop
xchg
arpl
xchg
inc
xchg
push
in
add
js
leave
cmpsl
scas
cmp
adc
dec
sub
mov
and
aad
jb
adc
aas
aam
aam
test
pop
sti
movsb
ficompl
xchg
iret
insl
and
inc
pop
xchg
and
les
cmc
jecxz
push
mov
or
jmp
adc
je
adcl
popa
xchg
pop
out
cltd
dec
pop
jne
or
ret
repz
rclb
or
int3
shl
in
lds
pop
outsb
add
fistpl
sbb
addb
jg
jo
sub
repz
bound
inc
xor
or
xchg
push
pop
cmp
loopne
and
pop
dec
mov
mov
notl
xchg
push
and
or
inc
xor
aas
mov
dec
dec
movsl
jmp
jb
je
frstor
pop
cmp
cli
stos
xchg
std
pop
outsl
sarb
sub
inc
push
imul
enter
jecxz
jns
inc
mov
push
xor
sbb
xchg
cmpsb
dec
addr16
jecxz
cmp
jns
adc
push
out
jl
mov
lcall
pop
add
jmp
loopne
iret
data16
pop
ror
subb
push
lea
sahf
sub
adc
mov
mov
push
lds
loope
addr16
nop
cmp
sarl
and
xor
in
prefetch
mov
xchg
sub
push
dec
cmpsl
addl
hlt
mov
sub
orl
cmp
mov
dec
mov
aaa
pusha
push
and
stos
sbb
out
std
mov
cmp
sub
stc
insl
pop
and
sub
mov
adc
dec
mov
push
ficompl
leave
icebp
push
or
mov
xchg
in
jnp
outsb
xorb
fnstenv
imulb
mov
ror
out
arpl
add
adc
fs
and
push
and
aad
enter
in
in
je
add
call
pop
adc
jno
js
sub
jg
sbbb
sbb
cmpsb
pop
inc
and
iret
fwait
call
out
into
in
adc
jg
jae
cltd
sbb
lret
outsl
mov
pop
push
dec
dec
xchg
loopne
out
or
shlb
pop
flds
repz
pop
sti
jg
xchg
mov
aaa
fnstenv
dec
cmp
sbb
and
ret
inc
or
enter
dec
jne
cld
in
sti
sub
popa
mov
out
inc
mov
jmp
and
lahf
aam
rol
cwtl
pcmpgtd
sahf
or
lret
pop
dec
and
fwait
aas
and
or
mov
imul
jp
mov
es
insl
jecxz
addl
pop
jmp
pop
int
cmp
pusha
cli
push
fcmovnb
faddp
and
push
loop
adc
add
mov
pop
ss
mov
mov
add
adc
ret
ss
and
cmp
or
shl
jl
adc
lods
lea
pop
insl
adc
jg
outsl
mov
lret
dec
mov
subl
jmp
test
push
call
lock
add
fisubl
imul
mov
dec
sbb
andb
add
mov
cmp
xorb
sbb
dec
gs
int
cwtl
lahf
fstpl
mov
daa
cmp
into
popa
movsb
sbb
jmp
test
add
pop
aaa
test
mov
push
inc
push
xor
jmp
cmpsl
stos
xchg
jecxz
outsb
pop
lds
int3
lods
mov
mov
aam
mov
scas
hlt
mov
hlt
jne
add
push
loope
ret
sbb
adc
gs
jecxz
and
icebp
dec
hlt
inc
sub
test
and
add
mov
shll
fisttps
aaa
loop
jns
push
adc
stos
or
divl
dec
fcoms
push
jecxz
mov
dec
ficoml
test
mov
leave
push
mov
cmp
movsb
sahf
cld
add
outsl
cmp
ret
mov
jecxz
popf
xor
mov
bound
scas
jae
mov
push
xlat
push
hlt
out
adc
push
arpl
cmp
cmpsb
pop
mov
data16
pop
jae
es
ret
shlb
pop
xchg
into
jp
into
adc
jbe
shll
mov
sarb
or
in
icebp
cmpsl
push
and
arpl
test
cltd
mov
mov
arpl
jno
adc
lahf
sbb
sbb
jle
inc
add
out
adc
mov
push
mov
inc
mov
push
inc
roll
test
cmp
mov
lahf
jl
ret
xchg
or
push
rolb
inc
scas
sbb
into
popf
xchg
add
jge
fcoml
loop
insb
repnz
in
in
arpl
fiaddl
mov
pop
icebp
sub
lahf
push
stos
cmp
mov
pop
push
xchg
mov
ret
mov
jg
or
outsl
or
push
xchg
dec
movsl
lds
sbb
xor
test
mov
or
lods
sbb
paddd
xor
repz
and
xchg
hlt
mov
test
xor
push
and
lret
test
cmp
mov
push
dec
push
pop
mov
fadd
cmp
leave
cld
testl
scas
inc
call
dec
mov
adc
repz
push
ss
xor
push
adc
pop
or
ud1
out
decb
cmc
aad
or
xchg
push
mov
orl
lock
jle
push
in
icebp
or
flds
dec
mov
mov
mov
inc
pop
int
out
iret
jp
lret
sbb
xchg
lret
xchg
or
xor
pop
push
mov
jae
pop
mov
loopne
lahf
dec
jb
bound
pop
lret
push
cmp
xor
lds
adcb
fsub
xchg
push
xor
das
push
jle
xorl
sti
stc
scas
cmp
or
mov
jle
les
out
out
out
mov
clc
push
aas
stos
add
mov
aas
sub
push
dec
push
cmp
imul
lahf
pop
xor
pop
adc
cmp
dec
add
les
adc
pop
pop
lods
std
test
ret
stos
scas
test
add
dec
dec
xchg
shrb
leave
xor
insb
ss
mov
dec
cmp
jb
or
imul
sub
sub
fidivl
jmp
or
pop
dec
cmp
pop
out
add
scas
pop
repz
call
imul
test
jge
icebp
cwtl
sbbl
subl
xor
loop
and
adcb
jns
call
mov
aaa
in
jb
icebp
dec
pop
scas
popf
mov
mov
jmp
xchg
addb
into
je
add
lret
aad
jle
and
inc
mov
mov
dec
mov
add
adc
cwtl
jl
lock
es
push
push
xchg
push
mov
sbb
incb
pop
rcll
out
lahf
xor
and
dec
jno
add
inc
aaa
mov
dec
aas
mov
cmp
daa
mov
mov
in
outsl
or
cmc
and
mov
push
je
loope
test
in
cmp
shlb
inc
mov
mov
and
mov
daa
mov
ds
out
gs
repz
call
inc
adc
pop
imul
push
push
movb
jo
or
xchg
ret
repnz
fcom
inc
test
sbb
push
mov
xchg
js
aas
sbb
pop
into
lahf
movsl
loopne
in
jae
fmull
setle
fldl
ss
in
clc
xor
pop
shll
mov
and
xchg
jns
je
cmpsb
mov
lret
loop
roll
pop
and
mov
fmulp
sbb
pop
js
xchg
pushf
add
test
jae
popa
push
das
mov
fdivp
sub
daa
mov
nop
aaa
mov
xchg
xchg
push
rolb
scas
and
div
ja
repnz
pop
or
add
cmc
push
xchg
mov
xchg
inc
test
adc
cmp
inc
push
xchg
xchg
aam
and
lds
cmp
mov
out
lds
test
mov
pop
add
mov
add
test
jmp
std
push
std
mov
pop
in
mov
adc
mov
imul
call
xor
cmp
test
sub
and
mov
add
in
addr16
sub
cs
movsl
xor
jno
cwtl
mov
aad
cmp
test
leave
mov
mov
mov
or
bound
jge
pop
xor
cli
jae
daa
bound
sahf
ret
addb
pusha
int
pop
mov
popa
mov
xchg
dec
mov
inc
cmp
fldl
int
fstps
mov
enter
mov
pop
jl
xor
mov
and
push
pop
pop
adc
jbe
leave
je
and
movsb
push
inc
hlt
pop
mov
sub
insl
fwait
or
inc
cmp
cltd
lds
es
sub
enter
jle
push
fld
in
subb
inc
add
sub
xchg
inc
or
or
popf
xlat
ret
popf
addr16
ljmp
jno
mov
dec
sbb
mov
and
cmpsl
test
cmp
ja
cmp
jge
xchg
mov
pop
test
nopl
es
mov
cmp
mov
sub
cltd
popl
pop
pop
sti
adc
inc
rorb
xor
jo
addr16
aas
mov
data16
add
push
incl
jnp
mov
scas
and
mov
mov
cmp
cmp
fsubrs
inc
lahf
pop
ljmp
mov
pop
in
lods
jne
cmc
push
stc
ret
outsb
inc
out
or
cmpsb
insb
ds
in
fwait
mov
jecxz
xlat
fimuls
add
std
cli
out
pop
push
lret
and
xor
xor
outsl
ret
and
mov
cmp
add
fstps
mov
push
ret
xchg
adc
scas
ret
and
fsubl
stos
int3
aam
sbb
cmp
and
cmp
sbb
insl
cvtpi2ps
adc
std
out
adc
xor
sub
jle
jne
sahf
fsts
sub
addr16
jge
stc
jmp
imul
mov
movl
loopne
loopne
movsl
outsb
push
lods
inc
cmp
aam
adc
ret
icebp
cmp
pop
aam
shll
cmp
dec
arpl
out
jns
jmp
fnstcw
cs
loop
fdivs
sahf
lods
add
cmp
sbb
inc
or
aad
lahf
dec
mov
xor
ficomps
notl
mov
out
mov
xchg
iret
add
lods
xor
daa
imul
nop
mov
and
ffree
push
sarl
mov
mov
pop
stos
jo
pop
jb
je
pop
adc
adc
scas
lds
and
daa
repz
xchg
inc
fists
jb
mov
xor
mov
cmp
xor
xor
add
mov
jmp
stos
mov
lds
loopne
mov
push
mov
pusha
pop
dec
loop
jbe
dec
outsb
push
pushf
adc
out
mov
jb
inc
jae
mov
inc
scas
popf
cmc
pop
in
cwtl
test
xchg
sub
or
jne
inc
inc
cmp
sbb
dec
sahf
and
pop
and
test
sti
movb
inc
shll
push
push
aam
push
pop
call
lods
into
mov
mov
inc
cmp
dec
inc
mov
sahf
lret
mov
scas
add
insb
mov
mov
lock
ljmp
inc
pop
cwtl
and
jle
scas
inc
pop
or
cmc
loop
or
rcll
roll
testl
push
into
push
imul
or
push
jmp
dec
jae
test
fwait
int
shlb
enter
dec
adc
stos
mov
repnz
loope
jmp
int3
jne
inc
mul
and
xor
push
xchg
push
negl
jbe
ljmp
push
ss
xorl
adc
adc
fistpll
out
dec
out
xor
aad
gs
pop
mov
clc
push
iret
out
test
xor
xor
pop
push
and
dec
insb
repz
mov
xchg
clc
or
push
leave
jb
jo
xchg
cmp
adc
mov
jp
mov
xchg
and
xchg
mov
test
cltd
addb
lahf
cmp
addr16
out
pop
stos
xchg
lock
sub
pushl
cmpsb
and
in
and
cmp
repz
dec
dec
call
js
aaa
and
insl
mov
nop
dec
insb
in
loopne
lods
stos
mov
in
or
aad
scas
push
jb
push
cmp
jb
add
enter
push
xchg
mov
jne
dec
mov
jmp
fiaddl
fnstsw
xor
fildl
test
sub
dec
mov
jmp
movb
scas
out
or
xlat
orb
add
mov
adc
fdivr
mov
mov
mov
loope
popa
cltd
jbe
cmpsl
xor
inc
lret
loopne
mov
icebp
inc
cwtl
add
xchg
daa
adc
sbb
ficompl
push
xlat
rcrl
cmc
dec
mov
movsb
mov
mov
movswl
jb
cmp
sbb
loope
and
sub
xor
jl
mov
or
movsl
sub
aad
pusha
fmuls
shrl
mov
cs
bound
cmp
cmp
jge
fildl
sub
outsb
xchg
es
push
test
sub
cmpsl
jmp
inc
scas
mov
xchg
aad
inc
jo
cmp
inc
xchg
inc
xor
jl
pop
inc
ja
shrl
push
dec
adc
fldt
imul
fsub
inc
aad
add
leave
ret
jno
test
cmp
setl
and
sbb
add
aaa
push
sbb
add
inc
shlb
xorl
add
adc
cmpsb
clc
out
add
jbe
or
jg
push
mov
dec
test
sbb
js
and
cmp
shl
insb
sbb
jbe
mov
mov
arpl
sti
xor
js
cmp
ret
cli
or
into
jae
mov
daa
cmp
mov
push
and
in
rclb
xchg
push
or
stos
pop
xchg
sti
lea
adc
sub
repz
stc
stos
xor
das
fdivrl
push
pop
mov
outsl
sarl
inc
popf
in
cmpsl
lahf
and
sub
dec
jne
mov
and
xor
adc
stc
mov
or
push
das
and
orb
inc
inc
bound
mov
int
push
push
mov
cmpl
data16
pop
mov
fadd
hlt
fidivrl
in
xor
push
out
or
sub
dec
test
sub
jns
inc
es
xor
adc
lds
ja
pop
mov
psubusw
inc
addr16
cmpsl
lahf
scas
js
dec
or
cld
or
cmp
rorb
mov
rcrb
in
into
ja
xor
inc
pusha
push
adc
in
pop
and
pop
add
ret
sub
out
js
mov
add
jno
xchg
pop
ja
enter
sbb
xchg
mov
aas
mov
pusha
shl
add
scas
dec
les
pop
insb
and
icebp
aam
sub
cmp
rorb
aam
enter
mov
xchg
xchg
adc
fstpl
flds
sbb
xlat
fwait
subl
rol
mov
xchg
jecxz
pop
or
in
ss
clc
stos
push
push
fidivs
or
imul
sbb
dec
pop
mov
sbb
mov
mov
cmp
sti
test
loopne
mov
xchg
aas
ds
dec
outsb
mov
mov
int3
faddl
xchg
xchg
dec
test
mov
jb
aas
lahf
mov
fdivrl
lret
push
push
jl
cmpb
lea
mov
fwait
sbb
inc
pop
sub
mov
mov
inc
xor
jbe
loope
sti
test
mov
vphsubbw
push
test
and
inc
pop
nop
jb
jecxz
test
icebp
mov
jle
ds
cmp
inc
mov
cmc
mov
pop
and
loop
cmp
fcompl
cmp
popf
mov
pop
adc
adc
cs
lret
xor
fdivl
add
add
jle
mov
les
hlt
adc
aas
shrb
or
push
mov
jns
jmp
out
js
dec
adc
or
xlat
inc
call
push
fcomi
nop
xchg
mov
jg
lock
popf
loop
jbe
sti
aam
sbb
shrb
add
repz
clc
add
mov
je
negb
iret
fwait
cwtl
xchg
pop
nop
xchg
cli
push
insl
add
fiadds
imul
lret
fistps
out
scas
mov
fisttpl
add
adc
arpl
mov
stos
push
stc
mov
push
push
cmpsb
ficoml
dec
dec
push
inc
add
lds
shll
imul
loop
fs
jbe
sub
es
shrb
idivl
out
jmp
lock
cltd
add
nop
and
into
mov
xchg
insb
or
aam
push
dec
push
mov
ljmp
pop
shl
dec
sbb
mov
sbb
mov
push
push
mov
ja
mov
in
xchg
mov
ret
cmp
sub
loopne
ss
and
push
push
sbb
push
test
lret
movsb
xor
mov
xor
popa
dec
ret
stc
stos
xor
sahf
pop
fmuls
test
lds
repnz
clc
inc
lcall
add
daa
mov
addr16
dec
sbb
dec
pop
cmp
or
sahf
jecxz
sbb
lret
jnp
aas
nop
mov
dec
fimuls
sbbl
imul
outsl
sub
and
lcall
jae
mov
xor
ret
mov
stos
mov
fnstcw
add
scas
mov
out
cmpb
cli
cwtl
shlb
aad
push
mov
pop
or
roll
test
jns
pop
cmp
xchg
mov
stc
add
push
and
ja
inc
je
loope
add
jb
test
jno
loop
push
popa
sbb
and
add
push
cli
cs
std
jne
push
xchg
pop
sub
outsb
call
xor
sbb
jae
xchg
shrl
mov
jge
es
dec
add
mov
xor
fiaddl
or
out
mov
mov
into
mov
cli
mov
nop
pop
push
inc
imul
inc
add
sti
jle
mov
lret
mov
shll
adc
rclb
mov
movb
push
data16
jne
adc
ja
xor
popf
push
xchg
cmp
adc
stc
pop
repz
pop
mov
out
mov
into
cmp
in
out
ja
cmc
ds
fbstp
in
and
mov
push
adc
jl
mov
or
cmpsb
cmc
sub
sbb
or
fldenv
aaa
ljmp
cmp
adc
lea
cmp
inc
sbb
sarl
inc
and
adc
bound
or
mov
lock
xchg
int3
sbb
daa
cmp
out
clc
movsb
pop
fcompl
sbb
and
sar
cmp
sub
gs
lea
hlt
je
popf
xchg
adc
rclb
hlt
jl
xchg
test
aas
xor
xor
test
dec
lcall
xorl
cmp
and
popf
jbe
xchg
pushl
ret
in
xor
fstpl
insl
mov
notl
call
add
adc
stos
adc
mov
sarb
add
dec
mov
ja
sbb
pop
and
inc
negb
cs
stos
push
or
mov
lcall
test
or
loope
mov
inc
inc
jo
loopne
push
or
sub
enter
inc
aas
into
jbe
jne
xchg
xchg
out
cld
insb
xchg
push
sarl
mov
ret
or
and
inc
imul
test
sbb
lods
mov
sbb
mul
std
push
hlt
imul
arpl
jno
addl
mov
pop
mov
jb
movsl
cmp
mov
outsb
pop
xor
mov
jae
mov
rorb
or
sbb
mov
push
pushf
lahf
int3
add
imul
xor
fmull
repnz
lods
sahf
sbb
push
sbb
into
imul
out
or
bnd
xchg
hlt
hlt
adc
inc
adc
sub
int3
test
jmp
sbb
out
shll
subl
mov
xchg
hlt
pop
gs
int
divl
pop
dec
dec
pusha
push
push
push
aam
pop
nop
and
push
dec
xchg
jg
cmpsl
push
scas
clc
data16
pop
pop
andl
push
aas
call
bound
lods
xchg
or
xchg
sbb
push
enter
push
test
and
sub
hlt
sbb
adc
or
sub
in
pop
mov
cmpsb
movsb
fdivl
pop
sub
jp
sbb
aad
je
addr16
shll
jl
xchg
adc
cmp
push
lcall
pop
jp
jns
xor
sbb
sub
imul
mov
outsl
iret
lret
test
mov
sub
jnp
std
insb
mov
and
mov
sbb
sbb
cmpsb
aam
push
repnz
dec
loop
cmp
pop
jmp
xchg
cmp
out
addr16
sub
lods
out
test
xchg
jne
dec
add
hlt
mov
cmp
test
repz
jge
pop
mov
xor
xlat
pop
mov
stos
pop
xor
or
push
cmp
jns
push
sub
cmp
bound
cli
out
adc
mov
xchg
inc
sub
pusha
jl
mov
cmp
lds
xor
mov
clc
mov
dec
loop
fsubrs
xor
push
xor
mov
lds
outsl
mov
in
aam
flds
push
xchg
sahf
sahf
xor
and
mov
pop
repnz
xor
mov
sbb
ljmp
xor
mov
movsb
roll
insb
mov
push
sahf
push
adcl
sbb
or
jo
lods
add
psubusw
out
or
xchg
mov
ljmp
sarl
pop
add
nop
cmpsb
aad
out
outsb
inc
sub
movb
cmc
adc
inc
je
mov
pop
push
sti
stos
lods
inc
add
adc
out
push
aam
xchg
mov
pcmpeqw
les
dec
movsb
roll
inc
xor
mov
into
jno
out
cwtl
add
or
inc
add
test
add
mov
ljmp
clc
rcrl
sbbl
xlat
push
loop
adc
dec
or
test
pop
xorb
push
sub
push
nop
add
aad
jmp
inc
outsl
push
adc
in
jb
fsubs
dec
out
mov
int
jne
sub
lahf
cmp
gs
fistpll
xchg
bound
push
test
mov
jecxz
jo
mov
iret
nop
mov
add
bound
lea
popa
cmp
mov
mov
sbb
int3
pop
add
sub
scas
lcall
mov
inc
sub
mov
mov
mov
push
push
in
ja
add
mov
test
fwait
xor
iret
repnz
out
push
repnz
push
fs
pop
mov
sbb
push
and
inc
or
ficomps
sbb
adc
enter
adc
insl
pop
push
js
div
add
loope
add
xor
mov
scas
test
xchg
mov
pushf
loop
fdivp
repnz
inc
inc
xor
xchg
loope
nop
mov
loope
inc
jge
je
push
sbbb
pop
js
fs
push
enter
ljmp
xor
fistl
lea
mov
xchg
into
mov
nop
cmpsb
sub
mull
jmp
fs
jp
push
cmp
xchg
stc
mov
ss
enter
dec
xchg
xor
dec
out
leave
insl
sub
inc
cld
sub
cmp
aas
xchg
scas
cmp
popf
mov
push
cmp
push
in
addr16
test
cmp
add
jmp
adcb
pop
dec
and
stc
aaa
and
std
iret
jge
or
xor
pop
loope
ljmp
mov
push
in
lahf
fdivs
xlat
push
cltd
pop
mov
call
movsb
mov
popa
stc
imul
in
dec
lds
cld
stos
shrb
push
xor
clc
dec
dec
xchg
jno
insl
push
adcb
mov
out
push
xchg
pop
mov
mov
jecxz
mov
mov
xor
sbb
pop
mov
gs
sbb
pushf
cmpsl
jecxz,pt
fisubrl
or
sub
loope
mov
cwtl
and
jle
lods
jmp
lock
jge
jno
adc
aas
mov
push
lds
inc
and
cmp
jb
imul
jne
inc
ret
sbb
xor
sub
jmp
sub
xor
pop
inc
xchg
mov
dec
cld
or
xchg
pop
jae
mov
xchg
ficompl
pop
idivl
nop
sbb
push
xor
add
mov
in
imul
movsb
mov
mov
std
push
jp
xchg
jl
adc
or
in
xlat
push
pop
fstpl
test
repnz
cmp
into
and
xorb
ja
fdivr
sbb
mov
jecxz
jp
popf
xlat
push
movsb
pop
popa
add
push
in
scas
cmpsl
dec
jg
mov
push
dec
or
xchg
iret
xchg
outsl
cmp
sbb
imull
int
jecxz
sub
loope
dec
mov
jnp
std
and
xlat
arpl
mov
roll
bound
clc
jb
push
ret
mov
pop
push
sahf
dec
iret
mov
jbe
xchg
sub
mov
mov
in
cld
lret
cmc
pop
add
jae
fistpl
cmp
je
pop
dec
xchg
jo
and
jae
js
push
sub
jp
or
jne
sbb
pusha
lock
cmpsl
fisubl
or
and
frstor
push
dec
lahf
bt
scas
aaa
fildll
into
ljmp
inc
addr16
cs
lahf
cmp
pop
fstpl
mov
mov
clc
push
dec
sbb
add
inc
pushf
lret
and
jmp
cs
rcr
iret
in
mov
xchg
sar
sbb
outsl
mov
or
cmc
in
dec
lods
sub
xor
mov
popa
lock
mov
inc
sar
mov
outsb
xchg
mov
ret
or
jae
roll
scas
add
rclb
xchg
je
aaa
pop
or
pop
or
xchg
cwtl
fmul
or
xchg
in
setp
in
lea
jg
idivl
pop
incb
sti
pop
cld
mov
stc
dec
xor
and
mov
xor
jle
sub
es
jmp
inc
aaa
bound
repnz
xchg
mov
ficompl
cmpsb
xor
mov
sti
pop
cmp
xor
xchg
mov
sar
pop
in
icebp
push
cmpsb
outsl
test
test
rorl
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
jmp
leave
pop
xchg
movsl
or
stc
adc
jnp
pushf
jnp
dec
fmull
push
mov
pop
add
cmp
mov
fstp
js
sub
push
or
repz
in
adc
adc
in
inc
xchg
xor
mov
push
sbb
ss
nop
or
leave
dec
loopne
pusha
pop
out
enter
xorb
shlb
roll
pop
ss
addr16
dec
push
inc
inc
and
mov
icebp
faddl
xchg
xchg
es
aam
in
xor
aad
dec
adc
push
scas
sarb
pop
pusha
inc
iret
rcl
sub
push
data16
push
adc
shll
mov
cmp
int
pop
or
add
xchg
test
add
xchg
or
sbb
dec
faddp
add
push
add
jb
sbb
insb
cmpb
mov
or
pop
sbb
mov
lea
mov
ja
cmp
jle
repnz
nop
add
cmp
jb
jno
xorb
mov
jbe
jb
or
xrelease
outsl
mov
iret
mov
inc
gs
pop
movsb
int
mov
movsl
inc
dec
lcall
mov
cld
jb
jg
lea
leave
jp
jno
jmp
sub
scas
jne
push
comiss
cmp
jo
jecxz
rcl
push
lea
insl
sub
inc
sbb
scas
mov
mov
xor
xchg
imul
sub
jl
data16
cmpsl
pushf
jle
and
push
jb
enter
arpl
js
js
mov
sahf
dec
or
inc
push
or
pop
aad
cmp
and
lods
iret
leave
lea
fists
inc
test
mov
loop
pop
fimuls
aas
cmp
decb
vlddqu
mov
mov
mov
ret
arpl
adc
push
mov
std
inc
mov
lret
add
dec
pop
sbb
push
lret
cmpsw
pop
mov
es
pop
and
cs
or
aas
xor
imul
leave
inc
addr16
test
inc
addr16
mov
lock
mov
and
leave
jg
inc
lods
cmp
cmp
shrb
mov
push
out
imul
push
pop
pop
sti
ficoms
jge
ficoml
jmp
and
xor
jns
jb
pop
repnz
dec
flds
mov
addr16
mov
pop
mov
push
aad
sbb
fisttpl
icebp
xlat
hlt
add
cmp
fwait
lods
push
hlt
jbe
and
fprem1
xchg
subl
push
jns
push
cmc
push
mov
sub
jne
jg
pop
push
push
xlat
inc
push
leave
insb
aad
cld
leave
push
call
mov
sti
cmp
scas
mov
push
sub
pop
sti
sub
xor
mov
jb
iret
mov
xor
enter
dec
fisttps
aad
mov
negl
inc
mov
dec
dec
fst
xchg
inc
call
mov
inc
out
jnp
jo
jle
lds
jbe
jb
stos
arpl
xor
sbb
pminsw
mov
jae
popf
sahf
push
dec
jns
iret
gs
sahf
lcall
test
add
mov
push
icebp
ja
and
cwtl
pop
ficoms
decb
movsb
arpl
jae
dec
xor
cltd
cmp
fstps
inc
testb
cwtl
xchg
dec
pushf
mov
repnz
mov
xchg
push
mov
cltd
movsl
pop
icebp
mov
out
jns
push
dec
popa
push
cld
roll
pop
xchg
adc
aas
pop
mov
mov
ljmp
cmp
addr16
shll
pop
xchg
pinsrw
jge
pop
fdivl
jmp
test
cli
repz
stc
push
rcrl
out
pop
adc
jp
xchg
and
les
mov
loope
or
fcoms
add
inc
div
stc
cwtl
in
mov
cld
add
jae
xor
dec
add
and
hlt
adc
andl
xor
aaa
sarl
cwtl
cmc
sub
cmp
push
ljmp
icebp
lahf
into
jmp
or
subl
jge
aam
into
push
mov
xor
jp
mov
in
ja
push
lret
fsubl
push
mov
mov
jmp
and
test
div
daa
stc
std
enter
stc
push
jae
test
jne
shlb
call
xor
sub
lods
inc
lret
cmp
jge
push
fisubl
jge
test
les
cli
pop
inc
leave
adc
sub
cmp
sub
sbb
fcmovb
mov
lret
dec
sub
fistpll
jge
mov
mov
ficoml
push
cli
inc
ss
jge
mov
lahf
mov
pop
xor
test
sub
xchg
loope
loope
mov
out
lahf
bound
mov
jl
pushf
das
adcb
sub
das
lock
adc
in
out
mov
stos
int3
pop
jo
xchg
sub
push
jecxz
out
repz
and
fadd
data16
in
jle
shlb
add
mov
popa
scas
shlb
cmp
test
sub
pop
insl
inc
test
push
sub
es
push
mov
aad
fs
and
xor
jae
mov
aam
cmpsb
inc
popa
xchg
pop
push
pop
ds
sti
jle
outsb
and
push
adc
sbb
sbb
sti
imul
popa
mov
mov
call
fidivrs
ret
xchg
lahf
cmp
jmp
sub
pop
mov
jb
int3
sbb
jmp
clc
test
dec
pusha
repnz
add
nop
inc
adc
imul
test
fwait
pop
and
mov
cld
cmp
pop
sbb
dec
adc
dec
sti
inc
aaa
or
insb
sbb
cltd
cmp
lods
imul
inc
xchg
dec
xchg
pop
cmpsb
cltd
inc
adc
jmp
and
mov
xchg
xor
mov
push
xor
outsb
es
xor
inc
xchg
sbb
adc
mov
adcb
loope
mov
or
pop
gs
out
in
test
pop
sbb
ljmp
push
fisttpl
push
stos
jae
jno
insb
cli
mov
and
jne
sbb
arpl
cmp
pop
sub
movsb
lock
xor
stos
cmp
aad
ljmp
icebp
cmpsl
cmc
pop
jne
jbe
decb
stos
jg
xor
mov
aam
test
cmp
mov
clc
stos
inc
in
je
xlat
fs
sub
jo
xchg
or
jg
jns
mov
cmc
aam
ljmp
xchg
lahf
xlat
push
inc
mov
jo
push
add
sub
bound
loop
mov
jne
fimull
mov
loope
push
adc
out
stos
mov
xchg
sbb
mov
and
test
fbstp
push
jne
ja
stos
popa
ljmp
mov
xor
ror
push
stc
push
pop
loop
pop
fstps
fdivl
sbb
xlat
mov
inc
add
sbb
xchg
or
out
jno
add
aam
pop
jmp
xlat
mov
sbbb
jle,pt
fadds
sub
adc
sub
or
movsb
xchg
and
addr16
xchg
fcoml
lret
lahf
push
xchg
fwait
dec
rcr
jb
jne
out
loop
sbb
xchg
adc
std
add
lock
in
push
jecxz
push
mov
out
fmuls
enter
lock
mov
rol
add
or
out
pop
into
mov
rep
imulb
or
xor
fadd
ret
fstpl
shll
test
leave
xor
mov
in
dec
xchg
mov
test
mov
outsb
cltd
mov
stos
jle
cmp
movsl
cmp
lock
xor
fnstenv
iret
ds
and
jno
mov
dec
stc
mov
les
or
rolb
pushf
into
sbb
and
inc
pop
xlat
jnp
push
sbb
dec
push
ret
insl
and
mov
movsb
leave
test
ja
inc
inc
arpl
push
inc
or
insl
add
ljmp
push
les
jns
push
mov
cmc
or
mov
or
shl
icebp
jle
int
xchg
inc
xchg
scas
scas
test
call
jno
jmp
repz
inc
lcall
movb
cmpsb
xlat
jmp
add
hlt
ljmp
shrb
push
or
add
sahf
adc
mov
jmp
push
mov
add
sti
adc
sbb
nop
cld
and
inc
ss
adc
or
mov
adcl
jae
jno
arpl
adc
jp
or
xchg
fldcw
jmp
adc
pop
mov
fsubp
add
popf
int
sti
cwtl
xchg
in
cmc
and
lahf
push
add
sahf
xor
mov
in
insb
out
pop
mov
adc
inc
popf
or
adc
push
repnz
ja
rcr
addr16
in
push
xchg
pushf
mov
cmp
cwtl
and
int3
ds
xorb
or
inc
push
repz
adc
add
mov
sub
xor
rcrb
add
add
mov
jg
addb
insb
jge
stos
clc
cltd
lret
sub
stos
or
cmp
daa
ljmp
repnz
sbb
pop
inc
inc
adc
mov
cmp
push
orl
ret
repz
cmpsb
ja
sub
pop
lds
and
nop
xor
or
loope
push
xchg
jbe
lods
mov
es
pushf
push
dec
ja
das
fs
in
jl
imul
test
or
data16
push
cmc
out
mov
mov
lret
repz
scas
and
outsl
js
imul
fdivs
loop
stos
repnz
hlt
mov
stc
adc
arpl
pop
inc
test
das
jmp
test
xor
xlat
addr16
cmpsb
inc
inc
push
in
mov
pop
xchg
aas
movsl
shll
mov
imul
push
lods
es
jmp
cmp
lods
mov
and
je
adcl
xchg
outsl
add
gs
incl
fsubr
lods
or
sub
mov
dec
mov
stos
paddq
push
rclb
dec
add
and
neg
sub
pop
nop
aam
aas
or
sbb
cmp
rclb
popa
jmp
pop
pop
stos
ss
xchg
mov
xlat
mov
or
jmp
mov
stc
mov
lret
mov
xchg
mov
shlb
fsts
into
leave
and
iret
pop
rcl
dec
mov
ror
dec
lahf
data16
movsl
imul
inc
sbb
add
cltd
lcall
mov
roll
js
jnp
repnz
mov
shl
dec
pushf
and
cmp
jmp
sbb
mov
dec
pop
repnz
pop
inc
xlat
mov
dec
and
aam
jge
jno
dec
and
sub
push
repz
rcrl
jb
add
mov
sbb
cmp
enter
or
lcall
leave
mov
repz
repnz
push
aaa
outsb
in
push
push
fstp
dec
pop
xor
or
push
clc
addr16
dec
jb
orl
inc
lods
mov
jno
cwtl
in
mov
mov
adc
fldl
stc
push
ds
hlt
sbb
inc
es
xorl
fistpl
xor
int3
std
fldl
pop
or
lock
das
dec
dec
xchg
int3
inc
inc
loope
ret
cld
cltd
sbb
lahf
loopne
jmp
pop
in
or
sub
sub
fisubrs
clc
mov
test
int3
xorps
cmpl
dec
push
jecxz
xchg
lods
jno
insb
xchg
mov
mov
lret
fsts
insl
test
test
bound
jmp
mov
inc
mov
mov
insb
pop
mov
inc
mov
sti
xor
movsb
mov
pusha
adc
push
pop
xchg
mov
fnsave
adc
push
sub
lcall
shlb
and
cld
fs
into
jecxz
leave
fnstcw
adcl
cmpsb
fsubl
orl
rol
sub
js
cmc
daa
cmpsl
mov
cmp
push
addr16
jp
in
xor
push
xor
in
mov
xor
in
fs
adc
pop
js
jmp
inc
out
lcall
bound
inc
push
add
push
notl
xchg
mov
fcmove
pop
sub
and
aas
popa
movsl
sub
inc
icebp
testb
jns
mov
pop
mov
in
xchg
rol
scas
lock
test
loop
in
jne
push
mov
lahf
dec
sbb
pop
mov
cmp
out
andb
and
xchg
sbb
js
mov
sub
sbb
cmp
daa
cmp
pop
jge
push
rol
sbb
xor
adc
je
and
montmul
cmpsb
add
lock
or
jno
sbbb
std
pop
or
loop
cs
jb
mov
add
mov
icebp
push
or
push
push
arpl
xchg
fcompl
pop
gs
xor
jmp
nop
arpl
int3
mov
imul
mov
js
cmp
movsb
leave
jp
insl
arpl
imul
dec
dec
adc
data16
mov
stos
repz
and
xchg
cs
xor
lcall
xchg
fwait
cmc
lea
aad
fdiv
adc
adc
mov
sbb
jnp
xor
or
mov
lret
pavgb
or
leave
inc
xor
stos
or
das
aas
inc
rcrl
nop
xor
mov
cs
adc
in
pop
fcoml
sbb
sbb
mov
gs
pop
pop
cmpl
das
push
mov
or
enter
aaa
addb
imul
sbb
add
insb
mov
cmpsl
jle
call
mull
pop
outsl
pop
add
fidivl
mov
mov
bound
in
cbtw
add
add
jp
popf
and
mov
test
pop
hlt
out
pop
mov
sbb
out
push
sbb
das
not
jl
or
cmp
mov
popa
add
mov
stos
nop
cmpsb
push
aaa
daa
xchg
ljmp
cmp
push
push
xchg
cs
test
push
jge
jne
aaa
inc
push
ljmp
out
cwtl
inc
mov
lret
cmp
scas
loope
mov
pop
jo
aam
popa
std
stc
cmp
push
int3
pop
lret
leave
ds
rcrb
test
or
lret
ret
mov
sahf
iret
rcrb
push
add
mov
dec
sub
sarl
or
aad
mov
adc
in
add
mov
aas
aam
push
mov
sbb
mov
mov
bound
outsb
and
imul
jecxz
jmp
sbb
imul
jge
gs
js
popa
xchg
xchg
cs
fdiv
sub
nop
ud0
push
test
mov
repnz
loop
nop
lods
inc
push
mov
push
loop
fisubl
cmp
inc
scas
jb
mov
xor
ds
addr16
scas
xchg
mov
xor
sub
ss
sub
pop
ror
pop
fmuls
xchg
bound
jl
enter
daa
hlt
in
push
outsb
mov
test
jno
daa
sti
fst
pop
or
fstpt
in
push
dec
mov
push
shrb
inc
andb
sub
adc
mov
push
inc
out
mov
test
sbb
add
das
ljmp
mov
dec
scas
call
mov
xchg
xchg
mov
push
ja
pushl
inc
lods
mul
and
pusha
inc
insl
scas
addr16
int3
stc
into
xchg
fs
stos
sbb
inc
cmpsl
in
mov
hlt
out
mov
pushf
ss
popa
jp
cmc
cmp
pop
dec
sbb
int3
fs
xchg
js
adc
mov
xor
xchg
or
push
xor
cmp
bound
mov
movb
out
cltd
mov
popf
enter
ljmp
push
cltd
cmc
call
ficompl
stos
cmc
xor
int3
xchg
test
inc
push
ficoml
nop
cmc
sbb
pop
mov
inc
push
inc
stc
mov
arpl
xor
test
sarb
fimull
fiaddl
ds
xor
add
cmp
ret
dec
outsb
xchg
jbe
subl
push
push
push
pop
jae
pop
jecxz
pop
sbb
cmp
lock
jmp
adc
scas
sbb
pop
scas
mov
sub
sbb
add
ljmp
aad
inc
jmp
dec
in
or
mov
insb
mov
jmp
dec
jge
sub
sub
ss
adc
insb
sub
lcall
sub
push
nop
or
testb
add
sub
dec
and
daa
add
scas
inc
dec
lds
ror
and
push
push
xchg
mov
push
inc
aas
xchg
insl
mov
pusha
ror
ffreep
push
loopne
push
movsb
imul
adc
sub
out
out
mov
dec
cmc
xor
jecxz
inc
icebp
push
xchg
or
mov
or
lahf
aas
pop
outsb
fdivrl
sub
cltd
dec
js
int3
sub
sub
mov
fdivr
cmp
out
dec
es
daa
aaa
cmpsb
imull
retw
std
inc
mov
fcoml
stos
inc
push
adc
faddl
push
ret
cmp
jp
dec
mov
pop
mov
fidivrs
cs
push
mov
fs
push
sbb
gs
inc
mov
loope
pusha
or
push
xor
xchg
push
popa
enter
scas
popa
pop
ret
mov
pop
outsl
xchg
dec
mov
mov
lock
aas
icebp
cmp
out
dec
mov
cmpsl
dec
scas
adc
cmpb
xchg
pop
mov
dec
push
icebp
cmp
sahf
lcall
jg
inc
cmp
cs
pop
sbb
mov
enter
stos
sub
imul
out
gs
bound
imul
mov
out
push
out
mov
jp
hlt
sarl
frstor
mov
push
or
cmpsl
add
pop
js
pop
add
mov
mov
sahf
or
mov
aas
sub
inc
xchg
mov
fadd
mov
mov
dec
and
pop
int3
lret
das
lcall
inc
nop
sti
into
push
mov
xchg
rcll
mov
xchg
aam
xor
jno
or
popa
adc
loopne
hlt
sbb
cmp
scas
dec
adc
add
sahf
push
xchg
push
xor
int
es
fnsave
in
cmpb
xor
and
shrb
or
fisubrl
mov
cmc
lcall
repnz
pop
jb
ret
sbb
pop
sub
mov
es
sbb
and
bound
fstl
lahf
cmp
sub
add
in
cld
jmp
lret
je
decb
jmp
and
xor
xor
lcall
addl
cwtl
or
stc
xchg
lret
repz
push
outsb
sub
mov
stos
sub
fwait
fs
xor
cs
cli
or
cltd
cmp
mov
mov
xchg
adc
fildll
stos
push
pushf
xchg
pop
fnsave
test
mov
mov
in
data16
aaa
dec
lcall
orb
inc
cmpsb
jmp
inc
sbb
or
push
stc
jp
cmpsb
sahf
arpl
outsl
test
in
lods
sbb
repnz
xchg
pop
aad
sub
mov
mov
lock
cmpsb
or
cwtl
jne
pop
jle
xor
ja
rcrl
cltd
loop
inc
xchg
jle
popa
sbb
inc
dec
add
out
or
xchg
sub
adc
adc
ljmp
fdivl
inc
cmp
iret
add
in
xchg
push
add
mov
add
mov
add
test
bound
add
mov
cmpsw
out
imul
cld
mov
push
mov
sub
cwtl
jg
ja
mov
cli
clc
scas
cmp
jbe
mov
push
in
fcmovnbe
cmp
les
mov
je
dec
or
ljmp
push
stos
daa
insb
js
mov
cmpb
and
enter
adc
cli
or
das
push
push
jmp
test
adc
jge
fsubs
mov
mov
sub
in
xlat
daa
movsb
out
pop
jmp
jb
push
cmpsb
adc
mov
outsl
sbbb
xor
inc
push
inc
xchg
into
rclb
jae
in
mov
mov
and
inc
hlt
or
mov
inc
jl
divl
rclb
ret
xor
mov
sarb
sub
cwtl
pusha
pop
xchg
push
test
roll
andl
add
loopne
lds
std
jg
movsl
cmp
out
scas
dec
daa
lea
lret
pop
sti
cmp
std
test
das
inc
jmp
imul
loopne
lret
aaa
mov
sahf
bound
sub
jb
jmp
mov
andl
fistl
sbb
sbb
cmpsl
inc
dec
inc
xor
cmp
xor
pusha
pushf
push
xchg
sub
mov
sahf
pop
or
jbe
mov
fucomip
popl
data16
push
out
cmpsb
jmp
jns
dec
add
test
add
fwait
imul
sub
sbb
or
mov
pop
fmuls
jecxz
int3
aam
lret
mov
aaa
lret
es
int3
mov
dec
cmp
mov
outsl
rclw
mov
adc
or
sbb
pop
div
std
arpl
hlt
filds
call
aaa
stc
call
sbb
push
repz
jmp
jb
adc
jne
xor
int
pushf
dec
jg
loop
pop
scas
add
andl
jmp
ss
xor
add
sahf
adc
test
lods
iret
loopne
dec
sarl
adc
fcmove
dec
or
inc
push
mov
adc
loopne
enter
xchg
test
daa
jp
adc
jmp
sub
movsb
jg
lret
rcrl
cmpsb
push
insb
jp
adc
aam
adc
insl
mov
sbb
cmp
loop
sub
adc
sbb
xor
xor
arpl
ret
dec
jns
movsb
mov
int3
mov
repz
fistpl
sbb
push
ficoml
pop
movsb
jp
shl
xor
fcmovne
loop
outsl
xor
pop
mov
or
pop
dec
push
nop
dec
call
icebp
jmp
add
scas
add
test
mov
sub
insl
ficoml
fistpl
enter
push
inc
test
jnp
in
inc
mov
pop
js
cmpsl
mov
dec
das
mov
xchg
ret
ss
rcll
adc
pop
mov
sar
cli
cmp
add
neg
cld
test
fwait
cmpsl
fdivrs
nop
sub
adc
jno
mov
jo
xchg
pop
jb
popa
adc
jge
test
je
adc
add
scas
mov
add
jg
nop
aam
jg
popf
aad
movsl
out
xchg
hlt
rorb
stc
stc
cltd
jne,pt
cwtl
pop
push
inc
insb
jns
adc
ret
push
mov
iret
mov
xorb
addr16
pop
and
pop
arpl
or
in
inc
pop
stos
sub
scas
imul
test
fmuls
cmpsb
mov
or
sbb
mov
int
mov
push
dec
gs
lret
lret
lret
cmpsb
xchg
push
ljmp
dec
mov
jbe
subb
xor
jo
lahf
mov
sbb
movsb
and
jge
dec
pop
lods
arpl
js
fsubs
aaa
test
les
fstl
and
fiadds
rorl
loopne
ret
cmp
mov
lods
pop
in
sti
in
pusha
sbb
mov
add
imul
or
cmp
push
xor
sarb
adc
shll
imul
and
pop
jl
and
adc
cli
jecxz
dec
lcall
push
scas
outsb
retw
scas
mov
das
jg
jnp
lcall
or
mov
in
fwait
add
fsts
fdivr
pop
sub
aad
dec
jmp
jl
out
inc
out
sub
cwtl
clc
fbld
negb
fstps
adc
inc
mov
out
push
inc
mov
add
movsl
mov
xlat
mov
xchg
dec
fisttps
adc
xchg
add
aad
in
sbb
jns
inc
push
fs
mov
or
push
gs
sbb
xchg
adc
inc
std
dec
push
into
ja,pn
jmp
push
pusha
sarb
sbb
mov
in
mov
cmp
jo
add
and
cmp
outsb
inc
jp
pop
xlat
push
cmp
add
inc
lret
push
fwait
mov
pop
xchg
rcrb
imul
cmp
out
mov
adc
das
inc
dec
cwtl
insb
int
mov
fistl
dec
mov
mov
fnstenv
stc
cmp
pop
sahf
jmp
push
dec
mov
xor
xor
out
xchg
cmp
push
imul
je
cmp
insb
xor
inc
pop
mov
adc
das
je
aam
js
aad
and
push
leave
cmp
xchg
fsub
call
jbe
jp
inc
loope
je
and
mov
xchg
rorl
xchg
testl
adc
cmp
dec
mov
insb
cmpsb
sbb
pop
mov
xor
lret
lds
sbb
aad
sbb
inc
mov
and
cmpsb
int
add
xor
js
jne
pop
or
push
jno
mov
push
fcompl
sbb
mov
popa
in
cmpsl
test
gs
arpl
xchg
mov
sbb
mov
xchg
out
xchg
jae
loop
mov
cmp
xor
into
xchg
in
xor
jnp
shll
imul
pop
xchg
lcall
dec
and
stos
lahf
pusha
test
cltd
add
arpl
pushl
shll
xlat
mov
lds
sub
lret
adc
xor
mov
or
adc
lcall
jmp
jnp
sub
mov
lahf
leave
mov
aaa
push
idivl
inc
inc
int
lret
outsb
scas
jno
or
outsl
pop
mov
cs
inc
out
arpl
jmp
cmp
add
and
sub
pop
mov
mov
sahf
nop
out
dec
mov
jl
push
shlb
and
push
and
mov
insl
inc
cmp
ds
pushf
dec
jp
jae
lods
in
imul
adc
push
fwait
pop
pop
popa
mov
insl
shr
ljmp
aas
cld
and
int
or
pusha
shl
cmp
into
fistpll
scas
cmp
pop
cmpsl
xor
jb
adc
mov
fs
mov
push
enter
or
adc
into
notb
out
sbb
loop
lods
or
insl
xor
xchg
cmp
adc
out
dec
cmpb
cltd
sbb
mov
pop
ja,pt
addr16
inc
and
ret
push
fwait
and
imul
rclb
or
sahf
data16
cld
jge
dec
pusha
dec
out
jp
xor
mov
mov
movsb
shrl
rcl
fists
xchg
fisttpl
movsl
sbb
lcall
and
mov
in
clc
lea
or
lods
pop
out
mov
pop
test
add
mov
pushf
pop
mov
nop
rcr
mov
xchg
mov
pop
pop
call
out
in
mov
cltd
xor
insb
nop
pop
mov
or
clts
pop
mov
jns
mov
loop
cld
icebp
ud1
push
popa
xlat
sti
mov
fsubr
cmp
or
dec
mov
incb
mov
inc
sub
cmp
cmpsl
sub
daa
popa
imul
ljmp
xchg
aaa
enter
popa
lret
shrb
cmp
xchg
mov
std
rcr
in
mov
lcall
and
bound
sub
sbb
mov
addb
inc
roll
fstpl
add
jae
inc
sbb
andb
dec
inc
push
lcall
dec
cmp
push
adc
pop
in
leave
idivb
jmp
lods
into
fs
mov
jne
arpl
push
cmp
stos
xor
aaa
push
scas
ret
lret
sti
mov
fdivl
cmpsb
mov
pop
roll
jnp
stos
fs
repnz
gs
cwtl
leave
pop
xor
and
in
adc
aas
sub
mov
mov
je
jge
pop
jb
cmp
fisubrl
xlat
lret
sahf
jb
arpl
movsl
or
enter
jae
mov
pop
dec
iret
pop
xor
in
ret
mov
jb
dec
std
sbb
jnp
arpl
into
mov
jp
pop
mov
jns
negb
ret
add
adcb
inc
jmp
cs
call
inc
inc
jbe
je
sti
subl
add
pushf
xchg
fiadds
mov
and
cwtl
sbb
sarb
xchg
adc
mov
dec
xor
fistpll
das
in
adc
adc
mov
frstor
jbe
or
cltd
inc
fscale
loop
jbe
fsubp
adc
and
loopne
xor
sub
xor
daa
mov
push
sub
mov
cmp
and
sti
fsubrs
out
xor
jo
and
sbb
cmpsl
push
loope
lds
addr16
mov
popf
mov
aad
cld
mov
sbb
pop
mov
xor
dec
xchg
cmpl
icebp
dec
mov
jge
push
jecxz
dec
push
xchg
jno
leave
and
mov
xor
cli
daa
je
lret
push
mov
into
sbb
xlat
les
inc
push
xchg
std
in
inc
jno
xchg
ljmp
aaa
outsb
push
and
imulb
dec
lods
stos
pop
push
stos
notl
xlat
push
mov
sbb
inc
int
add
dec
xor
dec
sub
cltd
scas
mov
mov
jg
int3
in
inc
cwtl
xchg
std
mov
sub
mov
push
fnsave
inc
sbb
xor
inc
push
sub
inc
popl
mov
pop
scas
out
adc
sub
mov
fwait
loop
mov
bound
sbb
push
cmp
jge
aam
test
xchg
mov
lcall
loopne
je
orl
or
sbb
push
repz
das
addb
test
or
xchg
dec
mov
lcall
pop
and
jae
out
mov
sti
je
mov
sbb
out
mov
sbb
rcll
xchg
cmc
orb
and
sub
mov
or
xchg
test
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
call
cmpl
jb
movl
sbb
push
add
movl
xorl
mov
xorl
push
sbb
mov
orl
xor
adcl
push
mov
orl
add
andl
mov
mov
test
movl
je
mov
and
mov
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sbb
add
mov
mov
sub
mov
xor
and
add
mov
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
add
movzbl
sub
mov
sub
mov
not
xor
add
sbb
mov
decl
sub
lea
sbbl
xor
addl
xor
cmp
movl
je
addl
mov
subl
xor
add
movl
cmp
movl
jne
pushl
subl
call
mov
sub
mov
and
mov
xor
subl
add
cmp
je
adcl
pushl
andl
pushl
andl
call
and
mov
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
addl
xor
subl
add
movl
cmp
movl
je
mov
mov
xorl
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
mov
mov
decl
mov
andl
add
andl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
mov
sbbl
add
movl
mov
jmp
mov
or
mov
mov
add
add
mov
mov
mov
xor
add
movl
cmp
je
movl
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
jmp
cwtl
mov
cmp
mov
xchg
jns
in
jnp
pushf
jnp
dec
dec
fnstsw
test
les
into
xor
and
jl
std
dec
xlat
mov
loope
call
cmp
jge
out
dec
adc
in
sbb
sub
jmp
jb
mov
sbb
mov
or
inc
sub
inc
push
sub
sub
or
in
sub
adc
mov
popf
dec
lcall
jo
rorl
cmpsl
and
out
xor
jae
out
xchg
xor
pop
mov
hlt
push
mov
push
ret
movsl
mov
ja
dec
test
scas
leave
adc
stc
lret
inc
adc
inc
outsl
adc
push
xor
mov
popa
dec
inc
test
ljmp
insb
and
bound
push
fdivs
jl
mov
icebp
in
outsl
imul
imul
or
je
cmp
jg
and
fwait
mov
enter
mov
in
ret
and
mov
into
push
imul
scas
loop
arpl
stos
or
test
frstor
add
add
sbb
test
sti
in
or
fldenv
add
push
pop
mov
ror
stos
push
enter
movsb
hlt
ror
or
popa
fwait
inc
adc
jge
dec
cmp
hlt
das
xchg
stos
pop
lret
add
xchg
test
xchg
mov
fbstp
add
inc
pushf
pop
xor
add
mov
jp
pop
insl
lea
mov
sub
out
into
jns
and
and
xchg
jge,pt
inc
and
gs
je
loop
cmc
inc
fbld
and
jecxz
cmp
iret
aam
dec
ret
inc
mov
jo
notl
push
jge
adc
pop
or
pop
cmp
insb
xchg
add
xor
sub
or
pop
mov
int
stos
mov
gs
xlat
inc
add
mov
pop
vorps
push
add
fwait
test
xor
pop
dec
jb
xor
add
repz
dec
test
nop
cmpsb
sbbb
mov
add
mov
inc
jl
add
dec
imul
jno
test
lock
outsl
sbb
cmp
hlt
xchg
mov
testb
arpl
lods
cltd
sub
xor
loopne
fnstenv
sbb
lods
pusha
jl
xchg
jge
dec
ret
inc
push
adc
aad
or
xor
pop
sbb
mov
xchg
ljmp
clc
mov
enter
clc
cltd
loopne
outsb
xor
mov
xchg
test
inc
cmp
inc
cmp
dec
repz
outsb
cmp
test
push
bound
int3
inc
lods
popa
sti
rclb
xor
clc
cmp
sub
stos
pop
pop
fwait
inc
xchg
push
in
lret
xor
test
xor
ret
dec
sbb
inc
pusha
cwtl
jmp
mov
and
test
cmp
arpl
iret
sbbb
ljmp
in
dec
mov
xchg
xchg
cmc
mov
pop
xor
icebp
cmp
or
in
and
fsts
rorb
xorb
lods
idivl
push
sub
testl
mov
adcl
fdivs
das
mov
or
mov
mov
repnz
stos
xor
jge
loop
fisttpll
and
repnz
lods
out
mov
ror
les
xchg
mov
lea
cld
ljmp
mov
orl
cmp
lret
xor
out
aam
dec
jmp
rcrb
mov
dec
ds
inc
jl
sbb
enter
mov
das
pusha
cmp
sti
cs
hlt
push
sub
iret
je,pn
faddp
or
in
adc
je
clc
int3
lret
sarl
add
push
jo
pop
sbb
movsb
sub
loope
stc
into
pop
jmp
sub
data16
push
and
orb
les
icebp
fsubrl
push
mov
pushf
adc
or
mov
bound
jae
mov
mov
xchg
movsb
add
cwtl
xchg
mov
nop
leave
pop
lea
outsl
movsb
inc
icebp
imul
inc
xchg
xchg
lcall
in
jns
pop
fwait
and
fdivrl
jge
sub
xchg
aad
cli
out
fmuls
jle
mov
xor
ret
or
clc
fnstcw
mov
loopne
push
outsb
mov
sbb
pop
cltd
fs
fistl
daa
sbb
push
js
dec
inc
jb
push
and
sbb
ret
cltd
dec
sub
out
pusha
inc
cwtl
dec
test
fmull
dec
shlb
mov
push
dec
negl
adc
rolb
xor
into
jo
rolb
mov
sbb
inc
fdivrl
hlt
sbb
mov
data16
sub
mov
xchg
xchg
jns
std
outsb
hlt
sbb
push
pop
outsb
and
adc
je
lods
push
out
pop
jecxz
cld
cmp
aaa
cmpsl
push
mov
sar
pop
inc
jb
loopne
lret
mov
imul
jb
fiaddl
lods
mov
xor
bnd
in
fldl
and
icebp
adc
sbb
cmc
add
jne
inc
jnp
add
adc
out
ds
jmp
loop
jns
insb
sbb
stos
rcll
xorb
xor
mov
sbb
fstps
push
inc
pop
push
and
add
lret
add
jmp
cmp
repnz
data16
inc
jmp
add
out
ljmp
sub
mov
int3
cmp
or
push
sbb
mov
hlt
pushf
push
jae
fiadds
xor
stc
xor
into
mov
xlat
sub
out
mov
fstpt
in
sbb
cmc
xchg
push
mov
mov
cmp
xchg
jo
sbb
sbb
push
push
scas
and
repz
mov
dec
inc
jl
mov
push
jmp
andb
lcall
jecxz
fwait
jmp
inc
pop
mov
daa
xor
or
xchg
out
stc
repnz
flds
cmpsl
adc
mov
xchg
mov
jae
call
sbb
pop
cmp
inc
aad
inc
sub
push
repz
push
insl
jle
xor
test
and
nop
cmp
imul
jecxz
lds
loope
shll
or
arpl
stos
and
sub
idivb
sub
stos
in
cmp
cmp
pushf
add
mov
arpl
sub
movsl
and
mov
out
cmc
sub
jecxz
loope
outsl
ss
add
jge
and
daa
sub
xchg
adc
jo
push
jmp
ror
out
cmp
aaa
or
cs
call
cli
loopne
rcrl
aad
fldt
aam
mov
jp
jb
xchg
push
sub
addb
fcomp
lcall
add
arpl
lcall
xor
loopne
rcl
arpl
inc
lahf
in
cmpl
mov
adc
or
xor
add
inc
sub
add
pop
dec
imul
in
or
popa
jge
jnp
push
aas
test
or
adc
test
nop
xchg
or
xchg
sbb
lds
cmpsb
lret
aaa
dec
inc
dec
add
jns
or
dec
xor
pusha
push
stc
or
loopne
stc
sbb
lahf
fimull
and
outsb
mov
push
psubw
daa
ret
mov
pop
sar
popf
and
add
pop
push
repz
adcb
inc
sbb
sbb
mov
in
sub
and
xor
inc
sub
fidivrs
add
aam
mov
mov
sbb
ja
jnp,pn
push
mov
mov
dec
mov
test
sarl
hlt
jmp
adc
je
push
jo
fstpt
pop
pop
mov
popa
adc
xor
les
sbb
out
test
cmp
js
movsl
sub
push
sub
aad
in
test
sub
mov
scas
cmp
dec
movsb
mov
cmp
mov
sub
push
stc
mov
mov
mov
xlat
or
xchg
push
scas
in
mov
mov
add
cmp
xor
fbstp
imul
add
pop
push
scas
xor
cmp
xchg
cli
sub
cmpsl
inc
add
shr
roll
cmp
lahf
mov
push
push
sbb
addr16
icebp
in
cmp
xchg
pop
adc
es
and
arpl
adc
lret
iret
cmp
xchg
std
cltd
and
xor
iret
mov
es
and
mov
ss
lret
pop
les
in
jo
fidivs
int3
add
shrl
xor
fcmovbe
jg
and
int
mov
mov
xor
fldcw
inc
jae
mov
sbb
hlt
and
mov
imul
xor
and
fadds
fwait
jecxz
sub
std
xchg
icebp
add
out
cmpsl
push
rcll
xchg
or
sub
sub
xlat
aad
sbb
mov
add
and
mov
out
mov
sahf
adc
aam
xchg
popf
pop
cmc
sti
rorb
ret
adc
or
or
or
lret
lods
or
push
lds
leave
or
call
jns
mov
fsubs
pusha
mov
mov
jbe
xor
clc
inc
cmp
push
leave
sub
mov
fdivrl
inc
add
cli
iret
and
adc
and
negl
jmp
adc
sahf
lock
pop
mov
addb
movntq
pop
std
pop
imul
aaa
pop
insl
popa
sahf
push
xchg
in
stc
iret
inc
aaa
xchg
xor
pop
cmpsl
inc
lret
cwtl
mov
mov
inc
jbe
in
mov
rolb
sbb
daa
pop
mov
jno
data16
cli
add
sbb
push
or
sub
imul
ds
lret
clc
cld
es
aas
adc
mov
sub
lcall
push
cmp
lods
mov
jnp
pop
cmp
jecxz
das
adc
dec
rcl
inc
fcoms
mov
aam
xchg
adc
lds
jle
mov
loope
push
testb
xor
aaa
mov
mull
inc
in
dec
cmp
test
jmp
push
es
arpl
mov
bound
fiadds
or
ret
repnz
out
add
inc
and
or
pop
in
sbb
lea
movsl
add
cltd
pop
sub
sbb
in
adc
and
mov
xor
jp
cmp
scas
adc
sbb
xor
rclb
cmp
mov
jge
pusha
adc
jg
les
das
aad
ss
xchg
loope
in
enter
jl
xor
cmpsl
inc
or
test
out
data16
adc
push
xchg
mov
jo
xchg
mov
push
idivl
out
fmuls
xor
dec
push
call
mov
xor
push
in
mov
gs
test
outsb
ss
fdiv
dec
pinsrw
or
cld
leave
insb
movsl
popf
mov
popf
scas
and
sub
mov
pusha
mov
lods
sub
fsub
mov
iret
les
shld
add
jg
repz
xor
stos
xchg
xor
add
movl
shll
mov
sub
mov
mov
lock
inc
dec
jmp
ja
aas
jbe
lret
lcall
xchg
insl
or
aam
aam
mov
bound
aaa
push
and
gs
imul
jne
divl
sub
pop
shrb
pop
xor
scas
mulb
and
nop
or
out
jg
insl
xchg
xor
lock
sar
fcomip
dec
jge
mov
outsl
cltd
cmpsb
stc
jge,pn
mov
orb
movsb
xchg
stos
out
xchg
popf
mov
mov
sub
cld
xor
dec
dec
mov
pop
cmp
mov
imul
lock
jp
and
or
mov
mov
push
aaa
xchg
push
jp
pop
push
jns
pop
sbb
shl
ja
leave
mov
std
movsl
aam
xchg
aad
std
adc
cmp
cmp
adc
or
fmull
push
adc
jnp
rdmsr
pusha
test
mov
fs
pop
mov
jno
lods
loopne
lds
jg
rorl
imul
pop
jnp
or
pop
xor
inc
xor
orb
ret
les
cld
lret
mov
cmp
cmp
push
stos
mov
lahf
jmp
rcll
int3
idivl
les
stos
cli
enter
lods
xor
push
ja
insb
outsl
decl
ret
cmp
movsb
lahf
fldz
dec
nop
mov
in
adc
sub
mov
inc
out
mov
fisubrl
push
nop
adc
xor
ljmp
es
or
pop
cld
push
mov
fwait
pushf
push
jno
adc
cltd
push
icebp
xor
lock
ds
inc
shlb
mov
and
pop
movsl
push
popa
xchg
movsl
int3
mov
dec
int
test
dec
add
mov
je
stos
mov
sbb
pop
jecxz
inc
shll
lret
mov
xchg
andl
inc
xor
addr16
iretw
xchg
or
sub
xlat
and
mov
jb
mov
nop
int
sub
push
sti
mov
or
in
xor
out
sub
sar
mov
repnz
mov
pop
xlat
mov
lods
repz
imul
xchg
pusha
sbb
cmpsb
push
and
sub
movsb
data16
sbb
mov
cmp
std
aam
negb
mov
ss
add
mov
pop
mov
or
je
cltd
jne
call
je
leave
dec
test
xlat
cwtl
aaa
fildll
fucomi
pop
mov
sbb
mov
add
mull
inc
cmp
inc
out
into
cmp
inc
ljmp
jg
test
mov
lahf
inc
int
or
and
mov
xor
xor
sub
dec
mov
adc
sub
mov
add
ljmp
test
test
insb
push
cmp
enter
xor
rorl
mov
mov
shrb
jecxz
icebp
jge
sbb
add
inc
out
lods
addl
out
sarb
cmp
in
mov
push
sbb
push
dec
mov
lret
jecxz
dec
stc
sbb
push
sahf
push
jge
xor
test
pop
cmp
sbb
daa
pop
cli
in
adc
imul
xchg
push
sub
sbb
jns
pusha
loope
pop
sub
jbe
jl
aad
push
pushf
test
aam
pop
mov
sbb
insl
outsb
in
cld
lds
out
mov
and
xchg
mov
ljmp
pop
dec
rcrb
dec
sub
adc
push
stos
or
dec
mov
loop
scas
mov
into
sbb
imulb
lds
enter
pop
imul
mov
out
divb
push
add
adc
mov
jo
fsubrp
sub
add
pop
add
ljmp
pusha
or
movsl
xor
pop
push
push
arpl
cmp
or
sahf
out
in
stos
call
aas
rcll
adc
sbb
loop
mov
xlat
mov
push
pop
push
orb
dec
or
pop
jno
fidivrs
out
or
pushf
mov
ret
push
je
jle
sarl
call
es
in
ljmp
cmpsb
pop
ja
inc
std
cwtl
rcll
aam
adc
mov
jecxz
inc
dec
xchg
loope
es
add
xchg
in
frstpm(287
popf
ret
mov
mov
in
mov
inc
inc
insl
mov
sub
out
cmp
dec
fldl
xor
jle
in
mov
sbb
sbb
sub
lea
sub
in
dec
imul
je
mov
push
dec
sbb
test
dec
mov
mov
push
cmp
in
js
xor
mov
sarb
inc
nop
jns
in
mov
inc
jge
xchg
cld
or
xchg
int3
cs
dec
mov
clc
add
jbe
out
inc
xor
jl
or
lock
sti
mov
xlat
mov
inc
movsb
hlt
jno
mov
lods
pop
lcall
sbb
jne
and
cmp
xor
jb
test
imul
adc
or
sub
fwait
or
out
test
int
sub
movsl
pop
pop
rcl
rcrb
or
sarb
aad
jecxz
lret
andl
mov
push
sbb
sarb
pusha
ja
sbb
mov
int3
push
pop
mov
int3
loop
loop
test
mov
xchg
jb
add
cs
add
push
dec
loopne
negb
mov
ficompl
das
and
dec
inc
int3
cmc
loope
inc
adc
cmpl
add
adc
jle
jno
adc
xchg
mov
sarl
sarb
push
arpl
sub
xor
movsb
scas
fisttps
fbld
jmp
scas
xor
push
int3
fisubl
dec
aam
and
es
xchg
test
xlat
inc
js
lds
add
mov
xor
aam
pop
mov
adc
cmp
dec
mov
cmp
cli
inc
faddl
fisttpl
das
and
out
popf
dec
stos
sarl
dec
aad
xorb
insl
lahf
xlat
jecxz
fsub
shrl
test
jo
aad
xor
cmpsl
lods
xorl
fldt
arpl
repz
adc
mov
or
sbb
push
jae
mov
imul
loopne
enter
fsubs
cltd
jne
xor
jae
pop
iret
repz
cmp
sub
out
or
mov
fldcw
jge
ljmp
xor
sub
push
pop
mov
pop
xchg
xor
sbb
adc
mov
cmp
movsl
imul
in
mov
pop
mov
imul
adc
jnp
sub
mov
pop
inc
lods
push
inc
gs
les
push
adc
jl
test
add
aam
or
in
sbb
xchg
dec
adc
adc
xchg
and
push
jp
jno
gs
enter
scas
push
es
hlt
ds
push
fcoms
jle
xlat
cmp
lcall
clc
rcll
mov
push
push
decb
mov
rclb
or
cmp
dec
iret
xlat
call
shl
lods
dec
lds
jge
arpl
mov
sub
xchg
inc
xchg
test
lahf
out
mov
js
imul
shll
or
cwtl
adc
in
out
jp
out
ret
push
cmp
cld
imul
jb
xor
ds
pop
out
icebp
dec
xor
sbb
mov
dec
dec
out
adc
jge
add
iret
orb
jbe
outsl
popf
lods
jnp
add
sub
andl
jle
popf
jne
enter
flds
mov
into
mov
or
pop
adc
xchg
test
cmp
jae
inc
add
jp
adc
nop
xor
adc
iret
out
pop
xor
xor
mov
loop
xor
xchg
adc
fsts
jle
jg
lcall
movsb
and
and
hlt
popa
scas
dec
add
call
mov
dec
icebp
sbb
inc
scas
mov
ss
sti
push
jmp
pusha
xor
adc
mov
add
test
ja
test
jp
cmp
xchg
cmc
clc
cmp
enter
push
lds
jge
push
les
cmp
push
sbb
push
aas
lcall
repnz
sub
push
add
sbb
add
adc
test
cmp
inc
test
int3
pop
push
std
or
push
dec
ds
mov
pushf
mov
das
stc
xor
mov
xor
fisttpl
aad
inc
mov
xor
or
aam
inc
ret
imul
xor
lea
gs
mov
push
inc
ret
rolb
loope
enter
dec
jne
or
in
mov
jno
iret
add
push
or
push
pop
out
stos
mov
jnp
mov
cs
cmp
sti
pop
sbb
adc
orb
ret
vprotd
outsb
add
dec
rcrb
mov
js
mov
jmp
in
arpl
jp
xor
xor
rcll
cmpsb
int
add
scas
xor
inc
mov
addr16
and
jmp
cltd
in
scas
in
sbb
push
and
or
sub
fisubl
scas
dec
mov
jns
pop
aas
xor
je
enter
notl
in
mov
add
add
idiv
in
and
push
push
sarb
mov
lock
xchg
push
arpl
dec
gs
push
rcrb
loopne
les
sbb
xchg
lods
aad
mov
dec
fs
adc
xor
pop
inc
jne
dec
scas
mov
loop
sbb
cmp
fs
fcmove
icebp
jge
mov
sahf
mov
in
jecxz
cmp
imul
xchg
adc
std
mov
roll
fdivs
fdivr
and
out
add
add
sahf
mov
imul
ret
test
fwait
xor
jb
rolb
and
ljmp
in
or
stos
data16
sub
stc
xchg
jg
sbb
mov
add
sarb
sbb
xchg
mov
adcl
push
pop
lock
inc
jge
sbb
lcall
lcall
das
cli
mov
sub
mov
pop
and
je
out
pop
cwtl
mov
rclb
xchg
push
loope
xchg
mov
jmp
addr16
adc
popf
and
into
fwait
jg
jmp
fbstp
xchg
cmpl
pop
imul
outsl
or
adcl
mov
mov
mov
sbb
adc
adc
and
jle
xor
and
jbe
shr
les
test
in
mov
mov
cmpsl
jae
adc
loop
adc
cmpb
cmc
mov
dec
subl
lahf
movsb
or
xchg
in
rol
cmpsl
cmc
ficoml
es
das
jne
fwait
mov
mov
and
lock
test
sbb
mov
or
jg
out
shll
enter
and
daa
inc
les
xor
mov
addr16
xchg
mov
jg
xchg
cmp
mov
repnz
stc
pop
stos
call
mov
mov
jnp
cmp
sbb
pop
sbb
test
fsubrl
pushw
add
and
sbb
push
sbb
push
loopne
insl
sbb
ret
xchg
stos
pop
jbe
mov
loope
jbe
mov
xchg
mov
cmpsb
aam
xchg
or
popa
add
imul
inc
and
xchg
scas
fsubr
ret
mov
or
out
push
jle
mov
mov
aas
ss
xchg
adc
and
mov
pop
pop
nop
adc
roll
gs
jo
ret
jecxz
and
mov
push
mov
mov
mov
lds
xchg
pop
je
imul
inc
bound
ret
pushf
inc
cmc
rcll
jge
mov
push
popf
ret
mov
xor
mov
aas
push
cmpb
shlb
insl
aad
xchg
push
add
adc
and
pusha
xchg
emms
sbb
dec
and
push
sub
add
jecxz
sbbl
and
push
xchg
aas
cmp
imul
sbb
pop
ficomps
rcll
sub
push
in
ret
rolb
repz
notl
lods
xor
push
inc
push
push
fists
cwtl
mov
push
fnstenv
jl
aas
dec
lods
aam
adc
adc
inc
into
out
or
xor
shlb
or
shlb
dec
jmp
cmp
stos
cmp
mov
jp
cmpb
cld
pop
and
cmpsb
lds
ljmp
ds
xor
xchg
pop
inc
cmc
fcoms
scas
in
jns
and
lods
dec
out
push
stc
out
push
test
adc
pusha
insb
int
je
add
movsb
or
shl
push
test
sarl
dec
clc
ret
test
dec
sub
cltd
scas
jbe
scas
xor
int3
sbb
ror
pop
sbb
xor
mov
lcall
inc
loope
mov
jo
and
inc
push
xor
dec
insb
jl
sub
xor
gs
std
out
mov
push
mov
xor
sub
pop
fisubrl
arpl
std
addr16
sub
mull
xor
pop
push
stc
add
dec
dec
gs
leave
rcrl
jne
cmpl
mov
call
inc
pop
fucompp
and
pop
sub
xor
mov
mov
push
push
xchg
and
mov
cltd
idivb
xlat
mov
mov
inc
stc
fists
mov
jne
jp
mov
jbe
pop
pop
mov
loop
mov
xchg
ljmp
movsb
icebp
out
mov
xor
leave
jo
sub
test
mov
js
inc
pop
xor
fdivs
rcrb
mov
stos
inc
into
test
outsl
cld
adc
xchg
shlb
data16
mov
out
inc
fistpll
cltd
sarb
xor
xchg
data16
ja
data16
in
jae
aad
shll
sbb
std
mov
fdivs
arpl
lods
lret
in
add
sub
inc
call
lret
sub
adc
and
cs
xchg
sbb
mov
inc
daa
dec
aam
inc
jle
insb
mov
sub
fsubr
cmpsb
hlt
std
sar
mov
sti
push
int3
daa
aad
pop
rol
nop
inc
aas
cmc
dec
sub
fdivrl
and
sbb
roll
adc
cwtl
mov
int3
inc
xchg
and
mov
xchg
xchg
int
inc
test
mov
mov
lods
in
pusha
xchg
icebp
xchg
cli
movsb
dec
jb
sub
sbb
not
mov
inc
xor
bound
out
xchg
push
call
inc
push
mov
dec
sti
fldl
jge
mov
sbb
sbb
sub
repnz
movsl
sub
push
cmpsb
dec
inc
xchg
test
lahf
xor
scas
test
sti
jns
push
sahf
jbe
cltd
cltd
cmpsl
fs
cmpl
fidivl
popa
subb
imul
adc
fwait
jmp
cwtl
ret
xchg
clc
aas
xchg
sub
out
sub
pop
adc
xor
dec
cmp
pop
cltd
dec
cmp
inc
aad
jg
cmp
push
rcll
aam
push
into
out
test
test
sti
dec
cwtl
loop
mov
inc
inc
sub
sbb
jecxz
jmp
mov
mov
pop
and
mov
sub
mov
popa
push
fisttpll
int3
addb
lcall
out
adc
setno
sub
imul
or
rorl
call
xchg
dec
ret
mov
adc
dec
lret
cmp
mov
adc
sub
aam
push
push
movups
mov
js
push
movsl
inc
imul
cmc
rcrb
ffreep
dec
repnz
jle
outsb
mov
addr16
bound
cli
sub
sub
dec
and
out
sub
jbe
push
xor
cmc
fwait
int3
push
xchg
js
arpl
ljmp
repnz
dec
ret
mov
ret
mov
inc
jmp
cmpsl
mov
or
out
sahf
or
mov
mov
and
movsb
dec
mov
add
xchg
sub
or
popa
cld
in
mov
push
cmpsl
sub
lret
popf
dec
push
nop
aas
movsl
sub
in
fcompl
sub
addb
mov
adcl
pop
mov
int3
xchg
fstps
mov
loopne
fs
pop
bound
adc
clc
jno
call
adc
in
cli
pop
and
push
adc
stos
pushl
shl
jge
push
or
add
pop
cmc
insl
cmpsl
pop
ret
in
xchg
out
inc
leave
in
xchg
dec
adc
lock
lret
push
sti
and
sarb
lahf
cmp
and
mov
mov
mov
cmpsl
loope
xchg
mov
popa
rolb
mov
scas
call
lds
nop
pop
xor
sbb
pop
gs
mov
adc
inc
jge
or
mov
dec
test
push
arpl
mov
or
mov
out
sbb
out
ja
or
clc
lcallw
mov
pop
jns
push
fstps
pop
fcomip
into
jmp
xor
sbb
sub
aas
sub
or
insb
ja
std
or
add
sub
mov
mov
sbb
in
mov
dec
out
orb
mov
and
fiaddl
jne
xchg
sub
mov
mov
mov
cmp
mov
pop
xor
pop
sub
hlt
fwait
add
idiv
sbb
cld
adc
and
test
test
test
xor
dec
loopne
jb
sub
xchg
fsubrp
int3
fbstp
mov
mov
mov
lock
mov
pop
mov
xor
cmc
arpl
xchg
sti
sbbb
pushf
or
jg
addr16
movsl
clc
subb
add
mov
mov
dec
das
cmc
icebp
xorl
pusha
inc
mov
mov
and
jb
leave
les
xchg
cmp
dec
lahf
loope
enter
outsl
movsb
inc
insb
adc
clc
or
lock
cmpl
or
pop
sti
jae
xor
daa
jg
pop
ret
mov
mov
pop
ss
aad
dec
aaa
sbb
inc
mov
cwtl
aam
xchg
xor
int
stos
pop
out
push
fistl
jg
push
in
adc
push
int3
xchg
push
jo
stos
jno
arpl
loopne
ror
bound
fcompl
sbb
xchg
push
cwtl
adc
jle
cmpsb
jl
pushf
sbb
jle
pop
cmp
into
sub
pop
pop
xor
inc
loope
icebp
cmp
sbb
add
xchg
lea
fstps
or
fisttpl
pop
sbb
mov
int
leave
sub
fidivrs
adcb
fdivs
fdivl
mov
roll
jle
inc
add
pop
pusha
jbe
stos
sub
jo
fisttpl
bndldx
aaa
jmp
lret
data16
adc
pop
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
jmp
cmpsl
fisubrs
jbe
jbe
outsb
xchg
call
orb
jnp
pushf
jnp
xchg
stc
mov
or
mov
addl
pop
cwtl
dec
cmp
sbb
sbbb
cmp
inc
aad
lret
pop
jge
xchg
adc
adc
adc
mov
ljmp
xchg
loop
dec
adc
pop
fstps
jge
mov
jl
xchg
xchg
or
adc
hlt
xchg
push
adc
mov
inc
cmp
cmp
testl
adc
test
adc
scas
inc
lods
and
mov
adc
aad
mov
xchg
inc
stos
fistl
push
add
ljmp
push
lock
mov
lea
sbb
lahf
ljmp
xorl
insb
es
cs
adc
clc
push
aas
xchg
sbb
stos
inc
test
imul
cmp
cmpl
test
add
mov
sub
jns
pop
jge
cs
cvtps2pd
adc
dec
push
dec
aam
jo
pop
mov
xor
mov
xchg
inc
or
jg
cmp
idivb
or
pop
mov
test
in
mov
pop
xchg
xchg
cmpsl
ljmp
push
rcl
sub
test
pusha
jne
shll
dec
imul
into
sti
jmp
sbb
bound
scas
jle
rorb
add
jge
mov
xorb
add
or
aam
ret
inc
gs
pop
pop
enter
jecxz
jae
or
cmp
pusha
sbb
xor
ss
dec
and
cmp
movsl
faddl
nop
loop
cltd
and
lods
out
mov
cwtl
enter
enter
xor
and
push
nop
inc
xchg
call
xor
pop
xchg
add
push
cmpsb
cmp
fwait
mov
adc
xchg
das
aam
and
sub
push
dec
xchg
lret
mov
lret
jge
imul
xchg
daa
jmp
jb
sub
fwait
push
test
ja
lods
movsl
decl
imul
cmp
mov
int
jae
popa
shll
fistpl
fisttpll
mov
and
pop
mov
fisttps
mov
cmp
sti
jmp
add
sarl
lock
mov
ss
jnp,pn
in
or
sub
out
lock
fcoml
lds
sahf
mov
mov
xchg
sub
js
hlt
imul
cmpsb
ljmp
dec
mov
adc
mov
mov
out
xchg
and
out
push
enter
inc
shll
ret
rolb
lods
or
xchg
and
ds
repnz
jecxz
push
push
pop
hlt
inc
pusha
push
or
inc
pop
je
div
pop
loopne
lods
pop
lret
stc
lret
mov
sahf
add
test
xor
xor
arpl
pop
fucom
adc
int3
xchg
test
pop
rolb
lds
popf
dec
jle
pop
clc
negb
xchg
cmp
loopne
xchg
adc
scas
inc
sbb
cmpb
test
cmpl
jnp
leave
sarb
repnz
mov
out
adc
scas
hlt
leave
hlt
imul
mov
xor
loopne
jecxz
ljmp
lcall
sbb
imul
pop
xor
cmp
cmp
push
mov
and
push
pop
ret
divb
dec
sbb
add
lock
hlt
jle
stc
push
inc
adc
jne
mov
sbb
jl
sarb
inc
lcall
sub
in
aaa
mov
shlb
fcomi
mov
dec
mov
push
int3
cwtl
in
mov
jns
jecxz
data16
aas
jp
clc
mov
push
jp
sarl
cld
jmp
mov
out
nop
pop
push
dec
dec
les
adc
mov
or
cmp
cmp
adc
loope
cmp
inc
mov
or
xlat
xor
add
lret
stos
clc
mov
aas
mov
idiv
sub
mov
dec
cs
int3
cmc
imul
xor
cli
stc
push
popf
xchg
fst
mov
add
mov
sbb
and
stc
mov
and
adc
mov
inc
cmpsb
pop
mov
imul
bound
enter
xor
nop
fwait
sar
jne
or
les
mov
xor
mov
pop
or
cltd
std
loopne
push
aam
xor
std
mov
int3
jmp
out
and
add
mov
lods
sbbl
adc
out
pushf
pop
stos
scas
iret
dec
xor
iret
mov
outsl
adc
add
aaa
sub
cmp
mov
push
lcall
fldt
cmpsb
jnp
into
and
mov
adc
adc
push
scas
mov
push
int3
inc
loopne
out
cmp
push
lea
rcll
jo
adc
and
sub
cmp
in
adc
and
mov
fsub
cmp
movsl
stos
add
pusha
jp
rorl
lods
lods
jl
cs
pushf
sbb
fists
mov
sbb
rcr
call
addr16
mov
add
or
in
mov
xlat
pop
cmp
push
faddl
xchg
mov
mov
lret
test
mov
adc
mov
ja
inc
movsl
xor
out
in
fdivr
insb
jb
hlt
nop
jge
adc
in
test
pmullw
and
mov
mov
cmp
pop
int3
xor
mov
jle
inc
les
mov
inc
movsl
cmp
imul
test
jbe
mov
insb
adc
sarb
xor
xor
daa
adc
fwait
imul
and
js
aas
mov
inc
push
lcall
push
push
in
pop
cs
fidivl
mov
or
out
xor
call
xorb
icebp
and
cmp
jnp
mov
in
inc
jmp
mov
push
loop
sbb
sbb
inc
add
insl
rep
pop
lret
add
arpl
xchg
decb
xor
pop
xor
sub
popa
gs
pop
movsl
jns
in
sbb
lahf
mov
cld
shr
daa
ljmp
mov
dec
xchg
cmp
pop
outsb
dec
arpl
dec
scas
lods
mov
cmp
mov
xlat
jb
inc
out
and
imul
cmp
js,pt
nop
fidivrs
mov
fmull
or
scas
sub
je
mov
out
fildll
xchg
mov
xchg
sub
test
ss
pushf
into
add
push
add
stos
cwtl
fwait
out
xchg
cmp
dec
in
ja
loope
addb
ret
sub
cmp
ja
mov
iret
xchg
cmc
data16
aad
hlt
jl
gs
dec
push
cmp
outsl
or
out
call
cld
xchg
test
xchg
out
inc
dec
addb
push
les
imul
add
movsl
mov
mov
hlt
nop
inc
add
scas
inc
xlat
out
ja
bound
aad
cmp
jge
stos
shlb
push
xchg
dec
movsb
xchg
jl
sub
sbb
xchg
pushf
out
fiadds
pop
inc
and
inc
dec
mov
rol
dec
pop
mov
fistpl
mov
in
mov
jg
mov
test
pop
inc
je,pn
shll
cmp
jle
push
sar
outsb
aas
popa
or
shll
pop
lahf
clc
clc
ficomps
addr16
imul
ficoms
pop
aas
add
jge
mov
mov
aad
in
sahf
ja
jns
pop
icebp
leave
testb
adc
xchg
es
enter
adc
nop
stos
xor
adc
inc
mov
outsl
mov
in
and
ret
xchg
fs
push
mov
stc
xor
push
mov
mov
aaa
enterw
fmull
imul
pop
pop
rcrb
ljmp
cld
fdivrs
outsb
xchg
jb
mov
xchg
add
addr16
inc
cmp
iret
popa
cmpsl
push
aad
and
sar
xchg
fstl
inc
inc
fldl2t
add
inc
push
cmp
stc
loop
or
fistps
cwtl
push
cmp
lock
pop
mov
jae
popa
sbb
mov
ljmp
push
or
hlt
inc
xlat
fld
int3
fdivrs
in
daa
fsubs
sbbb
mov
cmp
enter
stc
mov
xchg
clc
dec
jl
lret
cld
sub
inc
jle
dec
fsubrp
ja
movsl
int
or
sti
and
lret
aas
or
pop
shl
xor
ja
inc
pop
out
adc
lods
mov
mov
hlt
fcom
cmp
mov
or
pop
pop
mov
pop
js
xchg
cltd
xchg
jp
daa
jbe
sub
fwait
dec
jno
or
xchg
cs
fstps
test
rorl
mov
mov
aas
js
cwtl
xchg
cltd
ffreep
std
test
test
pushf
mov
stos
push
adc
jo
push
push
sbb
push
add
cmp
jnp
aad
sub
sbb
bound
mov
loop
jbe
ss
jae
sub
adc
sti
daa
sub
xor
jno
sbb
ss
mov
sbb
adc
dec
sub
data16
and
xchg
or
or
fsubr
mov
gs
adc
rcll
xor
push
xor
dec
dec
adc
rcl
add
in
jge
dec
test
cltd
cmc
bound
xchg
hlt
mov
dec
popf
push
mov
lret
mov
rorb
cmp
ret
ret
mov
adc
sub
lret
lahf
jae
cmpsl
cmp
js
sbb
push
addr16
std
pop
repnz
mov
xor
testl
adc
iret
gs
xchg
out
cmc
std
push
scas
fs
shll
jne
stos
add
in
or
pop
mov
cmp
xchg
das
popa
and
adcb
sub
repnz
xor
addr16
lret
xor
dec
dec
mov
out
in
test
mov
pop
cltd
inc
sub
les
inc
nop
int3
testl
enter
test
sub
push
jmp
fcoms
test
xlat
push
add
add
cli
adc
mov
and
insb
leave
sub
clc
mov
rorl
push
sub
xor
sub
push
jmp
sbb
mov
mov
out
mov
xchg
sub
adc
into
in
sbb
mov
jle
mov
gs
aad
popf
clc
adc
in
test
dec
imul
insl
fcmovnu
jae
out
inc
lcall
nopl
pop
jb
in
mov
add
mov
push
test
sti
dec
out
push
inc
sbb
xor
mov
pop
fdivrs
popa
sub
clc
dec
cmp
es
jge
rcll
jmp
movsl
mov
pop
jb
pop
cmp
sub
call
xor
out
iret
push
int3
sub
mov
mov
xchg
in
adc
push
ja
push
add
sar
inc
jnp
mov
mov
inc
pop
fisubs
mov
arpl
and
aas
push
cwtl
mov
xor
call
adc
mov
stos
mov
add
stos
cmp
sub
cmp
fstpt
lret
cmp
aam
cwtl
mov
sub
fnstcw
test
sub
jp
mov
lock
xchg
jb
stos
add
jne
pop
lcall
inc
imul
mov
rorb
loop
mov
or
loop
sbbb
icebp
popa
lret
sub
aam
sub
inc
test
adc
cwtl
push
cmpsb
ret
ljmp
push
icebp
jmp
adc
aas
sub
inc
xor
mov
data16
mov
sbb
jae
adc
and
dec
sub
js
xchg
div
dec
leave
xlat
test
fst
dec
mov
jp
and
sbb
dec
sub
push
scas
jb
leave
pop
cltd
mov
jb
aam
bnd
mov
cmp
add
sub
jge
aaa
outsb
pop
imul
mov
sub
aas
inc
adc
stos
add
add
and
mov
lods
test
gs
adc
loopne
add
fs
jnp
add
sub
push
or
sbb
and
pop
mov
inc
pop
lock
push
int3
movsb
lock
mov
popf
aas
push
add
mov
adc
xor
loop
iret
mov
cli
leave
dec
int3
or
ljmp
fsubs
repz
movsb
mov
imul
jbe
push
sub
dec
icebp
and
mov
out
in
sbb
pop
jno
or
jecxz
hlt
mov
rcl
and
mov
adc
icebp
testl
sti
adc
jecxz
ror
fidivrl
testb
push
xlat
xchg
cmp
adc
mov
loop
lods
jle
popf
sub
cmp
mov
fstl
loop
das
cwtl
mov
lods
popf
fs
in
aad
cmp
mov
pop
inc
push
ljmp
call
jbe
es
sub
dec
int3
xor
test
push
frstor
fwait
daa
es
or
adcb
push
hlt
mov
inc
cmp
mov
xchg
cmp
inc
repnz
mov
popf
enter
or
sub
outsb
arpl
or
mov
cs
fldl
flds
sub
js
in
push
xor
push
push
sbb
add
add
dec
and
pop
inc
fisubrl
mov
stos
inc
popf
and
into
sub
lods
add
push
inc
or
xor
in
arpl
mov
mov
mov
jge
dec
xchg
inc
add
push
or
in
add
test
push
mov
fdivp
and
push
mov
mov
hlt
xchg
mov
push
dec
dec
scas
rorl
in
aas
push
pop
mov
in
ret
js
sbb
popa
je
mov
std
or
data16
icebp
jle
sub
xor
aaa
and
out
cmp
lret
in
inc
in
addr16
fstl
push
jae
sbb
mov
fwait
out
xchg
jbe
and
cmp
xor
test
sahf
fwait
in
mov
sub
clc
repnz
scas
pushf
call
pop
sub
dec
rorl
push
sbb
popa
fucom
ffreep
mov
jecxz
jg
mov
adc
icebp
push
mov
pusha
dec
int3
sbb
mov
je
dec
jge
rorl
int
jae
stc
sub
mov
in
sbb
push
negl
outsb
jge
jo
inc
rcr
rolb
push
jl
sti
add
jmp
sahf
mov
mov
xchg
adc
xchg
mov
jb
scas
xor
pop
mov
in
sub
or
adc
cmpl
orl
pop
mov
cmc
push
push
inc
cwtl
push
cltd
ss
push
insb
movsb
fsts
adc
jmp
xor
lods
mov
aaa
sbb
outsb
xchg
mov
dec
scas
mov
nop
jns
enter
je
or
dec
add
scas
insl
ds
mov
mov
rcl
enter
jecxz
cmpsl
xor
lret
jge
pushf
rcll
mov
push
rcr
arpl
test
push
insb
loope
fcomps
push
mov
je
jb
fdivs
and
popa
mov
outsb
add
lret
lods
xchg
stc
icebp
dec
adcb
es
je,pn
pop
mov
cld
xor
mov
fnstcw
or
fsubr
dec
jp
dec
fisubrl
push
gs
sbb
test
pop
insl
cwtl
dec
sarl
aam
push
or
sbb
xchg
sbb
clc
fstps
dec
add
loopne
pop
mov
xchg
gs
inc
lods
inc
mov
and
fincstp
sub
test
sub
mov
jecxz
movsl
in
push
fisubs
scas
pop
divb
cmp
cmpl
cs
inc
mov
sub
fdiv
sti
ljmp
fwait
mov
popa
stc
and
rol
pop
or
insl
jmp
test
pop
in
jne
pop
mov
insl
cmp
sarb
mov
lret
cmp
pop
sub
arpl
cld
xor
mov
ljmp
lods
push
scas
ljmp
jne
inc
icebp
inc
cmpsb
lcall
jns
cwtl
pop
aad
clc
adc
les
add
sub
lea
idivb
push
mov
adc
pop
stos
mov
outsb
mov
and
pop
dec
lea
pushf
rolb
andl
xchg
loop
test
and
out
xchg
inc
ret
xor
rcll
fs
sbb
in
inc
outsb
mov
add
sub
jl
icebp
lock
xlat
xchg
negb
pop
xchg
pop
lods
xchg
outsl
fisttpl
shlb
in
xchg
outsb
jne
es
cmp
arpl
sbb
push
cmp
pushl
les
xchg
jb
int3
xchg
mov
mov
mov
out
out
shr
xchg
jbe
pop
xchg
jecxz
sub
sbb
add
call
add
hlt
cmp
pop
pop
jmp
xor
out
lock
das
pop
add
mov
sbb
sub
xchg
dec
xor
jae
adc
std
mov
pop
cmp
xchg
fwait
mov
sbb
aam
xchg
or
inc
out
std
mov
xor
scas
push
enter
or
inc
cmp
ss
orb
sbb
xchg
and
adc
scas
xchg
push
mov
xor
addr16
push
push
cmp
add
repz
bound
shlb
into
in
outsl
lret
dec
arpl
sbb
jno
mov
pop
xor
movsb
rorb
repz
test
cwtl
hlt
xchg
lds
xchg
adc
data16
sbbb
mov
pushf
pop
fldcw
push
xchg
push
sbb
jns
jnp
aas
xchg
push
into
jmp
jecxz
faddl
fs
xor
push
jnp
es
mov
xchg
outsl
add
data16
movsb
je
test
cwtl
scas
das
ja
push
push
subl
adc
mov
sbb
xor
les
jno
pop
mov
add
mov
jne
cmp
xchg
mov
xor
adc
das
sub
jle
mov
stc
sub
test
popa
pop
addb
outsl
pop
jle
inc
push
cs
rcrl
mov
aad
stos
and
insb
jns
scas
mov
pop
cmp
inc
not
lds
cmp
adc
cmp
subb
sub
movsl
rol
fcom
popf
sbb
sar
mov
mov
data16
lods
dec
push
pop
mov
jb
and
jp
jmp
xor
es
scas
loop
jnp
sbb
mov
fnsave
cmp
and
js
adc
fists
sarb
fld
mov
cld
xchg
or
mov
push
inc
xorb
sahf
test
aam
jne
repz
enter
push
hlt
jecxz
lds
fisubs
fs
push
pop
js
sub
xrelease
push
aam
jecxz
outsb
adc
jge
mov
loop
les
sub
adc
daa
movsl
mov
jge
cli
add
fisubrs
fisubrs
out
mov
push
sub
adc
adc
lret
orl
jbe
loopne
fwait
gs
icebp
adc
mov
popa
lock
inc
push
mov
mov
pop
cmp
icebp
and
adc
fnstcw
add
aad
fs
sub
sub
add
dec
ret
sub
or
fstl
push
mov
dec
push
ds
jbe
out
mov
int
aaa
xchg
and
cmpsb
push
movsl
stos
push
int
inc
fiaddl
pop
sbb
js
lods
pop
scas
rcl
lods
cld
and
mov
mov
cmp
mov
fucomi
add
adc
loopne
aad
dec
sub
sbb
inc
filds
pop
xchg
stc
test
pop
pop
inc
mov
rolb
lock
js
mov
rorb
imul
mov
lds
cs
xor
and
jo
repz
fwait
aaa
imul
mov
popl
sbb
xlat
outsb
outsb
mov
fsubl
jmp
jae
push
flds
cmp
mov
xor
pop
mov
add
es
add
js
pusha
xchg
stos
icebp
stos
pop
xchg
rorl
xorb
js
cmp
fwait
inc
stos
icebp
jbe
pop
inc
fidivs
inc
in
testb
dec
idivl
mov
subb
andb
sub
or
icebp
fs
mov
test
cmp
dec
jmp
insb
push
sbb
lock
ja
xchg
int
in
lret
shll
fmull
cld
adc
pop
sbb
mov
stos
mov
int
add
das
sahf
loop
mulb
ret
lahf
in
xor
mov
jp
in
jo
dec
ja
inc
andl
cltd
sarl
shl
out
js
push
loop
ja
shlb
orb
pop
add
arpl
add
and
and
pop
dec
sbb
popf
out
mov
imul
xlat
jns
adc
xor
cmp
xchg
jns
int3
pop
outsb
sub
add
mov
test
test
js
sub
mov
xchg
or
push
xchg
or
jo
push
mov
xchg
xchg
popf
cmpsl
addb
xchg
ja
test
xlat
shrb
and
stos
ljmp
insb
jae
sbb
dec
inc
push
xchg
mov
addr16
mov
mov
inc
in
iret
sub
mov
add
fsts
popa
fdiv
mov
fists
das
test
pop
mov
test
mov
lret
out
inc
adc
sahf
int
mov
notb
int
jnp
inc
ret
and
aaa
pop
aaa
lcall
mov
pop
pusha
fistps
shlb
and
and
mov
ret
sarl
loop
mov
stos
repz
ret
insl
stos
push
ret
xchg
or
sbb
stc
add
or
mov
lds
mov
sbb
aas
ret
cmp
aad
push
cmpsl
mov
test
jno
int
adc
xchg
sbb
or
into
inc
icebp
les
jle
or
inc
test
daa
push
and
pop
popa
into
mov
mov
cwtl
pop
jno
pop
mov
mov
mov
sub
gs
ds
sub
aad
push
imul
pop
or
cmp
adc
dec
mov
outsl
mov
cmp
divb
gs
sbb
add
jecxz
shll
hlt
pop
mov
mov
ret
in
int
mov
mov
rcrl
inc
int3
xor
mov
adc
cwtl
lret
xchg
jge
insl
jnp
rclb
dec
sti
mov
bound
push
out
or
pusha
push
std
xor
push
jns
inc
movsl
mov
push
mov
fxtract
lods
cltd
iret
xchg
cmpsb
test
sahf
adcb
jmp
gs
popf
cmc
xor
fists
dec
test
push
cmpsb
les
pop
fisubrl
imulb
shlb
sbb
and
sbb
mov
pusha
popa
out
or
mov
xchg
adc
ljmp
jecxz
insl
xor
pop
cmp
test
shl
pusha
repz
clc
mov
aas
cltd
adc
adcl
pusha
pop
push
cmp
out
test
jne
fcmovne
loop
xchg
imul
mov
dec
lahf
ja
mov
gs
mov
and
in
pop
test
or
or
nop
cmp
leave
aam
out
idiv
sub
lock
adc
inc
xchg
push
adc
inc
jo
dec
adc
lds
mov
jp
fs
push
int3
and
mov
std
icebp
add
push
arpl
jmp
or
pop
xchg
fimull
cmp
sub
jg
divb
inc
dec
lcall
jns
outsl
inc
fwait
dec
insb
leave
mov
in
ljmp
repnz
pop
cwtl
xor
and
push
test
cmp
sbb
je
cmp
mov
inc
pop
les
push
pop
xor
jae
cmc
adc
dec
outsl
ss
fcoml
push
subb
testb
pop
sbbl
mov
mov
cmp
scas
pop
and
mov
ljmp
push
lea
xor
out
mov
fistl
adc
inc
orl
sub
push
sahf
push
mov
jns
push
outsb
ja
and
dec
pop
sub
nop
xorb
push
inc
inc
mov
call
inc
iret
pushf
mov
adc
movb
jns
add
inc
sti
or
dec
jnp
into
jns
jmp
add
je
jecxz
cmpsb
lret
into
mov
mov
loop
decb
xorl
sbbl
inc
mov
roll
pop
addl
inc
push
mov
or
jbe
aas
mov
mov
cmpsl
call
mov
cmc
push
ja
icebp
out
pop
inc
adc
or
int3
mov
test
insl
cmpsb
and
add
adc
leave
and
push
enter
movsb
ret
mov
jge
mov
mov
inc
or
arpl
cmp
fcmovne
xchg
movsl
mov
dec
add
ljmp
in
out
movsl
xchg
push
xchg
mov
ss
mov
mov
loop
lods
mov
xchg
mov
fnstsw
sbb
psrlw
add
in
aaa
dec
mov
test
out
in
stos
int3
pop
jne
or
imul
add
ret
std
out
in
cwtl
in
jp
shlb
loope
icebp
cmp
jne
add
xchg
push
mov
xlat
insl
dec
nop
jae
negl
adc
cmpb
mov
mov
mov
pop
rcl
sarb
cmp
sub
mov
xchg
push
jecxz
jo
into
xchg
and
in
div
sarb
push
imul
mov
subl
jne
dec
pusha
jne
ljmp
sbb
push
push
cmp
pop
pop
adc
negl
sbb
and
pop
sti
mov
pop
ss
loopne
xchg
inc
xchg
or
inc
hlt
insl
push
dec
mov
aaa
insb
mov
insb
mov
or
mov
inc
in
insl
sub
mov
sub
pandn
xchg
leave
push
popf
xchg
mov
movsb
cs
lahf
mov
cwtl
daa
out
sarl
mov
hlt
in
xchg
mov
pop
icebp
cltd
pop
jno
pop
lret
and
stc
leave
stc
in
pop
arpl
cwtl
pop
dec
xor
enter
add
clc
pop
dec
lods
xorb
cmpsb
push
out
fnstenv
cmp
mov
data16
loop
dec
inc
xor
xchg
jecxz
out
jo
popa
sbb
xor
xor
xor
add
adc
test
js
clc
jnp
fst
ja
daa
xchg
pushf
and
or
pop
ret
and
mov
rcrl
sbb
out
negl
arpl
cmp
dec
xchg
add
dec
or
xlat
adc
sbb
loope
pop
loopne
pop
inc
scas
pop
xchg
shll
xchg
jl
dec
ss
test
shrb
xorb
adc
aaa
pop
or
mov
pusha
mov
sub
notb
pop
or
mov
jmp
rol
sbb
sti
int3
test
clc
hlt
cmpsb
int3
push
sbb
fsubrs
popf
movsb
fdivs
jecxz
mov
mov
add
or
sbb
scas
jno
out
push
pop
out
mov
xchg
pusha
iret
xor
sub
sub
and
pop
lods
xor
push
jle
add
dec
pop
cmp
adc
stos
cmp
sbb
mov
xchg
dec
xor
inc
jns
pop
inc
outsl
in
xor
ljmp
int
icebp
outsl
lea
in
test
sahf
push
mov
jbe
jle
xlat
sbb
bound
lea
ret
adc
jl
mov
out
add
lods
pop
add
sub
push
mov
in
push
xchg
jbe
fs
cmp
mov
jl
sub
sahf
loopne
xchg
cltd
xor
fiadds
lret
ret
sbb
pop
andl
out
and
dec
ret
test
mov
pop
fstl
fisubs
cld
push
mov
sub
pop
inc
mov
sbb
clc
addr16
mov
xor
jae
push
adc
xchg
sbb
lods
fwait
lds
into
jmp
or
repnz
or
cmp
mov
lahf
shll
lods
cmp
mov
push
movsl
popa
mov
outsl
and
mov
ss
mov
dec
ss
and
int
imul
push
push
mov
cwtl
daa
jb
jl
pop
add
cmpsl
inc
mov
bound
sahf
dec
jbe
xchg
test
and
push
dec
adc
ss
outsl
dec
rolb
mov
add
mov
mov
sub
daa
outsb
push
cmp
cmc
stos
ret
das
inc
xchg
cmp
fstl
in
xchg
push
in
lcall
ds
cmp
rolb
inc
push
sub
xadd
lret
hlt
push
pop
adc
dec
cwtl
push
sbb
jno
aam
mov
cmp
jno
mov
out
sub
outsl
dec
mov
mov
popf
mov
and
fdivrs
das
out
add
inc
inc
rcrl
sbb
jnp
jns
addr16
push
repnz
cltd
mov
in
popa
dec
in
dec
pushf
jge
scas
lock
xchg
out
jg
out
xlat
pop
rclb
xor
fsub
sahf
sbb
stc
lea
or
bound
sub
arpl
out
int3
dec
test
mov
fldenv
cs
mov
jecxz
repnz
and
dec
rcrb
jge
jmp
cmpsb
bound
or
hlt
fbld
pop
cmp
pop
fbld
mov
scas
outsb
pop
aas
jp
cmp
lds
push
shll
sub
lret
test
mov
inc
sub
mov
inc
sbb
movl
pop
or
fucom
or
repnz
pop
inc
sbb
cmp
xor
andb
add
mov
test
dec
sbb
add
sub
push
shlb
pop
jge
push
adc
mov
rorl
dec
ret
or
cld
adc
add
popf
std
add
orb
jno
xchg
pusha
idivb
mov
movsb
rolb
fldl
pop
jle
js
xor
inc
dec
dec
adc
mov
cmp
inc
fcoml
imul
cmp
ret
aas
pop
sub
call
cmp
push
and
sub
mov
sub
imul
insb
jmp
scas
clc
and
in
dec
cmc
cmpsb
mov
fnstenv
cmp
enter
or
fisubrl
sti
lret
pusha
loop
mov
push
sbb
push
int3
dec
out
lahf
fdivrs
mov
test
je
movl
push
pop
push
sub
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
and
xor
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
orl
movl
movzbl
sub
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
mov
xor
jmp
mov
hlt
mov
ja
out
je
mov
lcall
jnp
test
and
pop
aaa
icebp
inc
and
sbb
loop
xor
popa
daa
mov
add
mov
test
adc
push
adc
cmp
inc
mov
addr16
cmp
ret
jbe
sbb
scas
aam
out
addr16
xchg
icebp
sub
mov
xorb
pop
std
push
jae
jmp
into
mov
dec
ljmp
ds
sub
js
test
and
mov
call
icebp
sub
iret
cmpsb
fcoms
test
shrb
leave
in
adc
xchg
lock
iret
cmpsl
js
mov
dec
and
push
ret
xor
mov
cmc
cmp
out
nop
push
add
cmc
and
sbb
into
sti
stos
adc
push
leave
arpl
xchg
inc
mov
ljmp
mov
mov
cld
pop
lea
sbbb
jge
jmp
ret
adc
ljmp
addr16
nop
mov
xchg
mov
push
mov
lret
jo
test
mov
xor
fidivl
pop
fbld
cmp
mov
rcrl
push
jge
pop
sti
daa
stos
sub
loope
push
mov
outsl
repz
cmp
mov
subb
inc
dec
lods
inc
pop
out
stos
das
push
loop
dec
cltd
pop
push
inc
rclb
sti
iret
pop
and
sbb
and
in
inc
negb
jp
lods
add
mov
movsb
add
mov
pop
icebp
mov
sti
sbb
or
inc
and
stc
iret
sub
lret
insb
jle
loope
push
sbb
cmc
mov
jb
cmp
es
iret
outsb
xchg
mov
cmp
dec
mov
pop
mov
imul
pop
pop
int3
sub
lcall
cmpsl
shll
les
jecxz
push
popa
aam
inc
xor
or
cmp
movsl
and
add
and
jns
xorb
jle
cli
outsb
jmp
mov
jns
scas
lcall
mov
or
and
lret
mov
es
test
mov
leave
mov
cmpb
in
cmp
and
test
ljmp
insl
test
or
es
aaa
sbb
in
mov
pop
xchg
outsb
insb
mov
jno
cmpsb
jmp
jp
fiaddl
cli
cwtl
jne
cmpsl
stos
les
fstpt
jl
lods
fsub
jge
mov
cli
xchg
notl
add
clc
dec
mov
and
std
jge
pop
jecxz
push
cmp
jne
push
push
lock
inc
lea
jo
adcb
jp
dec
mov
sub
sub
addb
sbb
test
mov
mov
inc
or
loopne
iret
push
push
xchg
sbb
push
dec
and
jle
pop
mov
cwtl
push
stos
adc
mov
bnd
fldt
mov
xor
stc
sti
ljmp
mov
pop
jb
jnp
insb
ret
loop
stc
dec
jno
mov
call
dec
addb
xlat
loopne
ljmp
jns
push
in
movsl
add
mov
js
pop
push
repnz
adc
aas
xor
jns
cmpsb
fucomp
jg
test
jmp
xor
pop
or
xor
fisubs
pop
mov
cmp
and
testb
shrl
loopne
mov
pop
cmp
mov
movhps
inc
test
in
pop
mov
adcb
les
pop
xchg
xchg
sarb
ds
pop
mov
xor
sti
or
ja
dec
sub
jbe
or
jle
gs
sub
push
jo
leave
xchg
xchg
mov
jo
sbb
popf
cmp
and
les
xchg
out
lea
add
inc
pop
stc
lea
icebp
cmp
cs
cltd
testb
pop
mov
mov
dec
es
lock
lret
enter
dec
rorl
inc
imul
push
in
ds
loop
std
call
mov
inc
jmp
sub
add
neg
addr16
cli
dec
mov
std
popf
add
sbb
stc
lock
lret
lret
cltd
add
jns
movsl
pop
arpl
insl
mov
aad
jecxz
out
xor
adc
call
ljmp
jmp
test
dec
fnstcw
aad
and
mov
mov
vmread
scas
push
adc
jne
fbstp
sub
xor
lock
sbb
ficoml
stc
add
add
push
cmp
test
mov
push
mov
push
adc
enter
jbe
mov
or
add
mov
pop
push
idiv
imul
adcl
lods
xchg
test
xchg
xor
lea
and
add
out
mov
invd
inc
shll
xchg
sbb
or
ljmp
shll
pop
sbb
je
xlat
mov
sub
adc
dec
ret
cmp
mov
dec
fisubs
ret
mov
into
pop
rorb
insb
or
lret
outsb
mov
xchg
js
jge
push
mov
xor
rorl
sbb
fcmovnb
xchg
dec
push
ljmp
dec
in
out
cmp
scas
addr16
lret
xlat
lret
sahf
xchg
out
ret
imul
bound
push
fwait
mov
mov
mov
fadd
gs
mov
out
sbbb
nop
and
adc
mov
mov
ja
int3
dec
cs
jp
mov
pop
add
comiss
or
or
or
inc
popa
add
xchg
es
stos
jae
fdivrl
xor
loop
fmull
dec
push
insl
mov
inc
into
lret
imul
mov
push
sbb
xchg
mov
jge
push
js
sub
mov
out
mov
rcl
push
inc
mov
es
jbe
adcb
xor
push
dec
and
cmp
shlb
icebp
shlb
mov
mov
sub
push
bound
unpckhps
cli
mov
aaa
inc
pop
push
sti
or
bound
repz
jp
jecxz
loopne
add
pop
roll
push
jo
fcompl
flds
cli
push
das
xchg
lock
fwait
pusha
xchg
test
inc
sub
jae
jns
sbb
add
insl
scas
push
repnz
and
leave
cmp
sbb
sahf
add
mov
pop
pop
or
rcrb
cltd
mov
popf
and
mov
dec
sub
in
inc
jecxz
sub
aad
fwait
cmp
sub
mov
sub
sub
push
sti
jmp
cmpsb
xor
dec
xchg
xor
jg
lds
pushf
mov
fnstsw
test
cltd
inc
mov
mov
push
mov
xchg
sbbl
sahf
xchg
xchg
push
shrb
dec
loope
pop
andb
or
icebp
cmp
loopne
in
cwtl
sub
push
pop
gs
es
cmp
push
jg
sub
jno
xor
push
stc
gs
sub
movsl
mov
or
outsb
add
mov
adc
xorl
das
cli
ret
xor
sub
xchg
fstpl
cmp
and
mov
in
mov
xchg
enter
inc
pop
das
sbb
mov
jmp
cmp
dec
sbb
dec
jae,pn
xchg
das
movsl
stos
xchg
aam
mov
xchg
cmc
mov
cmp
insb
adc
sbb
rorb
mov
or
sbb
or
jnp
push
push
add
xor
and
adc
ds
mov
into
jb
adc
cmp
aaa
movsb
fwait
mov
push
jge
pop
jb
push
mov
mov
mov
cltd
push
lahf
add
imul
pop
lea
nop
sub
inc
inc
cltd
push
lret
movsb
sti
xchg
or
hlt
ss
pop
mov
lods
cmp
dec
test
and
stc
movsl
mov
es
inc
mov
sahf
pop
aad
loope
in
sarb
sbb
push
adcb
cld
fisttpll
push
sub
in
mov
aaa
icebp
jge
decb
and
lds
popf
pop
cmp
or
sbb
fs
pop
jg
rcll
xor
stc
push
mov
nop
test
lret
in
movsl
cmp
mov
jl
sti
and
lods
ret
int3
ljmp
pop
test
insb
icebp
test
pop
shll
sub
iret
and
and
cmp
push
push
add
pop
add
repz
notl
repz
or
cli
loope
dec
adc
xchg
push
incl
shlb
cld
in
xchg
sbbl
inc
addl
imul
popf
mov
les
cmp
and
jae
xchg
push
push
mov
xchg
sub
lea
lcall
sub
and
movsb
sahf
adc
push
cli
cmc
adc
aam
cmc
arpl
imulb
rorb
adc
arpl
ljmp
sbb
in
mov
mov
in
mov
outsb
addr16
and
rcrb
jmp
rep
sti
aaa
call
mov
mov
popa
dec
push
popf
mov
xorl
aam
testl
clc
icebp
mov
cmp
aad
into
loop
push
popf
popf
je
int
xor
fs
inc
jb
sbb
int
mov
dec
aad
inc
stos
jae
cld
mov
gs
or
loope
push
pushf
jbe
adc
cmp
fimull
inc
pop
push
pop
pop
popa
shll
push
clc
cmpb
pop
pop
leave
adc
push
mov
cmp
adc
push
and
in
xor
xor
xorl
shr
sti
test
inc
jbe
out
xor
fstpl
cmpsl
cld
aad
stos
or
lods
jae
cmpb
jmp
push
mov
popa
insl
lgs
mov
jne
into
rorb
icebp
lcall
cld
add
rcl
ret
mov
repnz
xor
or
dec
push
jnp
std
jg
or
rcrl
add
pop
push
adc
mov
mov
call
add
and
cld
ficomps
sub
inc
and
rolb
gs
dec
push
ja
je
iret
sti
push
fldenv
lock
inc
or
imul
cld
mov
into
insl
test
jmp
aam
sub
dec
lea
cli
lods
adc
lcall
jge
sub
sub
into
aas
cltd
repnz
ljmp
push
test
in
insl
mov
insb
stc
inc
andb
pop
ds
bound
sbb
lret
mov
sbb
jmp
or
jl
xchg
sarl
aad
aad
mov
fiaddl
xor
dec
dec
mov
into
je
push
loope
out
inc
aad
sub
leave
adc
repz
mov
mov
inc
enter
sub
lods
cmp
aaa
fwait
xor
js
out
imul
adc
clc
mov
xor
loop,pn
insl
movsb
inc
ret
add
cmp
test
into
ja
les
pop
cld
out
popa
ljmp
dec
push
fbstp
mov
cli
pop
or
xchg
insb
sahf
xchg
gs
call
fwait
xor
mov
daa
pop
jle
push
pop
cmpsl
cmp
pop
jbe
lods
ja
and
cmp
cmpb
jp
popa
sbb
mov
lret
scas
mov
add
lcall
xor
inc
stc
add
cmp
dec
jle
adc
and
ljmp
pop
dec
fcmove
adc
addb
lret
ret
aad
adc
adcl
jno
xchg
cmpl
aad
rcll
cwtl
pop
out
jecxz
mov
leave
loope
std
adcb
mov
inc
xchg
test
or
in
roll
push
mov
or
jb
jne
mov
ds
pop
hlt
iret
add
addr16
test
xchg
mov
andb
lods
xchg
popf
adc
xchg
mov
lock
call
mov
xchg
int
xchg
xchg
dec
cs
outsl
pop
idivb
rolb
mov
jo
inc
push
dec
xchg
xchg
mov
add
stos
out
ja
add
sbb
mov
add
add
xchg
lret
add
popf
fcomps
xchg
mov
aaa
cs
fisubl
lods
xchg
iret
sub
ret
add
jp
pusha
addr16
push
scas
push
pop
xor
lret
pop
je
cmp
xchg
cli
add
cltd
jle
mov
out
pop
call
jnp
or
jle
test
outsb
xor
daa
adc
sub
add
in
imul
ficoml
imul
sahf
inc
mov
xor
jg
push
das
imul
add
mov
mov
adc
pop
add
xor
dec
shr
jae
ret
int
push
fsubrp
jmp
add
or
and
push
lock
dec
adc
sbb
xor
push
stc
jnp
cltd
lcall
xchg
jne
outsl
and
insb
scas
in
mov
sti
cmp
aaa
push
dec
cmc
add
xchg
orl
into
imul
addb
flds
cli
sub
icebp
aad
and
push
sbb
testb
ljmp
ljmp
fiaddl
jo
es
xor
mov
add
fwait
movsl
add
add
sti
push
mov
jb
cmpsl
xchg
xor
or
inc
xchg
mov
sbb
xor
lret
xchg
jnp
add
push
add
sbb
mov
cmpsb
adc
test
subb
jnp
loop
cmpsb
in
dec
adc
cmp
scas
out
fdivl
repz
mov
xchg
dec
add
sysret
imul
mov
pusha
out
shrl
add
and
icebp
push
cwtl
xchg
xchg
iret
inc
inc
pop
fldl
add
cmp
sti
mov
pop
cmp
mov
dec
jnp
je
pop
nop
mov
lcall
shr
ret
add
daa
xchg
or
test
int
enter
mov
jl
aam
mov
and
push
jmp
push
jl
nop
aad
test
and
fcomps
sahf
jg
dec
loop
sbb
inc
lret
enter
mov
daa
ret
cmp
mov
aaa
sbb
or
loopne
ret
arpl
push
xchg
sub
inc
xchg
aam
mov
movsb
ficomps
sub
outsb
xor
mov
popf
push
data16
dec
clc
sbb
lods
cmp
inc
sub
movsb
test
inc
outsl
or
mov
xchg
arpl
and
jp
rcrb
scas
pusha
mov
clc
ds
ja
ja
mov
cwtl
jg
insb
fs
pop
jecxz
fcompl
cmp
insb
fiaddl
pop
push
pop
es
adc
or
add
adc
and
fisttpl
sbb
in
pushf
mov
xchg
js
jl
push
int
nop
rolb
mov
pop
jns
int3
fcoml
pop
std
lock
jo
leave
cwtl
cmpsb
push
mov
shll
loop
call
push
test
enter
stc
sub
adc
out
ss
sbb
mov
mov
adc
pop
mov
cmp
add
repnz
xor
cwtl
ja
pop
mov
inc
test
mov
fistl
das
sub
dec
push
and
add
jmp
ljmp
pusha
mov
sbb
fsubrs
pushf
push
in
test
sbb
mov
mov
and
cmp
push
out
std
mov
mov
pop
fadd
mov
icebp
push
gs
pop
ss
popa
ss
sub
daa
movsb
and
sbb
xorl
xlat
insl
add
push
cmpsl
clc
xor
and
aas
cmpl
jb
jmp
aas
push
loope
pop
adc
push
arpl
xchg
sbb
inc
cmpsb
in
push
imul
jno
push
or
push
xor
jecxz
bound
xchg
or
in
cs
subps
inc
testb
aad
inc
fisubs
daa
in
jl
or
pusha
cwtl
paddusb
cmp
inc
mov
ja
test
sti
inc
sbb
into
sub
pusha
clc
add
lret
js
std
call
pop
rorb
in
test
insb
orb
insb
js
xor
mov
aas
sbb
dec
push
sub
shlb
adc
imul
leave
xchg
sub
jns
xchg
mov
cli
rolb
pusha
adc
ror
jnp
test
out
ret
sub
mov
jmp
mov
and
cmpsl
in
xor
push
cld
or
cwtl
sub
jmp
cmpsl
mov
in
inc
pop
lahf
pop
leave
pop
lock
cs
loopne
lods
repz
je
nop
ja
idiv
loopne
pushf
push
int3
or
jo
ja
fsubl
cmp
add
stc
add
rorl
adcl
rcr
mov
fs
or
cmp
cwtl
lret
int
mov
sbb
add
add
nop
mov
or
mov
out
pop
test
hlt
std
arpl
dec
mov
lods
rclb
mov
imul
pop
cs
leave
pop
inc
inc
mov
frstor
and
sbb
jmp
bound
mov
sub
stos
xchg
sbb
rcrb
je
mov
pop
es
subps
sub
mov
adcl
mov
dec
adc
jle
xchg
in
out
out
leave
jo
nop
test
test
and
outsl
ss
mov
pop
js
lret
lcall
push
cmp
fdivr
jnp
fdivrs
lock
mov
jecxz
mov
mov
mov
xchg
imul
sub
xchg
js
add
imul
xor
sub
pop
enter
xor
mov
dec
pop
adc
inc
repnz
adc
xchg
sub
ja
xorb
xor
test
cld
dec
fs
imul
dec
fidivrs
push
adcl
lret
push
sub
movsb
lods
and
push
push
sbb
into
and
mov
adc
dec
adc
mov
dec
sbb
xor
call
dec
pop
shl
fstl
sub
dec
pop
xor
xchg
xlat
aad
fstenv
pushf
pop
xlat
cltd
pop
pop
test
insb
dec
mov
test
popa
xlat
jnp
mov
pop
mov
jno
xor
inc
mov
mov
clc
lahf
push
xchg
mov
mov
or
inc
shlb
jecxz
xor
cltd
lods
ret
lret
mov
mov
push
push
and
xchg
mov
push
addr16
add
sub
iret
cld
repnz
jl
arpl
subb
jne
sbb
pop
test
pushf
xchg
int
mov
imul
scas
iret
aas
nop
or
cmp
jbe
adc
jae
sbb
into
mov
mov
sbb
jp
and
js
repz
pop
out
push
sbb
addr16
loopne
call
arpl
cwtl
ret
mov
fs
dec
jb
int
xchg
pop
repnz
sbb
jnp
clc
les
jge
lods
pop
xor
jae
es
jns
or
das
hlt
mov
imul
mov
ret
xchg
frstor
popa
mov
xchg
xchg
aad
insl
mov
hlt
in
int3
gs
fsubp
fucomp
insb
fucomip
dec
cmpsl
pusha
xchg
pop
jle
mov
in
mov
xchg
je
fimull
mulb
das
sti
push
adc
shll
call
push
jl
fisubl
jl
insb
xor
sti
push
mov
dec
dec
jge
push
sub
cld
add
lret
les
xor
pop
mov
cld
add
mov
movsl
rol
inc
sbb
aad
add
mov
outsb
cmp
cmp
inc
jo
xchg
mov
push
in
jmp
outsb
cli
scas
adc
pop
sti
fisubs
inc
cmp
jge
jl
fwait
int3
icebp
inc
sahf
rol
loope
dec
push
das
stc
jle
push
mov
sbb
gs
and
xchg
mov
push
mov
mov
inc
dec
out
sbb
movl
jbe
xlat
add
sub
jnp
les
jge
bound
insb
stos
mov
aaa
cwtl
inc
out
adc
xor
mov
pop
bound
inc
pop
rorl
or
stos
scas
lock
ret
xor
xor
hlt
mov
mov
cli
mov
lcall
jbe
adcl
addb
lret
xlat
into
pusha
pop
pop
ljmp
xor
cmp
shrb
add
jb
decb
lahf
rol
or
lods
mov
or
mulb
std
add
mov
cmpsb
inc
stc
decl
and
xchg
and
aad
jl
jbe
sub
loope
sub
sbb
imul
xor
dec
loop
mov
add
gs
inc
ljmp
pop
js
stc
mov
fbstp
and
adc
bound
test
mov
sub
leave
insb
mov
add
iret
lods
lds
ficoms
test
xor
mov
int3
pop
mov
or
and
aad
mov
je
adc
popl
add
mov
test
insb
sub
or
mov
and
test
xchg
dec
xchg
mov
ret
push
mov
sub
mov
xchg
pop
add
out
jge
repnz
ret
sub
sti
sub
add
mov
cmp
cmp
iret
pop
loopne
jp
int
clc
test
imul
cmpsl
outsl
sbb
adc
mov
scas
das
pushf
aam
xchg
inc
bnd
cmp
pop
movsl
adc
xchg
and
lret
dec
fadds
jle
pop
xchg
sub
jno
inc
xchg
dec
loopne
sub
leave
dec
jg
mov
ss
jne
clc
push
push
inc
subl
or
mov
mov
imul
add
fildl
in
movsl
aaa
scas
icebp
divl
push
jo
int3
mov
push
xor
inc
arpl
mov
dec
inc
mov
icebp
pop
das
xchg
cmp
sbb
adc
dec
jg
mov
sti
pop
add
xchg
or
stos
cld
xlat
dec
sbb
push
pusha
fwait
test
lea
cltd
push
frstor
cmp
aad
test
sub
pushf
sub
pop
leave
std
dec
test
mov
mov
movb
arpl
inc
mov
inc
iret
push
pop
xchg
and
cmc
adc
lea
lret
jle
mov
lock
das
adc
jle
mov
jae
movsb
mov
xchg
test
xchg
sahf
jg
pop
scas
xchg
pushf
in
test
or
pop
dec
repnz
sub
or
out
jne
fsubs
mov
push
mov
jne
xchg
and
xchg
adc
mov
mov
mov
filds
adc
js
pop
inc
or
les
sti
loop
nop
test
jmp
nop
setno
mov
sbb
int
and
adc
push
fadd
ljmp
je
and
aaa
pop
pushf
in
jp
int3
gs
outsl
lret
push
pop
loopne
cli
rclb
mov
push
fistps
pop
leave
push
adc
mov
jmp
shlb
notl
out
xchg
mov
shr
push
pop
cwtl
pop
jnp
outsl
negb
outsb
xchg
dec
mov
mov
and
std
mov
mov
insl
jle
gs
sub
sub
pop
stc
in
out
shll
out
cli
xchg
aaa
fcomip
jns
push
inc
test
pop
aam
rsqrtps
mov
rolb
mov
jp
push
mov
call
push
insl
add
mov
jne
in
pop
adc
push
sbb
out
inc
mov
cmp
xchg
cmp
sbb
addb
in
mov
scas
enter
mov
imul
mov
fcomip
push
or
stos
imul
push
aas
lcall
call
jmp
add
push
push
jp
mov
cbtw
or
cmp
jns
sbb
xchg
adc
pop
das
in
repz
xor
lahf
cmp
push
aas
lods
filds
cmp
mull
mov
dec
mov
inc
ljmp
ficomps
fcoml
sub
aaa
push
scas
dec
enter
pop
mov
or
push
aaa
mov
pop
jnp
mov
negb
xchg
pop
mov
adc
int3
stos
cmp
xchg
cmp
inc
nop
and
inc
stos
mov
loope
sbb
clc
push
or
scas
cmp
pop
pop
loop
aas
mov
inc
daa
cwtl
insl
in
jnp
lea
xchg
xor
sti
push
popa
or
in
in
dec
pop
lods
loopne
in
lds
out
push
ljmp
sub
xor
mov
stos
pop
inc
jl
and
mov
mov
dec
cmp
subb
mov
or
sbb
mov
jmp
idiv
pop
xchg
adc
insl
ss
dec
hlt
mov
clc
inc
lret
inc
adc
cli
lcall
adc
imul
hlt
mov
adc
std
push
mov
gs
test
cmpb
pop
xor
lahf
jno
pop
cmp
int3
test
xchg
xchg
mov
ret
movsl
mov
jnp
scas
in
and
xchg
cwtl
and
cmpsb
mov
jbe
das
adc
out
shrb
pushf
cmpsl
jb
ret
mov
pop
adc
insl
orl
loop
jnp
sahf
mov
sbb
addr16
movsb
mov
scas
les
loope
dec
mov
adc
out
or
mov
mov
fisubs
dec
fistpl
lea
mov
ljmp
adc
sbb
fwait
pop
push
mov
sbb
lcall
inc
add
hlt
pop
add
incb
add
sbb
add
jns
lret
ds
cli
and
sbb
iret
por
cld
sub
fidivl
pop
cmp
mov
pop
adc
cmp
jae
and
inc
rclb
and
int
xchg
cmpsb
mov
jg
adc
jb
std
cs
cwtl
add
jne
jno
mov
sub
aas
mov
idiv
mov
mov
xlat
jp
xchg
in
cmp
jae
push
push
loop
xor
in
add
add
push
xlat
jmp
xor
xchg
and
dec
sub
sub
mov
sub
dec
out
pop
ljmp
fcmovu
nop
shr
pop
adc
int3
cs
stos
imul
jo
les
mov
inc
test
test
in
mov
inc
cli
mov
andb
gs
inc
std
ret
and
mov
mov
pop
dec
dec
repz
loop
mov
shl
pop
xor
jb
inc
mov
xor
call
fidivl
sub
jbe
test
mov
cmp
add
cltd
sbb
jnp
cmp
sbb
and
inc
or
or
sub
dec
mov
jbe
xchg
pop
pop
or
popf
das
mov
cmp
rcr
mov
sub
test
addr16
repnz
cltd
push
push
jle
add
fsubr
enter
dec
add
roll
mov
jl
ljmp
test
stc
push
sub
movsb
insb
outsl
jp
ja
loope
sub
jge
stc
das
cmp
mov
jl
rcrl
and
adc
inc
push
push
clc
lcall
outsl
aam
enter
or
outsb
mov
iret
mov
jecxz
cmp
or
int
in
add
mov
flds
movsb
jl
sar
hlt
je
mov
adc
add
repnz
das
leave
or
xor
and
mov
mov
cmp
pop
inc
mov
cli
mov
call
or
sbb
repz
xor
pop
mov
leave
xchg
iret
or
ret
add
outsl
mov
leave
daa
fisubrl
mov
je
and
mov
push
test
push
shrb
aas
ret
movsb
lods
ja
insl
mov
pop
sub
mov
jae
xchg
jmp
insb
mov
cmpsl
mov
fwait
and
add
and
sub
dec
gs
pop
or
in
push
pop
sbb
stc
pop
jb
fwait
je
hlt
repz
dec
xor
cmpsb
mov
add
sub
sbb
or
sub
xor
ljmp
out
sbb
lods
xchg
pop
xor
mov
pop
leave
mov
lret
aas
cmp
mov
nop
pop
insl
fmull
xor
push
imul
mov
addr16
mov
xor
mov
mov
gs
sti
ds
enter
ja
or
movl
push
mov
ljmp
xchg
js
test
pusha
out
fucom
pop
idivl
pop
jae
ja
outsl
sbb
xchg
fwait
push
jne
mov
xchg
or
mov
decl
mov
jae
inc
dec
cs
or
test
inc
inc
insb
dec
push
sbb
in
or
dec
xor
out
sti
shl
gs
jle
stos
xchg
sbb
sbb
xchg
pop
bound
shll
pop
mov
xchg
jae
popf
sarb
lds
test
jb
inc
add
sti
sub
mov
loope
test
fisubrl
sar
stos
aaa
imul
imul
hlt
pop
scas
cmp
dec
nop
inc
mov
xchg
idivl
testb
mov
push
js
lcall
push
scas
cmp
iret
add
or
out
jg
push
inc
inc
xchg
fnsave
ljmp
inc
add
sub
lahf
cmp
or
ret
push
cs
and
pusha
pop
add
mov
lds
rol
fisubrl
adc
sarb
mov
ret
and
bound
or
repz
in
mov
inc
xchg
or
andl
repnz
xchg
out
mov
xor
orl
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
mov
mov
add
mov
mov
jmp
or
mov
xor
mov
fwait
dec
jnp
clc
pushf
jnp
subl
dec
out
xchg
xchg
mov
dec
mov
imul
shl
nop
stc
outsb
jp
call
inc
clc
push
ss
jb
mov
sbb
push
sub
push
pop
mov
push
jp
dec
mov
iret
data16
mov
mov
fidivl
add
pop
push
incb
xrelease
aad
push
xor
aam
out
push
lods
xchg
popa
push
stos
leave
out
cmp
jmp
mov
popf
fnstsw
xor
jle
sub
mov
cmp
cli
stos
fisttpl
mov
cmpsb
push
pop
mov
sbb
daa
or
shl
cmp
movsl
cmpl
inc
sti
test
push
mov
mov
xor
xchg
sar
lods
sub
xchg
jb
movsl
mov
or
pop
mov
sub
cmpsl
test
dec
sub
lret
shll
ret
in
nop
in
movsb
inc
fildll
cld
cmp
dec
adc
enter
imul
pushf
cmpsb
fucomip
mov
add
and
clc
lea
xor
jnp
jae
add
and
sub
in
xchg
rcrb
sbb
call
lock
xchg
jnp
test
push
push
mov
sbb
pusha
in
ja
clc
loop
inc
add
mov
push
add
mov
stos
inc
enter
pop
sbb
dec
adc
xor
push
dec
mov
insb
and
push
xchg
pop
sbb
xor
neg
jbe
jo
mov
and
adc
loop
and
jecxz
addb
ret
cmp
cmp
sbb
pop
xchg
mov
sbb
xchg
xlat
pusha
rorb
jns
sti
mov
gs
pop
push
xlat
shrl
cmp
mov
mov
jmp
xlat
jl
or
arpl
sbb
in
push
jl
cmp
add
ss
mov
pop
add
daa
or
or
call
jg
or
sub
leave
repnz
int3
push
pushf
call
fidivs
jecxz
add
in
or
aas
fildll
ds
push
lret
std
xchg
fisubs
and
cmpsl
xor
sahf
fadds
add
jns
inc
dec
push
push
sub
imul
push
lret
adc
jg
xor
mov
pop
fwait
and
pop
imul
jb
out
jl
mov
inc
les
pop
xor
xchg
movsb
mov
je
push
xchg
xchg
aaa
xchg
mov
iret
aam
mov
mov
xchg
pop
sbb
jge
cltd
mov
or
cltd
jmp
out
imul
mov
mov
call
gs
add
shrl
loope
hlt
test
nop
jae
outsl
into
mov
std
inc
sub
jmp
xchg
scas
ficoms
or
into
lret
scas
mov
sbb
bound
or
jno
sbb
mov
cltd
in
ret
and
mov
cmpsl
xor
cld
lcall
leave
add
mov
xor
fisttpll
mov
cld
mov
iret
popf
add
aad
add
xor
lods
dec
fsubrl
mov
inc
jge
shlb
jp
shr
shll
jle
or
daa
sbb
stos
stos
imull
fisubrs
leave
adc
flds
push
inc
adc
cmp
daa
mov
mov
mov
pop
xchg
inc
push
mov
or
daa
lea
xlat
jae
iret
cld
jl
push
push
sbb
push
mov
pop
iret
mov
jl
out
sbb
push
insl
imul
call
test
jecxz
jno
and
push
hlt
loop
roll
sub
dec
pop
shlb
jp
add
mov
stos
mov
mov
sub
sar
adc
gs
fadd
in
stos
int3
or
aad
je
testb
cmp
arpl
movsl
pop
scas
jae
pop
adc
shll
movl
pop
jo
std
stos
imul
into
push
shlb
ja
int
xchg
inc
cmp
cmp
xchg
push
or
ds
sub
jle
mov
adc
inc
add
dec
sahf
pop
inc
dec
pop
add
push
cmc
dec
inc
sbb
mov
cli
nop
mov
ret
xchg
out
das
fildl
les
sub
jns
cmp
fsubrl
xchg
jmp
mov
out
shrl
idivb
dec
popf
jo
lahf
pop
sbb
out
cmp
stc
mov
cld
popa
icebp
sbb
pushl
mov
jmp
lds
push
jge
add
popa
mov
test
hlt
int
jle
xchg
mov
outsb
out
xchg
push
inc
test
repnz
push
mov
ffree
in
mov
shl
xor
test
outsl
push
fnstsw
cmp
lods
mov
jno
dec
into
push
movsb
pop
mov
negb
std
dec
test
lcall
js
test
ds
dec
pop
mov
pcmpgtd
xor
and
fidivrs
negb
sbb
or
jbe
adcb
jp
push
mov
std
inc
pop
stc
shrl
fidivs
rorb
subb
sbb
out
xchg
mov
adc
test
out
mov
inc
test
call
aaa
mov
pop
out
mov
rcrb
popl
jb
jg
stc
push
mov
push
lahf
mov
in
fisubrs
adc
cmc
sub
dec
dec
jmp
push
bound
pop
int
mov
mov
movsb
aas
out
ja
out
int3
inc
jae
andb
mov
int
movsl
ss
fcmovu
push
int3
ret
push
cltd
in
shrb
pop
or
add
jne
idivl
xor
add
lahf
loop
dec
push
sbb
push
mov
adc
add
clc
xchg
shrl
and
lds
imul
push
ficompl
rol
in
lea
cs
lahf
and
adc
repnz
lods
sub
out
mov
add
ljmp
ret
push
stc
xor
cmpsl
adc
cmpb
imul
adcb
sub
loop
addb
push
add
push
sbb
mov
out
movsb
lret
xor
cmc
mov
adc
or
dec
jnp
mov
pop
xchg
pop
pop
test
bound
mov
inc
pushf
jbe
test
adc
iret
pop
mov
dec
pop
dec
mov
xorl
ja
stos
into
push
jb
mov
leave
fstl
sbb
shrb
and
fcmovne
cmpsb
stos
xchg
xchg
inc
jge
repz
add
sub
push
push
sbb
std
mov
jbe
dec
dec
jg
notl
add
dec
inc
addr16
mov
mov
negl
idiv
or
push
cmpsl
sarl
mov
rep
xor
out
jnp
lds
jle
fadds
jns
cmp
test
call
adc
or
mov
pop
sub
and
cmp
cmp
nop
int3
cmp
outsb
mov
adc
mov
pop
mov
cmpb
xchg
jno
adc
sub
fistps
pop
jmp
fmull
xchg
rolb
pop
push
test
ss
jle
mov
jmp
jmp
sbb
add
mov
adc
inc
jle
gs
cli
xchg
mov
out
fstl
cltd
jp
pop
push
or
jbe
jb
movsl
in
out
pusha
jp
inc
add
mov
scas
mov
xchg
and
aas
sbb
in
push
pop
push
mov
push
dec
xlat
out
jmp
mov
adc
jo
mov
jnp
lds
mov
aad
rorl
xchg
ret
pop
loope
push
jno
jecxz
loop
pop
dec
loopne
lea
iret
ss
clc
shlb
es
insb
lea
sti
lahf
and
fs
inc
sub
cli
mov
imul
push
add
shr
sbb
sbb
adc
es
sub
push
xor
cmp
push
rcl
aaa
and
ss
xchg
mov
pop
jmp
sarb
nop
and
add
lahf
push
jne
sub
loope
and
das
out
dec
in
test
mov
push
xor
sub
pop
dec
push
sub
test
popf
pushf
inc
push
bound
and
fsubr
paddd
and
dec
ret
std
xchg
test
jne,pt
and
cmp
xor
popf
inc
nop
jmp
jnp
or
popa
adc
scas
int
sbb
inc
add
cmpsl
iret
xor
lea
arpl
hlt
decb
push
mov
insl
enter
xchg
cmpsl
mov
sbb
sti
pushf
enter
jno
test
stos
dec
cmp
call
xchg
shrb
repnz
outsl
fldcw
outsl
loope
imul
or
ret
add
or
cmpsl
andb
lea
xchg
lret
cmp
inc
dec
fisubrs
cli
fcoms
push
call
or
adc
out
adc
sub
insb
sub
sub
fxam
les
icebp
stos
js
call
sbb
pop
inc
push
mov
jne
xor
repz
jne
mov
inc
jp
imul
jb
shll
imul
lods
xor
sub
mov
sti
xor
sub
pop
and
leave
mov
cmp
ds
stos
aam
popa
mov
loopnew
jno
hlt
cmc
das
insl
push
out
pushf
pop
aas
ret
adc
lahf
mov
ds
in
jns
sahf
aad
shr
dec
jmp
sub
andb
pop
and
test
sbb
pop
fidivrs
lret
pop
mov
out
das
or
mov
sar
adc
lock
pop
pop
cs
cmpsb
ret
js
or
arpl
jns
lea
push
imul
push
movsl
sub
adc
inc
out
push
pushf
dec
es
gs
pushf
jecxz
push
mulb
xor
insl
imul
push
xchg
sub
mov
les
xor
mov
mov
push
adc
popf
testl
mov
push
sahf
or
mov
pushf
push
and
xchg
movsb
xor
and
jbe
mov
outsb
jnp
pusha
icebp
inc
pusha
test
rcrl
mov
mov
movsb
xchg
push
mov
scas
pop
insb
leave
leave
ret
sbb
das
or
jg
pushf
lock
push
sub
lock
or
test
adc
dec
ljmp
mov
sbb
jmp
shrl
not
sbb
cwtl
inc
push
pop
outsl
adc
movsl
ja
pop
cld
sbb
xlat
xchg
jnp
stc
iret
fmull
inc
and
fldl
mov
adc
cmp
mov
xchg
inc
cmp
je
in
rclb
push
in
lea
cmpsb
sub
sbb
jecxz
stos
jae
cmp
sti
dec
mov
lret
les
lea
shll
in
and
add
cld
sbb
mov
push
shll
mov
test
pop
jg
sbb
pop
test
aad
mov
mov
cmc
xchg
aaa
cmp
ljmp
xor
cmp
cltd
stos
neg
stos
xlat
jecxz
ret
jge
mov
sub
popa
jno
sbb
mov
repz
pop
sub
cmp
add
add
ljmp
neg
push
fldl
hlt
test
xchg
shlb
xchg
or
mov
inc
adc
je
pop
bound
je
daa
pop
and
ret
push
mov
sbb
mov
push
sarl
pop
mov
lea
pcmpeqb
jmp
mov
hlt
push
fisttpll
call
inc
fstpt
pushw
stc
push
xchg
shrl
ret
stos
cmpsl
adc
dec
test
sbb
pusha
mov
cltd
push
iret
and
ss
mov
and
repz
es
xchg
outsb
shlb
and
sbb
sub
ficompl
adc
push
xlat
cltd
std
adc
jg
nop
fs
sub
adc
push
pop
movsb
cmp
cltd
lret
jbe
lods
jmp
cmpsl
shlb
test
imulb
out
push
in
push
stos
and
cmp
push
jne
mov
ljmp
addr16
daa
cmp
mov
inc
stc
sub
mov
js
pop
jmp
mov
and
fdivrl
cmpsb
sbb
xor
sub
inc
into
or
sti
int
sahf
fdivl
dec
push
jle
mov
dec
ja
xor
push
stos
mov
dec
mov
dec
pop
out
rcll
test
and
mov
aad
repnz
jnp
jmp
cli
jns
pop
push
sbb
lods
lcall
imulb
mov
fiaddl
insl
lds
adc
out
xchg
mov
in
mov
int
iret
adc
inc
and
arpl
loopne
jb
xor
cli
mov
insl
test
pop
ret
mov
or
lahf
bound
mov
pop
sub
or
clc
jbe
addl
adc
jmp
mov
fisttps
popa
out
int3
dec
xchg
push
sub
mov
nop
andb
arpl
adc
xchg
sbb
leave
fs
and
dec
in
sub
testb
jp
mov
cli
popl
in
cmpsl
mov
stos
popf
bound
ret
jne
scas
pop
mov
pop
mov
sti
add
scas
sub
xchg
popa
dec
shrb
sarl
xor
mov
shlb
push
aaa
jg
and
scas
mov
jnp
mov
lods
dec
ds
lods
push
lret
int
push
into
imul
mov
jmp
inc
add
dec
jmp
sbb
scas
pushf
push
pop
mov
aam
sbb
jp
xchg
sbb
jl
repnz
xlat
adc
mov
add
adc
mov
mov
jo
stc
fwait
enter
xlat
dec
or
fcompl
adc
lock
jb
roll
add
inc
and
xor
scas
fisubrl
xchg
adc
pop
sar
xchg
inc
imul
sbb
mov
sahf
movsl
ljmp
cmpsl
mov
pop
fsubrl
sub
shlb
push
mov
inc
mov
inc
icebp
mov
xchg
dec
in
std
jae
xor
cmp
lds
test
lret
pusha
mov
mov
shrl
xor
lret
popf
fstl
out
jb
inc
ret
mov
mov
das
mov
mov
clc
fcmovne
sbb
adc
testb
jmp
es
mov
int
jae
or
insl
adc
and
mov
jnp
fninit
cmp
in
push
cmp
ss
rorl
dec
shll
popf
add
es
testb
jne
jg
loopne
pop
sbb
and
pop
pop
or
mov
fistpl
loope
imul
pusha
or
test
test
sbb
push
cmp
int
ja
sub
jmp
mov
out
fadds
call
mov
add
movsb
cld
jae
jno
xor
in
out
xorl
mov
ljmp
adc
mov
sahf
mov
or
sbb
mov
movsb
mov
icebp
sarb
in
mov
add
fstl
pop
scas
xchg
pop
push
lea
insb
mov
pop
sbb
xor
add
std
xchg
pop
bound
movsb
inc
jmp
pushf
jnp
sbb
dec
cmp
enter
repnz
sbb
xor
popf
mov
jb
cwtl
jae
mov
stos
cmpsl
into
ds
addr16
stos
mov
cmp
addb
push
insl
push
and
mov
cltd
inc
xchg
and
lds
push
addl
pop
adc
or
repz
out
inc
adc
add
jl
pop
sbb
sbb
mov
or
and
xor
push
and
jo
ret
imul
adc
cwtl
adc
pminsw
and
adc
jae
dec
sbb
push
push
insb
mov
daa
fistpll
fwait
shrb
and
fmuls
push
mov
dec
popf
imul
ret
js
ret
nop
push
ror
jecxz
dec
stc
jp
imul
daa
popf
out
test
adc
test
fidivrs
mov
movsb
fbld
push
push
pop
addr16
scas
lea
mov
cmpsl
or
pop
add
cltd
inc
jae
lods
mov
push
dec
jg
adc
inc
or
cmp
cmpsl
pop
sub
jl
mov
sub
js
in
pop
inc
cmp
out
add
cltd
or
add
loop
mov
addr16
sbb
cwtl
mov
dec
mov
insl
sbb
aaa
fiadds
pop
and
dec
push
popf
fwait
loope
jo
and
enter
enter
xchg
faddl
aas
mov
adc
or
inc
xchg
cmp
popa
int3
test
xor
mov
cmpsl
sub
pop
jae
repnz
dec
mov
fistps
cltd
imul
sbb
mov
push
sbb
dec
jno
xchg
dec
lret
mov
mov
sbb
ret
pop
bound
imul
sub
add
inc
mov
inc
or
insb
cmp
cmp
into
cmp
jnp
fcmovnbe
mov
xchg
mov
or
xor
test
mov
repz
in
mov
adc
pop
inc
mov
pop
cli
cmp
mov
push
jnp
inc
push
mov
sub
in
add
leave
jb
sbb
fcoml
jnp
inc
sub
rclb
cs
shrb
xchg
sub
in
pop
jecxz
mov
or
xchg
in
inc
mov
dec
pop
inc
adc
jnp
xchg
sahf
and
add
or
cmc
arpl
adc
and
jge
decb
lea
mov
xor
repnz
xchg
cmp
fwait
es
sub
lcall
insb
push
inc
pop
test
add
outsb
fcmovne
pop
add
dec
fcmovnbe
js
enter
pop
push
test
inc
sahf
fistps
pusha
scas
imul
aam
sub
fildl
jno
pop
push
sbb
dec
cmp
dec
scas
push
subb
lock
mov
push
inc
push
scas
xchg
je
add
xchg
push
test
xor
sahf
mov
jbe
insb
or
jecxz
adc
aad
jg
ja
adc
daa
ljmp
cmp
sub
push
xchg
ss
xor
mov
mov
mov
push
mov
repnz
das
das
add
mov
fucomip
movsl
movsl
ja
push
sarb
lods
push
add
add
mov
add
fmuls
pop
mov
clc
jne
xchg
lea
cmp
dec
imul
dec
add
icebp
inc
mov
dec
dec
jl
or
lods
cmp
dec
insb
call
mov
adc
dec
shlb
notb
sub
lcall
dec
pusha
pop
loop
lds
mulb
sbb
mov
std
ffreep
dec
pop
stos
cli
inc
xor
aam
cwtl
jnp
movsl
dec
xchg
imul
push
jp
add
push
test
popa
dec
pop
aaa
dec
cld
or
cwtl
pop
push
inc
outsb
xorb
sub
insl
ja
cli
pop
mov
and
cmc
stc
in
hlt
lock
repnz
cmp
pop
ret
lods
insb
mov
sub
stos
push
xchg
div
es
pop
in
divb
or
jg
rcl
and
dec
sub
lcall
stos
cmpsb
data16
mov
jle
cwtl
jmp
insl
add
icebp
mov
movl
jg
popa
inc
and
mov
pop
pop
inc
pop
lds
cmp
int
sbb
enter
lea
mov
and
adc
xchg
out
mov
or
inc
sbb
push
jge
push
ljmp
cmp
popf
mov
jg
dec
pop
leave
aas
cmp
jmp
pop
lea
test
fadds
sbbl
sbb
js
sahf
mov
mov
loopne
out
aas
lcall
lods
push
xlat
push
xchg
lcall
mov
jle,pt
lcall
out
insb
lcall
rcr
sub
pushw
popa
add
lods
jb
add
or
and
in
mov
mov
adc
jo
cli
or
es
xchg
jnp
add
push
outsb
dec
int
dec
loope
cld
je
movsl
push
fdiv
nop
test
cmp
insb
mov
jnp
add
jbe
sahf
nop
fwait
jg
pop
es
mull
xor
clc
add
jnp
dec
sbb
stos
mov
addb
out
or
dec
cmp
addb
rolb
imull
insl
imul
or
adc
ret
cmp
fstps
sti
jnp
add
sbb
icebp
jle
mov
enter
cmp
mov
enter
xchg
pop
es
in
add
adc
decl
cmpsl
test
or
sub
mov
adc
mov
gs
in
pop
mov
ret
stos
dec
push
jmp
lds
mov
pop
push
mov
xchg
pop
and
imul
movsl
enter
adc
int3
push
xor
pop
pop
movl
jg
inc
loope
out
xchg
xchg
mov
mov
or
popf
mov
popa
fwait
ret
pop
sub
insl
repnz
gs
cld
jp
sub
std
clc
neg
push
insl
fnstcw
sbbl
and
push
je
test
dec
push
inc
and
push
inc
inc
mov
dec
insl
pop
jnp
cmp
iret
dec
dec
sub
ljmp
mov
out
leave
mov
add
cmc
inc
rcll
pop
sbb
xor
cmp
push
push
xor
mov
xchg
int3
neg
xchg
sbb
cld
shrl
outsl
mov
out
and
rorb
mov
mov
aas
stc
cltd
lahf
add
insl
and
sti
push
enter
jbe
adc
test
sbb
cmpsb
call
roll
out
xor
add
sarl
bsr
loop
mov
xchg
ret
loop
mov
adc
imulb
xchg
pusha
clc
jp
cmpsb
aam
xchg
orl
aas
inc
mov
jno
fildll
sarl
pop
mov
inc
xchg
aas
push
fwait
inc
arpl
ret
outsb
push
mov
imul
cli
push
repz
rcr
cli
andl
div
popf
push
push
mov
push
jo
xchg
xchg
pop
mov
mov
outsb
inc
into
in
push
cmp
and
sub
stc
outsb
dec
clc
test
sbb
xor
outsl
lret
fucomp
enter
popa
rclb
inc
jl
or
lret
cmp
int3
dec
cmp
xchg
js
sbb
dec
lret
push
mov
xchg
aaa
and
cmpsl
je
pop
pop
or
std
push
xchg
inc
fs
mov
cltd
loop
mov
ret
sahf
out
ret
in
hlt
cltd
test
push
push
std
push
adc
xchg
xor
leave
mov
int
or
sub
xchg
and
or
inc
roll
jnp
jns
and
fmull
dec
and
jae
pop
cltd
jle
inc
aaa
pop
ficomps
inc
cs
aad
in
sbb
xchg
inc
scas
pusha
pop
shrl
bound
fbld
fidivl
mov
das
bound
jge
push
mov
outsb
sbb
mov
push
enter
mov
pop
xchg
sbb
lock
test
inc
sbb
out
subl
sbb
in
dec
push
fwait
push
call
mov
sub
andl
or
push
int
stc
fdivrp
jg
push
jg
test
xchg
mov
dec
dec
jge
mov
mov
sub
mov
push
shll
test
pop
or
lret
fstpt
ja
clc
rcll
sub
lahf
dec
mov
inc
mov
jmp
adc
push
pusha
push
push
rcrb
mov
sub
mov
xchg
adc
fmulp
add
inc
daa
sub
bound
shrb
push
cmpsl
cmp
mov
ret
ffree
mov
lea
adc
fstpl
inc
mov
insl
push
push
imul
cmpsb
mov
xchg
out
pop
leave
xorb
sub
test
and
sbb
movaps
jno
or
leave
mov
ljmp
sbb
jmp
mov
sarl
mov
xor
push
rep
cli
and
adc
or
mov
leave
xor
lret
mov
sub
pop
inc
test
mov
cli
push
mov
push
inc
mov
push
test
jge
mov
ljmp
xchg
xlat
stos
push
lds
xlat
sbb
fcmovnu
fldt
cmpsl
jns
lods
sahf
jne
movsl
movsb
mov
sahf
or
xor
mov
jns
in
iret
jne
mov
stc
lock
shr
and
in
cli
push
insl
test
sbbb
mulb
mov
dec
scas
jnp
push
test
jnp
sub
inc
push
jo
xor
scas
pop
mov
jne
nop
mov
jne
ss
fs
fcmovu
mov
pop
idivb
test
adc
sub
ret
cmp
jae
push
clc
cmpb
leave
cmpsb
clc
sbb
xor
sti
fstpt
daa
ljmp
jl
jge
in
push
and
addr16
add
dec
inc
or
in
sahf
push
call
inc
adc
xchg
out
pop
lahf
mov
in
or
pop
inc
aas
sub
lock
mov
cltd
jmp
stos
ret
mov
push
sbb
mov
mov
bndstx
jmp
push
mov
lods
mov
mov
xor
daa
lret
mov
mov
adc
and
lods
pop
cld
scas
leave
and
fnstsw
bnd
cmovge
pop
pop
xor
call
imul
in
sbb
ss
nop
fildl
push
in
cmc
roll
pop
daa
pop
inc
jbe
pop
stos
mov
add
out
xlat
dec
fdivs
mov
ja
cmpsb
test
mov
cmp
jbe
xchg
cmp
jns
lds
stc
cmp
push
cwtl
in
jp
scas
push
dec
or
iret
adc
fwait
dec
test
loopne
in
pop
jg
inc
xchg
stc
push
mov
arpl
push
cmpb
aam
out
out
xchg
cmp
dec
int3
pop
aas
test
cmpsl
xlat
cmc
sub
pop
pushl
add
jmp
js
sahf
dec
lret
icebp
divl
movsb
insl
fbld
sbb
xchg
cwtl
fisttps
jl
sbb
mov
std
imul
or
shl
lea
repz
les
mov
stos
xchg
mov
add
roll
loop
inc
and
int
ja
lahf
push
out
dec
mov
pusha
loop
mov
js
fs
cmpb
imul
stos
test
xor
daa
lcall
movsb
pop
lret
inc
insb
and
pushf
jnp
xor
cmp
mov
test
pop
pop
push
dec
in
mov
sub
push
mov
mov
pop
dec
sahf
bound
popa
add
sbb
pop
lods
mov
orl
xchg
add
adc
imulb
loope
mov
xchg
add
lea
mov
jge
xor
jmp
push
or
movsb
xchg
pusha
push
and
sub
dec
lcall
and
dec
ret
sbb
inc
data16
sbb
push
mov
inc
repz
mov
cmp
mov
pop
sub
gs
jns
push
inc
sbb
fs
leave
lods
stos
mull
arpl
jo
bound
popf
cmp
lret
pop
jecxz
test
cltd
jnp
fsubr
sbb
pop
mov
push
cmpsl
sub
xor
inc
fldenv
push
sbb
addr16
in
lds
mov
and
add
mov
add
cltd
push
cmpsl
mov
or
mov
cmp
push
sub
lods
mov
mov
lods
add
dec
std
insl
cld
mov
test
pushf
xchg
push
cmpsl
sbb
adc
mov
mov
mov
mov
xchg
mov
dec
xor
mov
iret
mov
adc
xor
cmp
or
sbb
xor
cmc
rorb
lea
mov
sahf
mov
roll
sbb
cmp
outsl
mov
fsubrl
sbb
lahf
cltd
push
mov
andl
dec
pop
cmp
test
outsb
popf
stos
push
sub
jnp
xchg
sbbb
lcall
sbb
mov
add
test
add
int
push
sub
inc
rol
jge
repz
test
push
into
push
repnz
fidivrl
jl
pop
adc
mov
xor
jle
push
ds
loope
cs
lds
loopne
movsb
out
jl
or
sbb
imul
mov
loopne
xor
movsb
dec
mov
xor
push
pop
shrb
add
push
xor
lret
jl
jmp
xor
fiadds
or
lods
orb
scas
aas
arpl
fisttps
ds
movsb
cmpsl
mov
inc
push
inc
cmpsl
repnz
inc
push
or
or
in
and
aad
xchg
push
pop
paddb
push
outsb
xor
rolb
pop
mov
fsubrp
aaa
cmp
pop
sub
insl
jle
xlat
mov
test
sub
sbb
ja
mov
mov
push
and
add
cmp
daa
pop
dec
outsl
inc
lds
inc
inc
mov
mov
lock
sub
fsubrl
adc
inc
lods
test
call
pop
ljmp
xabort
ret
push
sti
lahf
mov
test
cmp
nop
fisttpl
push
lahf
cli
push
mov
insb
xlat
int3
call
test
push
fbstp
xchg
jmp
inc
popf
rorl
in
popa
jg
aaa
mov
stc
cs
loope
xchg
lea
ja
into
andb
adc
sarl
push
cmpsb
add
repnz
loopne
xchg
cli
test
or
inc
or
adc
sbb
jne
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
sbb
mov
adcl
xor
movl
cmpl
je
cmpl
jge
jmp
call
mov
dec
mov
jmp
mov
add
movl
cmpl
je
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movzwl
mov
sub
mov
movb
lea
mov
mov
mov
xor
subl
add
subl
mov
and
movl
push
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
push
push
push
push
pushl
push
call
cmpl
jb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
push
mov
xor
mov
push
add
jmp
notl
mov
movl
mov
inc
movl
cmp
movl
jb
subl
mov
xor
add
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
call
jmp
mov
addl
xor
mov
orl
add
movzwl
mov
mov
sub
mov
mov
orl
movzwl
adcl
xor
xorl
add
mov
movl
mov
inc
mov
mov
cmp
jne
sub
mov
xor
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
call
mov
dec
mov
jmp
add
xor
mov
mov
xor
add
and
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
call
mov
dec
mov
jmp
movl
movl
cmpl
je
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
adc
movl
mov
adc
mov
movzbl
add
mov
mov
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
push
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
call
jmp
add
mov
mov
mov
movl
je
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
pushl
call
jmp
mov
mov
add
mov
mov
xor
sbbl
xor
addl
sub
sub
sbb
xor
mov
add
mov
mov
lea
mov
mov
xor
mov
andl
add
adcl
imul
orl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzwl
sub
mov
add
sbbl
and
mov
xor
or
adc
mov
andl
mov
andl
add
movl
or
andl
mov
and
mov
movl
cmpl
je
cmpl
jl
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sub
sbb
add
subl
mov
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
mov
add
addl
xor
xorl
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
push
pop
push
js
pop
imul
cmp
jae
jnp
pushf
jnp
dec
mov
push
in
jbe
or
push
and
jp
pop
sub
les
or
mov
imul
sub
and
mov
cmp
or
cmp
aad
enter
cld
inc
pushf
xor
xchg
hlt
jno
js
pop
cli
cld
loopne
test
lret
add
stos
fcompl
xchg
xor
inc
aam
pop
mov
div
nop
enter
dec
or
mov
loop
hlt
enter
lds
pmullw
popf
push
insl
adc
pop
mov
loopne
xchg
or
addl
cli
stos
mov
aaa
mov
jg
out
push
arpl
bound
xor
ja,pn
dec
nop
add
dec
mulb
xchg
int
scas
dec
in
dec
cmpsw
mov
sbb
shlb
jecxz
movsl
sbb
push
lahf
outsl
ret
mov
mov
add
or
add
jo
sub
gs
stc
loopne
insb
lea
icebp
mov
cs
cwtl
lds
mov
test
inc
mov
scas
jg
inc
add
adc
sub
int3
out
dec
pcmpgtw
js
in
loop
jbe
add
mov
dec
or
pop
lret
fwait
in
sti
cwtl
inc
or
xor
and
or
icebp
add
adc
mov
cmpsb
push
adc
stos
ds
and
or
sbb
popf
push
sti
stos
js
mov
push
stos
aam
push
pop
pop
enter
pop
iret
inc
inc
fidivs
pop
pop
je
imul
or
dec
mov
mov
rorb
push
cmp
jno
out
adc
lret
in
fistpl
and
mov
pop
je
mov
or
push
sbb
pop
jge
push
add
addr16
cmp
lods
push
or
cmp
pusha
add
xchg
cld
pop
out
repnz
inc
and
cltd
leave
ret
aas
out
dec
xlat
ja
movsl
dec
push
and
push
push
jmp
inc
push
xchg
xor
lcall
stos
fisubrl
xlat
cmc
sbbb
inc
xor
repz
pop
jmp
dec
outsb
push
pop
xchg
xor
pop
or
hlt
in
imul
jbe
add
push
and
fcomps
jno
mov
addr16
cmp
fwait
cs
jmp
cmc
jp
adc
jns
xchg
aad
cmp
add
and
pop
jo,pt
in
scas
jg
ret
adc
mov
jns
lcall
filds
movaps
push
lds
aad
dec
int
mov
push
push
mov
cmp
nop
pop
ret
movsb
push
and
call
jns
pusha
add
pusha
lret
divl
addb
push
push
lds
aad
mov
pop
outsb
test
and
jb
mov
das
ret
leave
sbb
cmp
cmpsl
jb
sbb
sbb
hlt
add
dec
repz
jge
clc
mov
jge
xchg
stos
out
dec
cwtl
xor
das
inc
push
repz
xor
movsl
pop
in
fucomp
enter
jmp
inc
push
inc
mov
outsb
adc
xchg
int
dec
mov
arpl
int
xlat
jl
sahf
xchg
shlb
adc
ds
or
outsl
leave
out
push
cmp
icebp
xchg
inc
inc
lahf
cltd
mov
stc
shl
jge
cld
flds
mov
push
ljmp
test
cmp
sbb
and
add
mov
popa
jl
mov
push
cmp
mov
and
adc
mov
push
sti
mov
or
nop
insl
mov
jns
cmp
xchg
in
jae
xchg
leave
popf
ja
scas
mov
xor
xchg
jo
jle
mov
dec
lea
sbb
scas
jge
sbb
pop
jae
mov
stos
popf
mov
and
cmp
fwait
popa
push
mov
jmp
ja
xchg
push
sbb
insb
and
mov
jno
daa
cmp
sbb
mov
dec
into
mov
fs
jge
mov
dec
mov
push
imull
movsl
aas
divl
dec
inc
cs
mov
add
jbe
jg
scas
andb
mov
push
and
cmp
dec
ss
cmp
push
cmp
das
mov
arpl
shlb
fidivs
sti
ss
fwait
and
out
call
das
xchg
sub
add
or
sub
mov
scas
and
test
adc
daa
lds
add
ror
mov
movsb
and
mov
addr16
xor
leave
scas
mov
test
aad
ja
sub
jmp
je
inc
inc
sbb
dec
sbb
shlb
lock
mov
insb
into
mov
arpl
hlt
jb
mov
adc
pushf
pushf
and
jle
push
mov
imulb
mov
xchg
jmp
sub
lcall
and
fistpl
sub
or
xchg
mov
jbe
push
ficomps
lea
scas
ds
and
pop
xor
es
cmp
addr16
lods
nop
in
dec
add
push
lret
popf
or
pop
xor
clc
aaa
fsubs
orb
fwait
jbe
loope
test
sahf
sub
pop
cmc
add
dec
jbe
shr
stos
adc
mov
jecxz
inc
sahf
repz
and
xchg
in
scas
out
add
sbb
stc
mov
aas
fimuls
jne
cwtl
imul
jae
imulb
cmpsb
dec
cli
mov
fisubl
into
sub
pushf
mov
fisttps
enter
test
cmp
dec
rcl
loopne
and
shl
ds
sbb
sbb
mov
mov
sub
pop
inc
and
nop
push
xor
mov
and
xchg
sbb
sti
inc
pop
insl
sub
out
xchg
in
fstl
mov
daa
pop
xchg
aaa
sub
mov
xchg
mov
aam
int
sbb
dec
cmp
lret
ret
ds
adc
fiadds
std
sbb
js
shlb
stos
ljmp
xchg
or
jne
dec
push
or
dec
test
pop
mov
pop
jp
fiaddl
jge
add
in
ret
pop
sub
clc
or
adc
add
mov
and
adc
mov
pop
fdivl
sub
or
mov
jmp
push
and
popa
out
pop
into
in
test
or
adc
iret
push
or
testb
dec
dec
out
clc
and
xor
adc
xor
lods
or
mov
nop
jne
dec
daa
scas
cmp
gs
cmp
adc
lret
es
mov
fidivs
add
int3
mov
stos
push
int
insb
mov
lret
sti
lahf
push
loop
data16
aam
clc
lods
xchg
sbb
jno
enter
xchg
cmp
je
and
cmp
cli
dec
mov
xor
pop
fdiv
pop
iret
in
mov
aad
movsl
loopne
mov
lds
lret
xchg
dec
fldenv
jbe
movsb
fwait
das
dec
xchg
cld
jo
decb
jp
mov
xchg
sub
xchg
xchg
inc
and
xchg
mov
cli
in
stos
sarb
jae
rcll
xchg
or
mov
clc
pop
hlt
mov
lret
outsb
lret
fs
pop
pushf
rorb
je
push
shll
and
cltd
fs
sti
cli
pop
add
push
push
cmp
push
lea
stos
xchg
jns
dec
xchg
nop
ja
repnz
scas
mov
mov
sub
das
adc
mov
add
subl
pop
inc
jne
push
jne
push
add
cmp
cld
mulb
int3
push
es
imul
pop
shrb
lods
add
sbb
jmp
add
dec
test
ds
popf
test
out
jno
and
mov
je
push
xor
xchg
sub
movsl
pop
push
and
inc
orb
pop
int3
xor
and
jns
aam
adc
jl
pop
mov
daa
out
into
mov
pop
add
pop
add
or
lods
mov
adc
mov
or
stos
and
dec
mov
int
pop
push
fmul
jb
insl
push
lock
out
lods
mov
lcall
and
xchg
add
ljmp
jo
mov
rcrb
fcoml
add
and
bound
outsb
mov
andb
xor
mov
pop
aas
rclb
int
cmp
inc
mov
into
mov
inc
add
sarb
fiadds
xchg
cmp
xor
sbb
lcall
jecxz
mov
push
lahf
push
adc
mov
clc
cmp
fimull
fidivrs
dec
xor
into
and
mov
shl
fs
push
clc
jecxz
push
sbb
nop
aaa
push
sarl
jbe
mov
adc
stos
mov
push
scas
sub
and
push
mov
pop
cmpsl
ror
jg
fiaddl
pop
fcoml
das
ds
push
ljmp
outsl
scas
ret
push
pop
jecxz
cltd
call
xchg
mov
mov
std
int
cli
adc
cmp
fsubs
jbe
pop
mov
in
jae
push
shrl
jne
cmp
mov
xchg
fmul
lcall
test
sub
inc
cwtl
mov
xchg
inc
push
push
mov
mov
cmp
mov
cmp
adc
pop
jg
ds
adc
outsb
enter
movsl
ds
fdivs
dec
push
sbb
inc
sbb
jg
or
xor
push
pop
scas
jb
lods
lcall
sub
adc
test
push
ds
int
sbb
push
cmpsb
mov
ror
mov
jo
sub
mov
push
out
pop
adc
cli
inc
xor
cmp
andb
dec
xor
pop
std
mov
jnp
jne
lods
xchg
pop
xor
mov
outsl
fdivp
sar
mov
popa
out
loopne
pushf
xchg
sahf
outsl
dec
push
cmpsl
mov
imul
clc
mov
add
xor
jecxz
or
xor
cs
sbb
xchg
push
adc
imul
cmp
cs
push
jle
lret
movsb
adc
jmp
fmul
dec
inc
xor
negb
mov
sbbl
inc
mov
add
pusha
adc
sub
aaa
loope
pop
pop
or
push
mov
insl
in
dec
xor
das
addb
and
insl
ds
adc
cmp
mov
jge
jb
lock
adc
push
arpl
arpl
setno
push
xor
imul
shrl
mov
dec
popf
aas
and
fdivr
shll
xchg
call
pusha
mov
jl
rcrb
mov
rcrl
std
mov
aaa
insl
fnsave
insl
shrl
ja
mov
je
sbb
sti
jo
add
imul
mov
es
push
mov
push
shr
stos
addr16
dec
fmulp
cmp
cltd
test
dec
push
rclb
inc
pop
fstl
iret
sbb
jno,pt
adc
mov
das
sub
ret
jo
dec
jae
inc
in
push
cltd
pushf
jmp
jle
mov
cltd
rcrl
sbb
jbe
repz
push
iret
dec
cmpb
lds
data16
cwtl
push
sbb
cmc
out
sub
xor
inc
xchg
cmpsb
xchg
and
adc
or
in
addr16
sbb
jne
sbb
imul
test
jb
pop
pushf
or
movsb
repnz
imul
or
lret
bound
rol
mov
shll
pusha
test
call
ficomps
lcall
sbb
std
adc
jl
inc
lock
xor
jae
lea
fnstsw
cmc
repz
mov
xor
test
mov
cltd
jmp
dec
cltd
mov
fldl
pop
scas
jmp
push
call
jle
xor
fcos
sahf
xlat
sbbb
adc
add
push
inc
hlt
lods
enter
repz
push
mov
clc
imul
stos
cmpsl
cmp
mov
mov
mov
ss
cmp
inc
mov
cmpsl
icebp
mov
dec
lds
sub
and
mov
lret
adc
mov
pop
fcmovu
cwtl
test
mov
enter
push
orl
push
loopne
lcall
push
out
je
lahf
test
aam
and
iret
aaa
push
push
or
insl
mov
lock
pop
cwtl
push
pop
or
jo
jecxz
jp
push
adc
fld1
add
pusha
ficompl
xor
xchg
int3
js
add
jns
shl
mov
pop
notb
shrb
or
sub
mov
mov
pusha
jecxz
xor
or
fwait
dec
lea
shl
inc
push
pusha
js
jecxz
ja
xchg
jl
lods
int
je
sar
scas
lcall
scas
in
xor
xor
jbe
in
cltd
mov
lret
in
mov
xor
mov
add
imulb
movsb
lea
inc
lds
arpl
lahf
push
out
lea
rcll
and
enter
xchg
pop
shl
sub
push
mov
inc
push
jne
or
and
rcll
addl
std
jmp
loop
jb
xchg
mov
sub
sub
xchg
or
xchg
xor
in
dec
sbb
cmp
stos
pop
mov
mov
hlt
sub
mov
pusha
sti
xchg
pushw
sub
sbb
fldln2
aam
add
add
loope
sub
into
adc
jo
mov
in
push
testb
fsubrs
push
xchg
inc
sahf
mov
xchg
push
push
or
out
aad
inc
imul
jbe
jecxz
ljmp
adc
mov
adc
stos
rcrl
jg
rcpps
out
movsb
int
or
inc
xor
push
into
filds
aam
call
mov
gs
add
movsl
bound
sti
fimull
rolb
aad
adc
jne
test
mov
mov
sbb
mov
dec
imul
add
sub
sahf
or
pusha
jg
or
sbb
xchg
arpl
or
mov
mov
sbb
cmp
repnz
iret
stos
jb
or
jmp
insb
mov
push
xchg
mov
push
or
sarb
loopne
in
lret
xor
ret
mov
cmp
test
inc
mov
xor
mov
shrl
jbe
mov
xor
mov
dec
pop
jne
jmp
mov
adc
xchg
aaa
cltd
scas
rcr
adc
je
dec
sub
fmul
sub
dec
loopne
das
pusha
aas
stos
insl
fcoml
out
es
jne
jp
out
flds
rorl
cwtl
ret
mov
push
xchg
mov
sahf
inc
adcl
fldt
das
cmpsl
loop
mov
mov
push
scas
sbbb
in
in
test
out
mov
rcrl
mov
lods
repnz
cmpsl
stos
nop
dec
in
jmp
ja
jne
inc
scas
cmpsb
cltd
dec
insb
push
pushf
mov
lea
mov
sti
xor
insl
jne
jecxz
loopne
cmp
test
add
test
mov
cmc
aaa
sub
and
or
cmp
xchg
sbbb
lea
push
pop
xor
adc
mov
sbb
cs
out
leave
scas
bnd
push
sub
cmp
out
test
mov
pop
mov
adc
cwtl
mov
idivb
cmc
cwtl
lock
ficompl
incl
push
inc
add
rclb
lods
push
mov
fwait
movsl
sbb
mov
popa
inc
nop
xchg
mov
outsl
sub
mov
test
out
adc
xchg
pushf
fwait
aas
rorl
mov
into
cmp
testb
mov
pop
sarb
xchg
or
push
out
mov
test
jns
test
imul
mov
mov
fistl
jne
into
pop
dec
pop
outsl
fildll
aad
jno
sub
lds
adc
cmp
inc
fsubrl
lods
int
pushf
xor
jle
inc
into
test
test
decl
fidivrs
inc
out
into
sbb
adc
mov
dec
jo
pop
adc
cmp
test
xor
pop
sub
adc
enter
cmp
add
mov
je
mov
xor
mov
testl
movsl
sbb
fistpll
push
sub
in
xor
xlat
pushf
mov
push
sub
mov
repz
xor
add
or
mov
lods
push
add
push
std
add
cwtl
or
inc
push
adc
and
shll
pop
cmp
mov
int3
inc
decl
jne
lds
addr16
jb
enter
dec
pop
push
out
dec
sub
push
dec
lock
xchg
dec
jns
jl
int3
clc
cmp
fbstp
push
cmp
add
pop
mov
loop
adc
add
sub
mov
pushl
inc
pop
ja
sub
add
sub
je
addr16
mov
lcall
dec
xor
leave
cmpsb
mov
xchg
adc
in
mov
inc
xchg
aas
mov
xchg
test
lcall
push
mov
fwait
scas
dec
jno
pushf
je
lcall
add
sbb
pop
cltd
xchg
and
test
pop
push
mov
and
add
jo
pop
cmpl
notb
ds
mov
sub
lds
roll
stos
pop
out
xchg
jl
aam
lahf
sti
adc
sub
nop
adc
xchg
lret
xor
data16
dec
in
dec
inc
inc
std
lea
sbb
insl
out
negl
dec
lea
in
cld
fmuls
xor
lret
adc
sbb
cmpsb
jge
add
pop
mov
push
rclb
inc
sahf
scas
cmp
sbb
test
xlat
jmp
inc
xor
pop
adc
push
sub
mov
out
outsl
add
jnp
push
popa
xchg
jns
mov
mov
mov
pusha
cltd
lods
insl
sub
fidivrs
mov
add
cmc
rolb
mov
add
repz
mov
outsb
xor
push
sub
int3
xlat
xchg
ds
mov
add
ljmp
inc
and
lahf
mov
inc
outsl
nop
or
fildl
arpl
mov
out
sar
mov
out
push
scas
xchg
dec
or
cwtl
addr16
sahf
sbb
testb
out
sbbb
pop
jae
sti
adcb
out
mov
sub
mov
pop
cmpb
or
mov
aas
adc
in
insb
inc
mov
mov
ffreep
push
mov
adc
stos
pop
xchg
int
lods
inc
call
cmp
stos
scas
out
adc
das
call
stos
mov
jecxz
sbb
jmp
jo
mov
cmp
nop
cmc
jbe
xor
int3
sub
cld
fwait
test
lock
mov
sti
cli
adc
aas
jp
and
sti
mov
movsl
or
addr16
or
jle
dec
lods
sbb
addb
fnstsw
inc
mov
xchg
cmp
sub
into
insb
daa
push
push
or
jmp
pop
test
int
imul
cmp
and
inc
mov
adc
jge
fwait
adc
sub
outsl
xor
sbb
repnz
sti
push
ret
aas
decb
mov
mov
loop
in
sub
push
dec
dec
and
and
ficomps
or
repnz
push
sub
mov
stc
jp
enter
push
out
psubusb
push
divl
jae
mov
mov
push
cmp
movsl
pop
add
mov
jecxz
rcrb
das
dec
mov
jle
sub
cmp
add
sbb
mov
daa
and
pop
std
ret
iret
lea
test
lods
ja
or
outsb
lods
ljmp
testb
add
fsts
push
xor
out
mov
xchg
jbe
and
lea
push
stos
cs
lahf
mov
rol
ljmp
xlat
push
push
mov
out
dec
lret
fisubrl
adc
and
push
pop
mov
stc
mov
xor
inc
faddl
aad
push
mov
das
or
jae
jae
test
cmp
hlt
cmp
dec
dec
add
clc
xor
adc
into
aas
and
sbb
in
mov
or
mov
imul
cs
add
daa
std
mov
mov
cmp
insb
or
sub
stos
mov
fistps
ret
lcall
lcall
pop
mov
nop
je
pop
out
xlat
cwtl
iret
mov
outsb
shll
push
lcall
pop
sub
lds
xor
cmpsb
mov
adc
xchg
das
cmpsl
aas
xchg
fsubl
int3
push
xchg
pushf
call
mov
loop
add
jno
out
xchg
loopne
fstps
popa
sub
std
orl
cmp
jle
xor
sbb
xlat
and
loope
cmp
ss
pop
push
or
adc
sub
xor
mov
int3
orb
push
xlat
insb
sti
hlt
inc
sbb
aad
test
aas
les
jb
in
gs
ret
mov
addl
xor
cmpsb
outsb
jno
xchg
sub
xchg
inc
mov
in
iret
or
inc
mov
ret
cmp
jp
add
pop
mov
sbb
cmp
mov
lods
xor
mov
pop
repz
stos
pusha
in
xchg
lods
shll
icebp
out
jg
mov
ja
addl
dec
aad
sbb
fldcw
popa
cwtl
fyl2x
jecxz
push
xor
ficompl
inc
addr16
cld
popf
test
sub
lods
sub
mov
fdivrp
mov
sub
cmp
movsl
inc
lods
repz
and
inc
movsb
mov
mov
scas
js
cmp
lret
and
cmp
cmc
pop
std
movsl
pop
push
mov
pushw
in
nop
dec
push
add
dec
cli
test
out
pop
std
pop
les
sub
outsb
ljmp
aam
sbb
lret
insb
push
xchg
in
dec
hlt
sti
sub
sub
les
stos
mov
mov
enter
pop
gs
lock
push
sti
jno
inc
cmp
sub
or
aad
lret
into
mov
in
popf
jo
push
popf
xchg
or
xor
dec
out
xlat
aam
stc
or
push
out
xor
repz
mov
inc
and
add
dec
movsl
sbb
lret
ret
not
cmpb
mov
jg
int3
loope
cmpsl
mov
xchg
sbb
inc
orl
sbb
pop
mov
pop
dec
popa
inc
insl
fimull
jnp
adc
cmpsl
fnsave
lret
mov
pop
adc
fadd
movsl
daa
imul
adc
mov
ja
push
push
push
adc
push
stos
xor
xlat
dec
in
mov
cs
test
pop
gs
ss
cmpsl
aad
push
lahf
push
in
movsl
add
or
jle
adc
ret
std
and
inc
jge
nop
lret
push
in
adc
in
in
faddl
adc
or
push
sub
mov
pop
or
ljmp
lret
in
dec
ficompl
and
xchg
xchg
roll
dec
lock
fcoms
mov
xchg
xchg
mov
jmp
insb
aam
scas
or
test
add
mov
mov
add
xchg
repz
pusha
or
out
lock
push
enter
or
and
das
or
enter
mov
xchg
testl
pop
pop
sbb
sub
ljmp
jns
dec
je
pop
xor
cmp
dec
dec
imul
shrb
sahf
mov
outsl
xchg
jmp
xor
aad
aas
repz
sti
fdivl
xchg
sarb
mov
jmp
push
add
pop
ja
lock
fcoms
xchg
into
pop
les
mov
and
jge
jae
mov
nop
shll
in
pushf
aaa
ja
add
jae
cltd
or
adc
lcall
mov
ds
out
loopne
sbb
xchg
movsb
xchg
push
and
sahf
lret
sub
add
add
dec
push
sahf
lahf
and
addr16
scas
in
pop
pop
clc
arpl
outsb
mov
and
sub
lcall
loopne
pushf
into
mov
cltd
mov
sti
xor
fdivs
seto
test
ret
popf
mov
xchg
inc
jecxz
jo
add
mov
mul
adc
lahf
je
push
cmp
cmpsb
mov
lret
xchg
iret
and
xor
dec
push
cld
arpl
push
jo
ja
or
bound
sbbb
push
sub
lret
int3
into
fdivl
fwait
xchg
fidivrl
push
push
js
mov
push
xchg
push
sahf
ret
fwait
and
jp
pop
mov
fwait
sub
mov
inc
popl
xor
pop
loopne
imul
push
pushw
push
js
xor
in
mov
jo
test
lcall
outsl
jle
adc
data16
xchg
pusha
and
jns
jmp
mov
out
ljmp
push
clc
mov
imul
mov
inc
out
addl
jp
mov
popf
push
imul
xchg
rcl
push
and
xor
xchg
mov
mov
pop
int
adc
xchg
clc
xor
jmp
dec
out
orl
add
xchg
out
pop
adc
cmp
pushw
adc
imull
test
sub
daa
cwtl
add
imul
cmpsl
jmp
pop
xor
mov
jp
stc
push
adc
mov
jle
lds
jns
mov
sub
icebp
inc
mov
sbb
jbe
cs
sti
cmp
lret
mov
gs
jnp
aam
xor
mov
dec
fistpll
mov
fwait
pop
jbe
rorl
movsl
sti
mov
loop
mov
cmp
movsb
sbb
cmp
call
stos
jbe
adc
push
decl
dec
cmp
into
sub
mov
pop
lds
push
or
adc
mov
jecxz
and
inc
fstp
mov
cld
pop
insb
or
sub
ja
xor
jmp
ljmp
out
cmc
xor
xor
mov
imul
mov
fwait
mov
leave
mov
rcr
inc
mov
stc
aam
adc
insb
xchg
sub
ss
pop
aaa
lea
sbb
or
das
push
push
pop
test
data16
jl
cltd
arpl
sub
mov
outsl
jno
and
cmp
xor
jle
jp
popa
out
lcall
jae
add
data16
or
mov
xor
sbb
xchg
out
mov
jnp
xor
or
pop
in
pop
fcmovu
push
inc
jno
sub
lea
pop
push
in
cli
pushw
pop
fs
inc
push
rorl
push
push
popa
xor
push
mov
inc
les
mov
fnstsw
addr16
lock
xor
mov
imul
or
xchg
mov
dec
pop
pop
scas
xchg
clc
cmp
cmpl
sbb
pop
cmp
in
adc
mov
fmul
sbb
or
int
jecxz
shrb
xchg
arpl
xor
xor
mov
pop
mov
jb
jnp
hlt
push
fnsave
lret
cmp
das
in
ljmp
lgdtl
scas
mulb
xor
push
mov
pop
testb
pusha
add
fwait
mov
je
aaa
mov
add
inc
and
sub
or
cmp
inc
aaa
out
adc
loop
jle
fimull
gs
outsb
fists
test
add
or
adc
pop
jnp
xchg
lea
sbb
cmp
add
pop
xor
rcrl
bound
and
cmp
js
jmp
sub
lds
test
rcrb
fisttps
pushf
daa
and
sub
push
sti
call
aad
add
idiv
jle
push
or
cld
cmc
sbb
mov
xor
mov
mov
aas
jno
xchg
test
fs
data16
add
push
shlb
inc
xchg
mov
call
hlt
ds
pop
cmp
sbb
inc
ret
sub
xchg
cmp
push
rorb
loope
sub
into
lcall
cmp
ror
aam
sbb
adc
pop
fbstp
pop
scas
xchg
fiaddl
or
addr16
mov
in
pop
inc
add
mov
cltd
dec
sahf
fcompl
xorl
out
cmp
mov
movsl
cs
lahf
xchg
mov
sti
adc
xor
sbbl
pop
dec
mov
sub
cli
jmp
iret
aaa
push
xchg
pop
lods
or
push
dec
xchg
or
pop
inc
inc
cmp
pop
or
jo,pn
lods
stos
int
mov
icebp
xchg
stos
pushf
jo
es
in
pop
jl
ret
dec
dec
xor
jbe
cwtl
xlat
xchg
pop
pop
in
sub
psraw
sbb
mov
outsb
out
dec
out
movsl
xchg
push
cmp
dec
or
das
add
imul
adc
into
cwtl
push
jge
test
movsl
fidivrs
iret
nop
xor
xchg
out
jmp
rclb
and
and
ljmp
out
or
aad
cmp
rcrl
cld
mov
cmp
jmp
mov
sbb
inc
nop
pop
sbb
fwait
jmp
pop
cwtl
daa
adc
inc
push
jp
in
xchg
xchg
add
mov
outsl
fsubp
jb
aaa
xchg
rolb
outsl
xlat
repz
dec
xor
mov
mov
notb
in
movsb
scas
mov
xor
inc
xchg
bound
nop
pop
inc
push
jns
loopne
ficompl
out
popa
or
jno
xchg
jge
dec
ss
sub
cmp
adc
rcpps
ret
fwait
into
js
lret
jl
es
lods
xchg
xor
cmpsl
jnp
divb
cli
arpl
mov
jl
bound
lock
or
mov
ret
jl
outsb
add
dec
push
xchg
dec
inc
shlb
pop
in
xor
push
mov
adc
pushf
add
ret
outsb
test
outsb
inc
aam
aas
loope
shrl
pop
xor
dec
push
cmp
sbb
adc
adc
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
jmp
outsl
sub
xchg
divb
daa
mov
mov
jp
mov
jnp
lret
ret
int3
addb
pop
or
les
fscale
sbbl
add
mov
repz
jle
jns
cli
pusha
xchg
mov
cltd
notl
push
jle
inc
leavew
orl
cmpsb
fucomp
les
jb
adc
dec
enter
sbb
and
mov
ficompl
xor
lock
test
inc
pop
popa
mov
pop
pop
pop
mov
inc
in
ljmp
cmp
xchg
testb
and
inc
jae
stos
push
fwait
lods
insw
or
stc
xchg
jns
vsqrtss
sbb
jae
loope
mov
sarl
addr16
sub
jne
xor
xchg
lea
aad
cmc
mov
test
dec
add
push
inc
jmp
lds
add
xchg
mov
push
adc
mov
mov
mov
cmp
imul
test
or
dec
inc
pop
fstl
sub
sbb
imul
mov
ss
dec
lahf
ljmp
shlb
hlt
pop
lds
aas
push
orb
mov
xorb
stc
repz
xchg
mov
sub
cmp
lcall
aaa
popa
inc
sbb
test
popf
sahf
push
mov
cmp
push
shld
cmp
mov
sbb
je
push
push
fs
pop
xchg
mov
adc
push
cmp
adc
sub
adc
repz
and
sub
mov
stos
sbb
sbb
adc
add
sub
mov
aas
nop
and
cli
loop
mov
iret
insb
push
cmp
jnp
fxch
xchg
sub
mov
xor
std
jno
or
fmuls
cmp
dec
mov
pusha
lea
imul
sar
xor
fcom
outsl
xchg
rorb
addr16
inc
ficoms
jne
pushf
ficomps
jnp
mov
in
xchg
mov
lcall
rolb
adc
lret
and
pop
mov
outsl
int
jb
aas
jae
fstpl
mov
and
push
stos
ja
jae
xor
cwtl
incl
xor
mov
push
imul
jp,pt
imul
adc
or
pop
std
mov
dec
push
inc
testb
adc
mov
and
lds
mov
roll
popa
push
add
fcompl
pop
repz
and
pusha
inc
adcb
mov
xchg
cld
lahf
aas
push
mov
mov
or
inc
mov
das
in
in
addl
mov
in
inc
mov
dec
xor
mov
cmp
and
fnstenv
adc
aad
sbb
mov
sarb
ret
jge
and
xchg
inc
or
mov
in
cmp
leave
gs
fimull
outsb
out
movsb
in
fs
sbb
fnstcw
mov
sub
pop
push
shll
inc
bound
cmp
sub
rorl
pop
mov
fildl
outsb
add
jl
popa
mul
negl
push
push
lsl
insl
pop
xchg
xchg
cmc
fwait
stc
mov
mov
xor
pop
xchg
mov
sbb
popa
outsl
adc
cli
xlat
add
and
inc
pop
push
add
mov
mov
and
movsb
gs
ficompl
dec
mov
bound
movsb
inc
xchg
lahf
insl
jecxz
cltd
dec
ret
add
decl
es
popa
insb
int3
add
mov
popf
and
mov
pop
push
scas
imul
mov
fcmovne
scas
push
sti
add
inc
lods
inc
and
rolb
inc
push
add
jne
outsl
pop
popf
out
mov
inc
jl
scas
adc
popa
lock
mov
inc
decb
xchg
call
addb
adc
mov
cmp
inc
pop
popl
xchg
in
sti
or
lret
sub
je
mov
or
lret
fcompl
ja
inc
shl
test
pop
lret
inc
loopne
inc
fwait
dec
pop
notb
jge
mov
adc
sahf
repnz
movsl
pusha
push
sahf
nop
pop
inc
or
not
pushf
fwait
imul
shr
mov
sbb
mov
stc
int
in
push
repz
cld
jp
or
in
jp
hlt
jecxz
arpl
push
cltd
mov
fwait
ret
jne
push
fildl
sbb
test
ret
popa
and
sbb
out
mov
xlat
mov
push
inc
xorl
jecxz
inc
mov
hlt
jne
push
pop
xchg
dec
fldenv
jae
jge
pop
jmp
pusha
sub
fcompp
jo
and
stc
xchg
loope
pop
scas
push
div
dec
movsl
outsl
mov
dec
dec
push
mov
mov
out
push
pop
iret
arpl
cmp
data16
divb
xchg
fisttps
mov
mov
bound
xchg
and
jo
test
fldt
jp
jle
orb
sub
imul
pushf
lods
addr16
xorb
aam
dec
test
imul
mov
cmc
scas
sbb
jne
aad
pop
mov
pop
sti
int
cmp
or
or
ds
mov
jo
sub
cmp
cmpsb
test
sub
test
popf
fidivs
iret
sbbl
add
xor
repz
sub
and
mov
pop
pop
jae
lock
inc
bound
ret
jmp
adc
aaa
rcr
push
jne
lods
xchg
aas
pop
push
imul
nop
sbb
ss
and
jl
xchg
ja
stos
inc
jo
and
pop
push
inc
cmpsl
test
mov
xlat
arpl
cmp
pop
stc
dec
pop
pushf
lods
outsl
dec
fs
push
pop
adc
pop
push
dec
ljmp
std
stos
mov
mov
xchg
pop
inc
push
push
gs
leave
cmpsl
cmpsl
movsl
fcoms
inc
inc
push
jns
or
mov
lret
xor
idivl
mov
and
testb
xrstors
fs
or
adc
jl
sub
dec
stc
push
imul
jmp
xchg
jmp
dec
ja
mov
hlt
movsb
dec
setnp
and
push
mov
cmp
dec
test
lret
jno
jne
adc
and
cmpl
filds
sub
std
push
add
adc
sbb
add
inc
bound
jae
push
pop
arpl
out
inc
mov
int3
cwtl
cmp
xorb
outsl
cmpsb
sbb
sahf
rol
outsl
mov
dec
imul
dec
dec
xor
cmpsb
shlb
leave
or
mov
lods
jae
outsl
orb
cmpsb
mov
scas
jnp
int
push
dec
cld
cmp
lret
xorl
adc
push
add
iret
fisttps
sbb
movsb
cmc
cmp
mov
dec
loopne
jno
pusha
js
aas
or
es
fdiv
pop
cwtl
xor
mov
xchg
sbb
sti
pop
jns
mov
add
cmp
cwtl
bound
out
daa
cs
out
jle
push
fdivs
cltd
mov
xchg
xlat
pop
sbb
or
jecxz
loopne
aas
fwait
test
fwait
loopne
lret
dec
lcall
sub
popf
add
mov
mov
mov
push
nop
fisttpl
in
addb
mov
popf
adc
subl
mov
mov
fiaddl
aam
xchg
mov
push
outsb
stos
dec
cmp
iret
jmp
mull
cmp
lret
jne
je
adc
aaa
sub
in
or
add
sti
cmp
xor
je
fs
cmp
sbb
sub
insb
sbb
ja
rcrb
cmp
push
jmp
mov
mov
data16
push
cmp
movsb
stc
rorl
and
pop
push
mov
outsl
dec
jle
rorb
mov
outsb
sbb
cmp
hlt
push
sub
push
xchg
loop
icebp
outsb
sahf
cli
mov
push
cmp
push
inc
inc
xor
xchg
cmpsb
aad
inc
std
sbb
and
gs
dec
aaa
cmp
dec
clc
pushf
add
into
xor
lods
or
icebp
xchg
cmp
adc
jp
inc
dec
stc
cld
xchg
pop
sbb
pop
fdivl
lock
lret
adc
sub
in
push
or
fwait
xchg
inc
enter
pop
or
shlb
cs
pushf
mov
inc
push
out
imul
fidivs
mov
sbb
add
pop
sbb
jp
mov
add
and
and
lcall
mov
ficompl
dec
jp
jo
xchg
adc
cmp
sbb
loop
and
lea
pusha
jns
cs
cs
or
idivl
push
add
sbb
pusha
into
cmpsb
xchg
jecxz
xlat
repz
mov
out
push
or
insb
shlb
xor
add
dec
out
es
xchg
inc
pop
pop
mov
xchg
movsl
and
test
fcmovbe
popf
xchg
loop
dec
inc
stos
jbe
xchg
push
pop
add
movsw
sub
mov
xor
pop
in
and
stc
andb
arpl
das
movsb
cld
out
mov
cmp
sub
mov
jl
lcall
pop
in
mov
out
xor
imul
xorl
shlb
mov
inc
and
dec
push
test
mov
adcb
loop
gs
inc
push
mov
dec
sbb
lea
mov
aad
imul
inc
add
test
jbe
iret
andb
cld
pop
push
add
adc
jmp
sti
addr16
idivl
and
mov
adc
sbb
jbe
test
ficoms
lret
push
rorl
and
pusha
sbb
push
push
mov
outsb
scas
rcl
xchg
ret
jecxz
lret
cmp
jnp
dec
inc
xchg
lcall
mov
pop
out
cmp
push
mov
adc
movsl
adc
push
out
jno
mov
addr16
xor
testl
sub
mov
sbbl
mov
cmc
xor
sub
mov
dec
push
cmp
mov
test
mov
push
out
or
jmp
sub
mov
lods
scas
jo
xchg
mov
test
push
test
sti
dec
sub
rol
xchg
pusha
ret
xor
mov
mov
jo
inc
push
inc
jecxz
adc
int3
popf
mov
sub
adc
or
iret
sbb
testl
or
add
std
add
loope
inc
xchg
test
add
addl
repnz
mov
mov
xchg
sub
imul
lcall
mov
clc
pop
or
in
mov
inc
icebp
and
mov
cltd
cmpsl
dec
clc
lea
and
mov
fsubl
mov
xchg
imul
jle
imul
into
add
mov
je
jbe
pop
cmpsl
push
pop
or
mov
or
out
push
push
fst
and
xchg
in
mov
push
mov
insl
xchg
shlb
fcmovnbe
lahf
rorl
cmc
xchg
add
add
es
loopne
xor
sub
inc
sbb
mov
addr16
mov
fsubrs
negl
stos
addl
orl
dec
lahf
sub
add
dec
add
dec
jg
ss
arpl
in
push
mov
jo
filds
lcall
or
mov
arpl
sbb
mov
sti
inc
xchg
add
sti
or
push
sbb
in
addr16
movsl
push
outsl
icebp
and
les
mov
aas
test
lea
and
pop
sarl
sbb
dec
mov
mov
sub
test
jge
aad
fsubl
sti
jo
scas
fwait
dec
or
and
mov
imul
dec
int3
loop
or
enter
mov
out
shlb
popf
in
into
popa
test
arpl
sbb
inc
jns
adc
mov
xchg
imul
mov
push
xchg
out
or
or
jl
sub
test
inc
inc
pop
push
pop
add
push
jl
popf
jb
push
mov
addr16
jae
dec
xchg
icebp
in
and
arpl
addl
dec
push
mov
inc
gs
push
pop
scas
loope
sub
pop
popa
int
fsub
add
divl
ja
sbb
pop
ret
fadd
jmp
add
lret
and
in
cld
repz
je
jmp
aam
xor
pop
cs
test
and
cmp
xchg
jae
movsl
frstor
pusha
cmp
nop
xor
xor
insl
push
jae
pop
mov
mov
out
mov
pop
mov
pop
mov
add
call
jbe
xor
icebp
jl
push
int
push
repz
mov
shrb
hlt
and
sub
xor
jb
sub
test
into
pop
stc
sbbb
es
test
xor
movsb
cltd
mov
sahf
xor
lea
mov
addr16
imull
xor
bound
stos
fs
xchg
jle
and
popf
mov
les
imul
arpl
sub
cmpsl
loop
fsub
push
dec
inc
frstor
jne
or
dec
insl
enter
pop
orl
or
mov
test
dec
les
insl
ret
out
sub
sarl
add
xchg
push
stc
addb
xor
push
xor
jecxz
ret
aaa
repnz
sbb
aad
xor
sbb
out
cmp
dec
lret
adc
fcmovbe
cmp
adc
xor
cmpsl
xchg
incl
cmp
jg
add
dec
ret
fs
pushf
pop
dec
jo
add
mov
cld
add
xchg
aam
enter
sub
inc
add
outsb
dec
inc
dec
sub
addr16
adc
subl
or
rcll
in
bnd
jbe
pop
add
jp
push
push
add
dec
js
mov
cmp
inc
dec
jo,pn
mov
jae
jnp
ret
sub
xor
cld
push
pop
out
aam
sub
jle
stos
ljmp
jno
sbb
cmp
clc
mov
in
outsl
repnz
hlt
das
fisttpl
adc
sub
xchg
cmp
std
shl
xchg
add
out
dec
inc
popa
mov
mov
jl
in
cmp
and
xor
push
xchg
aaa
lds
sbb
xchg
jle
loope
xchg
lret
inc
mov
imul
xor
jbe
dec
das
cmp
test
lahf
inc
xor
hlt
push
push
push
outsl
mov
rcr
jb
cld
lods
cs
mov
cmpsl
cmpsl
cmp
mov
mov
sub
and
aas
or
out
stos
dec
mov
mov
jmp
pop
add
cmp
fs
sbb
ss
lods
ja
inc
xor
and
loope
in
adc
sahf
jnp
inc
sub
pop
enter
xor
pop
jp
pop
or
xorb
outsb
or
xchg
daa
ret
fisttps
fs
jo
dec
jbe
aaa
stos
cli
inc
hlt
sahf
xor
ds
gs
pop
mov
jae
push
outsb
add
ret
mov
orb
popa
sbb
stos
fadds
test
stc
nop
stc
outsb
cmp
dec
cmp
adc
or
pop
dec
leave
ja
shl
cmp
nop
sub
jno
pop
inc
popf
pop
sahf
jmp
daa
push
nop
xorb
push
and
mov
and
sub
adc
cmc
xlat
imul
and
add
stos
enter
or
or
push
mov
dec
fstpl
aaa
push
or
call
js
inc
lods
mov
mov
test
aad
ss
fldl
xlat
xor
xchg
and
popa
lods
fstpl
xchg
xorl
xchg
and
ficoms
enter
sbb
lret
test
stc
pop
adc
std
xlat
dec
sub
sbb
ss
hlt
test
out
xor
push
inc
outsb
mov
fdivs
lret
sbb
rclb
idivb
fdiv
outsl
xchg
fldt
lret
arpl
sar
or
test
dec
pop
ret
xor
inc
lods
jno
in
or
inc
cs
cmp
fs
jle
inc
mov
inc
js
jmp
pop
xor
mov
mov
movsb
xchg
xor
fdivrp
mov
repnz
arpl
sarb
fisttpl
out
pop
add
and
movsb
and
pop
pushf
ror
inc
sbb
sbb
adcl
xor
in
sbb
lods
sbb
push
popf
xchg
push
push
pop
das
mov
xor
int
ljmp
in
inc
mov
inc
out
push
push
push
and
dec
cmp
in
sbb
jmp
push
inc
push
movsb
data16
les
shrl
testb
repz
lods
jne
xor
int
inc
fdivs
dec
lods
mov
and
xor
inc
out
add
in
in
sub
mov
cmp
rcl
shrl
push
jg
insb
enter
fisttps
push
in
jle
lock
test
out
into
add
mov
mulb
pop
int
and
aad
fwait
gs
divl
dec
gs
stos
stc
xchg
push
pop
imul
jns
mov
and
cltd
add
fcomps
mov
das
rcrb
xlat
fwait
mov
inc
sub
lods
in
pusha
lahf
pushf
jae
mov
and
sub
fldenv
xchg
adc
lea
repnz
mov
or
je
lods
mov
pop
mov
mov
xor
les
mov
cli
mov
rorl
push
pop
xor
rcrb
sub
fcom
push
incl
sub
rorl
pop
jg
inc
mov
cld
xchg
or
pushl
adc
out
xor
or
test
dec
mov
xchg
fs
dec
push
lret
and
cmpsl
mov
lcall
stc
mov
test
or
adc
cwtl
mov
int3
cmp
push
push
pop
mov
ss
xchg
cmp
mov
jmp
xchg
daa
es
push
clc
cwtl
inc
stc
push
into
lock
imul
add
sarb
loope
cmp
mov
push
cmp
push
cmc
push
lcall
jne
mov
stc
add
pop
out
ljmp
xchg
mov
imulb
daa
or
jle
mov
sbb
ss
adc
xchg
sti
pop
scas
sbb
in
xor
and
pop
xor
push
shl
outsb
jle
leave
inc
pop
in
jge
sbb
add
mov
fildl
cwtl
lret
repz
pop
mov
mov
sub
push
add
decb
in
scas
outsl
shrb
fstpt
or
inc
mov
loop
xor
mov
repz
pcmpgtd
cli
sahf
inc
adc
imul
inc
test
jne
jl
enter
inc
xchg
shlb
into
arpl
push
sarl
dec
enter
es
xlat
cmpsb
out
fiadds
hlt
or
jmp
daa
icebp
aas
lods
scas
mov
lock
sbb
lcall
daa
push
or
and
icebp
cmpsl
jle
in
in
insb
adc
outsb
xor
inc
cmpsl
dec
rorb
popf
repz
push
arpl
push
jns
pusha
jp
int3
das
push
xchg
inc
or
inc
es
clc
bound
ljmp
or
push
cwtl
ss
aam
pop
jp
pop
pusha
dec
mov
add
sti
pop
out
insl
mov
pop
mov
nop
mov
lock
adc
adc
stos
pop
mov
mov
idivl
jmp
push
jle
ficomps
in
pop
fdivrl
and
xchg
pop
sti
nop
sub
dec
push
sti
out
mov
rcl
gs
dec
popf
sbb
std
or
push
clc
push
jl
jg
mov
stos
inc
das
or
fnstcw
or
xor
ret
mov
fdivl
sbb
sub
les
or
in
sahf
cmc
inc
fcoml
and
call
add
dec
push
idivl
pop
out
xor
or
mov
sahf
xor
push
imul
dec
fidivrs
xchg
push
mov
xchg
mov
in
xchg
bound
in
out
out
sub
push
jne
pusha
pop
leave
inc
mov
lds
xchg
inc
cmp
adc
cmp
daa
mov
das
or
push
outsl
test
jecxz
push
or
pop
mov
mov
cld
js
pop
cltd
cmp
pop
sbb
pushf
xor
notl
int3
addr16
mov
cmp
cld
sahf
sub
push
mov
cs
add
pop
icebp
xchg
iret
and
jno
sub
data16
dec
pop
jecxz
cmp
les
fadds
ljmp
int
ret
loop
arpl
enter
jnp
xchg
pop
test
push
inc
or
pop
in
cmp
loopne
push
add
cmc
jmp
cmpb
ret
xchg
sbb
jbe
je
ja
or
push
add
or
outsl
out
cmp
dec
cli
xchg
fwait
das
push
xchg
cli
pop
inc
mov
cwtl
push
fisttps
pop
or
aam
fmull
mov
dec
dec
ror
std
lods
ficoml
lods
and
mov
aaa
movsb
cmp
jnp
jmp
inc
orb
and
pusha
clc
and
sbb
bnd
push
mov
fists
jnp
jg,pt
jnp
pop
inc
jbe
cmc
sub
xlat
mov
xchg
inc
and
pushw
leave
pop
in
je
dec
lret
push
jp
lds
fisttpl
adc
fwait
aam
rclb
jecxz
jecxz
loopne
xor
clc
push
in
lcall
jmp
adc
repnz
cmp
outsl
sarb
bound
ja
xchg
test
int3
dec
cmp
cwtl
les
sbb
fcomps
xor
lods
cmp
adc
shll
loopne
mov
loop
add
ss
add
subb
in
cmp
mov
in
hlt
and
add
jle
push
daa
clc
push
fdivp
jae
test
sti
bound
xor
scas
lea
jbe
js
and
in
push
dec
mov
mov
inc
dec
in
out
jecxz
jecxz
pop
stos
inc
je
mov
mov
insb
pop
roll
pop
add
sub
ret
mov
mov
sub
dec
mov
mov
movsb
xchg
ret
push
xchg
lods
mov
fs
cmp
pop
push
filds
pop
cmpsb
xor
mov
enter
xor
mov
fwait
aas
dec
fldl
mov
std
in
lcall
ret
and
cmp
aad
fucomip
pushf
aaa
hlt
jns
adc
xchg
ret
mov
inc
movl
mov
xor
and
std
loop
push
fs
xchg
mov
mov
and
pop
popf
or
out
cmpsb
jae
sbb
sub
xor
sub
shl
cs
and
divb
test
insb
cmp
mov
xchg
mov
mov
xor
add
lods
xor
cltd
in
pop
sbb
imul
mov
mov
adc
int
movsb
xchg
mov
mov
dec
and
add
mov
jbe
loope
adc
mov
xchg
and
push
jb
repnz
mov
icebp
jno
data16
xchg
add
pop
dec
cmp
enter
mov
sub
and
ds
xchg
fildll
rcll
sub
nop
daa
or
addr16
sbb
or
pop
push
jg
sbb
push
cld
sub
cmp
lock
cmp
add
adc
push
movsl
cmp
stos
lods
dec
cmp
mov
xchg
stos
adc
in
enter
sbb
cmp
jb
notl
subb
adc
sbb
decb
in
jae
loop
ret
sub
pop
leave
mov
pop
andps
test
mov
enter
clc
mov
mov
hlt
iret
js
ljmp
stos
inc
push
ret
push
xor
xor
mov
jae
mov
push
xchg
jl
lock
or
ds
jne
shrl
mov
pop
sub
xchg
jp
daa
xchg
sbb
arpl
push
cmpsb
cwtl
or
mov
out
pop
fimull
imul
mov
mov
leave
stc
movsb
cld
adc
push
rclb
loopne
out
or
jno
rorb
mov
adc
incb
inc
inc
outsl
out
sbb
adc
test
push
aaa
mov
inc
pushf
movsl
or
push
rolb
jo
push
push
clc
sbb
jle
or
outsl
nop
xchg
xor
lahf
rorb
sahf
test
inc
jle
cmp
loope
je
push
and
movsb
je
arpl
leave
mov
scas
cld
hlt
mov
and
addl
mov
jp
inc
sbb
add
int3
test
push
or
jge
jl
push
hlt
mov
jbe
and
pop
push
cli
jmp
xchg
push
stc
jg
mov
movsb
out
insb
rorl
sbb
mov
dec
mov
cmovnp
aad
and
mov
xor
mov
dec
call
cmpsl
push
pop
mov
js
add
jb
mov
xchg
xor
mov
loop
xor
pusha
insb
into
jae
movsb
int
push
sbb
dec
mov
or
cmpsl
lods
xor
lods
sub
int
pop
xchg
popf
fcmovnbe
ffreep
adc
aas
test
arpl
or
dec
fbld
and
xchg
ja
call
mov
xchg
fimull
sub
xlat
or
cltd
les
mov
in
push
adcl
cmpsb
jne
inc
icebp
cld
add
and
xor
sbb
out
popf
loopne
cmpsb
outsl
cmpsl
mov
in
stos
in
jb
and
push
mov
xor
mov
xchg
sbb
xchg
js
push
xchg
add
and
pop
sahf
ret
arpl
jbe
xor
movsb
jne
sub
dec
gs
add
inc
pop
clc
xor
scas
push
add
sarb
stos
popa
xchg
add
jns
sub
lock
xchg
mov
loopne
lods
ljmp
or
xchg
pop
into
mov
sub
dec
popa
cmpsb
imul
movsb
out
arpl
movsl
cld
push
mov
or
jp
mov
jns
jmp
and
inc
negb
loope
lock
in
lea
fcompl
aad
jne
mov
fcmovne
mov
imul
in
jle
cmp
stc
and
mov
push
scas
loopne
jge
push
jo
mov
test
sarl
shlb
dec
adc
push
xor
mov
es
pop
dec
xchg
clc
loope
inc
pop
push
push
mov
mov
push
hlt
fidivs
and
outsl
ret
mov
jns
daa
jg
pop
jle
inc
ss
cmpsl
cmp
xchg
pop
fdivrl
inc
cltd
out
outsl
sti
mov
or
push
lret
cmp
rolb
mov
aas
test
jg
std
rorb
cltd
out
cltd
adc
dec
xchg
dec
add
xchg
fisubrs
pop
pmaxsw
mov
sub
inc
push
stos
and
cs
jl
orb
sbb
call
push
loopne
mov
add
mov
cwtl
cltd
and
fstl
test
push
dec
les
aad
adc
mov
mov
sub
mov
in
pop
adc
aas
xchg
mov
add
imul
popf
mov
jmp
sub
stos
sti
sub
shrl
cmc
mov
adc
je
insl
push
mov
fbld
jbe
jg
push
push
cld
xchg
pushf
and
or
push
fnstenv
mov
rolb
mov
repnz
pop
push
ljmp
nop
pop
int
rcl
and
mov
xor
popa
lock
cwtl
mov
sbb
pop
das
cmp
insb
mov
push
fcompl
mov
mov
or
add
fwait
stos
or
je
mov
jo
lock
shrl
and
addr16
mov
push
mov
push
jmp
mov
inc
test
jo
dec
mov
loope
sbb
pop
mov
sti
dec
xor
lcall
cmp
popa
add
or
daa
xor
or
push
push
arpl
imul
gs
or
xchg
sbb
je
int3
in
inc
adcl
insb
movsl
ror
sub
popf
sar
xchg
mov
js
sbb
in
jp
or
inc
xchg
loop
and
shl
aam
xor
imul
lahf
push
insl
push
notb
adc
sub
push
xchg
test
popa
mov
sub
pop
in
sub
or
jae
pop
imul
sub
jge
out
jnp
loop
dec
lcall
lock
cmpsl
adcl
add
jbe
and
jo
bound
pushf
gs
lea
or
loop
rcl
popf
inc
and
xchg
mov
jl
mov
test
inc
add
and
rolb
cmp
or
mov
pushf
xchg
cmp
or
xchg
jge
pop
cmc
repnz
nop
add
mov
into
mov
aam
cmp
push
nop
insb
or
sbb
imul
add
cmpps
nop
sub
lret
ljmp
loope
int3
ds
pop
sahf
arpl
cmp
xchg
rcrb
and
pop
sahf
aam
sbb
into
pop
or
subl
popf
pusha
mov
add
push
push
rcrl
add
int3
cmp
mov
inc
mov
xor
cmpsl
daa
push
mov
cwtl
or
into
jge
jle
mov
sub
and
jp
push
movsb
movsb
cld
lds
lea
dec
mov
aas
jecxz
sbb
ret
fisubs
lds
dec
and
dec
xor
lahf
mov
insl
out
mov
test
cltd
mov
lahf
sbb
pop
mov
mov
xchg
loope
mov
mov
into
insl
sbb
daa
in
mov
cmp
lea
jns
adc
loop
imul
ficompl
jle
les
popa
pop
fnsave
bound
sarb
sub
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
addl
push
mov
mov
sub
imul
push
xor
or
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
movl
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jg
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
sub
mov
mov
and
mov
andl
xor
or
inc
mov
cmpl
ja
jmp
push
pushl
push
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xorl
mov
xor
mov
movl
cmpl
je
cmpl
jg
jmp
call
mov
dec
mov
jmp
mov
sbb
sub
mov
sbb
orl
mov
mov
adcl
sub
mov
orl
movl
cmpl
je
cmpl
jb
jmp
call
mov
dec
mov
jmp
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
neg
push
adc
push
push
xor
movl
mov
xor
xor
sub
add
lea
sub
mov
subl
movl
xor
lea
add
mov
xor
mov
or
mov
mov
mov
sub
imul
mov
andl
xor
add
inc
mov
cmpl
jle
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
xor
mov
add
xor
mov
mov
mov
mov
add
and
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
xor
mov
sbb
mov
mov
add
cmp
movl
je
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
push
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jl
jmp
call
jmp
mov
or
movl
cmp
movl
jne
movl
cmp
jne
movl
push
movl
push
movl
jmp
not
mov
mov
cmp
jne
movl
cmp
jne
movl
push
push
jmp
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
movl
jne
push
movl
push
jmp
mov
mov
cmp
movl
jne
movl
cmp
movl
jne
push
push
movl
jmp
movzbl
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
jne
sub
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
jmp
mov
jae
jbe
cmp
add
sti
or
sub
inc
test
jnp
xor
and
sub
mov
mov
dec
dec
sbbb
or
pop
xor
jb
fiadds
sbb
test
adc
shrl
rcl
inc
shr
mov
call
push
rcl
pop
data16
lock
lock
xchg
and
jnp
mov
inc
mov
sahf
hlt
rorl
adc
push
push
je
mov
fldcw
iret
push
mov
push
fucomp
popa
add
pop
es
popa
and
and
pop
and
inc
jge
nop
pop
mov
jge
leave
movsl
sub
loopne
out
dec
shrl
test
lret
clc
ja
xchg
push
inc
xor
cwtl
fxch
pop
movsl
xchg
lret
mov
push
jle
inc
push
ja
imull
mov
aaa
rep
es
out
add
dec
jno
imul
or
and
fnstsw
ret
lock
testb
dec
aas
sbb
xchg
int3
fisubs
jle
insb
lcall
pop
jne
testl
or
movsb
in
loope
jno
add
jae
lods
mov
jecxz
push
adc
int3
js
inc
xorl
cmp
scas
sbb
mov
hlt
minps
mov
cmp
outsl
call
in
ja
enter
out
int
mov
sahf
sti
add
jg
add
add
push
sahf
ret
and
rcrb
push
inc
lahf
jmp
pop
lcall
add
pop
sub
js
cli
dec
imul
ret
loop
mov
cmp
pushf
stos
mov
xor
mov
popa
inc
fcompl
inc
sahf
xchg
pop
cmp
push
and
push
push
pop
fs
cli
dec
jbe
lea
filds
push
pop
cmp
imul
and
dec
push
inc
daa
mov
rolb
mov
out
sbbl
cmp
mov
cmp
jno
mov
jbe
cmpb
pop
jg
mov
movsb
dec
movsb
out
or
mov
cli
jne
fisttpl
or
pop
out
sub
push
subb
cmp
pop
cmp
aas
xlat
bound
inc
pop
popf
pop
jbe
pop
fs
pusha
xchg
stc
add
mov
or
or
and
imul
xchg
dec
mov
icebp
popf
loope
pop
fimuls
sbb
popf
cltd
sbb
das
imul
pushf
jg
fcomip
fisttpll
or
in
add
sub
fisttpl
rolb
push
rclb
lahf
int
xchg
jno
add
ja
mov
loope
insb
shll
xchg
ficoml
push
mov
lahf
adc
or
or
cmp
jo
or
xchg
outsl
mov
pop
push
or
mov
js
cmp
push
add
lds
adc
mov
ds
sbb
insl
sbb
and
mov
addl
sbb
addr16
cltd
jp
push
sti
aad
sub
or
or
cmpsl
je
das
pop
je
xor
inc
shll
sahf
push
dec
mov
add
and
jl
repz
jnp
faddl
lret
mov
sub
scas
stos
pusha
push
jne
pop
cmpsb
dec
jecxz
outsb
push
mov
cmp
xor
lcall
mov
jp
inc
mov
rol
xor
hlt
movsb
xchg
mov
or
dec
adc
mov
xchg
dec
and
test
cmp
imul
mov
pop
loopne
pop
mov
fsubrl
or
cmpsl
inc
lods
dec
mov
mov
push
dec
test
shrl
fldenv
dec
popa
out
push
xchg
cli
sarl
dec
ret
push
mov
and
sahf
fnstcw
aam
adc
inc
movb
popa
dec
loopne
inc
inc
sub
ljmp
dec
lret
and
test
arpl
cmp
stos
gs
push
nop
xchg
int3
rcr
xorl
int
cmpsb
loope
push
clc
adc
por
sub
out
in
leave
push
faddp
xor
in
adc
adc
cld
sbb
rcrl
adc
mov
sub
aad
aas
jg
dec
arpl
bound
fs
jp,pn
scas
mov
or
push
xor
insl
das
add
out
and
inc
nop
bound
cmp
xor
int
daa
cmpsl
or
in
ret
test
mov
sub
aam
cmp
mov
out
arpl
movsl
addr16
dec
and
aam
sbb
bound
push
jp
pushf
scas
and
xchg
xor
lea
pusha
mov
int3
push
xchg
ds
jne
lods
mov
xor
mov
iret
lret
ljmp
xchg
cmp
mov
push
aaa
adc
sub
jg
sub
add
test
in
jne
sti
xlat
adc
outsb
push
sub
insl
xchg
sub
jmp
ljmp
and
mov
or
dec
jo
xchg
mov
push
ja
outsb
cmp
dec
lock
negl
mov
xchg
rol
cmp
aad
mov
lods
loope
mov
sub
cmp
or
mov
mov
jb
mov
cmp
ficoml
dec
push
imul
mov
inc
lea
sbb
call
call
repz
jge
and
popa
push
or
cli
inc
pop
dec
dec
inc
cmp
into
cwtl
inc
and
add
pushf
dec
adc
jle
sub
stos
push
add
sbb
gs
pop
sbb
sub
roll
imull
sbb
in
fidivl
jns
enter
mov
in
movsb
movsl
xchg
push
das
dec
cmp
rorb
roll
push
mov
repnz
out
icebp
xchg
xchg
mov
out
pusha
je
sub
imul
lret
push
sub
add
push
gs
adc
ja
shr
scas
cmpsb
aaa
add
and
cmp
fmul
or
xlat
insb
insb
dec
mov
dec
xchg
pop
mov
and
jb
bound
jmp
subl
call
enter
jp
push
jl
out
mov
sub
sub
nop
pop
repnz
pop
inc
mov
xor
mov
imul
ret
push
sub
adc
out
and
inc
movsl
inc
rorl
mov
adc
mov
push
in
pop
mov
mov
pusha
sti
out
and
jne
lock
fnsave
sub
mov
ljmp
pop
push
addb
call
xor
ret
sub
xor
add
test
xchg
mov
mov
insb
add
push
test
aam
dec
imul
cmp
inc
and
mov
insl
xchg
add
push
pop
popa
enter
xchg
and
fiaddl
adc
ljmp
add
xor
xor
pusha
mov
jl
jns
sbb
imul
leave
std
jcxz
fwait
adc
mov
fldl
inc
gs
cmp
jle
add
enter
jae
popa
xchg
mov
aam
movsl
adc
lods
push
cmp
sub
cli
add
ja
fildll
jne
push
ljmp
test
addl
mov
lea
mov
fdivr
jp
mov
es
xchg
xchg
inc
sub
pop
call
xchg
mov
cmpsl
mov
sub
xor
push
xor
ja
xor
pop
inc
or
mov
mov
mov
or
fistl
lods
and
outsl
jne
sbb
jg
clc
test
xchg
pop
mov
pusha
ret
sti
mov
or
adc
push
ret
fs
push
jl
out
jg
cmp
les
add
jnp
test
mov
addb
pop
lock
clc
int
loope
xor
pushf
fisubl
cmp
jb
sbb
or
movl
cld
divb
adc
sbb
mov
xor
jecxz
lret
rol
sarb
lret
adc
lea
xchg
mov
cli
push
mov
xchg
in
das
push
mov
test
inc
sub
lock
dec
sti
icebp
inc
sbb
fidivl
loopne
cli
fwait
and
and
add
add
push
imul
xchg
bound
inc
cmp
lahf
lock
cmp
cmp
mov
popa
ljmp
jo
xchg
or
jl
cmp
sbb
mov
stos
xor
mov
loopne
sub
cs
ja
add
ret
push
push
out
xchg
push
pop
jg
bound
stc
push
add
out
xor
repz
out
mov
shlb
cmc
push
ja
out
bound
or
sub
add
jns
repz
mov
iret
add
add
cmp
lea
pop
sub
push
add
cmp
movl
lret
pop
sbbl
in
int3
ja
mov
adc
mov
mov
stos
push
hlt
xchg
mov
jnp
and
cmp
sub
sti
std
xchg
cs
fsubs
imul
cmc
xchg
ds
test
xchg
inc
sub
push
mov
ljmp
cmp
movsb
movsl
cld
mov
daa
sub
pop
dec
sbb
fsubs
int
or
repnz
mov
cwtl
bound
sbb
outsb
or
in
sub
sub
jp
data16
add
fidivrl
lock
or
dec
scas
lret
xchg
mov
shl
sti
fsub
mov
and
cmp
mov
in
xchg
sub
sub
sahf
cmc
push
outsl
fnstcw
sbb
mov
mov
add
mov
and
inc
fldl
sbb
das
repz
minps
pop
sub
sti
inc
push
sti
mov
adc
pusha
sbb
mov
repnz
xor
dec
ja
or
jno
sub
dec
scas
sbb
adc
push
std
int
fstpt
call
dec
xchg
hlt
dec
aam
pop
ror
ret
out
sbb
push
loope
or
stc
jmp
fcoml
mov
push
pop
jge
xlat
or
jbe
rclb
xchg
mov
lcall
inc
pop
popa
pop
xchg
or
in
sbb
call
cltd
sti
inc
jge
call
or
enter
pushf
inc
add
mov
rcrb
cmc
int3
and
mov
sbb
outsl
imul
aam
xchg
inc
test
lods
adc
daa
jo
call
and
mov
jne
rclb
jl
jmp
test
add
pop
mov
icebp
cs
enter
mov
jno
mov
push
xchg
inc
pop
cmp
call
push
mov
dec
inc
dec
fdivl
adcb
xor
out
push
imul
cmp
in
lds
mov
int
mov
inc
divl
lea
mov
inc
jmp
out
std
xchg
fiaddl
aaa
inc
mov
xlat
dec
and
psrad
repz
pop
sub
sub
mov
insb
inc
mov
pop
popa
inc
mov
inc
mov
cld
and
jae
mov
mov
jae
in
and
popf
jbe
dec
jne
dec
lock
dec
test
lcall
rorb
nop
cwtl
dec
insb
nop
scas
inc
mov
sbb
std
cs
in
and
jp
mov
pop
mov
and
andb
pop
mov
dec
adcb
mov
xchg
add
mov
lods
xor
add
fwait
add
js
into
sbb
and
sbb
out
into
or
and
into
push
cs
add
xor
lea
pop
repnz
xor
mov
lock
fs
xchg
xchg
xchg
and
in
jecxz
lds
xlat
pop
cwtl
xchg
arpl
es
dec
inc
repz
scas
xchg
fnstenv
sbb
jl
pushf
test
push
jecxz
push
bswap
pop
daa
daa
cmp
out
pop
cli
sub
ficompl
push
xchg
add
xor
mov
out
push
and
sub
fiadds
pop
in
or
jae
in
jge
xchg
cmc
sbb
cld
test
mov
mov
sahf
mov
adc
mov
and
add
cmpsl
out
incl
fs
loopne
hlt
aaa
stos
ljmp
jae
jp
mov
fs
repz
dec
inc
push
xchg
insl
add
push
pop
test
jmp
mov
ret
adc
xlat
mulb
and
imul
add
sar
cmp
outsl
sub
aaa
mov
insb
mov
lret
out
xor
mov
pop
inc
or
jge
pop
data16
inc
push
dec
mov
das
or
in
add
test
push
sbb
es
sbb
fnstenv
mov
ret
mov
je
cmp
into
fimuls
fmulp
out
push
dec
mov
stos
jae
ret
aas
xlat
cld
pusha
outsl
push
or
add
xor
push
pop
xchg
test
cmp
dec
outsl
int
jae
loopne
mov
xchg
adc
and
out
fldln2
fisttpl
sub
push
arpl
fsts
int
in
fldcw
pop
pop
ds
in
stos
test
push
inc
mov
fcomip
sarb
jno
add
nop
faddp
inc
fbld
adc
cmp
nop
cwtl
dec
movsb
mov
loop
mov
jae
pop
sub
and
mov
into
pusha
mov
sub
jmp
jno
cwtl
dec
mov
mov
fmuls
out
mov
pop
adc
mov
mov
in
inc
sti
mov
insb
sub
out
pushf
sub
lods
mov
divb
test
nop
not
or
mov
xchg
or
lahf
decl
repz
mov
push
lock
push
imul
dec
fildll
and
stc
and
push
mov
or
mov
outsl
cwtl
cmp
mov
inc
aas
or
popf
pushf
add
rolb
inc
xchg
scas
xor
mov
sub
insl
cmp
dec
adc
dec
sub
push
stos
test
pushf
mov
fnstsw
adc
pop
mov
lret
cld
inc
pop
dec
sub
inc
scas
add
push
out
mov
inc
leave
lea
pop
pop
call
rcl
test
out
and
jns
mov
adc
inc
test
sub
pop
cld
es
arpl
adc
aam
scas
popa
xchg
lods
mov
push
movsl
or
rclb
aaa
jnp
ljmp
xchg
sbb
jp
or
jne
jns
pushaw
jle
out
pop
mov
sti
fldcw
sub
icebp
jge
sbbb
pop
mov
pop
cmp
ds
mov
out
test
popl
sub
push
cmp
test
mov
nop
xchg
pop
ja
and
cmpl
movsl
int3
sbb
imul
push
pop
xor
jmp
scas
imul
popa
jmp
pop
jno
int3
repnz
jl
fidivrs
dec
pop
sub
add
jno
mov
fcmovne
testb
or
mov
xor
pop
add
jg
test
test
fisttpl
push
repnz
movsb
int
lahf
je,pt
clc
sarl
movsl
cli
fld1
gs
sub
cmp
aaa
pop
pop
rcrl
cmp
insb
cmp
dec
xchg
mov
dec
repnz
xor
dec
push
ds
aam
mov
and
pop
add
insb
fwait
inc
mov
xchg
push
sti
daa
pop
iret
stc
xchg
orl
jb
in
adc
mov
mov
in
std
push
jo
and
cwtl
mov
insl
and
stos
xor
push
std
enter
sarl
push
jo
lahf
popf
adc
sub
mov
mov
sub
shrd
add
mov
pop
loope
push
inc
pop
mov
push
cli
rcl
pop
or
adc
adc
xchg
inc
or
stc
mov
sub
push
mov
dec
out
and
xor
shl
mov
dec
idivb
mov
xor
jge
lahf
mov
cmp
test
jno
sbb
sbb
lods
inc
punpckhwd
pop
mov
hlt
cmp
inc
cld
insl
fwait
pop
cmpsb
mov
xlat
daa
push
cmc
in
das
ret
sub
clc
jbe
pop
popl
pop
sub
sbb
push
jns
test
push
xchg
lods
xchg
dec
lret
add
push
mov
fdivl
fsts
adc
leave
aas
aam
push
adc
push
push
or
mov
push
inc
lods
je
call
divl
out
cmp
lock
fidivrl
cmp
xchg
repz
mov
int3
jmp
jl
repz
lea
ds
inc
or
mov
out
insl
stc
mov
mov
xchg
cmp
add
nop
insb
pop
es
xor
leave
mov
cmp
fstl
ss
push
rcrb
dec
lods
mov
push
or
std
pop
notb
pusha
and
xchg
sub
outsl
xchg
stos
xor
iret
jb
andl
pusha
sbb
test
xor
adc
mov
cli
fs
or
ja
je
xchg
push
arpl
rcll
push
dec
sbb
cs
jne
mov
mov
jae
mov
mov
jns
xchg
lds
fstps
mov
pop
jae
sahf
cmp
pop
js
mov
xorb
inc
cltd
cmp
fisubrs
fbld
aas
push
lret
sub
jbe
subb
jnp
xchg
jecxz
ds
add
inc
outsl
lods
and
xor
xor
jge
cmp
sub
test
and
aas
in
loopne
pusha
in
jg
dec
js
sub
lock
mov
mov
les
mov
outsl
add
dec
cld
mov
pop
test
xor
cli
fsts
or
outsb
in
in
mov
popf
daa
xchg
test
dec
cmpsl
push
push
adcl
xchg
mov
fs
xchg
mov
pushf
repnz
sub
lods
mov
xlat
inc
xchg
cmp
leave
jae
inc
pushf
test
push
mov
cld
xchg
daa
jg
dec
out
aad
sub
dec
jb
mov
mov
or
cmc
int
xor
pop
sbb
shl
mov
test
in
fs
jmp
ljmp
sbb
sub
xor
imul
popf
sub
jmp
mov
mov
flds
adc
test
mov
cmpsb
popa
lcall
negl
jg
jg
push
push
mov
jle
stos
mov
cmp
test
xor
mov
jg
cmp
jb
pusha
jl
out
dec
mov
mov
mov
rcrl
rcl
mov
cmp
jmp
dec
jge
dec
inc
cmc
xchg
test
inc
test
mov
and
inc
mov
aad
movsl
or
jg
dec
mov
jmp
std
imul
or
sub
lahf
xchg
clc
mov
or
shrl
push
outsl
dec
lret
cli
inc
flds
or
shrb
inc
test
jae
adcl
dec
ds
lds
or
flds
mov
jmp
push
pop
imul
das
sahf
cmp
icebp
std
inc
lea
pop
push
jne
sub
dec
mov
push
inc
es
xchg
shlb
mov
aam
cmp
mov
jbe
into
lea
adcl
jle
push
lret
nop
mov
mov
popf
add
cmpsb
or
je
or
add
sahf
testb
dec
xor
loop
lahf
scas
js
repz
das
dec
pop
stos
adc
dec
cmp
or
and
imul
jl
aam
mov
addr16
add
xchg
inc
cmp
inc
mov
pop
inc
inc
inc
fiaddl
out
adc
add
decl
aas
lds
icebp
into
imul
sub
inc
shlb
aaa
in
or
cld
mov
push
addl
movsb
dec
inc
inc
xchg
jmp
adc
leave
pop
add
mov
sub
enter
stos
push
sub
rcrb
pop
and
add
jmp
test
fiaddl
movsb
add
fadds
pop
inc
adc
movsb
data16
cmc
sub
jmp
jb
xlat
arpl
pop
and
popa
mov
out
shrb
sub
cmp
fmulp
push
sti
cltd
js
aaa
lret
pop
loopne
out
sbb
jp
std
jecxz
aas
mov
mov
cwtl
xor
push
add
sbb
pop
add
mov
dec
jo
cmp
pop
sub
sbb
mov
hlt
inc
xor
sub
cmp
sub
push
hlt
inc
scas
fiaddl
adc
mov
push
inc
insb
adc
inc
push
cmp
inc
adc
sbb
test
pushf
push
fidivs
imul
mov
xchg
push
cltd
int
xor
push
or
call
test
dec
jnp
shlb
into
and
fdivrs
insb
in
or
push
jns
mov
add
push
sbb
mov
insb
fdivs
add
cltd
aaa
ss
push
cmp
sbb
test
out
lret
out
sub
sub
es
pop
jnp
leave
repnz
pop
and
fsts
mov
mov
push
shr
test
push
jo
sar
cmpsb
adc
lret
std
fdivr
inc
or
lods
fwait
stos
into
cltd
pushf
dec
mov
arpl
pop
push
mov
aam
or
inc
xchg
add
jno
fisubrl
push
push
test
mov
mov
aad
sbb
in
push
aas
mov
pop
repnz
jo
cmpsl
das
sub
cmc
adc
jb
jo
jmp
jo
xor
mov
jmp
icebp
mov
pop
and
scas
popf
pop
jle
addr16
sbb
push
xchg
fimull
hlt
xchg
xchg
jne
popf
xor
xor
or
es
dec
cmpsl
test
aad
xchg
lock
mov
and
arpl
xor
dec
movsl
push
mov
fdivl
pop
lods
sti
dec
pop
push
mov
mov
sub
push
jbe
testl
dec
sub
mov
insl
repz
pop
inc
dec
in
inc
or
or
pop
mov
pop
inc
das
addl
out
gs
enter
stos
dec
jle
outsl
imul
mov
out
pop
jae
hlt
cld
push
mov
test
cmpsl
pop
ds
ja
out
imul
sbb
or
xor
in
repnz
test
inc
sbb
fs
gs
data16
iret
mov
xchg
sahf
fidivs
ja
and
js
es
xor
and
fdivl
ret
int
xchg
lret
in
or
push
sub
inc
repnz
push
sub
fs
mov
jne
lcall
xchg
loop
mov
imul
sbb
mov
dec
mov
add
xor
sbb
test
cmp
or
xchg
imul
mov
sbb
repnz
xchg
xchg
pop
jmp
fdivl
lcall
pop
cltd
pop
popf
mov
mov
clc
inc
sbb
or
mov
loopne
sahf
mov
adc
clc
mov
dec
fists
push
mov
dec
xchg
dec
loope
addr16
and
pusha
pop
jge
dec
aad
push
ret
mov
scas
push
cmp
test
inc
or
push
or
or
int3
jmp
clc
orb
jl
dec
xchg
sub
movb
aas
in
pop
nop
test
mov
xchg
pop
icebp
test
mov
orb
dec
lods
pop
fcoml
push
fwait
test
xor
mov
inc
xor
pop
out
mov
mov
outsb
scas
xchg
xchg
jmp
or
xchg
stc
dec
xchg
mov
xor
add
addr16
sub
pop
xorl
lds
mov
and
call
sub
test
or
mov
rolb
mov
shl
pop
sarb
outsl
addr16
sahf
ret
cmp
and
std
sub
fcmovnbe
xchg
aaa
mov
and
mov
scas
dec
call
fcmove
sub
xor
mov
fcomip
xchg
pop
and
adc
cmp
mov
dec
mov
ret
sbb
shl
jb
hlt
insb
sarl
arpl
or
ljmp
jmp
cwtl
adc
add
stc
and
inc
cmp
pop
xor
daa
test
push
pop
adc
es
cmp
into
out
test
and
out
imul
cmp
insb
push
out
push
jae
push
mov
mov
aad
test
out
mov
add
jle
shlb
pop
subl
inc
mov
xchg
push
movsb
cmp
sahf
leave
cwtl
jb
repnz
fs
sub
iret
loope
pop
mov
das
dec
shlb
or
aam
sbb
jne
xor
dec
pop
push
xor
movsl
xchg
jne
js
xor
xor
cmp
pop
inc
pop
test
imull
rorb
jmp
shrl
inc
scas
add
cli
lods
sbb
call
in
aas
jecxz
js
cmp
jnp
inc
pop
ds
ret
jge
sbb
movsb
out
xor
cmp
or
les
push
mov
lods
dec
out
filds
iret
dec
push
push
or
mov
cmp
mov
dec
xchg
and
shlb
jns
mov
push
cmpsb
add
mov
adcl
adc
or
sarb
sbb
or
dec
ficompl
mov
mov
scas
vpunpckhwd
or
mov
push
sub
xor
cmp
aas
test
jae
or
rcrb
xchg
pop
jecxz
jo
loope
xchg
stc
xor
adc
push
popf
and
cmp
lock
fsubrl
cwtl
sti
jecxz
sbb
sbb
dec
pop
je,pt
fidivs
mov
ja
repz
dec
inc
push
xor
in
fbld
outsb
test
mov
xor
mov
in
add
outsl
sbb
fwait
insl
inc
aam
mov
jmp
repz
ds
pusha
cltd
adc
shll
cltd
jno
push
mov
addr16
repnz
pop
xchg
inc
mov
movsl
pop
or
and
dec
pushf
in
xchg
mov
cmc
mov
add
jmp
or
pop
ja
movsl
mov
loopne
test
dec
fs
andl
in
sbb
jge
leave
xchg
xlat
dec
sbb
sub
es
and
xor
mov
filds
and
jne
mov
lret
cwtl
cmp
in
and
stc
fcompl
out
aas
fnstcw
push
add
mov
cwtl
pop
pop
push
bound
xlat
into
push
in
and
mov
aad
imul
nop
cltd
mov
sub
pop
cmp
push
iret
jns
jno
imul
adc
sti
sbb
sub
mov
cmp
imul
cmp
mov
pop
ja
push
or
xor
insl
add
popf
or
and
push
das
insl
sbb
loope
cmc
xorb
mov
jno
movsl
push
mov
loope
mov
mov
scas
repnz
xor
mov
xchg
xor
in
bound
aaa
add
inc
mov
pop
xor
imul
lods
mov
push
jae
incl
dec
adc
je
inc
rolb
and
dec
push
inc
sub
cmpsl
dec
jne
and
mov
sub
in
notb
mov
shr
xadd
outsl
mov
icebp
jnp
iret
dec
pushf
js
aaa
dec
mov
mov
aas
add
mov
add
pop
in
test
aam
pushf
rcl
adc
jmp
cltd
mov
jae
repnz
test
mov
mov
xorb
mov
pop
pop
rol
mov
push
call
das
mov
aas
jne
cld
xchg
sbb
addr16
jg
inc
sbb
push
outsl
cwtl
ret
sbb
sbb
das
lods
popf
in
cmpsb
adc
jb
in
mov
push
pop
int3
loop
cmpsb
xchg
pusha
xor
stos
test
mov
push
addb
js
sbb
fs
lea
and
out
add
lcall
aad
fistps
out
xchg
scas
leave
dec
push
push
push
lods
push
pop
mov
in
jb
inc
aas
inc
dec
std
es
int3
jb
xchg
push
cmp
mov
movl
mov
inc
or
pop
push
inc
mov
mov
cmp
add
test
jmp
in
and
cmp
ss
mov
cmpl
pop
dec
leave
movsb
xor
clc
xor
add
lcall
xor
iret
sub
inc
add
scas
or
sbb
xchg
jp
cmp
mov
inc
outsl
loopne
stos
out
inc
pop
lock
sub
or
sub
fs
dec
mov
and
or
gs
adc
out
xchg
mov
add
cmpsl
and
mov
and
movl
aad
pop
mov
mov
sbb
insl
aaa
repz
push
or
insb
out
idivb
fsts
lret
leave
or
jle
or
xor
pop
pop
inc
adc
push
dec
inc
sub
icebp
push
mov
repnz
sbb
sbb
push
int
insl
add
and
push
xor
jb
ret
call
mov
imul
adc
mov
std
clc
xchg
sbb
orb
dec
aad
push
rcr
les
xor
test
push
loopne
fs
out
lcall
outsl
pop
sbb
mov
push
mov
cmp
mov
outsb
xor
jnp
insb
ja
test
sbb
xor
pop
mov
fsin
gs
adc
aad
flds
shl
add
movsb
mov
stos
mov
jbe
ss
stos
or
rorl
lcall
popa
pop
and
fmuls
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
jmp
dec
mov
imul
pop
push
jnp
pushf
jnp
or
mov
xchg
sbb
cmp
add
xchg
popa
inc
inc
mulb
imul
and
ljmp
mov
and
lcall
out
arpl
repnz
add
mov
cmpl
dec
xchg
mov
aaa
bound
data16
jb
leave
add
xchg
mov
movsl
orl
cmp
push
fdivrp
scas
and
cmpsb
pop
loopne
add
jecxz
xchg
push
xchg
rolb
ds
fnsave
sbb
dec
sub
mov
stos
icebp
fdivrs
mov
stos
pop
push
das
sub
or
mov
icebp
arpl
push
hlt
insb
pop
fbstp
ficoms
test
dec
inc
mov
les
pop
sbb
push
ret
and
cwtl
add
add
sbb
sarl
mov
call
cmp
pop
xchg
fbld
pop
pop
icebp
or
fs
pop
push
nop
ret
xor
jg
fildl
or
sbb
jmp
in
mov
incl
mov
popa
aas
xor
adc
lahf
aaa
mov
pop
lock
mov
pop
xor
xchg
push
jo
jo
add
jg
inc
test
mov
out
loope
int
iret
int3
std
cmp
xor
ds
mov
sub
imul
js
cli
stos
mov
cmp
scas
cltd
inc
outsb
dec
sub
push
xadd
add
insb
mov
int
loopne
dec
insl
int3
jo
leave
xchg
add
cmp
inc
dec
outsb
xchg
das
dec
insl
add
cli
push
and
mov
sarl
test
mov
jbe
adc
pushw
pop
xor
out
dec
mov
adc
movsl
adc
pop
movnti
xor
pop
push
int3
fsubs
rorl
pop
add
sbb
fs
les
xor
out
aas
fimull
stos
push
or
sbb
ljmp
cmp
adc
mov
js
aam
push
adc
fsts
out
out
jg
and
jnp
stos
mov
sbb
testb
pop
popa
sbb
xor
mov
test
popf
pop
fsubrl
out
mov
adc
push
sbb
xchg
adcb
inc
pop
clc
mov
mov
mov
jmp
cld
es
push
imul
pop
cmp
fwait
dec
popfw
data16
xchg
pop
mov
idivb
mov
cmp
ret
xchg
sub
sub
aaa
fsubr
aad
sbb
lret
add
add
mov
testl
fbstp
and
xor
arpl
jo
adc
js
cmp
add
dec
push
push
xchg
or
xor
fdivl
xorl
fstpt
mov
inc
mov
jl
in
jb
sbb
mov
mov
test
shlb
mov
xlat
and
and
lahf
scas
dec
mov
movsb
pop
dec
fsubp
push
jmp
aaa
ret
xlat
lret
mov
mov
scas
pop
imul
and
dec
shl
repnz
nop
jb
mov
jno
push
std
push
mov
or
pop
or
icebp
lock
sub
inc
leave
outsl
adc
subb
or
mov
adc
lods
push
out
in
nop
mov
scas
mov
dec
jg
loopne
es
xorb
call
decl
addr16
movsb
dec
cmp
enter
sub
aaa
adc
add
cmp
cltd
add
aam
shlb
sbb
sbb
jno
mov
lock
adc
or
jl
popl
dec
arpl
add
negl
daa
sub
push
incb
dec
outsl
xchg
push
ret
inc
xor
int
cld
jo
test
sti
jo
sbb
retw
ljmp
shrl
sbb
shll
test
sub
rcrb
lock
sub
pop
repz
sub
jp
push
inc
xchg
inc
mov
scas
addl
xchg
mov
mov
shlb
mov
insb
adc
inc
lahf
cld
and
out
adc
pusha
push
dec
add
push
jmp
jns
js
imul
jb
rolb
fwait
out
fimull
and
aad
incb
sub
xchg
ss
movb
inc
cmc
imul
jge
sub
repz
sbb
mov
and
stc
clc
es
xchg
inc
adc
or
leave
mov
mov
test
test
jge
cli
popf
pop
jle
nop
iret
mov
xchg
pushf
loopne
addr16
outsl
push
adc
movsb
xchg
repz
call
pop
sub
sbb
arpl
inc
jmp
dec
jb
enter
fs
sbb
jle
push
rorb
fstpt
jnp
out
or
popf
mov
adc
dec
scas
insl
mov
cmp
test
rorl
enter
push
mov
xor
jp
sbb
arpl
pusha
mov
dec
test
mov
inc
mov
scas
daa
mov
inc
stc
mov
mov
mov
icebp
mulb
clc
sub
jecxz
or
xor
mov
sbb
aam
push
adc
xor
jge
and
orb
mov
dec
mov
popf
mov
rcrl
push
push
pop
test
repz
in
sbb
push
lods
sar
call
jle
out
in
aam
pop
add
rorl
icebp
fsubrl
lea
mov
push
push
pop
into
data16
js
ret
mov
adc
or
scas
and
push
sbb
dec
or
out
mov
pusha
push
ss
push
data16
loop
rcrl
adc
fs
inc
push
std
imul
mov
out
sub
addr16
push
hlt
pop
push
js
in
push
popa
lock
push
xchg
nop
mov
cmp
fs
and
out
cmp
mov
pop
outsb
xchg
inc
push
rcrb
xchg
cltd
enter
incb
add
in
enter
xchg
jbe
iret
mov
orl
sub
jbe
repnz
cmp
sbb
sub
jge
je
stos
gs
and
cmp
ret
mov
test
incl
xor
jo
xlat
and
push
fcomps
adc
or
imul
jge
jle
cmp
cli
mov
push
xchg
mov
push
dec
ss
pop
pop
aas
scas
jmp
mov
sub
sbb
in
fstps
inc
pop
add
icebp
je
fadds
pop
int3
push
xchg
jnp
fs
cs
imul
push
pop
pushf
in
push
sbb
lea
xchg
lock
xchg
add
out
mov
inc
inc
push
xor
sbb
dec
and
movsb
jecxz
loope
fstpl
adc
fwait
push
sub
push
adc
mov
or
aam
mov
or
cmp
mov
xor
mov
rolb
mov
mov
cmp
push
xor
inc
xor
ds
out
rorb
das
stos
test
hlt
icebp
xchg
sbb
hlt
gs
stos
and
int
lods
dec
push
cld
scas
push
xchg
xchg
mov
ret
test
in
iret
lock
sbb
mov
inc
aam
les
mov
adc
mov
fsts
push
jecxz
fwait
xchg
stc
mov
pop
xor
xchg
pop
je
add
js
sbb
xor
add
or
mov
mov
inc
add
mov
dec
popf
faddl
jb
and
jecxz
insl
dec
push
enter
lds
je
push
mov
push
mov
lods
xchg
call
scas
hlt
dec
aaa
out
das
hlt
and
inc
jmp
lods
sbb
push
sarb
cmpsl
sbb
ljmp
movl
cmp
rcrl
imul
mov
ss
and
sbb
push
arpl
xchg
sbb
xlat
cmp
sub
mov
mov
mov
sub
xlat
movl
jg
sub
xor
leave
mov
sbbb
mov
mov
dec
mov
fbstp
mov
jno
xchg
xchg
pusha
movsb
push
sub
dec
cmc
je
push
push
aas
xchg
inc
sbb
js
or
aad
push
std
sti
je
pop
cmp
and
xor
inc
jecxz
or
fs
jo
and
add
jne
fsubr
push
add
sahf
ror
adc
call
push
repz
push
lret
out
xchg
mov
xchg
cld
sub
or
nop
sub
xchg
adc
xchg
dec
pop
jns
call
rcrb
push
dec
or
or
fidivl
and
xor
ds
jno
data16
cmpsl
andb
smsw
push
ret
jbe
test
cmp
std
test
sbb
lock
repnz
test
inc
loope
and
xlat
sti
mov
adc
adc
pusha
jp
push
cld
arpl
ja
pop
lahf
fildll
mov
sbb
jo
push
es
lcall
sub
or
lds
sbb
dec
dec
or
add
jmp
pop
cwtl
xlat
inc
sub
pop
mov
int3
xor
aad
mov
js
daa
xchg
inc
scas
pop
pop
fdivs
adc
push
adc
int3
xor
lea
or
scas
xor
cmp
push
test
in
sub
test
cwtl
jl
xchg
es
out
gs
or
xorl
jbe
daa
sub
mov
xor
int3
icebp
into
and
shlb
inc
ds
push
sub
dec
sti
lods
sbb
xor
movsb
mov
mov
test
addr16
in
lret
mov
rclb
pop
hlt
ss
ror
fstps
xor
xchg
outsl
clc
inc
cwtl
out
aaa
push
movsl
and
sub
pop
jo
push
std
dec
inc
cmc
clc
data16
xor
lods
add
jle
dec
xor
adc
ret
daa
adc
cmc
lret
add
mov
lods
or
sarb
xor
outsb
push
bswap
add
shrb
call
inc
inc
and
adc
or
xchg
push
cmp
or
fistpll
test
push
mov
cmp
and
mov
imul
inc
subb
mov
out
stc
bnd
inc
ss
in
fidivl
xlat
jbe
les
dec
lods
dec
add
in
add
mov
gs
in
pop
insl
jae
rcl
popf
test
mov
out
xor
je
dec
mov
pop
cmp
mov
sub
and
data16
outsl
shl
inc
mov
loopne
test
sub
cmc
and
pop
or
stos
insl
push
cltd
adc
ja
mov
testb
rorl
es
movsl
shrb
nop
negb
mov
xchg
pop
cli
sub
jno
sub
pop
fisubs
sbb
in
lods
scas
dec
xchg
mov
bound
imul
mov
or
sub
push
xchg
sbb
jo
neg
sbb
push
xchg
stos
xor
ret
dec
mov
sahf
das
jge
ret
inc
sub
push
leave
hlt
sbb
jne
and
cs
sbbb
outsl
xchg
pop
mov
or
push
repnz
pop
mov
rorb
push
std
xchg
xchg
daa
jae
cli
pop
enter
push
js
dec
add
xchg
rcrl
fcoms
popa
dec
xor
push
or
pop
nop
ret
inc
sub
pop
fwait
pop
inc
jmp
je
sub
outsb
add
clc
aad
inc
mov
push
aam
pop
pop
mov
sbb
mov
andl
lock
inc
xchg
addb
xchg
sub
xchg
jno
in
xchg
jb
dec
sbb
jmp
dec
popf
lcall
or
inc
lret
sahf
sbb
xchg
shlb
mov
mov
xchg
lds
mov
sarb
push
clc
fnstcw
jbe
aas
mov
xchg
jae
es
rcll
or
adc
ret
lods
mov
push
stc
jle
cmc
pop
fs
and
sub
jnp
movsl
pop
cld
leave
mov
sbb
ret
lret
jo
int
loopne
mov
in
mov
pop
push
push
test
mov
mov
cmc
inc
add
mov
jg
ret
aaa
je
lock
cmp
addl
sbb
aad
cmpsl
sbb
xor
mov
popa
flds
mov
xor
jmp
aad
cmp
outsl
jge
xlat
repz
fbld
fsts
adc
aas
pop
stos
cmp
jno
mov
jo,pn
popa
mov
je
lcall
sub
sti
mov
push
cmp
xor
and
cld
arpl
push
addb
jp
mov
repnz
mov
mov
xor
fsubrp
xor
mov
mov
adc
jb
in
fwait
pop
in
insb
aam
clc
jl
enter
xor
ljmp
sbb
cmp
repz
jp
xor
loope
lret
mov
mov
cli
rclb
adc
test
out
scas
and
outsb
test
push
xor
cltd
mov
inc
xlat
pop
pop
std
or
push
push
test
xor
xchg
jg
pop
int3
pop
add
cmp
cli
mov
pop
add
and
insl
aaa
test
xchg
bound
sub
lds
cltd
ss
faddl
and
jbe
sub
stos
and
icebp
dec
inc
call
ds
es
ror
outsb
bound
imulb
ljmp
js
incl
das
into
jp
jo
stc
fcmovu
rorl
jns
adc
enter
cmp
or
xor
shll
and
sub
inc
mov
outsl
ja
cwtl
add
sbb
mov
lock
jecxz
enter
xor
lea
data16
add
adcb
pop
int3
into
into
sub
dec
xor
push
adc
insb
jo
push
and
push
and
mov
adc
jle
aad
push
out
test
and
push
xor
push
push
push
movsb
std
dec
imul
cmp
dec
lret
jno
dec
push
cmp
mov
leave
cwtl
xchg
push
icebp
outsb
jbe
es
pop
sbb
push
ljmp
je
pop
sbb
dec
jae
dec
stos
jl
cmp
insb
jp
cmpsb
sub
xchg
add
imul
sbb
cmp
ja
adc
aam
mov
cli
push
cmp
cli
jno
and
pusha
add
lahf
push
ja
jecxz
adc
add
jle
daa
popa
jp
dec
fnstcw
inc
adc
jmp
andb
orl
mov
sub
mov
mov
int
xchg
sub
hlt
imul
and
enter
popa
mov
mov
sahf
insb
add
sbb
or
fidivrl
and
xchg
pop
add
subb
mov
lret
dec
fidivl
mov
out
add
and
test
mov
mov
or
fisubs
inc
and
mov
jo
xor
std
dec
stc
cmp
cmp
jnp
inc
xchg
loop
fistl
fstl
fsubrs
mov
ja
add
jae
popf
sub
and
leave
imul
cmp
lea
data16
popa
jg
mov
adc
mov
adc
pop
daa
cmp
inc
fs
pop
fcmovnu
add
arpl
mov
das
pop
cmp
insl
ret
lret
push
push
mov
push
pop
xor
fisttpl
stos
cmp
sub
mov
orb
jg
xor
jno
jge
data16
lock
aas
jp
cld
loop
mov
jmp
push
mov
xor
xor
js
test
xor
test
mov
or
mov
incb
pusha
sete
adc
xor
jno
mov
lock
sbb
lock
mov
inc
cmpsb
fidivrs
sub
sbbb
pop
sti
add
mov
mul
dec
adc
jae
cli
cmp
sti
add
push
pop
shlb
ljmp
inc
jmp
adc
out
dec
mov
rcll
data16
fisubs
icebp
xor
pop
jl
mov
jmp
xchg
dec
mov
int
aam
popf
mov
cmp
mov
or
pushf
rep
mov
adc
add
xor
mov
xor
lahf
out
out
pop
pop
in
push
ret
jns
cmp
mov
in
and
bound
cmp
outsl
inc
andl
cmc
add
outsl
out
dec
stc
push
sbb
pop
imul
xchg
push
push
nop
adc
cld
mov
imul
ret
arpl
mov
aaa
sub
test
sbb
rcll
lods
xchg
ja
jns
adc
xlat
aaa
arpl
pop
jle
mov
mov
nop
mov
inc
mov
jmp
add
push
push
fdiv
aam
jb
jno
and
shlb
out
xchg
out
fdivr
or
daa
adc
mov
mov
jae
xchg
test
ljmp
inc
movsb
add
pop
incb
fidivl
xor
mov
popa
hlt
call
pushf
sub
lret
outsl
je
mov
cli
shr
xor
push
jge
push
insb
pusha
loope
fs
sub
out
push
inc
cmpsb
push
push
or
sbb
outsl
or
insb
sub
sub
call
cmp
xorb
mov
shrl
repz
call
test
fisttpl
fwait
jns
outsl
lret
cli
mov
mov
sub
xor
shrb
call
lds
mov
adc
repz
pop
pop
cmp
ljmp
push
push
enter
xor
pop
xchg
bound
hlt
push
inc
sub
cld
xchg
js
fisubrs
ret
push
mov
scas
xchg
xor
pop
xor
or
jl
push
jge
inc
mov
mov
sub
dec
mov
push
les
daa
rolb
out
int
sti
in
int3
out
sbb
adc
or
add
sub
and
jecxz
jae
test
lods
lahf
stos
in
push
je
dec
loope
add
push
je
xor
addr16
pop
sti
push
mov
sbb
les
int
mov
scas
les
test
cwtl
adc
out
mov
int
cmp
sbb
roll
iret
fimuls
ja
dec
jmp
lahf
arpl
push
and
fmuls
jg
xchg
ret
sub
sahf
add
stos
loop
or
pop
rorb
push
jbe,pt
rorl
lds
mov
test
push
jp
cmp
adc
cmp
dec
outsb
sti
cmp
or
xchg
jo
add
jmp
add
push
int
cli
and
mov
pop
and
rorl
cmpsb
mov
xchg
sub
jge
cltd
nop
jp
imull
into
mov
testl
stc
push
xlat
rolb
push
dec
adcl
xor
cmp
xchg
pop
xchg
cmpsb
cmp
popf
gs
cwtl
icebp
xchg
rcrb
xor
in
imul
push
push
adc
stc
fsubl
dec
mov
inc
add
dec
das
add
mov
xchg
add
jge
loopne
scas
stc
pop
imul
adc
mov
push
mov
shll
out
xabort
xlat
mov
sar
rcrb
and
lea
mov
dec
sbb
xor
jnp
dec
cmpsb
test
mov
mov
jns
pop
scas
lahf
repnz
mov
push
mov
xchg
fs
sbb
mov
or
sarl
jnp
adc
push
sub
sbb
push
jmp
rolb
mov
adc
sub
out
shll
cmp
imul
das
int
mov
xor
jmp
add
scas
inc
xchg
sti
adc
pop
adc
xchg
add
mov
jmp
mov
test
scas
movsb
jg
xor
dec
clc
movsb
fwait
push
cmp
dec
repnz
rolb
dec
ficompl
enter
loope
inc
cmc
aas
idivl
lret
mov
xchg
push
rorl
pop
es
mov
clc
push
ja
cld
sub
arpl
js
and
outsb
jo
add
enter
push
mov
cmc
rorb
ret
inc
and
ljmp
jle
dec
xor
add
ret
inc
xchg
enter
icebp
fsts
adc
repnz
cmp
add
jmp
mov
roll
test
stos
cmp
cwtl
dec
and
xchg
sub
add
fdivrl
outsb
aaa
pop
pop
call
cmp
or
jo
mov
mull
shl
daa
imul
sub
inc
jmp
adc
cmpl
fimull
in
sub
lods
or
aam
lcall
mov
repnz
ret
xchg
xchg
movsl
inc
pop
pop
sbb
sub
add
inc
add
or
mov
push
lods
icebp
in
mov
mov
in
or
adc
add
xchg
aam
fcompl
lret
xor
lods
pop
loopne
les
cltd
test
jne
adc
jne
inc
test
mov
and
pop
out
mov
sbb
leave
pop
adc
das
jnp
dec
add
and
inc
mov
loop
add
pop
ficomps
adc
test
sub
xchg
flds
sbbl
int
ja
jns
cmp
xor
xchg
cmp
adc
cmpsb
jns
push
movsl
addr16
andb
mov
ja
js
dec
push
sbb
cli
mov
lock
outsl
cmc
push
mov
inc
dec
xor
mov
imul
mov
inc
je
cltd
loop
cli
scas
ret
fisubl
cmp
addr16
mov
sub
pop
movb
rcrl
jmp
xchg
ficoms
pop
adc
mov
push
xchg
ljmp
dec
lds
lcall
cmp
cmp
inc
enter
push
jb
test
pop
xlat
sahf
addb
jbe
stos
adcl
xor
pushf
jl
fcmovnb
pop
sbb
addl
fwait
sub
adc
f2xm1
out
das
push
mov
enter
ret
push
sbb
pop
idiv
outsl
movsb
shl
cmp
ret
cmpb
mov
mov
scas
jnp
divb
adc
jge
push
call
loope
popa
cmp
mov
adc
aam
bound
inc
dec
dec
mov
mov
and
sub
xor
dec
mov
fcoml
hlt
xor
dec
dec
imul
mov
adc
movsb
out
stc
enter
jge
aad
imul
pop
xchg
aaa
push
sub
aam
cmp
dec
add
or
dec
popf
mov
lock
cmp
mov
outsl
aam
pop
loop
jp
and
jnp
jbe
jge
cmp
or
cmp
inc
and
mov
jg
adc
cmp
int
sbb
pop
cmpsb
mov
push
cli
lods
jl
jp
pop
xchg
cmpsb
sbb
enter
cmpsb
outsl
loope
shll
aad
jne
popa
mov
jle
loopne
inc
es
mov
sahf
sbb
enter
or
insl
iret
push
jo
sub
mov
sub
xor
mov
insb
das
mov
push
mov
movsl
xchg
out
out
or
aad
out
out
mov
pop
add
cmp
cmc
sti
pop
xor
push
mov
add
sbb
pusha
xor
pop
pop
stos
cvtps2pi
push
in
mov
jp
or
movl
xor
sbb
cmp
mov
adc
mov
sahf
adc
mov
adc
sbb
out
xchg
add
roll
sti
and
push
rolb
mov
call
shlb
pop
xchg
dec
arpl
fisubl
and
fs
cmp
add
mov
pop
and
push
xor
jp
cltd
jb
sbb
clc
mov
sahf
ss
pop
daa
mull
cmp
pusha
stc
ljmp
dec
gs
flds
inc
cmp
fwait
lock
push
loop
in
pop
add
push
fadd
cmp
add
cli
les
popl
jecxz
clc
jne
inc
mov
cmpsb
and
add
mov
mov
jbe
mov
je
jns
rclb
cltd
aas
test
mov
roll
lods
mov
hlt
popf
xor
pop
repz
adc
ret
xor
out
pop
into
addr16
lret
ljmp
xchg
cld
daa
aas
push
push
fcoml
cmp
lods
push
sbb
mov
sub
negb
xchg
loopne
aaa
outsl
mov
outsb
mov
imul
in
cs
jp
in
stos
dec
cmp
inc
aad
adc
outsl
xchg
outsl
and
lret
mulb
je
or
push
adc
inc
inc
das
xchg
cmp
dec
sbb
shrl
cmp
aas
adc
sahf
lds
jge
jle
mov
stos
rcrl
inc
or
dec
and
popa
out
or
cli
scas
fwait
sub
out
into
lret
loopne
mov
scas
les
lret
mov
xor
add
adc
xor
mov
pop
push
addl
test
ss
jge
outsb
cmpsl
push
xchg
push
dec
sub
pop
iret
rorb
int3
sbb
call
adc
xchg
in
xchg
lahf
cmc
andl
inc
push
sbb
xchg
mov
sub
pop
inc
test
jl
or
adc
cs
dec
mov
es
loop
into
mov
roll
mov
inc
inc
in
pop
mov
add
aad
pop
les
mov
push
xchg
loope
mov
repnz
pop
stos
scas
fidivrs
dec
imul
jo
cmp
in
push
inc
add
mov
pop
jecxz
mov
insl
lods
subl
nop
aad
cmpsb
ja
stos
mov
movsb
iret
adc
shlb
or
stos
push
push
ja
lock
sar
fmuls
dec
push
pop
js
rorl
add
push
je
xlat
clc
push
dec
sub
mov
fidivl
xchg
clc
repz
ficompl
fincstp
pop
lods
mov
ret
jmp
dec
and
pop
enter
repz
negb
or
cmp
sbb
dec
sbb
cmp
inc
adc
clc
nop
subl
aam
lods
fsubrl
loope
add
aam
add
loop
or
push
out
pop
cmp
mov
pop
decl
push
repz
push
lods
sub
cmp
sbb
js
orl
mov
fsubrl
fcoml
cmp
push
je
mov
xor
lcall
icebp
lock
jb
lcall
call
mov
insl
cmp
jp,pn
fadd
add
pop
and
movsl
adc
lods
mov
sti
out
push
inc
jmp
pop
shrb
loopne
sahf
inc
jge
pop
jg
xchg
and
dec
adc
sbbl
mov
rcll
test
fidivl
or
into
fstps
mov
or
pop
mov
popf
jnp
mov
sbb
repnz
inc
lcall
inc
dec
sbb
out
jns
imul
mov
xor
hlt
popf
stos
mov
int
and
jns
sahf
add
ja
jmp
or
fmulp
inc
icebp
add
mov
or
jne
pop
in
insb
dec
fadd
sbb
pop
and
cmp
sbb
lds
lods
fisubrl
sbbb
jns
xor
adc
mov
jnp
enter
inc
xlat
jecxz
clc
cltd
icebp
xchg
push
inc
xchg
adc
and
movsb
flds
outsl
sub
dec
push
push
cmp
stos
mov
xchg
movsl
and
pop
enter
pusha
out
ret
fdivl
hlt
pop
shrb
cltd
mov
or
nop
je
subb
xchg
loope
hlt
mov
jmp
neg
test
out
je
sub
fisubl
push
insl
cvtdq2ps
dec
scas
xor
push
mov
outsl
loop
mov
push
ja
imul
push
mov
jns
push
enter
loopne
leave
sbb
pop
stos
loope
cmp
xlat
mov
test
rcll
fisttpll
jle
add
mov
in
loope
adc
lock
sti
pop
mov
jnp
jge
pop
pop
test
xor
andb
lds
push
aad
dec
mov
cs
icebp
icebp
or
ja
mov
sub
xchg
adc
cs
stos
add
testb
dec
clc
lret
adc
popa
int3
popa
shll
test
mov
cwtl
xor
lahf
ficompl
or
out
mov
push
lahf
adc
or
out
loop
cmp
lcall
loope
jae
mov
mov
pop
aas
dec
mov
inc
hlt
dec
bound
or
lods
stc
mov
pop
mov
sub
xor
mov
add
push
imul
pop
mov
iret
cmpsb
es
mov
imul
int
xor
imul
adc
xchg
call
add
fbstp
push
jb
cmp
push
adc
fsub
mov
adc
out
ret
js
or
mov
lret
std
jns
sbb
pop
sub
in
shll
lods
lahf
inc
mov
fwait
lock
xor
sahf
shll
jbe
sbb
sub
imul
and
xchg
mov
inc
mov
sahf
jg
imul
ss
dec
xchg
fcmovnu
data16
rol
adc
mov
push
mov
leave
mov
jecxz
pop
cmpsb
push
dec
aam
flds
pop
mov
or
popf
out
mov
cltd
ss
or
cmp
divb
mov
xchg
not
addr16
xor
das
cmp
dec
mov
div
dec
arpl
loopne
mov
dec
xchg
mov
mov
test
scas
cmc
push
sahf
int
and
pop
xchg
test
mov
or
das
and
inc
outsl
icebp
cmp
sbb
push
insl
scas
or
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
addl
mov
sub
movl
push
push
push
movl
cmp
movl
je
orl
xor
movl
jmp
mov
cmp
movl
jne
neg
mov
andl
push
sbbl
push
adcl
call
test
movl
je
push
andl
call
movl
mov
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
movl
lea
mov
mov
mov
sub
sub
lea
mov
subl
mov
mov
sbb
mov
movl
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
pushl
call
jmp
mov
andl
xor
mov
add
mov
movl
mov
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
mov
addl
xor
adcl
add
andl
mov
mov
subl
xor
add
adcl
mov
mov
adcl
xor
add
subl
mov
mov
sbbl
mov
adcl
mov
sbbl
mov
adc
mov
mov
incl
mov
xorl
mov
mov
negl
mov
movzwl
sbb
mov
movl
sbbl
mov
xor
add
jmp
movl
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
push
orl
push
call
test
movl
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
subl
push
push
call
sbbl
test
movl
je
andl
xor
xor
inc
mov
cmpl
ja
jmp
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
adc
mov
xor
lea
push
xor
mov
adcl
xor
sbbl
lea
xorl
push
xor
mov
adcl
pushl
adcl
call
mov
mov
xor
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
pushl
call
cmpl
jb
lea
mov
mov
xor
sbbl
xor
add
sbb
mov
adcl
xor
movl
lea
movl
mov
cmp
movl
jbe
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
jmp
mov
mov
mov
mov
sub
xor
mov
inc
mov
sbbl
sub
subl
xor
mov
movl
lea
movl
mov
movl
lea
movl
mov
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
subl
push
sbbl
push
sbbl
call
test
movl
je
mov
movl
cmp
movl
jne
mov
cmp
jne
push
addl
push
call
test
je
movl
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
push
adcl
push
call
adcl
test
je
movl
mov
movl
cmp
movl
jne
mov
cmp
jne
xorl
push
push
call
test
je
movl
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
addl
push
movl
push
xorl
call
test
movl
je
movl
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
adcl
push
push
call
movl
test
je
mov
movl
cmp
jne
movl
mov
movl
cmp
movl
jne
subl
push
addl
push
subl
call
adcl
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
sbbl
push
adcl
push
call
test
movl
je
movl
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
push
push
call
xorl
test
movl
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
push
call
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
push
xorl
push
call
test
je
mov
movl
cmp
movl
jne
movl
mov
cmp
jne
push
subl
push
call
orl
test
je
movl
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
sub
add
mov
and
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
mov
sbb
mov
movl
cmpl
je
cmpl
jg
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
push
or
mov
mov
and
xor
xor
mov
push
xorl
mov
add
movl
cmp
je
mov
movzwl
add
mov
xor
xor
add
addl
add
movl
adc
andl
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jb
movl
negl
mov
or
movsbl
sub
jmp
ret
addb
inc
cmc
in
sub
or
jp
rcrl
jae
mov
and
loope
repnz
cld
das
test
jecxz
int
sub
push
loopne
imul
in
loopne
mov
adc
xor
iret
out
xchg
or
or
mov
std
sub
xor
repz
dec
insb
lret
in
lods
cmc
jl
cmc
jl
inc
repnz
xchg
mov
out
test
test
push
add
cwtl
out
and
sub
fistpl
xchg
pop
mov
js
cmp
sub
add
clc
call
jnp
in
daa
xchg
jmp
pop
mov
mov
lea
jnp
adc
fists
xor
stos
sub
add
es
adc
dec
lret
andl
jecxz
std
xchg
jo
add
jle
addr16
sbb
pushl
popa
cmp
dec
inc
pop
mov
xchg
std
shl
iret
shll
mov
and
mov
dec
addr16
cld
sbb
inc
rcrb
sub
dec
aam
insl
divl
test
pop
test
or
push
notl
sarb
add
outsl
adc
clc
mov
call
iret
notl
xor
jmp
and
scas
scas
and
mov
jae
and
inc
push
dec
lcall
dec
arpl
lods
fists
mov
call
test
xchg
dec
clc
popf
sbb
sahf
dec
jmp
dec
add
push
scas
movsb
cli
test
jne
push
out
arpl
mov
push
lahf
fstpl
cmp
or
jl
scas
mov
int
lar
or
movsl
repz
sbb
enter
icebp
jp
cmpsl
cltd
insl
mov
in
bswap
push
adcb
sbb
push
mov
lret
repz
and
push
fbstp
sub
ror
scas
cwtl
inc
aam
cmp
dec
insb
or
addr16
or
rol
dec
mov
addl
inc
push
push
mov
sahf
mov
cmpsb
daa
sbb
movsb
stos
pop
mov
pushl
out
adc
ds
loop
jb
dec
jbe
shrb
lock
je
cld
inc
rcl
mov
cmp
pusha
cmp
ds
loope
adc
mov
push
lods
mov
repz
pop
dec
repnz
push
sbb
jnp
and
nop
dec
or
out
and
clc
add
mov
jae
dec
aaa
scas
sbb
sub
sbb
bound
jbe
test
enter
or
inc
lods
or
inc
fnsave
stos
adc
lcall
aad
out
and
rol
fstl
xor
mov
in
or
imul
cltd
cmp
cmp
inc
fdivp
mov
inc
lods
xor
mov
cmp
cmpsl
add
daa
cmc
xchg
sbb
push
int3
jae
sub
xchg
push
into
arpl
xlat
jecxz
lret
subl
adc
push
inc
cmpsb
push
inc
jne
sbb
mov
scas
rolb
mov
and
xor
mul
xor
pop
or
mov
scas
in
outsb
lahf
jns
clc
add
cmpsl
cs
aam
pop
out
inc
or
out
in
lret
ficompl
vmread
fcos
add
lcall
xor
add
or
cmp
sbb
cmc
lds
ficoml
leave
nop
fcom
mov
inc
fwait
pop
dec
add
jl
xchg
aaa
into
mov
sbb
lods
sbb
pop
insl
cmp
mov
xchg
xchg
stos
and
mov
outsb
lea
addr16
shl
scas
clc
jne
inc
adc
stos
sub
mov
add
int
jg
dec
cmp
and
inc
pop
push
mov
shlb
daa
xchg
in
and
pop
dec
lcall
cli
rclb
insl
aaa
and
push
pop
xor
pop
pop
insl
mov
jmp
dec
mov
push
int
shrb
repz
aas
mov
jecxz
rcrl
out
lods
cmpsb
sbb
dec
pushf
stos
jns
in
insb
xchg
frstor
je
jo
cmp
pop
loopne
das
or
scas
fisttpll
int
jl
mov
jle
mov
cmp
fcmovu
fwait
push
inc
xor
test
sub
clc
lds
mov
and
mov
je
orl
sub
jl
push
stos
inc
mov
out
jno
push
push
movsl
hlt
cmpsl
xchg
and
enter
out
add
fidivrl
out
adc
cmp
aas
push
or
cmp
mov
inc
push
cmp
insb
sub
pop
out
mov
cmp
push
pop
mov
ret
ficomps
fs
cmp
adc
repnz
or
mov
dec
cmp
pop
mov
or
cmp
and
cmpl
movsb
fdivrl
jl
jns
sbb
popf
dec
jo
inc
int
mov
xchg
scas
jge
or
sub
inc
loopne
inc
mov
and
imul
jno
add
push
in
jl
xlat
cmpsl
pop
lock
add
fadds
mov
in
xchg
pop
jecxz
jmp
mov
addb
sarb
daa
in
pop
std
ficomps
js
movsb
xor
xchg
mov
stos
mov
call
mov
pop
sub
inc
in
imul
dec
dec
dec
lret
inc
inc
ret
dec
and
mov
xchg
mov
and
fldenv
fwait
dec
arpl
jbe
enter
pop
mov
mov
jle
cmova
or
test
bound
lret
testb
add
mov
stc
mov
add
fs
es
in
in
fsubrl
pop
inc
inc
sub
mov
out
dec
pop
and
std
das
mov
ds
add
sub
fcmovnbe
enter
xchg
stos
or
inc
aas
jnp
push
std
enter
ficoms
ja
fsubr
and
cmpsb
repnz
push
xchg
lret
mov
mov
popf
cmp
cltd
outsl
out
lock
out
rcrb
mov
mov
lea
ds
mov
dec
jle
cmpsb
xchg
dec
cwtl
pop
adcb
bound
int
jecxz
es
mov
and
sub
int3
movsl
and
xchg
push
stos
idivl
pop
fimull
mov
insl
xchg
pop
sub
imul
shlb
jno
aad
push
add
mov
xor
test
je
jle
lock
sub
daa
movaps
mov
add
lds
pop
insb
dec
lods
out
lea
mov
adc
sub
test
and
cmpsb
rolb
pop
add
scas
or
jnp
or
jae
inc
mov
mov
adcb
inc
mov
xchg
push
pop
push
xchg
mov
subb
addl
xchg
out
popf
aaa
jmp
in
mov
dec
rcll
push
mov
stc
or
gs
std
outsl
cmpsl
pop
jb
ja
add
pusha
add
adc
idivl
sbb
mov
fistpll
aad
rclb
test
jp
fwait
movsb
ds
cmp
jg
and
iret
dec
xchg
repnz
add
cmp
xchg
lock
adc
loopne
cs
adc
cmp
mov
jb
cld
mov
loopne
cld
les
dec
pop
xor
dec
js
icebp
xchg
lds
stc
xchg
cmp
lock
int3
stos
inc
jb
shll
mov
mov
jmp
sbb
cs
jno
repnz
cs
jo
adc
xor
sarb
subl
mov
mov
ror
cld
dec
inc
mov
cmpsb
adc
mov
fisubrl
inc
shr
pop
xchg
push
cltd
sbb
xor
mov
call
ficompl
xor
cld
outsl
sub
imul
sbb
pop
stos
addr16
mov
imul
xchg
pop
nop
cmpsl
jge
xor
out
insl
cmp
sahf
andl
lods
push
mov
outsb
and
movsb
aaa
out
fidivrs
test
pop
leave
xchg
mov
aad
cltd
sbb
ja
int3
or
hlt
mov
xchg
push
and
xchg
xchg
add
inc
lock
pop
xchg
aaa
call
jl
stos
mov
jmp
js
dec
cmp
inc
cmp
xchg
imul
mov
dec
push
movsb
pop
mov
rcl
fimull
sub
in
aas
push
filds
nop
subb
jmp
stc
mov
shll
push
adc
test
dec
aaa
mov
popf
in
out
mov
imul
or
mov
pushf
movsb
incb
daa
jecxz
add
sbb
or
push
sbb
inc
jae
andl
push
imul
add
xor
xor
lock
push
push
push
ljmp
inc
xor
add
ret
sub
dec
incb
fwait
xchg
add
dec
js
es
mov
adc
scas
push
ret
lahf
inc
jp
mov
mov
xor
push
xor
mov
icebp
outsb
and
lret
shl
data16
xchg
rep
xchg
add
cmp
mov
push
cmp
in
dec
cmp
mov
dec
inc
cmp
cmp
out
add
mov
jno
ret
cli
adc
jg
lods
cld
mov
xor
icebp
outsl
mov
mov
mov
icebp
jno
push
es
push
xchg
inc
push
popa
pushf
xor
xor
clc
push
xor
adc
dec
and
lcall
aas
jg
mov
or
arpl
mov
lret
xor
mov
movsl
aaa
out
jnp
xchg
jns
add
pop
imull
outsl
arpl
stos
xchg
jnp
sub
pushf
sbb
dec
add
jns
les
nop
lret
pop
stos
add
int3
xchg
cmpsb
test
dec
into
or
jmp
or
and
inc
subb
lcall
gs
fs
mov
xchg
mov
sahf
adc
stc
data16
mov
nop
jae
nop
loopne
or
leave
lret
jo
je
dec
fwait
mov
adc
dec
stos
lods
mov
cmpsl
add
mov
mov
or
rcl
push
cmpsb
xor
jne
xor
inc
inc
lock
nop
shll
inc
cwtl
lods
pop
mov
push
xor
insb
lds
sbb
daa
sbb
inc
mov
popa
push
negb
mov
sti
rorl
outsb
inc
cmpl
icebp
xor
and
loop
jns
xchg
sbb
arpl
jl
add
pusha
or
fldt
cwtl
mov
jg
mov
inc
out
je
adc
insl
push
ret
sub
popa
mov
and
jno
das
xor
cmp
adc
add
lret
lods
cmp
jmp
adc
xor
addr16
ss
lahf
add
mov
lret
jge
clc
int
ds
in
pop
pop
dec
sbb
sub
mov
daa
sub
mov
push
mov
rcrl
jb
dec
shll
cmp
out
sub
or
and
lock
jae
sub
lret
les
push
mov
test
add
jmp
ret
pop
jno
xchg
negb
xchg
scas
repz
fpatan
pop
sti
or
xor
das
lock
jg
dec
jb
xor
sbbl
scas
push
je
std
sbb
jl
outsl
push
xlat
adc
adc
enter
dec
mov
mov
insl
mov
xchg
push
loop
sub
clc
dec
andb
mov
imul
inc
mull
cmp
outsb
add
repz
out
push
ret
lods
shll
rcrb
fisubrs
push
pop
fists
fnstenv
hlt
outsl
pusha
imul
movsl
inc
jns
repnz
xor
push
test
je
bound
sbb
and
xchg
cli
push
cltd
int3
add
cmc
out
shl
imul
lock
push
dec
cmpsb
setns
movsl
mov
sbb
subl
and
push
push
and
imul
nop
jnp
xchg
or
pusha
push
inc
push
pop
xchg
shrb
orl
cltd
mov
ljmp
mov
adc
jns
xor
or
jbe
add
imul
dec
shrl
stc
cmpsb
ret
add
add
lock
aam
pop
inc
inc
mov
in
sbb
sahf
xchg
into
fldcw
mov
sar
addr16
aas
adc
dec
lea
adc
aad
lock
icebp
ss
push
or
stos
cmp
mov
nop
popaw
shll
push
mov
out
mov
filds
mul
or
lds
jmp
lcall
push
xor
andb
inc
add
enter
mov
mov
pop
push
jmp
add
test
jo
lods
cwtl
mov
mov
test
cmp
daa
iret
dec
loope
jo
xchg
pop
mov
jg
fcoms
ja
add
cwtl
testl
loope
and
jo
mov
cmp
insl
fs
ret
inc
lods
cwtl
or
and
rcrl
ret
mov
js
sbb
jo
push
js
hlt
push
fldcw
std
lahf
ret
std
daa
les
inc
add
jb
fisubl
sub
out
mov
xchg
add
ret
sbb
mov
xlat
add
mov
cltd
ficompl
cwtl
enter
push
stc
dec
test
addr16
jae
inc
mov
xchg
scas
lea
mov
mov
jcxz
in
inc
gs
sub
push
inc
shlb
adc
cli
stos
or
dec
movl
add
pop
lds
add
cld
scas
clc
adc
pop
out
or
pop
xor
xchg
xchg
insl
int3
loop
and
outsb
sub
jge
je
dec
scas
adc
mov
lahf
pop
mov
adc
add
pop
cmp
movsb
mov
push
sarb
jae,pt
gs
pop
push
add
jle
dec
mov
sub
es
cmp
rcll
xchg
add
xor
iret
xchg
jb
ficoms
add
dec
out
lahf
add
xor
mov
mov
mov
sbb
aas
push
jno
bound
adc
mov
les
fs
mov
ljmp
jo
sub
rcll
fsubs
pushf
insl
imul
jns
jmp
or
jbe
and
mov
jg
xor
mov
mov
push
lds
repnz
push
in
sub
pop
pushf
jbe
mov
int
mov
pop
fld
add
movsl
dec
cwtl
movsl
lret
xor
cld
inc
add
bound
and
mov
test
pop
iret
xor
sti
shlb
jo
popa
xchg
cs
daa
mov
add
aaa
inc
xchg
iret
ret
mov
dec
and
jb
loop
xchg
jae
mov
cmpsb
push
adc
xchg
mov
outsl
jle
xor
pop
dec
lds
hlt
mov
insl
and
mov
add
ficompl
loope
pop
and
adc
mov
fidivl
ret
ja
inc
ja
pop
fdivrp
ds
mov
cmp
cmc
push
bts
imul
sub
divb
cmpb
push
push
push
inc
sti
mov
movb
pop
imull
add
mov
aad
popa
or
or
sub
repz
inc
es
jns
sub
pop
dec
pop
lea
lcall
sub
xlat
fucomp
jbe
jg
mov
inc
ja
sub
stos
shrl
je
mov
push
shl
and
adc
dec
lea
into
cli
sub
xchg
ficoml
in
out
bound
inc
cmpsl
xlat
push
pushf
movsl
repz
push
imul
int
std
jp
mov
cmovp
fwait
cmp
jb
js
jge
pop
and
js
inc
push
scas
ret
insb
push
jecxz
xchg
sbb
xlat
xor
es
jo
lahf
andb
cmp
cmp
rcrl
fcmovu
daa
sarl
sahf
roll
call
fwait
sbb
xor
add
repz
and
mov
push
push
mov
push
jb
icebp
scas
push
cmc
lods
fwait
xchg
call
sbb
fildl
in
pop
mov
mov
aas
cmpsb
mov
mov
adcl
cltd
lret
sub
or
dec
arpl
sbb
cli
cmc
ja
mov
fisttpl
test
cmp
aaa
and
pop
pop
outsb
xchg
fmuls
sub
sbb
pop
int3
push
sub
cmpsb
scas
movsl
jne
or
testl
mov
push
sbb
add
imull
jg
sub
mov
scas
sub
popa
stc
adc
inc
dec
jle
nop
mov
das
fldl
jmp
pop
jg
ret
mov
sub
test
ja
adc
addb
loop
dec
orb
and
ss
xlat
gs
cmp
insl
sbb
pop
sub
arpl
push
imul
fcmovb
push
sub
jecxz
xor
mov
and
pop
inc
jl
aas
mov
push
movsb
xor
inc
and
mov
inc
inc
rorl
cmp
adc
mov
cld
xchg
or
sub
mov
out
sbb
insb
mov
and
outsl
decb
cmp
andb
out
pop
cltd
lahf
add
push
cmc
out
mov
inc
fwait
cwtl
push
popa
jge
pushf
mov
ret
rclb
outsb
push
pop
push
iret
testb
dec
fdivrl
into
orl
imul
incb
xchg
mov
js
iret
bound
jecxz
adc
mov
je
enter
xchg
push
in
dec
call
and
ja
pop
push
cltd
sub
or
ljmp
mov
dec
sub
or
pop
jbe
cmpsl
dec
inc
jle
dec
sbb
push
ss
mov
or
daa
shlb
in
std
sbb
sub
ss
gs
imulb
mov
add
ja
jle
imul
icebp
loopne
pop
daa
add
lcall
mov
imul
lret
imul
pop
stos
jb
dec
push
cmp
pop
mov
ljmp
xor
arpl
adc
bnd
xchg
into
adc
je,pt
rclb
divl
mov
dec
sbb
pop
xchg
pushf
popf
push
loope
mov
arpl
cld
mov
inc
andb
jb
shll
lahf
pop
xlat
mov
add
sbb
sub
xor
pop
push
cmpsl
mov
xor
push
int3
and
icebp
dec
xor
shl
out
pushf
jl
das
std
cmp
jno
or
lock
lcall
daa
xchg
cli
pop
nop
cmpsl
addr16
cmp
sub
dec
arpl
cli
mov
ljmp
movsl
xchg
test
shl
mov
lret
inc
push
or
lcall
cmpsl
jmp
jecxz
iret
aad
mov
push
fstl
mov
mov
int
and
xor
cmp
jl
aad
jg
xchg
cmp
mov
cwtl
mov
push
or
sub
xchg
jle
dec
sbb
inc
insb
in
pop
mull
vgf2p8affineinvqb
push
jae
dec
cld
flds
out
dec
fucomp
pop
push
scas
xor
bndldx
cmp
stos
mov
testl
dec
mov
divl
popf
and
aaa
or
popf
aaa
add
xchg
inc
in
mov
das
int
dec
push
or
stos
cmp
and
and
lock
ss
pusha
push
dec
cmpsb
cli
mov
imul
pop
mov
pop
jge
mov
dec
dec
mov
nop
inc
xchg
mov
dec
cltd
pop
push
sbb
outsb
vphaddbq
xor
cwtl
push
or
data16
jb
es
jecxz
stc
repz
add
outsl
push
or
popf
mov
mov
test
mov
mov
mov
popf
ljmp
pushf
sub
out
popf
dec
pop
sub
xchg
mov
and
and
loop
cwtl
and
sub
push
sub
sub
and
or
jno
cld
movsl
inc
cmp
aas
aaa
jo
push
stos
lret
pop
adc
lock
mov
fnstcw
and
fs
stc
out
fsubrp
aad
lcall
jo
and
xor
xchg
cmp
clc
mov
pop
in
mov
addr16
sbb
mov
lcall
pop
add
adc
pop
dec
sbb
sub
daa
in
hlt
mov
lret
push
movsb
mov
fnsave
cli
or
shlb
mov
outsl
sub
addb
lcall
xor
cmp
loop
or
fadds
sub
or
push
rorl
jp
jp
in
sar
adc
lods
jmp
fs
out
repz
push
aad
out
popa
sbb
inc
push
cmpsl
mov
adc
bound
fsubrl
inc
xor
orb
dec
mov
sahf
ret
mov
push
mov
xchg
lods
sbb
and
pop
daa
push
ljmp
mov
fmulp
stc
sbb
lea
popf
arpl
loopne
sbb
mov
loop
ja
out
jbe
filds
shll
inc
mov
and
push
cmc
lret
in
fimuls
fists
mov
add
cli
pop
mov
jb
dec
hlt
xorl
adc
ljmp
jp
das
sub
xlat
dec
pop
or
out
clc
add
adc
pop
pop
ret
and
scas
lods
int3
mov
jg
add
cwtl
and
lahf
add
cmpsb
mov
pop
popf
in
or
mov
inc
popa
mov
push
jns
push
mov
shlb
clc
jg
ret
and
sub
pop
lcall
dec
pop
jge
jns
sub
call
adc
mov
mov
dec
sub
jbe
clc
pop
jno
mov
sbb
test
js
mov
push
sub
in
jp
popaw
fldcw
stos
dec
sarl
imul
mov
pop
mov
dec
sub
cld
ret
pop
sbb
mov
js
mov
mov
mov
xchg
dec
jle
xchg
cmc
cmp
dec
sbb
mov
cmp
shlb
out
add
push
or
xchg
add
outsl
add
arpl
mov
cmp
jbe
inc
pop
mov
scas
sbb
std
scas
inc
out
hlt
pop
inc
sub
mov
scas
fucomip
pushf
pop
sub
and
les
shll
sti
addr16
jno
cmpsl
mov
subb
dec
in
xchg
out
cmp
movsl
mov
repz
jae
jae
sbb
jno
mov
jne
jl
xor
or
pop
xor
push
xor
je
jne
in
inc
popf
add
pop
mov
or
cwtl
cs
mov
mov
add
daa
xor
shr
idivl
xor
jp
out
ret
stos
push
pop
jns
inc
ds
movsl
movsb
lods
inc
dec
insl
inc
xor
out
ffreep
movsb
iret
cli
fldl
jne
or
fdivl
adc
icebp
andb
imul
mov
das
sub
add
xchg
and
push
or
sbb
test
cmpsl
pusha
cmp
int
pop
ljmp
daa
mov
enter
sbb
fsubr
jmp
test
enter
dec
or
adc
bnd
lea
stos
xlat
mov
mov
subb
hlt
lret
out
fnstenv
out
sbb
mov
iret
pop
dec
lds
jb
call
dec
stos
or
adc
push
movsb
mov
mov
fwait
pop
rcrb
push
popa
cwtl
scas
ljmp
mov
dec
icebp
cmp
cmp
add
push
into
inc
test
xor
mov
and
mov
sub
les
sub
pop
cs
stc
inc
adc
or
push
rcr
jecxz
ret
addr16
sbb
cmp
mov
lods
push
mov
jb
mov
push
idivl
outsl
jne
lods
outsb
stc
jne
sub
mov
sub
imul
add
jg
inc
and
stc
jmp
add
jns
mov
jo
or
pushf
sarb
add
popf
sub
push
sbb
loopne
mov
xor
stc
pop
or
shll
sarl
cltd
and
into
ret
sbb
push
imul
or
std
gs
out
bound
lods
ljmp
clc
daa
inc
fsubrl
insl
and
pusha
sub
cmp
mov
fimull
cmp
iret
arpl
pop
hlt
dec
imulb
in
push
into
xchg
iret
sbb
orl
bound
add
push
rcrl
repz
in
xor
gs
or
and
xor
xchg
mov
mov
mov
inc
in
cwtl
sbb
mov
push
mov
test
jbe
mov
sub
sbb
test
pop
dec
iret
test
xchg
fimull
and
jecxz
notb
popa
scas
xor
mov
and
xorb
dec
roll
jg
xchg
and
mov
rcrb
mov
in
das
jecxz
or
add
cli
stos
je
mov
mov
ds
dec
inc
cmp
bound
and
test
mov
jne
add
das
push
aad
bound
fwait
jnp
xor
mov
push
jo
adc
xchg
inc
fistps
xchg
and
loop
dec
mov
push
jge
mov
xchg
mov
push
pmulhuw
pusha
clc
cld
pop
rcl
out
shlb
add
adc
or
ljmp
dec
jmp
cmp
nop
adc
icebp
inc
sbb
pop
ficoml
jg
scas
loop
mov
mov
and
inc
call
call
les
jl
imul
movsb
dec
neg
sub
ja
rol
add
shrb
inc
sub
scas
out
xor
sub
push
fistpll
pop
out
adc
pop
lds
adc
lods
mov
mov
fiaddl
aaa
jno
add
pop
or
ficoml
int
test
push
js
in
into
das
repz
sbb
push
lahf
pusha
add
ss
xor
push
sbb
gs
shrb
imul
bound
xchg
push
mov
int
or
inc
jbe
pop
jne
lcall
clc
incl
and
sbb
inc
int
add
mov
lods
je
mov
loopne
push
push
cli
push
dec
xchg
cs
enter
mov
jmp
inc
ret
cmp
mov
loopne
pop
fs
cmp
enter
mov
jo
mov
in
icebp
add
sub
test
xchg
popf
in
dec
out
pop
xchg
push
pop
add
fld
pop
repnz
mov
pushf
xchg
mov
idivl
lock
test
inc
data16
sub
jl
mov
aas
and
cmp
jl
fisubrs
sbb
xchg
push
add
fcomp
loope
mov
xor
imul
addr16
pop
sub
sbbl
lods
lret
jnp
jl
mov
jge
mov
into
jmp
lahf
test
repz
aam
leave
int
xchg
sbb
fimuls
clc
jge
ret
add
inc
and
push
jecxz
xchg
sbb
frstor
cwtl
jmp
leave
ljmp
lods
mov
lods
xor
outsl
adc
shr
popa
or
pushf
sbb
loope
pop
ficoms
sahf
aad
in
mov
pushf
jne
adcl
ja
lods
push
inc
sub
imul
cmp
xor
out
lahf
xor
outsb
push
xchg
adc
dec
mov
add
push
out
insb
aaa
cmc
xchg
test
adc
pop
dec
insb
adc
xchg
pushf
incl
mov
push
dec
and
sar
inc
push
mov
loopne
add
inc
cmp
mov
cli
mov
or
xchg
mov
xchg
dec
mov
and
lcall
rcr
movsb
pop
cmp
sbb
dec
xchg
dec
fmul
xchg
pop
mov
xchg
aas
les
lods
test
mov
out
add
rol
loope
out
sub
pop
and
inc
xchg
fnstcw
sbb
dec
icebp
xor
or
sahf
lods
sbb
xchg
inc
fisubl
mov
add
pop
sar
bound
sbb
clc
mov
push
mov
test
sbb
mov
xchg
loope
pop
cmpsb
or
insb
push
xor
jl
cmp
sbb
xchg
mov
inc
mov
arpl
add
loope
out
les
mov
outsl
lahf
sub
clc
roll
sub
mov
ficomps
pop
push
incl
popa
popa
cmp
rorl
aaa
insl
mov
mov
outsl
pop
andl
pop
stos
sbb
push
pushf
sbb
sbb
sbb
popf
mov
mov
lods
imul
pusha
repnz
mov
sbb
out
pushf
out
fstps
push
pop
jecxz
loopne
push
push
cmc
mov
fwait
push
psrlq
and
mov
outsb
and
in
xchg
out
fdivr
pushf
push
and
fbstp
mov
enter
dec
in
xor
sti
aas
sbb
js
and
js
pusha
mov
xchg
int3
stos
cmp
int3
cmp
cli
fcoml
pop
add
movsl
cmp
push
cmp
lock
mov
mov
rorl
jns
mov
inc
lea
cmpsl
out
push
adcb
lcall
jp
into
int3
dec
jg
in
sub
xchg
loopne
js
out
movsl
mov
lods
iret
pop
xor
mov
jae
mov
shl
fldt
stos
js
adc
mov
das
xor
jns
push
popf
inc
adc
scas
xchg
mov
in
inc
and
sbb
insl
insb
das
cmpsl
xchg
sbb
addb
xchg
js
divb
int3
mov
jecxz
std
mov
xorb
std
sbb
ror
add
lret
cmpsl
push
push
xchg
and
movsb
lret
cmp
popf
mov
xor
dec
fucomip
jae
xor
aas
mov
subb
int
popf
lds
dec
push
std
pop
fs
dec
push
addl
lcall
xchg
xchg
add
cmpsb
mov
lods
xor
push
jns
repz
stos
aam
pop
rorb
sub
cmp
test
fdivs
xchg
aaa
pop
add
sub
mov
inc
aaa
pop
ret
and
cli
jb
add
ret
mov
mov
push
pop
orl
xor
cmp
jne
mov
sbbl
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
mov
mov
sub
or
mov
adc
mov
movl
subl
mov
addl
push
mov
or
mov
sub
xor
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
pop
sbb
add
add
add
add
add
mov
out
add
add
add
push
push
inc
push
mov
popf
hlt
inc
mov
aam
xchg
popf
push
add
pop
inc
outsl
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
stos
cmp
pusha
outsb
add
mov
mov
cs
xchg
cmp
mov
sarl
aaa
mov
cmp
mov
pop
sti
mov
sbb
or
pop
std
mov
mov
lods
fcompl
or
mov
mov
mov
mov
mov
lahf
and
rorb
mov
dec
and
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
add
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
