push
mov
sub
sbb
mov
mov
mov
add
mov
decl
mov
sbbl
push
push
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
xor
push
mov
mov
sub
imul
mov
adcl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
jmp
test
push
movsb
jb
jl
pop
or
xchg
cmp
mov
jle
into
xlat
cmp
pop
add
mov
rdpmc
bswap
and
sbb
inc
fs
out
mov
es
test
call
add
dec
stos
push
sub
sarb
mov
stos
push
rcl
test
pushf
mov
dec
out
dec
call
mov
and
jnp
ret
xchg
sub
loopne
cld
ljmp
sub
add
sbb
outsl
insl
add
cmp
jno
ds
or
adc
jge
inc
dec
aaa
adc
ja
sbb
ds
hlt
leave
mov
add
cmp
or
pop
loope
ja
in
dec
int3
dec
dec
les
in
mov
push
add
pop
add
inc
data16
ja
cmpsl
mov
adc
andl
cmp
adc
stos
sub
mov
fisubrs
bound
mov
jl
jae
inc
adc
pop
dec
pop
push
adc
inc
jmp
imul
mov
push
pop
sub
sub
cmp
jl
leave
cmp
in
scas
jne
scas
mov
jb
lea
dec
push
push
cs
push
outsl
stc
scas
mov
cli
stc
lahf
sub
mov
and
fs
fiaddl
loopne
lcall
xor
mul
sub
mov
fdivrs
jb
inc
fwait
add
cmp
cmp
fistpll
xorl
or
daa
mov
pop
inc
add
dec
xor
pusha
mov
and
add
lea
xorl
mov
adc
mov
orl
mov
xor
xor
neg
add
mov
movl
lea
sbb
mov
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
xor
add
mov
decl
mov
mov
mov
sbbl
mov
adcl
mov
xorl
movzwl
add
mov
jmp
fisubl
addb
lods
gs
aam
dec
xchg
cmp
jle
jg
jle
jns
adc
dec
popa
or
xchg
mov
jmp
pop
mov
add
xchg
repz
aas
shll
xor
and
add
xsavec
shl
sub
aaa
mov
inc
and
add
mov
in
int
xor
aaa
insb
ficompl
rolb
fldenv
dec
jne
sbb
cld
pop
icebp
fistpl
push
mov
or
scas
mov
call
enter
and
sub
in
adc
xchg
icebp
push
sbb
pop
push
clc
xchg
adc
xor
sbb
bound
xor
xchg
iret
popf
xor
ficoms
mov
mov
test
lods
stc
or
xchg
cmp
loope
pop
cmp
fnstcw
ds
inc
xlat
nop
xchg
cmp
testl
xchg
popf
or
xchg
sub
adc
and
jle
mov
and
jnp
inc
sbb
fs
je
cli
movsb
dec
sub
xchg
data16
dec
pop
enter
push
jns
jmp
xlat
sbb
stos
xor
imul
hlt
mov
jmp
pusha
test
aaa
in
lods
sub
adc
aam
mov
inc
jno
inc
pop
fistpll
jp
cmpl
aam
mov
cwtl
shr
movsb
je
cmpsb
dec
out
jmp
jp
stos
push
mov
lahf
in
mov
cmovno
lahf
sbb
popa
jmp
xor
mov
pushf
pop
mov
jp
les
sbb
or
mov
mov
and
mov
xor
addl
add
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
mov
sub
and
mov
mov
addl
xor
orl
add
movl
cmp
jmp
cmp
sub
mov
in
jns
jle
jg
jle
sub
in
movsb
test
mov
dec
xlat
pop
shlb
push
or
notb
les
add
pop
xchg
xor
aam
sbb
inc
test
repnz
cmp
repnz
into
daa
out
sub
push
in
in
sub
andl
sbb
je
rorl
ljmp
lahf
ss
add
sbb
insl
fsubrs
add
fdivrs
cmp
inc
xchg
jne
add
push
lret
mov
imul
stc
jmp
out
lock
xor
daa
and
xor
push
cli
dec
inc
int3
lcall
jg
movsb
sahf
mov
jl
mov
hlt
je
movl
call
or
add
test
outsl
in
cwtl
aam
ret
sub
mov
push
stos
xchg
mov
in
mov
jp
into
pushf
dec
add
cmpsb
int3
loopne
pop
and
jo
push
pop
les
xorl
lret
fwait
sub
mov
and
mov
cmp
mov
dec
fcoml
test
xor
imull
push
sub
in
push
pop
lock
sbb
inc
aaa
std
add
imul
mov
push
scas
arpl
fistpl
cwtl
jge
cmpsb
push
lahf
inc
pop
cmpsl
enter
mov
int
pop
ficomps
jg
xor
sbb
sub
shrl
or
in
out
xchg
lahf
adcb
daa
add
add
add
or
jmp
or
popa
sbb
jnp
jle
jg
jle
testl
push
push
int3
sbb
rolb
jno
js
xor
leave
out
adc
xor
loope
dec
jnp
sti
mov
adc
iret
jle
or
dec
repz
mov
or
xchg
mov
hlt
loope
arpl
mov
jb
int3
incl
push
sbb
test
bound
mov
leave
out
mov
pop
je
xchg
and
mov
push
das
das
fstpt
test
clc
jmp
pop
sti
scas
adc
ds
push
nop
aam
popl
xlat
stc
mov
mov
mov
loopne
mov
xor
adc
movsb
sbb
mov
add
imul
mov
mov
in
add
cmp
addl
imul
movsb
cmp
int3
dec
cwtl
add
inc
out
adc
es
lds
out
fdivl
and
loopne
push
jne
repz
inc
lret
and
sub
inc
les
loope
movsl
je
dec
in
fstl
mov
dec
mov
bswap
in
ja
or
pop
sbb
jae
mul
loop
fidivrl
cmp
adc
inc
mov
cmp
lret
sbb
add
dec
jle
sbb
xor
pop
adc
and
iret
sub
pop
js
jo
dec
or
arpl
sbb
add
xor
sbb
adc
movsb
push
inc
lahf
xchg
jp
rorb
pop
inc
cmpl
ss
ja
cmp
xor
js
ret
add
add
insl
aas
movsl
inc
inc
mov
xor
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
xor
mov
sub
add
jmp
icebp
jmp
imul
imul
jg
jle
nop
dec
inc
mov
xchg
jp
mov
loope
shll
lock
or
cli
xlat
cld
pop
jecxz
sbb
rclb
and
adc
sub
sbb
ficoms
ja
mov
lret
ds
shll
push
sbb
nop
pop
scas
lahf
aad
scas
cmpsb
push
mov
or
mov
mov
pop
pop
cmp
xchg
jle
push
mov
cmp
shll
push
or
out
mov
stos
fcomip
aad
push
js
and
push
adc
push
and
imul
test
insb
fwait
jno
out
sub
loope
gs
push
insb
mov
lcall
jo
clc
ret
pop
push
dec
imul
daa
test
adc
insb
mov
dec
mov
jae
shlb
int3
mov
adc
sbb
aad
or
or
mov
aad
call
test
out
inc
scas
and
lock
xor
sub
mov
imul
push
jae
push
outsb
inc
mov
out
cmp
xor
dec
and
dec
popf
push
stc
enter
xlat
mov
stos
xchg
push
inc
pop
xor
add
pop
xor
imul
adc
adc
and
mov
inc
push
jns
xchg
outsb
imul
cs
test
test
cmp
dec
cwtl
mov
scas
or
mov
mov
inc
sub
xchg
fmuls
iret
cmpsl
clc
imul
push
rcr
and
push
sub
pop
sti
jns
leave
shrl
cmp
rorb
add
cld
movzwl
add
jmp
push
mov
test
dec
ss
std
mov
jle
mov
jle
jbe
jnp
mov
stc
test
inc
ja
pop
dec
imul
jbe
inc
and
shrb
insb
popf
pop
pop
filds
cmpsb
mov
les
mov
inc
movsl
push
xchg
daa
bound
mov
push
jp
sub
dec
hlt
cmpsl
xchg
outsl
cmp
push
push
in
mov
adc
mov
pop
and
add
mov
sub
imulb
adc
jo
xor
out
mov
int3
jl
jl
inc
xor
dec
lret
inc
add
sbb
xlat
add
adc
sti
or
mov
pop
ds
mov
stos
sub
testl
sbb
loope
aaa
jno
repz
sub
decl
xchg
cmc
and
cltd
outsl
push
sarl
fbld
aam
movsl
insl
addb
pop
pop
jo
cld
mov
shlb
fidivl
xchg
decb
push
mov
das
dec
xchg
push
xchg
push
mov
pop
jge
imul
push
adc
xchg
adc
xchg
scas
sbb
rorb
lods
xchg
mov
cmc
ljmp
inc
xor
add
mov
fcomp
xor
cmpsl
mov
push
push
sub
fsubr
cli
sbb
cmp
inc
stos
mov
and
sub
sar
movsl
xchg
xlat
mov
test
jne
scas
scas
and
stos
push
xor
test
xchg
adc
stc
or
inc
add
gs
lods
mov
mov
mov
xor
add
xor
sub
jmp
xchg
sahf
loopne
icebp
jo
popa
mov
cmp
cmp
test
add
mov
jle
mov
int
rorl
shlb
mov
iret
out
mov
jge
cmpsb
sbb
std
jnp
scas
mov
pop
mov
std
aad
rclb
pop
sub
xor
adc
mov
stc
cli
push
popa
imul
or
mov
repnz
stos
cmp
lret
lahf
cld
lods
xchg
lahf
inc
mov
dec
arpl
testl
cmc
testb
out
lret
lock
into
xchg
xor
ret
repnz
push
ljmp
ret
out
incl
ss
call
push
xor
mov
xor
outsl
pop
mov
mov
add
push
repz
loope
mov
fsubrs
fsubrl
sbb
mov
xchg
xchg
dec
add
clc
idiv
xchg
fisttps
out
push
ret
push
negb
or
lret
ror
adc
mov
push
sub
aad
out
popa
jge
or
xchg
add
sbb
mov
mov
pop
jmp
in
sbb
sahf
sub
popa
loop
sbb
or
sub
fsubs
jl
insb
add
sahf
jnp
push
in
pusha
sub
add
xchg
push
pop
cmc
sbb
sarl
mov
dec
push
icebp
sub
and
lahf
xchg
popf
les
lods
inc
xor
add
popfw
xchg
insb
jbe
push
jecxz
dec
loope
fs
sbb
imul
pushf
sbb
mov
sbb
inc
cld
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
jmp
pop
sbb
cmp
push
popa
movsb
insl
std
and
aam
jg
jle
mov
jle
sbb
adc
fistps
mov
inc
mov
stos
jne
movsl
cmp
sbb
lea
cmp
lds
lods
sbb
sbb
adc
push
iret
shrb
imull
jbe
push
jno
lods
pop
insl
clc
sbb
adcl
std
and
ss
negb
outsl
add
lret
stos
pop
sbb
xchg
mov
seta
jne
sti
or
ja
adc
repnz
je
and
pop
outsb
push
int3
pushf
xor
push
cmp
mov
pop
lock
bound
xorb
xchg
push
mov
cmp
pop
mov
scas
inc
sub
ja
ss
pop
push
sub
dec
xadd
lret
cs
fstps
je
dec
roll
pop
lock
imul
int3
mov
bound
push
orb
mov
cmp
inc
xchg
pusha
mov
das
jae,pt
sbbl
popa
push
mov
cmp
xchg
mov
push
xor
mov
ds
and
pop
aad
loop
mov
in
mov
jmp
xchg
test
mov
pop
sub
mov
mov
mov
cmp
push
call
mov
fnsave
cmpsb
testl
jnp
and
dec
inc
and
pop
nop
data16
dec
mov
bound
inc
imul
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
jmp
je
int3
xchg
int
jne
jae
cmovno
aas
std
mov
jle
mov
jle
xor
mov
pop
shrl
jae
mov
pop
xchg
push
cmp
xchg
adc
cmp
sub
or
inc
xor
adc
pusha
add
or
mov
std
push
outsl
xchg
jno
sbb
repz
mov
aaa
andb
adc
aad
mov
out
dec
xorl
mov
add
arpl
push
push
dec
int
push
push
das
neg
cmp
mov
rol
jo
adc
mov
ret
loop
cli
mov
mov
and
xchg
ljmp
push
push
jbe
lahf
jge
int3
addr16
mov
call
jb
mov
add
dec
enter
or
pop
sarl
cmp
jecxz
and
add
iret
daa
sub
out
orl
ret
sub
mov
sbb
aam
lahf
jbe
bound
data16
jg
jp
sbb
add
lcall
test
iret
mov
sbb
lds
cmp
jae
movl
push
rolb
xchg
out
ret
sub
jo
lret
add
fistpll
lcall
and
sti
jo
inc
jp
insb
ss
repz
adc
pop
loopne
xor
xchg
xor
pop
and
movsl
js
or
sti
in
pusha
cwtl
movsl
daa
pusha
clc
cwtl
lds
mov
jnp
xor
stos
out
in
je
lret
or
push
mov
loop
dec
clc
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
jmp
xor
inc
pop
pop
jge
arpl
outsb
dec
or
in
or
jle
jmp
faddl
xchg
pop
hlt
test
xor
das
call
lods
mov
jmp
incl
hlt
repnz
jnp
mov
pop
scas
cmp
shl
int3
popa
xor
shll
jns
test
or
in
and
inc
add
mov
mov
jae
cwtl
dec
dec
mov
jp
popf
push
cs
push
inc
push
outsb
xchg
pop
clc
ret
inc
mov
sub
lods
mov
test
ret
pop
cli
mov
out
push
xchg
ds
xchg
push
pop
push
popa
xchg
mov
mov
scas
cmp
mov
shlb
add
push
jno
scas
test
mov
cmp
shll
dec
repnz
fs
push
mov
scas
mov
in
dec
lods
pop
nop
mov
mov
leave
push
pop
and
cli
cmp
mov
insb
je
jno
nop
xor
jns
shlb
lcall
push
mov
sti
or
fnstcw
cmp
cmp
fucomi
pop
mov
cmp
or
mov
nop
xor
insb
repz
xchg
xor
adc
or
rcll
inc
rcrl
mov
jae
inc
lds
xchg
xorl
xor
or
imul
mov
dec
mov
sub
nop
and
aas
xor
lret
xchg
mov
sahf
sub
stos
addr16
ret
add
loope
insb
mov
in
out
or
in
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
jmp
insb
jo
arpl
jge
jno
adc
mov
fadds
and
jle
mov
jle
jns
movsl
and
imul
popf
fsubr
std
mov
pop
int
push
adc
ficoms
mov
lahf
mull
cmp
or
sub
jl
xor
add
enter
push
std
pop
jnp
icebp
dec
mov
fldcw
dec
mov
outsb
jmp
xor
and
sbb
or
xor
ljmp
std
mov
mov
aad
es
lret
mov
rol
pusha
mov
out
sbb
xchg
out
add
frstor
adc
pop
add
fistl
popf
iret
movsb
cltd
or
cmp
in
enter
cmp
sub
ljmp
jns
cltd
mov
cmpsl
mov
sbb
pop
add
test
lret
or
cmp
mov
popa
mov
xchg
or
ja
or
xor
adc
pop
loopne
dec
xchg
pop
add
jle
adcl
push
rcr
insl
iret
in
daa
in
popf
movl
push
mov
sub
xchg
fstps
add
or
cmp
jno
or
das
fldt
xlat
pop
cmc
adcb
xchg
lock
mov
negb
pop
mov
pushf
xchg
cmc
repz
mov
mov
push
das
sahf
in
popf
xchg
push
test
mov
out
and
ss
jp
add
inc
insb
ret
pop
sbb
mov
xchg
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
sbb
jge
fidivrl
cs
push
or
push
jg
jle
movd
cltd
pop
ja
dec
jae
stos
hlt
jno
dec
imul
mov
xchg
mov
repz
aam
sub
lret
xchg
push
fldenv
mov
or
jmp
and
sub
sub
aaa
leave
aad
mov
add
int3
fisubrl
inc
dec
sub
loope
sbb
scas
pop
in
xchg
flds
mov
fcoms
testl
xor
popa
mov
repnz
mov
mov
inc
adc
mov
movsl
push
mov
inc
dec
sub
fistpll
and
iret
push
xchg
ljmp
adc
subl
cmp
cwtl
sub
jo
movl
mov
sub
xor
out
fbstp
bound
mov
mov
xor
add
mov
sbb
xchg
pop
jle
stos
ss
ljmp
sahf
xor
test
adc
dec
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
xorl
push
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
movl
mov
push
mov
or
mov
xor
mov
push
add
mov
sbbl
jmp
pop
imul
ds
and
or
push
jg
jle
and
jo
add
adc
mov
fimuls
inc
aaa
fsubl
push
dec
push
les
ljmp
xchg
or
sub
orb
inc
push
clc
lret
test
and
pop
pop
fimuls
mov
outsb
lret
in
les
ret
inc
ja
push
aad
test
stos
or
push
lock
sbb
jo
or
push
fs
mov
add
dec
subb
stos
rcrb
stos
adc
sub
push
clc
cmp
lods
pop
pop
divl
or
stos
dec
iret
lahf
mov
fisttpll
stc
mov
cltd
aaa
ret
push
cmp
jle
jne
out
aad
in
cmp
ret
sbb
mov
mov
fisubrs
push
lea
sub
mov
ret
aad
push
cwtl
loope
inc
clc
lahf
lea
and
jae
movsb
mov
data16
subb
pusha
mov
cwtl
add
mov
in
xchg
orb
mov
sub
push
cmp
roll
add
faddl
inc
add
cmp
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
mov
xor
mov
xorl
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
jmp
push
nop
outsb
stos
jae
push
jo
sub
lods
sbb
or
push
jg
jle
jno
and
adc
add
push
or
fcmovnu
add
and
or
push
out
sbb
mov
bts
lret
jmp
xor
or
xchg
test
les
movsb
jmp
jge
out
xchg
mov
iret
pusha
lods
jp
push
inc
mov
mov
mov
divb
mov
jne
xchg
shll
and
xor
outsb
inc
xor
and
imul
lock
push
push
mov
cmp
mov
jb
push
adcb
mov
pop
pop
inc
jmp
sub
addr16
jne
inc
fists
mov
sbb
adc
clc
inc
push
or
mov
pop
push
ljmp
sbb
std
decb
cmp
ja
lods
jge
lock
xchg
sbb
jae
jo
testb
push
ljmp
cmp
push
adc
sbb
scas
fcoms
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
and
mov
jmp
inc
dec
fwait
imul
add
mov
jle
push
jns
jle
inc
dec
lock
mov
mov
inc
add
mov
adc
pop
mov
jl
xor
aaa
ljmp
outsl
sahf
mov
fisubs
pop
sub
insl
cmp
fxtract
jle
aaa
sbb
lea
cli
jmp
fldz
xor
daa
push
jae
push
lahf
xor
cmc
imul
sbb
adc
stos
sbb
aaa
fs
mov
sub
adc
inc
stos
ljmp
add
pop
jecxz
rorl
in
or
stos
or
sub
or
mov
ljmp
cmovb
mov
cmp
imul
jg
push
and
mov
test
jg
fcoml
psrld
scas
or
jmp
jge
loopne
jae
cmpsb
hlt
addr16
pop
ror
jae
in
mov
pop
and
iret
fisubs
sahf
push
mov
out
fsubl
mov
inc
pop
popa
jno
ss
xchg
repnz
or
and
pop
mov
inc
out
mov
sahf
hlt
rcr
mov
int3
sbb
xchg
jo
pushf
push
or
lds
icebp
jge
dec
ret
fistpll
fsubp
push
push
cmp
pushf
sti
fwait
xor
cmp
cmpsl
adc
inc
mov
orb
xor
push
int
mov
xchg
push
subb
mov
jp
push
dec
mov
jo
mov
sahf
test
push
fstpt
inc
lods
cwtl
fadds
stc
out
fwait
sbb
ds
ss
pop
pop
adc
lcall
cltd
movsb
adc
xor
push
ljmp
add
xchg
cmp
and
push
push
pop
daa
out
and
cwtl
adc
xchg
mov
movsb
enter
std
test
scas
popa
xchg
pop
sub
roll
fadd
add
mov
outsl
aam
aaa
ret
imul
fwait
pop
and
cmpsb
lds
sbb
out
mov
inc
loopne
movsb
in
cld
xchg
mov
mov
cmp
or
jl
mov
inc
std
jp
popa
lock
push
push
jnp
push
cmp
cltd
lret
and
jne
cmpsl
movsb
cwtl
outsb
jmp
fsts
repz
or
jo
xchg
test
fdivrs
shrb
add
mov
push
mov
add
sbb
out
pop
aaa
ljmp
sub
add
stc
jo
out
das
cmpsb
scas
mov
stos
push
mov
mov
add
ret
adc
pop
ss
mov
frstor
es
aas
jecxz
outsb
rol
leave
clc
arpl
pusha
mov
movsl
aas
sbb
sub
es
mov
stos
push
fdivs
bound
or
mov
push
dec
cmp
xchg
enter
jo
out
or
add
call
jge
add
lret
xor
inc
push
ret
lret
mov
adc
icebp
lret
mov
in
ret
jb
lahf
pop
addr16
ret
jae
fsubrl
or
dec
inc
dec
sub
out
pop
fisubl
pop
mov
push
jmp
xorl
cli
xor
mov
lea
mov
mov
push
pop
xchg
inc
test
mov
mov
shll
test
cltd
cmpsl
add
aam
leave
xor
jl
mov
aad
shlb
in
sbb
add
mov
test
leave
ret
dec
mov
add
sub
cwtl
imul
xchg
out
mov
mov
inc
dec
push
mov
xor
mov
andl
add
mov
xor
mov
movzwl
mov
xor
mov
mov
sbb
mov
movb
lea
orl
mov
and
jmp
jo
inc
xchg
jo
jne
xchg
or
adc
push
jns
jle
or
test
dec
jle
fstpt
or
sub
adc
mov
and
addl
push
xchg
hlt
bound
insb
or
dec
lret
ljmp
mov
push
cmp
jmp
jnp
pop
lcall
shl
dec
inc
mov
cs
lea
fldcw
popa
and
sub
inc
icebp
jg
mov
adc
test
sub
dec
js
pusha
sub
negb
push
data16
test
push
sar
pop
arpl
push
rolb
cmp
add
xchg
dec
sbb
icebp
outsb
fadds
xor
pop
int
xlat
cmpsb
xor
fnstsw
fstps
add
test
mov
addb
shlb
push
pop
ss
mov
push
pop
xlat
mov
inc
ret
inc
in
cmp
or
lret
pop
pop
aam
imul
fiadds
andb
sub
fs
dec
sub
mov
xor
fcmovnbe
push
orb
mov
inc
jne
leave
jb
push
sub
mov
sbb
jne
or
js
pop
lds
adc
push
jnp
push
mov
xor
xorb
and
repz
fbld
and
sbb
adc
and
testl
test
lods
jbe
mov
jne
rorl
lcall
aaa
dec
fbstp
es
dec
or
arpl
lcall
out
jnp
and
mov
xchg
lock
sub
xor
ljmp
lcall
inc
sbb
pop
jp
cmp
add
and
or
mov
sti
in
jnp
mov
push
cmp
cmpsb
lods
sarb
dec
decl
inc
repnz
fwait
jo
mov
dec
fs
sbb
div
adc
push
shll
sub
push
jmp
sbbb
mov
dec
pop
jp
ficoms
dec
in
test
in
xchg
andl
ljmp
lea
pop
fsubs
loopne
push
insl
sti
cs
inc
and
jo
nop
cmp
shlb
cli
je
test
outsb
cli
dec
sbb
stos
aad
fs
mov
inc
and
clc
imul
pop
lds
dec
dec
sub
push
iret
mov
shr
imul
pop
jbe
andb
sahf
stos
fisubl
xchg
lret
inc
aad
push
cmc
cmp
push
adc
scas
enter
mov
leave
shr
xor
jg
aam
cltd
xchg
cmp
jnp
lret
add
in
sbb
add
stos
ja
fwait
xor
add
lods
cmp
or
hlt
hlt
push
scas
mov
andl
pop
out
dec
and
lret
cld
out
out
jp
and
imul
enter
in
js
jmp
xor
sub
adc
and
mov
cmp
dec
hlt
dec
mov
insb
or
jge
mov
test
jp
imul
mov
jns
cmpsl
adcb
mov
mov
outsl
jmp
jnp
jo
sub
ss
imul
pop
mov
xor
xor
jo
push
mov
rol
lret
aam
sbb
lahf
mov
mov
cli
xor
inc
decl
add
or
mov
mov
sbbl
xor
addl
sub
orl
mov
xor
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
adc
mov
mov
push
adc
xor
incl
mov
subl
add
jmp
notl
mov
mov
movl
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
sbbl
jae
out
xchg
jecxz
dec
insb
arpl
jle
push
jns
jle
lds
jge
repnz
mov
xchg
push
and
xor
xchg
fidivs
pop
jb
push
imul
leave
imul
rcrl
sub
mov
push
xchg
es
aaa
scas
push
pop
movsl
xchg
cli
and
sub
ret
push
je
ret
mov
in
insb
pop
mov
ljmp
mov
outsl
push
jmp
fs
dec
fcoms
repz
xchg
in
and
adc
xchg
or
xor
in
aad
gs
add
popa
movsb
ret
pushf
movsl
jns
inc
xchg
sbb
ss
int
pop
fbstp
cmp
in
sti
push
sbb
rcr
mov
outsb
movsb
add
mov
mov
cmp
pop
mov
push
in
adc
pop
lds
scas
push
cmp
lods
aam
icebp
dec
roll
shrb
mov
daa
push
js
cmpsb
arpl
pop
sub
mov
or
jecxz
or
test
xchg
xchg
xchg
cmp
js
cltd
mov
sub
and
leave
aaa
mov
mov
cmp
out
shll
sub
jne
sbb
xor
xor
cmp
add
mov
jae
clc
cld
mov
sub
int
ljmp
inc
into
adc
lret
clc
test
xchg
scas
jnp
dec
fcmovu
mov
jb
cmp
scas
mov
sbb
lods
daa
leave
dec
les
movsb
add
or
mov
xor
sbb
or
push
mov
int
mov
push
fldcw
mov
jl
scas
iret
fwait
out
or
scas
adc
dec
out
rcrl
ljmp
inc
sub
aas
xor
xchg
add
cmp
mov
push
push
mov
loope
int3
adc
add
das
ss
les
mov
pop
call
fcomip
sbb
sub
push
inc
sbb
aaa
add
daa
add
mov
mov
inc
aam
bound
iret
mov
movsl
and
cmp
test
xor
aam
adc
push
adc
pop
jge
mov
add
pop
clc
sbb
sahf
xchg
fcompl
inc
imul
cltd
jns
rorb
inc
mov
mov
xchg
out
notb
xchg
pop
cli
xchg
and
sub
pop
mov
pushf
fildll
push
sbb
lcall
iret
push
iret
mov
xabort
insl
add
das
mov
les
in
pop
push
js
gs
push
mov
xchg
mov
mov
sub
sarl
cmp
cmp
ret
outsb
adc
inc
pushf
adc
fst
addr16
dec
cmpb
inc
push
mov
push
push
mov
inc
ss
fisubs
xlat
jl
sbb
out
outsb
or
dec
mov
inc
lahf
mov
frstor
negb
jmp
and
fnsave
mov
sub
add
ficoms
aas
lahf
pop
or
shl
test
pop
clc
cs
pop
lcall
mov
outsb
xor
lds
mov
shrl
mov
sbb
ret
loopne
aad
popa
out
fcompl
push
scas
cmc
mov
mov
inc
stc
lcall
sub
jnp
mov
dec
sub
push
repnz
repz
out
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
jmp
mov
or
push
jge
inc
xchg
add
mov
jns
jle
jl
pop
in
jp
jmp
sub
fimull
sub
scas
adc
shlb
ret
movsb
dec
xor
loope
imul
fbstp
sub
loopne
sub
xor
shrl
or
iret
jmp
test
outsl
dec
mov
jp
mov
mov
push
aad
aaa
cmp
scas
decb
cmpsb
push
bound
ja
std
or
push
leave
and
sub
adc
xorl
mov
mov
mov
mov
xchg
mov
jns
sbb
es
mov
push
aam
jo
push
sti
movsb
dec
xlat
push
arpl
lock
scas
inc
and
les
mov
mov
jbe
xchg
mov
and
ja
cmp
sti
pop
aam
and
push
cmp
dec
jno
and
loopne
enter
fidivs
fwait
addr16
aaa
adc
or
mov
inc
mov
mov
cmpsl
int
mov
cmp
sbb
jge
dec
xor
mov
pandn
arpl
adc
fildl
or
cmpsb
shrl
jle
add
nop
test
sbb
cmp
lock
clc
jge
or
movsl
inc
ret
mov
fwait
int
pop
xor
cmp
pop
dec
int
clc
lea
jecxz
scas
push
mov
test
data16
inc
sbb
or
movsb
add
pop
addr16
fbstp
mov
xlat
or
in
sbb
inc
shl
push
or
scas
jle
jb
and
pushf
mov
lret
mov
sub
inc
add
dec
dec
inc
mov
sbb
stos
test
scas
sahf
sbb
js
outsl
fdiv
ljmp
pop
aam
fsubrl
push
test
jmp
sub
ss
mov
dec
and
pop
rcrb
fnstsw
dec
out
mov
sti
jle
fsubrl
daa
pop
inc
test
jmp
jmp
pop
mov
pop
push
push
fisubrl
test
fcmovne
insl
jo
int3
aam
fsts
mul
test
outsb
insl
add
push
mov
neg
sarl
lcall
lock
inc
push
repz
dec
mov
insl
scas
clc
rolb
push
js
inc
xchg
push
cmpsl
dec
cs
mov
push
cmp
mov
in
sbb
adc
push
add
aaa
mov
lds
in
inc
out
data16
xchg
mov
sbb
mov
push
iret
addr16
shll
cltd
add
push
pusha
stos
inc
and
or
cmp
push
sub
push
jbe
xchg
push
aam
inc
mov
mov
sbb
addb
xor
cmp
ljmp
xchg
push
push
sub
jne
and
popa
icebp
adc
sub
push
sarb
push
cltd
jnp
adc
fisttps
das
or
push
push
out
dec
sahf
dec
test
cmpsb
push
pusha
aas
int
cmp
dec
adc
nop
jl
js
dec
lahf
mov
bound
add
or
inc
pusha
ret
mov
hlt
mov
scas
push
inc
sarb
addr16
cmc
sbb
imul
hlt
nop
mov
sub
push
ja
in
ffree
or
outsb
loopne
inc
clc
xor
add
mov
mov
jmp
pop
ret
jge
insb
jae
test
stc
xchg
sbb
push
jns
jle
cld
xor
dec
jae
sbb
mov
insb
lods
dec
out
jbe
adc
mov
test
mov
je
or
jo
pop
imul
movsl
adc
xchg
test
ds
jecxz
xor
rcr
fiadds
aam
ss
adc
leave
xor
out
jmp
pop
mov
out
ja
xor
xchg
cmpsl
pop
insb
pop
loope
pop
cmp
cmc
leave
sahf
jle
push
test
add
jge
push
push
inc
jae
xchg
repz
sar
movsb
push
scas
notb
adc
xor
sub
in
push
add
shlb
repz
jbe
loop
cld
sbbl
mov
les
fwait
sti
mov
mov
sahf
mov
jno
scas
xlat
sbb
call
imul
mov
pop
and
fistpll
cltd
dec
pop
nop
inc
je
aaa
pop
xchg
pusha
fwait
cmpl
lahf
xor
and
add
jp
sbb
jge
adcl
and
aad
jecxz
pop
loope
es
in
test
dec
add
xor
dec
iret
dec
and
cmp
loope
xor
inc
jmp
add
xlat
cmp
les
outsl
sbbb
push
movsl
cwtl
into
lods
cmp
lret
push
clc
lea
outsb
stc
jle
ds
mov
push
push
mov
fmull
sbb
inc
mov
test
or
popa
mov
gs
adc
and
inc
jmp
test
pushf
hlt
jmp
cmp
nop
inc
mov
xor
leave
inc
enter
xor
cmp
int
jmp
popa
sub
rclb
jo
xor
or
sub
dec
mov
fadds
test
xchg
lock
mov
xchg
addr16
fsubrp
jecxz
dec
mov
and
adc
jecxz
or
inc
lahf
inc
cvttps2pi
or
data16
sub
xor
mov
and
and
sbb
dec
ds
lods
popa
lcall
add
sub
push
add
fildll
pop
fldcw
addl
dec
adc
jle
daa
les
xchg
add
xor
imul
cmp
jl
pop
fwait
mov
sub
sub
pop
in
jl
sub
jo
andl
push
psrlq
dec
incb
aad
mov
addb
in
mov
dec
xchg
gs
rolb
xchg
int
loop
btc
inc
test
sahf
sbb
dec
sbb
xchg
mov
int
add
jbe
sbb
ret
mov
pop
mov
xchg
adc
loop
nop
push
ficompl
mov
mov
fs
in
call
lcall
je
adc
loope
jl
fnstenv
inc
mov
sbb
repz
push
inc
jnp
inc
mov
in
adc
movsb
loopne
mov
sub
outsb
lods
mov
xchg
je
popf
jb
imul
sarb
cmp
inc
or
xchg
adc
adc
add
mov
mov
pop
pop
add
das
fxch
mov
test
inc
mov
in
xor
inc
push
shll
jl
mov
cmp
push
adc
lcall
push
cs
test
push
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
jmp
enter
cmc
jne
mov
or
jle
push
jns
jle
mov
es
push
mov
mov
stc
out
add
fucomi
sub
inc
ret
les
cmpsl
inc
in
push
orl
mov
das
push
or
mov
pop
cmp
jno
sub
icebp
outsl
add
mov
into
jle
daa
shrl
mov
xchg
or
out
jge
sahf
sub
xchg
mov
stos
pop
mov
data16
jb
mov
or
bound
js
or
in
dec
dec
fldl
mov
xor
sbb
jp
aad
mov
xchg
bound
pop
push
bswap
xchg
scas
popa
icebp
stc
stc
jecxz,pt
pop
cwtl
test
rcrb
xor
ja
out
mov
add
add
loop
dec
pop
lret
sahf
jnp
shrb
push
cltd
jo
ret
bound
mov
cmpsl
pop
hlt
jae
or
pop
shlb
arpl
cmp
dec
mov
push
mov
mov
add
dec
push
push
push
adc
test
jp
popf
aam
mov
push
xchg
pop
cwtl
adc
lret
add
cmp
in
sub
xchg
mov
out
fists
dec
mov
mov
movsl
cld
mov
jb
add
std
jbe
imul
rolb
bound
xchg
mov
std
pop
int
insb
mov
xor
decl
cmpsl
ret
pop
jl
and
ljmp
jl
test
dec
xor
jnp
pop
call
fdivrs
pop
mov
cmp
mov
dec
mov
mov
xor
stos
into
jmp
mov
jnp
call
or
xchg
into
addl
and
pop
mov
dec
jg
cmp
pop
int
push
ret
insl
pand
push
js
loope
and
push
jl
push
xor
test
mov
je
add
jl
pop
fwait
je
jge
pop
insb
rclb
inc
jge
sbb
push
mov
sub
jne
mov
out
adc
sub
cmp
sahf
xor
fstpl
inc
mov
aaa
sub
jge
roll
ss
lahf
push
inc
add
or
je
pop
js
mov
ljmp
call
adc
lret
xor
mov
adc
ret
popl
inc
sarl
fidivs
enter
lret
mov
das
test
sti
cmpsl
aaa
jmp
mov
fisttpll
mov
scas
adc
mov
lds
adc
lret
push
lods
outsl
dec
xor
xor
sub
jns
popa
pop
pop
jnp
loop
nopl
test
outsb
lahf
js
lods
lahf
pop
movsl
je
gs
test
insl
les
inc
sub
popf
and
nop
out
sahf
push
in
inc
add
cmc
sub
shll
test
push
fs
push
push
not
xchg
inc
es
xorl
mov
mov
jbe
adc
fwait
adc
pop
mov
lock
push
xor
mov
outsl
adc
pop
je
jns
sub
adc
xor
inc
mov
lahf
push
cmp
jl
dec
and
mov
mov
xor
shrl
xor
cmc
jns
or
ret
xor
add
imul
pop
mov
icebp
jge
test
cmpsb
in
adc
xor
in
xchg
outsl
pop
jmp
mov
in
xor
add
cmp
je
movl
lea
mov
jmp
push
fdivp
imul
mov
inc
insl
and
ret
and
push
jns
jle
imul
out
sub
fs
fwait
adc
add
int
pop
add
mov
push
cmc
mov
shl
int
add
push
shll
or
hlt
scas
add
jbe
adcb
mov
mov
xor
mov
xchg
sbb
inc
mov
push
mov
jp
add
insb
sahf
mov
or
test
push
fcmovb
xchg
mov
push
int
leave
inc
jle
fidivrs
or
lret
aaa
movsl
lahf
mov
mov
lock
or
xchg
jle
inc
cli
aam
loop
xor
mov
xor
jg
dec
lea
movl
xchg
xchg
nop
mov
pop
xor
loope
pop
inc
mov
mov
in
loop
jecxz
sarl
insl
jg
daa
test
xchg
dec
sbb
aas
fdivr
add
sbb
iret
inc
out
shrl
and
cs
aaa
arpl
sub
inc
shr
les
inc
push
add
add
gs
lock
and
mov
mov
fbld
dec
daa
hlt
add
or
sub
mov
sbb
fistps
push
push
sub
orb
pop
pop
mov
sub
mov
mov
sub
mov
dec
or
iret
sub
cmp
and
cmp
xchg
imul
push
pop
into
fidivs
mov
shlb
xchg
lds
xchg
mov
sbb
jb
inc
pushf
lahf
test
inc
ss
in
sub
pop
hlt
inc
imull
movsb
aad
das
sbb
int3
hlt
mov
ret
or
add
repz
push
jbe
mov
xchg
mov
popa
fsubrl
jge
add
xchg
in
or
orb
in
sub
inc
jg
jle
jl
pusha
lret
stc
lcall
xor
or
cwtl
fucomi
jmp
rcll
sub
rclb
aad
xchg
mov
in
data16
cmovns
lret
xor
or
and
pushf
insl
aaa
call
es
fimull
call
sbb
fbld
fstp
xchg
mov
js
push
add
hlt
loope
call
push
add
movsb
std
je
and
movsb
call
jb
inc
aaa
mov
push
lret
aad
insl
je
xor
fildl
cld
iret
cmp
mov
popf
mov
movsb
es
sub
jmp
push
stos
data16
sub
shlb
mov
out
test
lods
sub
leave
dec
mov
inc
or
xchg
mov
ljmp
icebp
rcr
mov
cltd
fists
scas
xchg
in
loop
stos
push
push
aad
sahf
mov
pop
pop
and
mov
push
loopne
mov
mov
shr
das
cmp
std
or
rorl
inc
jecxz
outsb
pop
iret
arpl
repnz
pop
inc
jbe
aad
xchg
stos
pop
js
out
iret
adc
xchg
inc
cli
mov
pop
cli
int3
lahf
jecxz
or
sbb
xor
xchg
or
inc
add
inc
push
into
inc
mov
popa
and
add
insl
hlt
xchg
std
jbe
lock
mov
outsb
in
inc
pop
inc
loopne
mov
in
sub
mov
out
push
xchg
add
jmp
add
fs
lods
fstl
xchg
idivb
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
sub
jmp
pop
mov
and
jno
dec
call
ja
sbb
jle
pop
jg
jle
shlb
lds
mov
push
lods
mov
out
mov
pop
daa
mov
xchg
test
in
xchg
adc
shl
pop
sub
hlt
mov
adc
jae
imul
cmp
movsb
pop
xorb
cmpsb
ret
and
mov
xchg
add
jb
inc
cmp
leave
dec
xchg
and
cli
pusha
jae
in
repz
js
mov
xchg
mov
mov
or
sbb
jnp
add
dec
sub
sbb
addr16
add
dec
and
and
ds
cs
push
subl
mov
addr16
fwait
inc
cmpsb
xchg
xor
jecxz
lcall
inc
or
popa
push
or
jp
gs
fisubl
cwtl
scas
aad
xchg
inc
xor
fisttpl
out
xor
mov
in
adc
xchg
ljmp
in
mov
fldenv
mov
movd
jecxz
cmp
inc
add
out
out
repz
inc
mov
out
fiadds
mov
dec
int
rol
push
ret
pop
movsb
dec
mov
mov
lock
cmpl
sub
adc
dec
jo
jns
inc
jge
outsl
out
push
mov
mov
xor
jmp
jp
scas
xor
push
cmpl
nop
orl
test
int
pmulhuw
iret
jle
add
pop
lds
fmul
dec
daa
sarb
enter
fld
in
nop
addr16
into
cwtl
mov
clc
lea
lcall
mov
std
adc
jne
ss
and
inc
incl
mov
fildll
into
sbb
pop
es
adc
mov
jl
xor
lods
movsb
imul
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
pushl
call
mov
dec
mov
jmp
movl
mov
xor
push
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
inc
mov
incl
mov
xor
xor
mov
add
xorl
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
jmp
imul
jge
push
pop
loopne
jnp
fldt
pop
jg
jle
dec
xchg
mov
sub
and
shr
dec
stos
mov
test
loopne
mov
shl
pusha
cmpsb
sti
xor
in
jmp
push
or
mov
push
xchg
cli
lock
push
jge
pop
subl
test
loopne
and
in
sahf
int
inc
pop
sar
int3
jmp
sarl
gs
push
lcall
fsubs
dec
icebp
cmp
int
or
lds
cmc
bnd
dec
das
push
mov
sti
enter
push
xchg
inc
inc
pop
sbb
imul
xchg
daa
sub
push
addr16
stc
pand
mov
aam
imul
nop
leave
data16
sbb
pop
lock
cmp
dec
xchg
xlat
mov
and
mov
ds
or
dec
in
enter
adc
inc
pusha
push
fwait
mov
adc
bnd
andb
scas
and
fldl
push
mov
mov
jge
cmp
xchg
or
and
sbb
aam
insb
pusha
fidivrs
mov
pop
push
adc
xor
daa
add
js
jb
int3
cmp
ljmp
fwait
lea
lcall
repnz
pop
and
dec
ss
cmp
fcmove
lret
push
mov
ja
inc
jmp
psrad
jne
xor
lahf
pop
jne
lock
mov
aam
cmp
jmp
jne
inc
or
jle
out
pop
xchg
inc
sub
dec
xor
out
push
push
int
insb
xorl
and
fidivrs
adc
or
and
mov
aam
and
sbb
or
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
jmp
sahf
jb
push
pop
jl
jb
ret
mov
or
jle
les
jle
icebp
repnz
jns
or
mov
inc
lods
bound
or
xchg
iret
dec
lcall
mov
jge
sbb
fcoms
or
aaa
push
pop
cmp
sbb
or
mov
inc
jo
stc
cmpsb
and
andl
out
mov
inc
scas
lock
or
sarb
or
icebp
mov
xchg
int
nop
jg
pop
adc
xchg
dec
pop
add
jle
jae
stos
adc
mov
cli
movl
mov
inc
mov
xlat
daa
int3
lock
in
sub
pusha
add
add
popa
add
sahf
out
sbb
pop
outsb
jo
xor
mov
imul
mov
mov
fidivs
lds
scas
or
pushf
cmp
jecxz
aad
fwait
outsb
push
mov
jecxz
fldenv
mov
fisubrl
mov
pop
cmp
aam
and
or
sub
push
rolb
xor
aam
int
push
dec
lret
in
xchg
out
test
pop
into
ss
lret
shlb
add
fiaddl
push
sub
jns
je
mov
dec
pushf
dec
in
cmpsb
stc
add
pushf
add
fs
shrb
ljmp
sbb
mov
pop
mov
test
cmpsb
shlb
jmp
dec
sarl
mov
jnp
cmp
js
fisubs
popf
sub
jo
add
mov
aas
nop
jae
xchg
stos
bound
adc
mov
add
insl
cmpsl
les
adc
jmp
lahf
pop
adc
add
mov
in
js
rcrb
jge
nop
xchg
cli
mov
cmp
or
scas
sbb
xchg
and
pop
mov
hlt
insl
rclb
or
push
dec
pop
aas
data16
insl
div
and
imul
or
lock
add
imul
jg
mov
out
std
xchg
add
cld
cmpps
mov
add
cli
inc
adc
sbb
pop
xchg
sbb
inc
imul
movsl
sbb
imul
es
nop
pop
fldl
popf
lods
fldl
js
mov
pop
cmp
clc
cmc
dec
jns
mov
int3
jae
pushf
cli
add
pop
je
cmpsl
mov
es
stc
mov
sbb
adcb
movsl
lcall
enter
mov
mov
test
sbb
dec
xorl
xor
xor
cmc
cmovno
lea
add
movsl
add
lock
push
dec
aam
push
push
mov
loop
xchg
mov
add
fs
shlb
repnz
xchg
jno
lods
jge
sarb
xchg
adc
jge
mov
movsb
js
mov
movsb
stos
loop
fadd
bound
pop
pop
mov
rep
and
sbb
cltd
mov
and
clc
mov
jbe
pop
inc
or
dec
ret
inc
popa
xor
inc
xchg
push
mov
mov
movl
mov
jmp
xchg
jb
jg
dec
mov
cs
fnstcw
and
jle
les
jle
arpl
sbb
xor
pushl
mov
in
insl
leave
out
push
add
lret
out
js
inc
rol
ret
lods
sub
test
outsb
jmp
mov
and
push
cld
cmp
mov
inc
in
mov
sub
test
sub
loope
push
pop
ja
dec
lods
mov
inc
and
filds
mov
jbe
inc
mov
iret
es
fiaddl
daa
adc
movsb
cltd
es
jp
popa
push
xor
adc
dec
push
and
stos
xchg
clc
lock
das
cld
push
int
dec
jge
sbb
sbbb
repz
repz
dec
nop
push
test
dec
and
push
outsl
push
loopne
or
ds
outsl
stos
leave
leave
inc
repnz
sarl
pop
clc
mov
outsb
pusha
inc
push
in
add
pop
mov
pusha
lahf
xor
movsl
cmp
fidivs
shrb
cmp
jns
mov
fmuls
cmp
ror
es
pop
imulb
or
out
daa
mov
testl
cmc
mov
mov
mov
dec
jo
in
push
fisubrl
ss
inc
sbb
test
popa
xor
fxch
xor
xor
fsubl
pop
bound
lcall
std
dec
mov
mov
push
cmp
xchg
daa
mov
sbb
loop
adc
adc
jo
inc
jmp
imulb
lock
sbb
xchg
mov
pop
add
mov
cmpsl
addb
xchg
xchg
ljmp
lcall
int3
mov
stc
outsb
cltd
mov
cmp
icebp
push
push
xor
je
add
sbb
cmpsb
jo
dec
inc
mov
out
sbb
dec
ret
shlb
js
js
mov
bound
sub
push
pop
sbb
pop
xchg
out
jns
and
bound
dec
lds
idivl
pop
xor
jg
cld
pop
test
lcall
test
jbe
loop
das
mov
mov
inc
sbb
inc
cmpsl
hlt
sarb
add
orb
cmpsb
inc
es
pop
cmp
adc
sub
shll
push
lea
push
por
idiv
sbb
adc
or
xchg
aaa
add
mov
cs
out
push
add
mov
repz
push
xor
xchg
push
jmp
push
fldl
or
add
fisubl
rolb
add
test
enter
jmp
in
jle
in
int
dec
roll
jmp
jb
ret
jns
rcrl
sub
daa
mov
mov
cwtl
cmp
or
inc
mov
mov
pop
pop
cwtl
aam
leave
sub
test
and
add
push
iret
enter
addr16
or
mulb
imul
out
sub
shrl
mov
add
cmp
add
add
dec
and
add
pop
add
add
pop
arpl
bnd
daa
out
xor
les
jle
bound
mov
inc
orl
into
sbb
leave
lock
out
dec
mov
cli
int
inc
cmc
inc
js
bound
test
insl
xchg
push
push
insl
lds
scas
bound
jbe
jp
dec
cvtdq2ps
mov
lock
mov
in
repnz
mov
sbb
cli
jne
dec
sbb
cmc
sahf
jg
je
sti
orl
jno
sbb
out
iret
fdivs
and
popa
mov
int
dec
imul
mov
inc
dec
insb
inc
xlat
jnp
pop
jmp
mov
and
insb
cwtl
das
dec
in
fs
xchg
inc
addl
outsl
adc
dec
and
jae
mov
cmp
mov
test
mov
rclb
cmc
imul
loope
push
add
fstps
and
dec
mov
cmp
test
push
test
push
leave
jecxz
mov
add
mov
mov
stos
sti
fldl
cli
loopne
add
mov
fdivs
push
bt
test
xlat
inc
out
fcomps
jl
xor
out
push
gs
push
dec
les
mov
in
add
enter
jle
adc
mov
xchg
jle
sbb
mov
dec
sub
cmpsl
mov
or
xchg
push
shll
arpl
and
xchg
imul
pusha
add
outsl
sub
test
add
out
mov
and
leave
pop
or
jbe
mov
out
lcall
stos
or
jbe
repz
xor
stos
dec
adc
cwtl
dec
cmpsl
add
addr16
jbe
call
or
outsb
dec
ljmp
jecxz
fs
popa
inc
into
nop
loop
jmp
sub
mov
lods
not
bound
hlt
call
popa
sbb
or
mov
gs
inc
std
je
mov
pop
lahf
cltd
aad
dec
adc
out
jmp
push
mov
pop
mov
fcmovb
ja
dec
xchg
int
lcall
pop
pop
jne
lods
jne
rolb
test
testl
sar
les
inc
and
cmp
int3
dec
pushf
lods
les
loopne
das
in
sub
mov
andl
subl
cmpsl
movsb
sbb
push
dec
shlb
out
mov
inc
sub
pop
negb
test
leave
jmp
ljmp
andb
inc
mov
enter
xor
fisubrl
cld
xchg
bound
test
insb
out
xchg
and
mov
jg
pushf
add
xor
push
jl
fistpl
jb
mov
mov
xor
jo
rcrb
cmp
ror
cmp
pop
cltd
push
mov
cmp
mov
stos
sub
mov
adc
cli
and
mov
jns
cmp
jne
add
mov
andl
mov
subl
xor
or
mov
andl
add
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
jmp
movsb
jb
push
cld
pop
gs
call
cli
shlb
jns
jle
lahf
nop
push
xchg
jmp
mov
xchg
push
movsb
jb
xlat
xor
aad
inc
lret
push
call
fdivl
add
xchg
add
xorl
lock
fmuls
adc
imul
ljmp
mov
cmp
push
js
sahf
sub
addb
ret
jecxz
rclb
mov
jmp
jecxz
movsl
ja
fadd
adc
in
jmp
xor
xor
cmp
mov
popf
mov
in
add
hlt
sbb
jns
and
mov
dec
pop
repz
xchg
das
dec
mov
push
jl
arpl
push
fwait
lods
or
pop
popa
inc
sub
and
fstps
incl
mov
outsb
aaa
mov
lcall
gs
shll
das
ja
push
or
jmp
inc
or
sbb
cmp
push
pop
je
repnz
jbe
sbb
sbbb
and
imul
mov
movsl
in
sub
push
pop
fcomps
or
adc
je
std
orl
push
iret
pop
pushl
dec
jno
scas
inc
or
or
push
mov
pop
sub
inc
pushf
xor
ljmp
imul
mov
or
les
add
lea
ret
fcomip
hlt
mov
lock
xchg
fmuls
pushf
in
and
xchg
xchg
das
lahf
pop
jno
lcall
mov
or
jb
in
jae
push
stos
push
je
int
out
lock
jl
add
int3
pusha
or
insb
mov
into
add
mov
mov
cmp
push
cli
or
repnz
jne
push
and
or
xlat
jne
sbb
push
push
popa
and
cld
imul
arpl
pop
jge
sub
in
cmp
mov
mov
mov
icebp
push
pop
or
jmp
lret
imul
cltd
lahf
inc
sub
stos
lock
push
imul
jmp
mov
arpl
mov
sbb
xor
mov
stc
xor
pushf
adc
mov
loop
ja
loopne
je
loopne
pushf
clc
orb
dec
push
mov
out
add
aas
outsb
dec
xchg
movsb
jo
sub
lret
sbb
je
daa
iret
rorb
cmc
jne
lock
jmp
enter
enter
mov
jge
in
notl
add
ret
inc
push
mov
and
sub
stos
clc
push
sbb
inc
aas
mov
filds
jge
xchg
cmp
or
hlt
mov
jae
mov
push
leave
dec
add
jecxz
insl
jmp
push
and
sub
sahf
inc
fsub
icebp
dec
inc
les
fs
pop
push
mov
mov
pop
je
hlt
xchg
negl
scas
test
ljmp
or
mov
and
outsb
iret
pop
lea
jmp
sbb
jmp
mov
sbb
dec
ret
push
mov
sub
movl
movl
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
jmp
and
ss
cmc
lock
sahf
rol
mov
call
jle
jns
jle
add
aaa
cs
xchg
jo
inc
push
inc
and
imul
pop
inc
aam
out
push
bound
sbb
imul
jno
ds
sbb
movsb
jecxz
inc
mov
mov
mov
pop
jp
adc
cld
std
pushf
jl
fsubl
leave
imul
inc
test
sub
test
popa
xor
fnstenv
cltd
scas
dec
ss
xor
nop
mov
in
fs
fdivrl
insl
pop
loopne
or
pop
xchg
imul
sbb
outsb
fcomp
xchg
and
dec
popa
xchg
lcall
js
pop
xchg
xor
pop
scas
push
pop
xor
dec
dec
adc
je
add
push
dec
scas
pop
sub
adc
aam
mov
pop
lret
adc
sbb
xchg
mov
sub
ja
xchg
inc
dec
ret
lds
mov
and
pop
xchg
test
cli
shlb
cmp
in
roll
push
inc
ja
sub
dec
cmp
sub
gs
daa
stos
ljmp
clc
mov
lahf
or
les
and
xchg
or
fwait
scas
pop
mov
fistps
pop
mov
xchg
fs
sbb
fsubrs
popa
and
xchg
push
cmp
or
xor
ds
jb
cmp
insl
xor
inc
sub
sbb
xchg
and
or
inc
adc
and
xchg
cmp
imul
ret
lods
and
sub
rorb
dec
notl
sub
xor
cmp
jp
int3
mov
sbbb
test
xchg
mov
and
mov
pop
js
jns
jae
lret
lret
jo
icebp
sbb
data16
cwtl
mov
pop
pop
jg
cwtl
movsb
or
or
cmc
into
sahf
or
iret
jg
mull
inc
jg
jecxz
nop
dec
or
fs
je
xchg
int
cmpsb
pop
push
notl
call
pop
sbb
rclb
sbb
rolb
scas
inc
je
dec
sub
inc
and
mov
xor
or
adc
cmp
pop
popa
adc
or
mov
mov
mov
popf
cmp
outsl
cmp
add
dec
push
loop
shll
jmp
jne
andl
or
dec
aad
jge
add
dec
dec
stc
xor
xor
out
or
mov
pop
imul
fcoms
pop
scas
sahf
fldcw
mov
jnp
push
jbe
scas
mov
push
int3
dec
xchg
pusha
loope
aaa
in
xor
and
insl
in
xchg
dec
cmp
iret
in
jns
imul
sbb
js
lret
sbb
gs
addr16
jmp
adc
cltd
sti
jmp
or
es
pusha
xlat
daa
jno
loopne
push
cmpl
add
mov
addl
push
stos
xchg
pop
std
dec
mov
sbbb
mov
xor
push
sbb
das
sub
mov
fists
bound
mov
mov
shrl
in
or
jns
data16
je
pop
and
cmc
shrl
xchg
test
push
outsl
sarl
pop
stc
add
and
push
int
fsubrs
sub
mov
aad
cmp
dec
jp
or
dec
outsb
sbb
jmp
std
mov
lock
aam
stos
or
mov
test
cmp
mov
cmp
add
or
mov
mov
adc
mov
sbb
mov
push
sub
lea
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
jmp
call
mov
dec
mov
push
inc
cltd
pop
dec
jns
jle
imul
insb
mov
push
lods
sub
clc
shlb
lods
fs
pop
mov
push
call
jge
sub
movl
add
mov
mov
mov
dec
call
adc
mov
inc
sahf
lcall
push
ret
dec
inc
mov
loop
lods
xchg
daa
and
pop
mov
or
imul
xor
or
adc
mov
push
out
popa
inc
sub
loopne
sahf
stc
or
inc
aad
sub
push
mul
subb
mov
les
jae
in
in
out
ficomps
xor
mov
nop
sbb
nop
sub
in
mov
stc
mov
lret
data16
and
mov
xor
xchg
dec
sub
jecxz
fwait
aad
jge
divb
mov
cmp
sub
lss
push
fs
mul
stos
iret
mulb
pop
push
jne
psllw
and
cmp
push
test
insb
out
add
bound
mov
cmp
loop
in
inc
and
cmp
cli
std
neg
push
das
stos
dec
xor
xor
frstor
jb
inc
sub
pop
cmc
imul
outsl
xor
adc
xor
push
fbld
mov
inc
cmc
xchg
dec
call
cmp
push
sub
addb
push
or
fimuls
push
test
into
xchg
or
outsl
int
adc
push
push
mov
into
xorl
lods
fmuls
out
xlat
loopne
pusha
icebp
sub
jl
ljmp
jae
pusha
out
and
lods
popf
test
js
ljmp
pop
mov
bound
notb
push
repnz
repz
xor
mov
test
dec
nop
xor
dec
rcr
inc
or
xchg
dec
or
cli
leave
xor
push
ret
pop
fmuls
bnd
pop
setnp
ret
mov
in
shrb
inc
and
loope
jnp
test
jnp
mov
scas
fwait
mov
sub
les
pop
incb
lods
cmp
push
xor
movsl
aad
and
pop
mov
in
aaa
lea
push
or
out
pushf
dec
and
cmp
and
mov
ficoml
cmp
popf
arpl
sbb
cmp
jecxz
mov
shld
adcl
add
outsl
mov
mov
jbe
jmp
scas
mov
out
out
cmp
nop
fwait
and
xchg
pop
mov
ljmp
add
leave
or
in
hlt
mov
fcoml
jmp
mov
sub
cmc
lock
mov
mov
and
aad
rolb
pop
std
or
push
push
cmpsb
xor
cmp
mov
jmp
in
call
jp
dec
inc
in
ret
mov
testb
pop
jge
sub
sbb
clc
imul
out
mov
testl
add
mov
dec
sub
or
and
xchg
push
cmp
movb
das
dec
mov
ficoms
pushf
pusha
cld
xchg
lahf
in
mov
movswl
enter
imul
stos
jnp
mov
out
push
push
pop
xchg
ljmp
mov
frstor
xchg
pop
test
mov
inc
add
aad
mov
cmc
imul
push
push
xor
mov
mov
mov
mov
xor
mov
xor
sbb
mov
xor
addl
xor
add
sbbl
add
div
mov
jmp
inc
push
sti
sbbl
mov
xlat
popf
jle
dec
jns
jle
ss
cmp
frstor
ljmp
test
popa
addr16
dec
sti
cmp
adc
mov
add
aad
mov
cmp
dec
in
or
xor
fcmovnu
cltd
loope
jmp
dec
fistps
push
std
int
mov
out
adc
loop
xchg
stos
shll
ja
sub
jno
push
dec
adc
inc
xor
and
imul
push
jmp
push
sub
dec
jo
xor
cmp
fsubrl
dec
mov
iret
xor
xor
imul
icebp
dec
dec
sbb
gs
pop
cwtl
outsl
fadds
cmp
inc
xchg
mov
lahf
aam
pushf
pop
push
es
cmc
inc
sbb
jnp
movsb
push
xchg
push
jo
outsb
idivl
inc
sahf
cs
mull
loope
mov
pop
sub
test
add
pop
and
inc
imul
xchg
test
dec
sarb
ljmp
std
out
movsb
testl
fcoml
inc
jb,pt
cmpsl
js
or
push
test
lock
xor
scas
test
pop
repnz
jle
lahf
sub
fnstsw
test
icebp
lods
vpaddusw
inc
dec
stos
dec
mov
pop
sub
sub
shll
int
xor
push
adc
sbb
scas
add
cmp
pop
pusha
cmpsb
jg
push
inc
fistpl
fstpl
sahf
cmp
adc
mov
in
int
int3
cmp
xor
cmpsb
out
fildl
ret
jmp
cli
lds
in
jns
cld
aam
add
mov
push
mov
mov
clc
or
pushf
cmp
jbe
sub
out
es
je
push
pop
mov
iret
add
sub
adc
loop
mov
push
sar
orl
adc
push
into
xor
xor
test
adc
cmp
fs
adc
add
jl
je
rdmsr
popa
aas
cmp
nop
mov
arpl
cmpb
cwtl
jmp
or
mov
adc
shlb
sar
repz
ds
push
cmc
out
test
out
sbb
and
test
lock
jecxz
xor
push
and
mov
nop
scas
sbb
das
pop
adc
dec
jl
push
dec
mov
mov
add
xchg
andb
xchg
mov
mov
cmpps
lock
pop
cmp
mov
fldenv
lea
mov
and
fidivrs
sub
sbb
fcom
mov
pop
mov
jmp
push
xchg
or
mov
cli
mov
or
in
pop
pop
sub
sub
ret
or
cmp
sarb
jno
mov
iret
out
test
movsl
das
dec
das
pop
cltd
adc
lcall
or
shlb
dec
or
xchg
nop
int
popa
xchg
aad
add
inc
mov
into
lods
xor
scas
stos
jle
fdivrl
fdivr
mov
fsts
xor
shl
ljmp
xchg
pusha
lahf
test
and
leave
test
push
je
cmp
cmp
mov
mov
push
fstpt
sub
dec
jns
sarl
mov
in
mov
sahf
inc
jp
sahf
sbb
push
loopne
add
add
add
jmp
shlb
cld
ja
or
out
ret
jle
dec
jns
jle
inc
pop
nop
inc
iret
dec
nop
sbb
sbb
cmp
mov
fcomp
sub
sbb
fdivrp
imul
lock
cmpsl
push
add
loope
xchg
rcrb
rorl
dec
in
sahf
fdivrs
or
jbe
push
adc
push
adc
sbb
xchg
cmp
add
rorb
or
push
aam
fwait
out
push
inc
lds
sbb
or
fcmovnu
add
fs
insl
push
outsl
fs
inc
scas
incb
mov
push
inc
dec
mov
cmpsb
shrl
popa
sahf
or
in
inc
dec
inc
test
cmp
ror
movl
les
push
lret
roll
jg
insl
repz
repz
cli
jno
push
mov
hlt
lods
insl
inc
mov
bndldx
adc
cs
mov
shll
lret
aaa
inc
and
mov
mov
jl
push
ror
cmp
mov
push
mov
xchg
orb
repz
xchg
adc
shrb
mov
cmpsb
or
xchg
pop
sti
outsl
sbb
jnp
cmpsb
dec
inc
lods
int3
out
cmp
bound
dec
pop
jns
xor
inc
loope
push
mov
lcall
xor
lahf
outsl
mov
lret
and
sar
fdivr
test
jecxz
lock
mov
andb
and
popa
adc
sbb
xchg
sbb
push
jb
and
or
mov
dec
fcomps
shrb
dec
jp
scas
leave
pop
andl
dec
stos
outsl
nop
jge
adc
push
popa
pop
std
dec
ret
in
ja
jle
sbb
rclb
pusha
or
fwait
xor
in
mov
pop
jecxz
popa
push
ds
xlat
dec
dec
mov
mov
push
mov
enter
push
rorb
adc
xchg
jp
pop
scas
and
arpl
push
gs
cmpsl
sbb
jle
sub
fcmovne
push
shl
scas
orb
daa
adc
sbb
out
mov
cltd
mov
pushf
rcll
jmp
or
push
jmp
pop
cwtl
or
lock
insl
mov
sub
xor
andl
mov
repnz
cmp
rcrb
inc
dec
dec
jb
sti
lea
jecxz
mull
jae
popf
clc
xchg
es
js
loop
std
and
mov
repnz
cmp
mov
bound
push
ja
test
rcrl
js
jp
jge
and
clc
call
push
push
sub
cltd
push
jg
mov
mull
clc
jle
jmp
and
adc
mov
mov
andb
int3
dec
mov
mov
and
mov
pop
or
xchg
xchg
lods
sub
inc
jae
pop
xchg
fnstenv
push
into
dec
and
inc
and
pop
and
arpl
imul
movsl
shl
aas
mov
cmp
ljmp
sub
mov
out
rcl
push
jno
push
and
xchg
mov
xorb
add
popf
sub
inc
inc
adc
js
mov
or
ljmp
xorb
je
or
jo
inc
nop
cmp
push
mov
xchg
xchg
cmc
leave
in
inc
aam
dec
add
movl
cmp
movl
je
movl
lea
addl
mov
xor
mov
not
mov
orl
imul
movl
mov
movl
mov
cmp
je
mov
mov
sub
sub
mov
orl
mov
xor
add
pop
pop
jmp
pop
add
or
add
or
sub
iret
jle
dec
jns
jle
scas
movsb
out
xchg
inc
fwait
stos
rorl
aad
stos
repz
push
push
mov
shlb
mov
pop
lahf
jge
xor
cmp
and
pop
xor
cmpsb
sbb
pop
xorl
test
hlt
pop
mov
dec
mov
sarb
fcoms
mov
aad
inc
in
push
ret
xor
dec
scas
xchg
stc
mov
dec
mov
idivb
mov
push
add
in
test
add
or
imul
xlat
imul
pop
push
sbb
dec
imul
aaa
cmp
push
add
push
sub
push
ja
xchg
xchg
es
sub
scas
xchg
push
inc
outsl
cmp
notb
xchg
inc
mov
cs
dec
cmp
ljmp
out
shlb
cmp
sarl
mov
mov
fwait
popa
mov
test
push
mov
lds
loopne
bound
mov
mov
ljmp
je
pop
mov
add
cmp
mov
shr
nop
xorl
lods
fisubl
popf
imul
js
or
inc
js
xchg
cli
inc
cmpsl
in
xchg
mov
fdivrs
rolb
adc
iret
dec
outsb
dec
scas
idivb
mov
je
jo
jl
repz
jb
fsub
ret
pop
shrb
cltd
repnz
jg
ljmp
mov
add
repz
xor
jns
and
adc
adc
aam
jae
sbb
ja
fwait
cmp
xor
roll
fnstsw
insb
pop
jl
in
nop
sub
add
sarl
mov
popa
out
lahf
in
fcoml
jo
sbb
jl
cli
xchg
and
lock
aam
cmpsl
sbb
inc
scas
sub
pop
mov
xchg
mov
in
xchg
daa
add
cmp
jg
xchg
and
rorb
decb
pop
cmpsl
inc
jmp
rcll
into
and
add
outsl
mov
push
lods
mov
sub
inc
rcll
mov
jb
or
or
or
repnz
pop
int
jo
cld
test
and
sbb
pop
js,pt
or
jae
test
adc
pop
arpl
sbb
add
leave
xchg
in
into
shl
cmp
cmpsb
pop
fstpl
jno
imul
sbb
test
pop
add
pushf
shl
and
inc
xchg
lds
dec
and
sub
fsts
jg
adc
adcb
ret
test
push
mov
sbb
or
jecxz
rclb
fwait
ret
xlat
lret
push
jp
das
pop
xor
in
jnp
repnz
mov
repz
and
mov
jl
lods
je
imul
outsl
jle
jnp
xor
int3
shr
roll
daa
push
xchg
test
outsb
cmp
adc
stos
mov
scas
jmp
add
movsb
and
mov
mov
xor
push
xchg
inc
in
shlb
js
test
and
jg
loope
pop
fsubrs
int
push
cld
repz
loopne
cmp
ret
test
mov
imul
cli
sbb
jg
sub
ljmp
sbb
pop
idivl
repnz
dec
xchg
or
loope
mov
hlt
jg
sbb
cmp
dec
rcll
roll
mov
movsb
inc
inc
push
aaa
imul
push
mov
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
jmp
ret
or
insl
pop
jmp
pop
sbb
or
jle
dec
jns
jle
cmp
and
pop
test
or
pushf
pop
jns
out
int
xor
imul
push
cmp
inc
cmp
in
les
inc
xchg
jnp
push
mov
mov
xor
sahf
pushl
cmp
jno
ret
push
jno
in
cltd
mov
aad
mov
fst
in
outsb
fwait
loopne
adc
repnz
sub
pushf
enter
insb
fisttpl
cmpb
cmp
stos
and
xchg
sub
and
sub
jns
push
pusha
sub
push
rorl
sarb
sbb
xchg
cld
xlat
mov
mov
je
lds
push
mov
cmp
outsl
das
orb
adc
dec
sbb
cltd
mov
je
cmp
xchg
notb
outsl
js
in
pop
sbb
pop
push
xor
cmc
and
lret
inc
sti
rolb
jge
xchg
int3
xchg
inc
rol
in
test
push
mov
adc
mov
push
sub
push
daa
pop
mov
movsl
pop
sub
or
insl
and
mov
adc
arpl
adc
clc
lock
in
mov
xchg
pop
fcomps
test
jecxz
imul
mov
bound
mov
shlb
das
int3
xor
lock
cmp
dec
sbb
data16
xlat
push
std
imul
insl
cltd
pop
xchg
push
lds
mov
sbbl
mov
jp
inc
mov
dec
dec
inc
aaa
pop
jnp
repnz
cld
iret
sar
ret
test
xorl
mov
push
shl
shr
aam
into
xor
enter
pop
add
add
xchg
pop
push
sub
test
inc
leave
ret
or
cmp
xor
mov
scas
js
dec
cmp
pop
rclb
and
lahf
lock
stos
fwait
push
add
mov
js
int3
pop
ss
or
dec
jns
dec
loope
mov
xor
out
xor
sub
pop
inc
lcall
mov
cltd
sbb
or
jbe
cmpsl
aas
pop
aam
cmp
add
sti
mov
popf
sbb
and
stos
add
inc
cmp
mov
lcall
fwait
lcall
sub
pop
sbb
lahf
sub
es
ss
pop
cmp
xor
sub
jle
xor
jg
inc
and
xchg
inc
mov
cmp
xor
xchg
xor
or
std
jl
lret
lods
jns
shr
in
push
loopne
addr16
xchg
outsl
mov
cmpsl
and
pop
and
mov
and
sbb
cmp
dec
pop
sti
inc
loopne
gs
mov
mov
stos
cmc
or
scas
add
mov
xchg
sub
mov
mov
loopne
jae
aaa
jecxz
ljmp
imul
xor
jo
mov
sahf
jnp
adc
cmpsl
mov
jbe
roll
lods
lret
rorl
push
xchg
cmp
pop
dec
mov
adc
jns,pt
cmp
aad
fbstp
mov
sbb
aaa
cmpsb
scas
shlb
cmp
mov
add
pop
jns
xor
addl
inc
in
push
sarl
inc
add
inc
test
lock
jo
fdivl
jmp
popa
mov
inc
lock
jmp
mov
mov
mov
mov
xor
mov
add
jmp
int
adc
push
pop
dec
xchg
leave
mulb
in
aas
lds
dec
jns
jle
es
mov
push
mov
mov
pop
xor
xor
rcr
outsb
adc
xorl
movsl
dec
push
push
lea
ret
push
push
sub
inc
fsts
mov
sbb
add
stos
fldenv
fsts
es
repnz
inc
add
ficoml
mov
dec
mov
mov
out
ret
cmp
mov
lahf
leave
adc
js
sbb
xchg
stos
mov
lcall
cmp
loop
lret
mov
mov
ljmp
mov
xchg
xchg
jp
enter
mov
loopne
loop
scas
ret
jne
mov
push
cli
leave
mov
mov
cmp
stos
dec
push
mov
jb
jo
sahf
dec
cld
jno
cmp
stos
lock
popf
xor
push
in
stos
inc
dec
add
jne
adc
sub
dec
jbe
idivb
inc
mov
inc
dec
sbb
imul
xchg
mov
xchg
adc
mov
test
mov
sarb
xor
sub
int
shl
jo
sub
mov
sbb
ret
xlat
movsb
or
int
push
push
std
inc
push
cli
mov
fisttpl
pop
test
daa
pop
pusha
and
inc
sub
add
sahf
stos
lods
dec
ljmp
jb
mov
in
pop
xchg
xchg
in
mov
ret
cmc
push
lods
clc
std
aam
sbb
xor
fs
xor
add
orb
cmp
ja
shrl
xor
add
les
mov
ljmp
dec
add
leavew
push
jno
push
adc
jecxz
xchg
xchg
adcb
jne
cmpsw
ds
cmc
outsb
inc
aaa
enter
sbb
movsl
inc
scas
jmp
and
movsl
cmp
ja
push
pop
mov
xchg
in
cltd
call
test
jle
inc
cld
fwait
mov
mov
add
add
fsubrl
xchg
aas
sub
mov
jae
sti
popa
fstpl
out
push
xor
int
and
ljmp
push
scas
jle
repz
f2xm1
iret
cmp
and
mov
sarb
mov
pop
push
xchg
jmp
xor
cmp
jge
mov
iret
cmc
shlb
repz
fwait
lock
fdivl
xor
dec
lods
dec
sub
repz
push
jbe
fildll
ret
daa
cs
jl
psubusb
xor
daa
ds
loope
shll
pushf
xchg
sub
and
mov
mov
imul
sub
pop
xchg
cmp
push
iret
or
fisubl
mov
push
ret
les
inc
push
in
add
fisttpl
daa
sbb
push
cmp
pop
and
add
fs
out
int
sbb
sbbb
mov
popa
jbe
roll
or
lret
mov
cmp
jmp
inc
adc
sub
icebp
insl
dec
push
loope
mov
pop
fcompl
mov
repnz
jp
lds
idivl
stc
pusha
lahf
pop
stc
pusha
cmp
hlt
lods
jg
cmp
mov
inc
sub
aas
sbb
inc
adc
adc
orb
xorb
bswap
sbb
or
pop
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
fadd
test
rorb
insl
pop
jl
and
out
stos
sarb
dec
jns
jle
inc
xchg
jg
inc
clc
sbb
push
hlt
mov
dec
pushf
adc
nop
call
addb
push
scas
js
cmp
scas
test
or
clc
jbe
or
test
std
outsl
sub
lods
mov
stos
scas
pop
jmp
mov
loopne
push
loopne
popf
pop
call
jb
mov
leave
sti
mov
sbb
loop
pop
dec
fcmovnb
dec
pop
leave
lds
stos
cld
movsl
daa
in
or
cwtl
dec
addl
add
pop
pop
jp
and
enter
pop
push
imul
imul
jne
pop
sbb
fwait
xchg
inc
inc
out
dec
imulb
pop
aad
cld
pop
or
in
push
stc
jne
pop
and
int3
pushf
outsl
xchg
xchg
outsb
pop
cmp
test
mov
cmc
int3
ret
mov
inc
adc
and
enter
andb
sbb
popa
push
les
cmp
ret
adc
pushf
popf
shll
cmp
push
push
sub
sub
cs
pop
or
jge
dec
push
in
fcompl
xchg
jmp
dec
cmp
ljmp
xor
xor
mov
aad
sub
aaa
inc
cmp
ret
repz
cld
jecxz
in
imul
std
dec
or
jno
sbb
aaa
jbe
scas
hlt
std
cmc
adc
sub
clc
pop
das
or
mov
or
gs
das
add
add
push
pop
call
mov
cld
mov
fnstenv
js
rorb
jno
test
add
pop
shlb
mov
das
mov
pushf
mov
push
jo
adc
mov
pop
test
js
cmp
pop
inc
pop
jle
mov
sub
mov
sub
mov
fldt
push
pushf
push
iret
xchg
test
arpl
test
pop
dec
scas
frndint
or
cmc
pop
inc
loope
push
adc
inc
call
dec
mov
aas
dec
cmpsl
gs
push
sbb
aad
push
popf
mov
xchg
pop
push
and
or
jecxz
ss
test
sub
pop
pop
xchg
jge
xor
xor
xchg
sub
push
insl
jle
cmpsl
and
popa
test
daa
ret
xchg
out
mov
jecxz
leave
jle
jmp
or
gs
add
xor
jb
scas
jge
and
roll
or
cmp
lret
loop
pop
lss
jecxz
mov
sbb
add
js
cli
mov
jmp
pop
in
jge
pushf
std
adc
add
loope
test
dec
and
jne
pop
loopne
sub
das
pusha
and
imul
sub
cmpsb
enter
in
mov
lods
push
sbb
push
mov
leave
inc
mov
xor
pop
movsl
test
mov
aad
icebp
ds
mov
xchg
repnz
in
jbe
mov
or
and
sbb
mov
inc
fmuls
dec
loope
daa
sub
push
cmpsb
and
int
in
fstpt
cmp
insl
lock
mov
xchg
mov
pop
jns
fists
mov
push
add
add
lret
aam
and
lods
in
imul
and
push
sub
adc
fldl
jmp
push
jo
sbb
push
cltd
imul
repnz
ds
add
pop
inc
loope
xchg
roll
insb
gs
add
adc
scas
inc
bound
dec
arpl
add
cltd
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movzbl
sbb
mov
sbbl
push
xor
or
sbb
push
jmp
jmp
lahf
xchg
mov
sbb
mov
fidivrs
loope
jle
cmc
arpl
fldt
movsl
lcall
lods
add
out
test
jns
lock
adc
pop
fidivrl
loope
push
arpl
stos
clc
or
or
jae
adc
hlt
xchg
add
jnp
push
adc
mov
mov
into
stc
repnz
jecxz
femms
std
pusha
xor
xchg
out
rolb
mov
ficoml
pop
jns
dec
outsb
cmc
push
lods
lods
fldenv
test
outsb
test
lods
xchg
gs
mov
inc
out
mov
cmp
ret
flds
xor
imul
adcl
mov
or
xlat
xchg
ja
xor
aaa
inc
sbb
popf
lock
mov
popf
imul
add
ds
into
ret
mov
add
xchg
mov
xchg
arpl
push
inc
int3
out
pop
push
xchg
mov
pop
jg
xor
insl
or
ret
cmc
xor
jmp
dec
lahf
cltd
loop
push
pushf
mov
icebp
or
mov
mov
frstor
add
pop
pop
in
popf
popa
arpl
ds
push
push
push
xchg
addl
pop
arpl
cmpsb
dec
jp
icebp
cli
xor
mov
cwtl
imul
pusha
imul
or
iret
xchg
filds
out
lcall
or
sbb
jb
in
push
push
dec
test
lcall
and
jge
mov
mov
in
sbb
in
mov
dec
mov
mov
push
mov
mov
mulb
mov
jmp
jns
mov
mov
add
int
call
cli
xor
mov
ret
xchg
or
xchg
or
ja
lock
negl
xlat
clc
add
aad
daa
or
xchg
add
and
int3
jmp
jns
sysret
sub
inc
out
add
add
mov
mov
mov
inc
cmp
push
dec
xor
movsl
mov
movsb
mov
int3
scas
movl
inc
movsb
cli
mov
push
in
cltd
fxch
shll
sub
adc
jb
daa
cs
push
or
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
mov
add
push
sub
mov
xor
jmp
push
ja
push
aaa
push
jo
mov
gs
outsb
fdivrs
loope
jle
mov
aas
in
adc
dec
imul
ret
inc
xchg
and
icebp
addr16
xor
sti
cmp
and
dec
push
jno
repnz
push
lods
push
or
aas
mov
sarb
ficomps
loop
lds
lods
pop
enter
int
shlb
inc
test
rorl
inc
out
fbld
mov
push
dec
pop
adc
cmp
inc
sub
data16
dec
insl
pusha
pop
out
inc
cs
dec
xlat
insb
fisttps
ficoml
jg
mov
jge
scas
sub
sbb
jmp
pop
movsl
loopne
ljmp
dec
mov
inc
sbb
push
dec
xor
js
sbb
inc
mov
mov
loope
aas
and
test
and
mov
mov
dec
xor
mov
cs
arpl
push
inc
imul
out
dec
repz
js
rcrl
popa
imul
and
fstps
dec
fdivs
or
sub
xor
movsb
je
xor
insl
int
test
jne
stos
ds
push
cmc
lods
pop
int
bound
cmpsb
gs
test
in
jg
rolb
inc
inc
jb
test
sub
inc
jp
test
xor
pop
scas
sbb
test
and
push
es
call
lds
mov
insl
outsb
pop
movsl
loopne
fldl
push
faddl
sub
insb
stos
xor
stos
inc
push
sbb
or
int3
daa
pop
pop
or
add
jmp
cmp
adc
mov
xor
sub
adc
lcall
or
iret
rcll
cmp
and
scas
ss
dec
pop
sbb
jb
xchg
int3
lret
and
xor
fadd
sub
call
int
arpl
imul
cmc
jae
lahf
sub
adc
mov
dec
shlb
xchg
out
out
ds
inc
push
jo
mov
push
outsb
subb
xor
lahf
and
dec
repz
cmpsb
clc
sub
add
test
iret
shrb
ja
dec
imul
mov
inc
mov
xor
notl
movl
movl
add
jmp
cmp
jmp
adc
sbb
xchg
pop
adc
push
mov
rcr
jle
loope
jle
mov
jnp
imul
push
jl
das
idivb
xor
out
dec
inc
jne
inc
xor
int3
inc
cmc
xchg
lret
sub
xor
adc
pusha
fldl2e
push
pminub
push
push
xchg
pusha
and
or
rolb
aad
dec
rol
cmp
je
mov
lds
mov
aad
call
mov
dec
pop
stc
pop
jno
jp
mov
mov
xchg
daa
fs
int
xor
adc
mov
orl
cmp
cmpsl
mov
adc
adc
lahf
stos
fwait
test
call
jno
scas
inc
adc
les
shl
test
loope
sub
fcmovbe
jnp
fdivrs
outsb
cmc
sub
and
fs
adc
cli
push
pop
inc
xchg
mov
and
shlb
add
adc
pop
pcmpeqd
int
into
lock
pop
fnstsw
push
sbb
testb
add
rorl
or
mov
xchg
push
cmpsb
stc
push
mov
insl
mov
repz
cltd
sub
pop
xchg
lret
dec
sbb
cli
lret
dec
inc
stos
mov
pop
pop
jp
jne
fwait
mov
aad
lret
or
jno
xchg
mov
mov
sbb
insb
dec
mov
stos
jne
mov
push
ret
mov
pop
unpcklps
aas
pop
mov
aas
and
sbb
cltd
xor
cmp
das
pop
xchg
insb
or
add
push
mov
test
jp
ljmp
dec
int
je
inc
arpl
outsb
les
sbb
lds
xchg
add
lret
sub
sbb
aas
imul
sub
or
cmp
std
rorl
xchg
js
test
in
dec
cmp
adc
out
or
push
lahf
out
pop
or
iret
dec
push
das
push
pop
mov
mov
ds
xor
scas
mov
ja
xchg
imull
adc
inc
js
test
push
sub
lcall
cmp
mov
mov
inc
dec
add
bnd
nop
mov
test
add
mov
mov
movl
mov
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
jmp
call
je
fnsave
inc
leave
sar
adc
in
jle
js
jle
and
push
scas
int
mov
pop
imul
fmuls
push
sbb
mov
cltd
pop
adc
push
and
sti
push
sbb
test
pop
push
data16
inc
inc
sub
sub
jne
lahf
test
push
mov
andb
lds
sbb
adcb
cmc
cmpl
mov
lret
push
xchg
mov
or
lret
xor
xorw
dec
cmp
xchg
jb
xchg
flds
fnstenv
cwtl
into
ja
adc
cli
sbb
roll
out
mov
ret
addl
stc
loop
cltd
jle
xchg
es
add
jne
fmul
lret
jo
push
xor
push
jmp
mov
cmpsl
mov
xchg
hlt
sbbl
outsl
insb
gs
lahf
jmp
push
ds
ret
jle
es
fcmovnb
cmp
cld
stos
cmpsl
push
and
leave
dec
pop
xchg
jg
cwtl
and
sbb
test
mov
mov
das
aam
sbb
fmulp
or
jbe
cmp
aaa
dec
cmp
jle
shl
lahf
adc
dec
inc
jno
lret
dec
mov
sub
xor
jle
cmpsl
insl
push
and
rolb
adc
and
and
sub
adc
sarl
les
icebp
mov
test
xchg
int3
je
xor
mov
stc
add
ja
pop
sub
cmp
jbe
leave
ret
iret
cwtl
mov
insb
mov
pop
and
movsb
xchg
test
pop
mov
scas
fnstsw
dec
sbb
fs
xchg
push
neg
out
orl
xor
dec
adc
push
xchg
nop
pop
iret
adc
xor
dec
mov
adc
out
dec
movups
mov
cmp
sti
cmp
and
push
dec
and
ret
les
outsb
mov
adc
or
pop
testb
es
cmc
mov
jecxz
mov
cmp
push
cmp
movb
lahf
cmp
jmp
shrb
scas
pop
in
dec
sub
hlt
add
imul
repz
xchg
adc
ja
mov
pop
xor
iret
cmp
mov
cmc
add
iret
sub
gs
movsb
test
fisubl
sub
lahf
lret
pop
fadds
inc
clc
orl
sub
push
mov
or
mov
addl
add
subl
push
decl
call
movl
incl
cmpl
movl
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
jmp
mov
xchg
jno
jno
out
fisttpl
das
loopne
jle
js
jle
and
mov
sbb
lret
ror
shll
jnp
or
sbb
icebp
push
cmp
lret
lds
add
scas
jo
and
pop
add
jecxz
and
add
in
scas
dec
fists
jl
roll
cmp
fwait
ret
mov
xor
mov
dec
inc
std
scas
movsb
repz
push
fimuls
imul
xlat
pop
fidivrl
mov
xor
mov
pusha
adc
negl
arpl
mov
jg
into
push
das
cmpb
adc
scas
mov
adc
jp
jmp
fsubs
or
test
push
cmpsl
cwtl
hlt
jmp
outsl
pop
lcall
cmpsl
ljmp
pop
xchg
xchg
popa
data16
aaa
xchg
rcrl
inc
sub
imul
sbb
lea
sar
xor
xor
sbb
jo
push
xchg
pop
sbb
stc
movsb
sub
mov
add
push
push
jge
rcrl
js
je
and
mov
mov
aad
add
pop
popa
rcrb
cld
and
arpl
xchg
push
rolb
mov
dec
out
imul
mov
jp
xorb
negb
pop
sbb
adc
mov
jl
ljmp
dec
sub
cmp
and
adc
lock
push
push
add
xchg
cltd
push
int3
or
stos
out
inc
ja
repnz
cmp
fstpt
pop
mov
ret
sbb
pop
cmp
mov
cwtl
inc
inc
xor
cmp
gs
aam
dec
test
xor
stos
push
mov
out
push
testb
in
and
cmp
dec
pop
mov
mov
sub
add
sbb
addr16
lahf
je
pop
add
daa
lret
jmp
pop
popf
aam
sbb
push
cmp
jbe
or
dec
cmp
sub
pop
or
sti
sub
pop
and
dec
xchg
xor
out
stos
scas
test
xor
push
jg
and
pop
xor
addl
addb
inc
lods
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
adc
mov
mov
andl
jmp
jns
out
std
jge
or
clc
xor
cltd
xchg
loop
jle
jns
jle
pop
imul
xchg
and
sub
add
cmc
xchg
int3
cmp
std
dec
add
adc
arpl
test
aam
hlt
sbb
mov
jo
out
lods
ret
fwait
push
xchg
jecxz
mov
push
cmpsb
in
jo
sbb
call
pop
dec
loop
push
and
aas
gs
outsl
jl
popa
jecxz
int
ftst
jno
lahf
pop
enter
jno
sbb
xor
inc
xchg
xchg
je
or
xor
mov
push
rol
hlt
pop
xor
aad
imul
xchg
xor
rcrb
push
popa
and
mov
dec
fnstsw
outsl
in
and
scas
adc
push
push
xor
cmp
pop
jp
or
loopne
fmuls
fs
adc
add
jo
es
dec
je
shrb
insl
cmpsb
movsb
jne
or
pop
adc
stc
or
into
or
mov
pop
jae
and
mov
pop
arpl
dec
negb
frstor
iret
push
or
xor
inc
lods
out
add
jo
loopne
xor
dec
sbb
mov
icebp
bound
into
andb
fidivl
add
fnsetpm(287
add
ja
imul
int3
cmp
cld
leave
xor
outsb
sub
cltd
or
and
push
pushf
dec
andb
jne
loopne
mov
inc
mov
bound
in
mov
mov
lods
and
les
hlt
xchg
mov
imul
leave
and
sbb
jecxz
outsl
mov
add
pop
pop
mov
dec
and
pop
rcrb
mov
xor
out
jl
cmp
push
pop
lcall
ret
pushf
xchg
push
push
mov
sbb
jo
mov
xchg
mov
adc
adc
fs
arpl
rcr
aas
pushf
loop
sbbb
push
jg
out
jmp
icebp
dec
push
add
bound
jl
and
fnstsw
int3
cmp
dec
idivl
rcll
dec
test
or
mov
in
mov
icebp
sub
mov
mov
cmp
loopne
cmp
push
push
mov
xchg
out
stc
mov
cld
pop
lret
mov
das
rcrl
imul
mov
stc
cmp
mov
mov
cmc
pop
daa
adc
mov
lea
inc
xor
mov
in
imul
adc
push
movsb
xor
cmc
andl
push
out
pushf
add
das
loopne
jns
lahf
jp
dec
and
enter
lcall
lcall
xchg
int
cmp
adc
mov
ds
repz
insl
cli
mov
adc
rorb
or
jbe
je
sti
mov
pop
cmp
mov
sbb
scas
push
cld
addr16
push
xchg
jg
stos
push
xchg
in
insb
xlat
gs
roll
out
inc
and
insb
bound
lret
dec
jle
aaa
pop
test
ret
jecxz
in
rcrl
test
outsb
aad
pop
mov
cmp
cmp
mov
faddl
mov
out
and
cmpsl
jp
adcb
and
outsl
adc
data16
dec
sbb
shr
or
adc
or
hlt
sbb
sub
jmp
popa
jge
and
inc
dec
ss
mov
sub
loopne
sar
adc
fnsave
and
mov
enter
sbbb
testl
or
movl
xor
movl
movzwl
add
mov
mov
jmp
jmp
or
std
fdiv
sbb
stos
lock
jle
jns
jle
icebp
lcall
outsl
jp
fwait
inc
popa
scas
ds
pop
pop
xchg
pop
imul
lea
sarb
cmp
adc
fdivr
subl
push
add
add
xchg
jno
adc
mov
outsb
pop
jg,pt
movsl
mov
mov
or
push
test
out
pop
pop
add
js
arpl
leave
cmp
scas
sbb
insb
pop
ficoml
and
and
aad
int3
add
cltd
sbb
cmp
mov
stos
push
dec
fwait
xchg
ss
rcrb
push
std
cmpsb
cmp
jb
mov
getsec
sub
mov
or
out
jle
test
pusha
and
pop
dec
rcll
clc
xor
in
jbe
adc
mov
call
xor
inc
mov
popa
lea
pushf
jno
pop
js
adc
rolb
lock
test
mov
call
adc
mov
sub
lcall
mov
fsubrs
mov
cld
jp
adc
push
mov
pop
int3
jb
sub
cmp
fstcw
add
xor
push
lea
ljmp
sub
dec
push
adc
insb
cmpsl
mov
shl
or
popf
sbbl
nop
mov
cwtl
notb
mov
popf
shll
outsb
roll
pop
sbb
into
outsb
bound
mov
sbb
imul
mov
adc
push
int3
in
xor
inc
cmp
xchg
or
ja
mov
push
aaa
fs
jb
hlt
pop
es
into
jno
in
add
cmp
push
jge
loop
mov
xchg
jge
add
bnd
sbb
pusha
xchg
out
test
jbe
mulb
int3
enter
dec
pop
jns
out
lods
adc
hlt
mov
push
mov
shlb
in
shrb
push
and
adc
mov
mov
in
xchg
pusha
cmp
jmp
push
push
incl
bound
jmp
sub
mov
sub
pop
test
in
aaa
xor
ret
xlat
or
mov
jnp
jns
add
push
jecxz
and
pop
xchg
frstpm(287
push
aam
xchg
cmp
stos
add
int
ret
stos
inc
fs
rcr
icebp
cs
cmp
daa
lods
outsl
aaa
cmp
sbb
test
stos
adc
sbb
mov
mov
add
mov
pop
int
cwtl
sar
xchg
xchg
adc
fildl
push
gs
and
xchg
mov
call
pop
mov
sub
pop
sahf
dec
inc
xor
add
add
je
jbe
jg
jnp
lea
sahf
sbb
inc
cmp
lea
nop
xchg
out
pop
in
and
pop
jmp
sub
in
out
hlt
imulb
sbb
aaa
into
popa
sbb
cmc
push
dec
push
push
mov
test
xchg
jb
shl
out
fsubs
in
and
push
dec
mov
pop
push
popa
loop
push
mov
dec
cmp
sbb
hlt
mov
lcall
ljmp
shrl
jae
dec
push
sbb
test
outsl
std
pop
mov
lds
sti
jg
fucomp
andb
xchg
adc
jle
cmp
push
push
lods
fucomip
imul
loope
mov
and
and
sti
xor
add
scas
mov
repnz
cwtl
mov
sub
mov
mov
or
xor
xor
add
xor
mov
add
mov
inc
mov
xor
add
mov
movl
mov
mov
sub
add
jmp
xor
xchg
mov
stos
cs
push
negb
mov
jle
jo
jle
dec
fs
clc
sbb
sub
inc
sbb
repz
int
xchg
adc
nop
rcr
adc
xor
pmaddwd
cmp
jbe
sbb
iret
add
mov
xchg
cmp
movsb
cwtl
lods
xchg
in
sub
popa
das
mov
and
jnp
mov
jno
aam
mov
rclb
loopne
loopne
xchg
fidivs
mov
leave
aas
roll
in
cmp
fmuls
cli
into
jl
push
test
push
inc
out
out
mov
lahf
stos
lea
imul
cld
lcall
and
cmp
out
xor
mov
mov
mov
cld
push
mov
push
adc
mov
xchg
push
cmp
mov
pop
arpl
pop
arpl
mov
mov
mov
cmpsb
sub
scas
popf
negb
sbb
out
mov
adc
mov
sub
xlat
push
in
xchg
jbe
jo
push
jp
fnstsw
push
iret
shrl
or
sbb
jno
cmp
mov
cwtl
pop
ds
adc
adc
cmpsb
pop
and
sbb
jne
adc
dec
xor
test
fstp
mov
mov
int3
push
or
fsubp
pushf
pop
and
test
mov
xchg
or
mov
cmp
push
std
lcall
sub
and
scas
subb
sub
in
je
dec
stos
mov
bound
cmc
inc
and
push
popa
sub
test
daa
sbbb
fistps
mov
test
xchg
xlat
xchg
insl
lret
out
es
pop
stos
divb
xorb
dec
xor
out
cld
fildll
add
mov
sbbl
insl
jns
dec
sarb
repz
sbb
push
ret
aas
repnz
test
sub
insl
sbb
orb
mov
cmp
daa
in
mov
mov
cmp
mov
sbb
push
adc
cwtl
inc
ljmp
cmp
fidivrs
jns
and
pop
fisttps
outsb
test
fistps
sub
or
add
int
adc
ss
out
cmp
push
es
iret
mov
sbb
fnsetpm(287
add
cmp
cs
aaa
addr16
les
mov
jmp
sbb
and
flds
xor
test
adc
mov
jae
cltd
push
dec
mov
rclb
adc
pop
add
sbb
or
fwait
push
add
lret
test
aas
dec
mov
lret
jns
inc
pop
outsl
jns
daa
bound
ss
inc
mov
jb
dec
adc
xchg
pop
mov
pop
in
and
and
shl
cmc
sub
enter
repz
add
stc
mov
add
add
sub
adc
fsubrp
outsb
jl
int
ret
push
mov
es
jne
adcl
sbb
pop
icebp
mov
dec
in
and
sub
pop
into
jae
cmp
aam
sub
fsubs
adc
xor
mov
mov
icebp
xchg
sub
pop
pop
xchg
out
sti
ret
shrl
popl
mov
adc
or
xchg
jecxz
jmp
xor
arpl
jg
enter
inc
fdivrs
test
add
add
in
cld
popf
popa
imul
push
fxch
andl
jo
jle
xchg
out
shrb
ret
mov
sub
jle
and
test
cli
push
xor
cmp
or
pop
sub
adc
pusha
std
jp
shlb
scas
push
hlt
in
fstpl
clc
pop
insb
cli
jnp
mov
mov
mov
out
xchg
mov
ss
mov
dec
xor
and
fimuls
lahf
jo
xchg
aaa
insb
push
inc
lret
mov
or
ja
rorl
jmp
inc
dec
xchg
pop
dec
test
mov
imul
imul
mov
leave
adc
inc
push
xor
icebp
sti
pop
fimull
dec
dec
adc
fcomps
mov
pop
mov
xor
sub
or
jb
dec
cmpsb
sub
divb
lret
or
in
iret
xchg
mov
inc
mov
xlat
and
mov
stc
sti
dec
mov
mov
cmp
jb
push
mov
lods
fdecstp
scas
in
xchg
mov
lret
cmpsb
jno
or
fwait
je
mov
mov
and
or
mov
test
mov
test
mov
insl
jle
mov
pushf
stos
and
jg,pt
aam
shlb
push
aad
jecxz
das
vmread
sub
or
xor
test
outsl
scas
and
cmpsl
dec
fdivrs
pop
jmp
pop
insl
and
or
pushf
sti
filds
insl
das
add
push
iret
insb
out
cmc
std
push
out
aas
push
xchg
cli
xchg
add
aam
ret
cs
stos
mov
je
push
mov
insl
test
add
dec
sbb
or
aam
xchg
sub
call
idivb
jo
mov
xchg
sbb
loopne,pt
arpl
repnz
dec
xchg
jo
stc
mov
lds
adc
xchg
and
repnz
adcl
fisubrs
push
sub
aam
inc
gs
stc
arpl
cltd
aam
pop
adc
cmpxchg
cmp
jnp
add
cwtl
mov
mov
jno
ja
scas
outsb
in
sahf
dec
mov
ds
sub
cmp
pop
pop
adc
imul
xchg
icebp
ljmp
or
or
push
pop
push
cld
xchg
ds
popf
and
mov
stos
test
out
adc
pop
inc
jp
testl
mov
les
mov
mov
add
push
popa
lret
push
imul
inc
add
and
movsl
cmc
xchg
or
and
andb
dec
mov
adcb
mov
pminsw
mov
in
sbb
movsl
lret
movsb
adc
mov
outsb
jp
cmpsl
js
inc
cmp
fchs
addl
add
dec
out
inc
mov
mov
adc
or
in
dec
push
sbbl
jl
mov
xor
arpl
shll
repz
push
xchg
and
mov
xchg
ss
ret
daa
mov
inc
aam
xchg
dec
movsb
xchg
mov
stc
dec
lods
inc
xor
mov
rcrl
or
mov
repnz
dec
in
int3
sub
sbb
div
or
ss
jae
and
mov
lahf
daa
xor
or
stos
andl
test
xor
push
aad
pop
fcomps
imul
in
das
and
lcall
sti
sbb
push
xchg
mov
pushf
rcrl
or
in
or
dec
push
into
or
enter
cmp
sarb
test
int3
cmp
cmp
movl
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
push
call
cmpl
jb
or
movl
sbb
mov
xor
sub
mov
orl
add
cmp
je
movl
push
jmp
xorl
mov
add
mov
addl
sub
movl
mov
andl
xor
addl
add
movl
cmp
movl
jb
mov
mov
sub
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
inc
xor
sbb
add
or
add
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
and
mov
sub
cmp
movl
ja
xor
add
add
mov
orl
jmp
xchg
dec
in
in
test
out
adc
jle
jns
jle
xor
andl
mov
and
mov
dec
push
mov
insb
mov
inc
scas
xor
mov
pushf
mov
adc
xchg
fwait
xor
inc
pop
push
outsb
aam
mov
mov
outsb
popf
pop
sbb
or
pop
pop
ret
popf
insb
jle
cmp
push
cwtl
jp
inc
loope
imul
inc
stc
mov
xchg
mov
xadd
sub
dec
sahf
outsb
pushf
test
or
int3
push
and
lret
or
xchg
pushf
out
outsb
idivb
stos
mov
lret
xchg
mov
mov
fnsave
dec
adc
rcl
dec
jbe
cltd
test
call
sarb
and
mov
leave
push
cmc
and
push
imul
lcall
repz
add
jne
movsl
bound
fs
dec
or
aas
cmpl
adc
fmuls
into
fcomi
lock
dec
and
pushf
int
cmpsb
sahf
mov
xchg
nop
xchg
mov
sub
push
mov
imul
or
sbb
in
das
lods
ljmp
lds
cld
fwait
rorb
out
fdivr
jmp
adc
stos
mov
in
es
aad
inc
lea
xchg
lcall
cmp
adc
cmp
mov
add
fnsetpm(287
vphaddwd
loop
out
push
add
into
push
aad
inc
cmpsb
push
sbb
lahf
out
dec
roll
test
pop
repnz
loop
dec
pop
sub
mov
test
out
jbe
ss
sbb
ds
idiv
movsl
cwtl
lds
jnp
jo
mov
push
or
push
pop
leave
adc
jb
imul
cwtl
loop
aad
xor
imul
adc
repnz
cmp
pop
push
push
add
and
outsl
xor
cmc
dec
lahf
addr16
push
rolb
add
imul
inc
ret
hlt
lods
shr
pop
sahf
jne
lret
pusha
mov
sarl
jmp
push
pop
adc
ja
loopne
rclb
jae
mov
dec
add
and
or
dec
int
cmc
arpl
ret
sub
push
xchg
sbb
loope
xchg
push
jp
loop
les
pop
jbe
mov
cltd
hlt
and
enter
loopne
dec
std
mov
pop
ret
insl
call
jmp
xchg
add
pop
cmp
imul
push
dec
popa
scas
mov
cmp
ret
jnp
imul
push
jno
sbb
arpl
aam
add
aad
mov
cmpsb
movsl
loope
pop
cmp
imul
dec
push
mov
sahf
push
mov
scas
jp
repz
mov
hlt
movsb
adc
jb
mov
jns
xchg
pop
mov
or
cli
orb
jbe
fadds
xor
iret
jmp
pusha
sub
jno
inc
ret
lods
into
jmp
dec
push
xor
pop
add
lock
xor
aas
cli
xchg
push
rcll
cmp
mov
xor
adc
pop
jp
jecxz
ds
mov
jb
insb
out
jae
pop
jp
push
sbb
decl
cmp
imul
fwait
repz
cld
es
imul
sbb
gs
push
loope
int
fs
pop
insl
mov
pop
inc
nop
fstps
leave
outsl
stos
cmp
cli
jbe
and
inc
add
or
addr16
adc
iret
loopne
repnz
adc
jbe
or
loope
cmp
cmp
cmpsb
popf
fildll
stos
cmp
adc
incl
add
shr
jno
add
mov
subl
mov
mov
sub
mov
xor
xor
or
add
adc
jmp
test
jne
xchg
in
in
or
jle
jo
jle
cwtl
out
loopne
ss
sub
test
insb
shll
push
loop
cmc
jl
neg
sbb
sbb
jb
jb
in
mov
addr16
mov
fcoml
jbe
leave
mov
sub
cmpsb
cwtl
stc
xorb
ret
call
fcmovne
les
sti
mov
aaa
cmp
mov
jo
mov
xor
xchg
adc
mov
push
hlt
and
cltd
xchg
xor
aas
lret
clc
in
loope
sahf
fs
mov
clc
sub
fsubrs
mov
sti
shll
bound
bound
xchg
xchg
test
cmpsb
xor
or
xor
jb
mov
scas
mov
pushf
imul
ja
insl
aas
dec
jnp
test
mov
imul
cli
pop
test
repz
jno
push
ja
cmp
mov
jns
or
cmpsb
or
dec
adc
shlb
xor
mov
jo
ret
ficoml
jmp
lods
and
dec
shll
jge
pop
jo
pop
jno
add
shll
adc
call
sub
ret
scas
jg,pt
adc
and
cmc
lret
mov
daa
das
mov
outsb
hlt
or
dec
ficoml
outsl
sbb
mov
sbb
xor
jo
lahf
iret
sbb
mov
dec
dec
stos
jmp
movsl
jg
jb
icebp
xchg
xchg
and
mov
pop
dec
stc
pop
or
jge
add
pop
pop
cmp
mov
jle
roll
dec
mov
rorb
test
daa
in
adc
stos
mov
xor
loope
js
or
repz
xchg
loopne
icebp
fistps
xchg
das
mov
xchg
push
sbb
dec
lcall
and
stos
ret
push
scas
loopne
das
lods
cmpsl
rol
jne
xchg
push
int
cmp
jns
repnz
lds
dec
cmp
xlat
sahf
rcrb
lods
leave
xchg
out
xchg
jle
jge
mov
pop
mov
mov
inc
lret
sub
pushf
push
ds
popa
sbb
addl
push
stos
into
popw
sbb
dec
stc
jne
in
cmpl
sub
mov
lcall
fstpt
or
add
mov
adc
mov
sbb
push
das
sbb
push
mov
push
andl
dec
jbe
shll
stos
lret
push
ret
int3
mov
mov
pop
imul
xrelease
sti
cmpsb
stos
shlb
push
xorb
dec
mov
sub
xchg
pop
add
push
dec
sti
mov
add
cld
stc
or
rol
xchg
push
pop
cmp
arpl
ret
les
pop
loope
cmp
mov
mov
leave
jne
jl
sbb
pop
subb
mov
pop
popf
push
sti
xchg
xchg
jmp
or
add
jle
sbb
and
out
mov
out
roll
mov
idiv
inc
or
jge
pushf
cmp
ljmp
mov
movsb
ss
in
mov
xlat
or
aaa
jno
adc
outsb
nop
add
clc
inc
testl
cmpsl
mov
jbe
loopne
scas
inc
rcrl
int3
add
inc
pop
add
aam
push
inc
mov
inc
inc
mov
mov
icebp
lods
loopew
pusha
daa
lock
out
outsl
xor
add
bound
mov
mov
loopne
stos
add
daa
jecxz
es
inc
xor
aas
or
push
jp
lock
lods
add
imul
xor
mov
mov
xorl
sub
movl
cmp
movl
ja
mov
mov
movl
jmp
sub
mov
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
jmp
xor
xor
xor
add
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jb
add
imul
mov
mov
jmp
aas
andl
push
repnz
pusha
cwtl
sbb
jle
jns
jle
int3
fwait
jmp
jno
or
imul
fxch
add
add
or
ret
inc
aas
jno
and
loope
pop
in
sarl
adc
icebp
sbb
pusha
add
repz
adc
pop
ret
and
negb
adc
sub
out
out
fists
sub
mov
lock
in
jae
and
bound
ja
jbe
daa
jle
stos
xor
inc
jge
das
clc
sahf
lcall
cmc
hlt
sub
cmp
push
adc
jnp
sbb
ss
fnsave
call
test
mov
xchg
or
xchg
dec
add
mov
push
add
mov
scas
adc
or
pushf
or
push
js
mov
push
int
jb
ljmp
sub
xor
xor
xchg
xor
adc
pusha
popf
xchg
notl
movsl
inc
in
pop
mov
adc
ret
ja
push
inc
xchg
lods
add
adc
xor
inc
mov
ret
sub
mov
push
xchg
pop
pusha
push
or
shll
dec
mov
int
cmp
cwtl
mov
cmp
arpl
or
out
outsb
xchg
push
and
rolb
test
daa
xchg
stos
cmp
test
push
mov
sbb
xchg
mov
mov
pop
xchg
dec
inc
out
fdivrl
pop
int3
and
aad
jns
push
jecxz
int3
lock
test
jne
sbb
push
and
cmpsl
pop
divl
adc
xlat
cld
pop
xchg
ja
addb
pop
jb
inc
cmp
add
ds
out
add
stos
fimull
push
and
lret
pop
daa
adc
push
mov
push
xor
push
fidivrl
dec
js
push
in
popf
jne
and
sbb
and
jae
dec
xchg
gs
movsb
xor
test
clc
xchg
out
repz
mov
dec
xchg
xor
mov
xor
fsubr
mov
xchg
nop
neg
dec
jge
dec
sub
push
aas
xchg
pop
mov
jb
gs
push
pop
mov
xchg
gs
mov
shrb
aad
add
xor
pop
in
andb
cmp
std
sahf
adc
and
loopne
lea
mov
sbb
lods
add
aas
or
inc
imul
es
jl
adc
pusha
cmp
bound
mov
scas
jno
jg
andb
and
xor
jnp
movlhps
cmp
and
sbb
pop
sahf
aas
mov
cmp
add
sbb
adc
pop
and
inc
mov
sub
orb
test
sub
int3
sahf
jg
dec
push
faddl
add
shl
lds
cmpsb
jae
insb
push
mov
in
xchg
sub
jge
ja
ret
out
sbb
cmp
sub
int3
add
mov
and
push
or
fcompl
fmull
je
loopne
add
pop
add
sub
sbb
mov
add
sbb
mov
adc
je
movsb
or
dec
and
mov
mov
in
enter
fldenv
mov
pop
mov
inc
sbb
mov
xchg
fwait
std
add
pop
ret
xchg
adc
imul
and
and
xchg
cli
sub
mov
sub
cmp
ja
mov
jmp
jmp
rorl
aam
pop
rcll
xchg
mov
push
push
loop
xchg
jo
jle
mov
in
adc
std
inc
dec
mov
jnp
loop
xchg
ret
cld
sahf
out
decl
or
pop
and
flds
pop
popa
mov
es
outsl
arpl
xor
push
fldpi
inc
or
pop
rep
xchg
lret
pop
aad
into
or
sahf
das
pop
rcr
movsl
mov
inc
addr16
daa
faddl
inc
pushl
sbbb
int
lea
insl
jmp
stos
dec
sbb
je
pop
es
notl
les
add
or
cmc
cmp
in
js
lds
jg
fstps
pop
inc
lods
rorb
je
add
and
ffree
stos
stos
loope
daa
div
xor
mov
mov
xchg
loope
movsb
xchg
outsb
inc
mov
mov
leave
mov
mov
cmp
cmp
fistps
and
push
bound
adc
sbb
divl
xlat
leave
push
popf
scas
xor
jp
jl
jg
in
inc
incb
mov
push
mov
adc
push
icebp
add
add
add
xchg
fldt
es
test
and
push
pusha
movsb
sbb
idivl
jbe
rcrl
fists
xlat
mov
gs
mov
mov
mov
std
sub
imul
xor
bound
enter
mov
mov
sti
stos
fnstenv
mulb
xchg
ret
pushf
insb
mov
and
aam
insb
pop
mov
lahf
hlt
push
dec
mov
shlb
mov
pop
or
cmc
insl
push
mov
add
mov
inc
jmp
xor
push
xlat
sarl
and
stos
pop
xor
dec
int
popf
imul
xchg
aaa
mov
std
aas
sbb
clc
sub
lods
cmp
pop
cmovns
mov
push
testl
mov
jecxz
iret
pushf
popf
push
push
inc
test
stc
or
into
fmuls
mov
mov
inc
xor
imul
bound
mov
or
sahf
ret
adc
or
aaa
call
adc
orb
pop
jae
xchg
repz
imul
cmp
sbb
pop
push
push
je
sbb
dec
push
stos
mov
xor
push
inc
ja
sbb
jg
fldenv
inc
das
jb
sbb
lods
xchg
sbbl
test
mov
test
int
nop
in
loop
jnp
fstps
ss
jne
pop
sahf
push
jmp
jl
mov
add
addr16
iret
movsl
jnp
test
fs
repz
jmp
add
popf
movsl
rcll
xchg
int
xchg
aaa
mull
hlt
rcrb
or
cltd
xlat
inc
dec
sbbb
sbbl
data16
rol
inc
mov
adc
mov
lea
sub
rorb
ret
and
cmpsl
leave
jecxz
hlt
test
repz
mov
jns
mov
pop
push
insb
jbe
ljmp
pop
repnz
mov
insl
cmpsl
push
js
sbb
aam
mov
loope
scas
aad
stos
xor
stc
or
push
les
jmp
in
gs
outsb
adc
fs
loopne
jle
fistl
and
jmp
dec
push
inc
adc
xor
push
cmp
pushf
jecxz
je
subl
mov
ret
mov
aaa
loopne
pop
push
jmp
int
jb
xchg
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
xor
outsl
jne
std
inc
sbbl
hlt
push
mov
jle
jns
jle
xchg
inc
rorl
xor
sbb
es
mov
mov
popa
mov
dec
shrl
cmp
sahf
std
sete
cmpsl
dec
and
mov
mov
and
xchg
loope
int3
hlt
sub
imul
push
jge
mov
add
push
icebp
push
dec
jnp
xor
testl
aam
insl
xlat
mov
inc
mov
add
pop
push
and
hlt
fiadds
das
mov
lahf
std
outsl
xchg
inc
bound
pop
int
mov
cs
sub
cmp
xor
dec
mov
xor
pop
pop
loope
xchg
xor
dec
mov
shr
lret
popa
das
or
mov
fisubl
cwtl
call
adc
lahf
insl
iret
mov
out
push
sub
or
mov
and
mov
nop
imul
lret
pop
inc
test
add
xor
aad
mov
aad
enter
cmp
shll
sbb
loope
into
inc
int
int3
rcl
stos
cmp
pop
loop
fistpl
mov
dec
repz
cltd
stos
addl
loop
or
cli
lret
popa
push
jbe
data16
sub
lea
jl
push
in
mov
dec
popf
jecxz
mov
or
sbb
xchg
jb
mov
addr16
xchg
faddp
pop
stc
fiaddl
add
adc
ss
in
mov
repnz
inc
outsl
gs
pop
int
cmp
jbe
aas
cmp
dec
stos
mov
cs
ja
mov
rcrb
nop
dec
outsl
imul
scas
fistpll
cmp
cmp
outsb
push
loopne
cmp
mov
pop
xor
xchg
mov
mov
jle
mov
scas
and
dec
ljmp
adcl
hlt
out
sub
insb
cwtl
ljmp
pusha
jno
fcomps
pop
movsb
pop
add
push
inc
pop
repz
cld
arpl
or
dec
mov
loop
xor
fdivrl
fiaddl
pop
xchg
movhps
adc
out
arpl
mov
dec
vpshad
xchg
sub
pop
cmp
add
popf
and
xor
shrl
rolb
insb
rcll
push
cmpsb
xchg
inc
inc
mov
cmc
pop
mov
in
iret
pop
mov
dec
and
mov
cld
mov
loop
addb
mov
ret
and
adc
lods
popf
fdivs
dec
cwtl
xchg
push
pop
pop
jbe
add
sub
push
int3
inc
out
mov
sbb
loop
xor
inc
out
fdivs
adc
sbb
sub
pop
cmc
jno
inc
cld
adc
xchg
pushf
xchg
addl
adc
mov
mov
push
mov
bound
push
lret
pop
sub
mov
aaa
pop
push
jle
outsb
push
aad
fcoml
int
nop
pop
mov
mov
outsl
cmp
rclb
sahf
out
xchg
dec
add
movsl
lods
xchg
roll
lret
adc
mov
out
fs
and
rolb
dec
add
ja
sub
insl
sub
jbe
test
arpl
inc
cmp
aaa
push
jae
inc
mov
inc
arpl
inc
cmc
inc
dec
jl
sub
loop
jbe
shll
sti
mov
push
xchg
data16
lret
cmpsb
xchg
mov
divb
insb
test
or
mov
scas
jne
rcl
dec
sub
cmp
mov
jbe
mov
mov
xor
xor
jmp
test
rolb
dec
pop
repz
xchg
cmp
jle
jo
jle
jecxz
dec
call
fstl
inc
bnd
xor
xchg
xor
xor
push
pop
jmp
fwait
loope
movsb
add
in
out
push
cmp
cwtl
jbe
pop
mov
mov
negl
loopne
lahf
out
sarl
or
adc
inc
sub
adc
inc
cmp
jo
lock
cmp
dec
in
aas
jl
je
and
mov
inc
shlb
push
pop
jg
mov
push
mov
add
mov
test
mov
sbb
sbb
das
jecxz
lret
notl
int3
std
es
mov
push
sub
scas
rcrb
mov
or
stos
xchg
addr16
pop
lret
sub
dec
mov
jg
nop
sub
xlat
adc
push
push
sbb
fisubs
mov
push
cmp
lret
xlat
jle
cmp
mov
fistpl
subb
mov
jmp
mov
loopne
jns
cltd
pop
add
cmc
iret
dec
lods
and
lret
sub
mov
inc
pop
sbb
add
jl
jmp
testb
subb
sub
out
icebp
mov
pop
stc
movsl
clc
test
and
dec
push
cmp
daa
adc
out
out
jmp
and
push
fstp
ljmp
insb
mov
js
sub
loope,pn
nop
ljmp
cmpb
cmp
clc
scas
inc
mov
bnd
cwtl
mov
mov
pusha
push
adc
fists
pop
out
lahf
leave
into
subl
jns
mov
leave
into
test
fistps
and
int
into
xchg
andb
push
cmp
pop
es
sbb
gs
or
sti
rorl
lret
xchg
pushf
cmc
pop
jb
insb
jns
arpl
jno
push
in
adc
inc
mov
push
imul
loop
jno
das
or
das
xchg
out
fmull
into
mov
sti
repz
jbe
cld
lcall
outsb
inc
adc
shl
mov
in
es
inc
outsl
pop
adc
sbb
jo
dec
sub
mov
jp
xorb
into
pop
or
testl
clc
pop
mov
sub
push
jae
jnp
and
movsl
shr
cld
mov
lods
sbb
pushf
xor
loopne
insl
jl
insb
sub
mov
dec
mov
cmp
rorb
jno
adc
scas
or
pop
leave
test
divl
imul
push
mov
fwait
xor
jmp
sub
dec
pushf
pop
jo
pusha
push
add
inc
cwtl
jns
dec
sub
add
cmpsl
xchg
outsl
jae
lahf
aaa
lret
sub
pop
adc
inc
into
cmpsl
dec
cmpsb
mov
sub
xor
fcoml
cli
and
pop
gs
or
mov
jno
dec
fucomp
shufps
divl
leave
leave
fs
js
int
xor
ds
add
test
stc
out
xor
or
aad
cmp
in
aaa
gs
pop
jbe
or
mov
ja
pop
movsl
repnz
ja
xor
xchg
rep
pop
lock
adc
outsb
hlt
or
cld
pop
rep
pusha
add
jg
lret
mov
mov
jl
rcrb
fldl
lock
lds
in
jns
lods
cmpsb
mov
fstpt
mov
lahf
xor
cmc
dec
dec
pusha
fstps
mov
pop
and
stc
add
jmp
cmp
dec
mov
rorb
mov
nop
fimuls
jle
movsl
test
mov
int
pop
add
mov
mov
psrad
cmp
push
or
outsb
hlt
repz
lret
aam
out
sub
shll
and
cmp
add
sbb
pop
shl
mov
shlb
aad
ret
or
sarl
xchg
pushw
mov
sbb
and
fisubl
sub
popa
adc
xchg
popf
cmp
adc
lret
or
sub
lea
je
and
push
dec
jno
mov
lods
xchg
fidivs
dec
xchg
fsubrs
pop
outsl
mov
stos
and
cmp
test
cmp
mov
push
ja
or
in
into
adc
ficoml
scas
jnp
lods
mov
jmp
or
sbb
jg
ja
jne
add
mov
aad
inc
inc
cmpsb
mov
sti
gs
es
xlat
lock
arpl
add
jo
ljmp
cmpsl
xor
mov
outsb
lea
insl
outsl
mov
incb
sbb
add
add
mov
out
cltd
pop
inc
mov
xchg
xor
jle
in
push
sti
xor
mov
mov
iret
addl
xorl
jle
mov
pop
pop
int
lahf
fwait
mov
in
cmp
pop
cmp
inc
adc
sub
fstp
jo
call
int
mov
out
fstpl
loope
movsb
push
sbb
dec
inc
or
mov
cmpb
jae
jge
aas
push
mov
inc
xor
and
or
incb
push
ficompl
adc
hlt
cmp
mov
add
mov
push
mov
mov
in
pop
jl
clc
mov
fadd
jb
mov
fistpll
into
jl
add
jne
addr16
jo
imul
jmp
rorb
pop
jl
adc
movsb
mov
js
mov
gs
and
cmc
fs
inc
sahf
int
out
aaa
push
dec
cwtl
clc
icebp
out
pop
mov
and
mov
arpl
sub
pop
mov
call
fldt
mov
sub
addr16
and
inc
jg
and
fwait
cmp
add
int3
sbb
cmp
add
sbb
ret
pushf
inc
aaa
push
addr16
push
sbb
dec
jg
shlb
repz
adc
pop
and
xchg
les
jb
add
data16
dec
icebp
test
sbb
jns
add
push
jp
mov
jge
add
scas
pop
and
insb
mov
movsb
mov
cwtl
out
jno
in
ret
ret
or
push
inc
inc
ss
sub
jnp
in
in
je
gs
in
add
cmp
loope
repnz
push
push
cmpsl
lea
or
inc
or
jl
ret
add
test
nop
jl
stos
ljmp
mov
xor
inc
dec
cmp
sbb
insb
jb
mov
fxch
rol
dec
nop
pusha
out
pop
cmp
imul
movsb
mov
lock
shrb
cli
cmp
mov
aad
adc
mov
fwait
scas
rcl
pop
movsb
dec
push
push
fisttps
mov
fisubrl
push
dec
adc
push
jp
sbb
xor
inc
sub
mov
dec
sti
jns
pop
bound
jle
aam
dec
les
cmpsb
mov
fstps
subl
aaa
out
xor
mov
call
xor
add
scas
xlat
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
jmp
sub
inc
dec
idivl
subb
rclb
jle
jg
push
sub
mov
int
dec
add
test
fdivs
ret
mov
fidivl
xor
xlat
lahf
mov
xchg
push
push
push
pop
and
in
jecxz
ja
fistpll
jle
mov
xchg
movsl
xor
addr16
inc
jbe
pop
push
sahf
add
xor
push
inc
cmp
sbb
lock
push
fisttps
jg
cmpsb
ljmp
lea
sub
sub
iret
cmp
ss
divl
ljmp
mov
pop
sub
aas
aad
scas
sub
pop
pop
data16
loop
out
push
lcall
mov
fists
ljmp
mov
jp
rcr
jmp
jle
out
push
xor
out
ds
nop
popa
xchg
jbe
mov
fdivrs
daa
jns
push
mov
adc
sbb
cld
dec
ficoml
jb
outsl
loope
push
inc
inc
adcl
mov
sbb
push
cs
insb
repz
sub
adc
cmp
cmpsb
mov
jp
les
and
jecxz
stc
movsl
add
or
mov
xlat
mov
push
arpl
out
mov
movsb
rcr
sub
mull
fwait
lods
pop
in
jl
inc
pusha
jno
sbb
fwait
cmp
dec
jmp
ret
test
rorl
ja
mov
mov
pop
enter
jmp
xchg
aas
jne
inc
lcall
xor
jb
mov
mov
pop
sub
in
enter
pop
sub
inc
pop
movsl
mov
mov
pop
dec
test
leave
adc
lods
xchg
mov
int
jge
mov
movsl
fstl
push
jbe
sahf
lock
es
faddl
loop
nop
jnp
jecxz
dec
outsl
mov
stos
mov
sub
dec
add
jbe
ds
inc
popa
cmp
sbbl
ret
inc
inc
mov
mov
and
mov
adc
orl
ja
shl
lea
lcall
out
lods
movl
add
pusha
arpl
jo
push
shl
inc
pop
pop
cmc
inc
das
fcoms
lods
scas
pusha
mov
aam
mov
jae
mov
jg
out
pusha
jmp
std
mov
stos
inc
addb
mov
cld
ss
cmp
daa
add
outsb
loop
push
loope
or
inc
push
and
negl
popf
fistpll
ljmp
mov
dec
adc
pop
push
out
call
pop
cmpsl
cmc
jno
aam
cmpsb
lea
cmc
cltd
das
popa
and
rclb
test
scas
or
mov
inc
xor
dec
int3
mov
pop
test
mov
sbb
movsl
cld
or
fcmovu
dec
scas
pop
in
sbb
cwtl
cmp
add
lods
gs
mov
xchg
inc
cmp
out
mov
push
nop
add
mov
fs
sti
pop
clc
aad
fistpll
aas
sub
sbb
dec
or
mov
outsl
inc
popf
dec
or
cmp
cmpsb
pop
sarb
rol
push
cmc
gs
mov
cmc
orb
lds
sahf
push
jg
jnp
jb
pop
dec
push
hlt
mov
xlat
cmc
inc
clc
repz
jecxz
sub
push
lods
mov
dec
and
mov
jecxz
xor
dec
adc
sub
sub
sub
pop
sbb
fsubrs
mov
xchg
mov
xor
adc
mov
xor
out
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
jmp
and
mov
mov
jne
pavgw
mov
jo
jle
fildl
out
lea
mov
insb
das
inc
test
test
or
aad
ja
repz
sub
out
lcall
imul
dec
dec
sub
les
std
dec
arpl
adcb
cmpsb
cmpsb
in
ret
shl
jge
push
xor
std
push
jmp
cmp
and
test
dec
nop
in
pop
fsubs
jle
fwait
mov
fists
mulb
fidivrs
fistpl
sub
push
dec
ret
in
in
repz
xchg
jmp
out
push
xor
aaa
shrl
in
jns
or
jo
sub
rorl
sbb
popa
rcrl
adc
xlat
mov
clc
sbb
mov
aaa
scas
dec
push
cmp
add
out
imulb
clc
les
in
pop
js
in
mov
or
insl
sbb
mov
cmp
mov
out
idivb
push
fscale
mov
pop
cwtl
inc
cmp
js
fucom
nop
mov
ret
fdivrp
jno
dec
inc
test
test
dec
pop
and
das
mov
xchg
in
pop
aad
ficoms
pop
mov
mov
add
jle
pop
imul
or
xor
scas
in
adc
movb
or
jmp
xchg
dec
jne
and
popf
jecxz
jmp
out
sarl
cmpsl
int
outsl
mov
sarl
xchg
insb
pop
add
inc
cltd
repnz
push
aad
add
fldt
add
int
dec
jae
loop
mov
stos
movsl
inc
push
push
mov
xlat
imul
into
or
xor
or
clc
js
out
in
lea
add
mov
mov
mov
jecxz
fistpll
inc
test
or
mov
ja
ret
inc
mov
test
outsl
cltd
scas
sub
pop
sub
shll
cmpsb
xchg
sub
jl
xor
scas
int
jp
imul
jg
lcall
pop
cld
nop
pop
mov
xor
cld
sbb
sbb
pop
adc
pop
xchg
cld
leave
add
gs
xor
out
clc
pop
push
sub
push
push
lret
cmp
mov
nop
xor
pop
and
pop
dec
imul
xchg
or
insl
adc
pop
sbb
cmpl
sub
mov
mov
notl
xchg
mov
lock
fcoml
mov
sbb
sbb
xchg
lods
test
sbb
inc
cltd
mov
push
call
jbe
cmpsl
mov
incb
cmp
push
sbb
xor
cmp
sti
aad
icebp
mov
out
mov
div
movsl
push
push
inc
js
xchg
int3
pop
xchg
mov
inc
addr16
sbb
test
sti
sub
push
pop
insl
stos
mov
mov
or
mov
fbstp
clc
out
outsl
add
data16
out
outsl
aad
je
repnz
or
sarb
adc
aaa
and
aad
jl
mov
jb
mov
xor
roll
xchg
pusha
xor
mov
pushf
cmc
mov
mov
ret
xchg
adc
movsb
inc
jne
add
sbb
xor
pop
cmp
pop
and
mov
lret
in
mov
popf
jl
lods
pop
aam
mov
lret
cmpb
push
pop
sbb
daa
insb
imul
mov
mov
test
sti
adc
xchg
dec
xor
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
jmp
push
and
jl
jge
movsl
sbb
ficoms
cmp
jle
jns
jle
out
mov
xchg
mov
inc
pop
xchg
lcall
mov
int3
daa
jnp
cld
subb
loop
add
dec
aaa
aam
fcoml
outsb
pop
loop
loop
xchg
jb
cltd
sbb
bound
icebp
mov
sub
mov
push
out
push
pop
mov
mov
xor
mov
jl
nop
sub
xchg
mov
enter
inc
in
or
repz
in
pop
lods
xchg
out
aaa
mov
ljmp
call
push
xor
pop
and
fwait
in
mov
pop
cli
out
lret
mov
dec
pop
iret
adc
jmp
mov
jae
xor
inc
and
lea
scas
and
jae
cmp
out
cmp
pusha
cmp
xor
loopne
pop
mov
roll
sub
lock
ljmp
arpl
add
mov
mov
enter
mov
inc
adc
push
out
roll
cs
cmpsl
inc
sar
popf
iret
fwait
out
dec
mov
or
push
clc
jno
and
mov
insl
imul
loopne
out
fwait
pop
pop
cmp
iret
pop
mov
mov
in
xor
add
jmp
xor
push
or
or
orb
xchg
pop
sub
mov
sub
sbbb
mov
jne
add
mov
dec
lcall
xchg
ficomps
mov
sub
movsl
mov
add
std
js
mov
jg
cmp
xchg
pop
jle
cld
inc
sub
scas
jo
mov
adc
ljmp
cmp
test
lea
adcb
push
mov
push
and
fistpll
test
into
fwait
adc
and
dec
adc
xor
cltd
rorb
addr16
fsub
sbb
into
in
clc
mov
or
mov
inc
jo
push
enter
ret
adc
inc
stc
cld
outsb
pop
push
and
sysenter
mov
out
lods
cmp
and
out
sub
test
cmp
mov
fldl
popa
stc
insl
enter
test
inc
clc
outsb
cmp
mov
xor
adc
popa
lret
inc
jo
cmpsl
jmp
mov
pop
in
xchg
mov
mov
movsl
push
nop
pop
icebp
repnz
cwtl
mov
mov
cmp
mov
add
inc
stos
xchg
xchg
ret
mov
dec
sub
pop
and
xor
cld
ja
mov
adc
mov
fs
ret
shlb
jno
mov
adc
jg
pop
cli
push
cmpsl
stos
push
cmp
push
mov
sbb
cmp
mov
inc
decb
mov
jb
insl
push
out
inc
jle
int
cmp
jne
inc
gs
test
lret
fsubs
pop
imul
jl
cmp
add
in
or
mov
jb
lret
jb
pusha
fdivp
cmc
loope
xchg
mov
mov
gs
and
or
xchg
sub
call
dec
dec
mov
call
mov
mov
mov
ds
shll
xchg
iret
fidivrs
mov
out
push
data16
sub
inc
leave
mov
add
sub
pop
cmc
xchg
push
fwait
sub
cli
adc
xchg
rcr
and
jecxz
pop
in
jno
mov
lock
ret
sbb
sub
mov
pop
pop
inc
dec
es
shrb
pop
xor
sahf
or
rolb
rorl
scas
xlat
mov
xor
sub
mov
mov
xor
add
imul
mov
jmp
pop
in
add
insb
xor
fcmovb
imul
jle
jns
jle
gs
push
aad
ret
fadd
pop
pop
lds
push
sbb
in
out
imul
sbb
xchg
cmp
xchg
in
int3
sahf
mov
dec
stos
or
cmp
or
outsl
cmp
cli
pop
cmp
lret
insl
jp
mov
inc
mov
in
sbb
int3
dec
push
imul
pop
jp
std
push
aad
test
or
cmp
pop
lret
push
iret
mov
or
lea
add
or
addr16
fidivl
pop
int
inc
lods
jmp
iret
mov
unpcklps
outsl
jo
js
les
pop
movsl
or
repnz
popa
jae
sbb
inc
or
bound
xor
sub
cmp
xor
ljmp
cli
adc
xor
testb
insb
push
leave
push
fisttpll
cld
mov
xchg
sub
pushf
enter
push
or
jae
adc
sbb
in
mov
sti
movsl
repnz
mov
sarb
fimuls
pop
mov
je
pusha
daa
inc
jnp
rcrl
in
inc
or
adc
mov
inc
arpl
mov
daa
call
add
test
inc
xchg
pop
dec
inc
scas
inc
ds
xchg
inc
inc
sub
hlt
jecxz
adc
inc
addr16
and
in
mov
adc
iret
aad
and
ds
scas
jnp
jp
dec
mov
dec
pushf
pop
cmp
mov
xchg
jmp
sub
or
xor
fcoml
mov
mov
fmull
xchg
or
mov
data16
add
js
xchg
stos
pop
xchg
dec
mov
jle
enter
nop
inc
fdivrl
push
dec
outsl
xor
mov
repnz
test
dec
pop
xor
xor
dec
fs
pop
loopne
out
gs
dec
in
outsl
sub
lret
mov
push
jmp
gs
ljmp
scas
shlb
enter
add
adc
jmp
mov
xchg
dec
aas
pop
aam
mov
mov
ss
jl
bound
fwait
sbb
mov
cmp
mov
pop
xchg
lret
inc
jbe
leave
jb
stos
and
jmp
sahf
sub
mov
and
ror
mov
dec
mov
repz
sahf
loop
cs
subb
sar
std
pop
fmulp
fwait
add
push
dec
xchg
out
hlt
sub
das
int3
repnz
pop
pop
loop
popf
aaa
add
fsubrl
imul
test
sbb
int3
mov
scas
loop
jecxz
or
adc
cmp
add
adc
mov
call
jl
or
add
sbb
int3
mov
decl
orl
sub
shr
loope
ret
xchg
mov
or
insl
ja
test
sti
outsb
decl
loope
pushf
mov
sub
mov
sbb
stos
mov
repnz
fiaddl
inc
or
lock
jl
lret
sbb
xchg
jmp
sbb
test
push
cmp
test
sub
loope
mull
clc
mov
icebp
lods
and
filds
add
push
paddd
xchg
fwait
jne
mov
aam
push
dec
pop
scas
inc
pop
in
jmp
cmpsb
mov
cmp
xor
xor
rclb
cltd
adc
and
outsb
mov
jb
loopne
imul
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
jmp
pusha
jecxz
jge
icebp
insb
fwait
mov
icebp
cmp
jle
dec
xchg
cmp
jle
sbb
pusha
or
roll
mov
fwait
mov
dec
jle
adc
cwtl
fcmovb
adcl
out
pop
in
sar
dec
push
pop
dec
testb
mov
lock
pop
pop
adcb
adc
sbb
les
mov
adc
or
das
sub
shr
out
sub
daa
addb
int3
xchg
mov
push
push
and
sub
icebp
ret
adc
rolb
hlt
mov
mov
jp
ficoml
push
aaa
insb
xchg
fildl
inc
loope
sub
mov
stc
fs
sti
adc
mov
inc
jno
in
adc
insb
pop
in
jne
fstps
pop
test
xchg
test
or
sbb
xor
sbb
pusha
cs
pop
mov
or
inc
out
insb
inc
cmc
jl
outsl
jge
loope
cmc
adc
scas
pop
jnp
les
daa
pusha
sti
loopne
add
lret
jp
std
push
mov
das
jp
movsl
arpl
inc
clc
mov
inc
push
fs
mov
lea
popf
cmp
stos
rcl
push
pop
les
mov
dec
leave
arpl
sub
in
dec
subb
and
js
jbe
std
mov
cld
and
cmpsb
add
aad
test
jno
jmp
imul
cmp
mov
jecxz
imul
or
dec
dec
pop
xor
mov
scas
jnp
gs
or
inc
pop
xchg
jae
fistpl
in
mov
daa
rolb
xchg
in
lds
ror
push
stos
xchg
pop
mov
adc
mov
add
sbbl
mov
push
ja
and
lea
mov
push
fists
icebp
rcrl
sub
test
xor
testb
pop
mov
outsb
sbb
cmp
daa
insb
sub
jnp
out
stos
push
xor
add
jne
test
push
mov
xchg
push
sub
add
mov
stc
adc
jl
and
scas
push
or
and
xor
xchg
mov
jno
les
or
ds
adc
adc
pop
fstps
fcompl
sahf
jne
jne
leave
stc
sub
ret
pop
cwtl
pop
fldt
mov
lret
fidivl
cmpb
int
std
jno
pop
pushf
cmp
mov
fs
add
push
insl
pop
and
imulb
sub
movsl
inc
sbbb
int
sub
push
addb
out
sbb
mov
dec
mov
pusha
adc
aad
sub
pop
mov
push
movsl
mov
insl
inc
inc
inc
xchg
mov
sti
xor
sbb
cmp
fcompp
cmp
cmpsb
or
jne
push
jns
mov
sub
stc
adc
add
scas
aaa
sub
in
ljmp
mov
jne
and
dec
and
pop
push
cmpsb
xchg
pusha
sbb
test
loop
push
repnz
add
jl
fistpll
cmp
add
fsubrs
lcall
jno
sub
int3
sub
lods
fistpl
xor
pop
add
mov
ja
sti
mov
ljmp
roll
push
push
into
loopne
das
rcll
adcl
xchg
aad
les
xor
test
sbb
ds
sub
mov
imul
and
add
xlat
mov
lea
jmp
outsb
xlat
shlb
mov
pop
out
pop
std
push
xor
jle
pop
jl
enter
pop
or
push
mov
mov
pop
add
jge
mov
sti
ret
cmpl
rclb
pushf
mov
sarb
shll
pop
mov
mov
sbbb
mov
jnp
pop
test
jp
test
fildl
lock
sbb
push
mov
bound
aaa
pop
cltd
xchg
ficoml
mov
xor
xchg
dec
jle
mov
mov
movsb
rclb
cmpsl
cmpsl
es
pop
pop
fists
mov
pop
js
push
jne
pop
jmp
shlb
pop
into
je
xchg
fiadds
jmp
sbb
lods
mov
ret
sarb
shll
fldenv
aas
or
pop
imul
jb
adc
jmp
inc
daa
scas
xor
lret
mov
push
js
movsb
lahf
mov
inc
leave
test
adc
push
mov
and
pop
fldcw
aad
hlt
or
out
in
movsb
and
inc
fbld
es
inc
adc
adc
adc
xor
cld
lcall
xchg
mov
push
sub
stos
repnz
inc
jbe
repz
or
xor
add
cs
inc
or
or
enter
cmp
push
sti
icebp
test
mov
in
sub
mov
adc
std
xchg
in
xor
test
push
cmp
iret
push
xchg
mov
push
push
ljmp
inc
mov
inc
das
sub
or
mov
dec
das
inc
hlt
mov
inc
adc
mov
shrl
xchg
push
cmp
xchg
pop
sub
addr16
mov
nop
int
push
adc
insb
sub
out
mov
outsb
jo
cmp
scas
cmp
push
insb
xchg
adcb
jmp
iret
mov
sub
jecxz
add
cltd
mov
and
cwtl
out
push
mov
or
test
pushf
stc
push
mov
movb
mov
out
iret
inc
adc
adc
push
mov
pop
dec
mov
sti
mov
insl
lret
lds
rol
rorb
add
cmp
push
mov
sbb
mov
xchg
sbb
adcl
jmp
or
push
outsb
mov
inc
add
sub
bndldx
sub
xor
push
gs
clc
mov
push
or
and
push
sbb
and
pop
pop
movsb
stos
sub
mov
pop
loop
inc
ja
aad
mov
and
out
icebp
jg
sbb
inc
test
les
xchg
cltd
pop
fldt
xchg
bound
imul
push
xor
xchg
mov
nop
pop
xor
enter
test
jmp
enter
lret
sub
mov
xor
push
mulb
mov
jno
add
sti
jp
xor
dec
sbb
imull
pop
jns
inc
lods
jns
iret
push
dec
pop
fcos
mov
add
test
jne
mov
aaa
out
in
mov
and
xchg
les
mov
pop
mov
dec
dec
arpl
lret
cmp
ret
xchg
add
faddl
jmp
lret
mov
ficoml
sub
xor
shlb
push
adc
sbb
xor
pop
outsb
mov
add
xchg
sbb
pop
dec
xchg
sub
int
in
adcl
sbb
iret
dec
scas
lods
mov
pop
xchg
aad
fs
and
mov
mov
xor
mov
jmp
sahf
lcall
adc
and
cmp
inc
xor
jle
jo
jle
cltd
adc
ffree
test
jnp
and
inc
mov
push
lcall
push
lret
jne
xchg
movsl
mov
add
dec
stc
add
in
mov
inc
cmp
cmc
or
fadd
clc
mov
inc
push
push
xchg
push
push
in
mov
comiss
aam
mov
push
aad
push
xchg
push
push
nop
pusha
pusha
push
movsl
lods
pop
dec
xor
clc
daa
cmp
in
fildl
sbb
xchg
aaa
mov
or
dec
xchg
pop
fisttps
and
dec
stc
mov
mov
shl
inc
add
xor
sbbl
ret
sbb
js
xchg
in
fisubrs
dec
sbb
and
mov
and
loop
or
rol
and
mov
dec
pop
xor
dec
xchg
int
pop
into
inc
inc
or
fucomip
movsl
xchg
nop
clc
cwtl
je
daa
leave
jae
les
cmc
iret
das
cmp
aas
xchg
mov
aad
cltd
xchg
and
and
ja
repz
add
fxch
out
loopne
cmp
orb
and
sbb
pop
xchg
push
mov
dec
add
das
stc
lock
roll
cmp
scas
adc
sbb
pop
xlat
jle
and
pop
dec
ja
jl
push
leave
xor
xlat
ret
sbb
lahf
sbb
pop
push
sbb
jo
in
bound
shll
cs
sub
push
testl
lret
add
mov
movsl
xlat
jmp
push
lret
and
pop
pop
outsl
adc
je
adc
call
sbb
sbb
std
push
pop
cmp
out
lods
push
rorl
insb
je
cmp
fstpl
cmp
cs
sub
dec
xchg
jmp
mov
add
inc
out
jecxz
jb
cld
mov
out
push
imul
seto
sbb
lret
and
in
nop
lods
lret
sbb
ret
jbe
xchg
inc
inc
mov
push
sub
loop
loope
mov
cmp
add
pop
daa
or
fwait
push
mov
cli
adc
dec
leave
icebp
push
mull
inc
jecxz
fldl
jb
in
fcom
or
xchg
mov
push
pop
subl
lcall
and
ss
ss
in
test
mov
jle
sti
inc
test
inc
push
imul
scas
dec
cmpl
inc
seta
movsl
arpl
out
xchg
or
iret
pop
jge
nop
repnz
scas
xor
sti
lods
jbe
in
test
and
addl
add
add
repz
call
push
mov
pop
lahf
scas
jnp
mov
cltd
dec
cltd
adc
out
push
dec
add
mov
loop
cli
jnp
fstpt
rcl
dec
cmpsl
mov
insb
sbb
dec
ret
dec
mov
sub
loopne
fidivrs
dec
jle
xor
sub
cwtl
and
xchg
arpl
jge
xor
sub
pop
mov
cmp
int3
jns
cmc
mov
insb
idivl
dec
push
cltd
sub
jno
movsl
push
adc
dec
out
inc
arpl
xchg
jmp
mov
dec
mov
jg
sbb
mov
addb
scas
cmp
inc
enter
lods
addr16
lock
mov
mov
in
sahf
or
or
push
stc
jns
test
cmove
jmp
pop
adc
repz
inc
xchg
scas
cltd
inc
out
and
jg
add
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
jmp
mov
xchg
imul
jg
mov
jo
jle
or
into
cld
xor
jl
out
in
cli
aaa
mov
pop
fwait
or
dec
in
sub
xchg
jbe
add
fdivl
jno
into
lret
lahf
dec
js
push
pushf
sarl
loopne
cmp
pop
in
mov
outsl
and
push
sub
test
fucom
jle
mov
dec
enter
jecxz
stos
and
mov
lret
mov
test
adcl
andb
dec
loop
jno
xchg
adc
pushl
fwait
subb
xchg
xchg
or
mov
pop
cmp
cwtl
popa
iret
sti
addb
popf
sbb
fwait
cmp
add
incb
push
or
daa
xor
adc
inc
pop
call
and
cmp
mov
add
lods
std
push
or
mov
push
gs
lea
and
test
and
insl
inc
fdivr
stos
scas
pop
ljmp
adc
or
push
xchg
xchg
dec
lea
mov
in
dec
das
loope
cmp
jbe
test
jnp
movsb
je
bound
xchg
gs
mov
or
lea
shr
lfs
repz
jl
dec
arpl
inc
movsb
in
pop
add
mov
aaa
cwtl
adc
push
pop
stos
stos
cmpl
dec
insb
sbb
movsb
scas
iret
xor
call
push
testb
into
out
imull
xchg
push
add
in
in
xchg
stos
sbb
mov
adc
mov
cmc
mov
icebp
filds
outsb
mov
adc
mov
pop
in
movsl
daa
icebp
adc
mov
mov
push
mov
aam
cmp
or
sbb
jno
mov
mov
adc
sbb
or
push
or
dec
pop
ja
sti
mov
push
push
pop
pop
in
lea
sbb
divl
pop
leave
ljmp
test
repz
mov
je
cmp
adcb
or
jb
loope
jp
pop
icebp
xor
sub
xchg
xchg
mov
lcall
inc
or
shll
push
mov
pop
aas
push
sub
adc
cmpsl
adc
jae
or
inc
jge
cmp
hlt
dec
and
cli
cwtl
jp
mov
dec
adc
pop
lds
or
jp
daa
in
lds
cmp
mov
ss
aas
xor
push
fdivrp
xor
rcrb
push
sbb
cwtl
dec
fistps
fcomp
push
jmp
adc
mov
pop
cmp
mov
jp
dec
mov
sbb
mov
fidivrs
pusha
cmp
mov
jmp
cmpsl
sbb
cmp
mov
shll
adc
jg
popf
pop
dec
aas
stos
jo
mov
jp
outsl
xchg
int3
pop
hlt
push
pop
mov
test
and
adc
orb
fsubrs
out
or
testl
stos
push
enter
sub
popa
xchg
shll
inc
lret
shrb
pop
mov
adc
in
adc
into
mov
inc
push
out
dec
inc
pop
xor
imul
repnz
jecxz
inc
push
cmp
and
hlt
xor
mov
xlat
and
mov
pushf
xchg
add
shll
aad
mov
in
push
lods
xchg
into
dec
push
pop
rolb
shll
push
mov
popa
jae
xchg
daa
rcrb
add
mov
in
mov
add
in
sub
sbbl
push
sbbl
push
incl
push
andl
push
adcl
call
test
movl
je
adcl
xor
inc
movl
jmp
add
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
sub
movl
sbbl
lea
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
sub
lea
mov
adc
mov
mov
xor
or
sub
or
mov
mov
mov
sub
mov
mov
or
mov
mov
andl
xor
sbb
mov
xor
add
mov
mov
movzwl
cmp
mov
movzbl
mov
je
sub
mov
xor
add
sbbl
imul
movl
mov
movl
jmp
addl
xor
sbbl
add
mov
movzbl
sub
mov
xor
adc
add
not
mov
mov
mov
xor
xorl
add
movl
cmp
jne
sbbl
push
movl
pushl
sbbl
pushl
adcl
call
and
mov
mov
and
mov
sub
mov
neg
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
or
sbb
mov
mov
mov
or
movl
or
mov
movl
xor
mov
and
mov
and
mov
orl
xor
subl
xor
adcl
add
mov
adcl
xor
xor
adcl
add
movl
lea
movl
mov
movl
cmp
movl
ja
jmp
adc
mov
addl
mov
xor
xorl
lea
push
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
adc
mov
mov
xor
movl
lea
subl
push
and
mov
adcl
pushl
call
mov
mov
mov
or
xor
lea
mov
or
mov
subl
xor
xorl
xor
add
mov
andl
xor
movl
lea
movl
mov
movl
cmp
movl
jbe
movl
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
mov
inc
mov
subl
pushl
orl
sub
subl
pushl
adcl
xor
mov
pushl
call
sub
adc
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
repz
jae
hlt
aaa
scas
aad
push
aam
mov
jle
jns
jle
aaa
fcompp
lret
mov
test
into
fs
cwtl
sub
imul
jmp
jo
es
loop
pusha
into
loopne
fadds
repnz
pop
ds
mov
addb
in
hlt
mov
cmp
mov
inc
scas
pusha
movsl
mov
insb
dec
xchg
jae
push
jmp
popa
pop
inc
sahf
in
mov
adc
pop
loop
icebp
rorb
xor
inc
mov
jb
es
aas
rep
imul
shlb
inc
jle
imul
sub
mov
xor
sub
dec
les
pop
xor
mov
stc
push
sbb
in
sbb
in
inc
cmp
push
jnp
mov
add
ss
rorb
outsb
test
in
mov
cmp
xor
xchg
int3
push
adc
mov
imul
and
rclb
mov
and
xchg
mov
test
jp
je
cmpsb
pop
inc
stc
fistpll
out
movsb
push
lods
dec
push
sti
aam
mov
mov
xor
or
insl
jle
leave
ret
mov
mov
fadds
in
mov
cmpsl
mov
cs
sbb
enter
cmp
dec
or
enter
jmp
mov
fisubl
test
inc
mov
or
add
push
loop
dec
test
xor
movsb
adc
or
movsb
sub
or
cmc
adcb
dec
xchg
pop
rcrl
sbb
lods
xor
adc
repnz
loope
arpl
icebp
adc
lods
pop
and
test
lods
push
jl
repz
imul
fidivs
jne
lds
shll
test
jo
repnz
lock
fdivs
xchg
pop
je
push
xchg
jl
add
or
mov
mov
jb
jae
fwait
sbb
mov
int
jo
jp
pushf
sub
inc
pusha
inc
cmp
xchg
bnd
es
cmp
and
sub
pusha
std
ret
bound
sbb
push
ficoml
into
cmc
or
rcrb
or
jne
sbb
fistps
pop
cmp
mov
cli
push
js
inc
icebp
jecxz
sub
mov
xchg
out
mov
sub
sti
lret
inc
lahf
xchg
or
stos
ret
sub
data16
jno
xchg
xor
jge
cmp
mov
mov
pusha
lahf
jecxz
cmp
gs
data16
adc
xlat
dec
or
test
in
pop
mov
popf
jne
adc
movsb
sub
add
repnz
sub
out
ljmp
add
mov
jne
aam
lret
push
test
iret
sub
insb
mov
mov
jno
pop
std
push
add
insb
inc
movsl
mov
cmpsl
imul
push
mov
jmp
adc
cmpsb
leave
sahf
sbb
jmp
movsb
adc
in
icebp
push
shll
mov
push
int
lds
out
sti
jo
xchg
inc
jne
mov
fsubrl
enter
mov
adc
test
push
xchg
dec
add
mov
stos
into
dec
sbb
push
je
int
js
mov
dec
push
xor
push
mov
movl
movl
push
mov
mov
mov
movl
push
movl
mov
movl
mov
movl
cmp
je
or
jmp
cmc
pop
inc
gs
jge
pop
push
add
inc
inc
out
sahf
mov
jle
jns
jle
loopne
inc
cltd
emms
faddl
xchg
push
sub
fcmovbe
cmp
adc
fldenv
mov
stos
push
cwtl
add
or
jg
lret
sub
xlat
jmp
add
adc
cwtl
idivl
rcll
loop
and
into
sbb
cltd
cmpsb
mov
or
std
shlb
in
push
sub
xchg
fcom
in
mov
aaa
fwait
inc
test
cli
lret
loop,pt
dec
jmp
shlb
pop
pop
dec
leave
ljmp
sub
cmpsb
cli
daa
mov
push
adc
test
rorb
jp
pop
test
and
nop
mov
or
xor
cld
ja
imul
iret
sub
push
and
mov
push
popa
or
loope
arpl
lret
clc
in
and
jmp
fidivrl
mov
es
sub
aaa
and
das
lods
sub
mov
inc
enter
test
test
test
cmpsl
popf
mov
mov
ljmp
jecxz
fdivrl
mov
int
mov
pop
mov
imul
int
loope
cmp
xor
stos
nop
xlat
scas
out
or
or
and
in
push
aas
xchg
fiaddl
jbe
adc
rol
mov
aas
in
call
stos
loopne
in
mov
out
fdivr
repz
cmp
xor
leave
mov
inc
jae
xlat
fcmovu
xchg
lcall
mov
iret
xor
jle
ret
pminub
sub
test
pop
adc
mov
mov
adc
xlat
jp
adc
mov
cmp
xor
gs
push
adc
in
adc
stos
mov
jb
fcomps
mov
pop
movsl
add
cli
repnz
mov
dec
pop
js
shrb
pushf
push
xor
ret
ja
dec
xchg
xor
lock
push
mov
aam
and
xchg
out
scas
leave
popf
loop
jmp
adc
loop
aad
popa
xor
dec
incb
pushf
ret
incl
cmpsl
mov
xlat
mov
xchg
jae,pn
out
roll
or
flds
sub
pop
jb
into
notl
adcl
lret
divl
jne
pop
repnz
dec
test
add
or
call
int
push
push
into
cmp
cmp
or
rcrb
lea
jb
imul
mov
push
dec
adc
pop
and
cmpsl
shl
jl
bound
xchg
insl
xchg
mov
fdivs
insb
mov
leave
popa
xchg
sub
scas
out
or
jo
push
pop
push
mov
xor
arpl
dec
popa
fldl
pop
mov
sysenter
cmpsb
sub
aam
dec
mov
mov
in
cwtl
sar
in
xor
fstpl
dec
fcmovb
fyl2xp1
mov
dec
inc
push
xchg
nop
inc
lock
mov
mov
lret
hlt
pop
shlb
sub
or
fldl
jns
mov
out
sub
ljmp
rol
lret
addl
add
mov
mov
xorl
xor
add
movl
cmp
movl
je
and
mov
mov
xor
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
add
push
pushl
pushl
mov
jmp
pop
pop
cld
sub
mov
push
in
mov
fmul
adc
jle
hlt
jns
jle
stos
pop
add
lds
cwtl
mov
fistl
in
popf
or
ret
cmp
jmp
outsb
mov
out
jb
out
lea
testb
adc
or
xchg
cmpsb
or
jno
pushf
xchg
sarl
push
xchg
call
scas
push
adc
icebp
push
movsl
js
roll
pop
mulb
and
push
insl
mul
add
sub
ss
sub
pop
faddl
stc
ja
call
out
call
lea
cmp
scas
xchg
mov
pushf
in
mov
push
add
out
add
fldl
sub
aad
loop
or
sbb
jnp
lret
sub
cmpsl
jne
ror
test
daa
out
mov
mov
xor
shrl
or
mov
js
sbb
jl
in
lds
push
mov
cmc
push
cmp
mov
sti
adc
inc
les
int3
aas
movb
jge
addr16
sub
fmulp
lret
fisttpll
pop
popa
outsl
and
push
push
and
push
inc
xchg
aam
inc
mov
push
lock
or
das
arpl
xor
or
push
loope
push
cmp
leave
dec
iret
mov
sti
xor
adc
daa
adc
in
pop
xor
pop
sbb
cli
outsb
dec
or
lock
jle
xchg
cmpsl
ret
add
ss
cmp
adc
add
push
jl
in
add
insb
push
pop
cwtl
mov
test
dec
pop
add
jns
rclb
and
fdivl
lods
in
mov
fidivrs
or
cmp
adc
mov
xlat
mov
icebp
orb
scas
push
mov
sbb
mov
mov
fadd
push
jb
ret
sbb
mov
rcr
push
and
mov
push
fisubrl
insb
add
mov
pop
push
loop
out
fdivrl
fidivrs
lock
daa
xchg
andl
loope
gs
neg
shr
sub
inc
out
jnp
out
push
inc
addr16
jns
insb
xchg
push
repz
xchg
mov
mov
xchg
pop
sahf
js
pop
mov
xchg
adcb
call
inc
cld
cli
xor
fnstenv
movsl
into
jmp
and
jb
js
mov
xchg
fcoml
out
push
adc
mov
push
gs
and
movsl
inc
iret
jns
adc
mov
sub
ds
adc
cltd
jge
mov
mov
das
mov
and
inc
cmpsl
jae
mov
inc
gs
test
mov
cs
adc
aas
mov
stos
mov
pop
pop
sub
dec
iret
cmp
frstor
push
pop
jmp
das
or
aas
loope
mov
popa
cs
shlb
shr
cmc
xchg
or
or
xchg
icebp
sbb
pop
or
or
push
repnz
pop
xor
ss
hlt
fucomip
repz
mov
outsb
imul
loopne
setne
cmp
lahf
dec
push
js
sub
add
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
jmp
in
ss
xor
icebp
add
xor
pop
loopne
mov
jle
and
cmp
mov
inc
mov
cmp
mov
adc
jns
rcrl
cmp
jecxz
test
data16
jno
out
xor
push
mov
push
xorb
fldenv
inc
and
mov
add
loop
ss
jmp
xchg
lods
repz
xchg
adc
jg
pop
inc
xchg
bound
lcall
or
mov
and
scas
sbb
insb
pop
mov
jo
inc
mov
js
jb
xchg
fildll
inc
imul
mov
mov
cwtl
jp
shll
insl
pop
aad
test
inc
pop
mov
jns
leave
add
cltd
test
mov
mov
jl
ret
xorb
daa
ret
xor
imulb
inc
imul
fwait
mov
es
pop
gs
dec
ror
fwait
sbb
dec
std
std
pop
out
mov
xchg
add
xor
popa
mov
add
xlat
repz
cmp
push
test
inc
sub
sbb
xor
sbb
pop
aad
lret
push
pop
add
mov
dec
scas
add
pop
push
mov
adc
xor
popf
mov
push
xlat
ret
sub
aad
notl
xor
adc
lds
cmp
xchg
xor
in
push
icebp
mov
mov
mov
jb
movsb
or
imul
pandn
mov
mov
mov
pushf
cmpsb
mov
sarl
push
dec
sub
insl
aam
and
sbb
outsb
fistps
jg
sbb
movsl
stos
mov
out
push
xchg
inc
icebp
pusha
sbb
leave
sahf
sti
adc
mov
daa
pop
iret
insb
cmpsb
mov
push
sbb
sub
test
mov
or
lods
je
shr
pop
insl
lods
pushf
ja
into
fwait
pop
shl
jg
loopne
pop
std
test
mov
ja
pop
jle
les
std
stc
inc
dec
insl
sar
dec
cmp
call
cmpsl
adc
add
lret
inc
mov
xchg
xchg
call
push
mov
es
xchg
inc
xchg
mov
test
imul
mov
jecxz
sbb
ds
fwait
test
sbb
push
test
jae
pushf
cmp
lret
pushf
pop
dec
ds
fadd
andb
out
sbbl
movsb
movsl
pop
and
in
xchg
push
sbb
or
xor
out
jmp
pusha
add
out
and
or
ret
jae
orb
daa
mov
mov
dec
ret
dec
xor
mov
cmp
cmp
leave
out
jno
insb
lods
inc
sub
mov
mov
lret
and
or
xor
mov
fcomps
sahf
push
cmp
adc
push
push
stos
lods
xlat
jg
cli
cmpsl
ljmp
ret
stos
push
dec
xchg
xorb
jecxz
dec
cmp
lret
mov
sub
rorb
xor
popf
dec
inc
les
push
mov
sub
cld
aaa
je
lods
xchg
add
push
cltd
jae
inc
loopne
test
movsl
mov
orb
pop
jmp
push
clc
clc
mov
test
adc
jno
mov
inc
jle
hlt
jns
jle
stc
pop
sbb
adc
paddw
jnp
add
icebp
rorl
xchg
andl
rcrb
outsb
lock
movsb
cmp
aam
lea
cmc
cmp
mov
out
repz
mov
bound
inc
mov
testl
inc
mov
lcall
fidivl
xchg
loope
mov
or
sbb
or
xchg
lahf
jle
push
or
scas
bound
xor
shrl
xchg
cld
cmc
mov
outsl
cmpb
cwtl
arpl
dec
stos
jo
gs
pop
into
lcall
jne
fisubrl
mov
xor
lods
mov
movsbl
and
xchg
sahf
scas
fstps
mov
dec
jmp
pop
fisubl
les
mov
fsts
mov
out
lds
call
and
pop
out
clc
push
aaa
iret
xchg
divb
and
cli
or
not
jge
sbb
outsb
roll
xchg
insb
mov
repnz
and
cwtl
lods
repnz
outsb
aam
xchg
sarl
xchg
imul
cld
movb
push
jno
and
xchg
iret
aad
dec
cs
scas
xchg
das
scas
xchg
sti
out
and
xor
mov
pop
jp
jecxz
inc
insb
xchg
push
sahf
rclb
ret
cmp
in
cmp
inc
cmp
ja
lds
inc
loopne
imul
dec
cmp
pop
pop
pop
mov
add
lea
and
mov
sti
inc
push
and
sbb
xor
mov
lret
mov
xlat
inc
pop
and
rolb
pop
gs
pop
add
dec
cld
dec
repz
cmpsl
adc
shl
and
inc
stc
aas
shrl
add
mov
adc
cmpl
and
out
in
out
jmp
mov
les
mov
xor
cmc
sbb
lds
xor
mov
fst
xchg
mov
lret
adc
or
bound
arpl
lods
inc
xchg
sahf
inc
jp
test
jle
mul
add
add
xchg
push
or
addr16
lahf
fsubp
xchg
jge
push
xor
aad
xor
xor
add
dec
inc
es
dec
in
and
repz
fcomps
jmp
insl
or
add
push
and
sub
scas
bswap
jb
aas
mov
push
sub
adc
cwtl
dec
rcrb
insb
insl
adc
xchg
xchg
rcrb
call
adc
mov
mov
jno
out
jno
imul
pop
push
aam
push
ficompl
mov
lahf
xlat
pop
shrb
outsl
icebp
xorl
int
inc
jp
cmp
cli
mov
push
and
push
lret
scas
mov
mov
push
fmuls
ret
call
mov
imul
mov
jne
xor
push
popl
movsb
jp
scas
insb
push
cli
shrl
mov
shlb
xchg
and
cli
cmp
jnp
mov
icebp
out
and
mull
mov
add
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
mov
andl
mov
add
xor
cmp
movl
jne
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
jmp
mov
jae
mov
sub
cmp
movsl
into
testb
pushf
jg
jle
lds
in
int3
scas
stos
pop
dec
lods
mov
decl
das
in
fpatan
xchg
cli
pusha
sbb
icebp
sbb
mov
aad
dec
bound
inc
mov
push
mov
xorl
aas
inc
dec
std
push
cli
rcll
arpl
mov
mov
fs
push
mov
adcl
fsub
nop
shll
icebp
mov
push
xor
xchg
xor
aad
mov
sbb
mov
imul
mov
cli
stos
sub
mov
jecxz
bound
jno
sub
sbb
sahf
add
push
sbb
inc
lods
mov
mov
xlat
inc
popa
adc
adc
in
jmp
lock
stos
int
mov
push
sbb
pop
and
dec
ret
ret
xchg
js
out
cs
stos
cmp
mov
jnp
push
xchg
push
add
sbb
dec
ja
and
push
push
lret
out
addr16
out
cmp
aam
or
fbld
push
jae
inc
ss
mov
xchg
push
mov
aaa
stos
ret
lods
add
mov
loope
push
mov
and
mov
fsubrl
cmp
imul
ds
dec
or
int
dec
jge
pop
cli
mov
inc
flds
enter
adc
cmpsb
rorb
lret
std
sar
fisttpll
jb
add
mov
add
cmc
mov
enter
cmpsl
mov
cwtl
sahf
fcoms
adc
jle
pushf
jg
jle
mov
xor
std
lds
aaa
outsb
out
ss
bound
jne
movsl
popf
mov
int
int3
shrb
stc
push
pop
fsub
push
pop
jno
adc
sbb
xchg
xor
inc
jge
jbe
adc
add
ljmp
outsb
mov
cli
testl
or
or
ficoms
pop
mov
addl
add
xor
fstps
hlt
hlt
cmp
into
sub
xchg
cmp
fmuls
mov
cs
and
and
push
subl
das
mov
sbb
bound
adc
rorl
xor
lods
push
push
subl
xor
mov
inc
push
jnp
push
popl
es
sub
mov
insb
mov
inc
gs
xchg
dec
push
inc
cmp
rcll
jg
cmp
and
pop
ficompl
aad
addl
stos
fistps
sub
mov
addr16
add
in
ret
push
loopne
mov
dec
dec
jle
roll
sub
mov
pop
add
rclb
pop
mov
scas
and
sub
iret
inc
push
je
sub
xchg
and
nop
cmp
je
into
fisttpl
cmpsb
jecxz
rcl
and
flds
cld
and
jns
fcomp
dec
xlat
push
aad
jns
jns
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
adc
mov
andl
xor
add
movl
jmp
cmp
arpl
mov
arpl
fwait
mov
fisubrs
js
jle
inc
and
mov
mov
or
xor
push
movsb
or
mov
xlat
and
mov
sub
sub
scas
ljmp
or
pushf
sub
pop
and
push
push
outsb
into
push
pop
fcmovbe
lret
adc
mov
test
test
dec
out
lds
test
hlt
subl
loope
in
out
rorl
pop
ljmp
cs
sbb
cmovns
repz
aad
decl
sub
xor
add
xchg
jge
mov
aaa
jle
stc
mov
sbb
xchg
mov
mov
and
outsl
push
or
incb
adc
fcompl
insb
adc
dec
push
jmp
imul
cmp
rcrl
xchg
mov
insb
or
or
add
sbb
outsb
add
pop
es
fsubs
inc
hlt
dec
gs
data16
sub
les
add
and
inc
lahf
pop
mov
rorl
sbb
push
mov
mov
dec
mov
enter
xor
pop
push
je
pop
mov
clc
cmp
mov
les
adc
jns
ss
fiaddl
add
cmc
mov
xorb
fidivs
xchg
sbb
pusha
jno
out
inc
fbstp
adc
loope
rcl
stos
pop
push
cmp
cmp
fs
dec
and
pop
out
add
sti
cmp
test
push
test
push
cwtl
mov
pop
pusha
sbb
cli
or
lds
loopne
sahf
push
insb
sub
sub
popf
imul
aaa
lds
and
or
mov
cmp
mov
add
fisubs
push
push
fwait
dec
push
mov
sbb
dec
outsb
imul
add
xchg
sbbl
jne
add
xchg
lret
lret
add
push
fcmovu
rcrl
into
mov
orb
ret
lahf
bound
xor
jns
mov
out
or
mov
enter
xchg
repz
add
imul
xchg
xchg
xlat
xor
adc
sbb
cmp
cmpsl
add
sbb
mov
fdivl
or
inc
mov
xchg
fbstp
inc
test
out
mov
repnz
ret
fisttps
dec
icebp
mov
mov
movl
movl
mov
mov
push
movl
mov
mov
cmp
movl
je
mov
xor
subl
xor
xorl
lea
xor
cmp
jne
movl
jmp
jmp
inc
lods
xchg
addr16
mov
leave
dec
jle
popf
js
jle
jno
aad
mov
pop
shl
scas
mov
add
mulb
mov
cli
add
jp
adc
test
ret
clc
push
outsl
test
and
inc
testl
outsb
mov
and
arpl
push
jl
cmp
loopew
xchg
test
xor
clc
cmp
sbb
push
sub
ret
cmp
adc
les
mov
jnp
lods
stos
push
hlt
lcall
es
sbb
dec
cmp
mov
insl
push
scas
mov
lea
mov
outsl
imul
or
xchg
stos
aas
inc
xlat
out
inc
out
xlat
pop
cwtl
fisubs
popf
mov
add
in
bound
pop
test
or
ret
ja
outsl
ficompl
inc
ret
mov
leave
mov
push
pop
sub
data16
das
out
fnstsw
sub
xlat
add
inc
mov
xor
xor
fstp
arpl
out
or
dec
imulb
mov
mov
fcmovbe
in
xchg
fdivrl
dec
shlb
imul
jno
aad
out
sahf
jle
xor
fs
mov
fsubs
or
cmpsb
pusha
cmp
or
adc
inc
xchg
jns
lods
nop
notb
lock
das
leave
xchg
fisttpl
call
sahf
clc
jno
push
cmp
sbb
scas
test
push
imul
arpl
mov
shl
and
or
jne
lcall
leave
or
pusha
inc
add
inc
jns
or
mov
jp
xor
xchg
adc
jle
dec
xchg
lods
cltd
xor
fildll
adc
ja
cmpl
pushf
into
inc
xchg
test
mov
xor
xchg
adc
repz
lret
sbb
bound
test
shll
jl
push
sbb
pop
mov
ret
in
fnsave
and
adc
push
pop
cmp
pop
loopne
in
push
cmpsl
adc
fisubs
dec
repz
dec
adc
flds
repz
dec
push
int
or
mov
lcall
sbb
jmp
andl
sbbl
enter
in
imul
mov
add
mov
xor
add
mov
mov
xor
jmp
jo
rsqrtps
pop
jge
pop
mov
imul
dec
jle
popf
js
jle
in
aaa
dec
and
fwait
mov
jle
subb
cwtl
mulb
xchg
mov
aas
in
mov
out
adc
jbe
cmpl
mov
sub
mov
pop
sbb
add
jb
ficomps
cmp
fidivl
lea
cli
hlt
imul
xor
jmp
dec
xchg
pushf
and
sbb
push
mov
and
orl
fimuls
sub
sub
mov
push
or
loopne
cmpsb
ret
inc
adc
mov
dec
jp
mov
cli
pusha
push
add
cmp
cmp
cmp
shlb
adc
ljmp
ja
int
and
mov
pop
inc
lret
sti
or
repz
sbb
push
subb
jecxz
pop
cmp
pop
push
push
dec
pusha
or
divb
lea
or
das
mov
mov
mov
test
sbbl
mov
xchg
sbb
jle
repz
popf
xchg
int
popa
fdivrp
in
mov
ljmp
test
ret
data16
aam
jo
dec
lret
xor
or
dec
sbb
popf
sbb
sub
enter
mov
inc
pop
pop
es
insb
xchg
in
mov
test
mov
aas
mov
shlb
rcll
or
push
cld
push
cmp
aad
sahf
and
mov
cmp
js
xchg
sarl
inc
dec
test
aam
je
push
scas
jl
jmp
fmull
scas
or
in
pop
sbb
mov
inc
call
adc
movsl
cmpsb
in
adc
ret
jne
mov
xchg
arpl
mov
imul
ret
adc
outsb
push
sub
js
mov
xchg
gs
fisubl
mov
std
leavew
lret
sarb
cmpb
test
xor
pop
into
xor
mov
xor
jo
push
xchg
cmp
or
repz
pusha
sbb
inc
movsb
dec
sbb
or
aas
dec
mov
adc
mov
dec
push
xchg
shrb
adc
cmp
cmp
fidivrs
jns
repnz
popf
add
push
lea
pop
test
push
push
xchg
inc
jp
stos
loop
add
ret
xchg
pop
mov
enter
adcb
inc
cmp
inc
or
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
mov
xor
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
adc
mov
xorl
add
orl
mov
sbb
mov
xorl
push
movl
push
sbbl
test
je
mov
sbb
mov
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
add
jmp
roll
std
mov
xchg
inc
jg
bnd
pop
jg
jle
push
xor
repnz
sub
cs
and
frstor
lret
scas
cli
cmp
mov
ss
arpl
stos
je
into
push
jle
insl
mov
pop
cltd
loope
out
cli
mov
and
mov
repnz
in
mov
je
or
clc
add
mov
adc
andb
adc
xchg
xlat
inc
aaa
jbe
inc
push
sti
jecxz
xor
scas
or
je
mov
xlat
aaa
sub
pop
aas
xchg
test
push
jne,pt
rcrl
cmpsl
faddl
out
cmp
inc
xor
jbe
xor
imul
lock
mov
in
ret
mov
xchg
add
jo
mov
cmp
repnz
es
cmpsb
add
mov
sahf
or
nop
mov
pop
sbb
sub
nop
xor
lock
mul
out
inc
or
nop
and
popa
sbb
pop
dec
xor
mov
mov
lahf
sub
repz
dec
daa
stos
aam
xchg
xor
mov
aad
stc
dec
or
shlb
insl
aas
aas
xchg
mov
mov
mov
and
popf
or
mov
jne
fwait
or
xorl
mov
cmpsl
pusha
push
jl
jl
push
mov
adc
cmp
jl
shlb
cmp
or
or
addr16
mov
jno
cmpsl
mov
mov
lret
xchg
and
cmpsl
jge
add
add
dec
jb
in
imul
inc
inc
pop
xor
test
loope,pn
dec
sbb
add
mov
enter
add
or
mov
jmp
lret
outsl
dec
jne
stos
movsb
loope
lods
mov
push
jle
pop
jg
jle
dec
pop
pushf
mov
popf
push
dec
jne
bound
xor
mov
cltd
cmp
insb
sarb
mov
pop
fistpll
popf
push
aas
lcall
orl
negl
push
jge
mov
mov
sbb
or
add
sbb
pop
mov
pop
xor
mov
js
mov
cmpsl
pop
and
icebp
fs
sub
out
rorl
ljmp
shlb
out
add
and
inc
lock
jle
mov
and
jl
into
add
int
push
mov
push
xchg
or
add
sbb
mov
cwtl
gs
lods
push
jecxz
clc
dec
inc
jecxz
pop
fstpt
add
ja
mov
dec
dec
ret
rclb
fists
push
xbegin
jo
dec
add
roll
bswap
cld
test
push
outsb
shrb
int3
or
ja
popa
pop
jmp
adc
lcall
lret
mov
pop
sub
scas
or
xchg
shrl
test
lcall
mov
shll
or
neg
cmp
outsl
ret
outsb
shlb
xchg
lods
insl
mov
mov
pusha
fxch
popf
aaa
sbb
pop
mov
push
in
mov
pop
scas
mov
mov
pop
adc
cmp
in
int3
test
inc
mov
mov
cwtl
mov
pop
stos
lock
in
mov
addr16
dec
dec
mov
pop
stos
xlat
sub
dec
imul
lods
movsl
and
out
dec
fcmovbe
xchg
mov
rolb
lret
dec
in
mov
mov
rorb
js
shll
sub
xor
xor
adc
mov
mov
decl
mov
mov
mov
addl
xor
xor
add
mov
mov
mov
movl
je
adcl
mov
adcl
xor
orl
add
movl
cmp
jne
sbbl
pushl
orl
call
and
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
add
cmp
je
orl
pushl
pushl
subl
call
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
jmp
scas
repz
add
push
out
sub
and
jle
pop
jg
jle
subb
mov
sub
sbb
addr16
fisubs
mov
addl
mov
repnz
pusha
sahf
xor
push
and
mov
or
dec
or
iret
adc
mov
dec
fidivl
notl
in
dec
hlt
lods
jl
les
push
insl
inc
shlb
jg
lock
mov
loope
jo
xchg
mov
mov
test
std
orb
inc
inc
adc
arpl
push
lods
xor
push
pop
add
mov
pop
and
pop
xchg
in
sbb
jle
out
xchg
adc
pop
jmp
xchg
rcrl
mov
daa
pop
push
jge
mov
scas
push
cli
xchg
cwtl
sar
vpsrld
xlat
in
cltd
aaa
aam
push
pop
add
mov
jns
flds
fidivs
or
dec
adc
jb
insl
inc
dec
ret
add
leave
mov
push
push
shlb
cmpsb
lds
insl
jle
sbb
popa
push
sbb
and
jmp
dec
mov
xchg
stc
add
test
cwtl
push
pop
fistps
adc
popf
popf
repnz
scas
nop
add
push
and
mov
mov
inc
cmp
mov
cmp
adc
add
fidivl
mov
jecxz
or
push
push
sub
leave
out
rorl
addr16
aas
pop
adc
enter
pop
pop
add
sbb
jb
ss
stos
sbb
je
mov
mov
xlat
in
mov
inc
adc
sti
pop
fsts
das
test
sbb
sbb
es
in
mov
inc
sahf
dec
sub
push
filds
gs
mov
dec
and
daa
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
jmp
lret
dec
add
je
jge
cli
sahf
inc
pop
xor
jle
jg
jle
int3
cmp
cli
sub
xchg
pop
out
pop
fwait
sbb
das
add
sbb
or
aaa
insl
daa
jmp
sbb
aam
fisttps
mov
ss
mov
aaa
pop
sub
lea
movsl
mov
incb
stc
fs
maxps
clc
add
and
aam
insb
push
add
xor
ror
mov
push
nop
and
mov
cmp
mov
sbbl
xor
ss
adc
sbb
add
mov
xchg
xchg
ja
sub
inc
test
xor
dec
jo
mov
mov
inc
addb
cmc
and
cmp
push
fs
dec
movsl
jnp
out
xchg
les
xor
or
mov
negb
lock
jo
pop
loope
in
pop
cmpsl
loopne
cmp
out
or
mov
cmp
inc
int3
jecxz
push
xchg
leave
std
sub
sub
clc
mov
adc
jmp
cmc
lahf
fldt
daa
cmp
mov
pop
into
ljmp
imul
imul
int
sub
int
mov
sbb
sahf
adc
lods
shll
mov
arpl
in
ljmp
rep
dec
jno
hlt
mov
cmp
cmp
icebp
sti
lret
dec
pop
pop
rolb
movsl
sub
xlat
test
sub
pop
mov
je
loope
cld
shl
cltd
mov
and
mov
inc
adc
mov
xchg
mov
cltd
sub
adc
inc
and
movsl
loop
pop
stos
outsl
inc
jne
movsl
mov
dec
and
rcll
shll
jnp
xor
icebp
mov
mov
jmp
cmp
jne
xchg
mov
push
xchg
sub
pop
jg
jle
testb
dec
mov
push
arpl
mov
xchg
or
mov
adc
call
loope
std
jo
push
es
cs
orl
ss
inc
push
xor
test
add
push
sbb
stos
xor
cmp
adc
in
fldcw
xlat
sub
out
xor
stos
sbb
sar
lods
outsb
push
push
fs
pop
cpuid
and
xor
add
xor
hlt
loopne
scas
ja
inc
and
mov
daa
les
lea
push
shl
jb
jp
jne
adc
push
pop
add
dec
pop
les
xor
push
and
inc
xchg
dec
jae
stos
mov
jns
adc
push
test
fidivs
sub
xor
mov
je
arpl
dec
dec
bound
test
imul
rorl
loope
mov
push
icebp
xchg
jno
sub
sbb
loope
cwtl
sbb
pop
mov
testl
lret
push
in
stc
dec
jnp
xor
add
adc
jg
mov
shlb
pop
loop
test
test
xchg
fcmovnb
sbb
mov
xor
sub
push
test
xchg
and
int
inc
inc
mov
mov
icebp
cmpb
xchg
daa
mov
xor
cwtl
cmc
es
jbe
test
js
lret
mov
icebp
sti
scas
outsl
jbe
mov
in
js
or
mov
fldt
into
cmp
lahf
mull
subl
stos
adc
pop
fistpl
mov
xchg
xchg
jl
mov
sbb
cmp
pop
jo
popf
push
push
pop
jae
movsl
dec
negb
xor
xchg
hlt
sti
sub
ficoml
fildl
outsb
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
jmp
xchg
aam
jne
xchg
in
sub
ret
pop
jle
pop
jg
jle
xchg
ffreep
ret
inc
fisttps
push
dec
lcall
add
xor
dec
in
mov
outsl
sub
pop
push
push
pop
stos
push
mov
xchg
sub
add
jbe
jnp
jp
or
js
mov
dec
jp
jae
xor
mov
xchg
mov
mov
xor
and
xor
fdivs
xor
jle
xor
adc
sbb
push
notb
roll
sub
in
or
sbb
fcmovnbe
sub
xchg
out
push
dec
pusha
mov
sbbb
enter
xor
sub
cld
movsb
push
push
outsl
jecxz
cmp
outsb
stos
jecxz
sub
lds
adc
in
cmp
pusha
adc
or
aam
je
jno
int3
aas
dec
loop
pop
lock
sub
gs
mov
jmp
adc
inc
cmpsl
push
daa
frstor
dec
mov
test
testb
sar
mov
push
push
int3
add
repz
out
inc
test
inc
fcmovne
jo
setno
mov
into
movl
rorl
cmp
adc
push
mov
xchg
inc
add
jg
xchg
inc
xchg
push
std
adc
pop
cmp
fiadds
mov
inc
aas
inc
adc
ficoms
mov
jne
or
push
jp
pushf
inc
sub
jmp
das
sbb
xchg
andl
je
or
cs
add
mov
dec
push
fwait
shlb
sbb
mov
mov
or
enter
repnz
imul
dec
xchg
les
popf
mov
inc
or
in
rorb
lret
add
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
inc
mov
pop
push
outsb
outsl
stos
inc
push
std
cs
pop
jle
pop
jg
jle
adc
and
subl
pop
adc
fisttpll
pop
lcall
mov
jecxz
je
mov
mov
imul
shll
std
gs
mov
repnz
pop
xchg
pop
dec
in
js
es
fldenv
add
movsl
jp
adc
popa
std
push
movsl
call
jecxz
sub
sub
sbb
cmp
les
push
rorl
sbb
mov
mov
jae
rcll
cmc
aam
xchg
pop
shll
fdiv
sti
sarl
adc
push
mov
xchg
dec
stos
aad
fsubp
add
mov
popa
lcall
dec
int3
add
mov
cmc
jecxz
dec
decb
fucom
or
mov
mov
pop
test
sub
lret
test
push
jmp
pop
sbb
dec
xchg
sar
fsub
fcompl
sub
dec
insb
mov
mov
add
inc
xor
push
adc
xor
insl
stos
popa
movsb
mov
imull
push
add
push
rcll
sahf
ds
add
cmp
jp
ds
clc
stos
cmp
sbb
inc
sbbl
cmpl
lds
jl
fisttps
xor
xor
push
iret
jo
jno
jp
and
push
adc
out
cmp
jge
repnz
lods
fstpt
data16
pop
outsl
fisubrl
add
mov
sub
mov
mov
sbb
inc
add
dec
mov
jge
in
jns
rcr
stc
push
mov
xor
push
or
lock
loopne
sarl
aad
in
add
mov
fs
mov
jmp
shr
add
add
cmp
cltd
int
jno
ja
loope
out
pop
or
inc
pop
jle
pop
jg
jle
and
sti
clc
jns
and
stc
jge
outsb
enter
mov
xor
aaa
into
mov
imul
push
adc
inc
sub
jge
xchg
xor
push
pop
movsb
jns
daa
xchg
mov
mov
mov
mov
notb
sarl
xorb
repz
mov
loop
jno
pop
icebp
sbbb
loope
lahf
test
insb
es
adc
pop
pop
or
dec
out
add
gs
add
gs
jne
test
sub
pop
sar
ret
je
and
dec
or
outsl
out
adc
popf
leave
xor
lret
cmpsl
push
dec
iret
jl
bound
and
adc
mov
xchg
cli
mov
fucom
icebp
cld
out
stc
in
rclb
inc
push
mov
mov
cli
cli
push
fnstsw
push
pop
sbb
pop
cmpl
xor
mov
jg
xchg
mov
sti
lock
movsb
dec
sub
pop
lret
int3
push
pop
je
lret
inc
and
push
adc
imul
jl
sub
stc
and
std
inc
jae
mov
jg
insb
mov
pop
in
mov
ror
ljmp
divb
daa
dec
mov
sub
iret
jne
cmp
out
mov
pop
jno
dec
and
xchg
icebp
adc
repz
test
arpl
xor
and
shll
pop
out
leave
push
lcall
adc
ret
push
sub
test
mov
jns
stos
out
jno
lds
loop
mov
push
stos
nop
add
mov
sbb
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
jmp
ljmp
popa
cmc
xchg
fsubr
lret
pop
adc
jg
jle
xchg
arpl
and
out
jae
mov
xor
repz
fs
mov
jno
fistl
sbb
ds
insb
fsubrl
push
pop
repz
pop
pop
push
sub
add
sahf
adc
sarb
hlt
or
mov
push
stc
in
adc
mov
cli
pop
in
lds
cs
mov
je
add
in
push
xor
jmp
test
aam
mov
sti
nop
loop
dec
pushl
jmp
inc
cli
mov
movsb
sbb
repz
lret
push
icebp
and
roll
rorb
mov
and
xchg
cmp
test
imul
daa
stos
mov
popa
call
scas
jmp
add
ljmp
into
outsb
pop
lcall
lahf
sarb
aad
stos
fistpl
pop
sbb
adc
dec
mov
stc
sub
test
outsl
imul
jno
xchg
test
dec
andb
mov
rcl
jno
int
std
inc
add
lods
dec
lock
das
rolb
inc
sbb
push
cmc
or
add
sti
insl
pop
repz
pop
xlat
dec
imul
lods
sub
mov
cmp
pop
mov
idivl
jl
jne
mov
leave
xor
cld
adc
and
scas
dec
insb
mov
xchg
dec
pop
cwtl
cmp
add
xchg
ret
jne
or
lods
fcoml
xor
sub
aad
dec
pop
sub
push
test
cmp
mov
sub
in
mov
mov
dec
inc
pushf
dec
push
cmp
arpl
or
test
cld
pusha
mov
inc
pop
add
mov
add
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
stos
inc
push
dec
add
add
add
add
cmp
dec
add
inc
cmp
add
add
add
add
add
add
add
add
add
add
pop
xor
add
add
fs
add
sub
add
add
add
jb
insl
pop
dec
outsl
imul
ja
imul
fs
gs
outsl
popa
jb
dec
gs
inc
pop
inc
pop
inc
cmp
add
add
add
xor
add
add
add
and
add
add
add
aam
add
je
add
mov
add
nop
aaa
add
insb
inc
add
jo
add
dec
cmp
add
dec
add
sub
add
adc
add
inc
dec
add
hlt
xor
add
add
bound
add
add
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
add
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
arpl
insb
outsl
arpl
add
data16
outsl
outsl
jb
push
add
arpl
push
add
outsl
ja
outsl
ja
jb
add
gs
popa
jo
pop
je
jo
add
in
jae
jb
push
add
jo
pop
insw
outsl
fs
int3
add
outsl
jb
add
js
imul
imul
popa
add
fwait
add
jo
pop
arpl
insl
outsl
fs
sub
arpl
arpl
add
data16
add
or
je
ja
jo
gs
add
data16
je
add
outsb
jbe
add
arpl
imul
add
jo
imul
add
je
push
add
je
add
mov
outsl
ja
add
test
jae
popa
arpl
add
add
outsl
insb
outsl
ja
jb
fildl
pop
popa
insl
jae
pop
gs
je
add
add
imul
add
outsb
imul
add
jae
bound
gs
add
push
add
arpl
inc
imul
jae
jb
arpl
add
add
insl
outsl
jbe
add
cld
add
jb
outsl
insb
add
and
insb
outsb
add
and
pop
gs
je
call
js
je
add
jo
arpl
call
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
repnz
jb
arpl
add
imul
add
ja
je
jo
add
mov
insl
popa
insb
insb
outsl
arpl
add
pop
pop
addr16
popa
imul
add
ja
arpl
data16
push
inc
push
push
cs
insb
add
xor
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
outsb
fs
imul
inc
add
dec
imul
add
inc
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
jne
insb
push
arpl
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
imul
ja
jb
insl
push
outsl
imul
push
imul
ja
add
fs
outsb
jne
add
add
popa
bound
arpl
insb
insb
inc
popa
jb
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
outsb
fs
imul
rolb
dec
gs
popa
addr16
outsl
js
js
add
outsb
fs
gs
popa
addr16
add
outsb
imul
push
outsl
imul
inc
gs
imul
add
outsl
ja
arpl
insb
insb
inc
popa
jb
mov
dec
outsl
popa
fs
insl
popa
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
add
jo
imul
gs
add
sbb
push
gs
outsl
jbe
push
jb
jo
add
gs
jo
popa
je
push
outsb
add
add
push
imul
popa
jae
inc
add
add
je
insb
addr16
je
insl
push
gs
inc
add
ja
outsb
jne
popa
jb
sub
inc
gs
outsb
jne
repnz
jae
dec
gs
popa
addr16
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
push
imul
push
arpl
push
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
jo
imul
imul
inc
push
js
push
add
add
outsb
fs
gs
popa
addr16
imul
add
add
popa
jb
outsl
ja
jb
jne
push
add
insl
add
je
imul
outsb
addr16
add
mov
push
popa
imul
jne
dec
fs
add
movl
imul
gs
js
add
cmp
arpl
popa
imul
outsb
add
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
into
add
jae
popa
addr16
outsl
js
add
add
je
gs
popa
addr16
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
je
outsb
jne
je
imul
add
fs
outsb
jne
add
gs
jns
je
insl
dec
gs
imul
push
outsb
fs
gs
popa
addr16
add
aaa
add
je
outsb
jne
je
je
add
mov
inc
jb
ja
arpl
add
xchg
add
je
outsl
jns
jne
jae
jb
add
inc
fs
jae
push
imul
arpl
pop
add
je
jns
inc
outsl
insb
outsl
jb
jle
dec
imul
jne
je
insl
add
or
inc
jo
outsb
fs
outsb
jne
add
inc
push
outsb
jne
popa
imul
add
push
je
imul
push
arpl
insb
insb
push
imul
xor
inc
push
gs
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
sgdtl
je
insb
addr16
je
insl
add
dec
add
je
outsb
jne
je
insl
inc
imul
or
inc
gs
gs
je
jo
imul
inc
add
je
popa
jb
outsb
je
movb
outsb
fs
popa
jae
add
inc
jb
popa
je
dec
outsb
jne
add
add
je
popa
jb
je
outsl
jae
sub
push
outsb
fs
gs
popa
addr16
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
inc
add
je
outsl
outsb
imul
push
add
add
jo
imul
gs
add
out
inc
jb
insl
gs
arpl
add
popa
bound
outsb
jne
je
insl
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
mov
outsl
ja
jb
insl
push
outsl
imul
jb
ja
outsb
imul
arpl
and
push
arpl
insb
insb
push
imul
add
pop
add
je
arpl
add
je
insb
addr16
je
insl
dec
outsb
je
or
imul
add
pop
add
gs
je
dec
arpl
dec
outsb
imul
dec
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
pop
add
je
arpl
insb
insb
dec
outsb
outsw
add
add
popa
jb
outsl
dec
gs
inc
add
sub
fs
outsl
je
data16
gs
popa
addr16
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
push
jb
outsl
jb
add
push
gs
imul
js
inc
add
add
popa
jb
outsl
ja
jb
add
xchg
dec
outsb
jae
jb
dec
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
gs
imul
add
push
gs
arpl
jo
jns
add
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
jg
push
push
outsb
outsl
ja
add
inc
push
dec
outsb
jne
add
add
insl
push
outsl
inc
push
add
push
jo
popa
push
add
xchg
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
imul
popa
jae
push
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
mov
jb
outsb
je
inc
add
push
gs
imul
outsb
addr16
add
test
push
ja
je
push
imul
ja
add
add
jo
imul
add
inc
imul
jae
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
jne
inc
push
imul
add
inc
push
xor
cs
insb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
push
imul
iret
add
insb
arpl
insb
gs
add
popa
je
inc
dec
inc
imul
add
jae
jp
push
popa
insb
gs
add
gs
outsl
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
mov
imul
inc
gs
gs
inc
inc
add
aad
inc
js
push
gs
dec
jne
push
add
popa
je
inc
imul
add
arpl
jae
bound
int
inc
jae
popa
jo
add
faddl
push
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
jae
je
imul
dec
jb
inc
js
and
inc
gs
imul
jae
mov
inc
gs
gs
dec
bound
arpl
mov
popa
je
dec
popa
je
push
push
inc
jb
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
addl
imul
add
add
je
imul
jae
lods
add
insb
jns
gs
gs
add
add
je
bound
je
jb
arpl
add
jae
je
outsb
add
push
imul
add
popa
je
push
outsl
insb
imul
add
push
gs
dec
gs
imul
inc
gs
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
dec
inc
push
add
add
insb
arpl
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
add
je
jb
jae
dec
jb
inc
js
into
add
insb
arpl
push
arpl
addl
gs
gs
inc
js
outsb
je
outsl
imul
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
imul
add
je
je
arpl
bound
arpl
cmp
inc
gs
jne
jb
outsb
je
bound
arpl
jno
inc
gs
dec
push
xor
stos
add
gs
je
push
arpl
outsb
add
push
je
jb
inc
outsl
arpl
jbe
inc
imul
add
imul
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
inc
imul
je
imul
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
inc
gs
gs
inc
imul
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
insb
dec
popa
insl
gs
imul
add
gs
jb
outsl
jb
outsl
fs
pop
add
je
gs
jo
imul
add
cmc
add
gs
je
push
popa
imul
insl
gs
add
pop
add
outsb
fs
imul
gs
add
test
dec
gs
jo
outsl
arpl
add
jbe
inc
imul
jns
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
adc
dec
outsl
arpl
push
imul
gs
push
popa
je
dec
popa
insl
gs
add
dec
outsl
fs
gs
popa
outsb
fs
gs
add
mov
je
inc
imul
outsl
bound
push
imul
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
push
add
jmp
inc
gs
imul
bound
gs
js
add
mov
gs
jbe
outsb
je
add
push
insb
gs
js
int3
add
jae
jb
jo
outsb
push
add
add
gs
je
inc
jbe
outsb
je
add
push
add
je
jns
je
insl
inc
imul
jns
add
push
gs
gs
outsl
outsb
imul
imul
add
fs
imul
js
add
pop
add
insb
jae
gs
popa
insb
jne
add
add
inc
popa
fs
gs
fs
je
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
gs
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
adc
dec
outsl
arpl
dec
outsl
arpl
mov
jbe
jb
inc
gs
jne
je
outsl
arpl
add
incb
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
loopne
inc
jb
popa
je
dec
jne
gs
add
adc
inc
imul
outsl
dec
inc
dec
add
xor
inc
jae
popa
jo
inc
outsl
insl
insl
inc
jne
arpl
outsb
add
ss
gs
push
inc
outsl
outsb
je
js
add
sub
dec
outsl
jbe
inc
imul
add
je
push
dec
outsl
arpl
add
push
outsb
insb
outsl
arpl
imul
fs
je
insl
push
add
push
add
je
jns
je
insl
push
imul
jae
insl
outsb
je
mov
popa
imul
je
jo
gs
bound
arpl
add
inc
gs
gs
jo
popa
je
inc
add
out
add
je
imul
movb
je
arpl
imul
outsl
bound
inc
jb
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
cmp
dec
jo
outsb
inc
imul
dec
inc
dec
xor
cs
insb
add
push
add
imul
js
add
add
addr16
gs
jo
insb
addr16
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
or
inc
gs
imul
push
add
add
je
popa
jbe
inc
imul
add
arpl
fs
xor
cs
insb
add
inc
add
je
inc
imul
jae
add
dec
push
inc
push
dec
cs
insb
add
push
dec
push
jne
mov
inc
add
dec
inc
add
or
dec
ja
cmp
dec
jb
xor
dec
ss
jnp
sub
dec
sub
push
pop
push
xor
dec
cmp
dec
cmp
dec
jb
xor
dec
ss
popa
dec
sub
dec
sub
bound
arpl
dec
jno
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
jb
jae
addl
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
sbbb
setae
nop
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
mov
add
aas
dec
pusha
dec
cmp
dec
cmp
dec
pop
dec
xor
dec
xor
mov
ret
add
jo
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
ret
psrlq
shlb
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
cmp
dec
cmp
dec
cmp
dec
push
loop
jecxz
repz
jo
jno
jo
jno
ds
jg
cmp
dec
cmp
push
ds
dec
dec
xor
dec
xor
add
adc
adc
jno
aas
dec
add
xchg
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
mov
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
test
mov
add
or
inc
add
fstpl
inc
add
inc
inc
mov
jne
mov
incb
mov
dec
inc
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
and
pushf
clc
ljmp
add
inc
add
imul
pushf
clc
popf
jmp
add
jbe
inc
add
adc
pop
and
add
add
dec
add
add
add
dec
add
inc
add
insb
add
inc
add
add
add
push
add
dec
add
add
dec
add
inc
add
imul
insb
popa
imul
dec
dec
inc
inc
insb
imul
imul
insb
jae
push
insb
imul
imul
imul
jae
imul
imul
dec
dec
inc
inc
push
outsl
imul
push
fs
imul
insb
imul
push
jne
jns
imul
jne
fs
push
data16
add
add
add
xor
inc
add
pop
dec
dec
dec
dec
dec
pop
dec
push
dec
or
dec
add
push
dec
pop
dec
push
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
push
dec
push
dec
inc
dec
pop
dec
dec
dec
push
dec
cmp
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jno
mov
outsb
jae
bound
add
mov
mov
inc
aaa
inc
jle
jno
mov
imul
inc
xlat
leave
xchg
inc
adc
jge
faddp
leave
xchg
fs
dec
leave
sbb
jno
rorb
add
shlb
xor
inc
push
outsl
push
push
inc
add
dec
inc
add
add
imul
pop
outsb
jbe
jns
push
imul
je
jp
arpl
push
imul
push
imul
push
jb
add
insb
pop
ja
je
bound
in
jnp
jnp
cmc
pushl
sar
flds
ret
mov
add
add
add
push
sub
test
add
add
popf
and
out
push
cmpsl
call
add
rcl
xor
mov
pop
mov
sbb
pop
dec
outsb
or
or
movsb
sbb
ds
mov
fisttpll
out
push
lret
push
push
mov
or
mov
fistpll
fisttps
pop
sbb
imulb
arpl
jl
lds
fistpll
xchg
jae
sarl
fisttpll
cmp
sub
or
xor
jb
in
int
arpl
jo
decb
stc
pushf
adc
add
sbb
sar
and
push
aas
push
mov
or
sbb
push
shrl
sahf
add
mov
mov
in
push
push
pop
push
in
pushw
add
pop
ficoml
in
jle
cs
pop
ret
out
and
add
push
xchg
jle
and
aam
aas
jecxz
fdivrp
das
mov
xor
in
xor
cld
push
movsl
incl
jmp
xlat
and
in
dec
loop
sub
mov
ret
das
add
cmc
popa
insb
adc
inc
adc
push
lcall
adc
xor
mov
daa
mov
testl
leave
push
gs
cmp
lcall
incb
inc
cltd
or
mov
lock
push
push
and
mov
es
out
xor
mov
jbe
sbb
pop
pop
fiadds
xor
jle
ja
shl
cwtl
cmp
sbb
gs
mov
mov
add
inc
in
mov
cwtl
mov
push
push
mov
sbb
xchg
test
push
sub
call
xor
add
add
add
adc
fmull
cmc
add
add
fwait
jb
fnstcw
cld
lret
icebp
in
jno
cmp
mov
dec
fcompl
jbe
jae
das
fmuls
xchg
push
rep
push
sarl
jmp
out
mov
repnz
int
in
in
bound
es
dec
lds
into
push
xlat
fld
leave
jns
push
xor
xor
outsl
dec
dec
in
sub
or
repz
idiv
mov
fnsave
cmp
and
aad
sbbb
or
popl
imul
dec
add
pop
popf
mov
out
jmp
add
nop
xor
xor
mov
nop
test
sub
subb
lock
and
pushf
pop
into
jnp
lret
sbb
daa
and
ret
in
cmp
mov
sbb
daa
cs
xor
add
add
subl
stos
dec
out
rcrb
xchg
imul
add
add
add
xor
aaa
xchg
adc
mov
nop
test
aaa
adc
loop
sub
cmp
push
mov
lahf
add
call
aad
cld
mov
pop
cmc
xor
adc
arpl
adc
std
cmp
xor
and
aaa
mov
mov
movsl
test
xlat
mov
in
in
push
loopne
pop
out
or
xchg
addr16
cmpl
mov
out
fidivl
out
mov
dec
dec
jo
mov
pop
out
int3
scas
fiaddl
ret
mov
ljmp
and
mov
pop
out
push
inc
jmp
arpl
ss
xchg
gs
lcall
push
cld
adc
sub
xor
test
mov
mov
inc
mov
fwait
clc
daa
test
mov
sti
outsb
cmp
lock
xchg
loope
repnz
adc
add
pop
jae
or
leave
bnd
mov
push
sbb
add
cmc
add
add
popa
cld
cmp
test
jg
jnp
clc
icebp
pxor
adc
outsb
push
sarl
or
and
out
cwtl
cld
test
sub
in
add
aam
into
fcomip
popf
sbb
out
dec
jnp
jmp
in
andb
aam
aas
ds
sbb
cmp
cli
jecxz
mov
xchg
mov
and
stos
cld
sahf
and
call
cli
call
outsl
dec
loop
inc
xchg
ja
shlb
clc
mov
inc
out
cmp
out
push
inc
and
add
push
jg
jp
xchg
jmp
pushl
jmp
lea
stos
dec
mov
pop
cmp
mov
cmp
push
add
push
adc
rcrl
je
add
test
and
mov
inc
inc
outsl
and
iret
cmp
or
pop
daa
rolb
add
jg
cmc
insl
cmc
out
lcall
sub
rcl
and
cmc
add
add
test
imul
in
cs
jmp
ret
add
dec
mov
pusha
pop
and
xchg
and
cmpb
pop
jbe
jnp
loopne
cmp
add
pop
add
xchg
rol
out
shl
test
push
sub
xchg
dec
xchg
or
adc
xchg
lods
pop
fwait
in
push
aad
push
jmp
dec
sub
xlat
pop
mov
add
jae
divb
cmpsb
movsb
cmp
jns
ret
rcrl
cmp
call
fimull
xchg
cmp
mov
jmp
sub
adc
mov
mov
out
dec
jmp
pop
push
in
sbbb
cltd
test
les
out
cld
or
add
jle
add
outsl
jle
dec
xchg
call
scas
dec
jmp
add
add
add
and
push
mov
push
mov
inc
aas
mov
mov
ror
xchg
fmuls
repz
mov
and
push
ret
jecxz
stos
ret
divb
ror
push
mov
sahf
sahf
jge
insl
out
pop
mov
and
pop
cwtl
mov
add
scas
dec
and
xor
andl
dec
ficompl
clc
fdivrs
or
insb
and
out
or
aam
stos
lock
jle
adc
sti
and
int3
jecxz
jl
je
clc
mov
out
mov
or
mov
fiadds
cld
xor
or
inc
push
add
insl
daa
inc
fwait
inc
dec
mov
xlat
jecxz
sar
dec
cld
aaa
xor
or
lcall
jmp
fwait
out
inc
rorl
sarb
scas
lret
insb
daa
mov
push
push
sbb
add
add
jle
and
scas
sti
jle
inc
sbb
imul
add
add
xchg
fildl
aam
mov
jecxz
inc
inc
inc
xor
addr16
mov
mov
in
out
iret
scas
call
inc
fisubrs
push
mov
jnp
adc
out
gs
enter
mov
aad
aad
inc
nop
ja
mov
popa
and
adc
jl
repz
mov
cmc
mov
mov
pop
sbb
push
mov
sub
ret
in
adc
scas
xor
pop
xor
sbb
xchg
sbb
popf
mov
push
pop
aam
fidivrl
pop
out
pop
jno
pop
ljmp
pop
xchg
lods
push
loopne
adc
jp
imul
lea
in
jl
scas
pop
out
mov
int3
test
scas
adc
icebp
data16
add
lahf
fnstcw
ss
lahf
stc
inc
jb
lahf
adc
dec
xor
add
cmc
add
add
cs
mov
je
data16
and
test
jo
mov
pop
cld
jmp
inc
and
add
fildll
cwtl
push
sbb
fidivrl
cs
ja
sbb
sub
pushf
into
ret
xchg
xchg
insl
loopne
jle
or
or
inc
aas
daa
pop
mov
mov
dec
sbb
dec
jecxz
movsb
sarl
xor
add
das
push
movsl
sbb
mov
cmp
mov
nop
cld
cwtl
arpl
out
jp
push
add
insb
sbb
add
mov
add
aas
xchg
pop
bound
sbb
push
inc
scas
xchg
testb
mov
mov
jno
jbe
divl
lods
lahf
fs
imul
pop
mov
jno
mov
enter
es
xor
push
mov
clc
sub
xor
push
jl
jle
insb
pop
decl
push
xchg
push
loop
out
add
cmc
add
add
mov
lahf
sbb
push
push
push
enter
adc
mov
insl
inc
jb
mov
das
inc
or
or
test
outsl
xchg
lahf
mov
enter
jle
sarl
xchg
xlat
sbb
push
inc
enter
add
clc
out
cmp
sbb
xor
lcall
sahf
stos
pop
add
stos
and
xor
movsb
repnz
dec
sub
inc
jle
in
gs
jmp
cltd
rcrb
pop
cmp
mov
out
cmc
enter
dec
cltd
mov
mov
sti
mov
mov
lods
inc
testb
or
and
pop
dec
dec
or
inc
pop
add
imul
push
cmp
leave
js
or
cltd
push
jo
cmp
xor
jmp
cmp
jae
add
mov
adc
pop
ljmp
push
out
add
cmc
add
add
ds
data16
jno
pop
inc
cmp
dec
call
mov
pushf
imull
ljmp
adc
jne
jl
inc
adc
cltd
jl
cmpsl
lahf
mov
repz
adc
sub
icebp
insb
inc
mov
dec
movsl
add
rclb
imull
frstor
or
add
out
mov
ds
push
add
test
movsl
lea
enter
add
mov
aaa
cmp
enter
pop
insb
stc
test
mov
rol
adc
mov
in
test
cmp
xor
jge
xchg
lds
xor
arpl
push
dec
inc
sbb
cli
insb
rcrb
in
xchg
int
clc
mov
gs
add
data16
jne
mov
gs
das
sbb
add
add
add
loope
sbb
dec
xchg
mov
or
jecxz
aam
test
sbb
outsb
pop
jmp
cmpsl
push
rcl
stos
shlb
mov
or
mov
fstp
push
adc
sub
inc
mov
xlat
iret
adc
sub
push
xchg
pop
xchg
es
add
xor
xor
or
ja
negl
dec
sbb
imul
sar
cmpsl
imul
and
dec
adc
push
sub
addr16
rcll
jo
mov
fsub
add
cmpl
ljmp
arpl
testl
loope
lods
dec
cmp
sub
add
push
out
std
je
mulb
clc
aaa
cmpsb
sub
in
nop
out
enter
or
pop
xchg
sbbl
fcompl
add
jnp
add
jnp
sti
xchg
rol
imul
add
cmc
add
add
push
shlb
sbb
add
mov
pusha
xchg
sub
jecxz
push
adc
testb
or
mov
test
sti
xchg
xor
clc
xchg
mov
sub
mov
cs
scas
mov
mov
aas
jmp
jb
or
movsb
ror
add
mov
xlat
pop
fwait
xchg
mov
fmuls
in
scas
xlat
pop
sti
or
rol
pop
xorb
inc
cli
push
ja
rcr
in
or
arpl
inc
loopne
dec
int
inc
pushf
and
xchg
push
push
xchg
pusha
insb
in
rclb
xchg
mov
mov
movsl
scas
mov
cmp
pop
mov
xor
outsb
fwait
lahf
bnd
and
push
das
mov
stc
jns
int
movsb
or
ds
ret
shrl
fwait
pop
lods
xchg
jmp
addr16
stos
add
add
sub
pop
sarl
test
sub
lret
dec
std
icebp
add
cmc
add
add
stc
jp
cld
movsl
or
jo
jge
insl
pop
add
nop
clc
inc
insb
int3
icebp
int3
add
call
sbb
push
repz
xchg
sarb
stc
cmp
cld
out
gs
mov
and
fs
xor
das
test
mov
dec
jb
or
cmp
mov
pop
rcr
rcll
ljmp
repz
lock
out
stos
xchg
xchg
test
sub
loope
fldenv
in
cmp
idivb
mov
xchg
in
int3
ficoml
scas
inc
arpl
js
jecxz
orb
inc
adc
jmp
xor
pusha
jg
in
jo
push
pop
xchg
xchg
mov
pushf
pushf
mov
jg
xchg
and
adc
cltd
mov
mov
mov
nop
lock
test
cmp
addb
add
repz
std
repz
xchg
scas
fisttpll
repnz
cmc
add
add
sbb
adc
enter
cld
leave
inc
adc
cmpsb
lcall
mov
rorl
das
in
enter
pop
pop
shrd
addr16
push
sub
xchg
push
ret
pop
inc
pusha
mov
mov
mov
jmp
and
outsl
xlat
movsl
jg
mov
lds
push
stos
rcrb
or
adc
ret
sti
pop
ret
add
dec
mov
sub
adcl
icebp
push
testl
or
call
add
popf
lret
es
jo
subb
cmpsb
inc
adc
lods
dec
aas
xor
adc
inc
add
iret
mov
dec
test
ds
bound
stc
lods
in
push
out
mov
adc
loop
pushf
and
mov
pop
adc
adc
add
in
sub
cmp
or
roll
stc
out
add
cmc
add
add
and
xlat
inc
adcb
stos
daa
sub
ja
or
pop
rcr
xor
push
fldenv
or
or
dec
leave
xor
cmpsl
out
inc
ret
test
fcmovb
sub
dec
add
movsb
out
test
push
jecxz
push
xor
rcrb
inc
jbe
mov
mov
call
and
cmpsb
fcomps
sub
ja
out
loopne
pop
sahf
jge
testb
inc
jno
enter
sbb
arpl
pop
add
aam
xchg
sbbb
mov
mov
mov
add
pop
xlat
ss
adc
xchg
cmpsl
mov
cmp
and
or
adc
cltd
jb
inc
jb
cwtl
lea
andb
mov
sub
pop
xchg
in
mov
pop
sub
in
out
push
push
mov
cmp
add
insl
lcall
lret
sbb
aad
jl
push
fdiv
add
cmc
add
add
or
sub
aam
push
subl
ficoml
or
mov
sub
xorl
lret
push
leave
lret
repz
stos
inc
enter
ja
inc
lahf
dec
subb
pop
iret
sub
aaa
adc
mov
mov
pop
push
push
xchg
pop
ja
or
mov
and
ds
sbb
test
rcrl
jnp
mov
cmp
jnp
shlb
dec
pop
test
std
daa
aad
cmp
mov
xchg
test
push
test
inc
ss
incl
cmp
aad
dec
jmp
mov
dec
into
or
scas
mov
mov
es
cmp
sahf
sub
fs
hlt
in
leave
mov
fistpl
push
repz
clc
sbb
loopne
push
push
mov
lock
lea
or
add
lret
xchg
in
mov
pushl
comiss
cmc
add
cmc
add
add
hlt
xchg
stos
mov
dec
outsl
sbb
push
fs
pushf
jmp
fidivs
ret
mov
fldenv
push
push
aam
sbb
dec
xchg
sub
mov
outsb
push
push
out
mov
int3
test
lds
stos
xchg
movsl
pop
out
xchg
jmp
or
add
jbe
sysexit
sarl
cmp
std
mov
test
adc
mulb
fisttpl
idivb
jnp
iret
ds
into
dec
scas
jl
cli
fstl
sub
pop
push
mov
outsb
mov
dec
fs
js
loop
pop
fidivs
push
pop
mov
lahf
xorb
fsubr
leave
mov
std
aas
jno
mov
cmp
mov
stos
pop
sbb
mov
push
hlt
mov
stos
dec
cwtl
add
add
sub
in
negl
push
inc
push
xor
cmpsb
jge
testb
cmc
add
add
pop
sub
xorl
outsl
mov
out
je
sbb
addb
adc
xor
push
adc
in
cmp
loope
sbb
clc
pop
adcl
xlat
nop
in
inc
jno
fcoml
negb
std
xor
movsb
les
lea
mov
ljmp
or
pop
mov
loopne
ljmp
out
dec
xor
jbe
mov
inc
push
call
pop
jne
rclb
inc
lcall
fcoms
and
out
push
xor
pushf
pushf
pop
ficoml
test
jbe
stc
stos
cmp
mov
jl
fbstp
pop
mov
inc
pop
stos
jg
dec
add
adc
lahf
ja
int3
cmpsb
jo
lret
adc
sub
xchg
roll
inc
int3
mov
sahf
cmp
jge
push
test
add
add
mov
nop
fmull
sub
add
add
xor
fcoms
pushf
ja
jge
push
hlt
pop
decl
ficoms
jo
jmp
mov
push
lret
das
icebp
icebp
xorl
je
in
and
loope
push
mov
jnp
push
outsl
jl
scas
call
mov
adc
ror
push
int3
fsubl
roll
invd
in
iret
xchg
ror
stos
jle
mov
adc
ficomps
and
les
dec
sub
mov
xor
add
push
adc
sbb
sbb
jnp
mov
jno
adc
daa
leave
movsl
rorb
inc
xor
addb
xchg
pop
cli
sbb
mov
sub
negl
adc
mov
pop
addl
ror
nop
fs
fistpll
cwtl
int3
pop
inc
fadds
in
je
or
ret
cltd
pop
and
add
add
adc
push
add
adc
ja
clc
add
cmc
add
add
leave
fists
popf
pop
xchg
adc
cli
shll
inc
sti
xorb
aaa
stos
jnp
jmp
stos
iret
mov
xor
repnz
pop
xchg
loopne
out
add
in
jg
or
lea
lock
push
mov
lea
cwtl
and
insl
lahf
cmpsb
inc
xor
mov
jmp
ja
mov
xchg
daa
sub
dec
pop
jecxz
xchg
mov
hlt
fsubp
cmp
pop
sub
jl
fs
fidivrs
pop
jmp
jl
hlt
mov
add
daa
shr
xor
pop
sbb
or
push
xor
mov
loop
sbb
iret
sub
aas
cli
push
jp
in
in
notb
xor
mov
jo
mov
push
dec
adc
stc
loopne
dec
xor
push
or
cwtl
push
jns
dec
arpl
xor
mov
mov
sahf
mov
cmpsb
rolb
add
out
repnz
add
pop
inc
xchg
pusha
push
movsl
stc
add
cmc
add
add
cld
push
adc
jno
cmp
nop
jmp
gs
push
xor
adc
cmp
dec
inc
adc
push
sub
dec
xchg
pop
mov
adcb
fcmovu
and
imul
add
stos
orb
fcmovne
aad
jecxz
lcall
sbb
mov
xchg
ficoms
pop
add
ficoml
add
imul
fwait
jl
mov
cld
jp
push
repz
imul
cmp
dec
es
mov
dec
loope
es
mov
bound
daa
mov
sbbb
mov
sbb
xchg
lea
mov
mov
or
iret
test
jne
fcmovnbe
dec
hlt
add
test
xchg
mov
jb
daa
inc
cs
dec
in
jo
add
pop
mov
push
decl
fisubrs
add
cmc
add
add
ja
push
jp
push
xchg
leave
hlt
repz
jge
xchg
leave
popa
push
shr
sbb
lock
pop
data16
inc
xchg
outsl
push
add
loopne
xor
mov
cmpsl
pusha
lret
and
jp
loopne
in
and
jmp
mov
push
mov
pop
mov
adc
lods
movsb
fsubl
xor
fnstcw
mov
mov
xchg
lods
enter
adc
sub
xchg
cmc
cmp
dec
hlt
cmp
mov
adc
bound
aaa
outsl
dec
ss
jns
pushf
mov
popf
outsb
xor
or
mov
xlat
jmp
dec
and
movsl
xor
mov
cmp
mov
out
sbb
idiv
or
jmp
sbb
loop
movsb
xchg
bound
cwtl
pop
aad
mov
insl
clc
repnz
and
scas
repnz
mov
add
add
jmp
in
dec
dec
ret
andl
mov
sti
add
cmc
add
add
mov
xchg
in
add
and
add
push
cs
push
jg
and
sub
or
aaa
fsubl
or
pop
add
pushf
loope
fstpl
dec
xor
jg
ja
sbb
dec
ds
loop
mov
dec
in
test
inc
push
and
scas
push
popf
ret
out
test
push
loopne
rcl
les
cmp
out
jae
pop
out
jno
leave
jne
cmp
mov
xchg
lcall
xchg
jle
pop
insl
mov
inc
test
dec
arpl
jbe
pop
cwtl
and
xor
pop
mov
push
inc
hlt
mov
pop
push
xchg
cmpsb
sub
clc
pop
out
pop
into
mov
leave
dec
mov
out
or
or
mov
push
int
call
dec
lcall
fnstenv
xor
and
and
or
data16
daa
and
cmc
add
add
movsl
dec
flds
lcall
jp
mov
outsl
xchg
add
mov
ds
incb
ja
cs
out
push
imul
lret
aad
es
scas
adc
mov
std
bound
sub
xchg
gs
js
sub
das
cmp
inc
stos
enter
mov
sub
daa
inc
cmp
push
mov
or
subb
and
pop
rcrl
jecxz
repnz
dec
outsb
cmp
stos
popf
jne
cltd
sbb
gs
inc
and
push
push
mov
test
sbb
ja
mov
or
out
xor
dec
inc
xchg
inc
dec
daa
testb
fdivr
pop
cmp
daa
mov
stos
std
stos
enter
popa
jnp
add
and
test
popf
add
mov
mov
fmuls
add
add
inc
ror
lock
jnp
jmp
sbb
and
add
add
add
mov
push
mov
push
aas
js
adc
mov
cli
ud1
sarb
js
inc
mov
add
mov
ds
stos
jmp
movsl
cld
bound
sub
mov
sbb
loop
jg
fimull
flds
adc
jb
or
cs
or
je
lock
jbe
xchg
inc
mov
cmc
inc
xchg
jmp
sbb
push
and
jno
test
cwtl
mov
fldt
dec
adc
xchg
imul
pminsw
cmp
or
fimull
test
imul
rcrb
pusha
call
mov
dec
sub
inc
xchg
cmp
ja
fistpll
mov
jns
and
mov
push
push
mov
fimull
mov
and
repz
fimuls
mov
jp
outsb
incb
add
add
add
mov
add
fdivrs
sub
or
mov
lahf
mov
xor
jno
lock
bound
pusha
and
in
inc
mov
lds
icebp
test
int
lret
popa
mov
movups
jmp
fs
sahf
pop
jns
sbb
inc
add
imul
mov
sub
cli
lret
outsl
add
push
sbb
fwait
jno
out
inc
insl
push
adc
cli
shr
mov
push
xor
fwait
aam
stos
rcrl
mov
sbb
jae
lret
lret
fidivrs
cs
jns
mov
in
mov
arpl
ret
xlat
arpl
cmc
or
adc
test
dec
push
pop
sub
pop
dec
dec
in
jle
divb
sub
add
shll
sub
inc
push
repz
add
jns
fs
out
inc
lahf
mov
pop
lods
add
add
out
xchg
jns
es
outsl
dec
arpl
add
cmc
add
add
and
inc
jge
mov
je
lcall
mov
fisubs
cmpsb
cmp
inc
xlat
push
fstpl
dec
mov
push
dec
sbb
fcmovbe
bound
rcrb
shrb
push
xchg
inc
and
add
jno
cltd
and
mov
outsl
lret
cwtl
mov
jl
inc
adc
xchg
xor
arpl
sub
lret
sub
shrb
cwtl
jo
mov
cli
js
and
cltd
pop
add
les
cmp
push
push
xor
in
fldl
mov
fisttps
out
outsb
fbld
push
mov
ja
mov
mov
sub
loopne
gs
stos
pop
pop
nop
addr16
gs
lret
xor
outsb
je
fildl
jo
xchg
test
add
sub
add
add
scas
push
repz
cmc
scas
mov
addb
cmc
add
add
pusha
pop
pop
scas
cmpsl
repnz
inc
dec
imulb
cmp
les
mov
adc
jnp
pop
out
imul
clc
inc
adc
fdivr
out
repnz
pop
lods
push
xor
jecxz
aam
popaw
test
aam
fcmovu
mov
sbb
enter
aaa
imul
rorl
rorb
lcall
sahf
dec
cmp
js
test
lahf
pop
ret
addb
or
mov
and
fwait
lret
aas
dec
rcrb
or
loop
fmull
xor
dec
push
ljmp
push
cmpsl
stc
arpl
setle
pop
and
addb
mov
jecxz
outsl
je
xor
sahf
lcall
mov
mov
push
mov
rol
cltd
push
test
pop
mov
int3
jmp
ret
xor
mov
sbb
mov
add
add
pusha
rorb
lea
lret
add
add
add
add
mov
inc
repnz
inc
stc
adc
mov
mov
stc
mov
popa
fists
mov
push
or
in
push
dec
lret
xorb
clc
ljmp
fldenv
std
xchg
mov
fistl
cs
push
xor
mov
fsts
mov
or
xor
mov
stos
cmp
hlt
jno
pop
and
and
sub
jbe
mov
sbb
test
repnz
sti
test
mov
sub
pop
push
movsl
jae
mov
push
movsb
into
in
cmp
cmp
pushf
mov
jb
cmp
mov
mov
iret
inc
lret
sub
icebp
cmp
mov
push
xor
outsb
sbbb
test
sub
idivb
dec
das
popf
and
mov
testb
mov
add
jecxz
push
testl
xor
dec
inc
add
add
add
add
aam
add
loop
mov
fdivl
or
and
cwtl
dec
mov
pop
testb
in
leave
mov
notb
xor
inc
mov
push
popl
call
sbb
mov
adc
arpl
sbb
fsubl
mov
call
leave
sbb
mov
test
inc
mov
inc
cmp
mov
jge
push
fucomp
in
pop
push
std
push
hlt
xchg
stos
jno
lods
rorl
dec
testb
leave
mov
mov
or
mov
ret
outsl
mov
jo
sahf
mov
pop
subl
adc
scas
ljmp
mov
sti
pop
neg
stos
stos
lea
dec
push
cmp
push
outsl
push
outsb
lods
jg
shlb
mov
mov
fstl
std
sub
insl
add
add
xchg
mov
jle
sbb
add
add
add
add
sbb
pop
lods
ret
pop
cs
arpl
cwtl
shl
mov
sbb
gs
add
mov
mov
gs
mov
cwtl
jne
push
jo
fcompl
shll
xchg
push
shll
mov
pop
mov
and
xorb
dec
ret
ss
jg
dec
fsubp
test
push
aaa
test
mov
lods
in
add
xchg
stos
mov
lcall
inc
fcos
xchg
adc
pop
cmpsl
push
les
inc
mov
andb
stc
push
cwtl
add
pop
bound
push
mov
aas
movsb
clc
jp
push
pusha
mov
fcmovnu
insb
cmp
pop
lcall
push
and
clc
dec
popf
mov
test
xchg
int
pop
sti
cld
movsb
ret
das
mov
mov
subb
add
mov
xlat
aam
lret
sbb
loop
add
add
add
add
jmp
lea
lcall
mov
repnz
popf
inc
push
ficoml
xchg
jbe
inc
clc
add
adc
add
mov
mov
dec
xorb
call
fisubs
jmp
shrb
jg
mov
scas
addr16
lcall
push
shl
jno
data16
or
jmp
add
xchg
xor
ja
sbb
data16
sbbl
xlat
sub
out
stos
repnz
fsqrt
fs
cmpsl
push
mov
sarl
cmpsb
adc
xor
inc
pop
sub
scas
and
sub
aaa
mov
jb
in
movsb
aad
daa
repz
es
sahf
inc
cli
push
cmp
imulb
shlb
test
call
mov
mov
xor
xchg
sub
add
add
push
inc
pop
jns
aas
fisttpl
inc
adc
add
cmc
add
add
mov
int3
pop
repnz
inc
int3
enter
push
jl
dec
jle
ficomps
add
shll
and
lea
insb
mov
or
dec
jnp
push
test
out
das
pop
sti
ja
std
or
sub
test
add
imul
pop
xlat
adc
mov
cld
push
dec
mov
adc
xor
enter
aad
jbe
pusha
jnp
push
xchg
ret
mov
xchg
enter
sbb
dec
adc
cmpsb
mov
out
loopne
jns
xor
dec
cmp
add
sub
cmp
push
call
and
jmp
hlt
data16
xor
in
insl
dec
nop
inc
pop
xor
or
or
inc
mov
and
in
sbb
scas
in
in
insl
jecxz
add
add
jnp
mov
div
jp
push
push
add
cmc
add
add
push
dec
pop
into
scas
out
pop
or
outsl
sarb
int
ss
jno
and
xchg
pushl
dec
inc
mov
lcall
je
lea
aas
dec
shrb
daa
push
xor
clc
mov
cmpsb
xchg
in
ljmp
inc
repz
inc
insb
sub
or
sbb
ljmp
cmpsl
inc
out
dec
mov
pop
pop
adc
mov
push
dec
jge
leave
in
pop
mov
cmp
fsubrs
jg
insl
in
mov
and
or
mov
xchg
push
js
jnp
lcall
into
push
jle
adc
rcrb
mov
jns
pop
xor
shl
iret
cmpl
xchg
jo
mov
push
hlt
es
repz
fstps
push
or
test
test
mov
or
pop
sub
imul
adc
jno
mov
pop
add
cmc
add
add
outsl
std
jno
xchg
xor
nop
repz
lret
jne
jp
sub
fisttpll
popf
gs
push
pushf
cmpsl
mov
pop
cmp
aad
and
push
jmp
cmc
add
rcr
sub
fwait
mov
test
push
stos
mov
repnz
aas
or
and
xchg
pop
out
fldl
lods
jo
dec
inc
and
adc
fisubrs
mov
sti
pop
and
mov
jbe
sbb
pop
cld
clc
xor
outsl
sti
sub
mov
fiaddl
sub
mov
inc
leave
xchg
stc
xchg
cmp
mov
jecxz
iret
imul
mov
fcomi
xor
jb
fsubrp
jmp
adc
inc
insl
jge
in
lcall
jecxz
loope
outsl
xor
rorb
lret
dec
loope
cmp
add
xchg
mov
idivl
and
add
add
add
lea
mov
icebp
test
scas
rol
adcb
adc
sub
xor
call
fadds
in
sub
sahf
xchg
push
inc
hlt
xor
push
xchg
and
xchg
adc
out
daa
dec
loop
fwait
sarl
jecxz
jbe
aaa
fiaddl
add
imul
push
xchg
jp
sti
rcll
movsl
pop
xor
jo
mov
sbb
arpl
pushf
mov
shl
ret
sbb
add
fwait
dec
cmp
lret
jl
or
dec
or
add
movsl
sti
mov
mov
loop
aaa
xor
jle
outsb
push
mov
adc
pop
push
sub
sub
cmp
xor
scas
adc
push
mov
pushf
imul
pop
sahf
out
inc
loope
adc
aad
insl
xor
insb
mov
add
test
mov
stc
fdivrl
fprem1
or
add
add
add
pop
dec
aam
sbb
dec
lock
mov
repnz
push
add
sub
and
jmp
push
pop
pop
pop
sbb
call
or
dec
add
xlat
add
or
das
sub
mov
inc
mov
xor
lea
xor
inc
inc
pop
mov
je
shl
dec
jbe
cmp
test
adc
bound
testb
xchg
or
jl
out
push
int
mov
or
popa
into
sahf
lret
push
add
pop
test
sti
les
fbstp
fnsave
lods
inc
rcrb
jb
jae
cmp
push
rclb
add
jge
shll
cmp
mov
rorl
sub
and
out
mov
pusha
cli
jns
ldmxcsr
add
jmp
imul
pop
sub
fs
sub
ljmp
add
jno
js
std
xchg
or
test
inc
popa
les
inc
idivl
xor
mov
jae
pop
dec
xorb
hlt
xchg
jae
push
pop
jecxz
mov
sbb
leave
push
mov
adc
xchg
and
and
in
loope
test
into
in
cld
scas
gs
mov
pop
pop
xor
jl
jnp
js
lods
mov
adc
push
add
insb
es
jae
bswap
arpl
sub
mov
mov
xchg
repnz
sahf
dec
adc
jno
or
into
popa
lret
out
mov
sbb
xor
pushf
icebp
in
xor
aad
imul
scas
imul
in
cmpsl
and
aam
lcall
push
into
mov
arpl
push
or
popa
jo
std
mov
jns
jne
dec
popa
scas
sbb
or
or
or
add
aad
test
add
add
pop
lods
pop
cli
cmc
inc
mov
sbb
add
cmc
add
add
cmp
jmp
mov
xor
sbb
xchg
stc
jo
adc
imul
repz
mov
andl
xchg
or
cmpsl
sbb
xchg
add
aaa
add
cmpsl
in
cmp
aas
fdiv
dec
add
stos
movsl
mov
xlat
jecxz
aas
mov
imul
dec
fisttpll
std
aam
cld
jne
xchg
mul
xchg
out
cmp
cmp
pusha
incl
mov
mov
adc
pop
jmp
add
push
lret
out
mov
and
pushf
dec
mov
xchg
fistpl
pushf
pop
mov
cwtl
dec
sub
iret
mov
loopnew
addr16
pusha
fcompl
add
inc
dec
mov
std
pop
insl
in
jno
xchg
cmp
xchg
out
add
add
stos
cltd
inc
popf
jae
out
inc
dec
clc
and
les
cmc
add
add
push
add
pop
xchg
cmc
push
dec
jge
mov
xchg
push
jo
ds
vmmcall
loopne
js
cmp
pop
xor
mov
scas
cmp
aas
mov
sub
decl
add
ficoml
inc
fwait
pushf
aad
inc
imul
into
fisttpll
cmp
cli
pusha
fwait
sub
jl
xlat
in
mov
push
pop
popl
sarb
outsl
jae
test
movaps
inc
es
gs
and
dec
and
es
cmp
inc
add
insb
sub
jo
dec
inc
arpl
aam
jnp
mov
loop
mov
es
lea
cmp
push
push
in
inc
icebp
xchg
xchg
xor
inc
or
add
inc
outsb
cmpsb
hlt
daa
mov
or
jo
xchg
sub
pop
imul
scas
jmp
push
push
movsl
call
pusha
xchg
push
xchg
add
add
aam
int
xchg
clc
int3
jno
js
or
add
add
add
sub
lea
leave
iret
or
int
test
sub
xchg
xor
addr16
inc
push
pushf
xchg
dec
mov
push
test
repz
jbe
inc
js
and
out
push
add
psubsb
cwtl
adc
adc
cmpsl
loop
cli
addr16
jp
sar
xor
and
addb
mov
xor
lahf
pop
flds
lret
rorl
add
sbb
sbb
arpl
dec
insl
push
scas
addr16
jle
mov
mov
or
and
test
lcall
hlt
xor
imul
outsb
mov
std
and
aam
sbb
mov
popa
pushf
or
mov
stc
lds
add
push
xor
outsb
cmp
subb
pop
xchg
mov
jb
adc
add
pop
arpl
addr16
inc
jmp
push
mov
add
add
jb
add
pop
push
cld
fnstenv
cld
ljmp
sub
outsl
inc
mov
outsb
dec
into
push
gs
xchg
inc
dec
popf
push
dec
sbbl
scas
jmp
cmc
add
popf
lods
jp
out
push
fistps
leave
mov
sbb
sbb
and
gs
dec
arpl
les
lahf
inc
cld
sub
mov
sub
scas
cmp
fists
and
call
jno
push
lods
jmp
aas
xchg
rcrl
je
push
dec
dec
add
mov
jle
out
mov
out
out
or
cmpsl
ja
mov
cmc
iret
out
pop
pop
enter
jmp
push
outsb
scas
and
int
pushf
or
push
xor
into
sub
push
inc
mov
xchg
xor
test
jno
mov
or
add
add
add
out
out
pushl
jecxz
xchg
jno
ret
add
cmc
add
add
jo
mov
ret
outsl
repz
add
int
pop
in
aas
adc
mov
pushf
jo
or
popf
lds
dec
jns
mov
hlt
sbb
pusha
inc
das
call
mov
ret
ret
mov
adc
or
mov
paddsb
jle
jge
aad
mov
pop
decb
movsl
jle
jno
pop
iret
in
jno
sahf
push
jg
out
dec
mov
mov
pop
aam
decb
sub
add
dec
pop
mov
add
stc
mov
fistps
pop
mov
shlb
push
cmpsl
xchg
lcall
jno
jnp
cmp
add
xchg
in
dec
cmp
pop
or
loopne
jmp
test
jecxz
ret
imul
pop
sub
icebp
das
xor
mov
xor
mov
xchg
subl
aaa
cmpl
add
push
scas
out
mov
shlb
push
test
add
cmc
add
add
dec
test
lcall
lret
pushf
aad
push
pop
jns
add
mov
jns
pushf
dec
in
push
xchg
cwtl
sub
into
mov
mov
int3
hlt
push
repz
enter
dec
sub
iret
lock
fsubr
cmpsb
xor
fildll
mov
jle
test
mov
jmp
push
inc
fdivrl
xchg
mov
xor
adc
cmp
sarb
jo
out
js
lods
mov
add
or
call
push
cmpsb
push
cmp
lods
jns
sub
inc
push
stos
mov
jg
imul
mov
int3
pop
aam
push
nop
cmpb
xorb
aas
mov
in
fcomps
add
dec
cmc
add
add
negl
lock
je,pt
or
xchg
testl
loopne
pop
dec
sti
add
add
xchg
and
movsl
mov
mov
cmp
scas
pop
out
ret
jmp
cmc
add
add
mov
xchg
mov
xchg
les
sti
pusha
test
jae
notb
mov
aad
mov
add
xchg
rol
add
jl
jae
pop
das
and
out
subb
push
sti
mov
or
lret
inc
and
stc
xchg
pop
rol
out
bound
sub
leave
dec
js
loopne
jae
pop
push
adc
scas
es
mov
push
sub
inc
daa
cli
enter
xchg
outsl
daa
mov
push
lea
push
call
repnz
xchg
adc
fists
adc
push
cli
lcall
mov
pop
jne
sub
jno
lret
fs
adc
jbe
add
bound
daa
add
mov
lods
jg
std
xor
fldl
push
movsb
inc
mov
cmp
hlt
xchg
das
add
add
mov
push
jg
mov
sbb
add
cmc
add
add
push
andl
pusha
xchg
inc
jle
cs
mov
flds
fs
iret
test
nop
xor
mov
add
das
adc
mov
test
sahf
ljmp
mov
lock
dec
hlt
pop
ret
scas
and
mov
stc
sarb
loop
inc
in
fstp
leave
and
mov
cmpl
test
sub
or
pop
sub
test
jae
les
sub
add
sub
jmp
lret
jmp
add
cs
aad
xchg
shlb
cwtl
add
jno
cmp
lea
sbb
lret
sub
movsl
js
daa
pop
or
insl
cmp
les
jecxz
push
cs
shll
xor
push
pushl
dec
adc
inc
mov
mov
fdivr
jg
lock
mov
mov
es
pop
hlt
hlt
add
add
mov
mov
fidivrs
pushf
xchg
jb
xchg
add
cmc
add
add
cmpsb
popf
mov
daa
mov
rcr
adc
insl
mov
add
and
sbb
in
pop
push
sbb
add
sbb
repz
imul
sbb
lea
xor
mov
pop
leave
xlat
ja
ja
push
aam
mov
cmc
mov
out
xchg
sub
and
pushf
fadd
push
pop
jo
sti
dec
shl
je
xor
or
shrl
sahf
push
push
xlat
subw
inc
inc
mov
fisubl
stos
xchg
dec
jl
addr16
divl
loopne
out
push
inc
pushf
incb
mov
and
rclb
mov
push
shlb
movsb
adc
pop
fs
jecxz
daa
pop
adc
jecxz
adc
hlt
dec
jns
loopne
fs
jl
mov
pop
aaa
mov
pop
addr16
pop
add
add
mov
or
jl
add
cmc
add
add
cmp
sub
mov
cmpsb
xor
jns
mull
enter
in
jge
movsl
ja
mov
push
in
add
test
gs
popf
or
fdivs
dec
mov
and
mov
fcoml
mov
stos
sub
mov
and
inc
push
xorb
movsl
push
and
test
sbb
jp
in
rcrl
jno
and
add
or
cld
mov
mov
lcall
mov
push
insb
fmull
cmp
fwait
push
loopne
int3
lret
out
jno
lahf
xlat
lods
mov
mov
shlb
or
punpckldq
push
out
push
dec
add
inc
jne
imul
dec
xchg
xor
ja
jb
daa
jg
js
sbb
sbb
stos
lahf
xor
in
out
stos
fwait
sbb
outsb
add
mov
add
xchg
enter
push
fists
sub
lcall
add
add
sahf
jbe
push
popa
aam
fdivs
pop
xchg
inc
repz
xchg
loopne,pt
sbb
fsts
out
jb
sbb
add
loopne
lret
sahf
push
push
sbb
outsb
ja
scas
mov
cmp
xchg
add
pop
pop
pusha
push
lds
add
scas
lcall
and
add
iret
mov
pop
push
add
sti
aas
aas
mov
and
or
out
lret
adc
pop
cltd
cld
ds
mov
insb
jge
xor
xor
sbb
lds
test
dec
loope
repz
dec
fs
repz
adc
aad
mov
dec
xchg
xchg
dec
inc
mov
rolb
daa
inc
mov
jl
mov
mov
adc
inc
cmp
hlt
aam
in
cmpsb
xchg
xchg
add
sbb
aas
leave
sbb
mov
in
add
add
into
fwait
testb
mov
pop
lahf
adc
cmc
add
add
dec
or
rcll
cmc
push
adc
dec
ja
in
adc
or
in
movsl
cmc
inc
mov
gs
and
add
sub
pop
add
std
cltd
nop
xchg
je
xchg
fldcw
dec
das
test
jecxz
inc
lea
int3
mov
xor
or
pop
sbb
clc
adc
inc
sbb
inc
push
mulb
insb
repz
cmp
mov
rcrb
or
mov
xlat
xchg
jns
aam
cmp
xchg
sub
ds
rcll
xchg
xchg
mov
push
arpl
cwtl
outsb
mov
mov
dec
popf
inc
inc
stos
ss
lret
or
jb
inc
shll
cmpsl
sbb
gs
xor
aaa
xor
roll
inc
pop
mov
inc
test
bound
add
add
xor
mov
pop
mov
push
std
adc
push
add
cmc
add
add
cmpsl
arpl
dec
scas
leave
rcrb
leave
dec
dec
adc
xor
mov
dec
scas
cmpsl
nop
and
sub
out
jle
pop
mov
sub
lds
dec
xlat
jns
lahf
or
jae
cmpsl
xor
mov
loopne
ja
xor
bswap
mov
testb
pusha
jns
dec
sbb
push
aam
and
cld
call
jg
xor
mov
jmp
xor
sar
mov
sbb
iret
loop
add
jbe
or
out
lods
test
rcrl
jbe
xor
in
arpl
xor
cmp
pop
ja
inc
sbb
out
mov
int3
nop
leave
loopne
mov
xchg
imul
inc
mov
sub
pop
mov
das
cmc
rclb
push
arpl
outsl
add
add
inc
out
aas
mov
sub
outsl
outsb
and
add
cmc
add
add
fisubs
sbb
shr
mov
xor
inc
jp
jge
mov
or
fs
lret
fimuls
adc
cmp
cmp
icebp
es
fcmovne
sub
inc
xchg
mov
adc
or
aam
adcl
xor
mov
pop
xchg
xchg
inc
outsb
decl
cmpl
xchg
inc
inc
push
in
hlt
mov
cmp
sti
int
aas
sub
dec
xor
or
sub
pop
insb
mov
das
xchg
mov
rorb
addl
dec
enter
fdivs
mov
inc
sbb
adc
jle
loopne
out
cmc
cmpsl
push
fldl
movsb
call
push
jl
mov
mov
stc
sbb
push
hlt
inc
pop
push
icebp
and
call
push
bnd
jp
xchg
inc
rcr
pop
inc
sbb
add
add
add
cmc
dec
dec
ret
ljmp
inc
rol
add
mov
sub
leave
les
into
dec
or
es
fstl
in
dec
int3
dec
sbb
lcall
stos
jmp
pop
cmp
add
and
dec
mov
inc
pop
push
or
cmp
fildll
insl
sbb
adc
jp
sarl
mov
cmpsl
js
rorl
enter
sub
or
sub
xchg
adc
cmp
gs
cmp
pop
add
loope
test
rcrb
cmp
and
das
cmpsl
and
ret
pushf
or
mov
jns
dec
xlat
xorb
fs
cmpl
ljmp
add
pop
call
fdiv
xchg
loopne
add
sbb
in
out
ja
fbstp
scas
adc
cmc
add
add
jns
jo
and
jp
xchg
out
into
les
inc
ljmp
mov
sbb
xor
push
sbb
test
inc
fimuls
out
orb
mov
dec
jl
dec
jmp
lock
inc
push
outsl
push
add
mov
int
out
bt
xor
push
adc
popf
adc
xchg
test
mov
scas
mov
faddl
notb
test
mov
iret
jecxz
sub
sub
sbb
insb
icebp
mov
lds
sbb
dec
push
adc
mov
push
push
xchg
fldt
js
xor
sbb
jnp
mov
jne
cmp
jmp
mov
sti
pop
xchg
test
cmp
cmp
testl
and
or
add
add
pop
in
pusha
jns
sbb
add
add
add
cmp
cld
loopne
jl
push
imul
dec
test
and
repz
movsb
negl
lds
dec
xor
movsl
hlt
ret
sub
xchg
orb
inc
ficompl
mov
and
scas
punpckhdq
clc
jno
xor
adc
lret
andl
in
std
mov
call
xlat
lahf
jecxz
or
jle
pop
stos
jns
mov
rorb
rclb
pop
cmpsl
xor
psubq
jp
lcall
ljmp
call
aad
lahf
cmp
inc
pop
testb
mov
xchg
mov
orb
les
stc
cmp
push
test
inc
in
imul
dec
adc
push
ss
push
cli
mov
les
lret
test
mov
jge
outsl
mov
jp
movsb
sub
add
mov
jg
imull
push
imulb
sbb
add
add
add
add
scas
xor
lods
imul
test
daa
pop
fiadds
mov
fildll
xchg
inc
movsl
push
push
inc
popf
lds
add
dec
jbe
movntq
adc
roll
cmpsl
mov
inc
ds
icebp
int
cmc
fcmovnu
out
nop
outsb
sub
jp
call
rorb
lea
test
jmp
jno
mov
inc
icebp
data16
add
sbb
addr16
sbb
clc
and
bound
mov
jae
icebp
jb
push
adc
mov
ljmp
imul
in
insb
mov
fxch
jae
repnz
or
or
call
pop
and
aaa
mov
sub
sbbb
adc
js
mov
in
dec
cmp
sub
add
add
sti
jg
and
sbb
sbb
add
add
add
xor
xlat
cs
jg
mov
iret
mov
bound
or
inc
dec
mov
lcall
sarb
call
dec
inc
sbb
mov
ror
xchg
mov
push
ret
add
mov
add
cmp
outsb
jae
aaa
hlt
dec
pop
shl
xorb
mov
fcmovu
sbb
sub
fidivrs
jg
dec
sbb
push
in
xor
lahf
into
xor
lret
stc
test
pop
sahf
sbb
jle
adc
adc
lods
sbb
stos
push
jno
imul
and
lret
mov
inc
nop
xlat
push
push
jne
mov
and
out
jl
js
pop
add
shl
std
push
sub
xor
daa
int
js
lods
sbb
lcall
add
jnp
fldl
outsl
push
push
push
sbb
add
out
lcall
mov
push
xchg
outsb
xchg
sbb
sbb
fisubl
rolb
jp
jb
dec
sbb
dec
push
lret
cmp
and
push
out
add
shl
imull
mov
rolb
bound
dec
loopne
loope
xchg
xor
mov
pop
loope
xor
sbb
mov
cmc
push
inc
sahf
pop
jg
ss
jp
and
outsl
leave
mov
adc
cmp
pushf
in
fcoms
jno
pusha
jnp
imul
mov
push
pop
in
stos
add
outsb
les
pop
mov
fimuls
and
repz
cmpsl
or
mov
lret
lea
fisubrl
and
lock
ljmp
leave
add
ds
lcall
inc
add
add
outsl
mov
xchg
pop
cltd
mov
imul
add
add
cmc
add
add
aam
cmp
pusha
dec
movsl
sub
dec
xor
cs
fildll
pop
repz
fsubl
mov
popf
clc
scas
les
lea
jo
pop
or
fdivr
inc
pop
sbb
dec
or
add
in
xchg
cwtl
jmp
push
idivl
movsl
dec
popa
movsb
aas
xlat
jmp
sbb
inc
mov
roll
mov
jno
out
xchg
aas
jge
jo
sbb
stc
cmp
lahf
fwait
push
lret
jp
call
stc
cmp
fistl
dec
lsl
addr16
dec
in
fisubrl
rclb
xlat
add
xchg
push
pop
sbb
in
cmc
and
cli
fcoml
jo
push
and
xchg
xor
mull
adc
es
fcmovnbe
loop
pop
mov
aam
cltd
shlb
cmc
inc
jb
imul
cmpl
mov
add
add
add
jmp
loop
jo
sub
push
add
cmc
add
add
cs
xchg
dec
stos
inc
and
aam
mov
sub
cmpsl
push
mov
dec
inc
iret
imull
jns
orb
sub
in
imul
sbb
das
jecxz
in
jo
and
imul
jb
sahf
jecxz
adc
xor
xor
cmpsb
push
xchg
stos
mov
sub
int
xchg
hlt
pop
sbb
cmp
ds
fbstp
push
push
std
aaa
lahf
add
mov
das
scas
push
test
inc
loop
or
dec
lds
iret
or
or
fcomip
mov
orb
push
push
rcll
push
ljmp
iret
inc
and
push
pop
repz
or
push
lods
and
inc
imul
adc
dec
add
es
pop
or
push
jl
push
clc
jg
idivl
add
add
xor
idivl
inc
stos
jne
pop
add
cmc
add
add
loop
negb
cltd
mov
jecxz
or
inc
push
jmp
mov
xor
mov
ljmp
lret
movsb
dec
sub
jl
xor
add
cmc
lret
mov
negb
cmp
mov
xchg
out
and
aad
mov
push
jo
pusha
pusha
jg
push
stc
and
push
shr
ss
or
push
sbb
xor
dec
in
mov
arpl
xlat
ret
fists
jo
mov
lock
stc
mov
dec
jle
jg
adc
jb
pusha
mov
push
popa
dec
int
daa
rol
ret
aad
push
cmovge
add
or
and
push
iret
jne
repz
enter
cmp
mov
cs
push
stc
shrb
fidivs
call
cmp
pop
xchg
aam
rclb
pop
sbb
fsubrp
loope
stc
movl
add
add
cli
inc
jg
int
pop
sbb
add
add
cmc
add
add
mov
sub
xor
in
sub
fstpl
fwait
mull
in
jo
insb
mov
mov
mov
ret
cmp
mov
inc
dec
fdivr
inc
adc
add
nop
jne
xchg
mov
cmp
inc
repz
add
xorb
ret
and
fidivrl
xor
insl
ss
mov
lock
adc
icebp
sbb
jmp
loop
xchg
jmp
cmp
jmp
xchg
push
xchg
hlt
push
jo
scas
mov
pop
and
jne
adc
dec
test
idiv
sbb
lret
int3
js
sbb
ss
subb
ja
test
push
push
sub
xor
arpl
inc
repnz
push
push
xor
pop
mull
sbb
scas
inc
ror
hlt
xor
fisttpl
xchg
jp
add
lock
std
cmp
jle
fisttps
cmp
xchg
and
add
add
add
sti
psadbw
sbb
shlb
adc
imul
popa
int3
jecxz
mov
pop
jmp
cmpsl
mov
mov
popf
cmp
xchg
aas
fstps
adc
mov
xor
fs
jnp
jge
xorl
aas
cmp
stos
inc
sub
add
fimull
cmp
pop
fxam
push
sti
js
mov
pushf
push
inc
stos
dec
nop
notl
enter
popl
jp
dec
or
in
push
fldt
mov
call
sbbb
cmpsb
pop
dec
ds
cwtl
fstpl
sbb
aad
pop
scas
ljmp
loope
xor
lret
jb
mov
xchg
insb
dec
push
inc
stos
inc
cmp
jecxz
es
insb
sub
cmp
adc
add
iret
xlat
ficoml
movsb
jbe
int3
and
add
add
add
dec
shlb
sbb
xor
sysenter
mov
and
out
cmpsl
adc
dec
pop
add
jbe
cli
data16
mov
movsl
mov
test
nop
push
sub
loopne
mov
stc
pop
cmc
insb
push
adc
prefetch
jp
or
or
mov
cli
pop
ret
jp
push
dec
cwtl
sub
stos
pop
sub
dec
mov
icebp
or
xor
incl
pop
das
mov
add
mov
test
push
rolb
test
xchg
cmp
test
jo
dec
es
sbb
call
pop
dec
and
sub
sbb
adc
or
icebp
mov
jmp
cwtl
sti
adc
xchg
pushf
pop
scas
push
mov
mov
xchg
or
add
sbb
in
aad
loopne
in
lods
scas
fstl
rolb
add
sub
iret
outsb
jmp
rcll
cmp
add
cmc
add
add
lods
shlb
pop
mov
in
scas
pushf
jne
outsl
xor
insl
in
imul
ret
test
fstl
mov
imul
jns
mov
test
or
sbb
lret
mov
mov
outsb
testb
adc
inc
push
xchg
cmp
lods
xchg
jb
pop
sbb
out
mov
xor
xchg
out
sahf
les
mov
cmp
in
mov
int
mov
cmc
pop
or
jns
mov
stc
test
inc
pop
push
mov
pop
xchg
xor
sub
mov
mov
aaa
jne
push
nop
sub
mov
mov
pop
fsubs
inc
data16
push
push
inc
pop
cmc
jmp
jmp
cmpsl
sbb
push
imul
cmp
and
es
lahf
ret
sub
add
add
std
sbb
stc
cld
or
lods
mov
add
cmc
add
add
out
jl
int3
lods
lret
pop
ss
sub
hlt
mov
es
outsl
bound
add
leave
movsl
dec
mov
xchg
push
and
and
es
inc
mov
test
cmp
fisttpl
jge
stc
pop
mov
fsincos
aas
aaa
xor
xchg
fisubs
inc
fsubrp
cmp
mov
pop
iret
jbe
subl
pop
pop
ffree
sub
lahf
xor
mov
subl
push
xchg
push
das
repz
decb
mov
clc
mov
push
jb
ja
bound
andl
in
mov
ljmp
mov
push
sub
push
stc
xchg
adc
inc
add
add
pop
test
scas
repz
cld
cmp
jl
jmp
and
add
cmp
add
cwtl
lahf
bnd
jmp
xchg
shll
lahf
inc
addr16
push
rcrb
sbb
inc
in
call
add
pusha
mov
inc
jg
or
out
fsubl
fsubrs
dec
push
and
xor
push
loope
adc
dec
mov
insb
or
xchg
sahf
leave
aad
imul
aaa
inc
cs
movsl
sbb
jmp
cmp
jge
leave
mov
imul
jb
cwtl
push
jl
sahf
jl
insl
push
pop
add
xchg
sub
mov
dec
rorl
adc
mov
pop
test
in
cmp
xchg
sub
insl
xchg
xchg
and
into
test
push
sub
adc
push
enter
push
outsb
push
dec
mov
lcall
xchg
add
adc
jp
test
pop
popa
stc
add
add
add
dec
pushl
dec
push
les
add
cmc
add
add
fisubrs
xor
ljmp
mov
in
dec
add
mov
iret
stos
out
test
pop
pop
sbb
dec
cmc
loopne
in
cmp
pushf
cmp
cwtl
sub
mov
js
pop
sahf
xchg
jae
pushf
add
test
mov
add
les
outsb
ja
out
jne
pop
add
mov
dec
mov
mov
cmpsl
xor
push
pop
popa
lret
mov
dec
cmp
ds
lcall
mov
das
arpl
and
lock
xchg
ret
xchg
mov
nop
cmp
push
xchg
and
enter
sbb
je
iret
jbe
add
pop
addb
in
mov
shr
sub
dec
nop
xchg
fbld
xor
jle
popa
add
add
inc
ja
pop
aas
pop
pop
inc
adc
ret
cs
cmc
add
add
push
mov
pop
lds
loopne
lret
add
dec
outsl
xchg
dec
sbb
xor
subl
arpl
cmp
aam
xchg
sbb
mov
js
sbb
mov
xchg
push
leave
out
cmp
and
xor
sbb
xchg
xor
jb
push
sub
aam
xor
mov
fistl
ds
jmp
dec
jnp
push
or
ss
shrb
and
jg
enter
pop
divl
adc
rcll
mov
in
dec
mov
js
push
inc
movsl
push
push
clc
mov
mov
int
jae
dec
mov
and
xchg
push
dec
scas
mov
mov
sbb
cs
pop
jbe
movsb
daa
jbe
dec
inc
xchg
jbe
lock
or
add
repz
jae
ja
div
dec
lods
push
mov
push
rorb
add
add
icebp
push
movl
xchg
sub
cmp
fistpl
ja
xor
add
das
and
cmp
aas
adc
sbb
mov
movsl
mov
push
xchg
addr16
cmp
aam
xor
repz
mov
pop
xchg
fstpl
adc
or
jb
push
add
pop
movsb
stos
sbb
mov
test
ljmp
cmpl
insb
jo
cmc
inc
adc
test
sarb
add
cmpsb
nop
test
pop
ja
jnp
cmp
pop
dec
inc
cmp
out
fwait
xchg
sahf
and
inc
and
add
lret
in
insb
lea
add
and
jge
adc
out
and
sub
lret
inc
pop
test
xor
cli
std
jg
into
jno
das
adc
add
cmc
add
add
pop
mov
or
scas
pop
push
leave
cmpsl
jle
cmp
xchg
sbb
imul
dec
das
adc
sbb
sbb
cmpb
push
in
out
inc
pop
imul
cmp
sahf
jge
js
dec
inc
enter
jmp
dec
in
shlb
stos
aas
cld
push
xor
add
pusha
fst
sub
and
jl
inc
mov
dec
imul
rcrb
jns
mov
mov
xchg
fistps
dec
jno
inc
subl
inc
inc
loop
lahf
fildl
gs
out
dec
enter
repz
inc
data16
dec
std
and
jge
pop
pop
mov
cmp
jge
loope
jnp
mov
jne
sbb
fcmovbe
movsb
xor
mov
push
xor
sub
add
dec
jne
nop
repz
test
jae
outsl
add
add
add
mov
std
incl
sub
pop
pop
adc
add
cmc
add
add
xlat
std
aam
ret
jmp
push
cmpsb
cmpsl
pop
stc
rorl
sub
call
cmpsb
xchg
mov
mov
clc
sub
cmp
adc
mov
xor
xchg
push
jae
and
xor
mov
jmp
lods
and
lret
jp
push
mov
lcall
test
repz
pop
jae
aaa
lods
cmp
push
sbb
inc
lods
dec
push
mov
ret
sbb
movsl
mov
cmp
into
sub
jnp
lcall
and
in
pop
imul
test
aad
in
dec
test
out
cmpsl
loope
xchg
ds
sbb
and
loopne
xor
xor
sbb
or
pop
xchg
cmovbe
je
hlt
inc
add
sub
dec
pop
sub
scas
sti
orl
es
inc
out
enter
bound
push
es
jg
pop
xorl
push
mov
ja
sub
add
add
add
ss
mov
adc
mov
mov
scas
orl
push
dec
mov
test
dec
in
mov
add
repnz
stos
cwtl
dec
pop
sub
movsl
pop
xchg
mov
cmc
shrl
cltd
jnp
je
fsubp
pop
add
cld
enter
sub
dec
push
imul
jle
mov
dec
mov
sti
int3
outsb
xor
sbb
dec
ret
inc
sbb
jmp
leave
ret
xchg
mov
out
fmuls
and
xor
fistpl
jl
sub
int3
sub
pop
es
mov
or
shll
mov
fnstenv
sbb
test
lret
and
fdivr
out
mul
pusha
xchg
out
inc
pop
push
sub
inc
jmp
xlat
add
xor
xchg
pop
pop
jecxz
out
inc
ret
lds
das
fstps
scas
lret
adc
lods
fiaddl
aas
mov
add
add
or
cmp
mov
add
cmc
add
add
fwait
jb
cmpsb
xor
add
and
movsb
dec
test
fwait
test
pop
mov
mov
push
xchg
iret
jp
mov
push
inc
xchg
vaddsubps
sbb
push
out
stc
loope
push
pop
cmp
scas
stc
and
add
xor
or
movsl
in
mov
pop
jg
ds
jp
xchg
xchg
cmp
inc
jge
lcall
nop
and
mov
add
jo
sbbl
xchg
mov
cltd
sub
and
xchg
fs
imul
stc
dec
sub
ss
ficoms
lock
std
cmp
movsl
imul
push
fs
out
push
loope
cmpsl
and
cmp
adc
sub
mov
int
call
push
into
ljmp
enter
mov
clc
cltd
in
mov
adc
pop
add
add
stc
lods
xor
ja
pop
into
mov
add
add
add
rolb
xchg
add
outsb
or
add
jnp
and
push
rorl
lret
push
add
out
subl
idiv
cmc
out
jns
add
hlt
call
sbb
inc
adc
or
inc
leave
cmp
jo
cmpsb
js
push
mov
mov
cmpsb
or
jmp
fimull
jae
xchg
mov
out
fldcw
mov
mov
mov
mov
out
sbbb
icebp
jp
sub
fwait
inc
mov
dec
add
inc
cmpsb
lods
jp
push
xor
pop
popf
roll
sub
xchg
ss
or
imul
xchg
or
rol
adc
mov
adc
es
mov
movsl
xchg
fs
xor
je
sbb
in
adc
add
fwait
pop
fucomip
pusha
xor
add
add
ficoms
stos
sbb
ljmp
mov
mov
add
cmc
add
add
out
jno
sarb
jno
push
mov
mov
in
test
stc
xchg
xchg
push
push
cmpsb
popf
jb
fildll
xor
push
and
pop
jp
in
mov
addr16
cld
inc
mov
xchg
repnz
or
xlat
movsb
sbb
loope
imul
lret
or
or
and
lock
out
mov
lret
popf
dec
shrb
popa
jbe
rcrb
sbb
in
cld
jmp
in
sbb
bound
sub
jnp
add
mov
pop
sti
pushf
fs
mov
cmp
inc
or
xchg
shl
pop
outsl
sbb
test
adc
inc
or
mov
andl
in
aad
add
pop
add
inc
loopne
fisubrl
xchg
sti
iret
out
popa
mov
xchg
sbb
cmpsl
mov
rorb
jmp
add
add
in
out
sbbb
sbb
cmp
add
add
mov
lret
mov
and
add
inc
data16
and
test
cwtl
cmp
jb
out
repz
icebp
test
aas
sbb
stc
icebp
mov
lds
mov
loope
add
cmpsl
orb
pop
xchg
sbb
mov
jecxz
pop
sub
cld
das
mov
popl
cmpl
mov
jne
mov
cmpsb
xchg
imul
lock
scas
cmp
lock
mov
pop
sub
inc
adc
std
daa
jnp
iret
iret
in
or
jo
std
mov
lods
mov
stos
inc
inc
scas
push
rdmsr
dec
mov
push
add
fdivl
insl
sbb
jecxz
fiadds
inc
rcll
lods
into
imul
cli
pusha
pop
mov
mov
xor
adc
outsl
inc
sbb
jb
push
sub
or
xchg
test
pop
pop
xor
loopne
add
dec
or
out
aad
jo
pop
xchg
stos
sub
xor
add
add
add
dec
cli
pop
cmp
int3
cmp
pop
test
fists
out
mov
loopne
jmp
adc
popa
lret
adc
mov
pop
popa
sbb
pop
repnz
ja
push
inc
adc
pop
pop
std
loop
pop
stos
or
stos
cld
inc
sti
and
mov
ljmp
xchg
jmp
aaa
sub
or
adc
pushf
cmp
test
pop
sbb
push
dec
xor
push
aam
jmp
mov
stos
nop
repz
xchg
sub
fisubrs
dec
mov
xchg
outsb
in
push
add
inc
cmp
lods
pop
stos
pop
es
dec
dec
push
test
xchg
scas
in
add
inc
add
jecxz
mov
ret
fnsave
pop
sbb
mov
testb
add
in
add
cmp
out
dec
lret
fstpt
daa
xor
add
add
add
mov
sbb
sub
cld
jle
or
jno
bound
inc
iret
push
sbb
iret
xor
xchg
sub
in
fdivs
cmp
xchg
ja
mov
dec
mov
push
jae
sarb
rorb
mov
mov
mov
inc
pop
inc
pop
inc
add
jno
lods
jp
in
xor
dec
cld
outsl
adc
es
fsubl
push
enter
xor
xor
mov
inc
repnz
dec
stos
pop
mov
cmp
xchg
push
mov
popf
sub
lret
imul
ret
jg
dec
mov
sbb
push
dec
xor
das
lret
bound
sti
xor
pushf
sbb
pop
hlt
insl
cmp
in
leave
in
sub
or
sub
lcall
inc
sub
pop
inc
push
mov
add
test
sbb
out
add
lods
int3
mov
stc
sbb
add
cmc
add
add
cmp
das
mov
cmpsl
mov
sbb
mov
iret
jnp
and
roll
adc
xor
notb
and
aad
decl
inc
mov
jl
inc
sub
mov
cli
dec
addr16
add
adc
xchg
imul
fsubs
packuswb
push
rorb
and
stc
cmpsb
xlat
int3
dec
setl
enter
sahf
inc
and
loop
and
iret
inc
xchg
repnz
cmpsb
or
add
fdivs
mov
or
pushf
cmp
fdivp
aaa
xchg
mov
push
xor
mov
push
int
nop
push
mov
jae
cmp
sbb
xor
jge
das
and
rclb
popa
in
lret
jnp
or
shll
add
xchg
pop
scas
jno
push
rorl
xchg
add
mov
mov
fldcw
fiadds
add
mov
dec
idivl
cld
add
adc
cmp
xor
add
add
add
push
int
mov
push
frstor
ds
test
ss
and
int
scas
insl
insl
jno
mov
jnp
mov
fdivrl
pop
and
insb
or
pop
mov
int3
xlat
push
fnstenv
arpl
and
adc
push
jecxz
pop
pusha
ds
popa
dec
mov
pushf
movntps
ret
add
mov
stos
jg
std
cs
mov
aaa
dec
fadds
aad
cltd
or
in
mov
jle
or
lds
hlt
arpl
adc
xchg
mov
movups
cmp
and
push
lock
rorb
mov
lods
in
pushf
dec
mov
scas
cld
es
js
inc
add
dec
ficompl
jg
and
xchg
outsl
jge
dec
push
mov
inc
incb
add
ret
mov
iret
mov
xchg
sub
push
xor
add
add
add
inc
inc
sahf
pop
lcall
push
or
arpl
cltd
cli
sbb
mov
and
add
pop
cmc
arpl
xchg
xor
lret
push
sbb
mov
lods
daa
sti
push
adc
inc
int
jae
ss
jno
dec
dec
inc
mov
mov
fbstp
dec
sar
sbb
jb
in
pop
notb
into
sarl
out
je
das
or
bound
jmp
dec
xchg
out
xor
inc
mov
or
dec
stos
shll
or
sbb
int
sbb
and
dec
pop
lods
jno
mov
or
pop
insb
mov
stc
hlt
pop
push
mov
pop
divb
or
stos
mov
out
fistpl
int
pop
inc
lret
dec
xchg
adc
mov
fs
push
cmp
jbe
int3
push
lret
lret
lds
ret
sbb
mov
add
or
sbb
lret
sti
xor
add
add
add
sub
sbb
sub
aas
je
xchg
mov
fwait
or
pop
sub
iret
push
adc
adc
mov
out
jns
lock
jg
test
adc
cmpsb
scas
les
mov
dec
mov
adc
int3
cmp
cmp
lcall
ss
lret
or
pop
inc
pop
xor
imul
and
popa
lock
loope
lret
test
mov
outsb
aad
or
mov
icebp
mov
lret
fwait
xchg
cmp
stc
lods
mov
stos
orl
mov
jae
dec
pop
dec
xor
inc
in
iret
test
jne
pop
and
cmc
sahf
add
aas
test
mov
fwait
push
imul
cmc
rcrb
adc
xor
icebp
xchg
jge
add
add
xor
clc
cli
clc
sarb
repnz
inc
aam
lds
lock
add
or
sub
lods
ficoms
push
jne
or
fiadds
mov
push
sbb
mov
sub
insl
popf
jae
adc
mov
mov
pop
jp
hlt
shl
stc
fs
filds
mov
ret
mov
lret
cmp
mov
movsl
mov
adc
mov
in
mov
stos
leave
call
ja
jnp
fcmovnb
test
rcll
mov
pop
xchg
call
or
inc
xchg
or
hlt
test
mul
xor
cli
jmp
inc
nop
in
lds
into
add
in
je
sub
ljmp
data16
jne
cmp
jbe
xor
rcr
cmp
out
mov
icebp
sbb
push
ja
push
lret
int
aaa
out
xchg
add
add
jnp
out
push
lcall
in
add
cmc
add
add
ret
mov
mov
xor
push
cmp
lcall
in
push
lret
repz
push
roll
pop
fwait
sar
sahf
inc
xchg
outsl
add
idivl
push
pop
add
pop
ret
in
repz
addr16
adc
cmc
push
aad
or
add
cmpsb
dec
fcmovnu
outsl
and
xor
out
pop
dec
imul
cmp
enter
jns
and
inc
repnz
sbb
ss
jp
mov
push
pushf
sub
mov
call
sbb
lret
jns
rcl
xlat
mov
jno
ds
arpl
inc
aam
lret
cmp
xchg
jl
xchg
cmpsb
and
pop
cmpb
push
lahf
js
cmp
test
push
nop
je
pop
or
call
xor
add
xchg
sub
jo
jmp
add
es
data16
cmc
jle
dec
xchg
sub
push
fidivl
add
cmc
add
add
jge
mov
push
xor
popf
negl
jl
test
push
mov
clc
in
and
jne
mov
imul
fxam
mov
pop
pop
lock
call
pop
dec
cmp
subl
xor
mov
xchg
hlt
imul
mov
pop
mov
ds
and
mov
push
xor
ja
stos
arpl
out
cmp
repnz
jmp
pop
lahf
rclb
xchg
scas
in
outsb
das
mov
and
mov
insb
jbe
jecxz
mov
xchg
dec
cmp
bound
inc
sbb
daa
test
xlat
xchg
fnstenv
stos
push
mov
pop
inc
mov
xor
mov
jns
scas
rorb
xchg
jmp
mov
jmp
add
add
dec
mov
imul
lret
bswap
cmp
add
add
add
mov
das
loope
rol
mov
fs
mov
fmull
xor
sub
lret
popa
and
lock
add
sub
cli
leave
xchg
xor
mov
xor
mov
dec
cmp
xchg
mov
jmp
dec
faddl
adc
dec
jno
pusha
mov
push
mov
jge
xchg
fdivs
xchg
pop
add
add
dec
fistpl
jo
jle
in
jnp
mov
dec
add
pop
mov
and
fsubp
push
jmp
dec
outsb
sar
sbb
rcrb
fistl
jno
repz
cmp
ds
es
call
push
push
pop
insb
fs
add
cltd
adc
fldt
fdivl
call
sbb
orl
xor
icebp
add
push
sbb
popf
insl
pop
cli
outsl
cwtl
add
add
and
push
sti
cmpsl
pop
push
jo
hlt
lret
pop
stc
les
add
cmc
add
add
iret
mov
scas
outsb
repz
popf
add
sbb
sub
sar
mov
test
call
xchg
aam
jns
mov
lret
orb
imul
enter
cmpsl
lcall
sub
stos
pushf
leave
mov
aad
test
sub
push
mov
in
imul
cmc
or
sbb
int
shr
rorl
jns
insb
mov
into
arpl
and
add
xor
mov
push
lss
jb
imul
into
dec
stos
sbb
xchg
mov
mov
loope
inc
push
adc
bound
xchg
hlt
lock
pop
jne
fs
in
in
pop
ss
popa
dec
shll
lcall
cmp
xchg
les
push
shr
xlat
mov
xchg
imul
dec
jle
push
mov
add
add
mov
std
cmp
psubw
mov
add
add
fistpl
cmp
xchg
outsb
sbb
push
xor
push
pop
out
ljmp
pop
stos
shrb
jo
add
int
cs
jge
sub
fmuls
xchg
cmp
bswap
pop
int
in
and
inc
fstpt
jno
lods
shlb
cmpsl
adc
roll
inc
repnz
push
xchg
xor
mov
mov
lds
mov
dec
stc
mov
dec
in
ljmp
aad
mov
in
add
mov
cmpb
outsl
adc
sub
push
adc
and
loopne
aam
inc
push
les
std
imul
jge
enter
cmpsl
mov
mov
push
outsl
mov
jg
inc
sbbl
sub
repz
lcall
lods
cmp
adcl
fs
mov
insb
mov
jae
inc
cmpsl
jnp
add
add
and
jecxz
or
scas
cmp
add
add
add
cmp
mov
push
test
mov
fs
enter
fmul
imul
fldl
mov
or
mov
movsl
dec
cmp
inc
mov
sahf
loope
subl
cmp
cmp
rclb
add
mov
into
dec
iret
bound
add
xor
jns
icebp
in
mov
mov
stos
pushf
add
clc
fmull
fsubrl
inc
jmp
negl
addr16
mov
std
pop
xchg
in
jp
add
mov
loop
cmpsl
test
adc
jno
inc
inc
in
fisubrl
loope,pn
mov
mov
ljmp
outsl
mov
rep
je
in
dec
cld
mov
push
andb
scas
mov
pop
adc
dec
movb
loopne
movb
add
add
xchg
ficomps
push
push
popa
mov
add
add
adc
mov
rcll
aaa
movsb
iret
mov
sbb
xchg
insl
cmpsl
jb
push
add
repnz
test
stc
scas
jmp
divb
test
xchg
mov
hlt
lea
mov
jmp
jo
in
loopne
shll
inc
pop
jg
xchg
decl
mov
mov
fildll
ret
jns
dec
mov
pusha
mov
fwait
sub
inc
in
mov
inc
ret
jno
dec
or
mov
lods
adcb
mov
loope
fwait
or
enter
dec
inc
push
mov
push
aam
test
mov
call
out
push
push
jnp
mov
xor
pop
inc
std
dec
mul
adc
mov
loop
dec
shll
mov
jmp
mov
cwtl
movsb
or
mov
sub
sub
lret
cmp
add
lods
xor
mov
pop
add
leave
je
cwtl
cmp
add
in
js
rcr
clc
dec
popf
scas
inc
repz
inc
jo
sub
idivl
and
fldl
divl
inc
inc
fnstsw
mov
sbb
sbb
fs
lret
push
sbb
push
mov
adc
pushf
cmp
mov
and
push
sarl
repz
in
ja
or
pop
pushf
cmp
int
in
and
add
xor
dec
dec
ss
jo
push
lret
mov
push
sub
fwait
lea
add
inc
sub
dec
ror
mov
ss
hlt
xlat
xchg
mov
lds
jecxz
push
and
push
outsb
imul
outsb
sub
js
fsubrl
repz
push
je
in
std
hlt
stos
js
call
push
push
mov
popa
xchg
xor
add
add
lret
mov
cwtl
sbb
sub
add
cmc
add
add
mov
or
clc
aad
out
and
adc
mov
std
inc
mov
leave
mov
inc
mov
jge
push
loop
notl
and
xchg
jmp
xchg
inc
lret
imul
jmp
push
push
outsb
cmp
push
inc
stc
frstor
cltd
inc
push
aas
out
push
cmpsb
call
xor
test
push
call
pop
push
pop
ja
xchg
cmp
lods
lcall
in
mov
das
mov
movsl
test
test
push
jbe
jecxz
adc
sbb
loopne
xchg
sbb
int3
sub
shrl
push
mov
mov
fisubl
push
push
inc
jecxz
sbbb
test
es
add
sub
push
aas
in
mov
inc
arpl
cmp
mov
xor
or
sub
sti
pop
jge
div
cmp
mov
mov
add
add
add
scas
mov
jge
ja
bound
shlb
daa
sub
mov
mov
fisubl
mov
fdiv
push
xchg
dec
push
adc
addb
aas
xor
sbb
jmp
sub
jbe
inc
pop
cmc
mov
sbb
inc
sub
int3
icebp
das
fdivl
out
or
jmp
rorb
pop
mov
cmp
sub
mov
sbb
into
mov
aaa
or
mov
dec
mov
fs
ss
sahf
adc
adc
pop
sbb
and
clc
xchg
mov
push
jbe
cld
leave
mov
jns
jno
bsr
fisubrs
sbb
sahf
inc
lea
adc
lea
aas
mov
mov
jle
cltd
notl
stos
xorb
ret
push
add
add
fsub
std
in
popf
jle
es
sbbl
cmc
add
add
scas
and
out
xlat
inc
cmpsb
addr16
or
and
das
cmc
in
add
pop
lret
pop
loopne
xchg
and
mov
enter
mov
jnp
or
aaa
xchg
mov
lods
jle
sub
fidivrl
push
xor
repz
cmp
pop
test
xchg
pop
mov
pop
mov
sbb
lods
sbbl
icebp
insb
mov
adc
mov
leave
and
je
adc
add
mov
fsubr
cmp
adcl
push
lret
cmp
fisubrs
fwait
pop
cmp
adc
bound
inc
adc
mul
hlt
int
pop
andb
in
sti
stos
jmp
lcall
inc
pop
aam
xor
scas
cmp
mov
sbb
sub
xor
add
scas
sbb
add
pop
jp
jnp
sti
xchg
jle
popf
loopne
movsb
gs
insb
inc
add
cmc
add
add
sahf
rolb
jge
mov
testl
sarl
jno
enter
pop
xor
ja
cmp
mov
pop
pop
or
push
push
rcrb
or
mov
cmc
nop
jge,pn
aam
push
out
aam
cmp
push
push
ja
popf
nop
inc
sub
pop
dec
adc
sub
jb
jge
loopne
pop
push
and
jne
ds
xor
sbb
and
out
je
out
mov
cmpsl
dec
inc
xchg
and
test
inc
insl
inc
sub
xor
out
cmp
cld
sbbb
inc
fsubs
dec
mov
or
pop
xchg
scas
idivb
nop
dec
bound
lds
push
dec
sar
jb
push
aad
push
cltd
dec
cmpsl
xor
pop
test
out
mov
lret
enter
shlb
mov
inc
addb
add
mov
push
sti
loopne
cmp
xchg
out
cmp
add
cmc
add
add
inc
hlt
pop
std
xor
shll
push
pop
mov
and
push
and
in
cltd
mov
out
stos
insb
in
push
xchg
loope
outsl
repnz
insb
jb
and
and
jno
scas
leave
loopne
test
add
popa
cmp
lods
add
mov
cmc
icebp
sub
mov
leave
and
aam
dec
inc
mov
nop
dec
jbe
pop
das
lahf
or
mov
jecxz
add
ficomps
mov
xor
cld
and
xor
inc
add
inc
dec
fildl
fiaddl
int3
data16
into
repnz
sbb
dec
push
les
xchg
cmp
out
push
dec
or
sub
enter
sar
pushf
rorl
int
add
push
ret
cmp
and
push
dec
pop
lcall
cmc
add
add
pop
cmp
sbb
push
insl
mov
jnp
pushf
cld
and
sbb
push
xor
xchg
jg
shrb
dec
adc
adcb
fcomps
fmull
pusha
cmp
cmc
lret
into
out
adc
addl
and
adcl
dec
arpl
jbe
dec
jmp
pop
pop
mov
inc
es
pusha
mov
iret
iret
jnp
and
ret
loop
jle
lods
pop
xor
mov
add
insb
iret
pop
bound
iret
aad
cwtl
push
andb
mov
xor
add
push
push
pop
jmp
inc
mov
faddl
les
inc
xchg
daa
inc
or
mov
mov
lret
loopne
loopne
lret
and
inc
stos
xchg
pop
loop
fbstp
imul
or
sub
aad
icebp
xor
mov
jae
mov
add
cmp
jge
stos
movsl
push
arpl
mov
add
cmc
add
add
add
inc
data16
test
mov
je
or
and
pusha
adc
sub
icebp
mov
and
jg
xlat
push
sarl
out
insb
std
icebp
hlt
aad
icebp
ss
outsl
push
cli
cmp
xlat
adc
dec
and
jae
pushf
jbe
fiadds
add
adc
cltd
addl
dec
ret
test
cmc
cld
pop
mov
roll
pop
jg
cmp
fs
sahf
inc
outsl
out
inc
les
pusha
clc
out
fs
jb
xchg
add
mov
pop
inc
out
call
movsb
ficompl
testl
aaa
testl
xchg
jnp
scas
xor
pop
ret
or
sarb
cs
or
in
or
fdivp
inc
or
add
divb
rclb
mov
or
cmc
add
add
fdivrs
pop
out
insl
mov
jb
popf
int
xchg
inc
popf
pop
in
add
in
push
scas
loope
push
lock
push
xchg
fwait
lock
adc
jno
sbb
out
xchg
adc
push
cmp
idivl
jmp
xor
cli
fsubr
sub
bound
xchg
scas
out
dec
mov
push
gs
inc
xchg
cmp
cmpsl
push
rorl
stos
scas
add
aas
push
lret
jge
movsb
ret
push
icebp
in
push
lret
sub
jmp
fcoms
inc
xor
jb
sub
mov
push
push
and
in
sbb
adc
mov
out
xor
sub
pop
inc
dec
jbe
mov
cmp
lcall
negl
outsl
pop
dec
idivl
bound
or
jl
dec
jbe
idivl
ss
repz
or
inc
add
cmc
add
add
push
add
xor
fwait
xchg
and
dec
mov
dec
sti
xchg
adc
mov
jmp
sub
repnz
push
repnz
push
xchg
mov
je
out
out
mov
pop
add
je
movsb
jno
pop
adc
test
into
adc
das
jae
notl
push
andps
xor
mov
and
mov
add
mov
push
lret
stos
sbb
jo
int3
cltd
cbtw
cmpsb
popf
jne
inc
sub
xor
and
setle
andl
stc
mov
dec
fcoml
inc
xchg
sbb
jo
in
inc
push
cld
inc
mov
es
outsl
xchg
hlt
lock
xchg
stos
in
cmp
pop
sbb
aas
sub
mov
flds
add
in
outsb
inc
inc
aaa
sub
fldl
add
inc
arpl
add
and
outsb
sub
stos
fs
cmp
xor
sub
add
add
add
jo
sub
stos
pop
lahf
lret
ret
jl
pop
out
xchg
dec
not
ds
push
pop
or
roll
sti
xchg
mov
pop
mov
not
je
stos
and
xor
mov
dec
sbb
ja
push
lret
xchg
push
xchg
push
push
cmp
das
adc
dec
cmp
adc
sbb
fisubs
mov
adc
cmp
xchg
mov
cltd
cmpsb
mov
call
iret
inc
or
aas
nop
bound
into
pop
xchg
jmp
lods
es
mov
cmpsl
les
aaa
das
enter
jnp
mov
out
jns
vprotd
icebp
in
jg
lahf
xor
mov
mov
inc
add
hlt
rcrb
mov
into
sbb
push
xchg
cwtl
jl
lret
push
lock
sarb
mov
fisttpl
sub
add
les
scas
fistpll
loop
mov
dec
add
cmc
add
add
or
iret
nop
jecxz
mov
push
mov
sub
cwtl
nop
in
das
pop
mov
imul
push
fwait
bound
insl
inc
jp
mov
xchg
inc
ret
adc
add
pop
loope
cwtl
iret
or
xchg
jnp
add
adc
sbb
je
les
pop
lretw
jnp
arpl
insb
je
pop
sahf
push
imul
ds
les
js
mov
and
mov
jmp
xor
ljmp
iret
js
or
cmp
dec
dec
fstpt
jge
pop
in
or
cld
cmp
push
fs
and
mov
imul
mov
pusha
pop
cmp
movsb
push
adc
aad
push
fisubrl
leave
mov
add
pop
fmull
mov
mov
or
pop
or
sarb
add
lret
add
add
cmp
les
ffree
adc
dec
add
cmc
add
add
rorl
mov
inc
adc
cwtl
mov
mov
cmpsb
imul
xorb
sub
add
scas
cmp
jno
push
ds
test
hlt
movsl
fldenv
mov
dec
pop
ljmp
sahf
mov
cmpsb
shlb
push
sub
adc
mov
stos
jnp
cld
inc
es
sub
cmp
ljmp
mov
mov
cmp
cmp
jecxz
pop
fs
and
subl
jnp
adc
stos
lods
cwtl
sbb
cmp
iret
mov
shl
xchg
sub
stos
mov
loope
gs
loop
fstl
movsl
loope
mov
mov
mov
int3
jge
pop
test
add
sbb
mov
cltd
enter
stos
pop
jl
imul
outsl
lret
mov
out
incl
arpl
mov
dec
add
cmc
add
add
out
out
add
pop
adc
stos
cmpsb
dec
outsl
xor
push
imulb
fistl
mov
fcompl
cwtl
inc
pop
push
ss
pop
cmpsb
jp
int3
xchg
adc
loop
push
ds
shrl
lods
stc
insb
mov
pop
ja
cltd
sbb
fmull
xor
add
subl
cmp
mov
jne
pushf
jbe
push
shll
dec
adc
adc
xchg
dec
mov
xor
xor
cmp
or
int3
sbb
xorl
inc
or
movmskps
fldt
hlt
jno
sub
add
or
dec
mov
xor
je
inc
add
addb
hlt
xchg
outsb
adc
test
lret
adc
mov
in
inc
pop
jb
and
push
test
fists
add
add
repz
cmp
lods
repz
in
pusha
out
mov
dec
add
cmc
add
add
mov
cs
push
inc
jle
sub
ljmp
add
add
cltd
sub
mov
mov
sub
jns
xchg
fiadds
jge
sub
out
int
and
scas
aas
arpl
imul
mov
dec
icebp
sbb
cmp
sarb
adc
jb
cmp
sahf
push
and
inc
dec
push
add
xor
mov
jno
pop
push
lcall
push
xchg
fs
dec
jae
rclb
push
jnp
mov
jp
or
dec
imul
and
movsb
popa
jbe
in
mov
aas
xchg
iret
pop
xchg
push
add
lcall
mov
stos
push
inc
lods
mov
push
adcl
pop
clc
mov
pop
pop
test
add
add
daa
push
cld
push
std
jmp
push
jg
push
pushf
cmpsb
inc
sub
dec
add
cmc
add
add
adc
add
mov
in
fstps
jp
xor
mov
fucomp
inc
std
loop
inc
es
ficoms
fldl
int
cmp
fisubrs
jl
sub
jmp
adcb
aaa
test
and
int
or
cmp
iret
out
xchg
push
xchg
sarb
jnp
xchg
cld
aas
jge
sbb
dec
xchg
and
jb
popf
xchg
push
daa
xchg
lea
addr16
int
frstor
inc
add
sbb
inc
or
adc
xchg
or
sub
shll
dec
call
rorl
insl
pop
mov
jle
push
add
inc
dec
mov
fidivs
sub
or
shr
jne
inc
ja
aas
cmc
stos
mov
fcomip
lahf
div
insb
pop
xchg
repz
add
dec
push
add
sbb
dec
push
cwtl
adc
js
adc
dec
add
cmc
add
add
jno
pop
adc
inc
mov
js
pop
gs
rcl
ljmp
lods
dec
xchg
in
aam
pop
jg
pop
stos
fdivrs
and
adc
mov
scas
adc
repnz
xchg
add
das
ds
fs
inc
xchg
xchg
addr16
dec
lds
pushf
notb
aas
jp
xchg
clc
xor
stos
xchg
aam
add
push
push
arpl
repnz
inc
mov
shufps
subb
sbb
cltd
push
jle
mov
pop
frstor
jnp
sub
popa
stc
xchg
push
pop
sbb
jb
jnp
and
loopne
push
dec
and
aas
inc
fisttpll
add
test
xor
fists
xchg
stos
in
mov
add
in
inc
jmp
lea
insl
out
popl
shlb
jmp
leave
and
add
stos
add
push
mov
mov
add
cmc
add
add
adc
enter
call
popa
and
test
sarl
pop
bound
and
out
in
sub
or
nop
data16
sub
jle
mov
and
and
test
mov
repnz
fdivl
mov
xchg
lock
lret
sbb
daa
sti
sub
lods
push
xchg
mov
add
sbb
int3
fdiv
cwtl
xor
sbb
sub
outsl
movsl
pop
cmp
mov
mov
lret
imul
inc
bound
inc
sbb
or
test
mov
into
add
daa
xlat
out
cmp
mov
mov
sbb
mov
test
pop
stos
out
sbb
xchg
mov
xchg
outsb
lcall
add
bound
and
jnp
flds
shrb
out
add
add
jg
xchg
lcall
in
dec
add
cmc
add
add
cmp
push
addr16
mul
out
stos
mov
outsl
leave
ret
push
cli
push
inc
stos
ss
push
lock
outsb
xor
loopne
dec
jmp
inc
push
testl
mov
inc
xchg
adc
xchg
movsl
dec
xorb
xchg
sbb
movl
leave
sbb
shll
movsb
outsl
or
push
push
ds
add
inc
out
gs
mov
mov
jb
mov
loope
enter
es
dec
adc
mov
gs
mov
mov
inc
lods
pop
ret
pop
mov
mov
rcl
sbb
addr16
mov
push
xchg
ret
das
lahf
sub
test
adc
xor
cmp
cmp
lret
inc
adc
pusha
adc
mov
lcall
and
dec
lret
jmp
imul
xchg
aad
cltd
push
hlt
dec
add
cmc
add
add
int3
add
jbe
adc
jb
sbb
jp
xchg
mov
xor
ret
mov
repnz
pop
mov
jns
or
jb
jnp
adc
pop
loope
fucomp
add
adc
cmp
addl
and
push
jmp
movsb
mov
pusha
add
push
or
jno
fcomp
std
test
cmc
and
mov
data16
mov
fcomip
in
dec
outsl
data16
mov
outsl
cltd
mov
mov
mov
pop
ljmp
pop
mov
call
mov
sub
adc
fisttpll
mov
test
fidivs
popl
sbb
testl
int
shrb
adc
mov
enter
sub
adc
push
repnz
add
cwtl
loope
std
jge
cwtl
and
insl
dec
xor
add
push
sub
inc
xor
push
pop
xchg
addr16
push
andl
iret
movsb
pop
and
jae
mov
dec
sbb
sbbl
mov
mov
cltd
out
rcll
or
mov
cmp
imul
sahf
in
mov
jge
xchg
data16
mov
mov
or
inc
imul
or
push
pusha
mov
imul
pop
loopne
add
pushf
add
mov
out
jp
cmpl
mov
xchg
sbb
scas
sub
cs
lcall
jbe
jmp
and
roll
or
mov
cmp
stos
cwtl
and
lds
sbb
out
enter
imul
pop
arpl
notl
test
mov
fiaddl
add
sub
jns
clc
mov
mov
push
add
cmc
add
add
in
data16
adc
mov
or
test
xchg
adc
adc
dec
int3
outsl
and
loop
sbb
lea
mov
pop
loop
xchg
sub
fs
inc
xlat
push
adc
push
mov
push
ret
jecxz
sub
dec
xchg
cmc
icebp
adc
or
jnp
addr16
jno
mov
sub
hlt
cmp
sti
or
sub
fstp
cwtl
sub
loopne
cmp
jae
aas
pop
cmc
cmp
dec
push
mov
int
inc
outsl
jne
jns
lods
push
pop
dec
mov
insb
jbe
fistpl
notb
mov
jns
mov
cmpsb
pop
mul
enter
mov
pushf
in
les
jmp
cs
in
loope
loopne
arpl
xchg
mov
jno
mov
fadds
add
js
ret
jg
mov
ja
js
push
add
cmc
add
add
jmp
cmpsl
inc
xor
cs
push
xor
sahf
les
hlt
mov
push
jl
test
lock
je
lcall
mov
adc
and
clc
adc
cli
dec
incl
and
sub
sub
adc
mov
fs
push
sti
outsb
inc
fwait
jnp
aam
mov
push
rclb
cmp
andl
push
lds
lods
jno
outsb
in
jo
inc
xchg
adc
stos
jnp
xor
aas
sub
jne
dec
gs
adc
cmp
lret
inc
cmp
push
aam
int
or
orb
mov
lea
pop
mov
fwait
xor
arpl
xor
pushf
pop
and
push
mov
cld
ret
fistps
or
sarl
push
insl
cmp
lret
xchg
insb
add
add
adc
mov
cwtl
out
daa
or
push
add
cmc
add
add
pop
int3
inc
cmp
addl
and
sub
ss
jo
add
pop
cmp
std
pop
clc
xor
addb
or
jg
mov
movb
ret
or
xchg
and
sahf
mov
sahf
lock
je
add
adc
sub
xchg
rcrl
outsb
mov
xor
mov
loop
hlt
std
mov
sub
mov
sbb
jo
jmp
sbb
jnp
sbb
out
add
ret
lods
stos
pcmpgtw
xchg
sub
and
cmp
out
fnstenv
orb
lods
mov
cmp
pop
xor
leave
inc
pop
lret
mov
daa
xlat
aaa
jecxz
testl
push
jge
add
sub
lock
pop
int3
inc
dec
xchg
popf
cld
in
sub
xor
inc
outsl
pop
add
add
hlt
gs
push
sub
cmp
add
add
add
xor
out
es
sbb
cmp
and
mov
dec
pop
in
test
bound
push
mulb
out
or
mov
vpunpckhqdq
outsb
mov
aaa
aaa
in
dec
jb
movsb
hlt
call
pop
sub
jb
and
in
cmp
ret
popa
cmp
inc
loopne
movsb
std
mov
xchg
jecxz
aam
gs
aas
mov
clc
cmp
test
lods
fldenv
add
aad
aad
sbbb
push
add
imul
xor
cmp
mov
jecxz
ljmp
divb
movsl
jne
outsl
cli
xchg
popf
jnp
test
sbb
jns
sub
les
adc
cmp
je
mov
lahf
enter
mov
inc
inc
mov
notl
inc
rclb
insb
jmp
inc
jb
push
xor
add
add
aas
gs
repnz
and
xchg
and
test
add
add
add
inc
sub
imull
dec
in
jae
ss
jg
inc
xchg
jle
cmp
jbe
testb
leave
lods
add
mov
aaa
mov
push
in
orl
popf
lds
sub
stos
dec
mov
inc
mov
cmp
mov
mov
mov
sub
fnstenv
addl
mov
mov
cmp
sub
and
cmp
lret
leave
sub
mov
iret
sbb
mov
pop
sahf
fbld
shll
sbb
adcb
push
into
add
test
xchg
pop
sbb
cmp
mov
fld1
cmpsb
icebp
leave
dec
lcall
sub
xor
aas
mov
dec
xor
icebp
inc
pushf
cltd
or
xchg
mov
mov
out
fisttpll
mov
jp
add
cmc
add
add
push
jg
jl
cwtl
lret
movsb
mov
outsl
movsb
lahf
out
mov
and
inc
insl
lods
stos
sarl
mov
cmp
jl
and
inc
push
outsb
and
fcomps
dec
out
xchg
jge
push
mov
or
push
stos
cmp
pop
inc
gs
loope
loop
lods
pop
xchg
pop
and
and
outsb
pop
xchg
cmp
bnd
sub
int3
les
xor
cmpsb
ja
insb
nop
out
call
lods
jmp
push
xor
cmp
shlb
bound
enter
clc
sub
sbb
mov
push
or
mov
xor
push
call
aad
lahf
mov
je
xor
pop
in
push
fwait
dec
add
mov
and
cwtl
sbb
hlt
fdiv
jge
xor
lret
test
test
xorl
add
add
mov
arpl
outsl
push
add
cmc
add
add
movsb
ret
add
mov
lds
imul
sbb
cmp
cmp
adc
int3
push
or
out
or
and
jne
pop
test
fistl
push
xor
adc
ret
mov
int3
movsl
subl
adc
inc
push
and
insl
ss
jb
xchg
and
push
mov
pop
rcl
jge
ss
cmpl
rolb
movsl
test
inc
inc
push
mov
ret
filds
mov
adc
jbe
fistps
int
mov
aas
leave
mov
push
lcall
ja
sub
lock
jo
das
aas
adc
xlat
push
sarb
add
std
or
dec
sbb
jno
bound
outsl
iret
push
sbb
lahf
push
mov
scas
movsb
push
in
js,pt
add
add
jmp
out
aas
mov
ljmp
add
add
xorb
xor
mov
xchg
fsub
push
nop
mov
test
pop
mov
fdivrl
add
xchg
call
arpl
push
dec
cmp
icebp
movsb
adc
mov
shll
ss
and
clc
push
pop
fdivr
stos
cmp
clc
jmp
or
fnstsw
pop
rolb
fildl
inc
popa
add
rol
and
jno
outsl
inc
dec
mov
in
and
xchg
add
adc
mov
repnz
adc
stc
mov
fnstcw
outsl
pop
push
popa
or
clc
sub
sti
dec
inc
push
jbe
push
lret
mov
arpl
mov
and
mov
xchg
out
push
jns
mov
mov
sbb
pop
sub
jno
and
add
lcall
add
imul
out
mov
arpl
arpl
push
pop
add
cmc
add
add
icebp
mov
andb
das
sbb
cmp
adc
dec
xchg
cli
fisubrs
xlat
insl
aad
sub
pop
adc
inc
cli
xchg
mov
imul
xor
mov
push
sbb
fcompl
inc
ret
outsl
daa
or
shrl
stc
push
sub
cmp
test
xchg
aad
pop
movsb
lds
mov
inc
inc
mov
nop
aas
pusha
leave
loopne
jbe
push
fwait
pusha
jmp
sbb
insb
ljmp
rcrl
mov
xchg
sbb
mov
addr16
mov
cs
out
mov
inc
jp
cmpl
pushf
mov
push
aaa
push
xor
call
std
movsb
jmp
ret
lret
lret
rcll
cmp
inc
dec
cli
jle
mov
cmp
xchg
mov
aas
add
add
add
dec
stc
mov
clc
add
aam
data16
pop
add
cmc
add
add
out
fucomip
repz
jns
push
insb
daa
cmp
out
xchg
add
jbe
mov
xchg
adc
fwait
mov
test
cmp
sub
sbb
int3
ret
push
xor
addl
rclb
stc
cmc
cmp
movsb
cmc
mov
movsl
pop
shrl
add
xor
push
test
cs
xchg
mov
xchg
sbb
xchg
ljmp
test
shl
pop
cmpsb
cmpsb
ljmp
bnd
imul
fidivs
mov
imul
mov
inc
notl
call
jb
jae
hlt
push
pop
mov
sbb
lcall
sub
mov
dec
xchg
add
add
jg
cld
jo
hlt
leave
test
out
pop
add
cmc
add
add
mov
xchg
inc
mov
repz
icebp
mov
push
pop
fwait
nop
inc
add
sub
insb
add
das
sub
repz
sbb
dec
inc
push
pop
dec
jg,pn
jl
mov
lods
iret
test
lods
inc
jmp
mov
sub
push
xchg
adc
leave
xor
mov
enter
xor
sbb
or
add
xor
roll
cmp
scas
cmpsl
adc
dec
jbe
in
ja
sub
imul
push
aas
subb
adc
iret
je
jns
xor
and
enter
in
pop
push
inc
scas
gs
fisubs
and
fdivr
and
jg
add
dec
fwait
ret
xor
pop
leave
pop
popf
cmp
mov
into
sbb
rcl
xor
in
mov
fsts
add
cmp
and
out
in
add
add
xchg
mov
mov
sbb
dec
cmp
cmc
add
add
dec
adc
ret
cmpsb
stos
pop
leave
icebp
inc
dec
and
dec
jnp
push
sbb
jle
sub
dec
xor
data16
jbe
pop
inc
shlb
jne
pslld
adc
fists
sahf
pop
cs
ret
std
popa
in
lret
mov
test
or
and
sti
inc
es
adc
jae
jns
sarl
and
mov
sbb
pop
jmp
or
push
adc
outsb
mov
std
mov
mov
dec
pop
int3
mov
or
cmp
sub
xchg
into
jmp
xchg
sbb
inc
pusha
push
mov
sti
fcomps
cmovnp
arpl
mov
inc
push
dec
mov
insl
dec
dec
les
mov
insl
and
movsl
mov
loope
mov
sbb
and
mov
int3
subb
or
mov
rcrb
sub
add
add
add
dec
cli
pop
and
xor
popf
cmpl
add
push
or
xchg
jns
movsl
lods
stc
or
insl
add
mov
in
inc
push
mov
je
push
or
mov
inc
push
xor
imul
vandnps
push
aas
xchg
xchg
push
xchg
aas
adc
test
mov
sub
push
lcall
outsl
dec
push
fisubl
add
add
mov
cltd
mov
or
insb
xorl
and
sti
test
xchg
sbb
lock
test
shrl
jecxz
movsb
movsb
mov
cltd
pop
leave
cmpsb
lock
xorb
jne
and
push
jecxz
or
pop
adc
xor
in
jne
pop
sub
adc
xchg
lds
add
sub
cmp
dec
psubusw
add
add
add
sbb
pop
call
pop
push
push
mov
push
test
adc
push
popf
pop
arpl
into
xlat
pop
xchg
js
pop
sahf
vpmaxub
jp
sbb
fcmovne
adc
pop
iret
mov
pop
scas
inc
push
cltd
sub
xor
xor
dec
in
jle
fbld
testb
mov
icebp
into
dec
inc
and
js
int
movsb
pop
pop
icebp
push
push
pop
enter
aad
add
outsb
jmp
jmp
sbb
fdivl
xor
push
rolb
scas
push
cmc
jge
xchg
inc
and
dec
mov
and
sub
imul
cmpl
jae
sbb
clc
clc
out
dec
mov
enter
push
cmpsl
scas
imul
out
add
inc
add
add
push
shll
out
xchg
inc
push
in
pop
add
cmc
add
add
add
mov
sbb
lods
aas
mov
mov
pop
lods
add
and
xchg
dec
repnz
dec
test
addb
pop
cli
mov
jnp
jne
dec
cmpsl
push
jmp
outsl
icebp
cmpsb
ss
add
aad
jae
xchg
or
xor
fistl
mov
dec
xor
scas
inc
stos
scas
int3
cmp
int3
sub
shl
jg
xor
cmp
xchg
std
sarl
sbb
pop
dec
cmp
add
add
dec
out
fisttps
and
ret
push
insb
mov
cmpsl
xchg
cmc
mov
loop
imul
and
dec
rorl
lds
les
mov
push
sar
mov
mov
movb
in
add
sar
dec
loop
push
icebp
push
mov
jle
das
loopne
sahf
pop
int
std
loop
add
stos
push
lcall
inc
and
aad
test
or
add
cmc
add
add
push
xchg
nop
adc
ljmp
jbe
xor
xchg
xor
and
insb
dec
inc
les
in
cmc
test
sub
stos
mov
shll
xor
out
inc
testl
push
cld
dec
enter
cmp
adc
push
adc
push
dec
and
mov
les
jb
mov
mov
mulb
pop
mov
movsl
push
add
insb
pop
and
insb
movsl
dec
int
aad
dec
or
or
cmp
xchg
jne
lds
jle
xchg
inc
adc
mull
sub
jg
fcompl
push
shlb
xor
pop
adc
pusha
das
mov
sub
aam
nop
adc
bound
movsl
pop
lds
mov
push
stos
xchg
shr
inc
add
inc
xor
jb
jg
jns
roll
jecxz
mov
add
add
jbe
idiv
imul
cmpsl
jle
add
add
add
add
xor
xchg
popf
mov
js
inc
push
shll
mov
ret
ds
enter
aam
icebp
cltd
pushf
in
xchg
pop
and
mov
and
dec
cmp
lcall
xlat
xchg
fdivl
cmpl
popl
clc
ret
sbb
and
xchg
mov
push
xchg
sahf
mov
dec
pusha
mov
loope
rcl
in
andb
add
push
je
jp
and
mov
xor
in
aad
lock
daa
xor
pop
adcl
in
pop
lods
repz
fnsave
cmc
adc
cmp
cmpsl
loop
shrl
jmp
inc
dec
mov
stos
mov
cmpsb
sbb
ss
gs
hlt
jb
in
pop
add
testb
ja
daa
daa
nop
popa
inc
or
mov
sub
add
add
fwait
cmp
dec
data16
dec
add
cmc
add
add
xor
xor
sbb
cmpl
mov
pop
rorl
das
shll
sub
movsb
out
mov
and
out
mov
shrb
imul
inc
dec
push
mov
pop
arpl
call
dec
mov
jle
clc
sti
call
test
jge
daa
lcall
cmpsl
pop
imul
int
mov
insb
decb
lcall
cmp
jbe
add
pop
xchg
loopne
outsl
add
test
sub
pusha
outsb
cmc
iret
jmp
les
jns,pt
inc
cmp
adc
in
outsl
mov
fsubl
fisubrl
test
int
inc
pop
sbb
stc
rolb
push
jbe
fwait
es
dec
rcr
mov
and
pop
mov
lcall
add
clc
mov
or
push
inc
mov
cmc
add
add
in
icebp
xchg
mov
iret
mov
mov
inc
cmpsl
dec
pop
and
inc
enter
inc
mov
leave
dec
mov
xchg
arpl
rorl
aaa
in
push
test
in
adc
mov
jne
push
outsl
stos
dec
mov
not
cmp
mov
sbb
push
and
scas
scas
js
mov
sahf
das
loopne
jge
fildl
cmp
icebp
out
rcll
dec
js
mov
aaa
or
xor
test
xor
xchg
cltd
clc
dec
mov
fistpll
repnz
mov
cmp
out
fists
inc
rcr
sub
sti
int3
addr16
rclb
adc
loopne
xor
test
insb
xchg
mov
imul
or
cwtl
add
cs
scas
jae
mov
add
add
shr
mov
fs
and
arpl
add
add
add
xchg
in
mov
mul
cli
jno
jge
push
movb
cmc
sahf
icebp
xor
ljmp
stos
gs
gs
sarl
pop
icebp
fldcw
clc
loope
mov
adc
mov
gs
mov
pushf
jmp
adc
sbb
aam
fisubrl
das
enter
and
jno
xor
arpl
mov
mov
js
inc
xor
sarb
xchg
test
add
mov
sbb
stos
jbe
xor
iret
repz
pop
pop
outsl
in
shlb
mov
and
adc
insl
int3
dec
pop
lret
pushf
gs
popa
pusha
mov
mov
ja
jne
jo
popa
sbb
bound
lahf
movsl
mov
fisttpl
adc
call
add
mov
int3
rorb
iret
xchg
add
add
add
ja
jnp
mov
push
adc
sbb
pop
std
imul
inc
sbb
data16
cmpb
imul
hlt
mov
pop
lock
mov
je
sbb
and
lods
inc
add
or
mov
sbb
or
xchg
lods
jp
shll
jno
fdivrl
sahf
inc
adc
jno
test
push
cli
add
jb
outsl
jp
mov
mov
ds
jae
dec
and
mov
add
std
pop
mov
dec
cld
push
aaa
and
and
xor
arpl
je
lahf
inc
push
pop
mov
push
push
fnsave
pusha
mov
sub
or
enter
mov
push
ja
inc
mov
add
add
mov
cmp
mov
lret
add
add
add
fimull
xchg
and
outsb
iret
lock
cwtl
and
inc
lds
rcrb
into
xchg
jne
push
mov
imul
jmp
pop
nop
test
sbb
push
pushf
outsb
and
sarl
sub
test
sub
pop
cmp
mov
cmovae
mov
push
mov
leave
jns
lret
iret
xchg
imul
pop
mov
cmp
subl
xor
shrb
mov
test
shl
add
cmpsb
scas
stos
loope
sub
iret
arpl
push
mov
je
push
orl
add
xchg
mov
outsb
fildl
out
push
shll
jns
loop
outsb
aam
cli
xchg
and
xchg
push
out
popa
sbbb
sbb
or
dec
insl
int3
ljmp
call
add
add
movsb
jae
jnp
mov
lods
push
adc
pop
mov
add
add
add
aam
insl
sbb
push
mov
int
xor
dec
jg
pop
or
xchg
js
test
mov
cmp
mov
insl
pop
cmpsb
test
aas
xor
or
pop
cmp
inc
pop
pop
arpl
cli
jo
testb
mov
pop
inc
sub
ret
int3
scas
dec
jno
mov
dec
pushf
cs
rclb
adc
sub
cmp
lahf
pop
adc
ficoml
xor
mov
push
pushf
mov
rclb
inc
mov
inc
sub
mov
in
nop
mov
stc
scas
push
cmpsl
cs
scas
cmp
mulb
imul
aaa
inc
fdivrl
int3
pop
adc
xchg
xlat
test
in
ja
insl
push
mov
jg
xchg
add
out
pusha
js
push
and
pop
sahf
js
shlb
mov
js
adc
cmc
leave
addr16
mov
add
xor
mov
and
mov
add
cmc
add
add
dec
leave
aad
mov
jp
jp
out
add
fistpl
add
xor
movsl
cltd
pop
movsb
mov
arpl
rcl
imul
add
dec
mov
sub
cld
in
cld
je
mov
push
cmp
scas
push
loopnew
inc
lret
xchg
es
mov
loopne
pop
repnz
out
cltd
xchg
jmp
enter
mov
out
mov
lods
cs
push
enter
mov
call
jg
mov
push
lods
push
aad
js
repz
pushf
xchg
fwait
mov
test
jo
mov
mov
ljmp
mov
ljmp
test
clc
adc
loope
test
xor
inc
inc
mov
ljmp
add
fdivs
and
cltd
into
inc
movsb
loopne
mov
add
add
mov
scas
sub
sbb
push
add
jne,pt
adc
sar
ficoml
fldcw
xchg
dec
push
sbb
stos
pushf
inc
lret
loopne
pop
add
leave
ret
lock
pop
flds
push
push
fimuls
adc
sub
push
inc
cld
mov
jo
pop
sub
xchg
ds
push
sbb
mov
leave
mov
std
cmpsl
adc
pop
cmpsl
sbb
cmpsb
xchg
sub
int
inc
cmovs
pop
mov
inc
sti
fisubrs
enter
lods
pop
mov
rorb
mov
jge
mov
push
xor
jp
or
mov
push
ror
lods
sbb
push
cli
lock
jb
xor
jl
std
insl
mov
ret
dec
mov
jbe
call
mov
out
add
dec
in
add
rclb
pushf
repz
jmp
test
mov
out
add
pop
pop
addl
xor
dec
adc
add
add
push
into
push
cmp
sub
push
lock
sahf
imul
add
cmpsb
ds
push
pop
imul
out
aas
fcompl
inc
jp
cmc
arpl
cmp
mov
adc
in
jae
adc
mov
adc
mov
mov
mov
mov
sbb
repz
add
mov
ficoml
pop
movsl
jp
push
sub
imul
cmp
ret
idiv
xor
jmp
and
fisubl
pop
addr16
mov
push
dec
push
aam
test
int
test
pop
call
roll
adc
gs
adc
push
test
xchg
or
mov
outsb
ficoms
cmpsl
or
pop
or
jb
les
xor
jae
lahf
mov
stos
out
int3
outsl
pop
or
insb
dec
cmpsl
out
imul
aam
mov
mov
aas
inc
repnz
jo
or
and
cmp
mov
add
and
mov
fisttps
jo
into
mov
add
add
add
les
or
imul
xchg
pop
test
insb
adc
loopne
xchg
dec
test
movsb
sbb
rclb
push
jl
mov
pop
push
sbb
pop
or
loope
pop
lret
fmull
popw
jmp
pop
adc
movl
push
or
adc
xor
imul
leave
enter
movb
and
adc
mov
sub
jb
adc
lods
adc
add
and
jae
pop
hlt
leave
push
sub
fsts
arpl
or
mov
cmpsl
ja
daa
xchg
andb
sbb
add
mov
movl
xchg
aas
call
xchg
je
cmp
and
arpl
add
add
lahf
pop
bnd
mov
mov
add
add
add
ds
xchg
fistps
sub
subl
dec
dec
adc
sbb
cli
hlt
nop
pop
leave
std
leave
cmp
lods
lcall
lcall
mov
lret
shlb
dec
sti
or
jbe
cld
sbb
js
lret
dec
pusha
shlb
insb
push
gs
aaa
pop
mov
ja
add
fstpt
lock
movl
adc
mov
cld
lock
xlat
inc
into
in
in
and
das
cmp
inc
shrb
jb
or
aaa
xchg
aam
mov
add
iret
gs
test
xchg
lret
fwait
mov
pop
cmpsb
bound
loop
rolb
cmp
pushf
and
pop
mov
dec
inc
shlb
mull
ret
mov
aam
push
mov
insb
add
jnp
cmc
mov
add
idiv
jg
data16
aad
cmp
test
add
cmc
add
add
xor
insb
mov
mov
mov
jb
cmp
dec
sti
filds
pop
sbb
mov
mov
fwait
test
clc
cltd
and
push
ljmp
push
inc
rolb
xor
xor
repz
xor
mov
dec
mov
and
dec
and
xor
cli
fisttps
or
js
dec
add
divl
je
xor
mov
pop
or
dec
push
aad
int3
push
test
push
mov
repnz
fldt
test
jle
jbe
loope
movsb
add
es
bound
hlt
add
and
sub
test
xor
xor
hlt
iret
out
insl
mov
pusha
cmp
lahf
push
hlt
sbb
insb
mov
subl
pop
push
and
cld
and
or
adc
push
hlt
pop
out
dec
ret
push
xchg
add
add
pop
mov
movsb
inc
gs
xor
shlb
add
add
ljmp
call
in
xchg
jl
xchg
daa
stos
jmp
mov
inc
xchg
mov
jl
call
std
dec
imul
negb
push
int3
push
jbe
sbb
aaa
cmp
sub
lods
and
retw
cmp
xor
dec
cmp
call
or
and
xlat
idivb
sbb
pop
mov
test
les
adc
jmp
push
imul
cltd
pop
mov
aam
push
pop
lcall
add
popa
aas
add
ficompl
xor
and
movsl
mov
int
mov
inc
scas
inc
cmpsl
inc
ds
orps
adc
push
neg
mov
sbbb
push
jns
scas
mov
jne
pop
mov
push
adc
or
sub
or
pushf
aam
add
repnz
movsb
jle
mov
cmpsb
mov
cmc
add
add
xchg
iret
jns
push
fcoml
out
dec
icebp
sti
inc
sub
jecxz
mov
rolb
out
pop
aaa
in
xchg
push
and
movsb
and
xor
jno
inc
mov
xchg
fwait
stos
lret
fiaddl
daa
mov
inc
pusha
aas
jle
push
xor
xor
or
xchg
int3
inc
loope
sub
sbb
add
fstps
ret
xchg
pop
xchg
mov
add
scas
mov
nop
jp
cld
mov
rol
jge
mov
mov
mov
mov
cmpsl
iret
rolb
pop
sbb
xor
push
mov
jecxz
and
dec
bts
jg
sbb
jle
pop
xchg
add
mov
aam
loopne
xchg
out
and
push
mov
icebp
test
sti
mov
push
or
lock
xlat
je
stos
pop
fiadds
add
mov
stos
sub
stos
out
jmp
sub
mov
insb
lret
add
cmc
add
add
push
popa
adc
mov
cwtl
fwait
xor
add
push
xor
add
xchg
stos
cmpsb
inc
mov
inc
jb
fs
jb
mov
loope
pop
and
pusha
mov
pop
sub
mov
push
sub
inc
or
mov
outsl
and
mov
leave
cmp
dec
ret
movb
sub
ror
das
mov
clc
sbb
push
mov
mov
mov
xor
sub
push
outsl
push
fcoml
ficompl
push
fiaddl
and
cli
outsb
pop
sub
ss
inc
shrl
jg
lods
pop
fistps
fidivrs
add
push
mov
and
lret
lahf
push
xchg
rclb
or
loop
sarb
cmc
ss
mov
jmp
addb
add
mov
fnstenv
sbb
cmc
add
add
push
add
mov
sbb
mov
add
icebp
add
lock
mov
sbb
push
cmpsl
aas
inc
cli
cld
nop
push
cmp
popf
lods
jbe
leave
out
jae
sahf
ret
xlat
and
and
pand
push
negb
adc
xor
mov
insl
mov
std
or
push
into
test
mov
adc
xchg
cmp
xchg
das
jns
push
mov
cmpsb
imul
or
and
lcall
repnz
in
in
xchg
adc
dec
mov
es
ret
push
pusha
mov
inc
pop
fidivrs
pusha
cwtl
sbb
testb
lods
pop
inc
test
add
flds
in
or
mov
add
adc
testb
adc
les
mov
xor
cld
lret
sbb
mov
mov
fnstcw
mov
add
add
cld
je
jbe
jmp
lea
xchg
inc
xlat
stos
mov
cmc
add
add
inc
mov
loopne
inc
push
sub
xchg
rcl
and
and
inc
and
repz
inc
hlt
sub
scas
imul
add
pusha
push
pop
xor
cwtl
jo
xchg
jg
aad
mov
mov
xor
add
fcmovnbe
call
dec
bound
and
mov
daa
in
sbb
rolb
push
mov
lods
mov
inc
cmp
sub
fidivrl
loope
or
fwait
cmc
or
pushf
mov
js
popf
sub
dec
pop
pop
inc
mov
add
xchg
fs
aaa
gs
lods
dec
pop
mov
pop
ja
loope
ljmp
fmuls
jl
ds
jl
cmp
leave
pop
mov
aad
pop
cmpsl
and
mov
push
push
das
xchg
and
xor
and
cmpsb
pop
scas
lret
adc
daa
jb
arpl
add
cltd
jmp
fcmovnbe
cld
xor
shl
lds
cmc
add
add
das
xchg
sub
inc
jno
sti
xchg
cmp
test
ja
stos
or
dec
fadds
inc
rcrl
pop
cmp
ja
imul
pushf
inc
mov
aaa
mov
mov
dec
jnp
push
adc
mulb
mov
xor
les
mov
push
and
loop
les
pop
mov
mov
mov
pop
inc
std
daa
and
ja
xor
or
sti
sbb
lods
nop
ret
lret
jmp
add
call
lcall
push
cmpsb
or
mov
push
insl
mov
cmpsl
imul
mov
inc
cwtl
inc
xor
pop
call
repz
and
lods
mull
outsb
in
xchg
out
lods
sar
mov
inc
fsubl
pusha
xchg
and
lcall
mov
iret
mov
test
lahf
cmp
pop
mov
add
add
push
jg
pop
jne
xor
fstl
cmc
add
add
loop
or
jae
lea
xor
mulb
cltd
sar
xchg
insb
adc
xor
movsb
and
jno
and
jnp
in
inc
cwtl
jns
sbb
test
mov
lea
and
ja
call
mov
mov
ljmp
aam
test
add
or
out
push
xchg
pop
cmpsl
dec
jno
or
mov
insb
pop
or
jbe
movsb
and
push
sub
mov
pop
inc
xchg
adc
xor
inc
and
mov
cwtl
aas
xor
lods
scas
push
cmp
mov
lret
leave
cmp
pop
sub
jne
sub
flds
mov
inc
ror
clc
insb
sbb
jecxz
lahf
out
sbb
mov
lods
into
dec
sub
es
dec
add
add
mov
fucomip
addr16
cmp
je
add
add
add
mov
jne
push
andb
movsl
in
test
ljmp
ficoml
mov
mov
out
stos
leave
rep
dec
popa
int3
outsl
pop
repz
jle
movsl
mov
or
fnsave
or
lea
mov
inc
cmc
sahf
ror
jecxz
pop
rcrb
je
fwait
jo
adc
out
mov
cmp
test
call
cwtl
in
imul
push
and
mov
sbb
push
hlt
adc
fists
imul
and
cmp
out
adcb
mov
cmpsb
push
fldt
hlt
add
sbbb
push
push
sbb
cmpsl
sub
pop
jle
leave
jg
cltd
mov
punpckhbw
xor
cld
in
dec
add
push
pop
inc
sti
jp
jge
jmp
repz
add
dec
out
iret
jmp
cmpsb
addr16
imul
pop
sbb
add
add
add
jb
sbb
aad
in
or
lahf
and
aam
out
xchg
sub
push
dec
add
sub
cmc
sub
jl
xchg
sbb
subl
aad
and
jecxz
mov
and
sub
sub
mov
mov
fiaddl
sarl
push
shlb
test
jmp
les
sub
inc
sub
popf
mov
out
adc
mov
or
add
movsb
or
sti
jg
clc
in
jnp
lock
push
in
add
rcl
sarb
push
pop
xlat
test
idivl
mov
faddl
and
bound
ss
jp
aas
fidivrs
adc
test
mov
adc
fisttpl
in
das
pop
mov
cld
or
add
add
std
cmpsb
pop
lods
jne
xchg
mov
lahf
and
jbe
add
add
add
jbe
cltd
clc
mov
sub
mov
sub
scas
pop
cmp
xchg
mov
xchg
cld
cmpsb
xchg
pop
cmc
mul
bound
stos
mov
xchg
xchg
mov
out
mov
sub
add
ret
xchg
mov
mov
push
imul
xor
stos
lea
ffree
push
push
inc
mov
push
sbb
test
sub
and
fadd
dec
push
lea
call
jb
sbb
sbb
in
fadd
insb
inc
xchg
adc
dec
push
push
pop
jne
fcmovu
in
sbb
das
int3
cmp
jmp
mov
push
fwait
jb
lock
fsts
lea
or
dec
int
pop
and
out
jmp
filds
test
xchg
mov
pop
insl
and
jmp
adc
jmp
imul
in
lods
imul
neg
std
stc
idivl
cmp
add
cmc
add
add
jb
push
fidivrl
sti
nop
test
dec
inc
das
repz
xchg
push
cmp
adc
push
add
inc
push
xor
hlt
pop
stos
das
mov
cmpsl
imul
cmpsl
jmp
adc
test
dec
pop
mov
ret
and
shlb
or
xchg
int3
ljmp
jae
out
enter
add
imul
mov
iret
test
fsubrs
stos
or
mov
pop
je
insb
pusha
fmuls
call
dec
out
add
mov
test
adc
lea
push
xor
dec
or
in
and
inc
dec
leave
sahf
int
lds
inc
test
fwait
icebp
jbe
inc
bound
test
cmp
imul
leave
push
inc
imul
dec
mov
sub
int3
nop
call
jbe
and
add
add
cs
mov
jg
stc
ja
add
add
add
cld
mov
push
lea
jne
xchg
sub
div
mov
pop
test
and
push
bound
sbb
jle
pusha
shrb
pop
sbb
dec
mov
mov
rol
xorb
addr16
arpl
pusha
mov
stc
mov
test
cmp
sub
or
mov
fistl
xchg
clc
inc
and
stos
pop
rcrb
pop
mov
mov
lods
jae
stc
fld
mov
repnz
fidivs
add
dec
xchg
loope
ret
pop
mov
mov
in
insl
stos
les
nop
pop
and
sahf
mov
push
pop
lret
movsb
push
cld
add
add
movsb
xchg
mov
and
popf
xchg
sub
mov
xlat
cmp
sahf
cmp
shlb
adc
mov
pushf
or
ror
inc
popf
test
xchg
gs
mov
add
ja
out
dec
jg
aad
xor
add
add
add
popf
jmp
xchg
jecxz
xchg
insb
push
xchg
fs
inc
sbb
lock
add
xor
pop
outsb
pushf
fcomip
lret
cmp
or
subb
mov
xor
in
rcrb
xlat
outsl
cmp
push
pop
sub
fcmovne
adc
shrb
add
mov
mov
sbb
adc
or
icebp
out
das
cmp
rcll
adc
popa
push
mov
pop
aaa
dec
sar
mov
stc
dec
fldcw
sbb
inc
gs
pop
test
cmp
push
mov
clc
rcrb
add
fisubrl
pop
sbb
or
mov
pop
adc
data16
mov
mov
lock
test
loopne
jns
cmc
jmp
lea
mov
mov
push
jnp
mov
and
jno
out
mov
sub
add
add
sub
ja
mov
paddq
xor
jns
add
add
add
cld
xor
movsb
inc
mov
test
cmp
js
push
dec
movsl
icebp
stos
in
in
lret
cmp
shl
nop
pop
lods
mov
ffreep
inc
shr
cmp
in
and
inc
scas
lret
je
cmp
ljmp
pop
mov
push
xor
js
gs
lahf
sbb
pop
mov
pop
popl
and
mov
mov
int3
jle
jg
mov
rcl
adc
and
mov
loope
pop
push
cmc
mov
fsubrl
fsubl
stos
repz
loopne
int3
adc
cld
push
pop
popa
pop
adc
sbb
imul
sub
add
push
pusha
pushf
inc
lds
pop
out
lret
fdivrs
dec
jmp
mov
and
mov
xchg
cmpsl
or
mov
jp
jge
sti
ret
ljmp
or
rorl
add
int
mov
jnp
jge
xchg
cmp
mov
fdivrs
add
add
add
jo
int3
rcrl
pop
out
xor
inc
lds
pop
mov
lahf
sbb
shrl
pop
or
adc
iret
jmp
xchg
fs
decl
scas
andl
out
loop
and
fmuls
mov
cltd
pop
mov
fildll
sub
cmp
mov
mov
mov
cmp
adc
ljmp
dec
lock
repz
bound
imulb
inc
xchg
rorl
sub
push
fistpl
int
sbb
aam
mov
gs
jno
fcmovne
mov
pop
mov
xchg
fmull
in
sub
ds
arpl
mov
insb
cmp
jmp
xor
imul
insl
cmp
mov
jo
cltd
mov
loopne
mov
sub
pusha
cmc
sbbl
lods
dec
outsl
add
add
cli
xchg
jle
mov
mov
jnp
add
add
add
adc
add
jl
add
cmp
dec
jb
or
js
shrl
adc
aam
add
sti
push
fwait
jp
pop
cmp
shll
notrack
add
dec
add
and
cmpsb
mov
and
lods
aam
xor
jne
xchg
imul
sbb
xor
pop
in
or
xor
push
jae
and
jmp
push
mov
jp
inc
mov
pop
add
mov
lods
sbb
mov
dec
adc
pop
xchg
sub
sbb
clc
cmpsl
mov
fcmovnbe
jge
xor
in
inc
and
and
sti
mov
and
sbb
loope
mov
movl
mov
sub
sbb
adc
mov
jo
xlat
add
add
fwait
jnp
aad
gs
into
add
sub
jl
add
add
add
repz
rcrb
inc
inc
cmp
pusha
pop
cltd
cmpl
mov
pop
xor
jns
xchg
dec
pushf
movb
imul
and
daa
imul
icebp
out
cmpsl
pop
arpl
stc
mov
jmp
xchg
rcrl
add
adc
lcall
sbb
daa
in
or
sbb
icebp
insb
xor
mov
push
push
and
xorb
inc
js
xlat
or
sti
lods
stc
loope
add
add
inc
xchg
and
sbb
push
mov
mov
subl
sbb
cmp
jg
jb
into
repnz
dec
cs
shrb
dec
jno
out
jns
xchg
cwtl
inc
lret
jae
pop
push
sub
arpl
dec
mov
sbb
lods
jle
mov
aam
lcall
add
mov
std
mov
enter
push
mov
add
cmc
add
add
xchg
xchg
rcr
xor
inc
mov
adc
cwtl
adc
enter
jno
mov
lcall
and
jae
ljmp
mov
pop
cmp
icebp
jae
sarl
inc
jmp
dec
cwtl
lcall
and
jno
mov
popa
sub
xchg
or
flds
shll
sub
out
push
shl
loopne
pop
fs
popf
pop
dec
jbe
addr16
push
dec
test
push
inc
xchg
cmp
aad
push
test
frstor
out
inc
jl
stc
push
xor
inc
jbe
leave
arpl
adc
lods
pop
es
push
pop
xchg
xchg
pop
rolb
xchg
and
mov
cmpsl
addr16
test
jge
and
mov
mov
scas
xor
mov
add
add
fstl
out
sbb
pop
inc
lods
jle
add
add
add
cmp
loop
push
int
jg
fmuls
popf
out
aam
rolb
or
push
stos
lds
out
frstor
ja
jne
inc
and
add
sub
sbb
mov
xor
arpl
sbb
movsb
test
sub
sub
loopne
in
xchg
pop
adc
xchg
jmp
test
je
scas
fiaddl
enter
orb
loope
fldcw
jo
or
push
dec
mov
mov
jle
dec
ror
icebp
xchg
test
ret
stos
or
imulb
and
mov
xchg
jb
mov
ja
or
ss
lods
mov
xor
lock
cmp
jmp
and
aaa
push
xchg
cmp
jb
push
sbb
mov
scas
ss
rolb
addr16
xor
scas
mov
out
and
and
adc
push
js
pop
into
jle
add
inc
in
mov
mov
out
in
pop
test
pop
cltd
push
jg
add
add
add
push
pushf
jno
inc
ss
mov
lds
jmp
or
out
dec
es
repnz
cwtl
or
test
fdivl
int3
push
testb
mov
lret
stc
pop
or
shll
jecxz
test
aas
sahf
aas
leave
in
aam
jmp
int3
inc
loopne
lods
int
popa
ja
sbb
ficoms
inc
mov
adc
sub
xchg
scas
insb
pop
test
push
loope
lods
or
cs
sub
jge
xchg
out
mov
mov
ljmp
dec
incb
xor
das
push
movsl
movsl
pop
add
mov
pop
ds
mov
xchg
xlat
jl
sbb
cmp
ss
and
pop
imul
xor
daa
jp
dec
push
rcr
iret
xlat
inc
jne
pop
push
xor
pushf
dec
mov
cmp
xor
add
add
divl
bound
pop
pop
xchg
addb
cmc
add
add
fcmovu
mov
push
leave
jge
faddl
loop
popa
jbe
fs
test
test
out
call
pop
cwtl
pop
lods
mov
xchg
cmp
loop
ss
das
jo
lock
xor
std
pop
add
out
xchg
sarl
int3
sti
and
mov
imul
cmpsb
jecxz
jecxz
xchg
je
je
inc
pop
in
and
jbe
dec
push
fiadds
pusha
push
and
xchg
pushf
push
sbb
push
inc
inc
in
lahf
adc
dec
jne
mov
insl
rcrb
jno
out
jl
mov
cmp
aam
hlt
mov
sub
xchg
cmp
jns
adc
mov
jecxz
mov
cli
jecxz
push
dec
sub
push
out
and
bound
mov
sbb
jb
imul
add
negb
jge
hlt
fwait
loope
dec
add
add
fisubs
mov
push
mov
push
pop
mov
add
push
xchg
mov
cmp
or
pop
data16
fsubl
sub
cmpsb
inc
in
stos
or
dec
jo
xor
jae
orb
push
cmp
dec
jnp
mov
cmp
add
negl
in
insl
push
hlt
pop
xor
jge
test
or
stc
lret
sub
push
loopne
jno,pn
mov
xchg
lcall
cmpsb
pop
dec
lock
mov
push
pop
fldt
push
jnp
pushf
xchg
in
mov
adc
das
push
push
scas
cmc
push
fbstp
lods
pop
add
jno
loop
in
xor
sar
cmpsb
incb
push
shll
inc
and
pop
push
icebp
push
add
cmp
push
cmp
test
cmp
dec
pushf
stos
push
aad
or
sbb
movsl
xchg
lcall
ror
hlt
ret
mov
jle
cmp
add
mov
outsl
jne
ljmp
iret
mov
add
add
add
push
gs
push
inc
sahf
jecxz
add
fcoms
ljmp
enter
fs
fmulp
fsts
mov
sbb
jne
leave
push
test
mov
dec
inc
push
shll
push
push
dec
adc
mov
sti
dec
mov
mov
inc
out
lea
add
out
jle
sbbl
stc
sub
xor
inc
sub
jnp
jp
cld
inc
mov
sub
jecxz
and
mov
test
out
sbb
jb
loop
clc
and
or
cmpl
ret
stos
mov
in
sti
xchg
inc
dec
repz
and
push
add
out
lock
dec
insb
pop
mov
push
std
pop
adc
test
dec
jns
test
ret
mov
addr16
adc
or
dec
les
add
add
testl
jae
addl
cmc
add
add
test
add
insl
mov
sub
mov
pop
cmovb
push
loope
out
ret
push
ret
mov
mov
in
xor
and
arpl
mov
pushf
add
jne
xor
clc
cmp
movsl
in
imul
inc
out
aas
mov
das
call
pop
mov
das
mov
stos
pop
jb
mov
sbb
mov
adc
or
nop
aas
mov
popa
jns,pn
and
or
xor
lret
std
cmp
adc
movsb
scas
pop
imul
pusha
mov
je
js
jne
push
xor
and
xchg
rorb
fildll
pushf
xchg
cli
in
frstor
adc
push
inc
sbb
fdiv
popa
iret
cld
push
lea
mov
mov
add
add
jo
ja
std
stos
lods
and
frstor
push
mov
test
add
add
add
inc
ret
dec
in
sbb
loope
in
jmp
stos
int
out
gs
and
aad
cmp
sbb
pop
neg
lret
mov
nop
call
insb
sub
pop
stc
out
mov
lcall
daa
or
xor
dec
mov
aam
xchg
aaa
je
test
cmova
fs
popf
sti
inc
xchg
fildll
push
idivl
enter
xchg
xor
xor
mov
push
fadd
inc
ds
and
cmp
xlat
xchg
lods
xchg
or
enter
inc
popf
jmp
cmc
movsl
ret
popa
cmp
pushf
sub
sub
cmp
sbb
and
scas
into
xorl
pop
mov
mov
sarl
stc
mov
adc
jg
xchg
jne
out
scas
or
pop
jp
icebp
mov
add
mov
cmpsb
arpl
je
ds
push
cmc
add
add
pop
xor
les
gs
xchg
in
xor
stos
decl
jbe
or
adc
inc
repnz
xchg
bnd
dec
push
fstl
xchg
cmp
pop
imul
je
jp
daa
in
pop
dec
nop
scas
fisubrl
insb
mov
insl
pushf
or
dec
or
lods
mov
nop
out
lea
and
cmp
dec
xor
mov
mov
mov
jl
pop
mov
push
out
add
loopne
adc
or
mov
lret
gs
lea
sub
dec
mov
sahf
out
stos
test
adc
mov
xchg
xchg
add
xor
adc
addr16
mov
insl
test
sub
test
xchg
cltd
mov
mov
mov
add
xor
cli
mov
outsl
repnz
push
xchg
add
add
add
jo
stos
andl
adc
loopne
test
xchg
notb
ljmp
sbb
stos
cmp
push
sub
jae
add
mov
outsl
fdecstp
leave
test
out
inc
add
mov
sub
jmp
les
and
dec
adcl
add
xor
pop
shrl
outsb
mov
adc
imul
pop
add
fsubl
fists
call
cmp
jmp
xchg
ss
lds
cmp
xchg
lods
or
cmp
xor
dec
std
jae
adc
jmp
std
stos
ljmp
dec
push
sub
stos
xor
pop
mov
push
sub
cmp
jge
or
jne
xchg
insb
out
dec
mov
cmp
mov
add
add
test
ljmp
pusha
movsl
and
add
cmc
add
add
jle
mov
es
dec
dec
pop
lcall
ret
jnp
repnz
xchg
inc
jp
daa
outsl
sub
xchg
xor
mov
push
fwait
loop
shrl
fldl
iret
fisttps
fs
xor
lock
notb
dec
dec
and
outsb
cmp
loope
orl
inc
sbb
or
inc
mov
mov
and
jle
mov
dec
adc
test
dec
mov
jecxz
pop
xchg
xchg
inc
mov
sub
std
mov
or
jl
cld
pop
aas
add
adc
aaa
mov
jle
dec
ja
imul
push
xchg
dec
scas
pusha
fsubrs
and
pop
andb
inc
pop
mov
jne,pn
or
adc
adc
inc
insl
std
jmp
sbb
stos
cs
add
add
xchg
xchg
jns
incl
mov
add
add
add
shrb
adc
inc
dec
inc
sbb
sbb
icebp
hlt
pop
je
dec
sbb
dec
repz
sub
cmp
les
jns
aad
xchg
ja
sub
pusha
movsb
inc
push
in
dec
idivl
mov
sahf
jg
inc
fwait
aas
mov
mov
cli
mov
dec
cs
adc
je
ret
in
lret
iret
jp
add
mov
rcr
sbb
add
adc
pop
ds
pop
pop
xor
je
jne
enter
out
xlat
stos
sbb
cld
stc
jb
cmp
add
popa
mov
mov
sbb
xchg
adc
ds
mov
jae
aas
lds
repz
xchg
xchg
fwait
jecxz
xchg
adcb
cmpsb
roll
enter
pop
push
or
xchg
stos
add
sub
mov
lret
cld
push
push
aam
jnp
or
aam
into
add
add
lcall
fisubl
add
cmc
add
add
sbb
negl
sbb
mov
mov
pushf
mov
sub
not
and
add
nop
sbb
xor
dec
cmc
jge
enter
movl
jmp
ficomps
outsb
inc
fidivl
add
int3
dec
popa
and
xchg
je
xor
jns
mov
ss
push
out
div
xor
pop
adc
out
xor
mov
dec
insl
popf
imul
add
sbb
jp
jl
xchg
lea
xchg
int
bound
push
orl
xchg
push
fdivrl
jo
iret
and
add
and
or
mov
mov
cmc
cwtl
ficoml
mov
sub
andl
xchg
loope
xchg
sbb
dec
jnp
jle
and
loop
cmc
add
add
mov
idiv
fst
inc
sahf
pop
in
jmp
sub
add
int
mov
or
adc
das
into
or
fstl
pusha
icebp
rclb
std
push
jmp
test
ror
adc
iret
imul
and
std
aad
movsb
and
push
int3
fcoms
dec
sub
pop
mov
xor
jo
push
add
stos
mov
sbb
and
popf
insl
nop
pop
or
gs
jecxz
je
pushf
mov
shlb
negl
mov
stos
lea
jne
mov
push
xor
sbb
jnp
lods
data16
cli
mov
add
dec
fwait
daa
xchg
sub
nop
sti
cli
jne
ja
sub
gs
lds
cmp
out
std
push
aad
out
jae
add
outsl
int
daa
inc
popf
sub
or
add
xchg
call
and
push
shll
mov
add
add
add
or
fnstenv
mov
cli
jo
fidivl
sbb
mov
mov
or
lret
es
lds
pop
outsb
je
add
dec
mov
hlt
fidivrs
push
ds
push
xor
mov
cmp
daa
loope
add
dec
dec
roll
adc
lcall
lahf
lock
inc
cmp
push
jne
jle
push
test
cld
mov
jae
mov
sbb
jae
and
mov
cmp
loopne
adc
inc
mov
bswap
cmp
jecxz
std
xchg
pop
scas
shlb
add
fildl
icebp
cmp
xchg
loopne
repnz
push
popf
mov
cli
leave
into
mov
pusha
mov
movsb
int3
dec
fs
jecxz
inc
sarl
cmc
mov
mov
into
out
xchg
mov
adc
add
mov
jge
std
sti
iret
and
repnz
push
addr16
mov
add
add
add
arpl
xchg
daa
add
push
hlt
pop
mov
in
std
mov
dec
sahf
aam
out
jge
xchg
cmovb
inc
lock
pop
add
jmp
mov
inc
rol
pop
negb
pop
es
mov
rcll
xor
stc
inc
imul
jb
xchg
push
pusha
mov
test
jns,pt
jnp
lret
jae
add
imul
push
xchg
mov
and
cmp
add
stos
mov
mov
xor
std
cmpsl
push
mov
jo
mov
fstps
stos
fimuls
gs
das
jmp
push
xchg
pushf
in
pop
in
inc
dec
push
adc
lods
fsubl
push
mov
jl
pop
or
mov
fwait
jno
mov
jmp
add
inc
pop
aam
add
add
stos
mov
lea
icebp
test
mov
add
add
outsl
xchg
inc
lahf
sti
hlt
out
cmp
loop
je
imul
lea
add
add
add
jae
jno
adc
adc
bnd
jge
int3
adc
stos
sub
jl
aam
mov
mov
hlt
sbb
je
mov
jmp
pop
es
mov
inc
pusha
cmp
out
fiaddl
mov
std
inc
xor
xchg
dec
or
mov
rcrb
repnz
int
addr16
popf
ret
jp
sub
adc
stc
dec
insl
mov
add
dec
mov
push
xor
insb
aam
jns
int
test
or
das
xchg
cltd
das
cmpsb
jg
cmp
sbb
stos
lret
aad
pop
imul
das
pop
cwtl
test
mov
mov
pop
iret
inc
jbe
out
fldcw
jmp
icebp
icebp
loopne
push
sahf
and
jns
mov
addr16
xchg
xchg
pop
dec
mov
fildll
subb
cli
mov
jno
add
add
mov
into
imul
sahf
cld
lea
add
add
add
and
mul
movsb
xlat
mov
imul
push
dec
pause
add
push
push
in
mov
inc
mov
mov
jo
bound
leave
mov
sar
lret
pushw
ficomps
sbb
dec
push
aaa
mov
lds
mov
xor
out
fwait
mov
aaa
movsl
leave
fs
int
or
enter
fbstp
pop
push
adc
push
movsl
inc
pop
pushf
daa
js
sahf
pop
adc
add
mov
pop
add
jmp
call
das
fxch
imul
jae
sub
movsb
push
in
std
sbb
clc
mov
repz
adc
sarb
jp
shrl
les
cltd
cmpb
in
and
mov
ret
orl
push
xchg
cmp
imul
sbb
jno
aam
add
and
out
ljmp
jp
cmp
lahf
addb
cmc
add
add
enter
adc
add
xor
cmpsl
pop
scas
pop
push
std
sub
pop
movsb
pushf
movsb
out
jecxz
sbb
add
lods
xor
xor
scas
lock
xor
inc
xchg
mov
scas
xchg
push
jp
loopne
enter
dec
xchg
mov
mov
enterw
mov
mov
hlt
lret
sti
sbb
lea
lods
sub
push
sub
movsb
xor
xchg
rorl
pop
xor
mov
addl
mov
scas
jmp
pop
leave
bound
arpl
or
pop
in
dec
adc
and
test
jge
fsubrl
mov
mov
mov
sbb
mov
cmp
xchg
push
add
cmc
test
sub
je
sbb
push
add
add
arpl
jnp
sbb
xchg
sub
adc
popl
add
add
add
mov
js
pushl
sahf
jbe
sub
add
lods
roll
nop
out
mov
lret
call
fisttpl
movsb
nop
out
dec
jae
push
and
adc
lds
stos
xchg
insb
cld
jne
loopne
adc
out
mov
xor
push
push
out
in
mov
push
jae
push
das
int3
jp
push
mov
xchg
dec
push
or
push
jnp
cmc
push
mov
mov
mov
push
into
add
mov
imul
mov
dec
sbb
sbb
fistpll
imul
ljmp
push
push
adc
xchg
adc
test
fs
add
push
jg
jl
popa
sbb
std
adcl
movsb
pop
xchg
lret
pop
cmpsb
cmpsl
mov
push
sub
std
jo
insb
fsub
adc
jg
sbb
add
add
aas
or
mov
in
je
fistl
add
aaa
dec
movsb
adc
loopne
je
xchg
pop
add
fs
inc
cmp
xchg
cs
cmp
push
xchg
fs
mov
stc
cmpsb
push
test
dec
cmpsb
lods
je
adc
inc
dec
cmc
xchg
aas
test
dec
mov
scas
aad
stos
aas
addr16
inc
ds
cmp
aas
loope
jl
xor
push
mov
push
mov
mov
icebp
dec
xchg
outsb
dec
push
out
pop
stc
shlb
test
sarb
into
out
push
sbbb
insb
mov
mov
mov
jg
sarb
fldcw
pop
jmp
cltd
ds
push
stos
xor
gs
push
mov
inc
cmp
add
mov
divl
jl
aam
sti
and
ficompl
fcmovne
out
add
into
fisttps
rcrl
pop
addr16
xor
adc
jmp
push
sub
lret
adc
add
push
outsb
fdivrp
sub
lcall
add
cmc
add
add
lods
iret
cmp
xchg
rorb
out
xchg
ljmp
cmpsl
add
mulb
fwait
mov
sbb
std
cmp
enter
std
jecxz
pop
or
cmp
mov
pop
dec
out
or
pop
les
ja
sub
stos
rcr
ret
aam
aad
pusha
test
addl
cmp
stos
pop
call
and
ds
mov
jnp
xor
in
arpl
idivb
popf
jno
dec
xor
mov
jmp
out
and
scas
push
push
jp
dec
or
shll
sahf
jns
pushf
cli
je
and
pop
mov
je
xchg
cmpsl
fisttpl
std
xlat
push
push
add
push
icebp
inc
cld
ror
sub
cmpsb
out
push
or
adc
in
lock
nop
cmp
sarw
inc
movsl
mov
add
cmp
mov
in
sahf
add
jp
xchg
add
cmc
add
add
or
ss
cmp
gs
inc
and
dec
in
jbe
inc
add
ret
cli
imul
jae
pop
imul
incl
xchg
pop
les
or
repz
mov
add
leave
add
cmpsl
js
cmp
mov
into
dec
mov
add
or
or
xorl
mov
fiaddl
mov
imul
test
push
fs
rcrl
mov
mov
in
push
jae
lock
or
ljmp
push
hlt
jnp
lret
mov
sub
mov
nop
pop
lods
shr
sub
imul
jge
cld
push
test
and
sti
jmp
fs
stos
dec
pop
addb
je
daa
xor
repz
subl
xchg
push
sub
sub
jmp
js
imul
add
dec
push
int
fstp
iret
push
lock
jmp
rol
dec
mov
add
add
in
rcr
std
or
notl
addl
call
push
int3
sahf
cs
mov
inc
and
and
adc
inc
jp
out
lret
mov
jb
idiv
sub
outsl
out
cmp
fwait
push
add
xorl
xor
lds
ljmp
mov
xchg
mov
repz
mov
cmp
ja
cs
fsubs
lods
cmp
loop
lret
sub
push
ds
jns
and
negl
xchg
sbb
in
xchg
loop
jbe
sbb
sub
xor
sub
cmp
jns
sub
mov
popa
sub
andl
ljmp
mov
cmpsb
add
add
add
adc
std
sub
pop
mov
scas
xchg
add
cmc
add
add
xor
dec
lcall
push
and
aaa
pop
mov
xchg
xor
xchg
int
mov
mov
ret
xor
or
out
cli
push
sbb
or
sbb
mov
pop
mov
into
gs
xor
xchg
lcall
lret
fdiv
pop
in
and
xor
bound
xchg
mov
repnz
mov
pop
mov
pop
lds
adc
push
addl
push
arpl
pop
cmp
xor
outsl
lret
pop
fnstsw
jns
mov
sub
insb
xchg
repnz
popa
jge
test
xchg
mov
sti
das
mov
outsb
mov
sbb
mov
outsl
push
popf
sbb
dec
push
or
push
in
inc
jns
xchg
hlt
add
add
add
mov
push
sahf
sbbb
add
pop
push
lds
popf
pop
pop
jl
jbe
inc
sbb
daa
mov
mov
cmp
xchg
inc
je
std
pop
cli
lods
push
sbb
les
mov
std
xor
and
jb
fisttpl
push
mov
pop
adc
jmp
ljmp
pop
add
out
xor
repnz
cwtl
movsl
in
xor
cmpsl
test
movsb
push
cmp
xchg
push
jne
adc
sub
popf
adc
fwait
mov
xchg
pop
clc
adcb
fimuls
and
and
inc
fsts
inc
repnz
bound
xor
pop
sub
jp
enter
insb
mov
inc
fdivrp
mov
imul
pop
jbe
push
into
cwtl
add
push
out
dec
or
xlat
sti
adc
and
int3
mov
fmul
push
outsl
or
add
add
les
mov
adc
xchg
add
cmc
add
add
outsb
iret
mov
cmc
jmp
jb
jbe
icebp
cmc
push
mov
rcll
fsubrp
aam
or
add
stos
sahf
stos
repz
add
movsb
sub
insb
dec
inc
scas
mov
push
and
and
test
bound
aas
add
adc
xchg
xlat
push
cmp
rcll
jb
test
je
pop
inc
out
lret
insl
in
fiadds
inc
pop
mov
outsb
lret
xor
in
or
mov
call
ret
push
xor
push
jns
scas
xor
fidivl
cltd
inc
cmp
div
mov
mov
sub
std
fs
pop
push
mov
lahf
vshufps
lock
jl
inc
stc
push
lret
scas
xor
popa
cmp
iret
repz
in
cmp
xor
cmp
rol
jns
pop
je
xor
stos
adc
add
add
ljmp
loop
dec
pop
pop
bound
add
add
add
pusha
pop
xlat
fldcw
leave
pop
in
clc
adc
imul
mov
and
addr16
lds
or
ret
cwtl
lret
popa
dec
fadd
cltd
adc
inc
xchg
in
scas
orb
mov
sbb
out
sidtl
mov
int3
or
pop
pop
pop
pop
jae
test
mov
jp
loopne
in
enter
push
cmc
popa
adc
mov
cmc
mov
mov
daa
ret
push
loop
and
fdivrs
rolb
jae
jo
cmp
lods
scas
and
shll
sbb
arpl
cld
aam
sti
aam
cli
pop
dec
xchg
push
sub
int
xchg
mov
xchg
fwait
int3
mov
stc
rcrb
ljmp
sbb
mov
fwait
out
and
fadds
add
aaa
shlb
cmc
div
rcl
inc
pop
xchg
push
add
sbbl
add
sti
sub
fistps
fisttpll
movsl
and
insb
push
push
inc
cmpb
jae
mov
push
pop
adc
xor
jo
add
pop
sub
jp
mov
sub
sub
ss
bound
adc
filds
roll
jecxz
sbb
insb
divb
mov
mov
push
push
jo
xchg
mov
mov
ss
dec
cmp
into
and
cli
repz
es
mov
jl
jns
mov
add
enter
push
jno
fdivrl
pop
xchg
mov
repnz
adc
mov
jb
or
mov
out
sahf
arpl
lock
out
addr16
mov
add
lds
inc
adc
out
push
add
add
stos
sbb
add
add
push
sahf
rcr
pop
test
mov
cltd
add
cmc
add
add
ss
jo
rcll
sub
dec
mov
aad
mov
adc
jge
lods
and
divb
rcll
jle
out
daa
push
ja
sub
pop
fsts
iret
scas
xchg
xchg
pop
test
mov
movsl
ret
or
cmp
es
xchg
es
rorl
mov
and
push
test
hlt
je
movl
stc
je
fistpl
xchg
or
push
jns
mov
leave
xor
push
mov
push
lret
sbb
into
addb
jmp
mov
fdivrs
mov
jbe
adc
test
cmp
and
mov
mov
aad
into
adc
ja
push
sub
dec
test
xchg
dec
rorl
inc
rcrb
pop
cmp
pop
xor
xchg
outsb
adc
add
xchg
ljmp
shll
cmpsb
jcxz
jne
push
inc
sarb
push
subb
add
add
add
xor
cs
pushf
sbb
dec
mov
cltd
inc
test
add
jmp
add
jnp
fmull
sahf
lahf
repnz
ljmp
adc
mov
rcrb
mov
adc
adc
mulb
call
jns
daa
sbb
xchg
xchg
shrb
inc
push
daa
cs
cmp
int
fs
push
push
out
and
jg
sub
mov
loope
aam
xchg
mov
rorl
adc
mov
mov
cmp
jmp
fbstp
xchg
mov
ret
xchg
out
push
mov
inc
std
aam
adc
dec
aam
mov
xor
and
inc
cli
scas
pop
out
xor
stos
rcrb
fadds
jecxz
shlb
push
xchg
mov
movsl
pop
adc
add
clc
jnp
jg
in
cli
cwtl
inc
mov
mov
fwait
add
cmc
add
add
loop
xchg
adc
mov
push
cmp
mov
jae
or
and
jp
ss
mov
imul
es
sarb
roll
add
jno
scas
sti
pushf
nop
enter
or
clc
dec
and
sbb
mov
mov
rcrl
sub
and
jle
jge
dec
push
cmp
sar
sbb
clc
dec
push
fstl
xor
addr16
mov
insl
lcall
push
inc
xchg
mov
add
push
mov
in
subb
or
in
cld
sub
lods
sbb
aam
cld
gs
or
clc
pop
in
jne
stos
inc
dec
movsb
lea
push
int
mov
mov
xchg
repz
cmpsl
addr16
add
lods
faddl
fbstp
cld
inc
push
cltd
das
imul
push
pushf
add
cmc
add
add
inc
insb
adc
pusha
test
in
and
dec
out
mov
jg
divl
xchg
imul
pop
inc
sub
and
cmp
hlt
imul
jl
adc
adc
scas
movsb
pushf
xor
xlat
add
dec
flds
cmpsb
mov
sti
mov
pop
cli
inc
out
pop
jo
leave
shlb
mov
lock
mov
jecxz
inc
into
test
call
lods
xchg
dec
fisttpll
cltd
add
jecxz
xor
aas
aam
jo
bound
push
daa
mov
je
pusha
movsb
and
js
pop
inc
jle
mov
dec
int
or
cmpl
cmpsb
stc
xchg
cltd
imul
call
jmp
xchg
xchg
and
jmp
sub
movsl
orl
xorl
sahf
rclb
pusha
out
dec
mov
add
add
jl
sar
std
jle
loop
aam
ret
movsb
dec
popf
add
cmc
add
add
aad
xor
dec
xor
push
and
pop
dec
push
repz
hlt
icebp
adc
inc
addr16
rclb
dec
inc
cmp
loope
in
pop
mov
movsb
xor
in
int
call
mov
pop
ret
lahf
xchg
push
xlat
add
push
sbb
movsb
mov
fisubl
and
fisttpl
arpl
sbb
std
aas
push
or
jb
scas
fs
mov
xchg
xchg
roll
cmp
push
nop
sbb
roll
dec
in
xchg
jle
out
jo
inc
and
mov
add
shr
dec
pop
sbb
roll
sahf
je
in
aad
pop
mov
shll
mov
in
stos
fnsave
rclb
iret
mov
mov
xchg
aam
pop
hlt
or
aam
mov
cwtl
jne,pt
fistps
sahf
imul
add
cmp
cmp
pop
popa
into
inc
mov
cmc
add
add
nop
xchg
mov
adc
fisttpll
push
mov
test
push
test
sub
push
dec
push
test
rcrl
pop
sub
push
rol
adc
stos
adc
mov
xchg
fcoms
out
data16
stos
sti
imul
pop
mov
mov
lret
arpl
adc
lcall
xor
xchg
dec
pop
xor
dec
and
pushf
fisubl
pop
pop
flds
aaa
fiadds
push
test
aas
nop
nop
dec
in
bound
adc
add
mov
sar
and
daa
jns
lret
pusha
hlt
cltd
fdivs
shrb
scas
stc
push
and
lret
xchg
sahf
sbb
shlb
and
push
pop
jo
fmull
test
inc
rclb
mov
sub
cltd
jne
jb
add
add
outsl
sti
into
aad
aam
jg
out
ss
add
cmc
add
add
add
push
jl
adc
popa
rorb
inc
mov
fistpl
into
rorl
adc
ror
push
dec
imul
dec
push
es
nop
enter
mov
dec
mov
rolb
cmp
je
dec
cmp
sbb
dec
fistl
jae
cmp
lcall
pop
or
mov
pop
or
pop
xlat
mov
sbb
jno
xor
push
adc
movsb
jnp
sti
cmpsb
dec
mov
mov
sub
aas
adc
sti
out
push
jmp
enter
decl
inc
pop
pop
pop
in
sbb
xchg
mov
mov
movsl
xor
cmp
mov
mov
ds
js
ds
xor
int3
jl
rol
ljmp
int3
pop
pop
rcrb
movsl
mov
push
push
add
add
dec
std
out
xlat
aas
jle
ds
sub
add
popa
xor
push
jae
adc
pop
xchg
mov
shll
dec
movsb
sbb
mov
or
fwait
inc
int
in
mov
or
mov
int3
add
jb
mov
dec
movsl
movsl
daa
inc
stos
call
je
inc
in
or
aaa
sbb
lahf
aam
jmp
jg
mov
or
stc
mov
shll
mov
xchg
imul
insl
sahf
dec
adc
fistpl
add
stos
std
in
pop
bound
push
xor
out
sbb
inc
cmpsb
push
movsl
push
and
fildll
cli
pop
imull
sarb
ljmp
cltd
mov
arpl
or
inc
arpl
in
mov
mov
sti
add
cmp
adc
or
leave
bound
in
nop
outsb
loop
dec
push
cmp
mov
pushf
inc
inc
ss
pop
xchg
fisttpll
add
imul
outsl
popl
not
inc
frstor
mov
add
je
inc
pop
inc
push
aas
popf
outsb
loopne
or
sbb
out
repz
imull
dec
jmp
sbb
and
mov
inc
lretw
cld
xor
sahf
les
sub
inc
sbb
pop
xor
clc
testl
or
xor
loope
into
fsub
pop
sbb
dec
jns
lods
arpl
into
add
bound
loop
inc
es
out
loope
and
adc
in
xchg
jnp
lcall
inc
addl
dec
inc
addl
xchg
add
lcall
xlat
jmp
test
push
enter
inc
lods
push
xchg
pop
imul
push
test
mov
jns
jle
xlat
lods
sub
push
jae
add
mov
out
negb
ss
insb
jmp
pop
pop
add
add
lret
sbbl
mov
leave
xlat
mov
cmc
add
add
rcrl
ljmp
add
pop
xchg
je
pusha
sbb
jbe
outsb
lcall
mov
xor
addr16
mov
xchg
es
std
jl
mov
in
aaa
push
xchg
mov
imul
xchg
daa
push
movl
jns
mov
jne
in
loope
jg
adc
shl
cmc
bound
in
xor
lcall
jl
or
int3
pusha
into
movsl
add
ja
addr16
sub
or
and
je
cltd
push
sbb
lds
mov
adc
in
push
rcrb
cmpsb
je
fadds
outsb
mov
imul
aad
aam
shll
std
push
movsb
fiadds
mov
int
cltd
rorb
mov
inc
arpl
add
mov
imul
and
or
add
add
cmc
add
add
rcll
mov
jae
mov
in
frstor
ss
push
sub
inc
ret
push
pusha
addr16
sub
add
stos
mov
adc
scas
push
lea
push
or
add
cld
jecxz
ret
mov
neg
cwtl
push
pop
mov
movsb
imul
sub
xchg
mov
lcall
shll
sbb
xchg
push
push
out
push
in
arpl
pop
pop
push
ret
jae,pt
stos
sub
dec
pop
push
push
or
out
fbstp
adc
mov
sub
sub
push
lret
arpl
xchg
sbb
inc
stos
fucomp
scas
loop
std
mov
mov
cld
mov
sbb
ret
or
push
ja
leave
lock
push
in
mov
fs
xchg
das
repz
int3
flds
insl
xchg
dec
add
add
mov
dec
mov
xchg
cmc
add
add
push
mov
cmp
jmp
cmp
pusha
lret
mov
mov
xchg
mov
dec
jge
gs
cmp
fldl
sub
movsb
sti
dec
pop
fcmovne
test
data16
jnp
loope
inc
ficoms
push
push
push
mov
jle
pop
je
dec
ljmp
neg
cli
xchg
push
ljmp
jecxz
shll
fildl
push
mov
xor
mov
mov
call
fwait
and
push
jp
insb
sbbb
addr16
lret
push
ja
shl
dec
xchg
call
mov
jae
sbb
aaa
push
scas
scas
sbb
cmc
inc
xor
ss
loop
lcall
cmp
mov
cmp
cmp
push
pushf
mov
push
sub
ficompl
jmp
cmp
add
add
ja
out
das
mov
aam
insl
push
pop
hlt
movsb
add
cmc
add
add
xchg
pop
icebp
shlb
mov
inc
or
and
int3
jns
xlat
mov
cmc
dec
xorb
inc
test
push
add
movsl
xor
jge
movsl
jl
jle
int3
mov
push
clc
fdivrl
or
arpl
js
fcompl
aas
pop
or
add
lods
mov
xchg
or
add
idivb
loopne
repnz
ret
sub
sbb
scas
jno
adc
in
fiaddl
out
ret
stos
cmp
pop
sub
ret
fucomp
scas
and
adc
stos
fwait
xchg
cmc
push
mov
sbb
mov
cmp
or
mov
and
mov
add
dec
push
out
or
lock
fwait
dec
sbb
stos
fstpt
xor
adc
mov
jo
rcrb
in
add
loop
test
mov
stos
mov
add
add
add
or
es
adc
insl
ret
mov
jg
add
mov
push
out
add
pminsw
into
std
frndint
stos
les
std
out
pop
cmp
rcr
xchg
in
pop
sub
dec
das
mov
subl
mov
mov
xchg
pop
mov
aaa
js
into
push
mov
inc
pop
out
inc
xorl
popl
loope
cli
mov
xchg
ret
aad
adc
hlt
mov
cmp
outsb
fists
jg
fisubrs
fstl
add
xchg
mov
je
test
popa
mov
xorb
adc
push
xchg
jns
lahf
fcomps
lods
adc
mov
jle
dec
enter
cld
sarb
ret
sbb
outsl
jmp
insl
punpcklbw
cltd
ja
iret
add
mov
loopne
stos
cmp
or
inc
mov
xor
add
or
lcall
stos
test
fisubs
add
jbe
ret
fwait
mov
or
test
lods
cmp
pop
lcall
mov
repnz
call
cmc
sbb
in
inc
scas
in
push
mov
notl
pop
cmpsl
push
repz
mov
cltd
les
and
cmpsl
push
xor
jge
es
jne
and
push
inc
xlat
fidivs
or
mov
mov
cmp
aam
loopne
mov
cmp
xchg
sbb
or
inc
mov
pop
xor
sub
jge
mov
and
or
pusha
xchg
mov
fldcw
loope
out
es
lret
xchg
in
pop
push
push
inc
mov
jns
mov
aad
sbb
dec
divl
cltd
leave
pop
test
jns
xor
ss
divb
mov
scas
cmp
out
push
push
xchg
pop
test
add
movsb
mov
mov
mov
cmp
and
cmpsl
add
cmc
add
add
adc
or
gs
cld
gs
repnz
push
stc
rolb
lret
jbe
cwtl
pop
pop
aad
mov
adc
push
push
insb
loopne
push
outsl
xchg
mov
outsl
call
std
inc
aaa
or
daa
in
push
cmp
repz
movsb
enter
mov
lock
mov
mov
movsl
add
movsb
out
test
aaa
hlt
adc
mov
ret
push
mov
jecxz
mov
mov
push
adcl
pop
jmp
pop
in
adc
idivb
inc
mov
or
jmp
sub
mulb
jp
cmp
pop
push
ds
mov
test
sub
mov
into
fwait
inc
cmpb
lods
imul
mov
cmp
cltd
jp
popf
test
push
add
add
std
mov
xchg
call
cmc
add
add
fucomi
pop
mov
mov
rcr
ja
pushf
mov
push
xor
mov
pop
cmpl
fildl
hlt
das
je
add
popa
jns
out
sub
jb
sbb
sub
out
iret
ds
mov
push
xor
pop
shr
and
mov
cmp
jnp
data16
loop
inc
cmp
push
pop
xchg
cmpsl
ret
pop
jno
ret
shlb
outsb
jbe
loop
inc
dec
repz
lea
hlt
jbe
pop
in
and
ljmp
iret
negl
jle
pop
mov
cmp
hlt
add
add
jl
mov
fs
andl
mov
add
xor
test
rol
jns
loop
mov
loopne
lea
lret
mov
add
dec
stc
inc
push
add
add
inc
fdivl
stos
push
fnstcw
add
add
or
stos
fmuls
shl
pop
cltd
jle
or
outsl
cltd
imul
subb
jbe
lret
inc
push
nop
ss
pushf
mov
loopne
addb
subb
dec
inc
in
xchg
push
push
mov
sub
outsb
jne
pop
push
and
sbb
scas
test
mov
leave
sbb
push
push
add
int
insb
jnp
int3
lret
shrl
stos
fs
xor
dec
add
insb
push
in
mov
clc
xchg
xor
xor
push
inc
es
dec
sub
leave
addr16
add
pop
dec
rolb
orb
jle
imul
sub
insl
stos
add
es
jae
test
mov
js
cmp
adc
loope
push
mov
jmp
push
mov
xchg
cmp
pushf
test
add
sbb
mov
pusha
jo
pop
mov
cmc
add
add
dec
repz
shll
stos
stc
and
jns
add
sarl
lods
sbb
incl
es
pushf
fisubrl
popf
lret
xchg
cmp
int3
dec
add
add
jo
cmp
in
cmp
shll
push
in
jmp
loope
sti
sub
shll
xor
cmpsb
sub
and
sbb
into
jmp
mov
push
ss
dec
mov
cwtl
cmp
cmp
add
xor
fwait
orb
fsubrl
pop
rorb
dec
outsl
xor
and
adc
jnp
cld
mov
or
into
mov
sbb
pop
jnp
addr16
ficomps
and
or
xchg
xchg
int3
jg
and
fsubs
test
pop
movsl
leave
add
pop
mov
leave
pop
or
into
addr16
add
pop
test
stos
hlt
jmp
ljmp
cmp
inc
cmpsl
stos
add
cmc
add
add
es
or
jnp
in
loop
fwait
inc
mov
xchg
out
xchg
ss
or
pop
sub
or
fdivl
mov
sub
cld
dec
imul
mov
gs
or
pop
cmp
add
call
cmp
xlat
jle
orb
push
hlt
out
xchg
mov
jno
lea
mov
shr
jecxz
arpl
lcall
adc
in
push
in
mov
adc
pop
js
fcompl
andl
jo
mov
test
or
aaa
push
in
push
mov
mov
pop
fdivl
lds
mov
sub
inc
daa
jno
lods
ja
inc
cmp
xchg
out
icebp
cmp
ja
in
lret
cmp
push
int3
or
daa
mov
ds
sbb
mov
or
add
add
out
xlat
out
jg
dec
cmp
lahf
icebp
push
pushf
lods
add
cmc
add
add
mov
insl
cld
leave
inc
mov
and
xchg
shrb
mov
out
xlat
jmp
out
aaa
pop
rclb
inc
add
shlb
stos
in
movsl
cmc
in
scas
sbb
mov
push
popa
or
sti
in
inc
pop
sbb
lds
adcb
mov
cld
arpl
jnp
dec
mov
adc
jb
les
sub
rcll
sbb
add
fcmove
add
push
cmp
arpl
dec
sti
mov
sub
dec
test
cmpsl
movsb
push
cmp
xor
mov
mov
aam
sub
xchg
jno
out
xchg
pop
xor
into
pop
popa
inc
scas
testb
outsl
push
cld
pop
pop
in
add
xorl
stos
mov
xchg
in
jle
leave
xchg
jmp
sbb
pop
fbstp
mov
add
cmc
add
add
repz
fistpl
mov
mov
sub
add
sub
mov
mov
sahf
lods
or
cltd
cmpsl
dec
push
dec
xor
add
aaa
int
jns
jno
scas
cmp
in
xor
xchg
jb
adc
rol
pushf
nop
shll
and
and
test
xchg
mov
stc
cltd
pop
cld
xlat
repnz
push
and
xor
jmp
cmp
pop
mov
or
pop
and
test
cmp
cmp
out
ret
add
mov
repnz
mov
xchg
sub
cmp
ss
sub
mov
sub
aad
cmp
nop
push
push
inc
fadd
add
iret
inc
push
inc
inc
cmp
lcall
std
clc
jns
ljmp
add
cmc
add
add
jno
inc
rorb
mov
xchg
call
or
dec
pop
xor
xlat
data16
fisttps
cmc
retw
or
rcrb
stc
push
cmp
and
out
popa
cmpsb
mov
push
bound
ret
dec
mov
addb
insl
adc
xor
jne
adc
push
rcr
das
inc
adcb
sbb
popf
pushf
jae
mov
ja
and
cmp
mov
dec
stos
rcll
push
int
adc
inc
repz
inc
jae
sub
inc
mov
or
adc
cmp
mov
push
adc
pop
xchg
push
sbb
xor
fiaddl
insl
enter
scas
and
push
sbb
mov
xor
cmp
insl
cmc
xor
je
mov
xchg
add
add
mov
push
sti
jmp
xchg
sub
sub
jnp
add
cmc
add
add
sub
cmp
and
xor
in
cmc
in
into
outsl
out
aaa
outsb
or
pop
pop
in
jmp
bound
pushf
mov
lods
dec
add
mov
and
and
mov
mov
clc
iret
dec
pop
lahf
int
push
test
inc
jne
mov
fldenv
in
iret
fucomi
xchg
cli
ss
aam
sub
loopne
cmpsl
dec
xchg
add
mov
jp
fistpll
shll
fsubl
pushf
jge
call
aaa
mov
jmp
mov
push
clc
imul
in
xor
pop
cmp
cmc
dec
and
dec
push
pop
or
mov
push
jg
sub
ljmp
iret
pop
fwait
mov
xor
ja
outsb
in
rcrl
aad
jo
cmpsb
inc
enter
pop
cmpsl
js
cmpsb
pop
mov
add
add
jecxz
lock
and
lcall
add
mov
mov
fisubl
aad
mov
out
jge
repnz
inc
sarl
and
fdivs
add
and
push
jle
pop
aad
leave
into
roll
push
imul
inc
ss
mov
adc
push
sarb
stc
pop
test
and
cltd
enter
in
negb
xor
popf
add
int
add
iret
lock
std
adc
xlat
insl
xor
jge
ljmp
cmc
ret
xor
cwtl
pop
les
pop
movsb
pop
add
mov
imul
mov
enter
cli
xchg
push
arpl
mov
arpl
lcall
mov
sub
out
xchg
sarb
imul
xor
adc
lods
fadd
cmpsl
insl
add
add
cld
mov
test
gs
add
add
add
div
mov
jmp
jns
add
sub
dec
push
jg
jb
push
fisttpll
inc
mov
lds
jns
hlt
inc
and
sbbb
test
dec
add
dec
aad
adcb
sbb
test
stc
les
in
cltd
pop
cmc
mov
jmp
fcmovnbe
jae
adc
xchg
rol
nop
cmp
enter
add
jg
hlt
xor
xchg
cltd
sbb
jnp
push
fidivrl
lods
mov
jmp
loopne
lea
scas
pop
dec
clc
ret
das
push
inc
jge
mov
mov
lds
pop
shlb
icebp
jle
pop
fdivrp
cmpb
xchg
movsb
loope
mov
pop
lock
test
outsb
popa
imul
lret
stos
mov
push
push
mov
repnz
add
out
cmc
mov
or
or
pop
mov
add
add
add
adc
hlt
add
mov
xchg
mov
es
scas
xor
in
cmp
cmc
cwtl
imul
adc
das
sbb
add
lds
mov
ss
iret
popf
arpl
scas
ror
and
mov
xchg
jp
mov
sahf
add
or
lret
cmp
call
bound
mov
jmp
frstor
mov
cmpsl
arpl
mov
sub
xchg
aam
fldl
push
inc
and
cmp
sti
cmp
in
out
aad
mov
mov
pusha
jne
xor
popf
es
jg
dec
sub
cmp
insb
in
sbb
jae
inc
adc
sti
xchg
call
cmc
jge
dec
push
add
add
out
std
dec
std
pop
mov
hlt
test
add
add
add
cmp
or
adc
repnz
in
ds
mov
fidivs
repnz
lods
repnz
cmpsl
sub
aas
int3
inc
pop
lock
push
mov
dec
sbb
cltd
cmp
push
test
cmp
cmp
and
push
test
xchg
cmp
and
loopne
popf
mull
sbb
sbb
js
cwtl
aam
pusha
nop
push
pop
sub
dec
xchg
insb
xchg
loop
adc
sub
adc
xor
mov
adc
loope
out
repz
out
and
and
faddl
and
lahf
dec
add
cmp
mov
jbe
mov
rcrl
out
jg
sub
xchg
es
adc
xchg
ffreep
fsubp
bound
insb
mov
mov
and
lahf
xchg
fisubrl
cs
mov
movsl
push
cmp
add
add
fidivs
loop
ljmp
or
inc
xchg
inc
mov
add
add
add
lret
dec
fstp
xchg
add
das
cmp
lds
adc
jge
mov
cmpsl
jno
jle
cmp
shlb
pop
mov
aaa
js
cli
lahf
fidivs
fisttpll
pop
mov
imul
imul
add
lret
jle
add
push
pop
adc
push
inc
sti
mov
adcl
dec
in
test
mov
lahf
push
icebp
push
fistpll
push
pop
loop
dec
daa
mov
imull
lods
mov
ja
bound
out
rcrl
aas
adc
or
int
iret
add
push
jg
push
or
xchg
push
xchg
loop
push
mov
aad
loope
fnsave
sub
or
xchg
out
mov
dec
adc
dec
ds
bound
jg
in
mov
add
xchg
jg
jmp
std
jge
in
xchg
cmpsl
pop
inc
pop
cmp
add
hlt
inc
pop
shll
mov
xchg
mov
mov
cmp
jns
aam
je
xor
rolb
in
push
mov
jnp
or
or
mov
pop
or
lahf
push
pop
cmp
sub
mov
sbb
cltd
xchg
into
xchg
jb
shrb
std
jge
mov
dec
das
mov
xor
sub
fst
jo
inc
adc
fadds
pavgw
push
cmp
push
in
enter
ret
push
lahf
out
cmpb
pop
enter
adc
rcrb
ficomps
cmp
mov
mov
stos
out
inc
sub
repz
xlat
je
cmpsl
enter
adc
sbb
mov
inc
leave
or
jg
insl
pop
jno
repnz
cmp
scas
dec
repnz
or
popf
adc
sub
add
push
divb
std
cmp
subl
add
cmc
add
add
sbbb
aaa
cmp
jae
fcmovb
inc
xor
nop
scas
scas
push
add
cli
push
cmp
lods
cmp
in
clc
and
mov
fmul
lods
dec
jmp
cs
jp
mov
cmc
stc
push
rcrl
mov
sub
test
pop
mov
cmp
mov
jge
jns
and
mov
xchg
mov
hlt
adc
fisubs
dec
mov
push
imulb
jl
or
dec
pop
jb
add
movq
pop
sbb
dec
clc
cmp
imull
or
add
jnp
adc
es
scas
dec
cmp
add
fwait
test
insb
sti
xor
mov
mov
mov
inc
fistl
rclb
or
stos
push
xor
out
dec
xchg
mov
sbb
add
push
pop
xor
cmp
ficoml
sahf
jl
and
add
sbb
push
jmp
mov
bound
dec
int
xor
stos
inc
cld
xchg
sub
mov
sub
mov
add
mov
popa
call
daa
popa
aaa
mov
daa
sbb
test
sbb
and
and
jecxz
test
in
and
add
mov
xchg
dec
outsb
mov
mov
pop
dec
stc
adc
in
pop
jp
lret
sarb
or
mov
push
sub
outsb
mov
je
leave
je
pop
psubsb
movsl
mov
push
and
mov
lret
add
rcrb
add
fwait
test
scas
test
inc
das
out
inc
push
pushf
lea
adc
pusha
imul
shll
fisttpll
stos
fnstcw
cltd
add
icebp
ret
in
jae
push
push
add
add
jp
les
mov
push
push
adc
mov
add
pop
es
jbe
out
mov
stos
pop
sbb
hlt
arpl
enter
pop
popf
ja
hlt
loope
push
push
fwait
push
and
xor
decl
xchg
add
fstl
aaa
out
out
mov
dec
xchg
imul
sbb
xchg
rol
jns
int3
xor
mov
cmp
mov
aaa
mov
jnp
push
mov
out
jae
pop
scas
shr
hlt
movb
test
push
fidivs
ss
movsb
add
ds
jmp
outsb
and
mov
mov
pop
fcomip
cmp
shr
repz
lret
sub
jnp
movsl
in
jmp
or
negl
rorl
into
and
arpl
outsb
sbb
movsl
jno
inc
sub
pop
shll
out
lret
imul
add
add
clc
pop
stc
out
push
insb
xchg
cld
sub
adc
add
add
lds
and
cmpsl
add
sahf
adc
lods
and
push
in
mov
popa
and
stc
cmp
mov
xchg
mov
scas
and
inc
push
fwait
test
pop
inc
insb
sub
xchg
rcll
sti
test
loop
aad
lahf
cmp
pop
ret
cmp
cld
and
push
inc
in
xchg
sbb
add
js
and
xchg
adc
or
shl
ljmp
iret
lock
pop
or
adc
test
jnp
mov
in
clc
out
cmp
inc
jns
pop
jb
ret
je
jno
inc
jl
add
mov
adc
fsts
dec
lret
insb
and
push
inc
push
in
mov
aam
jno
icebp
cmp
xor
stc
insb
fistpll
push
cmp
pop
adc
xcrypt-cbc
cmpsl
xlat
repz
out
sub
sbb
push
jae
jmp
mov
dec
and
add
lds
cli
lcall
ret
push
incb
mov
add
cmp
je
insl
notb
xchg
jl
fadds
cli
push
cs
in
call
cmp
in
loop
in
jnp
test
out
std
inc
or
sbb
aas
imul
cli
into
aaa
aas
idivb
xchg
int3
and
push
insl
mov
hlt
cmpl
add
pop
xor
outsb
push
push
lock
addr16
mov
aaa
popa
sti
mov
jge
gs
xchg
xor
jmp
pop
fnstsw
scas
pop
push
into
cmp
push
jae
mov
xchg
sub
sbb
stos
loopne
pop
sub
jle
cmpl
out
or
cmp
call
fcmovnu
fisttps
imul
mov
and
inc
popf
and
fbld
pop
cmp
pop
nop
add
add
jne
mov
xlat
insb
scas
mov
sbb
mov
add
int
nop
outsl
aaa
rcrl
xchg
int3
pusha
mov
sbb
jns
nop
mov
mov
mov
stos
and
pop
xchg
inc
into
pop
frstor
lret
xchg
or
fs
sti
push
das
mov
sub
dec
dec
imul
mov
cli
push
mov
cmovno
insb
in
sbb
in
xchg
int3
mov
in
mov
jns
jae
push
cli
dec
insb
sahf
sbb
inc
add
cs
mov
jg
outsb
in
ret
xchg
iret
lahf
add
cmpsl
mov
das
sbb
in
aam
scas
xor
sub
fistps
inc
or
fdivl
fsubs
gs
pop
insb
xor
cmp
mov
cmpsl
sub
jb
push
shrb
cmp
inc
or
leave
rolb
cmpsl
inc
enter
fldenv
iret
cmovs
mov
jecxz
iret
sub
and
or
add
add
pop
sbbl
fstpl
cmpsb
clc
push
in
mov
add
xchg
mov
sbb
mov
aad
xchg
pop
or
jnp
rcll
mov
and
cwtl
enter
jl
cmp
bound
push
push
in
insb
mov
jle
push
and
outsb
outsb
add
fsubrl
pop
in
xor
popf
xor
inc
xchg
pusha
inc
pushf
push
mov
adc
mov
xchg
add
daa
add
xchg
stos
ffreep
in
pop
add
and
push
add
pop
xor
jbe
sbb
xchg
test
addr16
shrl
repnz
inc
or
aaa
cmp
out
push
lahf
orl
test
xlat
adc
xchg
div
pop
out
clc
jg
jno
test
xor
hlt
mov
sbb
adc
popa
lahf
mov
pop
cli
dec
push
outsl
push
das
pop
outsl
fcompl
xchg
jg
das
mov
add
add
in
mov
jecxz
out
sub
outsb
ljmp
add
into
cltd
or
lods
sub
je
mov
inc
inc
out
mov
push
and
ds
push
sbb
dec
push
push
jb
test
inc
pop
add
jge
xchg
push
adc
pushf
aad
icebp
dec
pop
jmp
push
decl
sub
mov
imul
and
dec
push
insb
ret
add
mov
add
dec
fnstenv
data16
or
jl
cmp
jle
jecxz
mov
dec
push
enter
outsb
fdivs
jae
dec
pop
sub
and
push
inc
adcl
push
lret
and
in
imul
cwtl
xchg
mov
xor
insb
adc
pushf
popl
iret
ror
inc
int
pop
cld
nop
mov
insb
mov
fstpt
inc
mov
jo
xor
jns
mov
lahf
sar
jmp
add
xchg
cmpsl
popf
inc
adc
add
add
std
test
jg
jbe
movsb
inc
sti
sbb
add
add
add
cli
addr16
or
mov
in
in
addr16
stc
and
popf
addr16
outsl
jge
das
push
jl
inc
inc
scas
xchg
leave
mov
pushf
fidivs
push
cld
pop
mov
cmc
movsl
cmp
negb
sbb
cmp
lret
xor
dec
pop
sub
hlt
jae
fistpll
lahf
rorb
aaa
testl
ljmp
mov
scas
cmp
xor
cltd
or
in
pop
sbbb
leave
aam
push
xor
xchg
shlb
ss
push
mov
cwtl
shl
add
adc
mov
and
mov
mov
push
repz
add
xlat
sbb
cli
push
pop
sbb
or
aam
scas
out
cmpsb
lcall
ret
pushf
lret
mov
loopne
inc
lods
hlt
cmp
add
add
adc
in
lcall
xor
pop
pop
sahf
lret
mov
add
in
dec
test
sub
push
out
xor
push
jne
out
nop
sbb
push
clc
inc
mov
frndint
out
bound
adcb
xchg
pop
push
mov
add
sbb
add
ss
es
call
and
mov
xchg
mov
sahf
push
and
cltd
data16
inc
movsb
repnz
lcall
push
mov
jnp
xchg
lret
and
mov
bound
pop
js
mov
movsl
jg
movsb
cmp
jae
sub
push
loop
shll
dec
addl
xchg
lahf
cmp
lds
pop
fstl
mov
out
cmp
lods
inc
les
jb
cmp
ja
dec
xchg
nop
les
xchg
xor
aaa
xor
add
xor
sub
ret
ss
jb
pop
add
add
sub
jg,pt
stos
dec
push
jo
add
sarb
add
out
cmp
inc
push
mov
sbb
out
cli
test
add
enter
cmp
out
adcb
xchg
mov
insl
inc
into
sti
cmp
jl
aaa
in
fwait
ja
and
sub
pop
add
cmp
and
mov
sub
push
push
pop
dec
scas
mov
data16
add
idivb
lahf
jl,pt
out
out
xchg
addr16
fcompl
push
std
iret
push
pop
xor
pushl
mov
test
mov
inc
mov
test
xor
mov
orl
push
out
pop
rcl
in
inc
push
test
cmp
push
mov
in
adc
xchg
je
iret
mov
inc
inc
loop
push
inc
sub
lods
push
ljmp
iret
movsb
jns
dec
test
push
jmp
fucomip
stos
jno
add
add
out
idiv
outsl
mov
dec
ficoml
add
add
add
xchg
add
or
sub
rolb
cmpsl
lods
dec
xor
lahf
cld
sarl
jnp
clc
or
fsubs
cs
stos
push
pop
loop
dec
repnz
sbb
jbe
nop
dec
sbb
dec
dec
mov
mov
cs
jmp
jmp
mov
inc
jl
push
mov
xor
ja
sbb
mov
movsb
sbb
jnp,pn
mov
sbb
shrb
sbb
or
into
adc
xchg
and
mov
push
popf
stc
push
imul
xlat
aad
movsb
mov
scas
sbb
push
std
pop
push
cmp
jae
pop
dec
decl
loope
outsl
add
popf
rcll
inc
aam
jbe
cmp
scas
adc
cmp
ret
dec
roll
je
lcall
push
adc
mov
mov
sub
sub
lods
lahf
lret
add
xor
mov
cltd
loopne
jg
stos
roll
cmc
add
add
jo
loope
mov
daa
dec
add
cld
ret
push
and
stos
mov
sub
dec
mov
mov
leave
lods
js
and
jge
push
mov
lea
leave
inc
dec
push
pop
iret
mov
ror
and
jbe
push
arpl
jb
sub
cmc
stos
mov
inc
mov
repnz
mov
popf
jae
push
fadds
scas
cmp
pop
xor
push
jmp
or
inc
imul
cmp
sbb
push
sub
les
stc
and
js
mov
cmp
sub
add
push
add
repz
sub
ljmp
rol
sbb
adc
jno
or
mov
push
mov
rol
ss
mov
push
sub
pop
hlt
or
repz
cmc
xchg
mov
dec
add
add
fistpll
call
add
add
cmc
add
add
jnp
hlt
cmp
and
dec
adc
cmpsl
repnz
cld
and
cld
and
arpl
add
jbe
xlat
xchg
in
inc
sub
push
out
push
or
in
mov
mov
push
mov
jl
stc
out
jmp
int
ficompl
call
arpl
leave
and
repnz
int3
shrl
adc
out
sbb
sbb
andl
cld
xchg
sub
xchg
daa
mov
cmc
push
lret
movups
leave
lret
andl
insl
fndisi(8087
push
dec
sub
dec
pop
push
rorb
dec
lcall
and
mulb
mov
insl
jo
sbb
sbb
movsb
mov
inc
cmc
push
test
addr16
mov
lret
dec
inc
loopne
ja
stos
sarl
mov
push
test
sub
les
add
add
std
sti
leave
sti
iret
ljmp
ret
xchg
mov
add
add
add
jo
mov
xor
nop
pop
cld
ja
fs
xchg
xchg
push
pop
call
add
arpl
cmp
jno
ds
sbb
push
rorl
and
cmpsb
adc
xchg
add
scas
test
sbb
ljmp
sbb
in
clc
and
sbb
and
xor
adc
mov
push
out
pop
sbb
or
xor
notl
adc
mov
mov
mov
fwait
addr16
and
test
or
and
ja
std
or
sbb
sti
or
pop
orb
inc
lock
in
sar
or
mov
fnstsw
mov
cwtl
jne
xor
iret
adc
enter
sbb
pop
mov
test
push
les
stc
mov
lcall
pop
lret
lods
xor
add
mov
push
jecxz
scas
aaa
sub
inc
dec
xchg
add
add
mov
es
sbb
add
cmc
add
add
adc
es
imul
and
xchg
push
sub
dec
adc
lods
lods
xor
mov
add
test
cmp
mov
adc
or
xchg
push
mov
sub
leave
in
sahf
in
sub
mov
adc
div
and
jg
fnstsw
mov
and
push
jg
rol
lods
and
xchg
mov
fcomps
sbb
xchg
mov
es
andl
mov
roll
lss
inc
jge
loopne
sahf
scas
neg
push
push
add
mov
hlt
lds
rcll
cmpsl
dec
cmp
fisttps
mov
adc
test
add
push
cmp
out
xchg
sbb
and
push
adc
add
add
jg
mov
sub
pavgw
mov
cmc
add
add
lds
lcall
sbbb
ficompl
mul
imul
int
es
mov
gs
adc
arpl
jecxz
cmp
cli
call
xor
lods
sub
lock
xor
add
movsb
sub
scas
jne
dec
pop
push
mov
sub
add
push
jecxz
push
cmpsl
mov
test
lahf
sub
jp
or
add
test
daa
push
lea
sub
leave
pop
mov
or
push
xor
aaa
mov
pop
push
lods
xchg
and
xchg
sub
mov
mov
cmp
test
enter
mov
sub
adc
fsts
adc
sti
lea
jne
outsb
out
ret
and
fisubrl
ss
mov
xor
push
cld
pushl
out
adc
sub
jae
add
cmc
add
add
loopne
shll
or
lds
mov
and
jno
js
pop
xchg
addr16
cvtps2pi
pushf
out
or
jg
es
in
push
in
adc
push
and
bound
sti
xlat
imul
scas
sub
loop
rep
xor
cmpsl
xor
push
les
insb
in
xchg
cmpsb
push
pop
lcall
mov
and
cs
test
sbb
lock
repnz
movsb
and
ret
xchg
dec
xchg
int
fistpll
pop
ds
add
lods
dec
cmpsb
mov
pop
out
test
xor
lds
stc
push
scas
arpl
test
out
out
insl
fdivl
mov
xchg
lret
add
out
daa
repz
lods
stos
sub
xchg
mov
xor
sbb
inc
dec
sub
xlat
pushf
shrb
jb
ret
fs
movl
add
daa
xchg
jno
add
ljmp
gs
cmp
test
jmp
test
mov
addr16
mov
arpl
mov
and
cld
push
sbb
xchg
inc
into
add
nop
xchg
inc
int3
fwait
pop
leave
xchg
xor
dec
mov
sahf
insl
sub
fdiv
push
cmpsb
sub
add
movsl
lret
jne
sbb
push
aad
lret
mov
lcall
push
mov
add
int3
orl
adc
test
pop
cmp
int
sub
in
movsb
jp
and
pop
in
xchg
out
push
and
mov
mov
dec
jmp
mov
aas
inc
pushf
mov
dec
mov
imul
sbb
loope
jne
and
and
add
add
test
mov
xchg
push
outsl
push
shll
minps
add
cmc
add
add
idivb
mov
in
cmp
lcall
repnz
adc
frstor
inc
testb
jg
icebp
or
cmpb
jae
int3
sub
add
or
push
inc
mov
mov
sub
dec
and
sub
out
in
rolb
cmpsl
cmp
jb
in
cmp
sbb
xchg
lods
in
loope
mov
xor
or
xor
xchg
mov
sub
xchg
sti
push
test
mov
lret
mov
sbb
call
mov
lret
jae
test
cwtl
pushf
or
lcall
jmp
sub
mov
sbb
rolb
mov
hlt
mov
push
mov
test
jns
cli
sbb
add
inc
ffreep
leave
jmp
or
xor
add
add
jne
jne
jg
out
and
cmpsl
adc
leave
add
cmc
add
add
push
cltd
and
adc
stos
cmp
adc
sub
ja
jg
mov
rcl
inc
fdivrl
out
or
jbe
shlb
mov
xchg
mov
jg
movsl
mov
jmp
inc
lods
mov
loopne
mov
lea
cmp
mov
xlat
inc
mov
cmp
xor
decl
xchg
adc
imul
xchg
cmp
popa
sub
movsb
inc
jb
mov
push
push
lods
jp
inc
xchg
xor
insb
loope
iret
cmp
push
cmp
mov
aam
cmpsl
repnz
pop
jae
mov
xor
xchg
loop
mov
aam
cmp
mov
hlt
sbb
les
cmp
pop
adc
movsl
cmp
inc
sbb
mov
fadds
popa
out
xchg
es
sub
add
sbb
mov
cmpsb
fstpl
loopne
xchg
mov
cmc
add
add
and
popf
cmp
inc
xchg
lods
pushf
push
sbb
dec
xorb
mov
sub
or
mov
dec
rcrl
sbb
xor
out
lcall
lock
ljmp
push
cmpsl
cmp
div
add
int
or
and
adc
test
mov
push
or
cmpsb
jnp
cmpsb
jno
mov
in
cmp
add
test
add
test
mov
aaa
not
jg
dec
ds
call
push
mov
repnz
std
mov
jb
mov
lea
sub
je
movsb
sahf
outsb
adc
jno
gs
loop
adc
rcrl
mov
movb
lret
xorb
push
out
rorb
shrl
sbb
cmp
push
xor
add
add
outsb
jle
lods
not
mov
add
lret
add
cmc
add
add
xor
hlt
mov
fcoms
and
adc
push
jmp
stc
movsl
sub
imul
sbb
stos
push
daa
into
lahf
in
int3
leave
movsb
push
push
push
push
insl
aaa
push
add
bound
pop
jne
fwait
in
outsb
pop
inc
dec
jno
adc
ds
pop
mov
sbb
cmp
and
jmp
movsb
push
inc
fdivl
decb
sti
or
or
popf
and
mov
pop
and
xchg
arpl
push
mov
dec
roll
rolb
loope
mov
adc
pop
inc
stos
test
xchg
bound
out
je
orl
repz
dec
mov
add
xchg
mov
enter
mov
ficoml
lods
inc
adc
mov
dec
lret
xor
roll
push
mov
mov
push
xor
into
xor
add
cmc
add
add
push
lds
js
xchg
cmp
inc
pop
push
mov
jmp
into
mov
pop
out
les
or
enter
test
fs
push
ja
mov
popl
cli
lods
xor
xor
cmpsl
mov
dec
test
mov
xchg
stos
shrl
push
aam
test
inc
mov
add
movsl
dec
mov
test
or
repz
inc
inc
push
popa
aas
sbb
lret
popa
imul
cs
lret
push
dec
pop
adcl
leave
enter
out
pop
mov
mov
in
jae
dec
insb
mov
popf
cmp
lds
ss
xchg
mov
inc
fcoms
xchg
jae
cmp
cmp
adc
push
roll
push
out
mov
xor
lds
ret
lods
dec
loope
testb
add
test
sbb
xlat
ss
inc
movsb
cmpsl
movsb
movsl
xchg
es
add
add
add
mov
sbb
and
leave
cmp
rorb
pop
sti
stos
fwait
adc
pop
adc
xchg
lods
repz
lds
cmp
cmp
and
adc
mov
cmp
ljmp
jo
mov
stos
xor
dec
jge
or
inc
fimull
mov
adc
bound
es
push
push
mov
fsubrl
pop
xchg
push
and
dec
incb
jae
mov
es
sub
incb
popf
jb
cmp
jno
cltd
hlt
mov
adc
and
mov
sahf
std
ds
fdivl
test
arpl
call
stc
daa
lea
shr
mov
cmpl
filds
or
iret
test
adc
mov
mov
jge
pop
outsl
dec
fcomp
scas
fwait
sbb
jnp
jg
pop
in
cmp
or
jnp
lcall
lret
das
add
add
push
sub
cmp
jg
cmp
pop
aaa
sbb
add
cmc
add
add
cmp
dec
and
xchg
mov
roll
daa
aad
sbb
cmc
sahf
lds
pop
adc
mov
sbb
push
jnp
cli
or
cld
ss
iret
fdivs
call
adc
mov
mov
inc
mov
js
lret
mov
mov
lcallw
lcall
pop
jecxz
sahf
push
popa
inc
in
pop
lret
inc
xchg
cmp
pop
mov
int
jecxz
ror
xchg
int3
push
icebp
xor
xchg
mov
mov
repnz
push
sbb
aad
jnp
sbb
pop
inc
fdiv
mov
sbb
jle
sbb
xchg
das
repnz
into
mulb
test
sbb
stc
int
add
mov
pop
sub
cmpsl
and
add
push
push
out
xchg
loopne
inc
test
mov
repnz
add
xor
fistpll
out
repz
aam
jge
out
iret
add
cmc
add
add
sarb
adc
add
out
pop
sub
inc
es
push
dec
mov
stos
and
cmp
add
shl
xchg
test
jle
sarl
dec
pop
or
dec
xlat
jb
mov
insl
xor
sub
jecxz
data16
push
scas
rolb
mov
cltd
jo
andl
outsl
push
jmp
ljmp
sbb
dec
mov
out
ret
gs
sbb
rcrb
adc
mov
cmpsb
push
xchg
push
hlt
or
js
and
jge
xor
or
pop
sbb
imul
test
jno
bound
xor
outsb
int3
mov
mov
rcll
push
cmc
cltd
xchg
out
fwait
cmp
dec
jle
leave
jle
call
add
add
mov
jne
and
arpl
cmc
add
add
sti
mov
cmp
fmull
fstpl
cmpsb
inc
fwait
sbb
pop
scas
jno
repnz
sbb
bound
fs
inc
sub
fs
test
pop
je
cmp
or
cmpsb
push
insb
sahf
movsb
push
imul
in
sbb
ficoml
cmp
scas
mov
mov
lret
arpl
fnstsw
mov
mov
je
sahf
cmpsl
int3
out
jge
in
inc
or
cs
loop
or
pop
adcb
sub
mov
and
push
loop
push
jns
sbbl
jmp
fcomp
aas
push
jo
insb
push
out
test
jp
mov
std
cmpsb
repnz
loop
inc
dec
pop
roll
mov
cmp
popf
mov
movb
outsl
and
mov
and
jnp
push
mov
mov
add
stc
enter
in
out
mov
dec
movsb
jecxz
xor
rolb
add
add
add
push
test
mov
stc
fidivl
xchg
push
mov
data16
mov
mov
ret
push
cmovo
add
gs
push
jp
and
mov
inc
cwtl
push
push
int
fdivrp
pop
xchg
xchg
xchg
dec
jl
outsb
push
dec
movaps
mov
shr
divb
repnz
nop
roll
ja
mov
daa
mov
lods
pop
or
rcrb
and
add
daa
pop
les
xchg
sahf
sbb
rcll
inc
mov
push
mov
xchg
adc
push
xchg
daa
fs
xor
add
or
push
mov
in
xor
stos
out
push
mov
xchg
dec
xor
aas
and
push
loopne
mov
stc
ljmp
xchg
mov
adc
rolb
loopne
aad
sbb
sti
mov
and
imul
fwait
add
add
imul
cmc
call
test
out
roll
add
add
add
mov
daa
sub
mov
aaa
popf
and
daa
int
or
fimull
fbld
inc
add
rcll
jbe
stos
push
xchg
mov
dec
lcall
and
push
sarb
hlt
test
and
add
sub
dec
imul
int3
ljmp
mov
sahf
or
pushf
xchg
push
lret
jl
andl
in
lcall
sub
lods
push
cmc
mov
sbb
jecxz
test
lods
daa
mov
sbb
lahf
aas
cltd
aas
inc
push
lds
js
nop
pop
sub
push
push
popa
aas
movsl
jne
fs
jp
mov
insl
push
into
outsb
test
in
push
mov
dec
ja
push
sbb
pop
fisttpl
dec
fldt
fcmove
roll
mov
jo
add
add
ja
iret
xchg
xor
jns
int3
in
add
cmc
add
add
push
xchg
cmpl
sub
repz
sub
push
mov
inc
lock
insb
and
xor
cmc
cmp
cmp
push
inc
in
add
ret
out
xchg
in
std
and
je
push
jl
jl
stc
xchg
pushf
repz
scas
jge
pop
xchg
mov
addr16
jp
inc
dec
ljmp
push
sahf
hlt
pushf
push
mov
mov
call
pop
out
mov
popa
testb
dec
pop
stc
or
cmp
sbb
rcrb
mov
and
mov
xor
fdivs
mov
in
pusha
mov
push
int3
clc
jbe
mov
lock
and
lea
mov
mov
repz
push
in
mov
adc
dec
pop
sbb
movsb
mov
cmp
add
add
out
into
gs
fsts
add
add
cmc
add
add
in
mov
insb
cmp
ljmp
cld
cs
aaa
xor
jl
push
mov
imul
out
mov
mov
jp
adc
dec
fdivrs
scas
mov
xor
cmpsl
addr16
add
mov
push
xchg
sbb
lods
data16
add
adc
dec
pusha
arpl
test
jns
and
cltd
dec
iret
je
jno
pop
in
scas
pop
or
outsb
sbb
push
or
cli
hlt
out
aaa
mov
movsl
ljmp
push
xchg
sub
daa
lret
sub
jne
orl
mov
fxch
dec
pushl
js
shrb
dec
adc
xchg
push
insl
pavgw
dec
xor
jbe
sub
leave
inc
dec
testb
xchg
pop
mov
pop
and
mov
mov
push
inc
xchg
or
dec
lods
imul
add
add
xchg
and
je
out
mov
ret
vcmppd
add
cmc
add
add
jl
mov
mov
pop
jecxz
gs
rolb
add
add
loope
adc
fcmovbe
xor
mov
lret
sub
mov
mov
mov
push
daa
or
fsts
out
popf
jae
ret
inc
sbb
decl
cmp
imul
repnz
and
sub
lahf
inc
fmuls
pop
add
or
jle
cmp
data16
int3
mov
notb
jle
lret
ja
adc
cwtl
sbb
out
mov
insb
or
andl
ds
mov
push
pop
add
loop
or
inc
sbb
fisubs
push
push
insb
push
xlat
inc
stc
sar
repnz
xor
mov
xchg
mov
or
rclb
cmc
pusha
or
cmp
push
push
clc
popa
aad
add
dec
inc
dec
daa
dec
das
outsb
imul
enter
push
pop
ret
aad
add
add
add
test
pusha
dec
test
cmc
jecxz
add
unpcklps
mov
push
out
and
pop
adc
jbe
fs
and
repz
je
add
push
cli
fisubrl
les
loopne
daa
ss
and
jns
jnp
mov
sub
xor
mov
addr16
adc
faddp
mov
cmp
xorb
and
pop
jo
inc
jo
inc
and
call
rolb
xchg
cli
not
mov
add
xor
jae
fidivrs
aaa
cltd
pop
pop
xlat
insb
mov
addb
js
cmpsb
es
and
daa
arpl
fstps
mov
js
lcall
je
xor
les
cmpsb
cmpsb
cmpsl
subb
adc
js
and
loope
fstpl
loop
ja
push
add
add
popf
mov
lahf
or
fdivs
mov
add
add
ret
sub
jb
pop
sbb
cmp
dec
das
scas
sub
dec
in
mov
pop
push
cmp
aad
into
push
sbb
push
xor
xchg
cltd
imulb
cmpsb
xchg
leave
xor
xor
pusha
jne
add
stos
lahf
cmpsb
fcmovu
test
and
inc
int
mov
push
sti
sub
in
push
sahf
aaa
sbb
add
test
xchg
dec
inc
jecxz
inc
sbb
jg
cltd
in
lret
mov
jbe
ret
add
mov
mov
inc
add
mov
xchg
shlb
jp
in
gs
or
lcall
pushf
ret
mov
mov
sub
or
test
ljmp
inc
into
ret
xchg
sarl
hlt
jno
xor
ja
sbb
loopne
pushf
out
mov
add
neg
outsl
mov
push
and
shlb
lods
xlat
add
cmc
add
add
mov
cwtl
in
divb
mov
pop
jns
sbb
or
and
mov
mov
add
insl
lcall
ds
aad
rcll
ljmp
stos
mov
dec
clc
or
pop
insb
cld
jo
cli
push
lock
or
add
cltd
push
push
fstl
in
pop
pop
lock
jo
pop
xor
fildll
adc
add
addr16
sub
adc
mov
mov
xor
inc
stos
pmulhuw
pop
and
imul
pop
cmp
aam
mov
gs
enter
cmp
xchg
paddusw
mov
adc
mov
pusha
stos
or
sahf
pop
dec
cmpb
mov
mov
add
add
add
sbb
sbb
ltr
cmp
add
add
dec
ja
std
stos
pop
xchg
jb
push
dec
xchg
xchg
outsl
pop
aas
mov
imul
xor
mov
pop
xchg
inc
push
cmp
sub
push
push
pop
xor
mov
cmp
mov
sub
in
fstl
pop
inc
inc
fimull
imul
je
jecxz
xchg
mov
imul
jmp
xor
push
shll
jmp
xchg
out
fmull
xchg
into
inc
pop
push
or
insl
add
out
out
leave
inc
rorl
push
test
xor
xor
jns
or
inc
int3
jnp
and
cmp
insb
mov
jle
pop
add
ret
cli
jae
cmpsl
es
cmpsb
push
loopne
mov
jecxz
or
test
negl
dec
mov
iret
sbb
mov
push
lds
repz
lds
int
mov
add
mov
pushf
adc
ds
sub
add
cmc
add
add
jns
out
int3
cmp
scas
jo
push
push
stos
pop
mov
pop
out
aas
in
pusha
push
aad
or
xor
test
xchg
je
mov
rol
fsts
fsubrp
ds
or
xchg
out
xor
addb
movb
dec
into
push
ret
cmpb
cmp
call
repz
pop
fildl
call
cld
xchg
sbb
shll
mov
adc
xchg
sub
mov
and
inc
mov
fstl
int3
ss
lds
nop
adc
dec
cli
cmp
adc
jb
adc
push
inc
pop
hlt
test
mov
xchg
inc
mov
jo
pop
inc
inc
lods
ss
pusha
mov
jle
and
fmuls
fidivrl
sub
ss
fidivl
cmp
pop
and
add
add
lcall
sbb
mov
mov
add
cmc
add
add
repz
sub
mov
mov
ret
pop
or
or
inc
lret
cltd
add
adc
and
jae
adc
xchg
cltd
mov
or
repz
out
movsb
mov
xchg
in
inc
sub
inc
pushf
push
adc
mov
loop,pt
mov
dec
dec
rorl
sub
sub
shll
test
fs
fstpl
push
imul
mov
aaa
mov
push
push
xor
jecxz
adc
cmp
imul
sub
adc
mov
mov
bound
push
sbb
pop
stos
and
push
push
cwtl
xor
jg
outsl
pusha
sbbl
inc
dec
in
in
ret
js
mov
bound
int3
jbe
call
pop
shlb
mov
cmc
jae
adc
pop
mov
jne
pop
inc
sub
add
cmp
jg
loope
cs
sbb
add
cmc
add
add
mov
outsb
or
xchg
rclb
cmp
adc
sbb
dec
js
sub
movsl
out
scas
push
pop
repz
movsl
fildll
pusha
sub
adc
icebp
mov
int3
leave
fwait
in
subl
rorl
inc
xchg
pop
sahf
rorb
sub
mov
stos
inc
pop
es
jb
adc
jecxz
repnz
insl
dec
mov
mov
cmp
mov
and
push
mov
push
add
hlt
xlat
pusha
sbb
je
in
icebp
xchg
mov
out
sbbl
mov
and
dec
mov
in
in
push
out
inc
outsb
mov
cltd
jmp
rorl
ds
sub
mov
and
pop
nop
or
mov
test
and
imul
xor
xor
add
cmc
add
add
jl
test
mov
xlat
push
int
fdivrl
out
out
sbb
in
insb
andb
ficoml
vpand
aam
cmp
in
and
dec
and
mov
enter
cltd
orps
dec
test
cmp
lea
mov
sbb
jne
push
jge
push
roll
iret
fcoml
push
mov
jecxz
loope
mov
daa
movsb
sarl
cmp
lahf
jno
loop
sub
jo
jge
xlat
and
pop
jl
fldt
cmp
rcrl
mov
movsb
mov
lcall
insl
popa
idiv
sahf
add
dec
jg
adc
mov
pop
inc
out
cmp
adc
mov
xchg
and
pusha
dec
xlat
cbtw
cmp
xchg
pop
cmpsl
and
mov
xor
repz
dec
or
add
add
psubusw
push
xchg
fsubrs
sbb
add
cmc
add
add
ja
xorw
jbe
xchg
movsb
scas
xchg
scas
in
add
pop
fisubrl
clc
hlt
enter
jo
jp
xchg
add
fdivrs
inc
fdivs
in
mov
add
xor
sub
xchg
jg
pop
push
out
dec
sahf
lcall
lods
ss
es
imul
js
jbe
call
cmp
xor
inc
mov
mov
cltd
push
cmc
add
or
imul
mov
and
inc
inc
add
je
and
inc
ret
cld
cmpsb
inc
sub
je
ljmp
adc
das
jmp
push
jle
add
sbb
rolb
cmp
loope
repz
outsb
pop
xchg
shll
pop
sbb
mov
jmp
sub
sbb
mov
push
dec
test
fidivrs
inc
jg
insl
add
add
sbb
sahf
cmc
fsubrp
jnp
mov
shlb
add
cmc
add
add
fistpl
es
movsl
sti
pop
mov
add
jle
jmp
pop
mov
or
out
addr16
jb
xor
mov
xor
mov
outsl
movsl
pop
cwtl
stos
cmpsb
stos
cwtl
xchg
dec
cmp
bound
stos
or
mov
sar
cmp
and
repz
pop
xorb
push
mov
sbb
jle
cs
lcall
cltd
adc
mov
xor
push
mov
insb
imul
adc
icebp
inc
das
lcall
push
inc
lahf
out
dec
int3
inc
sub
lods
mov
dec
jl
test
aam
xchg
sar
das
ljmp
push
test
jae
out
jmp
and
mov
cltd
insl
out
pop
cmpsl
repz
xchg
dec
mov
push
xchg
sti
jns
sbb
repnz
pop
dec
jle
jg
std
fldt
cmp
mov
filds
add
add
add
mov
test
push
sub
inc
mov
xchg
or
out
lcall
je
sub
in
push
subb
fildl
adc
sub
sbb
cmp
add
push
fs
testb
pop
jecxz
fwait
das
out
les
inc
aam
pop
xor
and
enter
out
cmp
adc
cmp
clc
paddw
and
adc
movsb
or
mov
nop
pop
cs
inc
mov
addr16
icebp
inc
mov
push
daa
sbb
inc
xchg
mov
dec
cmc
cmp
fsubrs
and
loop
shlb
xor
popf
pop
test
es
dec
xchg
adc
test
xchg
pop
insl
aas
lock
mov
mov
and
daa
out
add
insl
or
cmp
mov
mov
outsb
push
movl
add
mov
sti
idiv
lods
jne
adc
fnstcw
add
cmc
add
add
jp
lods
or
cld
mov
adc
imul
jle
daa
xchg
sbb
or
add
mov
ret
and
ljmp
into
fs
cmp
or
mov
shl
sub
adc
inc
cld
dec
les
jae
sarl
add
push
sbb
mov
sub
mov
sub
mov
out
out
stos
mov
fiadds
pop
pop
inc
orl
xchg
xchg
adc
ss
into
lock
fisubl
xlat
mov
out
cmp
andb
emms
cli
orl
push
sbb
or
xchg
cmp
sbb
push
leave
mov
xor
sub
pop
jg
dec
out
movsl
sub
je
inc
pop
dec
fwait
cmp
out
adc
shrl
dec
xor
add
adc
leave
jmp
mov
sub
add
add
add
dec
cmpsb
cmpsl
mov
xlat
dec
push
push
cld
ret
sbbb
out
sub
out
mov
add
add
sbb
hlt
dec
push
jl
xchg
adc
aaa
sbb
mov
jmp
push
push
std
jno
imul
adc
and
sbb
cwtl
dec
cld
cmpsl
lods
ss
xchg
pop
cmp
cmpsl
cli
sbbb
xor
sbb
sti
jne
xor
push
mov
mov
iret
mov
xchg
test
dec
nop
inc
push
ret
or
enter
xor
sbb
sub
sti
push
fdivrl
sub
stos
outsl
xchg
lcall
movsl
shrb
mov
push
inc
mov
add
into
and
inc
xchg
pop
mov
dec
into
hlt
lea
or
inc
inc
add
pusha
cmp
xchg
std
test
iret
dec
shlb
add
add
push
out
jp
dec
popl
sbb
add
add
add
ss
cs
dec
das
lods
femms
push
scas
push
add
incl
into
andl
loope
push
outsl
jne
pusha
xchg
das
mov
std
adc
testl
mov
clc
mov
lods
ja
xchg
xlat
push
into
xor
inc
sub
inc
and
scas
out
lahf
cmpsl
mov
sub
sbb
push
mov
or
mov
sbb
push
mov
cld
dec
sahf
push
inc
and
mov
dec
mulb
inc
movsb
xchg
out
adc
xor
cwtl
in
sbb
mov
xor
dec
fwait
or
std
cmpsb
push
das
push
gs
pop
ret
icebp
cmp
lahf
mov
movsb
mov
mov
in
movsl
jecxz
mov
sub
ds
pushf
jae
insb
std
xchg
les
xlat
and
pop
aaa
repz
stos
jmp
add
add
mov
lcall
mov
xlat
sub
add
cmc
add
add
out
dec
mov
testl
xlat
mov
leave
add
in
add
push
cmc
mov
push
adc
loop
lahf
jbe
mov
or
sti
fisubrs
dec
or
mov
push
xchg
stos
cmpsb
insb
or
fsts
test
mov
mov
jp
jecxz
cmp
sbb
enter
jmp
push
cmp
cmp
hlt
sbb
push
mov
in
and
and
sub
cmpsb
ja
insl
or
enter
push
dec
pop
jl
push
jnp
cmpsl
inc
outsb
jb
cmp
and
iret
xchg
push
xchg
popa
add
inc
inc
cmp
push
mov
lods
stc
sarl
stc
add
arpl
leave
popf
adc
mov
dec
out
testl
imull
popf
and
mov
sub
and
jl
inc
adc
dec
push
or
mulb
add
add
mov
jns
daa
data16
push
in
add
add
add
imull
dec
cwtl
jecxz
sub
mov
test
xchg
data16
mov
sub
jge
jns
add
ljmp
or
js
ret
pop
repz
mov
sti
or
or
out
adc
mov
int3
test
xlat
ret
in
pop
cltd
pop
sub
outsb
int
and
mov
mov
cld
mov
xchg
lods
shrl
ds
mov
mov
sbb
arpl
loope
xor
test
push
push
mov
pop
jg
or
ficompl
or
fwait
out
mov
ja
jno
adc
add
adc
faddl
js
pop
lcall
mov
cmp
dec
pop
mov
out
rcrb
in
and
cmp
fildll
add
or
jae
fadd
fsubp
jnp
push
xor
pop
adc
add
cmc
add
add
push
xchg
jnp
test
adc
push
mov
pop
adc
movsl
loopne
out
or
call
xor
and
push
pop
ret
sbb
popf
insb
movsb
aaa
std
or
lods
inc
cli
mov
push
dec
add
call
dec
lock
psubq
pop
jle
cmp
jmp
or
mov
fisubs
push
pop
push
in
test
test
movsl
cli
js
popa
call
dec
mov
inc
in
pop
fcoml
sub
stos
pop
repz
sbb
and
scas
jl
loope
es
push
ljmp
test
jp
jnp
lods
cmp
ds
mov
divb
ficoml
push
and
mov
dec
scas
sub
ds
hlt
jmp
pop
loopne
cmc
push
arpl
lds
shrb
add
sub
cld
cli
jle
addb
or
add
cmc
add
add
fisttps
popa
push
sti
jge
push
dec
hlt
inc
fldl
sub
loop
cmp
jecxz
es
xor
gs
add
in
push
cmc
fmull
scas
jmp
mov
adc
mov
mov
sbb
push
xlat
fst
mov
push
in
ret
out
xchg
jmp
mov
push
cwtl
into
mov
xchg
mov
movl
stc
int3
rclb
add
aam
cmpsb
shlb
xchg
mov
sbb
and
mov
jmp
int3
in
xchg
scas
xor
loope
out
loopne
bound
xor
add
sub
or
popa
pop
xor
mov
out
xor
subl
push
xchg
push
pop
add
stos
inc
testb
in
hlt
add
xchg
gs
push
test
mov
add
lea
pop
jbe
ja
sti
dec
push
sbb
add
out
add
add
add
pop
xchg
ret
sbbl
xor
push
push
push
test
lds
dec
aam
aad
cli
js
cltd
sub
jo
mov
sbb
jne
push
push
fstp
pop
push
mov
shlb
ret
cmc
mov
add
test
popf
and
dec
into
cmp
mov
or
lods
mov
push
push
adc
jo
jnp
loope
in
sti
cmp
je
cmpl
push
mov
fsts
sbb
sbb
shl
cltd
sbb
dec
movsb
shll
push
adc
ja
dec
loopne
push
push
jb
jle,pn
push
mov
aad
and
adc
fcmovbe
out
push
icebp
fs
nop
inc
enter
lea
adc
bound
out
jmp
mov
add
out
and
into
in
stos
jno
or
sub
jnp
add
add
ror
cltd
outsl
mov
cmc
or
jge
repnz
add
add
add
inc
inc
jne
call
cmpsb
mov
scas
test
mov
and
out
push
mov
inc
sarl
mov
jg
popf
orl
movsb
insl
lcall
hlt
push
stc
cld
sbb
pop
dec
lea
sub
cmp
in
push
push
xchg
stos
ljmp
xor
inc
cmp
bound
push
and
inc
nop
int
mov
jb
push
cltd
add
out
push
rorl
stos
int3
jmp
pusha
loope
cld
pop
lds
bound
test
adc
jecxz
mov
les
jns
in
xchg
ret
mov
dec
inc
mov
in
mov
mov
add
xchg
push
enter
mov
or
cmp
xchg
insb
fistpll
aaa
jno
loope
adc
dec
mov
add
add
ja
decl
jecxz
mov
out
add
cmc
add
add
push
jl
jecxz
nop
out
sub
jno
inc
stos
mov
or
imul
ss
insb
cmpsb
sbb
mov
ljmp
xor
sahf
lcall
insl
stos
mov
data16
and
push
stc
push
adc
cmp
push
xchg
xor
pop
xor
vmulps
data16
sbb
stos
loopne
test
insb
xlat
sub
cmpsl
stos
sbb
into
les
ret
repnz
aaa
mov
pop
jb
jb
aas
dec
lods
jp
test
xchg
cmp
mov
adc
icebp
mov
or
outsl
loopne
je
sahf
jecxz
mov
jno
lods
mov
jnp
fldl
mov
sub
or
popf
mov
push
sub
in
pop
andb
aas
gs
aad
xchg
jmp
test
jl
loopne
add
add
add
lock
jg
mov
push
js
mov
cmc
add
add
scas
cmpsb
imul
shrl
jmp
jle
in
mov
jl
pop
gs
jp
call
divl
imul
add
je
cmp
popa
inc
mov
push
daa
lret
and
sbb
mov
adcb
mov
inc
pop
mov
les
pushl
jns
jae
cmp
scas
ds
fidivs
jge
cs
jo
rcll
xor
mov
cmp
ret
dec
outsb
enter
in
jno
adc
inc
scas
jno
sahf
test
mov
mov
lds
jnp
movsb
jns
xchg
pop
inc
je
ja
lods
adc
sbb
loope
outsb
jmp
popa
loope
fld
mov
int3
pushf
xor
mov
fdivs
rclb
add
add
pop
xlat
fisttpl
mov
jl
ljmp
jecxz
xor
push
out
test
out
push
mov
mov
loope
shlb
and
lods
pop
xchg
inc
nop
mov
inc
fwait
pop
mov
push
loopne
mov
inc
xlat
pop
adc
decl
jnp
int3
lock
mov
lret
mov
clc
mov
adc
jnp
inc
mov
daa
cli
outsl
push
sub
and
ljmp
es
sti
xchg
shr
lea
push
pusha
mov
lods
push
mov
xchg
mov
xchg
stos
cmp
cmpsl
mov
insb
outsb
jae
out
mov
xchg
das
out
int
sbb
adc
popf
mov
lods
xor
pop
jl
adc
test
lret
rorb
mov
jb
enter
enter
ret
fdivl
push
scas
outsl
inc
and
jmp
loope
mov
cli
mov
xchg
push
sub
stc
mov
dec
js
stc
mov
push
nop
aad
fisttps
dec
jmp
add
add
add
pop
add
mov
icebp
cmp
adc
or
negl
mov
pop
into
lock
and
pusha
inc
adcl
and
jmp
cli
push
loopne,pt
sub
fmul
push
popa
ret
jo
je
outsb
xchg
subb
ret
out
pop
mov
popl
lock
cmpsl
lds
hlt
jo
imul
lods
dec
call
xor
stos
in
push
sahf
inc
lret
xchg
pusha
adc
and
mov
cmp
lods
lock
subl
enter
push
xchg
push
idiv
sbb
xor
xor
mov
xor
sub
out
sub
test
into
adc
push
mov
je
dec
aas
adc
js
sbb
int3
stos
or
xor
je
inc
inc
loop
sub
lods
xor
shrb
daa
add
add
insl
repz
add
push
cli
scas
adc
cmc
add
add
mov
add
jp
ret
aaa
mov
cwtl
mov
scas
fwait
adc
mov
push
dec
out
mov
pop
mov
pop
into
add
in
or
sbb
std
cwtl
and
add
aas
dec
cmp
ret
repz
mov
cli
outsb
jb
cmp
sbb
jb
cmp
adc
sti
mov
jp
and
fistps
adc
dec
push
or
enter
pop
sbb
pop
cmpsl
xchg
imul
sahf
scas
mov
pop
loop
xchg
sbb
lcall
mov
sub
and
out
cmp
or
mov
xlat
mov
adc
push
inc
dec
adc
adc
pusha
pop
mov
ljmp
stos
inc
add
cmpsb
mov
pop
push
add
add
mov
pxor
jnp
sbb
jne
in
add
cmc
add
add
sbb
jmp
add
outsl
arpl
xor
sti
pop
sbb
inc
les
adc
add
inc
cld
pop
fnstcw
add
xor
cmp
xchg
icebp
es
jmp
mov
adc
sub
push
xchg
fsubl
repz
sbb
loop
test
xor
mov
add
mov
sbb
cld
mov
adc
imul
sbb
add
push
imul
jecxz
roll
lods
out
in
das
push
sbb
xor
roll
push
cmp
imul
dec
cld
cmp
cli
movsb
orb
adc
sbb
insl
dec
cli
repnz
jg
sub
adc
in
add
out
lods
xor
aas
xlat
jmp
popa
test
movsl
out
add
cmc
add
add
xchg
cltd
jbe
xchg
dec
mov
adc
inc
lcall
xor
push
pop
addl
jecxz
adc
movsl
and
fmull
push
mov
cwtl
in
and
mov
xchg
mov
mov
rclb
push
std
add
inc
stos
jge
adc
inc
cli
fistps
loopne
movsb
inc
push
jg
popa
cmp
leave
add
cmpsl
jl,pt
sbb
mov
ss
push
push
movsl
adc
arpl
andb
les
fimuls
dec
ret
into
insl
ljmp
pop
xchg
adc
mov
jg
push
inc
popf
shll
pop
roll
cltd
mov
nop
out
scas
sbb
adc
jo
test
dec
jmp
adc
sti
mov
fcomip
shll
push
push
push
arpl
fbstp
pop
add
add
jb
scas
cmp
int3
bnd
shrb
out
add
cmc
add
add
jecxz
nop
ds
das
or
xor
lcall
lods
insb
cmp
sub
push
adc
rclb
test
mov
cmc
sub
inc
ds
aaa
sbb
or
sub
cmp
scas
imul
jae
xor
enter
and
push
inc
or
mov
insl
xchg
stc
in
cmp
add
push
push
jecxz
montmul
cmpsb
test
inc
inc
cmp
push
popa
aam
fs
jmp
iret
clc
leave
out
xlat
test
fcomps
and
out
out
xor
cmp
jle
fisttps
test
sub
dec
mov
xchg
jnp
pop
or
shl
leave
xchg
jbe
sbb
cmpsb
arpl
ret
in
xor
push
xchg
enterw
xchg
jbe
in
or
pop
mov
push
aaa
add
add
xlat
mov
lds
mov
add
add
jp
xorl
pop
xor
xor
out
inc
jno
mov
andl
mov
imul
mov
rolb
out
mov
cmp
ret
pop
ret
cltd
add
movsl
loop
mov
icebp
sbb
std
push
lret
subb
scas
pop
cli
test
in
jmp
out
add
aas
lret
adc
pop
push
sbb
fucomp
out
cmp
cmpsb
loopne
push
add
sti
adc
mov
push
cmpsl
fwait
lea
push
leave
sahf
add
outsl
fwait
push
call
add
push
jl
bound
shrb
sti
cwtl
jecxz
les
sbb
jle
cmc
cmpsb
xchg
popa
dec
cli
add
push
loopne
pop
int3
andl
pop
stc
xchg
jo
imul
inc
add
ja
sub
add
add
mov
aas
jp
int3
icebp
pop
xchg
xchg
xor
add
scas
add
inc
xor
enter
mov
add
add
add
sub
in
dec
push
add
mov
mov
dec
fs
sub
insl
cmp
sub
jno
loop
sbb
mov
cmpsb
mov
dec
adc
mov
sub
fcmovnu
mov
xchg
or
cwtl
or
mov
fcomps
dec
cld
or
inc
mov
fwait
cmpsb
sub
dec
add
scas
cmp
cs
cmp
sahf
sub
xchg
adc
jle
xor
lahf
sbb
cmp
addr16
ret
mov
xchg
lret
add
jg
mov
pop
push
sbb
std
add
ljmp
in
push
idivl
jl
inc
mov
or
inc
mov
cmp
push
clc
jb
inc
mov
add
add
mov
sti
mov
icebp
sbb
pop
jns
add
cmc
add
add
les
cmpsl
imul
out
sbb
jae
in
jb
lods
add
jmp
icebp
out
pop
pop
repnz
add
jae
inc
xchg
add
pop
pop
jns
pushf
mov
rol
and
fucom
je
mov
sbb
fisttps
sbb
xor
movsl
pop
mov
loopne
jno
and
pop
les
mov
icebp
adc
vmulps
jecxz
sbb
mov
roll
xor
mov
mov
aas
arpl
movsl
ja
xchg
xlat
cmp
cmpsb
sub
add
loop
ljmp
mov
jno
add
test
xor
mov
mov
mov
adc
mov
movsb
push
movsb
out
popf
fs
push
test
jno
mov
mov
add
push
cmp
adc
neg
jge
push
xchg
popa
xor
add
add
pusha
leave
icebp
jo
cltd
xchg
enter
ja
dec
push
leave
ret
xor
adc
jb
xchg
fcmovu
inc
div
aam
shrl
mov
fisttps
adc
adc
or
pop
out
xchg
outsb
icebp
xlat
int3
inc
sbb
and
mov
sbb
repz
mov
xorb
cmp
pop
test
out
add
sbbb
test
addr16
pop
bound
adc
mov
or
adc
stos
sti
scas
add
xchg
test
sbb
scas
pop
repz
pop
movsb
pop
sbb
mov
jle
cmp
sti
cmp
fadds
xchg
pshufw
push
and
daa
in
in
mov
mov
loopne
hlt
leave
out
int
xchg
hlt
imul
mov
jbe
mov
push
push
stc
pop
adc
add
pop
cmp
outsl
jg
jg
mov
xor
or
arpl
add
cmc
add
add
sbb
cmp
push
xchg
jae
sub
iret
mov
mov
push
rcll
call
test
push
xlat
testl
mov
mov
mov
cmp
push
push
jae
or
xchg
sub
cltd
push
jecxz
ss
inc
sbb
lahf
sub
sbb
jne
push
nop
dec
pop
push
test
mov
mov
or
jb
les
cmc
fldl
or
adc
jo
or
scas
sub
lock
xor
push
and
rcr
xlat
ffree
xor
inc
sub
push
inc
xchg
inc
add
sub
ficoms
or
adc
push
or
inc
lock
ror
cmp
rclb
add
mov
and
cmpsb
inc
add
dec
aad
scas
push
or
dec
aad
in
adcl
add
ret
ja
and
aaa
negl
aas
int
pop
cmc
add
cmc
add
add
out
mov
std
dec
and
lock
jecxz
cmp
xchg
mov
or
cld
dec
push
mov
inc
lock
sbb
fistps
cs
mov
mov
push
inc
sub
pop
ficomps
pushf
push
daa
cmc
loope
push
jae
mov
js
or
scas
int3
cmp
pop
or
push
xchg
mov
std
addr16
daa
das
scas
sbb
insl
add
push
push
mov
mov
xchg
pop
in
adc
sbb
push
or
pop
or
test
shlb
movsl
dec
imul
adc
xchg
lods
push
add
cmp
cmp
ljmp
sub
push
nop
xor
jnp
faddp
or
jecxz
lcall
imul
lret
gs
stos
movsl
xchg
iret
xchg
add
outsl
push
insb
add
add
mov
cmc
mov
cmp
or
dec
testb
cmc
add
add
cmpsl
sub
inc
mov
xchg
popf
lds
sbb
out
dec
mov
aad
cmp
ss
scas
std
lds
fistpl
stc
adc
xchg
stos
bound
popf
cmpsb
jns
add
loopne
add
stos
ljmp
xor
imul
xor
xor
fidivl
xor
pop
ret
add
mov
mov
or
push
or
jle
adc
ret
push
xor
xchg
imul
dec
xor
and
daa
mov
lcall
insl
pusha
inc
fstpl
inc
rcrb
out
or
shll
mov
les
sahf
sbb
dec
or
in
mov
jle
or
dec
scas
cmp
mov
add
sub
sub
sbb
add
jne
cmp
pop
notb
add
cmc
add
add
dec
cli
or
sbbl
outsb
adc
pop
add
sub
add
mov
out
cs
mov
push
das
xchg
leave
add
xor
push
adc
mov
out
xor
pop
cmp
test
cwtl
and
insb
mov
cld
cmp
mov
push
jbe
fwait
jg
ja
test
mov
or
scas
add
cmp
aam
xor
loopne
jl
mov
sub
cmp
cmp
xor
movsl
fs
sub
jle
jmp
aam
jbe
sahf
loop
pop
lods
mov
dec
xlat
into
in
in
leave
or
lea
mov
xor
fdivrl
es
in
aad
push
cmc
jmp
call
push
jb
lods
sub
xor
iret
pop
dec
bound
mov
add
add
imulb
testb
xchg
clc
add
cmc
add
add
inc
push
sbb
fnstsw
dec
lahf
cmp
test
into
stos
xlat
lds
xchg
adc
ficoml
pop
pop
xchg
mov
xor
inc
hlt
popf
lcall
arpl
rclb
sbbb
sbb
xchg
popw
xor
pop
stos
je
ss
inc
shl
mov
and
mov
aam
out
push
jne
gs
mov
fdivs
rorb
mov
sbb
mov
adc
gs
pop
push
cmp
jnp
cmp
pop
jb
mov
call
dec
pop
or
andb
inc
mov
mov
mov
test
subb
push
lods
pushl
stos
enter
xchg
enter
fimuls
insl
arpl
and
ss
xlat
fcmove
sub
rorb
scas
dec
and
imul
add
add
xor
xchg
fwait
bound
jne
jnp
sub
add
cmc
add
add
stos
jg
dec
test
xor
imul
test
xchg
rcl
out
aas
mov
inc
sub
ds
push
in
adc
sbb
xor
outsb
lea
lods
push
std
xchg
je
add
in
mov
into
jmp
iret
lea
add
mov
ret
jne
adc
pusha
lret
cli
call
jmp
inc
push
or
addb
mov
pop
pushf
jecxz
ret
sbb
sarb
adc
sub
pop
fcoml
aam
clc
call
dec
pop
lds
arpl
nop
pop
imul
das
push
idivb
mov
icebp
test
cs
or
push
xchg
xchg
mov
or
ret
adc
adc
ja
pop
sub
jle
sar
les
les
add
add
ds
in
idivl
pushl
mov
add
cmc
add
add
jnp
sbb
jno
incl
inc
cmp
adc
or
jne
xchg
sub
pop
leave
cmp
test
mov
shrb
fadds
xchg
dec
je
pop
je
scas
mov
das
jns
push
push
inc
pop
testl
adcb
mov
je
pusha
ret
sbbb
arpl
loopne
inc
jl
mov
orb
fidivs
pop
push
int3
or
pop
mov
xor
aad
cmp
gs
mov
or
and
sub
ret
sbb
mov
pop
cmp
sbb
stos
inc
mov
xchg
pop
dec
jecxz
xchg
mov
ret
jle
shrb
mov
adc
mov
mov
xor
push
adc
or
jno
dec
jbe
aam
xchg
shrb
loope
add
add
jecxz
inc
cli
aas
push
ljmp
push
sti
add
cmc
add
add
cwtl
dec
xor
mov
dec
xor
xchg
push
and
andl
sti
ret
mov
loop
imul
mov
fs
mov
orl
add
xchg
fiadds
pop
mov
sbb
int
pop
leave
in
orl
sahf
aam
test
dec
imul
gs
xor
cmp
repz
pop
xor
mov
mov
aaa
inc
sub
popa
dec
bound
mov
test
inc
xor
ja
test
imul
lock
ret
sti
stos
xchg
inc
pushf
lcall
iret
push
mov
aas
repz
or
xchg
fstl
and
mov
int3
and
leave
pushf
aam
lods
sub
in
cmp
inc
iret
pop
adc
dec
or
adc
sub
dec
orb
add
lcall
adc
add
cmc
add
add
into
mov
cmpsb
jl
mov
push
adc
adc
or
mov
fcomps
sub
push
pushf
out
lret
mov
jl
fnsave
cli
pop
dec
dec
xchg
jno
data16
and
mov
out
imul
aas
scas
mov
sarb
imul
imul
pop
xor
sbbb
cmp
and
cmp
ficompl
or
sub
sahf
sbb
daa
add
scas
pop
imul
out
or
shl
popf
pop
mov
mov
inc
xchg
testl
sbb
mov
push
daa
cld
pop
ss
and
jae
lret
inc
dec
leave
xchg
pop
mov
ljmp
fnsave
and
dec
mov
dec
cmp
ret
mov
pop
jno
cmp
jno
insb
adc
add
add
jae
cltd
dec
mov
fs
add
cmc
add
add
xor
in
xor
lahf
push
dec
lahf
imul
repnz
lret
loope
stc
dec
pop
or
icebp
subb
data16
sbb
xor
xchg
jle
xchg
faddl
mov
idivb
roll
jmp
push
mov
lods
ret
icebp
xchg
int3
mov
sub
xchg
sub
pop
je
fs
mov
mov
lcall
push
adc
push
hlt
addl
arpl
xlat
popa
push
incl
pop
fsubl
fimull
loop
mov
push
aad
mov
sbb
xchg
cwtl
int3
dec
push
xchg
xor
mov
mov
mov
cmpsb
add
or
loope
jmp
xchg
das
lcallw
dec
imul
lods
push
cmp
loopne
fmuls
aaa
pusha
in
xchg
in
add
add
push
into
nop
out
cwtl
jle
xlat
movsb
add
inc
xchg
repnz
std
add
cmc
add
add
sub
xor
out
add
fwait
lods
cmpsb
lret
sbb
mov
aas
fistpll
ja
xor
xchg
lahf
inc
clc
mov
lds
addl
sub
out
fimuls
mov
push
cmp
je
sbb
dec
add
popf
or
pop
sub
add
js
shrb
adcl
cmp
and
inc
idivb
dec
mov
or
and
dec
aas
or
sahf
mov
shlb
scas
mov
int3
push
imul
and
stc
cmp
sbb
enter
lock
sbb
push
hlt
sbb
cmp
dec
add
call
or
stc
or
cwtl
mov
cmp
mov
cs
icebp
cmc
push
jns
in
jl
lcall
add
add
test
jg
xor
or
pop
bswap
ljmp
add
std
push
test
pop
mov
add
push
jecxz
push
or
sub
sahf
adc
push
mov
jbe
outsl
inc
mov
push
fisttps
filds
push
fimuls
ja
iret
sarb
sbb
mov
jge
sbb
popf
ss
test
movsb
lea
adc
sbb
jle
push
sub
aaa
lds
rclb
rcl
out
add
xchg
mov
ret
aam
add
push
dec
dec
iret
inc
pop
push
jns
and
dec
shll
xchg
dec
paddsb
sbb
mov
add
mov
and
mov
add
mov
dec
into
mov
mov
pop
es
push
push
pop
test
cmc
jnp,pt
pop
push
jle
sbb
sbb
sub
push
mov
sbb
inc
ret
add
add
movsb
push
in
cmc
jne
pop
adc
mov
incl
add
add
add
lock
mov
test
mov
ficoml
inc
sahf
mov
xor
xchg
pop
jecxz
ljmp
cmp
inc
xchg
sbb
jge
paddusw
aam
ror
pop
and
cwtl
shrl
mov
stos
cld
arpl
mov
fs
mull
fmuls
ds
rcrb
fdivrl
or
pop
xchg
aad
decl
out
sbb
dec
popf
jae
lret
aad
mov
pop
mov
mov
sbb
cmpsb
jp
add
negb
cwtl
sub
or
iret
push
enter
imul
mov
aas
adc
das
pop
dec
adc
cmp
jb
test
mov
inc
mov
mov
negl
and
xor
xor
cld
arpl
nop
ja
add
sbb
shlb
aas
out
fwait
aaa
call
and
add
add
add
add
clc
jp
gs
sbb
sbb
int
push
aad
dec
adc
mov
das
scas
add
ljmp
jb
sahf
loop
aam
and
bound
das
add
das
ret
xor
js
push
mov
scas
nop
bound
das
fisubs
lret
sub
les
in
call
imul
pop
mov
cmpsl
sub
add
xchg
xchg
loopne
fmuls
lock
jae
cmc
mov
ret
ljmp
push
daa
push
and
adc
mov
sbb
js
fistl
lods
jmp
dec
push
fisttpll
ja
popa
outsl
dec
dec
ja
adc
ja
or
mov
mov
dec
adc
add
cmp
adc
inc
sub
pop
xor
pop
testb
sbb
inc
js
mov
xchg
push
or
mov
aas
icebp
jnp
fmul
add
add
add
add
mov
pop
stos
adc
pop
jecxz
xor
lock
int
ljmp
jge
pop
ss
imull
lods
sar
int3
cld
cmc
lds
popf
fistl
inc
sbb
push
xorb
cmp
popf
out
lret
ss
mov
jo
in
jmp
xchg
adc
inc
push
pop
mov
cmp
jg
dec
pop
out
and
popl
and
aam
lds
movups
add
icebp
mov
aam
cmpsl
lret
mov
and
mov
repz
or
or
je
lods
pop
fdivrs
andb
orb
cmpsb
jb
sbb
xor
sub
movsl
pop
movsb
and
dec
ret
mov
mov
pusha
cmc
pop
and
lock
fists
adc
dec
rol
lret
clc
rorb
cltd
jl
and
xlat
mov
add
add
mov
jno
lcall
or
pushf
in
idiv
mov
out
jno
push
es
fcmovnu
sub
inc
sub
lock
xor
ficoml
in
xorb
psubsb
mov
adc
xchg
sarl
xor
repz
out
das
sbb
test
fists
sub
fnstcw
ss
shl
decl
insb
int3
mov
mov
add
add
fs
inc
lret
aad
mov
std
das
das
and
rol
inc
sub
xchg
xchg
push
frstor
je
push
xor
insb
cmpsb
cwtl
fsubrl
ficoml
fcmovnu
sti
aam
loope
cltd
ljmp
in
movsl
imul
push
and
push
clc
inc
imul
add
mov
inc
add
add
std
aaa
mov
lret
jne
add
add
add
add
jb
shrl
xorb
sub
sub
mov
stos
jl,pt
frstor
push
fucomip
int
add
push
mov
aad
inc
fs
jae
scas
or
mov
xchg
and
xchg
cmp
cmp
repnz
out
popa
pop
call
xor
repz
push
icebp
repz
mov
cs
mov
push
xor
inc
testl
stos
dec
push
cmp
je
out
rclb
cli
inc
lret
iret
loopne
xor
frstor
push
les
lods
andl
fimuls
xor
std
xlat
jecxz
xchg
das
mov
adc
shrw
lods
mov
dec
fisttps
je
test
dec
adc
repz
fisttps
sahf
ficoms
jne
rcll
cmp
es
sub
pop
outsl
cli
icebp
add
add
insl
aam
mov
fs
push
ljmp
xchg
add
push
mov
adc
insl
and
out
adc
cmpsl
aam
pushf
jge
lret
lcall
fstpt
verw
push
dec
cmp
xor
in
fstpl
jnp
sbb
sub
jno
xor
test
int3
test
mov
xor
jno
scas
sub
dec
pop
push
loop
addb
fnstenv
dec
sub
jb
arpl
push
xchg
adc
test
or
push
pminub
bound
hlt
xchg
add
mov
mov
or
dec
add
add
add
movl
add
lret
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cltd
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
test
inc
aas
inc
lea
inc
mov
mov
call
out
fisttps
jecxz
call
lea
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cltd
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
addr16
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
ss
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cltd
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
or
test
clc
testl
enter
ss
pushf
inc
decl
push
xabort
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
mov
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cltd
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cltd
lret
xor
mov
lea
xor
add
inc
dec
mov
addr16
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
cltd
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
cltd
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
mov
ret
xor
add
ss
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
ss
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
pushf
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
inc
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cltd
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cltd
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
nop
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
jmp
mov
jle
inc
nop
in
inc
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
leave
add
and
inc
jne
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
jmp
jge
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
cmc
or
out
mov
pop
push
cmp
sar
incl
inc
in
jle
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
mov
mov
push
insb
push
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
ss
lea
mov
fadd
dec
lds
out
inc
lea
inc
dec
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
jmp
addb
mov
sub
add
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
jmp
push
jmp
addl
mov
inc
out
add
mov
outsb
inc
jle
idivb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
inc
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
std
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cwtd
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
jmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
add
lea
push
rolb
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cltd
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jae
add
mov
mov
data16
inc
lea
test
inc
dec
test
pushl
jnp
mov
mov
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
ss
pushf
inc
mov
hlt
test
cmp
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cltd
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
ss
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cltd
pushf
xor
jne
mov
icebp
icebp
shl
mov
inc
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
testb
dec
mov
mov
xor
mov
in
jge
mov
dec
inc
xor
inc
hlt
ss
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
ss
fdivl
test
push
add
cmp
setns
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
call
jne
mov
inc
and
fs
bswap
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
sti
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cltd
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
jle
popa
data16
into
addr16
add
cmp
add
cld
add
cmp
pop
or
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
decb
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
cmp
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
cmp
add
data16
dec
fisttps
add
ret
lea
add
ss
call
clc
inc
shll
cltd
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cltd
cltd
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cltd
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
ss
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
ss
pushf
pop
mov
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
incb
cmp
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
ss
pushf
push
movl
inc
cmpb
pushf
addr16
shl
dec
xchg
jmp
aam
test
mov
or
add
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
ss
pushf
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
clc
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
dec
pushf
mov
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
mov
push
ret
call
call
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cltd
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
leave
call
call
in
jmp
and
call
pushf
inc
mov
pop
push
in
ret
and
mov
and
mov
or
lcall
or
decl
jl
adc
dec
cmp
mov
and
xor
test
jge
push
jmp
adc
dec
pop
ret
push
jmp
mov
add
adc
or
add
add
adc
std
dec
adc
outsb
adc
sahf
xor
add
adc
fs
add
inc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
inc
add
adc
adc
add
push
adc
roll
int
adc
mov
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
push
adc
sbb
adc
mov
dec
adc
inc
or
add
adc
mov
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
imul
sahf
push
adc
jle
adc
jbe
adc
cmp
add
adc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
adc
dec
dec
adc
dec
popa
adc
adc
add
push
adc
hlt
pop
adc
dec
pop
adc
ja
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
push
xor
cmp
push
add
push
xor
xor
push
add
inc
pop
dec
push
push
add
pop
aaa
xor
xor
inc
pop
add
cmp
push
cmp
add
cmp
cmp
pop
inc
dec
inc
push
add
xor
xor
inc
xor
xor
xor
dec
xor
add
inc
pop
ss
pop
inc
push
dec
add
push
pop
inc
push
push
push
dec
add
inc
pop
xor
push
pop
pop
xor
push
push
pop
xor
push
dec
xor
xor
xor
inc
pop
pop
xor
push
dec
push
xor
pop
push
xor
inc
add
push
cmp
pop
inc
xor
aaa
xor
pop
inc
cmp
dec
pop
dec
add
pop
push
push
aaa
dec
pop
xor
dec
dec
add
xor
push
pop
push
inc
inc
inc
add
inc
cmp
push
push
pop
dec
inc
push
pop
inc
add
inc
pop
push
inc
pop
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
add
add
add
add
inc
add
dec
add
add
inc
add
add
xor
xor
pop
add
xor
dec
add
pop
add
add
dec
add
add
dec
add
dec
add
xor
xor
pop
add
inc
add
add
push
add
add
pop
add
xor
add
add
dec
add
add
pop
add
pop
add
add
add
add
xor
xor
pop
add
pop
add
pop
add
add
add
dec
add
add
add
push
add
pop
add
xor
inc
add
add
add
add
cmp
push
add
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
push
inc
xor
xchg
xchg
clc
arpl
add
push
cmp
jne
insl
dec
jb
pop
bound
gs
arpl
js
je
jno
jno
bound
jo
bound
