push
mov
sub
mov
mov
inc
mov
sbbl
jmp
xchg
xor
xchg
and
mov
adc
adc
adc
adc
lea
push
repz
lods
add
in
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
lahf
mov
imull
jb
xchg
mov
cmc
jecxz
in
dec
xchg
sets
mov
int3
sub
lret
cmp
gs
lods
mov
popa
inc
xchg
add
sub
popa
cmp
ret
insl
nop
sub
inc
sub
xchg
push
stos
out
mov
arpl
das
in
xor
push
mov
shlb
sti
mov
or
mov
mov
or
out
hlt
ds
sbb
lcall
jno
js
xchg
stos
sbb
adc
mov
test
xchg
adc
cmp
jecxz
xchg
pop
jns
loopne,pt
inc
and
sarb
imul
pop
pop
test
gs
mov
lods
test
jae
sbb
cwtl
adc
and
cmp
out
push
xchg
dec
outsl
xchg
inc
adc
loopne
push
cmp
cltd
pop
sbbb
sti
pop
push
adc
mov
jno
jmp
adc
mov
and
jns
inc
divb
xlat
adc
inc
mov
jecxz
adc
dec
out
loopne
mov
test
adc
cmpsl
sbb
js
dec
xchg
imul
cld
xchg
stos
sahf
call
dec
or
popa
nop
loope
push
jecxz
test
adc
fnstsw
shrb
js
inc
fs
add
sbb
push
mov
inc
mov
movsb
or
mov
pop
mul
pop
push
in
cmp
cmpsb
ds
jle
mov
jne
cmc
stos
and
mov
dec
in
adc
and
cmp
cld
sti
arpl
inc
out
subl
outsl
jno
mov
pop
movsb
mov
adc
stc
dec
jo
cmpsl
and
mov
das
or
xchg
fdivrp
aas
shl
xchg
pop
imul
insb
out
xchg
arpl
sbbl
dec
push
pop
xor
ds
nop
fldenv
std
xor
shl
sahf
out
ja
jne
pushf
xor
mov
nop
sub
cmp
jle
or
clc
mov
dec
test
fisubs
fmul
push
imul
xor
rcll
mov
adc
js
push
movups
mov
sbb
out
cmp
jb
je
movsb
push
loopne
iretw
vunpckhps
fs
mov
out
std
mov
fcompl
push
bound
ret
jge
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
movl
mov
jmp
movl
jb
push
push
call
xor
mov
mov
and
mov
or
mov
xor
sub
xor
mov
mov
xorl
sub
mov
movl
sbb
cmpl
mov
not
jmp
mov
jg
pushl
call
xor
or
mov
sub
or
and
dec
mov
or
xor
subl
mov
cmpl
movl
mov
movl
jmp
mov
movl
jb
push
call
or
mov
xor
movzwl
and
sub
sub
adc
sbbl
or
orl
orl
adcl
lea
mov
mov
sub
imul
mov
or
mov
or
jmp
and
sub
sbb
sbb
fs
lods
ljmp
adc
adc
popl
loop
jne
out
mov
leave
jmp
das
mov
xchg
xchg
push
cli
lea
and
insb
mov
xchg
imul
pop
out
nop
ss
and
dec
out
pop
fisubs
pop
adcl
adc
test
adc
aas
ret
lods
jle
lahf
jp
jne
add
jl
lds
jo
roll
inc
mov
add
addl
ljmp
push
mov
mov
xchg
rolb
and
dec
pop
das
subl
push
psubusb
out
das
ds
pop
stc
movsl
in
loope
and
inc
jnp
mov
or
pop
divb
mov
loopne
push
repnz
sub
mov
aad
push
dec
sub
fldl2t
repnz
imul
addr16
push
out
test
cwtl
in
or
xchg
lock
fwait
lds
fnsave
xor
pop
adc
push
sbb
fwait
cmpsb
mov
mov
push
pop
out
les
outsb
dec
mov
test
roll
imul
leave
push
add
add
ja
sti
xchg
mov
in
sub
pop
mov
daa
std
shll
outsb
or
dec
es
adc
sbb
pop
sbb
dec
mov
jge
and
xchg
pop
cmp
jbe
mov
fldt
lods
xchg
iret
mov
mov
cmp
jne
cmp
xchg
roll
iret
loop
adc
and
and
xor
mov
adc
outsb
icebp
mov
ss
push
pop
sbb
dec
mov
loopne
jg
hlt
adc
mov
in
mov
xor
pusha
test
add
xchg
das
pop
loope
int
decb
adc
jmp
fcompl
mov
inc
test
push
pushl
fisttpl
cmp
stos
adc
stc
xor
or
sub
bound
les
pusha
js
stos
int
testl
mov
loopne
add
popf
movsb
push
outsl
fcompl
xlat
icebp
clc
nop
hlt
xorb
xchg
jge
ss
push
adc
hlt
sbb
jae
movsl
stos
pop
icebp
sub
in
loope
leave
rolb
cmp
inc
xchg
lods
out
inc
fwait
sti
pop
and
sbbl
pop
mov
fldenv
mov
shrl
loope
push
mov
arpl
orb
mov
or
xlat
inc
in
push
pop
fcomps
cmpb
inc
mov
jae
pop
out
xchg
push
xchg
pop
jo
push
stos
mov
inc
popf
je
adc
stc
cmp
outsl
clc
in
pusha
pop
scas
popa
or
ss
jns
in
jne
mov
cmpb
daa
xchg
push
loope
fstps
mov
pop
cmpsb
xchg
hlt
adc
and
and
add
mov
inc
mov
adc
add
push
mov
lahf
inc
sub
loopne
scas
lahf
xchg
pop
pop
sbb
fldt
hlt
mov
mov
sub
or
mov
jmp
push
pop
and
pop
leave
and
sti
lcall
pop
adc
adc
adc
fsub
add
addl
sub
fcomps
into
mov
mov
mov
in
lahf
cmp
fs
pop
mov
mov
and
mov
mov
xor
mov
and
inc
xor
notb
aad
cwtl
xor
scas
sbb
or
pop
push
sbb
in
aam
sbb
push
orb
insl
pop
xchg
sbb
fistpll
ja
lret
dec
and
mov
popa
lret
orb
test
inc
lods
sub
and
dec
jb
sub
mov
lds
mov
mov
loop
ret
mov
mov
or
push
mov
aam
into
and
cmp
sbb
cmp
cmpb
fs
cld
jmp
mov
mov
stos
arpl
das
mov
or
jb
lret
dec
es
fdivrs
sbb
and
cmpsb
xchg
movsl
pop
mov
xchg
hlt
pop
cmc
inc
sub
ds
stos
sub
cli
std
orl
stos
fdivrs
rcl
scas
mov
mov
xor
and
inc
mov
mov
ret
in
mov
in
xchg
xorl
jl
nop
lret
sbb
nop
adc
mov
cmp
lock
push
insl
cli
mov
adc
add
pop
sub
mov
andl
int
or
orb
sbb
mov
ljmp
mov
mov
sti
pop
jns
ja
jmp
mov
dec
loop
fimuls
mov
lret
icebp
xchg
sbb
inc
pop
cli
daa
xlat
sub
fwait
xchg
std
shr
sbbl
movsb
sub
hlt
xchg
aaa
inc
cmp
mov
mov
data16
and
jbe
and
aad
outsb
xor
icebp
cmpsb
xor
or
enter
sti
xacquire
sbb
mov
cmp
dec
mov
jle
xor
sub
lock
inc
jp
xor
push
and
push
fnstenv
mov
stos
lods
dec
jle
and
mov
outsb
or
cmp
mov
dec
add
les
sti
leave
push
aad
fisubs
sub
mov
arpl
leave
pop
das
xlat
mov
jns
adc
sbbb
fstps
sub
roll
cmp
arpl
sbbl
lcall
lret
les
int
mov
push
jo
dec
mov
xchg
icebp
les
lret
adc
push
mov
pop
gs
inc
ret
into
inc
jo
outsb
adc
aaa
nop
ds
xchg
pushf
and
fdivs
es
adc
insl
adc
adc
xor
push
movsl
mov
jecxz
pop
outsb
fstpt
push
sar
push
shlb
jno
push
inc
push
ljmp
inc
mov
xor
js
dec
imul
inc
test
scas
cmp
add
rcr
or
mov
lcall
mov
std
ret
addr16
xchg
loope
into
and
sahf
jno
js
jb
das
push
imul
add
and
add
mov
mov
sub
or
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jl
push
pushl
push
pushl
push
call
not
adc
adc
mov
sub
mov
movzbl
sub
mov
mov
shrd
shr
andl
mov
adc
mov
xor
addl
xor
or
mov
movl
xor
or
sbb
movl
movl
movl
xor
add
mov
adc
movl
movl
movl
cmpl
movl
notl
movl
movl
jmp
not
jge
push
push
pushl
push
push
call
addl
xor
movl
addl
adcl
movl
add
movl
and
movl
sub
movl
movl
movl
movl
sbb
movl
movl
movl
mov
xor
movl
movl
subl
movl
add
movl
movl
movl
movl
cmpl
movl
movl
jmp
movl
movzwl
jne
push
call
addl
andl
adcl
or
subl
andl
cmpl
movl
movl
jmp
not
ja
push
call
subl
andl
subl
orl
subl
andl
mov
shl
orl
mov
push
subl
push
xorl
push
xorl
jmp
and
pop
and
push
mov
adc
adc
adc
xor
jmp
mov
mov
mov
push
movsl
or
out
mov
sub
xchg
jb
andps
lahf
nop
mov
into
pmullw
dec
sbb
frstor
shrb
jmp
xchg
push
xor
icebp
and
decb
jns,pn
movsl
mov
adc
fdivrl
out
mov
cltd
mov
fsts
int
aam
xchg
in
int3
in
jmp
shll
mov
mov
imul
xchg
sbb
push
dec
sbb
sbb
add
jle
xor
sbbb
adc
adc
mov
mov
icebp
xchg
sbb
mov
push
jne
lods
jecxz
sbb
pushf
push
std
mov
push
and
jmp
mov
dec
mov
xor
in
mov
mov
popf
xchg
adc
xor
popf
je
dec
shlb
cld
sub
jg
jl
xchg
mov
mov
iret
sbb
mov
mov
jmp
out
mov
push
mov
xor
hlt
inc
lds
loope
ja
push
inc
enter
lock
sbb
lcall
push
stos
outsl
outsb
lret
pop
mov
cmp
mov
out
mov
xor
fsts
les
xchg
or
mov
xchg
fdiv
stos
adc
cs
and
pop
pop
cmp
fwait
sub
lods
out
lret
inc
cmp
sbb
jbe
sbbl
xchg
xchg
sub
call
lock
ljmp
sbb
lods
push
dec
mov
xchg
cwtl
mov
jmp
sub
call
jb
xchg
popf
rcrb
push
sub
shl
pop
mov
push
and
test
aas
cmp
ja
fistl
add
jp
mov
push
push
push
and
adc
mov
gs
xlat
or
es
lcall
mov
test
inc
imul
mov
and
adc
imull
mov
sbb
fst
mov
cmovno
and
fs
sub
mov
addr16
inc
sbb
popf
and
ss
or
jecxz
test
push
fstpl
cli
lods
dec
jmp
push
xor
push
les
xorl
mov
cmpb
or
sti
loop
push
mov
int3
arpl
fs
and
fisttps
cmp
adc
sub
mov
mov
mov
and
cmpsb
adc
into
jnp
jmp
ja
pop
es
cmp
sub
add
inc
push
movsb
lods
dec
mov
sub
stos
mov
roll
mov
pop
out
mov
dec
or
sbb
in
cwtl
or
aas
out
popa
and
push
cmc
adc
mov
test
lahf
jbe
jle
daa
mov
add
call
mov
sbb
mov
mov
xor
xor
not
jmp
sub
sub
cs
mov
adc
adc
xchg
cmp
pop
push
js
jae
mov
lea
dec
shrb
outsb
mov
pusha
xor
loopne
sti
and
fldln2
cmp
pop
sbb
xchg
mov
cmc
pop
pop
incb
add
adc
mov
mov
cld
aas
sbb
jbe
outsl
dec
xchg
pusha
leave
dec
xor
insl
sbb
mov
inc
aad
stos
fwait
or
jns
enter
imul
int3
and
sub
inc
sbb
lea
ret
aad
lds
and
xor
xor
hlt
jno
dec
mov
pop
into
mov
repnz
sar
data16
xchg
or
xchg
mov
inc
push
sbb
or
xchg
mov
dec
adc
lret
jp
loope
dec
mov
pop
shl
push
mov
shll
mov
es
xor
repnz
inc
sahf
outsb
xorb
mov
inc
call
and
adc
sti
pushf
cmp
mov
dec
dec
imul
push
cld
fwait
add
nop
iret
mov
fidivs
mov
scas
int3
pop
inc
dec
ret
cld
je
mov
mov
rol
sbb
push
mov
aaa
loopne
loop
pop
cmpl
or
pop
adc
jmp
fdivrl
mov
mov
pop
mov
int3
icebp
sbb
roll
lods
xor
add
xorl
movsb
loopne
lods
adcb
cmpsl
sbb
mov
and
cmpsl
mov
scas
mov
pop
adc
sti
arpl
sub
sub
aad
push
xor
mov
into
jne
rcrb
cmc
roll
in
pop
jae
xchg
jo
loope
ljmp
pop
cli
dec
pop
jmp
sarb
push
test
xchg
lahf
cmp
cs
xchg
push
push
jb
std
mov
stos
dec
mov
xchg
enter
or
clc
scas
pop
stos
or
push
icebp
movsb
sahf
jl
jecxz
imul
inc
int3
sbb
adc
cs
stc
jae
ror
jns
js
shll
imul
xchg
jns
pop
lcall
or
inc
pop
mov
xchg
xor
mov
or
pop
inc
fistps
ret
scas
mov
jl
add
adc
or
push
test
cmp
jmp
call
addr16
cltd
cmp
dec
inc
ljmp
cmp
lods
jns
push
fwait
mov
push
fwait
je
imul
cmpsb
push
xor
enter
and
mov
dec
and
dec
or
add
cmpsl
pop
rolb
adc
push
pop
inc
in
adc
xor
les
dec
inc
xlat
and
fisubs
ja
rsm
push
push
mov
cmp
lea
lcall
lahf
mov
and
jle
adcb
add
mov
xor
add
add
mov
sub
or
mov
mov
sub
mov
lea
xor
or
mov
and
mov
adc
mov
adcl
or
and
addl
mov
or
adcl
xor
movl
cmp
movl
jne
mov
mov
sub
sub
mov
sbb
mov
shrd
xorl
shr
mov
or
mov
movl
shl
adcl
xor
xorl
xor
addl
or
movl
mov
movl
cmp
jne
adc
mov
mov
mov
sub
add
mov
xor
sbb
mov
cmpl
movl
mov
jmp
notl
jbe
push
pushl
pushl
pushl
pushl
push
push
call
xor
subl
notl
or
mov
sbb
mov
cmpl
movl
movzwl
mov
jmp
movl
jle
push
call
sbbl
xor
neg
subl
sbb
mov
orl
shrd
subl
mov
dec
mov
addl
xor
shr
xor
mov
sbbl
xor
adcl
or
xorl
shl
xor
sub
and
mov
and
mov
xor
add
xor
mov
xorl
add
mov
neg
mov
adc
mov
and
shrd
orl
shr
mov
mov
add
mov
mov
xor
mov
mov
adc
xor
shl
negl
xor
cmpl
mov
mov
mov
jmp
movl
jb
pushl
push
push
pushl
pushl
push
push
push
pushl
pushl
pushl
pushl
pushl
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
or
mov
add
jmp
lcall
imul
mov
adc
adc
adc
sub
hlt
aaa
mov
push
int3
or
in
leave
xor
lds
das
inc
lret
cmpsb
or
sar
lock
adc
push
add
shl
xchg
add
cmp
subl
in
stc
in
xchg
aas
mov
lcall
pop
bound
repz
push
cmp
jle
xchg
ret
dec
fistl
adc
lret
push
ja
test
roll
add
ret
sub
cmpsl
sbb
cmp
repz
jmp
xlat
stos
sub
dec
jge
lds
out
adc
les
enter
mov
lods
into
leave
push
sbb
bound
cmp
jmp
decl
shll
jo
ror
ret
leave
mov
stos
push
fstps
fcoms
test
and
mov
sahf
xchg
add
stos
rcrl
repnz
into
cs
adc
jmp
xchg
pop
fldcw
jl
ljmp
xor
lahf
rorb
orb
sti
and
lods
incl
lcall
jb
ret
pop
push
cmpsb
inc
insl
fistps
xor
dec
jg
aaa
nop
ja
adc
pop
sbb
fcomi
mov
in
pavgb
push
sbb
push
sahf
in
pop
add
xchg
mov
mov
test
xor
loopne
shrb
cmpsb
cmpsl
insb
ret
fdivl
test
jl
mov
lret
sub
inc
fadds
outsb
sbb
mov
cmp
pop
imul
xchg
inc
data16
mov
push
push
jle
pop
adc
mov
bound
loop
clc
fwait
lahf
jno
aad
add
mov
inc
loop
ss
js
neg
je
xor
ficompl
loop
pop
stos
xlat
fs
insb
out
cmpl
jns
fiaddl
stc
in
in
rolb
outsl
cmp
jle
sarl
push
add
idiv
es
mov
mov
sbb
or
and
ret
sub
fadds
jmp
pop
mov
xchg
arpl
je
stc
lock
fwait
call
sub
into
pop
imul
je
pop
cmp
mov
aam
sub
push
push
xchg
pushf
xchg
add
movsb
cmp
cmp
xchg
push
jge
mov
mov
xchg
lods
or
adc
loopne
mov
pop
je
es
fcoms
inc
ficompl
fsubrl
aam
push
xchg
cltd
testb
and
inc
jb
push
mov
mov
cmpsb
pop
mov
test
and
stos
cmp
movsb
mov
lcall
mov
xor
xor
aaa
out
dec
repz
repz
iret
inc
insb
cmc
repnz
test
mov
mov
mov
stos
stos
jbe
add
and
or
std
lret
aaa
out
mov
aaa
sarb
or
dec
and
sub
xchg
sti
pop
mov
test
xchg
mov
adc
mov
jmp
xchg
cltd
bound
and
push
jo
fcoms
push
adc
adc
dec
dec
mov
das
mov
inc
leave
ret
dec
gs
fmull
mov
mov
mov
pop
or
insl
and
int3
inc
lods
cwtl
add
ja
ds
shr
xor
cmp
pop
pop
adc
and
cld
push
adc
inc
push
xchg
fidivl
sti
pop
movsl
in
fidivs
jle
jae
add
push
aaa
out
or
fcomps
push
and
cmp
mov
fs
push
dec
push
and
pop
mov
dec
or
pop
pop
inc
cmp
sub
dec
sub
mov
rol
mov
incl
in
cmpsb
pop
idivb
xlat
add
insb
pop
push
sbb
jae
fdivl
pushf
jo
mov
push
sbb
fisttpll
mov
in
mov
jmp
je
adc
fmuls
movsb
sub
sbb
mov
mov
lcall
bound
lods
xchg
mov
jne
mov
pop
mov
fisttpll
dec
out
push
std
add
jmp
lea
cmp
cmc
ljmp
mov
jno
shll
ret
rol
das
movl
fnsave
ret
push
stc
push
mov
nop
dec
mov
jnp
jne
inc
jae
pop
mov
pushf
dec
push
adc
pop
inc
fs
xchg
shrb
sub
push
cmp
mov
pop
jne
fidivl
sub
xchg
mov
out
mov
inc
xchg
mov
sub
xor
jno
xchg
test
lcall
rorl
and
lods
pop
jae
xchg
iret
je
enter
cmp
enter
mov
mov
pop
lar
negb
xchg
test
loopne
dec
leave
ds
test
cmp
push
test
cli
mov
or
dec
inc
mov
xor
dec
lcall
test
std
add
mov
outsl
jbe
adc
mov
pushf
jno
in
ja
jno
outsl
orl
out
sub
and
push
jmp
push
pusha
push
dec
mov
subl
or
pop
lea
hlt
shlb
sbb
xor
fmuls
xor
xchg
mov
fwait
movsb
mov
loope
sbbb
inc
jnp
mov
xchg
test
test
popa
pop
test
test
jecxz
subb
sub
maskmovq
imull
sub
ds
ficomps
ficompl
sbb
cmpsl
jl
out
in
orb
pushf
mov
or
outsb
rclb
or
or
mov
xor
push
mov
mov
mov
je
fs
cltd
icebp
mov
inc
sti
test
roll
adc
pop
cmp
test
sarl
push
pop
cmp
pushf
arpl
add
and
cmp
or
cmp
add
pusha
xor
pusha
pop
rcll
dec
outsl
daa
insb
inc
ret
pop
subl
andl
shr
mov
sbb
mov
mov
xor
orl
xor
or
shl
orl
lea
neg
mov
movzbl
add
mov
mov
shrd
subl
shr
mov
cmpl
mov
mov
mov
jmp
mov
movl
jae
push
pushl
pushl
call
dec
not
or
sbb
adcl
sbb
mov
mov
adcl
xor
mov
xor
orl
or
xorl
shl
add
imul
mov
movzwl
xor
mov
mov
shrd
mov
adc
mov
movl
xor
shr
mov
sbb
jmp
out
pop
out
pop
pop
jns
lcall
ds
push
ljmp
pop
sbb
xor
cs
cmpxchg
fwait
gs
and
xchg
aam
cmp
sti
movsl
rolb
sbb
daa
les
adc
pop
test
sbb
sbb
mov
je
das
adc
push
stc
aaa
push
in
push
gs
dec
arpl
pop
inc
push
mov
inc
hlt
scas
pop
outsl
hlt
mov
sub
lret
push
mov
test
mov
ret
dec
test
mov
sbb
in
movsl
xchg
pop
lock
adc
das
xor
std
mov
cmc
in
mov
imul
movsl
or
stc
movsl
loop
or
fcomi
push
out
mov
sarl
push
ja
pop
pushf
inc
xor
xor
insb
outsl
pop
ror
xchg
and
jg
les
ret
negb
jb
xchg
or
pushf
add
pop
cmp
shll
outsb
lcall
push
arpl
inc
out
aad
repz
sti
rorb
cmp
nop
movsl
mov
call
out
jle
mov
fdivr
jo
jmp
mov
mov
mov
movsb
pop
outsb
aaa
push
or
pop
sub
outsb
int
xor
jbe
add
xchg
xor
out
sub
rcll
push
aam
mov
push
dec
gs
dec
movsb
cld
push
data16
push
testb
popf
outsl
in
ret
mov
jae
cmp
fiadds
push
add
cmpsb
add
jp
sub
sub
xor
out
pushf
jg
js
mov
lret
arpl
insb
addl
inc
sbb
dec
xor
mov
in
xor
jae
sub
cmp
jecxz
out
mov
imul
push
or
pop
jne
mov
sbb
jmp
fst
jl
xor
lods
stos
invlpg
add
fistpll
mov
pop
push
repnz
jb
xor
adc
add
sahf
xor
pusha
mov
leave
popw
dec
xorl
popa
sbb
adc
test
xchg
inc
repz
add
sbb
mov
add
ds
push
test
movsl
inc
clc
jo
cwtl
sarl
inc
scas
mov
out
xor
mov
cmpsb
cmp
jge
ret
push
je
xlat
push
testl
xlat
imull
and
aad
xchg
roll
addl
sub
stos
scas
arpl
loop
sub
dec
loop
scas
xor
lods
pop
dec
sbb
out
add
inc
in
movsb
mov
pop
push
push
out
pop
orb
call
mov
adc
fcmovnbe
je
ds
fs
push
xor
or
nop
xchg
test
sub
xchg
imul
inc
pop
push
or
mov
pop
movsl
mov
imul
jns
in
clc
or
pop
scas
fsubr
int3
aam
pop
mov
xor
or
orl
shl
sub
movl
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
mov
movl
jmp
notl
notl
ja
pushl
pushl
pushl
pushl
push
push
call
adcl
mov
add
sbb
add
and
mov
subl
shrd
mov
cmpl
movl
mov
mov
jmp
movl
ja
push
call
or
mov
mov
adc
movl
mov
add
movl
dec
mov
xor
shl
xor
orl
or
shr
mov
mov
mov
mov
xorl
shrd
shr
mov
sbb
mov
andl
mov
xor
sbbl
xor
or
orl
shl
imul
orl
sub
jmp
mov
dec
mov
shrd
orl
mov
mov
sub
mov
xor
andl
shl
xor
xorl
or
orl
shr
xor
mov
mov
cmpl
mov
mov
jmp
movl
movl
jae
call
and
xor
xor
xor
or
sub
add
subl
mov
mov
sub
imul
adc
sbb
jmp
popa
aad
mov
mov
popf
adc
fs
mov
adc
adc
sbb
call
aaa
pop
push
in
pop
fnstsw
jbe
out
sub
and
pop
movsb
rclb
mov
pop
jbe
cmpsl
test
mov
fildl
fwait
mov
dec
pop
lods
mov
xchg
pop
add
repz
mov
arpl
lcall
xchg
ss
and
mov
sbb
lods
pop
imul
shlb
loop
mov
or
rcrb
sbb
mov
shll
push
sbb
adc
push
and
and
adc
es
icebp
add
cwtl
pop
cld
icebp
out
or
jo
push
lret
lret
dec
add
lods
je
es
dec
cmp
jne
push
mov
ret
xchg
pop
and
pop
pop
bound
inc
or
cli
xchg
mov
mov
insl
sbb
push
push
stc
jmp
sub
mov
cs
xchg
cltd
loope
dec
add
out
mov
insb
out
sub
rol
js
xor
push
daa
aaa
xor
int
sub
subb
repnz
data16
iret
xor
loope
mov
dec
adc
sub
mov
nop
ljmp
js
mov
xor
orl
cltd
stos
mov
aaa
pop
jle
dec
cli
fadds
aam
mov
pop
inc
into
pushf
push
test
jge
idivl
pushf
cmp
dec
dec
or
xchg
xchg
iret
mov
addb
mov
cs
add
jno
cmp
mov
popa
cmp
sub
dec
inc
inc
sub
xchg
jecxz
and
jecxz
js
pop
or
dec
icebp
ret
insb
sub
push
subl
ret
sbb
mov
pop
movsl
scas
adc
shll
pusha
adc
jecxz
in
sti
lock
or
ds
cli
pop
or
or
cltd
outsl
xchg
mov
sarl
xchg
lahf
aad
and
sub
out
mov
cmpsb
out
loopne
sahf
inc
clc
cmpl
jle
leave
bound
jg
ret
xchg
add
movsb
adc
icebp
aaa
jno
mov
insb
in
jmp
cmp
jecxz
cld
inc
and
xchg
pop
ret
xor
fwait
sbb
pop
fistps
xor
mov
add
bound
inc
pop
mov
scas
movsb
insb
mov
sub
push
gs
dec
adc
cmp
adc
dec
loop
push
shrl
insb
and
push
ds
or
test
push
shlb
xchg
xor
xor
popa
push
out
mov
inc
outsl
xchg
negb
add
jnp
inc
push
ljmp
and
fcomps
sub
add
inc
adc
in
out
cmp
xlat
sbb
insl
xchg
or
adcl
jno
pop
jle
jb
jmp
and
mov
aad
arpl
push
in
in
add
sbb
mov
sti
inc
dec
or
scas
movsl
sub
push
test
and
cs
bound
pusha
mov
cmpl
mov
movl
movl
jmp
notl
je
push
push
call
sub
movzbl
sbb
movzbl
sbb
sub
and
mov
adcl
shrd
sbbl
shr
mov
or
mov
mov
sbb
mov
xor
xor
adcl
or
xorl
shl
add
add
xor
mov
movl
mov
shrd
shr
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
push
push
push
call
and
xor
add
add
add
movl
xor
add
mov
xor
sub
mov
subl
xor
shl
xor
or
sbb
mov
cmpl
mov
mov
movzbl
jmp
notl
jl
push
pushl
push
push
push
call
sub
adc
sbb
subl
add
movl
adcl
mov
mov
add
movl
cmpl
movzbl
mov
mov
jmp
movl
movl
jl
push
push
push
push
pushl
pushl
push
pushl
call
sbb
sub
add
and
add
sbbl
sub
mov
movl
mov
sbb
movl
mov
mov
mov
or
shrd
subl
shr
cmpl
movl
movl
jmp
movl
jae
pushl
pushl
pushl
call
sbb
add
and
subl
adc
and
adcl
mov
mov
mov
add
mov
subl
xor
shl
and
xor
xorl
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
jmp
or
adc
inc
add
pushf
lods
iret
movsl
dec
mov
adc
adc
and
call
jle
scas
daa
fildl
pop
jbe
pop
insl
push
sti
icebp
jg
cwtl
add
xor
test
test
sbb
cmpsl
jo
cmp
jg
sbb
sbb
mov
dec
adc
mov
xchg
add
pop
cwtl
add
pop
push
gs
mov
add
movsb
jnp
push
adc
rorl
mov
xlat
push
out
mov
xchg
push
rcr
and
rcl
jb
pushf
insb
sbb
iret
adc
and
dec
mov
adc
call
push
lcall
outsl
cmpsl
cli
cmp
fcmovne
lcall
fwait
stos
cmp
arpl
jne
and
or
shl
je
es
into
dec
sub
insl
jle
sbb
and
mov
mov
mov
hlt
test
mov
and
sub
add
shr
or
rcr
cmp
jne
xor
and
lcall
xchg
dec
or
sub
loopne
hlt
mov
mov
dec
sub
xor
jnp
xor
lcall
mov
inc
xchg
mov
inc
arpl
inc
push
js
subl
jo
loop
sarl
or
jb
mov
mov
mov
add
cmp
arpl
and
dec
sub
leave
mov
lds
sarb
cmp
sbb
dec
cmp
cmc
rorb
pop
repnz
add
mov
jno
inc
xor
xchg
dec
fwait
xor
movsl
rcl
lock
gs
out
mov
lret
jae
ret
pop
cli
js
xor
sub
add
out
insb
adc
loop
subl
inc
popa
shll
xor
mov
and
inc
adc
loope
sbb
adc
cld
in
jl
adc
mov
add
fmull
addb
test
in
notl
pop
fsubp
xchg
lock
and
inc
insb
cltd
fpatan
push
push
ds
mov
mov
ja
stc
push
sub
pop
roll
jecxz
add
xor
std
ja
fldt
cmpsb
pop
shl
mov
pusha
mov
inc
into
or
sti
mov
rcrb
inc
dec
inc
xor
lea
int
insl
xchg
add
repnz
adc
mov
daa
inc
arpl
mov
jp
and
cli
sahf
jbe
push
mov
xor
mov
xor
cld
loop
sub
xor
xchg
lods
adc
pop
push
push
movsb
mov
and
jp
fdivp
testl
push
mov
pop
sbb
test
and
cmp
shr
ja
jno
mov
rclb
lret
jae
into
mov
push
cwtl
iret
cmp
push
fcoms
sahf
cmp
xor
loop
popa
xchg
cmc
and
rcrl
cmp
icebp
push
sub
push
cmp
jge
andl
cs
jecxz
inc
loopne
dec
in
lods
enter
add
in
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
jmp
gs
test
sbb
xchg
js
dec
pusha
js
adc
adc
adc
adc
push
sti
cmp
xor
cmp
stos
fisttpll
arpl
cli
mov
cmpsl
push
push
leave
jg
stc
xchg
jae
and
loop
jge
test
xor
out
and
and
popa
or
dec
sbb
jl
sahf
jmp
call
xchg
cs
fmuls
inc
jecxz
pop
insb
rolb
dec
fbld
inc
pop
out
in
shlb
int
jp
out
popf
notb
inc
adcl
and
add
add
in
stos
mov
or
rcr
out
out
lock
stos
mov
sahf
lret
jl
add
outsl
leave
push
lret
jp
insb
into
lods
pushf
subl
ja
mov
inc
daa
jge
inc
gs
push
movsb
mull
lahf
inc
push
imul
xchg
fildll
adc
or
adc
je
jne
popa
mov
bound
xorl
fisubs
add
adc
mov
inc
mov
rep
inc
push
nop
dec
ret
shl
dec
frstor
adc
mov
mov
ja
mov
adc
sub
push
out
sub
and
mov
pop
mov
jo
push
sbb
pop
cwtl
adc
aad
fists
lea
adc
fdivs
fadds
cs
sub
incl
imul
js
xor
xor
xor
pop
cli
dec
dec
in
pop
stos
pop
sbb
push
lahf
push
push
push
or
jae
jmp
lea
dec
loopne
sahf
add
mov
jg
aaa
mov
leave
dec
je
out
sbb
and
or
jne
leave
cmovs
rcll
popf
lret
and
pop
push
incb
sbb
push
in
or
jecxz
adc
outsl
into
dec
pop
sub
les
pushf
jge
jno
push
pop
jae
cmp
xor
stos
lock
popa
addr16
mov
in
loop
dec
call
es
das
push
inc
test
or
es
adc
jl
lret
or
xor
fiaddl
dec
sub
das
loop
mov
ret
enter
cmpl
adc
out
sub
or
imul
mov
push
mul
jmp
sub
arpl
pop
pop
and
movsl
push
loop
fcomp
popa
jne
sbb
in
push
es
cs
jnp
push
movsb
imul
call
ss
imulb
mov
lods
jmp
pop
dec
xchg
loope
popa
je
sbb
adc
mov
sbb
hlt
nop
iret
stc
fbld
push
sbbb
cmpsb
lret
mov
jge
sub
sarl
rolb
sub
ret
jp
aad
sahf
push
out
out
adc
mov
lret
outsl
insb
cwtl
fbstp
cltd
sbb
pop
out
adc
lret
test
mov
aam
sub
sbb
jl
inc
int3
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
cli
mov
cltd
mov
adc
mov
adc
adc
repnz
jmp
in
shll
in
dec
loope
out
das
insb
out
or
outsb
lds
dec
jle
cmp
or
into
sbb
leave
negb
shrb
xchg
sti
sub
das
iret
xor
add
enter
dec
cmp
jge
out
shl
cwtl
ss
dec
jg
outsl
or
sahf
pop
mov
into
add
in
sbb
data16
test
mov
outsb
adc
xchg
push
hlt
sub
and
movsb
sarb
outsl
loope
add
ret
xor
pop
insl
sub
push
fisubrs
jmp
int
pop
imul
out
fcom
dec
sbb
arpl
mov
xchg
imul
shl
push
fisubrl
cmp
dec
mov
xor
sub
ss
icebp
cmpl
dec
add
cld
lods
pop
add
fildll
nop
aaa
jl
repz
or
and
sbb
cmp
xchg
jecxz
sbb
mov
add
js
xchg
int3
ret
lret
stos
sahf
push
fs
sbb
or
inc
in
cmp
sbb
dec
or
adc
and
and
addl
mov
and
test
mov
int
pop
xchg
inc
movsl
mov
mov
dec
addr16
cmpsb
inc
inc
xor
mov
repz
mov
push
inc
mov
out
fst
lock
loope
sub
xchg
popf
mov
push
cmp
inc
mov
pop
bnd
jnp
or
inc
subl
and
push
pop
fcompl
sarb
es
lahf
cmp
push
jae
dec
xchg
in
add
and
pusha
data16
mov
enter
mov
xchg
outsb
cmp
xor
mov
out
sbb
mov
test
in
mov
out
mov
xor
adc
fbld
pop
loop
clc
adc
incb
xchg
in
or
cmp
push
adc
lea
xor
push
jbe
pop
out
mov
mov
ret
scas
xor
jmp
subl
test
add
insb
mov
mov
mov
pop
in
pusha
lea
mov
mov
loope
mov
in
cli
add
in
mov
jecxz
push
jne
inc
push
out
cs
out
sbb
push
out
inc
loopne
jg
mov
shlb
aaa
sbb
mov
cwtl
jl
sbb
or
mov
mov
push
pop
jns
jnp
push
jmp
inc
adc
pop
mov
cs
ja
mov
mov
jp
jecxz
mov
test
insl
dec
mov
lds
inc
lcall
outsl
inc
das
xor
push
imulb
inc
push
dec
and
adc
push
aam
sub
jp
cmp
dec
push
sub
jne
cltd
jns
lods
sbb
xchg
test
or
jp
sub
paddsw
pusha
fs
mov
iret
arpl
cld
cmp
pop
mov
mov
mov
stos
data16
add
mov
rorl
inc
int3
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
jmp
in
repz
jmp
les
inc
stos
mov
les
adc
adc
shlb
loopne
lea
stos
adc
push
cld
mov
out
sub
rcrb
inc
call
mov
xchg
frstor
cli
inc
sahf
jbe
cmpsb
arpl
adc
cltd
adc
cltd
push
in
add
adc
ss
and
mov
mov
and
outsb
xchg
add
lds
mov
mov
xchg
lea
fiadds
popf
mov
and
mov
lahf
sar
in
sarl
fwait
add
jbe
cmp
cmp
or
fadd
pop
add
pop
out
aas
clc
imul
clc
or
cmp
mov
push
push
rdtsc
fstpl
daa
or
movsl
inc
fidivl
orl
xor
movsl
lret
cmp
out
int
inc
adc
enter
fdivl
ss
or
shl
mov
enter
sbb
and
jl
ljmp
insb
or
xchg
aad
icebp
push
adc
mov
cmp
loop
dec
into
inc
stos
mov
sub
jb
sbb
pop
data16
cmpsb
mov
adc
cmp
cwtl
sbb
andl
add
out
dec
out
push
outsl
jae
out
inc
rol
sbb
xor
or
or
out
cmp
shlb
pushf
sbb
clc
pop
jno
inc
jle
jo
lods
negl
add
mov
jns
push
shlb
test
dec
pop
nopl
jb
cli
testl
xlat
push
mov
aas
cmc
jge
clc
aam
or
jns
mov
in
jg
fdivrp
jecxz
ficoml
adc
xchg
popa
mov
cmp
enter
adc
clc
lea
inc
jge
pop
ficompl
mov
call
leave
test
rcrl
popa
cmp
fiaddl
stos
and
xchg
or
mov
movsl
push
cwtl
cmp
sub
or
xchg
aam
aad
pop
push
test
out
pop
jecxz
push
mov
inc
dec
daa
xor
or
ljmp
jecxz
sbb
jnp
dec
aam
in
pushl
dec
jne
cmp
sbb
mov
sbb
imul
mov
rcl
cli
aam
xchg
push
push
cmpsb
pop
imul
vpmaddwd
lods
stos
int
adc
test
lret
and
outsl
jg
cmc
pop
xlat
ja
je
cltd
call
hlt
inc
hlt
fldenv
cmc
fcomip
fwait
lods
aam
sub
stos
mov
pop
cmp
mov
dec
cltd
lock
xchg
mov
and
dec
adcb
and
sub
neg
xor
adc
fcoms
xchg
int3
fwait
stc
cwtl
ja
jl
aas
push
and
aaa
mov
arpl
or
cwtl
push
out
scas
dec
jnp
xor
sti
push
mov
call
stc
adcb
test
movsb
sub
rorl
clc
rcr
iret
sbb
mov
or
movsb
adcl
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
jmp
fs
push
add
aaa
sbb
push
push
mov
push
ret
adc
adc
push
test
loop
test
inc
repnz
or
inc
out
into
sub
in
inc
aam
push
dec
xchg
adc
push
sahf
inc
sub
mov
loope
test
pop
cmp
cmpsb
jle
push
add
adc
fs
sti
jg
add
push
xchg
adcl
or
or
xchg
arpl
das
repnz
xorl
adc
xchg
xchg
fxch
pop
cltd
cmpsb
cltd
cltd
adc
mov
leave
mov
sub
pop
jo
aas
adc
lds
addl
cmc
and
pop
insl
sbb
imul
bswap
xchg
lods
cmp
dec
adc
sbb
adc
cmc
movsl
scas
add
fsubl
inc
cmc
inc
pop
mov
sub
pop
fcmovnu
xchg
adc
mov
das
mov
shrb
cltd
pop
or
int
out
adc
mov
push
sbb
mov
jmp
xor
push
lock
and
xchg
dec
aas
or
dec
dec
ja
out
mov
mov
mov
jle
femms
jne
push
mov
bound
clc
mov
dec
dec
dec
push
push
inc
adc
lret
not
ret
or
cmpsb
clc
or
jmp
das
pop
repz
pop
pop
loope
jp
repnz
lock
xor
mov
mov
and
and
mov
shll
leave
push
add
xlat
lret
in
adcl
pop
daa
and
pop
das
sub
cmp
xor
inc
jge
sti
js
imul
into
fs
rcll
pop
cli
xor
data16
mov
ljmp
xchg
push
inc
data16
mov
or
dec
testb
jne,pt
enter
hlt
sub
scas
jno
jb
sti
or
jnp
inc
sub
jecxz
cmp
push
mov
lods
popf
sbb
dec
or
sbb
fs
cld
sahf
jg
xor
sbb
mov
xchg
mov
cmp
lahf
rol
dec
mov
int
jo
jmp
loope
ret
es
mov
xor
lret
fistpl
xchg
in
pop
aaa
xchg
xchg
ds
aas
enter
sub
stc
cwtl
mov
pop
pop
cmc
iret
xor
and
xchg
sti
mov
and
mov
lret
push
jbe
sbb
imul
iret
xor
std
jno
mov
das
mov
int3
jecxz
cmp
nopl
ja
jecxz
out
sbb
cmp
cmpsb
jecxz
clc
and
scas
mov
stc
scas
or
imul
gs
mov
add
mov
jg
add
jg
idivb
sbbb
jmp
popf
push
pop
push
inc
int3
pop
add
mov
popf
jge
add
lret
out
jne
pop
xchg
add
push
cmp
fs
lods
xchg
jle
push
ltr
aad
jmp
and
aaa
inc
adc
mov
push
pop
and
jmp
mov
repz
repnz
and
out
sub
jns
mov
aaa
das
cmc
daa
mov
test
fucomi
cmpsl
jnp
mov
movsb
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
lods
dec
sbb
sbb
sbb
and
mov
adc
adc
lret
pushf
push
cmp
xor
sbb
dec
mov
jmp
mov
pushf
mov
data16
or
in
or
cmp
mov
adc
or
pop
repz
xor
std
addl
mov
inc
xorl
mulb
and
addr16
jbe
sbb
mov
shlb
jecxz
inc
movsb
outsb
insl
adc
sti
cltd
into
xor
sbb
repz
xlat
cmp
lret
push
loop
repz
jb
loopne
out
lock
lahf
cmpl
or
xchg
fs
loop
mov
mov
jbe
aaa
push
push
add
mov
out
xor
and
jecxz
or
and
mov
mov
popa
iret
shll
mov
push
jl
std
jge
aas
jecxz
mov
test
dec
sbb
int
imul
sub
mov
ret
pop
push
or
fwait
and
lods
mov
pop
mov
jo
jb
pop
insl
push
push
bound
lahf
sub
lea
dec
xlat
fisubrs
js
es
jp
and
fwait
mov
orb
adc
aas
in
xor
rcl
lea
cmc
ret
insb
cmpsl
xchg
addr16
inc
mov
leave
cmc
addl
movsl
dec
shll
adc
in
inc
jae
and
push
push
mov
pop
or
xor
shll
fisttpl
mov
or
adcb
jge
shll
adc
pop
ds
jb
es
jge
xchg
mov
cmp
hlt
or
loope
mov
fwait
or
insb
jmp
push
inc
cmpl
out
mov
cltd
loop
mov
or
mov
icebp
inc
mov
xchg
out
inc
pop
mov
jmp
sbb
stc
movsb
movsl
nop
xchg
or
std
sbb
sub
icebp
sbbb
or
aaa
sbb
fcmovbe
jbe
jo
mov
imul
aad
loop
lods
sbb
mov
out
lea
inc
popa
xchg
pop
lods
mov
dec
mov
sub
pop
pop
xor
dec
dec
cld
mov
movsb
lock
dec
adc
mov
dec
pop
sub
or
sub
jecxz
mov
mov
jnp
jg
cltd
lahf
dec
mov
addb
pop
cmp
mov
or
xchg
insb
sbb
lods
jp
mov
ror
test
or
fwait
ja
mov
stc
inc
nop
adc
jmp
aam
inc
cmp
pop
mov
test
jp
jns
dec
ja
das
ljmp
fwait
push
jo
sbb
pop
fbld
insb
lea
sub
pop
stc
add
cli
fsubl
repnz
ljmp
ror
mov
xchg
mov
cmc
into
pushf
mov
dec
mov
push
dec
push
cltd
shl
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
jmp
scas
mov
mov
sub
stos
sti
popf
adc
mov
adc
adc
mov
jbe
rcrl
add
mov
xchg
adc
stc
lds
dec
mov
mov
cmp
jbe
jo
add
mov
fdivrs
dec
aaa
add
dec
adc
out
imul
popa
int3
fdivrl
dec
mov
pusha
mov
fcoml
imul
push
jo
aaa
clc
nop
inc
lds
mov
fiaddl
inc
mov
cmp
test
stos
mov
mov
inc
scas
push
jle
repz
sub
jge
lret
jg
lea
in
sub
and
cmc
cmp
mov
xchg
inc
test
mov
cmp
loopne
shr
icebp
insb
icebp
dec
or
ss
pop
in
fstl
inc
sub
cmpsb
mov
popf
and
ljmp
decb
rorl
cmp
insl
cmp
inc
nop
cmp
sub
and
ret
test
in
ds
stc
js
rolb
pop
cwtl
mov
mov
cmpsb
mov
or
push
xchg
mov
clc
jp
or
jo
ds
pop
out
fstpt
mov
push
aad
and
arpl
inc
flds
arpl
fistl
ja
out
inc
loop
mov
mov
jge
jno
pop
sbb
hlt
jno
outsl
lods
and
lock
popa
stos
imulb
cld
mov
aam
gs
push
sbb
nop
stos
arpl
xor
sub
lret
jl
pop
pop
mov
in
mov
ret
inc
dec
sahf
popa
mov
cmpsb
pop
hlt
aaa
daa
xlat
mov
cmp
out
xchg
pop
outsb
jo
in
aas
sahf
inc
cs
mov
insl
inc
clc
popf
adc
xchg
mov
push
out
insl
xchg
out
pop
mov
test
mov
adc
sub
inc
inc
sub
and
add
cmp
cmc
pop
push
cmp
scas
mov
into
add
ds
jg
arpl
jnp
mov
mov
dec
scas
cmp
lret
xor
fisubrl
rcrl
sub
adc
pop
and
adc
jmp
mov
aam
aad
pop
push
push
adc
pop
jle
leave
push
xchg
pop
dec
sti
inc
jo
xchg
xchg
outsl
stos
dec
mov
add
pop
into
ljmp
xorl
sub
out
fadd
das
rcrl
push
cs
dec
in
enter
lds
cltd
outsl
mov
or
jecxz
lods
shrl
inc
cmc
rcll
pop
ret
and
out
sbb
les
mov
aas
dec
cmp
add
sbb
jle
shlb
push
xor
xchg
scas
xchg
leave
mov
mov
ret
sahf
les
push
shl
ja
outsl
loop
inc
mov
or
sub
cmp
add
sbb
movsb
je
inc
mov
mov
scas
pop
mov
adc
jno
push
or
push
cld
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
jmp
hlt
xor
pop
and
hlt
fcomps
adc
adc
push
dec
rdmsr
cli
hlt
outsl
pop
xor
and
pop
jmp
scas
mov
sub
sbb
xchg
imul
cmpsb
fcoms
pushl
mov
jne
sbb
fwait
ljmp
lds
and
pop
daa
and
sub
push
mov
mov
inc
mov
orl
and
add
imul
xchg
add
lahf
sbb
arpl
mov
or
xor
push
push
and
fldcw
sub
xchg
cmc
push
hlt
out
cld
pop
movsb
cmc
xor
adc
xchg
push
dec
lcall
push
push
mov
enter
mov
xchg
fpatan
xor
push
lret
dec
int3
sahf
out
decl
add
mov
xor
push
xor
xlat
lea
push
stos
push
imul
insl
in
sbb
pop
outsb
push
inc
gs
data16
out
xchg
push
jae
or
pop
in
int3
and
cmp
ret
mov
loope
cmpl
mov
add
aas
sbb
mov
mov
add
cmpsb
jge
std
push
cmp
in
pop
movd
dec
shrb
mov
pop
xchg
inc
into
mov
es
adc
daa
test
and
rolb
enter
pop
xor
jmp
icebp
sbb
fcmovbe
test
pushf
inc
shll
lahf
or
cmp
dec
fs
testl
dec
ja
xchg
xlat
popf
xchg
inc
repz
dec
pop
pop
mov
cmp
push
ja
in
jnp
adc
sub
mov
mov
arpl
pop
mov
mov
cmp
pop
xchg
test
xchg
sbb
loope
test
popf
add
ficoml
xchg
pop
daa
jnp
pusha
or
pusha
add
or
push
fnstcw
mov
mov
sti
lcall
popf
xchg
mov
fidivrl
adc
inc
dec
cmp
lret
sub
addr16
jp
inc
jae
push
shrl
xchg
cmp
push
mull
and
push
add
cmp
lock
dec
gs
setg
ret
mov
jns
stc
jg
loopne
scas
jmp
or
sub
xchg
adc
scas
xchg
mov
int3
sub
mov
and
rcrl
divl
lahf
add
sbb
daa
add
pop
and
sbb
push
mov
stc
fsubp
xor
and
shl
mov
xchg
push
fisubrl
mov
adc
pop
in
mov
cmpsb
inc
adc
push
inc
jecxz
negb
loop
data16
insb
sub
sub
icebp
scas
mov
push
add
ja
and
les
mov
push
cli
fdivl
gs
dec
sub
push
push
in
pop
insl
lds
movsl
loopne
adc
fisubrl
data16
shlb
xchg
or
sbb
fnstsw
lcall
dec
add
and
and
mov
xchg
push
cmpsl
jl
dec
sti
es
cmp
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
inc
jbe
js
js
sub
adc
js
movsb
adc
adc
adc
hlt
sub
pop
or
enter
cltd
fldl
sub
pop
lea
cmp
daa
out
ss
and
mov
outsb
mov
ret
nop
cwtl
subb
arpl
std
push
inc
mov
or
test
push
adc
mov
idivl
inc
mov
scas
adc
in
jnp
in
fwait
dec
das
cld
imul
mov
or
ret
enter
xchg
mov
iret
cmp
adc
adc
sbb
loopne
mov
lds
movsb
xor
lret
jae
push
sub
mov
push
arpl
jmp
and
bound
mov
pop
scas
rorb
ljmp
pushf
aad
or
lock
sti
adc
mov
sub
add
fisttpl
clc
je
mov
pusha
or
push
inc
xor
mov
rorl
or
js
fstpt
nop
dec
lahf
lods
imul
dec
andl
add
fdiv
clc
push
adc
mov
add
and
jo
ret
lods
stc
mov
aam
adc
sbb
mov
imul
lcall
pop
sbb
in
test
es
fs
insl
out
loopne
mov
icebp
gs
xor
femms
dec
dec
push
bound
inc
or
insb
outsb
add
andl
cmp
add
sahf
movsb
push
inc
and
aaa
lret
hlt
fwait
mov
and
xchg
call
pop
rorb
dec
pop
mov
pushf
mov
adc
mov
sbb
shr
in
loopne
fstpl
and
popa
mov
test
ds
dec
adc
mov
cltd
outsb
xchg
adc
mov
cmpsb
loope
push
mov
stc
arpl
out
inc
bnd
sub
or
push
repnz
scas
add
pop
sbb
pop
mov
int
dec
mov
dec
jmp
fwait
test
jle
nop
stos
mov
fdivs
loop
out
outsl
inc
inc
pushf
stc
push
iret
mov
mov
pop
xor
or
dec
into
push
subl
loop
movsb
adc
and
sarb
sbb
inc
push
dec
or
jo
mov
jbe
leave
dec
sub
ss
mov
aam
pop
fs
scas
test
jnp
jp
push
inc
rol
enter
inc
jb
imul
push
pop
mov
or
out
push
loope
push
jle
pop
enter
test
xchg
ret
jp
add
nop
jne
adc
pop
in
test
sbb
imul
sbb
pop
repz
xchg
and
mov
test
adc
pop
arpl
cmp
cmc
jge
fmuls
add
inc
pop
pusha
jnp
out
leave
imul
mov
inc
popa
mov
pusha
and
mov
lds
xchg
leave
sub
mov
imul
nop
out
gs
dec
push
out
adc
jne
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
jmp
stc
xor
mov
sub
icebp
stos
lock
pushf
lods
nop
pushf
adc
adc
adc
or
mov
leave
dec
sahf
push
pop
xchg
add
adc
scas
pop
icebp
das
xor
test
fsubl
lock
inc
call
jl
and
int
arpl
hlt
mov
inc
hlt
sbb
mov
push
scas
inc
push
mov
push
movsl
mov
inc
imul
popf
pop
add
jb
add
fiaddl
fisubrl
cmp
lret
xor
stc
jbe
rolb
loop
cld
andb
jecxz
adc
xchg
xor
cmpsb
sub
mov
and
jne
out
mov
xchg
ljmp
lahf
add
and
clc
test
incb
mov
or
inc
xor
xchg
push
lret
xor
lret
cli
scas
sbb
leave
push
cmp
mov
inc
adc
and
mov
shlb
dec
arpl
rcr
gs
xchg
movsl
addb
adc
mov
jns
or
inc
mov
fcoml
push
movsl
divb
and
lds
xchg
mov
or
lea
test
jbe
push
lods
cmp
jl
or
or
shrl
pusha
xchg
je
jecxz
aad
lcall
aas
inc
jo
mov
cmpsl
cmp
mov
or
mov
sarl
aaa
dec
stos
cmp
push
adc
jl
jge
bnd
psrlq
dec
repz
cmp
mov
call
int
sbb
xchg
sbb
jl
fs
xchg
test
lret
jmp
or
into
adc
xor
nop
pop
hlt
into
data16
mov
lret
shrl
adc
mov
je
pop
imul
inc
dec
mov
dec
push
inc
add
pop
call
push
xor
and
add
cmp
mull
adc
ds
inc
sub
lods
nop
xchg
imul
push
adc
lock
imul
imul
sub
cmp
jge
mov
xchg
add
inc
xor
nop
add
fistps
aaa
testb
popf
pushw
into
jae
call
les
cmp
mov
and
iret
popa
adc
icebp
xchg
scas
das
test
jnp
pusha
mov
sub
xchg
cmp
mov
imul
ss
jmp
aam
aam
ret
push
aas
jp
or
jecxz
and
call
mov
loop
enter
mov
cli
inc
xchg
push
daa
dec
mov
test
or
mov
test
xor
lods
out
loope
dec
ret
inc
mov
adc
inc
sbb
mov
xor
or
jb
mov
in
clc
xchg
mov
enter
sbb
jne
dec
lea
sbb
xor
mov
cmpsl
lods
cmpb
enter
mov
or
add
mov
jmp
xor
and
addr16
xchg
js
lcall
mov
das
fcomip
xor
addr16
ja
fcmovnb
sbb
jns
test
fistpll
fs
orl
jnp
icebp
subb
xchg
sub
out
jne
rorl
jmp
pop
mov
jnp
push
in
dec
and
lcall
xor
jge
daa
xchg
in
inc
mov
movsl
addb
push
jg
add
insb
sbb
dec
mov
hlt
or
cmp
popa
mov
mov
xchg
and
jae
push
dec
jb
xchg
cltd
cmp
in
pop
pop
icebp
sub
sbbl
sub
ss
cld
addr16
cmp
mov
ds
and
xor
sarb
sarl
sbb
xor
inc
dec
call
sbb
push
dec
push
int
jecxz
icebp
and
jmp
jnp
les
fstps
push
into
in
lahf
push
sti
insl
sub
test
jne
es
aam
push
shl
or
jbe
stos
xor
ret
mov
cmpsb
and
outsb
sbb
and
push
mov
aad
jmp
dec
fistps
std
jg
fists
das
xor
dec
xchg
rcrb
fstpt
enter
jmp
fdivs
mov
shlb
mov
enter
dec
pop
sqrtps
loopne
les
loope
sbb
sub
lock
or
cmpsl
push
mov
fidivrl
lea
lock
cmc
jl
pushf
fnstenv
xchg
outsb
shll
sub
test
out
cmp
or
aas
mov
notl
cmc
cmp
hlt
pop
and
fstpl
or
in
jmp
inc
sbbl
mov
sub
adc
mov
cmpb
cmp
rcrb
js
test
enter
test
push
mov
cmp
cmp
cwtl
inc
ret
lcall
fcoml
inc
ret
push
xchg
aaa
dec
jne
out
fwait
lcall
inc
mov
rolb
in
inc
sub
repnz
in
or
pop
cmpb
sbb
ret
sbb
loop
je
popa
out
or
pop
test
hlt
cmpl
cmp
xorb
or
xchg
cmp
lret
notb
push
in
cmc
out
lret
ss
jo
cs
aas
xchg
loope
sbb
mov
adc
scas
pop
xlat
mov
xor
pop
aas
ds
xor
push
jmp
xchg
jecxz
arpl
lcall
sbb
mov
inc
jl
div
popa
dec
push
xchg
push
push
lods
int
dec
lods
sbb
mov
push
xlat
jae
push
jb
int
sbb
fstpt
lea
push
cmp
dec
mov
inc
xor
rol
ret
ret
or
jg
nop
mov
rorb
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
adc
and
sbb
aad
mov
adc
adc
add
cmp
test
cmp
shlb
addr16
jbe
outsl
xchg
rol
imul
addr16
mov
cli
lds
jo
push
xor
repnz
mov
and
movsb
or
inc
loop
imul
mov
dec
rol
mov
test
cmp
or
je
leave
xlat
sbbb
xlat
mov
std
mov
pop
mov
pushf
cmp
test
xchg
xorl
cltd
or
dec
sbbl
mov
sbb
dec
inc
andb
sub
inc
stos
pusha
adc
pop
mov
cmp
push
cltd
adc
sub
cmp
ret
push
adc
fstpt
inc
fsubr
adc
push
in
adc
mov
sbb
mov
push
mul
xlat
sbb
pop
mov
cmp
or
imul
cmp
adc
and
push
sbb
push
out
ret
aas
xchg
inc
mov
ret
pmulhuw
sub
outsl
sbb
stos
adc
dec
and
inc
andb
sbb
imul
repz
mov
shlb
and
enter
fisttpl
adc
filds
xor
mov
add
xchg
int3
out
int
in
adc
dec
movsl
gs
es
or
cs
or
lret
imul
outsb
xchg
jmp
jle
imul
in
mov
test
pusha
or
jae
gs
shl
ds
adc
mov
add
mov
xchg
aad
std
push
pop
or
lds
ss
adc
mov
in
fdiv
adc
jecxz
inc
aam
out
das
sub
sti
sub
dec
pop
fdivrs
and
ja
mov
pop
fisubrl
xchg
xor
loope
or
mov
adc
mov
fwait
out
push
out
sbb
pop
pusha
jmp
test
dec
divb
inc
bound
hlt
lods
sub
jbe
add
inc
mov
dec
mov
adc
and
addr16
stos
jle
dec
lods
add
dec
or
bound
cli
mov
jl
mov
call
les
lds
cltd
or
addr16
ds
push
jb
arpl
loope
hlt
inc
xchg
push
into
jge
or
cld
sar
outsb
push
lahf
shr
mov
jns
mov
cmpl
lret
push
cmp
sbb
or
mov
jae
cmp
lahf
mov
in
jge
and
dec
xor
out
push
sub
mov
add
xor
movsl
pop
aaa
in
jge
dec
sbb
stos
add
inc
cltd
jo
add
sub
mov
aaa
pop
mov
pop
test
hlt
inc
int3
enter
xor
xor
lea
mov
nop
lock
dec
jo
out
icebp
imul
aaa
sbb
xchg
mov
outsb
cmp
push
arpl
xor
jl
lret
dec
add
mov
xor
test
hlt
pop
xchg
hlt
movsl
jb
rorb
ret
push
ret
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
jmp
insl
outsb
fstps
ret
mov
pop
in
insb
jle
adc
adc
adc
les
dec
mov
jno
cmc
lods
add
stos
add
inc
in
aas
or
mov
aaa
cmp
pop
dec
mov
out
fildl
xchg
xchg
aam
aam
pop
mov
mov
add
es
jle
out
cmp
xchg
daa
jns
cmp
add
push
lock
arpl
aas
inc
cltd
push
inc
and
xchg
sub
jae
ss
es
icebp
cmp
out
push
mov
iret
and
lret
bound
push
push
adc
dec
jl
clc
outsl
or
jle
rorb
pushf
ret
mov
sub
adc
ds
scas
xchg
mov
mov
xor
scas
stc
sbb
push
arpl
or
pop
into
adc
jecxz
mov
mov
hlt
push
xor
adc
gs
add
fldcw
lock
push
adc
mov
push
clc
mov
repz
cwtl
or
fiadds
fs
xlat
dec
cmp
ss
mov
mov
outsb
outsb
adc
dec
mov
xchg
mov
pop
sub
adc
or
xor
in
push
mov
cmp
lahf
lret
cmp
or
add
cmpsl
das
dec
std
vpaddusw
fildll
or
xchg
rorb
cmp
dec
pop
popl
test
jl
jo
cld
jno
fmull
sub
mov
cmp
adc
aam
adcl
mov
cmp
sbb
mov
repz
jle
push
loopne
mov
inc
adc
or
cmc
jno
daa
cmp
push
lret
mov
repnz
outsl
push
add
fidivrs
mov
mov
adc
jae
outsl
aam
fsubl
push
push
push
sub
out
aad
mov
mov
cmpsb
push
stos
popa
outsb
int
sub
imul
jl
mov
daa
mov
sahf
adc
mov
fdiv
das
add
stos
hlt
int3
fldt
dec
popa
leave
mov
out
fildl
or
push
add
movsb
add
lds
push
pusha
and
arpl
ss
mov
jnp
pop
scas
dec
cs
ja
in
add
in
sub
mov
sub
leave
fsts
pop
sahf
push
push
sarl
popf
pop
sbb
sub
ffreep
push
pop
daa
test
jp
jbe
xor
inc
and
test
sti
pusha
push
dec
ss
aam
aam
pop
and
inc
dec
ss
push
sub
jge
inc
lahf
cmp
adc
push
ret
sub
ret
fists
dec
std
mov
imul
mov
negl
push
mov
aas
push
test
xor
bound
xorl
jnp
and
jne
cld
add
icebp
cmp
and
push
push
jmp
inc
rorb
loopne
imul
stc
out
pop
outsl
ljmp
scas
stos
xlat
hlt
or
dec
sbb
shlb
ja
imul
lret
jmp
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
out
sub
pop
popf
and
inc
dec
mov
movl
cltd
loopne
xchg
sahf
out
xchg
mov
dec
shl
sub
into
leave
push
dec
xor
sbb
shlb
sbb
xchg
ds
imul
mov
jecxz
add
add
fsubrs
aam
lret
mov
lret
sub
cmp
ja
sbb
pop
pop
stos
sub
mov
xor
add
adc
into
arpl
cwtl
sahf
cli
mov
icebp
inc
push
dec
mov
ds
and
in
xor
in
lods
mov
mov
adc
push
ret
in
add
xchg
call
adc
sub
mov
lret
xchg
aam
add
push
fistpl
cmp
lahf
mov
pop
sti
insl
jmp
in
and
shlb
loopne
out
subl
andl
fsubs
mov
pop
mov
cmc
or
rcll
movsl
or
pop
stos
jnp
push
xor
xchg
popl
ret
inc
mov
out
pop
xchg
jb
mov
dec
cld
aaa
inc
aam
movsb
rcrb
mull
rorb
outsb
sti
bound
sub
insl
test
push
dec
sbb
dec
outsl
lret
loop
ss
push
jns
and
sbb
lods
jbe
sub
scas
cwtl
negb
insl
ret
push
jecxz
addr16
pop
cmp
push
std
loop
pop
movsb
sbbb
gs
mov
jno
imul
sbb
test
inc
jmp
or
fsubs
mov
loopne
mov
pop
cmp
xor
movsl
scas
sbb
adc
sub
mov
pop
imul
pop
jne
xor
pop
fstps
ljmp
sbb
cltd
dec
rcl
ja
mov
jae
test
shlb
faddl
andb
mov
cmp
fdivrl
push
and
xlat
enter
xor
sub
andl
insb
imul
sub
mov
inc
loope
shrb
jge
push
push
adc
adcb
jne
cs
dec
loope
xor
int
fs
mull
push
and
rcrl
inc
jo
andl
mov
push
in
sub
ret
dec
lds
fucomp
xorb
inc
mov
inc
cwtl
test
mov
push
in
ss
arpl
out
jmp
pmaddwd
test
pop
stc
xchg
push
inc
or
mov
jno
shl
push
daa
sbb
inc
repz
mov
scas
fs
adc
aad
push
lds
clc
mov
loope
fmul
out
std
mov
sbb
cmp
ret
mov
icebp
jb
lock
mov
pop
pop
cmc
bound
jp
push
lods
sub
mov
jp
aas
cmp
push
inc
mov
xchg
pop
imul
pop
mov
dec
fistpl
and
push
mov
push
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
jmp
xchg
hlt
insb
lret
xor
pop
dec
mov
insb
sbb
adc
adc
fcmove
das
test
cld
lds
jne
sar
icebp
mov
and
out
adc
popa
sbb
mov
push
cs
xor
ds
jl
add
andb
mov
mov
mov
insb
mov
xchg
ret
push
popf
xchg
fisubl
jg
sbbb
xchg
mov
jle
pop
sbb
in
hlt
fcmovbe
loopne
cmp
xor
imul
dec
inc
rcrl
paddsb
sbb
jb
test
mov
xlat
insb
imul
ret
bound
sti
cli
xor
cwtl
out
mov
int
pop
adc
std
popf
mov
mov
js
arpl
stc
into
imul
ljmp
fst
ficoms
sub
incb
icebp
stc
sub
adc
cmpsl
push
inc
lods
or
mov
pop
fcmovb
mov
xchg
add
psubusb
jmp
sub
orb
js
inc
cmp
push
insl
push
push
repz
xlat
mov
nop
out
testb
mov
pop
push
imul
sub
lret
sti
daa
cmp
sbb
jl
sub
pop
xor
push
mov
push
icebp
cmp
fistps
scas
add
mov
xchg
das
add
and
push
imul
data16
daa
add
push
and
popa
mov
outsb
xchg
push
js
aad
insb
push
cmp
xchg
mov
sbb
outsb
clc
dec
add
out
aad
cmp
aaa
inc
mov
sbb
mov
cmp
push
loopne
js
push
sbb
pop
adc
lcall
mov
sti
sti
mov
sub
or
iret
and
inc
pop
mov
ret
jl
jl
jo
es
dec
inc
pop
das
imul
or
push
mov
and
mov
dec
popa
rep
push
aad
popa
in
add
mov
add
and
jb
mov
jmp
push
fs
push
icebp
pop
fs
mov
xor
xor
sub
imul
mov
jae
pop
mov
shll
shl
hlt
es
aad
sub
mov
dec
and
arpl
addb
mov
inc
stos
hlt
mov
mov
or
stos
mov
jle
jp
out
push
jl
push
roll
fcmovnbe
fdivrs
cmp
cld
xchg
ljmp
ror
cmp
in
fs
mov
inc
dec
dec
adc
xchg
das
movsb
repnz
mov
loopne
mov
xchg
jo
or
sub
jg
imul
dec
push
add
loop
loop
cmp
or
cmp
mov
lret
pushf
and
in
lahf
xor
xchg
or
inc
mov
gs
ljmp
or
jle
or
mov
push
cld
push
mov
cmpsl
adc
xchg
mov
stc
mov
stos
jg
ficompl
mov
cmpl
insb
cmpsb
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
jmp
inc
jae
jge
sbb
into
lods
cmp
adc
adc
adc
pop
repz
lods
or
test
iret
cltd
cmpsl
insl
pop
and
or
pop
aam
cmpsl
sub
ret
mov
movl
test
sub
jle
push
pop
cld
aad
pop
pop
addr16
sti
mov
popl
or
aam
dec
lret
jg
enter
sbb
out
adc
lods
dec
mov
mov
aaa
repnz
mov
out
and
fwait
and
mov
jecxz
pop
xchg
adcl
movsl
mov
jg
repnz
mov
test
addr16
xchg
lret
mov
xchg
nop
das
inc
jnp
call
xor
xchg
xchg
idiv
pop
lds
jo
mov
or
scas
fs
rcrb
les
sbb
pop
stos
mov
sbb
aas
xor
call
daa
jb
mov
scas
in
pusha
scas
and
and
jg
aaa
pop
sbb
xlat
dec
and
cs
rcrb
test
push
adc
mov
and
aam
xchg
mov
mov
mov
pop
mov
lcall
imul
mov
movl
icebp
cmp
out
jno
adc
adc
adc
imul
scas
adc
std
movsl
push
int
mov
notl
loop
mov
shrl
push
mov
or
inc
stos
movsb
add
or
ljmp
add
iret
adc
ror
lods
cmp
test
push
ret
jb
cltd
xor
add
movl
ss
cld
lret
jnp
inc
adc
sbb
mov
pop
inc
cmp
xchg
inc
fadds
and
pop
stos
xchg
gs
andb
pop
mov
jnp
push
les
aad
mov
add
into
dec
out
scas
sbb
xor
mov
in
mov
xchg
cmc
outsb
pop
sub
dec
xor
movsb
das
jnp
xchg
jb
jae
test
stos
xchg
ljmp
aaa
pop
cmp
dec
dec
je
cmp
nop
jecxz
sbb
popa
mov
popa
or
sahf
xor
ret
sbb
mov
out
lahf
mov
push
add
and
pushf
in
mov
cmp
popa
ljmp
adc
jp
jge
repnz
fstpl
lret
xchg
jecxz
fisubrl
in
cmp
imul
test
dec
jne
clc
stos
add
in
pop
test
push
ficomps
je
jo
lds
sbb
mov
negl
pop
movsl
cmp
test
cmp
adc
repnz
call
ljmp
sbbb
xchg
int
mov
mov
jle
sahf
aas
test
shl
sbb
sahf
inc
insb
xchg
outsl
cmp
mov
inc
test
sbb
out
stos
add
pop
add
add
pusha
mov
iret
jl
cli
shrb
ret
jge
lahf
bound
sub
inc
outsb
cmpsl
cmpsb
pop
into
ljmp
pushf
out
sti
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
adcl
shrd
shr
ret
mov
mov
adc
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movzbl
xor
movl
sub
mov
or
mov
notl
movl
and
mov
inc
movl
movl
dec
movl
movzbl
and
push
sub
movl
movl
push
addl
movl
movzbl
or
mov
cmpl
mov
mov
jmp
movl
ja
push
call
adc
adc
sbb
sbb
and
xor
add
add
sbb
mov
push
andl
push
andl
push
jmp
mov
pop
sbb
ja
scas
insb
mov
adc
mov
out
xor
adc
inc
les
push
outsl
pop
lds
andl
adc
push
xchg
in
push
mov
into
push
mov
adc
test
adc
adc
aad
push
sti
mov
mov
mov
dec
inc
mov
sub
push
in
pop
adc
cld
sti
fwait
jge
add
dec
insb
and
gs
loope
test
stc
pop
sbb
mov
ret
add
sbb
inc
push
sbb
arpl
andb
cmp
dec
daa
add
cmp
out
cld
dec
clc
aaa
lods
lock
adc
cmp
dec
jecxz
loopne
and
mov
pop
fidivl
adc
outsl
jbe
and
dec
xchg
inc
lock
into
xor
jno
mov
popf
jb
inc
mov
cmp
gs
rol
fiaddl
cmp
jne
mov
insb
push
ss
sub
out
pop
pop
sahf
xor
pop
sti
test
icebp
adc
fdiv
xchg
push
or
and
add
pop
pushf
pop
jo
idivl
mov
shl
mov
sarb
jl
leave
xchg
jg
xor
ljmp
fidivl
fmuls
jg
lcall
or
mov
bound
in
push
pop
imul
lock
dec
xor
mov
out
cld
and
rcrl
pop
jg
pop
xchg
fs
cmpsb
xor
fsubp
aam
and
dec
mov
aaa
or
inc
icebp
leave
lea
or
mov
sub
mov
adc
sub
repz
mov
pop
and
lret
mov
sub
jmp
test
cmp
mov
dec
daa
xchg
xchg
mov
cmpl
pusha
xchg
fdivrs
or
sbb
dec
pushf
push
sbb
jmp
pop
cli
xchg
xor
xchg
pop
shr
mov
sub
enter
sbb
aaa
fsub
scas
adc
insb
jmp
les
push
mov
jns
jbe
fcoml
shll
xor
push
orb
and
movsb
push
sbb
fldenv
fmull
loop
xor
in
fistpl
sahf
adc
jb
ret
movsb
in
mov
mov
inc
insb
loope
jne
cmc
lea
loope
rcl
push
popa
mov
xchg
lock
shl
je
loopne
jge
mov
loopne
fidivl
push
sub
xlat
lea
in
dec
lcall
movsb
mov
fstpt
add
mov
dec
or
xchg
mov
pop
mov
mov
cmp
insl
inc
outsb
incb
aad
mov
xchg
sub
sbb
xor
or
mov
fisubl
xor
mov
mov
in
scas
ret
inc
push
xchg
xor
mov
jnp
mov
iret
sub
jae
popf
jle
fdivl
sbb
push
imul
inc
xchg
jg
gs
lea
iret
adc
xor
fstp
in
or
jmp
notb
add
divb
pushf
lcall
jno
dec
xchg
mov
icebp
mov
sub
mov
jne
pop
in
pop
pop
mov
popf
sbb
or
mov
inc
add
add
mov
mov
subl
push
sbbl
or
xorl
push
or
xor
xor
push
push
xorl
call
mov
movzbl
xor
mov
orl
push
andl
push
adcl
push
push
call
mov
xor
or
mov
sub
sub
mov
cmpl
movl
mov
movl
jmp
movzwl
mov
ja
push
pushl
call
add
andl
adc
adcl
movzbl
sub
add
and
movl
movl
adcl
movl
movl
movl
cmpl
mov
movl
mov
jmp
movl
mov
je
push
pushl
call
sub
mov
adc
mov
and
sub
movl
mov
cmpl
mov
not
mov
movl
jmp
movl
jg
push
push
push
call
dec
add
adc
neg
mov
adc
mov
sbbl
jmp
mov
and
sbb
scas
push
mov
inc
push
adc
loop
sbb
jg
jns
inc
test
loopne
mov
hlt
sub
repz
addb
outsl
sbb
mov
inc
lock
fstl
rolb
jae
sahf
stc
cmp
jbe
mov
push
imul
nop
push
in
cmp
insl
lea
push
fidivrl
repz
jmp
hlt
hlt
lea
enter
add
inc
outsb
sbb
test
loope
mov
cwtl
pop
push
mov
fimuls
movsb
jnp
aas
jno
push
shl
es
cmc
les
js
mov
xor
pop
mov
xor
dec
sbb
fisttps
lcall
aad
jo
push
sbb
add
push
lock
sub
mov
mov
mov
xchg
jnp
push
push
negl
movb
jecxz
out
and
fs
push
lock
popf
repz
mov
push
jno
pop
dec
cmpsb
fsubrl
inc
dec
push
mov
addb
loope
lds
adc
adc
and
orb
push
mov
lods
arpl
or
xchg
xchg
mov
adc
pop
leave
ret
mov
js
rcrl
repnz
sti
test
int3
adc
ljmp
repnz
xlat
mov
push
or
jns
hlt
adc
das
sub
mov
aas
cli
loop
mov
iret
pop
jmp
sub
mov
mov
ret
xchg
call
mov
mov
mov
sbb
adc
lds
stos
adc
push
add
loop
xchg
mov
cmpsl
cmpb
leave
xchg
dec
xlat
int
mov
leave
pushf
mov
adcl
scas
stos
icebp
lcall
ja
data16
imul
daa
cmp
in
push
push
push
icebp
ljmp
mov
xchg
daa
int
idivl
push
or
js
push
pop
inc
xlat
loopne
std
popf
sahf
sbb
cs
sub
jp
mov
add
xchg
add
btc
cmp
les
movaps
mov
gs
push
add
js
add
push
lock
jge
jno
and
stos
cwtl
xor
out
push
mov
fs
in
aam
cmpsl
xchg
data16
xor
dec
push
adc
inc
gs
inc
js
nop
pop
mov
nop
aam
mov
mov
stos
pop
sbb
cmpsb
outsb
pop
inc
lret
xchg
cmp
mov
pusha
and
adc
xchg
xlat
lret
mov
mov
push
shll
xchg
inc
stos
dec
addb
or
mov
mov
lea
dec
ljmp
and
inc
and
shll
mov
mov
add
pop
mov
jg
inc
and
or
popa
daa
jo
lret
icebp
into
leave
jmp
and
adc
mov
cmp
into
jb
ljmp
lock
pop
addr16
fdivrs
ja
movsb
xchg
sub
insl
loope
dec
inc
sub
jle
or
std
mov
pop
movsb
cmpsl
jne
sti
cmpl
inc
sbb
ljmp
dec
aam
mov
or
mov
and
movsl
cmp
mov
push
test
pop
mov
add
movl
adc
andl
or
xor
xor
sbb
mov
or
cmpl
movl
movl
jmp
movl
jle
pushl
call
sbb
adc
sbb
adc
add
xor
xor
adc
mov
or
sub
mov
or
mov
notl
or
or
movl
cmp
jne
movl
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
jmp
cld
into
loope
mov
cs
jg
mov
mov
lods
sahf
loop
shl
sahf
xor
jb
nop
cmc
and
mov
mov
shlb
lret
push
ja
dec
call
adcl
or
or
sbb
inc
dec
sahf
lods
fistps
std
and
rcll
dec
adc
idivl
testb
iret
out
ud0
jae
jns
adc
imul
data16
dec
aaa
and
lock
xchg
pop
adc
aas
cmpsl
repnz
mov
fs
ds
and
push
daa
scas
and
ljmp
push
cs
ljmp
faddp
iret
and
sbb
or
push
cli
or
sub
and
addr16
adc
sti
dec
imulb
inc
push
out
int3
pop
pop
mov
outsb
mov
mov
mov
xchg
arpl
fistpl
or
push
mov
cs
popf
ss
rcr
imul
fdiv
sbb
gs
mov
add
fdivp
gs
xchg
icebp
in
mov
jecxz
pop
adc
sbb
mov
ret
out
cmc
mov
aam
and
push
fcmovnb
jl
ljmp
push
nop
mov
add
dec
lcall
ret
add
movb
push
outsl
aaa
dec
push
cwtl
mov
pop
sub
jle
cwtl
jg
inc
popa
xor
inc
frstor
sbb
loop
jle
stos
dec
arpl
inc
sahf
ret
and
aad
xchg
sbb
lahf
jecxz
xor
pop
jl
ret
adc
mov
xchg
scas
dec
pop
ror
loopne
lret
push
cmpsl
pop
fst
and
or
je
push
xchg
sahf
jecxz
loop
test
jne
call
cmp
fstps
ret
in
aaa
pop
lret
dec
cmp
test
sar
xor
jae
lock
jl
lcall
repz
sub
and
mov
mov
pop
and
and
addr16
jmp
mov
adc
mov
xor
cli
dec
dec
mov
xchg
out
jge
in
rorb
dec
mov
mov
xor
inc
cmp
lret
fstpl
push
stc
imul
dec
push
loope
insl
jl
add
jb
daa
jmp
xor
mov
and
xchg
ficoms
pop
pop
mov
add
pop
mov
mov
sbb
icebp
into
stos
cmp
test
jle
jle
int
and
cwtl
add
pop
popf
jns
aad
lret
std
jge
lods
adcb
push
loop
fs
test
aaa
in
ja
adc
add
pop
das
mov
bound
pop
xor
and
inc
in
xor
pop
inc
cld
pop
sar
cmp
or
les
add
mov
inc
loope
cli
push
inc
testb
std
fdivrs
xchg
push
loopne
dec
mov
xchg
mov
push
loopne
mov
cmp
arpl
rolb
xchg
pop
cmp
sarl
dec
cmc
lock
jmp
aas
mov
mov
test
movsl
inc
in
xchg
jl
add
xchg
pop
enter
lods
sbb
sub
add
imul
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
jmp
icebp
push
out
sub
repnz
xor
stos
gs
adc
mov
add
inc
and
lods
pop
xchg
movsb
jle
inc
mov
test
cmc
cli
inc
pop
jl
out
out
loopne
sbbl
xor
shrl
ret
or
rcll
xchg
push
jecxz
stos
jecxz
loope
movsl
dec
mov
dec
inc
std
cmp
adc
mov
jecxz
stc
mov
mov
sub
or
jl
scas
mov
xchg
adc
outsl
leave
out
push
jecxz
mov
pushf
pop
insl
adc
ljmp
mov
dec
inc
lock
add
xorb
pusha
pop
adc
outsb
std
daa
mov
and
sub
and
or
cmpsl
and
jle
pop
push
into
xchg
adc
sti
data16
push
shll
adc
cmc
mov
lahf
add
or
xor
sarl
mov
std
push
add
imull
pop
dec
add
jne
and
pmaddwd
mov
mov
inc
in
xor
rorl
mov
addr16
or
pop
cmp
adc
imul
insl
comiss
clc
or
shll
lods
cltd
ljmp
push
lcall
jns
sub
nop
xor
in
iret
cwtl
dec
ljmp
sbb
cmp
faddl
dec
ror
and
jb
lret
lock
add
sbb
add
jp
push
mov
push
jae
xor
fsub
sbb
xchg
xor
pop
xor
orb
ja
loopne
filds
pop
stos
movsb
mov
add
shlb
xlat
pop
in
sbb
and
or
inc
jp
sbb
decl
cmpsb
dec
das
pop
fwait
mov
arpl
enter
cmp
test
lock
jnp
jp
imul
scas
movsb
mov
xchg
pop
cmpsb
add
test
scas
or
xchg
sbb
jno
repz
mov
scas
cmpsl
shll
xor
cmp
call
jg
mov
je
js
cwtl
mov
xor
mov
or
lret
aad
cmp
fbstp
sahf
xor
fisttpll
sahf
fimull
and
aaa
int3
outsb
cs
scas
pop
sub
add
push
jg
movsb
add
adc
loope
xchg
mov
imul
pop
jbe
adc
outsl
or
lods
xchg
mov
fwait
mov
cmpsb
scas
push
sub
jnp
in
xlat
push
jle
cmp
out
fisubs
jle
ret
jae
mov
lods
pop
insl
xlat
lahf
add
fcomps
adc
add
mov
mov
test
inc
dec
mov
adc
sub
stos
dec
sub
iret
inc
cwtl
push
or
push
pop
inc
lret
cmp
pop
xor
leave
inc
cmpsb
imul
mov
dec
test
sub
and
mov
sbb
in
out
dec
push
dec
rcl
imull
imul
push
mov
inc
mov
dec
cmp
out
xchg
xor
cwtl
test
fisubrl
sbb
pushf
adc
in
fisubl
mov
insb
ljmp
jno
shrl
xor
mov
rcll
imul
add
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
jmp
sub
aam
push
cltd
sbb
adc
js
or
mov
adc
adcb
xor
into
fsubr
aas
daa
test
cld
fsubs
iret
sub
rcll
leave
es
mov
mov
push
fldln2
xchg
cld
and
mov
in
jno
xchg
jl
xor
sarb
mov
dec
sbb
repnz
and
push
xor
stc
xchg
test
or
sbb
movb
add
jb
imul
clc
inc
loope
jmp
xchg
sahf
cwtl
pop
adc
ds
adc
lret
dec
xor
sub
dec
mov
lahf
decb
dec
mov
or
data16
xchg
mov
ret
scas
jg
cli
sbb
inc
jns
mov
cs
jecxz
pop
pop
add
in
out
fistpl
add
or
jg
push
data16
icebp
arpl
xor
push
scas
ja
fwait
ret
sub
int3
fwait
push
mov
xlat
aaa
mov
inc
sbb
mov
sub
stc
cmp
jl
movsl
aaa
iret
out
xorl
imulb
xor
sub
aam
icebp
sbb
les
repz
aad
mov
fmuls
pop
mov
or
dec
pop
push
pop
jle
pop
pop
cltd
push
cmpl
outsb
shrb
inc
inc
sahf
sbb
shl
mov
call
mov
cmc
int3
out
xchg
sti
aam
mov
es
push
xchg
lcall
dec
test
ret
mov
repz
lea
sub
pop
mov
lahf
in
cmc
pop
mov
repnz
stos
adc
fidivrs
add
mov
test
insb
cmpl
mov
dec
pop
scas
das
pushf
cli
in
subl
mov
or
pop
lahf
lahf
hlt
xor
mov
shl
std
aad
push
loopne
cmp
sub
push
mov
add
fldt
and
adc
cltd
leave
loopne
jae
sbb
movsb
lcall
stc
loope
scas
pop
sbb
ret
shlb
pop
mov
dec
daa
scas
gs
xor
jbe
jge
mov
out
adc
mov
or
rorl
mov
fbstp
rorl
js
inc
mov
cmp
cmp
pop
mov
pand
movsb
sbb
daa
inc
jbe
adc
jnp
arpl
mov
sub
jne
call
mov
mov
sub
inc
push
and
mov
mov
out
cmp
lahf
cmp
scas
pop
push
outsl
jge
cmp
fstp
mov
adc
push
push
lret
sbb
in
mov
jb
lret
fbstp
mov
mov
sahf
adc
mov
js
inc
xchg
jmp
xor
xorl
test
and
pop
mov
cld
sub
movups
cmc
mov
lret
pop
push
dec
lahf
xlat
popf
dec
adc
or
or
adc
std
popa
and
repnz
mov
addb
and
xchg
add
inc
push
daa
jecxz
mov
cwtl
adc
clc
loopne
negw
mov
mov
sti
jne
nop
xchg
stc
sbb
int3
xor
in
jo
popf
mov
sub
inc
ss
out
sahf
pop
xlat
inc
push
pop
clc
sahf
inc
movsb
addr16
les
dec
clc
xor
repz
sarl
xor
lea
dec
lock
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
jmp
xor
sub
cltd
xor
outsb
or
push
dec
adc
mov
adc
jb
fstpl
xor
enter
incb
mov
movsl
dec
mov
adcl
push
inc
lods
add
jns
pop
and
mov
sbb
jne
jnp
jnp
aas
cwtl
cltd
xor
add
ljmp
subb
add
jne
subl
in
lods
loope
mov
mov
pusha
xchg
in
sahf
ja
xor
inc
mov
dec
lcall
mov
popa
push
out
ds
jb
dec
scas
cld
gs
xor
push
add
mov
mov
or
mov
pop
mov
das
adc
mov
add
and
sbb
dec
dec
and
out
lcall
cmpsb
mov
and
cmpsl
clc
pop
pop
ljmp
sbb
in
mov
pusha
ljmp
jnp
lahf
jne
and
arpl
cmp
jp
popf
lret
ret
pop
cmp
loopne
je
outsb
in
stos
push
lods
sbb
pusha
insb
push
and
dec
or
js
mov
rcl
jp
mov
or
mov
inc
inc
add
sbb
mov
add
and
testl
andb
and
push
subl
cmpsb
ret
inc
sub
divb
mov
xchg
lcall
gs
inc
inc
adc
dec
adc
sub
and
pop
pop
popa
cmpsl
sbb
jns
mov
repnz
dec
cmp
mov
gs
sub
push
popa
mov
lods
aam
fsubrl
and
pop
roll
in
push
inc
mov
pusha
push
dec
out
adc
adc
and
shl
sbb
xlat
mov
stos
aad
arpl
clc
bnd
mov
push
mov
inc
in
pop
js
jns
ds
les
adcb
xor
lods
and
add
loop
insl
sti
sti
adc
sbb
addr16
push
fiaddl
jae
cwtl
sti
jbe
test
mov
dec
lds
movb
out
push
xchg
aaa
loope
cld
adc
mov
in
out
clc
fcoml
out
dec
mov
jne
lret
sbb
fstpl
fmul
xor
fmuls
lret
jg
xchg
pop
mov
loope
lahf
cltd
and
mov
fcmovu
sbb
mov
sub
int3
cmp
lods
dec
xlat
or
out
ljmp
fs
pop
dec
pusha
loop
sahf
mov
jb
fidivrl
out
or
mov
stos
es
bound
shrb
mov
jae
add
jmp
fs
ss
out
cli
jb
lahf
sub
and
orb
pop
aas
push
mov
sbb
adc
mov
loop
sbbb
stos
dec
jp
addr16
cmp
shrl
xchg
int3
lret
stc
jg
and
outsl
pop
rcrb
jbe
adc
andb
repnz
inc
xchg
add
adc
pop
mov
fwait
aam
loop
out
enter
js
sbb
ss
xor
jno
icebp
and
xchg
fidivs
rol
rol
mov
decb
sub
mov
mov
int
jb
jb
gs
jb
lahf
imul
enter
sti
pushl
fildl
inc
or
ja
add
inc
or
dec
add
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
jmp
mov
in
xor
sbb
stc
test
dec
jl
js
inc
adc
mov
adc
adc
mov
sbb
mov
fisubs
sub
sub
aaa
mov
pop
sti
cmp
jecxz
push
xchg
push
pop
mul
push
or
test
std
jne
insb
adc
cmc
ljmp
dec
xchg
jge
or
lret
pop
pop
sub
shrl
pop
pop
pslld
cmp
sbb
dec
pop
jo
xchg
pop
inc
mov
icebp
push
mov
jno
adc
ljmp
ja
push
pop
push
xchg
ja
inc
repnz
sub
sub
push
leave
lea
filds
aaa
in
ret
fmull
js
ds
rolb
out
pop
and
inc
outsb
or
mov
test
jbe
jl
or
hlt
or
aad
sub
sbb
sbb
int3
pop
mov
rcr
test
jg
mov
les
out
xor
mov
inc
dec
xchg
xor
mov
add
mov
pop
mov
push
or
test
sbb
cs
push
pop
mov
dec
jg
jns
std
out
xchg
mov
shll
dec
and
movsb
ret
cmpl
arpl
repz
push
sbb
sbb
test
mov
add
adc
pop
pop
hlt
fsubrs
fstpl
hlt
lods
movsb
decb
xchg
sbb
jae
jae
push
aam
test
cmp
inc
sub
hlt
pop
jno
scas
xchg
data16
jl
mov
jl
fistpl
dec
dec
xor
xchg
out
arpl
daa
leave
jg
ficompl
sbbb
idivb
int3
enter
dec
or
notb
jno
mov
mov
xchg
sub
mov
cli
mov
jl
aas
sub
popa
lahf
inc
push
cmpl
pop
pop
and
sbbb
faddp
cmc
insb
std
add
push
clc
sahf
call
add
xchg
sbb
popa
and
adc
push
mov
cmp
out
shlb
lock
insl
sbbl
pop
push
lcall
rol
icebp
inc
or
xchg
cli
jp
imul
cmp
lcall
call
scas
loop
mov
add
sti
mov
dec
add
loopne
cmpsl
add
mov
fcmovnu
mov
mov
jp
aad
fldt
mov
mov
push
sub
imul
daa
push
sub
rcrb
push
cs
or
or
push
jae
lcall
lock
clc
aaa
cli
int
dec
mov
jae
jno
les
cmc
imul
pusha
xchg
cmpsb
pop
dec
jle
aas
inc
jo
pand
mov
mov
ss
push
clc
pop
cmp
shlb
out
sahf
cmp
sub
lahf
cwtl
add
pop
pop
nop
cs
add
fbld
jle
xchg
sbb
or
addr16
bnd
leave
xor
lods
mov
dec
xchg
insb
fcoml
push
jnp
cmp
fucomp
pop
frstor
or
movsl
fcoml
add
xchg
xchg
test
sbb
addr16
adc
iret
test
gs
inc
add
add
rorb
push
mov
mov
mov
imul
jmp
mov
leave
pop
dec
push
sub
push
call
stos
aad
adc
mov
adc
sub
stos
sbb
inc
fidivs
outsb
ds
xchg
lea
std
xor
jge
call
or
lea
inc
aam
in
test
and
mov
inc
ret
xchg
fdivr
mov
add
cmp
sbb
cmp
sub
push
jp
dec
out
sub
das
mov
aaa
and
mov
fs
jnp,pt
pop
std
pop
mov
pop
lret
clc
inc
ds
add
cmp
inc
fstpt
shrb
test
mov
inc
jl
lock
leave
jge
sub
cmc
cmp
das
enter
sahf
adc
xlat
roll
dec
jmp
rcrl
sub
push
sbbb
daa
roll
push
lahf
inc
ja
jp
mov
mov
and
div
and
xor
cmpsb
jle
mov
dec
inc
cli
call
imul
lea
mov
test
jns
mov
jp
cltd
sbb
hlt
cmpsb
ja
shrb
stos
jp
xlat
dec
cld
mov
sbb
xor
lcall
sarl
add
je
in
dec
jl
add
inc
jmp
mov
shlb
ss
inc
pop
rol
xor
cmp
sarl
cmp
mov
fs
lock
sahf
test
jno
cs
int
rorb
mov
pusha
repnz
jl
or
enter
movsb
js
rorb
or
xor
jl
int
xor
cmpl
int
mov
call
cmp
mov
mul
push
xor
jecxz
dec
sbb
movsb
pop
mov
jl
xor
ljmp
imul
sub
push
and
sbb
cmc
test
inc
cltd
add
inc
or
sub
adcl
jae
decb
and
mov
add
push
arpl
sub
stos
mov
jmp
mov
ficomps
test
out
clc
lods
sub
mov
ljmp
xor
insl
leave
mov
test
push
mov
fdivs
add
bound
rcrl
fidivl
sbb
idiv
sbb
jp
jmp
pop
popa
lock
xlat
pop
pusha
push
push
sbb
jb
vpminsw
mov
mov
gs
xor
xor
fldt
in
mov
sub
jmp
imul
mov
shrb
scas
mov
adc
ror
push
mov
mov
mov
imul
daa
push
call
mov
decl
addl
out
enter
movsb
in
insb
jns
in
xor
ret
orl
sbb
int3
shlb
adc
inc
cltd
mov
sahf
out
rcrb
push
mov
mov
push
pop
hlt
push
mov
lret
clc
push
xchg
imul
cltd
mov
xchg
pop
in
shrb
xor
mov
scas
dec
and
mov
xorl
jl
pop
dec
sbb
mov
adc
movsb
and
out
and
cmpsl
sbb
xor
mov
jne
fisttpl
sub
add
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
jmp
pop
sub
pop
rcll
sub
scas
je
cmp
mov
mov
adc
rolb
mov
adc
in
and
add
lret
andb
fmull
inc
xor
imul
pop
das
xor
rol
pop
ja
or
and
js
outsl
stc
cs
cmp
cmp
sbb
test
lock
out
dec
xor
icebp
kaddb
lahf
mov
push
pop
sub
mov
jp
fcompl
in
fidivrl
mul
push
mul
scas
and
das
imul
add
xchg
inc
xchg
mov
aaa
pop
push
mov
xchg
test
popa
cmp
pop
aad
lock
xlat
hlt
outsb
mov
cwtl
add
lcall
stos
xchg
xchg
bound
test
pop
push
cmp
mov
mov
adcl
out
push
ss
test
and
jg
in
mov
fldt
bound
jno
mov
cmpsb
jbe
dec
inc
pop
lods
in
add
xchg
pop
xchg
rol
cmpsl
pop
and
sbb
push
push
out
pop
call
cmpl
pop
jnp
test
cmpsl
in
inc
cld
add
dec
sbbl
and
int
adc
mov
xchg
cmc
mov
xor
call
sbb
sbb
icebp
loope
lds
out
xor
stc
popa
sub
sahf
dec
ret
xchg
xor
or
xor
fwait
ds
int3
xchg
adc
sub
ja
and
cmpsb
xchg
jno
xchg
in
jmp
cmp
sarl
aas
jmp
into
xchg
jge
and
and
xlat
inc
mov
lock
mov
xor
xchg
mov
stos
jno
icebp
jo
outsb
shl
pushf
mov
xchg
in
add
jl
in
out
inc
stos
sbb
and
out
faddl
mov
push
or
push
insl
jno
xchg
idivl
test
cmc
sbb
sbb
repz
sub
adc
cmp
fxch
dec
mov
jnp
fcompl
mov
in
aaa
fs
and
fiadds
sub
pop
stos
subl
inc
rorb
aam
or
mov
repnz
xor
dec
sbb
sbb
cld
ret
call
push
nop
dec
and
mov
jecxz
test
aam
test
add
decb
push
movsl
mul
xchg
out
xlat
mov
jmp
jp
adc
mov
imul
mov
cltd
mov
xchg
jbe
pop
cmp
pop
push
leave
fidivrl
and
mov
push
shl
enter
pop
mov
inc
out
push
arpl
xchg
pop
xchg
pop
out
outsl
xor
sbbb
cmpsl
xchg
adc
pop
sarb
and
int3
out
add
int
mov
sub
cli
iret
add
xchg
push
test
fdivl
xor
js
dec
shll
mov
out
jb
testb
imulb
or
or
mov
daa
pop
idiv
add
test
mov
jb
adc
xchg
cmp
mov
mov
inc
adc
xchg
leave
repnz
psllw
sub
rcrb
cmpsb
cmp
std
and
call
cmp
mov
es
xchg
sub
mov
xchg
stos
or
dec
sbb
dec
out
sahf
sbb
push
iret
adc
inc
cld
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
jmp
in
stc
sub
les
bound
adc
mov
adc
sub
popf
mov
lretw
or
lret
adcb
data16
xor
int3
mov
ja
pop
lea
sahf
cmp
sbb
ret
daa
pusha
div
movsl
shrl
adc
mov
out
and
dec
out
cmc
jmp
xlat
add
ret
into
mov
arpl
sub
inc
inc
jl
outsb
sbb
mov
fidivl
adc
fstl
dec
xchg
les
mov
mov
inc
int3
movsb
mov
sub
js,pt
ljmp
cmp
sub
adc
add
jl
inc
mov
lret
int
cmp
cmp
cmp
jae
or
ja
pop
jg
push
test
jb
loopne
inc
or
outsl
jg
xchg
cwtl
in
xor
pmulhw
inc
dec
inc
inc
out
in
jne,pt
inc
xor
shll
into
test
fsubs
sbb
int3
pop
add
inc
xchg
cltd
lock
jb
add
data16
es
idivl
cld
aam
xchg
inc
and
pop
lds
inc
lock
clc
xlat
inc
xchg
imul
sbb
pop
jbe
stc
dec
inc
dec
sbb
xor
xchg
sahf
mov
testl
sbb
mov
cmpl
inc
xchg
push
dec
lods
sahf
mov
xchg
push
xor
fisubrl
mov
pop
sbb
shll
jno
jle
mov
xchg
mov
xchg
insl
adc
jb
lahf
add
mov
sbb
cmp
stc
sbb
push
push
xchg
and
pop
test
loope
xor
int
mov
loope
xor
add
mov
outsl
jle
cld
outsl
xor
pushf
mov
fdecstp
fiadds
and
lods
add
pop
xor
mov
jl
mov
pop
out
pop
pop
xchg
into
mov
into
xchg
mov
xchg
outsl
stc
add
ljmp
call
dec
pop
and
stos
bound
pop
xor
leave
xchg
out
mov
mov
inc
add
mov
imul
xchg
mov
mov
scas
inc
insl
ja
rcrb
xlat
and
sbb
sti
mov
inc
xchg
add
and
dec
jno
lods
push
add
sub
mov
lea
insl
pop
lahf
fdivrs
call
mov
sbb
aaa
pop
dec
cmpb
cmp
popa
pop
cmp
ja
add
xchg
shrl
or
xor
movsb
mov
xor
jns
mov
sub
jb
and
addr16
ss
loope
pop
adc
sub
inc
mov
lea
mov
fwait
lret
fsubr
push
push
cli
jle
xor
pop
xor
mov
xchg
sub
in
sbb
fcomp
jne
push
jmp
push
stc
xor
notb
push
fmul
cmp
cltd
stos
push
aas
jno
or
mov
jp
sub
adc
inc
pop
cld
mov
shlb
mov
xchg
fidivs
aaa
cmp
dec
popf
or
imul
xlat
lock
xor
stc
sti
stc
dec
rorl
cmp
cmpsl
mov
bound
xchg
hlt
pushf
xor
jbe
mov
daa
sbb
push
gs
test
xlat
incl
pop
psubw
mov
push
fwait
mov
inc
jo
mov
insb
iret
addl
xchg
mov
repnz
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
jmp
jo
pop
bound
stos
dec
in
test
adc
adc
xor
sbb
hlt
add
xchg
inc
xlat
fcmovnu
insl
xchg
test
stos
flds
out
jmp
push
outsl
fsts
call
inc
sbb
repz
push
in
push
dec
mov
stos
jne
adc
add
push
inc
adc
imul
inc
and
push
push
cmp
dec
fiadds
mov
js
and
and
adc
repz
inc
add
dec
or
jno
test
fsubl
pop
dec
pop
out
cmc
sub
scas
dec
rcr
je
lock
mov
imul
hlt
inc
nop
rcll
and
les
jmp
jne
xor
incb
xchg
adc
cmp
mov
sti
adc
adc
jae
cmpsl
push
inc
out
pop
fsubrl
pop
dec
dec
jge
rcll
js
add
ja
push
test
xchg
mov
fisubrl
imul
and
aam
mov
js
xor
mov
jbe
cmp
loopne
pop
adc
out
cmp
addr16
or
fnstcw
sub
xorl
ret
mov
outsl
int
cmp
sahf
jecxz
push
dec
aam
insb
jecxz
addb
and
mov
jnp
lea
test
movb
mov
cmpsb
fs
mov
or
add
leave
lahf
inc
mov
lret
mov
call
cmpb
shl
xchg
mov
lret
mov
daa
push
roll
sub
xchg
sub
in
xchg
mov
sbb
xchg
popf
les
inc
lret
sbb
rolb
dec
sub
push
push
setno
jae
push
int
mov
cli
sub
call
xor
ds
xchg
add
mov
jnp
pop
lock
rcl
mov
xor
push
loope
or
pop
in
outsl
adc
in
nop
sbb
filds
int
push
enter
dec
dec
jns
loop
bound
ja
les
mov
push
push
or
adc
push
jb
xor
cltd
fistps
clc
jmp
call
in
das
xlat
in
ret
jns
sub
inc
icebp
andb
call
sbbb
and
push
add
mov
dec
adc
movsb
sarl
rcrl
xchg
aas
xchg
add
jnp
hlt
pop
xchg
sbb
fwait
mov
sbb
pop
sahf
xor
mov
push
arpl
cld
xor
push
je
cwtl
fsubrs
jno
xor
and
imull
movsl
xchg
adc
test
cmp
pop
inc
dec
jo
fstps
dec
es
xlat
div
or
inc
mov
ja
jb
dec
adc
and
and
out
lods
mov
je
sub
mov
inc
cs
lahf
dec
sbb
adc
lods
jns
jnp
mov
push
rcrb
loop
stc
stos
sub
xchg
jmp
addr16
jne
mov
push
mov
fiadds
mov
repnz
xchg
cmpsb
mov
pushf
inc
fmull
jbe
push
xchg
mov
scas
pop
scas
subl
sub
int
jmp
xor
in
sti
mov
cs
icebp
flds
mulb
fst
dec
popl
fsubrl
xchg
mov
add
mov
mov
mov
xor
xor
jmp
pop
xchg
push
dec
push
sbb
js
insb
insb
addl
adc
cmpsb
popf
loopne
xchg
inc
fimuls
ja
pop
popf
mov
je
push
jecxz
sahf
out
adc
mov
dec
lods
mov
lock
cmc
push
jae
push
mov
int
je
insl
int3
mov
and
push
test
mov
lock
sub
cmp
push
jg
push
ljmp
pusha
adc
pusha
mov
enter
mov
cmp
dec
cmp
test
mov
sub
cmp
pop
mov
inc
sub
adc
loopne
add
aas
je
rorb
movsb
hlt
rclb
jle
mov
dec
es
lahf
push
fisttpll
stc
gs
push
adc
push
outsb
cmp
jbe
mov
pop
jno
push
aad
xchg
mov
push
test
movsl
int
jbe
pop
jg,pn
sahf
stc
sub
scas
pop
xor
pop
mov
add
aad
fisttpl
fnstenv
cwtl
lods
stos
xchg
push
jae
add
rcrb
loopne
xlat
cmp
pop
call
mov
hlt
pop
ss
bound
sub
mov
in
rcrl
lret
test
lret
fs
mov
xor
int
mov
mov
sub
mov
stos
mov
fmul
repnz
int
xor
pop
std
pop
push
jb
ficompl
in
mov
lods
pop
sbb
rorb
jl
mov
aas
cmc
jmp
push
clc
test
addb
rclb
sbb
inc
js
ljmp
dec
leave
dec
test
cmpb
fsts
insb
lock
jg
int3
es
hlt
adc
repz
leave
js
int3
mov
fld
jle
push
ror
popa
pop
subb
in
sbbb
mov
sbb
mov
mov
mov
imul
lds
cmp
ret
push
repz
addr16
mov
fldl
xchg
dec
pop
hlt
xchg
mov
xchg
stc
test
jmp
cmp
int3
ds
mov
fs
cmp
dec
rcrl
and
rcll
cmpb
fcoml
dec
dec
filds
mov
push
or
or
push
xchg
call
sub
gs
mov
adc
lcall
add
and
adc
sbb
std
out
int
into
shlb
cmp
push
xchg
add
loopne
mov
fsts
in
fs
and
or
xor
imul
pop
in
mov
les
or
pop
mov
mov
lcall
push
xor
imul
leave
leave
call
dec
inc
clc
jae
jg
mov
inc
rcl
test
push
adc
in
or
lods
sbb
loope
loopne
gs
repz
std
shlb
add
scas
ja
fnstsw
lds
imul
sbb
movsl
inc
xchg
cs
jne
mov
fcoms
push
mov
push
push
cmp
mov
xchg
mov
pop
rorb
inc
xor
sarb
cwtl
mov
inc
xchg
cmp
pop
dec
sti
leave
int3
xchg
push
push
pushf
xchg
or
push
and
sbb
sti
jg
fwait
add
push
movsl
call
lcall
je
push
mov
mov
push
sub
in
outsb
push
std
fldl2e
rclb
xchg
pop
jae
mov
out
div
mov
and
sub
mov
movl
movl
movl
jmp
out
sbb
fsts
xchg
add
ficoms
adc
aas
pop
loop
cmp
pop
xchg
fdiv
adc
sub
movsl
jne
jmp
jnp
shll
sahf
loop
fbld
pop
pop
es
xchg
sub
insb
push
lds
or
jb
sub
lcall
inc
xorb
js
mov
idivl
cwtl
add
dec
cmp
xchg
mov
xchg
test
pop
mov
loope
add
aad
mov
or
imul
push
subl
add
xor
fisttpl
ret
mov
add
jo
dec
hlt
pop
pop
repz
push
xchg
cmp
fwait
xchg
jbe
jb
jle
daa
push
cwtl
jo
in
in
insb
mull
adc
sub
jmp
jae
aas
inc
cld
stos
mov
in
aad
popa
pop
rcrl
lods
aas
in
sbb
dec
in
fcmovnu
or
push
popf
stc
dec
scas
enter
add
mov
pop
lahf
dec
cmp
cli
leave
pop
inc
stos
inc
cs
subl
out
or
ljmp
push
cwtl
and
movsl
cmp
dec
mov
pop
divl
iret
pop
adc
sub
lahf
mov
stos
dec
cmp
int3
sarl
pop
and
lock
inc
and
loopne
fs
shll
pop
les
jp
call
jmp
lea
call
jge
sbb
sbb
pop
and
jle
loopne
imul
outsl
bound
add
sub
dec
lods
inc
rcr
xor
nop
cs
pop
mov
mov
mov
pop
xchg
cmc
sbb
mov
mov
fadd
fstpl
ja
and
pusha
daa
iret
adc
sub
inc
inc
test
mov
fwait
inc
dec
jnp
test
into
mov
add
das
lahf
stos
js
setp
add
xor
push
mov
mov
arpl
pop
xor
sub
mov
aam
ja
mov
loopne
aas
adcb
cmp
sbb
outsb
aas
gs
out
adc
aam
push
out
stos
fildl
test
push
aaa
sub
lds
or
gs
leave
jecxz
dec
pop
push
cmpsb
jl
dec
push
cmpsl
test
lcall
push
mov
fcomi
mov
jecxz
add
rcl
adc
mov
test
ds
fisttpll
dec
pop
mov
mov
lcall
mov
enter
out
and
jns
les
neg
push
push
rcll
push
bound
xchg
jecxz,pn
fmull
mov
jb
aaa
xor
dec
fsub
es
mov
test
test
addl
jo
push
pop
and
jnp
jmp
ljmp
xchg
popl
fs
sub
xchg
test
mov
ds
adc
ljmp
mov
add
and
pusha
xchg
cld
aam
sub
adc
loop
repz
dec
lds
pusha
jno
mov
movsb
xchg
shl
fnstsw
xor
xchg
and
push
sbb
stos
lods
xchg
inc
inc
pop
das
gs
jae
push
mov
ss
ss
push
xchg
mov
rclb
add
add
and
or
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
jmp
fisubrs
outsb
rcrl
iret
sbb
insb
shr
adc
adc
adc
xchg
sub
enter
shrl
add
mov
pop
test
mov
mov
jmp
push
mov
mov
test
inc
jbe
mov
mov
dec
sbb
js
fists
cmc
xlat
sub
cwtl
inc
push
xor
lds
mov
sub
sbb
dec
aas
inc
into
aaa
sbb
xchg
cmc
fimull
lret
stos
movsl
data16
xor
and
lahf
adc
aaa
dec
xcrypt-cfb
cmpsl
mov
inc
test
pop
and
imul
or
inc
xor
mov
or
fsts
adc
pop
shl
sub
aad
test
rorl
add
pop
jle
fisubrs
shrb
cmp
sub
adc
test
out
movsl
ja
loope
inc
lea
movsl
cmpsl
hlt
fdivs
aaa
enter
pop
fdecstp
pop
adc
pop
sti
push
sbb
adc
push
fstpl
fisubrl
jg
add
inc
adc
xchg
ret
push
mov
mov
xchg
lods
xchg
mov
in
ret
jp
mov
jl
mov
mov
sti
cltd
sub
dec
fwait
dec
test
add
adc
imul
pop
or
push
iret
notl
enter
mov
jnp
push
mov
xchg
sti
lret
and
pop
orl
daa
jg
sub
sub
mov
in
push
mov
push
add
subl
push
jne
inc
imul
sub
sahf
test
pop
lea
out
add
adc
xor
jle
insb
jg
and
in
mov
roll
ljmp
xchg
xchg
adc
fcoml
mov
mov
and
jo
xchg
cmc
pop
mov
mov
roll
les
int
leave
inc
das
and
jl
arpl
lret
mov
repnz
out
xlat
jae
add
adc
cli
or
mov
dec
in
dec
push
and
xchg
inc
fiaddl
ret
gs
jb
daa
cmp
std
add
mov
and
shr
sti
mov
jne
ss
aas
inc
xor
lock
cmp
rol
mov
xchg
and
fnstsw
arpl
test
lods
jg
xor
fldcw
adcb
les
addr16
popf
mov
fwait
popa
sbb
dec
pop
loopne
out
movl
push
mov
push
pop
aaa
and
pop
sahf
mov
ret
shrl
cmp
scas
je
dec
cmp
sbb
fs
mov
repz
mov
std
dec
xchg
scas
jl
mov
and
jle
xchg
sbbb
and
mov
aad
imul
sub
and
dec
arpl
stos
add
mov
iret
arpl
std
cli
mov
cmp
dec
pop
les
cmovnp
cmpsb
das
cmp
ret
out
cmp
cmpsl
jmp
shrl
insb
jo
push
imul
xor
les
popf
ds
aam
out
int3
and
je
aam
cwtl
mov
clc
arpl
repz
int3
lea
lods
fildl
push
mov
imul
xor
jge
addl
sahf
je
lret
aaa
or
cmp
je
xchg
jo
or
movsb
pop
add
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
jmp
in
xchg
es
cwtl
pop
push
and
decb
adc
adc
mov
adc
mov
sbb
inc
and
in
inc
das
xor
sub
mov
mov
mov
sub
xchg
mov
in
adc
loop
push
in
mov
push
sub
pop
jmp
xor
jmp
inc
shl
pop
loopne
xchg
pop
sub
dec
aaa
inc
test
popf
and
push
mov
xchg
pop
hlt
mov
mov
lods
and
jb
test
pop
in
repz
and
mov
sub
dec
sti
cwtl
push
lods
cmc
push
out
inc
mov
sub
insl
or
sbb
js
cmpb
sbb
add
adc
sbb
sub
lahf
pusha
inc
lret
xor
push
clc
out
idivl
pop
rcr
or
sub
dec
or
hlt
aam
dec
cmp
push
in
bound
cmc
lret
mov
dec
scas
cmp
jle
dec
mov
loope
es
fwait
pop
jb
cmp
nop
repz
push
mov
mov
es
ds
adc
adc
rolb
fadds
push
in
push
dec
sub
adcb
in
data16
popf
sbb
adc
in
ljmp
imul
je
dec
xlat
rclb
mov
push
pop
test
dec
cs
xlat
dec
mov
xor
scas
cmp
test
mov
inc
xor
test
js
push
add
fs
pop
mov
xor
or
xor
aad
std
pop
pop
jmp
dec
push
mov
andb
stos
adc
dec
mov
lds
flds
cmpsb
icebp
jecxz
fcoml
mov
inc
sbb
lcall
push
dec
in
shll
sub
mov
scas
punpckhwd
cmp
fsts
fwait
or
inc
mov
cli
cmp
sub
gs
cmp
int
mov
or
ss
aas
xor
pop
mov
xor
fstpt
and
and
jb
xchg
and
pop
fdivrs
xor
scas
movsl
movb
div
iret
push
sub
shlb
and
loopne
jbe,pn
inc
push
mov
mov
imul
in
or
xchg
popf
dec
into
je
add
adc
dec
or
js
or
out
out
jae
or
incl
daa
jns
xchg
out
mov
inc
lock
or
lret
or
and
cmpsl
inc
pop
dec
scas
in
or
stos
sub
fwait
cmc
cmc
mov
xorb
push
negb
xchg
lcall
sub
and
pop
push
and
lods
ja
dec
movsb
les
cli
sti
sahf
add
mov
pop
xor
aaa
repnz
inc
ret
fimuls
jl
or
jecxz
or
cmp
cld
les
xor
inc
jmp
jge
pop
sbb
movsb
mov
and
jo
ret
xchg
dec
addr16
jbe
cmp
mov
jmp
out
lea
cmc
dec
push
imul
mov
and
or
cmp
aas
cmpsl
dec
inc
cli
adc
test
jmp
ss
pushf
push
pop
xchg
orl
push
data16
mov
xor
jmp
cmp
ja
pop
aaa
and
or
mov
mov
adc
scas
dec
mov
mov
scas
dec
and
mov
cmp
popf
xor
mov
inc
mov
cmp
push
ret
aaa
fildll
pop
and
jno
ret
sub
jp
xor
clc
in
lock
mov
pop
int
mov
and
jns
inc
mov
iret
divl
inc
clc
notl
jmp
mov
shrl
imul
and
add
jp
setge
icebp
push
stc
aad
in
mov
sbb
mov
jg
adc
pushf
mov
adc
sub
jge
add
ret
adcb
sbbl
xchg
out
loopne
test
ret
push
insb
cmpsb
push
ljmp
or
movsl
out
cmp
adc
fprem1
xchg
orb
or
std
outsb
inc
cmc
pop
nop
xor
pop
lods
fdivrl
insb
pop
js
out
xchg
out
sub
xchg
lret
icebp
sbb
lods
or
mov
cltd
fsubrs
inc
push
movsb
pop
pop
gs
mov
mov
sbb
shlb
pop
addb
repnz
push
cmpsb
and
push
ljmp
enter
push
out
jb
cli
stos
lret
fcomip
push
sbb
push
sbb
test
sbb
enter
add
mov
xchg
or
push
mov
sub
ljmp
fisubrs
mov
jge
mov
orb
test
cs
sub
popa
push
xchg
pop
dec
dec
pushl
mov
push
xchg
jne
sub
xchg
push
jo
jo
stos
into
pop
lods
rcrb
fisubl
fidivrs
and
adc
xlat
aam
fwait
jp
pop
dec
adc
sub
mov
ret
xchg
jl
inc
inc
fidivrl
nop
add
mov
js
sub
xchg
and
pop
jnp
cmpsl
aas
sub
xchg
dec
cmp
ja
aas
in
shlb
test
sub
lock
popa
repnz
lea
ret
lods
stos
mov
pop
push
adc
jecxz
test
rclb
mov
es
aaa
cmp
push
add
xor
or
sbb
scas
es
fdivs
leave
or
push
mov
push
fs
add
adc
sbb
jo
loopne
call
or
outsl
jge
inc
cmc
rclb
push
fs
xor
add
jbe
mov
cs
cmc
into
jmp
pop
out
sti
mov
in
pop
xorb
sub
dec
mov
cwtl
push
pop
push
ret
mov
je
ficomps
jl
or
fdivr
scas
leave
inc
push
xor
gs
sbb
ljmp
jmp
mov
add
loopne
mov
and
sbb
xchg
dec
mov
loopne
psubsb
inc
push
ja
out
fcomp
out
and
xor
and
iret
dec
jge
xchg
push
ficompl
cmp
test
aad
and
dec
shl
jle
aad
xchg
fnstsw
and
ret
test
add
clc
cmp
cmpl
jo
loop
mov
mov
inc
mov
cld
xchg
add
enter
mov
and
dec
mov
aaa
jmp
pushf
and
add
icebp
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
xchg
lods
sub
addl
adc
adc
adc
sbb
fcompl
mov
rol
mov
cmpsl
push
pop
out
xchg
cmp
adc
mull
xor
push
testb
popf
sub
push
insl
mov
inc
shrl
aas
jns
je
test
pushf
or
test
pop
popl
sub
xchg
jnp
push
dec
insb
lods
adc
inc
subb
sub
lods
shll
std
mov
and
mov
out
push
push
push
test
sbb
ror
mov
xchg
lock
shrl
jecxz
loope
add
jne
xorb
popa
roll
fisttpll
xor
fiaddl
and
cltd
jp
sub
push
das
test
or
jae
fsubs
pop
rorl
push
rol
jp
xor
call
xor
push
aas
mov
or
mov
pop
jmp
pop
cli
jb
faddl
sbb
sahf
cmp
fs
mov
fs
mov
sub
cmp
dec
loope
jno
jbe
xor
xor
stos
mov
negb
adc
enter
xchg
pushf
idiv
mov
je
shrb
dec
dec
clc
imul
jae
mov
aas
pop
pop
inc
cltd
xor
push
fcomps
test
les
daa
lret
sbbl
daa
fwait
mov
loop
mov
aad
cwtl
or
jl
push
in
dec
or
cld
test
hlt
dec
lock
and
test
xchg
push
leave
aad
sub
push
adc
in
dec
pop
mov
push
test
pop
subb
and
push
xchg
stos
xchg
xor
aad
add
inc
nop
in
or
jp
mov
or
sbb
push
cwtl
pop
shrb
sarl
jecxz
lcall
cmp
in
cmpsl
jge
roll
cmpsl
jnp
jl
fnsave
sbb
add
cmc
push
fildl
ret
pop
or
sbb
lcall
ja
jl
stos
xor
icebp
addr16
push
std
call
fwait
cmp
adcb
jno
and
push
imul
xchg
aas
pop
mov
jp
in
or
mov
decb
jmp
fcmovnbe
out
mov
or
divl
fucomi
in
dec
icebp
dec
or
cmpb
test
and
pop
stos
aas
int
adc
jae
lret
jae
sub
dec
pop
movsb
fstpl
cwtl
pop
mov
jmp
jp
mov
inc
adc
mov
ja
cmp
in
mov
ds
fldcw
notb
xor
cmpsb
add
ror
repz
inc
hlt
push
cmp
add
test
call
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
jmp
jle
mov
cltd
cmp
or
stos
je
inc
stos
out
lock
adc
adc
pusha
sbb
cmp
jno
icebp
push
pop
jno
int3
insl
inc
add
mov
daa
inc
or
cmc
or
add
cltd
mov
push
cmpb
dec
inc
fsubr
mov
mov
mov
in
adc
jno
fstl
shlb
out
sbb
ja
pusha
ret
sub
or
clc
pop
or
pop
sbb
adc
xor
push
std
pop
repnz
mov
test
cmpsb
mov
sub
lahf
lds
jl
jns
and
in
pop
repnz
and
inc
cmp
pop
cmp
popf
repnz
mov
add
imul
mov
inc
xor
and
aas
scas
pop
scas
adc
lahf
stc
jp
sub
xor
rcrl
insb
jg
fcompl
sbb
xor
sbb
inc
mov
scas
ljmp
sub
pop
iret
test
lret
gs
xchg
and
popf
test
cmp
addr16
xor
add
pop
inc
push
rcl
sbb
push
shl
sbb
pop
test
sarb
fwait
adc
ret
iret
pop
sbb
ja
pushf
das
adc
out
fsubl
adc
mov
push
xor
adc
aam
loop
and
lret
and
dec
sbb
in
xchg
je
fsubrl
idiv
shld
mov
mov
add
add
inc
mov
add
push
add
jge
dec
pop
inc
add
into
popf
jns
or
roll
xor
insl
mov
ja
add
shll
pop
notb
add
mov
fdivrp
rclb
xchg
repz
mov
lret
jne
cwtl
movsl
xor
jae
das
inc
stos
dec
pop
pop
cmp
dec
sti
movsb
test
es
call
in
mov
out
lahf
add
xor
dec
jge
inc
in
bnd
jae
inc
int
imul
loopne
jb
jne
xchg
stos
std
leave
fchs
stos
loope
mov
mov
xor
inc
jae
imul
movaps
push
xor
out
sub
jnp
xchg
add
in
out
dec
inc
sub
cmp
add
dec
mov
lds
cld
gs
and
sub
movsb
ds
pop
jg
popa
or
lock
xchg
and
jb
mov
movb
mov
outsb
jp
inc
adcb
sbb
std
inc
sbb
push
sub
inc
ss
mov
dec
call
movsb
pusha
rorb
loope
arpl
js
stos
pop
addb
sub
and
flds
imul
fisubs
lds
int
pop
scas
mov
inc
sbb
xchg
movsl
sub
pop
sub
shll
add
jne
cmp
je
mov
mov
mov
mov
jmp
mov
popf
dec
cltd
push
and
rclb
push
mov
adc
adc
dec
xor
push
mov
fdivl
cli
nop
sti
popl
dec
adc
cld
enter
pusha
mov
push
jae
ss
sub
push
aaa
sbb
jl
dec
lcall
xchg
imul
or
ja
xchg
xchg
adc
pop
or
ss
jmp
dec
xchg
int
xor
pop
push
pop
mov
jle
mov
pushf
mov
stos
pop
xor
push
mov
inc
and
dec
imul
fdivs
iret
sbb
js
fst
xor
or
lods
insl
out
xchg
fiadds
lea
fs
jp
popl
sahf
repz
push
adc
adc
dec
testb
out
cltd
das
fstpt
or
cmpsl
sub
int3
add
push
in
jne
fildl
sbb
aas
aam
add
sub
mov
stos
push
push
mov
pop
xor
jmp
push
or
mov
shl
fs
push
push
and
sti
jmp
aad
xchg
in
es
outsl
vunpcklps
jmp
out
add
pop
stos
int3
add
sub
loop
mov
xor
pop
sbb
lods
pop
daa
and
sub
inc
es
inc
cs
arpl
mov
std
xchg
loop
and
cmp
lods
daa
cmc
jae
orl
jbe
shll
js
cmpsl
dec
aaa
push
scas
sbb
cltd
out
stos
lret
xchg
jmp
jo
lods
or
outsb
filds
enter
xor
push
jle
ret
stc
arpl
push
sti
pop
xor
push
mov
xlat
mov
xor
out
daa
bound
scas
repz
fisttpll
shr
or
daa
adc
js
rolb
and
insl
xor
bound
movsb
lahf
xor
xor
in
imulb
inc
mov
arpl
cmc
xor
or
sub
stos
in
pop
movsl
lds
cmc
xchg
arpl
push
xchg
push
adc
cmc
sub
flds
pushf
movsl
push
and
in
mov
mov
fs
pop
and
mov
ja
mov
pop
pop
lret
pop
mov
negb
adcb
sub
adc
popf
lahf
jb
xchg
mov
xchg
pop
or
lahf
mov
out
in
mov
scas
add
push
mov
xor
call
mov
fstl
divb
push
push
out
mov
mov
push
mov
jae
ret
pushf
adcl
and
sbb
cmc
sub
xor
jo
cwtl
or
loope
sub
push
ret
sbb
dec
fcoml
or
jmp
sbb
jb
jmp
and
mov
jne
cmp
mov
dec
outsl
add
int
lds
and
loopne
add
lea
out
push
mov
js
add
add
ret
nop
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
jmp
xchg
jne
and
js
xorl
dec
jecxz
adc
adc
adc
mov
push
push
mov
mov
fiaddl
out
dec
sbb
je
cmp
out
sbb
enter
pop
subb
adc
cwtl
into
outsb
mov
sub
jle
shll
repz
xor
aam
inc
aad
not
imull
lcall
jno
push
sub
dec
jbe
aam
repz
add
xor
pop
test
in
int3
loop
incl
outsl
inc
mov
in
dec
insl
dec
cmp
in
js
jge
pop
nop
aam
pop
dec
cmp
xor
lock
push
call
sahf
sbb
in
popf
mov
cmp
ret
inc
jp
lret
enter
cmp
sub
and
in
popa
mov
xchg
pop
dec
lcall
insl
andl
jo
pop
dec
cmpsl
das
fildll
fwait
repz
gs
lea
pop
dec
mov
shlb
xchg
movsl
and
setbe
lock
sbb
fdivr
xchg
divl
rolb
dec
adc
mov
push
xor
or
cwtl
sbb
das
push
lcall
jl
mov
dec
aam
mov
popf
es
in
pop
dec
inc
mov
mov
and
push
pusha
ljmp
bnd
movsl
push
adc
fisttpl
les
hlt
cli
inc
or
xchg
and
xor
jle
shll
loope
loopne
cmp
addr16
add
into
out
mov
xor
in
pop
pop
jno
pop
adcb
inc
inc
imul
pop
ljmp
inc
pop
mov
jne
xor
jmp
adc
dec
jmp
scas
in
add
fistpll
loope
push
mov
jge
cltd
push
mov
fcom
js
xor
mov
xchg
lds
fbstp
mov
dec
jb
xchg
mov
movsl
rorl
jle
ljmp
adc
mov
popf
icebp
loopne
movb
mov
xchg
lods
ret
addr16
fcoms
jmp
mov
adcb
movsb
cmp
push
or
mov
or
clc
in
repz
xor
sti
shrl
pop
ss
push
or
mov
roll
js
inc
flds
outsl
les
mov
mov
fsubrp
mov
jle
addr16
jb
mov
xchg
jbe
insl
out
sub
mov
out
pop
imul
ret
cmp
pandn
sbb
add
push
incl
insb
pop
dec
dec
mov
enter
xorl
xchg
les
movsb
int3
mov
inc
sub
dec
push
imul
stc
xor
rorb
sub
sbb
insl
fiaddl
adc
lcall
pop
shrl
imul
or
outsl
jge
insb
add
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
jmp
or
jo
outsb
mov
insb
aam
lcall
adc
adc
enter
inc
movsl
xchg
pop
scas
repz
adc
cmp
adc
imul
pop
cmp
aam
mov
cmpsl
ljmp
push
cwtl
dec
fidivrs
outsb
icebp
testb
mov
sbb
xlat
push
pop
push
scas
jecxz
scas
mov
scas
add
xor
ret
cmp
jl
addr16
cwtl
pop
cmpb
xor
pop
fwait
add
in
cltd
mov
loope
dec
jno
les
jmp
popa
les
sarb
cmpsb
sti
lcall
sbb
ss
sub
divl
dec
repz
lods
inc
fcoml
call
out
std
inc
mov
call
cmc
pop
imul
and
pop
sbb
std
jmp
out
mov
mov
out
ss
sbb
jl
shrl
cmovb
sbb
and
cld
push
addr16
mov
jb
jp
fcompl
adc
jne
push
mov
adc
insl
mov
out
insb
pop
js
mov
sub
mov
or
pop
scas
mov
or
stos
das
push
sbb
jb
adc
jg
cmp
jecxz
cli
add
push
jmp
sbb
addr16
enter
jns
lock
jns
mov
add
clc
add
push
dec
arpl
dec
pop
aad
out
or
push
scas
repz
mov
popa
les
push
cmp
stc
cltd
outsb
les
and
dec
ljmp
push
sti
push
mov
mov
inc
aam
call
xchg
pop
lock
inc
scas
mov
shrb
lds
xchg
mov
aam
popf
rorl
bound
pop
pusha
pop
mov
hlt
fcomp
out
call
iret
ret
add
in
adc
sub
addr16
mov
mov
mov
setle
mov
pusha
subb
inc
out
jecxz
int
rorl
push
inc
jg
dec
cmp
fs
hlt
push
dec
aaa
bound
dec
cmpsl
cmpsb
push
mov
or
mov
sub
call
or
inc
xchg
mov
xor
mov
mov
push
jae
lret
cmpsb
sub
lods
jp
int3
js
mov
test
mov
mov
inc
fildl
push
pop
dec
push
ljmp
lods
mov
push
sub
cmpsl
mov
xchg
iret
jl
sub
xor
test
push
push
pop
flds
xor
sub
mov
lods
adc
shll
daa
lret
cmp
xchg
std
stos
xchg
enter
xlat
mov
out
or
test
cmp
sbb
add
cmp
jecxz
jno
pop
dec
mov
dec
stc
jo
mov
icebp
pop
stos
loope
push
cs
lret
and
das
mov
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
jmp
lds
mov
mov
cmpsl
xlat
adc
adc
adc
sbb
bound
mov
sbb
imul
jmp
movsl
arpl
mov
inc
xchg
scas
pop
mov
lret
aaa
push
sbb
pop
xchg
mov
sbb
mov
lcall
xchg
iret
lods
jae
scas
lds
push
scas
insb
or
out
mov
mov
fwait
mov
popf
mov
ljmp
sub
popf
mov
in
push
pop
push
sub
cltd
out
movsb
push
dec
push
cmp
xchg
ds
out
hlt
dec
sbb
push
mov
rcrb
jo
mov
subl
js
loopne
adc
jp
dec
and
dec
cmpsb
addr16
jl
pop
jecxz
test
add
jno
insb
pop
cs
and
pop
dec
sbb
xchg
sti
cs
jmp
cwtl
inc
push
jle
mov
cmp
aaa
sub
jnp
jb
scas
mov
mov
jne
and
imul
jmp
stos
out
inc
jl
enter
jmp
xor
dec
bound
sub
jae
sbb
add
pop
pop
jnp
inc
inc
fdivr
mov
mov
rolb
notl
mov
dec
dec
jbe
and
dec
fldt
jnp
stc
and
fsubrl
int
ss
xor
push
xor
add
push
sbb
jl
push
adc
cwtl
and
test
and
inc
cmp
xor
mov
xor
adc
inc
xchg
scas
xchg
cmp
push
mov
cmp
lods
cs
testl
mov
adc
mov
jns
mov
mov
popf
hlt
into
xor
clc
test
loopne
shrl
imul
sub
rcrl
xor
ret
lds
ret
lret
lds
xchg
mov
pop
lods
andb
xor
gs
lods
adc
cli
xchg
out
add
xchg
jge
add
push
aad
push
arpl
push
sub
aaa
gs
cs
sub
repz
daa
push
dec
mov
pushf
jo
sbb
cmc
cwtl
dec
sub
inc
xchg
shll
mov
jp
cmp
mov
or
ret
ljmp
cmc
jg
xlat
push
xchg
xor
icebp
repz
push
das
jmp
lds
push
adc
sbb
xlat
fistl
rolb
mov
popf
add
imul
cmp
add
push
les
or
xchg
xor
xsave
lahf
clc
lret
or
sbb
inc
push
push
mov
inc
gs
and
sti
icebp
fdivl
xchg
xlat
push
std
addr16
je
in
dec
push
es
arpl
dec
aas
jp
dec
mov
lret
inc
cmp
dec
or
push
push
gs
call
cmp
xlat
jge
cmp
cmp
mov
pop
roll
or
decl
decl
decl
ljmp
rorb
lcall
icebp
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
jmp
mov
sbb
adc
test
adc
adc
adc
or
or
ds
je
fwait
xor
std
icebp
into
mov
xlat
std
cmp
aam
pop
push
pushf
push
loop
ret
bnd
xchg
pop
sub
out
cmp
test
out
pop
pop
lea
mov
das
push
pop
adc
cmpsb
mov
or
xor
jecxz
ds
ljmp
add
xchg
push
add
dec
xor
stc
lock
add
push
cmp
jns
fcmovne
xor
std
test
sti
dec
mov
mov
aad
xchg
push
lds
jecxz
mov
sbb
aas
rclb
adc
xchg
pop
inc
fsubr
test
pop
andb
jl
xor
repnz
lods
dec
mov
dec
mov
sub
addr16
xor
or
dec
cmc
iret
adc
and
sub
out
mov
mov
lcall
jle
mov
push
xchg
stos
stos
sti
clc
mov
jae
imul
sti
add
movsb
mov
xor
sub
popf
cmpsl
push
loop
jmp
push
push
sbb
mov
mov
sub
aad
and
out
xor
mov
out
iret
or
addr16
imul
mov
push
pop
mov
cmp
idivb
cld
testl
lret
mov
scas
push
and
ret
pushf
dec
push
rclb
imul
test
and
mov
mov
or
sub
fldcw
cmpsl
iret
shrl
mov
mov
sub
inc
jns
xchg
jb
fimull
fisttps
xchg
ja
sbb
pop
dec
cli
sbb
cmc
sbb
cmp
lock
sbb
mov
push
xor
mov
pop
ljmp
xor
push
xor
dec
adc
jb
jno
insl
pop
mov
inc
pop
ret
pop
push
mov
push
mov
repz
cmp
test
cmp
xchg
das
rorl
pop
cmp
roll
stc
pushf
push
daa
ds
jbe
test
inc
call
mov
mov
xor
mov
and
pusha
jo
hlt
and
test
xchg
into
xchg
add
pop
dec
sub
xchg
inc
int3
rcr
sbb
cmp
cs
aaa
sbb
fcomip
push
inc
iret
mov
repz
dec
orb
stos
fs
jns
ljmp
sbb
and
pop
cmp
jb
popf
pusha
adc
imul
xor
pushf
adc
fdivl
mov
std
mov
mov
and
movsl
pop
dec
xchg
xor
jg
cmp
pop
cli
std
dec
pop
dec
popf
scas
orl
and
add
cmp
ja
ret
mov
idivb
rorl
test
lock
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
jmp
xchg
and
sbb
outsb
dec
adc
into
lcall
movlps
mov
pushl
jns
les
fistpll
push
push
lahf
ret
cwtl
push
outsb
gs
repz
icebp
adc
inc
lahf
inc
inc
or
clc
xorl
add
fstl
sub
pop
sub
jb
mov
cmpsl
mov
mov
xchg
popa
cs
into
fldt
cmp
outsb
mov
test
lret
sti
scas
fdivrl
lahf
mov
inc
scas
fstpt
pushf
add
je
mov
shr
sub
dec
push
lret
ljmp
int3
icebp
push
cmp
dec
sbb
stos
dec
outsb
or
jmp
push
decb
xchg
xchg
popf
dec
mov
inc
mov
lret
pushf
movsb
pop
push
insb
fcmovne
lret
cld
pusha
aas
ret
lods
pop
pop
je
push
inc
inc
dec
sar
mov
das
cmp
gs
xor
cltd
out
xor
push
mov
sbb
clc
gs
incl
fbld
ja
arpl
daa
jns
or
mov
push
jns
les
push
bound
push
xlat
sbb
or
into
dec
adc
loope
push
push
xchg
mov
xor
cld
out
inc
push
movsl
mov
cmp
push
cmp
jge
in
jp
lods
cmp
fs
jnp
inc
jae
clc
dec
mov
pusha
les
mov
fistl
daa
push
adc
xor
ja
mov
fistpl
aad
or
inc
repnz
int
stc
loope
mov
push
loop
popf
inc
jge
mov
or
push
add
adc
stc
adc
adc
jecxz
rcrl
xor
popa
test
stos
addr16
sub
cwtl
out
mov
sub
test
mov
lds
shll
xor
jg
sub
or
imul
jecxz
push
and
sub
adc
xchg
mov
repnz
loop
jmp
and
push
lods
push
pop
fisubrl
jnp
stos
pop
gs
fadds
rcrb
loopne
adc
mov
xchg
loopne
jge
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
jmp
ds
fistl
push
mov
xchg
movlps
cmp
fstl
cld
les
loope
aam
inc
sahf
xlat
daa
dec
xchg
or
repnz
out
or
aad
movsl
and
lcall
daa
cmpsl
sbb
movsl
aas
dec
mov
outsb
gs
push
ret
cmp
inc
xchg
arpl
cmc
int3
ret
adc
and
mov
xor
sub
frstor
ucomiss
mov
and
fdivrs
pop
ljmp
inc
ret
push
sub
jno
rclb
jecxz
push
loopne
cli
xor
call
lods
push
xchg
and
or
fdivr
mov
out
in
rcrl
adc
add
mov
faddl
adc
sti
and
clc
jge
xchg
mov
xchg
test
fistps
mov
or
mull
outsb
out
or
and
pop
cmp
out
add
push
dec
fadd
xchg
imul
mov
movsb
inc
lret
aas
jno
pop
test
test
vpshad
add
cmpsl
repz
push
inc
adc
dec
arpl
mov
pop
jle
mov
stos
das
mov
mov
or
push
in
ds
jg
imul
mov
push
xchg
ljmp
mov
repnz
mov
mov
dec
sub
xchg
jnp
fisubrs
dec
push
idiv
cld
sub
js
xchg
fldenv
pop
out
mov
push
dec
ja
cmp
pop
pop
jl
orl
lea
das
lahf
fbld
push
lds
pop
and
xor
enter
movl
data16
jmp
jg
mov
jo
add
insb
push
ljmp
ljmp
and
test
pop
mov
in
cmp
adc
frstpm(287
test
js
test
sub
xchg
filds
adc
jmp
inc
mov
adc
ss
adc
cs
repnz
adc
mov
sub
rol
cmpsl
rorl
dec
pop
gs
sub
ss
xorl
fdivrs
sbb
jmp
sbbl
cmp
aam
pop
lods
lret
test
add
adc
xchg
movlps
stc
ret
mov
mov
fldlg2
jmp
lret
hlt
shll
bound
sub
test
repnz
pop
mov
jmp
dec
xor
xchg
mov
insb
mov
xchg
insl
mov
mov
stc
adc
cmc
dec
inc
xchg
gs
adc
imul
icebp
in
pop
jnp
movsl
push
cld
loope
push
sbb
push
jle
jecxz
insl
xchg
call
mov
push
lahf
insb
push
les
xchg
push
dec
and
mov
mov
repnz
cld
jge
mov
and
fldenv
lods
pop
pop
shlb
clc
mov
and
subl
and
imul
pop
pop
inc
mov
lock
xchg
popa
pop
mov
fiaddl
inc
add
out
mov
adc
sub
popf
adc
fwait
or
or
out
insb
inc
inc
push
and
pop
pop
mov
test
lret
dec
in
inc
jb
sbb
jo
mov
adc
or
shrl
pop
or
js
and
add
push
dec
pop
dec
mov
push
leave
pop
push
fcoml
mov
faddl
lcall
or
outsl
popa
inc
jg
movsb
cmpsl
cmp
push
fldcw
mov
jecxz
ja
aaa
pusha
aaa
fs
mov
mov
sti
xchg
cmp
xchg
hlt
xor
jae
xchg
popa
imul
mov
sahf
je
loope
lods
jmp
mov
shlb
jbe
xor
sbb
jmp
mov
mov
adc
fwait
bound
cmpsl
bound
sub
imull
and
or
sahf
or
in
jbe
jmp
mov
sbb
popf
enter
aaa
in
fsubl
stc
jp
mov
imulb
icebp
sub
and
fwait
mov
pop
sbb
das
lahf
iret
fadds
pop
cli
inc
data16
movsl
xchg
test
loope
ud2
sub
mov
enter
adc
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
jmp
rclb
mov
insb
call
rcll
xchg
movlps
mov
mov
loopw
lea
or
int
cmpsb
mov
push
cltd
cmp
sbb
leave
cmp
enter
mov
dec
fidivs
or
mov
jns
mov
cmp
insb
dec
aaa
arpl
jmp
mov
mov
adc
cmpl
cltd
mull
test
cmc
call
add
mov
movsb
xchg
scas
aas
imul
fidivs
pop
std
jbe
add
add
out
xlat
mov
nop
call
push
push
sub
cmp
daa
lods
pop
dec
lods
test
into
nop
push
shr
push
ds
push
notl
jo
aaa
jne
xchg
pop
or
sbb
aaa
push
xchg
lds
ret
cmp
pop
mov
ja
xlat
mov
sbb
pusha
jecxz
movsb
add
push
aas
sahf
call
adc
pop
xchg
cmp
leave
cs
mov
lahf
mov
cmp
mov
dec
mov
aam
ss
pop
pop
pop
mov
pop
and
sub
aad
mov
addb
popa
ficoms
js
inc
add
ficoms
scas
movsl
mov
add
loop
adc
cmp
push
test
pop
lret
jecxz
mov
xchg
xlat
in
push
mov
or
xchg
sub
mov
sub
movsb
push
pop
lds
cmpsl
mov
push
cmp
stc
dec
mov
fidivs
adc
xchg
pop
stos
sbb
aaa
or
int
xor
jecxz
jle
dec
sub
adc
aad
shrl
dec
popa
xor
shl
lret
push
mov
and
arpl
dec
cli
sti
push
push
pushf
push
test
mov
adc
outsb
in
addr16
ret
or
mov
sub
and
cmp
hlt
adc
xor
and
jg
dec
arpl
adc
xor
jmp
push
ficoml
mov
lret
push
out
pushl
mov
popf
mov
pop
fisttps
mov
add
xor
jmp
fnsave
cmp
add
add
adc
popa
dec
das
inc
cmp
frstor
dec
and
test
xor
and
adc
adc
mov
test
fwait
cmp
inc
jmp
iret
js
or
xchg
shrb
push
jle
dec
iret
mov
mov
jecxz
inc
fwait
mov
in
sahf
js
jp
xchg
mov
pop
rolb
and
repnz
cmp
repnz
lcall
ret
out
jmp
lret
test
jmp
cmp
test
mov
out
jle
inc
movsb
cmp
in
ss
sarl
movsb
lcall
lds
outsl
mov
dec
cmp
or
mov
jge
dec
mov
movups
dec
inc
aam
pop
outsl
jo
pop
fsubp
popf
int3
test
pop
mov
testb
dec
mov
xor
mov
adc
sub
and
pushf
loop
mov
testl
in
fcmovnu
xchg
gs
into
inc
sbb
mov
das
jbe
fnstcw
out
push
mov
mov
mov
icebp
popa
or
mov
adc
ljmp
cs
pop
push
push
jmp
sbb
mov
rcl
add
sbb
sub
jb
fisubrl
lea
insb
and
jnp
loopne
stc
mov
aas
int3
das
daa
insl
add
pop
inc
mov
xor
mov
outsl
push
mov
les
mov
sub
jl
jl
pushf
and
fwait
lea
push
rcrl
jno
mov
add
mov
shll
cmp
stos
xchg
xchg
and
xchg
subl
dec
xor
push
xchg
mov
inc
insb
inc
cmp
lcall
jg
sti
push
and
movsb
cltd
and
and
sub
out
inc
lods
or
mov
pop
mov
push
nop
ss
sub
mov
data16
dec
sub
stos
std
mov
stc
lret
ret
and
push
pop
cmp
mov
std
inc
adc
mov
jmp
add
leave
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
jmp
inc
lds
gs
inc
and
imul
inc
push
test
adc
mov
add
adc
loopne
add
sbb
push
cs
lcall
xor
or
dec
outsb
sbb
test
test
lds
leave
xchg
jb
jmp
sbb
fmul
push
insl
cwtl
mov
imul
fcmovnb
outsb
fstps
fs
dec
inc
out
inc
mov
dec
cltd
push
inc
pop
push
adc
jl
push
and
outsb
adcb
in
mov
sub
or
ja
insb
das
push
adc
out
lea
dec
push
dec
mov
jbe
or
add
lret
xor
movsb
inc
lds
fbstp
pop
in
mov
out
adc
add
cmp
xchg
jno
adc
mov
mov
pop
or
ja
rolb
dec
push
inc
pop
in
pop
movsb
cmpsl
xchg
ss
pop
pop
repnz
add
daa
jge
pop
data16
shlb
push
mov
and
call
idiv
lock
sbb
js
pop
std
ja
loop
jl
sub
jbe
push
mov
cmp
insl
sub
add
sub
cmp
jb
mov
mov
adc
rorb
mov
sti
push
jmp
sbb
pop
subl
dec
mov
sub
add
and
xchg
aam
sub
inc
adcb
js
cli
mov
pop
jo
ds
call
mov
or
push
fmulp
sub
pop
nop
or
cmp
mov
add
jg
mov
ret
test
or
push
loop
fistpll
sbbb
jns
sbb
lds
sub
out
xor
shrb
in
jmp
subl
jno
add
push
sub
mov
les
sbb
push
jns
mov
addr16
pusha
or
fwait
popa
std
arpl
cmp
lods
pop
xlat
popf
imul
sarb
dec
imul
jno
mov
cmp
xor
imul
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
jmp
hlt
aaa
add
pop
dec
pop
sbb
sti
jle
scas
adc
add
adc
dec
rolb
dec
popa
into
out
sti
ja
xor
cmc
pop
push
xchg
inc
pop
xor
add
sahf
jno
lcall
lods
fnstcw
mov
and
or
and
cmp
lret
xor
call
faddl
push
fadd
xor
cmpb
bound
ret
std
cmp
adc
jmp
aam
nop
mov
cmp
cmc
mov
or
out
push
push
jl
cltd
adc
scas
popf
pop
ret
push
pushf
cmp
cltd
sub
pop
push
test
add
fdivrp
xchg
loop
enter
cmp
sbb
loope
mov
in
arpl
loope
mov
dec
and
jl
ret
out
mov
xchg
push
xor
jb
enter
and
negl
mov
paddusb
sub
mov
and
sbb
lea
in
lock
aas
push
pop
jbe
and
xor
inc
leave
jg
data16
fcoms
movsb
mov
aas
shlb
mov
ljmp
inc
pop
xchg
aaa
pop
mov
mov
cwtl
cmp
adc
jp
mov
xor
or
daa
mov
push
cmp
dec
or
test
sub
mov
xchg
mov
jnp
xchg
test
imul
sub
inc
pop
xor
mov
or
inc
fs
mov
adc
sbb
adc
inc
ret
inc
dec
mov
in
mov
push
adc
cmp
jno
mov
sbb
popf
or
xlat
or
fiaddl
daa
xor
insl
in
outsl
sub
push
or
scas
sbb
mov
pop
repnz
push
popf
xchg
mov
fxch
daa
test
mov
divl
popf
dec
bound
addb
mov
fadds
aaa
test
inc
movsb
in
test
cmpsb
fistpll
ficoml
rcrb
stos
adc
cmp
add
out
test
push
pop
loopne
mov
cmp
mov
clc
mov
in
push
mov
xchg
and
pusha
cmc
mov
stc
scas
mov
loope
jl
xor
insl
movsl
mov
mov
jmp
sub
loop
cs
pop
add
fbstp
push
cmp
aam
out
ja
lods
rorb
inc
sub
in
or
es
lock
jmp
in
popa
xor
cli
shll
push
or
imul
pop
or
test
mov
xor
sbb
adc
sbb
incl
adc
mov
pusha
ljmp
push
xor
ja
jmp
imul
mov
sub
add
mov
nop
pop
test
fld
fwait
cmp
push
ficoml
mov
insl
imul
mov
and
negb
aad
rorl
jle
push
ret
jo
mov
fmull
fisttps
xor
daa
inc
aas
test
mov
outsl
sbb
inc
loop
cmp
cmp
xchg
leave
cmp
cwtl
push
sub
inc
lock
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
jmp
xor
cmpsb
pop
cmpsb
pop
sub
jg
push
push
adc
mov
add
adc
test
stos
loopne
add
push
cmp
pop
jmp
lcall
or
sbb
mov
push
js
sub
mov
scas
and
pop
jmp
arpl
or
lret
fs
sbb
rclb
divl
cwtl
shlb
mov
test
out
movsb
scas
push
mov
jb
mov
pop
je
mov
xor
or
inc
insl
iret
cltd
icebp
xor
arpl
cmp
fwait
movsb
popa
stos
xor
rcr
test
cli
popf
xchg
addl
sub
add
add
mov
mov
push
xlat
popf
dec
jl
jo
and
xchg
xchg
jno
aaa
in
add
bound
jns
adc
lock
inc
mov
mul
shlb
mov
push
add
mov
inc
dec
insb
inc
jae
sbb
cli
xorl
dec
dec
push
cli
pop
mov
adc
enter
daa
enter
pop
test
mulb
mov
out
lods
sti
pop
pop
mov
or
mov
cmp
pop
mov
fmuls
iret
aad
mov
cmp
ss
test
popf
xor
jns
je
jb
add
popf
xchg
adc
lock
push
dec
in
rorl
mov
or
stos
xchg
inc
xchg
fsubp
jne
xchg
pop
rcll
pop
push
xchg
outsl
out
fs
xor
jne
inc
rcrb
sti
adc
popa
sub
gs
push
scas
pop
adc
mov
fwait
jae
mov
fistpl
das
xor
inc
test
push
pop
outsl
jp
fidivs
and
jne
inc
xorl
orb
push
cmp
mov
sarl
in
aas
out
xlat
push
mov
jmp
xchg
repz
les
jmp
mov
xor
or
bt
insl
fwait
and
inc
mov
dec
mov
add
movsl
fdivrl
jo
xor
xor
push
negl
mov
je
xchg
lea
inc
in
int
mov
xlat
xchg
sbb
cli
cmp
xor
inc
js
sub
add
les
xor
jbe
xor
cmovb
xor
push
jbe
sbb
fiaddl
shrb
shlb
mov
aam
mov
hlt
push
add
icebp
jle
jmp
enter
sti
adc
movsb
cmc
jne
dec
hlt
movsl
mov
aas
outsb
dec
adcb
pop
mov
jne
xor
enter
loop
sub
lcall
xchg
in
jecxz
mov
ljmp
pop
ret
xorb
push
addr16
idivb
add
int
jmp
pop
dec
fidivrs
dec
or
sbbb
and
loopne
jnp
add
pop
into
adc
fisubl
imul
rcl
cmp
and
ljmp
and
inc
mov
xor
test
or
fsts
sub
je
adcl
adc
out
repz
ficomps
jb
add
movsb
or
pop
mov
fucomi
mov
hlt
xor
jo
push
add
jmp
test
add
add
out
decl
push
clc
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
jmp
loop
repnz
es
xchg
dec
mov
add
adc
clc
dec
push
call
add
and
insb
mov
in
jnp
push
cmpb
mov
jecxz
jecxz
pop
popa
mov
notl
mov
adc
sub
aam
mov
les
mov
mov
xchg
and
fwait
cmp
icebp
add
lahf
jmp
push
add
test
mov
sub
xor
jl
mov
jbe
iret
rclb
push
int3
aam
aad
push
push
cli
scas
imul
mov
xchg
xchg
aam
cmp
lcall
pop
push
scas
mov
mov
add
xchg
mov
nop
out
mov
dec
dec
xchg
mov
mov
lret
jg
push
data16
cmp
add
add
or
pop
lods
outsb
push
push
fwait
jg
lea
push
jbe
movsb
vcomiss
hlt
dec
aam
negl
inc
inc
cmp
pop
js
adc
mov
mov
lahf
pop
mov
pop
popl
out
push
jo
cmp
sub
popf
inc
enter
cmpsb
out
pop
pop
and
push
sub
xchg
into
test
std
fucomp
push
sub
ljmp
sti
in
sti
mov
xor
sahf
lods
sti
jecxz
mov
sbb
inc
enter
pop
cmp
pushf
cmp
jns
scas
mov
and
call
decl
fcmovnu
dec
xor
stc
sarl
sti
arpl
mov
push
ret
sbb
pop
pop
mov
cmp
adc
adc
cmp
adcl
stos
mov
addr16
fsubrs
adc
negb
cli
out
xor
loope
enter
addr16
push
hlt
clc
mov
fistps
pop
ret
lcall
dec
inc
sbb
aas
aas
fwait
lcall
add
lcall
int
fwait
mov
xor
orl
push
ja
xchg
aam
pop
mov
or
out
jl
xrelease
or
dec
lahf
and
nop
shrb
sbb
loope
cmpb
outsl
iret
iret
out
push
jge
hlt
cmp
repnz
cwtl
fs
ret
adc
push
jns
pushf
nop
push
or
xchg
sub
xor
xchg
mov
js
sbb
int3
cmpsb
fimull
out
pop
iret
hlt
movhps
ljmp
sbb
mov
in
or
and
fildll
cs
mov
cltd
mov
mov
pop
cmc
dec
mov
pop
push
cmp
lret
mov
andb
je
ret
sub
lcall
sbb
lcall
das
ret
seta
adc
mov
aas
jecxz
xchg
out
test
push
lock
mov
mov
aam
cmc
or
fldcw
andl
lahf
lahf
iret
cmpb
push
mov
imul
push
insb
mov
sbb
leave
sub
push
or
adc
iret
mov
mov
xchg
mov
stos
mov
lret
cmp
mov
rcrb
mov
inc
or
nop
jge
and
roll
or
inc
add
add
push
add
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
jmp
popf
jnp
cwtl
sub
loopne
aam
push
adc
adc
fimull
add
add
ds
mov
push
pop
bound
fmull
fwait
inc
inc
pop
in
inc
lods
xchg
push
lcall
aam
mov
push
mov
je
push
mov
bound
orb
std
push
or
sub
adcb
popf
enter
les
push
push
xchg
insb
or
movsl
inc
in
in
call
into
xchg
bound
add
pop
mov
push
sub
mov
pop
add
sbb
test
ret
mov
std
clc
in
movsl
and
dec
jnp
xor
cs
mov
dec
inc
cli
orb
lods
fiadds
ljmp
stos
test
push
mov
enter
and
in
stc
xchg
push
dec
sub
cltd
xchg
rorb
ffreep
sbb
and
jg
inc
movsb
sbb
adc
iret
xor
sub
out
outsb
fsubrs
in
push
mov
mov
add
xor
inc
inc
ss
imul
pop
mov
adc
inc
xor
mov
push
mull
push
jle
es
dec
mov
or
push
mov
mov
jecxz
jge
ljmp
dec
or
pushw
idivl
das
cmp
mov
cmpsl
sahf
push
pop
out
mov
mov
push
inc
cmp
jns
dec
xor
out
adc
pop
ja
mov
xlat
in
imull
or
adc
stc
lock
and
js
pop
pop
mov
lahf
mov
lds
bound
hlt
addr16
rolb
push
and
xchg
cmp
out
cli
mov
popa
mov
sbb
fisttpll
and
pop
je
mov
insb
addr16
out
sbb
repnz
cld
mov
pop
test
jne
xchg
rcll
das
push
int
inc
dec
popa
sbb
fs
add
ds
lret
mov
fldl
pop
mov
or
addr16
dec
inc
cmc
in
out
or
aas
sub
in
jp
scas
inc
adc
cmpsb
xlat
les
cltd
mov
cmpsb
movsb
mov
sub
mov
jnp
xor
sbb
or
lea
mov
sbb
movsl
pop
mov
pop
sbb
mov
sub
xor
sarb
stc
ret
addr16
imul
lock
mov
fld
xor
imul
mov
call
mov
cmp
es
xchg
adc
add
mov
add
mov
aaa
aad
cmpsl
je
mov
sub
aad
cltd
sub
aas
pop
dec
in
mov
push
aaa
leave
sub
inc
dec
out
pop
lods
jo
frstpm(287
jns
pmullw
dec
or
cmp
jae
jle
mov
mov
sbb
xchg
jg
xchg
mov
mov
popf
data16
imul
mov
dec
pop
pop
xor
jg
xor
pop
adc
out
cmp
fistl
xor
stc
mov
cmp
stos
ds
pop
mov
mov
rolb
and
push
xchg
out
mov
imul
test
jecxz
push
inc
daa
scas
xchg
nop
fistl
insb
mov
cltd
dec
icebp
in
add
or
popa
xlat
aaa
inc
push
cmpsb
cs
movsl
mov
push
ja
ud0
int
fmull
dec
and
repnz
inc
and
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
jmp
dec
mov
loope
and
les
cwtl
lods
mov
adc
jne
adc
add
pop
sbb
jge
push
push
ss
pushf
xchg
fidivl
addr16
movsl
pop
popf
sub
fcoml
ret
addl
gs
call
push
inc
push
dec
aad
mov
push
jnp
subl
imul
daa
mov
mov
pop
mov
or
ja
test
inc
dec
imul
popa
xchg
mov
stos
outsb
xchg
mov
jmp
mov
iret
jge
jle
or
or
mov
in
dec
dec
js
sbb
insl
rorl
and
xor
push
js
insb
mov
lea
cli
sub
inc
jo
mov
decb
fists
sbb
jb
dec
push
inc
push
insl
mov
ja
jmp
lret
inc
test
add
dec
jnp
jge
fwait
add
hlt
pusha
mov
out
fcmove
sbb
lcall
mov
add
xor
push
dec
scas
push
mov
scas
fsubrl
cmp
lea
mov
pop
cli
sete
adc
lcall
pop
lock
fstpl
dec
add
lret
scas
xlat
push
out
stc
dec
pusha
pop
in
sbb
shlb
mov
mov
pop
inc
test
push
lret
mov
xchg
jle
ret
insb
mov
push
push
dec
sbb
addr16
sub
idivb
ret
or
aas
mov
ret
lock
in
out
dec
add
mov
cs
jbe
mov
stc
xchg
mov
dec
sbb
jno
and
push
cwtl
test
outsb
cmp
imul
or
sbb
stc
test
jb
neg
imul
cmp
ret
jp
sbb
ret
lds
les
shr
cmp
sbb
cmc
fisttpl
mov
pop
ret
sbb
push
cmp
fldt
sub
enter
cwtl
cs
out
jb
imul
js
iret
mov
adc
data16
in
fs
xor
sbb
icebp
pop
xchg
jl
mov
imul
push
test
adc
pushf
xor
movsl
jne
pop
inc
xor
js
pop
pusha
fwait
test
divl
mov
dec
lahf
cmp
jbe
and
aam
shlb
std
js
scas
inc
mov
iret
scas
fsubrl
fidivrl
sbb
pop
push
mov
add
rolb
scas
sbb
jne
in
sub
mov
sbb
mov
repz
fldcw
test
daa
mov
out
mov
das
outsl
fcmovu
mov
fisubl
aaa
pop
insb
loop
dec
bound
pop
xchg
scas
and
sahf
movsl
mov
cld
pop
inc
ja
inc
sti
mov
popf
sbbb
add
out
mov
or
mov
icebp
inc
cmpsl
outsb
lds
int
mov
mov
cmp
push
testl
mov
lods
std
movl
rorb
out
or
mov
mov
jo
xchg
xchg
dec
sub
and
test
xor
mov
xor
push
stos
adc
push
popa
jne
je
xchg
imul
test
sub
ret
mov
pop
sbb
jmp
push
or
mov
push
or
cmpsb
lds
adc
pop
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
popf
mov
and
sbb
js
in
stos
orl
adc
sbb
insl
push
sub
mov
jmp
jno
std
mov
int3
mov
iret
in
push
mov
mov
xor
arpl
shrl
mov
in
js
in
rcrb
adc
mov
push
in
jo
xchg
pop
inc
test
and
divl
out
pop
lock
cmp
outsb
dec
push
in
arpl
push
xor
rorb
leave
or
and
mov
pop
push
pusha
clc
jo
jne
jnp
dec
and
sub
js
lods
push
addr16
sbb
lret
xchg
mov
mov
mov
test
jmp
lret
inc
es
cltd
daa
push
test
mov
dec
gs
jmp
lret
mov
shl
sbb
cli
lods
repz
stos
adc
pop
mov
push
xchg
aaa
push
fs
jo
jno
add
xor
sbbl
fdivs
decl
push
mov
mov
pop
mov
outsl
les
jg
je
mov
add
adc
push
mov
std
and
sbb
imul
or
testl
int
rcr
mov
fldlg2
add
push
mov
outsl
scas
cwtl
rcrl
lahf
cmp
xchg
and
call
mov
enter
fsubrs
sahf
movb
int
insl
pop
lret
lcall
ja
xor
insl
int
push
mov
xor
push
adc
out
inc
scas
outsb
stos
jp
mov
inc
imul
cmp
pusha
mov
mov
adc
sti
push
pop
mov
mov
pop
xchg
idivl
dec
jne
out
mov
add
leave
sti
mov
iret
pop
mov
push
mov
add
out
adc
or
fnstenv
adc
mov
mov
hlt
adc
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
add
push
cmpl
notl
movl
movl
mov
jmp
movl
movl
jle
pushl
push
push
call
xor
or
sbb
add
cmpl
movl
mov
jmp
mov
je
push
pushl
pushl
call
or
sbbl
sub
xor
or
mov
sub
xor
xor
add
and
push
notl
push
mov
mov
shrd
cmpl
movl
movzbl
mov
jmp
mov
jbe
pushl
pushl
push
call
add
dec
xorl
add
sbb
and
shr
cmpl
mov
movl
movl
jmp
mov
ja
push
call
mov
xor
sub
add
xor
sub
xor
add
adc
mov
cmpl
mov
mov
mov
jmp
notl
jbe
push
push
push
call
add
xor
addl
add
mov
mov
add
sbb
mov
cmpl
movl
mov
movl
jmp
movzwl
jb
pushl
call
adc
mov
xor
add
sub
or
mov
mov
or
and
adc
movl
xor
adc
mov
xor
cmpl
movl
mov
movl
jmp
movl
movl
jae
push
pushl
push
call
xor
xor
or
mov
sub
movl
movzwl
sub
mov
or
adc
not
mov
add
xor
or
mov
mov
cmpl
movl
mov
movl
movzwl
jmp
mov
jle
pushl
push
push
push
push
push
call
mov
add
add
inc
add
mov
and
mov
or
and
sbb
shl
mov
shrd
xor
sbb
shr
cmpl
movl
mov
mov
movzwl
jmp
movl
movl
ja
push
push
pushl
push
pushl
call
or
xor
or
adc
adc
movzwl
xor
sub
adcl
and
mov
mov
cmpl
movl
mov
movl
movl
jmp
mov
movl
ja
push
pushl
push
pushl
push
call
xor
add
adc
subl
movzwl
sbb
mov
xor
andl
movzbl
adc
xor
sbb
or
orl
mov
neg
mov
negl
mov
cmpl
movl
mov
mov
jmp
movl
not
jge
pushl
pushl
pushl
call
sbb
sub
notl
sub
sbb
add
mov
adc
mov
mov
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
call
sbbl
xor
or
or
mov
movzbl
sbb
mov
cmpl
mov
not
jmp
mov
jne
push
pushl
push
pushl
pushl
pushl
push
call
andl
and
or
movzwl
add
or
mov
adc
mov
orl
shl
xor
movzwl
add
xor
sub
mov
cmpl
not
mov
mov
movzwl
jmp
mov
mov
ja
push
push
pushl
pushl
push
call
xor
xorl
sub
or
mov
and
mov
xor
shld
shl
mov
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
adc
mov
movzbl
adc
mov
sbb
xor
xor
xor
mov
mov
andl
shld
shl
jmp
ffree
addl
cmp
push
iret
inc
stos
dec
xchg
adc
movlps
test
pop
sbb
lcall
add
addr16
aad
stc
in
pop
das
sbb
setl
mov
movl
pop
and
setns
xchg
movsb
test
pop
imul
jl
cltd
loope
sbb
inc
mov
and
sub
push
cld
mov
stos
xchg
sbbb
or
dec
add
sti
or
testl
bound
lea
into
sub
je
jne
cld
jge
xchg
push
outsl
stos
mov
sahf
inc
push
or
and
and
push
cmp
dec
nop
outsl
sahf
and
xor
xchg
and
mov
clc
or
xor
lods
dec
and
xor
push
xor
pusha
fnstenv
lret
cmp
adc
insl
lret
inc
adc
adc
mov
stos
cmp
shr
push
shl
addb
mov
push
loopne,pn
pusha
dec
sub
and
mov
sub
mov
adc
mov
orl
fldt
sub
fdivr
enter
out
into
fwait
dec
or
mov
lahf
push
xor
xchg
mov
jmp
in
aas
movsb
and
stos
dec
leave
js
mov
aad
movsb
dec
pop
aam
jp
or
mov
or
lock
mov
lret
jl
iret
mov
jb
mov
push
pop
mov
cmpsl
cmp
inc
add
in
ud1
push
and
mov
mov
xchg
xchg
add
adc
dec
mov
xchg
ds
mov
sti
mov
jo
daa
inc
pop
mov
clc
jg
mov
mov
sub
xchg
add
lods
in
xor
inc
xor
push
sub
pop
mov
jecxz
mov
sarb
mov
scas
xchg
lods
add
pop
xchg
ffree
sbb
sub
int3
pusha
lods
cmpsb
clc
adc
push
or
loope
inc
xchg
push
dec
inc
mov
dec
sub
hlt
mov
pop
xchg
jp
pushf
inc
popa
adc
push
add
or
pop
xor
mov
mov
mov
mov
inc
je
clc
push
arpl
fwait
inc
loop
aam
sbb
jne
pop
jno
mov
sub
orb
rol
pop
push
inc
add
test
add
add
cli
je
mov
mov
push
pop
xor
shl
mov
xor
shr
or
mov
mov
mov
mov
mov
mov
push
pop
sub
mov
add
mov
lea
mov
mov
mov
xor
jmp
gs
test
dec
jmp
push
push
pusha
js
test
adc
movlps
mov
jmp
and
push
or
lcall
sbb
xchg
lahf
pop
outsb
sub
ljmp
and
dec
sahf
ficompl
xchg
jns
mul
jecxz
out
icebp
push
mov
int3
or
and
daa
push
cmp
sbb
fldl
outsb
inc
pop
sbb
mov
pop
lret
testl
add
cmpl
and
cwtl
push
incb
aad
cwtl
and
orb
adc
imul
stos
std
iret
subl
add
mov
vcvtdq2ps
aam
pop
popf
cmp
sub
add
fcmovne
lret
nop
mov
add
jnp
ss
loopne
or
in
gs
in
cmp
pop
sbb
pop
add
arpl
ss
dec
arpl
test
imul
mov
pop
mov
adc
insb
xor
mov
mov
sbb
test
mov
sub
shll
mov
pop
xchg
or
xor
cltd
inc
inc
jnp
sbb
in
mov
sub
pusha
dec
jl
mov
addr16
lods
test
sub
jns
sbb
sub
shlb
int3
pop
dec
dec
loope
mov
pushf
xor
mov
fwait
push
into
sub
pusha
imul
lret
icebp
dec
dec
dec
push
dec
loop
and
outsl
jb
jl
in
lea
xchg
dec
fcomi
pop
adc
jle
or
por
mov
addl
ljmp
xchg
push
mov
jecxz
mov
shrb
and
mov
sub
or
fimuls
xchg
ficoml
int
fistpll
lret
push
cmp
jb
data16
add
inc
leave
outsl
mov
add
adc
imul
loop
dec
icebp
stc
lahf
fldt
mov
lock
call
push
pop
mov
pusha
sbb
mov
daa
cwtl
rolb
sbb
mov
test
hlt
lea
mov
iret
mov
xchg
dec
xor
cmp
iret
xlat
inc
shlb
push
pop
xor
add
rclb
mov
repnz
out
pop
mov
arpl
jg
fmull
dec
movsl
sbb
sub
lret
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
jmp
xchg
enter
pop
cs
xor
decb
adc
shlb
sbb
xchg
in
ljmp
loopne
ljmp
inc
aad
mov
push
push
jmp
sub
dec
mov
jno
js
ss
adcb
or
sbb
pop
shll
aad
push
data16
inc
int
mov
mov
pop
push
loop
xor
cli
dec
movsb
mov
sbb
mov
pop
stos
lret
sti
adcb
shl
out
aad
inc
mov
sbb
pop
out
xchg
jp
pop
int
push
shl
and
mov
sbb
cmpl
ficompl
es
or
inc
push
dec
jnp
jbe
pop
orb
and
bound
hlt
clc
pusha
fsubs
adc
sub
pop
test
cli
ret
cs
sbb
leave
mov
fists
inc
and
jno
mov
stc
stc
aaa
pop
mov
lods
jb
push
dec
dec
enter
jns
fnsave
leave
test
in
pop
push
lahf
push
xor
cmpsl
lret
jle
jae
pop
or
cwtl
or
daa
popf
lock
sub
sub
rolb
std
jle
sub
icebp
in
cmc
jbe
pavgw
mov
sbb
jp
mov
ret
xchg
int
daa
pop
push
ja
cmpsl
push
iret
sub
stos
xor
out
loopne
fs
shl
pusha
repz
xor
push
pop
movsl
xchg
cwtl
mov
mov
fiadds
shr
cwtl
xchg
cmp
fstp
bound
fistpll
lcall
nop
popa
dec
stc
loope
jbe
test
rcl
dec
pop
mov
push
xchg
ret
or
push
sbb
insl
xchg
icebp
test
and
lods
stos
aaa
outsb
add
inc
cltd
xor
push
lcall
xor
push
xor
dec
mov
lea
ds
jns
xchg
push
cmpsl
les
je
add
outsb
cmpsl
adc
addb
jl
pop
xchg
push
testl
test
in
inc
jb
dec
bound
fwait
aaa
cmp
dec
scas
cmp
pop
add
mov
inc
jecxz
fs
jo
cmp
dec
out
scas
aam
sbb
int3
popa
rcll
ljmp
xor
leave
inc
mov
sbb
js
adc
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
jmp
adc
sbb
adc
jle
ja
adc
movlps
dec
hlt
nop
out
inc
mov
movsl
mov
xchg
sbb
sbb
pusha
leave
xchg
mov
or
pop
mov
jge
mov
push
push
mov
dec
fsubrs
nop
inc
ja
or
loop
fsubp
add
mov
sbb
fadds
push
pop
cmp
cmp
sbb
add
adc
mov
in
and
dec
sub
jne
out
mov
cmp
inc
nop
and
lods
mov
cmpsl
add
cmp
lcall
mov
push
imul
js,pt
sbb
lret
movsb
adcw
push
dec
in
mov
vcvtss2si
cmp
xchg
inc
jl
invlpg
orl
push
int3
pop
scas
in
stos
fs
xchg
loopne
movsl
in
dec
pop
add
sub
mov
iret
out
push
imul
mov
mov
jnp
outsl
or
dec
sbb
inc
addr16
arpl
jmp
inc
orl
xlat
sub
dec
push
rol
sbb
fcompl
or
sarb
testl
icebp
outsb
mov
pop
pop
imul
fdivp
js
mull
xchg
mov
out
push
mov
rcrl
xlat
cmp
cmovno
jecxz
out
mov
leave
and
jp
xchg
pushf
stos
clc
or
fs
loope
rcll
sub
fdivrp
xchg
jmp
cmp
or
dec
sub
lds
sub
mov
and
dec
stos
lods
adc
pop
fadds
xchg
fwait
sub
xchg
fisubrl
inc
adc
dec
movsl
xchg
xor
push
push
inc
adc
scas
push
cli
jb
dec
dec
cmc
push
add
xchg
notb
addl
insb
fdivrl
les
imul
fsubrs
adc
jbe
rorb
jp
mov
push
clc
lods
mov
and
inc
mov
cmp
pop
push
xor
mov
xchg
push
ror
add
sbb
mov
push
fnstsw
outsl
stos
movsb
js
push
cmp
sarl
mov
sub
jl
lods
shlb
xor
idiv
or
clc
lea
mov
or
pop
hlt
shl
call
mov
jmp
js
cmc
repz
sub
and
adc
decb
adc
sbb
je
lret
xor
add
pop
mov
jbe
and
test
sbb
pop
xor
inc
push
jb
jns
or
jbe
in
lcall
lret
sub
inc
sbb
push
shll
outsl
push
test
clc
das
mov
insl
js
jg
push
test
fstpt
dec
jbe
jl
jnp
cltd
lret
add
ret
iret
or
mov
clc
pusha
cwtl
pop
leave
mov
ja
out
imul
mov
bound
test
add
leave
cwtd
lret
clc
and
pop
push
or
mov
ss
repz
sbb
or
cmc
lcall
sbb
into
es
dec
push
jmp
pop
stos
dec
cmpb
fs
out
movsl
push
mov
mov
outsl
cmp
dec
add
adc
xchg
enter
mov
mov
in
push
push
fsubrl
hlt
movl
add
mov
lods
push
in
in
xchg
push
and
rorl
adc
push
or
push
xchg
jmp
xchg
mov
xor
inc
aam
fistpll
jnp
out
or
jl
test
push
test
inc
xchg
mov
mov
sbb
aam
inc
adc
push
loope
mov
loope
movsl
rcll
mov
jl
mov
repz
int
mov
sbb
dec
jp
popf
xchg
clc
data16
dec
nop
and
enter
or
in
fisubl
lahf
cmpsb
sub
xlat
cld
notl
test
pop
xchg
xchg
mov
adc
cwtl
adc
xlat
ja
pop
jb
test
insb
or
lods
enter
jge
fsubp
loope
sbb
jo
mov
cmp
repz
lea
popa
adc
lcall
test
and
lahf
xorb
inc
jne
inc
outsl
pop
jmp
push
lea
inc
mov
and
inc
mov
dec
scas
xchg
jo
xchg
xor
ds
aam
inc
sbb
imul
inc
les
enter
shlb
mov
sbb
nop
jnp
cli
dec
fcomp
cmc
and
loope
mov
jg
dec
adc
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
jb
and
sbb
pop
jmp
add
js
jno
adc
movlps
lret
loope
ljmp
sbbl
shr
ja
and
and
lcall
loop
aad
push
mov
mov
mov
out
icebp
pop
pushf
mov
lcall
stos
mov
mov
andb
iret
insl
xorl
in
das
stos
inc
mov
ror
jns
movsb
movb
loopne
icebp
ss
test
jp
mov
shll
xor
int
dec
fildll
and
push
loopne
mov
sahf
sbb
adc
loop
out
int3
xchg
push
cli
mov
mov
movsb
je
mov
mov
movsl
jp
pop
and
or
xchg
aam
aad
mov
cmp
dec
or
xor
scas
push
push
clc
push
adc
inc
mov
std
and
stc
and
pop
adc
or
imul
dec
xor
mov
xchg
mov
adcb
fidivs
push
mov
xlat
imul
push
cld
push
aam
cltd
lcall
pop
push
inc
and
jmp
scas
pop
rol
into
push
mov
adc
fistl
cmp
ljmp
ret
out
pop
cmp
fistpll
jp
nop
paddusb
fwait
outsb
lret
jge
jmp
sub
sbbl
clc
cmc
xor
mov
dec
jae
inc
sbb
add
loope
jp
in
das
leave
dec
or
not
push
mov
in
sbb
aad
in
inc
flds
mov
mov
cltd
cmc
xchg
lahf
shrb
jecxz
inc
jbe
mov
and
xor
lcall
or
lea
jo
xchg
sbb
mov
dec
jle
sub
sbb
icebp
cli
ljmp
sahf
fidivl
push
mov
mov
ret
dec
pushf
pop
push
pusha
repnz
rclb
or
xor
shr
cltd
lods
cmpsb
nop
stos
jne
hlt
add
cmc
mov
or
bts
rcrb
mov
mov
stos
sub
sub
xchg
sub
pop
fistps
fwait
sbb
scas
mov
jl
or
imul
pusha
repnz
rclb
mov
inc
fcomps
out
lret
add
lea
push
shl
jmp
push
loopne
jo
jno
mov
out
insb
scas
adc
decb
adc
loop
mov
rorl
cmpsb
mov
dec
gs
imul
cmp
sbb
mov
enter
ret
aam
push
push
fcoms
pop
push
inc
jnp
clc
xchg
pop
in
gs
dec
xchg
mov
daa
xchg
out
push
cmp
inc
lea
je
aad
movsl
out
push
pop
cmp
int3
dec
xorb
cmc
roll
daa
ret
add
std
mov
inc
mov
shlb
jecxz
inc
sbb
fnstsw
adc
and
lret
into
inc
or
out
and
dec
pop
dec
gs
jns
and
dec
adc
xchg
fmull
cmp
sub
xchg
and
xor
pop
jge
push
xchg
pop
ds
pop
movsb
mov
or
mov
add
mov
xor
movsb
aad
cmp
movb
lds
xor
mov
in
push
call
xor
pop
sbb
cvttps2pi
pop
lods
cmc
outsb
mov
stos
mov
xor
popa
pushf
scas
pop
jns
xor
push
mov
dec
jmp
cmp
push
jnp
out
pop
cmc
mov
push
data16
inc
dec
ss
mov
cmp
add
sarl
push
add
nop
or
sub
scas
rorl
addr16
pop
jmp
repz
in
jo
arpl
pop
push
daa
and
cld
cmp
scas
adc
cli
mov
lahf
lods
jmp
pop
ss
sbb
dec
aaa
pop
xchg
or
jmp
xor
movsl
jg
lock
insl
cli
sub
rcr
cmpsb
jmp
sub
add
sarb
dec
push
jge
mov
sbb
out
fsubl
mov
jnp
mov
in
add
call
xor
pop
inc
inc
push
add
cmp
rcrb
out
mov
andb
xor
adc
aam
mov
push
fsubrs
adc
mov
pop
mov
cmp
adc
cmp
popa
je
jnp
xor
adc
sub
jbe
dec
lea
clc
mov
cld
mov
out
push
or
gs
les
aas
int
add
jecxz
es
add
aad
mov
adc
gs
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
jmp
imul
sbb
xchg
fmull
push
arpl
adc
movlps
dec
cmp
sbb
push
fisubs
lds
jb
mov
test
and
push
mov
and
out
addr16
enter
shrb
imul
ljmp
inc
xorb
push
xor
sbb
sub
shlb
and
xadd
fst
cmp
push
adc
and
xor
inc
stos
js
push
push
fldenv
cmp
xor
out
mov
push
cld
dec
xchg
pop
sbb
lret
aaa
lret
dec
cmc
sub
cmp
mov
ja
loop
jl
push
sub
xchg
repz
ja
add
push
out
sub
add
xor
shll
pop
sar
sbb
xor
test
shrl
cmpsb
and
stc
mov
xor
push
jle
add
adcb
imul
adc
fbstp
jae
push
pop
aaa
loope
xchg
nop
mov
fisubrs
mov
push
ret
fiaddl
jmp
loop
jns
or
pusha
cld
call
dec
jns
pop
inc
cmpsl
sbb
inc
fisttpl
mov
dec
sub
inc
mov
jle
jbe
fnstcw
ja
mov
adc
stc
mov
je
push
mov
movsb
in
inc
jnp
and
mov
inc
addr16
cld
mov
inc
loop
das
fidivl
or
xlat
in
sahf
and
rep
inc
adc
push
push
out
mov
jno
inc
and
pushf
pop
xlat
into
mov
and
gs
int3
jae
pushf
pop
out
cmp
pop
dec
movsl
or
jl
dec
aad
adc
cld
rcll
mov
cmp
adc
mov
cmpsb
ret
push
inc
and
fdivrs
orl
xchg
or
xorb
cmp
xchg
fsub
jnp
rcrb
inc
pop
sbb
push
mov
mov
shl
out
in
shl
sbb
mov
cmp
iret
cmp
dec
js
in
orl
cltd
sub
mov
imul
bound
out
fisubrl
stos
rcrl
adc
jle
shlb
jp
mov
adc
add
cmp
or
cld
repz
es
into
in
cmp
mov
pop
or
mov
inc
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
jmp
lods
lods
scas
sbb
xchg
adc
jmp
adc
decb
adc
popa
fsub
dec
dec
adc
lret
dec
xor
push
addr16
dec
inc
js
icebp
mov
fildll
cmpsb
push
loopne
push
inc
aas
std
in
fiaddl
mov
repnz
cmc
jnp
push
xchg
daa
fwait
ljmp
dec
jb
lea
or
adc
cli
movsl
sub
hlt
cli
stc
xor
arpl
add
imul
inc
mov
sbb
dec
cld
cmp
and
cltd
icebp
testl
lock
addr16
aaa
cmp
jp
in
lods
sahf
outsb
ja
mov
mov
call
sub
aas
insl
in
xor
or
sti
addr16
adc
mov
in
das
int
or
cli
fiadds
cs
pop
jp
into
imul
imul
shlb
sub
lock
cmp
xchg
add
lock
and
jnp
aaa
inc
mov
scas
xchg
jge
dec
cmc
jo
popa
or
sub
rcl
cmc
sbb
push
mov
test
fimull
jb
in
jl
in
jbe
rolb
outsl
adc
pop
mov
inc
xor
leave
or
push
test
mov
and
dec
dec
call
lods
mov
imul
aam
cmpl
mov
mov
nop
fidivl
fwait
inc
xchg
jle
imul
movsb
outsb
or
scas
or
sbb
mov
mov
xchg
mov
lret
les
pushf
or
mov
xchg
jns
scas
nop
fildll
iret
push
pop
mov
fstl
sub
mov
jmp
sub
lcall
or
adc
and
lret
xor
mov
addl
rorl
loop
ret
dec
fistps
push
lret
add
sbb
pop
movsb
test
or
jnp
and
jl
mov
in
mov
aaa
add
pop
jns
test
xlat
xor
sub
pop
es
popf
std
or
dec
jmp
movsl
push
adc
xchg
sub
les
scas
lea
mov
jmp
jecxz
int3
in
or
xchg
mov
enter
stc
mov
bound
and
faddp
lret
jns
leave
je
mov
mov
movzbl
sub
mov
jmp
sbb
sbb
mov
mov
lods
pop
pop
adc
decb
adc
dec
in
xor
repz
sub
mov
add
rcrw
mov
add
cmc
faddp
test
lahf
lea
jne
jmp
sub
xchg
fisttps
aam
popf
inc
cli
add
mov
rcr
and
xor
xor
sub
cltd
js
inc
inc
in
sub
push
sub
loop
adc
scas
ds
pop
out
decl
xchg
xchg
lahf
xchg
xchg
ja
je
inc
sub
repz
xchg
dec
pop
inc
xchg
imul
add
adcb
arpl
pop
daa
insl
xchg
jbe
inc
inc
sub
pop
je
add
daa
sub
mov
mov
jns
loop,pt
lret
and
addb
outsl
add
sti
ja
call
mov
jle
cmp
shl
in
ljmp
scas
fldt
adc
int
int
js
add
movsb
leave
xchg
pop
pop
cmp
xor
push
jg
or
sub
add
xor
push
loopne
inc
inc
scas
push
pushf
cmp
lods
sbb
mov
cmpl
push
les
rolb
addr16
cmp
into
pop
movsl
inc
and
mov
add
push
andb
add
insl
jne
jae
lret
xchg
icebp
fs
jnp
and
push
movsb
ljmp
sbb
sbb
pop
mov
sub
loopne
xor
add
adc
aad
adc
inc
or
test
stos
jle
inc
out
mov
adc
les
pop
mov
pop
incb
shll
arpl
mov
js
sti
xor
xchg
mov
in
xor
movsl
or
push
dec
or
mov
push
insl
dec
mov
scas
call
xlat
add
mov
push
pop
mov
jl
xor
or
inc
jno
mov
pop
jle
push
cltd
xchg
dec
and
xchg
cmpsb
mov
lret
add
jns
cmp
jbe
sub
in
adc
xor
add
sub
xor
and
mov
cmp
and
pop
adc
insl
inc
sub
call
push
loop
or
inc
add
rorb
mov
mov
inc
cmp
jmp
icebp
bt
cmp
popf
jbe
js
push
adc
decb
adc
inc
arpl
loope
jl
cmp
or
es
movl
scas
andl
pop
repnz
push
pop
pusha
and
sbb
xchg
negl
mov
js
insb
dec
jl
insl
test
jo
testl
outsl
loope
and
jnp
jecxz
sbb
xor
xor
aas
andl
out
push
lret
and
jne
xor
stos
int
pop
jecxz
pop
mov
sbb
iret
and
repnz
pushf
or
leave
mov
adc
std
shll
fcom
add
dec
jmp
fisttps
cmp
xlat
push
push
jle
xor
or
jge
jo
sbb
in
jbe
aad
dec
fwait
jne
xchg
jge
xor
frstor
popf
cmp
out
les
fs
stos
add
jle
adc
mov
pop
mov
adc
dec
fmuls
push
cmp
cmp
int
adc
andl
int
in
sub
push
imul
mov
imul
sbbl
enter
jne
and
data16
fsub
int
out
bound
mov
pop
fldt
mov
bound
out
mov
repz
sbb
pop
inc
cmp
sbb
pop
mov
stos
mov
mov
push
lods
stos
jnp
jmp
cwtl
and
in
iret
leave
dec
in
xchg
dec
das
enter
xchg
cld
int
orb
outsl
push
push
and
jo
loope
jo
sub
pop
push
testb
jae
inc
xor
repnz
sbb
adc
gs
popa
push
in
mov
dec
inc
fwait
cld
divb
sub
daa
fs
or
jp
xchg
or
dec
sub
inc
mov
or
mov
jnp
sub
fdivrs
nop
nop
xchg
dec
out
pop
adc
fwait
imul
insl
jecxz
cmc
and
dec
mov
stos
out
cltd
push
and
ficompl
xor
mov
sbb
xchg
dec
shr
loope
inc
push
sub
test
in
dec
xchg
or
xlat
inc
imulb
lods
mov
and
jne
aas
clc
and
lret
stc
or
pop
and
or
imul
mov
ret
ds
adc
sbb
ljmp
or
aam
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
jmp
nop
sti
sti
fnstsw
jno
mov
jle,pn
xor
jle
dec
adc
decb
adc
and
out
mov
lds
scas
sbb
jnp
popf
jl
js
xor
lock
inc
mov
dec
cs
or
cmc
stos
dec
pushf
jbe
ret
mov
lods
fimull
das
mov
loopne
bound
lds
imul
inc
mov
push
aaa
ret
sub
loope
aam
xchg
sub
ficoms
ds
inc
xor
test
in
and
xor
cmp
scas
div
xchg
loop
fsin
inc
negl
in
push
or
mov
push
addb
pusha
rol
roll
lds
nop
int3
sbb
pop
jno
xchg
cs
push
out
stos
test
loope
bound
jg
push
mov
pop
stos
pop
loop
mov
add
xchg
mov
pop
jb
pop
jo
inc
rolb
mov
pop
sbb
rclb
pop
xchg
push
mov
test
xchg
and
sbb
mov
js
xchg
fldlg2
or
pop
aas
or
adcb
push
cmp
adc
aas
int3
add
mov
sbb
sbb
mov
cmp
dec
ljmp
lods
sub
jmp
pop
insl
test
adc
mov
filds
test
cltd
push
mov
out
jbe
push
xor
lods
adc
push
cli
cmpsl
sar
sarb
mov
and
push
ljmp
imul
push
ss
fimuls
jg
movsb
outsl
ret
cmc
cmp
inc
mov
fistl
sub
ja
xlat
gs
push
adc
movsl
ss
gs
lret
movsb
addl
lods
xchg
xchg
mov
sbb
xchg
rolb
dec
jns
mov
je
sbb
xor
sbb
mov
rcr
call
pop
push
nop
imul
cmp
inc
ret
and
cmp
les
cmp
sti
bound
cmp
mov
pop
std
scas
push
mov
test
in
movsl
enter
mov
mov
loope
lret
js
cltd
rol
cmc
in
mov
test
aaa
icebp
mov
inc
fsub
stc
dec
jge
ds
mov
and
popf
ret
loop
in
or
sbb
xchg
mov
cmp
subb
sub
les
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
jmp
ss
mov
lods
insl
xor
js
adc
mov
decb
adc
lock
ljmp
lods
adc
mov
jne
add
mov
cltd
sbb
outsb
mull
jmp
mov
and
jb
icebp
shlb
in
aaa
nop
aaa
mov
dec
mov
js
aas
inc
aad
xor
mov
or
js
xchg
addr16
sbbb
sahf
daa
out
arpl
test
pop
loopne
pop
mov
sub
jne
leave
je
pop
jp
pop
jl
in
push
inc
jnp
push
and
mov
pop
and
or
xchg
push
out
jecxz
cmp
movsl
mov
lea
pop
stc
xor
fldt
andb
jae
cmp
mov
inc
daa
xor
inc
lea
mov
add
sbb
xor
test
sub
cmp
push
jge
outsb
in
mov
inc
sbb
adc
sub
mov
out
sti
in
add
pop
lret
test
mov
add
sub
cmp
jecxz
adc
aas
jne
cmpsb
in
xor
rcrl
clc
neg
std
enter
adc
in
jmp
xchg
cli
in
push
cld
in
or
add
push
fwait
icebp
push
pop
adc
jbe
leave
ret
cmpsb
sub
in
ret
lods
jp
icebp
scas
or
lahf
xor
mov
pop
bound
cmpsb
jne
xchg
sbb
ficomps
or
into
scas
rorl
adc
movsl
xchg
sbb
int3
in
ja
sbb
movsb
xor
jge
mov
xchg
jle
fldl
mov
mov
fistl
enter
mov
adc
lea
mov
jle
mov
in
pop
test
and
pusha
xor
in
add
popf
dec
xchg
nop
and
pop
cmc
push
xchg
ret
xor
outsb
daa
pusha
xchg
dec
adc
sbb
sub
loopne
inc
ret
sti
xor
adc
dec
loopne
leave
push
mov
inc
add
and
cmp
shll
jg
shrb
pushf
popf
ljmp
mov
jp
and
popa
nop
sub
insl
dec
cmp
loope
xor
loope
pop
push
mov
fs
aam
jb
cli
sbb
jb
nop
out
push
sub
lds
test
push
mov
lods
xor
cmp
mov
imul
or
add
push
shl
call
jmp
cmp
addr16
pop
push
cmp
cmp
mov
repz
adc
decb
adc
add
push
cmp
sub
lock
sub
scas
push
mov
js
cmc
popf
lods
or
addr16
sub
lret
or
adc
pushw
add
lods
lcall
outsb
xor
push
movsb
arpl
mov
fsubl
int3
or
and
repnz
daa
nop
add
xchg
jl
dec
stc
add
add
aaa
sub
mov
xchg
and
loopne
adc
adc
lods
daa
xchg
sub
fcompl
dec
scas
adc
and
or
call
mov
and
inc
adc
dec
sbbl
daa
movsl
mov
pop
mov
rcll
or
stc
hlt
pop
sti
insb
dec
rolb
shr
xchg
ljmp
sbb
mov
loope
jle
mov
out
jns
inc
jno
fsubr
or
es
or
je
inc
xchg
aas
movsb
or
push
leave
sahf
pop
dec
in
mov
pop
add
fsubl
int3
cli
out
out
mov
pushf
stos
xchg
outsb
add
pop
insb
push
dec
popa
leave
jl
not
xor
mov
jnp
sbb
pop
cmp
push
stos
cmpsb
hlt
push
and
out
xchg
test
xor
xor
pop
jbe
and
mov
lret
xchg
test
mov
jne
jmp
and
mov
sbb
or
xor
popf
and
sti
mov
xchg
mov
or
push
pop
out
jb
lea
mov
xor
mov
scas
lods
cltd
cmpsb
sub
dec
adc
xor
dec
sbb
aaa
outsl
mov
cli
stos
or
sub
add
addr16
xor
cmp
dec
divb
je
orb
popa
inc
or
es
pop
xchg
inc
fs
push
mov
and
out
cmpsl
es
pop
mov
inc
push
imul
jno
sar
cli
push
jo
ja
call
imul
es
mov
in
bound
add
xchg
mov
je
jae
cmp
insb
fisttps
mov
in
rcll
mov
lcall
inc
adc
cld
mov
mov
in
out
hlt
outsb
adc
jb
mov
xor
mov
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
jmp
imul
leave
sub
xlat
xor
fnstsw
adc
decb
adc
fisubl
xor
cmp
in
inc
ljmp
push
cld
fsubp
insb
imul
int
loopne
loopne
sbb
data16
jmp
add
shrb
dec
sbb
cld
lahf
push
jecxz
xchg
jge
out
int3
sub
scas
popf
jmp
xchg
movsl
jecxz
mov
push
loope
ljmp
inc
push
testl
adcl
push
ljmp
and
jmp
cmp
cmp
adc
rolb
outsb
pop
xchg
xor
test
int3
popa
add
lods
and
push
mov
adc
fs
push
xorl
xor
loopne
adc
sahf
sarb
and
inc
out
xchg
ljmp
mov
mov
incb
adc
lds
test
hlt
fdivrl
inc
or
pop
js
cltd
push
in
shrb
mov
lds
mov
ret
ret
mov
ror
call
addr16
je
lcall
nop
cmpsb
jno
jecxz
push
add
mov
sub
jmp
cmp
push
jmp
sahf
rorb
xor
and
and
cltd
dec
or
stos
jb
aas
out
cwtl
inc
xor
dec
scas
add
pop
pop
daa
clc
stos
flds
stc
push
sldt
outsb
repnz
cmc
loop
out
repz
sbb
inc
fmull
push
sbb
mov
data16
pop
push
lds
cmpsb
and
add
cmc
jge
rorl
jbe
and
adc
mulb
test
sub
mov
jge
inc
imul
mov
cwtl
into
cwtl
jo
jle
and
call
xchg
fstps
push
xchg
out
sbb
cmp
jl
cld
mov
ret
sub
ja
inc
sbb
movsl
sub
ss
loop
jnp
or
iret
dec
xlat
cltd
cmc
or
push
movsb
mov
xchg
inc
mov
or
push
aam
push
mov
mov
xchg
int
ds
mov
sti
rclb
sub
mov
in
aad
pop
mov
push
aas
jae
cmp
test
push
scas
stc
push
ds
inc
jg
sbb
nop
add
ja
jno
push
push
adc
addl
ret
xchg
adc
insb
popf
lcall
adc
mov
inc
mov
or
mov
mov
jne
mov
incl
mul
ret
push
mul
mov
cmpl
movl
movl
jmp
not
ja
push
push
pushl
call
subl
adcl
adcl
xorl
xor
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
jmp
jmp
mov
dec
addl
lahf
cmpsb
jle,pt
cmp
adc
sub
out
ds
fcmovnbe
iret
inc
call
jmp
add
or
sahf
sub
loope
jmp
pop
push
xchg
popf
fstl
sbb
xor
jl
cwtl
push
addl
push
icebp
push
fsubl
push
xchg
adc
jb
jnp
mov
adc
adc
cmpsl
sbb
adc
sub
movsb
and
mov
pop
adc
repz
xchg
inc
sub
gs
lahf
xor
aam
out
dec
push
js
adc
scas
sub
std
xor
sbb
stos
mov
out
adc
mov
out
addr16
dec
inc
loop
mov
iret
inc
mov
xor
scas
loope
loop
test
ret
arpl
mov
cmp
cmp
jb
adcl
push
mov
icebp
mov
movsb
popf
sub
sub
stos
and
mov
aam
jg
mull
add
push
ljmp
fwait
xor
cmp
les
out
jle
dec
jp
iret
imul
lods
mov
or
sbb
jnp
mov
cmp
adc
je
cmp
lahf
jmp
xchg
mov
jmp
out
pop
xor
addb
clc
nop
push
in
mov
js
xor
mov
shlb
cmp
xchg
mov
pop
jne
imul
das
sub
mov
sti
neg
das
cmp
sub
xorb
pop
inc
cmpsb
inc
mov
push
jmp
xchg
pop
sub
xor
and
out
mov
stos
pop
cmp
fwait
xor
sarb
popa
push
sub
imull
and
sarl
xchg
bound
sbb
pusha
dec
gs
std
xchg
sub
cwtl
push
imul
sub
int3
ljmp
mov
adc
leave
sbbl
repnz
rcl
cmp
add
and
ret
sub
fists
mov
dec
mov
cltd
jge
cld
dec
dec
out
jmp
into
adc
mov
ret
iret
jns
dec
bound
or
inc
pop
loop
scas
and
cmpsl
mov
bound
stos
movsl
or
mov
xchg
lods
mov
push
pusha
mov
rclb
mov
mov
das
fs
lods
mov
jg
cmp
arpl
sub
add
pushf
bound
push
aas
pushf
cmp
mov
sub
dec
psubusb
inc
cmp
div
mov
xor
mov
jmp
xchg
add
and
xchg
and
sub
inc
pop
mov
popf
movlps
pop
pushf
cmp
int3
mov
inc
sbb
adcb
aas
pop
cli
dec
sarb
mov
xchg
loope
rorb
rcl
mov
pop
inc
mov
aad
fstps
or
or
adc
ret
sub
insl
sti
jmp
pop
aas
push
jmp
leave
and
pop
jo
mov
and
iret
mov
pop
pop
js
call
mov
test
rorb
popf
movsl
fmuls
movsb
test
insl
pop
clc
mov
outsl
insb
sub
sbb
dec
xchg
pop
jmp
mov
mov
push
xchg
lods
mov
push
sub
dec
and
xlat
xchg
es
jmp
pop
adc
mov
cmpsl
or
sub
lods
mov
shlb
jns
mov
std
xor
les
fwait
and
xor
mov
inc
dec
adc
js
jo
and
mov
pop
js
dec
dec
int
xor
cmpsb
mov
cmpb
mov
cld
push
add
inc
cmp
inc
mov
leave
mov
push
rorl
mov
lret
pop
jae
daa
xor
xor
mov
cli
add
lods
test
pop
outsl
push
in
jg
fidivrs
sub
cmp
jae,pt
leave
sub
add
sub
int
sub
push
subl
push
mov
fistl
cltd
ficomps
or
inc
push
insl
adc
sbb
push
fadds
pop
add
incb
into
imul
lds
mov
in
jns
dec
sbb
push
push
dec
repnz
fsubrl
ret
sbb
sub
pop
mov
ljmp
cli
sbb
xor
and
mov
or
fisubs
or
repnz
outsb
mov
jns
xor
dec
mov
jbe
jae
in
pop
or
sub
sub
fidivrs
cmpsl
pusha
pop
dec
in
sbb
aam
stos
dec
cmp
arpl
mov
pusha
outsl
xchg
shrl
mov
addb
and
call
add
ror
ss
dec
mov
sub
lds
pop
mov
adc
repnz
cmp
inc
outsb
cmc
ret
mov
pop
test
loope
pop
cltd
jbe
cmpsl
cmpsl
jo
mov
hlt
out
aaa
ss
adc
pop
add
push
push
pop
sub
js
aad
inc
and
out
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
jmp
pop
mov
pusha
cltd
pop
sbb
loop
inc
stos
lret
das
adc
popf
movlps
das
lock
sbb
and
out
in
push
mov
je
push
jae
call
fnsave
in
push
mov
xor
aaa
rorb
sub
lcall
xor
loope
adc
scas
fcomip
imul
jle
rcll
xchg
dec
arpl
push
sub
fwait
lahf
aas
nop
test
fildll
cwtl
repnz
jmp
ljmp
xchg
dec
loop
xchg
cli
jnp
fbld
add
jmp
pusha
test
je
and
push
pop
fiadds
pop
lahf
xchg
sbb
repz
jg
cmc
dec
sbb
icebp
shll
rcrl
sub
cmpsl
enter
ror
cld
xchg
pusha
mov
out
incb
vhaddpd
lods
xchg
das
loop
jns
clc
mov
ss
dec
mov
cmp
fcoms
sbb
movsb
cmp
aad
in
push
dec
pop
es
xchg
scas
cmpsl
lods
mov
add
int
adc
pop
gs
pop
pushf
cli
push
jp
mov
xchg
pop
push
test
out
jle
or
adc
sub
pop
pop
mov
pushf
mov
ret
pop
mov
pop
fnstenv
mov
arpl
and
in
nopl
aas
and
inc
enter
sahf
adc
adc
mov
jnp
mov
xor
in
call
fsts
imul
or
in
repz
icebp
shlb
iret
ljmp
imul
jns
pop
dec
das
dec
mov
test
lea
jg
jle
das
jbe
sub
sbb
jmp
out
repnz
lret
pushf
in
in
cmp
rcrl
mov
mov
test
push
js
faddl
add
inc
aas
inc
cmp
pushf
loopne
out
cmp
dec
add
mov
add
adc
rcrb
sub
js
mov
mov
xlat
cs
xlat
insl
cmp
ficompl
mov
shlb
stos
xor
cltd
add
aas
push
xchg
in
fistpl
hlt
out
dec
sbb
mov
fstpt
mov
mov
add
cmpsb
out
mov
mov
xor
ret
sbb
pop
jl
cvtps2pd
mov
mov
push
test
jge
cmpsb
cltd
rcrl
sahf
adc
push
sub
sahf
jae
out
clc
pop
xor
aaa
cwtl
hlt
mov
xor
mov
xor
mov
sub
mov
add
mov
jmp
jo
sbb
lcall
sub
adc
or
call
dec
mov
jno
pop
xchg
pop
sbbb
pop
cwtl
ficomps
mov
pusha
scas
sbb
lds
adc
xor
incb
mov
cwtl
lods
cltd
ret
push
clc
sahf
sbb
xor
adc
rorb
xchg
scas
lods
mov
pop
sbb
dec
nop
cmp
mov
into
aam
mov
dec
jbe
mov
jo
dec
sub
out
or
pop
addr16
out
pop
fwait
and
cmp
add
or
movsb
adc
push
and
pushf
sbb
imul
jnp
fsubrp
add
sub
lcall
jae
into
add
fisubs
cmc
sarl
cmp
daa
call
xor
or
lcall
jmp
mov
mov
adc
mov
setp
das
faddp
pop
sub
out
sub
mov
sub
orl
push
pop
dec
lods
scas
dec
inc
mov
add
popa
or
pop
call
jecxz
adc
xchg
jo
enter
fsubrs
cmp
mov
sbb
pop
mov
or
leave
inc
fucomip
cwtl
in
jmp
xchg
jne
mov
fisubs
pop
inc
mov
or
jnp
subl
fistl
mov
jbe
in
sti
push
mov
mov
inc
cmp
xchg
mov
out
cmp
imulb
xchg
cmp
adc
in
xchg
sub
mov
cld
mov
loop
in
movsl
add
addr16
repz
int3
in
adcl
sbb
fsubp
mov
pop
les
cmc
inc
or
sbb
push
cli
pop
mov
testl
dec
cmp
clc
mov
inc
loope
xchg
jne
lahf
test
push
or
jp
das
add
sarb
lcall
lea
ja
hlt
test
int
cmp
cmpl
pop
repz
adc
fistpl
cmc
mov
hlt
pop
lcall
aad
push
sub
jbe
push
stos
jecxz
mov
movsl
in
sub
sbb
jnp
mov
xchg
ror
pop
mov
add
stc
adc
fdivrl
and
jno
push
mov
adc
xchg
add
mov
push
repz
clc
xor
into
mov
jo
sbb
aas
push
int
add
ss
mov
pop
mov
and
add
ret
hlt
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
jmp
fiadds
ljmp
or
fsubs
adc
iret
movlps
pop
jmp
jmp
ss
push
sbb
jmp
clc
arpl
or
ljmp
xchg
test
or
pusha
or
or
repnz
pop
aad
add
pop
pushf
mov
movsl
push
movsb
jg
lds
cmpsb
push
add
mov
lahf
sbb
push
jo
xor
pop
lods
mov
cmpsl
lods
call
push
outsb
adc
rolb
xor
std
iret
sarl
icebp
pusha
lds
leave
push
cmp
mov
cld
adc
push
add
cmp
or
mulps
in
pop
ds
sahf
mov
mov
movsb
lds
cmp
cmpsl
fnstsw
sub
inc
push
jmp
xor
mov
or
ljmp
pop
pop
dec
push
fildll
into
movsb
clc
mov
in
push
or
fldcw
sbb
or
pop
out
cltd
aas
lods
xchg
aam
out
sub
inc
jnp
mov
xchg
sbb
jnp
inc
xchg
mov
std
xchg
scas
and
or
repz
std
jmp
dec
cmp
lds
in
insl
sub
cmpl
call
jle
movsb
movsb
xchg
std
fdivs
arpl
cmp
xchg
push
cmp
mov
mov
mov
push
dec
add
jg
pop
cmp
stos
inc
subl
xchg
mov
pop
out
arpl
out
push
fs
and
xor
add
lods
lret
xchg
adc
arpl
push
movsl
push
outsb
sbb
sub
arpl
mov
imul
dec
sbb
mov
hlt
xchg
xchg
sahf
movsl
dec
xor
mov
setp
dec
fdivrl
test
or
dec
mov
inc
das
mov
adc
inc
into
lret
stos
push
out
jbe
mov
cmpsb
clc
mov
add
cmpsl
jne
mov
inc
test
xor
loopne
xor
push
cltd
scas
dec
nop
mov
inc
xchg
rol
and
lahf
movsl
inc
js
sti
mov
push
fildll
jnp
fdivrp
loopne
push
xor
cli
ja
xchg
repz
aas
jge
inc
mov
in
iret
gs
int
mov
adc
rolb
push
rcl
or
out
jns
ja
push
push
call
mov
movzbl
push
call
test
jne
decl
xor
jmp
mov
mov
incl
mov
cmpl
mov
movl
jmp
mov
mov
jae
call
sbb
adc
xor
movl
orl
add
push
add
pop
mov
sbb
mov
mov
andl
mov
addl
mov
adcl
movzwl
or
cltd
sbbl
movzwl
sbbl
idiv
sub
movzwl
or
or
mov
neg
mov
xor
xor
mov
adc
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
pushl
push
pushl
pushl
pushl
call
xorl
sbb
mov
xor
mov
orl
and
addl
sub
mov
sbbl
jmp
arpl
ja
arpl
mov
mov
iret
movlps
pmulhuw
das
test
ss
inc
in
adc
std
cmp
rorl
push
pusha
adc
andl
sbb
add
or
mov
std
mov
dec
jmp
addr16
push
fisttpl
cwtl
push
faddl
xchg
je
nop
sbb
lea
je
jecxz
jbe
insb
test
dec
neg
inc
arpl
scas
test
jecxz
lea
popa
icebp
add
scas
cmp
cs
stc
jmp
icebp
mov
dec
pop
sub
jp
cwtl
pushf
test
and
jo
int
fs
arpl
mov
sbb
cmp
jne
or
adc
xlat
sbb
repz
dec
test
xchg
sbb
sahf
lcall
mov
push
outsl
imul
and
lods
jg
addr16
push
mov
dec
xor
andl
pop
lods
jp
scas
adcb
dec
cmpsl
pop
stos
fcoms
jb
jecxz
sub
jge
mov
icebp
pop
add
in
add
push
dec
or
out
mov
adc
mov
mov
inc
adc
jp
push
or
inc
mov
pop
push
out
mov
aam
imul
fidivrs
into
mov
mov
mov
cmp
daa
mov
ret
fidivrl
cli
mov
aas
mov
daa
arpl
cmp
xchg
mov
add
ret
or
js
in
inc
dec
push
mov
dec
rorb
dec
xor
xorl
jle
jno
xchg
mov
mov
in
mov
sub
mov
daa
mov
xor
mov
push
jbe
imul
dec
cld
pop
movsl
lock
push
mov
pop
into
stos
popf
cmp
pop
or
pop
iret
cmc
jge
es
jge
ss
repz
aam
pop
sub
imul
jmp
adcl
mov
dec
inc
xor
ficoms
adcb
push
xchg
mov
mov
aad
movb
testl
clc
cwtl
and
pop
inc
arpl
push
sbb
cmpsl
insb
xchg
pop
cmpsb
jge
call
das
adc
and
cmp
cmp
cs
or
fidivs
enter
imul
hlt
es
imul
adc
mov
inc
or
lods
mov
and
mov
and
mov
adcl
sub
mov
xor
mov
sub
movl
mov
cmp
movl
jb
cmpl
mov
mov
jmp
movzwl
jb
push
call
mov
sub
mov
xor
mov
orl
xor
or
sbb
add
subl
add
movl
movzwl
sbb
movl
movl
andl
movl
mov
mov
sbb
mov
andl
xor
mov
adc
add
mov
mov
xor
mov
subl
xor
subl
div
or
mov
andl
add
adcl
and
pushl
orl
pushl
sbbl
call
movl
not
movl
movl
sub
mov
and
mov
subl
and
or
mov
xorl
and
xor
pushl
adcl
pushl
call
sub
pushl
movl
movl
cmpl
movl
mov
jmp
movl
movl
jge
pushl
push
call
movzbl
or
xorl
andl
negl
sbb
mov
mov
add
dec
sub
or
movl
xor
movl
movl
cmpl
mov
movl
jmp
movl
jbe
pushl
push
push
call
xor
neg
add
adc
sbb
and
adcl
cmpl
mov
mov
mov
jmp
mov
mov
jg
pushl
call
orl
xor
adc
xor
andl
sbb
movl
movl
xor
movl
mov
and
mov
sub
movl
mov
orl
or
and
mov
sub
cmpl
mov
movl
movl
jmp
movl
movl
jge
push
push
pushl
call
decl
xor
xor
add
not
pushl
mov
xor
mov
addl
add
and
xor
mov
sub
sbb
mov
xor
subl
and
andl
pushl
xor
mov
sbb
mov
andl
imul
xorl
xor
subl
or
movl
mov
subl
sub
addl
pushl
andl
call
dec
jne
or
movl
xor
add
adc
mov
movl
mov
andl
movl
mov
call
lea
xorl
mov
cmpl
movl
mov
mov
jmp
movl
movl
jg
push
push
push
call
or
sub
addl
or
xor
xorl
lea
adc
mov
sbbl
mov
orl
mov
mov
mov
cmpl
movl
not
mov
jmp
movl
notl
jne
pushl
push
push
pushl
call
sbb
sub
neg
or
or
adc
xor
cmpl
mov
movl
mov
jmp
mov
jle
push
push
call
or
movzbl
and
mov
sub
subl
orl
xor
jmp
pop
mov
xor
mov
and
stos
push
sbb
adc
nop
sub
jl
mov
leave
jb
fisubrl
mov
int
pop
cld
sbb
shl
dec
add
rclb
idiv
jmp
dec
sbb
movsb
push
adc
dec
les
jge
outsl
mov
lods
gs
mov
movsb
push
fdivl
stos
mov
out
xorl
std
mov
adc
je
jle
repz
push
xor
fists
lcall
in
mov
mov
and
xor
sbb
js
jecxz
jle
jecxz
sub
mov
add
enter
add
adc
jo
cmc
loop
mov
lahf
fsubs
mov
jl
cmp
fmul
xor
repnz
dec
sbbb
pop
inc
pop
test
jl
mov
pop
xchg
clc
dec
aaa
stos
cwtl
ror
cmp
cmc
and
lds
inc
cwtl
pop
mov
push
fs
notl
add
inc
pop
dec
aam
loope
dec
inc
mov
xchg
movsb
sub
dec
jne
xchg
sub
or
ret
mov
cmpsl
push
loop
aaa
mov
cli
std
pop
jae
mov
cmp
jne
mov
popa
daa
dec
loope
js
inc
popa
mov
dec
test
inc
jmp
loope
or
add
das
cmp
mov
pop
mov
fs
inc
cmc
data16
ret
lds
stc
std
xchg
jl
mov
sub
cmp
scas
sar
pop
jg
mov
hlt
sub
xchg
xchg
sbb
inc
inc
mov
add
cmp
rolb
test
fwait
loopne
test
nop
lret
and
and
cwtl
iret
xchg
jp
jo
mov
lret
push
mov
xchg
or
mov
or
and
dec
out
sub
jge
nop
fwait
mov
lds
pop
in
aad
mov
mov
inc
ret
or
lock
sub
fsubrl
sub
rorl
xchg
jae
mov
adcb
jnp
lret
fsubrl
into
add
popa
sahf
stos
movsl
popa
shlb
or
aad
daa
call
inc
jnp
push
add
nop
jl
xlat
jbe
bound
sbb
inc
or
mov
push
lods
pop
aaa
das
ds
imul
dec
inc
push
es
mov
or
gs
loop
pop
in
rorl
stc
pop
inc
daa
push
ret
sbb
dec
nop
mov
lret
pop
pop
jns
cwtl
push
xor
inc
shl
shr
or
incl
mov
cmpl
movl
movl
mov
movl
jmp
mov
movzbl
jbe
push
call
movzbl
sbb
andl
xorl
and
subl
sbb
mov
adc
mov
inc
mov
mov
mov
mov
mov
shrd
cmpl
mov
movl
mov
not
jmp
mov
jb
push
push
push
push
call
mov
and
mov
add
and
add
xor
sbb
shr
mov
inc
mov
cmpl
movl
mov
movl
jmp
movl
jbe
pushl
pushl
call
andl
sbb
or
xor
xor
negl
mov
andl
xor
addl
xor
sbbl
or
xor
xor
add
mov
andl
push
addl
pushl
lea
push
subl
shl
call
xorl
lea
push
mov
mov
lea
xorl
push
addl
mov
lea
andl
mov
mov
andl
mov
push
adcl
call
sbbl
push
push
pushl
call
add
mov
mov
sbb
mov
addl
mov
mov
xor
add
sub
or
mov
or
shr
cmpl
mov
notl
not
jmp
movl
jg
pushl
push
call
sbb
inc
or
sub
add
sub
dec
neg
adc
shl
cmpl
notl
mov
movl
jmp
movl
jb
push
push
call
adc
adcl
xor
and
add
adcl
or
subl
mov
xor
xor
mov
dec
lea
cmpl
movl
mov
movzwl
jmp
movl
notl
jbe
push
pushl
call
adcl
and
add
movzbl
or
movzbl
xor
mov
mov
xor
lea
cmpl
mov
movl
jmp
movzwl
movl
jg
push
pushl
push
pushl
push
pushl
pushl
call
and
sub
sbbl
mov
sbb
mov
add
neg
mov
movzwl
and
mov
sub
lea
cmpl
mov
mov
mov
jmp
movl
jbe
push
push
push
pushl
call
xor
add
xor
andl
xor
add
or
movzbl
sub
sbb
xor
mov
sbb
movl
movl
movl
jmp
out
rclb
bound
cwtl
push
insb
mov
adc
adc
addb
or
cltd
stos
dec
cmp
and
inc
fwait
push
inc
jae
testb
call
pop
pop
or
lock
push
dec
cmovg
or
mov
sub
daa
sti
xor
inc
imul
cltd
sub
dec
pop
aad
ret
nop
in
mov
xor
lds
sbb
push
xchg
pop
mov
in
inc
and
push
jmp
mov
in
outsl
jnp
cmp
test
outsb
or
mov
rclb
call
sbb
adc
mov
lods
pop
adc
add
outsl
hlt
mov
push
push
es
and
jne
jge
mov
push
ret
push
lcall
or
sub
mov
cmc
mov
or
ss
mov
push
push
jne
jp
inc
lret
dec
xor
adc
ljmp
xchg
jb
bound
add
shr
int3
lods
cs
ja
je
push
jo
leave
xor
jae
loop
dec
test
shlb
mov
xchg
movsb
stos
cltd
test
inc
or
mov
cmp
cmpsb
mov
dec
inc
push
jns
pop
imul
popa
fwait
jp
popa
cld
fildll
sysenter
xchg
adc
xchg
mov
call
mov
btc
loopne
lods
cmpsl
lret
mov
xchg
mov
rorl
jle
inc
aad
sub
lock
pop
and
adc
idivb
inc
stos
and
jg
xor
sub
and
lds
into
inc
lods
aad
and
dec
test
push
sub
cwtl
shrb
mov
mov
test
jmp
js
mov
mull
pop
push
mov
sbbb
test
jl
push
or
out
mov
mov
xor
push
inc
sub
lods
cmp
mov
inc
jecxz
and
xor
fisubrl
dec
and
lods
shl
loop
pop
js
xchg
fisttpl
ss
push
aaa
andb
unpckhps
lods
pop
or
lea
daa
xor
jmp
push
arpl
int
mov
scas
lods
lcall
xchg
outsb
clc
push
sbb
aaa
jb
cltd
lret
ljmp
push
js
pusha
aas
add
daa
test
inc
and
imul
adc
push
and
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
jmp
mov
adc
jg
mov
shl
idivl
lock
iret
movlps
pop
imul
cwtl
xor
push
xchg
add
jo
imul
xchg
mov
dec
setbe
ror
repnz
add
iret
sub
dec
ret
ja
andl
cmpsb
inc
push
loopne
xchg
xchg
fwait
mov
cwtl
sbb
sbb
test
push
jnp
mov
push
fsubrs
stos
mov
mov
iret
and
jae
dec
loope
mov
ffreep
fists
xorb
pop
jbe
push
or
rorb
jp
dec
cmpsl
leave
xchg
lret
je
pop
cmpsb
push
lock
add
cmp
cwtl
and
xchg
adc
cmp
jno
aas
in
ss
cmc
std
popf
dec
sub
outsl
xorl
jmp
fld
dec
push
sbb
jge
pop
push
cmp
cmpsb
inc
adc
jg
fcomi
gs
bound
lods
cs
sub
outsb
mov
sahf
push
insb
stos
add
pop
fidivrs
or
inc
jns
cmp
lods
xchg
imull
adcl
fdivrl
addb
arpl
pop
loop
inc
dec
test
fucomi
cmp
hlt
mov
aad
xchg
jmp
and
xor
xlat
adc
and
out
clc
mov
loope
sub
adc
test
push
pop
pushf
sub
pop
int3
sti
sub
fs
xchg
test
out
xchg
dec
jns
lahf
mov
pop
out
mov
lods
je
rorl
jmp
adc
scas
pop
xchg
mov
mov
out
jae
adc
mov
xchg
inc
aaa
pop
ret
xchg
add
lret
add
daa
test
mov
mov
sti
int3
mov
cmpsb
insl
jb
mov
ret
hlt
pop
stos
ljmp
adc
dec
mov
mov
sub
pop
das
cli
cmpsl
test
cmp
adc
outsb
mov
and
std
loopne
and
fabs
ljmp
shrb
insl
daa
dec
and
pop
mov
stc
es
mov
dec
mov
fimull
insb
fwait
or
sub
enter
sbb
fdivr
or
jo
xchg
mov
mov
add
fidivrl
leave
inc
inc
pop
jl
push
pop
mov
xor
into
sar
jecxz
sub
ret
sub
or
or
jmp
dec
pop
imul
enter
rep
test
adc
mov
or
subb
out
jle
jmp
and
lds
ljmp
fldpi
xor
adc
push
push
testb
int3
xchg
mov
ja
arpl
call
ret
int
pushf
mov
mov
test
shr
test
mov
xchg
push
mov
jb,pn
sarl
insl
adc
mov
ficompl
mov
xchg
push
scas
pop
iret
sub
add
xorl
dec
and
out
dec
add
add
adc
sub
mov
enter
or
mov
movsb
mov
jp
adc
adc
add
or
les
addr16
xor
mov
sti
rcrl
jl
jl
jg
cmp
fsubrl
xchg
adc
mov
in
mov
aam
test
add
popa
into
movnti
jns
sbb
xchg
pop
adc
cmp
fwait
into
sub
loope
jb
jo
mov
sub
sub
andb
inc
xor
push
inc
adc
inc
push
or
inc
push
fwait
js
add
inc
aad
inc
sbb
in
push
mov
or
mov
pop
fcoml
add
outsl
pop
add
fisubs
sub
movsl
xchg
into
in
xchg
mov
out
add
movsb
jae
adc
or
pop
sbb
mov
nop
push
push
push
sti
xor
addl
xor
push
popl
scas
popf
jmp
loop
cmpl
mov
pop
mov
inc
sbb
test
popa
jg
andb
push
jne
xchg
sarb
inc
mov
outsb
cli
xchg
push
filds
sub
xchg
out
stc
shll
jae
inc
int3
mov
lahf
cli
xor
push
push
iret
lret
pusha
pop
cltd
nop
sbb
jne
mov
xchg
pop
or
in
jge
stos
push
adc
out
xor
and
mov
lahf
push
jl
dec
hlt
lock
js
nop
pusha
ljmp
push
sbb
ja
and
neg
imul
jl
cltd
adc
sbb
enter
xlat
in
repz
pusha
push
sbb
bound
push
scas
xchg
lcall
add
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
jmp
jp
jg
aaa
lret
int
xor
aas
or
adc
cwtl
fcoml
pop
ret
cld
inc
ret
jo
aad
rcrl
jne
or
pop
jb
jb
mov
fcoml
push
pop
iret
jg
ds
adc
jb
jmp
adc
mov
add
dec
push
out
test
cmp
mov
xchg
fs
or
push
xchg
mov
dec
add
mov
loop
push
add
push
sbb
push
fwait
pusha
aas
cli
cltd
cli
lret
insl
pop
mov
div
pop
jp
mov
pop
sbb
push
sti
cmpsb
nop
mov
insl
mov
sarl
fsubl
lret
mov
iret
or
sbb
aad
jge
mov
roll
jl
or
pop
daa
out
rcrb
int
mov
fisttps
cli
mov
push
sub
nop
sub
insb
jg
push
add
pop
mov
mov
imull
jg
cmp
ret
adc
mov
into
lea
lret
push
lcall
mov
jecxz
add
imul
les
mov
add
std
ja
mov
mov
hlt
shrb
xchg
test
es
adc
xor
xor
insl
push
xor
pop
jae
xor
dec
adc
popa
mov
lds
add
lock
or
adc
in
push
jne
add
mov
test
mov
xchg
push
xor
outsl
in
cmp
adc
xchg
mov
or
lea
mov
or
movl
lret
pop
outsl
cmp
in
mov
sbb
sub
cmp
and
adc
mov
lods
fcmovb
xor
movsl
mov
pop
mov
or
or
mov
jmp
inc
sbb
push
jg
out
cmpsl
sub
std
inc
mov
cltd
xor
test
xor
cmp
hlt
cwtl
out
jp
push
shrb
stc
push
and
adc
iret
cmpsl
inc
lea
mov
stos
jecxz
and
loope
jp
dec
jne
stc
dec
repnz
pop
xchg
in
cmp
pop
sbb
in
out
gs
das
iret
mov
cltd
ja
les
std
mov
pop
pop
mov
in
testl
dec
xchg
imul
les
popf
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
jmp
aaa
jae
jnp
jns
das
jmp
outsl
adc
call
adc
addr16
push
aam
mov
ljmp
pop
xchg
out
jp
mov
sub
push
xchg
pop
arpl
imul
mov
push
cmp
jnp
dec
pop
inc
mov
sbb
frstor
js
mov
push
xchg
mov
mov
xchg
xor
xlat
shl
andb
cmp
leave
add
adc
mov
fcomps
push
mov
add
add
jecxz
dec
iret
and
xlat
shrb
lret
or
jns
cld
mov
scas
ds
in
idiv
inc
mov
js
pop
push
js
sbb
and
in
ret
pop
test
fstpt
pop
mov
inc
mov
sarb
sbb
mov
push
icebp
in
bound
xor
mov
sbb
sub
test
stos
leave
ficoml
push
notb
out
test
movsl
insb
mov
push
fs
insb
std
mov
insb
mov
fcompl
ret
sub
or
jg
inc
sbb
pop
push
inc
inc
es
icebp
mov
popf
imul
cli
or
shlb
ficoml
popf
and
movsb
ds
add
std
and
dec
jp
sbb
cli
mov
cmp
out
stc
fcomps
lods
cmpsb
test
add
adcb
fcmovb
and
inc
cmp
inc
mov
cmc
pop
lods
mov
sarl
mov
and
mov
xor
mov
lds
mov
sub
lock
jno
mov
sti
or
xchg
mov
cltd
icebp
cmpsb
or
sbb
inc
lods
jg
nop
jg
push
stos
pop
js
insl
fldl
pop
ret
lahf
adc
jbe
jle
test
and
push
adc
pmuludq
stos
mov
adc
sub
leave
sahf
push
xchg
and
hlt
pop
mov
mov
pop
inc
jmp
dec
dec
jmp
pusha
pop
inc
xchg
roll
or
bound
xor
pop
pushf
and
aas
aas
jmp
add
xchg
and
cmp
ds
inc
popf
pop
dec
leave
push
xor
or
add
cs
lock
mov
outsb
sbb
lahf
sub
push
push
call
mov
mov
add
mov
adc
jmp
and
das
sbb
sbb
or
mov
movlps
mov
jae
lods
sub
aam
jnp
scas
ljmp
pop
iret
xor
pusha
hlt
dec
in
hlt
insb
and
repnz
cld
sub
dec
adc
pusha
jb
rcrl
mov
mov
lock
pop
and
dec
cwtl
popf
jg
paddsb
cmp
push
push
dec
jbe
loopne
mov
push
loope
mov
lcall
insb
sbb
cmc
js
jne
dec
loope
repz
sub
xor
mov
es
pushf
aam
xchg
adc
cwtl
pop
mov
and
dec
or
scas
lret
outsb
ret
ret
adc
sbb
mul
outsl
cmp
push
adc
cmp
pusha
outsb
mov
xchg
shrb
dec
lret
addb
and
adc
scas
test
fdivrl
mov
jo
mov
in
lret
mov
roll
push
add
lods
dec
test
push
sbb
or
sbb
adc
or
or
sbb
or
roll
push
fdivrl
mov
divb
dec
cmp
ror
mov
or
pop
mov
data16
xchg
lea
jae
cmp
out
out
mov
cmp
push
adc
and
test
inc
iret
or
xor
popf
add
mov
inc
shl
mov
xchg
lods
adc
lea
or
call
aas
andl
inc
jl
jnp
jecxz
adc
add
dec
aaa
incb
pop
mov
rcll
clc
imul
jecxz
inc
mov
dec
jo
xchg
movsb
jbe
out
test
gs
rolb
pop
mov
pop
fwait
nop
fwait
push
push
sbb
or
shll
dec
mov
inc
push
xchg
push
in
push
cli
inc
push
mov
lods
jno
shll
in
and
inc
or
xchg
sysret
mov
adc
cld
sti
jmp
push
mov
push
movsb
pop
lods
sbb
enter
ss
pusha
test
fxch
sbb
sub
adc
adc
add
popf
ret
mov
lock
jae
mov
rcrl
mov
je
inc
pushf
repnz
js
push
lods
xchg
in
out
jbe
push
mov
rorl
mov
adc
lods
sbb
repnz
push
xchg
iret
jmp
out
jae
jl
xor
enter
add
add
cli
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
jmp
pusha
into
out
sbb
and
out
push
push
stc
adc
adc
mov
pop
cli
inc
fadds
pushf
mov
aad
call
mov
sub
inc
jns
in
adc
jmp
cli
mov
enter
adc
mov
push
gs
lock
lock
mov
mov
icebp
jne
inc
mov
aas
or
cmp
jno
fwait
cmp
xor
outsb
fstpl
mov
push
push
mov
jnp
js
out
fld
lahf
test
fucom
mov
xchg
push
adc
mov
pop
andb
dec
fsubrp
xchg
in
shlb
sbb
imul
test
sbb
xchg
outsw
dec
cmp
out
cld
xor
jb
cwtl
push
push
and
shll
mov
cmp
pop
repnz
in
insb
mov
mov
movsl
stc
out
push
pop
out
push
sub
jl
xchg
jge
jmp
in
push
enter
push
in
sub
and
cld
mov
outsb
jnp
cmp
sbb
pushf
inc
ret
push
inc
mov
ret
imul
cmp
inc
pop
jl
imul
pop
popf
sbb
ret
push
bound
pop
aad
cmpsl
dec
test
outsb
or
mov
mov
sbb
test
dec
les
inc
andb
and
push
lods
push
and
cmp
mov
test
dec
sub
add
ret
mov
sahf
call
fs
xchg
xor
lock
test
sub
sti
rorl
test
jo
dec
enter
jp
xor
push
sub
push
xor
pop
aaa
inc
repnz
push
cmp
out
push
in
jmp
movsb
cmp
scas
mov
jmp
arpl
push
xor
imul
push
test
mull
xchg
sbb
adc
pop
insb
xor
mov
icebp
daa
lahf
mov
sbb
out
push
or
in
sbb
gs
dec
int3
fbstp
xchg
add
inc
aad
sarb
imul
pop
mov
dec
adc
iret
add
out
pop
es
cmpsb
mov
mov
in
push
notb
cmp
mov
lahf
jmp
push
addr16
loop
cld
scas
dec
inc
bound
enter
imul
in
jl
and
pop
xchg
mov
inc
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
jmp
pop
and
fldenv
js
outsb
insb
cltd
mov
adc
adc
fcoml
dec
xchg
bound
xchg
push
sub
cltd
scas
mov
mov
and
js
outsb
testb
sbb
ljmp
adc
shl
adc
icebp
mov
out
mov
jmp
test
or
das
in
push
cli
imul
enter
je
lock
fadd
andl
clc
jo
jecxz
test
xchg
and
or
pop
sbb
aad
mov
dec
lods
add
pop
movl
enter
jo
test
mov
pop
inc
or
adcl
in
mov
inc
fcomps
dec
out
pusha
out
mov
out
cmc
movsb
add
mov
cmp
xchg
xchg
mov
pop
cmpsb
fstpt
mov
sub
imul
movsl
out
fiaddl
adc
jecxz
xchg
mov
lcall
jle
jbe
dec
and
mov
popf
mov
aad
adc
xchg
test
adc
dec
out
add
lds
iret
xor
push
lret
pop
push
inc
sbb
ja
mov
dec
fucom
jmp
push
mov
mov
pop
test
push
adc
lods
cli
divl
jge
mov
mov
add
popl
ljmp
scas
stos
push
inc
nop
xchg
icebp
mov
sub
ss
cs
and
jns
dec
push
or
pop
lea
push
adc
ret
ret
fdivp
mov
sub
jecxz
mov
jae
add
insl
dec
int
cmp
flds
push
call
xchg
arpl
pop
gs
out
jno
push
sbb
in
ljmp
dec
cmp
int
lods
cmp
stos
cmp
cmp
xchg
pop
jmp
cmp
cli
xchg
addr16
ss
loop
cmp
pop
negl
add
jmp
notl
shl
daa
adc
mov
adc
fcompl
sbb
xchg
adc
mulb
inc
daa
mov
mov
jae
popf
outsb
loope
fiadds
or
jle
pop
cwtl
add
inc
fs
out
insl
ja
adc
push
sbb
iret
sub
test
mov
mov
fistpl
push
aas
cmc
sbb
popa
jge
mov
gs
test
mov
insl
loop
fwait
pushf
loopne
enter
jp
pop
bound
xchg
lret
rcll
cs
and
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
add
and
inc
and
repz
movlps
lcall
xor
pop
jecxz
das
mov
mov
mov
lock
jno
jne
xchg
ffreep
jnp
xchg
inc
jo
xor
fisttpl
cmp
out
jns
pop
sti
cmp
fiadds
push
push
adc
outsl
inc
aam
push
jecxz
jge
cs
popf
insb
add
icebp
inc
sbb
add
outsl
jge
or
xchg
rcrl
and
ja
add
xchg
shrb
add
and
pop
inc
aaa
fdivrl
xor
xor
jb
sbb
cmc
rorb
sti
lds
lret
pop
pop
add
sbb
fmuls
push
cwtl
inc
sub
sarb
add
das
in
adc
mov
mov
leave
cmpsb
addr16
in
out
outsb
mov
mov
inc
ror
xor
dec
xor
add
pop
int3
pushf
jmp
cltd
lret
aad
or
sbb
movsb
cld
sahf
pop
std
add
dec
loope
jmp
xor
pop
inc
rcll
sbb
mov
sahf
testb
dec
enter
pop
jge
cwtl
jmp
sub
rcll
and
adc
xchg
xor
kandnb
add
mov
std
mov
rol
sbb
push
mov
cmp
mov
cmovae
push
lcall
scas
test
out
add
shll
xor
push
jg
pop
sub
cmc
out
das
cmp
adc
cmpsl
repnz
mov
rorb
xlat
xor
outsl
and
and
add
or
outsl
and
icebp
out
push
pop
out
out
mov
cmovg
xor
aas
in
out
rcrb
loope
push
cmp
fmull
pop
push
mov
or
cld
stc
das
lcall
es
sbb
mov
push
leave
icebp
or
xor
or
daa
push
pushf
or
test
sub
add
shlb
pop
test
fbld
add
into
movsl
ret
mov
sbb
rorl
mov
in
sub
xchg
sbb
adc
lcall
mov
mov
das
cmpsl
dec
cmc
das
inc
in
test
stos
sub
mov
adc
enter
outsl
add
pop
cmp
ret
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
jmp
les
mov
mov
cmpsl
ljmp
dec
adc
and
add
mov
ret
sbbb
stc
pop
mov
arpl
inc
fcmovnbe
pop
mov
shl
jno
cld
scas
rcll
lods
popa
cmp
jno
dec
mov
cmc
sub
mov
js
dec
daa
jb
push
xor
addr16
gs
push
push
aad
cmp
sbb
orb
mov
popl
jecxz
push
ss
and
pushf
ficoml
dec
loop
push
sti
xor
push
mov
je
or
fs
xorl
mov
xchg
sbb
push
adc
add
add
xchg
cmp
push
xchg
arpl
enter
repnz
std
mov
sbb
call
pop
cs
repnz
adc
shlb
jns
jl
je
in
pop
fucomip
xchg
stc
add
out
xlat
sub
repnz
lret
faddl
sarb
sbb
or
mov
lret
enter
aam
outsl
pop
jl
cmp
daa
int
mov
mov
jmp
and
mov
icebp
in
dec
push
xchg
cwtl
cmp
aam
cmp
fcomp
xlat
cmp
aaa
dec
jnp
out
add
cmpsb
pop
mov
mov
stos
je
xlat
outsb
ja
mov
ss
mov
pop
push
lock
repz
ljmp
cld
sub
stc
lret
pop
rcrl
testb
mov
and
cmp
ret
sub
imul
lods
push
jae
cmp
adc
lea
cmpsl
cmc
pop
dec
inc
add
into
add
push
testl
rclb
sub
insl
push
mov
out
cli
int
mov
repnz
add
xor
test
pop
or
outsl
sub
and
or
cwtl
xlat
mov
jnp
rorb
or
or
arpl
rclb
add
lds
jno
mov
cltd
xchg
jae
das
sub
in
cmpsl
movsb
add
fistps
or
es
jns
lahf
in
jle
xchg
pop
or
and
out
je
jno
mov
push
mov
pop
push
mov
cmc
sar
or
std
and
xor
insb
mov
cli
pop
int
outsb
push
imul
lret
inc
dec
jmp
sbbl
xor
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
je
adc
cmp
inc
stos
fs
adc
movlps
cmp
insb
sbb
cmp
and
fs
dec
vpshaw
test
cmp
insb
cmp
sbb
add
rcrb
pop
mov
daa
push
incl
sbbb
das
lret
ss
sbb
xchg
shll
pushf
cmp
imul
mull
daa
push
add
inc
sti
movsl
or
daa
xchg
das
sbb
jg
inc
dec
inc
dec
fcoms
fidivrl
push
cmp
mov
push
dec
jne
idiv
cmpl
or
xchg
inc
xor
mov
movsl
dec
aad
mov
repnz
lods
shll
ret
push
inc
xlat
add
popf
sub
inc
or
mov
scas
sbb
ss
test
and
aad
repz
das
push
push
mov
adc
pop
fbstp
ret
scas
push
add
in
icebp
test
xor
cmpsl
and
pop
mov
aas
inc
mov
in
icebp
je
jmp
addl
mov
cmp
mov
cmp
notl
jl
jl
pop
rcrl
xchg
pop
dec
das
xor
imul
xchg
pop
test
jnp
mov
sbb
data16
mov
cmpb
xor
xor
sti
repnz
adc
mov
xchg
sbb
inc
int
mov
xchg
aaa
pop
rolb
add
and
or
es
xor
pop
jecxz
pop
insb
xchg
clc
inc
leave
loopne
pop
rclb
add
stos
add
cmpsb
out
ja
repz
jbe
push
movsb
dec
add
fs
cmc
inc
dec
ret
mov
jae
push
sub
movsb
mov
cmc
xor
test
cmp
jno
or
pusha
test
ficoms
lret
push
and
out
les
rorl
lret
jg
iret
xchg
push
xchg
pop
inc
inc
xchg
into
jo
jle
arpl
add
and
test
push
jb
lock
dec
xor
inc
mov
pop
push
lret
sbb
es
gs
mov
adc
adc
push
sub
xlat
mov
jmp
pushf
mov
fildl
mov
sbb
scas
sub
in
adcb
daa
imul
mov
je
gs
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jmp
in
xchg
xchg
or
or
mov
cmp
adc
movlps
lcall
pop
lods
pop
les
movsl
test
cmc
lods
aaa
loope
xchg
jecxz
xchg
push
sub
inc
scas
or
mov
repz
jno
int3
mov
inc
call
xor
mov
adc
xor
ret
jg
inc
cmp
fstpt
adc
lds
dec
scas
in
fstp
cs
adc
out
outsl
test
cmpsl
nop
mov
pushf
out
sub
jmp
adc
repz
add
stc
xchg
jl
mov
es
lods
cld
and
mov
mov
pop
xor
xor
popl
mov
pushf
sub
dec
pop
imul
jns
jle
cmp
mov
inc
and
push
cltd
pop
aad
cltd
dec
daa
mov
xchg
jmp
ljmp
mov
into
in
push
cs
mov
jg
fidivs
jle
inc
std
cmpsb
mov
pop
mov
subb
xlat
ljmp
pushf
mov
pop
ret
test
sub
xor
mov
es
and
sub
aad
xchg
pop
popf
cmp
cmc
movsl
pop
lret
into
xor
adc
idiv
in
lds
jge
in
mov
push
xor
xlat
inc
push
sub
into
pop
mov
mov
and
addr16
fwait
cmp
mov
rcll
sbb
jbe
mov
lea
test
xor
dec
enter
mov
mov
or
cmp
jmp
movsl
loopne
sahf
scas
leave
dec
call
jno
sahf
loope
xlat
cmp
vpsubd
test
lds
fs
jnp
cmpb
mov
loopne
ja
mov
pop
inc
repz
pop
jle
dec
mov
pop
sbb
es
aam
fs
roll
in
cmp
xchg
mov
jae
cmp
hlt
mov
sub
int3
jno
not
jmp
or
inc
lret
push
push
mov
adc
sahf
mov
push
popf
test
bound
loopne
push
andb
push
mov
pop
lret
shlb
jnp
xchg
lock
call
lods
inc
mov
or
jne
test
iret
stos
pop
push
push
mov
jp
jns
lcall
sbb
mov
jnp
jae
dec
int
call
add
jl
push
xor
add
add
inc
and
mov
mov
xor
xor
shl
shr
or
xor
xor
jmp
pop
sbb
sbb
and
lret
xor
js
dec
jle
fcmovnu
adc
adc
xchg
das
ss
jmp
push
push
dec
jb
imul
rcll
mov
icebp
and
sub
test
out
jne
pop
adc
fisubs
adcb
lret
call
adc
lahf
nop
sbb
movsb
cmc
addb
cmpsb
test
cltd
lock
test
push
outsl
lock
sbb
mov
lods
mov
ffree
sub
jbe
add
ja
inc
leave
into
sub
xlat
outsb
mov
push
mov
cmpsl
andl
pop
sbb
scas
fcoml
xchg
clc
sub
fdiv
cmp
in
lahf
push
xchg
and
or
dec
cmp
bound
fidivrs
add
inc
test
testl
int
xchg
mov
daa
out
sub
push
repnz
adc
dec
jo
sub
and
inc
mov
cwtl
add
pop
add
mulb
lahf
sub
dec
pop
cmp
xor
iret
push
mov
sbb
adc
push
xchg
cmp
sbb
mov
les
inc
scas
addr16
dec
xchg
mov
push
xlat
xchg
cmp
iret
cli
push
arpl
daa
push
popa
clc
mov
push
mov
stc
fisttpl
lret
mov
push
adcb
shll
cmp
sbb
loopne
inc
lret
movsb
push
adc
shlb
cltd
ds
push
push
mov
lret
lahf
outsl
ds
ret
test
stc
ljmp
mov
cli
fxch
repz
ss
jge
lahf
and
xor
imul
pop
hlt
add
leave
cmpsb
filds
outsb
xlat
shll
fs
adc
in
jle
inc
sub
inc
rol
add
aad
int3
pop
call
test
mov
popf
cmp
sahf
and
push
cltd
inc
pop
js
push
fstpl
addr16
les
push
dec
scas
call
xlat
int3
sub
lods
aaa
in
jno
or
js
pop
movsb
sbbb
mov
in
or
sub
sub
lods
xor
push
out
mov
dec
mov
arpl
add
fxch
pop
jno
repz
dec
arpl
cmp
gs
cmpl
mov
aad
mov
jle
scas
fsts
jno
test
sbb
lahf
in
insb
pop
test
push
gs
insl
sub
test
ret
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
movl
push
cmpl
mov
movl
not
jmp
mov
je
push
pushl
push
push
call
sbb
sub
adc
add
sub
add
cmpl
mov
mov
not
movl
jmp
movzbl
movl
jg
push
call
andl
xor
xor
andl
mov
mov
sbb
dec
push
movl
sub
movl
xor
movl
dec
mov
xor
add
xor
mov
xor
xorl
div
cmpl
movl
mov
movl
jmp
movl
movl
jl
pushl
call
orl
or
not
sbb
imul
mov
xor
mov
add
mov
and
mov
xor
adcl
jmp
adc
sbb
xchg
pop
pop
cmp
jle
rclb
adc
mov
cmp
mov
aad
testb
add
xlat
enter
mov
das
cmp
inc
ljmp
cld
inc
push
popf
loopne
jmp
stos
aaa
or
rorb
in
or
jp
inc
xchg
dec
mov
mov
ja
stos
insb
or
inc
jp
mov
and
dec
into
lcall
cmc
adc
inc
adc
lea
mov
xchg
test
inc
jo
jle
xlat
add
cmpsl
lods
imul
shrb
dec
jge
mov
test
rorb
add
mov
jl
jb
aad
rcrb
pop
mov
insl
xchg
jle
fidivrs
xor
lahf
aaa
mov
mov
mov
xchg
pop
cmp
jg
xchg
jg
sub
mov
pop
mov
fcomp
test
int3
add
xchg
or
or
rorb
lods
repnz
stc
sahf
lcall
mov
push
jb
movsl
pop
adc
xchg
rcrb
test
adc
dec
mov
add
aad
sbbl
dec
jl
xchg
lahf
filds
rorl
mov
shr
push
adc
lods
mov
mov
flds
test
repz
sbb
push
aas
dec
aas
lock
jmp
rcl
pop
pop
cmp
adc
stos
mov
stos
jo
jmp
testb
or
stos
cmp
dec
xchg
or
pop
xchg
xorb
movsl
fs
mov
js
aam
in
mov
jo
push
or
mov
add
pop
inc
test
and
jo
sbb
idivb
xchg
ds
ja
pusha
enter
inc
jg
xchg
adc
adc
xchg
lds
push
push
add
dec
decb
test
arpl
jo
and
sub
ret
outsl
fistl
std
sub
push
mov
xor
lods
mov
xchg
out
hlt
loopne
adc
adc
mov
cmp
sbb
repz
insb
dec
xor
scas
loope
xor
lods
out
dec
stos
aas
popf
sbb
jb
jnp
jne
add
xchg
jl
xchg
adc
pop
cmp
cmpsb
jns
xor
mov
pop
aam
les
addl
push
insb
adc
push
jg
jbe
and
mov
cli
repz
jecxz
ret
aam
jge
or
loope
lret
cmp
add
push
mov
icebp
mov
movsb
fiaddl
push
cmp
cmc
jl
sub
iret
cmp
lea
mov
cmp
mov
gs
push
jns
cmp
sahf
fmull
cmp
and
xchg
loop
lds
lahf
stc
loop
cmp
inc
xchg
adc
or
push
xorl
and
mov
inc
add
stos
push
std
mov
mov
push
add
inc
add
sbb
jl
sti
jo
cmp
pop
push
das
fadd
rcrb
mov
cmp
repz
inc
jmp
dec
mov
pop
adc
sbb
lods
cli
mov
movsl
adc
clc
rol
push
and
loop
mov
and
js
sbb
cld
cmp
pop
pushf
jb
shr
stos
mov
sub
div
sub
adc
mov
movl
sub
movl
add
movl
mov
adc
mov
add
mov
or
xor
xor
imul
mov
and
sub
xor
mov
mov
mov
sub
sub
movl
movl
sub
movl
movzwl
or
movl
mov
sbb
imul
mov
cmpl
mov
movl
jmp
movl
movl
jl
push
push
call
sbb
addl
xor
xor
xor
add
mov
dec
adc
sub
imul
imul
mov
adcl
and
or
not
mov
xor
mov
adcl
mov
sbbl
lea
mov
sub
movl
and
movl
and
movl
cmpl
movzwl
mov
movl
jmp
mov
mov
jne
pushl
pushl
push
call
sbbl
and
sbbl
subl
sub
mov
xor
mov
or
add
jmp
adc
mov
and
xchg
js
xor
das
into
adc
adc
shrl
outsb
cmc
sub
or
pop
hlt
xchg
sub
add
js
sub
stos
cltd
fistpl
js
and
xchg
pop
int3
pop
fimull
add
bound
jno
aaa
inc
adc
jno
sub
dec
inc
push
fs
push
das
add
scas
mov
xchg
jbe
loopne
or
sbbl
dec
lahf
mov
dec
aad
fwait
out
fbld
cmp
test
test
push
ss
or
fimuls
test
rcr
pop
and
lret
outsl
imul
pop
cltd
outsl
imul
cmpsb
fwait
pop
push
leave
dec
lahf
fucomip
jbe
inc
sbb
or
icebp
adc
push
data16
cld
push
fmull
cld
arpl
repz
inc
jecxz
test
lret
cmp
int
icebp
xchg
cmpsl
or
aam
pop
jge
add
imul
mov
add
cltd
lds
sbb
pop
cwtl
outsb
js
and
xchg
push
mov
js
dec
lret
mov
dec
and
jg
lods
movsb
mov
mov
xor
cmp
dec
mov
mov
sbb
fbstp
sub
rolb
lahf
jne
js
push
in
pop
inc
das
and
popa
adc
scas
aam
div
mov
jl
mov
das
sbb
mov
sub
xchg
call
cmp
addr16
cmpsb
mov
iret
divb
or
push
es
mov
add
dec
sbb
adc
outsl
sub
sbbb
lret
push
divb
or
rcll
aad
out
aam
lock
adc
sbb
or
mov
shlb
sbb
add
mov
pop
sub
xor
cltd
pushf
inc
bound
cli
lahf
sbb
xchg
add
sahf
nop
mov
sub
xor
xor
add
bound
sbb
add
push
mov
jecxz
jl
outsl
pusha
push
mov
fisubrs
mov
shlb
mov
xor
jnp
mov
jmp
lock
hlt
pop
inc
push
insl
jg
test
std
pop
sub
in
xor
pop
push
ja
pop
mov
jg
test
ficoml
sub
inc
loope
ja
sub
je
jns
lock
outsl
or
divb
cmp
add
bound
xor
add
push
and
insb
orl
clc
mov
in
cmpsb
pop
mov
dec
xchg
fists
xchg
push
lods
cmp
dec
push
popf
or
xchg
inc
sti
add
imul
movsb
mov
je
mov
in
add
adc
xchg
pop
js
pop
movsl
lret
push
xor
adc
js
cmp
xor
int3
mov
jo
push
mov
xor
cltd
add
outsb
mov
and
lret
jmp
scas
mov
mov
fnstcw
out
jo
je
jo
xor
jge
jnp
cmp
sub
jno
or
sbb
ja
dec
shll
and
push
mov
pop
mov
popa
out
cmp
inc
mov
cmpb
xchg
jle
in
dec
xchg
scas
sbb
dec
dec
ds
pop
mov
or
sub
add
adc
xor
cmpl
not
mov
not
movl
jmp
movl
movl
jae
push
push
call
or
or
adc
notl
adc
xor
mov
or
movl
movl
movl
cmpl
mov
movzbl
movl
movl
jmp
mov
jg
pushl
push
push
pushl
push
push
push
call
adc
xor
mov
and
mov
dec
sub
and
mov
sub
add
xorl
mov
sbbl
sub
cmpl
movl
mov
mov
jmp
movl
jne
pushl
call
xor
or
add
mov
xor
mov
mov
sbb
and
xorl
mov
xorl
lea
mov
xor
mov
or
cmpl
movl
mov
mov
jmp
mov
je
push
pushl
call
and
andl
adc
mov
or
not
sbb
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
mov
jae
push
pushl
call
mov
adc
mov
xor
movl
movzwl
xor
and
orl
movl
and
movl
cmpl
mov
mov
jmp
movl
jb
push
push
push
call
adc
adc
add
or
mov
add
mov
or
adc
mov
add
add
movl
imul
mov
imul
or
xor
mov
div
or
sub
mov
cmpl
movzbl
not
jmp
mov
jb
pushl
pushl
push
call
xor
or
and
mov
inc
sbb
add
xor
add
mov
and
xor
mov
mov
and
movl
add
movl
movzbl
or
movl
movzbl
or
mov
add
mov
subl
xor
xorl
div
or
imul
add
cmpl
mov
mov
movl
jmp
movl
mov
jbe
push
push
pushl
push
pushl
call
sbb
addl
add
add
adcl
adcl
add
mov
xor
cmpl
mov
mov
movl
mov
jmp
mov
movl
je
pushl
pushl
call
movzwl
xor
movl
xorl
andl
movl
add
sbbl
xor
jmp
xchg
fldenv
push
pop
xchg
pop
outsb
bound
mov
mov
adc
loopne
jae
sbb
mov
popa
cmpsb
mov
mov
outsl
pop
sub
call
sbb
mov
mov
sbb
dec
cmpsl
or
sub
push
mov
cld
xor
test
add
dec
out
lahf
lods
pusha
or
mov
cmpsb
ds
pop
movsb
enter
pop
idivl
xor
xchg
add
sbb
xor
jo
outsl
mov
dec
sbb
push
mov
xchg
xor
cwtl
mov
cmp
xor
push
outsb
es
ja
adc
jnp
add
and
call
daa
ret
ja
les
fadd
std
mov
xchg
add
pop
repz
inc
sbbb
jmp
insl
ljmp
in
insl
inc
xor
jne,pt
sahf
int
data16
push
aas
ja
dec
es
test
test
jge
adc
lods
cltd
xchg
repnz
lds
aad
idiv
mov
push
iret
loope
cmpb
xor
pop
fimuls
cmp
add
inc
fistpll
dec
adc
xchg
xchg
mov
icebp
mov
xlat
dec
stos
fcompl
mov
jmp
mov
mov
lea
lock
sarb
test
cmc
test
and
mov
xchg
dec
push
repz
iret
xor
mov
in
and
repz
lods
sbb
scas
cmp
sub
scas
test
push
and
xchg
adc
dec
pop
sbb
add
xor
iret
cmc
loopne
lcall
xor
mov
loop
xchg
imul
push
cltd
jae
mov
jecxz
out
jbe
xor
mov
dec
insl
dec
ret
push
mov
aam
dec
cmp
hlt
data16
push
js
lock
xor
shll
mov
and
inc
cmc
pop
stos
push
lds
fiaddl
mov
loope
sarb
dec
insl
mov
and
add
cmpsl
frstor
addr16
cmp
push
jo
jbe
dec
in
xchg
sarl
inc
mov
in
movb
xchg
sub
sti
mov
sub
jp
dec
es
push
ljmp
and
sub
test
and
pop
in
iret
or
push
mov
jne
pop
sub
sub
jae
jb
mov
mov
and
jns
pop
or
sbb
xchg
push
xchg
cld
fbstp
enter
lcall
rcll
jae
sbb
pop
lods
sahf
loopne
ret
roll
pop
adc
add
xor
lds
sbb
lar
pop
decb
notb
pop
std
jno
call
faddp
loop
jno
dec
je
adc
bound
das
dec
adc
popf
in
xorb
jb
das
mov
nop
ss
and
xchg
inc
aaa
cli
into
adc
cmpsb
sbb
adc
ja
in
mov
iret
pop
pusha
movsb
mov
mov
cmpsb
mov
lahf
dec
add
mov
popa
std
cmp
repnz
sbb
rcrb
cltd
cmpsb
test
and
roll
xlat
xchg
jb
jne
mov
cli
cmp
insl
cmpsb
dec
scas
loope
sti
mov
call
je
ja
cld
imul
xchg
je
xchg
jb
gs
cmc
or
cmp
sbbl
mov
add
icebp
subl
xor
mov
adc
movl
movl
movl
mov
and
mov
addl
sub
dec
shr
sub
mov
imul
cmpl
movl
mov
mov
jmp
mov
jne
push
call
orl
adcl
movl
xorl
adcl
addl
mov
addl
and
cmpl
movl
movl
jmp
movl
jl
push
pushl
push
push
push
push
pushl
pushl
push
push
pushl
call
xorl
sbb
andl
sub
andl
orl
xor
or
adc
mov
andl
sub
mov
movl
cmpl
mov
mov
movl
not
jmp
mov
jbe
push
call
dec
xor
orl
add
mov
mov
sub
adc
adcl
movl
mov
cmpl
mov
movl
movl
jmp
movl
mov
jae
push
push
pushl
push
call
subl
mov
adc
mov
movzwl
or
negl
and
adc
and
jmp
insb
cmp
push
daa
aaa
mov
repz
mov
stos
adc
adc
dec
call
xor
cld
mov
sbb
cwtl
mov
adc
pusha
enter
dec
mov
jne
or
lret
push
ret
and
adc
mov
or
fldl
loope
ds
cmpl
add
mov
jns
or
inc
dec
test
add
mov
clc
test
push
xor
mov
adcl
mov
cmp
outsb
in
call
and
dec
hlt
adc
daa
rcrl
andl
add
clc
inc
movsl
movsl
cli
adc
stos
decl
dec
out
out
lret
push
adc
mov
sarb
and
cmp
ret
lahf
dec
les
clc
lcall
xor
pop
or
lods
outsb
imul
jo
xchg
out
stc
js
fiadds
imul
clc
cmpsb
or
fwait
loopne
sbb
add
bound
dec
jmp
mov
sbbl
sahf
jne
pop
or
stos
jbe
push
enter
js
push
push
lods
lret
and
ds
push
mov
out
mov
cltd
sahf
and
xor
mov
add
adc
pop
push
mov
push
xlat
imul
push
jecxz
movsl
pop
incl
loope
sbb
xor
in
gs
adc
and
xchg
cmp
or
pop
cmp
pop
pop
dec
jge
push
inc
lcall
push
adc
lret
gs
nop
mov
dec
ja
jns
out
pop
cmp
mov
out
movsb
imul
stos
mov
add
dec
outsl
popf
mov
fwait
lcall
aaa
in
sub
jns
andb
mov
lods
sub
cmp
and
xor
test
push
push
shrl
decb
fisubs
leave
or
push
int3
xor
insb
lods
sarl
hlt
scas
je
stos
dec
and
push
sbb
fdivl
pop
push
pop
out
xor
mov
cmp
das
add
xor
add
cmpsl
mov
inc
add
movsb
jb
call
cmp
jle
mov
int3
cmp
les
test
je
loop
push
push
mov
out
repnz
mov
push
and
mov
add
dec
in
xor
popf
inc
sahf
cwtl
in
pop
dec
xor
xlat
pop
sub
mov
dec
rcrb
mov
push
fisubl
or
dec
daa
dec
jbe
shlb
addr16
pop
mov
arpl
and
jo
cltd
rcll
int
mov
sub
outsl
lods
loopne
shl
inc
pop
frstor
and
xor
add
dec
mov
shrb
add
cmp
rcll
xchg
jle
pop
xor
or
lcall
jno
add
inc
pushf
mov
jo
pushf
test
cmc
push
data16
jmp
fstpl
and
or
jb
jno
orl
sbb
xor
outsl
adc
stos
mov
xchg
mov
pop
sub
sub
mov
sti
ret
mov
xor
mov
aaa
insb
push
hlt
sub
test
fidivs
sti
xchg
popa
mov
sub
mov
jmp
mov
or
lods
test
sbb
or
inc
mov
or
xor
sub
mov
cmpl
notl
mov
jmp
movl
mov
jne
push
pushl
push
push
call
movzbl
adc
mov
xor
mov
and
subl
adc
add
movl
or
jmp
xchg
pop
dec
or
cltd
push
pop
jecxz
mov
mov
adc
test
xor
jge
ss
test
cltd
or
aam
xor
nop
and
fidivrl
shlb
test
jmp
in
ret
aaa
aaa
in
sti
call
out
jecxz
jbe
xchg
int
out
add
add
mov
mov
or
push
cltd
jge
into
inc
xor
dec
pop
xchg
es
lods
push
in
repz
int
xchg
mov
dec
pusha
mov
xor
insl
scas
stos
pop
scas
lds
shl
mov
loopne
push
movsl
iret
jecxz
ja
mov
or
hlt
xchg
out
cmp
mov
sub
gs
add
ror
fnstsw
jmp
adc
lock
fistps
xchg
cwtl
arpl
shrb
sub
pop
aas
std
dec
rolb
shr
pop
in
div
pop
adcb
xor
or
jmp
cwtl
xlat
lea
push
xor
addl
jle
fwait
movsl
dec
push
addr16
in
adcb
pop
xlat
flds
sub
add
lcall
aaa
idiv
leave
or
xorb
mov
test
insb
bound
icebp
out
jg
in
xchg
sub
push
pop
pop
or
mov
shlb
xchg
shl
push
cs
mov
mov
call
insb
stos
inc
inc
sbb
sub
orb
xor
pop
sbb
xlat
and
nop
cmp
mov
cli
dec
cltd
add
push
xor
sarb
popa
pusha
mov
mov
scas
out
inc
pop
pop
mov
or
and
xchg
outsl
sub
xor
sti
popf
sahf
popa
push
adc
leave
stc
enter
adc
fsubl
popa
mov
in
jne
inc
negb
pop
sbb
jmp
add
jg
iret
addr16
ljmp
pop
mov
lcall
jg
dec
inc
inc
fs
cmp
in
jmp
jp
mov
ret
mov
mov
push
mov
or
mov
pusha
mov
clc
scas
vpmullw
add
test
lock
pop
mov
mov
add
inc
repz
int
call
lds
pop
data16
xlat
int3
inc
xor
cwtl
inc
insl
popf
lea
fcmovbe
stc
fstps
xchg
repnz
js
mov
ret
jp
iret
or
cltd
pop
and
hlt
fcompl
sub
mov
xchg
inc
nop
aam
jno
sbb
fcom
in
push
or
push
xchg
pop
dec
fidivrl
imul
stos
lret
imul
jle
hlt
ss
and
in
adc
xor
mov
sbb
iret
adc
push
les
mov
adc
add
mov
stos
test
dec
ficompl
call
in
push
push
and
adc
adc
test
pushf
shll
jno
cs
xchg
and
shll
sbb
add
sbb
mov
nop
out
adc
cmp
ud0
sti
arpl
inc
push
ret
adc
dec
test
rol
fnstenv
cmp
jg
push
fucomi
push
sbbb
mov
mov
add
xlat
xchg
imul
movsb
sub
clc
imul
or
sti
xchg
scas
pop
mov
mov
andb
lods
add
push
sub
xchg
lods
sbb
xor
push
inc
dec
cli
push
push
test
pushl
bound
add
add
jle
add
inc
test
insb
add
sbbl
movl
mov
mov
sub
xor
movl
or
movl
movl
cmpl
mov
movl
mov
movzbl
jmp
mov
jb
push
call
sub
adc
and
add
movzwl
and
mov
mov
add
mov
sub
cmpl
movl
mov
jmp
mov
jne
push
pushl
call
sbb
mov
add
and
or
and
andl
mov
mov
add
mov
imul
cmpl
mov
mov
mov
mov
jmp
movl
movl
jbe
push
push
push
push
pushl
call
sub
dec
mov
sub
or
adc
orl
add
imul
mov
or
dec
mov
lea
adcl
push
call
add
mov
add
mov
imul
add
and
mov
mov
xor
sub
add
xor
mov
andl
div
cmpl
notl
movl
movl
jmp
movl
movl
ja
push
push
pushl
pushl
call
xor
xor
and
mov
or
sub
mov
or
mov
inc
xor
xor
add
and
mov
movl
mov
and
mov
movl
and
movl
addl
movl
cmpl
mov
mov
mov
jmp
mov
jg
pushl
call
mov
adc
sbb
mov
adc
or
movl
xor
movl
andl
movl
orl
movl
xorl
movl
sub
movl
movl
movl
sbb
movl
mov
mov
mov
cmpl
mov
mov
jmp
movl
ja
pushl
push
push
call
or
sbb
adc
movl
cmpl
mov
movl
mov
jmp
mov
ja
push
push
pushl
call
and
and
incl
mov
and
not
and
mov
adc
mov
cmpl
notl
mov
movl
jmp
movl
jbe
push
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
and
xor
sub
sub
cmpl
mov
movzbl
mov
jmp
movl
jg
push
pushl
push
call
add
mov
xor
add
sub
or
xor
add
mov
sub
or
notl
sub
adc
xor
imul
mov
sbb
lea
mov
xorl
mov
neg
mov
mov
movl
xor
adc
add
or
mov
xor
lea
and
xor
add
sbb
mov
mov
cmpl
movl
mov
jmp
movl
movl
je
push
push
push
call
subl
sub
adc
sub
or
sbb
sub
movl
add
mov
cmpl
movl
mov
mov
not
jmp
mov
jb
push
call
xorl
sbb
add
add
xor
add
movl
sub
movl
adc
movl
movl
cmpl
movl
movl
jmp
movl
not
jle
pushl
call
andl
sub
xor
mov
adc
or
and
mov
cmpl
not
movzwl
mov
jmp
movl
jl
pushl
pushl
call
add
neg
or
adc
adcl
sub
mov
and
mov
xor
xor
adcl
mov
adcl
call
cmpl
mov
mov
movl
jmp
movl
movl
ja
push
call
adcl
xor
xor
or
and
or
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
sbb
adc
cli
sbb
adc
mov
adc
xor
jle
das
pop
jo
push
add
pop
int
xchg
add
and
das
jl
cs
mov
push
mov
cmc
cltd
cltd
sbb
imul
dec
cmpsb
lock
cmp
xchg
cmp
lcall
and
pop
in
inc
lock
cmp
pop
in
mov
mov
push
adc
jae
stc
fisubs
pusha
push
nop
divl
pop
movsl
or
scas
push
push
add
hlt
and
fimull
push
push
das
adc
jnp
rol
fistl
mull
imul
sbb
movsb
inc
cmp
push
call
dec
arpl
sub
dec
shrl
jns
inc
fs
dec
fadds
mov
xchg
mov
out
mov
mov
cmp
push
mov
or
dec
ljmp
pop
addr16
mov
sub
das
pop
pop
pop
and
pop
insb
and
adc
sti
sarb
movsl
and
shr
cmp
movsl
loop
in
sbb
pop
ja
push
pusha
aam
sub
sti
cmp
mov
mov
push
pop
addr16
dec
pop
or
bnd
fdivrl
adc
popa
inc
or
mov
cs
or
imul
sub
int3
mov
pop
ret
jp
and
xor
arpl
mov
clc
pop
cmpsb
notb
jo
adc
rcll
push
inc
pop
movsl
xor
imulb
xor
sarl
sub
push
aad
sub
std
cmpsb
sti
or
cmp
fnstcw
lret
adc
repnz
sti
add
sub
test
cmc
insl
xor
xor
sti
push
inc
xor
cmp
fs
xor
mov
dec
in
fwait
mov
sbb
sub
dec
sti
push
popf
insb
shlb
or
jl
sbb
push
and
mov
xchg
push
sarb
sbb
mov
sti
rcll
adc
fs
ljmp
sbb
jg
jne
out
sub
insb
mov
or
sub
mov
mov
push
or
mov
pop
mov
mov
push
cmp
in
add
inc
jecxz
inc
sbb
and
and
icebp
adc
lods
outsl
inc
nop
xchg
test
pop
adc
setbe
jle
push
rol
dec
mov
mov
int3
or
imul
pop
and
ret
sub
test
sub
mov
push
popl
int3
adc
xchg
push
add
cwtl
xchg
dec
jns
or
fistpl
fs
rorb
into
mov
mov
jne
cld
scas
cmp
hlt
inc
fs
ret
cmc
and
inc
add
pusha
nop
pop
xchg
fcmovb
mov
int
lock
sub
lds
push
mov
mov
xor
mov
rol
or
idivb
mov
repz
jns
std
pop
ret
ds
dec
sahf
js
jle
mov
mov
std
cs
sub
cltd
loopne
mov
jl
scas
push
in
leave
std
sbb
pop
xor
into
lock
ljmp
mov
or
enter
inc
dec
in
xchg
sub
fwait
add
mov
mov
xor
xor
jmp
or
mov
mov
mov
call
movsb
adc
adc
sbb
lea
pop
mov
cmp
push
lret
les
sbb
scas
pop
cmp
sbb
jo
test
cmpsl
inc
jecxz
jecxz
mov
icebp
leave
stc
xchg
fld
jns
pop
pop
mov
outsl
push
mov
dec
inc
xor
iret
dec
mov
jle
negl
fidivs
std
je
mov
jge
into
jmp
mov
dec
movb
or
fisubs
and
pop
loope
lret
and
xor
pushf
sub
pop
or
rcrb
dec
bound
xor
int
mov
add
add
repnz
sub
in
ss
stc
cmc
mov
addr16
xchg
sti
mov
ja
scas
mov
ss
popf
fildl
sbb
adcl
fucom
scas
out
ss
shl
lret
adc
mov
push
imul
cmp
and
dec
out
xchg
sub
sub
add
testl
bound
mov
mov
mov
push
inc
inc
shld
xor
xchg
repz
mov
lret
hlt
stc
jo
push
push
or
test
xor
mov
lret
mov
mov
cmp
sahf
jle
sbb
lcall
arpl
push
addr16
inc
aam
cmc
mov
inc
mov
shlb
repz
out
adc
inc
adc
sbb
mov
add
lahf
jge
add
loopne
mul
xchg
dec
iret
popf
int
aas
outsb
iret
imul
jecxz
xchg
popa
mov
loope
pop
and
pop
inc
sbb
jmp
xor
call
or
sahf
aam
sbb
sbb
mov
mov
movsl
jae
stc
push
add
lret
imul
adc
pushf
out
rcrl
mov
insb
sub
and
into
push
dec
roll
pop
in
std
pop
xchg
xchg
fildll
rol
add
in
cmpsb
mov
cmpsb
stos
cld
dec
cli
cmp
push
sarl
jge
arpl
repnz
clc
pop
test
mov
jecxz
int
xor
cmp
mov
mov
adc
repz
out
and
aaa
fisubrl
scas
add
les
dec
bound
inc
mov
repz
lods
test
and
cmp
jb
cmpsl
lret
sahf
or
pop
push
ret
pop
repnz
pop
mov
pop
test
lcall
adc
das
notl
insb
mov
mov
pop
inc
adc
xor
lcall
das
add
mov
hlt
out
in
xor
cmp
aam
shlb
and
gs
adc
and
ror
mov
mov
out
outsl
cltd
pushf
in
mov
popa
fcmove
rol
sub
or
inc
or
cmpsb
jne
lods
lods
cld
add
scas
xor
nop
mov
xchg
stos
das
ja,pn
setb
loop
cli
adc
xchg
fisubrl
pushf
mov
leave
xchg
repnz
cmp
mov
jnp
xchg
cmp
imul
fisttps
push
cmpsb
int3
test
push
lock
cmpsl
mov
sbbb
cmpsl
inc
into
mov
lock
jnp
xor
xchg
sbbl
sbb
mov
call
mov
mov
mov
mov
xor
jmp
movl
ds
mov
insb
rcrb
popa
bound
cmp
es
sahf
insb
cmc
stos
scas
jge
js
jg
cld
mov
add
cmpsl
hlt
xchg
stc
lea
fabs
hlt
stos
mull
cmpsl
mov
ljmp
push
imul
cli
push
push
adcl
xchg
inc
ffreep
push
push
mov
mov
xchg
push
sub
add
mov
frstor
jbe
mulb
aad
sbb
or
jno
dec
adc
and
inc
cmp
xchg
repz
mov
cmc
inc
in
jnp
ret
mov
xchg
lock
xor
sbb
or
pop
into
lea
xlat
popf
cmpsl
loop
lret
pop
inc
imul
push
sbb
insb
jnp
sub
sub
pop
fmull
dec
out
test
mov
imul
fcoms
adc
jne
push
in
mov
mov
push
bound
movsl
push
inc
in
mov
sbb
test
popa
or
or
xchg
imul
add
jbe
dec
cwtl
mov
sub
jge
push
or
ja
sahf
jmp
fbstp
daa
cmp
dec
movsb
cmp
mov
sub
mov
loop
pop
pop
push
adc
or
bound
lahf
add
es
out
cmpsl
cs
fs
andb
pop
sub
sbb
rcrb
fmuls
cs
movsl
jno
pop
pusha
pop
xchg
dec
mov
pop
mov
popa
push
pop
jecxz
jae
mov
hlt
es
or
and
sbb
cmp
jl
subb
mov
int3
bound
cmpsb
les
fs
inc
cmpsl
mov
test
mov
xor
mov
sti
jmp
out
call
dec
push
in
lods
add
mov
loope
push
adc
imul
adc
in
sub
bound
outsb
cmp
jne
cmp
in
jns
popf
js
xchg
jns
pushf
inc
or
adc
subb
leave
int3
jecxz
xchg
cmc
es
jle
jbe
mov
movsb
scas
jne
addr16
push
and
xchg
sbb
sbb
sarb
bound
lret
push
mov
aam
cmpsl
js
icebp
xor
cs
dec
rcl
jle
arpl
push
jne
fidivrs
sub
bound
iret
cli
sub
mov
ljmp
mov
lock
or
test
cmp
sti
push
imul
fisubrl
outsb
bound
std
or
outsb
cmpsb
push
pusha
cmp
mov
insl
fldenv
fcoml
xor
cmp
clc
mov
and
cmc
adc
das
das
jnp
xchg
mov
sbb
scas
insl
dec
data16
shlb
pusha
or
adc
nop
jns
pop
or
loope
iret
in
xchg
out
or
repnz
fistl
add
lcall
outsb
popa
popf
sbb
mov
das
js
push
xor
aam
sbbl
xor
int
dec
sbb
pop
mov
cltd
lock
andb
add
cmovb
push
push
out
rcrl
dec
dec
pushf
mov
pshufw
loopne
dec
mov
es
mov
fwait
popl
gs
mov
or
jge
jmp
cmp
mov
js
jge
insb
push
lcall
rol
into
xor
xchg
sbb
xchg
and
scas
jbe
lea
cmc
jb
imul
fistpll
popa
add
cmpl
movsb
jne
in
imul
xchg
cmc
aas
jl
rolb
data16
dec
xor
cltd
popf
popl
nop
repz
adc
sub
push
inc
add
in
jmp
xor
ret
rcrb
push
xchg
jle
loopne
cmpsl
mov
fisubrl
inc
cmc
jmp
xchg
repnz
cmp
imul
dec
xor
popa
loop
jecxz
jp
int3
adc
mov
add
inc
sahf
sti
je
jecxz
dec
pop
sahf
cltd
pusha
fs
sbb
clc
sbb
daa
ja
push
lods
ds
ret
dec
js
in
push
in
cwtl
pop
lods
fbstp
fiaddl
fbstp
pop
adc
mov
or
add
cltd
cmp
jle
sbb
or
mov
xor
int
jl
clc
jle
add
mov
shll
aam
or
inc
add
dec
mov
mov
cmpb
ss
pop
sub
fimuls
gs
fstpt
pop
xchg
mov
cld
xchg
xchg
popf
lret
in
inc
rorl
stos
cmp
lods
xchg
mov
mov
mov
mov
add
adc
jno
inc
cs
out
jmp
lret
aaa
cmc
push
dec
sti
pop
pop
mov
and
sarl
enter
les
ja
adc
cmp
rclb
jbe,pn
fldl
cmc
cmp
andl
jecxz
mov
push
rcrb
lods
jnp
imul
xchg
mov
dec
icebp
mov
and
loopne
cmpsl
add
jecxz
cmp
pop
and
stos
adc
mov
lss
push
in
xor
or
int3
mov
aaa
imul
lahf
inc
jge
fistps
jg
fnstenv
imul
dec
stc
ss
fdivrs
lea
gs
popa
adcl
xor
idiv
hlt
push
sbb
sbb
dec
push
loope
ret
mov
repnz
xor
mov
cmp
sbb
mov
call
int3
pop
rolb
stos
loope
ds
insb
xchg
mov
or
call
je
pop
mov
jns
outsl
adc
bound
out
mul
aad
jecxz
pushf
jge
stos
dec
shlb
loopne
fistpl
shll
mov
fnstenv
mov
imul
insb
and
sar
xor
mov
out
pop
jg
cli
mov
test
mov
iret
cmp
daa
clc
jns
push
sub
imul
inc
jl
or
sub
out
xchg
mov
and
xor
adc
inc
xchg
shl
in
add
movsb
pop
movsl
pushf
mov
mov
pop
fsubrs
push
cmp
inc
js
vpandnd
pop
std
adc
vpmaxsw
mov
sbbl
addr16
adc
sbb
xor
aas
sub
addr16
mov
nop
push
stos
outsl
add
imul
js
mov
dec
mov
and
inc
mov
xchg
xchg
iret
mov
pusha
js
xor
es
clc
xchg
in
fsubrs
push
lods
jb
adcl
addl
test
std
decl
loopne
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
inc
fwait
pop
dec
sbb
fwait
lds
mov
lock
adc
adc
das
xor
arpl
xor
pop
sbb
xchg
dec
adc
push
sub
dec
fwait
jne
and
mov
in
lods
adc
rorl
in
jbe
cli
ret
pushl
inc
adc
xor
jnp
mov
andl
inc
jns
mov
push
negl
mov
shr
fdivp
pop
mov
mov
pop
hlt
or
mov
stos
ret
mov
xchg
in
pop
in
repz
xlat
cmp
out
cmp
pop
aad
subl
ret
js
push
fildl
testl
or
lods
into
jae
and
leave
inc
xorb
xchg
rolb
mov
ljmp
pop
loop
fidivl
in
lds
add
out
adc
pop
dec
dec
push
cwtl
xchg
xlat
jle
daa
mov
mov
lcall
add
xor
mov
jg
xor
int3
das
push
add
lods
xchg
add
loop
leave
pop
push
cltd
jp
out
nop
add
jnp
xor
andb
ja
mov
pushf
jns
xor
dec
ja
sbb
xor
arpl
fistl
into
out
adc
std
fwait
mov
mov
mov
leave
imul
lds
jl
inc
outsb
sbb
dec
mov
fwait
popf
ret
popa
sub
lock
movsb
cltd
in
cmp
popl
rolb
mov
lcall
pusha
pop
cmp
mov
pop
cld
ret
sub
and
rclb
mov
inc
mov
notb
stc
fcoml
cli
add
or
cmp
in
rep
mov
xchg
and
push
mov
dec
lock
aaa
dec
jo
jecxz
mov
dec
dec
sahf
mov
in
sub
jg
or
std
test
movsb
aaa
mov
jo
mov
popf
dec
pop
popf
repnz
out
nop
lods
and
les
mov
icebp
jge
cmp
addr16
rorb
or
test
leave
sar
test
add
push
inc
push
fmuls
in
or
mov
fnsave
popf
mov
jmp
jle
je
lret
stos
mov
or
pop
jmp
mov
mov
mov
aam
sbb
aaa
call
sbb
in
mov
call
in
lahf
std
cwtl
pop
cmp
mov
mov
sbb
pop
mov
and
jg
mov
clc
out
stos
mov
sbb
std
cmpsb
mov
push
xor
and
xor
sbb
daa
es
popf
jl
and
aas
adc
mov
cmc
pop
shlb
out
add
imul
leave
cld
out
lcall
jno
cmpsb
push
fcomip
mov
cmp
enter
and
iret
scas
mov
sahf
loop
insb
lret
push
pop
enter
popf
pusha
mov
inc
mov
fdivrl
pop
sbb
call
pushf
leave
pushl
xor
cmpsl
push
dec
jae
test
push
cmpb
jle
pop
push
or
jno
leave
js
movsb
mov
and
sbb
inc
insb
push
fldl
aaa
lahf
xchg
mov
sti
decb
into
fdivrp
xor
mov
jmp
sahf
pop
pop
adc
lahf
sbb
push
mov
adc
es
push
or
enter
test
cmc
and
jae
fs
xchg
cmc
mull
loope
xor
cmp
shlb
xchg
icebp
lds
test
lock
cli
notl
xorb
stos
cmp
les
cmp
pop
jns
dec
cmp
cltd
push
enter
mov
divl
pop
sub
outsb
addr16
xor
adc
sub
sahf
push
mov
inc
mov
sbb
fsubrs
pop
shrb
imul
push
aad
mov
jb
xchg
mov
jl
test
and
js
mov
das
ljmp
jmp
dec
movsl
lods
divl
repnz
mov
cmp
inc
dec
mov
fsubrl
cmp
cmp
imul
jns
mov
jae
into
cltd
bound
sarb
pop
ret
out
mov
sbb
sub
fldl
jb
cmp
jmp
lret
inc
fimull
cmpl
mov
lods
jnp
sbb
cli
xor
ss
add
divl
leave
inc
lds
push
push
pushf
dec
dec
loopne
xchg
mov
jne
mov
push
insb
dec
pop
mov
out
ss
in
add
dec
jne
fimull
ret
ja
rclb
rcrl
int
lock
and
sub
mov
aad
cmpl
fldcw
pop
scas
in
pushf
jl
xchg
mov
enter
fistpl
out
es
cmp
loopne
and
jle
fldt
iret
inc
jg
mov
xor
xor
adc
lods
and
sahf
fimuls
jbe
in
jp
bound
ret
testb
int
xchg
pop
push
das
andb
lods
fadds
ret
adc
xor
sub
mov
xchg
mov
push
fldenv
jmp
aas
cwtl
mov
cmpsb
mov
xlat
fidivrl
lea
or
cmp
shll
jb
push
call
dec
mov
mov
sbb
sub
inc
push
mov
cmp
mov
sbb
pop
test
fwait
and
cs
daa
popa
ljmp
fsubrs
shll
insl
cmpsb
mov
xchg
jbe
rclb
movsb
jecxz
pop
add
push
mov
adc
clc
sbbl
mov
insb
cmp
dec
in
fucom
lods
push
out
and
xor
pop
push
mov
xchg
clc
lds
mov
and
clc
pop
jno
aad
int3
sbb
aas
sahf
mov
cltd
mov
test
aas
sbb
xchg
call
js
add
pop
shlb
add
xchg
xor
fwait
mov
add
outsb
loop
cmp
push
and
mov
pop
cmpsl
aam
cmpsb
xor
cmc
nop
std
subl
sub
mov
rclb
cmp
push
mov
call
mov
push
pushf
push
cmc
stc
fldenv
and
mov
in
mov
lock
icebp
test
xchg
mov
iret
fld
adc
in
std
jl
cltd
sbb
rcll
in
mov
mov
mov
movsl
cwtl
ds
sar
add
je
xor
divl
mov
sub
or
loop
sub
add
ret
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
jmp
mov
sbb
lahf
cmp
into
lods
pop
adcb
xlat
stos
push
xor
xchg
cmp
xchg
loopne
jp
xchg
test
out
rorl
add
ljmp
sarl
fcompl
xor
hlt
mov
jmp
adcb
loop
sbb
jo
and
insl
movsb
adc
dec
inc
faddl
jecxz
push
jmp
stos
shrb
push
lret
icebp
pusha
mov
lahf
jle
loopne
adc
jno
jbe
adc
stc
xor
ret
dec
mov
xor
pop
loop
cmp
mov
xchg
inc
dec
or
mov
cmp
nop
mov
inc
in
mov
push
test
push
test
adc
imul
iret
mov
sbb
sub
push
inc
push
add
imul
dec
scas
adc
jne
dec
xchg
push
add
inc
sbb
sahf
cmpsb
imul
mov
cmc
cli
xchg
test
insb
push
add
mov
pop
xor
test
daa
enter
xchg
in
pusha
inc
mov
push
in
mov
cmpsb
cmpsl
rcrl
fwait
mov
call
cwtl
sub
sub
scas
aaa
repz
pop
idivl
into
jle
sbb
pop
inc
jns
es
mov
test
and
repnz
push
push
mov
popf
sbb
lds
es
sub
jns
cmp
xor
daa
mov
int3
out
jge
mov
mov
inc
mov
aaa
pop
xor
lock
sbb
add
jmp
pop
imul
lret
mov
lret
gs
mov
xchg
adc
sub
mov
sar
fwait
outsl
pop
repnz
fwait
je
mov
mov
jp
lock
addr16
lret
push
pop
xchg
imul
out
and
xchg
sbb
sub
jl
push
jle
sbb
jge
add
dec
scas
imul
adc
pop
jl
dec
sahf
xor
popa
xorb
cmp
dec
jp
cmp
std
cltd
pop
les
and
cmp
ljmp
mov
cltd
hlt
jae
lock
mov
ss
push
les
aam
cmp
fs
popf
mov
cmpl
ja
ljmp
push
mov
sub
mov
add
jle
andl
jae
jp
fdivr
sti
fsubs
push
clc
sbb
pop
push
insb
roll
js
adc
xor
pushf
jl
rorl
cmc
scas
xor
pop
pop
mov
cmpsl
adc
icebp
mov
pop
mov
mov
jnp
mov
mov
rcr
cmp
mov
stc
repnz
loopne
pop
dec
push
ret
jmp
scas
je
mov
out
in
idivl
orl
fldcw
fsub
mov
adc
inc
mov
or
pushf
cmp
pop
cwtl
lret
dec
pop
cmp
sbb
out
call
and
bound
aad
adc
rep
lea
jl
mov
loope
test
push
dec
imul
dec
aas
into
mov
mov
les
outsb
jo
inc
adc
in
bound
dec
push
nop
int3
cwtl
shr
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
stos
cwtl
dec
pop
ds
lcall
ss
mov
adc
adc
jge
dec
jnp
adc
mov
call
bound
int3
fnsave
mov
jge
test
rcl
push
sahf
ret
xchg
ffree
inc
outsl
andl
or
pusha
out
fcomps
setg
mov
push
add
and
mov
aas
push
xchg
iret
xchg
gs
add
sbb
push
aam
cmc
add
lds
pop
mov
inc
ljmp
and
fwait
lods
movsb
sub
mov
cli
cmp
add
inc
scas
inc
fidivs
lock
add
out
xorb
dec
sub
repz
mov
test
shl
push
cli
scas
and
inc
mull
or
push
in
xchg
sbb
sub
call
lcall
aas
cwtl
and
insb
loop
mov
mov
add
adc
mov
popl
mov
push
pop
mov
test
js
lahf
cs
cmpsb
enter
push
sub
repz
cltd
or
add
jmp
ljmp
push
xchg
les
inc
pop
stc
cwtl
lcall
jb
loop
scas
out
cmp
loop
adc
push
push
jbe
push
pusha
movsl
jne
jno
mov
lahf
cmp
repz
add
imul
mov
cmp
rorl
dec
push
inc
fdiv
jnp
in
inc
cld
pop
rcrl
dec
pop
cltd
mov
in
jne
int
test
test
ficoms
pop
mov
mov
test
add
sbb
fdivrs
gs
aaa
loope
scas
enter
iret
or
xchg
popa
hlt
mov
mov
loopne
ret
into
mov
inc
xchg
cmp
popa
or
scas
jb
xlat
mov
add
mov
sbb
pop
test
push
cmp
push
je
and
lahf
jg
add
jle
cmp
add
pop
inc
inc
mov
sbb
dec
ud1
test
inc
inc
xchg
adc
mov
mov
jge
jl
sbb
fcmovnu
or
les
mov
dec
mov
cmpsb
pop
dec
cli
jno
lods
fstps
jge,pn
out
out
sahf
jecxz
jmp
jbe
shll
clc
ljmp
bound
xor
xchg
nop
mov
add
jae
mov
or
fsubrs
sbb
scas
mov
and
pushf
hlt
out
cmp
sbb
xchg
ja
jo
in
or
jae
call
sub
dec
in
sub
sub
stos
sbb
xor
int3
cmpsl
arpl
pop
mov
jge
mov
push
dec
leave
jbe
adc
insl
pop
data16
jp
sbb
sub
lods
loope
mov
jns
xor
mov
push
mov
rep
inc
mov
sub
movb
cwtl
decl
mov
arpl
jns
mov
cmp
xlat
lea
or
pop
addl
cmpsb
mov
jb
packssdw
xchg
xchg
data16
scas
add
mov
sbb
shll
mov
mov
in
mov
dec
test
jg
fldenv
mov
push
add
movsl
ljmp
into
lcall
xor
ds
mov
mov
decl
jmp
mov
clc
mov
sub
jle
movl
adc
or
jnp
inc
cmp
lahf
mov
and
jno
adc
sub
in
mov
test
pop
mov
and
mov
imul
cmp
cmc
jge
cs
fdivr
test
dec
addl
sub
push
int3
rorl
mov
cmpsb
adc
je
ljmp
aas
inc
add
mov
lret
cli
ljmp
loope
pop
cs
incl
add
je
push
mov
fxch
imul
mov
sbb
mov
push
push
scas
sbb
lret
adc
sbb
std
xor
inc
pop
rolb
mov
jb
out
mov
jmp
or
xor
cmp
out
or
mov
adc
push
outsl
movsb
jecxz
imul
data16
push
cmp
mov
dec
repnz
xchg
shrl
cmp
inc
jae
fwait
lret
xchg
gs
fcomps
mov
sahf
loope
or
hlt
lods
pop
push
test
iret
int
dec
popf
pop
push
or
cwtl
jg
hlt
xlat
idivl
fld1
leave
mov
bound
lahf
mov
mov
cli
ficoms
sahf
call
in
and
push
pusha
sbb
mov
lcall
dec
or
push
pusha
or
outsb
sbb
cmc
push
dec
jge
iret
cltd
adc
inc
mov
insb
test
das
daa
push
lea
hlt
add
sbb
testl
pushf
sbb
hlt
push
loopne
push
inc
jg
cmc
pop
cmpb
test
arpl
cmp
xsha256
cmpsb
push
adc
sub
int3
mov
sbb
mov
sahf
mov
dec
mull
or
aam
pop
or
lret
shr
xlat
ja
stc
rcl
pop
xchg
bound
shr
gs
push
popl
mov
fldenv
stc
and
or
push
sub
add
cltd
outsl
fdivs
jno
into
pop
push
sbb
movsl
jl
mov
mov
add
push
inc
jge
adc
jbe
mov
fdivs
xchg
pop
add
dec
into
incb
push
inc
jnp
push
xor
mov
clc
sub
cmp
fisttpl
cmpsb
loop
xor
arpl
mov
mov
push
xchg
xor
xchg
div
xor
xlat
sbb
out
lahf
adc
cs
mov
adc
lods
fsubr
daa
repz
cmp
popf
sub
jge
insb
fistpll
cmc
cmp
popf
and
add
cmc
outsl
push
mov
addr16
jne
stos
cmpsl
xchg
lahf
adc
push
cli
or
xor
push
enter
mov
and
call
push
mov
fistl
sbb
cmc
lcall
mov
and
pop
cmpl
mov
sub
sub
xor
fs
dec
push
sbb
idivl
ret
and
jmp
mov
addr16
dec
aam
mov
sbb
in
stos
cld
and
push
xor
cli
nop
out
loope
push
aad
pop
mov
push
jns
or
aam
add
mov
jp
add
in
out
add
adc
and
lods
shl
out
in
nop
xchg
lods
adc
dec
or
adc
std
mov
outsb
pop
or
xchg
add
mov
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
icebp
sbbb
push
cmpsb
icebp
stos
out
add
stos
adc
adc
mov
pop
arpl
negl
lea
test
push
push
inc
xchg
cli
fcompl
mov
pminub
pop
sahf
movsl
in
xor
data16
jmp
xchg
sbb
outsb
inc
cmc
pop
movsb
leave
jno
jmp
pop
shll
and
sbb
ds
jecxz
mov
mov
leave
push
xchg
les
in
xorl
adc
and
xchg
jge
sub
jle
cli
and
dec
or
push
into
test
xchg
push
cmp
dec
pop
sub
ss
notb
xchg
fstpt
pop
cmp
test
dec
sarb
out
cmp
push
jb
and
pop
jp
mov
mov
or
pop
outsl
dec
jne
pop
movntps
jecxz
adc
pop
imul
mov
in
testl
dec
dec
sub
loop
xchg
mov
jg
mov
loopne
dec
inc
cld
mov
mov
jo
xor
xchg
test
sub
ds
fidivl
stos
cmp
mov
lcall
aas
loopne
inc
into
lock
cmp
xchg
mov
icebp
pop
jb
nop
pop
adc
add
cmpsb
and
and
xor
ja
out
mov
sahf
xchg
mov
int
mov
iret
cld
dec
and
je
dec
pop
xchg
mov
test
stc
dec
lret
lret
xchg
ret
push
cli
pop
insb
sub
icebp
pusha
stc
daa
xorb
call
adc
lds
mov
pop
sub
jl
sub
movb
mov
push
js
adc
fldcw
out
mov
inc
fs
push
arpl
out
cltd
rcrb
test
sbbl
adc
pop
xorb
aam
imul
lods
push
call
mov
aas
mov
rolb
scas
pop
sti
lds
sbb
sub
iret
ret
rol
std
idiv
mov
ds
daa
in
mov
sti
mov
add
lahf
jg
mov
lcall
jb
lods
mov
pop
rcrb
ret
or
push
inc
hlt
cmpl
inc
pop
mov
mov
push
fdivr
inc
sub
xchg
mov
sbbb
pop
jle
jmp
scas
dec
mov
in
push
xor
mov
shl
sub
movd
xor
jg
imul
cmp
imulb
ret
jnp
mov
mov
xor
xchg
and
pop
iret
in
lret
das
sbbl
out
out
xor
cmp
or
sub
fmull
inc
sub
outsb
cmp
xchg
pop
dec
fcmovu
arpl
loope
dec
cmp
dec
loope
popf
lcall
and
add
daa
jne
addr16
cmovno
ja
inc
lea
insb
push
mov
sub
dec
jmp
or
into
adc
cmpsb
adc
push
push
std
dec
adc
scas
lahf
bnd
lea
mov
pop
addr16
mov
cmpsb
lods
stos
inc
jp
mov
std
sub
push
es
hlt
test
cmp
sub
push
inc
stos
scas
pop
or
pop
jg
shlb
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
xor
xchg
aas
sbb
sub
jb
add
jg
adc
adc
push
mov
in
dec
cmpsb
mov
mov
add
add
push
jmp
sbb
inc
sub
push
testl
mov
jnp
dec
leave
fistps
mov
push
push
movsb
clc
hlt
add
call
push
mov
aas
xorl
xor
test
mov
lcall
in
es
mov
inc
ja
outsb
push
adcb
pop
dec
and
inc
mov
fwait
adc
sti
dec
push
or
in
xor
mov
call
popf
pop
pop
sub
adc
lea
mov
mov
leave
jae
das
fildl
vaddsd
or
jle
in
fcmove
xor
mov
mov
sub
movsb
insl
outsl
in
daa
mov
pop
cs
inc
sahf
out
xchg
jae
lahf
or
sub
jmp
lea
insb
fwait
adc
inc
stos
xor
cmc
mov
lret
out
lock
xchg
stos
ss
frstpm(287
mov
pop
push
negl
sbb
pushf
and
add
dec
adc
in
aad
sbb
inc
or
sbb
pushl
cmp
lods
fldt
or
dec
mov
sti
leave
imul
jo
mov
pop
push
fcompl
fs
sub
mov
mov
dec
aaa
jno
aam
sub
mov
lret
std
aam
mov
cli
or
push
clc
inc
cmpsb
aam
fmull
pop
testb
inc
sub
mov
in
lea
add
jno
mov
ficompl
orb
sub
stos
test
imul
gs
push
nop
inc
mov
mov
sarb
fldenv
in
or
xor
sahf
add
inc
icebp
fnsave
sbb
or
lock
inc
mov
add
je
cmp
xchg
rorl
div
mov
cmc
repnz
loope
xchg
inc
out
add
sub
mov
add
push
sub
scas
std
sbb
mov
rcrb
jo
or
jl
mov
sahf
mov
mov
pop
jmp
out
sbb
mov
and
pop
cmp
mov
imul
cwtl
mov
mov
lds
pop
and
popf
mov
dec
lods
inc
dec
xchg
mov
test
fadd
sub
jecxz
push
int3
gs
and
pop
cli
mov
scas
xlat
cld
hlt
clc
in
add
inc
leave
cmp
adc
push
gs
mov
inc
int3
jne
mov
repnz
jbe
xchg
mov
dec
or
aad
mov
or
pop
jp
cmp
leave
xor
pushf
int3
jg
cltd
sbb
ficompl
add
jmp
scas
out
mov
in
jle
rcrb
cld
aad
adcl
data16
sbb
pop
cld
out
jbe,pn
lret
dec
and
popf
ja
ds
sahf
testl
mov
cltd
call
leave
pop
test
pop
sti
mov
addr16
ljmp
les
xchg
fnstenv
mov
sti
in
push
xor
xor
jecxz
adc
es
cwtl
fidivrs
push
fwait
and
cwtl
mov
adc
mov
pop
push
adcb
out
movsl
arpl
xchg
test
mov
dec
inc
sbb
push
js
movsl
test
ret
push
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
jmp
adc
and
sbb
arpl
test
adc
adc
enter
inc
xchg
ds
sub
sub
ret
fsubs
pop
mov
roll
aaa
dec
and
mov
or
mov
xor
add
stc
fwait
dec
jo
test
ds
push
fldl
scas
pop
lea
enter
push
sbb
and
sti
fnsave
loopne
sub
scas
movsb
stos
clc
pop
leave
es
cli
loop
xchg
scas
inc
cltd
jne
xor
jbe
fisubrs
aaa
out
repnz
scas
mov
mov
pop
adc
cmpsb
pop
push
mov
sub
adc
lock
lods
push
rclb
xor
fadd
das
inc
dec
arpl
ficoml
xchg
mov
inc
sbb
mov
add
pusha
imul
push
push
pop
divb
cmp
into
adc
dec
scas
sti
xor
jno
aad
movsb
adc
gs
sub
stos
out
push
inc
jnp
jb
inc
iret
popa
sub
xchg
mov
mov
jp
lcall
mov
mov
adc
fnstcw
nop
mov
mov
jecxz
out
bound
mov
xchg
xchg
lahf
fucom
push
aad
fldt
dec
mov
dec
xor
and
add
daa
in
rcll
xchg
gs
movsb
stc
les
mov
insb
jno
dec
xchg
push
enter
iret
js
mov
mov
mov
inc
adc
cmp
cmp
mov
mov
lods
jge
dec
mov
mov
hlt
cmp
imul
lods
gs
gs
pusha
and
xor
stos
andb
jecxz
scas
gs
not
mov
out
or
nop
mov
sbb
and
cmp
cmpsb
in
cmp
imul
xor
mov
int
cmp
pusha
mov
cli
adc
jae
faddl
rolb
sub
xchg
inc
cmp
imul
or
mov
or
push
insl
inc
xor
cs
push
inc
dec
or
into
lods
cld
fadds
movsb
popl
and
xchg
xchg
lahf
jo
leave
fcomps
int3
jge
sbb
sbb
and
loop
enter
imul
fs
xchg
inc
clc
fcoms
and
sub
fistps
push
push
shlb
and
scas
add
insb
pop
das
sub
ret
mov
imul
imul
mov
ss
gs
aam
hlt
testb
rorb
jbe
cmp
stos
nop
fidivrs
xchg
dec
pop
sbb
jno
in
divl
lds
test
sbbb
inc
xchg
jg
lds
mov
add
addr16
in
and
jp
jne
sbbb
enter
adc
sub
shl
inc
fdiv
add
sbb
mov
aas
mov
out
out
pop
insl
shr
xorl
push
dec
popa
shll
pushf
daa
out
into
jo
dec
sub
push
sub
icebp
xchg
pop
mov
add
adc
and
test
cld
frstor
lret
mov
push
mov
lock
sub
sbb
jnp
add
leave
mov
xchg
mov
jbe
ja
outsl
cwtl
adc
push
mov
sub
sub
hlt
ret
adc
loop
dec
add
dec
cwtl
mov
inc
ds
ds
mov
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
jmp
jg
dec
dec
sub
loop
mov
mov
adc
adc
lret
test
ficomps
cwtl
js
jecxz
push
aad
cmp
iret
jmp
xlat
gs
test
dec
adc
xchg
push
ror
mov
orb
lret
cltd
das
loopne
or
outsb
mov
mov
and
mov
lahf
inc
fsubrp
mov
popf
add
inc
or
dec
add
lret
lock
js
mov
rolb
mov
xchg
pop
mov
inc
jne
jns
lret
sbb
popf
mov
lahf
or
rcrl
mov
inc
jbe
pusha
lea
gs
ret
sbb
lods
arpl
popf
push
jo
pop
fmulp
pushf
ror
out
dec
push
sbbl
lods
pusha
into
addb
in
in
sub
mov
lods
pop
jp
outsl
outsb
push
bound
test
push
imul
mov
test
icebp
repnz
push
jno
repz
dec
leave
fisubrl
in
sub
dec
xlat
mov
stos
ds
cwtl
sub
xchg
jmp
cs
push
repnz
jb
jno
mov
shl
cmp
subl
mov
inc
cs
cmp
mov
mov
mov
xor
fwait
in
faddl
add
xor
hlt
cmp
jns
lock
or
pop
notb
push
clc
adc
jbe
aas
gs
gs
jp
xchg
add
es
push
stc
rclb
mov
and
xor
push
push
push
mov
in
adc
xor
call
jno
xor
adc
jmp
sti
pushl
xchg
mov
rolb
cmp
mov
xor
pop
arpl
popa
add
icebp
xlat
sub
dec
pop
mov
jae
xor
xchg
jne
repz
xor
imul
repnz
pop
les
jp
jo
fistpl
pusha
lods
push
pop
lock
cmp
ds
mov
ljmp
popl
inc
scas
cmp
sbb
pop
test
xchg
scas
push
cmp
popa
test
pushf
pop
add
sub
lret
push
nop
sbb
frstor
out
adc
jle
xchg
lret
mov
imul
aas
adc
xchg
iret
push
mov
lds
clc
out
shlb
mov
cmpl
mov
adcl
lcall
lock
into
mov
stc
mov
int3
xchg
enter
insl
mov
jl
fisubrl
add
out
inc
sbb
fisttpl
sbb
cmp
loope
movl
jns
xchg
xor
push
xchg
fsub
adc
iret
imul
in
fs
dec
lods
xchg
pop
dec
mov
mov
sbbb
movsl
arpl
adc
sbb
mov
push
les
int
and
jnp
dec
mov
ret
int3
mov
mov
jmp
xchg
scas
fisubrs
pusha
sbb
and
xor
xor
pop
dec
mov
imul
inc
sub
add
push
lea
test
sub
fbld
or
dec
lahf
sti
add
aad
fwait
cmp
inc
and
jl
jmp
mov
and
inc
add
mov
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
pusha
cmp
push
inc
dec
adc
adc
fcmovnu
cmp
xor
lock
jl
dec
push
cmp
loope
mov
scas
jb
xchg
mov
shll
or
push
xor
out
mov
mov
dec
clc
ds
cld
lcall
orb
jp
inc
jne
and
loope
push
cwtl
out
mov
mov
xor
ret
inc
xchg
sbb
jge
cmpsl
test
lahf
lahf
out
jl
cmp
cmpb
jns
xor
aaa
sbb
ret
jno
push
hlt
js
cmpsb
xor
rcll
pop
push
and
add
pusha
mov
pop
repz
pop
pop
or
fmuls
lods
pop
cwtl
lahf
push
sbb
fsubrl
cli
mov
xchg
stos
lds
and
push
lods
push
in
cmp
movsb
inc
cmc
ljmp
test
movl
in
xor
add
lret
loopne
xchg
lods
fadds
pusha
sti
mov
call
jno
inc
aas
iret
push
fidivrs
pop
lcall
or
inc
inc
ret
dec
dec
jp
lds
in
sbb
or
xor
sbb
int3
aam
and
pop
push
repz
xor
mov
fcoms
xor
in
fisttpl
int3
ja
dec
mov
shlb
xor
fisubs
and
subb
cltd
ljmp
mov
aam
roll
mov
jne
and
ja
dec
outsl
or
and
ret
jno
mov
idivb
mov
or
in
call
dec
enter
dec
lock
imul
dec
stos
pop
cmp
mov
or
pop
xchg
jecxz
mov
xchg
add
jl
jne
sbb
dec
cs
cmpsb
mov
cmp
dec
sbb
jge
add
rorl
jmp
sbb
or
shrl
ss
mov
stc
xchg
mov
inc
xchg
and
pop
in
or
arpl
add
ret
test
divl
pop
and
xor
insl
hlt
xchg
sbb
inc
hlt
adc
or
mov
es
out
mov
das
das
inc
push
push
or
and
cmpl
cli
lds
cmpsl
adc
mov
jo
nop
or
sbb
pop
aas
xor
or
ret
dec
sub
lock
or
add
add
mov
mov
addb
or
xchg
and
mov
outsl
inc
sbb
lea
jge
das
addr16
lahf
icebp
mov
mov
lahf
push
es
daa
sub
lret
jg
mov
shl
movsb
aad
add
ss
cmp
lods
sub
movsb
negl
jnp
pop
xor
pop
xor
imul
data16
jo
or
mov
pop
mov
ret
push
sub
dec
push
dec
out
pop
push
xchg
pop
pushf
adc
sbb
sahf
push
or
xor
adc
insl
call
andl
sub
and
and
pushl
jo
pop
into
dec
jecxz
cmpsb
sub
push
lods
lock
clc
in
xchg
push
mov
sbb
pop
int
add
cmp
pop
jne
movsl
adc
jns
shl
or
rcll
xchg
addb
test
lcall
jno
add
test
push
or
add
test
call
test
decl
pushl
shl
icebp
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
jmp
test
sub
sbb
xchg
push
push
mov
mov
filds
stos
adc
adc
insl
sbb
mov
add
and
pop
jne
out
xlat
std
pusha
les
les
xor
movsb
into
loope
cs
inc
enter
xor
push
stc
test
push
add
adc
sarb
bound
dec
popa
push
adc
cwtl
imul
neg
mov
andl
xchg
adc
inc
mov
stos
cltd
in
in
sub
mov
adc
fildll
movsb
add
mov
inc
cmpsb
pop
addr16
jp
inc
xor
sbb
xchg
aad
pop
pusha
insl
mov
divb
stc
pop
leave
aas
aas
pop
repz
pop
cmp
xchg
subb
cmpsl
aad
les
testb
insb
or
xchg
mov
mov
dec
adc
mull
xchg
pop
jle
xor
decb
dec
mov
adc
cmpl
sbb
in
jecxz
fcmovnbe
test
mul
iret
cmpsl
or
add
dec
xchg
xchg
cli
and
mov
push
aas
cmp
mov
cmpsl
cli
sub
add
inc
push
scas
pop
js
shll
push
jg
mov
cmpl
sbb
sbb
pop
jae
jle
pusha
jl
add
iret
pop
jns
into
repnz
lods
cmp
in
mov
cltd
fisubl
add
mov
pop
mov
push
mov
cltd
les
imul
pop
push
in
xor
xor
cmc
mov
lea
in
sub
jl
pusha
pop
insl
fidivs
in
jmp
dec
aas
mov
pop
sbb
mov
mov
mov
hlt
xor
jbe
test
mov
call
xchg
fnstcw
xchg
cmpl
movsb
daa
outsb
outsb
imul
in
xchg
inc
jle
dec
imulb
nop
mov
mov
fdivr
jae
stos
pop
xchg
jo
dec
scas
nop
and
mov
adc
iret
stc
mov
mov
loop
jnp
xor
aas
dec
ficoml
mov
cmp
cmpsb
fldenv
mov
dec
dec
jle
cmp
mov
cld
cmp
add
xor
lea
int
pusha
ljmp
sub
iret
call
inc
ss
mov
adcb
out
repz
stos
sub
inc
jnp
subb
add
mov
out
repnz
out
stos
cmp
test
xor
pop
jo
xchg
sub
add
pop
push
and
rol
adc
out
push
jbe
sti
out
out
inc
stos
and
xor
stos
mov
or
and
and
aaa
scas
mov
pushf
xchg
jge
adc
dec
jo
paddusb
push
mov
aam
daa
jmp
ret
sbb
or
adc
repz
imul
jns
or
and
jns
inc
fcmovnbe
movsb
cltd
push
add
int3
sub
testb
mov
adc
jae
mov
mov
sti
sbb
ret
bound
shll
popf
cmpsl
jae
aaa
fdivrl
test
hlt
ss
push
arpl
cmc
in
fisttps
pop
jle
and
cli
mov
push
add
outsl
loope
bound
jle
pop
pop
mov
add
mov
orl
xchg
fs
push
cmp
aas
adc
adcl
ja
push
xlat
sub
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
mov
pop
cmp
movsl
mov
push
adc
xchg
mov
xchg
call
sbb
fimuls
hlt
dec
cs
repz
js
mov
cld
mov
mov
push
std
add
or
lret
sti
call
in
cmpsl
pop
sbb
xchg
push
je
fs
andl
cld
add
xchg
data16
mov
mov
pop
repz
mov
iret
mov
push
aaa
orl
iret
jge
pop
mov
adc
pop
sub
sti
and
cli
pushf
clc
adc
push
cltd
sub
push
hlt
test
jnp
cmp
fcoml
or
or
shlb
ja
fdivrs
xor
out
or
pop
popf
or
push
sti
jge
jmp
fisttps
aad
jbe
mov
xchg
iret
out
shll
adc
sub
mov
and
jmp
sbb
jecxz
mov
fidivrl
lods
xor
push
xchg
cmp
daa
inc
mov
shrl
sbb
dec
test
dec
ds
addl
mov
jns
pop
insb
sbb
popf
add
mov
xchg
push
pop
push
mov
je
dec
sbb
xchg
mov
mov
jno
jns
in
popf
ljmp
jne
stos
nop
adc
out
sub
cmpsb
test
lcall
cwtl
or
fdivl
pop
movsl
sbbl
inc
ud2
ds
imul
inc
adc
dec
int3
out
rcl
sub
lahf
cli
mov
mov
popl
enter
or
cwtl
push
cmpsb
adc
loop
push
ds
scas
mov
gs
shll
mov
fs
fdivl
loopne
xor
test
adcb
test
xchg
js
or
negb
mov
outsb
or
out
inc
jns,pn
mov
movsb
mov
pop
leave
adc
add
fimull
xor
dec
std
mov
push
pushf
call
outsl
movsb
fs
sbb
mov
push
ds
cmpsl
xchg
pop
es
jo
add
inc
out
out
xchg
cmp
mov
lahf
mov
lods
lret
xchg
xor
inc
jl
xchg
leave
inc
sti
daa
mov
mov
addb
ja
dec
pop
cmp
movsb
xorl
sub
add
cld
pop
out
cmc
or
out
sarb
and
ds
add
push
icebp
xor
adc
cmp
and
xor
push
iret
sahf
mov
mov
mov
sub
cmp
out
fs
push
jecxz
sbb
lahf
stos
and
adc
std
and
mov
cmp
jno
leave
jns
mov
jecxz
cld
sar
jl
jb
imul
lds
mov
clc
and
out
mov
fcmove
push
xlat
test
mov
js
mov
jae
sbbb
push
stos
fisttpl
and
ja
jp
pop
rol
mov
fildl
in
loop
jl
add
adc
test
inc
je
jge
test
mov
cld
inc
mov
aas
movsl
mov
lock
test
stos
adc
lcall
and
leave
shlb
mov
lods
dec
outsb
sbb
adc
icebp
fsts
sbb
sub
mov
jo
xor
mov
call
or
or
add
mov
mov
jmp
jbe
ja
cmp
aam
xchg
bound
sysenter
adc
adc
xor
lret
mov
xchg
xor
mov
ret
xchg
cltd
cmp
repnz
clc
adc
leave
push
xor
jg
mov
dec
cmp
les
and
movsb
sti
aas
push
fwait
movsl
dec
cmpsb
bound
push
or
inc
mov
aam
inc
mov
cmp
std
outsl
pop
dec
sub
pop
mov
test
loope
loope
iret
push
sub
cmc
in
fimull
and
add
xor
adcw
and
inc
stos
fwait
cmp
pusha
popf
sbb
xor
in
push
aas
and
cli
xor
in
push
lret
jne
ss
dec
js
pop
jp
inc
addl
mov
cwtl
xchg
jmp
enter
int3
andl
int3
xor
adc
flds
push
jae
push
rcrb
mov
ss
clc
stos
xor
inc
mov
faddl
test
pushf
jmp
mov
mov
inc
fwait
inc
aaa
flds
jbe
in
sbb
mov
cmpsl
rcll
xor
jle
lret
cmp
shrb
push
lock
add
and
and
mov
or
sub
fwait
sub
xchg
into
mov
clc
push
icebp
adc
sbb
out
mov
pop
int3
add
sub
mov
aaa
lock
adc
mov
pop
xorb
scas
dec
mov
stc
shr
jle
adc
lcall
lcall
mov
lods
mov
lods
dec
rorl
dec
mov
cmp
sub
adc
mov
cmp
xlat
shll
mov
cs
nop
xchg
cmp
hlt
add
sub
jb
xchg
add
stc
adc
fsubl
adc
out
pusha
in
popa
xlat
into
test
test
cs
jmp
xchg
jle
call
out
adc
adc
add
adc
jno
lret
lret
dec
mov
or
rcll
mov
pop
mov
jge
push
iret
shrl
cmp
repz
aaa
fcoml
add
aam
into
push
pushf
in
fimuls
repz
call
in
inc
ja
add
jo
xchg
inc
rclb
xor
call
loop
ficompl
jns
shlb
push
stos
aaa
scas
pop
dec
mov
mov
test
jae
and
es
mov
stos
clc
or
movsb
sbb
push
ds
push
xchg
lods
pop
mov
ret
mov
arpl
mov
repnz
stc
and
mov
xchg
dec
hlt
xchg
hlt
add
pop
cmp
in
nop
out
or
and
sub
loopne
movsb
mov
push
push
aad
dec
mov
test
pop
pop
xchg
push
mov
arpl
in
jle
jle
jl
cmp
inc
add
jno
jmp
pminub
and
inc
arpl
push
and
jo
rcll
pop
cltd
int3
cld
dec
sub
xor
in
aam
mov
dec
cmp
addr16
jg
ljmp
dec
data16
xlat
mov
sbb
imul
add
iret
pop
mov
add
sbb
fs
std
xlat
jge
jb
mov
sbb
xchg
xchg
les
lods
daa
sbb
scas
push
xchg
stos
xor
test
decl
test
add
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
jmp
jnp
add
xor
ljmp
stos
adc
adc
cmc
pop
sbb
loop
je
dec
mov
shr
adc
mov
das
aas
cmpl
in
xor
add
outsl
fdivrl
lret
and
arpl
test
imul
ret
mov
lret
pop
int3
mov
cmpsl
xor
xchg
mov
xor
test
or
push
mov
mov
mov
dec
mov
pop
subb
hlt
lods
jo
mov
jnp
mov
imul
shlb
xor
sub
repnz
into
insl
cmp
push
dec
xor
and
mov
rorl
jae
movsl
aam
xor
jp
mov
in
cmp
imul
pop
inc
popf
lea
dec
rcll
mov
lock
pop
mov
pop
jp
jno
mov
pop
test
or
add
cli
ss
cmp
inc
cwtl
dec
lret
and
dec
mov
fdivrl
out
lods
cmp
xchg
mov
or
mov
jg
jo
add
out
repnz
ljmp
sub
mov
mov
in
aas
jbe
enter
in
jae
or
sbb
sub
rolb
and
fdivl
loope
lock
and
mov
xor
jg
imul
outsl
mov
pop
ffreep
mov
xchg
mov
jns
cmp
xlat
mov
jo
pop
pop
aam
xchg
pop
mov
movsb
imulb
jnp
aam
test
lret
hlt
xor
arpl
in
in
push
or
cmp
push
sub
mov
cmp
dec
sbb
loop
add
js
aas
cwtl
lock
daa
ja
mov
or
arpl
sub
addr16
xchg
inc
imul
repnz
scas
hlt
sub
mov
lret
mov
cli
adc
popa
sbb
lcall
mov
lahf
dec
lods
inc
mov
pop
pop
movsb
adc
mov
in
sbb
push
insl
nop
loop
mov
je
cmp
repz
pop
negb
mov
and
in
xchg
dec
fistpll
push
sbb
cmp
out
ret
or
daa
div
jno
stos
lods
mov
rcr
lds
cmpsl
ret
cmp
or
jnp
fbld
pop
jl
or
aaa
mov
pusha
xchg
pop
push
xchg
adc
and
xor
jnp
sbb
scas
sbb
movsb
scas
mov
insb
in
repz
jmp
addps
mov
fdivrp
cmp
jmp
sahf
pop
ror
inc
das
inc
adc
inc
shll
pusha
aaa
xchg
sub
and
std
iret
xchg
mov
pop
add
pop
xor
mov
out
aam
lods
mov
sub
nop
sub
fmull
push
lock
push
pushf
jmp
push
pop
mov
and
lcall
inc
hlt
jnp
fstl
mov
mov
adc
inc
mov
ret
push
rorl
jg
imul
ja
pop
jl
xor
lahf
call
xchg
mov
push
sbb
addr16
pop
mov
jo
movb
jle
mov
push
mov
dec
or
sub
adc
mov
cmp
jns
test
xchg
fs
pop
ja
add
mov
dec
outsb
push
push
mov
es
push
or
rorl
rorb
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
jmp
popa
rolb
and
loopne
insb
ja
lcall
adc
adc
into
pushl
and
push
out
test
in
sub
and
jns
adc
arpl
sbb
fmuls
mov
push
adc
fwait
cmp
mov
mov
and
inc
push
sbb
jne
jecxz
mov
je
mov
xchg
or
dec
fcmovu
imul
lahf
scas
sti
push
out
es
add
or
mov
ror
iret
mov
mov
out
dec
je
iret
repz
dec
pushf
sub
fistl
roll
xor
push
out
movsl
push
cmp
pop
daa
test
adc
or
idivb
push
in
inc
incb
pushf
dec
sub
andb
lods
or
pop
cmc
dec
pop
add
xor
out
ss
scas
movsb
xchg
cmpsb
mov
fsubr
pop
imul
pushf
pop
jg
cmp
mov
or
push
push
push
dec
int3
imul
cmp
decb
sahf
pop
test
mov
loope
jge
fdivl
and
dec
jb
fisubl
jp
xchg
sub
out
lret
fistps
inc
sbb
xlat
hlt
push
push
ret
inc
subb
fs
or
sub
pop
lret
inc
adc
vmread
mov
and
aad
jns
aad
and
dec
pop
rcrb
sbb
xor
out
sbb
fs
mov
loop
dec
ret
add
or
xchg
mov
mov
pop
push
andb
jb
cmp
adc
repz
dec
test
gs
push
mov
ret
adc
in
push
add
shl
cmpsl
fwait
mov
gs
xorb
jbe
pushf
lock
shll
mov
push
aas
lahf
dec
pop
and
jge
sub
cwtl
jo
adc
and
add
lods
out
stos
pop
jmp
jecxz
jnp
lock
roll
sbb
sahf
and
loope
push
or
mov
lods
das
iret
clc
mov
mov
and
xchg
dec
sahf
imul
in
or
rolb
je
sbbl
push
pop
add
daa
imul
loope
leave
mov
dec
test
mov
jns
clc
mov
add
out
in
and
fcomps
in
sbb
inc
addr16
imul
and
mov
sub
dec
dec
cmp
out
dec
enter
aas
push
lds
xchg
ja
sbb
and
in
mov
fwait
daa
mov
sbb
push
inc
out
pusha
and
xchg
stc
dec
cmp
fiaddl
or
inc
inc
mov
sbb
push
mov
aad
outsb
dec
pop
mov
int
movsl
inc
mov
mov
popa
loope
aaa
pop
lret
jae
jns
dec
imul
xchg
test
aad
in
jmp
lahf
call
mov
fcmovne
push
ss
adc
vaddsd
add
lods
mov
adc
cmp
mov
outsl
xchg
pop
sbb
adc
sti
lahf
sti
les
mov
mov
dec
scas
orb
mov
mov
cmpb
and
movsl
mov
loopne
xchg
pop
mov
js
push
add
dec
inc
sub
dec
mov
lock
xchg
xchg
add
xchg
sbb
inc
push
icebp
test
xchg
imul
inc
jg
ja
mov
mov
inc
popa
in
fidivs
add
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
jmp
test
push
cmpsb
inc
sbb
cltd
adc
mov
fsubs
adc
adc
adc
push
adc
je
mov
icebp
adc
out
or
add
jmp
test
lock
inc
mov
xchg
scas
repnz
icebp
xchg
or
jge
test
stos
loopne
xor
rcl
push
repnz
insb
or
rclb
jne
dec
mov
pop
push
cmp
in
sub
mov
aaa
inc
and
sbb
dec
push
pop
sbb
insb
fstps
inc
adc
test
mov
inc
add
xchg
xchg
mov
popf
dec
jns
cmp
aad
out
add
pop
mov
int3
mov
mov
jne
push
insb
add
shl
cmp
es
repz
sub
mov
ss
int3
xor
clc
or
mov
inc
push
subb
jb
inc
out
and
ss
adc
and
fwait
ss
inc
fbld
shlb
loopne
sbb
testl
iret
stos
inc
add
lea
push
sbb
or
int
cmp
sbb
cwtl
movsb
inc
cmpsb
jns
mov
std
xor
xor
leave
pop
shlb
aas
add
cmp
push
mov
ret
or
pop
adc
bound
scas
fistpll
rclb
cmpsl
push
inc
add
mov
das
mov
ret
pmulhuw
in
push
or
arpl
and
fidivrs
adc
mov
lock
jbe
rcll
cmp
loop
in
fwait
ja
dec
pop
jmp
ret
adc
dec
mov
icebp
push
jno
sbb
mov
or
popa
data16
mov
subb
cmc
xor
fcmovb
dec
or
xlat
mov
jle
into
sub
xor
lods
adc
insb
subl
iret
fistpl
mov
mov
pop
adc
sbb
push
mov
dec
xchg
clc
out
xchg
lock
jl
popa
pop
fsubrs
sbb
dec
dec
jge
lahf
sub
in
add
cmp
repnz
add
mov
pop
jecxz
inc
mov
mov
je
dec
fidivrl
pop
sbb
lret
pop
popa
and
icebp
inc
dec
pushf
mov
jno
jo
cmp
loope
mov
cmpsl
mov
and
mov
inc
lea
loope
add
out
mov
in
cltd
mov
pop
pop
sub
sarl
lcall
mov
mov
push
outsb
lea
add
cmp
lret
jl
addr16
out
icebp
mov
aad
hlt
xor
jp
add
dec
inc
addr16
ficompl
sub
mov
mov
push
cmpsb
mov
push
jge
dec
xchg
xchg
ret
and
add
and
lret
xor
movsl
jno
sub
inc
mov
idivb
mov
add
pop
pop
fcoml
imul
sub
cmp
stos
adc
shlb
push
repnz
aas
push
test
das
js
test
jnp
out
lea
push
cmp
add
ret
arpl
inc
fnsave
and
inc
inc
jge
into
cli
jae
shlb
inc
fidivl
add
mov
mov
mov
jmp
or
mov
adc
int3
xor
outsl
sbb
adc
lcall
mov
mov
jle
cmc
fcmovbe
repnz
cmpsl
out
sarb
popa
xchg
pop
or
jns
loopne
stos
add
jecxz
jecxz
fs
inc
gs
mov
dec
jl
xor
mov
mov
mov
dec
es
pop
lahf
or
mov
or
cmp
jno
test
mov
or
jmp
cmp
fbld
adcb
mov
inc
arpl
jg
loope
daa
cmp
mov
lret
add
std
icebp
addr16
out
push
xchg
dec
lret
test
mov
rcrl
outsl
gs
cmpsb
pop
pop
xchg
pop
movsb
cmp
cld
fildl
adc
sub
jns,pn
clc
sbb
repz
xor
insl
stos
iret
lods
sub
cmp
lods
outsb
data16
jg
clc
pop
mov
push
shll
pusha
lahf
sete
out
fsubrl
sarl
repz
jle
jns
subl
lret
iret
or
jne
mov
test
mov
dec
jne
faddl
in
mov
inc
aam
cli
addl
out
rolb
cmpsb
add
imull
jno
sub
or
ja
cmp
adc
into
mov
adc
test
outsb
mov
iret
push
nop
loop
sbbl
lcall
adc
clc
mov
push
ficompl
inc
xor
arpl
int3
test
mov
mov
ljmp
ficomps
jns
mov
out
je
xor
mov
nop
loope
mov
mov
xchg
mov
nop
mov
pop
shll
sub
popa
insl
negl
xlat
test
outsb
fcoms
clc
mov
test
sbb
cmpsl
jae
mov
mov
and
jge
outsl
dec
push
and
jle
stos
dec
rorl
inc
push
loop
push
pop
and
xchg
movsb
sub
lods
pop
jmp
cmp
ljmp
add
dec
cmp
jno
popa
loopne
or
fsubl
xchg
and
mov
repz
inc
xchg
mov
add
mov
mov
add
sub
pop
jg
and
dec
add
or
sub
jne
add
lahf
cmpsb
pop
fldl
pop
mov
lcall
stc
xor
idivb
sub
xor
dec
inc
mov
stos
sarl
mov
adc
sub
and
ficompl
in
je
inc
stos
xor
inc
lock
cmpsl
clc
subb
add
shrd
jge
mov
pushl
adc
inc
add
fwait
aaa
subb
iret
adc
sarb
in
out
cmp
cmp
mov
push
sub
icebp
dec
notl
sub
cmp
cmc
outsl
add
jae
imul
js
nop
xchg
dec
data16
dec
notl
adc
ffreep
inc
ds
inc
add
push
int
pop
imul
dec
loop
and
jne
data16
xchg
sti
push
insb
mov
cwtl
imul
or
mov
fsubl
fsts
mov
gs
cmc
loop
iret
test
mov
std
stc
ss
call
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
jmp
insl
into
leave
mov
jne
lret
pmulhuw
adc
adc
jmp
shl
movsb
adc
jp
pusha
sahf
xchg
lock
movsb
sbb
fdivs
insl
icebp
loope
jb
push
jne
pop
in
jbe
xchg
nop
push
outsb
fnstcw
pushfw
insb
jmp
dec
mov
mov
shr
cs
outsb
inc
jnp
xor
fdivl
inc
outsl
push
les
adc
push
mov
leave
ljmp
lods
mov
pop
jne
int3
in
stos
push
mov
pushf
sub
inc
leave
or
pop
loopne
jb
xchg
call
into
adc
idivl
lret
jecxz
fstpt
cld
push
aas
std
icebp
fs
and
addr16
loop
sbb
inc
mov
cld
xchg
int3
mov
pusha
inc
sbb
pusha
inc
stos
mov
repz
push
jg
loopne
jmp
stos
lahf
fnstenv
sahf
dec
fisttpll
add
out
xchg
in
lret
adc
popf
or
sub
sub
adc
mov
cmpsb
mov
ret
punpckhdq
cltd
call
jo
jnp
imul
shlb
imul
hlt
out
fisttpll
dec
cmp
fiadds
sub
jecxz
shlb
jbe
fidivrs
mov
dec
out
out
in
cmc
pop
xchg
cmpsb
mov
xchg
mov
jle
std
data16
dec
or
sahf
sub
cld
mov
sub
jmp
shll
pop
mov
pop
pop
in
jmp
outsl
test
xor
push
sarb
xchg
call
lahf
push
loop
imul
sbb
enter
lods
outsl
mov
stc
inc
cli
icebp
jo
push
mov
in
mov
stos
lods
fdivrs
add
fsubs
adc
cmp
movsb
sti
adc
loopne
or
aam
fstl
imul
movsl
mov
xchg
loope
sbb
xchg
adc
negl
sbb
push
push
iret
ss
sub
jecxz
or
add
test
insb
jmp
fistpll
mull
xchg
mov
mov
jle
loopne
fs
or
push
in
rcrl
sti
xor
fistps
xchg
and
mov
cmpb
inc
adc
es
out
adc
dec
das
pop
mov
xor
pop
xor
jae
mov
cmp
add
inc
int
cmp
sbb
vpshad
pop
inc
into
ljmp
sahf
ret
add
xor
aam
push
jecxz
in
stos
mov
xchg
push
mov
jbe
pushf
js
bound
loop
data16
test
shll
push
rcl
sarb
or
inc
push
xchg
hlt
jo
mov
sub
inc
jp
push
jecxz
lcall
push
imul
test
fdivrl
xchg
push
or
push
aas
sub
aas
into
ljmp
js
aaa
mov
out
cmpsb
inc
push
sti
or
cld
stos
fsubrl
xor
cmp
mov
adc
fsts
mov
pop
test
mov
std
enter
xchg
shl
test
jmp
or
xchg
xchg
or
push
outsb
das
daa
mulb
pop
pop
fwait
enter
or
add
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
mov
xchg
pop
mov
dec
mov
mov
adc
enter
jge
ficoml
repnz
pushl
pushf
rcrl
mov
mov
mov
mov
jb
ja
add
lods
fimull
stos
mov
sbb
jns
cmp
inc
sub
xchg
movsb
mov
adc
cmp
sahf
push
ret
jle
mov
pop
add
or
mov
cmpb
pop
arpl
adc
cmp
push
dec
ljmp
stos
lcall
xchg
xorb
jmp
mov
orl
xchg
push
aaa
loop
inc
inc
cld
xchg
ret
loop
mov
pop
jmp
adc
pop
out
insb
and
or
lret
cwtl
pop
mov
outsb
push
jbe
shll
leave
push
test
cwtl
fs
pop
pop
jg
iret
mov
xchg
mov
aam
shrl
lret
and
or
mov
jno
push
lock
fisubl
jp
shll
mov
cli
mov
out
fucomp
out
cmc
je
lea
inc
cltd
xor
push
jl
mov
push
ljmp
cmp
cmpl
lods
pop
loope
mov
shll
sub
imul
fsubs
jge
inc
push
add
stos
sarb
dec
add
adc
sarb
pop
scas
out
sbb
lock
call
lcall
add
add
fmuls
cli
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
cmpl
movl
notl
movl
jmp
mov
jg
pushl
pushl
push
call
adcl
orl
adc
sbbl
orl
addl
notl
push
movzbl
sub
mov
or
jne
mov
and
mov
mov
sbbl
xor
div
sub
mov
mov
and
mov
div
notl
mov
jmp
xor
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
cmpl
movl
je
and
add
movzbl
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
cmp
jae
subl
shld
movl
shl
ret
cmpl
mov
mov
jmp
movl
je
pushl
push
call
xorl
adcl
sbb
and
xor
adc
adc
mov
xor
and
shl
ret
xor
xor
ret
