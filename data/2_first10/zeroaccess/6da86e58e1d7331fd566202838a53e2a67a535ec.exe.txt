push
mov
sub
orl
push
adcl
push
decl
xor
notl
inc
push
push
call
test
movl
je
lea
notl
push
adcl
call
movl
jmp
subl
push
mov
push
subl
push
subl
call
sbbl
test
movl
je
lea
andl
push
incl
call
jmp
xorl
push
mov
addl
push
adcl
push
push
andl
call
test
movl
je
sbbl
lea
xorl
push
orl
call
movl
jmp
push
sbbl
push
sbbl
call
decl
test
jne
push
push
call
adcl
test
movl
jne
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
push
call
xorl
test
movl
jne
sbbl
push
push
sbbl
push
sbbl
call
adcl
test
movl
jne
subl
push
addl
push
call
test
movl
jne
orl
push
push
xorl
call
test
movl
jne
push
orl
push
sbbl
call
test
movl
jne
orl
push
push
subl
push
xorl
call
test
jne
subl
push
adcl
push
xorl
push
orl
call
subl
test
movl
jne
push
push
adcl
call
test
movl
jne
push
adcl
push
subl
call
adcl
test
jne
orl
push
subl
push
call
xorl
test
movl
jne
push
push
sbbl
push
call
sbbl
test
movl
jne
push
push
push
call
sbbl
test
movl
jne
adcl
push
push
sbbl
call
test
movl
jne
movl
push
orl
push
call
xorl
test
movl
jne
push
push
subl
call
subl
test
movl
jne
xorl
push
andl
push
push
sbbl
call
test
movl
jne
xorl
push
andl
push
orl
push
addl
call
xorl
test
movl
jne
movl
push
andl
push
call
test
movl
jne
sbbl
push
adcl
push
movl
call
xorl
test
jne
orl
push
orl
push
call
test
movl
jne
push
subl
push
adcl
push
addl
call
addl
test
movl
jne
addl
push
push
push
call
test
jne
subl
push
xorl
push
subl
call
notl
test
movl
jne
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
call
test
jne
orl
push
push
andl
push
call
subl
test
movl
jne
push
andl
push
push
call
subl
test
jne
push
push
call
orl
test
jne
addl
push
subl
push
call
test
movl
jne
xorl
push
push
subl
call
test
movl
jne
push
push
push
movl
call
sbbl
test
movl
jne
push
andl
push
orl
push
call
andl
test
jne
push
orl
push
call
test
jne
push
subl
push
orl
call
orl
test
jne
push
push
call
test
jne
andl
push
push
push
call
movl
test
jne
push
sbbl
push
push
orl
call
test
jne
adcl
push
subl
push
call
test
movl
jne
push
adcl
push
movl
call
decl
test
movl
jne
xorl
push
movl
push
addl
call
test
jne
andl
push
push
push
xorl
call
orl
test
movl
jne
notl
push
orl
push
subl
push
xorl
call
test
jne
subl
push
subl
push
call
test
jne
push
xorl
push
call
test
jne
push
orl
push
addl
call
orl
test
movl
jne
push
orl
push
push
call
orl
test
jne
push
push
notl
push
adcl
call
sbbl
test
movl
jne
adcl
push
push
orl
call
sbbl
test
jne
push
addl
push
andl
call
xorl
test
jne
sbbl
push
addl
push
call
subl
test
movl
jne
push
orl
push
push
addl
call
test
movl
jne
push
incl
push
push
andl
call
movl
test
jne
addl
push
andl
push
call
test
jne
push
notl
push
call
test
jne
push
push
addl
call
test
movl
jne
xorl
push
push
adcl
push
sbbl
call
test
movl
jne
adcl
push
push
sbbl
push
subl
call
test
jne
incl
push
movl
push
subl
call
test
movl
jne
push
andl
push
addl
call
test
movl
jne
addl
push
push
call
test
jne
addl
push
sbbl
push
adcl
push
call
xorl
test
movl
jne
push
andl
push
adcl
push
sbbl
call
sbbl
test
jne
addl
push
push
call
orl
test
jne
andl
push
subl
push
call
xorl
test
movl
je
sbbl
xor
movl
jmp
movl
dec
mov
movl
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
decl
mov
movl
not
lea
sbbl
mov
mov
add
mov
lea
inc
mov
adc
mov
and
mov
mov
mov
sub
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
movzwl
add
xor
movzbl
xor
mov
subl
add
movl
mov
mov
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
pushl
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
mov
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
jmp
adc
add
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
add
xor
movzwl
or
add
adcl
mov
and
mov
mov
orl
mov
mov
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jb
mov
neg
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
sbb
mov
movzbl
add
mov
mov
xor
mov
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
sub
mov
xor
subl
add
movl
jmp
mov
mov
xor
andl
lea
push
mov
orl
xor
orl
lea
push
mov
addl
pushl
subl
call
and
mov
decl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
lea
sub
mov
mov
movl
xor
addl
xor
add
sbbl
mov
adcl
xor
lea
movl
mov
cmp
jbe
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
mov
mov
sub
movl
mov
mov
sbb
mov
push
adc
mov
xor
mov
andl
push
or
mov
sbbl
add
movl
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
sub
mov
xorl
mov
jmp
inc
stos
pop
mov
mov
pop
xchg
jno
jp
jp
pop
jp
adc
pop
cmp
popa
cmp
push
pusha
push
imul
inc
imul
jl
push
iret
pop
dec
cmp
cli
xchg
dec
jg
mov
sub
data16
push
jg
jmp
xchg
fimuls
mov
imull
add
push
cli
es
or
imul
pop
add
jo
les
sbb
je
arpl
xchg
pop
mov
repz
cmp
or
sub
xor
push
jecxz
mov
test
inc
push
dec
or
repz
faddl
push
stc
push
push
mov
inc
sbb
fnstenv
insl
in
xor
mov
xor
xchg
xor
xchg
bound
and
add
in
mov
or
xor
jbe
pop
hlt
outsb
pop
rcr
mov
sahf
jecxz
mov
jno
xor
shl
sub
sbb
ret
in
mov
negl
fsubrl
push
gs
sbb
xchg
inc
pusha
xor
dec
icebp
lcall
imul
mov
cmp
pop
mov
fcoms
repz
aas
xor
leave
shl
enter
loop
cmp
xor
pop
jle
je
cmp
aas
push
sub
loopne
into
xchg
das
cli
mov
adc
mov
scas
dec
push
aam
and
lahf
inc
rcll
aas
push
cli
xchg
mov
loope
inc
in
or
stos
inc
bound
add
and
push
cmp
insb
test
gs
test
stos
in
cwtl
fisttps
sbb
mov
push
xchg
jne
lods
jns
cmp
sbb
nop
xchg
imul
in
cmp
mov
adc
je
fs
mov
jp
lods
js
adc
rcl
out
js
bound
movsb
xlat
mov
les
xchg
stos
in
icebp
adc
cld
push
cmpsb
test
pushf
lods
out
outsb
mov
jne,pn
lea
inc
push
les
or
dec
pop
mov
adc
ss
xchg
adc
pusha
sahf
aam
add
fucomp
sahf
push
cmp
dec
ljmp
inc
or
ret
inc
pushf
cli
mov
jbe
jno
cli
push
je
sbb
pop
xchg
sbb
int
loop
mov
orl
jne
scas
nop
js
in
wrmsr
jecxz
into
jmp
xchg
stos
mov
mov
lret
xchg
stos
add
imul
sbb
mov
das
mov
or
inc
bound
xor
bound
repz
les
sub
fsubrs
mov
sub
mov
into
sbb
je
pop
mov
xor
rcr
xchg
mov
sub
imul
call
mov
sbb
xchg
jno
pop
hlt
ret
adc
or
loop
into
cmp
jnp
add
xchg
xchg
cmp
mov
dec
ds
pusha
inc
pop
xchg
pop
repnz
idivb
dec
dec
sbb
push
push
loopne
imul
pop
pop
cwtl
jg
pushf
dec
inc
cmp
fdivs
repnz
adc
mov
decl
xchg
cmpsb
hlt
pop
mov
int3
mov
out
repz
fsubl
dec
stos
test
int
aas
adc
jg
cmp
xor
loop
mov
inc
sub
push
mov
fs
inc
adc
jne
xchg
decl
fwait
sbb
cmp
popf
mov
fs
cmp
fst
cmc
mov
stc
in
lret
ljmp
arpl
jp
pushf
lods
or
jbe
pop
rorb
xchg
pop
cwtl
aad
jns
mov
lods
xlat
lods
push
mov
pop
and
aaa
push
mov
mov
stos
xor
mov
int3
sub
mov
dec
lods
iret
andl
mov
pushf
jl
xchg
mov
dec
pop
mov
les
lret
mov
and
inc
aam
jnp
js
rolb
push
jl
dec
repz
js
sub
stos
or
inc
jb
outsl
ret
lea
addl
inc
incl
insb
jmp
inc
xchg
arpl
or
mov
lret
shlb
mov
jb
imul
scas
xchg
adc
mov
and
bound
mov
sub
or
test
sbb
inc
mov
jae
sub
scas
mov
das
xchg
mov
push
idivl
xchg
dec
cmc
sbb
adc
or
pop
imul
sbb
push
cli
mov
pop
in
les
es
and
movsb
or
lret
rcr
sbb
inc
pop
xchg
xchg
popa
sti
mulb
cmpsb
mov
add
xchg
repz
jge
push
testl
shll
arpl
mov
mov
sbb
aaa
pop
add
adc
mov
sbb
fwait
xchg
cmpsl
lret
jecxz
xchg
cmp
addb
test
mov
std
fcoms
aad
fidivrs
adc
imul
sbb
dec
out
jne
in
mov
cmpsl
push
or
inc
inc
or
add
adcl
int
sub
push
lea
adc
push
pop
pushf
inc
out
repz
sbb
and
sub
xor
sahf
and
inc
cmp
clts
and
addr16
lds
mov
inc
movsl
mov
leave
mov
and
aad
inc
xchg
fcmovnb
inc
faddl
adcl
insl
test
push
jae
cmp
jp
ja
shlb
arpl
and
fsubrs
lcall
insb
or
and
rclb
cmpsl
fidivrl
adc
xchg
pop
sbb
adc
and
fmul
push
jnp
scas
jb
or
sub
mov
movsb
inc
adc
cmp
stos
hlt
je
xor
adc
mov
scas
mov
mov
pop
pop
out
pop
push
out
ds
nop
mov
bound
adcl
cmpb
adc
sti
orb
cwtl
dec
mov
mov
mov
dec
les
sbb
rcrb
pop
xor
pop
pusha
add
test
dec
iret
mov
jbe
cmpsl
or
dec
pop
mov
lret
add
in
adc
push
cmp
pop
jmp
jl
inc
sti
daa
jo
loope
adc
xchg
es
rclb
stc
xchg
add
and
pop
sub
cmp
jp
cmp
cmp
and
pushf
mov
insl
mov
and
mov
imul
shr
inc
xchg
sbb
fwait
ret
fsts
mov
xchg
push
sub
mov
mov
sub
ffree
inc
mov
je
adc
xchg
stos
jbe
scas
test
lret
push
cmpsl
cltd
je
mov
lret
cwtl
lods
mov
xchg
inc
stc
mov
ss
adc
pop
push
push
jge
inc
sub
mov
cli
adc
adcl
sub
inc
inc
lret
fwait
mov
inc
jecxz
jns
push
outsl
pop
inc
mov
or
push
movsl
push
mov
ret
out
lea
sbb
adc
fsts
rorb
mov
outsb
imul
in
and
es
inc
cmp
ret
filds
data16
jmp
fsubrl
xchg
loopne
push
lods
inc
leave
mov
xor
jnp
shlb
or
xlat
sbb
test
sbb
sbb
js
call
pop
push
lds
out
ljmp
jne
repz
stos
jp
popf
das
imul
enter
les
mov
push
pop
std
mov
adc
lret
arpl
add
jns
xchg
repnz
lret
outsb
add
lahf
push
sti
ret
ret
cltd
dec
xor
mov
insl
jp
hlt
aaa
push
or
jae
or
iret
xor
mov
pop
jo
mov
jbe
sub
mov
xor
repnz
lahf
xchg
shlb
rcrb
packssdw
leave
push
mov
addr16
icebp
or
jb
adc
test
insl
jmp
dec
cld
fcmove
mov
lods
stos
push
cmp
xlat
daa
enter
les
shll
repnz
lea
fldt
pop
mov
cld
mov
mov
xor
addr16
stos
addr16
cmp
sub
mov
dec
es
and
cmp
xchg
xor
rolb
push
cld
mov
jns
js
mov
inc
jge
cmp
aad
insb
jno
pushf
andl
dec
addl
add
mov
pop
ud0
in
inc
movsb
xor
xor
or
enter
loop
jg
cmp
pusha
scas
fmul
add
sub
scas
test
and
rolb
and
lret
cmp
sub
mov
jnp
sbb
cld
add
imul
lret
inc
pop
cmp
iret
xorl
call
out
xor
rcrb
ss
mov
in
adc
lock
rclb
or
dec
fistl
mov
lock
dec
inc
inc
int
int3
cwtl
lret
fisttpll
ret
pop
or
adc
outsl
dec
data16
fildll
push
jns
lahf
inc
dec
and
cmp
add
push
outsb
push
loop
jle
jo
mov
test
and
out
mov
push
lods
mov
push
fdivrl
fnop
pop
clc
pop
pusha
lret
out
push
arpl
inc
cltd
sbb
push
jp
ss
push
inc
mov
fnstcw
fst
test
pop
xor
stos
repz
aas
cwtl
add
aaa
addl
mov
xor
mov
dec
xlat
inc
test
test
je
sahf
mov
add
mov
inc
inc
jp
pusha
and
cmp
aas
push
dec
fucomp
inc
das
cltd
mov
enter
in
cmp
pop
mov
data16
cmp
fsub
mov
stos
mov
push
imul
pop
in
pusha
sti
push
jge
jae
iret
fwait
stos
mov
xor
sub
jo
mov
inc
les
aaa
pop
xor
dec
jmp
es
jne
mov
mov
pop
jb
rorb
pop
adc
data16
cmp
xlat
leave
out
mov
divb
lods
and
cli
xchg
lcall
push
mov
mov
inc
lahf
xchg
adc
loope
or
roll
movsb
push
clts
dec
pop
push
movsb
movsl
mov
sbb
jle
jl
add
add
fdivrs
adc
inc
es
mov
cmp
pop
jmp
idivl
int3
sub
cmp
jno
out
fsts
and
sbb
pop
dec
aam
shrb
push
ja
mov
addr16
mov
cld
add
add
cmpsl
fwait
js
dec
pusha
mov
xor
popa
popf
lahf
scas
dec
cmp
ja
jnp
arpl
sahf
inc
dec
jmp
arpl
mov
ret
inc
and
ret
dec
push
sahf
aaa
mov
xor
cmpsl
pop
lret
in
mov
pop
outsb
adc
jb
leave
add
mov
push
ds
dec
mov
cwtl
call
pusha
sbb
stc
hlt
jmp
add
sbb
insb
fstl
fwait
and
scas
nop
pushf
outsl
adc
xor
repnz
and
push
pop
enter
icebp
arpl
pushf
jbe
xchg
leave
leave
fildll
jp
insb
cmp
pop
fwait
mov
mov
inc
cmp
sub
or
and
add
xor
int3
add
scas
pop
mov
pop
xor
and
int
daa
das
ficoms
sub
sbbb
adc
mov
fiadds
jne
stos
jbe
jl
xchg
pop
rcl
clc
jecxz
shrb
cmp
inc
or
jns
mov
dec
xor
clts
dec
inc
dec
andnps
fwait
jnp
mov
jle
or
jae
fistl
mov
inc
xor
ret
das
or
data16
or
inc
pushf
push
popa
and
push
lret
daa
mov
shll
rorl
cld
imul
push
ret
add
mov
dec
enter
insb
gs
sbb
mov
scas
xchg
pop
stos
mov
jmp
push
lock
rorl
sbb
push
mov
es
inc
loop
pop
mov
inc
iret
sub
jmp
xchg
lods
pusha
rorl
xchg
pop
aas
push
pushf
ja
ds
dec
imull
xor
cmp
inc
sbb
inc
xor
flds
imul
xchg
cmp
sub
fsubl
cmp
outsl
jb
sbb
or
stos
clc
lds
dec
mov
cs
les
ss
add
jecxz
or
stos
pop
je
mov
inc
sbb
cmc
xor
adc
sbb
sbb
jle
icebp
lahf
clc
sar
ficoml
pop
xchg
sbb
add
lret
cs
fadds
pop
sub
jle
cwtl
popf
xchg
cwtl
dec
inc
jae
mov
cmc
xchg
pop
push
push
push
jecxz
mov
jl
jbe
cmp
test
xchg
xchg
xlat
shlb
mov
jae
test
repnz
push
icebp
lods
jmp
xor
icebp
dec
fisttpl
loop
push
shll
add
dec
or
pop
mulb
mov
int3
push
push
lahf
sub
mov
outsb
and
loopne
sub
bswap
subl
jo
sbbl
inc
arpl
std
dec
popf
repz
daa
mov
push
lahf
cld
mov
cli
ret
ret
in
jae
push
mov
push
jle
sub
ja
cmp
in
nop
ds
into
sti
stos
hlt
adc
push
inc
int
rcrb
jmp
cmpsl
sub
test
push
jb
mov
loope
xorb
fisubrs
mov
jb
in
add
movl
insb
jge
fists
ljmp
out
in
mov
push
ret
and
inc
sbb
jecxz
sbb
ret
push
inc
sbb
and
out
sbb
scas
inc
insb
fcompl
mov
aam
in
fsubs
shlb
mov
out
xchg
icebp
ss
test
cmp
or
mov
out
mov
or
roll
pop
sub
or
jnp
jbe
xchg
lds
or
inc
inc
addr16
sub
ja
inc
stc
mov
divb
mov
inc
mov
mov
cmp
xchg
mov
cmc
push
adc
and
xchg
inc
mov
lahf
mov
xchg
jg
not
cmpsl
stos
adc
ret
ror
aam
imul
lea
sbb
inc
xchg
and
clc
adc
push
test
clc
arpl
xor
enter
shr
hlt
inc
fcmove
lds
mov
incb
imul
stos
mov
sbb
push
je
jmp
or
ds
ret
orb
fcomp
mov
cmc
lods
in
test
and
pop
mov
sub
jp
adc
in
bound
iret
cmpsb
push
out
ficoms
lock
imul
test
icebp
mov
cmpsl
mov
subb
test
lret
lahf
push
std
sti
test
adc
ficomps
sbb
dec
aas
jmp
sub
movsl
jnp
xor
int
xchg
cmp
dec
lods
shll
cld
movsl
pop
nop
xor
sbb
es
mov
fildl
or
mov
mov
inc
aas
mov
cs
jno
xchg
test
loope
push
movsb
call
insl
into
imul
es
test
jecxz
jmp
sarb
cmc
mov
push
push
cmpsb
push
inc
mov
ret
jnp
clc
add
sahf
and
inc
sbb
push
data16
rcr
pop
or
adc
shrb
inc
pop
lcall
lret
addr16
stc
push
xchg
xor
jmp
cwtl
iret
sbb
mov
xchg
jecxz
push
cmp
add
out
cmc
and
dec
cmp
ja
mov
sbb
adc
imul
hlt
or
imul
cs
sbb
repz
out
stos
movsb
add
stos
jbe
adc
fidivs
rcll
sbb
push
pop
cli
subb
cmp
pusha
data16
dec
rcrl
lcall
dec
push
cmp
push
icebp
cmp
xchg
push
xor
cmp
std
mov
push
lods
clc
testl
leave
mov
sub
cmp
pop
testb
sahf
cmp
out
push
test
out
das
xchg
jmp
in
bound
test
std
in
pop
and
cmp
movb
fucomi
mov
adc
push
sub
pop
inc
data16
cmp
push
mov
mov
mov
sub
push
mov
in
mov
dec
or
cmp
out
mov
stos
jmp
iret
xchg
cwtl
jle
and
dec
cmp
sbb
cmp
adc
mov
mov
sub
mov
out
inc
aad
sbb
jno
stos
cmp
scas
cmc
add
fwait
lock
out
fwait
stos
popl
mov
inc
push
pop
mov
xor
into
inc
leave
add
stc
stos
pop
rol
xchg
pop
xchg
ds
xchg
adc
in
dec
add
popa
test
cltd
jae
add
mov
cmc
ja
stc
pushf
call
rcrb
stos
mov
or
cmpsb
xchg
add
jno
push
sub
sti
lock
inc
lock
sbb
pop
mov
gs
int
leave
jae
mov
rcrl
sbb
pop
jne
push
sbb
mov
pushf
loop
fistpl
or
and
xchg
clc
inc
cmp
cli
or
pop
loop,pt
fidivs
loopne
pop
inc
sbb
aad
sahf
push
mov
sub
jne
dec
or
push
push
loope
mov
xchg
stc
fs
cltd
sub
push
or
or
idivb
int
andb
dec
xor
dec
test
cmp
aaa
cwtl
cmp
loope
cmpsb
and
fabs
push
adc
inc
pop
sub
cmpl
out
push
cmp
inc
in
iret
dec
lods
add
shll
xor
hlt
cmp
sbb
inc
sar
fwait
sbb
fisubl
movsl
rcrl
cltd
lea
sub
xor
std
sub
push
aad
lds
dec
jo
pop
fldl
adc
mov
jno
add
jne
addr16
inc
lahf
adc
outsb
adc
jecxz
nop
mov
mov
movsb
add
sahf
mov
jp
cli
sbb
ds
idiv
and
mov
push
and
xchg
pusha
insl
popa
cmp
gs
dec
jae
pop
or
scas
repnz
enter
dec
xchg
cmp
imul
push
dec
scas
in
rcl
arpl
sbb
stc
pop
insl
test
jl
lods
sub
shlb
je
je
ds
imul
mov
jecxz
cltd
iret
stc
sbb
mov
push
sarl
testb
cwtl
sbbl
xor
inc
adc
and
sub
inc
popa
imul
push
cmp
or
loopne
pop
iret
pop
and
mov
adc
fmull
cmpsl
aas
int3
adc
mov
xor
dec
std
ds
fsubr
imul
mov
jns
stos
call
mov
aad
lcall
sbb
test
xchg
stc
pop
jecxz
andb
push
das
mov
or
shrl
vcvtsd2si
push
add
cmp
and
hlt
dec
pop
xchg
jno
ret
sbb
ss
push
lock
rclb
mov
js
xchg
xchg
inc
mov
pop
call
sub
pop
and
push
das
int
cltd
pop
mov
cmp
mov
repnz
adc
pop
stos
in
and
mov
test
adc
call
subb
cmp
push
jecxz
std
mov
iret
imul
scas
mov
and
push
lock
mov
ljmp
hlt
inc
and
into
in
mov
cli
or
lds
sbb
mov
jmp
movl
push
adc
jne
in
sub
stc
push
fs
arpl
lret
ret
leave
mov
lcall
mov
icebp
mov
cmpsb
sub
aaa
add
ret
mov
psubq
mov
xchg
push
and
mov
loopne
ds
shr
dec
cmpsl
pop
mov
mov
lods
jno
inc
push
sbb
dec
push
lret
pop
je
cmc
sub
fidivl
sbb
loopne
shrl
add
add
call
mov
jle
sbb
lcall
xchg
sti
js
inc
xchg
test
rolb
add
pop
lcall
popa
pop
add
mov
mov
dec
adcl
jne
nop
jl
cltd
cmpb
repnz
jno
loopne
loop
ret
cmpsb
scas
inc
popf
pusha
add
mov
roll
inc
fidivrs
inc
xchg
into
dec
fistpl
and
shlb
dec
sbb
lods
insb
cmp
pop
test
mov
cmc
rclb
push
iret
jno
outsl
mov
mov
mov
ficoms
mov
jb
lea
adc
pop
test
lods
push
repnz
stos
adc
lods
inc
mov
movq
fisubs
xchg
dec
imul
mov
cld
jmp
push
in
mov
repnz
mov
out
nop
lcall
sahf
or
mov
jns
pop
loopne
out
xor
pop
adc
pop
pop
out
adc
fists
cli
cmpsb
adc
push
adc
ret
inc
rol
movsl
fwait
cmp
jae
dec
mov
adc
enter
dec
cmp
sbb
cmp
inc
cmp
push
andl
cld
mov
mov
fidivl
cmc
ss
popf
cwtl
add
sub
sahf
jmp
in
test
pop
xchg
dec
cmp
xor
outsl
sub
cmp
and
add
loop
sub
inc
and
pop
mov
fcomip
hlt
enter
dec
lret
xor
in
adc
jmp
mov
je
and
icebp
pop
xchg
shlb
imul
shr
jns
sbb
jns
push
jmp
cs
shlb
inc
ret
outsb
mov
repz
shr
xor
inc
cmpsl
sbb
xchg
int
stc
push
ror
push
sti
inc
xor
adc
dec
jmp
inc
mov
in
in
push
xchg
xchg
cs
fldenv
ret
xchg
cltd
fbstp
stos
push
and
notb
insb
loope
les
sbb
push
and
popa
push
mov
inc
jecxz
fistpll
dec
movsb
xchg
xchg
xchg
inc
mov
pop
int3
shlb
ds
and
cmpsb
das
frstor
jbe
sbb
sub
cmp
mov
movsl
jl
mov
imul
cltd
xor
adc
push
mov
ret
jbe
out
popa
jo
js
icebp
test
outsb
inc
pop
ret
xor
push
outsl
stos
stos
and
adc
insl
sbb
fistpll
xor
adc
je
mov
adc
gs
imul
mov
shlb
daa
aam
mov
jmp
insl
imul
and
sub
shlb
push
lock
test
test
cwtl
sbb
jno
jbe
clc
mov
dec
je
sbb
adc
ss
rcrb
pushf
xor
stos
outsb
push
mov
xchg
mov
repz
dec
sub
enter
jle
xor
adc
cmp
cmc
push
arpl
mov
adc
inc
lret
inc
cmc
push
movb
push
sub
lods
inc
out
push
mov
lds
adc
and
dec
or
jnp
xor
shll
icebp
mov
imul
aad
lods
mov
insb
cmp
stos
roll
dec
adc
and
adc
push
jecxz
push
dec
pop
fucomi
cltd
nop
mov
rorb
add
loop
les
cltd
andb
or
mov
cmpsl
stos
leave
jecxz
cmp
andb
fdivs
aad
jb
in
pop
shl
shlb
xor
dec
test
jmp
sub
push
popa
loope
clc
dec
outsb
jae
mov
lds
pop
mov
sub
adc
mov
cmpsl
int
repnz
je
cli
mov
je
mov
leave
and
addl
das
dec
arpl
add
add
jnp
jmp
xchg
jb
sbb
mov
leave
pop
insb
insb
mov
pop
sbb
or
add
mov
mov
andb
loopne
sub
ja
arpl
mov
push
mov
scas
bound
jg
fldcw
ret
sub
sahf
sub
cld
xchg
cmp
les
xchg
cs
into
insb
jge
jle
icebp
fiadds
sub
gs
mov
call
jno
in
loop
mov
xchg
fldl
add
mov
jecxz
xchg
lcall
faddl
xor
xor
lret
or
push
outsl
mov
daa
imul
iret
hlt
mov
xor
imul
sub
insb
mov
inc
call
push
outsl
jno
enter
popa
mov
imul
mov
ljmp
je
nop
arpl
loopne
and
adc
std
in
es
jge
mov
jae
dec
pop
loopne
xor
jmp
xchg
fsubrs
pop
insl
je
xchg
sbbl
popf
pop
pop
sbb
pop
repnz
out
pop
add
mov
ds
inc
sbb
leave
xchg
push
jno
imul
lcall
ja
imul
mov
ss
cs
add
xchg
in
ret
push
stos
aas
sbb
or
ljmp
xor
sub
test
sarl
mov
outsl
pop
cmpsl
xchg
ja
jno
cmp
pop
pop
jae
loop
push
xchg
shrb
mov
jnp
in
sub
nop
push
repnz
lds
fimuls
ficomps
clc
mov
mov
mov
xor
fldenv
push
push
test
mov
adc
out
mov
mov
pop
outsb
cmc
xchg
mov
stos
mov
mov
aas
fdivr
clc
jecxz
aam
out
hlt
stos
dec
jne
pop
jns
imul
mov
cmp
call
cmp
test
mov
mov
pushf
test
cwtl
aas
stos
test
inc
add
lret
sbb
mov
and
ret
and
mov
es
and
inc
mov
loope
sbb
adc
and
ret
xchg
mov
mov
mov
mov
or
jg
sbb
ds
push
int3
jmp
or
adc
jecxz
xor
mov
les
and
ljmp
jno
les
push
movsb
or
sub
dec
mov
push
and
movsb
sbb
pusha
mov
adc
inc
cmp
stc
jge
cmpsb
or
dec
jl
nop
pop
insb
pusha
lret
mov
shl
scas
aas
add
cmp
inc
xchg
cmp
icebp
or
shrl
ret
shrb
leave
xchg
adc
adc
or
repnz
xchg
or
pmaddwd
pop
lret
xchg
leave
gs
mov
pop
ja
ljmp
or
popa
pop
push
cmpsb
out
push
mov
clc
repnz
and
rcrl
pop
ficoml
inc
leave
inc
push
pop
icebp
jecxz
mov
jno
ljmp
scas
lea
and
inc
ficoms
bnd
jge
jecxz
out
cmp
int
shr
out
jg
pop
out
inc
daa
daa
mov
sahf
data16
lock
int
je
dec
lret
jge
cmpsl
push
adc
lret
sub
mov
jnp
push
dec
lret
push
dec
dec
mov
out
jmp
es
add
mov
in
adc
aam
pop
iret
inc
or
sub
inc
mov
inc
adc
std
mov
pop
mov
int3
ss
aad
or
mov
pop
cmp
pop
dec
test
and
scas
js
jnp
xor
sahf
jg
push
mov
enter
xor
push
insb
movsl
push
sbb
cmpsl
pop
pusha
fcmovbe
pop
fists
add
loopne
je
or
adc
loope
scas
loop
mov
dec
jmp
repnz
inc
mov
xchg
popa
cmp
jl
popa
and
sahf
pusha
cmp
adc
into
mov
mov
inc
pop
ficoml
in
loope
movb
pop
pop
push
add
adc
daa
repnz
push
dec
mov
sbbl
cmp
jmp
xchg
addr16
mov
movsb
push
xlat
xchg
mov
call
dec
pop
pop
call
and
imul
repz
lea
jnp
or
inc
mov
loopne
xor
cmp
sub
mov
pusha
push
push
in
inc
in
xchg
sbb
and
divl
mov
in
ja
cli
dec
out
imul
aam
pop
push
lahf
aad
cmp
push
add
and
in
pop
mov
in
xlat
pop
xor
and
xor
jo
dec
cld
inc
mov
pushf
std
sarl
mov
push
lret
dec
mov
adc
mov
mov
mov
divl
fnstsw
cmp
mov
scas
out
push
hlt
mov
les
aas
push
jb
adc
dec
lds
mov
out
or
xor
mov
mov
push
fwait
fsubr
sub
mov
lea
negl
fdivp
ss
and
rolb
sarb
movsl
jne
push
sub
leave
cmc
pushf
xor
pop
jnp
cmc
scas
jp
clc
inc
sub
push
outsb
xchg
cmp
dec
repz
cs
ficomps
xor
jmp
inc
xor
cli
mov
inc
push
dec
xchg
loope
fcomi
ret
push
pop
dec
cmp
rolb
imul
cmp
sarl
mov
into
mov
mov
pop
ret
jp
mov
int
testb
mov
jmp
or
inc
lods
test
cmpsl
push
sbb
and
pop
adc
and
sub
jns
and
add
daa
outsl
add
xchg
ljmp
call
push
imul
sbb
jns
xchg
mov
cmc
and
push
adc
test
gs
movsl
and
stos
sub
iret
scas
dec
lock
std
xor
mov
mov
xor
or
mov
push
bnd
push
jge
sarb
and
sbb
call
gs
arpl
enter
into
lcall
jge
cmp
loope
leave
cmp
dec
pop
xchg
movsb
inc
add
ror
mov
imul
or
or
lods
pop
mov
push
jp
shrb
inc
adc
fwait
cli
dec
inc
scas
into
inc
or
fsub
ljmp
mov
mov
or
add
inc
add
lret
adc
inc
add
into
add
movl
adc
andl
xor
mov
push
add
xor
xor
sbb
mov
add
movl
adc
xor
orl
xor
movl
cmp
jne
cmp
je
jmp
or
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
sub
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movsbl
mov
sub
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
subl
push
movl
push
addl
lea
push
subl
lea
addl
push
call
xorl
push
sbbl
jmp
push
xorb
es
and
adc
sti
add
jp
pop
jp
or
jmp
push
sbb
push
pop
sub
cmp
inc
bound
test
cli
adc
xchg
fcmovne
mov
imul
test
pop
lcall
sbb
aaa
adc
sub
dec
jmp
jno
mov
pop
inc
xchg
stos
call
push
add
xor
out
stos
mov
inc
xchg
pop
stos
fiadds
jbe
and
int
sbb
popf
add
pop
push
sbb
vcvttsd2si
pop
and
sahf
test
cmp
rcrl
jo
repnz
cmc
arpl
push
sarb
push
inc
mov
aad
lahf
push
inc
ret
lods
int3
lock
orl
popfw
xchg
push
test
inc
or
test
push
addl
scas
movsb
push
adc
aaa
jo
xchg
push
jns
ja
psadbw
testb
or
and
pop
dec
punpcklwd
pop
xor
mov
sbb
mov
and
ss
data16
jp
dec
andl
jmp
sub
test
push
mov
daa
shrl
pop
stos
push
xchg
mov
std
stos
insb
push
push
mov
mov
hlt
arpl
or
sti
decl
mov
ja
jg
add
pop
icebp
xchg
ja
lret
cmp
ss
aas
adc
mov
mulb
pushf
adcb
cmpsl
movsl
sub
dec
mov
pop
pop
movsb
pushf
pop
in
push
pop
ret
push
orb
loop
add
sub
push
ret
out
popf
test
pop
lea
inc
imul
xor
lods
loope
cmp
repz
arpl
test
repnz
cld
dec
mov
add
fstpt
in
fstp
jnp
repz
adc
jmp
sub
sbb
inc
sbb
lcall
mov
mov
loop
jg
pop
cmp
stos
repnz
or
loope
add
repnz
mov
je
or
into
mov
loop
jg
es
fisttpll
adc
imul
adc
push
mov
cmp
loopne
xchg
fldl
inc
shrl
es
rorb
push
stos
dec
jecxz
repnz
repz
daa
stc
sahf
sbb
ljmp
scas
xor
lods
adc
out
xor
out
pop
pushf
sbb
xor
fstpl
fucomp
aad
pop
movsl
and
or
sub
push
xor
inc
sbb
out
sbb
pop
mov
negl
movsb
lcall
and
test
add
mov
push
jp
loopne
pop
add
lea
push
fwait
pop
and
icebp
sub
mov
daa
and
adc
cmp
out
mov
movsb
push
popa
jl
mov
mov
and
ja
testl
enter
into
push
frstor
cmpsl
push
test
loopne
dec
jle
aas
xor
dec
stos
xor
popa
xor
or
fcoms
xchg
mov
cs
aad
inc
and
mov
jo
cltd
cwtl
outsb
push
divl
xor
mov
jg
xlat
inc
xchg
stos
les
jmp
adc
jne
cli
mov
inc
inc
cmpsb
test
rcrl
mov
leave
jne
mov
cmp
fstpt
daa
flds
inc
iret
test
inc
imul
fisttpll
insl
mov
sti
cmpb
jns
jo
add
push
aad
inc
arpl
fldl
fiaddl
out
sti
pop
je
in
jge
loope
mov
xchg
rorb
sub
cmp
xchg
xchg
xor
shufps
into
test
and
mov
cmp
and
ret
fistpl
pop
pop
and
stos
add
fwait
lods
jns
pop
adc
leave
sahf
push
sti
loopne
jle
leave
mov
pop
lock
lds
xor
push
fwait
je
inc
rclb
pop
ret
lock
dec
adc
mov
ret
stos
mov
ror
hlt
shrb
fmul
inc
xchg
jg
sbb
mov
jns
pop
add
cmpsl
lahf
aas
rcl
lret
scas
cmp
vmread
es
call
loop
xlat
dec
lahf
pop
lods
lcall
test
pop
or
dec
movsb
mov
ret
ret
imul
in
pop
pop
dec
inc
push
stos
cmp
shrl
ja
cmpb
jne
addl
shlb
dec
and
sub
imul
adc
jl
test
clc
jae
dec
or
or
pop
dec
imul
into
xlat
dec
sbb
sbb
cmpsb
out
mov
ret
pop
jb
jmp
fldenv
fwait
stos
adc
iret
out
popa
shl
adc
pop
insl
imul
adc
jnp
inc
insl
mov
jmp
pushf
push
lahf
sbb
icebp
push
mov
in
fs
data16
or
ret
xor
ljmp
mov
stc
dec
insb
and
mov
pop
mov
push
out
jecxz
mov
test
mov
dec
fld
aaa
mov
jbe
sub
incb
push
mov
add
movsb
imul
loope
mov
jno
mov
cltd
je
mov
loope
jbe
cmpsl
lret
nop
lds
inc
scas
movsl
mov
push
pop
mov
inc
jb
filds
popa
scas
hlt
into
adc
xor
push
loopne
mov
leave
xor
pop
es
popa
or
in
or
jmp
sarb
xchg
jmp
push
es
dec
rcrl
xchg
mov
add
not
loope
stos
rorb
rcr
xchg
pop
out
jo
adc
adc
mov
les
cmp
iret
jnp
xchg
rcl
lahf
and
push
jecxz
fistpl
cmp
sub
or
rolb
fs
pop
or
fsubp
mov
jne
repnz
test
fsts
scas
scas
stos
ljmp
mov
xchg
cmpsl
and
fstpt
cld
shr
pop
mov
xchg
dec
cmp
into
dec
sub
fnsave
mov
dec
ret
add
mov
out
xor
jae
inc
lock
insb
aad
sub
and
imul
dec
aaa
out
xor
cwtl
ret
mov
cs
lods
dec
pop
sarb
pop
pop
out
sub
inc
add
push
std
sbb
mov
outsl
mov
add
cli
inc
outsb
std
jb
push
xchg
shl
push
jmp
sub
sbb
sub
insl
cmpsb
mov
dec
loope
loope
mov
jecxz
and
xor
mov
bound
xlat
aam
cmp
push
add
mov
aas
gs
or
out
hlt
lret
out
sub
test
rclb
dec
cmp
inc
ja
add
imul
movsl
or
outsw
or
inc
push
repnz
adc
pop
push
sbb
das
mov
mov
test
xchg
loop
ret
xchg
push
cmc
in
pop
loope
loope
xchg
std
xor
pop
hlt
add
adc
add
pusha
lea
shl
dec
cltd
arpl
xorl
mov
jb
xor
add
daa
mov
cs
mov
out
push
test
aas
cmova
pop
js
clc
pushf
stos
jp
sti
das
sub
mov
xor
jns
aaa
xchg
jmp
lret
mov
lea
inc
jo
mov
fnstcw
sub
dec
les
js
loopne
mov
incb
or
in
jl
lock
psraw
dec
jb
or
adc
sub
orl
sub
xchg
push
lahf
int
add
repz
mov
xor
mov
xchg
in
cmp
mov
lahf
cli
shlb
test
je
fisttps
addr16
jnp
xchg
mov
sub
dec
dec
popa
imul
adc
and
enter
push
or
add
icebp
or
sbb
mov
push
push
push
test
pusha
cmova
lds
les
sbb
xor
jbe
push
cmc
test
fisubl
loopne
sbb
sti
sti
mov
fwait
mov
adc
movsb
jmp
lock
sub
jge
mov
mov
setbe
dec
jae
jg
sub
sti
imul
inc
outsl
add
scas
fistl
jno
hlt
lret
add
inc
xchg
push
pop
sbb
into
or
loopne
loopne
lahf
dec
stc
push
fucom
mov
test
mov
pop
jbe
es
jmp
lahf
jnp
int3
scas
jge
mov
xor
popa
xchg
insl
outsb
lret
mov
pop
and
shll
pop
push
fnsave
loopne
inc
push
push
push
arpl
inc
mov
jae
jmp
dec
dec
cwtl
push
rol
ds
and
and
push
or
clc
bound
fstpt
xchg
js
inc
mov
aad
mov
sbb
fldt
push
scas
test
pop
ss
repz
ret
push
add
jmp
sub
stc
test
and
leave
mov
add
inc
cmc
mov
xor
adc
int
lahf
orl
inc
pop
call
clc
cmpsl
int
cmp
adc
stos
xchg
mov
or
pop
int
mov
int
sub
test
scas
pop
jbe
shl
and
adc
jp
cmp
insb
dec
xchg
and
sub
in
sti
es
into
add
add
xor
inc
jg
xor
xor
pop
cltd
inc
or
mov
sarb
jge
mov
rcrb
pop
xchg
clc
mov
xor
mov
adc
stos
ljmp
and
push
icebp
ss
xchg
mov
dec
mov
scas
xor
sbb
sbb
lods
jae
cmp
xchg
xchg
insl
xchg
shll
add
dec
into
out
sbb
sti
popa
inc
inc
jp
das
rep
mov
in
repz
add
divb
pop
rolb
xor
jle
pop
jmp
bound
fcom
push
fdivl
les
sbb
lock
push
in
inc
sub
xchg
and
jmp
popa
pop
mov
ss
mov
loopne
dec
fdivs
fadds
cld
cmp
push
test
pop
pop
mov
cmp
or
repnz
lret
rcrl
popa
pop
shlb
inc
test
fidivl
clc
sar
and
aas
lret
movsb
daa
std
pusha
mov
xor
rolb
push
outsb
stc
mov
jo
or
repz
adc
addr16
add
fadds
cmp
jg
cmp
xlat
fists
sbb
push
mov
or
aaa
mov
jg
shlb
stos
mov
jne
cltd
repz
pop
jp
sub
and
insb
cmp
mov
sbb
es
and
test
jecxz
into
dec
pop
sti
mov
and
sahf
mov
gs
xchg
mov
sarl
gs
xorl
cmpsl
cltd
sub
sub
push
add
cli
out
dec
and
pop
popa
push
sub
cmp
xchg
xorb
fwait
mov
or
adc
ret
jmp
outsb
out
mov
xor
das
jp
pop
xchg
add
or
cmp
bound
inc
pop
lods
jmp
mov
lahf
pop
sti
xor
mov
jge
cmp
inc
adc
jmp
cmc
daa
and
lods
imul
jle
pop
mov
add
mov
push
sbb
out
add
push
stos
cmp
push
mov
test
in
outsb
addr16
pop
out
cltd
mov
lret
xorl
addr16
mov
outsb
imul
jg
nop
cmp
js
push
pop
bound
add
into
fbstp
inc
outsl
sub
ds
push
fildll
mov
rcr
fstl
faddl
mov
mov
mov
push
leave
adc
popf
fwait
mov
repz
loope
sub
push
leave
sbb
call
fsubl
xor
or
sti
xor
mov
loop
and
xchg
and
aam
xlat
mov
sahf
inc
push
sub
repz
repnz
aam
repnz
sbb
add
push
std
int
mov
sbb
push
lock
push
subb
insb
fwait
push
imul
les
imul
mov
jbe
push
ret
hlt
ret
fldcw
and
xor
push
inc
push
add
mov
iret
shrb
jns
aas
pop
pushf
bound
lcall
mov
mov
and
lahf
push
push
pop
sbb
aas
mov
dec
or
xchg
pop
inc
stos
insl
into
push
stc
jno
les
or
pop
popf
jo
cmp
or
mov
out
lahf
push
in
sub
cmc
fisttps
ljmp
scas
imul
test
add
lcall
fwait
push
subb
mov
pop
sahf
cmpsl
lret
sahf
je
fsubp
nop
in
into
push
cmp
sub
sbb
arpl
imul
sbb
das
lods
pop
push
movsb
daa
or
jnp
lock
pop
mov
pop
mull
add
lret
stc
jo
repnz
movsl
lods
xchg
push
iret
orb
aad
jb
ljmp
mov
test
ja
cmpsb
mov
insb
into
cmpsl
flds
movd
adc
adc
popf
sbb
sbb
pop
jp
fs
mov
add
xor
inc
inc
jecxz
push
xor
xchg
xchg
sub
xor
jecxz
inc
je
push
insl
repz
and
rcr
sti
mov
je
das
push
jmp
nop
imul
inc
insb
loop
push
cmp
jmp
enter
xchg
mov
sbb
popf
mov
stos
pop
sti
outsb
push
repnz
mov
and
arpl
and
push
inc
jne
mov
ret
cmc
sbb
loopne
inc
out
xor
cmp
mov
sahf
push
cmpsl
inc
repnz
std
xchg
cmp
ss
idivl
aad
lds
sbb
fcoml
dec
add
mov
push
add
lahf
mov
cmp
and
xor
mov
push
std
jne
and
and
push
sbb
pop
test
jo
into
stos
push
lret
pop
lock
sbb
arpl
add
push
loope
dec
stos
jns
dec
or
pop
stos
fmull
push
xor
jecxz
xlat
shll
push
imul
pop
inc
mov
pop
fsubrl
idivb
xchg
bound
jae
dec
xchg
out
xor
test
repz
orb
aas
dec
stos
adc
dec
xor
fcompl
jecxz
pop
shll
popa
adcl
aas
int3
hlt
mov
dec
or
gs
imul
out
mov
xchg
pop
in
lock
xchg
xlat
and
push
mov
adc
jno
ret
fstpl
mov
mov
xchg
lahf
push
wbinvd
adc
jecxz
cmpsl
inc
iret
stos
outsl
xor
push
stc
rcl
pop
cmpps
push
push
mov
add
test
mov
mov
inc
mov
mov
mov
into
xchg
and
add
mov
test
divb
pusha
insb
movsb
inc
out
cmp
cli
cmp
jge
loopne
pop
shl
dec
and
adc
sub
fisubrl
arpl
test
cmpsb
xchg
pop
rcrl
addl
push
scas
add
inc
fcom
cmpsl
cmp
mov
dec
sbb
lods
xor
xlat
jmp
popf
sub
enter
lcall
shr
push
push
jne
out
fists
dec
stc
sti
xchg
mov
mov
jge
in
arpl
push
lds
gs
xchg
cmp
fdivr
or
fsubs
pop
les
jo
xor
popf
cld
add
out
cmp
rclb
mov
addr16
inc
xchg
or
push
mov
adc
xor
xchg
test
shrl
jbe
mov
shll
inc
cltd
fnstenv
cmpsb
cmp
add
mov
fs
and
xor
repnz
adc
shrb
push
lods
mov
out
mov
in
insl
push
enter
out
xor
or
xchg
arpl
cmp
stos
js
aad
pushf
ss
cmp
mov
mov
or
cmp
jo
pop
jno
scas
xchg
orl
movsb
imull
sub
in
out
or
inc
call
mov
fdivp
push
jne
pop
pop
mov
adc
mov
mov
imul
daa
popf
movsb
pop
fisttpl
rolb
sahf
data16
fld
pop
pop
fptan
and
sub
cld
and
pusha
or
lods
mov
imul
mov
jecxz
push
add
stos
jge
addr16
unpcklps
rcrl
cmpsl
jmp
jb
negb
adc
cmpl
inc
mulb
jp
loop
fstpt
xchg
cli
jl
sbbl
push
push
or
xchg
mov
mov
bound
push
inc
lds
out
out
and
cld
jb
loope
jle
and
sub
pop
dec
aas
mov
mov
in
pop
and
or
dec
std
jne
lahf
aam
pushf
movsl
add
mov
into
mov
jno
inc
outsl
popa
cmp
jns
pop
pop
clts
xlat
out
sub
sub
push
movsl
push
xor
push
lcall
gs
je
imull
pop
mov
ljmp
ds
push
add
je
movsl
dec
loopne
out
mov
fldt
push
mov
fidivrl
pop
imull
cmp
test
inc
outsb
mov
and
and
gs
sbb
mov
sub
ja
subb
inc
aas
in
dec
mul
out
inc
and
adc
mov
add
dec
mov
sbb
push
mov
sub
push
hlt
lods
xchg
fwait
es
int
inc
in
addb
mov
daa
imul
or
dec
mov
pop
push
cs
cli
ja
jge
sarl
jecxz
in
xchg
data16
and
scas
dec
out
dec
ret
pop
fistl
push
adc
cmpsl
cld
ret
inc
sub
insb
add
pop
fcmove
dec
xor
pop
mov
cmc
fstl
xchg
jo
or
fcomi
push
lods
into
mov
xchg
popf
lea
cmp
cmpsl
pop
je
popa
mov
jne
and
inc
push
pop
sbb
and
int3
jno
cmpsl
mov
mov
lcall
enter
les
jno
addb
es
pop
jae
cltd
pop
loop
mov
mov
push
sbb
pop
sub
push
shr
lahf
cmpsl
mov
jl
add
cli
xor
rolb
mov
clc
sbb
adc
mov
divl
lods
push
push
mov
lods
jle
fmull
aaa
jne
das
mov
imul
inc
add
cmpsl
call
nop
push
dec
jp
out
xchg
test
mov
cmp
test
decl
and
sub
mov
setl
fiadds
cmp
add
pop
and
cmp
pop
or
out
and
sti
mov
loope
push
add
xor
out
sub
add
mov
jmp
popf
xor
push
xchg
cmc
fcmovnbe
jnp
adc
sub
bound
and
fwait
les
in
push
pop
sub
movd
jecxz
sub
and
cld
cmovg
call
pop
and
int
push
inc
xor
cmc
repz
daa
cmp
adc
xchg
add
fcoms
adc
sub
ret
pop
xchg
xor
cmp
scas
push
lahf
mov
adc
add
lahf
xchg
push
jne
push
push
push
rcl
mov
cld
fs
and
xlat
xchg
cmp
out
mov
xchg
xor
test
inc
or
mov
cli
std
adcl
or
pop
dec
fbld
aaa
mov
fstl
aaa
shlb
and
in
jl
stos
popa
pop
cmp
pop
inc
sbb
mov
pop
lcall
incb
jl
sub
jl
adc
dec
inc
outsl
lds
imul
mov
dec
add
les
mov
xchg
popa
imul
jns
sbb
push
ljmp
aas
shl
repz
push
and
jns
push
push
push
lea
mov
shrl
out
adc
adc
jb
cld
pushf
mov
add
mov
rcrl
aas
fistps
test
sub
sti
mov
incl
sbbl
jns
mov
ret
std
lea
cmp
fs
dec
out
cmpsb
mov
mov
or
jge
dec
add
stc
and
jge
mov
sub
sub
xchg
addl
out
and
push
test
xor
aam
mov
lret
sub
lds
adc
call
out
std
or
mov
xchg
push
movsl
test
or
jl
mov
dec
or
test
ds
daa
cmp
inc
stos
in
test
mov
lret
fwait
mov
imul
xchg
mov
xor
rolb
mov
jae
cli
xchg
imul
jnp
mov
or
ss
lods
ret
or
mov
dec
out
push
push
inc
mov
push
mov
daa
mov
push
push
adc
mov
adc
xchg
inc
scas
pop
ficomps
into
rcll
adc
fnsave
mov
inc
xchg
leave
jnp
and
js
pop
aas
dec
sbbb
pop
add
call
in
orb
xchg
lret
inc
xor
add
dec
out
addl
push
popa
push
insl
jle
add
push
dec
call
sub
das
cmp
pop
aaa
cmp
orl
loopne
jnp
push
sbb
mov
cmp
scas
dec
xchg
es
mov
and
divl
in
arpl
fsubs
xorl
and
mov
pop
pop
pop
dec
sahf
lods
jo
xchg
and
xchg
test
ret
xchg
sub
push
inc
sbb
roll
sbbl
add
pusha
mov
or
cmp
and
aaa
jge
jae
dec
cmp
stos
rclb
adcl
mov
movsb
sahf
or
movl
pop
xor
out
xor
inc
jno
in
lahf
out
and
mov
outsl
add
shlb
cmp
and
das
loope
xchg
not
sti
adc
sub
mov
insb
imul
sbb
jbe
jle
xchg
and
fisttps
cmp
jno
xchg
aaa
mov
ss
stos
xor
popa
loop
icebp
add
cltd
mov
out
xchg
and
xchg
lea
dec
loope
dec
adc
lods
in
fld
pushf
or
sub
imul
and
test
scas
ss
sahf
insb
push
cltd
int
inc
stc
es
repnz
rcl
leave
pop
lcall
pop
sbb
fwait
mov
dec
cwtl
cmpsb
insl
insl
mov
loopne
inc
inc
or
jle
test
pop
xlat
cmc
fidivs
jo
aaa
cmp
cmp
push
cmpsb
sbb
hlt
xor
jge
mov
mov
sbb
int3
jecxz
xor
mov
mov
faddl
jle
scas
pop
xchg
jne
shl
cltd
xor
cmp
rcrb
adc
popa
in
adc
xor
mov
data16
rorl
test
mov
mov
nop
cmpsb
mov
jb
enter
mov
fldenv
scas
inc
movsl
mov
jge
pop
adc
xor
adc
jnp
inc
hlt
call
jg
sbb
xchg
xchg
cmp
popf
loope
sub
ja
je
cmp
stos
add
jg
inc
jno
stc
inc
shr
js
xor
fsts
xchg
mov
pushf
jae
and
in
jb
mov
inc
pop
pop
cmpsl
inc
iret
inc
repnz
cmpsl
add
jno,pt
iret
dec
xor
testb
mov
ja
fcmovnbe
popa
pop
cmp
call
cmp
flds
push
rorl
inc
adc
aas
lods
jmp
jg
xor
cmp
push
lods
sbb
mov
pop
in
clc
cmpsl
add
sub
rol
mov
cmp
push
pop
das
scas
xchg
push
gs
push
push
loop
pop
repz
fdivs
pop
arpl
dec
lret
addr16
pop
push
adc
cmc
xchg
testb
ud0
inc
ds
sbb
sbb
int
jnp
cmp
loope
lea
outsl
xchg
popa
dec
sbb
data16
test
out
cs
jno
or
outsl
test
repnz
cmp
inc
lahf
dec
gs
cli
stos
andl
aaa
ja
xor
mov
out
inc
dec
push
mov
pop
outsb
je
aam
lods
xor
inc
cmp
das
inc
aad
pop
xor
mov
iret
jnp
jmp
inc
add
push
sahf
test
mov
bound
mov
mov
addr16
mov
cmpsb
mov
inc
ret
add
cmp
shrl
stc
outsl
mov
insl
push
mov
loop
xchg
mov
out
dec
dec
lods
imul
lods
cmc
cmp
mov
mov
scas
cs
rorb
sbb
mov
cld
std
popf
or
mov
jl
scas
mov
cmp
mov
jle
adc
icebp
push
pop
push
test
mov
and
mov
hlt
cltd
inc
push
cmp
arpl
roll
imul
lea
outsl
ds
push
or
xchg
shll
loop
push
xchg
adc
pop
insl
lods
xchg
adc
fadds
add
std
sbb
mov
or
loope
outsb
adc
push
push
imul
jno
adc
mov
in
xchg
int
scas
push
bound
sti
xor
ljmp
adc
repnz
imul
pop
fstl
filds
adc
popa
push
lock
lcall
pushf
mov
pusha
insl
es
cmp
leave
in
mov
mov
pop
popf
in
js
xor
out
sbb
jo
xchg
inc
gs
cld
sahf
pop
mov
arpl
sub
pop
inc
mov
clc
inc
rorl
mov
xchg
jns
mov
stos
xchg
xor
test
xor
mov
push
sbb
jae
mov
and
mov
inc
mov
notl
insb
mov
aam
jbe
jg
lods
sub
adc
lds
sbbl
test
insb
pop
or
stos
push
mov
add
int3
jb
inc
sub
xchg
ret
ljmp
cwtl
inc
bound
std
test
mov
sub
inc
popa
rorb
pop
loopne
pushf
call
shrl
adc
jp
outsb
add
pop
sbb
movsb
sbb
sbb
in
filds
pop
mov
xor
adc
mov
nop
sahf
adc
pop
lea
or
mov
push
add
in
int
jbe
fwait
push
loope
pop
pop
fildl
mov
jmp
lcall
push
in
xor
jbe
lret
inc
repnz
ljmp
and
cld
aaa
clc
xor
test
push
mov
notb
mov
dec
mov
and
lret
xlat
in
and
sub
adc
out
js
xor
les
daa
mov
cmc
inc
rorl
xlat
cmp
ss
xchg
push
ds
aam
pop
sbb
jecxz
cld
int
leave
xor
bound
add
jbe
jmp
xchg
cmp
jne
loopne
adc
xor
mov
cmc
fisubs
mov
mov
xor
mov
aad
or
mov
fildll
out
enter
shl
jno
cltd
mov
fistps
movsl
add
jno
jno
out
stos
adc
stos
ja
add
adc
push
out
sbb
mov
mov
data16
jmp
sub
inc
push
ret
sub
add
mov
cmpsb
push
xchg
cmc
adc
cmp
mov
add
jle
arpl
push
xor
loopne
jo
xchg
cli
push
pop
leave
mov
mov
stc
jecxz
ja
mov
adc
dec
pusha
ret
outsl
sub
iret
adc
test
rolb
mov
cld
dec
push
pop
mov
mov
pop
pop
pop
mov
jge
scas
pop
repnz
inc
inc
outsb
sub
stc
arpl
imul
bsf
inc
test
hlt
not
rcr
in
xlat
mov
jmp
jne
decl
sbbl
repz
mov
xor
pop
add
or
push
cmpsl
enter
jge
loope
mov
push
xor
ljmp
cmp
jmp
mov
ss
imul
lret
enter
lock
fwait
rcl
xor
ret
cmp
out
in
mov
addr16
subb
mov
mov
mov
andb
sbb
pop
stc
lods
sbb
inc
sarl
mov
adc
sub
nop
ljmp
jno
or
sbb
cmc
pop
mov
call
das
sub
orb
mov
cmp
add
push
mov
pop
mov
mov
lret
lcall
add
push
stos
mov
mov
call
mov
xchg
jle
add
leave
and
nop
clc
inc
mov
and
rep
adc
ss
jns
and
js
out
rorb
jmp
push
push
cmpl
notl
insb
jmp
push
and
pushf
scas
lods
sub
xor
jae
dec
js
push
and
pop
and
and
mov
pushf
dec
shrb
fwait
cmc
jp
js
bound
lcall
stc
stos
rorb
add
jns
outsl
dec
fidivrl
add
aas
mov
push
scas
add
push
inc
adc
mov
out
inc
addr16
shlb
fldenv
out
push
adc
push
dec
in
sahf
inc
push
jge
mov
cmpl
jg
inc
push
ja
arpl
xlat
dec
ss
insl
daa
pop
arpl
js
mov
nopl
jmp
fcoms
sahf
cmp
dec
cmpsl
lret
jns
mov
mov
xchg
mov
push
cwtl
punpckhwd
xor
add
hlt
ficoms
jp
or
inc
and
xchg
repz
dec
ret
shrb
js
mov
pop
fcmovu
cmp
xor
inc
jecxz
jge
mov
pop
push
orl
push
call
adc
movl
addl
movl
neg
mov
mov
decl
xor
and
mov
andl
add
mov
sub
mov
test
je
and
mov
movzbl
sub
mov
mov
mov
mov
xorl
xor
dec
add
sbb
mov
xor
mov
neg
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
add
mov
mov
adc
xor
add
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
mov
xor
sbb
add
mov
addl
sub
lea
addl
xor
xorl
xor
movl
cmp
movl
je
mov
mov
adc
mov
adcl
xor
adcl
add
cmp
movl
jne
subl
pushl
xorl
call
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
mov
xor
decl
add
cmp
je
andl
pushl
pushl
xorl
call
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
mov
mov
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
xor
mov
mov
mov
mov
sub
and
mov
mov
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
andl
mov
xor
mov
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
jmp
icebp
pop
call
das
sbb
mov
jg
test
cmp
jp
pop
jp
je
xchg
ds
pop
xor
scas
test
cmp
test
in
add
imul
sahf
in
addr16
xor
jns
orb
aad
paddq
adc
cmp
fnstenv
mulb
stos
and
jno
fbld
ficompl
inc
stos
xor
test
xor
mov
mov
inc
call
push
leave
dec
ret
cltd
out
insb
ss
stos
sbb
jle
or
jmp
lahf
add
adc
pusha
xchg
js
dec
lea
mov
sbb
jbe
dec
int
add
daa
jbe
mov
add
imul
loopne
jle
cmpsl
mov
xor
xchg
outsl
or
cmp
mov
popa
jno
sub
or
mov
lret
insl
and
enter
mov
pop
das
aad
fsubrp
stos
jp
lret
mov
loopne
push
push
sbb
js
xchg
mov
mov
cld
lock
xchg
push
xchg
pop
sbb
daa
fstpl
xchg
xor
adc
flds
add
shlb
fdivp
popa
out
test
xchg
in
fstps
movsb
sub
inc
test
adc
inc
cmp
add
adc
adc
stc
add
into
xor
scas
cmp
nop
loopne
fxch
or
out
xlat
and
xor
and
lret
push
pop
sub
mov
movsb
cmpsb
push
and
ja
addr16
add
push
sbb
cmp
or
dec
adc
lret
sbbb
jae
outsl
push
mov
cltd
shlb
xchg
cmp
and
mov
lret
mov
xor
sbb
int3
imul
mov
repz
push
lret
xchg
inc
loopne
mov
push
mov
cltd
add
push
mov
xchg
lret
xor
cwtl
loope
ret
testl
cltd
pop
push
sbb
lds
jle
add
xchg
push
shll
cmpsl
mov
push
in
lds
aaa
pop
fwait
gs
add
sbb
or
pop
inc
mov
sti
insl
test
dec
leave
jp
loop
insl
adc
mov
dec
cmp
in
lahf
xchg
scas
add
mov
cmp
mov
jmp
cmp
or
push
test
mov
je
mov
mov
aam
xchg
icebp
mov
and
jo
jp
js
inc
mov
fs
xor
aaa
cwtl
mov
sub
faddp
mov
cwtl
movsb
mov
cltd
in
insb
adc
lds
mov
cmp
pop
std
and
andb
jp
fldcw
adc
pop
xchg
and
andb
push
pop
lds
scas
push
or
adc
test
or
int3
jnp
pushf
test
xor
out
dec
in
jo
rorb
mov
inc
sahf
sbbl
pop
and
xchg
loop
bound
rcll
scas
ficoms
adc
out
mov
adc
loope
dec
popa
sub
mov
dec
or
mov
dec
test
add
stc
cmp
fmuls
add
jl
addl
pop
inc
xchg
adc
pop
stos
push
nop
fwait
cld
xor
iret
adc
or
mul
sub
pop
add
mov
sbb
cmp
adc
xor
jb
pop
mov
mov
mov
faddl
pop
leave
jge
push
lds
dec
lahf
outsb
out
movl
cmp
adc
stos
or
pop
rcl
das
mov
xorl
sub
loop
adc
test
or
enter
add
gs
subb
inc
xchg
in
aam
mov
add
imul
insl
adc
shlb
adc
mov
insb
xor
out
jae
mov
addr16
sbb
adc
mov
xchg
xchg
xorb
mov
fimull
xchg
cmp
xor
dec
jge
clc
cmpsb
inc
bound
mov
loope
pop
fisubl
or
fsub
adc
mov
xchg
push
or
cmp
data16
mov
shlb
dec
jmp
cmpsb
inc
jb
jno
jns
push
push
shrl
sti
mov
and
setns
mov
adc
push
cmp
or
popl
adc
je
mov
fsub
sahf
xchg
enter
lds
push
pop
mov
dec
adc
cmp
push
or
dec
sbb
fwait
ror
dec
jnp
xor
mov
lahf
rcrb
popf
adc
insb
ret
std
push
mov
pop
sub
or
jl
xor
mov
inc
sub
mov
jmp
notb
push
xchg
fcompl
andb
cs
xor
push
rcll
test
in
cld
shl
aad
mov
lret
into
stos
or
mov
cmp
outsl
cltd
in
imul
fisttpll
insl
jae
add
shr
pusha
out
sbb
int
sbb
rclb
mov
jae
cld
cwtl
push
js
jae
add
xor
dec
out
xor
iret
mov
mov
jg
xchg
fdivr
mov
test
movsl
cs
mov
repz
fwait
daa
dec
fs
inc
cmp
push
inc
sbb
lret
lret
lea
enter
xor
std
in
or
xorb
cltd
sbb
test
xchg
andl
gs
aaa
xor
mov
mov
js
dec
ljmp
and
or
mov
clc
push
inc
cmpsb
inc
adc
or
cmp
mov
jmp
mov
movsb
sti
sbb
mov
and
clc
mov
pop
in
sti
lods
in
sub
mov
mov
push
pop
push
imul
adcl
in
xchg
nop
ljmp
xchg
lods
mov
dec
insl
test
xor
mov
xor
and
enter
out
or
gs
sub
data16
div
loop
inc
cs
or
push
cmp
rcl
sahf
in
cmp
push
out
add
int3
inc
pop
out
cmpl
pop
stc
and
inc
inc
pop
mov
lret
scas
jl
andb
insb
xlat
inc
lcall
xchg
mov
inc
pop
xchg
add
lret
popa
cli
add
adc
shl
incb
mov
sti
popa
mov
cmc
adc
sahf
fstpl
push
adc
cmc
nop
adc
dec
dec
imul
jle
insb
adc
movsb
aad
push
addr16
cmp
leave
in
addr16
xor
jp
fsubs
insb
lcall
fists
jmp
xor
jne
adc
mov
movsl
adcb
add
jbe
cltd
xchg
test
stos
daa
pusha
adc
icebp
and
fidivs
rolb
sbb
lcall
sub
or
fsubl
ss
stc
lds
push
aaa
push
icebp
je
push
push
loop
xchg
dec
test
data16
dec
sub
mov
dec
inc
roll
movsl
repnz
stos
jl
bound
cmp
mov
jns
jecxz
and
cmpsl
or
int
in
mov
fwait
and
inc
dec
jl
mov
cmp
sub
arpl
fwait
xor
dec
nop
lds
adc
outsb
inc
test
rol
int
clc
cmp
shlb
les
sbb
sub
pop
inc
aam
adc
xchg
test
call
fs
mov
add
clc
movsl
push
ret
lret
mov
les
dec
cmp
inc
and
mov
je
fbld
cmp
push
fisttps
or
push
ljmpw
xor
and
sub
cs
cmc
dec
mov
and
ret
cmp
dec
mov
mov
icebp
mull
or
mov
jbe
cmp
and
and
out
xchg
int3
in
mov
mov
scas
jno
mulb
clc
adc
les
xlat
cltd
shll
lret
jge
push
push
xor
jmp
adc
jmp
lret
jne
adc
stos
popf
sbb
pop
mov
or
outsb
in
cmpsb
movsl
xor
scas
push
cmpl
mov
cmp
push
cmpb
cmp
or
jmp
inc
jp
cwtl
mov
pop
ja
mov
leave
jnp
in
and
aaa
test
xchg
pop
mov
xchg
addr16
aaa
das
jl
and
dec
push
imul
sbb
icebp
xchg
mov
add
mov
cmpsb
pop
inc
jno
and
movsl
pop
stos
xor
jno
js
mov
xchg
arpl
sti
xor
and
int3
cld
jl
cmpsl
test
jmp
pop
sbb
xchg
mov
imul
mov
pop
incb
pop
pop
sti
jmp
inc
loopne
imul
movsb
fwait
cmc
lods
push
push
in
jnp
pop
fsubl
adc
daa
sbb
jo
pushf
pop
fwait
notl
sahf
push
xchg
les
adc
add
adc
and
xchg
sahf
loop
lahf
add
or
push
sahf
xchg
xchg
lds
imul
dec
or
jmp
xor
call
in
jmp
lahf
cwtl
jp
or
adc
cmp
jns
clc
sbb
adc
sub
sahf
mov
popa
imul
ret
xor
jns
arpl
fwait
insb
cmpsl
xchg
mov
in
add
testl
cwtl
lds
je
imul
test
popf
mov
cli
pop
pop
dec
loope
xchg
xor
sub
inc
xchg
push
push
stc
cmp
ret
aam
inc
jno
aaa
movd
movsl
fidivs
add
sahf
bound
mov
jno
cmp
popa
mov
out
or
out
imul
dec
jl
inc
aaa
in
push
sbbl
sub
pop
sub
inc
ficompl
addb
cmpsl
jns
pop
jecxz
mov
roll
js
sti
inc
mov
andl
jbe
outsb
jge
inc
int3
mov
pop
add
push
ljmp
negl
dec
cld
push
in
cmp
test
icebp
ja
adc
xchg
and
sti
repnz
in
jno
or
je
aas
test
cltd
imul
sbbl
cld
in
mov
xor
je
aad
xchg
xor
clc
mov
and
stc
xor
add
loopne
jns
sbb
jo
cld
and
out
dec
mov
jle
xchg
cwtl
arpl
push
mov
jecxz
out
cmp
cmp
repz
mov
leave
or
cmp
xchg
and
jbe
add
dec
xchg
add
stc
cmp
jle
push
in
movsb
mov
fcomps
push
pop
es
inc
jo
jecxz
es
push
lret
mov
add
lret
dec
xorl
push
imul
sub
xor
sub
pop
mov
pop
add
imul
inc
adc
dec
mov
mov
test
inc
nop
inc
cmpsl
mov
loopne
push
jle
outsl
jle
push
jmp
arpl
mov
int
mov
in
cmp
addr16
and
sub
in
je
adc
push
push
or
mov
xlat
mov
in
push
mov
jge
dec
mov
in
pop
stc
ret
adc
cltd
mov
js
sub
cmp
pop
jae
aaa
jno
add
dec
or
cwtl
scas
pop
mov
add
divb
leave
inc
js
mov
jno
ljmp
jp
sti
mov
out
sub
dec
jmp
mov
pop
dec
int
jne
imul
mov
out
and
xchg
and
outsl
add
stos
add
lods
fwait
insb
push
ljmp
leave
adcl
or
int3
sti
inc
push
mov
inc
fwait
xchg
fcoml
jmp
fwait
loopne
roll
sub
js
orb
jbe
jns
cmp
je
subb
mov
outsl
iret
push
inc
aas
aam
xchg
daa
mov
jle
scas
stos
loop
lret
add
push
test
pusha
cmp
mov
add
mov
dec
or
out
cmp
inc
jmp
test
jnp
les
xor
xor
xchg
push
sbb
and
push
jne
jnp
jne
rcl
je
xchg
push
sarl
jns
xchg
sub
les
stc
jo
xchg
outsl
dec
push
mov
jnp
mov
mov
pushf
test
add
ret
insl
inc
hlt
lods
ljmp
mov
mov
nop
inc
dec
jo
test
mull
das
int
scas
lret
ret
cltd
cmp
sub
pusha
cmc
inc
jmp
mov
movsl
loopne
jge
push
pop
sbbb
out
mov
xchg
push
mov
inc
fiadds
lahf
dec
femms
mov
pop
push
nop
ret
dec
iret
mov
mov
and
in
movsl
sbb
ljmp
mov
mov
cli
xlat
sbb
jne
jnp
insl
sub
jg
jne
fcoms
inc
cmp
nop
cmp
push
mov
push
adc
out
into
dec
lahf
daa
cmp
mov
xor
jns
xor
in
xorb
mov
lock
insl
lock
or
pop
xor
sbb
inc
nop
or
jnp
bound
aaa
int
cs
jne
dec
movsl
inc
xchg
ljmp
cltd
into
test
jl
xchg
pop
cmp
adc
pushf
test
or
cmc
jl
movb
mov
fucomp
cmc
jg
cmp
jae
mov
sbb
popa
ret
push
xchg
sar
cmpsb
jno
dec
imul
aas
int
fldcw
jno
cvttps2pi
inc
pop
lock
dec
sbb
fstpt
sub
cmc
scas
jmp
dec
nop
xchg
sbb
mov
dec
xor
sbb
lret
fistl
fdivrl
lcall
imul
xchg
xor
int
fwait
out
sbb
add
sbb
jecxz
cltd
adc
push
adc
pop
movsl
mov
jle
lahf
sbb
adc
rolb
imul
lcall
sti
imul
incl
mov
mov
test
jg
ljmp
out
fdivrl
xor
xchg
jbe
sbb
outsb
push
ret
mov
xchg
sbb
inc
push
mov
in
inc
or
adc
int3
lret
fiaddl
sbb
pop
and
add
scas
fdivp
or
xor
cltd
mov
fmul
add
imull
aaa
inc
fmull
aaa
das
push
ljmp
dec
push
in
push
fadd
sub
mov
imul
push
pop
cmpsl
test
mov
pop
stos
test
aaa
aas
sub
enter
push
mov
pop
mov
add
rcr
gs
and
adc
xchg
mov
pop
pushf
lock
sbb
or
loop
cmc
rorl
cltd
dec
rcr
ficompl
lahf
add
ds
sub
adc
fisubl
jmp
and
addl
aaa
test
in
and
push
mov
jmp
dec
xchg
push
jle
sub
xor
or
out
inc
popa
xchg
addb
push
jnp
std
fidivs
mov
sbb
jo
insl
idivl
mov
ror
lahf
outsb
rcl
fldt
nop
es
sbb
push
push
xchg
ficoms
xor
ja
cmpsb
popa
ret
mov
pop
imul
leave
cmp
leave
pop
bound
repnz
data16
popa
adc
jnp
outsl
out
mov
and
out
notb
mov
cmpsb
xchg
cmp
fisttpl
js
cmpsb
cmpsb
outsb
out
push
lahf
hlt
mov
pop
mov
mov
cmp
lahf
xchg
mov
xchg
dec
mov
xchg
jl
mov
and
add
scas
dec
rclb
repz
pushf
pop
lods
or
or
xchg
lock
out
xor
ss
pop
cltd
and
push
data16
outsl
mov
cmpsb
int3
ficompl
insl
loopne
adc
xchg
mov
test
notl
fdivrp
out
out
push
cld
adc
lods
or
fdivs
pop
or
mov
jns
cs
lds
into
loop
cmc
les
mov
pop
orl
sub
xchg
dec
mov
mov
jge
in
icebp
mov
lods
push
mov
stos
jb
xchg
fstps
ja
mov
repnz
or
stc
push
loop
inc
pop
xchg
or
insb
and
push
into
aam
cs
pop
data16
scas
pop
fcomps
jmp
mov
js
outsl
dec
xor
andb
pop
push
and
clc
pushl
or
hlt
outsl
lods
stos
inc
inc
sahf
stos
cmp
fimuls
ret
pushf
mov
fistpl
mov
pop
jl
insb
cmp
cmp
pop
popf
mov
out
ja
push
testl
mov
or
mov
cmp
mov
rcl
dec
mov
fiadds
popa
pop
out
xor
sbb
push
ret
xchg
loopne
dec
jbe
enter
fwait
mov
in
dec
cmp
sub
xchg
int3
adc
movsb
pop
pop
les
add
ja
cmp
mov
mov
hlt
iret
ss
insb
jns
xchg
sahf
rorl
mov
test
jae
test
outsb
lds
adc
jl
subl
loopne
orb
mov
dec
test
and
loopne
add
clc
pop
cmp
cmpsb
out
mov
xchg
outsb
std
mov
ds
lret
aam
mov
push
pop
xchg
inc
ret
out
mov
dec
in
cmp
sub
stos
bound
pop
push
ret
mov
xor
test
data16
add
dec
dec
pop
js
lea
out
aaa
out
mov
jg
adc
pop
add
rorl
jmp
mov
js
pop
fs
and
fs
aad
sbb
movsl
popf
hlt
lret
adc
call
stc
out
cmpsb
and
sarb
pop
pop
lahf
pop
aad
mov
aas
cmp
loop
das
subb
jge
clc
add
mov
movsb
mov
sbb
adc
or
ss
jns
aam
inc
insb
cltd
push
add
pop
or
dec
pop
mov
inc
mov
and
rcrb
adc
xlat
jbe
shll
aad
pop
ret
adc
std
popa
xor
cmpsl
xor
bound
push
shrb
idiv
repz
fwait
iret
test
daa
mov
orl
out
or
cmp
jmp
lahf
bound
push
mov
int3
repz
push
int
ss
lret
mov
mov
cmp
inc
pop
xchg
lds
fisubl
push
lcall
sbb
jno
adc
int
rcr
xchg
lcall
clc
test
not
and
pop
out
inc
mov
sub
stc
lret
and
xchg
data16
lea
scas
js
shll
cmpsb
pop
sbb
mov
jbe
jg
fs
dec
aaa
cmp
mov
push
mov
in
test
lret
pop
in
mov
nop
add
pop
out
push
fnsave
enter
inc
repz
negl
stos
mov
adc
mov
popa
adc
push
or
std
repz
jne
arpl
sbb
test
sub
imul
imul
loope
cmp
xor
movsb
cmc
mov
aad
jns
mov
and
in
int3
mov
mov
jl
push
fmull
fisttps
fists
lcall
inc
enter
and
push
fstpl
or
jl
sarl
mov
push
movsb
mov
pop
mov
loop
pop
mov
addr16
lods
das
cs
out
mov
adc
jns
lret
adc
xchg
xchg
push
in
mov
mov
dec
pop
jns
lock
ficompl
push
adc
jecxz
repz
jnp
loop
popf
shrl
popf
push
fbstp
cmpsl
jno
lods
jns,pt
fnstenv
pop
inc
sub
pusha
or
mov
das
pusha
cld
xor
les
pop
test
push
sub
jecxz
clc
std
adc
subb
lahf
jg
subb
ljmp
fadd
mov
mov
xor
fisubrl
test
rorl
xchg
mov
fs
cmc
cmc
ret
lock
shl
xchg
xor
dec
and
inc
push
dec
stos
sbb
push
into
pop
out
sbb
out
das
icebp
aad
ret
leave
mov
aad
popf
mov
test
cmc
je
jns
or
pop
sahf
enter
cmp
xchg
cmp
adc
sbb
outsb
aam
inc
test
cmp
cli
insb
int
xor
movsb
test
fdivl
mov
cmp
xchg
test
cmp
jns
pop
insb
popa
cld
testl
sub
xchg
add
cmpsl
mov
or
addr16
pop
movsl
mov
pop
xlat
sbb
push
ds
int3
pop
mull
inc
cmp
cmp
jecxz
inc
mov
mov
mov
dec
jb
fstpl
ss
loop
adc
mov
std
xchg
lock
sbb
add
jae
je
mov
jo
out
xor
xor
dec
fucomip
fidivs
dec
jns
inc
lds
and
jnp
in
ret
sub
mov
mov
fistps
mov
or
push
out
mov
xchg
sbb
negb
sarb
xchg
test
idivb
dec
sbb
adc
inc
mov
cs
push
add
ret
mov
xor
or
add
or
aam
inc
inc
sub
aad
or
aad
jp
ja
add
imul
gs
push
adc
xchg
icebp
inc
aaa
ret
jbe
xchg
out
cmp
push
test
cli
cmp
std
or
loopne
adc
popf
dec
call
xor
xchg
inc
add
shll
aad
jns
adc
imul
in
les
ficompl
add
scas
xchg
push
cmc
aam
mov
xchg
jp
cli
sub
inc
jo
cmp
inc
cs
shlb
pop
outsb
sarb
js
loopne
cmp
dec
arpl
lcall
mov
imul
sti
adcl
sbb
subl
sbb
ffree
sahf
mov
jl
arpl
add
fdivr
cmpsl
in
mov
or
jmp
pop
jns
adc
cli
push
loope
mov
in
jmp
imul
mov
jnp
out
outsb
jp
inc
ret
add
out
in
jbe
inc
std
add
push
jg
adc
xorb
jns
ror
pop
int3
pop
push
daa
aaa
push
nop
sbb
bound
repnz
jns
stc
addl
fstpl
mov
icebp
push
push
mov
das
das
loop
fadds
pop
dec
mov
es
jl
andps
or
mov
testb
cmp
leave
icebp
add
and
test
nop
and
pop
mov
adc
cmp
lock
ficomps
jg
mov
mov
out
add
fsubs
xor
in
mov
push
dec
jp
mov
js
subb
mov
test
jp
loop
sarb
shl
and
xchg
lahf
cmp
jns
lret
mov
ss
dec
xor
adc
rolb
mov
mov
outsb
push
jne
cmp
mov
adc
das
repnz
fdivs
push
pop
jl
jge
int
push
or
sub
sub
stos
ljmp
lea
mov
cltd
stos
push
insb
xchg
mov
fucomip
or
xchg
lcall
addr16
ljmp
xor
xor
jno
mov
call
xor
xor
stc
cmp
push
xor
push
add
inc
std
pop
movsl
mov
out
cs
xor
xlat
xchg
cmpsb
stos
cld
xorl
popa
mov
mov
xor
or
inc
xor
mov
xchg
pushf
add
lret
sub
movsl
inc
pop
shl
scas
jg
mov
into
mov
mov
pop
add
sbb
scas
mov
ljmp
push
clc
add
cmpsl
fidivl
mov
repnz
clc
enter
pop
ret
js
jmp
lahf
xchg
pop
lock
imul
popa
cmp
dec
cmp
and
outsb
add
imul
sti
jecxz
call
mov
adc
or
xchg
lea
leave
or
mov
push
pop
mov
int
inc
push
jle
lahf
mov
scas
popf
pop
sub
enter
fistps
xor
addr16
or
mov
inc
or
ds
xchg
shlb
push
xor
jo
inc
fcompl
int
rolb
shr
push
cltd
mov
faddl
fists
add
xchg
ret
inc
loopne
mov
jmp
lahf
int3
imul
push
mov
out
xlat
xchg
sbb
push
mov
cmp
push
adc
stos
repnz
sub
adcl
lds
es
or
adc
icebp
or
mov
sbb
xchg
jb
fsubl
in
mov
into
jns
stos
rcrb
scas
cmp
aam
lea
sub
jg
mov
lahf
inc
mov
dec
js
jb
lret
scas
divl
jns
mov
adc
sbb
jmp
fnstenv
push
out
mov
xor
sti
push
inc
mov
or
cltd
sti
jb
hlt
cmp
xlat
rolb
jl
cld
sahf
mov
insb
xchg
fldl
xchg
xor
pop
push
sbb
sbb
data16
bswap
ret
push
int3
cmp
in
sub
push
lahf
rorl
dec
in
and
cli
mov
addr16
mov
adc
jo
enter
les
jns
sbb
cmp
dec
cmp
or
xor
and
dec
mov
mov
mov
xchg
or
in
jge
js
mov
xchg
push
fldenv
lods
adc
sbb
js
bound
std
jne
and
popf
jle
lahf
ljmp
sbb
es
push
mov
or
dec
fdivs
xchg
sub
jl
jbe
jle
nop
push
or
jns
sarl
scas
jmp
inc
push
inc
and
test
sbb
jo
sub
pop
fidivrl
inc
cld
inc
out
pop
pop
inc
mov
in
js
fisubrs
repz
and
pop
lahf
pop
addr16
adc
pop
jb
popa
mov
and
jae
sbb
repnz
bound
inc
xchg
sbb
xchg
sbb
fldcw
lds
or
imul
or
pop
xchg
cmpsl
rcrl
sahf
adc
mov
sub
dec
ja
cwtl
inc
out
cld
mov
dec
mov
push
std
pop
and
xchg
int
pop
call
or
push
das
repz
outsb
bound
mov
push
jae
xchg
ret
cltd
cmp
xchg
cld
mov
sti
outsb
dec
push
adc
dec
mov
dec
push
cltd
cmp
jae
push
mov
sub
mov
or
in
es
into
and
sbb
push
push
outsb
lods
mov
xor
pop
in
cmpsl
xor
xor
mov
jne
negl
or
xor
mov
pop
lret
inc
cs
pop
cmp
lods
pop
jo
pop
adc
addr16
pcmpeqb
in
mov
sub
popa
cmpsb
jl
das
mov
sub
movsb
in
push
es
mov
pop
push
jb
mov
cmp
daa
sbb
addr16
ficomps
cmpl
and
test
out
fwait
in
dec
test
or
popf
cmp
repz
clc
and
push
cmp
test
rorb
dec
out
adc
sbb
mov
dec
mov
mov
lods
gs
sbb
push
negb
jns
xlat
or
inc
pop
xor
out
push
mov
out
psraw
dec
lock
sbb
adc
jno
xor
repz
bsr
lods
lcall
shlb
cmp
fisubrl
hlt
xchg
cmpsl
pusha
jnp
aad
cmp
jns
jo
sbb
je
enter
jb
mov
inc
les
cmp
cmc
shr
lret
jecxz
mov
mov
test
xor
jecxz
addr16
in
cmp
aad
das
lea
push
and
xchg
jle
into
sar
sub
mov
ret
mov
pop
inc
adc
jge
hlt
cmp
pavgb
mov
loope
dec
mov
fiaddl
cmpsl
lods
aaa
adc
lahf
in
inc
dec
and
adc
pop
and
scas
insl
cmp
inc
imul
xor
cmpb
push
es
inc
add
and
adc
and
mov
ret
fwait
pop
pop
in
lods
inc
push
je
inc
loopne
dec
ss
adc
aaa
adc
xor
sub
out
and
push
in
push
cld
lods
adc
add
dec
ret
jmp
inc
sbb
ss
push
movsb
cmp
xchg
mov
test
mov
sbb
fistl
repnz
stos
xor
dec
xor
add
bound
dec
dec
adc
sub
jno
mov
jns
dec
insl
cwtl
popa
jb
mov
add
mov
jecxz
test
ds
nop
leave
and
into
stos
mov
xchg
and
add
dec
test
lahf
xor
mulb
inc
jne
push
mov
jb
int3
clc
insl
mov
test
in
ds
lds
loope
stos
rcll
daa
mov
popa
cmpsb
mov
pusha
cmp
push
inc
inc
and
je
inc
sbb
leave
adc
adc
daa
inc
add
and
and
cmp
leave
std
adc
ret
outsl
int3
aas
add
push
mov
inc
xchg
mov
test
pop
aas
dec
ret
push
inc
sub
out
lahf
and
hlt
or
jnp
shll
mul
lahf
insl
jmp
std
into
xchg
sub
inc
int3
std
fs
sbb
mov
xchg
cmp
cmp
mov
stos
jecxz
arpl
or
and
mov
push
add
lahf
out
jne
xchg
jmp
and
push
roll
in
dec
and
icebp
loopne
jae
loope
pop
cld
push
cmp
mov
insb
push
fwait
aaa
jae
sahf
pop
mov
out
clc
xchg
mov
mov
das
stos
xlat
push
xor
nop
mov
fwait
dec
cmp
cli
clc
cmp
adc
mov
add
scas
jno
fidivrl
jle
or
inc
sbb
icebp
add
in
and
xorb
data16
xor
testb
mov
add
movb
jle
jnp
dec
shlb
movb
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
jmp
incl
je
fs
mov
add
jp
arpl
push
test
iret
xchg
rep
mov
iret
mov
fbstp
mov
push
cli
cwtl
insl
sub
imul
jl
dec
dec
jns
mov
adc
xor
imul
scas
mov
dec
xor
inc
decl
jge
lahf
enter
jno
jb
sti
mov
fs
mov
cld
jno
loop
adc
and
into
fimuls
or
clc
and
scas
jl
adc
jne
addr16
lcall
imul
divl
adc
mov
adc
xchg
push
jp
js
sahf
scas
push
stos
add
jo
cmpsl
push
subl
sbb
cs
push
xchg
dec
and
fwait
and
jl
adc
icebp
mov
shll
lcall
mov
dec
int
jae
mov
xchg
loopne
mov
std
mov
arpl
cmp
xchg
out
orl
and
loope
sar
lea
fsubrs
add
clc
mov
sub
and
test
and
mov
jmp
nop
cmp
sbb
lods
addl
lods
jns
push
jo
lock
rclb
fnsave
xchg
test
add
das
insl
repnz
lret
rcrl
mov
push
xchg
or
push
aas
fldt
shr
mov
push
jp
jne
add
test
out
mov
inc
enter
xchg
fiadds
mov
xchg
xchg
jg
aas
out
sub
inc
mov
cmp
pop
mov
mov
sub
arpl
xchg
loopne
mov
lea
into
push
jle
hlt
pop
clc
push
cwtl
ret
inc
andb
movsl
shll
push
ds
pop
aam
out
ja
out
rcrl
dec
aam
jmp
cmp
xor
imul
or
jnp
stos
aad
leave
sti
cmp
pop
mov
movsb
in
pop
sahf
cmp
inc
mov
loopne
add
rorb
jbe
pop
clc
ja
repz
in
dec
cmc
movsb
ficoml
cli
add
and
xchg
xchg
push
int
rcrb
mov
sub
mov
inc
dec
xor
inc
aad
mov
lcall
outsb
jbe
add
std
test
rcr
lods
adc
sbb
xchg
push
lea
inc
rclb
in
adc
pop
xchg
in
out
push
imul
lds
xor
mov
divb
inc
test
or
mov
das
add
mov
in
jmp
xor
or
test
addr16
pop
iret
ss
in
aam
mov
in
insb
sar
aad
sub
xor
pusha
sub
std
and
push
mov
rcl
jp
fcomps
test
dec
call
mov
fists
cli
and
ljmp
dec
pop
sub
test
cltd
sbb
jge
or
sarb
sbb
popa
movsl
scas
mov
packuswb
in
test
jmp
ds
loope
es
pop
out
pop
inc
xchg
repnz
hlt
and
stos
mov
and
add
pop
imul
adc
xlat
jb
scas
adc
mov
das
jmp
movsb
xor
mov
das
push
lock
pop
sbb
pusha
imul
das
pusha
js
outsb
and
inc
cmp
int3
cmp
pop
clc
aad
cmpb
out
cwtl
cltd
or
aas
arpl
bswap
in
subl
xchg
lahf
fstl
push
jns
orl
fs
outsl
pop
mov
mov
mov
lahf
dec
sbb
lcall
mov
add
push
jo
inc
cmpsb
pushf
xchg
cli
push
std
shll
les
xor
dec
mov
cmp
clc
mov
cwtl
jle
loop
mov
mov
pop
xchg
in
mov
mov
push
cmp
das
jbe
in
es
repnz
shrb
mov
mov
mov
and
add
repz
int
test
lock
in
and
jne
dec
dec
sti
rcl
in
inc
mov
sbb
fildll
das
xchg
xchg
cs
mov
sahf
out
lds
aas
mov
pop
pop
aas
stos
mov
or
jne
es
test
cmp
pop
orl
sbb
add
jl
loope
dec
xchg
cmpxchg
iret
icebp
shll
daa
roll
jno
pop
scas
push
sbb
test
sub
jge
pop
mov
outsb
lods
lds
mov
xchg
push
negb
mov
or
mov
xchg
out
addr16
call
fadd
aad
es
sub
push
loopne
or
xor
shl
jne
sub
cmpsb
mov
sbb
mov
xchg
add
scas
xor
outsl
jmp
out
movsb
lods
cwtl
add
jg
mov
gs
jne
pop
dec
jmp
xchg
xchg
popa
mov
rcl
orb
shll
lods
stos
into
stos
into
or
and
scas
pop
sub
in
repz
jb
icebp
push
jge
aam
inc
ljmp
orl
and
sub
out
dec
je
test
in
xchg
inc
imul
push
cmp
roll
imul
aam
xor
pop
xor
test
out
add
les
mov
mov
adc
xchg
mov
js
mov
pop
inc
subb
into
mov
loop
in
shl
cmpsl
push
data16
mov
shlb
mov
adc
jae
andb
ficoms
jge
xor
andb
sub
nop
jmp
adc
imull
mov
test
xchg
xchg
or
scas
shlb
mov
or
add
pusha
xchg
inc
mov
nop
outsb
or
and
adc
push
popf
mov
inc
sbb
fisubrs
pop
mov
jb
push
jge
xor
test
leave
jnp
cmp
addl
sbbb
xchg
jl
lahf
sbb
mov
fsubr
pushf
rcrl
jnp
ret
test
jecxz
mov
jg
nop
cmpl
shrb
adc
mov
shrb
add
inc
ljmp
add
inc
cmpsb
jle
sbb
or
xchg
dec
xchg
jp
repz
call
loop
sub
cmpb
adc
ljmp
mov
cwtl
xor
popf
in
aad
mov
sub
shl
jmp
mov
leave
test
into
std
cmc
pop
repz
stos
leave
int
mov
int
mov
ljmp
ret
xchg
jp
sub
in
test
imul
adc
xchg
xchg
shll
daa
call
mov
stc
mov
mov
adc
cmp
push
lcall
xchg
push
lret
pop
xchg
pop
sbb
lret
cs
jecxz
jo
lcall
imul
pop
enter
jo
jne
fiadds
mov
mov
enter
xchg
dec
fadds
xchg
push
push
push
or
mov
mov
in
jbe
and
int3
mov
xor
ss
ss
in
mov
xor
pop
mov
test
inc
sbb
xchg
subl
insb
push
lock
jno
xchg
pop
sub
call
sahf
fs
repz
dec
jge
das
test
push
push
es
pop
lea
sbb
pop
outsb
pusha
adc
xor
jne
pop
scas
xorl
dec
pusha
mov
add
fs
or
and
rorb
sbb
push
pop
cmpl
xlat
and
fcmovnbe
cmp
lcall
xchg
sub
sbb
xchg
dec
cmpsl
arpl
icebp
sbb
imul
outsl
push
add
out
pop
or
mov
insl
pusha
push
sbb
sub
pop
rolb
fistl
ss
lret
addr16
lock
fiaddl
push
mov
in
cmp
sbb
or
xchg
cmp
cmp
mov
sbb
lds
jo
imul
jg
adc
xchg
pushf
or
xor
lret
out
and
loop
movsl
cmp
push
adc
xlat
jns
add
imul
mov
lret
xchg
shll
cmp
addb
cltd
push
mov
fcmovb
mov
dec
pushf
sbb
sar
fdivs
dec
jb
pop
cmpsl
add
cmp
sbb
std
dec
inc
jo
push
daa
xor
scas
cmp
inc
ja
test
pusha
sahf
sbb
fst
xchg
push
mov
cmp
iret
push
ja
popa
stos
hlt
shlb
stos
and
mov
paddb
xchg
mov
movsl
inc
popa
outsb
jecxz
cmp
pushf
mov
xor
cwtl
fcoml
mov
loopne
jecxz
mov
outsb
and
add
adc
xchg
xor
mov
push
jmp
push
and
sar
cmpsb
negb
gs
push
outsb
fidivl
jge
cmpsb
pop
sub
fldl
test
stos
push
cmpsb
fneni(8087
int
jp
ss
sub
or
and
fildll
xor
icebp
bound
xor
stos
and
fnstenv
jnp
xbegin
dec
cwtl
push
mov
xor
mov
push
adc
adc
ret
add
fwait
lock
adc
jp
xor
out
insl
dec
mov
fmuls
gs
data16
add
testl
cs
lcall
jb
sub
popf
dec
popf
push
pop
data16
outsl
sbb
ja
inc
xchg
pop
push
lret
addb
inc
lock
pushf
mov
xor
sub
pop
dec
popf
shl
inc
xchg
jl
jg
push
shr
xchg
sub
ljmp
mov
dec
cmp
mov
jae
push
dec
lcall
rorb
add
jle
insb
mov
jl
insb
mov
cmp
into
sbb
dec
stos
or
mov
scas
popf
push
lahf
ret
in
shll
data16
pop
cmp
and
mov
xlat
fwait
or
mov
mov
jp
push
cltd
jo
jo
jmp
sarl
in
mov
xchg
inc
jl
gs
adc
shr
stc
cld
lahf
out
mov
in
mov
mov
stos
je
adc
mov
jmp
fsubs
mov
xchg
jo
sti
aam
popf
insb
cmp
or
ljmp
rclb
aaa
out
xchg
sub
mov
cld
xchg
dec
enter
mov
xchg
data16
rolb
popf
mov
jbe
test
sbb
faddp
loopne
pop
lods
ljmp
sub
stc
add
cmpsb
lods
int3
cmpsb
shrd
or
inc
add
add
movsb
jg
sbb
fcmovnbe
shll
clc
sub
jmp
push
dec
aas
cs
adc
insl
std
mov
cli
inc
loope
xchg
popa
xchg
test
lock
mov
imul
int3
xchg
add
mov
ficoml
push
ret
lds
pop
cs
scas
jno
test
insb
jns
lret
imulb
mov
inc
jae
or
fldl
cmc
repnz
adc
iret
adc
loopne
les
mov
inc
pop
push
inc
or
aam
dec
negb
xor
dec
xor
bound
imul
xchg
aad
push
imul
or
sub
ja
cmp
fistl
lock
sbb
sub
xchg
mov
cwtl
mov
jl
mov
sahf
jb
fs
inc
bound
xorb
outsb
aaa
jl
cld
adc
push
cwtl
hlt
adc
aad
xchg
sbb
add
add
pop
ret
add
mov
scas
mov
jle
jne
xor
pop
cld
stc
test
loop
xor
stc
jns
mov
popa
mov
out
lret
sbb
test
mov
xchg
into
rol
repz
icebp
add
data16
ja
loopne
es
jecxz
adc
and
popa
fdivrp
imull
cli
xor
mov
mov
jl
in
dec
jne
mov
sub
sub
popa
scas
push
ret
sarl
mov
call
push
loopne
mov
xor
push
shrb
int
sub
icebp
gs
jo
ret
add
mov
aad
xchg
bound
shll
hlt
gs
daa
mov
mov
ds
lods
call
sub
push
out
jl
push
je
sbb
aaa
push
cmp
lcall
das
insl
ds
movsw
insl
pop
mov
jne
inc
sub
pop
imul
popa
mov
jns
mov
out
mov
fwait
jb
xchg
sub
lret
push
insb
mov
cwtl
outsb
aaa
dec
test
pop
stos
push
jp
xor
or
int
cmp
int
repz
cmp
xor
adc
ret
enter
call
or
les
popf
cs
das
mov
popa
test
sub
jl
xor
dec
cli
jno
in
cmpsl
sbb
iret
cltd
mov
ja
jnp
or
lock
push
push
jno
loopne
lods
or
stos
xor
orl
sub
push
imul
ror
cs
xor
pop
in
inc
lcall
dec
pop
add
push
pop
and
xor
jmp
sbb
mov
xchg
or
pushf
or
mov
out
sbb
icebp
sub
xchg
and
ljmp
jb
push
xor
hlt
or
repnz
addr16
lock
jl
mov
jg
push
sub
test
pop
dec
data16
popf
pop
jp
cmp
hlt
ljmp
or
jecxz
adc
xor
fnsave
aam
mov
adc
inc
mov
arpl
push
decb
pushw
enter
xchg
jp
jp
call
xchg
sbb
nop
loop
es
cmpxchg
mov
push
jl
xor
mov
mov
xor
repnz
xor
sbb
fs
into
ret
call
xor
bound
in
cmp
lret
cmp
test
loope
jo
push
in
std
test
and
outsl
in
pop
lock
or
fsubrl
fwait
and
loope
in
sbb
popa
push
fwait
sbb
loope
orb
push
out
inc
iret
cmc
int
xor
test
cld
adcl
call
das
mov
adc
cmp
dec
mov
mov
into
fistpl
and
mov
mov
mov
js
fsubrl
jg
xor
addr16
js
fldcw
int3
push
mov
mov
dec
data16
stos
push
push
and
push
pop
ret
hlt
fmul
mov
movb
mov
xlat
ss
inc
xor
adc
stos
dec
rcl
push
jo
fisttpll
pop
and
aam
jns
fcom
push
adc
dec
mov
add
jae
ficompl
mov
hlt
push
ficomps
mov
pop
jb
arpl
aam
adc
insl
cs
lods
repz
cmp
xchg
dec
jbe
int3
push
or
mov
aam
cmpl
lret
outsl
inc
stos
push
insl
xlat
fldt
jae
xor
jno
lret
xchg
test
loop
in
pushf
test
push
enter
fmull
lcall
mov
arpl
sbb
ljmp
add
mov
mov
mov
outsl
inc
jg
adc
lcall
outsb
cmp
mov
aad
add
pop
inc
xchg
out
in
out
push
add
test
lret
push
in
dec
leave
add
cmpl
les
or
and
pushf
call
lret
out
and
fwait
xchg
cmpsb
bound
mov
lret
xchg
loop
mov
or
jne
add
sub
gs
or
sbb
aam
mov
fdivp
daa
mov
ud1
cmp
stc
out
das
pop
pop
lret
stc
ficompl
vphsubbw
int
gs
pop
inc
mov
push
cli
pop
cmp
repz
std
inc
aam
dec
call
jle
xchg
or
add
cli
inc
stos
xor
pop
adc
xor
inc
lods
shrb
sbb
adc
movsl
cmp
enter
fidivrl
movsl
ret
out
or
add
adc
ljmp
jnp
sbb
sbb
adc
xor
pop
stos
inc
bound
fstl
fmulp
inc
fidivrs
ror
lret
and
jae
notl
mov
jnp
pop
pop
push
mov
jne
fiaddl
jp
inc
cli
in
dec
insb
push
add
xor
cmp
and
mov
arpl
aad
mov
dec
sti
imulb
sbb
adc
sbb
shrb
sub
sub
test
pop
xchg
jmp
mov
or
add
dec
fdivp
mov
dec
cmp
adc
shl
xchg
push
loope
jmp
push
adc
pop
std
mov
lahf
lret
cmp
jae
cmp
dec
repz
pop
lea
sub
dec
push
lret
jo
loope
xchg
inc
cmp
xchg
rcll
lcall
mov
shll
les
sub
test
add
adc
daa
mov
stos
and
lea
or
arpl
push
or
cmc
xor
shl
mov
and
lret
daa
or
fadd
inc
xor
hlt
fsubl
jg
cmp
sbb
pop
das
cltd
call
jbe,pt
mov
inc
sub
mov
shr
adc
ja
sub
sti
inc
test
inc
shlb
loop
cmp
sub
cmp
inc
lods
mov
cs
push
popf
ja
lret
adc
gs
ret
jge
mov
push
sarl
ljmp
cwtl
xchg
clc
cwtl
fstps
fcoml
loope
inc
mov
add
imul
mov
dec
icebp
aas
inc
test
mov
jp
and
jno
sbb
push
data16
mov
xor
pop
sub
iret
jno
icebp
push
mov
rorb
mov
mov
pop
dec
mov
xchg
pop
jmp
fs
push
mov
gs
fs
xor
add
push
add
negl
pop
push
ret
xchg
mov
faddl
int
call
mov
jae
push
mov
jg
fsubl
pusha
mov
lods
xor
cld
sbb
mov
mov
jge
mov
dec
leave
cmp
fsubl
in
lahf
stos
or
xchg
stos
lds
lods
sbb
jp
or
test
cmp
mov
and
mov
and
shlb
ds
insl
movsl
fs
std
mov
or
inc
outsb
loop
cmpsl
sub
jg
push
xchg
rcll
mov
ljmp
loopne
inc
shll
rorl
in
outsb
cli
push
lahf
jge
fwait
or
cmovp
call
inc
cmp
loop
clc
add
cmp
mov
mov
mov
and
insl
rol
int
dec
dec
mov
cmp
adc
dec
adc
je
sti
inc
popf
xor
call
out
push
popf
ss
sub
and
xchg
es
cmpsl
cmpl
xor
inc
mov
jmp
dec
ljmp
test
test
inc
sbbb
adc
outsb
adc
addr16
adc
inc
popf
push
repnz
shlb
mov
in
test
outsl
pop
sbb
movsl
fcomi
sbb
add
int
inc
sti
pop
sbb
push
push
cmp
sub
xorl
popa
roll
enter
pop
sahf
sub
and
movsb
and
pop
xchg
or
dec
mov
ja
mov
shlb
sub
lods
loopne
inc
shlb
mov
dec
ret
pop
jle
mov
lods
sti
pop
into
sahf
movl
pushl
fsubs
mov
inc
xchg
jge
insb
inc
inc
enter
inc
push
jmp
aas
or
add
push
inc
xchg
add
iret
mov
mov
mov
outsl
or
outsb
mov
lret
mov
stos
fisttpl
cmpsb
repz
xor
jl
mov
mov
and
mov
ja
mov
xchg
aaa
cmp
cmp
shrl
xor
push
icebp
cmp
dec
cmp
xchg
outsl
xor
xchg
sarb
bound
test
popf
insb
sti
dec
jle
ror
insl
mov
pushl
sub
mull
xor
mov
cs
mov
mov
add
out
test
cli
cmp
mov
push
inc
dec
in
pushf
add
mov
and
stos
jg
add
xchg
inc
test
jb
ja
xchg
and
in
mov
arpl
dec
in
fisubl
inc
mov
loope
outsl
call
jns
testb
pushf
cltd
pop
stos
dec
inc
sub
xchg
cmp
cmp
mov
loopne
and
mov
mov
in
pop
test
fcoms
shlb
and
iret
jbe
xlat
mov
xchg
jb
ret
pusha
sahf
dec
int
inc
in
sbb
cld
loope
dec
and
ljmp
ja
push
push
testb
sub
js
ret
popl
and
xchg
adc
jbe
inc
shll
fisubrl
nop
sub
fimuls
add
xor
cmpsb
cmp
cmp
xor
das
stos
add
sbb
sbb
mov
and
xor
mov
stc
je,pt
repz
add
in
inc
mov
jmp
mov
adc
pop
jbe
daa
sahf
xchg
daa
pop
inc
sbb
lock
mov
mov
bnd
in
sub
lds
sahf
mov
sbb
inc
addr16
mov
out
mov
mov
test
jecxz
stos
adc
out
push
fists
aaa
cmc
xor
shlb
pop
pop
fiaddl
pusha
movsb
je
movsl
in
push
mov
daa
in
out
sbb
into
rclb
je
aas
sbb
stos
push
aaa
dec
pop
sbb
sbb
je
cmp
mov
lock
pop
and
dec
out
fwait
jnp
push
rclb
pop
rcrb
fsubs
xor
test
stc
imul
add
int
push
dec
cmc
cmp
cs
arpl
imul
adc
mov
jno
push
lret
and
jne
ret
cmp
movsl
loopne
inc
mov
fwait
inc
pop
insb
outsl
and
lds
mov
inc
mov
xlat
repnz
js
int3
popl
int3
pop
out
in
dec
sub
aas
inc
pop
in
mov
sub
push
or
ljmp
add
mov
fistl
inc
adc
cmp
lods
add
cmp
into
or
dec
jae
xor
push
dec
rcl
out
or
loopne
dec
adc
ja
jg
mov
int
fs
pop
mov
mov
sub
inc
imul
in
add
dec
nop
mov
jns
add
jae
stc
gs
and
inc
push
addr16
pop
stos
das
mov
dec
sbb
scas
jo
lcall
pop
arpl
lcall
lods
jmp
orb
aaa
cmp
sub
imul
and
dec
test
mov
jno
mov
xchg
inc
mov
movsl
inc
repnz
lock
mov
mov
adc
out
addr16
jmp
and
iret
dec
aad
andb
mov
xchg
jecxz
cmp
mov
shll
shrb
ja
dec
pop
scas
jg
ret
int
cmp
adc
scas
dec
pop
add
cmpsb
xchg
mov
xchg
push
inc
or
adc
cmp
push
xlat
sbb
inc
jg,pt
sbb
pop
dec
jg
sbb
out
pop
xor
dec
lahf
test
add
mov
dec
adc
sbb
arpl
xor
repnz
xchg
mov
sbb
mov
test
jp
dec
jnp
sub
xchg
xorl
add
pop
fstpt
lock
mov
or
sbb
call
dec
mov
xor
out
cmp
cmp
sub
pop
xlat
mov
and
sbb
mov
xlat
clc
cmpsb
mov
jnp
pop
and
and
sarb
mov
cltd
mov
jo
les
add
ret
and
int
cmp
divb
in
mov
lods
pop
aas
mov
sbb
cwtl
push
or
std
inc
add
dec
jp
dec
xor
out
sub
push
stos
sub
jno
dec
jbe
and
lcall
loop
jae
mov
jmp
lds
mov
mov
adc
mov
sub
xor
xor
cmp
mov
adc
pop
aam
push
and
scas
and
xchg
ljmp
mov
pop
movsl
xor
insb
out
cmp
lock
pusha
mov
xlat
nop
or
popf
push
int
dec
mov
lret
mov
test
sbb
rcll
jnp
loope
pop
dec
iret
or
shl
loop
xor
bound
jle
testb
add
dec
stc
gs
shlb
stos
pop
mov
aad
or
push
imul
jno
stos
shll
arpl
in
daa
mov
int3
lods
cld
loope
sbb
jo
cli
andl
rcrl
or
fidivrs
mov
mov
sub
decb
xor
mov
lret
push
rol
push
sarl
shrb
movsl
int
es
cmp
mov
lahf
pop
test
xchg
dec
testl
imul
push
lcall
xor
into
ret
lret
sbb
xchg
xchg
and
inc
pusha
xchg
or
push
es
pop
sub
mov
fldt
mov
add
ss
je
aam
sahf
cmp
shll
xchg
sbb
adcb
jae
push
mov
mov
rorl
sbb
dec
jbe
jo
pop
arpl
loop
add
xchg
mov
test
cmpsb
jle
mov
inc
sub
mov
mov
inc
and
out
jge
movsb
mov
sbb
fimull
xchg
add
cmp
icebp
insb
fbld
mov
subl
leave
sub
stos
mov
push
addr16
lahf
xchg
int
dec
or
adc
repz
cmp
test
xor
xor
ja
es
movsb
es
pop
mov
and
sbb
and
fsubl
loopne
adc
cld
rolb
pop
loop
imul
les
cmc
frstor
adc
push
out
push
add
int
repz
icebp
aas
cmpsl
sbb
in
inc
or
pushw
cmc
sbb
roll
mov
mov
sub
mov
mov
mov
into
insb
xchg
aaa
and
insl
sbb
hlt
fstps
dec
cwtl
mov
jae
adc
xchg
mov
sub
mull
and
insl
mov
xchg
dec
add
dec
mov
pop
andl
out
xor
in
adc
sbb
rcll
cld
in
mov
dec
int
cli
and
sub
xchg
pop
pop
push
xor
cmp
lock
imul
jl
dec
dec
into
and
shlb
call
fldl
fs
fnstenv
dec
push
cmp
data16
iret
sbb
mov
lods
mov
mov
loopne
outsl
fnsave
push
inc
jb
adc
inc
jno
mov
test
add
enter
xor
dec
add
shll
adc
and
xor
mov
xor
in
mov
notb
out
leave
in
inc
addb
adcl
adc
imulb
popf
xor
scas
mov
xchg
add
sub
movsb
sti
sbb
repz
push
cmp
mov
cs
and
lock
pop
mov
cmpsb
repz
adc
jno
mov
push
add
sahf
sub
or
daa
lock
js
stos
mov
push
je
mov
js
dec
cs
andl
pop
inc
adc
push
push
inc
jmp
rcrb
cltd
xchg
inc
leave
xchg
dec
fcmovu
mov
jecxz
ljmp
in
scas
loope
std
lret
mov
xchg
in
push
lea
or
push
test
mov
ds
adc
ret
test
jb
rorl
or
movsb
testb
mov
sub
xchg
arpl
outsl
loopne
imul
adc
test
jmp
andb
lret
push
or
sub
aaa
test
clc
adcb
daa
mov
decl
test
cmp
ret
imul
pop
inc
rol
loop
and
divb
jle
cmp
inc
jbe
jge
push
dec
and
es
es
push
scas
push
les
push
push
or
dec
dec
xchg
das
leave
fldcw
testb
mov
xor
add
push
push
add
repnz
shrb
loope
cmp
movsb
lea
lcall
push
push
addr16
push
pop
cli
xor
arpl
cmp
push
outsb
data16
lret
movsl
or
js
xchg
pop
or
xor
outsb
mov
jg
in
xchg
pop
jne
fsubrs
out
mov
int
sbb
mov
stc
test
xchg
fnstcw
cmp
jne
js
imul
loopne
sahf
mov
xor
mov
cwtl
addl
imul
cwtl
inc
mov
stc
ds
jo
pusha
shlb
inc
out
fwait
pusha
cmp
fisubs
push
or
loope
mov
sub
into
dec
gs
movb
aas
iret
and
leave
pop
cs
mov
push
hlt
in
lret
push
into
repnz
pop
pop
pop
aam
jno
adc
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
push
xor
push
mov
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
andl
xor
xor
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
andl
movl
movl
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jb
xor
mov
mov
and
sub
sub
mov
xorl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
sub
mov
sbb
sub
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
adc
movl
add
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
xorl
mov
dec
push
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
adc
mov
lea
sbb
mov
xor
or
mov
adc
mov
addl
mov
mov
xor
sbbl
add
xorl
mov
orl
mov
mov
mov
sbbl
add
dec
push
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
or
mov
adc
mov
mov
xor
mov
subl
add
movl
cmp
je
mov
jmp
mov
movl
cmp
jne
push
movl
jmp
mov
mov
mov
movl
cmp
movl
jne
add
mov
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
not
mov
sub
mov
mov
or
mov
xor
add
adcl
imul
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
xor
add
cmp
movl
mov
movl
push
movl
je
sub
mov
add
dec
mov
mov
adcl
xor
addl
add
subl
imul
movl
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
jmp
xchg
rolb
jae
fs
movsb
mov
jp
in
jp
fsubl
dec
lods
incl
push
sbb
cmc
adc
mov
lcall
pop
sahf
imul
test
in
adc
cmpsb
jmp
adc
testl
xor
daa
pop
cmc
out
bound
cltd
mov
inc
add
es
xor
sbb
dec
push
xchg
test
andb
out
lods
in
or
call
in
dec
into
roll
stos
dec
pop
dec
rolb
push
rcrl
mov
jle
dec
add
or
mov
mov
shl
xlat
mov
ret
sub
mov
push
outsl
mov
and
jge
or
out
popf
insb
test
sbb
daa
mov
inc
sahf
aas
mov
shlb
push
sbb
out
ja
shll
cmpb
daa
or
mov
jne
sub
and
loop
mov
pop
xlat
ss
push
mov
shrb
lds
insl
mov
add
stc
cmp
test
daa
lods
xchg
outsl
mov
add
sbb
push
xchg
mov
out
and
xlat
mov
jle
pop
cmpsl
xchg
sub
pop
inc
fnstcw
std
mov
push
mov
loope
mov
ljmp
jno
data16
pop
and
pop
xor
fcomp
jg
cltd
jmp
pop
mov
jge
aas
pop
jno
cs
jmp
push
mov
mov
pop
sub
bound
mov
push
xchg
adc
inc
mov
jae
add
test
inc
xchg
outsl
jmp
fisubrl
rolb
sub
sub
cld
mov
rorb
adc
enter
push
cmp
push
mov
mov
test
mov
stos
xchg
pusha
pop
test
xchg
xor
jecxz
icebp
fwait
mov
lcall
xchg
bound
cmp
jl
sub
jl
sbb
jecxz
rep
fldcw
cwtl
adc
xor
lret
outsb
dec
mov
cmp
data16
stos
or
xchg
test
jns
pop
int
sub
cmpsl
inc
movsb
imul
pop
mov
mov
xchg
mov
insb
stos
push
sahf
jo
int3
outsl
adc
lods
fsub
leave
out
adc
lock
in
movsl
mov
xor
rcr
out
sbb
das
adc
jg
jmp
pop
mov
lret
pop
sbb
cmc
movsb
icebp
fwait
dec
int
aaa
pushf
test
xchg
xor
cs
jbe
hlt
pop
xchg
fwait
xchg
and
pop
xchg
pop
xor
pop
dec
mov
popf
xchg
dec
inc
divb
les
daa
icebp
mull
add
pop
dec
fdivr
pushf
subl
and
fs
sub
js
add
xor
lahf
ficoms
jecxz
lods
movsb
test
cmpl
pop
mov
imulb
jge
dec
enter
into
mov
adc
and
fisttpl
push
mov
cmpsl
push
dec
adc
arpl
pop
jmp
mov
cld
mov
icebp
outsb
test
cmp
xchg
ja
shrl
mov
lods
movsb
jmp
cs
pop
pop
incl
into
and
mov
in
data16
das
or
push
adc
mov
mov
mov
test
jle
test
je
mov
adc
test
mov
mov
and
loope
sbb
decb
fildl
pop
setbe
inc
add
and
and
mov
jns
or
testl
jg
jb
int
popa
je
pop
or
inc
jbe
neg
inc
negb
or
xor
cmpsl
add
pop
stos
pop
adcb
pushf
xchg
xor
popf
mov
or
fdiv
ja
shlb
test
add
or
jbe
adc
arpl
fisubrl
jne
mov
aad
push
mov
popa
clc
adc
adc
jle
push
insb
imul
or
in
sub
leave
fs
and
dec
add
sub
scas
push
adc
add
pop
or
mov
mov
adc
mov
mov
dec
scas
movsb
add
call
ds
lds
lea
jle
nop
popf
push
xchg
xchg
pop
sbb
jp
cmp
xchg
mov
je
std
push
sub
icebp
jno
mov
mov
or
imul
mov
add
out
imul
jb
xchg
ficoml
pop
scas
out
inc
inc
mov
stc
scas
adc
jl
sbb
and
imul
fstpl
roll
or
faddp
lcall
fisttpll
fadd
mov
pop
dec
mov
add
mov
and
outsl
mov
inc
or
int
shr
mov
mov
dec
mov
pop
cmpsl
inc
into
mov
inc
leave
pop
pop
mov
sti
add
daa
cmc
fdiv
jge
cli
not
out
loopne
pop
pop
push
sub
arpl
push
jns
inc
mov
mov
sub
daa
mov
jp
arpl
cmp
es
daa
loopne
sub
xchg
icebp
sub
fstpl
out
test
sti
lds
mov
pop
and
sbb
jo
jg
mov
push
in
jns
stos
fst
test
pop
or
jne
sar
adc
adc
js
pop
inc
mov
sub
popa
nop
push
jl
push
or
mov
lahf
int
dec
cltd
jnp
xchg
and
push
into
mov
sahf
jl
lods
mov
mov
xor
mov
add
int3
test
mov
pusha
test
pusha
mov
repnz
int3
sbb
aad
inc
fldenv
stos
lea
mov
push
cmp
fisttpl
stos
into
push
and
sbb
icebp
xor
ffree
pop
testb
mov
ss
lret
xor
pop
mov
fidivl
pushf
mov
add
and
adc
mov
stos
xor
xchg
push
jecxz
aas
pop
fs
mov
mov
inc
shr
stos
dec
cmp
imul
sarb
icebp
stos
scas
xor
rcll
cwtl
or
pusha
lret
and
adc
mov
in
outsl
dec
icebp
inc
loop
cmp
mov
mov
rolb
out
dec
and
cld
in
mov
std
mov
mov
orb
sbb
jl
pusha
int3
sub
mov
or
pop
or
mov
jg
sti
sub
ret
shll
cwtl
aad
pop
xor
out
aad
pop
xchg
and
leave
dec
rcr
jg
daa
xor
adc
fdivp
inc
xor
outsb
sbb
dec
sbb
divb
adc
xchg
jne
xchg
mov
jge
dec
pop
and
jp
xor
int3
shll
dec
mov
xchg
int3
repz
out
ret
gs
gs
lret
jnp
adc
cmp
mov
pop
sbb
movsl
jns
aaa
aaa
and
sti
pop
push
stos
xchg
popa
dec
sub
arpl
imul
cmpsb
gs
inc
pop
iret
cmp
sti
ficomps
mov
aaa
mov
jne
xchg
psrlw
push
rcl
mov
loopne
mov
fwait
divl
cmpsb
dec
jb
cmpsl
icebp
sbb
mov
jmp
mov
or
fcmovnu
out
dec
and
mov
xor
mov
lods
mov
sub
in
push
mov
in
sbb
daa
mov
sbb
scas
sub
sbb
test
fcoml
adc
jnp
push
movsb
cmpsl
pushf
loop
and
stos
and
xchg
out
scas
jmp
das
popf
pushf
mulb
ljmp
stos
cli
dec
data16
int
sbb
es
add
jge
cmc
cs
mov
rolb
or
loop
pop
out
xchg
cmpsb
scas
push
add
lds
fs
add
or
pop
xchg
push
add
sbb
and
cmp
mov
daa
xchg
imul
xchg
xchg
push
add
add
aaa
ja
mov
das
push
lahf
popf
pop
xor
pop
jb
jnp
pop
jne
mov
fisttpl
jnp
cld
push
sbb
xor
inc
dec
dec
shrl
outsl
mov
mov
fldcw
xor
cmpsb
in
fwait
jae
cli
vmovmskpd
xlat
push
lods
aaa
xchg
xchg
dec
adc
outsl
iret
xlat
cs
lds
or
push
div
jmp
insb
push
cmpsl
fistl
sbb
cmp
fldcw
cli
push
scas
pusha
pop
sbb
call
inc
and
and
in
ret
pop
pop
adc
ljmp
and
addr16
sub
fwait
lea
sub
jno
shrl
push
je
inc
aas
ror
jno
popa
adc
mov
sbb
sbb
cli
xchg
fwait
lret
jp
xlat
loop
movsl
push
iret
bound
jp
sub
inc
out
insl
inc
sub
fstpl
push
push
mov
in
push
push
movl
ret
aaa
dec
in
and
xor
ja
push
push
jns
js
insl
test
sbb
mov
sbb
cmp
mov
and
adc
xor
loope
push
out
sub
add
aad
jb
xchg
imul
sub
jp
ret
mov
std
cmp
xor
lods
sahf
and
roll
clc
fcoml
jmp
cmp
push
jae
or
mov
push
es
aad
es
inc
out
cli
inc
inc
sub
mov
nop
shll
mov
lahf
int3
sahf
mov
arpl
add
pop
in
push
or
movsl
call
in
repnz
stos
outsl
loopne
arpl
mov
out
dec
fisubl
ret
xchg
lret
shufps
call
stos
xor
mov
test
mov
insl
mov
rclb
push
lea
das
ljmp
daa
mov
jmp
adc
inc
fiaddl
xor
dec
lahf
popl
adc
test
mov
jle
add
sub
xchg
pop
xchg
cmp
push
push
push
cmpsl
sub
xor
xchg
mov
adc
mov
add
xor
or
sti
popa
pop
subl
mov
ljmp
jb
rclb
mov
int3
mov
bound
call
mov
iret
push
enter
out
mov
jne
jle
rclb
jge
push
sahf
les
cmp
pop
outsl
ret
xchg
and
in
inc
cwtl
pop
mov
arpl
push
inc
add
and
subb
xchg
push
inc
mov
andb
mov
lods
ljmp
cmp
in
sbb
insl
mov
aas
pop
inc
rclb
jno
xchg
sub
cmp
daa
test
daa
je
mov
repz
dec
gs
mov
mov
gs
rcrl
dec
inc
push
push
je
jmp
iret
fmuls
lret
cmp
lods
lcall
xchg
cmp
inc
push
jl
sub
fistpl
cmpsb
mov
xlat
mov
jns
pop
lea
or
adc
andl
iret
pop
je
lea
push
lea
mov
and
mov
pop
or
sarl
and
mov
mov
push
shlb
aas
and
jb
push
or
das
xchg
test
jge
es
fnstcw
shll
aad
jnp
enter
add
loop
clc
mov
insb
add
test
jno
popl
mov
mov
inc
pushf
pop
cld
sti
xor
out
cmpsb
pop
or
lds
daa
divb
popf
ret
loop
loopne
hlt
jge
hlt
sbb
lea
data16
xchg
or
inc
aas
or
mov
ss
push
mov
aas
sahf
cmpsb
stos
push
adc
js
sbb
roll
movb
xor
fbld
jbe
add
pop
push
out
aaa
hlt
add
push
mov
loope
mov
dec
xchg
inc
lea
add
and
mov
bound
mov
sbb
lahf
repnz
push
push
mov
xor
push
sub
ror
dec
mov
mulb
sbb
fnop
cmpl
jmp
mov
mov
lcall
xchg
dec
push
cmp
xchg
dec
xchg
stos
divl
jp
sbb
inc
pop
lret
bound
scas
mov
inc
out
not
loopne
or
ret
add
insb
add
jecxz
in
in
add
mov
cmp
daa
inc
clc
add
std
xorl
mov
test
push
pusha
std
fwait
popl
scas
js
ds
daa
outsb
ljmp
inc
lahf
daa
shrb
aaa
test
mov
loop
out
cmp
ja
lret
fcoms
pop
iret
pop
jns
insl
push
imul
sbb
bound
js
dec
repnz
sub
inc
pop
or
ret
fcoml
sbb
xchg
lret
andb
lret
pop
test
das
sbb
outsb
daa
mov
lods
sti
out
push
jecxz
scas
mov
popa
push
aad
push
or
stc
sti
xlat
loope
std
clc
xchg
push
jb
and
repz
mov
and
and
outsl
jnp
or
ret
sbb
push
loop
adc
mov
push
jge
inc
dec
out
mov
jg
xor
insb
cmpsl
negl
sbb
pop
mov
add
inc
and
in
insb
imul
xorb
lock
adc
and
stc
jbe
das
in
ret
or
push
and
push
popa
or
bound
call
insl
push
aam
and
add
or
adc
sbb
add
or
cs
mov
fld1
sbb
cmp
int3
sbb
imul
mov
cmc
in
push
adc
sahf
cld
sub
leave
scas
push
xchg
movsb
popf
leave
ror
mov
fmuls
lahf
jns
fwait
mov
fmuls
mov
mov
jg
out
lods
iret
jno
cs
rcrb
jbe
mov
xor
cli
pushf
xchg
inc
push
jl
pop
rclb
mov
dec
cld
cmp
mov
mov
jl
sbb
cmc
xchg
mov
push
ret
hlt
and
inc
xlat
jmp
mov
cmp
mov
push
lcall
add
mov
push
adc
lahf
cmp
inc
xlat
lock
jo
pop
iret
fnsave
add
dec
test
or
inc
in
push
xchg
cmp
and
mov
cmp
xor
mulb
mov
add
xchg
nop
rolb
cmp
js
xlat
lock
mov
outsl
pop
xchg
add
jl
leave
pushf
mov
jmp
sbb
insb
dec
adc
mov
inc
lahf
xchg
scas
sbb
cwtl
push
and
push
enter
imul
adc
xor
rorb
inc
mov
or
cmpsl
mov
mov
out
pop
inc
sbb
ret
in
xor
jp
push
jns
pop
dec
jp
addr16
call
aad
mov
mov
cmp
jl
sub
add
fdecstp
jb
subb
dec
int
fsubrs
inc
orl
dec
jno
mov
mov
leave
ret
aam
mov
sub
mov
in
mov
add
xor
inc
int
clc
dec
dec
mov
out
mov
in
cmp
inc
sub
mov
push
not
int
cmp
repz
outsb
sub
xchg
enter
adc
pop
data16
sar
movl
test
cmpsl
pop
fsubl
scas
movsl
sahf
adc
dec
adc
mov
roll
scas
mov
out
fdivs
pop
sti
jge
cmp
fimuls
loope
in
xchg
addr16
iret
jae
add
imul
cmp
dec
inc
push
push
je
or
rcll
mov
push
mov
sub
xchg
push
cltd
ret
push
mov
shrb
sbbl
sub
jg
xchg
in
cmp
push
jp
lea
loop
mov
out
out
scas
and
mov
push
rorb
lds
sub
inc
enter
mov
fcompl
rolb
push
and
bnd
inc
lcall
jp
or
out
les
std
cmc
mov
stc
push
jae
cmp
aaa
dec
inc
repz
pop
or
jmp
mov
cltd
pop
pop
insb
in
test
pusha
adc
vpinsrw
ja
test
ja
test
add
mov
aam
movsb
mov
or
mov
sub
movsl
cwtl
ret
and
ret
pop
test
in
sbb
mov
jmp
add
cmp
sahf
dec
xchg
adc
mov
daa
pop
fwait
mov
hlt
add
jmp
fadds
loopne
jmp
mov
jne
jl
int3
in
cmp
shll
adc
in
add
add
xchg
mov
lret
mov
sub
scas
cld
adc
mov
mov
pop
jmp
outsl
data16
xchg
fwait
sub
cmp
push
adc
adc
jecxz
fisubl
cmp
dec
mov
pop
leave
mov
adc
ljmp
mov
adc
ret
arpl
cmp
outsl
add
adc
lret
cmp
scas
in
adc
add
sub
mov
jl
rolb
push
fistps
push
mov
mov
popf
adc
roll
mov
rorl
repnz
xchg
popf
test
mov
sub
xchg
sbb
jnp
pop
inc
and
bound
mull
pop
outsl
out
jb
shll
call
adc
dec
pop
test
idivb
cmpsb
lds
pop
mov
pop
mov
dec
pop
jnp
sarb
pop
ret
ffree
push
xlat
add
inc
jbe
mov
cmp
xor
jb
cmp
insb
push
sbb
dec
inc
inc
lds
sub
adc
fistps
gs
in
pop
loopne
or
or
in
jb
dec
inc
mov
mov
es
mov
aam
hlt
mov
leave
xchg
popf
inc
dec
test
dec
daa
faddp
pop
insb
xchg
pop
imul
aad
add
push
sahf
jmp
pop
incb
jae
into
iret
sub
adcb
jnp
or
cli
xchg
push
push
cld
shl
popa
adc
sub
aam
sub
fsubl
andb
lret
into
repz
xchg
fwait
les
cmp
cmp
ds
dec
cltd
cmp
clc
add
push
fisttpl
sub
imul
cli
cmpb
fwait
imul
gs
out
sub
mov
ficompl
rcrl
cmpsl
push
insl
xchg
or
jns
insl
lds
sbb
test
sub
inc
cmc
outsl
lods
push
sub
jno
jae
adcb
frstor
add
pop
inc
push
sbb
fisubrs
rcll
push
lock
dec
arpl
dec
mov
lcall
jnp
mov
insl
not
ja
xchg
scas
mov
imul
cmc
stos
data16
adc
aas
orb
icebp
cmp
xorl
xchg
push
cwtl
nop
mov
js
cwtl
or
ljmp
push
mov
xor
cmp
pop
push
sub
inc
ret
test
pop
mov
sbb
sbb
pop
into
testb
jb
popf
inc
xchg
into
in
out
loopne
fbld
jne
inc
mov
sub
and
shl
mov
mov
sub
fildll
or
jbe
mov
xor
aad
inc
cwtl
movsb
adc
adc
lcall
mov
dec
imul
pop
push
push
std
jae
or
stos
cwtl
cwtl
sub
hlt
ret
xor
icebp
pop
cwtl
std
aas
push
stos
in
lock
mov
add
ret
mov
xchg
mov
mov
fbld
dec
into
jno
inc
mov
cmp
out
xor
dec
xchg
ljmp
shr
mov
addr16
subb
push
mov
push
push
mov
inc
push
insl
cmp
cmp
es
dec
cwtl
filds
inc
xchg
jo
mov
lods
rclb
push
dec
dec
repnz
or
xchg
in
or
mov
sub
dec
or
stos
mov
cmpsl
cmpsb
add
dec
inc
jl
sub
pushf
inc
and
mov
clc
fdivrl
mov
pop
stc
arpl
das
clc
xchg
pop
mov
push
cmpsl
test
pop
pusha
cmp
leave
shrb
movsb
xor
dec
out
hlt
mov
pushf
inc
inc
mov
ja
xlat
jp
push
adcl
in
adc
mov
loop
mov
jbe
mov
pop
add
or
fisubs
jl
lods
inc
addl
cmp
xchg
dec
xor
push
add
iret
pop
js
and
xchg
or
std
add
sub
out
sbb
fdivrs
add
mov
insl
inc
ljmp
or
in
test
xchg
add
aas
sbbl
addb
inc
sub
push
mov
add
add
cmc
pop
adc
push
and
sarl
outsl
aas
inc
out
cmpsl
fwait
sarb
cmp
push
sbb
call
stos
jno
xchg
pusha
dec
mov
jo
mov
icebp
aad
or
in
or
mov
sub
addr16
jge
rolb
or
sbb
clc
in
or
into
lret
xchg
or
push
or
int3
movsb
and
out
aam
movsl
gs
orb
arpl
out
jne
or
or
fbstp
xlat
xor
or
xlat
loop
adc
cmp
and
in
ss
stos
test
inc
adc
push
enter
lds
jl
cwtl
js
dec
adc
imul
fwait
into
add
sub
lea
inc
ja
cs
adc
aad
mov
jns
mov
jo
push
daa
aam
outsl
add
xor
ret
out
inc
mov
fincstp
adc
push
push
test
daa
jae
std
and
jb
stc
jge
xchg
aaa
adc
lret
mov
cmp
lahf
in
mov
lods
ljmp
jle
out
call
mov
dec
pop
int
lods
push
push
jl
pop
xor
inc
rorb
fs
stos
cltd
sbb
popf
sub
jge
push
scas
or
lahf
cs
fidivs
inc
cmp
rolb
mov
xchg
jmp
pop
imul
jae
lcall
push
out
pop
popf
xchg
add
jns
nop
sbb
pop
cs
mov
push
cmp
stos
sub
mov
shlb
sti
sahf
or
cltd
sahf
xor
push
xchg
pop
inc
or
les
push
mov
pop
pop
xorl
bnd
jnp
leave
sbb
imul
test
mov
in
fcom
jmp
cmp
inc
xchg
out
sbb
ljmp
aam
xchg
add
pop
push
arpl
gs
testl
pop
add
sbb
push
in
jo
int
dec
jl
stos
or
and
push
lcall
out
es
adc
lds
insb
out
leave
fnstsw
js
sbb
aam
es
fadds
dec
pushf
dec
incl
out
sub
and
dec
pop
mov
mov
lahf
pop
jl
xor
sahf
imull
test
cmovnp
test
push
jmp
and
sbb
xor
sub
fisubrl
rorl
push
sbb
push
pop
imul
mov
pop
dec
cli
in
push
out
stc
and
inc
dec
loope
iret
mov
xchg
jb
adc
das
bound
mov
imul
outsb
push
ret
mov
sub
adc
cmp
dec
sbb
sub
pop
dec
or
push
mov
or
and
xchg
push
push
subb
fnop
in
scas
mov
add
jns
cwtl
icebp
push
and
fisubs
dec
aad
jmp
jae
sub
pop
mov
movsl
dec
and
arpl
sbb
inc
mov
adc
pop
into
mov
xor
inc
into
dec
ds
ss
push
mov
in
mov
std
aam
xorl
enter
das
ror
and
mov
sbb
sbb
arpl
ret
dec
and
mov
mov
xor
or
mov
cmpsb
sbb
xchg
xchg
in
ret
adc
fnstenv
hlt
and
sub
loop
test
rcrl
mov
fnstsw
lock
xor
fidivs
js
add
cli
pop
push
clc
repz
jnp
xor
movsb
arpl
popa
std
iret
sti
xchg
mov
stos
rorl
repz
or
imul
jns
adc
xchg
pop
fnstsw
adc
inc
in
inc
or
or
jl
or
fistl
xchg
mov
cs
dec
pop
mov
mov
or
ss
scas
push
sub
or
or
sbb
ljmp
out
xchg
dec
in
pop
jge
push
sbb
pop
cwtl
pop
cmpsb
mov
push
push
dec
add
and
ret
sub
sbb
aaa
loop
xchg
xor
insb
and
enter
fwait
mov
cwtl
mov
xlat
int3
enter
out
or
ss
push
adc
imul
data16
stc
pop
mov
xor
jmp
roll
js
jmp
inc
in
push
movsl
dec
rcll
inc
test
rol
fwait
repz
adc
popf
push
test
sub
sbbl
fidivl
pop
loope
jnp
ret
clc
cwtl
pop
lock
adcl
or
roll
orl
add
xchg
and
jno
add
and
push
mov
in
div
repz
hlt
xchg
das
mov
out
or
test
inc
inc
lahf
xor
arpl
xchg
arpl
ret
jmp
cmp
pusha
add
push
das
sbb
ret
pop
test
popf
mov
sub
movsb
shll
in
xchg
cmp
sub
not
inc
insl
rorl
fwait
adc
xchg
or
pop
test
cmpsb
pop
jg
loope
orb
cmpsl
fndisi(8087
ficomps
scas
dec
pop
shll
lahf
xchg
in
lods
jg
jae
xor
push
inc
cs
stc
xchg
jae
scas
and
push
out
push
fidivrl
pop
out
sub
mov
and
add
sub
stos
iret
ds
and
and
nop
call
mov
enter
lods
shll
lahf
into
adc
lods
cmc
jns
cwtl
cmpsb
out
into
hlt
popa
xor
call
lret
imul
sub
fsubrs
cmpsb
mov
xchg
dec
xlat
or
jmp
dec
mov
daa
cwtl
shrl
stc
inc
shrb
insb
sbb
mov
ds
icebp
jo
call
in
add
sbb
fdivrl
or
pop
out
push
in
mov
fadd
mov
pop
xor
loop
lahf
sahf
push
movsl
cli
xchg
cmp
pop
outsl
je
mov
int
dec
and
add
xlat
idiv
and
mov
aaa
std
test
daa
sub
loopne
out
fwait
adc
imul
dec
scas
xchg
iret
sub
add
dec
std
jo
cmp
add
fbstp
pop
rcr
cs
scas
add
cld
aam
pop
pop
stos
sub
mov
or
adc
pop
ja
push
mov
add
dec
mov
push
jp
pop
pushf
push
adc
ret
push
jecxz
lock
mov
das
es
loop
lahf
pushf
stos
loope
popa
out
jno
adc
mov
out
ds
push
xor
fisubs
xchg
pop
sub
fwait
add
sbb
mov
mov
std
cld
aas
in
insb
in
ljmp
dec
or
movb
xchg
inc
hlt
arpl
scas
cmp
xchg
add
fistpll
jbe
leave
out
idivb
ljmp
out
arpl
adc
pop
or
inc
mov
push
cli
or
stos
outsb
addl
les
xchg
fnsave
push
test
lea
lods
xchg
adcb
add
or
push
bound
rep
mov
pushf
xor
mov
rcrl
lret
xchg
fidivrs
pop
arpl
lret
test
mov
pusha
adc
fprem
fcmovnb
xchg
mov
mov
and
push
cmp
dec
cmpsb
jne
sbb
fstpl
adc
gs
add
inc
addr16
add
xor
cld
fildl
imul
sahf
lahf
adc
cmpsl
push
lods
mov
subb
iret
aas
adc
push
or
cmp
push
insb
aad
movsl
push
jle
add
andl
aad
pop
cmp
rcrb
mov
insl
inc
adc
shrl
jge
add
mov
mov
xchg
mov
movsb
jae
or
mov
frstor
fimuls
out
push
mov
dec
fsubrl
mov
jne
add
sub
fstl
daa
mov
jge
test
out
ja
fiadds
jnp
adc
and
jns
test
xchg
xor
rolb
pop
mov
cmp
clc
fiadds
leave
dec
adc
push
lds
aam
push
or
cltd
mov
ljmp
jo
movsb
iret
jecxz
mov
jae
insl
inc
arpl
test
mov
gs
outsl
push
aad
pusha
jbe
push
std
enter
ljmp
into
mov
shll
scas
mov
std
clc
jo
sahf
sub
mov
ds
cmp
ds
push
stc
adc
mov
push
pushf
inc
idivb
popf
stos
js
jae
test
pop
idivl
out
xor
xchg
push
lods
rorb
sub
jbe
inc
cmpsb
pop
imul
inc
incl
mov
lahf
jmp
popf
push
add
pushf
mov
hlt
test
jo
ja
xchg
xor
iret
pop
jbe
dec
sbb
into
jecxz
add
ret
adc
icebp
cmp
cmp
jbe
incl
push
push
pop
jno
adc
out
add
fnstenv
inc
scas
xor
pop
pop
pushf
jae
mov
mov
imul
out
pop
xchg
dec
outsl
repz
push
scas
jne
push
mov
xor
loop
mov
push
mov
dec
pop
pop
into
movsb
outsl
lock
aaa
sub
neg
add
cld
lea
rol
aas
adc
outsb
xchg
and
stos
cld
add
jo
sbb
shrb
roll
popf
hlt
bound
stos
sbb
sbb
xorb
mov
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
xor
push
mov
mov
sub
add
mov
addl
mov
movl
push
or
mov
mov
xor
mov
mov
mov
incl
xor
movzwl
adc
mov
xor
mov
andl
add
add
imul
movzwl
mov
cmp
movl
je
mov
sub
mov
xor
add
adc
mov
xor
addl
lea
xorl
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
xor
add
add
imul
mov
cmp
je
jmp
xor
aaa
fwait
mov
cwtl
loopne
inc
leave
jp
inc
pop
jp
mov
push
dec
cli
loope
mov
and
movsb
jmp
xor
cld
ljmp
xor
aaa
insb
mov
mov
lret
imul
dec
ljmp
mov
and
adc
push
mov
icebp
lock
fstpl
loopne
mov
shll
xchg
lods
sahf
sahf
push
xor
addr16
clc
mov
push
pop
sub
mov
pop
xchg
mov
sti
sub
daa
mov
repz
add
push
rcrb
inc
mov
je
stc
inc
sbb
cmp
xchg
fwait
movb
cmp
xchg
scas
dec
pop
adc
sar
aam
and
inc
filds
mov
scas
repz
clc
push
test
xor
mov
and
ja
push
scas
ss
pop
mov
pusha
dec
dec
out
jl
push
adc
push
mov
add
sbb
mov
push
push
imul
and
cld
sbb
out
int
imul
jo
push
jp
push
inc
cs
lds
mov
mov
mov
mov
aad
lds
rorb
adc
test
bound
stc
jl
repz
loopne
fimull
cmp
push
lret
dec
jp
push
in
adc
pop
hlt
fsubl
enter
jle
jb
dec
sbb
xor
pop
cmp
pop
dec
mov
add
push
out
fs
add
movsl
or
inc
add
cpuid
pop
icebp
add
popf
xchg
cmc
cmpsl
lret
jmp
lcall
push
sub
dec
in
mov
or
sub
push
cmp
lods
mov
pop
test
and
aad
push
outsl
loopne
jo
mov
push
mov
outsl
test
mov
cmp
mov
outsl
mov
test
inc
add
push
cwtl
jmp
repnz
outsb
mov
imul
test
jns
mov
and
sub
push
jno
bound
push
mov
push
fcompl
mov
jno
lds
int3
dec
mov
iret
mov
xor
mov
sub
cmp
cmp
xor
jnp
out
or
add
mov
daa
mov
jbe
and
sbb
sub
cmp
mov
sub
daa
pop
and
js
pop
fisubl
add
add
add
mov
push
inc
repz
rcl
inc
mov
lret
testb
cmp
and
xor
inc
loope
sub
cld
aas
or
andb
cltd
adc
leave
test
push
or
or
call
andl
int
jmp
xchg
xor
sbb
sti
mov
in
cld
xor
cwtl
jb
frstor
les
aas
lds
cld
jnp
loopne
mov
adc
cmp
sbb
sub
push
outsl
jbe
pop
and
insl
jb
adc
fwait
push
or
stos
mov
push
push
lea
jne
pop
push
adc
sub
cmpsb
in
mov
dec
ljmp
xchg
popa
icebp
pushl
das
dec
and
and
adc
inc
mov
cld
push
pushl
jns
inc
sub
jnp
mov
cmpsl
inc
int
sahf
mov
xor
mov
mov
aad
fmull
inc
push
rclb
imul
loopne
mov
pop
mov
mov
inc
sbb
ljmp
scas
xchg
leave
inc
imul
jl
mov
fs
jge
test
fcomps
mov
or
adcl
or
js
int3
movsl
jl
mov
or
call
sub
data16
ss
dec
or
push
dec
stos
adc
mov
lret
les
sub
xchg
sub
inc
fstpl
or
popa
inc
fbld
mov
and
test
clc
mov
xor
stos
cli
mov
and
mov
sbb
jmp
xchg
add
push
outsl
push
mov
mov
fcmovnb
sub
fcomps
hlt
push
nop
add
sbbb
stos
jo
sub
sub
mov
icebp
push
push
cwtl
cmp
add
aad
and
mov
aam
test
leave
sbb
mov
or
dec
outsl
jg
repz
mov
push
fidivs
mov
je
popa
inc
lods
push
shlb
mov
sbbb
jp
mov
sbb
nop
push
sub
inc
push
and
jp
cmpsl
fbstp
jns
and
add
in
mov
or
lds
push
jo
sub
xchg
stc
xchg
lahf
nop
mov
mov
fcomip
mov
insb
icebp
and
imul
call
dec
int
jbe
fcmovu
jge
movsb
push
xlat
test
ficoms
or
dec
and
mov
sub
dec
aaa
jns
iret
or
and
ds
movsl
stos
dec
sbb
scas
imul
push
jp
cs
cmp
mov
in
add
xor
aas
je
sti
pusha
add
mov
xor
inc
cli
xchg
jp
mov
sbb
cmp
sub
bound
add
mov
jg
and
daa
jae
pop
lret
mov
xchg
loopne
and
out
mov
add
push
gs
and
dec
and
fcoms
inc
add
xchg
out
sub
or
fidivs
add
adc
mov
mov
xchg
lock
mov
pusha
sbb
xor
xchg
adc
push
jle
jg
xchg
add
lcall
shl
jbe
jl
xor
pop
cmp
jge
pop
call
aaa
push
mov
mov
mov
in
dec
mov
xchg
sub
fwait
arpl
mov
xor
aas
gs
test
adc
inc
pop
xchg
sbb
scas
iret
rol
xchg
lret
sbb
cmpsl
mov
outsb
push
fists
lahf
or
xchg
add
or
in
jmp
sar
and
dec
mov
test
and
mov
sub
arpl
cmpsl
lret
hlt
or
xchg
fs
les
insl
nop
jle
xor
and
dec
push
xchg
stos
lods
sub
lcall
iret
fs
test
xor
lods
jnp
repnz
pop
sub
push
jl
xor
mov
mov
cltd
and
add
add
rdpmc
dec
loop
jecxz
inc
and
dec
lret
aam
out
das
outsl
xchg
xchg
pop
xchg
mov
int
push
fistl
jae
sub
out
dec
mov
adc
lods
pop
or
cmp
popf
dec
xchg
jl
xor
sub
dec
pop
xlat
and
decb
push
clc
or
fbld
mov
adc
mov
push
jnp
scas
outsb
or
jns
daa
fists
mov
push
fisttpll
test
sub
imul
cmpsl
repz
dec
das
inc
cmp
test
clc
push
rcll
push
icebp
and
push
clc
ficoml
pop
jnp
mov
mov
inc
mov
or
pop
mov
mov
aam
je
xor
fisubrl
jo
dec
in
aaa
rcll
inc
test
xlat
pop
shlb
dec
les
xchg
faddl
repnz
inc
add
mov
xor
repz
int3
psubq
cli
xchg
icebp
fistpll
pop
and
push
jns
and
out
or
sbb
push
xchg
popl
int3
and
inc
lods
xor
sub
or
mov
add
popf
pop
mov
or
das
mov
pushf
lret
iret
xor
mov
mov
add
pop
cmp
shrb
addl
and
mov
adc
pushw
pop
pop
mov
inc
ret
inc
js
lcall
sbb
aas
add
dec
lods
sbb
xchg
mov
clc
pop
rcl
pop
cmp
ficompl
out
sbb
ds
sar
jb
sbb
jae
sti
int3
add
or
xchg
scas
xlat
arpl
push
inc
shlb
sbb
mov
xor
scas
dec
xchg
sub
adc
pop
outsb
jle
push
xchg
dec
mov
sbb
out
lock
mov
pop
xor
cltd
lahf
les
scas
xchg
scas
or
aas
cmpsb
stos
test
cmp
pop
sub
rcrl
jno
rorl
jge
ds
pop
clc
call
mov
dec
mov
adc
cmp
sbb
shr
nop
jbe
loop
call
sahf
sbb
fidivl
sub
and
cmp
mov
cmp
loop
imul
fs
enter
push
adc
and
push
aaa
sbb
subb
cmp
mov
mov
and
jnp
nop
bound
inc
mov
shrl
adc
test
fdivr
inc
pop
xor
cmp
push
pop
lds
int3
adc
lahf
mov
sahf
in
insb
dec
mov
cld
jno
inc
hlt
push
movsb
xor
xchg
imul
pop
sbb
and
mov
jecxz
enter
hlt
or
gs
loope
or
mov
mov
push
sbb
loope
add
xchg
mov
dec
xchg
xor
sahf
scas
test
mov
mov
xchg
repz
mov
dec
push
mov
jnp
adc
jg
push
test
cmpb
pop
or
ljmp
jecxz
push
adc
or
mov
fmull
pop
xor
push
cli
test
iret
inc
sahf
xor
inc
imul
cs
push
in
cmp
dec
lods
inc
and
int
mov
mov
pop
mov
mov
xor
in
or
xor
cmp
out
lds
pop
lahf
lcall
adc
jns
mov
enter
movsl
or
cwtl
inc
and
cltd
lret
shr
jo
rcll
xor
push
xchg
shlb
inc
mov
add
cmp
mov
shll
shl
fsub
xor
icebp
dec
mov
in
imul
inc
ja
cs
iret
jne
jne
sti
clc
pop
out
rcrb
aam
loop
fcompl
mov
mov
xor
out
stos
mov
les
xlat
leave
pop
aaa
sbb
cmp
loopne
jl
je
sbb
sbb
movsl
push
stos
lods
or
scas
xor
or
dec
scas
mov
addr16
lods
dec
lea
iret
pop
push
or
movsl
pushf
je
rcl
cmp
adc
out
jnp
mov
imul
dec
enter
dec
movsb
loope
pop
outsb
hlt
mov
dec
pop
sub
lds
sub
setae
leave
dec
inc
pop
imul
sbb
icebp
mov
adc
adc
pop
mov
jle
xlat
addb
out
lds
and
jg
xor
pop
ja
test
mov
ss
fadds
dec
arpl
pop
sub
pop
xchg
cwtl
insb
ds
push
repz
faddp
jg
xchg
mov
into
push
testl
ljmp
ds
mov
jbe
js
cmpsb
xor
faddl
in
out
or
and
call
xor
test
loope
fisubs
call
mov
pop
sub
inc
cmp
mov
mov
test
add
inc
insb
xchg
shl
mov
pop
in
es
xor
popa
rolb
pusha
xor
jae
push
cld
xor
adc
or
jecxz
lret
dec
and
jne
pop
cmp
push
sti
mov
aas
dec
add
pop
mov
add
mov
cmp
or
repnz
out
mov
push
mov
jbe
std
mov
push
pop
xchg
inc
mov
jae
mov
pop
mov
mov
popf
repnz
adc
xchg
test
lea
adc
in
pop
daa
stos
loop
mov
hlt
push
cltd
aaa
outsl
cmp
lret
add
push
inc
mov
std
mov
aad
cmc
lock
pop
adc
daa
into
test
sub
lods
sub
subl
lds
mov
push
pop
test
jmp
lret
stos
mov
inc
loop
inc
fbld
sub
mov
mov
or
cmpsl
js
fucomp
mov
sbbb
fsubl
fidivl
loop
mov
mov
ret
mov
pushf
mov
int
out
jmp
jno
add
mov
cld
and
int3
xor
call
fwait
and
iret
pop
into
inc
in
jbe
les
sbb
pop
mov
popf
cld
cld
das
out
add
pushf
fisttpl
mov
mov
scas
lahf
leave
mov
adc
mov
push
pop
adc
lret
outsb
xchg
cmp
fistl
les
sbb
daa
inc
arpl
mov
pushf
xchg
xchg
xchg
dec
rorl
xor
pop
jecxz
xlat
movsb
daa
js
in
incb
or
leave
adc
push
mov
sub
jmp
aam
xor
or
add
adc
out
mov
push
xor
fsts
jle
pop
inc
cmp
add
add
popa
imul
jne
daa
cmp
xor
mov
clc
out
scas
jbe
cmp
mov
sbb
stos
and
dec
test
and
dec
push
and
call
les
cli
pushl
xchg
push
iret
int3
scas
test
pop
jnp
ret
in
cmp
lds
loop
dec
push
mov
aaa
stos
ja
ss
push
sbb
test
jne
in
mov
loopne
mov
push
lock
in
jo
arpl
push
and
jb
nop
in
xlat
test
arpl
call
sbb
js
mov
mov
mov
mov
xor
and
cvtps2pd
inc
jecxz
or
push
dec
rol
imul
and
pusha
sub
psubd
lret
stos
sbb
pop
push
loop
lcall
nop
pop
mov
xchg
cmp
adc
into
or
rcr
inc
orl
test
movsl
jp
insl
adc
pusha
imul
outsl
lcall
bound
cmc
ret
jmp
movsl
ficompl
and
push
xor
js
ljmp
clc
int3
stos
aaa
jle
lret
pmuludq
test
cmc
xor
stos
cwtl
sbb
add
das
mov
pop
inc
pop
mov
aas
adc
loopne
xor
add
loop
int
cmp
push
fdivrl
jge
sub
pop
adc
xchg
jmp
push
loop
imul
lods
xchg
pushf
lods
aas
mov
push
test
scas
pusha
nop
cld
jg
sub
cwtl
xor
popf
add
or
jno
add
test
or
pop
outsb
dec
sahf
push
fsubrs
sbb
test
push
lret
xchg
or
cmp
sub
cmpsb
xchg
or
xchg
pop
imul
adc
jl
mov
stos
or
out
adc
cltd
jl
hlt
jle
adc
sbb
xchg
pop
and
add
mov
and
adc
xchg
rorb
xchg
pushf
mov
jns,pn
adc
mov
or
mov
push
sub
pop
inc
daa
jl
loope
movsl
lock
mov
lret
push
decl
adc
adc
scas
sbb
out
jne
in
sub
test
cli
inc
sahf
inc
mov
dec
scas
or
stos
or
insb
xor
push
enter
cmp
jge
xlat
inc
mov
mov
mov
dec
in
push
dec
mov
sbb
sbb
fisubs
and
xor
fdivr
std
aam
ror
mov
adc
sar
pop
mov
xchg
inc
and
xorl
ja
sub
rclb
ja
adc
mov
clc
shll
mov
inc
sti
leave
pop
fbstp
repz
popa
scas
jbe
sub
int
push
mov
gs
jge
xchg
incl
imul
and
dec
out
mov
outsl
pop
shlb
xlat
cmpsb
add
fcomps
and
out
mov
adc
fdivl
mov
fimull
hlt
fstpl
div
cmp
mov
mov
aaa
das
movaps
fwait
lock
test
rorb
test
add
inc
outsb
daa
cmpsl
sub
std
jmp
imul
dec
xor
mov
lret
add
adcl
and
test
mov
outsl
aam
xchg
add
aas
mov
lea
lahf
das
lret
lods
call
jns
xchg
mov
mov
xchg
mulb
mov
aaa
push
insb
lds
adc
pop
out
xor
sub
pop
mov
xchg
jno
enter
test
mov
pop
outsl
loope
and
inc
movsb
jns
loop
fprem
push
vpaddsw
jl
pusha
xor
daa
mov
jg
sbb
or
jbe
les
or
int3
outsl
ret
push
cmp
or
xlat
lret
or
mov
xchg
mov
mov
push
out
push
std
lea
test
sbb
loop
aad
insl
jge
scas
mov
pop
arpl
xchg
push
sbb
jb
mov
ss
and
pop
pop
lret
incl
sub
cmc
pop
push
mov
jmp
mov
and
cmp
pusha
das
fstpl
cs
mov
or
or
scas
adc
jmp
popf
popa
rcr
xor
mov
cld
aad
orb
mov
mov
rclb
xor
mov
or
aam
xor
inc
and
mov
int3
push
test
lea
mov
out
fs
into
ss
inc
gs
pop
and
test
movsb
dec
or
mov
sbb
dec
xchg
cmpsl
and
push
pop
cmp
sahf
push
sbb
cmp
bound
dec
push
push
clc
pusha
std
jno
fs
es
inc
out
fs
mov
popa
and
repnz
or
cmc
aaa
or
lea
jg
pop
jmp
inc
out
jmp
imul
std
popf
leave
push
xchg
inc
xor
sbb
ljmp
into
pusha
stos
add
jns
push
frstor
push
test
push
or
pushf
adc
pop
cld
in
xchg
cmpb
int
inc
jno
idivl
inc
in
loope
pop
push
inc
test
fcoml
xchg
jne
sub
int
mov
andl
fdivs
dec
test
fisttpll
mov
insl
movsb
test
dec
mov
fwait
mov
addr16
mov
shlb
sub
or
jecxz
dec
rolb
mov
mov
inc
fs
jmp
dec
mov
sbb
pop
dec
cwtl
mov
rcll
aad
cmp
addr16
mov
andl
lret
mov
dec
dec
push
hlt
jle
cmp
in
jge
mov
xchg
xchg
jb
pop
add
std
jns
rolb
cmpsb
icebp
cwtl
or
icebp
insb
popa
mov
jnp
data16
fwait
and
push
roll
mov
fists
insb
in
clc
and
cmp
test
clc
in
out
sub
popa
shl
cmp
sub
das
jmp
stos
iret
loope
xchg
inc
mov
sub
repnz
subb
in
sbb
in
jno
sub
jne
push
sub
mov
mov
retw
mov
iret
xchg
pop
in
xorl
jb
and
out
popl
rcrl
stos
push
mov
arpl
jg
mov
jnp
pop
rorb
sub
mov
daa
and
jae
ret
insb
mov
outsb
cmp
lock
push
push
sti
jb
loope
push
jb
pop
push
stos
xchg
daa
in
dec
andl
sbbl
scas
mov
push
add
fcmovb
push
lret
aad
dec
mov
in
and
push
mov
jl
xor
outsb
jp
dec
mov
inc
mov
movsb
mov
fsubr
jnp
mov
push
ja
jb
pop
xchg
repz
sub
or
mov
mov
mov
lret
scas
mov
subb
pop
roll
test
sub
cmp
jns
inc
mov
out
mov
imul
mov
mov
out
divb
cld
enter
inc
repnz
or
cld
mov
cld
in
cmp
jecxz
mov
mov
outsb
dec
push
pop
sub
fstpl
cltd
adc
and
out
mov
jle
test
pop
fwait
and
insl
movb
xor
push
mov
sti
fwait
xchg
adc
outsb
dec
inc
pop
dec
mov
push
jg
dec
mov
insb
and
xlat
push
ss
cld
push
rclb
test
pop
loop
inc
mov
pushf
push
mov
mov
jmp
inc
and
sbb
lea
decb
fidivl
jne
loop
xor
sbb
mov
and
popf
inc
mov
add
out
cmp
enter
test
lret
push
lds
xacquire
in
dec
pop
adc
filds
mov
and
dec
sub
sub
inc
repnz
dec
xorb
int
es
xchg
inc
icebp
incl
ret
dec
into
add
stos
cmp
mov
fsubs
fs
cmpl
rcr
imul
imul
and
stos
sti
idiv
mov
xor
xor
push
xor
jb
pop
sub
inc
aam
mov
dec
jmp
xchg
jg
nop
sbb
sub
mov
ja
fisubrl
cmp
aad
xor
add
sbb
cld
addr16
mov
xchg
mov
ret
mov
sub
xchg
add
stos
stos
pop
mov
and
xor
adc
sbb
leave
addr16
mov
das
and
mov
icebp
mov
fwait
ret
xchg
insl
sarb
fwait
cmp
or
int
insl
std
dec
sbb
and
mov
push
out
aad
xchg
mov
xor
xor
lea
sahf
cwtl
mov
pop
pop
incl
and
cli
int
push
iret
inc
or
test
dec
mov
xor
fistpl
push
in
or
add
sub
jp
test
jl
pop
test
or
push
sub
add
andl
daa
popa
xor
je
popa
dec
stos
aaa
jnp
fbld
shlb
cld
jge
pop
xchg
out
vpmulhuw
in
xchg
fwait
mov
adc
jnp
ret
adc
xor
addl
mov
dec
lahf
call
stc
popa
inc
iret
fs
fwait
nop
push
jmp
jne
fwait
addr16
mov
wbinvd
xor
jno
mov
adc
sub
add
cmp
sbb
sahf
addb
sub
xor
jge
js
jmp
mov
hlt
ret
cwtl
and
jo
push
mov
sbb
fidivs
jmp
sbb
xchg
cmc
lret
std
test
xchg
fldcw
ret
dec
addr16
inc
hlt
lods
or
cwtl
push
lret
mov
sub
sahf
lea
dec
adc
mov
inc
lret
dec
arpl
xchg
sub
sbb
mov
jnp
pushf
ficomps
jl
sahf
xor
cmp
leave
repz
jno
adc
sub
jmp
stos
jl
xor
or
cmp
insl
mov
push
pop
mov
daa
fwait
lock
sub
jae
nop
je
mov
fcmove
jns
jmp
cmpsl
lcall
rclb
jle
pushf
sub
adc
je
fpatan
icebp
loope
adc
pop
add
dec
mov
ror
iret
sbb
jnp
pop
std
cmpsb
rcrl
pop
mov
iret
ja
sbb
and
pop
imul
mov
xor
leave
push
push
mov
jne
sahf
inc
adcb
fidivrs
dec
dec
in
sub
test
mov
mov
stos
xor
jle
daa
ret
dec
jae
daa
fisubl
xchg
mov
aaa
and
mov
inc
nop
or
je
aaa
push
popa
inc
push
sbb
sti
jbe
test
push
jg,pt
xor
fs
cmp
cwtl
pop
outsb
test
push
arpl
cltd
in
pop
mov
in
rcll
aad
xchg
sbb
jecxz
jo
iret
push
sbb
xor
mov
aaa
lock
lods
fs
cmp
ficoml
jae
push
addb
mov
pop
mov
dec
jmp
movl
pop
dec
iret
int
movsb
mov
loope
pop
outsb
cmpsb
push
cmpsl
aas
pop
cmp
test
outsl
sub
xchg
in
repnz
jecxz
mov
and
js
sbb
es
mov
aad
cmc
xchg
stos
sub
pop
mov
in
push
rorl
inc
bound
fildl
enter
jmp
jmp
xchg
and
ds
lahf
test
inc
in
vrcpss
sub
js
add
sub
cs
sub
xor
mov
call
and
xchg
inc
fbld
xor
or
jmp
arpl
daa
pop
psrlq
dec
and
icebp
lret
in
aam
stc
and
movl
rorb
push
push
cmp
out
pop
ja
ljmp
in
aam
push
add
or
aam
xor
js
nop
cmp
andl
mov
daa
push
sub
jno
jae
cs
cmpsl
sub
out
cmpsl
stos
fildl
jle
into
mov
loop
push
sbb
cmp
push
cli
repz
sahf
aam
push
cld
in
js
mov
imul
push
enter
loop
pop
stc
sub
add
cmc
dec
mov
imul
jg
push
ds
and
dec
or
pushf
repnz
mov
sub
mov
xchg
adc
cmp
sbb
repnz
fwait
pop
inc
testb
pop
loop
pop
insb
jno
out
dec
lret
fists
jmp
push
xlat
aaa
or
or
cmp
dec
pop
lea
mov
dec
lock
and
add
mov
adc
fdivrp
pop
in
loope
push
es
pop
dec
insl
loope
jle
lea
popf
cmp
pop
std
adc
test
adc
test
jbe
jge
add
xchg
push
mov
data16
jmp
loopne
pop
in
add
xor
mov
mov
and
dec
pop
mov
sub
aaa
in
idiv
test
mov
fldcw
test
imul
out
ljmp
stc
insl
add
adc
sarb
and
fimuls
lds
xchg
mov
push
movsb
insb
mov
cmpsb
outsb
jnp
sbb
outsb
mov
cmp
enter
shlb
pop
add
shll
rolb
xchg
adc
mov
cmpl
mov
int3
lds
mov
inc
xchg
shrb
xor
pavgb
xchg
add
sti
das
test
lret
cmp
daa
stos
mov
loop
mov
cmpsb
fcomps
dec
loop
clc
fstpl
rcrb
clc
hlt
cmp
out
mov
cli
sbb
add
mov
dec
pop
push
ret
or
jb
pushl
pusha
inc
jl
sbb
pop
mov
popa
mov
and
or
xchg
xor
dec
xor
fcom
pop
jnp
les
stos
jl
icebp
dec
pop
and
xchg
sub
push
cs
dec
cmpsb
pop
subl
mov
inc
inc
icebp
stc
nop
sub
sbb
in
pop
mov
cwtl
data16
fimuls
insb
mov
js
enter
cmp
sub
dec
cwtl
push
lods
and
adc
rclb
fwait
aad
enter
std
xor
mov
mov
xor
and
mov
and
dec
mov
stos
sub
inc
mov
ljmp
pop
pushf
mov
xchg
stc
xorb
ret
aad
sub
andl
idiv
je
mov
ret
imul
mov
jnp
inc
jecxz
pop
dec
sub
fldl
mov
mov
lea
xorl
bound
and
ja
movsb
test
xor
test
mov
les
or
push
outsl
dec
enter
ret
cld
mov
das
ds
mov
mov
cld
jno
nop
dec
jl
jg
jne
mov
sbb
mov
pop
ja
push
push
xor
insl
int
hlt
jge
push
xchg
add
test
loope
adc
push
int3
or
pop
cmpsl
jle
leave
gs
push
lcall
loop
xchg
lea
arpl
ljmp
xlat
push
loop
movsl
add
sub
lock
js
ja
sub
fwait
popa
inc
shrl
or
int
mov
cmp
push
ja
xchg
xchg
decl
cmpsb
pop
movsl
jne
jl
jo
dec
cmp
js
jp
or
adc
fbld
lods
pop
addb
jo
arpl
inc
mov
jno
out
push
sbb
jo
pop
mov
sub
loope
enter
dec
or
or
out
in
insl
ds
nop
lock
adc
and
push
into
cmpsl
outsb
or
leave
fcomps
jb
mov
xor
cwtl
test
mov
fcomp
aas
and
mov
andl
pop
or
jne
mov
jnp
mov
xchg
xchg
jle
and
cmpsl
das
popf
mov
xchg
dec
call
and
icebp
xchg
dec
fcoms
out
inc
pushf
in
test
mov
xchg
mov
mov
cmp
mov
sub
aad
pushf
pusha
or
shl
pop
sti
mov
mov
pop
lret
jne
pop
or
aas
int3
aam
jnp
inc
adc
sub
mov
test
and
xor
lret
fstpl
cmpsl
add
jne
dec
rolb
vpunpcklqdq
inc
inc
std
sub
mov
pop
inc
sbb
cmp
movsl
jo
inc
out
jge
push
jle
scas
mov
inc
daa
lods
mov
or
in
lcall
pushf
add
xlat
ret
xchg
dec
xchg
and
add
lock
xchg
push
js
iret
xchg
xor
xor
outsb
cwtl
xor
xchg
lods
sub
sub
jb
and
insl
mov
out
std
and
dec
andl
inc
cld
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
movl
xorl
mov
mov
adcl
mov
xor
sbbl
add
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
add
mov
movzbl
adc
mov
adcl
xor
mov
orl
add
xorl
movzwl
mov
movb
adc
lea
mov
sub
mov
orl
mov
andl
xor
orl
sub
orl
mov
andl
movl
xor
push
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movl
mov
addl
push
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
xor
dec
mov
jmp
andl
xor
add
inc
mov
cmpl
jne
push
push
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
push
add
movl
jmp
mov
movl
mov
movl
inc
movl
cmp
jb
mov
addl
xor
adcl
add
movl
jmp
mov
movzwl
sub
mov
mov
decl
xor
mov
andl
add
andl
movzwl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
movzwl
orl
xor
add
mov
mov
mov
inc
movl
mov
movl
cmp
movl
jne
sub
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
movl
mov
mov
adc
xor
sbb
add
or
mov
movl
movl
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
movl
mov
or
mov
mov
xor
add
add
movl
mov
mov
mov
je
mov
mov
jmp
mov
pshufw
repnz
aam
scas
jp
fcomps
jp
lret
sub
popf
sub
push
daa
push
cmp
scas
inc
jle
inc
mov
addr16
push
and
add
in
mov
adc
push
lods
lret
push
mov
jge
mov
cli
and
adc
jge
fnstsw
loope
lret
adc
sbb
scas
rclb
mov
jno
mov
xchg
xchg
sbb
dec
inc
jmp
movsb
mov
sahf
popa
movsl
adc
sahf
cmpl
xor
mov
pop
xchg
jle
mov
sti
rcll
leave
xor
mov
mov
xor
test
sbbl
jp
sbb
popa
jo
sub
into
insb
jl
stos
and
or
jmp
lods
fistl
jp
out
sahf
jl
inc
jae
push
aam
ret
sahf
pop
iret
jmp
xor
cwtl
jae
inc
addr16
mov
pop
adc
mov
lret
sub
push
jb
inc
imul
dec
insl
clc
or
call
inc
in
out
xchg
dec
push
sahf
xchg
mov
xchg
xor
xchg
mov
test
enter
push
inc
mov
outsl
xor
jge
push
pop
and
pushl
sbb
fs
enter
insb
cs
push
xchg
mov
repnz
sub
xor
push
jl
add
lret
push
ud0
idivb
xlat
mov
sub
shlb
rcll
repnz
add
jae
mov
aas
in
mov
xor
lods
xor
mov
xchg
push
cwtl
cmpsb
lret
test
fstl
dec
jb
mov
cmp
lock
fadd
xchg
pop
movsl
mov
stos
ret
mov
jge
ret
mov
dec
repnz
dec
cmp
jecxz
add
sub
lahf
orl
inc
mov
push
jecxz
outsb
sbb
cs
outsb
les
test
xor
data16
popa
mov
pop
push
mov
mov
xchg
xchg
mov
xchg
mov
xchg
inc
push
xchg
pop
push
sbb
je
cld
dec
sub
roll
nop
jge
shl
and
lock
mov
sbb
jecxz
arpl
pop
mov
test
cmc
out
cmp
mov
std
fsubrs
push
sahf
push
sbbb
push
sahf
jp
xchg
jg
adc
push
and
pop
out
sub
dec
mov
loope
fdivrl
lods
or
bound
push
or
xchg
and
pop
pop
fsub
out
jg
fs
pop
stos
mov
aad
xor
mov
dec
jle
sti
aad
jbe
xchg
bnd
xchg
out
jnp
fdivrs
lcall
jb
outsb
test
outsb
xchg
fsubs
pop
jl
fstps
lods
test
ret
xor
stos
stos
dec
jae
sub
movsb
mov
add
jns
lret
fsts
in
js
sub
fdiv
dec
cmpsb
insb
in
cli
out
hlt
mov
mov
test
mov
shll
testb
js
lods
gs
add
incb
xor
cmc
es
push
push
gs
arpl
mov
jns
mov
and
imul
hlt
cltd
aaa
xor
pop
mov
jne
dec
push
add
inc
inc
sti
and
outsl
jp
ror
ret
jecxz
mov
js
mov
pcmpeqd
or
ja
pusha
sbb
or
or
incb
adc
data16
and
aad
pop
mov
mov
repnz
stos
mov
sbb
fadds
and
mov
lret
iret
nop
loop
or
sub
es
aad
out
ljmp
test
cltd
or
lds
cmp
popf
and
sbb
jp
call
sbb
sub
pop
shlb
loop
xchg
or
lock
adc
aam
movsb
in
sbb
cltd
nop
icebp
add
xchg
jbe
bound
and
xor
ficoms
call
scas
xor
hlt
xchg
jne
mov
sub
inc
stc
ret
mov
in
or
xor
pushf
aas
mov
jne
push
je
inc
dec
dec
pusha
sahf
lahf
test
mov
fs
cmp
repz
mov
jae
mov
or
pushf
dec
push
fldt
ror
xlat
movsb
xor
mov
test
daa
inc
adc
push
out
xor
movb
jle
xor
xchg
shlb
xorb
rcr
jno
movsb
hlt
movsb
enter
or
movsl
aam
sbb
adc
test
push
movsl
leave
sar
out
sbb
and
outsb
push
xchg
mov
mov
push
lds
outsb
fildl
dec
daa
gs
dec
sti
fisttpl
adc
mov
pop
ss
xchg
nop
mov
inc
dec
sti
sub
pop
insb
cmp
aam
pop
fdivrl
out
mov
mov
mov
push
call
xchg
scas
sbb
cmp
sahf
in
stc
push
cs
adc
xor
sub
shlb
xchg
mov
iret
mov
cmovl
add
and
ss
add
pop
and
push
push
testb
inc
mov
out
inc
and
mov
inc
jbe
pop
xchg
or
addb
fwait
lods
adc
jg
mov
in
out
xor
jl
jge
lock
sti
in
fmull
sub
and
cltd
and
cwtl
jbe
int3
push
frndint
arpl
dec
sub
insb
aaa
mov
outsl
push
xlat
inc
adc
mov
stos
ss
and
adc
sbb
ret
enter
imul
sti
xor
roll
pop
rep
lret
pop
pop
mov
sahf
pop
push
mov
cltd
jecxz
shlb
sbb
xor
sti
inc
ja
sahf
cld
cmpsl
shrb
xchg
rcrl
jle
or
ja
jl
ret
aam
imul
std
ffree
aas
push
and
cmp
fldenv
xchg
les
sub
fsub
rcll
rorl
cmp
sbb
jp
ds
add
inc
cmpsb
aas
loop
sbb
jp
lcall
jbe
xor
adc
sub
push
icebp
shrb
insl
test
test
mov
stc
mov
mov
dec
ss
adc
cmpsl
div
out
aaa
loopne
mov
push
std
test
lcall
ljmp
out
lock
imul
xchg
popf
mov
orb
sub
xchg
xor
loopne
inc
or
lret
repz
jns
inc
into
sbb
out
jns
ficompl
mov
push
mov
push
push
in
add
add
xlat
iret
push
aad
in
ficoms
cmp
ss
adc
and
stos
fistps
sub
xor
scas
mov
jbe
or
push
mov
insb
adc
sbb
dec
notb
sub
sahf
ret
xchg
mov
fucom
jecxz
add
mov
cmp
mov
jmp
cmp
int
int
add
pop
xor
fwait
ja
xchg
repz
push
dec
lods
jbe
mov
cmp
decb
les
test
mov
push
push
repnz
or
push
aas
pop
adc
pop
jg
xchg
xchg
fcoml
cli
dec
ss
xchg
jne
pop
aaa
lcall
add
xchg
mov
mov
fiadds
into
into
sbb
jo
jb
movsb
shll
mov
pop
stc
les
jmp
daa
xor
imul
in
jg
pop
pushf
jmp
push
mov
test
testl
stos
sbbb
data16
lcall
mov
mov
loopne
pop
jmp
mov
stc
fxtract
sti
xor
push
dec
dec
xor
repz
imul
adc
fstpt
inc
xor
inc
pushf
xchg
loopne
lock
in
mov
popf
push
idiv
dec
sbbb
mov
dec
stc
repz
adc
aam
lock
sub
ret
sub
mov
cmpsl
shrb
lods
cmpsb
popa
pop
popa
popa
daa
cltd
ss
stos
add
rcl
pop
imul
loope
ret
aas
fdivl
lock
in
cld
cli
stos
call
lods
jno
ljmp
loope
xchg
cli
test
test
push
mov
idivl
dec
sub
cmp
or
xor
dec
cli
mov
shl
mov
cld
out
jmp
sub
xchg
sub
sub
adc
xchg
insb
pop
insb
loop
shll
aad
xor
jb
add
adc
lret
scas
data16
cmp
cmc
cld
xchg
scas
jns
addr16
adc
repz
cmp
cmp
ficompl
mov
sbb
cmpsl
imul
sbb
push
jp
leave
jle
clc
aaa
fucomip
pop
je
outsl
and
stos
inc
mov
jno
jae
jecxz
push
testb
sub
sub
jns
sub
mov
inc
or
lret
cwtl
and
pop
out
cmp
push
or
fsubp
icebp
xor
cmp
bound
in
jb
pushf
sahf
pushf
cmp
xchg
fxch
aam
and
push
mov
dec
xchg
into
or
popf
and
or
jg
sbb
into
push
sub
xchg
or
icebp
jo
daa
repz
enter
outsb
out
call
add
clc
mov
or
inc
cmp
lret
fdivs
xor
and
ret
mov
mov
push
rcll
dec
mov
test
jecxz
mov
push
xchg
je
cmp
mov
daa
ret
pop
aas
ljmp
mov
mov
adc
mov
adc
jo
loope
or
cmc
pop
xchg
pop
lods
imul
pop
sarl
push
arpl
popa
pop
sub
jp
mov
aad
aaa
inc
cs
dec
fsub
repz
inc
bound
xor
mov
inc
push
sub
roll
push
les
movsb
pop
mov
stos
inc
inc
pop
add
scas
int
int
xchg
lahf
dec
cmc
pop
sbb
insl
and
sub
repnz
negl
movsb
pop
dec
push
stc
dec
jnp
arpl
lcall
mov
lret
or
inc
sbb
out
jecxz
insb
mov
xchg
test
test
loopne
in
in
or
lock
pop
icebp
in
jmp
xchg
push
shl
dec
insl
aas
mov
cltd
xchg
out
dec
xchg
aaa
shr
and
cmp
enter
sub
pop
in
scas
xchg
and
jne
arpl
out
std
add
sbb
lds
inc
or
cld
fcmovu
inc
add
cmp
adc
xor
cmp
int3
pop
and
pop
jecxz
ret
aam
rcll
mov
aaa
ffree
mov
cmpsb
aas
jae
and
adc
cmp
jge
jne
inc
jmp
sbb
xchg
sub
mov
mov
enter
push
lds
shl
out
add
orb
in
out
icebp
out
xor
and
call
shrl
test
movsl
stos
aad
js
push
int
shr
nop
fists
icebp
mov
sbb
dec
jo
xor
inc
in
or
ljmp
cwtl
and
jecxz
div
test
sarb
ss
clc
fwait
rclb
adc
scas
sbb
fistpl
loope
in
mov
aas
sub
sub
call
xchg
aaa
cmp
gs
aad
testb
mov
sahf
cmpsb
and
pop
mov
dec
int3
aas
push
sti
ljmp
mov
mov
out
adc
sbb
cmpsl
in
cli
and
ja
mov
add
jl
aaa
fldenv
clc
cli
pop
pushf
mov
nop
dec
xor
movsl
rorb
mov
pop
mov
imul
outsb
cmp
mov
dec
fcmovnb
fcoms
push
insb
pusha
rorl
repz
pop
mov
int3
out
push
sahf
nop
pop
lea
outsl
pop
sub
cmpsl
nop
jb
xchg
sbb
mov
pop
mov
push
dec
jo
mov
js
iret
fsubl
jmp
fbstp
sbb
int
xor
jmp
loopne
pusha
xchg
mov
inc
inc
mov
shl
aas
clc
ss
je
sbb
pushf
mov
push
inc
outsl
jne
xlat
test
push
outsb
and
xchg
pop
popf
in
mov
sub
push
clc
lock
sbb
pop
ret
mov
aas
jge
fnstenv
cmp
mov
xor
je
adc
repz
jmp
and
inc
lcall
add
pop
xchg
push
aaa
sbb
sbb
add
test
lahf
push
out
cpuid
xor
xor
inc
stc
or
adc
add
in
jle
out
and
aad
in
jns
in
xchg
iret
arpl
push
dec
lret
and
out
test
stos
cmpsl
dec
mov
leave
cmp
popf
and
dec
jae
jle
cltd
jge,pt
xchg
mov
sbb
mov
dec
rolb
xor
xchg
lods
jnp
mov
mov
push
scas
mov
dec
fdivs
push
push
cltd
inc
mov
jb
push
push
shrl
test
inc
mov
jge
je
push
and
bound
subl
insb
or
das
fstl
mov
out
jo
call
fnstenv
xor
xchg
lahf
out
je
sahf
lods
sbb
loop
gs
inc
pop
bnd
ss
mov
mov
and
mov
cltd
mov
movsl
mov
mov
push
cmc
fdivs
pop
insb
lcall
push
mov
cmc
sub
jmp
xor
movsl
sbb
scas
mov
cmpsl
and
inc
hlt
out
jle
adcl
leave
cwtl
fnstenv
pop
sahf
inc
jae
nop
xor
mov
out
flds
insb
add
std
aad
in
outsb
xchg
and
xor
push
mov
push
sti
shrb
pop
loopne
ret
repnz
mov
push
test
xchg
fs
arpl
mov
cmpsb
lret
xchg
cwtl
andl
jle
sub
mov
mov
ljmp
loope
mov
pop
inc
mov
sub
jae
pop
lretw
sub
pop
arpl
mov
cli
pop
cmpsb
gs
pop
outsb
rcll
pop
mov
jno
data16
insb
test
flds
mov
dec
loope
pop
jo
cmp
or
mov
cli
mov
mov
stc
cmp
das
mov
stos
xchg
or
cmp
pop
and
inc
call
out
dec
xor
int
fnstsw
mov
into
inc
fwait
sti
adc
stos
push
aam
xchg
arpl
cli
mov
mov
les
xchg
inc
or
xchg
loopne
ljmp
adc
inc
jecxz
rorb
fwait
xor
push
jmp
popf
arpl
sbb
jmp
add
pop
mov
aaa
adc
fucomi
cs
adc
shr
pop
adc
mov
adc
loope
mov
rorb
adc
add
mov
jo
mov
jmp
jb
pusha
jge
aaa
or
adc
sbb
push
pop
mov
stos
mov
insb
into
std
pop
or
jmp
shlb
or
add
dec
inc
pushf
fwait
xor
mov
pop
xchg
movsb
testl
subb
inc
push
jl
std
lods
xchg
into
cmp
add
imul
sbb
aaa
push
test
xchg
inc
jae
push
in
mov
daa
lock
xor
rcll
push
in
lcall
bound
inc
aad
sub
add
iret
std
xlat
scas
push
sahf
jge
pop
adc
addr16
pusha
jb
push
dec
add
popf
inc
in
push
es
mov
pop
xchg
xor
pop
mov
nop
clc
push
fiaddl
jbe
sbb
xchg
in
inc
aas
lock
mov
push
addb
repnz
mov
test
cs
fidivrs
scas
lods
fiadds
jle
icebp
sub
add
push
sub
arpl
mov
jmp
push
mov
push
jp
or
fstpt
pop
cmp
jno
pusha
jecxz
xor
jg
jl
lea
or
push
cmpsb
lret
loope
mov
in
aam
fisubl
sbb
repz
jnp
cmp
mov
inc
fstpl
aam
mov
jae
or
push
adc
cmp
stos
cmpsb
add
dec
push
icebp
vcomiss
mov
push
dec
xlat
aam
or
pop
jle
jg
mov
rclb
lods
xor
cmpsb
sahf
movsl
je
mov
dec
pop
pushf
pop
arpl
daa
cltd
push
mov
jmp
dec
pusha
cmp
insl
push
and
dec
das
mov
add
and
jmp
mov
call
test
xchg
mov
arpl
jb
cmpsl
jle
mov
or
sub
xor
into
fsubr
outsb
imulb
popf
cmp
sbb
sbb
dec
mov
jns
inc
outsl
nop
xchg
rcr
or
loope
lock
je
sti
pop
and
xor
ljmp
vmwrite
mov
lret
sub
push
test
push
dec
dec
nop
mov
push
push
sbbl
mov
stc
push
push
fs
sbb
out
cwtl
lcall
loopne
das
pop
pop
adc
inc
fcmovnbe
pop
push
add
ret
les
push
fs
out
fsubrs
or
jnp
push
fwait
or
jmp
push
js
mov
and
out
cmpsl
or
mov
or
loope
push
inc
ja
int3
pop
mov
imul
inc
xchg
lahf
popf
ds
fimull
add
pusha
dec
test
dec
sub
cmp
jbe
test
sarb
je
sbb
mov
std
jecxz
sub
in
jecxz
pushf
add
sti
scas
shrb
mov
sbb
rcrb
mov
pop
cwtl
or
fadd
das
mov
scas
pop
lret
or
sbb
xchg
cmp
sbb
sti
cwtl
add
ret
pop
inc
mov
sbb
test
pop
jb
nop
or
insb
call
push
sbb
push
mov
mov
xor
and
inc
fucomi
cmp
mov
call
cmp
addr16
jle
mov
hlt
iret
inc
mov
jmp
push
adc
xchg
daa
into
cmp
ficoml
pop
cld
xchg
shr
add
mov
sbb
sub
or
pop
in
fdivrs
fldenv
pop
adc
orl
cld
roll
sub
cltd
enter
add
repnz
dec
add
sub
fnsave
mov
insl
cmp
push
rcr
or
xchg
mov
dec
mov
bnd
out
fs
push
and
outsb
mov
negb
ja
and
add
in
shrb
outsl
out
sbb
test
jb
cwtl
pop
pop
dec
inc
mov
mov
cmp
loop
faddl
outsl
divb
bound
fldpi
mov
sub
push
mov
sbb
outsb
int
cmpsl
and
sub
jb
test
add
std
or
fcmovne
jo
mov
xchg
std
les
jbe
mov
sbb
sahf
mov
push
sbb
push
cmp
xchg
lods
pop
jnp
fldl
ljmp
stc
xor
aaa
dec
push
mov
xchg
jae
ss
gs
test
ja
pop
popa
xchg
xchg
push
xchg
test
mov
adc
or
sbb
jmp
pusha
sub
aad
and
test
jl
xlat
lahf
shlb
sbb
xchg
sub
cmpsl
subb
inc
xchg
inc
or
jle
sbb
sbb
jns
dec
sub
mov
adc
adc
sbb
lods
push
inc
sbb
push
dec
pop
pop
lock
jp
negb
mov
ficompl
mov
sub
mov
xchg
addr16
aaa
fs
insl
pop
arpl
loop
cmp
pop
rorl
rol
popa
pop
lea
xchg
mov
scas
or
outsl
mov
push
gs
iret
dec
xor
lock
xchg
fld
fcmovne
inc
mov
pop
rorl
jb
stc
cmpsb
mov
cmp
mov
push
or
dec
adc
frstor
stc
mov
jg
imul
addr16
cltd
cli
inc
jne
dec
cmp
xchg
test
xchg
cli
cli
out
push
rcrl
sub
adc
or
xor
es
cmp
push
test
mov
loope
jl
shlb
sti
jne
cli
popf
lcall
or
and
xchg
push
fstp
mov
inc
pusha
xchg
stos
push
inc
mov
mov
jmp
adc
scas
arpl
cmp
push
sub
ret
sbb
lea
push
sub
adc
das
frstor
sbb
ja
mov
jno
jae
dec
pushf
clc
fwait
sub
mov
jge
push
in
inc
jns
mov
xor
mov
fldenv
cld
mov
mov
sbb
dec
sti
inc
test
jge
out
iret
mov
cmp
xor
adc
jnp
inc
mov
pop
xchg
add
lock
lods
sbb
pop
adc
cmc
xchg
insb
outsb
inc
andl
outsl
mov
push
imul
ss
lds
jg
mov
fdivp
js
js
xorl
inc
jle
cwtl
pushf
push
outsl
insb
std
arpl
mov
and
lds
adc
and
pop
adc
pop
pop
fisubrs
dec
popa
ret
lcall
out
jb
in
insb
xchg
cmp
mov
mov
xor
mov
adc
popa
xchg
xchg
jno
sub
movsb
leave
pop
xchg
mov
sub
mov
outsb
aad
add
push
push
ss
pop
mov
mov
lea
xchg
and
add
inc
or
popa
js
adc
dec
loopne
or
push
movsl
mov
jecxz
daa
jo
xchg
jle
adc
std
xor
scas
fldl
push
mov
shl
cmp
scas
inc
sub
jne
out
add
popf
sbb
les
adc
icebp
dec
repz
insb
inc
mov
les
jle
cmpsl
jo
lods
mov
jb
pop
loop
pop
pop
in
xor
fldt
sbb
mov
imul
xor
xor
mov
cli
pop
sarb
inc
pop
iret
mov
testb
push
gs
jge
adc
loop
xchg
into
jge
lret
bound
adc
loop
jae
or
les
mov
rcrb
dec
out
enter
sahf
inc
fiaddl
mov
pop
push
sbb
xchg
dec
xor
in
sbb
shll
push
adc
mov
xor
jbe
pop
popf
xchg
stos
mov
insb
aam
push
fadd
sub
xor
sub
jl
push
js
test
pusha
adc
jnp
dec
jmp
enter
jg
call
scas
hlt
jmp
pop
or
std
out
jnp
movsb
pop
xor
ror
and
jne
sti
mov
pop
mov
mov
inc
mov
iret
or
xchg
in
cmp
cmp
jae
inc
out
sbb
in
jmp
inc
sarb
add
rolb
int
dec
ja
shlb
insb
dec
jae
add
repnz
add
add
fadds
insl
mov
popa
repz
xlat
dec
jecxz
pushaw
cmpl
hlt
imul
mov
cmp
sbb
dec
inc
test
jg
jl
pop
jecxz
sub
xchg
pop
xor
ja
shlb
fstp
jmp
push
mov
jo
cmp
testb
push
pushf
nop
mov
push
fmuls
flds
lahf
pop
nop
push
aam
push
push
movsl
addr16
sbb
aam
sahf
mov
push
push
addr16
jmp
das
mov
adc
mov
dec
sahf
dec
dec
xchg
scas
outsb
pop
pop
xchg
xchg
out
and
roll
test
addr16
ficomps
call
mov
add
xchg
negb
adc
xor
push
xchg
clc
cmpsl
cmp
add
xchg
test
js
jp
insb
or
daa
cmp
xor
psubw
lret
jnp
jg
mov
adc
cmpsl
pop
mov
fldt
inc
sbb
aam
push
mov
es
cmp
inc
cmc
aas
push
mov
mov
or
xchg
cld
pop
je
inc
in
xor
jp
out
js
sbb
popa
sbb
sarl
sbb
jl
push
popa
adc
pop
jns
mov
sbb
movsb
sbb
pop
mov
mov
xchg
nop
stos
push
cs
cmpsb
insl
inc
jne
dec
mov
rolb
sbb
add
mov
push
mul
mov
xchg
adc
cwtl
jmp
lret
movb
cs
fsubrl
xchg
testb
or
int3
adc
mov
cmp
paddq
xlat
lods
fcompl
xchg
cmp
xor
das
das
xchg
stos
repz
jp
jge
dec
into
push
clc
mov
or
notl
xor
mov
loop
mov
inc
adc
loope
repz
dec
mov
addr16
and
lods
mov
xchg
pop
je
sub
sub
repnz
je
in
jns
push
and
jno
sbb
fwait
lock
xor
pop
push
rcl
cmp
mov
xchg
scas
mov
push
xor
jne
mov
insl
adc
adc
mov
dec
cltd
in
stc
fistpll
jle
test
mov
sub
sub
fnsave
mov
enter
mov
push
cmp
dec
jg
mov
and
push
pop
les
stc
dec
popf
cmp
int3
dec
movsl
push
bound
mov
push
xchg
fld1
aam
mov
mov
jne
adc
push
jo
mov
fisubrl
fisubs
outsl
aam
mov
int3
adc
mov
or
into
mov
mov
inc
lock
inc
aam
mov
lods
es
or
inc
jge
xor
mov
in
adc
pop
dec
scas
mov
scas
ds
jp
mov
xor
insb
sar
xchg
stos
lea
xor
ret
cmpb
sti
rclb
cld
add
dec
push
inc
je
jg
inc
popf
mov
push
fucomi
xchg
popa
sub
cmp
push
mov
xchg
mov
pop
mov
rclb
fcmovu
repz
out
add
fcoms
sbb
mov
mov
ja
push
imull
ret
lea
jae
jmp
sahf
fldl
or
cmp
add
bound
jo
pop
xchg
cltd
mov
jl
popf
jae
and
fistpll
cmp
clc
add
int3
mov
xchg
enter
ss
scas
ret
sub
pop
scas
or
add
xchg
jno
out
sbb
divl
jno
jl
mov
push
pusha
jge
ss
shl
push
aaa
inc
add
inc
or
cmc
test
jae
or
incb
pop
popf
mov
jl
scas
dec
adc
sbb
mov
fnstenv
faddl
xlat
pop
mov
fstl
xchg
dec
push
jbe
dec
scas
jg
pusha
xchg
and
adc
jno
mov
cmp
xor
pop
add
xor
pop
sbb
int3
cmp
ja
xchg
jo
inc
and
xchg
dec
jp
lock
xor
je
js
divl
sbb
ss
movsl
int3
push
dec
mov
jl
push
mov
andb
xchg
sub
repnz
mov
dec
shll
addr16
xor
dec
push
lret
dec
push
popa
and
or
movsb
push
jmp
pop
fwait
mov
jae
sub
inc
into
jns
call
sbb
jp
inc
add
adc
push
pop
shrl
push
xchg
or
mov
aaa
xchg
push
pop
jae
testl
mov
sarb
xchg
adc
add
pop
out
dec
call
jle
add
push
adcb
mov
lret
sub
call
inc
out
repnz
cltd
out
sub
mov
pop
cmp
jmp
into
or
ja
les
out
lods
lcall
sbb
jge
fcoms
inc
inc
add
repnz
cmp
push
cmp
stc
out
rcrl
xchg
les
ficoml
push
int3
inc
pop
shrl
inc
jb
in
lret
add
cltd
shl
xor
xor
test
xor
loopne
and
pop
hlt
or
xchg
icebp
ret
ds
repnz
inc
imul
int
in
add
je
mov
pop
pop
out
cmp
sub
mov
in
inc
inc
in
sub
mov
inc
bound
push
fcomp
cmc
cmp
daa
xchg
inc
sarl
scas
add
mov
or
dec
into
mov
jle
arpl
or
popa
xor
sub
xor
stos
or
ret
int
pop
test
push
movsb
lods
add
mov
nop
pop
test
fwait
xchg
add
dec
out
cmp
mov
jg
jg
inc
mov
xchg
fsts
inc
and
and
imul
sti
jmp
repz
sub
mov
aas
pop
xlat
dec
inc
mov
sbb
aad
inc
lcall
lods
ffreep
jle
in
ds
pusha
mov
stos
sbb
cmpb
cltd
or
mov
xchg
lods
pop
xchg
xor
and
fs
sahf
push
xor
outsl
sbb
or
in
sub
jl
call
adc
mov
repz
jnp
xor
popa
xor
movl
insl
dec
sbb
mov
inc
cs
adc
push
and
movsb
mov
inc
fimull
sub
dec
and
inc
inc
inc
repz
mov
insl
int
aam
ret
dec
mov
jge
pop
xchg
cld
fimuls
or
inc
in
pop
popa
mov
jge
dec
mov
fstl
dec
test
xor
inc
sub
inc
stos
mov
mov
outsl
mov
enter
ljmp
ficomps
subb
and
jno
jmp
xchg
lds
cmc
ret
inc
push
scas
loope
cmp
shlb
mov
and
pop
adc
dec
ret
out
lret
or
sti
push
pop
dec
in
cli
ja
jbe
arpl
std
sti
test
push
ret
xlat
mov
add
ret
movsb
ret
adc
xchg
sahf
stc
in
das
dec
sub
clc
std
xor
xchg
mov
cmp
jne
repnz
cmp
inc
pop
cmpsb
aaa
inc
lods
aam
bound
ret
adc
fs
fmuls
sti
mov
mov
mov
mov
or
sbb
pushf
jle
enter
cwtl
fcoml
imul
sbb
repnz
mov
sti
cmp
lret
repz
sub
mov
xchg
shlb
fadds
add
inc
add
rol
add
jg
add
sub
or
xor
movl
mov
mov
mov
add
orl
imul
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
push
call
jmp
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movzbl
or
mov
movl
mov
addl
add
xorl
or
mov
not
mov
mov
add
xor
adcl
mov
mov
not
mov
subl
add
subl
and
subl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
mov
movl
lea
andl
mov
mov
mov
sub
add
subl
mov
mov
orl
xor
add
movl
jne
movl
jmp
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
sub
xor
mov
sub
mov
sbbl
mov
incl
xor
addl
xor
movl
sub
subl
sub
xor
movl
mov
mov
movl
mov
jmp
mov
neg
mov
xorl
xor
addl
xor
sub
and
sub
xor
mov
mov
adc
mov
xor
xor
adc
mov
mov
xorl
add
imul
xor
or
add
mov
mov
mov
sbb
mov
xor
xor
add
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
jmp
sub
jg
imul
stc
nop
inc
sub
pop
pop
fwait
jo
jp
fcomps
jp
js
pop
outsl
cwtl
ss
loope
call
ja
sub
add
repnz
xchg
push
xor
out
add
mov
out
mov
mov
cltd
sub
or
cs
xchg
xchg
jge
dec
cs
cmp
pop
repz
or
stos
testl
mov
dec
aas
xchg
loopne
xor
sbb
push
in
sahf
jb
xor
insl
call
jo
jmp
into
inc
adc
pop
sbb
std
shrb
cltd
aad
fcoml
lret
stos
jo
sub
and
jbe
pushf
out
xchg
aad
aad
inc
scas
inc
cmpb
pop
xor
mov
movsb
loope
sub
nop
lods
repnz
or
add
leave
mov
cmp
jb
stc
sub
mov
mulb
cmp
ret
cmp
dec
pop
fstpl
push
inc
push
es
xchg
pop
addb
push
push
jp
aas
popf
add
pop
lret
sub
iret
and
and
pop
hlt
fldenv
lret
fnsave
inc
xchg
jge
adc
inc
cmc
bound
mov
dec
sar
shrl
mov
aas
adc
xor
xchg
popa
imul
pop
pop
and
out
mov
pop
scas
aaa
ret
stc
mov
jnp
rcrb
jnp
pop
data16
dec
and
mov
push
cwtl
sub
negb
push
pop
repz
cmp
jne
test
mov
adc
lods
gs
jnp
mov
adc
fs
xchg
dec
add
shll
mov
leave
add
dec
mov
inc
xlat
mov
xchg
pop
lods
shrl
jae
fwait
pop
ja
leave
adc
pop
push
xchg
jbe
out
cmp
sbb
and
push
mov
xchg
mov
mov
and
cmp
aaa
cli
push
outsb
in
sahf
jnp
xor
push
daa
bound
std
push
push
add
lods
and
cs
mov
mov
pop
shl
mov
sarb
fstps
in
add
ret
movsb
test
push
fiadds
orb
lret
push
jbe
into
pop
dec
addr16
adcl
xchg
stos
and
fwait
pop
fwait
js
mov
popa
fstpt
cli
cmpsl
in
les
push
dec
out
mov
std
sub
nop
rorb
sub
stc
and
mov
outsl
and
sub
xchg
imul
lods
jge
and
bound
inc
inc
test
cmpsb
loop
testb
test
mov
jp
insl
cmpsl
pop
in
adc
imul
ffree
pop
ret
push
add
sbb
ljmp
icebp
sbb
lcall
testb
cwtl
pop
gs
daa
dec
mov
push
arpl
inc
frstor
rolb
add
sub
loop
les
or
dec
cmpsb
hlt
xor
mov
add
pop
lods
mov
lea
ja
or
jnp
push
mov
or
sub
push
call
andl
push
out
xor
in
bound
outsb
pop
int
mov
in
xor
xchg
push
mov
push
int3
inc
ret
sbb
cwtl
sbb
inc
hlt
loope
movsb
add
popa
mov
cmpsb
ret
in
cmp
cmp
in
adc
lods
and
push
push
jmp
ret
mov
push
lret
data16
into
xor
push
cmp
aas
pusha
dec
push
mov
pop
in
dec
cmpsb
sbb
jne
cwtl
rol
imul
sahf
jns
sbb
lds
lldt
pop
inc
orl
mov
loop
sahf
mov
jle
repnz
call
inc
adc
lock
rcll
ret
test
add
cwtl
or
out
fnstenv
sbb
repz
call
ja
xor
dec
loopne
push
push
sub
ljmp
pop
and
movhps
mov
sbb
jo
xchg
jge
adcb
jp
dec
or
jae
dec
pusha
cmp
inc
iret
push
inc
push
call
pop
je
xor
je
stos
in
add
mov
lds
popf
dec
int
mov
enter
xchg
dec
fcoms
mov
lret
mov
add
jg
cs
jge
mov
mov
dec
mov
sahf
int
gs
pop
mov
pop
gs
outsl
mov
push
shrb
jp
or
rcr
fcomp
clc
mov
outsl
inc
iret
rol
fisttps
sbb
aad
mov
xchg
mov
xchg
jno
or
lcall
fsubl
cld
call
xchg
mov
in
cmc
test
lahf
xchg
fxch
fwait
test
xchg
data16
es
and
cld
push
sub
cmc
push
mov
adcl
lea
mov
mov
add
outsl
packsswb
xor
repnz
push
or
pop
mov
pop
pushf
lods
movsl
icebp
add
sub
cmp
inc
cmp
mov
mov
jl
lea
rol
pop
insl
testb
rcrb
sbb
cli
sbb
mov
lea
adc
push
aam
in
adc
add
sbb
or
cmp
jb
into
push
add
jle
jnp
cmpsl
cmp
lds
lea
int3
push
repz
es
in
add
sub
mov
and
lods
and
rolb
jmp
jp
int
push
sbb
les
arpl
cwtl
mov
mov
jns
sbb
adc
adc
negb
lds
lret
out
addb
cmp
mov
sub
popa
std
stos
jecxz
mov
ljmp
movsb
sbb
sub
xor
std
cmp
inc
fildll
loop
pushf
jnp
insb
daa
mov
sub
pop
and
ds
jb
lret
jmp
push
nop
stos
into
cmp
sti
pop
mov
pop
addr16
test
cwtl
xchg
inc
adc
xlat
jge
sub
or
mov
pop
inc
outsb
in
je
fst
sbb
jnp
inc
mov
dec
mov
cs
or
lret
in
nop
cs
fidivl
daa
loope
dec
into
rcrl
pushf
pop
test
adc
or
repnz
sbb
popw
cmp
fstl
pop
in
mov
dec
shll
dec
ret
mov
push
xchg
xchg
jnp
fiaddl
test
xor
incl
std
bound
ret
adcb
ret
xlat
aam
lods
or
popf
inc
mov
fnstenv
stos
scas
cld
cs
mov
nop
leave
mov
xchg
scas
lea
sbb
mov
aad
test
aaa
lret
xchg
scas
cmc
push
pop
inc
cmp
mov
xchg
or
inc
stos
xor
addr16
in
notl
and
jle
es
adc
lcall
int
cmp
inc
out
mov
iret
lock
insb
lret
out
sub
mov
ja
iret
push
cs
ret
daa
dec
sbb
movsb
rclb
imul
push
cmp
shr
popf
jb
lds
mov
movsl
adc
inc
cmp
or
cli
out
jge
adcl
mov
mov
lock
pusha
rorl
cmp
into
lods
popa
ljmp
xchg
xlat
in
mov
in
sahf
pop
push
xchg
aad
jnp
xchg
comiss
add
pop
jb
xchg
aam
sbb
mov
sbb
adc
addl
or
adc
add
hlt
inc
push
data16
enter
je
cmp
scas
fstpt
xchg
cmp
mov
cld
add
xor
jle
jae
jne
push
mov
push
add
xchg
aas
xchg
addl
arpl
imul
cld
sub
fwait
mov
pusha
enter
aas
stos
jle
iret
jle
in
adc
inc
or
sub
push
in
inc
jg
add
fidivs
xchg
std
mov
and
sub
aaa
add
mov
inc
outsl
push
and
icebp
test
scas
mov
fistps
nop
aad
adc
scas
lods
xlat
sbb
jbe
xchg
dec
scas
and
lret
xor
xchg
movsl
dec
jns
nop
mov
dec
scas
mov
shll
lea
imul
inc
or
jg
dec
fdivr
fnsave
adc
lea
add
sub
mov
mov
cli
mov
inc
xor
jnp
ss
daa
xor
and
xchg
rorb
pop
out
daa
idivl
or
enter
out
movsl
pop
pop
sahf
xchg
lods
mov
mov
inc
dec
les
push
pop
sub
rol
test
jg
cwtl
sub
fs
pop
pusha
aaa
jl
repz
incb
push
aas
pop
out
por
add
outsl
cli
repnz
xchg
test
add
jecxz
fiaddl
add
sbbl
enter
cmp
test
das
or
mov
mov
xor
or
add
mov
test
dec
and
mov
and
arpl
aad
pop
daa
lahf
mov
cltd
ret
add
scas
testl
in
sub
shr
shr
dec
and
insl
movb
leave
and
mov
test
lcall
adc
mov
enter
les
xlat
test
push
push
fimull
push
ret
xor
mov
and
pop
lds
cmp
clc
ret
lea
xchg
sub
xchg
ret
xchg
arpl
lods
pushf
push
bound
push
nop
fidivrs
out
daa
adc
mov
sbb
jg
xchg
enter
xlat
dec
mov
fimull
add
or
adc
xchg
mov
xchg
mov
insb
popf
sub
or
xchg
scas
mov
mov
les
dec
inc
dec
rcr
sub
adc
repz
push
iret
test
pop
mov
mov
and
idivl
jbe
fiaddl
bound
dec
or
mov
shll
pop
and
sbb
fs
shl
aad
pop
sbb
dec
add
lock
lahf
andb
inc
popa
mov
or
fisubs
int3
dec
jb
ret
test
add
enter
mov
mov
adc
xchg
rcrb
push
js
movsb
lock
sbb
xchg
pop
sub
jns
mov
dec
jnp
add
ds
xor
xchg
adc
jmp
shlb
mov
push
inc
cmc
push
xchg
icebp
adc
dec
push
fcompl
jo
mov
ljmp
nop
lahf
push
cmp
jge
xchg
mov
adc
call
jb
push
jge
adc
xchg
push
sbb
fdivrp
inc
xchg
mov
dec
sub
ja
outsb
mov
stos
mov
sbb
jne
repnz
dec
mov
inc
ss
mov
outsb
popf
icebp
sbb
cmc
rolb
dec
push
lock
xchg
and
cli
or
clc
cltd
outsl
pusha
mov
mov
insl
push
cmc
sbbl
xor
fimull
push
cmp
or
popf
ja
imul
mov
mov
or
mov
ds
jl
shrb
or
aam
dec
mov
dec
mov
inc
cmpsb
andl
cli
into
mov
push
adc
loope
cmpsl
sbb
movsl
mov
jns
cmc
xchg
ljmp
mov
jne
inc
cmpsb
mov
add
dec
cmp
int3
cwtl
jns
push
ss
test
mov
push
mov
or
sub
cmc
jno
lock
push
or
outsb
lock
push
cli
movsl
xchg
jne
clc
cmpsl
sbb
notb
in
out
sub
cltd
fimuls
std
xor
ja
push
dec
jl
and
mov
push
iret
or
cld
fwait
add
mov
cmpsl
xor
xchg
jbe
insb
ss
xchg
stos
das
decl
push
pop
out
adc
les
lock
lea
mov
push
call
and
lds
insl
xor
in
xor
imul
scas
add
xchg
aas
cmp
loopne
push
popf
sbb
mov
and
mov
sar
cld
out
stos
add
mov
jmp
inc
repz
mov
stos
mov
xor
andb
movsl
out
stos
arpl
mov
mov
rorb
cmp
jns
add
fcomi
mov
rcl
clc
andb
iret
or
inc
push
testl
out
sbb
sub
xor
dec
and
or
mov
shl
xchg
scas
push
insl
aam
call
je
cmp
pop
fucomi
pop
lods
pop
dec
dec
dec
or
xchg
scas
and
jne
imul
dec
scas
or
sub
outsb
jnp
and
jecxz
jnp
mov
adc
sub
add
inc
cwtl
pushf
cmp
add
or
test
mov
dec
xchg
sbb
in
mov
xlat
push
jo
lret
fsubs
shrb
das
jl
adc
mov
jle
and
int
xchg
xlat
popf
in
ljmp
jno
add
ds
xchg
jmp
addr16
pop
outsb
or
and
push
push
cltd
jp
cwtl
and
cmp
stos
fldenv
ljmp
mov
mov
repnz
pop
and
ss
test
ljmp
cli
outsb
xor
push
in
dec
pop
and
lock
lret
sbb
fwait
pop
mull
stc
push
in
les
xchg
xor
popf
ret
rcrb
lods
daa
ja
push
daa
fdivrl
jb
sub
mov
jo
xchg
call
push
and
jae
cltd
cs
push
mov
pop
scas
cltd
out
out
xchg
pop
push
cmp
xor
inc
xor
push
jle
pop
dec
popa
mov
mov
orb
frstor
loope
daa
popf
push
mov
add
push
aad
push
insl
jo
das
push
xor
lret
mov
loope
sbb
fadds
ljmp
pop
and
add
mov
mov
in
shll
sub
leave
mov
mov
cli
fcompl
lret
popa
xchg
ret
outsb
sbb
sub
fdivrl
popa
std
clc
jmp
dec
add
xor
dec
stos
jno
push
ret
and
adc
repnz
or
xchg
jle
fs
scas
cmc
mov
int
adc
in
aaa
jl
insl
inc
test
xchg
push
or
pusha
hlt
push
test
cmp
pop
int
int
clc
rcrl
icebp
hlt
cmp
xor
and
shll
insb
jnp
fcomps
jmp
nop
stos
push
je
dec
leave
dec
jecxz
loop
adc
or
pop
shll
mov
mov
mov
jb
int3
fs
daa
into
leave
xor
xlat
pop
repz
mov
fnsave
ret
loopne
xor
sti
test
push
sti
or
push
enter
pop
roll
mov
jle
mov
mov
leave
inc
and
pop
push
iret
mov
loope
inc
aas
add
xchg
pop
cltd
pop
dec
xchg
mov
push
and
push
out
inc
cmp
pop
xchg
xor
loop
popa
push
mov
pop
cwtl
pusha
test
lcall
jmp
pop
jg
sti
fmull
jo
rol
lds
dec
ret
sbb
repz
add
fidivs
sti
sbb
push
adc
insl
xor
pop
jge
or
pushf
ja
daa
and
mov
add
js
mov
dec
jmp
movsl
sub
sbbb
jle
repz
std
sub
jp
ljmp
dec
xor
loopne
sbb
push
dec
xchg
xchg
lea
mov
fiadds
inc
xchg
fsubp
inc
std
je
dec
adc
mov
mov
mov
notb
rorb
int3
inc
jne
mov
add
jp
jae
pop
xchg
loope
xor
enter
in
push
movsl
xlat
and
cs
jl
xchg
addr16
add
sbb
dec
xchg
and
test
cmpsl
aad
or
sbb
das
cmp
lcall
mov
jnp
jbe
popa
push
sub
or
push
and
out
scas
sbb
cld
xchg
leave
out
inc
and
mov
jbe
adc
jbe
pop
push
sti
cmpsl
loope
int3
push
insl
push
mov
popw
sub
cmp
and
sub
xchg
jbe
mov
adc
add
cmpsb
and
jne
mov
nop
aas
and
or
cli
and
jge
test
jle
daa
ror
push
sub
ror
xchg
mov
cmpsb
sahf
adc
mov
push
int3
push
or
xlat
scas
in
add
pop
sub
jno
jno
ficompl
lcall
stc
repnz
lods
pushl
push
lea
jmp
rep
movsb
insb
pop
push
shll
in
cmc
xor
into
ss
popf
mov
push
lret
jp
test
leave
mov
mov
push
scas
pop
repnz
jo
out
cmp
or
repnz
inc
enter
mov
stos
nop
xchg
push
inc
nop
fbld
add
imul
xlat
or
in
pushf
inc
in
faddl
or
mov
daa
fldl
repz
dec
pushf
mov
lds
mov
iret
add
jle
lock
pop
stos
xor
mov
mov
rcll
pusha
jns
inc
das
pop
les
xchg
arpl
jge
out
enter
add
fimull
fsub
lds
pushf
outsl
sti
mov
pop
add
add
fists
aad
push
sbbb
push
mov
mov
jge
sub
js
shl
jo
cmpl
inc
mov
pop
cli
imul
lea
jg
jo
pop
push
xor
mov
scas
mov
jle
outsb
fisttpll
xorl
addr16
xchg
sub
cmp
lds
mov
out
out
test
pop
xchg
rol
pop
inc
stos
arpl
lcall
and
adc
test
dec
push
cmpsl
les
pop
dec
mov
mov
jbe
je
daa
cli
jl
mov
xchg
adc
out
jns
push
mov
rorl
ficoms
jbe
std
pop
mov
sbb
mov
jmp
inc
nop
mov
sub
leave
xchg
jns
jle
or
aam
xor
xlat
popl
enter
mov
rorb
mov
dec
lods
xor
loopne
fisubrs
lock
stc
loopne
int
sbb
ljmp
lock
add
fsubrl
push
iret
aam
sub
or
jno
dec
lret
cmc
jl
mov
repnz
sarl
data16
jns
gs
enter
inc
test
icebp
mov
jl
stos
and
sbb
ds
jecxz
and
repz
mov
out
bound
out
jmp
mov
mov
sbb
jecxz
sahf
je
loope
add
into
daa
adc
clc
mov
stos
pop
lock
xor
xchg
and
jo
gs
loopne
xchg
mov
sti
sub
cwtl
sbb
push
dec
cmp
imul
mov
push
and
dec
ss
fidivl
lahf
imul
xchg
int
add
insl
mov
jo
push
popf
sbb
cmp
cwtl
sub
sub
inc
aad
and
xor
lods
lods
mov
arpl
mov
leave
push
push
xor
and
jge
push
mov
mov
mov
in
ror
hlt
jle
ror
xchg
fcoms
inc
out
jp
push
sbb
jne,pn
adc
mov
pop
and
mov
xchg
fbld
bound
sbb
fldenv
push
mov
fidivl
mov
mov
testl
adc
ret
bound
lods
push
imulb
mov
jns
test
fisubl
jl
pop
popl
fs
mov
stc
jecxz
je
xchg
add
adc
shr
mov
pop
sub
sbb
mov
mov
pop
popf
sub
pop
std
pop
inc
test
cmpb
jns
cwtl
jmp
sti
gs
cmpsb
aad
adc
nop
mov
sbb
inc
stos
push
mov
sub
mov
jg
mov
dec
sti
jno
mov
scas
dec
repnz
imul
pop
ret
dec
mov
outsb
mov
sbb
pop
pop
pop
xor
xchg
fidivrs
push
lds
cwtl
adc
out
cmpsb
mov
rcrl
inc
cld
popf
push
lods
or
mov
fs
jnp
mov
xchg
mov
ret
cmp
jle
sbb
pop
sub
dec
jmp
loope
scas
cltd
call
sets
adc
negb
or
sub
sbb
add
sub
aas
mov
aas
lods
addr16
sahf
bound
add
ret
pushl
arpl
cmp
sbb
jle
sub
push
movsbl
popa
ja
jo
jecxz
rcrb
pop
and
shrd
sub
fsubr
sub
stos
inc
inc
add
mov
popf
cs
adc
dec
sbbb
mov
push
movl
js
das
subl
push
mov
fstpl
mov
mov
inc
roll
rolb
and
cld
add
jl
cmp
cmp
mov
inc
xchg
adc
aam
loop
lods
jb
loop
out
outsb
xlat
inc
adc
jl
out
lock
aaa
xor
outsb
ja
aaa
iret
mov
iret
rol
mov
dec
scas
sub
jecxz
mov
scas
leave
jp
sbb
in
cmpsb
ljmp
daa
fs
aam
mov
sub
cmpsl
inc
xor
scas
incb
lret
jmp
scas
xor
and
xchg
sub
in
xchg
or
sbb
xlat
mov
xlat
jle
jae
lods
shl
lret
mov
mov
dec
xor
in
dec
shlb
dec
sbb
or
mov
sti
inc
rdmsr
add
add
sbb
push
pop
pop
daa
stc
into
jg
orl
mov
lahf
cmovp
push
dec
cwtl
cwtl
and
test
mov
sub
sti
adc
adc
dec
dec
dec
movsl
addr16
mov
out
add
push
sbb
jno
sbb
js
push
lock
mov
pop
aad
mov
adcl
lds
je
idivl
test
push
jb
inc
mulb
movsl
lret
and
pop
subb
insb
dec
dec
push
xchg
shl
xor
fsubl
xor
inc
out
dec
int3
xchg
pop
stc
pop
inc
mov
out
mov
out
loope
jl
rclb
out
mov
imull
mov
xor
mov
loopne
add
fwait
inc
les
insb
lds
sub
fisubs
test
mov
inc
fildll
mov
icebp
loopne
push
test
and
jb
jne
dec
mov
mov
xchg
ja
xor
ret
lock
lds
out
lods
clc
gs
adc
ficompl
or
fldenv
dec
cs
int
ror
sarl
iret
lock
clc
nop
inc
pusha
outsb
fwait
out
dec
iret
shlb
xchg
arpl
jmp
lahf
pop
push
or
inc
das
inc
xchg
xor
mov
mov
sbb
fdivrs
lfs
pop
cmpsb
test
clc
stos
push
dec
lods
push
aas
mov
mov
mov
xor
pop
xchg
dec
popf
out
xor
push
loope
loopne
movsl
mov
inc
aam
dec
lret
jecxz
cmp
xlat
sbb
aaa
cmp
sarb
imul
add
dec
sub
and
in
jb
push
xchg
adc
lret
aad
adc
or
mov
push
push
mov
mov
leave
xor
jnp
sti
jp
cmc
cmpsb
or
pop
cmc
mov
jle
rcr
sbb
mov
out
ljmp
ljmp
hlt
xor
push
fdivs
lret
in
pop
loope
xchg
cmp
push
push
mov
mov
jns
repz
in
in
shll
lods
test
fnstcw
mov
ljmp
mov
jl
mov
cmpsb
idivb
dec
pop
into
sti
push
push
jecxz
repz
outsb
loope
mov
add
pop
sub
push
popf
das
in
fs
and
xchg
and
cwtl
jns
int3
shld
add
aas
imul
adc
xor
mov
bound
push
jge
sub
xchg
jg
clc
inc
push
inc
pop
imul
sahf
popf
mov
sarl
test
push
rorl
call
subl
push
in
loope
lds
cmp
pop
sarb
in
sahf
or
dec
mov
mov
rcr
rcr
jmp
xor
pop
cmp
xchg
gs
xchg
stc
shrb
mov
and
cld
adc
mov
mov
add
or
aam
insb
inc
dec
mov
and
xchg
xchg
sub
sub
repnz
push
in
ret
dec
inc
jle
push
imul
loop
sub
ror
dec
mov
xchg
ss
pop
xor
mov
loop
xor
or
ljmp
or
lea
mov
jecxz
adc
dec
cli
xor
repz
jbe
shll
in
and
push
movsl
psrad
rorl
pusha
add
inc
xor
pop
sti
or
fldt
rolb
jnp
pop
adc
inc
lds
enter
xor
fstpt
mov
xchg
dec
fs
xorb
bound
hlt
cli
out
push
xchg
jbe
jne
xor
imul
add
inc
mov
push
jno
jecxz
test
pop
jmp
test
mov
aam
push
xor
push
mov
movsl
mov
xchg
fistpl
sub
jno
adc
repz
das
js
repz
sub
mov
lock
in
cltd
jle
clc
ficoms
push
ficoml
add
ficoml
xchg
js
add
out
std
push
in
aas
xor
mov
in
xchg
or
mov
cmp
lcall
mov
cmc
or
mov
dec
jbe
ljmp
sbbl
cmpsb
push
call
xor
movsl
inc
leave
sbbb
in
das
adc
js
jnp
mov
xchg
call
push
and
in
imul
das
or
cmovp
xchg
mov
aam
xlat
sbb
imul
movsl
es
out
ljmp
xor
les
clc
add
pop
bound
inc
push
rcll
mov
out
dec
add
jge
xor
add
push
hlt
xchg
faddp
in
cmc
pushf
pop
ret
push
in
mov
clc
mov
and
pop
pushf
mov
mov
cmc
arpl
push
mov
jge
jecxz
dec
mov
iret
fwait
jbe
lret
ljmp
fldenv
leave
jae
sub
dec
add
pop
bound
addr16
std
pop
push
js
sub
sti
cmpsb
out
push
jecxz
call
jecxz
shrl
outsb
or
aam
in
mov
mull
sub
inc
call
loop
aas
add
jns
loopne
into
jbe
xchg
insb
ss
push
mov
insl
pop
push
xor
inc
fwait
push
pushf
xor
mov
or
das
iret
mov
mov
mov
push
jae
imul
push
adc
inc
aas
and
adc
and
fildl
incb
inc
cwtl
rclb
cmp
jnp
dec
mov
out
lea
enter
jmp
xor
loop
mov
ss
xchg
inc
je
dec
adc
inc
mov
jns
jecxz
add
jecxz
int
sbb
xor
xor
into
test
lods
and
xchg
sti
call
sbb
xchg
dec
cs
sub
les
or
pop
aaa
ficoml
and
xor
jb
testl
lods
xchg
dec
mov
push
xchg
adc
cmp
repnz
inc
inc
xlat
fcomp
shll
inc
int
outsl
mov
mov
pop
mov
mov
test
loope
sarb
xchg
mov
push
jne
insl
ja
iret
enter
cmp
and
in
pop
rcrb
mov
inc
add
call
jno
mov
pop
icebp
hlt
mov
data16
mov
lods
fdivr
and
test
bound
sub
in
jl
xchg
xchg
popa
flds
mov
or
inc
jo
in
es
mov
dec
lock
scas
lea
imul
scas
xchg
jecxz
push
repz
cmpsl
mov
dec
add
dec
lock
outsb
cmp
jg
lds
sub
and
xchg
dec
cmp
dec
add
hlt
scas
int
movsl
pop
push
push
sarl
mov
movsl
call
call
mov
out
lods
clc
addr16
js
outsl
xlat
mov
sub
testl
mov
adcl
push
mov
lret
sbb
sub
lret
clc
and
in
sub
std
mov
mov
andl
xor
lret
mov
xor
jns
mov
cwtl
mov
sbb
xchg
xor
scas
jmp
fs
mov
pusha
sub
push
jle
pop
nop
bound
mov
sahf
clc
hlt
xor
gs
call
ja
and
sub
pop
inc
inc
sysret
xorl
xchg
jbe
sub
insb
int
pushf
mov
lods
dec
aaa
test
pop
inc
xorl
sahf
cwtl
push
lods
fcmovnbe
pop
sub
cmc
push
jmp
jg
and
or
ss
jp
sbb
xor
cmp
icebp
insb
or
sbb
shl
jecxz
mov
jmp
sbb
and
jg
xchg
add
repz
xor
insb
pushf
xchg
loopne
push
dec
jle
repz
push
or
xchg
fcmovnu
and
aad
cltd
sbb
aaa
ret
mov
dec
jnp
divb
jge
and
mov
in
mov
test
dec
ja
adc
add
sbb
mov
pop
xor
stc
cltd
lahf
icebp
mov
lret
pop
jbe
pop
cmp
xchg
dec
repz
int3
sti
scas
inc
out
aaa
push
and
lret
aaa
cmp
push
pop
xchg
mov
scas
sahf
aad
xchg
hlt
jnp
fdivrs
and
push
call
and
dec
leave
or
int3
xor
outsl
outsb
cli
dec
adc
inc
jne
xor
roll
cmp
aad
jg
inc
in
les
pop
cmpl
pop
pop
push
out
ljmp
sub
ret
ds
dec
mov
mov
mov
xor
rorb
pop
cli
sub
add
mov
mov
xor
add
jmp
clc
fsub
mov
mov
mov
cmp
push
jns
fcomps
jp
ss
push
inc
ret
sub
outsb
push
test
and
sub
mov
inc
imul
mov
pusha
xchg
fs
mov
push
mov
xor
inc
cmp
xorl
fiadds
mov
jae
fbld
pop
or
lret
cmp
sti
xchg
sbb
xchg
lahf
mov
sbb
dec
jmp
je
nop
or
cmpsb
add
outsb
inc
ret
sarl
repnz
inc
cltd
into
cs
insl
imul
cld
lea
cmp
sar
iret
ds
frstor
inc
bound
mov
add
sti
cmp
inc
mov
cmp
push
test
int3
lret
inc
jae
in
push
xor
and
xchg
mov
or
outsb
imul
shrl
jg
lock
ret
out
xchg
xchg
xor
mov
mov
stc
push
mov
push
outsb
call
xchg
sti
xor
mov
repz
dec
jecxz
xlat
sbb
xchg
in
adc
cli
cld
fmull
aas
sti
shlb
mov
cmp
or
lock
jne
notb
mov
test
shrb
cmpsl
sub
jp
outsb
push
adc
stc
xchg
cltd
push
and
je
sub
mov
xchg
cld
cs
push
scas
sti
xchg
sahf
pop
push
das
imul
cli
mov
push
mov
xor
fs
out
adc
jmp
lahf
ficompl
adc
push
mov
sbb
outsb
int
loope
adc
dec
divb
and
dec
rcrb
sbb
out
imul
inc
jp
sub
ds
and
jne
or
es
jb
adc
rcll
movsb
je
orl
add
mov
or
xor
das
aam
mov
enter
pop
mov
sub
add
xchg
xchg
in
in
das
push
mov
call
push
mov
mov
imul
jmp
notl
xor
cmp
or
ret
std
add
movsl
cltd
adc
xchg
and
sbb
jl
loop
xor
add
cmpsb
push
sbb
jb
jge
add
mov
mov
jns
mov
inc
mov
and
pop
pop
les
add
in
cmc
out
mov
cmp
sbb
cmpsl
fadds
mov
inc
xorb
ljmp
insb
sarl
push
push
or
in
pop
add
lock
repz
or
push
movsb
mov
mov
mov
cmp
xor
nop
rclb
ret
dec
push
pushf
inc
and
mov
adc
fsubrs
lods
xorb
xchg
xorb
shll
ljmp
movsl
xchg
inc
mov
sub
aad
lcall
lret
mov
rcll
repnz
jbe
pop
jbe
out
into
mov
pop
je
dec
dec
pop
ljmp
gs
std
sbb
int
bswap
sti
inc
xor
and
test
or
or
add
mov
xor
sub
push
push
or
cwtl
loop
in
push
in
sbb
orl
and
mov
sub
dec
mov
mov
xchg
or
mov
jb
cmp
sbb
cmp
inc
cmpsb
mov
cmp
cmc
inc
jno
sbb
cld
roll
mov
pop
loopne
fcomp
and
and
lret
out
mov
pop
dec
adc
xchg
pop
jle
loope
je
dec
fs
mov
out
es
orb
or
sbb
add
aas
jnp
xor
pop
test
mov
mov
out
mov
xor
push
lods
lcall
pusha
hlt
insl
enter
roll
scas
mov
inc
or
mov
or
or
add
je
mov
inc
stc
inc
xlat
push
jl
lahf
call
ljmp
out
out
packsswb
push
mov
add
enter
xchg
cli
dec
cli
sub
fnstenv
mov
pop
xchg
ljmp
leave
jae
pop
push
xor
je
dec
jge
mov
lret
into
addr16
push
adc
arpl
sub
sbb
aaa
or
outsl
lcall
dec
lods
mov
ret
and
stos
or
outsb
loopne
and
fstps
inc
nop
mov
pop
out
mov
jne
inc
mov
push
and
xchg
push
movsb
push
xchg
ja
pop
shll
in
sti
ret
jns
je
adc
jnp
fucomp
les
in
cmpsl
pusha
sbb
cs
rolb
push
sar
mov
cltd
imull
push
adc
in
imul
cld
sub
push
xchg
jo
xchg
out
dec
fwait
xor
push
aam
xchg
xor
adcl
sbb
daa
gs
mov
sub
and
xlat
dec
fistpll
ljmp
sbb
ss
flds
lea
outsb
jnp
cwtl
sub
and
jo
push
jns
jmp
xor
xor
daa
out
xchg
mov
add
jno
aaa
pop
mov
std
inc
pop
stc
sub
notb
loope
or
popf
adc
incl
sbb
out
push
add
movb
ljmp
fistps
sbb
cmpsl
loopne
and
test
mov
or
int3
or
xchg
push
mov
dec
jge
dec
inc
mov
and
jl
sub
aaa
xchg
jo
inc
pusha
mov
push
fsubrs
aas
inc
mov
cmp
loop
push
jg
cmpsl
sbb
gs
and
iret
pop
jns
cld
imul
ljmp
jecxz
aas
cmp
xchg
popf
mov
mov
pop
cmp
push
in
push
add
lods
mov
aam
lock
dec
xchg
or
out
hlt
movsl
adc
in
jns
adc
dec
cmp
adc
jno
bound
mov
inc
mov
add
andb
inc
add
and
jb
rorb
in
jno
mov
nop
fwait
dec
fists
mov
in
cmp
cs
mov
jge
jp
sbb
fs
lea
add
pop
jno
movsl
lahf
call
xchg
sub
xchg
cmp
xor
jb
inc
test
xchg
xchg
lock
or
and
mov
cltd
add
pushf
and
cmp
lcall
jmp
ljmp
xor
sbb
aas
testb
icebp
sbb
addr16
fdivr
jmp
and
test
test
xor
inc
dec
cld
int
sbb
inc
mov
cld
cs
loope
outsb
add
and
jl
mov
ss
mov
and
fnstsw
shrb
add
sahf
jecxz
xorl
sbb
stos
mov
imul
testl
jl
xchg
jb
sarb
lea
push
pop
xor
sbb
fistpl
enter
out
enter
mov
bound
and
clc
das
imul
loopne
loopne
pop
inc
mov
push
lock
mov
lret
movsl
in
cmpsb
mov
and
push
mov
js
loopne
dec
pushf
bnd
pop
pop
push
int
fidivl
shl
fidivl
rorb
mov
adc
test
inc
pop
movsb
xor
jns
cwtl
sub
mov
test
insb
out
pop
inc
lea
jno
mov
jbe
in
sbb
sbb
xchg
xchg
xchg
aam
ds
mov
test
imul
push
clc
nop
jo
sub
jo
pop
addr16
aaa
pop
loop
jno
dec
sbb
call
fildll
cli
inc
sub
mov
pop
jnp
jne
mov
mov
push
gs
xor
cld
mov
fmull
or
xchg
daa
jne
sub
testb
popa
mov
pop
cmpsb
adc
pop
adc
outsl
sbbb
pop
adc
lods
scas
shrl
in
fs
popa
cmpsl
dec
in
inc
jle
xor
mov
imul
cmp
mov
xchg
cli
push
and
sbb
mov
pop
aam
pusha
xor
cli
xchg
mov
movsb
mov
jle
add
jle
jae
dec
call
cmp
test
fisttpll
es
or
out
in
xlat
add
popf
push
pop
repz
push
test
out
jbe
push
decb
mov
leave
jbe
and
test
adc
inc
jle
cmp
pop
mov
gs
lock
and
fisttpl
bound
popa
mov
lea
in
push
inc
jb
les
js
jne
mov
fs
xchg
arpl
sub
xor
subl
mov
dec
sub
adc
sbb
jg
out
and
fsubrs
ret
or
fadd
es
fcmovnb
in
xchg
lods
movb
int3
pop
mov
inc
aas
pop
pop
rcll
and
jg
insb
hlt
sub
es
lods
popf
or
bound
fs
sbb
or
xchg
fs
roll
or
es
aas
test
push
sahf
push
cmp
mov
inc
add
pusha
adc
fdiv
adc
outsl
pop
dec
pop
mov
push
jns
push
inc
out
loopne
and
push
fildl
push
jge
pop
shrb
mov
imul
xor
and
mov
jg
std
cmp
fs
je
popf
lahf
push
mov
in
enter
jb
jns
cs
hlt
ja
sub
dec
xlat
mov
mov
pop
lahf
in
shll
fs
jns
les
bound
mov
leave
xor
dec
aad
xchg
repnz
rcl
fistpl
rol
mov
cltd
ja
add
adc
push
rclb
xchg
in
sbb
xchg
inc
pop
loope,pt
xor
int
push
popa
loope
sbb
lods
mov
push
pop
sbb
and
sbb
xchg
pop
pop
sub
pop
mov
sub
aas
call
adc
pop
ss
test
ret
das
in
pop
sbb
push
jp
inc
jb
adc
mov
inc
test
incl
mov
adcb
daa
mov
dec
stos
push
clc
aam
mov
mov
outsb
scas
lret
inc
cmc
scas
int
sarl
or
movsl
popf
test
and
or
xor
mov
les
scas
sub
add
test
jecxz
xchg
xlat
and
popf
and
shrl
push
jge
mov
dec
push
outsl
sub
aas
pop
cmp
and
xlat
xchg
push
test
pop
call
xchg
lcall
push
xchg
mov
mov
lahf
add
xor
or
imul
test
pusha
jmp
ss
adc
dec
mov
cmpsl
bound
cltd
cli
xor
idivb
inc
push
jo
in
pusha
pop
lods
aam
divb
and
adc
and
xchg
and
xchg
popf
mov
and
imul
test
cmp
xor
sub
inc
push
dec
jno
jnp
cwtl
sbb
cmpsl
cli
sub
adcl
push
iret
mov
adc
negb
fcompl
loopne
cltd
jle
int
mov
mov
loope
mov
jmp
push
dec
mov
dec
adc
ret
pop
or
cltd
sbb
xchg
pop
push
jae
mov
inc
mov
fdivs
leave
add
fidivrl
push
aas
aas
pop
jne
jmp
jecxz
jmp
imul
out
pop
int
scas
lds
add
out
lcall
dec
aaa
mov
into
or
mov
scas
inc
outsl
add
inc
jp
out
push
pusha
orl
adc
push
iret
sahf
sbb
add
sti
dec
aad
sbb
es
enter
push
jb
jno
fcmove
pushf
rcl
lods
pop
into
cwtl
xor
notb
test
pushf
into
pop
dec
mov
out
rcrb
or
xor
xchg
subb
xor
sahf
cmp
scas
jg
sbb
hlt
sbb
lahf
mov
fisubs
and
pminub
mov
out
jnp
jae
bound
pop
outsl
cmp
cs
xor
or
cmp
arpl
int3
cltd
inc
mov
je
fwait
into
dec
test
sub
shrl
mov
cmp
addl
les
repz
lahf
hlt
in
scas
xchg
loopne
rcl
cmp
leave
mov
out
xchg
mov
cmc
out
add
test
int
xlat
xor
pop
sub
pop
lahf
fstl
sub
fldenv
jge
repnz
outsl
and
pop
sbb
popa
push
inc
popa
nop
das
lahf
aad
push
les
shrl
outsb
aas
mov
adc
test
xlat
dec
add
dec
in
or
sbb
aam
js
pop
imul
ficoml
inc
lods
add
data16
push
scas
inc
sub
fld
sbbb
shll
cmc
rcrb
cmpsl
mov
aam
mov
mov
lahf
shl
cli
pop
orb
orl
add
and
jmp
gs
stc
int3
imul
arpl
xchg
dec
loopne
mov
inc
mov
jno
xorl
xchg
int3
lcall
push
inc
shl
or
outsl
icebp
and
mov
stos
dec
cmp
pushf
ret
xor
sarl
sub
stos
mov
loope
push
js
nop
iret
fmuls
ret
adc
popa
imul
mov
xchg
push
lcall
in
jl
push
je
mov
sahf
push
inc
push
push
sbb
and
das
mov
lret
sti
int3
push
pop
ret
dec
outsl
loop
into
mov
adc
push
push
dec
pop
clc
add
cld
xchg
repnz
mov
aam
lods
xorb
xchg
flds
adc
bound
mov
ss
dec
hlt
lods
jo
sub
mov
cmpsl
push
cmpsb
and
pushf
adc
dec
sbb
jg
mov
notl
pop
cmp
fucom
mov
lods
fistl
ljmp
call
dec
or
cmp
insb
pop
mov
push
jb
pop
jle
js
aas
lcall
xchg
jmp
and
ss
push
push
mov
iret
aaa
xor
testl
xchg
jecxz
aaa
mov
scas
inc
ljmp
lods
jbe
sbb
int
int3
or
lods
inc
int
sti
into
subb
mov
push
loopne
inc
pop
out
inc
pushf
mov
jmp
js
je
js
cs
orl
test
ret
insl
repnz
adcb
dec
rcrb
pop
hlt
enter
jns
out
mov
pop
mov
leave
cmp
cmpsl
xor
or
inc
cld
lods
hlt
cmp
adc
and
rorl
mov
and
in
jl
push
les
xor
adc
xchg
inc
out
push
add
cltd
js
jge
cmpsb
nop
xchg
movsb
xchg
push
adc
add
and
adc
and
mov
add
orl
gs
cltd
jg
in
dec
scas
sarl
or
and
dec
stos
inc
and
xor
mov
decl
or
out
xchg
jnp
xor
inc
sub
mov
dec
inc
pop
sahf
add
jle
push
adc
cmc
iret
inc
lea
imul
rcr
inc
cmp
mov
cmpsl
fsubs
loopne
cwtl
and
popf
push
rcrl
jg
push
sbb
cwtl
cmp
sub
pop
sbb
cs
sub
xchg
loopne
mov
xchg
jecxz
adc
or
sbb
push
arpl
sbbb
push
mulb
ss
or
nop
xor
addl
js
lret
out
inc
xor
dec
sub
fs
fdivl
rcl
arpl
xor
add
lcall
xor
adc
dec
xchg
stos
mov
subl
jae
rorb
xchg
push
popf
std
daa
add
mov
aas
fs
nop
inc
jl
outsl
shrl
push
pop
or
jbe
mov
fisubs
cmp
add
adc
mov
cmp
sbb
inc
and
imul
push
adc
mov
nop
dec
inc
sbb
push
in
inc
or
add
mov
fstps
jecxz
push
out
outsl
lds
pop
pop
popl
inc
ss
arpl
adc
stos
mov
cmc
mov
push
xor
add
sahf
test
or
jmp
mov
test
in
sub
cmpsb
call
mov
pusha
adc
jo
lret
jecxz
data16
sub
jle
das
lds
jp
cmc
aad
cmc
jp
jno
icebp
inc
aad
mov
out
jne
bnd
jecxz
mov
push
xor
xor
notl
add
in
loop
test
adc
pop
lods
int
pushf
sub
jne
jmp
push
push
shrl
lret
in
or
iret
cltd
dec
imul
sbb
mov
and
mov
jns
pop
in
pop
je
lret
daa
movsl
pusha
stos
jl
pop
rcrl
xchg
push
sbb
jg
mov
orb
or
movsl
dec
adc
mov
pop
mov
mov
jmp
cltd
push
mov
int3
pusha
pop
xchg
mov
lock
dec
imul
loope
xor
pusha
xchg
dec
out
std
inc
cwtl
xchg
pop
add
repz
and
roll
dec
push
mov
std
out
dec
aad
pop
inc
loopne
sub
pusha
outsl
and
out
jle
or
push
std
mov
test
xlat
stos
stos
push
or
in
out
scas
xor
imul
xor
dec
mov
xor
mov
sub
xrelease
iret
shl
cmp
xchg
insl
add
xchg
mov
mov
movl
lods
sbb
mov
imul
cmc
mov
xor
aad
sub
iret
pushf
iret
push
test
or
adc
pushf
mov
rclb
sbb
jle
lods
bound
in
mov
gs
repnz
mov
push
sub
cltd
push
cmpsl
mov
movsl
sahf
das
jecxz
fwait
cltd
clc
jg
sub
mov
xchg
shrl
pop
mov
fistpll
jno
pop
loop
mov
add
lcall
mov
add
mov
sub
adc
push
cld
pop
push
loop
cmc
cmp
sbb
push
test
pusha
mov
jb
cmp
addb
mov
and
int3
xchg
xor
add
test
cld
test
pop
jo
cmpl
cmp
cs
sub
pop
pop
pop
idivl
int3
imul
fwait
clc
pop
sub
jmp
sub
push
cmp
roll
pop
pop
aaa
xor
in
xchg
lret
addr16
dec
adc
cmp
lock
pop
in
popf
pop
fs
add
mov
jns
popf
and
pop
out
bound
adc
mov
fwait
or
insl
aaa
loope
inc
xor
pop
mov
lds
rol
and
pop
xchg
addr16
mov
mov
jle
or
int
jl
scas
dec
or
inc
or
jae
insb
push
or
outsl
js
sub
aas
adc
dec
mov
sbb
enter
sub
cmp
int
pop
pop
repz
aad
mov
or
push
or
push
push
mov
ds
cltd
add
scas
cs
pop
pop
and
lret
pusha
push
xchg
dec
fadd
jns
movsb
insl
ss
mov
fucom
ficompl
jg
shrl
cmpsl
les
inc
out
jg
test
mov
adc
lods
push
mov
testb
mov
dec
in
out
std
pmaxsw
mov
shlb
xchg
loopne
inc
test
sbb
aas
mov
adc
sub
test
cmp
out
pop
or
jns
test
mov
xor
cli
pop
adc
pusha
xor
test
mov
sbb
sub
fistl
pop
add
and
leave
push
lods
loope
push
and
push
sbb
sub
out
ljmp
xor
or
loop
aam
pop
mov
adc
cmp
mov
out
fdivr
jne
out
sbb
ret
mov
push
arpl
pop
shlb
bound
in
rcl
inc
je
sbb
adc
idivb
addb
or
fsts
sahf
xchg
ror
fstps
sbb
jb
popa
mov
cld
pop
inc
push
mov
add
mov
jmp
jg
ret
popf
xor
dec
push
lret
jecxz
sbb
xchg
test
jmp
pop
movsb
sub
sub
rorl
xchg
imul
and
pop
and
adc
test
pop
popa
push
or
clc
or
sub
push
push
cltd
loop
or
xor
xchg
push
pop
sahf
rcrl
and
out
dec
nop
jnp
xor
xorl
sahf
and
loopne
fstpl
jne
jnp
xlat
shrb
sbb
cwtl
loopne
cmp
loopne
mov
push
orl
push
inc
xchg
sbb
out
ja
pusha
call
iret
dec
rorl
xor
cmp
leave
mov
imul
xchg
jg
aas
jbe
out
mov
xchg
int
add
push
sahf
sahf
fnstenv
push
cmpsl
mov
frstor
roll
shrl
cmc
adc
stc
lret
mov
xor
pop
mov
jg
cmpsl
mov
clc
pop
nop
lret
shrb
pop
inc
mov
xor
fwait
lahf
je
cld
xor
adc
dec
add
and
ss
push
fmul
js
mov
adc
ljmp
mov
mov
xchg
imul
adcb
and
adc
negb
lahf
sub
mov
insb
xor
test
sub
inc
repnz
cmpsb
faddl
dec
or
inc
inc
push
sub
dec
ficompl
hlt
jle
xchg
test
or
dec
addb
iret
and
pop
cmp
xchg
xchg
out
cltd
imul
jp
and
int
mov
pop
dec
mov
call
mov
jl
cmp
shl
cmp
cmp
mov
jnp
jecxz
call
pop
jae
lods
int
andl
add
jno
lock
jecxz
ret
sbb
push
lret
sub
jnp
roll
adc
jecxz
mov
pop
push
xor
sahf
adc
imull
xor
mov
lods
mov
sub
imulb
pop
lods
les
xor
push
imul
lods
push
sbb
sarl
dec
sub
add
mov
data16
mov
in
jnp
lds
xor
dec
pop
mov
ds
enter
loopne
inc
bound
mov
gs
jg
xor
cmp
in
ret
lret
xchg
jae
inc
mov
add
and
bound
dec
mov
mov
lcall
arpl
imul
xchg
inc
inc
leave
or
std
loop
lds
xor
in
cld
push
add
mov
nop
mov
and
mov
and
jno
xchg
ss
pop
loop
orl
mov
mov
iret
loopne
xor
test
call
jl
lock
mov
sub
pop
lea
test
pop
push
adc
jo
or
mov
jns
lods
xor
push
xchg
pop
jb
add
mov
or
mov
aam
insl
mov
adc
push
add
aam
push
mov
adc
cmp
ret
popf
and
lds
daa
cmc
repz
iret
shl
pop
out
xor
pop
or
aam
mov
jg
testb
ds
mov
push
push
ficomps
out
inc
add
insb
jnp
es
cmp
mulps
outsl
cmpsl
pop
jae
xchg
idivl
js
push
loope
in
mov
fwait
add
cltd
sub
jmp
cmp
push
or
jbe
lcall
and
sub
testb
add
inc
cs
jne
scas
pop
dec
pop
adc
popf
dec
ret
dec
dec
inc
or
cmp
sbb
and
mov
mov
push
inc
xchg
repz
int3
mov
fcom
ss
call
arpl
adcb
nop
push
pop
ficoml
mov
lcall
add
mov
sti
xor
jae
jno
xor
fwait
lahf
xor
push
mov
in
leave
mov
std
jo
movsb
fimuls
jl
xor
repz
cmp
fadds
cmp
icebp
ja
push
arpl
iret
test
je
int
jno
fists
inc
bound
out
pop
test
push
mov
dec
sbb
sahf
cmp
rcrl
leave
sbb
mov
mov
imul
push
cmp
pop
cmp
cs
cs
arpl
ficompl
jp
cltd
ss
mov
sbb
mov
fwait
cmc
and
cmpb
movb
dec
xor
push
movsl
test
ficomps
or
movnti
xchg
gs
incb
ds
shll
push
clc
sbb
js
mov
test
add
int3
mov
sbb
pop
add
add
adc
shrl
mov
and
ja
sub
add
imul
imul
lahf
inc
sbb
pop
add
inc
sbb
aam
adc
out
dec
mov
xchg
rorb
pop
cli
add
loope
imul
xchg
out
mov
iret
adc
outsl
jmp
or
pop
add
add
xor
aam
stos
lret
or
pop
int3
sub
dec
imul
dec
sub
and
jo
loope
sbb
lods
lahf
jo
sahf
call
inc
sub
add
repz
cs
xchg
stc
and
mov
scas
ja
out
mov
les
inc
push
cltd
adc
xchg
int3
repnz
and
test
testb
mov
fndisi(8087
fwait
lock
xor
pushf
dec
js
daa
add
stos
stc
push
cmc
inc
pushf
sbb
pop
cmpsb
int3
fcmove
popl
iret
pop
test
cmp
test
jl
push
xor
push
mov
popf
pop
mov
subl
inc
ret
dec
sub
je
fwait
mov
sub
lock
stc
inc
subl
cmp
fcompl
or
mov
pop
lock
jae
leave
xor
fidivrl
out
loope
xchg
out
jno
mov
and
push
fwait
sub
ljmp
scas
xchg
les
jg
popa
or
cmp
shll
xchg
push
pop
test
cmp
mov
loop
push
cwtl
dec
je
cli
cmp
sub
imul
cmp
xchg
es
leave
jge
scas
mov
test
les
stos
orb
stos
jg
inc
in
and
or
scas
add
mov
xchg
mov
movsb
jge
lret
clc
in
or
insl
in
out
jl
std
cld
aaa
add
push
sbb
cmpl
popa
lret
lcall
ret
icebp
or
fisttpll
jecxz
ss
inc
pop
xor
lods
mov
fdivs
or
xchg
adc
xlat
xchg
cmp
xor
jae
and
inc
fs
or
mov
xchg
bound
rolb
pushf
pop
mov
aad
faddl
push
cltd
push
imul
ds
in
lods
testb
mov
xchg
jge
cmc
jecxz
and
fists
fsubrl
repz
push
sbb
and
bnd
maskmovq
divl
mov
out
stos
lahf
or
daa
xor
push
data16
cmp
lock
fwait
jl
mov
aas
mov
ss
mov
lock
jmp
fdivrl
lea
jo
sahf
subl
stos
xchg
mov
dec
fstps
subb
adc
das
xchg
xor
lcall
out
insb
shrl
pop
mov
push
xchg
and
insb
shlb
add
sbb
pop
push
sbb
gs
push
or
fildll
inc
adc
pop
or
fdiv
cmp
ret
mov
adcl
je
push
dec
cmp
push
jne
cld
cmpsb
ds
data16
push
imul
pop
jl
cmp
imulb
xchg
das
ljmp
popa
pop
loop
movsl
daa
pop
pushf
mov
sbb
decb
mov
pop
xchg
loope
ret
mov
lods
insl
lods
jne
and
cli
popf
out
add
aaa
pop
add
out
sub
cmp
insb
mov
lds
repnz
cmc
mov
cmpsb
xchg
add
jne
add
mov
adc
add
mov
mov
les
jb
mulb
outsl
mov
int3
mov
or
push
mov
jg
adcl
out
sbb
fistpl
popf
sub
push
mov
or
fistps
jo
add
sahf
push
mov
je
pop
jne
ret
stos
loop
popa
ds
add
jmp
push
jnp
cmpsb
int
push
ljmp
hlt
cmc
rorb
scas
nop
pop
or
sub
pop
cmp
dec
pop
add
mov
lcall
fisubl
jl
adc
into
mov
into
inc
fistl
pop
dec
nop
sub
xor
addb
jge
jmp
push
imul
xor
xchg
cmpsb
add
repnz
sahf
ljmp
stos
add
sub
xchg
stos
dec
hlt
gs
ja
push
jne,pn
pop
cmp
pusha
insl
inc
sub
fwait
arpl
jg
cli
mov
cwtl
jnp
mov
xlat
mov
shlb
xor
cld
arpl
mov
stc
pushf
fs
stc
hlt
dec
adc
outsl
inc
loop
sysexit
or
cmp
fisttpll
repnz
dec
sbb
ret
cmp
cli
fsubr
into
in
xor
les
add
lret
dec
imul
sub
jge
iret
or
push
push
add
inc
nop
add
mov
insl
je
adc
gs
iret
lahf
xchg
sub
stos
mov
jae
jg
cmp
ss
aam
sub
inc
cmc
or
adc
xor
mov
rsm
mov
inc
cmp
jae
mov
imul
xor
pop
jmp
cwtl
cs
pop
enter
lret
hlt
and
dec
shl
mov
mov
lock
loopne
call
adc
xchg
push
lods
lcall
cmp
sbb
mov
nop
inc
mov
loope
pop
push
mov
pop
xchg
call
lock
mov
add
push
push
lret
daa
inc
pusha
outsl
sub
mov
es
mov
movsb
fsubl
and
mov
orb
stc
mov
test
mov
clc
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
sub
pop
dec
add
add
add
add
cmp
popl
add
add
add
add
add
pop
dec
add
add
add
add
add
add
add
add
clc
mov
add
mov
add
popl
add
sub
add
popl
add
add
popa
insl
imul
aas
inc
gs
jae
jb
bound
arpl
arpl
imul
gs
bound
arpl
arpl
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
push
push
inc
push
xor
out
dec
scas
popf
mov
push
sub
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
push
movb
xor
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
push
mov
inc
pop
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
movl
movl
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
dec
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
movl
movl
lea
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
mov
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jb
mov
mov
mov
add
cmp
jae
sub
add
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
pushl
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
lea
add
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
push
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
movzwl
movzwl
mov
xor
mov
xor
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
jmp
mov
xor
mov
lea
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
sub
xor
cmp
jne
xor
jmp
xor
inc
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
push
push
movl
movl
xor
inc
je
mov
xor
add
cmp
jne
jmp
mov
xor
add
mov
sub
mov
mov
xor
add
mov
add
mov
jmp
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
pushl
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
push
pushl
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
add
push
lea
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
xorb
cmp
aas
add
daa
add
add
xchg
pop
test
mov
int
je
pop
out
int
mov
bound
jnp
pushf
mov
jbe
mov
push
dec
adc
push
push
jae
push
cmp
ljmp
orb
sbb
jge
popf
mov
rcr
in
data16
pusha
sbb
ds
sub
sub
xor
mov
daa
push
push
pop
add
js
cmpsb
adc
test
roll
mov
jnp
ja
inc
fcompl
popf
pop
decb
loopne
gs
mov
add
sub
push
add
jmp
xchg
add
insl
shlb
outsl
sub
jno
adc
and
push
mov
cltd
jle
pop
popa
and
mov
sbb
test
lock
xchg
subl
inc
loope
shlb
and
jb
xchg
gs
mov
scas
push
mov
xor
es
int3
movsl
inc
sbb
cmpb
add
test
adc
add
data16
push
pushf
andb
js
jmp
cmpsb
add
sbb
repz
ret
mov
filds
jl
pop
add
lods
mov
xchg
xchg
negl
xor
pop
jl
jge
das
aad
mov
jmp
loope,pt
movl
inc
mov
mov
and
leave
push
ret
sub
fistps
aas
dec
sub
mov
push
sbb
lods
fdivrp
arpl
adc
rorl
pop
cmp
sub
ret
push
xlat
loope
loope
mov
push
adc
dec
cmp
pop
stos
fstps
aad
add
mov
shrb
adc
adc
xchg
push
and
pop
jbe
sbb
popf
es
nop
xor
xor
and
scas
jno
cli
jns
sub
xchg
inc
aam
dec
jecxz
push
addb
and
xchg
in
sub
iret
outsl
fidivrl
and
in
inc
dec
pop
xchg
movsb
pushf
xor
jecxz
pop
in
inc
and
das
jne
lds
std
pop
es
aaa
lcall
addr16
dec
fs
sub
shl
popl
sub
inc
pop
push
gs
adc
lcall
int3
sbb
xor
mov
stos
mov
lcall
cwtl
xchg
lcall
jae
mov
xor
jge
adc
lock
jmp
mov
dec
sub
call
add
stos
or
movsb
add
or
jp
aas
xchg
mov
enter
or
movsb
lcall
fsubr
pop
rcl
cmpsb
and
test
or
repnz
and
les
pusha
shll
idiv
jg
mov
mov
inc
nop
sbb
gs
add
daa
add
add
jne
rcr
movsl
dec
xchg
inc
dec
scas
movsb
cltd
and
scas
inc
test
jae
push
lret
clc
repnz
push
dec
test
adc
outsl
jge
scas
aas
dec
add
outsl
dec
outsb
push
jp
and
add
imul
sbb
ss
sbb
out
jmp
pop
xchg
scas
cltd
adc
mov
iret
or
adc
inc
cmc
rorl
and
mulb
jle
pusha
pop
jno
sbb
pop
inc
adc
fbstp
orl
std
sti
out
and
mov
shl
mov
cmpl
push
sub
movsb
rcl
cmp
out
movsl
mov
fcmovbe
idivb
sahf
lahf
sbb
mov
outsl
fs
jl
cmp
ds
or
jmp
add
cmpsb
mov
cmp
dec
adc
cmp
fidivrl
mov
adc
aaa
xchg
sub
sbb
jg
js
xchg
aas
and
xor
jbe
sbbb
cmp
inc
fisubrl
inc
stc
std
dec
adc
push
mov
sti
ret
ljmp
xchg
fldt
into
ret
outsl
pop
fsts
loop
mov
or
pop
dec
lret
ret
push
pop
xor
mov
mov
cwtl
mov
pop
pushf
stos
xchg
aam
and
ds
and
sub
sub
cli
add
inc
mov
test
jnp
dec
dec
adc
jge
or
mov
and
xor
and
movsb
jae
stc
mov
pop
mov
cmp
insl
jecxz
xchg
ret
pop
sbb
lahf
xchg
int3
pop
cli
mov
and
xchg
mov
xchg
cmp
arpl
push
sub
lods
push
mov
out
inc
mov
and
xor
or
stc
fnstsw
sbbl
lods
cmp
mov
imul
push
scas
ljmp
ret
and
popf
int3
dec
nop
cld
arpl
cli
popa
push
xor
fstpt
jnp
sbb
sarl
pop
pop
dec
xchg
in
adc
adc
data16
ljmp
movsl
lods
mov
dec
xchg
lcall
xor
inc
cwtl
scas
sub
in
lock
jmp
jbe
cli
jne
lods
jl
adc
cltd
out
sub
jecxz
cld
cld
sahf
fldenv
mov
inc
xor
mov
mov
iret
mov
inc
adc
inc
xchg
test
mov
xchg
xchg
sub
and
lds
lahf
sti
mov
addr16
xlat
insb
movsb
fisubrl
and
movsl
out
mov
int
ss
adc
and
adc
sub
adc
fstl
std
dec
in
or
sbb
add
ret
stos
fucomi
mov
cmp
xchg
mov
and
fldcw
xchg
mov
cmp
pop
xchg
lea
rorb
arpl
inc
fninit
add
sbb
pop
xchg
mov
xchg
mov
add
add
add
mov
inc
jle
push
inc
xor
xchg
sub
nop
movl
faddp
faddp
add
push
xor
pop
out
adc
mov
nop
in
add
dec
sub
push
push
aas
je
and
in
sub
cmp
lret
call
jae
push
add
das
push
or
jl
test
jo
js
push
mov
fldenv
les
sahf
cmp
mov
sbb
fisttpll
cld
xchg
std
fs
ja
dec
cmp
jb
push
xchg
je
mov
inc
and
adc
inc
pop
dec
stc
gs
into
ds
mov
in
add
dec
add
scas
and
data16
push
push
adc
mov
and
cltd
sbb
sub
and
cmp
cmp
jno
cli
dec
add
subl
sub
sub
adc
fdivl
mov
repz
loopne
iret
mov
sti
or
aad
and
shr
add
add
jo
pop
stos
mov
daa
dec
stos
sbb
aas
mov
scas
cmc
mov
mov
les
inc
dec
int
sub
clc
add
gs
sbb
dec
or
dec
ficoms
inc
sub
and
or
mov
lret
movsb
sub
pop
jno
mov
outsl
push
pop
in
inc
and
gs
jg
push
inc
loope
ss
xchg
xchg
dec
add
sub
daa
xor
xor
inc
add
jnp
push
or
adc
mov
mov
dec
pushf
pop
mov
cmp
testl
js
mov
hlt
push
repnz
mov
call
es
or
push
sub
call
icebp
sub
inc
xchg
push
mov
imul
add
pop
adc
jne
loopne
ret
mov
inc
push
jnp
test
aas
xor
stos
test
or
iret
ffree
push
dec
in
nop
orl
in
sbb
mov
push
faddl
out
or
iret
xchg
inc
fdivrl
scas
add
mov
adc
fdivrs
das
ret
lock
test
cmc
dec
leave
add
jle
sub
cmpsb
in
xor
fistpll
xor
push
sub
cmp
xchg
jg
add
ror
dec
fistpll
repz
lret
icebp
negl
inc
and
xor
jl
mov
inc
push
pop
nop
cmp
ret
nop
ds
xor
pop
xor
sub
adc
fbstp
mov
xchg
into
je
rolb
pop
mov
sarl
or
rcrb
sahf
nop
inc
loope
add
xchg
or
cmp
jg
or
pop
pop
add
sbb
add
add
add
mov
jp
push
cmp
sbb
daa
add
add
sbb
ljmp
repz
cmpsl
jle
mov
test
mov
shlb
jo
sub
stc
add
out
popf
push
clc
out
sub
call
xchg
stos
fstps
jge
inc
fwait
jle
rorb
cltd
jle
icebp
or
sbbl
mov
in
add
incl
push
dec
pop
in
push
fdivrl
mov
sbb
or
cli
xchg
pop
inc
push
jg
or
add
sbb
js
push
or
into
xchg
movsb
insb
sbb
xchg
mov
out
xchg
movsl
pusha
arpl
lahf
push
xchg
cmc
dec
hlt
dec
in
cs
dec
lret
fisubs
xchg
add
push
inc
into
mov
movsl
mov
cmp
insl
dec
sbb
insl
sbb
popf
mov
out
mov
insl
les
cmpsb
sbb
jmp
xchg
aas
push
inc
pop
mov
and
into
add
sbb
cltd
mov
hlt
test
mov
sbb
dec
lret
mov
mov
or
leave
pushf
data16
adc
sub
mov
inc
xchg
push
sbb
std
pop
fdivrp
sbb
pop
sbb
mov
mov
cmc
jl
mov
cmp
mov
aaa
pop
jns
incl
add
pop
mov
mov
pop
pop
ja
das
lock
mov
icebp
fwait
stc
push
movsb
sub
sti
push
divb
mov
jl
ds
loopne
sbbb
pop
adc
lahf
fdivrl
loope
jmp
adc
fcompl
les
add
xchg
cmpsl
pop
stos
insb
sti
xchg
add
cmpsl
inc
pop
jg
outsl
push
xlat
mov
add
dec
lcall
enter
xchg
jmp
sbb
jp
pop
sbb
sub
lods
sbb
cld
ss
push
xchg
sbb
xchg
mov
pop
ror
xchg
or
inc
stc
aas
pop
jmp
sti
clc
inc
in
aam
push
stos
sbb
mov
jno
inc
js
es
out
adc
dec
jbe
mov
mov
fnsave
aas
aam
in
sub
lcall
test
cltd
xor
scas
pop
adc
adc
outsb
add
fisttpll
fnstenv
xor
stos
inc
push
or
mov
outsb
bound
adc
pop
nop
mov
outsb
cld
cmp
jbe
xchg
and
cmp
adc
gs
pop
fs
xchg
fcomip
iret
mov
fidivl
ret
dec
pusha
loopne
je
ss
adcl
push
ret
dec
aaa
cmc
addr16
sub
dec
rcll
xchg
jle
xorb
and
or
adc
jmp
mov
mov
ds
mov
pushf
out
clc
cmp
push
movsb
enter
ss
mov
lret
test
jp,pn
jo
jge
ret
mov
mov
dec
and
mov
cmp
test
pop
cltd
add
hlt
mov
std
jl
dec
pop
cmp
xchg
sbb
daa
add
add
mov
movsb
mov
adc
imul
jp
mov
mov
add
sbb
mov
adc
xor
sbb
jbe
pop
pop
add
test
or
stc
sub
test
add
ret
add
mov
fadds
lods
aaa
mov
jno
mov
jmp
movsl
mov
sub
xorb
or
cmc
inc
jmp
pusha
and
cmpsb
pop
jno
frndint
cmp
mov
fisubrl
dec
and
cmp
mov
in
scas
addr16
mov
mov
xchg
into
out
es
inc
call
mov
mov
xor
xchg
push
push
ret
jno
xor
dec
or
adc
stc
adc
fwait
out
pushf
icebp
ret
shlb
mov
hlt
fnstcw
sub
or
jle
cmp
mov
lods
mov
shll
sub
daa
cmc
mov
testl
fstpt
push
cmpsb
andb
adc
js
dec
leave
test
orl
mov
cs
test
mov
daa
cmp
jbe
into
dec
lret
push
outsl
lcall
in
dec
in
pusha
add
push
mov
mov
sti
ror
test
pop
dec
leave
xchg
cmc
jecxz
pop
xor
daa
test
mov
jo
inc
shr
pop
or
cmp
lret
sub
lods
and
pop
and
or
dec
outsl
xchg
pop
jb
dec
jnp
jb
push
lea
out
fs
and
jno
jo
mov
ret
sub
add
iret
pop
fnstsw
and
clc
xor
fwait
xor
mov
push
dec
loope
jb
jecxz
jle
lret
mov
push
popf
mov
mov
sub
jns
add
add
jge
daa
jecxz
xchg
inc
push
push
fcomps
shll
sub
fdivl
jecxz
mov
jecxz
xor
and
dec
or
push
dec
aam
inc
adc
dec
mov
dec
push
mov
ds
sti
jbe
push
iret
mov
loopne
jle
fstps
mov
jne
in
call
push
rorl
daa
xor
mov
outsl
sti
sbb
pop
xchg
fstl
divb
xchg
sbb
mov
out
jno
sub
cmp
iret
mov
ss
fiaddl
push
test
adc
adc
lcall
xchg
pop
push
call
mov
out
sahf
test
idivb
add
xchg
or
cmc
mov
cmp
loop
jb
sub
leave
cmpsb
or
insl
ja
cld
and
and
and
push
add
xlat
mov
add
imul
fdivrl
dec
pop
imul
daa
add
add
inc
ret
in
mov
add
mov
mov
push
xchg
fcmove
ret
push
mov
pushf
pushf
inc
loopne
mov
ds
mov
mov
fsubrl
mov
sub
mov
not
sub
ss
arpl
ret
ds
inc
adc
dec
int
inc
pop
incb
mov
mov
push
into
pusha
push
imul
xor
loope
dec
jbe
int
negb
push
push
lahf
pop
sbb
repnz
js
pop
sbbl
pop
mov
add
mov
cltd
inc
notl
dec
invlpg
inc
dec
dec
test
cli
cmp
pop
aas
js
or
mov
test
int
lds
dec
lret
inc
push
scas
add
je
mov
pop
mov
call
mov
aas
pop
nop
mov
gs
cmp
out
jl
in
push
inc
sarb
add
pop
xor
shrl
daa
inc
pushf
pop
xchg
and
lods
mov
push
or
xor
add
or
add
sub
sbb
mov
adc
das
sbb
xchg
subb
mov
fs
clc
adc
mov
divb
jne
dec
cli
int3
and
fnsave
dec
incl
dec
mov
or
les
jge
je
out
xor
loopne
mov
mov
cmp
outsl
dec
dec
aam
inc
push
pop
je
out
stos
lahf
mov
jo
in
sbbb
mov
jmp
bound
movsb
push
inc
je
fnstcw
fnsave
fwait
je
adcb
shll
adc
pop
xchg
mov
xchg
pushf
ficoms
insb
ret
enter
push
orl
ja
or
pop
sbb
lods
inc
jp
iret
jmp
orb
lods
aam
jg
out
push
test
fildll
add
add
out
aad
les
cmpb
or
jp
cmp
mov
pusha
cwtl
fwait
dec
inc
or
or
dec
out
mov
jns
push
shr
dec
inc
and
cmp
dec
add
cmp
xchg
aaa
pop
repnz
adc
cwtl
cli
mov
inc
pop
lcall
jecxz
std
xlat
insl
mov
pop
lahf
mov
mov
fdivl
add
jmp
jle
sbb
xchg
shr
cmp
xchg
sbb
cltd
mov
sbb
xor
xor
xor
insb
or
mov
xor
pop
pop
cli
frstpm(287
dec
sub
sbb
mov
cmp
test
push
into
mov
pop
std
inc
pop
or
not
fidivrl
pop
and
in
ficomps
cld
dec
push
mov
mov
scas
repz
push
cmpsl
sbb
jg
pop
aad
pop
lods
xchg
mov
push
add
daa
add
add
mov
jge
lods
shrl
jne
or
rclb
ss
stc
inc
xor
pop
call
add
fsubrl
fstpt
xor
adc
mov
test
push
insl
mov
mov
jle
sbb
jae
data16
cmpl
addr16
arpl
pop
popf
xorb
scas
add
cmp
fisttpll
dec
in
shrb
xchg
mov
lahf
in
xor
and
repnz
outsb
push
push
push
lods
dec
push
and
dec
nop
lret
stc
fisttps
ret
mov
sub
dec
pop
push
xchg
jnp
add
jp
insl
add
addl
lret
xor
test
bound
pop
push
aaa
fdecstp
xlat
mov
inc
test
xchg
ret
outsb
fsts
clc
push
loopne
es
dec
mov
test
jae
pop
xor
cmp
cmp
xchg
ja
jg
mov
xor
pop
sbbb
and
mov
xor
sub
push
xchg
xchg
test
shll
into
bound
out
xchg
inc
clc
in
in
jb
cmpsl
test
je
aad
lods
mov
aad
lock
nop
xchg
xchg
and
out
jb
stos
les
sbb
jne
push
mov
inc
push
sbb
push
in
adc
imul
cmp
dec
lret
mov
sub
dec
and
or
dec
inc
dec
pop
jp
add
fwait
nop
push
inc
sub
ficoms
or
into
loope
mov
xchg
or
fdivp
jmp
insb
lods
adc
dec
jmp
iret
decb
shrl
loop
cmp
fdivrs
mov
stos
loope
or
add
mov
pop
aad
imul
pop
std
das
xchg
dec
pop
xor
gs
pop
jb
stc
insl
xchg
sub
sbb
mov
xlat
in
adc
out
dec
xchg
outsb
mov
je
popf
cltd
sahf
inc
dec
jno
push
shrl
rcrl
xor
js
stos
push
inc
and
mov
sti
aaa
rclb
sbb
pushf
fcom
sub
int3
adc
pop
jle
xchg
scas
rcll
insb
dec
xchg
pusha
lods
pop
sub
or
aad
cmp
nop
adc
outsl
ss
and
jp
sahf
daa
dec
in
jp
in
push
out
mov
sub
aaa
ss
lods
mov
imul
pop
sub
mov
push
cmp
repnz
out
pusha
jp
dec
xor
rcrl
dec
jns
push
popf
xor
stos
xchg
mov
sbb
aas
xor
mov
add
xor
dec
lret
inc
inc
loop
sub
push
sbb
leave
pushf
dec
inc
mov
movsl
out
sub
ret
leave
cmpsb
xchg
add
imul
int3
lea
movsb
cmc
fistpll
stc
cmpsl
mov
loopne
push
sub
add
daa
add
add
imul
cmp
scas
or
lcall
int
fstp
shll
lods
out
repz
push
out
dec
test
add
jmp
stc
aaa
add
mov
pop
imul
cmp
in
cmpsb
push
in
seta
xchg
xchg
mov
ja
mov
lcall
push
dec
aam
add
inc
and
jmp
cwtl
mov
cmpsb
jbe
push
mov
add
cmpb
dec
xlat
enter
call
dec
xchg
movsb
push
fildll
loop
adc
shr
mov
dec
push
aad
push
repz
lcall
jl
addl
sbb
mov
pop
lret
rolb
pop
cmp
adc
ja
xchg
xchg
and
xchg
pop
test
lods
popf
push
test
movsl
out
fidivrl
jno
out
or
cmp
pop
xor
movb
scas
sbb
ret
imul
dec
adc
xor
fisubrs
sbb
outsl
xchg
xor
cmp
bound
mov
test
dec
ljmp
imul
xor
or
and
fidivrs
mov
mov
dec
cli
loop
fsubl
cmpsl
in
fstl
jmp
pop
push
push
dec
lods
out
pop
lea
push
add
cwtl
stc
mov
or
or
mov
pushf
push
adc
dec
outsl
sbb
popf
jmp
mov
or
out
inc
dec
xor
xchg
xchg
push
lods
out
mov
imul
mov
fnsave
sbbb
outsb
jp
out
inc
xchg
sahf
mov
pop
and
lock
fnstenv
fiadds
jne
adc
in
xorb
aas
cmpl
xor
stos
jno
mov
cmp
test
jne
mov
fcoml
in
ss
insl
cmp
mov
popf
mov
sbb
adc
insb
cmp
xchg
fmuls
mov
and
ror
cmpsb
jle
lret
sbb
arpl
add
outsb
mov
into
les
jp
pop
adc
and
cmc
pop
mov
cmc
sub
cmp
shr
cmpsb
xor
pop
xchg
cmp
push
icebp
cmp
ljmp
xlat
cmp
or
sub
jge
outsb
cmpsl
mov
in
sbb
jo
jmp
adc
xor
push
xor
sub
pop
mov
mov
pop
rcrl
je
outsb
inc
repz
repnz
aaa
mov
jmp
sub
inc
cld
dec
add
jnp
pop
ljmp
orb
add
add
test
orl
icebp
xor
test
add
push
movsb
lea
lods
and
cmp
sbb
jbe
add
daa
add
add
xchg
test
sbb
inc
push
nop
add
inc
pop
movsb
mov
adc
aad
enter
and
push
inc
sbb
int3
add
mov
adc
cli
pop
and
push
cmp
pop
ret
cmovae
adc
sti
xor
test
push
lods
push
push
imul
pop
insl
mov
pop
dec
mov
push
pop
push
mov
push
enter
neg
call
faddl
xor
dec
or
mov
data16
add
pop
adc
pop
jb
testb
sarl
mov
push
mov
aad
adc
data16
and
pusha
adcb
and
sbb
ja
cmpsb
add
mov
or
fstpl
jle
xor
xor
cmp
ss
imul
fstl
loop
and
ds
addr16
cmpsl
push
xor
inc
pushf
negb
mov
popf
idivb
xchg
push
stos
sbb
or
in
mov
ds
xor
jl
adc
imul
in
push
add
mov
ss
inc
popf
js
inc
mov
es
inc
mov
dec
cmp
inc
xor
or
lret
cli
sbb
fs
push
push
or
fs
inc
push
mov
test
pop
sbb
repnz
or
push
push
inc
cmc
push
sahf
adcl
push
inc
and
loope
arpl
cmp
xor
icebp
orb
lahf
sub
iret
aas
daa
mov
imul
or
jo
and
ficoml
clc
loop
iret
arpl
inc
jns
ss
or
ljmp
stc
dec
jp
mov
shll
xor
xchg
lods
loop
and
fdivr
lcall
mov
jmp
cmp
lds
stos
shl
sub
mov
fimuls
xchg
mov
mov
das
movsb
jo
jge
cmp
jge
lahf
and
inc
lods
addr16
sahf
test
mov
or
test
mov
call
add
jne
cmp
gs
mov
xor
cmc
mov
pop
andl
push
movsb
outsl
pop
mov
lahf
shll
push
or
shlb
pop
add
or
lds
lcall
lahf
popf
jo
xchg
dec
sub
and
movsl
cmpsl
xor
mov
xor
fs
and
into
test
es
fcompl
cs
aam
shlb
or
loope
mov
out
add
lcall
out
insb
xchg
jmp
sti
push
mov
subb
flds
xchg
xor
dec
jl
sub
movsb
adc
mov
mov
cmpsl
nop
pusha
add
test
mov
push
popf
pop
add
daa
add
add
orb
repnz
aas
cmpsl
aaa
push
ret
iret
lods
or
fwait
leave
cli
mov
adc
int
out
mov
std
jp
or
fwait
cld
mov
shrl
mov
movsl
insb
dec
add
add
std
movsb
test
ljmp
dec
arpl
lods
or
add
inc
and
xor
or
verr
cmp
enter
push
inc
mov
xchg
pop
adc
movsb
adc
aam
dec
not
iret
xchg
pop
jge
pop
jne
dec
sti
adc
out
dec
lret
ljmp
test
lcall
aad
flds
lds
mov
call
pop
dec
dec
ss
push
mov
mov
js
push
sbb
push
rolb
mov
clc
lcall
out
movsl
sub
cmc
dec
or
add
pop
sub
jns
enter
ja
jno
pop
xor
mov
inc
into
in
jp
xor
data16
repnz
mov
les
leave
mov
jg
pop
aas
jge
xor
xchg
call
and
pushf
mov
pop
xor
inc
idivb
inc
fdivrs
in
enter
das
imul
fists
cmpsb
rep
idiv
shlb
push
and
push
or
in
jg
mov
test
jae
out
das
loope
ds
jmp
lcall
stos
pop
cwtl
shl
out
leave
stos
jns
xchg
lcall
mov
subl
stos
ljmp
fisttpll
adc
dec
out
cmc
imul
dec
or
pop
cmp
lret
repnz
mov
ret
mov
out
pop
imull
repz
and
xchg
and
test
push
jnp
mov
lock
test
out
pop
xor
mov
hlt
push
or
lods
mov
push
jl
iret
ja
mov
cmovl
cmp
enter
ret
lock
xlat
aam
or
icebp
and
les
in
popf
mov
add
xchg
push
sbb
inc
xor
jo
fs
stc
inc
sub
ljmp
sti
popa
in
nop
or
mov
dec
or
pushf
add
mov
add
shrb
stos
lods
cld
xchg
shll
mov
imul
movsb
dec
repz
add
data16
dec
push
addr16
fisubs
lock
pop
push
add
lcall
ret
pop
ss
out
fidivrs
adc
adc
sarl
ss
xchg
dec
jbe
mov
test
or
cmp
gs
imul
imul
push
cli
add
sub
icebp
sub
dec
nop
iret
xor
test
xchg
std
jg
in
pop
dec
and
daa
add
add
stos
pop
pop
xchg
loopne
stos
adc
or
jmp
sbb
in
mov
xchg
adc
frstor
xor
dec
lret
ja
shrl
mov
jo
insl
xlat
les
das
adc
cmpsb
loope
xor
fsubl
dec
in
jne
push
into
js
cld
test
leave
or
leave
loope
fiaddl
add
push
std
jbe
xor
repz
js
or
pop
mov
pop
divb
lock
fsubs
adc
inc
gs
pop
mov
je
mov
out
out
push
sbb
fwait
pop
sub
and
out
mov
das
ficompl
pop
cmp
inc
out
jae
mov
ret
or
sarb
push
sahf
icebp
dec
scas
cwtl
lret
enter
mov
xchg
rcrb
ss
pop
add
sub
cmc
push
inc
and
jno
rorb
push
idivl
out
shrl
sbb
cltd
xchg
enter
adcb
mov
js
inc
adc
nop
and
cld
hlt
push
lahf
dec
and
dec
pop
je
or
int3
js
xor
jl
jae
sbb
es
xchg
sbb
aam
ljmp
push
fsubr
sub
xchg
push
and
xor
inc
cli
inc
mov
adc
add
lret
jo
jb
push
mov
repnz
mull
hlt
cmp
mov
daa
into
fisubs
adcb
fsubrs
mov
pop
mov
ja
addr16
flds
adc
arpl
dec
sbb
mov
sub
imul
cmp
pop
jae
les
jge
in
sbb
roll
mov
mov
jl
push
roll
push
xchg
jge
add
adc
mov
mov
popa
push
sti
adc
js
inc
mov
mov
adc
pop
dec
mov
xor
orb
cwtl
fnstenv
xchg
jecxz
mov
cmpsl
xchg
movsl
fwait
movsl
pop
add
pop
and
and
pop
and
out
cli
xor
ret
shlb
stos
int3
and
icebp
aaa
mov
dec
push
jp
pop
out
repz
xchg
and
add
sbb
xchg
dec
lcall
jp
mov
outsb
fmull
scas
xor
icebp
mov
or
lahf
ljmp
jo
repnz
inc
ja
sub
xor
or
loopne
orb
push
stc
loope
notl
dec
ja
adc
inc
loope
sub
xchg
or
mov
pop
mov
adc
xchg
inc
ret
fldl
cmp
add
sub
push
add
cmpb
or
in
push
inc
aas
or
mov
idiv
iret
std
mov
pop
jmp
add
daa
add
add
fists
dec
pop
popf
add
sbbl
lcall
xlat
cld
lahf
adc
sub
sti
and
pushf
rorb
mov
clc
or
clc
sub
rclb
ds
push
les
icebp
push
push
repz
andb
stc
out
xchg
jle
ret
lahf
pushf
adc
std
scas
lock
ss
mov
scas
fdivrl
pop
dec
dec
sub
or
mov
adc
dec
and
in
loopne
jbe
sub
jnp
sbbb
adc
cmpl
lods
pop
in
cmp
add
loop
outsl
ljmp
ljmp
pop
push
push
sarb
adc
adc
xor
mov
test
out
arpl
lcall
test
aam
and
lock
cmp
dec
outsb
xorl
cmpsl
test
and
xor
roll
mov
loope
test
dec
inc
iret
popl
pop
daa
jns,pn
xchg
out
mov
stos
scas
mov
icebp
cs
insl
or
filds
in
cmp
out
outsl
mov
aas
lods
cmpsb
cmp
push
out
jo
rorb
mov
add
dec
sbb
in
pop
stos
sbb
fwait
stos
fisubrs
loope
pop
rclb
sbb
subl
pop
inc
popa
divl
sub
inc
mov
mull
iret
dec
sbbb
test
loope
push
in
push
or
sub
clc
outsb
movsl
xchg
mov
testb
fildll
pusha
jnp
adc
std
es
fcmovb
sahf
aam
pop
out
pusha
xor
jecxz
xor
cld
imul
decb
outsb
fsts
paddq
or
leave
cmp
dec
repz
mov
pop
ljmp
push
data16
scas
dec
sar
cld
push
xchg
jge
test
and
out
mov
xchg
jmp
daa
xor
push
and
lds
lret
add
std
add
push
xchg
sahf
or
scas
in
andl
jg
sub
mov
fisttps
inc
xchg
imul
ficomps
imul
lods
pop
and
inc
dec
sub
out
imul
sti
hlt
push
or
sub
dec
std
adc
push
lret
mov
fsubrl
dec
add
push
mov
mov
cmp
daa
enter
call
and
orl
call
pusha
fisubrs
pop
jl
test
jns
ret
mov
sti
cmp
push
mov
mov
pop
sbb
cmp
sub
jmp
ss
mov
jbe
dec
jns
pop
pop
cli
fs
lcall
mov
push
daa
sbb
pop
cmc
sti
cwtl
jl
mov
xchg
repz
cmpb
jge
pushf
ds
hlt
xor
enter
inc
add
ret
mov
out
mov
jns
add
daa
add
add
xor
cmc
outsl
popf
inc
adc
xchg
jno
adc
fmul
mov
setns
fst
jl
pop
repnz
scas
std
mov
scas
bound
pop
mov
xor
rclb
ljmp
lret
cld
jae
mov
scas
pop
fidivl
xorl
dec
ficoml
inc
inc
mov
mov
mov
inc
cmp
sbb
lds
sub
mull
and
sbb
insl
mov
imul
jns
stc
xchg
and
fs
dec
mov
mov
push
xor
xchg
loope
xchg
pop
dec
sbb
stos
imul
fnstenv
jp
lret
shrl
lcall
icebp
lahf
outsl
fiaddl
imul
and
cltd
in
insl
dec
jmp
out
scas
cmp
fwait
iret
push
mov
insl
adc
pop
jno
and
pushf
dec
call
dec
ss
in
imul
push
dec
lret
adc
cmc
mov
shll
jge
mul
adc
or
xchg
roll
js
mov
repz
sub
mov
xchg
ds
dec
out
adc
push
push
out
out
dec
cld
xchg
mov
add
lods
cli
dec
lods
xor
jle
xchg
sbb
mov
out
push
aad
pusha
mov
and
lcall
movsb
jo
sbb
imul
rcll
dec
dec
arpl
mov
and
jl
iret
fmull
stos
mov
insl
testb
icebp
cmp
neg
popf
push
jp
inc
popl
push
hlt
mov
adc
jae
stc
push
mov
cmp
shr
popa
jb
aaa
sub
outsl
popf
cmp
xchg
push
add
es
sbb
ret
jp
inc
push
and
cmc
push
and
dec
add
imul
jns
mov
out
imulb
push
fcmovne
jnp
jp
pop
mov
sbb
aas
sub
push
cmp
les
enter
mov
lcall
sahf
scas
inc
movsl
sub
mov
inc
shlb
add
pushl
jg
ljmp
aam
dec
fdivs
xbegin
mov
fistpll
push
stc
ret
lds
fidivl
es
shlb
mov
out
sub
jns
movsl
jns
lea
adc
jae
xor
imul
into
push
orl
stc
xor
push
cli
xor
push
cld
arpl
dec
sub
repnz
or
decl
sahf
cli
fisubs
sub
pushf
rclb
pop
lahf
add
cmp
stos
fscale
mov
jl
lahf
pop
sbb
push
aam
lcall
xchg
add
lahf
mov
enter
xchg
nop
movsb
idivl
cmpsb
add
push
jle
xlat
outsl
mov
lcall
add
daa
add
add
stos
cmpsl
loop
xor
mov
xchg
sahf
aam
fldz
aam
add
jnp
aam
mov
xchg
mov
mov
std
popa
xor
xchg
mov
fstl
sub
mov
or
and
inc
sbb
lods
dec
xchg
cmpsl
sbb
bound
xor
mov
dec
out
lret
jp
out
mov
movsb
aaa
repnz
aaa
pop
mov
inc
clc
xchg
arpl
jnp
and
mov
jge
popa
jnp
dec
popa
push
push
push
addr16
js
jb
sub
cmc
dec
sbb
xchg
cmp
pop
shrb
icebp
mov
stos
cmp
outsl
pop
aam
mov
or
in
lds
insl
pop
xchg
or
xchg
xlat
call
popf
std
xchg
mov
adc
repnz
int
pop
add
lret
mov
sub
scas
test
xchg
ss
dec
push
jo
pop
cmp
adc
jge
push
or
lahf
xlat
jne
ficoml
jno
mov
inc
jnp
cmc
icebp
mov
notb
adc
cmc
xlat
dec
mov
mov
pop
fiaddl
adc
daa
cwtl
nop
addr16
xchg
or
repz
sub
test
lret
jle
add
mov
sub
out
jo
sub
xchg
int3
iret
sti
or
cmc
dec
add
stos
jp
xchg
sti
sbb
lods
ljmp
push
test
mov
enter
jle
in
shlb
or
dec
lock
mov
pop
mov
and
push
iret
jge
fbstp
outsb
mov
xchg
leave
jns
rcr
sbb
inc
rolb
add
das
mov
sti
push
loop
movsb
dec
std
fcoms
ja
mov
push
insl
sbb
sub
cmp
pop
nop
and
sub
hlt
pop
std
mov
cs
inc
roll
scas
jnp
rcl
leave
outsb
push
in
cmpsl
insl
mov
mov
and
push
mov
and
sahf
dec
sbb
iret
push
jnp
cmp
aaa
mov
outsb
xlat
mov
xchg
jb
cmp
ljmp
push
into
jne
xchg
inc
dec
jne
lret
out
add
xor
push
push
xlat
xor
adc
inc
dec
sub
and
dec
jns
scas
stc
mov
adc
sbb
push
xchg
push
jne
lods
adc
arpl
pop
jl
xchg
dec
jp
lret
mov
das
idivl
rol
push
call
outsb
push
fstpt
mov
imul
and
sbb
popf
xchg
jmp
daa
push
test
dec
push
pop
outsl
xor
dec
shrl
dec
cmpsb
pop
int3
imul
insb
mov
mov
andnps
inc
rorl
call
push
add
rorl
mov
addb
lret
bound
inc
inc
andb
out
jbe
sbb
inc
sub
adc
or
pop
out
repz
in
xor
imul
daa
add
add
ds
cmp
bound
mov
pop
cmpsl
ret
cmc
into
and
stc
push
call
push
inc
lods
data16
jecxz
mov
imul
inc
cmp
rclb
das
inc
xchg
movsb
decb
cwtl
outsl
in
call
push
add
fistpl
addr16
scas
lret
arpl
addr16
rorl
in
ja
scas
or
imul
mov
dec
lock
mov
or
inc
pushf
pop
clc
out
mov
adc
fdivrl
push
insb
sarb
shl
mov
repz
inc
flds
stos
cmc
dec
sub
push
mov
movsl
faddl
in
dec
scas
mov
push
xor
scas
and
push
ljmp
or
orb
out
push
loope
stos
insl
cmp
inc
push
cmp
dec
or
dec
inc
add
sbb
mov
insb
es
gs
jb
or
jge
inc
js
sbb
or
mov
push
ja
xlat
cli
test
insl
mov
pop
push
dec
inc
rorl
stc
push
xor
test
mov
arpl
fldenv
in
mov
pop
xchg
loopne
mov
dec
dec
in
jmp
mov
jge
dec
cwtl
jmp
test
or
xor
push
push
inc
lds
push
movsb
adc
fsubrl
shl
inc
and
gs
pop
cmp
lret
inc
dec
test
cmpsl
cmpsl
sub
clc
js
leave
repnz
test
ret
mov
test
mov
lods
pop
in
pop
sub
mov
in
out
test
lahf
js
fdivrs
hlt
dec
jae
inc
cmpsb
inc
outsb
xchg
sbb
mov
pop
cmp
fistps
popf
cltd
xor
scas
xchg
mov
in
mov
ja
jp
xor
inc
mov
inc
pushf
mov
jmp
call
pop
xor
inc
pop
sbb
cmp
psraw
in
jmp
fimuls
out
add
mov
int3
dec
popa
push
test
push
stos
in
dec
out
adc
mov
mov
cmp
jb
dec
outsl
pop
push
cmp
mov
mov
in
sub
stos
sbb
rcrl
xchg
lock
lahf
loope
inc
cltd
arpl
scas
sarl
aas
lret
pop
sti
push
mov
rol
lods
notl
jno
das
rolb
mov
mov
mov
mov
mov
lret
or
mov
ja,pt
mull
gs
mov
jmp
mov
test
sbb
inc
test
in
clc
out
inc
in
lock
fidivs
cmpsb
xchg
lock
cmpsl
jle
mov
aas
mov
test
fwait
or
aam
xchg
adc
aad
push
add
xchg
insl
mov
aam
inc
fdivs
outsb
add
daa
add
add
leave
lahf
cmp
into
stos
inc
scas
cwtl
inc
mov
popf
pop
in
or
cmp
inc
and
frstor
xor
adc
jbe
mov
rclb
dec
jb
leave
and
push
les
popw
shl
and
mov
jo
int3
ja
rcrl
xchg
mov
test
push
push
adc
add
test
xchg
fnstsw
adc
std
loop
cmpsb
pop
cmpsb
mov
ja
jnp
in
fildl
push
xor
jo
mov
loopne
hlt
icebp
loopne
lret
jge
xchg
int
lret
pusha
jns
int
lret
test
add
push
fstpt
jmp
subb
movsl
xchg
push
mov
pop
cld
add
sbb
push
jl
push
xchg
arpl
cmp
sbb
es
iret
in
dec
fwait
pop
push
jg
adc
jp
mov
lea
or
or
mov
sti
inc
pop
jae
popa
daa
and
fildll
mov
stc
sub
fcmove
sbb
mov
push
std
sbb
and
inc
dec
adc
aas
mov
cmp
shll
in
out
dec
lret
or
xor
int
dec
pop
jae
adc
test
push
out
lods
push
jge
rorl
sub
movsb
add
cwtl
jne
movsb
lahf
loope
pop
jmp
dec
shrl
mov
cld
sbb
xchg
cmpsb
mov
inc
mov
out
iret
data16
jl
push
js
xchg
jne
mov
cmpsl
mov
adc
pop
scas
pop
orl
mov
jp
add
cmp
insb
push
testb
mov
jns
jne
xor
insb
jbe
xchg
xchg
cmp
rep
int3
lahf
and
add
and
inc
cltd
shlb
in
lods
in
adc
or
test
call
dec
xchg
sbb
mov
or
out
lret
scas
sbb
jg
out
jle
inc
adc
dec
jl
or
stc
cli
outsb
fadds
loopne
rcl
cmp
push
sbb
out
jg
add
pop
adc
mov
jne
cld
sub
mov
cmpsl
xchg
lds
ret
mov
lea
mov
pop
and
imul
loopne
xor
scas
xchg
sub
test
adc
pop
lahf
push
rcrl
sti
mov
cmp
mov
push
sub
and
iret
lods
xchg
int3
sub
cltd
cmpsb
popa
jbe
add
inc
add
xor
addr16
or
orb
cmc
push
stc
int3
loopne
addb
bound
sbb
xlat
mov
push
mov
mov
jg
pop
jo
icebp
push
aam
lcall
mov
cmc
or
jle
fwait
in
aaa
movsb
in
stos
mov
push
adc
gs
push
pop
icebp
jl
jmp
repz
mov
add
repz
add
ja
idiv
pop
out
dec
mulb
mov
jno
add
add
add
orl
repz
jne
es
adc
cmc
pop
and
in
and
cmp
mov
inc
lea
iret
xor
repz
in
imul
jnp
outsb
inc
out
mov
adc
or
repz
aas
mov
cltd
div
movsb
sbb
call
and
in
xorl
mov
fwait
shrb
or
fcmovnbe
leave
adc
fstps
sbbb
sub
mov
pop
cmp
ret
mov
data16
in
inc
adc
test
testb
out
sub
xlat
push
xchg
call
fstpl
adc
adc
pop
loop
push
jb
jno
or
mov
js
leave
es
adc
mov
ror
stos
push
push
rolb
orl
sbb
cmp
xchg
mov
in
mov
icebp
enter
fistpll
xor
movsb
clc
push
jg
push
scas
mov
cmp
scas
or
stos
pop
popf
or
fisubrs
mov
ret
xchg
cmp
adc
jecxz
mov
sbb
jmp
dec
mov
and
mov
or
xchg
cwtl
test
pop
cltd
cwtl
cmp
xor
cwtl
jle
mov
pop
push
push
and
dec
cld
clc
in
and
pop
fs
lods
rclb
fnstsw
insl
push
or
push
cmp
cmp
mov
nop
mov
xchg
and
aaa
xor
addb
imul
int3
or
inc
and
iret
or
sarl
add
xor
jmp
shlb
jae
enter
mov
hlt
aaa
mov
sub
xor
ja
push
lods
sub
mov
add
cmp
out
mov
ja
hlt
and
pop
and
xlat
pop
mov
jp
rolb
lret
mov
mov
push
mov
outsl
fst
pop
push
lret
std
add
outsl
dec
sbb
cmpb
sarb
shrl
das
popf
adc
and
aam
aad
dec
inc
xchg
imul
mov
inc
lcall
dec
mov
je
les
mov
jb
scas
ficompl
push
out
popa
dec
push
call
adc
dec
mov
mov
leave
mov
xchg
stos
xorb
or
mov
outsb
pop
fiaddl
ds
cmp
adc
into
std
clc
leave
cmpsl
aaa
test
sbb
mov
shll
pop
das
mov
ds
sub
xor
pop
adc
scas
cmp
or
mov
fistps
or
dec
and
dec
add
adc
cli
out
andl
mov
mov
mov
and
rclb
les
lret
mov
pop
jecxz
sti
mov
test
push
iret
aad
add
daa
add
add
in
pop
xorl
stc
outsb
mov
and
and
cmp
lea
scas
lret
xor
mov
mov
sub
push
icebp
popf
xchg
cmp
adc
pop
mov
push
test
stc
sarl
std
lret
loop
or
lods
fldt
xor
xchg
pop
hlt
roll
push
sahf
xchg
movsl
inc
inc
movsb
cli
push
fldl
jge
mov
mov
pop
sbb
loop
xchg
jbe
loope
imul
ret
dec
xchg
test
add
ds
popf
pushf
add
mov
neg
aaa
dec
push
xchg
jns
sbb
aad
je
cmpsb
lret
mov
push
push
cmp
jne
mov
or
or
das
cmpsl
mov
xor
jg
bound
mov
lret
lahf
pop
fs
mov
dec
push
lds
push
inc
push
ljmp
aam
inc
test
jb
cmpsl
test
lret
loopne
mov
lahf
mov
test
add
cld
insl
push
shrl
sub
xchg
out
sbb
pop
fistpll
push
in
jb
jb
mov
andl
mov
fsincos
outsl
ret
jnp
cmp
sahf
or
fadds
add
xchg
jno
dec
xor
dec
int3
dec
mov
sbb
fld
or
mov
adc
jne
mov
jnp
in
clc
or
inc
flds
jno
fcoml
inc
mov
mov
push
mov
xchg
add
mov
lahf
push
mov
stos
xor
arpl
push
jg
jecxz
bound
mov
mov
jo
mov
cmp
and
sbb
rcr
and
adc
lea
cwtl
push
mov
scas
push
push
mov
pop
push
sti
cmp
les
je
and
sahf
repnz
mov
push
inc
pushf
jns
push
add
jle
and
mov
jmp
xchg
pop
xchg
jmp
cmpsl
adc
add
imul
xor
mov
and
adc
mov
mov
fdivrs
insl
sub
lods
movsl
fxch
mov
int
xchg
cld
dec
mov
mov
jp
shlb
imul
push
test
mov
mov
fdivl
fidivl
sbb
mov
aam
xor
pop
or
push
push
cmp
call
stos
int
dec
es
sbb
dec
adc
aaa
iret
xchg
out
mov
loope
movsb
mov
cmpsl
stos
mov
fiadds
cwtl
adc
test
hlt
sbb
pop
xor
scas
loopne
insb
cmpsb
popf
movsl
cli
jg
in
xor
sahf
xor
mov
cld
ja
add
add
add
orb
shrl
sar
shlb
test
pop
cmpsl
mov
mov
adc
inc
inc
test
lods
dec
sub
mov
fs
rcrb
jnp
cmc
jp
xchg
mov
rol
or
cltd
pop
ficoms
dec
das
and
and
cmp
mov
sub
cwtl
and
jne,pn
mov
popf
stos
inc
sbb
sbb
add
cmp
xchg
and
scas
in
ret
dec
xchg
sub
ja
pop
inc
inc
dec
int
icebp
inc
clc
cmpsb
lret
call
and
and
iret
cmc
and
fs
sti
mov
jge
test
ret
and
xchg
int
fsubs
lahf
int3
not
cld
in
mov
das
shlb
push
jmp
shlb
popf
sub
xor
aam
jecxz
push
pop
sbb
lods
cld
pop
les
mov
cmp
movsl
das
std
scas
rcrb
int
lret
ret
fsubl
jne
dec
and
popa
push
test
int
xchg
pop
dec
fs
insb
rcrb
andb
jmp
cmp
and
push
cli
hlt
pop
inc
movsb
xor
ffree
pusha
pop
sarb
and
rol
sbb
out
popf
js
push
mov
ss
inc
jne
xor
cltd
mov
cwtl
pop
mov
pop
fmuls
ret
int
adc
mov
inc
aam
fstps
leave
adc
push
pop
push
or
call
push
repnz
test
fs
popf
stos
add
jge
xor
mov
imull
push
cs
add
andb
pop
in
add
sbb
test
hlt
cmpsb
sbb
ror
xchg
shll
mov
cli
and
dec
sti
add
or
pop
mov
dec
adc
rorb
out
add
in
aam
adc
iret
int
pop
push
xchg
mov
adc
mov
popf
loopne
lds
mov
push
outsb
filds
mov
push
ss
stc
arpl
rcrl
dec
cmp
in
arpl
insb
aad
mov
adc
adc
ficoms
or
cld
jmp
scas
jns
test
jno
pushf
mov
mov
test
push
sub
loope
sbb
mov
inc
scas
and
mov
add
add
js
jle
lret
rol
xchg
xor
adc
or
sbb
insb
xor
idiv
jmp
loopnew
jmp
xchg
add
cli
shll
andb
dec
mov
movsl
inc
out
mov
leave
inc
mov
push
dec
mov
loope
dec
sahf
scas
pop
mulb
xlat
jle
fdivr
dec
dec
add
out
pop
insl
lods
mov
sub
stc
std
in
mov
mov
std
pop
xor
inc
cltd
xchg
daa
add
add
shll
and
iret
sub
sbb
jmp
pop
push
cltd
xchg
jbe
loop
insb
jns
aam
hlt
xorb
into
jg
rcr
dec
andl
or
and
jl
sub
push
ljmp
subb
mulb
loopne
jno
out
lret
std
dec
lret
insl
jle
roll
lds
cmp
test
ret
out
jne
mov
push
dec
pushf
xchg
stc
pop
jae
not
aam
adc
int3
jo
sbb
sub
dec
or
mov
fs
mov
in
xchg
sbb
mov
loopne
push
pop
mov
dec
push
sub
psrld
sub
xor
mov
orb
in
sbb
loopne
and
inc
add
scas
and
ficoml
addr16
data16
movsl
dec
or
push
arpl
jg
sti
pusha
pop
lahf
aaa
or
inc
test
pushf
insb
jae
xchg
aad
pop
inc
sub
out
scas
mov
js
jbe
cli
mov
fildll
sbb
repnz
jnp
stc
test
int3
out
int3
sub
outsl
push
jge
jne
sub
jg
clc
dec
in
dec
jp
dec
adcb
push
ljmp
enter
mov
pop
adc
dec
movsl
in
inc
pop
imul
xorl
and
fsub
hlt
ljmp
js
xor
xor
and
sbb
loope
add
xchg
jecxz
sbb
jp
jmp
jb
mov
xchg
jecxz
test
xor
mov
jmp
fstpt
cmpsl
push
popa
mov
test
lcall
xchg
push
dec
jp
lea
cmpsb
into
xor
testl
adc
sub
loop
mov
repz
cmp
icebp
lock
test
out
xchg
xchg
movsb
leave
scas
movsl
adc
sub
stc
movsb
pop
fcompl
or
cmc
fwait
push
and
or
mov
stos
aad
xchg
add
dec
out
rol
sub
dec
int
iret
shll
mov
dec
test
mov
add
jmp
imul
pop
push
int
and
sub
cltd
dec
dec
mov
popa
adc
test
mov
lods
insl
vpor
insb
xchg
inc
cmp
dec
mov
movsl
call
add
mov
xchg
add
inc
lds
outsl
loopne
and
in
jecxz
outsl
mov
jp
aam
adc
popl
adc
adcb
add
cmpsl
ds
adc
gs
popf
push
jo
aad
repnz
mov
mov
adc
dec
lcall
sub
lahf
aaa
mov
xor
or
add
repnz
out
sub
and
pop
dec
jle
add
add
add
shll
jb
cmp
movsb
std
sub
mov
xchg
push
mov
cld
xor
or
dec
cmp
xchg
mov
and
outsb
and
dec
push
cmp
das
cld
adc
rcrl
xor
fdiv
mov
lock
mov
and
mov
pop
push
add
iret
ja
mov
inc
xchg
fwait
in
rcrl
sbbb
jp
stos
ror
jbe
icebp
mov
inc
movsb
int
std
in
clc
cwtl
aad
pop
dec
popf
jge
bound
push
mov
mov
loop
add
imul
ljmp
in
push
call
hlt
xor
mov
je
leave
xchg
push
shr
imul
test
jb
loop
repz
in
inc
arpl
cld
repz
sub
push
jg
in
mov
pop
xchg
leave
mov
fists
and
push
cmpl
mov
mov
lock
mov
lahf
sub
push
out
test
sti
mov
mov
test
popl
stc
mov
push
cli
push
repz
rsqrtps
pop
insl
jge
lret
pop
lock
stc
mov
push
jmp
flds
mov
aaa
sbb
mov
popa
jae
add
add
cltd
dec
aad
mov
gs
xor
jns
and
sub
or
test
jnp
and
scas
mov
and
rclb
lea
pop
push
sbb
cmovae
sub
xor
sbb
bnd
scas
lahf
mov
xor
sub
dec
inc
inc
mov
inc
pop
or
movsl
push
nop
sub
fbstp
into
ror
mov
aad
and
pop
test
mov
pop
and
test
xor
cli
fdivl
mov
jae
xor
xor
mov
xor
mov
jns
mov
mov
int3
jns
push
ffreep
pop
bound
sbb
and
int
mov
dec
lods
test
sarb
and
dec
jb
ja
jg
outsb
xor
cmpsl
add
arpl
repz
mov
jl
lret
xlat
adc
jg
fstpt
mov
les
imul
fisubrs
das
add
mov
sbb
insb
cmp
sub
test
mov
fwait
mov
xchg
leave
repnz
xor
out
lock
push
repz
outsb
xor
lea
jmp
xchg
por
outsl
inc
mov
or
add
lods
mov
push
andb
pop
pop
adc
int
xor
xchg
jnp
rcrl
shll
lds
hlt
inc
bound
and
adc
stos
mov
int
fs
lds
sbb
loope
cltd
sahf
mov
mov
mov
cmpsl
dec
xlat
and
into
dec
xor
mov
add
popa
data16
rcrl
xor
and
cld
jno
add
daa
add
add
or
ss
jbe
pushw
xchg
xlat
lea
sbb
cmp
jmp
lea
mov
addr16
or
jnp
sub
or
int
jecxz
cmp
inc
or
and
pop
stc
xchg
fnsave
sub
sub
int
push
cs
es
fsubr
aas
mov
xor
repnz
push
cmpsl
or
push
xchg
add
jle
push
loop
dec
int3
cld
cmpsl
test
pushf
and
bound
clc
or
push
enter
cmpsb
pusha
push
ret
mov
fwait
dec
and
push
in
mov
out
push
fsubrl
add
insb
outsb
out
sbb
and
push
mov
pop
shrb
in
xchg
push
in
cld
loop
xor
mov
stos
jmp
lods
ret
daa
sbb
inc
sbb
ret
daa
jo
ret
jno,pt
xchg
cli
add
repz
mov
add
mov
loope
sub
jns
jb
xor
pop
rclb
pop
mov
adc
sbb
lds
and
sub
pop
je
cmp
int3
stos
jbe
dec
mov
or
aad
mov
xchg
adc
in
repnz
lahf
jae
push
mov
mov
decb
out
call
imul
clc
movsb
pop
out
jge
cmc
and
int
shr
int
int3
jnp
aas
dec
xor
dec
lods
lods
xchg
data16
es
pop
std
cmp
rorl
add
sub
mov
add
jne
inc
mov
js
or
cld
mov
das
jb
mov
jle
fs
cmp
dec
lds
push
add
incl
ret
fistps
cmovo
adc
nop
ss
or
jns
mov
jo
ja
loopne
mov
dec
dec
push
or
xchg
pushf
fbstp
ss
mov
outsl
dec
iret
idivl
mov
fsts
fwait
sbbb
cmp
add
dec
mov
sub
lods
scas
int
push
in
inc
insl
pop
jno
ja
stos
arpl
mov
ret
fistpl
adc
or
and
orb
push
sbb
mulb
fdivrl
pop
push
cmc
sbb
dec
cmp
xchg
out
pop
in
mov
jae
mov
call
in
jns
rolb
mov
bound
sbb
pop
loop
sub
push
and
jmp
or
mov
push
adc
mov
adc
add
shl
cmp
mov
mov
rol
movsb
or
and
pop
mov
or
js
inc
frstor
outsb
les
push
subb
pusha
jge
pop
adc
xor
loop
int3
es
xor
adcl
pop
add
sar
or
rcrl
repz
cli
in
jg
loopne
sub
rcrl
add
add
xor
sarb
or
jb
arpl
mov
ficoml
sub
or
and
adcb
shll
adc
push
stos
nop
mov
mov
notl
je
data16
out
fs
fimull
jmp
or
pop
cmp
aas
xchg
sbb
dec
pop
aaa
push
mov
clc
nop
dec
subb
stos
inc
ret
test
mov
pop
mov
jno
lods
sub
movsl
cmp
add
sub
outsl
repnz
pop
adc
xchg
fcomps
mov
xor
fwait
ret
rcrb
pop
push
je
sub
negl
and
pop
or
popa
and
cmc
dec
ss
lret
sbb
pop
adc
xor
mov
pop
scas
jle
mov
loope
mov
fnstenv
inc
cmc
pop
call
shlb
test
loope
lods
jne
jmp
ljmp
xchg
arpl
and
ret
mov
jg
iret
adc
inc
pop
pop
inc
mov
imul
jne
out
roll
cwtl
inc
pop
and
adc
les
cmp
sub
xor
ret
std
mov
fisubs
out
mov
add
hlt
and
pop
and
mov
push
adc
test
fcompl
sub
imul
adc
mov
mov
rorl
les
dec
pushf
into
xor
fiadds
int
rcl
jg
xchg
ljmp
mov
jb
pushf
clc
xchg
testl
dec
mov
or
mov
mov
jmp
fs
mov
lock
out
test
stc
or
and
je
add
testl
and
dec
jg
sub
push
pusha
stos
xor
sub
sarb
stc
repz
sbb
or
or
flds
scas
mulb
loope
or
push
add
lea
std
push
inc
dec
or
adc
or
cmpsb
out
das
inc
fsubs
mov
pop
fisubs
scas
push
ljmp
xchg
adc
movsb
imul
arpl
fbstp
shll
xchg
cmp
xchg
sbb
push
mov
add
in
hlt
sub
shl
cmp
adc
pusha
adc
adc
pop
in
xchg
imul
out
push
xor
mov
push
xchg
cli
ret
scas
cwtl
add
inc
dec
sub
and
lods
push
out
lcall
mov
mov
or
stos
cwtl
sbb
adc
mov
shr
fstpl
pop
xorl
repz
sub
gs
mov
mov
sarb
lods
scas
jle
arpl
test
sub
test
adc
or
shlb
xchg
lcall
cmpsb
and
xchg
add
add
add
cvtdq2ps
subl
rcl
mov
dec
xor
sub
jbe
and
movsb
jo
std
ds
add
jp
or
sbb
adc
mov
ljmp
fimuls
insl
jecxz
fmul
xor
lahf
notl
movsl
popa
push
jno
xor
inc
mov
fistpll
jp
rorb
lods
rcr
xchg
or
into
das
adc
mov
jns
popa
ficompl
addr16
jne
or
or
adc
mov
xchg
cmpsl
stos
pop
adc
jg
xchg
faddl
scas
pop
sub
fldl
push
je
mov
sub
ret
fwait
sti
mov
pusha
shrd
daa
cmp
add
adc
push
aaa
and
rcll
mov
cmpsb
ret
ss
in
cmp
repnz
adc
mov
je
rcll
mov
sysret
dec
lods
std
dec
movsb
ljmp
jl
ret
push
frstor
push
cltd
jle
mov
or
lret
pusha
xchg
sub
xchg
aad
jp
jb
push
addb
std
ljmp
iret
cmp
aam
fs
int3
jmp
scas
andl
push
jl
pop
rcrb
mov
int
imul
std
dec
mov
ret
mov
or
les
and
shrl
xor
sbb
test
mov
gs
push
jl
and
pop
aaa
jae
movsb
mov
push
add
push
mov
jo
and
push
ljmp
and
or
fmuls
or
outsl
add
cmp
adc
cmp
lock
mov
aaa
or
fwait
call
shlb
dec
rcl
imul
test
jg
les
aas
inc
orb
fdivl
sbb
add
sbb
fcmovnu
rcr
xchg
sahf
xchg
lock
add
jecxz
ljmp
mov
dec
mov
into
divl
aam
mov
rol
mov
bound
pop
push
pop
cmp
adc
repnz
dec
jle
pop
test
jecxz
icebp
scas
aad
cmp
je
scas
fucomi
inc
enter
shl
mov
mov
jle
addr16
test
xor
inc
roll
movsb
test
xor
lea
pop
into
mov
sub
lods
call
fs
lods
es
xlat
and
cmp
andb
fadd
test
cs
stos
orb
popfw
sbb
sbb
cmc
cmp
sbb
xor
test
iret
dec
pop
xor
cmovnp
out
cmp
icebp
cmp
add
decl
pand
and
pop
add
popa
ficompl
js
xchg
pop
sbb
out
not
push
fwait
jmp
lahf
ffree
push
mov
mov
sbb
ss
and
and
fnstsw
mov
add
dec
mov
add
add
add
mov
lock
lods
scas
xor
bound
cltd
int3
icebp
jb
out
pop
push
sbb
ja
mov
jle
cwtl
push
dec
xchg
mov
pop
push
mov
add
pop
inc
lcall
xor
add
mov
jo
insb
add
enter
mov
cmp
sbb
negb
xor
or
cmp
negl
bound
xchg
sub
pusha
inc
pop
iret
fildll
ljmp
lcall
and
movsl
dec
push
into
add
mov
sti
imul
iret
pop
in
push
in
or
clc
ljmp
pop
inc
call
dec
cmp
push
xor
add
stos
ds
xchg
cmpsl
mov
xchg
mov
dec
out
movsb
imul
push
jecxz
daa
sahf
jmp
sbbl
les
scas
pop
scas
fidivl
out
dec
out
push
mov
xchg
cmc
test
add
or
jae
mov
insl
mov
pop
shlb
jnp
idivb
push
push
pop
jl
jmp
dec
fucom
mov
adc
mov
ja
xor
nop
pop
mov
push
rclb
dec
dec
sub
das
sti
aaa
push
cld
arpl
sbb
sub
inc
mov
cmp
leave
mov
cmc
mov
fcmovu
mov
inc
sbb
jmp
dec
cmp
pop
int
dec
pop
lods
add
out
mov
test
push
sti
xchg
iret
sti
jno
inc
cmp
xor
jns
push
std
and
cmc
aas
leave
adc
call
push
sub
fbstp
xchg
inc
push
in
mov
nop
push
xor
jns
mov
insb
rolb
mov
shll
mov
lret
dec
xor
cmc
out
cmp
std
es
lahf
call
sbb
dec
mov
divl
pop
sub
mov
mov
sub
jge
jb
push
and
xchg
shlb
pusha
iret
or
ret
xor
or
stos
xor
push
sub
mov
rolw
xor
data16
adc
xor
pusha
adc
mov
enter
inc
shll
jmp
je
divb
lea
pop
lcall
mov
mov
mov
mov
mov
mov
orb
inc
cmp
jns
xlat
jmp
or
rcl
in
pop
or
jp
lods
cvtps2pd
xchg
pusha
xchg
or
test
aad
dec
mov
scas
lock
jmp
shr
ret
pop
rcrl
ja
jge
sbb
or
inc
lds
push
ficoms
pop
pop
adc
cmp
and
push
push
add
inc
mov
and
or
add
add
cmc
sbb
lods
mov
jne
mov
lds
arpl
icebp
add
aam
stc
sub
frstor
and
fstl
inc
mov
add
mov
repnz
mov
adc
mov
int3
mov
jp
adc
adc
ja
jl
popa
loopne
jg
sub
xchg
jne
cmp
push
ret
adc
push
mov
fnstenv
add
pop
pop
jo
dec
mov
icebp
out
lret
cmp
sbb
adc
cmp
pop
fldt
jbe
lcall
scas
dec
sti
pop
mov
and
stos
sbb
mov
push
cmpsb
sub
jne
or
cmp
sbb
scas
or
cltd
pop
adc
xchg
fs
sbb
mov
sbb
or
aad
pop
in
mov
cmpsb
xor
mov
mov
fnstenv
or
leave
clc
pop
pop
jp
dec
arpl
xchg
imul
fwait
push
cwtl
jo
push
and
dec
cwtl
aam
enter
lea
pop
ds
mov
insb
push
out
dec
mov
push
xchg
aam
mov
mov
shll
jp
stos
mov
pop
mov
jmp
loop
xchg
mov
jne
lock
into
inc
sub
or
inc
push
call
cwtl
adc
out
shrl
sahf
mov
lods
adc
in
aam
lea
shrb
std
mov
pop
test
pop
mov
jmp
cltd
test
insb
pusha
or
ds
div
aam
and
mov
test
pushaw
push
sbb
xor
in
and
cld
subl
int3
icebp
imul
fs
xchg
mov
push
push
loope
xor
leave
ret
mov
xchg
lea
roll
cmp
jmp
pusha
movsl
sub
pop
cmp
out
push
bnd
int
lret
jl
mov
xor
xchg
test
jb
push
repnz
aaa
rorb
mov
push
outsb
in
mov
test
or
stc
int
or
xchg
pop
icebp
ds
sub
fsubs
inc
sbb
cmp
sbb
jbe
int3
xchg
movsb
mov
fnstenv
dec
pop
enter
inc
cs
jecxz
shll
js
jmp
pop
jmp
sub
pushl
out
push
stos
cmp
dec
dec
aam
xor
push
daa
andb
fisubl
or
in
popa
test
sti
insb
stc
cli
sti
and
xchg
out
les
aad
sub
adc
jle
sti
jmp
ret
popa
jg
fnstenv
shlb
mov
mov
sub
int3
cmpsl
mov
clc
mov
cmp
jle
xor
call
test
daa
add
add
dec
jno
call
inc
in
or
jle
mov
mov
cld
pop
push
mov
jl
outsl
rolb
test
cld
aad
mov
jns
rclb
jmp
or
jp
clc
cmp
loope
push
inc
cwtl
inc
push
rcrl
dec
and
and
shrb
mov
js
rcrl
cmpsb
push
divb
push
jg
fistpl
mov
adc
mov
xchg
push
xchg
cmp
fimuls
jle
and
lret
sub
xchg
push
cs
xor
cmp
lret
mov
push
pop
mov
sti
call
dec
icebp
mov
push
pop
repz
cmp
mov
imul
cmp
pop
xchg
inc
test
sub
cmc
loop
inc
les
xchg
pop
outsb
adc
out
jne
cs
xchg
test
aad
cli
negb
cmp
mov
mov
les
in
push
loopne
aam
mov
test
scas
int3
dec
xchg
push
and
push
into
movsb
pop
movb
int
out
and
int3
jle
adc
push
and
mov
sti
data16
cld
test
lahf
xor
stc
jo
cmpsb
and
insb
jo
inc
cli
dec
fsubrl
and
xor
and
dec
icebp
pop
lea
movsb
in
inc
inc
or
inc
aam
lods
inc
inc
fldcw
or
pop
and
and
paddsw
inc
sbb
push
shlb
mov
add
sti
and
aas
repz
push
add
cli
xchg
add
pop
cmpsl
lods
push
rcl
mov
fwait
and
cmc
add
fldenv
jb
mov
sti
cltd
movsl
mov
dec
push
push
pushf
cmp
and
mov
cmp
or
mov
add
jmp
addr16
cltd
into
aam
jb
enter
push
pop
ss
ds
je
mov
mov
xchg
mov
push
arpl
push
adc
out
pop
fucomip
jae
loop
mov
xlat
insl
repnz
adc
popf
dec
in
mov
push
aam
fsubrs
xchg
jae
das
mov
sbb
push
mov
cmp
sub
jb
xchg
test
loope
stos
and
das
jb
mov
push
sub
pop
pop
out
add
movsb
add
cltd
xlat
shlb
adc
les
push
data16
iret
cmp
sbb
shll
cmp
aad
jmp
push
test
scas
scas
push
xchg
add
pop
fisttpl
sti
cwtl
mov
mov
insb
mov
xor
sub
inc
in
ds
imul
gs
fsubrp
lahf
ljmp
lods
bound
loop
std
aaa
loopne
mov
out
or
in
jp
fildll
fldenv
pop
push
adc
insb
outsb
jo
add
sbb
out
idivl
mov
orl
add
add
xor
gs
idivb
jno
mov
mov
out
xchg
bound
add
add
or
scas
jmp
cwtl
and
push
jae
cmpsb
xor
push
lret
andb
lds
xor
cmp
inc
sub
push
xor
mov
cmp
mov
cmp
in
dec
cmp
xchg
dec
cltd
mov
aad
mov
cmp
xchg
loopne
inc
sub
mov
pop
add
and
xchg
stos
xchg
nop
push
scas
sbb
push
imul
sub
pop
jnp
fisttpl
out
shl
jno
test
sub
dec
js
pop
lea
shl
clc
dec
xor
push
push
jp
pop
das
push
mov
jo
leave
stc
pop
ss
xor
in
lock
or
push
negl
mov
inc
popf
and
stc
int3
aam
sbb
rcrb
push
in
push
int3
mov
call
into
sub
cmp
test
fisubl
mov
or
mov
mov
sbb
out
fimuls
out
cmp
mull
jle
test
mov
xlat
xor
test
aad
sub
xchg
cmp
fmulp
icebp
loop
jne
cmp
fwait
nop
jo
push
movsb
fldl
daa
and
mov
out
xor
aad
shll
jo
jecxz,pn
push
lock
pop
outsb
pop
pushf
fcoml
dec
push
jle
and
ss
or
jns
lods
xor
cld
out
pop
xor
adc
in
dec
nop
xchg
pop
sbb
push
cld
js
mov
out
cmpsb
dec
ljmp
cld
inc
mov
data16
adc
data16
dec
push
movb
mov
jmp
and
inc
enter
mov
out
fistps
cltd
fdivr
mov
ss
sub
mov
in
fildll
adc
mov
lret
inc
sar
imul
push
clc
xchg
inc
dec
insb
loope
lods
dec
xor
outsl
xlat
or
in
push
movsb
push
dec
push
test
insl
mov
pop
std
add
test
jecxz
scas
cmp
mov
dec
or
jge
loop
xchg
shrl
nop
jecxz
sub
mov
ja
inc
test
mov
pop
add
mov
icebp
xchg
or
mov
decl
push
cmc
cs
inc
call
dec
pop
cs
fdivp
mov
dec
dec
sbb
sbb
int3
divl
scas
loopne
cltd
loope
pop
dec
jb
jno
and
movsl
imul
add
sti
add
push
sti
js
add
addr16
lcall
push
lahf
ficompl
enter
shll
leave
and
add
stos
mov
je
test
in
jp
or
and
dec
testl
fsin
out
gs
test
ret
hlt
adcb
add
dec
sbb
mov
xor
xchg
out
mov
mov
sbb
lret
lea
jae
add
into
sarb
dec
lret
mov
cmp
into
xor
adc
jl
es
xchg
fdiv
sti
notb
mov
dec
filds
rol
xor
mov
das
arpl
mov
or
pushf
loopne
xchg
xchg
pop
inc
sub
and
fcompl
sar
in
jg
outsl
stc
sbb
movsb
rcr
dec
cmp
and
push
std
push
dec
push
mov
dec
inc
sbb
mov
pop
std
mov
mov
mov
lahf
xor
lods
and
and
pop
pop
shr
add
xchg
lock
mov
call
adc
test
push
push
shr
mov
aas
nop
dec
adc
gs
stc
cwtl
enter
scas
jmp
push
jge
add
pop
jns
mov
js
or
icebp
sub
insb
aaa
ja
repz
pop
fwait
sub
mov
push
mov
stc
inc
push
or
add
cmp
sbb
fadds
rclb
das
or
mov
mov
je
ljmp
mov
pop
stc
xrelease
loopne
jmp
cmp
pop
clc
mov
add
mov
pop
aaa
cmp
and
inc
rcll
xchg
cmp
inc
dec
push
jmp
mov
addr16
mov
mov
aaa
repz
dec
jmp
shlb
dec
sti
int
rcr
inc
mov
sub
xor
and
ret
aaa
jbe
add
in
les
xor
mov
hlt
popa
jb
lret
cmp
out
mov
push
hlt
sbb
addl
xchg
xchg
dec
push
int
jge
lods
and
lea
outsb
xor
sbb
cmc
cld
gs
in
push
mov
mov
aas
outsb
xchg
jg
sbb
dec
lods
mov
xor
inc
or
cmp
movsl
xor
or
ss
xor
mov
fs
dec
mov
aas
nop
add
xor
mov
sbb
xlat
mov
icebp
pop
adc
push
hlt
sub
rep
xchg
sbb
dec
aad
popf
or
test
and
add
mov
aad
push
in
xor
adc
fsubs
lods
sub
nop
js
icebp
cmp
or
test
mov
test
inc
mov
inc
pusha
and
arpl
in
mov
push
mov
cmp
les
jmp
insb
fnstcw
data16
inc
arpl
pusha
push
and
dec
adc
movsb
addr16
aam
in
mov
mov
mov
xchg
cwtl
sbb
and
xchg
loop
aas
fxch
jno
dec
inc
loopne
cmp
popf
adc
inc
stos
shll
call
jb
sti
adc
sub
inc
subl
aam
push
stos
or
sbb
fldenv
into
in
ss
cmp
cmc
sbb
cmpl
out
hlt
mov
push
xlat
or
lret
pop
lock
lock
adc
push
aas
pop
mov
roll
cmp
sbb
stc
jns
or
dec
mov
push
mov
out
icebp
pusha
or
shll
or
add
fdivrs
add
pop
ds
mov
pop
fs
int
mov
mov
mov
jg
adc
addb
loopne
and
mov
in
and
pusha
inc
add
shl
lods
mov
cmpsl
sbb
or
inc
test
rclb
inc
ds
mov
jb
sub
test
add
pop
and
push
mov
stos
call
adc
popf
fisubs
mov
cmp
in
lret
std
inc
fdivs
aas
std
mov
dec
push
dec
negl
pop
sub
cmp
sub
mov
inc
fs
pop
mov
inc
or
pop
add
push
nop
sub
in
sub
lahf
icebp
ficoml
jbe
outsb
mov
cmp
xor
mov
and
mov
mov
in
pushf
popf
sbb
adc
dec
sub
stc
movsl
loopne
in
mov
lods
enter
push
mov
movlhps
inc
jle
in
mov
test
cmp
sub
insl
sbbl
jno
jmp
pop
jp
mov
int3
fbstp
add
jge
sbb
add
loope
xchg
aaa
mov
in
and
arpl
inc
test
or
cmp
outsl
or
push
mov
fisubs
push
gs
and
std
inc
clc
push
addr16
fcoml
mov
lds
popa
idivl
jno
outsl
cmp
fcomps
or
clc
leave
inc
inc
xchg
inc
cwtl
jl
cmp
scas
mov
adc
lea
mov
movsl
xchg
and
out
xchg
sahf
sti
or
fsubs
aaa
shl
or
in
scas
sub
loope
mov
fidivrs
sbb
pop
mov
movb
push
jo
jecxz
sbb
and
loope
mov
jle
lret
jecxz
push
into
scas
inc
push
lret
pop
fdivl
inc
xchg
mov
popa
xchg
rcr
pop
jne
mov
leave
dec
mov
mov
shl
adc
cmp
mov
push
out
mov
lcall
and
test
lods
sub
fs
stos
jne
in
cmp
jne
stos
fisttpl
add
push
insb
add
in
fildll
sub
rclb
cmp
imul
or
cmp
stc
and
push
and
xor
mov
add
daa
add
add
jp
test
rcpps
dec
mov
xchg
adc
sub
sub
mov
test
sub
sbb
pop
aas
and
mov
inc
or
adc
cltd
push
pop
orl
arpl
dec
adc
sub
decl
push
inc
loop
pop
lea
cmp
mov
negb
test
mov
jge
out
push
cmp
cld
data16
cld
les
mov
out
pushf
stos
lret
sub
outsb
jge
pop
in
add
xor
add
mov
insb
pop
inc
movsl
lahf
sub
or
data16
imul
sbb
sar
push
repz
jns
mov
je
rcrl
adc
aas
das
inc
fisubrs
pop
mov
cld
adc
mov
into
js
sbb
push
sub
mov
push
dec
mov
pop
popf
xor
or
mov
xchg
ret
inc
push
mov
add
repz
jge
jecxz
push
and
loop
push
pop
and
out
std
lods
mov
or
es
inc
ret
out
movsb
sbb
das
test
mov
aad
add
addb
std
in
cld
and
xor
jl
dec
movsl
sahf
lret
mov
out
xchg
xchg
pop
sub
lcall
popf
inc
jno
sbb
mov
arpl
popa
test
xchg
push
mov
inc
aad
cmpsb
push
out
pop
inc
adc
inc
ss
push
mov
mov
or
mov
or
cs
inc
ds
rclb
push
je
arpl
in
ja
ss
cmp
cmp
dec
mov
lcall
mov
cltd
xchg
add
mov
mov
cwtl
repz
and
repz
aad
or
pop
andl
pop
cs
rcrb
daa
clc
loopne
cli
cmp
aam
insl
cmp
ficomps
inc
push
jle
fadd
sub
jmp
cmp
xchg
dec
push
add
scas
in
xchg
aaa
hlt
outsl
ljmp
outsl
pop
add
mov
ret
jae
test
outsb
out
or
ljmp
lods
cltd
rol
xchg
mov
data16
cli
mov
jb,pn
or
das
push
int
std
pop
mov
jne
lock
adc
les
jecxz
je
cmc
jmp
pop
aam
jle
xor
mov
cmp
cmp
ljmp
xor
ret
ja
xchg
notb
lock
out
out
mov
cwtl
push
int
or
jbe
inc
icebp
call
out
xor
cmp
lret
jne
dec
jbe
in
xchg
adc
iret
pusha
pop
out
adc
or
sub
int
and
jmp
cld
push
fistpll
je
pop
mov
jg
popa
hlt
mov
sti
mull
add
stc
jmp
pushf
xchg
icebp
nop
add
test
es
rcrb
mov
out
shl
xor
cwtl
out
jbe
or
sarb
je
jp
mov
jle
hlt
lcall
sbb
lds
jb
xlat
addr16
out
mov
lods
filds
add
into
pop
cmp
pop
mov
into
nop
bound
pop
push
cmc
imul
jae
pop
scas
xchg
sbb
xor
push
mov
and
pop
lret
movsl
adc
sbb
aam
sbb
lret
mov
adcb
xchg
lret
sub
xchg
push
pushf
pop
mov
lock
jbe
iret
or
inc
xchg
fstpt
inc
inc
dec
dec
in
add
mov
adc
pop
and
push
cmp
lret
repnz
sti
xor
les
adc
les
xor
push
or
incb
sarb
xorl
jo
int
dec
sbb
mov
pop
not
pop
xchg
lock
movsb
jg
mov
out
xor
incb
adc
or
cmc
cmp
insb
fnstcw
mov
ficompl
push
aad
cmpsb
pop
push
repnz
popa
mov
lods
ss
daa
jae
jno
pop
or
repz
sbb
sbb
dec
push
addl
mov
test
es
fs
rol
into
test
pop
pushf
fidivrs
sbb
and
cmp
xchg
fwait
shrb
stc
xor
cmpsl
imul
scas
aam
xor
cmp
mov
jge
rcrb
outsl
push
stos
sbb
inc
pop
push
cmpsl
xor
sbb
or
xor
das
flds
jmp
jmp
sete
data16
fisubrl
dec
push
ljmp
or
push
imul
mov
dec
xor
jmp
sub
ffreep
cld
push
fnstenv
pushf
out
mov
jmp
in
xchg
and
stc
sub
fidivl
adc
xchg
push
loop
jp
fmull
jns
or
cmp
daa
into
xor
cmp
shl
pusha
cmpsb
sub
xorb
xchg
daa
sbb
or
jp
scas
shlb
pop
add
xchg
push
in
xlat
gs
pop
mov
dec
push
imulb
sbb
iret
mov
orb
pop
push
cmp
cmp
cmc
xlat
xor
decl
aam
mov
jecxz
movsl
push
sbb
rcll
and
mov
sti
test
cld
hlt
fisubl
lock
push
cli
xchg
cmp
dec
push
cwtl
std
pop
pop
mov
pop
int3
jmp
ljmp
push
xchg
jge
mov
cmpsb
data16
mov
mov
xchg
push
in
or
add
pusha
jbe
out
fnstsw
push
lds
daa
add
add
in
dec
das
cmp
movsl
das
lea
jmp
stos
jo
or
mov
pop
pop
xor
je
test
xor
push
mov
xor
movsl
cmp
push
test
lock
or
dec
mov
movsl
aas
add
call
add
cwtl
imul
inc
popa
add
cli
mov
or
adc
jne
leave
sti
dec
and
sub
fnsave
sti
dec
jmp
push
jle
es
pop
pop
mov
jbe
sub
ret
pop
js
daa
imul
or
jbe
leave
scas
decb
pop
int
cmp
sti
jl
stos
cmpsl
cmpsl
dec
push
aam
mov
aas
mov
pop
sbb
cmp
mov
sbb
mov
in
fwait
dec
xchg
sahf
add
es
cmpsb
add
fs
jbe
cmp
push
cmpsl
push
lods
pusha
hlt
or
push
jno
scas
xchg
pop
mov
mov
lods
and
out
subl
ret
cmp
lcall
push
pusha
mov
and
xchg
loope
xchg
jo
les
cltd
xchg
push
jne
ss
enter
push
push
dec
push
cltd
cmpsl
push
cmpsb
lods
movsb
dec
rorb
fistl
push
jge
shlb
xor
stos
pop
adc
aam
fmuls
dec
inc
xchg
cmpsl
xchg
jb
sub
insl
in
sub
jbe
lock
jno
xchg
sbbb
roll
inc
jg
push
mov
push
stos
movsb
or
lcall
inc
ret
mov
das
stos
push
pop
mov
gs
lock
inc
cmpsb
stos
xchg
lods
mov
mov
add
ja
jl
cmc
out
int
scas
imul
test
and
jo
in
outsl
add
insl
cmp
out
jecxz
xor
arpl
popfw
mov
mov
sbbl
jo
xchg
imul
xchg
jmp
icebp
mov
xchg
sub
or
add
pop
push
push
sbb
shll
mov
jge
inc
bound
or
pop
push
cwtl
fsts
mov
adc
jl
jbe
jp
rorl
fisttps
fcomi
aaa
inc
fcomp
xor
cmpl
out
lock
add
stc
aad
xorl
xlat
lods
mov
mov
mov
mov
js
and
dec
aaa
stos
and
les
jbe
sahf
jno
stos
lods
out
popa
vfnmsub132pd
into
cwtl
sub
ja
in
stos
les
in
jnp
xchg
movw
xchg
xchg
jae
mov
frstor
test
bound
cmp
daa
fistl
shlb
push
movsl
in
inc
push
test
pop
ficomps
icebp
xchg
push
sbb
add
daa
subl
lcall
inc
adc
jle
cmp
add
daa
add
add
jb
sub
adc
jl
mov
mov
iret
xchg
outsl
jge
mov
jp
xlat
and
loopne
out
add
int3
dec
pop
inc
testl
lea
jge
mov
jbe
scas
cltd
sub
pcmpeqb
xchg
push
dec
pop
in
jmp
add
lret
cmp
pusha
xlat
cmp
xchg
out
pusha
dec
mov
pushl
cmp
lods
dec
push
sbb
fisttpll
leave
outsl
pop
movsl
xchg
pushf
imulb
fnsave
sbb
imulb
rclb
js
stos
into
ret
inc
fldcw
out
rorl
push
fwait
and
scas
outsl
inc
mov
and
sti
sahf
gs
pop
jl
jbe
xor
mov
cmp
push
nop
xchg
cmp
jmp
push
xor
test
int3
jge
shll
aaa
jle
int3
js
dec
lods
sbb
outsl
push
insl
inc
mov
sbb
jg
xchg
mov
sub
pop
pop
push
loop
inc
sub
lock
cmp
push
mov
inc
popa
sbb
push
in
jecxz
xchg
addr16
test
pop
in
aam
ret
mov
or
push
or
lcall
or
jbe
rclb
in
dec
out
inc
scas
jp
and
sbb
pop
dec
bsr
push
inc
jnp
and
clc
mov
ret
push
mov
dec
pop
inc
lcall
imul
pxor
sbb
int
ret
and
pop
outsl
in
inc
jb
and
movsb
mov
push
push
mov
fcomps
shrl
and
int
call
jp
addl
push
xorb
mov
fsubrs
xor
cli
ret
fadd
sub
mov
xchg
bound
add
int3
cmc
push
mov
adc
and
dec
pop
xor
and
push
mov
jnp
pushf
push
pop
sub
inc
imul
fsubrp
iret
out
js
xchg
pop
push
xchg
sub
subl
pop
xchg
mov
adc
ds
mov
push
popf
jnp
add
mov
lods
push
repz
mov
mov
xchg
outsl
loopne
imul
or
lock
push
add
rcl
mov
fadds
hlt
jmp
js
hlt
test
push
nop
sbb
sub
ljmp
bound
sbb
mov
xchg
insl
pop
sbb
fwait
ret
fwait
nop
out
ja
mov
pop
fsubrl
test
push
aam
cmp
push
outsb
fstpt
cmp
inc
fisttpl
in
add
dec
xchg
push
dec
ss
add
and
cld
out
xor
jne
adc
out
lret
movsl
out
aam
leave
add
outsl
daa
insl
push
push
stos
adc
js
insb
stos
add
daa
add
add
ret
dec
int3
mov
mov
orl
add
pop
int
aas
jp
or
mov
xchg
or
jg
dec
cld
clc
outsb
imul
inc
movsb
adc
fidivrs
adc
sub
pop
sahf
dec
dec
add
xchg
int3
xchg
cmp
mov
jmp
ljmp
fwait
sti
push
adc
sbb
loop
out
jb
pop
pop
mov
mov
mov
push
inc
lock
push
pop
fcmovnu
adc
bound
jnp
mov
add
adc
mov
leave
xchg
jne
mov
adc
mov
call
imulb
push
lea
jle
and
inc
xor
mov
pop
mov
sub
push
mov
clc
mov
push
xchg
pushf
or
add
mov
inc
pop
rcr
outsl
stc
adc
out
int
shll
lods
mov
xchg
jmp
lahf
sbb
sub
loope
pop
xchg
cmpsb
or
cld
pop
mov
popf
sub
inc
aad
or
cmpsb
add
and
sbb
pusha
enter
aas
insl
or
imul
sub
aas
lock
scas
loopne
pop
mov
mov
movsb
mov
push
adc
mov
pusha
or
push
jno
cmp
cmpsl
lock
inc
pusha
jne
or
cmp
cmp
mov
data16
leave
rcr
mov
ret
dec
jmp
pop
mov
adc
and
add
imul
mov
or
pop
xchg
jmp
stos
xchg
scas
xor
std
fldcw
aad
mov
ret
jne
je
int
pop
xor
add
or
out
sbb
call
jmp
inc
jmp
pop
in
mov
inc
divl
mov
mov
shrl
sub
movsl
outsl
stos
decb
andb
sti
mov
mov
nop
fisubl
scas
call
movsb
fisttpl
das
cs
test
inc
add
jge
pop
push
mov
sbb
mov
rorl
mov
inc
in
les
cmpsb
loop
mov
xchg
in
mov
mov
fdiv
add
add
psrlw
jmp
jge
cmp
out
xchg
sbb
sbb
movsl
add
pushf
sbb
in
dec
insl
add
mov
mov
xor
stos
inc
and
lea
pop
jno
dec
ljmp
jb
mov
shlb
ds
push
data16
or
pusha
in
insb
ss
test
xchg
stc
stos
sub
aas
mov
test
dec
sub
or
push
dec
jo
pop
cli
mov
xchg
out
pop
aas
cmp
je
add
inc
out
add
pop
and
mov
out
add
and
add
add
loop
push
cld
imul
sti
push
sub
pop
data16
mov
mov
xor
dec
xchg
incb
mov
imul
jle
sbb
xchg
mov
ret
xchg
inc
outsb
pop
ja
nop
jecxz
or
test
add
test
scas
pop
xchg
jo
cmp
sub
or
and
cli
je
dec
or
xchg
adc
xor
ja
jne
xchg
sbb
cmp
mov
sti
into
cmp
dec
adc
cmp
pop
jns
mov
data16
insb
imul
sti
int
in
pop
mov
jno
ss
repnz
pop
pop
mov
int3
cli
mov
jmp
test
pop
sub
aas
shrl
cmp
lret
xorb
icebp
in
cmp
dec
sahf
insl
dec
test
add
test
cmpsb
test
mov
or
rorb
sahf
fcmovnbe
int3
sub
in
inc
in
sarb
jbe
stc
mov
cwtl
inc
jp
or
adc
sub
addr16
xchg
mov
movsb
sti
push
xchg
int
mov
cmp
or
idiv
out
sub
xchg
cltd
xchg
or
in
arpl
divl
in
adc
int3
ret
pop
fdivs
fsubs
xchg
adc
mov
dec
jmp
mov
push
mov
cmp
adc
xchg
ds
or
pop
jbe
stc
fidivs
imul
xor
push
sub
addr16
jno
push
pop
sub
addr16
mov
stos
adc
subl
mov
mov
mov
fnstsw
pop
repnz
stos
repz
mov
sub
in
rcrb
outsl
fiadds
cli
loope
sar
js
lods
imul
xchg
fcoms
push
sub
pop
flds
cmp
sar
mov
jno
das
and
and
cs
jno
pop
mov
testl
mov
outsl
jg
js
cmp
inc
ret
out
stos
rol
and
push
sub
adcb
dec
jnp
aas
jle
xchg
test
sahf
out
stos
jmp
xor
mov
adc
mov
js
xor
sub
mov
pop
push
pop
or
dec
enter
dec
shlb
fists
xchg
movl
je
xor
test
pop
add
fs
and
ret
loopne
xor
test
lea
inc
xchg
test
movsl
or
mov
insb
jnp
rclb
xchg
mov
ret
les
xchg
popl
ss
add
data16
xchg
push
cmpb
sub
push
adc
test
les
lahf
daa
aas
test
pop
scas
rolb
pop
jbe
divl
out
flds
jg
std
mov
and
add
add
add
add
sub
xchg
hlt
popa
jo
fdivs
sahf
out
jo
adc
sub
cmp
lods
sbb
test
adc
or
and
enter
dec
adc
xchg
jo
outsb
fs
loop
sahf
fsubl
push
roll
out
xchg
cmp
out
dec
decb
cwtl
xchg
loope
loopne
sbb
lret
sbb
push
push
xor
sbb
dec
repz
insb
test
pop
fdivrl
push
fnstenv
sbb
inc
iret
into
lret
dec
inc
cwtl
and
jne
insw
inc
fisttpll
in
mov
out
test
mov
enter
rcr
stos
lods
sbb
lahf
cwtl
out
cmpsl
mov
dec
xor
cmc
mov
hlt
dec
imul
icebp
push
xchg
out
jo
stos
xchg
loope
sbb
stos
jbe
aas
xchg
or
mov
pop
add
cmpsb
push
adc
xchg
xchg
data16
stos
xchg
jnp
out
jbe
aam
xchg
cmp
ljmp
rcll
or
or
shlb
xchg
sub
or
cmp
xchg
shrb
mov
mov
stos
stos
sbb
add
jno
aam
sbb
mov
negb
mov
adc
int
push
out
xor
out
stos
xchg
fcmovnu
in
cld
push
ds
cmpsb
and
int3
cmp
xchg
imul
xlat
test
scas
cmp
inc
dec
mov
pop
lds
adc
in
inc
pop
xchg
stos
push
sbb
dec
or
cld
cs
mov
adc
lods
or
push
lea
dec
jae
mov
jns
aaa
mov
cmp
shrb
movsb
int
push
xchg
sub
outsb
fimuls
lret
or
xchg
icebp
or
xor
cli
push
and
xchg
push
push
fcomps
sbb
xchg
lret
mov
ds
in
mov
push
shll
add
sbb
cmp
push
jae
cmpsb
in
jbe
lret
mov
sbb
push
bound
daa
rcr
cmpsl
stos
push
mov
mov
rclb
push
and
int3
dec
jno
xchg
fwait
xor
mov
jb
jns
or
sub
rcrl
clc
and
jecxz
insb
int3
mov
cmp
xchg
jecxz
xor
inc
mov
hlt
add
fists
lods
cmp
mov
or
jge
fimuls
pop
add
sbb
xor
cld
mov
inc
je
insl
jb
mov
mov
jp
flds
xor
pop
inc
mov
in
in
ficoms
pop
xchg
fstl
jg
sbb
mov
iret
orb
jp
orb
add
sbb
jge
mov
movsl
mov
daa
add
add
push
das
adc
jo
sub
pop
fstpt
pop
mov
inc
cmp
pusha
das
lahf
sahf
sbb
or
xor
and
icebp
xchg
sbb
mov
call
in
mov
repz
sahf
mov
int3
add
mov
push
cmpl
cs
cld
and
out
pop
jnp
insl
neg
xchg
cmp
imul
push
or
push
lds
jns
rcll
push
shlb
cmc
fs
or
mov
xor
sti
loope
mov
arpl
lcall
inc
dec
xor
loope
sbb
xchg
push
adcb
mov
add
mov
sub
xorl
add
mov
xor
pop
pusha
aad
test
mov
sbb
pop
adc
test
jg
mov
pop
popa
mov
icebp
testb
and
inc
loop
outsb
mov
in
add
mov
daa
fisubrl
pop
rorl
add
sub
daa
sub
mov
sub
ja
nop
inc
mov
je
adc
jne
and
xchg
push
dec
sbb
out
jns
pop
je
hlt
sub
push
sub
inc
dec
inc
jne
lods
xor
mov
in
sub
sub
xor
dec
scas
mull
adc
in
out
lret
jg
mov
ljmp
xchg
push
fldpi
and
jecxz
or
repnz
out
and
in
pop
xlat
mov
fdivs
imul
jg
mov
stos
je
jle
sub
icebp
loopne
mov
push
rol
andl
int
ret
jle
jb
dec
adc
adc
pop
or
imul
sub
mov
ljmp
in
nop
incl
cs
sbb
lock
mov
cmp
mov
xchg
cmpsb
push
push
popa
loopne
ljmp
or
or
xor
cltd
push
cmp
mov
mov
and
popa
mov
mov
add
pop
sub
push
mov
and
call
push
xchg
rorl
in
mov
sbb
cmovp
xlat
mov
inc
pop
push
inc
xor
mov
pop
and
jne
fidivrs
shrl
pop
pop
push
push
mov
ja
push
lcall
adc
arpl
clc
mov
fbld
div
flds
mov
arpl
test
sbb
lcall
cmpsl
fistl
arpl
sub
test
ss
test
or
cmp
mov
cli
int3
popa
add
inc
xchg
add
adc
xchg
push
dec
or
and
adc
je
je
mov
xor
outsl
clc
or
add
cmp
scas
negl
xor
pop
in
fstps
mov
bound
jbe
enter
mov
and
jg
filds
shrb
pop
sbb
stc
rcrb
xor
add
cmc
adcl
pop
xchg
das
push
push
in
jns
xchg
xor
xlat
lret
negl
sbb
push
bound
add
sub
movzbl
inc
fistl
jae
xchg
jmp
fdivrl
pop
rcl
out
out
inc
sbb
ret
add
fiadds
or
popa
mov
sbb
lds
push
fcompl
test
mov
scas
cmp
inc
pushf
or
lds
inc
xor
addb
movsb
lock
rorb
fstps
mov
iret
push
sub
daa
adc
aad
sub
out
add
pushf
push
sbb
mov
sbb
add
xchg
fmuls
push
inc
add
mov
shlb
sub
out
mov
mov
shrb
cwtl
fs
icebp
sbb
test
xorl
mov
int
push
sub
les
ljmp
and
mov
mov
sbb
and
pop
lahf
xor
ljmp
mov
iret
daa
repnz
ljmp
xlat
popa
adc
mov
or
stos
shlb
mov
lret
and
sarl
jle
jmp
inc
scas
fs
pop
xor
dec
test
ja
adc
daa
and
mov
test
xor
daa
movsb
cmc
loop
movsl
lods
outsb
push
cmp
mov
into
mov
adc
lods
cmp
rcll
adc
mov
jge
cmp
jne
add
dec
inc
les
and
mov
mov
pop
adc
lea
cmc
pop
aam
xchg
bound
fcompl
or
addb
lods
lods
clc
cmc
arpl
inc
mov
sbb
int3
dec
adc
jae
pop
std
gs
mov
fmuls
mov
and
gs
sti
ffree
enter
dec
aaa
cmp
rorb
test
push
sub
fnstsw
lret
cmp
push
lahf
ja
and
sahf
sbb
andb
ret
mov
fisttpll
dec
pop
jns
sbb
or
pop
loop
mov
scas
fcoms
aaa
inc
xor
mov
sbb
ror
out
ret
and
insb
jae
aad
add
jecxz
xchg
unpckhps
sbb
jne
loop
adc
add
repnz
pop
out
pop
lods
pop
enter
adc
jns
jge
adc
inc
mov
in
stos
clc
adc
mov
add
ss
push
adc
sub
xor
sub
imull
movsl
xor
jmp
or
sub
js
imul
outsl
pop
lcall
les
mov
insl
in
loopne
cltd
cmc
cmp
dec
cmp
scas
jp
inc
aas
cmc
push
jbe
roll
in
mov
cmp
jns
dec
iret
mov
mov
sbb
leave
jg
out
cmp
cmpsb
push
xchg
pushf
pop
divb
hlt
mov
aad
insb
mov
pop
pop
mov
addr16
mov
je
cmp
cli
push
add
data16
negb
stc
mov
xor
pop
cltd
fdivl
xchg
jbe
rolb
push
cmp
xchg
mov
js
pushf
dec
xor
out
repz
mov
xor
test
mov
cld
xchg
pop
jle
mov
or
sub
add
push
mov
stos
pop
sub
out
xchg
add
jne
mov
lds
das
inc
aas
cmc
loop
mov
add
jl
incl
xor
pop
mov
shlb
jnp
mov
cli
add
fisubrl
mov
add
xlat
mov
lods
dec
outsl
scas
mov
push
cmp
pop
in
jl
add
je
jno
mov
mov
lds
jno
cmp
inc
addr16
clc
push
pop
sbb
cmc
push
outsb
fdivs
dec
es
imulb
or
lcall
xchg
lret
cmp
mov
lret
lock
and
je
adc
std
lret
cld
jae
sbb
sbb
mov
test
jae
adc
ss
lret
jg
sub
xchg
lcall
shll
shll
scas
test
in
push
fisttpl
aad
sub
pop
sub
sub
mov
stos
std
mov
pop
mov
jno
shl
pusha
in
jns
shl
sbb
in
add
insl
pusha
ret
dec
mov
addr16
dec
int
mov
in
rorl
in
clc
test
sahf
call
es
adc
mov
sarb
imulb
in
pop
sahf
dec
ficoml
in
loopne
in
xor
xchg
jns
in
cli
movsl
pop
mov
imul
sbb
push
lret
ss
inc
mov
loope
cs
call
jbe
test
shll
call
sub
sub
cmc
sbb
addl
rclb
ss
or
mov
dec
repz
push
inc
ja
cltd
jg
fcom
ss
fstl
jl
lret
stos
sub
fdivs
mov
fwait
add
xchg
dec
sub
jno
sub
pusha
sbb
fwait
push
jg
cmc
adc
pusha
inc
or
outsb
std
xchg
mov
push
les
pop
fstl
sbb
dec
xchg
ficoms
dec
pop
daa
clc
xchg
lret
add
fldcw
loopne
clc
adc
daa
add
add
stos
insl
scas
shrl
sti
jecxz
dec
dec
mov
and
mov
xchg
rep
dec
rcl
mov
shrl
add
mov
out
jae
dec
jne
and
cmpsl
cmp
pop
sti
ret
jecxz
call
addr16
add
cli
dec
nop
out
jbe
test
mov
sub
cmp
cmp
je
push
push
inc
sbb
aaa
xchg
pop
cmpsl
pop
jbe
cmp
push
aas
fldcw
jae
in
mov
jg
test
pop
mov
jae
jl
fidivl
and
pop
jge
push
mov
push
sti
shl
push
aad
jmp
fcom
in
jecxz
lret
pop
leave
hlt
mov
add
sub
or
ss
test
push
test
lods
ds
sbb
mov
sbb
jge
dec
iret
mov
inc
lcall
jno
arpl
hlt
fisubrs
sub
dec
mov
enter
adc
jle
rorb
push
mov
push
pushf
fwait
mov
shrb
jb
data16
xchg
sbb
sbb
cld
mov
lret
ds
mov
pop
int3
mov
and
and
xor
aas
mov
pop
dec
fstl
sbb
repz
aas
lcall
mov
ret
aaa
aad
push
pop
cmpsl
fistpll
aam
jns
push
or
mov
xor
mov
push
ret
cwtl
jge
inc
out
and
outsl
scas
scas
inc
sbb
dec
popf
scas
popa
aaa
cmp
pop
sub
pusha
and
std
sbb
outsl
pop
fisttpl
dec
stos
sbb
ja
jg
stos
movsl
test
add
cmpl
test
ljmp
repz
or
cmp
fstl
test
mov
push
pop
mov
and
fnstenv
int
fwait
pop
lcall
out
loop
test
sub
or
sbb
rcrb
adc
dec
rcrb
adc
lds
xchg
jo
fistps
mov
inc
pop
mov
mov
js
imul
pop
out
pop
cld
or
retw
cld
adc
int3
xor
adc
cmc
inc
mov
sbb
movsb
jmp
xchg
and
sbb
pushf
push
fldcw
int3
jge
shrl
loop
out
push
data16
mov
dec
movsb
leave
pop
cmp
cmc
mov
push
in
stos
mov
sub
sbbb
or
popf
or
lods
inc
jae
mov
dec
pop
fdivp
jge
imul
lcall
js
pop
mov
arpl
push
iret
add
and
cmpps
fs
in
cmpsb
outsl
test
cmp
sahf
repz
cmc
jnp
je
jmp
cmpsl
adc
out
out
add
push
dec
pop
xchg
js
mov
jge
add
daa
add
add
sub
dec
fwait
push
push
aam
mov
mov
in
pop
cmp
cwtl
xor
jge
cmpsb
push
scas
xor
int3
xor
mov
imul
sbb
dec
mov
test
sahf
pusha
sahf
stc
sti
enter
add
jns
push
xchg
subb
clc
cli
xchg
sub
lcall
outsb
sbb
lahf
mov
push
lret
inc
sub
push
shll
xor
fcmovnbe
inc
call
jo
es
cld
dec
and
daa
inc
sub
das
sub
in
in
pop
push
sbb
dec
inc
and
leave
cmp
push
jo
and
icebp
mov
loope
ljmp
lock
pop
scas
loopne
scas
nop
ljmp
pop
or
mov
insl
sub
mov
cmpl
mov
movsl
sub
sub
jo
sbb
mov
sub
mov
jl
push
and
into
inc
pop
push
xchg
cwtl
in
inc
ret
rclb
inc
pop
push
imul
cs
xchg
pop
push
incb
jle
iret
and
xlat
mov
cmpsb
sub
stos
inc
sbb
lahf
fisubrs
xor
stc
add
jno
mov
outsl
push
gs
cmp
mov
cmp
loopne
adc
mov
lea
cmp
leave
push
add
aaa
aam
flds
jmp
pop
mov
lahf
cmp
ret
sbb
push
push
pop
or
cmp
mov
loop
cld
ds
or
inc
jo
das
int
pushf
repnz
jae
dec
jns
fstpl
adc
test
ja
das
and
out
repz
test
jno
pop
add
shrb
mov
xchg
test
mov
inc
xchg
jle
addr16
incb
mov
cwtl
jbe
outsb
out
out
pop
int
sbb
sti
inc
outsb
mov
mov
std
jns
movsb
mov
mov
mov
jae
pop
jae
jecxz
sarl
mov
xor
jno
ficomps
xor
inc
mov
jecxz
aam
pusha
loope
iret
pop
fldcw
loope
pop
pop
enter
cltd
push
xlat
jmp
inc
out
push
ss
adc
out
push
push
mov
pop
into
repz
daa
mov
sbb
cli
mov
les
lods
mov
adc
loopne
xor
pop
sbb
mov
add
addb
mov
jecxz
in
adc
pushf
inc
sub
cwtl
ljmp
mov
mov
mov
sub
mov
adc
push
sub
std
add
ja
push
xchg
jbe
mov
jb
addl
adc
sti
movsl
dec
cmp
inc
or
les
loop
insb
filds
gs
pusha
insl
pop
sub
ja
jmp
and
in
add
sbb
adc
sub
int
into
cwtl
add
xlat
add
xchg
jl
cld
decl
in
jo
lea
push
cmpsb
les
add
inc
push
inc
jecxz
pushf
add
xchg
dec
pusha
dec
fwait
fs
add
jbe
gs
aaa
js
subl
xor
cmp
test
mov
dec
cmp
and
test
xchg
sbb
push
lret
and
jno
or
enter
lret
scas
dec
xchg
cld
lock
shr
sti
stos
push
dec
insl
and
mov
mov
repz
mov
test
scas
popf
stos
pop
pushf
adc
rcll
and
gs
jo
inc
repnz
out
mov
sub
cld
xor
out
jo
ror
lret
dec
subb
jg
cmp
dec
and
das
cmp
aad
pusha
nop
aaa
xchg
push
filds
or
out
add
icebp
pop
inc
jmp
jmp
cltd
mov
adc
adc
frstor
pop
std
cli
roll
lds
push
mov
test
xor
loopne
pop
imul
push
je
ds
pop
sub
popf
imul
xchg
fildll
movsl
or
sti
mov
lds
mov
cmp
sub
mov
cmp
and
add
inc
lcall
popa
mov
push
out
dec
push
mov
cmc
pop
aam
mov
push
cs
test
cmpb
mov
out
xchg
fcomps
gs
pop
inc
sbb
jo
fisttpl
pop
and
popf
sbb
xchg
mov
pushf
jae
push
mov
mov
xlat
push
jo
sub
not
movzwl
pushl
push
inc
aaa
or
add
out
cmc
daa
mulb
mov
subb
sbb
dec
addb
cwtl
xchg
push
enter
and
addr16
clc
xchg
push
sbb
sahf
das
mov
lret
ds
test
popf
add
fstps
mov
mov
and
sub
dec
xchg
mov
sub
test
xchg
mov
and
xor
iret
js
mov
in
mov
mov
pop
jmp
and
aaa
push
repnz
xchg
je
xor
in
dec
push
push
incl
jge
pushf
call
popa
insb
cmp
sbb
push
jecxz
inc
adc
shll
or
ja
xchg
dec
lods
sbb
mov
push
mov
repnz
xchg
ljmp
pop
fldl
dec
sub
xchg
mov
mov
fs
sbb
sbbb
test
mov
cmp
dec
pop
xchg
mov
fstpt
cs
add
fsubrl
mov
add
xchg
xor
sub
mov
fistpl
add
pop
add
mov
adc
add
and
dec
repz
fldt
out
xchg
lretw
movb
daa
add
add
cmp
jnp
incl
mov
cmpsb
in
mov
jge
adc
add
mov
ret
test
lret
xor
or
repnz
cwtl
mov
bound
and
pop
push
push
out
adc
adc
dec
sub
dec
xor
xchg
or
shll
sbb
ret
lods
or
lods
mov
vhsubps
sub
push
and
inc
mov
push
push
or
aas
cld
inc
jbe
cmp
sbb
loope
xchg
dec
aad
out
mov
mov
int3
mov
outsl
push
and
or
sbb
data16
and
dec
mov
pop
dec
insb
sbb
rcll
aas
stc
mov
pusha
lods
ret
in
sti
int3
mov
les
add
mov
or
mov
cld
jmp
popa
add
stos
popa
push
jnp
xchg
jae
cmp
stc
test
adc
xlat
and
fnsave
or
jb
xchg
pushf
push
stos
jno
pop
stc
jmp
dec
sub
lret
stos
mov
in
fcmovbe
xchg
mull
mov
jmp
lcall
push
fsubrs
sub
outsl
push
stos
sbb
mov
and
sbb
sub
out
repnz
mov
ljmp
inc
pop
sub
shr
mov
mov
dec
popa
cmp
cmc
fstl
push
sub
dec
lea
and
cmp
mov
ds
lretw
pop
iret
stc
add
mov
mov
dec
inc
xchg
xor
pop
add
adc
cmp
scas
or
xor
push
std
mov
mov
outsl
dec
push
iret
fldenv
test
pusha
xor
fiadds
in
fstp
and
cmp
xchg
or
jbe
mov
test
dec
leave
outsb
enter
adc
xchg
lods
add
icebp
sub
inc
sub
dec
loope
aad
cmp
cld
pop
jne
cmp
mov
jo
cli
sbb
cltd
sbb
push
cmc
jg,pn
or
ffree
adc
psllw
test
inc
mov
push
dec
add
ret
or
add
adc
scas
jae
dec
fcoms
movsl
cmp
jns
mov
push
pop
or
sarb
dec
sub
ljmp
xor
jno
and
or
mov
ret
mov
in
js
cs
mov
push
mov
push
xchg
pop
adc
aaa
and
in
push
int3
sub
cld
repz
adc
dec
mov
or
adcb
in
into
add
pop
sub
andb
in
pop
fcoml
sbb
push
mov
mov
jne
and
mov
jns
enter
jl
nop
aam
jns
add
jne
add
lcall
mov
mov
shl
add
daa
add
add
xor
icebp
movsl
push
ja
sub
inc
sub
aam
push
cmp
xchg
push
jo
daa
clc
mov
jge
std
adc
mov
xor
sahf
bound
xor
sarb
cmp
lods
and
push
mov
ficoml
in
aaa
in
pop
mov
cltd
data16
data16
and
or
pop
data16
test
or
popa
dec
inc
mov
dec
ret
adc
or
inc
incb
cwtl
aam
mov
adc
out
lods
stc
scas
inc
pusha
push
rcll
into
xor
adc
pusha
imul
jmp
push
ljmp
outsb
jns
mov
fcom
repnz
notl
sbb
xor
inc
or
mov
xchg
std
xchg
mov
mulb
xor
notl
or
mov
xchg
aam
add
sub
les
les
les
mov
sub
sub
mov
mov
dec
cmp
js
sbb
inc
xchg
cmp
lahf
lcall
lahf
push
mov
jmp
mov
jne
push
lcall
popa
aam
push
pop
in
rcll
push
out
sbb
sti
movsb
jne
xchg
sub
jecxz
dec
mov
xorb
push
ret
nop
inc
jbe
mov
cmp
xchg
loop
ds
push
fldl
dec
fld
aas
jno
dec
jns
cwtl
dec
fnstsw
icebp
xor
jecxz
sahf
outsb
jmp
mov
ja
add
and
call
inc
insb
sub
movsb
into
jae
and
int3
cli
xchg
xchg
rorl
jns
add
fdivl
iret
inc
fsubl
and
ret
mov
hlt
push
out
ljmp
add
sbb
mov
fimull
movsb
cmp
and
popf
pop
mov
je
cld
cwtl
or
les
pop
inc
inc
ja
stos
jl
add
popa
inc
inc
mov
jo
cs
pop
icebp
mov
fidivrl
xlat
sub
dec
insb
inc
push
nop
mov
fcomps
xorl
shlb
ret
ret
adc
lods
pop
mov
push
addr16
int3
movsb
sahf
loop
add
sahf
out
fsubl
int3
iret
lds
push
movaps
loop
cwtl
icebp
jp
adc
or
ss
out
jg
outsl
adc
shrb
jl
sbb
sub
or
xchg
jp
push
add
hlt
sti
test
repz
and
dec
arpl
daa
ficomps
mov
pop
aaa
pop
inc
xchg
dec
mov
xchg
adc
movsw
push
fadds
dec
add
sub
icebp
test
in
dec
dec
movsb
jmp
xchg
incb
mov
ds
push
jg
xchg
rolb
dec
idivl
frstor
add
daa
add
add
dec
jg
ss
inc
fidivrl
stos
xchg
icebp
std
jnp
mov
ljmp
fwait
or
xor
aad
xchg
stos
xor
xorl
jo
push
push
out
pop
or
xchg
inc
out
je
lahf
je
and
adcb
sbb
and
inc
jg
iret
out
push
xchg
push
ljmp
sbb
ror
pop
sbb
rorb
pop
arpl
add
sarl
xchg
int
int3
leavew
fs
mov
or
pushf
aad
jge
out
adc
insl
dec
sbb
mov
enter
loope
mov
mov
mov
outsl
int
dec
mov
movsl
cli
repz
add
mov
mulb
loope
data16
adc
mov
cltd
aas
shl
push
jae
mov
in
fidivrl
sub
xchg
sub
pushf
jmp
out
repz
stos
sbb
dec
or
test
mov
pop
dec
icebp
and
push
mov
mov
jl
dec
xchg
fsubrp
rcrb
xor
push
pop
nop
rorb
xchg
xchg
arpl
mov
push
pusha
out
scas
mov
inc
arpl
pop
rol
outsb
dec
movl
jge
jle
addl
cltd
add
push
test
stos
mov
int
roll
sbb
into
or
andl
lea
push
sub
inc
je
lock
jge
push
fimull
adc
jg
xor
jns
rorb
std
out
and
cmpsb
cli
push
jno
imul
jmp
cmp
dec
sbb
fstpt
jmp
sub
js
pop
mov
hlt
sbb
fstpt
inc
mov
lods
jecxz
mov
jns
mov
xor
dec
cpuid
pusha
in
cwtl
mov
insb
loopne
sub
jns
imul
mov
add
pop
cmp
dec
hlt
pop
jp
xor
out
mov
dec
mov
out
jae
or
sub
fldl
fs
into
jmp
cmc
repnz
movsb
mov
xor
movsl
inc
fmul
dec
out
sbb
stos
mov
or
or
ret
js
xchg
inc
cli
sub
movsl
icebp
ja
loope
mov
loopne
sbb
jo
stos
mov
mov
xchg
mov
mov
out
mov
loopne
sub
dec
call
dec
pop
xchg
fstl
insl
subl
pop
inc
inc
out
cld
cmp
insb
lock
jbe
mov
popa
and
ja
and
mov
jl
ss
rol
xchg
jne
js
stc
sar
dec
xor
negb
cmp
fmuls
or
mov
arpl
pop
adc
test
gs
leave
sub
or
lret
xchg
xchg
mov
xchg
cmp
test
mov
push
notl
adc
dec
jne
xchg
in
enter
sub
subb
sbb
add
jecxz
mov
jo
test
inc
rolb
add
add
add
mov
cmp
mov
adc
rcrb
ljmp
pushf
push
sti
sahf
push
mov
ret
pop
sub
dec
mov
int
mov
mov
inc
in
dec
leave
mov
sub
xchg
mov
mov
in
rcrb
enter
adc
xor
mov
int3
addr16
jo
stos
add
daa
inc
and
shlb
push
out
fadds
jp
rcr
xchg
sub
gs
inc
int
mov
push
das
push
xchg
inc
gs
in
sub
jle
push
xor
decl
popf
push
lret
iret
sbb
cmpsb
add
xor
pop
add
cmp
stos
divl
mov
dec
cmc
rcll
jno
mov
dec
bound
mov
add
mov
push
iret
mov
addb
mov
mov
dec
mov
aam
aaa
add
mov
pop
inc
lret
or
push
push
xchg
mov
mov
in
mov
mov
mov
repnz
cmp
and
jne
arpl
imul
mov
sub
bound
push
xchg
pop
xor
loop
adc
insl
ljmp
xchg
mov
cmpsb
ret
xor
jg
cmpsl
ret
cmp
cmpsb
jecxz
push
mov
xchg
scas
sbb
dec
stos
mov
fcoms
push
cwtl
mov
fs
mov
push
pusha
xor
aam
sbb
jns
pop
mov
xor
das
cmp
je
jecxz
jo
out
cmpsb
movsb
shrl
mov
movsb
mov
xor
adc
fdivs
cmp
fcoms
adc
push
pop
jmp
or
test
dec
dec
fstpl
addl
inc
fwait
or
adc
popa
outsb
jle
adc
dec
fcmovbe
jmp
lret
mov
pop
jmp
jne
add
test
sbb
sub
jb
fistpl
inc
xchg
or
sahf
daa
lcall
or
and
icebp
mov
inc
xorb
sub
fistl
dec
rorb
xchg
icebp
lret
cli
sti
or
jno
arpl
test
pop
mov
jbe
cli
mov
or
ret
roll
sub
sbbl
adc
repz
mov
movsl
sbb
nop
out
push
adc
add
sbb
sub
pop
xlat
nop
and
lret
and
or
xchg
pop
rolb
mov
add
ret
loop
sbb
cltd
add
cmp
sbb
std
or
pop
popf
and
fwait
nop
adc
mov
mov
imul
mov
fsub
subl
mov
and
roll
add
add
add
fmuls
mov
movsb
and
sub
add
icebp
push
scas
fsubrs
push
cmp
and
addr16
in
add
in
pop
aas
cmp
push
mov
inc
mov
mov
sub
fwait
in
sbb
aaa
and
subl
or
sub
sub
std
push
movsl
fidivrl
push
lds
insl
lret
mov
push
push
xor
add
adc
add
icebp
lods
ja
sub
push
pop
xor
xlat
out
adc
pop
dec
push
lods
fimuls
xlat
aad
sbb
outsl
push
rclb
inc
sbb
fbstp
inc
stos
iret
add
push
jle
aam
decb
cmp
imul
xor
stos
xchg
daa
inc
inc
outsb
pop
adc
inc
cmpsl
ss
sub
out
fs
ret
fstl
mov
mov
pop
ds
xchg
je
jne
lock
scas
test
xchg
decb
sub
adc
push
dec
dec
push
fdivs
xchg
js
std
mov
push
cmp
test
call
adc
cli
jle
insb
pusha
xchg
xor
popl
aaa
mov
xor
push
sti
cmpl
pusha
cwtl
sbb
pop
ljmp
stc
xorl
inc
jo
jns
fildl
aad
jne
in
xchg
cs
add
cmpl
cmc
jp
outsb
in
jae
js
or
repnz
xchg
xor
xor
loope
stos
adc
pop
adc
nop
xchg
jbe
push
pop
hlt
fisttps
pop
gs
call
in
stc
cwtl
lods
es
dec
outsl
mov
pushw
popf
mov
inc
cli
gs
adc
mov
ss
incl
dec
mov
jns
sub
out
aad
std
cmp
out
push
loopne
cmpb
fmuls
inc
aaa
cmp
fcmove
mov
and
nop
push
add
rcr
dec
sub
shlb
xchg
cltd
mov
cmpsl
notb
movsb
jnp
inc
jb
call
adc
popa
cmpsl
std
push
daa
pop
inc
jo
inc
lret
and
popf
jmp
pop
mov
jecxz
dec
outsl
ret
cmpl
test
mov
nop
dec
enter
out
call
add
xchg
sub
insb
cwtl
shl
push
dec
mov
pusha
inc
sub
mov
jle
rolb
cmp
adc
lea
inc
push
sbb
out
adc
aas
jg
jae
push
movsb
mov
sub
inc
cmp
aad
cmp
inc
aaa
sbb
mov
push
xor
mov
sbb
int3
push
xor
xor
ljmp
int
or
je
sahf
in
in
mov
ljmp
mov
aad
and
loopne
xchg
xchg
in
fcompl
xchg
or
adc
add
pop
sbb
cli
inc
cli
outsb
ljmp
mov
add
daa
add
add
adc
out
aas
ljmp
cmc
in
cmp
inc
lds
add
pop
pop
les
cwtl
and
add
sbb
repnz
movsl
cmpsb
cmpsl
stos
addr16
es
test
and
push
mov
pop
ja
jecxz
mov
sbb
in
push
fldenv
rcr
mov
negb
pop
les
xchg
pushf
xor
add
mov
pop
fmull
cli
clc
push
lret
ljmp
addr16
mov
inc
lods
add
jo
movsb
push
inc
pop
repz
cmc
sub
addb
cvttps2pi
pop
aas
inc
adc
aas
andb
mov
jo
andl
lock
leave
push
inc
mov
js
call
mov
pop
sti
mov
fisttps
mov
jo
dec
imull
dec
shlb
fsubrp
or
out
lods
lods
adc
rcrb
lcall
cmpsb
stc
mov
jge
imul
fildl
out
lea
add
or
test
and
repz
adc
lahf
xchg
inc
jns
outsb
add
xchg
push
call
adc
stos
stc
push
add
cli
xchg
inc
sbb
sub
cmp
sbb
ret
femms
stc
jbe
pop
add
xchg
jg
insb
push
decb
xchg
xor
scas
insl
cmp
cli
mov
lods
rcrb
lret
pop
push
sub
sbb
shlb
add
push
mov
test
jmp
add
loopne,pt
xchg
ja
aad
pop
mov
in
into
jnp
dec
lea
xchg
inc
fcoms
xchg
jl
cld
outsb
sbb
in
push
mov
xlat
outsl
jbe
cmp
mov
mov
out
push
pushf
xor
or
cmp
cmp
dec
jg
nop
pop
out
jae
push
or
dec
lods
lret
mov
mov
adc
mov
imul
popf
es
mov
pop
mov
mov
insl
jae
lea
jmp
dec
jmp
std
je
popf
cmpsb
scas
stos
fidivl
mov
jns
dec
leave
mov
mov
or
push
rolb
mov
test
hlt
inc
mov
inc
and
mov
sub
cld
mov
pop
fsubrs
cs
loope
aad
dec
push
jne
cmp
sbb
loopne
int
and
cmp
mov
inc
push
sub
iret
sub
outsb
jmp
pop
mov
les
out
mov
fidivrl
aad
jb
sub
dec
ljmp
lahf
xor
dec
shrl
sbb
shl
mov
dec
lods
and
xor
xor
sahf
fcomps
push
mov
dec
sar
aaa
fdivrs
cwtl
dec
sub
cli
pop
pop
push
neg
inc
arpl
clc
cli
adcl
ljmp
jmp
aam
mov
xlat
push
xlat
ja
out
ss
mov
mov
add
daa
add
add
sub
dec
mov
mov
mov
fsubr
into
aaa
mov
bound
cmpsl
aaa
sbbb
sbb
push
inc
jne
sbb
lret
imul
shl
push
sub
or
pop
test
sub
cmp
push
out
hlt
fsubrl
icebp
push
movsb
cmpb
and
fldenv
dec
dec
xor
imul
popa
aas
mov
inc
dec
fistl
leave
add
xchg
gs
sbb
jae
pop
pop
or
imul
in
add
sub
jnp
and
mov
in
sbb
mov
lcall
js
mov
cld
les
popa
icebp
jmp
sub
sbb
mov
sub
jne
ss
push
sub
es
pushf
es
mov
repnz
std
mov
aas
xchg
push
xor
jnp
pop
sbb
out
fiaddl
pop
xor
mov
shrl
pop
pop
adc
sbb
sub
xor
cmp
xor
in
adc
idiv
add
jle
push
xchg
ja
dec
aad
ret
ret
pop
push
es
push
dec
lret
pop
jno
aad
shrl
ficoml
aam
insl
loopne
lcall
xor
add
ret
jg
ret
aad
and
ljmp
fwait
xchg
scas
jp
cmc
das
xchg
stc
jle
shrb
xchg
pop
cmp
mov
adc
shrb
pop
out
xor
cmp
jo
mov
fs
sbb
aam
mov
lret
adc
mov
sti
adc
jae
notl
xchg
movzbl
mov
cmp
adc
dec
sub
push
sbb
push
and
pushf
out
or
sahf
dec
rcl
mov
mov
gs
sbb
test
in
mov
scas
mov
pop
mov
push
jb
sub
push
stos
xchg
push
push
mov
mov
and
sahf
sbb
sub
jo
xor
push
xlat
js
xchg
or
repz
or
dec
dec
sarb
xor
rep
or
or
jnp
sub
ret
pop
clc
or
mov
adc
pop
inc
adc
jae
or
icebp
xor
sub
in
daa
cmpl
imul
test
mov
ret
and
aad
push
pop
out
jbe
test
adc
lret
enter
add
xlat
cli
setge
dec
test
pop
repz
xor
sub
xor
aaa
mov
and
daa
icebp
ja
xchg
adc
or
js
clc
sub
cmc
fidivl
adc
add
rcll
pushl
sub
add
daa
add
add
lcall
in
fnsave
adc
repnz
loop
imul
mov
loop
sbb
je
pop
mov
test
dec
push
out
in
mov
jp
xor
or
loop
cwtl
test
jl
hlt
xchg
sbbl
or
xorb
cmp
out
fidivl
push
cmpsl
cmp
insb
mov
mov
fisttpll
dec
push
add
daa
jo
imul
push
pop
push
inc
je
lret
outsl
test
dec
xchg
xlat
repnz
push
inc
add
mov
enter
jecxz
pushf
dec
xor
pop
xchg
js
mov
dec
mov
push
cmpsb
mov
orb
or
mov
mov
push
es
or
fiadds
movsb
or
xchg
pop
jmp
jno
and
sbb
insl
inc
push
out
sub
jle
pop
add
fstpt
add
addr16
das
das
and
rolb
int3
jp
cmp
mov
cmp
xchg
mov
push
mov
ficoms
aam
out
lds
pop
and
das
popf
adc
aad
mov
cmpb
cmpb
jne
lods
inc
ds
testl
imul
jo
fidivl
mov
rorb
pop
add
mov
stc
and
popl
clc
xchg
mov
cmpl
mov
js
mov
mov
xchg
std
hlt
es
es
movsl
aaa
push
xchg
add
adc
cmp
iret
xor
push
cs
pop
jbe
fs
pop
in
mov
pop
or
mov
sbb
sbbb
faddl
out
or
push
ficoml
pusha
dec
cmpsb
mov
test
aam
dec
jge
arpl
mov
mov
push
mov
test
sub
out
cmp
xor
mov
clc
dec
notb
sub
orl
lea
fucomp
and
cmp
cmp
int
fsubs
push
outsb
fbstp
jne
inc
daa
jle
pop
lret
cld
adc
jo
push
lock
ljmp
push
or
repz
adc
mov
shrl
jo
inc
push
cmc
add
inc
and
push
mov
or
outsl
jnp
mov
mov
insl
insb
popfw
int3
mov
push
cmpsl
cmp
push
pop
fdivr
mov
jmp
mov
pop
test
jno
test
sar
lods
mov
push
stos
icebp
inc
sbb
hlt
mov
cltd
mov
mov
repnz
push
cmpl
popa
xor
call
mov
stos
mov
mov
xor
pop
mov
lret
push
lcall
xchg
or
push
inc
outsb
inc
aam
jbe
in
pop
cltd
int3
add
negb
out
lods
push
jge
add
add
add
call
test
and
js
add
imul
xlat
add
loope
mov
mov
repz
imul
stos
mov
add
ss
ret
loopne
mov
sahf
shll
inc
loop
xor
std
dec
popf
subl
mov
out
mov
jmp
cli
cmp
xor
adc
cmpsl
inc
std
push
ds
in
add
mov
dec
setae
dec
pop
dec
inc
repnz
test
inc
ja
clc
inc
add
aaa
bound
ret
outsb
pop
mov
jne
sub
into
mov
fnstsw
outsl
cmp
and
or
xchg
dec
notb
sub
xchg
adc
dec
push
dec
push
hlt
pop
xchg
pusha
xchg
std
xchg
push
outsb
movsl
xlat
rcrl
mov
call
mov
adc
rcll
gs
rcl
fnstcw
mov
mov
in
aaa
add
sbb
cld
lret
mov
sti
cmp
test
loop
mov
sbb
inc
push
mov
sub
aaa
push
daa
outsl
xor
mov
aas
test
shrb
jmp
push
xor
mov
lock
es
pop
int3
xchg
sbb
adc
rorl
pop
aam
imul
aad
jge
sahf
loop
divl
gs
cmp
inc
ror
cltd
cwtl
daa
mov
inc
lods
sbb
inc
jo
cmc
divl
and
repnz
or
mov
lahf
push
ds
in
aam
mov
or
std
out
push
sub
leave
mov
adc
fwait
outsb
hlt
dec
out
shlb
mov
mov
fmull
jno
mov
xchg
cmp
xor
inc
loope
in
cmp
lds
popf
lock
pop
mov
dec
rcrb
push
adc
leave
jns
jmp
sbb
sbb
lock
adc
inc
mov
sub
xor
je
rcr
ja
fwait
testl
scas
sbb
in
out
mov
into
xchg
cmp
pop
fisubrl
data16
jno
insb
test
ffreep
xchg
and
cmp
das
add
ljmp
int
enter
xlat
push
xchg
and
push
cmp
add
stos
cld
jge
mov
enter
jae
repnz
inc
sub
sbb
mov
daa
push
scas
cvtpi2ps
mov
aas
fwait
mov
mov
lods
pushf
clc
hlt
push
imul
lahf
add
dec
jg
pop
jno
push
and
ficoml
imul
in
cmp
out
xlat
mov
jle
sbb
inc
mov
sub
push
xor
push
outsl
push
jnp
fisubs
int
sub
add
daa
add
add
cs
loop
jge
add
in
dec
sahf
mov
adc
arpl
in
outsb
jmp
xor
lods
test
aad
mov
pop
fnsave
dec
xchg
dec
cmp
pop
push
push
fisubl
push
test
testb
add
sahf
ret
cs
add
push
int3
int3
cmpsl
jnp
jns
pop
mov
push
xchg
dec
sub
mov
sub
mov
sbb
push
leave
sub
cmpsb
out
std
ljmp
sti
xchg
push
push
adc
push
aaa
aad
add
mov
divb
hlt
jns
leave
test
push
pop
fists
subb
mov
pop
sub
loop
adc
add
loope
jp
or
dec
test
cmp
jae
into
jnp
xor
leave
mov
mov
cmpsb
sub
jmp
rol
dec
rorb
ss
sub
addr16
sbb
push
rorb
addr16
xchg
adc
cwtl
mov
mov
scas
and
xor
cmp
cs
stos
test
pop
lods
push
mov
adcb
in
vmwrite
dec
pusha
mov
xor
sub
pushf
ja
xchg
cmp
ljmp
mov
jg
shlb
pushl
leave
jbe
mov
iret
add
inc
cmp
mov
mov
adc
or
nop
jnp
aas
pop
lds
lods
push
mov
mov
bound
xor
mov
mov
shll
and
cli
xchg
ror
pop
push
sti
loop
sbb
insb
cld
outsb
and
stos
int3
mov
lcall
inc
lret
mov
fdivrl
addl
push
push
std
sub
jnp
imull
or
ss
jo
inc
xor
scas
addl
inc
popf
in
cs
push
dec
push
sbb
test
rcll
in
fsubs
int3
in
lock
dec
ljmp
push
push
fimull
fucompp
adc
fstpt
sahf
jge,pt
movsb
xchg
and
dec
jb
sbb
js
test
mov
addr16
pop
movsl
pop
lods
cmp
cld
loope
cmp
mov
in
sti
sahf
jne
add
xor
call
pusha
imul
addr16
test
mov
sbb
insb
pop
push
mov
mov
lcall
and
loop
jmp
adc
lret
xchg
inc
jecxz
rcrb
adc
xchg
in
jecxz
cmp
jb
cmpsb
xchg
sub
pop
leave
dec
icebp
gs
sti
pop
fsubrp
into
mov
fsubl
ret
mov
cmp
enter
mov
push
outsb
mov
out
add
add
add
scas
cmp
fcomps
lds
lds
or
inc
push
add
cmp
dec
fistpll
jge
jnp
mov
pop
insb
ficoml
pop
stos
fimuls
repnz
mov
and
sub
xchg
sub
push
mov
push
and
or
push
jp
add
cli
adc
xchg
cmp
inc
or
aam
push
stc
push
xchg
arpl
notl
imul
xor
mov
lret
stos
dec
outsl
xor
in
or
xor
movsb
movsb
jle
cmp
sbb
and
ds
jno
std
sbb
jae
push
jbe
push
mov
cli
jne
push
mov
mov
ror
add
ja
repnz
jmp
jle
ret
or
jg
popf
push
inc
mov
pop
andb
pop
xor
ljmp
sti
cmp
leave
jl
xchg
test
push
cmpsb
mov
sub
divl
dec
mov
insb
push
mov
repnz
lds
lahf
lods
mov
mov
and
ret
ficompl
jmp
and
add
mov
loop
adc
pushf
add
incl
xor
cltd
jl
lock
mov
test
rcll
or
ret
shlb
cltd
cltd
dec
fcompl
pop
repnz
adc
iret
xchg
cmp
popa
imulb
out
neg
shlb
push
push
repnz
add
mov
icebp
loop
in
in
xor
xor
mov
push
xlat
js
iret
mov
test
stos
jb
test
xchg
js
imul
arpl
daa
sub
mov
xchg
sbb
icebp
xchg
sub
push
icebp
aaa
push
pop
pop
push
dec
pop
jge
adc
repnz
push
push
in
mov
std
push
pushf
notl
in
or
sub
jge
sub
rclb
xchg
ffreep
mov
xor
push
mov
adc
popf
call
insb
packssdw
test
in
addb
mov
or
arpl
xor
data16
add
inc
xchg
movsb
test
popf
mov
cmp
adc
jns
add
add
sub
das
cmp
cli
jns
mov
sbb
pop
pop
andb
mov
dec
fdivs
mov
fs
test
inc
mov
jp
loope
mov
loope
xchg
cmp
and
fildl
js
scas
int
cmp
ficomps
icebp
rcl
xorb
arpl
cmp
xchg
mov
hlt
bound
rorl
xlat
in
sahf
rcr
jno
fisttpll
cmc
jb
push
inc
mov
stc
mov
aad
cmp
fs
mov
scas
xlat
dec
add
sbb
jge
int3
outsb
xchg
iret
mov
les
add
daa
add
add
push
daa
cmp
cmp
fldcw
loope
repz
fwait
pop
dec
mov
repz
sub
out
call
inc
inc
xor
push
mov
fcoms
fldt
push
xchg
sub
jno
pop
or
pop
lahf
gs
xor
rcll
push
jo
xchg
xchg
idivl
js
ja
cmpb
cwtl
or
data16
les
out
cmc
fnsave
xchg
ret
mov
dec
lds
or
pop
cmp
inc
push
mov
scas
test
mov
jno
and
jl
rclb
clc
scas
cwtl
xor
bound
addr16
cmp
loop
addb
call
push
xchg
and
dec
shll
out
shl
mov
sub
sbbl
gs
inc
cmpsb
mov
and
in
lret
icebp
aas
lret
shr
adc
adc
push
das
shlb
sbb
mov
ljmp
fwait
sbb
push
in
push
cmp
aas
adc
dec
mov
and
inc
sbb
lahf
fidivrl
std
pop
inc
mov
push
rcll
pop
jge
movsb
adc
sub
outsb
mov
inc
std
jge
dec
fcomip
pop
and
or
call
jecxz
pop
dec
out
inc
push
dec
out
fwait
xor
adc
in
mov
mov
repz
jmp
subb
and
loopne
arpl
fistps
andl
outsb
rcrl
out
movsl
inc
mov
daa
inc
ret
lds
sub
clc
test
push
push
addr16
out
fwait
jle
enter
loopne
sbb
sbb
push
shl
dec
js
add
pop
imul
repnz
mov
mov
push
inc
jno
xchg
dec
test
or
jno
hlt
cmpsb
add
inc
scas
inc
pop
mov
dec
cmpsb
adc
adcl
lock
repnz
movsb
pop
pop
ja
iret
arpl
xchg
iret
jns
mov
cmpsb
jae
mov
sbb
sbb
leave
mov
adc
outsl
sarb
rclb
xor
ret
jp
jbe
scas
and
mov
jp
sub
mov
jge
jno
addr16
mov
and
mov
adc
in
sub
jmp
loopne
rolb
dec
hlt
xor
inc
dec
xchg
imul
mov
data16
adc
sahf
and
aaa
cmp
mov
lret
jo
into
aaa
fcoms
mov
popf
push
out
inc
rolb
es
and
mov
sub
mov
mov
pop
inc
mov
mov
insl
icebp
dec
das
add
add
into
sbb
xor
dec
rcrl
and
out
push
ljmp
jl
sar
sarw
jecxz
ret
mov
pop
add
inc
fcmovnb
fstpl
sub
andl
add
add
lret
sub
scas
and
inc
add
inc
xchg
xchg
fmuls
add
or
ret
jecxz
negl
stos
fstps
cmp
cmp
xlat
cmc
inc
jnp
push
jle
mov
jo
lock
fs
icebp
test
mov
pushf
xor
je
push
push
movsbl
cmp
sbb
int3
out
mov
jl
sbb
mov
inc
roll
add
add
loope
scas
cmp
cmc
xor
pop
push
dec
dec
push
adc
pop
nop
mov
mov
clc
in
inc
inc
ficompl
scas
sahf
test
test
adc
jne
push
add
mov
sub
fs
imul
inc
mov
jge
mov
into
das
lahf
jne
cld
push
ja
inc
inc
jl
or
es
popf
gs
mov
jle
mov
jl
int
pop
aaa
jg
fsubl
rcl
in
sub
and
pop
push
push
cmp
cwtl
loop
and
flds
push
clc
ficoms
and
sbb
mov
lea
jmp
pop
jnp
inc
data16
in
shrl
hlt
imul
jge
adc
jbe
rcll
dec
bnd
xor
pop
pop
cs
push
and
mov
add
icebp
addr16
sahf
test
push
ss
xchg
xlat
test
mov
outsb
mov
scas
and
adc
sarl
popf
push
xchg
clc
lea
pop
xor
lods
inc
dec
inc
rclb
cld
sub
sbb
std
or
xlat
shll
nop
push
jecxz
push
cmp
cmp
lea
inc
cmpsb
pushf
cmpsl
clc
stc
leave
jge
leave
mov
fsubs
mov
addr16
test
lahf
fistpll
xchg
jbe
pusha
cmp
pop
dec
mov
cmp
loop
and
je
aas
xchg
and
dec
fldt
add
xor
iret
sbb
ja
xchg
idivb
pop
push
ja
incb
sbb
cli
inc
add
mov
adc
dec
jnp
imul
cmpl
pop
imul
ljmp
add
sbb
push
dec
and
stos
pop
sbb
pushf
adc
fstps
pop
in
pop
outsb
sbb
push
inc
iret
movb
push
ss
int
aam
movsb
pop
insb
push
cwtl
add
inc
pop
sbb
pop
pop
shll
dec
sbb
fdiv
lret
add
and
popa
add
jnp
jp
mov
xor
xchg
in
or
xlat
mov
mov
clc
imul
push
mov
adc
and
lock
sbb
or
add
lret
clc
int
dec
std
xor
lret
xor
aaa
out
push
dec
es
mov
sbb
shll
daa
and
inc
add
daa
pushf
cli
mov
scas
aad
inc
inc
enter
add
daa
add
add
cmpsb
mov
movsb
dec
mov
sbb
iret
repz
call
push
negl
mov
das
in
cmp
and
dec
pop
mov
jmp
sub
mov
cmp
addr16
sub
out
or
mov
lret
adc
rcll
mov
mov
sti
mov
mov
test
sbb
js
enter
xor
lock
movl
push
adc
sbb
sub
loopne
push
sbb
movsb
movd
rcr
push
dec
cmp
xchg
xorl
pop
or
repz
jp
pop
mov
clc
xor
ret
dec
pop
ds
sub
int
mov
cltd
adc
adcl
rcr
sub
std
loop
dec
push
sub
enter
test
and
cmpsl
add
std
mov
leave
pop
cwtl
lsl
adc
bound
cmpsb
cli
sbb
int
xor
mov
fcomps
mov
insl
and
inc
add
push
lahf
lea
cmpsb
shl
fsubrs
sbb
sub
adc
pop
leave
mov
mov
outsl
or
test
xchg
push
sub
xor
sub
in
push
stos
call
stos
ss
cld
lea
push
pop
leave
push
popf
dec
mov
loope
pop
and
insl
jno
outsb
xchg
mov
xor
roll
mov
dec
sahf
push
mov
hlt
push
cmp
mov
jbe
mov
rorb
imul
push
es
sarb
push
mov
inc
cltd
outsb
fs
add
push
daa
pusha
rorl
iret
add
xchg
xchg
shrl
scas
xchg
call
fisttpl
divb
aas
push
and
int
pop
fwait
outsl
out
xor
cmc
mov
cmp
pop
fwait
pop
les
push
andl
jp
mov
mov
daa
mov
popa
into
mov
movl
shrb
cmp
pop
lret
pop
sub
fildl
lock
popf
in
cwtl
or
push
loop
push
aaa
outsb
shlb
dec
fistps
pop
jo
mov
fidivs
xorl
adc
popa
mov
pop
pusha
dec
jbe
sub
xor
cmp
out
nop
add
push
jnp
sub
xchg
cwtl
cwtl
movsl
lcall
pop
loope
add
aam
addr16
outsl
faddp
push
lret
fwait
mov
mov
movsb
imul
cwtl
subb
xadd
ret
xchg
lret
cmp
add
xchg
cmp
mov
movsb
data16
adc
push
jnp
add
fisubl
mov
test
in
repnz
daa
add
add
pop
test
es
das
push
fstpl
or
dec
insl
icebp
push
dec
jmp
ljmp
cmc
stos
cmc
cmp
imul
cmp
lods
lahf
dec
test
mov
subl
in
jecxz
inc
cltd
adc
fnstsw
ficompl
ficoms
mov
notb
fmuls
cmp
mov
loop
mov
insb
dec
adc
int
and
leave
arpl
cld
roll
jp
adc
pop
mov
scas
or
pop
xchg
lds
xor
gs
and
push
into
jl
out
jmp
in
aad
pop
test
rclw
out
nop
mov
and
inc
mov
loope
adc
adc
xor
sub
mov
pop
xchg
aaa
aad
ror
popa
mov
ljmp
mov
imul
xchg
jb
pop
loope
mov
xor
movb
fisttpl
enter
cmp
inc
test
add
fs
lcall
add
scas
sbb
inc
loopne
fs
fsts
push
xor
jnp
inc
fxtract
decl
mov
pop
push
sub
dec
inc
mov
aas
sub
fidivrl
daa
dec
out
and
sbb
xor
in
lcall
sbb
icebp
fdivs
les
mov
xchg
call
leave
inc
leave
test
es
stc
jae
call
adc
sub
cwtl
jns
lret
xorb
hlt
jp
loope
sub
or
add
fdivrs
sub
sbbl
ucomiss
and
or
ljmp
shr
mov
and
jo
xor
sbb
jp
rcrb
in
pop
je
out
js
lcall
xlat
xor
jae
pop
cmp
nop
or
into
mov
xchg
scas
roll
mov
adc
pop
sti
shll
mov
mov
sub
cld
inc
repz
jecxz
xchg
ss
and
pushf
mov
inc
cmp
lret
in
dec
mov
inc
nop
jae
and
ret
pop
int
dec
sti
daa
adc
sbb
adc
sbb
xor
push
and
ret
xchg
mov
and
lret
push
lods
icebp
orb
fcoml
inc
es
hlt
fmull
jle
cmpsb
mov
add
mov
inc
cltd
ficomps
pop
xchg
pusha
shr
adc
push
jbe
or
mov
pop
lret
lds
scas
call
in
loope
test
enter
xor
icebp
les
leave
mov
or
loop
sbb
dec
scas
push
pop
jecxz
dec
add
push
jb
xor
gs
cmp
rcrb
pop
lock
repnz
lods
xor
mov
xor
ret
cmp
inc
enter
insl
xchg
xor
inc
aam
sbb
mov
xchg
add
iret
cmc
sti
pushf
loop,pt
jo
pop
mov
daa
add
add
pop
and
push
lcall
push
mov
xor
sbb
mov
jb
or
inc
dec
daa
out
inc
cmp
inc
sarb
xor
xchg
or
mov
sarb
inc
call
or
fs
add
pop
pop
xchg
mov
fidivrs
jne
rcrl
in
mov
pop
lret
sbb
xchg
imul
jg
subb
add
mov
fs
outsl
lret
inc
cmp
test
sub
ret
jno
addr16
cld
adc
gs
jmp
dec
arpl
popf
call
push
rclb
cmp
push
jnp
addr16
pop
ret
xchg
mov
push
jne
pop
cmp
nop
jae
pop
in
xlat
jmp
int
sbbl
fisttpll
pop
loop
adc
rolb
addr16
push
and
pop
mov
adc
arpl
add
add
or
cmp
mov
out
sbb
push
inc
out
dec
mov
adc
cmpb
pop
aad
fs
sub
mov
int
or
dec
test
hlt
shlb
adc
push
push
into
mov
in
and
xor
add
and
pop
push
pop
imul
icebp
in
mov
cmpsl
loop
jae
cmp
in
out
in
and
adc
and
repz
loopne
jae
inc
int
push
xchg
out
rol
mov
in
aam
cli
pop
xchg
xor
mov
insb
jecxz
sub
adcl
inc
jo
nop
sub
out
out
ret
push
sub
xchg
pop
jecxz
cltd
decl
sbb
int3
inc
adc
add
lock
shl
mov
push
pop
lret
cmp
fiaddl
adc
pop
mov
cmp
xchg
ret
push
cmp
sbb
imul
mov
int
shll
loopne
addr16
mov
cmc
mov
mov
fistpll
xchg
loop
xchg
or
insb
pop
xor
push
inc
sar
mov
movsl
push
xchg
sub
into
mov
push
mov
adc
scas
sub
xor
inc
mov
movsb
arpl
outsl
hlt
jns
hlt
jb
xchg
add
jmp
pop
dec
shrl
add
ds
xor
xchg
cltd
imul
in
rcll
dec
xor
dec
mov
push
mov
mov
fdivl
rcrb
and
out
jbe
inc
pop
mov
ret
popf
inc
xchg
insl
mov
inc
loop
mov
jg
xor
loope
ss
pop
les
xchg
cmpsl
loop
enter
mov
loopne
cwtl
sub
int
xorb
push
dec
mov
scas
imull
dec
or
and
mov
sbbb
fadds
std
cmp
stc
int
xor
xchg
xor
add
daa
add
add
push
dec
fnstenv
xor
xchg
push
insb
add
into
lock
jbe
xchg
loope
xchg
push
shlb
jmp
xchg
add
push
fucomi
cmc
xor
pop
out
rcll
in
cld
sbbb
or
push
fildl
mov
cmp
mov
xor
jl
int3
icebp
sar
scas
inc
add
xchg
pop
sbb
call
ss
cmp
fs
pop
out
outsb
fwait
or
dec
and
jo
mov
cwtl
loopne
std
sarl
out
mov
arpl
jns
push
jle
or
sub
nop
stc
or
jl
sub
dec
pop
sarl
adc
rol
sub
sub
mov
and
xor
adc
and
inc
into
dec
jge
divps
divb
sbb
xchg
sar
inc
outsb
lods
push
jge
sub
stc
icebp
jae
aad
pop
sub
popa
sub
pop
aad
inc
pop
fistpl
jo
pop
mov
push
rorb
jbe
das
stc
test
fisubrl
xor
mov
in
lods
add
cmp
and
test
aaa
xchg
and
clc
push
mov
outsb
ficoml
das
mov
icebp
push
push
jle
addr16
pop
sbb
aas
cs
fcmove
mov
sub
mov
or
or
push
xchg
and
mov
stos
sbb
lret
pop
test
and
insl
fdivs
gs
aaa
sub
push
or
jg
sub
out
mov
mov
leave
mov
jecxz
cmpsl
adc
into
leave
mov
mov
inc
dec
mov
inc
and
js
imull
dec
lods
dec
mov
pop
jp
lret
pop
add
sbb
cmp
in
cmp
pop
outsb
xchg
and
sub
shrl
add
in
mov
test
mov
push
push
insl
pop
sbb
scas
dec
jne
mov
fldcw
or
aad
jp
adc
test
repnz
pop
xor
or
ljmp
pusha
mov
insl
insl
sarl
push
addr16
pop
or
lods
or
add
aam
bound
xchg
arpl
das
mov
xchg
fcmovnu
stos
jg
out
pop
xchg
lds
mov
loope
mov
add
mov
cmp
mov
out
cmc
je
imul
mov
fstpl
add
cmp
cmp
fwait
jge
in
add
clc
add
jle
pusha
push
lods
lds
pop
or
sahf
pop
mov
iret
and
call
sti
push
mov
xchg
xchg
enter
or
jg
nop
insb
out
adc
cwtl
jl
loope
flds
sbb
test
cmp
mov
ret
add
or
mov
inc
in
popf
lea
dec
