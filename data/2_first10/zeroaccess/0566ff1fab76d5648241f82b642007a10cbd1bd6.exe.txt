push
mov
sub
xor
jmp
into
rcr
aad
mov
js
js
jle
js
xlat
cmp
fld
pop
push
or
or
cmp
lret
sbb
inc
bound
mov
or
mov
and
lods
fadds
pusha
out
outsl
adc
sahf
add
dec
lods
pop
sub
mov
lds
adc
xchg
icebp
dec
loopne
dec
call
mov
sub
sbb
xchg
sub
repz
out
cli
in
xchg
cmp
jbe
xlat
sub
add
sbb
xor
adc
fisttpll
cmp
arpl
rclb
fistpl
and
inc
push
aaa
adc
fstpt
dec
repnz
cmpsb
sub
push
arpl
daa
jb
rol
mov
dec
cmp
decb
jecxz
sub
shll
cmpsb
add
mov
jo
dec
pop
or
scas
mov
lock
insl
call
push
dec
repnz
mov
lods
leave
cmp
jns
fidivrs
jns
cs
sbb
fcomps
jle
jge
lods
dec
push
addr16
inc
ljmp
jle
xlat
add
lret
and
iret
pop
shlb
sbb
aaa
je
test
cmc
xchg
xchg
xor
fbstp
inc
mov
inc
cmpsb
jge
sub
rcr
inc
sub
in
mulb
fs
pop
stc
jmp
adc
xchg
fnstcw
pop
xlat
dec
out
jne
or
rcrb
inc
fdivl
inc
stc
cltd
lds
push
std
outsb
sub
pop
xchg
das
push
pushf
pop
push
cmpsb
outsl
int
pusha
outsb
stos
mov
sbb
into
dec
bndldx
or
ficoms
incb
out
maskmovq
testl
shrl
fs
dec
nop
sub
push
inc
repnz
fcomps
scas
setle
adcb
icebp
adc
dec
push
in
test
or
fisttps
fdiv
xchg
out
orb
iret
jne
cld
loopne
mov
push
and
daa
add
cmp
lock
jbe
mov
pushf
repz
aaa
insb
es
shlb
ljmp
sti
pop
and
pop
ljmp
cmc
cwtl
in
lcall
aad
push
and
jnp
dec
pop
dec
aaa
pop
xlat
xchg
fwait
pop
mov
mov
xor
mov
mov
or
mov
movl
mov
mov
push
or
push
add
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
jmp
leave
rol
leave
int
fimull
leave
rclb
inc
pop
dec
jle
js
jle
js
fsubrs
sub
repnz
daa
push
insb
or
push
dec
ret
clc
cltd
pusha
adc
std
es
jne
cmpsl
in
enter
push
lret
repnz
insl
lret
lcall
stos
sar
pop
sbb
rorl
xor
inc
sub
test
jecxz
jp
pusha
add
mov
add
mov
mov
push
or
lock
push
mov
inc
jno
sub
in
pop
outsl
jnp
mov
fwait
mov
sbb
mov
push
rorl
movsl
and
and
pusha
loope
cs
mov
fadds
push
iret
mov
imul
pop
pop
adc
sub
lret
rcl
and
push
xchg
pop
stos
stos
xchg
push
add
or
sbb
xor
inc
iret
fistpll
je
int
rcl
fcmovne
ja
cltd
addl
or
and
fisubl
pushf
cld
call
call
mov
push
mov
js
sarl
clc
jle
inc
add
or
lds
or
sub
xor
fsubs
xchg
mov
and
fs
fsubl
xlat
pop
call
nop
repz
out
pop
xchg
pop
pusha
addr16
mov
jmp
pop
mov
push
les
push
das
lahf
or
mov
mov
nop
sub
das
data16
jno
lods
pop
insl
pop
xchg
cmp
scas
jg
int
repz
mov
loope
scas
lret
cli
jno
xorl
push
pop
add
cltd
sub
lahf
cmpsb
cmp
cmpsl
out
aam
and
sbbl
xor
mov
fs
mov
sub
aaa
test
sub
test
jecxz
pop
mov
aam
aaa
cmp
cmp
lret
int3
push
push
lcall
insb
adc
xchg
stos
out
xchg
sbb
insl
mov
push
xchg
jl
outsb
fs
push
jb
adc
data16
fxch
inc
push
daa
jg
lock
test
out
push
call
aaa
adc
cmpl
jb
shrl
test
push
jns
jno
xchg
aaa
sbb
sbbl
int3
dec
das
xchg
mov
jns
jbe
pusha
jne
sbb
sbb
loope
xchg
pop
clc
mov
dec
add
xorl
mov
adc
lea
orl
mov
xor
mov
neg
mov
xor
jmp
ret
ret
leave
lret
ret
out
repz
add
jle
js
in
popa
push
test
adc
out
and
sar
cld
sti
js
leave
mov
jecxz
and
jmp
mov
push
mov
dec
scas
bound
test
int
sbb
inc
lahf
cs
lret
sbb
push
cmpsb
stos
aaa
push
add
mov
aad
addl
inc
mov
cmp
iret
out
fsts
mov
add
add
xchg
fistps
mov
ja
pop
inc
mov
inc
sub
faddl
outsb
fadd
mov
ds
nop
fsubrs
dec
pop
in
or
int3
in
or
mov
and
jne
pop
pop
cmp
ss
clc
dec
fidivrs
jns
inc
inc
das
add
xchg
or
or
xchg
and
pop
push
ficompl
sbb
lods
inc
dec
out
or
aas
std
bound
mov
outsb
jecxz
std
cmp
sub
cmpsl
inc
cmp
jbe
out
dec
lds
sarl
mov
sbb
jle
pushf
xor
popf
push
jecxz
mov
add
inc
scas
mov
jmp
out
jb
loope
xchg
mov
aam
in
xor
and
sbb
inc
imul
sbb
pop
or
add
lods
fsubl
jo
pushl
in
sti
pop
rolb
dec
out
loopne
fs
pusha
xchg
sbb
movsl
jb
aad
sahf
mov
cmp
int3
xchg
sti
xchg
mov
xor
cmp
adc
add
pop
mov
lret
jno
sbb
loop
xor
pop
or
push
icebp
jns
cs
int
out
pushf
xchg
lods
xchg
pop
lock
test
push
inc
push
sub
inc
lea
insl
xchg
sbb
xchg
push
push
imul
gs
sbb
rclb
out
lahf
inc
pop
mov
pop
iret
inc
xchg
aas
repz
fcoml
cwtl
cmc
notb
add
dec
stos
sbbl
cmpsb
loopne
mov
jg
mov
or
sti
and
mov
pusha
inc
and
rcrl
add
dec
out
jbe
loopne
add
xor
or
aad
hlt
sub
xchg
and
rcr
lret
push
or
adc
xchg
mov
sbb
movl
lea
jmp
xlat
ret
ds
fcmovnu
loope
xchg
push
aaa
test
addb
js
jle
js
push
mov
xchg
leave
aad
ss
fnstenv
add
mov
decl
xor
lods
inc
jnp
and
movsl
cmp
mov
add
js
iret
fistl
xor
pop
add
mov
sub
or
mov
js
cmpsl
dec
pop
ds
sub
ds
push
push
jle
push
pop
test
mov
dec
pop
lret
jp
and
cmpsl
mov
mov
push
add
clc
inc
or
daa
mov
jo
jl
push
xchg
fistpll
out
xchg
pop
and
mov
out
cmc
pop
shrl
jbe
push
rep
test
daa
dec
push
cmp
jbe
sahf
pop
cmp
push
push
jecxz
fwait
std
push
sbb
and
cmp
xchg
notb
dec
add
cli
in
jns
dec
es
and
insl
stos
xchg
pop
or
lret
fcomps
fucomi
pop
cmp
aam
rcr
sbb
int3
add
popa
mov
int
mov
and
fcomps
scas
and
pop
dec
aas
out
jg
jae
hlt
lods
sbb
mov
pop
into
in
jge
movsl
aam
xor
pop
inc
hlt
xor
std
testb
or
addl
sub
imul
sub
pusha
shlb
imul
jbe
mov
lds
cmp
mov
jo
push
mov
mov
out
jne
gs
cli
movsb
int3
xlat
dec
aad
ds
inc
insb
push
ds
push
sbb
mov
or
bound
jecxz
pop
outsb
and
arpl
xor
test
push
hlt
int3
cs
and
in
dec
xchg
ljmp
adc
mov
mov
mov
cmpsb
jnp
dec
and
test
push
and
stc
lret
mov
les
dec
add
mov
mov
jae
pop
xchg
out
and
cmp
loopne
lcall
push
xchg
aaa
jns
inc
xor
adc
int3
pop
popf
mov
sbb
fstp
and
mov
in
xchg
int
cmp
roll
cwtl
fdivs
in
xor
clc
jl
mov
and
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
sbbl
mov
decl
xor
add
mov
movzwl
and
mov
mov
mov
adcl
mov
xorl
mov
mov
movzwl
jmp
lret
iret
cmp
aam
leave
fldcw
lret
pop
mov
js
jle
js
aam
int3
pushl
or
ret
mov
jae
test
cmp
js
jp
xchg
and
xor
pop
aaa
insl
pop
add
aaa
and
dec
movsl
popf
sbbl
sbb
es
xor
lds
or
mov
jnp
lcall
das
dec
inc
inc
inc
fcmovne
mov
repnz
sbb
subb
adc
mov
rcrl
and
lods
test
mov
cld
mov
mov
test
arpl
call
inc
lcall
push
xchg
in
push
ljmp
push
inc
xor
sub
test
push
cmc
mov
hlt
sub
pop
fwait
loopne
fdivl
lock
mov
fwait
xorl
pop
scas
push
push
out
mov
sahf
loope
xor
call
sub
in
pusha
cwtl
inc
mov
add
stos
fdivrl
popf
cmpsl
mov
xchg
push
arpl
or
sbb
stos
loopne
jmp
cmc
dec
outsb
mov
enter
movsl
out
test
cmp
xor
out
ss
xchg
imul
push
xor
mov
mov
test
push
cmp
cmp
mov
psubsw
mov
push
sbb
jae
adc
sbb
mov
enter
fimull
dec
cs
outsl
xor
pop
sbb
sbb
pop
push
gs
mov
js
jns
rcrb
cmc
test
adc
push
dec
in
inc
pop
cmp
xor
sub
outsb
sub
mov
cs
mov
jmp
aad
mov
mov
xchg
into
pop
add
pop
in
add
or
shl
fwait
lahf
fidivs
outsb
add
cmp
pop
ror
fstl
stc
dec
xchg
or
out
sbb
pop
fsub
imul
test
dec
xor
dec
mov
pop
xchg
jne
mov
mov
sbb
outsl
add
in
pop
sub
in
sbb
xchg
xor
adc
std
lock
lret
fsubp
fldcw
jo
jnp,pn
push
sbb
addr16
add
and
mov
mov
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
mov
jmp
rcl
ret
fld
aam
push
shl
cmp
jo
add
js
jle
js
and
mov
add
mov
add
fnstenv
hlt
cli
outsb
cmp
aas
les
enter
test
adc
sbb
xlat
cmp
mov
xor
cmp
lods
xchg
or
sub
jbe
vcomisd
push
mov
scas
ja
push
lret
jbe
hlt
xchg
scas
add
push
push
add
nop
mov
add
xlat
ss
fldt
mov
fisubs
rorb
icebp
shrb
cli
add
in
mull
xor
sub
bound
adcl
pop
or
xor
and
rcll
bound
icebp
inc
xchg
adc
out
fsub
dec
mov
mov
xchg
sti
dec
adc
nop
mov
ljmp
xchg
pop
fsts
pop
sub
push
pop
adc
lods
cli
outsb
shlb
hlt
inc
ret
pop
or
mov
or
pop
lods
cmpsb
sbb
out
dec
enter
or
movsb
cmp
inc
mov
nop
mov
jecxz
or
xchg
sahf
adcl
test
cmp
mov
sti
pop
add
repz
sub
and
mov
lods
sub
mov
outsl
popa
ret
sub
fucom
imul
lahf
add
pop
popf
push
gs
and
rclb
push
in
dec
xor
xlat
xchg
out
xchg
jp
xchg
out
push
data16
out
mov
stos
xchg
mov
sti
call
int
xchg
inc
push
push
dec
mov
shl
mov
lds
or
lds
ss
xor
push
push
inc
jnp
mov
daa
push
and
jne
dec
dec
fidivl
sbb
push
loop
in
push
movsb
test
ret
inc
jl
icebp
xor
jno
push
mov
pop
aaa
mov
dec
ljmp
and
push
sbb
loopne
push
mov
mov
mov
sbb
xor
dec
and
fildl
mov
dec
popf
ror
mov
shrl
stos
inc
es
dec
ds
sub
imul
clc
insl
mov
sbb
and
and
cmc
les
mov
xor
andl
add
cmp
jne
mov
mov
sbbl
xor
add
jmp
xlat
cmp
fxch
mov
inc
mov
jle
js
xchg
rcrb
dec
ret
ret
jbe
sti
pop
test
movsb
dec
scas
sub
mov
jns
add
mov
fisubl
mov
ret
xchg
dec
ss
push
jo
mov
sbb
sbb
adc
mov
xor
adc
sub
sti
fnstcw
mov
pop
mov
mov
push
xchg
push
fs
lcall
bound
aam
popa
in
mov
sbb
pop
test
iret
fsubp
sub
mov
push
cmpsb
and
daa
cs
fcompl
inc
sbb
sub
push
imul
je
std
dec
mov
testb
cmpsl
xchg
add
stos
sub
popa
mov
rolb
mov
push
and
ss
insl
inc
rclb
xor
aaa
cmp
inc
jp
sarb
movsl
push
adc
pop
lret
jne
xchg
mov
addr16
mov
repnz
imull
les
dec
xchg
sbb
lret
inc
fst
mov
sub
xchg
lret
cmp
xor
pop
stos
xor
inc
gs
cwtl
cs
adc
adc
bndldx
gs
mov
adc
popf
lock
push
loop
cli
jo
test
mov
into
loop
add
jecxz
cmp
or
cmp
sub
jg
and
repz
inc
mov
mov
push
outsb
dec
cli
xchg
adc
sahf
pop
cmp
cmpsl
lahf
cmp
adc
loopne
adc
aas
sbb
ds
fists
xchg
lods
scas
icebp
mov
lret
dec
dec
daa
loopne
nop
add
cld
icebp
loopne
push
pop
mov
xor
inc
test
mov
push
and
pcmpgtb
loopne
sbb
pop
mov
stos
daa
xor
push
jnp
out
shll
cmp
sbb
lcall
lret
dec
leave
out
arpl
pop
adcb
xchg
jns
das
jl
fcmove
scas
jnp
jmp
loopne
pushf
pop
mov
xchg
sub
ja
ja
in
and
sbb
ljmp
ljmp
xor
add
dec
pop
xor
cmp
jne
mov
mov
xor
add
mov
jmp
aas
lret
ret
aad
flds
inc
data16
icebp
sbb
jle
js
adc
push
dec
mov
mov
pop
imul
hlt
out
mov
pushf
dec
pop
jge
jmp
pop
mov
icebp
dec
imulb
iret
scas
add
jg
outsl
stc
lret
call
mov
cli
mov
sub
jmp
or
or
inc
pop
cld
and
repz
pusha
push
loope
ret
out
mov
shrb
outsb
popa
xor
daa
adc
std
loopne
mov
outsb
jb
adc
and
lret
and
adc
iret
dec
test
jns
cmp
stc
dec
in
push
dec
sub
jb
push
add
inc
aas
ret
rclb
int
fdivrl
xor
add
scas
mov
sub
and
testb
dec
dec
je
test
mov
filds
fs
popf
pop
mov
popf
sahf
fdivs
scas
jle
inc
cmp
dec
lods
or
inc
add
in
jnp
rcll
data16
sub
cmp
cltd
or
mov
hlt
stos
sbb
mov
ficomps
mov
jle
push
icebp
pusha
jl
ljmp
cwtl
fs
mov
test
adc
les
stc
es
incb
gs
iret
sub
std
push
adc
mov
push
int3
nop
mov
sbb
andb
das
gs
push
mov
adc
mov
jae
add
fwait
mov
shll
repz
ljmp
dec
test
pop
xchg
das
int
sbb
inc
sbb
roll
pusha
xchg
jne
sub
lods
ret
mov
int
xor
in
pop
xchg
push
imul
inc
inc
xchg
push
in
enter
jns
push
sbbl
dec
xchg
xor
cmpsl
xchg
jae
xchg
sbb
sub
hlt
out
dec
out
shrb
loope
mov
cmc
pop
and
movsl
cmp
fidivs
dec
pusha
mov
int3
gs
aas
push
inc
mov
mov
xor
mov
xchg
lds
aad
repnz
push
imul
imul
cmp
pop
into
hlt
xchg
outsb
push
pop
fucomip
push
ja
xchg
aas
out
iret
testb
jmp
and
inc
lock
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
jmp
ret
ror
into
fcmovnbe
out
dec
stos
popf
jbe
insb
or
js
jle
js
inc
dec
fisubl
mov
rcll
int
mov
jp
sahf
xchg
inc
xchg
push
lret
lods
push
dec
shr
add
icebp
xorb
cmp
insl
inc
sti
sti
xchg
adc
inc
xchg
outsb
add
mov
stos
into
ret
adc
popf
and
lea
sub
cmc
add
popf
inc
mov
movsl
scas
lahf
mov
sbb
add
stos
dec
psrlw
push
pop
fidivs
xchg
ret
mov
push
aaa
add
popa
add
sub
sub
movsl
fistpl
jno
push
lods
lock
repz
jae
sub
dec
ja,pn
mov
divb
push
xchg
invd
cmp
dec
push
ljmp
push
xchg
jp
into
cmp
mov
xor
and
clc
and
cmp
mov
popf
gs
mov
clc
test
test
push
mov
adc
nop
push
in
jg
push
sbb
inc
movsl
out
lds
push
push
xlat
scas
or
jge
dec
pop
cmp
inc
mov
shr
cmp
xchg
stos
movsl
push
pop
add
minps
mov
pop
test
fwait
fwait
pop
mov
dec
jb
aad
push
arpl
jmp
ja
fcmovu
cmc
in
scas
cmpsb
pop
mov
rcr
and
dec
adc
negl
in
movsb
dec
gs
lods
test
push
adc
pushf
jge
xchg
stos
lahf
mov
out
xchg
call
inc
loop
shll
dec
lea
out
daa
jo
cmpl
push
or
xor
or
aad
or
fisttpll
push
cli
mov
stc
int3
mov
and
jl
ljmp
mulb
mov
in
add
ret
mov
add
xor
jo
aas
push
nop
ret
jb
xchg
push
mov
or
sbb
cmpsb
outsl
mov
insl
sub
xchg
mov
cmp
jle
mov
add
sbb
out
js
out
popf
cwtl
adc
cs
sub
call
mov
jle
push
movsl
and
jnp
subl
add
and
iret
pop
clc
faddl
dec
mov
les
rol
sbb
xchg
lret
xchg
push
imulb
cli
xor
mov
xchg
sub
fmull
sub
jmp
ror
int
rcr
aad
bound
mov
cmc
mov
js
jle
js
popa
mov
movsl
iret
mov
cmp
mov
test
sub
mov
jg
cmp
adc
mov
in
pop
cwtl
dec
push
rol
mov
push
repnz
loop
in
push
lret
and
xor
jl
loopne
clc
sbb
adc
and
mov
inc
dec
cmp
pop
dec
pushf
xlat
mov
jle
xchg
xchg
push
adc
les
negb
repz
sub
adc
xlat
out
pop
pop
fsubl
cmp
pop
push
jae
lahf
jl
push
jbe
adc
dec
aaa
test
repnz
xchg
mov
ficompl
sub
push
mov
nop
ja
pushf
inc
stos
notl
cmp
fcmovnu
dec
xchg
mov
orl
insb
push
cmp
cmp
daa
push
push
outsl
push
jmp
es
sub
in
lds
std
lcall
or
outsl
or
in
sbb
mov
sbb
mov
jns
pop
cmpsb
dec
mov
xor
xchg
adc
jb
mov
sbb
dec
cmp
or
or
xor
lcall
in
xchg
push
out
das
mov
push
sahf
in
cld
push
clc
fwait
lahf
jge
dec
sub
sbb
dec
mov
mov
pop
fs
and
mov
pusha
push
mov
push
lahf
rcl
xor
jl
dec
mov
movb
and
lret
mov
imul
out
ja
pop
or
pop
cmp
xor
shr
adcb
imul
adcl
movsb
popa
clc
shl
mov
cmp
fs
dec
in
jo
mov
es
lret
das
in
pop
mov
sub
dec
mov
fisttpll
push
jl
mov
fnstenv
xchg
mov
pop
pusha
imulb
add
cmc
lret
insl
dec
add
movsb
xorb
andl
arpl
cmp
jnp
std
mull
pop
insb
ret
cs
ds
mov
aam
frstor
dec
dec
mov
rolb
inc
bound
hlt
and
jecxz
dec
into
and
push
lea
add
movsb
outsl
sbb
dec
sub
xor
fwait
div
das
dec
or
out
out
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
jmp
leave
vpsubusw
leave
repnz
cld
jmp
pop
js
jle
js
add
push
outsb
out
and
mov
sub
jnp
das
pop
aas
mov
push
dec
sub
mov
sbb
pop
xor
out
xchg
rorl
out
lret
movb
icebp
mov
out
mov
cmp
push
xchg
sbb
adc
inc
es
in
mov
dec
cmp
add
xchg
sub
jecxz
push
lock
pop
sbb
mov
xchg
push
sub
jbe
fst
fildll
pop
std
adc
add
pop
lock
and
mov
jp
out
push
jns
push
sub
xchg
pop
xchg
inc
popf
ret
dec
test
xor
shrl
std
mov
push
icebp
lds
loop
dec
add
or
aas
imul
scas
pop
mov
imul
aam
ljmp
pop
or
xor
mov
jmp
pop
mov
and
nop
cltd
das
push
or
adc
xchg
repnz
add
bound
pop
xorl
mov
pop
cmp
mov
inc
mov
sbb
jmp
jecxz
cmpsb
jo
xchg
int3
test
es
les
or
add
insb
xor
xor
xchg
fwait
mov
cli
jo
pop
push
push
js
sub
movb
add
mov
cld
dec
int
jo
and
inc
xor
int
daa
in
inc
icebp
jmp
movd
loope
mov
cmp
mov
add
adc
stos
shll
and
mov
sbb
xor
out
ss
push
xor
xchg
arpl
or
stc
jbe
cltd
mov
lods
das
daa
pop
lods
mov
mov
xor
add
xor
cs
fst
int
sbbb
gs
mov
fnstsw
mov
lds
jp
data16
js
dec
stos
stos
push
out
lret
sbb
add
sbb
data16
js
imul
rolb
mov
pop
inc
jmp
push
mov
push
cs
dec
bound
sbb
xchg
cmp
rolb
scas
repnz
jbe
push
mov
mov
jmp
ror
ror
ror
test
xchg
push
in
in
xchg
adc
js
jns
xchg
test
jp
push
fisttpl
test
adc
aam
scas
int
mov
push
sbb
push
aad
sbb
inc
sbb
insb
inc
das
mov
out
sub
daa
enter
mov
and
dec
push
icebp
xchg
repz
int
std
ret
sub
jmp
jl
xlat
popf
cmp
int
fists
xchg
rorb
stc
iret
jle
rcr
fwait
or
jno
fisttps
fisttps
call
mov
jb
out
enter
lds
add
cmp
xor
lret
jno
fimull
pop
xchg
fmuls
and
inc
lret
js
pop
inc
clc
jp
xchg
push
out
xchg
jnp
cmc
test
ret
repz
mov
sti
lret
dec
push
inc
and
les
pop
adc
into
divb
arpl
rol
lahf
fdiv
bound
mov
cmpsl
leave
daa
xchg
leave
imul
cmp
and
push
or
jp
add
pop
pushf
xor
ds
pop
clc
dec
push
movsl
cmp
jae
xchg
cmp
push
sub
and
and
out
repz
xor
lods
jl
bound
test
add
push
xor
es
imul
mov
xchg
push
dec
sbb
jb
adc
jmp
lahf
stos
lret
mov
or
popf
and
sbb
pop
sbb
mov
in
lds
out
mov
xchg
daa
cmpsl
cs
in
sti
jnp
arpl
add
adc
lods
gs
gs
repnz
mov
push
popa
data16
mov
enter
or
cmc
lds
cmpsb
sbb
jo
cmpsl
repz
dec
dec
jmp
jle
push
xchg
arpl
outsb
add
inc
and
popf
ret
dec
cmc
mov
notb
xchg
popl
mov
fcompl
lahf
cmpsl
hlt
xchg
pop
cmpsb
stc
jne
xchg
mov
ss
imul
push
push
fmulp
add
push
clc
or
or
lret
jo
pushl
ret
mov
sub
lahf
daa
mov
xor
xor
fs
cli
cltd
sub
mov
pop
sbb
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
cmp
cmp
rcr
fidivl
pusha
fsts
sbb
jle
js
add
or
add
std
aaa
fcom
dec
fldcw
shlb
inc
xchg
sbb
sbbl
hlt
push
int
sub
or
sahf
mov
lds
mov
in
roll
adc
cmc
ret
push
frstor
mov
aad
add
dec
xor
xor
jae
insl
test
mov
test
push
enter
mov
push
loop
testb
lods
pushl
mov
sub
loop
test
pop
push
xor
divl
out
mov
scas
mov
pop
dec
pop
jb
cmp
das
enter
jbe
push
mov
loope
hlt
insb
aad
ret
cmp
mov
je
dec
dec
out
fs
mov
inc
mov
push
bsf
jnp
jo
test
and
and
xor
fidivl
jo
popa
ss
out
fmuls
xor
notb
pop
out
popa
cmp
xchg
add
lcall
jle
pop
adc
sysret
ss
mov
pop
cli
int3
sub
xchg
push
lds
inc
repz
pop
imul
jo
xor
bound
mov
arpl
xor
cli
and
repnz
push
pop
imul
orb
add
and
pop
mov
inc
in
and
clc
jp
inc
adc
popa
out
aad
xchg
lds
or
mov
sahf
shr
push
mov
mov
cmp
push
xor
aas
and
std
pop
or
hlt
imul
jnp
jge
insb
flds
icebp
mov
arpl
sub
push
jp
jp
mov
mov
dec
outsb
pop
or
out
lahf
cltd
fiadds
push
mov
arpl
jg
lock
adc
es
ficomps
add
mov
push
sbb
sbb
mov
test
test
push
mov
aaa
mov
jp
daa
cmp
mov
into
adc
pop
aam
ljmp
dec
adc
mov
cmpsl
movsl
push
rol
les
mov
add
hlt
dec
inc
bound
pop
push
mov
andl
xchg
orl
xchg
mov
ljmp
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
jmp
xlat
aas
mov
fwait
clc
movb
sbb
jle
js
loop
xchg
pop
pop
sbb
shll
fnsave
sbb
jle
insl
add
cmpsl
jo
inc
or
xlat
call
je
mov
test
subl
push
lret
pusha
and
push
into
mov
mov
or
xor
fcoml
add
test
inc
and
sub
xchg
push
movsl
repnz
out
hlt
cwtl
ds
push
mov
mov
xchg
jbe
add
pusha
sub
sub
imul
js
cwtl
push
sahf
jae
lret
jecxz
xor
push
pop
xor
dec
ret
mov
ret
pop
cmp
and
xchg
cmc
inc
pop
pop
sbb
sbb
pusha
addb
insb
sbb
mov
cmp
xchg
test
mov
in
ljmp
notl
icebp
lock
insb
xchg
enter
xor
ljmp
or
sbb
rolb
into
pop
lds
ret
lahf
ljmp
mov
popf
cmp
fadds
push
pop
jb
mov
aam
cmc
lret
mov
mov
jb
or
or
inc
in
xor
fs
ret
mov
lock
das
or
dec
les
dec
add
sbb
rolb
ret
lret
mov
mov
je
sub
loop
mov
sub
sub
or
iret
ds
cmpsl
sahf
pop
inc
jg
push
add
xor
mov
push
cmpsb
jecxz
jp
adc
push
test
xchg
pop
repnz
cmpsl
mov
lds
adc
push
inc
pop
and
jbe
dec
push
adc
cwtl
jb
dec
adc
and
jbe
xlat
jo
dec
mov
test
push
out
cmp
ret
sub
repnz
pop
rcl
add
testb
xchg
and
pop
lea
push
jo
mov
mov
hlt
mov
cld
gs
mov
jmp
jae
jg
out
loope
loopne
add
push
mov
loop
lcall
mov
aaa
sbb
xchg
orb
push
jle
test
lret
cmpsl
cs
subl
mov
jmp
into
rol
ror
mov
stos
jnp
adc
js
jle
js
pop
arpl
fwait
pop
jle
pop
mov
add
fcoml
outsl
stos
ds
cmovne
sbb
sahf
push
lock
test
in
push
add
cmp
fwait
cmc
icebp
leave
in
mov
xchg
lods
clc
xor
popa
in
loope
xor
in
jns
push
or
pop
xchg
mov
mov
fldcw
sub
add
add
gs
inc
mov
lock
pop
jecxz
mov
pop
jg
dec
not
xor
push
mov
repz
jns
dec
nop
sub
mov
jmp
dec
stos
sub
xor
pop
loop
add
fcomps
scas
inc
cmpsl
push
xor
outsl
adc
jb
ret
push
pop
pop
mov
sub
lock
ja
xchg
outsb
addl
mov
mov
or
fdivr
fs
jmp
pop
sub
lods
push
rol
idivb
cwtl
xchg
cwtl
rorb
mov
inc
mov
xchg
stc
xorl
push
cmpsb
pop
mov
push
sbb
and
sti
inc
mov
nop
push
or
call
stc
push
out
push
mov
fcomip
or
mov
cltd
insb
mov
pop
sub
aam
dec
int3
je
pop
pushf
popf
push
sar
xor
fwait
inc
xor
test
icebp
int3
mov
shr
push
jl
mov
ljmp
dec
into
sahf
mov
push
push
cmp
fistpll
dec
xor
sub
lret
test
cwtl
fsts
jg
inc
inc
inc
rorb
sub
imul
out
adc
scas
add
fistps
cmp
cmp
push
int
jmp
mov
xor
adc
in
outsb
scas
cltd
pop
adc
push
rcll
mov
shl
aas
xchg
arpl
cmpsb
dec
ja
pushf
pusha
push
jle
mov
enter
push
cmpsl
sub
fcmovnb
mov
repz
cld
cmp
scas
and
loop
jnp
rol
or
pop
stos
ja
testl
call
cmc
cmp
mov
out
or
pop
nop
daa
or
xchg
fldz
mov
mov
lcall
out
imul
inc
mov
fcompl
popa
mov
cmpsl
mov
test
cld
push
loope
jmp
es
jne
mov
or
push
xchg
cmp
je
jmp
leave
rol
rcr
rcr
ss
fwait
jne
imul
and
jle
js
clc
fdivrs
jmp
pop
je
dec
dec
ret
ds
push
jb
in
inc
popf
cltd
add
repz
push
sbb
lods
dec
push
leave
jae
movsb
lea
fdivr
xchg
sub
ds
cmpsb
sub
xchg
push
cmp
test
cmp
and
xchg
shrb
sbb
ret
je
add
sbb
sti
aas
dec
cli
xchg
mov
and
arpl
xlat
lret
rorb
dec
aaa
push
mov
cli
imul
in
xchg
insb
in
inc
push
out
sub
mov
mov
mov
adc
lret
jns
out
test
add
lret
mov
sub
bound
stc
cmc
mov
aam
int
xchg
sub
mov
mov
sbb
cltd
neg
xchg
adc
adc
dec
gs
inc
xlat
pop
fidivs
jno
aam
movsb
sub
js
stos
adc
outsb
pop
aad
loope
nop
xlat
decb
ds
add
xchg
gs
popa
push
xor
pushf
lret
fs
or
aaa
adc
outsb
cltd
addr16
or
jle
ret
je
pop
push
push
xchg
jno
cmc
jmp
push
in
mov
data16
jbe
dec
pop
mov
add
aam
aad
dec
lret
jnp
cmp
out
movsb
out
fadd
sub
je
pop
push
leave
mov
xchg
push
leave
aad
push
cltd
mov
xlat
jge
into
ds
jne
adc
pusha
mov
clc
cmp
out
jp
mov
xor
and
or
out
lods
inc
fldcw
jbe
icebp
pop
mov
fsubrl
mov
xchg
mov
sbb
lea
and
int
and
jg
and
sub
push
fwait
sub
adc
loope
sbb
outsl
fcompl
orb
adc
push
inc
sbb
cli
push
test
cmp
mov
inc
jae
out
sarb
inc
mov
and
fistpl
test
jne
test
pop
mov
test
insb
inc
mov
and
pop
rorl
or
cmp
jp
fmuls
add
mov
xor
add
mov
jmp
jmp
ds
lret
fldenv
outsb
subl
and
jle
js
jne
pop
loop
test
or
push
mov
mov
movsb
mov
push
and
cmp
dec
add
repnz
fwait
xor
shll
push
cmpl
ja
lods
jne
or
push
cli
inc
cmp
outsb
push
sub
outsb
push
or
movsl
ss
aad
stos
sarb
ja
jae
int
jp
pusha
mov
dec
cld
loope
jl
xor
mov
iret
mov
cwtl
nop
jp
fstpl
xchg
push
xor
pop
sahf
inc
fdivrl
mov
lcall
andl
pop
icebp
stos
and
out
add
pop
sub
or
mov
jecxz
imul
ljmp
out
inc
or
xor
add
scas
gs
shrl
ret
push
repnz
cld
enter
test
or
out
lea
insb
in
push
xchg
aaa
adc
lahf
lahf
fimuls
popf
enter
add
cmp
or
shr
jns
arpl
arpl
outsb
jae
xchg
and
bnd
pushf
mov
xchg
pop
fcomps
add
xchg
push
js
test
lods
cmc
push
rcrb
orb
sub
jno
pop
andb
aad
pusha
push
cmc
in
aaa
sub
movl
clc
subb
mov
int
popf
aad
mov
push
mov
ficomps
arpl
push
pop
jb
aad
jne
out
fwait
ss
mov
pop
mov
mov
cmp
cltd
mov
sarl
mov
mov
fcomps
scas
add
gs
jp
pop
adc
out
xchg
push
data16
mov
nop
xchg
inc
in
aam
out
cli
or
jo
jns
jno
arpl
pop
lds
jno
jbe
ss
mov
xor
popf
flds
ss
js
jge
xchg
ficoml
insl
mulb
cmp
stos
insl
fdivrl
push
xchg
push
mov
loopne
and
stos
les
xchg
xor
cltd
xchg
test
and
insb
fidivs
lret
mov
mov
xchg
xorl
jmp
mov
mov
mov
jmp
aas
leave
enter
fxch
mov
scas
cmp
js
jle
js
pop
push
and
js
pop
lahf
inc
dec
aad
push
push
movsl
mov
or
insl
test
sbb
inc
inc
inc
fsubr
leave
fistpll
push
lahf
sub
gs
jae
hlt
sbb
in
push
gs
pop
enter
add
mov
sbb
xor
or
mov
pop
imul
mov
jge
and
mov
cmc
sub
jo
imul
aad
test
repnz
mov
lods
sub
jg
in
jl
icebp
pusha
into
movsl
inc
stos
jb
int3
hlt
dec
dec
inc
test
cmpsl
jno
pop
lcall
pop
stos
loopne
cmp
out
jmp
lock
mov
rol
aaa
xlat
adc
shl
nop
in
adc
filds
push
les
mov
sbb
fidivrl
arpl
imul
dec
mov
fldl
fs
out
sbb
negb
fnsave
gs
sbb
int3
push
lea
shrl
inc
pop
stc
xor
adc
sti
cltd
jne
push
inc
xor
jns
lcall
daa
xor
pop
fstl
mov
sti
push
out
loop
mov
fadds
dec
cmp
cmpl
mov
sub
imul
xchg
into
xchg
mov
in
in
mov
xchg
jp
mov
push
or
out
add
sub
js
sbb
int
and
push
jge
mov
mov
push
arpl
mov
ja
pop
xor
loope
dec
in
pop
cmpb
leave
cli
or
aas
movsl
sti
call
int
inc
xor
jmp
push
lods
insb
lret
sub
mov
xchg
shr
jecxz
add
fisttpl
mov
je
vmwrite
lahf
push
ljmp
imull
add
mov
mov
inc
lods
jl
add
push
sbb
lret
sahf
jge
pop
orb
sbb
call
adc
inc
addl
xchg
es
shlb
cmp
push
pop
aaa
lahf
sub
fidivrl
imul
and
and
add
pop
es
shll
add
mov
adc
or
inc
or
jne
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
mov
add
push
xor
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
decl
movl
mov
not
jmp
rol
lret
leave
lret
leave
lds
dec
inc
insb
cmp
arpl
sub
dec
jle
js
xor
js
push
mov
push
mov
mov
sbb
or
sub
aas
aas
sbb
stc
insl
add
leave
nop
xor
sbb
push
inc
stos
movb
cmp
rorl
test
jle
into
dec
iret
mov
loope
jmp
add
js
pop
jnp
push
jne
movsb
add
xchg
push
pop
push
push
fistps
and
addr16
test
pop
orb
stos
jnp
cs
pop
adc
push
xchg
std
cmpsb
dec
mov
xchg
cs
xchg
outsl
xchg
ljmp
cmp
adcl
mov
mov
sbb
cmp
mov
data16
es
shll
lea
aam
ss
flds
and
dec
mov
mov
xchg
push
mov
rcrl
or
sbb
sbb
lock
adc
out
fxch
sub
add
inc
xchg
add
pushf
aaa
in
and
xor
loop
int3
mov
mov
lea
pop
cmp
push
rolb
leave
push
es
fwait
jge
xchg
leave
push
test
push
loopne
inc
add
or
jp
push
jp
cld
lds
into
divl
jge
push
mov
lods
pop
dec
or
push
mov
int3
jns
xor
insl
aas
pop
and
loop
addb
test
jle
xor
aad
roll
dec
or
push
jnp
out
push
call
lods
fsubs
inc
add
sub
and
xor
inc
js
or
sub
add
out
cmp
dec
dec
ret
inc
call
cmp
pop
push
jg
dec
imul
adc
cmp
into
jae
rorb
scas
aaa
loopne
lret
push
cs
cmp
inc
scas
in
aaa
cwtl
scas
lcall
lds
jg
jp
xor
mov
leave
xor
rclb
xor
push
cwtl
inc
in
aas
mov
test
add
outsb
loop
add
sbb
cmpsb
jge
xor
inc
and
movsb
frstor
movsl
mov
xchg
or
dec
inc
xchg
dec
mov
pop
push
xor
cli
roll
daa
cwtl
xlat
cwtl
pop
js
arpl
xchg
sbb
pop
cmpsl
loop
cwtl
sahf
ja
fists
cltd
xchg
into
movd
or
xor
js
and
mov
fmuls
jo
mov
insl
std
popf
mov
outsl
das
or
jne
lret
sbb
mov
popf
mov
outsl
scas
out
in
push
cmp
popf
xchg
adc
aaa
mov
pop
xchg
in
adc
dec
outsb
fisttps
mov
lods
add
call
and
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
push
push
call
jmp
xor
jmp
rol
int3
pop
test
bound
sub
dec
jle
js
mov
inc
add
pop
scas
add
cltd
mov
mov
add
xchg
sub
repz
rolb
or
sti
lods
cmpsb
jne
add
adc
jp,pn
jns
sarl
mov
mov
push
cs
adc
pop
or
jge
sub
jns
xor
std
mov
shlb
cmp
lods
test
pop
mov
rclb
sbb
push
dec
shrb
jnp
and
cmp
pushw
mov
push
loope
negb
xchg
lret
cmpsb
sbb
nop
or
test
fiaddl
add
aas
xchg
jnp
dec
mov
into
mov
hlt
test
int3
xor
jno
into
iret
sub
cmovno
gs
jmp
sub
jp
and
ja
and
roll
xchg
addl
sub
das
xor
rcrb
lea
scas
sti
sbb
dec
loope
inc
xchg
push
mov
add
pop
mov
push
push
mov
movsb
mov
mov
loopne
cli
and
lahf
xor
popa
ret
xchg
push
pop
les
push
and
sub
mov
cmpsl
lcall
call
mov
test
or
sarb
movsl
dec
fists
out
push
out
xor
inc
insb
mov
lret
xchg
push
ljmp
jb
lcall
popf
out
and
jno
push
pushf
je
xchg
testb
fadds
lahf
jb
leave
daa
scas
adc
rorl
jae
adc
sarl
in
in
cs
insl
ret
pop
dec
sub
or
mov
aam
cld
adc
inc
push
mov
lods
mov
and
mov
bound
test
lods
mov
inc
hlt
imul
imul
in
test
xchg
popa
outsl
int
lea
aad
or
movsl
cmpsl
cld
add
movsb
pusha
fs
popf
jno
sub
pop
jne
mov
stos
jl
arpl
adc
aam
add
fiaddl
call
aam
lods
pop
sbb
call
icebp
aas
xor
or
adc
int3
xchg
outsl
xchg
mov
fistpll
xchg
les
cmpsl
arpl
mov
push
clc
sar
movsl
pop
dec
inc
jl
pop
dec
cmp
sahf
mov
arpl
sbb
push
xchg
and
loopne
pop
sbb
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
jmp
enter
aam
mov
int3
push
out
sti
adc
js,pn
dec
jle
js
mull
cmp
iret
fldenv
pop
pop
mov
dec
jp
adc
jno
fbstp
xchg
clc
mov
sarb
mov
pop
ffreep
push
add
lahf
sub
sbb
jle
inc
addr16
imull
leave
fxtract
dec
push
shrb
cmpxchg
mov
pop
or
rcl
mov
and
movsl
lods
dec
sub
mov
inc
adc
iret
jae
mov
xchg
mov
stos
or
out
and
mov
xchg
xchg
mov
lahf
pop
inc
idivl
and
mov
adc
adc
imul
negl
xor
and
imul
cs
mov
addb
mov
das
rcr
push
mov
jns
mov
or
adc
inc
ja
pop
out
or
fsin
mov
inc
xchg
sbb
ljmp
test
mov
es
pop
mov
dec
fisttpll
mov
add
into
dec
dec
sbb
movl
gs
sub
mov
inc
lods
or
mov
inc
adc
dec
lea
ljmp
or
in
inc
and
inc
popf
mov
lds
sbb
mov
dec
mov
xor
pushf
add
jae
push
movsl
clc
shll
push
clc
pop
popa
enter
mov
hlt
push
jl
push
das
jbe
xor
rolb
insl
add
shlb
les
test
push
mov
or
adc
in
imul
mov
pop
add
cltd
scas
xchg
adc
dec
rcll
cltd
or
sub
insl
and
sbb
outsb
jp
jae
movaps
dec
les
jno
adc
mov
jle
or
inc
stos
or
jmp
mov
dec
lods
adcb
add
cmp
jecxz
das
call
inc
stc
js
push
inc
shrb
xor
insb
dec
adc
fdivrl
mov
scas
dec
iret
and
xor
je
aaa
insl
mov
scas
jbe
jb
enter
ja
mov
xchg
push
or
inc
sub
xchg
icebp
jnp
jae
out
mov
add
add
scas
inc
xor
popf
mov
push
int
dec
les
xor
outsb
cmpsl
inc
jno
mov
xchg
adcb
inc
stos
arpl
ret
imul
out
mov
sahf
in
mov
test
test
test
jbe
adc
jp
popf
imul
xor
out
andl
sub
sbb
mov
add
cmp
je
mov
mov
xor
jmp
rcl
leave
aad
xor
pop
iret
or
xor
dec
jle
js
leave
mov
xor
jle
fs
inc
inc
stos
and
out
xchg
inc
daa
jne
push
jns
or
mov
dec
pop
or
cmpsb
iret
lret
sbb
cmc
push
lods
fiaddl
xor
xchg
bnd
sbb
movsl
dec
dec
mov
xchg
fidivs
mov
adc
popf
imul
lret
adc
jg
cmp
mov
call
ret
loopne
stos
inc
mov
faddl
inc
hlt
xchg
fidivrl
popl
ja
xchg
rcl
test
xlat
inc
int3
add
lea
stos
jg
xchg
mov
les
loope
rcll
add
jbe
add
clc
pusha
movsb
repz
xchg
out
icebp
cmp
mov
jbe
ja
push
dec
or
xor
xor
and
mov
mov
add
hlt
inc
add
fsubp
pop
xchg
sbb
fnstenv
lret
insl
sub
adc
movsl
mov
jmp
mov
out
jge
arpl
clc
mov
and
scas
sarb
add
loop
mov
test
mov
sub
popf
and
mov
mov
mov
sbb
test
cld
fisubs
mov
das
dec
push
movsl
leave
add
rcrb
je
push
bound
jne
in
les
adc
and
xor
add
mov
xchg
ds
jnp
or
dec
inc
xor
pop
iret
sub
push
sub
pop
jno
mov
adc
call
push
roll
ds
test
outsl
mov
pop
and
inc
jnp
inc
pushf
jne
mov
shlb
jmp
push
test
mov
jmp
out
insb
adc
xchg
mov
icebp
shr
mov
jg
dec
xor
pusha
jge
in
xchg
subb
mov
adc
cmc
adc
push
xor
test
aam
pop
aam
jge
jmp
fdiv
adc
adc
loop
dec
fdivrp
sbb
lcall
lahf
int
pop
pop
adc
pop
les
sahf
clc
lods
lahf
pop
inc
sub
in
ret
lods
pop
fdivrl
pushf
es
push
or
subb
adc
sahf
sahf
sti
pop
and
mov
loopne
fisubrs
ss
push
decl
pop
daa
xchg
lds
mov
shrb
aam
inc
out
mov
js
jmp
ret
sub
ljmp
in
enter
and
add
shll
fucomip
subb
clc
add
xor
add
cmp
ja
push
jmp
mov
jmp
aas
rol
int3
aad
dec
sub
outsl
call
jle
js
add
pop
pop
fwait
cmpsl
fisubl
push
or
jle
pop
repz
xchg
popf
dec
mov
push
stos
push
data16
inc
rorl
stos
cmpsb
fs
or
and
pop
hlt
jb
inc
fnstcw
lock
in
imul
xor
dec
jnp
gs
mov
out
mov
std
sub
push
jmp
in
or
adc
shrl
pop
aam
and
in
call
lods
mov
mov
addr16
dec
push
hlt
adc
and
out
mov
ss
lods
inc
aas
dec
sub
cmc
xor
es
cld
push
ficomps
mov
jmp
icebp
mov
movsb
out
jae
mov
shrl
push
sbb
imul
loop
dec
push
in
cmp
mov
jmp
sahf
inc
adc
pop
mov
add
ds
add
inc
xor
mov
loopne
mov
pop
mov
lds
xchg
mov
xchg
xchg
popa
adcl
dec
xorb
lcall
mov
nop
push
loopne
lret
cmp
dec
into
add
sahf
inc
xor
adc
loopne
mov
inc
aad
sbb
add
sbb
cltd
aaa
in
lcall
or
sahf
mov
insb
mov
xchg
scas
cmp
hlt
inc
pop
or
and
fs
and
pop
bound
sbb
popl
je
dec
lea
sub
and
lcall
cmp
das
xchg
dec
add
push
rol
insl
cld
ds
xchg
cld
leave
loop
lock
mov
mov
inc
pop
addl
cmpsb
push
je
les
das
sub
insb
mov
push
insl
pop
push
rcr
add
mov
cmpsl
cmpsl
ljmp
shll
bound
pop
mov
add
aaa
sbb
xor
jge
push
pop
ss
mov
pop
inc
inc
mov
cld
adc
inc
mov
lcall
sub
idiv
roll
sbb
jno
pop
mov
clc
leave
arpl
imul
rorl
mov
lcall
xor
jmp
test
and
jae
or
ljmp
cmp
scas
xchg
jae
mov
fwait
loopne,pn
in
sbb
push
add
jne
jp
pop
push
adc
cwtl
in
inc
icebp
add
xchg
xchg
or
pop
xchg
ds
pop
mov
mov
orl
mov
jmp
int
rol
ror
aad
inc
jecxz
fmul
movsb
sbb
jle
js
lea
in
inc
aaa
push
subps
sbb
popa
cwtl
dec
push
setnp
mov
and
rcrl
xor
xor
call
pop
in
clc
add
mov
inc
adc
stos
jns
out
sti
sarl
mov
in
std
into
movsl
jns
xchg
jecxz
aam
sbb
inc
sub
int3
stc
iret
pop
cmp
out
mov
dec
and
iret
mov
cli
jo
xchg
testb
sub
das
fbld
adcb
adc
rcrl
lock
test
xchg
fwait
out
sub
cmp
dec
adc
lds
loop
inc
sahf
and
push
bound
pop
in
sbb
jmp
adc
lcall
loop
add
push
pusha
inc
leave
rorb
push
mov
add
pop
repz
shlb
loope
inc
and
stos
gs
adc
jecxz
out
jp
out
mov
pop
popf
imul
call
push
xor
sbbb
add
popl
jge
push
mov
in
pushf
aas
lea
fucomip
rorb
loope
mov
leave
push
sbb
leave
ljmp
iret
mov
mov
iret
mov
dec
jnp
xorb
ret
dec
inc
mov
sbb
xor
mov
xchg
lret
jl
stc
sbbb
test
notl
popw
fdivl
pop
sub
cmc
pop
div
rcrl
mov
xchg
mov
add
adc
pop
adc
ss
repz
jns
push
push
add
cmp
jl
xlat
bound
push
pusha
cwtl
mov
pop
mov
mov
out
mov
inc
pusha
stos
shrl
and
xor
fiadds
movsl
dec
xchg
std
stc
dec
ret
push
push
xchg
outsb
scas
pusha
test
jge
jmp
sbb
xchg
inc
stos
mov
fdivp
test
repz
add
dec
push
in
cmc
sub
mov
cmp
fidivrl
gs
inc
sbb
or
mov
lret
aaa
add
es
andb
inc
push
xor
lahf
addl
movsb
add
mov
and
push
inc
popw
negb
sub
adc
aad
loop
add
sar
imul
push
lods
add
outsb
cmpsb
jmp
push
add
rcl
push
adc
cld
push
inc
pop
test
das
lcall
ficoms
jge
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
rol
lret
ret
shrl
insb
roll
dec
adc
js
dec
jle
js
jmp
pop
xorb
stos
and
mov
movl
pop
sbb
shl
test
mov
fmulp
sarb
and
lds
dec
insb
pop
inc
sarl
jns
ficoms
jecxz
mov
mov
jno
loopne
push
dec
xchg
push
ret
icebp
lods
repnz
xchg
push
loopew
adc
ficoms
test
imul
pushf
add
stc
xor
dec
popf
inc
dec
sub
push
ja
mov
jno
and
inc
pop
push
adc
in
lea
lcall
inc
loope
push
cmp
call
ja
push
jnp
mov
mov
mov
mov
mov
and
lret
and
mov
scas
add
lret
ds
imul
add
mov
inc
mov
sbb
xchg
rep
xor
push
and
repz
mov
sbb
call
cld
sbb
icebp
dec
repnz
hlt
cmp
mov
movsl
imul
je
sub
pop
sub
jne
adc
add
fidivs
in
int
xchg
fsubr
not
stc
adc
gs
fwait
pop
movsl
or
adc
adc
mov
js
and
or
inc
dec
fiadds
fwait
dec
sbb
outsb
mov
cmc
stos
fistps
inc
test
and
xchg
xchg
xorb
xchg
test
imul
ficomps
mov
or
sub
ss
lds
jae
aad
mov
call
adc
mov
filds
bound
test
push
push
cmpsl
pop
jns
pop
mov
jmp
mov
sbb
loope
out
enter
xchg
roll
dec
or
icebp
push
into
cmp
cmp
push
jo
decl
orl
mov
mov
imul
or
movsb
pop
sbb
jne
dec
push
les
aas
into
loope
push
addl
sbb
lds
lahf
ja
js
shrl
jno
and
int3
dec
adc
jl
stc
fildl
pop
push
leave
inc
lods
push
rcrb
pop
adc
xorb
or
lahf
pusha
jbe
test
xor
fistl
mov
xchg
push
hlt
lcall
dec
pushl
dec
jg
jo
inc
aad
int
jl
stos
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
jmp
cmp
fnstcw
jecxz
jb
cmp
cmp
dec
jle
js
aad
push
adcl
add
cmp
call
fildll
loop
push
repnz
insl
mov
sbb
pop
cmpsb
aam
sub
insl
add
sub
mov
test
aas
push
sarl
adc
or
jp
fdivl
inc
cmp
imul
repnz
enter
xor
dec
in
gs
arpl
mov
js
ret
call
divl
add
jge
cmp
call
xchg
xor
stos
mov
ja
add
loop
cmpsl
sbb
jecxz
mov
sub
xor
imul
and
jae
xchg
cmp
andl
das
out
mov
das
sbb
outsb
aam
cmc
outsl
mov
loope
xchg
enter
cmp
bound
cwtl
sbb
sbb
ljmp
xchg
repz
mov
xor
sbbb
pop
add
pop
mov
leave
mov
pop
scas
sarl
addr16
fs
js
push
incl
add
test
lock
cmp
xlat
daa
iret
jmp
jle
adc
and
inc
adc
shll
hlt
cld
and
add
into
ret
sub
leave
dec
sbb
sbb
dec
inc
out
cwtl
out
adc
push
cwtl
xchg
aaa
je
mov
jno
push
mov
inc
iret
ffree
pop
jp
and
adc
push
mov
ss
sub
push
ss
loopne
inc
jb
repnz
andl
pop
cs
mov
ret
sti
lcall
int
jo
int
pop
mov
push
push
cli
push
or
ljmp
mov
sbb
fbstp
xor
paddsb
lods
sub
or
mov
scas
cli
xchg
or
loop
xchg
lods
jmp
adc
rorb
add
xchg
movsl
sub
lret
lret
out
inc
jle
outsl
or
mov
cmpsl
pop
xchg
sub
sbb
jns
incl
xor
test
leave
cmp
out
push
lcall
mov
daa
mov
xchg
movsl
rorb
jne
pop
lret
stc
js
cld
aad
outsl
mov
push
out
add
out
inc
mov
jge
lahf
inc
mov
hlt
pusha
pshufw
jle
lods
add
pop
push
insb
pop
cmp
push
lahf
push
je
lcall
add
popa
inc
sbb
rcrl
mov
jmp
add
rol
ror
leave
rcr
aaa
mov
sub
mov
js
dec
jle
js
movsl
jmp
mov
adc
int3
mov
cmp
push
cmc
jno
push
sti
adc
inc
ds
jo
jmp
mov
lds
inc
xchg
sbb
rorb
js
das
dec
mov
sbb
mov
push
sub
push
xlat
xchg
pop
add
adc
fwait
lds
loop
out
xor
movsl
adc
xchg
lods
rorb
rcrb
arpl
out
lret
or
gs
and
mov
stc
xchg
xor
xor
lret
mov
mov
add
in
sti
insb
xchg
inc
shlb
les
push
sahf
mov
loope
mov
fldcw
fadds
or
dec
xchg
jp
pushf
push
xchg
or
sbbb
mov
jno
imul
orl
mov
sbb
push
cmpsl
mov
repnz
inc
sbb
push
mov
or
ja
fsubr
hlt
jo
mov
dec
out
xchg
cmp
jb
mov
in
or
test
and
test
pop
or
xchg
lcall
add
push
das
mov
loopne
push
sbb
jg
fcomip
push
in
lcall
stos
imul
sbb
sahf
mov
jmp
std
mov
pop
dec
xchg
mov
scas
fwait
imul
repz
ret
inc
popa
mov
arpl
pop
mov
out
add
es
movsl
xlat
cmpsb
mov
fcoms
pop
mov
cmp
cli
fcmovu
mov
mov
shrl
dec
sbb
jns
gs
lods
lcall
repz
push
cs
arpl
mov
mov
cmpsb
push
cmpsl
inc
jnp
cmp
std
fs
cwtl
out
mov
mov
mov
mov
xchg
push
xor
fisttpl
dec
pop
mov
sbb
mov
adc
sub
or
dec
inc
ret
repz
xchg
mov
cmp
sarb
stc
inc
lock
cmc
mov
lea
add
test
out
les
sub
movsl
aas
out
rolb
inc
mov
add
pop
fnstenv
aaa
sti
or
cmpsl
movsb
scas
out
ret
adc
addb
pop
pop
xor
negb
jbe
jp
cmp
pop
sub
in
or
add
lret
into
xchg
pop
jo
pop
nop
and
jae
in
dec
in
imul
xlat
or
arpl
push
std
fs
jmp
add
iret
rcl
lret
ror
xlat
lods
and
repnz
js
dec
jle
js
inc
pop
dec
mov
outsb
dec
lds
shll
dec
cltd
xor
xlat
hlt
mov
jmp
sub
mov
in
jmp
push
push
cmpsl
pop
mov
nop
enter
in
outsl
cmp
data16
subb
call
mov
xchg
jp
mov
cld
jge
push
jns
fisttpl
push
mov
push
nop
cmp
jmp
xchg
addr16
cmp
or
bound
mov
or
mov
mov
aad
outsl
inc
cmp
xchg
cltd
inc
add
gs
leave
popf
mov
enter
pop
fbld
roll
pop
cld
ljmp
xlat
inc
push
scas
icebp
dec
out
cs
leave
loop
stos
cmp
ljmp
xor
cld
sbb
xchg
mov
stc
movsl
aas
sbb
loope
fimuls
xor
call
icebp
sub
adc
xor
push
push
push
ficomps
ds
mov
push
add
jns
std
dec
add
push
and
jo
aad
stos
xor
mov
mov
shlb
popf
mov
mov
enter
ficoms
shlb
jbe,pn
pop
pop
fldl2t
adc
or
mov
mov
dec
sbb
add
fwait
rol
cmp
xchg
push
out
xor
inc
sub
imul
or
roll
mov
rclb
adc
loopne
xchg
test
lahf
scas
ret
aaa
push
xlat
lahf
pop
adc
stos
cmpb
jmp
out
js
cmovb
call
insb
std
mov
jmp
repnz
mov
mov
test
mov
nop
mov
mov
jbe
lds
cmp
sahf
insl
inc
out
pop
mov
dec
xlat
push
mov
dec
pusha
sti
nop
jl
xor
cmp
jae
in
sbb
aas
mov
aad
std
jns
and
and
test
ret
stos
xchg
fwait
push
dec
imul
xchg
inc
cmp
fs
cld
das
out
cwtl
cmp
mov
imul
mov
pop
imul
cmp
xchg
push
mov
mov
aas
shll
pusha
mov
movsl
loope
sti
scas
mov
jmp
or
mov
add
push
pushl
dec
or
rorb
int3
adc
aas
inc
pop
fcoml
repnz
push
xchg
repnz
pop
jns
ret
xlat
jg
mov
ret
dec
inc
jmp
jl
leave
or
pop
adc
div
mov
jmp
aas
ret
rol
sbbl
xchg
faddp
js
dec
jle
js
mov
mov
sbb
push
rclb
pushf
roll
cmpl
das
int
add
jae
cmp
js
scas
cmp
or
add
ljmp
inc
dec
xchg
incb
xor
lea
addr16
imul
cmp
fdivl
add
scas
sar
jnp
jo
sub
xchg
pushf
sbb
prefetchnta
mov
pop
mov
and
jb
faddl
xor
pop
mov
not
mov
mov
into
and
je
rcl
ret
sbb
rolb
sub
int3
sub
cmc
pop
lahf
mov
xor
xor
int
push
xlat
cmpsl
leave
popa
xchg
fimuls
jae
lret
add
xchg
pop
jnp
out
je
rcr
fdivl
xchg
add
repz
std
jne
mov
or
in
mov
jp
out
test
je
jb
pop
dec
ret
mov
movsb
or
push
push
lds
mov
and
rol
rolb
sub
or
xchg
mov
mov
xor
dec
jbe
ss
cmc
sub
xchg
test
fs
inc
inc
mov
int3
adc
mov
ficomps
ret
push
or
add
mov
loopne
dec
sbb
cmp
xchg
mov
pop
mov
jecxz
pop
dec
movsb
dec
rorb
and
pop
mov
adc
daa
mov
lds
inc
xor
cltd
pushf
bnd
insb
sub
fdivrl
or
test
jo,pn
stos
mov
sti
scas
dec
pop
das
into
sbbl
and
cwtl
or
test
sbb
pop
push
add
movsl
and
int3
inc
cmpb
and
xchg
jle
imul
pop
loope
sbb
sub
cmpsl
xchg
test
sbb
test
adc
daa
icebp
in
aaa
add
xchg
sbb
adc
push
cmp
push
xor
pusha
adc
jns
or
fs
mov
sub
push
sub
fdivrl
ret
dec
push
adc
lahf
hlt
iret
movsb
daa
and
icebp
mov
movsl
jle
mov
fisubl
dec
mov
cmpsl
fmull
iret
out
dec
pop
shll
push
jg
sbb
or
and
add
inc
lret
or
leave
and
daa
and
pop
jae
xlat
repz
xlat
jns,pn
mov
jb
add
pop
pop
cmp
inc
adc
xchg
pop
notb
xchg
push
xchg
mov
dec
sub
xchg
and
or
mov
jmp
ds
cmp
mov
xchg
xor
js
dec
jle
js
mov
mov
xchg
iret
jp
sub
mov
movsl
and
add
jle
cs
negb
fwait
jo
aas
or
scas
cmp
fildl
xchg
or
mov
popa
outsl
jbe
mov
xchg
mov
xchg
imul
sub
jbe
mov
fmul
jl
mov
pop
push
or
cs
pop
cld
pop
push
and
dec
mov
ljmp
sub
and
test
gs
mov
sub
or
scas
or
filds
and
flds
sahf
xchg
shrb
scas
scas
leave
jge
int3
xchg
mov
sahf
stos
adc
pushf
lods
adc
stos
mov
add
lods
fimull
test
pusha
jg
mov
mov
or
stc
adcb
in
dec
xchg
cmp
rolb
int
call
pop
mov
out
clc
sub
frstor
pop
std
cmpsb
rorb
sub
pop
imul
push
push
popa
nop
inc
mov
and
ret
and
roll
push
dec
mov
ss
push
imul
bound
lds
lret
movsw
divb
add
popf
dec
filds
popa
or
aaa
cmpb
sub
cs
dec
pop
ret
fistpl
js
sbb
lock
cmp
frndint
push
lret
ss
mov
in
sbb
adc
lock
lahf
imul
aas
xor
sti
lods
xor
sbb
push
test
adc
cwtl
mov
or
ret
rolb
nop
cmpsl
xchg
mov
nop
mov
int
add
cmp
push
sub
xchg
lods
filds
sarb
and
sub
mov
or
bnd
add
cmp
call
sti
fcoml
ficomps
mov
sbb
out
in
popf
sti
hlt
mov
sarb
sbb
clc
loop
jae
movsb
jle
cmpsb
jle
and
mov
xorl
mul
ja
add
ljmp
pop
cmp
ds
dec
mov
call
fwait
lods
mov
jne
xchg
aas
outsb
int
arpl
mov
into
cmc
cmp
jmp
lods
in
push
shl
sub
movsb
mov
outsl
or
inc
scas
jg
push
fs
in
xor
cmp
inc
mov
add
sbb
ds
lcall
adc
jmp
and
push
sbb
pop
inc
call
repnz
movsl
mov
sbb
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
and
mov
jmp
int3
vpmovmskb
fcmovnu
leave
in
loop
out
lds
shll
leave
js
fs
js
outsl
xor
pop
xor
add
in
imul
test
lods
xchg
mov
inc
sub
cld
dec
repnz
shlb
nop
cmpsb
aas
scas
popa
adc
or
jmp
int
push
cld
xchg
jmp
push
mov
hlt
lods
mov
fildl
fld
rep
adc
pop
fstps
lcall
and
in
fistl
push
xor
or
mov
xor
push
pop
mov
xchg
pushl
sub
xchg
lcall
adc
leave
dec
shl
inc
mov
loope
je
daa
outsl
arpl
fisttpll
jns
pop
stc
mov
dec
call
cmp
sub
fucomp
mov
pushf
push
sti
fiaddl
shll
jns
jbe
jmp
xchg
or
std
shrb
push
mov
sub
add
cmp
repnz
fwait
rorb
fldt
xlat
adc
adc
lahf
inc
int3
cmc
jle
sub
inc
dec
sub
or
mov
xchg
lahf
dec
jmp
jp
ja
add
es
out
ljmp
or
hlt
jmp
scas
sarl
in
pop
shrb
shlb
shll
lods
adc
fistpll
push
int
aad
stc
xor
mov
in
cwtl
ss
pop
mov
or
adc
sbbl
lcall
ret
mov
xor
into
dec
out
imul
into
cltd
int3
negl
fsubs
and
inc
stc
shl
lret
andl
or
dec
push
add
in
out
or
mov
and
cs
int3
std
dec
push
sti
cmovp
enter
inc
jmp
mov
imul
push
popf
aaa
push
mov
icebp
xor
mov
adcb
divl
push
fistpll
pop
ret
clc
mov
inc
mov
add
sub
push
insl
jl
add
mov
mov
jno
into
iret
bound
movsb
cmp
sarl
popf
idivb
adc
xchg
rorl
or
in
adc
dec
add
lcall
test
mov
notl
jge
mov
idivb
xchg
xchg
test
pop
in
nop
adc
mov
add
outsb
sub
in
stos
nop
inc
outsl
dec
pop
fistl
clc
jbe
fnsave
sarl
xchg
and
cltd
adc
and
add
ljmp
jbe
movsl
cmc
pusha
inc
jg
xor
in
lock
repnz
out
int
idivl
mov
adcl
xor
subl
mov
xorl
jmp
rol
cmp
aam
rol
mov
and
pop
pusha
lods
insb
iret
js
fs
js
pushf
rcll
sbb
ja
and
es
adc
stc
popf
aam
jge
ja
cmpsb
scas
push
mov
je
dec
sbb
dec
scas
frstor
dec
and
pop
push
inc
out
insb
je
mov
out
adc
in
sbb
insl
aam
testb
mov
or
xchg
mov
imul
outsb
cmp
inc
cld
pusha
cmpsw
push
mov
fnsetpm(287
mov
mov
xchg
movsb
adc
pop
iret
fstpt
add
fidivrl
cltd
jns
jmp
outsl
mov
xchg
imul
inc
sbb
sub
scas
test
mov
fdivp
stos
lods
push
push
sbb
xor
jl
xchg
mov
dec
scas
cmp
lods
aad
stos
xor
jmp
adc
inc
cmp
xor
stc
xchg
je
rep
mov
inc
bound
mov
enter
out
mov
daa
bound
in
into
mov
pop
lods
loope
sbb
stos
add
int3
lcall
sub
push
xchg
jp
xor
lahf
outsl
movsl
push
mov
movsl
mov
mov
xor
mov
lea
mov
push
test
inc
aaa
push
ficompl
mov
jae
sub
imul
and
ret
jg
sbb
aam
dec
sbb
pop
movsl
mov
gs
insl
mov
pminub
add
xor
pop
and
ret
outsl
jb
cld
sub
out
out
xchg
pop
pusha
shl
push
and
rol
mov
inc
cmp
sub
imul
cmp
xchg
add
jp
pop
movsl
sarb
stos
shll
mov
pop
out
or
jmp
movsl
xor
shlb
inc
int3
fs
xchg
mov
outsb
repnz
ja
rcrb
into
sub
iret
pop
aam
add
cmpsb
mov
add
mov
push
int3
hlt
or
in
sbb
jge
idiv
in
stos
fisttpl
nop
adcb
inc
jle
lret
ss
cmpb
aas
push
pop
cmp
lock
pshufw
int3
or
mov
fcoml
fs
mov
pop
jl
inc
insb
notl
movsl
inc
mov
and
jns
jge
sbb
fwait
inc
adc
sub
mov
stc
sbb
add
arpl
ljmp
inc
mov
idivl
sarl
jp
sub
or
data16
dec
mov
xchg
jnp
gs
or
enter
loop
imul
rcrl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
xor
add
sub
jmp
cmp
rcl
rol
ficoml
out
js
pop
pop
int3
js
fs
js
pop
sbb
add
mov
and
mov
add
pop
cmpsb
test
fiaddl
scas
sahf
sub
sub
mov
addr16
xchg
adc
movsb
arpl
jno
jmp
push
ds
loop
in
dec
dec
arpl
scas
inc
pop
arpl
xor
stc
mov
adc
movsb
push
cmp
aas
mov
cs
jl
mov
jg
into
or
out
dec
lods
sbb
lock
or
aas
jg
stc
or
jl
lds
xor
pop
out
xor
xorl
inc
push
rcrl
test
adc
icebp
push
mov
push
push
or
or
jo
sbb
xchg
cmp
insl
ja
iret
pop
mov
inc
call
mov
sbb
push
push
mov
popf
mov
std
xchg
out
cltd
fwait
xchg
insl
sti
insl
adc
lcall
aam
push
mov
testl
pop
mov
push
arpl
pop
data16
dec
add
ja
adc
mov
outsb
aad
sub
cmp
sti
arpl
je
outsl
andb
and
insl
std
cwtl
sub
aaa
ds
pop
sbb
aaa
daa
mov
aad
sub
xchg
mov
inc
roll
out
in
inc
mov
cltd
repz
loop
cli
dec
mov
adc
aad
adc
cld
cld
lahf
arpl
cmp
cmp
jp
xchg
mov
movb
adc
xor
inc
test
mov
lea
pop
aam
inc
sub
cmpsl
sbb
pop
jae
dec
dec
loop
xchg
lods
push
dec
std
rcl
fiadds
movsl
incb
inc
or
scas
test
mov
push
aam
mov
cmp
dec
jge
cmp
mov
adc
push
mov
add
jle
test
inc
ss
jns,pt
cmp
mov
les
out
pushl
inc
fidivs
pop
push
nop
fidivrs
inc
push
rcrb
cwtl
das
dec
xlat
insb
punpckhwd
iret
sarb
push
mov
repz
add
sub
mov
cwtl
adc
add
ret
add
fcmovnu
inc
dec
mov
pop
xchg
xchg
mov
dec
jg
inc
sbb
shr
push
push
xchg
mov
mov
or
xor
jmp
in
xchg
fidivrl
or
loop
sub
sti
test
add
sbb
rep
mov
subl
es
mov
push
mov
sub
and
aaa
dec
push
inc
andb
pop
aam
jne
lods
int
rorb
sbb
mov
inc
jg
inc
incl
add
add
add
or
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
jmp
iret
lret
aad
in
mov
inc
sarl
fs
js
lds
inc
xchg
or
lretw
mov
lahf
xchg
pop
mov
outsl
xchg
movntps
mov
and
int3
cmpsl
test
into
in
imul
cmp
test
jns
faddp
daa
pop
mov
fcomip
outsl
fdivrl
div
pusha
jnp
jge
jmp
jb
xor
xor
adc
fcoms
add
lds
lcall
insb
iret
jo
adc
mov
and
lods
ret
xlat
dec
popl
gs
sub
cmp
insl
xchg
xor
pusha
outsb
cmpsl
jg
adc
roll
cs
int3
cmp
insb
shll
xor
lods
dec
psrlq
sbb
dec
mov
addr16
fistps
clc
insl
jo
and
aam
dec
mov
fmul
popa
xchg
cwtl
pop
add
jb
ja
cmp
cmp
mov
or
ret
cmp
loope
pop
outsb
pop
jns
fs
pop
mulb
daa
or
or
daa
mov
loope
mov
lds
sub
cli
jge
xor
adc
sbb
lock
mov
sub
cmp
or
mov
in
mov
push
xor
aad
out
sub
scas
jecxz
adc
ficoms
or
lcall
loop
out
data16
pop
sbb
inc
xchg
and
push
jmp
mov
cmp
xchg
jmp
enter
sub
pop
push
sbb
jecxz
into
inc
je
fistps
ljmp
shll
ss
cld
lret
add
sarl
popw
out
inc
push
mov
lret
lods
pop
mov
push
inc
unpckhps
sbb
outsb
add
sub
outsb
pop
pusha
dec
mov
sub
pop
sar
dec
icebp
xor
xlat
dec
mov
push
fisubl
add
push
ret
in
or
lret
js
loopne
in
lods
mov
mov
test
push
dec
out
cmp
push
adc
mov
cmp
out
sbb
push
js
adc
pop
cmp
and
ja
sahf
lcall
popf
divl
int3
cmp
sbb
scas
gs
test
jmp
ret
ja
in
xor
cld
int3
sub
xchg
push
mov
out
push
rcl
les
scas
in
jbe
mov
jmp
xchg
imul
cmp
mov
and
mov
lea
sbb
addr16
xchg
mov
add
les
adc
js
push
in
mov
mov
orl
mov
xor
sub
sbbl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
mov
push
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
cmp
cmp
ret
shll
popa
fildll
js
fs
js
mov
popf
dec
push
test
or
push
loopne
or
adc
cmpsb
adc
mov
or
lcall
mov
addr16
add
adc
cmp
add
cld
push
jmp
js
mov
push
sub
lret
xor
push
jbe
popf
mov
cmc
push
push
lret
adc
les
ss
fwait
xlat
fwait
lret
cmc
mov
adc
sub
mov
leave
push
mov
es
or
in
push
outsb
lcall
jecxz
addr16
dec
add
or
imulb
adc
and
outsl
mov
jp
mov
cmp
cs
test
xor
testb
sbb
lret
xor
lcall
dec
push
push
arpl
mov
pop
dec
out
sti
pop
add
into
addr16
dec
push
cmc
and
out
pop
xor
mov
jnp
xchg
inc
ja,pn
cmp
adc
pop
cmc
jl
ds
sahf
bnd
pop
mov
fs
dec
mov
push
pop
outsl
int
mov
lcall
xchg
stc
adc
mov
ret
fistps
push
jnp
push
sti
jmp
dec
lods
scas
xor
out
mov
std
nop
bound
scas
insb
jle
insl
test
gs
enter
mov
jl
xor
mov
pushf
scas
popa
data16
and
notl
fidivrs
std
mov
dec
outsl
and
pop
aas
jecxz
mov
mov
es
lock
aam
mov
lock
js
hlt
xor
divb
add
clc
mov
push
negl
inc
inc
adc
mov
xchg
fcomps
push
cmp
dec
sbb
hlt
movsb
mov
xor
out
push
shl
imul
pop
adc
rolb
int3
lret
inc
cwtl
gs
cmp
addb
inc
mov
jle
jmp
imul
adc
inc
pop
fidivs
lods
sti
outsl
mov
dec
jnp
sbb
add
xor
fcmovu
push
cmp
cmp
add
int3
pop
in
mov
scas
jg
and
and
sub
addb
mov
sbb
sbbl
mov
mov
and
cmp
push
es
adc
mov
mov
dec
jecxz
push
adc
cmp
idivb
jmp
sbb
and
mov
lock
cs
xor
inc
popf
icebp
cld
cltd
lods
add
jge
lds
loopne
xchg
sub
paddusb
sub
mov
xchg
add
xor
push
pop
nop
add
and
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
jmp
ror
lret
fcmove
rcl
adc
xchg
stos
jl
dec
pushf
fstpt
fs
js
pop
xor
aam
mov
mov
xchg
imul
push
sub
iret
push
inc
mov
cmpsb
mov
out
nop
lea
mov
mov
xor
ret
test
cmp
lock
sub
das
test
aas
fisttpll
mov
jo
jecxz
mov
mov
xlat
loopne
std
sbb
repz
and
push
scas
movsl
mov
mull
cmp
cmpsb
enter
loope
xchg
inc
xlat
mov
xchg
jg
ss
leave
in
arpl
call
xchg
jl
adc
jmp
xchg
pop
rclb
add
jmp
out
jl
movsb
imul
aas
add
mov
je
xchg
cmp
pop
or
jno
push
cmpsl
add
enter
stc
jp
cmp
adc
fcomi
loopne
or
inc
push
ret
mov
ljmp
pushf
rcrb
jne
imulb
jns
push
sbb
out
repz
pop
cmp
mov
or
and
dec
imul
jno
sub
ja
cmp
cs
cmc
clc
in
jne
pusha
shlb
xchg
xor
dec
sub
or
push
subl
mov
adc
mov
mov
mov
jb
sub
iret
jecxz
push
mov
outsb
outsb
test
or
fbstp
push
daa
inc
lods
repnz
cmpsb
jmp
jle
rcrl
fstpt
test
jecxz
imul
jmp
sub
out
xchg
or
pushl
repnz
cs
mov
test
lahf
cltd
jecxz
lea
add
mov
test
pusha
or
gs
pop
push
jge
jp
sbb
mov
xor
cmp
lret
dec
cwtl
add
cmpsb
mov
jo
sub
shll
add
add
out
js
sbb
jno
mov
cs
push
adc
inc
out
adc
cs
mov
mov
jl
repnz
dec
jecxz
stc
dec
icebp
int3
pop
popf
adc
shll
gs
push
push
pop
sub
cmpl
pop
test
ja
movsb
sub
aas
enter
sub
fsubl
fidivrs
loopne
sub
cmp
shrl
xchg
sarl
pop
push
aaa
jnp
jae
rcrb
repnz
pop
mov
mov
aad
sbb
jg
ds
add
out
in
inc
aad
mov
sbb
pop
insb
push
scas
sahf
sub
icebp
int
out
rolb
mov
and
mov
or
xor
outsl
lea
addr16
and
adc
dec
fs
dec
fisttps
mov
mov
lcall
mov
mov
jmp
lret
ret
fld
add
fmul
inc
pop
hlt
mov
js
fs
js
xchg
pop
xor
das
mov
jle
add
add
inc
jb
pop
out
lods
inc
lcall
test
xchg
sbbb
fs
jge
lahf
ret
les
rorb
inc
js
adc
cmp
cli
cli
rcr
xchg
mov
mov
test
data16
push
and
push
cli
ret
cwtl
popa
jecxz
ret
rorb
and
cmp
arpl
shlb
lock
or
mov
pop
jmp
jp
fisubs
adc
aaa
inc
jo
push
aas
push
insl
pop
mov
xor
int
sbb
rcrl
or
or
add
add
sahf
test
insl
neg
popa
jnp
pop
push
pop
cmpsb
mov
adc
pop
sbb
adc
mov
cmp
jae
outsl
sbb
aas
xchg
mov
add
xchg
adc
or
sbbb
cld
xchg
fstpt
cltd
pop
sub
sub
sahf
jne
int3
into
and
sahf
xchg
mov
cmc
fistpl
add
enter
jne
cltd
mov
call
xchg
decl
add
fstps
lahf
movl
mov
push
push
in
mov
lret
in
cmpsb
in
push
out
mov
xlat
in
lods
aad
call
aam
push
fwait
mov
push
out
in
push
sub
in
aad
pop
test
sub
leave
outsb
jo
dec
test
pop
addr16
jmp
xlat
push
loop
xor
push
mov
out
dec
or
cmp
add
dec
mov
enter
into
imul
ss
mov
mov
pop
std
or
and
pop
and
inc
adc
push
push
lds
add
enter
jns
lahf
push
dec
mov
and
pop
scas
cmc
test
out
cmp
sub
add
mov
sub
mov
mov
mov
inc
fmuls
negb
cmpsb
sahf
test
mov
xor
or
mov
mul
push
orb
cmpsb
mov
adc
or
jg
inc
xchg
cmp
ret
push
xchg
ja
xlat
push
fistps
negl
fs
ds
sbb
stos
mov
sti
sub
and
mov
lret
imulb
xchg
mov
ljmp
ljmp
ret
fistpll
jo
pop
push
addr16
push
ja
cltd
sbb
jge
push
or
sub
imul
sub
mov
dec
pop
mov
push
mov
roll
mov
mov
xor
add
mov
mov
jmp
ret
ror
rcr
rcl
push
add
cmp
fnstsw
fs
js
xchg
inc
fildl
adcl
jb
sbb
cs
push
movsl
shll
pop
push
adc
lea
xchg
xchg
pop
adc
ja
jl
xchg
cmp
mov
sub
popf
out
test
jae
mov
mov
testl
cmp
jno
xchg
jecxz
xchg
mov
mov
cltd
pushf
cmpsb
out
sub
call
push
icebp
pop
clc
pop
push
add
popf
sarb
sbb
add
mov
leave
daa
nop
or
pop
jno
ficomps
xchg
sub
pop
iret
cmp
lock
adc
sti
popa
clc
jb
flds
add
or
rolb
jno
hlt
cld
ja
cmpsl
fldl
push
out
push
jle
cmp
daa
test
pop
adc
pop
lea
push
push
dec
std
mov
ja
int3
nop
xchg
int3
mov
dec
ss
ja
jae
sub
insl
mov
xchg
add
lcall
jb
in
and
les
jmp
and
sbb
pusha
popa
mov
and
pop
stc
cli
mov
clc
cmp
fwait
xchg
loop
jp
push
inc
icebp
add
repz
jnp
shrd
jg
xchg
or
lock
dec
inc
sahf
ds
adc
fsub
subps
pop
insl
or
or
pop
ret
add
aam
aas
or
jge
jg
repz
jle
inc
push
out
movsl
jecxz
pop
ret
add
pop
dec
push
lea
or
lock
mov
inc
jmp
add
rclb
adc
mov
xor
in
pop
pop
aaa
mov
enter
cmpsl
aas
fimuls
lods
lret
psubusb
mov
insl
test
sub
push
jns
cld
lret
imul
cmp
stos
pop
pop
push
fwait
pop
sahf
xchg
mov
add
rcr
addr16
stos
or
push
out
andps
out
mov
or
add
pop
push
jno
jb
cmpsl
adc
test
das
cmp
dec
sub
mov
out
mov
pusha
inc
js
or
add
mov
jbe
push
sub
orl
jmp
push
mov
lock
sub
into
lds
into
addr16
popf
pop
and
clc
xlat
add
jae
sbb
dec
add
mov
je
sahf
mov
hlt
adc
cs
test
daa
adc
xchg
insl
fcoms
or
aaa
cmp
jno
int
mov
orl
push
orb
sub
cmp
push
jo
orb
inc
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
jmp
cmp
rcl
fcmovu
into
leave
xchg
loopne
js
fs
js
in
enter
sub
push
outsl
stos
punpckhwd
loope
nop
xchg
scas
xorb
push
movsl
lret
mov
jnp
negl
int3
pop
jne
fldcw
add
xlat
mov
ja
mov
ljmp
mov
data16
add
push
jl
jl
push
xor
mov
add
cmp
inc
xor
xchg
push
andb
lds
cmpsb
inc
xchg
xchg
inc
xchg
ljmp
ficoml
nop
pop
mov
insl
pop
mov
push
nop
std
stos
in
jns
test
dec
sarb
aas
aad
ljmp
xchg
imul
mov
and
sbb
cs
push
mov
popf
subb
jns
ret
lahf
xchg
sbb
shll
push
outsb
xchg
push
xchg
and
pop
push
sarb
xchg
jecxz
push
movsb
mov
mov
cmp
mov
add
push
rorl
clc
add
add
sub
sub
cmpsb
inc
mov
imul
clc
lcall
cmp
bound
mov
dec
mov
xchg
mov
clc
xchg
xor
mov
out
sti
mov
jle,pt
gs
repz
and
shlb
mov
shr
gs
lds
lds
and
push
sub
icebp
js
fidivl
mov
out
lods
clc
cmpsl
add
lods
shrb
in
sbb
test
jg
and
mov
imul
gs
pop
and
mov
repnz
daa
push
sbb
sbb
xchg
pushf
insb
test
jo
mov
cmp
adc
mov
mov
fcoml
popa
dec
and
push
out
jg
xor
dec
fistl
mov
xchg
fisttps
adc
mov
shll
adc
cmp
aad
ja
test
lea
push
or
jne
push
in
or
aam
inc
push
das
scas
lea
subl
mov
push
pop
imul
dec
pop
or
rcrb
pop
or
mov
dec
add
inc
push
push
dec
shlb
cmpsl
cmpl
addb
les
aas
jno
mov
out
push
inc
out
int3
aad
dec
lahf
mov
lea
sbbb
rcll
mov
adc
adc
insl
out
and
sub
jbe
into
and
jmp
xchg
das
inc
inc
shrl
push
test
xor
fstps
cld
test
leave
jns
cmp
or
push
fdivl
mov
jae
faddp
hlt
mov
lds
sub
mov
idivl
rorl
in
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
jmp
aas
fld
add
sahf
les
js
fs
js
mov
jmp
insl
les
mov
ljmp
cli
push
jle
jecxz
xor
adc
mov
test
mov
adc
push
cld
cmp
push
sbb
xchg
or
loop
and
cwtl
pop
xor
jns
insb
lea
cmp
inc
mov
inc
mov
xor
js
inc
sarb
mov
in
xlat
cwtl
movsl
aaa
mov
mov
sarb
addr16
jge
sub
xchg
outsl
mov
int3
inc
pusha
inc
jg
leave
xor
in
fwait
std
mov
dec
call
xchg
inc
lock
cmc
repnz
mov
mov
push
pushw
push
xor
and
scas
adc
aam
out
mov
jmp
push
xchg
insl
dec
scas
sub
inc
lods
test
ret
xor
lds
lcall
outsl
xor
or
mov
add
aaa
stos
inc
jb
in
mov
scas
addr16
std
jl
sbb
pop
int3
fmull
add
loopne
xchg
fisubrl
jecxz
dec
adc
popa
or
clc
loop
and
push
test
idivl
mov
push
dec
cmpsb
out
pop
daa
cmp
or
out
adcb
mov
not
lea
add
inc
xchg
inc
ret
mov
mov
leave
sbb
push
and
notl
fs
and
and
mov
adc
dec
mov
out
or
push
fldcw
addr16
push
mov
faddp
lea
add
fsts
cmp
adc
stos
mov
add
dec
ja
dec
pop
lds
push
insb
mov
jne
mov
shlb
xchg
ja
adc
sub
xchg
xor
arpl
dec
pop
cli
and
pop
mov
sub
movsl
sub
test
std
repz
scas
mov
xor
mov
and
stos
mov
mov
xchg
repnz
stos
mov
mov
fidivrs
dec
fsts
lahf
adc
inc
daa
rcll
daa
ficoml
fidivrs
or
xor
push
cmp
adc
dec
dec
cmp
clc
adc
ret
mov
xor
fs
or
xlat
cli
cmp
into
push
inc
out
mov
ret
dec
loopne
aas
inc
mov
sub
mov
cmpsb
xor
les
lahf
int3
dec
repz
cmpsl
std
pop
out
mov
jge
cltd
inc
mov
mov
jne
add
ret
push
mov
push
xor
push
jmp
cmp
aad
mov
shll
js
jle
js
push
enter
lret
stc
pop
xor
pusha
jp
pop
add
insl
enter
mov
cmpsl
stc
notb
andl
frstor
mov
mov
jne
inc
cmpsb
jae
xor
mov
aaa
js
and
repnz
insb
push
call
int
push
aaa
push
and
iret
arpl
push
xchg
cmp
ja
out
aas
fstp
add
adc
mov
dec
sub
into
in
xchg
mov
xor
sahf
mov
fbstp
sub
sarl
imul
adc
fidivrs
or
jle
jae
jnp
outsl
cli
jno
call
sarl
ss
xchg
sbb
popf
lret
out
daa
xchg
outsb
ficoms
pop
and
pusha
jb
daa
xchg
mov
inc
ds
mov
add
into
or
loop
adc
nop
ret
in
sub
mov
lret
mov
icebp
call
rcrb
add
shll
add
mulb
in
in
or
push
xor
push
int3
pop
inc
sahf
cli
mov
inc
aas
add
cmpsb
loope
ret
jnp
jne
push
ljmp
int
stc
dec
pushl
push
or
repnz
jecxz
xor
minps
in
adc
mov
lods
popf
xchg
sbb
lea
into
adc
pop
push
xchg
rcll
xchg
xchg
stos
inc
and
outsl
push
in
inc
mov
push
sbb
fwait
imul
mov
or
scas
cmp
push
or
mov
aad
adc
and
shrb
sub
add
mov
sbb
test
dec
pop
sub
inc
push
insl
or
fldcw
int
lods
addr16
pushf
cmpsl
push
add
scas
sarb
mov
outsl
xlat
adc
clc
sub
out
push
inc
in
inc
jge
pop
sti
addr16
and
jo
xchg
bnd
fnstenv
gs
pop
or
dec
xchg
aaa
sub
rolb
idivb
mov
mov
cmp
lds
repnz
and
xlat
mov
pop
xchg
or
faddl
lea
in
rcll
insb
aas
cmc
adc
outsl
out
xlat
lret
lds
icebp
mov
jne
ja
popf
xchg
and
cmp
jbe
dec
xchg
jmp
cli
lret
je
stos
outsb
and
lods
daa
xchg
test
mov
push
xchg
mov
cmp
cld
cmp
cld
add
push
mov
mov
add
mov
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
mov
orl
add
add
xorl
imul
mov
jmp
cmp
lret
stos
adcl
mov
js
cmpsl
jle
js
push
xor
imulb
xor
outsl
mov
inc
cmp
imul
or
lods
lds
mov
outsl
sahf
adc
lods
mov
sub
sti
daa
push
jl
ljmp
xchg
js
fadd
push
aad
out
pop
test
cmp
test
inc
push
out
fs
push
inc
in
add
lds
movl
or
sub
jno
lods
lods
xor
dec
or
and
jb
cmp
loopne
fxch
das
jae
xchg
iret
cmp
mov
xlat
cmp
sbb
and
add
jnp
sub
cld
dec
xor
pop
ret
rcl
push
sbb
pop
adc
jbe
push
sbb
xchg
call
pop
out
cmp
lods
aaa
rcrl
out
inc
mov
cmp
scas
jae
testl
jo
insl
push
adc
jo
ret
stos
mov
lret
lret
mov
push
jmp
pop
sbb
fs
xchg
and
sbb
mov
decl
insl
mov
mov
adc
lcall
lret
xchg
add
adc
pop
fcompl
xchg
xchg
imul
cmp
jb
jne
xchg
decl
mov
add
shll
mov
push
jl
scas
imul
jmp
dec
pop
jle
lds
mov
ret
sub
dec
or
popf
jge
nop
not
test
or
sti
xor
cmp
inc
icebp
cmp
cmp
mov
arpl
mov
sbb
jo
and
iret
jnp
addl
addb
ljmp
push
ds
out
cwtl
xor
ljmp
mov
mov
std
arpl
mov
jl
mov
dec
std
sub
jb
and
xor
xchg
ret
movntq
lods
push
push
sbb
push
xchg
test
lds
pop
aad
xchg
push
inc
loope
mov
repnz
dec
out
inc
push
sub
and
pop
inc
add
dec
add
cmp
test
inc
out
sub
les
mov
lods
iret
jno
or
mov
pop
rol
sub
aaa
mov
loopne
pop
adc
mov
xchg
popf
nop
xchg
mov
push
dec
test
xchg
jns
lcall
cli
pop
jle
mov
mov
movl
jne
jmp
lret
cmp
mov
shll
mov
js
cmpsl
jle
js
pop
xchg
addr16
cmp
mull
testl
clc
inc
mov
inc
adc
adc
fisubrs
shlb
cwtl
inc
push
iret
xorb
rolb
adc
xlat
dec
jo
jge
xchg
jns
outsb
ror
push
jbe
jge
inc
pop
icebp
jo
lods
je
cmc
lea
push
test
xor
popfw
mov
ja
fisubs
cmp
hlt
jmp
cmp
lahf
sbb
shl
hlt
mov
mov
sbb
mov
sub
fidivrs
pushfw
stos
imul
lea
sahf
lock
cmp
int3
pop
pop
adc
aaa
mov
inc
aam
pop
push
fstpt
popf
repnz
inc
fadd
push
jae
out
add
mov
mov
lahf
cmp
push
push
xchg
les
push
lock
sub
sahf
inc
dec
mov
test
sub
sbb
jnp
orb
jb
scas
insl
aam
push
aad
shrl
pop
mov
out
mov
xchg
or
mov
sub
add
pop
dec
pop
mov
sti
in
test
enter
add
jecxz
dec
sub
jno
incb
mov
mov
inc
lods
adc
or
test
lret
push
stc
pop
les
iret
bound
inc
lock
sbb
inc
lods
cmp
mov
mov
fildl
hlt
mov
insl
fdivl
dec
jle
ljmp
mov
and
mov
ret
into
shl
cli
lahf
loope
push
fs
idivb
rclb
iret
dec
mov
scas
and
ret
pop
sub
dec
and
testl
push
sbb
add
push
xorl
mov
ds
movsl
mov
sbb
rorb
ret
xchg
test
aam
ja
lods
rorb
jmp
jp,pt
push
cmpb
push
xchg
sbbl
cmp
xchg
aad
cmp
sbb
push
push
xchg
mov
aad
jne
jp
and
stos
shlb
pop
movsl
enter
inc
sti
xor
lcall
pop
int
mov
sahf
lea
inc
cld
addl
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
jmp
xlat
leave
lret
aad
leave
adc
inc
push
xor
jle
js
cmpsl
add
sub
iret
sub
push
cmp
out
nop
lock
les
bound
out
cmp
push
daa
push
and
movsb
sbb
pushf
sbb
jno
arpl
xchg
mov
popf
clc
add
cwtl
jg
std
and
push
add
push
out
xchg
insb
stc
sahf
mov
pop
xchg
dec
inc
xchg
sbb
mov
scas
js
shll
dec
addr16
jae
jno
mov
sbb
lock
hlt
in
adc
cmp
add
aam
lret
sub
movsl
aad
add
add
jl
inc
pop
mov
jno
nop
bound
in
in
mov
loop
mov
lcall
mov
add
sbb
jp
orb
lds
addb
sub
fucomi
adc
mov
pop
mov
faddp
ds
mov
mov
jae
sub
xchg
mov
jae
xor
repz
push
mov
in
insb
addr16
incb
outsb
adc
xchg
fdivrs
jmp
lock
gs
fst
or
xor
test
insb
in
or
adc
push
dec
jp
rol
mov
lret
cwtl
scas
sbb
dec
pop
mov
xchg
sahf
dec
ljmp
jo
adc
add
jb
lds
cmpsb
lock
dec
mov
cmp
ja
addr16
fisubrl
adc
int
jl
xor
dec
xchg
inc
mov
xor
or
mov
mov
ret
es
xchg
jge
mov
loope
addr16
out
push
in
xor
inc
shll
jge
cmp
aad
dec
sbb
push
out
inc
outsb
aam
add
outsb
add
xor
jns
push
mov
mov
mov
jecxz
sbb
leave
icebp
dec
mov
pop
and
imul
xor
insl
dec
pushf
das
cli
daa
aad
xchg
pop
inc
aam
enter
ret
push
movsb
lahf
sub
leave
rclb
out
xchg
pop
or
scas
mov
aaa
dec
adc
dec
add
jb
adc
ljmp
jno
in
ss
ljmp
dec
xchg
or
cmc
loop
lea
adc
mov
ret
mov
and
sub
outsl
std
xchg
sub
movsl
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
jmp
leave
enter
xlat
enter
lds
pop
bnd
push
jle
js
dec
pushf
popa
stos
cmp
xor
into
std
in
mov
xchg
popf
pop
lock
aaa
daa
mov
movsb
xchg
insb
repz
lds
cmpsl
sub
push
lret
sti
xorl
mov
cld
push
or
and
stos
add
popa
into
and
dec
inc
gs
mov
mov
jl
mov
test
mov
sbb
sti
pop
jno,pn
lret
cmp
lea
clc
loop
push
lret
add
pop
push
jb
add
inc
shll
dec
fldt
push
int3
flds
dec
or
cmp
push
xchg
and
ss
and
mov
out
in
push
mov
aas
xchg
add
or
test
and
mov
insl
mov
add
mov
aam
pushl
lahf
call
push
outsb
xor
inc
add
mov
dec
gs
mov
sbb
mov
push
cmp
jp
and
mov
xor
dec
xchg
sbb
mov
or
fcoml
cmpsl
pop
bound
or
daa
xchg
outsb
pop
sahf
loopne
dec
rorb
pop
cwtl
fimull
push
cmp
sbb
cmpb
cld
adc
jecxz
scas
bswap
sbb
fsts
xchg
add
and
pop
sbb
inc
adc
insb
adc
fisttps
int3
cmp
or
in
pop
aad
push
push
aam
cmc
lcall
push
nop
in
leave
int
movsb
out
mov
lret
and
pop
fistpll
ljmp
out
arpl
sti
icebp
jle
mov
sbbb
je
les
loop
sub
sub
xchg
shlb
dec
scas
cmp
out
xor
movsb
cmp
push
andb
dec
pop
test
cmp
and
pop
outsb
mov
inc
aam
outsl
xchg
idivb
jns
fnstcw
repnz
sahf
dec
xchg
les
test
fldenv
adc
aam
stos
add
cmc
inc
push
dec
cmp
mov
sarb
mov
push
xrelease
jns
pusha
cltd
or
fisubl
sub
call
fdivl
push
mov
sbb
mov
rcll
dec
repz
push
lock
inc
pusha
xor
lret
cmpsb
lret
pop
cmp
movsl
add
pop
jecxz
cmc
jns
xchg
daa
idivl
int
test
fbld
xor
mov
nop
mov
jg
icebp
sub
dec
jecxz
jae
pop
call
dec
push
into
and
stos
pop
push
inc
loop
dec
js
push
xchg
test
add
lahf
cld
mov
test
add
dec
add
mov
mov
mov
movl
movl
cmp
jne
xor
jmp
lret
rcl
xlat
fxch
fsts
add
js
jle
js
jns
ljmp
mov
mov
or
xor
clc
xor
bound
sub
adc
xchg
xchg
popf
rorb
push
sbb
xchg
ja
xchg
test
stos
inc
punpcklwd
mov
les
test
out
scas
dec
mov
dec
into
pop
das
outsl
mov
cmpsl
pop
adc
leave
scas
adc
adc
inc
pop
insb
test
mov
and
shlb
xor
fldl
jnp
js
inc
out
push
and
arpl
cmp
nop
push
stos
pop
jmp
cli
push
or
xor
jl
mov
sub
cmpb
cmc
adcl
jo
and
xor
test
sub
ret
dec
imul
outsb
jp
push
adc
imul
sbbb
inc
les
and
clc
hlt
std
imul
inc
pop
dec
ja
lcall
cmp
inc
cmp
lods
xor
pop
inc
and
inc
fs
or
xor
jle
std
cmp
imul
or
cmpsb
je
test
jb
and
or
not
shll
xchg
stos
mov
ja
mov
mov
aad
lock
aaa
ficompl
push
mov
mov
pushw
xchg
imul
imul
hlt
add
leave
fildll
dec
hlt
ret
test
mov
test
mov
sub
and
iret
push
lods
xor
in
xchg
cmpsb
sub
ja
cwtl
aaa
lods
xchg
test
jle
sub
loop
mov
int
rolb
sbb
mov
and
aas
mov
aas
push
pusha
add
xchg
push
insl
shr
dec
lret
sbb
mov
pop
cltd
mov
adcb
xchg
and
sub
cmp
pop
xor
adc
fdivs
and
jl
dec
addr16
mov
hlt
testl
adc
xor
sbb
fsubs
pop
jmp
leave
xor
jae
mov
nop
mov
jb
dec
push
add
xchg
sbb
or
inc
sbb
inc
scas
fsubrs
out
inc
push
pop
outsl
push
sbb
pop
outsb
push
mov
les
push
jecxz
xor
pop
aam
and
mov
adc
imul
imul
nop
mov
add
mov
loope
xchg
iret
and
inc
jge
push
sbb
jecxz
fwait
out
xlat
dec
inc
inc
popa
cmp
pop
rorl
xchg
test
sti
sti
movsb
pop
cli
mov
pop
push
jbe
and
pcmpgtd
cltd
cmpsl
inc
add
mov
add
roll
mov
add
neg
mov
orl
movzwl
sbbl
not
xorl
and
jmp
ret
int3
leave
rcr
sahf
inc
imul
hlt
js
push
jle
js
popf
sub
repnz
gs
sahf
sbb
sbb
push
cld
xchg
cmp
push
mov
push
inc
sub
out
jno
sub
pop
jne
aaa
sbb
jo
mov
lods
cmpsl
rorb
popf
sub
dec
sbb
mov
xor
xor
inc
lods
sbb
cli
out
mov
test
fisubl
ss
inc
js
out
mov
arpl
cltd
lods
adc
ds
sti
mov
insl
lret
fnstsw
lahf
loop
fcoms
mov
popl
jl
pop
or
ljmp
mov
shl
push
add
rclb
add
mov
cli
sub
xor
int3
push
mov
cmp
sti
fcomps
cmpsl
aad
mov
jae
mov
ja
dec
cmp
jp
ret
adc
push
stos
sarb
sub
mov
popf
cs
xor
pop
out
dec
cli
inc
jne
ret
mov
sbb
jns
jle
jns
sbb
dec
or
jp
ret
push
add
adc
and
clc
insb
in
pop
ret
mov
sub
rcl
inc
lea
hlt
cli
lock
push
loop
push
setb
mov
xchg
cs
pop
pusha
ret
xchg
popf
dec
insb
mov
nop
incl
pop
mull
fcmovb
pop
fadd
jo
cmpsl
test
mov
addr16
bound
dec
and
push
stos
xlat
or
fnstsw
mov
test
mov
shl
aaa
bound
push
mov
insb
mov
out
dec
mov
test
sahf
push
lock
popf
fstp
xchg
xchg
sbb
push
cmc
je
fcoms
jg
sahf
and
sbb
aaa
popf
xlat
inc
jl
pushl
neg
cwtl
mov
cltd
data16
mov
jle
jle
dec
into
xor
dec
sub
insb
lock
xchg
fcomip
mov
sbb
pusha
xor
add
in
ds
pushf
add
mov
rcrl
pop
out
lcall
cmpsl
ds
mov
mov
daa
and
gs
push
jl
push
or
cmpsl
out
push
inc
loop
mov
sbb
lock
jo
pop
cltd
dec
sbb
jne
mov
arpl
sub
dec
cmp
cmc
jbe
mov
mov
adc
int
adcl
les
inc
imul
stos
mov
pushf
and
sub
add
xchg
and
cmpsl
mov
cli
loope
cmp
and
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
mov
sub
xor
movl
mov
xor
or
sub
imul
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
jmp
cmp
ret
ror
into
jge
enter
loope
loop
js
je
js
dec
xchg
ficompl
orl
in
add
push
jb
xor
xor
sbb
cmp
ss
add
ljmp
inc
shrb
or
addr16
insl
int
mov
push
push
jmp
aad
jge
into
add
cmpsb
out
pop
into
lods
push
hlt
mov
push
inc
mov
cmp
cmp
cmp
push
repz
ljmp
pop
fimull
pop
popf
xchg
lcall
dec
push
pop
inc
mov
sub
dec
mov
mov
out
inc
outsb
dec
shrl
testl
pop
sub
and
xchg
lret
push
add
ret
idivb
sub
mov
sub
add
mov
mov
jbe
dec
dec
dec
into
in
jecxz
or
lds
outsl
daa
mov
mov
push
cs
imul
aam
pop
nop
pop
jbe
push
lret
xor
cmpsl
call
mov
lahf
cld
xchg
xor
jmp
cmp
sbb
daa
dec
ljmp
jo
cwtl
mov
mov
inc
inc
xchg
push
leave
popa
pushf
push
aaa
int3
ljmp
cmp
stc
and
lea
xchg
mov
cld
cmp
insb
cmpb
add
sub
mov
aaa
inc
or
pop
cmc
bound
popf
mov
push
out
daa
mov
push
and
xlat
jae
aam
adc
pop
test
pusha
jns
sbb
push
aaa
rcrb
out
mov
bound
mov
subl
lock
jp
add
mov
pop
adcl
in
push
sti
loop
pop
pushf
jbe
popf
or
je
mov
fdivrs
popf
pop
add
mov
and
nop
dec
orb
mov
pop
stos
ret
ret
sahf
vsqrtss
pop
and
icebp
mov
cmpsb
push
icebp
pop
inc
xor
je
dec
sbb
test
out
in
inc
lahf
call
stc
iret
and
adc
lods
enter
aam
repz
sbb
inc
sarb
jno
xor
dec
add
jbe
push
adc
mov
or
cwtl
scas
fldenv
jmp
inc
gs
sbb
imul
push
lret
xchg
out
sbb
movsb
shrl
push
xchg
addr16
mov
add
lds
pop
lret
imul
sbb
jp
fildll
test
sbb
outsl
ffreep
fmulp
pop
pop
push
sahf
cli
rcl
cli
out
xchg
jge
lcall
jmp
out
pop
dec
inc
loopne
fldenv
inc
push
cmp
mov
sub
pop
mov
fsubl
xchg
shrd
push
or
cmc
fsubr
sbb
arpl
sarl
mov
cmpsl
mov
mov
pop
lea
andl
mov
subl
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
lea
mov
mov
sub
and
mov
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
push
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
jmp
ror
int
dec
xor
fsubrs
js
jle
js
push
pop
mov
int3
dec
int
nop
or
dec
scas
nop
in
in
cmc
clc
push
dec
scas
pop
jb
cs
in
out
cltd
nop
ljmp
inc
icebp
dec
je
cmp
loope
mov
jle
jmp
mov
lock
jae
xchg
push
push
mov
cs
xor
lods
and
in
sti
movsb
out
outsb
adc
sbb
cwtl
loop
movsb
std
or
sub
inc
xchg
rcr
xchg
mov
cmc
sarb
xor
out
inc
push
or
lock
mov
arpl
ds
mov
add
test
and
arpl
inc
jns
dec
lret
in
aaa
pop
pop
jp
mov
clc
gs
sbb
mov
adc
repnz
inc
dec
imul
sbb
popa
xlat
jnp,pt
in
out
xor
pop
add
pop
mov
gs
mov
in
mov
cmpsb
xor
and
sbb
add
jne
cwtl
outsb
xor
xor
shll
or
xchg
add
das
and
jge
fildll
mov
stos
cmp
xor
xor
out
xchg
add
jmp
cmc
outsb
xor
imul
loopne
xchg
mov
mov
jge
data16
push
push
lcall
inc
mov
in
lahf
fprem1
shrb
xor
jnp
push
lret
mov
dec
and
outsb
lret
test
out
ficoms
arpl
mov
inc
lods
fists
shr
clc
mov
cmp
sbb
cli
pop
xor
test
cmp
dec
aam
enter
aam
and
dec
popa
push
add
insl
cmovb
mov
mov
enter
jl
cmp
ret
pushf
mov
inc
cld
cmp
jae
les
adc
push
movsl
scas
sub
xor
mov
and
mov
popa
mov
jle
out
dec
fimuls
stc
lods
ljmp
and
xor
loopne
mov
loopne
dec
pusha
push
lods
punpckhwd
inc
jecxz
adc
push
loopne
jae
in
fstp
lret
sbb
push
lock
dec
push
inc
push
in
mov
xor
xchg
aaa
ret
cmp
fidivl
add
push
adcb
pop
xor
fcompl
and
mov
outsb
cli
into
in
adc
mov
or
pop
cli
xchg
jb
mov
imul
add
xchg
jg
inc
sub
mov
push
pop
push
mov
cmc
pop
sub
fsubrl
fldt
out
pushf
je
inc
cmp
mov
mov
xor
mov
jmp
xlat
rcl
aad
vmovapd
pop
sbb
jle
js
add
mov
adc
mov
inc
insb
mov
mov
fldcw
add
mov
cli
xor
aad
add
dec
dec
xchg
xchg
rorl
ds
movsb
inc
aad
push
cmc
lea
mov
dec
pop
vucomiss
mov
adc
icebp
add
cmp
andb
aad
xchg
inc
test
mov
ret
movsl
push
pop
jne
mov
mov
lock
mov
jl
mov
mov
push
data16
fstl
xchg
mov
pop
scas
dec
rorb
jno
mov
xchg
or
lcall
fs
outsl
xchg
adc
mov
rdmsr
cltd
je
movsl
addr16
subl
cmp
or
jbe
jae
push
repz
and
push
push
dec
or
cmp
jns
and
pop
mov
xchg
or
int
ljmp
or
cs
cmp
inc
loope
hlt
dec
outsb
and
pop
add
push
incb
xchg
mov
push
imul
ja
fsubrs
mov
sti
jne
push
push
out
mov
or
insb
adc
rcl
inc
xchg
inc
mov
unpcklps
fcoml
or
jmp
aad
push
cmp
aam
rcrl
bound
xchg
mov
push
imul
and
imul
leave
mov
adc
fisubl
add
imul
jnp
fisubs
das
push
aam
dec
cmc
and
mov
jbe
cmp
mov
mov
mov
cli
sub
test
pop
adc
test
push
out
nop
add
and
xor
adc
sub
sub
mov
enter
popa
mov
cmpsl
rcrb
push
inc
cmp
mov
sbb
push
rcll
js
out
je
xor
and
add
scas
jb
hlt
dec
insb
sub
push
pop
addr16
mov
in
xchg
fs
repz
mov
out
out
pop
pop
rcll
cli
lods
fadd
jmp
sbb
add
nop
pushf
imul
sahf
clc
jl
xchg
and
fidivrs
xchg
int
scas
jbe
repnz
popf
xor
test
xchg
sbb
mov
push
clc
insl
arpl
mov
add
cmp
mov
stos
jbe
ljmp
adc
mov
mov
cmpsl
hlt
lds
xchg
xchg
cld
test
aam
cmp
ret
lea
scas
jne
jnp
mov
mov
sub
xchg
cmp
mov
xor
xor
add
add
div
mov
movl
cmp
je
movl
lea
mov
mov
jmp
aas
aas
iret
iret
xlat
xlat
fists
push
pxor
leave
cmpb
jle
js
in
lcall
inc
adc
roll
icebp
add
addr16
and
movsb
sbb
and
xor
lret
cmp
dec
addl
xor
xchg
cld
push
cmp
fnstcw
outsb
aad
mov
jae
or
sub
dec
mov
cwtl
push
mov
jecxz
sahf
loop
and
add
add
dec
and
fs
addb
mov
xor
add
xorb
mov
popa
subl
das
sub
push
lds
jl
sub
mov
mov
popl
xor
xchg
and
and
cmp
push
pop
stos
inc
push
bswap
mov
mov
adc
jae
sub
ss
in
pusha
push
int
subb
push
pop
into
frstor
xor
aas
stc
scas
aaa
fcomi
cmpsl
inc
xor
xchg
in
mov
sti
push
lea
lds
cmp
adc
pop
pusha
jns
xchg
rclb
cmp
imul
jge
dec
hlt
or
outsb
sub
push
outsb
into
insb
cmpsl
fdivs
push
cmp
repz
jp
aas
xchg
sbb
mov
clc
fcomps
or
or
jae
in
push
pop
imul
xor
adc
fisttps
jg
test
push
mov
mov
test
call
clc
and
sti
add
aad
push
or
dec
sbb
dec
push
mov
arpl
sahf
loope
mov
jbe
flds
jle
test
xor
mov
dec
pop
scas
xlat
popf
jecxz
xor
incb
arpl
jbe
or
mov
add
pop
movsb
test
push
call
xor
enter
adcl
movsb
test
jg
fs
push
arpl
adc
or
pop
ss
sub
cmp
cmp
mov
push
mov
jp
jo
shl
enter
insb
add
sbb
dec
mov
dec
fstpl
int
in
mov
enter
inc
add
dec
mov
sahf
mov
icebp
cmp
ss
push
sub
xor
out
ffree
pop
push
dec
pop
mov
aaa
iret
adc
std
jns
std
ja
mov
jnp
stc
or
stc
nop
push
ret
sti
pushf
into
push
dec
and
mov
xor
out
xchg
push
pop
or
test
mov
cmp
cmc
jge
push
fnstsw
inc
or
adc
inc
mov
sbb
inc
mov
sbb
lret
dec
test
ret
movsb
xchg
jb
es
imul
inc
js
sbb
adc
pop
icebp
push
scas
inc
adc
jp
xchg
imul
sub
lret
inc
rorb
sahf
clc
mov
mov
jmp
sarl
fcmovne
mov
fsubr
ljmp
js
jle
js
inc
mov
pop
ja
lods
mov
cli
aad
dec
lods
scas
bound
mov
fidivrl
cltd
pop
mov
int3
stc
lcall
leave
cmp
or
sub
jns
push
fildll
sti
sbbb
ret
sub
jl
fcoms
mov
cli
cmpsb
xchg
sahf
mov
bnd
ret
mov
adcl
adc
mov
ljmp
imul
out
iret
scas
jle
data16
xor
out
push
out
test
fs
add
lret
out
push
mov
fidivrl
xchg
dec
jecxz
lahf
popa
dec
dec
adc
dec
cmp
and
fucomi
stos
xchg
add
idivb
mov
hlt
sbb
inc
bound
call
mov
outsl
nop
pop
pushl
pop
jle
fcmovne
xchg
or
xchg
sbb
sbb
int3
imul
add
mov
jnp
out
ss
jmp
mov
mov
aas
bound
rorb
adc
outsb
xor
loopne
or
ret
inc
xchg
cmp
mov
push
sbb
addr16
das
adc
rcll
out
xor
sbbb
popf
std
div
sarl
sub
orb
xchg
xor
pop
out
push
cmp
in
pop
pop
subb
jae
in
xchg
pop
jbe
xchg
lods
xor
adc
adc
jle
mov
jmp
xlat
sbb
pop
jo,pt
cmp
push
pop
cmp
call
xchg
cmp
ret
getsec
clc
shll
dec
pop
push
and
jmp
sbb
stc
stos
movsb
push
and
sub
icebp
jae
fwait
inc
cmp
push
add
mov
stos
mov
insl
addb
shrl
dec
push
pop
mov
arpl
test
jle
imull
add
adc
outsl
imul
inc
fwait
push
fs
jp
dec
lods
dec
push
pop
test
add
repz
shr
idivl
iret
repnz
mov
arpl
testl
popf
sti
outsl
adc
lods
js
or
push
call
xlat
or
add
clc
add
lret
sub
sbb
add
popa
nop
mov
inc
lcall
mov
adc
insb
xor
roll
dec
xchg
xchg
shll
sbb
test
fcomps
mov
sbb
mov
push
out
or
jnp
xor
dec
cmp
fs
fbld
faddl
lea
sub
dec
cmpsb
cs
clc
push
jecxz
adc
mov
lods
idivl
jmp
rol
leave
fcmove
rcl
pop
mov
xor
mov
je
js
sbb
aas
jno
lds
or
and
push
mov
rolb
jbe
xchg
xor
sbb
adc
insl
cmp
idiv
xchg
jecxz
or
or
sbb
shrl
push
mov
fsts
leave
mov
dec
push
pop
cmp
insl
fisttpl
ds
popa
shrl
sti
movsl
jb
mov
cli
sbb
mov
add
fists
inc
es
rdmsr
loopne
out
sbb
fistpll
add
lahf
adc
roll
mov
std
jmp
cmc
inc
push
pop
jnp
jae
inc
in
pushf
negl
pop
push
std
or
and
xor
xchg
dec
insl
xchg
cltd
loop
out
or
shll
bound
dec
and
cmpsl
jecxz
xchg
cmpsl
mov
lock
mov
xor
cmp
andl
lods
ret
jl
jns
sbb
pop
mov
insb
mov
repz
cmpl
stos
outsb
ret
daa
xchg
xor
and
shr
stc
mov
sub
sub
inc
mov
cs
cmpb
mov
popa
popf
aaa
mov
cmc
outsl
dec
cli
fbld
sub
testl
fiaddl
daa
movsl
adc
lock
jmp
xor
cmp
ljmp
jl
hlt
or
mov
cmp
cmp
mov
stos
shll
sbb
and
or
fdivp
jle
sbb
out
mov
dec
jno
subl
xlat
into
jle
inc
dec
in
pop
dec
aaa
insl
jle
imul
mov
jg
push
pop
je
jne
clc
cmp
stc
cs
mov
fildll
cmp
jecxz
jns
iret
or
pusha
inc
subb
loope
cmp
je
insb
add
ja
adc
sbb
jg
dec
sbb
and
adc
es
dec
push
cwtl
and
pop
jg
or
ret
mov
dec
pop
inc
sbb
mov
jg
bound
or
sub
lods
add
push
ds
fcmovbe
pop
mov
sbb
mov
sub
inc
xchg
fdivr
imul
ficompl
leave
lret
data16
sbb
mov
sbb
loop
dec
jge
cmp
dec
add
sub
loopne
cltd
popf
pop
les
mov
sub
mov
notl
enter
sbb
mov
xchg
aas
push
into
mov
fbld
test
mov
push
cmp
add
js
sbb
mov
roll
push
push
lret
or
or
enter
push
add
test
stos
lods
arpl
lds
and
sub
test
add
add
popf
sbb
pusha
mov
xor
add
pop
pop
pop
leave
ret
mov
add
jmp
leave
xlat
ret
rcl
leave
fldcw
inc
cmp
je
js
test
mov
dec
mov
int3
gs
mov
cmc
inc
testl
sbb
sbb
lds
mov
cmpsb
movsb
pushf
push
add
cmp
nop
mov
popf
and
inc
sub
loope
mov
out
aam
jns
xor
jne
out
sbb
ja
pusha
cmp
and
xchg
xor
mov
push
test
sahf
jp
or
jg
jecxz
mov
xchg
out
and
lahf
filds
aaa
lahf
sub
int
mov
aam
pop
dec
inc
orl
jmp
mov
and
inc
ret
push
incb
push
inc
fstl
out
loope
int
pop
sub
add
or
cld
xchg
and
mov
out
filds
and
cs
cmp
aaa
jbe
jmp
add
add
push
out
or
sbb
insb
aaa
fiaddl
out
ret
cld
out
xchg
in
add
dec
cmpsb
jge
adc
pop
mov
in
fdivrl
jne
xor
xchg
mov
dec
mov
pop
ss
pop
cld
pusha
mov
jg
mov
nop
mov
xlat
mov
cmp
call
pop
loop
jge
int
arpl
mov
pop
movb
test
sbb
mov
test
jnp
stos
mov
fnstcw
sarb
mov
mov
add
sbb
jno
dec
pusha
das
xchg
test
xchg
jg
push
enter
pop
cmp
dec
mov
popf
jmp
sbb
clc
fsubs
jo
inc
testl
hlt
mov
push
or
pop
ja
add
movsl
std
cwtl
fabs
push
or
cs
mov
push
push
xor
and
cmp
adc
repz
jo
pop
inc
sahf
je
subb
or
stos
adc
xchg
outsl
mov
das
push
cmp
cld
jp
jl
jo
push
icebp
inc
mov
lea
or
movsb
add
pop
cld
ret
pop
pop
jmp
or
add
adc
outsb
out
lods
fucomp
movsb
iret
jo
sbb
insb
cmp
sub
xchg
movsl
push
fwait
or
int
sub
clc
ja
fsubr
and
inc
js
shr
das
jne
add
les
jp
cs
jge
sub
add
sbbl
ja
imul
ja
sub
popa
pop
pop
in
shrb
xor
movsl
shr
movb
xchg
jns
mov
int3
pop
or
mov
mov
jno
pop
pop
pop
hlt
and
jae
int3
inc
jg
sbb
mov
pop
dec
pop
adc
adc
xor
cmp
je
mov
andl
jmp
jmp
into
aas
ds
rcl
add
stos
rol
iret
das
and
je
js
stos
adc
mov
or
mov
push
pop
xchg
pop
cmp
sub
scas
sub
fnstenv
mov
mov
out
mov
ja
mov
stos
jo,pt
faddl
arpl
gs
in
or
icebp
sub
cmpb
xor
inc
jae
xchg
push
out
loope
jmp
jae
xchg
mov
add
pop
bound
and
xchg
fdiv
jge
mov
mov
xchg
imul
out
mov
imul
outsl
hlt
aaa
or
mov
xchg
dec
ljmp
sub
outsl
or
arpl
stos
xor
aaa
divb
ljmp
movsl
idiv
cmp
in
loopne
rcll
and
pushf
xor
lret
das
gs
pop
pop
xchg
cmpsl
or
xor
loopne
jns
repnz
add
aad
xchg
push
pop
mov
sub
in
pop
popa
clc
xchg
cwtl
push
test
adc
inc
daa
fisubrl
test
repz
add
dec
iret
fnstcw
push
icebp
clc
emms
jl
test
adc
adc
add
test
out
cld
mov
or
not
sbb
rorl
push
push
fs
out
jb
jmp
push
fildll
fisubrs
pop
shrl
mov
lock
jo
cmpsb
or
and
cmp
cmp
ss
arpl
out
scas
hlt
rcll
sbb
inc
pop
rorb
int3
das
dec
jecxz
ja
mov
mov
test
rcll
fs
push
dec
ret
inc
cltd
gs
jmp
pop
pop
adc
popa
pop
cmp
insb
xor
popa
xor
xor
filds
stc
outsl
inc
adc
mov
dec
addr16
add
add
aam
addr16
jle
rcrb
push
jnp
out
mov
xchg
cmc
mov
adc
ds
pop
adc
or
cmp
je
shlb
les
dec
mov
or
adc
cltd
ds
ja
inc
and
cmc
idivl
inc
sbb
shr
stos
sbb
hlt
push
jmp
jo
dec
je
enter
mov
xlat
bound
jecxz
jns
fsubrs
mov
aas
mov
sub
jno
out
mov
outsl
push
push
xchg
jo
fldl
fsts
fisubrs
push
leave
inc
stos
mov
push
call
cmp
adc
sbb
push
lds
aam
add
lods
pop
sub
or
loop
gs
inc
out
jbe
iret
dec
jae
ss
test
pushf
fldl
fs
notb
pop
je
outsl
insb
pop
fnstenv
sub
je
aad
push
loope
sar
jecxz
adc
call
jle
cli
je
mov
xorl
jmp
mov
jmp
ds
ror
rcl
fisubrl
xchg
jge
enter
xchg
js
je
js
dec
hlt
push
rcr
jno
fs
imull
sbb
scas
sbb
mov
imul
mov
daa
inc
out
lea
ror
movsl
inc
enter
in
push
add
mov
inc
out
bound
sbb
mov
out
cld
gs
push
and
adc
cs
fwait
insl
dec
mov
push
test
shlb
push
xchg
xchg
push
or
ljmp
dec
imul
and
or
data16
mov
lret
test
ss
dec
mov
push
cmp
mov
xor
cltd
dec
or
sbb
dec
addr16
sub
mov
leave
jns
movsb
mov
dec
dec
cld
jl
decl
mov
decl
lea
and
cmp
pop
ror
mov
or
dec
xor
and
movsl
pop
fildl
cmp
sbb
rcrb
push
xchg
sub
out
test
daa
or
cmp
scas
scas
and
insl
push
jnp
imul
addr16
xchg
push
insl
lret
pop
pop
or
mov
push
lret
imul
shr
and
mov
sub
mov
fs
fsincos
pop
jp
sbbb
xchg
cli
xor
xor
and
adc
repz
loope
sbb
xlat
mov
and
add
pop
xchg
dec
stos
or
mov
ljmp
clc
pusha
cs
xchg
repz
lods
int
xchg
jmp
pop
cmp
mov
dec
jge
frstor
mov
pop
adc
or
and
sub
xor
loopne
xchg
xchg
ror
push
or
daa
jl
cmpl
daa
enter
mov
xor
fidivrs
jl
test
pushf
push
shrl
push
out
mov
mov
xor
cmp
ss
test
enter
xchg
adc
jl
pop
dec
cmp
mov
js
stos
mov
movb
mov
gs
inc
int
or
loopne
inc
mov
das
cmpsb
jmp
lods
cmp
andl
push
out
out
sub
sub
mov
sbb
dec
fisttpll
sbb
insl
loopne
sub
ljmp
iret
add
mulb
into
adc
pop
push
ljmp
xchg
imul
mov
prefetchnta
mov
inc
dec
mov
gs
jb
in
daa
push
sub
pop
int3
rorb
push
loopne
decl
fdivrs
rolb
int3
decb
nop
shll
fwait
xlat
out
sarb
shrb
push
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
jmp
int3
into
lret
ror
ficoml
cmc
ds
out
ds
js
je
js
cmp
mov
mov
mov
mov
jns
mov
cmpsb
fisubrl
cmpsl
sbb
data16
mov
cmp
pop
adc
imul
fwait
pushf
shlb
mov
mov
xor
pusha
scas
xchg
sub
sub
sbb
mov
jle
in
shrb
outsl
mov
adc
push
data16
lcall
fwait
sbb
jecxz
orl
fsubrs
sbb
pop
daa
jne
inc
ds
cwtl
mov
and
mov
jecxz
in
sti
faddl
mov
stos
jp
adc
inc
scas
lret
mov
add
scas
push
cli
fnstenv
fldenv
and
sbb
dec
pop
stc
cs
add
hlt
imul
clc
mov
insl
js
jmp
dec
aad
pop
xor
icebp
rcrb
dec
cmp
cmp
fldl
into
fidivs
xor
pushf
push
sbb
dec
inc
push
nop
lret
subb
mov
sbbb
nop
xchg
inc
test
movsb
mov
jle
mov
xor
idivb
cltd
movsb
mov
jbe
sbb
pop
es
cmp
mov
cmc
daa
adc
stos
pop
mov
shl
fcom
pop
repz
in
push
scas
lds
imul
push
pushf
out
jmp
sub
mov
xchg
cmp
sub
xorl
arpl
cmc
xlat
inc
in
jo
fs
mov
mov
mov
pop
adc
sar
xor
pop
hlt
push
or
or
mov
cmpsb
cli
ss
lock
fwait
mov
cmp
lods
sub
std
test
popa
call
inc
test
outsl
outsl
cli
inc
mov
frndint
and
incb
adc
push
cmp
test
and
dec
gs
cmp
fisttpl
cli
cmp
mov
mulb
jbe
jp
xor
or
testl
adc
add
adc
fwait
sbb
mov
les
scas
inc
adc
addr16
xchg
data16
or
in
mov
jp
mov
enter
jge
aaa
inc
and
and
mov
cmp
dec
mov
add
leave
or
repnz
pop
lods
xor
or
ret
xchg
out
mov
les
pop
jp
mov
movsb
cmp
stc
lahf
test
scas
roll
std
inc
loopnew
xor
push
and
jae
cwtl
jmp
push
rolb
out
push
push
cmpsb
or
cmp
pop
dec
sahf
inc
pop
cmpsl
inc
mov
add
jmp
inc
fsubs
jge
mov
jmp
xlat
cmp
ds
js
adc
jno
xchg
cmp
js
mov
sbb
fldt
out
mov
mov
shll
gs
sbb
das
lret
lret
and
bound
sbb
sbbl
pop
xchg
sbb
mov
or
cmp
push
push
adc
mov
in
push
jmp
hlt
dec
jb
push
inc
sbb
mov
cli
inc
call
pop
jmp
sub
loopne
adc
and
jns
jne
mul
cli
movsl
or
rolb
mov
push
pusha
pushf
mov
popf
add
jno
xchg
mov
pop
addr16
inc
scas
sbb
sbb
idivl
push
push
lods
or
jecxz
and
fwait
sahf
cmp
sub
add
js
add
xor
dec
mov
adc
adc
sbbb
lahf
jae
lret
mov
push
jmp
pop
pop
pop
sub
mov
ds
push
mov
mov
rolb
std
cmp
sub
push
out
or
mov
out
add
andb
ss
loopne
std
pop
or
xor
push
int3
pop
pop
cmc
pop
xchg
cmp
aas
adc
mov
scas
adc
mov
jns
out
popa
dec
add
mov
sub
pop
and
clc
mov
cmovp
pop
adc
in
add
jge
idiv
fdivl
push
fnsave
movsb
pop
push
mov
cld
es
xorl
loope
dec
add
pop
ljmp
cmp
jbe
push
clc
inc
xlat
bound
dec
xor
std
lret
lret
jns
adc
in
and
inc
push
ficomps
xchg
xorps
dec
push
mov
aas
jecxz
push
mov
sahf
xchg
inc
frstor
sub
test
lods
cwtl
ja
pushf
movsb
adc
dec
popf
push
jbe
aaa
push
jo
stos
pop
lret
out
insb
dec
push
sub
sub
jle
jg
mov
int3
shll
mov
outsb
icebp
loop
subb
in
call
sarl
mov
es
fisubl
xchg
mov
or
int
push
jecxz
nop
das
shl
cs
iret
in
lret
out
ds
cli
push
inc
mov
aaa
xor
clc
in
cmpsb
xor
push
mov
xchg
loop
pop
arpl
cmc
jb
es
fildll
push
xlat
cmp
les
dec
cwtl
jne
pop
cltd
lds
addr16
and
shlb
push
out
push
in
pop
pop
pop
push
mov
sub
call
xor
repnz
int3
sub
cwtl
sbbl
mov
xchg
in
aaa
xchg
xchg
jae
push
js
cmp
cmp
pop
fucom
jbe
pusha
jno
clc
fs
and
popf
fcmovnbe
out
nop
dec
jnp
cld
nop
lds
sti
add
movzwl
mov
xor
lea
add
jmp
cmp
fcmove
lcall
je
js
jb
mov
fdivrs
hlt
add
or
lods
addr16
mov
shl
xor
lock
daa
xchg
roll
push
jnp
js
jg
mov
int
arpl
adc
jo
insb
sub
xchg
cmp
mov
lock
out
push
fsubs
mov
out
dec
mov
lock
pop
ds
lea
push
cmp
fstp
mov
addr16
int
push
or
mov
call
test
shl
or
les
fisubs
dec
stc
inc
rclb
sub
cmc
xchg
sbb
pop
fnsave
and
in
test
add
lods
shll
std
lahf
jno
popa
lahf
xchg
out
les
mov
addr16
mov
test
mov
mov
push
arpl
cmp
add
push
or
mov
push
inc
and
sub
jecxz
mov
leave
xchg
pushl
dec
lea
cwtl
roll
xchg
push
rcrl
sbb
dec
push
aaa
xor
or
movsl
cwtl
aas
mov
sub
adc
test
int
test
mov
loop
outsl
lcall
jl
cmp
mov
push
enter
roll
mov
test
mov
dec
loope
mov
adc
mov
daa
xchg
sub
ja
xchg
lds
jl
sbb
sub
hlt
scas
push
push
das
fwait
cmpsl
ret
sub
dec
or
mov
and
push
mov
cmp
mov
adc
xlat
mov
mov
ret
dec
cmpsb
inc
call
cmp
inc
data16
into
dec
popa
jp
imulb
adc
mov
les
push
test
mov
mov
and
fs
daa
inc
and
call
cmp
jne
push
and
mov
jno
mov
xchg
pushf
cmp
lock
pushf
xchg
lods
dec
xor
add
jns
and
ret
stos
xor
jb
lcall
mov
and
lea
inc
mov
fs
xchg
scas
pop
daa
je
es
mov
mov
notl
and
pop
cwtl
or
xor
outsb
and
mov
filds
pop
xor
mov
aad
dec
pop
cmpsb
pop
dec
jno
sarl
pop
push
add
xor
out
cmpsl
jmp
ljmp
xor
push
sub
xchg
adc
sbb
mov
inc
or
push
mov
std
lret
cld
dec
jle
daa
aaa
cmc
pop
xor
pop
xchg
push
pop
rep
add
subb
inc
xor
cmp
jbe
push
push
jb
aaa
lar
push
in
inc
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
jmp
rol
leave
rcr
mov
inc
sub
je
js
add
and
cmpsb
sub
or
dec
stc
dec
stc
jp
push
bound
jbe
cmp
icebp
js
stos
adc
mov
xchg
push
push
ljmp
sub
mov
and
gs
jae
mov
out
idivl
pop
fisttpl
lock
dec
lcall
rcrl
sub
jmp
scas
insb
outsb
imul
loope
loop
jge
and
mov
sbb
xchg
or
pop
adc
jmp
sti
lock
or
sub
sahf
in
jnp
adc
jl
jb
mov
cmp
popf
dec
lds
cmpsb
lods
add
mov
in
jle
add
lret
in
shlb
stos
popa
pushf
jbe
pop
movsl
push
aam
fadds
lret
les
cs
sub
out
stc
xor
lods
bound
sbb
rorl
js
xchg
dec
cmpsb
fwait
mov
inc
xchg
fsubrs
push
or
jmp
push
fcoml
in
std
ds
sbb
out
frstor
sub
mov
movsb
fmuls
add
jno
data16
and
test
js
jae
fimuls
gs
push
and
scas
stc
pushf
sbb
fnstsw
jle
scas
insl
add
inc
jne
out
incl
xchg
ss
fxrstor
pop
jne
xor
dec
leave
jns
hlt
lods
stos
scas
and
outsl
popf
xor
movsl
dec
push
mov
mov
divl
mov
add
data16
movl
icebp
js
popa
shrb
mov
les
jns
out
cs
jmp
aam
or
cmpb
xchg
adc
leave
and
daa
or
push
insl
ret
out
add
je
in
jge
jg
repnz
sbb
ds
js
cmpsl
pop
loop
jmp
jno
push
insb
or
mov
outsl
xor
xchg
call
into
lret
in
mov
sub
orb
dec
and
pop
mov
loopne
hlt
les
test
sbb
nop
sub
mov
jecxz
clc
divb
cmovb
sub
pop
je
push
enter
pushf
and
aaa
sahf
or
sbb
sub
cmpsb
out
xchg
xor
mov
push
push
andb
push
or
mov
loop
xchg
adc
lahf
inc
xlat
dec
outsb
xor
xchg
mov
loope
xor
xchg
mov
push
mov
adc
mov
out
or
cmp
inc
mov
sub
or
int
xchg
ljmp
call
jg
xchg
push
mov
jg
and
inc
mov
inc
sti
dec
fcompl
aam
out
lock
add
add
rol
ror
aad
xchg
mov
aad
sahf
mov
js
stos
mov
popa
jne
mov
dec
das
jns
in
test
xor
cmp
dec
sub
aam
sub
iret
stc
and
je
notb
fistpl
inc
pushf
out
sbb
sub
rcrl
cmp
outsb
lret
fmuls
and
movsb
sbb
mov
gs
inc
xchg
add
mov
push
mov
sahf
jnp
pop
in
mov
mov
mov
cmp
push
cmpsb
adc
pop
add
cmpsb
add
loop
icebp
mov
fcomi
mov
cmpb
xlat
xor
ffree
mov
nop
push
adc
xchg
pushf
dec
movsl
adc
xor
clc
mov
pop
push
dec
shlb
in
sbb
add
sub
insb
sub
ret
mov
mov
pop
jp
dec
sbb
loope
fmuls
lret
or
adc
mov
lods
call
fs
jp
std
aas
jmp
flds
and
and
cmpsl
shlb
and
mov
adc
clc
and
lahf
call
sub
lock
xchg
cld
mov
cmpsl
pop
int3
mov
push
mov
mov
dec
insl
stc
dec
iret
movsl
and
mov
sub
loope
cmpsl
sbb
aas
cmc
inc
sbb
push
inc
add
jnp
enter
xchg
test
cs
es
mulb
iret
mov
xlat
mov
mov
sarl
inc
data16
adc
out
cltd
sub
mov
das
out
add
daa
sbb
push
hlt
bound
in
movsl
stos
in
push
jmp
jns
js
repnz
cmpsl
icebp
ret
ret
add
push
fwait
adc
pop
pop
and
gs
cmp
test
in
into
add
adc
jo
fs
in
mov
mov
inc
mov
mov
mov
pop
and
pop
and
fs
xchg
jo
pop
hlt
dec
pop
loop
cmovp
sub
dec
outsb
jge
mov
mov
or
data16
and
fwait
cmpsb
xor
fwait
enter
in
mov
mov
xchg
xchg
sahf
loope
in
in
jne
xchg
iret
test
movb
repnz
fdiv
sub
push
push
push
push
or
cs
jl
inc
cmp
fwait
mov
jbe
cmp
dec
pop
and
xchg
pop
jl
aam
cmp
push
data16
mov
decb
cmp
arpl
data16
stos
cli
sbb
jb
out
jne
sbb
shl
je
mov
jmp
push
mov
sub
sbbl
mov
xorl
jmp
ror
mov
fcmovbe
push
aad
xor
js
xor
jno
push
nop
or
dec
test
jle
xor
jb
sahf
iret
jge
push
subl
pop
xor
push
pop
icebp
rcrb
lret
scas
into
fbstp
or
jge
loopne
xor
call
mov
push
ljmp
push
push
push
xor
pop
cmp
jb
lods
mov
ss
add
cmp
xor
xchg
daa
cmc
sub
jecxz
scas
xor
mov
jge
jo
je
adc
cld
or
psubq
das
das
popa
gs
les
push
mov
xchg
fdivs
clc
es
sahf
ss
cmp
imul
daa
mov
push
test
cmp
test
mov
dec
add
adc
insb
cmp
sbb
enter
test
dec
loope
in
xor
sub
xchg
cld
mov
pop
sub
mov
add
int
imul
shrb
and
cwtl
xchg
and
mov
loope
subl
or
xchg
xor
rorb
ds
and
leave
mov
cmp
xor
jae
dec
lods
nop
jl
xchg
imul
xchg
clc
xchg
loop
push
nop
sahf
int3
hlt
push
int
push
pop
rorl
or
jae
dec
cs
lea
dec
call
and
inc
mov
bound
sub
test
mov
ja
fadds
cmpsb
mov
lahf
inc
pinsrw
mov
xor
mov
ljmp
jae
cli
mov
jecxz
adc
push
aas
push
scas
mov
sbb
mov
call
fstpl
rorb
mov
xor
sti
adc
testl
xchg
inc
das
add
mov
movsl
push
jbe
popa
movsl
sbb
xchg
shlb
stos
das
or
or
xchg
jl
inc
mov
or
jl
insl
mov
inc
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
movzwl
xor
mov
xor
or
mov
adcl
add
subl
push
mov
adcl
mov
negl
xor
jmp
int
iret
lret
and
push
pusha
imul
js
jle
js
pushf
and
ss
dec
pop
mov
data16
fistpll
add
sbb
mov
icebp
lods
add
out
mov
sub
ljmp
ljmp
inc
adc
and
or
movsb
daa
cltd
daa
sub
lds
cltd
incb
out
lds
mov
xchg
sub
jg
negl
inc
push
fidivl
bnd
and
fnstsw
lcall
call
sbb
mov
xlat
add
testl
jmp
ljmp
imul
loop
inc
inc
mov
jp
sbb
xor
jo
mov
cmp
xchg
in
push
lock
add
inc
shll
aaa
mov
inc
xlat
js
add
iret
jb
mov
inc
cmp
in
pop
bound
cmp
inc
daa
stos
xchg
mov
push
gs
pop
xor
lahf
rcrl
pushl
cmpsl
dec
cmpl
cwtl
scas
mov
mov
mov
jg
rorl
mov
popf
fistpl
cmp
lds
pop
inc
mov
aad
mov
mov
fs
fnstsw
push
mov
ficoml
imul
xchg
int
imul
lret
fwait
mov
andl
xor
in
pop
fsubs
ret
dec
adc
test
call
out
push
push
jo
inc
cli
push
push
cmc
cld
stos
popf
fnsave
jl
jp
mov
out
fistpll
es
mov
jp
push
sub
outsb
push
xchg
push
roll
sarl
jo
jp
jg
or
xchg
aas
xor
push
inc
pop
dec
mov
mov
insl
fcmovnb
outsl
sub
push
scas
jp
arpl
aad
mov
aad
mov
or
inc
ret
std
cld
adc
inc
xchg
cmp
rcr
pop
popf
sbb
iret
int
jne,pt
out
mov
fistps
xchg
int
incl
mov
jno
dec
in
movl
movl
andl
add
jmp
cmp
jne
mov
mov
mov
mov
mov
movl
mov
mov
movl
jmp
movl
jmp
leave
ret
enter
fld
int
fdiv
mov
stos
js
xor
pop
push
aaa
jle
adc
adcl
jge
cmp
push
pop
fcoms
mov
adc
outsb
out
ljmp
and
leave
sub
inc
dec
xchg
ja
adc
or
jle
jl
icebp
or
or
push
lcall
push
cmp
and
cmpsb
xor
or
scas
fnsave
into
mov
sub
add
xor
aam
jb
popa
enter
loopne
in
cmc
mov
or
imul
cwtl
divb
adc
cld
push
dec
or
mov
add
mov
repnz
push
xchg
mov
orb
test
test
movsl
push
or
or
dec
std
pop
inc
fnsave
int
sbb
les
mov
dec
nop
addl
cmp
insb
mov
shlb
inc
out
sub
out
test
hlt
adc
rsm
mov
mov
outsb
lods
iret
pushf
test
ja
mov
lret
test
lcall
cmpxchg
sahf
fcoml
mov
and
test
xchg
mov
adc
test
xchg
jle
aaa
jns
adc
notl
pop
jbe
imul
jae
sbb
stos
add
test
adc
push
sbb
sub
pop
daa
pop
mov
sub
fadds
mov
pop
movsl
mov
sub
arpl
pcmpgtd
ret
add
push
scas
push
adc
xchg
jp
push
xchg
pop
and
in
test
inc
lahf
sub
sub
xchg
fildll
imul
pop
mov
push
in
cmp
rorb
pop
dec
push
cmp
dec
aad
adc
test
movsl
movsl
inc
pop
movb
push
sbb
fcomip
fcoms
mov
out
sbb
leave
jb
adc
cmp
and
sbb
ret
and
jbe
or
cmp
movl
jne
and
jmp
int
into
aad
lea
nop
ficomps
js
xor
cmp
sbb
mov
mov
xchg
arpl
scas
fisubrl
stos
stos
hlt
in
lods
mov
mov
cmc
jmp
sub
push
sbb
lahf
jg
push
call
and
js
sub
cwtl
xor
cs
push
push
lea
add
dec
or
pop
jnp
daa
dec
pop
lret
jno,pn
xchg
sub
push
inc
mov
xchg
mov
and
inc
push
sbb
xor
mov
xchg
test
xor
jle
lcall
mov
inc
jns
decl
add
insb
popa
cmp
or
int
xchg
jnp
dec
imul
mov
imul
fwait
push
mov
cmpl
cld
push
in
cmp
dec
loope
repnz
sarb
dec
fcmovb
test
aas
nop
rorl
sub
popf
hlt
test
sub
in
add
pop
ds
cmpb
or
add
xor
xor
add
dec
out
dec
and
or
add
lds
xchg
ret
sub
sub
inc
orl
pushf
mov
xor
outsl
adc
pop
aaa
test
loope
shl
push
in
mov
and
mov
in
cmp
cwtl
jl
out
adc
movb
and
xchg
cmc
aaa
jb
lds
push
clc
negl
adc
addr16
jle
rcr
in
inc
mov
dec
or
jmp
lcall
data16
mov
pop
mov
mov
sbb
cmp
pop
in
call
scas
sbb
xlat
jns
in
dec
xchg
mov
jl
dec
pop
xchg
add
rcll
scas
stos
in
mov
pop
movsl
int
push
mov
hlt
adc
mov
daa
cmp
hlt
push
hlt
outsl
pusha
mov
and
lret
lea
stc
cmc
filds
pop
cli
jne
out
popa
imul
mov
and
in
push
cmp
ja
or
mov
sbb
mov
mov
xorl
sub
orl
push
adcl
mov
jmp
enter
ret
push
in
pop
dec
or
jo
push
scas
js
xor
test
jmp
lcall
sbb
cmc
aad
adc
add
push
mov
loop
cmpsb
push
push
inc
xchg
mov
xor
pop
jecxz
andb
pop
cmp
push
jmp
jmp
in
pop
aad
pop
aad
fdivs
xlat
adc
fisttpll
out
cmp
fldcw
es
mov
cmp
mov
jnp
jns
push
popf
out
pop
adc
and
movsl
sbb
out
cli
sbb
enter
cmp
mov
cmp
aaa
push
mov
rcrb
pop
inc
movsb
in
cmc
dec
test
mov
xor
out
out
pop
fldcw
sbb
stos
xor
and
test
or
cltd
sub
lahf
fstpl
jl
sub
or
pop
insb
mov
sahf
scas
hlt
add
mov
inc
mov
mov
xor
in
call
cmpsb
pop
adc
adc
and
fmulp
inc
scas
push
fstpt
nop
mov
fs
ret
pop
push
rol
lods
fadds
pmaxsw
cmp
xor
mov
fisubrl
movsl
push
mov
insl
xor
jge
repnz
mov
push
push
test
mov
jne
push
clc
cmp
sbb
dec
ds
pop
pop
movsl
lcall
jb
cmp
add
imull
dec
pushf
jae
jp
sbb
fiadds
sahf
insl
shrb
pop
sub
add
sub
inc
imul
rolb
pop
xchg
mov
mov
cld
push
je
popa
fnstenv
cmpl
addr16
dec
mov
inc
nop
mov
mov
in
adc
and
cmp
and
mov
xor
fnstcw
adc
push
and
pusha
and
inc
scas
jg
aas
sub
push
inc
jns
jmp
pop
pop
arpl
out
scas
bound
lods
inc
sbb
jae
orb
ljmp
jo
pop
add
addl
push
adcl
call
movl
incl
cmpl
movl
jb
movl
jmp
cmp
jne
sbb
movl
mov
mov
mov
mov
movzwl
and
mov
adcl
xor
jmp
rol
leave
leave
leave
leave
rcrb
inc
jmp
lods
js
xor
out
sub
aad
lock
jo
int3
dec
and
pop
add
enter
outsl
xor
cmp
or
stos
shll
jp
scas
jnp
and
cld
jmp
shll
sub
int3
xlat
test
loop
xchg
mov
inc
jp
jo
lds
add
sbb
rcrl
mov
std
or
dec
xor
aas
idivb
pop
or
pop
mov
enter
pop
mov
mov
xor
mov
inc
nop
lock
fisttpll
out
lret
test
and
mov
or
test
hlt
es
ret
push
ja
push
pop
aaa
add
adc
or
scas
mov
mov
sub
inc
hlt
pop
cmp
sub
xchg
xorb
in
shlb
xorl
fcompl
das
bound
iret
and
add
mov
cmp
jmp
loopne
stos
mov
ret
ds
inc
in
nop
adc
dec
mull
test
scas
fdivrl
mov
loop
ljmp
and
mov
lock
xor
popl
nop
inc
xchg
inc
scas
mov
inc
into
int
jle
pusha
mov
jp
out
push
sub
xchg
sti
dec
out
lret
rcrl
mov
jl
in
mov
xor
xchg
fnstsw
call
movsb
jne
push
out
addr16
mov
mov
out
repnz
daa
mov
roll
lret
fwait
xchg
inc
mov
cmp
outsl
js
clc
inc
popa
jecxz
pop
add
shrb
adc
dec
mov
int
xchg
pop
cmpsl
leave
shrb
mov
sub
out
xor
insl
push
push
add
sub
mov
and
ret
pop
add
lock
mov
inc
repnz
flds
jbe
sub
int
add
enter
in
in
add
ret
mov
notl
lea
mov
mov
xor
add
mov
lea
push
mov
jmp
ds
roll
or
js
jle
js
push
sub
mov
sti
inc
lret
jbe
shll
inc
loopne
mov
orb
sub
xorl
test
test
push
leave
xor
rolb
scas
xchg
ficompl
enter
xor
jne
push
cmp
add
push
cwtl
clc
jg
pop
xchg
clc
out
movsb
dec
mov
inc
scas
mov
add
loop
jmp
and
fsubrs
mov
sbb
mov
adc
outsl
lcall
xor
fs
outsb
jecxz
icebp
pop
sub
dec
sbb
adc
mov
pop
push
sub
pop
lcall
sbb
loope
mov
lds
or
cmp
mov
mov
pop
pop
mov
dec
out
dec
push
mov
xor
stc
mov
xor
cmp
aam
sub
xchg
add
std
xchg
cli
ror
jmp
stos
out
xchg
hlt
outsl
loopne
enter
test
lds
mov
int
into
xor
and
dec
sbb
and
xchg
dec
rcrb
lahf
xchg
call
clc
inc
loop
add
mov
push
inc
lcall
imul
mov
and
gs
mov
aaa
pusha
fsubs
add
pop
adc
jg
ret
xlat
pop
pop
rorb
test
ja
es
pop
adc
lret
adc
jnp
mov
adc
lea
fldt
addb
loop
jle
clc
inc
repz
push
xchg
xor
inc
inc
bound
adc
cmp
xlat
xor
pop
fisttpll
pop
cmpsb
jmp
xchg
xchg
add
dec
cwtl
dec
sub
addl
sarb
loope
cltd
out
mov
push
jo
xchg
arpl
pop
mov
sbb
and
inc
sbb
jmp
inc
push
sub
mov
sub
or
sbb
icebp
mov
sbb
in
out
xor
add
push
jmp
xlat
lret
fcmovu
aas
cmp
push
int3
cs
jo
mov
js
jle
js
push
sbb
movsl
jb
and
jne
pop
aam
mov
hlt
push
pushf
stos
psrad
pusha
jno
mov
mov
push
je
aam
xor
subb
or
push
dec
or
pop
jne
dec
lods
icebp
lret
sbb
mov
lret
push
or
dec
ljmp
iret
mov
es
mov
push
xor
cmp
or
sub
les
insb
les
sbb
mov
cmp
xchg
push
mov
mov
iret
gs
std
jnp
mov
cmp
cmp
adc
imul
enter
repnz
mov
divb
mov
daa
jb
je
inc
ja
ret
popa
inc
inc
fadd
adcb
mov
sbb
aam
xor
add
pop
icebp
xor
jge
enter
add
push
iret
mov
xor
fmuls
mov
xchg
and
mov
mov
xchg
rolb
loope
xchg
adc
popf
sbb
sbb
push
pop
cmp
mov
mov
dec
js
lahf
ret
pusha
roll
xchg
fbstp
push
jbe
or
sbb
ret
arpl
pusha
mov
mov
cmpb
cmpsl
pop
xor
inc
popf
or
pop
xor
rorb
fcmovnbe
leave
rcrb
sbb
cmp
gs
mov
hlt
stc
fidivl
xchg
cli
mov
test
movd
mov
lds
sti
addr16
ljmp
scas
cli
mov
pop
push
mov
adc
pushf
push
shll
xchg
xchg
pop
cmp
lods
xor
insl
aaa
loopne
orb
cwtl
call
loopne
repz
inc
cmp
js
cmc
roll
adc
pop
loop
lahf
or
xchg
xlat
test
enter
cmpb
mov
add
icebp
adc
push
xchg
lahf
or
mov
sub
sub
cmp
adc
dec
pop
add
aam
shlb
push
pushl
call
jmp
cmp
jne
mov
jmp
sarl
ror
leave
dec
cmc
adc
mov
js
xor
arpl
loopne
imulb
push
jge
popa
and
push
rcrl
inc
stc
fisubs
cmpsb
stos
xor
inc
dec
aaa
add
jo
pop
ret
sub
sub
pusha
mov
mov
lea
or
lock
mov
xor
xchg
jl
cmp
fcmovne
and
pop
pop
ljmp
insb
pop
nop
xchg
add
in
insb
mov
xchg
dec
cmpsl
cli
jmp
mov
in
gs
push
and
lods
xor
add
repnz
mov
lcall
push
mov
dec
out
loopne
xchg
daa
mov
pop
rcrb
cmc
mov
xchg
jnp
shl
mov
rcrb
sub
mov
sbb
popf
and
mov
rcl
lret
push
inc
pop
jl
mov
xchg
fs
mov
imul
or
mov
mov
rolb
fcomp
scas
and
fisubl
push
shl
adc
jmp
rorb
cltd
mov
fdivl
insb
dec
inc
jp
pop
sub
pop
cmp
mov
sub
idivl
jecxz
xchg
gs
imul
pop
das
inc
adc
fmull
mov
lret
inc
notb
sub
push
repz
sti
and
in
test
ret
mov
mov
ds
clc
add
adcb
sub
adc
lods
shlb
inc
adc
and
sbb
leave
xchg
js
test
pop
adc
and
stos
sub
mov
lret
jge
lea
adc
mov
ret
lods
iret
dec
fs
dec
sbb
push
or
cltd
test
shrl
xor
inc
insb
push
aas
cmpsl
sahf
jns
cmp
mov
xchg
and
adc
lods
and
dec
dec
cmp
adc
aam
xchg
sbb
and
int
js
movb
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
jmp
leave
fcmovbe
sar
rcrl
jl
mov
aas
mov
js
shlb
dec
shlb
out
nop
sbb
mov
xchg
in
add
sbbl
and
cmpsb
push
xorb
cmovle
adc
sbb
cmpsl
js
pop
into
outsb
mov
dec
pop
cwtl
push
cmp
out
mov
lods
ja
sbb
popf
or
mov
sbb
hlt
cmp
in
int
inc
mov
or
or
fisubs
and
mov
push
cmovp
leave
xchg
ret
or
cltd
aad
adc
cmc
mov
fidivs
mov
jl
and
mov
aaa
scas
push
shrb
loop
or
mov
dec
mov
stc
jmp
repz
sub
and
mov
test
or
in
cmp
cmpsb
andb
aaa
std
push
lods
aas
push
cmp
adc
movsl
das
push
adc
arpl
iret
lret
mov
enter
mov
dec
mov
or
push
leave
stos
xor
jbe
test
mov
and
xchg
test
mov
xor
scas
pcmpgtb
push
setg
loop
mov
xchg
loopne
jp
jns
fnstenvs
popa
and
xchg
add
test
inc
mov
sub
outsb
mov
int3
mov
outsl
xor
or
daa
fisubrs
in
push
fisubrs
mov
cwtl
jo
test
sbb
imul
dec
xor
cmc
sub
rolb
fiaddl
dec
jns
push
or
and
xchg
mov
pop
add
push
mov
fs
aam
mov
sbb
fldcw
inc
jno
in
lock
outsb
dec
mov
lret
lea
lret
leave
sbb
xchg
push
mov
dec
jmp
adc
push
mov
outsb
ret
in
push
xchg
mov
orl
bound
jp
pop
cld
or
test
cmpsb
int
jge
lahf
dec
mov
pop
pop
xchg
xchg
or
sub
movb
call
jg
inc
or
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
jmp
cmp
aad
xlat
jecxz
ja
xor
je
hlt
mov
js
clc
mov
in
jb
imul
rolw
test
sbb
outsl
xchg
lock
cmpsl
xor
pop
sub
ljmp
push
pop
ret
hlt
add
mov
adc
das
inc
loop
and
pop
jbe
sbb
push
add
and
sbb
push
dec
inc
mov
stc
or
lock
cmp
jnp
jg
xlat
jg
sub
lds
test
repnz
cld
mov
adc
lahf
rcrl
imul
das
cld
pop
test
adc
xchg
testl
add
subb
bound
sbb
xor
adc
ret
inc
ljmp
mov
mov
call
jbe
iret
adc
iret
faddp
inc
jecxz
push
sbb
arpl
jl
scas
and
jne
push
mov
or
int
leave
shlb
and
jo
addb
aad
aam
and
fcmovbe
xlat
aas
xchg
popa
xchg
xor
and
rcrb
inc
and
xor
in
inc
add
pop
and
test
mov
daa
dec
inc
push
or
imul
or
xor
jnp
sti
or
or
adc
jmp
mov
sub
mov
adc
or
test
pop
xor
or
rorl
or
or
xchg
push
idivl
push
mov
mov
mov
mov
push
inc
stos
adc
cwtl
cmp
mov
sarb
jl
add
cmp
mov
cs
mov
or
lahf
mov
inc
pop
je
testb
pop
mov
inc
popa
mov
arpl
data16
inc
cmc
dec
xor
adc
sub
popf
nop
hlt
mov
mov
fsubr
inc
xchg
adcl
arpl
repz
fisttpll
lcall
sbb
aaa
cmpsl
push
pop
inc
mov
pop
in
ret
pop
imul
jl
test
mov
imulb
call
and
in
dec
cmpsb
dec
fldenv
push
or
or
mov
mov
xor
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
add
mov
xor
jmp
lret
ror
leave
lret
push
xchg
xorps
js
jle
js
rcr
out
pop
outsl
clc
icebp
test
cmp
add
lds
test
mov
sarb
aas
jge
inc
leave
and
or
mov
int3
sub
sub
cmpsb
jecxz
fwait
and
inc
xor
cmovne
es
andb
stc
int
clc
hlt
int
jl
add
dec
mov
das
cmp
and
jl
sbb
popfw
adc
test
into
or
jb
sbb
push
stos
sub
sub
push
mov
mov
adc
adc
xchg
adc
jbe
add
scas
mov
pop
cli
movsl
movsb
mov
mov
push
xchg
push
ret
aaa
mov
adcb
scas
sub
mov
push
or
cmp
ss
das
jns
push
jbe
xchg
faddl
sub
lret
jno
sub
int
lods
mov
sub
jg
xchg
pop
cmp
add
and
je
pusha
call
stos
xchg
jae
neg
dec
loopne
dec
jp
rcll
dec
sti
inc
pop
testl
dec
cwtl
test
mov
dec
cld
call
sbb
loope
icebp
insb
or
sub
dec
lea
mov
iret
mov
push
ss
cli
mov
inc
mov
das
sbb
or
cmp
out
inc
adc
xchg
das
push
cmp
loop
repz
mov
lahf
sbb
fmuls
arpl
lods
dec
add
and
pop
lods
mov
mov
lret
sbb
push
setnp
mov
mov
ja
imul
fsubl
loop
jmp
mov
addr16
clc
mov
arpl
adc
movl
in
push
sub
inc
adc
add
stos
xchg
mov
test
repnz
lock
jno
pop
push
and
pop
std
mull
pusha
cld
mov
loope
mov
lret
lea
pop
fs
jecxz
lds
fsts
cmc
lahf
cmp
mov
sub
mov
stos
push
push
inc
cli
fsubr
sub
test
mov
cmp
fbld
sub
dec
imul
test
add
add
add
incl
cmp
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
andl
xor
jmp
enter
fcmovnb
aad
push
and
cmp
pop
arpl
into
mov
js
clc
je
fildl
jae
lret
cmp
popf
ffree
outsl
mov
cmpsb
into
popf
iret
out
int3
adc
sbb
mov
int
xor
sbb
inc
shrb
or
mov
jne
inc
out
jo
add
repnz
jp
jecxz
cmpsb
mov
aam
jae
sub
movsl
test
xor
movsb
out
mov
jp
sbb
sub
rolb
or
sbb
rorb
fisttpll
addr16
mov
inc
dec
mov
mov
rcll
pop
lock
cmpsb
sub
sarl
inc
or
dec
into
fcomps
inc
sub
cmp
push
daa
cmpsl
and
subb
jns
jp
shll
fdivrl
movsb
dec
test
and
jo
push
int3
xchg
xchg
inc
pop
or
fs
into
test
fcomps
xchg
icebp
ret
pop
xor
jge
and
inc
loopne
sub
mov
test
adc
mov
lods
add
sub
push
cli
and
sub
pop
int3
or
inc
imull
mov
and
sbb
xchg
addr16
out
xor
daa
jno
in
fmull
fiaddl
mov
jae
fs
xchg
out
sahf
test
sbbl
insb
ret
popf
lods
test
inc
subl
xor
inc
cmc
cmp
das
and
jp
mov
xchg
add
popa
std
cmp
sbb
fimuls
andl
add
xchg
jp
in
pushf
cmp
push
and
adc
or
mov
mov
jp
pop
mov
jge
out
mov
push
push
adc
push
xchg
cld
sbbb
call
xor
and
mov
outsl
out
push
fidivrl
jne
nop
sbb
or
mov
insb
enter
jne
sub
inc
sub
insl
adc
mov
fistpl
xchg
and
sbbb
adc
pop
imul
ficomps
ret
push
clc
cmp
sbb
imul
inc
scas
fstl
add
lea
scas
not
sub
pop
jmp
add
lds
decl
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
xor
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
and
movl
sub
movl
and
movl
orl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
pushl
call
jmp
movl
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
push
call
xor
or
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
decl
mov
movl
jmp
ret
sarl
roll
cmpsb
xlat
mov
jle
js
sbb
adc
outsl
inc
outsb
ljmp
mov
rorb
jne
xchg
add
lods
mov
lods
xor
push
loopne
mov
pop
lods
rolb
and
lods
dec
in
pushf
out
popf
loopne
jl
cwtl
xchg
loop
fildl
or
xor
int
dec
mov
pusha
notb
mov
dec
adc
dec
jge
jne
lea
or
outsl
push
or
xchg
dec
cmp
pop
sub
aas
sbb
or
je
xbegin
inc
push
imul
inc
or
daa
lcall
pop
cmc
inc
or
insb
test
fldcw
loop
in
push
mov
xchg
cmc
popf
sbb
xchg
fsubr
js
insl
lods
popa
cmp
fsubp
push
mov
jne
mov
mov
popf
cmp
pop
sub
and
ret
out
mov
mov
mov
xlat
loope
insl
rcr
xchg
and
sub
pop
xchg
cld
imul
mov
fisubrl
fiadds
stc
negl
aad
aad
ficompl
mov
pop
push
data16
test
stc
mov
or
and
ret
add
mov
mov
stos
push
dec
inc
xchg
icebp
sbb
xchg
hlt
pushf
in
dec
or
ficomps
outsb
icebp
in
das
stc
sub
outsl
jecxz
jmp
pop
jbe
mov
cmc
lds
mov
sahf
jo
sarb
aas
cltd
xchg
loope
pushf
jnp
addr16
cmp
sub
inc
adc
imul
add
repz
inc
mov
lock
cld
pop
scas
add
pushf
push
rclb
repz
stos
xchg
and
ret
pop
dec
mov
jns
sti
push
sbb
mov
mov
sti
les
jl
outsl
mov
xchg
inc
aad
mov
loop
pop
sbb
add
xchg
xor
mov
mov
cwtl
jl
mov
push
pop
sub
cmpsb
add
imul
fcoms
js
and
or
addr16
jmp
xchg
sbb
ja
add
repz
mov
xor
fildl
sarl
cli
movl
jmp
ret
ret
lret
test
jmp
in
js
xor
mov
daa
loope
push
jmp
daa
popa
xor
lds
add
lcall
cmp
and
inc
mov
fldenv
mov
fists
dec
dec
xor
negb
mov
mov
sub
lods
std
sbb
dec
add
adcl
lds
cmp
setp
dec
sub
sti
or
xor
inc
add
data16
call
inc
lds
mov
shrl
pop
out
shrb
inc
inc
fmul
cmpl
inc
and
in
jnp
jle
out
fwait
add
iret
sub
jecxz
out
sub
or
inc
xorl
push
shl
xor
fwait
fwait
sbb
xor
push
push
sub
mov
push
mov
loopne
inc
xchg
cmpsl
ret
stc
pop
ja
and
out
pusha
rcl
jecxz
jmp
cld
cmpsl
cmp
ror
outsl
shlb
xchg
fnstcw
sub
mov
sbb
addr16
mov
xor
mov
jne
inc
ret
aas
pop
fisubrs
int
shlb
int3
xlat
fcmovnbe
or
outsb
pop
inc
sub
ret
outsb
mov
cmp
pop
out
test
mov
sub
rcr
in
or
mov
push
xchg
push
sar
push
scas
cmp
adc
push
mov
insl
lret
sti
xchg
in
xor
popf
test
or
or
popw
add
fcmovnu
insb
imul
data16
and
insb
mov
mov
es
stos
push
rorb
das
sahf
cmp
xor
add
ror
lods
jnp
dec
push
inc
or
lcall
add
fnstsw
leave
mov
pop
mov
je
icebp
pop
ja
sub
push
movsl
cld
or
jle
lret
test
fsubs
loop
imul
add
and
lahf
mov
jno
in
inc
loope
xchg
mov
push
cmpsb
mov
icebp
xlat
ja
iret
stc
lcall
push
adc
sub
sti
pop
cli
js
sbb
xchg
test
aaa
scas
in
cmp
lock
pop
push
mov
mov
jle
iret
leave
jecxz
cld
je
push
movl
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
jmp
cmp
fcmovnb
cmc
into
inc
jge
pushf
out
lea
js
jle
js
iret
pushf
hlt
jne
inc
dec
push
int3
int3
mov
push
cmp
mov
mov
cwtl
clc
pop
lods
pushf
pop
stc
addr16
sub
inc
sarl
out
mov
xchg
ficoms
cmpsb
dec
push
lret
rorl
pop
call
addb
jmp
add
test
mov
cmc
jo
stos
icebp
mov
je
and
sahf
jne
and
dec
sahf
test
adc
in
pusha
jg
inc
bound
movsl
jnp
incl
sahf
imul
or
mov
call
xor
xor
fs
xor
lret
stos
lods
notb
add
ljmp
sbb
xor
imul
data16
and
clc
and
and
shll
imul
pop
or
out
lahf
inc
jnp
int
xorb
iret
push
in
cmp
sbb
fbld
cmp
popf
xor
sub
mulb
fstps
xchg
rorl
popf
xor
test
je
ret
or
mov
cmc
xchg
shrb
fsubrl
loop
pop
xor
fs
ljmp
mov
pop
fisttpl
call
xor
mov
stos
cwtl
pop
ja
imull
jecxz
pop
inc
fidivl
jb
xchg
shll
in
inc
dec
jo
or
inc
icebp
inc
add
aas
daa
or
add
and
xchg
filds
push
leave
pop
push
cmc
lock
adc
bound
sahf
mov
rorb
and
divl
or
lcall
ja
or
or
sbb
popa
sti
ja
jno
xor
shrb
cltd
cmc
add
mov
or
hlt
gs
imull
addr16
lret
inc
mov
cmp
jg
xchg
and
hlt
xchg
or
int
in
sub
pop
xorl
add
nop
in
loop
xorb
addr16
ss
lods
pop
mov
fstps
mov
and
dec
out
push
xchg
cs
mov
xor
add
cmp
jb
mov
mov
xor
xor
add
add
imul
mov
jmp
mov
leave
dec
mov
std
es
and
js
in
js
sahf
and
icebp
mov
andl
test
xor
push
pusha
sti
sbb
cmp
gs
or
aas
dec
or
dec
sub
subb
mov
sbb
sub
aas
push
inc
das
dec
inc
ret
sub
in
shlb
addb
test
scas
add
push
and
data16
pop
movsb
mov
ficoml
adc
jl
lods
add
adc
xchg
movsl
mov
stc
call
xchg
sub
loopne
pop
mov
mov
and
pop
mov
xchg
pushf
ds
sti
gs
sbb
jns
push
or
fs
adc
pusha
mov
loopne
ja
mov
lock
stos
and
xchg
ljmp
divl
pop
popf
adc
pop
mov
cmp
dec
les
push
add
int3
stos
data16
or
xlat
push
cwtl
jge
fcompl
adc
loopne
or
ja
mov
cmc
sub
mov
jl
adc
cs
pop
and
loope
fadds
mov
jp
xor
rcrl
test
xchg
fistl
mov
or
sub
jmp
pop
aam
aaa
or
adc
gs
pushf
cmp
mov
mov
fnstcw
or
push
mov
std
xor
mov
dec
ja
inc
sub
arpl
jno
ds
mov
scas
and
jmp
pop
jb
inc
imul
insl
push
test
xor
jecxz
mov
jp
jl
imul
cmp
lret
mov
jno
jmp
mov
jecxz
cld
rorl
cmpsb
jns
dec
dec
ljmp
into
test
cmp
xor
mov
bound
das
aaa
icebp
out
xor
mov
lods
xorl
push
add
cmp
or
push
test
push
ret
imulb
xor
clc
and
jne
jne
popf
lea
or
inc
jo
dec
mov
fdivs
frstor
repz
dec
mov
push
test
leave
cwtl
and
xor
sub
mov
dec
jbe
mov
int
sbb
mov
push
shl
movsb
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
jmp
sarl
int
ret
xchg
daa
lea
or
dec
js
in
js
sbb
lret
mov
sbbb
xor
sub
fimuls
mov
data16
pop
leave
mov
popa
test
and
mov
lock
jae
pop
iret
pusha
mulb
addb
jg
sub
in
pop
push
idivb
pop
out
lods
cmc
sahf
insl
mov
or
sti
inc
test
push
in
insl
movsb
out
insl
mov
push
pop
jo
mov
mov
and
inc
mov
jg
push
mov
add
test
or
push
mov
adc
lret
ss
negl
add
jb
add
jbe
hlt
movsl
lods
jb
js
in
stos
cmp
jbe
jns
aaa
or
mov
repz
mov
or
nop
dec
fs
shrb
orl
ljmp
pop
push
cmp
inc
dec
jmp
dec
jp
enter
inc
jbe
insb
test
adc
movsl
in
ds
jle
dec
sub
int3
pop
sbbb
cmp
or
lods
scas
lea
test
xchg
into
enter
adc
xchg
cmpsl
js
pop
inc
xlat
dec
mov
lcall
cmp
hlt
dec
dec
inc
jne
sahf
mov
movsb
adc
lods
pop
add
mov
push
dec
add
inc
cs
idivl
sti
sahf
sarb
test
fstps
test
je
adc
adc
inc
jo
and
and
repnz
enter
cmp
adc
add
inc
lcall
add
outsl
inc
adc
insl
out
ljmp
pop
xor
push
ret
imul
push
inc
and
mov
mov
mov
shlb
mov
mov
inc
adc
xor
push
mov
inc
mov
test
in
ljmp
sub
ret
mov
test
addr16
cmp
ret
jmp
xor
fs
push
push
xor
sti
xor
inc
sub
mov
mov
enter
int
inc
nop
ret
icebp
sub
inc
cmp
sti
adc
push
push
pop
ret
cmpsl
add
jmp
ret
int
into
xchg
jle
fimuls
js
jle
js
jne
or
repz
pop
or
xchg
or
mov
dec
jle
outsl
and
lea
jae
lods
mov
sub
inc
call
outsb
push
dec
call
shl
adc
and
sbb
stos
lcall
sub
jno
and
add
mov
das
xor
pop
pop
rcrl
leave
es
xchg
incl
ljmp
pushf
rcrl
and
daa
jl
pop
mov
jl
ljmp
or
add
in
jmp
dec
aad
xchg
cmpsl
popa
push
dec
sub
adcb
fstpl
jnp
jnp
xor
mov
xchg
mov
outsb
fdivl
lea
mov
pop
lock
insl
popf
cmp
xchg
repz
xor
jmp
pop
scas
call
subl
dec
ret
push
cmp
add
js
adc
test
jmp
push
dec
xor
mov
lock
cmp
mov
add
add
sub
inc
adc
jg
lds
mov
mov
push
js
movsl
push
and
imul
or
pop
fwait
push
jmp
xor
fwait
mov
aam
pop
fisubl
fnstenv
push
call
daa
and
add
rol
das
cmp
dec
lahf
jmp
lret
push
andl
lret
jno
xor
push
and
sbb
add
cmp
cld
mov
fadds
pop
sub
jns
pop
mov
pop
mov
pop
lock
popa
mov
addl
cwtl
push
dec
andb
add
pop
insb
inc
adc
jmp
xchg
inc
add
icebp
stc
test
inc
add
pop
das
icebp
aaa
shl
scas
scas
or
andb
mov
xchg
gs
sub
cltd
mov
push
aas
fs
clc
data16
mov
test
push
arpl
std
clc
jecxz
push
in
xchg
shlb
stos
push
adc
loopne
mov
cld
test
stc
into
das
out
dec
cwtl
push
shll
inc
aad
cltd
lods
out
xchg
cmp
scas
xlat
mov
mov
jmp
cmp
ret
fcmovnb
aad
pop
adc
cmp
icebp
cmp
js
jle
js
jmp
cmp
jmp
shll
pop
popa
in
and
pop
or
icebp
daa
or
push
push
je
dec
dec
testb
int
shl
shl
scas
mov
rclb
mov
test
subl
cltd
daa
pop
push
jl
push
test
jg
xchg
outsl
push
dec
sbb
fcoms
mov
and
scas
fldenv
leave
or
fcoms
in
shlb
sbb
add
lea
sub
push
ljmp
push
cli
mov
push
sbb
outsl
jp
mov
stos
jmp
pop
mov
xor
jbe
ret
outsl
jne
xchg
mov
popf
push
add
and
jg
sbb
mov
xchg
xor
or
in
jle
mov
cld
idivb
mov
rcl
fdivl
jnp
les
stos
lret
push
sbb
dec
and
dec
push
xlat
mov
pop
push
inc
test
loope
lock
mov
pusha
xchg
lret
or
icebp
add
xor
std
pop
shl
inc
inc
sub
sbb
mov
mov
push
clc
loopne
ror
sub
xorb
lcall
cmp
mov
pushf
add
add
cld
mov
add
mov
pop
sbb
jecxz
outsb
mov
lods
mov
movsb
cwtl
inc
and
inc
or
cmp
dec
jmp
lahf
nop
mov
jg
mov
sub
es
cmpsb
xchg
aas
sti
je
push
and
push
fmulp
clc
push
jle
and
jmp
xor
out
popa
mov
loopne
int
cmpsl
pop
addl
shll
and
fldcw
xchg
mov
lret
xchg
sub
jae
ret
in
pusha
cmp
cmpb
and
addb
aaa
jae
data16
movsb
in
add
jl
enter
or
das
mov
sarl
fwait
ret
or
comiss
cmpsb
fs
in
in
test
jnp
or
das
pop
jmp
rcrl
mov
leave
mov
pop
mov
in
outsb
cmp
fistpll
fucompp
addl
add
ror
fcmovnbe
fld
ud0
pop
push
aaa
adc
cmpsb
push
js
in
js
mov
aas
mov
test
mov
bound
inc
into
sub
js
fdivr
inc
xor
jae
mov
mov
shrb
and
sub
aad
jbe
pop
addr16
jecxz
movb
jg
addr16
add
arpl
and
or
pushf
inc
cmp
shll
movsb
lods
xchg
jns
dec
mov
mov
pop
imul
xor
push
push
cmpsl
insb
mov
das
ss
iret
stos
jns
ds
test
jmp
pop
lret
push
dec
mov
jp
repz
into
test
int
fcmovbe
xor
gs
pushf
scas
lret
popf
ss
dec
mov
push
int
hlt
in
outsl
movsb
enter
cmp
js
cmp
mov
jmp
xor
fistl
addl
sbb
mov
out
cld
lret
and
inc
dec
rolb
mov
insb
dec
jle
xor
dec
insl
icebp
add
pop
mov
gs
sarb
cmp
sbb
cmp
shrl
inc
data16
fucom
dec
jb
nop
in
push
mov
pop
test
bound
shrl
clc
cmp
sbbb
push
and
scas
insb
pop
ret
gs
out
push
mov
orl
out
xlat
cmp
mov
mov
fcmovnb
add
dec
jb
out
aas
adc
or
pop
jnp
add
out
xchg
es
and
outsb
xor
scas
and
mov
pop
mov
and
mov
push
flds
je
rcll
repnz
out
sahf
or
adc
push
jae
iret
sarb
cmp
aaa
jns
sarb
xchg
jp
pop
pop
jbe
adc
mov
sarb
push
or
shlb
jle
es
ja
in
cwtl
call
sbb
negb
jo
fldenv
xor
dec
inc
lods
lret
push
std
adc
xlat
add
pop
cmp
mov
jbe
cld
jns
repnz
cwtl
mov
stos
add
jecxz
jge
test
cmpsb
cmp
out
xchg
inc
mov
push
mov
inc
fcmovnu
ja
mov
jmp
mov
mov
xor
xor
jmp
aas
lret
iret
aad
jo
lods
idivl
push
js
in
js
xor
das
xor
push
sub
fildl
rcpps
xchg
cltd
inc
pop
lret
gs
xor
stos
test
adc
ret
mul
mov
mov
dec
ja
rcl
lods
dec
dec
inc
inc
push
sub
jl
mov
loope
fsubl
movl
sti
lret
push
dec
pushf
enter
sarl
fs
and
sbb
fistpl
xchg
xor
aam
adc
test
pop
mov
cwtl
push
outsb
cltd
repz
inc
cmpsl
int3
cld
mov
sahf
dec
jp
and
xchg
push
jg
pop
int3
test
push
jb
mov
loop
out
gs
dec
inc
addb
ss
add
into
shrb
jl
aad
push
sbb
orl
push
faddp
xor
xchg
fwait
pop
sahf
jbe
sbb
movsl
mov
mov
or
jmp
sub
sub
and
mov
outsl
nop
cmc
pop
popa
mov
jno
lret
fisubrl
inc
mov
jl
mov
mov
sbb
into
sahf
dec
mov
shr
cmp
dec
enter
pop
add
and
cmp
mov
mov
push
push
sbb
xchg
push
xchg
ljmp
inc
xor
insb
ret
popa
and
and
int3
cmp
inc
aaa
xor
cmp
lret
add
adc
dec
nop
xchg
add
push
scas
out
scas
adc
daa
mov
sbb
cmp
jno
in
xchg
lahf
mov
shr
push
xrelease
test
test
ret
xchg
in
push
jecxz
dec
jne
pop
inc
jmp
or
scas
sahf
pop
adc
lods
shl
mov
icebp
xchg
out
or
jbe
pop
cmp
xor
mov
les
fdivs
mov
popa
mov
nop
leave
xchg
cwtl
fimull
daa
jb
les
in
test
add
sub
pop
dec
xor
call
sbb
mov
int
imul
xchg
pop
leave
fcompl
in
or
jmp
inc
imul
bound
ret
sbb
lahf
dec
out
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
lds
ds
fxch
adc
add
xor
loope
clc
push
js
in
js
cmp
sbb
scas
repz
js
push
hlt
mov
xchg
add
out
test
add
and
cmp
fisubs
jne
jle
jo
cmp
movsb
pop
fistpll
cmp
push
jne
insl
lcall
xchg
sbb
xchg
imul
add
dec
into
jl
stc
jbe
jg
cmp
lret
cmp
mov
sti
call
dec
pmulhuw
pushf
jle
or
out
and
jnp
cmp
adc
enter
adc
sbb
xchg
jne
lock
pop
push
mov
inc
ret
sub
mov
insb
adc
jb
sub
pop
and
add
loopne
inc
cmp
add
aad
sti
shll
jl
icebp
add
ja
mov
fcmovnu
sbb
jge
lock
pop
mov
leave
inc
mov
sbb
jo
push
arpl
addr16
aam
fldenv
cmp
je
fnstenv
mov
sub
cmpsl
xor
jmp
sub
testb
scas
mov
pop
sub
iret
sub
sub
bound
stos
or
push
cmp
cli
push
cmpsl
inc
out
out
dec
inc
mov
pusha
pop
mov
and
xor
jne
roll
pop
push
mov
sub
lret
lea
add
sub
mov
pop
nop
std
in
in
pop
pop
nop
xorl
adc
in
icebp
cmp
cmpb
out
insl
push
cmp
add
ja
idivl
stc
stos
icebp
mov
iret
rcrb
push
in
pop
mov
mov
out
cmp
or
pop
imul
pop
mov
cmp
adc
fsubrs
clc
adc
pop
cmp
filds
aam
into
jg
cli
dec
scas
mov
adc
pop
daa
pusha
dec
xchg
fldl
daa
fldcw
or
xor
push
imul
mov
and
adcb
pop
pop
fimuls
rclb
adc
sub
mov
lret
repz
push
dec
das
cmpsb
mov
add
cltd
sbb
inc
xchg
cmc
jb
stos
pop
repnz
dec
jle
sbb
mov
jns
xor
stc
jmp
int3
into
ror
rcl
into
jbe
inc
outsw
mov
js
jle
js
inc
outsb
in
push
mov
and
add
aaa
pop
xchg
dec
or
mov
inc
sbb
popf
cltd
mov
xchg
fnsave
sahf
mov
sbb
lds
jmp
fistpl
push
test
inc
or
xor
xor
adc
or
in
stos
mov
scas
popa
xor
mov
xor
sbb
mov
cmp
pop
mov
orb
adc
iret
adc
popf
out
add
pop
xchg
xchg
rorb
sbb
bound
popf
mov
outsb
addb
jnp
add
mov
fcoml
xor
cmp
dec
inc
mov
int3
cmpsl
lds
mov
mov
or
sub
in
aas
xor
mov
subb
xchg
stc
aad
test
icebp
jo
fildll
loope
xor
inc
cli
test
ffree
inc
fstpt
dec
pop
repz
sbbl
js
and
sub
mov
sbb
popf
popf
mov
or
xor
es
or
mov
sbb
push
adc
repnz
pop
inc
jno
call
or
push
mov
shll
aad
ljmp
mov
mov
lods
push
ret
out
stc
pusha
xchg
push
cs
insb
xor
out
pusha
call
fs
imul
add
les
jnp
flds
scas
sbb
jmp
in
rcrb
xor
pop
push
lret
fildll
add
arpl
hlt
pop
pop
xchg
into
add
pop
xor
mov
jle
or
data16
lods
pop
jae
aad
sub
pop
sbb
jg
xchg
push
insb
out
addr16
andl
ret
ret
xlat
ss
push
pusha
add
xor
mov
push
push
clc
in
outsb
aas
pop
adc
xorl
arpl
fwait
mov
sbb
inc
dec
sbb
insb
lahf
scas
idiv
mov
shrl
push
cmp
sbb
cltd
jmp
add
push
nop
push
scas
int
js
add
sbb
adc
arpl
loope
pop
mov
push
stos
sbb
bound
push
pop
inc
arpl
xlat
jmp
aas
xlat
xlat
lret
xlat
lret
rcr
and
or
xor
inc
rcrb
js
jle
js
lahf
push
mov
mov
and
mov
in
or
xor
movsl
mov
dec
push
mov
pop
pop
or
movsl
jnp
sbb
pushf
mov
add
sahf
jae
cmpsb
add
in
or
imul
out
fnstsw
cmp
enter
insl
xor
xor
cld
fwait
dec
pop
stos
enter
sub
mov
sbb
mov
enter
inc
loope
movsb
out
daa
pushf
stos
les
cmc
loope
mov
jbe
popf
sahf
in
xor
jge
fstpl
je
sbb
push
mov
lods
inc
mov
sti
mov
dec
ret
aam
pop
mov
xchg
jnp
cmp
mov
orb
xchg
adc
jae
fstpl
sbb
pusha
pop
push
adc
cld
xorl
lods
jmp
push
push
into
jae
push
and
push
or
push
stos
clc
push
pusha
jg
adc
shlb
push
gs
lret
aad
and
inc
xlat
movups
dec
divb
test
orl
ss
ret
enter
xchg
jo
scas
sub
ret
call
add
aas
fidivrs
fisubl
dec
ret
xor
sti
mov
push
jae
sub
loope
arpl
cmp
movsl
lahf
mov
fstps
fucomip
jo
dec
mov
jp
push
cltd
dec
out
inc
mov
rcll
dec
jne
adc
inc
add
xchg
popa
in
hlt
pop
add
cli
pop
iret
xchg
cmp
inc
or
jl
scas
fimuls
fiaddl
jmp
insl
xchg
pushf
mov
xchg
pop
mov
orb
push
std
stc
jl
mov
add
xor
addr16
xchg
cwtl
insl
ljmp
sbb
imul
mov
sub
arpl
cmp
xor
dec
test
ret
adc
mov
and
clc
sbb
aad
rclb
lods
sbbb
mov
xchg
push
and
mov
jne
dec
sbb
or
push
sub
enter
mov
mov
adc
sbbl
jns
or
jmp
push
ja
xchg
xchg
push
mov
push
pop
add
pop
cld
lcall
sub
cmp
ja
jmp
rol
xor
jns
xchg
aaa
mov
jle
js
fbstp
neg
push
xchg
cltd
mov
and
fcomip
jmp
lcall
pop
outsl
pop
sbb
sub
icebp
inc
shrb
ja
movsl
pushf
ja
scas
sbb
mov
scas
sbb
push
test
popa
xchg
xchg
add
nop
div
adc
dec
or
pop
rcl
icebp
mov
shll
and
jbe
xchg
add
and
add
loop
inc
mov
push
fisubs
push
dec
sub
ss
jle
hlt
test
xchg
mov
out
add
sub
decl
repnz
iret
cmp
dec
cmp
inc
fdivr
in
sub
and
pushf
scas
je
jb
pop
ds
and
in
mov
add
in
movsl
mov
push
lds
inc
shll
jg
xchg
xlat
orl
jg
faddl
negb
pop
jb
popf
cwtl
push
dec
mov
xchg
push
jno
lods
fists
mov
add
adc
and
test
jne
out
jle
or
pop
daa
xor
mov
mov
or
outsb
cvttps2pi
inc
lret
dec
into
adc
push
adc
stos
adc
ljmp
mov
repz
ret
test
ret
push
fimull
jne
mov
mov
sub
push
sbb
mov
push
mov
or
xor
inc
sbb
out
mov
roll
mov
fsubr
pop
mov
mulb
sbb
cld
xchg
in
push
adc
jo
or
andl
jbe
inc
ljmp
sbb
jo
and
add
adcl
aas
test
scas
push
add
sbb
aad
mov
cmpsl
xchg
movsb
adc
aaa
dec
jmp
bound
rolb
out
mov
in
rcll
sbb
jl
popa
int
pop
jecxz
mov
rorb
pop
mov
scas
dec
arpl
idivb
cmpsl
lea
ss
lods
or
outsb
dec
and
sub
lds
push
sbb
push
aas
jmp
das
mov
pop
add
mov
mov
xor
xor
add
add
imul
mov
jmp
iret
leave
into
xlat
fcmovu
aad
cli
je
sti
xor
js
in
js
cmpw
addr16
adc
in
fadd
jmp
iret
sti
sbb
enter
les
cmp
mov
ds
cmp
adcl
aaa
in
pop
addr16
cmp
mov
push
jge
mov
icebp
adc
and
dec
int3
shlb
pop
ss
incb
mov
inc
dec
mov
insb
ret
scas
stos
movl
jns
mov
cmpsb
jp
xor
dec
repz
ljmp
gs
inc
add
mov
add
movsb
sbb
in
push
sbb
add
movsb
push
xlat
push
in
xor
stos
mov
stos
clc
leave
fisttpl
xchg
pusha
and
fisubl
aam
mov
gs
cmovp
rcl
mov
lret
xor
and
mov
inc
test
jmp
adc
dec
mov
cmpsl
jbe
movsl
in
or
aas
lods
and
sbb
add
call
pop
cli
sub
xchg
add
mov
xchg
pusha
jg
mov
push
inc
lock
fwait
scas
xor
and
mov
cmp
cmc
add
pop
std
jae
sti
mov
adc
jge
fcmovnb
daa
ja
cmp
add
push
or
and
rol
sub
push
inc
shlb
and
and
mov
fdivl
jnp
in
mov
push
xchg
sbb
fisubl
xor
cmp
popf
es
and
xchg
pop
dec
inc
testl
jns
xor
bound
or
testb
jl
jo
stos
pop
dec
sub
popa
lock
nop
xlat
mov
lds
dec
pop
enter
mov
test
sti
outsb
pop
cmp
pop
scas
xlat
lcall
insb
ror
int3
pop
push
and
loopne
pushf
push
inc
imul
lds
xchg
jo
fwait
fwait
sti
mov
xchg
imul
add
cmp
push
imul
sbb
into
push
lcall
mov
mov
xchg
cmc
sbb
stos
jg
push
test
mov
mov
das
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
into
cmp
fxch
sub
jns
xchg
xchg
pusha
js
in
js
rcll
sub
pop
add
sub
in
scas
rcrb
xchg
xchg
sbb
add
inc
and
ja
mov
sti
lcall
jne
lock
mull
mov
mov
daa
pop
dec
mov
es
cltd
sarb
gs
gs
test
xorl
and
into
push
cmp
adc
jbe
mov
or
insb
mov
cmp
adc
cwtl
mov
push
mov
or
or
sbb
add
nop
push
or
mov
call
jg
mov
or
fbld
adc
xor
and
gs
jne
aas
jg
push
jne
jo
cmp
repnz
jne
adc
or
cmp
jnp
out
xor
fdiv
lock
mov
cld
xchg
mov
repnz
mov
fstpt
outsl
mov
xchg
cmpsb
notl
push
adc
test
movsl
and
insb
mov
test
cmp
test
addr16
mov
mov
inc
adc
insl
mov
call
pop
mov
addr16
fs
xchg
shlb
in
insb
ret
mov
sbb
lods
stos
pushf
and
inc
nop
mov
lret
dec
inc
mov
sub
pop
inc
out
call
into
int
in
mov
xlat
out
mov
pop
bnd
stos
mov
cmp
jg
inc
fiadds
xor
rorl
or
clc
aas
cmp
sbb
xchg
xchg
or
pop
icebp
cltd
in
cmp
stc
scas
push
and
mov
jo
test
push
xlat
in
aam
daa
je
hlt
pop
xor
ds
insl
mov
push
out
pop
mov
andl
ljmp
adc
dec
mov
dec
add
mov
sbb
stos
pop
aaa
jp
enter
ret
in
sarb
stc
or
ss
mov
aam
cltd
jge
and
mov
adcb
sbb
pop
xor
pop
mov
inc
mov
movl
lret
cmp
mov
mov
sub
cmp
mov
jbe
jmp
rol
ds
into
rcl
adc
xchg
shrb
js
in
js
cmp
sub
dec
dec
xor
inc
hlt
enter
repz
pushf
xchg
icebp
sub
push
scas
das
dec
int3
lahf
movsb
adc
adc
inc
shll
push
push
testl
mov
cmpsb
loopne
outsb
and
gs
adc
in
push
jne
stos
inc
xchg
cld
jne
dec
inc
pusha
or
js
push
movsl
imull
push
xchg
repnz
iret
arpl
or
loop
icebp
int3
xor
int
push
aaa
cmp
in
hlt
sbb
adcl
cmp
xchg
or
lods
cwtl
mov
add
cld
xor
xchg
sub
and
mov
sbb
jae
mov
inc
sub
mov
popa
add
addr16
lods
add
xchg
lods
fsubrl
outsb
and
imul
jl
cmpsb
push
xchg
shl
mov
fdiv
inc
ss
jae
jecxz
vcvtdq2ps
sbb
cmp
int3
jecxz
dec
es
stos
mov
cmp
jle
xchg
lret
pop
test
repnz
adc
sbb
adc
fiaddl
gs
lea
xorb
out
pop
and
mov
shr
cmpsl
inc
aaa
jne
inc
push
loop
mov
xor
lock
sub
mov
icebp
and
and
testl
jp
ret
ljmp
xor
sub
leave
and
mov
or
sub
pop
stos
addr16
call
repnz
pop
mov
mov
mov
dec
lock
stos
mov
inc
xor
lcall
pop
xchg
dec
inc
stos
dec
mov
lcall
dec
jb
mov
rolb
ljmp
ja
das
add
imul
in
push
in
push
stos
loop
or
jbe
enter
mov
and
in
add
test
mov
loopne
scas
jnp
or
adc
sub
pop
test
xchg
aas
pusha
pop
int3
xchg
sbb
pop
xor
fcomi
inc
es
xchg
stos
out
adc
into
push
pusha
lods
adc
mov
xchg
ja
mov
jge
xor
xor
jmp
rol
enter
fcmovnu
xchg
add
inc
cmp
in
jmp
js
in
js
cmpsl
in
sbb
pop
or
scas
jb,pn
jae
xor
pop
dec
mov
xor
out
jbe
enter
enter
rclb
jns
add
add
sbb
insl
lcall
push
dec
out
in
imul
jns
jge
fldenv
shll
loopne
nop
shrl
test
pop
push
jb
insb
xlat
shl
cltd
bound
ud2
lcall
xchg
filds
es
fs
xchg
out
pop
dec
mov
sub
mov
mov
fisttps
inc
sahf
mov
rorb
lds
lcall
imul
cmp
cmp
fdivl
stc
lahf
mov
adc
cmp
sbb
mov
in
stos
cld
ret
fldt
sbb
push
mov
hlt
jne
inc
or
push
dec
pusha
fistpl
jmp
mov
sar
int
cmp
mov
xor
mov
lds
push
push
jae
xchg
ss
das
cld
inc
push
fcomp
daa
sub
sbbb
fs
or
add
in
ds
mov
lods
push
xchg
sbb
mov
rcr
push
repnz
add
push
mov
push
outsl
jp
jecxz
out
into
or
nop
mov
jne
jge
lret
mov
pop
jl
out
fidivs
push
push
mov
pusha
mov
jl
js
int
cmp
and
add
loopne
roll
fcmove
jnp
adc
jge
cmpb
mov
gs
rcl
test
add
add
cmpsb
push
sbb
or
dec
int
cltd
filds
mov
stc
push
outsb
hlt
cmpsl
repnz
fiadds
mov
mov
into
stos
inc
inc
sbb
sub
mov
jns
ljmp
mov
jbe
arpl
test
and
add
pop
inc
leave
out
scas
shrb
jne
stos
rcrb
das
repz
repz
and
jecxz
loop
stos
rclw
int
fsubrl
or
push
out
out
stos
push
cltd
fisubs
pop
mov
pop
mov
xchg
xor
push
and
stc
add
imul
mov
mov
mov
mov
add
movl
jmp
fcmovnu
shr
movsl
xchg
inc
gs
push
imul
aaa
loopne
das
push
add
lock
ds
shlb
and
push
enter
dec
adc
sbb
fwait
cmp
imul
ss
mull
lahf
jno
dec
sub
xorl
nop
cwtl
aad
lret
cmp
cmp
add
call
mov
fiaddl
hlt
out
xor
cmp
adc
sbb
cmp
xor
xchg
push
mov
dec
jno
jg
sbb
subl
sbb
pop
aas
rcl
flds
mov
shrl
fmuls
mov
mov
lcall
xor
mov
stc
out
scas
cltd
sahf
lret
outsl
xchg
fildll
arpl
sbb
mov
rorb
cli
and
xor
jmp
jmp
sub
and
mov
dec
sub
xor
jae
les
jp
call
push
push
sbb
leave
or
cmp
adc
pop
push
aaa
gs
mov
aam
out
cmp
xor
xchg
in
push
push
fldl
sarb
fisubrs
xchg
test
je
mov
ficompl
hlt
xchg
dec
jns
or
or
out
xor
mov
fmul
mov
mov
movsl
sub
push
icebp
or
push
mov
and
shl
fadds
mov
xor
cmp
push
push
je
and
fwait
or
sub
mov
sbb
and
inc
xchg
ja
xchg
jo
cmc
mov
movsb
push
cmp
sub
dec
pop
call
int
arpl
pop
dec
ret
cwtl
scas
mov
scas
pcmpeqd
mov
lret
inc
jo
mov
xchg
decb
ljmp
cwtl
dec
pop
add
mov
cmp
stos
orps
mov
pop
rcr
or
or
ror
cmpsl
jbe
fmuls
inc
or
dec
test
loopne
daa
mov
mov
loop
insb
add
imul
iret
sbb
xor
xlat
add
ficoms
outsb
popf
add
in
arpl
mov
cld
addb
loop
push
in
addl
add
ret
rol
fcmovnu
mov
arpl
js
jle
js
push
pop
stos
lods
or
pop
mov
mov
sahf
test
aaa
in
int3
mov
jo
outsl
or
fwait
aaa
lock
xchg
add
jp
addr16
mov
push
sbb
pop
int3
cmp
jecxz
jo
or
test
mov
pop
jne
pop
push
jmp
cmp
mov
lret
push
insl
jo
int3
je
pop
jle
or
sbb
fstpt
fistpl
fnsave
movsb
jo
mov
decb
dec
enter
mov
xchg
insb
push
sbb
mov
mov
add
ret
lret
stos
call
adc
jl
out
or
sbb
out
nop
inc
add
jp
sub
jb
push
call
cmp
and
xchg
leave
lock
adc
pop
arpl
test
or
push
push
out
mov
xchg
enter
lret
or
and
mov
ret
idivb
and
mov
jl
pusha
sbb
divl
aam
notb
xor
clc
push
outsl
cmp
jmp
pop
xor
movsl
sbb
pop
lcall
xchg
ja
jge
mov
mov
cld
loope
mov
mov
push
mov
sbb
dec
push
cld
outsb
or
pop
add
sbb
cmp
stos
pop
sbb
jmp
pushf
jo,pt
ror
cmc
push
dec
cmc
push
test
pop
sti
mov
fldl
sbb
sbb
dec
call
loop
not
pop
call
pop
push
mov
xor
ljmp
add
add
es
inc
pusha
lret
mov
inc
cmp
dec
mov
sub
push
nop
popf
imul
sub
lds
xchg
rcrl
mov
arpl
addr16
lcall
jp
jmp
push
xor
xor
mov
lods
in
ljmp
jmp
push
pop
sub
adc
iret
mov
sbb
test
dec
add
into
xchg
movl
movl
jmp
int
ror
fcmove
leave
sub
add
mov
js
jle
js
daa
in
or
lods
clc
cs
cmp
outsb
bound
mov
fmuls
inc
shrl
les
mov
push
and
int
loopne
mov
das
mov
adc
push
out
sub
jne
arpl
daa
aas
mov
jp
pusha
sub
pop
bound
call
fnstsw
mov
fwait
inc
push
adc
lret
dec
mov
push
aam
cmc
dec
insl
jns
cld
or
mov
push
xchg
add
int3
fst
adc
fldenv
scas
inc
mov
fbstp
jmp
sarl
lods
mov
push
inc
mov
movsb
sub
push
inc
jns
jl
adc
adc
mov
inc
rdpmc
sbb
jecxz
inc
sbb
adc
das
pop
ja
sbb
xchg
mov
nop
xlat
add
jg
test
mov
add
or
sbb
sarl
adcl
xchg
xchg
jl
pusha
ja
imul
inc
mov
cmpsb
mov
roll
das
sub
repz
outsl
popa
inc
inc
pushfw
sbb
rcl
push
sahf
mov
stc
lea
jmp
cltd
jo
in
jb
inc
sub
pushf
imul
mov
popf
mov
fs
cmp
out
sbb
xor
pop
cmpsl
jmp
mov
mov
movsb
jge
jle
lret
inc
mov
mov
lds
push
xor
push
dec
xchg
out
idivb
and
cwtl
loopne
hlt
xchg
rcrb
fcoml
test
pop
call
movsb
aas
dec
xor
das
ds
push
out
pop
jmp
int3
push
cmp
stos
pusha
lods
or
and
mov
adc
mov
rorb
mov
les
add
arpl
sub
cs
je
pop
or
repz
leave
fbstp
pusha
jmp
mov
dec
loope
mov
mov
test
in
push
xor
stos
addb
mov
test
cmp
dec
pushf
ret
jb
or
sub
and
fdivs
movsb
test
pop
adc
sahf
inc
push
xchg
cltd
mov
lret
pop
inc
push
in
push
mov
xor
add
jmp
mov
xor
add
jmp
ret
xlat
data16
inc
leave
adc
jno
js
jle
js
lahf
orl
adc
xchg
out
pusha
mov
sbb
out
mov
mov
mov
push
push
mov
loopne
lock
mov
cs
push
bound
fisttps
mov
lods
mov
jo
cli
pop
frstpm(287
jbe
push
add
dec
push
addb
mov
adc
dec
int
add
jg
fcmovne
insb
sbb
mov
sub
jno
test
or
sbb
xchg
into
push
std
push
dec
lret
iret
jnp
push
in
adcb
test
lock
faddl
xchg
pop
push
pop
sub
jmp
cmp
pop
pop
mov
jge
cmpsb
sbb
hlt
adc
jp
jmp
or
stc
fisubl
outsl
mov
popf
fcmovbe
xor
sub
mov
lea
push
mov
mov
ficoms
add
add
ret
mov
sbb
cmp
dec
es
and
int3
div
mov
hlt
sub
mov
inc
test
lods
push
push
aam
xor
movsb
mov
into
push
andl
nop
iret
scas
fcmovnb
loope
lods
sbb
dec
cmp
fmull
mov
xor
add
hlt
cli
loopne
pop
mov
imull
jp
dec
imul
sbb
add
shrl
rclb
mov
pcmpgtw
sub
imul
scas
or
sub
stc
lds
or
pop
xchg
sbb
in
jp
xor
mov
dec
jnp
mov
mov
enter
in
push
sub
jo
lret
and
jo
nop
test
rcll
scas
in
push
test
ror
jns
mov
cmpsl
cli
stos
in
imul
xor
in
inc
stos
add
movsl
das
dec
scas
cld
je
gs
shll
cmp
xlat
push
js
cmp
subb
sahf
dec
addl
nop
sarl
mov
mov
mov
cmpsb
pop
add
mov
cmpl
movsl
ljmp
push
push
dec
cwtl
adc
xor
inc
xchg
cmp
jp
xor
mov
mov
jmp
int
xlat
enter
shll
std
xchg
or
ja
js
jle
js
pop
stos
push
gs
xor
cmp
inc
test
daa
fidivrl
imul
lcall
enter
dec
sub
dec
pop
loopne
test
aaa
in
mov
mov
outsl
pop
cmp
out
adc
add
add
push
xchg
pop
and
cmp
fidivl
cli
push
xchg
xchg
push
sbb
mov
out
dec
rolb
pop
insl
mov
ret
test
lods
aas
and
xchg
jo
dec
pop
out
sbb
std
test
push
outsb
pusha
fsubrl
mov
ret
icebp
mov
sarl
cmc
scas
inc
fs
frstor
test
imul
loopne
and
xor
pushf
rorb
xor
ret
inc
sub
pusha
jmp
xchg
xchg
add
xor
sub
or
scas
sbbb
jns
insb
jo
jge
mov
std
mov
cmpsl
inc
sub
ret
mov
cmpsb
das
enter
scas
cmpl
out
mov
test
mov
test
mov
lcall
or
movsb
push
mov
dec
je
mov
inc
in
dec
jecxz
jle
add
popa
fstp
and
or
enter
cmp
fisttpl
sti
js
sub
loope
xor
clc
sar
jnp
mov
xchg
std
pop
mov
loop
loopne
fimull
imul
je
mov
in
sbb
push
pop
sbb
incl
mov
xor
lock
push
xchg
jb
xor
mov
xchg
data16
dec
lods
lcall
imul
cmpsl
lret
mov
rolb
dec
popf
mov
mov
ljmp
mov
xchg
jae
loop
xchg
arpl
popa
popf
dec
xlat
repz
nop
mov
dec
sbb
into
jnp
cmp
adc
mov
add
adc
sub
sub
or
insl
mov
add
outsl
jns
call
mov
int3
js
movb
push
lds
push
fstpl
outsb
pop
xor
inc
stc
test
mov
mov
lock
mov
xor
push
jnp
add
mov
mov
mov
mov
jmp
aas
cmp
cmp
sbb
nop
pop
imul
js
mov
or
bound
and
xchg
push
jbe
xchg
inc
fnstenv
scas
xor
ljmp
int
sbb
leave
and
inc
jl
jnp
aad
xchg
dec
gs
addb
mov
dec
xor
inc
loope
arpl
push
pop
jbe
gs
jns
clc
syscall
mov
inc
mov
inc
xchg
xlat
iret
cmp
cwtl
dec
pop
bound
xor
lahf
mov
mov
jns
stc
daa
xchg
popa
xchg
or
fwait
sbb
repz
dec
es
je
mov
pop
fidivrs
xor
std
test
stos
aas
test
cmc
mov
or
in
adc
cmp
repz
lods
sbb
jl
jo
ljmp
movsb
mov
add
pop
sti
jo
dec
dec
lcall
xchg
outsb
mov
stos
leave
fsubs
loopne
xor
and
or
dec
pop
pop
es
add
shlb
pop
cmpsb
and
imul
cltd
xor
mov
add
jb
push
cmp
xchg
les
adc
test
push
aad
cs
mov
or
je
xchg
and
mov
sarl
add
cmpsb
jb
pusha
jno
mov
lods
sub
dec
es
dec
and
mov
ss
jns
mov
outsb
mov
cmp
push
lret
mov
arpl
ret
cs
inc
jbe
mov
aas
outsl
hlt
cli
shl
into
and
adc
jl
mov
hlt
inc
inc
test
sub
push
push
mov
lods
sbb
ret
dec
mov
mov
repnz
push
sub
jno
imul
push
mov
mov
cmp
or
hlt
loope
aas
sbb
mov
fcoml
pop
and
cmp
jo
sbb
iret
fisubrl
jno
movsl
mov
lret
lods
mov
add
out
push
frstor
inc
mov
dec
dec
mov
cli
xchg
mov
cmc
add
shr
inc
mov
pop
pop
and
out
mov
loop
xor
push
pop
push
popa
js
or
mov
xor
add
mov
mov
mov
mov
xor
jmp
cmp
pop
in
inc
into
sahf
lahf
xchg
jp
js
jle
js
scas
testb
ficoml
jno
fdivs
jbe
xlat
bndstx
pop
outsb
xchg
adc
adc
imul
mov
cmp
sbb
inc
push
push
add
or
out
pop
imul
ds
xchg
inc
shrl
jle
sub
movb
hlt
push
cmpsl
addr16
jle
sbb
aaa
sbb
jnp
fisubl
jo
mov
dec
jns
outsb
push
test
jmp
sti
das
mov
adc
rorb
mov
push
cmpsb
ja
test
pusha
scas
hlt
xchg
jnp
fdivrl
jnp
adc
add
or
psubsb
lcall
loope
mov
enter
aaa
fs
jae
pop
jecxz
out
jne
pop
sbb
pop
push
mov
jge
in
je
out
xor
sub
andl
inc
mov
not
int
clc
test
xor
mov
iret
repnz
xchg
insl
pusha
lret
popa
inc
xchg
gs
jg
jge
insl
jle
pop
lcall
das
jle
jns
push
xchg
pushw
mov
mov
push
jp
pop
test
add
sbb
push
imul
or
jno
pop
lds
scas
dec
mov
loopne
pop
push
fs
fwait
jo
movsl
gs
push
lret
movb
repz
loope
mov
sub
add
jne
outsl
out
inc
or
sbb
pop
mov
dec
push
mov
fwait
push
test
clc
shrl
sbb
movsb
daa
imul
test
mov
pop
or
pop
xor
mov
xchg
call
inc
mov
pop
pop
or
add
sahf
xchg
mov
out
outsb
sbb
sbb
stc
sbb
add
fbstp
sbb
sbb
mov
fwait
stc
into
das
dec
adc
jnp
push
mov
mov
andb
cli
incl
fwait
sbb
xchg
mov
xchg
mov
ror
hlt
push
dec
pop
or
mov
rcr
pop
iret
lret
rcl
cwtl
mov
repnz
lods
fnsave
ficoml
aaa
fnstcw
in
mov
mov
jmp
enter
cld
imul
cmp
jg
in
js
jmp
or
mov
std
and
push
insb
test
pop
inc
bound
call
outsb
lahf
mulb
popa
in
lahf
mov
cmp
jae
mov
mov
test
and
adc
out
test
icebp
sti
jns
hlt
mov
test
scas
popf
lahf
outsl
push
sbb
leave
cmp
and
outsl
call
mov
dec
sbb
and
popa
jns
ret
ja
movsb
in
sub
mov
pusha
jge
mov
in
aam
inc
dec
add
adc
xor
test
sub
inc
jno
js
sub
psrld
rcrl
xor
das
popa
loop
dec
fstpl
scas
ljmp
movmskps
jecxz
mov
add
sub
push
rclb
in
push
shl
inc
shlb
add
push
xor
mov
mov
xchg
jle
mov
cli
test
test
aad
push
lea
lods
pop
ficoml
cli
out
pop
stos
cmp
data16
mov
mov
shlb
lods
pushf
sahf
xor
lock
fiadds
dec
stc
inc
and
push
push
mov
mov
push
cld
sbb
mov
repnz
cmp
mov
pusha
jno
lods
out
fwait
jmp
pushf
sbb
xchg
iret
lret
ljmp
test
inc
test
in
mov
lret
scas
add
inc
faddp
sub
and
hlt
into
shrb
fdivrl
push
cmp
mov
loopne
jne
pop
adc
es
push
enter
mov
xchg
sbb
cmp
inc
push
mov
enter
lds
outsb
xor
loope
xchg
or
shrl
lret
pop
fisubl
or
sub
shll
xchg
mov
push
pop
ja
sbb
sbb
xlat
xor
shl
lcall
sbb
push
stos
stos
test
loop
push
inc
xor
adc
iret
fildll
ret
dec
adc
fwait
jb
sarb
enter
rcrl
xchg
test
test
sbb
mov
xor
xor
add
add
jmp
ror
ror
leave
leave
mov
es
sub
js
jle
js
ja
fcoml
push
and
fstpl
nop
push
fucomp
repz
mov
stc
xchg
and
cmp
pop
sbb
cmp
daa
jo
icebp
stc
popa
rorl
add
cmp
test
mov
cmpsl
stc
or
mov
sbb
inc
adc
xlat
in
add
pop
adc
loopne
push
mov
jb
imul
fbld
adcl
mov
popf
out
cmp
insl
lds
lea
push
mov
inc
mov
cmp
mov
ljmp
mov
ja
stos
std
sub
mov
xchg
mov
stos
stos
mov
cmp
into
icebp
sbb
mov
mov
outsb
add
rclb
in
lds
clc
lcall
push
rcrl
push
jns
lds
leave
enterw
pop
pop
loope
shlb
lcall
or
fnsave
popa
adc
jle
sub
adc
in
fistpll
inc
jp
loopne
and
aam
mov
pop
cmp
leave
lock
scas
gs
push
add
sbb
repz
sub
adc
push
cs
je
sbb
cwtl
sahf
nop
push
sbb
cmp
pop
dec
push
adcl
fcmovbe
insb
gs
pop
repnz
xlat
idivl
insb
loopne
pop
cmp
xchg
or
xchg
mov
jno
sbb
xchg
push
out
mov
adc
jp
es
flds
out
xchg
cwtl
scas
ficomps
push
and
popf
adcl
xor
jbe
xchg
sub
jne
add
inc
sahf
jne
stc
cmpsl
jno
repnz
jecxz
mov
cmp
cmp
inc
insb
mov
pop
or
add
or
adc
and
sbb
lahf
outsl
idivb
out
jg
into
test
dec
mov
fwait
inc
leave
in
ret
mov
out
push
imul
cmp
pop
popf
xor
adc
add
mov
inc
lahf
xchg
add
fstpt
mov
sti
dec
xchg
sbb
lret
les
jmp
mov
cmp
scas
xlat
add
mov
mov
mov
xor
add
imul
mov
xor
jmp
enter
lret
fxch
flds
xchg
loope
push
xchg
add
in
js
leave
sarb
ret
out
aam
ljmp
aaa
inc
pushl
ficompl
xchg
cmpsl
lods
mov
cld
cmc
jecxz
orl
push
or
or
push
loopne
aas
xchg
aas
vpperm
or
jecxz
icebp
xchg
mov
and
pop
inc
enter
in
xor
ds
cltd
fnstsw
loop
in
je
and
not
nop
es
fistpl
das
dec
mov
inc
inc
xorl
ljmp
inc
insb
pop
mov
push
lahf
pop
pop
cmp
lods
sub
xor
sahf
cmp
es
xor
jg
and
and
cmp
jecxz
mov
fsubrs
sbb
sub
xchg
mov
pop
hlt
mov
into
test
mov
cmpsl
ret
scas
and
stos
ja
jecxz
out
mov
mov
adc
sub
xchg
push
mov
push
rcrl
fwait
push
fiaddl
enter
push
ret
and
stos
addr16
push
js
pop
xchg
loop
pop
add
nop
sub
push
jg
shr
imul
xchg
loopne
stos
mov
cld
mov
repz
add
pushl
or
xor
mov
ret
push
jecxz
sbb
add
jecxz
or
pop
das
cmp
pop
loope
and
int3
call
mov
cwtl
lcall
scas
sahf
add
cmp
dec
xor
popa
lock
dec
lcall
fdiv
and
pop
jne
xchg
int3
add
pop
add
mov
xchg
dec
push
sbb
jge
sbb
jnp
inc
inc
jmp
call
pop
xor
imul
mov
lea
insb
xchg
dec
jnp
scas
and
cmp
aad
jbe
mov
mov
loopne
mov
insb
decl
jmp
mov
pop
cmp
mov
into
jp
repnz
sbb
fidivrl
push
ficompl
pop
movsl
mov
cmpsb
push
imul
stos
fidivs
ds
push
cmp
sub
xlat
fdivrs
sbb
adc
mov
repz
or
and
lahf
pop
pop
inc
sub
mov
mov
xor
add
jmp
ror
iret
aam
insl
js
jno
mov
add
jg
in
js
out
test
pop
jmp
push
xor
aas
ss
test
outsl
pop
and
mov
scas
cs
add
inc
shl
daa
cmp
mov
mov
sahf
inc
mov
outsl
out
mov
inc
movsb
in
or
mov
in
dec
jle
fmul
sbb
ljmp
loopne
shrl
mov
data16
rcrl
add
mov
xorl
add
xchg
inc
xchg
inc
jge
mov
es
shl
push
in
pushf
xlat
shrl
inc
xor
lret
mov
push
jns
or
sub
rcr
int
mov
shrl
mov
subl
gs
cmp
mov
pop
xchg
fucomip
loope
jle
arpl
push
mov
subl
jle
nop
and
cli
daa
cmp
lret
inc
mov
mov
push
xor
sti
test
scas
daa
call
fcomps
inc
sbb
in
inc
and
push
lahf
stc
xchg
ficomps
sub
in
icebp
inc
movb
push
jnp
and
sarb
jne
outsl
push
inc
mov
aas
shlb
ss
push
sbb
iret
call
imul
mov
pop
inc
inc
jge
mov
cmc
test
mov
out
adcb
xchg
and
and
in
ds
subl
jne
out
cltd
mov
es
ss
aad
rcll
mov
sahf
es
out
mov
insl
sbb
inc
repz
int3
daa
xchg
cmp
sbb
rol
inc
adc
loop
sbb
or
into
mov
es
xchg
mov
mov
orl
xchg
into
call
in
fs
dec
sti
notb
test
jb
fsubp
or
fstps
pop
xchg
lret
or
mov
dec
dec
iret
push
addr16
rsm
mov
daa
in
imul
fwait
mov
xor
push
inc
pop
das
shrl
or
or
into
call
incl
cld
daa
inc
xor
mov
movsl
mov
int3
inc
out
imul
mov
jmp
rol
leave
rcr
rcr
enter
mov
les
out
push
jg
in
js
popa
loop
fbld
xchg
lret
gs
inc
mov
add
add
addr16
cs
jnp
aad
sub
fisubrl
dec
xchg
jo
dec
ret
out
mov
inc
mov
jo
sahf
dec
cmc
insl
mov
shll
push
jmp
out
sub
rcr
imul
xchg
in
lds
cmpsl
and
shrl
mov
loopne
mov
lock
test
in
push
aam
jbe
aam
pop
or
pop
aad
lret
fwait
cs
sti
cltd
in
outsl
xchg
push
xchg
push
add
clc
pop
insb
imul
stc
inc
xor
add
sbb
cmpsb
jecxz
push
push
push
mov
inc
mov
les
decl
stos
jp
clc
mov
lods
lea
dec
xchg
mov
pop
shl
pop
sub
flds
add
add
rclb
cmp
es
lock
fs
xchg
repnz
jle
adc
fdivl
arpl
bound
pop
les
push
mov
or
enter
fnstenv
and
pop
mov
or
lcall
jns
pop
iret
outsb
cmp
push
adc
je
test
xorb
repnz
ret
sbb
jl
cmp
in
rep
scas
xchg
jne
rcrl
cmp
scas
in
cli
jmp
lea
arpl
sub
loope
jmp
jmp
pop
fdivp
arpl
add
mov
popf
call
jbe
add
jno
sub
inc
adc
nop
shlb
mov
sub
or
xchg
mov
fs
jge
jo
xor
repz
sbb
mov
in
jns
dec
adc
cmpsl
into
dec
add
push
imul
or
dec
popf
sbb
jmp
jnp
test
imul
push
sub
xchg
cmc
pop
and
fldt
ja
xchg
xchg
les
lods
movsb
clc
sbbl
fistpl
mov
xchg
ljmp
flds
and
fisttpll
jle
loope,pn
jge
push
lock
subb
jmp
xor
jmp
les
int
aam
mov
fdivrl
js
jle
js
dec
sbb
fists
adc
lods
pop
xchg
dec
and
nop
jl
fwait
jle
rcr
xor
sbb
adc
or
stc
cmpsl
xor
sub
and
loope
jl
sahf
lods
xchg
add
push
mov
push
xchg
mulb
repz
sbb
int
ds
push
sarl
mov
cmp
pushf
cs
mov
xor
in
stc
and
cs
mov
dec
dec
push
push
lahf
fiaddl
adc
pop
lods
stos
and
lock
pop
xchg
xor
xor
mov
je
jbe
xorb
sarl
dec
insb
push
mov
pop
dec
jmpw
push
jmp
push
stos
in
pop
daa
sbb
add
xlat
jae
ret
xor
add
insl
scas
lahf
lock
cmp
pop
xchg
pop
inc
push
push
in
fistl
fiadds
push
jge
or
lret
pop
stos
pop
push
mov
add
sub
mov
inc
add
jle
mov
jmp
push
hlt
sub
fucom
cmpsb
loopne
js
xchg
inc
cs
fcompl
cld
adc
iret
fimuls
movsl
loopne
pop
test
mov
mov
shrl
inc
mov
jmp
or
xchg
inc
cltd
dec
movsb
mov
mov
fwait
mov
gs
jp
sahf
xchg
jbe
pusha
and
adc
mov
push
jo
sub
scas
mov
push
sbb
stc
xor
fidivrs
xchg
cmc
mov
es
xchg
cld
and
scas
xchg
dec
les
leavew
and
xorl
aas
add
cmpsb
mov
push
mov
gs
rorl
xchg
dec
xlat
mov
into
call
cmpb
and
shll
data16
jg
dec
mov
or
and
mov
fistpll
out
mov
dec
ljmp
xchg
js
sub
inc
jns
push
xchg
push
or
push
cmp
dec
sti
movsl
sahf
pushf
push
lock
add
ss
xchg
aad
cmc
ljmp
cwtl
std
adc
ljmp
xor
leave
pop
arpl
push
mov
adcb
mov
jecxz
loopne
les
rorl
xor
cmp
jbe
mov
mov
xor
add
jmp
vpmovmskb
fcmovnu
addl
sahf
rorl
js
jle
js
es
addl
int3
mov
jae
jge
ret
jge
push
dec
cmp
lds
inc
pop
jle
psubusw
repz
and
pusha
outsl
push
aam
dec
arpl
int3
repz
cmpb
add
inc
lock
cmpsl
pop
stos
pop
ljmp
cs
fldt
and
arpl
jmp
and
roll
imul
dec
loope
pop
aad
ficompl
push
jmp
and
xor
xor
adc
inc
xor
add
pop
stos
aaa
push
leave
stos
leave
bound
adc
cmpsl
pop
mov
adc
mov
pop
stos
adc
in
cmp
sub
lea
mov
pop
jge
add
inc
fs
data16
movsl
mov
nop
add
lds
jmp
cwtl
das
pop
jge
add
lea
adc
or
and
sbb
adc
out
mov
sub
cmp
inc
fsubl
les
mov
add
mov
mov
xchg
push
xchg
or
outsl
pop
xor
push
pop
xlat
push
int3
in
test
mov
fisttps
fs
adc
xchg
test
movsl
inc
rcrl
dec
sti
cmp
add
or
sbb
inc
mov
lahf
gs
jecxz
jne
hlt
adc
aas
and
in
dec
or
pop
adc
pop
fbstp
xchg
mov
and
inc
push
enter
outsb
pop
cmp
repz
jle
negl
sbb
lret
xchg
outsb
jno
out
insl
sbbl
mov
and
mov
ret
jmp
in
outsl
inc
add
jmp
rorl
ljmp
mov
out
std
les
push
add
sbb
pop
sbb
jb
cwtl
xor
mov
push
stos
push
jno
flds
test
jmp
adc
inc
or
lret
ljmp
int
push
arpl
outsb
mov
insb
inc
xor
das
outsb
or
sub
mov
negl
add
add
ret
dec
imul
mov
jmp
lret
ret
vpand
ret
sbbb
jmp
scas
movq
jle
js
cmc
mov
aas
int
loopne
mov
or
xor
inc
or
in
in
and
sbb
or
sub
lods
sarb
pop
aam
push
out
push
sbb
jmp
inc
cmp
xor
mov
and
incb
mov
stc
leave
insb
stc
mov
xchg
xchg
mov
adc
adc
or
dec
js
add
pop
push
add
cltd
and
inc
les
jnp
in
dec
fldt
mov
sub
push
scas
lret
imul
xor
xor
mov
inc
xchg
inc
jbe
add
mov
test
xchg
lret
movsb
movsl
mov
pop
aam
dec
mov
lods
int
js
test
test
inc
imul
les
addl
stos
inc
stos
push
insb
add
movsb
mov
insl
insb
in
xchg
push
or
loop
fsubrl
iret
jae
inc
rcll
icebp
int3
adc
xchg
adc
insb
mov
popf
xor
lret
xchg
xchg
mov
jp
add
and
insb
pop
push
in
jbe
call
fiadds
mov
and
ficoms
adc
cld
jns
pop
dec
daa
xor
lret
inc
pop
imul
cltd
fwait
jb
fiaddl
push
adc
jns
movsl
pop
sbb
aam
cmp
adc
dec
sti
icebp
pop
movsl
push
lret
cmp
rcrl
enter
stc
pop
mov
fstl
mov
fwait
adc
push
pushf
jb
push
sbb
fisttps
iret
loop
mov
and
insl
inc
aas
bound
sub
mov
cmp
sar
stos
test
sbb
inc
jnp
and
jae
popf
cmp
bound
xor
or
flds
and
popa
aad
dec
test
ljmp
or
mov
cs
cltd
adc
cmpsb
xchg
pop
insl
addb
or
aaa
in
mov
add
jg
and
call
mov
fdivrl
xchg
aas
rol
xchg
mov
mov
adc
fistps
pop
int3
rorl
ret
xor
pcmpgtw
xchg
loop
jge
clc
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
jmp
rcl
aad
leave
scas
popf
add
or
js
jle
js
pop
ds
adc
adc
push
das
or
sub
mov
pop
adc
xor
push
shrl
adc
lock
inc
lahf
push
and
les
jbe
adc
fisubrs
dec
inc
ja
sbb
add
push
push
fisubl
ret
sub
daa
int
xchg
std
mov
pop
into
pop
sbb
in
mov
rclb
dec
mov
jp
inc
or
iret
dec
pop
dec
inc
sub
xlat
xor
test
sub
add
ja
jae
sahf
fdivrl
mov
or
push
neg
mov
movsb
mov
and
lock
stos
bound
jg
cli
repnz
out
sti
and
mov
je
pop
or
test
insb
sarl
outsl
cmp
dec
sbb
xchg
movl
mov
inc
call
orl
lds
xor
ss
fisttpl
push
inc
test
and
mov
dec
mov
loop
mov
mov
shll
push
jge
imul
icebp
fcoml
aas
mov
loope
cmp
cmp
dec
mov
pop
bound
dec
je
fldl
push
pushf
rcr
and
ljmp
mov
lahf
sti
xor
and
gs
das
test
push
jae
adc
sbb
jl
jae
shrb
ljmp
push
out
shrl
es
repnz
cmp
adc
pusha
loope
sbb
int
in
inc
jp
mov
mov
jl
xchg
mov
repz
push
repnz
fdivrl
cwtl
mov
inc
out
test
pop
sahf
test
push
fwait
inc
jo
call
cwtl
xchg
je
jo
in
sub
nop
dec
push
lods
jle
dec
xchg
ret
movsb
cmp
cmp
lret
fnstsw
sbb
insb
xlat
ror
xor
les
inc
push
loop
sbb
inc
loope
loope
in
jge
aam
ja
dec
std
mov
sti
mov
push
int
and
sbb
push
bound
mov
outsl
pushf
push
mov
jge
xlat
push
dec
cmc
bound
xor
xchg
mov
xor
add
imul
cmp
jmp
int
cmp
int3
leave
aad
xchg
mov
dec
mov
jg
in
js
loope
add
out
ds
jnp
aad
fstpl
aaa
cmp
jno
xchg
push
imul
mov
aas
roll
and
adc
push
dec
adc
or
push
push
lods
cs
or
cmpsb
out
test
jp
testb
push
rclb
cmpb
scas
xchg
test
stos
jle
jnp
mov
xor
push
jecxz
hlt
or
fistl
xchg
cltd
sub
and
pop
pop
faddp
xchg
jb
mov
sbb
and
cmp
xchg
aam
js
daa
imul
sbb
push
inc
push
pop
push
lock
imul
lret
xchg
xchg
add
dec
jmp
and
mov
xorl
in
inc
mov
cmp
xchg
fsubs
out
fwait
dec
lea
fidivl
outsb
mov
fwait
mov
add
fstpl
mov
out
push
and
scas
repz
pop
xchg
pop
mov
cwtl
cmp
pop
dec
pop
jmp
push
xchg
add
ja
lods
sar
or
mov
sti
in
ret
push
push
rcll
mov
add
outsl
mov
push
into
jbe
ficompl
scas
mov
ss
jns
dec
mov
sahf
cmpb
mov
es
mov
aaa
push
and
pop
dec
jbe
push
sbb
js
pop
mov
jp
and
mov
jge
test
dec
xchg
shlb
cmp
adc
rol
sbb
gs
iret
adc
mov
xchg
in
int3
aaa
and
and
sbb
pop
imul
push
fstpl
or
or
inc
dec
ja
adc
daa
repz
out
repz
inc
lock
ljmp
and
jl
sub
addr16
dec
push
lock
ss
mov
cmpsl
xorb
dec
cmpsb
xchg
mov
pop
orb
pop
int3
sbb
test
out
test
sub
das
or
popa
sub
out
inc
jb
fcomp
or
scas
fnsave
push
fcmovbe
fsub
iret
sbb
in
jne
lret
popa
out
pop
mov
xchg
lcall
leave
ret
push
mov
sub
movzwl
xor
push
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
call
jmp
push
xor
add
push
push
xor
pop
or
xor
sub
mov
div
push
sbbl
call
movl
inc
movl
cmp
jb
movl
incl
movl
lea
inc
mov
andl
lea
xorl
mov
or
mov
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
andl
mov
xor
xor
xor
mov
sub
add
mov
mov
mov
movzbl
cmp
mov
mov
mov
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
or
mov
xor
xorl
add
addl
imul
movl
mov
movl
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movzbl
xor
mov
xor
add
and
mov
negl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
not
add
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
add
mov
mov
xor
xorl
add
movl
cmp
movl
jne
movl
push
subl
pushl
pushl
subl
call
mov
mov
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
jmp
or
mov
mov
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
mov
movl
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
and
mov
mov
andl
mov
addl
xor
xorl
xor
add
mov
xor
orl
xor
add
lea
movl
mov
movl
cmp
ja
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
sbb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
into
int
rol
shl
out
stc
pop
stos
push
or
xchg
jle
js
jb
inc
push
sbb
jno
mov
mov
rolb
lea
xchg
loop
loopne
jle
js
or
cli
xchg
mov
adc
pop
jmp
mov
into
cmp
pop
ss
sub
leave
adc
inc
mov
push
mov
or
fists
mov
or
movsl
jg
repnz
cmc
adc
pop
js
dec
pop
mov
shr
gs
xchg
dec
ret
inc
cs
stos
das
push
lcall
mov
pop
adcl
mov
pushf
or
out
pop
movsl
das
imul
xchg
insl
mov
out
ds
jbe
pop
push
mov
or
xchg
xchg
mov
loop
lret
inc
fwait
mov
xchg
ljmp
adc
enter
sbb
fildl
mov
imul
jns
adcb
push
aas
add
inc
mov
mov
pop
addr16
out
hlt
mov
icebp
mov
add
inc
sbb
xlat
mov
and
cmpsb
popa
fcoml
xchg
hlt
pusha
mov
jnp
xchg
mov
out
mov
fisttpl
stc
xchg
jbe
adc
pop
sbb
pop
pop
aaa
pop
bound
push
xchg
pushl
in
xchg
lods
mov
inc
cmp
mov
add
in
mov
sbbl
mov
enter
jecxz
clc
dec
or
push
sti
mov
in
or
sub
aam
pop
mov
dec
fs
repnz
cmpsb
fists
sbb
leave
inc
mov
insb
ljmp
cmp
xor
or
and
divb
xchg
ret
or
ja
mov
add
pushf
add
sub
pop
cmpsl
fucomi
push
pusha
dec
sub
and
daa
mov
ret
jne
inc
fwait
inc
ret
stos
movsb
sbb
inc
jno
test
mov
int3
lods
add
fwait
push
jge
jbe
jecxz
inc
add
jp
dec
pop
sar
mov
call
movsb
iret
data16
add
rcll
and
add
cmp
mov
push
xorl
icebp
outsb
lds
xor
scas
cld
mov
jne
repnz
jno
jp
test
jo
leave
loope
jne
rol
push
push
movl
mov
movl
movl
mov
push
jmp
lret
xlat
fcmovnbe
lret
test
pop
aam
jo
mov
js
jae
lea
fnstenv
mov
or
fisttpll
cld
dec
sbb
mov
leave
cwtl
jecxz
push
lods
repnz
sbb
sbb
mov
mov
xor
test
shll
icebp
pop
sbb
jb
mov
imul
and
arpl
ds
pop
mov
jne
jle
sub
or
daa
and
fcompl
movsl
aam
daa
pop
nop
roll
mov
mov
mov
mov
pop
data16
mov
cmpsb
hlt
cmpsl
aad
push
sub
push
int
lcall
mov
jne
daa
loop
xchg
xchg
test
push
xchg
sbb
pop
test
fs
sub
mov
push
cmp
mov
enter
add
inc
int3
ljmp
movsb
int3
jns
jnp
sub
push
daa
stos
push
loop
stc
int
sbb
jge
lret
xchg
jb
jno
stos
lock
in
inc
xchg
or
clc
sub
mov
pusha
and
les
aaa
sbb
out
aad
stos
repz
or
std
xchg
roll
orl
std
cmp
mov
movsb
jecxz
xchg
add
pusha
xchg
aaa
das
mov
sbb
or
lock
jns
lds
sbb
shr
jo
or
insb
movsb
sahf
sub
in
in
shlb
and
sbb
idivl
int
repz
fucomp
les
lds
push
sub
adc
in
mov
pop
cmp
xor
mov
dec
int
sbb
shrl
popa
xchg
dec
stos
mov
cld
adc
dec
add
aaa
outsb
ljmp
repz
mov
test
push
data16
adcl
fsubl
rcrb
scas
fbstp
mov
in
dec
loope
mov
dec
mov
aam
fadds
ret
sbb
jmp
jmp
into
or
jg
in
dec
insb
bound
cmc
pop
pusha
std
pop
test
aam
in
mov
ret
into
push
xchg
scas
test
pop
cld
xchg
loop
jge
test
fisubs
pop
dec
mov
insl
pop
pop
pcmpgtw
loope
pop
mov
aas
ljmp
fcomps
shr
xchg
sub
outsl
aam
cmpsl
push
mov
push
jo
lods
cs
cmp
add
xor
add
inc
add
push
mov
mov
mov
cmp
movl
je
mov
mov
xor
subl
add
cmp
je
jmp
into
xlat
ror
aad
rcr
stos
imul
xchg
and
sbb
xchg
jle
js
rol
jge
jns
jno
lahf
ficoms
jecxz
mov
cmp
fldenv
jno
dec
out
and
lcall
scas
mov
xor
push
jp
int
shl
dec
incl
jge
imul
ljmp
cwtl
jp
fldcw
adc
add
xlat
loopne
xchg
push
xchg
or
sub
mov
ret
aam
orl
push
add
push
pusha
cwtl
cmp
jno
cmc
cwtl
adc
pop
shr
add
mov
cwtl
jno
mov
mov
jg
mov
pop
fwait
ja
das
push
rolb
pop
pop
cli
mov
aam
add
adc
test
jne
ds
insl
bound
jns
fbstp
or
mov
insb
mov
jge
outsb
cmp
mov
movsl
arpl
cmp
hlt
in
cmpsb
mov
mov
gs
cld
aam
or
roll
sbb
enter
mov
dec
arpl
jle
mov
fldcw
dec
daa
pop
inc
xchg
or
aaa
call
or
xchg
mov
mov
cltd
xchg
xor
xor
sahf
aam
dec
fsubl
xchg
cmp
xchg
or
and
inc
mov
jb
cltd
loop
aad
xchg
outsl
int
sub
stc
xor
movsl
jecxz
repnz
cltd
movsl
jp
cmp
mov
jle
add
addb
jecxz
sub
fdivs
popa
scas
imul
popf
mov
es
test
insl
loope
int3
dec
sub
or
cmp
cwtl
lock
pop
out
jge
mov
xchg
in
jnp
ss
sub
sub
hlt
bound
fld
imul
mov
fs
cmpl
outsl
mov
outsb
in
popf
std
mov
nop
std
push
cli
sbb
lods
loopne
dec
mov
pop
out
inc
ja
push
daa
shl
shll
ret
pop
sbbb
cmp
dec
cltd
movsb
lds
test
or
addr16
push
filds
fisubs
jle
dec
sub
into
int3
rcrl
xchg
and
cmp
xor
sub
out
loopne
out
pop
inc
or
mov
js
adc
mov
negb
push
divl
inc
jns
dec
push
mov
jl
inc
cld
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
push
pushl
pushl
mov
addl
jmp
ret
leave
leave
leave
lret
add
cmpb
js
push
dec
xchg
sbb
pop
popa
adc
pop
adc
ss
and
in
faddl
sub
push
scas
cwtl
enter
int3
dec
repnz
mov
mov
xor
mov
sub
insl
sub
sbb
mov
lret
test
pop
cmp
mov
and
xlat
iret
xchg
push
mov
sbb
jg
loop
inc
jnp
fstpt
add
cmp
paddb
in
mov
jno
xchg
add
adc
pop
xchg
add
cld
jno
dec
rcrl
andl
outsl
sbb
pop
xor
lods
push
mov
popf
fmuls
xor
pop
incl
sbb
bound
lret
out
dec
jp
ljmp
pop
pop
adc
sbb
fisttpl
add
mov
mov
adc
aam
jne
mov
xchg
inc
jmp
pop
je
cmp
lret
cmp
mov
jmp
mov
mov
lea
cmp
add
or
and
int
xchg
iret
adc
sub
or
mov
lods
and
push
orb
cs
inc
mov
cltd
and
jp
jecxz
lret
jb
xor
ret
xchg
cmp
ret
lock
and
aad
cmpsl
in
and
adc
push
mov
rcrl
cmp
sub
call
cli
rcrl
icebp
jl
mov
fistl
inc
sub
aam
fidivrl
inc
scas
lcall
dec
lcall
mov
sbb
and
mov
mov
adc
mov
jle
xchg
inc
les
dec
inc
cmp
xchg
bound
mov
inc
and
pop
jo
jb
adc
sub
rcrb
in
js
xlat
push
rclb
sbb
mov
loopne
sub
clc
adc
push
and
addr16
fcoms
fdivrl
mov
xlat
fidivs
or
andl
push
popa
mov
jle
decl
add
jne
push
mov
aam
xor
xor
cwtl
xor
lret
push
push
sub
das
fsubs
ficomps
aaa
inc
movsb
mov
jge
outsl
sub
insl
out
xor
add
mov
mov
jmp
ret
int3
int3
aad
leave
roll
fucomi
enter
js
jle
js
cmpb
xor
xchg
push
dec
push
lcall
cltd
outsb
dec
fstpt
push
pushw
incb
jp
cmp
clc
push
fwait
inc
stos
dec
outsl
jbe
lcall
mov
rorb
lock
fmul
es
cmp
sub
xor
test
mov
in
movsb
push
or
mov
lock
iret
pop
test
gs
imul
mov
cmc
jnp
jne
sar
popa
jge
pop
mov
ljmp
lret
xchg
ljmp
sahf
imull
clc
inc
push
or
ss
ja
fwait
xchg
out
cwtl
and
xor
imul
inc
addr16
stc
xchg
jo
idivl
sub
pop
push
mov
sub
mov
mov
xor
addr16
cmpsl
jg
or
lods
and
xor
xchg
cltd
pop
ret
int3
sbb
mov
mov
in
repz
dec
lahf
stos
jne
out
loop
and
or
or
movsb
rcrl
std
loopne
jge
or
loope
push
cmpsl
cmp
mov
push
aam
xchg
xor
lret
push
add
dec
loop
test
mov
jecxz
adc
movsl
sahf
ret
fucomp
addr16
cmp
popf
sarl
xchg
rcr
sbb
rcll
pop
push
mov
pop
push
stos
dec
inc
add
mov
inc
icebp
sbb
pop
aad
cmp
sbb
pop
mov
cmpb
mov
fldl
xor
adc
int3
push
adcb
arpl
loopne
jle
lret
push
cmpsl
lcall
dec
and
push
mov
xor
and
push
subl
fmuls
mov
and
in
ror
roll
mov
imul
dec
xchg
mov
out
test
out
xor
out
xchg
sub
loop
jno
add
mov
les
loopne
jb
fmuls
jmp
adc
sbb
jecxz
je
jne
jne
scas
mov
pop
aas
add
adc
ret
sbb
jg
pop
push
xchg
inc
mov
test
adc
push
jg
or
shrl
aad
cli
rcrb
loope
xchg
or
push
jbe
jmp
jb
shlb
mov
mov
jmp
jmp
ds
int3
lret
xchg
aam
lea
js
jle
js
mov
imul
imul
data16
test
pop
int3
insl
fwait
nop
xor
xor
and
rcrl
and
adc
cmp
lcall
insb
fwait
dec
adc
aam
mov
mov
add
and
push
gs
push
out
in
in
adc
xchg
test
orb
sbb
inc
lods
ds
fmull
jmp
aas
mov
cltd
insl
sub
in
lahf
test
fdivr
cwtl
cli
jmp
mov
je
clc
outsb
mov
mov
iret
cli
scas
test
pop
mov
hlt
bsr
xor
cmp
mov
arpl
mov
push
and
adc
push
rcrl
es
std
iret
mov
popf
mull
sbb
xor
xchg
xor
sti
inc
outsl
jns
loope
fwait
push
push
in
and
scas
cltd
mov
push
inc
push
movsb
ret
or
leave
inc
adc
mov
sbb
push
xchg
pop
cs
xor
xchg
jo
jnp
test
mov
lods
xor
data16
scas
inc
lock
mov
adc
fwait
xchg
iret
mov
push
push
mov
gs
inc
lret
xchg
lods
add
in
cmpsl
mov
mov
mov
sbb
rcl
in
jbe
cmc
hlt
push
lahf
jae
data16
mov
ret
xor
fists
adc
inc
adc
xor
xchg
pop
scas
jg
or
mov
cmp
and
adc
xchg
mov
mov
add
sub
fdivrp
jmp
test
in
cmp
adc
push
and
inc
movsl
mov
and
cld
jp
out
cmp
push
scas
adc
ljmp
js
push
xlat
sbb
adc
push
rorb
xor
dec
out
out
jge
jae
shr
push
adc
int3
sub
push
addr16
out
es
lret
fidivrs
inc
repz
clc
sub
pop
mov
xor
or
lods
or
lret
push
mov
es
lahf
pop
pop
test
cmp
push
dec
xor
es
push
xchg
int3
adc
decl
inc
cltd
sub
stc
cmp
cwtl
pop
lods
adc
xor
fwait
pop
jnp
sti
adc
inc
icebp
push
cld
sub
in
ds
imul
xchg
inc
cld
jmp
rol
iret
fcmovbe
fcmovne
mov
sub
mov
and
xchg
jle
js
fists
mov
out
pop
mov
in
and
mov
test
fisubrs
cmc
movsb
imul
fldenv
mov
push
pop
sub
and
sti
pushf
fwait
mov
mov
mov
jo
dec
lock
mov
stos
or
lea
xchg
cmp
mov
push
lret
repz
shl
xor
je
clc
loop
or
filds
inc
sarb
ss
aam
das
jg
in
dec
jmp
or
mov
dec
repnz
and
mov
xchg
pop
out
into
push
dec
cmpb
and
inc
lret
mov
or
jl
mov
imul
xchg
mov
sub
sti
rcr
mov
xorl
movsb
sbb
inc
roll
bound
pop
mov
cli
jns
add
add
push
int3
aas
test
sbb
lahf
es
shll
cmc
add
or
push
pop
scas
scas
xor
mov
push
xchg
inc
sarb
test
jb
pop
xchg
sbb
andb
data16
ljmp
roll
inc
fwait
imulb
pop
test
fsubrs
fstp
add
inc
push
or
dec
dec
outsl
jmp
pop
lret
aam
jl
roll
fstl
addb
outsb
js
jle
add
xchg
jae
add
xchg
pmaxub
push
out
popa
add
lods
aas
fnop
bound
nop
rcrb
lock
pop
nop
sbb
mov
push
ss
jnp
jle
jg
dec
jecxz
shl
jns
rorl
out
cli
jle
xchg
pushf
sbb
in
lock
jg
or
xchg
loop
sbb
lods
fwait
inc
out
jecxz
pop
pushf
repz
mov
sub
and
addr16
and
inc
inc
add
cmp
inc
addr16
push
test
pop
jno
dec
ret
xchg
loopne
mov
lods
mov
imul
xor
xor
sub
stos
jnp,pt
xor
insl
jmp
mov
inc
jbe
iret
sahf
and
ficompl
fstpl
pop
mov
and
adc
lret
enter
dec
mov
aaa
fildll
test
add
dec
adc
movl
test
inc
cld
xor
add
mov
mov
xor
jmp
xlat
cmp
fcmovne
push
lcall
sub
js
cmpsb
xlat
lret
popa
mov
test
into
mov
mov
push
push
loopne
daa
stos
popf
jmp
mov
or
lock
sbb
push
xchg
push
ja
loope
pop
mov
nop
ja
lods
cs
bound
cmp
jle
xchg
pop
dec
int
sbb
mov
jo
shrb
xlat
and
push
pop
je
sub
pop
xor
test
ljmp
dec
movsl
lea
je
inc
test
jno
pop
mov
mov
scas
or
sub
sub
mov
rol
cwtl
or
cmp
adc
add
je
xor
jg
call
bound
int
ljmp
xchg
sbb
xchg
xchg
inc
in
sub
incl
ja
pushf
cmp
rcll
jg
or
push
aas
ljmp
jne
cltd
loopne
jne
jp
inc
cwtl
shrb
es
add
xor
std
mov
mov
pop
and
fdivp
mulb
jnp
sub
push
shl
xchg
or
push
fisubrs
imul
lock
pop
xor
ds
mov
jb
stc
in
cmp
arpl
dec
dec
xor
arpl
sti
sub
dec
es
lret
mov
sub
scas
fs
aaa
or
imul
and
mov
and
aas
mov
and
in
and
jo
pop
fucomip
pop
lahf
pop
popf
adc
jmp
xchg
popa
add
adc
mov
or
andl
mov
aaa
sub
fisttpll
inc
inc
mov
jecxz
pop
test
mov
aas
sub
lods
gs
or
xchg
mov
jnp
jge
popa
daa
clc
xor
sti
sub
pushf
push
and
nop
mov
mov
jns
outsb
xchg
jmp
adc
xchg
xor
add
push
cmc
pop
or
leave
sbb
in
mov
jl
shr
cld
movsb
aad
nop
or
scas
adc
sbb
sub
inc
out
or
adcb
out
inc
rclb
repnz
push
jbe
out
mov
std
mov
fstl
mov
insl
mov
fs
test
push
jb
subb
cld
add
movsl
xchg
stos
pop
add
mov
jmp
ret
xlat
leave
rcr
rcr
xlat
cmp
push
inc
sub
xchg
jle
js
mov
cli
xchg
and
aaa
adc
jae
or
inc
mov
cltd
pop
js
push
mov
jns
fs
mov
into
bound
xor
mov
cmp
dec
push
flds
add
jnp
movsb
sbb
mov
mov
jmp
data16
mov
mov
lods
jo
out
adc
fcomps
ljmp
test
and
xor
xchg
push
push
dec
mov
insb
push
and
mov
and
test
adc
jmp
jns
mov
lods
xchg
dec
pop
mov
xchg
push
xor
cld
inc
pop
xlat
mov
lods
movsb
leave
mov
int
stc
lds
mov
pop
aam
pushf
sbb
orl
xchg
dec
and
mov
adcb
xchg
sub
push
pushf
push
dec
pop
adc
cli
test
mov
mov
mov
ja
pop
inc
cld
sbbl
lret
and
fxch
lds
pop
add
int3
dec
enter
pop
mov
mov
add
in
cltd
sub
adc
add
push
add
andb
jno
mov
rcl
sub
popf
arpl
dec
fmuls
mov
xor
data16
or
shr
mov
sbb
jge
xchg
cmp
lea
xor
orb
fdivs
repnz
loop,pn
push
pop
test
jns
nop
xorb
popf
cmp
in
mov
and
xchg
lret
push
lock
jb
test
loop
mov
out
out
xor
jle
lahf
sub
shll
sbb
sbb
or
sub
pop
mov
or
out
push
adc
pop
leave
addr16
and
mov
adc
mov
es
pop
fsubl
add
jbe
mov
jns
shrb
hlt
sbb
push
inc
jmp
fwait
adc
xchg
ja
push
pop
stos
je
pop
shll
test
xchg
mov
dec
push
jns
pop
and
loope
stos
push
pop
jp
push
shr
sbb
or
cs
mov
int3
mov
mov
add
fisubrs
pushl
pushl
call
mov
xor
pop
jmp
rcl
rcl
rcl
and
shl
and
loop
jg
xchg
jle
js
std
shl
pop
jbe
mulb
ja
fbld
std
mov
adc
jbe
cmp
cmp
lods
xchg
push
aad
dec
jbe
cld
jne
cmpsb
cmp
or
addl
out
leave
in
fs
cmp
or
cli
enter
sbb
stos
fldlg2
jns
popa
inc
outsl
cmpb
mov
jae
pop
dec
imul
xor
xor
out
and
or
scas
push
mov
in
mov
jg
nop
lds
outsl
fldl
push
nop
cmp
dec
jo
adc
xchg
repz
int
dec
out
rolb
mov
pop
into
inc
roll
inc
fcomp
dec
ret
xchg
into
jno
fiaddl
lret
inc
dec
add
in
outsb
push
and
mov
dec
cmpsl
jns
add
inc
adc
mov
jne
into
dec
arpl
cmp
arpl
movsb
jl
addr16
enter
cs
out
mov
pop
fs
sub
bound
test
int
loop
lock
or
aad
stos
scas
cli
aam
add
rcrb
das
or
es
rolb
mov
jbe
mulb
xchg
lcall
or
lods
adc
adc
sbbl
sbb
in
jnp
imul
mov
xchg
sbb
pop
mov
in
iret
push
push
adc
lret
mov
sarb
std
add
js
movsb
and
mov
pop
ficompl
push
sti
shl
dec
sub
fcmovnb
movsb
and
mov
negb
cwtl
push
mov
scas
or
mov
adc
lods
mov
test
test
arpl
cmp
xlat
loopne
repz
sbb
dec
push
push
sub
dec
jno
lock
xor
inc
and
adcb
les
lret
jle
ret
pop
jno
pop
xor
xchg
movsb
jb
mov
sub
cmpsl
out
mov
sti
out
es
inc
inc
lods
mov
in
sbb
jnp
dec
lods
push
loop
out
cmp
cmp
stos
inc
cmp
testb
aaa
dec
pop
sar
popa
adc
inc
pop
xchg
mov
pop
jno
pop
mov
adc
cmp
xor
adcb
stos
jae
sub
xchg
imull
mov
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
add
xor
cmp
jne
mov
mov
jmp
ror
xlat
cmp
jns
sub
ja
jno
jg
jg
add
hlt
rcrb
notb
lock
push
js
mov
test
loope
daa
mov
mov
les
lods
jp
dec
jnp
and
ficomps
rolb
mov
adc
test
jnp
pop
xchg
fwait
push
mov
mov
jae
mov
mov
xor
lea
sub
out
das
add
ret
test
sbb
xor
jl
dec
jnp
pop
mov
dec
aam
insl
xor
pop
xlat
js
cmp
and
cmpsl
pushf
cli
or
imul
ret
mov
jecxz
lods
sarl
jo
loope
out
and
jge
cs
addr16
pop
sub
jo
pusha
das
cmpsb
adc
cmp
std
les
and
lahf
sarb
roll
push
scas
fcmovu
lds
inc
fisubrl
mov
cmpb
mov
cmp
scas
js
out
scas
lods
ficoml
jae
xchg
mov
pop
pop
popa
les
xor
jnp
rcrl
or
arpl
bound
push
lock
aam
les
push
loope
pop
out
ds
lea
mov
lret
adc
and
scas
negl
or
fistps
jg
and
sbbb
scas
xchg
pop
outsb
adcl
mov
xorb
cmp
iret
out
ja
iret
or
aaa
out
jne
mov
jne
stc
sbbl
jmp
mov
fadds
es
dec
mov
in
or
shll
or
inc
pop
repz
dec
add
xor
pop
and
sbb
and
mov
lods
movsl
lock
stc
in
adc
xchg
fstpt
inc
out
lret
js
in
sbb
pop
mov
mov
inc
icebp
or
cmp
and
add
cmp
aad
aad
popa
adc
jo
lea
add
jg
add
sbb
lret
xchg
pop
push
aaa
aaa
add
insb
cmc
add
test
les
cmpsl
subl
cmp
sub
das
xchg
mov
pushf
jmp
cmpl
dec
or
pop
xchg
push
insl
test
mov
and
push
call
adc
jno
lret
and
outsb
divl
popf
dec
stos
adc
lret
pop
xchg
int
push
add
in
mov
lock
add
test
into
push
sahf
es
and
insb
adc
ss
cli
mov
xchg
xchg
pop
jmp
xchg
dec
in
mov
movsb
adc
ja
pop
push
cli
scas
insl
dec
bound
xchg
xor
imul
frstor
cmp
jmp
push
push
insl
adc
sub
adc
sbb
jge
ja
loop
bound
inc
fwait
jge
push
inc
mov
ds
roll
dec
mov
mov
mov
sub
xor
popa
js
subl
inc
iret
push
mov
adc
int
add
jp
and
bound
push
add
decb
inc
in
cltd
jp
ljmp
nop
insb
mov
cmpsl
ss
clc
pop
xchg
pop
xchg
sub
xor
push
mov
push
adc
xchg
idiv
lahf
and
pop
cmc
add
xchg
add
int3
out
int3
adc
sub
mov
arpl
sahf
mov
mov
mov
aad
daa
sbb
call
or
pop
jne
inc
shll
lods
addr16
sbb
inc
jbe
shrb
jg
push
add
cltd
je
std
dec
push
mov
pop
push
imull
dec
sub
stos
pop
sbb
mov
inc
sbb
inc
xchg
adc
or
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
cmp
int3
leave
fnstenv
or
lds
xor
add
mov
cwtl
push
cmc
push
jbe
dec
pop
pop
mov
mov
fidivs
jecxz
loopne,pt
lret
ficoms
lahf
fcompl
repnz
pop
adc
sub
shl
xchg
xor
adc
mov
pop
or
inc
mov
imul
mov
dec
mov
sub
out
jg
or
popa
mov
cmpsl
inc
pop
pop
rorb
xor
imul
mov
aas
xchg
repz
cli
test
mov
jmp
in
pop
sbb
arpl
mov
daa
mov
inc
or
cmc
mov
ljmp
insl
fmuls
insl
jg
mov
sbb
orl
push
sub
scas
test
dec
xor
leave
cwtl
mov
jnp
mov
pop
scas
cmp
mov
shl
aad
out
xchg
inc
pop
mov
aas
or
hlt
mov
sub
sub
add
js
outsb
test
mov
mov
out
inc
adc
shlb
xchg
jg
inc
mov
pop
adc
mov
pop
nop
cmp
mov
cwtl
xchg
ficompl
loop
pop
or
add
lea
jno
cmpsb
mov
int3
dec
jmp
xor
push
icebp
or
sub
ljmp
aam
adc
pop
jl
jge
and
dec
xchg
ja
aam
sub
movsb
pop
push
pop
popf
ret
ficoms
adc
mov
push
mov
nop
xorb
arpl
js
inc
sbbl
or
mov
inc
jne
mov
insl
in
stc
cmpl
nop
adc
pop
cli
fstpt
scas
fdivl
imul
shlb
aas
inc
xor
add
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
adc
mov
inc
mov
andl
xor
orl
add
movl
mov
not
movl
mov
movl
mov
mov
push
movl
mov
mov
cmp
movl
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
jmp
ret
ret
leave
lret
incl
es
push
aaa
jg
jnp
js
lcall
in
es
mov
gs
mov
mov
loopne
out
mov
and
xor
lock
pop
cmp
in
pusha
sti
pop
cmp
into
pop
mov
cmp
fcompl
inc
inc
adc
aaa
test
sub
cwtl
outsb
movsl
es
ror
mov
bound
cmp
pop
inc
pop
xor
rorb
imul
mov
aad
or
popa
loop
mov
mov
aam
or
lods
inc
addr16
cltd
push
xor
in
push
jl
jecxz
loop
test
es
gs
sub
iret
pop
sbb
inc
mull
dec
xchg
daa
mov
ljmp
into
cmp
cmp
push
inc
lock
shlb
push
data16
and
mov
jb
fistl
sub
pushf
mov
lcall
jne
cmp
lret
cli
jge
push
mov
aas
repnz
fadds
sub
je
aas
jecxz
ret
xchg
bound
mov
shlb
jno
sbb
xlat
loope
jae
and
aam
push
or
adc
fs
cmp
adc
ljmp
in
inc
mov
mov
je
cmpsl
push
xor
lods
add
outsl
and
insb
rcr
cmp
dec
cld
ret
std
jnp
test
sti
push
inc
adcl
iret
or
pop
das
fnstsw
pop
or
sti
jne
mov
loopne
out
cmp
subw
popf
adc
or
out
xor
jns
sub
dec
sub
inc
jecxz
mov
jb
pop
int3
in
pop
mov
movzwl
and
or
xchg
enter
mov
mov
pop
decb
cmp
bound
xchg
sti
pop
push
lahf
pop
inc
les
pop
imul
popw
mov
in
cwtl
movsl
popf
jl
test
inc
aam
int
fcmove
jb
out
mov
in
stos
fldl
xchg
dec
daa
or
pop
fistpl
mov
or
pop
lahf
xor
pop
outsl
xchg
pop
call
arpl
mov
arpl
shrb
icebp
mov
loopne
lahf
scas
mov
cmp
pop
shl
mov
enter
rol
subb
in
addr16
jmp
xchg
int3
test
into
add
fistps
lret
cmpsb
or
roll
ret
les
xchg
lret
pop
addr16
push
ja
jo
xor
sub
add
iret
jne
aam
lods
pop
inc
ffreep
mov
adc
test
enter
mov
cwtl
jb
add
enter
add
sarb
xlat
xlat
loope
pop
jl
addb
jg
jnp
js
fwait
cmpb
sbb
push
jno
sbb
xchg
jne
sbb
pop
sbb
cmp
lea
push
xor
fisubs
cmp
or
js
lods
adc
xchg
rcl
daa
push
movsl
push
xlat
sbb
sbb
mov
pop
sbb
mov
lcall
in
loop
mov
push
clc
insb
idivl
dec
adc
inc
xchg
jnp
mov
insl
push
mov
push
mov
cld
sbb
xor
xchg
mov
push
in
cmp
dec
push
stos
mov
dec
ficompl
rcrl
roll
push
movsl
outsb
pushf
arpl
xor
mov
cmp
or
scas
inc
stos
inc
xor
cmpsb
xlat
mov
pop
fidivrs
push
mov
pop
xor
cmp
test
scas
arpl
add
inc
add
aas
ljmp
test
in
sbbl
loopne
lods
cmp
fwait
ja
sarl
subl
cltd
aad
sub
test
insb
inc
xchg
inc
mov
hlt
dec
cli
inc
outsl
dec
jb
nop
clc
push
and
pop
mov
jo
fsub
ljmp
stos
movsl
and
iret
and
inc
std
lcall
and
subb
cs
shr
sub
mov
cmp
jbe
jo
aam
and
and
adc
sbb
pop
fcomip
scas
movsl
mov
dec
int3
jp
push
mov
or
inc
xchg
and
fnstcw
dec
test
xorl
fs
ret
adc
int3
mov
aas
test
adc
repz
fsubrs
enter
and
lret
std
cmp
dec
push
sub
subl
enter
or
and
sub
movb
pop
jecxz
push
mov
pusha
js
mov
adc
or
stc
addr16
insl
push
push
cmc
lea
push
inc
loopne
and
jns
cmp
imul
xlat
mov
pushl
add
mov
push
outsl
dec
pusha
insb
test
repnz
mov
loopne
cwtl
test
insl
outsl
xchg
movsb
ljmp
pop
xor
sbb
jne
jmp
mov
outsl
cmp
or
out
lahf
lods
fldcw
sti
icebp
shr
inc
xor
fildl
or
loope
pop
mov
adc
mov
sbb
cli
and
cmp
aad
push
push
xchg
inc
or
sti
sbb
pop
add
rol
fcoms
dec
in
out
xchg
popf
or
mov
mov
mov
std
in
xchg
rcr
sarb
outsb
xor
fwait
idivl
stos
cmp
jne
jmp
jmp
int3
les
aam
ror
mov
xor
jg
jnp
js
pop
add
pop
add
out
pop
dec
icebp
jle
dec
sahf
pop
cmp
lcall
jns
adc
jecxz
imul
cmp
pop
pop
mov
stos
mov
outsl
mov
lods
mov
mov
adc
pop
lods
pop
pop
lock
push
mov
push
push
push
sub
nop
fiadds
nop
mov
cltd
jle
pushf
fwait
xor
mov
adc
lret
inc
dec
sbb
sub
in
mov
jge
ret
pop
imul
lds
enter
in
lea
xchg
loope
insb
cmp
es
jmp
push
mov
add
jl
push
data16
out
scas
sub
mov
push
rcrl
in
pop
clc
loopne
cmp
dec
test
xor
cmpl
repz
pop
rorl
insb
lahf
test
and
lret
ror
mov
into
add
cmp
lret
inc
push
pop
cmc
ja
sub
lods
adcl
sub
dec
les
jnp
jge
mov
jne
cld
mov
pop
push
cli
push
mov
ja
js
mulb
jg
ss
xchg
lahf
sbb
nop
push
fcmovb
sbb
pop
test
pushf
xchg
addl
div
push
jno
stc
xor
xchg
push
pop
scas
gs
dec
clc
push
jge
dec
push
mov
push
sbb
jl
pop
or
add
cmpsl
xorl
sub
jnp
stc
loope
inc
mov
ret
jg
sbb
pop
incl
loope
cli
shrb
push
dec
repnz
lods
sbb
int3
xchg
out
dec
xor
pop
sub
out
adc
mov
jno
push
adc
pop
pop
jbe
ss
mov
leave
leave
adc
inc
add
jnp
loopne
mov
jp
int
push
xchg
xor
cmp
jge
aam
test
and
mov
stc
push
out
rcrl
out
xor
pusha
leave
negl
xor
xlat
adc
out
mov
sub
push
psubw
add
mov
pop
cmpsb
movsb
int
sti
pop
jle
cld
sbb
dec
or
mov
mov
jmp
flds
scas
loope
lret
popa
or
aad
xchg
sbb
lods
test
mov
jo
je
xchg
mov
or
sub
sub
sbb
jmp
mov
sub
inc
push
xchg
loope
sub
in
subb
iret
ss
pop
inc
mov
lret
cli
pop
mov
rep
add
jno
fwait
push
out
je
add
repnz
mov
fidivl
and
in
mov
incb
decl
jne
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
jmp
cmp
rcl
fcmove
test
pushf
pop
jg,pt
jnp
js
out
outsb
int3
ret
fwait
add
add
jb
jns
ja
cltd
fwait
jb
dec
and
je
dec
addr16
dec
dec
or
addr16
mov
insl
aaa
dec
fwait
insb
fsub
mov
movsl
or
adc
repz
nop
inc
sbb
add
insl
int
jns
iret
mov
jne
movsl
imul
and
cltd
or
or
stos
sarl
cmp
mov
pop
push
pusha
popa
mov
jmp
xor
push
or
jecxz
mov
outsl
cmp
shrl
fisttps
outsl
push
mov
lods
mov
and
cmp
je
sbb
add
sbb
std
or
mov
pop
loope
inc
cs
leave
push
cmp
fs
inc
jl
hlt
cmpsl
cmp
mov
mov
push
pusha
xor
sbb
ljmp
negb
or
xchg
cs
cmp
fldenv
lret
les
dec
scas
cmpsl
mov
xchg
les
fstpl
adc
rcrb
adc
sbbb
mov
orl
in
pop
sub
push
in
mov
cmp
cmp
shl
es
int3
lret
pop
sarb
cld
cli
dec
mov
cmpsl
nop
inc
mov
xor
insl
dec
out
enter
fldcw
outsb
dec
mov
mov
pop
fadd
or
mov
xlat
lcall
mov
arpl
jnp
addr16
jo
arpl
xchg
mov
outsl
js
sub
sub
and
fdivs
ret
mov
or
adc
mov
xor
outsb
daa
popl
in
xchg
push
je
fdivrl
sub
mov
fbstp
int
cmp
insl
repnz
lahf
and
mov
notl
test
mov
push
inc
test
mov
dec
cli
or
imul
mov
scas
dec
push
push
pop
loopne
stos
xchg
scas
daa
std
test
lcall
out
in
add
jno
popl
aaa
ret
aam
fsts
cmp
ficoml
test
cmpsb
adc
movsl
faddl
andb
inc
xor
and
shll
mov
push
sub
out
into
mov
add
sub
sbb
sub
jmp
or
cmpb
inc
jg
insb
aam
int3
outsl
pusha
jg
cld
add
xchg
jp
sub
xchg
push
mov
cmpsl
shll
inc
dec
mov
sbb
pop
mov
ljmp
lods
andl
jnp
dec
out
movsb
or
test
scas
mov
out
addr16
jb
mov
pop
mov
add
nop
dec
xchg
iret
cltd
push
aad
loop
nop
xchg
xchg
pushl
mov
jmp
lret
into
ret
ret
lret
xor
stos
push
icebp
and
jmp
ret
jg
jnp
js
mov
mov
scas
push
ss
or
mov
mov
pop
in
icebp
repnz
stos
jg
pop
outsl
mov
push
jmp
lret
xor
mov
mov
mov
cmp
in
nop
jb
mov
stos
in
testb
and
decl
fs
leave
decl
add
outsl
jnp
inc
repz
rcrl
aaa
ja
sarb
xchg
inc
adc
test
mov
movsb
js
pop
negb
pop
fs
les
fstpt
das
lea
inc
insb
icebp
andb
add
das
adc
dec
mov
mov
jae
inc
loopne
fisttpl
push
and
pop
sbb
arpl
fadds
neg
nop
push
mov
mov
or
xchg
bound
sub
test
aam
jo
pop
in
in
fiadds
stc
fndisi(8087
movsb
cltd
pop
cmc
ljmp
outsb
test
pusha
lea
fdivrs
mov
pop
inc
jnp
or
jmp
cltd
imul
and
jg
add
sbb
addr16
call
mov
cmpsb
cmp
jmp
jns
test
lret
nop
mov
push
lret
or
xchg
in
iret
lock
push
mov
cmp
in
inc
xchg
mov
pop
xchg
icebp
push
xchg
or
divb
xor
rolb
arpl
xchg
or
xchg
lret
psadbw
das
lret
call
outsb
imul
mov
repnz
out
cltd
fisubrs
out
adc
add
inc
mov
pop
pop
call
mov
inc
lods
popa
mov
jge
adc
imul
mov
sbb
push
lock
sbb
xor
lcall
dec
mov
xadd
dec
sbb
pushf
cld
movsb
imul
cmc
sbb
mov
enter
lock
and
sub
mov
out
pop
mov
jecxz
mov
test
adc
je
lods
sub
pop
outsl
lret
sahf
fildll
xchg
lret
shrb
dec
pop
and
ss
jle
xor
and
pop
mov
repnz
jmp
jb
xor
je
mov
mov
sbb
scas
xor
mov
inc
popf
imul
cmp
cmp
add
lret
imul
insl
jb
lods
insb
sti
xor
shlb
xor
xor
xchg
imul
and
adc
pushl
xor
add
add
rol
leave
shll
movsb
dec
xchg
insl
or
jle
js
dec
adc
test
jns
jae
lods
fcoms
lods
enter
xor
xlat
lret
push
xchg
mov
cmp
mov
in
mov
out
pop
and
repz
pop
sub
movsl
movsl
insl
outsl
jnp
add
fnstsw
shll
add
push
repz
fidivs
push
pop
or
jecxz,pt
pop
pop
pusha
add
out
xor
clc
lds
fmuls
lds
ljmp
and
and
aad
cmpsb
mov
in
mov
xchg
sbb
dec
lock
and
pop
sub
pop
xor
insb
lret
stos
je
ret
and
xchg
cwtl
outsb
dec
push
out
pop
lods
mov
xchg
mov
outsl
pop
std
sbb
inc
mov
cld
push
mov
lods
push
pop
cld
inc
out
pop
sub
push
popf
cmc
test
jnp
fsts
mov
std
stc
push
jae
jle
push
roll
xor
xor
jbe
sub
iret
jp
pop
shrl
leave
dec
push
rclb
lea
push
push
call
mov
dec
push
mov
or
xor
sahf
ret
sbb
clc
jne
adc
outsl
lcall
hlt
mov
inc
cmp
leave
cli
in
fucomi
push
xor
lea
mov
in
adc
into
xchg
aas
movsl
pop
out
push
push
fnstcw
ds
push
push
ret
or
das
mov
mov
cmc
stos
xor
xor
rcrb
mov
cwtl
icebp
sbb
mov
xor
and
fst
or
dec
movsb
mov
shr
scas
add
cmovle
loope
push
pop
mov
jne
push
adc
mov
or
aad
push
inc
subl
jne
cltd
mov
dec
bound
mov
sub
adc
and
mov
cmp
lods
xor
jne
in
mov
in
outsb
mov
fsubr
mov
push
scas
mov
mov
and
cli
mov
mov
mov
rcrl
je
movsb
xor
mulps
aad
loope
dec
adc
and
mov
dec
bound
pop
js
mov
addr16
jmp
lret
cmp
xchg
mov
mov
cltd
pushf
out
leave
stos
loopne
mov
mov
mov
arpl
inc
nop
mov
mov
push
adc
lods
push
inc
into
pop
cmp
mov
mov
jge
xchg
dec
push
rcll
movsl
pop
lods
out
gs
add
add
or
push
mov
sub
jmp
rcl
ret
into
rcl
daa
jle
mov
lds
adc
js
push
aaa
adc
out
lock
pop
mov
mov
and
lahf
clc
jno
stos
add
and
jno
pop
cwtl
cmpsl
fisubrs
and
sti
mov
jmp
stos
insb
repnz
scas
push
clc
shlb
push
xchg
pop
mov
cmp
jnp
xchg
je
ret
in
sbb
push
cs
sub
roll
aaa
dec
dec
mov
push
gs
pushf
stos
test
mov
hlt
movsb
adcb
je
incl
pusha
lods
mov
es
psllw
jne
mov
and
push
pop
cli
lret
dec
pop
sub
inc
stc
mov
nop
sbb
adc
cmp
ss
addl
lea
add
xchg
out
adc
outsb
dec
xor
xor
sub
xchg
or
ret
lret
cmpb
pusha
movsb
idivb
push
xor
hlt
pop
imull
out
in
sub
in
fimull
jns
xor
data16
cli
out
fisttpl
or
stc
js
aaa
orl
cs
aam
scas
mov
xor
push
pop
cmp
jecxz
jnp
insl
cmp
cmp
outsb
stc
inc
repz
in
dec
imul
cmpsl
out
shl
jnp
pop
lea
jbe
push
mov
in
inc
enter
sahf
test
lods
xchg
clc
aaa
out
add
je
pop
adc
sub
sbb
sbb
out
sub
or
stc
push
jmp
inc
mov
std
xchg
push
xchg
pop
jle
add
jns
mov
test
mov
pop
push
add
lods
and
xor
mov
lcall
insl
adc
faddl
jno
adcl
outsl
ds
in
sub
and
sti
dec
aam
cs
test
cld
cmp
popf
test
add
add
add
leave
add
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
adcl
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
and
push
add
mov
and
xor
movzbl
adc
mov
adcl
add
incl
mov
mov
push
movl
push
test
movl
je
jmp
lret
fld
scas
inc
adc
fcmovb
xchg
and
jg
adc
js
inc
out
pop
cmp
or
xchg
into
cltd
add
je
dec
loop
subb
and
ss
lods
out
in
in
fisttps
pop
std
dec
xchg
cmp
xor
push
stos
cltd
sahf
incb
in
xor
mov
or
xor
mov
pop
mov
mov
gs
popf
jne
xor
sbb
fs
or
jo
cmc
int3
mov
je
jbe
inc
fstp
sbb
jl
imulb
ret
cmp
mov
and
and
mov
cmp
loop
rorb
aas
xor
fstps
sbb
jl
pminsw
dec
sbb
in
pop
inc
mov
lds
jmp
lods
xor
mov
int3
lea
nop
sub
clc
iret
mov
mov
inc
int
xor
adc
enter
fadds
xchg
pop
into
mov
insb
push
mov
test
and
inc
les
leave
nop
sahf
lahf
jmp
inc
sbb
dec
loop
add
jne
or
mov
out
lock
aam
outsb
adc
sti
loop
stc
iret
fildll
xor
xchg
loop
cmp
xor
in
out
leave
pop
sbb
in
dec
xchg
xor
mov
jge
dec
js
jmp
mov
jne
fwait
add
push
sub
repnz
jb
jnp
loop
cmpsl
out
adc
enter
fs
dec
lcall
mov
push
and
sbb
lds
stc
je
mov
mov
popa
pop
dec
lahf
mov
push
hlt
out
fldln2
cltd
repz
ljmp
jl
pop
clc
pop
decl
dec
bound
daa
imul
int
popf
shlb
fsubrs
cmpsb
lods
sti
cmp
mov
mov
repnz
mulb
pusha
das
sahf
out
push
mov
movsb
rcll
adc
in
ljmp
mov
ljmp
mov
add
mov
mov
imul
xor
mov
add
sub
mov
mov
notl
xchg
addl
jmp
iret
iret
xlat
xlat
iret
xlat
cmpsb
call
push
and
leave
jg
adc
js
inc
sahf
adc
stc
in
xchg
aas
ret
adc
push
rorl
lods
icebp
sbb
leave
mov
out
xor
jbe
out
inc
pusha
addb
aaa
dec
hlt
dec
cmp
fnstenv
leave
fildll
pop
ds
inc
shr
mov
cwtl
call
adc
xchg
out
mov
loop
dec
imul
nop
call
call
jno
add
adc
xchg
xor
push
mov
mov
pop
dec
xchg
hlt
in
lahf
push
lahf
insb
orl
xchg
dec
xchg
jo
imul
gs
or
je
sarl
adcl
fdivl
aas
insl
aad
xor
in
xchg
fwait
dec
xor
out
adc
es
test
lock
lcall
cmp
sarb
jns
xor
adc
pop
movsb
pop
inc
cs
xchg
pop
mov
lret
enter
mov
shrl
xchg
sub
test
popa
test
jo
mov
test
ljmp
push
scas
xchg
jno
mov
orl
adc
cmpsl
shlb
loop
repz
pop
fs
jge
mov
lahf
sbb
pop
stos
das
jl
or
cmc
and
jmp
arpl
cmp
xchg
mov
int3
sahf
ret
add
inc
fldenv
xlat
cwtl
sbb
push
pop
out
pop
not
aam
jns
dec
dec
call
and
jnp
push
ret
and
pop
stos
sub
mov
pop
pop
jne
or
js
test
dec
ficomps
sub
dec
sbb
cmc
push
ret
dec
sarb
test
mov
cmp
mov
jne
inc
push
mov
in
loopne
lea
push
sti
hlt
out
sub
cmpsl
fldcw
js
pushf
jmp
popf
pop
sub
adc
xor
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
adc
mov
and
mov
add
mov
mov
adcl
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adc
add
mov
mov
jmp
cmp
fcmovbe
aad
xorl
pop
xor
ror
jg
adc
js
fistpl
pusha
push
sarb
iret
fucomp
pusha
ss
or
push
out
or
add
adc
push
and
mov
iret
sub
rsm
sub
cmc
jnp
ss
xlat
fwait
xor
xor
sar
lea
xorb
jo
sub
pop
pop
fdivrp
or
sub
lcall
pop
popa
add
loopne
xchg
into
adc
lret
or
mov
cmp
mov
and
dec
pop
xchg
adc
jne
inc
in
xor
cmpl
arpl
xchg
in
fimull
lds
xchg
jmp
aad
pusha
lds
pop
jmp
inc
cmp
push
fstpl
xchg
bound
sti
aad
pop
fists
jno
and
sub
sub
movsb
lret
mov
mov
shl
sbb
push
mov
mov
jg
lret
jb
mov
inc
mov
loop
dec
pusha
and
lret
adc
mov
lods
mov
push
xchg
orb
je
fildll
mov
xor
leave
sub
out
dec
scas
xchg
imul
add
push
adc
xor
loope
cwtl
das
lods
leave
push
fwait
sbb
push
xor
gs
std
mov
aas
cmc
add
push
pop
in
dec
dec
decl
icebp
imul
sub
xor
out
push
mov
dec
mov
jne
pop
cld
sarb
or
lods
and
std
push
adc
in
lret
dec
dec
rclb
cmc
bound
leave
jmp
or
std
test
push
sti
xchg
addr16
cmp
add
and
in
addr16
fbld
and
repz
ljmp
movswl
movsl
mov
stc
js
mov
roll
adc
sub
insl
mov
mov
je
inc
mov
xor
sbbl
add
movl
cmp
movl
jmp
into
ror
leave
push
or
dec
shrl
adc
js
jbe
out
mov
test
xchg
pop
push
loopne
sub
and
and
jae
push
sbb
xchg
call
in
out
repz
xchg
and
inc
icebp
mov
fwait
aad
mov
pop
dec
pusha
sub
cs
out
mov
cmp
xchg
out
mov
sbb
call
xchg
sarl
dec
xchg
mov
dec
rcrl
jne
inc
shlb
imul
cltd
movb
jae
adc
aam
mov
jne
dec
fldenv
rorb
pop
repz
inc
scas
je
out
imul
sub
mov
dec
movsl
jne
mov
cwtl
sarl
push
sbb
push
cmp
add
rcl
pop
rcl
cmpsb
push
and
insb
push
pushw
add
inc
mov
mov
fisubrs
shrb
cltd
sub
push
dec
pop
sub
popf
xchg
jmp
lret
add
mov
test
pop
sbb
sub
leave
sti
arpl
mov
dec
push
cld
out
mov
lcall
aam
push
popf
outsb
pop
outsl
pop
sti
clc
dec
js
out
cs
fdivl
and
test
int3
pop
xchg
cltd
dec
mov
lock
popa
loope
movsl
xor
inc
notl
sti
sub
jl
movsl
jp
cmpsb
or
xchg
adc
jno
inc
pop
mov
xchg
in
pop
pop
or
ret
mov
rorb
icebp
and
push
orl
inc
sbb
cmp
ret
inc
stc
mov
add
xchg
push
jb
adc
inc
cmpsl
stos
out
add
aad
icebp
mov
cmpsl
adc
and
cli
adc
cmp
inc
iret
or
mov
stos
daa
mov
push
pop
cli
jle
push
test
iret
fwait
dec
addl
out
mov
pusha
int
aam
sar
sub
cmp
xchg
lret
xor
icebp
xor
iret
and
test
inc
data16
movsl
jg
stos
ss
addl
pushl
orl
call
and
mov
jmp
aas
into
leave
int
into
fwait
orb
mov
test
jle
js
lret
stos
xor
mov
repnz
pop
adc
repnz
sub
out
mov
lods
sub
xor
ljmp
xor
xor
sbb
cmp
insb
sbb
mov
add
lret
push
idivb
pop
ja
stc
cld
cltd
cmp
ds
dec
push
rclb
xchg
inc
xchg
push
movsb
cmp
pop
mwaitx
pusha
into
or
or
jge
movsl
testb
sahf
aam
jge
jl
mov
add
cmp
clc
sbb
mov
fwait
mov
adc
cs
adc
cmc
inc
shlb
jecxz
pop
add
xchg
cmp
sub
rcrb
mov
int3
insl
and
xchg
xchg
push
cld
dec
add
ljmp
sub
fwait
clc
into
jle
leave
ror
xchg
loop
mov
pop
sarb
push
out
in
loop
jne
in
and
mov
mov
push
out
xchg
test
dec
mov
icebp
int
loopne
adc
xchg
mov
lods
int
pop
mov
or
push
jae
jno
push
les
jl
mov
mulb
jp
cmp
xor
cmp
push
xor
insl
scas
jae
xor
and
lcall
jae
gs
addr16
xchg
data16
ret
mulb
sahf
inc
pop
sarb
jl
scas
cltd
and
jnp
inc
and
ret
xchg
scas
and
cmp
movsb
sub
mov
cmp
jnp
and
inc
pop
and
std
sbb
dec
jl
andl
int
in
jns
imul
lds
cli
push
mov
pop
cmp
shll
adc
mov
test
cmp
lcall
mov
stc
mov
xchg
adc
repz
mov
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
mov
movl
xor
add
cmp
movl
je
pushl
subl
pushl
call
jmp
les
iret
rcr
leave
push
push
in
je
stos
ret
mov
adc
js
inc
ljmp
fistpl
adc
cltd
inc
cmpsl
in
cmp
inc
sarb
mov
or
repz
out
pusha
jmp
jp
mov
push
arpl
out
sub
inc
push
xchg
dec
xchg
scas
mov
incb
dec
dec
outsl
cs
dec
xor
arpl
rolb
test
inc
inc
outsl
push
add
nop
push
lods
sbb
push
add
mov
jp
ret
icebp
push
pusha
sub
xor
dec
jl
repnz
mov
xor
cmp
push
movsl
popl
xchg
repnz
xor
adc
in
mov
adc
sbb
mov
cli
cmpb
jmp
add
gs
jle
sbb
repnz
xor
or
and
inc
mov
mov
das
icebp
fildl
rcrl
xchg
xor
pushf
ds
jl
hlt
shl
cwtl
mov
out
int3
pop
pop
add
in
leave
loop
std
ljmp
imul
popf
cmp
loopne
shrl
add
int3
mov
rcrb
or
pushf
cmp
xchg
add
and
jl
loope
mov
push
mov
int
in
jl
ds
inc
push
mov
sub
mov
leave
xor
inc
sub
in
push
mov
enter
cmpsl
lods
sahf
xor
or
mov
movsl
ret
addr16
aaa
iret
or
js
and
andl
or
int3
mov
iret
lds
in
repz
in
mov
jmp
cmp
nop
cwtl
xchg
inc
das
not
inc
pop
mov
outsb
ds
push
dec
sub
mov
out
push
mov
push
dec
mov
jecxz
outsl
xchg
and
pusha
jl
shll
jg
or
dec
jle
add
sbb
xlat
push
push
cmp
add
sbb
add
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
jmp
lret
cmp
rcr
leave
mov
and
ret
aad
cmp
jle
js
leave
loop
stos
shlb
xchg
xor
fcmovu
shlb
in
or
lret
aaa
pop
mov
std
xchg
sub
mov
cmp
inc
xchg
js
dec
inc
pop
scas
xchg
mov
add
fmul
xchg
mov
imul
xlat
push
and
popf
sub
push
jne
dec
or
pop
adc
lock
addr16
push
or
ljmp
adc
xchg
aad
xchg
icebp
scas
aam
mov
cwtl
shlb
mov
ss
add
or
leave
adcl
sti
or
dec
enter
cmp
or
mov
stos
or
sbbb
inc
loopne
lcall
jl
loope
xchg
mov
xchg
enter
sub
shrl
lock
in
mov
lods
stc
cmp
dec
fucomp
ds
dec
icebp
cmp
dec
in
dec
xchg
xchg
lret
popf
test
cmc
hlt
push
adc
dec
sbb
xor
push
imul
imul
xchg
inc
popa
lods
pop
in
xchg
sub
pop
ret
cltd
ja
sub
pop
sub
sti
mov
add
jo
push
aad
mov
je
xor
push
repnz
jnp
push
pop
mov
add
mov
xor
dec
mov
idivb
aas
fwait
je
or
xor
ffreep
lods
push
aas
adc
lret
adc
std
jge
data16
out
ljmp
fs
pop
std
xchg
pop
push
and
pop
addr16
sbb
andl
mov
jo
xor
adc
adc
out
iret
sub
adc
push
daa
sahf
push
cmpsb
inc
je
fisttpll
sarb
xor
jge
jne
insb
push
mov
jo
lods
push
subl
das
pop
ja
lods
cwtl
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
rcl
xlat
int3
aad
fcmovnu
ss
inc
andl
jg
adc
js
push
xor
push
stos
inc
mov
filds
fnstenv
adc
loop
pop
adc
cli
and
mov
test
pop
sbb
xchg
sub
les
sub
add
jl
test
adcb
pop
sbb
out
out
popa
xchg
push
out
pop
jns
or
or
ss
je
cltd
mov
shll
sub
stc
das
and
push
je
dec
sbb
aas
jl
lods
pop
and
std
pusha
lret
sbb
ja
adc
and
push
test
shrl
int3
arpl
and
adc
mov
dec
sbbb
mov
stc
test
push
pushf
xor
out
mov
ds
out
ret
jno
fildl
lret
bound
cmp
cmpsb
or
cwtl
in
decl
inc
idivb
xchg
add
lock
jne
mov
push
loope
adc
mov
lock
test
sub
dec
xchg
jp
push
popa
mov
into
call
adc
push
fs
jmp
outsl
and
ret
adc
dec
cmp
sbb
aad
inc
xor
mov
sbb
scas
popa
xchg
push
movsb
inc
sub
adc
mov
jae
pop
clc
mov
add
sub
sti
ja
xchg
sti
sbb
imul
inc
cmp
sahf
lret
ljmp
rorl
lea
mov
daa
hlt
lahf
inc
inc
shlb
push
and
loop
mov
push
push
mov
add
notb
lds
xlat
mov
push
xchg
rdtsc
xchg
xchg
jb
jge
push
mov
mov
push
lea
loopne
stc
xchg
push
aad
inc
test
sbb
add
pop
jl
popf
imul
icebp
fcoml
sub
es
xchg
popf
xor
add
add
add
sarl
leave
cmp
pushf
mov
cmc
pusha
fstpt
adc
js
and
add
out
pop
cmp
int3
vphaddudq
je
fwait
notl
sub
fisubl
bound
add
fsubp
xchg
push
insl
nop
rorl
sahf
xlat
movsl
pop
sti
push
aam
cmp
shlb
data16
aas
bound
in
push
cmp
sub
adc
add
sub
frstor
pop
out
xor
adc
jmp
jbe
mov
shlb
hlt
sbb
mov
push
pop
mov
mov
data16
movl
sahf
mov
repnz
test
pop
in
xchg
adc
xor
push
mov
cld
cmp
xor
scas
cmp
mov
out
loopne
sub
adc
dec
enter
cmpsb
loop
aas
adc
adc
dec
xchg
or
mov
mov
adc
jbe
jne
rorl
fs
xchg
or
pop
mov
leave
jnp
mov
push
xchg
or
rcrl
shrl
add
xor
int
ljmp
jl,pn
pop
je
mov
cmp
inc
psrld
jg
aas
pushf
call
xchg
jne
mov
xlat
sti
mov
push
notb
mov
add
loop
shl
mov
mov
push
aaa
mov
or
and
adc
xchg
in
cmpsb
test
rorb
into
lcall
xor
es
inc
sbb
shl
or
sub
fdivrs
jle
pushf
fldenv
test
push
out
fdivr
fists
sub
ret
insl
jl
insb
fisttps
mov
push
insb
fdiv
inc
push
xorl
xchg
pop
jle
or
out
mov
cmp
and
int
pop
push
or
sbb
jns
nop
imul
shrl
xchg
cmpsl
pop
ss
stos
sub
xor
add
ret
aas
fxch
rcr
mov
jbe
out
fdivrs
adc
js
or
xor
data16
xchg
cmp
loopne
aas
mov
xchg
xchg
dec
fdivrl
pusha
push
xor
mov
adc
les
arpl
lret
out
add
popf
jo
ret
inc
rcr
ror
cwtl
push
test
scas
cs
icebp
pushf
arpl
or
stos
lods
frstor
push
push
cld
ljmp
mov
int3
jae
cmp
xor
jnp
ret
lds
mov
mov
jge
sbb
sub
push
add
and
in
lret
jns
mov
rolb
xchg
inc
sbb
out
bnd
and
pushf
adc
je
out
pop
jge
test
jbe
sbb
and
pop
mov
aaa
js
jmp
out
aad
mov
lds
mov
xchg
ret
nop
add
rcll
sbb
aaa
fildll
lahf
mov
add
aas
iret
gs
daa
aaa
cmp
loope
sub
pushf
jmp
xlat
mov
nop
out
jno
add
push
cmp
pop
push
dec
pop
fs
mov
pop
push
imul
mov
sarl
and
mov
dec
arpl
lret
fadd
or
adc
pop
icebp
push
mov
aaa
xor
daa
jnp
pushf
xor
sti
cmp
popa
idiv
movsl
push
mov
push
inc
dec
mov
push
in
mov
aaa
add
cwtl
loopne
pop
mov
dec
cmpsl
cmp
mov
sub
push
jecxz
sub
xorl
fisttpll
push
imul
sbb
dec
pusha
addb
loopne
mov
cmp
sbbb
shll
in
rorb
ret
mov
xor
call
mov
mov
lret
mov
mov
mov
push
cmp
jmp
int
int
fnstcw
in
fists
fidivrs
adc
js
lcall
test
cmc
push
inc
sti
pop
xor
not
cmc
aaa
mov
cmpsl
ljmp
jmp
loop
mov
in
push
sub
repnz
mov
stos
add
jle
inc
insl
pusha
sar
cld
aaa
orl
jo
add
js
pushf
xorl
mov
cmp
in
jecxz
cs
leave
jns
in
pop
repnz
push
mov
mov
jns
dec
lar
and
lea
dec
subb
lods
scas
and
mov
jae
test
stos
call
jo
test
rorl
pop
lcall
les
or
scas
stos
inc
int
fstl
jl
and
and
xor
popa
adc
xor
pop
or
xlat
cmpsl
popa
sub
sbb
ja
out
jge
push
idivb
ds
mov
imul
ds
addr16
cmp
xchg
rol
hlt
inc
aam
mov
sub
jecxz
test
das
and
pusha
cli
push
popa
adc
sbb
cmp
xchg
jg
repnz
daa
loope
fbld
in
cld
xchg
pop
popa
or
imul
jb
mov
lds
rorl
fbld
cmp
js
cli
ret
adc
mov
xchg
mov
pop
pop
rcrl
jmp
int3
mov
jno
jae
jae
add
lret
mov
pushf
popa
ret
iret
fistpll
clc
lahf
leave
imul
outsl
loope
mov
and
imul
dec
dec
jl
insb
sub
mov
jmp
leave
xor
aam
add
mov
dec
xor
push
aam
loop
push
xor
imul
out
dec
cmp
mov
jmp
iret
enter
fcmovnu
xlat
push
shlb
sub
jg
adc
js
xorb
jns
push
std
rclb
pushf
movsl
jl
jbe
daa
les
mov
lahf
ret
xor
or
add
dec
xchg
jp
scas
addl
ficoml
sbb
nop
jle
xchg
mov
mov
pop
lods
stos
aam
fisubrs
movsl
mov
jbe
mov
mov
jge
into
mov
mov
pop
xchg
ljmp
pop
sbb
add
mov
mov
jb
xor
test
bswap
lcall
adc
adc
xchg
sub
inc
mov
inc
xchg
add
and
push
inc
clc
shlb
mov
call
push
jno
xor
cmp
or
or
xor
mov
dec
mov
icebp
fs
xor
paddq
sahf
idivl
cli
jno
incb
shrl
out
in
push
push
imul
and
inc
les
inc
movsb
mov
jmp
jge
inc
nop
add
popf
int3
test
scas
dec
sub
loop
jno
cmpb
stos
or
adcl
push
std
dec
fs
lock
aad
and
mov
test
mov
mov
test
cmp
cmp
int
lahf
or
ds
mov
ds
mov
icebp
adc
or
xor
pop
sbb
fcmovnbe
sub
aaa
sti
loope
shl
sbb
rcrb
test
mov
lods
das
out
jnp
push
lcall
lock
jnp
fiadds
fidivrs
out
mov
imul
ljmp
in
pusha
and
push
and
and
adc
mov
sub
adc
stos
sbb
mov
pop
iret
bound
lods
outsl
sub
dec
cwtl
popa
rcl
push
iret
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
int3
lret
fxch
leave
mov
push
hlt
int
pop
lret
shl
js
jle
js
xchg
call
push
mov
imul
popl
sti
fistl
pop
cs
jae
fldl
dec
imul
jb
jo
in
adc
add
cmp
stos
aad
mov
xlat
movsl
pop
stc
xchg
popa
cmp
sbb
xor
cmp
sahf
inc
pop
lret
push
mov
bound
cli
sbb
ds
sbb
xchg
imul
fcmovb
int3
jmp
pop
pop
pusha
xchg
fyl2xp1
mov
shll
dec
xchg
or
cmc
loop
dec
jecxz
or
je
mov
sbb
stos
pop
not
jnp
fisttps
popf
inc
fnstenv
das
lcall
fwait
ret
lods
or
testl
sbb
inc
outsl
das
repz
mov
aaa
adc
cltd
or
adc
fistps
repz
mov
in
int
mov
push
xchg
push
enter
mov
sub
ss
ja
sbb
leave
outsb
push
das
mov
loopne
inc
test
or
pusha
push
xchg
aad
mov
pop
test
adcl
xchg
adc
cmp
xchg
xor
jg
fisttps
jb
ljmp
cmp
int
sub
pop
outsl
or
mov
mul
icebp
sarl
lret
fstpl
lods
xor
xchg
push
add
mov
sbb
mov
sub
cmc
into
pushf
sub
cmpsl
aam
out
jl
pushf
loop
jmp
clc
push
xor
jg
push
lods
rorl
jno
cmp
push
idivb
cmpsb
inc
es
lods
in
repnz
ffreep
cmp
divb
pop
in
push
jno
jae
stos
cmp
inc
pusha
add
mov
dec
jnp
shr
test
pop
push
mov
mov
pop
xor
add
jmp
int
int
rcl
int
cmp
loop
fsub
jg
adc
js
addr16
aas
mov
cltd
cli
in
adc
cwtl
push
stos
dec
stos
lock
ss
inc
fcmovnu
repz
sub
mov
xchg
mull
or
xchg
mov
std
clc
sti
bound
mov
xchg
dec
pop
cmc
cld
mov
call
xchg
clc
inc
inc
adc
pop
mov
adc
inc
mov
xorl
lds
pop
cmp
ret
mov
ljmp
cld
cwtl
or
sbb
mov
cmp
clc
adc
stc
out
cmp
sahf
dec
test
adc
sahf
xchg
xlat
inc
xchg
sbb
xor
pop
sti
mov
jp
xchg
xor
scas
or
and
outsl
fldt
pop
stos
dec
jg
push
dec
mov
or
stos
inc
jl
and
or
in
in
daa
add
xchg
jp
add
fbstp
inc
insl
bound
loop
aad
test
mov
mov
in
lods
icebp
jbe
imul
push
js
jb
rclb
xor
xchg
stc
jecxz
mov
in
lea
nop
test
mov
ret
fwait
xchg
outsl
lret
out
inc
inc
dec
pop
fcompl
bound
stc
shrl
pusha
inc
add
loopw
iret
lret
testl
stos
push
sti
sbb
daa
mov
push
cwtl
popa
jo
pop
push
dec
fs
fmuls
je
cmp
pop
cwtl
cs
in
notb
in
or
aam
xor
loop
push
inc
loope
sub
jne
xlat
push
ljmp
pop
test
es
or
outsl
into
lods
imul
movsl
aas
sbb
push
mov
pop
inc
cmp
xor
mov
cmp
inc
add
mov
add
pop
repz
insb
and
cmc
jae
fisttpl
cs
dec
add
cmp
rcll
das
pop
sbb
pop
push
sbb
fwait
dec
pop
fcoms
add
cli
nop
gs
and
fbstp
adc
sub
scas
add
add
add
lret
xlat
vpsubusw
lret
xor
sub
js
jle
js
jbe
cmp
cld
mov
push
out
inc
inc
mov
mov
fwait
inc
inc
xchg
mov
xchg
or
xchg
xor
call
xchg
cmc
lods
inc
jecxz
test
and
dec
icebp
mov
push
jmp
adc
push
push
inc
pop
and
int
lock
or
fwait
rcl
sub
subl
inc
ret
stos
roll
test
mov
test
repnz
mov
in
jbe
cmp
in
and
sbb
es
and
movsl
jmp
dec
or
aam
in
imul
out
inc
adc
sub
rcrl
add
loope
sub
icebp
ret
push
lret
mov
push
mov
enter
fwait
mov
imul
add
out
cmp
adc
out
or
mov
jbe
lock
cmp
dec
cmp
scas
cmp
mov
push
jnp
jmp
imul
push
adc
fldt
add
fisttpll
xchg
mov
in
xor
int3
jno
cmp
loope
lods
loopne
enter
sti
adc
xchg
xor
jle
cltd
sbb
add
and
aad
or
cmp
in
loop
dec
lahf
push
enter
inc
in
icebp
lret
out
rcrb
insl
cmp
ret
mov
repz
lret
fstl
mov
dec
mov
mov
jne
push
and
fsubrl
push
mov
mull
in
and
mov
jne
mov
mov
xchg
pop
pop
xor
jmp
inc
cmp
xor
js
mov
or
add
cmp
mov
jmp
mov
sub
add
pop
dec
ret
inc
fs
cld
xchg
push
and
out
xlat
add
clc
xorb
adc
shr
xor
add
enter
iret
rcl
mov
cmpsb
mov
mov
jg
adc
js
fisubrs
out
xor
push
inc
mov
outsl
pop
in
jg
mov
xor
lret
xlat
mov
sti
in
sbb
sbb
jmp
sub
fmull
shll
push
rolb
jg
adc
dec
or
and
inc
movsb
push
pop
xchg
sti
lcall
sbb
fs
insl
jp
daa
icebp
adc
fdivrl
or
mov
ljmp
ljmp
into
xor
ficoms
shrb
inc
mov
mull
xlat
popf
bound
stc
test
push
outsl
enter
adc
sub
rcl
or
sbb
cmp
inc
and
jne
insl
cmpl
call
pop
arpl
test
add
cmc
pop
adc
fbstp
push
test
cmp
mov
jecxz
sub
adc
ret
sbb
xor
je
les
jne
incl
insb
mov
push
adc
add
enter
jno
int3
fs
jmp
jge
push
in
lcall
addl
xor
setns
push
cmp
or
repz
int
and
push
cwtl
data16
mov
lret
add
sub
cmc
pop
shr
ds
jbe
sbb
fnsave
mov
outsb
jge
mov
pop
notl
aaa
mov
inc
sbb
pop
jb
jo
in
mov
sub
xchg
mov
mov
jl
mov
xor
dec
aam
inc
sarl
lods
aas
mov
pop
testb
btc
or
push
pop
movsl
stos
cmp
imul
or
adc
fmul
fdivr
add
mov
dec
or
xor
add
into
leave
leave
rcr
fldcw
stc
push
lock
mov
jle
js
mov
mov
pop
pop
xchg
clc
jmp
xor
cmp
xor
cmp
jmp
xor
sbb
sub
adc
pop
pop
pusha
mov
jle
mov
cmp
xchg
jmp
incb
loope
movsl
mov
nop
dec
jbe
pop
incb
in
xchg
shlb
outsl
mov
cli
jno
sbb
jb
popa
sub
push
push
rcrb
repz
xor
lea
stos
mov
gs
nop
lock
mov
cmp
data16
nop
lods
ret
mov
mov
cmp
scas
fisubs
mov
pusha
sub
movsb
mov
les
inc
mov
push
insb
outsl
imul
push
test
gs
push
and
pop
dec
pop
cmp
and
mov
cmp
stos
aam
lock
outsl
cld
sbb
sbb
push
pop
pop
test
add
mov
or
push
enter
push
inc
sti
add
cmpsb
jg
adc
lods
add
jle
fistps
jo
mov
data16
adc
inc
out
cltd
jns
cmp
pop
xchg
cmpsb
mov
in
mov
sub
sbb
loope
rolb
xlat
iret
ljmp
divb
or
inc
mov
imul
lret
lods
cltd
sub
cmc
test
std
push
ss
pusha
cmc
jo
inc
add
js
lds
pop
enter
out
cmp
mov
xor
ret
or
test
cmpsb
frstor
pop
mov
sub
scas
ret
shlb
out
inc
js
lock
out
and
das
cli
das
sbb
dec
sbb
inc
xchg
pop
jmp
bound
icebp
vmwrite
repnz
test
mov
aas
bound
cmc
push
push
out
das
inc
lret
test
and
jge
pop
in
in
insl
lea
cmp
jne
mov
jmp
mov
mov
jmp
mov
xlat
movsb
inc
inc
jo
xchg
jle
js
push
mov
and
sub
and
lock
lcall
dec
mov
add
mov
xor
xor
pushf
sub
lcall
fs
sbb
cmpsl
cmpsb
test
and
pop
or
push
in
popa
add
pop
pusha
add
inc
jne
inc
sbb
or
add
cmp
inc
popf
xchg
ds
ror
mov
mov
jb
movsb
sbb
sarb
aam
insb
push
mov
mov
int
aaa
fildll
cmpsb
scas
and
mov
xchg
jl
jnp
test
insl
jnp
lahf
pop
js
std
negb
xchg
sub
call
xchg
sahf
jns
sbb
add
and
push
and
jg
rcrl
dec
add
shl
test
pop
int3
fisubrs
scas
out
jbe
scas
int3
jnp
popa
adc
mov
daa
push
les
lock
xor
loop
test
xchg
jne
jp
int
fimull
fwait
mov
loop
push
xor
mov
shll
cli
shr
pusha
inc
dec
es
mov
out
jp
lret
add
scas
stos
ss
fst
xchg
add
jae
mov
pop
sub
mov
aas
add
out
xor
hlt
adc
mov
out
sti
out
push
mov
arpl
jo
movsl
cmpsl
je
mov
jg
hlt
leave
clc
sub
xchg
arpl
xor
mov
aam
push
xchg
cmp
stos
daa
jo
push
sbb
add
in
or
loop
dec
ficomps
push
dec
cltd
rcll
sub
sti
adc
dec
and
stos
or
inc
in
ds
es
jnp
movsl
loopne
lea
jns
repnz
sbb
dec
and
xor
add
jmp
cmp
rol
jb
dec
pop
mov
jge
push
out
jg
adc
js
add
ret
pop
mulb
mov
mov
leave
jge
push
fnstcw
dec
bts
loop
ja
adc
xor
outsb
in
adc
subb
mulb
insb
jl
ds
ljmp
addr16
mov
pop
lret
add
insl
mov
cmp
cld
adc
mov
jl
or
pop
leave
xchg
roll
jns
mov
dec
sti
pop
arpl
jl
push
lock
inc
andl
ds
mov
lods
xor
xchg
jns
lcall
addr16
call
or
jl
adc
and
loope
or
and
test
das
inc
mov
in
mov
jb
call
push
xor
sub
adc
jb
in
xchg
push
imul
mov
mov
push
inc
std
inc
sahf
icebp
xchg
mov
adc
stos
shll
cmp
cltd
inc
xchg
sbb
pop
bound
je
rcl
mov
shrl
repz
and
cmp
mov
mov
lret
pusha
test
or
xchg
cmova
cs
mov
cld
sarb
incb
mov
cpuid
into
das
jecxz
repnz
aaa
adc
rcrl
cmp
or
out
and
cmp
cwtl
aas
mov
in
jmp
inc
lods
mov
fstps
inc
jmp
sub
ds
xchg
xchg
cmp
mov
fsubrp
out
mov
and
fcmovnbe
arpl
aad
jg
sbb
iret
sbb
call
xchg
mov
call
and
in
mov
into
testb
jbe
arpl
jb
loop
mov
lods
repz
push
stos
mov
in
jg
inc
test
dec
sbb
jb
shrb
ss
mov
jmp
rol
enter
lret
pop
jp
lcall
adc
js
js
stos
dec
inc
or
mov
lret
repnz
mov
jno
loop
and
popf
arpl
loopne
pop
enter
add
push
sbb
add
push
sbb
stos
stos
inc
shll
ds
test
cmp
add
or
pusha
and
gs
dec
cli
stos
xor
jg
and
mov
or
arpl
add
xchg
jecxz
pop
sbb
push
inc
test
test
cwtl
jmp
loope
fld
movb
push
daa
cmp
cmpsl
inc
out
lahf
insb
or
jbe
fdivrs
push
sbb
loope
dec
lret
stos
push
jp
addr16
adc
in
testb
jbe
aad
push
cli
xchg
call
daa
js
repz
cmpsl
inc
mov
rcrb
test
mov
and
xchg
mov
sbb
arpl
aaa
push
cmpsb
cmp
pop
push
enter
xchg
hlt
fidivrs
pop
out
lahf
and
mov
push
ljmp
icebp
call
fxtract
mov
data16
mov
jb
add
xor
fistl
jbe
outsl
es
mov
add
clc
inc
fs
adc
aam
mov
stc
xor
xchg
je
pop
or
or
lret
rcrl
fwait
cmpb
push
mov
ret
and
aad
jae
and
cs
data16
rcr
or
jge
scas
inc
mov
dec
jne
sub
cmp
es
nop
shll
stc
out
dec
iret
lods
xchg
xor
sbb
ss
mov
cmp
sbb
ret
lea
and
scas
jae
adc
fld
sub
nop
cs
out
negl
cmp
clc
mov
cmp
xor
mov
test
push
lods
inc
in
outsb
sub
aas
enter
loopne
in
popf
mov
test
sbb
jl
pop
inc
adc
fisttpl
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
mov
iret
leave
rcr
aad
mov
adc
add
jg
adc
js
es
pop
adc
or
push
daa
clc
jg
test
int
lret
int3
std
jmp
test
cwtl
xchg
inc
lret
mov
mov
sbb
sbb
iret
sbb
mov
fisttpl
out
out
bswap
push
pop
mov
andl
push
dec
cmpsl
jo
lods
andb
push
mov
add
sbb
cmp
lock
dec
rcrb
call
aad
push
sbb
push
sub
pop
jnp
pop
push
sub
imul
mov
movsl
pop
mov
pushf
pop
xorb
pop
add
cmpsl
cltd
xor
mov
and
dec
xchg
jecxz
call
lret
icebp
mov
repz
pop
in
push
or
out
dec
xchg
jecxz
mov
xorl
xchg
cwtl
aas
fdivs
fidivl
adc
pop
fdivs
fadd
rcll
push
mov
xchg
xchg
add
xlat
daa
repz
xlat
fs
insb
je
cmc
in
mov
ljmp
jae
hlt
test
shlb
cmp
insl
repz
mov
loopne
xchg
or
out
test
cmp
mov
pop
push
fmul
dec
push
adc
and
das
icebp
hlt
mov
lock
cltd
movsl
test
sub
inc
push
outsb
jg
aam
enter
shl
in
xor
repz
movl
cld
xchg
jecxz
in
popf
gs
or
push
outsl
sub
out
inc
jmp
inc
repnz
pop
test
xchg
aam
and
out
dec
imul
repz
lcall
sahf
cmc
or
xchg
xor
divb
std
push
out
jle
adc
outsl
mov
in
outsb
imul
fisubrl
es
add
mov
lods
mov
inc
cmpsb
jl
arpl
inc
dec
pop
jmp
gs
inc
add
dec
xor
add
pop
mov
pop
jmp
rcl
ret
ror
aad
andb
pop
aas
mov
idivl
adc
js
add
mov
jp
jo
movsl
jo
test
and
xchg
ffree
mov
test
in
ja
hlt
add
pop
cwtl
lods
out
xor
cwtl
pop
fstl
sub
stc
mov
sbb
xor
and
and
mov
xor
imul
push
mov
int
in
clc
push
jl
jb
or
repnz
lock
loope
fimull
and
bound
imul
jmp
outsl
mov
insb
rcll
mov
repz
cld
out
or
dec
mov
mov
cmp
adc
lret
jge
lahf
mov
cmp
jg
xorb
mov
iret
inc
jp
rcll
pop
pop
mov
xchg
xor
fcomip
rorl
inc
cwtl
rorl
sub
daa
sahf
jbe
in
mov
adc
loop
xor
notb
out
subb
imul
xchg
lret
iret
aam
or
inc
ljmp
push
xlat
sqrtps
sub
jbe
mov
ss
scas
or
sbb
inc
inc
or
out
stos
xchg
out
pop
lahf
repz
xor
xor
cmp
xor
pop
xchg
ss
in
popf
stos
addl
repz
test
pushf
xor
insb
hlt
out
jl
stos
add
andb
cmp
dec
pushf
push
movsb
mov
int
mov
cmp
sbb
adc
mov
ret
lods
cmp
mov
stos
add
das
cmp
repz
rorl
scas
bound
sub
mov
rcrl
fildll
cmc
repnz
repnz
xlat
add
cmpsl
jae
adc
push
fistl
icebp
push
jnp
dec
ds
sub
imul
cmpl
clc
in
sub
pop
into
out
add
and
xor
add
into
iret
into
ror
aad
aad
mov
repz
xor
jg
adc
js
jg
ja
stos
push
sahf
lret
push
out
stos
push
fidivs
sbb
mov
shlb
xlat
fcomps
or
jne
ss
sub
mov
lods
lock
xchg
mov
ss
roll
mov
sub
js
jo
outsb
arpl
lret
mov
lahf
lcall
mov
jge
adc
or
pop
cmpsl
push
push
xchg
jg
mov
stos
xchg
int
xchg
mov
dec
icebp
jae
or
iret
push
dec
push
testl
daa
push
jecxz
loop
dec
aas
ljmp
ljmp
jge
jnp
andb
mov
add
out
in
mov
fcoml
rorl
mov
movsb
sub
jno
test
or
fisubl
inc
or
scas
mov
js
stc
or
push
and
aam
je
stos
out
loopne
or
adc
popf
enter
in
push
mov
inc
adc
dec
dec
stos
scas
repz
addl
xor
outsb
xchg
or
push
in
lock
inc
mov
cltd
repz
add
inc
pop
pop
add
jg
mov
xor
fisttpl
inc
mov
leave
jb
mov
stos
sub
adc
and
push
bound
outsl
mov
cmp
aam
lret
xchg
fidivl
mov
gs
inc
es
pop
and
push
les
push
ds
in
and
ss
lahf
rorb
sbb
out
pop
cmp
xor
pusha
or
or
js
loopne
scas
cmp
addb
cmp
inc
out
mov
cltd
movsl
push
cwtl
movsl
stos
wrmsr
push
mov
sbb
test
dec
cmp
rcrb
sbb
add
and
leave
ret
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
add
add
das
and
add
add
pop
add
add
add
add
and
pop
aam
add
add
add
add
add
add
add
add
push
aam
add
add
xchg
inc
add
imul
add
add
xor
jp
jp
outsb
je
je
jo
aas
dec
imul
gs
jb
imul
inc
inc
dec
push
inc
dec
push
inc
inc
cmp
add
add
aad
add
fildl
add
rolb
add
aad
add
rolb
add
add
add
add
add
loope
add
xlat
add
ss
add
adc
add
inc
jmp
add
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
add
jns
je
insl
add
fwait
add
jo
imul
je
insb
add
ljmp
jo
add
je
ja
jae
add
add
jb
outsl
insb
insb
add
add
imul
add
outsl
ja
outsl
ja
jb
add
add
imul
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
xchg
add
popa
insb
outsb
jne
add
add
jb
outsl
imul
sbb
ja
jae
popa
je
add
outsl
ja
add
fwait
add
jo
pop
arpl
insl
outsl
fs
loope
jae
arpl
data16
fildl
pop
popa
insl
jae
pop
gs
je
add
imul
add
je
push
add
popa
insb
je
insl
add
data16
add
or
gs
add
sub
arpl
arpl
add
add
outsb
add
sahf
add
jae
bound
gs
add
add
ja
arpl
data16
js
imul
ja
jae
arpl
add
jo
gs
push
add
arpl
inc
imul
pop
gs
je
sbb
jae
jo
imul
pop
arpl
imul
gs
jb
push
je
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
pop
add
gs
jb
jb
add
and
arpl
jo
add
std
add
jb
outsl
jne
add
add
jb
outsl
jb
add
push
inc
push
push
cs
insb
add
inc
add
gs
outsb
push
gs
js
gs
imul
gs
ljmp
insb
gs
je
jb
bound
gs
js
add
pop
add
outsb
fs
imul
outsb
addr16
outsl
je
imul
outsl
outsb
push
add
mov
insb
dec
popa
insl
gs
imul
add
push
popa
insb
imul
add
inc
imul
inc
push
dec
outsl
je
imul
outsl
outsb
add
cmp
gs
push
inc
js
arpl
imul
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
add
outsb
fs
gs
inc
imul
popa
imul
je
jo
gs
bound
arpl
js
add
add
gs
popa
insl
gs
imul
insb
gs
je
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
bound
inc
jb
add
or
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
js
push
gs
fs
imul
gs
push
dec
outsb
outsw
add
dec
popa
imul
outsw
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
push
add
fs
imul
js
add
outsl
add
je
imul
popa
je
add
incl
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
rolb
je
arpl
push
add
repnz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
cmp
dec
jo
outsb
inc
imul
outsb
addr16
add
stc
add
inc
popa
fs
je
imul
add
add
gs
je
inc
jbe
outsb
je
add
insl
add
outsb
insb
outsl
arpl
imul
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
pop
add
insb
jae
gs
popa
insb
jne
add
jo
jb
popa
je
add
dec
add
insb
gs
jnp
inc
outsl
insb
fs
je
imul
push
gs
gs
outsl
outsb
imul
imul
add
imul
in
add
gs
je
push
push
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
imul
gs
arpl
add
out
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
faddl
push
gs
jb
push
push
add
gs
dec
outsl
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
inc
add
je
je
jb
jne
dec
outsb
outsw
push
add
add
push
popa
insb
imul
addr16
jb
jne
add
in
push
gs
outsl
insl
insl
push
imul
add
push
jns
je
insl
push
imul
insb
gs
imul
dec
outsl
jbe
inc
imul
add
jae
jb
insl
jo
inc
add
inc
gs
je
imul
inc
js
add
fldl
inc
jb
popa
je
dec
jne
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jno
inc
gs
dec
push
xor
mov
inc
push
je
dec
push
add
fldl
push
gs
dec
inc
imul
jne
inc
outsl
outsb
je
popa
insl
imul
add
gs
je
dec
inc
push
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
push
arpl
outsb
add
inc
gs
popa
jo
outsl
fs
lahf
add
gs
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
gs
add
je
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
inc
imul
bound
imul
inc
js
push
gs
dec
jne
push
add
push
gs
dec
jne
push
add
dec
add
je
outsl
outsb
je
popa
je
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
insb
imul
inc
gs
gs
inc
popa
arpl
add
jnp
inc
gs
gs
inc
insb
imul
inc
jb
popa
je
inc
jb
jae
dec
outsb
imul
add
je
imul
add
gs
popa
jns
jne
add
popa
je
push
outsl
insb
imul
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
popa
je
inc
imul
imul
xchg
inc
jb
popa
je
inc
imul
add
gs
je
push
outsb
add
popa
je
inc
dec
inc
push
arpl
outsb
add
addl
imul
add
inc
gs
gs
jb
jae
push
popa
insb
gs
gs
outsb
fs
add
jo
add
push
gs
dec
gs
imul
push
gs
insb
imul
je
add
lar
jb
popa
insb
imul
arpl
add
je
gs
inc
outsl
insb
outsl
jb
add
inc
outsl
arpl
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
add
je
dec
inc
imul
imul
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
bound
je
jb
arpl
add
add
jae
jp
push
popa
insb
gs
add
push
imul
add
add
arpl
gs
insb
imul
xchg
add
gs
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
popa
je
inc
inc
push
add
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
mov
inc
gs
imul
dec
jb
inc
js
add
dec
xor
cs
insb
add
jb
jns
popa
jb
je
add
ja
outsl
arpl
push
arpl
add
fs
insl
popa
addr16
add
mov
je
gs
popa
add
gs
jb
jns
outsb
jne
stos
add
ja
outsb
imul
arpl
mov
inc
gs
insb
addr16
jb
arpl
add
inc
arpl
popa
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
data16
je
imul
add
je
imul
js
inc
add
and
fs
outsb
jo
je
mov
imul
outsl
ja
jo
popa
je
add
mov
push
popa
imul
jne
dec
fs
add
dec
add
je
outsb
jne
sub
inc
gs
outsb
jne
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
jae
popa
addr16
outsl
js
js
add
imul
je
jo
popa
je
push
outsb
add
mov
dec
outsl
popa
fs
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
insb
add
je
imul
outsb
addr16
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
arpl
popa
imul
outsb
add
addb
outsb
data16
popa
je
push
arpl
add
arpl
outsl
jo
jo
outsb
jne
add
gs
jae
inc
inc
add
add
outsb
fs
gs
popa
addr16
add
fildl
dec
outsl
jbe
push
imul
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
stos
add
fs
jne
jae
jb
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
xor
push
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
jb
popa
je
push
imul
push
add
outsl
outsb
imul
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
data16
je
arpl
scas
add
fs
jne
jae
jb
add
add
push
jae
push
imul
arpl
add
js
inc
gs
imul
js
push
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
outsl
ja
jb
insl
push
outsl
imul
outsb
jae
jb
dec
outsb
jne
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
add
je
outsb
jne
je
insl
inc
outsl
jne
je
add
gs
arpl
push
add
add
push
imul
popa
jae
inc
js
add
ret
add
fs
imul
add
outsl
jae
inc
gs
je
jo
add
imul
jae
popa
addr16
add
out
dec
jo
outsb
inc
gs
je
jo
add
and
push
arpl
insb
insb
push
imul
add
mov
imul
xor
jb
outsl
dec
gs
push
add
xor
push
gs
popa
jb
je
outsl
jae
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
imul
jae
addr16
add
push
push
imul
add
gs
je
inc
imul
jb
insl
push
add
je
push
gs
imul
js
push
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
cmc
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
imul
outsb
addr16
add
fldl
inc
jno
popa
insb
push
arpl
add
je
arpl
insb
insb
push
outsl
jae
add
imul
imul
add
insb
insb
push
imul
dec
outsb
push
outsb
fs
gs
popa
addr16
js
pop
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
add
inc
outsl
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
push
imul
outsl
arpl
add
bound
jbe
outsb
je
faddl
inc
outsb
jne
push
imul
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
cwtl
add
je
outsl
jns
imul
add
popa
jb
jb
jbe
add
add
outsb
fs
gs
popa
addr16
add
mov
inc
gs
jb
insl
gs
jb
arpl
or
push
imul
je
gs
add
add
je
jne
jae
jb
push
inc
gs
imul
add
inc
insb
addr16
je
insl
dec
outsb
je
sbb
arpl
gs
imul
add
add
je
outsb
jne
je
insl
dec
inc
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
arpl
outsl
push
push
outsb
outsl
ja
add
inc
push
outsb
jne
popa
imul
add
add
jo
imul
arpl
add
dec
outsb
push
arpl
cltd
add
inc
insb
addr16
jne
je
outsb
inc
push
add
mov
jb
outsb
je
inc
add
inc
gs
jns
je
insl
dec
outsb
jne
add
push
imul
popa
jae
inc
js
add
pusha
add
gs
je
dec
outsb
jne
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
mov
fs
outsb
jne
add
inc
gs
outsl
jo
imul
dec
add
je
jb
jo
add
cmp
push
gs
jne
jae
jb
outsl
jae
add
add
jo
imul
gs
js
add
jp
push
push
jb
je
add
imul
popa
jae
push
add
scas
add
fs
arpl
inc
add
add
je
popa
jb
je
outsl
jae
jnp
push
push
jb
outsl
jb
add
inc
gs
jne
dec
outsb
jne
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
push
push
inc
push
xor
cs
insb
add
push
dec
inc
dec
dec
xor
cs
insb
add
push
dec
push
jne
jns
push
push
inc
insb
inc
inc
push
in
inc
add
in
inc
add
or
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
jae
and
dec
push
push
pop
push
cmp
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
insl
dec
and
dec
push
bound
arpl
dec
bound
dec
jae
cmp
dec
xor
dec
push
jb
jae
orl
nop
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
sbbb
setae
jl
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
popa
dec
xor
dec
xor
dec
ds
xor
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
xor
dec
xor
dec
ds
inc
dec
cmp
dec
cmp
add
add
adc
jl
jge
aas
dec
add
outsb
jmp
inc
add
inc
add
in
inc
add
in
inc
add
inc
add
inc
add
in
inc
add
test
pushf
clc
data16
add
inc
add
inc
add
inc
add
inc
add
jmp
inc
add
in
inc
add
test
jb
inc
add
or
inc
add
fnsave
inc
add
inc
inc
mov
jne
mov
incb
mov
jmp
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
and
pushf
clc
sub
add
jmp
inc
add
imul
pushf
clc
popf
jmp
add
pop
jmp
add
add
inc
add
inc
add
add
add
inc
add
add
dec
add
dec
add
add
add
add
inc
add
add
dec
add
inc
add
add
dec
add
add
add
add
jmp
add
dec
pop
dec
inc
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
pop
dec
add
dec
xor
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
inc
dec
dec
dec
push
dec
inc
dec
pop
dec
xor
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
xlat
lds
ret
fidivs
into
mulb
push
sbb
jno
add
add
mov
das
shlb
rolb
inc
push
outsl
push
push
jmp
add
in
adc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
je
jns
popa
push
push
push
dec
imul
popa
jp
arpl
push
imul
jp
jb
outsl
push
inc
inc
push
imul
push
jb
add
push
insb
pop
ja
je
bound
add
push
dec
je
push
jne
popa
jns
dec
push
dec
dec
pop
pop
dec
push
add
adc
push
jge
add
add
cwtl
movsb
out
xchg
out
and
rcrl
ds
stos
rep
inc
into
xchg
xchg
inc
rolb
mov
mov
pop
or
std
or
insb
sub
sub
stos
or
negb
jns
aaa
mov
add
inc
fisttps
dec
mov
push
push
xlat
push
cli
cmc
push
inc
rep
adc
test
add
ret
int
sub
into
mov
std
into
jecxz
out
jo
or
mov
and
das
lret
jne
mov
aam
les
adc
out
scas
sbb
leave
data16
xchg
loope
jl
pop
push
add
in
pop
aas
popf
push
sbbl
mov
test
cmp
adc
push
mov
test
int3
repnz
xor
inc
sti
inc
aaa
adc
fs
mov
sub
jae
leave
in
popa
or
xor
xchg
mov
std
loopne
pop
cmp
push
xor
or
inc
inc
and
into
jge
jge
mov
in
std
xlat
ret
ret
ficompl
push
sub
out
xor
gs
stos
imul
push
in
js
adc
add
into
insb
cwtl
jnp
and
mov
cwtl
sbb
push
sub
jo
lcall
iret
jns
adc
stos
and
xor
out
push
testb
mov
lret
popa
popa
mov
jmp
test
lret
jns
xor
rcrl
pop
push
sub
adcb
stos
push
adc
jp
ss
add
cmp
push
mov
sub
jno
push
fistl
push
ficoms
sbb
in
fnstenv
ljmp
push
lea
mov
ret
or
repz
cmp
das
push
ret
dec
fs
dec
mov
lods
lret
in
add
push
sbb
inc
pop
lock
mov
stos
js
mov
cmovo
es
push
mov
data16
mov
jnp
nop
mov
mov
int3
clc
inc
sbb
xor
rorl
pop
jbe
insl
push
dec
pusha
jbe
sar
jmp
les
hlt
or
out
mov
repz
mov
je
ja
jb
jle
mov
stos
xchg
xor
insl
sub
hlt
jae
dec
ja
add
outsl
lds
mov
test
inc
cmp
loop
xchg
nop
arpl
leave
mov
daa
inc
imul
mov
cmp
aam
in
test
jmp
cmc
cmp
and
inc
icebp
jle
inc
mov
xlat
adc
stos
or
pop
jno
inc
mov
jg
fcomp
pusha
sbb
and
jo
adc
stc
xchg
ss
outsb
sbb
sub
xchg
insl
sub
loope
xlat
push
pop
jle
sbb
fidivs
pop
fcoms
ret
pushf
orl
loopne
xor
aas
adc
roll
std
sub
push
push
pushf
sti
movl
xor
adc
out
fwait
movl
inc
jle
shrl
push
shlb
xor
push
sbb
cs
mov
push
enter
or
pop
inc
fldenv
push
mov
cltd
pop
ja
cmp
adcl
push
mov
in
fs
jp
sub
stc
outsl
mov
negb
cmp
icebp
and
and
xchg
adc
pop
sub
or
add
push
xchg
divl
cmp
pop
pop
and
or
mov
fildll
xor
jmp
rorb
or
cmpb
xchg
rcrb
pop
outsb
jmp
and
les
xor
cmp
pusha
aam
out
rcr
ret
repnz
dec
push
and
fs
outsb
ljmp
lahf
test
leave
sti
dec
insb
addr16
ds
test
xchg
ret
sub
in
or
ss
pop
cmp
fsts
mov
jbe
loopne
inc
daa
scas
dec
out
sarl
jmp
sbbl
cmp
mov
cmc
call
add
jae
cmp
or
in
dec
mov
lods
xor
dec
jno
dec
inc
xchg
sbb
cwtl
jb
xchg
xor
adc
out
js
inc
pop
push
and
fs
stos
xor
fucom
stos
mov
add
cld
pop
data16
out
cltd
incl
ror
pop
int
aad
fcomp
sub
pop
popf
fldt
mov
repz
pop
mov
enter
adc
dec
es
out
cltd
testl
in
sbbl
jbe
lods
push
pop
jne
mov
or
insb
stos
std
inc
sbb
jbe
add
xor
xchg
insl
aad
push
stc
lds
mov
insb
pop
out
loope
add
jne
add
or
sbb
lods
add
das
lcall
mov
daa
cmp
add
fmuls
std
arpl
and
push
in
add
jno
push
sbb
enter
test
pop
gs
sbb
pop
enter
dec
aad
jg
xor
fs
lock
jmp
jg
js
lods
jl
mov
pop
dec
mov
into
imul
ss
jne
inc
ss
jne
ficoms
aas
mov
dec
jle
popa
je
clc
xchg
test
in
out
jae
std
add
lahf
das
sub
ds
icebp
mov
adc
lds
test
test
std
cmp
jno
push
lods
aam
or
push
dec
dec
inc
pop
inc
pop
pop
shrb
cmpsb
into
in
lret
addl
jnp
add
mov
dec
pop
xlat
and
mov
xchg
xlat
and
loope
mov
sti
sub
pushf
fiaddl
roll
scas
mov
sbb
and
cwtl
mov
adc
mov
or
out
sbb
stos
jge
negl
dec
stos
push
ret
cmpsl
cltd
jns
dec
test
pop
sub
pop
inc
adc
fwait
hlt
or
ret
cwtl
je
bound
jae
mov
pop
aam
mov
or
mov
decb
adc
pop
repz
shl
and
inc
mov
icebp
imul
push
mov
xor
or
cmp
xor
sub
stos
movsb
add
mov
sahf
pop
mov
subb
scas
inc
inc
xchg
in
mov
inc
add
out
mov
subb
leave
adc
mov
mov
inc
iret
mov
lea
outsl
nop
cmp
mov
jp
rorl
pusha
fsubrp
sarb
jmp
pop
outsl
ljmp
mov
in
sbbb
mov
cmp
pop
scas
mov
leave
dec
sbb
pusha
mov
ja
jbe
mov
or
es
sub
pop
cmp
les
xor
fisttps
inc
add
test
jp
stos
rclb
mov
adc
pop
ret
loop
out
xor
movsl
inc
hlt
sti
cmp
add
fisubl
fmuls
cmpsb
sub
or
arpl
cwtl
and
outsb
mov
ret
in
arpl
jge
fnstsw
mov
dec
mov
dec
adc
mov
push
outsb
sbb
int
outsb
and
sahf
shl
cli
aas
repnz
mov
jne
insl
adc
ficompl
andl
xchg
cmp
dec
ficomps
aaa
iret
insb
sbb
jg
pop
ds
jo
cmpsb
cs
jmp
out
subb
icebp
and
lock
gs
stos
mov
scas
mov
pop
dec
dec
cltd
test
cs
dec
addr16
cmp
in
scas
push
mov
je
pop
xor
shlb
lret
lret
push
cmc
push
out
mov
dec
inc
pop
cmp
and
dec
cmc
and
test
mov
mov
or
xchg
jno
mov
sti
cltd
nop
dec
stc
xor
je
pop
dec
mov
mov
sti
inc
in
push
push
mov
jp
push
loop
jno
cmp
xchg
mov
cwtl
hlt
dec
mov
fcompl
mov
loop
add
std
sub
sub
inc
mov
jno
in
idiv
leave
pop
mov
or
in
mov
push
mov
adc
jbe
cmp
push
mov
hlt
sbb
pop
jbe
lds
jg
inc
mov
jmp
sbb
dec
movsl
mov
jne
movsb
int3
pushf
stos
nop
push
lods
arpl
in
fs
mov
xchg
lds
and
inc
jbe
pusha
stos
and
mov
cmp
out
test
pushf
addr16
push
data16
inc
lock
sti
push
repz
sbb
ljmp
mov
cmp
in
test
imul
imul
inc
mov
jle
aad
stc
sub
in
pop
mov
pushf
out
and
ret
xchg
sbb
push
shll
aam
mov
nop
inc
push
mov
inc
jmp
sbb
cmp
out
fcomi
cltd
push
scas
mov
cmp
xchg
je
rcr
enter
sub
fiadds
inc
repz
sahf
mov
push
pop
pop
inc
fcoms
int
mov
sub
iret
mov
xchg
roll
cltd
ja
std
xchg
repnz
les
lret
faddp
pop
push
xor
std
or
and
pop
insb
push
insl
out
xor
cmpl
ja
sarb
cltd
jge
ja
or
loope
xlat
pop
inc
sti
lret
leave
cs
dec
into
in
pop
mov
push
xor
out
aad
inc
xchg
jle
dec
ret
test
mov
out
jb
psadbw
enter
inc
enter
scas
and
mov
add
out
rcr
lcall
jge
int3
sub
cmpsb
rcr
mov
call
mov
call
jno
jmp
adc
sbb
mov
fsubrs
push
jp
cmp
ja
shll
fstps
pushf
popf
dec
repz
xor
inc
jge
addb
cs
and
sbb
lock
or
sbb
js
pusha
mov
cmovg
js
xor
ret
cmp
arpl
je
jge
xor
or
dec
pop
enter
dec
fs
lods
addb
adc
xchg
shrb
movsb
xchg
mov
push
mov
mov
jns
jbe
sub
pop
sarb
es
rcll
or
and
in
lret
loopne
mov
dec
pop
xor
imul
lahf
addl
xchg
mov
pop
mov
push
xchg
cmp
jp
mov
push
lods
jbe
scas
shlb
roll
enter
mov
xor
iret
cltd
mov
out
loop
into
or
or
pushf
out
xchg
and
iret
jne
aaa
in
mov
push
add
or
sbb
sub
mov
cmc
insl
sti
mov
nop
lret
in
jb
mov
shrb
loop
jg
mov
inc
and
cmp
aas
dec
xor
sti
xor
sbb
add
or
ret
mov
xor
mov
jb
push
bound
imul
push
aaa
or
je
pop
pop
repnz
push
cmp
loopne
lret
fisttpll
push
or
mull
add
mov
hlt
ret
jl
inc
stos
push
jno
pop
adc
enter
and
aaa
fwait
mov
add
dec
push
pop
push
pop
dec
mov
dec
push
mulb
add
jnp
add
sub
dec
orb
fistpl
or
repz
or
outsl
push
add
cli
in
out
subl
mov
pop
out
mov
mov
imul
ret
rolb
push
push
fs
outsl
sub
fsubrs
jp
insl
inc
dec
fucomp
cmp
dec
flds
mov
mov
adcl
inc
add
in
fldl
mov
shrb
imul
in
mov
sbb
xor
sti
xchg
ss
lret
roll
test
xchg
mov
inc
repnz
pop
and
popl
mov
out
daa
add
mov
mov
add
mov
faddl
cld
dec
daa
adc
es
mov
fcomps
pushf
xor
or
fwait
mov
rclb
xchg
pop
mov
fwait
lea
mov
or
or
inc
repz
out
xlat
insl
xor
inc
ljmp
inc
cli
dec
pop
mov
dec
or
flds
dec
imul
mov
adc
mov
cmc
pop
adc
sub
aas
pop
lock
stos
out
or
arpl
cmp
and
mov
dec
test
inc
mov
xchg
in
or
xor
mov
das
mov
mov
and
roll
imull
pop
jle
lods
daa
mov
push
cmp
repz
mov
and
pop
inc
inc
xor
in
test
xor
cmp
dec
lods
ror
pop
shll
scas
js
or
and
push
xor
cmp
fxch
push
jbe
cmp
test
fwait
xor
sbb
rorl
cwtl
dec
add
fmull
sub
mov
iret
and
iret
pop
cmpsb
add
scas
iret
mov
mov
cmp
add
or
add
nop
hlt
or
pop
scas
cltd
push
xorb
dec
mov
or
adc
adc
out
outsb
cmp
test
cmp
iret
sar
rcrb
test
shl
nop
pop
movsb
arpl
sbb
xchg
lea
data16
xchg
mov
in
repnz
or
inc
jns
call
mov
jnp
dec
cld
das
icebp
jl
jmp
xor
inc
and
mov
jge
daa
mov
dec
dec
mov
push
shll
xorb
pop
les
xchg
rorb
sub
sahf
push
xor
push
push
repz
sbb
jmp
rcl
cmp
and
movsl
xor
add
ficomps
lods
dec
rolb
cmp
fstpt
jge
jl
inc
push
inc
xchg
and
pushf
push
and
push
jne
flds
test
add
dec
cwtl
push
jno
add
push
cmp
jbe
std
scas
dec
cltd
sar
lods
pop
ror
jo
sbb
mov
push
int3
loop
xor
movsb
add
sub
fldenv
imul
or
aad
cs
sub
sbb
out
popf
seta
sbbb
adc
into
insl
outsb
xor
xchg
mov
nop
hlt
imul
imul
jnp
push
and
xchg
or
bound
hlt
into
push
jnp
in
aad
xor
lods
out
fld
call
lods
sbb
ret
je
mov
fldl
xchg
or
cmp
xchg
shll
lods
movsb
adc
clc
push
insl
xchg
mov
stc
adc
lret
int3
or
inc
gs
and
pop
xor
add
outsb
pop
and
clc
imul
fldl
add
and
mov
in
idivl
cs
ds
roll
jae
leave
mov
repnz
adc
pop
cmp
and
mov
sbb
testl
or
pop
jmp
and
mov
lds
sub
jecxz
adc
imull
pop
sahf
mov
imul
mov
xchg
aam
push
in
ljmp
adc
iret
lcall
shl
or
mov
mov
mov
pop
adc
addr16
ss
pop
mov
lock
pop
ss
inc
in
lds
pop
and
mov
insl
or
outsb
stc
mov
or
add
lods
movsl
push
add
jnp
push
or
in
inc
lret
mov
pushf
dec
iret
mov
mov
les
add
inc
mov
push
or
jg
cwtl
shlb
cli
add
je
cmpsl
cld
call
pop
or
pop
stos
mov
fildll
int
imul
cltd
ret
cmpsl
adc
mov
repz
pop
imul
jno
mov
add
mov
insl
cwtl
mov
mov
inc
les
pusha
mov
outsl
shlb
pop
push
std
or
ret
popa
sbb
jge
xchg
cwtl
or
mov
loopne
inc
das
lahf
xor
pop
mov
mov
dec
or
jle
mov
push
sahf
lock
scas
in
xlat
push
push
pop
inc
into
pop
mov
xchg
mov
stos
ror
cmp
lods
jl
jno
pop
rcrl
vaesdec
int3
mov
adc
inc
sahf
jae
cmc
out
dec
fidivrs
fiaddl
cmp
lds
push
inc
loopne
lds
roll
shrb
fidivrl
push
jb
push
and
xor
mov
xor
mov
ja
mov
or
mov
pop
dec
add
sub
mov
aaa
sub
in
aam
int3
jno
dec
adc
xchg
fld
std
jae
cmc
hlt
lea
and
dec
pusha
xor
xor
sub
insb
push
adc
xchg
push
cmp
sbb
out
pop
and
xchg
movsb
cmp
lods
adc
pop
push
inc
dec
dec
pop
pop
push
sub
xchg
pop
fisttpl
jnp
add
jns
popa
pop
pop
or
xchg
push
or
xor
mov
cmp
es
daa
ljmp
orb
xchg
push
mov
insl
sbb
fsubrl
imul
mov
push
inc
pop
inc
fs
cmp
shlb
and
push
sub
lret
push
sbb
scas
sbb
bndldx
fcoml
mov
xor
mov
aam
push
sti
add
jge
jb
movsl
scas
pusha
mov
insb
pop
dec
outsb
and
movsb
scas
mov
cltd
or
xor
inc
shrl
or
mov
cmp
dec
jae
subl
xor
stc
pop
lea
lods
idivl
cmp
add
push
stc
and
lods
cli
cmc
loope
in
in
mov
popf
mov
movsb
sahf
xor
enter
stos
loopne
fsubs
ljmp
xchg
popf
icebp
jmp
out
div
or
push
jb
mov
mov
xchg
xchg
sub
mov
rclb
shll
decl
pusha
or
decl
pop
push
ror
test
or
lods
xor
loop
notb
cmp
xor
movsb
rol
imul
dec
mov
cmpsb
fwait
sar
cltd
cmc
mov
xchg
or
mov
cmpsb
ret
pop
jns
data16
add
andl
insl
fdivs
outsl
jg
dec
bound
adc
inc
jecxz
mov
sbb
jnp
imul
and
xchg
out
add
push
addr16
cmp
push
pop
push
mov
mov
or
test
or
lea
add
out
and
push
addr16
mov
sbb
dec
call
mov
push
cmp
xor
adc
aas
call
popf
fstpl
cmc
inc
cmpl
and
pusha
and
popl
add
mov
push
adc
xchg
prefetch
pop
movsb
int3
sarl
lods
fwait
loopne
out
mov
pop
pop
adc
lods
xchg
popl
xchg
dec
push
js
ret
imul
mov
push
jnp
or
adc
jne
sbb
push
mov
and
push
push
repz
sti
jbe
and
adc
bound
fbstp
cmp
push
mov
and
xchg
arpl
xchg
xchg
iret
push
dec
push
ja
movsl
movsb
sub
fidivrl
in
cs
iret
adc
dec
ret
mov
gs
shl
adc
call
cs
xchg
mov
xchg
push
cmp
xchg
ret
sbb
out
pop
je
dec
add
mov
and
push
repnz
scas
xchg
jl
mov
imulb
ja
sqrtps
jmp
gs
subb
loopne
test
xchg
insl
mov
ss
jnp
movsl
scas
das
jmp
push
jnp
imul
fwait
mov
add
lcall
mov
sarb
out
filds
mov
mov
lret
cmpsb
push
out
daa
scas
rcll
adc
inc
fnstenv
popa
pop
test
lock
dec
mov
pop
dec
adc
lahf
and
fistpll
inc
add
xchg
lcall
jb
nop
sbb
movsl
pop
jno
arpl
imul
aas
enter
xchg
leave
cmpb
outsl
insb
subl
movsb
dec
addl
sbb
ror
mov
pop
add
add
jle
jbe
mov
mov
jb
shll
dec
mov
xchg
inc
outsl
repz
push
dec
add
jge
ss
ljmp
insl
dec
lock
pop
sbb
pop
fdivrs
sub
push
stos
cli
sub
icebp
jo
pop
xchg
add
imul
mov
sub
push
pop
ret
sahf
sbb
aam
pop
es
andl
ja
inc
mov
fsubl
xchg
push
in
lret
rclb
jae
call
and
xchg
loop
mov
dec
mov
mull
nop
into
pop
xor
cli
pop
lds
ds
or
xor
add
aad
leave
in
mov
push
dec
dec
faddl
sarb
jle
mov
loopne
stc
pusha
xor
sbb
pop
sti
test
mov
xchg
ret
mov
int
push
push
jns
push
stos
ds
pop
shlb
ja
mov
stos
cmpsb
cld
mov
cmp
pop
pop
in
cmpsl
pop
fbld
out
or
gs
loopne
cmc
mov
ds
scas
sbb
mov
push
dec
nop
mov
cmc
sarl
lahf
adc
jmp
cmp
pop
int3
mov
mov
lock
push
mov
jg
sbb
push
mov
dec
sub
pop
push
in
cld
gs
loopne
lret
ret
jp
and
or
cmp
popa
jmp
imul
inc
sti
jo
mov
inc
pop
in
push
push
add
xchg
loop
xor
jp
cmp
jle
pushf
xor
aam
mov
cli
and
mov
in
xchg
shr
movl
iret
fs
push
lret
dec
cmc
mov
push
std
or
lea
and
sbb
jecxz
stos
inc
or
pop
in
jmp
aad
jge
popf
ret
test
push
pushf
jl
inc
mov
outsl
fnsave
ret
and
mov
movsb
mov
iret
lcall
scas
mov
pop
test
hlt
inc
sub
insl
mov
ljmp
pop
lret
into
imul
dec
pop
js
dec
enter
cld
mov
jp
pop
gs
push
push
cs
add
jmp
adc
stos
add
out
cs
adc
add
mov
jo
fiaddl
xor
add
dec
dec
dec
inc
dec
sub
ret
xor
add
jnp
add
dec
imul
fwait
or
out
fildll
mov
out
imul
rorb
lds
sti
mov
mov
jmp
xchg
leave
pop
sub
fwait
xchg
mov
mov
adc
das
add
shl
cmc
pusha
inc
sahf
movb
mov
pop
dec
out
jmp
ret
push
add
xor
gs
mov
insb
dec
or
loopne
movsl
iret
aas
mov
test
push
jno
ja
jb
jno
in
jns
cli
gs
mov
push
nop
xchg
mov
mov
enter
dec
lahf
xor
fdivl
pushf
dec
push
fstpl
push
jb
loope
or
div
jg
pop
setno
repnz
mov
addr16
enter
pop
jo
jo
adc
lock
sub
mov
enter
dec
subl
add
int3
dec
fs
or
outsl
int
push
xchg
enter
andl
add
scas
cmpl
in
xor
xchg
lret
stc
xor
adc
mov
sbb
adc
jae
jmp
clc
cmc
jnp
enter
lcall
int
bound
sbb
jl
popf
cmp
imul
pop
gs
repz
nop
mov
pop
clc
int
test
and
adc
jmp
out
movsb
sbbb
movsb
insl
lret
inc
or
xchg
cmp
out
dec
cwtl
cmpsl
outsb
pop
pop
sub
jge
or
sti
mov
cld
aam
mov
repz
and
mov
imul
jge
inc
add
addb
hlt
push
jns
xchg
cld
scas
es
movsl
pop
icebp
loope
test
push
out
pop
arpl
inc
and
pop
inc
insl
jg
adc
lret
and
push
cmc
les
sar
in
fimull
mov
push
cmp
and
outsl
lret
sbb
rol
orb
in
mov
push
stos
sub
jo
jne
pop
or
adc
xchg
test
pop
movsl
sbb
push
aaa
test
push
push
pusha
push
mov
dec
sub
mov
cmp
mov
sarb
xchg
ljmp
push
sbb
push
inc
xchg
jbe
jno
outsb
xchg
fadd
in
xor
fsubs
ds
aam
cmp
jne
sti
cmc
lods
and
test
repnz
pop
jecxz
lea
adc
inc
xor
or
mov
ret
ljmp
xchg
add
rol
xchg
stc
mov
out
hlt
inc
mov
cmp
adc
pop
and
mov
js
sub
sub
pushf
jle
inc
movsb
cwtl
lea
xchg
or
xor
sbb
xor
aam
cs
xchg
push
aad
adcb
mov
lret
movsl
xchg
mov
lahf
or
mov
sub
imul
jle
fdivrp
adc
mov
and
icebp
ljmp
or
cmp
mov
in
adc
pop
pusha
arpl
pop
jo
addr16
push
bound
and
call
mov
mov
add
jl
in
cmp
mov
dec
xor
pop
adc
and
pushf
xor
push
and
add
arpl
jae
ja
test
lcall
test
imul
insl
lret
pop
fstp
lods
xor
lret
sub
or
push
sahf
int
imul
je
shlb
mov
aaa
dec
mov
ds
sub
in
pop
pop
ljmp
add
pushf
bound
scas
pusha
loop
dec
data16
adc
js
dec
xchg
fistpll
jae
mov
inc
dec
xor
gs
int3
cmpb
fwait
cmp
cmp
loope
call
dec
add
mov
dec
shlb
pop
loopne
test
xchg
and
xchg
sub
andl
xchg
nop
ret
dec
mov
cmp
cmp
push
sbb
add
add
mov
inc
sbb
hlt
cmpsl
jno
mov
in
int3
adc
cltd
in
xor
push
sub
inc
push
inc
push
mov
dec
jge
mov
mov
inc
xchg
aaa
jge
sbb
mov
mov
repz
das
pop
add
rorb
ss
xor
or
jns
out
and
sbb
fucomp
mov
xchg
clc
dec
divb
mov
fsubrp
ja
inc
xor
add
fistl
sub
int3
jmp
rolb
xchg
xchg
testb
add
cmp
lods
and
mov
fsubrs
cmp
jge
adc
pop
movsb
or
imul
rorb
call
out
sti
xchg
sbb
ljmp
arpl
fisubrl
int
fs
adc
pop
outsb
sub
push
dec
push
add
daa
popa
xor
push
je
inc
jne
ss
cwtl
xchg
pop
jg
shlb
mov
adc
sub
and
lahf
imul
dec
and
dec
pop
adc
icebp
jg
add
fnsave
mov
mul
pop
lahf
scas
fstps
pop
scas
push
loop
inc
sub
cmpsb
inc
pop
vunpcklps
lods
call
jmp
xchg
das
movaps
sub
xchg
xchg
sub
negb
xchg
mov
stos
pop
jnp
je
aaa
fsubs
jmp
leave
cmpsb
loop
pop
movsl
push
ss
xchg
pop
sbb
or
fcmove
inc
jno
fldcw
jnp
loop
ror
adc
test
mov
mov
shll
mov
das
cli
imul
xchg
and
fsubl
mov
xchg
mov
aas
xchg
aad
mov
push
jns
ficoml
es
call
lds
fxch
inc
add
inc
push
pop
pop
push
dec
cmp
or
cmpsl
pop
enter
add
add
add
dec
inc
insb
movsl
outsl
lret
cmp
pop
mov
adc
xchg
in
xchg
inc
dec
popa
push
pop
scas
fldl
loopne
dec
subb
sbb
mov
les
xor
or
fidivl
leave
dec
lods
add
adc
mov
and
inc
popa
and
jb
and
movsl
pop
mov
ljmp
andb
aaa
loope
scas
jno
jmp
inc
in
cmp
test
dec
adc
fldenv
mov
cwtl
test
push
inc
jg
mov
shll
xor
cltd
pop
cli
adc
sub
adc
insl
cmp
fadd
xchg
imul
nop
imul
pop
adc
fwait
push
xchg
test
fisttpll
cmc
out
ror
or
ljmp
jo
addr16
jmp
outsl
sub
cmp
mov
dec
ja
jmp
push
xlat
hlt
lods
fs
repnz
adc
aas
mov
cmp
adc
imull
cmpsb
xchg
adc
push
loop
and
push
out
sbbb
xchg
popa
mov
lea
scas
stos
fucomi
fadds
sbb
add
fsubr
pop
sub
push
jns
cwtl
mov
ret
jmp
xchg
enter
or
pop
or
loop
lahf
jne
inc
ds
push
jb
arpl
mov
jmp
push
push
test
mov
and
dec
jl
jno
incb
popa
shrb
lret
stos
push
adc
jmp
pop
mov
mov
out
mov
mov
divl
out
int3
fldenv
rclb
dec
and
mov
fstps
inc
xchg
aas
call
push
cs
and
outsb
lea
outsl
jo
push
addr16
or
mov
stc
bound
mov
and
inc
xor
lods
inc
fdivrl
sbb
imul
lret
and
in
stos
xor
dec
sbb
sbb
xlat
sbb
and
lahf
jg
push
mov
pop
mov
mov
sub
adc
test
cmc
js
cltd
mov
cmpsb
mov
jg
fidivrs
lea
sub
dec
sub
pop
adc
dec
mov
fsubl
adc
lods
push
dec
idivl
pop
pop
mov
aas
data16
xchg
or
pushf
int3
adc
sbb
cld
sub
in
pop
lea
jmp
jns
or
cmc
outsb
sti
dec
xchg
cmp
jns
dec
mov
dec
sub
sub
shll
sarl
cmp
bound
loopne
inc
push
gs
sbb
pop
cmpsb
push
in
and
jl
ljmp
iret
std
inc
cmp
rcrb
pop
sbb
sub
dec
and
mov
test
jne
sahf
fmuls
ret
repz
inc
xor
ss
mov
jns
xor
imul
js
in
or
out
adc
dec
xchg
sub
imul
push
dec
int3
dec
or
loope
fdiv
test
fsubrl
add
dec
in
pop
or
stc
fs
jp
sub
mov
std
or
adcb
inc
or
mov
imul
clc
mov
push
mov
popa
mov
inc
mov
das
mov
or
mov
xchg
push
push
inc
stos
gs
cmp
out
sti
mov
add
sub
es
jl
mov
test
xor
sbb
test
sub
add
ss
adc
sahf
stc
in
lods
add
xchg
loop
mov
mov
push
inc
jnp
movsb
cmp
xor
icebp
sub
jecxz
and
movsb
outsb
mov
int3
mov
jmp
fstpt
or
and
jae
fdivs
add
add
push
and
cmc
jnp
or
gs
sti
dec
aas
and
sub
lahf
xor
bound
jmp
cwtl
cmp
int3
jo
imul
or
jb
shl
mov
in
js
iret
call
sub
ja
inc
imul
lods
push
ret
push
xor
fadds
or
sbb
std
dec
testb
sahf
inc
ret
nop
adc
adc
call
shll
jmp
inc
data16
or
xor
loope
leave
ret
es
inc
mov
ja
cmovle
aam
pop
dec
shlb
xor
scas
xor
adc
push
mov
pop
insb
icebp
push
je
ja,pn
add
arpl
pop
pop
push
add
adc
in
sbb
outsl
xor
lahf
or
fstl
mov
ret
sub
int
loop
into
addr16
mov
mov
dec
cld
movsl
jle
pop
xchg
out
shrl
sbb
jns
cmp
fisubrs
les
inc
mov
lret
dec
and
jne
xor
iret
mov
or
adcb
test
inc
dec
jp
xor
loopne
test
mov
sar
lock
subb
test
nop
push
das
fwait
xor
push
xor
movsb
mov
dec
jle
or
jae
inc
cltd
daa
push
mov
or
bound
and
xchg
sti
leave
xchg
lods
mov
jbe
push
xchg
xor
lret
popf
into
adc
mov
in
lods
pop
inc
fsubs
xor
sbb
loop
loop
push
dec
in
cmc
cld
cmp
test
fsubrs
clc
and
mov
xchg
jb
in
jg
add
or
or
xlat
mov
cmpsl
cmp
jge
push
shrl
dec
lahf
pop
adc
out
add
dec
inc
dec
push
pop
pop
push
inc
cmp
xor
jnp
add
bound
les
cmp
and
adc
jno
mov
mov
push
sub
cwtl
jle
pop
repz
push
je
xor
or
push
rorb
rcrb
adc
xor
cmp
adc
bound
fistps
mov
jl
xor
test
das
jl
cmp
push
pop
fnsave
cltd
fs
push
xor
ja
icebp
add
add
push
fidivrl
xchg
orb
pop
incb
idivl
pop
fsts
je
push
sbb
lds
jl
daa
cwtl
neg
mov
fisubrs
lahf
aad
arpl
into
adc
mov
dec
out
fnstcw
push
inc
cltd
rclb
jmp
push
add
jecxz
cmpsb
cmc
jmp
xlat
dec
dec
push
cmp
pop
clc
insb
jmp
inc
mov
pop
dec
lock
cmp
fisubs
and
jo
cmp
ja
nop
icebp
out
pop
sti
rorb
mov
push
xchg
in
jae
adc
or
xor
jns
cmc
dec
sub
and
jno
loope
fs
mov
imul
jp
sbb
cmp
rcrb
jge
mov
loope
fidivl
lea
push
add
mov
ljmp
std
mov
daa
pop
push
jb
cmp
loop
enter
sbb
cmc
in
nop
rolb
sub
in
push
or
scas
sub
aad
out
mov
xor
test
inc
aad
popl
mov
ja
repnz
int3
adc
std
push
inc
imul
xor
push
ds
mov
out
mov
mov
xchg
cmp
mov
lcall
dec
fisubrs
clc
lcall
insl
cmp
xchg
outsl
xor
les
xor
roll
shlb
xcrypt-ecb
cmpsl
push
ja
xor
inc
sub
aaa
fsubr
addl
movsb
stos
insl
inc
inc
and
in
repz
jns
cmp
mov
fidivs
xchg
or
cwtl
mov
push
mov
insb
mov
or
xor
mov
xchg
cmc
test
push
enter
sub
sbb
mov
shlb
idivb
inc
sub
loopne
or
mov
in
les
aad
fwait
and
add
xchg
pusha
insb
jae
pop
sbb
aad
sbb
imul
xchg
mov
or
test
stc
pushw
lock
loopne
jl
icebp
dec
fimuls
shlb
jg
arpl
mov
mov
iret
sarl
sbb
pop
out
lods
into
mov
rcll
adc
lods
dec
mov
cmp
cld
sti
inc
aam
xchg
sub
cmp
push
idivl
mov
sarb
push
jae
imul
sbb
mov
push
cli
jle
pop
push
xchg
scas
ficompl
fists
mov
les
or
ret
mov
xor
or
rolb
ret
xchg
dec
jmp
inc
sahf
imul
enter
sub
movsw
xlat
das
aaa
jo
jno
lds
mov
mov
dec
aam
add
outsl
xchg
xchg
inc
lods
xor
fwait
movsl
movsb
cmp
xor
arpl
in
add
cs
mov
pop
nop
mov
dec
in
addb
sbb
or
push
and
xchg
loop
push
arpl
pop
pusha
jb
sbb
lret
cmpsl
dec
aad
mov
push
mov
cmp
int
aad
dec
mov
out
add
clc
cmp
mov
dec
pop
ret
jp
les
insl
fimull
jbe
fildl
movsb
mov
enter
cwtl
aad
insb
movb
je
mov
pop
pop
xchg
fidivl
push
fstpt
cwtl
push
arpl
loope
xor
and
pop
test
lcall
or
mov
push
sti
rcr
jge
sbb
leave
dec
and
cmp
add
sub
dec
aas
imul
lds
pop
mov
inc
cwtl
test
cmp
push
push
push
icebp
pop
mov
push
hlt
movsb
mov
and
stc
shl
mov
and
mov
arpl
int3
sbb
cmp
insb
pop
lret
jo
add
push
leave
xchg
mov
inc
jb
addb
call
out
fsubrs
lods
outsb
cmpsb
out
in
xchg
and
adcb
push
rorb
inc
mov
push
sub
scas
push
test
sbb
sbb
mov
out
and
sbb
mov
pushf
sbb
pop
out
and
adc
add
xchg
jp
ljmp
aaa
sub
idiv
js
mov
adc
dec
fucom
ficoms
pop
adc
adc
movsb
jae
movsb
inc
mov
pop
push
inc
cwtl
cld
loope
mov
pop
lret
inc
idivb
pop
mov
or
jbe
pusha
jmp
pop
ljmp
mov
incl
jcxz
das
dec
jmp
repnz
and
iret
inc
lcall
push
cmp
mov
inc
xchg
jp
mov
and
ds
mov
test
aaa
add
cld
mov
mov
cmpsl
jmp
ja
xchg
push
movsb
rorb
jbe
ucomiss
inc
aam
dec
adc
push
pop
inc
jo
xor
dec
dec
sub
mov
mov
je
int
lock
jp
pop
into
xor
in
cmp
fdivrl
xchg
mov
jns
mov
xorl
ja
cmc
mov
stc
imul
pop
idivb
push
inc
pop
pop
pop
pop
push
dec
mov
stc
scas
lods
stos
add
jnp
add
pop
cs
cmp
lods
jmp
push
adcb
inc
or
ret
pop
leave
das
inc
inc
aam
jmp
fnstenv
fsts
push
sbb
dec
pusha
out
and
adc
ficompl
sbb
shll
jmp
loop
jno
inc
lea
lret
out
push
and
fs
lods
lret
dec
adc
xor
pop
sub
push
mov
lods
mov
popf
xchg
out
ljmp
mov
scas
fimull
ficompl
imul
decl
adc
xor
fcoms
cmpsl
xchg
push
pop
pop
int
push
pop
mov
cmpsb
dec
outsb
sbbl
fldt
shll
inc
les
mov
cmp
clc
sbb
jecxz
xor
push
movsb
dec
dec
jbe
clc
mov
jg
scas
cmc
jg
push
mov
mov
jnp
ds
sbb
add
jg
mov
nop
pop
out
or
faddp
rcl
inc
xchg
rcll
jp
adc
add
add
dec
out
cmp
fwait
mov
xor
arpl
pop
rol
es
jno
cltd
pushl
adc
adc
xchg
outsl
sub
fidivl
and
iret
stos
sub
mov
lds
pop
popf
pop
pop
mov
lcall
jg
out
loope
repz
leave
jo
mov
mov
dec
xor
in
xchg
sbb
and
mov
dec
ret
inc
lahf
popa
adc
out
push
mov
sbb
xor
arpl
adc
imul
outsl
insl
stc
icebp
mov
outsl
notl
dec
jp
pop
cmp
pop
sahf
addr16
js
loopne
js
bnd
jge
es
mov
mov
int
xchg
es
int
or
stos
pop
icebp
mov
and
leave
call
sub
fisubrs
push
ss
repnz
cltd
out
mov
sbb
mov
mov
jl
ljmp
ss
les
inc
sti
fdivs
cld
sub
movsl
and
pop
mov
mov
xchg
and
ja
mov
lds
jge
roll
sahf
inc
push
inc
mov
cmp
and
outsl
into
inc
aad
and
out
and
test
sub
mov
mov
js
shll
mov
iret
enter
int3
scas
mov
add
adc
cmpsl
push
stos
cmp
push
loop
inc
fsubs
jmp
xor
insb
xchg
fldt
aam
movsl
and
pop
mov
cltd
xor
fs
jno
cmpsb
mov
into
adc
xor
mov
jmp
addr16
push
push
sbbb
jno
int3
test
sbb
jp
sbb
add
mov
lods
les
inc
ffree
or
mov
or
in
dec
adc
push
cmpsb
fidivl
dec
inc
mov
int
ror
jecxz
inc
pop
sahf
loopne
sub
imul
xchg
sub
jnp
jae
aad
dec
push
call
cmpl
cltd
jno
jne
push
adc
cmpsl
jns
xchg
pushf
andb
jae
outsb
ja
sub
cwtl
inc
adc
lcall
xchg
and
adc
pop
xchg
faddl
mov
and
adc
cmp
pop
push
dec
inc
ret
fildl
adc
es
pop
cmp
andl
aad
fldcw
mov
fs
xor
or
mov
and
xor
fstp
lea
xchg
push
sar
aam
movsb
repz
mov
dec
pop
cmp
jmp
stos
jne
pop
lea
inc
outsl
lods
push
pop
loop
orl
xchg
mov
mov
movsb
fsubs
fnsave
bound
or
dec
pop
sub
jecxz
inc
xor
inc
add
add
ret
add
jb
gs
dec
pop
add
xchg
cmp
add
fisubl
jg
sub
push
loopne
dec
sub
push
loope
arpl
xchg
inc
xchg
sub
in
dec
mov
or
jg
cmp
in
in
jne
add
inc
orl
jno
cmpsl
sub
nop
ss
lahf
subl
inc
test
adc
or
jge
aad
std
push
jmp
lret
cmp
jno
jecxz
jmp
test
lods
inc
mov
les
xor
insb
stos
inc
inc
mov
cmc
lds
ret
shrb
dec
roll
xor
fdivs
mov
xchg
hlt
mov
stos
sarb
and
or
mov
jbe
push
das
lods
fwait
dec
mov
dec
clc
pop
dec
inc
pop
test
inc
mov
push
outsl
jmp
jg
jbe
movsl
add
and
test
sbb
adc
or
ffreep
sub
inc
jge
inc
jns
sbb
arpl
xchg
popa
jl
in
jnp
or
addr16
push
pop
sub
cmp
data16
add
stos
loope
and
push
jo
or
sub
push
mov
add
push
xchg
sbbb
call
lods
mov
aas
popa
adc
or
cmc
cmpsb
test
aaa
daa
rcl
adc
or
cmpsb
fcmovnu
bnd
leave
and
mov
cltd
push
xor
xor
cmp
stos
jb
jbe
pop
xchg
mov
stos
aad
sub
out
fildl
mov
fldl
out
iret
aas
lea
pop
mov
jae
adcb
or
int
xchg
lds
lret
sub
iret
dec
and
data16
ja
movsl
cmp
jb
add
inc
push
inc
push
push
push
outsl
pop
mov
pop
sub
add
pushf
sahf
inc
or
or
push
pop
lea
push
xor
dec
sahf
lret
adc
push
inc
lcall
movsl
in
jg
shrb
push
les
sbb
call
dec
out
scas
sbb
and
xchg
sbb
movsb
sbb
mov
sbb
mov
mov
cmp
sbb
jo
or
mov
jnp
aaa
dec
add
pusha
std
and
xchg
imul
stos
test
rcrl
into
pusha
xor
sbb
add
lahf
jg
lahf
xchg
pop
fcoml
mov
dec
cli
sahf
jne
xor
jle
push
fldenv
push
in
stos
imul
aam
arpl
ja
cmpsl
pop
pushf
sub
scas
subl
repnz
adc
dec
test
imul
dec
mov
xor
jb
xor
lds
pop
cmp
lods
mov
aad
loopne
popa
jnp
int3
jge
insl
xlat
lcall
mov
and
cmp
xor
xchg
or
sbb
pop
inc
push
add
inc
out
outsl
mov
loop
out
xor
mov
xchg
xchg
fdivrs
ficoms
pop
adc
xchg
bound
es
dec
in
xchg
out
ret
push
insb
push
xchg
sti
sbb
push
fldcw
fnstcw
out
ja
cli
movsl
inc
mov
and
push
dec
and
test
fsubl
shr
mov
es
push
aaa
mov
cmp
jnp
fdivrl
cwtl
add
iret
xchg
into
add
or
les
in
shll
insb
sti
sbb
cltd
sbb
aam
es
imul
or
mov
dec
mov
lea
push
pop
push
xchg
inc
sti
lock
filds
jp
fdivl
mov
sahf
clc
inc
push
stos
mov
push
stc
cmp
push
push
gs
xor
mov
sub
cmp
pop
lcall
cld
inc
stos
pop
in
lock
test
addr16
lret
into
jae
or
sub
out
pop
pop
inc
mov
into
rclb
xor
fcoml
movsb
pop
add
in
xchg
in
shlb
cmpsl
repz
xor
dec
xchg
push
mov
mov
into
cmp
add
pop
movsl
xchg
and
or
push
pop
jne
mov
xchg
mov
das
sbb
mov
xchg
add
sub
in
xor
repnz
incl
inc
shrb
sub
pop
sub
mov
jo
arpl
dec
xchg
rcl
or
jb
ret
jecxz
cmp
push
or
jae
in
arpl
cs
mov
cmp
push
and
enter
mov
sub
pop
inc
dec
insb
aad
rclb
jb
dec
xor
jp
clc
cmp
push
push
fstl
sbbb
mov
hlt
push
verw
stos
mov
inc
flds
out
jl
daa
adcl
push
ss
add
xor
addr16
pop
in
dec
sub
js
cwtl
cmpl
pop
fsts
mov
pop
pop
scas
mov
cli
repnz
cltd
andl
sub
jmp
sarl
pop
stos
sbb
jne
popw
sbb
dec
mov
mov
sbb
fisttps
cmp
lds
inc
pop
out
das
cmp
sbb
arpl
or
mov
cmp
dec
cltd
inc
jl
sub
in
loop
cmp
push
aad
jecxz
int
aaa
jp
arpl
and
jae
mov
mov
pop
pop
cmpl
orl
movsb
test
xchg
enter
sbb
fisubs
popf
xchg
cmc
mov
mov
aaa
rcll
sub
fmuls
ljmp
jle
scas
js
lahf
pushf
pop
or
xchg
test
mov
das
adcb
pop
in
mov
ss
pause
lods
cld
int3
aaa
movsb
xchg
int3
cwtl
repnz
ds
mov
mov
in
sub
sub
inc
or
mov
stos
and
and
es
pop
jb
lods
insl
add
cmp
data16
mov
cmp
mov
adc
sub
shlb
mov
cmp
jo
iret
sub
arpl
jle
jae
into
inc
sub
fisubrs
inc
int3
or
lcall
lahf
aam
jne
jne
jp
jns
jl
jl
int3
mov
mov
imul
cmpsl
xor
jecxz
cli
dec
into
int
mov
or
mov
gs
xor
lea
dec
ror
xchg
movsl
sahf
mov
or
mov
mov
cmp
push
gs
in
pop
xchg
in
and
cmp
jo
sub
and
or
push
and
add
sahf
shrl
xchg
push
inc
repnz
add
jl
pusha
xchg
mov
add
mov
pop
mov
push
ret
or
mov
xchg
or
push
xor
lods
adcb
xor
mov
jmp
sbb
xchg
inc
sbb
rcr
pop
add
and
daa
test
flds
pop
or
xlat
and
mov
enter
pop
lods
adc
insl
out
pop
cmpsl
lret
imul
leave
js
daa
ds
movsb
mov
ljmp
mov
movsl
mov
cmpsl
dec
outsb
adcl
in
cmp
cld
jecxz
test
cmc
sti
add
fmuls
jp
and
jbe
sbb
out
insl
call
pop
jl
add
push
dec
pop
dec
pop
push
stos
mov
stc
xlat
test
cltd
mov
push
add
push
data16
xor
test
or
lret
sbb
stos
inc
in
addb
repnz
mov
divb
int
jns
leave
mov
jecxz
inc
hlt
mov
jmp
test
add
xor
aad
xchg
jno
mov
in
mov
xor
add
insb
dec
and
popa
push
mov
adc
insb
leave
mov
xor
test
pop
jno
in
sbb
iret
sub
ss
clc
xor
out
lock
out
rcrl
xor
or
push
shlb
sbb
push
mov
mov
mov
lea
mov
push
hlt
imul
push
pop
call
test
movsb
dec
das
mov
xor
cltd
jle
sbb
xchg
xorb
je
repnz
and
vorpd
ja
sbb
add
cmp
jl
daa
scas
xor
cmp
dec
lock
cs
pop
fcompl
inc
fldcw
xor
or
es
incl
cwtl
push
xor
and
jge
xor
cwtl
cmp
jmp
push
ficoms
sub
cli
pushf
sub
dec
jmp
sbb
cmc
cmp
imul
flds
ljmp
in
mov
mov
jno
inc
or
aam
add
jne
xchg
push
sbb
ret
in
dec
xor
pop
lret
cmpsl
jge
insl
rcr
sub
stc
cmpl
aad
dec
data16
cs
xchg
out
subb
gs
ljmp
adc
scas
xchg
mov
mov
jo
adc
jne
inc
xchg
add
fisubrs
push
mov
scas
call
push
fsubrs
stc
push
or
mov
inc
xor
jne
ljmp
cmpsb
sub
xchg
dec
cli
push
ja
mov
das
cltd
inc
mov
mov
dec
jecxz
pop
lahf
inc
outsl
jno
or
lods
xchg
push
add
out
popf
add
jbe
aas
cmp
sbb
mov
adc
das
lea
aas
movsb
dec
cltd
loope
or
aaa
mov
int
clc
cld
daa
inc
mov
pop
repz
inc
rcl
jne
imulb
fcoms
imul
pusha
cmpsb
mov
rorb
sbb
jecxz
ljmp
push
ja
icebp
andl
push
mov
mov
int
insl
mov
adc
and
enter
cmpsl
jae
push
mov
sahf
aas
sub
and
pop
sbb
lods
adc
loop
xchg
fsubrl
add
add
push
push
xchg
mov
or
xchg
cmpsl
bound
into
not
out
adcl
jo
cmp
adc
mov
dec
mov
jmp
jl
aam
push
mov
dec
inc
mov
bound
adc
push
sbb
cmp
xchg
ret
xchg
outsb
mov
lds
std
ret
test
stc
push
jnp
adc
add
push
xor
inc
pushf
test
or
ljmp
mov
push
mov
ljmp
jo
mov
push
stc
in
shlb
fcmove
xchg
inc
mov
outsb
repnz
xchg
mov
xor
jg
jo
mov
push
and
mov
pop
cmp
dec
cltd
or
sub
xor
sbb
xlat
out
das
jae
mov
xor
mul
ret
out
inc
ss
ja
cmp
nop
arpl
add
sbbb
mov
or
movsb
mov
test
enter
sti
sub
cmc
inc
pop
scas
adc
ret
adc
dec
mov
mov
xchg
inc
inc
xor
and
xchg
dec
dec
in
jmp
pop
out
or
inc
stos
in
sbb
mov
ds
ljmp
not
dec
mov
mov
adc
inc
push
dec
leave
push
bound
adc
push
mov
xor
pop
add
xchg
aaa
pop
push
ret
dec
pop
sub
xchg
into
bound
push
dec
jecxz
sti
or
jecxz
inc
lcall
mov
cmp
sub
orl
sub
ret
and
jecxz
inc
dec
fisubs
in
xchg
push
add
loope
xchg
mov
or
mov
xchg
push
cmc
and
cwtl
jp
insb
inc
in
and
mov
inc
xor
pop
cmp
aam
addr16
inc
pop
aaa
out
ja
sti
test
out
adc
fsubrl
push
add
mov
out
add
cmp
and
iret
push
dec
sbb
xchg
mov
mov
xchg
outsb
and
clc
ret
lret
dec
mov
jl
fidivrs
dec
mov
xor
cwtl
std
or
test
xor
arpl
pop
mov
dec
dec
lods
fldenv
sti
jmp
cmpsl
mov
jmp
inc
in
pop
fists
ljmp
or
and
movsb
jno
adc
mov
aam
inc
lea
adc
pop
push
aas
xchg
ja
sub
mov
xchg
clc
mulb
pop
pop
clc
inc
stc
xchg
fsubrl
or
sub
stc
call
inc
lock
jge
mov
xchg
fdivrs
dec
or
sub
lods
sbb
test
test
fldenv
push
addr16
xlat
popa
mov
jo
inc
leave
xchg
inc
les
add
adc
pop
mov
jmp
cltd
mov
jp
xor
cltd
and
sub
inc
mov
mov
push
test
test
leave
arpl
mov
stos
adcb
push
dec
dec
push
pop
push
pop
dec
idivb
jns
fnstenv
jae
mov
add
xor
pop
cmp
pop
jmp
popa
cmp
mov
mov
loope
mov
subb
mov
loope
dec
lret
jo
xor
xor
adc
jge
cmp
dec
sti
cmp
popf
mov
push
lcall
scas
stos
addr16
icebp
je
cmpsl
lds
jo
push
dec
sbb
lret
mov
cmp
arpl
cmpsb
push
sbb
sub
inc
scas
stos
mov
pop
xchg
in
jno
repz
ret
mov
inc
decl
add
pop
daa
xchg
test
lea
or
arpl
xor
sahf
insb
pop
cs
cs
mov
jb
adc
lock
mov
fwait
mov
and
orl
adc
popf
imul
imul
push
cmp
stc
outsl
mov
ss
mov
xor
addr16
shr
xchg
lret
repnz
lret
imul
push
mov
dec
clc
dec
outsb
daa
push
jp
stos
mov
rorb
jge
cld
adc
jg
or
in
daa
inc
imul
dec
pop
lret
pop
jp
mov
inc
fstpt
shll
iret
loop
inc
cmp
clc
and
outsb
cmpsb
fmull
fisttps
pushf
call
ja
and
cmp
mov
scas
pop
lods
popa
push
inc
or
jnp
hlt
cmp
aam
adc
dec
out
cld
pushw
xor
mov
jno
sub
adc
mov
les
mov
and
pop
dec
and
movsb
add
push
pcmpgtw
and
adc
std
xchg
jnp
clc
out
cmp
inc
sti
adc
jnp
xchg
or
stos
xlat
mov
jmp
push
or
mov
mov
dec
jns
jnp
dec
out
sti
mov
repz
adc
lahf
lret
or
jl
inc
pop
clc
push
sub
insl
and
fcomps
lods
mov
lock
cmpsl
adc
mov
inc
jecxz
sub
out
jae
in
prefetcht2
loope
fucomp
or
aas
scas
ds
xchg
cmp
stos
imul
mov
fisttpl
push
mov
dec
jge
sbb
dec
in
test
adc
pushf
mov
test
lds
sbb
inc
jb
mov
or
and
pop
in
jae
push
and
cmpl
scas
mov
cmp
inc
aam
mov
scas
jp
xorb
pushf
test
xchg
lcall
jecxz
lcall
pop
jno
xchg
sbb
sub
cli
addl
ds
jno
ja
ret
rorb
movsb
mov
in
movsb
idivb
xchg
dec
lods
mov
ret
pushl
inc
mov
and
jle
lods
push
jl
hlt
cmc
mov
cmp
cmp
pop
lock
jo
sbb
arpl
js
sub
data16
mov
std
roll
cmc
sub
mov
cmp
jl
pop
pop
leave
rorb
icebp
cmp
bound
and
mov
lahf
loop
pop
push
mov
push
dec
dec
roll
jno
mov
pop
add
pop
and
and
mov
pop
mov
addr16
xor
imul
cmp
dec
std
push
lock
cli
ja
adc
cli
pusha
pop
dec
cmp
mov
sub
lcall
jmp
in
mov
and
mov
mov
pop
cmpsb
xchg
cli
insl
cld
inc
sbb
fucom
or
fsubl
adc
lods
inc
inc
out
mov
dec
dec
sub
negb
lds
xor
rorl
inc
push
dec
insl
push
add
jns
sbb
scas
jbe
sub
stos
adc
ja
pop
into
stos
out
scas
xchg
out
sbb
xchg
mov
rcr
jae
fistpll
loopne
push
ss
jle
jle
mov
jmp
out
ljmp
push
mull
dec
out
fs
fadds
nop
scas
cwtl
mov
js
xchg
int3
xor
jecxz
sub
sbb
and
shrl
push
pop
icebp
jmp
inc
into
cmpsl
rcrw
lock
ficomps
jb
xor
or
sbb
clc
push
loop
sub
pop
xorl
mov
fwait
hlt
negl
es
and
ficomps
movsb
xor
setg
pop
or
rcll
cmp
mov
adc
or
inc
sub
gs
lea
mov
mov
arpl
shrb
dec
xchg
cld
stos
cs
jnp
or
dec
adc
in
aaa
lret
xor
in
mov
sbb
paddb
dec
mov
je
mov
stos
push
mov
fcoml
push
mov
cmp
cmpsl
fucomip
insb
dec
out
push
mov
aam
cmp
add
sbb
dec
in
pop
sbb
xchg
stc
xchg
xlat
jecxz
xor
rol
pushf
in
cmc
das
fmulp
jb
cmc
loop
or
cld
mov
lods
or
xchg
inc
inc
dec
xchg
inc
add
lret
mov
mov
ret
scas
adc
movsl
xchg
imul
test
push
cwtl
scas
push
jecxz
mov
gs
xor
push
lcall
out
cltd
enter
xchg
jb
cmp
push
pushf
rorb
mov
pusha
ftst
push
int
sub
push
scas
cltd
lods
out
push
dec
fadds
mov
xchg
mov
sub
outsb
gs
mov
daa
in
ja
adc
imul
inc
mov
dec
das
adc
sbb
outsb
lods
lcall
hlt
shl
jge
mov
cmc
cwtl
hlt
stos
adc
pop
adc
shr
andb
sbb
pop
pop
dec
push
dec
push
pop
pop
mov
pop
cmp
jnp
add
adc
xchg
ja
jl
ljmpw
add
repnz
iret
jle
icebp
aam
jb
shll
sbb
imul
push
and
dec
add
fiadds
dec
jmp
or
mov
adc
jle
aaa
push
enter
ficoml
repz
aaa
shll
jno
loope
push
jno
pop
pop
in
std
mov
mov
jmp
aas
loopne
lret
aad
pop
fiaddl
pop
aas
cmp
lcall
ret
iret
push
loope
add
stos
jge
jg
pusha
dec
mov
push
dec
gs
pop
lret
lock
xor
push
repnz
repnz
lar
xchg
push
push
repnz
lea
xchg
mov
iret
loope
xor
loope
out
out
cltd
daa
out
jg
shlb
movsl
outsb
enter
mov
mov
push
jb
mov
xor
add
jmp
add
popf
mov
mov
ja
cmpsb
cmp
xor
and
xchg
xchg
enter
shl
lret
jo
and
mov
test
loop
std
xchg
mov
jp
pop
adc
push
sub
les
hlt
test
pop
btr
dec
sbb
inc
pop
ja
lds
mov
int3
in
jnp
push
insl
hlt
pop
push
mov
cld
insl
scas
sbb
cmp
test
imul
das
push
mov
push
cltd
or
repnz
out
cmpsl
loop
stos
daa
cmp
xchg
adc
out
mov
push
inc
in
lods
inc
lods
xchg
jge
mov
shrl
sbb
outsb
lret
subl
cs
bound
dec
lods
decl
jg
shrb
add
data16
mov
cmp
push
xchg
fs
stos
jle
cmp
adc
mov
pop
push
lock
or
dec
movsb
test
cmpsl
cmc
jge
fsubl
lcall
jbe
lds
stc
sti
or
pop
or
pusha
fsubrs
fisttps
xchg
add
and
sbbb
aad
cmpsb
mov
popa
lods
popf
mov
out
xor
mov
pop
shl
rclb
and
xchg
pop
jbe
js
movsb
adc
or
vandnpd
pop
popf
insb
cmp
pop
aam
clc
sahf
and
pop
and
lret
pop
daa
fwait
adc
push
enter
aam
aas
xchg
pop
fsts
cli
fsubrl
sbb
sub
pop
out
in
leave
rcl
dec
mov
test
lea
in
pop
or
in
xchg
shl
push
shlb
data16
int
loop
call
pusha
xchg
loope
push
lock
add
mov
daa
nop
mov
je
clc
scas
add
mov
jp
mov
test
mov
sub
arpl
lret
jecxz
shrb
lret
scas
insl
cmp
mov
fsubs
insb
push
rol
add
out
scas
push
mov
test
int
rolb
xor
mov
xchg
loope
cmpl
or
lcall
insb
out
cmpsl
test
std
insl
xor
pop
rorb
sub
ss
cmp
cmp
mov
pop
dec
mov
test
jmp
adc
lea
mov
unpckhps
sub
and
gs
mov
cltd
shrb
mov
imul
not
inc
dec
cs
sti
test
add
test
popf
hlt
test
pop
pushf
cld
push
fld
mov
pushf
dec
mov
jo
hlt
mov
stos
daa
adc
les
mov
adc
fisubl
sub
mov
es
dec
negl
arpl
push
ss
mov
pop
inc
repnz
inc
scas
cmp
mov
jecxz
fcoml
dec
xchg
clc
and
adc
repz
fwait
and
popf
out
movsl
xor
add
sub
adc
jl
add
mov
jecxz
ret
repnz
sub
jo
push
cmp
mov
iret
cmp
sahf
sbb
sub
mov
jge
pop
imul
mov
adc
ljmp
xchg
aaa
icebp
pop
push
mov
jmp
dec
addr16
and
dec
inc
cwtl
inc
lods
mov
jge
negb
inc
add
mov
ds
cmp
xchg
test
insb
out
sub
inc
xchg
les
fwait
inc
cmc
scas
pop
sub
data16
add
mov
sbb
xor
bound
sbb
dec
inc
shl
mov
sar
mov
or
orl
stos
ror
cld
mov
xchg
cltd
push
or
popa
enter
int
sbb
mov
mov
mov
mov
pop
pushf
outsl
dec
pop
mov
enter
out
jle
push
scas
scas
pop
or
mov
dec
daa
push
mov
push
mov
jge
aam
scas
pop
ja
stc
sub
imul
shll
mov
scas
insb
inc
int3
mov
xor
cld
scas
imul
aam
push
and
cmp
les
out
xor
and
adc
xor
test
jne
sbb
daa
ds
xchg
in
xor
add
adc
dec
or
sub
test
out
pop
outsl
fsubrl
decb
ds
push
sar
sub
clc
pushf
push
adc
inc
jnp
add
dec
repz
mov
mov
test
icebp
in
xorl
addr16
scas
insb
cmp
mov
test
clc
fisttpl
loopne
addr16
xor
push
jl
add
or
lret
rcrb
add
xchg
xchg
stos
inc
in
pop
cld
iret
lcall
mov
pop
xlat
xchg
aam
mov
lret
xlat
add
lea
mov
ret
or
inc
jns
jo
inc
mov
dec
sbb
fisubs
jbe
call
pop
sahf
jle
mov
add
add
push
push
push
inc
push
test
fstl
lret
add
jnp
add
lret
into
cwtl
js
mov
push
xchg
mov
jbe
xchg
aam
test
addr16
rcrb
cmpsl
mov
mov
mov
cmp
or
lds
adc
stc
cmp
shl
nop
lods
ds
or
outsb
cld
pop
fists
cli
xor
outsl
xchg
push
cmp
xchg
pop
movsb
jns
lods
stos
add
mov
in
add
sub
jbe
sub
pop
adc
fnstenv
adc
inc
clc
cmp
nop
pop
enter
test
cmp
cmpsl
shrb
push
adc
imul
imul
push
pop
sbb
jns
xorl
insb
add
sub
popf
mov
mov
or
cmp
mov
cmc
add
testl
push
sub
sbb
xor
xchg
push
arpl
jmp
subb
ret
adc
loopne
sbb
pop
call
divl
or
movsb
mov
push
lcall
inc
xchg
movsb
fmuls
out
jae
loopne
and
fbstp
fldt
sub
imul
scas
dec
pop
iret
testl
call
or
ds
xor
loop
mov
adc
xchg
add
sti
shlb
mov
daa
les
cs
mov
data16
or
add
cltd
out
xchg
cmp
cltd
mov
fmul
dec
cmp
cmp
push
repnz
insb
imul
mov
ljmp
xor
dec
bound
mov
xchg
jle
sbbb
push
mov
push
pop
fildll
dec
xchg
lods
popa
les
data16
pushf
xor
stos
cmpsl
xchg
fidivl
xchg
add
imul
jns
sub
adc
sub
jmp
ss
lods
insb
adc
and
mov
pushf
adc
popa
insb
loop
outsl
xlat
and
inc
xor
into
jecxz
push
pop
xchg
inc
fistl
push
ret
pop
rol
pop
in
vpsadbw
or
push
lahf
imul
icebp
mov
jmp
mov
mov
faddl
popf
add
les
int
jnp
inc
pop
mov
cmpsb
ds
mov
or
mov
sbb
jl
in
sbbl
sub
adc
inc
mov
faddp
push
push
cmpsb
in
dec
out
in
mov
call
sub
push
and
adcl
mov
mov
dec
ss
and
sbb
and
aas
jle
fsub
mov
stos
fildll
dec
jnp
and
jae
mov
fisttpll
outsb
xor
hlt
lret
out
sbb
push
push
and
sahf
pusha
in
stos
push
loopne
or
movsl
jle
loop
inc
out
cmpsl
stos
inc
sub
cmp
outsl
sbb
xchg
pop
js
test
sbb
push
les
sub
popa
jae
cmp
ljmp
loop
sti
inc
and
rcl
idiv
pusha
test
sub
pop
aas
je
add
mov
lcall
jmp
ret
xchg
xchg
pop
dec
dec
ficoms
adcl
in
hlt
lahf
sti
xor
jns
adc
dec
jne
js
sti
mov
stos
xchg
pop
aaa
out
out
add
aad
testb
movsb
icebp
mov
std
push
push
and
andnps
jbe
sub
fiaddl
mov
adc
scas
push
mov
lods
movsl
cmp
mov
daa
push
aad
daa
pop
push
arpl
daa
lahf
icebp
dec
adc
sub
xor
push
push
loopne
adc
push
xchg
test
push
dec
xchg
mov
jns
pop
pop
xor
cld
cmp
mov
lock
movsl
lret
sbb
data16
xor
test
dec
dec
movsb
mov
rcll
cmp
test
mov
ds
sub
push
daa
int3
mov
fs
mov
add
xchg
mov
mov
out
je
scas
sub
ja
clc
sub
idiv
inc
jne
xchg
bsf
sbb
push
jnp
xchg
adc
out
dec
inc
add
mov
pop
shrb
pop
xor
movsb
lea
mov
mov
jne
inc
nop
ljmp
popf
shrb
xor
loopne
or
aad
xchg
sub
inc
fdiv
mov
adc
dec
dec
cs
aas
out
hlt
push
sti
dec
dec
fmuls
mov
push
fnstsw
les
scas
mov
test
pop
jg
popf
xchg
mov
nop
mov
add
stc
cmp
inc
cmpsb
or
icebp
sub
out
cli
xchg
stos
je
jns
es
sub
mov
xorb
int
pushf
sar
leave
icebp
loope
das
stos
in
mov
shll
leave
outsb
push
pop
mov
js
mov
mov
dec
add
adc
fbstp
shll
nop
in
test
push
pop
jmp
pop
mov
sub
aaa
push
sub
sbb
xchg
idiv
fistpll
shrl
or
dec
pushf
fbld
cmp
push
mov
xchg
outsb
inc
sbb
sub
popa
aad
add
bound
aaa
pop
shrb
jnp
outsb
and
orl
mov
fldcw
mov
pop
mul
xor
outsb
adc
nop
mov
ror
mov
out
rcll
loop
push
in
mov
jmp
mov
and
add
mov
mov
sbb
jl
test
sub
fistl
add
cmp
repnz
outsb
pop
push
add
mov
push
iret
or
push
leave
loop
in
push
leave
xor
add
outsb
mov
mov
pop
divl
jmp
in
jbe
outsl
mov
jne
sbb
xor
je
sar
aas
add
dec
inc
pop
dec
pop
pop
inc
cwtl
inc
loop
das
mov
roll
add
add
jg
xchg
push
mov
jmp
or
fucomi
mov
and
cmp
stos
pusha
xor
pusha
pop
stc
dec
cmp
clc
mov
jnp
aas
sub
aas
outsb
movsb
jl
mov
xchg
rolb
or
loopne
jb
cmp
jae
push
aaa
xchg
mov
loop
mov
push
and
add
jbe
push
movsl
add
jne,pt
jmp
mov
test
ja
cmpsl
mov
add
arpl
mov
shlb
dec
xor
fdivr
std
sbb
push
dec
and
outsb
mov
mov
jne
int
lods
cmp
xor
push
xchg
or
loopne
xor
xchg
cmp
jle
aas
sahf
push
adc
mov
pop
inc
push
imul
std
jnp
cmpsl
mov
dec
cmpsl
jno
sbb
sti
stos
int3
fdivp
insl
scas
cmp
lcall
pop
sti
insb
rcr
lds
jnp
aaa
test
out
xchg
pop
or
aas
sbb
fwait
aaa
ja
mov
idivl
inc
cld
fistpl
sub
adc
jmp
jae
xor
sbb
add
sarb
cmp
sarl
in
fcomp
sti
inc
cmpsl
btc
lea
xlat
sub
lcall
or
dec
add
inc
sub
sub
jno
shll
sub
adc
mov
xchg
mov
mov
andl
outsl
js
inc
test
mov
outsl
js
push
aas
in
fcoms
adc
mov
add
icebp
js
xchg
insl
or
mov
prefetch
mov
fsubs
adc
ds
jle
xchg
outsl
insb
pop
mov
jmp
or
rcr
inc
nop
mov
test
xchg
leave
add
xchg
mov
stos
cmp
pop
add
lods
and
daa
dec
jmp
repnz
mov
cld
or
cwtl
pop
sbb
ficoms
adc
dec
movl
pop
adc
pop
xchg
aad
in
pop
insb
ss
cmp
mov
inc
adc
inc
cmc
adc
repnz
ja
jnp
das
out
mov
pop
out
repnz
test
mov
xchg
sbbl
jnp
inc
lods
jbe
sub
sti
push
xchg
pop
mov
fnsave
sub
xor
hlt
jae
ljmp
or
movsb
jmp
mov
or
xor
cmp
or
jg
cs
jl
inc
nop
je
aam
or
in
mov
cmp
mov
in
jae
mov
insl
aad
pop
inc
mov
adc
pop
push
push
jle
repnz
push
dec
mov
xor
aad
jg
or
cmpl
sub
sahf
add
std
lret
addl
xlat
mov
jecxz
jae
inc
inc
popw
in
test
repz
xor
sbb
test
dec
shrb
out
mov
adc
xchg
sbb
mov
loop
sbb
mov
ror
push
lods
jecxz,pn
daa
mov
pop
dec
dec
xchg
subl
cmp
ljmp
out
inc
mov
int
fs
les
mov
pop
lds
lret
scas
in
mov
outsb
sbb
lahf
and
out
mov
adc
callw
inc
int3
pop
push
cmp
orl
loopne
ficoms
mov
and
in
inc
xchg
xchg
ficomps
jne
data16
notb
bound
mov
std
or
add
add
mov
xchg
sbb
cmpsl
push
mov
xchg
sbb
in
dec
jg
lret
loop
push
push
mov
jmp
xor
xchg
mov
dec
xor
jg
xchg
push
loop
loope
lret
xchg
push
fnstcw
push
fmuls
das
shlb
push
cmp
out
mov
dec
mov
adc
rcll
fmull
mov
and
dec
pop
dec
pop
jle
mov
insb
inc
lock
popa
jecxz
adc
cmp
and
mov
add
jnp
test
mov
cli
out
cmp
push
or
jecxz
and
jg
in
sar
add
lret
pop
cmpsb
stos
out
cltd
sar
add
iret
sub
movsl
fcmove
lods
xchg
push
xchg
dec
add
xchg
add
inc
clc
bound
andl
pop
in
inc
lock
jmp
xchg
je
outsb
pop
out
mov
in
or
lea
sbb
inc
mov
data16
popa
pop
lret
mov
loopne
xor
ja
and
loope
popa
aad
pop
and
mov
test
addr16
push
inc
mov
repnz
xlat
xchg
std
mov
jns
xchg
pop
inc
repnz
addr16
adc
inc
jg
push
and
shll
sbb
cwtl
fxch
adc
cmp
dec
push
push
jmp
mov
mov
je
movsb
mov
cmp
test
or
outsl
mov
or
or
jb
into
sbb
jno
out
jo
add
loope
fprem1
add
add
mov
mov
ss
jnp
adc
xor
mov
into
lahf
push
add
jmp
adc
push
push
idivb
scas
lahf
cmp
fwait
imul
cmp
dec
jecxz
sbb
add
dec
jle
adc
jmp
pop
jno
call
mov
outsl
cs
pop
scas
sbb
out
adc
jl
xchg
gs
push
xor
lret
mov
aad
test
jae
add
in
inc
stos
loope
rclb
jl
into
popa
bound
test
push
testl
or
sub
add
push
inc
push
push
push
push
push
inc
rorl
popf
push
mov
add
add
pop
sahf
xlat
int
xchg
cmp
sar
ljmp
stc
pop
and
xor
push
jp
mov
fwait
push
daa
std
ret
and
jecxz
cld
std
push
mov
cs
mov
aad
adc
sarb
jnp
push
sarl
xchg
fmull
adc
sbb
pushf
lcall
sbb
clc
add
movsb
cmpsb
scas
ljmp
push
or
inc
mov
jg
sub
dec
negw
dec
aad
lds
inc
aaa
sub
cltd
pop
jne
push
fildll
rcr
fidivrl
add
int
jge
je
inc
out
xor
pop
jne
data16
push
scas
adc
cmc
mov
adc
xor
pop
or
mov
mov
jb
pop
sub
out
pop
pop
sub
es
and
call
dec
add
mov
xchg
sbb
mov
sbb
mov
and
scas
fldcw
in
mov
push
jnp
push
mov
inc
das
sbb
pop
dec
xchg
ficomps
in
cmp
mov
movsb
negl
lret
adc
int
add
std
xchg
jp
cmp
cmp
jnp
and
sbb
idivl
icebp
mov
pop
jne
hlt
xchg
push
xor
std
jmp
lock
add
mov
out
mov
and
push
push
mov
dec
inc
sub
lret
cmp
mov
xor
fsts
push
daa
add
mov
adc
adc
pop
int3
inc
xor
in
ljmp
sahf
lahf
insl
cmp
arpl
adcb
jl
imul
inc
and
add
push
aaa
negb
fwait
jb
cmp
jmp
movsb
test
add
cmp
mov
mov
clc
ds
mov
les
imul
cmp
jmp
jne
mov
cmp
add
mov
pop
mov
cwtl
add
jle
pop
and
adc
push
dec
adc
sub
xchg
pop
jne
jbe
in
sbb
ljmp
pop
fisubs
mov
sahf
sbb
mov
unpckhps
pop
mov
addr16
inc
mov
push
push
data16
inc
xchg
cli
sbb
add
push
and
repnz
add
jle
les
cltd
dec
mov
bound
movsb
and
xchg
cltd
fsubrs
and
jge
inc
pop
push
mov
dec
and
jmp
ficompl
scas
sbb
mov
outsb
fsts
or
pop
insb
rorb
lea
inc
add
push
lock
pop
or
mov
push
or
scas
lea
pop
fistps
scas
jbe
add
inc
cld
push
jle
mov
sahf
mov
adc
ret
jae
fidivrl
in
out
xchg
outsb
fwait
jae
mov
sarb
ja
jnp
rorb
mov
popf
xchg
sbb
jo
in
loope
or
sbb
pop
stc
call
subl
mov
fldl
cmp
dec
rcll
mov
mov
loope
or
jp
pop
fwait
mov
jae
cmp
call
pop
and
subb
jae
mov
out
aam
sbb
in
lret
js
sub
jge
scas
subb
mov
xor
shr
push
mov
gs
adc
and
sub
gs
xchg
push
jge
shrb
cmp
mov
fimull
xor
mov
scas
iret
incb
clc
sbb
aam
cmc
gs
lods
add
push
dec
addb
adc
cmp
sarl
add
pop
lds
mov
jbe
lods
sub
mov
je
dec
mov
pop
or
js
in
in
mov
enter
ljmp
jp
xchg
cmp
pop
out
push
jge
sarb
out
fistl
jns
sub
mov
movsl
push
or
xor
dec
js
mov
dec
std
xchg
or
cld
xchg
mov
aam
fwait
clc
inc
push
aaa
scas
inc
and
push
call
fsub
dec
push
cmc
sbb
mov
sahf
mov
in
mov
xchg
jbe
test
push
jge,pn
jle
shl
adc
loop
jle
pop
ret
pop
scas
orb
jle
mov
add
pop
adc
lods
pop
scas
add
cmp
pop
or
sub
aam
mov
and
push
fs
stc
push
out
push
stos
or
loopne
adc
push
imul
int
andb
xchg
xchg
stc
getsec
inc
mov
jnp
iret
in
daa
mov
xchg
fildll
aam
mov
addr16
mov
mov
lock
fbstp
out
xchg
mov
test
push
mov
lods
ja
mov
nop
dec
mov
aam
cmpsb
shr
enter
repnz
cmpsb
fs
or
jg
mov
push
in
into
jecxz
ds
xor
gs
sbb
jmp
mov
in
mov
in
adcb
mov
or
xchg
sahf
add
sub
pop
add
and
sbb
mov
ret
iret
daa
inc
stos
lret
int3
iret
jmp
mov
jmp
or
pop
mov
or
into
jge
pop
xor
shl
lods
pusha
insb
fsubrs
call
into
iret
xor
fs
cld
jnp
loop
jmp
les
and
mov
inc
ss
enter
ret
xlat
insl
inc
cmpsl
ret
push
nop
or
pop
adc
sbb
xor
adc
lock
shlb
inc
dec
sbb
cli
mov
mov
fstl
test
rcl
repz
jle
or
mov
inc
dec
push
dec
or
add
push
push
pop
push
pop
pop
xchg
stos
mov
roll
push
add
mov
mov
pop
add
cmp
test
pop
xchg
xor
add
cmp
cmp
es
xchg
ljmp
lret
mov
rcll
xchg
adc
movsb
pop
movsb
or
push
or
cmpsb
push
jb
ja
add
test
inc
jne
shll
rclb
je
das
ja
mov
add
mov
popa
dec
jo
xor
cmc
int
mov
and
adc
sti
je
adc
lahf
mov
idivl
jmp
dec
jmp
jae
xor
add
xchg
lods
dec
pop
jno
enter
fwait
sti
lret
mov
adc
xchg
cli
in
xchg
xchg
scas
xchg
xor
gs
ljmp
inc
adc
adc
jmp
and
std
mov
dec
mov
pushf
sub
mov
stos
adc
xchg
xchg
mov
jg
push
ja
jecxz
movsb
cli
sti
mov
xchg
xor
push
or
and
and
cmp
cmpsl
pop
shll
xchg
sahf
icebp
add
cli
fcompl
aad
lods
xor
sti
or
push
popf
aaa
aaa
jecxz
pop
lods
inc
inc
mov
out
rorl
mov
or
stos
jg
nop
sarb
hlt
pop
mov
jl
test
out
ror
xchg
out
sarb
xchg
shlb
push
mov
push
cli
push
es
jns
stc
push
in
lock
xchg
or
mov
and
xchg
sahf
leave
popf
test
test
shrl
orb
push
add
aaa
int3
mov
imul
jle
mov
dec
push
mov
jmp
out
and
pop
sti
stos
mov
movsl
aaa
or
sbb
dec
je
dec
cmp
push
push
inc
sub
in
jg
jnp
scas
and
jp
cmp
rcll
stc
fsubr
add
dec
fcomps
sarb
out
push
cmp
dec
sbb
or
jb
addr16
mov
popa
fisttps
in
ret
dec
fmul
stos
inc
dec
ds
cmpsb
push
popa
jp
aas
xchg
stc
lea
adc
pop
xor
test
lds
sub
and
sub
in
push
jno
cld
iret
pop
repz
jne
pop
sub
andl
mov
pop
and
push
push
push
je
mov
dec
mov
iret
cmpsl
add
jle
in
sahf
mov
imul
popf
push
xchg
add
out
int3
cld
lea
dec
sahf
fbstp
pop
daa
inc
xchg
sub
gs
xchg
ss
add
jecxz
outsb
xchg
mov
shl
std
sahf
or
sbb
dec
jo
sub
out
test
push
sbb
push
arpl
sarl
or
or
dec
lds
out
es
fcomip
mov
ljmp
mov
aas
ret
xchg
push
int
pop
iret
pop
add
sbb
clc
and
loop
sbb
bnd
stc
dec
pop
mov
into
das
fistl
xchg
cmp
mov
push
inc
cli
fcmovbe
sbb
sbb
cld
lea
sbb
call
outsl
rorb
int3
fmul
add
add
dec
cli
dec
cmpsb
movsl
mov
and
sti
cmp
scas
jnp
sub
and
jecxz
pop
in
hlt
sub
sbb
sbb
popa
push
mov
ret
leave
lret
cmc
cmp
mov
test
sahf
adc
repnz
repz
mov
inc
popa
push
cmpsb
cmp
aad
sbb
lret
iret
pop
push
xchg
sub
lds
pop
lods
out
shll
jae
lcall
sub
je
mov
pop
lahf
scas
es
jnp
ss
mov
adc
jne
push
loop
hlt
leave
in
dec
inc
cmp
mov
stc
add
mov
mov
mov
test
leave
inc
mov
jo
jnp
sti
mov
sbb
and
mov
loope
in
xor
aas
cmc
sub
sarl
sbb
cld
mov
sarb
out
mov
pop
sub
daa
sbb
adc
xchg
push
imul
pop
pushf
lahf
loop
xor
jbe
faddl
add
push
pop
pop
andb
fildl
xchg
or
dec
mov
push
mov
mov
orl
pop
sub
mov
mov
mov
hlt
scas
cmc
jb
mov
ja
or
lret
in
sarl
rcr
xor
cmp
daa
fidivl
push
fiaddl
aad
js
push
xchg
pushf
push
test
cmpsl
mov
inc
or
adc
cmp
mov
ljmp
push
frstor
cmp
es
lea
movsl
mov
in
stos
lea
sar
and
dec
lcall
stc
fcomi
call
lods
xor
shlb
imull
adc
clc
xor
pop
pop
dec
dec
mov
aad
js
push
dec
ss
dec
mov
pop
mov
fistpll
out
mov
pop
cmp
push
xchg
lods
and
adc
pushf
and
cltd
dec
xchg
mov
mov
fwait
inc
sub
pop
xor
pushaw
insb
push
outsb
add
adc
push
pop
pop
sub
mov
sub
movsl
fidivl
cmpsb
test
jl
std
cmp
mov
adc
movsb
cmp
pusha
lods
mov
jg
inc
jbe
pop
incl
pusha
ljmp
imul
cs
xor
mov
sbb
add
pop
into
mulb
lds
mov
stos
cmp
jo
jb
das
ds
cld
sub
add
xchg
cltd
mov
or
mov
lahf
aaa
andb
cmp
xchg
and
add
push
push
pop
push
dec
pop
idiv
icebp
adc
in
add
add
adc
shll
ss
cmpsb
sti
adc
dec
jle
mov
cmp
mov
bound
cmpsb
gs
out
add
les
push
sbb
ja
aad
cmp
adc
stc
adc
jmp
xchg
lock
fwait
int3
dec
int
inc
pop
stos
jge
int
shrl
cmpsb
cli
pusha
lods
test
lea
inc
mov
push
pop
push
xchg
mov
fwait
leave
lods
out
push
fsincos
pop
sbb
pop
mov
hlt
jmp
sub
mov
cltd
fwait
add
jno
repnz
add
test
arpl
dec
ja
sarb
rdtsc
repnz
jns
ror
jecxz
rorb
stos
and
xor
mov
mov
cmc
scas
push
pop
repnz
imul
fstpt
inc
push
nop
dec
int3
fs
cmp
jecxz
fisubrs
imul
xorl
xor
rcrb
enter
into
popf
pop
mov
xchg
pushf
mov
jge
hlt
mov
mov
jecxz
xchg
pop
dec
mov
in
insl
cmp
cmp
jns
aam
xor
jmp
icebp
enter
cmc
test
mov
or
rclb
addb
and
ljmp
jo
xor
and
dec
xchg
cmp
add
popf
or
or
mov
lds
movsl
lods
in
ret
inc
shll
or
add
loope
add
xor
inc
les
je
notb
lods
dec
dec
push
cltd
adc
xchg
xor
outsb
cmp
imul
mov
push
inc
jecxz
popf
inc
fadd
shlb
xchg
out
inc
xlat
roll
mov
nop
fcmovnbe
and
enter
icebp
stos
cwtd
lret
sbb
ret
jecxz
sbb
mov
emms
adc
out
sbb
movsl
sbb
das
movsl
shrb
in
push
gs
icebp
clc
xchg
sub
xor
jo
out
and
dec
jle
ret
bound
push
push
addr16
adc
or
or
fsubs
repnz
js
test
dec
push
jb
je,pn
xchg
push
inc
dec
inc
cmpsl
fists
adc
icebp
mov
add
fmuls
pusha
lahf
mov
mov
popf
push
cmpsb
mov
inc
aaa
sub
test
pop
enter
inc
push
inc
sub
lods
in
ljmp
pop
ljmp
insb
add
dec
mov
inc
pop
idivb
mov
icebp
int3
add
mov
arpl
sub
sub
aad
or
pop
test
mov
mov
stos
cmp
mov
pusha
aas
inc
inc
jmp
mov
or
rol
aam
jnp
pop
shrb
sbb
push
arpl
rcr
pop
mov
jbe
cmp
mov
out
adc
jge
loop
push
sbb
movsb
jnp
sub
sub
es
je
out
mov
mov
push
add
cmp
mov
js
jmp
or
xor
sbb
pushf
adc
loop
jge
lods
xor
cmpsl
sub
in
icebp
push
jbe
flds
daa
push
out
push
xchg
sarl
jl
adcl
jns
mov
jns
and
jmp
jb
jb
sti
xor
add
arpl
jge
clc
ret
ljmp
mov
dec
dec
push
movsb
mov
in
subb
std
test
pop
xchg
xorb
cmp
adc
leave
push
sbb
dec
test
jp
lock
cmp
jnp
icebp
call
jl
repnz
mov
mov
push
ret
jae
pop
sub
test
dec
jge
je
loop
mov
stos
movsb
gs
push
cmp
je
mov
mov
jl
lods
pop
adc
filds
es
hlt
xor
dec
pop
ja
ret
jne
mov
xor
rol
or
imul
cmpsl
les
popf
fs
pop
pop
cmp
dec
and
xchg
push
push
adc
loop
fwait
loope
js
pop
and
jns
add
cmp
aas
add
mov
in
push
outsb
push
je
jno
sub
popf
fbld
push
shrb
inc
add
mov
cwtl
jl
inc
inc
mov
push
cmpsb
inc
arpl
xchg
dec
add
movsl
jecxz
cs
into
mov
or
adcb
pop
lcall
add
add
mov
sbb
and
rorb
dec
and
xchg
pop
xchg
cmp
int
xchg
xchg
xor
ret
pusha
sbb
xchg
rol
or
jnp
das
jmp
fstl
int
inc
std
mov
mov
cli
out
mov
mov
hlt
out
xchg
mov
push
inc
mov
mov
sub
lds
scas
cmp
mov
arpl
nop
aaa
jnp
imul
cs
and
decb
rolb
ret
dec
add
sbb
ds
push
or
push
xor
mul
add
lods
std
add
in
je
push
dec
je
jae
jg
imul
pop
mov
xor
insb
xlat
mov
into
outsb
mov
cmpsl
stc
enter
add
xlat
pop
and
jne
enter
scas
inc
fwait
sbbb
mov
xchg
test
loopne
mov
je
push
sub
loop
xchg
or
mov
mov
lahf
jnp
mov
push
in
jp
repz
cmp
in
int
scas
jecxz
add
scas
shr
movsl
push
push
arpl
mov
enter
cmp
pop
ds
mov
mov
incb
xor
mov
data16
adc
in
fadd
test
dec
ret
adc
mov
dec
movsb
cs
push
dec
dec
jmp
xchg
movsb
outsl
push
sbb
add
js
xchg
pop
cwtl
jo
sub
adc
sbb
test
fs
cmp
lret
incb
inc
inc
inc
pop
inc
pop
pop
pop
mov
push
mov
pop
movsb
mov
add
jnp
add
mov
pop
imul
pop
pop
lret
adc
ja
push
add
les
jecxz
loopne
andb
aas
fdecstp
inc
es
ret
dec
stc
xor
repz
scas
and
or
sub
loop
leave
imul
or
notl
repnz
pop
sarl
scas
cmp
dec
and
pusha
xchg
sbb
xlat
mov
leave
xchg
cmp
repz
mov
pop
popf
sub
or
jae
cld
daa
call
jbe
cmp
mov
divl
mov
aad
loop
fisttpl
cmpl
unpckhps
or
pop
cld
in
push
repnz
sahf
jbe
sarl
int
in
test
jnp
aas
loopne
push
pop
daa
and
adc
inc
orb
and
pop
repnz
int3
jle
add
and
sbb
inc
nop
or
lds
xchg
out
dec
or
xor
imul
xor
rorl
push
movsl
ret
sub
es
add
aam
in
out
dec
aaa
xchg
lds
mov
into
jge
mov
std
clc
mov
and
test
or
add
mov
and
call
cmp
mov
add
and
pushf
cmp
xor
out
imul
jo
push
inc
mov
jg
mov
xor
js
dec
mov
lock
into
xor
data16
xchg
ret
pop
sbb
jp
inc
test
adc
stos
fdivrs
test
mov
pop
inc
les
cvtps2pd
shlb
mov
jae
test
enter
mov
push
dec
ret
sub
sbb
pop
sbb
lock
movsb
fbld
dec
test
sbb
mov
into
jne
fs
out
shrb
mov
jge
mov
dec
mov
adc
inc
mov
jg
lods
inc
and
and
mov
js
shl
mov
mov
in
arpl
int
mov
jecxz
dec
imul
enter
lret
cmp
shll
test
jns
test
das
dec
xlat
cmp
inc
loopne
lods
sub
mov
and
negl
add
ret
sub
pop
dec
xor
sub
mov
pop
add
cmp
or
notb
xor
in
add
rcll
sarl
mov
imul
inc
pop
sbb
push
xchg
mov
call
mov
psllq
push
mov
and
lret
inc
add
push
out
sbb
push
jl
fs
sub
xor
mov
cmp
outsb
mull
sahf
je
shlb
and
xchg
inc
ret
sbb
dec
sub
mov
adc
cs
mov
mul
sbb
andl
shl
push
jp
scas
xor
cmp
xlat
xchg
sbb
and
xchg
es
lock
call
daa
cmc
xor
lret
test
and
mov
cmp
push
rorl
movsl
mov
dec
imul
pop
xchg
out
notl
sub
js
in
sti
xor
lods
jb
mov
add
push
cmp
mov
imul
rorb
adc
inc
fisubrl
jmp
aam
xor
ds
or
hlt
decb
cltd
vmovmskps
xchg
xor
ds
std
add
div
ljmp
adc
repz
outsb
push
add
push
or
mov
les
into
xchg
push
jbe
mul
loope
jle
pop
jns
sbb
in
add
dec
dec
subl
sbb
jnp
scas
mov
cld
push
iret
enter
add
and
mov
test
dec
push
dec
mov
sahf
das
or
xchg
movsb
movsb
or
mov
pop
push
sbb
inc
loope
rcrb
push
or
lcall
stos
fdivl
or
jnp
fimuls
cmp
push
mov
fiaddl
push
out
mull
stos
cmp
push
xor
add
in
xchg
fidivs
push
cwtl
push
mov
shrl
mov
xor
mull
shlb
pop
sbb
jl
in
mov
jp
and
shl
nop
fsubl
xchg
and
aad
jecxz
dec
pop
div
loope
pop
rolb
lret
adc
jl
fnstenv
fcomps
fsubr
push
xchg
jle
cmp
sbb
pop
add
sbb
sbbl
fistl
cmp
test
mov
pop
test
mov
push
leave
cmp
pop
mov
rcl
cltd
aad
outsb
mov
mov
out
aam
lahf
cltd
loopne
jle
ljmp
push
mov
gs
out
pop
pop
faddp
mov
xchg
es
mov
mov
push
clc
and
std
test
rclb
pop
out
in
lret
xor
and
jno
cmpb
push
cmc
pop
push
arpl
lret
lods
stos
cmp
lahf
and
cmp
int
in
jae
mov
test
les
test
mov
add
iret
jmp
push
add
xor
jno
push
stos
shld
es
inc
add
decb
fisubl
mov
pop
dec
jno
pop
xchg
or
adc
inc
data16
jle
sbb
pop
mov
add
push
pop
stos
pushf
push
sahf
dec
push
aas
rorl
fdivl
sbb
and
jnp
fwait
stos
add
push
jp
mov
add
pop
lcall
jbe
scas
imul
add
dec
push
inc
push
pop
push
pop
pop
ss
imulb
xor
add
jnp
add
movsl
sbb
popf
and
xchg
jae
mov
in
pusha
mov
sbb
push
ja
arpl
mov
sbb
loopne
xchg
jb
out
fsts
mov
pop
cli
and
mov
andl
jge
push
into
sub
cmp
mov
sub
dec
sub
in
in
cs
fdivl
jecxz
not
scas
dec
shlb
shll
dec
cld
adc
push
push
adc
inc
add
mov
push
das
iret
xchg
jge
mov
lods
push
test
xor
sbb
jb
xchg
adc
pop
pop
add
test
add
xchg
push
lret
fwait
daa
test
and
jmp
orl
movsb
and
insl
jb
mov
jns
or
sub
daa
jecxz
dec
mov
sbb
pop
inc
xchg
cltd
imul
pop
adcb
out
insb
out
fsubl
enter
in
jle
lea
cltd
leave
jmp
repnz
mov
pop
leave
leave
sahf
inc
push
or
call
adc
mov
pop
jg
cmpsb
push
mov
jge
jns
mov
mov
popf
gs
xchg
xlat
mov
sub
and
sub
mov
ja
mov
xor
inc
ficomps
hlt
sbb
mov
mov
pop
xchg
test
xor
sub
dec
cmpl
mov
or
ss
popa
fstpl
es
inc
xor
ja
xor
loop
repz
mov
cmp
loopne
pop
dec
les
fldl
dec
lahf
push
je
adcb
fidivl
mov
movsl
push
loopne
lcall
popa
push
insb
cmp
cli
adc
ret
pop
out
in
or
xchg
fwait
sub
rorl
in
or
mov
out
roll
lods
cmp
shrl
movsl
jbe
push
pop
cmpsl
mov
pop
cmp
push
pusha
jne
daa
iret
bnd
mov
adc
jns
xor
pop
cltd
enter
xchg
inc
popf
add
es
mov
out
bound
or
push
pop
jmp
test
sub
inc
mov
dec
rcrl
inc
fwait
sub
sar
cmp
sub
xchg
lods
mov
repnz
adc
cmpsl
xchg
insl
push
imul
cmp
adc
jge
imul
sbb
cmp
loop
mov
out
cwtl
xor
mov
out
cmp
dec
or
pcmpgtw
outsl
into
adc
imul
pop
xchg
mov
or
push
jg
adc
sbb
xor
mov
fisttpll
rorl
xchg
notl
xlat
lret
inc
sbb
js
pop
ret
movsl
test
je
xchg
mov
mov
bound
dec
daa
xchg
mov
dec
or
vmread
ja
xchg
out
xor
push
xlat
xor
mov
sbb
enter
pop
adc
lock
push
stc
fsubrs
ret
inc
cmp
mov
sahf
in
xchg
cmc
vpmadcsswd
out
aaa
mov
sbb
sub
popa
sub
add
cmp
pushf
leave
test
stos
sub
push
in
repz
push
test
movb
dec
dec
mov
repz
sub
adc
outsl
stos
jecxz
std
movsl
xor
sbb
mov
sbb
push
mov
lods
sarb
mov
push
mov
xlat
fwait
inc
cld
fmuls
mov
cs
push
adc
lea
fcompl
mov
push
test
movsb
ret
mov
pushl
mov
cmpsl
popf
call
popa
push
jne
movsl
lret
and
shr
push
sub
jge
nop
fadds
lods
pop
push
shrl
and
in
dec
iret
in
or
outsl
test
into
and
jns
or
pusha
cwtl
orb
add
adc
pop
addr16
in
dec
loope
xlat
lock
cltd
imul
negb
out
in
sub
jge
dec
stc
xchg
xchg
mov
fldl
jne
movsl
fnsave
adc
movsb
ljmp
ljmp
es
mov
push
fidivrl
xchg
cmp
mov
mov
cmp
adc
jne
mov
cs
xchg
pop
out
out
adc
fisubl
xor
fnstsw
lods
divl
add
push
lret
jmp
out
das
mov
cmp
xor
mov
arpl
movl
cmp
rcrb
cltd
js
mov
sbb
in
dec
or
inc
je
ret
xorl
push
test
ds
aaa
cmpsb
fdivrp
notl
in
pushf
sarb
cltd
js
insl
pop
jbe
pop
repz
nop
sub
sbb
pop
mov
adcl
cmp
sub
and
jg
xchg
cmp
cmpsl
jecxz
add
inc
jmp
imul
mull
mov
imul
orl
sub
push
sahf
jmp
lods
add
cs
xchg
push
icebp
cmpsl
outsb
push
jns
fsubrs
test
pusha
sbb
js
cmpsl
push
outsl
sbb
cmp
out
stos
ljmp
fldcw
rorb
jns
loope
adc
fcomp
pop
push
cwtl
std
mov
xor
ljmp
jae
add
repnz
test
push
test
jmp
pop
ret
xor
adc
sub
aaa
inc
cmp
imul
data16
in
leave
xchg
xor
dec
mov
das
std
push
roll
or
mov
aas
sbb
sbb
sub
je
nop
bound
push
in
int3
aaa
mov
insb
addr16
iret
pop
loope
mov
aas
dec
adc
pop
sbb
fcomps
add
inc
push
dec
inc
pop
pop
dec
push
dec
push
enter
mov
add
add
leave
pop
or
push
outsb
dec
ja
fistpll
and
cmp
dec
hlt
out
add
lds
mov
repnz
psubusw
fsubrl
lds
out
call
jns
sahf
in
cmp
movsb
xlat
in
jl
and
jmp
lea
aad
pop
ss
and
out
ss
movq
cmp
jns
jg
add
jp
decb
xor
jp
inc
mov
adc
or
test
cwtl
cmp
sbb
jp
xchg
jecxz
xlat
push
push
fwait
cmpl
push
mov
test
dec
fimuls
xor
pop
lret
daa
jecxz
dec
scas
or
into
repz
fdivrl
pushf
jb
sbb
lds
or
divb
rcrl
mov
add
sub
jnp
mov
mov
insb
fucomi
adc
add
push
dec
pop
mov
adc
mov
fnstsw
sbb
mov
mov
loopne
sub
sbb
xor
cmp
sub
cmp
outsl
loop
bnd
repnz
cltd
mov
mov
jmp
jno
lret
pop
pop
sub
push
fidivl
add
mov
and
add
xchg
cmpsb
pushf
imul
xchg
and
push
sahf
loopne
stos
jae
mov
ret
sbb
xor
mov
sbb
and
out
mov
je
pop
dec
cmpsl
outsl
or
and
faddl
jg
outsl
dec
xchg
popl
mov
ror
pop
js
add
clc
sti
mov
xor
pop
sti
dec
xchg
cmpb
mov
xor
pushf
dec
out
or
jecxz
popa
lods
jne
sbb
negl
inc
inc
popf
cwtl
ss
cltd
imul
ficoml
test
cmpsl
pop
and
jbe
jecxz
push
les
inc
in
cltd
es
xor
cmp
add
cld
mov
addr16
mov
or
jnp
dec
sbb
xor
test
jno
cmp
scas
repz
jo
fadd
push
in
mov
enter
fstp
push
inc
les
jmp
insl
subb
mov
test
and
test
stc
mov
fistpl
xorb
cmp
lcall
clc
movsl
je
jge
pop
or
imul
in
mov
adc
mov
fwait
aad
pop
aam
cmp
out
adc
sbb
mov
mov
inc
pusha
into
rcr
pop
push
in
xchg
add
or
jecxz
lret
int3
pop
test
pop
xor
mov
sarb
mov
rol
outsb
imul
adc
mov
push
cwtl
out
pop
push
icebp
shrb
cmp
jl
sbb
jnp
xchg
js
iret
adc
movsl
or
ret
leave
lcall
lock
fwait
test
shrb
rcll
popa
and
cmpsb
mov
js
xor
insb
pop
sti
shll
and
cmp
repz
push
inc
mov
sbbl
mov
into
push
outsl
test
jno
and
daa
add
mov
mov
sub
push
nop
jge
clc
or
lds
jecxz
pop
std
sub
clc
je
sti
popa
sbb
ss
xor
pop
sbb
and
fidivrs
dec
lret
cmpsl
sub
gs
push
xchg
outsb
mov
mov
push
lret
sbb
sbb
nop
pop
enter
sub
out
dec
in
leave
arpl
sub
imul
mov
in
inc
sub
cwtl
push
cmpsb
outsl
lret
mov
jnp
arpl
sbb
mov
inc
je
add
or
dec
cli
sahf
shr
outsw
sti
mov
sub
pop
jns
mov
fcomip
fldcw
or
add
dec
pop
push
ret
cs
pop
jne,pn
dec
andl
arpl
loope
aam
and
or
aam
outsb
fnsave
shl
ret
sub
or
lods
test
bound
push
sub
orl
testb
ret
test
sbb
pmulhw
lcall
inc
sbb
pop
clc
add
cld
je
xchg
mov
enter
mov
int3
mov
inc
jmp
clc
ret
mov
repnz
rcll
js
mov
imul
xchg
pushf
out
lock
leave
mov
andb
jbe
push
pop
std
xor
xor
in
scas
frstor
cwtl
add
mov
rcrb
sbb
xor
mov
leave
push
xor
inc
movsl
jno
ficompl
mov
push
int
sbb
inc
aam
sahf
xor
sub
mov
jnp
movl
sbb
jmp
jae
adc
and
pop
aad
xchg
jmp
imulb
xchg
loope
test
or
mov
jns
adcb
and
popf
es
mov
and
in
mov
sub
movsl
jge
mov
fstenv
lret
shr
sbb
repnz
mov
push
leave
mov
call
mov
or
fwait
shlb
sbb
cmc
pusha
xchg
dec
cwtl
jp
mov
xchg
and
push
mov
popf
jb
jns
shl
mov
les
aaa
ljmp
adc
aas
inc
jge
aad
xchg
cmp
cs
cltd
jle
movsb
and
popf
pop
dec
dec
adc
mov
xchg
and
mov
xor
aam
add
js
das
sub
lcall
add
loope
lock
push
push
lcall
inc
fcompl
add
add
dec
dec
pop
dec
pop
pop
in
fld
shrb
sub
add
add
add
add
add
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cwtl
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
call
add
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
in
xor
add
movl
test
ljmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
js
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cwtl
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
push
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
cmp
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cwtl
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
pushf
rol
movsb
incb
inc
mov
test
clc
pushf
inc
decl
push
cld
jge
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
fmuls
test
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cwtl
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cwtl
lret
xor
mov
lea
xor
add
inc
dec
mov
push
mov
or
dec
inc
xor
push
mov
add
inc
decl
add
inc
mov
cwtl
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
rolb
mov
xor
orb
dec
leave
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
cmp
shrb
clc
add
cmp
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
sar
shl
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
sbb
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
cmp
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
cmp
pushf
xor
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cwtl
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cwtl
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
faddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
in
add
push
and
incl
fmull
inc
nop
ljmp
lea
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
js
inc
inc
int
inc
sub
add
int3
mov
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
icebp
or
out
mov
pop
push
cmp
sar
incl
inc
ljmp
push
mov
and
inc
push
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
cmp
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
in
incl
loopne
inc
jmp
addl
mov
inc
call
outsb
inc
js
divb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
dec
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
in
xchg
aam
call
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cbtw
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
jmp
lea
faddl
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cwtl
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jnp
add
mov
mov
data16
inc
lea
test
inc
dec
test
cmp
mov
pushl
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
cmp
pushf
inc
mov
hlt
test
cmp
pushf
or
pop
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
cmpl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cwtl
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
cmp
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cwtl
pushf
xor
jne
mov
icebp
icebp
shl
mov
cmp
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
clc
add
dec
hlt
xor
mov
in
jge
mov
dec
cmp
xchg
mov
add
cmp
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
cmp
fdivl
test
push
add
cmp
sets
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
cld
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
or
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
ljmp
xchg
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
out
add
add
and
fs
incl
js
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ss
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cwtl
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
orps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
cld
js
popa
data16
into
push
data16
pop
xor
add
cld
cld
add
ss
add
into
ret
pop
add
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
cld
mov
push
push
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
cld
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
xor
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
xor
add
data16
dec
fisttps
add
ret
lea
add
cmp
pushf
add
add
inc
test
xor
push
cwtl
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cwtl
cwtl
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cwtl
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
cmp
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
cmp
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
aas
add
push
add
mov
cld
inc
add
rcrl
mov
mov
or
xor
enterw
jmp
ret
inc
mov
add
rorl
icebp
or
inc
inc
mov
or
jne
mov
rolb
add
cld
ret
dec
mov
mov
jmp
mov
mov
sub
mov
in
test
add
add
cmovge
add
cld
mov
adc
mov
xor
cmp
jne
mov
adc
push
test
clc
xor
xor
dec
adc
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
cmp
pushf
push
movl
dec
inc
andb
pushf
push
xchg
fsubr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
cmp
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
cmp
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
add
xor
add
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
and
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
movsb
sar
enter
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fcomps
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
fdivr
testb
dec
clc
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
sarl
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cwtl
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
fiadds
xor
jb
add
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
cwtl
mov
jge
decl
jl
adc
pop
cmp
add
adc
test
adc
jbe,pn
add
adc
clc
pusha
adc
jp
adc
mov
pop
adc
inc
adc
jns
inc
add
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmp
add
xor
add
pop
adc
adc
in
adc
bound
adc
shlb
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
adc
ds
adc
add
add
pop
adc
cltd
outsb
adc
ja
adc
jne
adc
arpl
add
test
add
test
add
test
add
test
add
adc
add
adc
and
adc
ret
pop
adc
loopne
adc
add
aas
adc
push
test
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
sbb
adc
inc
bound
add
adc
jecxz
adc
pushf
xor
add
or
add
inc
adc
xchg
test
add
test
add
test
add
test
add
xor
xor
push
xor
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
xor
xor
inc
dec
xor
add
xor
xor
pop
add
cmp
inc
dec
inc
xor
pop
inc
inc
add
dec
pop
dec
xor
dec
xor
dec
pop
push
dec
dec
cmp
xor
pop
inc
pop
push
pop
cmp
pop
dec
dec
pop
add
pop
pop
push
xor
xor
xor
push
push
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
add
add
dec
add
pop
add
pop
add
add
dec
add
add
aaa
add
xor
inc
add
pop
add
add
inc
add
push
add
pop
add
xor
push
add
add
dec
add
add
inc
add
inc
add
add
add
cmp
push
add
pop
add
add
inc
add
add
push
add
add
add
add
add
xor
cmp
dec
add
dec
add
cmp
inc
add
add
inc
add
dec
add
pop
add
add
xor
add
inc
add
add
pop
add
cmp
push
add
pop
add
add
add
add
add
push
push
inc
push
ret
fwait
xor
and
stos
jnp
add
add
add
pop
outsl
push
js
jbe
arpl
popa
push
pop
outsl
insl
dec
inc
push
jbe
pop
push
js
insb
insb
dec
addr16
push
jb
push
insl
push
bound
push
arpl
pop
jo
dec
inc
push
insb
inc
dec
jne
jbe
jo,pn
bound
