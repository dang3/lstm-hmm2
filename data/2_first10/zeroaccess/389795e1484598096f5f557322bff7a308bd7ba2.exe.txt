push
mov
sub
mov
mov
jmp
adcb
shrl
dec
jle
jle
outsl
jge
jle
xlat
cmp
rol
pop
add
add
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
xor
cld
cs
pushf
push
aad
jnp
test
ret
and
or
mov
add
stos
and
fbstp
pop
loopne
sbb
xchg
ret
loopne
xor
out
frstor
enter
push
dec
scas
dec
jnp
out
out
push
filds
iret
aad
mov
mov
repnz
jns
stos
scas
cli
sbb
adc
push
xor
jg
cmp
outsb
sbb
jg
pop
and
xlat
scas
add
mov
xor
sti
ror
jbe
mov
popl
clc
adc
adc
loopne
lds
push
sbb
lds
adc
in
dec
lds
popa
out
leave
fldenv
aad
sarl
inc
mov
nop
or
ror
cmc
and
inc
and
cmp
scas
mov
mov
notb
jb
push
out
push
imul
push
adc
cmpsb
fidivrs
xchg
xlat
into
mov
aad
jl
mov
aad
pop
xlat
adc
aas
xchg
jmp
stos
test
xchg
mov
cmp
xchg
xchg
lds
mov
or
lea
mov
adcb
push
xor
inc
jmp
mov
addl
push
lahf
icebp
pusha
pushf
ja
dec
pop
xchg
jmp
loop
jnp
jno
dec
std
xchg
pop
mov
jge
push
das
cli
fmuls
mov
xor
testb
mov
cmp
scas
loopne
loop
push
out
call
ret
add
push
rcrb
fidivs
add
sub
mov
add
mov
adc
daa
jbe
sub
cs
stos
pslld
pop
push
and
mov
and
jmp
fsubl
sbbl
inc
add
int
std
sub
jecxz
adcb
mov
ds
sbb
sub
jle
mov
outsl
jbe
out
out
stos
cmp
push
cmp
jne
icebp
or
sub
sbb
mov
subl
pop
and
xchg
rcr
dec
inc
add
and
xor
imul
test
imul
pop
mov
mov
enter
inc
xchg
xor
mov
hlt
in
jae
aas
icebp
lcall
stc
dec
cmp
push
cmp
or
xchg
hlt
into
das
add
adc
jg
lods
ljmp
or
pop
xor
xchg
jle
mov
popa
add
hlt
pushf
dec
or
or
mov
xor
jno
popf
xchg
jp
pop
jmp
jge
inc
lods
push
mov
adc
xchg
fcompl
pop
mov
jecxz
mov
cmp
adc
pushf
xchg
pop
cmpsl
mov
push
sbbl
cltd
dec
dec
mov
out
in
les
or
xor
out
xchg
lahf
xor
jp
sbb
push
pop
test
mov
mov
movl
adc
movl
adc
mov
mov
mov
or
push
push
sbb
mov
movzbl
sbb
xor
and
push
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
jmp
xchg
mov
push
mov
push
out
xor
icebp
add
outsl
jge
jle
dec
pushf
inc
pop
dec
mov
mov
sub
sbb
xchg
dec
xor
cwtl
jne
cltd
out
cmp
sub
fs
push
fsubp
notb
jle
movsb
mov
ljmp
jo
mull
cmpb
insb
mov
push
fcoml
int3
icebp
mov
rorb
and
xor
or
in
jecxz
xchg
andl
lahf
add
pop
jns
inc
mov
mov
mov
mov
es
lcall
bound
in
test
adc
mov
jmp
lret
jne
push
xor
rcll
dec
lods
stc
fwait
jecxz
fwait
add
test
lahf
mov
cmp
fcmovu
and
pcmpeqd
pushf
inc
movsl
push
inc
sti
mov
ljmp
ja
cmp
data16
fisubl
imul
pop
mov
adc
dec
jb
fucomip
std
fs
popf
inc
xchg
movsl
adc
jecxz
adc
cli
pusha
add
mov
dec
shlb
cmp
int
notb
in
jne
sbb
into
mov
push
negb
daa
je
adc
insl
xor
cmp
ret
add
xchg
in
or
push
mov
lret
repnz
xchg
pop
addl
mov
xlat
mov
or
js
dec
push
inc
add
arpl
xchg
aas
nop
cmp
or
sub
sub
push
mov
repz
sbb
out
jle
mov
mov
ficoml
mov
and
inc
mov
jecxz
and
popf
dec
andl
int3
jb
mov
inc
test
mov
daa
mov
test
lret
lea
jo
mov
and
iret
mov
pusha
repz
test
mov
jne
inc
nopl
mov
jp
pop
adc
sarb
or
mov
fidivl
or
mov
jge
shl
sub
push
dec
push
in
push
mov
xorb
insb
shlb
inc
repnz
addr16
mov
cmpsb
cmpsb
push
test
stc
adc
lods
mov
sbb
dec
dec
lahf
inc
bound
into
sub
repnz
mov
xor
xor
xchg
imul
bound
ds
rorl
jmp
cli
lods
lock
push
loop
sub
jmp
sbb
or
and
mov
push
cmp
cs
ficompl
aas
dec
push
pusha
mov
rorb
fs
out
cli
pop
fwait
pop
mov
rorl
clc
inc
cmpsl
jle
sbb
repz
inc
xchg
lahf
es
cwtl
jnp
mov
test
aaa
or
and
aad
add
fmull
mov
lock
test
out
xchg
lea
jae
insl
sti
sbb
cmp
movl
push
sbb
fisttpll
leave
scas
sub
pop
mov
data16
or
mov
js
or
add
adc
lea
movsb
sbb
sub
ss
mov
mov
lods
fisubs
in
inc
rcrl
sbb
into
cltd
js
add
jo
pop
andb
outsl
imul
cld
inc
mov
and
adc
cmpsb
inc
xor
je
aam
mov
orl
jmp
push
jecxz
test
mov
scas
mov
mov
or
or
sbb
xor
xchg
loop
inc
push
push
add
push
push
and
cmpl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
movl
movl
or
movl
add
movl
xor
mov
xor
xor
add
mov
movl
sbb
movb
subl
mov
xor
add
sbbl
mov
mov
xor
xorl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
xor
add
not
mov
sub
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
jmp
mov
mull
cmp
mov
jle
outsl
jge
jle
cltd
dec
inc
xor
mov
clc
inc
mov
fcomi
cmp
test
lret
fldl
lds
jp
xchg
ja
cmc
sub
mov
clc
jge
cltd
das
dec
stc
addr16
cltd
cmp
push
mov
xlat
int3
inc
xchg
repnz
sahf
cmp
out
jno
in
sub
in
and
cli
cmp
lahf
test
dec
arpl
shll
xchg
mov
stos
es
mov
pop
adc
or
add
cmc
lea
sbb
iret
iret
js
mov
lret
sahf
test
ret
dec
shlb
lret
add
mov
addr16
and
les
mov
insl
mov
mov
cmp
mov
push
subb
mov
push
cltd
xchg
in
sbb
and
xor
pushf
xor
xchg
fidivl
dec
cltd
insb
pop
xchg
dec
xchg
out
fs
call
sub
sbb
psubq
cld
adc
icebp
mov
and
push
push
xchg
js
dec
mov
enter
sbb
add
inc
sub
mov
dec
shrb
mov
out
jb
pop
neg
sbb
ffree
jnp
jp
mov
aas
stc
hlt
in
and
jp
xchg
ficompl
fisubrl
push
mov
dec
repnz
adc
ds
jne
popa
lds
fwait
repz
mov
xchg
add
or
xchg
cmp
lds
jnp
jg
imul
or
loop
inc
mov
in
push
xor
mov
mov
or
sub
push
test
add
inc
cmp
adc
inc
je
fldenv
push
mov
sar
mov
out
lods
enter
mov
mov
push
add
arpl
dec
mov
lahf
pop
lret
mov
jle
push
xchg
mov
mov
clc
push
jno
jno
or
and
nop
shlb
mov
shll
std
inc
movsl
push
inc
in
xchg
pop
adcl
dec
loop
imulb
dec
test
iret
out
mov
adc
push
pop
pop
mov
cs
push
fnstsw
addb
icebp
adc
out
inc
pop
fnstenv
jo
jno
out
jno
xchg
mov
and
ret
sub
hlt
fcoml
pushf
xchg
adc
jp
mov
stos
mov
frstor
jle
scas
arpl
shll
call
jl
test
xchg
add
stos
inc
loopne
cmpsb
or
mov
inc
scas
fst
sbb
xchg
jnp
nop
shrl
dec
mov
incl
popf
mov
insl
in
xchg
jo
popa
inc
or
cmp
inc
int3
rorl
adc
leave
test
inc
push
or
ret
or
leave
add
pop
mov
inc
int3
sub
ret
jp
addr16
pushf
mov
sub
rclb
cli
sub
aad
icebp
sub
mov
pop
push
xchg
xchg
ret
pushf
xchg
jno
jge
mov
jmp
xor
mov
push
mov
sbb
clc
jbe
fwait
movsl
loop
push
xor
mov
inc
sbb
pop
sbb
loopne
and
and
add
out
js
movsb
popf
in
in
xor
dec
push
inc
leave
dec
or
cld
xlat
xor
jo
es
cmpl
mov
rcrb
fdivrl
pop
mov
add
mov
mov
sub
add
mov
mov
mov
xor
jmp
lahf
in
leave
decl
imul
lds
test
add
jle
adc
jne
jge
xor
cmp
dec
or
rcrb
push
fildll
mov
test
jbe
and
shll
ljmp
test
or
outsb
lods
cmp
fs
add
pop
fwait
mulb
pop
in
loope
or
popf
xlat
mov
mov
mov
lahf
sub
dec
aaa
inc
sub
into
adc
scas
mov
pop
inc
adc
dec
enter
ljmp
call
and
insb
add
or
pop
mov
mov
xor
lret
mov
cmp
stos
movsb
inc
rorb
xlat
mov
pop
test
fwait
push
cs
sub
fadds
mov
and
int3
cmp
stos
jecxz
sti
in
cmpsb
pusha
cmpsl
mov
js
adc
out
shr
das
repnz
es
adc
ret
jp
dec
pushf
push
cmp
sar
and
in
jbe
pusha
stos
mov
call
sub
fbstp
or
or
mov
imul
addl
out
xchg
adc
outsl
lods
dec
xchg
rorl
ds
ds
stc
pop
xor
lods
mov
pusha
push
jbe
xor
xor
xor
dec
out
rcrl
push
popf
xor
xchg
push
imul
lods
jno
shrl
cwtl
dec
mov
pop
adc
ret
lret
inc
push
jne
or
enter
test
pop
inc
mov
movsb
jg
fisubs
cmpsb
adc
push
stc
pop
and
xor
sbb
cmp
inc
dec
jmp
mov
clc
jno
mov
adc
mov
mov
rol
setnp
and
lret
aaa
and
or
sbb
aas
mov
mov
push
leave
popa
xchg
fnstsw
mov
popa
mov
dec
xchg
jg
sbb
jne
cmp
mov
sbb
push
or
out
and
outsl
adc
push
lahf
aad
jmp
and
inc
dec
arpl
jmp
cmp
lea
ljmpw
add
lods
inc
mov
movsb
movsl
lret
std
pop
popf
sub
nop
adcl
lods
push
pop
loopne
lret
mov
jb
jmp
shl
jp
sbb
inc
test
stc
dec
daa
jge
leave
loope
loopne
push
or
sbb
dec
cmp
int3
or
push
pop
mov
sub
imul
xchg
xchg
dec
pop
jge
inc
pop
or
inc
sbb
cmpsl
lret
jge
adc
xor
mov
jg
testb
or
mov
adc
sbb
ret
test
jbe
mov
jns
hlt
lds
std
and
or
enter
dec
repz
aas
shld
and
jg
enter
xor
adc
mov
adc
in
jnp
mov
std
hlt
xchg
jl
dec
mov
lods
out
cli
pop
xor
pop
and
push
js
icebp
pop
js
and
sbb
cwtl
mov
je
adc
adc
add
inc
mov
xor
lds
cmp
jo
stc
scas
pop
movsl
pop
clc
push
scas
xchg
jnp
xor
xor
out
mov
lret
idivb
add
jg
cmovl
mov
dec
or
test
fldt
scas
mov
dec
fprem1
pop
fnstsw
sbb
mov
dec
sub
xchg
inc
pop
sbb
lret
int
ret
xchg
lods
sub
xlat
ljmp
cmp
jmp
pusha
lea
inc
mov
mov
xor
mov
not
mov
or
mov
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
or
mov
xor
add
orl
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
jmp
rorb
dec
inc
push
push
push
sbb
jge
mov
jge
jle
push
pop
cmp
sbb
mov
iret
cmp
inc
cmc
cmp
subb
add
jbe
pop
ljmp
les
inc
inc
mov
lret
ja
iret
mov
ja
sbb
cmpsb
int
ds
mov
repz
xor
cmp
mov
cmp
lock
popa
push
xchg
adc
pop
or
das
pop
inc
les
push
call
push
xchg
rcl
cmpsb
mov
lock
jno
insb
push
sbbb
mov
enter
jg
outsb
cmpsb
xchg
rolb
insb
xchg
popf
xchg
sbb
popa
xchg
sbb
cmc
dec
cmc
mov
test
and
mov
aas
pushf
stos
pushf
rcrb
lcall
fiaddl
mov
cmp
repz
shll
int3
pop
push
orb
push
shufps
pop
pop
enter
push
mov
or
cmpsl
sub
ret
orb
mov
mov
xor
adc
jbe
out
repnz
xor
jb
mov
dec
adc
outsb
mov
stos
notl
stos
push
sub
addl
call
nop
ss
pusha
call
mov
repz
out
lahf
pop
jmp
push
addr16
jnp
xlat
cmp
and
vorps
lcall
xor
mov
icebp
cmp
lea
jge
imul
xlat
pop
mov
push
fwait
leave
cld
mov
push
jns
in
push
xor
insb
adc
mov
mov
shl
xor
sbb
outsl
xor
jge
xor
push
push
rolb
pop
xchg
ja
lcall
in
mov
shrl
lods
jno
cmpsb
or
shl
imull
pop
lcall
mov
adc
xchg
push
mov
in
jns
mov
fcomi
imul
or
push
sbb
cmp
xor
call
test
cmp
imul
mov
xchg
jo
imul
adc
imul
je
test
mov
xchg
cmp
fisttpl
xor
arpl
lods
add
stos
and
jecxz
pop
xchg
mov
out
ljmp
stos
les
or
sub
sbb
mov
dec
pop
dec
inc
adc
fildl
adc
aad
mov
imul
add
cltd
sub
pushf
mov
adc
pop
movsb
push
int
call
mov
out
or
cmp
dec
push
test
adc
scas
xchg
bound
pop
jmp
sbb
addl
mov
loope
std
or
fisubl
dec
int
call
mov
out
xchg
icebp
out
or
ret
and
lock
lds
dec
clc
sahf
into
imul
mov
xchg
or
mov
loope
adc
mov
dec
jns
lock
aam
jno
lcall
xor
push
pusha
xor
mov
pop
mov
push
inc
scas
inc
inc
mov
and
mov
aam
ret
mov
js
enter
mov
fisttpll
mov
pop
movsb
jle
lcall
test
incl
aas
mov
dec
loope
mov
xor
mov
add
out
lods
xchg
pop
xchg
xor
mov
das
and
sbb
cmc
mov
cltd
mov
cmpsl
outsb
inc
ret
add
hlt
pusha
test
mov
fldcw
pop
inc
adc
xlat
push
addr16
repz
adc
shll
or
clc
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
jmp
xor
mov
mov
mov
sbb
adc
stos
or
jle
popf
in
xchg
testl
cmp
push
pushf
xchg
sub
pop
lock
cmp
jo
enter
jno
jge
dec
shrb
arpl
cmp
rol
sarl
stos
lahf
adc
sub
dec
data16
jp
xchg
faddl
xor
into
inc
jecxz
push
jecxz
mov
leave
data16
lahf
ss
jle
add
ljmp
xchg
add
jg
fdivrs
data16
enter
fists
or
or
jns
xorl
jl
in
pop
outsb
cmp
add
jno
dec
loopne
xchg
sub
jbe
shlb
lret
xor
lea
lods
fcoml
and
add
and
imulb
jno
jb
int
clc
xor
pop
dec
cmpsb
push
lds
rcrl
lret
shrl
stos
sub
dec
cmp
adc
lock
sti
loope
adc
or
daa
divb
and
pushf
sti
xor
jmp
sbb
xchg
fcmovne
mov
dec
pop
jge,pt
mov
jne
add
xor
sbb
add
iret
je
ds
jl
xchg
xchg
xlat
xchg
xchg
lret
adc
lock
inc
mov
es
adc
mov
mov
dec
movsl
inc
add
lahf
iret
stc
or
fists
adc
inc
jmp
sbbb
push
jmp
inc
jnp
in
push
std
outsb
ret
xchg
xchg
js
cli
add
jb
cwtl
mov
dec
and
pushf
mov
lock
push
inc
icebp
add
mov
mov
add
out
pop
or
xchg
jbe
aad
xor
xchg
mov
xchg
and
cwtl
push
push
push
lahf
sub
sub
gs
xchg
lret
mov
add
addr16
repz
mov
push
mov
sub
fs
pop
sub
jmp
enter
adc
fadd
lret
mov
aaa
push
sub
imul
xchg
sbb
aas
stos
shll
out
pop
in
sti
ss
inc
testb
fs
xchg
call
jbe
lods
inc
add
mov
or
lret
js
sub
pop
cmp
push
sbb
or
sub
mov
loop
outsb
cmp
ret
mov
or
int
cmpsl
fwait
cmp
adc
scas
ss
dec
sti
push
inc
aam
lods
out
or
das
push
mov
push
sbb
jno
fdivrs
and
fimull
test
cmpsb
stos
sub
inc
sbb
shl
sahf
ret
xor
jae
ja
clc
test
adc
cmpsb
pop
jge,pt
add
jne
bnd
jge
xchg
and
insl
daa
adc
cmp
in
mov
pop
cli
adc
sahf
movsl
addr16
xor
cli
sbb
lea
rol
int3
movsl
push
xchg
jp
mov
jl
enter
js
in
enter
in
xor
pop
pop
xchg
mov
ret
push
push
push
push
cmpsb
push
push
mov
add
bound
xchg
or
rol
mov
inc
xchg
pop
daa
sbb
stos
sub
ja
push
repz
call
call
out
rclb
sub
out
fsubs
jle
pushf
mov
cmp
dec
mov
inc
and
sub
sbb
mov
in
testb
jae
adc
arpl
cmp
ficompl
or
movsl
outsb
addl
adc
out
push
int
xchg
xor
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
stos
addr16
in
loope
jno
jo
cmp
jle
outsl
jge
jle
test
in
popf
jle
mov
pop
push
mov
jae
leave
adc
xchg
push
or
inc
fwait
push
mov
aas
int3
jns
inc
pop
loope
dec
sub
pop
cmp
xchg
int
push
mov
and
dec
inc
pop
into
jle
mov
mov
pop
popf
dec
xchg
fnstsw
mov
fs
cmc
add
int3
out
cmpsl
or
js
ret
mov
into
jno
sarb
jg
mov
icebp
inc
adcb
or
cmp
in
shlb
mov
dec
xor
or
fsubs
cmpsb
add
lcall
arpl
dec
cmpsb
mov
stc
fdivrs
cmc
jg
adc
and
and
xor
cmp
fistpll
fidivl
pop
adc
incl
or
ret
mov
adc
jl
int
popf
xor
pop
addb
adc
mov
pop
and
pusha
rcrl
sarl
aad
and
aad
mov
aad
add
sbb
idivb
test
adc
leave
loop
test
popa
inc
mov
lahf
pop
arpl
sub
jl
lods
adc
in
cwtl
dec
jns
mov
stos
jg
scas
xor
hlt
and
mov
fincstp
and
test
mov
adc
fcomps
push
sub
cld
inc
lods
jge
insb
loopne
dec
aad
cmpb
mov
clc
adc
cmc
mov
pop
inc
push
test
push
scas
jno
xor
sahf
jne
mov
leave
insl
jmp
add
cmp
ss
xchg
shll
sbb
insb
clc
gs
fldenv
stos
add
jecxz
and
flds
pop
mov
mov
mov
and
xor
sub
pusha
lret
mov
sub
shlb
or
adc
xchg
cwtl
addr16
addl
mov
popa
clc
and
sbb
test
xlat
mov
rcl
aas
andl
sbb
mov
aas
and
add
mov
add
xchg
jle
out
fwait
stos
fsts
dec
nop
in
iret
les
int
insb
push
test
fldcw
lahf
scas
mov
push
repz
jmp
mov
xchg
roll
xor
xchg
adc
mov
cmp
lahf
xor
fisubl
or
lock
push
gs
sub
sbb
sub
iret
stc
shrb
in
mov
sbb
pop
push
inc
push
and
shrl
add
aas
repz
in
xorl
imull
xor
jns
cmp
imul
xorb
sbb
jb
lahf
push
imul
sub
xor
mov
mov
hlt
rcl
je
fcomps
or
data16
add
inc
sahf
int
mov
xchg
xor
xor
enter
or
fidivs
filds
inc
rorb
gs
sarb
dec
stos
outsb
mov
dec
sub
aaa
jo
push
outsb
xchg
arpl
lods
sbb
or
lods
mov
mov
adc
inc
inc
cmp
mov
cmp
pop
hlt
adc
fsubrs
sub
adc
out
aaa
sbb
sti
pop
xchg
add
jno
shll
les
add
int3
or
ja
call
sbb
or
loope
cmp
sbbl
clc
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
jno
mov
cs
mov
insb
push
jecxz
adc
jle
aas
mov
shlb
xor
out
gs
std
inc
push
fildll
mov
aaa
xor
adc
stc
js
ja
test
roll
mov
or
dec
sub
outsl
cmove
icebp
xorb
adc
lahf
pop
inc
jmp
jp
add
gs
or
ss
daa
xchg
repnz
xor
jg
pop
add
jns
in
pop
jmp
cmp
xlat
and
lret
jne
or
cmp
cmc
fwait
inc
dec
leave
out
dec
sub
outsb
pop
cwtl
push
push
clc
sahf
sbb
iret
bound
xchg
dec
mov
sbb
ja
mov
imul
jbe
ljmp
cmp
testb
inc
cli
lods
cmc
and
push
cmp
les
les
xchg
icebp
daa
inc
sub
sbb
dec
scas
jb
in
aaa
into
mov
cld
cmpsl
adc
push
or
test
dec
fs
into
xor
push
ret
ds
jmp
stos
repnz
sub
in
aad
inc
and
or
pop
jle
scas
add
fnsave
into
movsb
cmpb
adc
das
mov
push
mov
xchg
out
sub
adcb
pop
xlat
and
imul
sub
jl
sbb
ret
jge
jo
mov
mov
pop
jns
or
shlb
add
fyl2x
push
sbb
jg
xor
sti
pop
mov
cli
jle
jo
dec
flds
and
stc
sarb
sub
mov
mov
sub
push
sub
xchg
adcb
inc
cli
mov
ljmp
outsb
xchg
cmpsb
insl
adc
fildll
jb
or
fstpt
xor
fistps
and
sbb
mov
push
sub
inc
pop
pop
adc
adc
mov
add
add
or
ljmp
xchg
fbstp
cli
cmpsb
out
dec
push
out
lcall
add
cmpsl
cmc
subb
cmp
jns
mov
jb
in
lahf
mov
push
mov
mov
sarb
push
test
mov
pop
or
pusha
xor
sub
jl
xchg
xor
lahf
mov
jnp
jno
jp
je
inc
fdivs
push
cmp
repz
adc
pop
sub
enter
dec
mov
dec
test
js
repnz
mov
mov
scas
jns
pop
jl
mov
cld
lds
aaa
lret
push
mov
cmpsl
and
call
fsubrl
adc
or
icebp
jmp
mov
bound
into
repz
sbb
cmp
pop
jo
cld
sub
in
cmp
nop
lahf
pop
mov
int
nop
push
mov
pop
icebp
mov
inc
jbe
jg
test
mov
or
js
xor
das
lahf
cmp
ljmp
out
inc
ljmp
jbe
movsb
pushf
pop
sbb
shll
inc
inc
cmp
and
mov
sbb
xchg
orl
cmp
testb
xchg
enter
cmpsl
repnz
dec
inc
xchg
sbb
lret
test
add
xor
lea
imull
inc
divb
push
iret
xchg
cmpsb
push
push
add
xor
or
mov
and
add
sti
mov
xor
clc
mov
mov
mov
test
mov
jne
mov
xor
add
jmp
in
adc
ret
icebp
xor
xchg
sbb
xchg
fcomps
jle
jge
jle
lods
out
lahf
clc
mov
adc
sbb
mov
jne
sbb
jg
out
int3
mov
cmpsb
stc
jne
inc
mov
mov
sub
lods
xchg
cmp
cmp
inc
or
sub
cmp
cmp
jo
inc
inc
pop
dec
cwtl
in
lahf
mov
aas
sarb
int3
fisttps
jecxz
dec
jmp
fnsave
or
js
inc
xlat
sub
mov
fs
sti
lcall
test
loope
xlat
rorl
outsb
les
lock
test
cld
nop
jge
pusha
and
fisubrl
test
jo
out
fcomp
cmp
insb
jle
adcb
sbb
lock
loope
dec
loope
nop
mov
dec
jge
movsb
es
pop
cmp
jg
into
mov
push
sub
pop
sbb
cmp
and
pop
fwait
movsb
mov
jnp
sub
sub
test
addr16
push
pop
fs
mov
lods
in
je
aas
push
push
je
fdivl
xchg
or
arpl
cmp
pop
ret
jbe,pt
adc
push
stos
pop
xchg
and
icebp
mov
ds
mov
jb
jno
pushf
out
dec
push
pop
ljmp
pop
mov
add
mov
jge
mov
cmp
lret
lock
test
push
pop
and
xor
lahf
lock
gs
rcrl
inc
jge
je
daa
imul
xlat
lds
cmc
rorb
fcoms
pop
mov
dec
cli
jne
mov
push
fs
call
xchg
add
fbstp
push
lods
vcvttss2si
popf
shlb
popf
jmp
aaa
mov
jno
sbb
cmp
mov
test
adc
cmp
je
fistl
mov
inc
int3
aam
ljmp
adc
repnz
sarb
jge
push
xlat
dec
iret
cmp
and
nop
inc
int3
mov
dec
inc
xchg
sbb
mov
push
les
lret
mov
xor
outsl
sub
cld
std
xchg
std
pop
or
mov
pusha
mov
add
jbe
popa
sbb
popf
adc
in
push
popa
xrelease
in
lcall
mov
dec
mov
dec
mov
in
and
jo
push
pop
inc
jo
gs
test
sarb
sub
inc
leave
or
pop
inc
push
mov
push
lds
sub
sti
icebp
and
sarb
sub
scas
jp
inc
roll
fisttpll
and
cmp
decl
push
shrb
xorl
loopne
out
stc
push
dec
xchg
mov
nop
xor
shlb
lock
into
or
das
imull
mov
mov
pop
fld
enter
addl
pop
jno
sti
outsl
in
lods
push
mov
push
sub
cltd
scas
loopne
cvtdq2ps
int3
or
lods
jge
nop
adc
jbe
sub
cmp
lret
out
inc
enter
scas
inc
sub
push
fisubrs
dec
cmp
push
sbbl
mov
xlat
or
add
icebp
lea
cltd
xor
add
sub
imul
inc
aaa
lcall
push
data16
push
fists
cmp
dec
push
sbb
adc
test
xchg
ret
loopne
dec
mov
insb
mov
xlat
je
pop
jl
pop
jp
mov
xchg
outsl
popf
jp
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
jmp
push
js
repnz
jno
call
dec
scas
sbb
negl
jle
jle
out
mov
sbb
mov
mov
inc
xor
dec
pushf
xor
jecxz
mov
or
sbbl
jmp
inc
sar
push
and
sbb
dec
dec
lcall
push
and
add
or
lods
ljmp
ss
add
jp
add
jecxz
xor
leave
push
call
xchg
cld
es
inc
jg
mov
xor
shlb
fimuls
lea
push
rcrb
icebp
sahf
jl
ret
xor
ds
add
xor
arpl
inc
hlt
lods
add
cmp
and
ret
cmpsl
jmp
and
xor
in
pop
pop
lcall
inc
cltd
in
pop
xchg
inc
dec
inc
cltd
loopne
add
pop
out
lahf
add
clc
jnp
or
mov
dec
mulb
cmp
inc
add
out
pop
inc
das
fcoml
cli
int3
push
pop
xor
ljmp
xor
repz
addr16
popf
insl
sbb
xor
popf
ja
fadd
popa
cmp
jns
test
movsb
clc
leave
fistpll
jae
andb
dec
pushf
add
jge
add
fidivrl
stc
xchg
adc
xchg
push
lcall
push
jbe
outsl
sbbb
movl
outsb
or
popa
xor
dec
jle,pn
insb
iret
clc
in
cltd
pushf
arpl
xchg
out
add
loop
xchg
jae
inc
cli
cmpsb
dec
mov
fwait
sub
add
repz
in
push
adc
or
push
scas
mov
mov
add
sbb
add
ja
cmc
and
shll
lock
push
mov
sbb
loop
sarl
sub
ds
mov
cmpsb
add
lods
mov
xorl
adc
inc
push
xchg
shl
cld
out
imul
adc
or
xchg
stos
mov
mov
sub
lds
xorb
popa
cld
popf
inc
fistpl
mov
addr16
mov
pop
xchg
sbb
stc
add
and
mov
shll
insl
scas
jl
fmuls
push
inc
jge
fcomp
xor
fwait
cwtl
int
clc
fcoms
cs
pop
mov
daa
mov
pop
cmp
dec
dec
jne
sbb
cmpsb
pop
repz
das
negb
pop
mov
dec
add
jg
fbld
sub
mov
out
int
pop
int3
enter
faddl
adc
std
gs
std
mov
std
xor
jmp
cmp
cltd
cmc
les
cmp
push
and
add
dec
xchg
push
movsb
test
ja
jmp
jnp
lret
or
loopne
and
mov
push
fcom
xchg
pop
sbb
mov
repz
repnz
lock
lret
cmp
jo
sub
pop
push
dec
push
push
xchg
inc
push
stos
sbb
bound
push
sbb
call
adc
push
cmp
push
mulb
or
pop
inc
sbb
or
pop
xchg
add
aad
dec
dec
sub
jno
add
cltd
clc
mov
or
sub
sbb
mov
sbb
lret
jge
insb
dec
rorb
popf
shrb
jl
mov
jns
incb
inc
pop
sbb
xor
jbe
leave
jb
rcrb
cmp
add
jae
addr16
movl
gs
int
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
jmp
dec
repz
insb
jno
in
sbb
push
mov
outsl
jge
jle
add
push
mov
sub
mov
es
pop
dec
fmull
mov
hlt
push
xor
orb
mov
xchg
pop
mov
pushf
insl
stos
sbb
scas
loopne
lock
shlb
push
sbb
in
mov
stos
fs
fisubrs
or
jae
pop
fcoms
in
jno
cmpl
scas
test
out
sahf
sub
aaa
sub
fmuls
xor
jns
cli
pushl
inc
adc
inc
dec
shlb
push
and
push
sub
mov
xor
aaa
add
dec
jl
addr16
add
sbb
scas
mov
cmp
shrl
mov
cs
inc
and
inc
ljmp
cltd
cwtl
gs
mov
push
mov
sbb
mov
cli
lods
sbb
xor
test
push
ljmp
jb
push
mov
mov
popa
in
push
xchg
pop
cld
cmp
js
outsl
into
or
fsubrl
fdivrl
xchg
xor
jecxz
and
call
dec
test
inc
or
enter
mov
ror
push
lods
insl
andb
jae
jb
imul
inc
into
or
jnp
rcl
inc
and
mov
push
pop
fistpll
push
cmp
or
sti
sub
pop
in
sub
push
xchg
cmp
stc
adc
pop
lea
adc
cmp
xorl
jge
xchg
xor
add
arpl
add
xor
push
inc
adc
or
imul
outsb
jg
add
outsl
iret
imul
mov
aaa
inc
ds
ljmp
mov
xor
jg
int
sbb
data16
inc
or
jno
adc
sub
cltd
pushf
lcall
xchg
adc
arpl
dec
rorl
outsl
leave
int
sub
or
jnp
or
in
or
loopne
lret
cli
mov
dec
pop
inc
repz
mov
ds
jbe
ljmp
cmp
mov
sti
inc
mov
imul
cmp
mov
and
mov
xchg
pop
jno
jb
js
dec
jae
xorl
sbb
ja
lcall
jno
cmp
inc
pop
fstps
inc
ret
scas
in
pop
test
add
mov
xchg
addb
fildll
fs
ret
mov
in
lds
in
daa
lods
out
or
jne
loope
insb
fwait
movsb
xchg
mov
mov
addb
daa
shl
adc
mov
cmp
add
or
test
sub
andb
cs
mov
dec
pop
push
lret
scas
sub
in
push
pop
sub
cmp
mov
in
loopne
mov
jnp
sub
xor
cmp
cmp
jb
mov
inc
rclb
stos
dec
xchg
inc
inc
mov
xor
xchg
and
xchg
jb
in
clc
ss
int
ljmp
xchg
pusha
lods
lret
js
jne
jb
into
jmp
mov
stos
std
das
int
das
mov
inc
push
adc
jns
and
sbb
shll
push
cmpsb
sbb
addr16
jle
mov
and
pop
and
and
icebp
push
out
jp
mov
push
subb
pop
jo
xchg
fisubrl
xchg
mov
inc
mov
clc
adc
or
daa
mov
jae
scas
dec
xchg
jb
xchg
notl
inc
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
jmp
out
sahf
mov
addr16
push
subl
dec
jb
and
jle
mov
jle
jb
adc
cli
call
out
fs
and
push
add
lds
mov
jp
dec
lods
mov
fs
mov
fnstsw
jo
xchg
dec
and
dec
cmpsb
inc
mov
and
inc
arpl
imul
or
cmpsb
decb
xlat
jle
cmpsb
mov
adc
jnp
scas
outsl
sub
test
xchg
adc
loopne
cli
mov
dec
mov
outsb
jne
mov
mov
movsl
dec
cli
mov
push
pop
adc
movl
mov
sub
mov
ljmp
adc
mov
icebp
jnp
bound
scas
loopne
ret
fsubr
pop
and
push
mov
push
mov
inc
stos
jbe
inc
cmp
daa
and
icebp
lock
or
pop
xchg
addb
jl
sbb
dec
push
test
ficomps
imul
testl
or
lea
mov
xor
jno
dec
enter
data16
xorl
dec
sbb
dec
jne
push
jae
add
stc
test
addr16
cmpsb
mov
add
cmp
push
mov
nop
pop
pop
dec
scas
xacquire
subl
data16
jg
mov
stos
or
mov
mov
outsl
push
inc
mov
es
das
jbe
adc
push
ljmp
loop
pop
pop
mov
add
xlat
gs
popf
or
daa
leave
sub
and
jne
cmc
ret
and
shrl
inc
jmp
sbb
aaa
daa
dec
jmp
inc
jecxz
movsb
push
dec
imul
in
xchg
mov
fs
push
mov
xchg
jo
cmc
mulb
sbb
xchg
mov
adc
and
cld
push
shrl
jno
and
jne
pop
imull
lock
pop
sub
mov
insl
imul
lahf
cmpsl
adc
pop
mov
lods
pushf
int3
mull
push
dec
mov
pop
dec
adc
mov
xchg
inc
syscall
adc
insl
mov
cmp
xor
jmp
aad
and
pushl
pop
cmp
adcb
into
mov
add
ret
mov
aam
mov
das
inc
shlb
popa
sahf
mov
mov
lea
cmc
sub
inc
xchg
xorl
bound
sub
inc
ja
dec
mov
shlb
push
dec
es
in
dec
mov
shr
mov
shrl
push
add
cs
xchg
xchg
mov
add
xor
mov
lahf
test
cmp
pop
lret
in
ljmp
scas
pop
push
or
jb
push
cmp
jmp
lds
aaa
xchg
scas
movsb
iret
fs
or
int
ror
push
or
xlat
jl
in
cmp
nopl
or
test
mov
jno
mov
jp
in
pop
sbb
sub
int3
mov
mov
xor
xchg
jae
popa
inc
dec
gs
cltd
xchg
mov
pop
lea
mov
sbbb
leave
ficomps
loope
mov
jecxz
xlat
ja
jmp
adc
fidivrl
lret
and
adc
mov
in
pop
sbb
or
mov
leave
bound
int
add
loopne
ret
xor
out
cli
push
xor
inc
ficompl
jle
scas
jbe
cmp
or
gs
sbb
add
sti
mov
ret
add
xor
pop
call
mov
mov
add
jmp
xor
mov
jne
xor
mov
outsl
jge
jle
jne
daa
ds
or
cmp
outsb
sbb
clc
lcall
cltd
xchg
pop
dec
sub
cmp
arpl
movsw
stos
xor
je
push
in
add
xchg
lods
fcom
jmp
rolb
pop
das
mov
dec
insl
sbb
aaa
pop
mov
mov
sub
loop
fldt
ja
fwait
xor
sbb
dec
dec
mov
jo
arpl
sete
imul
or
cmp
fs
and
lea
test
or
fld
dec
adc
pop
ss
xor
push
sub
mov
pop
inc
clc
test
iret
push
insb
xor
nop
enter
or
jb
bnd
dec
xor
out
jne
inc
or
lcall
jg
mov
xchg
incl
cmp
pop
out
shrb
dec
inc
and
xchg
mov
mov
mov
xor
andb
and
jl
or
ret
pop
dec
in
jle
and
add
jg
adc
jecxz
mov
mov
cmp
pop
jle
and
jb
stos
test
and
adc
cmpsb
mov
push
lahf
mov
enter
add
sub
mov
push
outsl
sub
arpl
add
imul
icebp
cmp
scas
xor
sbb
movb
sbb
hlt
loop
inc
cltd
iret
mov
push
adc
push
push
mov
sbb
mov
pushf
imul
es
fs
shlb
bound
mov
iret
sbb
arpl
lds
push
loop
jno
add
xchg
pop
or
dec
mov
fxch
add
mov
out
xor
jae
mov
lahf
loope
jp
xchg
stc
test
jno
je
lcall
pop
ret
pop
outsl
or
pop
lcall
mov
test
xchg
xchg
ss
add
pop
mov
push
inc
mov
inc
and
mov
and
out
aaa
xchg
lret
mov
inc
dec
insl
cld
in
sbb
rorl
les
xor
in
mov
push
scas
in
and
inc
cwtl
out
rorb
pop
daa
adc
and
jnp
iret
jge
xchg
adc
inc
add
cmc
and
sarb
or
test
fwait
add
and
sub
xor
out
mov
jmp
mov
mov
push
rclb
out
fwait
mov
imul
stc
test
mov
fldenv
aad
push
inc
test
popl
imul
mov
mov
addw
add
adc
mov
push
inc
mov
popf
cli
sahf
pushf
enter
add
in
sbb
popa
daa
jbe
adc
scas
mov
mov
or
loopne
sub
sub
xor
dec
scas
mov
inc
sahf
addb
pop
lcall
fmuls
rolb
in
pop
fwait
je
sahf
gs
xchg
add
push
imul
scas
pop
fsub
mov
sbb
push
jmp
or
inc
cmp
jmp
dec
mov
sub
push
push
gs
sub
out
int3
ljmp
mov
xchg
mov
jl
in
inc
jmp
pop
adcb
dec
int3
out
sti
jne
jmp
cmc
in
in
jmp
daa
lods
sbb
movl
rolb
and
repnz
add
pop
jb
imul
mov
je
imul
jmp
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
adc
push
mov
mov
and
mov
adcl
mov
xor
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
push
mov
jno
insl
inc
filds
xor
jle
inc
lods
ljmp
adc
sbb
dec
and
rorl
arpl
mov
xorl
faddp
jge
xchg
or
mov
out
ljmp
pop
mov
adc
xchg
pop
pop
lock
jmp
push
mov
push
in
mov
rcr
pop
rorb
subl
popa
pop
shrb
pop
rol
daa
sbb
out
dec
jb
fisubrl
mov
sub
fidivrl
ret
fldl
xchg
xchg
inc
lods
or
movsb
adc
fldenv
setp
cmp
ret
gs
test
or
push
aas
mov
fdivrs
sahf
jnp
dec
mov
xor
aam
inc
bound
xlat
decl
dec
int
and
test
dec
push
push
das
mov
arpl
xchg
add
xorl
cmp
lds
adc
cld
sub
addr16
test
ljmp
push
add
lcall
sub
in
insl
push
adc
jle
fidivs
jle
data16
aaa
std
jl
mov
or
mov
jge
cltd
nop
iret
adc
xchg
rcrb
push
inc
pop
mov
popa
cmpl
mov
mov
inc
push
call
int
adc
adc
int
push
add
sbb
lret
dec
cs
aad
inc
cmc
jns
mov
std
fcompl
cmp
and
sub
repnz
popf
and
lcall
sub
push
inc
push
daa
cmp
lahf
lahf
sub
dec
test
addr16
dec
xchg
addr16
inc
bound
std
out
xchg
mov
or
mov
pop
pand
inc
cmp
xor
or
mulb
mov
fwait
add
xchg
divl
dec
lods
jo
shrb
inc
jb
ret
cmp
and
xchg
add
stos
fisttps
decl
in
imul
mov
movb
push
adc
jo
icebp
push
mov
xor
stos
fsubrl
push
jo
in
std
mov
mov
xchg
push
enter
adc
lea
sub
or
and
cmp
popa
mov
addr16
lods
adc
fcmovnbe
lret
gs
dec
flds
inc
orb
sub
movsb
mov
mov
and
stos
dec
cltd
nop
cmpsb
xor
imul
mov
dec
pop
mov
dec
mov
je
arpl
inc
fstps
add
add
pop
or
dec
in
add
icebp
add
nop
sarl
push
xor
call
fs
push
xlat
sbb
sub
adc
xlat
mov
and
adc
jne
dec
push
outsb
mov
jbe
xor
fnstsw
mov
insb
mov
inc
push
int3
add
out
mov
mov
adc
out
xchg
fists
push
popf
sti
sbb
loop
mov
adc
mov
mov
xor
adcl
mov
mov
adc
add
neg
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbb
xor
sbb
add
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movl
xor
movl
movl
sbb
movl
adc
movl
movzwl
and
movl
dec
movl
mov
add
xor
add
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
add
add
mov
sub
mov
xor
add
movl
cmp
movl
jb
mov
mov
xor
incl
xor
notl
add
add
adc
imul
mov
mov
sbbl
sub
movl
cmp
movl
ja
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sbbl
xor
xorl
jmp
cltd
jp
pushf
insl
imul
stos
mov
xor
jge
jle
mov
jle
and
cltd
push
push
add
pop
jno
push
xor
sbb
pop
andl
lret
jge
in
pop
loopne
cmpsb
mov
dec
popf
jmp
push
jg
inc
mov
not
xchg
scas
xor
xchg
jmp
pop
pushf
hlt
mov
jbe
inc
test
mov
or
fwait
adc
pop
adc
mov
jns
scas
and
adc
test
daa
mov
inc
mov
dec
rolb
inc
mov
ret
adc
outsl
pop
mov
jg
cmp
mov
stc
roll
sub
mov
jmp
push
xchg
jg
iret
jo
push
cltd
nop
cmp
leave
jno
rcll
decb
insb
rorl
jae
pop
and
xor
pop
adc
fisubl
popf
arpl
sub
test
pop
xchg
dec
into
sub
rol
shlb
cmp
pop
mov
add
sub
popf
adcl
dec
pop
loopne
setb
clc
cltd
out
js
out
in
jge
push
xor
mov
sbb
mov
es
dec
das
loopne
pop
mov
ffree
lahf
sub
dec
hlt
pop
xchg
mov
push
int3
mov
cmp
inc
dec
jne
cmc
and
sbb
fs
lret
jl
sbb
icebp
xor
mov
pop
leave
sub
cmp
loop
add
mov
pusha
push
cmp
shlb
je
pop
cmp
out
sahf
ljmp
dec
or
js
mov
or
inc
jg
dec
in
mov
mov
icebp
mov
mov
enter
movsb
out
jnp
xor
add
lret
xor
mov
rclb
loop
in
sbb
or
sti
js
cmp
xchg
mov
bound
cli
sub
add
imul
mov
sbb
pop
inc
js
dec
shrl
jg
lcall
cli
daa
pop
add
xor
jbe
js
fidivs
hlt
insb
out
xor
push
popa
push
lret
inc
inc
repnz
addl
mov
rcrb
arpl
ret
and
cmc
adcb
dec
repnz
mov
test
pop
in
cmpsl
mov
or
pop
push
sub
xchg
mov
sub
clc
xor
ds
mov
xor
fistpl
rcrb
fnsave
jno
add
popa
xor
xor
in
aas
sbb
mov
jne
mov
push
pushf
push
insl
call
cli
dec
ss
adc
pop
and
dec
jmp
mov
jae
ficoml
movb
xor
xchg
iret
ret
adc
mov
cli
adc
or
in
fiaddl
xor
das
rcll
into
insl
jb
popf
nop
fimuls
sbbb
xchg
mov
shr
push
sldt
mov
mov
xor
movzbl
or
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
add
add
imul
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
push
call
cmpl
jb
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
pop
jne
loope
clc
cmpsb
dec
push
test
jge
jle
leave
pushf
and
and
das
mov
xchg
ja
gs
call
mov
loopne
pop
out
sbb
es
push
cltd
sub
xlat
repz
rol
sti
cmpsl
lret
cmpsb
xchg
pop
adc
fldt
mov
popa
cmp
sbb
or
inc
cmpsl
daa
cs
int3
mov
mov
scas
je
pushf
ror
sub
sub
lcall
dec
std
push
jne
sub
out
testl
add
pop
sbb
sbb
popf
out
push
out
aam
arpl
ds
lds
sub
clc
pop
xchg
dec
push
and
push
cltd
cli
adc
push
sarb
ret
jle
mov
in
push
xchg
lds
aad
lcall
xor
mov
movsb
xchg
xchg
iret
imul
push
cld
xchg
adc
sahf
xchg
popa
xchg
push
cld
xchg
or
repnz
dec
fstpl
jns
cmp
shll
repnz
jg
add
lock
psrlw
iret
mov
out
cmp
pop
outsb
out
cmpsb
and
loope
inc
in
sbb
sahf
xor
fistps
and
push
xor
shl
and
imull
imul
xchg
push
aaa
pop
ljmp
xor
inc
stc
hlt
sub
pusha
or
std
push
sub
fadds
in
lock
sub
jnp
cli
sbb
sub
xor
cld
inc
sbb
andl
jg
adc
push
sub
xchg
or
mov
das
cmpsb
dec
cmpsb
sbb
cmpsb
mov
jb
mov
cmp
fdivrs
push
jb
dec
repnz
les
nop
stc
mov
push
test
mov
xchg
mov
jmp
out
jp
ret
xchg
in
or
jge
add
or
popf
repz
fldcw
in
or
ret
out
and
and
sub
rol
pop
das
in
test
xchg
repnz
cmp
aam
sub
sub
mov
frstor
push
sbb
xor
jmp
lret
mulb
aaa
adc
rcrl
mov
call
sahf
cmp
loop
push
and
jnp
fidivs
or
test
mov
pop
mov
cwtl
fldpi
push
aaa
pop
mov
fs
jecxz
arpl
pop
xor
xor
js
xchg
sub
sbb
xchg
into
mov
pop
and
aam
cltd
xor
ljmp
popf
ret
lock
into
push
pop
push
jecxz
sti
inc
mov
add
inc
mov
popf
add
push
mov
mov
push
mov
xor
mov
adc
sub
loope
lock
push
or
sbbl
addr16
jmp
cmpsb
lret
gs
adc
adc
adc
arpl
push
push
mov
pop
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
push
outsb
adc
pusha
cli
sarb
arpl
add
push
jle
xor
jle
and
xor
push
adc
leave
hlt
pop
adc
pop
subb
and
mov
shl
div
in
rorb
rcrb
mov
jecxz
bound
pop
fistps
inc
xor
adc
inc
cltd
inc
push
repz
push
add
dec
mov
push
or
jp
jne
fwait
ja
out
xchg
xchg
xchg
mov
cmp
sbb
adcl
or
cmp
adc
fisttpll
xchg
adc
inc
icebp
out
mov
pushf
inc
xlat
into
sub
jmp
pop
mov
inc
out
jbe
fbstp
outsb
mov
cmp
ror
sbb
nop
push
pop
cld
repnz
divl
inc
adc
xor
std
je
in
push
push
fs
fwait
enter
shrl
stos
push
xchg
mov
fsubp
cmpsb
xor
and
or
gs
scas
std
push
mov
pushf
pop
in
cmpsl
in
and
sub
ret
jae
and
jae
jp
jle
dec
sar
aam
in
adc
mov
ror
out
ret
mov
xlat
mov
cwtl
aam
call
xchg
pop
push
sub
fldenv
add
mov
jle
push
mov
cmp
mov
dec
scas
mov
cmpb
je
mov
add
sahf
movsb
popa
sub
mov
aaa
fwait
push
in
leave
xchg
or
pop
sbb
mov
mov
xor
jmp
outsl
shr
cmp
je
dec
data16
pop
or
xlat
xchg
adc
adc
sub
inc
lcall
xor
out
js
sahf
shll
dec
test
push
fdivl
jp
das
add
fwait
or
insl
mov
fwait
xor
enter
sbb
mov
push
add
test
dec
fs
cmp
popf
stc
pop
xchg
clc
shlb
sahf
add
sub
je
cmpsl
in
push
enter
mov
push
cmc
add
sub
int3
push
jp
std
push
subl
sbb
mov
mov
nop
mov
add
cmp
mov
inc
jmp
cwtl
or
imul
sbb
scas
jns
popf
aad
insb
mov
inc
lock
ja
and
sbb
dec
adc
psadbw
xor
test
sbb
shl
adc
push
cmp
jno
cli
or
clc
in
test
xlat
mov
cli
fstl
push
fbld
push
iret
pop
adc
popa
aas
pop
ds
rol
push
int3
xchg
cmpsl
lret
scas
adc
out
xchg
sub
dec
test
xor
loopne
ficoms
xor
add
daa
imul
push
jne
gs
cwtl
or
sbb
mov
mov
adc
and
pop
loop
stos
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
jmp
xor
les
cltd
loopne
shrl
jle,pt
xor
jle
imul
sti
dec
push
arpl
push
push
jge
fisubl
iret
nop
mov
sub
fbld
jp
cmpsl
add
lock
repnz
js
xorb
push
ja
les
cwtl
out
cmpsl
fldenv
fstpl
in
les
lods
sahf
jp
in
cmp
xchg
sbb
sbb
jnp
insb
nop
scas
push
aas
add
test
inc
cltd
mov
adc
xchg
out
or
movsb
dec
mov
lea
pop
lcall
lea
insl
pop
mov
cmp
mov
push
xchg
or
pop
hlt
or
clc
push
stos
jno
repz
cmpsb
outsb
out
and
sti
popa
stos
stc
xor
mov
dec
jnp
xchg
popf
mov
int3
xchg
pop
shrw
scas
jno
push
mov
fs
test
jge
popf
int3
xor
sahf
fcmovnu
test
mov
ljmp
sub
xorb
adc
xlat
sub
dec
or
cmc
and
lods
inc
dec
arpl
mov
call
outsb
push
daa
mov
fs
in
mov
scas
ds
outsb
outsb
dec
lret
add
mov
jp
mov
inc
adc
sarl
sbb
pop
mov
repz
xor
iret
aaa
pushf
pop
or
fcom
or
mov
pop
cli
inc
or
dec
dec
mov
repnz
inc
add
popf
pop
lret
and
adc
add
ljmp
lea
jne
in
sti
sub
xlat
add
stc
cmpsl
lret
mov
clc
mov
idivb
insl
fs
movsb
das
les
sbbb
add
insl
xchg
into
cld
xlat
push
inc
and
movsl
or
fidivs
cmp
sbb
imul
or
inc
repz
jne
mov
mov
or
adc
outsl
movsl
push
loopne
sbb
add
pop
pop
mov
and
ja
xor
insl
mov
dec
mov
cmp
jge
daa
adc
repnz
popf
nop
imul
ret
push
lret
add
pop
jge
mov
sti
mov
xchg
fistps
ret
sar
rcrl
push
jecxz
cmp
rcrl
xor
fnstsw
dec
aaa
shll
sub
xchg
jl
push
test
daa
fwait
aad
mov
gs
mov
or
xor
sub
cmpsb
aas
mov
fists
adc
mov
jmp
ljmp
mov
sbb
pushf
stos
xchg
js
inc
ja
pop
out
or
jne
in
push
stos
inc
add
and
les
or
out
in
enter
mov
loopne
aas
icebp
or
cld
add
in
daa
mov
jo
imul
jbe
cld
push
push
int
iret
in
call
fs
pop
mov
mov
sbb
push
pop
dec
mov
mov
lahf
sahf
mov
sbbb
fidivrl
enter
mov
in
fdivp
add
xor
cmp
mov
jmp
test
jno
ja
shrb
stos
aam
loopne
jle
xor
jle
shrl
xchg
lods
dec
es
call
fucomp
mov
pop
int
pushf
shl
mov
stos
sti
mov
stos
rcr
hlt
es
ja
xlat
jge
loop
in
fwait
cmpsb
clc
mov
in
call
sub
rcrb
aam
ja
call
xchg
ljmp
mov
pop
jo
inc
leave
and
pop
cwtl
add
orb
push
jmp
xchg
sub
stos
xchg
xchg
pop
xchg
jmp
dec
adc
push
mov
ficoml
or
add
push
mov
addr16
les
xchg
sub
aam
rolb
imulb
cmp
nop
ds
cmpxchg
mov
jmp
inc
fsubrl
xchg
insb
nop
jno
cltd
jp
or
xchg
push
dec
dec
clc
pusha
mov
mov
sbb
push
adc
addb
std
test
inc
adc
push
xor
cmpsb
sub
or
daa
jo
lock
pusha
inc
or
pop
inc
cmp
mov
xchg
adc
cs
std
mov
cmp
jg
enter
icebp
mov
push
outsb
inc
vmwrite
pop
push
test
popf
pop
test
sub
sub
and
cmp
sbb
or
mov
jne
mov
jg
outsb
mov
and
jle
mov
cld
arpl
cmpsb
cmp
xchg
fisttpl
xor
and
in
fnstcw
lds
xor
jle
jp
fs
fdiv
js
sub
fsts
mov
mov
imul
cmp
xchg
repz
scas
lret
int3
xor
dec
mov
mov
arpl
pop
inc
adc
mov
push
imul
push
jns
das
stos
fsts
jae
enter
push
pop
jae
ja
fcomip
dec
popf
mov
push
shl
cmp
test
xchg
pop
mov
arpl
pop
pop
lahf
or
jae
push
xchg
cmp
scas
xor
or
lret
inc
and
ds
adc
cwtl
testl
popf
mov
nop
test
mov
icebp
js
sarb
pop
add
add
mov
inc
cmp
and
push
jp
inc
mov
fists
out
out
adc
dec
lds
sahf
add
cmp
adc
mov
adc
mov
xor
adc
fmuls
or
inc
fimuls
lods
cmc
shl
test
fisubs
add
inc
scas
imul
pop
adc
cmp
or
arpl
pushf
mov
nop
psrad
mov
arpl
out
add
lahf
ret
out
mov
jp
fcmovnbe
inc
or
adc
mov
xor
clc
loopne
imul
outsl
lahf
sub
cmp
dec
pop
xchg
aad
out
cwtl
lcall
mov
sub
xchg
add
add
cld
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
jmp
pop
xlat
pop
jmp
jae
push
jmp
cmc
pop
data16
lds
jge
jle
jp
mov
orb
jb
xchg
cld
pushl
divb
insl
pop
dec
hlt
out
mov
lds
fimuls
cmp
push
xor
mov
cmp
lods
int3
xchg
arpl
in
cs
out
pop
or
mov
ljmp
dec
mov
fistl
lea
jle
add
mov
push
imul
mov
jnp
push
jl
inc
js
gs
mov
jl
dec
and
lret
xor
cltd
mov
aam
jae
jb,pn
int
pop
add
adc
das
das
add
and
fnstcw
icebp
mov
addr16
jb
sub
call
sub
pop
push
mov
aas
cwtl
shr
sub
ljmp
pop
jg
xchg
xorb
adcb
cmp
inc
pop
cmp
scas
sub
test
xchg
add
add
mov
ja
pop
mov
in
into
mov
daa
test
fsubrl
xchg
outsl
scas
fadd
sarl
lahf
xchg
mov
dec
es
repnz
pop
and
pop
jecxz
inc
pop
mov
push
je
push
add
int3
mov
cmp
lret
inc
xchg
dec
in
ds
jp
test
js
or
jle
in
jnp
jne
jg
ficoml
fdivs
push
push
cltd
push
xchg
lret
jbe
jns
or
mov
xchg
dec
xchg
sti
and
cmp
xorb
fdiv
bound
sbb
and
gs
mov
ja
add
push
es
dec
cli
imul
scas
push
mov
out
mov
movsl
xor
jle
inc
hlt
aam
iret
and
jno
jle
inc
jge
pop
jno
daa
xchg
pop
jmp
xor
push
fdivrs
dec
mov
cmp
mov
lods
clc
and
repz
lret
outsl
sbb
inc
jmp
cli
jo
pop
jmp
bound
dec
mov
test
cmp
adcl
pushf
push
jmp
bound
push
nop
pop
sub
jne
call
out
clc
xor
cmp
icebp
cmp
xor
rorb
inc
jp
xor
int3
sub
cmpsb
lods
ss
dec
pop
test
fcoml
rolb
sbbb
inc
dec
mov
into
cmp
out
or
fistps
xor
sti
mov
mov
popf
js
mov
repnz
popf
cmp
sub
lods
jmp
mov
or
mov
dec
scas
add
add
jle
jmp
cs
cmc
inc
stc
enter
inc
shr
movsl
pusha
sbb
int3
hlt
das
push
and
iret
jno
cmp
sar
push
pop
out
insl
in
int
stc
jne
out
loope
xchg
nop
shlb
jle
outsb
subl
sub
lods
and
mov
or
jb
cmp
add
adc
sbb
sub
jo
and
int3
jnp
mov
loop
jne
scas
nop
mulb
jge
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
mov
sub
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
xor
andl
add
movl
mov
movl
mov
movl
mov
push
movl
movl
mov
mov
movl
cmp
movl
je
andl
mov
xor
subl
xor
lea
xor
cmp
jne
jmp
add
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jmp
gs
jns
dec
jno
xor
and
jle
fistpll
inc
fs
stos
out
into
xlat
sbb
rol
lea
fst
lahf
mov
pop
iret
scas
and
mov
or
add
pop
mov
loope
add
cmc
jmp
test
mov
push
ret
fs
xchg
sbb
adc
lods
das
shrb
pop
push
cmpsb
sbb
xor
iret
mov
mov
inc
neg
pop
cmp
dec
mov
sets
dec
push
movsb
mov
dec
mov
lcall
pop
lods
and
sub
lock
sbb
notl
add
inc
mov
test
or
and
jge
xchg
in
mov
inc
inc
int
iret
ljmp
outsl
fs
roll
jmp
mov
xor
andb
sub
sti
stos
das
movsb
arpl
xor
hlt
mov
adc
bound
sti
xchg
sahf
cmc
xor
push
pop
cmpl
xchg
bound
sub
aaa
mov
add
jnp
sbb
add
fsts
xor
enter
mov
clc
ja
test
adc
out
xchg
cmc
jg
fmull
sub
stos
mov
add
dec
sbb
int3
mov
push
push
fnstcw
dec
shlb
dec
sub
addr16
inc
push
hlt
sbb
and
sti
push
push
mov
rorb
jecxz
addr16
xchg
mov
inc
mov
adc
rcll
sbb
out
popf
into
mov
xchg
leave
repnz
sub
insb
out
andl
xchg
xchg
rcrb
cs
add
adc
sti
push
sbb
sub
mov
lret
sub
push
jl
and
mov
push
sub
movl
inc
mov
mov
fidivl
icebp
push
adc
cmpsb
inc
inc
xor
xchg
sbb
cmpsb
icebp
addr16
arpl
mov
mov
mov
sub
data16
push
mov
js
mov
lcall
pop
dec
mov
adc
test
mov
inc
add
xor
mov
pushl
mov
call
jmp
jmp
push
jo
es
mov
shld
ret
fistpll
daa
cmpsl
sbb
jbe
stc
jl
inc
jecxz
sarb
xor
sbbl
das
movsl
sub
xchg
push
fwait
add
jp
lock
lret
sbb
add
jmp
das
bound
int3
lods
lret
pop
leave
and
adc
dec
mov
daa
out
cmp
adc
punpckhwd
xchg
fidivrl
mov
leave
jl
stos
or
pusha
cmp
push
mov
jge
mov
stos
mov
adc
or
gs
jl
mov
aad
in
rolb
das
mov
mul
push
gs
int
dec
mov
sbb
aaa
mov
fldt
push
sub
test
cmp
sbb
in
push
mov
push
xor
pop
ja
lock
insb
mov
dec
fwait
inc
in
inc
jg
cmp
rcrl
test
ret
adc
ja
jae
ss
cmc
loope
imul
call
pop
cmp
fistpl
in
popf
sub
mov
mov
mov
adc
push
cmpsb
addb
mov
adc
aas
add
cmp
cmpsl
mov
sub
push
dec
movsb
push
mov
jecxz
mov
adc
sahf
aas
cli
xor
bound
stos
and
add
scas
xchg
push
ficomps
xor
push
jno
mov
inc
xlat
cmpsb
lret
pop
dec
adc
ss
nop
add
jecxz
mov
or
mov
andl
push
into
push
lret
and
pop
ljmp
jns
mov
repz
sar
xchg
int3
push
inc
xor
inc
or
xchg
fsubrs
jb
jle
test
mov
mov
repz
test
mov
scas
ljmp
jle
cmp
imul
adc
xor
dec
push
adc
sub
adc
push
mov
frstor
cli
jns
jmp
jg
jo
pop
repz
jg
dec
xlat
lahf
sahf
push
subb
mov
xchg
cmpsb
cltd
lods
les
mov
leave
ret
push
mov
sub
movl
push
call
cmpb
movl
je
andl
xor
jmp
push
addl
call
movl
cmp
movl
jl
add
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbb
lea
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
xor
mov
lea
mov
adc
mov
mov
mov
xor
mov
orl
mov
sub
mov
addl
push
push
sub
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
xor
sub
push
xor
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
add
movl
mov
movl
mov
mov
cmp
mov
mov
je
mov
xor
add
imul
mov
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
mov
movzwl
mov
jmp
shll
sbb
inc
out
jle
inc
sub
subb
jle
and
jle
leave
clc
addr16
adc
jmp
call
ret
dec
jne
or
sub
sub
jmp
mov
hlt
pop
pop
sub
fcmovnu
add
daa
sarb
inc
jae
call
out
pop
es
adc
add
ljmp
out
mov
inc
push
mov
negb
in
fdivrs
push
into
ljmp
add
pop
sub
dec
adc
xlat
arpl
bound
xchg
xor
add
jb
cmp
mov
mov
pop
sbb
lock
jnp
add
mov
loope
jae
test
lods
mov
sub
ret
fs
dec
insb
fiadds
shrl
movsl
addr16
sahf
pop
outsl
cmpsb
jp
add
les
adc
xor
pop
cmp
pop
jp
lock
popf
xor
push
ds
sbb
xor
jno
je
pop
movsl
pushf
fidivl
xor
lods
dec
pop
sbb
inc
push
inc
call
movsb
cmp
cmp
je
push
test
xor
pop
push
push
sub
lahf
fsts
icebp
push
pop
and
negl
inc
jb
xchg
adc
jl
sbb
ds
mov
lret
enter
cs
inc
cmp
jle
push
jne
jbe
cs
mov
mov
fsubp
inc
and
addr16
ficompl
push
and
dec
cltd
xchg
push
repnz
or
jp
or
icebp
mov
xchg
sub
loopne
inc
cmp
fs
mov
dec
and
sub
or
pop
insl
shlb
sub
lret
jno
push
fwait
dec
sbb
jl
dec
add
push
aad
xor
outsb
cmpsb
xchg
jno
pop
mov
mov
inc
jb
xchg
lcall
or
sbb
mov
adcl
loope
jg
add
sahf
mov
in
xor
push
adc
lods
mov
ret
jnp
mov
pop
mov
stos
daa
cmpsb
jb
in
stos
xchg
loop
addr16
je
and
jb
inc
push
push
loope
jge
aad
mov
cmp
cmp
jmp
movsb
push
call
cmp
xor
mov
mov
ror
imul
test
int
comiss
pop
jne
idiv
out
std
int3
mov
xor
test
mov
dec
out
and
mov
jp
xchg
mov
bound
xor
movsb
dec
cmp
mov
subb
or
and
sub
fldcw
mov
mov
lea
icebp
rolb
mov
xchg
gs
and
ret
xlat
and
pop
movsl
jp
int3
pop
scas
cmp
xchg
in
sub
push
push
int3
push
fs
sbb
mov
cmp
pop
mov
movl
movl
jmp
out
psubd
push
cmc
mov
loop
movsb
or
iret
jle
and
jle
test
in
lds
and
ret
adc
jl
clc
jmp
bound
arpl
stos
in
sahf
jmp
push
mov
std
xor
xchg
sar
jo
enter
dec
sbb
jl
cwtl
shlb
or
mov
test
mov
push
mov
push
add
scas
clc
ret
int
ret
imul
ss
or
imul
loopne,pt
cmp
jmp
shr
sub
test
xor
and
fcom
mov
adc
arpl
int
lahf
bound
mov
or
shlb
xor
add
imul
dec
fwait
dec
mov
xchg
fwait
inc
outsb
idivb
int
data16
daa
jg
in
jbe
or
xorb
or
jp
rclb
xchg
mov
sub
daa
testl
lea
cli
adc
pushl
clc
sub
adc
in
mov
jno
insl
fistpl
xor
xor
mov
cmp
adc
xchg
lahf
sti
rclb
pop
cwtl
sub
or
dec
mov
cmpsl
pop
mov
dec
adc
jno
out
pusha
xor
andl
push
adc
addl
test
sahf
or
mov
or
daa
push
inc
push
lods
add
imul
jecxz
das
insl
dec
push
xchg
push
leave
or
and
enter
enter
lret
pushf
xchg
jecxz
popa
in
loope
adc
pop
adc
xchg
and
pop
ret
cmp
or
out
xchg
sub
scas
cmp
xor
lds
stos
fisubrs
mov
jle
in
js
lock
lahf
or
fwait
test
add
bound
ficoml
test
pop
cld
mov
filds
xchg
push
mov
mov
mov
outsl
xor
mov
repz
and
fwait
gs
sub
sub
pop
push
pop
sub
loopne
inc
stc
mov
adc
ss
inc
or
xchg
shll
dec
in
roll
cmp
data16
mov
int
mov
adc
mov
cmp
mov
push
push
sub
sub
fwait
enter
adc
bound
lcall
lret
mov
jne
mov
sarl
stc
dec
sbb
push
cmp
cld
popa
ret
pop
add
adc
push
data16
call
pop
ljmp
or
in
cmp
sbb
into
pop
leave
scas
cmpsb
sbb
pop
sub
inc
int3
clc
das
jbe
sub
mov
insl
inc
xor
popaw
mov
daa
mov
test
loop
dec
cmp
mov
pop
push
int3
xlat
add
xor
and
jbe
cmp
mov
xor
or
mov
mov
jne
mov
xor
mov
subl
xor
mov
subl
add
mov
movzwl
andl
not
and
movl
mov
movl
mov
jmp
jmp
dec
sbb
jno
push
cwtl
mov
jb
cmpl
jle
imul
fbstp
sub
jns
xchg
das
mov
setne
leave
sub
mov
loop,pn
cmova
repnz
andb
cld
leave
arpl
outsl
add
jg
add
roll
jle
jle
sarl
popf
mov
xchg
out
hlt
mov
mov
fwait
xor
iret
sub
adc
xor
pusha
pop
repz
scas
add
mov
movl
jg
lret
push
insl
dec
and
push
mov
movsl
arpl
lahf
fld
jl
cmp
xchg
cmp
lcall
fdivrl
insl
in
mull
cmp
lds
repnz
sub
dec
cli
or
xor
push
imul
out
mov
push
repnz
outsl
xor
fs
dec
dec
mov
in
push
sbb
jl
xchg
sbb
outsl
stos
cmp
dec
lock
push
xchg
sbb
clc
fsts
and
mov
mov
lods
idivl
push
lods
push
sbb
dec
pop
inc
out
enter
push
ja
pop
loope
fnstenv
scas
popf
pop
clc
rorl
stos
pop
outsb
mov
js
stos
mov
cld
scas
sahf
sahf
jne
movsl
or
mov
and
dec
roll
rorl
xlat
out
xor
jns
pop
xchg
imul
mov
adc
call
js
out
pop
ljmp
in
imul
xor
mov
and
int3
inc
pop
rclb
xor
add
rclb
cmpsb
rcrl
loopne
out
xor
add
cltd
jbe
test
dec
mov
cmp
sub
and
pusha
shll
enter
shll
mov
mov
add
je
aaa
fs
or
jp
repz
lret
add
sar
pop
xor
dec
mov
in
mov
gs
pop
insb
sbb
pop
add
loope
inc
stos
ss
dec
nop
mov
xchg
jg
jge
iret
or
incb
out
gs
je
dec
loop
lods
xorb
push
mov
imul
add
push
add
jecxz
pop
xchg
cli
ds
pop
push
lock
mov
fiadds
push
popa
inc
insb
inc
cs
xlat
scas
fidivrs
and
leave
scas
mov
fnstcw
gs
cmp
ret
bound
out
test
adc
test
dec
cmp
push
sub
bswap
andl
sbb
pusha
and
cli
pop
iret
or
lcall
rol
ja
and
out
frstor
mov
sbb
repnz
aad
push
or
int3
dec
sub
mov
mov
out
mov
inc
mov
push
mov
adc
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
or
jmp
outsl
cmpsb
insb
inc
jne
jne
push
push
mov
jge
dec
dec
sub
jle
in
jle
fistpl
lock
xchg
sbb
mov
addr16
popa
je
lret
daa
subl
lahf
sar
dec
daa
insb
es
shrl
or
cmp
ret
movsl
jae
pop
cmp
icebp
xor
push
rolb
push
aas
ret
jl
jo
fs
int
andb
pop
and
loope
cmc
mov
or
jmp
pop
enter
mov
dec
jle
inc
pop
in
xor
scas
mov
inc
and
cmc
imul
ret
push
dec
ret
aaa
test
pop
leave
and
sub
cld
push
push
xor
popa
mov
inc
jecxz
pop
clc
cmp
cld
adc
xchg
subl
mov
lret
jae
lahf
mov
movsl
pop
gs
xor
mov
sti
mov
je
test
into
pushf
xchg
sbb
sub
pop
xchg
in
jo
leave
jmp
int3
xchg
daa
pusha
dec
sub
clc
dec
sub
lds
inc
sub
mov
mov
data16
insl
dec
xchg
neg
cmc
stos
icebp
xchg
jno
jl
pop
and
popa
imul
test
add
outsl
mov
push
mov
lahf
lods
cmpsb
jmp
jle
lds
mov
movl
inc
movl
mov
mov
xor
mov
incl
lea
mov
sbb
mov
mov
push
movzwl
add
mov
lea
mov
mov
and
push
or
push
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
movl
jmp
xor
inc
arpl
jae
aas
or
mov
jg
jle
jl
adc
adc
rorb
adc
xchg
out
and
stc
cmpsl
stos
scas
or
sbb
jg
daa
inc
movsb
jb
and
pop
sub
sub
sbb
xchg
cmp
mov
lret
int
jae
mov
fldenv
add
jo
sbb
pop
inc
shrb
cmp
xchg
push
dec
scas
cld
mov
mov
push
imul
loopne
test
out
ss
icebp
xchg
pusha
xchg
fcmovne
xchg
push
inc
jg
ret
xchg
ds
bnd
jp
ljmp
push
rcrl
mov
dec
or
add
xor
xor
push
and
lock
gs
std
aaa
cmpl
push
fildll
ficoms
into
and
divb
out
push
insl
das
pop
mov
pushf
sahf
cwtl
fwait
xchg
lds
dec
xchg
lods
cwtl
cmp
dec
dec
cwtl
ds
sbb
push
pop
js
popf
xchg
mov
mov
dec
xor
lea
adc
fsubrs
shll
test
nop
mov
aaa
arpl
push
xchg
lret
sub
mov
jno
scas
jo
jns
loopne
mulb
xor
andl
mov
addl
xor
xorl
xor
addl
add
add
div
movl
mov
movl
movl
movl
cmp
movl
jmp
or
add
aam
lret
imul
mov
push
aad
jle
jg
jle
jg
mov
sti
outsl
jb
add
mov
mov
sahf
xor
daa
out
das
test
lea
lock
call
and
rclb
pop
fbld
sbb
mov
rclb
push
mov
mov
push
shrb
push
stos
shll
jmp
faddp
test
insl
outsl
cmpsl
aas
mov
fcmovbe
xchg
out
enter
cmpsb
clc
out
nop
adc
jmp
mov
cmpsl
pop
icebp
mov
repnz
add
rol
daa
mov
scas
xchg
mov
sahf
push
aas
jo
loope
cmp
push
lret
leave
std
stc
inc
stos
xchg
jno
mov
sbb
cmp
pop
out
pusha
es
hlt
aam
and
stc
aad
icebp
jmp
cs
mov
dec
fwait
jnp
ss
cmp
repz
jecxz
or
repnz
cmp
mov
in
or
pop
fidivrl
adc
das
mov
mov
cwtl
jb
lock
fistl
dec
lret
dec
xchg
addl
pop
and
cmp
fdivr
dec
xor
sbbb
inc
into
test
sti
lahf
mov
scas
and
rorl
mov
and
mov
add
neg
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
and
mov
inc
mov
imul
mov
mov
movl
cmp
je
sub
mov
sbb
orl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
jmp
xor
xor
outsb
fucomi
dec
int3
xor
in
jle
insb
lret
enter
cmpb
pop
aas
lds
ss
testb
and
add
xchg
leave
pop
imul
mov
dec
mov
dec
mov
pop
pop
pushf
push
xchg
dec
addr16
sbb
inc
inc
gs
repz
test
ds
jp
sbb
inc
in
fldl
jecxz
inc
mov
and
xor
mov
rorb
shl
les
fidivs
mov
icebp
xchg
mov
sbbb
mov
jno
push
addr16
push
jmp
je
sahf
movsl
insl
push
push
stos
out
sti
sub
mov
adc
adcl
adc
mov
pop
dec
push
xchg
sub
adc
sbb
mov
lcall
popf
out
sub
push
inc
add
inc
pop
daa
sahf
xor
pop
rorl
inc
or
js
ss
adc
jo
enter
pop
enter
stc
fldenv
or
mov
push
imul
or
repnz
shrl
movsb
call
test
cmp
outsl
or
mov
jle
sub
lods
scas
ret
adcl
or
imul
bound
add
jmp
adc
test
or
sarl
in
jle
out
mov
lcall
bound
out
nop
pop
push
mov
fs
ja
xchg
fisttpl
gs
jmp
jb
xorb
pop
pop
cwtl
mov
mov
sub
lds
pushf
xor
inc
pop
fsubr
jno
fistps
loopne
and
inc
ljmp
lods
call
gs
fiadds
stos
or
test
shlb
add
fsubr
imul
outsb
test
loope
scas
inc
mov
iret
xchg
mov
or
jge
out
xor
sbb
inc
andl
test
sarb
scas
aam
into
dec
pop
adcb
jnp
mov
jge
fistps
out
mov
jbe
dec
dec
mov
inc
cmp
pop
popa
xchg
movsl
cmp
xor
outsb
cli
aam
pop
pop
test
insb
out
lods
mov
mov
pushf
lret
dec
sbb
mov
cmp
sub
sub
or
dec
mov
popf
add
xor
xor
bound
push
cmpb
jl
gs
jp
dec
inc
mov
sub
adc
or
rorb
outsb
xchg
int
lahf
push
enter
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
test
loope
jno
jmp
jmp
cmp
jle
in
jle
rcrl
inc
pop
jne
jmp
mov
test
gs
je
pop
jae
lods
pop
dec
sub
and
addr16
adc
out
dec
testl
ja
mov
sbb
xchg
jge
js
push
xchg
adc
pusha
stos
es
xlat
adc
pop
fcomp
or
inc
mov
adc
adc
push
cwtl
push
mov
lcall
dec
in
pop
xchg
cmp
sahf
jmp
jmp
adc
rcll
mov
loopne
pop
cmp
test
rolb
add
jns
aam
jb
and
out
cmp
inc
xchg
in
sub
xor
pop
push
xchg
in
xchg
out
mov
mov
out
xlat
and
sahf
scas
inc
and
neg
int3
bnd
cmp
fisubs
inc
sub
xchg
add
movsb
inc
rcrb
stc
daa
repz
js
xchg
xor
aas
lods
cmp
in
out
sub
repnz
lcall
daa
cwtl
arpl
icebp
cmp
sbb
cltd
or
adc
jp
inc
jbe
xor
cmp
adc
dec
cmp
lods
shr
inc
insb
aam
xchg
cli
insl
adc
adc
jl
daa
out
stos
stos
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
push
adcb
sub
jmp
xchg
lret
scas
fidivrs
in
jle
mov
pop
cmpsl
mov
push
sbb
movsl
mov
movsb
push
fs
jge
adc
imul
test
test
sub
jg
js
notb
rcll
rorb
add
sbb
in
decb
xor
scas
or
push
dec
sub
jae
dec
pop
lods
pop
mov
outsl
test
cld
fbld
jmp
and
shl
or
jmp
inc
pop
jne
mov
pop
cli
mov
sbb
cmp
push
mov
adc
xchg
sbb
push
xchg
fldt
pop
test
dec
jbe
push
lds
daa
into
daa
adc
pop
nop
scas
mov
jmp
leave
mov
dec
jmp
loope
push
sbb
loope
mov
mov
in
cmp
pop
cmp
xlat
mov
outsb
int
out
mov
cwtl
cmc
fmuls
jmp
adc
sbbl
loope
scas
pop
test
mov
cwtl
lods
ret
or
inc
xor
jne
movsb
test
aad
cmp
ds
fidivs
in
ja
rorb
xchg
xor
mov
and
cs
je
pop
mov
int
loopne
add
and
jae
jb
push
cltd
cli
call
movsl
pop
jbe
xchg
cmp
jbe
addb
imul
sub
mov
jmp
mov
mov
jmp
test
stc
test
sbb
aad
mov
in
jle
sbb
lods
adc
clc
lock
rcl
lea
stos
push
xlat
fstpl
and
aam
test
push
add
cmp
sbb
faddp
mov
out
stos
sbb
mov
sub
out
cmp
jcxz
cltd
push
stc
mov
mov
or
push
fstpl
decl
negl
inc
sahf
shlb
in
out
jnp
push
mov
aam
test
out
fiaddl
pop
hlt
fcomi
xor
mov
es
imul
lea
adcl
out
mov
sbb
lds
cmc
sub
jg
into
cmc
lret
loope
addl
arpl
faddl
lcall
jns
ss
xor
xchg
push
leave
cmp
divb
fcomps
es
aad
cli
bound
je
mov
pop
shr
mov
adc
cwtl
enter
test
dec
loope
into
cwtl
add
dec
stc
ret
adc
adc
adcb
in
nop
sub
vpcomw
jbe
lahf
out
mov
xor
jle
std
push
adc
insl
fdivrs
push
repz
outsb
cmp
mov
es
ret
sub
add
push
jb
int3
xchg
xor
cmp
je
mov
addl
jmp
mov
jmp
xor
xchg
xor
jmp
cli
fnstsw
in
jle
outsb
les
fimuls
mov
jle
enter
clc
pop
ds
xchg
add
add
sti
lahf
outsb
and
push
cmpsb
out
js
les
out
jp
xchg
mov
in
lret
aad
cmp
jmp
aas
push
test
pop
xchg
lea
xorb
adc
aam
xchg
add
add
cwtl
fdivrs
xchg
imul
jle
lds
xchg
push
ljmp
cwtl
xor
pop
sbb
or
pop
jb
mov
dec
leave
adc
jg
jae
sbb
fnstcw
xchg
push
mov
loope
insb
aam
add
mov
and
inc
mov
jne
pop
das
dec
repnz
sub
icebp
mov
or
sbb
stos
data16
imul
in
loop
sbb
int3
in
inc
pop
pop
mov
xchg
fdivrl
and
lahf
out
mov
sbbl
loop
out
cmp
adc
gs
add
cltd
inc
ret
jbe
and
mov
enter
xchg
movsl
xchg
xor
pop
jecxz
loopne
jnp
sub
cmp
daa
stc
bound
insl
dec
sbb
and
cmp
test
lcall
call
in
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
and
mov
sbbl
push
xorl
push
mov
mov
sub
or
mov
xor
adcl
push
mov
and
add
mov
or
lea
mov
mov
mov
xor
sbb
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
negl
jmp
add
jmp
mov
lret
movsb
fdivl
pusha
fidivrl
jp
jle
icebp
movsl
pop
push
jae,pt
push
rcll
mov
clc
lock
scas
addr16
dec
xchg
mov
xor
out
ja
cld
and
ret
mov
inc
ljmp
push
and
sarl
dec
adc
and
sti
push
fnstcw
push
fnstcw
dec
cmp
dec
dec
imulb
mov
xor
mov
xor
or
cmc
mov
nop
adc
sub
test
dec
sub
stc
ret
arpl
add
cmp
dec
repnz
outsl
divl
sub
sbbb
sub
pop
sub
arpl
sub
add
adc
cmp
insb
jle
inc
xlat
sbb
dec
xchg
xor
stc
jle
inc
mov
sub
popf
jo
lods
mov
jno
mov
leave
xchg
push
mov
mov
fidivs
cmp
pop
into
pop
jo
shr
fildll
mov
jns
xchg
out
loope
dec
sub
jecxz
insb
dec
enter
ljmp
rorb
shrb
or
das
icebp
mov
push
pusha
sub
aas
dec
les
hlt
adc
adc
inc
ljmp
dec
push
mov
outsb
sub
sbbl
dec
movsl
mov
sub
aaa
cli
pop
insl
adc
jmp
sub
cmp
imul
mov
sbb
push
mov
insl
cli
pop
dec
pop
or
adc
jecxz
mov
mov
or
outsl
lea
mov
sub
lret
mov
and
mov
adc
xor
xor
fs
leave
sub
subb
lock
xor
cmp
sbb
mov
in
cli
std
xchg
arpl
mov
sub
jl
fnsave
in
xchg
or
push
out
sbb
inc
mov
fs
out
lea
loop
push
inc
sbb
neg
xor
sbb
mov
in
shrl
js
or
rorl
pop
xlat
movsb
arpl
in
repnz
cmp
imulb
je
imul
fcomps
push
mov
push
testl
inc
mov
push
pop
imul
addr16
gs
mov
mov
mov
rcpps
cmp
inc
in
int3
inc
pop
xchg
lret
fldcw
sbb
les
icebp
push
push
cmovle
pop
dec
cmp
push
mov
cld
push
ret
add
pop
sbb
push
lock
lods
mov
out
in
ret
sahf
xlat
scas
dec
inc
mov
mov
xchg
push
scas
inc
les
mov
inc
or
inc
in
xor
sub
inc
add
add
add
leave
add
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
push
call
cmpl
jb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
mov
xor
and
add
sub
mov
or
mov
mov
mov
xorl
mov
andl
mov
jmp
jge
mov
mov
ds
shrb
jp
jle
jmp
xor
adc
mov
dec
inc
lret
je
dec
lret
cwtl
xor
in
dec
mov
cs
jle
dec
aaa
xchg
mov
mov
testl
sbb
push
xlat
pusha
test
movsb
notl
into
in
fiadds
xchg
orb
clc
inc
inc
mov
pop
lock
movsl
ret
pusha
pop
mov
jge
inc
push
cmp
fdivrl
repnz
pop
or
fidivrl
ljmp
jae
mov
outsb
pop
fidivrs
xor
cld
test
ds
imul
iret
mov
call
inc
mov
lret
pop
dec
add
mov
nop
mov
add
mov
dec
loop
jge
sub
fwait
push
sbb
sub
imul
in
cwtl
repz
ljmp
jg
or
test
inc
xor
jno
sbb
fwait
pop
cmp
jbe
push
xor
mov
cmp
pop
xchg
jge
push
or
fisubrs
or
xorb
cmp
sub
jg
clc
repnz
in
sbb
leave
sbb
adc
in
mov
and
call
movsl
cs
orb
insb
not
mov
mov
orb
in
aad
mov
mov
jbe
fildl
push
sub
push
scas
movb
in
insb
pop
sbbl
xor
in
or
icebp
fisubl
enter
imul
jecxz
loop
sahf
int3
jno
add
mov
test
sahf
in
and
mov
cmp
mov
dec
xchg
test
rclb
lods
in
dec
jg
mov
sahf
adc
pop
push
push
jo
popf
xlat
outsb
jle
mov
sti
sti
push
mov
jb
sbbl
pop
push
or
and
out
out
mov
mov
mov
xchg
xchg
add
cli
pop
or
mul
jl
sbb
xchg
sarl
leave
add
lds
xor
cltd
jns
or
lock
jle
mov
scas
mov
push
jno
inc
test
add
sbb
lret
lret
mov
dec
mov
sub
and
mov
in
ja
outsb
das
or
sbb
pushf
popa
mov
xchg
sbb
push
mov
lds
sub
pusha
or
and
ds
lret
dec
sub
out
adc
fs
bound
pop
sbb
cmpl
and
or
push
or
jecxz
push
push
imul
lahf
fsubl
sbb
and
add
or
sbb
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
cmp
jmp
cmovbe
je
dec
cmc
fisttpll
or
push
jge
jle
jnp
fisubl
dec
push
jbe
stos
mov
iret
sub
ret
sar
cmp
outsl
movsl
imul
hlt
inc
sti
js
icebp
or
data16
mov
cmpsb
jmp
out
xlat
adc
push
mov
sub
mov
jb
sub
push
fisubrs
push
js
sbb
fcomi
jp
out
sub
aaa
inc
mov
push
mov
sbb
add
xchg
std
add
cld
xchg
pop
jbe
insb
out
insb
std
aaa
imul
lds
je
dec
and
daa
popf
daa
xor
dec
mov
pop
jne
or
sub
xchg
push
add
cmpsb
stos
clc
dec
out
push
test
pop
add
in
or
std
in
in
adc
fwait
aad
mov
divb
mov
mov
movsl
shrb
loopne
imul
xchg
xor
outsl
inc
test
sbbb
cmp
xchg
imul
jb
pushl
cmp
lret
loopne
bound
test
xor
pop
push
sahf
sarl
pushf
jae
jb
addr16
call
cmp
sub
cmp
rcrb
sub
adc
dec
inc
rcll
mov
scas
jo
adc
mov
pop
or
mov
add
lahf
js
in
xchg
fucomip
mov
inc
in
enter
aam
cld
jnp
cmpsb
inc
cs
jb
shl
stc
fs
push
cltd
adc
mov
jbe
mov
adc
aam
xchg
insb
fcomps
push
mul
rorb
in
scas
sbb
pushf
pop
rcl
test
adc
and
cmp
shlb
cmp
pop
mov
shlb
data16
xor
push
dec
faddl
jmp
mov
fnstsw
test
imul
xor
mov
mov
pop
in
push
daa
pop
mov
outsb
ficomps
ficomps
add
xchg
dec
fs
or
pop
in
push
loop
jle
mov
lods
jl
jae
mov
int
idivl
jp
insl
hlt
and
jle
sar
xor
ror
dec
adc
cmp
iret
ja
jns
add
mov
push
mov
push
push
cmpsl
mov
mov
xor
or
mov
loop
imul
sub
add
or
aam
ret
stos
cmp
inc
ret
xlat
mov
pushl
xchg
xor
mov
mov
sub
stc
pop
and
xchg
into
imul
xchg
in
push
adc
push
jne
jae
ljmp
mov
jnp
and
dec
stc
or
inc
mov
imul
add
mov
mov
xor
add
cmp
jne
mov
jmp
inc
aad
shlb
push
out
push
stc
test
stos
xor
jle
jge
jle
pop
xchg
test
js
into
ljmp
mov
ret
adc
push
std
lret
inc
test
push
popl
jmp
out
ja
jns
fmull
outsl
pushf
mov
and
mov
lods
jae
inc
inc
xor
xor
jg
mov
neg
push
daa
or
wbinvd
add
negl
stos
and
cmc
pop
and
and
pop
add
leave
xor
fsubp
dec
in
pop
and
jns
insl
clc
jge
fidivrl
imulb
imul
mov
ret
sub
inc
cs
fcomps
dec
push
adc
push
cmp
adc
mov
xchg
xor
push
leave
sarb
jge
jle
nop
notb
adcl
mov
adc
fstps
push
cmpsb
outsb
sarl
lahf
ret
sarb
add
xchg
sbb
cltd
xor
inc
in
pusha
jmp
stos
jg
dec
fistpl
mov
loop
mov
push
popl
add
outsl
push
sub
sbb
adc
lods
sbb
std
ja
out
mov
mov
cld
cmp
inc
jnp
imul
adc
nop
push
and
std
adc
fwait
sbb
shr
enter
jbe
stos
cltd
std
ds
fcoml
cmpsb
jl
out
xor
fsubrl
mov
insb
outsb
rcll
xor
addr16
pop
mov
sbb
sbb
or
push
sbb
popf
mov
mov
adc
movsb
outsb
cli
cwtl
rolb
aam
mov
add
push
pop
scas
mov
loope
cmp
test
jns
and
inc
pop
jg
mov
in
mov
aas
jmp
xor
push
popf
sbb
pop
push
mov
jne
sbbb
repnz
pop
mov
inc
xchg
stc
aam
les
mov
xchg
test
push
iret
arpl
iret
idiv
inc
incb
xchg
stos
or
lea
sahf
mov
push
push
into
xchg
mov
xor
imul
iret
icebp
mov
jmp
jecxz
pop
in
lcall
fwait
lods
in
cmp
pop
mov
xchg
imul
jl
jmp
push
mov
in
xor
jns
movsl
sbb
jbe
ja
inc
loope
inc
push
cmp
fsubrs
aad
icebp
cld
shlb
cmp
clc
or
sbb
adc
sub
das
or
pop
and
cmpsb
adc
pop
xlat
sub
mov
mov
ds
cmp
mov
or
adc
jmp
fsubrs
movsb
jmp
pop
mov
xor
add
mov
mov
mov
jmp
enter
enter
sbb
mull
jae
pop
jo
jle
jp
jle
inc
sbb
adc
aad
mov
inc
insb
outsb
sbb
mov
adc
pop
lcall
iret
push
fidivs
or
ss
jge
or
and
push
sub
fstps
dec
xorb
insb
test
addr16
xor
pop
rcrb
mov
gs
xchg
andl
xchg
sbb
adc
inc
leave
or
out
popa
inc
jns
pop
das
xorb
fidivrs
ja
test
inc
in
test
jae
test
fldcw
add
mov
pop
rcr
push
cmp
pop
xchg
icebp
cmpsl
pop
rcrb
movsb
call
aaa
push
jl
arpl
pop
sbb
jae
jge
cmpsl
jp
dec
and
out
pop
cmpsl
xchg
mov
jecxz
jo
dec
mov
repnz
push
jno
and
adcl
loope
sbb
imul
jne
mov
jl
adc
lret
sub
and
xchg
sbb
push
lods
aas
inc
ja
xor
xchg
movsl
cmpsb
cmpsl
jne
jmp
sbb
push
xor
loopne
test
loope
jg
outsl
loopne
or
jns
dec
mov
push
pop
andl
nop
jge
popf
sahf
repnz
xor
lret
cs
test
in
mov
mov
pop
mov
inc
imul
rcrb
jmp
dec
lock
out
cli
and
add
arpl
xor
repz
and
inc
addb
cltd
mov
and
jge
dec
out
push
fisubrs
and
push
rorb
lods
inc
push
mov
adc
or
call
mov
div
jecxz
fs
push
shll
sbb
shr
fwait
stc
das
pop
popf
mov
add
dec
cmp
push
fsts
lret
js
cmp
or
xchg
sub
pop
daa
sub
ret
or
clc
hlt
inc
pop
lret
or
pop
loop
cmp
pop
nop
xchg
push
mov
testl
jae
insb
or
cmp
jne
inc
xor
lret
movsb
test
scas
xor
popf
repz
test
rcr
scas
daa
cld
repz
pop
hlt
mov
fcom
iret
int3
fidivrs
fwait
pop
mov
sub
mov
push
adc
bound
cmp
dec
cmpsb
mov
shll
sub
inc
push
push
cltd
cltd
out
adc
xchg
pop
push
cltd
in
in
out
sbb
or
inc
add
mov
hlt
aam
push
mov
int
xor
dec
sub
push
ja
insb
notb
test
flds
into
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
jmp
lret
out
icebp
jmp
inc
popf
inc
jle
jp
jle
push
add
jns
xchg
dec
mov
fcmovb
test
fs
rcr
fbstp
mov
mov
push
enter
pop
or
cmpsb
pop
and
add
in
in
lea
cmovbe
fstl
cwtl
rorl
fnstcw
pop
sub
push
jnp
imul
cmp
or
xchg
mov
adc
jmp
sbb
scas
inc
test
call
pusha
jle
shl
fistps
adc
lods
ds
test
lahf
jecxz
xorb
lahf
into
xor
cmp
sub
lret
in
or
and
mov
xor
pop
dec
js
and
clc
mov
aam
inc
popf
test
xlat
adc
stos
leave
push
push
fwait
cmp
sub
aam
movsl
fcoml
repz
into
fstl
push
cmp
test
mov
pop
mov
pop
adc
fcompl
cld
or
das
stos
and
pop
pop
insb
push
mov
dec
mov
les
fidivs
in
push
adc
mov
mov
sbb
das
jge
push
mov
mov
test
popf
lods
decl
push
pop
ret
sub
or
inc
push
int
ja
mov
mov
pop
sub
fdivp
stos
mov
lods
jae
pop
inc
jle
mov
sbb
adcl
sbb
test
mov
sub
repnz
inc
leave
sub
cs
push
lock
aad
cld
test
ret
mov
dec
sub
pusha
fadd
jp
sub
movsb
hlt
pop
ficoml
pop
lcall
adc
loope,pn
test
add
push
loopne
or
mov
sub
fldenv
xor
clc
push
lret
push
or
call
xchg
jae
mov
mov
add
pop
xor
nop
sub
lock
xchg
imul
adc
pop
insb
inc
cli
xorl
inc
xchg
xchg
mov
out
es
inc
cmp
xchg
insl
shrl
cld
mov
inc
dec
xlat
roll
mov
int
cmp
leave
push
movsl
repz
and
add
repz
mov
mov
cmc
or
and
sbb
jne
mov
das
inc
cmp
push
jbe
aas
ljmp
fisubs
mov
outsb
pop
pop
sbb
sub
push
aam
scas
ja
das
call
xor
movsb
sbb
and
jmp
lock
js
xlat
or
or
cltd
call
cltd
jb
movsl
add
jmp
in
notb
sub
enter
jmp
jle
jmp
lahf
dec
shlb
stos
and
mov
pop
loopne
fiaddl
add
mov
mov
mov
mov
jp,pt
inc
jnp
rcrb
pop
stos
and
cltd
cmp
test
jb
sbb
adc
lret
xor
outsl
xor
stos
adc
cld
stos
adcl
test
pop
adc
pop
dec
das
pop
lods
xor
adc
ret
jle
roll
rolb
mov
cmp
mov
icebp
mov
les
int3
cmpsl
push
inc
mov
adc
xchg
add
push
lock
sub
inc
sbbb
fnstsw
scas
xor
jno
mov
pusha
jl
xchg
fwait
out
add
pop
mov
icebp
movsl
es
mov
and
cmp
add
jp
xor
pop
and
je
or
icebp
movsl
adc
dec
loop
sti
addr16
or
ficoml
pop
pop
pop
xchg
pop
adc
adc
and
pop
fwait
cmp
sti
pop
and
jnp
pop
xchg
test
add
pushf
xor
mov
cmpsb
pop
dec
mov
in
xor
out
and
sbb
push
inc
stos
ljmp
aam
xor
cmp
or
in
subb
and
mov
enter
fistl
loopne
dec
mov
popf
in
cli
cmp
jbe
cwtl
mov
arpl
movsl
pop
pop
mov
pushf
push
dec
arpl
out
cli
or
repnz
xchg
inc
jecxz
lcall
std
fwait
aas
xor
xorl
lret
pop
popa
lods
and
cmp
jbe
mov
jge
leave
sbb
mov
dec
pusha
push
insb
push
mov
dec
imul
scas
fisubs
and
call
js
jb
jnp
cs
jnp
call
mov
xchg
lods
inc
sub
and
aam
xchg
stos
sahf
jg
xchg
int3
int3
sbb
ret
ss
out
add
sub
aam
jp
mov
sti
cli
pop
mov
mov
xlat
rorb
mov
xchg
rcll
dec
call
xchg
sub
dec
popa
loope
je
and
or
into
and
loopne
scas
or
fsubrl
in
clc
dec
and
daa
stc
pushf
or
mov
and
nop
add
aaa
mov
sub
jns
mulb
and
jb
xchg
lods
das
dec
jmp
xlat
cvttps2pi
repz
ret
xor
stos
adc
push
shl
mov
mov
jge
dec
rclb
xchg
out
fdivrs
pushf
hlt
cmpsb
dec
sub
xlat
into
iret
push
outsl
mov
cmp
je
mov
mov
mov
mov
lea
jmp
dec
mov
pop
jno
nop
lret
add
jle
jp
jle
dec
mov
sub
xor
inc
ret
cmp
lods
cmp
sbb
or
leave
popa
xlat
les
inc
jns
dec
lcall
sbb
fnstenv
aad
clc
xchg
xor
hlt
insl
push
repnz
jl
lcall
je
sbb
popa
jnp
push
fsubr
xchg
dec
rcl
mov
add
cli
adc
std
shl
shrl
lock
jg
int3
rcll
enter
push
and
xor
mov
cwtl
adc
std
mov
fldenv
sbb
xchg
das
jle
inc
int3
lods
and
pop
cmc
cmp
add
mov
inc
dec
js
inc
add
shll
int
sub
imul
rorl
popf
xor
fmull
xchg
inc
ja
call
mov
je
jp
test
aad
pop
in
iret
insb
push
push
loopne
stos
push
clc
fcompl
lahf
fs
jmp
dec
push
xchg
lock
add
or
aam
dec
jo
sub
pop
mov
mov
fwait
aam
jmp
cmp
repnz
sbb
pop
adc
and
dec
cwtl
not
sbb
addr16
jne
jo
and
jb
lcall
inc
xlat
inc
push
movsl
push
mov
daa
dec
xor
shrb
mov
pop
in
daa
xlat
scas
cmp
jbe
loope
cld
mov
fistps
imull
cltd
iret
cld
mov
xchg
xchg
adc
inc
xchg
dec
roll
cli
sarl
in
sbb
jo
dec
test
jl
cmp
test
ja
cmp
addl
sub
pushf
xorb
mov
lahf
aad
mulb
xchg
insb
adc
and
and
lods
movl
testb
push
adcb
cld
out
fnstsw
sub
imul
scas
jmp
test
cmp
pushw
les
sahf
jp
rcll
test
xchg
cmp
fs
pop
cld
out
shrb
jnp
ds
test
sub
insl
clc
int3
fcoms
js
mov
or
imul
es
inc
fldt
ljmp
ficoms
fsts
and
pushf
lds
jns
jno
cwtl
mov
decl
add
movsl
movsb
mov
xor
jno
ror
mov
imul
push
enter
cmp
pushf
data16
mov
and
rcrb
mov
xchg
mov
mov
sti
pop
aaa
xchg
sbb
mov
rclb
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
jmp
adc
inc
sahf
popa
scas
icebp
jno
ficomps
lret
jle
jp
jle
pop
lds
mov
mov
adc
movsl
rolb
mov
int
movb
pop
insb
test
dec
mov
jbe
cli
scas
lret
xor
dec
cmpsl
pop
test
or
sahf
cld
test
inc
sahf
movsl
repnz
mov
and
test
in
add
push
ljmp
jnp
and
mov
mov
jl
jne
ds
jne
push
jmp
scas
clc
rorb
daa
mov
adc
xchg
xchg
mov
popf
mov
fcomps
ret
and
pop
pop
daa
cmp
dec
xchg
jecxz
push
lcall
xchg
pop
dec
mov
aaa
xor
addr16
ret
inc
lahf
ds
push
xchg
aaa
mov
cmpsb
xor
inc
xchg
ds
in
jle
add
mov
iret
divb
insl
pop
jl
push
imul
or
fcompl
sub
iret
xchg
push
out
and
push
int3
mov
nop
dec
iret
cs
leave
clc
lock
lds
pop
rorb
add
sub
pushl
pushf
pusha
xchg
mov
test
lcall
xor
dec
mov
pop
in
adc
fnstsw
insb
lcall
add
sub
addr16
cmpb
xorl
dec
and
fwait
xor
call
movsl
sbb
lea
sbb
cwtl
mov
push
push
rorl
jbe
sub
adc
inc
ss
mov
std
stc
adc
fsubs
jp
fcompl
xor
pop
stos
inc
dec
mov
or
xlat
fwait
or
das
jecxz
xor
mov
mov
icebp
dec
dec
adcb
add
dec
adc
cwtl
outsl
testl
xchg
ffree
gs
ss
mov
fsin
inc
incl
mov
fwait
sbb
adcb
xchg
scas
mov
add
daa
adc
adc
and
push
outsl
call
cld
jg
dec
mov
adc
sarb
pop
bound
inc
negl
and
lods
int3
and
faddl
stos
lahf
lcall
lock
mov
fdivr
in
pop
add
test
adc
ficoml
addl
add
inc
push
xchg
adc
in
push
leave
mov
xor
xchg
nop
adc
imul
push
sub
mov
lahf
repnz
xor
es
adc
lods
sub
pop
xor
jp
and
sbb
xor
push
pop
gs
add
xchg
mov
clc
mov
mov
mov
add
xor
cmp
je
jmp
sarl
mov
mov
shrl
fsubrs
ja
xchg
outsb
or
jle
jp
jle
add
dec
stos
dec
stos
pop
dec
mov
ja
xchg
xlat
dec
pop
cmp
aam
in
sub
arpl
add
push
jmp
movsw
popa
std
stos
jp
test
fcmovb
push
ret
jne
int
insb
clc
sti
mov
xor
call
jb
mov
lods
jecxz
push
fisubl
fisubl
lret
push
mov
xchg
fimuls
rcrl
or
mov
inc
in
data16
adc
loop
inc
xor
rcpps
std
in
push
je
dec
jg
lret
aad
and
jae
addr16
cmp
adc
jp
jmp
sbb
jbe
and
lds
scas
xchg
dec
repnz
mov
inc
fistpll
adc
int
cmc
insb
ret
out
dec
aaa
xchg
or
icebp
jecxz
je
mov
nop
addb
inc
xor
aaa
sbb
push
lods
or
adc
cld
or
scas
pop
mov
sub
loope
push
push
ds
jbe
aad
aad
cmp
mov
cld
rclb
ja
pushf
or
shl
jmp
jp
dec
test
inc
cmpsl
aam
aam
fxch
mov
dec
mov
dec
and
dec
out
mov
popa
inc
cmp
arpl
mov
fisttpl
pusha
psubusb
pushl
stos
jo
fwait
push
mov
test
test
negl
andb
push
jmp
movsb
roll
sub
daa
and
das
lds
loope
xor
dec
add
mov
addl
xor
mov
lea
imul
jp
mov
jno
sbb
sub
dec
lret
rorb
mov
mov
jbe
lret
xor
sti
xor
ret
jl
mov
frstor
add
popa
ds
adc
or
sub
ljmp
leave
imul
cs
dec
and
popf
mov
insl
or
out
pop
jbe
and
inc
insb
xchg
cmp
sahf
andb
cmp
push
sub
rcrl
mov
aas
ja,pn
bound
es
leave
xor
xchg
mov
mov
cld
push
jg
jne
scas
mov
pop
jle
subb
sub
jno
pushf
loopne
or
test
bound
out
fcompl
fiadds
jge
jp
and
cwtl
cs
fbstp
sbb
inc
sub
daa
outsb
stos
pop
in
xchg
repnz
sub
insl
jo
addr16
mov
pop
jno
pop
jle
out
or
or
lret
ficoml
push
push
inc
or
jo
ds
push
dec
xlat
inc
inc
ja
fisubrl
dec
push
mov
xor
add
jmp
and
jno
pop
xchg
sar
cmp
or
jle
jp
jle
push
push
and
lods
push
xor
test
jnp
sbb
mov
ret
mov
or
mov
out
scas
and
stc
fwait
adc
or
push
enter
test
and
clc
inc
mov
sti
out
leave
in
mov
xor
mov
shrb
or
popa
flds
pushf
out
fistpl
outsb
or
xchg
loop
push
insb
lea
fdiv
pop
data16
and
and
adc
hlt
mov
jmp
movl
repnz
adc
int3
add
dec
cltd
popf
bound
sbb
je
xor
sub
mov
negl
popa
loopne
mov
aad
movsl
out
outsl
ja
mov
pop
xchg
mov
pop
mov
repz
sub
jae
adc
mov
adc
or
inc
pop
push
mov
cmpsb
dec
lock
xor
inc
jne
inc
jge
mov
jge
cmp
pop
outsb
mov
fsubrs
out
jns
mov
pop
add
gs
or
jno
sub
call
cmp
test
pop
push
xchg
mov
insl
cwtl
cmp
push
addr16
outsl
popa
and
mov
insb
jne
lcall
lahf
test
pop
fsubrs
mov
std
int
pop
insl
xchg
inc
idivl
inc
sbbl
cmp
call
fwait
inc
pop
push
mov
test
lods
dec
cs
xchg
xchg
gs
addr16
out
fcompl
push
cmp
mov
and
testb
imul
fidivrs
test
cmp
mov
fwait
outsb
add
xor
xor
arpl
add
or
or
inc
imul
sti
jbe
pop
fistl
fcomps
xchg
loop
mov
aad
cmc
outsb
adc
sbb
jne
xlat
inc
shlb
pop
call
aas
pop
shrl
xchg
sbb
call
jne
cmc
mov
cmp
pop
ss
pop
add
clc
arpl
jno
test
push
sahf
std
ds
das
bound
fwait
jns
jno
es
mov
loope
shr
xor
push
and
cmp
cmpsl
fmulp
mov
sub
out
ret
inc
and
push
xorl
lret
cli
lods
and
movq
repnz
data16
mov
in
push
mov
xchg
rclb
outsl
outsb
jecxz
cmp
mov
xchg
fwait
push
mov
push
mov
cld
outsl
call
jecxz
shl
inc
inc
daa
test
jb
jg
add
xchg
add
xorl
jmp
jmp
and
jnp
cmp
and
jp
push
mov
int
test
clc
jle
jp
jle
out
mov
adc
std
cmp
xchg
sbb
inc
or
and
in
enter
dec
inc
out
xor
sti
xor
inc
mov
pop
pop
fmull
aas
pop
repz
dec
pop
loope
dec
xchg
js
stos
or
cmp
cltd
mov
cs
ds
lret
daa
and
je
arpl
add
cld
popa
aas
enter
out
inc
out
movsl
gs
mov
xlat
fwait
jp
push
mov
inc
icebp
pop
dec
jo
add
dec
xchg
cmp
or
sahf
cmpsb
sbb
test
std
jno
push
ret
mov
and
testb
call
es
sbb
push
jecxz
xor
jl
adc
sbb
jne
pop
lret
negb
or
xor
test
pushf
jnp
xorl
mov
jns
and
xchg
rcr
daa
adc
xchg
adc
cmpb
mov
and
cmp
push
daa
mov
add
bound
insl
mov
cmp
bound
mov
add
xchg
cmp
lret
jne
jno
pop
and
data16
subl
add
xor
lods
mov
inc
adcl
lcall
test
push
mov
and
cs
mov
sar
aaa
jge
pop
test
jno
inc
into
adc
fstl
aad
negb
movsb
pop
out
lret
push
ja
loope
cmp
daa
mov
aam
adc
or
les
adc
scas
xor
dec
push
mov
inc
mov
fptan
fucom
clc
mov
sub
mov
xchg
and
mov
sub
cmpsb
cmp
in
loope
cmp
out
clc
push
das
mov
pushf
sub
iret
pop
dec
btr
mov
pop
xor
lods
dec
mov
mov
push
fcmove
sbb
outsb
mov
sbb
sbbb
stos
cmp
inc
in
cld
push
or
push
in
mov
push
ljmp
into
mov
cwtl
mov
mov
fisubl
cmp
push
sub
mov
mov
jle
fmuls
mov
jle
nop
lea
lods
movsl
ficomps
xchg
lea
insb
pop
xlat
repz
andl
movsl
inc
mov
mov
lods
andb
pop
inc
push
push
dec
jge
clc
xchg
jno
std
jo
jge
jg
xchg
inc
test
pop
shlb
lods
test
jne
lahf
and
stos
push
leave
aad
pop
scas
cwtl
sarb
and
inc
adc
adc
loop
push
fiaddl
cmpsb
stos
iret
mov
fists
or
iret
movsb
inc
mov
jno
ds
dec
mov
mov
jmp
xchg
jge
hlt
push
jne
pop
cld
into
inc
cmp
rcr
dec
adc
jle
ret
sub
mov
inc
cmp
push
cs
clc
out
loopne
cmp
jo
mov
sub
dec
aam
mov
in
stc
jmp
lods
jmp
mov
cs
clc
push
push
js
sub
arpl
outsb
and
loopw
mov
xchg
sbb
xor
mov
adc
cwtl
popf
xchg
call
mov
scas
jg
sub
pop
jge
vcvtpd2ps
cmp
ja
xor
jl
outsl
add
mov
loope
dec
cwtl
and
cld
out
push
push
jle
and
or
call
lds
xor
outsl
imul
shr
lahf
jl
push
sbb
inc
ss
xor
push
and
jmp
push
rcr
cmp
push
xchg
jnp
sbb
pop
inc
out
mov
sbb
xorb
lahf
adc
push
sub
inc
pop
push
sbbb
push
aam
pop
jle
test
lods
outsb
push
push
cltd
jne
and
scas
push
sti
jg
lea
ss
lea
sub
and
cltd
ret
pop
addr16
sbb
xchg
sub
xchg
mov
sbb
popf
xor
cs
pop
insb
add
dec
or
adc
jno
outsl
sar
inc
mov
icebp
push
imul
scas
jp
push
fdivrs
inc
loop
sti
scas
dec
aad
fld
cmp
xor
fdivp
pop
icebp
push
mov
push
dec
xchg
ljmp
mov
xchg
and
mov
jmp
sbb
push
test
loope
dec
and
and
outsb
jns
js
xchg
jnp
and
mov
mov
ja
fmull
pop
jbe
scas
push
xor
sbb
push
ds
testl
sbb
stos
adc
outsl
loope
push
adc
and
xchg
xorb
jmp
arpl
mov
add
dec
lret
push
ja
test
fneni(8087
imull
ret
arpl
and
mov
pop
jbe
popa
lds
test
pop
push
mov
jge
rorl
mov
jnp
jmp
jnp
pop
jmp
jnp
popl
xor
or
mov
fisttps
rcr
jg
cmp
pop
mov
js
nop
mov
xor
out
add
out
imulb
cwtl
outsl
add
push
cmc
sub
insb
push
push
lahf
mov
push
nop
or
aaa
and
and
dec
sahf
cmp
imulb
mov
rorl
mov
jno
outsb
add
sbb
or
or
add
out
xor
mov
loop
into
xor
xchg
sarb
sbb
jle
jp
jle
and
lret
sub
and
jb
xor
adc
push
mov
test
dec
or
mov
shll
lret
xchg
jb
inc
or
roll
stos
movsl
xchg
xchg
jns
fwait
arpl
aam
cmpsb
shl
jns
adc
rol
bts
imul
sti
mov
sub
add
cmp
cmp
xor
lock
loop
shlb
mov
add
je
insb
subl
outsl
nop
or
lret
jecxz
cmp
rcr
push
sarl
fldl
add
xor
sub
mov
sub
loopne
push
jmp
lret
push
dec
push
or
adc
addr16
xchg
in
mov
xchg
inc
sbbl
int3
dec
loop
lods
push
pop
pop
cmp
dec
pop
loope
cmp
or
stc
aas
roll
mov
insl
jp
jge
mov
icebp
imul
mov
pop
or
adc
push
add
mov
mov
push
dec
repnz
push
push
jb
sbb
scas
mov
or
in
lahf
push
sbb
mov
xchg
add
gs
sahf
mov
das
xchg
fists
and
push
cmp
jns
push
jb
sub
sbb
sbb
in
xor
xchg
sub
jg
dec
fsts
or
xchg
in
mov
repnz
jg
sbb
dec
add
pop
loop
movsb
cmpsl
outsb
adcl
enter
movsb
lahf
cwtl
push
insl
dec
xchg
outsl
jp
pop
jmp
sub
sahf
daa
fcmove
adc
jne
mov
sahf
adc
lea
inc
imul
mov
jns
pop
sub
push
jle
cli
push
jno
sti
xor
inc
les
bound
sub
lods
dec
fistps
std
mov
aas
pop
ret
cwtl
xchg
pop
jle
push
ja
jl
mov
xlat
dec
scas
sub
movsb
adcl
ljmp
pusha
pop
mov
shl
mov
adc
daa
loope
fldenv
xor
dec
mov
out
pushf
sahf
cwtl
loopne
inc
add
stos
pop
or
lea
inc
mov
and
lret
sub
mov
jge
fcoms
pop
sti
enter
pop
gs
cmp
aaa
aas
push
push
pop
xlat
adc
cmp
mov
loop
fsub
mov
movsb
addl
addb
ja
adc
idivb
push
scas
mov
iret
and
ljmp
test
dec
das
xchg
jns
push
ds
cmp
pop
popa
loop
jbe
cwtl
inc
sbb
or
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
adc
movl
xor
or
and
movl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
push
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
xor
mov
add
mov
movzbl
xor
mov
orl
push
push
test
movl
je
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
mov
mov
adc
imul
mov
xor
or
sub
or
mov
mov
mov
sub
add
mov
and
mov
sbbl
xchg
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
sub
adc
xor
addl
mov
xor
mov
or
mov
mov
mov
addl
xor
andl
xor
xor
add
movl
mov
mov
mov
je
sbbl
mov
adcl
xor
sbbl
add
cmp
movl
jne
pushl
call
mov
adc
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
or
and
mov
mov
subl
xor
xorl
add
movl
cmp
je
andl
pushl
pushl
subl
call
sub
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
fs
mov
inc
fwait
sbb
jle
fists
xchg
movsl
mov
mov
xchg
dec
cmp
addr16
mov
out
mov
fnstsw
jne
imul
je
jecxz
jae
push
fiaddl
stc
or
xchg
loop
pusha
stos
stos
xchg
cmp
dec
call
push
cli
je
sbb
js,pt
add
into
push
xchg
aas
sbb
int3
or
mov
add
cmp
repz
xchg
call
pop
pop
cltd
push
cmp
dec
adc
cmc
out
pusha
sti
movsl
imul
pop
imul
in
lods
out
sbb
fnstenv
adc
lods
adc
ffree
jb
lahf
jno
mov
cmpb
nop
fimuls
mov
push
out
rclb
imul
fists
lock
mov
add
dec
icebp
adc
mov
and
pop
iret
es
adc
hlt
sub
sub
call
rorl
test
xor
sub
adc
cmp
cltd
and
stc
sub
js
and
out
sbb
sbb
cmpb
pop
cmp
aam
ficomps
inc
cltd
mov
mov
int3
pop
add
add
les
fs
push
test
lds
pop
jmp
cmpsl
xchg
mov
cld
lods
xor
cmp
lcall
cld
jmp
hlt
cwtl
dec
ret
dec
jnp
or
iret
jne
leave
out
mov
fnstenv
or
lret
cli
vminss
sbb
adc
pop
scas
xchg
hlt
movsl
sarl
jmp
insl
sbb
mov
push
add
scas
int3
adc
xchg
test
add
mov
into
movsb
scas
inc
sbb
or
pop
mov
cmp
jge
test
adcl
les
lods
adcb
jno
dec
pop
mov
out
inc
adc
ljmp
repz
fbstp
cld
cmp
data16
dec
repz
xchg
outsb
out
sbb
xor
fs
repz
xchg
add
int3
sbb
scas
jmp
dec
jno
mov
and
divb
nop
sbb
lahf
push
ret
dec
adc
cmp
lahf
or
mov
jmp
fdivrl
xor
sub
xor
inc
movsl
imul
int3
inc
mov
mov
out
popf
push
lock
pcmpeqw
mov
in
sahf
pop
paddb
shl
add
mov
mov
outsb
std
divb
lods
cmp
push
test
xchg
sbb
pop
loopne
cld
cmp
xchg
jne
add
int3
insl
xchg
mov
pusha
mov
adcb
rorl
or
dec
sbb
testb
mov
add
lea
mov
jmp
push
adc
shrl
cs
int
push
fsubl
mov
jge
jle
fadd
stos
mov
cmp
jb
jmp
pop
inc
add
mov
xor
xlat
repz
sub
jp
inc
mov
mov
rorl
jns
mov
sti
mov
jne
ret
jmp
dec
into
jecxz
sub
jo
cmpsb
fcom
mov
fbld
stc
jmp
pop
fidivl
jnp
xchg
xchg
ret
jns
outsb
sbb
hlt
push
outsl
int
pop
jnp
loop
jne
or
jl
mov
dec
aad
add
jno
repnz
shl
stc
divb
add
sub
lods
rcll
into
ljmp
mov
adc
in
pop
and
mov
adc
std
out
cmp
out
pop
test
out
scas
cmp
xor
movsl
mov
loopne
into
mov
shr
imul
mov
cmpsb
jo
dec
aad
ljmp
or
fdivrl
mov
fwait
into
xor
pop
das
sahf
jg
xor
lods
mov
shll
fcmovnb
and
xor
mov
sub
les
jno
mov
add
imul
test
xchg
pop
aaa
add
fdivrs
in
sub
cmp
inc
aas
push
mov
add
sbbl
sbbb
outsl
ret
es
push
ja
movsb
nop
cmpsl
cmc
jmp
xor
jecxz
inc
mov
push
cmp
dec
xlat
pop
or
cmc
movsl
loop
lods
fs
dec
xor
add
cmc
mov
jns
mov
jne
mov
and
imul
mov
bound
inc
out
fiadds
pusha
enter
loopne
and
filds
enter
cmp
mov
fadds
xchg
jecxz
mov
inc
daa
call
inc
xchg
cli
fists
jne
ret
jecxz
lret
xor
not
jbe
out
ds
inc
or
or
clc
out
mov
loop
pop
or
lock
xor
lock
rorb
or
and
popa
in
xor
jmp
xor
daa
repnz
ret
mov
jmp
dec
fdivrs
out
sub
lahf
push
ss
stos
test
adc
and
mov
rolb
cltd
call
enter
cltd
adc
popa
jmp
ret
cmpsl
lods
xor
ds
fisttpl
clc
jg
loopne
jge
and
ljmp
or
pop
or
loope
sub
sbb
pushf
ret
jmp
mov
pop
mov
aas
test
imul
xchg
dec
sbb
xchg
pop
sub
push
mov
repz
pop
mov
push
aad
mov
dec
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
xchg
adcl
and
jle
imul
dec
test
and
mov
sbbl
std
fwait
popf
std
pop
add
sbb
imul
int3
push
aaa
dec
lods
pop
cli
and
aas
adc
pop
xor
mov
push
in
mov
mov
cmp
and
mov
sub
xchg
js
bound
arpl
xorl
fsubrp
xchg
testl
stos
or
gs
adc
mov
xchg
cmp
adc
push
lock
fldenv
rol
pushl
jo
xchg
add
jg
add
add
cmpsl
cmp
mov
mov
aam
mov
fldenv
stc
add
pop
or
cmp
mov
sbb
sbb
icebp
out
jnp
xchg
mov
out
cltd
push
outsb
jp
dec
in
repz
mov
pop
jbe
imul
sbb
cltd
inc
iret
push
dec
mov
fsts
or
xchg
in
in
call
fldt
lret
outsl
inc
adc
std
fisttps
inc
in
int
idivb
adc
dec
push
sbb
pop
das
or
dec
cmp
aas
inc
mov
xchg
addr16
sbb
data16
sarb
mov
dec
sarl
and
daa
jnp
rdtsc
jl
in
dec
xchg
movsl
loop
jl
inc
xchg
or
xor
leave
iret
jl
ss
mov
shlb
push
push
fcoms
popf
out
mov
fmul
stc
pop
add
pop
mov
jl
adc
subb
jae
icebp
and
sub
jmp
loopne
adcl
lret
mov
sub
mov
or
das
push
xor
clc
rcll
in
mov
cmp
mov
mov
sbb
in
imul
ror
sub
inc
jns
arpl
sub
cmp
cmp
inc
and
cmp
adc
fidivs
sahf
xchg
int
sbb
sti
in
inc
push
sbb
cltd
push
mov
std
dec
les
cld
pusha
popa
xor
and
stos
notl
fbstp
push
ret
cmpsl
pop
jge
call
push
scas
outsb
pop
popa
es
test
fdivrl
jmp
test
cmp
and
stc
and
mov
dec
hlt
dec
mov
dec
loopne
addr16
push
sbb
enter
push
xchg
add
daa
ret
lea
adc
into
jbe
mov
or
pusha
xlat
repnz
pop
rcrl
inc
xor
xor
imul
ljmp
lea
mov
sbb
popf
out
in
inc
adc
or
in
rorb
push
add
mov
push
pop
push
dec
jmp
test
jnp
mov
xchg
rcr
jb
jl
xchg
jle
jge
jle
jecxz
fsts
sbbb
aad
cmp
dec
push
into
pop
sub
pop
and
xchg
arpl
gs
push
mov
xchg
jae
sub
add
xor
outsb
and
lock
mov
ljmp
mov
mov
push
lea
nop
pop
xchg
inc
jo
mov
mov
inc
inc
int
xor
mov
jns
clc
mov
or
cmpsl
add
mov
xor
push
adc
pushf
ds
jge
xlat
fiaddl
inc
idivb
push
cmpsb
and
loope
adc
ret
out
cwtl
sub
cmp
fcmovb
mov
xor
mov
popf
sahf
leave
pop
aad
sbb
test
dec
imul
inc
and
inc
jle
outsl
xlat
jmp
fwait
inc
jl
js
jmp
jbe
in
aaa
popl
mov
sub
mov
push
data16
das
sbb
pop
fwait
mov
bound
aaa
mov
jb
xchg
inc
inc
loopne
push
testl
mov
ja
and
pop
scas
inc
outsb
pop
push
push
jns
pop
jle
push
pop
fstps
mov
je
xchg
ja
push
pushf
outsl
sub
push
jp
int3
aaa
xchg
xchg
insl
clc
inc
fmuls
inc
mov
xchg
mov
icebp
out
push
scas
mov
clc
jmp
sub
nop
inc
sub
jb
fidivrl
and
pop
inc
test
insb
inc
aas
push
shlb
sbbl
adc
mov
mov
mov
push
je
jne
lods
push
scas
or
mov
adc
xorl
and
cmovnp
lock
mov
or
inc
push
into
push
out
popf
push
mov
sub
pop
sahf
add
sub
pop
dec
lret
or
andb
dec
pushl
in
rorb
adc
and
rcl
lods
test
imul
popf
dec
cmc
and
add
add
sub
and
and
in
ljmp
adc
xchg
add
fisubs
mov
loopne
jnp
jno
xor
je
lods
daa
cmp
and
shrb
jp
shrl
xchg
push
scas
clc
imul
aaa
mov
pushf
mov
test
sub
or
xor
push
out
jp
xchg
daa
push
stos
rcr
or
jmp
imul
or
inc
lret
lahf
push
daa
dec
rolb
cmp
hlt
cmpsl
fcmove
in
popf
iret
push
cmp
mov
push
sbbl
xchg
popf
cmp
lret
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
xor
xor
xor
pop
std
rcll
sub
jle
jge
jle
mov
ja
insl
adc
in
into
pop
inc
stos
xchg
loop
fucomip
daa
xchg
cs
xorb
popf
xor
pop
lcall
xchg
sub
cwtl
xchg
add
cli
gs
xchg
mov
pop
pop
test
je
push
jle
mov
dec
add
xchg
adc
inc
fiadds
dec
and
stc
sti
pusha
int
ret
icebp
repnz
test
adc
fldcw
cmpsl
insl
pushl
mov
xor
jo
cmp
insb
or
lcall
mov
push
int
mov
or
push
je
xor
jno
jg,pn
sub
and
mov
lods
imul
mov
push
shlb
mull
pop
aas
xor
int3
push
out
mov
xor
cmpsl
fistl
icebp
mov
mov
pop
mov
or
cli
inc
lods
adc
xchg
int
jae
aad
or
adc
sar
and
cs
pop
xchg
mov
repnz
scas
cmp
lods
push
mov
adc
xor
and
push
lock
fldenv
std
dec
adc
in
dec
int3
xor
shll
and
cld
sub
push
mov
adc
pop
and
jns
test
fs
jl
add
call
cmpsb
add
mov
and
loop
add
mov
mov
and
push
add
fs
mov
ffreep
xor
jl
fisubrl
lret
add
cwtl
pop
sbb
add
loopne
xchg
sub
fwait
ss
int3
fs
je
xor
lret
push
xlat
leave
push
xor
jb
push
pusha
jge
or
lcall
sub
ret
sub
add
jb
ficomps
ret
pusha
xlat
into
sbb
in
sbb
bound
push
inc
cmp
pop
movsb
add
cld
xor
rorl
push
adc
mov
dec
mov
pop
rorl
leave
scas
cmp
xor
pop
leave
fstps
lods
pop
gs
and
adc
enter
pop
andb
pusha
mov
lods
cmp
xchg
roll
adc
mov
sbb
repnz
adc
rorb
or
sbb
jl
jns
inc
cmp
push
and
addr16
sub
nop
in
add
imul
leave
pop
or
ficoml
add
scas
cmp
and
push
stos
movsl
xchg
jg
pop
mov
push
add
movb
popa
lret
pop
xchg
mov
dec
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
jmp
inc
stos
push
jmp
jae
mov
jo
jecxz
pop
mov
jle
jge
jle
xchg
int3
jl
fs
pop
add
pop
je
push
dec
sub
adc
into
adc
cltd
mov
scas
pop
mov
mov
dec
icebp
int3
push
sbb
dec
fsubrl
rcll
jecxz
jg
mov
jp
sti
sbb
xlat
js
les
adc
mov
sub
push
inc
jecxz
sti
sub
or
push
inc
jno
lcall
inc
arpl
mov
add
fldl
inc
and
cld
mov
invd
loopne
mov
nop
xchg
jns
loop
inc
nop
cli
mov
into
addr16
lcall
stos
mov
push
adc
ret
dec
sub
dec
aas
jns
aam
cli
rorl
sbb
cmp
push
mov
pop
lock
lret
and
in
and
dec
nop
xchg
and
and
ds
popf
jg
sbb
push
and
movsb
inc
xor
inc
lods
mov
or
test
dec
cmp
popa
inc
or
ret
ja
cmpsb
mov
call
das
scas
fisubrs
sub
xchg
sub
push
add
mov
ret
es
push
cmp
fisubl
xor
scas
jle
pop
inc
mull
das
dec
nop
pop
leave
insl
push
sbb
sbb
loopne
cs
cwtl
jbe
jae
add
int
aad
icebp
mov
sti
nop
sahf
adc
int3
test
mov
sub
cli
popa
ss
mov
in
add
into
pop
pop
mov
lcall
add
lods
ljmp
mov
cmpsl
imul
mov
jo
sub
xchg
xor
loopne
mov
xchg
push
dec
mov
adc
or
xor
sbb
dec
ret
std
jecxz
nop
jno
adcl
push
sbb
inc
jecxz
adc
sbb
sub
fnsave
aas
push
pop
popa
aas
stc
hlt
inc
call
repnz
enter
aam
mov
into
push
movsb
icebp
sub
lods
ret
pusha
adc
lea
je
je
or
loop
jb
xor
mov
sbb
out
fnstsw
pop
xor
xor
and
sub
dec
xchg
mov
divb
jns
imul
pop
std
and
popa
loopne
ljmp
mov
mov
movsb
cmpsb
and
dec
repnz
push
stos
jle
jmp
dec
fwait
test
and
sbb
push
push
clc
or
pop
or
dec
or
fbld
and
inc
xor
mov
jbe
or
loopne
pusha
xlat
cmp
fs
inc
call
data16
das
pop
sub
idivb
aaa
popf
shlb
xchg
add
sub
aas
or
xchg
jecxz
or
inc
daa
shll
lea
jmp
das
subb
mov
xor
mov
shl
ss
jle
jge
jle
aaa
shll
mov
xchg
cmp
cli
leave
scas
and
daa
push
inc
push
pusha
imul
shl
pushf
int3
dec
rsqrtps
mov
cmp
out
hlt
testb
mov
shlb
push
adc
pop
das
fiaddl
ja
aas
insb
testb
out
push
imul
and
fnstenv
jge
js
lea
sti
jb
pushf
sub
out
sub
rcrl
xchg
in
repz
fwait
push
out
gs
jb
or
pop
out
out
inc
and
andl
push
fmuls
xchg
mov
nop
mov
add
call
pop
jno
jns
pop
subb
stos
and
mov
pop
or
fisubl
inc
movsb
mov
xlat
std
xor
pop
idivl
mov
cmp
jo
orb
dec
cmp
lret
jmp
das
jl
shlb
and
sbb
bound
testb
stos
gs
data16
ss
jb
call
pop
adc
imul
inc
aad
in
mov
push
dec
jae
int
xlat
inc
pop
jge
aaa
mov
loopne
icebp
ret
call
mov
fisttpll
cli
in
sbb
loop
jb
subl
aad
xor
cmp
add
lahf
jne
xchg
enter
iret
or
mov
adc
add
cli
ret
and
in
mov
sbb
out
pop
les
xchg
fadds
mov
pop
into
and
mov
enter
xchg
js
ret
push
lock
gs
lds
jbe
push
ljmp
nopl
sbb
jno
sbb
icebp
mov
pushf
adc
sub
inc
test
std
ret
ret
mull
mov
mov
aam
scas
stos
ds
mov
outsl
pop
bound
popf
scas
push
loope
pop
inc
xor
jp
xor
pop
push
xchg
dec
mov
mov
cmp
mov
test
lods
push
outsb
cltd
cmp
stos
pop
push
inc
xchg
mov
and
rcr
pop
mov
mov
outsb
shrl
lcall
mov
adc
mov
cmp
mov
and
jecxz
add
aas
test
inc
repnz
addr16
pop
arpl
and
insb
add
mov
stc
scas
les
fldenv
scas
rol
fsubl
cmp
push
or
aaa
lahf
insl
scas
data16
out
cmp
dec
nop
xchg
adc
ret
fsts
adc
daa
mov
hlt
rorb
adc
imul
fsubrl
scas
inc
pop
stos
mov
iret
mov
jl
inc
movsl
adc
sbb
imul
mov
mov
mov
jmp
repnz
adc
aad
fcoms
or
xor
jge
jle
jge
push
sbbb
push
pop
cld
notl
mov
orl
xchg
out
jb
lods
push
clc
cmpl
das
cmpsl
mov
vxorps
or
jo
jnp
inc
cmp
cmp
dec
push
mov
push
hlt
pop
cmp
sub
scas
pushf
cmp
and
repz
and
mov
lods
push
sub
nop
icebp
add
push
xchg
adcb
inc
out
in
mov
imul
jno
popf
outsl
in
out
addl
jnp
mov
ds
out
int3
push
mov
jae
decl
cmc
outsl
stos
ja
and
int3
test
push
arpl
inc
jecxz
lahf
mov
mov
mov
les
xor
in
add
scas
addl
stc
jp,pn
pop
sub
dec
add
jmp
jb
mov
clc
add
leave
lea
stc
push
inc
adc
mov
hlt
xorl
jne
jno
pop
dec
add
inc
mov
pop
ljmp
inc
clc
mov
xor
push
and
ret
dec
mov
mov
jmp
mov
dec
data16
in
mov
addl
test
mov
inc
ret
fisttps
out
int3
pop
adc
sarb
cs
push
sbb
bound
jp
mov
jl
popf
jns
shlb
xchg
or
cmp
lahf
sbb
cmp
movsb
dec
ljmp
sub
cwtl
add
imul
pop
add
adc
and
int
lret
cmp
adc
or
dec
pop
sti
add
fs
outsl
shl
add
ljmp
ret
fistps
cmpsl
cmp
cmp
mov
mov
frstor
pop
cld
inc
out
in
fisubs
test
test
in
in
lret
jmp
roll
push
in
cmpsl
leave
rol
cmp
cmp
cltd
push
pushl
push
mov
aaa
xchg
jmp
js
lret
and
add
pop
or
pop
in
loope
ffree
mov
cwtl
call
sbb
and
rcll
lahf
jnp
gs
pop
pop
adc
fwait
imull
ret
adc
mov
lret
cmp
push
jmp
fisttpl
pop
push
mov
cltd
xor
test
xor
push
pop
sti
out
and
cmp
push
xor
fsubr
mov
mov
push
sahf
mov
call
add
imul
fldcw
sbb
inc
es
es
sahf
push
jmp
insl
into
aad
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
lods
and
xchg
jno
jno
add
cs
popa
ret
icebp
xor
jle
sub
jno
cmp
shll
push
test
mov
inc
sub
inc
xor
loopne
jg
adc
lahf
inc
jg
aaa
adc
mov
scas
add
movsb
mov
pop
iret
xchg
lds
xchg
push
insb
push
cmpsl
add
push
fisubl
mov
bnd
icebp
lret
rcr
mov
mov
inc
dec
push
roll
xchg
jae
pushf
bound
cmpsb
out
mov
scas
mov
div
push
nop
cmpsb
pop
outsl
jo
aad
dec
push
sbb
cmp
iret
movups
inc
push
and
adc
jg
scas
sbb
fs
fs
mov
add
iret
mov
add
insl
inc
stos
dec
xchg
add
lds
mov
mov
hlt
aaa
sbb
nop
pshufw
mov
std
fistpl
cmpsl
dec
xchg
fists
movsb
loop
dec
orb
arpl
xor
mov
ret
jmp
iret
sbb
adc
stos
jle
stc
pop
cmp
imul
push
xor
lods
sub
movsb
and
aad
fcoms
push
int
adc
sbb
ror
mov
xchg
lock
in
add
repz
and
mov
mov
je
iret
int3
cwtl
fldl
insl
enter
testb
lcall
outsl
arpl
or
push
push
sar
mov
sbb
mov
or
mov
jl
or
dec
xorl
jmp
imul
scas
les
loopne
fildl
jmp
mov
lods
inc
mov
insb
shl
cmp
and
cld
sub
push
push
lods
ret
mov
mov
nop
mov
out
jae
lret
int
fs
mov
leave
jmp
jmp
imul
jle
xor
mov
shlb
cmpsl
incl
push
jg
ds
orl
push
sub
mov
adc
mov
adc
loope
scas
push
sbb
loop
js
ficomps
inc
pop
repz
ja
out
orb
mov
addr16
mov
shrl
jge
stos
rcr
push
jge
mov
scas
fdivrl
xchg
inc
jp
mov
xor
sbbl
ret
inc
leave
sar
movsb
shl
inc
ret
sbb
push
insb
fdivs
xchg
pop
sub
pop
jmp
sub
mov
sub
xchg
inc
and
push
repnz
fwait
imul
fstps
call
out
adc
lds
idivb
adc
or
out
insb
sahf
mov
mov
mov
testl
push
push
mov
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
movl
push
movzwl
mov
mov
movl
push
mov
not
mov
movl
cmp
movl
jmp
jecxz,pn
add
push
popf
call
addr16
aas
movsb
jle
push
jg
jle
fdivrs
pop
pop
push
fisubrs
sbb
mov
xchg
fwait
out
aas
int3
cmc
cmp
imul
lods
jmp
and
repz
stos
jns
cmpsb
call
sub
cmp
xchg
clc
sub
cmp
movl
mov
pop
and
fcomps
mov
shl
or
test
jae
sbb
insl
test
jmp
mov
mov
dec
into
add
call
inc
xchg
popf
mov
in
and
inc
push
cmpsb
jge
sub
ret
mov
push
xor
dec
movd
rol
dec
or
add
adc
aad
shlb
in
loope
out
test
push
cltd
cmp
imull
push
lea
push
add
mov
and
in
or
pop
fs
in
dec
push
xchg
inc
addr16
cwtl
inc
pop
in
int3
xor
lock
mov
sbb
insl
fwait
cltd
cmc
lock
sbb
cmc
fisttpll
test
add
add
add
inc
cld
mov
xorl
xor
add
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
sub
xor
dec
add
push
adcl
pushl
or
pushl
mov
call
mov
mov
mov
mov
jmp
jmp
xor
fs
mov
sti
adc
cmc
mov
push
jg
jle
adc
shll
xchg
cmp
sbb
lods
inc
call
adc
adc
mov
fists
dec
cmp
loope
and
cmp
dec
repnz
in
mov
arpl
sbb
xchg
fs
jmp
fwait
adc
fstpt
ds
incb
cmp
in
sub
ss
mov
outsl
adc
pop
cmp
outsb
jl
out
dec
mov
mov
push
filds
sbb
add
sti
or
adc
push
imul
jecxz
out
xor
inc
push
adc
test
loop
mov
mov
lods
iret
sahf
outsb
jg
adc
lahf
and
rolb
imul
xor
inc
or
push
mov
inc
mov
movsb
xchg
insl
in
test
push
push
mov
int3
mov
pop
in
leave
push
negl
cwtl
mov
or
lock
inc
mov
add
push
sub
mov
xor
add
cmp
jne
mov
xor
add
jmp
xor
xor
mov
mov
jle
jg
jle
icebp
cs
sbb
cli
test
cli
jecxz
out
push
mov
int
std
jns
lsl
inc
jp
mov
fucomi
mov
mov
mov
fsts
pusha
outsb
lcall
xorl
xchg
jp
outsb
mov
lret
ffreep
fildl
loope
jne
mov
aaa
jne
pop
fwait
dec
xor
ret
inc
cmpb
adc
dec
sbb
add
inc
scas
out
lcall
scas
push
push
xchg
ljmp
pop
xchg
sarb
inc
mov
mov
inc
xchg
pushf
sbb
filds
xor
and
lods
ss
enter
adc
out
inc
cltd
mov
js
push
xor
aam
or
lar
sub
adc
arpl
rol
mov
mov
rcrb
mov
test
stc
and
ficompl
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
subl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
mov
xor
mov
add
andl
push
negl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbb
mov
xor
andl
movl
adcl
movl
subl
add
movl
jmp
cmp
jne
movzbl
mov
jmp
xchg
inc
jae
push
aaa
mov
and
out
mov
jle
cld
mov
push
sbb
daa
dec
repz
jl
cltd
sbb
jl
loop
aam
adc
sub
in
inc
sbb
jns
cmc
cld
divb
mov
mov
out
push
stc
fwait
jo
cli
outsb
pop
mov
inc
pusha
cli
add
jne
pop
in
or
adc
pop
cld
cld
mov
shl
xor
push
mov
aas
lret
inc
sbb
mov
pop
add
lds
cwtl
gs
lea
push
xchg
cmp
cltd
inc
cwtl
mov
pop
mov
inc
dec
xor
cmpsl
pop
sarb
sbb
mov
sbb
push
inc
into
mov
add
mov
rorl
shll
mov
lahf
lahf
inc
or
sahf
sbb
mov
push
ljmp
sbb
inc
xchg
cmp
das
dec
repnz
mov
test
dec
jl
stos
push
push
push
dec
js
push
xor
push
push
loop
filds
mov
sub
add
or
xchg
fxch
inc
stc
stc
outsl
rcll
push
nop
or
fisttpll
pop
xchg
mov
and
into
dec
inc
sahf
test
loope
fdivrl
xor
shlb
xchg
pop
pusha
cmp
dec
adcl
decb
push
mov
jmp
xchg
jns
mov
sbb
js
imul
mov
cli
mov
mov
push
movsb
cmpsl
rclb
jno
push
mov
loopne
outsb
pop
cld
inc
fiaddl
aaa
jb
jecxz
aaa
imul
aad
pop
repz
push
dec
xor
bound
pop
popf
mov
pop
jno
inc
sbb
imul
in
cltd
xlat
lock
ja
icebp
mov
adc
fs
mov
adc
bound
push
add
mov
dec
fsubp
hlt
mulb
xchg
jnp
aaa
inc
add
in
movl
mov
movl
mov
movl
mov
movl
jmp
cmp
jne
andl
mov
sub
push
mov
add
push
jmp
es
gs
test
mov
jle
inc
cmp
xchg
xchg
imul
add
mov
push
pusha
sbb
push
xchg
mov
xchg
scas
mov
in
jo
cmc
mov
xchg
xchg
sub
add
cmp
inc
sarb
out
enter
daa
add
inc
or
mov
inc
adc
pop
js
cmp
pop
in
sub
pop
lcallw
xchg
out
sti
xchg
dec
or
lahf
mov
leave
jae
mov
loope
inc
or
movsb
call
ljmp
sbb
daa
fs
lds
je
sub
movsb
aad
cs
repnz
jmp
into
rol
cmp
xchg
mov
hlt
mov
sub
cmp
lds
jae
mov
insl
in
lret
out
imulb
lods
push
jbe
dec
mov
xor
push
pop
push
rorl
sbbl
roll
iret
addl
mov
daa
mov
scas
xor
mov
mov
fisubs
addr16
je
int
adc
push
cwtl
cmpsb
sub
clc
rcll
in
cltd
pushf
jecxz
pushf
lahf
mov
push
das
outsb
mov
data16
pop
push
inc
lahf
mov
mov
cmp
cmpb
xchg
inc
test
mov
and
rdpmc
sbb
iret
loop
adc
add
pop
cltd
ds
enter
sub
das
cwtl
mov
fwait
or
pushf
mov
icebp
pop
sub
data16
setnp
gs
cmpsb
gs
scas
cmp
xchg
hlt
ret
rolb
mov
mov
ss
pop
lods
out
or
jge
call
mov
xchg
cmp
pop
push
or
popa
aad
and
sbbb
aaa
jle
in
dec
js
mov
sbb
fisubs
stc
push
mov
mov
lds
ret
outsb
pop
inc
inc
lret
call
incl
cmpl
jb
jmp
jmp
lds
imul
scas
jle
push
jl
jle
ljmp
mov
push
out
jl
push
jg
mov
pushl
int3
add
aas
cmpsb
sbb
mov
push
push
and
sbb
xor
add
sbb
inc
dec
mov
into
vmovmskpd
mov
jle
mov
lea
dec
jno
mov
push
outsl
dec
repnz
and
imull
outsb
rolb
push
fistpll
mov
add
test
xor
xchg
sbb
jl
adc
ret
mov
jecxz
cld
out
ds
lock
xchg
subb
les
repz
push
ficomps
lds
mov
xor
xlat
fdivp
iret
push
push
jmp
sub
push
xor
movsb
jae
repz
mov
out
pop
into
jmp
jae
insl
scas
das
adc
adc
add
inc
nop
in
cmp
push
pop
inc
leave
pop
roll
repnz
test
cs
dec
lea
adc
sub
pop
dec
cld
daa
mov
stos
stc
xchg
daa
iret
call
test
adc
rclb
fnstcw
sub
int
mov
pop
ds
imul
mov
out
hlt
enter
imul
push
adc
shrl
xor
push
lret
sub
int
ret
inc
jecxz
sbb
enter
std
mov
rorb
xchg
pop
cmpsl
subb
inc
cmp
jno
test
and
xchg
xchg
outsl
xchg
cmpl
mov
mov
xor
jmp
xchg
shrl
sbb
lcall
pop
hlt
inc
sub
add
sub
pushf
xchg
cmc
jo
or
int3
cltd
dec
subl
xor
stos
and
mov
xchg
mov
loope
mov
push
push
cmp
outsl
test
pop
mov
xchg
call
pop
cmp
leave
jmp
rcrb
cmp
jne
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
jmp
push
mov
jno
scas
out
lds
lahf
lods
jle
push
jl
jle
rol
pushf
mov
push
xorb
mov
movsb
xor
arpl
fisubrs
push
in
push
or
int3
hlt
sahf
lock
pop
xchg
shll
gs
test
aas
xchg
loop
xchg
add
dec
push
cmp
push
dec
cmp
mov
sub
jp
adc
lods
cmpsb
lcall
jle
gs
sub
cmpl
cltd
fdivl
push
cmpsb
addr16
sub
scas
push
inc
inc
dec
out
push
sarb
jmp
iret
jno
xor
fadd
sarb
pusha
and
push
xchg
aas
int3
mov
dec
sahf
movsl
fisubs
cli
mov
cwtd
adc
je
repz
mov
and
popl
inc
sub
iret
pop
je
stos
pop
add
ficoms
test
imul
xor
sbb
dec
out
into
cld
add
mov
popa
shll
mov
or
adc
std
jecxz,pt
adc
xchg
jl
insl
or
or
std
dec
ss
jl
pop
sub
sbbl
dec
push
lods
cwtl
xor
inc
jle
adc
push
mov
bound
cli
sub
rorb
cmpl
add
std
pop
arpl
in
pop
pop
or
or
cmpsl
add
sar
xor
xchg
pop
insl
ljmp
jecxz
insl
xchg
sub
pop
les
mov
mov
js
or
mov
int3
xor
vlddqu
pop
push
push
mov
mov
lods
jmp
dec
mov
fidivl
js
push
arpl
rcr
ja
or
fimuls
aad
xchg
dec
add
or
sub
push
adc
mov
daa
enter
repnz
sbb
push
dec
inc
dec
and
ret
sub
lds
mov
in
mov
sub
dec
adc
pusha
pop
add
pop
leave
ret
push
mov
push
movl
push
xor
movl
jmp
lcall
push
inc
push
dec
movsb
lds
icebp
scas
stos
jle
lods
jl
jle
mov
lahf
outsb
out
mulb
fdivrs
add
test
push
sbb
mov
faddl
ja
insl
cmp
adc
push
outsl
hlt
das
fsubrs
or
push
out
xchg
inc
movl
mov
idivl
add
or
cmc
insl
subb
testl
sarb
out
mov
and
sub
xchg
es
lahf
or
daa
pusha
mov
mov
sahf
xchg
adc
loop
or
in
int
negl
xor
xchg
push
dec
pop
stc
mov
adcl
dec
pop
inc
xor
jne
divb
addr16
push
mov
mov
cmpsl
sti
into
push
mov
mov
es
out
iret
mov
mov
mov
ret
push
imul
loopne
in
add
mov
adc
and
ficomps
mull
inc
test
scas
jns
das
in
sti
popf
inc
js
jecxz
out
test
xor
loope
jmp
xchg
out
lret
inc
movsb
cmp
dec
jnp
xchg
jbe
mov
mov
into
mov
cmpsb
adc
div
insb
movsb
imul
shll
jae
imul
xchg
lret
outsl
jbe
sbb
xchg
jp
aad
jne
lods
xor
sbb
outsb
insl
adc
inc
lret
loope
mov
sbb
jge
sbb
arpl
fldcw
inc
lcall
mov
mov
nop
ja
mov
cltd
sub
lcall
pop
or
cli
jne
int3
lods
scas
sbb
jae
mov
shlb
loope
sahf
in
aas
jmp
cmpsb
scas
daa
out
mov
ss
adc
ljmp
dec
mull
out
xchg
in
addl
jne
mov
xchg
mov
sbb
xchg
jl
lcall
fmuls
jae
pushf
xlat
jg
shl
decl
addl
aas
jb
mov
inc
mov
jmp
lock
mov
adc
cmp
sub
rcrb
cmp
sub
push
dec
xchg
push
add
add
xor
dec
sbb
mov
pop
and
pop
sub
out
xor
push
add
lods
inc
sbb
mov
loop
movl
subl
mov
addl
jmp
insb
xchg
xchg
in
or
adc
mov
jle
jl
jle
add
mov
sahf
mov
outsl
or
push
mov
shll
inc
adc
lock
fidivrs
imul
fbld
test
push
push
mov
pushf
js
mov
ljmp
dec
mov
push
push
mov
inc
inc
cmp
in
pop
pop
enter
jecxz
jne
xchg
bound
mov
mov
fdiv
push
xorb
or
mov
pop
test
flds
add
jg
iret
push
sbb
popa
into
cmp
dec
test
je
jp
pop
lret
cmp
or
insb
and
mov
pop
add
loope
decb
add
ds
xor
add
enter
jle
scas
sahf
xor
cmpsb
ror
fwait
push
inc
sub
fdivl
jae
push
lds
push
inc
mov
shll
popa
xchg
pusha
int3
in
xchg
xor
in
jg
xchg
shlb
ret
or
adc
push
push
fs
xchg
xchg
out
adc
aam
sub
push
aam
in
scas
push
dec
insl
nop
jns
push
lea
insl
int3
inc
not
mov
xchg
inc
jnp
xchg
jl
movsl
xchg
lcall
mov
ret
push
repz
fdivrp
out
inc
std
test
push
jne
add
enter
xchg
mov
daa
or
pop
ret
mov
or
pop
data16
cmp
jns
aas
mov
jle
das
cmp
mov
jo
test
sahf
data16
rcl
push
fsubrp
aaa
push
out
pop
ret
out
jno
mov
mov
int
mov
cmp
hlt
dec
movsb
add
rorb
in
outsl
adcl
inc
fdiv
push
test
mov
ret
gs
lock
inc
adc
sti
xor
outsb
sbb
sbb
push
into
les
nop
mov
iret
mov
fildll
mov
movsb
mov
jge
cwtl
jns
test
dec
scas
push
inc
sub
or
jge
mov
lock
pop
daa
cmp
adc
inc
adc
inc
sbb
push
push
test
repnz
sti
push
scas
push
repz
sbb
dec
cmp
dec
stos
in
mov
sbb
mov
pop
dec
idivb
sbb
lods
jns
dec
push
mov
sbb
decb
out
movsb
movsb
jns,pn
xchg
stos
pop
clc
push
adc
mov
movzbl
adc
mov
xor
xor
xor
mov
jmp
mov
jno
jb
inc
pop
outsl
sub
sub
lods
jl
jle
stos
hlt
loope
mov
mov
or
shll
sarl
leave
addr16
enter
and
mov
and
lcall
dec
lret
adc
xor
les
jmp
mov
int3
mov
jl
insb
mov
test
arpl
test
stc
popf
inc
mov
loope
lea
call
dec
adc
push
push
jns
divl
fwait
scas
adc
inc
test
jle
sbb
cmp
addl
fisubl
dec
adc
popa
mov
jbe
popa
fnsave
dec
mull
ja
mov
leave
in
mov
sbb
sub
mov
dec
jle
pop
iret
lds
lea
jg
dec
or
aam
xlat
xchg
and
jo
popf
pop
mov
add
in
in
push
xchg
iret
out
hlt
out
jbe
pop
inc
mov
test
mov
adc
clc
mov
xlat
mov
gs
shrl
cmpsb
int3
loop
and
rclb
ret
xor
call
xchg
scas
adc
cmc
cltd
xor
mov
sub
xchg
cmpsl
xor
in
out
mov
lahf
pop
mov
adc
out
int
jle
stos
popa
inc
mov
mov
mov
int3
je
mov
gs
lds
jp
inc
dec
mov
push
inc
dec
pop
aad
pop
inc
movl
stos
ds
outsb
repnz
mov
mov
in
jno
cmc
hlt
sbb
xchg
sub
mov
clc
pop
out
xchg
inc
and
jg
shl
push
sub
shlb
cmpsl
in
jno
addr16
sub
sbb
ss
cs
lea
sub
xchg
sbb
mov
or
mov
ljmp
test
loopne
cwtl
xchg
hlt
mov
mov
movsb
insl
mov
nop
test
aaa
repnz
dec
into
cmc
in
ljmp
loope
es
rol
ja
and
ds
ret
test
cwtl
ret
stos
pop
xchg
mov
imul
ret
jbe
pop
push
jne
mov
mov
or
jno
jge
add
push
jne
rcl
test
push
pop
roll
mov
and
mov
mov
test
pusha
addr16
mov
xor
inc
leave
sub
sarb
in
add
add
jmp
lock
arpl
sub
scas
ret
sarl
or
mov
jl
jle
test
lahf
push
jns
test
cmp
fwait
push
mov
dec
shrb
mov
insl
xchg
ret
shl
xchg
jno
sub
lock
jg
scas
xor
lahf
cli
add
jbe
lahf
cmp
out
cltd
xchg
mov
bound
xor
add
push
jno
pop
aad
mov
leave
pop
aas
repnz
dec
mov
sub
mov
cs
adcb
pop
fldt
xlat
and
int
push
ret
xchg
insl
in
sbb
add
mov
in
lods
pop
pop
sbb
bound
dec
jl
xchg
sub
divb
and
cs
adc
pop
fcmovnbe
dec
pop
mov
mov
aas
dec
adc
in
xchg
cmp
pushf
icebp
sub
xor
xor
insb
sbb
aas
xor
mov
inc
popa
xchg
inc
adc
xor
stos
scas
cmpsb
push
out
jmp
inc
das
ret
leave
call
call
insb
test
call
xchg
mov
or
hlt
or
gs
fs
adcl
mov
push
xor
fcom
mov
fimull
std
mov
ret
mov
inc
adc
sbb
arpl
pop
scas
mov
in
mov
cmp
jns
rcrl
daa
pop
xchg
fiaddl
mov
jmp
sub
into
or
jg
movl
xchg
stos
jmp
loope
fstpt
add
pop
and
mov
call
sbb
mov
test
adc
mov
add
jbe
fwait
jae
jmp
sahf
stc
mov
cmp
jns
inc
bswap
rol
mov
in
out
mov
mov
or
ja
sub
cli
xchg
sub
pop
push
lret
cmp
ja
daa
dec
hlt
push
mov
pop
popa
sbb
fcmove
xor
lock
add
mov
je
ror
jns
aam
push
test
fnstsw
jb
inc
out
sub
mov
gs
into
inc
jno
adc
mov
cwtl
jecxz
pop
out
mov
pushf
dec
sub
mov
int3
adc
mov
mov
pause
mov
xchg
jne
pop
ljmp
nop
ds
les
mov
jb
jo
mov
imul
sbb
mov
movl
cmp
jne
mov
sbbl
jmp
inc
sbb
test
add
dec
pop
idivl
jle
aad
repz
jns
int3
jae
xor
enter
out
lahf
jb
push
adc
subl
fcomps
mov
enter
int
pop
or
lret
lret
es
enter
adc
xor
cmp
stos
test
push
dec
scas
sbb
push
push
fildll
out
cmp
stos
pop
pop
xor
loop
jb
mov
popa
scas
mov
inc
fs
mov
mov
repz
or
add
roll
or
or
dec
jno
jbe
in
ljmp
leave
xor
fnsave
iret
movsl
xchg
gs
test
add
mov
das
in
or
xchg
lds
push
mov
jne
push
ficomps
imul
hlt
mov
imul
lods
es
inc
dec
xchg
fs
or
cmp
mov
movsb
sbb
ret
push
movaps
data16
cmp
xor
mov
jmp
iret
stos
xchg
cmp
cmp
mov
test
mov
jecxz
mov
jmp
mov
push
or
xchg
out
mov
sub
adc
sub
xchg
aad
jl
fneni(8087
scas
cld
inc
inc
mov
push
test
dec
dec
shlb
mov
ret
mov
ljmp
cmpl
add
push
movsb
cmc
mov
gs
mov
repnz
mov
dec
sbbl
neg
sbb
das
repnz
cmp
lret
xchg
inc
out
ljmp
and
xchg
lods
movsl
push
sti
or
and
push
fcompl
cli
push
jb
aaa
les
lret
daa
es
and
out
enter
fs
imul
sub
jecxz
push
test
cli
mov
inc
jp
add
push
dec
aam
jmp
jecxz
out
xor
xor
popa
push
cmp
outsb
sub
add
jne
xchg
in
mov
sbb
cwtl
dec
hlt
dec
push
insl
mov
mov
push
nop
xor
mov
in
jp
aam
jecxz
jb,pn
push
mov
decb
int
aam
cmp
aad
jo
popa
lcall
pop
cli
add
int3
pushf
sbb
xor
lods
sbb
cmc
cmp
movsb
fimull
mov
adc
or
jne
movl
xor
xor
add
subl
add
imul
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
xor
push
addl
mov
or
mov
jmp
jne
dec
cs
xchg
or
and
jl
jle
push
movsl
outsb
and
mov
hlt
mov
mov
loopne
ss
inc
add
xor
out
out
jle
mov
cmp
les
push
mov
push
fisttpll
add
add
cld
nop
rcrl
or
mov
enter
or
sti
sub
or
cmpsl
icebp
and
and
lods
sub
dec
jle
clc
mov
mov
add
cmp
scas
fwait
hlt
arpl
add
adc
leave
cwtl
loope
push
mov
lret
mov
dec
lds
jp
sub
add
in
xor
dec
shl
push
daa
aaa
sub
pop
push
xchg
mov
jmp
mov
pushf
pusha
xor
xchg
lods
fistl
mov
sbb
daa
aam
sbb
clc
in
xor
inc
insw
popa
inc
mov
dec
bound
xor
xchg
xchg
negb
aam
out
testl
xchg
push
aam
push
and
lcall
fldt
mov
je
mov
add
or
rcrb
stos
aad
ss
shl
rcr
lea
jmp
popf
inc
rclb
add
addr16
dec
mov
in
loopne
fs
add
sbb
test
cld
xor
push
shr
sub
mov
xlat
mov
and
les
sub
fcompl
push
negl
add
out
mov
mov
adc
sbbl
stos
xchg
in
mov
flds
mov
xchg
or
iret
pop
iret
fistpl
mov
or
test
mov
adc
push
lods
dec
mov
sbb
dec
push
push
dec
sbb
movsl
push
pop
mov
divb
roll
pushl
std
adc
xor
pop
push
mov
sbbl
mov
outsb
cmp
mov
pop
test
movl
pusha
sbb
movsb
subl
jo
sub
mov
mov
gs
xchg
jne
aas
pop
sbb
sub
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
or
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
xor
mov
sbb
xor
mov
adcl
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
jmp
out
adc
adc
ja
orl
icebp
mov
mov
jle
jne
int
mov
inc
inc
aas
or
and
add
jnp
xor
xchg
je
addr16
cmc
shll
push
fsubrl
jecxz
dec
call
dec
mov
je
loope
mov
sarb
fistl
mov
std
dec
inc
cmpsl
cmp
jo
test
data16
dec
aam
repnz
adc
push
push
cmp
scas
push
repnz
mov
or
cs
sahf
mov
adc
cltd
pop
sub
jge
xchg
push
in
xchg
jb
loope
and
dec
add
popa
fs
inc
lds
mov
imul
rclb
testb
push
jbe
pop
dec
jg
push
leave
out
popf
cwtl
sbb
pop
xor
xchg
scas
idivl
jmp
xchg
out
stos
outsl
ljmp
in
jnp
adc
test
lods
sub
pop
push
pusha
xlat
adc
in
mov
cmpb
inc
sti
mov
les
pushf
fstpt
dec
fisubs
repz
imul
cwtl
or
xor
or
out
pusha
cmp
pop
cld
aaa
jbe,pn
cwtl
jae
ljmp
stos
jge
dec
inc
dec
sub
in
outsl
pop
fbstp
sbb
std
shll
inc
lcall
inc
inc
xor
or
ja
jno
add
repz
enter
dec
mov
ds
push
mov
aaa
cmpb
add
mov
and
test
das
cld
xor
mov
mov
mov
jae
popf
clc
sbb
mov
vmwrite
mov
stc
insb
push
cmp
adc
push
andb
mov
hlt
repz
adc
sub
imul
add
scas
mov
mov
jbe
adc
ss
xchg
aas
mov
add
int
pop
jecxz
push
cmp
dec
fcmove
loop
test
inc
outsl
sbb
dec
icebp
pop
jp
inc
dec
popf
push
scas
sbb
into
pop
xor
mov
lock
mov
jl
pop
mov
mov
dec
pop
cmp
clc
scas
fprem
mov
mov
fsubrl
in
ret
unpckhps
mov
inc
push
jp
dec
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
xor
mov
movzwl
sbb
mov
mov
xor
andl
mov
add
andl
movzwl
xorl
mov
movb
adc
lea
mov
adc
mov
mov
xor
sub
adcl
mov
xor
xor
sbb
jmp
add
mov
cmpsl
insl
mov
or
jg
jle
sbb
arpl
jb
jmp
cs
in
or
or
mov
ljmp
or
cli
inc
cmpsl
jle
sbb
pop
daa
out
imul
es
das
dec
negl
insb
stos
mov
pop
clc
or
aaa
jne
and
add
adc
hlt
ljmp
insl
mov
inc
mov
imul
xchg
lock
out
jnp
fisttpl
daa
cwtl
dec
in
stos
mov
pop
dec
test
testl
mov
sub
pushf
cli
sbb
mov
xor
stos
rcl
dec
push
test
mov
aad
lea
inc
testl
movl
pop
mov
mul
mov
testb
ja
pop
jle
mov
jecxz
aaa
ja
cld
in
lods
add
cmp
jb
sub
popa
adc
arpl
mov
cli
outsb
fwait
mov
aas
frstor
adc
jg
mov
pop
adc
push
inc
dec
inc
pop
cmp
daa
repz
jb
pop
cmp
jae
test
or
iret
lret
pushf
push
mov
shlb
lock
aad
subb
push
xor
arpl
popa
adc
test
jnp
add
mov
in
push
dec
add
insb
xchg
sbb
aas
out
xchg
test
inc
clc
xor
movl
mov
orl
mov
movl
push
xor
or
mov
add
jmp
mov
mov
movl
inc
movl
cmp
movl
jb
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
addl
xor
sbbl
add
movl
cmp
jmp
adc
in
in
jno
aad
dec
add
inc
jle
icebp
jg
jle
pop
mov
add
outsb
jmp
cmpb
or
hlt
shlb
mov
int
cwtl
iret
jnp
insl
sbb
jmp
stos
mov
xchg
bound
cld
mov
xor
imul
addl
sar
or
jno
dec
adc
sub
gs
xchg
fistps
push
push
add
ficoml
call
cs
xor
sti
jne
leave
mov
and
sti
int3
add
xlat
fidivs
sarb
mov
fmull
subl
mov
mov
lret
aam
push
je
or
xchg
mov
mov
sub
dec
and
xor
sbb
mov
xchg
mov
mov
mov
pusha
xchg
stc
and
cmp
rcr
mov
push
add
jecxz
popa
mov
out
push
mov
sub
mov
adc
scas
int3
push
sub
int
int
out
xchg
mov
mov
shrb
loop
adcb
les
xlat
test
scas
outsl
out
loopne
in
int
jo
in
mov
jge
fldz
scas
dec
fisubrl
dec
pop
pop
jo
lods
pop
cs
mov
pop
scas
je
nop
dec
or
outsl
sbb
in
cltd
dec
movsl
sub
aas
mov
push
add
add
rolb
das
cmp
sub
push
sub
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
xor
jmp
mov
ja
jne
mov
insl
push
push
push
lcall
jle
jg
jle
cli
lcall
and
inc
outsl
mov
cmp
jo
loop
imul
cltd
scas
mov
dec
sbbl
imul
or
fcmovnb
jle
testl
in
mov
xchg
mov
hlt
shl
scas
and
xlat
dec
jmp
dec
cltd
push
in
push
cld
or
mov
or
push
inc
daa
addl
add
iret
subl
movsl
in
rep
xor
sub
inc
jno
sub
fwait
movsb
outsl
insl
pop
pusha
out
mov
add
sub
lods
sbb
push
setle
dec
mov
dec
in
clc
pop
jnp
dec
std
pop
pop
dec
ret
xchg
mov
dec
sub
lret
int
ds
add
in
lods
dec
xchg
out
jge
faddl
jns
mov
orl
fs
scas
mov
addr16
insb
push
mov
or
mov
jle
and
enter
mov
fs
popa
push
in
add
or
or
mov
shrb
sub
xor
or
xor
test
mov
pop
mov
pushf
push
daa
pop
sbb
pop
sub
scas
xor
push
ret
cli
sub
dec
stos
pop
sub
adc
bound
sub
cmpsb
push
cltd
ja
xchg
cmpsl
mov
add
add
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
jmp
mov
adc
adc
imul
pop
xchg
sub
inc
jle
icebp
jg
jle
stos
dec
das
call
pop
rorb
push
xchg
mov
stos
outsb
es
hlt
mov
es
and
push
jae
and
xchg
sbb
mov
jp,pt
xchg
iret
bound
inc
pop
sub
ret
sbb
jo
loope
jns
cli
xchg
hlt
cmp
and
imul
imul
lods
pop
and
add
fisttpll
inc
les
mov
cmpb
cltd
scas
lods
mov
xchg
les
les
cli
xor
les
sub
pop
xchg
aam
add
aas
mov
dec
cmpsl
xor
outsl
leave
push
shll
pop
xchg
jae
mov
inc
loope
xchg
pop
out
loop
push
push
mov
mov
jne
and
stos
fcomip
cs
fwait
push
mov
in
adc
and
jl
gs
inc
jecxz
jmp
das
dec
fsubr
adc
mov
faddl
lret
add
movsb
mov
inc
enter
cwtl
orl
push
inc
xchg
cld
nop
or
jecxz
in
jp
sub
cwtl
out
sti
aad
cmpb
xchg
rolb
inc
movsb
dec
out
push
xchg
jg
ret
mov
cmp
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
jmp
sub
sub
test
pop
cld
add
in
inc
jle
icebp
jg
jle
or
movsl
std
sti
lock
aaa
xchg
xchg
cmp
hlt
xchg
mov
jmp
je
cs
aad
cwtl
adc
addr16
xor
xchg
adc
out
xor
dec
fsub
aaa
push
bswap
cmpsb
xchg
stos
sub
mov
adc
in
lcall
add
xor
mov
jecxz
call
jns
xchg
or
jle
popa
inc
into
sbb
ljmp
or
cmc
xlat
mov
fs
sub
mov
in
dec
test
mov
pop
adc
or
shll
and
hlt
jle
inc
fdivrs
in
lret
push
fnstcw
daa
popf
je
fidivs
jecxz
outsb
jge
pop
push
sbb
inc
shrb
and
cmc
stc
inc
sbb
mov
jb
push
jae
xchg
lds
shlb
loopne
test
test
rcrl
add
iret
rcrl
outsl
in
jmp
fdivl
xor
enter
pusha
mov
inc
test
xlat
inc
ja
lods
mov
fxch
insl
add
lret
xor
es
jno
fisttps
cmpsb
xchg
xlat
pop
dec
sbb
das
repz
sub
push
dec
xchg
out
xchg
cmpsb
pop
aas
mov
lcall
les
test
incl
jmp
mov
xor
jmp
ljmp
jo
fidivs
mov
inc
jle
icebp
jg
jle
pushl
or
test
push
repz
scas
pop
fcoms
repz
rclb
cwtl
or
fsubs
and
jmp
push
push
sbb
fbstp
out
aam
cmp
mov
fdiv
cltd
scas
or
aas
das
into
xchg
pop
xchg
or
inc
daa
pop
leave
xor
movsl
xchg
pop
push
inc
ret
adc
push
pop
outsb
sbb
adc
sub
out
mov
dec
inc
mov
jge
rol
popa
adc
fstps
cmp
jb
xlat
push
scas
lret
out
stc
fstpl
stos
mov
adc
into
jp
sarl
pop
jg
jmp
xor
add
fidivs
js
mov
cmp
mov
rcrl
aam
adcl
cmp
jecxz
xchg
mov
sub
inc
imul
pop
and
sbb
mov
stos
sbb
or
add
xchg
and
or
lahf
mov
push
movsb
cmp
pop
xchg
xorl
and
sahf
je
push
imulb
out
push
mov
mov
divl
cltd
movsl
xchg
gs
add
fimull
ja
cwtl
and
punpckhwd
inc
insb
xor
cs
outsb
jl
pop
cmp
call
or
or
pusha
movsl
adc
jl
mov
add
mov
pop
leave
ret
push
mov
push
neg
movl
mov
adcl
mov
sbbl
add
xor
cmp
movl
jne
and
mov
xorl
mov
add
jmp
jo
sbbl
roll
push
sbb
add
jle
jl
jle
jmp
cs
inc
mov
pushf
and
sub
inc
test
push
mov
fmull
mov
fistpl
adc
gs
orl
shlb
push
cli
std
xchg
cmp
fnstenv
mov
enter
lods
lock
testl
sub
fldenv
add
mov
pop
mov
add
mov
fcmove
and
in
and
movsl
mov
cs
jmp
stos
inc
icebp
mov
pop
shll
dec
call
mov
lahf
gs
inc
fildl
adc
pop
enter
pop
ds
push
dec
pop
jl
add
pop
cli
int3
sub
ds
pushl
and
lahf
mov
xchg
loop
stos
fisubs
outsb
jmp
aas
jne
insl
xor
and
pop
pop
xor
add
sbb
iret
sub
mov
push
je
ja
movsb
inc
push
ret
clc
dec
add
stc
push
scas
mov
xlat
mov
rcrl
fsubrs
push
enter
jmp
push
inc
cmp
pop
popa
mov
pusha
dec
out
mov
mov
adc
and
fwait
subl
cmp
cmpsl
or
outsb
shlb
jns
lret
pop
outsl
mov
pop
or
insb
in
or
loope
test
stos
jp
pop
cmpb
sbb
stc
sbb
fwait
rcl
cmc
xchg
mov
in
jno
cmp
lds
sti
jb
ss
xchg
dec
add
das
cwtl
pop
shrl
out
rcrl
cwtl
iret
pop
dec
sahf
lock
repnz
mov
add
mov
pop
push
jmp
adc
and
adc
stos
adc
push
sbb
jle
repnz
aaa
testl
dec
inc
push
pushf
out
rdtsc
mov
xor
fcompp
mov
jmp
mov
jg
test
add
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
jmp
pop
pop
dec
pop
dec
xor
outsl
aam
test
adc
mov
xorps
push
add
insl
mov
sbb
std
lock
das
mov
sub
xlat
add
iret
push
add
lods
es
and
repz
push
cmp
rcl
jno
or
shrl
add
push
outsb
xchg
pop
fmuls
sub
fmuls
js
int3
enter
xchg
sbbl
out
rclb
les
add
imul
push
push
sub
andb
push
fwait
sbb
iret
push
sub
cmp
dec
inc
xchg
xchg
test
testl
bound
inc
adc
fwait
mov
cwtl
jnp
insl
cwtl
in
or
inc
sbb
dec
dec
xchg
xor
pushf
int
push
mov
es
mov
xor
sbb
ds
sbb
aas
mov
movsl
cmp
cwtl
cmp
pop
and
push
imul
sbb
mov
cwtl
push
leave
cmpsb
sbb
and
and
hlt
pop
inc
mov
enter
fwait
and
dec
mov
mov
mov
sbb
xor
popa
cld
and
and
testb
fisttps
test
xchg
mov
imul
xor
xchg
js
fwait
test
clc
mov
xor
hlt
mov
add
sti
jo
lret
lods
xor
stos
outsl
inc
jns
lret
add
push
insl
mov
fwait
add
cmpsb
in
jmp
xor
mov
cmp
dec
push
das
ret
pop
inc
push
fsubrl
or
cmpsb
lret
or
and
call
mov
test
idivb
adc
gs
pop
or
sahf
pusha
jl
sbb
mov
jecxz
jbe
jmp
adc
xor
fcompl
push
jno
lret
je
mov
inc
sti
inc
pop
cld
sbb
loopne
lock
jo
inc
sti
adc
ret
jne
mov
add
jmp
mov
imul
sbb
loopne
dec
jle
adc
lods
loope
fidivrs
xchg
rorl
mov
cmp
in
inc
pusha
jae
xchg
jmp
test
jl
xchg
shlb
xor
data16
inc
cmpsl
and
lcall
cmp
daa
cmp
imul
cmp
les
enter
icebp
neg
movsl
stos
stos
pop
mov
push
es
imul
mov
in
sub
xchg
bound
or
jp
dec
fdiv
daa
decl
mov
stos
cmp
gs
jle
and
or
aas
adc
lret
and
xchg
popa
push
adc
fstl
mov
cmp
out
mov
mov
call
stc
pop
and
cld
iret
jb
movsb
pop
sbb
inc
fstpt
repz
xor
push
fcomps
mov
sub
xchg
enter
inc
aas
mov
pop
push
pop
jne
cmpb
out
xchg
dec
mov
jl
mov
out
icebp
add
cmp
insb
pop
pop
lcall
dec
adc
push
negl
xchg
dec
out
push
orl
out
push
adc
xor
in
ss
dec
es
inc
fldenv
imul
mov
data16
fidivs
test
or
jmp
adc
mov
push
mov
insl
test
pop
lret
cmp
hlt
lret
xchg
stos
xchg
push
adc
jns
inc
sbbb
rcrl
jle
dec
pop
xor
cmp
sub
mov
mov
cltd
int3
outsl
inc
cmp
xchg
cwtl
pushf
cmp
insb
xor
push
push
ja
xor
test
push
sub
dec
dec
sub
sub
pop
cmp
mov
out
pop
push
fnsave
inc
insl
iret
ljmp
lcall
mov
xorb
push
add
iret
pop
dec
or
push
lea
movq
jbe
loope
mov
push
fiaddl
mov
fistps
push
sub
enter
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
subb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
ljmp
add
add
add
add
add
sub
add
add
add
ljmp
add
add
add
add
add
add
add
add
jo
add
je
add
js
add
je
add
mov
add
add
push
aaa
inc
inc
js
fs
data16
jo
aas
inc
outsb
gs
je
push
je
je
inc
inc
pop
inc
push
inc
dec
push
inc
inc
dec
dec
push
inc
inc
cmp
add
pop
and
add
add
add
enter
add
add
adc
add
pop
xor
add
daa
add
mov
and
add
daa
add
pushf
add
pushf
and
add
add
add
add
add
aaa
add
push
and
add
sub
add
cmp
add
add
add
cmp
add
and
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
imul
popa
jae
push
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
fs
imul
add
imul
jb
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
mov
imul
jae
bound
push
push
imul
add
push
imul
popa
bound
add
add
outsb
dec
arpl
add
stos
add
fs
jne
jae
jb
add
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
popa
jb
jo
gs
add
mov
imul
imul
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
insb
outsl
jae
inc
gs
je
jo
add
add
outsb
dec
outsb
jo
je
gs
je
jo
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
push
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
adc
gs
jae
inc
inc
add
popa
insb
imul
je
add
arpl
outsl
push
push
outsb
outsl
ja
add
insb
push
imul
imul
fs
gs
outsb
je
cmp
arpl
popa
imul
outsb
add
sahf
add
push
arpl
jo
jns
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
inc
jb
ja
outsb
jne
popa
jb
mov
push
popa
bound
fs
gs
dec
jne
push
add
or
inc
gs
inc
inc
js
jno
push
gs
imul
outsb
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
push
add
je
jb
jo
add
sti
add
dec
outsb
push
arpl
push
push
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
imul
jae
addr16
add
xor
jb
outsl
dec
gs
push
add
addb
outsb
data16
popa
je
push
arpl
add
ja
arpl
add
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
inc
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
fs
outsb
jo
je
mov
inc
gs
jb
insl
gs
jb
arpl
mov
inc
gs
imul
outsl
arpl
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
imul
popa
jae
inc
add
dec
add
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
inc
gs
jns
je
insl
dec
outsb
jne
mov
ja
je
je
push
add
loope
inc
imul
outsl
ja
add
inc
jb
popa
je
push
imul
inc
add
add
popa
bound
imul
cmp
inc
push
jo
jb
add
or
push
imul
je
gs
add
add
push
jae
push
imul
arpl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
jae
popa
addr16
outsl
js
js
add
inc
gs
outsl
jo
imul
dec
add
je
outsb
jne
loop
inc
imul
outsl
ja
js
add
fs
outsb
jne
add
add
jae
popa
addr16
outsl
js
add
add
jne
insb
push
arpl
add
outsb
imul
add
inc
gs
imul
js
dec
outsb
addr16
push
add
mov
push
imul
ja
add
add
je
insb
imul
jb
les
dec
popa
jo
imul
arpl
add
fs
je
imul
dec
imul
jne
je
insl
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
mov
dec
outsb
je
jb
arpl
arpl
add
je
outsl
jne
insb
gs
insb
imul
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
je
jae
outsb
arpl
jns
je
je
add
sub
inc
push
ja
jb
jne
push
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
popa
jb
outsl
ja
jb
add
and
inc
push
dec
outsb
jne
add
imul
outsl
ja
jo
popa
je
add
mov
imul
movl
imul
gs
js
add
pop
add
je
arpl
jo
jns
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jo
imul
imul
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
push
outsb
jne
popa
imul
add
push
gs
arpl
insb
insb
dec
outsb
outsw
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
lahf
add
jo
je
push
popa
addr16
add
sub
jb
gs
push
add
add
popa
insl
gs
arpl
add
data16
je
arpl
mov
dec
outsb
jbe
insb
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
arpl
gs
imul
add
inc
push
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
pushf
add
dec
arpl
imul
gs
outsb
jne
je
imul
add
fs
outsb
jne
add
add
imul
outsb
outsl
ja
gs
popa
addr16
add
cmp
push
gs
jne
jae
jb
add
je
gs
popa
addr16
add
inc
outsl
jb
addr16
jne
fs
imul
add
gs
je
inc
imul
jb
insl
push
add
stc
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
push
xor
cs
insb
add
mov
push
gs
outsl
jbe
inc
imul
jns
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
pop
add
gs
imul
bound
gs
add
xchg
imul
jne
jb
add
mov
jo
jb
popa
je
add
or
gs
jne
jb
outsb
je
imul
jns
add
cmp
dec
jo
outsb
inc
jbe
outsb
je
add
dec
add
insb
outsb
inc
add
add
je
push
dec
outsl
arpl
add
push
outsb
push
gs
js
gs
imul
gs
add
je
popa
insb
inc
jb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
int
inc
jb
popa
je
inc
jbe
outsb
je
add
movsb
add
outsb
arpl
dec
outsl
add
outsl
add
outsb
insl
popa
jo
imul
insb
add
push
insb
gs
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
jb
arpl
fs
jae
add
addb
jb
gs
imul
rolb
inc
gs
popa
je
inc
outsl
jb
popa
je
add
outsl
add
je
imul
popa
je
add
jge
push
gs
data16
gs
imul
push
add
xchg
add
outsl
bound
push
gs
insb
insb
outsl
arpl
fildl
inc
jb
popa
je
dec
popa
imul
in
push
gs
outsl
insl
insl
push
imul
add
gs
jns
je
insl
push
imul
gs
jns
je
insl
inc
imul
jns
add
add
inc
popa
fs
gs
fs
je
add
mov
jo
insb
insb
outsl
arpl
and
inc
outsb
jne
push
gs
jne
arpl
jns
gs
add
push
add
fs
imul
js
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
gs
jb
outsl
jb
outsl
fs
out
inc
jb
popa
je
push
gs
outsl
je
push
push
add
popl
inc
insb
outsl
bound
inc
insb
popa
addr16
mov
popa
imul
insb
gs
bound
arpl
add
je
jne
bound
inc
outsl
jb
popa
je
add
xchg
add
imul
outsl
dec
jne
je
inc
jns
add
inc
gs
jns
je
insl
inc
gs
jne
je
dec
dec
popa
outsb
addr16
add
test
inc
gs
imul
imul
jns
add
jl
inc
fs
je
insl
inc
add
stos
add
gs
jb
outsl
insl
insl
inc
jb
outsl
jb
add
add
jae
jb
insl
jo
inc
add
add
gs
push
inc
outsl
outsb
je
js
add
repnz
gs
je
push
popa
imul
insl
gs
add
movb
je
arpl
imul
gs
je
inc
imul
imul
jae
jne
arpl
add
add
fs
imul
add
mov
inc
gs
inc
push
add
pop
add
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
push
inc
outsl
outsb
je
add
add
imul
add
add
je
jo
outsb
inc
imul
add
or
inc
imul
push
add
insl
fs
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
insl
add
gs
add
pop
pop
arpl
insl
outsl
fs
mov
insl
bound
outsl
ja
jae
add
add
insl
jae
pop
gs
je
add
imul
add
outsb
imul
add
arpl
outsl
imul
xchg
add
popa
insb
outsb
jne
add
add
imul
ja
jae
popa
je
add
add
jb
jo
add
out
jae
jb
outsl
insb
insb
add
add
arpl
outsl
insl
bound
add
arpl
jb
jb
add
ljmp
jo
add
add
jb
push
add
ja
arpl
data16
insl
bound
gs
add
int3
add
outsl
jb
add
add
outsl
ja
outsl
ja
jb
add
insb
outsl
arpl
add
add
jns
je
insl
add
sub
ja
jae
bound
add
add
jae
jo
imul
pop
pop
arpl
inc
imul
jbe
jo
imul
add
jne
arpl
mov
insb
outsl
arpl
je
insl
add
data16
jne
push
ja
jae
push
add
js
je
pop
add
insb
insb
outsl
arpl
add
add
je
bound
add
jb
outsb
je
or
gs
add
cmp
arpl
outsl
jne
add
add
gs
je
add
bound
popa
jb
push
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
enter
je
push
push
push
inc
push
push
cs
insb
add
push
add
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
dec
insl
popa
addr16
imul
fs
insl
popa
addr16
add
adc
inc
jb
popa
je
push
jb
jo
jb
jns
push
popa
addr16
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
dec
arpl
add
dec
inc
push
dec
xor
cs
insb
add
les
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
gs
dec
jne
push
add
popa
je
dec
inc
push
add
bound
gs
outsb
add
mov
inc
gs
gs
inc
inc
add
inc
add
je
gs
arpl
popa
jo
add
add
je
imul
jae
movl
inc
inc
add
jne
inc
imul
addl
gs
gs
inc
js
outsb
je
outsl
imul
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
add
gs
je
inc
dec
inc
imul
add
gs
dec
bound
arpl
outsb
add
je
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
je
gs
dec
gs
imul
inc
jb
popa
je
inc
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
iret
add
insb
arpl
insb
gs
gs
add
jne
fs
arpl
add
gs
je
push
outsl
insb
imul
add
add
je
jne
jb
outsb
je
bound
arpl
stos
add
gs
je
push
arpl
outsb
add
add
je
bound
je
jb
arpl
add
add
insb
arpl
imul
add
gs
je
inc
outsl
outsb
je
add
add
jne
inc
outsl
outsb
je
push
add
dec
add
je
outsl
outsb
je
popa
je
add
gs
outsl
inc
js
add
gs
popa
insb
gs
gs
outsb
je
imul
gs
dec
jne
push
add
rolb
push
gs
imul
jae
movsb
add
je
insb
je
add
jae
je
imul
dec
jb
inc
js
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
push
gs
jp
push
popa
insb
gs
gs
add
je
jb
jae
dec
jb
inc
js
mov
jae
je
outsb
add
add
je
jne
inc
add
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
push
popa
je
inc
imul
outsb
jae
outsl
outsb
inc
add
push
dec
dec
push
inc
push
dec
cs
insb
add
popa
jns
pop
je
push
imul
lcall
add
or
dec
ja
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
data16
pop
cmp
add
inc
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
cmp
inc
add
cmp
mov
inc
add
ds
add
test
push
inc
add
or
inc
add
fisttpll
aaa
inc
add
inc
inc
cli
jne
in
incb
mov
cmp
add
xchg
pushf
clc
xor
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
add
pop
dec
imul
pushf
clc
sahf
jmp
add
push
cmp
pushf
or
jecxz
inc
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
dec
dec
imul
inc
dec
dec
inc
dec
jne
dec
dec
push
imul
imul
inc
imul
insb
imul
dec
push
inc
outsl
imul
dec
dec
inc
dec
dec
sub
inc
inc
add
add
fs
addr16
add
dec
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
mov
inc
add
shll
and
inc
push
outsl
push
dec
cmp
add
in
adc
inc
inc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
jns
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
popa
push
push
push
dec
je
push
bound
push
arpl
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
js
popa
inc
push
insb
pop
ja
je
add
insb
jb
inc
push
push
inc
insb
add
jbe
push
push
dec
imul
add
in
jnp
jnp
cmc
lcall
and
mov
xlat
add
incl
add
gs
push
rorb
repz
sahf
cmc
push
ffreep
pusha
insl
jnp
test
add
insl
insb
fwait
cmp
mov
sub
lcall
call
and
daa
sti
adc
cmp
outsb
adc
inc
mov
popa
fcompl
outsb
adc
or
movsb
and
movsb
in
cmpsl
push
roll
jne
mov
data16
xorl
es
sbb
stc
das
stc
popa
and
fwait
nop
push
mov
cli
notl
dec
std
out
mov
bnd
stos
jle
arpl
and
pop
into
mov
jb
push
mulb
sub
add
mov
inc
push
in
xchg
iret
call
lds
push
ret
jo
inc
inc
mov
sub
adc
xor
icebp
dec
jecxz
push
dec
sbb
or
sbb
mov
adc
int
sbbl
cmp
outsl
call
add
pop
ficoml
in
jle
lcall
adc
fadds
add
add
add
lcall
add
fucomi
shrb
push
dec
movsb
insl
fists
push
xchg
jo
shlb
icebp
push
out
scas
rcrb
cmpsl
fists
repnz
sahf
cmpsl
sarb
cmp
jns
inc
sub
xor
pusha
dec
xchg
adc
or
leave
mov
and
test
shlb
inc
cltd
int3
xchg
stos
loop
dec
dec
mov
sarb
mov
push
mov
lea
mov
pop
push
add
push
mov
ja
adc
sub
dec
scas
into
xor
push
adc
and
aaa
mov
or
std
outsb
shll
mov
stos
add
fwait
aad
iret
push
clc
ljmp
add
jecxz
mov
lahf
sub
mov
cmc
sbb
dec
jae
addr16
push
ret
enter
outsl
add
adc
mov
mov
push
pop
popf
gs
flds
add
add
add
add
lods
and
iret
cmp
jmp
ret
adcl
cmp
ss
xchg
xor
test
mov
jge
fwait
outsb
fidivrs
call
and
out
mov
pop
aas
or
inc
pop
inc
push
negb
push
jnp
imul
insb
aam
jae
not
dec
call
or
cmpsb
or
pop
mov
addb
gs
pop
fildll
and
mov
in
int3
inc
into
cli
or
cmp
dec
inc
push
imul
mov
xchg
or
icebp
mov
push
jb
cmp
pop
push
test
pop
push
fwait
dec
jmp
inc
sqrtps
jnp
je
popf
aad
sub
fwait
loop
jnp
lcall
enter
mov
jnp
and
mov
dec
imul
add
add
add
subl
roll
sbb
add
incl
add
aam
xchg
stc
lds
jb
mov
popa
mov
outsb
outsb
mov
sbb
fimuls
or
or
in
or
popf
imul
rcrb
in
sbb
jne
rolb
jnp
sub
das
cmpsb
or
cmc
or
sub
lods
and
mov
cltd
push
xchg
push
loopne
mov
les
test
xchg
std
sbbb
mov
das
rcrb
push
outsl
jecxz
loopne
jnp
outsb
cltd
or
arpl
fidivrs
jl
adc
iret
adc
add
xchg
pop
push
ss
stc
fistl
cld
test
mov
xchg
aaa
int3
sub
xchg
test
movsb
stos
xchg
std
popa
jg
mov
and
out
outsb
repnz
mov
mov
or
jnp
xor
call
pop
add
pop
jae
or
pop
dec
or
adc
mov
incl
add
pusha
inc
mov
or
outsb
xor
or
jae
jg
pop
aas
mov
dec
sub
or
xchg
mov
sbb
push
inc
pop
xlat
dec
xchg
sub
mov
or
popa
addl
cld
out
ljmp
sub
or
mov
insb
stc
arpl
sub
les
leave
sti
xchg
in
in
mov
gs
clc
jecxz
cmp
stos
or
pop
xor
aam
push
lret
fsubs
jmp
push
mull
xlat
cmc
rcll
sub
faddl
add
fisttpll
sub
inc
dec
or
inc
and
mov
loope
pop
cmpsl
in
pop
idiv
or
shl
jp
adc
sti
into
add
aaa
mov
push
jp
outsb
daa
leave
int3
push
lret
rcrb
jne
filds
arpl
jne
adcl
or
rorb
jns
clc
test
add
cmc
insl
cmc
out
lcall
enter
push
faddl
add
add
add
aad
add
adc
xor
xchg
mov
movsb
mov
and
imul
leave
pop
add
popf
cmp
xchg
rclb
stos
push
add
loopne
push
ficoms
and
dec
scas
mov
mov
pusha
adc
leave
push
aam
lcall
xchg
or
xchg
rcr
dec
cwtl
cmc
loopne
push
xchg
ljmp
jmp
jg
ja
inc
xchg
es
outsb
and
inc
and
cmp
xor
fildll
movb
push
dec
add
or
imul
pop
pop
daa
sbb
adc
test
iret
jge
into
xlat
and
daa
lds
int
jne
loope
mov
lock
mov
shll
pop
add
add
outsl
jle
aas
mov
cmp
popa
fldl
add
add
add
mov
cmovs
in
sbb
jbe
mov
insl
mov
enter
mov
jno
xor
out
ss
stos
repz
les
mov
leave
int3
or
cmp
jecxz
insl
gs
mov
push
mov
inc
add
push
insl
dec
cmp
xchg
lahf
sbb
aas
lods
call
and
push
and
repnz
ret
cld
scas
mov
fcmove
lods
pushf
mov
xor
pop
cmpsb
repz
adc
mov
mov
test
mov
aad
jne
pop
xchg
mov
sub
mov
xchg
mov
push
or
iret
add
and
mov
add
mov
xchg
push
je
add
jge
xchg
mov
and
gs
xor
jae
mov
pop
and
dec
add
jle
and
scas
sti
jle
pop
push
pop
fucom
arpl
incl
add
push
cmpsb
sbb
jg
or
cld
adc
outsb
dec
ret
dec
xchg
insl
test
loope
int3
dec
clc
enter
push
lds
out
xchg
pushf
fs
icebp
mov
adc
xchg
data16
insl
lods
mov
cmp
pop
sbb
outsb
mov
jle
and
jg
in
stc
add
nop
mov
in
push
jnp
cmp
in
push
repz
pop
xchg
jb
outsl
jbe
dec
pop
cmp
test
xlat
aad
test
test
or
mov
stos
pushf
xor
mov
cs
add
test
sbb
pop
ja
xchg
test
orl
sub
cwtl
addr16
inc
aad
mov
or
lods
push
pop
pop
out
outsb
or
pushf
add
mov
or
add
sahf
fcomi
xchg
jns
mov
lea
ja
jmp
xchg
daa
push
and
in
jge
mov
pusha
test
cs
and
add
negl
arpl
filds
add
add
add
movsb
and
add
loopne
movsb
jns
dec
outsl
inc
mov
mov
mov
roll
adcl
mov
sarb
std
mov
push
adc
fs
test
imul
je
cmovb
adcl
popa
mov
adc
lock
rorl
mov
cbtw
dec
loopne
dec
pop
movsb
fistpl
in
sub
mov
cltd
and
fs
mov
or
mov
cmp
pop
xor
mov
add
push
into
xchg
repz
fcoms
icebp
in
iret
clc
push
sbb
jne
or
jmp
xor
add
mov
test
ss
mov
adcl
lahf
mov
jge
push
les
call
add
xchg
lea
adcb
inc
ja
xchg
mov
aas
push
add
push
jl
jle
insb
out
adc
dec
pop
pop
loopne
add
add
add
dec
fimull
out
xor
add
fidivrl
push
lcall
push
dec
xchg
push
dec
jb
cmpsl
mov
dec
out
xchg
test
cmpsl
cmpsl
insb
fisttps
or
lods
jmp
jecxz
cmpl
pop
cmp
inc
nop
test
in
xor
mov
push
sub
stos
outsl
fwait
cmp
mov
xchg
int
push
divl
xor
loop
std
xor
xor
sarb
fnstenv
sub
push
mov
das
data16
jmp
or
jb
jnp
imul
cmovp
int
or
insb
popf
or
jecxz
or
fmull
leave
or
cli
mov
lods
and
aad
stc
lock
inc
adc
sti
inc
jmp
xor
adc
or
shll
mov
and
fs
sbb
lahf
dec
bound
mov
adc
in
xor
adc
pop
loope
add
add
add
inc
lret
imul
adc
mov
aam
f2xm1
jg
mov
pop
cli
notb
push
fs
cs
out
sbb
xor
push
sbb
sbb
ds
or
js
nop
lret
stc
imul
xor
movsl
mov
or
pop
nop
pop
sbb
add
jge
fnstenv
push
adc
ss
fucomp
mov
ljmp
xor
xchg
pushf
push
dec
pusha
jne
mul
dec
mov
push
mov
adc
or
movsb
jge
imul
sub
jmp
inc
in
jmp
addr16
fwait
sub
fsubrl
loopne
push
sarb
test
das
sub
xchg
pop
push
inc
sbb
mov
inc
pop
adc
notb
leave
fsubr
push
pushf
add
lods
inc
lock
xor
int3
dec
inc
xchg
xchg
cld
mov
repz
cmp
aaa
data16
jne
mov
lcall
add
incl
add
roll
aad
sbb
or
mov
pushf
add
fisubs
jmp
sahf
shll
xchg
mov
ja
adc
sub
dec
pop
pop
mov
push
lret
dec
fnstcw
sti
adc
sahf
adc
sti
mov
lea
and
inc
xor
cmpsl
stos
adc
stc
pop
test
mov
cmp
pop
sti
hlt
ljmp
xchg
jg
pop
xchg
cmpsb
mov
fs
mov
sahf
jmp
pusha
adc
sarb
mov
mov
lods
mov
inc
dec
dec
adc
pop
cmp
mov
jo
loop
push
or
jb
cli
add
cwtl
cltd
mov
fwait
mov
data16
loope
adc
dec
xchg
adc
sbb
add
rclb
repnz
dec
cmp
mov
cmp
lods
mov
inc
push
inc
pop
enter
jge
and
add
jnp
add
jnp
sti
xchg
lahf
mov
imul
add
add
add
aas
test
or
sbb
dec
push
mov
aaa
fwait
xor
fimuls
sbb
sti
add
sbb
xchg
sahf
xlat
outsl
lret
rolb
mov
jl
jmp
xchg
outsb
loop
pushf
push
xor
push
xor
fsubl
adc
das
outsl
add
dec
mov
iret
xchg
iret
dec
jmp
inc
in
lea
mov
mov
sti
aaa
mov
pop
cmp
fsts
ds
mov
jne
mov
mov
ret
loope
cmp
jbe
hlt
adc
and
mov
jl
lods
repnz
iret
mov
jp
cmp
adc
and
mov
xchg
sahf
imul
fstps
js
gs
jb
pop
sbb
lahf
sub
and
or
sub
lods
fildl
mov
cmc
clc
lahf
rorb
pop
push
push
ffreep
add
pop
sarl
mov
jae
in
add
add
add
loope
stos
int3
mov
add
notl
push
out
jmp
xor
jbe
std
dec
ss
sub
fdivrs
jae
cwtl
adc
jg
xor
inc
scas
add
mov
mov
test
mov
push
rcll
pop
xor
jecxz
sub
int
jnp
orl
add
fnstcw
je
lds
lcall
add
dec
repz
test
adc
sub
data16
cmc
ret
push
xchg
xchg
lret
lods
add
push
repz
aad
mov
iret
adc
out
imul
push
sar
lahf
lahf
mov
inc
and
mov
das
adc
stos
or
mov
sub
push
add
addr16
mov
xchg
and
lds
ds
push
add
dec
cmpb
insl
lock
std
repz
mov
add
incl
add
test
leave
adcb
pop
mov
dec
pop
mov
sub
sub
rorl
push
xor
lock
or
pop
adc
dec
mov
lret
push
pop
hlt
aad
test
addl
cmp
add
fsubs
ja
push
xchg
mov
push
movsb
push
lods
cmc
and
mov
push
mov
movsb
aam
jns
or
mov
les
push
movl
out
push
das
lcall
cs
add
fldcw
xor
and
inc
mov
stos
jp
scas
push
inc
jmp
loopne
shlb
pop
out
stos
lods
enter
xchg
jno
mov
icebp
mov
mov
fidivrl
cli
xor
icebp
mov
insb
and
lods
inc
clc
cli
mov
sti
push
mov
add
lock
cmp
arpl
je
fisttps
add
add
add
xor
fisubrl
es
lret
mov
mov
call
pop
dec
mov
in
subl
int
pop
jne
out
xchg
pop
rcl
cmpsl
sbb
jl
iret
mov
mov
out
cmp
xlat
movl
ret
dec
int
stc
push
aas
push
or
mov
cli
inc
lods
push
add
int
inc
insl
jle
or
loop
cmc
fwait
cmp
push
inc
add
orl
dec
cmp
adc
sbb
adc
jno
or
jne
mov
xchg
jl
out
push
jge
mov
mov
inc
or
pusha
xorb
test
ljmp
push
mov
xor
pop
mov
cmp
add
lret
gs
add
mov
mov
cmp
adc
out
add
add
add
stos
xchg
mov
outsl
mov
imul
pop
ds
or
mov
notl
jae
clc
not
or
data16
in
lret
dec
mov
add
lcall
mov
mov
sub
or
jo
cmp
pop
sbb
mov
sbb
push
or
xor
push
in
inc
shlb
push
popf
add
popa
cmpb
pushf
sub
lahf
xchg
insb
mov
ljmp
dec
and
std
mov
push
cmp
dec
popa
jp
cltd
pop
jbe
mov
bound
int3
push
mov
cmp
and
insb
jmp
and
cmpsb
push
cmp
adc
lret
push
and
data16
js
les
xchg
sub
add
pop
pop
inc
enter
adc
shlb
and
stos
cs
mov
lret
icebp
sbb
add
xchg
in
mov
incl
shrl
xlat
in
repz
call
add
stos
inc
decb
cmp
jecxz
sub
add
add
ficoms
and
arpl
aas
jae
mov
fldenv
jg
dec
mov
notl
les
das
test
fistpl
adc
and
cmp
cmpsb
and
movsl
xchg
push
push
out
aam
push
mov
mov
imul
xchg
cmp
rcll
lcall
push
dec
pop
add
andps
jle
cmp
inc
out
push
lock
push
xor
pop
jnp
clc
jno
fucom
in
test
es
push
cli
scas
cwtl
adc
fisubrl
unpcklps
push
lret
push
xor
mov
sbb
jae
xchg
inc
push
test
gs
fbld
inc
jg
test
divl
jno
test
inc
out
daa
clc
jo
ret
ficoml
add
sub
in
negl
sub
movsb
loope
inc
xor
incl
add
pushf
push
xchg
roll
push
fisubrl
pushf
arpl
fstpt
dec
in
mov
xor
nop
and
pop
mov
jle
shl
clc
out
mov
mov
enter
lods
int
cmp
gs
ja
sbb
jb
js
aaa
imul
stc
hlt
jb
or
andb
or
fnsave
mulb
out
ror
xor
mov
dec
or
std
cli
jge
mov
scas
sub
mov
imul
repz
das
mov
pop
mov
mov
mov
ficompl
push
dec
jnp
in
lods
ds
xchg
and
dec
mov
xor
sbb
gs
or
mov
jae
push
sbb
jno
xlat
popa
je
or
jno
mov
movsl
push
stc
xor
fisubrs
in
add
mov
stc
dec
push
fcompl
pushf
pop
rcll
incl
add
push
sub
fadds
ret
cmp
or
out
flds
gs
out
mov
push
shl
xorl
mov
outsb
or
sub
inc
add
inc
popf
adc
int3
cs
daa
jle
pop
xchg
iret
jmp
sbb
jge
gs
add
insb
xor
pop
ret
inc
xor
shrb
jnp
push
in
and
or
mov
mov
xor
mov
adc
add
das
push
dec
mov
inc
add
sub
xchg
or
pusha
dec
ret
pop
stc
adc
test
insb
xchg
jne
lret
xchg
jmp
ret
rcl
int
push
mov
lcall
adc
mov
insl
push
or
xor
jp
arpl
call
jmp
jnp
xor
add
adc
push
push
push
mov
in
push
jmp
add
add
add
mov
xchg
dec
pop
cld
movsb
pop
jmp
cmpsb
les
jl
fwait
mov
sub
pushf
arpl
xchg
sbb
repz
pop
dec
push
mov
push
cltd
pop
push
or
out
lret
cltd
mov
inc
and
jl
leave
jno
fiadds
scas
jle
mov
mov
xlat
ror
fnstenv
dec
push
loop
dec
jo
movsb
cmp
dec
dec
aad
lahf
pop
or
inc
xchg
mov
cmp
xor
pop
adc
popa
lods
es
or
xlat
xchg
adcb
ror
fstpl
mov
inc
repnz
mov
mov
js
mov
pop
xlat
stos
rcrb
insb
out
adc
push
xor
adc
fwait
push
mov
fwait
xchg
and
inc
add
mov
outsl
call
into
dec
sti
sti
jb
aas
dec
xchg
cmpsb
or
xor
jno
push
sbb
add
repnz
add
pop
lcall
les
push
lods
movsb
push
in
add
incl
add
pop
pop
movsb
dec
dec
jg
pop
mov
faddl
push
dec
inc
aam
inc
cmp
lods
xchg
imul
cmovg
cltd
dec
jo
xchg
ficompl
sar
push
jbe
popf
add
push
or
xor
jmp
mov
xchg
mov
xor
mov
ficomps
mov
sbb
clc
dec
lret
mov
jmp
leave
pop
jge
fwait
xor
insb
pop
mov
dec
mov
mov
pop
dec
cltd
xchg
mov
arpl
gs
xor
sub
xchg
and
clc
cltd
xor
mov
leave
loope
cwtl
lcallw
test
notb
push
sub
clc
mov
adc
js
lods
pop
push
and
push
incb
sbb
cwtl
outsb
cmpsb
mov
pop
jmp
jge
popf
add
mov
push
decl
faddl
add
incl
add
es
mov
adc
loope
enter
stc
inc
mov
stc
xchg
jnp
add
and
stc
push
popa
mov
test
cmpsl
dec
sub
cmpsl
add
mov
push
and
fcmovnbe
xor
or
int3
scas
pop
das
loope
dec
adc
call
xor
enter
outsb
sub
shlb
jnp
int
add
test
cmc
sub
add
stos
in
rep
cld
dec
int3
mov
xchg
jecxz
xchg
idivl
rcrl
lods
dec
mov
dec
out
dec
mov
mov
jecxz
in
fstpl
and
inc
add
push
jecxz
sub
dec
in
pop
mov
sbb
test
fldcw
push
leave
xlat
or
add
jecxz
in
ret
fdivr
mov
enter
in
mov
dec
aas
fs
sahf
sub
leave
in
stc
test
sub
into
outsb
add
jmp
in
push
sub
mov
incl
add
pop
jg
scas
push
scas
fdivl
cmc
push
dec
iret
sti
scas
ret
sbb
jg
cmc
add
xchg
or
fmull
or
pop
bound
int3
mov
lret
inc
sub
aas
or
ja
loopne
mov
fstl
mov
sub
jge
cmp
lret
sub
insb
dec
cwtl
or
dec
or
add
ret
push
lahf
dec
pop
or
rcl
sbb
loope
lods
enter
imul
push
fmuls
sti
pop
xchg
and
cmovnp
imul
xlat
int
pushf
fbld
ret
pushf
and
cmp
imul
fistl
jp
fisttpl
das
cmp
jecxz
daa
mov
cmp
aas
mov
sub
test
add
fimuls
popa
movl
and
and
mov
lcall
out
add
incl
add
cli
sub
mov
mov
fs
mov
ja
mov
and
push
push
fmull
bnd
inc
loope
push
roll
sbb
or
jmp
or
mov
clc
mov
mov
lret
lahf
jecxz
rcrb
inc
mov
adc
xchg
pushf
hlt
lods
sub
push
adc
mov
insl
push
nop
cmpsl
xor
in
pop
out
in
cmp
dec
cmp
in
xchg
mov
adc
lahf
inc
and
push
loope
mov
push
pop
cld
adc
stos
aam
inc
push
mov
mov
add
inc
out
repnz
cmp
dec
test
mov
arpl
add
mov
inc
nop
jne
std
je
fucomip
mov
out
out
pop
jmp
or
daa
pushf
sbb
cmpsl
dec
arpl
jns
loop
iret
bswap
inc
rcrb
and
mov
xor
or
repz
ror
lock
jnp
xor
xchg
mov
lock
incl
add
and
pop
test
hlt
sahf
mov
sbb
and
popa
xor
cli
jmp
adc
push
sub
ljmp
inc
lock
je
lret
loope
xchg
pushl
cmp
int
lock
mov
sahf
gs
and
lcall
test
adc
orl
push
es
mov
mov
or
jmp
mov
mov
push
arpl
cltd
or
into
xchg
push
sbb
and
in
arpl
cmp
mov
jo
scas
loope
cli
lcall
adc
push
aas
gs
outsl
inc
jnp
push
push
negb
add
jnp
or
call
mov
xor
mov
packuswb
addr16
aaa
push
mov
cmpsb
ss
out
in
movsl
out
adc
rcll
lea
add
repz
fisubs
add
movsb
dec
icebp
add
incl
add
dec
cmp
inc
iret
jecxz
cs
stos
jne
ret
in
xor
pop
insb
inc
jnp
dec
insl
js
xchg
adcl
xchg
pop
fisubl
xchg
lret
scas
notb
push
push
je
mov
pushf
ffreep
leave
icebp
cmp
mov
pop
cmpb
cmp
addb
mov
lods
shr
sub
xlat
push
inc
mov
fldenv
std
xlat
mov
outsl
repnz
pop
es
arpl
insl
int
xlat
pop
je
mov
mov
mov
nop
xor
or
shlb
incb
mov
push
xchg
outsb
push
loop
sub
in
pop
push
adc
fldcw
push
arpl
mov
sub
repz
mov
arpl
pop
sub
inc
addb
or
stos
xchg
add
or
test
sub
lret
es
insb
sbb
cli
add
out
sbb
push
push
mov
incl
add
inc
sub
hlt
cmpsb
xchg
and
gs
std
or
dec
push
mov
pop
dec
or
add
or
ds
call
jle
cmc
rcr
ljmp
xchg
pop
loope
jb
shl
xor
pop
ror
push
jp
xor
daa
cmp
arpl
or
and
mov
dec
jmp
sbb
in
dec
mull
mov
or
ret
sub
push
push
ss
inc
push
out
mov
xchg
orl
pop
jecxz
add
dec
inc
lret
jle
xor
int
lea
scas
and
and
mov
mov
lret
aad
mov
mov
test
add
mov
fisttps
sub
add
fsubl
fists
cwtl
push
outsl
inc
sub
subl
aaa
ss
fsts
dec
sbb
cmp
push
add
scas
push
repz
cmc
scas
sub
mov
dec
repz
incl
add
lea
fstpl
jg
dec
fld
xchg
xor
pusha
dec
movsb
nop
sub
cwtl
jp
sarb
and
jmp
xchg
scas
add
mov
or
icebp
jmp
xchg
es
scas
into
mov
imul
inc
dec
insl
scas
push
outsl
dec
popl
popf
adc
mov
adc
ds
lcall
mulb
int3
shrb
jg
cld
lea
jp
and
mov
scas
cwtl
loop
sub
mov
divl
mov
scas
adc
jae
out
push
popf
mov
push
aas
ja
popf
iret
xchg
jno
mov
add
sbbb
sub
jl
ljmp
mov
arpl
js
mov
lock
jbe
push
jl
xor
adcb
cmp
xlat
mov
add
pusha
rorb
cmpsb
mov
incl
add
jecxz
loopne
cs
std
xchg
fstpt
or
icebp
outsb
scas
xchg
xor
fsubrl
ja
loop
ds
out
pop
push
and
or
mov
mov
ret
pushf
repnz
or
and
cmp
mov
int3
testb
or
ljmp
decl
cmpsl
ja
ss
mov
mov
xchg
cmp
add
ja
ror
ljmp
adc
mov
push
call
or
iret
adc
push
mov
int3
and
push
rorl
sub
jo
loop
cwtl
bswap
add
into
lea
ret
adc
repnz
addl
pop
mov
outsl
inc
arpl
and
pop
ret
mov
shll
adc
bound
xor
jle
push
popa
shlb
fnstsw
lods
fs
subb
jecxz
push
testl
mov
imul
add
jmp
out
mov
repz
push
sbb
pushf
cld
xchg
jg
movsb
mov
das
add
xchg
jo
pop
push
jecxz
mov
lret
cmc
fldenv
pop
ret
jbe
jnp
or
mov
nop
pop
dec
or
bound
jge
jge
jge
pop
cmp
cmc
in
lret
add
cli
pusha
ret
jbe,pt
xlat
aad
and
out
idiv
outsl
adc
incl
mov
in
jnp
inc
mov
ss
daa
adc
sub
lcallw
mov
push
sub
std
cmp
cmp
xorl
pop
int
xchg
adc
jne
sbb
jecxz
sbb
cmp
js
jmp
mov
dec
hlt
insl
pop
mov
push
stos
jge
inc
std
mov
mov
and
mov
mov
adc
pushf
jge
lret
ffreep
ja
mov
int3
fwait
inc
cltd
arpl
enter
add
and
daa
lahf
mov
pop
das
mov
testb
incl
add
xchg
sbb
add
xchg
out
std
testl
sub
loope
mov
dec
xor
cwtl
loope
or
iret
ficompl
movsl
repnz
mov
and
jo
call
push
std
jne
cmp
ret
ficompl
scas
test
mov
daa
pop
scas
in
cld
mov
lock
adc
inc
xchg
sub
aas
leave
push
mov
callw
mov
iret
shlb
push
xchg
jecxz
cmp
mov
jg
ret
cmpxchg
loop
mov
outsb
test
test
adc
pop
sub
and
scas
flds
cmpps
aas
pop
pop
popa
xor
cwtl
or
mov
movsl
enter
cwtl
jl
inc
movsb
inc
sbb
fstps
stc
fisubrs
push
outsl
into
in
xor
or
jg
sub
jo
inc
pop
test
add
fucomi
xor
sub
inc
testl
add
or
les
mov
pop
repz
pushf
out
cmc
cmp
test
jae
sbb
push
push
jle
dec
jge
popaw
jle
mov
iret
sub
mov
outsb
jl
pop
xchg
pop
stos
rcrb
out
dec
scas
mov
push
mov
pop
repnz
insb
fbld
inc
add
repnz
lods
or
push
push
jno
in
mov
xor
ja
add
ds
xor
cs
adc
and
and
add
mov
xor
or
sub
mov
mov
pop
mov
js
pop
loopne
xor
lods
jns
add
mov
sub
in
jecxz
scas
mov
arpl
fildl
call
push
cmp
in
dec
jg
mov
in
pop
test
insb
rorb
mov
clc
shll
dec
in
cmp
shlb
jbe
push
inc
pop
jns
aas
loopne
sub
clc
add
incl
add
in
xchg
sahf
ss
ret
cmpsb
movsb
xlat
mov
inc
leave
popf
aad
lcall
adc
push
xchg
mov
jge
scas
mov
inc
add
cmp
outsb
imul
scas
sub
cmc
ss
mov
out
or
dec
dec
dec
dec
dec
vpmacssww
jo
loope
or
add
aad
test
jp
push
leave
lds
xchg
aaa
mov
in
adc
dec
mov
cmp
rorl
xor
push
in
cmp
jne
push
fs
push
nop
add
or
or
add
shrl
sub
xor
sub
sbb
ja
inc
fidivl
sti
push
pop
xor
std
and
mov
pop
xchg
imul
fcompl
jl
imul
fs
loop
add
jnp
mov
test
mov
inc
stc
add
incl
add
pop
iret
inc
push
mov
fstl
and
and
out
scas
les
sub
imul
les
jne
adcl
cld
add
mov
insl
or
cmp
pop
sti
xor
pop
enter
push
dec
in
cmc
sub
sub
repz
ret
or
jno
test
pusha
mov
xor
ja
push
sti
jne
nop
xchg
fildl
mov
lock
mov
sbb
mov
adc
leave
dec
int
sti
js
xchg
pop
dec
mov
push
rcrb
add
pop
in
xchg
data16
xchg
push
into
loopne
xchg
movsl
mov
xlat
or
pop
sbbb
decl
mov
adc
sbb
cmc
dec
scas
mov
fdivl
mov
inc
lret
lods
bound
and
inc
push
sbb
int
adc
imul
gs
sub
mov
add
add
add
adc
rcr
insb
push
dec
outsl
leave
stc
mov
pop
pop
jecxz
shrb
xchg
xor
and
pusha
loop
gs
sbb
cwtl
cmp
popa
fwait
test
outsl
aaa
sub
mov
daa
jns
test
xchg
out
jnp
mov
mov
add
not
add
xlat
orl
cmp
add
ljmp
aaa
sbb
mov
fimuls
sub
mov
jmp
cmp
imul
pop
dec
fistl
fistps
fsts
xchg
lds
add
insl
test
rclb
fistpl
mov
xor
push
andl
push
movsb
lods
daa
jle
xor
cs
mov
adcb
sbb
cmp
add
or
jecxz
or
xor
sub
lret
into
cwtl
cli
add
fdiv
mov
scas
leave
lret
sti
add
incl
add
data16
add
incb
rcl
lahf
mov
flds
loop
mov
call
loope
dec
xchg
shrb
iret
push
icebp
xlat
out
out
jmp
fnstcw
add
mulb
xchg
and
or
push
nop
and
mov
or
mov
sub
out
inc
cmc
dec
dec
bts
dec
daa
dec
push
in
inc
push
pop
enter
and
out
fdivr
fiaddl
mov
mov
push
pop
ret
mov
or
add
lahf
cld
mov
fs
pop
std
dec
in
ds
pop
xchg
lds
inc
mov
fidivrs
push
mov
xchg
rclb
inc
out
adcb
data16
repz
out
iret
orb
mov
pushf
mov
sub
cmc
sub
prefetch
or
mov
xlat
xchg
pop
frstor
jmp
add
test
mov
fcmovbe
ret
mov
add
add
add
jb
jecxz
xor
dec
xorb
sti
jno
sahf
dec
jb
out
stos
adc
lahf
fidivrl
xchg
or
dec
ja
pop
xor
sti
inc
add
push
test
or
mov
xchg
mov
testl
lods
dec
mov
inc
xchg
xchg
push
outsb
xchg
pushw
add
mov
and
dec
xchg
ret
xor
jns
xlat
push
add
aas
pop
mov
push
mov
jecxz
out
sbb
leave
test
loopne
jns
popf
sti
sub
adc
jmp
pop
adc
mov
push
push
mov
or
and
mov
lcall
push
aad
int
addr16
dec
rorl
inc
loope
adc
ret
repnz
push
dec
fucomip
mov
clc
clc
mov
pop
push
bound
ds
mov
xchg
icebp
add
push
pop
push
jmp
rcl
loope
call
incl
add
dec
cli
sub
add
add
pop
lcall
mov
fstpt
js
sbb
mov
push
jno
inc
dec
repnz
push
cmpsb
mov
fldl
jb
mov
dec
pop
pop
and
inc
add
mov
sbb
in
and
push
xchg
bound
and
jbe
jns
repnz
adc
fsubrs
dec
addb
sub
pusha
les
cmpsb
outsb
cmp
pop
inc
nop
jne
push
mov
aad
xor
pop
xchg
jo
shrl
jb
shlb
sbb
xchg
repz
lret
mov
mov
scas
jo
xor
sub
lds
aad
xchg
mov
xchg
push
mov
push
loope
or
push
fcmovu
jb
dec
aam
idivb
sub
inc
jecxz
dec
mov
mov
cmp
add
pop
lods
pop
cli
cmc
cmpsb
lret
mov
aam
inc
incb
add
add
add
cld
aas
mov
ljmp
in
mov
stos
adc
push
scas
xchg
xchg
jle
xchg
les
int3
hlt
lock
sti
inc
xchg
ret
sbb
cmp
push
or
mov
call
stos
pop
mov
fisubrl
stos
popf
es
mov
cmp
std
xor
mov
mov
lods
ja
inc
sarl
stc
or
jle
push
inc
daa
cwtl
push
xchg
sbb
jae
aas
xor
and
fwait
inc
cs
imul
inc
sbb
imul
mov
cmp
xchg
xor
rcll
clc
push
push
xor
sahf
mov
aam
fsubs
ret
mov
lahf
xchg
and
pop
mov
call
and
jmp
push
add
pop
test
push
sbb
xor
movsb
jge
jecxz
add
das
stos
cltd
inc
popf
jae
out
xor
aas
incl
add
add
add
inc
xchg
test
push
inc
xchg
add
push
push
aaa
push
dec
pop
ror
adc
cmp
sbb
jae,pn
and
dec
clc
lret
mov
sub
out
push
std
in
fs
xchg
jecxz
jecxz
mov
mov
add
test
mov
pop
add
int3
jecxz,pt
xor
ss
int
cmp
out
jbe
out
mov
ja
ljmp
cmpsb
jp
jg
repz
out
aas
data16
aas
loop
mov
inc
mov
data16
out
into
add
or
clc
cmc
or
pop
dec
das
in
push
sbb
inc
inc
hlt
sub
cmpsb
dec
add
out
pushw
sub
adc
mov
rorb
sbb
xchg
ror
cli
sbb
add
inc
lret
mov
fisubrs
rcrb
xor
mulb
add
enter
mov
nop
test
aam
int
aaa
das
aam
jns
pop
add
add
add
add
lock
mov
cmp
fmulp
ljmp
enter
lds
sub
xor
sahf
inc
push
cli
push
mov
cwtl
dec
lds
ret
mov
mov
jge
adc
or
sarl
test
mov
out
xchg
lock
fnstenv
loopne
jmp
scas
sbb
sub
inc
fisubs
adc
stos
lods
mov
aam
adc
lods
ret
aad
dec
faddl
hlt
scas
mov
inc
popf
mov
cwtl
ja
pop
ja
jl
jecxz
mov
bound
and
cmp
jno
sub
and
lea
xor
xchg
js
outsl
cwtl
mov
lods
test
repz
add
push
inc
stos
out
movsb
xor
sub
dec
mov
inc
mov
push
cmc
pop
and
or
mov
add
add
arpl
addr16
sub
cmp
or
cmp
add
add
jbe
or
dec
or
push
scas
cwtl
cmp
mov
cmp
lret
sti
push
loop
jbe
xchg
mov
es
xchg
div
das
jge
cld
mov
xchg
stos
fwait
std
mov
adc
add
fwait
fwait
in
loopne
jns
dec
stos
in
mov
je
sbb
pop
jmp
jns
inc
mov
movsl
ljmpw
shrb
scas
mov
pop
jo
fs
mov
sbb
mov
or
dec
sub
test
mov
inc
ljmp
sub
pop
iret
cltd
repnz
hlt
repz
sub
ljmp
fdivrp
mov
into
jne
mov
jbe
cmp
pop
pusha
aaa
lock
mov
mov
pop
pushf
hlt
cld
sbb
sub
sbb
jecxz
out
or
cmp
bound
pop
pop
xor
hlt
ljmp
add
add
out
out
pushl
xchg
xor
in
and
add
add
add
and
lret
scas
cmpsl
jmp
aaa
fcmovu
inc
jae
inc
cmp
mov
adc
scas
enter
lcall
push
lret
xlat
lock
sbb
mov
and
pop
popf
js
dec
push
popf
cmc
leave
rcrb
push
cmp
loopne
cmp
jle
dec
into
rorb
or
or
shlb
sbb
push
out
test
sbb
mov
inc
pop
sbb
pop
xchg
jno
outsl
inc
push
pop
adc
pusha
xor
mov
mov
aas
sti
add
fs
xor
or
fnstenv
les
repz
and
stos
xchg
data16
inc
cli
xchg
lea
sub
loopne
scas
insl
jbe
sbb
out
mov
notb
mov
lods
popf
cmp
scas
sbb
pop
aam
mov
jmp
aaa
cmp
out
faddl
arpl
add
add
push
scas
mov
adc
xor
add
add
add
add
addb
ljmp
shr
pushw
dec
pop
jp
cltd
add
mov
fsubrs
loop
std
adc
cli
nop
leave
fistpl
inc
ds
mov
push
data16
cmp
push
mov
sti
dec
mov
add
cli
mov
movsl
push
test
shrl
cld
push
push
push
jp
scas
lret
iret
and
sub
icebp
mov
loopne
mov
push
fsubl
std
jge
push
fwait
mov
xchg
test
addr16
pushf
out
or
nop
jl
inc
mov
negb
dec
adc
dec
fwait
js
xchg
clc
jle
cmp
jae
ror
jno
jb
out
fsubrl
lret
fisttps
imul
aas
test
jl
and
adc
leave
mov
push
stos
cs
jbe
outsb
mov
mov
mov
aas
cmp
jecxz
cmp
inc
jg
mov
dec
int3
fs
lret
jo
sbb
aaa
xchg
and
movsl
mov
mov
mov
sub
add
add
add
add
mov
icebp
cs
adc
xchg
daa
and
cmp
inc
inc
mov
or
mov
into
sub
movsl
movsb
add
add
dec
cltd
jge
scas
xchg
jo
ja
add
aad
xor
and
mov
jp
sub
push
or
fwait
dec
xchg
pusha
ja
or
mov
stos
add
jnp
iret
add
popa
out
push
pop
hlt
cmp
xchg
loop
repz
sub
mov
xchg
leave
and
sbb
mov
inc
jle
push
jo
popa
nop
dec
jg
pop
or
fimull
jmp
dec
stc
ja
pusha
cmpl
popa
jb
lcall
loopne
mov
xchg
sub
outsl
or
mov
xlat
adc
add
jb
mov
jnp
popf
fdivp
insl
inc
or
sub
movsl
or
fdivl
mov
shll
cmp
add
fstpl
incb
test
filds
mov
xor
fsubrs
enter
fadds
jne
cwtl
jne
and
mov
addr16
mov
cmp
sarb
pop
sbb
loopne
flds
outsb
jne
xor
mov
repnz
repz
cmp
int
jp
lcall
mov
sbb
sbb
orl
sahf
inc
addl
stos
loope
xchg
arpl
outsl
dec
test
addr16
cs
aad
popa
inc
scas
movsb
sub
shlb
push
mov
scas
andl
movsl
int3
dec
imul
adc
push
adcb
jle
inc
dec
add
sbbl
repnz
cmp
in
push
hlt
mov
xlat
hlt
adc
push
gs
jg
test
xchg
xchg
arpl
add
mov
mov
lods
imul
dec
stos
scas
lret
add
incl
add
pop
adc
arpl
sub
lock
jg
call
gs
aas
andb
bound
aam
dec
add
jb
out
in
push
push
test
adc
daa
enter
jns
icebp
xchg
int
nop
xor
gs
mov
ja
lahf
dec
or
cmp
fisubs
imul
xor
clc
dec
mov
hlt
jne
movsb
cmpb
xchg
mov
fcomps
rorb
fisubs
adc
cmp
xor
sub
sub
cmpb
push
jae
jmp
repz
adc
pushf
pop
sbb
mov
dec
repnz
mov
push
fwait
xchg
mull
mov
xor
or
shll
cmpsb
jbe
pop
insl
dec
fisubs
mov
stos
dec
push
mov
mov
cmp
arpl
adc
xchg
sub
scas
or
cmp
fsubs
add
incl
add
in
pop
cmpsl
sub
shrb
push
push
rolb
or
or
jecxz
out
mov
or
int3
mov
cmp
test
outsl
insb
push
iret
sub
data16
repz
sub
adc
repz
pop
xchg
pop
lock
push
lret
sub
sub
push
shll
aam
adc
mov
push
xor
or
pusha
std
xchg
mov
pop
and
and
xchg
pop
add
sbb
into
pusha
mov
jmp
movsl
sbbb
rcrl
cmc
and
inc
pop
xchg
push
scas
mov
ret
nop
loopne
es
repz
jecxz
pop
jmp
scas
lods
in
je
mov
dec
rorb
rorl
sbbl
add
push
adc
iret
sub
xor
es
loopne
or
adc
icebp
cli
sahf
adc
mov
das
rolb
add
add
hlt
fbld
in
adc
or
add
add
add
repz
lret
jbe
cltd
mov
jnp
dec
push
lds
cltd
hlt
mov
arpl
add
push
jne
add
std
test
jge
aad
inc
mov
mov
cs
mov
mov
test
xchg
movsl
fucomi
xorl
pop
jmp
aad
mov
icebp
data16
add
stos
pop
sbb
mov
dec
rclb
dec
jne
aaa
outsb
xchg
or
cmc
push
xor
jae
adc
idivb
cltd
loope
ljmp
insl
lea
stc
loopne
add
jl
xchg
mov
shlb
add
inc
push
xchg
cltd
leave
and
aam
dec
mov
pop
push
into
xchg
cli
mov
gs
xchg
je
sub
lods
dec
incl
lock
mov
nopl
push
jle
insl
leave
jecxz
jg
fwait
jne
lods
scas
sbbb
add
into
fwait
add
mov
xorl
add
adc
or
pop
jno
sub
xchg
cmp
add
lahf
lret
in
pop
mov
scas
call
xchg
lahf
fcomps
adc
mov
push
ja
mov
gs
sahf
fbld
sbb
insb
scas
inc
outsb
cmpsl
add
call
sbb
mov
lods
jp
das
dec
adc
jge
pop
inc
adc
ret
leave
xchg
mov
test
xor
mov
scas
sbb
xchg
fildl
jmp
mov
repnz
aaa
and
dec
push
scas
dec
lds
jle
ja
mov
jecxz
lret
in
nop
insl
aam
sub
icebp
and
scas
mov
in
nop
and
sub
push
inc
mov
and
pop
out
sbb
xchg
test
dec
ret
jne
cmp
negl
imulb
test
push
js
shrb
add
jl
test
out
mov
pop
sarb
in
mov
add
add
add
addr16
in
in
mov
fs
mov
imul
inc
cmp
xor
mov
pop
xor
inc
fcomip
stc
scas
pop
imul
mov
jg
nop
push
loopne
mov
lods
loope
faddl
fwait
cli
sub
arpl
mov
int3
pop
scas
das
cltd
outsl
stc
sbb
xchg
cli
into
xor
inc
xchg
cld
xchg
nop
fcoml
imul
sbb
mov
sbb
lea
fucomip
es
and
mov
cmp
ss
push
enter
data16
ljmp
negl
lods
adc
xchg
sub
or
or
insl
sub
dec
out
cmp
jo
ja
jmp
jp
scas
pushf
mov
lahf
mov
sbb
cwtl
lea
sbb
arpl
add
add
inc
out
aas
mov
shlb
aam
xor
add
incl
add
pop
clc
push
iret
fidivrl
in
shll
loope
fcoml
sarl
and
dec
mov
loope
jb
icebp
shrb
jbe
pusha
loopne
jmp
cmp
mov
inc
lods
dec
cmp
adc
xor
pushf
test
cmp
inc
and
shll
mov
scas
movsl
popa
cmpb
xor
leave
dec
dec
data16
in
fisttpl
cli
in
jecxz
jbe
sbb
lods
push
jl
mov
gs
pop
mov
orl
push
xor
loop
jecxz
and
xchg
mov
sbb
and
mov
lret
or
push
jge
dec
add
test
sub
mov
or
cmp
in
test
pop
test
cli
imul
fldl
test
or
mov
xor
xor
std
fildl
push
bnd
dec
leave
and
mov
pop
xor
add
add
add
mov
xchg
xchg
in
xor
nop
mov
mov
out
jle
push
lods
gs
xchg
xchg
scas
jecxz
pusha
cmc
mov
or
mov
movsl
or
mov
cmp
pop
cmpsb
lcall
add
leave
addr16
adc
imul
aas
push
out
pop
cld
sbb
shlb
inc
outsb
and
stc
inc
pop
adc
fidivl
in
mov
mov
pop
cld
sbb
xor
jae
pop
cmp
scas
in
stc
mov
sbb
lds
mov
pop
sub
lret
andl
mov
inc
iret
xchg
push
xchg
ret
sub
pop
cwtl
ljmp
aas
pop
jo
mov
sub
xchg
jge
mov
sarl
mov
sub
inc
or
inc
cmp
mov
stc
push
mov
mov
add
add
in
out
ja
filds
pop
iret
ja
or
add
xor
dec
into
jae
test
cmpsb
xchg
ja
mov
xchg
dec
repz
jns
test
imul
aam
inc
out
inc
jl
jmp
mov
add
mov
sub
pop
ds
and
cmp
push
pop
in
pop
cmp
popf
jmp
idivl
fbstp
int3
cmp
daa
push
xor
jg
test
sub
pop
jmp
push
js
pop
inc
repz
inc
std
push
fwait
push
rorb
pop
and
les
lds
cmp
shlb
cmp
call
xorb
in
into
jmp
mov
and
cmp
insb
mov
add
push
sub
xchg
jle
mov
xor
jbe
int
sub
sbb
inc
cmp
out
lahf
into
sub
loop
or
sub
rclb
add
pop
in
inc
push
or
xor
push
xor
add
incl
add
push
xchg
or
das
mov
cmpsb
movsl
mov
sbb
lahf
xlat
push
or
inc
mov
add
popa
mov
dec
xchg
mov
rolb
rorl
dec
xchg
adc
xorb
dec
out
std
ljmp
gs
xchg
pusha
fyl2x
adc
mov
lcall
mov
fsubl
insb
sub
xchg
out
xor
pop
int
insl
in
outsl
xor
bnd
add
cmp
popa
sub
pop
sub
arpl
outsl
popa
push
xchg
subb
or
and
nop
inc
pop
repnz
or
push
sti
xchg
pop
push
mov
and
cmpsl
in
push
iret
add
orl
cmc
loope
and
sbb
data16
mov
inc
inc
out
jo
andb
cmp
mov
pop
fdivl
dec
arpl
mov
jg
neg
pop
daa
inc
add
sgdtl
incl
add
pop
push
cli
push
cmp
ret
mov
js
imul
insb
dec
dec
xor
jge
dec
and
add
mov
mov
data16
jns
fimull
sbb
lret
or
push
fwait
ja
inc
and
out
les
push
rcrb
pop
test
ret
dec
mov
fwait
xchg
in
add
test
rcrl
jno
fmull
add
in
out
xor
mov
xchg
dec
lret
stos
popf
stos
lcall
ror
push
push
sub
mov
cltd
mov
mov
divps
xor
sti
les
pop
fidivs
ret
xor
push
jl
fucomi
pop
or
xchg
mov
outsl
adc
push
outsb
sub
cmp
dec
xor
add
xchg
inc
outsb
jbe
aaa
inc
in
mov
sub
loope
js
add
mov
jmp
cmp
sti
jg
cmp
je
sbb
add
incl
add
das
fimuls
mov
dec
mov
and
sbb
push
inc
xchg
loope
xor
xchg
test
orb
rorb
fcoml
fildl
aaa
sub
or
out
add
xchg
push
push
out
push
add
aaa
mov
js
and
fimull
jge
test
test
into
sti
xchg
or
fdiv
adc
add
and
enter
in
mov
add
xchg
mov
sahf
cmp
mov
xchg
cmp
adc
pop
and
push
sbb
pop
loopne
mulb
not
push
test
or
add
adc
les
mov
test
adc
andb
pop
mov
gs
rclb
out
jle
out
mov
xchg
fwait
jno
popf
hlt
cli
je
pushf
cmpl
sbb
add
scas
aam
jnp
fstp
fcompl
push
sub
inc
sub
add
add
out
cmp
xorb
inc
stos
sbbb
mov
dec
insl
loop
insb
fcmovbe
pop
sbb
pop
mov
push
daa
std
gs
lea
adc
cltd
mov
adc
mull
dec
cli
mov
out
inc
negb
sub
popa
clc
inc
movswl
fdivrs
daa
adc
xor
out
xchg
inc
leave
jne
emms
pushf
inc
adc
repz
fistps
cltd
jge
xor
xor
fs
and
incb
aam
jge
push
mov
xchg
insb
fidivrs
out
mov
insl
in
jecxz
pop
xchg
stos
pop
cwtl
and
div
mov
push
cmp
fisubrl
sti
dec
sbb
scas
out
arpl
in
adc
cmp
sub
cmpsl
lods
inc
andb
dec
jle
fidivrl
sahf
mov
mov
mov
jno
std
outsl
mov
add
ljmp
incl
add
sbb
xchg
lds
jo
enter
and
sub
adc
sub
pop
dec
inc
in
adc
sbb
js
inc
rolb
cs
ljmp
inc
test
ja
lock
xchg
jp
sarl
and
js
mov
inc
cwtl
cmp
dec
mov
pop
push
ret
cmp
test
stos
cmpb
out
xor
int
cmp
fildl
lea
test
xchg
sbb
dec
lods
and
mov
push
out
mov
mov
mov
pusha
mov
shl
jle
call
pop
int3
inc
push
mov
cmp
in
int
cmp
or
fdivs
sbb
push
or
in
rcrb
mov
fprem1
cmpsl
mov
xchg
and
add
add
jmp
fstpl
adc
add
add
add
divb
cmp
fwait
xchg
ss
cld
dec
cmp
pop
sbb
testl
cmp
aas
push
pop
inc
mov
jne
in
xchg
mov
sub
insl
dec
push
insb
xchg
fidivrs
sahf
test
pop
sub
mov
addl
jae
sbbb
sub
xor
in
pop
cld
xchg
jne
movsl
inc
sbb
mov
cmp
pop
js
xchg
fwait
mov
das
or
fwait
sbb
mov
cmp
ret
jo
jnp
mov
aad
lock
mov
jmp
push
pusha
mov
xor
pusha
mov
pop
jp
sbb
sbb
sbb
fsubrp
dec
jne
dec
push
dec
xorb
push
jo
jecxz
dec
fs
je
pop
lea
mov
pop
sahf
popf
sbb
inc
inc
adc
lea
jne
mov
imul
je
inc
xchg
fwait
mov
lods
cmpsb
xor
xor
xchg
lds
rcll
mov
incl
add
or
mov
push
xchg
xor
mov
push
sub
sar
jb
andl
stc
addr16
fstl
aaa
push
test
cmpsl
int
xchg
pop
mov
out
push
add
xchg
pop
iret
cmp
xchg
xlat
adc
inc
orb
addr16
jg
push
mov
ret
out
adc
pop
push
sti
jnp
lods
adc
outsb
je
icebp
fsubrl
adc
lea
xchg
add
leave
sbb
jo
testl
sub
lcall
sbb
ds
lahf
out
popa
and
jo
push
aas
stos
jne
jns
insl
mov
in
mov
xchg
dec
pop
sbb
or
and
pop
lods
lcall
ficoms
orb
fst
test
jo
pushf
pop
divl
idiv
loopne
das
lock
lods
add
cli
inc
jg
int
xchg
lods
or
outsb
test
adc
add
data16
jle
push
lcall
mov
sbbb
push
add
dec
or
mov
imul
mov
jecxz
fsubrs
test
inc
pop
cli
xor
cltd
or
adc
sbb
dec
mov
sub
push
fldl
jb
int3
ja
stos
les
and
pusha
jecxz
inc
jmp
out
mov
push
push
daa
sbb
int3
mov
dec
cmp
outsb
repz
das
loopw
add
sub
pop
mov
sub
clc
xlat
xchg
push
xchg
pop
les
sub
adc
shll
fidivl
inc
pop
sbb
clc
pop
mov
sbb
xchg
mov
sbb
fistps
test
xchg
repnz
sti
mov
xchg
add
cmovs
mov
push
add
dec
add
xchg
std
cmp
jle
fistpll
fidivl
es
add
incl
add
push
mov
rcll
sbb
adc
mov
xchg
jl
jecxz
cmpsb
xor
pop
inc
or
cmp
jo
push
loopne
cmp
fnstenv
popf
mov
xlat
in
insb
and
jno
cmc
inc
mov
xlat
mov
loop
xchg
or
cmp
cli
andb
cmpsl
insl
addb
push
lea
mov
lcall
xchg
sbb
and
lcall
or
test
fwait
ljmp
or
xchg
cmp
push
ja
fistpll
xchg
into
ds
xchg
ss
xchg
repz
daa
mov
std
sbb
mov
ljmp
dec
or
or
cmp
fcmovne
test
adc
dec
stos
push
std
gs
jns
fnstsw
sahf
mov
dec
fiadds
add
push
cli
pop
aas
lods
push
imul
sub
mov
stos
lds
sub
into
loopne
pop
int3
xchg
imul
add
add
iret
xlat
ficompl
inc
mov
rol
daa
pop
add
incl
add
aam
incb
lcall
test
clc
add
sarl
or
sub
nop
call
fwait
adc
scas
adc
vmread
dec
nop
shr
add
cwtl
mov
add
ret
jae
dec
sbb
cmp
lcall
out
cmp
je
inc
inc
pop
les
ljmp
fs
in
xlat
dec
push
jo
clc
inc
nop
mov
pop
subl
push
cmp
add
push
lcall
in
jne
andl
lahf
les
adc
andb
mov
push
inc
je
jbe
dec
sbb
jg
or
dec
test
push
sbb
xchg
mov
mov
cwtl
cmp
pop
fistps
xor
jge
repnz
mov
add
ret
aam
mov
movb
ss
and
dec
jmp
dec
scas
iret
outsb
jmp
push
test
xchg
add
incl
add
aad
push
xchg
xor
pop
scas
ss
mov
std
out
pop
sbb
fistpll
mov
loop
out
push
cwtl
mov
mov
sarb
push
sbb
out
int
jecxz
aam
xor
in
push
add
cs
cmp
and
mov
and
aaa
popf
pop
xor
movsl
aam
stos
and
int3
or
arpl
scas
adc
lods
dec
jae
and
icebp
adc
ret
loope
mov
ret
xchg
jnp,pn
xor
fisubrs
icebp
faddl
out
push
push
mov
xchg
mov
fiaddl
add
loope
sbb
outsb
sbb
push
mov
pop
or
cwtl
mov
test
aas
lods
jo
or
push
inc
daa
mov
js
add
add
jp
les
sbb
std
sbb
stc
cld
or
dec
cld
test
incl
add
bound
stos
imul
jecxz
and
inc
lods
mov
dec
outsb
mov
fisubs
mov
lahf
inc
mov
divb
mov
std
sbb
pop
inc
iret
adc
push
stos
shlb
outsb
jg
dec
pmuludq
or
sarl
out
scas
loopne
xchg
jecxz
movsl
addl
pop
xor
outsb
push
or
mov
jno
push
imulb
sub
inc
int3
movsl
xchg
lods
call
imul
dec
dec
mov
jmp
sti
iret
mov
jbe
cmp
pop
movsb
jns
pop
inc
sub
or
in
push
xchg
jge
mov
popf
cld
js
test
mov
mov
dec
mov
ss
cs
repnz
xorl
shrl
cs
int
je
les
mov
in
and
lds
mov
leave
xchg
je
mov
das
sti
sbb
xchg
lret
sub
add
negl
adc
pop
xchg
cmpsb
loopne
jae
and
add
incl
add
sahf
daa
iret
jle
imul
mov
push
je
xchg
loop
loope
gs
ret
pop
int
push
test
dec
shlb
mov
test
or
jb
jno
into
or
cmp
incb
insl
in
enter
stos
lahf
sbb
xchg
sbb
inc
mov
or
fcmovbe
xchg
in
sbb
pop
jle
cmpsl
xchg
in
lcall
inc
outsl
xchg
push
insl
or
push
ja
daa
fwait
out
lods
sub
sbb
sbb
inc
test
sbb
xor
dec
in
add
shrl
scas
scas
xor
daa
dec
xchg
jmp
loope
cmp
and
lcall
mov
jp
inc
jmp
mov
idiv
sbb
jg
and
pop
mov
cmc
outsb
xchg
cmpsl
sub
pushf
das
es
in
loope
jne
pop
shll
add
dec
pushl
outsb
mov
xchg
sbb
add
add
add
stos
mov
fdivrs
pusha
push
stos
mov
push
inc
movsb
cmp
es
or
sbb
jne
aam
scas
or
hlt
mov
xchg
and
or
add
aaa
jo
cli
lds
movsl
test
mov
adc
mov
out
aaa
leave
pushf
add
test
shlb
push
fisttps
icebp
lcall
dec
sub
jno
int
jnp
cmp
loop
and
pop
push
and
popa
shl
repz
rol
xchg
and
test
cmpsb
inc
shrl
mov
ljmp
cmp
inc
jmp
mov
sbb
and
js
cmpsl
negl
dec
loope
sub
sbb
ja
xchg
jno
or
pop
adc
rcrb
pop
js
outsb
xchg
add
inc
ja
pop
aas
dec
push
or
add
add
add
int3
lret
scas
mov
ds
gs
dec
nop
lock
outsl
test
jb
je
cli
pop
stc
js
in
mov
aam
and
cmp
subl
pop
mov
or
jbe
fldl
inc
rcll
aaa
cmp
pop
inc
test
cwtl
cmp
loope
bound
and
gs
or
mov
das
out
fucomip
push
repz
pop
roll
faddp
js
nop
outsb
inc
push
loop
fldcw
mov
mov
lret
push
insb
enter
sti
addl
add
sub
push
push
test
xor
cli
fdivrs
dec
inc
stos
test
xor
insb
xchg
inc
scas
xor
rolb
je
mov
movlps
push
cmp
pop
loop
push
add
addb
cmp
das
rolb
xorb
or
xlat
out
fxch
add
xchg
jae
ja
div
mov
mov
and
add
push
pop
incb
xchg
iret
ds
sub
popf
outsb
dec
mov
andl
pop
push
push
jge
inc
int
ror
or
mov
push
in
test
out
bound
les
cmp
mov
rclb
out
pop
inc
mov
aaa
xor
jb
jns
pushf
outsl
jns
push
rclb
xor
mov
push
or
shlb
out
push
insb
push
aad
mov
cmc
rcr
xor
sub
xor
or
mov
sbbl
cmp
arpl
and
push
push
das
stos
inc
or
dec
mov
dec
add
add
cwtl
sub
xor
clc
and
aam
lcall
xchg
js
sbb
fimuls
push
test
cmc
adc
and
out
fwait
movsb
cmp
xchg
in
mov
add
cli
std
jg
push
pushf
dec
sbb
mov
incl
add
cmpsl
es
out
mov
mov
ret
ja
mov
ljmp
cmpl
call
push
repnz
gs
jnp
cli
lret
hlt
inc
ficoms
testl
mov
jmp
add
dec
icebp
lcall
sbbl
inc
mov
inc
mov
das
or
sub
mov
push
pop
inc
inc
jmp
add
sub
jmp
mov
dec
push
mov
pop
movsb
das
stos
add
mov
mov
dec
push
inc
inc
in
mov
mov
inc
js
pop
sbb
in
sbb
test
push
pop
sbb
cwtl
inc
stc
fcompl
adc
xchg
pop
aad
sub
pop
mov
and
loop
pop
adc
push
je
jnp
xor
dec
push
mov
add
add
add
mov
std
incl
sbb
adc
add
incl
add
test
test
or
pushf
arpl
fdiv
dec
dec
loope
push
ds
lret
cmp
cwtl
lcall
test
jg
mov
dec
enter
push
jmp
stos
hlt
adc
test
cmp
clc
rorl
aam
fmulp
mov
jo
mov
mov
cmp
xor
or
jo
push
add
jle
pusha
pop
push
popa
movsl
popa
fstpt
movsl
scas
iret
inc
testl
enter
xorb
sbb
mov
mov
mov
jmp
or
enter
xchg
mov
scas
stos
movsl
dec
bnd
es
add
call
cmp
int
mov
jne
jno
cmp
outsl
mov
jmp
jo
xor
loopne
jne
xor
push
mov
or
push
es
jg
pop
or
xor
mov
push
and
add
add
add
test
ret
cltd
mov
aam
jmp
mov
jl
and
sbb
xor
data16
lcall
push
loope
and
pop
cli
scas
or
mov
ja
cmp
sahf
pop
jge
push
fisttps
dec
leave
jo
inc
pop
cmpsl
idivb
cmc
inc
lods
jg
int
clc
dec
cmp
lret
push
jmp
mov
test
xchg
insl
lods
xchg
or
adc
lods
xchg
push
jecxz
xchg
jmp
in
ret
sub
into
adc
ret
lods
pusha
pop
imul
cltd
rolb
fdivrs
incb
bound
push
pop
cld
shlb
and
imul
xchg
sub
stos
out
in
pop
jge
pop
andl
mov
sub
xor
imul
cld
pop
hlt
mov
pop
mov
scas
mov
adc
push
clc
or
dec
push
cmp
and
add
add
add
je
in
push
mov
lret
jle
adc
out
lahf
sbb
mov
mov
and
int3
data16
or
cmp
or
mov
pop
out
icebp
or
lret
jmp
cmc
test
mov
filds
inc
daa
xchg
andl
out
jle
push
dec
sahf
je
mov
outsb
inc
sub
jg
dec
and
ljmp
test
mov
loop
cld
loope
sbb
adc
and
push
das
dec
leave
aaa
testb
imul
mov
cmp
dec
enter
hlt
or
jbe
aas
iret
pop
out
xchg
fs
aam
fcoms
ret
jle
shrb
xchg
mov
and
add
mov
ret
fdivs
movsl
cmpsb
mov
xchg
xlat
cmp
xor
mov
xor
incl
add
cmp
and
in
mov
cmp
es
xchg
ret
mov
filds
sub
inc
jae
fadd
cmpsb
add
cmpsb
pop
push
push
int3
inc
sbb
mov
lea
mov
sti
sub
ss
fsts
dec
xor
push
lret
mov
push
decl
divb
cltd
lods
or
aaa
push
or
jg
mov
dec
xor
pop
xchg
mov
xchg
or
test
adc
or
or
mov
mov
dec
mov
cmp
jmp
pop
pop
aad
pop
inc
mov
inc
js
std
push
mov
jmp
push
addr16
mov
loopne
sahf
pop
fwait
mov
cs
jns
out
sbb
pop
mov
push
stos
das
stc
ja
adc
jno
adc
daa
aad
push
aas
jns
jo
in
jge
pop
pop
dec
fidivl
lock
sti
dec
in
dec
mov
stc
add
ficoms
stos
sbb
call
mov
sbb
add
incl
add
popa
fisubs
outsb
mov
and
loope
cmp
in
jecxz
aam
jle
jns
xor
jl
into
into
lock
xlat
dec
jne,pt
cmp
dec
cwtl
lods
mov
mov
push
pusha
test
and
inc
jle
shlb
movl
imul
mov
test
pop
std
std
insl
push
mov
sub
pop
ja
or
cwtl
fwait
pop
dec
pushf
sbb
mov
xchg
xor
cmp
push
add
sbb
imul
mov
pop
adc
mov
jg
mov
repz
insb
inc
fstpt
roll
fbstp
jmp
cwtl
sub
push
mov
cmp
stos
pop
loopne
jbe
in
cmp
lret
fdivs
push
jno
xor
lods
std
adc
jb
add
sbb
movsl
sahf
lods
into
das
sbbl
jnp
push
jge
bswap
je
add
in
out
stos
jge
or
push
pop
inc
sbb
add
add
add
and
call
xor
pop
sbb
pop
pop
stos
push
mov
fcoms
dec
test
sbb
mov
mov
cmp
add
jne
jnp
xor
inc
addl
in
jg
lds
lock
les
jp
jge
js
jo
cmpl
jg
pop
aas
enter
xchg
hlt
ds
or
xor
stos
mov
test
sti
mov
shl
xchg
sub
imull
push
push
mov
inc
rclb
jae,pt
jb
xor
js
fidivs
rclb
in
iret
lret
mov
mov
loop
xchg
xlat
and
fildll
mov
or
hlt
jp
les
shrl
pop
mov
jb
mov
pop
aas
and
inc
mov
pop
xor
mov
and
push
add
sbb
out
xchg
iret
push
aas
loope
push
push
sbb
add
xor
xchg
adc
xor
sub
xor
or
push
push
cmc
out
xor
imul
jl
icebp
mov
dec
ds
lret
aas
es
and
jle
push
pop
mov
xchg
add
into
int3
shlb
data16
push
or
test
and
fcomip
and
add
add
pop
dec
test
das
add
fstps
inc
push
test
inc
push
aam
xchg
int
pop
lds
lods
jb
in
or
roll
jns
sub
add
inc
out
xor
add
inc
clc
jg
and
push
rcrl
sbb
jge
cmp
inc
xchg
dec
add
sbb
hlt
cltd
mov
iret
ror
stc
push
popf
add
jnp
mov
mov
gs
push
xchg
push
or
not
mov
inc
jle
dec
sub
popf
sub
add
in
add
cmp
out
loope
jns
nopl
add
add
add
movsb
lds
fsubr
repz
xchg
fldl2t
xlat
mov
lret
movsb
push
push
insb
pop
mov
adc
dec
pop
mov
mov
push
mov
and
fnstenv
sti
mov
or
dec
andb
mov
jp
push
hlt
add
xor
imull
dec
pop
pop
mov
adc
cmp
jae
fsubp
ljmp
jle
and
mov
test
enter
inc
iret
push
xchg
adc
jns
xchg
push
mov
test
cmp
xlat
and
aaa
repnz
aas
repz
mov
or
mov
testl
into
jge
out
lods
sub
push
test
cmpb
subl
mov
dec
xor
pusha
cmpsl
or
add
push
lret
test
clc
mov
aam
daa
ljmp
cmp
rcrl
outsb
and
add
lods
jg
push
mov
test
nop
stc
pop
daa
add
incl
add
adc
rol
repnz
imul
shrb
mov
fwait
cltd
dec
xchg
push
add
inc
fucomp
imul
adcb
out
test
pushf
sbb
mov
xor
jmp
movsl
lcall
xor
mov
mov
and
subl
and
jl
cmp
popa
mov
sbb
and
sub
aas
or
loope
and
push
pop
js
ror
les
push
push
loopne
out
inc
and
fldcw
out
and
or
jp
add
daa
pop
stos
addr16
sbbb
jne
xor
push
mov
mov
stc
pop
test
push
add
jmp
subl
mov
daa
jbe
cmp
sub
push
lods
jo
or
and
nop
sub
push
mov
xor
jne
mov
dec
idivl
cld
ret
add
mov
add
incl
add
movsb
sub
lahf
add
sbb
hlt
mov
lds
std
sbb
inc
mov
cmpsb
js,pt
mov
pop
mov
insl
ret
lea
pop
repnz
fsubl
sub
pop
sub
add
lret
fsubrl
lods
aaa
push
aaa
rcrl
popf
add
into
cld
xchg
pop
pop
adc
add
sbbl
iret
sub
andb
inc
cld
pushf
sbb
loopne
stos
shrl
and
fsubl
pop
stos
push
xor
cmp
out
bound
adc
jmp
mov
in
imul
shll
cs
or
pop
in
mov
inc
out
xor
scas
sti
rolb
iret
bound
pop
mov
test
push
push
sbbb
xor
lea
test
xchg
mov
inc
xchg
ss
xlat
jp
in
and
aam
inc
mov
cs
sbb
stc
jnp
ret
mov
iret
mov
js
mov
sub
add
add
add
in
js
jbe
lcall
aam
mov
lahf
ficompl
gs
jae
sbb
or
lock
and
xchg
push
aaa
mov
loopne
dec
xrelease
jno
sub
mov
mov
jp
cltd
push
mov
pop
nop
insb
lods
sub
mov
xchg
scas
pop
cmpsl
or
rclb
sub
repnz
sbb
mov
xor
add
cmp
add
jp
xchg
out
inc
push
loope
ret
and
int3
int3
xlat
scas
shll
lods
pop
fucomip
mov
mov
outsb
fisubrs
jmp
ss
jne
mov
sbb
pop
into
jle
pop
mov
aas
aad
popf
jge
inc
aas
movsb
fdivl
add
mov
test
lcall
add
mov
jg
arpl
das
pushf
cld
adc
add
incl
add
xor
mov
xchg
xchg
pop
xor
or
adc
mov
insl
mov
mov
adc
shrl
jno
out
sbb
push
repz
test
push
insb
mov
pusha
xor
or
push
inc
cvtdq2ps
enter
xor
and
int
dec
add
out
and
push
mov
pusha
mov
and
push
enter
cltd
ljmp
push
xchg
xor
pop
cmp
push
scas
xchg
push
fdiv
in
test
loopne
popf
or
andl
jb
cmp
cmp
mov
call
xlat
mov
inc
cwtl
xor
outsl
inc
mov
imul
adc
aas
lret
jno
popf
jl
test
rorl
jmp
imul
mov
lret
test
jl
add
fldl
pop
xchg
imul
stos
adc
adc
push
insb
aad
add
xor
clc
cli
clc
sarb
sti
mov
and
adc
add
incl
add
dec
in
adc
mov
pop
fildll
ret
shrl
push
div
test
pop
add
push
mov
mov
test
dec
pop
or
sub
decl
fdivs
dec
xchg
fldcw
push
movsb
out
jo
pop
hlt
inc
test
add
outsl
xchg
sti
es
dec
fcomps
jp
ret
inc
imul
inc
mov
rcr
xchg
sub
mov
add
pushl
loopne
mov
inc
movsb
cs
ds
sar
pop
mulb
xor
inc
sub
adc
mov
and
ficoml
push
or
sub
sub
pop
cmp
hlt
push
loope
stc
pop
fnsave
leave
and
xorb
ret
jno
xlat
push
and
arpl
cli
cltd
mov
add
pop
xchg
or
loope
or
adc
leave
push
fwait
jae
test
imul
mov
or
sub
add
add
add
xor
pop
jno
xchg
mov
mov
sub
sbb
jbe
jl
mov
enter
or
jl
mov
stos
aaa
mov
adc
xchg
mov
cs
fcoml
daa
nop
mov
movsl
mov
mov
lds
inc
mov
lock
cwtl
test
xor
inc
jns
lahf
dec
pop
cmp
add
lock
xor
jle
xchg
sar
mov
mov
daa
jne
cmp
divb
aas
adc
mov
aam
lahf
bound
jle
cltd
aaa
jmp
pop
xchg
in
gs
mov
mov
rcll
xor
pop
call
js
mov
sbb
cmp
pop
outsb
and
es
push
or
mov
mov
xchg
loopne
pop
dec
imul
or
outsl
mov
add
es
data16
insb
daa
mov
loopne
loope
adc
add
sub
push
mov
int
push
or
inc
idivb
adc
mov
shll
xchg
mov
repz
ret
loop
das
jns
xor
push
lcall
cmp
or
scas
pushf
cmc
div
pushf
cli
xchg
pop
fimuls
pushf
stc
push
pop
arpl
and
inc
xchg
cmp
sub
mov
mov
fwait
pop
dec
scas
orl
test
call
mov
or
scas
repz
shrb
stos
fisubrs
lods
and
jle
xchg
sub
push
aad
dec
stc
mov
dec
xchg
or
std
inc
xor
mov
mov
add
xor
jne
mov
jo
not
in
mov
xor
fs
push
sarl
jp
ja
adc
fnsave
add
dec
mov
imul
repnz
add
incl
add
jmp
int
je
sti
cmp
lret
cs
cmpl
fstl
fwait
xchg
add
xchg
cmp
sbb
push
cld
push
mov
shr
mov
jg
dec
cmp
addr16
loopne
mov
jno
pop
mov
jmp
negl
mov
je
push
aaa
ljmp
xor
int
inc
data16
cmp
mov
sbb
loope
pop
xchg
sub
std
test
xor
nop
cmpsl
and
sbb
jb
xchg
imul
ja
xor
and
ret
ret
js
je
outsl
popf
adcb
add
adc
fdivr
xor
leave
ret
movsb
pop
jae
mov
aas
and
jb
or
xchg
shl
cmp
push
mov
pop
sbb
arpl
ret
stc
xchg
add
and
push
sti
cmpsl
enter
sbb
das
add
incl
add
add
in
sbb
divb
jmp
test
inc
sub
add
jbe
loope
adc
sub
push
jle
cli
mov
jnp
xchg
lods
xor
cwtl
mov
xor
call
nop
mov
repnz
pusha
mov
pop
and
and
push
xchg
or
mov
out
mov
stos
jl
xor
dec
jp
and
in
adc
mov
push
jns
cwtl
stc
bound
mov
mov
xor
pop
mov
push
sbb
mov
cmpsl
imul
in
sub
cmp
test
cmpsb
mov
cmpsb
pop
and
lahf
dec
jl
sbb
and
xor
sub
pop
pop
xchg
mov
clc
lock
xor
das
loopne
mov
add
mov
std
mov
dec
push
stos
push
xor
add
add
add
mov
fsubrl
mov
popa
inc
xchg
lods
pop
sbbb
adc
test
sti
add
cld
or
loope
mov
sbb
push
fstl
push
pop
insl
lahf
inc
std
push
and
or
xor
inc
lret
enter
aas
loope
pushl
push
popf
inc
add
xor
add
popa
lret
add
sub
and
xchg
shll
xor
jmp
cmpl
cltd
sahf
iret
sahf
popa
mov
sti
jg
dec
test
adc
outsb
movsl
push
dec
mov
mov
cli
jecxz
push
outsb
mov
sub
pop
add
popf
sahf
imul
mov
jo
test
insb
mov
xchg
dec
mov
push
movsl
data16
sub
xchg
enter
cmp
jl
mov
inc
cs
mov
dec
daa
add
and
jecxz
and
lcall
add
incl
add
lea
xchg
pushf
scas
mov
and
scas
call
sub
or
sbb
aam
mov
das
sub
lds
mov
mov
dec
jbe
loopne
iret
jmp
xchg
sbb
pushf
flds
pop
ret
aad
ds
aas
add
sub
fiadds
ss
psllw
sub
sbb
jno
cwtl
mov
test
inc
sti
and
fmuls
jnp
dec
add
in
std
mov
push
bswap
mov
jmp
mov
fists
cmp
cltd
mov
mov
sahf
mov
orl
in
sbbl
fsubs
mov
cmpsl
and
inc
test
cmpl
std
aam
add
neg
sbb
and
in
ficompl
cmpsl
dec
inc
or
inc
push
inc
xor
add
jg
fistps
push
insl
test
pop
jb
fiaddl
ret
ficomps
cmp
lahf
lea
xchg
popa
or
add
incl
add
and
xchg
jb
ret
mov
repz
cli
dec
push
loop,pt
aam
inc
inc
outsb
adc
mov
mov
bound
int3
jecxz
fldl
mov
roll
pushf
adc
in
mov
jno
fs
sub
pop
das
dec
push
cmp
mov
sbb
rolb
repz
mov
scas
dec
adc
push
cltd
xchg
xlat
lret
add
jne
xor
xor
rolb
dec
cmp
test
fimuls
adc
or
sbb
mov
jle
pop
lret
shll
jl
cmp
pop
sub
stc
fadds
fadds
lcall
cmpsl
pop
sub
fidivl
ret
mov
pushf
scas
xchg
fs
loopne,pn
in
add
pop
lcall
lods
xchg
cmp
or
fiadds
stos
xor
sub
arpl
ja
sub
add
inc
or
add
incl
add
imul
xor
bound
ss
aaa
cwtl
mov
cmp
lahf
pop
stos
push
push
xor
lods
das
add
jb
imul
pop
sbb
mov
dec
pop
inc
rcll
xchg
ljmp
cmp
add
jo
jg
or
imul
fisubrs
mov
push
xchg
lods
clc
int3
subb
and
adc
cmp
adcb
mov
lret
mov
pop
and
aad
mov
dec
or
fwait
daa
popa
dec
inc
sub
sbb
out
add
adc
and
mov
jp
xlat
jp
jae
xlat
push
jb
xchg
ret
or
std
mull
imul
adc
xlat
inc
xchg
push
cmpsl
call
mov
pop
inc
or
movsb
cmp
cmp
add
ret
cmp
stos
push
lods
push
loopne
out
outsb
add
lret
mov
or
imul
add
incl
add
lahf
push
cmp
and
mov
std
pop
xor
adc
sub
stc
test
jmp
sbb
ret
repz
clc
loope
out
inc
mov
pop
dec
stos
mov
ret
mov
jb
andl
mov
icebp
adc
ds
rorl
rcl
sub
push
add
cld
test
push
sbbl
and
cwtl
test
adc
cli
sbb
test
and
jl
xor
test
ss
clc
sti
mov
mov
jmp
mov
mov
cs
jb
add
inc
xchg
mov
jle
push
push
cmp
icebp
fisttpll
mov
pop
cld
sbb
sbb
stos
test
pop
or
sub
inc
or
xor
leave
jmp
into
fwait
mov
push
test
add
sub
sti
pop
jge
neg
hlt
add
pop
or
add
int
pop
mov
or
rcll
push
cltd
stos
xchg
pop
mov
add
xlat
js
xor
xor
cmpsl
mov
add
jmp
adc
test
mov
add
mov
cld
scas
xor
mov
cli
out
mov
stos
gs
pop
jmp
lea
pop
adc
loope
mov
push
fs
push
add
test
dec
push
jl
sub
stc
lods
inc
jg
aam
in
icebp
jne
aas
push
popf
jecxz
jmp
test
cld
out
aam
sub
orl
cmp
pop
out
cmp
jle
adc
in
daa
lret
pushf
outsb
xchg
dec
mov
and
loop
fcmovb
add
fistpl
push
mov
test
inc
pop
jl
xor
test
lret
cmp
pop
cmp
stc
adc
push
fcomps
add
fsub
std
in
popf
in
stc
jmp
mov
popa
sbb
add
incl
add
pusha
mov
sbb
fdivrl
out
adc
nop
data16
sbb
jmp
pop
cli
add
push
stos
pushl
jmp
imul
mov
xchg
test
stos
clc
mov
mov
icebp
lcall
mov
inc
nop
iret
add
sub
ds
jge
push
aas
add
outsb
pop
mov
mov
add
mov
cmpsl
add
inc
mov
mov
sub
pushf
fldcw
sub
cmp
cmpsl
mov
movsl
add
mov
jle
inc
cmpsb
push
push
jb
cs
daa
mov
mov
pop
icebp
sub
dec
lds
cmp
leave
cmp
mov
push
add
rorl
clc
jmp
shl
arpl
js
lret
outsb
or
jno
pop
jp
jnp
sti
xchg
jle
jp
lods
das
das
insb
adc
aaa
add
incl
add
mov
je
loopne
cltd
xchg
inc
jp
fsub
add
aaa
aas
inc
push
test
loope
call
sbb
ret
sub
cmpsl
mov
mov
dec
iret
jnp
lock
pminsw
adcb
sti
jmp
cmp
js
fs
sar
rcrb
leave
pop
push
mov
xor
xchg
mov
aaa
xor
xor
pop
and
mov
stos
aad
lahf
inc
and
mov
xchg
push
and
sub
mov
inc
sbb
and
mov
mov
sahf
lret
test
cmp
ja
xor
loop
mov
mov
outsb
xor
cmp
adc
xchg
xor
inc
and
mov
ficoml
mov
mov
leave
out
arpl
dec
sub
mov
adc
sti
rdtsc
mov
xchg
fstps
les
xor
pop
dec
jmp
mov
add
push
sti
decb
mov
jg
cmp
add
add
add
cmc
xchg
adc
push
loop
jno
scas
loopne
inc
jp
add
push
add
mov
adc
jnp
mov
cmp
dec
loope
iret
movsl
sub
clc
icebp
orb
pop
insl
adc
cltd
inc
sub
push
sbb
adc
je
pop
loope
push
xor
repnz
sub
push
mov
ja
xchg
adc
shll
inc
inc
add
ljmp
cmp
and
ja
push
sub
push
mov
rorb
sarl
arpl
xchg
cld
and
std
ret
inc
mov
int
jg
pushf
cmp
or
add
test
out
stc
mov
jle
aas
loopne
addr16
xlat
push
xchg
mov
jno
jns
xlat
shrl
push
ret
cmp
xor
hlt
adc
aaa
pushf
add
add
add
jbe
pop
xchg
rcl
test
sub
ror
inc
into
cwtl
incl
sbb
movsl
add
pop
sub
mov
sbb
and
shlb
push
cmp
inc
mov
dec
in
push
test
hlt
test
ret
loopne
sbb
aam
test
pushf
outsl
cmp
pop
add
test
psllw
fucom
icebp
adc
and
inc
dec
mov
sbb
aaa
lods
jne
lea
out
or
pop
outsb
xchg
dec
sti
scas
jge
push
mov
or
dec
andl
add
dec
cld
mov
sub
dec
ljmp
cmpsb
rclb
cmp
sub
test
hlt
pop
sub
cwtl
fcmove
imul
lret
push
arpl
popa
jge
fiadds
push
mov
push
fstpl
cmp
sub
adc
xor
jbe
test
jp
cli
add
cmp
jge
stos
lea
shrb
pop
roll
add
add
add
mov
pop
dec
xor
fmulp
rol
jl
pop
test
rclb
dec
rclb
int
dec
mov
leave
negl
cmpsb
mov
xlat
mov
jnp
jecxz
test
movsl
lods
or
jnp
mov
xor
aas
cmp
shl
pop
out
imul
sub
sub
jbe
outsl
dec
cmpsl
or
cmp
sub
inc
sub
push
xor
inc
inc
call
je
adc
or
lret
int
push
out
add
and
out
sub
aad
mov
mov
std
xor
icebp
rol
cli
dec
or
fsts
mov
cld
das
out
mov
sbb
and
scas
aaa
cmp
stc
xor
ss
xor
rcrl
out
or
enter
xchg
add
cmpsl
gs
inc
dec
add
adc
in
jge
pop
xor
lock
fcomi
mov
stc
scas
stos
adc
add
rclb
nop
lcall
cmp
add
add
add
jb
lahf
test
mov
shrl
pop
mov
daa
arpl
inc
xor
jo
xor
inc
cltd
lahf
sub
gs
fcompl
daa
jnp
inc
neg
fldt
lock
addr16
pop
sbb
ret
mov
mov
mov
sbb
mov
adc
xchg
mov
iret
std
mov
mov
out
movsb
push
add
test
jnp
xchg
push
pop
mov
fdivl
lds
sub
gs
fstpl
mov
push
into
into
push
and
push
add
cltd
or
popa
dec
adc
popa
hlt
sahf
testb
std
mov
push
daa
paddsw
mov
cmpl
push
frstor
and
jns
mov
bound
push
int
xor
adc
jp
pop
sahf
xor
sub
sub
and
jl
dec
jbe
idivl
or
out
out
add
add
add
add
sub
in
shl
xorl
sti
clc
subb
data16
mov
sbb
lahf
xor
loop
ret
popf
cmpsl
cmp
jle
xchg
pushl
in
add
sbb
lahf
insl
mov
ret
jge
sub
into
nop
lods
mov
dec
aam
daa
cmp
repz
in
or
test
jno
aad
iret
mov
je
inc
ja
fldcw
fwait
popa
xchg
test
push
in
pop
das
fsubs
jno
cmp
fildll
pop
mov
and
adc
ds
push
inc
mov
xchg
mov
loope
out
lods
addr16
jae
cli
mov
adc
add
pop
mov
xchg
sbb
dec
mov
push
mov
dec
or
fwait
mov
sahf
aaa
xlat
cmp
add
push
pop
fiadds
call
xchg
sub
int
lods
decl
pop
loopne
cmpl
add
outsb
sub
stos
fs
jmp
leave
aas
xchg
inc
xor
incl
add
sbb
inc
mov
mov
inc
pop
mov
fnsave
cmc
cmp
jmp
and
or
das
cmpsl
lcall
jle
pop
jae
movsb
out
movsl
iret
mov
mov
sar
sub
jno
je
cltd
cmp
or
sahf
sub
cmp
add
or
fs
fsubr
mov
lcall
or
inc
cmpl
cmp
mov
mull
ja
mov
les
and
repnz
fwait
iret
sbb
add
cs
dec
dec
mov
addb
mov
in
inc
mov
int3
xor
arpl
jp
aam
iret
sahf
imul
rorb
or
lods
inc
jg
jnp
cmp
mov
and
adc
sub
mov
outsb
out
les
scas
fistpll
outsl
sarl
and
add
incl
add
pop
cwtl
outsb
filds
out
push
cli
stc
ss
notb
sbb
in
testl
ljmp
in
loope
popa
aam
mov
fldt
fs
jmp
hlt
xor
sahf
pop
xchg
sub
cli
pop
inc
out
fs
stc
dec
es
in
add
in
ret
inc
lock
js
fwait
pop
daa
dec
push
cmpb
push
loopne
mov
add
pop
inc
repnz
or
mov
cmc
movsl
adc
pop
xor
add
scas
cmp
call
adc
add
push
cmpsl
adc
out
add
mov
mov
dec
outsb
adc
iret
fsts
out
jg
mov
pop
dec
add
out
sub
inc
pop
lods
jbe
jnp
loopne
and
adc
mov
popf
and
push
jne
mov
stos
and
pop
cld
loope
xor
in
push
add
cmp
movsb
push
sbb
pop
sub
add
incl
add
je
icebp
in
decb
pop
pop
cmp
adc
add
fsubrl
test
xchg
stos
sub
push
lahf
jns
imulb
test
add
and
adc
xchg
pop
leave
or
mov
cwtl
ja
pop
pusha
xchg
pop
clc
inc
das
cltd
ljmp
stc
and
or
and
in
push
cmp
loopne
mov
rcrl
push
push
or
ljmp
mov
cmp
fwait
sbb
cmp
pop
add
push
fdivrs
fidivrs
ret
jl
push
insb
fbld
popf
fidivrl
xchg
jb
out
fisttpll
cs
test
pop
add
xchg
or
mov
into
sbb
fstenv
lcall
xor
dec
dec
call
ficompl
inc
add
adc
mov
pop
mov
mov
lds
mov
outsl
lret
mov
out
jmp
cmp
add
add
add
push
nop
nop
lahf
cwtl
pop
int3
shrb
outsl
sti
xor
jg
xor
mov
out
mov
xchg
in
lea
enter
dec
jp
lcall
movsl
inc
xchg
inc
xchg
loope
cmp
and
push
decl
stos
jo
pop
fbld
neg
lret
sbb
fbld
cmpsl
mov
sub
sub
inc
scas
sbb
xor
js
lcall
sub
fs
scas
rcr
inc
xchg
inc
or
mov
add
jns
or
lods
cmpsl
jae
xchg
out
xchg
push
mov
mov
lahf
adc
lods
inc
add
sub
lods
imul
xchg
outsl
pop
cmp
insl
js
xchg
movlps
pop
sub
les
xchg
sub
xchg
sub
mov
std
mov
and
popa
cli
ljmp
call
add
and
das
cmp
lods
repz
mov
call
inc
add
incl
add
add
jb
pop
imul
loop
push
xchg
scas
aaa
add
mov
pop
leave
sbb
dec
movsbl
in
call
mov
std
xor
nop
enter
roll
xchg
mov
mov
push
sbb
rclb
jae
shld
dec
testb
mov
scas
mov
xlat
sbb
or
and
into
or
jnp
out
mov
rclb
mov
in
jo
pushl
les
ds
fs
bound
and
stc
aam
dec
adc
mov
jl
test
sub
sub
push
pop
lock
xor
jb
icebp
xchg
test
lods
stos
mov
stos
push
jo
or
sbb
aam
icebp
xor
xchg
xchg
mov
icebp
mov
push
xorb
push
fbld
addl
pop
xlat
rclb
aas
daa
push
cld
push
std
jmp
dec
push
sbb
incl
add
shlb
jmp
rolb
clc
mov
sbb
cmc
cmp
icebp
xor
test
inc
push
xor
add
int
xchg
xchg
ss
cwtl
adc
xorb
adc
push
cmpsl
xchg
pop
movsl
loop
ds
push
add
dec
out
add
mov
jne
cltd
flds
sbb
jl
aad
xlat
in
fisttpll
rcl
scas
sbb
rorb
mov
add
fisubl
lods
inc
lods
rorb
shl
adc
call
jle
sahf
push
dec
add
inc
fistpl
dec
sbb
cmpl
in
pushf
rcr
rol
jmp
je
mov
adc
inc
adc
gs
testb
clc
cmp
mov
jo
stos
xchg
add
jge
shlb
adc
mov
pusha
call
hlt
xchg
push
pop
mov
add
add
sbb
dec
push
out
aad
cmpsb
push
dec
jb
inc
add
incl
add
leave
dec
in
add
cmpsl
push
mov
ds
insl
daa
subb
addr16
gs
sub
add
add
push
add
lods
mov
loop
fucomp
inc
jge
xchg
mov
or
adc
xchg
test
inc
dec
mov
adc
sub
imulb
insb
add
cmp
lcall
cwtl
es
in
push
movsb
push
mov
fmuls
test
mov
mov
sarb
fdivr
jnp
jmp
loopne
jp
xor
adc
pop
push
in
les
sbb
outsb
sbb
jp
add
push
ret
xor
xchg
int3
js
sarb
jo
iret
loop
inc
mov
rcrl
xor
les
jecxz
scas
mov
xor
sub
add
pop
dec
scas
mov
lret
stc
push
scas
pop
fcomp
jge
or
cmpsb
mov
rol
pop
add
idivl
or
fwait
inc
push
inc
add
incl
add
mov
or
push
cli
mov
xchg
in
pop
js
cmp
popf
fstpt
dec
imul
popa
stos
xor
dec
repnz
ljmp
imul
sti
jge
cwtl
and
dec
lock
push
out
pop
popa
flds
popf
fsubrl
dec
adc
int3
stc
dec
mov
ret
xchg
ja
cmp
jns
fmuls
xchg
bnd
mov
loop
leave
mov
dec
push
lret
aam
cmp
add
xor
and
push
insl
push
dec
pop
jno
xorl
test
jno
jge
int
lahf
mov
ds
andb
ljmp
mov
imul
mov
mov
bound
repnz
sub
shlb
aam
sub
in
ret
ret
je
lret
pop
or
cmc
bound
mov
ja
jg
xchg
orl
das
stc
inc
add
incl
add
mov
int
js
pop
push
dec
adc
and
les
mov
addr16
cltd
aas
sbb
scas
xchg
jecxz
jno
and
inc
xchg
mov
pop
aad
repz
shr
lds
pop
rcrl
lahf
movsb
jmp
mov
test
xchg
mov
enter
pop
mov
xlat
push
inc
out
mov
mov
or
cmp
shll
jbe
sub
les
jg
mov
mov
pusha
out
imul
popf
or
push
dec
inc
call
push
subl
imul
pushl
dec
dec
jecxz
xchg
sub
arpl
dec
pop
push
push
dec
scas
js
hlt
lock
fidivrs
iret
andl
outsl
rolb
pop
insb
push
aaa
dec
subl
cltd
dec
iret
test
xchg
xor
data16
push
mov
pop
xor
sub
lods
lea
and
dec
lret
jmp
imul
aaa
je
xchg
inc
add
incl
add
mov
xchg
xchg
jle
xchg
jae
or
aam
outsl
jge
imul
and
pop
xchg
cld
add
fnsave
sbb
dec
loope
or
mov
inc
rolb
inc
dec
cmp
push
dec
icebp
sub
mov
jne
pop
xchg
mov
fistl
aam
sub
pop
sti
cmpsl
pushf
jmp
jne
clc
cwtl
and
and
jp
rorb
xorl
pop
xlat
repnz
xchg
jp
lahf
fisttpll
and
sbb
cs
js
xor
push
out
test
pand
inc
loop
repnz
pop
and
repz
les
lock
jns
clc
out
into
dec
std
lods
or
jne
aaa
or
cmpsb
es
mov
sub
mov
xchg
pusha
mov
pusha
fimull
xor
imul
pop
fdiv
sbb
and
fldcw
lds
cmc
cwtl
xchg
push
sub
add
incl
add
mov
sti
mov
mov
lcall
fisttpll
movsb
aas
fsubrl
es
filds
and
fdivp
fistps
or
jl
xchg
es
add
inc
icebp
stos
mov
xchg
cmp
fcomps
and
nop
jp
push
xchg
push
pop
sub
repz
mov
loopne
mov
cmp
movsl
mov
xor
out
xor
jle
jbe
cmpsl
or
xor
mov
add
aaa
scas
mov
mov
push
out
xchg
stc
xchg
pop
repz
mov
sub
mov
xor
sub
daa
inc
pop
push
jecxz
loopne
fwait
movsb
and
mov
adc
mov
mov
sbb
clc
jp
cld
or
fcoms
aad
mov
scas
and
jecxz
in
mov
cmc
shlb
xchg
xor
adc
lahf
xor
add
jns
xor
jg
add
add
add
or
inc
movsb
outsb
xchg
add
cmp
push
adc
arpl
xor
cmp
imul
lods
in
dec
lods
add
cmp
adc
cmp
insl
mov
push
mov
flds
xchg
fwait
mov
add
not
mov
mov
pop
jnp
sbb
xchg
xchg
insl
mov
cmp
aas
mov
pop
inc
mov
mov
fst
pop
bound
xchg
and
xchg
cmp
or
fdivr
add
test
sbb
push
mov
pusha
pop
stos
stos
jae
mov
je
add
iret
push
out
mov
ss
outsl
pop
loop
jne
mov
mov
enter
push
hlt
mov
push
pop
mov
mov
sbb
mov
cwtl
imul
and
aaa
gs
adcl
sub
sub
mov
sarb
add
add
ret
jg
decl
rol
push
xchg
add
add
add
cmp
mov
xor
xchg
shrb
pop
ja
jbe
push
es
data16
fstpl
adc
pop
add
fldt
stos
jno
repz
repnz
dec
rcl
jo
push
cmp
outsb
xchg
popa
and
and
jl
ret
inc
mov
pop
lock
adc
sbb
ds
movsb
or
lods
aad
push
insb
fcmovb
sti
ss
popf
push
and
jno
xor
repz
loope
inc
adc
xchg
cmp
addr16
or
inc
push
cmp
test
add
add
xchg
push
jmp
fiaddl
lds
lahf
rclb
pop
sti
rclb
and
bt
xor
fsubrs
faddl
cmpsb
add
push
sbb
sbb
xorl
xchg
test
dec
das
rcrb
sub
adc
mov
out
aad
dec
xchg
mov
incl
add
mov
enter
enter
in
shrl
adc
movsb
mov
dec
ud2
popa
insl
pop
mov
push
popf
cs
add
sti
and
ss
das
sahf
cmp
mov
mov
and
les
fmulp
adc
rcll
fnstcw
prefetchw
push
jns
dec
fs
and
js
jne
jnp
lock
xchg
cmp
pop
mov
test
sub
rclb
das
movsl
mov
out
push
jl
and
sbb
fists
ret
add
xorb
imul
jecxz
mov
jmp
xor
bound
leave
call
inc
add
arpl
pop
fnsave
sub
repnz
and
or
mov
push
jle
fsubs
cmc
stos
adc
mov
mov
cli
addr16
xchg
jbe
inc
jae
addr16
add
hlt
gs
dec
adc
scas
push
repz
add
incl
add
lea
mov
xor
push
or
les
jecxz
push
xlat
testl
fwait
jns
mull
add
test
mov
jo
popf
cwtl
cmp
and
sti
mov
jle
mov
and
loope
insl
mov
ja
xchg
cltd
cltd
lcall
xchg
fcoms
dec
imul
test
pop
xchg
movsl
or
fildl
push
pop
sub
jmp
lea
jno
cmp
fnstenv
mov
pop
mov
aaa
pop
cmp
fisubrl
loope
inc
pusha
scas
dec
pop
cmp
ret
inc
adc
push
mov
ss
push
fcmove
mov
fsubl
pop
xchg
cmp
pop
outsb
pop
and
add
or
cmp
mov
cmpl
pop
aas
add
jle
jo
popa
cmpsb
mov
sbb
cmp
add
aas
gs
pop
repnz
dec
add
incl
add
mov
inc
pusha
leave
adc
sub
rolb
inc
and
cmpsl
push
sub
into
jmp
scas
mov
lahf
and
andl
or
adc
xchg
xchg
sti
jo
xchg
out
cmp
cmp
adc
mov
das
jl
sub
and
add
jbe
mov
mov
sti
xor
je
insl
mov
or
dec
cmc
aam
cmp
dec
es
fwait
test
inc
mov
loopew
xchg
inc
and
mov
insl
push
cwtl
rcr
test
dec
divl
xchg
loopne
and
push
aam
repnz
fdivs
test
add
push
xor
mov
dec
insl
jb
pusha
mov
hlt
add
fnsave
roll
mov
in
mov
popf
shr
add
sub
mov
arpl
mov
out
fisttpll
lock
dec
in
icebp
dec
add
incl
add
clc
lods
iret
jle
in
test
fldcw
addb
add
fwait
call
inc
decb
add
or
leave
jmp
mov
jnp
cmp
xchg
dec
es
sub
andl
sub
fs
jmp
xchg
push
xchg
aaa
outsl
fwait
aam
pop
test
pop
pop
dec
pop
mov
mov
push
dec
or
inc
scas
hlt
push
add
clc
movsb
push
aaa
xchg
rcll
jecxz
scas
out
sahf
in
iret
mov
adc
push
cltd
test
cmp
pushf
jne
sub
sub
and
jge
xor
add
push
scas
std
gs
sbb
insl
add
and
cmp
jae
mov
in
jno
adc
mov
icebp
pop
inc
pop
or
add
mov
popa
jns
repnz
mov
enter
in
iret
popa
cmp
add
mov
ljmp
add
incl
add
add
pop
push
xchg
jae
inc
jge
or
gs
mov
pop
xor
mov
and
push
inc
lods
orl
or
pop
ds
push
pop
fcompl
cmpsl
in
jle
dec
xchg
dec
adc
imul
push
sbb
or
lahf
mov
push
fdiv
pop
jno
xor
mov
push
in
push
or
push
lods
mov
cld
and
lret
or
cmc
dec
out
mov
xor
push
sbb
jae
mov
aam
sub
je
ja
xor
jg
xorb
cli
or
test
xchg
push
orb
in
adc
adc
je
sub
fwait
rcll
pop
adc
and
out
outsb
push
icebp
jnp
ljmp
push
jp
cltd
push
sub
sub
push
sbb
jmpw
fnstcw
jo
sahf
jb
bsf
out
dec
add
incl
add
sub
add
out
cmc
sbbl
jne,pn
adc
pop
xchg
enterw
cmp
rolb
adc
inc
stos
add
imul
outsl
insl
push
nop
ja
mov
jnp
sub
aam
scas
dec
jnp
outsb
ljmp
inc
mov
mov
inc
iret
adc
mov
push
cmpsl
stos
icebp
push
jo
mov
push
aad
jl
out
jle
hlt
test
inc
xor
dec
movl
daa
mov
or
xchg
int
pop
dec
inc
enter
pop
insl
xchg
xchg
dec
mov
pop
jne
adc
fst
xor
sub
adc
fisubl
inc
aad
iret
psubq
pop
mov
jg
xor
sub
sub
and
dec
jbe,pt
and
in
jp
int3
aad
pusha
jb
xor
in
ficoml
ret
add
imul
out
mov
mov
loope
data16
dec
add
incl
add
push
lea
cmpsb
fdivrs
outsl
xchg
stos
aaa
push
pop
in
xchg
aad
mov
sub
jo
sub
sub
clc
test
lock
gs
cld
sub
jmp
lret
into
adc
ret
mov
sbb
out
jbe
insb
cli
adc
out
cmp
mov
movsb
jo
xchg
mov
pop
push
imulb
cmp
jecxz
ret
mov
sti
adc
mov
fistpl
sahf
sub
lahf
aas
cmp
sbb
lahf
mov
jle
mov
enter
stos
scas
lods
sbb
inc
pop
mov
fistpl
mov
fcomps
iret
push
cltd
and
sub
push
cmpsl
add
inc
loop
pop
jmp
pop
mov
hlt
push
dec
js
dec
rcrb
push
in
in
mov
pop
xchg
add
xchg
movsl
mov
cmc
or
dec
sbb
jne
inc
sbb
sub
add
add
dec
stc
mov
ljmp
in
push
add
incl
add
mov
mov
mov
sbb
jmp
lea
icebp
not
xchg
and
loopne
movsb
enter
mov
jns
or
or
adc
repnz
pop
lahf
xchg
out
jmp
push
pop
shll
add
repz
shrb
jnp
sub
inc
loopne
lahf
adc
pop
adc
mov
imul
imul
push
mov
adc
mov
sti
outsl
arpl
ror
push
std
xchg
xor
test
call
jae
cmpsl
js
mov
xchg
das
xor
pop
xorb
test
pop
dec
jno
dec
cltd
pop
in
dec
fs
daa
sub
xchg
inc
shrb
adc
fdivrl
jb
sbb
fs
push
out
xorb
data16
sbb
jno
and
pop
jo
cmp
cmp
aam
cwtl
out
adcl
pop
cmp
xchg
cmp
jle
jg
cld
lcall
pop
in
push
add
incl
add
xchg
lahf
out
push
sbb
rcl
imul
imul
popa
in
arpl
inc
jne
faddl
push
call
cwtl
mov
xlat
mov
rol
cmp
pop
push
jmp
sarb
add
sbb
in
jle
fnstsw
cmc
test
cmp
xor
clc
lock
not
gs
adc
jecxz
jmp
lret
cmpsl
mov
inc
xchg
push
mov
divb
stos
movsb
inc
cmpsl
gs
adc
das
jge
jl
cltd
les
aas
repnz
xchg
clc
push
mov
sub
hlt
mov
sti
mov
in
pop
test
pop
jmp
lock
push
jge
jb
bnd
cltd
and
iret
or
ss
add
mov
push
inc
mov
dec
iret
and
adc
xlat
jle
movsl
add
fdivrp
sbb
pusha
add
xchg
mov
pop
dec
insl
pop
mov
incl
add
test
xchg
outsl
xchg
out
inc
xchg
test
sub
mov
xchg
nop
adc
mov
sub
cwtl
mov
cmp
stc
mov
clc
inc
adc
mov
outsl
mov
call
mov
xor
sub
pop
push
push
out
mov
push
jge
div
jnp
inc
push
aam
pop
cltd
add
push
test
imul
pop
inc
stc
and
fdiv
xor
loopne
aaa
lods
call
pop
popl
ret
mov
fsubr
imul
jg
bound
xchg
in
popa
adc
test
rcrb
inc
pop
repz
lcall
stc
shl
adc
add
pusha
negl
push
xor
and
sbb
mov
mov
fcomip
lods
rcll
and
or
dec
leave
pop
xchg
mov
test
push
jno
cwtl
cmp
cmp
jge
ret
rcr
or
sub
add
inc
mov
push
push
jmp
push
mov
and
incl
add
xlat
xchg
imul
add
mov
and
in
pop
addr16
sbb
outsb
std
scas
dec
jle
sbb
call
xor
xor
in
inc
jg,pt
in
out
mov
insb
test
in
dec
push
lret
fwait
in
loope
push
ds
xchg
lcall
data16
and
mov
arpl
pop
loope
repnz
sbb
nop
shrl
shrb
lcall
dec
cmp
mov
cld
jg
mov
sbb
pusha
inc
loopne
pop
fs
mov
sbb
mov
pop
or
mov
jbe
jb
mov
fnsave
outsl
in
clc
inc
pop
ret
pop
out
push
lahf
and
sub
out
dec
ret
xchg
sbb
cmpsb
iret
lea
in
cli
or
mov
ret
push
popa
in
inc
xlat
fidivrs
fimull
add
fsubrl
mov
out
cmp
ret
or
lea
sbb
push
add
incl
add
out
or
cwtl
icebp
adc
out
imul
hlt
lods
movsb
arpl
stos
sub
cwtl
and
int
adc
jne
or
lea
ret
push
lret
push
rcl
dec
xchg
ret
inc
mov
in
inc
cmp
or
int
sahf
lock
cmc
pop
lock
push
pop
cmp
cmp
add
push
fnstsw
roll
inc
jmp
adc
fisubrs
fcompl
test
addr16
insl
mov
sub
cmc
xor
not
cmp
std
adc
sub
xor
add
ret
imul
arpl
xor
fcoml
fwait
jbe
addb
add
cli
outsl
cmp
stos
pop
int3
iret
popa
jae
inc
out
negl
fstpt
jo
pop
js
dec
xchg
fcomps
out
ja
xchg
je
aaa
inc
jb
sub
lods
add
push
shll
out
pop
pop
pushf
push
cmpsl
cmc
pop
call
add
add
pusha
sbbb
sub
hlt
call
jle
cmc
lock
push
stc
mov
mov
fisubrs
scas
pop
loope
cmpsl
pushf
mov
sub
mov
jle
mov
addr16
xchg
sbb
mov
inc
stc
clc
dec
cmp
push
je
mov
ret
sub
mov
sub
ds
repz
les
xchg
movsb
xchg
fbstp
mov
outsl
xchg
push
ja
push
jmp
shr
xor
and
cmpsl
xchg
add
sub
fwait
jne
jae
lds
jae
xorl
pop
inc
jno
pusha
adc
dec
adc
inc
xchg
pop
mov
cli
rcrl
scas
adc
cmc
fwait
push
cltd
cmp
in
sub
jl
popf
aam
mov
pop
push
rorb
or
rorb
imul
scas
int
jo
test
push
fnstsw
and
add
out
lcall
hlt
mov
pop
jnp
out
add
incl
add
mov
xlat
and
add
ljmp
adc
cltd
in
sbb
push
lods
ffreep
or
nop
test
jg
mov
or
pop
sbb
in
inc
fimuls
pop
jno
push
imul
pop
jne
mov
flds
fbld
dec
mov
icebp
movsb
xchg
xorl
xor
xor
test
dec
cwtl
xchg
push
pop
popf
sti
sub
mov
inc
orb
loopne
fildl
lahf
xchg
inc
dec
jle
sahf
inc
lods
or
popa
insl
xchg
stc
pop
mov
int
xchg
xchg
scas
xchg
inc
or
pop
dec
iret
cli
adc
sub
subl
push
lods
repz
sahf
push
dec
out
mov
rcrb
mov
mov
cmp
test
out
cmp
add
add
jbe
idiv
imul
lds
incl
add
subl
ret
out
movsl
daa
scas
pop
shll
clc
push
fcmovbe
add
loope
cmp
mov
push
sub
sahf
mov
sbb
or
fdivs
icebp
inc
mov
fsts
fisubl
pop
sub
xchg
jle
pop
inc
push
bound
pop
or
and
pop
and
movsl
xor
mov
repz
push
cmp
in
test
subb
mov
jb
cltd
mov
cmp
mov
lods
mov
test
dec
out
scas
inc
ret
push
rcl
test
pushf
loope
ja
pusha
loopne
loopne
jnp
xor
popl
out
adc
inc
sbb
mov
enter
pop
loop
jp
xor
testb
shrl
sbb
mov
aas
loop
loope
inc
dec
mov
sub
jae
fwait
cmp
stos
sarb
in
add
incl
add
xchg
push
xor
mov
wrmsr
filds
sbb
pop
mov
pop
fisttpll
int
imul
test
cmc
std
adc
out
push
push
mov
and
mov
pop
addr16
adc
xchg
pop
loopne
movsb
stc
inc
cmpsl
or
scas
mov
arpl
mov
adc
fiadds
ret
inc
cmp
or
pop
cmpsb
fsubrs
pop
in
inc
xchg
mov
push
pop
mov
jp
ret
xchg
xchg
mov
mov
pop
or
addr16
repz
inc
and
data16
mov
jb
pop
inc
ret
idivl
and
and
sarl
adc
xchg
jbe
adc
stc
mov
fldl
mov
aam
sbb
xchg
in
inc
mov
mov
push
sub
fiadds
bound
out
std
xchg
lds
inc
push
clc
mov
and
hlt
mov
pop
add
incl
add
pusha
out
das
mov
pushf
lcall
mov
add
mov
jb
je
adc
xor
lds
inc
mov
mov
sahf
sbb
xor
sub
test
sbb
push
mov
cmpl
fdivs
int
mov
adc
ficoml
je
or
mov
push
data16
idivl
xchg
std
shrb
rorb
nop
mov
es
and
dec
xor
lock
stc
push
xchg
lret
out
and
movsl
fcmovne
push
daa
cs
or
xchg
dec
cmpsb
mov
inc
inc
xor
push
iret
mov
outsb
xchg
sbb
testb
jns
add
mov
add
dec
pop
jge
out
xor
add
fs
fidivl
out
and
mov
pop
in
sti
pop
shr
mov
and
scas
xchg
push
adc
out
mov
fcmovb
scas
cmp
pop
add
incl
add
mov
shrb
mov
add
dec
and
nop
aas
mov
or
sub
lods
adc
add
hlt
gs
shr
sbb
stos
jo
and
mov
push
rcll
jge
jmp
add
sub
call
push
cwtl
jle
dec
dec
mov
push
les
ds
fmulp
mov
push
sbb
add
imul
test
aaa
scas
mov
out
in
sti
push
ss
adc
das
imul
mov
mov
dec
pusha
xor
popa
test
xchg
jmp
add
shlb
decl
mov
mov
adc
shl
xchg
rol
mov
aam
mov
cmp
xchg
mov
sbb
xchg
push
pop
or
loope
push
test
dec
sbb
mov
mov
popf
mov
test
or
fdivs
mov
jecxz
loop
add
incl
add
mov
sarb
and
dec
xchg
insb
pop
xor
ror
movsb
pop
mov
sahf
cld
xchg
and
jecxz
iret
test
mov
es
jg
dec
pop
test
sub
inc
inc
out
mov
popa
inc
adc
cs
inc
push
lret
mov
enter
cmp
push
out
cmovp
and
push
fs
ffree
sbb
fbstp
jo
imul
mov
loop
xchg
add
mov
lods
adc
jp
loope
lods
subb
test
jp
mov
push
jmp
iret
lahf
push
or
das
xor
pop
adc
cwtl
sub
jno
mov
xor
push
ror
mov
rep
fadds
insb
iret
sbb
sahf
push
push
scas
pop
dec
sbb
mov
xchg
sar
pop
mov
and
dec
add
mov
pusha
shrb
jnp
pop
add
incl
add
sub
xchg
aaa
mov
in
dec
lahf
mov
jbe
mov
js
int3
push
insl
add
mov
cli
lds
inc
jno
mov
and
cs
add
stc
movsl
cs
ficoml
inc
add
repnz
movsb
aam
sub
sub
test
in
shl
std
aaa
jae
adc
and
sbb
sbb
test
inc
push
in
push
or
lods
std
cli
pushf
mov
dec
dec
sub
iret
mov
lcall
stos
or
sub
jmp
cmc
test
xchg
sub
insl
xlat
or
lea
push
push
push
shlb
gs
mov
push
cli
xchg
push
xor
and
in
mov
das
or
adc
xor
iret
icebp
inc
fistpl
addl
jbe
sti
adc
aaa
je
add
dec
dec
adc
add
fsubl
mov
ja
mov
jns
dec
loopne
add
incl
add
jmp
or
inc
nop
and
ss
cmp
and
cmpsb
imul
iret
rcrl
loop
ds
outsb
fnstenv
out
adc
fisubl
fistl
bnd
mov
nop
jns
xorl
int3
into
je
call
ret
push
imul
push
cli
and
mov
and
int
dec
fbstp
or
xchg
jp
mov
insb
dec
or
and
daa
mov
adc
lret
and
imul
adc
mov
inc
sbb
mov
sbb
neg
ljmp
xchg
sub
les
in
push
int3
mov
stos
mov
in
outsb
dec
fs
aaa
dec
mov
faddl
add
push
mov
nop
stc
cmpsb
mov
pop
fadds
cmc
sub
js
lock
in
lods
jo
fbstp
scas
adc
lahf
xlat
out
cld
int
popa
jge
pop
add
incl
add
sub
xchg
repz
pushf
or
push
loope
adc
mov
xchg
jb
lods
rcrl
in
nop
movsb
adcl
sbb
in
adc
jne
mov
repnz
lods
sbb
int
and
clc
jne
insb
ret
or
and
daa
sub
mov
push
xchg
cmp
jp
mov
mov
sarl
push
ja
dec
mov
cmp
out
test
mov
mov
cwtl
or
out
push
jge
mov
jl
jl
cmc
sub
arpl
fwait
repz
ret
lds
sbb
sub
or
sub
cwtl
test
pop
ret
push
sub
out
movsl
add
xlat
xchg
call
cmp
js
lock
daa
xor
out
xor
sbb
jmp
mov
xlat
andl
xchg
mov
mov
in
rorl
add
add
add
int3
cmpsl
jae
and
xchg
push
jge
xor
dec
xchg
out
testb
sub
mov
sub
rcrb
dec
sbb
out
addr16
nop
xor
add
stc
xchg
cmp
sub
hlt
mov
inc
mov
leave
or
insl
movsb
xchg
xchg
push
aam
and
sub
cmp
repz
popf
push
push
or
and
mulb
mov
mov
fldt
pop
mov
push
cmpsb
inc
ret
xor
dec
je
mov
inc
in
aam
xor
das
loope
add
lods
insb
loope
aas
jb
mov
mov
cltd
xchg
sub
subl
mov
adc
sbb
push
sbb
loope
cmpsb
inc
inc
je
inc
fstps
add
dec
pop
cmp
jo
xor
sarl
cld
push
hlt
test
mov
sub
dec
aad
and
out
into
push
push
inc
lahf
mov
frstor
add
add
add
xchg
ljmp
sti
fistl
push
mov
inc
int3
cmpsb
shl
dec
fsubs
dec
es
cmc
aaa
inc
xchg
pop
addr16
test
pop
adc
ja
lret
xchg
mov
xchg
orb
movsb
testl
sub
add
mov
cs
lea
sbb
jne
addl
add
aaa
rcr
dec
cmp
sbb
les
outsb
enter
cwtl
movsb
mov
int3
data16
imul
inc
jns
ds
fldenv
push
dec
rolb
hlt
and
inc
repnz
lahf
add
or
movsb
adc
xor
pop
es
andb
jle
and
fucompp
pop
call
jp
ja
jnp
insb
xor
xlat
mov
cmp
mov
fimuls
adc
popa
cmpsl
mov
shr
mov
xor
mov
cmc
add
xchg
inc
shl
xlat
mov
jg
or
fsubl
add
add
add
jmp
fbstp
xor
fidivl
loop
notb
das
arpl
into
das
sub
in
cmpsl
cmp
cmpb
pop
into
shrl
test
es
mull
cmp
sbbl
ret
and
inc
aas
pusha
outsb
sub
repz
mov
shrb
mov
outsb
xchg
lods
imull
fadds
mov
push
jb
mov
aaa
or
in
icebp
push
sbb
push
push
xchg
pop
std
fdiv
dec
ret
mov
stc
mov
daa
jp
fs
in
addr16
xor
rolb
sti
std
cmpl
shlb
test
xchg
dec
lock
lods
push
movsb
lret
sbb
add
mov
inc
xor
cli
ret
call
inc
outsl
loopne
jne
xor
sbb
fdivs
sbb
repz
xchg
inc
pushf
mov
mov
xchg
push
pop
jae
mov
icebp
cmp
lahf
pop
fcmovb
fcmovnb
lahf
pop
cmpsl
jne
mov
divb
incl
add
subl
jns
out
lea
sar
or
fnclex
lds
jae
testb
cmp
push
cmp
jo
adc
ret
sbb
mov
sbb
dec
dec
lahf
in
cmc
dec
imul
inc
and
mull
int3
xchg
lret
ret
or
xchg
mov
or
or
fwait
mov
push
jb
inc
push
xchg
fcmovnbe
xor
icebp
fmuls
ja
loop
or
push
adc
in
xor
cmp
jns
dec
inc
and
lahf
or
arpl
xchg
push
mov
dec
mov
aaa
ret
adc
fdivs
xchg
daa
lahf
pushf
sub
dec
jmp
mov
cwtl
repz
pop
push
xor
mov
sub
ljmp
sbb
jae
add
cld
push
dec
scas
jbe
add
idiv
jg
sub
loope,pt
arpl
add
add
add
push
add
aas
ja
ret
jp
xor
add
dec
cld
or
add
mov
out
mov
int3
popf
hlt
pop
loopne
sbb
jne
xchg
pop
inc
push
imul
jno
cmpb
popa
cmc
push
lds
sti
push
dec
mov
mov
cs
scas
xor
inc
imul
ss
stos
pushf
loop
add
mov
sarl
pop
or
cwtl
mov
and
or
pushf
out
ljmp
test
ret
adc
jns
jae
pushf
cmp
adc
orb
add
jae
cmpl
repz
push
pop
jl
stos
adc
jmp
imul
push
push
inc
push
loop
sahf
cmp
sbb
sbb
mov
inc
pop
mov
fstps
fadds
incl
add
dec
les
jo
sbb
inc
mov
fidivl
sbb
jo
add
das
cmp
iret
insl
cmp
or
sub
sub
lds
hlt
adc
pop
out
add
adc
iret
lret
and
xlat
push
rcll
sub
sti
push
pop
out
leave
fnstenv
xor
sti
ret
cs
imull
pop
fcmovne
mov
daa
mov
cs
jne
pop
test
push
lret
add
stc
movsb
arpl
and
test
ret
dec
push
insl
dec
xchg
xor
mov
sbb
add
ss
mov
stos
fbstp
and
icebp
add
or
clc
add
lods
push
mov
into
jp
pop
add
mov
insl
add
jbe
nop
and
lcall
and
push
call
push
dec
rolb
jae
xchg
repnz
movsb
jle
arpl
sbb
fsubs
add
add
add
enter
sub
aad
xor
dec
imul
pusha
pop
aad
std
add
enter
jmp
loopne
mov
lret
mov
mov
mov
sahf
movsl
or
aaa
pop
cmp
addb
out
fildll
pusha
sbb
fidivrs
test
inc
push
xchg
dec
xor
xor
call
aaa
push
push
fucomip
sbb
and
lret
dec
jnp
xor
ficoml
sbb
jb
inc
adc
cmpsb
cmc
dec
cltd
ja
sar
pop
es
out
push
lret
hlt
stos
pop
pop
xchg
mov
xchg
ja
mov
int3
pop
iret
inc
mov
sub
jb
mov
inc
xchg
dec
imul
ss
arpl
sbb
pop
je
pop
out
ficomps
sub
or
hlt
imulb
cmpsb
xlat
pop
call
add
jmp
sub
push
fldt
add
add
add
adc
cld
stos
dec
mov
pop
in
and
rorl
stos
or
in
ljmp
or
adc
lock
test
cmp
inc
cwtl
aas
xor
mov
jb
repz
roll
mov
lret
data16
cmp
sbb
andl
data16
es
shlb
arpl
dec
add
mov
add
fxch
int3
insl
dec
fwait
scas
mov
fnstcw
sub
mov
out
inc
lds
xor
pop
daa
jnp
dec
inc
in
pop
shrb
test
dec
aaa
xchg
jbe
mov
sub
addr16
add
push
or
and
stos
lea
sbb
lods
scas
pop
adc
mov
lea
inc
push
cli
out
aaa
and
scas
shl
cwtl
mov
sub
inc
test
pop
mov
add
add
mov
fnstenv
sub
movsb
insl
add
incl
add
and
mull
jae
les
and
loopne
xlat
fucomi
jmp
imul
jg
jb
jbe
dec
cmpsl
mulb
push
cmp
mov
sti
popa
imul
mov
cmp
pop
enter
imul
mov
outsb
and
inc
pushf
insl
cmp
dec
in
gs
or
sti
mov
shrl
in
push
push
dec
in
xchg
cmp
bound
out
in
sti
push
insb
movsb
popf
das
fnstcw
add
sbb
pop
pop
lret
cs
xor
push
arpl
ja
in
xchg
xchg
mov
lock
sub
cmp
or
bound
fists
test
into
push
mov
mov
loopne
sub
mov
sti
adc
in
lcall
aam
add
cld
je
jbe
jns
sbb
stc
adc
push
add
aad
xor
and
or
jmp
call
inc
jl
inc
sbb
sbb
push
mov
cli
xchg
pusha
int
pop
adc
xor
add
dec
bound
test
mov
in
add
lea
sbb
mov
fcmovne
pop
pop
push
mov
jb
shll
cmp
fistps
or
inc
cmp
jno
icebp
pop
jae
enter
and
negl
fisttpll
sbb
jno
repnz
stc
imul
icebp
mov
cmp
call
xchg
lret
jg
inc
fisttps
outsl
jp
sbb
add
push
mov
push
pop
out
push
sub
andb
and
insl
pop
push
xlat
movsl
shrl
outsl
dec
lahf
cli
testl
loopne
lds
push
idivb
andnps
xchg
add
xor
cmpsb
insb
pop
sbb
loopne,pt
stos
cmp
pop
ret
out
push
inc
rorb
add
push
cltd
jmp
fildl
or
daa
push
aam
add
incl
add
mov
dec
push
fnstsw
xchg
data16
xchg
daa
cmp
iret
test
inc
xchg
mov
ret
dec
adc
sub
iret
lahf
jbe
movsb
push
clc
mov
roll
add
push
inc
adc
push
ret
or
rol
xor
rolb
jle
das
imul
js
mov
xchg
or
icebp
cltd
outsb
aam
pop
cs
and
mov
sub
and
into
mov
inc
rcl
pop
lret
inc
rolb
add
int
shlb
fs
cmp
push
mull
test
mov
pop
pop
rol
test
lret
mov
stos
mov
shrb
xor
jmp
nop
mov
push
mov
jnp
adc
jo
data16
push
cmp
push
push
fimull
mov
lahf
addr16
cmpsb
movsb
cmp
idivl
out
testl
add
push
jg
dec
xchg
dec
aad
je
shrl
add
add
add
fs
lea
out
xchg
mov
cmp
popf
mov
ret
data16
jl
pop
add
dec
sbb
mov
rcll
fists
rolb
xchg
push
cmp
lahf
dec
inc
xchg
xchg
mov
or
inc
aam
ljmp
int3
xor
addl
inc
jne
xchg
lea
movsl
scas
mov
fisttpl
jp
xor
mov
lods
sub
sbb
enter
push
push
leave
mov
dec
xchg
push
mov
pop
jbe
dec
mov
or
pop
adc
xchg
jecxz
rorb
cwtl
push
int3
mov
xchg
jo
aas
mov
push
loopne
mov
inc
adc
sub
int3
loop
mov
cmp
jmp
mov
arpl
push
std
jge
push
push
aaa
push
add
mov
fucomip
push
insb
xor
xlat
jmp
add
incl
add
test
mov
inc
pop
jge
vpmaddwd
mov
jl
sbb
lock
cmp
sub
sub
repz
cli
ljmp
mov
sub
cltd
push
or
pop
arpl
mov
or
data16
fsubrs
addr16
mov
out
rclb
adc
mov
jno
cld
mov
xchg
adc
out
and
fiaddl
fs
movsl
inc
dec
shrl
aas
into
loope
andb
sub
into
shll
sbb
mov
adc
and
pop
cli
loopne
push
sub
scas
inc
mov
cltd
and
mov
adc
push
jmp
addr16
xchg
pushf
jle
push
pop
adc
cmp
lret
xchg
std
into
outsb
jle
inc
or
clc
imul
lods
jb
inc
cmp
dec
inc
std
enter
out
rcrl
inc
addr16
push
add
dec
out
iret
jmp
aas
in
push
dec
push
sub
insb
add
incl
add
jmp
xchg
cwtl
sti
lds
clc
fsubrl
insl
sbb
dec
cmp
data16
movsb
cmc
adc
fisubl
sub
scas
push
cmp
adc
xlat
bound
ss
adc
jge
adcb
rol
mov
xor
cld
jbe
jno
xor
dec
enter
mov
xor
add
push
stos
mov
and
jbe
pop
pop
mov
dec
cmp
adc
loopne
in
in
lea
repz
rolb
daa
add
sub
pop
andb
mov
push
mov
test
lods
fldl
ret
inc
lods
dec
pop
push
loope
cmpsl
or
gs
pop
dec
jg
push
dec
imul
out
lcall
clc
call
js
push
mov
pop
popa
xor
mov
pop
movups
xor
mov
mov
mov
repnz
cmp
cmpsb
push
jnp
std
cmpsb
pop
dec
sub
sub
test
and
insl
add
incl
add
inc
or
cwtl
mov
fiadds
pop
ja
cwtl
pop
and
outsl
outsb
push
xchg
imul
cmp
jg
in
popa
adc
mov
rclb
mov
leave
mov
addps
out
loopne
icebp
sti
imul
mov
xchg
inc
sbb
and
push
mov
inc
cmpsl
rcl
fmull
lods
xchg
icebp
add
push
jle
add
lret
out
imul
das
lock
mov
push
not
test
sbb
push
sub
or
or
pushf
inc
jbe
xor
shlb
loopne
je
xor
ljmp
or
dec
xor
fsubrs
push
sahf
jno
xor
daa
into
xor
jae
ret
mov
xorl
imul
inc
dec
mov
or
dec
dec
add
in
lods
imul
neg
std
sub
dec
test
jo
iret
outsb
add
incl
add
push
jo
add
jne
out
or
insb
dec
xor
sahf
test
rclb
adc
loop
cs
jns
cmp
into
jecxz
iret
loop
mov
shrl
incl
sarb
mov
pop
shrl
in
or
mov
imul
inc
push
loopne
fs
xchg
xchg
jp
sub
or
fcmovu
das
ss
mov
inc
insl
adc
pop
les
mov
xchg
cwtl
in
adcl
jl
add
add
adc
mov
inc
aam
mov
sahf
push
hlt
and
std
inc
pop
nop
mov
inc
js
inc
aaa
call
cmp
cmpb
mov
dec
out
loop
push
mov
rorl
and
xchg
pop
sub
mov
test
pop
jne
movsl
lsl
mov
pop
mov
adc
and
push
subb
in
push
mov
out
mov
mov
incl
add
dec
in
dec
lea
adc
cli
dec
jecxz
push
pop
cmp
add
aam
scas
rcl
dec
xlat
fistpl
es
ret
cmp
push
push
test
out
mov
jbe
push
cmp
pop
mov
pop
sub
sub
pop
and
jg
arpl
rcrl
insb
cmp
lock
jae
cmc
add
jp
xor
stc
cwtl
fistl
mov
inc
or
fadds
mov
adc
mov
pop
test
mov
inc
iret
arpl
fstps
push
push
dec
scas
push
cli
push
in
clc
sub
icebp
inc
adc
adc
shlb
leave
gs
or
push
pop
sub
in
mov
sbb
dec
out
adc
fidivrl
sub
loop
add
adc
dec
or
push
mov
sbb
popa
xchg
fwait
or
inc
fs
pop
add
negl
adc
lcall
out
sbb
lret
jo
add
add
add
cmp
xchg
stos
sbb
in
or
push
fs
jp
dec
sbb
cwtl
ljmp
out
xchg
outsb
movb
dec
ja
int3
xor
mov
xor
out
dec
cmpsb
jnp
xor
dec
jl
hlt
mov
test
cmpsb
pop
sbb
add
loopne
xchg
sarb
xor
lea
fists
mov
out
rol
sbb
sbb
jno
inc
push
popf
xchg
jg
hlt
xchg
add
add
cmp
int3
push
push
data16
in
cmp
sub
mov
ffree
loop
aaa
jecxz
fmull
and
loop
nop
add
xor
xor
aam
test
sbb
mov
jne
xchg
or
cmp
pop
jg
aad
jecxz
jl
test
into
mov
test
out
mov
popf
cmp
std
movb
divl
add
add
sub
ja
mov
xor
int3
jno
add
add
add
adc
jno
xchg
sbb
sbb
jbe
jno
mov
cwtl
sub
inc
and
push
mov
lahf
xchg
insb
push
in
sbb
sbb
fs
sbb
xor
movups
mov
add
rorb
push
outsb
cld
fmul
and
cld
setnp
icebp
xchg
sahf
negb
fidivs
push
pop
dec
mov
mov
add
imul
fwait
imulb
and
fnstcw
testl
les
out
fs
add
loopne
add
push
add
insl
dec
lret
xchg
mov
pop
cmc
and
test
xor
push
push
fdivrl
in
pop
xor
adc
and
mov
icebp
in
lock
push
or
mov
mov
pop
mov
or
cmp
cwtl
insb
bound
add
int
mov
jnp
outsl
cmpsb
loopne
stos
lcall
add
movsb
dec
leave
les
add
je
icebp
fstpl
push
je
sub
adc
stos
xlat
std
pop
mov
pop
jmp
inc
xorl
or
orl
dec
das
fildl
push
mov
jmp
pop
xchg
pop
mov
mov
push
addr16
dec
repz
add
xor
fwait
and
push
in
mov
pushf
adc
cwtl
ret
mov
cld
icebp
leave
movsl
rorl
mov
insl
add
js
xchg
cmp
add
fisttpll
pop
push
xchg
loop
mov
and
repnz
cld
add
notl
mov
pop
dec
mov
rorb
jmp
mov
imul
xchg
xchg
xchg
into
fs
and
sbb
ljmp
addr16
mov
iret
pop
push
in
stos
jb
mov
pop
inc
shr
vcvtsd2usi
sub
dec
inc
es
add
cli
xchg
jle
push
je
mov
jae
add
add
add
ret
shr
arpl
mov
push
mov
push
insl
add
cvtps2pd
ljmp
dec
adc
insb
les
imul
out
jge
mov
iret
orb
leave
jbe
mov
fstpt
sbb
test
insb
sub
cmp
in
bound
mov
sub
movsl
fsubrl
gs
orl
adc
inc
dec
jmp
mov
xchg
push
aad
mov
sbb
inc
in
lods
cmp
outsb
jnp
mov
dec
div
sarb
das
jb
jecxz
ret
add
ffreep
or
leave
mov
fwait
div
in
inc
es
sbb
pop
jno
scas
rcr
scas
xchg
inc
fwait
inc
mov
rolb
pop
sub
push
xchg
dec
jbe
xchg
sbb
popf
js
add
cmp
inc
aaa
dec
fwait
jnp
aad
sbb
sub
add
add
add
adc
rorl
dec
shlb
push
xor
repnz
push
nop
adcl
push
clc
pop
pop
push
pop
mov
sti
add
into
add
jle
das
bswap
sub
xchg
push
js
sub
int
cwtl
cmpsl
mov
xchg
sbb
frstor
loopne
jne
dec
mov
dec
mov
xchg
xor
out
scas
sub
dec
rol
inc
sahf
in
jle
cbtw
fistl
sti
add
imul
xchg
xor
mov
stos
cmp
sbb
aas
sub
icebp
mov
pop
jb
scas
xor
pop
mov
and
adc
mov
jno
jmp
push
and
in
dec
cmp
movsl
addr16
fs
lods
dec
movsl
loopne
or
daa
ds
out
loopne
adc
pop
int
test
add
mov
clc
add
add
std
mov
sub
mov
test
jne
add
add
add
pop
sbb
fsts
mov
jecxz
inc
mov
incl
or
mov
dec
dec
add
ret
sarl
lods
hlt
aam
js
mov
pop
cmc
scas
cmc
imul
add
test
test
jnp
rcr
mov
inc
scas
pop
push
sub
je
rolb
das
pop
cmp
inc
lcall
xchg
movsl
fldt
dec
adc
xchg
adc
mov
inc
pop
popa
pop
test
and
push
push
std
and
dec
test
mov
sbb
lods
hlt
outsb
mov
xor
cmp
stos
push
repnz
fucomi
in
stos
aas
push
insb
mov
nop
mov
sub
mov
rorb
mov
mov
add
dec
dec
adc
decb
dec
inc
cmp
loope
pop
xchg
pop
add
sub
in
xor
mov
adcl
xchg
fisttps
mov
and
jbe
add
add
add
inc
jns
fldenv
int3
push
std
pop
mov
aad
int
fiadds
mov
cmp
not
jne
lret
inc
inc
repz
in
inc
jno
cmpb
mov
push
sti
rorb
stc
sub
mov
jno
pop
movl
push
inc
inc
jb
jne
xchg
insl
adc
pop
out
gs
arpl
mov
xchg
lods
je
xor
sub
xor
int
rolb
aad
jmp
pop
jns
mov
in
jae
stos
xchg
pop
mov
push
sahf
je
pop
dec
ja
in
mov
sbb
push
jns
pop
popa
xor
sub
adc
push
pop
pop
xchg
sbb
and
add
popf
xor
cmp
fstps
jbe
or
subl
lcall
dec
insl
cmp
adc
xor
adc
movsl
fimull
cmp
push
and
add
inc
in
mov
mov
out
sub
sbb
ja
add
add
add
mov
pop
xlat
ljmp
cmpsl
mov
out
xor
add
out
mov
out
repnz
xlat
lea
sarb
or
xor
shll
pop
push
movsb
jmp
outsb
push
mov
data16
aaa
xchg
mov
outsl
pushl
add
sub
lret
adc
out
imul
fsubl
jl
pop
cmp
sti
xor
loope
xchg
inc
cmp
sub
and
xchg
dec
mov
mov
or
stos
xchg
clc
fs
or
pop
pop
xchg
test
jno
jg
vcmpsd
sbb
jp
in
add
imul
jmp
aas
fbstp
in
jb
or
repz
repz
leave
dec
dec
inc
xor
sti
int
movsl
dec
scas
lret
ror
and
mov
add
jns
divl
in
sub
lds
add
add
add
mov
xchg
cmp
mov
mov
ss
iret
fisttps
mov
int3
pop
mov
xor
xchg
pop
mov
int3
or
int
les
or
xchg
xchg
out
sbb
or
cs
sahf
push
jg
add
icebp
or
insb
in
pop
xchg
and
pop
mov
int
aaa
sti
outsb
sahf
adc
adc
add
mov
rcrl
adc
jecxz
pop
xlat
loopne
or
outsb
addr16
mov
mov
dec
pop
test
dec
lock
int3
lahf
and
mov
jl
push
mov
cmp
or
dec
test
and
sub
push
stos
dec
cli
mov
xor
mov
pushf
cmpl
mov
adc
mov
sar
es
xlat
jae
aaa
mov
inc
xor
mov
inc
out
rol
add
fisubs
mov
mov
mov
add
add
add
mov
lcall
mov
sbb
mov
push
pop
xor
movsb
div
adc
outsb
inc
sub
dec
jnp
call
jp
jecxz
test
cs
mov
scas
clc
je
sti
addr16
inc
push
ja
js
jmp
mov
pop
cmp
shrl
sti
fistps
and
movsb
mov
mov
mov
bound
adcb
repz
sbb
insb
add
mov
ja
roll
stos
out
xchg
jae
sub
jp
push
jbe
cmp
jmp
out
outsb
gs
xchg
add
inc
dec
mov
test
scas
pop
stos
mov
hlt
jp
adc
out
clc
lea
je
mov
push
mov
jns
je
cmp
add
imul
add
mov
outsl
jne
ljmp
mov
add
incl
add
iret
cmpsl
pop
fmuls
push
pop
xchg
mov
xor
mov
mov
push
dec
or
inc
arpl
adc
inc
stos
mov
push
jne
mov
mov
ret
mov
and
lcall
mov
jnp
cmp
adc
aas
pusha
into
aaa
insb
nop
hlt
inc
repz
pop
mov
hlt
sbb
cs
push
out
add
sub
cmp
xor
js
xlat
push
stos
hlt
lret
jl
xor
outsl
lret
inc
daa
xchg
lret
loopne
and
aam
jmp
xor
pop
push
into
sarb
fnsave
aad
dec
fimuls
push
mov
push
or
cmp
rcrb
inc
call
cltd
dec
and
xchg
lret
xorl
pop
inc
mov
sub
and
sub
dec
test
push
lods
xor
int
popf
inc
pop
add
testl
xor
jnp
add
add
add
pextrw
aas
adc
fwait
dec
jbe
adc
sahf
fldenv
cmpsl
xor
bound
xchg
sub
outsl
pop
sub
into
adc
insb
cmp
scas
pop
pushf
push
push
xchg
sbb
jno
int
sbb
lds
subl
or
add
push
sub
sbb
jo
out
sub
jno
cs
mov
out
sbb
sbb
pop
stos
xchg
es
jns
pop
incl
xchg
mov
testb
sbbb
repz
dec
add
iret
adc
xchg
icebp
ret
in
adc
inc
pusha
mov
lods
test
adc
int3
int
jecxz
fidivrs
out
pop
add
cltd
xor
mov
pop
in
jecxz
jae
jle
pop
cwtl
sarl
stos
outsl
or
sbb
dec
sahf
and
hlt
shl
in
jp
adc
cmp
aad
jb
sub
mov
add
xor
jo
ja
std
stos
sbb
ljmp
add
incl
add
xchg
out
out
pop
loope
sbb
jmp
mov
out
nop
adc
test
pop
enter
dec
clc
adc
movsl
in
ja
fisttps
in
bound
cmp
sub
lret
adc
mov
xchg
mov
ror
xchg
fcmovnb
cmpb
or
jmp
mov
inc
cmp
popf
testl
lret
add
jmp
dec
test
fmull
lea
addr16
mov
icebp
inc
xchg
sub
xchg
inc
sbb
mov
mov
in
les
dec
pop
negl
adc
sbb
mov
nop
dec
fs
movsb
popa
loope
cwtl
lods
push
sti
loope
push
cltd
sbb
push
lds
lods
sbb
stos
jbe
insb
mov
xchg
mov
mov
aam
idivl
inc
fwait
xchg
repz
jmp
sbb
dec
fadd
test
ljmp
add
add
cmpsb
push
sbb
gs
jge
add
add
add
arpl
or
lea
ret
add
xchg
pop
adc
mov
add
sbb
fnsave
ret
pusha
mov
call
jmp
out
test
xor
sahf
sub
stos
std
xor
scas
push
pop
loopne
fwait
xor
add
iret
xchg
repz
stos
inc
cmp
xchg
iret
sbb
cmc
ds
jl
pop
testl
sti
add
fs
test
fildl
or
in
push
clc
adc
mov
outsl
push
xor
out
inc
xor
xor
cld
and
je
jno
movsb
or
sti
in
idivb
sbb
je
movsb
push
loop
nop
pop
sbb
pop
push
loopne
mov
adc
push
push
pop
jg
cmp
inc
lahf
bound
repnz
mov
leave
jb
dec
xor
add
cmp
cli
mov
mov
jle
add
add
add
rcll
xchg
adc
ret
adc
aad
fadd
and
xor
jne
gs
xchg
into
js
test
xchg
sahf
dec
or
popa
mov
decb
cmp
stos
pop
mov
ljmp
ret
pusha
cmp
cmovp
adc
sbb
mov
ds
std
aad
mov
or
mov
and
adc
std
andb
mov
jl
adc
in
mov
mov
add
cmp
lds
js
and
mov
xlat
insb
sub
shll
arpl
adc
inc
mov
adc
inc
repz
stos
fwait
dec
jle
mov
mov
aaa
mov
cmp
mov
jo
fsubs
push
mov
add
fsubl
inc
stc
movsb
mov
add
test
lcall
int
mov
add
add
pop
enter
xchg
rorb
cli
in
jl
or
lcall
xor
push
in
dec
push
mov
cmp
out
popa
mov
stos
mov
push
add
out
testb
add
xor
xchg
in
xor
push
pop
shl
hlt
jp
loop
std
pop
dec
xor
push
add
jp
mov
in
pushf
sub
movsb
ljmp
loope
cld
jle
jg
or
ja
imul
in
loopne
sub
jle
push
mov
fisubl
repnz
in
and
mov
cmp
aad
xor
fildl
lock
cmp
test
adc
int3
sub
or
jne
enter
pushf
sbb
cmc
es
aaa
fsts
dec
jmp
outsl
out
repz
test
pop
sbb
loope
es
dec
and
ret
fsubs
add
xchg
xchg
jns
jmp
mov
mov
incl
add
xor
mov
popf
leave
or
das
xor
push
cli
mov
std
push
fistpl
cmpsb
dec
add
movsb
jp
pop
jnp
jmp
mov
sub
ja
jge
pop
dec
xor
cwtl
pinsrw
gs
jne
aaa
adc
xlat
jnp
fs
psubsw
mov
push
notl
int
jo
push
test
cs
cmp
sahf
pop
cmpsb
xchg
push
out
xchg
int3
lahf
rclb
cwtl
dec
aas
or
call
cmc
fwait
in
lret
lahf
pop
push
pop
js
inc
div
xchg
pop
call
jmp
pusha
xor
dec
cwtl
subl
fistpl
inc
nop
cmc
sub
add
mov
rcll
and
xchg
dec
mov
in
push
data16
xor
pop
rclb
lcall
xchg
insb
mov
dec
popf
mov
je
jno
test
outsb
dec
xorb
scas
lcall
adc
sbb
mov
addl
add
lret
mov
lds
shlb
and
out
js
jns
jp
push
sub
nop
xchg
loopne
inc
add
call
inc
vshufps
push
jmp
inc
jbe
loopne
lret
pop
inc
jmp
pop
or
scas
out
stos
dec
mov
inc
mov
sbb
pushl
cmp
sub
insl
adc
and
and
cmp
roll
insb
fldenv
das
dec
scas
sbb
and
fs
dec
repnz
aad
xor
dec
out
sbb
add
pop
pusha
sbb
sub
jmp
lret
stos
mov
icebp
and
sbb
mov
sbb
int
repnz
nop
mov
aam
sbb
cmc
dec
int
je
cmp
mov
ss
mov
loopne
xor
jne
test
arpl
sbb
adc
imulb
push
lods
rcrb
add
jl
cs
idiv
jne
iret
fmuls
in
addb
incl
add
in
jmp
into
xchg
mov
ret
jno
test
adc
push
mov
jbe
adc
ret
dec
jge
push
mov
inc
bound
add
pshufw
fisttpl
out
jae
push
sub
mov
mov
es
in
ret
dec
ljmp
clc
loop
sbb
icebp
jnp
sti
test
sub
clc
inc
addr16
xor
sbbb
aaa
sub
mov
cmpsb
adc
xchg
data16
ret
icebp
and
fldl
mov
pop
xchg
or
dec
lret
mov
test
push
aam
add
or
and
std
mov
sub
dec
mov
push
stos
xchg
fadds
push
out
sub
jnp
lcall
xor
jo
movsb
in
dec
xchg
cmpsb
imul
mov
hlt
xchg
push
add
stos
pop
ja
push
jecxz
test
add
pushl
sub
test
add
incl
add
rcr
movl
ljmp
ret
aad
arpl
mov
in
out
subl
rcrl
roll
mov
mov
inc
lahf
mov
pop
inc
pop
popa
mull
xchg
int3
loopne
shll
mov
xchg
test
or
js
mov
dec
icebp
push
imul
jae
dec
int
dec
push
dec
inc
ret
dec
fisttps
ret
push
popf
in
xor
jmp
leave
jl
cwtl
fsubl
add
sbb
jmp
stos
inc
jb
add
lcall
jns
push
push
movsb
pop
pushf
cmp
popf
xchg
hlt
mov
cld
mov
sub
scas
js
fisubrs
mov
xchg
add
js
or
repnz
cmp
sub
xchg
mov
xchg
mov
iret
xchg
fistps
sti
push
frstor
add
and
fdecstp
add
sti
iret
ss
push
jno
out
leave
mov
add
add
out
nop
adc
hlt
sbb
push
rorb
or
mov
imul
xchg
mov
push
arpl
add
lods
sbb
inc
xchg
push
adc
dec
push
sbb
div
push
int
stc
leave
insl
xchg
xlat
psubb
sbb
fisttpl
sbb
push
cmp
dec
stc
fcomps
stc
out
or
xchg
jb
and
dec
adc
xchg
pop
fwait
xchg
cwtl
pop
imul
cmpsl
outsb
xlat
push
mov
xchg
lret
sbb
enter
in
pop
repz
dec
fldenv
push
mov
cmp
fsubl
scas
in
outsl
cmc
dec
pop
int3
xchg
mov
aaa
cmc
xchg
loop
sub
orb
and
jb
sarb
adc
in
pusha
repnz
jecxz
jns
jo
xor
adc
inc
test
lcall
add
add
outsl
xchg
inc
lahf
sti
hlt
out
dec
roll
adc
mov
add
add
xor
aas
mov
lret
hlt
jle
shr
push
shll
std
or
dec
cmp
out
cmp
xchg
je
sub
xchg
pop
push
nop
cmc
loope
cld
clc
sub
adc
pop
add
gs
push
adc
xchg
cmpsl
je
jb
je
lock
hlt
pop
dec
mov
fdivrp
sbb
sub
cmp
mov
mov
repnz
jmp
inc
jle
sub
test
inc
outsl
jp
mov
mov
or
in
aad
xchg
aad
nop
and
adc
fistl
das
hlt
loope
js
mov
test
xchg
pop
xchg
cmc
inc
push
into
mov
loope
jb
cs
xlat
rcrb
pop
xor
mov
les
sub
out
fwait
push
fsubrs
xchg
sbb
pop
in
sub
xchg
loop
cmp
inc
fbstp
fucomp
inc
pop
inc
incb
xrelease
add
mov
mov
mov
xchg
add
add
add
notb
xor
xchg
fstps
xchg
fdivl
int3
mov
repz
fld
mov
jg
jns
jecxz
or
cmpsl
mov
fwait
cmovs
pusha
xor
cmp
int3
dec
cwtl
repz
lret
call
orb
clc
cmpsb
data16
stc
mov
mov
add
rol
cmp
in
fldcw
cmp
shlb
es
cs
aas
rclb
in
cwtl
repz
in
xor
popa
xor
xchg
test
jecxz
sub
pop
inc
xor
and
sahf
rorb
aas
div
xor
cli
mov
dec
pusha
mov
and
cwtl
mov
call
pop
fdivl
push
inc
push
das
jno
scas
iret
scas
sub
inc
jmp
ss
sbbb
sbb
xor
daa
add
mov
dec
fsubp
and
roll
and
out
ljmp
lock
xchg
stos
leave
or
xchg
add
add
add
xchg
sub
out
or
loopne
fildl
fwait
mov
loope
mov
jbe
fwait
ss
mov
enter
lock
jle
subl
outsb
sub
pop
adc
jbe
lock
jecxz
insl
ss
enter
outsb
popf
dec
lret
sbb
adc
push
rol
jmp
js
sub
jns
insb
adc
and
jge
cmp
pop
pmullw
outsl
mov
dec
mov
xchg
in
fwait
cmp
push
lea
jbe
jl,pt
out
adc
xchg
js
fidivl
hlt
lret
jnp
pop
out
lret
pop
cmp
inc
sbb
outsb
jb
pusha
xchg
mov
cld
sbb
jb
adc
pop
xchg
je
movsl
sub
movsl
arpl
push
adc
into
popf
adc
or
mov
fdivp
sub
add
arpl
jnp
sbb
push
xor
mov
add
add
add
mov
and
jns
fwait
cmp
fsubp
ror
test
divl
dec
pop
and
xlat
dec
sbbl
cmp
sub
cmpsl
jl
icebp
out
lcall
xchg
rcrl
add
and
rcr
and
pop
mov
insl
push
inc
cli
add
test
rcr
fwait
jno
enter
mov
sub
scas
push
jo
sahf
fisubrl
mov
mov
cmp
sub
jo
push
loopne
mov
int3
xchg
ja
movsb
fimuls
lds
inc
lahf
lahf
sub
dec
shr
jl
adc
inc
xchg
fistl
jbe
shll
cmp
lods
push
icebp
negl
pop
sbb
outsl
push
jb
movsb
xchg
addr16
mov
test
cltd
std
mov
hlt
es
add
push
aas
or
mov
imul
add
lahf
xor
add
sbb
dec
sarb
jmp
pop
jo
cmp
adcb
jge
shrl
and
cltd
movsl
repnz
addr16
sub
je
int
ds
sub
and
hlt
adc
dec
stos
pop
dec
hlt
cmpsl
xchg
add
inc
dec
fsts
rcrl
inc
and
mov
or
jge
int
ljmp
in
mov
cmpsb
je
push
pop
or
push
and
movsb
adc
mov
insb
jmp
daa
jp
in
sbb
pop
xor
push
rolb
xorl
and
or
icebp
adc
test
inc
or
gs
ja
repz
jle
or
adc
sub
clc
enter
xchg
and
andb
jp
adc
cld
jns
out
push
movsl
mov
inc
enter
jb
stos
pop
lds
jg
mov
add
insb
fidivl
bound
pop
jo
mov
add
add
add
sti
xor
sub
repnz
adc
jne
je
sbb
dec
jp
lods
sub
int3
out
insl
scas
inc
int
aam
in
mov
inc
outsl
sub
push
stos
rcrl
mov
pop
mov
mov
push
xchg
stos
fdivs
enter
dec
cmpsb
dec
imul
movb
insb
xchg
cmp
jb
mov
pop
add
inc
cmp
or
cld
sub
add
mov
or
xchg
adc
aad
inc
mov
stc
arpl
fisubrl
pop
mov
pusha
xchg
scas
cmp
pop
stos
inc
jle
aam
nop
je
xor
push
loopne
push
ja
push
loope
mov
pop
xchg
jg
int3
pop
mov
loope
icebp
jo
push
jecxz
mov
or
inc
mov
xchg
sbb
ficoms
cld
xor
dec
push
test
jge
mov
and
sub
imulb
mov
add
cmp
mov
jns
outsb
mov
add
incl
add
pop
das
cltd
cli
fmul
movsb
or
mov
adc
out
mov
push
testb
mov
pop
jge
sbbb
mov
fmuls
or
je
sbb
push
ds
push
mov
scas
cmpsl
insb
jae
aad
mov
xchg
mov
pop
sbb
xor
std
mov
sub
jnp
sbb
scas
xchg
jecxz
sub
adc
dec
out
dec
pop
test
hlt
shrb
and
inc
or
scas
fidivrs
sbb
sbb
cmovge
push
icebp
js
push
icebp
jb
and
mov
les
test
pusha
mov
in
mov
jl
ret
jae
mov
xchg
lds
or
mov
jno
lahf
movsb
arpl
dec
bnd
and
push
pop
pop
fs
sbb
mov
loopne
jle
add
int
fstp
iret
push
cmpsb
fadd
dec
mov
mov
add
add
add
pop
stos
sbb
cmp
pop
arpl
xchg
push
dec
cmp
rcl
inc
sbb
dec
aad
mov
xchg
add
stos
cmp
sbb
sub
cmp
sbb
mulb
xor
mov
pop
fnstenv
push
stos
stos
arpl
bound
in
mov
adc
jnp
pop
popa
inc
inc
out
aaa
nop
cmpsl
fistps
stos
rol
inc
pushf
les
sbb
pop
stos
cmpsb
pushf
daa
lret
out
pcmpgtw
or
addb
addb
aas
xor
mov
dec
inc
outsb
sbb
enter
icebp
sub
dec
add
push
stos
dec
nop
in
movsl
icebp
fsubs
rcrb
jg
clc
insl
lahf
jg
add
jge
daa
push
cmp
pop
mov
dec
rcrl
jmp
repz
gs
jmp
enter
add
ficoms
lahf
and
scas
std
out
ljmp
mov
add
incl
add
fdivrs
fiaddl
fcomps
jnp
push
mov
pop
movsl
popf
mov
stos
sbb
push
fdivrl
push
sub
adc
fbstp
imulb
cmp
movhps
jl
ja
push
data16
cmp
scas
das
mov
test
sub
ret
add
insb
push
and
rcl
fcoms
out
iret
int
dec
mov
daa
dec
sub
or
jbe
mov
push
mov
not
fstl
les
shrb
data16
divl
xor
das
divl
cmp
cmp
mov
inc
dec
sub
sub
jo
cmpsb
ficoml
cwtl
xchg
add
frstor
sub
sbb
gs
jmp
fisttpll
aas
cwtl
mov
mov
xor
daa
subb
add
add
mov
icebp
push
ss
scas
mov
add
add
add
imul
call
and
xchg
mov
push
jmp
daa
in
les
xchg
pop
jne
lods
mov
mov
mov
cmp
jmp
scas
call
adc
jmp
sbb
mov
xchg
icebp
hlt
mov
mov
xchg
dec
mov
or
imul
inc
mov
insl
jno
mov
call
pop
add
cmp
jae
push
sbb
mov
aad
push
lret
or
add
test
mov
shrb
mov
fistl
pop
loopne
sub
mov
adc
test
push
push
jp
xor
inc
xor
push
cld
sbb
aaa
add
jnp
dec
daa
cwtl
mov
pop
testl
dec
sti
add
inc
stos
inc
cmpsb
cmpsl
test
adc
rorb
jo
add
lret
adc
xchg
inc
mov
add
les
fcomps
add
mov
scas
popl
add
add
add
leave
inc
stos
mov
loopne
mov
into
sub
int
pusha
pop
repz
xor
lds
aaa
inc
lret
outsb
push
dec
imul
outsl
ror
lea
popf
sbb
ss
aaa
imul
mov
lods
call
xorb
js
dec
ret
fmul
idivb
adc
mov
leave
sarb
adc
and
addb
int3
sahf
outsb
sbb
std
lahf
std
addr16
xchg
sub
dec
mov
adc
aaa
xlat
or
test
xchg
add
adc
jmp
or
cmp
push
sub
sbb
cmp
imul
cmp
xchg
stos
rolb
or
sub
aaa
out
add
gs
mov
mov
int3
sti
out
ret
adc
adc
daa
inc
inc
sbb
push
jle
push
mov
jne
adc
push
push
push
outsb
add
ljmp
dec
mov
xorl
incl
add
clc
pop
movsl
push
mov
pop
mov
subl
xchg
mov
sub
mov
xchg
cmpsl
cmpsl
and
out
and
push
lods
add
in
or
adc
mov
push
xor
add
push
insb
les
loopne
push
sbb
mov
mov
ja
loope
push
repnz
cmp
ficoml
ja
dec
dec
jae
cmc
inc
std
insl
xchg
jl
and
sub
add
fdivl
lret
insl
mov
pop
arpl
xchg
gs
out
xchg
insb
mov
adc
mov
pop
xchg
add
arpl
lret
imul
sub
dec
call
dec
movsl
lds
data16
cmpsl
int3
idivl
ret
dec
cmpsb
jg
popa
pop
stos
data16
and
dec
or
jmp
jnp
daa
and
jb
int
cli
add
aaa
shlb
cmc
div
testl
push
lods
xchg
add
incl
add
mov
sub
xchg
and
xor
orl
imul
bswap
xchg
aas
adc
adc
and
test
mov
in
cld
shr
pslld
dec
pop
ja
sbb
clc
jp
jae
sbb
xchg
movl
mov
pushl
arpl
jb
jge
fwait
shll
roll
fldenv
sub
movb
stc
dec
xchg
xchg
ret
mov
sub
xor
rcr
lret
sbb
pop
jge
mov
inc
std
repnz
xchg
jae
daa
push
repz
inc
lock
mov
inc
jmp
cld
xchg
mov
push
out
ret
out
adc
pop
out
or
or
fucomi
icebp
xchg
pop
and
repz
outsb
add
push
push
push
pop
fisubrl
scas
adcl
imul
push
sub
fdivs
imul
popa
add
mov
cmp
pop
push
nop
push
sahf
rcr
pop
adcb
dec
out
insl
mov
xchg
add
incl
add
addr16
or
push
arpl
jae
test
add
mov
aam
dec
pop
mov
aas
pop
stc
sbb
leave
inc
jmp
sub
lret
sar
ljmp
inc
push
pushf
push
and
je
enter
mov
sub
sub
mov
cmp
push
int3
stos
decl
lret
imul
sti
rorb
push
sbb
in
push
adcl
pop
enter
xchg
dec
sbb
adc
cld
inc
mov
sahf
popa
adc
pop
cmp
sub
stos
lret
jno
lahf
arpl
inc
mov
xor
rclb
movsb
cs
and
pushf
and
negb
pop
loope
sub
push
arpl
ljmp
push
inc
in
jno
xor
stc
into
mov
pop
mov
enter
adc
jecxz
ja
mov
jns
mov
add
arpl
cmpsb
jcxz
fimull
stos
xchg
add
incl
add
jns
or
cs
rcl
dec
pop
shrl
xchg
cwtl
or
cli
inc
stos
mov
or
out
and
ret
push
scas
dec
dec
mov
xor
das
out
popa
daa
mov
rcll
out
inc
jnp
imul
incl
mov
std
test
pop
ljmp
pop
mov
dec
mov
pop
add
inc
aad
shrl
aad
sub
xchg
push
pop
lods
mov
mov
sahf
mov
mov
pop
aaa
shl
in
roll
xchg
in
out
and
mov
lods
mov
and
add
mov
push
cmp
xchg
pop
lock
mov
adc
push
lcall
inc
inc
andl
in
nop
icebp
jne
add
mov
push
inc
pop
call
push
sbb
test
push
jp
movsl
mov
cmp
add
clc
jnp
jg
in
cli
enter
das
in
test
add
add
jno
dec
ljmp
add
js
pop
lods
mov
pop
dec
hlt
out
fwait
out
das
inc
sti
mov
aad
int3
xor
stos
inc
fsubs
ljmp
cmp
ljmp
insb
shrb
cmp
pushf
mov
inc
mov
mov
test
stc
and
loop
and
cmc
ret
dec
test
loop
inc
push
mov
dec
mov
sbb
and
imul
cmp
arpl
scas
cld
add
ss
icebp
pop
sbbl
dec
nop
xor
mov
cmp
push
adc
rcl
xchg
sbb
xchg
push
outsl
mov
std
jle
pop
pop
cs
lods
push
imul
mov
push
or
dec
repz
in
add
add
addr16
fimuls
push
add
sbb
add
lods
faddl
fbstp
cld
gs
mov
test
add
incl
add
or
iret
int3
push
xchg
pop
mov
int
mov
dec
std
pop
mov
iret
dec
scas
lret
iret
rorl
cmp
add
adc
stc
mov
pop
or
pop
xchg
in
fildl
out
cs
jae
imul
sbb
and
fistl
pop
mov
hlt
loopne
mov
mov
or
out
je
mov
jecxz
xchg
rcll
jae
push
adc
mov
sbb
mov
pop
and
xor
mov
les
movsb
call
xchg
les
test
dec
fmull
shr
cld
jg
insb
fs
add
mov
sbb
adc
test
jo
xor
cmovl
pop
and
jb
data16
xor
add
inc
pop
mov
out
xchg
xlat
sbb
scas
loop
imul
fnsave
sbb
mov
jge
add
jl
sar
std
jle
pop
popf
scas
add
xchg
add
incl
add
sbbb
dec
xchg
mov
es
testl
cmp
shl
mov
and
fisubl
jae
sub
dec
scas
jo
or
les
stc
sbb
fsubs
mov
mov
sbb
push
idiv
xor
push
aas
rorb
idivb
cli
dec
inc
sub
cltd
mov
inc
add
testl
jge
sbb
lcall
mov
push
stos
insb
or
add
std
ljmp
fs
insb
in
sub
and
xor
push
stc
pop
movsb
in
push
or
xchg
loopne
aas
sbb
inc
sti
adc
mov
xor
xchg
jp
aad
mov
sbb
dec
jle
or
mov
jno
inc
dec
addr16
pop
mov
sbb
movb
cmp
jnp
shlb
add
cwtl
or
stos
xchg
cmp
in
xlat
scas
xor
incl
add
dec
mov
push
in
out
cmp
das
stc
cld
sub
push
ljmp
adc
aad
xchg
jl
stc
push
mov
inc
lods
movsb
popa
fdivrs
lret
pop
push
xor
jne
mov
movsl
and
dec
daa
addl
rcl
pop
jl
pop
test
cwtl
pusha
imul
mov
push
sbb
out
push
cltd
lods
test
push
inc
jecxz
or
in
das
cmp
mov
inc
jmp
dec
les
je
jnp
add
pop
imul
cli
mov
mov
jle
adc
pushf
aam
jne
push
mov
sti
pusha
addr16
gs
xor
add
lods
outsb
push
popf
xchg
xchg
sti
jmp
addl
xlat
lds
hlt
insb
fldl
loopne
pop
sub
cmpb
gs
cmpl
mov
add
outsl
sti
mov
mov
mov
adc
cwtl
add
incl
add
adc
mov
push
inc
mov
mov
je
cmc
lahf
js
enter
cwtl
mov
push
dec
mov
lahf
sbb
inc
pop
push
mov
inc
lahf
push
jp
dec
dec
and
outsb
pushf
out
test
mov
add
and
cmpsl
mov
popa
loop
test
rorl
das
lret
aas
imul
out
jne
mov
fldl
sbb
mov
int
pop
mov
decl
leave
xchg
and
push
dec
sbb
cmpsl
pop
shll
cmp
inc
cmp
sub
sub
dec
sbb
add
sub
leave
jae
shll
pop
out
hlt
xchg
fmull
cmp
mov
arpl
in
rcrb
in
add
sbb
idiv
dec
mov
mov
jbe
test
jmp
aas
test
mov
insb
add
mov
add
add
dec
std
out
xlat
aas
dec
sbb
or
movsb
cltd
add
incl
add
clc
mull
and
push
arpl
push
or
gs
adc
lock
orb
in
xchg
dec
sbbl
imul
sarb
in
mov
cli
dec
fs
fs
jecxz
mov
cmpsb
dec
repnz
pop
mov
iret
add
andl
stc
aam
lahf
int3
mov
pop
sbb
aaa
dec
sbb
ds
jecxz
xchg
leave
pop
dec
aas
negl
push
enter
push
cld
cmpsb
cmp
movsl
push
out
sub
cmp
lock
icebp
xchg
pop
movsb
inc
or
cltd
xchg
pop
xchg
sahf
or
fcmovb
loope
cwtl
cmp
mov
adc
push
cmp
call
gs
bound
arpl
icebp
aaa
outsl
fisubrs
pop
or
mov
mov
mov
xor
cmp
leave
scas
arpl
adc
stos
xchg
sbb
imul
outsl
vmwrite
mov
incl
add
adc
push
je
or
imulb
fisubs
imull
pop
dec
loope
int3
sbb
cmpsl
fnstenv
je
stos
bound
xlat
xor
in
inc
mov
or
adc
bound
nop
xchg
mov
pop
add
ljmp
sbb
jl
or
pop
add
stos
popf
pop
mov
dec
fstpt
dec
cmpsl
insb
fs
push
icebp
add
cltd
xor
inc
rclb
lock
nop
push
xchg
test
aad
and
mov
mov
xchg
stos
ljmp
inc
sub
daa
or
mov
aad
pop
hlt
movsl
es
mov
xor
pop
or
not
adc
push
cmp
cmp
ret
lret
jae
icebp
lods
jg
mov
insl
sbb
sub
cltd
jo
jge
mov
xor
jno
and
pop
push
rolb
add
add
lret
sbbl
popl
sti
inc
mov
add
add
loope
and
das
pop
notb
test
jecxz
ds
jp
dec
faddl
push
pop
jae
xor
mov
sti
and
ljmp
dec
ret
lods
ds
push
xchg
mov
adc
mov
rorb
pop
mov
xchg
mov
pop
divl
cmpsl
or
fidivrl
pop
aam
adc
rcl
enter
mov
addb
in
xchg
mov
test
pop
sub
or
mulb
shll
rorb
data16
arpl
adc
pop
outsb
mov
stc
insl
dec
xchg
out
fucomi
push
outsl
or
and
sbb
aaa
insb
faddl
or
jecxz
lock
js
and
xchg
jmp
imul
mov
hlt
xor
xchg
aad
loope
xchg
js
mov
gs
push
mov
in
divl
lcall
pop
insl
adc
or
add
imul
movsb
and
xchg
cmp
mov
add
add
nop
lcall
lock
xchg
das
xchg
enter
cmc
jo
cmp
jnp
outsl
pop
push
data16
mov
xchg
cmc
in
outsl
or
jg
jp
shrb
fbstp
xor
sbb
movsb
adc
jmp
popa
clc
rol
xor
jg
aad
addb
inc
xchg
push
lret
mov
push
adc
loopne
cmp
jecxz
sarb
mov
or
push
popl
mov
mov
jge
movsl
into
dec
test
inc
and
xchg
jae
lods
xor
mov
inc
out
pop
aaa
xor
loope
adc
lret
call
cmp
push
push
mov
push
push
push
rol
jmp
enter
or
jbe
subb
sti
into
xchg
xchg
fildll
sub
mov
fldcw
or
xor
jbe
mov
jge
jg
ljmp
in
lahf
mov
and
mov
add
add
and
inc
fiaddl
push
mov
push
dec
shrl
fdivl
fsubr
add
cmc
dec
and
push
adc
fwait
in
pop
icebp
adc
mov
mov
jns
add
or
dec
dec
insl
leave
roll
inc
mov
lea
sub
push
stc
in
xchg
repz
movb
icebp
dec
call
xor
les
cli
pop
add
push
fstpl
sahf
mov
mov
mov
stc
xchg
mov
lods
xchg
stc
pop
xlat
inc
jno
ficoml
lret
jb
lahf
push
xchg
mov
mov
pushf
cmc
call
mov
aas
cli
pushf
and
or
andb
xor
jns
sbb
inc
sub
dec
and
faddp
loop
jae
dec
aaa
cmpsb
xchg
xchg
das
push
mov
arpl
fcoms
mov
jns
aaa
adc
cltd
sub
out
inc
sub
or
mov
lahf
sahf
add
incl
add
mov
jne
ja
dec
pop
cld
fldt
daa
sbb
insb
sbb
hlt
int3
push
je
mov
mov
sub
or
fimull
xchg
push
popf
add
pop
scas
arpl
add
push
aaa
and
out
mov
push
jle
pop
pushf
fstpl
aaa
push
ja
xchg
ss
jnp
sub
xchg
fwait
lcall
pop
push
mov
sbb
and
sub
mul
into
push
push
jle
fidivl
clc
xchg
fwait
jge
jmp
pop
sbb
pop
dec
add
addr16
jp
icebp
sbb
push
mov
sub
std
hlt
addb
cmpsl
dec
das
push
adc
pop
lcall
mov
jae
and
push
gs
push
imul
mov
fsubrl
jmp
adc
rcr
in
jecxz
mov
cltd
ljmp
or
inc
loope
sbb
cmpsb
or
add
pusha
test
mov
cld
mov
sahf
lahf
add
incl
add
pusha
fpatan
xchg
push
cmp
pop
xchg
shlb
push
dec
imul
jns
ret
xor
bound
pop
sbb
xchg
stos
sub
aas
sbbl
lods
mov
adc
jge
add
popa
add
movb
loopne
ds
push
scas
insb
sbbb
popf
cmpsb
int
test
das
or
cmp
mov
jg
cmp
sub
popf
lods
push
sub
mov
imul
push
mov
mov
mov
aad
dec
or
inc
bound
imul
sub
pop
push
cmp
xor
sbb
cmpsl
sbb
and
dec
repz
mov
adcb
push
mov
arpl
jmp
movsl
push
cld
sub
nop
mov
xchg
mov
sbb
mov
or
lcall
mul
sbb
add
add
xor
movsl
jmp
mov
xor
pop
jne
lea
popf
xchg
mov
cs
cmpsb
mov
std
data16
test
test
xchg
or
jl
xchg
adc
pop
sarl
stos
int3
push
loope
mov
mov
add
into
fstps
ret
sbb
sub
jl
or
sub
mov
pop
cltd
ficompl
arpl
xchg
pop
and
adc
jns
aaa
fsubrs
add
jmp
add
hlt
push
jp
jecxz
daa
subl
ljmp
jbe
or
or
fiadds
sahf
xchg
sbb
mov
xchg
mov
or
clc
pop
out
bound
jecxz
mov
adc
mov
jbe
jae
inc
cmp
loope
lock
rol
mov
pop
add
mov
inc
inc
add
mov
add
and
cmc
rcrb
xorl
push
imul
fs
adc
adc
icebp
sub
adc
and
gs
imulb
mov
hlt
daa
sub
loop
inc
out
sub
testb
lock
mov
insb
dec
sbb
mov
js
orl
movsl
or
and
lods
xor
xor
pop
cmp
mov
adc
xchg
push
push
adcl
pop
xor
cltd
jmp
ljmp
iret
adc
mov
aas
nop
lahf
xor
fsubl
mov
popf
in
cmp
pop
addr16
push
push
cmp
sbb
pusha
lahf
cmp
icebp
dec
lret
add
jne
jb
push
lahf
mov
rorl
add
sub
cltd
sbb
push
dec
sti
pop
inc
cmpsl
or
scas
insb
and
add
add
std
inc
mov
sub
fwait
mov
add
sub
dec
call
and
ret
rcll
nop
insl
stos
and
aaa
mov
bound
je
inc
js
add
jbe
dec
add
sub
loope
iret
cmp
insl
mov
rclb
adc
lds
inc
jmp
test
loope
pop
or
sbb
shll
jb
mov
mov
stos
cmpsl
mov
pushf
imul
adc
ljmp
cmc
adcl
cmpsb
loope
adc
mov
jo
cltd
pop
shlb
inc
jbe
push
push
imul
fld
repz
gs
sti
sbb
mov
inc
fldcw
mov
sahf
sub
or
or
sub
xor
jl
leave
call
sbb
xlat
sbb
pop
sbb
push
icebp
mov
es
test
add
add
inc
fdivl
push
dec
mov
lcall
add
imul
mov
mov
fcomp
inc
dec
or
sub
ljmp
mov
lods
xchg
jge
aam
fiaddl
mov
mov
pop
fdivl
sahf
pop
sbb
add
test
mov
les
call
pop
out
and
in
fldl
addb
push
sti
rorb
add
or
and
xchg
rcrl
push
adc
int3
add
test
sahf
daa
mov
or
test
lea
movsl
adc
je
roll
jmp
or
xchg
int3
jbe
data16
mov
ficomps
cmpsl
xchg
cmp
sbb
ljmp
lea
stos
push
add
and
nop
xchg
mov
mov
mov
push
cld
pusha
jecxz
xor
add
sbb
mov
sbb
movsb
add
incl
add
and
inc
clc
shll
mov
mov
lds
clc
jl
pop
jecxz
xor
sbb
mov
jne
mov
int
call
mov
repz
popf
rcrb
in
pop
inc
sub
loopne
xchg
jmp
out
scas
pop
call
sbb
loop
or
call
lock
inc
jp
mov
in
not
das
test
dec
stos
setg
mov
cmovns
sahf
stos
pop
pop
or
xchg
push
cli
stos
call
pop
lods
mov
cltd
in
sbb
out
or
adcl
scas
and
jbe
pop
jns
xchg
dec
daa
push
imul
sub
pop
jb
movsl
mov
cld
jecxz
adcl
xor
int
push
js
pop
insb
arpl
pop
test
stos
hlt
jmp
cmp
jbe
pop
or
hlt
cwtl
movsl
add
incl
add
jl
push
ljmp
or
jno
sti
xchg
adc
push
fcoml
pop
sti
test
insl
bound
out
fildll
ja
mov
sub
push
adc
cld
pop
rcrl
or
lahf
adc
and
mov
mov
int
aad
or
out
cmp
add
es
ljmp
adcl
sti
icebp
call
and
dec
cli
arpl
pusha
pop
adc
jbe
movsl
aam
mov
push
aaa
pop
pop
lea
test
aaa
adc
fistl
and
xor
out
dec
dec
iret
pop
orl
addr16
lods
cmpxchg
mov
test
mov
jb
sbb
push
aam
shrb
daa
ret
cmc
fsts
cltd
mov
mov
repz
sub
ljmp
jo
rol
shl
mov
add
push
nop
out
xlat
out
jg
in
xor
fsts
xchg
movsb
xchg
cmpsb
add
incl
add
sub
movsb
pop
fimull
dec
pop
lods
sub
pop
js
les
cmp
or
mov
adc
cmp
sbb
dec
fs
sub
popa
movsl
jno
push
push
test
mov
mov
mov
test
andl
cli
subl
mov
lea
xchg
sarl
sbb
jecxz
and
ljmp
jns
mov
xchg
xchg
jne
jbe
jbe
sbb
push
scas
cltd
dec
arpl
je
int3
push
jge
pop
hlt
jp
inc
sub
sbb
jg
dec
mov
testb
xorb
shlb
jp
shl
and
fnstsw
jbe
fstp
dec
movsl
test
movsb
imul
jmp
je
in
or
mov
shrl
xchg
mov
jp
lea
jns
in
cmp
push
fcom
fwait
lea
jle
ret
sub
sbb
pop
fbstp
fldl2e
xor
xchg
cmpsl
add
incl
add
cmpsl
scas
pop
mov
int
mov
call
sbb
adc
das
jo
mov
cmp
out
pop
push
loop
cmp
jg
lods
and
push
pop
mov
out
repnz
pop
and
out
push
cmp
dec
popf
jecxz
dec
push
pop
mov
ss
sub
mov
lods
icebp
mov
mov
lret
js
jmp
scas
pop
mov
dec
sti
xor
out
mov
or
andl
repnz
and
inc
insb
clc
ss
pop
out
scas
mov
jecxz
sbb
or
xor
pop
bound
xchg
cs
and
jo
push
and
lret
ja
icebp
inc
in
cmp
jns
repz
fs
aam
pop
out
fcom
movsl
data16
xchg
out
push
cmp
and
arpl
add
mov
fadds
xchg
test
add
add
add
sbb
decl
lret
cltd
cmc
mov
pop
ror
int3
push
mov
adc
sub
out
cwtl
and
cmc
std
push
jmp
push
mov
shll
insb
dec
push
push
and
fmull
and
mov
mov
cmp
pop
popf
mov
jb
sti
lret
mov
jmp
mov
aad
cmc
pop
jecxz
dec
push
lods
and
pop
repnz
mov
subl
dec
mov
mov
xor
pop
dec
jno
ljmp
out
mov
xchg
sbb
pusha
mov
les
fdivr
adc
dec
cmp
outsl
add
mov
adc
xlat
sbb
sub
mov
negb
push
mov
jo
test
xchg
pop
pop
aad
xor
aas
imul
sub
jnp
dec
pop
add
mov
push
sti
jmp
push
mov
notb
ja
xchg
test
add
das
inc
jae
sub
mov
movsb
pop
and
in
jge
xor
int
popa
cmpsl
pop
fisttpll
testl
stos
fiadds
sub
cmc
mov
sbb
cs
dec
sub
fsubs
push
int3
mov
fidivs
push
add
int
cmp
xchg
fwait
icebp
movsb
popf
sub
xor
pop
out
lret
sbb
lret
push
fs
hlt
addr16
mov
inc
push
xchg
inc
repz
imul
stos
adc
repnz
fwait
sub
loope
pop
push
mov
sub
jg
xor
dec
cmc
icebp
mov
in
push
iret
sub
pop
xchg
je
movsl
inc
ljmp
mov
enter
dec
ret
mov
pop
pop
xor
fmuls
xchg
adc
inc
adc
or
jb
push
cmpsl
movsl
add
dec
jne
inc
add
add
jecxz
lock
int
xchg
stos
add
incl
add
dec
cvtdq2ps
sahf
sbb
negl
fisubs
in
cmp
std
rorb
sub
out
push
in
dec
jo
mov
cmp
div
jns
adc
mov
xor
or
aaa
mov
push
cmp
mov
sbb
subb
jp
add
push
mov
jnp
js
push
push
push
cmp
push
dec
mov
lods
sbb
cmp
adc
and
push
push
popa
cltd
ljmp
jl
or
inc
cltd
mov
outsl
pop
je
jo
xor
loope
lods
out
or
cltd
jne
gs
pushf
push
adc
xchg
arpl
push
inc
mov
xor
fidivrs
dec
inc
dec
sub
imul
sub
popf
xor
insl
push
mov
jmp
nop
ret
sub
mov
mov
add
add
cld
mov
leave
jo
inc
addr16
stos
add
incl
add
fsts
push
or
cmpsb
dec
adc
jae
jle
ret
dec
leave
enter
icebp
jle
imul
fisubs
xor
mov
les
pop
pop
mov
cmp
sbb
lock
pop
mov
fiaddl
arpl
dec
add
sbb
jl
pop
dec
and
loopne
xor
dec
les
inc
jmp
sub
mov
mov
cltd
in
inc
outsl
cmp
imul
adc
sub
jge
fistps
lods
stos
mov
fs
fnstcw
push
dec
cld
roll
pop
adc
int3
out
pop
lods
enter
loope
push
add
dec
rclb
pop
push
dec
ffree
cld
dec
and
fiadds
or
cmpsl
testb
lahf
adc
push
ds
or
sbb
push
push
repz
insb
xchg
sub
add
out
cmc
mov
fs
push
pop
xchg
lods
add
incl
add
adc
pop
sbb
pusha
mov
xor
sub
cmp
jae
pop
adc
stos
lret
mov
or
cs
xor
mov
mov
lret
cmp
pusha
add
lahf
push
sub
aaa
gs
jecxz
xchg
jle
or
cltd
jmp
or
imul
pop
iret
loope
out
xchg
andl
repnz
aas
add
cmpsl
sbb
lcall
lret
push
sbb
sub
or
outsl
cmp
mov
fnstsw
pop
xchg
adc
push
pusha
lds
xor
mov
ja
stos
cld
std
pushf
sti
add
in
sbb
adc
ljmp
nop
pop
push
mov
imull
sub
inc
mov
ss
out
mov
ret
or
shrb
sub
and
int3
movsb
cmp
mov
fucomip
std
dec
std
pop
lcall
xchg
pop
push
mov
mov
add
add
add
cmp
sub
je
adc
lods
popf
sub
mov
sbbb
aaa
jne
rclb
xchg
push
imul
fwait
pop
or
pusha
cmp
mov
hlt
lea
push
addr16
pop
inc
xor
pusha
jl
sub
es
mov
and
cmp
xchg
call
cmp
jae
std
xchg
sub
xor
lods
mov
lret
imulb
mov
rolb
mov
nop
or
in
xor
movsb
mov
and
mov
sti
cmp
fidivl
sbb
hlt
xchg
ret
xchg
imul
sub
lds
jb
in
icebp
mov
sub
dec
test
push
xor
inc
inc
pop
mov
adc
jno
sar
sbbb
icebp
and
ja
push
xchg
sbbb
push
data16
scas
mov
or
xchg
roll
add
fidivs
loop
ljmp
mov
popa
rorb
add
add
lret
cwtl
js
mov
cld
and
mov
cmp
mov
lods
cli
and
insl
push
mov
or
push
push
notl
and
inc
adc
dec
jns,pn
scas
mov
mov
repz
std
cld
mov
push
stos
mov
jns
dec
shlb
lods
scas
pop
sbb
ds
or
adc
mov
cli
cld
jge
aas
orb
std
push
sub
cmp
sbb
push
mov
sbb
lahf
sub
dec
ds
mov
xor
lret
cmp
mov
and
test
sbb
pop
mov
sbbb
jae
cli
push
cwtl
jae
jns
inc
int3
test
push
add
xchg
stos
xchg
dec
jecxz
nop
mov
mov
es
addr16
jg
push
out
cmp
aaa
sarb
in
mov
loopne
ret
fdivl
mov
lret
aaa
filds
push
xchg
jg
jmp
std
mov
daa
mov
scas
add
incl
add
cwtl
push
aas
enter
mov
xor
addr16
dec
insl
pop
lds
mov
in
mov
iret
iret
hlt
or
cli
mov
lret
outsb
pop
jge
xor
stos
xchg
call
and
jmp
xchg
outsb
mov
inc
and
push
add
cmc
sub
test
mov
mov
mov
push
stos
mov
faddl
data16
xchg
jl
subb
rorl
mov
pop
jne
pop
sbb
xlat
insb
movsb
fst
sbbb
frstor
add
imul
xorb
je
xchg
and
or
fcomi
jne
cli
xor
in
mov
sbb
fs
popa
lea
shlb
xchg
cwtl
mov
imul
and
test
loop
xor
push
dec
mov
outsb
lea
fldenv
sahf
pop
add
xor
inc
mov
decl
mov
add
add
add
jecxz
dec
sar
arpl
fmull
rorb
xchg
pop
fs
repz
jge
or
loop
lea
sti
pop
jne
sbb
pop
or
inc
lods
sahf
test
mov
push
call
mov
fistpll
mov
sahf
pop
js
dec
or
cs
stc
fsubl
add
scas
cmp
fimuls
push
sub
mov
mov
or
pushw
cmc
adc
leave
cld
ja
xchg
loop
and
int
cld
adc
loop
mov
push
xor
and
cmp
jno
js
aas
iret
sar
je
clc
cwtl
or
lds
in
js
orb
lcall
pop
mov
adc
enter
xlat
lea
inc
sbb
int3
ds
mov
daa
in
arpl
lret
in
jg
fisubrs
push
cmp
daa
fldl
ljmp
sbb
push
pop
xor
cmp
inc
call
ja
mov
add
add
add
cmp
lahf
push
mov
cmpsl
movsl
cltd
addb
fsubr
inc
xlat
adc
les
xchg
fsubr
xchg
scas
dec
pushl
ds
sbb
and
ss
xchg
addb
int3
mov
or
rolb
xchg
xor
out
pop
xor
inc
imul
mov
mov
cmp
xorl
pop
xchg
mov
xchg
pop
mov
adc
iret
push
data16
mov
mov
xchg
jl
adc
das
stc
mov
lods
sub
cltd
stos
add
movl
aad
fwait
push
fildl
adcb
sbbb
mov
push
adc
push
mov
test
mov
fstp
in
test
movsl
aaa
jae
jmp
adc
push
orl
and
add
es
les
mov
arpl
jnp
mov
add
iret
xchg
mov
movl
stc
or
pop
dec
mov
js
mov
sbb
aas
push
dec
xchg
sti
movsl
ljmp
and
cmp
insb
pop
into
pop
pusha
fidivl
ss
mov
leave
js
movb
mov
divb
orb
push
lcall
mov
out
mov
cltd
out
stc
popf
sbb
inc
into
push
xor
mov
inc
jmp
das
int3
adc
fists
push
or
mov
test
mov
imul
xchg
inc
outsl
add
push
and
cld
or
sbb
mov
xor
mov
push
popa
mov
cmc
in
xchg
test
imul
sbb
pop
popf
sub
not
inc
dec
outsl
push
mov
push
push
adc
jbe
dec
or
pop
stc
out
push
pop
bound
mov
incl
add
mov
push
and
sahf
into
mov
loopne
rorb
sub
jns
test
dec
jnp
pop
xchg
and
fsubs
mov
push
incb
add
sahf
push
aam
pusha
jb
in
sub
js
add
fildll
push
call
pop
fidivl
mov
cltd
js
lret
sub
stos
sahf
dec
clc
inc
gs
psrad
in
jns
and
and
xchg
adc
mov
xchg
scas
cltd
sbb
sub
es
push
arpl
cmp
or
mov
cld
repnz
notl
inc
js
sbb
aas
lds
lods
dec
aaa
pop
jle
into
push
hlt
fidivs
adc
jns
shlb
les
cltd
test
in
dec
fidivl
adc
inc
out
cs
adc
add
lds
cli
lcall
push
mov
add
lods
fistpl
in
jae
or
test
xor
fistpl
jg
adc
mov
pushf
push
std
or
gs
dec
aam
jae
and
cltd
iret
push
dec
fdiv
inc
test
imul
out
outsb
test
or
add
jnp
sub
and
mov
mov
xchg
sub
roll
fldcw
ljmp
stos
add
ds
leave
inc
jne
pop
inc
enter
sbbl
or
aam
sub
in
popa
cmpsl
inc
ret
shll
pushf
mov
lods
or
add
cvtps2pd
xchg
mov
cmp
push
aam
jp
pop
dec
xchg
or
or
lds
in
nop
xchg
mov
jne
cmp
outsl
lcall
imul
jmp
sub
adc
xorl
insb
lret
scas
mov
add
imul
in
ret
cmp
or
push
pop
fists
rcrb
out
into
dec
nop
in
add
sbb
mov
xchg
testb
pop
das
push
sub
addb
jnp
lret
jae
mov
shll
popf
mov
pmaxsw
mov
mov
push
mov
shlb
data16
xor
cmp
jbe
jbe
pop
int
or
cmp
loop
sbb
xchg
sbb
jle
aas
outsl
xchg
pop
mov
xchg
push
cmp
inc
int
xchg
mov
mov
loope
jno
dec
loop
dec
sti
mov
adc
xor
mov
fisttpll
mov
xchg
sbb
fdiv
ja
roll
dec
or
sahf
mov
sbb
cmc
imul
xchg
ja
test
xor
dec
pop
pop
sbbl
fstp
rorl
and
mov
mov
add
add
add
sub
mov
daa
inc
jo
lahf
aas
dec
outsb
and
jbe
popa
mov
loopne
arpl
adc
ret
pop
xchg
dec
std
popf
mov
fldcw
ljmp
jecxz
into
or
push
inc
adc
imul
stc
aas
sub
into
aad
pop
into
sub
out
mov
mov
cmpsl
jg
sbb
sbb
sbb
xor
ss
fwait
mov
ss
insb
cli
jnp
sbb
out
jle
arpl
sbb
push
or
mov
inc
adc
add
push
insl
lahf
cmp
lea
jnp
and
adc
add
call
movsb
xor
ss
pop
test
push
scas
sbb
pusha
xor
and
iret
push
mov
stos
stc
bound
les
idiv
jmp
pop
xor
pushf
pop
xor
js
push
aas
dec
js
add
push
cmpsb
cmpsb
add
in
mov
jecxz
out
mov
or
xchg
add
stc
hlt
out
mov
flds
test
in
cmp
rcll
xchg
pop
adc
outsl
loop
lret
xchg
cmp
jne
in
push
xorl
add
pop
arpl
test
xor
and
jno
pop
push
mov
adc
pop
arpl
mov
inc
cmp
adc
sbb
ds
dec
sti
inc
xor
loop
push
rorl
dec
or
movsb
mov
pop
sub
in
jae
add
push
cmpl
iret
idivl
cmp
lea
lahf
xchg
cmp
xchg
inc
mov
inc
or
sub
sahf
mov
addr16
or
mov
mov
cmp
xor
dec
jae
sar
inc
xchg
and
xchg
mov
push
and
testb
vmwrite
insl
adc
push
test
sub
into
jge
das
add
std
test
jg
into
lret
orl
add
add
jl
adc
fsubs
in
std
pop
pop
lods
xchg
xchg
dec
adc
loope
push
adc
int
data16
rol
sbb
mov
fisttpl
sub
into
dec
xor
rcrl
je
imul
lret
mov
xor
mov
cmpsl
pop
test
out
scas
or
cld
jae
adc
popf
mov
lods
jns
test
pop
push
mov
xlat
dec
ret
add
mov
push
repz
outsl
add
adc
xlat
mov
loope
divl
or
cs
imul
dec
orl
jmp
pusha
enter
inc
dec
inc
js
xchg
movsb
pop
shlb
subl
lahf
lcall
push
push
call
mov
das
push
adc
jb
cmp
mov
push
jp
aad
jecxz
jmp
add
add
adc
in
lcall
jae
dec
mov
loop
test
add
xchg
vpshufd
and
movsb
add
in
call
fsubr
mov
push
js
adc
mov
loope
call
frstor
dec
cmp
mov
out
mov
xchg
pop
cmc
lret
push
sahf
orb
xor
or
dec
push
fs
ss
push
xor
stc
nop
mov
cmc
int3
pop
arpl
in
push
cld
fisubs
cmp
cmovo
shl
data16
adc
jae,pn
sbb
cwtl
lret
divb
jge
das
movl
push
test
sbb
mov
nop
mov
and
inc
jns
xchg
jns
xchg
mov
cmp
subb
jmp
mov
fistps
lret
jecxz
nop
enter
nop
rcl
hlt
cmpsl
or
cmpsl
sahf
fsubl
cmp
mov
aas
pop
fadds
dec
or
jg
dec
arpl
cmpl
add
add
ret
mov
das
dec
add
or
stos
les
push
cli
pusha
cmp
pop
mov
lahf
js
push
shlb
sbb
stos
stos
negb
cmp
jns
sbb
push
imul
cmc
cs
mov
sarl
lcall
jp
jbe
sbb
mov
pop
lcall
dec
jmp
and
dec
xor
into
repnz
ficoms
ljmp
stos
jge
shrb
cmp
loopne
pop
ljmp
mov
or
mov
adc
adc
sub
xchg
stos
push
add
xor
into
hlt
jp
out
pop
push
and
push
faddl
sbb
pop
scas
sub
mov
ret
mov
ljmp
fnstsw
out
imul
dec
stos
cmp
add
add
out
idiv
outsl
mov
outsl
movsl
pop
mov
mov
add
sbb
pushw
xchg
popa
shlb
mov
cmp
pop
sbb
mov
lods
mov
jb
dec
les
xchg
int
ja
inc
xchg
lret
mov
outsb
repz
mov
adc
xor
int3
sahf
fstps
pop
mov
out
sub
xchg
and
in
lods
sub
xchg
pop
xor
sub
out
xchg
xor
push
xchg
fs
jne
addl
dec
out
cmp
inc
push
mov
cmp
es
mov
add
mov
jle
mov
dec
testl
lods
add
xchg
aad
cwtl
sub
mov
sbb
push
xchg
jne
adc
andl
jno
mov
and
fldl2t
fsubrs
add
je
sbb
jne
sub
or
and
inc
add
cmpsb
cmp
push
adc
jb
out
dec
js
leave
and
xor
shll
xor
mov
pop
xor
push
cmpl
push
xchg
je
mov
stc
add
stos
fsts
lahf
test
xor
lods
mov
aaa
loopne
jns
xlat
push
arpl
jns
adc
aas
test
cmp
gs
jb
mov
xchg
rcl
inc
xor
add
ret
sbb
push
cmp
push
cmp
scas
xor
inc
adc
jge
push
jnp
pop
adc
xorl
rcrb
pop
add
lcall
lret
pop
pop
mov
imul
loope
dec
aas
or
mov
mov
mov
insb
dec
sbb
mov
cmp
movsl
jb
xchg
sub
jmp
in
sbb
iret
sbb
lods
adc
lret
push
ret
ja
loop
je
inc
push
cmp
or
xchg
shlb
adc
roll
push
push
call
ljmp
add
add
add
mov
aas
imul
jmp
jmp
icebp
mov
jecxz
adcb
inc
enter
mov
xor
and
cmp
mov
jg
xchg
push
or
into
adc
in
inc
fimuls
pop
cmpsb
out
popf
and
jmp
loope
cmp
lds
lods
sbb
fdivs
mov
shll
out
cli
lret
ss
mov
mov
out
sbbl
xlat
pop
adc
addr16
adc
pop
push
jmp
test
jb
je
mov
and
in
outsl
les
cld
aas
or
out
test
cmp
or
xchg
call
jp
fidivs
fildll
loop
push
stc
popa
sbb
pop
adc
imul
mov
std
xchg
xchg
adcb
pop
lods
jns
jae
jp
push
mov
sbb
scas
rcrb
pop
inc
ret
lea
stc
out
inc
add
std
sti
leave
sti
iret
jmp
orl
incl
add
sub
hlt
push
xchg
std
sub
dec
add
xor
adc
inc
ret
sub
add
adc
outsl
fnstenv
cmpsl
pop
jae
xchg
imulb
pop
push
push
cmp
scas
lret
int3
test
lcall
or
mov
xchg
stos
inc
push
pop
jno
mov
scas
mov
sbb
mov
sbb
js
mov
mov
aam
dec
popf
mov
sbb
adc
insl
mov
stos
mov
cmp
test
out
imul
sbb
repz
adc
ret
sub
dec
aam
es
push
aas
shlb
dec
out
das
push
pop
xchg
shrb
out
sti
aas
and
mov
out
cmp
adc
jno
jbe
into
call
xor
xlat
adc
iret
int3
sbb
imul
insl
push
test
fists
xlat
push
adc
mov
mov
mov
mov
xor
and
mov
incl
add
xlat
push
test
imull
mov
aad
addb
ja
jmp
call
pop
dec
xor
test
mov
mov
or
cmp
sub
adc
pop
call
or
push
xorl
mov
sub
roll
lods
ss
mov
sbb
xchg
cmp
bound
and
leave
cmp
cmc
outsl
or
clc
jmp
jb
loope
les
loopne
ds
xchg
sbb
push
push
das
stos
and
mov
cld
mov
out
jno
je
jl
and
loope
xor
ds
hlt
or
add
mov
cltd
repnz
sub
xor
scas
addl
lea
test
mov
mov
adcl
or
push
sub
arpl
add
jg
mov
sahf
loop
jno
divl
rolb
incl
add
mov
icebp
lahf
rorb
cmp
cmc
data16
jbe
daa
inc
fidivs
outsl
xor
popf
or
es
mov
inc
cmp
aas
pop
aaa
insl
inc
rclb
pop
sub
and
rcr
shll
adc
adc
fucomi
fdivrs
stc
jecxz
xor
cmp
es
sub
sti
xor
movsb
mov
ret
dec
and
adcl
xchg
mov
test
lock
and
mov
bound
test
jl
mov
repnz
and
popl
fcomps
ja
test
out
fstps
loope
sub
mov
adc
pop
xchg
or
add
out
jns
in
out
imul
dec
popa
mov
adc
jo
ret
and
clc
or
or
mov
cmp
outsl
fildl
xchg
gs
sbb
aas
fdivrl
call
stos
outsb
add
inc
enter
pushl
cld
sbb
jl
add
incl
add
jno
repz
push
popf
aam
pop
add
mov
xchg
and
lret
or
ljmp
push
xor
sbb
xorl
pushf
sbbl
test
test
lds
mov
sbb
inc
pop
mov
into
cmpsl
clc
nop
mov
adc
les
push
add
pop
cmp
arpl
clc
insb
popa
lds
jnp
xchg
push
in
and
sbb
in
sbb
sub
cmp
cmp
adc
jnp
bound
or
in
lods
add
xchg
lret
sub
xchg
pushf
das
mov
mov
jmp
xchg
iret
mov
inc
hlt
mov
dec
jae
xlat
xor
outsl
push
hlt
jo
sbb
lret
sbb
inc
mov
add
add
pushf
shrb
lcall
sbb
pop
or
incl
add
or
inc
testb
or
pop
stc
pop
sbb
jo
lds
mov
in
mov
mov
lahf
lahf
pop
xchg
and
xchg
inc
push
dec
gs
mul
mov
cmpl
shll
dec
fdivp
repz
fiaddl
xchg
xchg
jno
enter
negl
mov
gs
cmp
ficompl
mov
outsl
iret
jbe
xchg
xchg
int3
lds
xchg
daa
dec
sarl
mov
outsb
repnz
cmp
mov
mov
pop
cmpsl
inc
movsl
pop
in
andb
aas
pop
jb
push
rcrl
push
enter
xor
aad
inc
mov
mov
fbstp
inc
sbb
sahf
push
out
lods
lods
out
clc
mov
shlb
push
push
ret
aad
shl
mov
mov
add
test
mov
aas
scas
fnstcw
lcall
incl
add
call
mov
add
pop
jmp
cli
icebp
out
call
jmp
icebp
push
mov
mov
inc
push
jl
or
jl
jnp
icebp
xchg
aad
cmpb
mov
xchg
mov
cli
lret
add
cmp
lret
aam
mov
lods
xor
lret
xchg
sbb
jns
adc
aaa
mov
mov
sbb
sbb
fwait
cli
cmp
add
sbb
jno
and
dec
xor
cmp
test
or
mov
or
enter
xlat
mov
fcomi
adc
int3
or
dec
ret
mov
sub
fistps
cli
pop
and
data16
stc
out
pop
push
hlt
out
fisttps
mov
into
fs
in
push
sbb
push
mov
sub
push
cli
mov
push
jnp
push
lea
cmp
add
jne
jne
jg
loop
mov
int
les
add
add
add
and
sahf
imul
cmp
loop
inc
add
in
arpl
pop
dec
fistpll
lods
ljmp
mov
sub
fildll
xlat
jp
xlat
adc
pop
popaw
xchg
mov
test
outsb
cmc
jmp
jge
cmpsb
cmp
jle
ja
pop
leave
jmp
sbbl
and
sub
inc
pop
sbb
jmp
sarb
lret
lds
mov
outsb
mov
test
mov
sbb
jno
or
push
test
mov
inc
push
mov
push
test
push
push
out
push
push
jl
sub
and
ret
xchg
xchg
js
sar
xor
mov
sbb
push
imul
xor
sub
pushf
mov
push
outsl
jecxz
nop
mov
add
dec
pop
mov
cmc
mov
daa
js
add
incl
add
pop
insl
xchg
rorb
dec
loop
lods
movsb
or
test
jb
lods
pop
xor
icebp
cmp
inc
leave
js
xchg
mov
push
lret
adc
xchg
pusha
cmp
xchg
out
mov
jb
jb
jle
movsl
jb
mov
jo
adc
adc
and
pushf
stos
dec
add
aad
and
mov
jne
xchg
or
bnd
mov
jge
popa
in
mov
es
jne
mov
out
mov
push
jg
lds
add
cld
movsb
jbe
push
js
xchg
scas
push
test
mov
ljmp
mov
inc
adc
dec
icebp
mov
xor
pop
push
mov
out
pushf
dec
xor
sub
or
mov
dec
out
jo
fdivs
mov
sbbb
jo
gs
loope
inc
mov
jl
jle
add
outsb
jle
lods
testl
movb
incl
add
jecxz
jbe
and
es
sti
dec
adcl
xchg
lods
imul
pop
data16
ja
repz
cld
jb
call
out
push
fs
push
out
fstpt
je
mov
mov
add
mov
lea
pop
icebp
xchg
mov
arpl
ljmp
js
icebp
loop
pop
mov
ficomps
inc
loopne
xchg
imul
cs
jae
ljmp
mov
cs
imul
ret
movsb
outsl
mov
mov
jp
jae
xlat
cld
xor
and
fsubrl
mov
push
rol
or
pop
mov
xor
fstpt
dec
pop
xchg
cmc
repz
lods
xchg
subl
ror
or
ds
jge
mov
ljmp
or
sarl
rcll
push
ror
arpl
shrl
sbb
mov
mov
add
mov
jbe
add
incl
add
cmp
iret
outsb
sbb
mov
rcrl
aam
jmp
jg
sti
jne
inc
jnp
pop
lds
pop
test
and
pop
ljmp
lock
and
decl
or
add
pop
mov
cmpb
push
lcall
sbb
lods
add
fs
lea
sahf
aam
setns
mov
addr16
jbe
outsl
dec
sbb
ret
jb
lds
adc
cs
mov
inc
push
adc
ja
adc
add
imul
adc
adc
cld
add
bound
xchg
and
mov
aam
mov
leave
fsub
mov
test
push
into
cmpsb
rolb
pop
leave
mov
mov
arpl
jmp
cld
stc
call
rcr
rcrb
subb
addr16
sub
add
add
add
out
sti
xlat
in
aad
in
es
jne
add
incl
add
lret
xchg
mov
into
pop
push
push
das
adc
lahf
dec
clc
pop
fucomip
roll
lea
xor
stc
mov
dec
icebp
fs
dec
insb
adc
inc
iret
pop
push
add
adc
insl
imul
mov
pop
adc
mov
fmull
mov
in
sbb
mov
pop
rclb
out
xchg
test
jno
xchg
mov
mov
cmpsb
mov
aaa
and
mov
fwait
push
jmp
dec
adc
jmp
loop
push
dec
ds
movsb
pop
mov
gs
jns
ja
in
fistl
enter
dec
test
aad
pop
or
adcb
jge
mov
aad
inc
sahf
test
inc
addr16
pusha
leave
sub
outsl
mov
pop
ja
ljmp
fisttpll
andl
or
xchg
test
add
push
sub
cmp
jg
and
mov
mov
xchg
incl
add
cmpsb
inc
ljmp
mov
and
mov
mov
mov
fiaddl
jle
dec
in
enter
cli
add
lcall
ret
inc
fcmovbe
ds
loopne
pop
cs
pop
push
bound
bound
outsb
dec
pop
mov
and
into
jns
mov
ror
xchg
repz
dec
or
sbb
sahf
cmp
popl
dec
into
jb
neg
push
bound
jg
js
enter
data16
into
mov
mov
push
jle
adc
dec
xchg
add
ret
inc
xchg
jo
imul
add
lret
mov
inc
roll
mov
pop
mov
lret
fildll
call
adc
les
ficoms
shlb
sbb
xor
test
xchg
lds
inc
aaa
pop
mov
int
pop
push
push
into
mov
cld
lret
or
jg
add
xor
fistpll
out
repz
fcoms
or
lret
incl
add
ja
popf
cmp
je
dec
xchg
xchg
inc
mov
pop
nop
mov
fcmove
mov
loopne
mov
int
jo
pop
stos
pop
mov
mov
insb
and
jecxz
adc
mov
repnz
mov
mov
xchg
in
stos
jge
dec
push
sti
out
xchg
enter
fwait
insl
je
ret
js,pt
aam
inc
outsb
push
mov
in
movsl
and
pushf
enter
ja
int
push
pop
jmp
test
cltd
adc
and
js
jae
jmp
xor
cld
gs
add
add
or
fsubl
pop
xchg
mov
mov
out
lea
xor
cltd
adc
ds
mov
cmp
push
les
xchg
rorl
pusha
es
call
dec
jmp
xchg
fcoml
mov
mov
mov
cmp
mov
jb
add
incl
add
cmp
pop
test
jne
dec
sbb
mov
push
jg
lahf
jb
push
fwait
adc
imul
je
mov
adc
inc
adc
push
xchg
mov
movsl
xlat
rorb
fnstenv
sbb
iret
pushf
add
shl
sbb
in
sub
dec
adc
mov
rcll
jbe
or
mov
aam
or
push
inc
cmp
inc
test
adc
in
dec
imul
mov
pop
dec
xor
scas
ss
lds
or
ret
or
and
das
pop
sub
adc
and
lds
outsb
mov
les
shll
jns
lret
push
jns
fcompl
pop
push
lods
rclb
jns
mov
ret
mov
cwtl
jp
and
cwtl
mov
cmpsb
cmpsl
cs
bound
aam
stos
pop
push
int3
add
test
add
enter
in
sbb
push
inc
add
int3
add
incl
add
in
mov
cmp
loopne
mov
xchg
orl
mov
mov
sbb
cmpb
mov
js
xchg
test
lcall
xchg
pop
push
add
mov
mov
jecxz
dec
adc
push
movsl
push
xor
or
bound
inc
fucom
arpl
cmp
sbb
mov
mov
inc
cmpsb
push
and
xchg
scas
aas
cmp
adcl
dec
or
fs
hlt
and
pop
push
push
add
outsb
mull
aam
mov
stos
inc
dec
or
jb
enter
xchg
sub
push
lret
jae
repnz
xor
jecxz
lock
push
out
xor
sub
mov
xchg
hlt
push
movsl
dec
rcl
mov
mov
sbb
jp
stos
sbb
mov
dec
cmpsb
jae
or
mov
push
stc
mov
cmpsb
inc
test
jo
mov
add
jne
imul
cmc
call
inc
push
popa
adc
adc
add
add
add
mov
cmp
cmp
xchg
frstor
sub
in
outsl
lahf
leave
pop
in
sbb
lock
fidivrl
movsl
in
mov
cmp
xchg
or
xor
in
hlt
mov
lods
pop
push
fnstsw
add
add
jg
xor
push
jmp
shlb
mov
inc
and
clc
mov
stc
clc
imulb
fwait
dec
lahf
push
pop
pushf
ljmp
mov
or
orb
movsl
cmp
insl
jg
std
gs
leave
test
rol
adcb
fldl
out
subl
inc
shrb
cmp
notb
add
or
insl
shl
aaa
ret
mov
out
shll
cwtl
jmp
lods
mov
xor
in
fiaddl
cmc
add
inc
sbb
loop
mov
arpl
xor
pop
and
movsl
mov
iret
sub
adc
and
add
incl
add
mov
cwtl
popf
xchg
scas
sub
xchg
lods
or
cli
das
fsubrs
push
lods
sbb
cwtl
cmp
mov
out
jmp
lea
je
jns
fcmove
xor
mov
and
adc
xorb
fisttpl
add
mov
jbe
cmp
and
dec
xor
mov
test
mov
es
mov
daa
rol
adc
cmpsb
bound
push
push
jne
mov
cmp
and
xchg
push
or
mov
stos
js
adc
mov
mov
and
loop
movsl
mov
repnz
push
push
loopne
dec
pop
pop
mov
ljmp
negb
int3
or
sbb
fistpll
xor
js
push
mov
arpl
lock
adc
mov
cmp
cmp
mov
out
out
out
into
gs
cld
test
fistps
push
outsb
iret
add
incl
add
ss
xor
mov
push
mov
mov
imul
cltd
mov
leave
icebp
cmp
sub
mov
rcr
jnp
shlb
add
sbb
arpl
xor
pop
ds
sub
into
jg
dec
cmp
sub
data16
xorb
xor
mov
push
or
dec
in
das
dec
fcomps
jge
rolb
and
mov
aad
mov
and
loopne
pop
and
adc
mov
mov
push
int3
and
jae
mov
cltd
jg
add
pop
add
insl
mov
jl
std
and
aas
std
sub
jl
sti
jo
or
imul
or
cli
or
addr16
mov
sbb
sar
mov
popf
pop
sub
bound
cmpsl
push
out
hlt
pop
pop
je
mov
jmp
dec
cmp
pop
add
xchg
and
je
out
mov
sbb
add
add
add
inc
pusha
mov
jnp
cmpb
jecxz
rclb
cmpsb
mov
mov
and
cmp
xchg
sub
pop
popf
into
pop
jno
stos
and
std
cmpsl
fwait
dec
lock
ljmp
scas
pop
repz
add
or
pushf
lods
jge
into
lods
inc
mov
scas
or
cs
repnz
lock
in
daa
dec
jae
sub
xchg
rol
mov
sbb
inc
mov
lcall
icebp
push
std
jge
test
int
mov
stos
test
push
jge
popa
mov
jno
sub
add
add
jns
sub
push
mov
xchg
lock
push
jge
lock
lods
das
inc
leave
cmp
cmp
int3
rclb
xor
inc
lret
shll
add
insl
testl
mov
pop
adc
cmp
add
add
dec
daa
dec
das
outsb
imul
push
xchg
or
mov
add
add
add
in
insb
aad
int
movsb
push
jb
sub
adc
sbb
out
push
aad
push
dec
fsub
lret
sbb
xor
mov
push
push
in
lret
es
push
pop
xbegin
pushf
ss
cli
inc
mov
outsl
inc
xor
div
xorl
adc
gs
push
mov
inc
push
enter
clc
ds
xchg
jecxz
xor
icebp
mov
data16
adc
ljmp
push
sti
popf
push
sub
movsb
sub
es
mov
in
sub
xorl
adc
rcll
jecxz
jg
mov
lahf
cmpsl
and
sbb
subb
lcall
loope
mov
xchg
adc
scas
jae
les
sbb
daa
jecxz
xchg
mov
inc
sahf
add
popf
mov
lahf
ret
or
add
incl
add
dec
sbb
jecxz,pn
inc
mov
and
int3
pop
jle
je
cmc
testl
or
mov
jecxz
bnd
xchg
aam
into
inc
dec
gs
insl
leave
je
mov
push
sbb
xchg
add
inc
xchg
in
addl
outsb
xchg
addr16
adc
mov
pushl
stc
das
outsb
lods
sbb
aaa
int
clc
pop
ljmp
sub
push
lret
cmp
lock
mulb
popf
es
push
int
les
xor
push
addr16
movsb
sub
int3
call
jno
addl
std
outsl
mov
pushf
mov
pop
div
cmp
je
daa
nop
adcl
lods
mov
mov
lds
inc
repz
jp
sti
mov
adc
rol
adc
int
xchg
test
clc
nop
testl
dec
or
mov
mov
mov
mov
pop
xchg
or
jmp
add
roll
add
add
add
cmp
jno
dec
popf
mov
xorb
xchg
mov
mov
xchg
ret
int
popf
stc
or
gs
out
shrb
pop
pop
hlt
ss
add
shll
add
fsubrp
ret
or
mov
inc
xchg
inc
das
pop
imul
pop
pop
jle
and
aam
add
pop
jp
or
xor
sarb
mov
inc
xchg
sbb
lea
dec
or
inc
jne
xchg
cmp
iret
fiaddl
jp
fldt
in
fcompl
push
sbb
sahf
mov
xchg
sub
shl
sahf
test
and
jbe
aas
push
sub
inc
fcompl
call
xor
sbb
ret
ja
cmpsb
add
fistpll
jg,pn
mov
cmp
or
inc
mov
rcr
lods
daa
fistl
add
jg
xor
add
sbb
sub
dec
push
testb
imul
add
loop
mull
ljmp
add
push
jb
loope
movb
pop
add
stc
and
mov
adc
lods
loopne
ret
fistpl
mov
mov
pop
adc
pushf
loope
out
pop
xor
xchg
repz
lret
sbb
add
out
leave
fbld
gs
lock
cld
mov
nop
int
jno
cmp
mov
cwtl
push
xchg
pop
pop
sbb
les
cmp
mov
and
outsb
xchg
mov
cli
test
dec
fistl
adc
sub
sbb
sbb
push
shr
in
loop
cmp
into
das
test
test
mov
mov
enter
xor
adc
stc
mov
inc
sarb
imul
xor
test
fmuls
xchg
or
push
sbb
jne
sar
dec
pop
gs
mov
push
out
mov
add
add
ds
jae
bound
repnz
add
add
outsl
ret
inc
ljmp
sbb
push
mov
sub
inc
mov
dec
pop
cmp
and
cmpsb
fdivs
out
fcomi
and
stos
fbstp
loop
xchg
into
fldenv
pop
popa
sbb
cmp
jne
call
and
imul
cltd
and
jecxz
cmp
pop
push
lret
or
scas
mov
dec
dec
xchg
pop
xchg
dec
loopne,pn
xor
das
dec
fs
ss
lds
loop
movsl
gs
xchg
pop
dec
mull
sbb
fstpt
push
ret
lods
cmpsb
pusha
je
sbbl
push
cmp
and
push
mov
cmp
sysret
mov
sahf
xchg
test
cmpsb
inc
inc
lods
or
or
das
outsl
aam
mov
inc
or
inc
xor
dec
push
mov
loop
pushf
dec
or
imul
sbb
clc
jnp
into
inc
addr16
mov
add
lcall
jnp
mov
addr16
add
incl
add
mov
cmp
js
jae
inc
aaa
pop
pop
inc
push
pop
test
jmp
stos
mov
mov
cmc
shrb
mov
mov
mov
pop
jge
cs
jae
or
repz
inc
out
push
sbb
push
rolb
adc
roll
xor
xlat
inc
pop
dec
fwait
je
lahf
popf
inc
cmp
dec
mov
push
fucomp
nop
push
inc
mov
nop
cmp
addr16
out
rorb
mov
pusha
cmpsl
into
es
popa
add
pop
andb
sub
xor
enter
scas
icebp
pop
mov
insb
mov
in
xchg
mov
xlat
enter
ds
je
mov
ja
jl
jp
sbbb
push
mull
jp
mov
movsl
jnp
pmaddwd
mov
mov
push
inc
push
or
pop
xchg
xchg
pop
cmpsb
xchg
push
cwtl
fisubl
lds
fidivs
sub
movsb
aad
stos
aam
add
add
xchg
ja
push
jg
leave
or
add
xlat
add
incl
add
cld
or
push
lds
in
lea
xor
aas
and
dec
mov
je
test
test
jl
dec
cmp
push
movsl
aad
imul
ret
inc
aad
fldt
cwtl
sti
into
gs
xchg
cs
jg
inc
inc
jns
dec
mov
stos
pop
insl
push
stos
xchg
ja
sbb
pop
and
sub
cmp
mov
movsl
movsb
shrl
xchg
add
jl
cmp
pop
xor
dec
adc
movsb
xchg
sbb
or
sub
sarb
bound
out
pop
jg
hlt
xchg
cmpsl
cmpsb
sahf
fwait
shl
dec
dec
aas
adc
rorb
ds
add
out
aaa
xchg
in
adc
push
icebp
sbb
les
cmpsl
xchg
sahf
inc
mov
sub
sbb
push
jmp
divb
xchg
fstl
xchg
jno
adc
sti
jb
mov
push
mov
push
xchg
cli
or
imul
xchg
movsb
testl
add
incl
add
sbb
push
xor
loopne
and
or
sbb
vandnps
sub
dec
test
or
imul
stos
cld
sti
iret
daa
outsb
mov
pop
fadds
loopne
mov
jno
sub
insl
out
fildll
lods
dec
push
xchg
adc
lods
cmp
mov
insb
jo
fwait
inc
pop
xchg
lock
stos
and
dec
outsb
lret
add
cmc
and
sbb
inc
fs
cmc
negb
mov
fisubrs
cmp
add
pop
fidivl
inc
cs
arpl
push
aaa
stc
mov
sarl
push
icebp
setl
rol
rorb
xchg
int
or
cmpsl
scas
sbb
mov
fucomi
negb
mov
mov
stos
sub
cmp
pushf
fsubrl
or
sbb
adc
sub
mov
push
mov
push
sbb
add
add
psubusw
push
in
sub
je
flds
add
add
add
cld
pushf
loope
xchg
negl
sub
inc
inc
loope
or
and
cs
inc
push
inc
lret
dec
inc
add
ret
out
mov
or
lea
xchg
int3
push
out
cli
or
mov
adc
mov
fxtract
ficomps
or
or
mov
fdivrl
mov
jle
sub
cld
sub
jne
add
icebp
jecxz
and
mov
ds
mov
fs
insb
into
or
lea
jne
adc
aam
jns
cmp
jne
sbb
flds
sbb
xor
push
pop
mov
xlat
xor
pop
data16
movb
sub
mov
sub
shl
lret
pusha
insl
dec
cmp
sbb
xor
lock
mov
cmp
dec
insl
sbb
neg
xchg
adc
lret
mov
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
and
arpl
add
incl
add
dec
pop
add
aas
out
rcrl
inc
mov
or
push
cmp
dec
push
je
cmpsb
mov
fistps
and
pop
inc
xlat
jbe
loop
mov
fnsave
loope
sbb
gs
mov
sahf
fdivs
js
mov
xlat
push
sarb
pop
mov
push
call
mov
and
data16
sbb
push
mov
out
dec
fiaddl
pop
xor
push
neg
pop
lock
and
pop
dec
mov
pop
pop
push
imul
jle
stc
popf
mov
in
mov
xlat
mov
sbb
je
xchg
push
fldt
call
mov
add
xchg
mov
push
gs
cltd
pop
sub
or
jns
xor
cmp
mov
mov
jl
pushf
ljmp
negl
jg
ret
add
add
jle
jg
std
fstpt
out
xlat
bound
add
incl
add
fidivrs
xlat
jecxz
scas
push
out
std
out
loope
push
adc
sti
cmp
jno
adc
adc
sahf
push
in
insl
xchg
xlat
push
sub
and
sub
ds
inc
pop
incb
or
push
lea
je
mov
lahf
push
jno
and
test
insl
mov
cld
int3
mov
or
jnp
or
stos
sub
fistpl
andb
js
std
jns
shrb
cmp
jp
repnz
pop
sub
dec
ja
fimull
dec
or
popf
xchg
out
popf
leave
xlat
aas
mov
in
cwtl
loope
push
adc
in
enter
outsb
aad
hlt
lahf
test
xchg
cld
pop
popf
fwait
dec
loop
mov
xor
aad
insb
mov
fsubp
push
add
das
lcall
into
add
jmp
mov
fildl
cmp
ljmp
jmp
faddl
add
add
add
mov
ret
jbe
punpckhbw
sub
pop
mov
ret
pop
shrd
test
test
lods
mov
pop
iret
daa
xchg
inc
cmp
jb
ret
cli
fildl
mov
cld
sub
lods
pop
imul
fbld
dec
out
insb
push
or
cs
mov
sub
mov
lds
sub
rcrb
adc
push
adc
movsb
clc
and
ret
jae
mov
lahf
cwtl
mov
hlt
sub
out
sbb
sbb
add
xor
popf
mov
insl
sub
add
test
push
mov
push
push
pop
jg
jae
mov
jp
clc
push
jae
and
and
orl
shl
xor
jmp
inc
psubd
sub
add
add
sbb
jmp
scas
inc
call
pusha
fldl
add
add
add
sub
cwtl
add
jnp
pop
mov
popf
jg
or
in
mov
jno
std
repz
adc
push
je
into
adc
pushf
fdivs
inc
lock
sub
mov
int
jno
inc
adc
out
adc
lea
rcll
sbbl
fwait
rcrb
and
imul
mov
inc
xor
dec
xchg
aad
nop
rcrl
push
lret
push
pushf
daa
or
and
in
jae
cs
cs
outsb
fsubrl
dec
push
sti
sub
iret
xchg
mov
dec
jp
and
xchg
fisubs
cmpsb
cmpsl
push
in
pop
inc
adc
xor
push
and
jecxz
and
xor
sti
int3
outsb
mov
pop
filds
data16
adc
mov
shl
std
xor
push
add
add
add
push
out
faddl
in
pop
fiadds
add
add
add
and
imul
add
fiaddl
clc
cmp
mov
ss
inc
push
pushf
lea
push
gs
add
mov
out
lds
mov
adcl
push
int
mul
into
push
mov
cmpsl
adc
dec
pop
aad
mov
dec
das
jo
jo
mov
fnstsw
jns
dec
ja
lahf
cld
fsubl
sub
clc
jg
punpcklbw
aad
push
dec
mov
test
pushf
in
pop
cmc
and
ret
movl
inc
int
jmp
push
aas
inc
fisubrl
cmp
int3
shlb
cmp
test
inc
pop
aam
mov
stos
xchg
and
xchg
mov
lds
cmp
jle
pop
and
movsl
add
pop
jo
sbb
cltd
mull
xor
pop
xor
add
add
jg
mov
lcall
fisttps
or
pop
filds
add
add
add
push
or
jae
loop
aam
jecxz
pop
test
mov
and
cmp
cmp
test
mov
push
test
jmp
movsl
xchg
pop
loop
test
ljmp
sbb
arpl
inc
mov
xchg
lcall
mov
xchg
es
adc
fwait
and
inc
cmpsb
sub
mov
and
scas
pop
mov
icebp
fcompl
cmp
testb
sbb
jb
pop
aas
popf
sbb
jo
mov
aam
sub
lods
push
ret
rcl
das
jmp
dec
sbb
lret
fisubrl
mov
in
outsl
repz
jle
cmp
outsl
add
add
jecxz
jp
in
or
rolb
mov
addb
pop
push
dec
pop
lds
jo
jno
imul
dec
sub
add
mov
jns
xchg
xchg
mov
pusha
mov
pop
loopne
add
add
add
insb
cltd
sbb
shll
pop
lahf
incb
shl
ret
add
aaa
mov
gs
pop
fmull
pop
adc
ss
movsb
gs
ja
sbb
mov
iret
lret
pop
mov
outsb
or
repz
ja
ljmp
outsl
lret
aam
lahf
push
fidivl
sbb
push
xchg
popa
pop
mov
insb
cmp
lds
lods
scas
cmp
mov
stos
jp
sbb
mov
fwait
inc
push
jp
in
mov
or
jae
pop
mov
push
mov
popf
shrb
lcall
jl
jl
mov
test
js
lcall
push
pop
inc
mov
push
add
dec
push
and
loopne
xchg
sub
cmp
pop
test
addl
mov
and
add
and
js
jae
fadd
fsubp
jnp
or
cld
les
or
pop
loope
add
add
add
mov
push
fdivrl
xor
xchg
dec
cmp
mov
mov
ret
inc
mov
cmovbe
fwait
jns
add
shll
std
orl
jp
stos
lret
add
in
jle
mov
int
mov
pop
ds
enter
das
loope
lock
movsb
xor
pop
xchg
add
or
xchg
sub
mov
pop
arpl
and
jno
dec
repz
clc
mov
push
test
mov
aaa
ljmp
push
mov
aas
sub
mulb
push
lock
imul
xchg
mov
cld
je
ljmp
fdivs
and
sub
push
add
movsl
fldenv
das
pop
pop
lds
fsubp
jge
push
or
push
cmp
sub
cld
cli
jle
dec
nop
xor
jo
mov
add
incl
add
adc
daa
or
dec
sbb
rcrb
mov
insl
ja
ss
xchg
arpl
das
dec
fwait
dec
loopne
cwtl
rcr
jb
leave
addl
xor
adc
lods
lea
dec
idivb
mov
mov
and
push
xchg
or
scas
pop
push
and
imul
mov
mov
adc
sbb
cmp
push
imul
lahf
lods
int
jno
mov
inc
stos
xchg
xchg
jp
rcrl
mov
cmp
sbb
cmp
pusha
scas
and
or
sarb
call
ret
out
imul
mov
cmp
xor
lcall
clc
inc
push
les
cmp
sbb
jl
test
mov
xor
jge
les
ja
es
jp
fildll
lock
fcompl
and
add
ja
sti
aaa
out
ja
xor
fs
jecxz
add
add
add
push
lcall
xchg
das
cmp
add
or
and
inc
pop
andl
sub
add
mov
mov
movsl
add
je
cmpsb
pop
pop
sbb
enter
out
push
fsts
lock
jno
popf
in
mov
xchg
mov
add
fisttps
xor
out
xchg
sub
cwtl
into
or
mov
pop
xchg
xchg
push
in
leave
xor
test
inc
and
pop
inc
les
pop
pop
repnz
das
dec
sub
jg
mov
adc
movsl
pop
in
dec
nop
and
jbe
loop
jae
out
movsb
xchg
cmp
cmp
inc
adc
xchg
mov
pop
mov
mov
lret
dec
cmpsb
enter
xchg
imul
insl
aaa
pushf
dec
jnp
cltd
je
pop
push
adc
test
add
into
arpl
pop
xchg
aaa
pushf
out
fisttpl
incl
add
test
push
shll
mov
sbb
lret
out
xchg
mov
call
pop
dec
add
xor
pop
dec
call
adc
jae
sub
scas
les
inc
mov
inc
cld
repnz
lock
mov
add
inc
bound
jbe
aam
ret
rorl
push
xor
inc
pop
out
jg
jmp
jmp
lahf
sahf
or
repnz
sbb
dec
test
jle
rol
mov
mov
mov
dec
shrb
imul
scas
movsl
sub
ret
int
xchg
dec
dec
insl
cmc
ds
adcl
mov
dec
scas
push
mov
dec
movb
mov
jmp
ljmp
in
add
and
test
push
dec
or
jae
push
loopne
or
int
imul
lods
outsb
loopne
fwait
xor
data16
out
pop
jp
movsl
xchg
nop
push
add
sbbl
add
add
ja
lcall
mov
mov
incl
add
xor
xchg
push
dec
insb
push
stos
out
xchg
xchg
inc
cmp
addr16
mov
popf
addr16
cli
sub
inc
cmp
and
js
inc
fisttpll
dec
pop
add
or
inc
js
icebp
pop
lahf
sbb
xchg
test
inc
jbe
mov
mov
movsb
enter
cli
ds
cwtl
insl
pop
in
pop
fstpt
or
push
adc
addb
push
push
mov
xchg
adc
xor
jmp
cwtl
jp
sahf
sbb
iret
dec
cmpsb
add
sbb
jge
out
and
in
stos
mov
jp
and
stos
lret
pop
pushf
mov
aaa
inc
push
int
aad
mov
mov
cmp
sub
hlt
dec
cmc
sti
or
add
jb
cs
movsl
sbb
and
add
neg
sahf
sub
pop
push
and
mov
pop
add
add
lock
jg
in
and
and
mov
add
incl
add
push
jbe
mov
jmp
shrl
rclb
mov
sub
ret
and
and
push
or
and
xchg
test
shrb
xchg
cs
test
xchg
sbbl
cmc
aas
mov
fwait
int
jecxz
inc
rclb
xchg
jge
push
shlb
popf
dec
iret
test
adc
bound
daa
rcll
sub
popa
xchg
enter
test
data16
cmp
add
jg
add
dec
cmp
xchg
out
push
arpl
inc
fiadds
es
ja
adc
aad
sbb
jle
sarb
shrb
popa
int3
call
aas
shrb
lret
repz
shrl
gs
mov
mov
decb
in
adc
xchg
mov
xchg
test
std
aaa
or
in
adc
outsl
mov
jbe
or
and
subb
add
pop
xlat
fistpl
dec
shlb
add
add
pop
add
out
pop
mov
mov
push
std
leave
cwtl
lods
adc
push
sahf
inc
pusha
or
out
cmp
fdivrl
fdivrs
rorb
push
and
inc
and
xor
dec
imul
loope
mov
popa
mov
addr16
jge
test
nop
inc
stos
outsb
xlat
adc
push
scas
sbb
adc
ja
call
cmpsl
mov
cltd
pop
cmc
push
add
xchg
rcrl
andb
cltd
pop
mov
std
das
fcompl
xchg
xor
scas
mov
xor
pusha
loopne
add
mov
sahf
inc
inc
test
xchg
jp
add
sub
out
pop
scas
push
pushf
adc
mov
xchg
or
sbb
popf
cmp
fsubr
mov
sub
test
repnz
ret
jmp
push
or
cltd
xchg
add
cmc
add
mov
dec
js
stc
mov
dec
int
push
call
add
ss
pop
mov
movl
sbb
hlt
push
clc
and
rcl
sbb
out
mov
testl
adc
insw
dec
pop
xor
xchg
xchg
dec
hlt
lods
shlb
sub
add
in
enter
stc
sub
hlt
cmc
cmpl
cmp
and
imul
mov
enter
out
push
rcrl
or
xchg
add
cmp
dec
cltd
sub
sub
in
jle
jg
movl
stos
adc
fdivrl
jmp
int
mov
lods
pusha
lcall
in
push
daa
cltd
loopne
push
pop
outsb
cmp
testb
sbb
fwait
rcrb
int3
mov
xchg
je
decl
and
adc
push
sbb
in
push
ret
push
andl
sbb
add
insl
repz
fwait
jns
jns
and
adcl
add
mov
aas
mov
sub
push
mov
mov
mov
pushf
out
sbb
loop
mov
jae
mov
mov
sbb
sub
cmp
shr
cmc
adc
daa
addl
mov
xor
push
pop
cmp
bound
mov
sub
inc
mov
std
mov
xor
decl
shlb
outsb
jmp
gs
xor
stos
and
pusha
cli
push
test
out
out
int3
stc
dec
or
inc
leave
or
data16
pop
jo
imulb
jnp
push
sbb
pop
dec
icebp
sbb
insl
das
push
rcrb
mov
shrb
lahf
cld
jne
das
xchg
addr16
cmp
out
pop
jl
pop
punpcklwd
dec
lea
pop
call
sbb
scas
outsl
dec
les
and
mov
and
aad
cmpsb
push
add
mov
pxor
jnp
adc
jne
jge
mov
push
ljmp
imul
push
jb
lods
movsl
test
xchg
mov
pop
push
dec
cmp
bound
fildl
out
or
mov
enter
jae
mov
insb
push
stos
dec
lahf
leave
and
fcoms
mov
lcall
stos
stc
push
push
push
mov
iret
push
aam
pop
jge
mov
sbb
pop
xor
sub
int
lret
arpl
ss
jg
jl
mov
lcall
out
movsl
push
sub
dec
data16
pop
adc
push
add
lock
lret
sub
xchg
mov
mov
cmp
xor
repnz
inc
out
aaa
mov
inc
sbb
dec
js
bound
in
sti
pop
cli
pop
or
xchg
xchg
das
sbb
cmp
inc
rolb
adc
aaa
les
push
and
cwtl
lret
enter
xchg
pop
mulb
mov
loope
ret
push
jno
pusha
shlb
das
add
subb
fistl
das
and
push
xor
incl
add
mov
cmp
stos
mov
cwtl
repnz
xchg
sub
dec
pop
in
cmp
scas
idivb
lcall
pop
in
and
cmp
xor
inc
xchg
push
bound
or
push
inc
pop
dec
ret
icebp
mov
rcr
movsb
shlb
imul
rorb
push
xchg
inc
fmull
adc
push
insl
and
mov
jg
pop
push
push
imul
mov
imul
add
push
out
sbb
mov
hlt
adc
pushf
stc
shrl
sarl
into
cs
je
mov
movsb
in
mov
scas
mov
pushf
loopne
xor
aas
or
add
jge
inc
nop
fisubs
sbb
push
sahf
scas
sub
fnstsw
push
push
sub
xchg
mov
xor
inc
dec
cmp
add
jb
scas
decb
fisttps
outsb
mov
add
add
outsl
roll
cmp
mov
repz
lahf
dec
pop
js
sub
test
ljmp
sub
fstpt
rcl
aam
and
sti
pop
lods
sbb
stos
popa
adc
fdivs
in
push
dec
cmpsb
add
or
push
pop
jle
push
add
dec
mov
adc
fnstsw
pop
lock
or
mov
jb
subl
cmpsb
je
mov
pop
scas
negb
sub
mov
mov
dec
xor
popa
mov
sahf
lds
mov
es
test
push
in
mov
cltd
pop
inc
ljmp
mov
inc
cmp
rorb
cmpsb
xchg
jl
hlt
imul
popf
adc
out
repnz
sbb
les
ljmp
dec
xchg
adc
not
lahf
mov
and
clc
add
xlat
mov
xchg
lret
stc
push
in
add
incl
add
pop
sub
inc
push
loope
stos
jmp
jb
imul
bound
push
shll
sbb
inc
lock
sbb
dec
hlt
notl
loop
mov
push
fcmovb
xor
mov
mov
ljmp
inc
mov
cli
xorb
loop
out
xchg
sub
xchg
pushf
aam
sbbl
pop
lds
gs
mov
inc
mov
pusha
frstor
push
pop
outsl
sub
inc
or
lods
sbb
dec
xlat
push
dec
lahf
leave
mov
jae
dec
addl
and
popf
sbbb
mov
out
sbb
cmpsl
mov
push
dec
clc
movsl
mov
in
push
inc
js
adc
movl
stos
mov
sub
push
nop
mov
add
xchg
pop
sub
lea
imull
or
lods
cmp
lods
aas
mov
pop
mov
dec
out
add
incl
add
in
in
xorl
imul
in
mov
les
lahf
push
xor
jae
scas
jle
jne
mov
mov
pop
push
test
ja
xor
sbb
mov
and
repz
inc
cmp
fcomps
lcall
jns
push
push
lea
jno
sbbb
das
xchg
sub
dec
xor
lret
orb
xor
xchg
cli
jle
and
inc
pop
jns
movl
shrb
icebp
loope
testb
test
mov
bound
cli
les
xchg
push
lods
std
stos
insl
into
subl
xchg
ja
jg
je
out
mov
lret
push
add
pusha
mov
cld
mov
push
mov
out
icebp
mov
pop
rorl
enter
stos
or
add
test
sar
xor
mov
xchg
imul
add
add
mov
sti
mov
push
leave
out
dec
out
add
incl
add
pop
and
mov
mov
jmp
sbb
daa
cmp
out
inc
push
mov
movb
sub
push
push
jg
scas
or
fs
lods
mov
mov
lods
repnz
stos
and
sti
jmp
pop
inc
test
and
imul
add
mov
inc
sub
in
out
sub
jne
idivl
rorl
outsb
enter
and
dec
lahf
fstp
mov
xor
mov
dec
das
in
add
xlat
les
stos
iret
cli
stos
push
mov
push
add
icebp
add
jmp
or
outsb
ss
sbb
add
sbb
imul
and
xor
inc
and
out
inc
cmpsb
sub
into
xchg
scas
mov
add
xor
nop
imul
add
outsb
mov
gs
jl
int
mov
sbb
cmp
xchg
test
fdivrs
jp
lods
mov
outsl
leave
add
into
adc
neg
jge
xchg
jns
in
jp
das
dec
lock
incl
add
xor
pop
cwtl
cs
sbb
jbe
mov
movsl
add
fidivl
sbb
stos
pop
imul
ja
ret
shl
stc
cmp
sbb
or
xlat
mov
ret
or
cmp
testb
mov
outsl
test
mov
jg
roll
loop
popf
imul
push
inc
loopne
add
repnz
add
sbb
pushl
mov
mov
mov
push
fcomp
fld
inc
shl
push
dec
data16
leave
and
mov
addr16
aas
rcrl
repz
inc
cmpsl
popf
dec
jae
into
test
dec
xchg
cmp
aas
lcall
xchg
inc
outsb
pop
inc
pusha
dec
fisttpll
ret
inc
enter
cmpsb
je
xlat
push
adc
cli
xor
jo
aam
jo
jae
xor
lods
add
int
mov
and
ds
imul
pop
cmp
outsl
jg
jg
sub
fimull
or
dec
icebp
add
incl
add
mov
repnz
aaa
outsl
and
or
les
xchg
or
jle
sub
cltd
movsb
and
daa
andb
stos
imul
xor
sbb
or
and
repz
repz
cmp
les
dec
into
shrb
pop
insl
mov
inc
int3
fsubrs
rorb
bound
into
icebp
daa
sti
cmp
xor
jmp
mov
call
jmp
test
push
adcl
cltd
pop
mov
cmpsl
pop
shrb
subb
sbb
in
and
or
jne
sbb
or
jns
xchg
push
xchg
sti
adc
xlat
lahf
push
ffree
aad
xor
sti
and
cmp
or
insl
shrd
mov
jnp
pop
push
push
icebp
lea
mov
inc
lahf
arpl
scas
xlat
jg
aas
gs
fbld
lcall
ret
ja
and
aaa
divl
mov
mov
incl
add
cwtl
mov
ret
mov
xor
ss
call
mov
test
fwait
jb
inc
jle
enter
dec
mov
je
sub
shr
add
xor
adc
jle
xchg
shll
div
cmp
popl
iret
inc
shll
fisubrl
fdivs
inc
data16
outsl
pop
xor
mov
mov
jbe
inc
add
mov
movsb
leave
mov
aad
cmpl
xor
pop
and
outsl
mov
jo
add
pop
inc
push
cmpsl
sti
jge
std
mov
mov
and
mov
cmp
outsb
cmpsb
stos
adc
xchg
pop
push
stos
icebp
sub
lahf
clc
xchg
sub
jmp
or
mov
pop
mov
pop
sarb
js
cmpb
cmp
sub
ret
dec
mov
add
add
mov
cmc
mov
mov
clc
push
dec
repz
incl
add
ja
fs
mov
or
xor
adc
jmp
sbb
shl
iret
scas
inc
xor
imull
jp
subl
cs
mov
dec
jnp
cmp
cs
cmp
lods
push
into
xchg
dec
bound
and
leave
insb
mov
test
dec
mov
imul
mov
xchg
daa
inc
jnp
std
pop
dec
jb
or
in
mov
ja
fwait
mov
jp
push
popf
mov
adc
cmp
xchg
sub
ds
add
insl
sub
fmuls
mov
enter
loope
lods
out
cs
xchg
movsb
mov
xchg
push
ja
mov
xor
jl
jmp
dec
xlat
xchg
mov
sub
outsb
dec
push
sahf
xor
mov
add
jne
pusha
popf
pop
sbb
hlt
add
incl
add
jg
or
mov
mov
shll
sub
and
in
adc
pop
rcrb
pushl
xor
inc
push
jb
je
aam
xor
xchg
movsl
outsb
mov
xor
outsl
cli
jnp
lods
popa
jg
xlat
pop
repz
push
movsb
dec
or
scas
mulb
or
add
cmpl
bound
sub
mov
in
clc
adc
xorl
or
sbb
insl
enter
aas
lods
inc
mov
shll
jmp
in
fstpl
cs
sub
stos
test
ja
std
xchg
mov
lea
cmp
xor
dec
cmpb
adc
add
xor
sar
pop
dec
pop
sarl
mov
mov
jmp
mov
jecxz
pushf
fwait
pop
mov
mov
xchg
cmp
mov
add
sub
scas
fdivr
fnstcw
jecxz
test
dec
cmc
add
incl
add
hlt
or
daa
mov
pop
adc
pushf
sub
or
mov
cmp
daa
and
push
movd
add
in
data16
pop
enter
repz
mov
sbb
mov
popf
fs
xchg
fs
mov
jns
ja
in
repnz
mov
xchg
es
repz
mov
xor
or
clc
jns
outsb
outsb
push
or
add
int
fwait
in
fists
sbb
xor
repz
in
loop
fsubrs
xchg
and
std
xchg
mov
pop
dec
xchg
insl
das
or
fstl
or
adc
aaa
jns
js
xchg
sbb
lock
test
imul
addr16
in
jns
inc
popf
sbb
sbb
stc
shl
imul
or
int
enter
xchg
mov
push
data16
enter
add
ret
add
xor
jb
jae
rcr
fucomi
inc
testb
incl
add
lret
lcall
adc
mov
rorb
inc
or
inc
mov
lret
sbb
fsubs
rcl
jbe
add
inc
js
mov
xorl
loope
cmpsl
mov
pop
inc
cwtl
aas
cmpsb
sub
call
in
jge
mov
sub
push
out
add
jns
push
lock
lods
scas
push
cmp
leave
call
insb
pop
addr16
je
inc
nop
jns
das
pushf
loopne
jge
sbb
mov
repnz
and
inc
jmp
cmp
out
lods
mov
jg
movsl
rcrl
test
sahf
int3
lcall
push
rcll
pop
xchg
push
jnp
and
and
pop
and
pushf
mov
xor
xor
mov
jecxz
inc
and
addr16
mov
cmc
cltd
inc
xchg
pop
add
dec
add
ds
in
idivl
js
mov
std
popa
mov
testl
add
adc
xlat
fldenv
imul
pop
es
add
in
lea
insb
pop
cmp
sahf
pop
push
out
jnp
push
outsb
fnstcw
or
cmp
cli
cmpsb
mov
mov
inc
cs
mov
lret
jns
jg
lds
out
scas
and
lds
jecxz
insl
aaa
repnz
dec
mov
pop
mov
adc
stc
mov
fnstcw
jo
inc
push
mov
push
cmp
push
sbb
sbb
mov
popa
sub
setne
cmpsl
dec
push
xchg
cmp
cmp
cmp
add
aas
cmc
inc
rcl
jbe
jnp
stos
mov
mov
loop
sbb
inc
sub
adcl
xchg
xchg
pop
loop
cld
xor
shll
mov
inc
cli
mov
jg
pop
stc
cmpsl
add
add
jecxz
inc
cli
aas
into
lret
out
mov
add
add
add
aam
cmp
xchg
movsl
clc
inc
adc
leave
popa
inc
mov
adc
imul
out
pop
dec
push
mov
mov
insl
fwait
push
fcoms
add
jae
dec
xor
mov
adc
inc
add
dec
repz
and
mov
inc
enter
lock
std
inc
and
bound
mov
xor
stos
mov
push
sub
data16
std
xchg
scas
cmpsl
cmpsl
dec
cmp
xchg
jne
sarl
jge
repnz
fs
jl
push
mov
in
adc
fsubr
das
cmp
jl
hlt
add
out
int3
jnp
nop
ucomiss
pop
sbb
sahf
xchg
jl
cmp
lea
dec
push
fcoms
pop
out
jne
mov
out
add
lods
lahf
icebp
add
mov
mov
add
imul
jns
add
lcall
xchg
cmpsl
inc
inc
stc
add
incl
add
or
mov
and
jbe
xchg
cmpsb
negl
mov
ret
jecxz
ljmp
rorl
ret
out
fwait
scas
adcb
add
je
mov
mov
ds
add
lret
dec
mov
js
push
lret
outsb
rcrb
add
stos
dec
jmp
mov
sbb
sub
je
cmpsl
in
test
mov
popa
popa
mov
lcall
xor
mov
gs
insb
adcl
andl
jae
fs
mov
xlat
les
loope
fsub
pusha
cmp
ret
jns
addr16
insl
rorl
and
or
fnstcw
shll
adc
inc
dec
pop
pop
sbb
das
xor
outsb
pop
imul
lock
and
sti
movsl
dec
test
add
jne
int3
int
mov
pop
sub
pop
pop
push
add
add
jae
cltd
dec
mov
jno
mov
sbb
inc
cli
add
incl
add
mov
hlt
iret
loopne
and
cmp
xchg
mov
daa
pushf
out
hlt
leave
mov
je
iret
fdivrp
mov
movsb
sbb
shlb
fwait
pop
outsl
adc
andb
xchg
xchg
mov
jns
dec
jb
xchg
test
and
nop
dec
add
aaa
pop
inc
ljmp
adc
aaa
outsl
aam
pop
and
aad
jno
xor
js
fwait
jb
push
sbb
scas
jae
daa
adc
pop
jmp
inc
add
inc
bound
xlat
negl
repz
jno
mov
adc
data16
add
test
inc
shll
scas
cmp
mov
je
andl
testl
into
stos
mov
in
imul
in
push
repz
into
rcrb
loopne
imul
negl
js
or
ret
inc
dec
xchg
sbb
push
cmp
sub
inc
add
push
into
nop
out
cwtl
jle
push
sub
dec
push
pusha
push
mov
incl
add
jmp
xchg
std
mov
movsl
aas
inc
cltd
cs
add
popa
icebp
rol
cld
test
dec
mov
fnstcw
iret
inc
jb
sbb
sub
xor
push
mov
jo
xchg
ret
fs
mov
popa
pop
aam
out
aad
fnstcw
gs
xor
lret
xor
jg
das
sbb
clc
out
mov
or
inc
inc
jns
jae
loopne
mov
in
sbbl
cmp
rorl
xchg
insl
aas
cmp
fistps
jmp
sbb
push
pop
mov
sub
mov
fldenv
xchg
pop
sti
or
push
fs
pop
xor
cltd
mov
and
cmpsl
sbb
aam
jne
pusha
mov
jg
pop
xchg
lret
test
jecxz
test
fcoms
jno
test
jg
push
pop
push
mov
inc
cld
add
incl
add
cmp
ret
scas
gs
push
cwtl
movsb
push
push
fistpll
das
ret
ss
sub
jge
xchg
lds
cli
pop
sub
or
xchg
scas
jno
mov
mov
ficomps
or
sbb
lret
pop
mov
imul
mov
or
lret
sub
xor
xor
daa
xlat
hlt
mov
lcall
das
gs
imul
ljmp
and
xor
inc
pop
stc
jecxz
adc
and
mulb
lcall
aad
ret
hlt
cmp
xor
xor
shlb
movsb
popf
sbb
addl
xchg
ja
sbb
xchg
out
clc
xchg
dec
cmpl
pop
dec
ss
cmpl
pop
jle
loop
nop
add
movsb
push
in
cmc
jne
sbb
js
inc
jb
inc
std
add
incl
add
pop
dec
jle
adc
sub
mov
popa
or
xlat
das
movsb
bound
repnz
fnstsw
cmp
add
jns
ds
repnz
xor
leave
push
xlat
jmp
out
mov
xchg
test
mov
dec
gs
stos
push
je
jle
pushf
jo
mov
sub
mov
push
adc
inc
sub
xchg
pushf
fdivl
push
pop
scas
out
xchg
stos
incb
mov
xor
lock
push
idiv
jb
fs
lcall
int3
or
inc
cmp
cmp
dec
mov
and
popf
xorb
negl
cmp
cmpsb
stc
dec
pop
rcrb
stc
or
mov
subl
fisttps
cmpsl
push
addr16
jns
sbb
pushf
sbb
jp
andb
pushf
in
cmp
bound
int3
add
out
shlb
aas
out
int3
mov
je
xchg
sbb
incb
add
add
add
shlb
sti
movl
aas
mov
jmp
das
xor
sbb
jns
sbb
int3
jnp
int3
xchg
lds
mov
mulb
test
aaa
adc
xlat
pop
aad
mov
cltd
jmp
into
jbe
cwtl
or
adc
mov
xor
inc
repz
xor
xor
out
in
loop
out
fsub
xchg
push
jno
shlb
mov
int3
sub
mov
adc
mov
push
mov
mov
jle
sub
fs
pop
sub
sub
mov
push
shr
jg,pn
fstps
xchg
out
mov
lahf
rorl
into
pop
rcl
cmpl
mov
lea
xor
mov
inc
daa
movsl
rolb
fdivl
xchg
mov
addr16
mov
and
test
popa
cmp
or
mov
and
mov
incl
add
add
add
in
lds
inc
cmp
and
dec
xchg
and
outsl
cmp
jle
popa
push
mov
shlb
stos
subb
lock
call
adc
dec
add
xchg
mov
jmp
int
mov
sti
adc
mov
cltd
stc
inc
outsb
mov
xchg
sbb
sub
mov
mov
sti
orb
jg
lods
inc
aad
dec
sbb
bound
xor
js
popa
in
sahf
jne
clc
stc
xchg
cli
xor
add
cs
ret
sub
mov
xchg
jmp
xchg
pop
ret
mov
add
shll
ljmp
adc
loopne
add
mov
sbb
pop
fisttpl
sahf
push
add
dec
mov
add
xor
loop
in
or
ss
je
and
jmp
pushf
pusha
js
stos
xchg
sbb
mov
add
add
ret
bnd
cmc
inc
stos
repz
cmp
add
add
inc
fwait
and
jb
jb
jo
neg
mov
push
insb
pop
mov
lahf
and
mov
lods
mov
paddq
sahf
jbe
aam
in
dec
sub
scas
mov
bound
mov
shrb
jg
jb
pop
sbb
ret
pop
sbb
inc
ret
sahf
pop
scas
test
add
fisttps
cmp
int
xchg
mov
dec
shrl
mov
ret
jl
movq
jecxz
add
push
insb
push
cli
mov
or
ret
fs
push
pop
lret
cmpsb
das
insl
rolb
mov
push
xor
jb
inc
mov
xor
jmp
sbb
or
mov
xchg
insb
push
xor
lret
inc
loop
int3
sub
and
add
or
inc
dec
ds
mov
pushf
xor
dec
pop
dec
js
pop
xor
add
std
aaa
mov
shll
and
add
incl
add
push
mov
aas
cmpsb
fisubrl
adc
fldenv
dec
jo
inc
xchg
jl
pop
sbb
movsl
mov
push
mov
adc
jl
pop
push
sti
xchg
inc
out
jno
stc
loopne
lock
xchg
ljmp
mov
lahf
sub
xor
cmp
aas
cmp
cmp
jbe
lret
or
ljmp
dec
test
dec
sbb
add
or
mov
xorl
je
xchg
daa
sub
fadd
mov
xchg
insb
addr16
add
divl
out
ss
xor
sarb
testb
dec
xchg
inc
mov
push
leave
push
mov
stos
pusha
bound
fwait
out
mov
js
stos
or
in
cmp
sub
sbb
pop
ja
jb
cmpb
leave
push
mov
mov
bound
insl
aam
mov
scas
add
arpl
cmp
add
add
add
and
jb
adc
and
push
jae
in
cmp
stc
cmp
inc
jp
push
stos
mov
loope
addr16
fwait
adc
jb
imul
insb
sbb
or
in
lds
sub
decl
add
into
icebp
jge
push
cmp
pop
or
xlat
xor
push
in
fdiv
add
into
inc
testb
add
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
bound
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
call
add
add
test
wrmsr
ja
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
inc
push
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
dec
mov
mov
add
mov
test
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
sarb
sub
add
mov
inc
push
mov
shrb
ret
add
mov
cld
test
inc
xor
push
mov
inc
enter
mov
or
add
add
add
incl
cld
mov
mov
xor
and
sub
mov
test
add
xor
add
cmp
jne
mov
pushf
add
add
or
fwait
jne
xor
incl
add
orb
add
orl
gs
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
inc
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
sub
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
xor
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
fwait
clc
xor
inc
xor
pushf
mov
test
clc
dec
inc
mov
xchg
inc
inc
aas
mov
test
clc
pushf
inc
decl
push
movb
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
rorl
test
test
cmp
pushf
xor
add
inc
dec
mov
test
cmp
fdivl
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
fwait
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
fwait
lret
xor
mov
lea
xor
add
inc
dec
mov
gs
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
fwait
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
fwait
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
xor
shrb
clc
add
xor
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
addb
mov
cmp
je
incl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
pushf
movl
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
pushf
inc
push
movsb
jne
push
clc
test
lcall
test
cmp
pushf
add
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
xor
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
pushf
xor
rdmsr
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
fwait
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
fwait
xor
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
jmp
mov
mov
mov
clc
scas
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
scas
loopne
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
pop
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
call
and
call
addl
clc
pushf
decl
jmp
and
and
or
decl
and
pop
cli
in
ret
add
mov
or
jl
adc
dec
push
and
xor
mov
add
or
cmp
sbb
or
xor
or
test
dec
adc
adc
add
jae
add
pop
adc
fidivl
add
movups
popf
push
adc
insl
or
add
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
cmp
add
adc
sub
adc
push
adc
mov
adc
adc
cmp
adc
addr16
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
adc
jle
adc
cld
dec
adc
add
adc
push
insl
adc
fs
add
jge
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aas
adc
jne
adc
fldenv
adc
xchg
push
add
pop
adc
in
adc
leave
sbb
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
cmp
mov
adc
add
adc
dec
insl
adc
mov
adc
mov
adc
rorl
adc
pop
inc
adc
daa
cmp
sub
inc
add
cmp
xor
inc
add
cmp
cmp
inc
add
cmp
inc
cmp
dec
ss
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
pop
add
add
push
add
dec
add
add
dec
add
xor
pop
add
dec
add
cmp
pop
add
cmp
add
push
add
push
add
dec
add
dec
add
inc
add
dec
add
add
add
push
add
pop
add
add
push
add
add
dec
add
pop
add
push
add
xor
xor
pop
add
add
add
add
add
pop
add
dec
add
dec
add
add
push
push
inc
push
jbe
test
test
adc
push
add
add
pop
js
insl
arpl
addr16
pop
inc
inc
dec
bound
popa
push
bound
popa
bound
jo,pn
bound
