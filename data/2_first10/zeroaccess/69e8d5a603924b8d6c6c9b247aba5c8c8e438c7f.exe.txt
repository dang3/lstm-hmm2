add
add
adc
add
add
add
cmp
add
add
add
add
in
sub
movl
mov
adc
mov
movl
xor
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
pushl
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
xor
xorl
mov
notl
jmp
dec
dec
xor
fcoms
jp
testl
jl
jl
mov
xor
xor
ja
or
push
bswap
adc
sbb
mov
or
rol
or
sbb
out
outsl
add
mov
mov
je
fisttpl
jecxz
and
aam
dec
incl
mov
loope
pop
sub
jae
lret
cwtl
sub
mov
loopne
cmp
sub
or
sbb
outsl
insl
jb
cmp
jns
cmp
add
movsb
add
rol
add
jge
mov
daa
sbb
addr16
loop
xchg
lds
repnz
cmc
fcoms
cmp
mov
lret
adcl
mov
xorl
mov
adcl
jmp
inc
in
xor
inc
in
xchg
mov
jl
jl
jl
jl
sbb
dec
daa
daa
adc
adc
mov
push
dec
std
pushf
popf
popa
pop
sahf
das
aad
lds
outsl
jbe
inc
sbb
pushf
sub
dec
loop
inc
and
dec
adc
aam
mov
fildl
addr16
popf
daa
add
cs
in
mov
leave
dec
outsb
pop
iret
xor
pushf
inc
cmp
call
jp
fldt
je
call
jbe
clc
adc
add
mov
repz
ret
mov
arpl
xchg
test
cld
pop
mov
push
sarl
cmp
icebp
aaa
push
inc
into
jge
dec
popf
and
arpl
sbb
mov
xor
xchg
push
push
test
movl
je
and
mov
and
jmp
xchg
or
mov
dec
popa
enter
dec
jno
jg
jl
jl
jl
add
and
mov
imul
les
mov
dec
xor
push
fdivrp
cmp
mov
inc
and
add
mov
mov
test
xchg
lds
sbbb
push
leave
mov
xchg
inc
int
dec
stos
fildl
sti
push
adc
and
push
jge
jb
scas
pop
fwait
xor
add
sbb
sbb
mov
cmp
stc
shlb
ja
mov
mov
fs
mov
lods
sbb
ret
scas
movsl
sub
pop
lret
inc
mov
test
or
fstl
inc
fwait
ds
dec
cld
push
mov
sub
mov
sbb
imul
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
xor
or
dec
mov
jmp
xor
add
inc
mov
add
mov
subl
xchg
xor
sub
or
xor
mov
movzwl
xor
mov
or
mov
mov
xor
jmp
ficoms
loop
sbb
movsb
out
out
adc
jle
jl
jl
jl
jmp
mov
lock
adc
scas
mov
inc
mov
iret
out
xor
lret
pop
and
int3
mov
jo
mov
adcl
popf
mov
fcmovne
pop
aam
pushf
mov
lret
push
jp
lods
rorl
cs
icebp
push
lea
out
mov
sarl
adc
ss
xchg
dec
jb
xor
sub
or
loope
in
cmpl
inc
cmove
mov
mov
movsl
cmp
adc
std
cmc
mov
cmpsb
cmc
push
loopne
mov
push
ds
jmp
aaa
xchg
fadds
jmp
add
repz
lods
addr16
jge
stc
icebp
sahf
das
cmp
inc
jle
jl
jl
jl
mov
scas
gs
inc
dec
lea
jecxz
lcall
nop
add
scas
ljmp
lods
add
dec
dec
rorb
dec
adc
movsl
faddl
sub
jne
pop
leave
dec
add
lods
cltd
jge
cltd
fstps
mov
push
mov
decl
mov
movsl
inc
in
int
hlt
push
in
pop
xor
and
sub
addr16
push
rcr
jmp
or
loope
and
daa
subl
mov
push
push
movsb
in
and
xchg
push
rcrb
and
es
jno
pop
xchg
or
cld
fs
fnstsw
sbb
mov
sbbl
xor
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
mov
mov
movl
je
mov
xorl
xor
jmp
in
iret
lcall
mov
lods
mov
jl
jl
jl
add
sbb
mov
push
popa
out
sbb
std
push
and
lods
movsb
imul
shrb
ljmp
clc
int
cs
pop
xor
mov
mov
jl
dec
imul
mov
mov
pop
lock
in
inc
mov
and
out
xchg
jb
mov
adc
lock
bound
xchg
mov
dec
subl
adc
mov
jp
cs
add
or
loope
testl
adc
ss
imul
mov
xchg
push
insb
cmp
enter
jo
ret
movl
cmp
movl
jne
pushl
addl
call
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
fdivr
ljmp
into
outsl
inc
lea
jl
mov
xor
rorl
dec
sub
lret
ret
stc
int3
push
outsb
stc
xchg
mov
movsb
lahf
data16
jge
adc
or
mov
adc
rorl
std
jne
add
dec
fbstp
jnp
shll
xlat
sbb
loope
mov
push
pop
and
outsb
fidivs
or
adc
mov
stos
iret
pop
and
or
sub
jle
mov
lods
xor
testl
sbbb
in
leave
test
cmc
popf
mov
jg
and
stos
or
hlt
das
pop
loope
mov
mov
cmp
pop
scas
fsubrl
sbb
adc
or
inc
add
aam
inc
add
xor
adcl
add
movl
cmp
movl
je
subl
pushl
jmp
js
dec
mov
jnp
hlt
push
cmpsb
imul
jl
mov
outsl
mov
mov
jno
sbb
mov
lahf
sub
xchg
add
jnp
or
fisttpl
insb
shlb
in
jbe
scas
dec
adc
dec
ds
ret
cltd
and
add
inc
mov
les
movsb
mov
mov
iret
and
dec
push
out
xchg
dec
cmp
or
xor
push
movsl
and
pop
jb
pop
es
xchg
clc
sti
loopne
add
fnstenv
mov
sbb
scas
xlat
dec
stos
dec
mov
push
add
jb
jnp
js
mov
nop
inc
dec
adc
lret
es
scas
lea
mov
xor
pushl
call
jmp
cld
mov
mov
dec
mov
aad
pop
imul
jae
jl
jl
jl
xor
cltd
cmp
add
lahf
adc
jno
mov
mov
iret
fmull
out
movsl
push
push
inc
sub
movsb
sub
data16
cmpsb
jp
dec
sub
sarb
popf
pop
pusha
xchg
movsl
movsb
mov
mov
sub
mov
cmp
je
aaa
outsb
jno
pop
ret
inc
in
cs
in
sub
fwait
or
daa
and
insb
adc
inc
adc
in
push
xchg
pop
pop
xchg
pop
hlt
outsb
scas
mov
in
pop
xor
push
sub
xor
pop
repz
sbb
mov
mov
add
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
subl
jmp
inc
adc
jns
lret
push
insb
jno
xor
xor
jb
jl
jl
jl
repz
pop
sbb
add
scas
ss
cld
mov
mov
mov
mov
inc
outsb
sbb
movl
adc
fnstsw
sbb
jecxz
xlat
mov
pop
test
dec
pushl
fcos
es
sub
adc
push
push
loopne
inc
inc
cltd
sti
sbb
scas
cltd
mov
pop
lcallw
mov
fwait
cltd
incb
lahf
les
sub
stos
inc
xor
stos
insl
or
sbb
inc
inc
jge
fdivrl
inc
or
mov
in
sbb
xor
rorw
out
xchg
aad
mov
and
mov
mov
andl
add
movzbl
and
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
notl
add
xorl
mov
jmp
cmp
mov
cmp
stc
or
jl
mov
mov
xchg
lret
rclb
inc
test
addps
mov
fsubrl
hlt
sbb
stc
add
xor
nop
push
xor
sbb
xchg
movsl
imul
mov
push
outsl
push
push
jl
test
leave
push
shll
ds
mov
inc
pop
test
movsl
cmp
mov
cmp
sahf
mov
mov
adc
test
jnp
jne
enter
loopne
fcoml
arpl
std
xor
hlt
lcall
jge
xor
ja
mov
ss
push
fwait
popf
aad
lock
pop
out
mov
xlat
std
cld
lret
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
xor
mov
jmp
xor
mov
sub
shll
jl
jl
jl
jmp
loopne
push
in
mov
mov
fildll
inc
add
outsb
mov
cld
inc
push
gs
int3
jo
mov
gs
mov
sub
jo,pn
pop
stos
adc
mov
adc
xor
push
mov
jl
mov
mov
cmp
fbld
imul
push
rorl
pop
out
imul
jno
loop
cltd
inc
ds
sti
jle
sbb
pop
jle
pop
pop
jb
fs
and
lahf
xor
in
in
sbbb
mov
rclb
pushf
pop
mov
cmpsl
stos
outsb
inc
pop
mov
mov
add
lea
mov
push
pushl
jmp
pop
jecxz
xchg
mov
jb
daa
lock
je
jl
jl
jl
rcll
cmc
sub
inc
ljmp
shlb
aam
sti
rcll
fwait
pop
lea
dec
in
xor
xor
insl
je
mov
insl
mov
test
mov
daa
jge
sbb
dec
mov
fdivs
mov
ss
xor
pop
out
push
jmp
jp
xor
imul
clc
adcl
inc
jne
fadd
mov
mov
outsb
add
imul
add
pop
lret
out
add
jmp
lods
js
inc
divl
in
ljmp
inc
dec
add
push
push
mov
sub
pushl
jmp
or
mov
mov
push
int3
xchg
xchg
int
inc
fadds
cmp
jl
jl
jl
pop
repz
mov
mov
out
lock
dec
sti
jp
xchg
insl
or
cmpsl
pop
adc
jb
insb
icebp
mov
sub
aam
mov
sbb
xorl
fsubs
test
pop
addb
add
punpckhdq
fisubl
and
popa
xchg
jl
popf
nop
pop
mov
jmp
sbb
mov
mov
lahf
loope
leave
daa
sbb
loope
testl
cmpsl
mov
jecxz
inc
adc
add
movsl
ja
mov
sbb
rcrb
xchg
sub
jg
nop
inc
inc
mov
mov
call
mov
mov
xor
add
cmp
jne
jmp
dec
xchg
pop
add
arpl
adc
pop
pusha
ja
jl
jl
jl
rcrl
xchg
mov
cmp
into
or
inc
and
sbb
xchg
push
pop
cltd
inc
in
enter
enter
or
lret
cld
sbb
and
jae
sub
scas
and
jp
mov
xchg
jbe
xchg
fcmovnbe
xchg
aad
scas
push
pop
jns
inc
std
xchg
adc
iret
and
test
ss
std
jbe
push
mov
or
inc
mov
xchg
jno
hlt
rol
std
jno
loopne
dec
std
mov
pop
mov
or
lds
imul
push
ja
movsl
adc
movsb
bound
or
jb
shrl
push
gs
iret
repz
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
jmp
lods
adc
ljmp
cltd
pop
xchg
jbe
jl
jl
jl
mov
repz
mov
aad
inc
xchg
push
fistps
sub
test
xor
mov
push
push
sbb
repnz
andb
adcb
addr16
fistpl
mov
ss
outsl
mov
adc
push
daa
outsb
pmaxub
pop
push
dec
jno
cmpsb
xchg
xchg
pop
xor
mov
dec
xchg
ss
sub
aam
mov
andl
pop
xor
fiaddl
negb
xchg
fwait
iret
dec
xor
enter
dec
movsb
or
inc
nop
aas
dec
push
hlt
cwtl
xchg
jo
sbbb
push
push
std
push
adcb
dec
lds
movsl
mov
or
fstl
or
inc
cld
mov
jmp
xchg
sub
cltd
cmp
mov
mov
jl
mov
push
scas
movsb
mov
subb
movsb
loope
cmp
push
mov
ljmp
lahf
pop
pop
and
lcall
cmp
out
mov
subl
mov
xchg
fsubr
add
in
mov
out
inc
xchg
out
lods
pop
xchg
hlt
fistpll
mov
push
aam
into
aaa
jne
push
jp
xchg
fdivp
test
jl
mov
add
add
sub
mov
lahf
clc
cmpsl
les
popf
pop
jle
rcrl
pop
das
ss
int3
push
lods
jne
push
cltd
in
rorl
cmpsl
sub
lret
cltd
sbb
fidivl
xlat
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
jmp
cmp
cli
test
push
mov
add
jl
mov
cmp
jb
mul
lahf
clc
addb
out
cmp
or
in
leave
jg
mov
or
mov
ficompl
or
mov
add
mov
fs
fcomip
jns
push
mov
dec
xlat
pop
mov
push
ret
psllw
ljmp
push
popa
inc
fidivl
push
jnp
push
idiv
sub
push
inc
mov
xor
je
fcom
jge
in
or
push
cmc
push
out
cwtl
lea
xor
cmp
jg
jge
mov
xchg
xchg
inc
sbb
adc
das
mov
xor
add
mov
jmp
and
rep
lods
sti
pop
xorl
inc
xchg
dec
or
jl
jl
mov
enter
movsb
test
ljmp
adc
cmp
dec
cld
leave
pop
pop
or
movsb
dec
mov
cmpsl
xchg
mov
and
fs
test
shrl
cwtl
push
xchg
mov
stc
mov
lds
mov
push
inc
les
and
cmp
add
mov
jecxz
dec
js
je
jge
cmpsl
outsb
mov
out
push
mov
push
enter
test
push
pop
add
pop
sub
insb
test
repz
ret
addb
adc
mov
dec
mov
les
xchg
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
jmp
xlat
pop
cmp
pop
insl
jnp
sbb
mov
push
pop
decb
jl
mov
push
xlat
lods
in
push
push
mov
mov
push
mov
mov
mov
pop
dec
xor
sbb
das
and
xchg
fldt
cli
xor
fcoml
fs
dec
mov
pop
ficoml
cmp
adc
xor
or
in
cwtl
lds
mov
addr16
xor
sti
gs
lret
adc
fs
pop
or
inc
mov
xor
sub
aam
mov
ds
test
lret
andb
adc
das
shlb
dec
fidivs
dec
push
rclb
fwait
and
hlt
sbb
pop
cli
imul
mov
jmp
mov
mov
xor
jmp
fsub
mov
clc
mov
mov
stc
and
jl
mov
dec
flds
push
shlb
or
pop
cmp
out
dec
iret
xchg
mov
bound
jl
xchg
fimull
fidivrl
mov
mov
cmp
repnz
pop
sbb
xorl
mov
ret
push
fwait
leave
and
add
jb
push
mov
shrl
xchg
rcrl
or
lock
lahf
std
repz
in
push
arpl
cmp
or
push
push
add
pop
bound
cmp
mov
inc
cmp
out
cmpsl
fdivrl
inc
hlt
jmp
pop
fimuls
cltd
push
mov
inc
pop
push
jl
mov
or
pop
push
int3
adc
popa
pop
mov
jbe
jge
rorl
rolb
add
xor
jae
mov
mov
imul
int
mov
sbb
shll
sbb
pop
js
pop
pop
daa
add
push
cli
pop
and
mov
sbb
jg,pn
pop
pop
enter
pop
out
mov
dec
outsb
push
mov
cmp
mov
cmpsb
jbe
push
out
push
and
test
punpckldq
mov
pop
jo
aaa
mov
xor
jno
push
int
scas
jle
cwtl
add
xor
lea
add
call
xor
inc
cmp
jmp
jmp
inc
insb
jns
jmp
loope
pushf
adcb
jl
jl
jl
out
cmpsb
sbb
mov
test
xchg
sbb
and
stos
lret
adc
shll
es
imul
mov
addr16
shrl
mov
pop
leave
jb
sbb
cmp
or
std
adc
cli
cmp
sahf
sti
mov
or
cltd
and
out
test
jl
mov
popa
popf
cli
sub
loop
movl
xchg
mov
and
insb
ja
roll
push
mov
or
cmp
cmp
fimuls
cli
aaa
stc
xor
scas
dec
inc
mov
sahf
push
out
xchg
shll
addr16
repnz
test
inc
sub
cmc
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
jns
inc
ds
mov
push
xlat
stc
mov
mov
dec
int
cmpsb
leave
iret
pop
jae
push
lock
cmpsb
loopne
negl
sub
dec
mov
mov
leave
int3
out
xchg
add
je
cltd
std
fs
xchg
lcall
sbb
repnz
test
jecxz
xor
adc
rcr
in
and
and
sub
adc
int3
add
adc
fmuls
cmp
xchg
fcoms
inc
mov
add
xor
loop
lods
and
xor
icebp
pop
cwtl
sahf
in
inc
aas
jmp
sbb
push
sti
int3
lcall
pop
mov
inc
mov
inc
add
jmp
in
test
sti
mov
repz
jl
mov
jno
dec
daa
cmpsl
mov
lods
inc
xor
int
icebp
mov
inc
cmp
cmp
cmp
jecxz
popf
xor
cwtl
lods
shll
in
outsb
or
push
les
out
add
in
mov
mov
shl
jne
lret
and
sbb
scas
in
das
mov
inc
movsl
mov
fstl
icebp
mov
scas
sarl
das
scas
shlb
in
add
fisubrl
xorl
cmp
push
lods
imul
dec
or
xor
ja
jp
dec
xor
add
jmp
dec
jge
cmpb
jge
push
loope
sub
ja
mov
jl
mov
sar
xchg
sub
cmp
adc
in
push
cmp
sbb
sbb
aam
adc
data16
adcb
mov
mov
xor
pop
push
lcall
push
das
xor
cmp
shl
movsb
out
pop
jecxz
sahf
jg
sbb
mov
jle
jb
adc
rclb
xchg
and
lret
mov
mov
stos
push
ret
fcomps
sub
icebp
xchg
or
adc
addl
xor
idivb
mov
push
mov
pop
lret
clc
mov
mov
and
cs
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
call
mov
dec
mov
jmp
mov
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
jmp
sbb
insl
std
pop
mov
xor
jl
into
jg
jl
push
nop
imul
gs
push
dec
push
jnp
cmp
icebp
fsubl
add
mov
sti
push
sti
mov
jnp
sti
subb
test
add
int
loop
daa
pushf
rolb
in
rclb
cld
add
std
mov
fisubrl
push
test
mov
out
lret
or
inc
mov
enter
js
outsl
bound
iret
ljmp
jno
test
lret
lock
das
iret
dec
push
push
pop
inc
add
pushf
xchg
sbb
lcall
popa
sub
adc
ss
aad
aam
jno
jns
mov
push
aaa
int3
outsl
sbb
shrl
jns
push
cmp
mov
jno
pushf
pusha
adc
push
fcoms
jb
jg
mov
ja
movsl
loop
jp
popf
rolb
cmp
mov
sub
popf
mov
xchg
push
inc
lods
xor
sbb
or
dec
mov
shrl
add
popa
xchg
lret
div
int
filds
lcall
jmp
arpl
adc
inc
cwtl
int
jns
push
std
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
jmp
jp
pop
cmp
jge
mov
push
idivl
popf
lahf
dec
add
jg
jl
jl
aaa
cmpsb
sub
cmp
mov
test
loop
aam
push
lds
adc
sub
pop
ret
sbb
int
ss
lret
or
int3
inc
in
repz
sbb
fsub
cmp
stos
aam
mov
in
mov
dec
sahf
aad
ds
push
out
xchg
jo
pop
add
dec
rep
inc
or
xor
sbb
test
inc
into
dec
jge
adc
rclb
enter
sahf
popf
xor
or
enter
jp
std
jp
in
lea
xchg
jg,pn
nop
movl
mov
arpl
lods
mov
mov
ds
push
xchg
lds
idivb
das
ljmp
rorl
mov
mov
xlat
xchg
xor
mov
adc
xchg
pop
sti
mov
mov
jecxz
cmpsb
outsb
jbe
mov
lret
int
dec
cmp
add
repz
or
fidivs
mov
popf
or
adc
jb
in
lcall
lock
mov
dec
test
repnz
add
jbe
pop
mov
jmp
jno
in
cli
insl
cmpl
mov
jl
into
jg
jl
dec
les
das
cltd
std
fldenv
add
leave
adc
push
or
mov
loopne
aaa
xchg
and
cltd
ret
dec
push
jp
repnz
rclb
shll
or
mov
loope
xchg
std
cmpsl
push
jbe
scas
fisttps
jge
cmp
inc
orb
jno
xchg
and
out
into
shl
pop
and
in
testb
dec
inc
pop
xor
addb
lret
sub
xor
fstpl
mov
xchg
and
mov
jae
push
mov
cmp
icebp
in
push
pop
ja
xor
popa
xchg
pop
ret
sub
cmp
add
sbb
xor
mov
repz
and
pop
nop
arpl
jmp
adc
icebp
inc
jmp
roll
pop
jnp
push
jnp
jge
in
out
fsubl
sti
lods
lret
push
jno
jne
sbb
and
push
fcompl
dec
sub
pop
mov
jb
daa
rdpmc
push
gs
mov
test
out
mov
daa
mov
stos
ss
inc
data16
loop
sbb
pop
cmp
pop
pop
leave
ret
push
mov
mov
add
mov
movzwl
or
sub
mov
or
mov
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
pushl
call
jmp
mov
addl
xor
cmp
je
mov
xorl
jmp
rolb
loopne
dec
push
mov
call
add
jl
jl
xchg
cli
lcall
mov
aam
gs
and
lret
iret
pop
jbe
dec
mov
mov
outsl
bnd
fcoml
js
adc
inc
lods
push
sbb
cmovnp
inc
adc
inc
or
popa
bound
stc
rcrb
orl
into
js
repnz
adc
shll
jg
nop
lods
sub
cmp
xchg
jp
jg
movsl
sbb
xchg
pushf
cs
fisubl
xchg
jmp
sahf
and
cwtl
inc
js
cmp
fucomp
mov
cmpb
add
jl
jl
ret
or
pop
int
insl
scas
rol
push
sub
cmpsl
stos
movsl
shrl
jne
cmp
sub
mov
mov
test
cltd
out
or
out
adc
jne
jg
int
out
popa
pop
dec
push
testl
and
adc
or
data16
xchg
cltd
cmp
in
xchg
imul
aad
loope
mov
sbb
aas
jg
lds
dec
sbb
jne
mov
add
jmp
mov
xor
jmp
ficomps
mov
adc
or
add
jl
mov
mov
adc
push
dec
dec
cmc
popa
push
sub
mov
scas
xchg
mov
inc
sti
xor
data16
pop
jp
mov
sbb
cmovae
outsb
xor
out
mov
js
filds
xor
mov
xor
lret
pop
inc
add
or
push
push
arpl
and
adc
dec
loope
mov
out
inc
xor
xchg
cs
aas
mov
fcoml
or
sub
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
push
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
xorl
mov
movl
mov
xor
movl
xor
mov
and
jmp
loopne
enter
sti
in
cmp
jg
mov
jbe
jl
xor
jl
inc
dec
lahf
jno
pop
push
testb
jle
fnstsw
rorl
into
cmpsl
arpl
scas
cmp
xchg
shrb
int3
insl
punpckhwd
pop
sbb
int
add
pop
les
lahf
mov
and
jno
mov
outsl
sub
ret
pop
les
inc
push
ljmp
nop
sub
cmp
scas
pop
mov
testb
dec
inc
jle
test
imul
sub
clc
sbb
and
pop
ret
and
pop
aas
data16
xchg
das
and
imul
xchg
mov
pusha
popf
pop
je
xadd
test
iret
mov
push
repnz
and
sbb
and
out
fadd
movsl
mov
fmul
sbb
push
and
inc
add
fldl
cwtl
xor
add
or
push
fnstenv
add
out
or
cmp
push
jnp
int
test
repz
and
popf
mov
and
fs
scas
inc
push
jbe
mov
push
push
pop
mov
out
jg
je
mov
cs
in
dec
sub
push
mov
mov
xor
mov
add
adc
mov
mov
mov
sub
xor
mov
xor
not
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
movl
adc
movl
movl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
movl
movl
movl
or
mov
movl
xor
or
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
mov
orl
jmp
std
xor
mov
add
test
inc
aam
pop
jl
xor
jl
mov
xchg
lds
cmpsl
fsubp
in
xor
hlt
xor
es
xor
and
loopne
in
mov
pusha
lahf
negb
dec
out
or
xchg
mov
adc
shl
les
xchg
push
imul
sbb
mov
add
fists
mov
sub
std
cltd
xor
push
mov
jl
sarl
lahf
jnp
pop
mov
dec
add
scas
and
pop
lret
ljmp
sbb
jns
pop
test
sbb
loop
ja
js
fisubs
lds
pop
in
loope
scas
lea
adc
add
sub
mov
je,pt
ss
push
and
xchg
fst
xor
out
push
sub
imul
pushf
test
cmp
outsl
push
push
fists
ja
mov
pop
pop
cmp
outsb
jo
cli
sbb
push
lahf
sbb
sub
pop
pop
les
pop
shlb
mov
jb
pop
xor
sbb
aam
popw
sub
pop
test
es
loope
cmpsb
mov
mov
sub
adcl
mov
xorl
xor
xorl
add
movl
cmp
movl
jb
xor
mov
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
call
jmp
xor
mov
mov
sbb
add
jmp
jno
movsl
imul
pop
clc
sub
cltd
sbb
jg
jl
vmaxss
xor
xor
ja
dec
int3
xor
xchg
push
push
dec
in
pop
popf
inc
inc
dec
push
sbb
lods
inc
xchg
shrl
gs
lahf
dec
fcmovb
imul
jne
push
jno
sbb
out
dec
dec
adc
faddl
or
jbe
cmpb
ljmp
push
outsb
add
mov
cmp
insb
adc
sbb
arpl
addr16
jecxz
dec
cmpsb
jne
push
movsl
sbb
inc
sti
sbb
pop
call
push
adc
or
dec
jb
xor
sub
dec
pop
or
add
and
push
mov
mov
pop
std
add
inc
push
repz
and
popa
lods
imul
sbb
push
cmp
sub
jecxz
sub
jns
jg
cld
adc
mov
rolb
in
subl
out
fbstp
cmp
mov
xchg
inc
dec
and
out
jnp
inc
iret
das
cmp
pop
xchg
adc
call
cmp
pop
fnstsw
or
push
inc
inc
jne
stc
or
and
in
sarl
arpl
push
pop
inc
cmpsb
cli
ret
cmpsb
es
add
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
imul
mov
mov
sbbl
sub
cmp
ja
add
mov
xor
notl
add
movl
jmp
movzwl
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
dec
xchg
call
sub
adc
das
xor
jl
jg
jl
scas
fbstp
out
negb
lds
jl
je
subl
add
xlat
les
sub
mov
cmp
and
bt
push
xchg
jae
cld
cmp
push
jb
dec
test
jnp
and
test
mov
inc
adc
xor
int
xor
push
jne
insl
push
ljmp
rcll
cld
ficomps
adc
push
add
adcb
sti
je
sahf
xchg
enter
dec
pop
jl
roll
inc
fisubl
push
sbb
and
test
cmpb
in
popa
mov
adc
aas
lea
movsb
sbb
leave
xchg
fstpl
dec
push
adc
lods
rcrl
in
cltd
push
adc
gs
sahf
scas
into
fldcw
xchg
sbb
jno
leave
sub
popf
aaa
test
adc
scas
pop
xor
mov
jo
inc
lock
jmp
xchg
cltd
loopne
mov
pop
stos
addl
inc
das
lods
out
scas
lods
xchg
mov
outsb
insl
jecxz
jbe
das
insb
pop
mov
scas
js
dec
inc
pop
fsubrs
je
shlb
clc
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
jmp
sbb
cs
mov
cmovae
jl
xor
jl
hlt
aad
sbb
pop
jp
push
push
xor
add
sahf
ret
xchg
adc
imul
xor
mov
adc
shlb
loope
inc
mov
lret
in
test
inc
pop
sbb
ret
sub
call
aam
movsb
testl
mov
ds
in
out
pop
ljmp
push
pop
inc
popf
cmpb
mov
mov
and
mov
mov
flds
xor
sahf
adc
mov
push
xor
lcall
mov
insl
int3
dec
iret
sbb
sub
xor
push
ljmp
enter
jnp
jno
mov
mov
mov
test
addr16
popa
and
jns
dec
in
add
jecxz
mov
stos
test
lock
into
cmp
fcompl
mov
cmp
jae
push
jno
ret
adc
fimull
test
fcomp
lock
enter
lods
pop
mov
jne
adc
sbb
xchg
sti
sbb
pop
testl
push
js
xchg
add
add
add
add
cld
xor
xor
jmp
dec
inc
fdivr
fidivrl
gs
shr
test
js
sbb
jg
jl
pop
adc
pop
loope
inc
cltd
shlb
roll
notl
sbb
test
sbb
mov
or
fimull
bound
clc
adc
inc
xchg
aas
dec
pop
lcall
ljmp
inc
mov
xchg
test
sub
push
std
push
dec
push
or
das
fs
xchg
rcll
add
and
mov
jg
inc
arpl
jle
jl
cmpsl
mov
int
xchg
pop
sbb
adc
pop
cmc
and
nop
ja
lret
out
pop
jle
sbb
sub
push
add
jge
pop
lock
pop
inc
int3
adc
out
cmovo
jnp
mov
shll
dec
mov
into
nop
and
mov
call
adc
pushf
rcll
les
les
icebp
bound
inc
push
jno
pop
mov
mov
jge
dec
les
jp
push
mov
bnd
je
inc
xchg
or
mov
insl
mov
add
push
pop
lds
xor
xor
jp
stc
jno
stc
add
imul
mov
jmp
fwait
bound
pushf
stc
insl
fwait
jge
les
out
js
cmpsb
sbb
jl
jae
gs
jge
cmpsl
ja
cmp
dec
push
push
mov
inc
cld
stc
sbb
cltd
cmpsl
pop
test
inc
in
data16
pop
or
push
aas
nop
dec
repz
popa
jl
add
push
or
insl
push
and
call
mov
repz
adc
in
or
lock
sub
mov
insl
jl
stc
xor
jo,pt
popw
imul
mov
das
cmp
mov
fmul
mov
dec
mov
xchg
arpl
imull
or
rcrb
or
cs
mov
int
bound
mov
movsb
cmp
das
pop
mov
loop
dec
jecxz
sbb
ret
in
js
js
ds
dec
mov
out
out
add
dec
cs
out
ret
dec
addl
cmpb
ds
movsl
mov
jp
sti
xlat
repz
sti
es
lret
stos
scas
cmc
pop
xchg
dec
shl
jle
repz
scas
sub
mov
scas
scas
sahf
rcrl
bound
adc
sub
aad
das
pusha
pop
fldenv
sub
pop
or
fimull
hlt
push
fwait
cmp
sbb
fisubrs
ret
mov
jmp
psraw
out
frstor
sahf
jl
fs
jl
xor
jl
dec
fistpll
jo
into
popf
sbb
xor
js
sbb
xchg
or
mov
aaa
insb
pushf
mov
sbb
fsubrs
fsub
jb
cli
cmp
inc
pop
jne
rcl
stos
ljmp
cmp
dec
js
mov
cmp
cmp
jb
ljmp
out
mov
repnz
das
scas
cmpsb
mov
incb
mov
aas
ljmp
inc
inc
movsb
sbb
xorb
xchg
addr16
xorb
repnz
out
inc
pop
hlt
add
lret
cmpsl
inc
mov
mov
ja
dec
clc
xchg
cltd
int
cld
mov
rolb
cmp
jecxz
std
xor
loop
jb
sub
jnp
jl
push
ja
pusha
out
cmp
sub
jmp
bound
mov
xorb
push
fs
sbb
and
jmp
pop
scas
mov
aas
sti
sub
lret
adc
adcl
pop
jno
and
lcall
adc
int3
or
mov
ja
loop
adc
dec
ds
jp
fistpll
fimull
xchg
add
add
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
jmp
mov
dec
stos
lcall
ss
jl
xor
jl
fiaddl
sti
out
sub
xchg
sbb
inc
adc
inc
cmp
push
xor
push
movsl
fisubl
sub
add
sarl
add
rcrb
out
pop
cmp
shrb
hlt
ficoms
data16
sbbb
jl
push
sbb
add
sub
rcrb
or
cmp
scas
loop
int3
pop
inc
dec
jno
icebp
xor
adc
ljmp
xchg
dec
inc
cmp
jns
mov
jbe
xchg
xchg
push
adc
aad
and
inc
aad
cmpsl
and
mov
dec
movsb
mov
jb
dec
in
dec
les
mov
jbe
test
cli
push
sub
data16
cmc
mov
add
mov
mov
test
adc
jl
dec
xchg
imul
scas
inc
loopne
mov
pop
push
xchg
in
mov
into
subb
popf
dec
scas
mov
lods
hlt
or
ja
sbb
stos
aaa
dec
xor
icebp
ds
xor
push
dec
mov
push
jno
mov
loopne
pop
lods
sar
sub
aad
lods
jae
into
mov
push
lret
xor
sbb
ja
ja
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
int
mov
mov
lods
xor
mov
jl
xor
jl
leave
pop
icebp
sbb
push
sub
rcrb
push
insb
sbb
pop
mov
leave
icebp
inc
cmpsl
and
popf
inc
sub
lock
push
ret
mov
inc
add
push
in
fmull
or
movsb
xchg
loope
push
or
shll
jecxz
sti
sub
push
add
and
loopne
test
inc
adc
xchg
xor
xchg
pop
lock
sbb
or
test
or
cltd
and
hlt
pop
dec
test
adc
lret
jecxz
in
push
push
jb
insl
pop
add
xor
ljmp
sbb
pop
push
jns
push
sub
xchg
push
cmpsl
mov
jb
mov
imul
mov
in
test
add
add
push
xchg
adc
xlat
stc
mov
scas
fdivrl
dec
pop
xchg
in
adc
stc
and
aas
scas
dec
bound
sbb
fwait
sub
mov
inc
mov
add
and
dec
rorb
pop
push
push
test
sub
rorb
mov
loop
pop
jp
push
mov
rclb
push
xor
cmpsl
std
mov
add
mov
mov
mov
mov
mov
xor
add
mov
mov
jmp
adc
iret
sbb
and
inc
adc
jg
jl
ss
repnz
inc
pop
ret
inc
push
ja
dec
lahf
aad
sti
ds
ret
cli
aad
or
jecxz
in
push
jmp
xor
xchg
pop
dec
sub
adc
rcll
fldenv
movsl
out
loopne
out
ljmp
lret
popa
cltd
scas
je
mov
cmp
dec
fmuls
xchg
inc
cmp
sbb
jle
arpl
mov
push
push
pop
jecxz
imul
je
xor
jb,pn
movsb
push
add
aam
pop
add
in
or
dec
jge
pop
arpl
scas
aad
cmpsb
add
mov
push
sti
and
adc
insb
jns
pop
clc
fistpll
push
daa
sbb
in
push
andl
sbb
fistpl
ss
cmp
out
nop
cli
mov
call
cmp
pop
xchg
and
or
sbb
scas
pop
dec
mov
les
pop
pop
adc
xor
sbb
lock
mov
movsl
enter
ror
mov
loopne
mov
rep
inc
hlt
aad
hlt
hlt
jmp
push
adc
pop
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
jmp
stos
outsb
cmp
fnstsw
lods
sbb
push
adc
jg
jl
scas
adc
pop
xor
leave
push
stos
jl
cmp
sbb
fwait
xchg
in
inc
jp
pop
shlb
int
rcll
imul
bound
xchg
lahf
clc
xchg
inc
dec
divl
cmpsl
lods
sti
sub
aaa
fisttpll
sub
xchg
data16
jbe
sbb
ja
mov
pop
gs
push
test
dec
std
cld
aas
add
mov
ret
std
js
clc
enter
mov
pop
add
das
incb
fldcw
pop
lods
and
or
jg
roll
popf
jb
xchg
adc
mov
adc
or
pop
or
scas
or
jp
movsl
sahf
fildl
scas
and
fcompl
fidivl
arpl
pop
gs
loopne
jmp
lods
in
insb
pop
ss
fsubl
test
sti
sahf
out
aad
and
pop
mov
xchg
dec
enter
jae
dec
mov
push
pop
sub
lds
icebp
jno
imul
es
sbb
in
sbb
cltd
in
rorl
roll
mul
aam
rclb
inc
aaa
mov
push
icebp
and
push
in
mov
mov
jmp
or
push
cmp
dec
rcll
and
adc
jl
mov
daa
push
add
orb
pop
jle,pt
jo
pushf
stos
push
aam
cwtl
and
addb
in
arpl
notb
jp
test
push
sub
dec
enter
dec
outsl
mov
aad
jle
sbb
pop
mov
pop
out
mov
xor
ljmp
cli
mov
movsb
mov
mov
addl
addr16
loop
inc
adc
xor
sbb
cwtl
jb
cli
in
mov
lret
pusha
adc
push
push
shrl
imul
adc
pop
mov
pop
lods
lahf
movd
cmp
pop
xchg
dec
adc
jl
cli
cld
icebp
add
inc
xor
nop
pop
cmp
insl
ja
pusha
mov
push
cmp
xchg
imul
fnsave
loope
inc
js
sub
or
icebp
xor
jg
rorb
xlat
lcall
stos
pushl
arpl
mov
sub
pop
test
sbbl
mov
incb
aad
pusha
mov
rolb
rorl
scas
xlat
mov
xor
sub
mov
mov
jmp
push
pop
inc
cmpl
jb
je
rclb
xor
jl
test
psrlw
xor
in
pushf
and
inc
mov
add
ret
jno
test
adc
cmp
cmc
ljmp
add
outsl
out
mov
pop
inc
insl
xlat
shrl
lds
hlt
sarb
int
dec
mov
xor
jne
pushf
push
xchg
or
popf
mov
mov
ja
cmpsb
icebp
dec
xchg
movsb
adc
popa
cmc
adc
and
ficoml
leave
pop
dec
scas
mov
mov
mov
adc
std
call
and
or
je
push
fidivs
insl
shlb
stc
mov
push
sub
jp
fldenv
adc
jmp
mov
imul
ljmp
add
mov
rorl
fmull
aad
test
lret
pop
inc
repnz
loopne
sbb
or
and
jg
and
xor
pop
xor
outsb
dec
in
push
inc
xor
inc
test
fistpll
jg
aaa
std
out
cmpb
repnz
aad
inc
sub
pop
push
pop
cmp
push
jge
push
lcall
inc
fsubl
insl
scas
xchg
sbbb
sbb
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
jmp
jecxz
out
jge
sti
mov
pop
cmp
popw
jl
xor
jl
sub
je
nop
cmp
lretw
stc
pop
jae
test
in
xor
lods
jb
out
mov
push
jecxz
jb
fwait
into
push
lea
aam
jno
imul
pop
add
lahf
loopne
push
lods
push
mov
icebp
popf
add
popa
jl
inc
and
ljmp
jae
jno
in
loop
int3
js
jae
into
sub
sbb
jle
pop
call
stos
push
stos
or
ret
pushf
push
sbb
push
mov
jmp
scas
pop
pop
ret
aad
mov
ss
icebp
sub
mov
ret
cmpsb
cmp
test
xor
mov
orl
cmp
adc
movsb
cli
sub
cmp
bound
hlt
inc
sub
pop
pop
in
push
movsl
xchg
cmp
dec
lahf
loop
cmpsl
mov
inc
mov
mov
fldpi
ss
push
es
jne
cwtl
mov
data16
test
xor
jno
test
sub
aaa
fwait
add
fcoml
xor
pop
mov
push
jo
push
in
outsl
movsb
sub
out
dec
ret
pop
and
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
jmp
movzbl
adc
mov
adc
jmp
shrl
sti
insl
fs
push
sub
add
sub
jl
jl
rcll
and
lret
daa
xor
jne
pop
out
dec
mov
pushf
mov
mov
mov
iret
fwait
mov
xor
push
subb
mov
xchg
adc
out
mov
xchg
movsl
add
mov
mov
fldcw
fwait
sub
jp
xchg
adc
adc
xor
jmp
add
cs
outsb
stos
push
outsb
pusha
movsl
adc
cmpsb
mov
or
inc
jmp
jnp
push
enter
arpl
cmpsl
push
inc
test
enter
dec
out
xchg
fadds
leave
ret
lcall
das
xchg
scas
mov
jb
cwtl
mov
daa
add
adc
in
jns
flds
int
test
ret
mov
lds
xor
test
subl
insl
pushf
ds
ret
mov
jp
mov
jmp
shl
xchg
fs
jns
adc
jne
les
jl
jl
jl
mov
loopne
in
mov
adc
aad
xor
mov
fistps
hlt
or
repz
and
fdivr
rcrl
push
xchg
jecxz
into
cltd
dec
adc
jle
daa
push
xchg
leave
cmpsb
in
jnp
fcmovu
stos
in
repz
or
iret
jne
pop
mov
mov
mov
in
mov
shrl
in
cwtl
or
xchg
pop
pop
test
jno
mov
jle
push
xchg
test
sahf
xchg
cs
mov
xorb
inc
cwtl
int
sbb
cmc
sbb
push
loop
add
mov
push
into
mov
dec
psrlq
fstpt
icebp
and
push
lds
repz
rep
mov
imul
ds
xchg
jg
stos
dec
inc
mov
mov
inc
jno
xlat
jp
jne
or
mov
sub
push
or
xorl
xor
add
subl
mov
mov
xor
push
addl
mov
mov
subl
add
xorl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
jmp
enter
inc
lea
mov
sub
dec
sub
mov
bound
push
inc
dec
pop
in
test
mov
clc
icebp
fisttpl
and
jo
push
or
ret
jle
ret
mov
dec
inc
ds
push
cld
aas
or
xchg
fstpt
idivl
sbb
call
aam
test
pusha
pop
push
jbe
lcall
cmp
jp
jg
and
fnstsw
nop
and
adc
mov
xor
pop
stos
sub
pop
and
mov
gs
sub
pushf
pusha
or
cmpsb
in
sbb
ds
insl
sbb
jne
push
or
fwait
or
sub
pop
mov
mov
or
repnz
xor
mov
lock
fsubrl
pushf
outsb
and
outsl
popa
mov
gs
dec
xor
cmp
inc
jecxz
out
pop
add
push
hlt
push
das
xlat
mov
and
sub
xlat
mov
sbb
icebp
mov
and
or
mov
pop
ret
push
mov
push
xor
xor
xor
or
sub
sub
movl
movzwl
adc
jmp
insl
je
xchg
jge
fs
mov
mov
sub
jg
jl
mov
xor
fwait
cmpsl
jmp
xorb
inc
arpl
leave
fildl
mov
dec
repnz
loope
mov
sbb
pop
sub
out
add
outsl
dec
xchg
push
rcrb
arpl
xchg
mov
aaa
inc
mov
inc
push
fists
jae
ret
in
shlb
and
out
insl
jne
push
xor
in
leave
add
repz
jle
or
enter
cmpsb
sbb
jnp
jns
addr16
subb
mov
push
movsl
ficompl
mov
or
data16
xchg
imul
mov
mov
jl
popa
aas
imul
jmp
iret
xchg
nop
lcall
pop
lahf
dec
sbb
ficoml
cmc
push
pop
pop
cmp
bound
mov
repnz
scas
outsl
scas
je
imul
jp
dec
out
in
mov
movl
pop
push
mov
repz
mov
mov
or
mov
notl
jmp
xor
push
jp
fnstsw
mov
push
sbb
jl
lcall
cwtl
imul
mov
push
push
or
add
and
xor
dec
cli
push
ja
add
adc
adc
xchg
inc
mov
clc
aas
mov
inc
mov
bnd
and
lahf
sahf
xor
outsb
es
adc
jmp
jne
push
shl
sbb
mov
xchg
testl
and
xor
fs
ret
dec
addr16
dec
push
add
sti
fnstcw
shrb
push
jecxz
lods
fucomi
sbb
mov
pop
mov
push
xchg
sub
ret
das
enter
shlb
das
pop
fiadds
lret
mov
sbb
mov
scas
sbb
mov
cmp
pop
mov
xchg
xchg
mov
adc
jp
das
stos
inc
lcall
sbb
adc
cmp
popa
pop
pop
rcr
xor
cmpl
mov
in
dec
pop
sbb
out
aad
movups
daa
call
roll
or
test
neg
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
mov
mov
mov
mov
mov
mov
jmp
in
insl
push
jge
imul
mov
pop
fsubrs
jl
jg
jl
in
cwtl
enter
lods
cmp
movsb
fdivrs
iret
das
push
insb
imul
mov
inc
popf
jg
and
mov
outsb
xchg
imul
shlb
shlb
in
push
pushf
lahf
pop
xchg
adc
lods
inc
jne
bound
add
fldenv
adc
outsb
mov
jge,pt
mov
mov
das
in
cmpsb
sub
push
mov
inc
dec
xor
add
aaa
adc
jns
loopne
xor
and
jnp
imul
pop
aad
fsubrl
and
jnp
mov
rcr
and
mov
sarl
fldcw
mov
jecxz
cltd
mov
dec
ret
stc
cmpsl
add
jge
pop
xchg
and
bound
gs
cmp
push
test
cmp
sahf
adc
cmpsl
aad
inc
out
jg
mov
mov
or
inc
and
adc
test
jmp
pop
loope
sbb
lret
mov
cmp
sbb
in
jl
sbb
jl
xchg
sahf
and
sbb
dec
xchg
repnz
sub
in
push
xor
pusha
jae
mov
sbb
xor
and
cltd
out
mov
test
jge
cvtpi2ps
dec
scas
xor
popf
or
movsb
adc
pmulhw
repnz
mov
fs
xor
out
jecxz
repnz
push
or
aad
push
cmpsb
fldl
and
fdivr
ret
aad
sbb
dec
xor
or
and
fistl
adc
out
or
outsl
fistpll
jnp
mov
lods
or
es
add
fidivs
into
inc
cmc
cmc
inc
je
sbb
pop
sub
and
cs
jae
icebp
cld
bnd
fidivs
lods
or
aad
or
scas
xor
cmp
xchg
mov
pop
jge
mov
mov
fsubs
xor
jo
outsb
test
es
and
sahf
scas
mov
cmpsl
outsl
in
pop
jmp
ja
dec
lret
xor
xor
les
lods
cmp
test
add
add
add
leave
ret
push
mov
sub
adcl
jmp
or
dec
or
dec
aad
aas
adc
and
jl
or
xor
push
fisubrl
int
pop
fcompl
imul
jmp
or
or
aam
mov
lods
add
pop
jne
jo
subl
shl
clc
out
pushf
mov
aaa
push
jmp
jmp
das
mov
cmpb
adc
pop
and
mov
cld
rcrl
cmp
bound
pop
adc
es
ret
negb
sub
lods
outsb
fs
test
repz
or
aam
cmc
cmp
ret
scas
in
cmp
add
out
fs
cmpsb
stos
mov
mov
jle
jp
pop
inc
mov
es
xchg
mov
cwtl
iret
scas
ljmp
mov
bnd
clc
mov
hlt
lahf
add
popf
das
incb
dec
lcall
pushf
mov
xchg
lock
popf
fsubr
test
or
pop
pop
adc
addr16
addr16
cs
cmp
mov
xor
mov
inc
sahf
pop
mov
inc
lock
subl
mov
neg
movl
adc
movl
mov
xorl
push
orl
push
adc
push
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
out
sub
sub
jmp
xchg
in
jge
xchg
and
jg
jl
movsl
cmpsl
scas
mov
out
xchg
mov
mov
sbb
add
pop
xor
adc
add
or
loopne
fsubrs
sti
and
addr16
or
aam
sub
sbb
adc
cmp
rcr
fsubs
loopne
add
or
mov
cwtl
fisttps
out
fcmovnb
into
rcr
imul
dec
in
nop
xchg
lods
adc
scas
push
leave
rclb
mov
insb
out
cmp
stos
imull
out
push
xchg
popf
out
hlt
adc
divl
pop
ljmp
push
jns
jb
addr16
pop
add
loopne
movl
hlt
jge
add
push
das
push
push
es
test
ds
jl
enter
sub
cmp
pop
sbb
mov
insl
fwait
addb
outsl
mov
mov
jns
sub
bound
adc
push
out
pop
add
add
pop
mov
xor
movzwl
xor
mov
jmp
icebp
popa
jno
loope
mov
add
std
je
xsave
jl
or
cmp
test
enter
xchg
popa
push
push
and
imul
jns
xchg
push
jne
or
into
mov
ljmp
rcll
cmc
adc
hlt
sbb
inc
fwait
push
es
xor
xlat
and
fbld
aas
roll
sub
and
stc
adc
cmpsl
sbb
loopne
sbb
into
xor
jl
cmp
cld
sbb
cmp
movsb
fwait
nop
inc
je
push
adc
imul
sub
jns
xchg
fdivrl
push
fnstcw
lods
dec
adc
sub
jns
add
rorl
mov
and
sub
outsl
xlat
scas
stc
dec
lret
pop
sahf
inc
subl
add
scas
mov
jg
lds
and
push
out
jmp
lahf
adc
jo
mov
and
pusha
mov
dec
xchg
fnstcw
adc
inc
dec
dec
test
cmp
loope
add
mov
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
movl
movl
movl
movl
or
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
call
jmp
xor
mov
addl
xor
sbbl
add
mov
orl
movl
movb
or
mov
xor
add
sbbl
mov
decl
mov
xor
adcl
add
xorl
push
mov
xor
sbbl
add
xorl
push
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
xor
mov
negl
xor
add
orl
jmp
sarl
sarl
sub
andl
jg
jl
xchg
stos
dec
ret
jecxz
cmpsb
mov
cmpsl
popf
repnz
ds
dec
mov
mov
or
js
mov
in
loope
mov
fcomps
lods
xor
fsubs
loopne
dec
test
and
and
push
sub
lods
lds
jl
adc
add
jecxz
inc
and
mov
xor
decb
inc
dec
xor
jg
int
imul
adc
scas
sbb
shrl
imul
sub
cwtl
inc
rol
sar
jb
sbb
mov
adc
or
lret
mov
pop
mov
or
popa
push
ret
lock
in
adc
inc
push
cmp
sti
sbb
out
mov
stos
xor
xchg
pop
cli
jge
dec
xlat
sub
jae
test
adc
ss
mov
sbb
pop
pop
jp
inc
jecxz
ret
add
and
xlat
pop
pop
mov
gs
int
pop
pop
nop
mov
cld
sub
pop
adc
inc
mov
add
in
add
or
dec
dec
inc
add
jne
addl
jmp
push
repz
adc
pop
nop
dec
and
jg
jl
inc
adc
xchg
rcr
shl
mov
data16
mov
adc
push
jno
ret
sbb
xor
xorb
dec
adc
enter
jbe
in
sbb
sub
cltd
mov
jno
push
inc
sbb
push
std
rcrl
jbe
cmp
pop
fbstp
pop
int3
lock
into
rcll
outsl
push
sti
mov
sub
mov
aaa
fcomp
xor
sahf
rcl
cmc
push
cmp
add
loope
mov
out
fs
mov
dec
test
mov
imul
adc
sbb
cmp
mov
lods
rorb
inc
das
inc
jne
out
mov
xchg
imul
fistpl
add
das
flds
add
push
sti
inc
addb
pop
into
movsb
gs
dec
jno
sub
push
add
cmc
fsts
std
mov
add
pushl
jmp
xchg
pop
cmpsl
inc
adc
sub
xor
jl
jg
jl
push
cwtl
pop
adc
lea
cmp
mov
cmpsb
add
cltd
sti
rcll
push
sub
das
test
insb
int3
int3
adc
mov
int3
mov
pop
shll
xlat
cmp
inc
mov
mov
fs
mov
xor
or
add
cmp
int
xorb
mov
add
les
das
ret
jle
repz
insb
dec
sahf
data16
outsb
stc
pushf
xlat
dec
loopne
in
int
xor
test
and
movsb
sub
lcall
mov
mov
cmpsl
ret
mov
push
mov
fisttpll
adcb
and
jb
sbb
xor
nop
jl
cwtl
dec
inc
sahf
lods
test
loop
or
out
fcmovnb
addr16
mov
jns
xor
jo
ret
sarl
adc
pop
pop
mov
outsb
sub
adc
or
popa
je
call
test
je
sbbl
lea
push
mov
xor
add
push
mov
jmp
dec
add
cmpl
fnsave
xchg
mov
xchg
jl
push
jl
or
add
shll
sub
std
and
idivl
jmp
lret
ljmp
notl
lds
int3
or
scas
pushf
add
test
gs
mov
mov
imul
out
jns
into
sbb
stc
into
push
lods
movntq
xor
inc
mov
add
into
leave
xchg
add
dec
pusha
cltd
add
xchg
jcxz
movsb
xchg
cltd
movsb
dec
jns
jmp
ljmp
js
cwtl
aas
cmp
add
push
jnp
jp
sbb
testb
mov
cmp
fnstcw
and
repz
or
movsl
lret
or
insl
mov
cmpsb
enter
adc
rolb
add
in
inc
pop
mov
in
mov
das
ljmp
sub
inc
push
pop
loopne
pop
aam
sti
ficompl
ljmp
pop
insb
xor
mov
cmpsl
add
stos
add
add
daa
add
add
dec
into
hlt
jge
jge
fnstenv
inc
cld
jnp
jl
or
repnz
movsb
icebp
popf
mov
roll
fwait
xchg
add
lret
insb
push
fsubrs
stc
inc
jge
jb
xor
jb
test
fxch
out
push
subb
test
in
js
ffreep
decb
and
call
daa
dec
rclb
or
out
or
cmp
in
jns
pushf
lret
mov
mov
sub
xchg
mov
in
xchg
cmpsl
lahf
pusha
imul
test
cmc
cmp
in
jb
xor
mov
popf
ret
push
mov
push
jmp
lcall
aad
fimull
pop
mov
sbb
jmp
dec
bound
lods
push
stos
outsb
outsb
jg
outsb
mov
test
mov
sbb
js
insl
mov
jae
dec
out
les
scas
push
rclb
sub
jp
mov
mov
jg
in
xchg
xchg
lret
xchg
shlb
adc
or
mov
iret
mov
mov
jmp
shr
dec
pop
pop
jns
insl
adc
push
dec
mov
or
mov
jnp
fwait
sbb
sbb
xchg
aaa
loope
bound
xchg
pop
and
fimuls
and
test
mov
repz
cli
negb
mov
xchg
or
xor
inc
mov
js
and
xor
dec
cmp
stos
fisttpl
sbbb
out
stos
out
mov
sbb
jmp
cmpsl
sub
dec
out
xchg
xchg
add
dec
int
insb
xchg
pushf
outsb
xor
sub
jnp
mov
mov
cmp
pushf
sbb
lcall
adc
icebp
cmp
out
xchg
inc
sub
sub
dec
sub
int
sub
lock
or
decl
cmp
inc
sbbb
mov
repnz
xor
aad
sub
cmp
lock
sbb
js
out
fisubrs
pop
fucom
mov
inc
push
negl
je
subb
js
hlt
mov
mov
les
mov
inc
test
xor
repz
decl
clc
add
loopne
test
inc
call
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
jmp
xor
mov
and
sub
push
sbb
jl
or
or
push
mov
lea
add
rcrl
fistpl
ss
sub
push
imull
aaa
inc
imul
push
pop
inc
dec
cmp
sbb
idiv
jb
and
rcrl
jae
xchg
adc
jbe
inc
jb
pop
mov
out
cmp
jnp
sub
or
or
add
mov
xchg
add
movsl
dec
lahf
cmp
add
jo
xor
idivl
add
mov
lds
pop
cmpsl
aam
test
lock
popf
vmovntpd
and
push
sarl
sub
dec
xor
xor
scas
ja
jno
sbbb
call
cmp
and
and
push
cmpsb
mov
inc
adc
mov
xor
jo
test
jmp
lock
ret
and
loope
aad
test
movsl
decl
mov
sub
jmp
or
and
jnp
jnp
gs
push
and
cmp
jg
jl
pop
lea
mov
ljmp
in
inc
lea
sub
test
cmpsb
sti
mov
xor
les
push
xchg
sbb
inc
add
mov
fbld
mov
jo
dec
rcrl
fisubl
add
add
mov
inc
scas
mov
shl
xlat
jle
out
and
xor
pop
cmp
pop
cld
fdivs
ja
mov
mov
dec
add
xor
lret
jecxz
adc
nop
add
repz
lea
cmpsl
sbb
push
jge
add
inc
adc
cmp
das
add
bound
dec
add
cli
sub
ror
fisttpll
shlb
cmpsl
into
sbb
dec
fwait
xchg
push
xor
mov
movsb
fisubs
cli
or
jle
dec
movsb
shrl
dec
pushf
push
arpl
popa
add
and
push
jmp
out
jns
stos
add
xor
jge
pop
data16
and
add
shrl
inc
clc
mov
add
jmp
xchg
out
std
push
gs
repz
mov
daa
cmp
jg
jl
jmp
add
inc
in
lcall
mov
cmp
dec
jmp
mov
pop
insl
subb
lea
ret
in
outsl
inc
xor
xor
push
hlt
sbbb
push
adc
decl
iret
mov
lcall
std
sub
inc
push
sub
in
push
dec
cli
test
daa
inc
icebp
addr16
repnz
sti
stos
daa
into
add
mov
aas
jp
jne
xor
jae
sbb
pop
xchg
xchg
mov
imul
loope
stc
push
pop
cmp
mov
cmp
jle
mov
test
in
les
or
xchg
filds
out
es
mov
imul
icebp
cmpb
stos
jae
insb
mov
nopl
dec
mov
xor
sbb
jne
pusha
mov
test
inc
mov
jnp
mov
adc
jmp
test
xor
scas
jnp
add
clc
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
jmp
scas
stos
fs
js
addr16
dec
fmuls
xor
jl
or
push
mov
cwtl
cmpsl
js
rcrl
out
inc
mov
sub
push
mov
push
pop
pop
in
nop
in
lods
push
jmp
mov
jge
sarb
stos
sarw
cmp
cmp
aam
in
out
xor
push
jb
popa
adc
inc
andb
loope
add
ja
clc
out
jbe
rcrb
rcll
je
jbe
push
movsb
mov
fstpt
xchg
stos
mov
fisubs
stos
mov
push
cmc
mov
jno
xor
clc
sbb
pusha
lods
movsl
mov
fwait
pop
add
ret
das
arpl
stc
or
fdivrp
or
lods
xchg
inc
shl
in
rorb
fdivrs
fimuls
add
pop
cltd
fistl
imul
add
out
push
jne
dec
loop
jp
adc
inc
in
cmp
std
xchg
adc
data16
xor
push
andb
pop
jge
mov
mov
and
inc
add
xor
add
xor
add
xor
daa
add
add
lret
mov
insl
lods
test
xchg
pop
lds
jl
jg
jl
push
in
and
es
scas
push
pop
nop
dec
pushf
mov
frstor
add
pop
cmp
hlt
jecxz
push
ja
jbe
fstpt
ret
sbb
fbstp
jg
cmp
push
adc
inc
jbe
lods
sbb
fnstenv
sbb
jns
jo
out
in
idivb
shll
xchg
test
rol
fbld
sbb
xchg
jmp
xchg
add
lcall
ds
cltd
xchg
and
inc
add
mov
dec
addl
sarb
fsts
dec
pop
xor
dec
call
sub
ljmp
lret
sahf
jp
cltd
shll
push
lahf
out
iret
push
faddp
xor
test
mov
mov
sbb
xchg
mov
adc
or
mov
fldenv
test
xor
inc
mov
and
pop
ss
jle
add
fistps
cmp
dec
mov
pop
iret
sti
rolb
pop
cmc
sub
push
pop
call
mov
mov
jmp
gs
add
jge
jecxz
stos
insb
cmp
xchg
sarb
jl
or
inc
mov
lahf
mov
scas
pmaxsw
popf
fucom
insl
mov
push
iret
lret
bound
inc
and
cmp
sbb
bound
xchg
push
sub
insb
and
les
xor
shrl
add
rcl
ss
stc
and
loopne
rorl
scas
loop
mov
xchg
sub
jl
pop
push
push
push
mov
adc
push
xchg
jbe
enter
mov
dec
or
mov
add
add
movsb
aad
or
loopne
lcall
in
push
divl
fwait
add
daa
push
loope
sbb
cmc
lds
in
int
adc
mov
pop
jnp
fs
icebp
adc
xchg
adc
int3
inc
jo
ret
iret
inc
int
push
mov
xbegin
jnp
imul
out
pop
je
sub
jmp
jo
pushf
stc
jno
or
pop
leave
ret
push
mov
sub
xor
movl
movl
orl
jmp
push
repz
pop
stos
lea
nop
push
pop
jl,pt
push
jg
jl
xchg
sbb
clc
aas
push
out
jmp
mov
mov
cmp
dec
pop
cmp
jmp
mov
enter
int
lods
scas
push
rcrl
mov
aad
ret
shll
inc
sarl
sub
ljmp
xor
pop
xchg
push
pop
outsb
push
loopne
dec
push
je
loope
xchg
cmpsb
loopne
mov
inc
cs
lahf
cmpsb
sbb
mov
push
pop
cmp
jo
sbb
in
xchg
or
cmpsb
adc
dec
repnz
insl
fisubs
add
jbe
xchg
jbe
pop
addr16
jae
or
out
inc
roll
cmp
xor
lcall
sbb
push
cmp
pop
or
adc
xchg
mov
pusha
test
push
ljmp
sahf
sahf
popf
xor
daa
cmpsb
es
fisttps
sti
jns
ds
xor
pop
cmp
xchg
ret
sbb
jbe
dec
sbb
je
rclb
ja
rsm
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
orl
mov
xorl
lea
and
jmp
divl
test
pop
jnp
js
ds
mov
lea
jl
push
jg
jl
in
cmpsb
sub
or
mov
outsl
or
add
les
jle
xchg
mov
outsb
ds
cmp
dec
pop
cld
movsb
or
ret
leave
icebp
dec
sub
jno
cmpsl
sbb
and
dec
dec
sub
pusha
mov
hlt
mov
mov
xorb
inc
push
xor
js
stc
insb
sbb
sub
jl
xchg
sub
pop
loope
mov
daa
cmp
fnstcw
xor
cmp
dec
push
xor
fisttpl
lock
pusha
mov
xchg
daa
test
jg
jae
mov
xchg
or
mov
std
pusha
mov
mov
cmpb
aaa
jb
sub
jb
sub
adc
subb
mov
sub
add
rcl
das
fldenv
pop
pop
lcall
cs
into
insb
and
jns
je
mov
jno
or
pop
xchg
sti
sti
rcrb
call
rclb
mov
push
pop
mov
sub
mov
sub
push
mov
jmp
movsb
flds
xor
jg
xchg
xor
jg
jl
popa
inc
and
xchg
mov
add
ret
es
xchg
mov
inc
dec
icebp
pop
out
sbb
insb
jg
flds
fdivrp
xchg
andl
sub
hlt
xchg
xlat
in
or
sub
in
push
loope
out
pop
sbb
fidivs
fmul
pop
popf
add
sbb
pushf
daa
push
testl
addr16
out
sub
insl
lret
cs
fmuls
out
and
add
cwtl
fstps
cli
insb
data16
js
scas
adc
lret
es
insl
cmp
subb
scas
mov
call
sbb
subl
je
or
daa
inc
pop
cwtl
mov
cli
pushf
cmc
into
mov
mov
jmp
add
lods
pop
xchg
ret
insl
xor
popa
add
imull
negl
sbb
sar
dec
mov
sahf
in
ds
xlat
dec
push
jnp
jecxz
movsl
out
cmp
sub
mov
lcall
ja
xor
pop
mov
add
mov
sbb
push
lea
mov
mov
adc
push
push
mov
orl
mov
mov
mov
and
mov
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
adcl
jmp
adc
in
data16
mov
jns
xchg
sahf
mov
jl
push
jg
jl
insb
enter
mov
cwtl
cmpb
cmp
pushf
out
sbb
daa
lea
adc
inc
sarl
inc
sbb
pop
gs
loopne
xchg
scas
jge
xor
sti
into
in
sahf
or
int3
jle
mov
pop
jno
fnsave
test
inc
cltd
pop
push
rcrl
movsb
mov
and
mov
sbb
jmp
lret
jno
xor
pop
mov
and
test
xchg
es
loopne
and
lds
pop
inc
outsb
and
pushf
sub
pop
or
out
push
mov
mov
jecxz
dec
mov
jb
mov
push
push
inc
and
data16
sbb
mov
jae
popa
lcall
adc
sbb
mov
add
xchg
fcmovnu
enter
push
mov
and
add
sbb
mov
dec
fsubs
icebp
adc
out
mov
stc
jl
jl
fld
add
sbb
rolb
add
push
add
add
andl
add
movl
jmp
ss
call
pop
fcom
xor
sub
pop
xor
jg
jl
iret
jmp
push
fstps
adc
cs
sub
and
lds
idiv
notb
cltd
push
inc
leave
push
popa
sbb
xor
pop
lds
int3
ja
xchg
mov
inc
sub
sub
jo
inc
insb
notl
test
mov
mov
clc
shll
xchg
ror
jg
aad
push
ja
xchg
bound
jge,pn
fwait
jmp
movsl
out
jmp
mov
mov
jle
adc
bound
inc
push
pop
cltd
fwait
cmp
cmpsb
ret
movsb
jo
test
data16
mov
mov
cld
jmp
std
aaa
aam
inc
fwait
in
jecxz
mov
iret
cltd
mov
imul
push
aas
mov
scas
lcall
xchg
aad
data16
out
bound
inc
inc
je
fistl
inc
mov
xchg
outsl
int3
movsb
lea
ljmp
pop
fisttps
ret
stos
mov
jecxz
repz
mov
movl
movl
cmp
je
mov
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
push
push
pushl
call
cmpl
jb
lea
mov
xor
xor
mov
sub
xor
jmp
lea
mov
std
inc
nop
shll
jl
jg
jl
mov
mov
jg
nop
pop
ss
aam
push
adc
push
aaa
xchg
push
clc
lock
sbb
pop
or
sbb
jne
jp
jmp
cmpsb
js
aad
and
adc
cmp
dec
lret
sub
or
xchg
data16
mov
push
push
lea
insl
inc
ja
stos
cmp
jne
adc
xor
lock
aam
or
push
icebp
outsl
inc
mov
push
lahf
jnp
call
mov
pop
pop
mov
xchg
cltd
inc
mov
mov
dec
mov
jo
out
sub
scas
pop
xlat
mov
iret
jbe
xchg
and
jecxz
sub
and
in
loopne
jl
pop
add
jle
inc
or
lods
fsubrl
aad
imul
fsubr
rorl
stc
xlat
aad
fldenv
ljmp
movsl
leave
clc
pop
pop
mov
stos
sbb
adc
gs
insl
pop
dec
leave
rcrb
lock
jo
lods
xchg
fs
inc
add
jp
outsl
jg
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
imul
mov
mov
cmp
je
mov
jmp
fsubs
jp
jp
mov
xchg
fcomip
sbb
jl
push
jg
jl
out
adc
push
outsb
and
xchg
cmpsb
ret
sub
mov
sub
pop
adc
bound
dec
movsb
push
mov
push
notb
pop
lcall
jns
popa
pop
xor
and
ja,pn
cmp
pop
js
pop
popa
subl
mulb
andl
clc
sub
inc
xlat
in
ret
mov
imul
or
adc
pop
fistl
mov
out
mov
lock
mov
mov
push
xchg
xor
jge
push
hlt
fwait
mov
insl
lret
sub
xlat
mov
jecxz
sub
and
int
inc
pop
stos
roll
pop
es
push
xchg
inc
inc
shr
mull
out
sub
ds
adc
scas
mov
cmp
and
divl
lods
lods
daa
sahf
shlb
incb
lds
push
and
cmp
mov
nop
sbb
pusha
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
jmp
jnp
lds
cmp
adc
sub
jl
push
jg
jl
xchg
xchg
int
div
ja
mov
sub
mov
mov
sub
scas
push
push
enter
call
mov
mov
rclb
loopne
jbe
mov
push
or
mov
cmp
xor
js
in
xchg
insb
xchg
or
lock
js
in
lods
xor
js
mov
jns
mov
test
push
adc
repz
xor
rclb
loop
mov
xchg
fldcw
test
int
or
cmp
xor
repz
xchg
push
ljmp
lret
mov
cld
jns
cmp
jne
mov
jb
and
jl
pop
cs
mov
sub
mov
inc
jno
sbb
cmp
mov
mov
dec
jecxz
push
shrl
push
jnp
lods
jl
stos
jns
test
pop
mov
enter
add
std
pop
rcrb
cmpsl
add
pop
nop
xchg
and
mov
mov
or
cmp
je
mov
jmp
push
add
jge
jnp
and
fisttps
jg
jl
xchg
xchg
and
sti
push
in
mov
shll
ja
mov
or
out
xchg
push
cmp
cmc
int
dec
cs
inc
mov
mov
sahf
pusha
outsl
sub
add
sbb
cltd
jp
aas
arpl
outsb
pop
push
pop
sbb
fisubrl
mov
dec
icebp
daa
ss
stos
and
imul
fwait
aad
sbb
cmp
lds
rolb
aam
sub
cmc
or
ds
loop
movsb
mov
out
mov
jecxz
ss
aad
push
sub
sbb
outsl
negb
or
repz
jp
loope
xchg
sahf
add
pushf
mov
movsl
pop
leave
push
in
lds
mov
mov
and
cmc
push
add
fs
ljmp
stc
cmp
add
push
xorl
out
or
push
add
xor
cltd
sahf
jg
adc
pop
mov
or
xor
inc
std
jmp
inc
cld
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
jmp
pop
fst
jge
out
jnp
inc
sub
lret
int
enter
jg
jl
aas
cmp
fs
les
cs
out
fwait
and
icebp
scas
xchg
sahf
xlat
dec
rcrb
mov
test
mov
push
jle
xor
xlat
add
bound
lods
popf
add
add
fdivrs
sub
ds
pop
out
or
inc
inc
cmpsl
push
jne
lret
fs
push
stos
inc
xchg
ljmp
xor
dec
xor
sbb
sbbl
inc
sub
dec
add
xor
and
add
jp
scas
movsb
xchg
scas
mov
ss
adc
mov
inc
daa
jne
push
sub
sbb
mov
lcall
lcall
xor
xor
inc
neg
jb
add
imul
push
mov
xor
jl
andl
xchg
add
pushf
scas
fpatan
in
jecxz
inc
pop
lods
xlat
pusha
jb
xchg
lods
insl
cmp
daa
nop
je
mov
mov
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
push
xor
push
movl
sub
movl
xor
or
sbb
mov
mov
decl
push
addl
mov
xor
mov
xor
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
add
jmp
xchg
and
and
out
mov
repz
mov
pusha
repnz
ja
je
pusha
cld
nop
in
inc
mov
ds
xor
ret
leave
pop
xchg
add
shlb
es
push
push
pop
hlt
mov
sbb
in
imul
mov
xchg
cmp
shlb
mov
test
or
gs
push
cmp
jp
call
ds
adc
stos
out
pop
mov
inc
call
in
dec
in
xchg
and
add
imul
mov
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
jmp
mov
jns
std
ficomps
jo
push
fsubp
jae
jl
mov
int3
inc
xchg
sahf
and
mov
push
jne
das
mov
xchg
xchg
jmp
fcoml
fsubs
xchg
pushf
lock
add
mov
cmp
outsb
add
xchg
je
pushf
andl
dec
sbbl
mov
lods
loope
je
fsubs
ss
mov
sbb
push
xchg
std
push
and
xchg
cld
es
mov
pop
daa
adc
cwtl
out
inc
mov
das
aad
mov
xor
orl
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
xorl
call
adcl
test
movl
je
orl
xor
jmp
subl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
movl
push
push
push
call
movl
cmp
je
orl
push
addl
push
adcl
push
adcl
push
sbbl
push
push
call
jmp
or
mov
and
mov
sub
movl
lea
adc
mov
add
lea
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
movzwl
sbb
mov
mov
xor
mov
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
orl
push
movzbl
sub
mov
mov
movl
xor
subl
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
add
mov
movzbl
mov
cmp
movl
mov
movl
je
neg
mov
xor
add
imul
mov
jmp
xor
xor
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
call
cmpl
jb
mov
mov
xor
inc
add
movzbl
sub
mov
mov
mov
orl
mov
sbbl
xor
sbbl
add
movl
cmp
jne
mov
sbb
mov
xor
add
mov
sub
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
xor
mov
mov
orl
mov
mov
xor
xor
dec
add
sbb
mov
add
lea
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
adc
mov
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
and
add
adcl
mov
mov
lea
or
mov
add
mov
sub
mov
xor
adc
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
subl
mov
sbb
movl
xor
mov
xor
mov
movzwl
xor
add
movl
mov
sub
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
add
movl
cmp
movl
jne
movzbl
adc
mov
mov
mov
orl
xor
orl
add
movl
cmp
jne
dec
mov
sbbl
mov
adc
xor
xorl
add
movzwl
sbb
mov
dec
mov
mov
sbb
xor
adc
mov
sbbl
sub
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
mov
cmp
je
mov
movl
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
add
mov
sub
mov
addl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
movzwl
sub
mov
movb
lea
mov
and
jmp
mov
icebp
test
stos
mov
cmp
daa
jg
jl
xorl
cmp
out
push
push
rcrb
add
xorl
mov
xchg
ret
stos
pop
add
shrb
jo
xor
aas
adc
xlat
sbb
xchg
sub
fwait
add
in
and
cmp
push
and
movsl
cld
mov
add
pop
jl
jnp
out
cs
loope
jno
cmc
pop
mov
jmp
movsb
aaa
dec
push
cmp
and
cmpsb
sub
fsqrt
sbb
cmp
or
push
orl
or
push
jae
repz
sbb
and
jb
icebp
mov
inc
dec
xchg
and
dec
and
or
xchg
push
mov
aaa
inc
sbb
xlat
insl
mov
cwtd
int3
sub
lea
push
sub
cmpsb
fnstsw
mov
mov
dec
xor
mov
and
and
leave
xor
xlat
mov
mov
es
sub
adc
adc
les
inc
jbe
xchg
mov
add
mov
test
cmc
mov
mov
xorl
mov
andl
xor
sub
movl
mov
sbbl
movl
movl
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
xor
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
jmp
xor
mov
add
jmp
movl
mov
movl
mov
inc
movl
cmp
jb
mov
xorl
mov
addl
jmp
cmp
bound
push
pop
jmp
adc
es
jae
mov
jl
daa
jg
jl
sub
test
and
xlat
in
push
iret
fwait
js
pop
pmaddwd
or
sub
shll
fmuls
dec
mov
mov
test
adc
jns
int
sbb
adc
push
cmpsb
in
pop
out
mov
add
xor
jne
lcall
pop
subl
lods
daa
mov
subb
push
cs
sub
loope
rcr
shlb
into
pop
shl
or
enter
shrb
inc
or
push
fmull
mov
adc
lret
dec
push
pop
sub
cmp
push
cmp
xchg
or
ret
mov
jl
out
sub
and
inc
fistpll
mov
add
cmp
rclb
pop
icebp
jl
mov
jmp
insl
test
fimuls
iret
add
insl
test
daa
out
sub
in
push
push
pop
enter
out
stos
flds
jnp
lahf
in
in
or
insb
adc
into
roll
xor
inc
mov
loope
out
fs
cmp
pop
fidivl
sbb
clc
filds
mov
add
movl
cmp
movl
je
addl
push
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
jmp
push
ss
std
push
jge
pop
add
or
sub
jl
daa
jg
jl
je
pop
jle
imul
nop
dec
dec
push
or
xchg
lods
movsb
xchg
nop
cltd
stos
dec
lock
hlt
insb
repz
mov
xchg
pop
imul
test
fwait
mov
in
pop
out
lcall
jecxz
jle
fcoml
add
js
aam
mov
dec
xor
hlt
into
jg
inc
aaa
int
dec
dec
sub
adc
mov
dec
dec
lds
fildll
je
mov
sbb
pop
sub
jg
sbb
sbb
cld
fistps
adcl
lahf
pop
ss
xor
scas
outsb
in
push
push
enter
imul
dec
sti
and
out
enter
js
ds
push
or
sbb
arpl
daa
pushf
mov
popf
iret
add
scas
cmp
sub
sub
add
jb
inc
push
jne
ret
lds
fsubrs
push
insb
jnp
popw
mov
andl
imul
cli
ss
fwait
icebp
imul
mov
and
dec
std
pushf
test
and
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
jmp
add
clc
pop
clc
sbb
sti
insl
sbb
sub
lods
cmp
jl
daa
jg
jl
stos
and
pusha
cmp
lods
fcmove
cmp
shl
movsl
mov
xchg
fildl
std
jnp
shlb
stc
js
cmp
sub
ficoms
jo
xchg
jo
mov
sar
in
es
jge
pop
xor
aas
les
add
push
jmp
fiaddl
or
cmp
mov
dec
push
sub
dec
addb
sub
jle
mov
cmpsl
aaa
mov
pop
jl
adc
addr16
imul
pop
stos
gs
test
xor
aam
int
push
and
push
mov
out
inc
add
mov
jae
sbb
inc
jns
or
mov
and
dec
and
repnz
mov
jns
jb
in
insb
out
hlt
repz
mov
jno
jno
arpl
push
out
mov
jge
mov
push
movsl
mov
jae
fcompl
icebp
xor
popf
addr16
push
pusha
jno
pop
adcl
in
in
call
adc
mov
ljmp
cltd
sarb
nop
incb
std
add
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
sub
mov
jmp
push
xchg
fs
fs
data16
pop
lds
jl
lret
jl
mov
lock
nop
push
sbb
sbb
pop
lods
ds
cs
cld
jb
fstl
xor
pop
xchg
nop
pop
jno
jl
test
add
out
cmp
sbb
loop
aad
lods
and
mov
pop
xchg
pop
jno
leave
dec
stos
mov
ficoms
xchg
movsl
ret
ds
sbb
mov
mov
cmc
mov
addr16
clc
bound
mov
adc
fistps
popa
add
cltd
stos
mov
les
jg
xor
lds
mov
xchg
push
popf
cwtl
xchg
inc
jb
nop
push
mov
pop
cmp
es
jecxz
xor
sbb
push
icebp
jecxz
ljmp
jl
mov
dec
stos
scas
aam
fdivrs
leave
int
jge
cmp
push
fsubrl
andb
or
push
mov
pushf
insl
cld
orl
jl
leave
mov
enter
xchg
fstl
push
je
push
push
rolb
shrb
or
push
repnz
pop
sub
dec
push
xchg
int3
dec
test
and
les
mov
lahf
cmpsb
mov
xchg
jbe
and
ret
pop
cld
pushf
mov
adc
mov
mov
add
add
mov
add
add
add
bound
arpl
cltd
jp
fldenv
mov
jl
lret
jl
sub
in
movsb
mov
fstpt
popa
ss
test
test
icebp
inc
jae
sarb
repz
adc
dec
add
imul
sahf
shl
cmc
mov
mov
das
or
inc
pop
add
jno
and
jnp
mov
imul
xchg
jne
rcr
shll
stc
int
jl
dec
les
lods
xor
xchg
fstl
aas
mov
pushf
mov
xchg
insl
stos
adc
scas
daa
cs
sbb
pop
xor
mov
cmp
aam
loope
mov
mov
icebp
lods
cmp
mov
aaa
xor
rcrb
gs
stos
inc
jae
add
lret
ret
fmull
cmp
pop
push
sbb
stc
pop
cmpsb
jmp
dec
cli
push
pusha
sub
inc
dec
or
jmp
mov
test
mov
bound
push
inc
sub
lahf
lock
repnz
sbb
imul
or
pop
lds
das
frndint
bound
ja
scas
pushf
jmp
mov
negb
imul
add
add
sbb
rorb
xchg
sbb
ljmp
out
jne
sbb
scas
outsb
push
cmp
movl
jne
or
mov
mov
adcl
add
mov
xor
or
sub
and
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
mov
xor
push
mov
mov
add
cmp
jmp
mov
mov
test
cmpps
jl
xor
leave
fwait
inc
jl
in
inc
jbe
inc
call
pop
lahf
bnd
fstps
stc
cmp
dec
dec
pop
int
pop
mov
xchg
bound
imul
jge
out
inc
jnp
mov
cmp
and
in
xor
scas
into
fcomp
or
and
xchg
dec
pop
fsubrs
mov
scas
push
pushf
lods
out
or
mov
push
and
cmp
hlt
in
cs
cmpsl
sarb
push
cmp
movsl
adc
ds
out
sahf
jmp
std
and
fbstp
test
scas
push
jl
or
xchg
pop
pop
xor
js
lock
dec
movsl
push
fdivl
inc
sbbb
mov
jp
or
cmp
inc
jb
mov
cwtl
cmp
sub
mov
push
mov
xchg
cmp
cld
mov
and
shll
xchg
sub
frstor
sub
cmp
sub
jae,pt
imul
push
pop
les
fisttpl
out
repz
daa
and
push
loop
and
push
pop
xor
fistpl
test
add
mov
jmp
jmp
xchg
test
loopne
bound
add
flds
loope
lds
jg
jl
shrb
dec
cmc
scas
std
nop
push
cmpsl
subl
in
jb
add
aaa
fwait
pop
ljmp
icebp
dec
add
mov
mov
jo
adc
sbb
mov
inc
mov
ds
fisubrs
hlt
out
add
push
fcmovbe
sti
xchg
and
pop
xor
pop
data16
pop
xlat
inc
test
mov
cmp
cli
jo
addr16
sub
mov
in
scas
inc
pop
sbb
mov
xchg
repnz
int
ds
pop
test
out
pop
xchg
sbb
add
pop
in
add
dec
loopne
xor
leave
ds
push
push
jo
loope
incl
mov
test
dec
popf
adc
mov
popa
ds
or
jb
int3
jecxz
and
mov
std
aam
jae
pop
scas
inc
or
jmp
ds
mov
mov
xchg
xchg
mov
mov
into
mov
push
xchg
pusha
mov
popf
inc
add
sbb
fistps
in
mov
xchg
mov
ret
or
pop
int3
fdivl
add
mov
aad
mov
jmp
aam
rolb
pop
fs
jge
ficomps
inc
fwait
stos
les
jg
jl
loop
mov
out
sarl
dec
int
lret
jns
icebp
stos
sub
xor
and
cli
adc
fidivl
rcl
nop
cmpsl
mov
outsb
std
jo
popf
jae
in
ret
sarb
push
das
push
xchg
jge
fwait
push
cs
jbe
test
arpl
es
jge
sahf
mov
repz
faddl
jbe
push
or
xchg
add
jno
mov
push
push
out
or
push
popa
jbe
clc
or
sbb
inc
push
nop
loope
xchg
repz
in
arpl
dec
cmp
jge
jo
sub
add
mov
adc
lret
stos
sti
adc
inc
or
mov
cmp
lahf
fcoml
fwait
mov
rol
mov
jne
mov
loop
jo
in
push
imul
ljmp
or
pop
mov
xor
inc
cmp
or
xor
aad
and
leave
ja
xor
xchg
sbb
xor
xor
into
mov
push
inc
loopne
cmp
je
jne
fstpt
sbb
cmc
or
mov
out
mov
stos
stc
mov
enter
shll
jmp
mov
xor
add
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
out
cld
call
fisttps
jmp
out
incl
xlat
lea
inc
ljmp
incl
aaa
add
pop
movl
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
call
jge
mov
fcom
add
mov
add
add
imul
push
fisttps
test
aam
lret
add
rcl
movl
jl
test
jmp
incl
loope
aam
test
out
mov
mov
add
call
lret
cld
incl
out
xor
mov
cld
jl
mov
add
mov
decl
add
inc
xor
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
movl
inc
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
sahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jl
add
mov
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
xor
test
test
ds
pushf
inc
mov
outsl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
sahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
sahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
sahf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
bound
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
bound
inc
add
dec
bound
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
sahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
sahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
shlb
add
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
xor
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
xor
jl
add
add
or
test
clc
or
xor
inc
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
add
data16
push
call
mov
cld
inc
test
inc
mov
sbb
inc
test
rorb
add
add
add
popw
test
cmp
jbe
lea
add
mov
sub
mov
mov
in
mov
jb
incl
mov
sbb
push
mov
movl
add
mov
mov
pushf
mov
lea
decl
movb
pusha
jmp
mov
xor
xor
add
in
mov
addl
mov
data16
addl
push
loope
inc
add
mov
out
incl
and
test
incl
jl
leave
add
test
outsl
fiadds
mov
test
in
incl
loope
inc
data16
inc
call
add
filds
inc
inc
xlat
xor
pushf
jl
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
and
inc
cmp
jne
movl
lret
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jl
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
in
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
into
mov
cwtl
movl
call
add
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
out
pushl
add
push
out
xor
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loopne
adc
call
mov
sbb
loop
ds
dec
mov
sub
inc
mov
xor
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
pushl
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
xor
sar
xor
xor
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
sahf
mov
add
add
cmp
je
add
mov
pop
mov
sahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
mov
dec
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
sahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
sahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
sahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
xor
add
rolb
mov
or
inc
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
xor
in
jne
mov
or
icebp
sahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
push
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
add
icebp
jmp
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
xor
xor
repnz
clc
mov
rcll
stc
or
mov
in
sahf
jne
mov
or
sahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
pop
xor
add
inc
hlt
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
data16
pushf
or
rcll
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
xor
pushf
aam
xabort
dec
inc
xor
inc
add
add
dec
mov
cld
mov
xor
pushf
dec
mov
xor
mov
xor
push
xchg
xor
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
out
mov
hlt
mov
mov
in
jb
push
inc
push
jl
leave
cmove
lods
add
mov
or
xor
or
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
enter
sbb
inc
ljmp
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
and
incl
xor
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
sahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
sbb
mov
inc
jge
pushaw
xor
data16
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
sahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
mov
data16
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
ds
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
add
cmp
je
push
pop
sysexit
leave
dec
bound
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
cmp
fs
ss
je
xor
inc
inc
add
ss
pushf
push
je
xor
mov
andl
add
in
push
mov
pushf
cld
mov
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
dec
push
mov
mov
rclb
add
ret
jne
mov
xor
callw
cmp
fs
mov
pop
sub
add
xor
cmp
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
clc
pop
inc
mov
push
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
sahf
in
xor
mov
clc
test
xor
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
xor
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
push
mov
add
xor
sub
mov
inc
inc
mov
dec
sahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
xor
mov
mov
cld
test
push
inc
mov
sahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
sahf
xor
add
inc
xor
pushf
std
xor
inc
fadds
inc
mov
inc
sahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
sahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
pushf
or
inc
adc
jne
xor
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
push
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
jne
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jl
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
decl
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
in
pushf
mov
push
call
add
cmp
add
add
mov
mov
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
cmp
fs
add
leave
rorb
push
inc
in
mov
or
lock
test
clc
rolb
xor
pushf
add
mov
cmp
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
xor
inc
cld
xor
add
inc
test
clc
hlt
inc
test
inc
inc
aad
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
xor
pushf
ss
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
dec
cld
mov
or
into
inc
iret
or
add
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
sahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
xor
pushf
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
push
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
xor
pushf
test
clc
adc
test
xor
lock
xor
add
mov
sbb
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
loopne
enter
inc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
xor
inc
int3
xor
xor
pushf
adc
inc
les
test
clc
inc
inc
pushl
hlt
pushf
jne
mov
or
bound
clc
lea
cmp
shl
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
xor
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
sahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
push
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
push
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
aas
or
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
xor
pushf
inc
jmp
addl
jne
or
or
jne
call
mov
add
adc
add
add
add
incl
push
cli
add
shll
inc
jmp
xor
test
cli
incl
incl
and
mov
or
and
and
add
push
and
and
add
ss
incl
xor
mov
and
pushf
pushf
clc
decl
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
in
jp
jp
jnp
adc
notl
inc
and
add
sbb
push
push
fsubs
inc
pop
rcll
push
cmp
imull
cld
mov
pop
es
inc
sahf
jnp
das
ret
xor
jns
mov
loope
ret
adc
in
hlt
push
cmpsl
fsubrl
into
fldl
imul
cltd
data16
xchg
adc
mov
dec
mov
pop
aaa
jmp
jns
inc
inc
loopne
dec
mov
fbstp
mov
adc
add
out
cmpsl
or
pop
fwait
sahf
out
imul
test
push
sbb
aas
in
jns
push
adc
mov
mov
mov
lods
movsb
mov
push
or
adc
sahf
stos
mov
rorl
hlt
push
mov
cmp
ja
lea
or
sub
std
cmc
xor
push
mov
das
es
adc
mov
rcll
fcompl
xchg
fdivr
nop
cmp
imul
xor
dec
jne
sub
and
adc
xor
mov
dec
inc
sahf
push
ss
fwait
bnd
jne
dec
push
mov
and
inc
ret
scas
cmpsl
cmp
rolb
and
imul
pop
addr16
cld
movsb
xor
data16
lahf
jge
sub
pop
push
rorl
bound
inc
or
and
das
inc
lock
xor
int
or
mov
mov
pusha
mov
popf
mov
mov
fwait
lea
add
and
add
dec
sub
je
ds
fnstsw
sbb
stos
cltd
adc
loopne
pop
addl
js
pop
stos
popa
aaa
add
insl
subb
ljmp
ret
push
cmp
pusha
pusha
pop
push
inc
mov
insb
add
stos
int3
movsl
lds
jnp
pop
test
inc
movl
hlt
pop
incb
pop
mov
loope
sub
nop
int3
loop
mov
les
add
out
stos
inc
sub
xor
hlt
sahf
cmpsb
mov
jg
and
mov
jb
test
jge
les
inc
repnz
aam
fiadds
jne
mov
mov
inc
lds
gs
add
sub
xchg
aas
roll
out
out
mov
xorb
leave
sub
pop
ret
shl
cmp
mov
fiaddl
lcall
daa
fistpl
dec
adc
test
sbb
gs
movsl
shrl
and
cmp
imul
jp
sbbl
xchg
shrl
xchg
pop
popf
dec
stos
adc
push
sbb
test
push
insb
adc
push
adc
add
push
xchg
cmp
jns
cmp
test
pop
mov
enter
pushf
shll
popa
aam
sbb
inc
mov
int
aaa
jns
inc
imul
cmp
sub
inc
pop
scas
jg
push
vmovddup
and
or
movsl
or
out
pop
popa
loope
iret
repz
ljmp
xlat
stos
jmp
inc
add
dec
les
sar
push
sbb
mov
push
in
sbb
icebp
xor
lcall
xlat
outsb
bound
scas
stc
mov
dec
cmpsb
sahf
clc
pushf
push
jge
inc
test
add
out
imul
inc
push
mov
and
aam
push
movsb
sub
les
push
orl
ret
push
xchg
inc
mov
in
rol
add
sub
call
xchg
imul
mov
dec
nop
aas
inc
scas
push
fisttpll
out
int3
or
daa
inc
add
and
fisttpll
jne
pop
dec
popf
or
dec
in
int
xchg
loopne
enter
outsl
xchg
jb
ret
jl
xchg
loopne
and
notl
inc
xchg
int
mov
loope
xor
push
inc
out
mov
inc
and
outsb
mov
mov
mov
mov
lds
movsb
iret
test
out
push
sbb
adc
das
or
arpl
mov
push
or
xor
sub
jmp
jnp
inc
mov
xchg
cmp
mov
pop
dec
xorb
push
xchg
mov
pop
sub
pushf
cmp
rolb
or
add
xor
fsubl
int
scas
push
or
dec
imul
or
stc
icebp
insl
data16
or
nop
push
sarb
gs
mov
mov
sub
pushf
adc
push
btrl
jbe
push
aam
mov
in
cwtl
and
xchg
adc
jge
iret
outsl
icebp
xor
cmp
mov
jb
push
scas
fstps
add
or
mov
mov
imull
rorl
mov
loop
hlt
clc
add
jbe
inc
cmp
cs
jmp
jp
pop
stc
push
xor
jmp
add
addr16
xchg
repz
jge
push
and
pop
cmpb
mov
mov
mov
sbb
shlb
mov
lock
xchg
and
push
mov
push
jnp
xchg
dec
repnz
fs
aam
mov
fisubs
sbb
into
pop
and
movsb
mov
inc
push
cmp
fadd
or
pushf
xchg
jae
adc
divl
mov
cmp
cmp
xchg
js
fsub
jmp
and
add
push
mov
cmp
inc
adc
fcomi
jmp
and
ret
jp
stos
rep
xor
mov
jg
add
add
dec
pop
aaa
insb
xor
lea
outsl
sbb
stos
sti
mov
out
testl
inc
incl
cli
bound
leave
adc
xor
ds
addr16
lea
aam
adc
rcll
pusha
jns
xchg
out
lock
jae
inc
xchg
xchg
fiadds
push
and
lret
sti
xor
movsb
inc
xchg
enter
jl
jae
lahf
leave
pop
xor
dec
out
pop
mov
ss
mov
stos
aaa
push
cmc
cmp
shr
addr16
imul
push
push
jae
or
cli
pop
xchg
cmp
cmp
in
pop
xchg
sub
leave
fwait
cmc
adc
push
filds
test
stc
xchg
hlt
pop
mov
jb
dec
leave
sub
mov
add
xchg
mov
sbb
fsts
mov
pop
add
jmp
aaa
push
out
mov
mov
movsb
xrstor
imul
mov
int
inc
in
cmp
pop
fsts
fwait
or
sahf
leave
inc
cli
adc
shrl
push
out
imul
out
ss
mov
or
dec
xchg
ss
xchg
pop
andb
stos
mov
mov
test
mov
push
in
lds
ret
bound
push
aad
enter
mov
cmp
xor
call
sbb
into
xchg
mov
test
in
sbb
mov
fisubl
rcrb
popa
and
cmp
in
ja
ret
adc
ficompl
xlat
push
pusha
scas
cmp
or
pushf
sbb
push
and
enter
xchg
mov
fidivrs
shr
pop
inc
xlat
inc
stos
pop
lods
inc
in
jbe
xlat
call
jne
addr16
fists
movsl
pop
pop
mov
dec
jno
in
cs
lret
das
dec
xor
addb
cs
mov
pop
jp
imul
test
mov
pop
data16
lcall
pop
push
popf
notl
sub
daa
dec
leave
sbb
jns
push
cmp
dec
and
ret
xchg
add
test
aas
aas
xchg
jne
dec
mov
std
pop
adc
push
stos
mov
pushf
and
mov
jne
mov
push
cld
or
and
xchg
jmp
int3
and
jmp
imul
pop
movsb
mov
int
push
pushf
dec
pop
in
mov
cwtl
pop
aad
cwtl
data16
jge
dec
out
mov
mov
mov
inc
mov
mov
jp
sbb
inc
cltd
sbb
repnz
shl
mov
inc
jno
ficoms
or
xchg
lret
inc
xor
jb
lods
dec
pop
push
add
push
sbb
sub
or
fildll
daa
lds
push
aad
jle
dec
movups
cmc
lock
cmp
pop
fisubs
adc
sti
jl
or
xor
imul
inc
cmc
mov
add
or
cmp
mov
or
mov
testb
fucomi
xchg
mov
je
xor
pop
pop
mov
mov
mov
cmp
out
mov
loopne
pop
or
stos
push
inc
cld
sub
js
cmp
push
popf
cmpsb
mov
push
fdivp
push
dec
inc
inc
pushf
xchg
mov
movsl
ret
sbb
pop
mov
mov
pop
or
dec
sbb
push
fdivs
dec
fcompl
add
mov
gs
mov
xchg
ficompl
xchg
and
mov
dec
int
imul
cs
test
ret
add
adc
dec
out
mov
sbb
jmp
incl
pushf
popa
test
add
dec
scas
movsb
aad
je
or
push
fisttpll
ljmp
sub
das
sub
jge
int
lods
mov
fidivs
xchg
pushl
mov
mov
lret
fists
rcl
fdivl
and
push
int
insl
add
outsb
stos
ret
shll
add
pop
lock
mov
movsb
pop
xchg
mov
daa
push
adcb
in
xor
lock
scas
out
insl
rolb
push
and
cmpb
int
out
gs
addl
xchg
orl
nop
insl
sbb
adc
or
test
jecxz
push
int
or
fisubs
jns
fildll
lret
cmp
add
lea
sbbb
das
std
daa
or
stc
push
das
fsubs
mov
sub
pusha
cmp
cmp
mov
into
icebp
call
pop
sub
mov
data16
xor
and
jg
pop
pop
adc
repnz
popf
lret
out
add
es
jo
pop
xchg
pusha
frstor
icebp
cli
push
out
imul
push
fistpl
sarb
sbb
push
lea
mov
or
sub
scas
in
push
mov
add
sub
jns
pushf
sub
and
adc
outsb
imul
push
mov
int
and
imul
xchg
mov
ret
or
lods
mov
mov
lds
mov
or
xchg
test
sub
mov
mov
testb
pop
arpl
inc
je
in
and
lret
sub
jb
push
loop
pop
add
mov
pop
add
test
jne
lods
scas
hlt
loopne
pop
mov
xchg
arpl
pop
cwtl
cltd
mov
ds
dec
pop
inc
int
cs
mov
in
mov
jnp
and
pusha
std
jmp
repz
test
or
jp
xor
add
sbb
sub
out
test
xlat
jbe
xchg
ljmp
sub
popa
pop
jns
adc
outsl
cmp
in
cmpb
out
sub
jmp
pop
fstpl
inc
xor
and
mov
das
jp
push
sbb
leave
lds
jns
std
adc
loopne
xor
xor
or
shrb
mov
in
or
xlat
mov
jge
ds
sub
pop
jno
pop
cwtl
pushf
fistl
adc
in
movsb
and
jg
fisubrs
iret
decb
je
repz
je
rorl
clc
mov
xor
sbb
int
iret
sub
call
jmp
xchg
jle
xchg
add
dec
jp
nop
inc
sub
pop
in
loopne
mov
imul
inc
lcall
adc
icebp
jne
mov
sub
sub
push
sub
xor
or
aam
fs
repnz
lret
pop
and
outsl
jb
jae
out
mov
mov
js
loope
bound
call
inc
xor
pop
xchg
fisubrs
lods
adc
stc
lea
pop
adc
sahf
ja
mov
mov
jecxz
cmpsb
div
jae
dec
inc
dec
ret
pop
mov
loop
xor
and
xchg
xchg
stos
dec
cli
pop
push
out
xor
or
mov
repnz
cwtl
sub
movsl
sbb
xchg
push
add
ss
bound
jb
ds
scas
add
jge
mov
fildl
add
fs
mov
aam
fnstcw
add
pop
add
inc
dec
lods
je
jbe
sbb
dec
jae
push
mov
or
ucomiss
xchg
mov
into
and
movsb
lret
sbb
cmp
and
or
loop
sbb
div
push
lods
add
mov
xor
xchg
dec
ss
or
int3
mov
cld
jp
jecxz
cmpsb
pushf
ret
sbb
push
jg
push
imul
xchg
out
mov
sub
aad
lea
aas
test
lods
dec
les
xor
jge
cli
adc
and
pop
and
cs
in
cli
int3
and
mov
xlat
sbb
mov
jl
shl
or
cld
add
inc
ret
sbb
mov
push
notb
sbb
push
lock
xchg
or
or
pop
imul
inc
in
cmpl
xchg
movsb
ret
test
push
push
jno
dec
push
cmpsb
push
cld
and
xlat
mov
fcmovu
sbb
ds
add
mov
xor
aam
push
add
outsb
pop
loopne
or
adc
mov
and
shrl
pop
dec
dec
pop
mov
iret
js
cmc
or
hlt
cmp
decb
cmp
sub
pop
push
and
dec
mov
or
sbb
add
and
cmpsl
xchg
dec
adc
lods
in
in
jecxz
lods
and
popa
and
les
dec
js
mov
aam
stos
daa
mov
sub
xchg
mov
and
mov
pop
pop
cmp
xchg
mov
sti
data16
js
in
test
outsl
pop
xor
notb
hlt
insb
outsl
frstor
or
add
mov
jbe
jecxz
xor
scas
lcall
iret
orb
testb
cltd
xchg
push
jnp
mov
cmp
mov
cmp
xchg
xor
push
lcall
test
xchg
cmpl
addr16
sub
in
and
mov
popa
jle
repz
dec
sbb
aas
stos
push
int3
cmp
orl
cmp
sub
dec
ljmp
push
roll
loope
scas
jp
sahf
inc
inc
stos
mov
pop
pop
cwtl
mov
add
inc
cwtl
cmp
inc
popf
mov
cmp
xor
es
cmp
nop
jge
add
daa
xor
mov
mov
pusha
pop
xchg
in
lods
sbb
mov
mov
aam
mov
fucomi
sub
notb
cltd
xorb
cmpsb
push
jmp
ret
movsl
sub
int3
negb
stos
xor
jle
jbe
repnz
inc
setp
jnp
bound
cltd
jbe
sbb
push
cltd
xchg
push
repnz
pop
scas
incb
pop
inc
mov
movsl
sub
xchg
xchg
mov
inc
and
icebp
dec
pushw
cltd
lea
ret
outsb
mov
mov
in
push
cld
or
mov
sbb
pop
push
idivb
xchg
sub
inc
aas
sub
xchg
push
mov
lcall
inc
in
mov
out
fwait
in
push
jbe
aam
mov
push
divb
cmp
cmp
fsubrl
fldt
xchg
mov
repnz
push
xchg
dec
arpl
mov
test
pop
sbb
sti
xor
scas
es
imul
push
cli
in
add
pusha
std
jmp
mov
addr16
jle
cmc
icebp
push
test
sub
add
add
lret
jp
das
fucomi
mov
cld
outsb
mov
cmp
bound
in
aam
and
popa
sbb
js
mov
mov
mov
and
cld
lds
cmp
push
cmpsb
cwtl
dec
dec
outsb
dec
pusha
rorl
sub
movsl
inc
mov
add
cmp
pop
iret
inc
ds
movl
movsl
out
scas
mov
stc
mov
lret
xor
pop
daa
add
rorw
icebp
dec
xor
prefetch
and
xor
xor
imul
jl
pusha
orl
xor
es
ljmp
ds
aaa
sbb
js
rclb
pop
ficoml
jl
push
orb
sub
fadds
push
orl
sbb
push
sahf
mov
adc
lods
test
pop
inc
insl
fnstenv
sub
pop
dec
fsubr
das
add
add
gs
xorb
sub
inc
repz
movsl
or
mov
lret
dec
add
adc
rcrl
aas
cmpl
mov
xchg
push
loope
dec
jbe
adc
out
lret
dec
jnp
mov
push
jl
and
stc
mov
shrl
or
aad
inc
jge
movsb
out
dec
cmp
je
pop
push
xchg
jno
pop
add
mov
xchg
mov
or
cmp
std
mov
imul
fildl
mov
pop
mov
mov
fldl
adc
and
adc
xchg
in
sahf
mov
insl
sbb
in
add
ja
adc
jge
xlat
xlat
ret
test
add
sahf
dec
xor
jnp
mov
xchg
mov
sbb
jo
push
psubb
jmp
loop
or
cli
stos
push
push
loope
aam
ss
orb
lds
pushf
testl
mov
adc
mov
sarb
mov
add
push
loop
dec
fwait
jbe
jecxz
leave
movsb
add
sub
push
mov
into
jp
mov
loop
push
ds
out
cs
jl
sbb
sub
in
jg
nop
aaa
add
cmc
pop
push
popa
cmp
jmp
mov
lretw
mov
dec
mov
adc
xor
dec
and
fs
jmp
fwait
enter
inc
mul
das
in
mov
dec
cmp
movsb
pop
xchg
stos
push
mov
daa
rorb
fdivrs
lock
inc
out
data16
test
bound
and
test
add
sbb
loop
mov
lock
ss
scas
fmull
rorb
xor
je
addr16
inc
ret
lret
flds
imull
sub
lods
sub
daa
enter
and
push
push
in
hlt
idivb
icebp
addl
mov
xor
mov
lahf
sbb
nop
xor
add
add
ss
or
pop
in
testl
loope
out
add
and
add
pop
jno
sub
fstpt
xor
out
mov
sub
jae
lods
or
lock
xchg
pop
ret
nop
pop
stos
mov
lods
dec
subl
push
sbb
xchg
iret
daa
adc
mov
cmp
popa
inc
lds
loope
out
mov
mov
mov
icebp
pop
fwait
loop
mov
jns
inc
stc
rcl
dec
bnd
gs
andb
lods
xchg
fcmovne
sahf
sarb
out
lock
std
pop
out
stos
nop
fcoml
sbb
cs
cltd
roll
scas
cmpl
ret
mov
aad
fwait
negl
jmp
adc
inc
adc
repz
sbb
fcoms
mov
loope
inc
or
loope
sbb
clc
sub
in
pop
fldl
testl
cmp
ret
jbe
cmpsb
in
outsb
enter
lods
mov
sub
dec
sahf
jge
nop
je
dec
xchg
jge
or
jl
and
mov
add
cmpsl
jno
repnz
push
scas
enter
aam
sub
bound
lods
mov
mov
bound
das
lods
stc
fisttps
movsl
adc
loope
fbld
pop
push
dec
mov
idivb
sbb
inc
mov
add
int3
ss
test
mov
ljmp
movsb
mov
push
jbe
enter
sub
push
push
inc
xchg
roll
mov
cmp
dec
inc
cmpsb
lods
add
dec
xchg
mov
jbe
in
inc
aad
je
push
dec
push
pop
jne
and
cld
gs
fmull
rolb
pop
cmp
shlb
and
out
dec
ret
add
adc
decb
sbb
adc
mov
arpl
mov
pusha
out
push
dec
js
inc
sahf
and
cmp
jmp
icebp
and
shlb
sbb
dec
add
js
in
push
in
dec
or
int
cmp
ja
outsl
pop
pop
or
add
test
cmpsb
test
popf
mov
fistpl
les
fwait
repnz
jo
lds
add
mov
xchg
mov
push
fwait
or
push
outsl
pop
jns
adc
pop
repnz
fs
pop
xchg
mov
and
adc
mov
loopne
call
mov
fidivrl
push
jae
aad
mov
add
or
sti
push
add
push
inc
movl
pop
cmp
rclb
mov
sahf
pushf
enter
data16
lds
lahf
lret
pop
decb
cmp
mov
inc
push
sub
pop
loope
mov
sahf
pop
aaa
fisttpll
or
test
mov
rorb
ljmp
rcrb
push
jg
clc
addr16
cs
mov
stos
jmp
out
mov
mov
negl
jns
jle
dec
add
in
lret
mov
fsubr
cli
ficoml
imul
push
push
fsub
mov
inc
test
xchg
or
je
sub
out
adc
pop
sub
cmpsl
dec
jo
cmpsb
add
mov
fidivrs
sub
xchg
mov
fsts
clc
or
mov
xchg
jno
jo
adc
sbb
and
xchg
add
sbb
or
push
fldcw
inc
lods
scas
cmpsl
out
stos
add
pop
adc
das
inc
pop
es
xchg
mov
fcoms
push
je
push
mov
pop
test
mov
ljmp
pop
sub
fimull
lods
mov
les
dec
stos
or
dec
icebp
push
cld
imul
arpl
and
pop
cli
bswap
test
mov
sbbb
jmp
pop
xor
icebp
and
pop
aas
lcall
fs
lret
std
jmp
sbb
mov
int3
adc
xchg
sub
mul
pop
dec
jl
jnp
mov
jge
adc
loop
shrb
push
sbb
divb
data16
mov
xchg
adc
in
and
mov
jnp
ds
lret
fidivs
push
aad
xor
ljmp
js
jae
pushf
xchg
push
ror
sub
pop
insb
ljmp
xor
subl
mov
inc
cmc
popa
leave
inc
inc
add
mov
frstor
bound
mov
dec
faddl
cmp
sbb
gs
fnsave
lds
daa
stos
les
cs
pusha
dec
enter
aaa
mov
fsubrl
or
xchg
and
mov
cld
dec
cmp
aam
nop
in
cmp
lcall
xor
inc
leave
in
in
aad
sub
lods
dec
ss
jne
mov
ss
pop
or
and
mov
xchg
in
push
insb
adc
mov
adc
lods
or
push
ret
repnz
sub
ljmp
cmpsb
leave
push
push
cmpsl
in
sbb
inc
in
cmp
pop
xchg
dec
aad
push
lret
lds
inc
push
ret
mov
popa
jge
adc
or
iret
jg
sbb
shr
popa
inc
cmp
cmp
out
fnstsw
lahf
inc
pop
aas
pop
and
scas
xchg
jo
ljmp
call
sub
xlat
xor
js
push
inc
xchg
lock
loopne
and
dec
gs
fisubrl
in
scas
adc
nop
push
movsl
or
jae
and
xor
aas
addl
add
ds
jne
xor
mov
add
ret
js
xor
fcmove
cmp
bound
xlat
push
cmp
mov
sti
cmpsl
and
clc
cs
adc
mov
jge
jo
or
push
mov
dec
cmpsb
mov
roll
fidivrl
cmp
pop
lahf
insb
push
mov
les
shll
xor
test
cmp
mov
ja
sbb
inc
stos
jge
test
stos
cli
mov
mov
mov
push
push
xchg
insb
imul
add
movsl
pop
xor
int
ficoms
stc
loop
incb
add
pop
add
aas
push
test
adc
out
cmp
outsb
jae
scas
arpl
and
pop
js
add
mov
and
test
inc
mov
inc
pushf
cmp
movsb
ret
push
outsb
add
cli
jb
jmp
dec
or
bound
ljmp
sub
xor
or
popa
loope
rcr
ss
test
xor
xor
fnstcw
sub
movsl
jge
push
aam
mov
jecxz
stos
mov
cmp
push
pop
add
lret
push
push
das
jbe
roll
xor
fsubrs
bound
popa
cli
push
mov
mov
sbb
add
hlt
mov
adc
xor
mov
repz
and
sbb
test
jmp
inc
aas
or
jl
adc
fsubs
lds
fnstcw
jle
pop
inc
sub
cmp
dec
loope
cmp
mov
xchg
xchg
rcll
sbbb
cmpsl
dec
cli
and
or
pop
fisttps
mov
push
cmp
out
jl
push
sahf
lahf
jae
scas
cld
scas
adc
jb
pop
lods
xchg
sub
int3
jae
pop
sbb
into
cmpsl
dec
ss
icebp
sub
push
jmp
xchg
jbe
sub
push
or
aaa
fisubrl
push
xchg
sub
xor
mov
jno
jns
mov
subb
hlt
sub
or
push
imul
mov
punpcklbw
jb
jae
sub
jmp
push
mov
and
ds
leave
call
add
or
iret
mov
push
sbb
das
fnsave
sub
es
xchg
adc
mov
cld
ficoml
sub
fsubr
dec
adc
push
xor
std
jb
mov
popa
flds
hlt
aad
xor
mov
mov
jnp
int
pushf
and
push
notb
aas
mov
or
xchg
notl
sahf
xor
or
adc
push
jmp
scas
jno
fwait
adc
sub
out
sbb
pop
xchg
xchg
or
sub
push
push
sub
jbe
fidivs
add
lds
cmp
lret
jo
xchg
data16
aam
and
sub
push
adc
xor
lret
jp
xor
jmp
loope
fadds
vmwrite
dec
aam
mov
pushl
and
out
lods
sbb
out
mov
jmp
inc
sub
pop
addr16
cmpsb
cld
adc
xchg
cmp
add
jp
jns
jbe
jl
outsb
in
xor
pop
mov
and
jbe
pop
jno
sub
push
fadds
and
jle
add
jmp
dec
fcmovu
inc
pop
ret
inc
inc
pop
fsubr
xor
aaa
xchg
jmp
subl
and
dec
push
xchg
pop
jge
fwait
jo
nop
inc
movsb
je
movlps
call
sahf
pop
push
mov
pop
inc
mov
in
sbb
add
jle
jns
inc
mov
push
arpl
push
jns
mov
xorb
lods
mov
push
fcompl
pop
sbb
xor
shlb
clc
fwait
mov
test
jne
mov
repz
icebp
aas
pop
out
push
stos
repnz
pop
ret
leave
mov
shll
in
or
xor
fs
call
add
rol
dec
mov
inc
dec
insb
dec
fwait
adc
shrb
and
in
inc
addr16
jp
in
daa
xchg
call
mul
sbbb
jmp
push
sarb
fwait
sub
and
adc
and
jbe
inc
inc
lcall
imulb
ja
mov
inc
lret
sbb
mov
ret
cs
mov
push
add
xchg
out
outsb
test
adc
mov
mov
add
jb
pop
imul
inc
cli
mov
xchg
push
shll
vpshab
mov
adc
push
testb
pop
jle
mov
cli
cltd
and
loopne
shr
push
daa
sbb
loope
or
mov
sbb
ret
push
mov
xor
outsl
push
lret
dec
or
xchg
imul
cmp
loope
push
iret
cmp
mov
sti
jg
arpl
sahf
lds
dec
es
pop
mov
mov
mov
xor
xor
sbb
cmpsl
addl
in
inc
mov
fsubr
scas
outsb
in
test
and
cmovno
mov
test
fistl
insl
adc
jle
mov
jecxz
out
inc
jno
icebp
call
mov
sbb
into
and
aad
dec
inc
call
xchg
decl
pop
sbb
movsb
add
inc
mov
movsb
out
sub
mov
clc
sarl
arpl
ds
jge
sub
vmovntdq
imul
hlt
test
stc
fs
or
or
loop
push
lret
fdivrl
outsb
das
xchg
jl
jbe
xor
pop
inc
push
mov
fadds
mov
mov
jae
sub
xor
clc
sti
stc
add
es
mov
xchg
lea
and
imul
and
nop
shlb
fcmove
std
pop
rorb
xchg
fisttpll
cmpl
arpl
adc
and
inc
pop
xchg
adc
int
mov
xor
lods
lods
or
pop
mov
nop
out
orb
xchg
popa
push
fldcw
sub
and
insb
imul
jecxz
outsb
push
cmp
or
cmp
sub
out
fcomp
mov
data16
outsl
aas
hlt
jnp
fistpll
test
push
in
fwait
add
icebp
xor
dec
mov
dec
ds
sub
xchg
sahf
cld
sbb
push
or
mov
mov
aam
div
lods
fmull
add
loop
or
pushf
mov
cmp
and
jl
or
sub
and
add
mov
int3
mov
jle
test
bound
pushf
push
sbbb
inc
pop
lods
push
mov
lea
vpsubq
mov
stos
inc
into
or
mov
lret
cmp
add
lcall
scas
lret
sub
mov
jecxz
push
jne
xchg
pop
into
jnp
add
int
dec
mov
add
daa
jbe
idivl
mov
scas
js
add
add
pop
faddl
mov
insb
mov
into
fs
int
jno
mov
inc
data16
int
sti
popa
push
aaa
cmp
ficomps
and
and
or
inc
daa
pop
cmp
lock
sbb
test
xchg
shr
jmp
test
rolb
jle
outsb
sarl
data16
inc
inc
jecxz
pop
sub
mov
insb
adc
push
jmp
roll
dec
repnz
aas
xchg
pop
sub
inc
fldenv
push
dec
sub
adc
pop
fiaddl
mov
jb
mov
sbbl
mov
popa
outsb
inc
mov
call
dec
fs
shll
sub
jle
test
adc
addl
scas
jmp
jo
push
inc
popf
or
jmp
pop
pop
dec
aad
cmpb
loop
jbe
inc
iret
sbb
lahf
arpl
jo
je
mov
stc
xor
sbb
jne
pop
or
sub
test
jecxz
or
xchg
cmpsl
out
or
arpl
sbb
jnp
dec
scas
cmp
das
or
xchg
int
mov
sti
arpl
adcl
ds
jns,pn
dec
cs
jl
push
xchg
inc
xchg
dec
loope
and
fsub
inc
xor
in
je
mov
xchg
pop
and
nop
stc
into
sbb
dec
and
push
ljmp
in
int3
or
testb
nop
sbb
add
push
rcrl
add
lods
nop
lods
pop
insb
fstpt
mov
int3
roll
xchg
adc
fnsave
jno,pn
pop
jge
insb
gs
mov
jnp
test
pop
and
xchg
push
clc
incl
xor
imul
push
sbb
sub
fmuls
add
negb
mov
sbb
or
rolb
mov
inc
sti
jne
push
out
in
adc
cmp
sub
cmp
lods
cmpl
push
xchg
mov
xor
loopne
fldl
aaa
aaa
mov
test
mov
dec
lods
jmp
test
leave
ja
xor
je
mov
fldt
xor
scas
bound
ret
sub
mov
inc
outsl
fiaddl
add
pop
xchg
sbb
repz
mov
sbb
pop
aaa
mov
adc
pusha
das
or
sahf
cltd
fs
notl
cmp
lock
inc
in
sub
sbb
xchg
and
cmp
push
sbb
add
or
mov
icebp
testl
mov
repnz
cmp
ljmp
pushf
in
js
shufps
mov
inc
insl
idiv
mov
jb
push
cmp
xchg
xchg
hlt
adcb
dec
lods
xchg
mov
ficomps
xor
outsb
iret
lret
aaa
mov
stc
sbb
imul
pop
hlt
adc
sbb
iret
repnz
bound
insl
cmp
loope
imulb
daa
rcr
push
or
add
push
pop
movsb
dec
mov
cld
mov
xor
and
cmpl
imul
out
dec
sub
cmp
xor
movsl
popf
rcll
dec
adc
sub
pop
repnz
mov
rcll
jmp
pop
out
call
jl
movsb
shlb
das
push
flds
mov
into
dec
std
fisttps
insl
inc
fcoml
adc
lods
aas
cld
clc
lahf
inc
inc
dec
mov
out
inc
or
jecxz
xchg
sbb
jnp
ja
jb
cmpsb
scas
mov
inc
and
cmp
xor
hlt
xor
cld
cmpsb
lahf
lret
and
ficoml
lds
js,pn
gs
fisttps
dec
shrb
sti
pop
push
repz
hlt
sahf
pusha
in
jl
shrl
jne
movsb
inc
fwait
negb
in
outsl
mov
stos
pop
mov
orb
aam
shlb
leave
aad
imul
sti
mov
in
pop
sarb
xchg
clc
negb
adc
push
add
shrb
mov
rcrb
jae
dec
jo,pn
sub
inc
mov
and
test
pop
lods
jg
sbb
push
mov
dec
movsl
mov
loopne
push
fisubl
loope
negb
jo
enter
movsb
sub
dec
jo
movsb
lods
insb
cwtl
pop
cli
ret
lods
pop
adcl
out
subl
sub
dec
out
lock
pop
fcompl
icebp
adc
cwtl
pop
xor
scas
xor
cmp
inc
mov
lret
mov
and
sahf
push
jmp
imul
rorl
jmp
xchg
into
pop
or
or
repz
orb
in
jmp
gs
cmpsb
jge
xor
test
lcall
jne
test
mov
push
dec
ss
mov
leave
mov
ss
ss
fsubp
leave
es
roll
pop
fldl
add
fdivp
addl
jge
sbb
cld
mov
cmp
add
cltd
xlat
stos
inc
and
sub
push
addr16
pop
cmpsl
call
js
sub
pop
repz
push
int
ret
push
jno
aaa
mov
inc
loope
fdiv
testb
adc
imul
adc
push
aam
and
mov
test
shld
lcall
nop
stos
stc
mov
imul
cld
pushf
xor
sbb
ret
lret
cmp
test
jge
lock
jnp
in
outsb
xor
cli
lcall
div
pop
in
push
and
mov
ret
mov
aas
arpl
xor
jecxz
fucomi
add
mov
in
mov
push
fdivs
xchg
faddp
adc
sub
cli
in
enter
cmc
ljmp
aam
jmp
jl
loope
subl
dec
jecxz
sahf
pop
lods
push
sahf
adc
or
ds
pop
hlt
stos
dec
xchg
nop
pushf
push
inc
or
cmp
add
mov
lahf
vpshufd
addl
jb
outsb
sub
test
shll
xor
stos
nop
xorb
or
loop
pop
stos
out
leave
jge
fs
sub
inc
xchg
call
into
mov
ret
jns
xchg
pop
add
and
jne
test
in
dec
push
dec
and
lds
add
adc
lods
push
adc
punpcklwd
add
adc
shlb
add
js
add
xor
aaa
add
push
pop
inc
dec
xor
inc
ss
xor
pop
dec
inc
add
pop
xor
dec
inc
pop
xor
push
pop
xor
push
cmp
add
push
xor
dec
inc
pop
xor
dec
inc
aaa
add
push
xor
pop
inc
inc
push
pop
inc
pop
push
add
xor
xor
inc
add
xor
xor
xor
push
pop
inc
add
push
pop
inc
pop
push
xor
add
xor
inc
cmp
push
cmp
push
xor
cmp
pop
push
dec
dec
add
pop
pop
dec
cmp
cmp
add
xor
dec
inc
xor
pop
cmp
add
xor
push
push
inc
pop
push
xor
push
inc
push
pop
dec
xor
cmp
inc
inc
pop
push
pop
push
dec
pop
push
xor
pop
push
push
cmp
dec
push
push
dec
xor
dec
dec
xor
push
dec
cmp
pop
inc
dec
pop
inc
push
push
pop
inc
add
xor
dec
cmp
push
push
add
dec
xor
xor
inc
dec
xor
ss
dec
cmp
push
push
aaa
xor
xor
pop
push
push
push
dec
pop
inc
add
pop
xor
pop
xor
inc
xor
xor
xor
push
xor
dec
xor
push
add
pop
add
push
add
xor
pop
add
add
push
add
add
dec
add
xor
pop
add
push
add
add
xor
pop
add
add
add
xor
inc
add
inc
add
xor
add
inc
add
add
inc
add
pop
add
add
push
add
pop
add
dec
add
add
inc
add
xor
add
inc
add
add
add
pop
add
xor
pop
add
add
push
add
add
pop
add
dec
add
xor
add
dec
add
add
aaa
add
inc
add
add
inc
add
xor
add
inc
add
dec
add
push
add
inc
add
add
add
pop
add
add
dec
add
add
cmp
xor
pop
add
add
pop
add
pop
add
add
add
push
add
add
xor
pop
add
inc
add
push
add
dec
add
cmp
aaa
add
add
dec
add
pop
add
inc
add
xor
dec
add
push
add
add
dec
add
dec
add
xor
add
add
or
add
rolb
add
or
add
xor
add
pusha
pop
add
loopne
add
adc
add
sub
add
pop
or
adcb
cmpb
add
mov
or
adc
add
lock
addb
add
add
add
add
add
add
add
in
push
add
in
push
add
add
addb
add
add
add
add
add
add
add
sbb
add
add
add
add
add
dec
pop
add
add
add
add
pop
add
test
add
lcall
xorb
add
loopne
add
add
add
add
add
add
add
incb
add
insb
adc
add
add
subb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
inc
or
sbbb
addb
add
add
add
add
add
add
add
outsb
or
xorb
addb
sbbb
cmpb
add
mov
add
add
add
add
add
add
add
rorb
add
jae
add
call
add
add
add
add
add
add
add
jmp
add
add
add
add
sbb
subb
add
dec
add
addb
add
add
add
add
add
add
add
repz
add
add
js
add
add
add
add
add
add
add
or
adcb
add
test
add
rolb
bound
add
fadds
addb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
push
add
xor
add
adc
add
in
add
add
add
inc
sbb
add
or
add
add
add
add
add
add
or
add
in
add
add
add
pusha
add
or
add
in
add
add
add
push
or
add
add
add
add
add
add
push
or
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
in
add
add
add
xchg
add
or
add
in
add
add
add
mov
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
mov
add
or
add
add
add
add
add
xchg
add
adc
add
in
add
add
add
ljmp
add
add
add
add
add
mov
add
in
add
add
add
cli
lods
add
sbb
add
in
add
add
add
adc
add
or
add
in
add
add
add
push
mov
add
in
add
add
add
sub
add
push
or
add
add
add
add
add
roll
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
push
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
in
add
add
add
je
add
push
or
add
add
add
add
add
add
or
add
in
add
add
add
test
add
or
add
in
add
add
add
mov
add
push
or
add
add
add
add
add
add
pop
add
inc
add
xor
pop
add
pop
add
aaa
add
add
xor
dec
add
cmp
push
add
add
dec
add
add
add
push
add
or
inc
add
add
add
dec
add
push
add
add
add
aaa
add
add
add
cmp
cmp
inc
add
xor
dec
add
inc
add
dec
add
add
add
push
add
pop
add
add
or
dec
add
push
add
push
add
add
xor
or
inc
add
push
add
xor
add
add
add
push
add
add
add
inc
add
add
add
xor
push
add
dec
add
add
inc
add
add
xor
pop
add
inc
add
add
pop
add
add
or
push
add
push
add
add
add
dec
add
push
add
push
add
or
pop
add
dec
add
xor
aaa
add
inc
add
add
add
cmp
dec
add
xor
inc
add
add
cmp
pop
add
dec
add
add
add
dec
add
pop
add
add
xor
dec
add
add
dec
add
pop
add
dec
add
push
add
xor
inc
add
add
pop
add
add
add
cmp
cmp
push
add
add
add
push
add
pop
add
xor
add
add
add
push
add
add
dec
add
xor
xor
pop
add
add
pop
add
aaa
add
add
add
add
add
add
inc
add
add
inc
add
pop
add
add
cmp
cmp
push
add
xor
add
pop
add
push
add
add
add
push
add
push
add
add
add
add
add
push
add
inc
add
pop
add
push
add
pop
add
add
xor
inc
add
pop
add
pop
add
add
push
add
xor
inc
add
inc
add
add
push
add
xor
pop
add
or
push
add
add
xor
pop
add
push
add
inc
add
pop
add
add
add
dec
add
pop
add
push
add
push
add
add
xor
pop
add
push
add
dec
add
inc
add
dec
add
add
jmp
jle
js
aam
cmpsb
fidivrs
insl
jle
add
pop
add
pop
mov
aad
jmp
xlat
sbb
jecxz
push
sbb
dec
cs
and
fstps
das
pop
les
scas
add
add
add
add
sub
cmp
lods
dec
mov
inc
aad
pop
xchg
dec
sbb
pop
add
inc
mov
mov
push
xchg
mov
xchg
dec
shr
jne
test
add
and
or
sub
mov
testb
int
fsub
hlt
popa
in
aam
mov
sarb
ds
test
loopne
movsb
nop
popa
cs
sbb
xor
mov
pop
mov
mov
int3
jae
movl
mov
shl
or
xor
push
test
mov
repz
repz
stc
push
add
sbb
mov
mov
call
mov
or
add
sub
xchg
adc
sti
test
inc
add
dec
or
fisttpl
bound
inc
or
in
adc
fisttpll
movsb
daa
lret
mov
pop
movl
loope
in
insl
mov
sti
xchg
rclb
ret
add
ret
mov
or
dec
and
pop
push
push
mov
push
pop
adc
nop
mov
jle
stc
ret
mov
out
push
fmulp
add
js
and
sbb
and
popa
and
fidivrl
ret
enter
push
mov
dec
scas
cltd
sub
push
roll
xchg
mov
mov
lret
dec
fwait
stos
or
stos
outsl
in
adc
jg
ja
pop
dec
loopne
stos
pop
mov
cli
adc
test
jge
pop
sbb
or
cld
mov
or
xchg
leave
stos
std
sbb
inc
stos
push
data16
lods
dec
cmpsb
insb
jo
mov
mov
fstps
mov
jb
xor
or
es
inc
dec
mov
or
mov
sbb
arpl
jbe
cwtl
outsb
hlt
jns
aaa
adc
inc
push
adc
add
loopne
inc
jne
jl
movsl
mov
jne
cltd
fmul
in
adc
mov
enter
stc
repnz
packsswb
adc
adc
jno
jns
std
sub
push
mov
xchg
scas
jno
lahf
sti
pop
sbb
into
inc
xor
xchg
in
and
dec
mov
inc
mov
aam
sub
mov
adc
adc
or
orb
add
mov
hlt
pop
inc
jb
scas
insb
dec
mov
lods
push
ds
pushf
sub
sbbb
shr
pop
adc
push
ss
mov
enter
xlat
dec
jo
aam
jmp
mov
inc
dec
cmp
bound
dec
push
cmp
out
add
mov
aaa
nop
jge
scas
push
lret
sbb
scas
adc
or
push
adc
dec
rcrl
js
in
sbb
into
movsb
mov
xor
cmc
pop
and
roll
jecxz
aaa
into
ljmp
int
sbb
std
popa
dec
sub
xchg
pop
mov
dec
cld
insb
xlat
mov
jle
rol
xchg
lahf
push
js
mov
in
cmp
sti
in
inc
xor
or
enter
jp
ret
arpl
ss
and
bound
mov
push
daa
arpl
pop
lds
mov
pop
and
insb
gs
scas
repz
stos
std
dec
mov
out
push
test
inc
push
mov
addr16
mov
and
test
mov
in
inc
mov
rcrl
adc
ret
xor
imul
stos
movsb
jecxz
inc
or
push
enter
dec
rcr
fistps
dec
std
push
and
xor
push
insb
enter
inc
lea
stc
sub
jne
cmpsb
je
js
sbb
mov
xorb
fimull
clc
xchg
fbld
ljmp
dec
int3
enter
ffreep
adcb
jno
cmp
cld
inc
mov
xchg
sbb
add
imull
stos
outsl
pop
mov
imul
shrl
pop
pop
adc
rcll
push
cmp
jecxz
jae
lods
test
cmp
inc
mov
sbb
and
pop
popa
jp
jb
jmp
mov
cld
outsl
add
cmp
mov
int
cli
or
or
pop
inc
insb
icebp
fimuls
or
pop
mov
fwait
sbb
leave
cs
repz
xor
mov
rcrb
xor
jb
add
jp
shlb
hlt
mov
movsl
lcall
ljmp
les
lods
or
rep
lret
mov
xchg
hlt
mov
xorl
inc
mov
xchg
loope
cmpsl
dec
fcomp
jnp
sbb
stos
cli
aas
loop
fcom
lret
sub
inc
int
mov
movsl
sbb
cs
sahf
and
adc
cmp
inc
shl
cwtl
movsl
cmpb
cmpl
in
rcpps
xor
inc
xor
andl
mov
adc
and
aaa
xchg
std
idivl
inc
mov
push
cwtl
out
jge
mov
mov
push
jecxz
pop
jae
xchg
lret
fs
lock
or
dec
mov
imul
mov
in
iret
push
xchg
mov
mov
mov
jl
repz
cld
aam
push
sbb
mov
pop
mov
lret
popl
in
and
es
idivl
sbb
popf
xchg
mov
xor
shrl
dec
loope
xchg
pop
cmpsb
and
sbb
out
mov
lahf
push
ficomps
pop
jne
outsl
and
and
jno
add
dec
les
xchg
or
ror
inc
adc
out
arpl
aas
xchg
push
mov
orb
loop
push
jp
pop
mov
jmp
shrl
xor
ret
pop
dec
sub
mov
xchg
dec
sbb
into
pop
test
mov
lret
fs
mov
testl
lret
pushf
enter
hlt
mov
cmp
xchg
stos
xor
push
lret
inc
imul
xchg
xor
mov
stos
xor
hlt
out
fsubs
inc
repnz
jge
and
aas
aad
shr
mov
cmp
jmp
jno
cmp
jns
mov
stos
xor
rcrl
ret
hlt
add
daa
and
mov
pusha
jne
sub
dec
ja
add
pop
add
fnstenv
dec
add
sub
fsubrl
cmp
mov
insl
jbe
scas
aas
ret
push
push
push
and
dec
movsl
pop
imulb
sbb
mov
ljmp
mov
mov
pop
xchg
loop
mov
push
in
xchg
adc
xchg
fisubrl
mov
cmp
pop
pop
inc
xchg
mov
dec
adc
lret
mov
pusha
ret
pusha
nop
loopne
mov
jo
jo
xlat
adc
mov
ficoml
push
pop
mov
test
inc
outsb
push
push
pop
sbb
add
aam
addl
jb
rorl
rcrb
lods
add
dec
pop
rcll
in
jmp
pusha
jmp
ja
int3
adcl
dec
enter
es
dec
mov
xchg
stos
addb
ljmp
out
scas
push
mov
xchg
je
int3
mov
loopne
adc
pop
lret
andb
cmp
pop
int
add
aaa
inc
es
xchg
dec
sbb
lcall
mov
data16
dec
movsb
cmpsb
push
xor
sbb
adc
mov
or
jae
nop
imul
mov
dec
lret
sbb
jge
in
outsl
in
or
mulb
mov
mov
das
mov
xor
adc
jmp
or
outsl
mov
jnp
dec
into
dec
xlat
jb
pop
sub
mulb
push
push
xor
adc
pop
push
bnd
and
mov
cmp
cwtl
add
mov
js
sbb
and
push
je
test
sub
ss
dec
pushf
clc
add
pop
pop
imul
mov
out
stos
xor
jb
pop
loopne
out
mov
fs
clc
push
xchg
push
pop
cltd
mov
imul
dec
negl
mov
xchg
push
inc
inc
fmull
stc
adc
out
push
ret
stos
imul
shrb
outsl
mov
xorl
cltd
mov
inc
mov
inc
int3
mov
pushf
or
sbb
lock
xchg
add
xchg
and
loope
inc
iret
js
dec
jle
dec
inc
rcrb
jecxz
loope
xor
bound
mov
pop
adc
js
in
fidivs
inc
mov
cwtl
cli
test
lcall
xchg
int
and
pop
add
cmpsl
adc
lea
add
pop
fsubrp
push
dec
push
xlat
mov
fnsave
imul
inc
out
xchg
ret
inc
pop
js
out
inc
xlat
sub
das
ret
sbb
ss
or
shrl
cmp
xor
and
xor
shll
scas
addl
mov
jl
and
in
adc
pushf
xor
imul
lods
cmp
lock
psrlq
jb
and
cs
out
out
in
pushf
or
insb
or
lea
and
aam
jecxz
aas
pusha
mov
je
imul
adc
pop
scas
xlat
mov
mov
xor
pop
sub
push
pop
cmp
xor
sbb
xlat
rclb
aas
ss
lret
pop
adc
mov
pusha
outsl
jle
out
inc
xor
in
sub
xor
pop
movsl
xor
fsubs
add
imul
mov
insb
and
jo
mov
push
leave
mov
in
lret
dec
mov
xchg
and
push
loope
ss
pop
mov
sbb
mov
or
adc
dec
aad
stos
jge
aaa
push
andb
inc
xor
sbb
jnp
and
push
jno
push
add
jecxz
add
rcrb
inc
mov
mov
jg
outsb
sarb
push
xchg
lock
test
xor
cmc
and
add
iret
pushf
test
pop
cs
pop
vandps
rcll
out
push
sub
je
or
xchg
xchg
and
ljmp
fisttpl
pop
add
xchg
sbb
jp
push
movsb
xchg
sahf
pop
jne
cmc
call
imul
ja
xlat
cs
xor
jo
fdivrl
lock
out
adc
mov
insl
jecxz
out
push
clc
cld
dec
or
rcll
outsb
sahf
cmp
push
nop
pushf
lcall
inc
push
sub
mov
in
add
jb
in
mov
mov
es
inc
push
cmpsb
cltd
add
mov
mov
push
daa
imul
add
arpl
jge
jp
std
add
sub
xchg
addb
dec
lock
inc
inc
cmp
sti
push
test
movsl
jae
pop
pop
cmc
mov
outsb
pop
xlat
scas
sub
cmpsl
negb
rorl
add
pusha
xor
xchg
dec
ss
jle
repz
jecxz
cmp
jae,pn
pop
out
or
lcall
or
loop
ret
xchg
sbb
sarb
pop
inc
aas
ljmp
mov
cmpxchg
in
cmp
in
pop
pop
pop
adc
and
ret
xchg
lret
inc
push
es
aad
cmpsb
inc
dec
inc
nop
jmp
cmpsl
mov
das
add
adcb
cli
rcr
cmp
xor
loop
xor
jmp
cmp
out
cmp
and
cmpsb
push
imul
lret
leave
out
inc
mov
xor
push
xchg
add
jle
add
imul
push
int
pop
js
mov
mov
cmp
push
xchg
pop
roll
daa
movsb
aad
test
sbb
out
xchg
bound
pop
aaa
push
cmpsb
loopne
popa
fs
adc
fmuls
les
cmp
enter
cmpsb
aaa
xor
push
pop
out
mov
div
cld
push
jno
ds
xchg
dec
insl
inc
mov
push
scas
mov
daa
in
stos
popf
jno
cwtl
dec
shll
sbbl
insl
js
lea
sbb
dec
movsb
aaa
jae
mov
daa
jbe
mov
push
enter
push
jle
and
and
or
pushf
xor
addl
rolb
add
add
pop
mov
cmp
loop
add
pop
add
mov
adc
fs
xor
test
in
push
jg
shlb
int
cmp
xchg
push
cmpsb
or
int
or
xchg
es
pop
pop
rcr
fldenv
fimuls
je
mov
cmp
filds
and
in
imul
test
test
leave
push
jecxz,pn
loope
cmp
pmaxsw
push
data16
into
cmp
mov
mov
sub
jno
sub
fcmove
jnp
jmp
cli
jl
add
lret
push
ss
mov
cmp
insl
dec
shl
xchg
cld
nop
movsb
stos
sub
pop
ss
sub
mov
sbb
xor
or
sbb
jb
sbb
ds
push
push
shlb
dec
sub
movsb
mov
dec
js
out
mov
stc
dec
orl
lcall
add
sbb
sahf
mov
cmp
incl
fucomp
and
je
push
fmull
ret
mov
das
mov
out
popa
mov
cmp
mov
mov
add
sub
push
aam
mov
inc
mov
cmp
mov
or
push
cltd
or
test
push
insl
std
fs
mov
psrld
push
mov
jge
xchg
addb
popa
cmc
dec
sti
xchg
sarl
cld
cltd
ret
jne
pop
sbb
sub
mov
lret
xchg
call
adc
mov
or
cli
mov
pop
sub
mov
into
add
xor
je
enter
push
enter
pushf
pop
mov
pop
addr16
pop
mov
fidivrs
sbb
xchg
js
lods
xorb
ds
aaa
mov
pop
movsl
cwtl
jns
adc
xchg
sub
insl
push
pop
sbb
lret
mov
dec
imul
push
xlat
imul
insl
sub
in
xor
pop
mov
mov
dec
into
pop
sarb
xchg
shll
adc
ss
out
lahf
mov
decb
addr16
pushf
imul
mov
xchg
lret
xor
or
xor
bnd
daa
popf
mov
lods
lret
inc
fisubs
pop
jge
push
dec
data16
lods
mov
jl
sub
in
dec
jae
hlt
xchg
pop
rorb
in
pop
push
ficomps
jne
mov
sub
popa
ja
int
xlat
sub
adc
ror
stc
test
ljmp
inc
fs
je
cmp
mov
jl
xor
icebp
lock
mov
or
test
pop
aas
hlt
xchg
int
jl
pop
aad
xchg
loop
arpl
jge
or
pop
imul
cld
inc
ret
jne
shrb
lret
add
sub
push
bound
inc
or
inc
addr16
add
adc
mov
or
dec
xor
sub
add
popl
sti
pusha
je
andb
lods
mov
lcall
jb
pop
fildll
lods
out
jmp
rcrl
not
dec
inc
movsb
xchg
std
das
adc
imul
jns
pop
roll
test
jg
sub
enter
test
pop
jmp
mov
and
test
out
into
or
jo
in
xor
jle
and
jg
mov
and
cwtl
lock
fwait
dec
arpl
push
or
jmp
mov
xchg
test
push
mov
in
mov
fimull
ret
push
sti
add
cmp
pop
sub
mov
icebp
cmp
mov
pop
mov
fwait
and
jl
call
push
push
mov
sarb
or
add
push
push
xchg
mov
inc
cmp
lea
fidivrs
sahf
mov
faddp
inc
jle
ret
lret
mov
gs
into
ret
scas
adcb
or
or
sarl
ret
int3
or
push
jmp
xchg
dec
jne
jmp
outsl
mov
xchg
fwait
inc
aaa
bound
stos
add
pop
cmp
add
aaa
adc
stos
adc
lret
aad
cli
ret
test
mov
or
mov
pushf
lock
test
aas
int
and
sub
sub
inc
in
pop
ret
and
out
popf
and
xchg
inc
cmp
sub
sbb
in
xchg
and
mov
cltd
pop
mov
in
push
add
pop
in
push
dec
sbb
fists
jb
rolb
cmpsb
mov
sti
cli
test
mov
inc
lds
bound
jne
cwtl
pop
or
gs
mov
test
jge
jge
push
in
mov
shlb
lods
pop
xor
push
jmp
xor
jbe
mov
fisttpll
test
daa
jmp
push
xchg
xchg
aad
negb
cmpl
std
shll
pop
addr16
ror
pop
in
stc
outsl
fadd
lods
aam
add
xchg
pop
push
mov
movsb
clc
xor
jl
imul
jb
push
sbb
fistpll
or
push
loop
ds
jle
and
cmp
lds
mov
pop
and
negl
in
lret
data16
xchg
jmp
sub
out
ljmp
lods
mov
pop
sbb
pop
adc
movsl
fidivs
insl
adc
clc
pop
aad
jns
xchg
clc
punpckhbw
mov
cmp
mov
in
test
sbb
pushf
sbb
xor
rorb
sub
dec
pop
xchg
xchg
daa
push
lods
addr16
lods
dec
mov
lods
lods
in
sbb
or
popl
loope
and
jl
or
xorb
mov
pop
rorl
push
insb
sbb
lods
pop
testl
aad
adc
js
xor
push
pop
xlat
int3
ds
stos
xchg
test
jecxz
mov
mov
mov
mov
jb
ret
lahf
jmp
lahf
adc
adc
mul
adc
rcrb
mov
jecxz
fyl2x
sbb
or
mov
mov
mov
sub
cmc
js
insl
stos
jle
and
ja
adc
scas
out
adc
jl
cmpsb
pop
dec
les
jno
pop
std
jp
in
or
xor
ret
jne
icebp
sbb
cwtl
fdivrs
ss
push
inc
lret
aaa
movsb
push
mov
movl
insb
cmpl
sbb
jmp
fwait
lods
lock
mov
jecxz
jns
fs
sbb
aaa
mov
test
fldl
add
add
repz
movsb
adc
movsb
dec
xor
and
add
shll
call
dec
repz
cmp
adc
or
pusha
push
rcrb
dec
inc
pushf
gs
jg
out
pushf
inc
fisttpl
in
mov
imul
int
sbb
ljmp
push
sbb
mov
push
jmp
and
cld
xlat
leave
inc
out
push
mov
push
mov
insl
mov
inc
dec
jecxz
loope
push
pop
push
and
loop
lods
pushf
cmc
cmpsl
aaa
pop
ss
out
dec
sub
sub
mov
aas
int
and
sbbl
popa
or
fldcw
or
jo
addl
lock
out
test
or
push
push
or
mov
mov
cmp
cli
bound
es
inc
or
dec
aas
sarl
pop
loop
mov
sub
mov
call
daa
cmp
xchg
jg
movl
sub
hlt
in
sbb
and
pushf
and
and
inc
adc
dec
mov
mov
arpl
push
mov
and
fstpl
xchg
inc
loop
inc
mov
icebp
xchg
movb
cmp
imulb
bound
cmp
lret
mov
scas
in
je
rorb
xor
dec
jecxz
and
outsl
es
sub
mov
out
mov
jecxz
clc
fdivrl
cmp
int3
or
adcb
adc
cmp
fidivrs
jmp
or
inc
cltd
negb
mov
mov
push
lret
mov
and
push
sbb
or
or
cmp
dec
xor
aas
loop
aad
cmp
push
sub
xor
inc
in
push
jecxz
push
cld
lods
push
fdivs
or
stc
cmp
stos
outsl
xchg
xchg
dec
xor
in
mov
cmp
lods
mov
dec
push
xchg
cmp
push
mov
test
pop
cmp
sub
nop
fcomip
adc
add
ljmp
call
imul
push
cld
inc
cmpsl
jmp
inc
je
dec
je
neg
and
mov
jmp
pushf
sub
push
mov
sahf
fs
xchg
enter
lods
inc
push
sub
push
lds
inc
js
aad
dec
xchg
jae
sbb
sbb
and
std
and
cmpsl
lret
add
jl,pt
and
xor
divb
loop
dec
fdivl
mov
push
xlat
sub
fistpl
fidivl
mov
inc
imul
iret
das
leave
imul
and
hlt
into
dec
push
cmc
push
mov
std
in
test
in
mov
shll
aas
adc
fs
push
lcall
test
lret
mov
stc
filds
aad
leave
xchg
mov
push
es
cmp
sbb
orb
les
jecxz
cmp
mov
push
push
jbe
push
int3
leave
mov
lock
in
jmp
xor
lcall
imul
mov
dec
mov
out
les
loop
inc
jne
lahf
push
out
stos
jmp
out
add
pop
rcrb
movsl
jg
sub
test
mov
pushf
addr16
gs
xor
add
sub
jecxz
jge
mov
cmp
cmp
aas
rcr
lock
sbb
les
in
inc
push
adc
pop
sbb
mov
add
jbe
scas
mov
xchg
jmp
dec
call
movsl
outsl
mov
loop
popa
sub
dec
push
push
addr16
mov
cltd
adc
fwait
push
push
inc
les
cmpsl
push
dec
sbb
dec
lret
xor
outsb
mov
mov
xchg
fbstp
das
cmp
xor
out
mov
int3
in
jb
fs
adc
xchg
cmp
mov
xorb
inc
fistpll
jmp
and
rcrl
dec
cli
cmp
cmp
mov
ja
outsb
mov
jmp
daa
pop
loopne
fcmove
dec
cmovnp
sbb
aad
or
ds
fldenv
pop
int3
jge
push
mov
sub
xor
inc
pavgw
jae
mov
inc
or
xchg
or
push
push
sbb
dec
call
bound
dec
fdivrl
loop
add
push
movsb
daa
sbb
test
or
in
lods
in
mov
loope
mov
ds
cmp
push
and
cld
xchg
mov
imul
jp
test
in
xor
pusha
imul
aas
sbb
cmp
ss
aas
popa
nop
push
ss
sub
inc
or
incb
mov
in
pop
sub
cmp
jns
out
lret
push
push
leave
adc
fwait
stc
pop
lds
enter
jo
adc
add
xor
insl
ss
and
mov
ret
inc
insb
mov
jne
or
xchg
mov
xchg
hlt
push
dec
testl
xor
cmp
fadds
gs
daa
sbb
scas
test
ret
xchg
sbb
mov
in
mov
adc
lods
add
fmulp
subb
sbb
rolb
call
int
adc
stos
sub
in
ret
mov
add
cmp
jle
ss
xchg
out
test
mov
xor
xchg
mov
stos
add
jge
adc
jns
and
sbb
out
jle
ficoml
negl
out
sbbb
adc
pop
leave
xor
inc
and
xchg
out
jnp
mov
sarb
aas
mov
push
sarb
xchg
mov
out
mov
fistps
push
fwait
adc
pop
sbb
adc
addr16
xor
mov
and
loop
cs
outsb
fdivs
xor
mov
jb
mov
mov
jle
pop
outsl
push
sbb
mov
dec
push
insb
rcll
clc
push
repz
xchg
les
incl
and
jnp
push
inc
mov
mov
fistps
jl
ret
pop
cmp
int3
scas
xor
scas
xchg
lock
add
xchg
push
xchg
insl
cmp
loopne
push
jle
and
adc
sub
movsl
fbld
cmpsl
jecxz
xchg
sub
mov
test
inc
cmp
jle
jno
das
stos
xchg
pop
xor
shl
aaa
dec
xchg
pusha
or
inc
mov
pop
sbbb
loope
sbb
call
idiv
ficoms
inc
and
cld
ftst
sub
add
pop
add
dec
lods
adc
shr
inc
icebp
mov
flds
adcl
notb
lea
push
pop
xchg
jecxz
sbb
fiaddl
push
jge
lea
cmp
adc
stos
mov
popf
cmp
outsl
icebp
jns
or
mov
jmp
movsb
xlat
addr16
aam
push
jecxz
cmp
sub
mov
das
insl
jno
sbb
leave
jp
and
popa
cmpsl
push
jo,pn
mov
or
clc
ficoms
and
cmp
int
mov
in
shlb
mov
jle
mov
iret
sub
xchg
cs
bound
inc
ret
xor
out
mov
sub
inc
loop
das
in
xor
filds
jge
mov
or
inc
test
and
mov
mov
cs
sbb
cmpsb
sub
jno
jbe
pop
inc
sub
sub
mov
jno
into
mov
push
pop
mov
xchg
popf
cmc
cmp
jmp
popa
imul
mov
arpl
mov
mov
add
shrb
cmp
sbb
in
repnz
or
inc
pop
adc
pop
and
fildl
and
loop
hlt
cmp
add
or
in
mov
mov
inc
insl
add
rcll
xor
mov
jne
lods
push
sahf
adc
sysexit
pop
cmc
mov
sbb
mov
or
lock
push
aad
mov
rol
dec
xor
xchg
push
mov
adc
pop
and
xor
movsl
dec
or
mov
in
push
jl
jbe
push
pusha
jp
mov
dec
mov
add
sub
mov
sub
xchg
cld
push
pop
mov
mov
cmp
xchg
jns
push
popf
ret
sahf
mov
xor
mov
push
push
cmp
sbb
lret
fwait
pop
mov
out
dec
gs
dec
pop
pop
xor
add
lret
je
leave
data16
inc
xor
xchg
xchg
aam
dec
push
les
cmp
ret
lea
int
jmp
les
mov
stos
mov
sbb
xchg
sub
cwtl
orb
aad
and
int3
mov
dec
xchg
xchg
out
das
xor
dec
stos
inc
jns
xor
in
imul
movsb
insb
mov
push
or
sub
lret
cs
inc
shll
aas
in
test
adc
inc
adc
ret
test
test
fwait
loope
xchg
push
inc
or
jmp
push
sti
xchg
adc
mov
jge
inc
adc
mov
cli
js
call
xor
pop
nop
ss
mov
adc
loopne
lret
mov
push
adc
or
in
insb
loop
rcrl
fstpl
dec
mov
or
push
das
daa
jg
add
in
xchg
test
jae
and
mov
movsb
xchg
push
push
xorl
cmp
lret
sbb
fistpl
mov
cwtl
sbb
mov
rcrl
jg
mov
sbb
lret
or
pop
push
imul
sub
adc
decl
test
add
lock
mov
es
pop
addr16
sub
push
sbb
nop
cmp
mov
cmp
add
inc
int3
or
imul
test
fbld
xchg
cmp
cltd
inc
xor
test
shrl
sbb
int
dec
sbb
pop
aad
jmpw
inc
loopne
fneni(8087
adc
shll
iret
outsb
int3
in
repz
out
sub
mov
bound
pop
arpl
add
and
or
mov
lock
dec
nop
cmp
out
jns
jge
dec
mov
sub
sub
jle
stos
ret
mov
cmp
ror
fisttpl
mov
pop
rcrl
movntq
cs
fsubrs
adc
push
popa
inc
arpl
mov
or
add
ds
mov
jo
and
dec
jno
test
xchg
shrb
or
mov
add
and
popf
adc
add
loop
fistl
pop
pop
sub
cltd
jmp
inc
test
int3
adc
and
jae
lea
aam
mov
stc
lret
jmp
dec
jge
arpl
and
cs
sarl
jle
mov
xchg
mul
aaa
mov
ja
or
lods
pop
and
int3
and
in
or
jge
lret
cmp
lret
movsb
push
xor
mov
add
vpunpcklqdq
test
cmp
test
repz
scas
loop
and
inc
sbb
adc
ja
ds
fs
aas
pop
push
shlb
push
mov
xor
test
xchg
js
pop
sbb
aam
out
out
orb
push
push
sti
jo
mov
ds
or
fidivrl
dec
cwtl
jecxz
jo
jmp
push
sbb
or
xor
push
sbb
sbb
loopne
and
mov
jmp
imul
sarb
dec
bound
add
mov
subl
push
sbb
sub
or
inc
xchg
loopne
xlat
or
mov
int
mov
pop
cmpsb
adc
or
jecxz
dec
adc
sbb
push
push
sbb
dec
pop
cmc
pop
psrad
jle
je
in
sahf
les
sbb
jge
test
mov
addr16
sbb
inc
push
xor
outsl
popa
xchg
ret
dec
jmp
xor
into
fidivl
outsl
push
orb
xor
adc
xor
or
insl
jno
test
pop
pop
mov
test
push
aas
mov
pop
js
inc
out
into
shll
dec
sub
jp
into
repz
mov
xor
std
cmpl
mov
and
dec
insb
outsb
repz
int3
lds
cmp
enter
adc
inc
jmp
or
cmp
aad
daa
sbb
mov
lcall
pop
notb
sbb
insb
lea
imul
mov
adc
inc
cmp
add
push
inc
or
pop
cltd
shl
loop
mov
pop
add
dec
cwtl
hlt
mov
xorb
insb
jae
pop
xor
mov
decb
int
mov
imul
adc
xchg
cmpsb
jae
aam
mov
jecxz
xchg
lods
jne
and
mov
xchg
js
pop
mov
mov
adc
sarb
dec
rorl
enter
push
mov
ret
mov
add
pushf
adc
add
out
pushf
jae
inc
in
jmp
inc
lret
lcall
push
xchg
push
lcall
imul
jns
inc
cmp
jmp
cld
mov
repnz
dec
ss
push
mov
xorb
xchg
lret
out
arpl
sub
iret
popa
daa
inc
mov
and
ljmp
push
scas
pusha
data16
xchg
and
out
jbe
data16
sub
mov
xor
jg
cmp
lds
fmul
mov
xlat
cmpl
jl
mov
lock
sbb
shl
adc
or
pop
jp
js
cmp
fisttps
cmovg
push
push
xor
gs
imul
nop
testl
and
cwtl
lcall
lds
cmp
rolb
icebp
ljmp
jne
pop
mov
jns
fstl
cwtl
mov
popf
xchg
xchg
in
dec
js
call
cmp
xor
out
xor
adc
test
mov
sahf
lods
hlt
sbb
mov
or
add
inc
sbb
imul
ja
xchg
pop
add
fsubr
pushf
jns
popf
push
vcmpps
adc
cmp
lods
frstor
pop
push
mov
stos
js
jmp
out
mov
push
sub
pop
sbb
jne
outsl
pop
and
movsb
sub
sbb
adc
loopne
jp
add
jmp
std
out
fmull
lahf
xlat
in
xor
fimull
jnp
mov
push
insb
mov
loope
adc
xchg
or
push
jle
fcmovb
xchg
cmp
imul
fwait
dec
call
call
pop
lahf
cwtl
pop
cmp
push
sub
test
lahf
in
mov
imul
in
js
popa
mov
cmp
dec
push
fadd
push
jmp
mov
xchg
mov
arpl
aaa
lret
push
sub
xor
add
sbb
testb
into
lock
sti
std
xchg
movsb
into
cmp
mov
popa
shlb
addr16
decl
cmp
loope
mov
cmp
push
std
add
inc
data16
mov
mov
outsl
mov
aam
in
fwait
mov
sub
sar
arpl
pop
jmp
nop
xchg
jmp
jl
mov
mov
mov
pop
mov
aaa
adc
aaa
xor
and
cmp
sarl
mov
xchg
cmp
ja
jns
fwait
dec
push
mov
shll
and
sbb
fwait
insb
add
ror
pop
test
icebp
es
stc
nop
xchg
ljmp
pop
xor
jmp
rorl
fcoms
cmpsb
push
repz
hlt
mov
fldcw
and
scas
push
push
push
cmp
pop
mov
aas
sub
lahf
xchg
inc
sbb
xchg
and
les
shrb
xchg
mov
cmp
ljmp
adc
mov
es
cmp
sbb
hlt
lea
popa
lods
pop
sub
outsl
mov
leave
add
cwtl
and
sbb
lods
pop
not
aam
stos
ret
mov
xor
cmpsl
and
bound
in
mov
xchg
sarl
fs
inc
fistpll
and
scas
xor
dec
inc
shlb
mov
mov
jnp
push
outsb
lock
les
icebp
sbb
or
iret
push
scas
adc
cmp
je
mov
sub
add
pop
and
rclb
push
mov
fdivrl
mov
jnp
outsb
notb
leave
pop
clc
inc
daa
mov
inc
push
inc
pop
xor
xchg
fisubl
lea
mov
inc
aaa
aas
ficoml
test
inc
dec
cmp
push
ja
inc
sub
sub
lods
sbb
jae
fdiv
pop
add
popf
lods
aad
pushf
sti
mov
sbb
or
lods
insl
daa
in
loopne
insl
jl
push
ljmp
lret
mov
pop
and
in
jae
ljmp
aam
les
jecxz
ret
jmp
ss
xor
sbb
pushf
mov
xchg
ss
inc
xchg
sbb
ss
adc
push
sarb
fdivrl
cmp
push
cwtl
add
les
insb
and
stos
loop
jmp
mov
xor
daa
movsb
inc
add
leave
ret
pop
and
enter
and
or
sbb
and
es
inc
cld
pop
add
push
jg
dec
xor
fimull
mov
cmp
es
rcrb
bound
leave
cli
cmp
cmp
loop
dec
into
jb
mov
insl
mov
dec
mov
shrl
aaa
mov
rol
push
ret
out
inc
iret
adc
and
addb
sbbl
std
jbe
test
lret
inc
gs
outsb
sbb
mov
in
dec
mulb
lret
jg
and
into
pusha
xor
jmp
pop
xchg
jp
xchg
or
xor
adc
sub
dec
pop
push
popf
and
jae
fidivl
das
or
jae
sbb
pop
stos
ja
out
shll
jle
rolb
popa
jno
arpl
cmpb
xchg
jne
push
fcmovne
arpl
sbb
push
rcll
repz
loope
int
inc
jg
aad
loopne
fs
cli
in
movsl
and
insl
mov
xor
stc
iret
loope
out
cmp
pop
pop
xor
insl
cmp
dec
mov
loope
xor
and
push
sti
popf
push
jmp
arpl
test
dec
inc
pop
test
sti
or
and
ja
es
movsb
inc
adc
inc
lock
cmp
cmp
push
adc
mov
loope
clc
pop
test
pop
orl
xchg
cmp
mov
and
sub
scas
jae
addr16
notl
pop
sbb
movsl
sub
add
add
jle
ret
repz
std
jle
loope
mov
shlb
in
add
and
add
add
mov
inc
xlat
fs
negl
mov
loopne
loope
leave
hlt
movhps
hlt
icebp
shrl
cmp
mov
mov
inc
mov
scas
xchg
xchg
jge
xorl
lahf
cmc
sbb
cmp
mov
pop
idivb
cld
lahf
sub
pop
imul
mov
jp
andb
push
pop
dec
sbb
jno
or
test
jle
xor
mov
inc
xlat
pop
or
jmp
sarb
cmp
xor
push
sarl
pop
stos
ja
push
cmp
adc
inc
ss
cmc
xor
fsubs
mov
pop
dec
loop
add
clc
push
mov
adc
or
cmc
inc
into
add
int3
jmp
popa
push
jecxz
mov
cmp
jge
dec
cmpb
add
pop
sbb
add
fimull
lcall
adc
mov
inc
jne
shll
outsl
push
movsl
and
mov
cmp
lds
cmp
icebp
std
pop
scas
test
pop
inc
add
jmp
xor
test
mov
mov
lret
rcr
push
mov
cmp
lds
pop
mov
and
test
fildl
es
popa
sahf
test
add
ja
sub
xor
add
mov
orb
pushf
push
in
daa
xchg
dec
or
pop
es
mov
nop
push
adc
test
push
es
push
icebp
push
jmp
repz
or
xor
push
mov
scas
notl
sbb
fwait
icebp
sbb
aas
shrl
adc
icebp
fmuls
das
out
xchg
lahf
mov
mov
or
bound
sbb
fldt
or
xlat
pusha
jo
fsubs
ret
lret
jecxz
and
fnop
mov
stos
into
jb
int
cltd
jge
stc
inc
std
in
movsl
push
dec
and
shrl
sarl
mov
dec
subb
hlt
jmp
daa
sub
cmp
lods
sub
mov
mov
cwtl
enter
mov
cmpb
pop
sub
push
jecxz
daa
ja
in
adc
jb
and
inc
mov
add
ljmp
jmp
or
sbb
dec
lock
sbb
jbe
xchg
mov
jae
or
lock
rcrb
je
push
mov
push
sbb
je
bound
flds
int3
pushf
je
testb
addr16
lea
mov
jnp
cmc
push
sub
xor
pop
or
popa
sub
inc
scas
in
loop
pop
out
push
add
push
mov
cmpsl
cmp
mov
xor
shll
sub
push
adc
in
lds
gs
cmp
shlb
push
lret
and
push
sti
xor
mov
pop
push
stos
dec
adc
lods
call
mov
push
call
cli
decb
addr16
pop
bnd
faddl
sub
call
cmp
dec
in
andl
faddl
stc
ljmp
mov
cld
loop
movl
mov
lea
jbe
jo
bound
xor
leave
out
lods
cmp
sub
jecxz
je
mov
or
cmp
stos
xchg
add
mov
mov
pop
pop
dec
inc
cmp
sub
aad
inc
mov
xchg
in
mov
xchg
jbe
mov
pop
orb
int
rcrl
xorl
mov
mov
leave
and
cmpsl
sti
xor
imul
aas
mov
out
add
mov
xor
in
call
or
mov
push
iret
cltd
aas
jno
int
sbb
repnz
and
or
sbb
mov
dec
scas
inc
fnsave
ljmp
lods
in
mov
push
pop
mov
mov
ret
add
cmp
xchg
mov
jbe
push
pop
xor
inc
es
fstpl
adcb
jbe
jge
adc
lret
dec
push
mov
push
adc
decl
mov
je
negl
scas
dec
repnz
rcrl
jge
and
popa
jo
pop
jle
push
mov
cmpsl
imul
mov
push
jecxz
push
mov
test
pop
pop
cmp
pop
ja
das
cltd
clc
dec
xor
or
mov
enter
out
mov
xor
dec
mov
mov
dec
xor
movsb
inc
jnp
shl
mov
push
push
ja
mov
mov
repnz
dec
shlb
daa
ficompl
jecxz
cld
mov
fisubrs
in
cmp
mov
hlt
popf
inc
popf
rcll
mov
sub
push
mov
xlat
xlat
fistpll
mov
push
sub
jmp
adc
aam
inc
mov
scas
or
mov
outsb
xor
pop
addr16
or
push
mov
lret
add
cmc
in
test
cmc
push
add
jge
jmp
push
sub
cmpsb
mov
ljmp
sbb
mov
ret
push
sub
cmp
lahf
push
pop
mov
and
sub
jns
pop
xchg
mov
fildll
inc
loopne
lahf
cmpsl
or
mov
in
and
addr16
data16
push
push
fwait
out
or
inc
fidivrs
je
call
popa
out
dec
ret
sub
or
sub
inc
dec
ret
xchg
inc
fsubrs
mov
pop
in
mov
xchg
jno
adc
scas
scas
xor
sub
sbb
test
cmpb
mov
ja
sahf
in
push
std
adc
out
sub
jnp
xor
xchg
loopne
sub
pop
outsl
stc
andb
cbtw
mov
adc
pop
out
pushf
ss
lods
loopne
dec
push
lcall
pusha
aam
adc
fcmovu
inc
push
fmul
inc
jge
aad
push
inc
adc
xchg
push
pop
nop
lahf
adc
sub
xchg
jae
inc
lahf
mov
lea
xor
decl
inc
enter
inc
inc
lcall
xor
mov
insb
cwtl
jae
loop
xor
test
inc
arpl
fsubrl
inc
dec
mov
insl
dec
in
arpl
mov
int3
das
inc
jle
mov
add
add
sub
jmp
mov
orb
and
ret
pop
add
and
add
dec
adc
aas
jge
scas
std
jno
jecxz
sbb
mov
jae
outsb
test
sbbb
inc
sub
lcall
fbld
adc
lahf
loop
ss
out
inc
cltd
shrl
mov
push
cmp
cmp
mov
pop
cltd
roll
int3
adc
cltd
rol
lods
adc
inc
in
sub
and
inc
lret
cmp
xchg
push
subl
into
xor
sbb
shll
ljmp
sbb
int3
inc
and
sub
mov
fdivrs
dec
in
in
adcb
sti
jnp
add
cmp
dec
loop
jb
and
pop
dec
nop
jbe
adc
popf
outsb
movsb
int
jno
adc
dec
cmp
sbb
hlt
cmp
mov
fldl
xor
jge
cmp
pop
addr16
pop
or
out
notb
xor
stos
pmulhw
nop
xchg
adc
outsl
rorb
jnp
push
fadds
pop
xchg
fmuls
pop
lea
inc
imul
push
fcmovnu
add
cmp
cmp
xor
cmp
push
pushf
mov
data16
loop
pop
xchg
sbb
ja
dec
mov
cmp
leave
push
inc
dec
insb
push
testl
lcall
inc
push
lahf
and
or
mov
insb
cmp
cs
sbb
loope
fsubl
cs
push
into
fbstp
rorb
scas
in
sub
adc
mov
mov
shll
repz
pop
outsl
and
leave
dec
int
out
and
xlat
out
movsl
inc
test
inc
lods
roll
mov
in
or
scas
lahf
xor
push
push
and
adc
cmp
fnstcw
loopne
push
cmpsl
or
pop
sbb
cmpsb
loope
and
push
pop
sub
cwtl
cs
enter
jae
mov
outsl
or
aaa
ljmp
mov
movsl
sub
jo
adc
pop
cmp
sbb
push
movsl
pop
mov
hlt
push
cmp
mov
adc
jg
out
stos
and
scas
popa
out
lock
push
jb
mov
mov
iret
insl
push
clc
ss
out
bndstx
cmp
cmpl
subl
sbb
sbb
fs
les
outsl
jmp
mov
js
sti
ds
fwait
dec
mov
ljmp
out
div
pop
daa
int3
data16
popa
mov
andl
mov
jmp
pop
bound
sub
mov
mov
inc
into
lret
jg
aam
out
cmc
mov
and
dec
ja
popa
add
push
xor
push
jge
in
jge
mov
xlat
add
lahf
pusha
and
cmp
sub
push
mov
lods
xor
xorb
lcall
orl
push
fldt
jmp
mov
out
popa
rcl
mov
and
lods
pop
fwait
and
sbb
pop
xor
mov
and
push
es
add
aaa
ljmp
sub
adc
push
mov
push
xor
fdivl
out
adc
push
mov
xor
dec
jno
ret
and
rorl
jl
loopne
xor
adc
cmp
sbb
add
rcrb
adc
jns
outsl
sub
fldt
sbb
mov
fnstsw
and
xchg
add
sbb
push
out
xchg
mov
lret
cmp
push
jmp
aas
mov
fsubr
vcvttps2dq
xchg
xchg
ret
test
and
inc
xchg
imul
adc
push
lret
add
pop
mov
stc
jb
or
add
add
sub
movsl
inc
call
push
aad
push
pop
fcompl
xchg
mov
or
aam
sub
jmp
pop
shll
and
sbb
cld
xchg
sbb
xlat
push
or
mov
shlb
push
push
jge
sbb
imul
dec
rcrl
add
sbb
outsl
pop
insl
je
scas
inc
fsubrl
or
pop
xor
mov
sarl
test
lret
js
aad
fwait
pop
shll
subb
inc
mov
in
insl
pushf
outsl
daa
cmp
ret
mov
adc
ja
cmp
inc
xor
js
mov
add
adc
mov
jge
adc
enter
inc
mov
hlt
add
vmovups
push
jp
xchg
xchg
dec
add
fs
pop
stos
in
xor
inc
stc
test
jo
loop
dec
into
aad
cli
loop
adc
neg
add
mov
cltd
sbb
insl
mov
repnz
sbb
ret
addb
and
mov
xchg
jnp
dec
and
ja
mov
xor
jo
add
dec
cltd
dec
jne
dec
mov
adc
mov
jae
ret
iret
pushl
mov
ret
popa
xchg
gs
ss
mov
or
mov
or
cmp
les
lret
cmp
outsl
fwait
imul
jne
pcmpgtb
dec
rol
jo
adc
sbb
mov
mov
fcmovnb
jns
ss
fcomi
test
pop
iret
jmp
add
pushf
push
insl
cltd
add
ljmp
cmpsl
pop
lret
cwtl
mov
es
push
push
lret
or
mov
in
mov
mov
jge
add
scas
dec
arpl
and
dec
xchg
andl
outsb
push
mov
hlt
push
sarb
and
movsl
hlt
rcrl
imul
xor
sub
cmp
out
mov
test
jb
push
cmp
mov
inc
addr16
mov
jle
shlb
movsb
dec
int
lods
sbb
repz
pop
movsb
addr16
aam
bound
fwait
push
rorl
sbb
str
negb
cmp
jnp
rcrl
mov
and
and
loopne
mov
add
sbb
xchg
push
pop
jns
or
fsts
or
jae
fstpl
shl
int
insb
sbb
outsl
das
push
add
adc
sbb
insb
sub
pop
xchg
pop
mov
sub
psubusb
dec
xchg
jmp
jge
cmp
jnp
xchg
dec
idiv
sahf
out
or
icebp
loope
pop
imul
add
jmp
hlt
jecxz
pcmpgtb
pop
mov
repz
mov
shll
sub
scas
adc
andl
mov
stos
jmp
mov
sub
or
mov
inc
xchg
repz
mov
rol
lock
nop
lahf
sub
jmp
xchg
mov
push
pop
gs
xor
mov
mov
cmp
cmpsl
push
or
sbb
scas
je,pt
add
push
cmc
jmp
mov
pop
xchg
push
sub
xchg
pop
cmpb
xor
lock
addb
cld
cmove
movsb
push
fisttpll
pop
fcmovu
xchg
in
sbb
mov
mov
in
jle
ja
mov
dec
add
ror
jmp
add
jl
ljmp
pop
dec
pop
aad
cmp
fcmovbe
pop
fidivl
rolb
mov
fldl2t
jmp
test
push
fistpl
pushf
in
pop
lods
cmpsb
or
repz
cld
push
adc
jge
movsl
dec
push
jnp
mov
xchg
xlat
adc
aad
and
pop
sub
test
and
leave
ds
cmp
popa
bound
mov
in
lahf
orl
sub
inc
adc
push
loopne
stc
loopne
out
xorb
clc
shlb
lods
jmp
jbe
daa
sbb
fsubrp
mov
ret
loope
aad
dec
mov
imul
fstl
jno
jg
adc
push
and
and
enter
cmc
pusha
daa
shlb
xchg
jae
mov
jne
sub
jl
ljmp
inc
xor
gs
mov
mov
xchg
bnd
mov
mov
xchg
push
testl
cmpsl
popa
shr
out
es
jns
cs
or
out
add
fidivrl
lret
mov
pop
test
out
push
aaa
jecxz
xor
ror
or
push
xor
cld
inc
adc
inc
mov
out
dec
mov
int
shlb
in
sahf
push
pop
cwtl
xchg
cmp
and
and
mov
push
or
add
jmp
in
mov
jg
adc
lahf
shl
push
popa
and
mov
movsb
xor
cli
out
stc
xchg
push
enter
mov
inc
xor
das
cmp
pop
sahf
add
ljmp
addr16
mov
rol
imul
cmp
mov
shll
loopne
cmp
mov
cmc
int3
mov
mov
dec
jo
push
dec
jo
test
mov
das
cmpsb
mov
call
les
or
stc
mov
sahf
push
mov
fadds
sbb
lock
dec
jns
fbld
sub
lock
lret
xchg
sub
jle
shll
cmp
sahf
cmp
jmp
jbe
add
sti
push
popa
sbb
js
or
lahf
iret
rol
repz
ja
aad
xchg
inc
xor
es
js
sbb
call
pop
mov
push
mov
jg
pop
mov
sti
out
in
xor
and
xor
test
dec
movsl
sbb
call
ret
inc
inc
jbe
test
lahf
outsl
aad
cmc
adc
call
es
sbb
sub
dec
jmp
cmp
push
cs
fistl
push
xlat
cli
or
lret
and
dec
cwtl
and
mov
mov
lret
std
jg
test
mov
arpl
ja
sbb
inc
ds
add
jle
inc
leave
jge
shrd
gs
dec
loope
jno
jne
sbbl
mov
repnz
pop
cmp
mov
ret
push
pop
jne
xchg
sbb
int
pushl
adc
fistl
shrb
les
inc
pop
mov
cld
lret
or
sahf
mov
dec
dec
int3
nop
lahf
popf
xchg
outsb
and
adc
push
push
orl
imulb
adc
push
mov
jle
ret
fimuls
ret
out
pop
xchg
pop
dec
and
inc
add
push
xchg
mov
xchg
gs
xor
ret
out
dec
fildl
push
sahf
push
sbb
and
das
nop
ja
dec
mov
fldenv
mov
sbb
add
hlt
mov
ljmp
mov
jecxz
sbb
fs
std
fisubl
sbb
push
mov
out
jns
or
cmp
lahf
or
loopne
jecxz
into
inc
enter
inc
adc
sub
insb
and
cmpsl
jbe
cltd
xchg
fsincos
push
aam
jo
movsl
xor
fxch
negl
in
inc
xor
int
jbe
shlb
jge
or
jp
sub
push
stc
cmpsl
sahf
fisttpl
mov
pop
fldl
sarb
push
rcr
and
sahf
cld
cmp
les
pop
fbld
cmp
sti
and
stos
fcmovu
stos
inc
adc
lret
aaa
fnstsw
andb
mov
push
jno,pn
push
sbb
push
and
dec
mov
xchg
fcoml
and
cmp
int
mov
mov
out
les
lret
mov
push
xchg
dec
mov
fwait
sti
and
aam
loopne
inc
lahf
or
cli
sbb
sub
pushf
mov
pushf
subb
mov
ficompl
insb
and
mov
imul
push
test
fistpl
mov
stc
popf
add
or
in
cmp
in
push
data16
in
xor
add
mov
aas
mul
leave
cli
ret
sbb
jge
pop
dec
sahf
gs
sub
stc
loopne
inc
pop
fisttps
lea
add
push
gs
jg
insl
sub
cmp
pop
roll
repz
ljmp
les
cmp
mov
mov
in
data16
int3
or
mov
fptan
cli
imul
aaa
fistpl
lea
dec
pushf
pop
cmp
push
ljmp
mov
andb
add
xchg
lahf
cmpb
ss
push
insl
shr
hlt
leave
enter
cltd
jns
xchg
das
and
and
movsl
push
pusha
mov
cld
inc
stos
mov
daa
loopne
mov
push
lahf
out
xchg
icebp
mov
out
aad
adc
jbe
les
pop
add
fidivrs
mov
mov
in
in
adc
xor
xchg
aad
mov
movsb
sar
and
jbe
fdivrs
mov
inc
roll
stc
push
adc
xchg
rorl
stos
lahf
mov
xchg
das
insb
sbb
mov
dec
mov
xchg
ret
jge
lret
push
leave
insl
mov
repnz
leave
cmp
aad
aaa
jg
pop
xor
call
gs
imul
jo
jae
sbb
dec
xchg
outsl
mov
mov
mov
lods
outsb
inc
adc
cmp
lcall
pop
jecxz
dec
inc
jae
lock
js
mov
int
push
xchg
into
ljmp
mov
enter
loopne
push
jl
jmp
into
imul
xchg
sub
mov
test
lods
shrb
and
scas
call
jne
fiadds
lret
std
pop
fbld
out
imul
scas
jns
ss
stc
stos
cmpsb
xchg
les
and
sub
push
fbstp
mov
sub
push
pop
cmp
mov
gs
mov
push
idivb
das
push
data16
dec
call
testl
dec
gs
push
jbe
or
pop
out
jmp
sub
in
pop
test
insb
jmp
in
call
cmpsl
cmpsl
xor
popa
push
and
inc
mov
scas
or
cmpsb
xchg
sub
adc
das
mov
je
loop
pop
cmc
add
sbb
in
mov
jle
testl
adc
sbb
mov
mov
jb
ljmp
in
cmp
mov
and
outsb
movb
mov
mov
clc
rcrb
in
fwait
enter
stc
jge
in
mov
stos
mov
or
xchg
sub
jl
pop
outsb
mov
and
mov
outsl
dec
sbb
insl
fstpl
push
incl
pop
ret
sahf
insl
cld
mov
int3
ficoml
popa
and
cmpsb
rcl
add
xorl
outsl
cwtl
out
and
mov
xor
jg
lods
xchg
adc
push
jg
outsl
or
in
cmpsb
in
pushf
mov
rorb
xchg
sub
cmpsl
clc
cmpsl
out
shlb
jle
push
fisubl
iret
jnp
sbb
insb
jo
cld
add
pop
jbe
xchg
pop
pop
jno
or
lret
sbb
push
or
mov
ds
cmp
lret
mov
mov
movsl
push
int
std
sub
push
inc
gs
xchg
enter
mov
jge
pop
push
test
and
dec
or
lret
ret
sub
call
pushf
leave
int3
add
fs
cwtl
mov
adc
cli
sub
add
das
sub
daa
push
add
add
cmc
movsb
jo
imul
or
adc
push
push
adc
inc
iret
push
mov
and
sbb
sbb
iret
dec
xor
in
xchg
xchg
ret
fstps
jge
mov
iret
add
push
fstpt
imul
mov
jae
or
jno
dec
aas
push
xor
push
mov
adc
jbe
jae
in
repnz
sub
test
lret
lods
xor
les
add
fildll
clc
xor
jl
pop
pop
mov
pop
rorb
sub
add
lea
push
arpl
outsl
sub
fs
repnz
xchg
fst
bound
loop
mov
dec
sub
push
mov
lds
push
in
pusha
aaa
or
push
add
xchg
adc
push
jno
inc
mov
in
mov
mov
add
xrelease
sub
cmpsl
or
sti
shlb
loopne
fwait
or
and
pop
sbb
popf
cld
les
xor
jno
jo
mov
sub
hlt
fs
repnz
pop
fsubrl
xchg
xchg
cmp
das
mov
jle
xchg
xor
js
add
iret
push
clc
xchg
testl
mov
repz
jmp
pop
push
popa
fidivl
mov
outsl
insl
add
test
and
pop
cld
insl
jb
outsl
pushf
test
sbbb
loop
mov
in
inc
cwtl
adcb
out
sub
cmp
xchg
lahf
adc
xchg
arpl
mov
jl
cmp
sub
fcompl
push
pop
clc
mov
pop
add
dec
xlat
out
xchg
test
lods
sbb
shl
int3
arpl
loop
popf
pop
mov
call
test
fnstenv
pop
cmc
stos
xor
mov
xor
mov
xchg
lock
xlat
push
push
xchg
sahf
mov
push
xchg
sbb
add
lret
adc
popa
pop
ret
in
dec
pop
dec
imul
negl
cmc
and
mov
and
and
cmc
nop
push
mov
pop
outsb
pop
test
sahf
dec
shrb
cmp
sub
loope
nop
mov
dec
inc
aam
cwtl
clc
fsubrs
addl
mov
int
mov
mov
and
ret
xor
and
popa
repnz
cld
cmp
dec
lods
pushl
rcrb
add
jb
pop
pop
dec
mov
xchg
mov
mov
loopne
ljmp
ror
adc
repnz
ficompl
call
push
sub
aaa
sarb
loopne
sub
stc
fnstenv
jne
pop
addr16
dec
add
scas
push
std
fidivl
xor
inc
aad
push
lea
icebp
sbb
jo
sbb
call
aaa
cltd
lds
fnstcw
xchg
call
pop
es
inc
xor
xor
inc
fs
dec
stc
insl
insl
cmp
cmp
or
cmp
push
lds
arpl
mulb
mov
sahf
sub
and
int3
mov
cmp
cmpsl
xor
jo
movsb
or
cli
push
jns
stos
inc
out
imull
lock
call
or
add
or
add
fnsave
mov
lahf
xor
cltd
or
push
and
fstpl
jg
hlt
je
pop
cmp
in
jmp
fiadds
mov
cmpsl
int3
mov
dec
push
paddusw
iret
popa
sti
inc
mov
push
mov
test
cmpsb
sub
test
mov
add
add
loopne
mov
aas
stos
in
loopne
mov
add
pop
add
outsb
shlb
mov
push
ret
imul
out
xlat
insb
repnz
adc
sarb
repz
out
pop
out
popf
leave
sahf
push
inc
push
cmpsb
aad
js
adc
in
mov
pxor
sub
fisubrs
bound
aam
lret
sub
fisttps
cmp
sbb
ret
jecxz
cltd
cli
lcall
add
cltd
imul
jnp
adc
jbe
cmp
lock
and
dec
data16
pop
sub
sub
jbe
shll
xor
xor
mov
in
cmp
loope
dec
xor
mov
das
ds
pop
mov
sar
scas
inc
inc
inc
dec
mov
lock
imull
xor
jmp
jmp
pop
mov
call
xchg
ret
and
jg
std
mov
add
mov
cwtl
inc
jno
cmp
mov
fcmovb
sbb
ret
xchg
daa
xchg
add
ja
add
cmp
lds
jo
push
push
mov
sub
bound
ficoms
adc
xchg
pop
or
rcll
adc
shrl
jb
sarl
add
test
dec
dec
daa
nop
add
mov
pushf
mov
sbb
xor
dec
pop
lret
jbe
and
pop
jmp
jb
pusha
test
fadds
das
js
push
out
sahf
orl
push
lret
iret
jns
jle
shll
mov
fisubrl
pusha
push
push
jge
sbb
push
iret
fidivl
cmp
ds
inc
cmp
imul
jns
ret
cltd
lock
mov
cmp
cmpsb
sub
sub
fisttps
mov
add
lods
je
jle
jg
and
in
loop
sbb
shlb
jecxz
jbe
sub
xchg
sub
repnz
das
pcmpgtb
cmp
pop
clc
add
push
push
das
imulb
jp
rcl
xor
xchg
test
imul
lock
aam
outsl
lock
jmp
cmp
test
inc
dec
cmp
jge
sti
cmpsb
aad
pop
jne
aaa
fists
out
lcall
jo
adc
push
lds
sarb
xchg
or
sahf
inc
push
inc
sahf
orl
nop
ja
movsb
divb
push
test
jne
push
pop
bound
stos
dec
lea
inc
stos
mov
imul
data16
lret
xor
xchg
dec
adc
mov
inc
mov
sbb
push
inc
stos
mov
push
sub
sbb
mov
cmp
or
inc
add
cltd
in
in
call
gs
xchg
dec
inc
out
lret
xor
clc
jp
adc
bound
cli
push
pop
arpl
arpl
js
leave
sub
mov
js
adc
outsb
xlat
pop
push
sub
pop
add
add
and
pop
in
neg
popf
or
adc
addb
inc
testb
mov
daa
sub
cmpsl
icebp
mov
loopne
jno
cmpsb
xchg
xor
mov
cmpsl
inc
cs
sub
sub
mov
repz
cmp
ret
mov
mov
and
fnstcw
xlat
push
nop
inc
lods
xchg
ds
sbb
aam
out
mov
cmpsb
nop
sbb
or
push
je
jle
fdivrl
cmpb
out
pop
inc
jmp
dec
scas
push
mov
mov
and
xchg
faddl
jb
xor
xchg
das
xchg
push
sub
lock
sub
or
and
aas
dec
addr16
push
aam
iret
std
xchg
int
sub
faddp
adc
nop
in
push
sub
mov
lret
pop
hlt
jbe
mov
aaa
dec
js
movsb
add
sbb
fucom
popa
adc
das
cmp
adc
adc
sub
mov
es
fildl
aaa
call
out
icebp
repz
lret
imul
movsb
roll
cmpsb
dec
mov
inc
arpl
sub
xchg
jns
call
dec
inc
mov
sbb
test
or
cld
ja
jge
sbb
inc
push
xchg
sub
out
lea
jmp
push
popa
push
data16
out
sahf
cld
mov
jg
jle
xlat
fs
rcll
push
push
push
aas
jo
sub
pop
js
pop
pop
js
pop
cmpsl
ficoms
scas
das
mov
js
js
mov
inc
fwait
adc
nop
mov
dec
mov
pop
push
mull
pop
test
test
jmp
cmp
popa
xor
lods
adc
cmp
push
lds
addr16
aad
adc
mov
add
add
mov
inc
inc
xor
fadds
cltd
leave
cs
mov
outsl
fdivrs
pop
mov
cmp
push
xor
inc
icebp
clc
jle
mov
and
inc
vpunpckldq
push
cwtl
push
jo
daa
or
loope
push
and
mov
lock
adc
test
jo
orl
ja
push
sbb
xor
inc
or
xlat
out
out
aam
loop
je
sarb
cs
iret
incb
pop
sbbb
mov
mov
sub
sbb
popa
adc
shrb
jns
insb
insb
sub
cmp
nop
iret
adc
fmull
xchg
test
outsb
cmovge
adc
repz
test
inc
ret
daa
ror
mov
popa
in
dec
icebp
nop
adc
in
mov
push
fldl
shlb
xor
loope
shrl
dec
pushf
in
cltd
mov
jnp
cmp
xlat
je
aad
xchg
adcb
jns
mov
lcall
aam
imul
pop
into
jge
lahf
cltd
cvtps2pd
outsb
aas
in
fistpll
mov
mov
mov
fs
in
ret
push
mov
push
lods
cmpsl
xor
mov
movsl
in
popf
jl
sbb
dec
pop
sarb
mov
popf
jo
jl
and
fildl
movsb
inc
or
fmulp
add
out
sub
stc
or
cs
cmp
mov
pop
cmp
xchg
enter
inc
cwtl
inc
fcoms
test
into
or
and
xchg
repnz
dec
adc
jl
or
imul
mov
or
into
out
aaa
pushf
dec
lret
cmp
orl
ret
add
add
xlat
mov
shrb
add
and
add
jbe
and
cmc
lods
adc
jae
cmp
mov
clc
sti
sub
iret
xor
dec
stos
nop
pop
icebp
insl
popl
cmp
scas
movsb
adc
test
std
mov
mov
mov
pop
xchg
mov
jo
aaa
xchg
xchg
std
inc
or
shll
int
and
leave
daa
xchg
jmp
das
loope
dec
adc
mov
clc
das
aam
pop
cmpsl
jge
jb
or
cld
mov
sar
ret
setb
nop
aam
xchg
lea
test
test
push
ss
loopne
mov
das
pop
pushw
mov
xor
test
rorl
or
icebp
cmpsb
sub
ljmp
fstpl
push
fidivrl
and
sbb
cmc
or
add
pop
jg
lods
out
popa
mov
jge
and
pop
sbb
out
lcall
movzbl
jns
xchg
xor
pop
ret
jns
jmp
dec
scas
dec
insb
mov
movsl
outsb
test
mov
xchg
aas
les
fs
push
es
dec
popa
aam
outsl
cmp
rorl
rclb
jl
scas
mov
adc
mov
pop
mov
xchg
xor
cltd
jnp
cs
mov
mov
push
loopne
notb
arpl
outsb
das
push
int3
lret
mov
out
pop
dec
rcrb
and
hlt
pop
mov
rcrl
loopne
fldl
jb
or
test
mov
ja
cmp
or
inc
nop
adc
mov
leave
lret
scas
iret
mov
rcr
and
sub
std
pop
jecxz
sub
int3
push
test
dec
push
shr
shll
fstenv
int3
aaa
cmp
cli
and
mov
js
sub
jl
nop
jg
push
fsubrs
dec
jno
jns
aas
push
imul
ss
dec
enter
lods
jns
in
das
lods
jmp
out
and
cmc
cmp
imul
dec
lods
cmp
mov
sbb
push
test
cmp
or
bswap
lds
jmp
test
leave
mov
adc
mov
lcall
arpl
pop
cs
and
outsl
rclb
hlt
ret
dec
dec
lock
mov
outsl
or
fwait
push
sbb
lock
xchg
lret
mov
adcb
push
xchg
sub
nop
sbb
dec
rorb
mov
aaa
mov
jg
sub
sub
out
ret
stos
inc
aam
aaa
jle
xorl
pop
dec
push
rcrl
sbb
sbb
fwait
pop
cmc
fwait
inc
pop
jecxz
pop
lret
addl
xchg
cmp
push
jno
psubw
mov
std
stos
xchg
pusha
push
lods
add
loope
and
fisttpll
jo
idivl
xor
mov
pop
in
inc
pop
and
je
lds
jecxz
dec
enter
mov
cmpl
lahf
ja
push
dec
mov
negb
mov
fadd
out
mov
and
pusha
dec
mov
push
pop
mov
fdivr
shrl
jno
jnp
xor
insl
cmpsl
insl
ret
daa
inc
inc
gs
les
in
sbb
out
fs
sti
ja
iret
sub
mov
repz
dec
aam
fbstp
cmpsb
mov
insb
pop
das
and
orb
add
xchg
cmpsb
or
add
cld
xchg
mov
repz
xchg
dec
adcb
stos
in
jmp
addl
inc
mov
test
sbb
pop
xchg
ljmp
jl
fsubr
mov
cmpsl
fisubs
xor
int
icebp
std
test
inc
ljmp
mov
nop
repz
inc
inc
adc
or
push
cmpsl
and
jl
sarb
adc
inc
push
imul
loopne
add
push
insb
sbb
jle
dec
xor
cmpsl
jp
xor
lcall
add
int
std
imul
mov
sbb
ret
ljmp
or
andl
invd
mov
xchg
int
testl
stos
xchg
js
mov
or
adcl
sbb
and
nop
xchg
paddsw
jne
in
adc
cwtl
sbb
xchg
sti
insb
int
das
jle
xchg
mov
lcall
push
imul
rcl
test
sbb
imul
xor
cmp
sbb
pop
push
divl
pop
jno
in
xchg
ret
sub
sbb
lcall
shlb
imul
xchg
add
or
mov
sbb
mov
test
inc
sbb
add
mov
shlb
sub
ljmp
pop
aaa
sub
aas
xorb
dec
mov
repnz
pop
stos
adc
jae
lcall
scas
xchg
jns
mov
jp
fwait
aad
dec
push
leave
stos
daa
test
sbb
xchg
push
js
xor
cwtl
push
iret
sub
cmp
inc
insl
push
or
cmpsl
adc
cmp
outsb
cmpsl
mov
je
mov
cli
xor
insl
mov
enter
jle
jbe
iret
add
sbb
sub
add
xchg
cld
pop
ret
pop
dec
mov
jge
pop
mov
sbbb
dec
mov
bound
adc
outsb
cmp
clc
jg
imul
hlt
mov
add
sahf
pop
lahf
pop
xor
outsb
pop
fwait
fwait
cltd
ds
cmp
or
rcl
ljmp
push
in
jecxz
test
dec
pop
push
pop
mov
arpl
sahf
out
out
pop
cs
in
cmp
cmc
or
ret
xchg
fwait
push
and
pop
or
imul
xchg
mov
outsb
xchg
dec
and
xchg
push
xor
add
mov
mov
shl
pop
xor
add
pop
sub
sub
xchg
inc
jg
xchg
fiadds
cwtl
test
cmpsb
jne
xor
subb
cwtl
inc
cmp
into
push
xchg
ficompl
push
jmp
gs
add
and
pop
pop
pop
xchg
lret
test
loopne
adc
lock
cwtl
ret
mov
sbb
adc
xchg
jno
movsb
jns
add
add
pop
mov
pop
es
lahf
nop
daa
fildl
add
pop
add
xchg
dec
cld
out
sbbl
push
pop
lods
inc
sub
xchg
jge
hlt
call
push
sub
adc
xchg
and
aad
shrb
shrb
sti
jo
sub
push
aam
loop
dec
das
and
or
outsb
roll
mov
mov
push
les
imul
out
mov
sti
push
and
add
add
mov
xor
adc
jnp
mov
sbb
mov
adc
jecxz
and
mov
fdivs
inc
dec
lret
jl
mov
push
sub
cmp
loope
loop
inc
loope
jge
xchg
iret
orb
std
mov
enter
inc
pop
ror
cmp
mov
jo
xor
mov
js
lret
mov
popf
lcall
in
jb
adc
mov
fiadds
mov
jae
aam
les
add
mov
push
ret
int3
push
mov
jmp
xor
insb
mov
adc
ds
xor
das
stos
aaa
jo
popa
xor
ja
add
lcall
movsb
sub
popa
xchg
out
js
scas
inc
scas
cld
out
xor
mov
lods
out
outsb
jle
sub
push
ja
fs
movsb
jp
jbe
xor
mov
insb
ds
xchg
xchg
jp
lahf
mov
lret
mov
hlt
xchg
or
xchg
adc
xor
xor
cmp
in
sbb
cmc
mov
mov
mov
dec
inc
loop
sub
in
sbb
push
gs
popa
and
xor
test
sub
mov
insb
imul
ss
and
mov
lret
repnz
mov
pop
fs
jp
repnz
sbb
push
std
pop
subb
repnz
mov
test
sbb
call
ss
test
push
push
iret
xor
xchg
fdivrl
stos
or
inc
movsl
outsl
and
mov
popl
and
inc
pop
add
ljmp
in
lcall
repz
stos
or
jmp
pop
push
call
mov
arpl
jg
mov
dec
sti
dec
jb
mov
sbb
add
out
dec
and
push
cmp
mov
mov
jo
int
add
arpl
mov
mov
call
jns
mov
pop
test
or
sti
insl
popf
in
xchg
xor
fcompl
bnd
xchg
faddl
je
hlt
rcr
gs
cld
mov
outsb
pop
pop
outsb
push
xchg
mov
xchg
sbb
jne,pt
sti
pop
push
dec
mov
adc
and
jbe
mov
jle
cmp
hlt
ret
xchg
mov
xchg
pop
xchg
dec
mov
pop
mov
adc
test
movzwl
lret
xor
adc
sbb
pop
pop
popl
jno
mov
xor
dec
cmp
imul
bound
in
xor
movsb
and
clc
xchg
mov
push
add
cld
push
iret
cmpsb
pop
pop
lcall
dec
data16
jb
pop
sbb
dec
mov
pushf
add
inc
data16
sub
cld
aas
subb
push
fsubl
push
movsl
xchg
dec
clc
dec
fisubrs
int3
jmp
jbe
mov
mov
sbb
or
call
pushl
rclb
int3
cmp
notb
aaa
lahf
adc
inc
lret
inc
pop
leave
rcr
xchg
mov
and
or
fisubrs
call
call
outsb
cli
inc
push
mov
insb
sub
dec
mov
enter
cmp
push
jbe
outsl
mov
xor
xchg
cmp
mov
sbb
icebp
sub
cmp
callw
testb
sbb
pop
ja
and
or
mov
cs
movsl
push
push
xor
mov
mov
clc
mov
adc
xchg
fsubrl
std
jp
inc
orb
lea
push
mov
add
jns
out
aaa
xchg
mov
pop
push
in
aas
push
xchg
mov
aas
adc
shll
dec
outsl
push
mov
mov
roll
insl
in
push
ret
pusha
push
mov
andb
gs
pop
shrl
stos
jbe
std
jno
ja
in
out
scas
enter
inc
sub
push
test
xor
mov
rcl
sbb
das
xchg
cwtl
push
jecxz
cmp
movsl
mov
imul
scas
lea
cli
ja
fidivrs
pop
out
dec
sbb
jmp
lods
push
pop
and
das
into
shlb
jge
add
dec
cmc
cmp
mov
cmp
inc
pusha
mov
in
jmp
push
into
and
jne
fdivrp
mov
punpckhwd
cmp
cmp
and
dec
sub
shrb
adc
es
and
pushf
dec
imul
rcr
fwait
sahf
sub
jno
xor
negl
sbb
add
aad
ret
jmp
push
pop
cmp
scas
lahf
cmp
pop
jbe
sahf
outsl
ret
fsubrp
imul
lds
push
aaa
push
popa
fldenv
pusha
mov
movsl
insl
pop
aad
es
ds
jecxz
lods
push
rcrb
iret
xor
and
or
pop
adc
mov
lea
pop
and
test
into
push
fisttpll
mov
in
into
fs
in
dec
and
lret
jmp
push
cmpsl
jnp
cmp
pop
pop
xor
bound
mov
inc
int3
mov
dec
push
test
fimull
cmc
sub
je
inc
int
das
sub
shll
inc
mov
dec
stos
andl
in
mov
jb
add
fcoms
movsb
bts
sti
xchg
fnsave
call
int3
jp
es
jge
jle
adc
shll
xor
mov
pop
sub
mov
sbb
jns
mov
dec
pop
xchg
lods
pop
and
imull
repz
sbb
sbb
cmpsb
cmp
dec
hlt
iret
lea
nop
imul
pop
mov
push
mov
test
add
add
add
mov
lds
ja
dec
add
and
add
mov
mov
mov
mov
mov
aaa
rcrb
not
out
mov
inc
out
and
mov
stos
outsb
lcall
insl
mov
addl
lds
sub
mov
push
outsb
mov
movsl
jo
hlt
sbb
xor
push
addr16
ret
or
inc
fs
adc
add
pop
mov
addr16
shrb
push
cltd
add
loope
sbb
icebp
inc
xchg
jmp
fistps
repnz
sub
fs
stos
movups
mov
jno
sbb
aam
jbe
xchg
out
shlb
sbb
or
repz
or
fidivs
lods
add
shrb
neg
or
mov
sar
mov
push
les
add
push
dec
push
nop
fiaddl
cltd
clc
inc
mov
add
push
dec
clc
out
inc
rorb
jecxz
fwait
xor
cltd
push
stc
dec
in
fldl
jmp
jnp
mov
sbb
sub
imulb
dec
iret
sub
mov
xor
mov
add
aam
cmp
repnz
inc
dec
bound
pop
sbb
or
sbb
mov
mov
in
lret
mov
pusha
dec
ds
push
stos
aas
in
inc
sub
mov
dec
mov
mov
in
jns
aas
testb
mov
lcall
div
outsl
mov
push
cmp
xor
push
repz
mov
pop
mov
mov
jbe
adc
dec
dec
push
popa
or
mov
xchg
push
lret
mov
ljmp
test
xchg
and
push
inc
shr
jg
lcall
iret
fbstp
mov
dec
jecxz
scas
dec
push
in
add
push
add
aam
lret
arpl
ret
insl
es
fwait
aam
roll
andl
out
jb
xor
mov
repnz
push
es
testl
dec
psllq
pop
adc
inc
ss
jl
mov
stc
sbb
bound
ret
mov
testl
and
mov
aam
pop
fldt
inc
pop
mov
jmp
jae
popa
arpl
jge
out
add
mov
push
inc
add
push
shl
jno
pop
or
gs
or
dec
scas
idivb
daa
inc
scas
insb
push
je
pop
cmp
movsl
mov
xor
dec
je
mov
in
mov
outsb
push
xor
dec
adc
mov
pop
xchg
ljmp
inc
ds
stc
or
sub
sub
sub
xchg
mov
mov
dec
fmuls
cmpsb
pop
add
ljmp
pop
mov
jae
sti
clc
push
push
fsubl
mov
popa
negl
cmp
cmp
pop
dec
sub
les
les
push
inc
in
ds
push
mov
xorps
loope
popf
mov
addr16
scas
enter
sbb
inc
lahf
jge
add
iret
pop
mov
xchg
stc
and
je
insl
inc
jg
and
andb
adc
adc
jb
adc
push
into
mov
lds
fwait
stos
push
fucomp
jb
push
sbb
mov
push
mov
enter
js
ret
mov
je
jmp
push
fimuls
fs
gs
arpl
cs
pop
rcll
sbb
stos
jne
std
orl
add
adc
shlb
xchg
lods
in
adc
cmc
popf
push
push
cld
clc
les
push
mov
scas
or
sub
outsb
xchg
inc
into
pop
xor
xchg
lea
inc
scas
xchg
mov
sti
inc
popa
sub
je
scas
iret
test
xlat
lret
push
test
mov
xchg
ljmp
hlt
pop
xor
loope
outsb
mov
js
pop
std
xor
rorl
push
inc
and
sarb
popa
fsubrl
pusha
mov
or
sbb
andl
lret
mov
lea
lods
pusha
lods
les
lret
movsb
test
std
aam
jbe
fistpll
enter
repnz
test
into
mov
cmp
das
in
sbb
mov
fcomps
pop
cmc
pop
fcmove
loopne
dec
std
pop
pop
in
push
mov
loope
jmp
out
and
fsts
mov
dec
std
insb
pushf
shl
cltd
in
cmp
fisttpll
pop
fistps
or
in
lret
sarb
xacquire
jmp
or
sbbl
test
cmpsl
lret
mov
pop
dec
call
clc
push
mov
jno
push
ret
dec
xor
jne
mov
lds
lret
push
gs
into
lret
add
cmovge
push
out
test
into
rclb
cmp
cmc
add
jns
movsl
pop
decl
out
cmc
mov
test
fmull
scas
sub
mov
sbb
sub
dec
movsl
lods
lock
inc
negb
out
ficoms
or
cli
js
loope
inc
sbb
sub
loope
mov
pop
jns
hlt
js
inc
js
pop
lock
stos
ja
xor
arpl
lock
mov
sbb
bound
push
xchg
pop
dec
mov
sub
ds
es
fwait
jmp
dec
jl
sub
cltd
cmp
cltd
faddl
pop
mov
push
test
mov
or
inc
insb
jle
fwait
dec
inc
scas
xchg
mov
adcb
mov
mov
es
xchg
or
je
lret
fisttpll
adc
out
adc
dec
add
lods
pop
or
into
cmp
ds
pop
jno
arpl
xor
push
dec
add
push
dec
ret
adc
xor
pop
jmp
xor
mov
je
out
or
or
jmp
repz
cmpsb
jge
bound
pop
jmp
or
ds
push
push
pop
imul
mov
push
lcall
addr16
push
inc
xor
jg
jecxz
and
stc
pop
stos
fcomps
cmp
sub
mov
xchg
arpl
push
xchg
xor
push
sbb
stos
pop
stos
push
mov
add
cmp
rcrl
mov
xchg
fldt
mov
js
sub
mov
add
aas
pop
push
jb
stc
pop
add
shlb
pop
add
inc
mov
push
fwait
sbb
ljmp
in
dec
hlt
aam
fimull
and
fs
sub
push
adc
inc
cmpsb
xchg
iret
xchg
cmp
xor
adc
lods
data16
sbb
popa
test
jecxz
pop
adc
imul
ret
push
cmp
xor
adc
xor
fisttpl
sar
jle
in
orl
shll
aaa
cld
fbstp
call
daa
repz
jmp
lret
sub
sbb
lahf
sbb
xorb
mov
jecxz
push
stos
pop
leave
popa
xor
call
mov
in
mov
out
and
jo
cmpb
mov
sub
cmp
divl
bound
pop
test
clc
mov
aas
add
xchg
dec
ds
lea
cmpsl
add
std
and
jne
mov
add
lahf
inc
fdivrp
call
jae
fld
or
cmc
lods
aad
ret
insl
or
mov
push
inc
mov
popa
jno
cmpsl
xchg
xor
cmp
pop
dec
add
fcompl
roll
stos
packsswb
out
push
push
dec
cmpsl
xor
and
or
push
add
sub
mov
jbe
adc
fbstp
insl
sbb
loop
mov
inc
add
or
cmc
push
mov
out
mov
icebp
and
es
ljmp
inc
push
or
mov
dec
lret
and
arpl
leave
pop
xor
lcall
or
sti
fadds
mov
pop
leave
dec
stos
and
mov
and
cmpsb
sarb
dec
icebp
mov
call
movsb
cmp
or
jbe
cld
movsl
lcall
loop,pt
sbb
repz
pop
mov
add
inc
pop
les
ds
ret
and
sbb
enter
xchg
cmp
lods
ds
pushf
inc
mov
push
xchg
cs
mov
out
cli
add
fcomps
daa
jle
es
push
dec
adc
cmp
scas
or
scas
pop
das
inc
int
jns
pushf
jne
sahf
pop
insl
mov
lods
jg
fisubs
negl
xchg
sub
xchg
ljmp
pop
dec
jle
dec
and
mov
jl
sahf
int3
add
jno
push
js
push
andl
mov
aas
cmpsb
mov
pop
sub
mov
push
lock
fldt
js
idivb
imul
call
adc
push
cmp
mov
les
adc
rclb
loope
push
mov
mov
dec
js
adc
mov
xor
ret
movsl
jl
dec
sbb
mov
cmp
fsubs
jg
lahf
rcr
lret
imul
mov
sub
push
xchg
fwait
push
xor
lret
sarl
add
mov
push
xchg
push
mov
call
aas
jl
mov
inc
dec
push
ret
arpl
sbb
inc
add
cmp
scas
xchg
bound
mov
adc
jle
lcall
mov
cmp
stos
mov
std
jno
or
scas
jbe
test
mov
dec
and
out
mov
lods
pop
nop
mov
addr16
lahf
pop
add
sti
mov
bnd
sarb
and
mov
pop
and
pushf
inc
fnsave
sub
xchg
je
fwait
nop
cmpsl
daa
inc
lret
mov
xor
ret
dec
imul
jae
inc
ljmp
push
roll
fldenv
and
sub
das
movsb
jmp
int
jecxz
popf
mov
call
mov
adc
push
fstpt
jp
fisttpll
adc
iret
dec
lret
dec
xor
addb
pop
sbb
or
mov
xchg
dec
mov
pop
sub
das
add
nop
lret
test
adc
pop
movsl
rcrb
adc
hlt
je
and
addr16
mov
xchg
clc
mov
loopne
jl
test
sub
mov
jecxz
xchg
push
das
mov
movsl
cmp
fistpl
fwait
test
adc
cmp
mov
fst
push
std
push
fisttpl
leave
or
inc
hlt
adc
je
xor
std
mov
and
hlt
and
add
cmc
lret
es
bound
aad
ds
mov
sbb
cli
fs
ret
lcall
jg
and
mov
pop
outsb
jo
shl
sub
inc
pop
lcall
cmp
stos
jecxz
rcrb
pop
shlb
aam
outsl
dec
in
out
push
or
cmp
dec
pop
mov
pop
mov
jb
ja
aad
es
cmpsb
adc
mov
dec
adc
fildll
add
imul
into
pop
add
adcb
dec
arpl
fsubrs
lods
adc
ret
and
mov
inc
lahf
push
and
jnp
mov
sbb
xchg
cmpsl
xor
pop
aaa
clc
add
movsl
cmp
sbb
repz
inc
jae
out
cmc
adc
daa
rorl
leave
outsl
or
mov
mov
scas
das
lods
pushf
adc
jbe
xchg
insb
addr16
rorl
pop
stc
jo
push
test
jp
and
lock
movsl
andl
lock
sbb
aaa
test
inc
sbbl
and
sub
push
mov
pop
push
xor
push
and
mov
jl
push
sub
sbb
les
or
js
imul
lds
cmp
push
mov
scas
shl
mov
push
sub
dec
cmp
lds
xor
out
sbb
repz
mov
xchg
pop
stos
xchg
insl
xchg
dec
or
and
test
stc
mov
into
cld
push
loop
inc
int
mov
mov
sahf
div
bound
lahf
jp
lret
cmpxchg
mov
sbb
mov
ds
int3
jns
in
or
arpl
dec
mov
ffreep
call
lret
and
popl
and
mov
lea
dec
aaa
stos
les
bound
sbb
jge
lahf
mov
cmc
adc
inc
dec
mov
jecxz
andl
aas
mov
jne
pusha
test
sub
mov
push
inc
pop
incb
add
add
lea
into
out
popf
adc
mul
ja
xchg
add
and
add
aad
scas
lcall
in
pop
adcb
xchg
and
jl
arpl
ret
mov
test
pop
sbb
lret
cmp
jl
sub
pop
mov
dec
mov
cld
sbb
adc
dec
orb
dec
out
sub
fisubrs
push
adc
mov
hlt
sub
xchg
add
ja
mov
mov
xor
lcall
mov
popa
add
fsubrl
add
daa
int
pop
and
cmpsb
fidivrs
mov
shll
jp
je
jb
xchg
add
push
add
inc
sbb
adc
dec
and
jno
in
pop
jecxz
jle
xchg
push
pushf
mov
jmp
push
mov
lea
mov
lods
or
inc
ret
cmp
push
out
sub
add
outsl
or
in
push
cld
sub
cltd
dec
push
ret
push
test
sub
andb
push
test
xchg
push
into
push
insb
test
loopne
into
push
xchg
mov
sti
inc
pop
inc
push
in
mov
and
pop
jp
jnp
cli
test
lds
mov
ds
lods
sub
js
in
test
out
sbb
sbb
xchg
adc
and
push
add
jbe
add
jmp
testb
mov
fiadds
and
sub
or
test
push
adc
lods
lret
adc
jmp
mov
pop
sub
jbe
xchg
mov
out
rorb
mov
adc
test
jae
pop
mov
divl
inc
inc
sbb
add
inc
push
shll
adc
pop
cmp
mov
pop
loop
mov
inc
or
dec
stos
sub
mov
xor
jmp
pop
sbb
cmp
add
add
stos
aam
and
test
xchg
mulb
stc
mov
int3
push
sub
mov
jle
scas
xor
sub
leave
inc
js
adc
incb
shrl
xchg
push
inc
xchg
or
es
ds
mov
xchg
cmp
xor
pop
jae
stos
add
xor
pop
inc
mov
movsl
lds
push
pop
popa
subl
notl
ds
xor
sbb
mov
xor
cmpsb
insl
fildl
mov
rcrl
aam
fs
cmpl
test
add
adc
jae
cli
or
lea
sbb
lahf
lcall
cmp
dec
loop
sub
loop
rcrb
xchg
sub
mov
dec
add
cli
jecxz
sub
or
dec
repz
int
or
xor
sbb
bound
daa
jl
mov
jno
xchg
shlb
dec
bound
cmp
repz
push
hlt
enter
insl
cli
mov
mov
mov
mov
loopne
cmp
adc
outsb
iret
pop
insb
push
in
mov
xchg
pop
testl
in
gs
sbb
push
imul
adcl
enter
add
pop
push
xchg
lret
negb
xchg
xchg
shlb
and
lods
inc
fisubrs
mov
add
rorb
mov
adc
sarl
or
jne
out
xor
in
pop
aaa
cmp
xor
in
pop
adc
cs
bound
inc
icebp
jne
in
ja
mov
and
popa
mov
mov
subl
int
push
lods
mov
mov
xchg
adc
ret
clc
out
dec
pop
daa
sti
lret
cmp
nop
xor
lret
mov
cmpl
push
push
jp
jp
or
xor
out
out
mov
push
mov
subl
sarb
mov
stos
sbb
push
pusha
lahf
mov
ds
addl
rcrl
out
notb
mov
and
jl
loop
in
test
and
fildll
adc
outsb
and
in
mov
mov
loop
mov
jnp
pusha
dec
sbb
ret
nop
mov
pop
pop
pusha
mov
int3
mov
scas
repnz
add
addr16
sbb
popa
das
movsb
in
lds
orl
add
mov
stc
out
mov
aam
lock
arpl
push
out
xor
xchg
stos
push
loope
sub
push
mov
mov
sbb
xor
cmpl
and
sbb
jnp
popf
xchg
imul
call
add
inc
popf
mov
and
ja
dec
jo
fs
call
insb
pusha
xor
lahf
neg
pop
shll
or
push
stos
add
push
push
shl
in
popa
add
xor
movsl
mov
imul
je
sbb
add
cmp
push
nop
add
stc
fcomip
push
sar
jo
pop
dec
sahf
scas
in
mov
fs
hlt
sbb
mov
addr16
or
push
imul
std
and
fwait
stos
mov
inc
cmpsl
xchg
mov
sti
push
jnp
popa
mov
inc
mov
imul
mov
pop
pop
aam
dec
sbb
dec
mov
iretw
aad
mov
sub
cmp
and
sub
ljmp
enter
into
pop
mov
sub
xchg
push
cltd
mov
adc
inc
xlat
push
lock
in
xchg
sub
jg
mov
cmp
fdivrs
xlat
pop
push
nop
or
push
jno
push
push
dec
mov
ds
jg
cmc
in
hlt
cs
and
inc
gs
and
add
or
loopne
or
in
pop
add
test
aad
xor
push
mov
push
in
sub
cmove
pop
mov
mov
mov
pusha
es
cli
mov
out
lea
iret
enter
add
movl
push
insb
or
adc
int
sarb
inc
test
sahf
dec
or
push
xor
push
lea
ret
push
call
imull
xor
inc
out
add
sub
mov
aas
daa
add
popl
add
aaa
mov
rcll
std
rcr
inc
mov
addb
add
xchg
dec
jnp
sti
mov
ds
ret
fdivr
cmc
lcall
stc
loopne
add
jp
or
scas
adc
add
jns
inc
out
inc
push
dec
push
pop
ret
popf
push
jmp
pushf
lea
sub
ret
rcrb
inc
cli
inc
jnp
and
ljmp
xchg
xlat
mov
movsl
in
mov
pop
data16
dec
loope
es
lods
push
mov
jg
roll
add
ret
xchg
mov
cltd
adc
mov
adc
hlt
mov
mov
pop
xor
xor
ficompl
test
adc
cmp
mov
sbb
and
pop
sti
pop
xorb
adc
mov
dec
fcmovbe
mov
jge
int
xchg
loope
movsl
out
negb
xor
lret
jl
das
rcrl
jl
setae
cmp
xchg
xor
cwtl
sbb
jno
mov
lret
or
mov
jno
pop
jle
sbb
leave
sub
mov
mov
call
add
sarl
popf
es
scas
lahf
data16
xsha1
sbb
out
addr16
in
mov
in
les
or
mov
ss
mov
cli
mov
cs
sub
inc
cmpsb
add
rcr
add
lret
int
cwtl
lret
clc
aad
jmp
inc
add
xchg
pusha
scas
int3
sbb
jg
add
aam
and
imul
lock
push
jecxz
inc
gs
fidivrl
shll
test
sbb
stos
mov
or
les
cmc
sub
inc
mov
rolb
arpl
and
aaa
inc
add
cmp
cmpb
fimuls
mov
js
push
lock
jle
repz
notl
out
mov
ret
mov
repnz
jp
movq
sbb
add
lods
mov
and
pushf
sbb
lahf
and
inc
mov
jg
cmp
inc
jecxz
addb
sti
xlat
or
jg
idivb
jmp
xchg
adc
je
mov
xor
fsubs
push
rcl
out
test
mov
ds
sbb
decb
pushf
sti
and
in
jo
mov
xor
sarb
loop
fidivrs
rorl
or
sub
ljmp
dec
mov
stos
nop
insl
insb
fistl
adc
xchg
push
and
jnp
arpl
fdivl
mov
movsb
add
nop
adc
cli
xchg
sub
lret
inc
icebp
and
push
fcoml
sbb
test
pop
dec
or
ss
pop
or
jecxz
ret
icebp
and
and
aad
or
pop
dec
and
inc
sarb
xchg
popf
int3
ljmp
or
pusha
daa
gs
dec
push
pop
xlat
xlat
shlb
roll
dec
mov
mov
mov
je
jae
jmp
fcomi
mov
iret
pop
or
inc
jmp
push
movsb
loope
sub
sti
test
int3
scas
ret
pushf
jp
sub
and
rclb
ret
add
cltd
test
sub
inc
xchg
pop
dec
jne
das
jbe
add
pusha
imul
dec
test
out
flds
push
dec
push
push
mov
ss
fst
stos
pop
cmpsb
xchg
dec
jecxz,pn
cmp
mov
cmp
and
xacquire
rolb
in
ret
fdivrp
push
icebp
cltd
mov
jbe
or
in
fidivrs
fimull
mov
xlat
cmp
addr16
fsub
imul
les
stos
je
out
push
jp
gs
rcpps
add
cli
int
pop
das
dec
decl
daa
insl
call
outsb
mov
mov
loope
cmc
jo
cmpsb
mov
jle
or
dec
repz
or
sbb
enter
mov
addr16
fcompl
jp
insl
rorb
lret
js
fldl
sbb
aam
lcall
loope
adc
das
mov
out
test
sahf
je
int
out
push
daa
sub
dec
hlt
dec
out
mov
mov
arpl
fucom
push
cmpb
push
pop
jns
nop
lods
or
or
jb
test
push
xchg
ret
add
or
or
xor
push
xor
or
push
rcr
in
repnz
or
fiadds
outsb
dec
pop
sub
lds
pop
inc
add
jp
mov
decl
xor
pop
clc
js
scas
repnz
and
sub
xchg
cmpsb
icebp
incb
sub
cmpsb
arpl
iret
or
pusha
and
mov
repz
pop
xor
jecxz
pop
in
cli
idivl
push
rclb
test
xchg
stos
ds
cmp
loop
jbe
dec
inc
adcl
and
push
bound
adc
inc
adc
jge
in
js
and
sub
outsb
leave
push
or
add
mov
sbb
jp
int
adc
aaa
or
cmp
outsl
test
xor
add
loop
ja
jbe
int
pop
pop
call
jecxz
ljmp
popa
xor
sub
cmpsl
dec
popa
pop
push
arpl
sbb
lea
push
push
sbb
ret
iret
pop
xchg
ret
into
xchg
lods
jno
push
sub
mov
out
cmp
dec
sbb
test
or
jle
dec
sub
xor
mov
hlt
ffreep
sbb
jge
inc
jne
nop
pop
stc
test
movsb
icebp
call
adc
fisubl
dec
mov
arpl
sub
inc
hlt
mov
repz
xchg
adc
xchg
sub
cld
inc
xchg
imul
cmp
dec
js
xchg
in
roll
pop
and
insb
roll
jmp
xchg
xorb
inc
jae
and
ja
call
pop
jbe
dec
cltd
sbb
xchg
cmp
sbb
add
add
in
mov
mov
push
and
push
popa
xchg
sbb
rorl
lret
mov
mov
cmp
pop
sbb
mov
lds
xor
data16
orb
cmpsl
xchg
aam
jg
push
add
jo
stos
shrb
into
mov
sarl
dec
inc
incb
push
jecxz
arpl
test
add
pop
add
mov
aad
push
adcb
sahf
adc
test
mov
xorb
jp
adc
jge
inc
cmp
fistps
xchg
fsubl
scas
mov
stos
jg
pop
gs
mov
or
out
add
push
es
into
je
xchg
adc
mov
les
xchg
mov
loop
int
push
cs
aas
imulb
mov
jae
stos
test
or
aad
jne
push
and
mov
pushf
mov
sbb
mov
push
out
ss
cld
andl
inc
loop
mov
add
sub
fbld
sahf
dec
sub
push
enter
aad
mov
cmp
gs
mov
iret
shlb
mov
mov
movsb
adcl
add
pop
sti
clc
bound
pop
push
sub
aaa
jnp
dec
adc
inc
sbb
cmpsb
arpl
clc
push
pop
clc
popf
js
push
filds
jp
jl
fildll
loope
or
mov
cmp
movsb
cmp
jg
cmp
js
sar
jne
in
mov
push
movsl
pop
xchg
pusha
out
push
std
sub
test
je
push
jnp
nop
xchg
in
roll
fsubrs
shrl
lahf
mov
push
mov
mov
jmp
mov
std
add
jle
ret
mov
fstpl
sbbb
or
sub
and
rolb
loope
orl
xor
mov
or
lds
push
stos
cwtl
dec
xor
dec
push
loopne
xchg
pop
ljmp
pop
cmp
mov
pop
lds
mov
lds
sti
push
pusha
mov
mov
mov
inc
push
aam
insb
cld
mov
arpl
imull
iret
xchg
arpl
push
pop
adc
pop
jo
add
xor
dec
outsl
out
mov
jo
in
mov
mov
sub
cmpsb
inc
in
inc
jecxz
mov
cs
xor
ss
call
sbb
rorb
fldl
xor
ja
adc
push
movsl
pop
sub
stc
mov
sub
stc
sub
hlt
inc
xchg
das
or
add
push
mov
movl
scas
cwtl
sub
in
jl
inc
jbe
jg
dec
das
in
xchg
jno
push
push
sbb
gs
imul
loop
pushf
sbb
jo
jae
repnz
add
add
pop
test
das
shll
rcr
push
xor
lds
jns
xor
sub
sti
scas
cmc
dec
jne
popa
cmp
jbe
xchg
imul
adc
sub
shll
mov
cmpsb
or
jnp
int3
sub
rcrl
pop
movsb
dec
and
fstpl
push
sahf
pushf
aaa
add
mov
movsl
inc
inc
fsubs
cld
scas
push
mov
xchg
mov
lock
xchg
cmp
inc
js
icebp
out
mov
jbe
shr
in
pushl
bound
fs
shrl
adc
je
ret
xchg
arpl
into
or
sbb
dec
add
loop
out
or
or
rorl
mov
in
push
lret
rorb
pop
aaa
xchg
inc
sbb
loop
adc
or
insl
sbbl
sub
xor
mov
mov
mov
adc
cmpsb
mov
jle
cmp
rcrb
sub
inc
xor
mov
outsl
add
neg
jno
inc
aaa
push
inc
xorb
jmp
out
jg
jno
mov
jbe
jo
jne
or
push
sbb
insl
aad
aaa
mov
cmp
test
or
cmp
inc
jnp
pushf
and
jg
push
fcoms
jle
outsl
cli
lret
adc
mov
push
dec
xchg
mov
push
fdivs
in
cmpb
sub
hlt
xor
dec
bound
int3
and
push
movsw
xchg
xor
sbb
and
dec
iret
dec
sub
rcrb
inc
daa
jo
pop
pop
std
pop
dec
movsl
pusha
adc
cmp
loope
jl
mov
out
mov
pop
ret
cld
aam
push
jne
repz
lea
add
fildl
inc
sub
sub
dec
loope
inc
xor
or
addr16
loope
add
or
adcl
pop
dec
push
insb
add
ret
jbe
es
testb
push
or
movsl
mov
fwait
pop
jns
mov
loop
cmp
add
pop
push
lods
pushf
pop
xchg
in
loopne
out
ss
inc
dec
in
insb
clc
jge
xchg
push
ret
shll
aad
or
cld
sub
lret
add
notl
xchg
inc
shlb
sti
sarb
or
scas
push
sahf
mov
scas
cmp
insl
movsb
mov
fsubrl
loopne
aas
mov
mov
pmovmskb
test
sub
icebp
cld
fsubl
lods
mov
rcrb
jp
mov
sub
xchg
xchg
pop
incl
inc
mov
adc
jb
adc
xchg
mov
pop
in
fstps
inc
inc
push
test
outsb
mov
lea
mov
aaa
adc
test
cltd
inc
sub
or
mov
movsl
jp
scas
cmp
adc
notl
repz
insb
stos
rcr
jb
cld
iret
xor
jb
loopne
cmp
mov
ds
enter
es
shlb
adc
cld
mov
out
or
outsb
pusha
jae
xchg
inc
mov
fidivs
or
sahf
xchg
out
test
jl
test
push
loopne
dec
mov
cs
lods
insl
loope
test
jge
dec
mov
dec
aam
add
xor
cmp
push
sbb
divb
mov
mov
shll
lret
popa
mov
repz
icebp
inc
clc
leave
ljmp
cmpsl
and
pop
daa
jle
sbb
adc
fwait
cli
movsb
and
mov
scas
in
stc
mov
xchg
pop
sbb
shlb
stos
sti
mov
imul
jns
fdivrp
mov
pushf
mov
fmulp
jae
and
jns
ljmp
movsl
cmp
repnz
imul
push
fcmovnbe
mov
pop
mov
cltd
cmpb
add
addl
rorl
movsb
psadbw
mov
mov
in
mov
pop
pop
imul
cli
or
enter
jbe
shlb
dec
xor
lock
add
jecxz
cmpsb
adc
mov
test
xchg
cld
jge
aaa
add
and
add
subb
pushf
push
pop
ss
popf
out
adc
sbb
nop
rclb
pop
push
test
fld
and
clc
cld
cmp
mov
adc
adc
mov
fcompl
xchg
pop
loope
loope
xor
mov
inc
dec
addb
jl
or
lods
icebp
adc
decl
mov
addr16
cmp
and
adc
xchg
ret
cltd
mov
test
inc
push
mov
push
or
lock
imul
sub
fimull
add
movsl
js
pop
dec
imul
xchg
int
add
fwait
push
popa
aas
fs
mov
mov
and
out
arpl
cwtl
jecxz
insl
es
es
jbe
or
pop
mov
xchg
sbb
lret
in
push
mov
ja
mov
push
or
jo
xlat
or
jl
scas
icebp
lcall
jmp
out
bound
ss
and
xchg
xchg
fnstcw
shlb
lret
xchg
out
mov
mov
xor
test
gs
mov
adc
sarl
addr16
mov
xchg
add
cmpsl
jl
sbb
xor
xor
js
out
cld
int3
jge
cwtl
xchg
loope
stos
loope
enter
push
dec
mov
xchg
andl
inc
mov
pop
add
mov
outsl
jl
or
mov
fcomps
push
push
mov
pushf
mov
pusha
std
loope
dec
dec
fbstp
and
cmp
mov
out
sub
sbb
movsb
fs
stc
mov
aaa
cltd
sub
xor
out
xchg
fldl
mov
add
lds
fidivs
xor
jl
je
int
adc
xchg
sbb
xor
xor
pop
das
sub
push
cltd
jae
test
cltd
sbb
jg
rolb
fmulp
push
std
rcr
fildl
fs
stos
mov
sub
jns
fcomi
mov
xchg
add
jae
fmull
and
loop
outsl
inc
loop
fcoml
jae
xchg
into
mov
pop
int3
lea
repz
arpl
mov
dec
mov
repnz
xlat
push
andb
cmp
addr16
xor
mov
ret
mov
jne
sbb
gs
jle
nop
jne
out
ljmp
aas
in
imul
pop
push
sti
xchg
push
inc
fsubs
in
andb
pop
mov
sub
jae
mov
sahf
jo
in
jae
test
int
adc
dec
hlt
add
addb
aaa
pop
cld
mov
mov
jae
hlt
repz
mov
jmp
pop
inc
es
dec
pop
mov
lret
mov
or
je
push
inc
call
out
xchg
cmpb
xchg
or
mov
ja
cmp
jl
xchg
jno
gs
mov
call
divb
movsb
and
mov
jo
int3
inc
pop
pushf
pushl
into
xor
cwtl
lret
inc
add
ljmp
mov
stc
pop
and
inc
or
in
lds
and
add
sbb
cwtl
in
pusha
jp
inc
enter
dec
inc
pop
mov
stos
jp
jae
mov
cmpsl
or
xor
das
jge
add
jmp
icebp
jne
inc
sbb
or
fdivrl
dec
mov
or
andb
push
jae
outsl
jb
mov
into
fucom
test
xchg
xor
jmp
xor
inc
js
xlat
les
aam
mov
rcll
testl
cld
mov
inc
bt
lock
xchg
insl
insl
test
ret
adc
pop
aas
jp
loop
bound
jns
lahf
pusha
cld
aaa
imul
cli
negl
not
or
mov
in
clc
pusha
lret
mov
jb
ds
mov
pop
cmp
iret
inc
and
xchg
push
jnp
mov
fdiv
mov
jae
fnstcw
push
add
das
in
lock
lea
cmp
or
sub
pusha
xchg
aas
jb
inc
cld
das
fdivr
pop
inc
fwait
sub
popf
arpl
pop
mov
fwait
fs
pop
popf
sub
cmp
rcrl
aad
repnz
loope
test
daa
or
movsl
push
xor
dec
in
je
sub
outsl
decl
mov
xchg
jl
inc
arpl
rcl
mov
xor
adc
xor
sbb
mov
sbb
pop
push
fldt
xor
mov
mov
daa
ret
shrl
dec
jb
bound
outsl
fbld
push
repz
subb
pusha
jns
jno
pop
cmp
dec
add
mov
adc
xor
mov
jnp
ljmp
sahf
jb
lods
ja
dec
mov
xchg
ret
cmp
xchg
xchg
or
ret
sar
jne
mov
ss
or
movsl
rdtsc
sbb
in
mov
test
repnz
sub
push
and
icebp
and
lods
jns
movsb
add
and
mov
call
and
pop
push
xor
js
jae
outsb
cwtl
inc
lods
fimull
cld
cmp
xor
int
mov
popf
push
sub
cmp
jmp
dec
mov
adc
and
and
and
mov
mov
aad
push
lret
addr16
imull
and
in
fxch
ja
push
add
push
pop
dec
adc
mov
mov
jae
ror
push
rolb
int3
and
es
xchg
stos
adc
pop
scas
inc
andb
rolb
cmpsb
push
mov
lock
nop
or
lds
cmp
stos
decl
in
in
dec
push
push
mov
sbb
xor
sbb
ret
stos
ret
lea
add
loop
inc
mov
fcoms
call
jbe
popa
rep
xchg
push
mov
jb
jb
enter
sub
and
popf
mov
xchg
lea
cli
call
mov
pusha
sbb
xchg
cs
mov
fdivs
xchg
add
leave
mov
in
push
and
sbb
mov
pop
fdivrl
movsb
cmp
jne
clc
pushw
mov
pop
clc
dec
or
sub
sahf
out
and
add
add
popa
jle
pop
lods
into
fisttpl
add
xor
imull
add
and
add
sbb
popa
jae
cmp
out
dec
mov
mov
cmpsl
popa
xor
or
leave
sbb
cmp
lds
repnz
arpl
aad
sub
mov
sub
push
dec
daa
pop
int
call
jl
inc
ss
repnz
mov
out
sbb
cmc
int
stc
ja
in
pusha
cmp
push
clc
pop
cmp
stc
sub
aam
incb
out
lock
stc
adc
insl
sub
inc
cmp
sahf
aas
mov
sbb
and
insb
inc
jno
movsl
mov
out
test
call
pop
fwait
xchg
aad
dec
mov
cmpsb
add
shll
sub
into
je
es
js
jmp
loop
test
xchg
imul
or
mov
imul
xor
cmp
push
cmp
loopne
xchg
cmp
xorl
sub
mov
subb
adc
test
jno
repnz
jno
bound
sbb
mov
idivb
jp
loope
sbb
test
and
pop
adc
mov
sub
jecxz
and
lcall
pop
xchg
xchg
das
pop
loope
test
dec
fisubrs
cmc
dec
jbe
jnp
add
mov
ja
pop
arpl
loope
ljmp
hlt
jbe
pop
sti
inc
cli
iret
or
subb
cmp
mov
js
mov
sub
jno
mov
rclb
sub
sub
testb
mov
mov
sbb
push
das
mov
mov
pop
xchg
jno
pop
inc
or
mov
ljmp
inc
in
pop
cwtl
data16
leave
repz
lret
xlat
jbe
dec
cmc
adc
imul
jg
cltd
insb
pop
stc
adc
fcmovu
mov
cmc
fdivl
ret
inc
pusha
dec
mov
bound
xchg
inc
xchg
mov
pop
int3
mov
pop
repnz
lcall
in
inc
jg
mov
insb
lcall
and
xor
or
aas
pop
pop
fidivs
clc
fwait
lcall
cmp
xorb
push
and
jbe
cmc
ret
out
pop
pop
and
test
jg
stos
xchg
sbb
or
movsl
int3
iret
aas
mov
decl
mov
ljmp
imul
cmp
adc
pop
cli
inc
fs
arpl
lock
add
inc
xlat
xchg
adcl
faddl
mov
mov
repz
mov
out
out
je
dec
dec
xchg
repz
movsl
xor
push
dec
push
hlt
insb
outsb
std
xchg
add
lods
mov
pop
mov
push
test
rcrb
stos
enter
push
out
add
movsb
mov
sbb
mov
lods
jo
nopl
push
loopne
inc
cmp
icebp
jecxz
pcmpgtw
fwait
aad
sbbb
into
aad
mov
rorl
icebp
jg
pop
sub
dec
popf
inc
call
cmpb
cs
pop
mov
stc
push
scas
mov
add
xchg
insb
inc
dec
cmp
mov
test
and
xchg
and
pop
daa
inc
cmc
addl
dec
daa
addl
fs
stos
test
sahf
mov
loop
sbb
push
in
and
je
imul
add
sbb
jb
fnstcw
dec
mov
arpl
mov
cli
xlat
lcall
fistpl
mov
in
jns
ret
loop
addr16
movsl
loop
mov
pop
lds
and
stos
mov
rcrl
xlat
orl
xchg
inc
icebp
jno
sub
add
das
repnz
dec
into
lret
sbb
addr16
lahf
cli
mov
outsl
mov
arpl
jae
cltd
testb
push
aas
jg
jnp
and
sbb
jle
jge
jecxz
fwait
xchg
sub
mov
inc
and
fmul
push
and
insb
loop
xor
shrb
xor
outsb
pop
mov
scas
cmp
jp
mov
jge
cmp
mov
popa
sti
dec
lock
in
mov
mov
and
test
movsb
pop
cmp
arpl
or
cmp
pushf
daa
xchg
dec
js
stc
inc
xlat
xchg
fbld
inc
pop
sub
inc
mov
call
jmp
pop
or
loop
rcll
sub
inc
add
xor
push
pop
push
cmp
dec
push
in
outsb
insl
shl
add
sub
mov
es
popa
shll
xchg
pop
shr
push
and
xor
sub
sahf
loope
bound
es
add
mov
shlb
cltd
pop
cmc
arpl
fs
or
lods
mov
les
daa
pop
fsubl
xchg
jmp
lods
mov
divl
cmp
adc
jns
call
sarl
push
stos
xchg
and
jb
les
dec
arpl
loope
mov
and
push
mov
push
jge,pt
mov
ror
jp
lcall
xchg
or
loopne
adc
insl
ljmpw
movsb
ficoms
mov
cli
dec
cmpsb
add
sub
lcall
leave
scas
lcall
and
or
cmp
sub
lods
pushf
pop
outsb
in
xor
mov
xor
clc
inc
movsl
stc
mov
pop
push
push
aam
call
roll
cmp
push
xor
xchg
test
adc
jp
pop
addr16
xchg
and
pop
inc
push
popf
aas
cld
outsb
insb
mov
out
mov
sub
mov
pop
or
jle
daa
add
stc
bnd
cs
xchg
pop
lods
lods
cwtl
jnp
int3
dec
icebp
clc
arpl
sahf
mov
cmp
fstl
pop
mov
inc
pushl
mov
pushf
xor
dec
test
inc
jge
nop
rcll
mov
scas
sbbb
test
imul
fstl
in
fwait
lock
int
mov
mov
dec
addl
outsb
sti
mov
in
sub
pop
adc
cmpsl
mov
jl
fmul
pop
fildll
out
int3
adc
push
jnp
nop
sbb
movsb
test
fcmovne
mov
es
push
inc
ja
lcall
rcrl
pop
insb
shlb
ljmp
pusha
and
xchg
icebp
dec
repz
inc
inc
outsb
or
fcoms
es
dec
ds
cmp
dec
hlt
mov
addb
xor
xchg
dec
fadd
shll
add
sahf
fidivrl
add
mov
mov
add
pop
add
sub
xchg
inc
or
ss
dec
fwait
rcl
scas
jle
or
mov
test
clc
sahf
vunpcklps
inc
adc
call
rcrb
das
imul
lret
lods
mov
pop
sahf
inc
push
sbb
es
add
int
xor
dec
cmp
xor
push
sub
incl
adcb
scas
jg
add
fiaddl
mov
jge
mov
sbbl
jns
dec
xchg
cmp
stc
mov
mov
push
mov
pusha
lock
inc
mov
mov
mov
pop
push
jmp
in
push
jne
dec
scas
enter
dec
insl
dec
in
mov
xchg
int3
loop
xchg
ret
jae
xor
mov
dec
sbb
jge
aam
xlat
xchg
pop
out
inc
repnz
je
mov
xor
jle
mov
stos
lea
stos
pop
push
lcall
mov
jno
mov
popa
jge
fsubl
push
push
dec
xchg
sbb
aaa
xor
lock
mov
push
ffree
stc
loopne
mov
adc
insb
aad
and
xchg
pop
clc
xor
lods
outsl
adc
jb
cmp
je
adc
sahf
mov
or
inc
stos
out
adc
enter
sarb
cmc
jg
addr16
pop
sbb
jae
xchg
mov
add
testb
or
dec
xchg
inc
mov
push
and
sub
testl
lahf
movsl
stc
ss
jl
fcomi
dec
adc
xlat
fnsave
push
cmp
arpl
into
insl
test
iret
pop
fimull
nop
and
rsm
add
pop
fmuls
sti
arpl
imull
xor
outsb
pop
mov
mov
fdivs
jns
aaa
cmp
in
outsb
mov
addr16
stos
fstl
outsl
dec
test
in
lea
ficomps
sbb
movsb
xchg
mov
and
insb
inc
adc
lret
sbb
outsb
js
dec
lret
jne
mov
in
int3
inc
or
into
ret
xchg
cs
jo
or
cld
int3
mov
mov
dec
jae
fcomps
push
add
jno
arpl
scas
insb
and
les
xor
popa
repnz
dec
sbb
or
pop
push
push
movsl
repnz
jae
jns
rclb
lahf
lds
pop
dec
fildll
aam
pop
cltd
imul
pusha
adc
pop
fwait
add
mov
inc
mov
cld
test
lock
jnp
inc
cwtl
in
cltd
mov
or
cmpsl
add
inc
or
insl
mov
das
cmpb
pushf
out
sbb
lods
pusha
ds
dec
sub
fwait
out
pop
adc
dec
jb
lods
fld
lahf
or
in
fisubrs
aad
arpl
je
mov
rorb
rorl
clc
pop
gs
mov
loopne
fcmovu
imul
jbe
lret
outsl
xlat
xchg
xchg
gs
xchg
sub
sbb
out
sub
daa
pop
ja
leave
mov
imul
out
and
mov
pushf
xor
mov
sub
mov
dec
pop
xorb
mov
sti
adc
pop
pushf
adc
add
sub
jl
fdivrs
pop
push
adc
mov
test
push
mov
xchg
cmp
jl
fs
pop
cmp
sub
inc
cmp
sub
fwait
cmp
xchg
ret
cmpsl
sub
xchg
cltd
ret
push
mov
test
inc
lret
push
loopne
ds
in
mov
testb
push
jb
cmpsl
lcall
cmp
es
sbb
jecxz
popl
pop
mov
out
sbb
pop
addb
sub
cltd
pop
jl
pop
cmp
cld
test
call
inc
aam
jecxz
fsub
push
ficomps
scas
or
in
mov
shlb
inc
and
iret
bound
bound
sub
int
out
int3
jmp
nop
popf
pop
jmp
cmp
out
jae
mov
and
mov
mov
xchg
adc
into
sti
pusha
lahf
dec
adc
movsb
inc
pushf
mov
ja
cmp
and
add
sbb
xor
or
xor
jmp
jb
repnz
push
cmp
xor
and
and
push
add
decl
ror
outsb
sarl
push
ds
adc
fwait
push
scas
cmp
and
fstl
insb
mov
mov
mov
jp
jbe
jbe
sub
pop
cwtl
lods
loop
inc
or
jg
push
sbb
sub
and
nop
and
lcall
clc
mov
cmp
jns
xchg
cmc
push
cmpsl
add
pop
das
pushf
lahf
mov
cs
fs
pop
cmp
dec
adc
mov
es
das
mov
iret
nop
cmc
pop
and
iret
jb
or
cmp
daa
jle
xchg
xor
dec
xchg
xchg
push
cmp
ljmp
and
and
and
push
mov
les
mov
cmp
inc
das
pop
push
xchg
popa
xchg
lods
fadd
icebp
inc
xchg
rcrb
in
sub
cmp
xchg
repnz
cmp
mov
stos
stc
mov
xor
out
lcall
mov
clc
out
push
lock
jo
xchg
jl
jno
fiadds
inc
test
xchg
test
out
jg
and
xlat
pop
aad
or
in
movsb
addr16
inc
data16
add
outsb
rorl
xchg
mov
test
and
push
cwtl
pop
jnp
es
out
pop
cmpl
std
mov
sbb
xor
movsb
mov
pop
insb
aas
push
sbb
dec
mov
stos
pop
push
adc
lea
add
or
popf
cmp
jno
test
xchg
outsb
xor
jecxz
inc
push
cwtl
in
and
inc
iret
mov
push
cmp
jns
leave
divl
xchg
pop
pop
pop
in
sbb
popf
insl
imul
shll
add
jg
pop
fdivrs
push
ss
dec
xor
xchg
lcall
dec
inc
or
mov
adc
mov
add
fdivrs
shll
inc
xchg
fs
jecxz
add
ja
xchg
popf
mov
decb
cmp
add
and
mov
push
add
call
test
and
mov
std
mov
adc
pop
push
adc
xor
inc
cmpsb
cmp
or
add
into
or
rcr
aam
jnp
rcrb
js
push
pop
xchg
fldl
sub
pop
add
sbb
insb
xor
andl
or
inc
in
aad
cld
sbb
in
ffreep
cltd
call
in
or
xor
jmp
cmp
pop
mov
out
out
ror
push
mov
daa
jge
ss
pop
loop
adc
push
push
add
fs
daa
in
shlb
jle
and
mov
aad
mov
xor
enter
hlt
adc
out
push
ficompl
scas
jns
shll
xchg
call
in
jne
stos
pop
pop
push
shlb
je
cli
sub
mov
xchg
test
and
arpl
mov
imull
jnp
jnp
mov
adc
nop
sbb
push
shl
ret
push
pushf
sbb
xchg
jnp
push
sbb
aas
cmc
xchg
sub
pop
jbe
fsubr
outsb
ficompl
cltd
ljmp
lods
pop
into
sbb
cwtl
jns
push
imul
gs
les
rcrl
lds
rorl
inc
inc
jmp
es
push
imul
mov
roll
mov
xchg
jnp
out
push
inc
pusha
push
rcrb
rorl
mov
mov
mov
out
sahf
adc
es
cli
push
push
inc
add
adc
lret
xchg
ljmp
shlb
or
lahf
or
add
push
jmp
imul
mov
aas
stos
cltd
mov
rorb
mov
sbb
mov
dec
ss
jo
and
repnz
and
add
test
cmc
push
mov
inc
fnstcw
out
lea
scas
jae
lret
dec
mov
andl
fs
iret
insb
mov
int3
xor
xorb
pop
push
sbb
pop
js
fsubrp
fisttps
cltd
aas
dec
js
inc
dec
outsl
jb
fistpl
jg
jb
pop
cmpsl
leave
mov
in
mov
jge
dec
sahf
adc
das
push
fstpt
mov
cmp
mov
shlb
or
rol
xchg
lcall
sub
enter
lret
in
mov
xorl
jp
loopne
ret
mov
xor
negb
mov
hlt
movsl
or
and
inc
icebp
imul
add
push
fsubrp
jns
lock
mov
lods
in
in
inc
fsubl
push
xor
in
add
mov
jp
push
aam
shlb
mov
push
in
pop
pop
out
ret
pop
movsl
cld
or
mov
out
iret
xchg
and
fs
dec
adc
and
push
inc
and
mov
and
sub
add
cmp
jae
cs
clc
sub
adc
lcall
push
jge
fstl
aaa
loope,pn
fs
test
repnz
nop
xchg
or
ret
push
movsl
mov
mov
lds
add
insb
dec
movsl
xchg
fstpl
in
int3
or
push
aad
mov
mov
mov
lock
lea
lock
dec
repnz
add
push
cs
fs
icebp
xchg
adc
or
leave
xchg
pusha
imul
ljmp
pop
mov
push
and
fnstsw
repnz
frstor
test
or
sbb
repnz
loop
cwtl
fcmove
out
xor
sub
jne
inc
inc
xchg
cmp
xor
out
jmp
xor
xchg
ficoml
sbb
mov
and
scas
and
clc
sub
sub
or
sahf
dec
dec
add
mov
jp
ret
pop
ja
dec
in
and
and
mov
outsb
mov
cs
lret
push
stos
cmpsb
fisubl
je
out
rolb
faddl
mov
movsl
aaa
dec
or
loope
and
and
mov
xchg
and
xchg
in
loop
jbe
loop
insl
cmc
out
adc
mov
cmc
stc
xchg
fisubs
repz
insl
loope
fsubr
cli
shll
sbb
popf
cmpsl
cmp
cmp
shr
das
inc
cmp
push
sbbl
xchg
push
pop
in
popf
les
popa
pusha
adc
sub
mov
fdivr
jge
data16
jb
adc
fnstsw
subl
stos
pushf
lock
dec
jae
dec
jge
adc
mov
in
pop
stos
sbbb
adc
adc
enter
dec
mov
ljmp
cltd
and
gs
mov
adc
test
aaa
int
or
adc
outsb
dec
push
stc
push
jge
mov
jno
stos
rcll
fstp
mov
pop
dec
mov
fucomi
and
shlb
cld
dec
imul
xchg
test
es
enter
mov
leave
xor
subl
or
sbb
fmulp
clc
imull
cs
jl
mov
sbb
push
cmp
pop
jbe
lahf
push
dec
incb
out
inc
in
add
int
or
je
add
mov
sbb
out
pusha
mov
sub
add
sbb
xor
pop
in
in
aam
out
push
xor
pop
push
sbb
dec
lea
notb
pushf
push
in
sarb
jae
je
cmp
repz
add
fst
xchg
cmp
pop
cmp
enter
adc
xlat
loopne
jmp
ss
xchg
jle
cmp
js
or
outsl
test
cmp
inc
cli
aad
into
mov
lods
stos
shufps
test
dec
daa
lea
xor
xlat
lds
adc
push
or
stos
aam
mov
imul
mov
lods
out
hlt
loopne
enter
adc
dec
xchg
pop
mov
push
push
cmpsb
ja
mov
mov
int
push
xor
pop
in
icebp
shl
cs
pop
sbb
pop
jp
ret
inc
clc
add
add
arpl
lcall
lret
lock
or
add
and
add
xor
cmp
inc
loop
adcb
and
mov
fildll
fcmovu
in
cmp
in
and
mov
mov
mov
mov
cmpsb
sub
aas
nop
dec
pop
out
xor
inc
jl
psadbw
outsb
xchg
movsl
aam
or
ret
les
in
lret
imul
movsb
xchg
pop
lcall
dec
pop
mov
insl
fdivl
adc
and
lock
jnp
into
loop
pop
movsl
in
add
bnd
popf
pop
aas
out
lea
ret
movsl
fsts
out
repnz
mov
imul
sbb
das
std
inc
adc
push
push
cmpsb
into
push
popa
lods
lock
push
pop
icebp
and
adc
pop
cmp
push
and
add
add
shll
insl
jecxz
icebp
fisubl
hlt
jg
push
ds
push
out
jmp
ret
aas
adc
add
push
aad
int
call
xor
mov
hlt
daa
sbb
add
aas
stc
ret
cwtl
xchg
je
mov
jb
je
jae
push
outsb
mov
dec
cmp
sub
imul
pop
lods
lret
jns
out
add
in
out
xchg
rclb
pusha
xorb
push
sbbb
test
jmp
sti
or
jmp
addb
rolb
dec
pop
popf
repz
out
cmpsb
loope
cmp
leave
sbb
mov
sbb
jg
cmp
orb
fmuls
repz
and
lahf
shll
lret
cli
out
ja
das
jmp
lock
out
cmpsl
out
loope
sbb
inc
imul
jnp
push
daa
pop
pop
xchg
scas
stos
sub
inc
repz
xchg
ja
xchg
dec
lret
movl
and
cmc
cmpsl
pop
adc
sub
or
sarl
sbb
fisubrl
out
inc
jge
cmpsb
jge
stos
idivl
repnz
ficompl
cltd
or
add
and
pop
jnp
sar
ds
jne
mov
and
sbb
outsl
sahf
sar
fstpl
sbb
iret
inc
rcrb
push
lret
pop
xor
movsb
mov
push
pop
ficomps
push
pop
mov
xchg
cmp
lret
paddq
imul
mov
addr16
or
jns
movsb
pop
add
or
jns
sbb
adc
out
ficoml
push
outsb
fiaddl
mov
iret
add
push
push
mov
inc
lret
lret
or
jne
pop
lret
sub
loop
call
aad
xchg
aam
mov
into
cwtl
or
lods
sbb
test
insb
cmp
sub
inc
fiadds
dec
sub
jp
mov
xor
je
jne
cmp
or
ljmp
into
popa
or
int3
jae
push
jmp
int3
out
push
inc
ds
enter
mov
dec
test
neg
or
je
push
jns
xor
fisttpll
pushf
dec
movsb
test
addr16
pop
out
movsl
fidivs
and
pusha
out
out
rcrb
mov
jae
jg
in
jb
adc
add
stc
xchg
xchg
lahf
mov
and
cwtl
inc
jbe
push
call
push
xchg
xchg
cmp
sub
add
std
sbb
pop
adc
mov
dec
pop
sub
pop
push
movsl
je
xchg
cmc
sub
inc
int
scas
xchg
ret
xchg
cmpb
clc
add
fimull
push
pop
cli
add
xchg
jg
adc
xor
pop
push
add
lods
pop
insb
jmp
out
lods
push
add
arpl
inc
pop
movsl
or
pop
aas
cltd
sbbb
xchg
sub
sbb
or
roll
pop
push
jbe
imulb
xor
cld
rcr
cmpl
mov
aam
cld
push
push
inc
sbb
sub
mov
inc
fnsave
inc
sub
add
cld
jmp
test
loopne
xor
jbe
or
imul
mov
aaa
subb
cmp
test
data16
jno
ret
mov
push
mov
adc
add
jno
sti
mov
sbb
adc
xor
cltd
dec
out
insb
es
cmpsb
cmp
inc
sbb
mov
push
dec
cmp
adc
ficomps
adc
add
leave
mov
out
jmp
push
pop
fcmovne
lea
mov
inc
inc
dec
inc
jbe
add
and
push
push
xor
or
jle
dec
jb
dec
inc
pop
in
ds
mov
jnp
jns
out
mov
xchg
cwtl
sub
outsl
int
cmp
mov
sbb
pop
test
clc
test
loopne
xlat
in
loopne
pop
insb
push
add
jns
pop
or
jg
mov
sti
popl
sbb
mov
xchg
fadds
fidivl
hlt
jecxz
cmp
add
cmp
mov
pop
loope
jg
lds
lcall
shlb
jbe
jo
xchg
dec
sbb
push
cmp
lret
jp
repnz
fmull
jmp
out
push
pop
loop
rcll
push
sub
push
add
pushf
movsb
scas
pop
cltd
sub
std
lret
aas
push
mov
and
mov
xchg
add
jno
inc
and
jecxz
and
pop
cwtl
mov
and
jnp
bound
cld
shll
push
and
addb
lea
add
fisubs
cmp
pop
rolb
push
cmpsl
outsl
jge
clc
stc
test
inc
dec
mov
mov
jnp
adc
push
aaa
clc
xchg
daa
inc
mov
mov
fstpl
repnz
lcall
jno
fdivrp
add
iret
nop
ja
xor
out
imul
pusha
subl
scas
call
test
test
xor
stos
ror
in
dec
cld
adc
add
jb
mov
push
sbb
daa
push
lea
sub
adc
adc
dec
clc
mov
movsl
adc
push
nop
sarb
loop
lea
pop
enter
push
pop
adc
add
mov
push
xor
and
je
sub
icebp
adc
mov
cli
cmp
mov
push
mov
add
pop
add
dec
dec
dec
or
inc
int
adc
sarb
enter
repz
ljmp
jae
xchg
pop
cmpsb
dec
js
push
cmp
sbb
fxch
jl
mov
shll
xchg
cmpsl
pop
sub
out
mov
orl
subl
scas
sub
xchg
mov
push
pop
testb
std
mov
inc
sbb
add
xchg
cmpsl
mov
dec
les
dec
je
pop
fcomi
mov
push
adc
outsb
and
sub
enter
inc
push
push
jp
pop
mov
dec
mov
mov
adc
outsl
cmc
adc
sahf
mov
mov
xlat
sbb
movsl
out
push
jle
or
insl
rorl
add
ffree
xchg
and
icebp
cld
loopne
popa
jg
mov
mov
jmp
arpl
outsl
mov
pop
push
decl
jbe
cli
add
add
sub
shl
cmp
mov
and
rorl
fistpl
mov
and
imul
popf
insl
lds
ret
data16
in
add
cmp
jmp
sub
gs
ret
or
xor
das
dec
adc
xor
rorb
fadds
jle
push
push
inc
fptan
cmp
jl
stc
call
lods
das
or
mov
es
testl
leave
into
xchg
leave
repnz
jo
push
pop
testl
pop
ja
mov
shl
cwtl
inc
cli
stos
popa
fldcw
xor
push
nop
fcomp
pop
dec
cwtl
mov
pushf
sub
arpl
or
and
push
push
sub
cmp
xchg
out
lret
mov
add
push
pop
xor
rol
andl
cs
and
enter
clc
sub
add
aas
inc
adc
inc
lock
cwtl
pop
cwtl
mov
mov
pop
cld
mov
fidivs
adc
xor
pop
inc
imul
rdpmc
mov
in
push
repz
enter
add
int3
test
mov
add
ret
jae
xchg
les
adc
adc
std
add
sahf
scas
adc
jb
sbb
fcoms
lcall
int
and
orl
cwtl
adc
lock
or
fs
jg
inc
and
ss
xchg
jne
test
fs
sbb
add
pop
push
ret
sub
dec
js
aad
ss
mov
xor
sub
jns
arpl
nop
and
in
push
imulb
sti
adcl
cmp
mov
or
mov
cmp
sub
les
hlt
push
adc
mov
imul
push
test
mov
fld
outsb
out
pop
test
jne
insl
sub
sbb
xor
sub
or
push
out
push
test
fwait
push
out
test
jmp
into
jns
data16
das
jo
inc
jg
gs
xchg
xchg
fistpll
or
iret
nop
je
jge
cld
sbb
call
je
inc
and
mov
lcall
adc
xor
xchg
add
dec
lret
cmp
xor
test
adc
mov
inc
dec
xchg
or
adc
push
jnp
rcr
inc
cmp
sub
sbb
mov
pop
mov
idiv
mov
mov
cld
push
xchg
aam
sbb
int
xchg
scas
sbb
jp
dec
pushf
sub
adc
scas
call
stc
int3
or
or
addb
push
sbb
mov
add
addr16
lret
pop
push
add
jbe
fsubrl
out
test
clc
adc
fldcw
out
call
cli
adc
adc
stc
repnz
sbbb
out
dec
mov
xchg
sahf
mov
jp
cmp
rcll
add
xor
sub
insl
jno
dec
insb
xchg
cmp
cmp
and
lods
lret
arpl
fnstcw
and
jecxz
idiv
lss
dec
xorl
and
daa
aad
hlt
movsl
pop
xor
push
jge
iret
je
insl
push
loope
and
jp
idivb
xchg
mov
cmp
jge
or
loop
pusha
mov
mov
fists
ljmp
adc
cmp
add
scas
enter
hlt
and
int3
push
shlb
mov
aas
dec
ficoml
add
cli
out
loope
inc
cmp
jno
pop
aad
je
lea
xchg
ret
in
adc
insl
sbb
jo
lock
cs
std
addr16
xchg
outsb
movsl
int
inc
pop
shll
ret
stos
xor
xor
adc
pop
out
push
mov
mov
cmpsb
ja
or
pop
ljmp
push
dec
xor
test
sub
call
pop
cs
mov
mov
or
punpckldq
cmp
sbb
test
ds
mov
mov
xchg
adc
insb
pop
lcall
shrl
fdivrs
add
insb
loop
inc
push
mov
icebp
outsl
fdivl
adc
mov
sub
and
cmc
mov
popa
fcompl
jb
cs
dec
inc
mov
adcl
repz
movsb
xor
mov
fldt
fbld
es
outsl
push
inc
das
stos
les
cmp
or
jmp
sbb
dec
cmpsl
mov
ffree
or
out
sbb
add
or
jl
incl
sub
out
shl
push
les
movsb
push
push
jo
add
jnp
loop
lods
cmp
cwtl
test
hlt
inc
movl
xchg
xor
dec
repnz
lret
int3
outsb
andl
pop
inc
xchg
or
xchg
mov
dec
dec
fidivl
inc
shlb
sbb
lret
fwait
dec
jnp
int3
lcall
pop
push
pop
push
sbb
ja
loop
int
xor
cmc
loop
les
add
mov
nop
xor
lds
xchg
nop
mov
xchg
shrb
inc
adc
iret
xrelease
push
and
aad
add
inc
pop
lock
push
xorl
mov
pop
lret
fidivrs
fsubrp
cmp
adc
mov
mov
jnp
inc
and
push
stos
dec
fisttpl
or
imul
fsts
outsb
xchg
js
jnp
dec
adc
add
add
lahf
arpl
mov
jl
pop
inc
add
and
add
test
cli
adc
enter
pop
aaa
lods
fimuls
mov
adc
push
lods
clc
or
sub
jb
xor
xor
rcl
jp
lcall
aas
push
xchg
or
fcmovnbe
je
xchg
dec
je
sub
aas
mov
inc
imul
mov
inc
xor
mov
fcmovu
mov
les
in
iret
xchg
loope
test
xlat
dec
insl
shll
jecxz
or
popf
inc
dec
ljmp
push
jbe
dec
sti
sbb
std
xchg
jbe
out
test
dec
adc
adc
cmp
lods
pop
mov
xlat
rcr
mov
out
mov
xchg
mov
fs
leave
jp
rclb
push
xor
pusha
les
add
jmp
imul
dec
arpl
xchg
jnp
nop
or
das
imul
fimuls
cli
inc
adc
popf
sbb
dec
pop
lods
mov
mov
inc
into
ja
gs
mov
cmp
int
jle
movsl
mov
fs
xlat
aas
dec
inc
or
mov
add
shrb
loope
mov
in
sbb
enter
sbb
scas
cmp
loop
pop
jl
ret
xchg
daa
dec
sub
adc
nop
ret
inc
mov
scas
xchg
jp
aaa
adc
mov
aam
pop
fisubl
ljmp
or
in
loope
mov
imul
in
arpl
aam
pop
movsb
enter
out
push
cld
lods
cmp
adc
mov
test
xor
aas
neg
push
pop
daa
pop
pop
bound
dec
jle
jmp
orb
push
or
push
add
lds
mov
mov
xchg
gs
flds
jo
test
imul
sbb
stos
xor
sbb
fstp
aad
out
jge
and
sbb
imul
pushf
and
ret
call
adc
mov
out
and
pop
sub
sti
pop
dec
and
popf
adc
add
cmp
push
ljmp
ret
sbb
stos
pop
jmp
scas
aas
sub
add
fadd
lds
insb
cmp
mov
and
or
ja
push
mov
adc
jecxz
and
aas
add
jp
sbb
push
sbb
mov
cmpb
lods
rcll
and
mov
ret
cmp
pop
push
insb
lahf
test
out
std
dec
push
cmpsl
leave
xor
enter
lea
push
pop
nop
mov
cmpsb
adc
nop
jle
stos
xchg
cmp
dec
repz
ds
mov
in
push
roll
add
das
test
xchg
aas
adc
xor
ret
outsl
mov
sub
sub
leave
cmpsb
add
jl
mov
xchg
mov
add
sub
lret
insb
jbe
push
ja
mov
dec
test
cli
pop
in
jl
push
pop
je
aad
mov
cltd
addr16
fwait
xchg
js
pop
fwait
jg
mov
jns
int
insb
lret
aas
push
bound
out
cmp
inc
dec
sbb
and
pop
in
cld
fisubrl
jl
lret
int
dec
insl
sbb
sbb
out
in
inc
or
daa
push
dec
mov
inc
idivl
push
push
inc
and
cmpsl
roll
mov
pop
sub
nop
mull
and
sub
add
out
sbbl
xchg
cs
loope
jge
out
pop
les
xor
insb
gs
mov
std
outsl
sub
fstl
add
int
xchg
in
xor
in
push
push
push
sbb
pop
add
ja,pn
icebp
scas
pop
push
xlat
pusha
xchg
fiaddl
jp
out
out
fwait
mov
mov
test
outsb
inc
lret
std
mov
je
mov
aas
cmp
inc
int3
icebp
mov
mov
jne
ret
jb
insl
or
push
repnz
jg
movsb
ljmp
cmp
mov
fimuls
xor
xchg
rolb
nop
dec
call
pop
and
adc
inc
shl
lods
mov
cmp
cs
fcmovnbe
fmuls
dec
push
jno
xchg
in
add
push
mov
insl
or
adc
xchg
inc
adc
out
fsubrs
aaa
jno
out
fsub
sbb
into
cld
and
shrl
lahf
mov
rcl
bound
fstpt
pop
xchg
xor
ljmp
hlt
cmp
push
xlat
ss
lock
cltd
xchg
cmp
adc
and
jmp
lds
fwait
push
jnp
je
out
bound
dec
or
outsb
insl
lock
xor
out
lea
inc
xor
sub
jecxz
mov
imul
adc
xor
in
fnstsw
fidivrs
in
aad
xchg
in
mov
daa
rolb
jmp
loope
xchg
les
mov
negl
nop
push
jg
jge
nop
push
sbb
jp
push
call
out
inc
in
cltd
cld
bound
scas
insl
in
jb
sub
je
stos
aas
xlat
cmpsl
lock
std
and
cltd
pop
adc
jmp
mov
lahf
leave
daa
mov
sub
adc
inc
std
pop
loope
jge
cs
out
mov
fcmovbe
in
mov
aam
rorb
add
jg
pop
mov
and
bound
cmpb
add
xor
pop
cmpsl
sbb
jnp
add
stc
hlt
out
mov
out
lret
mulb
jmp
in
lea
push
pop
ja
cltd
push
fisttps
js
dec
sbb
stos
jnp
popa
xor
arpl
movsb
div
int3
js
push
stc
jecxz
popf
nop
mov
repz
inc
mov
push
loope
addb
pop
cmpsl
push
fiadds
cmp
fcomps
add
sbb
cmp
imul
movsl
mov
aaa
xchg
fists
insb
sbb
push
arpl
scas
and
push
ret
mov
inc
addr16
jnp
lock
sub
repnz
cmp
das
out
sbb
adc
mov
stc
mov
in
mov
mov
into
push
sub
sti
mov
movsl
dec
jb
cmp
push
push
stos
jbe
adc
mov
sbb
pushf
outsb
or
incb
pmuludq
or
add
sbb
insl
les
mov
jae
jecxz
insb
cmp
add
and
add
test
int3
sub
lea
stc
jp
fwait
jns
jg
sub
pop
decl
and
push
popf
cmp
cmp
cmp
scas
addr16
cmpsb
jl
push
insb
faddp
sbb
mov
mov
mov
dec
and
gs
in
sub
ret
aas
mov
and
cmp
imul
xchg
pusha
stos
mov
adc
ja
fs
adc
movb
adc
icebp
mov
mov
lods
mov
popl
fbstp
popa
jns
or
dec
call
xchg
test
xor
pop
orb
mov
rcrl
xor
imul
outsb
adc
jno
push
sbbl
push
adc
int
fildll
das
adc
rcl
sbb
and
mov
subl
int3
in
loope
xchg
iret
sti
rcrb
ljmp
inc
insb
aam
mov
sub
ja
test
mov
sub
mov
loopne
mov
sahf
cmp
mov
add
jp
inc
mov
test
mov
lcall
jp
hlt
cmova
push
sti
in
addb
jge
pop
iret
stos
cli
xor
lods
sti
and
andl
rcrl
or
pop
mov
cmpsb
pop
mov
ljmp
mov
jnp
iret
xchg
mov
ds
cli
fidivrl
add
push
fldt
das
cli
pushf
cmp
loope
stos
iret
rorb
sub
lds
lds
push
rcl
leave
cmpsl
mov
arpl
icebp
adc
push
push
gs
mov
inc
fisttpll
out
xchg
inc
std
adc
test
lds
fisttpll
mov
or
dec
push
daa
cwtl
add
or
out
mov
ja
push
icebp
hlt
pusha
psrlq
aad
jge
fcomp
dec
or
and
cmpsb
stos
gs
sbb
ss
lock
iret
repnz
mov
jge
pop
out
mov
push
andb
popa
mov
jae
mov
cwtl
jge
lods
outsb
sbb
clc
push
inc
jno
pcmpeqd
jns
mov
ficomps
addr16
sub
xor
push
jmp
pop
bnd
fwait
xor
mov
fsubs
insb
insb
in
push
xor
mov
push
mov
ret
mov
fwait
call
int3
and
inc
adc
push
mov
fistpl
and
add
inc
fwait
cmpsl
data16
and
movsb
mov
inc
pop
xor
clc
ret
in
fsubrp
dec
jb
mov
dec
icebp
xchg
or
leave
leave
bound
mov
jo
nop
aaa
pusha
sbb
fnstcw
dec
push
movsl
movsl
lea
push
scas
mov
enter
dec
sub
addr16
test
inc
fisttpl
jg
test
xor
dec
data16
and
mov
dec
add
stos
or
stos
mov
movsb
scas
test
out
sbb
out
jae
leave
stos
clc
dec
mov
xor
out
and
xchg
sbb
enter
addr16
test
mov
in
mov
sub
repnz
stos
and
and
sti
xchg
arpl
jl
xchg
in
insl
js
mov
filds
cmp
mov
movsb
sub
pop
sbb
pop
aad
ja
jno
add
inc
aam
mov
out
mov
and
aaa
dec
xor
pushf
daa
mov
fwait
dec
and
insb
xchg
inc
insb
lods
adc
sub
pop
sbb
add
jno
xchg
scas
xor
jle
adc
scas
aaa
jno
popa
hlt
adc
or
jae
jno
pop
push
bswap
jnp
sub
int3
shlb
or
or
inc
inc
in
xchg
aas
imul
shll
mov
cld
lock
inc
adc
sti
lock
repz
scas
xchg
jmp
adc
xor
jg
dec
inc
fmuls
xor
ficoms
es
sub
inc
addr16
cmpsb
aaa
out
sub
fsubrl
add
sub
pusha
test
sbb
testb
mov
into
and
leave
xchg
loopne
xor
mov
cwtl
out
push
in
push
push
in
pop
nop
sbb
lea
addr16
movsb
ljmp
pop
pop
enter
aad
lahf
cmp
cli
jg
out
mov
imul
cmc
cltd
test
enter
mov
pop
mov
jns
outsl
mov
inc
sbb
xchg
mov
pop
xor
lock
fidivs
fisttpll
cmp
adc
loopne
sbb
jb
mov
mov
jmp
mov
test
pop
add
repz
or
pop
stc
mov
jo
xchg
adc
shlb
stos
arpl
sbb
and
mov
dec
and
mov
ljmp
sbb
inc
jge
call
jg
push
fsubl
push
dec
cmp
fisubl
scas
xor
push
xchg
shlw
in
mov
cli
jne
lock
std
mov
outsb
ret
icebp
rol
inc
rorb
movsl
mov
ljmp
jp
jg
lahf
fcoml
pop
ja
into
std
ljmp
stos
leave
push
test
pusha
push
sti
xor
cmp
sub
leave
cmp
jg
jns
in
dec
mov
insb
sbb
push
and
shlb
xor
scas
inc
arpl
push
rcrl
addr16
roll
jge
rclb
scas
push
cmc
fsubrl
and
pop
orb
cmp
pop
arpl
mov
jbe
fs
movsl
mov
dec
sbb
movsb
insb
jmp
xchg
add
lret
in
mov
push
es
bnd
sahf
mov
mov
jnp
inc
subl
and
sahf
adc
pushf
cld
int3
fsub
adc
push
scas
xlat
sbb
push
insl
test
lret
xchg
jecxz
lahf
and
not
xchg
jne
and
cmpsl
cmpb
cmp
lds
rol
jne
adc
into
xor
ja
or
jns
jb
mov
pop
ret
sub
add
mov
in
idiv
jg
and
add
lds
add
pop
add
mov
mov
push
dec
mov
repz
adc
hlt
and
enter
cli
mov
pop
out
add
inc
scas
in
mov
mov
mov
dec
cmp
and
sbb
adc
jge
dec
insb
enter
or
stos
fnstsw
in
cli
fld
jno
scas
adc
scas
movsl
inc
mov
mov
int3
or
mov
jb
sbb
lahf
push
push
mov
out
ljmp
clc
das
cmpsl
pop
sbb
aaa
repnz
add
dec
mov
mov
inc
stc
inc
insb
mov
fsubrp
in
iret
das
into
jae
sbb
push
mov
sub
sbb
push
dec
adc
scas
xchg
jp
cld
ror
dec
mov
sub
cmc
fsubrs
icebp
jl
cmp
sub
lahf
test
pop
cmc
fidivrl
repz
add
sbb
xchg
xchg
sub
out
xor
arpl
xchg
xchg
adc
add
lea
pop
pop
outsb
test
pop
dec
nop
cli
in
lcall
mov
fwait
pop
test
out
cld
icebp
cmpsb
mov
nop
adc
push
repnz
mov
fs
mov
and
orl
filds
fwait
lret
sub
mov
inc
sbb
fbstp
repnz
push
sub
daa
sub
xchg
arpl
dec
jmp
sar
sbb
pop
imul
lahf
popa
outsb
ja,pt
xchg
outsl
movsb
cwtl
stos
inc
in
or
add
dec
in
jno
dec
push
add
inc
fisubrl
out
mov
jp
sbb
jae
in
sub
inc
cmc
xlat
filds
sar
negl
bound
adc
repnz
cmp
xorb
fadd
xchg
pop
jmp
orb
sub
rcrl
movsb
lock
repnz
bound
outsb
mov
jne
add
arpl
popf
mov
jmp
dec
cmpl
mov
adc
dec
ja
xchg
mov
push
test
cltd
aaa
push
dec
mov
xorb
sbb
sti
aam
xchg
push
das
push
inc
mov
daa
movsb
xor
arpl
push
dec
sahf
aas
aaa
jmp
sti
insl
jecxz
sarb
daa
add
in
sub
and
lods
pop
jmp
xchg
xor
jecxz
and
jl
jnp
dec
leave
ret
cmp
int
xchg
fisttpll
pop
jbe
cld
in
shrb
das
push
jecxz
jns
fisubl
ljmp
mov
popf
jle
sub
cli
cmp
jg,pn
xchg
fs
dec
dec
mov
cltd
je
into
cmc
lea
cmpsb
lock
popf
sbb
fnsave
outsb
sti
mov
aad
fs
loop
outsl
movsl
xchg
andb
pop
mov
stos
dec
fcmovne
push
inc
fdivl
aaa
sbb
xchg
popf
sub
inc
or
movsb
cmc
cs
pop
inc
push
jle
push
adc
test
inc
add
mov
hlt
push
cmpsl
mov
cmpsl
lret
cmp
push
ds
xor
bound
add
daa
aad
inc
sahf
sahf
and
mov
dec
popf
fsubl
iret
jecxz
or
mov
cwtl
pop
xor
out
dec
pop
inc
jbe
sbb
lahf
cwtl
test
lods
mov
and
movsb
jne
mov
add
das
mov
shlb
sub
jbe
and
sub
in
pop
movsb
clc
bound
mov
xchg
inc
cli
repnz
movsl
jbe
inc
fidivrs
inc
daa
lahf
scas
daa
dec
cwtl
sbb
jns
cmp
and
cld
add
sbb
or
repz
popf
xchg
sub
daa
cli
or
push
inc
es
jp
es
cltd
and
out
out
and
mov
scas
into
or
test
mov
inc
jnp
pusha
jg
clc
pop
subb
fwait
xor
cmp
sbb
xchg
add
inc
and
insb
jno
jbe
aad
aaa
clc
dec
lahf
push
add
sub
jl
adc
add
cmp
inc
xorl
sarl
xor
fidivrs
fildl
ss
scas
jle
mov
in
test
sbb
iret
jae
sysenter
sarl
dec
push
scas
and
jb
call
and
mov
dec
jge
cmp
dec
std
nop
aas
jbe
mov
mov
push
insb
jb
sbb
ficoms
adc
pop
xor
sbb
lahf
popa
fimull
mov
out
in
mov
insl
bound
mov
pop
mov
push
push
repz
cmpsl
test
pop
divl
inc
jo
push
test
mov
scas
loope
testl
or
mov
int3
mov
cmp
sbb
or
xchg
sbb
outsb
aam
pop
popa
cwtl
int3
popa
pusha
xchg
aam
adc
inc
ja
mov
es
loopne
inc
dec
sub
xchg
adc
fsubrs
mov
add
out
popf
mov
add
adc
jle
adc
lret
jnp
jl
ret
inc
mov
fucomp
loopne
adc
jnp,pt
lcall
aas
sbbl
lods
jmp
jmp
xchg
mov
xor
es
divb
mov
cmpsb
and
inc
sahf
out
pop
cmc
repnz
faddl
sahf
mov
mov
jae
cmp
inc
dec
ss
cmc
test
aaa
cmp
cmpb
mov
fistpl
and
inc
pop
jne
shrb
mov
movsl
in
xor
movsl
mov
enter
aaa
aad
in
mov
xchg
dec
nop
sti
jle
jae
pop
push
dec
or
mov
add
xlat
xchg
cli
xchg
in
dec
std
mov
mov
sar
sbb
aam
pushl
int3
pusha
nop
outsb
push
fildl
dec
adc
es
mov
int3
jae
sahf
add
ds
push
subb
jle
pcmpgtb
or
sbb
shl
add
ds
xlat
adc
sub
xchg
ljmp
push
xchg
adc
in
lcall
mov
and
pusha
sbb
ds
or
mov
lret
or
loop
sub
cmpb
push
dec
dec
mov
iret
dec
mov
lahf
cmp
stc
out
inc
std
fidivrs
movsb
dec
mov
popf
adc
mov
add
repz
mov
pop
push
push
sub
ds
xchg
fs
shld
or
repnz
push
test
xchg
and
es
and
mov
xor
mov
add
and
or
sub
sbb
xlat
dec
imul
aaa
mov
jo
imul
or
mov
jge
dec
adc
mov
lods
mov
popf
push
sub
pop
dec
inc
loopne
cmpsb
mov
sbb
mov
add
stos
adc
and
inc
ltr
or
xchg
push
cmp
push
inc
in
fcoms
pop
ljmp
sub
sbb
add
and
dec
cmp
mov
addl
inc
sbbb
adc
add
mov
jb
push
dec
fsubrl
ret
mov
push
scas
sti
xchg
insb
clc
sti
test
in
in
pop
dec
dec
je
mov
test
mov
mov
lret
js
push
subl
push
mov
arpl
jns
sbb
pop
negb
cmp
xor
or
dec
jb
std
bound
mov
aam
stos
add
xor
push
shlb
mov
dec
mov
mov
push
outsl
pop
in
out
lcall
cmpsb
cmpsb
xor
mov
nop
add
xor
mov
jle
ljmp
adc
mov
push
popa
add
adc
gs
pop
mov
stos
push
xchg
adc
pusha
test
pop
fdivr
push
fs
or
stos
adc
aam
cmp
lds
arpl
mov
or
jnp
iret
or
fwait
xchg
je
out
fs
xor
popf
jae
push
outsl
xchg
ficomps
ret
sub
popf
cmp
andb
lds
add
or
jne
dec
mov
xchg
push
add
push
lods
inc
inc
push
rorb
fisttpl
das
mov
add
dec
dec
loopne
lret
outsl
sbb
ja
or
test
and
in
dec
pop
mov
sbb
sub
xchg
lcall
lret
rolb
add
dec
dec
add
repz
cltd
mov
imul
jbe
dec
loop
mov
arpl
xchg
cmp
ja
mov
pop
negb
xchg
fnstenv
pop
cmp
xchg
xlat
imul
cmp
fldt
xor
jmp
pop
mov
aas
cmp
lcall
lahf
call
fstps
mov
idivl
or
add
inc
and
dec
fisubl
shll
mov
or
cmp
mov
ss
outsl
jne
sub
mov
les
fninit
jnp
insb
or
push
fcoms
xor
sbb
adc
stos
xchg
inc
aaa
loopne
adc
fstpl
or
dec
dec
xchg
test
in
daa
daa
or
and
mov
dec
ret
ret
es
push
add
cmp
sub
mov
or
cltd
pushf
outsl
inc
aas
roll
push
test
sub
add
dec
inc
pop
ss
and
loopne
pop
jo
pop
cmp
jnp
pop
mov
sbb
stc
xor
push
fdivs
ret
mov
mov
lods
fwait
movsl
pop
jo
dec
pop
icebp
lods
ljmp
cwtl
adc
fs
mov
cs
jg
or
lods
xchg
loope
cs
jmp
cmp
roll
jg
adc
and
push
imul
jb
mov
dec
mov
stos
int
xchg
addb
fcomi
in
leave
inc
adc
inc
sub
push
sbb
jmp
sbb
dec
add
rorb
and
mov
cmp
int
call
data16
push
mov
mov
push
push
test
insb
shrb
pop
call
mov
jnp
gs
std
fwait
pop
inc
jp
inc
sbb
inc
cmpsl
scas
das
mov
cltd
call
out
mov
dec
arpl
add
add
dec
sahf
lret
or
and
inc
push
add
outsl
clc
push
xchg
movsb
mov
cli
rcll
pusha
rolb
rorl
fdiv
cmp
sbb
jecxz
jge
dec
xor
mov
cmp
out
push
into
sti
cltd
xor
mov
dec
jge
js
notb
mov
lret
push
sbb
hlt
jle
mov
sbb
pusha
jle
lret
pop
and
and
sub
js
pusha
push
hlt
les
mov
mov
enter
sub
pop
shlb
movsb
scas
push
sarl
sbb
or
hlt
push
pop
popf
in
divb
mov
sub
std
adc
je
sbb
adc
es
dec
and
loop
and
push
mov
mov
jns
sbb
cmpsb
test
out
loopne
das
xchg
inc
xlat
test
fwait
jg
adc
add
inc
hlt
rorl
mov
sbb
push
add
ds
popf
lahf
repnz
adc
out
inc
stos
pop
push
icebp
mov
aas
mov
add
dec
jb
sub
jno
xlat
jge
or
lods
ss
push
mov
dec
lock
nop
test
jge
mov
mov
aad
jl
cmp
jne
push
lcall
add
and
shrb
sub
dec
cltd
sbb
xchg
mov
adc
sbb
into
ret
loope
dec
xchg
add
pop
in
mov
mov
xor
sub
ds
inc
fdivrs
leave
cmp
xlat
adc
fmuls
loop
add
push
and
imul
xchg
decl
and
js
cmp
jnp
andl
add
sub
cmp
rorb
cmp
int3
pop
and
mov
cltd
fldt
sbb
or
fstpl
ss
inc
inc
aad
adc
mov
sub
movsl
out
insb
push
jmp
push
xchg
xchg
ret
int
js
and
les
aas
mov
popa
leave
scas
ret
xlat
shlb
scas
ret
lret
in
repnz
cmp
inc
sub
cli
rcll
jns
xor
mov
enter
xchg
add
lret
ja
daa
inc
call
xchg
pop
add
stos
sbb
and
dec
xor
cmpsl
add
jmp
inc
jo
inc
icebp
inc
in
sub
dec
shl
pop
ss
jne
aaa
jnp
cmp
pop
std
pop
pop
in
mov
pop
inc
sbb
inc
dec
jno
add
mov
pop
and
add
shlb
push
mov
dec
bswap
xchg
sub
dec
das
push
xor
mov
jg
mov
daa
in
mov
cmp
mov
push
addr16
lcall
add
jae
and
push
xor
sub
and
dec
popa
je
les
lea
lea
push
mov
hlt
hlt
jle
outsl
mov
and
inc
in
test
pop
mov
mov
mov
push
les
xchg
jl
loope
nop
xor
pop
and
push
fwait
lods
push
add
fldenv
das
popf
repz
orb
fs
pop
lret
cmpsl
addr16
mov
add
add
jl
stc
cmp
push
pop
aad
fnstsw
jmp
out
andl
cmp
into
ficoml
sub
jp
dec
mov
pop
dec
rolb
fwait
xchg
lret
jns
ja
sub
scas
adc
mov
xchg
sub
stos
mov
es
inc
mov
cmpsb
push
push
xchg
nop
mov
jmp
jo
ffree
out
orb
sub
fistl
les
pop
pop
decl
lret
xchg
aam
es
je
mov
int
and
outsb
push
je
xor
sbb
mov
enter
xchg
fiadds
xor
stos
xor
sub
imul
mov
jae
jecxz
shll
dec
and
ret
jg
add
and
dec
ret
cmp
in
not
pop
push
sbb
add
sbb
sbb
icebp
or
xor
cmp
jl
jl
test
xchg
cs
fists
movsl
mov
mov
es
imul
lahf
jge
lcall
cli
sub
xchg
jnp
popa
sbb
mov
and
adc
adc
out
fnstcw
adc
popa
test
or
lods
lahf
fidivs
out
mov
mov
add
lds
sub
mov
mov
pop
pop
jmp
stos
adc
lret
mov
js
lods
sbb
stos
ss
cmc
xlat
mov
iret
mov
push
push
pop
sbb
loop
scas
aad
pop
ret
decl
pop
outsl
adc
lds
pop
mov
imul
and
sbb
notl
push
inc
cmc
adc
daa
andl
je
jp
ss
insl
pushf
dec
sub
into
cmp
mov
push
ds
mov
cmc
fnsave
in
notl
cmp
sbb
add
cmpsb
adc
out
aam
fwait
arpl
jns
ljmp
jg
leave
jecxz
enter
ficomps
xchg
push
and
fimull
subb
stos
add
cmp
jmp
jae
insb
or
or
or
push
mov
adc
fs
in
and
jp
cmpsl
xor
mulb
nop
in
adc
sub
fimull
es
popa
loope
xor
dec
cmp
push
les
stos
scas
push
push
sub
lcall
or
push
fcmovnb
jp
jno
xchg
ljmp
popf
stos
das
loop
fdivl
cmp
mov
dec
fdivr
mov
mov
rcrl
mov
nop
movsb
sbb
jmp
push
es
cmp
pop
mov
mov
add
arpl
pop
mov
rcll
push
rolb
xchg
movsl
in
mov
add
mov
xchg
shrb
popf
mov
push
int
sbb
push
shlb
int3
jp
push
push
sub
mov
test
sub
hlt
sub
mov
or
sub
test
ret
adc
cmc
loop
xchg
cs
repz
rcrl
addb
mov
out
push
add
jns
push
pusha
jle
or
cmpsb
xor
fst
xchg
mov
mov
stc
mov
mov
lea
jne
dec
stc
lahf
fimull
cmp
dec
mov
lret
js
cmc
mov
into
xchg
iret
aam
lds
inc
aaa
jno
jnp
fwait
mov
mov
push
sarb
in
test
aam
cmp
popf
sbb
stos
imul
cld
aad
pop
lret
lea
scas
cli
xchg
cmp
subb
dec
jb
popa
icebp
sarb
repnz
out
mov
cmp
xchg
rol
sbb
das
in
push
and
push
sub
or
movsb
cmp
nop
sti
sti
sub
add
jl
mov
mov
and
push
and
ljmp
jo
mov
cmp
dec
xchg
cld
jne
dec
push
xchg
lret
imul
cmp
les
lock
dec
lret
cmp
aaa
out
adc
push
leave
pop
ss
arpl
push
pop
sub
rorl
adc
pop
movl
xor
push
jl
jle
popf
sub
push
mov
mov
call
xchg
enter
sub
loop
jge
pusha
xchg
push
adc
dec
imul
std
repz
mov
pop
int
cmp
sbb
jae
xor
loope
inc
pop
cmpsb
es
stos
or
fidivrs
adc
popf
jge
push
cmp
inc
ja
ret
xchg
daa
test
inc
fistpll
ret
xlat
push
loopne
fnstsw
pop
push
je
in
enter
ret
sbb
lahf
mov
or
movsb
lcall
or
and
xor
xor
int
dec
pop
out
sub
outsb
or
xchg
lahf
psrld
repz
mov
arpl
or
sbb
call
mov
ljmp
push
in
stc
add
mov
hlt
sbb
xor
movsb
dec
mov
dec
push
adcl
icebp
js
mov
cmp
repz
lock
xorb
test
adc
cmp
xchg
push
clc
or
jle
out
gs
notl
inc
int3
idivl
xor
and
loope
lods
pop
xchg
into
pop
push
mov
jg
cmp
stos
cld
stc
adc
add
push
mov
xor
shr
and
aas
fcomip
out
or
shlb
and
add
bound
loop
adc
sub
jae
or
rorl
xchg
lret
bnd
cmp
sbb
shrl
sbb
sti
fiaddl
cmp
xor
mov
or
mov
loop
add
cltd
into
xchg
adc
mov
xor
mov
mov
cmp
mov
add
pushl
jae
out
mov
hlt
push
les
fwait
iret
stos
mov
decb
fists
mov
icebp
fimull
call
prefetch
cli
hlt
imul
pop
jno
sub
sub
adcb
add
pop
sar
push
mov
jecxz
push
fidivrs
jnp
or
fwait
sub
bound
push
mov
out
mov
mov
push
jmp
es
pusha
add
mov
and
cmpsb
mov
mov
mov
je
popa
hlt
and
or
imul
inc
outsl
cmp
es
out
scas
mov
ret
addr16
mov
mov
mov
cmc
cmc
rcrb
xor
mov
addr16
sbb
lret
outsl
push
push
rol
mov
mov
popa
sbb
sbb
sub
mov
arpl
xchg
dec
lret
data16
lods
adc
in
cmc
notl
lahf
and
shlb
and
outsb
lods
mov
add
cmp
jnp
push
roll
repz
cmpsl
leave
cmp
arpl
sub
jae
test
cmpsb
movsb
xorb
pop
sub
gs
jmp
test
cld
in
notb
xchg
xchg
cmp
fs
fldcw
sub
xor
add
jle
cmp
ret
mov
pop
add
push
fdivr
ret
hlt
jg
and
mov
movsl
scas
in
dec
push
push
ret
dec
js
lret
stos
int
enter
push
out
lea
pop
into
xchg
and
pop
mov
jae
xchg
inc
ret
sbb
pusha
enter
xchg
pop
xor
popf
xlat
movq
lcall
out
out
adc
jns
pop
leave
pop
sbb
hlt
in
jne
sbb
jo
ret
fisubs
mov
int3
test
data16
cmpsb
bound
dec
scas
mov
pop
sarl
pop
sbb
xor
dec
popf
mov
dec
and
addr16
dec
imul
jp
daa
outsb
mov
or
data16
loope
lret
insl
xchg
add
mov
push
rcrl
aaa
cltd
jp
xchg
mov
or
mov
lds
cmpb
jmp
out
and
xchg
out
scas
filds
lods
lock
mov
lret
xor
or
cli
mov
jb
adc
aam
xchg
mov
arpl
dec
jnp
aad
dec
cwtl
push
lds
sbb
jecxz
loop
mov
mov
dec
mov
adc
sub
adc
ret
jbe
xchg
xor
jmp
scas
out
testl
mov
insb
pop
and
pop
add
rcrb
and
mov
push
lahf
adc
jns
push
jl
into
push
insl
sub
xchg
add
imul
and
sbb
push
inc
fwait
sti
inc
jbe
jle
fbstp
les
repz
jb
jo
sbb
imul
inc
ja
mov
sub
dec
incl
push
out
mov
shll
pop
sbb
push
lret
sti
fmuls
pop
iret
pop
cmpsb
imul
jbe
dec
sti
repnz
push
xchg
cld
xchg
mov
dec
and
push
push
and
adc
push
or
fbstp
outsl
subl
dec
cvttps2pi
push
inc
mov
iret
add
cvtps2pi
cli
daa
jge
pop
push
rol
push
lock
mov
fmull
int
jmp
insl
fildl
sbb
jnp
hlt
pop
ss
xchg
test
mov
mov
jmp
cmp
push
daa
in
mov
nop
cmp
in
lods
lret
inc
mov
jle
cmp
subl
xor
mov
cltd
add
fidivrs
mov
and
testb
ds
cmp
jg
mov
push
int3
into
fsubr
mov
xchg
push
shrb
xor
push
ljmp
xchg
mov
aas
insl
sub
jne
clc
daa
pop
cmpsb
mov
xchg
addb
xor
enter
sarb
cmpsl
sahf
or
pop
mov
sti
fstl
inc
mov
dec
in
sbb
push
mov
mov
jnp
pop
repnz
test
imul
push
cld
enter
jae
mov
jo
cmp
sub
cltd
add
lds
daa
add
sbb
jg
mov
and
je
inc
mov
popf
fimull
neg
jo
mov
mov
mov
icebp
mov
notb
jg
jecxz
and
jae
inc
call
dec
ret
in
stos
fisubrl
xlat
mov
or
ret
sub
rcrl
dec
mov
mov
out
push
loope
lods
ret
loop
xlat
mov
cmpl
add
mov
dec
lock
and
rclw
movsb
outsl
addr16
out
adc
aas
fidivrs
andb
xor
push
sbb
ja
lds
add
push
lods
rcrl
and
rcll
lock
rorl
mov
orl
mov
adc
sub
into
adc
push
mov
ror
cmp
xchg
rcr
into
adc
xchg
xlat
enter
mov
adcb
jo
out
xchg
test
mov
push
lea
test
push
aaa
sti
outsl
lods
shrb
pop
ljmp
jno
orb
xchg
mov
mov
and
sub
sbb
push
ljmp
add
or
out
pop
and
stc
sub
int3
clc
imul
dec
adc
pop
pop
jb
into
or
inc
adc
xor
inc
jmp
outsb
aad
xchg
insl
dec
lcall
in
test
sub
data16
fldenv
sbb
push
jae
pop
inc
xor
cmc
rcrb
xchg
pop
and
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
mov
xlat
lea
xor
push
adc
add
and
add
decb
jb
push
mov
lock
in
je
inc
out
mov
mov
stc
dec
mov
inc
rorl
xor
out
in
xchg
jle
or
mov
nop
inc
mov
notb
mov
and
jp
sub
mov
scas
inc
or
lret
arpl
push
xor
pusha
pop
add
insb
loopne
mov
and
dec
jbe
cmpsl
mov
pop
sbb
dec
jnp
fisttpll
sbb
lds
pop
dec
adc
cmp
pop
cmp
or
xchg
xchg
inc
lods
adc
insl
inc
and
leave
mov
sarl
and
adc
sbb
lret
mov
out
fscale
out
mov
add
mov
mov
pop
and
pop
or
leavew
jp
arpl
sub
adc
or
lock
jne
mov
mov
sub
pop
pop
or
dec
sub
xchg
lds
mov
mov
jp
mov
adc
inc
call
into
repnz
lret
int
ss
add
or
push
or
cli
jge
mov
iret
rcrl
mov
imul
lret
ret
sub
dec
jle
mov
jns
pop
loope
push
sti
test
sbb
cmpl
mov
lcall
out
or
adc
or
xchg
inc
nop
xor
repnz
and
push
and
nop
fsub
in
clc
jge
sub
lock
mov
inc
jge
in
mov
lods
outsb
jno
rolw
add
push
loop
fs
not
loop
loop
ret
cmp
fcomps
test
aad
lock
cmp
in
pop
cmp
push
hlt
push
test
nop
inc
pop
insb
jno
hlt
inc
cmpsl
fadd
rcll
mov
sbb
mov
lods
icebp
loope
adc
xchg
aam
mov
and
cmp
inc
mov
fldt
es
mov
push
ds
movsl
ja
filds
sbbb
add
scas
sarl
jg
shrl
addb
out
jbe
out
out
xchg
mov
or
lret
jb
xchg
lahf
insb
pop
cmp
ret
xchg
in
add
sti
xor
pop
sbb
stos
pusha
or
sbb
sbb
outsl
nop
cwtl
mov
mov
lcall
das
aaa
lret
dec
jle
cs
mov
cmp
adc
aas
fcomi
mov
mov
sub
and
xchg
les
push
ret
movsl
lret
notb
push
out
scas
dec
add
push
negb
add
fistps
frstor
pop
fs
and
jl
cmpsl
scas
repnz
ljmp
fidivl
mov
sti
lock
inc
or
mov
or
push
jp
jmp
in
xchg
icebp
test
push
shl
movsb
fwait
idiv
add
mov
fsubs
adc
ret
xor
fidivl
push
iret
and
psrlq
sahf
pop
mov
xor
fst
lods
mov
and
dec
outsb
mov
pop
in
dec
in
pop
fmul
inc
test
add
pop
addr16
pop
pusha
call
xor
inc
mov
jo
fstps
scas
sarl
lods
jg
push
in
ficompl
jge
clc
jecxz
fiadds
sti
inc
idiv
test
jmp
lods
enter
or
ficoml
sub
into
mov
icebp
jb
popf
mov
addb
test
or
lahf
gs
adc
ret
adc
adc
pop
stos
imul
je
push
outsl
xchg
movsl
mov
jb
stc
cmp
adc
out
jecxz
ret
aaa
in
jecxz
cli
sbb
stc
ljmp
mov
cmpb
push
sbb
rcll
movb
sub
cmp
cmp
dec
or
lds
mov
cmpsl
mov
add
cli
xchg
xchg
xor
pop
dec
scas
mov
int
cmp
mov
mov
mov
imul
sbb
inc
dec
ret
lea
loope
mov
xchg
sub
mov
xchg
aad
icebp
jg
sub
fisubl
addr16
pinsrw
pushf
sbb
cmp
and
jo
aam
sbb
cwtl
adc
push
lcall
fisttpl
mov
cmpl
es
and
lea
repnz
outsb
jmp
adc
fbld
lcall
cmp
pop
scas
shll
fsubrs
sub
or
adc
insb
xchg
xor
stc
sub
adc
lods
in
ja
aam
sbb
in
flds
shlb
mov
adc
mov
addl
in
adc
loop
popa
push
call
scas
xor
xorb
jbe
dec
sbbl
lahf
jp
in
mov
inc
ds
mov
mov
or
adc
movsb
xchg
pop
push
imul
repz
stos
in
push
testl
mov
call
lds
loope
pop
sbb
xor
jns
inc
push
push
xchg
fcmovnbe
mov
mov
insb
push
inc
mov
xlat
xchg
movsb
adc
imul
and
sub
adc
sbb
pop
xor
cmc
lcall
rorb
mov
mov
call
jno
jl
sti
push
mov
push
fisttps
jns
repnz
in
cltd
mov
out
xchg
xchg
ja
xchg
testb
scas
addr16
push
cmp
jecxz
mov
and
or
hlt
cmp
insb
jecxz
insl
inc
add
sub
sub
imul
mov
loop
and
test
mov
adc
cli
sub
xor
leave
push
in
mov
pop
mov
pop
pop
jae
sub
mov
pop
sbb
cmp
inc
mov
inc
enter
pop
std
push
pop
int
sbb
in
adc
aad
jnp
out
add
dec
or
cmpsl
fcompl
xchg
inc
mov
jg
sti
lret
xchg
cmp
mov
push
dec
loopne
mov
fimuls
mov
imul
push
mov
adc
aad
out
jo
fidivrl
inc
jne
jo
cs
jne
js
inc
cs
out
xchg
push
push
jnp
inc
or
push
cmp
ss
inc
mov
pop
test
sub
xchg
and
add
add
jg
stos
mov
add
adc
add
pop
add
icebp
cld
fwait
inc
dec
les
imul
push
or
mov
adc
pop
ljmp
in
mov
call
daa
aam
imul
out
jp
jg
adc
inc
xor
lds
add
repnz
cmc
or
orl
testb
andl
jbe
mov
xor
or
inc
repz
in
sbb
mov
imul
sarb
ss
in
push
bound
aad
enter
pop
sarb
in
mov
add
jns
ret
inc
in
jle
in
mov
xchg
inc
popf
es
iret
sub
mov
sbbl
mov
int3
and
sub
sub
pop
push
jle
sbb
mov
xchg
jg
xor
nop
call
cmp
push
push
jo
pop
jne
loopne
rolb
dec
stos
and
out
ja
xchg
push
push
scas
xlat
aaa
neg
push
mov
or
inc
pushf
mov
hlt
test
push
jnp
imul
sub
stc
sub
fs
sub
aad
inc
adcb
popf
mov
mov
and
icebp
xchg
test
pop
push
jbe
daa
and
push
jmp
pop
iret
push
sbb
cmp
xor
or
loope
jmp
sub
jg
mov
mov
xor
mov
push
in
call
and
push
push
inc
insb
xchg
adc
xlat
cld
adc
pusha
jge
mov
in
clc
scas
sbb
mov
and
imul
jge
push
cld
push
xchg
push
fwait
ljmp
fsubs
or
pop
xchg
sbb
sub
sub
inc
or
adc
mov
xor
cmc
jg
xor
rcr
jge
mov
sbb
and
xor
pop
mov
data16
and
mov
and
fwait
cmp
addr16
jge
cmc
jl
mov
popf
ljmp
mov
fbstp
ja
jae
pop
pop
in
clc
lret
pop
cmp
cwtl
pushf
sbb
fsubrs
test
push
dec
inc
gs
dec
pop
loopne
sbb
fadd
xchg
mov
sub
and
lcall
cmp
js
mov
sbb
fistps
xchg
gs
rorl
xchg
adc
xor
ja
test
inc
or
pop
sub
into
lods
cmp
in
aas
rcr
jb
daa
xchg
or
test
cmp
jge
test
xor
xor
sti
push
ja
xchg
push
loope
sahf
add
push
push
cmp
addr16
out
outsl
dec
mov
gs
ror
mov
lret
xchg
push
xor
inc
test
lock
mov
xchg
xchg
daa
dec
or
add
mov
add
sarb
ja
stos
mov
add
shrb
int3
and
sub
mov
repnz
addr16
pop
ds
cli
jl
lcall
int3
sub
popa
rolb
pop
cmp
inc
cmp
xchg
adc
fucompp
xchg
and
or
imul
shll
push
dec
dec
out
mov
fmuls
inc
pop
xor
clc
cmp
lahf
xchg
fnsave
xor
sub
and
popa
out
mov
scas
shlb
test
cltd
sub
sub
cmpsb
data16
sbb
push
lcall
jno
adc
aad
xchg
push
in
sub
pop
inc
rolb
iret
mov
xchg
mov
aas
lcall
sub
adc
mov
sub
and
rolb
inc
in
les
add
dec
mov
sti
pop
pushf
lret
or
out
int3
xchg
in
pop
out
lock
jb
xor
push
les
fisttpll
xchg
loopne
ret
and
adc
push
out
stos
dec
mov
loope
inc
rcl
mov
test
pop
and
loope
xor
sbbb
jb
test
and
outsb
mov
lock
sub
push
leave
das
push
add
adc
das
jbe
sub
add
pop
dec
fldl
or
pop
sub
in
add
mov
cmpb
pop
pop
iret
scas
scas
and
xchg
dec
sub
or
mov
fisttpll
push
jns
lret
xchg
fmuls
xchg
mov
sbbl
mov
mov
dec
addr16
sub
jmp
scas
pop
cmp
lcall
jl
sub
daa
out
outsb
mov
xlat
dec
push
jle
mov
mov
adc
xchg
jbe
cmc
or
adc
insl
add
in
pop
jmp
mov
popf
rcll
ja
add
cwtl
adc
push
out
outsb
lea
mov
out
mov
mov
mov
test
jae
jns
cmpsb
into
jne
arpl
jno
call
push
pop
gs
ds
fidivrl
icebp
mov
cmpsb
or
lock
jecxz
pop
mov
insl
cmc
rcl
lret
jl
mov
leave
mov
sbb
out
pop
cmpsl
push
aaa
pop
enter
fs
mov
jne
call
mov
gs
adc
push
in
jns
orl
fnstcw
cmpl
push
shlb
sbb
or
mov
lods
gs
mov
pop
pop
pop
adc
jns
pop
shlb
je
add
shll
sahf
and
hlt
push
shrd
mov
pop
dec
xor
adcb
outsb
sub
or
fisubs
push
mov
fisttpl
mov
lods
xchg
jge
lds
and
pushf
mov
stc
in
rclb
aad
in
xorb
out
fucompp
pop
push
lret
inc
sub
sti
fwait
imul
dec
sti
fs
fcomps
dec
jns
inc
je
lret
stos
and
insb
sub
lret
inc
ret
mov
in
shll
push
jnp
or
int
xchg
and
cmpsb
into
xchg
add
sbb
out
cmp
repnz
mov
mov
sbb
add
pop
add
stos
mov
jmp
fs
fcmovnb
and
push
in
pop
out
mov
lahf
loopne
dec
add
fldl
pop
sti
mov
outsb
inc
push
jno
pop
and
rcll
adc
repz
mov
push
and
or
fwait
mov
filds
mov
sbb
push
adc
adc
inc
pushf
out
cmp
call
xlat
adc
mov
fs
dec
outsl
sbb
jb
and
mov
std
pop
pop
movsl
stos
sbb
leave
jnp
cmp
push
aad
sahf
push
inc
push
stc
mov
sub
and
nop
xor
mov
jecxz
adc
dec
jno
fsubp
cli
mov
aam
pop
fisttpll
js
add
pop
outsl
out
sbb
sub
pop
out
int3
xchg
lahf
fdivrl
test
ret
scas
ljmp
or
in
ljmp
subl
xchg
scas
sbb
jb
pop
sbb
aad
jb
popl
add
push
push
in
enter
std
mov
fwait
int3
mov
mov
pop
cmp
mov
and
nop
cmp
pop
jne
pop
mov
lds
dec
bound
mov
and
popf
dec
pusha
dec
loopne
cli
jg
push
push
adc
sub
out
mov
shr
xchg
insb
pusha
inc
ficompl
jb
out
push
mov
jge
stc
rolb
shll
loope
fwait
lea
test
xor
or
mov
fstps
jns
add
push
es
shll
jl
fistpll
sub
cmp
inc
das
enter
or
pushf
in
inc
add
jbe
ljmp
dec
push
or
jmp
setne
cmpsb
sub
or
std
int3
jge
stos
aaa
and
shl
mov
mov
stc
mov
and
je
jne
loopne
sbb
cli
insb
pop
xor
xchg
pop
sbb
mov
lds
in
dec
add
nop
pop
nop
sub
dec
pop
mov
or
popf
sbb
std
int
sarl
sbb
pop
aaa
fucom
or
inc
outsl
pop
ficompl
mov
xchg
imul
add
cwtl
push
fistpl
fistps
dec
and
call
insl
lahf
sahf
xor
lcall
adc
fdivl
xchg
in
int3
push
hlt
iret
dec
cmpb
jns
movsl
xor
stc
inc
jecxz
mov
xor
out
test
int
push
sub
adc
loope
movzwl
les
mov
cmp
call
imul
xor
faddl
aad
ud0
pusha
inc
pop
inc
es
mov
or
pop
xor
mov
inc
fildl
in
jge
push
loop
fidivrs
testb
jo
and
mov
inc
jo
sbb
mov
ret
repnz
repz
call
movsb
mov
cmp
pop
mov
aas
fistpll
xor
jns
ret
adc
aam
movsl
push
push
fisttps
and
and
bound
lods
sbb
and
inc
mov
cmp
mov
add
sub
cmp
jno
cmc
push
pop
mov
mov
dec
dec
mov
xchg
push
push
dec
jmp
cld
fwait
pop
add
movsl
sub
push
jle
sub
fsubrl
inc
push
xchg
pop
and
adc
cld
fwait
insl
jg
pop
cld
lret
movsb
xchg
fcmovne
stc
push
loopne
clc
das
sbb
mov
mov
mov
and
test
aad
xchg
movsb
sbb
fisttpl
fistpl
out
mov
mov
add
dec
add
lds
push
call
jge
jecxz
mov
dec
mov
push
pop
and
lret
push
push
movsb
and
and
std
mov
mov
fldenv
cld
xor
add
push
mov
pushf
sub
push
add
inc
ds
scas
nop
jmp
mov
sbb
lret
adc
ret
rorl
jns
jae
incl
adcb
mov
jns
add
arpl
rcrl
test
iret
push
js
sbb
lea
fstpl
aad
std
xchg
fs
fdivs
mov
out
pushf
lret
rorl
mov
cld
imul
push
jg
xor
or
sbb
out
sub
add
or
cmp
sbb
inc
add
fidivs
push
pusha
mov
jge
cmp
xor
bound
adc
jno
and
ss
push
jae
sbb
outsl
xchg
adc
xchg
fidivrl
movsb
xchg
push
push
dec
add
mov
xchg
xchg
pop
lods
repnz
fisubl
jecxz
dec
jbe
dec
cmp
lock
jns
or
test
out
inc
mov
jno
xchg
xchg
and
aaa
lret
in
xor
jmp
imul
cmpsl
movsl
mov
icebp
mov
test
mov
cli
sub
mov
mov
shrb
xchg
adc
lds
cld
push
lock
push
das
cmpsb
sbb
outsl
xor
nop
or
test
cwtl
rcl
lret
shlb
insl
xchg
push
dec
adc
rorb
pop
or
fld
xor
fimuls
dec
out
sub
jge
mov
jmp
cmp
push
out
add
or
inc
xor
mov
or
outsl
jp
or
jno
inc
bound
pop
or
lods
jl
roll
fldcw
adc
lahf
test
pop
xor
push
imul
int
mov
xchg
addl
sbb
dec
adc
rol
mov
pop
push
roll
fs
mov
fstps
out
fst
cmp
pushl
je
or
mov
aam
push
out
adc
jp
xchg
push
mov
sti
mov
cmp
andb
pushf
insl
xchg
ja
out
test
push
loop
out
shlb
sbb
push
sub
fsubrl
fstpt
out
loope
mov
arpl
jbe
mov
repnz
jg
adc
xchg
pop
cmp
jo
loop
out
or
push
push
adc
data16
mov
add
aad
pusha
cld
jne
jp
mov
add
pop
add
inc
xchg
pop
mov
lahf
les
fsubs
inc
dec
dec
lods
and
adc
test
xchg
in
add
jle
pop
fcomip
or
std
sub
sbb
inc
xor
leave
sti
and
in
sub
les
hlt
inc
lret
sub
mov
lods
inc
shll
setge
sbb
xchg
mov
rcrl
addr16
jnp
jge
outsb
mov
xlat
jmp
sbb
ret
jp
jmp
pop
les
gs
arpl
add
push
lods
push
adc
xchg
mov
mov
push
rcr
movb
jge
gs
ret
loop
lret
mov
mov
nop
or
stos
add
mov
adcl
bound
sarb
add
aad
lock
flds
into
dec
fsubs
fidivrl
pop
fucomp
mov
call
leave
pop
loop
pushf
bound
imul
mov
mov
sarl
sub
pop
cmp
mov
andl
dec
push
xchg
or
push
cmp
jmp
sti
push
ret
jnp
mov
or
pushf
out
push
jle
mov
push
mov
lret
pop
adc
mov
ja
and
or
fwait
xchg
jo
sbb
pop
leave
bound
pop
loop
dec
and
inc
sbb
jp
movsl
mov
mov
fwait
inc
push
jns
pop
aam
xchg
cmc
rol
das
outsb
stos
pop
add
mov
mov
sub
cmpsl
stos
ljmp
cmc
xchg
pop
jp
rclb
push
mov
pop
not
cmp
lret
bound
cmp
je
cld
pop
push
push
jp
das
shl
xchg
sub
adc
or
imul
inc
loopne
pop
stos
out
lds
sarb
cmp
push
rolb
popa
fildll
out
push
add
mulb
jne
xor
shl
xchg
out
add
jle
add
scas
shrb
xchg
jmp
pop
jecxz
lahf
mov
cli
addr16
dec
jb
push
out
loop
push
mov
pop
ret
cwtl
mov
loopne
pushf
les
dec
sbb
pop
adc
jp
mov
push
mov
out
insl
inc
and
notl
inc
push
insl
in
cmp
sbb
shrb
xchg
mov
lock
mov
pop
cmp
add
mov
sbb
push
iret
loop
pop
inc
das
bound
arpl
push
mov
dec
mov
adc
aas
pop
push
adc
outsl
insb
mov
adc
orb
xchg
add
pop
mov
push
add
in
xor
pop
jmp
jmp
arpl
xchg
cmpsl
lock
jne
iret
add
aaa
lea
sbb
adc
mov
sub
jmp
jb
not
cmp
or
adc
outsb
mov
mov
dec
sbbb
nop
dec
test
cwtl
inc
shlb
popf
pop
outsl
movsb
sub
cltd
cld
hlt
loope
aaa
and
fistpl
mov
xchg
imull
jecxz
adc
sub
mov
mov
mov
xlat
pop
sub
out
xchg
inc
sub
loop
pop
jns
mov
xchg
popa
dec
fdecstp
add
ja
aaa
in
xchg
fwait
test
cltd
mov
mov
push
ja
dec
dec
xchg
mov
or
lods
push
jae
outsb
pop
adc
sbb
mov
cs
cld
in
jnp
js
mov
dec
imul
jle
mov
or
fstpl
je
sub
push
sbb
je
mov
mov
xor
daa
cwtl
pop
sbb
pop
pop
or
pop
lods
mov
jg
pop
adc
xchg
pop
mov
or
inc
jb
xchg
es
repz
lea
inc
pop
cmp
loop
sti
mov
nop
mov
test
push
and
xchg
adc
inc
and
and
stos
cwtl
loopne
aaa
test
cmpsl
ds
add
outsl
in
das
movsl
lcall
pop
mov
popa
fidivs
js
dec
sti
ljmp
sub
mov
mov
icebp
call
sbb
lcall
lahf
inc
data16
mov
ret
imul
sub
jl
sbb
cmp
pop
push
push
push
and
push
lret
and
repnz
and
mov
adc
sub
or
dec
lds
sahf
fdiv
mov
stc
outsb
xor
jle
dec
loope
xor
loope
pop
sbb
jmp
rol
stos
call
pusha
mov
outsl
jns
add
add
sub
xor
inc
stc
out
ljmp
cmp
sar
mov
mov
cmpsb
lcall
pop
inc
incl
mov
sub
cmc
iret
popf
pop
mov
cli
out
test
scas
sbbb
ljmp
xor
mov
sahf
nop
popa
addr16
cmp
sub
jmp
xchg
pop
or
cwtl
dec
cmp
mov
pop
jo
or
pop
divb
xor
mov
mov
cmc
leave
lods
xchg
pop
push
sbb
or
xor
mov
dec
fadd
cltd
pop
clc
sub
sub
popa
gs
inc
or
adc
incb
in
xlat
pop
add
jmp
xor
jnp
jmp
mov
pop
adc
lock
cmp
and
mov
xor
rorb
inc
outsl
jnp
mov
jp
sub
push
outsl
jne
sub
popa
sub
mov
lret
pushf
insl
hlt
cltd
fisttpll
and
jge
lds
sbb
imul
or
daa
sub
inc
push
inc
negl
dec
imul
call
fnsave
add
jnp
jne
cmpsb
into
es
and
jbe
sbb
jae
movl
nop
mov
push
pop
xor
mov
or
pop
sbb
add
scas
das
push
add
push
daa
push
test
roll
push
or
fidivrs
jo
movsb
mov
hlt
jae
loopne
imul
psubsw
add
dec
xlat
push
cld
in
andl
sahf
loopne
popf
inc
xchg
sub
adcb
xchg
mov
mov
fnstcw
sahf
stc
mov
add
adc
inc
sub
and
sbb
adc
outsl
adc
fdivs
test
lods
sub
jecxz
cmpsl
cmp
sub
add
mov
jg
fists
mov
add
and
add
and
cmpsb
mov
shr
repnz
es
jg
imul
pop
inc
cmp
je
mov
xor
jb
idivb
and
aad
les
push
cmp
sbb
inc
test
scas
lock
out
ss
jno
aaa
stc
loop
mov
into
test
or
sub
lds
mov
hlt
inc
push
push
lods
arpl
pop
ds
in
fists
iret
aad
cmp
test
aas
mov
inc
cmc
sub
pop
out
in
xchg
cwtl
xchg
push
cmpsl
and
gs
incb
pop
sub
and
sbb
fisubl
mov
in
adc
jns
push
jnp
xor
cmc
stos
mov
mov
push
outsb
or
cli
pop
leave
or
xor
cmp
test
or
popa
je
sarl
sahf
imulb
or
in
and
rorb
testl
add
fst
pop
iret
pop
xor
push
ja
out
add
cld
in
or
outsl
pop
jg
pop
enter
mov
jl
out
jne
jae
in
repz
cmp
jno
in
pushl
sub
dec
rclb
sarb
mov
xor
mov
fwait
mov
pop
add
mov
push
imul
xor
movsb
mov
push
ljmp
pop
notb
movsb
and
mov
dec
dec
adc
pusha
cmc
lods
insl
in
xchg
insl
jns
ficomps
mov
lods
nop
add
inc
jns
les
ljmp
cmp
adc
mov
adc
aad
rcrb
cmpsb
dec
jl
jbe
inc
mov
and
sbbb
std
pop
xor
pop
iret
cmp
mov
leave
push
jp
push
and
sub
sbb
rcl
pop
fwait
shlb
mov
dec
ret
inc
push
lods
loop
xor
jo
or
pusha
jns
dec
popa
popa
aas
push
dec
nop
pop
cmc
test
and
rol
cltd
iret
bound
mov
lock
sbb
inc
push
fwait
xor
adc
push
shr
xor
pusha
sub
sbb
sbb
lods
lret
pop
pop
cmpsl
jbe
shlb
sahf
mov
add
mov
mov
dec
int
cmp
xchg
pop
inc
add
lds
mov
mov
fnstsw
sti
aad
outsb
loop
sbb
fs
dec
mov
jecxz
inc
scas
push
jnp
sub
push
xor
push
cmpsl
or
fwait
xor
push
fs
pop
lahf
sbb
push
add
jnp
fcoml
lea
or
xchg
xchg
xor
dec
or
or
popf
filds
mov
test
dec
ds
fbld
sub
xor
push
xor
mov
pop
je
je
push
ds
fnsave
sub
xor
add
stc
push
sbb
fs
imul
stc
cmpsb
cmp
sub
ja
out
dec
push
mov
jmp
push
mov
sbb
or
aas
xor
or
mov
pop
mov
push
push
push
add
sbb
int
or
int3
push
test
dec
aam
inc
fsub
nop
fmuls
jbe
test
inc
pop
push
ljmp
add
divb
push
mov
or
mov
dec
pop
jmp
dec
dec
cltd
or
dec
loop
push
mov
int
popl
mov
into
adc
xchg
divb
sub
cld
mov
dec
enter
scas
test
je
inc
or
in
sahf
xor
or
ret
fdivrp
repnz
pop
inc
aam
std
mov
mov
dec
push
jbe
mov
call
add
stos
test
addr16
aam
dec
out
dec
and
cmp
jle
out
das
mov
mov
adc
cwtl
and
and
sub
push
negl
xchg
sub
hlt
sub
or
es
incl
rcll
repz
inc
pop
pop
popa
dec
ja
pop
out
sbb
call
jecxz
jbe
out
inc
orl
repnz
mov
pushf
sbb
add
add
stc
ljmp
xor
or
and
mov
push
nop
test
cmp
mov
pop
sub
fidivrs
sbb
push
scas
sbb
adc
jne
push
gs
adc
sub
dec
les
pop
or
adc
cltd
xchg
and
push
je
fadd
pop
aam
repnz
and
shll
cmpsb
fucompp
mov
jb
test
sbb
movsl
in
stos
fdivrs
xor
pushf
mov
outsb
enter
push
lock
or
test
adc
bnd
lahf
mov
test
push
mov
les
adc
xchg
pop
daa
dec
push
mov
cmp
xor
xor
sahf
xchg
jmp
and
ss
cmp
cmpl
xchg
mov
cs
adc
shr
sbb
fcomip
cli
test
sub
sbb
lods
push
xlat
xchg
movsb
sti
push
xchg
sub
repz
mov
push
inc
xor
xchg
sub
sub
in
xchg
inc
loopne
lods
aam
mov
cwtl
xchg
or
outsb
mov
cmpsb
add
dec
rorl
addr16
lahf
fimull
in
cld
pop
fucomi
divl
jb
adc
and
aas
mov
add
mov
loop
and
sbb
movsb
dec
pushf
mov
ss
loope
xchg
xchg
rcrl
jns
push
sbb
cmp
nop
cmc
scas
fcomip
lcall
mov
push
push
and
sbb
movsb
mov
imul
cmpsl
std
adc
xchg
sub
pop
push
push
je
ds
bound
xor
and
nop
mov
xlat
jmp
das
push
push
mov
in
mov
adc
loopne
xchg
sbb
imul
mov
in
dec
xchg
enter
xchg
jl
inc
dec
mov
push
mov
in
mov
xchg
and
and
push
dec
jmp
fwait
mov
add
inc
jo
test
out
popa
xlat
in
and
int3
in
mov
inc
and
andb
gs
xchg
ret
adc
cmp
push
push
pop
xchg
add
sti
aad
xor
insb
les
in
adc
out
mov
mov
mov
add
cwtl
and
add
adc
mov
push
adc
and
cmp
add
adc
add
add
in
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
sbb
sub
xor
cmp
ss
ss
ss
ss
aaa
imul
aaa
xorb
aaa
lcall
aaa
ret
aaa
shll
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loope
out
hlt
cmp
or
add
add
dec
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
xor
inc
cmp
pop
cmp
add
or
add
push
xor
xor
jae
jns
test
mov
xor
xor
xor
xor
xor
xor
xor
addr16
xor
cmp
arpl
xchg
xchg
xor
mov
xor
pop
aaa
jb
jnp
test
mov
xchg
aaa
sahf
aaa
lods
aaa
mov
shll
aaa
into
aaa
call
cmp
cmp
cmp
cmp
cmp
pop
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
idivl
cmp
adc
and
daa
cmp
cmp
cmp
cmp
xchg
cmp
cmp
sub
cmp
jae
jle
xchg
movsl
cmp
lret
cmp
fidivrs
cmp
dec
ds
ds
ds
add
xor
xor
dec
xor
pop
xor
ja
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xlat
xor
jno
jle
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
dec
cmp
lahf
movsl
loope,pt
jmp
clc
aas
add
add
add
add
or
adc
sbb
xor
inc
xor
pusha
xor
insb
xor
mov
lahf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pusha
xor
xor
xor
xor
repnz
xor
xor
xor
xor
jl
dec
cmp
nop
ds
fstpt
add
add
add
add
xor
pushf
xor
xor
xor
xor
xchg
xor
scas
xor
int3
xor
sbb
daa
aaa
sub
xor
jbe
xchg
cwtl
cmp
cmp
in
cmp
cmp
cmp
push
cmp
push
cmp
cmp
sbb
add
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
je
js
xorb
xor
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
xor
inc
xor
pop
xor
xchg
xor
scas
xor
into
xor
in
xor
or
adc
sbb
sub
xor
ds
ss
ss
ss
jo
jnp
xchg
mov
xchg
ss
ss
fdivs
fbstp
in
in
divl
add
or
push
aaa
and
aaa
aas
aaa
inc
aaa
push
aaa
pop
aaa
data16
imul
aaa
xorl
aaa
mov
mov
aaa
aam
out
in
aaa
stc
aaa
or
push
cmp
sbb
and
sub
xor
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsl
cmp
cmpl
mov
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
bound
jle
test
xchg
cmp
cmp
sarb
fnstsw
out
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
cmp
jle
test
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
jno
ja
jg
test
add
add
cmp
xchg
xor
xor
xor
xor
xor
xor
xor
xor
jne
nop
xor
xor
xor
movsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
ss
push
xor
jl
xchg
xor
xor
cmp
inc
aaa
push
aaa
pop
aaa
push
aaa
xorl
cltd
aaa
lahf
aaa
xor
test
lods
cmp
xor
aas
ds
ds
ds
jnp,pt
sahf
mov
rolb
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
add
add
add
test
lods
xor
xor
push
add
push
xor
and
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sub
pop
xor
je
lods
xor
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
addb
add
add
mov
cmp
cmp
cmp
mov
add
add
add
ss
ss
ss
add
add
or
