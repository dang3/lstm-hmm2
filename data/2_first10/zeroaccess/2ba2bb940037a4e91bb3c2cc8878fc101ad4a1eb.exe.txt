push
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
or
jmp
int
sarl
push
sbb
test
js
js
push
js
enter
rcr
fld
pop
push
or
ret
cmp
lret
sbb
inc
bound
mov
or
mov
and
lods
fadds
pusha
out
outsl
adc
sahf
add
dec
lods
pop
sub
mov
lds
adc
xchg
icebp
dec
loopne
dec
call
mov
sub
sbb
xchg
sub
repz
out
cli
in
xchg
cmp
jbe
xlat
sub
add
sbb
xor
adc
fisttpll
cmp
arpl
rclb
fistpl
and
inc
push
aaa
adc
fstpt
dec
repnz
shr
fs
stos
cli
push
test
test
and
lcall
push
xchg
mov
add
mov
es
bound
outsb
aaa
std
adc
inc
movsl
imul
orl
and
fwait
push
mov
adc
sub
pop
add
jns
jns
or
je
lret
pop
add
pop
xchg
add
sub
sahf
dec
or
out
and
sbb
mov
or
push
dec
out
inc
push
pop
into
shr
popf
subb
sbbl
into
dec
lods
decb
jg
sbb
cld
mov
cmpsb
sti
and
adc
out
xchg
push
pop
push
sbb
loope
fistps
jne
jnp
or
test
fld
clc
push
or
add
iret
int
lods
pushf
cld
inc
jo
cmp
shlb
add
inc
mov
adc
imul
scas
fcoms
jns
dec
sub
push
and
mov
cmp
lahf
push
jge
clc
ds
mov
xchg
sub
mov
dec
mov
dec
jecxz
cmpsl
insb
pop
out
cmc
sbb
data16
stos
rol
xor
sar
xchg
push
cmpsl
dec
mov
aam
xchg
clc
dec
arpl
mov
dec
test
or
push
sahf
add
push
add
and
outsb
out
sub
orb
xchg
testl
sar
cld
xchg
cmc
repnz
sub
dec
fcoms
mov
repz
lock
dec
loopne
or
mov
adc
popa
push
nop
jne
outsb
std
leave
test
push
scas
xor
mov
cmc
cwtl
push
mov
jle
je
xor
cmc
jge
jl
sub
and
jle
or
lods
fistpl
loop
jo
mov
push
mov
dec
cmp
mov
xchg
mov
aas
xchg
jmp
addr16
test
rcrb
or
sbb
push
push
test
pop
pushf
int
test
fdivr
sub
add
repnz
xor
leave
adc
addl
pushf
and
mov
push
and
dec
fimull
decl
xor
mov
and
mov
pop
jb
and
xor
or
leave
sub
ljmp
xchg
jl
les
jnp
add
add
or
jle
sub
ret
pop
lcall
inc
pop
clc
cmp
mov
and
daa
notl
mov
pop
xor
repz
jl
xchg
stos
sti
repz
out
push
jns
dec
cmp
mov
data16
lret
adc
lods
gs
push
aam
jno
es
mov
mov
pop
mov
enter
aam
test
daa
mov
cli
fcompl
test
arpl
cli
pop
mov
and
adc
adc
pop
lea
and
jge
jge
xor
std
test
ja
jl
pop
stc
cwtl
sub
mov
inc
jle
lock
stc
hlt
fdiv
divl
mov
mov
sub
cld
adc
and
pusha
adcl
push
push
leave
repnz
cmp
icebp
fcomp
and
rorl
je
push
into
and
xor
sub
cmp
push
or
mov
sbb
outsl
dec
add
lock
jbe
push
jg
jne
sbb
dec
shrb
filds
adc
std
subl
testl
insb
adc
nop
push
add
es
in
mov
jmp
xlat
xorl
push
xor
cs
insl
jb
mov
in
ret
fsubr
stos
adc
push
into
xchg
hlt
pop
push
cmpsl
mov
lahf
push
jge
pop
andl
lock
pop
std
or
dec
mov
xor
cmpsl
add
ret
cltd
imulb
mov
cmc
int
inc
mov
mov
mov
sbb
movl
movl
mov
xor
mov
andl
push
sub
jmp
enter
rcl
xlat
xlat
dec
xor
pop
xor
fdivrl
jl
js
jl
js
lret
inc
in
adc
jo
pushf
add
mov
cs
xor
mov
jno
jae
push
popa
lcall
test
pop
xchg
xchg
mov
lcall
sub
js
add
jnp
jp
lret
sbb
shl
inc
xchg
lods
mov
adc
repz
stc
hlt
es
test
popl
daa
or
jo
sbb
push
push
add
dec
add
and
sbb
es
mov
fdivrp
insb
adc
sti
inc
jl
out
fiadds
mov
mov
out
inc
loopne
call
mov
and
mov
std
int
mov
sarl
sarb
pushf
jo
push
sbb
jmp
or
sbb
inc
insb
fldt
push
stc
data16
rolb
and
call
inc
out
test
or
pop
sti
pop
shrb
jge
xlat
sub
bound
inc
pop
dec
xchg
mov
call
lea
inc
push
inc
jle
mov
pushf
addr16
mov
test
xchg
jae
push
lods
pop
add
mov
pop
push
push
hlt
xlat
nop
inc
loop
lods
mov
sbb
push
xlat
xchg
std
mov
loopne
xchg
movl
mov
aam
lock
xchg
imul
scas
xchg
dec
into
out
sbb
into
shrl
shr
out
jne
inc
repz
add
or
push
dec
or
mov
call
lods
hlt
iret
clc
fstpt
jne
push
jmp
pop
dec
in
mov
movsl
pushf
sbb
adc
imul
stc
jge
in
push
movsl
adc
icebp
aas
adc
stc
push
xor
pop
subb
js
inc
imul
sahf
sbb
xchg
clc
jnp
int
dec
sbb
jb
fistps
or
mov
divb
jnp
mov
add
adc
sbb
je
movsl
inc
and
fs
hlt
add
and
sub
out
ja
pop
js
pop
jb
pop
add
lea
jecxz
xchg
sbb
pop
jge
roll
gs
add
push
sahf
fs
and
mov
jne
fcmove
rcrb
in
movsb
cmp
mov
push
push
lods
cmp
dec
out
dec
scas
cli
fidivs
mov
aad
inc
test
inc
inc
mov
adc
mov
mov
or
dec
inc
cmc
cmp
add
fimuls
sahf
rclb
jp
fidivl
xor
inc
imul
mov
xor
pusha
xor
repz
mov
out
movntps
sub
sub
test
mov
and
and
outsl
fadd
mov
sub
inc
sbb
jno
popf
push
dec
sbb
xlat
repnz
xchg
shlb
repnz
xor
lods
xor
xlat
push
fwait
inc
stos
mov
in
pop
int3
mov
pop
lods
cmp
jo
inc
add
jbe
nop
aas
ss
or
xchg
aaa
sbb
in
jmp
xchg
jg
dec
mov
or
lea
jg
and
aas
xor
outsl
decl
scas
arpl
pop
mov
inc
dec
int3
and
jns
push
xor
outsl
xchg
mov
xchg
cmpsb
or
push
push
iret
ret
fbstp
push
sbb
adc
xchg
cwtl
imull
inc
adc
mov
pop
mov
cmc
xor
mov
xchg
pop
dec
xchg
jno
mov
push
mov
pop
jge
jmp
push
lods
adc
jns
xlat
cmp
fbld
jno
sarl
push
sbb
outsb
cltd
es
jns
scas
mov
addr16
stc
push
fcompl
xor
lcall
es
les
nop
mov
ret
push
sub
daa
out
push
add
movsb
pop
pop
mov
dec
loopne
test
xlat
pop
call
inc
push
dec
or
cmpsl
pop
pop
cmpsl
jle
das
shlb
bound
or
mov
mov
sbb
call
in
push
int
xchg
into
daa
je
pop
repnz
or
jle
inc
sbb
push
test
int3
lds
xchg
in
dec
push
ds
in
add
loopne
repnz
mov
sub
jnp
arpl
push
lcall
gs
in
cmp
sbb
sbb
and
mov
sbb
clc
mov
cmc
pop
ja
inc
mov
jge
push
sbb
mov
xor
push
add
mov
mov
mov
sub
and
add
movl
jmp
enter
shrl
mov
sub
push
pop
js
push
js
enter
jle
leave
fsts
mov
pop
cmp
adc
add
fsts
xchg
bound
or
sub
cmp
js
jle
sub
push
cmpsb
dec
fildl
fistpll
sub
sub
ret
push
and
xchg
and
xor
test
clc
out
shrb
pop
aaa
jmp
sbb
cs
into
shlb
xor
outsl
and
daa
lret
ret
mov
and
cwtl
popa
add
hlt
inc
jns
xor
mov
jnp
cs
mov
movb
mov
push
push
mov
pop
mov
jbe
mov
jecxz
jne
pop
cs
ljmp
shl
xor
lret
xorb
sub
aas
dec
add
mov
loope
lock
dec
aad
nop
addr16
cmp
out
xor
out
loopne
fucomi
sbb
add
xlat
inc
cmp
inc
loopne
sbb
mov
push
or
inc
pusha
loop
cmpsb
or
subl
and
mov
sysret
jo
dec
imul
arpl
push
add
inc
imul
das
not
fbstp
imul
popa
stc
out
push
pop
sbb
xchg
pushf
mov
cmp
xorl
or
sub
sbb
or
sahf
fucompp
out
cmpsb
jns
mov
push
scas
cmp
adc
fistpll
sbb
xor
sbb
and
ss
js
jns
cs
lock
cs
or
xchg
mov
mov
fcomip
pop
pop
inc
push
cld
mov
jle
mov
xor
fst
xor
adc
push
mov
dec
inc
arpl
push
mov
dec
mov
leave
lahf
pop
cld
xor
movsb
xor
add
das
dec
lret
and
scas
lods
xchg
lods
xchg
lock
inc
fstps
push
nop
fdecstp
dec
addr16
add
shlb
push
jae
out
in
sub
mov
lea
jl
mov
fnstenv
ret
push
mov
mov
add
pop
cli
jp
mov
sbb
cmp
pop
inc
loop
adc
or
sahf
and
push
and
mov
mov
in
push
in
ljmp
jo
lods
mov
mov
out
notb
lret
sahf
inc
inc
adc
in
mov
mov
sub
cmc
push
dec
inc
pushf
xchg
cwtl
or
cmc
das
scas
jmp
inc
add
aas
cld
loop
adc
popa
test
jl
lock
dec
push
push
nop
ss
sbb
and
cmp
out
int3
or
lods
aad
cmp
jecxz
xor
icebp
xorl
fwait
aaa
cmp
jns
jle
xor
lock
push
repz
mov
loopne
ficoms
mov
ficoml
xor
test
or
loope
test
mov
pop
lahf
mov
fistps
popa
call
icebp
stos
adc
push
jb
xchg
std
test
pop
mov
fmul
cmpl
xor
push
mov
sbb
mov
sbb
cs
loop
test
idiv
mov
icebp
imul
sbb
mov
xchg
popa
aaa
mov
pop
leave
bound
or
mov
jl
jnp
jmp
mov
test
dec
dec
lods
repz
sbb
in
roll
daa
xorb
jecxz
call
cmp
lcall
ret
fildl
iret
rorb
xchg
stos
or
pop
inc
mov
add
xchg
lock
inc
enter
pop
pushl
mov
loop
stos
lahf
les
xchg
aas
aas
daa
stc
push
test
das
sbb
loopne
cwtl
push
js
and
jns
fs
pop
cmc
mov
out
ja
lds
iret
pop
pop
shl
xchg
leave
adc
dec
dec
dec
ljmp
popa
xor
mov
rclb
das
aam
fwait
mov
fisttpl
jmp
icebp
cmpsl
pusha
jae
mov
mov
jo
push
ds
sub
jmp
cwtl
pop
loopne
in
std
pop
roll
fisubl
pop
repnz
xchg
xchg
push
mov
sti
dec
test
outsl
adc
mov
aas
and
jnp
stos
mov
iret
pop
push
out
mov
sbb
jae
inc
and
adc
mov
notl
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
sbb
movl
jmp
int
cmp
rcr
mov
mov
inc
or
push
js
xor
das
dec
lock
inc
or
je
xchg
add
mov
iret
mov
cltd
fs
dec
push
add
mov
xlat
pusha
inc
stc
push
xchg
dec
inc
rcrb
and
push
sbb
in
rolb
in
out
lods
xchg
bound
push
inc
or
or
mov
sub
nop
sub
pop
push
leave
lret
enter
jno
dec
stos
or
adc
in
jge
mov
pop
iret
sub
push
data16
dec
pop
xor
popf
mov
xchg
inc
andb
inc
into
sbb
sub
nop
icebp
pop
popa
or
lods
cmp
add
or
mov
sarl
adcl
pop
outsl
daa
pop
repz
xor
mov
aam
xor
sti
pop
lds
repz
or
es
xor
mov
jp
dec
add
mov
xchg
loop
in
and
dec
cld
adc
mov
xor
or
sbb
xor
sub
jns
fst
lods
stos
gs
mov
pop
push
mov
jae
ljmp
popa
sti
sbb
push
incb
push
pop
aas
fwait
xor
xlat
jo
xchg
mov
push
push
jmp
cmp
push
rcl
addr16
out
pop
cmp
sbb
sahf
icebp
dec
cmp
cmpsb
push
xchg
inc
pcmpeqw
mov
push
dec
inc
fwait
push
cli
dec
mov
mov
addr16
cmp
mov
mov
mov
mov
sti
mov
outsb
push
and
das
fiaddl
ja
mov
jne
mov
pop
dec
sbb
xchg
dec
shl
mov
lds
push
ja
adc
lahf
sbb
push
jae
mov
push
cmp
push
push
adc
sub
loope
inc
das
xchg
insl
push
cmpsl
pusha
jmp
lods
loope
push
mov
inc
jecxz
stos
or
sti
in
mov
mov
mov
test
add
lret
les
shl
jecxz
jp
lret
scas
notl
pop
mov
ret
push
jle
in
ss
xchg
pop
xchg
adc
pop
add
mov
lahf
xor
jo
stos
lcall
mov
leave
or
sub
enter
push
add
add
je
dec
call
movsb
push
mov
mov
mov
push
frstor
xchg
fisubs
fistpll
mov
pop
push
xchg
test
loop
pop
stos
add
fsts
xor
shlb
pusha
mov
xchg
mov
pop
xchg
pop
cltd
dec
dec
call
mov
loope
mov
shrl
push
imul
add
xchg
inc
icebp
lret
jmp
insl
dec
test
repz
pop
shll
sub
scas
or
stos
adc
iret
out
call
add
ja
add
sub
cld
xchg
push
push
clc
rorl
popf
lods
aas
sbb
scas
mov
ds
ja
std
mov
or
mov
or
aam
jb
cmpsl
shll
pop
scas
int
sub
fisubrs
cmp
pop
dec
cmpsb
dec
shrl
jecxz
mov
sbb
cmp
gs
imull
daa
nop
mov
inc
and
ss
xchg
out
xchg
shll
ss
int
and
or
cmp
push
or
sub
out
out
arpl
push
or
xchg
int3
cli
call
clc
push
sub
cmp
pop
setnp
mov
int3
fs
inc
adc
je
insl
adc
testl
push
repz
imul
push
bound
aaa
adcb
mov
mov
jge
mov
notb
jbe
jae
imul
push
adc
and
inc
dec
test
mov
das
int
push
dec
test
and
mov
insl
les
adc
int
pop
mov
and
xchg
mov
push
sbb
shrb
iret
lret
jmp
fsubs
repz
mov
es
sahf
cmpsb
adc
sub
mov
dec
xchg
push
adc
scas
xchg
add
sbb
xor
push
ret
pop
xchg
notl
lods
add
sub
or
lcall
add
fadds
lock
jmp
leave
mov
leave
jl
lods
aam
fwait
rcl
mov
js
push
js
push
sti
sbb
mov
pop
or
push
pop
in
push
mov
sbb
mov
push
repz
lea
cli
scas
xchg
das
pop
push
inc
add
mov
push
mov
test
ja
mov
mov
add
add
lods
das
mov
sbb
and
nop
cs
mov
loop
push
jo
sete
cmp
push
repz
les
adc
add
inc
subl
decb
and
popf
inc
out
fisubrs
push
push
sbb
xor
mov
inc
sbb
mov
inc
adc
dec
jnp
stc
jns
or
and
or
in
pop
ss
jge
xlat
stos
adc
dec
icebp
push
iret
and
jbe
out
mov
pop
pop
cmp
xchg
inc
fs
mov
lret
add
js
pop
lods
or
pop
jno
pop
mov
cmp
movsl
repz
dec
pop
push
loope
dec
outsb
xchg
ds
in
adc
ljmp
xorb
je
fnsave
mov
sbb
mov
and
in
nop
push
ljmp
pop
and
repz
addr16
push
shll
cmp
mulb
xor
dec
je
addr16
push
xchg
loope
mov
es
loope
xchg
sbb
cld
sbb
mov
fadd
sub
scas
repz
sahf
in
mov
in
xor
push
xchg
pop
in
mov
lods
push
aam
and
mov
inc
pop
mov
and
or
in
pop
add
pop
idivl
test
fucomp
inc
jmp
xchg
fwait
shlb
hlt
mov
push
push
scas
fsub
mov
adc
repnz
or
mov
repnz
sbbl
xchg
xor
adc
inc
mov
imul
jne
fdivs
scas
lods
jmp
int3
push
sub
adc
nop
push
cmp
dec
stos
test
aaa
cs
fnstcw
out
jp
stos
int
xorb
ds
test
es
int
inc
lods
xchg
imul
scas
or
shrb
xchg
loopne
orb
ds
div
dec
out
cld
in
int
xchg
out
cmp
out
repnz
push
in
ss
pop
dec
in
dec
xchg
add
in
add
pop
fdivs
mov
mov
jecxz
inc
or
ss
pop
or
test
jno
gs
and
idivl
je
xchg
aad
cwtl
pushf
dec
mov
insb
jo,pn
inc
rclb
leave
ficoms
or
clc
lock
jmp
fistps
jne
dec
push
popf
xor
jns
or
push
rorb
shlb
ljmp
ds
add
adc
inc
inc
loop
aaa
xchg
imul
je
popf
xchg
scas
imul
pop
std
fisttps
lea
inc
cmpsl
inc
mov
sbb
incb
pop
mov
and
jg
sub
vunpckhps
pop
test
mov
push
sub
and
xchg
insb
pop
fisubs
andb
xor
mov
mov
sbb
cmp
fwait
ss
int3
mov
pop
mov
adc
adc
int3
leave
adc
roll
mov
or
jnp
pop
xchg
dec
aas
in
mov
idivl
inc
push
popl
xchg
nop
lret
movsl
push
int
inc
jo
and
mov
xor
jae
mov
sbb
jecxz
and
sub
dec
les
sub
popa
fnstsw
movsl
sbb
push
jns
jno
or
in
lods
sub
mov
test
push
cmp
cs
in
cltd
jno
in
testb
lods
mov
adc
xchg
pop
es
sbb
cmpb
cmp
das
and
add
pop
xchg
push
lcall
int3
mov
add
add
les
call
addr16
movsb
stos
inc
adcb
lods
loop
or
lds
rclb
data16
cli
dec
pop
fnsave
xchg
xchg
inc
fcomps
jecxz
dec
decb
or
inc
push
xchg
in
dec
outsl
and
pop
sahf
loopne
aaa
mov
je
fiadds
sub
push
sbb
int3
test
mov
inc
mov
add
fistl
xor
orl
jmp
int3
sarb
fidivrl
icebp
out
mov
mov
push
js
jg
cmp
ljmp
repz
dec
movsl
fldenv
mov
hlt
scas
stc
bound
xchg
iret
out
push
lea
dec
push
outsb
pop
rorb
push
sbb
mov
cs
mov
pop
mov
loop
inc
mov
sbb
pushf
adc
loopne
repnz
or
inc
xchg
cmp
sti
jno
mov
mov
ljmp
mov
or
pop
fadd
jnp
dec
jo
xchg
jge
pusha
adc
push
hlt
test
inc
lahf
inc
mov
lods
aas
mov
inc
shlb
call
mov
xchg
test
das
jg
out
cmpb
sbb
xor
fs
lds
leave
xchg
std
sbb
aas
jns
lahf
js
sbb
or
bound
jmp
mov
push
sbb
daa
shrl
movsl
or
pop
hlt
cmp
js
inc
sahf
lahf
std
inc
cs
imulb
dec
lret
or
sbb
aas
stos
dec
jb
idivl
shl
dec
cltd
jmp
jecxz
inc
or
mov
add
cmp
mov
jmp
adc
jge
loope,pn
lret
push
mov
aas
decl
test
lock
cmp
andb
in
movsl
mov
xchg
outsl
mov
rol
daa
jae
nop
sbb
cmp
sahf
mov
inc
fwait
enter
sub
xchg
mov
or
les
or
call
dec
xchg
and
sub
add
pop
arpl
add
out
jo
inc
mov
mov
dec
icebp
std
adc
icebp
sti
jne
imul
in
jmp
icebp
insb
bound
repz
enter
sub
or
xchg
stc
xchg
imul
out
xor
xor
ror
mov
jmp
imul
sysret
nop
pop
xor
cmp
and
loope
mov
sbb
dec
test
outsb
sbb
inc
nop
daa
adc
cmpsl
inc
lods
enter
cmc
int
fstps
mulb
push
cmp
shl
mov
jle
sub
cmp
xchg
sbb
in
add
adc
mov
js
mov
enter
ret
mov
sub
movsl
and
push
mov
outsl
and
cmp
inc
mov
jp
out
push
sub
jmp
adc
aaa
jbe
stos
outsl
ljmp
mov
mov
ss
sbb
xchg
mov
sarb
sub
add
test
movsb
mov
cmp
fidivrs
sub
xchg
sub
std
push
mov
hlt
and
dec
jmp
add
jecxz
mov
jne
sub
mov
lds
movsb
xor
lret
mov
ljmp
and
call
mov
das
imul
dec
subb
or
mov
mov
mov
cmp
test
lock
ret
inc
ret
repnz
shlb
xchg
jne
jg
dec
insb
out
idiv
jmp
sub
mov
pop
jle
out
sub
lock
in
adc
gs
sbb
repnz
dec
or
hlt
push
leave
adc
push
rolb
bound
mov
fildll
stos
pop
and
xchg
push
das
mov
ret
sub
pop
test
repnz
pop
insl
adc
ja
repnz
add
pop
int
orl
outsl
decb
pop
pop
xchg
sub
fnstenv
imul
xchg
push
cwtl
mov
xor
pop
jo
shr
xlat
jno
mov
add
mov
lock
outsb
adc
fisttps
and
push
in
out
adc
add
idivb
negb
pop
jo
mov
dec
adc
xor
inc
adc
imul
jno
arpl
push
std
mov
mov
mov
jmp
fs
jno
fucomip
xor
xchg
dec
cmc
mov
lret
out
andb
inc
lret
pop
scas
xchg
out
xor
shl
aas
daa
aad
sbb
rcl
loope
jle
mulb
call
mov
jbe
adc
xor
enter
mov
cmp
sbb
and
mov
mov
imul
cwtl
mov
pop
xchg
xchg
cmp
lret
add
xor
add
mov
add
jmp
cmp
rcl
ror
int
sub
stos
cmp
lock
mov
js
push
js
mov
lret
mov
or
out
dec
in
xchg
dec
jo
jp
cld
daa
pop
pop
mov
jns
sub
scas
jnp
test
insb
mov
xor
in
pop
sbb
add
rcll
cmpsl
adc
and
addr16
in
add
dec
adc
lods
and
xlat
xlat
sbb
loope
pop
mov
sbb
ficompl
movl
mov
aaa
or
push
test
test
push
loop
or
push
mov
xchg
inc
pop
mov
mov
sbb
add
outsb
jno
sub
and
mov
pop
out
cmp
nop
insl
test
pop
call
mov
incl
lds
dec
in
repnz
mov
jp
cltd
in
movsl
xchg
aas
lret
and
xchg
adc
repz
mov
jne
xchg
dec
sahf
test
pop
ret
mov
cmp
notl
sbb
adc
ja
and
js
ret
andl
fisubrs
fisttpl
mov
cmp
lcall
xchg
dec
push
or
or
loopne
cmpsb
into
sub
inc
fwait
or
fimull
cli
lahf
pop
lret
sbb
sub
mov
jb
adc
mov
pop
sub
call
adc
mov
sahf
mov
daa
push
adc
xor
jbe
jbe
sub
push
push
out
pop
mov
mov
sub
xor
jmp
clc
out
fwait
mov
jb
test
lods
push
mov
mov
pop
inc
xchg
xor
add
push
outsb
out
stc
sbb
aam
mov
lock
iret
xor
out
sbb
cwtl
push
xchg
cmp
or
add
jecxz
imul
loopne
inc
cmp
or
pop
mov
ret
jne
fsubs
inc
xchg
or
into
ljmp
mov
cmp
pop
jne
je
sarl
or
pop
add
loopne
xor
lret
push
int3
imul
xchg
scas
mov
add
sbb
sub
push
and
test
inc
dec
dec
clc
xchg
and
mov
jne
mov
jle
inc
int
rcrl
int
jl
fs
shrb
aam
out
loop
inc
cmpsb
hlt
pop
xchg
sahf
or
addl
pop
pop
sahf
add
mov
lock
inc
aas
cwtl
sbb
sbb
in
testb
popa
movsb
cmc
cltd
jp
fwait
in
movsb
lods
sub
adc
xchg
add
call
mov
sub
bound
sub
push
pop
divb
push
push
push
pusha
fsubl
fsubp
aam
fcmovnb
outsl
jnp
cmpsb
ds
psubusb
fiadds
mov
xchg
leave
sbb
in
mov
movsl
pop
and
inc
xor
dec
jg
outsl
or
jmp
addb
mov
and
dec
sub
mov
push
inc
in
push
dec
or
cmp
in
and
cld
stos
les
das
data16
inc
mov
xchg
iret
mov
xchg
std
push
mov
dec
pop
pop
out
es
mov
stos
rcl
loopne
jae
stos
mov
int3
scas
call
mov
lahf
push
hlt
in
inc
arpl
adc
pushf
into
pop
loope
or
lret
loope
mov
or
mov
and
stos
xchg
lods
ret
outsb
in
and
imul
jecxz
rorl
pop
into
mov
cmp
pop
jmp
outsl
jno
scas
pop
loope
push
dec
and
ds
push
insl
xor
rolb
mov
jmp
sbb
fwait
jnp
repnz
ljmp
pop
sub
mov
ljmp
xchg
hlt
xchg
lods
loope
or
fst
popa
inc
iret
repz
imul
movsl
sub
cs
jmp
popa
push
push
int
mov
xchg
insl
aas
repz
lea
xchg
in
inc
jnp
scas
mov
sbb
push
pop
xchg
in
pop
mov
inc
mov
addl
cmpsb
jp
mov
dec
stos
repnz
scas
cs
sahf
loope
xor
xor
movl
notl
sbb
lock
push
add
pop
test
mov
cmp
out
leave
xchg
shll
ret
jae
xchg
insl
shlb
loope
fmuls
movsl
test
mov
movsl
bound
fwait
loope
add
adc
mov
and
adc
mov
and
mov
hlt
movl
mov
xor
mov
movb
and
jmp
ror
iret
rol
stos
adc
jb
es
push
js
push
js
ror
push
xchg
xor
jp
push
sbb
or
lea
loope
or
push
cld
lea
jne
add
outsl
mov
jno
xor
daa
das
cmp
daa
jo
sub
js
loopne
jno
pop
sub
mov
xchg
jge
das
loop
inc
into
iret
add
pop
or
pop
cwtl
int3
and
dec
jle
xor
or
cli
faddp
jmp
pop
xor
jecxz
jnp
jecxz
pop
es
cli
xor
mov
ficompl
lret
test
das
mov
jno
jb
mov
jns
xchg
fidivs
mov
clc
cld
dec
jbe
test
push
inc
xor
mov
in
xor
aad
xchg
xchg
sbb
jb
stos
pop
mov
mov
call
test
xor
mov
aaa
cmpb
test
das
ret
xchg
fucomip
inc
ret
enter
in
hlt
inc
popa
jg
aam
or
arpl
leave
push
dec
mov
xorb
cmp
lret
mov
out
stc
rcr
mov
cmpsb
pop
out
leave
sbb
mov
testb
jno
mov
xor
fldenv
lret
sbb
mov
fidivrs
fadd
xchg
mov
mov
data16
push
daa
andb
fistpl
ljmp
dec
sbb
jmp
push
and
lds
rolb
xlat
pop
inc
lret
mov
jno
adc
jns
inc
arpl
aad
repz
adc
inc
sub
push
or
pop
imul
sbb
cltd
jg
pusha
ja
int3
int
jo
stos
cmpsl
mov
out
insb
push
lods
das
cmp
sbb
sarb
dec
cli
inc
dec
push
inc
xor
xchg
push
dec
mov
imul
mov
aad
inc
mov
mov
lret
dec
mov
shlb
fisubrs
or
add
inc
push
sub
loop
stos
cmp
sbb
call
jno
add
scas
mov
mov
popf
push
jno
jge
push
fistps
lret
mov
dec
adc
roll
ss
jmp
mov
fidivs
mov
mov
and
cltd
xchg
insl
adc
out
cmp
mov
push
inc
or
dec
int
mov
push
jnp
es
xor
adc
push
divl
cmc
jp
fs
mov
xchg
push
add
notb
cltd
push
lar
fbld
enter
in
xor
popa
scas
jecxz
arpl
jg
mov
stos
add
xor
insb
jne
xorb
push
leave
out
mov
test
pop
je
cs
xor
sbb
xlat
stc
daa
cmp
gs
inc
and
pop
loope
mov
xor
mov
adc
test
fwait
jmp
adc
cwtl
pop
add
icebp
jg
push
mov
es
jno
mov
mov
pop
aaa
fidivrs
out
test
out
mov
sahf
test
or
cmp
push
cwtl
xor
subb
pop
push
jns
add
pop
jg
jo
dec
sbb
decb
mov
sarb
sbb
push
fs
fnstsw
mov
addr16
jmp
repz
aas
jecxz
cmovno
or
mov
enter
std
sbb
test
test
cmp
sbb
dec
idivb
adc
pop
rcl
add
or
pusha
std
filds
idivl
dec
fxch
adc
sbb
mov
lret
aam
jns
xchg
and
xorb
or
add
sbb
arpl
cltd
rcr
ljmp
pop
arpl
mov
adc
in
cmp
xor
fiadds
idivl
test
jp
push
mov
and
or
xor
cmc
dec
adc
ljmp
jne
mov
stos
rorb
push
push
dec
fs
pop
xchg
push
lock
out
pop
shlb
cs
jne
pop
movsl
int3
bound
fcmovnu
inc
cld
loopne
test
sbb
in
mov
fmul
cmpsl
dec
push
iret
lods
out
add
scas
cltd
shlb
lret
lahf
and
sbb
xchg
xor
mov
pop
dec
jle
out
pop
shrl
push
loope
faddl
jnp
es
and
fisubs
test
mov
push
push
mov
leave
rorl
imul
push
outsl
xchg
insl
sarl
stc
sar
jp
fbstp
inc
lock
mov
or
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
call
jmp
sub
add
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
push
call
jmp
add
jmp
iret
ror
aas
rol
iret
rcll
and
sub
call
jl
js
xchg
jle
aas
test
idivl
lret
pop
pop
sahf
cld
cmp
ret
dec
pop
cmpsb
push
dec
pop
ljmp
xchg
test
xor
clc
iret
push
pop
ror
xor
fwait
or
subl
mov
xor
xchg
je
xchg
mov
pop
sbb
xlat
jnp
scas
das
cmp
pop
xchg
nop
xorl
cmp
imul
adc
push
lds
int3
sbb
xchg
or
lahf
adc
xlat
movsl
mov
jmp
mov
data16
or
pusha
lods
inc
cmp
mov
jo
push
xchg
xorl
push
call
pop
sbbb
xchg
add
rcrb
adc
jmp
mov
and
cltd
mov
orb
dec
xor
add
mov
lods
shll
and
mov
push
jg
imul
movl
loopne
orl
and
stos
jp
dec
negb
mov
pop
push
sub
stos
mov
add
repnz
stc
mov
adc
adc
lods
push
jno
in
test
aad
mov
pop
cmpsb
ja
jnp
in
add
out
and
jge
aam
stos
testl
frndint
shl
out
jae
stc
ss
xor
pop
mov
push
sub
sti
xchg
andb
arpl
xchg
pop
cmc
in
movsb
adc
cltd
sarl
add
in
out
imull
adc
scas
jbe
push
out
lock
pushf
bound
and
popa
lods
imul
popa
inc
popa
cmc
cmp
out
outsb
mov
inc
or
inc
test
and
push
mov
ljmp
adc
pop
idivb
jp
fdivrs
push
inc
xor
adc
mov
xor
or
cmpsl
pop
lcall
pop
xor
jb
outsl
cmp
and
sbb
jmp
cld
inc
xor
xchg
lahf
cmp
notb
jae
inc
inc
mov
fiaddl
mov
pop
repnz
sub
dec
out
ficomps
imul
into
cmp
leave
rorl
repnz
adc
outsb
aam
mov
lret
scas
jmp
adc
and
mov
xchg
cmp
decb
lahf
inc
push
jo
enter
mov
out
xchg
je
jb
in
das
lcall
adc
mov
scas
fstps
cmp
fdivs
and
in
out
push
mov
mov
or
xchg
jge
cs
out
mov
fiadds
dec
lods
jb
and
scas
sbb
inc
sbb
scas
mov
shll
test
mov
dec
add
adc
stos
push
ret
xor
testb
jno
push
xchg
fucomp
iret
daa
xchg
stc
mov
dec
dec
test
xor
fwait
scas
mov
lcall
sti
dec
stos
and
xor
sub
idivb
jecxz
jmp
outsb
jne
jg
xchg
cmpsl
push
fs
jnp
add
xorb
xchg
push
es
rclb
and
scas
test
aad
mov
cmpsb
repnz
call
push
inc
mov
mov
xchg
in
sbb
push
outsb
fiaddl
cmp
cwtl
test
sbb
dec
xchg
out
or
nop
cld
jo
push
xchg
jmp
inc
xor
jmp
jmp
sub
mov
lds
fsubrl
filds
imul
rcrl
das
stos
jecxz
push
jl
xchg
or
scas
nop
repnz
fdivrl
movsb
das
lcall
push
pop
jmp
je
imul
xorl
imul
xor
in
mov
push
popl
or
xchg
cltd
dec
aaa
jbe
test
jg
inc
addr16
pop
js
mov
adc
sbb
and
das
sbb
pop
jne
pusha
xchg
lret
in
push
mov
jl
cltd
xor
orb
jns
bound
or
stos
add
jno
or
or
sbbl
mov
pusha
pop
lret
mov
push
mov
inc
sarb
nop
push
add
lock
xchg
stos
xchg
pop
push
arpl
pusha
out
mov
in
jns
in
mov
push
testb
stos
mov
adc
xor
mov
mov
sub
or
jmp
xlat
ror
aas
leave
rcr
rolb
xchg
and
js
jl
js
adc
fmulp
jmp
dec
test
pop
ljmp
xor
add
shlb
fildll
shrl
sub
hlt
lock
mov
inc
ficoml
jo
push
lods
addr16
test
shr
add
sahf
cs
xchg
push
es
and
pop
ret
out
jecxz
mov
out
sbb
fndisi(8087
cmp
jae
cmp
mov
fs
enter
jbe
sar
je
inc
xor
js
mov
fiadds
in
sbb
mov
cmp
xor
dec
call
out
mov
mov
lahf
js
enter
xor
js
dec
lods
dec
jns
and
iret
imul
sub
loopne
sub
loop
lods
ret
je
pop
loopne
packsswb
lods
sub
jns
ljmp
sti
push
push
jg
jg
dec
mov
inc
add
sbb
mov
fs
in
adc
xor
subps
mov
sub
sub
test
sub
jle
pusha
popf
xor
xchg
mov
pop
filds
sub
or
movsb
rcll
jl
sbb
dec
add
cmpb
adc
and
pop
mov
adc
mov
ja
jbe
xchg
int3
push
dec
jo
mov
and
push
fistps
xlat
fildll
andl
jmp
jae
mov
loope
out
pop
fwait
mov
dec
xor
movsl
mov
adc
cmc
fisubrs
cmpsl
add
dec
push
sub
push
pop
push
lods
push
incl
lret
cmp
lahf
bound
stos
popf
ljmp
sbb
mov
jo
ret
shll
jbe
xor
das
mov
xchg
dec
icebp
inc
popa
pop
insb
and
aam
push
lds
xchg
and
mov
and
sbb
jno
push
shlb
aam
icebp
in
icebp
movl
lods
mov
testb
sbb
mov
lret
push
lds
pop
inc
xor
push
jg
aad
lcall
mov
pushf
leave
mov
xor
xchg
cmp
fildl
movsb
and
adc
mov
dec
mov
sbb
adc
out
cmc
loope
cmp
pusha
icebp
mov
jo
push
jg
fiaddl
cmp
cmp
or
clc
scas
mov
cmp
lea
out
and
sbb
and
repnz
jbe
xchg
cmp
repz
lea
and
mov
mov
les
pushf
or
dec
dec
xor
les
mov
jno
xchg
dec
push
and
sbb
lods
loopne
sti
sar
sbb
ret
mov
mov
push
in
adc
mov
xor
aaa
fucom
mov
jl
arpl
jno
or
subb
das
mov
or
mov
movsl
fbstp
fnstsw
pop
push
xchg
adc
icebp
push
jl
dec
aas
dec
mov
jmp
stos
inc
inc
iret
call
bound
gs
lcall
shlb
aad
xchg
dec
ret
into
xor
xchg
adc
xchg
out
out
repz
dec
sahf
dec
cli
jle
lahf
ret
hlt
add
mov
out
add
cmpsl
mov
mov
insl
aad
out
mov
xor
cld
sub
push
lods
cmp
and
mov
jo
push
cmp
bound
jl
ljmp
mov
addr16
push
add
xor
mov
into
lahf
xor
imul
insl
mov
or
shl
aaa
or
sbb
push
mov
jnp
aas
call
cli
push
mov
and
and
adc
enter
enter
pop
jbe
cmp
push
les
inc
lds
dec
jle
add
push
pop
je
sarl
or
mov
in
mov
dec
faddl
popf
jle
push
or
cmp
mov
aad
lods
jle
push
inc
jle
out
adc
mov
ja
mov
aam
push
jl
jne
dec
hlt
pop
dec
outsb
inc
adc
insb
or
lock
xchg
std
dec
ds
pop
push
mov
fsubr
inc
or
and
sbb
aam
adc
aam
pop
xchg
clc
aad
bound
mov
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
jmp
cmp
aad
dec
add
jge
insb
les
js
push
js
aam
adc
inc
and
mov
insl
sub
fisttpl
push
sti
mov
fsubl
mov
inc
inc
arpl
inc
lretw
push
test
ljmp
ljmp
or
push
xchg
int
push
lahf
rcrb
flds
push
arpl
xchg
in
insl
fisttpll
cwtl
adc
cmpsb
test
mov
hlt
in
fildl
mov
mov
arpl
fisubrl
adc
out
orl
call
jbe
cmpsl
insb
bound
sbb
and
movsl
jmp
push
dec
int
roll
or
fildl
cld
jp
sub
outsl
fsubs
sub
fsts
jle
sbb
inc
mov
lcall
inc
clc
arpl
inc
jno
shll
and
adc
mov
xchg
xchg
push
adc
jns
cwtl
ljmp
dec
add
out
push
stos
rclb
cmpsb
adc
hlt
push
mov
ficoml
outsb
pop
pop
push
dec
mov
js
jmp
push
in
imul
movsl
test
pop
mov
adc
cs
xor
adc
shl
scas
sbb
mov
mov
dec
mov
cwtl
push
in
out
lcall
lock
xchg
xchg
mov
pop
push
mov
xchg
jle
xchg
mov
mov
pop
lea
leave
lods
cmp
shl
add
inc
and
pushf
test
mov
mov
mov
fimull
sar
xchg
in
mov
jge
mov
into
and
xor
add
stc
nop
mov
sarb
mov
dec
lret
shl
xchg
jb
orl
sub
xor
inc
mov
dec
lret
sti
add
aam
pop
cmc
ja
jnp
rolb
mov
movsb
bound
push
or
mov
mov
rcr
cs
gs
out
fdivr
add
imul
in
insl
mov
sbb
dec
clc
dec
push
test
mov
leave
and
sbb
sbb
mov
imul
add
leave
loop
fs
mov
lods
push
mov
inc
decb
ss
dec
pop
outsl
pop
jmp
xchg
ljmp
sbb
jecxz
and
loop
push
mov
sbb
inc
mov
push
js
xchg
mov
int
lcall
out
cmpsb
mov
and
dec
pop
out
shll
xor
jns
cmp
aaa
fxch
mov
or
sbb
aas
stc
loopne
ret
mov
test
out
mov
and
nop
sbb
xlat
cmp
test
imul
cli
fldenv
cltd
rcl
into
rolb
jbe
pop
cmp
xchg
xchg
jno
movsb
push
jo
inc
sbb
jno
mov
pop
add
mov
adc
loopne
in
test
enter
lods
sbb
push
push
lret
scas
and
or
and
pop
imul
shll
stc
adc
int3
pop
inc
xchg
xor
xrelease
xchg
xchg
les
mov
ficoml
jae
push
in
lea
insb
mov
hlt
mov
inc
inc
outsb
fistps
adc
out
xchg
jle
aad
or
push
or
jnp
and
imul
pop
fwait
not
mov
sbb
or
or
dec
xchg
or
push
push
cmp
cmp
sub
fld
idiv
int
mov
push
and
lret
pop
mov
mov
or
jge
jb
test
std
inc
xchg
ret
xor
mov
rcrb
fwait
xor
cmp
jp
mulb
ret
xor
jge
mov
mov
mov
cmp
daa
fisubrl
notl
scas
addb
cmp
bound
adc
fstl
test
adc
subl
dec
mov
push
pop
pusha
leave
cmp
test
jp
adc
add
cmp
cld
fisubrs
movsl
xchg
andl
out
add
aas
xchg
sbb
mov
ret
in
pop
mov
xor
adc
imul
out
dec
lret
xchg
iret
or
jmp
in
ret
jbe
pusha
into
vpshuflw
sub
fs
pop
sbb
test
pop
inc
popf
add
xor
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
adcl
add
jmp
enter
rcl
iret
shlb
fdivl
js
jl
js
cmpsb
sbb
and
pop
mov
sti
pushf
cmp
pop
jbe
aaa
test
dec
sub
cmp
mov
orl
int3
movsl
es
xchg
push
mov
cltd
mov
add
push
fisttpll
shr
out
jne
divl
dec
xor
insb
mov
dec
xchg
push
lcall
hlt
jns
xor
sbb
mov
aad
cli
push
cmpsb
xor
cltd
mov
ja
or
add
sahf
inc
pop
sar
pop
cli
mov
movsl
enter
xor
jns
mov
add
vmptrld
xchg
jmp
lock
ficoms
adc
mov
push
sti
inc
push
and
fistl
lock
outsb
jp
insl
mov
push
dec
ds
xchg
ffreep
es
fildl
subl
inc
inc
push
xchg
stos
js
push
jbe
sbb
out
mov
or
lock
jmp
repz
ret
or
cmp
mov
cli
scas
dec
push
xchg
scas
aaa
movsb
cwtl
shrb
into
push
lret
lret
int
loope
pop
sub
shll
mov
popf
mov
pop
cmp
imul
mov
cmp
mov
movsl
pusha
sbb
out
or
mov
lods
or
jg
fmul
cmc
add
push
subl
orb
out
outsb
cmc
mov
cmc
and
xchg
dec
push
dec
rorl
and
fsubl
mov
outsl
outsb
shrl
fists
jno
mov
xor
popa
out
int
insl
lea
dec
xor
jle
add
push
and
cmp
sub
mov
subb
test
cmp
sub
stc
xchg
loope
xlat
jo
push
sbb
push
shrb
js
add
xorl
jae
mov
outsb
into
xorl
sahf
mov
xlat
or
adc
jmp
adc
lret
inc
pop
add
and
adc
and
psubb
sbb
pop
dec
mov
mov
jp
flds
stos
push
sub
lret
mov
mov
das
dec
adc
leave
fdivrs
pop
pop
fsts
arpl
push
icebp
xchg
pushf
leave
jle
mov
adc
xlat
imul
mov
mov
xchg
cmp
jo
xchg
lcall
sbb
leave
xchg
cmp
icebp
mov
fcompl
dec
push
dec
rcrl
push
shlb
or
cli
dec
lds
mov
into
inc
inc
pop
outsl
lods
insb
clc
xor
es
push
in
dec
adc
imul
aas
pushf
mov
xor
mov
clc
pop
mov
add
add
pop
ret
arpl
pop
cs
decb
les
aam
xor
push
leave
or
aam
sbbl
dec
cmp
xchg
xor
mov
xchg
jno
aas
mov
mov
adc
sarb
xchg
add
rcll
or
xor
add
mov
cld
stc
int
add
dec
inc
push
mov
adc
cld
stc
icebp
mov
push
and
and
and
push
fisttps
stos
xchg
mov
out
test
cmpsb
pop
jnp
jmp
cmp
mov
add
push
cs
mov
mov
std
lock
push
stos
imul
cmc
fiaddl
mov
push
xchg
out
cmpsl
jb
test
pop
fwait
push
out
fsubs
or
jne
push
adc
imul
push
sbb
ljmp
popa
lahf
add
pop
fstpl
cli
sbb
nop
inc
xor
cmp
pop
mov
sbb
jl
push
inc
push
and
fcomps
xor
lea
push
or
outsb
or
jge
jmp
dec
cltd
sub
add
sbb
add
gs
xchg
mov
sbb
xor
sahf
jnp
sbb
push
or
das
xchg
std
xlat
call
sbbb
mov
sub
xlat
lret
dec
test
call
adc
ret
sbb
jae
outsl
in
xchg
dec
out
xchg
jae
or
mov
enter
mov
push
fcomi
mov
mov
sbb
jmp
ret
int3
fcmovbe
rcl
movsl
or
addr16
js
push
js
or
add
lahf
inc
sbb
in
mov
popa
sub
int
insb
xchg
jmp
push
add
xchg
scas
xor
xor
jp
mov
addr16
out
lock
fisubs
inc
push
cmp
loope
adc
push
cmpsb
dec
out
in
adc
xchg
loop
lahf
outsb
adc
jg
lods
enter
xor
inc
mov
das
push
mov
mov
hlt
mov
aad
aaa
inc
loop
mov
int
and
icebp
adcl
or
ret
pop
cmp
jg
pushf
mov
insl
dec
and
lret
into
nop
in
outsb
push
sub
and
add
xchg
adcl
or
push
cmpsl
call
nop
push
sbb
outsl
lret
popa
cli
imul
or
push
popf
lret
cmp
rcrl
sbb
jb
in
sbb
xor
fldcw
mov
push
jmp
xor
dec
jb
shrb
data16
adc
sub
jge
sar
sahf
dec
fnstenv
inc
sbb
xchg
shrb
popf
push
notl
bound
jecxz
inc
cmpsb
mov
fmuls
in
incb
mov
int
ret
pop
rol
test
lcall
popa
aam
cltd
ljmp
hlt
adc
push
fsubr
dec
je
fs
loopne
cs
in
imul
mov
add
push
sbb
lea
mov
cwtl
push
pusha
or
xor
sub
xchg
cwtl
ds
jecxz
pop
out
clc
jo
in
xor
je
cld
lcall
stos
xchg
xor
and
stos
xchg
rcll
and
add
sub
mov
add
mov
xor
dec
dec
out
xor
out
clc
movsl
ret
sub
sub
cmpsl
vmovaps
into
mov
adc
hlt
xor
add
inc
pop
pop
arpl
pop
fisubl
and
arpl
xor
lea
jmp
lahf
sub
cli
cmp
cli
rcll
or
cmpsl
cmpl
loope
vucomiss
enter
ljmp
data16
clc
mov
in
mov
pop
loopne
mov
jns
in
movb
pop
faddl
imul
cmp
pusha
addr16
xchg
pop
pop
rclb
jmp
or
pop
and
sti
xchg
ret
jnp
push
xchg
in
cmp
leave
push
dec
cmp
aas
ret
pop
shr
das
incb
lods
stos
sbb
inc
leave
mov
inc
test
repnz
dec
mov
mov
jnp
mov
jne
jge
shl
je
mov
pop
stc
lret
nop
ret
jbe
jb
sub
sbb
in
inc
push
test
push
sub
push
fimuls
add
sub
adc
push
data16
ss
aam
insl
inc
inc
jbe
aam
shrl
xor
je
ss
mov
imul
leave
stos
push
pop
repnz
outsb
cmp
mov
inc
pop
in
push
pop
ja
aam
out
int3
or
push
lods
ljmp
add
shll
outsl
or
cltd
roll
into
sahf
push
or
jae
xlat
push
cmove
aas
sub
test
jns
std
pop
scas
cmc
mov
jl
stc
cmp
sub
insb
mov
adc
clc
adc
lahf
mov
test
mov
outsb
pop
mov
ss
push
iret
cmp
mov
addr16
movsl
add
into
ljmp
andb
loop
or
loopne
shl
inc
pop
jns
jo
push
cmpsl
outsb
jle
xor
dec
daa
fnstenv
sbb
pop
fs
xlat
repz
adc
mov
ds
mov
clc
sti
jne
mov
in
or
jmp
jnp
mov
mov
push
je
or
jl
aaa
and
sbb
loopne
pop
mov
and
insl
int3
icebp
sub
test
sbb
sbb
xchg
mov
jne
sub
leave
or
pusha
mov
int
jle
in
pop
in
mov
in
ljmp
mov
in
xlat
cli
mov
dec
xor
lds
sub
fildl
aas
sub
popa
mov
mov
dec
out
into
call
je
pop
adc
lea
mov
jmp
int
aas
fcmovbe
leave
aad
or
lds
dec
sbb
cmp
push
js
cli
scas
pop
sub
imul
jno
js
je
push
es
inc
mov
mov
test
lahf
pop
lret
pop
cli
das
mov
lods
dec
sti
jecxz
inc
outsb
sub
mov
push
cmpsl
pslld
ret
repnz
adc
mov
movsl
cmpsl
ret
call
clc
daa
int
out
sbb
and
or
lret
mov
stos
xlat
push
cmpsl
or
push
push
in
sti
jno
jecxz
sbb
into
stos
lret
xor
and
insl
ljmp
out
ret
movsl
sub
inc
in
sbb
das
dec
cwtl
testl
addr16
aad
aaa
popf
fildll
scas
sarl
adc
mov
xor
ret
loop
push
mov
xor
push
fs
cwtl
outsl
shlb
repz
dec
xchg
sarl
stc
rcll
mov
mov
inc
mov
mov
inc
ljmp
mov
fimuls
dec
jl
hlt
out
push
lods
and
in
sbbb
adc
repz
andw
div
movl
in
mov
adc
sahf
mov
movsb
mov
les
push
loope
leave
std
mov
pushf
jmp
hlt
dec
sub
cs
mov
sub
xor
insl
push
sub
jle
mov
and
xchg
shll
stc
sahf
rorb
dec
sub
icebp
add
cli
out
mov
callw
mov
dec
xor
scas
cld
push
and
call
dec
mov
push
fwait
xchg
sub
xchg
daa
dec
clc
jmp
add
or
xchg
and
aas
add
sti
pusha
mov
popa
lock
sub
arpl
and
test
bound
ja
push
scas
push
sbb
mov
fnstenv
and
jle
stos
pop
imul
shlb
sahf
mov
xor
loope
lret
fnsave
int
aam
xchg
paddsb
xchg
repnz
inc
fsubrl
or
adc
mov
mov
xchg
push
mov
orb
dec
ret
hlt
push
cmp
mov
lods
ljmp
add
imul
push
push
mov
stos
and
movl
ret
ret
std
push
fnstcw
std
loop
je
xchg
push
cmp
test
popf
add
insl
scas
loop
fisttpll
jp
and
adc
inc
mov
push
ds
sbb
lds
jecxz
mov
sbb
std
pop
test
cmpsb
mov
or
mov
stc
mov
je
mov
xor
pop
cmpsl
in
xor
or
jle
sub
add
loop
mov
cltd
cmp
add
out
dec
xchg
sbb
add
push
jge
and
andl
gs
loope
movsb
push
das
loope
ret
movsb
in
or
add
idivl
pop
jbe
sbb
push
add
xor
aad
cltd
stc
dec
test
fbstp
pushf
jmp
sbb
dec
dec
inc
lret
jl
jecxz
in
lds
stos
cmp
and
xorb
or
test
pop
sbb
sub
jl
push
and
iret
xchg
popf
call
test
fcmovb
push
inc
pop
push
pusha
or
or
lret
aad
fsubr
and
in
rclb
push
or
mov
jnp
lods
cwtl
mov
cmp
andps
xchg
mov
adc
cmc
push
loope
test
je
je
loope
mov
scas
add
mov
pusha
adc
int
mov
in
mov
adc
mov
xchg
mov
pcmpgtd
sbb
jmp
mov
pop
push
pop
mov
pop
cmp
leave
or
push
mov
aaa
lock
cmp
or
push
cmpsb
push
pop
sti
sar
mov
into
js
push
sbb
dec
pop
cli
cmpb
ljmp
nop
inc
inc
lret
loope
sti
dec
mov
pop
xchg
jae
movsb
push
cmp
loope
das
lods
mov
outsl
dec
shlb
mov
sub
sbb
popf
push
lret
int
pop
mov
jae
in
lods
test
mov
push
sbb
outsb
dec
hlt
jno
jmp
movb
arpl
gs
lcall
lock
mov
adc
mov
mov
add
mov
sbbl
mov
jmp
lret
rcl
ror
fsin
sbb
pop
jp
mov
js
jl
js
sti
hlt
mov
pop
sbb
fst
cli
jecxz
divl
inc
xor
cmc
test
cmp
cli
test
or
sbb
cmp
bound
xor
mov
mov
pusha
and
cld
and
fdivl
inc
aas
lea
or
test
cmp
dec
dec
mov
xchg
mov
je
sbb
shlb
pusha
cmpsb
subl
xchg
cmp
ret
out
and
mov
bswap
das
sub
outsb
inc
dec
sarl
scas
sbb
push
andb
xor
outsl
sbb
push
dec
mov
aaa
mov
sbb
daa
stos
test
addr16
sahf
xchg
andb
fsubrs
inc
mov
sahf
or
dec
xchg
dec
lock
stc
sti
pop
mov
push
leave
sbb
sahf
add
pushl
int3
test
mov
push
lcall
mov
inc
pop
mov
jne
lret
dec
xlat
lret
in
scas
repnz
lea
orl
cmp
add
push
push
mov
jmp
jmp
adc
jae
iret
inc
fwait
les
or
push
mov
or
and
in
dec
movsl
adc
cmpsb
enter
add
jb
ja
or
popa
and
jb
or
std
jno
ret
cli
je
stc
jg
cld
das
lds
repz
das
adc
mov
cmp
jge
adc
xchg
push
adc
mov
jp
aas
leave
sbb
movsl
pop
enter
xchg
ret
push
cltd
es
mov
pop
lock
sti
lcall
cs
call
scas
jno
outsl
dec
adc
xlat
pushf
dec
pop
pop
testl
addr16
mov
xor
das
pusha
sub
xchg
dec
div
sub
daa
or
scas
add
fwait
mov
push
sub
or
adc
sbb
mov
bound
xchg
decb
fisttpl
cmpsl
jnp
xor
lret
sub
fsubrp
xchg
loop
iret
mov
add
jmp
ficomps
inc
comiss
pop
mov
dec
sahf
outsb
in
mov
mov
jne
scas
add
iret
icebp
and
push
daa
push
cwtl
faddl
pop
int
idivb
dec
inc
jo
mov
ret
loope
out
dec
push
sub
adcl
pop
fimull
push
and
cmp
xchg
inc
aad
sub
or
imul
inc
nop
mov
mov
xchg
into
or
xor
adc
sbb
dec
repz
shl
enter
scas
loop
inc
mov
daa
and
fs
jae
cmp
jmp
or
fidivrs
mov
dec
jp
xchg
push
lret
pop
mov
in
sti
inc
out
dec
cli
xor
out
cltd
sahf
xor
ficoml
aaa
push
stc
jg
rorl
and
sub
jg
cwtl
adc
stc
aas
sbb
push
shlb
cmc
aaa
pop
cmp
fwait
shlb
out
sub
pop
daa
icebp
fldl
jo
pop
push
and
adc
ror
mov
inc
inc
jb
nop
shll
sub
pop
popf
pop
das
in
or
push
lods
dec
pmaxub
add
inc
shrl
scas
mov
dec
aaa
inc
xchg
inc
xchg
mov
mov
dec
push
scas
mov
jg
cmp
ss
leave
popf
cmp
dec
xor
ljmp
sarl
cmpsl
xchg
mov
pop
out
jecxz
std
out
je
sbb
xchg
mov
mov
sub
ljmp
cmp
repnz
add
pushf
rclb
push
or
mov
add
ljmp
xchg
mov
adc
push
pushf
add
fcoms
mov
dec
xchg
out
cmp
out
xchg
aas
xor
aas
dec
lea
push
adc
dec
outsb
pushf
inc
pop
and
mov
stc
mov
lret
out
cmp
or
adc
sbb
push
test
inc
xor
sbb
aam
in
rol
mov
pop
test
inc
pushf
cmp
xrelease
leave
jge
ljmp
cmpsl
mov
into
xchg
rcl
idivb
aam
mov
dec
sbb
in
cmp
int
mov
ljmp
jle
cmp
js
sub
add
xchg
es
jmp
lret
pop
xor
stos
lea
dec
out
jecxz
inc
mov
add
adc
cmp
add
test
add
push
mov
test
add
add
mov
cmpsb
inc
add
adc
mov
dec
mov
jmp
jmp
ret
rcl
rol
into
push
cmc
loope
loopne
test
outsb
js
push
js
push
xor
lods
inc
xchg
insl
orl
movsb
xchg
jno
push
lds
adc
dec
cli
or
adc
jl
popf
push
push
mov
and
push
jbe
fsubrl
mov
sub
adc
mov
push
inc
jne
mov
and
inc
andb
aas
daa
sub
mov
popa
ds
sub
lods
outsb
cmp
test
mov
mov
rorl
xor
add
aaa
leave
adc
and
test
dec
jge
xor
sbbl
cmp
jno
or
xchg
jbe
popf
insb
rcrb
dec
hlt
in
mov
cmp
cmp
dec
mov
mov
sbb
fmull
or
cli
pop
in
clc
mov
jle
std
lods
iret
fbld
jecxz
cmp
hlt
inc
cmc
and
and
push
call
scas
jle
loop
lea
outsb
insl
cmc
mov
rorb
frstor
xchg
fmuls
inc
hlt
or
clc
xor
lods
inc
das
dec
cli
lcall
and
dec
pusha
or
mov
fs
mov
or
mov
incb
pop
daa
pusha
jl
mov
cmp
add
mov
cs
arpl
push
dec
mov
insb
add
pusha
in
push
mov
mov
jns
sbb
cmpsl
test
inc
lods
pusha
mov
xchg
or
jg
repz
in
xorb
push
jno
inc
stos
sub
mov
inc
cmpsb
or
inc
pop
out
scas
add
dec
adc
xchg
in
add
call
arpl
mov
xor
pop
ss
rcrb
pop
sub
add
notl
je
cbtw
andb
mov
andl
ljmp
xor
notl
pusha
stos
sbb
mov
jmp
pop
add
add
shlb
shrl
andl
shll
cltd
mov
ljmp
add
cli
xchg
ljmp
or
insb
je
outsb
xchg
cld
cmp
imul
pop
pop
pusha
fstpl
mov
stc
inc
xchg
push
call
or
adc
mov
aas
dec
popa
mov
push
jg
cmp
nop
test
inc
and
fmuls
aas
daa
mov
cmp
out
daa
insl
aaa
jno
das
xchg
in
add
xchg
pop
lret
inc
jns
mov
adc
fmul
jecxz
mov
loop
sar
out
cmp
jnp
mov
inc
push
push
aam
mov
sti
push
sub
sub
movsl
and
imul
push
mov
rclb
add
xchg
ret
mov
mov
sbb
pop
jo
dec
test
cwtl
idiv
mov
loopne
popa
clc
mov
xor
fimull
sar
nop
cmc
mov
push
jnp
leave
add
xchg
xchg
cmpsl
inc
ret
shlb
repnz
lcall
loopne
enter
notb
inc
popa
and
std
pushf
pop
stos
or
xchg
sahf
les
adcb
hlt
cmpsl
push
inc
push
hlt
aam
aas
adc
xchg
sub
or
xlat
inc
es
data16
sti
adc
popf
sbb
cmp
push
insb
es
xor
imull
movsl
mov
imul
xchg
jecxz
in
ljmp
lods
into
lret
mov
gs
sbb
int3
pop
shlb
or
arpl
mov
add
sbb
loop
sbb
or
cmp
cltd
mov
push
sub
add
ljmp
jecxz
add
push
cs
leave
sub
sub
push
mov
xchg
inc
cli
vxorps
cmp
dec
imul
bnd
test
stc
mov
inc
sahf
and
fadds
mov
sbb
sbb
loope
xlat
ss
sahf
and
cmpsb
add
push
shl
scas
add
sub
jl
inc
loope
outsl
xlat
pop
dec
testb
iret
pop
shll
push
push
jae
popf
cltd
sbb
neg
cmpsl
mov
sti
mov
lret
bound
dec
jbe
and
add
movsl
mov
out
inc
xor
into
lahf
and
mov
cmp
sbb
fnstcw
in
in
sbbl
lds
lea
leave
add
sarb
mov
lods
and
imul
dec
clc
xor
add
jmp
mov
fcmovnbe
hlt
inc
or
into
pusha
sbbl
js
mov
mov
roll
and
xchg
fsubs
stc
cs
mov
cltd
pop
mov
mov
add
movsb
sbb
loopne
push
sbb
fldenv
sub
push
and
js
mov
pop
push
cmpsl
std
enter
sub
ljmp
jne
xchg
scas
jg
xor
jbe
rcll
imul
mov
and
cs
arpl
fidivrs
inc
xchg
scas
jmp
lods
arpl
xchg
or
and
add
loope
icebp
aas
sub
ds
sub
add
sahf
fldcw
add
hlt
lret
aaa
shrl
jecxz
lret
mov
loop
lcall
sub
inc
mov
popa
jnp
mov
loopne
ret
mov
push
xchg
stc
mov
inc
or
repnz
gs
fst
shlb
and
popa
sub
lcall
add
cmp
fistl
sub
pop
adc
push
pop
addr16
rcr
ss
and
out
fs
fiaddl
mov
xchg
sbb
sbb
rcl
fs
push
mov
mov
in
push
shr
cs
and
mov
mov
out
iret
enter
sub
js
push
out
xchg
mov
mov
xchg
nop
arpl
mov
push
out
sti
jl
movsl
adc
cmpl
mov
adc
jae
sbb
and
jno
sub
shll
adc
mov
add
mov
mov
fstl
xchg
xor
push
jl
push
add
sub
ficomps
int
add
clc
push
gs
adcl
insb
inc
inc
shll
add
pop
jns
mov
xchg
int3
jb
popf
in
xchg
sarl
xor
cmp
xchg
push
mov
sbb
lret
and
cmpb
shlb
mov
aas
mov
push
filds
pop
pop
mov
std
arpl
or
adc
fsubl
lds
or
mov
dec
mov
or
xchg
divl
scas
mov
push
lahf
lods
ret
mov
sub
sub
push
sahf
add
daa
and
jecxz
clc
mov
outsb
icebp
gs
and
cltd
addr16
cmpsb
les
imul
inc
dec
push
ret
push
sbb
jbe
or
sub
xchg
dec
stos
test
adc
stc
addb
cmp
stos
arpl
and
jne
int
and
push
push
sub
cwtl
dec
imul
test
lcall
iret
in
ds
cli
repnz
out
jecxz
add
push
mov
std
in
outsl
jbe
stc
dec
mov
lock
jo
out
push
sbb
cltd
jae
inc
jmp
or
jge
clc
xor
xchg
dec
xchg
jns
mov
mov
mov
inc
movsb
and
fdivrl
loopne
mov
js
sub
imul
jge
push
faddp
aas
adc
mov
push
adc
push
bound
cli
add
jmp
cmp
sbb
sbb
sub
push
andl
scas
aaa
fdivrp
mov
pop
mov
jl
inc
mov
ret
fwait
lods
enter
inc
or
push
and
lock
int
hlt
in
jae
int
cmc
cmp
mov
cli
jge
and
xchg
xchg
test
iret
repz
pop
pop
in
sub
test
int
add
push
pop
jb
leave
xor
frstor
stos
add
fcomps
insb
shrb
jnp
lahf
popf
cmp
sti
arpl
pop
call
sbbl
xchg
scas
mov
je
lret
arpl
repnz
jmp
jo
mov
ja
lret
dec
ds
jle
shrb
sbb
xor
sbb
sar
mov
cs
daa
push
jle
mov
or
test
mov
push
cmp
cmp
dec
enter
jl
imul
dec
inc
cld
xor
ret
testb
jle
adc
mov
and
aaa
sub
loope
mov
fmul
sub
inc
mov
push
xchg
adc
stos
dec
ds
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
jmp
ror
rol
fxch
fcmove
xor
sarl
int
js
jl
js
cmpsb
out
push
pop
add
mov
int3
lods
xor
mov
pop
jecxz
lret
add
pop
xchg
lods
inc
mov
mov
mov
push
test
push
outsl
mov
add
push
mov
sub
sub
or
pop
sub
fiaddl
and
mov
idiv
cli
inc
mov
push
sub
cmc
mov
ss
popl
adc
dec
mov
out
cmp
sub
push
fs
lods
lock
faddp
mov
or
loopne
mov
mov
inc
add
push
test
pop
sub
push
stos
rolb
pop
test
repnz
xor
push
stos
push
mov
mov
inc
scas
mov
xchg
mov
cmp
scas
dec
clc
scas
or
mov
jnp
sbb
lds
mov
dec
fwait
xchg
or
fdivrl
lock
cmc
imul
or
jo
and
negl
add
leave
scas
jbe
lods
push
in
push
adc
jmp
fldenv
movsl
mov
test
push
mov
xchg
push
lcall
mov
outsb
lods
fisubrs
fstpt
pop
push
iret
and
ret
mov
or
mov
or
or
mov
pop
mov
andb
xchg
gs
fdivrs
pushf
mov
das
cltd
stos
ret
addl
mov
sar
clc
cmp
push
scas
mov
aas
addr16
sub
movsb
fistpl
lock
das
inc
push
daa
movlps
xor
push
inc
mov
mov
sbbb
ljmp
lret
mov
sub
test
nop
push
mov
jno
repz
dec
ja
fiadds
fcomps
pop
ljmp
lods
and
push
aaa
mov
dec
or
ja
add
inc
lret
movsb
cld
mov
and
lods
sarl
adc
fwait
loope
sub
or
rolb
subl
xor
jmp
data16
out
mov
cltd
in
dec
xor
cmp
mov
push
shrb
fimuls
bound
lods
inc
out
outsb
sbb
call
pop
add
outsl
or
je
mov
mov
jmp
jb
and
loop
mov
push
push
jg
push
addb
aam
mov
js
or
xor
cmc
or
jno
dec
mov
mov
sub
pop
inc
shr
icebp
push
cmpsl
inc
jo
repz
negl
push
jb
mov
mov
sahf
add
xlat
pop
mov
push
jge
pop
pop
ss
mov
stos
in
iret
add
sbb
sarb
dec
std
lea
jg
insb
test
push
push
shlb
call
add
mov
outsl
mov
jb
setl
add
int
rolb
bound
mov
repz
mov
out
or
push
bound
mov
inc
add
gs
cwtl
sbb
adc
and
jecxz
xor
xchg
repz
mov
outsl
push
das
jg
popf
mov
mov
lds
add
push
jno
xlat
es
ret
in
xlat
fisttpl
push
ds
jge
mov
addr16
test
cmp
imull
cmc
stc
and
orl
clc
xchg
insb
push
mov
jmp
movsl
fwait
aad
and
lods
adc
lcall
push
xlat
cmpsb
cmp
push
xor
sub
jmp
gs
add
outsl
push
jmp
xor
inc
iret
bound
add
movsl
movl
shrl
int
lods
lahf
inc
pop
sub
jl
jne
addr16
push
in
pusha
mov
enter
or
inc
shlb
push
dec
and
repz
push
xchg
in
sbb
mov
shrl
mov
adc
pop
xchg
cmp
sbb
icebp
es
mov
psubusb
lods
mov
add
fsubl
loopne
sbb
icebp
leave
sub
cmp
and
fildl
mov
shl
or
xor
scas
or
int3
mov
jmp
ror
ror
fcmovu
aas
scas
push
sbbl
sti
mov
js
push
js
lea
push
sbbb
and
icebp
aad
testl
fs
cmpsl
pavgw
pop
cmp
adc
jns
pop
xlat
rcrl
dec
and
jo
bnd
loope
add
sub
inc
aaa
mov
imul
pop
incb
paddusb
jno
rcll
mov
inc
push
aaa
inc
in
int
or
inc
in
mov
test
sbb
mov
cld
sbb
stos
push
out
dec
daa
out
lahf
xlat
imul
jmp
jl
aam
jo
or
sbb
cmc
cmpsl
pop
cmp
mov
ret
arpl
mov
dec
out
mov
cld
dec
adc
and
and
pavgb
fiaddl
mov
pop
sub
jge
mov
cli
cmpsl
or
stos
sub
or
add
pop
mov
es
push
jp
pop
or
mov
add
mov
dec
mov
stos
insl
push
fstl
mov
push
pushf
pop
and
mov
dec
std
repz
inc
dec
cmp
sbb
cwtl
xor
cld
sbb
xor
stos
mov
jmp
fldenv
test
lret
add
out
mov
xchg
or
add
inc
xchg
jb
shrb
jno
xchg
mov
call
mov
mov
movsl
sbb
jae
push
addr16
in
sbb
sbb
aad
mov
push
aam
jge
dec
mov
adc
xchg
push
fwait
in
inc
lea
inc
xchg
sub
jno
cmpb
push
in
mov
call
mov
mov
xchg
and
test
shll
push
rorl
adc
mov
lahf
xlat
cli
decl
mov
inc
xor
rorl
push
cmp
je
cli
int
xchg
inc
nop
in
addl
lahf
or
pop
mov
push
jle
in
fs
in
dec
je
pop
xor
xchg
xlat
inc
test
mov
push
sub
add
fidivs
fldl
jmp
ljmp
mov
push
and
mov
cmp
jb
or
xor
lret
jno
mov
ret
cmp
cmpsb
xchg
cli
or
push
mov
or
cli
int3
lret
pusha
push
test
cwtl
jge
cmpsl
xchg
imull
stos
pop
test
xor
ds
mov
sbb
rorl
lods
aaa
cmp
push
leave
mov
sbb
mov
cmpsl
dec
add
ds
gs
xor
xor
mov
pushf
mov
xchg
push
mov
adc
mov
shlb
xchg
lcall
or
add
loop
std
out
enter
jle
testl
and
mov
cli
jb
inc
xchg
out
pop
push
cmp
fwait
pop
iret
in
cld
dec
clc
in
sub
lret
call
addr16
inc
and
dec
mov
sbb
mov
mov
sbbb
leave
mov
add
dec
iret
and
fsubrp
in
xor
out
ret
pushf
cmp
sub
cwtl
sub
insb
ds
dec
insb
push
mov
fsubs
sbb
out
jne
mov
and
jecxz
fidivl
dec
pop
sbb
xor
and
add
sbb
sub
sub
or
out
vmaxss
loopne
mov
in
mov
scas
cmp
test
std
jno
pop
xchg
adc
pop
and
sti
inc
daa
sbb
out
xchg
int
cmp
jle
pop
in
jl
xchg
and
adc
xchg
and
rolb
into
subb
test
jmp
sbb
mov
arpl
test
movsb
cmpsb
mov
fiadds
stos
cmp
adc
mov
testl
jno
test
in
push
int
arpl
repz
push
shl
out
fiadds
jle
aam
insl
and
and
stos
sub
cli
cld
in
mov
mov
bound
outsl
out
test
ret
test
inc
in
lods
sbb
jo
cli
add
push
adc
leave
inc
pop
xor
sub
out
add
lahf
mov
lock
mov
pop
imul
repz
fwait
in
stos
xchg
mov
push
cwtl
inc
dec
push
jl
xchg
int
inc
and
push
int
and
ret
sub
adc
clc
jge
stos
shlb
adc
lock
xchg
ret
adc
add
int
rcr
rol
fxch
cmp
das
pop
cmpsb
fstpt
push
js
mov
sub
cmp
aad
lret
cmp
adc
in
mov
cmpsl
pop
sarl
push
pop
sbb
sbb
push
divb
call
push
mov
xchg
add
shrb
and
out
mov
pusha
std
mov
dec
mov
mov
cmp
xchg
movsb
sahf
cmp
scas
xchg
cli
xor
orb
adc
dec
rorb
adc
lods
sbb
inc
mov
xchg
jmp
and
xchg
inc
mov
mov
pop
insb
dec
cli
mov
push
sahf
cmp
fnstcw
js
jle
popa
xchg
test
xchg
subb
mov
arpl
mov
or
imull
mov
jg
xchg
jge
bound
add
arpl
dec
sbb
imul
dec
push
push
mov
sahf
les
lea
shll
jecxz
fs
sbb
cmpsb
and
rcll
or
enter
jbe
sbb
in
imul
jb
leave
sub
pop
btc
stos
push
aam
fisttpll
xchg
outsl
push
mov
sub
fyl2x
pop
and
add
insb
xchg
xchg
arpl
nop
pop
xchg
subb
out
pop
adc
sub
dec
insb
lods
push
and
cli
lods
fisttpl
jns
mov
fcomp
stc
inc
repz
fs
sti
push
nop
popf
js
ret
rcrb
inc
inc
insb
mov
hlt
sbb
push
mov
pop
sbb
sbbl
xchg
dec
mov
inc
jmp
scas
mov
jnp
fcoms
xchg
dec
mov
stc
lcall
jge
inc
frstor
jbe
in
lret
dec
arpl
or
cmpsb
rcrl
call
sarl
not
push
xlat
jb
push
xor
pushf
outsb
xchg
jecxz
cld
pop
pop
or
add
loop
shl
jae
test
and
and
or
xchg
inc
sub
xor
jge
jmp
pop
dec
cmpsl
test
scas
and
les
cmp
sub
xor
aas
in
clc
in
out
cwtl
push
fisubrs
fnsave
adc
inc
fimuls
dec
lahf
cmpb
gs
fs
dec
xor
jno
test
xor
jg
lahf
aam
loop
icebp
mov
insb
xchg
mov
xchg
sub
dec
out
stos
xor
xor
int3
pop
cmp
ret
aas
mov
pop
dec
adc
stc
ss
ficompl
push
fcmovb
stos
leave
sahf
fsts
fwait
and
xor
push
pop
mov
out
and
dec
mov
cmp
mov
std
idivb
fwait
gs
ljmp
xchg
dec
pop
xlat
and
cltd
lahf
out
cwtl
std
nop
in
sbb
stc
push
rcr
jne
subl
int3
gs
pop
out
icebp
mov
and
out
sarl
cld
in
sub
popa
adc
mov
add
sub
es
lea
jno
inc
rcl
cmp
mov
jmp
mov
ja
mov
pushf
adc
jl
ss
das
pop
scas
lods
add
jle
movsb
add
and
inc
dec
mov
lock
lods
popl
xor
mov
xchg
lods
fstps
add
aad
roll
xchg
hlt
adc
sarb
jo
fcompl
mov
jns
jp
dec
rcll
pop
ret
sbb
cmc
add
cmp
fs
std
adc
sahf
fwait
in
push
xor
das
ss
or
xor
inc
xor
jg
cmp
push
inc
push
add
xchg
mov
in
adc
jo
jecxz
add
in
shr
pop
ja
mov
nop
repnz
mov
popl
std
push
pop
push
jb
or
test
repz
dec
lods
clc
add
mov
test
xlat
lods
and
pop
push
inc
stc
push
mov
push
push
shll
icebp
cs
pop
inc
mov
inc
aad
lods
cmp
sbb
cs
xor
add
jmp
pushf
or
mov
aaa
aas
mov
or
hlt
in
loope
or
test
setnp
cwtl
jg
jmp
jmp
rclb
lods
dec
mov
xor
js
and
mov
xor
jmp
xlat
xlat
iret
into
iret
aad
cmpsl
in
in
cltd
xor
jl
js
mov
jb
cmp
mov
xor
dec
dec
mov
xchg
fwait
repz
adc
ret
jns
icebp
inc
sbb
sub
dec
add
std
test
outsl
inc
ds
or
mov
test
scas
mov
add
push
out
imul
fistpll
jmp
ret
cmp
fisttpll
jne
mov
aaa
push
jae
mov
sub
add
fdivp
inc
dec
dec
scas
sti
and
cmpb
jl
insl
stc
mov
pop
add
sarb
push
xchg
mov
jg
dec
insl
sbb
add
cmp
xor
in
jbe
les
std
cmpsl
das
frstpm(287
std
shl
push
movsl
xor
sbb
shl
jl
mov
std
js
lock
aam
ljmp
loopne
aaa
addr16
cmp
wbinvd
push
adc
pcmpeqb
cmp
or
pop
ret
rcll
ficompl
clc
cmp
insb
int
aam
push
ficoms
nop
es
mov
pusha
jo
test
xor
push
icebp
or
jne
fadds
scas
cmp
cmp
repnz
or
sub
mov
jae
shlb
jae
and
lds
xorb
xor
bound
sbb
push
jle
inc
xor
outsb
leave
dec
xchg
inc
icebp
out
jno
les
cli
mov
cmp
inc
pop
loope
repz
rcl
xchg
jl
dec
sarb
sahf
pop
movsl
pusha
or
js
push
in
movsl
sbb
sbb
push
arpl
mov
mov
call
add
adc
xchg
stos
pop
in
sub
in
aaa
jne
in
mov
and
and
ficomps
sbb
xor
jecxz
adc
nop
lcall
jbe
pop
movsb
xchg
mov
out
xor
mov
mov
stc
mov
xchg
popf
adc
insl
add
cmpl
pop
xchg
clc
sub
and
xchg
loope
mov
lock
test
inc
xchg
rcrl
outsb
xchg
inc
jb
je
cmp
fimull
cmp
test
and
add
jns
pop
fbstp
jmp
jp
dec
adc
das
cmp
xor
fs
push
sbbl
jne
popf
mov
mov
pop
imul
faddl
outsl
inc
pop
add
pop
mov
or
push
pop
inc
and
lds
ficomps
faddl
imul
pop
les
or
add
xor
test
enter
int
sbb
push
addr16
mov
dec
mov
or
push
xor
fstpt
les
cmpsl
popf
mov
cli
in
sahf
aas
push
jl
loop
outsb
dec
int3
lds
push
mov
js
adc
xchg
pop
test
adc
xor
inc
add
mov
movsl
adc
scas
ljmp
or
in
cmc
mov
das
js
sbb
sub
jb
cmp
add
sbb
ret
imul
iret
mov
jnp
test
inc
lock
push
cmp
add
fsts
leave
clc
cmp
pop
mov
add
jl
add
xor
test
sbb
leave
out
add
xlat
test
xchg
xor
push
cbtw
scas
or
sub
loop
pushf
dec
int
aas
shrl
cmpsl
stc
icebp
pop
outsb
imul
jp
aas
in
ljmp
call
adc
or
outsb
aam
arpl
xor
jle
jnp
stos
jp
ds
cmp
mov
mov
fbstp
xchg
cmp
mov
outsb
adc
mov
lods
jmp
push
mov
adc
jg
xchg
inc
add
add
test
test
lds
lock
sub
jb
inc
test
xchg
shlb
and
sbb
lds
mov
js
std
cmp
add
fstpt
xor
into
repz
push
repz
pushf
imul
mov
mov
int
pop
testb
dec
shr
stc
call
daa
gs
mov
or
repz
or
scas
xorl
lock
mov
xor
fstpl
fbstp
call
cmc
xchg
fistl
jmp
rol
ds
lret
aaa
aas
push
sbb
js
push
js
pop
or
fmuls
adc
lret
loope
mov
sub
ljmp
movsl
pcmpeqb
and
mov
inc
mov
dec
or
xchg
jne
push
cmpsl
outsl
xorl
dec
mov
jg
sub
mov
insl
aam
fwait
rcrl
sbb
lock
fsubp
fucomp
mov
cmp
pop
sub
sub
in
outsb
jne
dec
sti
jmp
das
lods
mov
jmp
movsl
jae
mov
mov
pop
adc
rorl
jo
enter
aaa
cmp
add
scas
push
mov
dec
xchg
mov
add
and
or
fcompl
sahf
aam
mov
btcl
repnz
or
scas
ds
xchg
decl
mov
cmp
ficoml
jb
adc
xchg
ret
int
cmp
fidivl
pop
call
pop
pop
sbb
jb
lds
jp
mov
in
loop
fs
and
jg
add
sbb
in
call
shlb
or
insl
loop
js
nop
inc
cmp
mov
inc
mov
out
mov
out
adc
lret
or
mov
push
inc
xchg
ja,pt
outsb
out
dec
mov
cmpsl
fdivp
sbb
dec
test
out
push
sub
nop
push
fwait
mov
es
daa
into
repz
lcall
jnp
lods
insl
pop
and
push
shll
ljmp
not
jbe
add
push
push
push
dec
push
rolb
popa
and
iret
aas
xchg
pop
out
pushf
push
inc
loop
loop
cli
mov
les
jmp
mov
push
decl
test
push
pop
sub
int
mov
cmp
and
or
adc
je
and
jb
sbb
mov
psllw
push
sbb
sub
and
icebp
mov
loope
and
inc
insl
cmpsl
stos
std
idivl
testl
out
test
adc
mov
xchg
inc
mov
mov
out
and
hlt
pusha
xor
shl
sarb
cld
xchg
xorb
jo
xor
mov
dec
outsl
int3
pop
mov
in
pusha
subl
dec
push
mov
outsl
xchg
in
add
dec
sbb
movsl
cmp
dec
arpl
aam
or
inc
push
push
xchg
mov
gs
add
out
insl
pop
cltd
sub
jg
into
loopne
sbb
enter
xor
inc
jnp
insl
mov
pop
pop
imul
jo
xchg
inc
insl
stc
aad
cmpl
sbb
pop
fucom
adc
adc
push
int3
cmp
icebp
cmpsl
push
sbb
testl
xor
mov
fmull
mov
out
dec
xchg
test
mov
and
popa
mov
lods
add
repz
loopne
adc
push
gs
out
xor
fwait
push
mov
sbb
jb
add
mull
jp
out
lods
test
adcl
fdivr
xchg
adc
lods
jb
fwait
push
sti
clc
xchg
into
int
adc
jbe
adc
shlb
ja
aam
popa
jns
loope
subl
int
inc
inc
rcl
pop
pop
iret
jmp
dec
out
in
add
mov
ja
jl
lock
cmp
mov
mov
xchg
aas
xchg
cld
xlat
dec
cmp
enter
sti
aam
add
pusha
or
cmp
imul
cwtl
mov
adc
es
fcmovu
push
insl
leave
dec
fldenv
mov
dec
xchg
add
jmp
loop
adc
notb
inc
test
ljmp
dec
jb
std
ja
cwtl
fistps
insl
enter
sub
or
aam
push
xchg
in
fmulp
fidivl
cld
dec
cmp
push
mov
stc
cmp
add
enterw
pop
popf
clc
xchg
negl
dec
femms
push
jnp
xchg
jne
or
shl
scas
aaa
aaa
or
mov
out
cli
bound
aam
je
loope
mov
loope
fs
popa
dec
negl
pop
cmp
xor
data16
stos
sbbl
lahf
ja
imul
mov
dec
cmp
sbb
out
bound
cmp
sub
enter
push
movsl
inc
dec
mov
jg
add
sub
and
push
adc
add
call
inc
in
movb
push
jmp
aas
int
rcr
lret
aad
inc
sbb
ja
shr
in
js
jl
js
pushf
mov
pop
mov
iret
pop
dec
pop
sub
inc
jo
mov
das
xor
icebp
xlat
in
mov
outsb
pop
fdivl
inc
inc
mov
pop
adc
xchg
mov
addr16
push
int3
movsl
inc
lcall
ret
adc
ja
push
sub
adc
imull
push
xchg
mov
mov
mov
push
dec
repz
jl
push
push
mov
inc
ds
daa
lock
pop
out
mov
mov
sbb
mov
lahf
mov
adc
dec
push
sbb
iret
mov
cltd
push
push
aaa
bound
test
adc
xchg
fsubs
fbld
imul
stos
out
cmpsl
sbb
xor
jbe
push
jmp
std
cmp
cmp
add
jmp
and
icebp
mov
sub
scas
cli
inc
jbe
inc
add
mov
push
test
mov
pop
jns
shrl
xchg
je
adc
lret
cmpsb
and
imul
mulb
lret
out
sub
mov
mov
push
std
js
mov
lds
mulb
add
aam
sahf
rorb
push
and
add
sbb
sub
push
insl
adcl
push
iret
add
pop
cmp
push
mov
inc
dec
dec
testb
in
out
push
and
mov
ja
sub
inc
inc
pop
negb
or
imulb
and
cmp
inc
dec
inc
sti
lret
jle
push
filds
xchg
or
mov
mov
sub
popf
jno
pop
ljmp
outsl
jae
pusha
sahf
xlat
inc
push
mov
pop
test
cltd
repz
into
negl
add
xchg
xlat
test
inc
inc
aas
fsubrs
sub
jecxz
ds
xchg
lods
jae
cmp
dec
neg
bound
and
mov
scas
arpl
xchg
cwtl
jo
shll
mov
pusha
push
outsb
lods
sub
pop
leave
cmpsb
stos
int3
cmc
aaa
or
int
add
sub
and
test
sub
lret
mov
push
out
mov
mov
adc
xchg
popf
sub
push
mov
mov
int
pop
pop
fs
add
mov
ljmp
jns
aas
sar
adc
xchg
push
inc
jne
stc
inc
inc
mov
pop
push
cmc
test
jmp
incb
sub
sub
leave
push
push
test
adcb
xchg
xchg
cli
ja
pop
add
test
outsl
push
push
jp
pop
xchg
popa
lds
movb
jl
lahf
adc
outsl
sub
mulb
lret
jle
mov
inc
xchg
add
aas
sbbl
aas
sbb
mov
sbb
jecxz
daa
mov
cmpsb
mov
les
jnp
sub
dec
subl
sub
cmpsl
add
vmwrite
rcr
mov
dec
lcall
and
sarb
nop
enter
mov
loope
mov
fdivs
jmp
das
xchg
fpatan
adc
cmp
je
xchg
xor
nop
sahf
mov
test
jno
pop
lahf
pop
adc
cmp
mov
iret
repz
mov
xchg
out
in
addl
jecxz
in
pop
sub
push
and
stos
data16
dec
dec
or
push
xor
lahf
leave
daa
cwtl
and
orl
jp
je
inc
mov
in
stc
das
in
sbb
and
add
es
fbstp
and
sub
push
dec
in
lcall
xor
xchg
cld
rclb
lcall
xchg
sub
das
out
sub
stc
stos
pop
hlt
sbbl
xor
rcr
out
sbb
test
or
xchg
psrlq
lea
ja
push
dec
loop
stc
sarl
repnz
data16
add
sbb
push
aaa
sbb
mov
jo
jno
cmp
es
jl
pop
movsl
jb
sbb
into
adc
pop
int3
outsl
data16
add
mov
cmc
into
sbb
repnz
adcb
inc
adcl
xchg
fdivrs
test
mov
or
dec
adc
in
push
in
loopne
inc
push
loop
cltd
movsb
scas
sub
out
lret
je
js
sbb
mov
jg
mov
arpl
sbb
and
movsb
adc
stos
add
add
push
add
ror
ror
rcl
lret
rol
into
mov
out
js
push
js
ret
mov
test
mov
add
mov
pop
add
jge
and
cmp
or
and
xor
into
das
mov
add
ret
shr
dec
sahf
jmp
mov
sar
hlt
je
jg
out
and
incl
jae
and
mov
xchg
jbe
pop
jl
lock
sub
mov
ljmp
sarb
mov
lock
xorl
dec
mov
hlt
pop
hlt
out
or
leave
push
xor
les
into
inc
sub
mov
dec
mov
icebp
cli
mov
lock
pushf
inc
jg
leave
negb
faddl
fcompl
jno
shrb
push
cltd
divl
xchg
dec
xor
pop
movsl
mov
adc
imul
aas
out
mov
push
lret
cmpsl
pop
adc
fistpl
popa
lods
movsl
fs
push
daa
jbe
adc
jno
in
stc
in
icebp
adc
pop
sbb
out
jge
mov
sub
daa
sub
or
test
jl
std
adc
subl
in
pop
pop
add
lds
fldenv
fs
inc
push
lods
stc
out
es
cwtl
arpl
lcall
or
gs
fsubrs
mov
stc
push
fdivrl
dec
psubd
and
sbb
sarl
fwait
lock
mov
icebp
outsb
imul
adc
dec
in
dec
xor
cmp
jnp
push
aaa
ljmp
push
mov
adc
fwait
pop
mov
cli
or
pop
pop
adc
sub
mov
adc
dec
inc
in
popa
or
pop
jmp
add
lds
or
mov
mov
push
adc
or
hlt
inc
aaa
pop
stc
sti
insl
loope
cmp
mov
mov
pop
mov
add
or
test
ja
or
daa
cs
xlat
gs
lret
xor
out
lods
jp
inc
movsl
push
ret
in
xor
cmp
les
imul
pop
mov
jb
div
dec
adcl
lods
and
call
mov
insb
loop
std
daa
jmp
nop
mov
or
adcb
pop
cmp
add
call
mov
mov
jmp
sti
icebp
imul
mov
cmp
or
aam
add
xor
dec
scas
sub
sahf
inc
cli
lret
adc
nop
test
pop
jle
jp
cs
ja
mov
mov
inc
xor
xor
cld
xchg
mov
das
pushw
test
or
adc
sub
jmp
roll
mov
and
mov
repz
and
or
sub
gs
mov
sub
popf
test
in
scas
or
xor
add
dec
jnp
aam
idivl
lret
pop
jmp
int3
sbb
adc
int3
jle
std
inc
push
jae
sahf
lret
adc
xor
pop
pushf
enter
adc
mov
cmp
cmpsl
sub
pop
fdivl
mov
pop
pop
sahf
outsb
pop
repz
aam
and
js
push
push
jbe
mov
leave
rcrl
xor
out
sbb
sub
xchg
lods
mov
loopne
and
or
mov
cmpsb
lock
push
inc
dec
dec
mov
cmc
out
outsl
in
das
dec
xor
sbbl
lock
sbb
jmp
bnd
in
inc
std
or
dec
jmp
pop
cltd
fildll
lcall
addl
fwait
pop
out
mov
pop
aad
push
xor
inc
testl
cmp
mov
cmpsb
adc
sarb
mov
int3
aad
mov
lret
int
mov
fistl
arpl
mov
or
out
mov
out
pusha
or
lea
xchg
jp
sub
idivl
mov
cmp
pop
js
mov
add
rcl
jo
jnp
cs
xchg
in
jns
pop
movsb
fst
js
or
pop
neg
sbb
push
dec
jmp
add
jb
jb
mov
push
pop
jg
mov
fcomps
popa
outsl
popf
scas
sbb
xlat
cmp
or
push
loope
aas
push
cs
sbb
cld
pop
sbbb
pop
loope
cwtl
mov
lahf
add
ret
xor
xlat
xorb
lods
mull
in
loop
lcall
xchg
xchg
push
mov
mov
pushl
jmp
ret
ret
leave
lret
ror
cmpsb
movl
js
aam
and
mov
sub
pop
aad
mov
out
jg
pop
std
xchg
lahf
sbb
scas
sbb
and
in
hlt
lds
jmp
dec
inc
inc
mov
aaa
dec
adc
lahf
aad
shlb
out
xchg
pop
popf
cmpsl
cltd
icebp
inc
lea
aam
out
xchg
rorl
jbe
pop
test
jbe
adc
mov
ffree
add
fs
xchg
int
mov
adc
hlt
addr16
fcmovne
push
shl
pop
cmp
mov
pop
jp
push
sbb
mov
pusha
leave
lods
negl
sbb
je
add
mov
es
ja
adc
insb
addr16
out
ret
inc
cld
add
push
or
cmpsb
fiaddl
sti
or
loope
sbb
ficoml
inc
pushw
shrb
pushf
mov
xchg
push
mov
mov
mov
pop
xor
xchg
das
jnp
pop
stc
adc
mov
pop
xchg
push
jne
divb
call
cs
and
iret
mov
mov
push
jbe
mov
mov
jb
sub
into
js
xor
sub
enter
xor
lahf
sbb
push
jb
imul
add
sbb
or
push
int
imul
pop
xchg
mov
sub
ret
xor
outsb
bound
cld
cmp
insb
or
xor
mov
xor
jae
push
cmpsl
stc
and
push
jmp
mov
adc
cmpsb
in
fstpt
sti
mov
pop
fcomps
mov
aaa
ljmp
cmp
mov
shrb
ljmp
movsb
add
testl
mov
pop
repnz
mov
ja
ret
cltd
ret
insb
mov
dec
push
aaa
ret
xor
jbe
cmp
arpl
or
les
xlat
mov
fs
cmpsb
mov
test
mov
or
mov
jb
pop
sbb
mul
add
jge
dec
ret
jg
cmc
pop
cltd
pop
dec
ljmp
inc
ret
fstl
dec
lods
lcall
fldl
ficoml
cmp
sbbl
stc
andl
imul
shrb
add
or
in
ret
out
push
js
add
ret
movsl
cli
inc
adc
sarl
rol
fucompp
sub
test
add
lret
cmp
shll
or
adc
pop
addr16
fdivr
sahf
int
mov
andl
pop
fmuls
xor
pop
in
mov
adc
in
inc
add
loopne
dec
dec
mov
mov
cmp
inc
stc
xor
cmpsl
aaa
rolb
mov
jo
xchg
rcrl
mov
mov
sub
pop
jmp
es
mov
jbe
push
inc
xchg
mulb
test
rorl
xchg
gs
ja
cmpsl
cmp
mov
sub
call
push
test
or
add
mov
gs
gs
stos
jge
ret
jge
push
ja
mov
out
jp
inc
adc
jmp
add
shrl
inc
js
lea
lret
aad
fbstp
mov
jle
icebp
in
insl
std
fsubs
fs
mov
push
jno
mov
js
lret
mov
cs
clc
xchg
adc
pop
adc
push
sbb
addr16
xchg
in
lret
aaa
cmp
sti
mov
aaa
mov
mov
mov
test
dec
enter
jmp
repz
in
xchg
adc
mov
adc
cli
pop
jo
iret
lcall
popa
and
test
popf
stc
dec
adc
mov
repz
lret
dec
jne
inc
cmp
cmp
jl
jg
bound
sub
sti
aam
inc
ja
sub
ret
pop
call
cmpsl
push
mov
mov
cmpsb
jmp
xchg
inc
jg
sub
cmp
testb
sub
decb
jmp
xor
aam
dec
repz
cmp
fildll
adc
pop
pop
sbb
cmpsl
fsubrl
nop
pop
mov
mov
fistl
mov
test
add
push
add
ds
leave
int
fldenv
nop
sti
pop
cmp
js
push
js
xchg
pop
jns
bound
jecxz
jo
fxch
movsl
mov
fdivr
mov
cmp
or
pop
cmp
cmp
sub
stc
push
and
fstp
xchg
aad
mov
mov
loope
jle
add
jns
testl
add
xor
loope
xchg
sub
in
repz
and
subl
sub
aam
dec
ljmp
lods
idivl
mov
fxch
mov
mov
lea
inc
clc
dec
and
rcr
leave
jae
leave
int3
cld
in
dec
sub
jno
pop
imul
mov
test
repnz
iret
jle
out
jb
sub
adc
outsb
mov
repz
imul
hlt
cmp
loope
decl
jb
sbb
mov
subl
out
pop
mov
pushf
xchg
fs
jp
mov
sbb
es
movsb
mov
or
xor
adc
push
insb
rol
pop
ss
xchg
cwtl
mov
cli
int
mov
or
stc
jp
ljmp
dec
shll
and
fdiv
outsb
push
push
cwtl
sbb
cmc
sbb
add
or
pop
jmp
nop
je
movsb
inc
insb
in
lahf
xchg
pop
jns
int
or
mov
out
xchg
dec
lods
add
dec
jg
pusha
adc
xor
sti
es
call
jge
mov
dec
addr16
jne
jl
add
iret
icebp
stos
shlb
mov
clc
cmpsl
aas
xchg
sbb
test
and
pop
mov
dec
das
push
aaa
rcl
add
cs
mov
mov
jb
int3
shrb
stos
iret
loopne
inc
sub
into
add
or
andl
xchg
mov
popf
out
xor
adc
adc
popa
movsb
mov
es
sub
std
sub
xchg
outsb
dec
ljmp
daa
fs
ret
pop
adc
mov
jmp
popa
xchg
gs
xor
xchg
jb
fistpll
testb
xchg
pop
gs
jmp
cmpsb
hlt
cmp
test
xchg
pop
or
or
inc
out
arpl
outsl
or
and
imul
repnz
movsb
pop
jp
sbb
xchg
imul
mov
sarl
lock
clc
cs
mov
enter
sub
push
pop
dec
mov
dec
mov
sub
or
std
je
xor
movsl
cmpsl
popa
mov
mull
ja
daa
incl
sbb
sbb
dec
adc
ljmp
sbb
xchg
es
xchg
lods
aad
adc
fs
in
cmp
stc
fdivl
inc
sbb
nop
inc
and
lcall
or
push
scas
mov
xorb
icebp
mov
pop
aam
mov
aam
out
mov
roll
psubsw
mov
or
inc
and
mov
jg
sbb
fdivrs
xchg
add
fstl
iret
shll
imul
fisttpll
aaa
cld
insb
lods
leave
pop
cmp
dec
push
cmp
mov
lahf
stos
mov
cmp
mov
sub
jmp
add
shlb
mov
stos
pusha
leave
sbb
and
mov
scas
adc
cmc
cmp
push
in
add
and
dec
rorl
inc
loope
shrl
pop
and
cmp
xor
mov
cmc
mov
mov
and
insb
fs
push
shld
test
lret
loope
rcr
enter
lret
ret
xlat
jb
lds
mov
inc
mov
jmp
fcoms
or
jmp
mov
or
lahf
das
cmp
lret
pop
ja
leave
loop
aam
in
fisttpll
mov
push
pop
and
subb
adc
xchg
gs
adc
jl
lret
cs
dec
cmp
inc
push
in
std
xchg
xchg
fs
notl
jno
inc
dec
xor
sarl
rep
adc
sbb
int3
daa
xchg
or
push
jge
ljmp
loop
adc
mov
mov
rcr
int
cmp
inc
imul
stos
mov
dec
sbb
pusha
pushf
jno
outsl
mov
dec
inc
mov
cmpl
lea
jmp
rcl
ror
ror
sbb
out
clc
js
push
js
iret
mov
inc
test
cmpsl
inc
mov
mov
or
push
inc
arpl
ret
fidivl
jg
out
mov
out
or
pop
push
out
mov
dec
jecxz
jb
mov
dec
jne
push
dec
mov
mov
ljmp
movsb
mov
mov
cld
mov
pop
jne
pop
mov
xor
sub
jae
jp
push
mov
cld
mov
aaa
dec
leave
mov
test
xchg
cmpsb
roll
stos
out
fisubrl
aas
test
cli
mov
leave
hlt
lock
add
mov
out
adc
hlt
negl
dec
push
jecxz
imul
dec
push
mov
mov
jle
or
mov
cmc
xchg
mov
fcompp
stos
enter
and
dec
pushf
out
aad
jg
sbb
cmp
inc
jmp
jno
or
jnp
test
push
mov
fimuls
sbb
adc
scas
filds
jae
repnz
inc
test
aam
in
or
mov
adc
lds
lret
add
out
les
imull
int
lcall
inc
jle
test
divl
shlb
movhps
lock
or
lock
mov
stos
fmull
lret
aam
cmpsb
adc
insl
push
xchg
imul
inc
mov
in
jo
movsb
dec
jns
hlt
xor
xor
sbb
jmp
in
jecxz
mov
bound
mov
mov
dec
pushf
pushf
fwait
mov
mov
xchg
cld
mov
lcall
cwtl
mov
test
cltd
jle
cld
pop
in
outsl
pop
and
addr16
arpl
dec
mov
jb
pop
adc
cltd
mov
mov
and
fs
in
movsl
cmpsb
cmp
xchg
in
or
in
push
ret
jmp
jnp
ljmp
leave
bnd
jmp
into
mov
cmp
fistpll
xor
push
lods
call
and
and
mov
xchg
dec
es
sbb
mov
jbe
pop
mov
arpl
cmp
inc
fidivl
fidivl
fbld
cmp
sti
stc
movsl
ss
sarl
dec
imul
cmp
xchg
fwait
xchg
sbb
or
call
sub
ficoms
sbb
xchg
jp
and
and
cmp
inc
lods
arpl
dec
xchg
sub
popa
out
mov
fsubl
mov
std
rorl
jge
dec
push
outsb
push
ja
es
inc
in
push
cmp
mov
adcl
cmp
xchg
insb
imulb
adc
pop
stos
jle
sarl
jb
je
xchg
mov
pop
cmp
and
cmp
and
aas
sbb
lds
sub
jmp
adc
cmc
adc
jne
in
jb
test
mov
adc
pop
test
mov
popa
lods
xchg
clc
dec
mov
loopne
lods
pop
scas
int
mov
cmp
cmpsb
mov
sbb
ret
int
movsb
enter
mov
inc
jo
pop
cmp
xorl
int3
loopnew
or
jae
push
cmc
out
push
je
cmp
mov
imul
rcll
mov
sahf
mov
ss
inc
dec
dec
or
inc
mov
mov
mov
outsb
and
lods
and
jbe
xlat
packssdw
jp
in
shr
dec
icebp
ret
icebp
jae
jmp
call
insb
insb
push
sbb
mulb
dec
leave
fs
loope
mov
mov
fnstenv
leave
insb
cli
push
dec
jb
cmpsb
in
and
insl
cmp
out
xor
adc
mov
mov
cmpsb
xchg
mov
movsl
pushf
stos
es
dec
xchg
outsl
fbstp
mov
js
xor
shll
clc
cmpl
pop
mov
xor
xor
mov
pusha
xchg
cmc
xchg
dec
bound
loopne
jae
cmp
outsl
repnz
int3
dec
push
push
sub
cwtl
out
daa
ljmp
jb
daa
add
xor
lret
push
ficomps
xchg
aad
enter
push
push
hlt
nop
sub
inc
lcall
outsl
push
mov
and
xchg
aas
int
into
les
mov
scas
es
ds
lcall
inc
jecxz
pop
test
out
loop
sbb
mov
mov
inc
iret
pop
mov
mov
pop
sub
out
mov
sbb
ja
loope
mov
inc
adc
jge
inc
enter
add
ret
ror
fld
outsb
js
inc
pop
push
ds
push
cmpl
jl
js
adc
scas
dec
in
mov
push
sub
mov
inc
jecxz
mov
pop
xchg
pushf
sbb
mov
mov
mov
jnp
adc
jecxz
aad
arpl
add
jmp
ret
adc
rcl
push
or
loopne
dec
nop
insb
lods
setle
ficoml
mov
popf
push
push
in
mov
xchg
mov
int
je
test
scas
hlt
jb
outsb
ljmp
sub
loopne
loopne
outsl
pop
mov
jne
cwtl
or
or
xlat
loope
out
aaa
dec
clc
mov
lods
push
js
xchg
scas
or
push
push
cmpsb
scas
movsb
int3
and
fildll
push
or
repz
sub
push
adc
add
adc
adc
adc
call
push
lret
dec
shlb
push
sub
ja
push
call
dec
mov
aad
xchg
fstl
fcmovb
js
sbbb
rolb
lock
xor
mov
sarl
cmp
les
loope
cli
inc
mov
test
sub
incb
and
aaa
xor
adc
xor
jae
mov
xchg
add
jle
mov
jae
push
push
pop
push
sbb
clc
out
lea
in
fcoml
pop
dec
jle
cs
aas
xor
adc
sti
sub
mov
popa
dec
dec
push
fcomp
mov
sbb
inc
or
mov
ds
sbb
jno
movsb
incb
bound
arpl
cmp
sbb
mov
cmpsl
mov
movsb
and
xor
sub
jp
inc
js
lods
test
cmp
add
mov
in
cmp
test
out
sbb
inc
push
mov
jg
nop
mov
and
xchg
rcr
lds
mov
lds
fsubl
test
sti
add
jae
or
test
pop
and
xor
jo
inc
rcl
ret
jae
stc
add
mov
pop
pusha
out
movsb
push
sub
jne
jb
scas
sar
bound
std
imul
push
jbe
cmp
adcb
sbb
jbe
mov
or
imul
pushl
icebp
jae
loope
mov
add
or
mov
pushf
adc
mov
dec
and
das
xlat
es
xchg
inc
xor
push
jno
inc
sbb
push
pop
pop
jp
pop
adc
fildl
cmp
xchg
mov
lret
pop
adc
cli
cmpsl
pop
dec
push
pop
xor
clc
pop
push
jp
jbe
int
mov
and
subb
jle
stc
imul
push
lret
mov
ret
or
scas
jo
into
into
push
aaa
ja
push
mov
mov
arpl
mov
mov
dec
mov
or
out
mov
mov
mov
lret
fsubl
out
insb
jns
mov
fsubp
pop
ficoms
xchg
adc
fisttps
adc
je
push
loope
mov
and
add
lds
loop
rcl
cmp
jbe
out
push
and
mov
or
cmp
xchg
push
inc
hlt
pop
push
jmp
pmullw
lods
xchg
dec
cmpsb
fistl
insb
lds
inc
xchg
mov
add
int3
cmp
fwait
stc
mov
push
mov
jno
adc
addr16
roll
fistpll
cmp
sub
jno
movb
test
pop
fidivrs
lcall
jbe
xchg
fdivs
out
sub
or
inc
pusha
ficompl
pop
insl
push
dec
mov
sub
stos
adc
or
popf
mov
popa
xor
fldenv
xchg
or
ja
push
aas
ss
fwait
and
fstps
mov
push
mov
hlt
sbb
insl
inc
lods
adc
xor
mov
pop
popa
pop
sti
push
jecxz
loopne
int
enter
cmpsb
jmp
popa
je
addr16
sahf
pop
push
cmpsb
hlt
jne
fists
jp
sbb
outsb
cmp
out
xor
xchg
mov
lds
ret
push
mov
and
or
rcr
add
push
xchg
mov
pop
fst
inc
jg
jb
mov
xchg
pop
pushf
mov
inc
ret
inc
add
adc
stos
add
inc
mov
xchg
stos
daa
xor
xor
and
mov
movsl
out
out
je
lea
jmp
ds
enter
int
xor
pop
ds
xor
xchg
push
js
lods
dec
jne
inc
scas
rorb
fsubr
int3
lea
bound
out
ret
fistpll
jae
mov
jle
cwtl
push
shlb
or
imul
and
or
sbb
jnp
mov
in
dec
jne
and
imul
popf
sub
daa
inc
popa
add
jnp
push
cs
push
insl
in
cmc
lds
sub
addr16
shll
cltd
mov
sbb
jns
sbb
mov
mov
sti
xor
stos
neg
ja
das
push
push
pop
xchg
xchg
aad
out
xchg
pusha
jbe
ret
sub
dec
jns
adc
fwait
nop
aaa
iret
test
fldenv
or
adc
lea
outsb
mov
subb
sub
std
int
cmp
imul
imul
lds
dec
lds
aad
adc
pop
xchg
leave
orl
push
insl
adc
sbb
clc
xchg
push
imul
fsubr
test
ret
xor
dec
sub
test
mov
scas
loop
les
stc
scas
cli
xlat
lret
sbb
mov
les
add
inc
jbe
sti
aam
jnp
in
mov
mov
sbb
jo,pn
aad
xlat
cmc
dec
xor
clc
fists
cld
and
sbb
cmp
sbb
dec
in
dec
insl
and
sbb
subb
inc
jp
fisubl
jmp
jae
dec
mov
add
dec
stos
les
xchg
fmuls
adc
faddl
add
lods
movsl
push
pop
ret
aaa
stc
sub
sub
jge
fwait
xchg
push
out
add
bound
mov
cld
and
ror
aad
ret
fwait
sub
push
sbb
stc
inc
loopne
mov
negl
push
out
xchg
dec
dec
leave
jmp
jno
inc
add
add
sub
into
sub
pushf
mov
scas
pop
jne
pop
xchg
mov
add
lods
test
pop
fadds
rorb
jl
out
testb
cmp
xchg
xchg
leave
mov
ljmp
xor
daa
push
in
lret
inc
adc
repz
or
enter
pop
test
lret
aaa
or
inc
xlat
add
jnp
mov
inc
add
or
mov
push
cld
sub
pop
stc
jb
dec
in
or
scas
fcmovnbe
adc
inc
add
xlat
fucomi
adc
mov
imul
jp
sarl
inc
shll
jl
mov
imul
mov
jp
orb
mov
out
aaa
mov
mov
inc
sub
push
mov
pop
shlb
mov
adc
jns
shrb
mov
dec
xor
fsubrs
mov
test
and
dec
sub
fs
jmp
cmp
stos
sub
mov
cwtl
jbe
test
push
mov
fnstcw
cmp
mov
xchg
std
jg
fwait
out
sbb
pop
jnp
add
pop
lea
or
and
iret
inc
jo
int3
ret
mov
mov
push
fwait
cmp
enter
ja
mov
mov
gs
and
loop
aad
ss
inc
out
mov
inc
mov
xchg
lods
movsl
pushf
stos
stc
jae
ret
lahf
out
rclb
lods
sbb
pop
inc
xchg
push
mov
jge
cmp
sub
or
jl
cmp
push
lcall
outsb
vpunpcklqdq
push
cmpsb
jmp
xchg
push
vpunpckhbw
dec
adc
mov
jb
cltd
iret
daa
bound
xchg
repnz
jl
xor
inc
and
std
add
dec
lock
xor
xor
bound
scas
fimull
add
and
ret
mov
sbb
inc
imulb
fwait
mov
repnz
cmpsb
xchg
adc
cld
out
fidivl
test
push
cmc
pop
xor
and
jmp
ja
add
shll
imul
iret
mov
mov
jo
lock
mov
idiv
push
test
int3
and
dec
xor
mov
aam
push
fwait
jne
adc
mov
rorb
add
jmp
cmp
ret
rol
rcl
int
push
nop
fidivs
push
pushl
js
push
js
mov
jg
out
dec
lea
pop
cmpsb
rclb
jno
mov
ficoml
cwtl
cmp
imul
push
dec
inc
inc
fisubrl
adc
test
repz
fstp
or
rcr
mov
cltd
lret
mov
movl
sub
dec
sbbw
rcll
and
mov
pop
rcrb
out
mov
mov
jb
mov
fdivl
std
dec
aaa
adc
mov
push
sbb
add
xchg
pusha
sbb
jns
mov
lods
ss
cmc
mov
mov
cmp
mov
lret
out
movsl
daa
sub
dec
push
in
cmp
jmp
int3
and
xchg
jo
in
pop
push
sbb
in
stos
add
je
enter
dec
cmp
shll
mov
inc
sti
dec
dec
and
inc
and
in
pop
inc
and
fisttpll
loop
mov
sbb
shrb
repz
shll
add
cmc
mov
or
mov
pop
add
int
add
push
pop
or
imul
ficompl
arpl
mov
daa
or
test
lea
inc
test
scas
mov
inc
or
mov
mov
jp
mov
add
subl
test
dec
push
xor
pushf
insb
insl
popa
rolb
inc
repnz
lods
scas
jns
loop
mov
pop
xchg
pop
pop
lret
aam
sbb
nop
cmp
xchg
stos
jne
repz
orl
mov
movsl
mov
and
push
jb
dec
and
sti
fs
shlb
push
xchg
mov
js
loopne
in
xchg
jmp
and
ds
outsb
jmp
and
cli
arpl
shll
and
rcrl
inc
mov
ret
out
pop
jge
sbb
xor
jge
jge
icebp
aaa
xchg
mov
mov
out
jg
lods
pop
jp
xchg
imull
xlat
lea
insb
test
iret
rcr
js
pop
jns
out
ss
mov
mov
mov
mov
inc
lock
lcall
test
add
fst
dec
sub
aad
mov
push
inc
pop
loopne
std
fistpl
stos
ss
ret
icebp
in
inc
and
in
outsl
lock
mov
sahf
pop
stos
into
outsb
leave
and
push
into
adc
cmp
popa
adc
pop
mov
inc
mov
in
repz
push
sub
xor
es
out
scas
pop
push
sub
push
sbbl
test
stos
jns
dec
push
lret
leave
fcmove
cmpsb
lahf
cmp
pop
test
lcall
ss
imul
adc
dec
scas
mov
xor
push
xlat
or
in
jle
sub
clc
iret
es
cltd
in
add
dec
adc
push
aas
mov
mov
pop
das
or
xor
or
push
jbe
lret
mov
shlb
cmp
or
mov
mov
sub
sbb
xlat
xchg
or
dec
in
or
mull
std
test
mov
dec
outsl
iret
inc
movsl
mov
sahf
std
mov
hlt
out
jle
lock
lret
loopne
dec
ret
cmp
push
cli
mov
popf
jne
xchg
sbb
ss
aad
sti
jl
push
rcll
or
and
mov
cs
hlt
outsl
sub
dec
mov
cli
roll
sahf
inc
daa
xchg
test
push
mov
pusha
cltd
xor
xchg
sub
cs
mov
xor
sbb
lods
pop
out
cs
jg
pop
xlat
inc
outsl
push
mov
pop
lea
push
jp
mov
xor
sbb
lds
jnp
mov
push
xchg
lcall
ja
test
flds
mov
xchg
test
pop
inc
push
push
imulb
stos
fsubrs
adc
xor
psubusw
das
mov
sub
or
ror
je
roll
or
sub
insl
jno
fldcw
jbe
mov
cld
cmp
lret
popf
sbb
xchg
xchg
and
pop
xor
mov
mov
add
sbb
sub
stos
or
rcl
mov
insb
mov
jge,pn
jl
mov
pop
adc
std
mov
imul
mov
sbb
scas
ret
and
sbb
jge
jle
xchg
xor
dec
jecxz
fimuls
dec
jmp
hlt
repz
out
lods
lcall
mov
jmp
leave
cmp
ret
leave
leave
leave
lret
int
ret
shlb
js
jl
js
rcl
push
push
add
fmull
insb
push
jne
loopne
enter
cmpsl
rep
push
dec
lods
mov
inc
bound
or
sti
and
aaa
mov
xlat
or
sbb
fwait
sbb
mov
push
rcll
xchg
sbb
sbb
lret
adc
sbb
filds
out
out
lods
mov
lods
push
loopne
sub
xor
pop
cmp
pop
movsb
sbb
pusha
xor
sbb
mul
dec
loope
xchg
or
pop
jns
aas
inc
sub
mov
or
cli
mov
xchg
inc
push
addr16
flds
subl
subb
loopne
mov
loop
std
sub
sbb
int3
stc
cmpsb
pop
xor
inc
fistpll
insb
push
push
mov
test
and
leave
lret
xor
int3
jmp
fs
rorb
stos
and
lea
cmpsl
jns
and
lret
sbb
mov
lcall
xor
movsb
cmp
hlt
and
and
rorb
mov
push
mov
cmp
jge
mov
jb
incb
loopne
arpl
xchg
test
or
leave
fs
mov
sub
and
xchg
jge
push
add
shll
push
xor
clc
xor
enter
xor
aaa
cwtl
xor
stc
orb
mov
dec
negb
pop
shlb
stos
dec
dec
outsl
dec
dec
jb
ds
dec
cmpsl
jb
jp
fs
add
je
test
cmc
mov
cwtl
sbb
mov
mov
push
mov
scas
sub
insl
fbstp
mov
lret
ret
test
ret
pop
dec
ja
dec
imul
push
and
push
fmuls
in
movsl
push
fsubs
pop
push
aam
xchg
lods
dec
daa
movsl
push
sub
lds
pop
rcrb
movsl
psrlw
and
into
sub
fs
adc
icebp
scas
dec
inc
jne
enter
or
mov
fldt
sbb
mov
adc
xor
arpl
xchg
int3
rorl
add
xchg
test
stos
fldt
dec
ficompl
and
sub
dec
js
ds
icebp
mov
pop
cmpsl
dec
ficoms
scas
adc
or
bound
mov
mov
and
sub
imulb
xchg
mov
int3
push
sub
pop
mov
sbb
mov
jmp
pop
sti
mov
xorl
scas
pop
or
pop
cmp
sti
ret
out
cmp
cmp
sar
popa
dec
test
aam
dec
pop
aaa
aaa
es
data16
mov
or
cs
scas
popa
lcall
add
mov
dec
dec
gs
and
int3
test
mov
mov
in
jo
sub
flds
ret
cltd
mov
add
add
or
lods
sub
inc
add
dec
ds
pop
sbb
or
in
mov
repnz
mov
enter
pusha
dec
and
mov
mov
outsl
testb
jecxz
xor
insb
mov
repz
sbb
or
insb
cld
iret
or
test
gs
int
xchg
mov
xchg
scas
hlt
or
mov
lcall
mov
mov
and
pop
lret
cs
outsl
jbe
push
rcrb
das
jg
fldt
or
fdiv
ja
xlat
sahf
adc
pushf
pop
iret
loope
cmp
out
int
loop
ds
and
add
std
xlat
add
ffreep
push
and
iret
adc
jge
pop
xor
xchg
and
push
out
xor
dec
sub
les
sub
shl
out
mov
popa
sub
stos
inc
enter
in
mov
lcall
clc
mov
push
dec
and
jmp
std
push
mov
mov
add
push
pop
dec
or
dec
rcrb
scas
lea
loop
mov
push
imul
push
lcall
negb
xchg
xchg
mov
ds
xchg
out
stos
push
popa
mov
dec
cltd
inc
cltd
add
jae
lret
lret
clc
adc
ja
cld
xor
mov
xor
add
mov
mov
mov
lea
mov
jmp
lret
rcl
fnstcw
stc
mov
dec
nop
js
push
js
mov
mov
xor
or
xchg
dec
xlat
add
sbb
xor
xchg
adc
jbe
jge
mov
ret
or
jge
icebp
dec
xchg
xchg
push
push
mov
xor
jno
cltd
aam
mov
fmull
shll
mov
insl
test
pushf
int3
jge
jbe
ret
jmp
inc
xor
loop
dec
ljmp
or
out
mov
ss
pop
outsb
fsub
sbb
sbb
mov
add
push
cld
enter
pop
mov
jns
je
je
lret
mov
sahf
mov
outsb
mov
hlt
test
adc
jae
sub
push
cmc
stos
jle
or
add
js
add
dec
inc
add
sub
or
jp
imul
imul
clc
mov
jno
adc
rcrb
mov
add
ljmp
pop
daa
pop
or
pop
loop
imul
or
jnp
or
adcl
out
mov
xor
push
or
pop
jmp
ja
fidivl
mov
push
sbbb
cmp
inc
cmp
dec
pushf
test
push
or
mov
cmpl
mov
dec
psadbw
pushf
loope
fdiv
add
add
mov
jmp
clc
int
push
xchg
pop
mov
repnz
in
in
jl
sti
call
shlb
test
mov
mov
pop
and
cmpsb
mov
xchg
xor
add
and
mov
shl
jns
int3
or
pop
cltd
add
lods
add
mov
in
enter
mov
shrb
addr16
sbb
js
push
jl
shll
mov
pop
xor
cmp
sahf
fisttpll
or
or
sub
icebp
mov
loop
ja
dec
sub
stos
xchg
mov
add
lea
andl
add
and
adc
popf
inc
xor
pop
mov
pop
loop
jns
mov
scas
stc
mov
or
cmp
jp
mov
dec
fisttpl
sub
and
push
outsl
mov
pop
cs
aam
mov
mov
stos
push
lret
fwait
push
subl
insl
mov
push
or
push
sub
sbb
pop
gs
clc
xchg
icebp
cld
sub
add
int3
pusha
mov
add
jnp
rcr
pop
inc
ret
addb
scas
xchg
mov
xchg
mov
sbb
push
dec
dec
mov
das
or
xchg
stos
mov
je
push
test
fstps
jae
jmp
fiadds
jbe
jg
mov
ret
jmp
add
jns
loope
fneni(8087
pop
and
adc
shll
fcompl
ss
std
cmp
in
pop
xchg
pop
adc
lods
loope
mov
or
test
mov
lock
loop
pop
sbb
sbb
inc
insl
mov
adc
loopne
enter
out
adc
ljmp
jl
add
loope
fnsave
jle
orl
movq
jle
icebp
out
jb
leave
fsubs
insb
sbb
inc
and
popa
push
repz
sbb
push
cmp
dec
xor
add
iret
cmpsl
xchg
mov
imul
nop
ret
out
cmp
mov
pop
mov
and
out
leave
aaa
cld
or
das
ret
add
push
aad
or
in
into
push
xchg
sbb
pop
or
out
popw
aad
jae
subl
test
sbb
push
push
mov
mov
loop
sub
popl
cmc
stos
ljmp
xchg
arpl
scas
gs
push
xchg
adc
mov
rolb
sbbl
out
jae
inc
add
inc
ror
andb
push
xor
and
dec
adc
negb
ja
cmp
testb
hlt
xor
popf
ret
stos
add
inc
inc
xor
push
xlat
xchg
outsl
push
cmp
loopne
mov
pop
cmp
mov
push
adc
arpl
pop
mov
fisttpll
mov
dec
push
mov
lret
shll
repnz
mov
imul
add
dec
push
fsubp
xor
mov
mov
mov
jmp
vpsrld
fcmovbe
leave
sarl
cmp
cmp
js
push
js
test
outsb
jle
test
sbb
ja
xchg
push
arpl
dec
mov
pusha
pop
pop
addl
sbb
and
jnp
fsubrs
or
push
mov
mov
pop
lods
jmp
lods
xor
icebp
dec
and
push
mov
or
idiv
jge
and
jno
in
out
mov
loopne
xlat
pop
pop
or
sti
mov
int
insb
jecxz
and
jmp
jo
rorl
dec
mov
mov
add
cmpsb
mov
xchg
aad
arpl
jnp
xchg
jbe
mov
pop
and
fisubrs
repz
mov
sub
and
shll
shll
rcrb
cltd
sub
loope
in
xchg
pop
cmp
fnstsw
cli
inc
arpl
or
call
int
arpl
mov
push
sub
sbb
ret
push
pop
cmp
xchg
xchg
add
adc
or
xchg
imulb
jle
add
xor
jecxz
pop
sbbb
test
lock
mov
dec
add
stc
sbb
cmp
sub
xchg
inc
arpl
test
rclb
push
mov
das
in
mov
push
ret
pop
add
jb
pop
scas
outsb
and
ret
test
or
movsl
push
push
push
outsb
scas
popa
aad
add
or
lahf
out
and
cmpsb
xchg
xchg
push
lahf
pop
mov
mov
in
xchg
mov
repz
mov
loop
insl
sub
adc
sub
enter
outsl
test
test
mov
outsb
std
pop
or
inc
xchg
cmp
in
scas
repnz
xor
dec
cmpsb
cli
sarl
negl
mov
or
dec
mov
dec
sbb
inc
je
push
mov
orb
xchg
add
mov
push
mov
das
or
push
xor
test
dec
jne
into
sub
mov
push
push
loopne,pt
cmp
jb
fdivrp
sbb
cmpsb
jge
mov
cmp
push
fisubrl
mov
xchg
mov
xor
ffreep
add
cmpb
outsl
imul
dec
lock
pop
sub
pop
adc
xlat
pop
push
dec
rcl
call
adc
test
inc
lock
pop
jne
lds
sahf
pusha
ljmp
xor
cwtl
adc
mov
test
mov
mov
rcr
sahf
push
and
ds
push
sbb
push
mov
adc
repz
outsb
out
fistpl
cmp
push
pop
jae
fdivrs
inc
aaa
stc
jbe
enter
or
movsb
mov
cltd
mov
mov
into
cmpsb
ds
repnz
push
xchg
ret
pop
sub
cmpsl
js
fnstenv
loopne
stos
int3
jns
cld
movsl
mov
mov
or
rol
push
pop
faddl
hlt
js
loope
inc
test
pop
movl
out
mov
dec
dec
ret
jecxz
insb
sub
outsb
aad
and
ljmp
mov
mov
sub
sub
fldcw
popa
xor
xchg
add
mov
dec
push
jne
gs
inc
jo
sub
inc
mov
fdiv
dec
and
out
mov
push
pop
inc
scas
lods
jae
xor
scas
mov
mov
lahf
rolb
mov
push
pushf
dec
sbb
addl
in
cmp
ja
jle
xchg
popa
adcb
lods
bound
movsl
jae
aad
sbb
mov
jo
test
subl
orb
add
jmp
das
sahf
lcall
xor
outsl
inc
aas
pop
or
jmp
cmp
das
xchg
movsl
outsb
sub
mov
ror
fcompl
mov
add
cmp
fwait
lea
test
aad
test
das
inc
jbe
dec
movsl
mov
dec
enter
and
int
push
xchg
in
jae
lret
daa
enter
cwtl
iret
dec
mov
adc
addr16
repnz
loop
pop
xor
cs
push
jnp
mov
idiv
in
mov
jo
adc
push
fprem
lods
inc
pusha
or
ret
push
inc
pop
not
sub
idivl
pop
into
or
jb
xor
pusha
xchg
ret
push
insl
mov
mov
mov
sub
dec
mov
mov
mov
jmp
ror
ror
rcl
rcl
cld
in
lock
stos
sahf
js
push
js
ficompl
jae
jae
int3
jge
sarl
add
jmp
cmp
sbb
sub
or
popf
push
bound
sbb
pop
fcoml
sub
adcb
enter
cmp
leave
pop
vpackuswb
ss
test
sbb
mov
inc
or
fwait
aam
pop
or
add
test
push
mov
inc
clc
aas
not
mov
mov
aam
or
imul
lds
adc
cltd
xor
mov
test
add
add
int
cmp
out
cmpsb
pop
call
adc
adc
mov
jno
push
and
adc
xchg
popf
out
rorl
pop
inc
jbe
jae
dec
pushf
repnz
mov
push
fisubs
cs
decl
fldl2t
push
push
dec
ss
fldenv
mov
js
fs
and
xor
sub
into
rorb
xchg
xchg
mov
xor
jne
adc
fdivrs
xchg
cmp
aam
sbb
out
shl
inc
pusha
push
ljmp
je
int3
lahf
cmp
nop
loopne
lcall
xor
pusha
lea
adc
dec
lret
sbb
lahf
mov
xchg
mov
mov
xchg
push
leave
aam
hlt
rolb
ja
test
stc
add
fs
idivl
sbb
sub
int3
and
inc
cmp
cmpsl
cli
or
xorb
mov
lods
loopne
xchg
pop
dec
cmpsl
bound
add
in
mov
xor
rcll
mov
xchg
jg
mov
jne
lds
sbb
dec
popa
inc
cmp
cld
mov
mov
insl
push
inc
popa
push
inc
cld
aam
adc
shl
jbe
inc
inc
add
and
ljmp
and
jmp
or
cmp
mov
or
int
lahf
push
icebp
push
mov
in
rcrb
mov
and
daa
inc
mov
andnps
pop
aad
pushl
xor
xchg
out
jecxz
pop
sub
shll
aas
xor
out
outsl
push
ljmp
mov
testl
lret
inc
hlt
inc
adc
data16
loope
pop
and
xchg
fucomi
loop
outsb
rcrb
jb
enter
ljmp
lds
ja
loope
mov
mov
cmc
subb
enter
sti
pop
out
jl,pn
rcr
dec
out
loop
test
push
cmp
mov
sbb
bnd
sbb
imul
pop
push
adc
sbb
test
enter
inc
add
mov
mov
lds
mov
and
cli
jo
popf
mov
xor
or
movsb
xor
gs
fimull
js
rclb
mov
and
cmp
add
pop
and
rolb
mov
in
push
testb
xchg
test
rorb
in
pop
xchg
xor
mov
jbe
jns
push
adc
aaa
sub
adc
arpl
jb
test
lods
sub
xor
push
fwait
mov
ljmp
cmp
insl
mov
pop
adc
or
mov
stc
sbbb
ss
push
push
inc
adc
bound
dec
cltd
jnp
inc
mov
rol
jg
xchg
imul
and
sbb
pop
insl
mov
arpl
jae
xor
aam
jne
xchg
lret
jl
and
testb
xchg
sbb
dec
ret
ljmp
cli
sbb
sbb
lods
fcomps
in
xor
aam
pop
dec
jb
setne
lret
mov
roll
lcall
cmc
cwtl
adc
xor
repz
mov
pop
insl
jo
mov
pop
std
sbb
push
dec
lods
in
push
jae
xchg
outsl
pop
aam
jne
xor
xlat
mov
mov
outsb
sub
in
stc
addr16
cmp
cmp
sub
dec
xor
mov
inc
push
lods
jecxz
adc
scas
aas
sub
xorb
add
sub
sub
cmp
xor
hlt
test
cmpsb
imul
sbb
jb
jae
pop
loop
in
arpl
pop
cli
add
out
flds
push
jns
mov
jl
jno
jmp
dec
cwtl
fwait
and
loope
enter
xor
add
mov
mov
mov
jmp
lret
lret
leave
leave
leave
cmp
popa
int
ljmp
js
add
vmovq
add
and
inc
cs
fstpt
andl
outsb
xchg
ret
push
scas
pusha
jge
or
pop
and
pop
and
adc
jns
push
push
int
or
ss
fstpl
rcll
test
shrb
push
icebp
jb
dec
insb
cmpsl
sub
aad
imul
ret
xor
jne
adc
cli
mov
xchg
orb
repnz
in
pushf
push
scas
pop
jb
shlb
sbb
in
push
inc
xchg
adcb
mov
cmp
jo
dec
lret
jle
push
dec
inc
push
xchg
fiaddl
into
xchg
rcl
cmpb
or
inc
in
lahf
loop
faddl
and
fidivrl
outsl
dec
aam
shrl
or
loope
xorb
push
push
pop
pop
dec
adc
insl
sbbl
notl
mov
int
mov
jecxz
push
fsubl
imul
sahf
sub
jge
adc
sbb
data16
and
and
fwait
jo
pop
adc
into
sti
mov
mov
cmp
inc
ret
lods
xor
hlt
cmp
out
mov
jge
jge
mov
inc
imull
outsb
loopne
sub
xchg
jb
xchg
mov
adc
shll
repnz
in
sahf
fstpt
bound
push
mov
xchg
sbbb
fwait
add
push
cmp
mov
jmp
test
and
pop
sub
int
out
push
ja
dec
pusha
inc
sbb
mov
adcb
fists
or
test
fsubrs
adc
push
cmpsl
pop
stos
jp
mov
cltd
sbb
ret
push
cld
cmpsb
dec
sub
in
cld
adc
jns
lret
mov
pop
xchg
mov
sub
in
mov
test
stos
in
inc
int
sbb
mov
out
jne
mov
or
jl
movsl
push
incb
jge
xchg
stos
sbb
mov
stos
mov
xor
std
push
test
fcoms
mov
jbe
xchg
jo
sub
imul
out
dec
je
or
aas
push
in
push
mov
xor
scas
push
loope
cmp
mov
pop
mov
and
sbb
xchg
ljmp
push
xchg
mov
enter
jo
psrlq
ja
jle
mov
outsl
fchs
push
mov
pop
mov
fistpl
pop
add
mov
push
loope
notb
add
push
fnsave
jb
out
jno
aaa
or
lods
xchg
ljmp
fdivl
ljmp
xor
notl
sbb
pop
repnz
or
pop
subb
pop
test
xchg
mov
mov
lea
or
or
xchg
push
scas
aad
sub
addr16
insb
xchg
and
pop
adc
sbb
xchg
cmp
mov
fbld
dec
out
sbb
inc
and
enter
mov
adc
gs
lods
rolb
leave
das
sub
adc
xor
in
sahf
add
push
sti
ja
xor
add
adc
mov
xchg
lret
pusha
scas
sub
in
pusha
gs
inc
jg
insb
test
gs
cmpsl
fsubrp
dec
sbb
scas
push
pextrw
push
out
jnp
sub
jno
jle
mov
jle
xor
sarl
movsb
push
mov
inc
add
sub
mov
call
leave
out
pop
jl
fists
add
mov
push
fwait
in
test
iret
je
and
jb
push
dec
lea
rorb
fistpll
stos
adc
adc
aam
lret
xor
fistpl
push
adc
lret
in
adc
mov
aam
jge
sub
lock
adc
push
push
sub
lock
add
push
inc
je
pop
jp
out
push
fmul
idivl
subb
daa
int
and
xchg
mov
xor
cmp
push
repz
lods
movsl
adc
rcrb
inc
mov
mov
imul
out
jl
shlb
cmp
test
xor
xlat
pop
push
xchg
fistl
in
mov
js
loopne
mov
sub
cltd
xchg
hlt
ret
in
cmpsl
adc
mov
inc
add
inc
loopne
push
add
ret
rol
dec
pop
fwait
or
scas
enter
js
push
js
scas
aam
jmp
sysenter
pop
sbb
xor
mov
push
rcl
mov
inc
mov
notl
or
xchg
in
mov
imul
aam
clc
sbb
xlat
push
mov
fistl
jle
lods
mov
test
sub
mov
clc
pop
jle
push
adc
mov
loope
cmc
sbb
xchg
push
or
cmp
aas
adcb
addr16
and
aaa
imul
mov
mov
mov
inc
ja
xchg
sbb
je
ljmp
mov
test
shl
push
xchg
imul
mov
mov
cmpsb
jne
movl
pop
lahf
stos
aad
add
mov
sub
enter
out
test
inc
mov
mov
mov
bound
dec
nop
push
jmp
lret
insb
cs
enter
nop
jg
sub
dec
push
mov
push
stos
mov
mov
mov
xorl
cmp
mov
mov
jns
and
sti
shrl
mov
pop
sbb
ficoms
fcmovu
mov
sub
popa
rorb
imull
lahf
dec
imul
outsl
jb
pop
outsb
in
mov
xchg
cmp
fsubrl
mov
mov
adc
call
dec
lcall
iret
xor
inc
jno
inc
int3
lret
sbb
movsl
test
xor
mov
loopne
cld
or
into
pcmpeqw
nop
popa
lods
out
pop
cmp
mov
ss
xchg
stos
in
pushf
pop
pop
bound
xor
mov
or
xorb
lahf
testb
adc
add
mov
jge
test
xchg
cmpsl
mov
sti
pop
mov
push
xor
or
mov
inc
repz
cmp
and
addr16
sbb
test
ja
pop
xor
xor
push
scas
jecxz
fildl
fisttpl
clc
and
push
shl
mov
je
in
adc
adc
inc
fdivrp
data16
inc
sbb
mov
adc
aaa
mov
add
mov
repz
xchg
in
jmp
ret
imul
cmp
or
and
cmpl
mov
add
jne
addr16
das
daa
out
mov
in
pop
loope
adc
mov
lods
out
dec
test
clc
pushf
clc
mov
push
jp
mov
shll
adc
or
movsl
scas
pop
ljmp
js
adcb
rorl
movsb
cmp
jmp
lret
rorb
repnz
mov
bound
cmp
and
rorl
shrb
xchg
pop
stc
in
pop
xchg
in
adc
testl
push
pop
adc
insb
ljmp
sub
pusha
jecxz
mov
dec
pop
cmp
mov
shlb
xorb
in
cltd
cmc
test
lahf
shlb
pop
icebp
adc
dec
and
xchg
sbb
pop
cmp
xchg
test
mov
leave
sbb
xor
cmp
sbb
sbb
push
xlat
divl
leave
rcll
cmp
pop
lahf
lret
inc
jo
addb
dec
sub
pop
xor
fwait
pop
stc
ret
in
or
fnstenvs
in
out
pop
inc
cli
mov
pop
mov
adc
mov
inc
adc
xor
fisubl
lret
or
test
mov
aas
mov
mov
pusha
xchg
pushf
mov
xor
loope
pop
aas
arpl
xchg
push
dec
and
mov
or
add
in
and
repnz
test
adc
push
adc
lods
movsb
or
xchg
add
mov
adc
cmp
mov
sbb
lds
push
mov
aam
cmc
xor
cltd
mov
sub
loop
rcrb
cld
mov
shrb
xchg
imul
inc
sbbl
rorb
xabort
ljmp
push
sub
or
call
or
imul
sarl
jle
fcoml
xor
sub
pushf
sub
icebp
sub
cld
out
stc
push
jle
loope
pop
pop
aad
inc
mov
dec
and
ljmp
dec
sub
mov
add
mov
dec
jae
dec
clc
mov
jmp
int3
sarl
ror
rcrl
xlat
call
lock
js
push
js
mov
pop
sub
mov
xchg
and
loopne
mov
aas
push
daa
dec
jae
ja
ss
sahf
gs
repnz
sub
mov
mov
ficoms
cmp
pop
aad
sti
lahf
imul
mov
nop
pop
push
aad
pushl
or
ret
ret
push
int3
sti
int
ja
xor
out
add
movsb
or
sti
jne
addr16
pop
sarl
mov
cwtl
sti
adc
pop
sbb
pusha
pop
push
push
mov
fdivrl
filds
popf
jne
cs
jbe
fdivrl
inc
lret
popf
sub
int3
dec
les
push
dec
add
add
inc
loop
and
cmp
cli
mov
popa
fsts
jnp
add
mov
push
stos
mov
mov
mov
pusha
pushf
imul
xor
push
rcll
inc
fwait
inc
jg
push
in
addr16
add
das
push
jb
rorl
bnd
mov
inc
and
pop
sub
je
rolb
pop
jge
out
mov
mov
and
rcrl
mov
in
aas
gs
mov
or
push
test
or
xchg
lahf
dec
xor
aaa
sbb
mov
cmp
mov
dec
xchg
cmp
pushf
mov
mov
push
add
xchg
mov
das
pop
aaa
leave
mov
je
cmp
cltd
cmpsl
aad
or
mov
fstpl
add
dec
inc
jmp
xor
and
sub
jge
ret
cmp
daa
mov
xor
pusha
or
push
fpatan
pusha
roll
daa
out
int3
mov
fcompl
mov
daa
and
dec
in
xchg
sbb
sub
not
jae
in
inc
jmp
xchg
pushf
aaa
xchg
pop
mov
cmp
out
push
lret
lock
repnz
sub
pop
lahf
mov
jbe
xor
and
in
mov
loop
repnz
aad
mul
cmp
stc
pop
dec
inc
jecxz
shll
subb
aad
out
push
hlt
inc
rcrb
fsubrp
test
ficoms
clc
sahf
mov
andb
sahf
outsl
pop
xor
sub
add
ss
stos
mov
mov
push
mov
cmpsl
dec
ffree
in
and
std
movsl
push
stos
aam
mov
mov
xor
cmp
dec
stos
adc
stos
lcall
into
pop
xchg
mov
mov
jge
inc
sub
inc
loop
inc
cmpsb
fnstcw
add
dec
inc
fidivrs
push
scas
dec
shlb
jl
int
aaa
pop
cmp
inc
clc
jl
dec
loope
sub
add
hlt
fisttps
pop
cmpsb
mov
fs
lock
mov
cmpsb
fcmovbe
loop
movsl
cmp
push
cmp
jecxz
mov
sub
loopne
imul
in
add
push
mov
sti
mov
out
das
cmp
push
repz
mov
jbe
jno
inc
sbb
das
fwait
and
mov
lahf
lods
push
repz
lock
movb
jno
jb
jle
sti
adc
sub
dec
popf
jne
mov
push
call
lcall
sub
test
or
lods
mov
lods
lock
int3
movl
in
and
push
and
push
test
mov
jb
daa
test
fstpt
pushf
lret
imul
sub
xor
jl
jmp
pop
dec
push
outsl
pushf
push
push
outsl
sbb
daa
mov
cmp
xchg
cmpl
imul
lock
sub
in
repnz
jb
mov
imul
jle
shrl
cmp
cltd
int3
rorb
adc
gs
inc
adc
add
dec
dec
mov
mov
xor
mov
testb
push
ficoms
jge
xor
filds
ds
pop
das
sarb
test
xchg
dec
mov
mov
sub
xchg
sub
stos
pop
std
in
fidivrs
xor
mov
das
cs
hlt
cmp
repnz
pop
aaa
mov
fisubrl
inc
addr16
xchg
cmp
push
mov
ret
loope
idiv
loopne
popf
pop
push
add
mov
mov
mov
mov
mov
jmp
iret
enter
fcmovnu
roll
ficoms
jae
mov
mov
js
jl
js
push
xchg
sub
dec
cwtl
mov
xchg
cmp
mov
insb
imul
test
pop
jnp
fmul
cmp
adc
test
shrb
sub
data16
jg
push
shr
push
sub
sub
sarb
add
mov
mov
jns
push
pinsrw
fwait
cmp
loop
das
xchg
mov
xchg
or
test
push
adc
enter
stc
or
jne
sahf
call
xchg
sub
repz
and
fisubrs
je
rcr
push
pop
daa
leave
xchg
outsb
sub
jge
aaa
and
lret
pop
repnz
packsswb
adc
lcall
pop
and
xchg
xchg
push
pusha
pop
mov
push
out
sahf
xchg
rorb
nop
out
loope
inc
arpl
mov
into
adc
pusha
out
adc
icebp
mov
stos
inc
popf
popa
sub
jge
pop
and
inc
lock
ja
dec
fsts
ljmp
clc
repnz
popf
sbb
mov
xchg
frstor
in
popa
jp
jp
cmp
jae
mov
scas
mov
lret
xor
lods
jnp
xchg
jbe
enter
movsb
imul
xchg
test
sbb
push
inc
sub
mov
add
test
xchg
loope
sbb
out
pop
jmp
sub
add
nop
push
jmp
fcompl
fwait
push
push
pusha
cmp
out
sbb
icebp
add
stos
test
icebp
fisubs
mov
cltd
dec
xchg
fwait
pop
dec
lods
xor
cmova
jo
gs
cwtl
test
in
out
mov
mov
adc
jge
or
rcl
add
lods
or
jbe
test
mov
jae
pop
sub
imul
dec
nop
pop
sub
int
inc
pushl
inc
push
and
fdivr
aam
sti
pop
test
fucomi
lcall
mov
or
hlt
dec
sti
mov
stos
pusha
or
fsubrl
push
aas
fistps
xlat
jmp
pop
sub
mov
imul
mov
repz
xor
mov
out
stos
sbb
popf
and
mov
xchg
fs
ret
test
jb
inc
fldcw
xlat
mov
pop
mov
jnp
test
sub
push
daa
mov
je
lods
mov
dec
xchg
or
add
adc
pop
js
and
pop
xchg
dec
cli
sbb
scas
inc
test
sub
aad
pusha
pusha
idivb
sub
test
mov
orb
pushf
dec
dec
mov
fmuls
mov
xchg
popl
mov
stos
rdmsr
outsb
pop
cli
lods
add
jbe
cld
leave
imul
mov
daa
mov
sahf
arpl
jmp
push
or
aaa
xchg
call
jecxz
in
arpl
arpl
sub
mov
int3
adc
andb
sbb
vpshaq
movups
push
iret
mov
pop
pushf
and
sbb
push
xorb
icebp
lods
or
ss
and
fisubrs
push
push
ja
int3
js
adc
int
and
aam
test
and
shll
out
ja
loope
push
xor
insb
leave
xchg
shrl
es
mov
pop
fsubrs
bound
dec
pop
cli
nop
outsl
xor
std
cwtl
cli
push
fdiv
add
lock
mov
cltd
fdivrs
fnstenv
movsl
mov
shlb
inc
mov
add
add
insl
addl
push
loope
sub
hlt
cmp
imul
cmp
mov
sbb
dec
cmpsl
ljmp
add
jno
shlb
xchg
fsubrl
sub
insl
cmova
xor
add
dec
cwtd
aam
adc
sbb
int
add
or
dec
popf
dec
ja
push
add
lods
dec
repnz
xchg
dec
push
xor
adc
repnz
and
sub
pop
add
fidivrl
push
add
xor
pusha
cmp
out
das
inc
sbb
mov
pop
jge
pushf
jmp
movsl
cmpsl
out
push
lds
aas
int3
push
dec
sub
cmc
mov
jo
inc
push
push
sahf
adc
out
cwtl
xor
pop
inc
iret
mov
fistps
hlt
inc
aaa
add
inc
xchg
in
mov
mov
mov
jmp
ror
cmp
jg
jne
inc
cli
rcl
int3
mov
js
jl
js
jnp
movsb
insl
in
mov
push
das
mov
mov
cmpsb
sbb
insl
inc
in
push
adc
std
mov
xorl
xorl
cmp
mov
test
insl
dec
xchg
sahf
ret
sahf
cwtl
jge
and
cld
xor
jo
mov
rclb
mov
cmpsl
inc
xchg
dec
add
decl
dec
cltd
sbb
pop
pop
je
and
jge
stc
mov
jb
lods
arpl
mov
cmpsl
and
leave
mov
leave
jns
es
pusha
jbe
pusha
jl
lock
insl
jb
in
mov
xchg
jmp
repnz
cmp
xor
pop
scas
out
jge
popl
or
aad
xor
in
sbb
cwtl
push
jmp
add
sbb
movsl
ljmp
add
cmp
pop
fiadds
push
and
data16
scas
cmp
cltd
dec
loop
stc
out
inc
xor
adc
cmovae
ret
jnp
pop
bound
cs
rorb
daa
and
cmp
mov
cmc
mov
cmp
je
fadds
mov
shl
xor
ds
dec
das
sub
mov
in
pop
pop
cwtl
loopne
cli
push
repnz
in
dec
dec
aad
mov
pop
data16
and
xchg
test
dec
sbb
cmp
jne
xor
cmp
inc
test
nop
jae
gs
and
movsb
test
dec
out
fcmove
add
lock
cmc
lods
add
test
jg
push
mov
sarl
ret
or
jnp
lcall
jg
ret
ds
js
daa
adc
adc
and
inc
outsb
xor
stc
out
in
push
test
and
cltd
in
mov
fbld
mov
mov
outsb
enter
adc
xchg
out
or
sbbl
cmc
and
mov
loope
jne
call
add
mov
add
dec
adc
cmc
inc
popa
movsl
inc
xchg
pop
mov
push
jnp
iret
inc
lods
dec
or
cmp
out
cmp
dec
iret
sbb
imul
mov
mov
pushl
data16
xor
sbb
xor
es
popf
les
cmp
rep
sub
scas
shlb
sahf
nop
cmp
incb
fsub
cmp
sbbb
inc
aas
cmp
mov
jne
jmp
sbb
into
or
sahf
mov
testb
xor
das
int3
lods
ljmp
scas
jb
hlt
jbe
pop
lret
lar
ficoml
enter
gs
js
aaa
rclb
adcl
ss
les
dec
popl
cltd
pop
sub
repnz
movsl
les
sbb
xchg
rolb
and
pop
lock
ds
xor
push
jmp
mov
push
push
testl
aam
cmpsb
adcl
sub
and
not
or
jne
xchg
adc
add
push
dec
pop
push
dec
adcl
inc
adc
sti
add
loope
imull
xor
in
push
ljmp
push
outsb
or
fcoml
or
jge
add
arpl
mov
jp
loope
and
sbb
jp
idivb
lods
or
frstor
cmp
cmp
shlb
enter
jo
xor
sbb
fidivrl
ds
iret
xchg
into
ds
insb
ss
fcomps
loopne
pushf
sbb
addr16
xor
jecxz
dec
xchg
fstpt
insb
daa
adc
push
mov
sbb
out
ror
pop
in
in
push
jno
dec
movsl
jnp
cmp
xor
arpl
and
lods
push
idivb
test
push
enter
rcrl
cmpsb
popa
cmp
fistpl
pop
xchg
pushl
scas
fisubrs
pushf
loopne
stos
push
inc
mov
pushf
test
and
jle,pt
push
lock
dec
outsl
fidivs
cmp
roll
mov
ret
aaa
cwtl
hlt
mov
mov
mov
fs
inc
lret
and
jecxz
enter
fidivs
outsl
mov
inc
imul
jp
ja
inc
push
rcrl
mov
je
cmp
add
int
test
mov
push
addr16
test
mov
jne
mov
xor
jmp
rcl
ds
ds
fnstcw
sbb
enter
mov
js
scas
loop
outsl
jne
lret
lods
jecxz
sbb
jmp
xor
mov
dec
adc
mov
pop
ljmp
mov
push
mov
notl
fmulp
mov
mulb
xor
push
call
pop
mov
scas
sti
mov
and
movsl
jp
adc
and
push
mov
call
xchg
ja
aas
dec
les
into
xor
les
mov
subb
mov
adc
push
lret
ret
sbb
out
pop
stos
ret
js
fucomip
push
inc
or
inc
cmpsl
xor
and
dec
dec
and
adc
out
call
cmp
test
inc
testl
roll
loop
int
jle,pt
dec
push
cs
and
cmpsb
sbb
lds
xlat
adc
mov
sbb
cs
inc
adc
push
daa
add
pop
sahf
pop
sbb
fldcw
repz
sti
out
mov
or
daa
xlat
add
lcall
lock
lret
add
test
repz
dec
pop
xchg
cmpsb
mov
testb
dec
sub
js
mov
insl
jg
sub
jns
push
pop
cltd
cmp
outsb
fiaddl
mov
sahf
cmp
out
inc
movsb
jp
mov
jae
mov
sub
or
nop
add
xchg
addl
adc
in
mov
mov
dec
push
add
mov
imul
out
pop
stc
test
jl
es
jecxz
dec
jl
popf
jp
lods
mov
mov
jbe
add
cmpb
fdivl
ret
fidivrl
mov
and
ljmp
mov
je
jmp
jne
mov
sbb
sbb
inc
dec
sub
idivb
nop
je
cmpsb
and
jnp
pushf
mov
mov
mov
pop
and
add
pop
mov
mov
inc
or
inc
dec
in
and
in
lret
sbb
dec
in
push
jp
fiadds
fimull
lea
cmp
sub
aad
rolb
cmpsb
push
mov
cld
pop
test
mov
test
and
mov
mov
lea
jmp
fwait
pop
lea
add
lret
xor
xchg
pop
jb
iret
push
fdivl
jl,pt
lock
xor
jns
out
sub
mov
ljmp
hlt
lret
xchg
aaa
test
xchg
or
ret
push
shl
negl
inc
mov
ds
pop
jecxz
shrl
mov
stos
stos
out
js
sbb
hlt
xchg
fisubrs
dec
scas
mov
out
dec
es
xor
pop
cli
cs
lcall
jecxz
and
orb
sti
cmpsl
jp
mov
sarl
inc
cltd
or
test
aas
and
idivl
jnp
push
push
je
es
pop
dec
jbe
adc
xchg
sbbl
mov
push
dec
rolb
inc
mov
iret
push
daa
pop
add
scas
bound
dec
mov
xchg
mov
adc
subb
ljmp
fld
movsl
stc
cmpsl
vpshlb
test
fidivl
outsl
or
inc
jns
jp
jns
push
rcrl
xchg
repz
jb
fildll
inc
loope
xchg
mov
aas
ret
xor
sti
push
stos
sbb
xlat
into
mov
mov
push
push
push
faddl
shr
je
movsb
add
jne
ljmp
inc
es
lods
ret
jl
fidivs
jo
outsl
and
nop
or
fcmovbe
loop
fcoml
shlb
or
sti
lret
pop
xchg
dec
cli
inc
ret
clc
pop
lret
push
mov
les
mov
pop
test
push
imul
xchg
bound
les
sbb
sbbl
shll
and
jl
jmp
sub
lods
out
xchg
inc
xchg
clc
cltd
or
mov
ret
and
fstl
pop
mov
pop
popf
jl
andb
loope
ret
pop
std
xchg
lea
sub
or
mov
fs
div
xlat
or
scas
lret
and
dec
or
sbb
movl
push
add
lret
rcr
rolb
enter
inc
aam
inc
js
push
js
dec
sarl
mov
inc
fs
fldz
sbb
repnz
push
push
push
xor
sbb
mov
cmp
push
cwtl
arpl
repnz
ljmp
pop
sti
push
mov
sbb
sub
sub
or
fwait
addr16
dec
jno
jbe
mov
pop
imul
js
rol
sti
imul
inc
xchg
push
pop
dec
sbb
cld
cmp
rolb
jle
inc
xchg
sub
dec
jp
testb
push
inc
stos
lock
movsb
fidivs
pop
dec
aam
inc
or
mov
push
dec
push
dec
sub
sub
sbb
or
das
dec
repz
fs
lcall
mov
out
push
pop
pop
ds
jg
negl
inc
popa
mov
add
cwtl
dec
mov
sbb
jmp
call
push
adcb
stc
fisubl
in
mov
xchg
dec
dec
clc
cmp
push
cmp
divb
icebp
arpl
pop
sub
add
mov
push
test
adc
push
and
or
mov
insl
dec
ss
cwtl
mov
pop
or
push
push
sti
loope
xchg
ja
call
aad
shrl
inc
std
cmp
pop
cmp
js
push
ja
cmp
ljmp
mov
dec
dec
loope
hlt
add
push
sarb
mov
xorb
xchg
xchg
adc
cld
repnz
cltd
into
mov
or
stos
mov
sub
mov
xchg
inc
mov
mov
mov
cmp
lcall
daa
outsb
repz
xorl
mov
cmpsb
in
gs
sbb
cmp
mov
cld
mov
pusha
in
test
dec
mov
test
cmp
xor
inc
loop
in
push
lock
insl
cmp
andl
sub
xlat
fstpt
jg
in
xor
jl
pop
out
xchg
ret
mov
mov
fxch
mov
dec
push
out
pop
xchg
dec
xchg
cltd
ss
mov
push
jbe
inc
sbb
mov
xor
push
and
ja
enter
mov
ficompl
hlt
lods
fistpll
rorb
adc
test
jno
sarb
push
movsl
push
out
cli
add
stc
sahf
clc
ret
mov
daa
pop
push
add
mov
push
pop
adc
sub
add
fs
filds
mov
imul
lock
pusha
cli
xor
ficompl
mov
jb
mov
inc
rcrl
mov
sbb
pop
ret
mov
and
movsl
push
jno
jno
push
mov
es
pop
insl
insb
cmpsl
jbe
sub
scas
xorb
sbb
inc
rcrl
push
push
int3
jo
mov
xor
ficompl
and
cmpsl
ret
sbb
mov
pop
pop
movsl
cmp
sub
mov
sbb
pop
insb
fwait
push
sbb
mov
jnp
mov
pop
jo
bound
outsb
dec
sbb
mov
ror
adc
es
aam
sbb
repnz
dec
loop
fwait
stos
es
mov
push
cld
fs
fwait
push
test
mov
in
negl
js
sub
sahf
pushf
aam
jb
jmp
adc
jne
rclb
mov
gs
lea
xor
andl
test
push
out
jmp
jne
jbe
dec
test
jmp
pop
push
mov
sbb
xchg
jg
lds
cmpsb
lods
mov
sar
popf
aam
xor
jnp
xor
daa
push
xchg
mov
adc
loopne
mov
cmpsb
stos
cmp
cld
jmp
shlb
jecxz
mov
sbb
mov
cmpsl
das
ljmp
ljmp
dec
cmpsb
in
movsb
xor
cltd
js
loope
mov
mov
mov
inc
aaa
push
push
lret
arpl
pop
cmpsb
mov
repnz
outsb
pop
sub
inc
insl
push
sub
js
loopne
or
scas
ss
xchg
dec
int3
fprem1
pop
push
mov
xor
inc
mov
inc
jae
inc
imul
bound
out
add
or
addr16
jmp
mov
aas
push
mov
std
mov
imul
std
imul
push
loope
test
jne
jl
cmc
dec
xor
inc
loope
das
sub
jbe
cmpsb
outsb
cmp
test
jmp
into
leave
ds
xor
xchg
xor
inc
js
push
js
mov
or
je
mov
das
loopne
push
xchg
lods
jne
ss
repz
add
and
push
clc
dec
data16
stos
xchg
ds
movsl
mov
icebp
cs
and
push
cli
ja
sete
cs
dec
push
dec
lea
mov
repz
mov
mov
insb
add
das
mov
add
shr
js
and
pop
mull
data16
xor
and
fidivrs
pop
dec
inc
mov
sbb
jns
pop
and
push
cmp
daa
push
or
in
call
mov
mov
pop
push
mov
cmc
je
mov
adc
xchg
and
in
ja
ret
movsb
imul
cmpb
notb
shll
push
repnz
jns
ret
push
mov
sbb
out
fistps
pop
xor
in
pop
mov
dec
push
sbb
or
fnstcw
push
inc
add
mov
scas
das
mov
lds
iret
daa
outsb
inc
rclb
cmp
ja
cmpsb
xor
mov
hlt
add
lds
cmp
lea
fidivl
lahf
cmc
xor
lock
xchg
cs
sbb
xchg
cmp
mov
and
or
and
fimull
cli
add
mov
sub
subb
mov
pop
jecxz
mov
fiadds
cli
inc
or
icebp
sarb
or
and
mov
jno
push
pop
or
or
ret
add
les
ljmp
mov
push
inc
clc
movsl
pop
ret
out
xchg
cmp
js
dec
cli
mov
fsubrs
jle
shl
cli
lods
mov
scas
lret
call
dec
inc
jb
movsb
inc
in
push
mov
or
pop
jmp
inc
mov
bound
scas
pop
mov
and
sbb
cwtl
push
cmc
mov
mov
cs
inc
jo
insl
rcl
and
fiaddl
cltd
cmpsb
fdivs
stc
std
fisubs
cmp
mov
fs
test
or
mov
inc
pop
fwait
in
pop
cmp
and
test
test
pop
jmp
std
hlt
aam
push
call
out
fwait
aaa
mov
or
cli
out
aam
lea
ret
jecxz
push
inc
movsb
xchg
pop
out
inc
cld
orb
pop
out
lea
and
incl
sub
sbb
xchg
imul
repz
pop
filds
leave
out
roll
shrb
inc
fwait
das
mov
inc
push
mov
add
orb
jbe
in
xchg
movsb
and
mov
adc
mov
sub
lea
push
imul
add
pop
ss
mov
mov
push
sbb
inc
ss
mov
push
jp
and
or
xchg
and
cmpsb
in
das
push
xchg
adc
adc
mov
jb
or
sub
pop
mov
dec
out
mov
icebp
in
in
shl
push
mov
jae
aas
mov
push
out
pop
gs
mov
and
jl
das
leave
cwtl
out
lods
pusha
xchg
xchg
adc
jl
pop
inc
cmp
mov
mov
or
leave
dec
mov
idivb
dec
loopne
out
aaa
sbb
out
in
jl
jb
jp
imul
add
xchg
loopne
movl
xchg
subps
dec
orl
cltd
popl
fisubl
mov
xorl
xor
hlt
dec
xor
mov
sbb
out
std
ja
or
sar
outsl
sbb
jb
insl
out
push
out
push
fcmovbe
stc
sarl
gs
adc
cmpsb
mov
pop
xor
pop
adc
mov
jge
pop
pop
js
das
jmp
scas
pop
mov
and
ljmp
cltd
daa
jp
and
jne
int3
lods
jbe
mov
sub
jno
stc
loop
rolb
test
push
cmpsb
loopne
rorb
jno
lock
jmp
push
or
pop
lahf
bound
pop
xchg
fstpt
jo
int
add
or
jb
cmp
xor
js
jns
inc
mov
sbb
pushf
sub
xor
imul
push
push
push
jmp
ds
sarb
rol
imul
js
push
js
imul
or
and
aas
ret
mov
ja
sub
and
out
ljmp
jle
jo
mov
aam
insb
cli
adc
push
and
rorb
xchg
repz
arpl
test
mov
jl
addr16
jne
loopne
sub
ret
lock
rolb
mov
movsl
arpl
stos
jns
sbb
aad
xchg
dec
jle
adc
mov
stc
and
xlat
dec
pop
or
xchg
mov
adcb
ret
xlat
ret
leave
std
imulb
into
mov
mov
adc
ljmp
and
shrl
popf
inc
shll
imul
or
xchg
xlat
push
dec
or
loope
ds
sbb
xor
mov
enter
repz
js
or
cmp
fucomi
fstp
push
jl
and
lods
mov
sbb
dec
xchg
jne
ret
pop
shr
enter
sahf
test
jp
add
or
dec
lods
sub
testl
dec
gs
fbstp
out
js
dec
adc
dec
pop
cmp
fists
lcall
cli
sub
lret
push
cmc
ja
aad
cmp
stos
test
js
push
ja
lret
push
pop
xchg
mov
and
jl
push
in
fs
cmp
push
mov
pop
jecxz
xchg
fcompl
cmpsl
sbb
xchg
jmp
in
or
sub
notl
lret
sbb
xor
mov
mull
sub
ja
out
aam
imul
stos
xchg
jecxz
inc
push
pop
cmpsb
mov
sub
movsl
fwait
pop
aad
inc
rorb
rcl
addr16
out
mov
aad
and
iret
out
std
inc
mov
sub
incb
std
loope
movsb
push
pop
and
addr16
addr16
inc
rcrl
xlat
xchg
push
scas
fs
cmpsb
int
sbb
sahf
aaa
sub
mov
sbb
mov
gs
mov
rcll
js
test
add
dec
out
iret
push
jae
push
mov
sub
movsb
cmc
rcr
xlat
inc
repz
dec
xor
pop
addb
imul
mov
adc
cmpsb
fwait
subl
xor
repz
jg
inc
in
push
mov
pop
xchg
leave
rcll
lahf
js
dec
into
add
pop
jg
mov
pop
imul
out
std
stc
std
sub
movsb
add
sub
stos
les
mov
ljmp
jb
dec
push
test
fs
cs
aas
hlt
sbb
sbb
inc
out
mov
pop
pop
jmp
pcmpgtw
xchg
xor
stos
sub
and
inc
add
jl
mov
enter
pop
popf
lock
mov
xor
repnz
test
lahf
inc
lret
adc
sub
or
xlat
ds
add
jecxz
outsl
adc
jns
int3
jmp
fs
dec
pop
outsl
fildll
dec
adc
and
test
and
xor
cmp
push
int
inc
and
dec
into
sub
xor
ja
dec
sbb
pushf
pop
shl
and
imul
fadd
mov
and
push
addb
fmul
daa
dec
mov
out
inc
shlb
in
repnz
xchg
cmp
ds
insb
or
and
dec
cmp
sub
in
sub
add
test
and
std
add
xchg
lods
andb
pop
xor
mov
mov
fcmovnbe
mov
sub
lds
mov
pop
nop
or
sub
jmp
jmp
mov
shl
mov
scas
stc
js
push
mov
mov
faddl
xchg
inc
jne
xchg
push
pop
pusha
dec
cmpsl
fsubrl
mov
insb
shll
mov
jae
rcl
pop
cmp
stc
push
jl
xchg
xor
push
sub
pop
cs
out
rcll
pop
adc
cli
inc
lock
sbb
or
std
vcvtps2dq
pop
and
int
popf
ret
push
pop
pop
dec
or
inc
mov
pusha
jmp
addr16
stos
xchg
lods
add
dec
mov
cltd
cltd
es
shrl
push
out
dec
lret
pop
sbb
in
subl
test
subb
dec
in
test
xchg
mov
pop
pop
xor
and
mov
in
push
add
rol
rol
int
fldenv
sbb
push
js
or
sub
and
scas
jne
jbe
push
or
outsl
add
push
or
dec
lods
xchg
insb
push
dec
test
jp
inc
cli
cmpsb
mov
lock
scas
lret
jle
xor
pxor
sbb
push
cmc
aas
fildll
dec
es
sbb
mov
ja
popf
mov
fnstsw
jbe
jno
sub
in
stos
pop
rolb
add
scas
gs
xchg
inc
lcall
dec
fsubr
inc
fistps
in
testb
pop
daa
push
ss
stos
repnz
in
pop
dec
xchg
jne
inc
or
push
dec
mov
add
fisubs
inc
std
adc
ja
xor
scas
ret
lret
mulb
lahf
lock
xor
xchg
or
popa
cs
adc
add
incb
xchg
aaa
push
clc
lret
xor
add
xchg
faddl
inc
mov
stos
sbb
lret
and
repz
mov
sbb
addr16
push
xor
fnstcw
outsl
push
sbb
or
rcrb
xchg
adc
add
dec
out
pop
jo
mov
mov
dec
stos
dec
pop
out
push
in
test
sub
cld
xchg
gs
lds
sti
frstor
aaa
jle
push
adc
in
jmp
add
pop
ret
mov
cmp
ret
int
adcb
cmpsb
dec
flds
cmp
mov
test
ljmp
mov
pop
test
aam
sarb
inc
pcmpeqb
imul
inc
adc
je
cmp
loop
pop
aad
ja
mov
sbb
mov
jo
int
call
inc
cmp
mov
cmp
pop
movsb
es
jmp
xchg
je
cltd
push
mov
push
adc
mov
dec
mov
popa
ja
inc
loopne
sbb
call
dec
dec
sbb
push
popa
icebp
mov
push
adc
nop
sub
pop
jbe
int
dec
dec
imul
and
xchg
lods
or
push
and
xchg
mov
sarl
pushf
and
in
inc
and
sbb
lret
cmp
andl
popa
or
pop
out
jns
lahf
mov
sub
daa
pop
shlb
les
pop
jp
mov
pop
cmpsb
bound
xchg
ljmp
movsl
sbb
sub
push
test
cmp
pop
mov
cmpsl
and
arpl
std
in
ss
adc
movsl
scas
sub
push
mov
test
out
dec
push
aam
dec
rcl
and
mov
xor
sti
lods
or
jmp
xchg
data16
add
jg
dec
loopne
in
gs
xchg
pusha
sub
or
arpl
sahf
pusha
cmp
ljmp
sbb
or
into
dec
jle
fdiv
lahf
pop
test
cltd
arpl
pop
sub
mov
pusha
sub
push
cmp
jb
push
flds
dec
and
jmp
ljmp
jo
dec
push
call
jl
cmp
in
sbb
jb
and
mov
push
jo
hlt
mov
xor
xlat
push
mov
inc
imul
shll
push
xlat
lret
cmp
and
add
inc
xchg
mov
or
faddl
ljmp
sub
iret
and
xchg
mov
jns
cld
xchg
mov
enter
dec
sahf
pop
nop
inc
lea
sbb
addr16
pop
mov
pop
fimuls
in
lcall
pop
push
je
push
push
popa
dec
das
in
icebp
mov
or
out
mov
les
jp
test
aad
test
fsubp
mov
mov
ljmp
scas
idiv
int
push
jne
pop
pop
mov
mov
xor
lret
xor
mov
cmp
aam
fidivl
jg
xor
rorb
mulb
cmp
adcl
aam
inc
aad
addr16
jno
sbb
mov
popa
jecxz
xor
scas
xor
pusha
cmp
movsb
lahf
mov
stos
daa
inc
sub
lods
sahf
cmpsb
lret
push
xchg
inc
jp
clc
add
test
sub
fcmovnbe
mov
dec
push
pop
mov
shll
jnp
gs
and
mov
je
jmp
adc
push
pop
std
inc
push
sbb
test
cwtl
xlat
push
into
push
je
xor
add
push
mov
add
push
mov
mov
jmp
enter
aad
enter
xchg
and
push
js
push
js
inc
mov
mov
dec
and
mov
das
orl
fadds
pop
jl
and
cmp
je
sub
mov
les
shrl
add
mov
jecxz
ftst
lock
loop
loope
pop
xlat
dec
adc
sub
mov
test
dec
sub
sbb
pop
cmp
sbb
subb
lds
dec
cwtl
jb
sub
sarb
test
push
cmpsb
cmp
scas
into
mov
push
xor
jns
jecxz
iret
pop
gs
out
call
ljmp
cmpsl
jg
jmp
cli
add
cmp
addl
hlt
cld
pushf
dec
sahf
lds
jmp
outsb
mov
mov
jp
fidivs
mov
aas
in
dec
or
jmp
adc
cmpb
daa
popf
inc
mov
shll
jmp
xchg
das
addr16
cmpsl
cmp
add
push
xchg
int3
hlt
ljmp
jnp
cs
inc
pop
es
dec
and
dec
xorb
add
dec
sbb
call
mov
in
repnz
jbe
dec
popa
adc
dec
pop
es
sub
aas
icebp
insl
shrl
push
mov
mov
inc
dec
mov
roll
dec
es
push
mov
adc
scas
outsb
sbb
mov
mov
mov
mov
pop
add
jbe
pop
stos
and
inc
xor
jns
mov
xor
fcompl
add
imul
mov
xor
jns
insl
ret
jbe
xchg
ret
jbe
iret
inc
insb
scas
in
lock
sti
stc
pop
out
sub
xor
cli
jo
sbb
mov
xchg
push
rcll
push
test
inc
inc
inc
flds
stc
and
gs
pop
enter
xor
scas
or
dec
je
jb
and
mov
push
push
xor
add
aas
lods
loopne
jb
or
sub
mov
aas
cs
xchg
fisttpl
mov
test
xchg
popa
gs
cmpsb
mov
lods
or
adc
sub
mov
lods
sbb
lods
stos
push
xchg
aas
pop
adc
jae
sbb
xor
cmpl
test
int
and
ret
jns
notb
das
movsl
mov
std
rcrl
dec
dec
in
lea
push
lods
mov
out
push
in
mov
test
fimuls
cmp
sahf
imul
es
sub
xchg
cmc
xor
and
imul
lods
jne
mov
popl
movsl
loope
lcall
dec
push
inc
cltd
mov
xchg
and
cs
or
xchg
sub
push
and
push
xchg
jge
out
call
lds
ljmp
repz
add
sbb
fcmovbe
add
pusha
mov
inc
cmp
mov
ja
mov
das
into
shrl
std
inc
test
pop
nop
fildll
xchg
xor
inc
inc
fstpl
sub
adc
repnz
cmp
lea
roll
lret
xchg
cmp
push
mov
pop
mov
adc
mov
xor
and
add
xchg
mov
jge
pop
add
dec
lret
and
jb
mov
js
add
int3
fnstsw
loop
dec
pop
sbb
fiadds
sbb
xor
int3
addr16
ret
out
and
sub
fmull
pop
xor
and
cwtl
je
ret
cmp
nop
sbb
inc
adc
pop
es
fldcw
fstpt
push
std
add
inc
cmpsl
inc
sub
into
sbb
loop
pop
ds
loop
jae
nop
pop
push
lcall
rclb
notl
lahf
dec
adc
xchg
mov
cmp
pop
shrb
inc
sahf
loop
imul
cmp
les
dec
rclb
sti
mov
mov
xchg
adc
ljmp
jge
cli
and
in
movsl
hlt
mov
or
or
push
orl
cltd
ret
xchg
mov
cmp
add
fimuls
lea
inc
push
das
or
pushf
inc
mov
adc
sbb
jmp
aad
mov
push
add
push
inc
cmp
lcall
aas
or
ret
push
stos
orl
xor
add
jmp
ds
enter
rol
pop
xor
push
pop
js
push
js
cmp
push
push
xor
repz
inc
mov
push
ret
xchg
push
sub
pusha
adc
cld
pop
dec
stc
mov
and
push
xchg
neg
xor
andb
dec
sub
iret
jnp
iret
loopne
notl
aas
cmp
sbb
gs
dec
cmpsl
add
jp
ds
and
mov
sub
sbb
mov
inc
add
dec
jmp
lock
repz
aaa
shl
out
test
lcall
ja
cmpsl
aaa
mov
xchg
fiaddl
add
adc
pop
push
xchg
cmp
mov
jle
lahf
add
jecxz
int
dec
rcrb
or
out
fldt
inc
push
jae
add
ja
jae
ficoml
push
mov
ret
mov
and
roll
push
shll
add
loopne
mov
mul
fiaddl
repz
xor
mov
mov
jbe
jle
xchg
adc
mov
pop
test
push
popf
adc
push
sub
push
ljmp
in
clc
or
mov
lock
dec
inc
lret
leave
aam
mov
pop
dec
xchg
sahf
rcrl
imul
int
sub
xlat
lahf
mov
xlat
ret
dec
cmpsl
rcll
xor
jno
mov
and
popa
idivl
lret
fcmovu
popa
js
adcb
xor
dec
xchg
push
dec
outsl
and
stos
mov
mov
outsl
adc
addr16
mov
cmc
jo
je
test
adc
jmp
xor
cmp
sbbl
lea
out
stc
jg
push
push
notb
pusha
or
push
mov
ficoml
imul
cli
dec
mov
sti
into
cmp
jle
jle
into
or
xchg
int3
decl
fcoms
testb
ret
and
jne
std
cld
enter
ret
adc
out
popf
add
sahf
mov
xchg
sub
xchg
lods
adc
mov
mov
inc
inc
lret
fdivl
lock
mov
jg
sarb
adc
xor
mov
es
pop
imul
sbb
and
adc
or
mov
dec
lret
stc
lods
inc
leave
sbb
jge
dec
sarl
push
loope
adc
arpl
inc
rcl
mov
mov
dec
sub
mov
mov
scas
lock
push
inc
mov
out
or
pop
xor
std
loopne
test
leave
xchg
and
mov
sub
shll
xchg
xor
xlat
outsb
push
test
push
aam
add
or
pop
aaa
pop
test
add
cmp
lea
push
ror
xor
in
les
pushf
adc
jge
subl
mov
or
cld
int3
fwait
jmp
sbb
add
add
sarb
pop
adc
adc
sub
insl
mov
push
inc
sub
or
jbe
stos
ja
sub
popf
pop
insl
scas
fdiv
dec
aad
jg
mov
aad
out
adc
test
push
mov
jecxz
adc
fs
or
and
sub
popf
and
pop
push
out
pop
std
mov
cli
mov
adc
mov
push
int
dec
or
push
sbb
adc
xchg
into
mov
inc
leave
outsb
adc
mov
scas
sbb
clc
pop
dec
cmc
mov
fmull
repnz
mov
rol
cwtl
xor
imul
adc
sbb
xchg
adc
stos
adc
loopne
stos
movsl
push
in
aas
std
xor
or
shll
cld
mov
cmp
int
ljmp
adc
cmp
popa
push
inc
lea
gs
mov
jge
cmp
mov
jge
ja
or
cwtl
jb
sarl
cmp
and
adc
adc
xlat
sub
stos
adc
mov
lret
push
xchg
mov
imul
sbb
mov
popf
in
jae
add
mov
ss
in
mov
vmwrite
xchg
lds
or
xor
pop
test
cmp
in
sbb
or
sti
rcrb
inc
mov
sbb
aaa
jo
lcall
movsl
imul
cmp
mov
jmp
int3
ds
rcl
aam
xchg
fcomip
mov
js
push
js
jle
mov
popa
andb
js
pop
dec
fnstsw
add
and
pop
push
stos
out
test
sub
mov
iret
js
jae
mulb
sbb
fstpt
daa
pmulhuw
cs
jmp
push
mov
or
decb
adc
sub
dec
ja
gs
aaa
pop
mov
nop
push
aas
pop
aas
mov
sub
ljmp
dec
shr
cld
popa
dec
mov
mov
mov
cltd
jbe
lods
inc
fisubl
cmpsb
in
loop
movsbl
mov
test
mov
add
inc
pop
sti
push
icebp
adc
in
xchg
cmp
pop
adc
mov
call
es
or
enter
fs
mov
mov
sbb
aaa
rorb
cwtl
xor
nop
push
lret
sbb
jp
dec
cmp
or
pusha
or
cmp
mov
aaa
int3
mov
and
rorb
pop
rcrb
inc
xchg
xor
cltd
cwtl
adc
out
sub
shl
xchg
das
fwait
outsl
inc
mov
aam
inc
outsb
mov
cmp
in
xchg
jl
cmp
sti
testb
out
and
icebp
jne
xor
adc
ds
sti
mov
pop
adcb
iret
inc
mov
sti
inc
add
lcall
aaa
pop
mov
lea
mov
mov
jno
inc
lods
jle
sub
in
das
shrb
enter
mov
jne
mov
movsb
cmp
cld
mov
int3
adc
test
pusha
mov
adc
dec
rcrb
push
jbe
lret
loope
xchg
push
movsl
or
je
add
sahf
rcrl
xor
aaa
lret
dec
mov
dec
nop
xchg
push
das
and
test
cmc
xchg
test
outsb
nop
lahf
xchg
sbb
ds
test
jo
stos
lods
notl
xchg
jns
mov
push
mov
add
es
pop
pop
leave
cli
stc
rcl
and
ret
sahf
push
mov
into
popa
movsl
inc
lea
adc
push
push
test
stos
inc
dec
xchg
cmc
sub
cld
lret
ret
xchg
loope
testb
sahf
xor
rcr
pop
mov
and
mov
jg
into
mov
cs
hlt
and
or
icebp
imul
iret
cmp
mov
sti
xor
lods
inc
xorb
or
cmpsb
rcll
xor
jl
cwtl
stc
and
movsb
fiaddl
in
cwtl
imulb
lret
lahf
jg
mov
lahf
xor
cmp
fnstcw
add
push
add
push
fsubl
jle
imul
filds
rep
xchg
mov
test
mov
and
test
pop
iret
stc
and
cli
pop
fdivrs
jp
imul
je
dec
cmp
pop
pusha
jle
sub
scas
cmp
jecxz
or
sbb
loop
or
jb
and
cmp
movsl
dec
mov
mov
loope
or
jge
arpl
cmp
imul
mov
adcb
lock
xchg
pop
sbb
adc
movl
addr16
dec
enter
out
and
push
int3
xor
aad
lods
sub
int3
cmp
int3
inc
movsb
aas
push
arpl
jle
mov
mov
orb
xor
ss
mov
pop
cld
xor
jge
imul
push
xor
stc
popa
sub
out
int3
xchg
xor
mov
pushf
das
push
inc
jnp
mov
mov
rcrl
inc
sub
xchg
aaa
add
test
or
dec
movsb
mov
push
and
and
out
mov
and
sti
inc
pop
sbb
jb
pop
or
pop
fdecstp
inc
dec
or
push
cli
adc
pop
into
dec
add
inc
lea
sub
dec
mov
adc
and
mov
add
cmp
and
cmpsb
daa
insl
imul
mov
mov
adc
loopne
stos
jmp
pop
in
cmp
idivb
add
jp
sbb
fsts
and
jnp
sub
mov
adc
scas
ror
add
jne
mov
mov
push
xor
jmp
leave
mov
ror
stos
incl
xchg
or
js
push
js
and
fisubrs
frstor
out
and
mov
hlt
cmpsl
cmp
xchg
add
xchg
xchg
mov
jno
mov
xchg
add
addb
xchg
xor
sahf
jne
jp
clc
sbb
stos
jns
sub
fldl
dec
shll
cld
sti
adc
in
mov
jg
add
dec
int3
nop
lret
dec
mov
repz
sbb
scas
jb
push
sbb
out
cmp
insl
out
cwtl
shll
xlat
add
ret
sti
movsl
jle
pop
mov
inc
fidivl
aad
fdivl
sub
inc
shlb
cmpsl
std
testl
mov
daa
sub
dec
and
sub
add
lret
lods
lret
fwait
lea
fdivs
in
testl
shrb
and
adc
jmp
fldl
xor
fwait
lret
push
out
fucomp
scas
dec
mov
into
xlat
pop
cmp
cli
imul
jmp
and
jo
subl
and
lock
xor
push
and
xor
movsl
jbe
imul
push
jp
jno
xchg
xchg
into
adc
and
add
rcll
pop
cmp
push
cld
add
xchg
fdivs
add
xchg
push
and
cmp
push
ljmp
jle
xor
or
out
push
pop
mov
add
std
mov
sti
sub
cmpl
leave
adc
mov
test
fs
inc
sub
jle
outsl
daa
ss
loopne
aaa
ja
xor
xchg
or
out
xor
pushf
and
into
jge
popf
int3
xchg
sub
and
mov
inc
mov
sbb
std
jne
mov
push
insb
movsl
cltd
or
jno
out
jae
sub
mov
and
fs
lret
or
mov
and
dec
adc
insl
rorl
shl
sub
cli
push
mov
cltd
lret
pop
xor
sub
lds
cmpsb
shll
xchg
mov
iret
inc
lods
adc
sbb
xchg
and
movsb
repz
mov
lret
pop
mov
setge
mov
roll
negl
cmc
mov
sarl
jo
mov
jns
push
inc
jle
push
dec
aam
rol
xchg
imul
rcll
jns
pop
ss
fs
loope
or
add
dec
jno
and
enter
jge
mov
movsl
lret
cmpl
pop
insb
cmp
pushf
mov
or
jbe
mov
in
jns
es
shrb
add
inc
enter
das
outsl
xchg
dec
push
push
scas
nop
nopl
mov
lret
sbb
loop
dec
mov
movsl
movsb
push
aas
xchg
out
movb
loope
or
jno
lock
mov
jno
jae
add
test
repz
adc
outsl
cmp
cmpsl
fdiv
fmuls
xchg
pop
je
stos
js
cld
sbb
lds
xchg
push
push
sbbl
imul
ret
shlb
nop
das
add
mov
pop
lcall
ds
rcrb
pop
pop
dec
push
jne
push
mov
jb
mov
stc
push
in
push
push
out
ljmp
ljmp
mov
push
test
adc
movsl
jmp
jmp
lcall
fildl
shll
dec
cmp
jp
js
int
dec
inc
lret
das
dec
jge
popf
addr16
jne
dec
cmp
out
movsl
mov
ror
dec
xor
mov
je
cmp
filds
xchg
or
cmp
pop
dec
popa
arpl
add
add
sub
cpuid
jg
outsl
push
inc
btc
jne
fbstp
adc
adc
pop
push
adc
adc
out
push
jae
jge
mov
xchg
outsb
dec
les
testb
sub
inc
jle
cwtl
jbe
pop
ret
pop
stc
lret
sub
mov
sbbb
mov
cmp
xchg
es
push
je
in
pusha
or
loop
cmc
stc
fistpll
push
add
and
push
lock
push
sub
or
sbb
shlb
popa
add
fs
enter
les
mov
sub
xchg
repnz
push
sbb
lret
mov
lcall
lcall
xor
in
mov
sub
sub
jmp
lret
rcr
aad
shll
sbb
and
jl
js
test
fistps
mov
lret
ficoml
aaa
aaa
cmp
imul
or
outsl
andw
xchg
pop
lahf
dec
or
mov
jmp
push
mov
or
and
in
movsl
loopne
int
sbb
mov
or
cld
jle
int
mov
mov
andl
adc
vfmaddpd
fs
popf
outsl
xchg
jmp
pop
dec
imul
pop
cmp
dec
xor
pop
imul
sbb
enter
cld
or
jb
fdivrl
das
add
mov
popf
adc
std
stos
xchg
pop
xlat
jno
repnz
adc
stos
mov
adc
mov
cld
lret
and
aad
sbb
mov
daa
lock
js
gs
add
xor
mov
repz
sbb
jmp
pop
or
mov
mov
arpl
addr16
sbb
xchg
movsb
push
rclb
push
inc
imul
andb
jns
dec
xchg
pop
das
shlb
lret
push
or
or
cli
mov
jbe
jno
lea
jns
daa
cmp
pop
enter
out
push
mov
add
sub
cs
jecxz
in
xchg
in
fidivl
jo
lret
mov
addr16
test
jmp
mov
push
in
or
daa
in
fcmovnu
mov
sbb
leave
mov
mov
std
add
stc
lock
stos
push
mov
lret
pop
mov
push
js
int
movsl
inc
cmp
add
inc
xchg
aaa
das
leave
mov
pusha
movsl
pop
lods
daa
dec
mov
cmpsl
stos
sarl
fisubrl
stos
dec
insl
push
jmp
mov
mov
pop
xorb
cmp
mov
dec
shlb
es
loop
or
out
aad
xor
xchg
sysexit
pusha
hlt
je
les
push
cmp
xchg
or
popf
out
lahf
xchg
ja
call
jb
into
mov
mov
inc
sbb
inc
cwtl
and
push
icebp
ds
nop
ret
das
mov
sub
lcall
mov
out
pop
sbb
sbb
imul
xlat
xchg
add
inc
push
gs
or
xchg
fwait
aam
add
fcompl
in
movsl
das
fcoms
pusha
les
xchg
lahf
decb
daa
cmp
gs
lea
fisubs
cmp
pop
jne
mov
dec
imul
adc
lret
data16
rcrb
pushl
xlat
iret
mov
dec
rclb
mov
call
stos
add
pushf
loopne
popa
mov
lods
jmp
mov
in
lcall
xchg
cmpsb
out
push
or
inc
and
popf
pop
gs
or
jb
xor
pop
ret
mov
or
outsl
fisubrs
js
aas
je
mov
pushf
mov
das
aam
cmc
in
repz
mov
lahf
cmp
movsl
dec
rcrl
jo
mov
pop
out
test
dec
subl
bound
clc
lcall
ljmp
xchg
ljmp
mov
insl
ds
dec
push
fs
and
imul
pop
call
xchg
mov
sbb
mov
lcall
inc
and
out
sbb
adc
dec
imulw
adc
xchg
dec
clc
cmpl
or
js
inc
cmpsl
or
lods
cmp
sbb
and
jae
xor
xor
jmp
mov
inc
sbb
pusha
loop
jle
push
lock
jae
scas
jae
mov
fcoml
int
mov
inc
das
cmp
adc
dec
cmp
mulps
jbe
iret
clc
leave
mov
fninit
mov
mov
mov
jp
jbe
xchg
fwait
mov
fnsave
xorb
and
sub
cmpsl
jno
xor
out
subl
addr16
scas
xchg
std
cwtl
add
and
pop
mov
sbb
rolb
add
sti
push
mov
mov
inc
mov
or
jp
mov
adc
sbb
sub
out
mov
test
mov
pop
sbb
insl
rclb
mov
mov
ret
sbb
mov
push
stos
lea
scas
mov
dec
cmp
es
fmuls
outsl
adc
scas
mov
adc
jb
lock
mov
add
mov
mov
mov
jmp
rol
ds
rol
stos
test
leave
inc
and
js
push
js
fisttps
or
dec
and
into
jle
or
mov
scas
push
out
push
lea
xchg
and
cmp
in
xor
cli
mov
xor
xchg
imul
or
xor
xchg
leave
adc
jb
sub
xchg
jecxz
xchg
lahf
das
cmp
stos
dec
and
or
xor
jmp
mov
das
adc
jne
xchg
cld
mov
imul
mov
lock
jle
and
push
adc
mov
shrb
ret
mov
aad
lret
popf
add
dec
hlt
push
adc
adcb
mov
test
pcmpgtb
and
pop
in
imul
arpl
pop
int
mov
shll
mov
paddq
scas
xchg
ljmp
lods
shll
sahf
fimuls
arpl
sar
xchg
and
pusha
fwait
cmp
mov
mov
and
out
popa
sahf
cmp
std
add
clc
mov
call
sbb
ret
fisubl
shrb
push
push
or
test
push
mov
popa
les
shlb
les
mov
shr
dec
test
mov
adc
sti
mov
push
cmp
mov
lods
stos
adc
jns
ficoms
repz
push
sub
in
or
sbb
fsubl
dec
data16
test
pop
jns
or
insb
sarb
xchg
hlt
cmp
lcall
sbb
sub
movsl
into
add
test
sub
xor
mov
push
push
push
mov
cmpsb
hlt
cld
scas
fsubrp
cli
mov
js
xchg
aad
mov
loop
push
mov
adc
jg
cltd
or
aam
fidivs
and
jns
dec
in
dec
mov
xor
mov
das
cs
nop
pop
ss
mov
imul
daa
test
add
cmpsl
leave
mov
mov
sub
cmc
and
aad
pop
stc
imull
adc
dec
repz
fbld
xor
mov
mov
cmpsl
filds
adc
mov
aad
xchg
sahf
jp
insl
addr16
gs
fwait
movsb
pop
movsb
loop
sbb
xlat
push
fwait
or
lods
sub
or
push
iret
addb
addr16
aas
fcomp
fistpll
xchg
dec
js
xor
xor
vmptrld
mov
fwait
and
fdivl
pushf
sbb
pop
inc
cmp
fistpl
and
and
int
ret
cmp
cltd
sub
cli
in
xchg
ficompl
fxam
pop
movsl
and
clc
test
cltd
push
ss
stos
js
mov
shlb
sub
loope
mov
jge
xchg
sub
jns
mov
push
jne
inc
jne
xor
xchg
sub
fcomps
mov
mov
sub
dec
push
or
cmp
dec
inc
jmp
repnz
xchg
mov
imul
js
xlat
addl
shrl
jae
scas
in
call
xchg
mov
mov
ljmp
or
push
adc
and
jo
push
adc
push
das
cmp
mov
jle
shl
jns
jno
jo
xlat
mov
ljmp
sahf
pop
push
std
scas
sub
cld
cli
test
xchg
sub
call
scas
and
push
js
push
mov
add
das
adc
sbb
push
clc
adc
hlt
mov
mov
mov
clc
fidivrs
arpl
lret
icebp
sarb
jbe
jecxz
adc
shlb
pop
nop
mov
shr
xchg
pusha
mov
jnp
mov
mov
add
into
cmpl
scas
push
orb
inc
mov
pop
lods
or
iret
push
hlt
mov
xchg
jo
ljmp
std
cli
cmp
lret
pop
outsl
std
jle
pop
decl
fcomps
sbb
jb
and
test
fimull
mov
xor
mov
in
push
jnp
pusha
icebp
push
mov
xor
jno
xchg
mov
and
insl
adc
xchg
fs
popl
cltd
ds
cmp
loope
inc
inc
xor
ss
push
add
cmp
leave
imul
js
push
js
jnp
les
movsb
cmpsb
or
adc
nop
scas
or
shrl
out
add
out
ss
imul
mov
sub
ds
mov
cmc
ret
mov
push
add
mov
mov
push
inc
mov
insb
sbb
int3
leave
test
push
xorl
or
insl
cs
scas
fldl
adc
sub
shl
mul
pop
cld
lds
fldenv
mov
and
das
adc
stc
push
imul
push
es
dec
push
add
aam
mov
iret
jbe
movsl
push
pusha
addb
in
test
cmp
pop
pop
cli
sub
rol
int3
popf
fisubrl
inc
inc
fldl
xor
pop
mov
fnstcw
mov
in
jl
xchg
sbb
movsb
push
xor
sahf
movsl
das
das
mov
cltd
xchg
sbb
cwtl
mov
daa
insb
fiaddl
in
stc
sub
js
jmp
sahf
sti
cmp
inc
mov
pushl
lock
std
mov
fs
mov
ja
adc
sahf
setno
fdivs
test
mov
pop
rorb
sbb
loop
or
xchg
xchg
push
test
mov
pop
addr16
adc
or
mov
add
mov
insb
int3
faddp
icebp
dec
jmp
pop
lea
imul
test
divb
lea
loopne
push
mov
je
sub
inc
movsb
and
ja
setns
movsl
or
sbb
xor
lcall
imulb
ljmp
icebp
fdivr
mov
pop
sub
sub
leave
cmpsb
arpl
test
shlb
push
xor
lret
rolb
ljmp
dec
mov
nop
mov
cmp
mov
mov
or
mov
lock
mov
ret
fidivs
mov
jbe
jnp
cltd
out
xlat
push
dec
leave
int
int3
lds
test
int
mov
fucomi
mov
sahf
xor
mov
imul
push
jp
or
cmp
add
rorl
pop
addr16
subl
dec
push
mov
inc
mov
ficoml
mov
dec
ds
mov
or
xor
popf
push
dec
mov
fs
subb
inc
or
sub
mov
mov
pop
inc
iret
sbb
lret
test
std
lock
aad
add
test
jb
sub
and
aaa
aad
push
pop
loope
rclb
out
lahf
aad
dec
and
inc
mov
lods
dec
divb
lret
cmp
push
test
push
jnp
mov
enter
sub
add
dec
cmp
es
push
out
data16
and
mov
adc
xchg
adc
fstpl
stc
lret
mov
leave
clc
add
cmp
data16
push
shrl
cmp
mov
push
push
mov
sahf
xor
clc
adc
inc
std
pusha
jmp
ss
xchg
push
inc
and
fldl
aad
out
scas
lock
jecxz
push
rorb
add
mov
loopne
movsb
xor
cmpsb
sbb
mov
out
fimuls
ja
add
fldt
rcr
xchg
sbb
mov
lret
mov
mov
cmp
inc
pop
inc
sub
xor
call
lcall
lret
ret
sub
test
adc
out
sub
jbe
jae
into
dec
sbb
push
push
dec
xchg
xchg
inc
push
and
sbb
shrb
daa
push
lea
popf
push
sbb
cmpsb
leave
or
daa
mov
ja
lods
out
push
lods
xchg
cltd
fadds
adc
sub
sti
inc
fnstsw
loop
xchg
je
pop
jbe
xchg
add
mov
outsb
mov
test
es
sub
xchg
add
push
pop
push
fcompl
clc
sbb
or
sub
mov
xchg
lock
scas
sarl
lock
jecxz
arpl
mov
shr
cmp
rcll
jmp
pusha
data16
cmpsb
leave
out
sahf
stos
sbb
sub
and
fmuls
lds
push
adc
jb
gs
push
mov
cmp
cwtl
push
das
sub
pop
xchg
ss
or
push
sub
or
sub
mov
lea
incb
inc
jmp
ret
cmp
fcmovne
out
cld
mov
out
mov
out
js
push
js
jg,pn
insb
dec
sbb
xchg
jae
cmp
sub
push
mov
out
pop
inc
in
pop
fdivrl
adc
cltd
repz
lret
pop
and
arpl
fists
fisttpll
cs
and
adc
lock
inc
fucomip
sub
jge
ret
fmulp
out
fcomp
loop
pushf
ljmp
push
and
insl
sub
mov
rcll
mov
adc
cmp
inc
sbb
adc
xlat
out
das
pop
pop
pusha
push
inc
loop
clc
mov
in
mov
aaa
in
bound
shrb
cmp
pop
xchg
pop
sbb
data16
push
push
mov
push
mov
pushf
outsl
xor
call
jle
loope
test
insl
xchg
lods
iret
leave
iret
fsubrp
mov
lock
adc
andl
push
adc
in
mov
adc
xchg
cmc
sub
arpl
jnp
imul
mov
pop
fisttpll
test
or
mov
cmpsb
xchg
dec
mov
adc
add
jno
push
and
aas
aam
push
cmp
push
mov
call
xorb
testl
mov
sbb
je
mov
in
loop
shrl
rcrl
xchg
sbb
in
inc
xchg
pop
jns
lret
and
mov
mov
cltd
mov
xor
cmpsb
xor
into
adc
repz
sub
pop
nop
ret
push
xor
aam
out
out
sub
cltd
push
xchg
inc
pop
adc
xchg
insb
xchg
int
push
ret
repnz
mov
inc
popa
cmp
pop
arpl
xchg
or
aad
lret
shrl
or
aaa
fidivrs
cld
adc
sti
and
jge
mov
jmp
sub
jmp
rcll
push
nop
fisubl
add
cld
shrb
out
lods
push
and
lret
push
dec
dec
aam
dec
movsb
lods
mov
jae
dec
imul
jge
push
push
dec
int3
loop
and
imul
cmpsl
pushf
call
out
sub
xor
movsl
lcall
xchg
insl
jl
lret
cmp
sbb
push
cmp
insl
test
jb
mov
jo
fsts
sub
and
jle
lret
ds
adc
in
rcll
dec
call
fisttpll
mov
add
fstl
test
xor
in
and
hlt
pop
inc
test
jnp
shrb
jmp
movsl
sbb
call
outsl
dec
mov
ljmp
inc
or
xor
push
lock
ret
test
aas
insl
divb
push
pop
icebp
xchg
mov
lods
fnstsw
mov
icebp
sbb
test
mov
aas
ljmp
xor
pop
jb
mov
mov
enter
and
adc
and
repz
scas
loope
push
outsb
or
mov
jle
lods
inc
jge
pushaw
jno
lds
rorl
mov
add
add
and
mov
push
xor
xchg
scas
imul
cltd
cmp
fwait
pop
test
push
cmp
fwait
pop
decl
mov
cmp
scas
js
loopne
jg
aas
fs
lret
pop
fiadds
jns
icebp
cmp
pop
js
fisubl
xchg
push
lret
jl
pop
shlb
xchg
sub
cmpsb
inc
shrl
lods
jle
pushf
repnz
jae
jae
sbb
fadd
cmc
jbe
dec
cmp
movsl
dec
das
gs
inc
shl
add
lcall
mov
or
pop
dec
cmc
mov
ljmp
popf
adc
insb
imul
sahf
pop
push
jne
lret
sbb
orl
and
inc
icebp
push
scas
stos
pop
clc
rolb
stos
pop
addl
fiadds
push
insl
jge
cld
fistl
mov
add
push
stos
or
and
outsb
fidivl
xchg
cwtl
and
test
mov
fidivl
ljmp
ror
xor
inc
xor
push
push
cmp
aas
jmp
mov
aam
jns
dec
jbe
int
insl
loop
mov
ss
push
test
mov
or
sbb
push
enter
pop
dec
jmp
rcl
int
xlat
aad
sahf
mov
pop
sarb
js
jl
js
jb
mov
lods
xlat
sbb
aam
add
rorb
xchg
sbbl
sar
mov
add
int3
mov
arpl
or
push
mov
mov
dec
jns
cld
add
jg
adc
jge
cmpsb
adc
xchg
cmpsb
sub
jnp
insb
and
lahf
or
mov
lds
push
jmp
in
xorb
enter
jbe
jl
pop
test
cmp
out
cmp
jge
mov
daa
jno
enter
jbe
add
inc
daa
popf
lods
cs
lret
fstps
and
lret
sub
imul
mov
lea
inc
jae
pop
pop
mov
pop
scas
test
idivl
mov
push
jae
je
movsl
push
mov
mov
cmp
shrl
std
mov
fstps
dec
adc
sbb
and
popa
push
sbb
dec
ds
sbb
lahf
std
push
push
pop
push
add
jnp
lods
call
cmp
outsb
push
cmp
jbe
mov
in
mov
sbb
test
insl
add
lahf
sub
and
out
and
xor
mov
pop
rcr
pushf
cmpsl
add
pop
cmp
jecxz
in
je
das
mov
int3
dec
jb
roll
pop
int
nop
shll
lret
sahf
cmpsb
mov
ljmp
jecxz
test
inc
dec
adc
xchg
idivl
mov
mov
cmpsb
mov
add
cmpsl
stos
sti
mov
jmp
int
out
scas
cs
pop
lods
push
mov
xor
mov
mov
cld
test
adc
push
pop
enter
stos
mov
int3
lret
ja
mov
xchg
dec
cmp
imul
mov
pop
int3
dec
mov
fists
or
mov
cmp
dec
xor
enter
lret
dec
lods
mov
adc
rol
in
or
and
fs
je
test
add
mov
fdivrl
clc
push
push
fwait
sarl
test
lock
test
lea
test
loop
push
push
stos
jl
in
pop
adc
and
dec
or
jbe
mov
loope
into
pop
add
pusha
fsubrl
in
pop
movzwl
jno
xchg
mov
sbb
mov
pop
cld
fwait
jecxz
ret
movsb
push
cli
mov
mov
fucomi
mov
dec
test
jl
xchg
adc
rolb
push
xchg
cmp
sbb
imul
mov
scas
sbb
and
add
in
fs
pop
push
jp
sbb
scas
push
sbb
sub
movsl
out
and
mov
roll
call
xchg
cmp
push
nop
out
xchg
sti
ja
xchg
loope
and
cmp
aad
in
push
xor
out
and
sub
push
icebp
mov
mov
and
mov
mov
jnp
cmp
ja
ret
ret
fisubl
xchg
jge
hlt
movsl
sbb
pop
inc
ret
inc
ficompl
dec
ss
repz
pop
cmp
sti
inc
enter
ja
mov
and
scas
stc
sub
test
lods
rcrb
test
mov
hlt
gs
dec
ret
xor
iret
lds
lahf
in
jp
mov
test
shll
jb
mov
cmpb
or
or
xor
sti
scas
popf
push
sbbl
mov
aaa
inc
sti
xchg
inc
dec
ds
addb
xchg
in
mov
test
xchg
call
sub
cli
dec
movsl
out
js
or
mov
or
inc
jl
mov
ja
xchg
push
data16
and
lds
leave
add
mov
or
jl
adc
das
out
xorl
xor
mov
pop
sub
push
cmp
pop
cmp
dec
and
or
sbb
push
insl
dec
insb
pop
sbb
push
std
hlt
call
lahf
lds
mov
sarl
fwait
mov
dec
xchg
xchg
ds
mov
and
rorl
test
cmc
or
jle
js,pt
ret
xchg
cmp
xor
pminub
add
mov
es
fsubr
jecxz
adc
sbb
dec
test
xor
fs
sbb
cmpsl
dec
in
xchg
add
fcmovne
inc
dec
inc
jle
lret
outsl
dec
add
sbb
shr
push
add
mov
cmc
add
inc
adc
push
lahf
ret
js
jl
js
into
mov
imul
mov
mov
or
mov
lds
sbb
inc
adc
mov
mov
incl
adc
xchg
and
lock
loopne
mov
ret
and
clc
fsubrl
es
xchg
stc
mov
andl
xchg
rcr
pop
sti
out
xchg
add
cmp
pusha
adc
sbb
in
pop
jg
je
jp
cmovge
or
lods
and
rcl
or
or
sub
ljmp
push
cmp
adc
jmp
aad
fs
mov
mov
xchg
jnp
gs
cmc
fs
test
les
pop
fstpt
adc
pop
pop
add
mov
scas
mov
popa
movsl
inc
pop
leave
push
mov
stos
dec
push
and
jecxz
jae
xchg
mov
cld
gs
jno
jae
mov
iret
push
scas
mov
stos
cmp
xchg
sub
enter
mov
xchg
cmp
into
insl
ds
jp
daa
loopew
popa
outsl
jg
mov
mov
sbb
lcall
mov
xor
xchg
mov
cld
fisubrs
inc
xorb
jb
int
cltd
xchg
out
lds
add
in
sbb
jno
aaa
repz
push
sub
pop
js
and
add
jecxz
mov
xor
push
in
pop
xlat
mov
int
xor
imul
loopne
loopne
dec
push
cmp
outsl
sub
incl
push
pop
or
pop
xchg
xchg
mov
test
rcrl
push
cmpsl
ja
jmp
mov
mov
inc
enter
xor
sbb
addr16
fldt
in
mov
xchg
push
xchg
jg
bound
std
sar
arpl
pop
xchg
fisttps
test
nop
rolb
pop
pop
push
pop
xor
cmpsl
sub
addr16
push
addr16
xchg
fidivrs
push
push
je
aaa
and
pusha
lahf
out
outsl
aad
pop
cmp
or
cmp
test
inc
sub
cmpsb
arpl
in
shlb
aaa
dec
int3
xchg
inc
icebp
orl
cmp
and
pmaxsw
cmc
adc
sbb
sbb
loopne,pt
push
jae
inc
add
arpl
inc
cmp
movhps
dec
xchg
popa
stos
sbb
mov
outsb
dec
popf
fidivs
jno
jl
int3
adc
pop
mov
addb
and
mov
je
pop
sbb
xor
js
lret
xchg
dec
jle
out
dec
push
popa
mov
fwait
jl
lret
xor
orb
xchg
aaa
roll
imul
inc
in
rorb
dec
and
jns
insb
sbb
flds
adc
cmc
jbe
add
cmc
sbb
mov
shlb
and
fs
idivl
out
sbb
in
iret
dec
sub
ss
pop
or
sbbb
stc
mov
sahf
jmp
push
inc
cmp
arpl
push
bound
scas
dec
mov
mov
repz
fisubs
push
mov
dec
push
mov
das
outsb
loopne
shll
out
pop
jb
movsb
outsl
jnp
jmp
xor
outsb
clc
cmpb
lods
pop
aam
rcrb
sub
cmpsb
aam
std
leave
fistpl
call
mov
fdivl
pusha
pop
fmull
stos
cmp
gs
ret
push
jg
inc
xchg
out
cmp
pop
jo
mov
pop
xchg
cmp
lret
push
insl
sbb
in
xlat
add
mov
push
cmp
pop
pop
jnp
xor
xlat
cwtl
jl
adcl
js
xor
jl
mov
mov
movsb
cmp
std
mov
sub
cwtl
cli
xor
jnp
aas
ficomps
imul
notl
adc
mov
mov
dec
pop
cmp
adc
call
jnp
jnp
inc
push
dec
and
ret
lock
cld
lds
mov
cmpsb
and
xchg
or
dec
mov
push
mov
ficoml
loopne
mov
mov
push
fisubs
fs
xchg
dec
xlat
add
das
adc
movsl
mov
aaa
test
mov
out
movsb
mov
into
adc
mov
or
in
inc
stos
add
pushf
loop
cmp
push
add
aas
ret
rcl
mov
or
sub
jg
push
js
sub
imul
dec
inc
mov
movsl
ror
mov
jge
or
dec
mov
sti
jecxz
mov
or
jbe
pop
movsl
js
mov
dec
push
and
aad
or
push
nop
sub
fcoml
arpl
mov
aad
fistps
xchg
jns
sbb
pop
cmpsl
mov
jnp
xor
pop
bound
out
mov
daa
or
xor
and
aad
add
or
mov
cmp
addr16
dec
mov
cmp
inc
icebp
and
out
stos
fnstcw
mov
cmp
movsl
jo
ret
sub
movsl
in
ja
sbb
aad
jg
cltd
aam
iret
lret
inc
out
jp
xchg
pop
or
sar
sub
push
idiv
mov
cmp
add
cmp
sub
fwait
inc
lock
xchg
rcrb
dec
insl
ror
ret
js
jge
mov
je
inc
jno
sub
xchg
sbb
sbb
xchg
fwait
push
stc
pop
or
cltd
leave
add
sti
sub
sbb
out
test
and
mov
bound
lods
dec
inc
dec
ljmp
jmp
pop
lock
cmp
jecxz
jmp
paddusw
inc
int
jl
xor
push
xchg
pop
pop
add
cmp
xor
mov
les
icebp
clc
gs
dec
xlat
int
cs
inc
add
fnsave
mov
adc
xchg
repnz
sbb
lahf
push
cltd
pop
insb
or
mov
add
cmc
cwtl
mov
add
jl
cli
cld
cwtl
jmp
adc
daa
mov
mov
xor
mov
adc
or
imul
pop
mov
pop
sbb
adc
sbb
lret
sbb
push
or
rorl
and
dec
jnp
sbb
mov
jmp
rcrl
mov
push
outsb
push
xchg
fcomp
cmp
push
cmp
ljmp
jmp
jge
add
sbb
push
in
sub
sbbb
pop
jg
mov
leave
cmp
xchg
push
fs
mov
aas
xlat
insl
imul
push
sti
iret
mov
cmpsb
push
test
mov
arpl
push
mov
xchg
sbb
and
icebp
mov
cltd
out
dec
push
cmp
flds
rcl
in
mov
sub
mov
and
mov
cmp
jne
pop
mov
fiadds
fadds
mov
das
mov
pop
xlat
pop
push
cmp
jge
mov
inc
arpl
mov
or
or
das
and
push
pop
int
cmp
dec
sbb
dec
and
add
fs
mov
pop
jge
push
sub
push
sub
mov
lds
inc
aas
inc
jns
adc
cmp
mov
adc
adc
adcb
std
ljmp
push
fstpt
in
sub
jno
xlat
xchg
and
test
out
loop
mov
leave
scas
data16
mov
dec
daa
jnp
rcrl
stos
jecxz
addb
test
xchg
adc
push
repz
pop
and
or
mov
pushf
mov
jbe
lea
push
cmp
hlt
pop
dec
adc
push
jb
or
push
hlt
aaa
push
pop
fisubl
out
aaa
leave
es
sub
pop
mov
mov
jnp
xorb
testb
test
ljmp
loope
shrb
adc
adc
and
es
out
add
push
test
mov
push
dec
int
xchg
cmc
cmp
in
imul
push
int
add
out
jmp
jl
pop
mov
push
add
std
ret
rolb
cld
out
sub
shll
es
aaa
xor
pop
mov
push
cmc
push
mov
inc
and
frstor
cmc
inc
outsb
ja
mov
push
out
and
addl
dec
in
dec
daa
shl
popa
xor
pop
mov
dec
daa
sti
push
shl
jno
ljmp
sbb
sub
mov
mov
adc
jns
in
push
movsl
bnd
mov
sbb
pop
lea
fwait
popf
lcall
iret
loop
loopne
clc
les
dec
fdivr
jne
jmp
ror
fcmovbe
rcr
mov
pop
adc
push
js
sbb
add
jmp
cwtl
pop
mov
push
sub
dec
jle
jge
push
add
mov
cltd
mov
fbld
mov
jecxz
add
inc
fdivs
in
cmp
dec
jne
inc
or
mov
adcb
cmp
mov
pusha
mov
cs
xor
call
insl
cmc
xchg
int3
add
add
andb
hlt
nop
inc
xor
push
hlt
fcompl
mov
loopne
push
andl
mov
repnz
fwait
cmp
inc
or
dec
xor
add
test
std
inc
xchg
leave
and
fwait
add
or
dec
xor
pop
pop
int
clc
ficompl
jno
or
lea
ljmp
fdivl
add
xor
push
pop
dec
mov
bound
adc
aaa
xlat
cmpsl
movsb
mov
or
movsb
jb
in
fbstp
std
pop
stos
pop
ds
arpl
push
cld
loope
ret
es
or
int3
stos
xchg
loopne
andb
dec
xchg
test
mov
pop
push
enter
sbb
lds
ja
sbb
jo
popa
imul
push
test
aas
inc
ljmp
jb
mov
pushf
xchg
jne
push
lds
lret
adc
inc
clc
out
mov
cmpl
mov
cmp
lret
into
ret
pop
pop
clc
mov
in
mov
push
pop
mov
lods
aas
stc
jne
dec
into
and
sbb
inc
cmp
cld
lcall
lods
hlt
fsub
jge
mov
push
xchg
fs
cmc
mov
fmul
inc
mov
add
loop
repz
mov
xor
lret
mov
arpl
mov
pushl
xchg
mov
pop
dec
leave
mov
int
clc
sub
pusha
cmp
bound
or
pop
imul
jge
pop
stc
arpl
insb
cwtl
lret
dec
in
or
inc
and
insb
jb
mov
fcmovbe
mov
xor
dec
out
mov
adc
xor
ljmp
jo
enter
loope
in
scas
dec
aad
fcoml
cmovae
add
add
ss
sbb
xchg
mov
mov
ja
daa
test
push
jns
xchg
movsb
jnp
dec
insl
pop
into
or
pop
or
cmpsb
pop
negb
xor
fcmovne
push
ss
adc
pop
xchg
xlat
int3
or
inc
fbld
ja
xor
shr
mov
add
aas
mov
imul
fcompl
cmp
push
fs
ja
orb
pop
icebp
imul
mov
xor
fwait
mov
mov
pusha
daa
or
lahf
lds
xchg
and
sub
cmpsl
into
xchg
pop
xor
mov
add
xchg
jp
or
adc
shrl
pop
cwtl
stos
sbb
lcall
and
out
arpl
testl
inc
fdivl
and
cmp
xor
jae
xor
stos
adc
sbb
rol
push
arpl
mov
or
shl
int3
xor
outsb
adc
fsts
fidivs
pop
mov
cmp
shl
stos
xchg
pop
int
xchg
push
fimull
cltd
mov
adc
jnp
dec
lcall
sbb
les
mov
lret
fnsave
outsb
xlat
mov
push
sbbb
pop
add
addr16
ss
pop
ja
or
jb
fisttpl
orb
je
cltd
lock
mov
xchg
rorb
mov
cmp
push
test
stos
mov
pusha
popa
lret
nop
loope
add
test
cmc
mov
fdivrp
insl
cli
xchg
neg
addr16
in
push
cmpl
adc
mov
dec
test
call
out
xchg
test
sbb
std
sbb
sbb
rcr
pop
sub
pop
aaa
dec
push
lcall
das
mov
movsl
sbb
jae
and
lods
sbb
in
mov
push
leave
cltd
jb
lahf
test
ds
push
movsl
xchg
sbb
jo
xchg
ficomps
test
inc
cmpsb
xor
enter
mov
mov
out
jo
test
mov
mov
jmp
aas
vpmullw
xlat
jne
fs
pop
daa
repnz
or
js
jl
js
aaa
jle
or
pop
push
jns
fdivrp
inc
nop
jne
mov
xor
out
xor
lea
add
hlt
movsb
sub
xchg
dec
fcoml
mov
pushf
in
lock
lcall
xor
stos
pop
lods
xor
push
dec
mov
ljmp
js
jno
jmp
mov
stc
arpl
aaa
js
add
jecxz
js
mov
les
or
jno
sub
call
dec
repz
pop
fsubrs
xchg
or
orb
cmc
dec
int3
push
lret
cmp
lods
adc
cltd
pop
sub
sbb
fcomps
insb
icebp
in
push
adc
dec
pop
mov
arpl
sahf
mov
add
insl
inc
dec
imul
in
xchg
fiaddl
sub
pop
rcrl
std
rcrb
or
adc
pop
fwait
pusha
add
dec
dec
cwtl
jno
or
inc
in
sahf
inc
cmp
out
test
test
std
mov
xchg
jo
and
xlat
sub
fdivl
ret
xchg
cwtl
shlb
outsb
sti
mov
cmp
dec
rorl
inc
repz
add
and
adc
push
or
sub
and
in
out
mov
or
outsl
push
gs
pop
cmc
fucomip
cmp
sub
fsubrs
adc
dec
sub
jge
mov
test
leave
xchg
iret
nop
out
and
cltd
subb
mov
inc
mov
xlat
setns
xchg
leave
sbb
pop
clc
cmovns
std
sub
push
inc
dec
out
cltd
push
fisubrs
push
pcmpgtw
inc
or
fisubrs
enter
pop
daa
fists
sub
mov
mov
jo
cmpl
adc
add
shll
outsb
addr16
icebp
sti
aad
jmp
jne
xchg
jns
stos
bound
pop
movsl
les
int3
pusha
aad
xor
shll
pop
ss
mov
shrl
xlat
pusha
dec
lahf
dec
mov
lods
xchg
imulb
dec
jmp
int
xchg
push
std
cmp
cwtl
or
mov
adc
jl
and
cli
inc
andb
mov
and
in
jbe
and
cmc
xchg
or
pushf
mov
in
sbb
fwait
mov
push
inc
xchg
xor
mov
movsb
in
retw
jl
add
pop
dec
in
pushf
insl
xor
shrl
and
dec
inc
and
in
dec
mov
or
int
push
cmpsl
push
sbb
and
cmp
or
pop
jb
iret
rcrl
dec
out
add
xchg
iret
push
ja
aam
pop
inc
in
and
sub
movsb
push
mov
cmp
popa
imul
jle
das
mov
lods
mov
xor
stc
movl
or
sahf
out
mov
push
pushf
dec
adc
iret
cwtl
shlb
add
pop
mov
cmp
lods
lock
and
lcall
std
mov
jmp
mov
test
mov
ret
sub
mov
sbb
les
inc
add
fst
cmc
xor
lods
in
push
aam
aad
cmp
jmp
pop
sbb
sub
mov
xchg
mov
popa
leave
aam
pop
sub
jnp
scas
shr
mov
movsl
scas
xchg
or
inc
mov
dec
xorl
jae
fxch
std
repz
aam
cmpb
xchg
imul
mov
push
cmp
pop
mov
sbb
jp
dec
push
call
xlat
inc
ljmp
push
jmp
lahf
fstpt
or
jb
call
jno
cmp
shrb
loop
cmp
fstpl
les
enter
shlb
pop
popf
mov
dec
sbb
movsl
cltd
xchg
mov
movsl
push
mov
or
xor
or
pop
or
shrb
xchg
xchg
pop
cmp
call
cmp
ja
rorl
pop
paddsb
cwtl
cwtl
je
xchg
xorb
cli
lret
xlat
and
je
das
mov
testb
loop
fmuls
pop
out
sub
out
movsl
dec
fnstcw
nop
add
push
popf
mov
jecxz
xchg
idivl
jp
fldt
loope
xchg
push
pop
jmp
or
inc
cmp
ret
fscale
inc
ror
dec
lods
lds
pop
xchg
mov
pushl
lea
pushl
jmp
cmp
rol
rcl
fcmovnb
mov
inc
shl
aaa
fmulp
jp
jg
push
js
mov
sbb
lret
push
push
sub
mov
mov
cwtl
or
add
ret
pop
push
add
or
or
test
stc
mov
cmp
or
jno
test
cmp
sbb
lods
xor
sub
xor
es
call
rolb
sub
dec
sahf
cmp
and
mov
out
test
add
cmp
insl
adc
fdivrl
push
push
cmpsl
dec
ficoml
divl
into
lcall
sbb
xchg
push
and
sbb
jg
mov
inc
cmc
cmpb
stc
gs
jns
shlb
push
push
inc
lret
xlat
or
jns
mov
mov
fnstcw
sbb
push
sbb
push
push
rcll
rorl
jl
push
xchg
fmull
test
inc
cmp
jp
aas
in
mov
lret
lods
gs
add
movsl
je
mov
push
sbb
inc
repz
jnp
xor
pop
add
stc
pop
mov
out
test
sbb
dec
shll
loope
or
fnstcw
and
subl
jmp
inc
cmp
and
rclb
rorl
arpl
subl
cmpsl
pop
push
call
in
into
dec
mov
xchg
mov
mul
scas
stos
jo
rorl
mov
nop
popf
pop
push
imul
mov
addb
std
cmp
outsl
mov
mov
jae
in
push
sbb
dec
mov
dec
je
sub
pop
loopne
add
jno
mov
dec
push
mov
jl
js
adc
pop
and
pop
pop
gs
push
cmpsb
push
jp
insb
cmp
pop
xchg
sti
dec
aad
pop
test
or
shll
inc
lret
cmpsl
lea
mov
mov
inc
ja
push
sub
dec
inc
sub
test
inc
inc
sbb
xor
cmp
mov
mov
enter
mov
sub
loop
fwait
pop
jno
inc
jae
jbe
push
lods
inc
arpl
ret
ss
jp
bound
push
add
test
leave
call
mov
in
rclb
dec
std
jae
pop
dec
xor
dec
hlt
out
jo
lcall
jp
nop
xlat
and
jae
lds
dec
popf
sahf
lods
mov
ds
loope
jmp
lods
cmp
cmp
xor
sub
mov
scas
stos
fcoml
pop
add
sbb
adc
testb
pop
xor
out
arpl
sbbl
repz
hlt
push
xor
mov
negb
and
aam
inc
xchg
lret
in
jnp
cmpb
xchg
pop
sub
popf
lea
sbb
add
loope
test
xor
inc
mov
jecxz
cmp
sub
decb
leave
js,pt
pushf
dec
xchg
xlat
adc
sub
pop
test
pop
inc
xorb
jle
mov
cmp
cmp
pop
mov
push
inc
das
lret
sub
testb
inc
xchg
leave
ja
mov
cwtl
subb
lods
lret
xlat
mov
and
inc
enter
enter
xchg
shll
add
jno
xchg
lahf
insb
cmp
scas
and
lret
jecxz
mov
add
not
test
lods
cli
or
mov
xor
ljmp
imul
dec
fistpl
xor
fisttpll
mov
test
arpl
ficoml
loop
and
ljmp
insb
jle
pusha
dec
test
push
dec
dec
lret
icebp
jne
cmp
das
pop
cmp
iret
imul
pop
lods
and
sub
imul
or
pop
insl
jmp
mov
and
adc
ja
fwait
aad
bound
xlat
imul
inc
arpl
sbbl
add
pushf
sbb
out
mov
ret
xlat
mov
push
lods
cld
push
mov
xor
add
icebp
shrl
std
cmp
pop
sub
out
int3
cmpsl
cmp
mov
orl
movsb
mov
adc
pushf
jge
rcrl
test
jl
or
xor
cmpsl
or
lahf
daa
out
test
scas
sbb
fistl
jecxz
inc
js
sub
mov
hlt
cld
gs
repnz
inc
and
add
jmp
aas
aas
or
pop
cltd
cmpsl
pop
sbb
push
js
test
dec
xchg
push
push
in
and
arpl
add
add
scas
cli
pop
loopne
fs
jnp
mov
mov
test
fcomp
out
jl
fistps
push
loope
sbb
out
out
orb
cmp
out
lret
cwtl
in
adc
ret
and
outsb
lret
lds
push
icebp
adc
mov
flds
mov
outsl
xchg
xor
add
xchg
cs
repnz
ret
jne
scas
dec
jno
or
and
leave
sti
gs
cmc
movsl
es
je
repnz
and
mov
adc
pop
pop
inc
mov
stos
sub
mov
or
scas
lcall
mov
push
daa
out
int3
push
dec
stos
lods
jecxz
or
lods
test
ret
fmull
out
cld
mov
cwtl
inc
inc
pop
push
push
scas
push
popa
testl
mov
icebp
aam
sbb
arpl
mov
inc
cmp
push
or
dec
dec
mov
pop
xchg
in
sub
mov
ficompl
fsubl
stos
int3
decl
outsl
and
mov
xchg
mov
adc
scas
cmp
orb
cmpsb
push
adc
add
sub
sub
lock
filds
add
or
jo
fldt
cs
cmp
popf
jmp
gs
movl
add
lahf
pop
fidivrs
jle
popf
rclb
mov
aad
lds
clc
inc
dec
repnz
or
fmuls
add
pop
push
inc
inc
pop
jle
fdivrs
inc
movb
mov
jl
in
push
cmp
sub
inc
cld
sbb
xor
ret
lret
and
aam
or
outsb
inc
in
sub
fcoml
add
negb
popl
xchg
lahf
ds
iret
std
lods
jp,pt
sub
les
sub
or
push
fcmovbe
jbe
testl
sbb
addr16
push
adc
rcl
subl
iret
ret
jnp
mov
lret
mov
xor
xchg
sar
and
mov
adc
lods
pusha
repz
sub
xor
xor
hlt
mov
add
dec
and
movsb
xchg
loopne
pop
shr
ficompl
inc
pop
push
pop
sub
or
push
aad
filds
sahf
add
movsl
es
jge
push
arpl
fcomps
push
cs
push
push
adc
ljmp
xchg
stos
sbb
aas
fidivrl
jecxz
mov
rorl
outsb
and
daa
cmp
in
lret
sub
push
push
jmp
out
sbb
test
fs
fimuls
data16
cltd
popa
stc
add
mov
aaa
xchg
pop
cmp
dec
flds
shlb
xchg
data16
outsb
out
or
xchg
notl
lret
mov
sbb
aaa
cmp
into
sub
pop
or
push
xlat
adc
xchg
xor
push
ds
xchg
mov
ficoml
add
cld
adc
lds
out
jns
adc
aas
push
pop
sub
adc
cmp
fcmovnbe
icebp
sbb
outsl
imul
push
cmp
jg
mov
dec
iret
lahf
or
sbb
jle
sub
jle
adc
mov
ret
insb
movsb
lods
adc
in
les
add
inc
jmp
lret
stos
das
mov
xchg
add
loopne
xlat
jno
mov
dec
mov
imul
pop
ja
loope
jg
in
or
inc
jnp
lahf
sbb
xchg
aaa
mov
cmp
dec
lds
lcall
mov
iret
pop
es
jl
cmp
lahf
sub
in
notl
push
mov
sub
daa
rcll
xchg
sub
inc
mov
mov
or
adc
fstpt
roll
mov
xor
or
jg
in
cli
neg
stc
adc
cmp
inc
mov
fcomps
add
inc
jge
or
mov
sarl
sbb
fdivl
dec
push
flds
cld
lahf
rol
jae
cmpsb
mov
out
jns
jo
inc
xor
shll
or
mov
into
push
mov
mov
in
jg
jg
pop
lds
or
and
fwait
mov
fwait
inc
cmp
ljmp
dec
and
lea
pushl
jmp
les
fidivrl
mov
ret
push
jg
push
js
sub
jno
les
ds
pop
and
mov
pop
sbb
shll
mov
js
out
fcoms
scas
ss
movsb
repnz
ss
and
fsts
lret
out
popa
scas
push
mov
mov
outsl
mov
imul
jle
mov
pop
jns
cmp
stos
pop
test
rcll
xchg
cld
ret
push
mov
aas
out
test
or
test
cmp
mov
jp
pop
xchg
pop
into
add
dec
cwtl
int
jns
push
and
push
aam
popa
mov
pop
jle
xor
lret
call
adc
fsubr
xchg
lret
ja
add
popa
inc
sahf
pop
rcr
repnz
jae
or
xor
cmp
shl
xchg
push
ss
out
sub
lock
in
stos
fnstsw
xchg
xlat
dec
inc
inc
xor
mov
dec
fst
lret
insb
adc
push
add
out
mov
mov
push
cwtl
sub
and
lods
jg
movsb
arpl
test
inc
daa
lock
push
lds
pop
dec
push
clc
inc
push
incl
iret
and
pop
pop
js
xor
add
inc
xorl
sbb
xor
incl
mov
pop
mov
cli
pop
inc
fadd
test
mov
jp
or
or
adc
je
out
adc
mov
movsl
cmp
jecxz
and
pop
rorl
int3
in
das
push
push
dec
cmp
fstpl
xchg
push
sub
insb
xchg
or
imulb
test
orb
mov
mov
inc
enter
dec
dec
pushaw
adc
repnz
shll
sbbl
dec
lods
test
loope
ror
ret
inc
inc
nop/reserved
enter
imul
loop
mov
aas
jb
imul
cld
sub
out
int3
sub
clc
inc
aas
jle
jae
mov
lods
push
jno
arpl
mov
mov
jg
in
push
cs
pop
pop
inc
fisttpl
cld
mov
mov
scas
enter
test
push
cmp
call
rcl
xor
es
icebp
aad
xchg
dec
mov
lea
jl
pushf
and
repz
and
push
gs
inc
lock
aam
daa
loop
sahf
xor
pop
stos
loope
icebp
xor
sub
mov
and
andl
cmpsl
outsb
cwtl
pop
mov
jb
push
arpl
push
loop
scas
fs
lcall
test
jnp
inc
pop
dec
cltd
push
pop
push
inc
push
out
in
xor
jg
sub
mov
in
mov
adc
call
out
pop
adc
sbb
mov
js
sarl
xchg
inc
repz
popa
adc
cmp
stos
adc
mov
mov
jge
rcll
xor
jns
pop
lock
mov
mov
dec
leave
push
xor
lret
int
mov
mov
push
aad
lcall
in
cmp
push
fsubs
shrl
movsl
add
jp
inc
pop
inc
gs
jo
mov
cmp
sarl
push
sub
cli
mov
fimuls
iret
jb
fdivrl
test
push
jns
cmp
loopne
outsb
add
in
outsb
incb
sub
jecxz
mov
bound
xchg
adc
cmp
outsl
add
push
mov
dec
cmp
mov
cmpl
test
push
dec
dec
sar
mov
push
xlat
xor
imull
lahf
fisubrl
cli
dec
adc
push
ss
and
aad
call
xchg
dec
aaa
dec
aas
xor
and
add
sbb
or
push
lods
fcompp
mov
lcall
adc
push
addl
nop
lds
inc
outsb
loop
sub
dec
hlt
dec
cmp
pop
jno
push
jns
or
add
pop
popf
decl
dec
and
into
mov
fcoml
repnz
bound
sbb
test
loope
out
lods
mov
pmuludq
into
popa
outsl
int3
xor
into
pop
leave
push
push
inc
cld
fidivrl
mov
add
pushl
jmp
lret
leave
rcl
fcmovb
sub
xor
jg
push
js
xchg
test
inc
sub
call
push
and
mov
xchg
push
clc
adc
fcomi
adc
andl
or
shrb
ficompl
dec
out
stos
cmp
xorb
test
add
popa
mov
jle
test
sub
add
shrb
arpl
xchg
cmpsl
or
sub
mov
cmp
dec
pop
cmp
inc
scas
scas
loop
pop
jno
aad
adc
stos
ss
ljmp
sbb
mov
scas
mov
cltd
jnp
aad
popa
jl
aad
daa
cmp
andl
cmp
mov
push
repz
aam
shl
fcomps
add
imul
arpl
jmp
jno
loopne
fst
xchg
pop
cli
fwait
shll
inc
cli
rorb
pusha
cmp
adc
addb
mov
out
xchg
add
jne
cmp
pop
dec
and
xor
int
repz
adc
xchg
jns
jns
add
xchg
gs
mov
push
enter
jle
dec
daa
mov
push
ficoms
or
in
xchg
sub
and
sub
jecxz
in
pushf
jl
mov
mov
out
enter
mov
sub
gs
je
inc
pop
adc
arpl
insl
mov
in
cmp
xchg
pop
pop
jmp
sbb
pop
push
in
push
addr16
jo
and
pop
mov
xchg
dec
adc
adc
sub
pusha
fisubl
popf
les
pushf
test
inc
es
jle
div
sub
lahf
hlt
xchg
adc
call
movaps
iret
lods
fucomip
stos
decl
push
mov
clc
sub
add
orl
sbb
outsl
push
icebp
sbb
mov
and
aam
sbb
dec
popf
loope
repz
push
sbb
outsb
scas
add
push
jnp
mov
ljmp
mov
bound
fcoml
add
sbb
bound
mov
out
mov
or
cli
add
mov
loop
pop
sub
jg
out
mov
inc
jbe
jle
add
pop
push
lahf
icebp
gs
push
jo
jb
in
mov
test
fadds
add
sub
xchg
jge
xchg
push
test
or
js
add
gs
popf
sbb
movsb
movsl
inc
imul
popf
xchg
sahf
jmp
test
in
psubsw
rcrb
loopne
repnz
cwtl
clc
jb
push
lahf
lock
xlat
inc
not
mov
inc
lcall
xor
push
les
dec
add
outsb
adc
cmc
jle
lds
push
push
arpl
and
adc
mov
push
mov
es
dec
push
imul
pop
insb
fiadds
repnz
cmp
ud0
out
xor
xchg
cmpb
subb
xchg
insb
icebp
cld
adc
and
cmp
fistpl
int3
negl
lods
test
sub
mov
call
sub
xchg
and
push
jb
cltd
pop
push
andl
in
jne
sbb
movsb
dec
xlat
dec
dec
sti
inc
mov
test
ret
cmp
iret
xchg
dec
mov
xor
loopne
loop
or
ja
cmp
and
stc
cmp
mov
jae
jns
into
lock
mov
pop
push
pop
and
ja
push
dec
inc
int3
cmc
mov
xchg
push
call
sub
aad
ret
ficomps
xchg
jge
adc
inc
test
enter
sti
icebp
add
data16
faddl
loop
insl
mov
repz
and
out
out
pop
mov
inc
mov
mov
mov
sub
pop
das
or
jo
or
xchg
arpl
pop
hlt
push
add
enter
fidivrl
fisubs
adc
xchg
orl
je
arpl
stos
sub
pop
daa
test
xchg
push
inc
jg
notb
xchg
jge
pop
add
dec
mov
inc
add
jl
or
daa
inc
daa
movsl
mov
int3
jle
mov
nop
lods
jg
scas
mov
push
test
dec
aam
push
mov
pop
cmpsl
lcall
pop
or
movsl
outsb
call
aad
pop
push
pop
jne
xchg
inc
push
pop
call
mov
mov
add
pop
jmp
rol
int3
fcmove
fimull
int
dec
mov
jg
push
js
fwait
cli
pop
popa
pusha
aam
inc
xor
jo
imul
push
dec
lds
in
fstl
test
and
insb
lcall
fnstenv
pop
mov
sub
pop
cmp
dec
jle
mov
loop
adc
inc
dec
mov
js
jg
sbb
in
adcl
lahf
stos
mov
xor
pop
and
js
sub
push
fnsave
xor
ret
fdiv
pop
outsl
pop
cli
sub
mov
mov
into
test
xchg
int
ret
fcmovbe
jge
adc
outsl
xchg
sahf
or
mov
xchg
decl
push
faddl
dec
fnstcw
popa
pop
xor
push
icebp
pusha
pop
in
push
mov
or
in
inc
movsb
scas
mov
xor
push
sbb
push
ret
out
cmp
mov
inc
mov
pusha
hlt
test
push
xchg
cvttps2pi
cmp
dec
push
xchg
iret
xlat
aam
fisubs
imul
jmp
cltd
mov
dec
shll
lock
xchg
outsl
fdivs
movsb
popf
xchg
xchg
sbb
adc
push
jo
jmp
in
rclb
outsb
loope
ret
fsubrl
jmp
push
fisttpl
mov
inc
in
and
outsb
lds
lea
pop
addr16
ret
xchg
lods
jp
enter
and
sub
pop
mov
cwtl
fstpl
shrb
repz
push
xor
iret
in
inc
push
mov
add
mov
test
pop
rcll
lcall
dec
shrl
repz
mov
mov
lret
nop
insb
push
jne
and
shrl
scas
out
mov
cld
repz
dec
lods
xchg
dec
add
pop
test
mov
adc
sahf
push
jb
xorl
fs
jp
fsubr
jno
popa
cmp
fnsave
fdivrs
popa
sarb
rcr
fildl
mov
push
mov
xor
mov
xchg
sbb
add
adc
shll
mov
xchg
outsl
xchg
stc
test
dec
sub
cli
dec
fisubs
sub
cmp
and
pop
out
xor
inc
xor
inc
jmp
xchg
js
lret
pop
ja
pop
cmc
stc
test
les
lea
mov
insb
sub
hlt
pop
hlt
bound
ljmp
inc
mov
jb
dec
sub
pusha
out
stos
dec
icebp
aam
and
iret
or
inc
push
xchg
xchg
push
and
imul
sub
cmp
push
adc
js
ret
aaa
jecxz
adc
mov
xor
sub
ret
sbb
inc
mov
leave
or
pop
inc
in
addr16
mov
es
pop
jle
scas
cmp
scas
test
sbb
inc
adc
xor
popf
ds
push
cmp
jl
jmp
inc
divb
mov
rol
loopne
imul
repz
das
int3
loope
cli
jns
aad
cwtl
fistpl
xchg
lcall
rclb
jbe
int
testl
loopne
in
in
push
xchg
cmp
sub
gs
cmp
pushf
pop
pop
in
dec
shlb
jle
mov
mov
or
adc
sbb
mov
in
adc
xchg
imul
xchg
stos
jl
jecxz
ret
das
shlb
and
outsl
xchg
pusha
add
xor
pop
xorl
arpl
mov
filds
jnp
mov
adc
into
cmp
daa
ja
dec
mov
stc
nop
bnd
jg
cmp
cmpsb
add
push
or
mov
repnz
jbe
jge
out
dec
addr16
test
sbb
nop
xor
loop
inc
push
mov
mov
mov
cmp
icebp
data16
adc
add
cmp
sbb
sbb
movsb
jns
jns
or
test
pushf
mov
cmp
dec
jae
sbb
sub
int3
mov
jle
arpl
mov
fstps
add
in
popf
cmp
mov
fnsave
mov
xlat
jb
jmp
jbe
dec
incb
mov
inc
imul
jno
push
add
cmp
ror
repnz
dec
xchg
dec
xor
cmc
sub
aaa
aaa
movsl
pop
push
jge
int
xor
shl
hlt
mov
ret
push
mov
sub
leave
ret
push
mov
sub
andl
xor
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
jmp
ror
cmp
aam
ror
add
sub
adc
ret
dec
pushf
das
jg
jae
js
sarl
dec
push
aad
push
cmp
push
sbb
add
and
jns
cli
scas
push
mov
idivb
jb
adc
aad
xchg
inc
xchg
or
dec
and
out
jne
into
push
loopne
pcmpeqw
shlb
and
adc
cld
push
bound
in
loopne
add
push
push
adc
sub
mov
mov
sbb
or
add
add
jo
mov
cwtl
mov
adc
xor
and
mov
stc
das
bound
or
sahf
xor
xor
movsl
loopne
iret
cmpsb
cmp
push
icebp
xlat
jp
push
loop
push
dec
dec
bound
adc
jge
out
in
arpl
repnz
adc
or
push
push
push
jne
imull
mov
or
xchg
fcoml
sarl
cld
mov
rol
clc
out
out
fwait
outsb
imul
xor
stc
stc
flds
scas
dec
js
fcoms
dec
xchg
push
push
mov
lea
push
fistps
imul
or
add
test
nop
jmp
sbb
lcall
rcr
repz
cwtl
mov
movl
adc
fsubrl
sbb
xchg
jmp
mov
imul
add
add
lahf
or
lcall
loop
addr16
mov
dec
test
cmp
pop
std
jo
lock
push
outsb
subl
stos
test
mov
mov
icebp
mov
pop
push
leave
cmp
lret
xchg
jne
fsubl
jbe
push
adc
mov
aas
cmp
enterw
push
enter
mov
iret
sub
jo
ret
insb
add
xor
xchg
les
pop
adc
insl
ds
xor
xchg
adc
mov
push
arpl
xchg
testl
pop
mov
les
dec
ret
aaa
mov
mov
inc
fists
xchg
shlb
dec
add
sbb
in
loop
jo
jmp
movsl
fs
fwait
imul
mov
iret
push
push
mov
pop
es
cli
data16
test
lods
je
mov
add
bound
dec
push
inc
push
push
cmp
std
inc
enter
ss
ret
ljmp
shr
lret
fcmove
std
ja
cmp
cwtl
cs
pop
xor
jae
stos
pushf
js
out
adc
daa
loopne
adc
stos
bound
int
out
lods
inc
scas
and
in
add
dec
stos
mov
add
data16
sub
stc
jno
jnp
call
xchg
mov
int3
jp
pop
push
leave
mov
lods
push
aam
lret
imul
sahf
mov
xor
mov
cmp
pop
movsb
push
dec
jne
inc
jne
int
mov
cmp
cld
int3
pop
loop
mov
lods
adc
fmuls
jb
cmp
fwait
and
or
cmp
imulb
in
lahf
mov
bound
xchg
sbb
and
push
sbbb
cld
fldenv
rcrb
xchg
sbb
nop
jbe
mov
rcr
mov
lock
mov
lcall
cmc
pop
dec
out
repnz
lock
ja
arpl
lahf
mov
adc
jmp
es
not
movsl
pop
inc
push
and
pop
cmpsl
pop
mov
pop
xchg
adc
lahf
loopne
pop
shrl
mov
mov
mov
iret
test
fbstp
push
push
push
cmc
sub
stc
push
test
iret
jns
adc
lahf
cmp
repz
popl
cld
push
into
in
xlat
rcrb
pop
xor
scas
pop
adc
mov
subl
adc
cmp
mov
push
xchg
fisubrl
fwait
sti
iret
arpl
inc
lods
add
lds
mov
jmp
push
add
pop
imul
sub
roll
insb
loop
xor
sub
mov
mov
call
jbe
clc
jmp
mov
je
test
jecxz
inc
mov
les
test
adc
mov
cmpxchg
fistpl
aad
cmpsl
enter
insl
push
add
and
lods
scas
mov
push
ljmp
xchg
hlt
notb
push
dec
insl
add
add
cmp
cld
insb
imul
cmp
fs
xor
dec
push
jmp
ret
rcr
fcmovb
jp
outsb
andl
jg
jae
js
nop
dec
push
sub
add
jo
ret
sub
pop
xor
mov
mov
dec
adc
cmp
jle
mov
jmp
cmp
cmp
fwait
lahf
add
jno
call
movsb
idivb
xlat
cmp
rorl
fs
or
inc
jp
cmp
ljmp
or
fidivl
mov
mov
sbbb
mov
imul
ljmp
xor
pop
dec
mov
or
out
cmp
add
orb
or
mov
xchg
push
push
cs
push
scas
ja
in
xchg
addr16
cmp
pop
inc
int3
dec
mov
pop
jg
mov
mov
adc
clc
adc
addr16
and
nop
xor
js
or
add
cmp
into
sub
and
in
jmp
arpl
add
pushf
cld
mov
jno
mov
into
mov
fisttps
dec
sub
mov
adc
jnp
push
dec
out
sbb
out
sbb
adc
inc
imul
adc
mov
lahf
and
pop
pop
mov
xlat
lcall
sti
mov
mov
push
push
hlt
sub
add
sub
jmp
dec
and
pushf
je
xor
scas
dec
fcomp
shll
xor
mov
test
in
cmp
push
pop
adc
mov
roll
jmp
pushf
fwait
mov
aas
sbb
dec
ficompl
js
in
push
sbb
cmc
lods
and
and
and
out
xor
popf
mov
aad
in
push
push
loope
mov
mov
imul
fdivp
aam
jns
pushf
mov
mov
add
out
iret
call
movsl
insl
repz
andl
jb
adcl
ret
mov
leave
in
arpl
loopne
testl
out
mov
outsl
out
mov
and
call
shlb
dec
cmp
and
aad
fcoml
outsl
mov
lods
jle
push
fwait
es
in
jmp
repz
jne
cmp
sub
nop
std
mov
sub
insl
pop
or
inc
cmpsb
sbb
push
daa
pop
mov
out
add
ljmp
cmp
sbb
fistps
sub
cmp
xor
in
lcall
cmp
mov
mov
jbe
mov
pop
fsubl
loope
xor
aas
mov
cltd
test
inc
and
fisubrl
lea
dec
rorl
and
sahf
mov
adc
jl
outsb
dec
and
or
xchg
mov
push
fcmove
repz
negl
daa
jle
mov
and
mov
pushf
sbb
mov
ret
or
pop
lret
add
pop
mov
std
dec
pushf
add
mov
nop
mov
in
data16
xchg
sbb
leave
dec
and
out
into
imul
out
dec
es
insb
and
lock
cmp
dec
dec
xchg
jmp
les
jmp
adc
sub
add
cld
bound
fisttpl
inc
mov
and
pop
adc
shlb
enter
xlat
std
xchg
sub
ret
and
jmp
adc
add
sarb
xchg
pop
mov
mov
sahf
aas
mov
fistps
shrl
popa
pop
mov
pop
hlt
mov
adc
test
jge
pop
pop
pushf
mov
movsb
jmp
cmp
sar
icebp
sbbl
add
jo
movsl
push
and
pop
push
arpl
jns
ret
or
adc
xchg
addb
sbb
lods
fistps
fstl
in
pop
and
xlat
pop
icebp
addl
mov
gs
add
mov
clc
icebp
fcomps
imul
orb
loopne
xlat
mov
mov
cmp
or
xchg
mov
clc
cltd
loope
mov
jg
mov
lret
or
in
addr16
cmc
pop
mull
mov
mov
pop
xchg
jb
fmuls
add
pop
pop
daa
vpmaddwd
or
jo
inc
mov
outsl
mov
push
sti
xchg
fisubs
add
call
and
flds
jno
sbb
mov
xchg
mov
and
jmp
aas
ret
rcl
iret
ret
dec
xchg
das
adc
outsb
mov
js
insl
jle
fcompl
imul
and
in
rol
into
add
ror
js
xchg
icebp
call
pusha
cmp
sbb
rol
loop
dec
and
mov
jb
test
xchg
cwtl
out
dec
cmovbe
test
fisttpll
xchg
ret
arpl
xchg
enter
dec
test
cltd
adc
test
movsl
cmp
xchg
std
xchg
sub
fdiv
cs
xor
xchg
push
cmpsl
mov
sti
cmp
js
sbb
lock
aas
popa
push
addl
pop
push
aad
in
mov
sub
mov
and
xor
lret
pop
push
aaa
orb
inc
sti
mov
cmp
add
jmp
add
pop
adc
and
pusha
adc
lcall
cltd
ret
es
jo
rcrb
sbb
fisttps
jecxz
ret
sub
push
jno
jg
in
mov
pop
inc
repnz
adc
aas
imull
mov
cmpsl
addr16
out
and
stos
imul
jbe
pop
sahf
mov
pop
ja
jecxz
mov
in
mov
ds
mov
imul
aaa
mov
inc
shl
movsb
mov
or
daa
add
loop
jecxz
rcrb
adcl
adc
mov
adc
push
xor
adc
in
mov
cmpsl
xor
icebp
leave
mov
mov
subb
mov
xchg
mov
lods
shll
roll
pop
push
scas
testb
fstpl
les
stc
pop
jl
cmp
mov
sbb
fstl
or
into
je
cltd
xchg
push
arpl
inc
lds
jns
mov
lret
jo
xor
in
and
nop
push
je
add
add
jb
pop
loopnew
xchg
mov
in
add
xchg
aaa
fsubr
inc
ss
push
test
pusha
mov
gs
popa
hlt
push
jae
mov
adc
bound
sbb
fwait
mov
mov
inc
shrb
scas
add
cs
inc
sbb
pusha
push
mov
imul
adc
sbb
and
mov
mov
nop
xor
fstpl
ficoms
int
or
mov
nop
out
add
pop
jno
in
mov
pop
mull
sahf
jno
or
xchg
sbb
push
xchg
adc
pop
nop
popa
aad
out
in
push
cmp
inc
es
push
cmp
add
mov
mov
lds
aaa
mov
dec
xchg
pop
push
sbb
xchg
rcrl
sub
xchg
jne
mov
mov
stos
jmp
xchg
sbb
loopne
sahf
or
lcall
mov
nop
pusha
in
push
dec
fistps
fwait
xor
xchg
pop
pusha
xchg
stos
sbb
ficoml
mov
push
push
pop
push
sbb
imul
and
pop
xor
push
sbb
mov
jge
sti
cmc
sub
xor
test
lods
ja
fsubrl
adc
lea
dec
mov
jp
adc
pop
cltd
push
adc
add
pop
pop
fidivs
pop
and
push
je
dec
push
daa
push
or
xchg
jnp
out
lods
adc
mov
movsl
mov
rcll
clc
movsb
mov
js
imul
fstl
rorb
jcxz
cmc
jb
addl
jmp
popa
ret
mov
or
aad
andb
dec
insl
mov
mov
sub
jmp
je
fs
ja
and
loop
mov
into
pop
ljmp
jge
or
mov
jg
rol
push
imul
or
aaa
cmp
adc
sbb
std
xor
mov
jg
dec
std
dec
cmp
and
iret
idivl
lcall
in
jb
push
inc
xor
dec
cmp
dec
pusha
lret
imul
pop
push
dec
pusha
push
repnz
in
pop
ljmp
xor
sbb
and
fdivs
cmp
add
inc
dec
pop
fildl
aaa
in
into
cli
std
scas
inc
sbb
mov
push
xor
push
pop
sbb
out
jbe
jns
push
xor
bound
fwait
push
mov
sub
mov
movl
jmp
cmp
lret
rcr
lret
iret
adc
lret
std
cmp
jae
js
cmp
push
adc
outsl
insl
bound
push
push
jnp
fs
pop
or
cmc
pop
xor
jle
mov
pop
lds
arpl
icebp
popa
xor
pop
push
jo
mov
aad
lahf
jle
and
cs
shrl
mov
sbb
push
cld
pop
xchg
mov
push
fwait
push
and
mov
mov
fidivrs
mov
xor
inc
shlb
pop
cld
sbb
xchg
inc
adc
or
out
cmp
mov
xlat
mov
scas
rorb
or
sarb
adc
shlb
arpl
stos
movsb
int3
lcall
loopne
scas
jecxz,pt
jae
and
jo
movsb
mov
int
iret
or
jo
aam
sbb
mov
ret
sub
rcll
dec
sbb
mov
call
cmc
fucomi
mov
xchg
and
pop
xchg
push
mov
jp
out
xor
mov
pop
mov
jmp
push
push
nop
cmp
adc
fs
jb
or
sbb
xlat
dec
out
inc
or
pop
cli
sbb
shl
cmp
cwtl
fimuls
pop
jecxz
xor
ljmp
filds
dec
psrld
or
dec
ds
scas
jmp
add
lcall
notl
das
movsb
or
lea
iret
daa
add
les
test
mov
outsb
lock
jne
mov
rcll
inc
test
jne
mov
lock
adc
jl
xchg
imul
cltd
sbb
jmp
xor
cmpsl
pop
mov
scas
mov
lods
mov
pop
cmp
pop
andb
scas
stc
lods
pushf
lods
or
push
fisttps
add
cmp
fdivl
mov
pop
aas
adc
cs
pop
jnp
sahf
iret
imul
jnp
adc
cmp
mov
and
fbstp
jle
push
loope
lods
push
mov
or
mov
stc
punpckldq
pop
fstpt
fs
sbb
xchg
inc
test
xchg
xchg
adc
jo
nop
cmp
je
mov
icebp
fistps
scas
enter
stc
test
cmovnp
sub
in
and
hlt
out
sahf
mov
sub
cld
or
jno
int3
stos
add
jmp
mov
js
sysexit
pop
mov
lret
testb
adc
dec
mov
cmp
mov
jge
addr16
xchg
xchg
adc
shl
sub
xor
xor
cs
and
cmp
js
outsl
ss
loop,pt
rcll
lret
fistpl
in
loop
lcall
test
or
lock
sub
inc
cli
pop
adc
cmp
dec
pushf
jg,pn
pop
mov
sub
inc
push
adc
cmp
sbb
sahf
in
enter
and
xor
jo
sub
mov
in
mov
scas
adc
dec
ret
push
or
loopne
arpl
ret
add
repnz
aaa
add
cltd
sbb
fstps
loop
shlb
out
add
xchg
xor
test
sahf
xor
jne
adc
scas
or
jo
popf
jecxz
out
cmp
ret
ja,pt
pop
pop
hlt
push
das
in
add
and
cmp
pop
jmp
les
addr16
ret
push
add
cmc
aaa
mov
sbb
xor
ss
jecxz
jb
mov
and
cmp
lcall
mov
pusha
push
int
cmp
test
xchg
mov
mov
fisubrs
fcmovb
aas
into
scas
pop
push
dec
stos
test
pop
xor
sub
roll
sbb
in
aaa
xchg
and
dec
test
mov
pop
das
jge
clc
nop
imul
jae
jp
xchg
cli
and
jno
jp
jbe
push
jg
push
cmp
fstps
ds
jle
or
pop
lods
enter
ds
xchg
add
push
mov
or
mov
lret
xchg
test
mov
aaa
int3
push
and
cmp
mov
xchg
lods
inc
into
lahf
ds
fistpll
lea
xchg
and
jge
push
mov
dec
fdivl
test
or
xchg
fdivrp
insl
data16
popa
push
insb
fists
adc
inc
scas
sbb
adc
inc
and
scas
sub
jecxz
inc
mov
jg
test
movl
mov
xor
jmp
aas
enter
fxch
rclb
fistpl
cmp
ret
jg
jae
js
or
inc
pop
jno
add
lods
lcall
mov
gs
mov
test
ficompl
movsb
sbb
pop
push
mov
xor
push
in
jnp
ret
add
ret
mov
enter
loopne
lods
das
ja
xchg
xchg
sub
nop
lret
inc
sub
mov
imul
pop
ret
xor
sti
pop
rolb
push
inc
jb
mov
outsl
in
pop
mov
add
or
pop
jo
and
sbb
lods
sub
push
or
mov
and
push
clc
xor
nop
push
dec
scas
sarl
ror
enter
jno
jecxz
andb
mov
xchg
out
repnz
sbbb
or
outsl
cmpsb
cmc
mov
add
xchg
push
jno
pushf
das
jo
dec
sbbb
or
lret
cmp
jns
cmp
cld
push
mov
and
dec
mov
roll
and
sbb
out
cmp
sbb
or
loopne
cltd
jmp
push
add
dec
enter
xchg
mov
test
adc
nop
fdivs
pop
cmpsb
pushf
mov
cmpsb
js
loopne
pop
lcall
bound
int
pop
xchg
jmp
bound
out
test
cli
popa
pop
push
cli
push
mov
push
arpl
loop
fcomi
xchg
xchg
fsts
jo
iret
mov
ss
jae
mov
jg
pusha
xchg
jbe
aad
lea
push
mov
push
int3
fwait
shrb
adc
scas
out
ret
lcall
test
pop
sti
repz
dec
cmp
aam
daa
es
inc
movl
add
aas
idivb
mov
or
jae
and
jecxz
sub
iret
cmp
mov
dec
xor
inc
push
add
jbe
outsb
in
mov
jno
cmp
xchg
push
stc
jns
adc
xlat
add
call
sub
lcall
sub
subl
fdivrp
fmuls
cmp
cltd
jo
jmp
and
minps
inc
push
xor
in
sbb
xor
popf
mov
mov
cwtl
mov
push
push
ss
popa
dec
stos
cmp
and
arpl
xor
sub
adc
in
dec
test
fsub
scas
popl
ljmp
sbb
add
xlat
pop
and
inc
iret
lea
sub
js
sub
jnp
adc
xchg
adc
push
std
out
fwait
sub
mov
scas
sub
jg
leave
ret
pop
into
rolb
xlat
jns
cld
ja
push
lds
dec
adc
pushf
test
leave
aaa
xchg
stos
repnz
sbb
cs
aas
pushf
push
dec
jle
out
loopne
lret
rolb
repnz
mov
push
inc
dec
test
nop
aam
icebp
out
dec
dec
mov
lods
pop
push
jmp
in
ja
lods
js
adc
loope
dec
ret
or
loope
dec
mov
addl
or
fstl
adc
stos
jb
push
rcrb
dec
pushf
dec
push
push
mov
ds
mov
lods
push
hlt
adc
mov
pop
cmp
sar
sub
repnz
jmp
nop
sarl
dec
adc
gs
mov
cmpsl
shr
jo
sar
insl
or
xlat
imul
nop
lret
je
mov
loope
and
std
xchg
dec
movsb
xor
sarl
sbb
gs
mov
int
filds
inc
out
jge
popa
int
insb
in
inc
jo
add
ss
ds
movsb
mov
cmp
dec
xchg
mov
mov
inc
mov
inc
cmp
mov
inc
idivb
sbb
mov
test
sbb
adc
or
ds
scas
add
push
mov
popf
fcoms
and
out
lds
aas
jge
xor
popa
cmp
jnp
xor
hlt
adc
mov
inc
scas
pop
adc
aaa
iret
add
out
ds
andl
shrl
jmp
adc
or
jno
fisubs
sub
pop
in
pop
add
jae
push
mov
insb
int3
jb
ds
adc
js
divb
jb
jge
cmp
jl
push
hlt
ret
adc
mov
sub
lret
mov
inc
std
stos
xchg
sub
dec
lods
pop
mov
pop
push
mov
add
mov
sub
sub
jmp
xlat
cmp
int3
fxch
aad
insb
test
iret
jmp
jg
jae
js
push
outsb
sbb
inc
sbb
or
pusha
dec
pusha
cwtl
xor
mov
adcl
test
dec
in
pop
loopne
fwait
mov
push
loope
sarl
movsb
add
push
inc
mov
data16
cmp
jne
sahf
lahf
sarl
hlt
dec
lods
std
mov
and
jecxz
std
add
rorb
sub
add
adc
pop
aam
pop
mov
dec
ss
mov
jl
insl
add
fiaddl
popa
fwait
jne
leave
lret
cmp
out
lahf
xchg
add
mov
inc
aas
pop
dec
daa
movsl
lods
push
add
out
or
aaa
sub
sti
cmp
dec
mov
xlat
out
scas
sub
or
roll
ret
test
cmp
popf
addr16
mov
mov
ds
sbb
addr16
add
testb
jbe
out
jo
hlt
sbb
es
pop
inc
aas
xorl
fmuls
add
mov
repnz
mov
mov
jo
fisttpll
or
clc
jmp
cmp
or
lock
jmp
arpl
inc
out
orl
mov
fnsave
out
pusha
or
xchg
sbb
test
lahf
cmp
mov
mov
into
adc
inc
fcompl
aaa
cmp
jb
fwait
sbb
lds
push
jae
mov
push
sbb
cmp
lds
inc
sbb
cmpb
sub
mov
mov
cmp
jecxz
push
add
outsb
int
inc
cmpsl
cli
xchg
sarb
movsl
push
or
pop
cli
sti
lock
arpl
aas
xchg
xchg
pslld
outsl
sbb
popf
out
xchg
shl
inc
lods
mov
loopne
lods
in
sarl
jl
lret
mov
cmp
fldenv
stos
jnp
add
movl
or
in
les
jmp
repz
push
jl
xor
dec
xchg
setno
xor
adc
and
jb
loop
sub
testb
insb
sti
mov
inc
cmp
cmp
test
fistpll
ss
and
xor
jns
cmp
pushf
pop
sub
loope
dec
scas
and
jp
push
sbb
arpl
xchg
adc
lret
pop
je
and
inc
sbbb
cmp
or
out
jbe
pop
cmp
pop
add
push
ljmp
sub
in
or
lods
push
and
lcall
inc
cwtl
jns
in
cli
push
pop
xchg
in
inc
jge
sti
das
repz
out
int
jb
push
ljmp
test
in
cmp
arpl
mov
out
popf
xor
faddl
test
mov
jmp
xchg
loopne
adc
xor
cmp
outsb
jbe
cmp
sub
out
leave
mov
insb
sub
adc
jle
fwait
add
mov
jecxz
lods
inc
leave
push
addr16
jmp
subl
or
lret
test
xchg
xchg
pop
pop
mov
dec
lds
jle
xchg
inc
fiadds
jmp
sub
icebp
jno
fmuls
movsb
jae
jbe
xchg
mov
cltd
push
xchg
fwait
stc
lcall
ret
iret
push
shlb
cmp
lods
and
js
iret
add
add
pop
rclb
cmc
mov
mov
or
mov
add
lahf
inc
push
es
dec
icebp
cmp
test
les
mov
xchg
dec
icebp
and
lret
add
mov
cli
push
ljmp
out
rolb
ret
or
push
push
sbb
mov
mov
jmp
shl
pop
xchg
shlb
jno
add
fmull
enter
mov
mov
mov
scas
in
in
test
clc
jnp
adc
fwait
jns
loopne
clc
jg
sbb
shr
call
sahf
filds
jno
insl
sub
pop
test
outsb
sbb
adc
push
cltd
pop
jno
cmp
aam
inc
sbb
pop
xor
mov
lahf
push
sbb
loop
stc
aad
fs
imul
aam
into
ljmp
dec
inc
addr16
mov
bound
stc
fbld
movsb
pop
pop
filds
mov
leave
mov
add
mov
mov
mov
adc
jmp
mov
lret
or
popa
xchg
fmulp
jg
jae
js
mov
and
sbb
std
push
jbe
pop
jmp
lock
in
lods
push
arpl
fs
and
sub
dec
xchg
sub
nop
out
arpl
les
pop
andb
xlat
mov
sbb
int3
xor
pop
sub
sbb
cltd
xor
xor
mov
gs
or
int
lret
clc
cmp
sti
dec
inc
mov
icebp
mov
fisubs
aaa
xchg
sbb
and
or
testl
inc
inc
test
fsub
fbld
mov
add
jb
xchg
imull
cmpsl
js
jge
inc
insb
lods
sahf
push
int
mov
cmp
mov
cmp
adc
push
mov
popf
bound
loopne
mov
or
fdiv
fcomps
push
push
shrb
dec
dec
mov
push
sub
fcoms
lock
jns
push
sbb
jns
jbe
inc
lahf
movhps
inc
stc
and
mov
dec
dec
loopne
push
mov
pop
jg
pop
dec
push
into
xchg
aas
aas
push
add
dec
xor
mov
loop
mov
dec
xchg
inc
call
mov
addl
sbb
inc
ret
shl
xchg
xorb
inc
pop
mov
aad
rsm
push
pop
stos
mov
shlb
test
xor
shrb
pop
jbe
jle
and
loop
data16
mov
xchg
fstps
loopne
bound
mov
add
xlat
push
aas
and
daa
dec
inc
push
xor
scas
xor
mov
jno
cmp
fildl
out
shlb
faddl
test
sahf
mov
int3
in
jo
mov
popa
cltd
fidivrs
in
sbb
rol
stos
decl
sbb
decb
bound
xlat
enter
push
inc
pop
and
ljmp
clc
cmpsl
jecxz
jne
fstps
push
scas
adc
fidivl
push
sbb
dec
lret
mov
and
icebp
sbb
inc
xchg
std
add
enter
rcrl
dec
or
repnz
mov
test
into
mov
sub
xchg
mov
xchg
ds
cmpsb
mov
sub
sahf
add
push
jns
mov
lcall
fiadds
push
push
lret
sbb
cmp
push
mov
jmp
ljmp
js
mov
push
jae
sbb
add
lcall
cli
dec
in
push
xchg
inc
imul
or
ret
stos
pop
push
dec
cmc
scas
push
xchg
out
test
outsb
add
adc
fwait
mov
adc
jbe
mov
leave
nop
lock
divl
mov
cbtw
cwtl
sbb
outsb
outsl
push
insb
xor
inc
lea
sub
out
int
sbb
fidivrs
movsb
xor
movsl
add
nop
pop
je
xchg
sarl
imul
int3
nop
orb
inc
xchg
or
mov
mov
btc
inc
and
ret
xchg
push
test
es
fldenv
pop
repnz
adc
cmp
mov
jge,pn
xchg
cmp
or
adc
mov
sar
mov
lret
out
popa
aas
mov
add
bnd
int3
sub
adc
daa
pop
inc
sub
ss
push
inc
ret
lea
fistpl
ja
in
mov
je
xchg
int3
xchg
push
or
or
insl
sub
cwtl
pop
nop
mov
push
sti
adc
insb
mov
ficomps
test
xor
sbb
fcmovnu
outsl
jmp
fisttpll
add
dec
mov
sub
mov
xchg
pop
js
es
mov
xchg
ljmp
jge
dec
in
hlt
mov
and
and
or
out
xchg
lcall
inc
and
les
aas
in
pop
lret
cwtl
inc
fdivrl
cld
out
das
fwait
std
mov
rcrl
xor
aaa
jno
popf
pop
sbb
aad
or
int
in
lock
push
in
cmc
add
lods
subl
mov
xchg
inc
push
pushf
clc
sub
sahf
sar
in
add
lods
sub
jge
popa
add
les
scas
shl
xor
cmp
adc
ret
cmp
inc
inc
aaa
adc
in
fiaddl
lahf
or
cltd
jne
sti
les
or
fnsave
movl
jle
push
std
imul
int
and
jno
or
mov
add
shr
or
leave
int3
leave
rcr
fxch
aad
push
adc
ror
jg
jae
js
inc
lahf
xor
aas
repz
ds
xchg
xor
xor
clc
orl
lods
xor
ds
popf
or
inc
fwait
mov
mov
fs
shlb
pop
or
cmp
push
cmpsl
test
lret
xchg
mov
push
or
fwait
sub
test
xchg
push
mov
pusha
das
xchg
jo
and
push
loope
ficoms
cmp
xlat
in
push
negb
js
cmp
lret
bound
enter
clc
nop
mov
test
cmp
xchg
dec
cmp
add
dec
test
sbb
cmp
xchg
out
mov
pop
cwtl
adc
aam
aaa
test
inc
ud1
jbe
pusha
das
mull
push
inc
shrl
mov
cli
in
cli
push
and
cld
test
pusha
jns
das
jge
add
jge
ret
mov
dec
sbb
in
clc
or
in
je
inc
aam
push
jge
jle
imul
fiadds
call
mov
js
adc
and
jo
in
add
adc
xorl
jecxz
fldl
out
outsb
jg
xchg
mov
sti
cmp
fidivl
sub
or
dec
and
sarl
add
repnz
jg
xor
out
or
lods
fstpl
jbe
jo
insl
movsl
xchg
inc
div
mov
fidivl
mov
jge
sbbl
popa
add
cmp
or
les
clc
scas
cmp
rep
cmp
mov
data16
hlt
cmpsb
add
jbe
jecxz
xor
repz
test
or
imul
je
mov
dec
push
pusha
push
cmp
not
rep
loop
lret
mov
pop
fadds
out
mov
cmp
in
mov
xor
fwait
ret
or
dec
arpl
mov
out
mov
stc
xor
dec
int3
push
pop
add
dec
sub
clc
insl
push
sbb
je
push
outsb
shll
pop
push
sbb
es
add
or
js
or
lcall
cltd
jp
lret
int3
xlat
push
lret
xor
or
sbb
rcrb
fs
and
or
mov
xchg
loope
lret
sbb
add
xchg
mov
xor
test
loop
xchg
inc
jle
jge
jl
and
ljmp
out
inc
dec
jmp
adc
pop
mov
in
scas
adc
sbbb
lcall
gs
scas
and
jp
mov
pop
mov
dec
lcall
aam
insl
jbe
insl
push
mov
pushf
pop
pop
jo
jl
push
arpl
idivb
nop
add
xchg
cs
jmp
out
jge
pop
fcoms
test
pop
cmc
leave
push
mov
shrb
out
mov
mov
push
jns
pop
js
mov
mov
and
scas
mov
xor
stos
aas
insl
js
daa
pop
pushf
pusha
push
jb
lret
stos
or
sbbb
test
cmp
clc
test
int3
jg
mov
pop
fistps
repz
in
inc
inc
cmpsb
gs
enter
jns
shll
fimuls
or
dec
xor
adc
out
stos
aas
lea
test
out
mov
repz
mov
into
push
leave
xchg
or
cmpsb
loop
dec
xchg
je
adc
imul
and
xor
fmul
add
pop
stos
sbb
push
inc
cmp
and
punpcklbw
add
inc
in
jnp
in
mov
cmc
and
hlt
and
sahf
pop
es
andl
ja
jle
cmp
adc
ss
int3
mov
jns
movd
mov
jbe
sbb
pop
in
xchg
aaa
jmp
push
lcall
sbb
xchg
jmp
jmp
lock
jae
bsf
lea
fucomi
xchg
mov
cmpsb
popf
mov
into
mov
mov
lahf
lret
clc
fmull
pop
popa
into
bound
ljmp
adc
push
add
ljmp
or
into
sahf
xor
mov
lds
jnp
pop
addr16
sbb
push
cli
xor
sub
push
mov
in
xchg
sbb
jo
or
adc
fisttpll
or
stc
dec
inc
data16
dec
test
cwtl
jb
add
or
mov
aad
xor
inc
dec
xlat
jg
jae
js
xchg
outsl
imul
int3
and
jle
leave
frstors
xor
enter
call
cmp
sbb
fsubrl
push
sub
jns
fldl
mov
pop
xchg
sahf
les
cltd
stos
cwtl
sub
movsl
stos
jns
push
xor
cmp
jo
dec
jecxz
popf
sahf
addr16
test
or
aad
dec
std
mov
loop
out
adc
mov
fdivl
xor
enter
ja
fwait
jmp
sarl
sbb
push
and
and
xor
leave
cmp
aad
sub
and
repz
aaa
addr16
cltd
and
pop
push
cmp
jno
dec
addr16
pop
xchg
inc
jo
push
or
aad
ja
lcall
popa
mov
mov
cmpsb
jbe
lea
mov
shrb
xchg
xchg
mov
scas
and
mov
stos
fnstcw
int
jg
cld
pop
lea
and
mov
int3
push
xchg
sub
mov
fstpt
in
loopne
dec
jg
aas
cmp
mov
xlat
js
das
aas
or
jne
pushf
stos
popa
push
or
insb
or
adc
mov
adc
add
mov
pop
lahf
mov
mov
shlb
dec
jg
mov
in
add
in
das
int
dec
jle
mov
in
inc
call
xchg
aad
in
fldenv
cmpsb
push
fidivs
push
sub
out
cmpsl
aaa
lcall
mov
and
cmp
mov
fdiv
jge
inc
imul
xor
mov
in
outsb
in
dec
scas
stc
dec
xchg
lods
movsl
pop
pop
testl
pop
mov
aad
mov
push
inc
inc
mov
fiadds
cli
ret
mov
inc
sbb
scas
rcr
xchg
fimuls
push
cmp
lcall
insb
filds
lds
in
neg
push
out
imul
lcall
jne
mov
or
inc
dec
and
test
fsubrl
pop
inc
add
inc
push
cmp
xor
dec
fsubrs
jp
aam
pop
mov
rcr
mov
sbb
add
enter
jl
notb
mov
stc
ljmp
push
hlt
cwtl
cli
decl
cmc
adc
int
mov
ror
iret
sbb
sub
lcall
mov
imul
call
outsb
fildll
subb
or
inc
add
sbbl
inc
push
sub
ret
sarl
in
xchg
icebp
and
int
fisubs
cltd
adc
cmp
adcb
cmp
mov
xchg
jecxz
test
fbld
mov
xor
push
neg
scas
mov
mov
and
inc
lret
pop
add
mov
pop
add
xchg
faddp
add
andl
pop
fs
int
ds
sub
sub
xchg
mov
push
or
push
inc
cmp
mov
jp
icebp
jne
pop
cwtl
out
lods
lcall
lahf
push
nop
and
lahf
ja
fbstp
pop
neg
sbb
ret
cmp
insl
pop
loope
stos
loope
push
mov
mov
cwtl
dec
sbb
fisttpl
cmpsb
cmpsb
add
add
aaa
jl
div
and
xlat
ficomps
xchg
in
mov
stos
fnstenv
jg
loope
and
push
pop
movsl
cmp
jne
in
xor
out
mov
pop
add
add
xorl
mov
mov
jge
or
mov
daa
push
icebp
mov
fimuls
cmp
push
out
cmp
icebp
fidivrl
xor
sbb
ja
or
cwtl
sbb
xor
stc
mov
call
lret
rdtsc
mov
dec
dec
jmp
jp
cltd
or
jmp
fidivl
sbb
pop
icebp
sub
in
jmp
dec
xchg
adc
xchg
out
mov
pop
jmp
jbe
xor
int
aam
inc
popa
jg
pusha
or
out
inc
pop
scas
add
js
icebp
sub
les
inc
mov
jmp
mov
cmp
negb
pop
out
add
adc
data16
dec
int3
add
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
movl
jmp
into
xchg
push
call
aas
fidivrl
jae
js
sbb
dec
sbb
cmp
and
mov
xor
and
push
push
pop
sub
popa
pop
stos
add
jmp
add
mov
or
adc
fs
mov
jnp
test
mov
fsubl
push
cmpsl
lock
dec
out
sub
out
add
es
cmp
push
inc
mov
stos
sti
add
sbb
cmp
in
xor
popa
and
sahf
jno
cmp
cs
jnp
ljmp
in
adc
outsb
bound
movsb
out
imul
add
cmovge
enter
iret
lods
test
stos
aaa
ss
inc
cmp
inc
in
ljmp
enter
dec
push
mov
outsl
fnstsw
outsb
pop
xor
sbb
repz
rcr
js
inc
push
cmp
stc
test
les
add
fcompl
or
jno
aaa
inc
aad
add
mov
xor
fmul
pusha
mov
insb
xlat
lds
pandn
inc
ja
jecxz
je
repnz
les
jmp
mov
ljmp
mov
or
into
mov
loop
pop
test
in
inc
mov
call
insb
dec
lock
sti
add
daa
add
xor
shrl
push
out
icebp
js
jnp
pop
movsl
sbb
aas
lods
push
push
inc
lods
jle
clc
jle
test
push
mov
sbb
mov
adc
adc
das
cwtl
movsb
and
jmp
fwait
xchg
add
fucomp
sahf
mov
mov
mov
fmulp
push
outsl
fmull
pop
call
mov
mov
and
push
sbb
push
fldenv
inc
cmc
insl
in
pop
mov
xor
je
pop
lds
xchg
loopne
lods
xor
addl
jo
test
test
bound
loopne
push
lods
ror
cmpsb
fistps
iret
cwtl
jp
xor
enter
sub
pop
push
aad
mov
fwait
out
cmpsb
dec
cltd
jns
iret
jne
cmpsl
or
jmp
pusha
mov
out
jge
fdivr
push
add
mov
orb
push
test
icebp
test
or
shl
sub
lret
scas
xchg
push
add
push
push
pop
sbb
xchg
dec
cmp
inc
inc
test
xor
ljmp
lods
dec
and
int3
adc
in
cmp
mov
mov
pop
ss
xor
ror
out
mov
inc
daa
inc
or
jp
sub
push
idivl
icebp
shrl
lods
or
and
sub
sbb
cmp
jnp
pushf
out
aad
jbe
insb
fadd
lea
in
shlb
stc
push
je
inc
mov
dec
or
jae
sarl
pop
adc
sbb
xchg
xlat
pusha
sarl
lcall
fnsave
sarl
or
out
mov
pop
pop
jno
push
mov
jg
jae
sub
gs
mov
adc
repnz
popf
jecxz
inc
sbbb
mov
das
stc
addl
pop
das
fcmove
mov
cmove
cmp
pop
dec
mov
mov
inc
in
cmp
add
add
ret
xchg
xor
inc
pop
cwtl
push
sbb
dec
push
leave
inc
ja
adc
cmpsl
mov
in
cs
jmp
sahf
test
sub
aad
push
cmpsl
sti
sarl
jno
xchg
push
shlb
cmpsl
repnz
icebp
sbb
xor
ret
pop
adc
add
xchg
sbbl
mov
outsl
ret
xchg
pop
out
jp
and
sub
mov
adc
add
fdiv
inc
lods
test
jle
push
sbbb
xor
aam
arpl
xchg
lods
push
dec
push
mov
inc
aam
shl
cmpsl
lret
icebp
add
jb
loopne
or
sub
mov
stc
ret
iret
aad
pushl
movsl
mov
push
jmp
dec
filds
leave
test
and
sti
lahf
xchg
out
and
stc
pop
enter
mov
scas
push
dec
in
inc
dec
sbb
sbb
xor
jle
mov
cs
mov
lcall
xchg
sub
cmc
sub
cmpl
sti
lahf
jecxz
add
test
daa
rep
jo
add
mov
push
ret
and
movsl
cmp
mov
mov
add
or
add
ret
xchg
lret
and
jecxz
dec
mov
pop
xlat
sbb
sub
repnz
fiaddl
cmpb
test
shlb
pushl
cmp
and
jmp
int3
aas
into
rcl
ror
shll
call
fnstsw
jae
js
call
pushf
cmp
xor
mov
add
out
cmpsl
cmp
rorb
pop
ret
dec
movsb
dec
fs
lock
mov
pop
aam
das
or
dec
out
cmp
aas
xlat
idivb
mov
fisubl
inc
cmp
cmc
inc
mov
dec
sbbb
aas
fildll
int3
arpl
push
rorl
push
mov
ficompl
dec
ss
adc
sub
mov
inc
shrb
adcb
jge
fs
fs
clc
outsl
jge
pusha
das
xor
int
inc
scas
leave
push
or
mov
loopne
sbb
outsl
sarb
incb
push
mov
xor
aad
and
dec
inc
mov
cmp
or
pop
fs
adc
int
cmc
add
push
cli
adc
sbb
jmp
mov
lret
jo
hlt
out
ss
outsb
sub
add
pop
mov
stos
nop
mov
cmpsl
fwait
lock
in
cmp
xor
mov
sub
cmp
mov
in
ficompl
jp
nop
dec
ficoml
or
jae
mov
int
fadd
ret
inc
pop
out
push
aad
ljmp
push
jb
push
movsb
aaa
test
insl
pop
mov
sub
mov
es
inc
sbb
push
jl
jnp
je
pop
mov
xchg
pop
fwait
dec
imull
dec
xor
dec
sub
sahf
jae
std
aam
popf
nop
filds
adc
and
test
stc
inc
xchg
push
sbb
pop
push
push
xor
xor
aam
mov
insb
xchg
xchg
jp
orb
or
out
xchg
push
cmpsb
fistpl
ret
cltd
call
lods
sbb
std
mov
loope
jmp
mov
jae
sub
dec
leave
push
je
ret
push
pop
xor
mov
cmp
inc
or
ja
push
leave
mov
jnp
ret
and
add
mov
pop
shrb
cmp
icebp
lea
push
inc
loop
xor
push
add
pop
jge
fstps
dec
push
iret
mov
ja
sub
jle
xor
add
lods
leave
and
notrack
scas
or
repz
xor
mov
outsl
imul
jmp
fnstsw
lcall
fisttps
imul
lret
out
outsl
aas
in
dec
test
and
xor
imul
nop
add
movsl
fsubrp
adc
fdivp
push
in
iret
cld
cmp
in
xchg
repnz
inc
nop
push
es
outsl
xchg
sub
adc
adc
aad
addb
lock
pop
dec
lods
rolb
addl
mov
sbb
cmpb
addr16
je
shr
push
push
loopne
mov
jmp
dec
push
add
es
add
cmp
lret
cmp
out
sahf
cli
xchg
sbb
roll
push
int3
aas
mov
mov
les
or
jp
lds
jns
call
pop
sub
dec
test
aaa
call
aas
or
rorl
xchg
repnz
xchg
sbb
pop
mov
and
call
in
mov
or
stc
xor
cli
test
mov
adc
cmp
adc
pop
es
lret
aad
cmp
stos
fiadds
repz
pop
mov
adc
adc
xor
jmp
xchg
dec
inc
lds
aaa
lcall
mov
aas
inc
leave
push
and
or
stos
mov
rcl
les
inc
js
test
mov
stos
add
sbb
out
push
fwait
cwtl
bnd
mov
or
pop
lods
dec
jno
mov
push
rorl
add
cmpsb
in
pushf
out
sbbb
repnz
sti
addr16
xlat
and
repnz
inc
xor
mov
in
and
mov
into
ja
add
lods
mov
cs
push
inc
cmp
jle
shrb
push
dec
notl
mov
pop
jp
mov
stc
jge
pop
push
jge
data16
sub
aam
clc
pause
cmpsl
cmc
std
pop
and
mov
or
ret
test
movsb
mov
stos
clc
jbe
sbbb
pop
cmpsb
sti
movb
imul
sbb
and
pop
cmpsb
mov
out
mov
arpl
icebp
mov
inc
cltd
insl
insl
call
ljmp
ret
arpl
cmc
adc
xor
xor
mov
ret
dec
mov
pop
lcall
add
mov
sahf
push
js
fcompl
in
add
mov
xchg
mov
add
neg
jmp
ret
lret
ret
aad
leave
ljmp
js
jl
js
mov
popf
inc
jnp
sahf
adc
cwtl
movl
sub
push
jne
mov
sub
mov
adc
dec
pop
das
xor
mov
xchg
lcall
push
mov
and
pushf
pushf
sub
or
iret
ret
mov
adc
jp
pop
push
mov
jmp
outsl
fadds
pop
push
pop
adc
fxch
add
xchg
insl
xchg
stos
add
out
mov
fwait
pusha
mov
shll
fimuls
repnz
jmp
fisubs
dec
mov
xlat
adc
push
mov
add
mov
bound
cwtl
push
add
dec
in
sti
cs
gs
and
insl
pop
or
and
scas
insb
lret
sub
jo
insb
inc
sbb
xor
xchg
out
xor
lock
xor
ret
dec
and
insl
jnp
jge
jmp
push
push
xchg
xor
mov
mov
mov
cmp
out
je
scas
scas
sbb
pop
xor
jnp
and
call
pop
punpcklbw
mov
mov
mov
xchg
loop
add
fstpt
mov
aad
mov
mov
jecxz
adc
mov
outsl
xchg
push
enter
pop
push
adc
sbb
jns
imul
cmp
rcr
cmp
cmp
cmpl
dec
pop
cmp
mov
xchg
add
xchg
cltd
out
dec
sub
jnp
bound
das
mov
add
push
leave
sbb
outsb
cltd
popa
fwait
cmp
rol
nop
mov
jb
cld
flds
mov
pop
movsl
mov
sbbb
xchg
popa
mov
mov
dec
jge
pusha
pop
push
xchg
wbinvd
add
mov
add
and
loopne
cmpsl
ret
test
addb
sbb
inc
pop
loope
out
jle
sbb
pushf
pop
sbb
or
int
into
xchg
lret
dec
jne
adc
outsl
sbb
jae
mov
mov
out
sub
mov
outsl
inc
mov
out
jbe
lret
mov
testb
sub
jl
popa
enter
mov
sahf
pop
shr
out
ret
lcall
test
scas
ret
and
add
or
sbb
xchg
mov
pop
insb
inc
lods
jne
aam
cld
rcrl
jno
movsl
and
out
inc
gs
and
or
xchg
xrstor
imul
xor
into
xor
sarb
scas
jnp
sti
fcompl
and
int
mov
nop
xchg
inc
cmp
lods
cld
mov
jo
sbb
sarb
in
inc
jp
popa
mov
stos
inc
push
in
lahf
lcall
jecxz
push
in
push
call
lret
mov
xor
mov
sti
test
in
mov
jmp
and
fcomps
mov
mov
mov
fidivrl
add
mov
inc
daa
int
adc
mov
inc
movl
inc
xchg
fdivr
test
push
xchg
add
daa
jae
nop
adc
jns
jle
loope
ss
inc
adc
adc
repnz
dec
xor
sbb
out
or
js
loopne
bswap
ljmp
adc
sub
sbb
push
stos
inc
jb
in
mov
lret
fstpl
ljmp
inc
out
push
and
and
or
push
inc
xchg
fbstp
xor
add
pop
arpl
lret
sbb
pop
add
mov
xor
daa
dec
enter
add
lods
pushf
loope
jle
xor
xchg
sahf
mov
cli
daa
shlb
scas
or
ret
xchg
pusha
hlt
inc
xchg
mov
dec
call
xchg
fimuls
jae
push
cmpl
scas
lahf
cmc
and
int3
ret
fdivrl
xor
nop
pop
and
mov
stos
sahf
pop
movsl
sarb
cmp
arpl
mov
enter
sub
shlb
popl
dec
add
cmp
jnp
and
int
and
cmpb
adc
sbb
stos
mov
push
rclb
xchg
pop
mov
adc
popa
mov
dec
and
leave
mov
mov
stc
sbb
xchg
mov
add
cmp
not
cmp
jg
jae
js
xor
and
fisubrl
call
mov
outsl
scas
mov
in
add
out
movsl
cltd
loopne
data16
jnp
xchg
je
mov
adc
mov
jo
jo
mov
push
popa
add
inc
sub
lock
sub
fs
dec
aaa
adc
pop
cs
jns
xlat
mov
mov
mov
cmp
push
and
ja
inc
xchg
je
iret
mov
das
mov
lods
aas
xor
outsb
je
push
fcmovu
imul
cmp
fsts
sbb
or
hlt
fucomi
mov
or
insb
or
jmp
stos
sbb
fcmovnu
ja
add
xor
je
jg
fcomi
or
xlat
pop
or
cltd
das
iret
dec
cli
dec
mov
sub
cmp
mov
sub
jnp
pop
mov
fdivs
fsubr
popf
dec
pop
jnp
lcall
xlat
sbb
lahf
jp
ror
pop
xchg
fdivr
int3
mov
sbb
sbb
sar
sub
xchg
pop
pop
xchg
pushf
loopne
push
mov
adc
inc
icebp
fstps
inc
inc
xorl
mov
into
repz
fxch
mov
sbb
pop
divb
xchg
jp,pt
aad
mov
or
dec
inc
or
sbb
xor
pop
mov
inc
xchg
pop
sti
mov
mov
mov
fmuls
mov
inc
aaa
pushf
inc
inc
jb
cmp
imul
jge
pop
mov
add
push
lods
int3
inc
or
mov
mov
dec
rorb
icebp
inc
pop
pushf
mov
dec
call
int3
ja
jmp
out
daa
dec
cmp
daa
and
lock
ret
lcall
pop
mov
sbb
test
sbb
ret
iret
call
pushl
sbb
lahf
bnd
mov
aad
rorl
xor
or
les
xchg
push
cltd
shlb
out
mov
sbb
mov
or
add
add
mov
cwtl
xor
les
mov
mov
movsl
xor
enter
xor
fisubrl
lock
mov
ja
fstl
push
test
add
test
and
pop
jge
jg
xchg
or
cmp
and
and
mov
js
adc
inc
mov
cmp
mov
int
divb
mov
and
jnp
fwait
push
sub
fwait
ds
es
outsb
mov
inc
mov
or
sbb
es
mov
mov
xor
ljmp
imul
enter
push
adc
mov
int3
add
leave
mov
mov
out
imul
sub
das
sbb
push
test
mov
sub
stos
push
fnstcw
jl
subl
pop
iret
xor
loopne
or
xchg
lret
xchg
fildl
pause
xchg
inc
repnz
mov
adc
clc
push
xlat
add
cmp
mov
pop
jo
or
mov
mov
xchg
mov
leave
jo
ret
jnp
repnz
fists
lods
jmp
add
xchg
call
sbb
ret
pop
mov
test
mov
scas
aas
les
std
ss
call
aaa
lahf
pop
add
ret
pop
sahf
insb
push
sbb
movsb
sbb
sub
mov
pop
shlb
out
push
dec
adc
and
data16
inc
mov
and
mov
lods
mov
imul
add
pop
sbb
inc
mov
lahf
stos
imul
adc
xor
inc
movsl
or
lea
aad
lcall
pop
aaa
jne
std
cmc
dec
mov
push
push
cs
xchg
inc
xchg
dec
mov
outsb
repz
jge
sub
mov
cs
dec
in
xor
stos
jns
cmp
icebp
mov
sti
out
pop
jo
test
testb
xor
movsb
dec
lea
out
jg
sbb
jb
jae
jmp
push
aas
movsl
push
push
sahf
data16
or
scas
lahf
xchg
xchg
cmp
add
cmp
cmp
jns
ljmp
movl
adcl
movl
sbb
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
xor
xor
add
jmp
lret
ret
ds
mov
lret
xadd
xor
into
adc
jg
jae
js
jnp
sub
and
jmp
jnp
out
leave
pop
testl
mov
push
pop
cmpsb
lods
test
jae
testl
outsb
fisttps
adc
add
shr
in
rcrl
and
xor
jg
add
mov
lea
fadd
mov
das
fs
pop
and
es
frstpm(287
ret
scas
mov
and
mov
sbbl
pop
aad
sub
and
int3
sti
outsb
sarl
cwtl
xchg
int3
push
ja
dec
mov
cs
mov
aas
mov
push
sbb
xchg
leave
inc
es
stc
into
in
add
mov
pop
shlb
aam
out
aad
mov
jbe
dec
mov
imul
sbb
jns
aam
pop
imul
out
add
and
loop
dec
add
and
xor
xchg
out
mov
and
jmp
push
add
sbb
arpl
out
daa
cmp
inc
xor
xchg
cld
add
lods
sbb
adc
mov
xor
cwtl
leave
xchg
xor
outsl
cwtl
sub
xor
out
or
out
xor
cmpsb
lea
repnz
repz
push
in
mov
pop
imul
or
jnp
out
test
inc
icebp
sub
test
in
push
jg
addb
int
ret
mov
jge
out
mov
test
aam
dec
bound
and
xchg
movsb
scas
cmp
std
mov
dec
push
dec
mov
ljmp
scas
jmp
addr16
mov
adc
add
xor
lods
imul
into
sbb
daa
inc
cmpsl
ja
mov
mov
lea
inc
pop
cwtl
loope
cmp
or
jg
les
mov
sbb
cmpl
pop
inc
hlt
stc
jl
das
shll
adc
jecxz
dec
or
lret
mov
mov
push
pop
out
push
xchg
pop
pop
add
dec
inc
xor
fldl
sbb
int
aas
and
pop
pop
les
and
mov
mov
lcall
outsl
out
xchg
push
fidivl
rorb
nop
adc
dec
jnp
das
stc
scas
dec
pop
shll
xchg
push
inc
sbb
cmp
inc
addr16
test
insb
mov
roll
jl
ss
ss
cmc
inc
mov
sub
leave
pop
cmp
sbb
jp
loop
popa
xorb
outsl
mov
xor
xchg
lret
mov
into
sub
cld
adc
ret
and
mov
je
lods
mov
jns
add
xchg
testl
pop
pop
push
das
xor
leave
scas
add
out
stos
sahf
mov
js
add
jbe
addr16
fwait
dec
sbbb
int
mov
add
push
inc
sbb
frstor
sbb
xor
jl
cmp
dec
and
adc
ror
pop
enter
mov
clc
lcall
aam
push
or
push
push
out
xor
xchg
data16
mov
pop
adc
cld
pop
les
jbe
or
sub
insb
mov
xor
in
mov
mov
clc
imul
xor
mov
hlt
enter
hlt
pop
call
in
repz
mov
in
add
in
sub
in
jp
mov
hlt
jmp
ljmp
push
inc
repnz
out
mov
out
add
hlt
faddl
push
loopne
outsb
sub
ret
pop
lods
repnz
lahf
sarb
inc
inc
push
jmp
fs
push
pop
push
sarl
dec
outsl
pop
arpl
fs
cmp
jl
or
call
fdivs
xchg
adc
sti
and
xor
popa
outsb
push
pusha
jae
dec
sub
cli
xor
sahf
andl
mov
arpl
ret
cmp
scas
push
or
xchg
es
dec
or
mov
fisubrl
add
pop
jae
push
push
and
lock
sub
pop
push
mov
mov
mov
les
inc
sarb
mov
dec
mov
popa
insb
xchg
outsb
aaa
dec
cmp
movl
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
adc
jmp
mov
rcl
fcmovnb
fnstcw
or
mov
cltd
push
icebp
jg
jae
js
cmc
int3
mov
add
mov
mov
rolb
mov
popf
loopne
dec
pop
rorb
enter
jbe
jp
fcomps
faddl
lret
dec
and
adc
stos
adc
push
dec
and
jb
or
jmp
xchg
test
rolb
adc
in
sub
enter
sbb
jp
cwtl
cld
xchg
test
jle
pop
mov
mov
roll
adc
shrl
sahf
mov
dec
jns
mov
sarl
fdivs
lcall
jnp
es
loop
and
xor
arpl
mov
cwtl
stos
leave
shlb
jo
repnz
mov
xchg
or
xchg
sub
scas
aad
xor
out
out
jge
inc
stos
xchg
repz
lret
lret
push
lods
cmpsb
jge
mov
aad
sti
xchg
andb
lods
jns
cmpsl
cltd
jp
adc
repnz
or
aad
insl
mov
xlat
sbbl
cmp
leave
shll
push
add
push
and
sub
jecxz
roll
dec
and
pop
xor
xchg
out
neg
subb
pop
mov
out
sub
bound
xor
jo
scas
and
aaa
cmp
xor
adc
dec
push
hlt
enter
lahf
xor
jecxz
mov
aad
lock
jg
mov
rolb
jne
mov
into
jbe
mov
mov
push
lcall
cmp
fiadds
jns
lcall
lahf
cmp
add
insl
and
or
gs
shll
rclb
pusha
push
adc
xchg
xchg
imul
xor
mov
aam
pop
or
stc
pop
nop
leave
pop
popa
sub
xor
xor
loopne
les
xchg
out
inc
loopne
adc
cmp
inc
add
xchg
mov
int
inc
and
xor
push
fmuls
lret
sbb
lret
xlat
push
ret
mov
jge
sbb
fisttpll
dec
mov
xchg
and
adc
test
mov
jl
pop
int
out
test
push
mov
or
add
sar
dec
and
adc
mov
push
push
push
out
lret
cld
in
test
push
aas
in
bound
or
xlat
mov
subb
mov
add
out
or
in
inc
lret
les
sbb
iret
fisubl
je
mov
pop
dec
clc
adc
ss
xchg
popf
mov
jns
inc
ljmp
mov
arpl
sarl
in
pop
or
mov
mov
push
in
jo
pushf
rclb
cld
push
sbb
dec
and
faddp
dec
cmovae
xchg
adc
mov
data16
iret
cmp
mov
push
push
imul
popf
repz
jmp
push
cli
mov
not
xchg
insb
out
hlt
faddl
daa
cmp
push
mov
fs
bnd
fcomp
cmp
mov
push
fsubs
clc
jno
test
or
lcall
mov
sbb
hlt
in
mov
pusha
add
outsl
call
stos
ljmp
sub
pop
or
push
xchg
loopne
out
pop
outsb
in
push
sbb
ss
push
leave
ja
cmp
lods
lret
mov
sbb
push
mov
test
mov
jmp
sub
cmp
xchg
je
popf
xchg
inc
mov
inc
mov
insl
lahf
sbb
dec
inc
mov
loope
in
lret
inc
gs
cmp
cwtl
xchg
push
sub
pusha
inc
pushf
xchg
cmp
sti
out
out
inc
jae
inc
cmp
call
je
mov
sbb
insb
cmp
add
enter
jo
add
mov
adc
std
addr16
gs
inc
mov
scas
adc
jbe
sti
push
ucomiss
or
jge
mov
aas
movb
xor
lea
cmp
inc
sbb
xchg
cs
dec
lods
leave
stc
pop
pop
push
inc
addl
pop
inc
call
xorl
insb
pop
jge
mov
mov
arpl
pushf
xchg
dec
dec
push
fsts
and
mov
jmp
rcr
fnstcw
pop
int3
loopne
xchg
enter
sbb
mov
out
xchg
mov
jo
and
mov
fisubrl
movl
and
jmp
lret
leave
int
int
fxch
sub
in
xor
js
jl
js
jl
sub
cs
mov
into
or
xchg
or
ret
and
cmp
test
aaa
clc
push
cld
sub
cmc
popa
arpl
mov
cmp
lret
mov
mov
pop
shlb
cmc
or
mov
mov
sub
add
lcall
inc
test
jmp
call
mov
dec
push
pop
negb
add
cmp
cmp
imul
fidivl
pusha
notl
dec
cmp
lret
imull
insl
popa
pop
cwtl
into
rol
jle
pushf
js
cmc
rolb
scas
push
in
and
or
adc
insb
and
cwtl
test
imul
inc
add
inc
push
aam
pop
enter
fs
lea
addr16
and
xchg
sub
pop
fmulp
push
popl
and
pop
movsb
sbb
and
push
push
mov
mov
push
sub
daa
mov
aad
lret
mov
insl
ret
int3
punpcklwd
mov
icebp
call
daa
and
cmc
ret
stos
clc
arpl
mov
inc
mov
movsl
dec
mov
cmp
fmuls
dec
aam
iret
loop
push
and
xchg
scas
outsl
pop
mov
push
sub
mov
adc
sbb
jns
in
xchg
dec
pop
stos
lcall
mov
adc
sub
mov
mov
in
mov
mov
xchg
jnp
inc
sub
xor
cmp
inc
add
fsubrl
stc
sub
out
lods
int3
testl
jns
out
jnp
xchg
jns
lods
sub
xchg
pop
jo
in
hlt
cmp
pop
sub
pop
adc
lds
dec
fcoms
dec
adc
and
fdivs
jae
pop
and
inc
or
cmpsb
sub
test
sahf
leave
test
test
and
mov
bound
or
mov
or
cmpsl
sahf
add
inc
adc
cmp
test
leave
or
cmp
pop
pop
jns
lock
movl
cmp
push
mov
sbb
jne
cmpsl
filds
bound
mov
loop
cltd
fcmovne
and
test
lret
adc
cs
aad
andb
int
and
xor
pop
cmpsl
ljmp
mov
cli
inc
push
push
and
jns
mov
sub
outsl
fcoms
call
loope
loope
push
mov
mov
sbb
mov
ja
das
inc
push
orb
cli
xchg
rclb
dec
xchg
push
test
fnstsw
shrl
nop
gs
out
outsb
roll
imul
loop
aad
add
call
inc
lods
xor
in
mov
inc
adc
xor
cs
push
mov
nop
out
fmul
adc
push
mov
loopne
fstpt
pop
or
lea
inc
lock
sub
sbb
imul
add
jp
pop
adc
pop
sti
hlt
iret
scas
pop
mov
cwtl
add
sbb
push
fwait
mov
ret
mov
jp
inc
fisubrs
cltd
subb
pop
daa
push
fnstenv
sub
cmp
out
xchg
pop
pusha
or
mov
add
mov
cld
popa
popf
sbb
add
cmp
adc
inc
and
ret
inc
addl
rcrb
jl
in
mov
push
ja
pop
das
int
mov
lret
mov
sbb
cltd
mov
leave
or
stc
dec
out
fistl
cmp
testb
sahf
je
adc
mov
sbb
fs
inc
das
jbe
mov
and
xchg
or
sub
in
sub
xlat
mov
sub
jo
inc
sbb
rolb
mov
jne
push
out
sahf
mov
add
sbb
fisubl
inc
push
and
mov
and
and
pop
repz
in
test
insb
loope
sub
loopne
sbb
pushf
mov
mov
jp
adc
or
stc
mov
aas
xor
mov
mov
add
sub
aas
popf
cmp
vpmaddwd
mov
enter
mov
push
xchg
ljmp
test
sub
and
jge
push
push
mov
mov
popf
sub
fwait
xchg
rol
jmp
movl
movl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
jmp
iret
cmp
fld
outsl
fisubrs
insb
clc
jg
jae
js
or
pop
lret
sub
push
into
cwtl
stos
sub
in
clc
stos
jge
pop
stc
fwait
cs
icebp
js
pop
adc
mov
jmp
cmp
push
jmp
mov
inc
mov
pusha
pop
rcr
filds
push
mov
cmp
hlt
lock
imul
jge,pt
jno
push
adc
imul
mov
mov
pop
sti
sbb
pop
adc
adc
and
mov
push
bound
jno
insl
in
aad
xchg
push
sbb
and
les
push
cld
hlt
sbb
aaa
in
outsb
and
in
out
divl
mov
push
fs
data16
out
cmp
lods
mov
adc
jecxz
js
mov
mov
add
push
add
jo
adc
push
outsl
sbb
inc
idiv
mov
add
insb
xor
mov
jg
repz
int
mov
icebp
imul
fndisi(8087
aam
in
mov
cli
imul
popf
lea
fnstenv
data16
data16
fistps
stos
fst
ljmp
mov
test
imul
pop
sub
xor
out
test
mov
mov
ljmp
xor
dec
in
rorb
pop
ja
push
in
mov
push
mov
jl
cltd
add
push
arpl
jle
lock
sbb
cmc
fsts
add
mov
lret
mov
add
data16
mulb
or
jl
mov
xorb
mov
mov
mov
push
bound
popf
cmp
push
jecxz
pop
cmp
xchg
pop
jp
pop
scas
jo
pop
dec
push
cmp
jle
out
sbb
repnz
es
fisubrl
lret
cltd
sahf
test
hlt
jg
stos
push
xor
add
or
push
push
and
imul
inc
sbb
and
cmp
cmp
jo
imul
push
repz
fs
lea
lahf
mov
andb
ss
mov
inc
inc
ljmp
mov
or
or
and
lea
jns
adc
ret
sahf
dec
cmp
cmp
popf
repz
and
and
cmp
vmovsldup
dec
lods
adc
pop
cmpsb
insl
imul
push
insb
sbb
imul
imul
cwtl
sub
or
fs
imull
mov
mov
sub
shlb
inc
jbe
cli
fwait
and
les
test
cmpsb
int3
in
orl
pop
sbb
jno
es
mov
lock
fldl
sti
xor
imul
aam
or
adc
push
fildl
jp
pmovmskb
in
sbb
in
jae
insb
int
fcmovnbe
test
pop
cmpsl
jnp
cmp
dec
and
and
push
test
rcrl
mov
outsb
in
cmp
bound
push
cmp
bound
je
nop
jnp
scas
cmp
sbb
xor
lods
mov
cmp
and
imul
fwait
jne
bound
cmc
ret
ret
pop
push
sahf
xor
inc
int3
scas
daa
ds
cmp
sbb
out
pop
int
pusha
adc
int3
pop
or
pop
mov
mov
mov
mov
mov
int
cmp
add
sub
dec
popf
int3
jle
movsb
xor
pop
mov
fcompl
dec
pop
add
dec
aad
xchg
or
push
cld
stc
mov
mov
push
cmpsb
pushf
inc
nop
pusha
jmp
mov
test
in
mov
mov
test
xlat
xchg
pop
sbb
test
test
lret
shrb
std
cld
pop
and
das
jge
insl
fisttps
loope
out
and
xchg
add
aaa
pop
cmp
rcrl
les
push
jle
jnp
mov
dec
dec
lahf
insl
add
sahf
adc
mov
aam
xchg
inc
sub
dec
loopne
es
xchg
shlb
push
gs
js
adc
or
and
lock
jg
jnp
inc
stos
dec
jle
lock
jle
adc
inc
in
ljmp
idivl
jae
mov
cmp
repnz
dec
cmp
xor
mov
adc
popa
std
mov
mov
cltd
add
aas
dec
add
lock
add
cmp
movl
je
push
movl
jmp
mov
adc
jmp
lret
rol
lret
lret
and
adc
insl
add
std
cmpl
jl
js
pop
xchg
jecxz
or
orb
mov
lcall
inc
pushf
pop
ja
mov
or
ret
push
jp
inc
lods
mov
sbb
inc
and
das
ret
popa
inc
ljmp
data16
mov
mov
imul
mov
popf
rdpmc
lret
push
test
mov
pop
push
repz
mov
mov
add
add
lcall
xchg
jno
dec
push
cmp
push
xor
jg
gs
adcb
jecxz
dec
push
cmp
jg
gs
mov
les
pop
push
cmpsb
ret
add
ljmp
ja
mov
cld
push
jbe
iret
dec
insb
adc
xor
and
jle
dec
or
or
sbb
or
and
mov
out
ret
mov
mov
mov
cmp
push
sbbl
mov
sub
or
out
push
push
lock
dec
addl
and
add
les
ret
jp
aas
rol
arpl
dec
cld
pushf
popa
sub
jmp
push
mov
mov
inc
inc
dec
mov
fnstsw
xor
test
dec
add
xor
push
pop
test
loopne
test
xchg
sub
mov
or
add
fadds
add
inc
nop
jg
mov
ja
out
arpl
iret
mov
sahf
fdivl
cmpb
fs
ja
push
push
lock
dec
decl
mov
ret
lcall
scas
sbb
or
dec
out
fsubl
andb
jmp
fsubrs
or
sub
mov
push
push
into
pop
pusha
mov
mov
je
push
push
hlt
mov
cwtl
jecxz
imul
push
sahf
fst
cmp
or
mov
xchg
jb
icebp
mov
mov
or
sub
sbb
in
mov
jle
fimull
sbb
int
pop
scas
sub
mov
sub
cmp
in
jns
and
add
aaa
adc
popf
inc
cmp
leave
dec
xlat
jge
rcrb
fwait
outsl
or
cmp
sbb
je
or
cmp
jp
add
pop
mov
shl
adc
cmp
pop
dec
in
inc
cld
lret
movsb
sbb
jg
loopne
mov
sub
mov
movb
fwait
sbb
sti
fwait
mov
aas
jo
test
sbb
into
inc
lea
push
inc
mov
dec
out
and
ljmp
lds
insl
sbb
sbb
mov
sbb
int
lcall
xor
lods
fadd
aam
sbb
and
push
or
fnstenv
enter
pop
test
inc
cli
jl
dec
mov
jno
sbb
imul
jns
clc
add
cld
cmp
sub
rcl
cmc
inc
xchg
fbld
sub
neg
ret
mov
inc
xor
mov
mov
lock
or
jmp
pop
push
bound
stos
dec
push
fistpll
fnstenv
xor
push
add
or
repnz
jmp
pop
inc
add
inc
jnp
ss
xchg
add
loope
call
dec
stos
pusha
jecxz
cmp
test
push
out
dec
or
inc
std
mov
sub
cmpsl
inc
push
cmp
inc
mov
pop
inc
stos
out
mov
dec
dec
xchg
outsb
push
xor
mov
xor
push
cmp
dec
subl
test
cmpsl
lods
or
test
call
sti
mov
push
aad
or
out
popa
adc
xor
cld
arpl
pop
enter
jnp
pusha
mov
mov
loopw
sub
mov
xchg
icebp
cmpsl
cli
scas
movsl
popa
lcall
adc
icebp
cmp
jns
sub
push
mov
int
rcll
popa
xor
and
movl
dec
arpl
cmp
adc
mov
movsl
and
jmp
ljmp
sub
push
dec
cmp
mov
inc
pop
add
divb
repnz
jge
stos
mov
pusha
cmpsl
cmpsb
clc
xchg
je
jmp
mov
xchg
lcall
mov
inc
inc
aad
push
aas
pop
movsl
xchg
and
push
aad
mov
ret
je
inc
xor
mov
lods
test
aad
ret
ficoml
mov
add
in
pop
add
sub
mov
addl
xor
andl
add
movl
jmp
int
enter
int
stos
nop
dec
cwtl
xchg
sub
xchg
jae
js
imul
add
dec
adc
cmp
pop
push
ljmp
inc
sub
insb
mov
out
xor
mov
dec
in
push
jmp
sahf
fistps
cmc
xchg
sbb
cmp
rorb
pop
adc
xor
inc
push
std
jg
xacquire
and
test
mov
int3
sbb
out
adc
push
jnp
ja
fmuls
xor
jecxz
mov
xlat
test
popa
inc
jg
faddl
ds
push
jecxz
or
ja,pt
mov
mov
daa
daa
cltd
enter
jg
mov
sbb
lret
rorb
cwtl
andb
or
xchg
sbb
ja
and
dec
fstpt
sarl
or
push
sub
jecxz
mov
in
add
push
insl
xchg
int
xor
add
sub
flds
xchg
scas
dec
out
out
adc
je
mov
movb
mov
push
xor
pushf
clc
mov
xchg
push
pop
cmp
outsl
sbb
jl
inc
dec
push
test
dec
pop
push
fsubrl
or
out
cmc
mov
sbb
adc
and
loop
mov
inc
cmp
or
cmp
out
jl
dec
push
inc
rolb
lods
sbb
mov
sbb
sub
mov
or
movsb
adc
and
mov
mov
frstor
push
movsl
out
push
pop
mov
dec
bound
cmp
leave
push
lods
sub
push
mov
inc
adc
mov
subl
ds
push
push
mov
pop
push
sahf
mov
sub
jl
push
sub
xchg
cmp
lcall
imul
mov
pushf
shr
sub
mull
cltd
gs
push
add
js
cmp
ret
rcrl
cmp
loopne
add
mov
in
jmp
out
test
mov
jecxz
clc
leave
sbbl
mov
or
aas
push
sub
imul
or
roll
cld
sbb
inc
les
and
lret
dec
or
sub
pop
pop
or
jmp
xchg
test
xor
loope
and
imul
pushf
sti
mov
shl
stos
pop
pop
mov
push
rcll
mov
inc
pop
outsl
les
rcl
es
mov
pop
jb
icebp
arpl
or
nop
xchg
or
and
sub
dec
and
cs
test
out
adc
jns
out
adc
and
mov
dec
inc
mov
scas
jno
imul
mov
pop
and
mov
push
cmpb
push
js
xor
shlb
cmp
xchg
sub
out
dec
stc
lock
lahf
mul
push
inc
push
sahf
das
pop
je
aaa
cmp
arpl
mov
cld
sbb
dec
nop
out
xchg
sub
enter
add
dec
jb
jmp
stc
cmp
aaa
stos
xchg
mov
add
into
or
or
add
addr16
push
cmp
sub
xchg
mov
test
xchg
or
std
push
cmp
pmulhuw
sub
push
pop
add
push
je
push
inc
nop
xor
loopne
test
xchg
add
int3
mov
fcompl
push
hlt
and
jne
pop
in
and
cmp
or
ss
push
push
icebp
out
js
into
jb
sbb
push
push
jb
lret
mov
mov
fldl
cmp
adc
mov
out
mov
inc
in
and
cmp
sbb
or
jmp
mov
aaa
sub
loope
and
push
dec
push
ljmp
scas
add
add
add
adc
jg
adc
cld
sbb
es
or
cli
mov
inc
out
sti
out
cmp
xor
fidivrl
or
ret
jle
pop
dec
add
pop
nop
subl
push
ljmp
insb
fs
mov
push
sub
jge
cmp
and
in
pop
int
sahf
mov
jmp
inc
popa
cmpsl
sarl
cmpl
js
mov
jns
cli
jmp
lret
leave
shrl
nop
adc
js
jl
js
pop
adcl
movsb
lea
mov
mov
xchg
sub
imul
sbb
inc
sbb
mov
push
add
sub
dec
gs
mov
sar
xchg
pop
mov
cld
adc
clc
adc
scas
rcrl
ja
aad
push
sarl
xchg
jns
jo
lock
lock
cmpsb
or
mov
test
sub
fs
xchg
inc
or
inc
mov
fs
flds
nop
mov
xchg
addr16
sub
sti
outsl
sbb
mov
and
pop
lret
cltd
das
sub
sub
mov
sbb
rorl
pushf
stos
push
outsl
sub
scas
mov
outsl
sub
call
cmpsl
pop
xchg
sarb
out
add
ss
inc
xchg
sub
in
mov
jle,pn
dec
in
ja
push
dec
push
ret
xchg
cmp
cmpsl
xchg
jmp
addr16
insl
jb
push
sbb
fbstp
fisubrl
push
mov
mov
cmp
mov
add
daa
pop
mov
sbb
in
dec
insb
push
mov
loopne
imul
inc
ror
jle
xacquire
jge
fidivrs
push
sbbl
pusha
pop
fldlg2
mov
popa
int3
int3
add
add
leave
ffreep
cmp
mov
jle
push
mov
out
fistl
mov
xor
mov
pop
aaa
fs
xor
xor
scas
or
fistps
or
inc
fiaddl
or
lds
cmp
push
pop
rorl
mov
and
mov
mov
dec
mov
clc
bound
dec
pop
mov
and
adc
jns
jmp
xor
test
pushf
jl
sahf
jmp
mull
push
or
stos
pop
xor
out
pop
out
inc
adc
and
push
std
clc
pop
cmp
sbb
adcl
pusha
loop
fdivrs
nop
mulb
sbb
mov
je
and
or
lock
in
fisubl
adc
js
fsubs
xor
xorl
pop
pop
sub
stc
inc
mov
push
out
negl
rolb
cwtl
xchg
pop
ds
lods
sti
cmpsl
cmp
shll
aad
int3
rcrl
lods
std
subb
jnp
repz
inc
ret
mov
test
inc
mov
out
lds
mov
xlat
add
xorb
stos
jno
or
ss
jae
lock
ret
data16
fdivl
add
mov
lahf
mov
pop
iret
loopne
jl
xchg
lods
imul
sbb
inc
scas
mov
or
mov
daa
mov
cld
mov
mov
push
jns
enter
stc
adc
ljmp
add
mov
ficoms
aad
adc
fucom
push
cltd
popa
and
pop
ds
pop
lcall
xor
test
fdivp
pop
xorl
xor
mov
test
fcmovnbe
or
sub
mov
mov
adc
push
rcr
inc
sub
daa
cwtl
xchg
ret
fldl
sub
ljmp
fucomp
call
insb
xchg
movsl
and
out
jbe
cmc
xchg
jge
or
jmp
in
pop
lock
xchg
mov
js
dec
xchg
loop
cmpsl
xchg
push
daa
cmp
sub
inc
ret
xchg
ljmp
pop
pusha
push
pop
ficomps
pop
sbb
mull
cmpsl
fdivrl
inc
or
pop
add
leave
inc
das
push
pop
sub
mov
ss
inc
jns
push
test
xor
cld
les
leave
inc
inc
sbb
pop
gs
andl
mov
into
cmp
insl
ljmp
cmp
mov
cli
mov
mul
cmp
sub
lock
out
jle
dec
mov
sub
mov
adc
pop
iret
mov
rclb
pop
dec
cmp
inc
push
pop
push
nop
dec
nop
inc
movsl
cmp
lods
add
stc
popf
iret
cli
pop
outsl
inc
fs
out
gs
fucom
sub
push
sub
mov
jp
and
jl
out
icebp
and
sub
out
or
mov
pop
add
test
pop
jnp
cmp
lret
data16
fbstp
out
adc
jno
loope
pminub
xlat
mov
add
mov
pop
cmp
xor
ja
xor
repz
mov
inc
call
bound
add
jmp
cld
jb
mov
mov
jmp
into
iret
iret
cmp
cmp
shl
aad
je
js
outsl
inc
mov
jae
js
sbb
dec
test
hlt
cmp
sahf
xchg
mov
adc
lea
pop
iret
jne
ret
arpl
and
sbb
test
dec
leave
mov
xchg
push
sbb
mulb
shlb
popl
fs
repz
ss
movsl
push
jnp
mov
aad
testb
sub
xchg
fnstcw
cmp
fstps
clc
in
stc
mov
shlb
test
fwait
cwtl
mov
or
xor
mov
cmp
daa
push
xchg
cmp
jg
js
fcmovb
or
test
jae
push
inc
std
or
pop
rclb
ja
or
adc
sahf
mov
rorb
xchg
scas
jmp
movsl
fs
dec
aas
add
int3
out
repnz
add
out
sbb
sarl
mov
mov
mov
or
xor
mov
lcall
insl
lahf
push
loopne
mov
dec
xchg
xor
jae
stos
inc
push
mov
popf
shlb
sbb
xchg
fwait
jno
scas
mul
mov
mov
in
lcall
sub
fadds
pop
test
nop
jmp
jnp
out
je
fcom
inc
mov
movsl
jl
lock
adc
pop
adc
inc
jmp
xor
add
add
jl
xchg
in
addr16
movsb
push
iret
cmpsb
dec
adc
lret
or
mov
xchg
jle
and
push
aas
jle
or
xor
mov
mov
cmpsb
sahf
mov
pop
jmp
cmpsb
shlb
addr16
lods
pop
jb
inc
inc
pop
sub
into
in
pop
int
pop
xor
in
icebp
sbb
sub
incb
sub
cltd
lret
aam
test
sbb
sub
out
dec
out
cmp
jecxz
rorb
ja
ljmp
xchg
xor
pop
pushf
mov
and
cmp
test
and
add
xor
mov
nop
push
and
daa
jl
fiaddl
fildl
in
jg
mov
pop
sbb
adc
mov
pop
fwait
xor
sub
fistps
and
lods
sbb
add
and
mov
mov
pop
ljmp
or
imul
mov
pop
sbb
adc
fdivs
lea
lahf
pop
push
aas
out
jbe
jo
sbb
aas
inc
cmpsb
inc
pop
and
mov
out
lods
push
stos
es
les
imul
jp
push
sbb
xor
jge
pop
leave
inc
bnd
inc
fldenv
mov
hlt
test
cmp
add
jg
sahf
mov
xorl
pop
mov
loop
insl
sahf
jecxz
adc
mov
adc
pop
jle
mov
mov
mov
ja
sub
daa
andb
sbb
fnstenv
imul
xor
mov
gs
xor
push
push
testb
push
mov
data16
popa
jp
xchg
das
leave
sbb
pop
dec
mov
add
pushf
inc
inc
test
push
push
adc
push
adc
sbb
sub
adc
int3
xchg
cld
data16
mov
jp
jmp
xor
pop
push
pop
rcrb
pop
enter
movsl
cmp
xchg
xchg
mov
cmp
adc
push
movsl
cmpsl
cmc
mov
fists
xchg
test
lret
pop
lcall
outsl
out
sbb
les
mov
test
sbb
enter
xchg
in
addr16
jecxz
adc
sbb
adc
cmp
jbe
fldt
xchg
push
push
iret
test
pop
mov
mov
das
adc
out
outsb
sub
mov
ss
subb
jne
push
dec
lret
jg,pn
insl
cmpsb
mov
ds
jns
mov
sub
frstor
cmpsb
jne
das
xchg
movsl
and
mov
adc
mov
movsl
fcompl
daa
mov
xor
or
pop
push
les
sub
sahf
dec
cmp
xchg
bound
enter
xor
jecxz
xchg
loope
pop
mov
jne
cmc
popf
xchg
jb
cmp
sbb
pop
inc
loop
loop
dec
mov
jmp
fisubs
dec
push
inc
shlb
aad
dec
mov
aas
outsl
cmp
push
mov
dec
sbbl
add
jmp
ror
cmp
aam
fistl
pop
push
pusha
mov
jl
js
xor
jno
mov
test
rcll
loope
scas
les
mov
push
pop
xchg
xlat
in
scas
push
sbb
add
imull
aad
inc
and
pop
loope
jo
add
jecxz
out
add
or
and
jecxz
es
adc
mov
jae
fdivl
xlat
cmp
rcrb
inc
mov
test
and
insb
and
cli
test
mov
mov
cmp
inc
into
rorl
mov
add
sbbb
inc
stos
pushf
push
mov
call
rep
jbe
sbb
mov
mov
fisubs
addr16
into
inc
subb
fsubrs
mov
adc
pop
mov
mov
xchg
mov
ljmp
inc
or
dec
mov
xchg
unpckhps
jle
add
or
imull
fistl
dec
and
ja
pushf
xchg
stos
jp
mov
xchg
dec
fcompl
mov
pop
inc
mov
movsl
add
nop
xor
and
dec
inc
jmp
pop
ss
cmp
fadds
jg
jge
mov
gs
fisubl
mov
icebp
mov
fidivrl
int3
mov
pushf
shr
call
cli
shlb
mov
push
pop
fwait
std
cmp
movaps
adc
pusha
test
pop
xchg
je
inc
pop
push
sub
jnp
and
sarl
je
js
sbb
jp
cltd
lock
push
ss
shll
insb
inc
sbb
inc
lock
scas
xchg
loope
jp
sub
jge
negb
aam
sbb
or
inc
out
fwait
cmpsl
mov
jbe
aam
sbb
mov
xor
out
std
jg
fstpt
xchg
insl
pusha
cmpsb
jecxz
dec
jbe
jecxz
pop
out
ljmp
mov
push
mov
mov
add
sub
xchg
enter
pop
movsb
icebp
dec
fnstcw
and
pop
mov
cs
test
sbb
cmpl
push
sbb
cmp
pop
cmp
adc
inc
push
mov
xlat
lds
shll
data16
repz
std
push
push
dec
jle
cmp
nop
dec
aas
fldcw
mov
pop
imul
shrb
mov
int3
mov
shr
popf
cmp
or
add
iret
pop
outsl
std
in
fisubl
jg
int
pop
out
push
adc
jmp
adc
icebp
jno
dec
inc
stos
adc
mov
out
mov
daa
lods
sub
mov
xor
push
push
ja
push
adc
push
jae,pt
hlt
test
fnstsw
shlb
add
out
mov
lods
lret
hlt
sub
mov
pop
xchg
mov
inc
mov
sub
fidivrl
jns
push
inc
sarb
cltd
mov
push
mov
outsb
inc
jmp
lahf
in
test
ret
push
iret
mov
test
adc
mov
fdivs
iret
cmpsl
xor
test
or
cmpsl
lret
mov
movsb
mov
mov
push
outsb
mov
adc
pop
inc
lea
mov
mov
add
mull
jo
pop
or
cmp
pop
mov
xchg
nop
inc
inc
jecxz
inc
dec
repz
pop
movsl
or
add
aad
movsl
xor
add
lret
mov
lock
xchg
adc
call
pop
inc
lock
scas
pusha
gs
rol
pushf
fs
mov
mov
test
sub
push
cs
dec
aaa
xlat
add
repz
push
sbb
les
pop
gs
outsl
push
insb
push
mov
subb
jno
fmull
ja
lcall
xor
push
xchg
adc
inc
and
push
pop
mov
sub
movd
jno
mov
pop
xchg
mov
loopne
xchg
mov
mov
cli
aas
jle
adc
jmp
mov
push
xchg
imul
in
add
iret
dec
cmc
lods
mov
adc
out
std
or
adc
inc
jp
xorb
mov
shll
leave
xchg
cmp
mov
dec
adc
cmp
mov
add
and
mov
orb
pop
mov
mov
clc
jmp
int
aad
int
sahf
pusha
mov
lcall
dec
and
sbb
lea
out
xchg
mov
inc
pop
sahf
adc
push
daa
hlt
sahf
adc
in
fmull
loopew
imul
mov
xor
sub
mov
icebp
stc
lock
leave
insb
shrd
movsl
stos
les
xor
sahf
push
xchg
into
shrb
and
push
cmc
mov
jne
xor
stc
pop
dec
pop
jae
sub
shlb
int3
mov
sub
mov
sbb
jecxz
push
fwait
mov
pop
inc
mov
cwtl
stc
int
jne
data16
sbb
mov
loopne
jns
out
mov
mov
pop
xchg
pop
push
mov
dec
mov
mov
test
stos
jns
adc
shll
jb
or
sbb
cmp
xchg
shl
jnp
lock
popa
adc
push
and
add
dec
mov
ljmp
and
ror
adc
loope
roll
and
inc
and
dec
inc
jmp
inc
negl
cmp
add
icebp
pop
adc
push
mov
stos
loopne
xchg
adc
cwtl
repnz
jno
cltd
xor
scas
movhps
jmp
cmp
lret
int3
iret
movb
adc
push
fists
mov
add
dec
mov
mov
arpl
test
repz
inc
jnp
jo
js
or
std
in
jnp
or
in
pop
mov
outsb
ret
or
test
jecxz
orb
xchg
mov
mov
add
push
mov
mov
std
stos
xchg
sub
jo
and
mov
lret
repz
pop
xor
pop
push
ja
and
cmp
ja
dec
movsb
es
push
jb
cmpsb
cwtl
dec
pushf
sbb
insl
sub
sbb
push
dec
sbb
mov
mov
inc
lock
pushl
leave
lds
cmp
xor
popa
jnp
xor
pop
into
push
pop
scas
ja
dec
dec
repnz
pushf
dec
je
fildll
nop
std
imul
fists
movsl
shrb
add
stos
popf
xchg
and
inc
sub
movsb
push
xorl
dec
mov
test
ficoms
mov
fsubs
les
pop
and
push
repnz
or
stc
and
sti
lcall
mov
stos
daa
sbb
cwtl
stos
mov
xor
movsl
in
iret
in
jb
outsb
dec
outsl
lahf
sub
call
push
mov
or
sbb
jmp
mov
ljmp
js
sub
add
into
sbb
repz
std
out
push
out
mov
and
sbb
sbb
mov
push
insl
cli
dec
jno
std
sbb
fstl
loopne
cmc
int
lret
int3
xchg
ss
sbb
and
mov
add
lret
dec
movsb
cmpsb
dec
sub
mov
ss
leave
and
push
sbb
mov
push
cmp
aas
f2xm1
dec
cmp
stos
data16
lock
dec
jbe
mov
stos
out
out
push
rorb
push
mov
pop
xchg
lods
fwait
cs
and
in
add
cmp
in
sti
outsl
xor
xchg
xchg
xor
pop
add
jae
jle
add
daa
jae
call
mov
das
jne
rorl
adc
movsl
ret
mov
jo
push
dec
js
xor
fwait
add
ffree
inc
movb
aaa
jne
pop
mov
push
jb
push
xchg
lea
in
jns
lret
jg
arpl
mov
flds
push
sbb
adc
pop
lcall
dec
repz
clc
cs
inc
inc
mov
adc
sbb
idivb
cmp
subb
or
add
mov
jge
loopne
gs
jl
cmp
xor
jp
cvtpi2ps
int
inc
inc
lods
sbb
in
mov
cld
pushf
adc
outsl
sbb
jae,pt
rorl
xchg
and
xchg
rcrl
xor
mov
outsl
lcall
jl
cs
icebp
xor
test
iret
adc
lds
adc
test
xor
mov
xchg
jmp
cmp
out
pop
push
mov
sub
xor
addl
xor
cmp
cmc
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
jmp
cmp
fcmovnbe
rolb
pop
ja
popf
jg
jae
js
lret
cmpsl
cmpsb
out
or
jb
mov
sbb
and
jg
inc
inc
mov
out
pop
cmpsb
xchg
push
cmp
xor
sbb
sub
mov
inc
scas
mov
and
in
mov
jg
das
cvttps2pi
sub
jb
cmp
mov
loop
and
aad
arpl
pop
cmp
add
pop
les
stos
bound
addl
xor
jge
jecxz
or
shlb
lret
xchg
inc
jle
ror
and
mov
sar
sub
outsb
pop
lahf
movsb
lods
jg
mov
xchg
mov
cmpsl
xorb
add
jns
hlt
stos
pop
outsl
lahf
dec
push
lret
es
outsl
gs
sbb
mov
sub
ret
pop
mov
xor
mov
add
pop
fprem1
mov
pop
jge
aas
cmp
mov
adc
mov
inc
add
in
adc
and
test
sbb
rcr
push
dec
push
sbb
inc
jno
aas
dec
imul
mov
inc
or
subl
loope
xchg
mov
jp
bound
jmp
sbb
adc
icebp
jecxz
adc
in
addb
or
adc
or
or
mov
cmpsb
xchg
out
mov
add
lcall
je
out
xor
call
lret
mov
insb
mov
cmpsl
inc
cltd
adc
ds
pop
xor
pop
mov
test
sbb
lock
mov
inc
scas
xlat
jecxz
fidivl
nop
bound
inc
pusha
fsubrp
jnp
push
inc
cwtl
aaa
mov
cmpsb
fmul
rcll
out
push
mov
mov
call
ret
rcrb
adc
mov
mov
fisttps
push
ss
les
mov
cmp
ss
out
mov
inc
dec
sahf
aaa
daa
xchg
dec
loopne
and
mov
scas
call
bound
mov
hlt
push
lahf
fidivl
sub
xchg
mov
mov
push
inc
xor
lods
mov
in
sub
sub
ljmp
jb
mov
bound
pop
repz
jp
gs
insl
rcl
rclb
popa
xchg
fisttpl
sbb
hlt
cli
push
mov
outsb
cmp
mov
loope
inc
cmp
and
adc
loopne
jmp
jbe
mov
fdivl
inc
mov
pushf
adc
bound
mov
mov
push
inc
lds
mov
inc
cmp
lahf
mov
gs
xchg
jnp
pop
les
hlt
and
or
cmp
jmp
repnz
mov
scas
sti
ret
pusha
and
call
mov
test
fdivrl
and
test
xor
add
inc
call
jo
dec
sahf
cld
xchg
xor
jae
inc
and
inc
pop
int3
mov
rorl
addr16
adc
push
mov
rolb
movsb
cmp
jae
mov
sub
pop
pop
loope
loope
inc
xor
pusha
loopne
clc
mov
lea
xor
jns
jmp
and
jge
mov
pop
shll
arpl
in
mov
cmp
std
loopne
mov
in
rorl
hlt
push
imul
push
xchg
adc
test
sbb
stos
popa
push
mov
fldenv
popa
mov
js
xor
xor
push
cmp
insl
int
sub
mov
mov
outsl
outsb
adc
cmp
pop
jbe
adc
and
and
inc
sbbl
and
pop
jnp
adc
pop
inc
add
int3
lods
and
pop
scas
int3
sub
imul
ja
mov
and
xchg
arpl
sbb
repz
fwait
dec
jb
fisttpl
jo
pop
gs
xor
mov
add
jbe
add
jecxz
js
sub
jmp
push
and
inc
pusha
ljmp
lods
mov
xor
popf
sub
mov
fisttpll
pop
jns
leave
aad
insl
clc
and
in
push
sbb
roll
add
cmc
ja
testl
mov
loope
cmp
cmpsb
scas
cwtl
insl
add
imul
jo
ss
mov
mov
sub
jecxz
clc
popf
cmc
xchg
push
jno
fildll
loope
inc
mov
dec
iret
test
negb
xor
orl
mov
rorl
scas
xlat
sub
mov
mov
orl
sub
movl
jmp
aas
int3
ret
aad
aam
stc
stos
push
adc
adc
jae
js
add
jl
xor
dec
adc
les
push
inc
mov
xor
fcoms
ret
push
fiaddl
repz
sti
idiv
add
mov
int3
jno
in
in
xorl
inc
std
lock
sbb
loope
inc
sbb
test
mov
cmc
movsb
fists
mov
mov
xchg
lods
mov
add
pop
push
pop
sub
cmp
push
rcll
pop
repnz
push
xor
or
jbe
pop
loopne
sbbb
inc
pop
int
into
lods
ss
jnp
imul
adc
subb
outsl
pop
xchg
or
jle
mov
dec
call
ljmp
pop
nop
mov
out
ss
mov
daa
add
enter
nop
jle
gs
inc
xchg
pop
out
pop
jmp
or
jecxz
and
sub
out
popa
mov
arpl
shlb
rcr
fstp
dec
jecxz
arpl
or
xor
sub
cmp
mov
xchg
repz
lea
pop
sub
mov
mov
ret
jo
dec
jp
pop
cwtl
jp
sbb
aam
addr16
mov
cwtl
clc
mov
decb
or
lret
inc
fistps
daa
and
sub
or
test
mov
and
lods
add
lock
lcall
push
icebp
out
movsb
ja
lcall
iret
jmp
or
pop
add
cld
fcompl
dec
adc
adc
jmp
inc
cmp
cmc
dec
sbb
pop
jae
add
fcoms
add
ret
cld
xor
lds
or
add
cwtl
and
mov
add
jo
mov
mov
je
adc
ss
dec
imul
mov
fwait
gs
xor
or
jne
and
iret
mov
clc
inc
ret
lock
pop
bound
subb
popa
test
pop
push
iret
pop
imul
cs
shlb
orl
adc
rcrb
popa
daa
test
or
int
push
repnz
gs
fdivr
push
xchg
mov
shll
aas
adc
repnz
mov
fistpll
pushf
in
jbe
sahf
mov
mov
jl
fadds
outsl
js
adc
movsb
push
push
leave
pop
mov
or
mov
xchg
add
pop
pop
adc
adc
add
enter
xor
mov
xchg
loope
pop
xor
cli
inc
jno
mov
and
addl
nop
lcall
div
aam
daa
mov
aam
jge
or
jnp
scas
mov
pop
push
shlb
jb
sbb
inc
xor
push
sahf
push
ljmp
test
add
hlt
pusha
scas
dec
add
std
and
xorb
dec
push
xor
adc
mov
ss
out
xlat
inc
scas
hlt
int3
mov
inc
cltd
inc
mov
out
add
dec
push
cwtl
jecxz
inc
pop
fisubrs
fldt
push
test
xchg
rorb
cmpsb
fsubl
iret
sub
pop
nop
pop
add
and
lock
inc
insb
jp
cs
js
adc
mov
loopne
pop
push
cmp
lods
test
and
cld
lret
pushf
mov
push
jle
fmull
adc
jecxz
push
xor
pop
aas
pop
inc
rcl
popl
mov
in
out
push
cmp
xchg
xchg
cwtl
dec
push
jns,pn
xor
stos
adc
xchg
mov
aam
notb
das
fisubrl
pop
fwait
lcall
mov
pusha
and
or
inc
icebp
je
das
lds
cwtl
xchg
mov
push
mov
mov
mov
fldcw
cmp
push
xchg
aaa
mov
shlb
loope
mov
cli
jne
lods
sub
cmp
test
xor
inc
out
inc
push
lods
in
fdivs
cmc
lds
mov
popa
pop
fidivs
sub
shrl
pop
mov
in
ficoml
jl
rcrb
iret
mov
in
rcrb
sarl
es
xchg
sbb
daa
cmc
push
cs
adc
fwait
push
fdivs
adc
sub
and
add
or
push
fdivl
icebp
cmp
pop
xor
in
add
enter
jge
movsl
push
add
rol
scas
mov
xchg
rcll
cmp
pop
and
fcmovb
add
addl
add
xlat
into
ror
aad
xlat
imul
add
stos
jg
jae
js
mov
sub
xlat
sbb
fimuls
stc
lcall
fisubl
outsl
push
jmp
fcmovnbe
jno
sub
cli
push
lods
mov
push
add
aad
cmp
cli
movsb
xchg
push
pop
repnz
mov
icebp
into
sbb
push
jg
xor
mov
std
int
push
xor
popf
movsl
xchg
popl
pop
ss
mov
xlat
inc
shlb
shll
js
nop
icebp
pop
jmp
and
cmp
inc
xchg
loopne
jae
pop
lea
xlat
push
pop
dec
js
xor
loop
sub
inc
rclb
cmpsl
pop
mov
sbb
cmp
call
mov
aam
shrb
mov
out
fistpl
nop
stc
pop
gs
add
mov
pop
mov
sarb
lock
cmp
xchg
mov
add
lret
sbb
rcrb
clc
pop
mov
in
out
dec
mov
les
pop
loopne
lret
pop
jno
push
push
jbe
adc
mov
jmp
daa
jbe
js
add
imul
push
sub
adc
imul
cmp
push
lcall
mov
das
rcrl
lods
ja
push
test
loopne
mov
and
fld
cltd
and
add
es
js
jo
xor
int3
dec
out
mov
sbb
push
mov
ss
mov
ret
push
or
aaa
or
add
fdivrl
mov
mov
sub
lods
cltd
mov
or
push
movsb
lcall
scas
sbb
subl
sbb
xchg
mov
cmp
sbb
dec
xchg
push
outsb
cwtl
xor
aas
test
jecxz
iret
daa
mov
fs
add
hlt
leave
lods
ftst
ret
in
or
sub
mov
mov
pusha
shlb
dec
sbb
cmp
cmpb
icebp
or
pop
adc
dec
cli
cmp
lsl
enter
dec
push
cmp
mov
jbe
les
stos
ret
fs
ss
lds
push
fcomps
stos
inc
js
push
add
push
push
lret
insl
stc
leave
out
push
inc
jge
cmp
bound
idiv
adc
cmp
mov
inc
mov
xchg
popf
and
inc
and
mov
inc
jmp
nop
cmp
sub
inc
fs
cld
scas
shlb
pop
inc
push
sub
jecxz
in
mov
lods
jns
jo
sub
inc
mov
aas
addl
pop
jge
inc
or
mov
xor
inc
test
xor
in
inc
dec
cmp
ret
fs
or
cmc
sbb
cli
dec
and
jns
jne
jge
xchg
mov
in
icebp
shld
dec
insl
imulb
call
daa
sub
xor
jo
mov
cld
stc
adc
jge
xchg
in
and
imul
dec
cld
test
aas
add
mov
or
in
cmpsb
xor
in
jno
mov
push
in
lock
insb
cmp
imull
rorb
mov
jg
xchg
inc
jmp
fwait
add
outsb
xchg
push
push
adc
jl
xor
rcrb
or
inc
mov
aas
insl
rol
repnz
leave
mov
outsb
cld
in
mov
fdivrl
in
adc
out
jns
or
insb
cli
or
jns
xor
lds
mov
nop
cmpsb
inc
das
aam
dec
xchg
xchg
and
xchg
adc
cld
mov
pushf
push
mov
enter
les
not
mov
jbe
repnz
xchg
lods
sbb
sbb
aad
repnz
not
pop
enter
imul
and
push
lods
out
mov
iret
mov
mov
test
stos
mov
icebp
mov
faddl
aaa
dec
push
push
mov
pop
lcall
sub
outsl
mov
in
cwtl
fsub
sbb
jg
cmp
fstpl
push
stc
xchg
mov
cmp
pop
pop
lods
lock
adc
xlat
add
xchg
xchg
push
mov
fs
pop
ja
add
or
stc
jmp
sub
lods
enter
jmp
xor
ljmp
inc
data16
es
outsb
jmp
dec
test
cs
fimull
adc
mov
xchg
xchg
push
add
in
mov
mov
cli
xor
ja
dec
mov
xor
sbbl
add
movl
jmp
jmp
ror
rcr
rol
aad
stos
cmp
cmc
loopne
scas
jg
jae
js
push
dec
xor
xor
bound
je
mov
test
fwait
pop
jp
push
pop
aas
jmp
les
inc
popa
ljmp
pop
rcrb
dec
lds
stc
add
ja
addr16
and
lods
ret
push
inc
inc
movsl
xor
jg
shrb
popa
icebp
dec
fwait
fs
pop
aaa
sbb
lock
cmc
mov
rolb
adcl
cwtl
pop
xchg
mov
jo
decl
stc
lods
cmpsb
and
testl
inc
ds
add
pusha
adc
ficoml
js
outsb
scas
jmp
fsubr
push
test
leave
cld
loopne
idivl
xor
ss
push
pop
xchg
fsubl
stos
outsl
mov
jle
mov
hlt
jnp
aam
add
dec
xchg
std
xor
lods
xor
cmp
inc
stos
roll
jle
mov
shlb
jno
mov
or
sbb
jb
fldt
cmpsb
sub
popf
leave
mov
mull
dec
lds
mov
mov
adc
enter
mov
jle
sub
test
pop
mov
or
pop
gs
mov
std
xor
and
cld
stos
mov
dec
dec
dec
dec
push
pop
jge
push
repnz
cmpsb
ret
sbb
pop
sbbl
add
xor
pop
lods
inc
pop
mov
pop
test
sarl
add
add
sahf
sti
xchg
fwait
mov
sub
int
test
sbb
ret
out
orl
insl
stos
cmp
pop
shlb
and
add
cli
out
dec
js
test
sahf
mov
push
mov
xorl
je,pn
in
mov
jne
dec
lret
in
movsl
xchg
imul
mov
cmpsl
add
xchg
add
insb
pop
cmpsl
call
lcall
arpl
and
jns
cmpsb
jle
std
xchg
and
jnp
add
fdivrl
push
jbe
fimull
cld
aad
or
adc
clc
sbb
mov
sti
pop
jno
sahf
ja
adc
stc
jae
xchg
mov
and
movsl
dec
lcall
in
pop
and
addl
jecxz
cmp
stos
sti
sbb
pop
cmp
sub
xchg
stc
sub
mov
sub
test
xchg
push
push
aam
arpl
pop
lret
clc
mov
adc
mov
idiv
pop
hlt
cld
sbb
flds
mov
std
icebp
mov
add
mov
mov
mov
xlat
xor
stc
mov
cmp
pop
pusha
in
hlt
mov
and
sub
gs
push
andb
pop
pop
pop
mov
sub
push
in
push
ret
scas
jp
scas
mov
fstps
js
daa
int3
add
stos
loopne
cwtl
jg
xchg
jo
imul
pop
in
sub
pop
inc
cmp
pop
or
adc
leave
pushf
ss
mov
add
outsl
lea
stos
dec
aaa
xor
push
add
les
jmp
inc
out
cmpsl
cmp
xor
ds
leave
les
addr16
mov
jbe
xchg
jecxz
and
xchg
mov
mov
add
sub
ficomps
adc
mov
aad
fs
push
pop
pop
and
insb
movsb
mov
pushf
shrl
popa
bound
in
mull
inc
test
xchg
insl
insl
insb
enter
loop
je
adc
sbb
inc
jge
outsl
orb
loop
mov
or
lds
adc
lea
xor
push
jno
pop
movsb
xor
test
push
daa
insl
scas
pusha
fneni(8087
pushf
push
jo
or
xchg
ret
mov
sub
and
or
add
je
mov
inc
xchg
test
mov
jle
gs
or
adc
jmp
push
add
out
das
push
lret
sarb
arpl
lret
imul
sti
add
and
jb
adc
sbb
in
adc
into
je
imul
loope
jo
jns
mov
sub
dec
or
push
mov
adc
pop
or
divl
pop
dec
ret
jp
ds
fldt
in
pop
dec
stos
rclb
adcb
push
aam
and
add
add
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
mov
mov
sub
mov
jmp
lret
into
leave
aam
cmp
cmp
mov
js
jl
js
or
inc
xchg
stos
push
hlt
out
mov
add
jge
push
push
rcll
xor
sub
imul
es
sub
stc
mov
mov
sub
xor
or
cmp
ret
mov
mov
pop
jb
clc
leave
stc
pop
out
dec
jb
cmp
adc
popf
xor
jecxz
ja
mov
dec
fmull
orl
mov
xchg
mov
xor
in
int
emms
ret
cmp
int3
mov
add
lret
idivb
rol
test
pop
jbe
sti
lds
mov
adc
xchg
jb
dec
mov
shl
out
popf
jne
shrb
pop
sub
pusha
cmp
fdivs
push
sti
ja
and
hlt
int
adc
xor
orl
push
fdivrs
adc
sub
or
add
pop
jp
jge
add
dec
adc
or
int3
je
ja
addr16
and
push
xchg
shl
es
add
cmp
xchg
mov
insb
or
cmp
lock
cs
xchg
loope
cmp
ljmp
pusha
push
push
jge
add
mov
add
test
pop
pop
xor
aaa
cmp
lock
push
std
js
incb
out
mov
dec
xchg
mov
insb
adc
sahf
jo
mov
incb
pusha
test
imul
ret
inc
cld
xor
mov
add
cld
pop
sbb
shll
mov
push
cmp
lds
mov
adc
fisubl
fs
test
mov
sub
lret
dec
sarl
or
pop
stos
out
and
dec
cld
mov
mov
imul
jp
jecxz
lret
and
or
push
inc
jne
add
inc
popf
cmp
sbb
push
lcall
inc
movsl
out
inc
mov
aaa
je
adc
sub
jle
sbb
adc
fs
jl
xlat
daa
add
inc
xchg
xchg
aam
push
outsb
test
je
jecxz
dec
pop
cmovno
das
outsb
int3
inc
sub
push
out
leave
sbb
dec
xchg
cmp
mov
hlt
jb
sbb
aas
adc
dec
fmul
js
cmpsb
jne
dec
mov
nop
adc
imul
movsb
sbb
in
jnp
or
jge
icebp
repz
subl
out
jno
push
mov
dec
stos
leave
fisubrs
cmp
push
pop
push
fistpl
cmp
xchg
sbb
xchg
mov
and
mov
ds
ja
add
sub
push
cmp
lock
dec
and
or
insl
ja
jno
in
mov
or
mov
add
lds
jns
push
ret
in
cmp
mov
sub
sub
jecxz
push
jae
jo
cmp
mov
js
cmpsb
nop
ljmp
dec
ficoms
mov
pop
fistpll
stos
adc
adc
add
lret
lods
sbb
adc
adc
imul
insl
pop
sbb
std
push
sub
sbb
add
push
fdivl
rorl
sbb
jbe
popf
lock
pop
adc
jecxz
push
jle
mov
mov
and
test
mov
push
loopne
sbb
jnp
mov
rorb
mov
cmpsl
cmp
adcb
xor
and
aaa
aaa
int3
xchg
in
cltd
mov
fsubrl
mov
sbb
iret
push
and
repz
lds
aas
nop
push
mov
cli
call
and
jge
mov
mov
rolb
fisubrl
sbb
dec
js
sbb
mov
cmp
stc
pop
xchg
test
loopne
xor
dec
popa
mov
mov
movsl
push
clc
jmp
jp
lahf
addr16
loopne
inc
inc
and
lock
inc
mov
inc
pmaddwd
inc
lcall
adcb
mov
cmp
packuswb
mov
sub
push
jae
aas
lds
pop
dec
mov
mov
mov
dec
mov
dec
fildll
gs
push
insl
loopne
or
mov
lret
push
test
shlb
clc
add
jmp
cmp
leave
lret
leave
leave
ret
outsb
lret
jge
lret
cmpsl
sub
mov
js
jl
js
push
sahf
adc
push
aad
or
cmp
push
and
jae
sbb
adc
icebp
in
mov
inc
popf
pop
stc
icebp
cmpsb
jle
mov
dec
xor
pop
mov
stc
jp
adc
sbb
lcall
mov
jmp
aad
repnz
addr16
mov
mov
insl
jo
jle
push
xor
mov
push
add
daa
rorl
scas
mov
in
pop
xorl
fidivl
aaa
cmc
push
pushf
imul
int
cmp
mov
push
sub
stos
push
mov
and
jb
es
stc
fidivl
dec
dec
push
outsb
push
xchg
cs
jge
mov
and
cli
movsb
mov
outsl
or
je
cmp
loopne
outsl
add
out
adc
shlb
mov
int3
loope
adc
and
mov
sub
pop
fcmovnb
movsb
push
push
xor
jmp
push
js
fistl
jnp
je
mov
roll
divl
jns
popa
out
icebp
mov
or
imul
in
in
pop
dec
cmp
inc
mov
or
stos
ror
fsubp
sbb
add
xor
xor
cmp
xchg
adc
mov
movsb
or
in
mov
mov
sbb
inc
dec
inc
push
push
sarb
loop
jbe
xchg
mov
push
psubusb
cmp
push
pop
fsubrl
xor
loope
lcall
or
mov
jns
push
add
scas
lods
push
cmpsl
pusha
jne
clc
adc
jo
cld
lret
aaa
out
decl
mov
or
xchg
push
jbe
fxch
sti
adc
jbe
out
dec
jge
arpl
daa
jo
jecxz
or
mov
movnti
sbbl
mov
add
sbb
imul
lods
push
jmp
in
loopne
insb
inc
jl
subb
sbb
test
stc
nop
mov
mov
mov
dec
pop
repz
cli
pop
dec
mov
inc
in
fs
push
mov
cli
fisubrs
xchg
or
xchg
mov
icebp
imul
lret
mov
adc
xor
sbb
es
push
and
inc
mov
mov
push
push
sub
add
insl
dec
pop
and
jns
mov
sbb
mov
repnz
xchg
cmp
mov
test
pop
pusha
mov
jnp
mov
movsl
mov
in
mov
pop
mov
icebp
imul
stos
xchg
stc
push
jge
cmp
sbb
inc
sbb
popa
fldcw
decl
repnz
push
testl
mov
push
shll
les
sub
push
add
ret
jno
in
jne
sub
loopne
imul
push
scas
paddsb
jp
dec
push
mov
ds
dec
fs
gs
dec
pop
ss
adc
jecxz
pop
repnz
dec
xchg
arpl
lock
or
addr16
jmp
mov
lahf
and
sbbb
jnp
inc
lret
jbe
loope
xorb
cmp
mov
push
shl
les
arpl
mov
mov
xlat
movsb
shll
dec
jmp
and
cmp
jns
sbb
and
dec
outsl
mov
push
add
push
int3
mov
cmpsb
loope
movsb
cld
fisubrs
ret
dec
pop
fadd
mov
mov
jle
xor
mov
pop
push
ljmp
jg
cmpsb
add
aaa
mov
adc
clc
mov
cwtl
std
mov
adc
std
push
cmpsl
stos
mov
dec
jmp
repz
pusha
stc
mov
push
dec
dec
std
inc
cmp
add
push
push
xor
sub
jnp
jecxz
out
mov
or
pop
out
mov
pop
jo
pop
cmpsb
jl
loope
mov
jb
jns
aad
jae
stos
nop
testb
aas
inc
add
out
subl
leave
and
cmp
inc
sti
jp
inc
in
loope
sub
lods
jle
adc
mov
sbb
mov
xor
cmp
or
adc
jo
or
dec
cli
cmpsb
push
inc
frstor
popf
fstl
icebp
xor
adc
out
sti
mov
in
xor
jecxz
jae
mov
add
xchg
shr
or
rol
fcmovnu
jp
orl
jg
jae
js
dec
jmp
cwtl
sub
jo
push
and
in
out
pop
push
lock
cmovns
cmpsl
dec
mov
lds
test
inc
jl
popa
pop
jmp
js
mov
stos
sub
push
pop
stos
inc
fwait
and
pop
cmpl
lahf
or
push
fdivs
cltd
std
movsb
int3
mov
scas
mov
jae
loopne
out
ds
cmp
hlt
xchg
add
sub
and
mov
out
in
not
imul
add
inc
mov
xor
in
pop
imul
pop
js
es
sub
js
mov
pop
mov
ret
lcall
push
ret
test
xor
inc
orl
lcall
mov
jge
scas
adc
xor
cmp
lahf
in
push
jnp
mov
sbb
xorl
push
adc
std
sbb
push
adc
jne
outsl
in
out
cmp
fisubs
xchg
mov
or
jne
leave
test
stos
lahf
dec
scas
ret
add
roll
pop
lods
cmp
in
xchg
adc
pop
addr16
adc
out
sub
test
lods
movsl
sbb
pop
daa
dec
push
jbe
and
dec
loopne
fcmovnbe
xchg
test
leave
test
test
jecxz
sub
inc
and
cmp
int3
inc
js
sbb
mov
mov
cwtl
daa
and
mov
fldl2t
ds
cltd
jp
pop
sub
cmpsb
pop
test
sub
outsb
mov
mov
rorb
pusha
mov
mov
out
sahf
inc
fistl
sti
ja
cltd
popa
jmp
pop
pop
pop
inc
jbe
xchg
sbb
xor
inc
jb
xchg
stos
xchg
mov
adc
cwtl
aad
mov
iret
xchg
inc
into
sbb
test
orb
dec
push
add
sub
test
inc
data16
sub
addb
rcll
xchg
cmpsb
sti
xchg
in
push
mov
lods
inc
push
imul
sub
in
xor
mov
in
popf
rcrb
xchg
gs
push
push
bound
je
sbb
pop
jecxz
test
cld
xchg
adc
push
lret
jp
imul
rol
sti
into
mov
mov
jo
cwtl
push
jbe
and
popa
mov
xlat
lcall
idivb
loopne
or
cmpsb
lock
and
fadds
dec
test
xchg
or
stc
pop
dec
lahf
hlt
push
loop
int3
dec
mov
sub
imul
andb
fldt
cli
or
inc
adc
and
in
inc
sar
jne
bswap
mov
dec
push
bound
pusha
xchg
arpl
pushf
push
sbb
clc
lahf
jns
dec
mov
add
xchg
clc
sahf
cmpsb
or
fdivl
push
jecxz
in
ret
insl
in
stos
sbb
daa
inc
arpl
push
mov
mov
clc
mov
sbb
test
movsb
outsb
cli
dec
aaa
popf
js
frstor
xchg
fisttpll
das
xor
xor
lds
cmp
fdivr
lahf
mov
and
pop
mov
pop
cmp
jns
adc
mov
cld
outsb
add
push
pop
mov
pop
cmpsb
fistpl
mov
das
cwtl
mov
bound
lret
sbb
repz
add
mov
dec
mov
fwait
pop
mov
mov
fisubrl
inc
push
or
aas
mov
cmpb
xor
jg
pop
push
mov
into
nop
cli
popa
scas
mov
out
out
fildll
test
inc
icebp
mov
int
adc
jo
mov
dec
rcrb
test
push
fbld
je
or
push
scas
xchg
outsb
pop
popf
imul
int
mov
cld
stos
push
jno
loop
push
push
adc
inc
dec
pop
push
sub
repnz
lret
pop
test
je
mov
fidivl
cmpsl
and
jmp
sbbl
cld
data16
add
sub
test
iret
sbb
testb
scas
pop
hlt
inc
idiv
sbb
mov
push
iret
sahf
add
and
mov
lods
dec
or
daa
xor
adc
xchg
lret
out
repnz
jae
pop
pop
ret
pushf
add
mov
pusha
js
fistpl
stos
movsb
sbb
sub
addb
pushf
rorb
xor
add
pop
aaa
jecxz
or
scas
xlat
mov
mov
sub
jmp
ror
lret
fcmovbe
fcmovb
mov
lods
jb
inc
jg
jae
js
pop
xor
in
push
addr16
adc
lret
push
loop
sbbl
or
pop
sbb
js
jp
insb
and
dec
outsl
mov
jl
pop
pop
and
orb
rcll
lret
inc
ret
popa
test
std
cmp
sbb
loop
bound
out
ret
fldenv
aas
daa
pushf
push
push
sti
in
aam
out
clc
repnz
xchg
pop
or
xchg
push
mov
cmpsb
in
vmaxpd
cmp
popf
rorb
lods
nop
repz
jo
add
int3
loope
iret
mov
jmp
xor
mov
add
or
fldenv
sbb
xchg
ret
mov
stos
mov
fcomi
jecxz
sbb
xchg
loopne
ret
jnp
adc
jns
sub
outsb
sarb
jl
stos
imul
jmp
xlat
daa
and
sahf
das
shrb
or
mov
cmp
xchg
add
lret
push
clc
test
mov
ret
jns
or
rcrb
in
int
or
xchg
push
xchg
xchg
add
xchg
fldl
lea
out
repz
pop
sbb
ljmp
adc
roll
pop
xchg
daa
xor
jl
mov
sub
sar
jae
enter
mov
daa
cmp
enter
and
jb
ds
loop
mov
cltd
fiaddl
and
mov
inc
mov
cmp
sbb
int
lret
test
cld
jae
xor
pop
stos
daa
ss
add
mov
mov
or
push
out
lods
insb
test
inc
mov
dec
jne
addl
dec
repnz
xchg
jle
in
scas
xor
and
lret
dec
shl
sub
cmp
sbb
xor
adc
xchg
sbb
insb
das
out
push
in
or
or
dec
push
ss
jle
rolb
mov
repnz
fwait
push
mov
hlt
lds
xchg
pop
add
jno
jns
xor
sbb
ljmp
sub
pop
cmp
cli
inc
xor
xor
add
xchg
loopne
xor
sbb
sahf
xor
insl
inc
pop
cmp
jge
mov
mov
lcall
mov
pop
frstor
leave
aad
push
ret
imul
stos
inc
mov
xchg
bound
int3
std
pop
sar
xor
inc
test
test
test
cmc
jle
stos
sbb
mov
in
mov
std
cmp
icebp
xor
repnz
rclb
sarl
icebp
in
cld
add
mov
cmpsb
dec
int3
inc
push
or
jg
sbb
out
fbld
sbb
sub
jmp
push
dec
lret
push
aad
add
stc
sbb
loope
add
cmp
sub
pusha
negl
mov
mul
ret
fs
sbb
add
stos
sub
sub
fidivl
mov
ds
sti
push
mov
andb
fnstcw
sbb
mov
cmp
cmpsb
add
jno
jb
sbb
and
std
lods
aam
aad
aaa
jp
fdivrl
clc
outsb
ret
dec
lock
xchg
mov
loopne
aaa
or
aam
xlat
sbb
jecxz
mov
fs
and
jno
jae
lcall
out
andb
cmp
push
mov
mov
mov
aaa
aaa
adc
cmp
mov
or
adc
inc
xor
call
cmpsb
movl
ljmp
and
push
jo
pop
cmpsl
clc
and
mov
dec
in
pop
pusha
push
shr
push
cli
sbb
out
cmpsl
or
push
filds
int3
fsubs
subl
mov
jb
stos
loopne
pop
mov
sbb
frstor
ss
jmp
out
pop
xor
cmp
fsubrp
dec
jo
insl
sahf
fidivs
dec
icebp
jmp
rcl
test
pusha
out
test
mov
jno
fdivrl
xor
call
mov
xchg
stc
and
insl
leave
add
inc
stc
dec
jb
inc
inc
test
and
imul
pop
movsl
pop
out
mov
mov
imul
or
ret
fcmovbe
aad
fs
inc
mov
inc
jg
jae
js
pop
jp
stos
sub
ficompl
adc
es
aaa
dec
out
mov
dec
in
push
jo
rclb
jle
or
mov
xchg
add
mov
pop
adc
repz
and
stos
adc
xchg
sub
movsb
ss
cmp
sub
mov
xor
xor
pop
roll
pushf
jl
ret
xor
dec
aam
movsb
scas
mov
pushf
imul
or
in
sub
cmpsl
cmpsb
shrb
lcall
je
pop
adc
into
movsb
mov
xor
subb
std
inc
sbb
dec
test
jmp
std
aas
mov
leave
push
test
ret
cmp
out
jo
pop
xor
cmp
lret
pop
ret
fidivl
add
lret
push
ficomps
test
int3
and
sbb
addl
unpckhps
movsl
mov
sub
mov
in
xchg
mov
push
mov
mov
shlb
push
fsubr
repz
ss
mov
adc
cwtl
sti
cmp
loop
ret
xchg
or
or
inc
scas
xor
push
xor
outsb
nop
fcomps
lock
ljmp
push
inc
ds
call
add
dec
in
ds
mov
add
inc
daa
std
xlat
pop
adc
repz
nop
pop
mov
stos
in
adc
xorl
push
js
and
aaa
or
cli
xchg
stc
sub
push
les
mov
push
scas
gs
or
or
repnz
push
idivl
lret
or
dec
inc
pop
addr16
das
pop
pop
mov
push
or
outsl
inc
jle
push
fwait
jnp
xchg
pushl
pop
imul
mov
mov
mov
stc
out
mov
mov
or
lret
pusha
cli
and
repz
divl
es
push
ret
mov
dec
shlb
push
push
push
xchg
xor
out
add
stc
cmpsb
rcll
rorl
cmp
clc
mov
add
out
push
aam
loope
test
and
mov
mov
dec
lods
in
call
pop
hlt
sahf
xor
add
adc
mov
cmc
les
and
shr
jecxz
push
and
std
push
jnp
add
call
mov
aad
sub
sbb
cmp
insl
dec
dec
jae
stos
rcll
xlat
xchg
mov
and
sub
jae
stc
pop
inc
into
sub
xchg
xor
movsb
cmc
adc
fistpl
adc
lahf
ja
add
jg
pop
scas
adc
pop
rorb
cmp
xorl
fs
or
les
lahf
add
bound
cmp
out
divl
pop
mov
jge
addr16
sub
rclb
and
add
in
loopne
aaa
pop
mov
inc
subb
jne
mov
test
push
call
cmp
test
call
jo
cmp
pop
fistl
les
das
pop
adc
mov
cmc
iret
xchg
insl
cmp
insl
lods
mov
inc
pop
mov
popf
sub
insb
lcall
or
dec
daa
insl
out
push
rorl
in
loopne
movsl
push
les
jecxz
jne
neg
xchg
cwtl
fs
hlt
cs
out
push
cld
insb
xor
insl
sub
test
lret
cmpsb
mov
dec
or
out
jae
jns
imull
nop
xchg
dec
xor
rcrb
jnp
cmp
sti
repnz
sub
xor
mov
imul
aas
inc
neg
mov
sbbb
add
cmp
inc
and
or
sub
repz
add
push
arpl
ret
dec
xor
out
mov
rclb
xchg
mov
push
mov
sbbl
negb
lret
sub
ret
sbb
rcl
xor
filds
test
dec
and
ret
push
inc
shrl
jmp
movsl
jl
test
jg
mov
jo
addr16
mov
push
outsl
mov
mov
test
pop
mov
xchg
cmpsl
insb
adc
loope
rol
cltd
lea
inc
call
dec
fs
les
sub
shrb
ja,pt
mov
jmp
mov
mov
xor
xor
add
jmp
cmp
les
jmp
sbb
js
jl
js
add
ret
sub
xor
cmpsl
dec
pop
xor
mov
push
andl
out
sub
or
daa
push
jmp
cli
das
xor
add
adc
dec
xchg
sbb
dec
test
push
insb
adc
mov
ja
shll
repnz
pop
xchg
mov
mov
sbb
adc
enter
sbb
sbb
stc
shlb
lahf
sub
cld
pop
lahf
bound
repz
mov
or
adc
jge
sahf
ret
mov
stos
xor
mov
jge
sbb
xchg
xchg
adc
add
adc
dec
jge
lds
out
push
dec
cmp
jne
adc
push
pushf
mov
sbb
lods
pop
leave
xor
mov
push
pop
or
lea
mov
pop
adc
xor
adc
bnd
inc
adc
mov
pop
pusha
sbb
push
stc
mov
and
daa
rorl
repnz
popa
inc
pusha
decb
popa
xor
les
nop
sbb
test
jb
push
sub
rcrb
je
fwait
test
pop
test
jp
sbb
inc
sub
add
adc
rcrb
cmpl
sbb
lret
mov
adc
pop
int3
shrb
insl
dec
divb
in
loopne
loop
rolb
cmp
xchg
mov
scas
jmp
xchg
std
movsl
xchg
push
stos
ret
es
popf
stos
push
or
ljmp
cli
mov
sub
push
outsb
sti
test
pop
mov
shlb
jns
lret
fadd
stc
and
xchg
cwtl
movsb
xchg
sub
or
out
mov
arpl
push
fucomi
push
inc
ret
es
inc
push
xor
lret
fistps
jl
sub
in
mov
aad
gs
stos
mov
sub
push
scas
inc
mov
and
sbbb
pop
jg
dec
fnstenv
pusha
jmp
rorb
ss
imul
ss
cmp
sub
inc
ficoms
call
repnz
pop
mov
leave
or
pop
andl
sbb
sbb
dec
incb
pop
push
mov
or
sub
scas
int
lods
dec
dec
shlb
subb
mov
sbb
xchg
dec
pop
cmpsl
pop
cltd
fidivrs
push
mov
popa
flds
inc
pop
mov
xchg
jecxz
hlt
sub
mov
jae
loop
fwait
push
jne
addr16
sub
in
jle
sbb
xchg
inc
shr
or
dec
mov
cmp
xchg
idivb
mov
xchg
es
push
in
outsl
aad
jmp
jo
mov
adc
jle
cli
jo
movsl
fisttpl
xor
insb
andl
pop
sbb
imul
xchg
sbb
aad
add
popa
ss
loope
cmpsb
jne
insb
scas
inc
nop
pop
xchg
jge
xor
das
pushf
jno
sti
sbb
adc
add
in
or
hlt
mov
fldl
std
repz
repnz
lret
mov
das
leave
addr16
push
insb
or
mov
jne
add
stos
test
daa
popa
out
sti
jle
lods
rcll
je
insb
push
and
loopne
out
or
push
sarb
adc
mov
inc
mov
jne
push
addr16
dec
mov
mov
xor
sub
shl
and
add
sarl
jp
repz
or
movl
out
inc
inc
inc
shrb
jle
test
shl
sti
push
mov
push
mov
mov
cmpsb
xor
push
push
cmpsb
popl
pop
pop
cmp
sbb
ss
push
jns
enter
sbb
jo
or
cmp
mov
cli
sbb
movsl
out
movsl
ret
loop
or
xchg
insl
jle
pop
fdivrl
adc
in
push
mov
mov
aas
mov
lock
aad
push
and
pop
test
leave
sti
iret
ret
cmpsb
or
mov
mov
cmp
bound
imul
cmpsl
inc
mov
push
sub
mov
cwtl
sbb
test
ljmp
mov
nop
mov
in
lret
mov
aam
fcomi
int3
jns
add
jmp
xlat
int
ror
fstps
repnz
jl
js
movsb
mov
dec
outsb
adc
mov
shlb
scas
adc
bound
insl
mov
xor
pop
push
mov
inc
movsl
cwtl
insb
aad
das
cmp
and
or
add
movsl
insb
fildll
in
xchg
xchg
insl
mov
ja
hlt
sbb
push
imul
jbe
les
scas
and
outsb
fnstenv
test
jl
fildll
cmp
or
aaa
lret
and
and
inc
cmp
clc
and
pusha
push
sub
inc
mov
jno
jno
clc
fisttpll
xchg
sahf
push
dec
movl
movsb
fidivrs
mov
adc
fwait
mov
adc
insb
xchg
ja
pop
insl
push
adc
dec
fistl
mov
vcvtsi2sd
fbstp
fcoms
xor
stos
ss
std
jb
xor
adc
test
or
aas
push
mov
int
icebp
xchg
shll
push
sub
mov
jne
daa
inc
sbb
popa
outsb
push
and
jmp
mov
cli
xchg
iret
loope
push
out
dec
mov
loope
xlat
scas
adc
mov
mov
mov
test
es
cmp
clc
pop
cmp
dec
mov
dec
jnp
insb
push
lcall
insl
insb
stc
or
cmp
jle
popa
xchg
repz
pop
or
std
sub
sti
in
ret
test
cltd
jns
mov
insl
jbe
rcll
sti
std
frstor
mov
rcr
pop
in
insl
js
pusha
pop
mov
mov
filds
or
sti
div
sub
aam
xor
ds
sub
iret
cmp
lahf
loopne
dec
bound
sbb
pop
lret
loope
xchg
lods
out
int3
xor
inc
sub
shll
das
inc
pop
ds
xor
sub
scas
and
fbstp
imul
inc
int3
push
pop
pop
or
mov
or
je
fistps
stc
sbb
pop
lcall
adc
or
call
pop
movsb
jno
and
inc
cmp
xchg
and
js
testl
stos
xor
adc
lea
dec
dec
iret
pop
cmp
cmpsb
mov
stos
and
mov
push
div
mov
fldenv
mov
std
pop
fstp
jl
loopne
inc
cmp
mov
in
in
fs
out
aad
cmpsl
and
jge
jne
test
enter
jmp
aas
add
popf
popf
loop
divb
pop
pusha
sub
inc
or
xchg
inc
jp
jb
xlat
cmp
arpl
pusha
mov
lods
cmpsb
mov
pop
fadd
adc
das
loopne
loop
pop
mov
add
cmp
imul
mov
test
xor
pop
aam
xchg
sub
jg
cs
sub
or
sahf
sub
aad
sbb
rcl
pop
pop
lods
pop
jp
push
dec
pusha
mov
and
pop
xor
xchg
clc
aaa
adc
clc
mov
sbb
and
int
stos
into
int3
sbb
dec
mov
mov
data16
mov
mov
test
push
addr16
push
addr16
fcmovnb
in
xchg
dec
jge
sbb
push
int3
rol
push
jg
dec
xchg
pop
push
lods
cwtl
cmpsb
sub
push
ficomps
icebp
sub
add
popa
enter
test
loop
jge
jnp
bt
cmp
je
pop
xor
or
lret
push
idivl
scas
xchg
addb
pop
mov
inc
movsb
mov
dec
sbb
adc
add
shl
shlb
push
cs
push
fldz
mov
sahf
inc
std
adc
lahf
pop
cltd
add
xchg
dec
in
imul
sub
aas
mov
es
xchg
mov
into
push
out
add
loope
mov
sahf
in
mov
lds
insb
jg
bound
inc
lods
fistl
mov
add
mul
fdivs
aam
jle
cs
xchg
daa
dec
stc
test
mov
lea
lahf
xor
ds
test
xor
into
mov
push
sarb
rorb
enter
stc
movsl
pop
jp
lret
xchg
and
push
add
pop
push
jo
cmp
out
outsl
mov
jle
repnz
imul
into
xor
pop
daa
gs
inc
popf
cld
imul
mov
mov
sub
cmp
jmp
rcl
ror
rcr
aam
pop
inc
daa
clc
sub
out
js
jl
js
xchg
test
cmp
imull
xor
adc
inc
adc
test
sbb
in
cmpsl
mov
out
stos
mov
jbe
in
sarb
push
mov
pop
and
dec
mov
loop
xchg
daa
cld
imul
mov
aas
push
mov
adc
int3
pusha
sarl
ret
clc
jns
add
jns
cmp
pop
adc
xchg
and
loope
lea
xchg
leave
fimull
sbb
je
jmp
push
scas
xchg
lahf
pop
in
test
or
mov
xor
nop
add
lret
rorb
sbb
or
addr16
ret
cwtl
jge
cmp
mov
push
lods
cmp
fildl
test
pop
push
pop
cwtl
pop
mov
xor
add
inc
add
mov
pop
inc
int
es
in
enter
lret
push
push
outsb
movsb
xor
sahf
xchg
nop
dec
jecxz
lods
cmp
mov
fldcw
xchg
imul
mov
in
mov
or
add
pop
push
enter
mov
call
sbb
push
sbb
loopne
cli
cwtl
cmpsl
xor
xchg
outsl
inc
shrl
mov
xchg
adc
add
insl
xchg
xchg
xchg
lock
popf
test
push
jg
mov
inc
mov
call
adc
cmpsl
bound
jge
mov
xor
or
mov
addr16
data16
clc
mov
mov
or
or
push
mov
cmp
pop
and
pop
clc
pop
xchg
push
jmp
inc
negl
stc
xchg
or
mov
cmp
adcb
lods
ret
fs
mov
pop
xor
inc
loop
mov
pop
mov
adc
adc
xchg
mov
and
out
lahf
inc
push
out
scas
mov
mov
js
push
rcll
add
jecxz
lods
xor
out
ds
cmpsl
stos
cmp
inc
inc
or
repnz
stos
insl
jo
call
sbb
push
pop
jmp
xchg
aam
cld
and
push
dec
add
xchg
push
fdivrs
sub
ljmp
jns
add
test
fs
hlt
xchg
iret
dec
shr
mov
cmpsb
pop
push
sti
leave
dec
mov
mov
addl
and
mov
xor
dec
shr
and
mov
and
testb
jl
popf
lds
std
jle
push
jbe
adc
mov
sti
out
push
cwtl
inc
ljmp
das
mov
ljmp
add
cmp
nop
out
shlb
aas
and
jecxz
push
or
add
pushf
sbb
hlt
mov
fstl
jl
pop
mov
in
js
push
fnstcw
or
sub
dec
dec
mov
fsubl
inc
xor
cmpsb
inc
div
shlb
iret
jp
push
push
ljmp
jle
popf
cmp
sub
mov
cmp
out
scas
cmp
push
fstl
addb
xchg
sub
test
jg
into
mov
in
pop
push
jns
dec
imul
icebp
test
in
mov
movd
shlb
and
and
int3
dec
xchg
cmp
cmpsb
lea
lcall
cmp
sahf
hlt
aad
ljmp
push
xor
jne
cmp
in
xchg
mov
das
jb
in
fsubs
pop
je
call
and
out
leave
call
testl
xor
enter
dec
mov
xchg
call
mov
fwait
push
loop
mov
xor
imul
xor
repnz
xchg
inc
loope
mov
icebp
dec
sub
fwait
adc
push
std
dec
pop
push
insb
cwtl
movsl
fwait
sub
in
daa
push
inc
pusha
xorl
push
xchg
scas
push
add
inc
insb
push
xor
jo
push
sub
out
in
mov
notb
push
jge
in
add
cltd
mov
or
add
stos
pop
push
loopne
out
bound
shll
stos
fwait
aaa
test
pusha
rol
dec
mov
mov
mov
cmp
lods
jb
insb
insl
pop
add
repnz
sbb
rcr
test
jge,pt
and
sub
xchg
sub
xchg
jns
mov
push
push
insl
cmp
lret
jmp
jno
lretw
ja
mov
jmp
mov
mov
xor
xor
jmp
lret
ds
fcmovnb
pushl
in
or
pop
jg
jae
js
scas
inc
insl
imul
scas
aaa
push
or
push
fmuls
fstps
adc
jne
pop
adc
push
scas
cmc
inc
adc
imul
xor
add
subl
xor
or
sarl
aas
jmp
xor
adc
into
lcall
lods
push
scas
jo
cld
sub
adc
xchg
decb
or
popf
pop
sarl
pop
stos
cwtl
push
xchg
cmc
jne
xchg
push
cmc
fstps
dec
not
push
dec
mov
cwtl
adc
mov
and
clc
mov
xchg
mov
jns
jle
imul
arpl
ficoms
sbb
push
ja
outsw
xchg
mov
test
or
cwtl
inc
sbb
out
dec
imul
inc
dec
daa
jmp
dec
push
out
xlat
mov
xchg
push
fdivs
xchg
sub
shll
aas
outsb
adc
imul
cld
push
shlb
pushf
mull
and
in
adc
pop
or
loope
stos
and
dec
in
push
or
cld
add
mov
push
pop
outsb
insl
test
jp
pop
test
sahf
leave
cli
leave
out
xor
mov
add
fwait
or
mov
mov
popf
mov
aas
incl
int
add
aas
mov
rclb
cmp
inc
inc
or
push
ret
ret
or
ja
lock
test
mov
mov
xchg
hlt
adc
or
xor
adc
jecxz
aad
cmp
shll
inc
cmpsb
mov
pop
adc
xorl
mov
imul
pop
and
testl
and
push
xor
aad
js
mov
ljmp
lret
rcr
ss
jle
out
jns
std
insl
decb
jo
fdiv
jnp
loop
mov
scas
inc
mov
mov
mov
cmpsb
imul
cmp
into
and
aad
pop
or
and
pop
pop
cmpsb
jle
pop
mov
push
mov
sbb
jo
bound
and
int
outsb
xor
out
pusha
test
movsb
rorb
scas
rorl
push
aaa
movsl
add
add
data16
inc
or
iret
sbb
add
cli
and
fldl
sub
adc
mov
push
or
push
jg
test
insb
cmp
js
xchg
or
jnp
sub
and
push
cmp
push
scas
sbbb
sahf
push
xor
or
in
inc
push
cltd
lret
add
xchg
mov
ja
jge
xchg
mov
sbbl
inc
gs
sarl
mov
or
cmpsl
in
sbb
pop
cli
pop
andb
addb
xchg
mov
call
jno
fstps
dec
js
test
lds
enter
push
jmp
fcoml
jl
and
adc
nop/reserved
add
sti
inc
neg
jecxz
dec
dec
xor
daa
iret
incl
jnp
data16
sub
xlat
and
dec
xchg
push
lea
cli
clc
fs
mov
leave
das
cmc
loopne
inc
inc
dec
push
xchg
jle,pn
sbb
sub
push
mov
movl
jmp
sbb
ljmp
insb
out
dec
xchg
sub
and
inc
dec
mov
adc
inc
int
jns
movsl
xlat
jg
mov
jbe
in
sbb
xchg
pop
in
pop
cmpsb
xchg
test
dec
or
cmc
dec
and
add
enter
cld
push
xor
jmp
mov
nop
ljmp
cltd
jb
xchg
cwtl
mov
cmp
repnz
cmpsl
jns
test
lret
out
leave
adc
inc
dec
mov
or
mov
js
pop
insb
fistps
lret
fwait
repnz
xchg
or
cld
pop
mov
jo
jle
mov
and
jo
pusha
jge,pn
sbb
inc
cld
jae
es
mov
sbb
sub
loop
lret
lcall
sub
mov
leave
test
pop
or
xchg
repnz
outsl
or
mov
in
daa
cmpsl
lret
jge
jb
jnp
xchg
rcrb
push
shrb
adc
mov
mov
test
sub
jp
jno
inc
sbb
push
and
fucompp
dec
incb
scas
pop
stos
push
mov
add
add
imul
mov
mov
sub
jmp
cmp
xlat
enter
int3
sub
and
adc
jae
js
push
push
in
into
in
fdivp
mov
mov
out
adc
aas
leave
cmc
ja
iret
mov
jp
cmc
dec
adc
stos
int
xchg
fs
push
mov
in
add
ret
test
cmpsb
cmp
cwtl
or
adc
rcll
mov
jecxz
in
cmovb
cld
jns
or
sbb
push
outsl
mov
dec
enter
sbb
xchg
filds
in
insb
out
mov
int
repz
data16
pop
xlat
fidivrl
lcall
pushf
jecxz
push
js
sub
dec
pop
adc
loop
aad
sahf
js
pop
mov
mov
jecxz
adc
sbb
cmpsl
scas
xor
ss
rcr
jmp
xchg
jne
mov
jmp
add
mov
xchg
add
jb
push
addr16
aas
mov
aad
xor
lcall
xchg
sar
cmp
stos
dec
mov
push
jle
mov
sbb
gs
sahf
movsb
imul
adc
in
pop
ss
ret
inc
fldl
dec
cli
dec
sub
daa
je
cmp
pop
aaa
aad
sti
int
les
sub
loope
inc
inc
aam
jne
adc
push
js
fbld
jle
js
mov
xchg
fmul
adc
cmp
mov
sbb
adc
jmp
sahf
movsb
sbb
dec
push
in
push
jecxz
push
shl
loopne
sbb
cwtl
sub
xchg
xchg
stos
shlb
adc
jae
gs
cmp
pop
pushf
dec
mov
sub
jno
leave
adc
movb
lock
mov
lock
test
and
nop
xor
out
jecxz
sbb
mov
nop
push
shl
iret
rolb
mov
jp
cli
mov
sbb
sbb
mov
mov
adc
fistps
xchg
insb
es
ret
inc
loop
loop
jmp
adc
pop
fldt
push
push
pushf
mov
shl
ljmp
adc
mov
lds
sarb
xchg
mov
mov
cmp
add
inc
pop
xchg
adc
mov
call
mov
gs
rcrl
and
mov
push
or
cmp
scas
cwtl
cmc
mov
dec
and
adc
dec
outsb
mov
inc
rorl
add
test
std
enter
adcb
repnz
aad
popl
push
mov
push
pop
out
in
xchg
test
in
dec
pop
in
push
jbe
mov
dec
in
shr
in
pushf
jno
jo
push
stos
lcall
jns
pop
test
out
jb
test
xor
jp
jno
lret
aas
push
jmp
lea
mov
cmp
sbb
mov
mov
pop
pop
pop
adc
jecxz
jne
les
pop
in
sbb
ja
addr16
icebp
decb
cmp
jl
shll
cmp
pusha
rclb
mov
outsl
push
sbb
imul
and
or
mov
sub
add
xor
mov
sti
jle
jbe
mov
negl
mov
xchg
in
inc
aas
test
inc
std
adc
shrl
movsl
mov
sbb
inc
jo
imul
mov
inc
jb
mov
push
xchg
push
and
pop
or
inc
setns
repz
cld
mov
cld
mov
sbb
scas
in
leave
js
push
pop
mov
or
addr16
out
repnz
push
pusha
js
jno
add
jae
sbb
mov
mov
jb
aas
sub
int
inc
mov
rcrb
or
mov
decb
int
mov
inc
pusha
popa
add
xchg
gs
loopne
mov
and
dec
jle
or
dec
mov
dec
mov
mov
iret
sbb
mov
and
hlt
imul
mov
aad
xor
mov
inc
loopne
rcll
add
test
cmp
call
lret
popf
pop
test
jno
adcb
repz
aas
inc
mov
cbtw
je
outsb
inc
pop
jp
orl
push
inc
sbb
inc
mov
dec
loopne
mov
push
roll
bound
and
adc
jo
xchg
push
dec
cmp
ss
int
or
loope
xor
ja
mov
jmp
mov
jmp
leave
mov
lds
cmp
jg
jae
js
movl
cmp
les
inc
sahf
imulb
push
xor
imulb
jecxz
or
dec
adc
stos
shll
popa
mul
sub
mov
or
and
mov
rcll
pusha
insl
jb
xor
sub
test
aaa
popf
aam
add
hlt
mov
mov
push
jne
jbe
orb
adc
fisubl
push
and
movsl
push
out
loope
lret
cmpsb
cmp
popf
jbe
mov
jle
pop
loopne
push
mov
lea
xor
sti
outsl
rcr
xchg
jl
lcall
sti
mov
icebp
cmc
push
or
fldt
xlat
dec
test
cmpsb
pushf
push
mov
push
lret
and
loopne
mov
mov
stc
xchg
negl
xchg
jae
outsb
dec
lods
mov
adc
mov
sbb
rolb
outsl
cmp
arpl
fdivrs
xchg
push
gs
add
pop
sub
adc
push
jns
pop
jge
sbb
stos
push
mov
in
mov
jns
lods
and
mov
in
mov
iret
cs
xor
aas
jp
scas
jecxz
stc
imul
les
pop
sbb
cmp
iret
outsl
push
ret
movb
xchg
adc
cltd
xchg
mov
cld
pop
dec
cmpsl
ds
push
in
xchg
or
jo
into
push
sbbb
dec
cmp
xlat
imul
add
test
gs
rorb
pop
push
xchg
push
repz
aam
jmp
popa
leave
in
fisubrs
popf
jno
ffree
cli
xor
inc
cmp
loop
pop
xchg
and
loop
mov
loop
cs
add
mov
push
paddusw
jno
pop
jne
outsb
arpl
mov
mov
push
inc
jbe
cmp
xlat
scas
hlt
xchg
cmc
ds
jmp
xchg
out
ds
sti
cmp
jl
lcall
sarl
scas
xchg
gs
jmp
in
sub
mov
movsl
jns
fldcw
dec
jne
lods
out
stos
aad
cwtl
popf
mov
jbe
in
jno
pop
jge
test
xor
sub
fidivl
stos
jnp
test
and
jae
and
sub
dec
loopne
fucomi
xchg
lahf
in
dec
out
clc
shlb
dec
pushf
sbb
pop
mov
sbb
mov
adc
test
cld
adc
ljmp
xchg
pop
lahf
push
sahf
cmpsb
cmp
or
or
sbb
xchg
xor
jmp
fimuls
mov
xchg
adc
and
jecxz
fdivs
cmp
mov
in
gs
data16
call
cmp
dec
push
leave
cmp
cmp
roll
mov
pop
jns
insl
in
push
out
lea
stc
mov
sbb
clc
rcrl
jnp
ss
rorb
dec
add
jo
ds
sub
push
not
mov
cmpsl
iret
pop
ret
jnp
dec
mov
mov
je
or
push
out
aas
hlt
ret
aas
xchg
addl
or
adc
fisttps
dec
push
lock
popf
jns
dec
add
push
dec
int
inc
in
xlat
dec
in
dec
jmp
mov
das
inc
mov
add
inc
push
leave
mov
inc
inc
daa
scas
cld
cli
pop
inc
imul
and
sbbl
movb
ss
adc
push
stc
call
mov
rcrl
ja
pop
idiv
sbb
leave
sbb
push
jmp
aad
bound
fistpll
ret
sbb
stc
pop
mov
pop
push
sbb
ds
mul
enter
pop
daa
jae
push
lahf
mov
mov
or
mov
cmp
stc
insl
cmp
xchg
rorb
xor
push
aaa
sbb
sub
rorl
in
pop
cmp
outsl
sub
js
push
mov
push
push
sbb
xchg
lock
mov
fs
and
jno
lret
cmpsl
cld
or
addb
aaa
jo
and
out
xchg
mov
jmp
inc
out
mov
or
in
sti
dec
xor
stc
jmp
push
cmp
xchg
pop
icebp
call
inc
sbb
jb
movlps
mov
mov
push
cmpb
sub
les
fstp
push
shll
scas
gs
jg
xchg
rclb
pushl
out
cwtl
cwtl
mov
xor
jmp
rcl
leave
aad
rcr
or
pushf
leave
in
push
js
jl
js
xor
push
mov
iret
dec
dec
lods
ret
sbb
mov
mov
test
mov
lds
loope
sbb
loopne
jno
mov
sbb
aaa
imul
cmc
imul
cltd
push
ja
mov
jg
mov
insb
xchg
mov
arpl
sbb
sub
add
cli
xor
sahf
pop
stos
add
outsb
jmp
out
fmull
arpl
iret
xor
aad
faddl
cld
mov
js
xchg
sti
in
xchg
sbb
mov
nop
sub
jg
jbe
and
push
mov
cmp
ds
lods
sub
mov
adc
lods
dec
mov
cli
rcrl
leave
jmp
or
out
mov
es
cmp
out
dec
fldt
ret
or
movsl
add
jecxz
and
and
adc
pushf
mov
pushf
adc
or
inc
icebp
stos
xor
sti
mov
jl
xor
imul
shl
mov
push
dec
or
aam
inc
jmp
mov
shl
inc
xorl
daa
pushf
mov
pop
pop
cli
dec
out
movsl
push
sub
sub
pop
mov
mov
movsb
sbb
pop
xorl
or
sbb
mov
int3
sub
dec
xor
xor
jnp
cltd
movsb
sbb
dec
hlt
sub
push
jne
xchg
sub
jb
sbbl
or
sub
test
xchg
clc
cmc
mov
mov
les
mov
movsl
pop
dec
mov
mov
aad
pushf
loop
or
sub
repnz
xchg
pushf
xor
mulb
pop
sub
xor
lods
cwtl
ja
daa
sub
mov
add
mov
push
add
mov
in
aam
pop
cmp
imul
jns
mov
into
addr16
insl
stos
push
push
popa
inc
mov
cltd
rcrl
xchg
mov
out
cmpsl
insb
jne
add
cmpsl
cmp
xchg
dec
mov
inc
jns
dec
sub
jge
cwtl
and
outsb
mov
xor
adc
sarl
popa
das
scas
mov
pusha
push
mov
in
push
mov
inc
sub
xchg
leave
es
mov
cs
sbb
or
adc
add
xor
outsl
insl
mov
jg
dec
cltd
js
in
and
lahf
push
add
scas
or
cmpb
imul
pusha
das
sub
inc
and
hlt
shll
inc
aam
mov
mov
cmp
lcall
loop
ss
pop
xor
fwait
cmp
bound
stos
cmpb
sub
pushl
jns
or
scas
xor
fmull
movsb
xchg
in
pop
mov
push
cmpsl
scas
cmpsl
loop
and
negb
repz
mov
adc
insb
call
cs
andl
jbe
inc
imulb
sub
lds
aam
pop
les
jl
xor
adc
xor
jl
aaa
jp
insb
lret
js
mov
mov
aad
ds
and
lahf
dec
xor
fsubl
jle
push
leave
out
fmuls
push
rclb
xchg
xor
cmp
clc
and
xlat
mov
inc
xor
xorb
and
ss
scas
mov
xchg
jo
cmpsb
push
test
and
jmp
arpl
imul
mov
cmpsb
xchg
push
outsl
fstpt
push
xchg
rcll
xchg
xchg
pop
int
add
clc
call
inc
mov
cmp
add
pop
push
fsubl
pop
jmp
ljmp
mov
dec
push
pusha
fistpl
imul
add
loope
inc
jg
or
scas
cmp
jbe
imul
pop
jns
sub
leave
popf
xchg
mul
mov
imul
mov
int3
xlat
xchg
ret
sub
sbb
push
out
scas
jp
stos
ds
pop
or
es
mov
popf
push
nop
dec
jbe
outsl
sbb
fidivs
ds
divl
jae
leave
rolb
test
push
jnp
xchg
scas
test
inc
popf
out
rol
dec
jne
jmp
call
lret
loope
mov
pop
subl
out
mov
scas
jmp
hlt
fistpll
ret
or
push
out
rcrl
sbb
cmpsb
add
out
jg
adc
inc
add
ja
add
adc
clc
jmp
sarl
int3
int3
int3
rcl
aas
in
mov
fiadds
xorb
js
jl
js
movsl
cmp
jg
fnsave
xchg
and
rol
dec
jnp
mov
add
sbb
loop
shll
pop
jle
lcall
jne
in
jmp
mov
and
xchg
jne
pop
lret
pop
ljmp
adc
pop
shr
jmp
sarl
sub
call
int3
adc
dec
aad
popa
fsub
enter
fildll
or
arpl
mov
icebp
inc
mov
push
mov
leave
dec
stos
cmpl
dec
pop
addr16
jecxz
dec
mov
sbb
out
fldcw
mov
mov
mov
andb
imul
fsub
adcl
push
xor
ficoms
test
in
sar
and
ss
scas
jbe
fstp
jmp
or
jle
subb
dec
out
xor
sub
jecxz
outsb
xchg
jno
sarb
push
negl
sbb
xchg
imul
xchg
adc
mov
cmpsb
ss
push
inc
xchg
xor
out
fs
cmpsl
es
shlw
mov
add
test
insl
push
sub
push
and
and
mov
cmpsl
xchg
fs
add
push
mov
adcl
xchg
jae
adc
pop
repz
xchg
mov
mov
mov
or
sbbb
addr16
sbb
cwtl
and
sbb
cmp
test
lea
xchg
cmp
jnp
mov
addr16
arpl
nop
dec
stos
xchg
shl
negl
inc
cld
stos
adc
adc
mov
jb
outsb
cmp
cwtl
dec
int
sub
sbb
rcrb
inc
inc
insb
roll
mov
cmp
test
adc
bound
push
shrb
mov
xlat
jl
or
xor
cmp
sub
mov
std
add
out
es
mov
jmp
xor
mov
xor
sbb
cmp
dec
cwtl
push
sub
push
jb
imul
test
and
cmp
bound
push
pushf
and
in
jb
lret
xchg
push
movsl
loopne
setbe
mov
lods
push
mov
lret
push
icebp
push
pop
pop
mov
loopne
adc
decb
xchg
push
fs
pop
pusha
popf
testl
int
loopne
dec
rcr
mov
and
ja
push
imul
sbb
adc
sub
cmp
xchg
sub
jg
out
popa
adc
mov
in
mov
inc
enter
insl
push
mov
clc
xchg
push
ficomps
xchg
xor
xchg
mov
inc
mov
mov
movsb
mov
stos
lret
cwtl
xchg
mov
pushl
sbb
xor
ljmp
mov
lret
stos
mov
std
daa
pop
xor
mov
testl
cmp
out
in
xor
or
push
ss
ljmp
ret
add
jae
jmp
inc
push
ret
and
xchg
xor
int3
sbb
sub
fisubrs
and
mov
jecxz
aas
or
inc
adc
out
and
cmp
scas
or
ret
fisttpl
sbb
jne
cmpsl
cmp
mov
pop
rorl
shrl
inc
nop
xchg
adc
mov
leave
xchg
js
sbb
scas
push
dec
out
mov
call
xchg
imul
inc
pop
pop
jno
xor
or
cmp
mov
mov
pop
data16
mov
movsl
cli
popf
dec
jecxz
andb
cld
movsl
pop
fwait
pop
shrl
stos
jae
out
into
les
cmp
push
push
ret
sbb
inc
mov
xor
pop
jge
out
sbb
push
adc
xor
mov
add
xlat
sbb
cld
xchg
rolb
mov
xchg
lret
jmp
lret
cmp
int
out
push
sbb
push
mov
pop
cmpsl
repz
daa
xor
daa
adc
dec
imul
sub
mov
sbb
or
xor
out
mov
dec
loope
mov
fmull
cmp
add
jmp
les
xlat
lret
rorl
xchg
ja
cltd
aad
jno
js
jl
js
call
cmp
fsts
mov
sub
divb
push
add
scas
jge
xchg
cs
sahf
cwtl
inc
xchg
aaa
fldl2e
adc
mov
mov
inc
adc
inc
scas
lahf
rcl
orl
addr16
es
addl
add
or
cmp
mov
into
and
xor
popa
jle
push
out
and
lahf
mov
dec
flds
mov
push
jl
xor
push
loop
nop
test
mov
or
lahf
in
adc
test
cmp
nop
mov
xor
data16
or
push
jmp
fistpl
adc
icebp
sahf
pop
pop
cmp
mov
and
adc
sti
decl
inc
int
pop
outsb
xor
inc
xchg
pop
imull
inc
addr16
test
lods
inc
lcall
mov
popa
int
fnstcw
jg
decb
leave
mov
xor
mov
adc
mov
jne
out
inc
and
rolb
xchg
dec
nop
addr16
fnstcw
fldl
popa
pop
push
outsl
cmp
jp
and
and
adc
fdiv
in
in
jg
lcall
mov
in
mov
mov
push
pop
or
mov
lods
pushf
cmpsl
jo
mov
dec
test
repnz
lods
mov
popf
jge
push
add
or
or
mov
pop
lret
aaa
aas
imul
sbb
ds
fisubrl
xor
pop
imul
mov
pushf
add
push
xlat
scas
mov
xor
cld
and
fadds
inc
test
es
push
lock
sbb
fmuls
adc
xchg
bound
imul
mov
ljmp
sbb
xor
or
push
gs
pop
cwtl
mov
inc
dec
test
movsb
mov
jne
outsb
ss
sti
push
cmp
mov
cmp
adc
lods
adc
cmpsb
push
aad
loope
push
fucomp
jg
in
out
rcrl
jle
fisubl
push
push
andl
out
push
mov
ds
cltd
mov
sub
sbb
inc
push
int3
mov
pop
out
sub
fwait
inc
hlt
jnp
push
sbbb
and
rcrb
sarb
mov
sub
ret
fs
cmp
orb
inc
daa
inc
cmp
cmpsb
out
into
sbb
add
sub
sub
adcl
and
pusha
adc
mov
jno
test
jns
sub
mov
or
push
invd
xor
jne
hlt
and
leave
and
inc
xor
cmpsb
imul
jmp
in
into
add
inc
cmp
mov
cld
lods
pop
fisttpll
js
lds
jl
ret
or
icebp
cmpsb
leave
pop
sbb
leave
imul
jns
les
inc
test
fistpl
pop
inc
xor
insl
add
sarl
mov
in
out
jmp
test
mov
sbb
or
adc
mov
aas
xchg
lret
add
adc
loop
rcrb
in
idivb
lods
and
push
shrb
lea
and
mov
insb
pop
xor
loopne
lahf
or
roll
fwait
push
js
rcll
sahf
stos
mov
jne
jl
jge
lods
mov
jl
call
pop
jbe
loope
cltd
or
lret
loop
daa
cmp
ljmp
sub
dec
and
loope
or
lea
mov
je
cmp
push
das
insl
loop
cmp
addr16
xor
orb
bound
add
adc
aas
adc
das
jg
xor
mov
rclb
add
add
ljmp
dec
outsl
mov
or
movsl
add
mov
pop
out
loope
push
rcrl
push
aaa
int3
int
jne
in
sub
dec
in
aam
cmpb
fidivrl
mov
sbb
lahf
mov
lds
sub
out
jmp
cmp
pop
cmp
andl
in
bound
cmc
adc
ret
xor
in
dec
jno
pop
popl
pusha
out
dec
bound
cmp
movlps
lods
cmpsl
into
add
rorl
scas
xlat
mov
mov
sub
cmp
ja
jmp
ror
sarl
vpsubusw
loopne
lret
jg
jae
js
aas
pop
in
xchg
mov
cmpsb
dec
test
xchg
mov
iret
cmpsl
adc
in
or
cmpb
push
mov
lcall
cmpl
xor
xor
js
ret
xchg
test
jne
ss
sahf
insl
movsl
mov
sub
rcrl
jl
or
icebp
and
in
add
pop
mov
hlt
es
push
and
mov
nop
ja
test
and
cltd
fisttpll
dec
gs
movsl
mov
cs
sbb
xchg
add
push
enter
pusha
aas
jp
sbb
cmp
nop
das
in
xor
loope
dec
les
shll
sbbl
les
aad
nop
jl
je
fldl
inc
mov
mov
cs
push
or
cs
jmp
in
cltd
xchg
or
cmp
rolb
push
adc
aas
add
cld
push
cmp
xor
cmc
jae
cld
ss
fs
mov
adc
rorl
jmp
sbb
jmp
stos
mov
test
mov
ja
faddl
adc
or
jmp
add
mov
cmp
sub
pop
into
pusha
pusha
add
je
push
cmp
cmc
and
shll
xor
and
lods
add
sbb
mov
jecxz
cld
lret
jo
xchg
jae
mov
pushl
dec
into
dec
push
sahf
arpl
and
inc
lret
fisttpl
pop
arpl
lcall
sbb
push
enter
adc
push
mov
movsl
mov
jb
mov
pusha
adc
mov
sub
pop
mov
test
shlb
xlat
mov
xor
aaa
mov
mov
outsl
mov
fldenv
lahf
jg
rorb
and
repz
scas
test
data16
out
add
fwait
lcall
in
movsb
cmpsb
cmc
cltd
fstps
jl
inc
dec
outsb
lahf
clc
mov
mov
movsb
pop
cmp
ret
pop
hlt
dec
pop
sub
inc
stos
lods
mov
in
mov
cld
jo
push
add
jge
outsb
adc
jno
mov
sub
pop
inc
fstl
pop
jg
mov
cmc
mov
adc
dec
add
fidivl
push
lcall
scas
std
push
js
fstl
inc
pop
dec
fistl
adc
fsubp
adcl
jb
fnstsw
and
movsl
std
sarl
fnstenv
dec
call
mov
call
add
subl
fadd
xor
sahf
repnz
popa
inc
aas
jno
mov
mov
in
inc
aas
jecxz
jg
jae
pop
push
or
and
dec
inc
std
inc
xlat
jmp
imul
gs
xchg
stos
or
and
pusha
pop
jmp
xor
dec
icebp
shlb
inc
repnz
xchg
inc
cld
cmp
push
je
pop
xor
xchg
adc
or
and
std
jo
popf
cltd
in
test
add
bound
pop
sbb
xchg
jp
jno
jns
clc
fstp
push
in
mov
pop
out
fwait
and
imul
pop
mov
adc
cmp
sbb
pop
icebp
nop
out
pop
cmp
adc
lret
xchg
jmp
jg
imul
and
mov
pop
sub
scas
xor
push
test
push
lods
or
sti
jp
inc
sub
mov
shrl
rolb
fldenv
int3
dec
loop
pop
jle
fs
sahf
xor
inc
lea
sarb
testb
ret
sbb
adc
mov
mov
int
inc
lcall
sbb
inc
mov
loope,pt
mov
aas
cld
jle
add
out
fsts
push
fiadds
fisubs
xchg
mov
leave
cltd
cmc
xchg
sub
push
inc
insl
or
arpl
lcall
lds
inc
jbe
mov
subl
dec
cmp
push
add
movsb
bound
rolb
aaa
jl
aad
xor
cmpsl
fcmovbe
lods
add
pop
inc
push
sub
mov
popa
xrelease
add
lret
sbb
pop
loop
aas
movsb
xchg
dec
sbb
and
das
add
mov
and
jmp
xchg
dec
xchg
sbb
mov
cmp
push
xchg
pushf
or
lret
mov
sbb
jo
xor
adc
adc
add
add
cld
xor
xor
add
add
jmp
vmovq
fcmovu
fdiv
mov
mov
jle
in
js
js
cltd
pcmpeqw
cmc
std
dec
icebp
in
cli
ret
fisubl
jae
jns
out
clc
xlat
jb
out
sub
jecxz
idiv
xchg
jae
call
pop
aas
stos
dec
pop
loope
sub
jb
lret
pop
mov
add
sub
jecxz
sbbl
std
xor
or
jle
ljmp
sbb
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
mov
xor
adcl
add
mov
mov
movl
movl
mov
push
movl
movl
mov
movl
cmp
movl
je
dec
mov
adcl
xor
addl
xor
subl
lea
subl
xor
movl
cmp
jne
movl
jmp
mov
mov
xor
add
mov
and
mov
mov
adcl
xor
add
sbbl
mov
mov
or
mov
orl
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
sbb
push
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
push
pushl
push
pushl
push
pushl
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
sub
lea
push
pushl
not
push
lea
inc
inc
andl
xor
xor
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
push
pop
subl
xor
adcl
call
cmpl
jne
xor
movl
inc
jmp
sub
movl
adc
movl
lea
xor
mov
lea
mov
subl
mov
mov
sub
mov
mov
xor
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
xor
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
add
mov
mov
cmp
movzbl
mov
mov
je
sbb
mov
xor
xorl
add
orl
imul
mov
movl
jmp
xor
or
add
add
mov
mov
incl
xor
add
inc
mov
mov
subl
mov
xor
add
cmp
jne
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
mov
mov
xor
lea
mov
mov
mov
movl
mov
movl
mov
mov
xor
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
mov
cmp
ja
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movzwl
mov
mov
mov
mov
movl
movl
cmp
jne
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
adcl
movl
mov
and
movl
mov
mov
sub
mov
movzbl
add
mov
sub
lea
and
mov
xorl
mov
adc
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
call
cmpl
jb
adc
lea
xor
xor
mov
sub
and
mov
dec
mov
xor
push
adc
push
sbb
mov
and
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
or
sub
or
mov
mov
sbbl
xor
sub
mov
xor
andl
xor
add
adcl
add
orl
div
mov
movl
cmp
je
movl
lea
mov
mov
mov
imul
mov
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
movzwl
add
mov
inc
mov
mov
sbb
mov
mov
mov
mov
push
push
and
mov
mov
mov
adc
xor
adc
push
mov
add
add
decl
mov
sub
lea
adc
mov
mov
mov
xor
xor
add
mov
adc
movl
xor
xor
mov
sub
or
lea
mov
sbb
mov
mov
movzbl
xor
mov
xor
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jb
movzbl
or
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
sbbl
mov
not
mov
sbbl
mov
andl
mov
mov
subl
mov
movzwl
xorl
add
mov
mov
mov
andl
xor
addl
add
cmp
movl
jne
mov
adc
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
mov
or
xor
xor
add
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
and
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
movl
mov
sub
push
xor
or
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
or
mov
adcl
add
movl
mov
and
mov
push
push
sbbl
test
je
adcl
mov
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
imul
mov
subl
add
sub
mov
xorl
mov
xchg
sub
sub
xor
add
mov
mov
mov
xorl
mov
mov
subl
xor
xor
addl
add
mov
mov
mov
je
mov
xor
add
cmp
movl
jne
pushl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
cmp
je
pushl
pushl
addl
call
movzwl
sbb
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
xor
add
dec
mov
jmp
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
mov
notl
movl
push
movl
mov
mov
movl
push
mov
movzwl
mov
cmp
je
mov
or
mov
mov
add
mov
andl
xor
adcl
add
cmp
movl
je
neg
mov
xor
xor
or
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
push
neg
pushl
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
mov
push
push
sbbl
mov
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
and
mov
add
push
andl
mov
mov
orl
xor
andl
movl
movl
xorl
add
movl
jmp
cmp
jne
mov
mov
movl
mov
movl
mov
notl
mov
mov
movl
mov
movl
jmp
movl
cmp
jne
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
mov
sub
orl
push
xor
or
add
mov
mov
movl
add
andl
push
orl
call
incl
movl
cmpl
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
xor
push
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
mov
add
push
adc
mov
sbb
mov
xor
xor
mov
adc
mov
add
add
orl
imul
mov
mov
cmp
movl
jne
not
mov
xor
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
mov
movzbl
or
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
movl
sub
andl
xor
add
inc
mov
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
pushl
pop
inc
mov
jmp
mov
push
mov
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
mov
mov
orl
xor
xor
mov
add
movzwl
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
mov
sbb
movb
xor
xor
sub
lea
dec
mov
adc
mov
mov
xor
sbbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
push
call
mov
dec
mov
jmp
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
movl
adc
mov
mov
orl
push
sbbl
xor
mov
add
movl
jmp
mov
movl
mov
movl
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
mov
mov
add
xor
movl
cmp
jne
add
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbb
add
mov
add
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
pop
pop
add
jo
add
test
add
pop
add
rcrb
add
add
ljmp
add
add
adc
add
pop
add
sub
add
ds
add
dec
pop
add
pusha
pop
add
insb
pop
add
js
add
mov
add
pop
add
mov
pop
add
pop
add
loop
add
lock
add
pop
add
or
add
pop
add
sub
add
add
inc
pop
add
push
pop
add
pusha
pop
add
jb
add
test
add
pop
add
mov
add
pop
add
rcrb
add
pop
add
out
pop
add
cld
pop
add
push
pop
add
push
pop
add
cs
add
inc
pop
add
dec
pop
add
pop
add
jbe
add
mov
mov
pop
add
ret
add
pop
add
ljmp
add
pop
add
sbb
add
sub
add
pop
add
dec
pop
add
fs
add
jbe
add
test
add
add
rcrb
into
pop
add
ficompl
add
pop
add
cli
pop
add
push
pop
add
push
pop
add
cs
add
cmp
add
add
fs
add
jp
add
mov
add
pop
add
ret
add
pop
add
ljmp
add
pop
add
sbb
add
pop
add
cmp
add
add
pusha
pop
add
jb
add
mov
add
add
mov
add
rcrb
rcrb
add
pop
add
negb
add
pusha
add
adc
add
and
add
xor
add
push
pusha
add
fs
add
jb
add
mov
add
pusha
add
mov
pusha
add
add
add
in
pusha
add
cli
pusha
add
or
add
and
add
popa
add
inc
popa
add
pop
popa
add
jo
add
andb
nop
popa
add
mov
popa
add
les
add
popa
add
cli
popa
add
add
add
sbb
add
bound
add
add
push
bound
add
add
je
add
mov
add
add
mov
add
ret
add
bound
add
bound
add
bound
add
arpl
add
arpl
add
arpl
add
arpl
add
add
add
add
nop
arpl
add
add
enter
fsubs
add
arpl
add
arpl
add
add
sbb
add
sub
dec
add
pop
add
fs
add
add
mov
xchg
add
mov
add
mov
add
add
aam
add
fisubs
call
add
add
add
add
sbb
add
es
xor
add
cmp
add
inc
add
push
add
pop
add
fs
jb
add
jl
add
xchg
add
add
mov
add
mov
add
enter
shlb
add
add
out
add
out
add
mulb
add
data16
or
add
add
and
add
add
data16
data16
dec
data16
pop
data16
bound
add
add
add
add
mov
add
data16
shlb
shlb
add
data16
cli
data16
or
add
add
add
xor
add
add
push
add
pop
add
data16
js
add
test
add
add
mov
add
lret
add
add
ljmp
add
push
add
sbb
add
add
ss
add
pop
push
add
jp
add
mov
add
push
add
les
add
push
add
push
add
sbb
add
add
add
add
add
add
jb
add
jb
add
add
add
pop
push
imul
arpl
ja
jp
gs
dec
je
ja
popa
push
jno
jae
dec
dec
jae
dec
push
push
push
push
fs
insl
push
inc
dec
push
insl
inc
push
dec
data16
jne
imul
jno
arpl
dec
dec
push
imul
push
imul
and
add
add
mov
add
add
add
add
add
add
push
add
mov
dec
add
mov
add
add
push
xor
jns
bound
popa
push
je,pn
jo
aas
inc
jo
dec
popa
insl
gs
js
inc
inc
pop
inc
push
inc
inc
push
inc
dec
push
inc
inc
push
inc
dec
dec
cmp
add
add
add
fcompl
add
push
add
je
add
loopne
add
sbb
add
and
add
jp
add
int3
push
add
lock
add
outsb
data16
cwtl
push
add
movsb
pop
add
sub
add
add
add
jo
add
test
add
pop
add
rcrb
add
add
ljmp
add
add
adc
add
pop
add
sub
add
ds
add
dec
pop
add
pusha
pop
add
insb
pop
add
js
add
mov
add
pop
add
mov
pop
add
pop
add
loop
add
lock
add
pop
add
or
add
pop
add
sub
add
add
inc
pop
add
push
pop
add
pusha
pop
add
jb
add
test
add
pop
add
mov
add
pop
add
rcrb
add
pop
add
out
pop
add
cld
pop
add
push
pop
add
push
pop
add
cs
add
inc
pop
add
dec
pop
add
pop
add
jbe
add
mov
mov
pop
add
ret
add
pop
add
ljmp
add
pop
add
sbb
add
sub
add
pop
add
dec
pop
add
fs
add
jbe
add
test
add
add
rcrb
into
pop
add
ficompl
add
pop
add
cli
pop
add
push
pop
add
push
pop
add
cs
add
cmp
add
add
fs
add
jp
add
mov
add
pop
add
ret
add
pop
add
ljmp
add
pop
add
sbb
add
pop
add
cmp
add
add
pusha
pop
add
jb
add
mov
add
add
mov
add
rcrb
rcrb
add
pop
add
negb
add
pusha
add
adc
add
and
add
xor
add
push
pusha
add
fs
add
jb
add
mov
add
pusha
add
mov
pusha
add
add
add
in
pusha
add
cli
pusha
add
or
add
and
add
popa
add
inc
popa
add
pop
popa
add
jo
add
andb
nop
popa
add
mov
popa
add
les
add
popa
add
cli
popa
add
add
add
sbb
add
bound
add
add
push
bound
add
add
je
add
mov
add
add
mov
add
ret
add
bound
add
bound
add
bound
add
arpl
add
arpl
add
arpl
add
arpl
add
add
add
add
nop
arpl
add
add
enter
fsubs
add
arpl
add
arpl
add
add
sbb
add
sub
dec
add
pop
add
fs
add
add
mov
xchg
add
mov
add
mov
add
add
aam
add
fisubs
call
add
add
add
add
sbb
add
es
xor
add
cmp
add
inc
add
push
add
pop
add
fs
jb
add
jl
add
xchg
add
add
mov
add
mov
add
enter
shlb
add
add
out
add
out
add
mulb
add
data16
or
add
add
and
add
add
data16
data16
dec
data16
pop
data16
bound
add
add
add
add
mov
add
data16
shlb
shlb
add
data16
cli
data16
or
add
add
add
xor
add
add
push
add
pop
add
data16
js
add
test
add
add
mov
add
lret
add
add
ljmp
add
push
add
sbb
add
add
ss
add
pop
push
add
jp
add
mov
add
push
add
les
add
push
add
push
add
sbb
add
add
add
dec
outsb
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
insl
popa
addr16
imul
outsl
jbe
add
push
add
gs
je
push
outsl
outsl
insb
bound
inc
js
add
popa
addr16
imul
dec
arpl
add
popa
je
push
je
je
jae
imul
pop
add
je
outsl
jns
jb
jo
jb
jns
push
popa
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
push
imul
push
arpl
push
add
push
add
je
popa
jb
outsb
je
sgdtl
je
insb
addr16
je
insl
add
scas
add
fs
arpl
inc
add
push
push
jb
outsl
jb
add
imul
popa
jae
push
add
xchg
add
je
outsl
jns
popa
jb
je
add
add
outsb
imul
push
arpl
add
push
imul
movsb
add
pop
outsl
outsl
insl
gs
aaa
add
popa
jb
jo
gs
jne
inc
add
inc
add
je
outsl
arpl
add
cwtl
add
inc
imul
jae
popa
addr16
add
loop
inc
imul
outsl
ja
js
add
add
jbe
push
imul
mov
push
imul
ja
add
ja
arpl
add
xchg
add
je
outsl
jns
outsb
jne
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
jne
insb
push
arpl
add
je
insb
addr16
je
insl
dec
outsb
je
roll
jbe
jo
imul
inc
add
je
popa
jb
outsb
je
sti
add
dec
outsb
push
arpl
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
hlt
add
je
insb
popa
jae
dec
outsb
outsw
inc
add
add
imul
je
gs
add
inc
gs
arpl
insb
insb
push
popa
outsb
add
test
dec
outsl
popa
fs
arpl
insb
gs
je
jb
push
add
gs
arpl
insb
insb
dec
outsb
outsw
add
add
popa
jb
gs
inc
add
add
je
insb
addr16
je
insl
push
gs
inc
add
outsl
outsb
imul
push
jb
je
cmp
inc
insb
addr16
je
insl
dec
outsb
je
addl
outsb
jae
jb
dec
outsb
jne
add
inc
jb
popa
je
push
imul
push
add
add
jae
popa
addr16
outsl
js
js
add
add
outsb
fs
gs
popa
addr16
add
jl
push
push
outsb
gs
outsl
jo
jo
add
inc
outsl
jo
push
arpl
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
pop
add
je
jns
je
insl
dec
outsb
jne
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
imul
push
add
arpl
outsl
jo
jo
outsb
jne
add
add
imul
outsl
ja
outsl
push
outsl
jo
add
push
imul
popa
jae
inc
js
add
outsb
add
je
imul
outsb
addr16
add
xchg
inc
gs
insb
addr16
jb
arpl
cmp
inc
push
insb
addr16
jne
je
outsb
add
stos
add
fs
imul
add
jo
imul
arpl
add
fs
arpl
insb
gs
je
jb
inc
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
gs
imul
js
push
add
xor
push
gs
popa
jb
je
outsl
jae
icebp
add
jae
dec
gs
popa
addr16
add
mov
fs
je
imul
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
mov
inc
jb
ja
arpl
inc
js
add
push
gs
push
add
imul
imul
add
jae
jb
outsb
je
push
add
push
add
je
jb
jo
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
gs
jo
popa
je
push
arpl
add
fs
popa
jb
je
out
add
imul
jae
addr16
add
pop
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
add
fs
outsl
je
data16
gs
popa
addr16
add
mov
inc
gs
insb
addr16
jb
arpl
add
push
imul
popa
jae
inc
add
xchg
dec
outsb
je
jb
popa
insb
inc
gs
imul
js
add
add
imul
jae
addr16
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
and
dec
gs
outsl
popa
jb
dec
popa
jns
jne
dec
popa
insl
gs
add
jb
inc
gs
imul
arpl
add
outsb
jae
popa
je
dec
gs
popa
add
push
push
imul
add
je
outsl
jns
jne
jae
jb
bound
inc
gs
outsl
jo
imul
xor
inc
gs
outsb
jne
je
insl
dec
inc
add
inc
outsl
jb
addr16
jne
fs
imul
add
je
outsb
jne
je
imul
add
gs
je
inc
imul
jb
insl
inc
add
call
outsb
dec
arpl
add
jecxz
inc
imul
outsl
ja
js
add
add
jae
popa
addr16
outsl
js
add
insb
imul
jb
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
inc
gs
gs
inc
insb
addr16
popa
bound
gs
add
ja
outsl
arpl
push
arpl
add
jbe
insb
imul
je
add
insb
push
imul
inc
gs
outsb
jne
je
je
add
cmp
push
gs
jne
jae
jb
outsl
jae
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
ja
outsb
imul
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
add
insl
push
outsl
inc
push
add
add
jne
inc
push
imul
add
add
je
jne
jae
jb
outsl
jae
add
add
insl
outsl
jbe
dec
outsb
jne
add
add
outsb
imul
push
outsl
imul
inc
push
xor
cs
insb
add
mov
gs
jbe
outsb
je
add
add
gs
je
dec
popa
imul
sbb
inc
gs
jne
bound
inc
outsl
jb
popa
je
add
pusha
add
outsb
fs
imul
gs
add
jecxz
inc
jb
popa
je
push
imul
inc
gs
imul
imul
jns
add
fiaddl
dec
jae
popa
insb
imul
addr16
jb
jne
add
outsl
add
outsb
fs
gs
jne
arpl
add
add
inc
popa
fs
outsl
fs
je
add
mov
inc
jb
inc
imul
dec
push
dec
add
push
gs
imul
jne
push
imul
add
je
push
dec
outsb
outsw
add
add
gs
popa
insl
gs
imul
insb
gs
je
je
add
je
outsl
jb
jne
je
jo
gs
bound
arpl
js
add
push
insb
gs
js
mov
push
gs
outsl
jbe
inc
imul
jns
add
dec
add
je
jns
je
insl
inc
imul
jns
add
inc
imul
je
imul
push
gs
push
inc
outsl
outsb
je
js
add
out
add
je
imul
mov
inc
outsl
insl
jo
jb
inc
imul
ja
inc
insb
jne
push
inc
jne
data16
add
int3
add
jae
jb
jo
outsb
push
add
jo
outsb
insb
outsl
arpl
add
gs
jae
dec
jne
gs
add
add
fs
imul
add
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
add
inc
gs
gs
inc
imul
jb
popa
je
dec
jne
gs
add
add
je
push
dec
outsl
arpl
add
inc
gs
imul
popa
je
add
into
add
jae
jb
outsb
inc
add
adc
dec
outsl
arpl
push
imul
imul
jne
arpl
js
add
imul
je
push
dec
outsl
je
imul
outsl
outsb
push
add
xchg
add
je
outsl
insl
insl
dec
outsl
fs
push
je
je
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
js
add
cmp
dec
jo
outsb
inc
imul
outsb
addr16
add
sbb
gs
imul
gs
add
inc
gs
imul
popa
je
add
xchg
add
je
outsl
insl
insl
inc
outsl
outsb
imul
dec
jae
popa
fs
jb
je
push
je
add
imul
jne
arpl
add
add
je
outsl
insl
insl
push
je
je
add
imul
push
push
jb
outsl
jb
je
add
add
gs
inc
imul
gs
outsb
push
gs
js
gs
imul
gs
mov
inc
gs
je
insl
dec
popa
insl
gs
add
rolb
je
arpl
push
add
jae
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
jae
popa
arpl
add
jae
add
jb
outsb
je
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
xor
arpl
je
add
cli
add
jb
outsl
imul
out
jae
jb
outsl
insb
insb
add
pop
pop
arpl
insl
outsl
fs
fildl
pop
popa
insl
jae
pop
gs
je
add
imul
add
jb
je
add
sahf
add
jae
bound
gs
add
jge
data16
add
lds
jo
imul
add
insb
outsl
ja
jb
stos
add
ja
imul
data16
je
add
pop
pop
arpl
inc
imul
jae
jb
outsb
je
add
add
outsl
insb
outsl
ja
jb
and
pop
gs
je
add
jns
je
insl
add
call
js
je
add
je
insb
add
iret
add
outsb
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
and
arpl
jae
outsb
add
add
jb
outsl
jne
add
ja
jae
bound
add
arpl
imul
add
gs
insb
add
outsb
jne
add
add
jb
push
add
jb
outsl
insb
add
movsb
add
ja
imul
add
jb
jb
outsl
jb
add
outsl
ja
add
push
add
imul
pop
pop
addr16
popa
imul
and
arpl
jo
add
xchg
add
popa
insb
jo
popa
add
add
jae
jb
outsb
je
add
dec
push
push
inc
push
push
cs
insb
add
xchg
inc
jb
popa
je
inc
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
inc
gs
imul
add
arpl
push
imul
inc
gs
jne
jb
outsb
je
bound
arpl
test
inc
gs
gs
inc
js
outsb
je
outsl
imul
inc
jb
popa
je
push
arpl
outsb
add
insb
je
add
push
gs
dec
gs
imul
inc
push
je
dec
push
add
popf
add
gs
je
inc
outsl
outsb
je
outsb
imul
aad
push
gs
imul
add
inc
outsl
arpl
add
add
insb
insb
push
outsb
add
add
je
imul
addr16
js
add
add
jae
outsl
jb
inc
inc
add
popa
je
dec
popa
je
push
push
push
gs
bound
je
jb
arpl
add
inc
gs
popa
jo
outsl
fs
testb
gs
je
gs
push
outsl
fs
inc
gs
outsb
inc
outsl
js
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
movl
inc
inc
add
sahf
add
gs
je
inc
outsl
outsb
je
add
push
popa
addr16
add
je
dec
inc
imul
fs
outsl
outsb
je
gs
jne
arpl
add
xchg
add
outsl
inc
push
add
mov
inc
jb
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jns
jne
add
inc
gs
gs
inc
insb
imul
inc
gs
gs
dec
gs
imul
push
arpl
jae
bound
cli
add
je
gs
inc
outsl
insb
outsl
jb
add
inc
gs
dec
inc
imul
popa
jb
push
popa
add
jb
popa
je
inc
dec
inc
push
arpl
outsb
add
rolb
outsb
fs
popa
je
add
popa
je
inc
imul
imul
test
inc
gs
gs
inc
js
outsb
je
outsl
imul
mov
je
outsb
insb
add
push
imul
inc
gs
bound
arpl
add
dec
xor
cs
insb
add
pop
jp
jp
push
add
add
insl
inc
add
or
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
jae
and
dec
push
push
pop
push
cmp
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
insl
dec
and
dec
push
bound
arpl
dec
bound
dec
jae
cmp
dec
xor
dec
push
jb
jae
orl
nop
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
sbbb
setae
jl
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
popa
dec
xor
dec
xor
dec
ds
xor
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
xor
dec
xor
dec
ds
inc
dec
cmp
dec
cmp
add
add
adc
jl
jge
aas
dec
add
dec
imul
inc
imul
insl
inc
add
inc
add
insb
inc
add
imul
imul
insb
inc
add
test
pushf
clc
inc
imul
insb
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
imul
insl
inc
add
test
dec
imul
sbb
orl
call
inc
add
addr16
mov
jne
mov
incb
mov
imul
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
and
pushf
clc
sub
add
imul
push
dec
insb
popa
cmp
push
pop
lds
add
cmp
add
add
add
jge
add
add
add
add
push
add
insb
add
inc
add
dec
add
add
inc
add
dec
add
add
add
inc
add
push
add
add
insb
add
imul
add
add
imul
cli
jne
push
cmp
pop
dec
pop
dec
inc
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
pop
dec
add
dec
xor
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
inc
dec
dec
dec
push
dec
inc
dec
pop
dec
xor
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
xlat
lds
ret
fidivs
into
mulb
push
sbb
jno
add
add
xchg
imul
pop
mov
int3
push
inc
add
dec
jae
imul
imul
in
adc
addr16
push
pop
jb
inc
inc
dec
imul
dec
inc
dec
imul
add
push
dec
inc
outsb
jno
inc
dec
jno
imul
je
jo
dec
insb
popa
inc
inc
ja
inc
add
push
push
dec
popa
pop
addr16
popa
outsb
pop
insb
inc
add
dec
push
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cwtl
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
call
add
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
in
xor
add
movl
test
ljmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
js
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cwtl
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
push
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
cmp
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cwtl
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
pushf
rol
movsb
incb
inc
mov
test
clc
pushf
inc
decl
push
cld
jge
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
fmuls
test
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cwtl
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cwtl
lret
xor
mov
lea
xor
add
inc
dec
mov
push
mov
or
dec
inc
xor
push
mov
add
inc
decl
add
inc
mov
cwtl
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
rolb
mov
xor
orb
dec
leave
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
cmp
shrb
clc
add
cmp
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
sar
shl
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
sbb
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
cmp
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
cmp
pushf
xor
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cwtl
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cwtl
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
faddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
in
add
push
and
incl
fmull
inc
nop
ljmp
lea
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
js
inc
inc
int
inc
sub
add
int3
mov
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
icebp
or
out
mov
pop
push
cmp
sar
incl
inc
ljmp
push
mov
and
inc
push
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
cmp
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
in
incl
loopne
inc
jmp
addl
mov
inc
call
outsb
inc
js
divb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
dec
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
in
xchg
aam
call
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cbtw
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
jmp
lea
faddl
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cwtl
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jnp
add
mov
mov
data16
inc
lea
test
inc
dec
test
cmp
mov
pushl
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
cmp
pushf
inc
mov
hlt
test
cmp
pushf
or
pop
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
cmpl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cwtl
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
cmp
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cwtl
pushf
xor
jne
mov
icebp
icebp
shl
mov
cmp
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
clc
add
dec
hlt
xor
mov
in
jge
mov
dec
cmp
xchg
mov
add
cmp
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
cmp
fdivl
test
push
add
cmp
sets
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
cld
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
or
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
ljmp
xchg
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
out
add
add
and
fs
incl
js
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ss
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cwtl
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
orps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
cld
js
popa
data16
into
push
data16
pop
xor
add
cld
cld
add
ss
add
into
ret
pop
add
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
cld
mov
push
push
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
cld
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
xor
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
xor
add
data16
dec
fisttps
add
ret
lea
add
cmp
pushf
add
add
inc
test
xor
push
cwtl
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cwtl
cwtl
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cwtl
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
cmp
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
cmp
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
aas
add
push
add
mov
cld
inc
add
rcrl
mov
mov
or
xor
enterw
jmp
ret
inc
mov
add
rorl
icebp
or
inc
inc
mov
or
jne
mov
rolb
add
cld
ret
dec
mov
mov
jmp
mov
mov
sub
mov
in
test
add
add
cmovge
add
cld
mov
adc
mov
xor
cmp
jne
mov
adc
push
test
clc
xor
xor
dec
adc
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
cmp
pushf
push
movl
dec
inc
andb
pushf
push
xchg
fsubr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
cmp
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
cmp
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
add
xor
add
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
and
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
movsb
sar
enter
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fcomps
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
fdivr
testb
dec
clc
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
sarl
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cwtl
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
fiadds
xor
jb
add
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
cwtl
mov
jge
decl
push
adc
push
adc
push
cmp
adc
cli
push
adc
sub
add
adc
mov
adc
xor
add
jg
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
sbb
add
dec
adc
cmp
add
adc
roll
add
push
adc
add
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
dec
adc
dec
and
add
adc
sub
jbe
adc
add
adc
jo
adc
push
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
adc
xor
adc
cmp
arpl
add
pop
adc
xchg
mov
inc
add
mov
inc
add
mov
inc
add
push
adc
cwtl
xor
add
xor
add
push
adc
add
adc
lret
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
dec
cmp
cmp
push
add
inc
cmp
inc
xor
add
push
xor
dec
push
push
xor
push
inc
xor
pop
xor
add
dec
pop
push
xor
pop
xor
push
dec
aaa
cmp
dec
push
pop
cmp
dec
add
xor
pop
inc
xor
aaa
cmp
dec
add
inc
pop
pop
inc
xor
inc
add
xor
xor
dec
inc
aaa
aaa
add
aaa
pop
push
pop
xor
pop
inc
dec
dec
inc
add
dec
aaa
pop
inc
dec
inc
pop
xor
pop
inc
xor
dec
xor
pop
xor
cmp
dec
dec
cmp
xor
cmp
pop
xor
push
pop
xor
cmp
cmp
push
inc
pop
push
dec
ss
dec
inc
add
xor
push
inc
inc
pop
push
add
pop
xor
pop
push
add
xor
pop
push
dec
pop
pop
inc
dec
inc
add
aaa
pop
push
push
dec
aaa
pop
xor
push
xor
xor
inc
inc
push
dec
pop
push
dec
inc
add
push
pop
dec
dec
aaa
pop
dec
add
pop
pop
dec
inc
pop
push
add
ss
aaa
inc
xor
xor
pop
dec
push
xor
add
pop
pop
push
inc
dec
aaa
inc
pop
push
push
add
dec
add
add
xor
push
add
add
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
add
add
dec
add
add
push
add
add
pop
add
add
add
add
xor
add
dec
add
dec
add
add
dec
add
add
add
add
push
add
add
inc
add
inc
add
add
xor
add
add
add
add
add
pop
add
add
xor
add
push
add
add
add
add
cmp
pop
add
add
xor
push
add
add
add
push
add
xor
pop
add
add
add
dec
add
push
add
add
add
push
add
add
xor
dec
add
inc
add
dec
add
xor
inc
add
add
add
xor
dec
add
aaa
add
inc
add
dec
add
xor
inc
add
add
dec
add
inc
add
inc
add
push
add
add
add
inc
push
filds
hlt
fwait
das
test
inc
xchg
mov
stos
lods
sbb
cmp
jp
outsl
inc
outsb
gs
gs
arpl
outsb
jne
dec
push
imul
dec
jo
pop
gs
js
inc
outsl
arpl
pushw
dec
push
arpl
bound
jbe
outsb
jo,pn
bound
