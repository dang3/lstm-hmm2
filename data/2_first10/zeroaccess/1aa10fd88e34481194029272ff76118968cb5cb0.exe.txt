push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
or
mov
mov
jmp
rcl
fmul
rcr
add
cmp
mov
jle
add
fld
fcom
enter
leave
cld
icebp
fmulp
iret
sti
sar
rcl
mov
nop
fsub
nop
cld
jmp
leave
ss
xor
neg
aad
int
fnsetpm(287
lock
in
cli
sti
jmp
xchg
in
cli
fxch
out
leave
icebp
idiv
iret
ds
lock
repz
enter
out
fildl
ret
sub
shl
xlat
fdiv
stc
aas
adc
call
fmuls
repz
mul
ret
into
jmp
loopne
iret
lock
in
repnz
into
sub
sti
ljmp
int
into
out
rorb
fimull
div
aam
hlt
cmc
aad
ss
int3
rcl
rol
idivb
icebp
les
out
sti
xchg
jmp
lret
enter
loope
int
fdecstp
mov
std
mov
call
nop
into
out
lock
stc
jmp
fiadds
fcom
aam
enter
lret
cli
xchg
xchg
iret
loopne
aad
shll
clc
rcr
not
sub
adc
mov
clc
not
stc
les
test
in
sub
repz
iret
div
rcl
xlat
out
rcl
jecxz
loopne
xlat
in
loopne
test
repz
icebp
in
test
cmp
loope
ffreep
ds
lret
fucomp
addl
out
loopne
lret
lret
sar
lock
repz
xchg
sti
mov
call
aad
aam
jecxz
les
aad
lret
xor
aad
jmp
mov
xchg
shl
xchg
loopne
aaa
int
fcomp
int
sar
fsubr
xor
fcmovu
in
jmp
mov
test
xchg
fucomi
repz
cmp
repz
cmp
aam
cli
sbb
lret
xchg
fadd
rcr
into
out
mov
out
xor
rcl
lret
cli
cmc
loope
fnstcw
xchg
int
incl
fsubr
fnstenv
iret
cmc
rcr
out
rcr
ret
loopne
nop
xchg
iret
jecxz
in
rol
cmp
shl
sar
out
fdiv
cmp
sub
shl
nop
loope
xlat
aad
ret
xor
sarl
loopne
sub
sbb
test
icebp
shll
out
sarb
clc
cmp
ss
rol
test
xchg
fdivp
enter
jmp
aaa
ss
ss
in
call
xchg
std
sbb
mov
ret
out
xor
xor
xor
ljmp
xchg
and
enter
repnz
out
xchg
inc
fld
loop
jmp
cmp
xlat
lret
addb
jmp
ret
loop
hlt
aad
ret
aaa
call
hlt
in
test
lds
dec
int
fstp
xchg
in
cmp
xor
sarb
cmp
test
les
ret
lret
in
into
into
jmp
icebp
call
vpsadbw
div
fcmovbe
into
sti
sar
faddl
lret
ljmp
xor
bnd
clc
xchg
idiv
std
clc
loope
cli
loop
lock
xchg
fisttpll
xor
leave
xlat
cmc
in
adc
jmp
fcmovnbe
shl
aam
mov
cld
sti
nop
nop
fiaddl
xor
cmp
jmp
lret
test
repnz
fsub
stc
mov
int3
leave
iret
shl
xchg
jecxz
cmc
xor
ss
sarb
aaa
shl
out
or
mov
aad
in
lret
fcmovbe
shl
not
call
enter
fpatan
cmc
in
rcr
xlat
mov
jmp
mov
icebp
int
cmc
mov
repz
cmp
out
sti
ror
repz
repz
xlat
addl
in
fcmovnu
adc
jmp
ss
lret
iret
stc
in
les
call
ficoml
cmc
jmp
leave
fdivr
clc
hlt
jmp
repz
inc
cmc
rolb
mov
std
faddl
ljmp
in
icebp
iret
cmp
jecxz
loope
fsub
rol
aad
ret
in
int
in
lock
cmp
leave
shr
jmp
cmp
ret
mov
fmul
leave
in
test
icebp
mov
filds
xlat
xor
cmp
mov
sbb
mov
mov
orl
push
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
push
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
adc
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
jmp
xlat
iret
into
fst
xor
mov
dec
xchg
movsl
add
movsl
add
in
out
ds
roll
test
lret
add
in
fdivrp
loope
loop
shll
stc
ror
in
cmp
iret
sarl
aad
cmp
aam
loope
xchg
loop
jmp
ror
cmp
leave
repz
shl
testl
ljmp
int3
nop
shl
xlat
cli
iret
into
ffree
int3
fsubrp
cmp
ret
aam
les
cld
int3
ljmp
loop
lret
ror
shr
call
cmc
cld
xchg
test
mov
fstp
cld
mov
icebp
cmc
call
cmp
out
cmp
add
fiaddl
testl
repz
std
fucomp
fcmovnu
xor
loop
int
ds
jecxz
popl
fldl
div
ss
iret
ffree
cmp
clc
shr
jecxz
mov
cld
into
rol
xor
shr
xor
ljmp
mov
mov
in
int3
out
jmp
xor
cmp
mul
xor
std
clc
xchg
fmull
iret
aam
clc
xlat
neg
clc
int3
shl
and
in
xlat
lret
enter
out
xor
in
in
cmp
hlt
aad
ds
hlt
idiv
in
in
mov
repnz
icebp
sar
jmp
into
cmp
ss
xlat
rcr
cld
repz
stc
test
in
fiaddl
lret
aam
repz
cmp
sar
clc
into
testl
stc
repz
mov
or
xor
sub
call
fcmovbe
jecxz
fsubp
inc
out
loop
in
mov
xor
hlt
shll
lret
xlat
shl
push
iret
idivl
test
mov
int
fst
mov
repz
repz
in
shr
cmp
cld
std
out
mov
fmull
call
jmp
xlat
in
cmc
in
ljmp
shl
fld
hlt
in
out
xchg
enter
aad
shl
xor
in
into
fnstenv
ds
test
int3
int3
mov
xchg
mov
xlat
in
cmp
call
hlt
sti
repz
test
xlat
repnz
jecxz
mov
sti
stc
out
int3
xchg
call
cmp
rcl
sbb
call
neg
int3
xchg
shl
test
in
hlt
sti
iret
in
cmp
jmp
int3
fnstsw
ret
int
cld
cli
aam
fsubr
aad
movl
hlt
xor
cmp
std
xor
loop
stc
in
out
in
ret
loop
adc
repnz
cmp
cs
cmp
lock
into
loope
cmp
int
xchg
nop
out
ss
cmp
rcl
loopne
jmp
xlat
orb
fmul
out
loope
lds
ljmp
lret
jmp
fiadds
mov
cld
mov
loopne
in
out
xor
call
lock
rolb
roll
jmp
lret
std
loopne
hlt
into
test
into
cli
shl
int3
jmp
clc
rcr
lock
iret
fsubp
rol
out
mov
int3
out
lret
test
in
fst
aam
lret
lret
lock
rcl
enter
ret
cld
std
nop
lock
in
cmp
ljmp
aas
aad
mov
out
jmp
aam
in
rol
stc
int
stc
in
neg
fcmovnu
aad
cmp
aad
loopne
cli
out
int3
out
loope
loope
jmp
into
loop
sub
call
repnz
rcl
sti
in
mov
into
orl
xor
cmp
lock
loope
repz
repz
jecxz
in
sub
clc
sub
lock
in
shl
shr
iret
xor
cmp
loop
rcl
std
test
mov
xlat
into
out
lret
jmp
ret
rol
stc
idiv
rorl
loope
in
int3
int
aam
loop
sti
icebp
leave
cmp
testl
in
enter
adcl
shr
icebp
fcmovne
repnz
adc
fadd
cld
std
fcmovnb
in
into
shr
xchg
xor
into
icebp
rcl
cmp
std
cmp
mov
jmp
fadd
leave
int
bound
inc
aad
pop
int3
pop
jle
movsl
add
cmc
shl
test
lret
ffreep
in
lret
jmp
in
xor
into
xor
lret
int3
aam
into
loop
repnz
sbb
mov
mov
out
loope
int3
rol
cld
cmp
int3
shl
std
lock
cmp
jmp
orl
sub
icebp
loope
lock
lret
sarb
in
repnz
shl
fsubr
mov
in
stc
out
shr
xchg
jecxz
hlt
cli
into
xlat
jmp
lock
int3
into
aad
test
aad
in
neg
fldl2e
lret
sti
fldl
out
sti
fdiv
aad
into
out
fdivrp
faddp
loopne
mov
mov
loope
loop
in
xchg
hlt
aad
sar
lret
ret
shr
jmp
fstpt
fcomp
cli
roll
enter
iret
int3
shl
mul
cmp
xor
rcr
test
stc
vmovq
in
jmp
xchg
xor
clc
div
int
iret
sar
int3
cmp
iret
std
fstpt
ret
in
aas
jmp
int3
test
test
fcmovbe
cmp
rcr
jmp
loope
fdivrs
mul
mov
loop
lret
nop
xchg
neg
xor
ss
out
cld
xor
ret
fsubp
enter
les
cld
rorb
cmp
test
lret
mov
mov
cmp
out
cmp
int
into
loope
ds
test
fimuls
repz
enter
out
xor
fdiv
in
cli
add
lret
into
out
xchg
aad
loop
cli
cmp
aad
icebp
ds
ds
loopne
orb
call
out
ror
xor
cmp
rcr
xor
cld
clc
fcmovb
not
int3
lret
enter
mov
vaddsubpd
cmp
aas
cmpb
les
shl
mov
mov
into
sti
out
and
shl
fcmove
into
loopne
fucomi
in
ret
in
sub
test
int3
jmp
shll
fdiv
das
cmp
clc
ror
rol
ffreep
cli
icebp
cmp
mov
int
xchg
int
enter
std
rcr
addl
shr
test
xchg
repz
repnz
ror
ret
div
ds
sti
not
std
out
test
call
out
mov
into
addb
in
sar
hlt
int3
idiv
icebp
in
ffree
or
lret
xchg
test
sar
into
aaa
cmp
cmp
fistpll
in
addb
cld
test
loope
in
cmc
fcmovnbe
out
roll
ret
idiv
loope
jmp
jmp
in
icebp
in
clc
sar
sar
out
out
jmp
iret
std
not
test
loopne
mov
lds
xor
cmc
shll
xor
cld
aam
fidivrs
loopne
loopne
xlat
std
lds
int
loope
in
int
xor
out
rcl
out
loope
lock
hlt
xchg
stc
enter
loope
lock
xchg
rol
ss
in
out
in
and
ds
xlat
loopne
ljmp
imul
not
icebp
repz
cmp
loopne
rcl
cmc
std
jmp
neg
dec
mov
sti
cmc
lock
into
ret
out
out
lock
enter
into
repz
shl
xor
out
ss
lret
push
std
into
jecxz
cmpl
imul
leave
loopne
std
fsubr
loope
rolb
ror
fucom
leave
aas
ds
shl
xor
cmc
cli
mov
lret
xchg
push
lea
hlt
shlb
fcmovu
loope
loope
shl
in
ret
cld
ret
repnz
icebp
aam
jmp
cmp
int3
cld
fcomp
cmpl
cmp
cmc
loopne
jecxz
and
shr
aam
xchg
xor
hlt
cmp
repnz
cmp
shl
cld
fldl
call
repnz
clc
xor
aam
iret
shr
in
fcmovbe
icebp
repnz
std
mov
out
rclb
iret
imul
in
cli
call
roll
aad
int
flds
pushl
ror
aad
idivl
aas
hlt
iret
ret
cmc
out
loopne
out
out
inc
cld
mov
mov
sub
and
mov
mov
and
mov
orl
xor
xor
add
mov
add
jmp
rcl
lret
fst
jmp
cmc
jae
jle
movsl
add
jecxz
jmp
out
xchg
mov
repz
std
loop
sbb
lock
cld
mov
enter
lret
cmc
lret
ret
int
xor
int3
out
fdivrp
lret
fiaddl
jecxz
ret
clc
icebp
fdivrp
sub
loop
xor
into
sti
loop
fadd
xchg
aas
filds
filds
out
sub
cld
cld
aaa
lret
ds
loope
xchg
repz
clc
loopne
out
lock
fcomip
jmp
stc
cld
int3
ss
lock
loope
loopne
cld
stc
faddp
fdivrp
int3
xchg
repz
rcr
clc
fcmovnu
cmp
cmp
in
cli
loop
ljmp
out
xchg
out
rorb
out
xor
call
out
in
cli
addb
loopne
std
xor
sub
ror
aad
in
aaa
cmc
xor
cmp
cmp
decl
test
repz
shl
int
cmc
sar
cmp
cmp
loop
testl
xchg
xchg
cmc
imul
ljmp
roll
stc
std
and
int3
addb
icebp
rol
call
in
fdiv
cmp
aas
fst
div
repnz
out
ljmp
mov
fld
jmp
out
cmp
rcr
bnd
fdivr
ljmp
lret
xabort
fstp
cli
fidivrs
fdivrp
in
cmp
jmp
clc
loop
out
loop
call
in
iret
icebp
cld
jmp
int3
loopne
in
out
addb
cli
call
mov
ror
ret
call
aad
cmp
cmp
in
in
cld
sar
std
jmp
mov
sti
sti
orl
in
call
fildl
fdiv
aad
xchg
cld
sti
enter
leave
mov
aaa
xor
fstpt
sarb
cmp
iret
jmp
test
cmc
lret
cld
mov
call
loop
stc
fldz
jmp
repz
roll
test
fdivr
jmp
fldl
lret
xor
aam
iret
fiaddl
cmp
enter
jmp
test
out
cmp
aaa
std
cmp
imul
cmp
in
shl
aam
movb
nop
mov
ljmp
in
aaa
icebp
lret
adc
fiaddl
mov
and
test
mov
in
mov
lea
in
cmp
loopne
into
in
fidivrl
hlt
sti
cmc
cld
fadds
lret
mov
in
rcl
cmc
enter
hlt
ret
jmp
sti
repnz
in
mov
clc
jmp
xchg
rolb
sar
cmc
aaa
lock
into
lret
cmp
fdiv
rcl
mov
test
mov
clc
in
repz
icebp
xor
cld
lock
repnz
out
fmull
lret
xchg
and
xor
jecxz
fcmove
int
int3
fsubr
repz
fsub
loopne
out
mov
int3
fcmovne
roll
jmp
sti
clc
cmp
cmp
fcmovnu
int3
xchg
test
decl
in
out
ss
loop
cmc
cld
aas
loopne
roll
nop
int
std
mov
xor
leave
in
cmp
jmp
inc
test
shl
xchg
ret
in
jecxz
into
xchg
jmp
xor
in
aad
stc
fdivs
stc
lret
lret
xchg
cmp
jmp
jecxz
mov
fincstp
call
cmp
fucom
in
jecxz
rcl
enter
out
out
jecxz
out
ljmp
rcr
repnz
enter
in
into
std
cli
repnz
cli
xchg
shr
in
cmc
stc
lret
aad
in
bnd
ret
aad
or
out
cli
nop
out
call
icebp
fsubr
in
ss
in
jmp
sti
jmp
sbb
test
decl
ljmp
stc
lret
in
idiv
out
cmc
cmpb
aam
test
in
in
call
loop
repz
jmp
cld
ret
xchg
aas
ds
iret
clc
xchg
cli
shr
out
cmc
rcl
clc
cmp
cmp
cmp
fcmovne
iret
ret
sar
icebp
push
loopne
clc
nop
lock
add
mov
jmp
int3
rcl
aad
int3
call
in
lcall
jle
adcb
jecxz
sar
rcl
test
lock
mov
jecxz
cmc
xchg
lret
xor
xor
test
repnz
fxam
xor
mov
in
call
xor
jmp
cld
cli
aaa
fmulp
in
ret
aam
shl
test
in
xchg
sti
inc
mov
shlb
xor
lock
aas
and
out
xchg
cmp
repnz
test
frstpm(287
fstp
in
mov
jmp
icebp
out
cli
xor
out
fimull
sti
out
xchg
mov
lret
ljmp
cmp
in
shlb
out
fsubp
aad
shl
mov
jecxz
ljmp
imul
jecxz
xor
in
ror
cmp
dec
lret
loop
lock
or
out
test
orl
shr
xor
jmp
call
test
and
mov
loope
fsubr
ret
adc
in
stc
sub
rcr
cmp
cld
cmp
lock
hlt
std
enter
jecxz
into
mov
lock
shlb
vaddsubps
aas
int3
incl
mov
addb
rorl
clc
xor
aam
fdivr
cmp
fnstsw
out
test
cmp
xchg
in
rorl
mov
mov
ss
cmc
iret
aas
cli
std
ffree
jmp
test
pop
aam
lret
shl
jmp
loop
repnz
mov
lret
xchg
lret
test
fucomi
cld
hlt
xchg
sub
xlat
aad
stc
aam
iret
shr
cmp
roll
cli
incb
in
hlt
aam
cs
fcmove
idiv
fucom
roll
call
nop
cld
std
xchg
ror
stc
cmp
int
fsubr
into
in
clc
jmp
out
aam
fsin
ret
cmp
fabs
mov
loop
int3
into
shlb
or
neg
test
loope
stc
clc
mov
test
hlt
mov
lret
repnz
ljmp
into
cld
clc
repz
lret
std
xchg
aam
lret
out
call
cli
cmp
aas
idiv
out
xchg
jmp
test
in
mul
out
rcl
shr
repz
mul
xchg
repnz
cld
loope
or
test
xor
out
jmp
jmp
cmp
adc
in
jecxz
icebp
leave
lock
iret
aaa
icebp
cmp
out
cmc
idiv
fdivrs
ret
call
idiv
cli
popl
into
xor
out
in
aad
stc
fildl
fadd
loope
ret
in
clc
not
lea
shl
lret
rol
in
cmp
int3
iret
stc
fcmovbe
ret
sar
loop
addl
sti
test
xchg
loopne
fnstcw
int3
leave
lret
fdivr
iret
cli
loop
std
cld
lds
enter
out
iret
roll
xlat
ret
hlt
icebp
clc
shlb
enter
cmc
xlat
shl
shl
fiadds
cli
mov
in
xchg
repnz
cmp
aaa
sub
loopne
fadd
inc
loope
out
fucompp
adc
xor
aad
out
in
inc
stc
rcr
std
shl
addb
int3
loop
and
not
iret
cmp
out
addl
aad
ret
int3
std
in
lock
leave
aaa
idiv
iret
in
lock
ror
repnz
jmp
fiaddl
out
in
out
rcl
xor
lds
fsqrt
loop
lret
cmp
loopne
cld
cld
ret
std
sbb
shl
filds
sub
cli
lock
in
in
hlt
les
lret
out
not
clc
jmp
xlat
ss
jecxz
jecxz
mov
fcmovb
in
dec
shr
and
xchg
lret
lock
shl
sti
in
ljmp
jecxz
cmc
faddl
out
out
xchg
xor
repnz
out
fscale
rcr
sbb
std
stc
out
call
into
out
in
ljmp
repnz
into
int
jmp
sub
out
loop
cli
mov
stc
icebp
mov
lret
loop
xlat
out
cmc
vpsllw
clc
into
jecxz
rcr
clc
sti
leave
leave
int3
fcoms
xchg
sub
test
in
and
add
add
rcl
fstp
fldt
cmpsb
mov
adc
jle
ror
in
lret
lock
lock
fcmovnu
in
call
xchg
sub
jmp
icebp
stc
loope
aas
cmp
test
ljmp
shl
rcl
in
aam
sti
sarb
out
mul
aas
jmp
test
jmp
shll
in
fidivl
lock
enter
std
test
clc
fmul
fdivp
hlt
fucomi
in
std
fiaddl
cmc
divb
sub
fninit
enter
fmul
lock
test
out
ffree
ffreep
lock
jecxz
loope
cmc
loopne
shl
jmp
repz
icebp
cmp
std
clc
fadds
sbb
fucomi
out
out
clc
mul
ret
call
fucomip
test
jecxz
ret
fcmovu
loop
leave
out
in
test
mov
ljmp
lock
aam
cmc
fcom
aam
sar
shr
hlt
shr
enter
xor
neg
fcmovnu
aas
addb
mov
test
iret
mov
loopne
sarb
xlat
sar
in
fldlg2
xor
cmc
cmp
icebp
fdecstp
ljmp
cld
call
lret
repnz
lret
sti
cmp
rcl
out
cld
out
rcr
mov
std
mov
cli
sbb
fprem1
aad
std
repnz
aad
jecxz
cmp
ret
std
lret
lea
xchg
jmp
repnz
fdivs
cmp
fincstp
iret
rol
cmp
loope
leave
rcr
std
fsubrp
or
test
loop
cmc
dec
out
or
fcmovnbe
repnz
mov
mov
fucomp
xchg
fstl
leave
cmc
call
cmp
xlat
fst
hlt
sti
addb
mov
mov
int3
jmp
cmp
int3
shr
leave
cmp
xchg
in
in
jmp
repnz
loop
in
into
mul
sar
aaa
cmp
aam
ds
loope
cmp
loope
lock
mov
nop
out
into
ret
out
std
lret
fxch
std
into
repz
cmp
in
mov
or
xchg
not
xor
iret
into
call
fldln2
int3
rol
icebp
cld
sti
leave
mov
fucom
cld
fsubp
lret
xor
icebp
fprem1
enter
xor
rcr
loop
std
std
imul
lret
loopne
out
in
sar
icebp
loop
rcr
in
out
cmc
cli
div
sarl
clc
loope
sub
std
jmp
cmp
xchg
std
not
out
cmc
enter
das
in
lock
out
test
in
fcomp
mov
loopne
out
hlt
in
repnz
in
in
lret
lock
lock
incb
fisttpll
adcl
or
out
lock
in
xchg
int
cmc
rcl
jmp
stc
sar
xor
cmp
aad
loop
jmp
decl
shlb
in
in
cld
aad
cmp
loop
rcr
xchg
in
fimull
decl
cmp
cmp
cmp
xchg
and
in
mov
push
xor
cmp
int
fcomp
cmpl
out
stc
std
mov
ljmp
xchg
repnz
rol
xor
fidivs
cmp
in
cmp
out
faddp
orb
shr
icebp
jmp
jmp
lret
into
leave
ds
push
xor
in
aad
or
stc
lret
nop
popl
xor
cmp
in
iret
ret
in
mov
jecxz
jmp
iret
ret
rcl
fcmovne
ss
icebp
cmp
test
stc
fiadds
in
jecxz
jmp
shl
lret
into
fmul
lret
sarl
rcl
aad
int3
jmp
fcmovne
in
into
std
repnz
xor
neg
sbb
lret
fldlg2
cli
or
jmp
std
xchg
sub
lret
leave
aas
lret
shl
sub
fdiv
test
ffreep
hlt
aam
shlb
out
in
ss
cmp
testb
cli
jmp
loope
leave
jmp
std
fmul
int
jmp
out
aam
clc
ror
lret
fdivr
rcl
fdivrp
fstp
in
loopne
jmp
nop
xchg
xlat
clc
xor
xor
inc
in
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
jmp
iret
xlat
rcl
fcomp
iret
bound
add
jle
movsl
add
cmp
repz
in
sar
out
fmull
int
in
xlat
shll
ret
ss
int
std
clc
sub
fcom
lock
loope
loopne
std
and
mov
nop
repnz
in
xor
cmp
int
cmp
into
cmp
xchg
shl
mov
loopne
mov
call
xchg
in
into
hlt
aad
stc
xor
rcr
in
fnsave
xor
repz
loop
dec
shr
int
out
div
fdivrl
int3
xlat
aas
cmp
call
enter
cld
xchg
in
mov
out
jmp
aad
ljmp
shl
cli
rol
out
jmp
jmp
xchg
loop
iret
cmp
xor
rcl
adc
fcmovne
stc
idiv
leave
lret
out
in
int
aam
out
lret
iret
ljmp
addb
flds
out
xlat
lret
hlt
hlt
cmc
jmp
lret
hlt
ds
in
stc
stc
ret
std
fmul
xlat
loopne
sti
mov
std
xor
out
iret
int3
xor
into
fnsave
aad
fdiv
fsubrp
test
loop
int
in
fst
mov
jmp
lock
fdivrp
call
fadds
mov
std
in
mov
xchg
int
aad
out
cli
cli
stc
fcmovnb
aam
in
fisttpl
in
fldln2
jmp
shl
ret
in
cmp
fdivr
hlt
roll
icebp
enter
enter
int
jmp
enter
aam
out
int3
loopne
fcmovnb
sar
shl
sar
mov
mov
stc
fisttpll
shl
out
cmp
out
clc
into
faddp
cmpl
in
lret
in
shr
aad
jmp
shl
icebp
cmp
test
fsub
ljmp
mov
call
out
fstpt
repz
fidivrl
shl
xor
jmp
addl
stc
cmc
stc
std
sti
out
xlat
ror
out
cmp
loopne
ror
sub
xchg
mov
xchg
aam
iret
out
fcmovne
out
cli
in
fcmovu
sti
jecxz
repnz
jecxz
out
icebp
fimuls
xor
cli
aaa
hlt
sar
stc
sti
vpaddb
xchg
xchg
hlt
int
xlat
in
lret
fsubr
int3
mul
repz
or
stc
ds
mov
mov
out
icebp
fnsetpm(287
out
iret
ror
xor
rcr
rcl
lret
loope
out
filds
xchg
and
rolb
jecxz
cs
ljmp
shr
out
fstpt
test
call
xchg
test
aam
xor
lret
clc
rol
fdivp
mov
in
out
out
xchg
cmc
repnz
aaa
hlt
repnz
loope
ret
out
mov
ds
jmp
enter
jmp
xor
fucomp
iret
fdivr
aam
iret
mov
aam
mov
jmp
mov
orl
xlat
hlt
cmp
div
rcl
fnop
jmp
test
nop
ljmp
shr
call
cmp
roll
hlt
in
out
fsubp
and
fisttpll
hlt
repnz
in
cmp
out
out
rol
repnz
testb
lock
addl
jmp
cmp
sarb
hlt
rol
test
in
shl
loop
ss
cmc
leave
stc
clc
std
cmp
dec
std
in
cld
push
mov
cld
enter
icebp
repz
ret
xor
iret
int
call
xor
test
cli
ret
jmp
rorb
in
in
imul
sarb
cmpb
jecxz
fxtract
in
in
cmp
int
jecxz
in
mov
xor
int3
cmp
rol
icebp
fcmovnb
sar
idiv
std
leave
out
test
cmc
call
stc
cmp
hlt
aam
neg
mul
std
out
cmc
enter
iret
xchg
pause
int
rcl
fdivrs
jmp
repnz
clc
sar
icebp
ret
fdivr
loop
loopne
lret
in
out
shl
in
fcomp
xlat
xor
std
roll
orl
and
cs
enter
cmp
fucomip
fcomip
loopne
stc
iret
orb
leave
jmp
ret
aas
ret
aad
aad
mov
pop
push
jle
movsl
add
aas
aam
mov
orl
in
repnz
cmc
cmc
in
hlt
sar
in
out
addb
repz
int
out
out
shr
ss
xor
shr
xlat
rcr
rcr
loop
fdivr
inc
std
std
aad
out
icebp
fcmovnbe
in
in
enter
into
cli
imul
sarl
ds
cmp
ljmp
mov
xchg
mov
cmc
ror
xor
jmp
cmp
repnz
ror
xlat
test
lock
cmp
cld
repz
stc
filds
stc
shl
jmp
xor
lock
addb
cmc
repz
fstp
cmp
cli
shl
mov
out
mov
aam
cs
xor
cmp
rcl
cli
fildl
loop
sar
repz
add
shr
mov
ss
iret
int
ds
rcr
hlt
loop
mov
into
xchg
shll
fnstenv
shl
out
icebp
stc
xlat
std
ret
ret
test
in
cmc
fdivp
cmp
xor
in
out
iret
aad
repnz
out
loop
loopne
in
loop
test
loope
aad
into
imul
int
repnz
or
loop
aam
cmp
std
neg
mov
sbb
int3
test
clc
shl
sti
int
call
cmp
xchg
not
fdivr
jmp
stc
jecxz
mov
fimuls
sti
rcl
aad
lret
ds
repnz
mov
cmp
hlt
testb
loop
jmp
enter
enter
aam
sbb
loope
mov
leave
out
clc
jmp
mov
fidivrl
sti
neg
xlat
fcom
jmp
fucom
mov
in
out
int
addb
vpmaddwd
call
loopne
test
icebp
test
or
test
mov
out
repnz
fisttpll
aad
fucomi
stc
ss
cmp
sti
cmp
testl
and
fsubrp
ljmp
cli
shlb
aam
loop
clc
faddl
sti
test
test
xor
das
shl
jmp
cmpb
out
into
aad
out
fimuls
clc
lret
hlt
repz
shl
ret
rcr
mul
into
shl
cmc
add
in
inc
rcl
in
shll
jmp
ljmp
loop
cli
call
leave
mov
fmuls
call
cmc
int3
into
out
cmp
cmp
sarl
into
in
jmp
loop
shl
jmp
icebp
in
fucomi
lret
fcmovbe
loopne
sarb
repz
out
rorb
jmp
rcll
stc
shr
cmp
cmp
aam
aad
loope
ffreep
fst
call
in
leave
repnz
mov
in
jmp
aaa
sar
sar
lret
shr
div
add
mov
mov
sub
lret
cmp
xor
fdivr
int
loope
out
vpmulhw
xchg
fdivr
mov
icebp
mov
int3
call
call
cmp
adc
stc
call
int3
in
out
xlat
xlat
xor
cld
int
fucomp
clc
aam
ss
aad
mov
sar
in
cld
leave
sti
test
xor
call
imul
int
repnz
cmp
cli
ret
rolb
sti
fisttps
int
in
out
fdivrp
sti
cmp
lock
xor
cld
lds
out
loope
or
in
xor
shl
std
out
ljmp
testl
iret
fisttpl
rol
not
sti
jmp
cmp
into
clc
shr
rcr
fdivr
cld
call
loopne
subl
sti
shl
iret
cld
sar
rcl
cmp
call
call
test
cmp
enter
int
into
aad
aad
sbb
mov
inc
test
in
repnz
xor
iret
cmp
aam
icebp
loop
in
loopne
incl
in
std
repz
jmp
fcmove
xor
test
loop
shr
and
call
roll
rcr
lock
cmp
repz
clc
repnz
mov
xlat
call
or
mov
rcr
fcmovnu
mov
icebp
je
and
movsl
add
lret
loope
xchg
cs
ret
into
out
icebp
loopne
in
aas
cmp
aam
out
sti
in
rol
mov
xchg
ret
xor
jmp
out
into
shr
clc
stc
test
xchg
mov
nop
out
loop
icebp
int
cmp
stc
addb
div
test
std
leave
enter
mov
int
in
jmp
aam
std
in
not
rol
out
popl
mov
in
aaa
xor
sti
sti
clc
stc
jmp
into
ret
ds
jmp
jecxz
xchg
out
xchg
ljmp
cmc
shr
out
std
sti
aas
jecxz
stc
loopne
mov
inc
in
xchg
in
add
cmp
cmp
jmp
in
std
test
fcmovbe
fimull
int
div
xor
jmp
repnz
fucom
sar
jmp
clc
mov
loope
fisttps
cs
fldl2e
divb
ljmp
rol
test
cli
std
jmp
loopne
mov
xor
xor
lret
aam
cmp
aad
xor
inc
les
out
into
in
jmp
das
cmp
out
stc
cmp
push
icebp
fsub
fildl
clc
idiv
mov
int3
in
enter
jmp
in
div
ror
stc
xchg
iret
cli
roll
rol
icebp
xlat
fadd
lock
cld
in
and
repz
test
lret
mov
addl
mul
aam
aaa
into
clc
jecxz
ret
neg
in
lret
out
mov
xor
lock
fdivr
fucomp
ljmp
loope
stc
out
in
ficoml
cld
rclb
out
leave
cmp
ds
cmp
add
out
int3
cmp
fstp
nop
roll
icebp
ss
fdiv
iret
fldl
cmp
jecxz
enter
int
loope
jmp
lret
out
cmp
sti
cmp
clc
cmp
cli
cld
call
out
nop
xchg
int3
imull
sub
out
in
cmc
xor
fcomp
repz
jecxz
rol
hlt
imul
mov
mov
jecxz
ret
aad
ret
ss
fnstcw
loopne
stc
xor
call
imul
cmp
fstl
fldcw
cld
hlt
rol
ret
bnd
xlat
repz
fisttpll
in
int
ror
clc
sti
fsubp
aad
in
shr
test
std
cmp
loopne
fstp
repnz
xchg
cmp
sar
out
clc
repnz
clc
cli
test
fadd
in
into
std
in
xchg
xchg
in
xchg
int
out
clc
into
cs
int
shl
icebp
ror
incl
int3
xchg
test
roll
lret
stc
xor
lret
in
cmp
sti
into
fdiv
xlat
cmp
ljmp
xchg
test
aam
in
xor
aad
int3
jecxz
repz
cmp
imul
in
fdivr
in
loope
call
ljmp
sti
test
jmp
fucompp
shl
call
lock
shl
testl
cmp
in
ljmp
out
xlat
fcom
xor
shr
cld
std
lret
in
test
lds
mov
loop
mul
fnstenv
fldlg2
in
lock
repnz
repz
cld
aad
cld
leave
sti
fcmovu
orb
ret
aaa
cld
lret
loopne
fucomip
out
fcomi
jecxz
aad
cmc
les
cmp
sbb
cs
loop
sarl
aad
adc
xor
les
in
enter
xchg
repnz
loope
clc
int3
cli
lret
cmp
rol
fsub
call
out
test
fisttpll
nop
call
mul
out
rcl
lock
icebp
cli
out
repz
fdiv
cld
jecxz
loope
cli
rcr
nop
ljmp
fidivl
repz
fadd
cmp
shl
cli
enter
enter
lret
into
nop
in
ror
shl
repz
xlat
fiaddl
cmp
clc
enter
in
shr
out
into
jecxz
in
ret
bnd
fistpll
jmp
addl
lret
int3
out
hlt
xchg
mov
mov
jmp
ret
leave
aad
fcmovnu
sub
cld
add
pop
daa
jle
movsl
add
in
ss
ror
jmp
cmp
xlat
cmp
loope
xlat
aam
sti
enter
std
out
into
iret
in
aaa
jmp
xlat
int3
aam
cli
in
clc
lret
out
aas
hlt
hlt
filds
loopne
out
jmp
nop
xor
ror
div
fcom
shr
sti
testl
loop
out
fucomip
sub
out
into
xlat
cld
xlat
div
jmp
ds
jmp
add
loopne
mov
xchg
xchg
int
imull
sub
int3
xor
lret
xor
testb
in
mov
iret
addl
xlat
aad
into
idiv
loope
in
fninit
std
iret
loopne
rorb
jmp
xlat
lret
jecxz
shl
out
fidivrs
mul
repz
mov
loop
mov
call
out
jecxz
cmc
sub
shl
into
fdiv
loopne
cmp
fsub
cld
in
ds
aam
hlt
in
fists
loopne
fucomip
shl
fnstenv
in
lret
sti
test
clc
fmul
loopne
loop
mov
lock
lock
cmp
repz
loopne
xchg
dec
testl
hlt
shlb
shl
aas
xor
cmp
fldl
std
xchg
call
fcom
fucomp
repz
out
loope
cmc
in
cmp
aas
jmp
jecxz
out
shl
icebp
shr
cmp
fucomi
lock
xor
hlt
repz
ret
loope
test
and
das
enter
cmp
cli
out
cmp
cld
ret
call
fists
lret
aad
in
aad
neg
rol
loope
cmp
lret
iret
fcmovne
cld
jmp
lea
xor
cli
sarb
in
shl
ror
enter
aad
fucomi
int3
out
in
xchg
dec
out
in
int
aam
rcr
into
aaa
ret
call
in
in
in
into
mov
mov
jmp
std
repz
test
out
ror
cld
jmp
fucomip
loopne
out
mov
ss
lret
cmp
std
clc
fldlg2
cmp
cli
addl
out
clc
out
fisttpl
shr
out
xlat
int3
stc
icebp
xlat
aas
int3
lret
cli
xchg
sbb
aaa
xor
rol
xor
cmp
cmp
cmp
neg
test
out
and
into
in
lock
cmp
in
aas
rcl
repz
xlat
into
ficoms
jecxz
iret
ret
xor
lds
cmp
int
sbb
shl
test
into
int3
mov
shl
rcr
fidivrl
ds
lret
addl
in
xchg
cmc
hlt
icebp
shl
out
repz
aam
cli
loop
sti
cmpb
ror
lds
fdiv
clc
enter
fdivp
std
ss
aam
test
cli
sub
icebp
sti
faddl
aaa
in
xor
fdecstp
std
rcl
bnd
loop
hlt
test
shr
in
fdiv
enter
in
out
int3
xor
cmp
lret
repz
rcl
ffreep
jecxz
decl
vpsrld
xor
cmc
std
loope
testl
test
out
xchg
loope
ljmp
test
shl
sti
xchg
or
sub
out
icebp
in
mov
fprem1
sti
out
cmp
mov
stc
cld
stc
ret
cld
hlt
rorb
call
lock
pushl
ds
and
cmc
enter
fisttps
sub
out
out
xor
filds
out
mov
call
out
out
jmp
mov
div
in
stc
sar
idiv
lret
icebp
bnd
cmp
adc
sti
out
mov
loop
xchg
xchg
loop
ror
aaa
cmp
fdiv
jmp
in
rol
loopne
aad
fcmovnu
mov
leave
stc
int
loop
jmp
hlt
rol
fsubr
int
aam
repz
in
ret
std
repnz
lret
out
in
in
jmp
loop
xchg
call
ljmp
out
flds
out
fchs
mov
ljmp
shl
aad
ljmp
add
cmp
jmp
vaddsubpd
rcr
pop
push
xchg
fcmovne
mov
roll
jle
cli
enter
fiadds
jecxz
ljmp
icebp
jmp
adcl
sti
out
ljmp
sti
cmp
cmc
enter
and
xchg
in
shl
hlt
xor
fcomip
neg
sti
shr
mul
loop
fucomi
imul
loop
iret
in
lret
aam
aaa
xor
int
xor
cmp
shr
loop
repnz
mov
ljmp
mov
in
loop
fnstcw
cmp
idivb
in
loopne
clc
cmc
sti
xchg
les
ror
cmc
xchg
xchg
cmc
enter
lret
lret
int
lret
or
call
leave
in
xchg
mov
lret
int3
hlt
popl
in
aaa
out
icebp
rcl
sar
icebp
stc
fsubp
iret
xlat
sub
mov
ror
mov
xchg
mov
out
shlb
enter
sar
xlat
aam
loope
xchg
iret
mov
ss
fidivrl
shr
fsub
int
rcr
icebp
sti
fildl
mov
or
rcl
out
jmp
divl
loope
in
ret
fptan
ret
cmp
clc
inc
in
fprem
in
mov
iret
xchg
imul
xor
jmp
lret
xor
sti
xor
into
out
fsub
ffree
xchg
int
xor
out
out
repz
shl
cmc
jmp
test
enter
in
test
add
shr
ss
fadds
and
test
fisttpll
xlat
into
cmp
ss
xor
int3
loopne
fcmovnbe
clc
stc
clc
fdiv
out
fcmovu
adcl
lret
shl
fidivrl
aam
test
lds
fiadds
fsub
stc
stc
xor
iret
loopne
sub
fdivrp
test
cmp
mov
imull
sarl
call
ss
hlt
cmp
hlt
fildl
loop
addb
aad
jecxz
enter
mul
enter
fxch
incb
fadd
lret
out
in
repz
out
xor
repnz
cmp
lret
fst
ret
fisttpl
mov
in
mov
hlt
das
loop
shl
lret
push
ret
rcr
shl
xchg
fsts
hlt
int
loope
stc
cld
clc
cmp
cmp
int
in
into
rolb
in
leave
int3
out
mov
loope
rorb
hlt
ljmp
sti
icebp
ds
loope
test
mov
orl
jecxz
icebp
fcmovu
repnz
cli
ret
out
call
out
sub
aam
xor
out
in
iret
fcomip
leave
hlt
shr
fucom
cmp
hlt
lret
mov
ljmp
shl
leave
in
in
sub
int3
cmp
std
cmp
add
mov
loop
fcmovnu
lock
stc
sub
lret
out
clc
repnz
cmpb
out
fcomip
fucompp
fcomp
in
jmp
rcl
out
call
rcr
rcl
clc
cld
into
rcl
jecxz
jmp
in
lret
in
xchg
ss
xor
fst
hlt
cmp
cld
fcmovbe
jmp
out
jmp
icebp
ror
cmc
xchg
divb
call
ret
ds
xor
sti
test
addl
loop
in
rcr
xor
shlb
in
jmp
int
cmp
lret
imul
cmp
ret
fmul
ss
leave
cmp
cmp
lock
cmc
out
cmpl
loope
loop
enter
hlt
in
xor
cmc
iret
fnstsw
int
shl
loop
hlt
aas
in
and
test
xor
neg
int
push
aaa
jecxz
not
clc
out
xchg
stc
sti
xchg
out
in
roll
clc
aaa
shr
out
out
in
idivl
fcomi
std
rolb
jmp
ficoms
cmp
repnz
sarl
idiv
ret
add
test
hlt
int
lret
xchg
mov
in
enter
fsub
ss
cld
shl
clc
rol
ffreep
cmc
in
mov
xchg
loope
ss
out
shl
repnz
jmp
xchg
testl
loop
xchg
fisttps
xor
not
cmp
ljmp
and
add
add
add
xlat
fcom
fcom
fstp
outsb
push
mov
call
xor
movsl
add
fucomip
jecxz
cmp
loopne
ds
testl
ret
clc
lret
cmc
fistpll
cmp
loop
aas
leave
in
loope
mov
out
xorb
out
xlat
xor
lret
rcl
iret
push
lock
fdivp
rcr
ret
mov
fucomp
jecxz
lret
jecxz
cli
in
das
hlt
out
clc
cmp
rcr
ljmp
out
repz
in
call
add
fcmovu
cld
repnz
mov
rol
out
cli
int
cmp
clc
testb
mov
testb
shl
shl
rol
xor
cmp
cmp
aam
cmp
ret
rcr
ret
xlat
ret
fcomp
decl
std
orb
lock
rcl
lret
in
not
std
aas
stc
aad
in
enter
loop
dec
shl
fsubr
cmp
aas
neg
iret
jmp
repnz
xchg
cli
enter
in
int3
out
xchg
and
aaa
xor
neg
std
loopne
cmp
shl
lock
xor
xlat
mov
std
out
lock
mov
call
in
int3
out
in
shl
test
xchg
lret
xor
repnz
in
jmp
std
aam
xor
int3
rol
cmp
xchg
ljmp
cld
shl
out
xor
enter
cld
shr
cmp
fiadds
cld
clc
mov
in
int3
in
jmp
out
jmp
out
in
loop
sti
incb
std
sti
loope
jmp
fsubrp
xchg
xchg
xor
ljmp
fcmovne
std
fdivrs
stc
out
mov
out
mov
in
jmp
lret
test
shrb
fcmovne
cli
lock
div
hlt
jecxz
clc
out
in
in
loope
cmp
test
add
clc
fsubr
cmp
aaa
out
cmc
aad
ret
out
sar
ret
in
mov
in
xchg
xchg
iret
xchg
int3
cmp
clc
shrb
fsubrp
fiaddl
sti
test
sti
fcmove
cli
ror
mov
shl
call
xor
ljmp
rolb
test
mov
repnz
int3
int
loop
sar
rcl
icebp
fdiv
cmp
loop,pt
aam
loope
mov
cld
in
ret
loopne
aad
shr
out
fcmovbe
loope
loopne
sbb
loopne
cmc
fmul
fmull
out
repnz
lret
fdivr
fcmovnbe
out
cmp
xchg
cld
shl
jmp
ljmp
aad
ljmp
ds
jmp
test
jecxz
in
leave
shr
test
in
int
lret
int
loopne
lock
ljmp
into
in
xchg
jecxz
xchg
xchg
lds
cmp
aaa
fcmovnu
lret
xlat
lock
movb
std
fsubp
in
mov
call
int3
shr
int3
cmp
std
sub
fisttpl
test
loope
lock
xor
out
fdivrl
sbb
icebp
test
in
clc
imul
iret
in
out
ret
clc
cmp
clc
leave
xlat
icebp
sti
stc
aad
xor
addb
mov
mov
test
not
ljmp
iret
shl
xlat
sbb
test
mov
into
mov
call
into
fstpt
xor
shlb
cmp
shl
jecxz
mov
stc
in
mov
mov
ljmp
hlt
aad
stc
icebp
loope
sar
sar
into
sar
mov
sbb
loope
mov
loope
int3
mov
xor
fidivl
aam
ds
cmp
loopne
in
leave
loope
nop
sti
iret
into
sar
in
hlt
out
shr
lret
cmc
std
loop
fiaddl
push
mov
cli
orl
ss
repz
xor
incl
jmp
call
in
repnz
out
subl
aaa
clc
sar
std
clc
cmp
xchg
in
sar
lds
test
out
shr
int3
fxch
enter
sar
lock
fdivp
fdiv
or
fmul
mov
xchg
xor
int
int3
aaa
divb
ljmp
in
ror
xchg
mov
lret
call
in
call
neg
icebp
fmulp
lret
fmulp
rol
fmul
leave
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
mov
mov
jmp
ret
fstp
ret
frstor
mov
cmpsl
iret
mov
xor
jle
fdivr
mov
out
ret
cld
repz
not
das
out
out
int
cmp
cmp
out
fdiv
icebp
sbb
leave
xchg
out
lret
sbb
jmp
xlat
cmp
cmp
fldl
repz
loope
fisttpll
xor
ret
cmp
shlb
cmp
sarl
jecxz
lock
addl
loopne
ljmp
ret
shlb
aaa
lds
rcl
jmp
shl
repz
loope
call
xchg
jmp
enter
repnz
shl
fiaddl
clc
xchg
icebp
iret
jmp
fst
aad
sub
cmp
aam
jmp
repnz
fiaddl
cmp
ljmp
out
fdivrp
aas
loop
fcmovnbe
inc
ret
std
loopne
mov
ljmp
in
out
xor
in
cs
sar
xlat
ret
rcr
shl
in
enter
jecxz
out
jmp
jecxz
xor
lock
fucomi
ljmp
repz
call
loope
sti
test
decl
cmp
ror
call
lock
sar
cmp
cli
loope
clc
neg
nop
int
in
xchg
out
ret
in
jmp
cmp
xlat
sbb
add
xchg
mov
in
iret
fucom
mov
int3
xor
ss
enter
icebp
ds
not
cld
jmp
fldpi
fld1
in
out
enter
leave
cmp
std
fdivr
sar
rcr
ret
aaa
cmp
orl
loope
call
cld
cld
leave
repnz
cmc
in
loope
fxch
loopne
idiv
out
int3
xchg
nop
loop
loopne
loopne
lret
ljmp
fdivr
mov
xor
mov
rolb
lock
clc
fdivr
ds
mov
hlt
lret
hlt
fimull
mov
jmp
int3
in
stc
aad
aas
cmc
aam
sarl
sar
cli
aam
in
decl
jecxz
shr
rcl
lret
xor
jmp
int
incl
stc
call
out
aad
sub
rcl
aam
ljmp
std
clc
loopne
jmp
cmc
clc
out
lock
adcb
ss
cmp
shl
cmp
cmp
fcmovu
cli
jecxz
lock
lret
imul
xor
cmp
hlt
lock
out
aas
fmul
out
rcl
ret
aas
cmp
call
enter
sti
fldl2e
dec
cmp
sbb
fcomp
into
leave
fxch
mov
shl
in
cmp
fsub
fcomp
sti
fucomip
rcr
add
cli
std
mov
fsubp
out
into
enter
imull
cmp
fidivrs
loope
cmp
not
in
mov
cli
cmp
loope
icebp
xchg
xchg
into
icebp
repnz
cmp
icebp
aad
repz
loopne
ret
lock
int3
jecxz
mov
std
out
call
shl
jmp
aad
hlt
mul
in
call
xlat
lret
orb
xor
fcmovnb
shr
cmp
repnz
hlt
loopne
mov
testl
in
lock
int
xor
in
in
cmp
cmc
cmp
std
aad
sti
cmpl
dec
out
int
sar
jmp
sub
fsubp
cmp
fidivrs
ret
out
out
test
orb
fxch
shr
xor
aad
in
loopne
test
loop
ljmp
loopne
loop
rol
int
xor
int3
sti
out
shr
cmp
ret
fucom
in
out
loop
ljmp
aaa
xor
icebp
jecxz
out
int
aaa
cmp
loope
stc
test
decb
mov
xchg
mov
in
in
iret
ror
lret
shl
sti
iret
ds
mul
out
out
xchg
out
lret
out
lret
cmp
in
loop
out
loop
hlt
out
std
jmp
lret
icebp
mov
shl
cmp
bnd
fnstsw
cmp
xchg
fiadds
loop
jmp
ret
ljmp
loope
sti
repnz
xlat
out
cld
movb
lock
lret
iret
clc
in
leave
out
test
inc
fdiv
add
lret
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
jmp
aam
fistl
inc
sbb
stc
cmp
movsl
add
lret
out
aam
shr
xlat
in
ljmp
cmp
icebp
aas
sti
std
decl
mov
nop
call
out
jmp
lret
sar
test
std
fcmovnbe
mov
shl
nop
mov
aad
call
ljmp
sti
ret
lock
cmp
in
jmp
mov
sbb
loopne
loop
ret
hlt
enter
int
idivb
fcmovnbe
enter
in
xchg
fsubr
jecxz
in
cmp
addb
stc
xchg
loope
out
cld
rorb
sar
sti
cli
cmp
clc
idiv
cmp
iret
cmc
out
cli
cld
add
mov
in
loop
icebp
aaa
xlat
repnz
ljmp
out
iret
neg
out
xchg
lock
adcl
call
test
out
roll
ret
ret
fildl
ror
int
xlat
in
int
hlt
fcmovbe
rcl
cmp
fnstsw
mov
aam
in
leave
fsubrp
in
fmul
enter
cmp
fsubr
xor
loope
int
cmp
incl
lret
mov
ljmp
subl
jmp
into
jmp
stc
ds
shl
ds
mov
in
xchg
adc
call
out
xor
enter
fyl2x
cmp
addb
jmp
xchg
sti
or
mov
jmp
fmulp
hlt
leave
cmp
rcl
out
ret
repnz
cmc
jmp
leave
in
in
fimuls
int
ss
enter
fmul
fdivrp
fsub
clc
loopne
mov
leave
loop
into
int3
cs
not
out
idivb
in
idivl
into
stc
test
call
testb
in
rol
enter
call
fucomip
test
loope
lret
in
out
mov
fimull
ret
icebp
in
not
cmp
xlat
iret
repz
stc
fiaddl
adcb
shr
sti
stc
fsubr
std
cmp
sub
lock
xor
mov
fucomip
xchg
repnz
xchg
adc
cli
int
lret
fdivrs
fcomp
fiaddl
mov
decb
int
xchg
aaa
fxtract
repnz
cmp
loope
int3
stc
clc
xor
stc
loope
addl
rcl
enter
out
int3
out
cmp
loop
iret
xchg
xchg
call
int3
in
loope
das
jmp
loopne
jmp
cmp
loopne
test
std
jmp
jmp
fsubrp
test
fdecstp
sarb
ds
jecxz
into
ret
sti
in
std
aad
loop
in
lret
aas
in
xor
aad
lret
shll
shr
in
sarl
iret
aad
in
sbb
jmp
nop
mov
cld
xchg
mov
ss
repnz
in
fcos
cmp
cmp
xchg
in
lret
mov
int
decb
lock
repz
fxch
in
ffreep
test
les
ljmp
test
not
aaa
leave
in
jmp
repnz
lret
cmp
cmp
fcom
std
stc
fstp
into
int
cmp
ret
ror
xor
int
cmp
stc
repnz
ds
lret
addl
clc
xor
hlt
xor
iret
out
lock
in
cmp
lock
in
jmp
sub
decl
int3
in
into
in
fcomp
lret
adc
stc
sbb
cmp
out
fmulp
out
lret
jecxz
out
mov
cmp
jecxz
iret
hlt
fucomp
neg
fcomi
enter
mov
xlat
mov
in
in
loope
div
ljmp
fcmovu
stc
hlt
fadd
bnd
lret
xchg
mov
fldl
in
in
out
fsubr
stc
aam
aam
cmp
repz
mov
cli
lret
int3
mov
xor
aam
xor
aas
cmc
fiaddl
lds
leave
lret
out
loop
out
jmp
ljmp
hlt
icebp
cld
cmp
shl
aam
sti
sti
fsub
test
ret
aad
out
out
aad
in
cmpb
rcr
loop
addb
in
lret
xor
aam
fcmovne
ds
cmp
sti
mov
loop
addl
shr
add
add
fcom
fstp
je
xchg
or
and
jle
movsl
add
clc
repz
cli
enter
cmp
sarb
shl
out
mov
fstp
fld
flds
clc
cs
xor
icebp
into
in
lret
in
jecxz
fcmovu
shl
stc
lds
hlt
in
icebp
out
aad
sarl
sarb
faddl
in
loop
xchg
jmp
int3
int
fyl2xp1
cmp
fcomip
xchg
ret
addb
into
xchg
in
loopne
call
ss
out
fstp
repnz
cli
in
fiadds
mov
int
out
out
sti
fnstcw
fdiv
repnz
in
in
loope
aad
stc
hlt
xchg
cmp
out
xor
fcomp
in
lret
xlat
loope
fdivr
fadd
mov
loope
xchg
hlt
loope
xor
lret
sar
xor
cmp
xchg
lock
ljmp
in
lea
in
stc
sti
aaa
int
incl
roll
add
int
int3
mov
xchg
aad
loop
in
cmp
cmp
cmp
ljmp
mov
div
rcl
out
out
loopne
int
idiv
cmp
mul
enter
loop
sbb
mov
xchg
loope
in
repnz
xor
lret
rcr
iret
loope
sbb
cld
cld
ret
enter
shl
out
jecxz
jecxz
xor
int
aas
clc
out
sti
ret
sti
hlt
aad
clc
cmc
cmc
int3
lret
out
mov
xor
repz
std
ror
lock
movl
out
int3
in
leave
rcr
aam
aam
repz
fincstp
cld
fsub
testb
out
mov
into
fucomp
loope
enter
cmp
idiv
loop
lock
cli
aad
shl
xlat
mov
and
out
cld
or
leave
ljmp
ljmp
fucomp
cli
mov
std
loopne
aam
call
xor
repnz
aaa
cli
cmp
ror
xchg
roll
mov
fdivr
rcl
xchg
shll
icebp
sar
out
fnstcw
out
cmp
ds
cmc
test
fsubr
adcl
aam
icebp
jmp
xor
addl
jmp
sar
into
imul
jmp
hlt
xor
sar
stc
iret
lock
std
xchg
ror
out
fsubp
fsubr
das
rol
cmp
lret
cmp
loop
in
add
fiadds
loope
icebp
mov
fldcw
in
jmp
leave
xor
ds
hlt
addl
out
out
int
ljmp
ret
lret
fprem1
cmp
cmc
cmc
in
clc
clc
addl
adcl
xchg
rcl
fxch
in
fdivrl
into
out
out
and
test
mov
repz
or
testl
lock
aam
shl
cmp
idiv
adc
xchg
xchg
out
fmul
xchg
lea
loope
rol
fsubrp
cmp
cmp
rcl
sarb
enter
movb
rcl
not
lret
ror
cmp
clc
ror
aad
test
into
loop
loopne
loopne
into
xor
in
aam
loope
cmp
roll
mov
lret
xchg
sub
xchg
out
das
lock
repz
dec
hlt
lret
cmp
cmp
leave
fcmovu
addb
rcl
lock
ret
shll
jmp
fld
cmc
sub
in
cmp
in
jmp
lock
xor
incb
xlat
loopne
jecxz
lret
int
in
repz
jmp
aad
divb
aad
cmp
ds
xlat
stc
rcr
stc
cmp
loopne
in
iret
out
sar
loope
xlat
aam
int
out
cmp
hlt
clc
sti
hlt
std
out
lock
mov
xchg
repz
xchg
dec
cmp
out
fcom
int3
loope,pt
cld
ret
std
out
sti
sti
incb
xchg
lock
sarb
fdivl
cmp
std
sti
cmp
out
incl
loopne
loope
in
lret
cli
ds
aaa
test
sti
mov
into
loopne
xchg
pushl
in
ljmp
mov
movzwl
sub
cmp
mov
movzwl
jg
jmp
int
rol
fst
lcall
into
inc
ret
jle
movsl
add
jmp
int3
sti
pushl
fxam
fiaddl
fchs
lret
repz
mov
out
fmul
aaa
cmp
fmul
fcom
loope
orb
test
mov
lea
out
idiv
clc
out
loope
ret
and
rorb
lret
lds
jmp
cmp
fld
repz
sti
fildl
aam
fisttpll
lret
addl
loop
out
fidivs
cmp
cmp
aad
ds
jmp
call
xchg
loope
ljmp
cmp
sti
rcr
hlt
fadd
xchg
test
test
rcr
in
iret
xor
ret
enter
lret
lret
hlt
shr
loop
jecxz
imul
div
xlat
lret
stc
test
shr
int
ljmp
out
in
loope
int3
cmp
fld
icebp
fdivp
out
and
loope
xchg
hlt
shl
hlt
xlat
fld
fcmovnbe
cmp
cmp
in
shl
int
xlat
into
aam
rol
sub
fildl
shl
int3
aad
xor
hlt
fstp
lret
ret
xlat
in
mov
test
fcmovnu
icebp
and
xor
xor
fucomi
ss
int3
fdiv
lret
stc
out
aad
neg
std
jmp
out
loopne
out
repz
aaa
int
cmp
int
loope
rcr
rcl
out
mov
repz
lock
into
out
xor
ljmp
int
fcomp
les
mov
clc
out
loope
rcl
out
leave
bnd
sar
cmp
cmp
sbb
cmp
jecxz
lds
xchg
call
loop
shlb
jmp
aaa
ljmp
orb
test
cli
xchg
std
mov
cmp
cmp
xor
in
stc
mov
cld
lret
loope
fucomi
cld
addb
in
ljmp
sbb
cli
faddp
repz
sti
sti
call
int
jmp
rcr
clc
aad
xlat
fdiv
ret
ret
aad
testb
xchg
leave
xchg
lock
fcmove
sarb
jmp
into
test
mov
mov
ror
mov
aam
loope
clc
lock
fdivl
cmc
rcr
faddp
sub
in
orl
xor
loop
icebp
jmp
lret
aas
ret
add
cmp
ret
leave
cli
iret
lret
xchg
cmc
lret
hlt
clc
lock
icebp
int3
cmp
out
shl
loop
out
flds
out
xchg
int3
fsubr
xor
cmp
shr
cmp
aam
fiaddl
test
int3
ljmp
in
std
jmp
out
cmp
ret
decl
sub
nop
mov
jmp
rcr
ror
cld
leave
in
test
icebp
mov
enter
enter
hlt
cld
test
lock
iret
fidivl
cmp
clc
cmp
movb
leave
mov
ffreep
roll
jmp
out
int3
lret
aad
aam
shl
out
fldl2t
xchg
lock
mov
out
shl
xlat
icebp
cmp
fucompp
mov
jecxz
in
sub
xlat
das
into
in
call
ret
test
xchg
jecxz
out
xchg
lock
orl
fcmove
lret
sarb
sar
icebp
fiadds
leave
stc
fmulp
into
fstp
or
in
sub
out
ds
idiv
xlat
out
cld
cmp
and
call
shr
int3
cli
out
ror
lret
xor
out
cld
ret
fcomip
out
ret
fcmovbe
fucomi
fsubr
xchg
int3
xor
fcmovnbe
shr
out
cmp
leave
out
jmp
call
filds
cmc
shl
xor
aaa
cmp
xor
repnz
int
icebp
hlt
clc
hlt
sti
mov
sbb
cld
sti
mov
dec
shl
into
jmp
repz
repz
ss
in
xor
fimuls
iret
into
imulb
ss
div
cmp
shr
rcr
shl
ror
ret
test
loope
rcl
aam
shl
sub
cmp
sti
aad
loope
aam
loopne
int3
iret
fcmovu
cld
lea
into
ss
fsubr
fdivrs
test
sub
sub
mov
jmp
jmp
leave
ret
int
int
mov
shl
inc
out
enter
add
xchg
neg
lret
loop
stc
fdivrp
jmp
int
rcl
xor
not
xlat
push
in
in
sbb
cmc
jecxz
test
cmc
in
mul
cmp
ljmp
shr
in
call
fcom
into
or
neg
loop
out
jecxz
sti
xlat
icebp
rcr
cmp
incb
loopne
lock
cld
lock
loop
xor
fpatan
jmp
ss
std
int3
aaa
cli
aas
out
aad
fidivrs
repnz
mov
stc
int3
fst
fdivp
xor
icebp
enter
in
shll
shl
rcl
rcl
test
in
int3
icebp
jmp
call
xor
div
idiv
xor
icebp
call
enter
in
leave
lret
ljmp
aaa
out
lret
fsubr
into
cmp
int3
sbb
jmp
aad
in
icebp
dec
in
icebp
sub
out
ror
loope
rol
cld
cld
fcomi
rcr
in
clc
lret
nop
xchg
jmp
jmp
cld
in
aas
lock
cmp
xchg
cmp
std
stc
test
imul
cld
sbb
icebp
lret
leave
repnz
lret
cmp
fst
sti
add
call
xchg
shl
out
out
rol
cli
cmp
lret
fcmovnb
cmp
out
out
jmp
mov
shl
lret
fidivrl
fmul
flds
aam
les
mov
std
lret
lret
adcb
xor
idivl
aad
aas
hlt
into
test
loope
out
into
loope
dec
mov
call
ret
div
in
fucomp
cmp
ret
icebp
cld
fadd
aam
call
iret
in
xchg
lock
repnz
out
loop
ret
fcomi
idivl
inc
rolb
lret
or
or
jmp
ss
iret
ljmp
in
test
and
fcomip
mov
cli
cld
call
xchg
out
xor
leave
jmp
pushl
hlt
jecxz
fcmovnu
idiv
enter
mov
in
xchg
shl
sub
sar
repnz
iret
hlt
out
ret
sti
aad
out
fcmove
xlat
cli
fsubr
in
fcmovne
loop
cmc
jecxz
icebp
cmp
neg
jmp
sti
cmp
aam
cld
dec
mov
call
xor
xor
sarl
cmp
cmp
cmc
out
orb
test
mov
cmc
xor
xlat
xor
fcmovbe
ret
clc
fpatan
xchg
addb
fsubp
mov
jmp
out
cmp
repnz
in
cld
and
test
int3
stc
xor
out
fdivr
loop
clc
loopne
fucomi
fucom
lea
jmp
ret
clc
hlt
cmp
sar
rcl
cmp
mov
in
fisttps
ss
xor
ror
lret
aaa
iret
dec
iret
fnsave
aas
sti
fiadds
cld
loope
out
shr
xchg
xchg
fsub
not
call
shr
xor
ds
ret
mov
out
loop
jmp
shr
cs
ss
iret
cmp
cmp
fadds
in
in
rolb
lret
xor
ror
cmp
aas
cmp
icebp
fdivr
xchg
jmp
fstp
cmp
mov
jmp
fcmovnbe
sar
out
sar
ret
aam
rcr
clc
repnz
fcmovne
lret
test
addl
ss
fsubr
fcmove
cmp
sub
icebp
out
lock
clc
loope
fiaddl
aam
cs
out
fdecstp
int
xlat
cmp
ret
int
iret
in
and
shr
test
cmp
lret
shl
loopne
loope
jmp
xlat
lret
out
leave
cli
cld
sbb
loope
out
aam
fcomi
aam
out
hlt
cmp
shl
inc
and
fld
lock
inc
call
jmp
cmc
jmp
int3
test
not
fyl2x
aam
ljmp
out
jmp
fsubr
jecxz
jmp
call
out
fdivr
xchg
aad
mov
lret
mov
shl
leave
aam
xor
out
fsubrp
out
roll
in
cmp
mul
cld
int3
mov
in
in
clc
xor
dec
into
fdiv
repz
ds
cmp
jecxz
aad
jmp
aam
mov
fcmovb
jns
int
jle
add
cli
fsubrp
lret
mov
rolb
jmp
icebp
fidivrs
xor
xchg
cmc
loope
clc
mov
mov
ljmp
lock
jmp
cmp
sarl
rcl
cmp
loope
std
fisttpl
in
leave
aam
imul
cli
xor
aas
lock
ror
loop
sub
sub
xchg
or
ror
out
sti
xor
div
ljmp
ffreep
shr
stc
lea
aam
aam
aad
lret
imul
fyl2xp1
roll
cld
ret
fdivr
loop
cli
cli
shl
xchg
hlt
jmp
xor
fidivrl
cmp
fnstenv
div
roll
xchg
mov
call
nop
fcoml
xor
fdivl
aam
testl
loope
dec
xchg
lret
mov
int3
imul
cmp
filds
icebp
fidivrl
decb
fcmovu
out
call
fsub
sti
iret
incl
iret
jecxz
aam
inc
loope
lret
out
out
out
loope
enter
aaa
lock
fcmovne
in
lock
ret
clc
fsubrp
fldpi
std
loope
in
iret
out
mov
sar
in
not
rolb
repnz
out
call
loop
int3
xchg
loop
out
ljmp
fcomi
fpatan
icebp
test
shl
sar
loop
testb
int
in
xor
lret
xor
out
fucomp
aam
sti
loope
rcr
out
ret
sti
enter
mov
aam
nop
cs
repnz
fcmovbe
out
ror
enter
sti
ret
sti
hlt
sti
lret
test
flds
das
in
sti
out
fcmovu
stc
cmp
aam
cmpl
lock
sti
ret
adc
mov
iret
rorb
out
out
xor
cmp
aas
cmp
ret
add
out
fiadds
out
cli
shl
neg
fsubr
cmp
not
sar
clc
rol
test
cmc
out
lret
jmp
int3
out
icebp
fsub
aad
iret
fcomi
ret
aad
jmp
hlt
iret
std
dec
shl
jmp
cld
idivb
hlt
ret
mov
mov
enter
int
xchg
xor
sarl
out
neg
clc
cmp
test
fxam
test
fsub
cld
sti
icebp
sti
xchg
mov
call
rcr
cmp
addl
cli
xor
xchg
ljmp
ljmp
in
aad
cmp
cli
xlat
mov
jmp
out
test
ss
rcl
jmp
std
cld
fcmovnbe
into
stc
shl
xlat
out
cld
jecxz
lret
in
cld
hlt
repnz
leave
hlt
out
xor
das
cmp
icebp
xor
lret
loope
in
lds
ljmp
out
repnz
aaa
test
loopne
in
iret
or
ds
add
sti
out
mov
cld
xchg
xchg
mov
enter
lock
dec
fstpt
fcomip
hlt
cli
mov
mov
iret
in
shr
icebp
rcr
not
loopne
fst
cmp
repnz
cli
jecxz
jecxz
test
and
mov
in
int3
in
jmp
cmp
into
loope
fsub
stc
out
mov
jmp
loope
shr
mov
jmp
clc
xor
lock
cli
ljmp
out
ret
xlat
stc
mov
mov
loope
nop
lret
mov
loopne
cmc
enter
fxch
std
fdivrs
int
ds
stc
mul
call
stc
lret
out
leave
in
cmc
out
shll
rcr
cmc
jmp
cmp
imul
aas
xchg
addb
enter
lret
shrl
les
xor
in
sarl
test
xlat
loopne
mov
ljmp
xor
out
stc
leave
stc
cmp
sarb
std
mov
std
jmp
lret
in
jmp
aas
fcom
loope
rolb
int3
in
in
fmulp
test
int
int3
xor
iret
into
neg
loope
sub
ljmp
in
xchg
lea
xor
sar
in
icebp
iret
loop
cmpb
ds
stc
mov
test
div
aaa
lock
sarl
fdivrp
aam
fdivr
sbb
xchg
sti
nop
lea
mov
mov
cmp
je
jmp
xlat
rol
xlat
enter
push
jp
mov
sarl
movsl
add
out
in
int3
out
ss
aaa
repnz
cmp
ds
sti
in
ret
mov
addl
ljmp
rcr
cmp
fst
cmp
icebp
std
cmp
loope
cmpl
xchg
xor
ror
xor
xor
icebp
sti
testl
in
std
in
aad
mul
lock
leave
std
jmp
aas
aam
xchg
lock
fmul
into
sti
sti
std
test
fmulp
hlt
jecxz
leave
ljmp
xlat
aad
testb
mov
fsubr
out
incl
das
call
clc
clc
aad
loopne
icebp
jecxz
in
lret
call
sub
mov
aam
jmp
cmp
lock
ret
out
test
sti
or
jmp
jmp
in
repz
rcr
shr
cli
lock
ret
hlt
and
out
stc
enter
push
xor
ret
icebp
in
not
sar
loope
cmc
loopne
jecxz
jmp
enter
out
in
divb
in
rcr
lock
in
fcmovne
or
fsubp
rcl
jmp
xchg
fdivr
shl
jmp
cmc
xor
aaa
repz
aaa
hlt
adc
stc
repnz
rol
fsubp
in
loop
out
test
enter
cmp
out
rcl
leave
jecxz
stc
ret
testl
in
lock
in
xor
in
repz
hlt
hlt
xor
fmuls
sbb
std
jecxz
mov
jecxz
sub
cmp
out
cld
cli
fstp
fdivr
fld
hlt
jmp
xchg
in
xor
fucomi
loopne
repz
cli
fdivp
icebp
jmp
ljmp
loop
lret
fyl2xp1
jecxz
aaa
fdivrs
repnz
ss
aad
hlt
ljmp
lret
loopne
xor
leave
xor
iret
idiv
cmp
ret
hlt
xchg
loop
repz
mov
xchg
test
out
xor
int3
enter
cmp
xlat
ds
out
rorb
testl
aaa
out
out
out
cmc
sub
std
ds
in
fmul
in
fcomp
ficoms
clc
loope
jecxz
cli
int3
rol
aaa
shl
fcmovbe
cli
out
orl
fucomp
sar
jecxz
rol
jmp
fdivp
call
repnz
out
sti
aad
test
shr
loope
xchg
xchg
lret
jmp
cld
out
ds
repnz
clc
xchg
loop
lret
std
neg
cmp
int3
lret
mov
loopne
repz
lock
ljmp
rcl
repz
fchs
sti
mov
loope
out
or
adcl
in
leave
loopne
repnz
loop
cmp
xlat
mov
in
int3
jmp
rcl
sub
loop
call
neg
test
aam
fdivp
clc
in
iret
xchg
mov
iret
xlat
test
enter
loop
out
test
call
iret
out
stc
mov
xchg
aad
ret
icebp
cli
jecxz
clc
idiv
cmp
in
lret
cmp
cmp
std
out
fsub
faddp
cld
call
xor
lret
div
out
stc
fdivrl
out
fdivrp
stc
loope
fadd
test
xchg
fmul
xor
aad
repz
in
rcr
ret
xchg
icebp
lea
vpsrad
stc
ss
out
out
aam
cmc
sar
xor
movb
xchg
out
repz
int
shr
aaa
out
fcmovne
shr
in
xchg
ret
jecxz
call
ljmp
ss
std
cmp
stc
loopne
stc
cmc
ret
lock
loopne
jmp
xchg
jmp
nop
mov
aad
shl
xor
int
icebp
into
out
fst
loop
out
icebp
cld
loop
out
clc
add
in
mov
jmp
cli
aad
iret
sbb
repz
xchg
out
cli
sti
ljmp
ljmp
cmp
icebp
ret
in
jmp
int
mov
repnz
in
repz
iret
into
into
in
test
int
xchg
xchg
int3
call
iret
cmp
clc
roll
cmp
xchg
or
shl
iret
loopne
xor
xor
jmp
into
ror
fxch
fst
cmc
mov
mov
jecxz
jle
movsl
add
cmp
iret
fstpt
fcomp
repz
in
test
adc
fcomi
neg
jecxz
test
int
stc
aam
cmp
icebp
cli
sar
sti
and
xlat
aad
int3
out
xchg
shr
fxch
stc
fsincos
sti
clc
stc
cmp
test
in
sub
cld
out
fldl
cmp
cmp
fcmovnu
lret
ror
rolb
jecxz
enter
shl
div
xor
sub
loopne
cld
loopne
in
iret
fcos
aas
xlat
in
in
ljmp
ljmp
in
xlat
cmp
xorb
test
into
in
lret
into
jecxz
aaa
in
in
test
int
fldl
lret
xlat
or
jmp
cmc
rcr
fcmovnbe
repnz
fmul
into
clc
loop
stc
mov
sub
aad
decb
ss
out
in
cmp
jmp
cli
out
fchs
clc
repz
lret
out
xor
sub
enter
jmp
cld
repnz
or
lock
test
mov
enter
aad
aam
sbb
std
dec
loopne
aad
lret
loopne
mov
hlt
not
in
out
in
stc
fcomi
cmp
int
stc
mov
mov
mov
in
idiv
xchg
lret
jecxz
ror
fnop
ret
repz
cmp
rcr
sti
idiv
fucomi
lds
rcl
xor
cs
rolb
call
filds
out
jecxz
jmp
xor
ljmp
iret
jmp
fimull
test
test
shl
cld
loopne
hlt
icebp
hlt
loop
jmp
cmc
rorb
fstl
cmp
cmp
fadd
xor
ds
fldl2e
cld
jecxz
sbb
rorl
into
repz
lret
ljmp
rcr
neg
xchg
orl
inc
repz
int
das
out
aam
repnz
ret
fldln2
leave
lret
in
lea
out
fcmovne
fucomp
fdiv
into
sar
neg
jmp
out
mov
int
xchg
lret
ret
repnz
cld
clc
cmp
shl
sti
out
in
jecxz
iret
mov
int3
jecxz
xchg
idiv
shr
hlt
in
cli
xlat
in
aad
in
cli
flds
xchg
in
out
xor
in
int3
aas
into
clc
aad
out
addl
nop
addb
les
jmp
sti
cmp
ds
repnz
ret
aas
in
in
into
out
fsubr
in
mov
mov
out
shll
int
in
fcmovnbe
loopne
lock
mov
mov
mov
lret
int
cmp
sti
cld
repz
cmc
loope
in
lret
cmp
idiv
roll
cld
out
loop
shr
cmc
call
xlat
lret
cmp
out
cmc
ds
loope
mov
mov
mov
lret
addb
lret
xor
vshufps
fidivrl
iret
aad
fadds
sub
mov
in
xchg
jmp
xlat
leave
aad
std
fdivrs
roll
mov
xchg
in
xor
cmp
xor
cld
lock
in
div
sti
in
test
jmp
mov
xlat
xlat
ljmp
sarl
filds
in
jmp
ljmp
in
das
out
aam
int3
clc
sti
mul
rcr
jecxz
hlt
add
clc
rcr
push
loopne
in
cmp
fcmovne
int
rcr
idiv
xor
les
fldln2
cld
xchg
out
cmc
cmp
lds
rcl
ss
addb
xlat
loope
int3
neg
loope
xchg
in
std
aam
rol
lret
in
cmp
test
repnz
call
nop
mov
das
fld
rcl
out
repnz
shl
lock
ret
jecxz
leave
jmp
test
lret
fnsave
repnz
fcmovbe
fabs
test
xlat
mov
inc
lock
cmc
int
clc
xor
add
xlat
cmp
add
add
add
rol
rcl
rcl
sar
and
adc
fstpt
movsl
add
lret
aaa
fdivrs
cli
ret
int3
out
leave
icebp
xchg
rcll
out
iret
idivl
out
std
int
in
xlat
repnz
mov
fcmovnu
mov
enter
jmp
out
in
divb
ret
xor
cli
imul
in
fst
in
out
aad
les
in
fsubr
xchg
mov
int3
jmp
fstp
fmul
xlat
fdivrs
and
out
or
xor
xor
hlt
loopne
cmp
jecxz
out
call
fmul
loope
xchg
mov
incl
hlt
aaa
xor
cmp
repz
fdiv
ds
xchg
sti
ret
shr
sub
lret
leave
call
fmulp
fsub
and
shl
sub
mov
in
loop
aam
shlb
faddp
cmp
aam
shl
call
repz
lret
out
out
mov
lret
popl
lds
fnsave
fcomip
icebp
repnz
test
shl
out
cld
int3
clc
call
out
jmp
cmc
mov
repnz
leave
fsubr
fidivrs
sarb
cmp
out
xchg
xor
rcr
mov
out
icebp
incb
jmp
das
fcomip
aam
in
and
cmp
jecxz
iret
ret
out
loope
test
iret
cmp
enter
fsqrt
test
jmp
out
addb
repz
int
cmc
in
cmc
enter
addl
out
std
jmp
xchg
hlt
cmc
test
fdivs
xor
jmp
not
not
cmp
rol
test
sti
aas
test
fsub
lret
lock
hlt
xor
cmp
fnstcw
xchg
ljmp
loopne
mov
or
int3
jecxz
std
jmp
std
out
clc
xlat
cmp
ret
xchg
cld
neg
idiv
icebp
vfrczps
clc
xor
fsubr
out
cli
incb
cli
cmp
xor
addl
out
fnstcw
jmp
call
sti
shl
adc
cmc
out
out
ficoml
shll
out
aaa
shl
ss
aam
repz
cmc
loop
add
jecxz
call
xchg
xchg
repz
cld
not
lock
test
in
ljmp
out
lret
lret
orb
leave
out
out
shl
in
sbb
sbb
ror
and
in
mov
testb
xor
into
sti
addl
int3
xchg
jmp
ljmp
fnstcw
jmp
std
loop
fsubp
fadds
out
into
xchg
shl
std
jecxz
ror
aaa
cld
fxch
ror
cmp
into
fcom
sub
enter
loopne
test
lret
xchg
adcb
hlt
in
xor
aad
stc
hlt
and
xchg
xlat
xabort
in
int
repz
shl
cmp
fnstenv
cmc
repz
addl
lea
repnz
rcl
cmp
cmp
shl
into
fdiv
not
shl
fcmovnbe
fmulp
mov
addl
cmc
cmp
aad
lock
mov
leave
or
fsubrp
xor
icebp
out
out
sar
test
out
std
hlt
call
test
test
cmp
fnstsw
cmp
xlat
in
out
aas
lock
mov
in
std
out
shrl
in
enter
jmp
jecxz
roll
mov
incl
repnz
lock
test
fidivl
iret
cmp
jmp
out
aad
xchg
cld
in
fistl
das
fcmovb
out
aam
ror
ror
sar
mov
orb
addb
clc
ret
in
xor
iret
shl
cld
out
ds
icebp
int
test
out
out
fdivrp
out
xlat
ljmp
mov
cli
fmul
sarl
fidivrl
stc
ret
sbb
addl
jmp
neg
aam
shl
rcr
out
ret
in
mov
mov
out
jecxz
xchg
fsubp
shl
xor
cmc
sti
fdivp
lock
icebp
fsubp
in
std
sti
xchg
jmp
xchg
cmc
iret
jmp
hlt
into
cmp
neg
cmp
std
mov
xor
add
cmp
jmp
rcl
rcl
fstp
rcr
cld
cmp
jmp
xchg
enter
jle
movsl
add
imul
or
fndisi(8087
test
lret
hlt
int
fsqrt
xor
out
sarb
loop
jecxz
fcmovnu
shr
fld
clc
fucomip
int3
loop
shl
in
xor
int3
aaa
sti
jmp
lret
ljmp
imul
lret
loopne
std
loop
aad
loope
sti
hlt
hlt
out
iret
stc
in
int
ds
cmp
fcmove
hlt
ret
neg
mov
lock
xchg
xchg
in
fbstp
out
rol
shr
shr
xor
in
repz
ror
in
ljmp
int3
out
lret
fcmove
iret
std
repnz
in
ret
loopne
sar
stc
jecxz
out
int3
loop
les
leave
int3
cmp
repz
cmp
lret
loope
sar
in
loopne
mov
int
loop
xchg
xchg
xor
repnz
cli
cli
call
sbb
hlt
std
and
addb
ror
out
in
jmp
shr
jmp
out
addb
ret
cmp
repnz
adcb
xor
rol
div
rcl
lret
ljmp
ljmp
lret
mov
cmp
aaa
enter
repz
lret
into
ret
fcmovbe
idiv
stc
out
sti
int3
in
loopne
jmp
lock
hlt
int
out
cmp
xor
iret
cmp
rcl
addl
clc
in
rcr
lds
lret
cmp
icebp
enter
rol
aad
iret
xlat
clc
repz
aad
mul
mov
std
mul
loope
out
fsubr
int3
cmc
rcl
aas
test
std
call
mov
or
in
call
out
xor
cmp
std
icebp
out
mov
xchg
xchg
in
leave
rcl
fucomp
stc
lock
ret
and
repnz
aad
loopne
test
xchg
xchg
out
int
jecxz
cli
ror
shl
aas
clc
call
clc
mov
jecxz
into
out
nop
xchg
xlat
out
call
fistpll
sar
lret
out
ret
aaa
rcl
fiaddl
mov
faddl
ljmp
in
aad
loope
fst
cli
in
aam
repnz
fsub
fcmove
in
xor
xor
in
clc
sarl
ljmp
out
rcr
loop
clc
in
xchg
adcb
xor
in
int3
clc
cld
cli
repnz
mov
xlat
cmp
stc
fdiv
xchg
in
loopne
ret
xor
fmul
enter
ds
jecxz
call
ret
leave
mov
nop
nop
aam
out
lock
fprem
icebp
jmp
rcr
sbb
stc
orb
mov
in
fdivs
xlat
rol
shl
cmp
cmp
aam
shl
cmp
clc
loope
out
icebp
mov
mov
int
das
xlat
cld
in
out
enter
repnz
fnstsw
ds
rorb
xchg
out
ljmp
ret
in
fdivr
in
cmp
shl
icebp
fisttps
fstp
fiaddl
xor
ret
iret
xlat
cmp
lret
lock
sti
mov
cmp
lret
int
lret
into
out
iret
adcb
int3
cli
jmp
int3
fdiv
out
into
ds
cmc
aam
mov
mov
std
in
into
call
enter
stc
jmp
sarb
loop
in
aam
lret
xchg
mov
lret
out
lock
xlat
xor
out
cmc
int
cmp
repz
cld
cmp
ret
in
xchg
xchg
iret
lret
enter
sarl
test
rorl
mov
test
lret
ror
icebp
rcl
in
cli
fnstcw
iret
cmp
cmc
out
loopne
repz
sti
rolb
in
out
jmp
hlt
xor
aaa
enter
cmp
test
sti
enter
mov
jecxz
fisttps
out
sarl
fcom
fcmovbe
rcl
test
clc
jecxz
xchg
int3
mov
in
loop
xor
imul
repz
out
loopne
stc
cld
call
clc
vpmaxsw
mov
xchg
lret
shl
xor
xor
ds
int3
aas
rolb
in
stc
orl
out
aam
std
cmp
xor
out
fcmovbe
sar
fsubrp
lret
cld
loopne
fisttps
out
clc
cld
cld
rcl
idiv
cld
neg
ret
repnz
fcmove
sti
test
dec
in
mov
jmp
int3
enter
lret
int
stos
test
rorl
leave
fsub
jle
movsl
add
loop
int3
aam
ret
jecxz
cmc
out
out
aaa
xorb
addl
jecxz
out
stc
mov
in
ror
out
int
ljmp
iret
xlat
shl
test
xlat
filds
icebp
in
adc
lock
rcl
fsubr
out
in
call
cmp
not
not
mov
into
mov
into
lret
loopne
sub
xor
fxch
rcl
stc
cld
test
mov
mov
ljmp
loopne
lds
jecxz
fmul
cmp
rcr
testb
xchg
xchg
aam
leave
in
cmp
out
out
leave
or
cmp
sti
sbb
in
stc
icebp
shl
test
hlt
aad
cmc
shr
out
cmp
lret
jecxz
icebp
jecxz
ret
sbb
clc
mov
test
int
int3
fucomi
loope
fdiv
faddp
ds
in
in
loop
xchg
ljmp
int
lret
clc
cmp
roll
fsubr
ljmp
jecxz
out
lock
out
cmp
sar
cli
ds
call
test
loopne
rcl
xor
divb
repnz
clc
lret
int3
cld
cli
hlt
aam
cmc
loopne
std
stc
into
int
int
xchg
xor
ret
lret
repz
jmp
rcr
int3
loope
xchg
addb
faddp
jmp
addl
leave
lret
xlat
lock
out
clc
cmp
ret
rol
mul
enter
fiaddl
jecxz
enter
divb
into
fcmovnb
sar
icebp
fiaddl
ljmp
call
repnz
cmp
int
shl
aad
flds
ljmp
repz
jmp
in
mul
repnz
fcomip
out
dec
out
adc
cld
sub
loop
fdivp
iret
rol
cmpb
fidivrl
mov
xlat
lret
orb
out
out
xlat
stc
stc
int3
iret
sarl
loope
sub
ffree
mov
loopne
cld
in
lret
test
in
aaa
jmp
fnstenv
lret
rol
inc
mov
rcr
lock
in
icebp
cli
aaa
out
clc
cmp
ret
addl
xchg
out
out
out
ljmp
in
hlt
into
lret
fsubr
loopne
stc
sbb
jmp
into
enter
sarl
iret
repnz
cli
mov
loope
xchg
fxch
sar
ror
loope
cmp
ret
shr
lret
jmp
cmp
out
iret
loope
hlt
add
in
iret
flds
xchg
in
jecxz
cs
stc
xor
int
cli
ret
rolb
mov
into
icebp
cli
test
aad
in
in
fcmove
ljmp
cli
aam
out
aas
leave
jmp
jecxz
rcr
in
shl
xor
cmp
hlt
rcl
push
icebp
aas
rcl
aad
sti
mov
fisttpl
lret
div
in
in
aam
pushl
vpsubw
jmp
orl
xor
test
out
icebp
and
sub
mov
loope
out
xlat
icebp
hlt
enter
fdivr
fmul
rcl
shl
icebp
cld
cli
jmp
or
fistl
out
cli
fdivrs
xor
mov
in
loope
call
jmp
cs
stc
lock
cli
not
cmp
loop
jmp
mov
clc
clc
ret
xchg
hlt
sbb
hlt
ljmp
lret
aad
out
test
out
loop
xchg
xchg
sub
icebp
cmc
ljmp
icebp
loop
sbb
mov
cld
jecxz
shll
in
neg
cli
sar
clc
fprem1
sti
fcmovb
call
in
mov
xchg
out
neg
fcmovnb
ljmp
jecxz
in
test
leave
imul
nop
mov
call
leave
int
out
shr
out
fdivr
enter
hlt
fildl
shl
nop
xorb
jecxz
ss
sti
loope
jecxz
aad
out
cmp
enter
movb
jecxz
mov
mov
lea
add
mov
mov
mov
jmp
int
rcl
fcmovu
int
xchg
daa
ljmp
jmp
jle
repnz
lock
cmp
aaa
rol
loop
addl
jmp
stc
out
or
aad
aam
shll
ljmp
imul
shl
rcl
mov
fdivr
fucom
mov
sar
jmp
lock
fnstcw
out
ljmp
in
xchg
fucomip
ss
jmp
cmp
cmp
loop
repnz
ffree
test
icebp
lea
cmp
repnz
in
shl
jecxz
enter
jecxz
xchg
cmp
iret
imul
int3
fmul
fadd
cmp
ds
jmp
in
test
out
or
div
loope
ljmp
aaa
rcr
cmc
test
les
jmp
mov
rolb
sti
leave
clc
fmul
cmp
cld
shl
out
sti
hlt
test
testl
shl
hlt
xor
cmp
leave
in
xor
xor
sar
xchg
incb
jecxz
mov
ror
xor
lock
cmp
xlat
into
out
rolb
ljmp
out
cld
mov
clc
xor
aam
fdivp
clc
into
xlat
idiv
cmp
stc
std
out
popl
idiv
aad
not
aaa
cmp
std
lock
xor
mul
lret
out
ror
mov
xlat
cmp
leave
not
xlat
sub
sbb
fildl
filds
loope
into
iret
cmc
icebp
int3
mov
leave
shl
jmp
in
aad
fcmovnu
fsubp
int3
iret
fucomi
cli
rolb
imul
rcr
fcmovbe
lret
aas
shl
stc
ds
iret
fldl
loop
xchg
cmp
xchg
rol
int3
repz
ds
sar
clc
ffree
cld
cld
in
loope
jmp
mov
cmc
jmp
xor
fcmovne
int
repz
cmc
test
filds
mov
ss
into
xor
fsub
fdiv
loopne
iret
in
hlt
fdivp
loope
std
xlat
sub
iret
rolb
int
leave
aam
lock
cmpl
stc
fsubr
loopne
cld
shr
in
in
jecxz
repz
cmc
leave
into
in
xlat
cmp
fcomp
sti
call
call
ljmp
shrl
or
clc
fld
out
fldl
filds
shr
xchg
aaa
int
xlat
sub
call
loopne
hlt
fidivrl
cmp
mov
fmul
dec
sar
out
test
ret
in
cmp
cmp
loop
ret
sar
incb
int
fsts
loope
mov
idiv
aam
testb
ret
repnz
xchg
test
sti
call
xchg
enter
ss
xor
div
ds
in
jecxz
add
ret
out
loop
in
out
jmp
rol
fcom
sar
cmc
cld
cmp
enter
into
std
icebp
cs
in
in
lret
fcmove
idiv
aad
cmp
repz
out
xchg
ret
mov
fstp
std
icebp
nop
shl
cli
clc
sti
in
cmp
jecxz
cld
test
fucomp
fisttpl
test
jecxz
loopne
call
rol
shl
cmp
mov
int3
loope
in
in
std
mov
nop
lret
iret
in
test
lret
loop
out
ret
sti
loope
mov
lea
out
xchg
enter
sti
cld
cmp
xlat
int3
rcr
ds
out
aad
mov
ror
xor
repnz
lret
in
leave
fcomp
cmp
clc
adc
in
jmp
in
mov
dec
imul
cmp
in
fld
loope,pt
lock
iret
roll
out
out
lock
aad
out
cmp
icebp
aaa
cmp
fdiv
hlt
cmp
aam
ret
ret
in
loope
fistl
sarb
iret
rcl
xor
clc
les
fucomip
test
jmp
ljmp
lret
xor
aam
jmp
iret
out
cmp
jmp
test
mov
int3
mov
ret
jmp
sarb
into
cmp
cli
out
test
or
mov
nop
xor
loopne
ret
icebp
out
sar
in
mov
mov
xor
add
mov
jmp
mov
fst
fxch
jg
lods
loop
xchg
jb
cmpsb
in
jle
movsl
add
fadd
ds
repz
jmp
out
vpsubusw
repnz
or
cmp
cmp
in
repnz
out
std
cmp
testb
ljmp
les
enter
cmp
cli
out
fcomi
aam
loope
in
mov
testl
ret
call
shr
ret
test
xlat
test
mov
xchg
std
in
xchg
mov
test
jmp
call
iret
repnz
fcmovb
fdivrs
test
in
int3
mov
out
shl
fucomip
xchg
sar
aaa
aam
jmp
in
into
shl
aad
cmp
out
stc
int3
sar
shr
ret
enter
xor
in
int3
in
in
aas
ffree
loope
jmp
sbb
out
in
sti
aas
into
sar
cld
cld
xlat
clc
hlt
ljmp
out
mov
aaa
repnz
cmp
out
or
aad
div
mov
jecxz
enter
shl
loope
sar
shl
cld
cmp
adc
fadd
lock
loop
fsub
cli
enter
shl
out
int3
out
out
in
icebp
enter
sti
jecxz
shl
fucom
in
into
cld
into
int3
in
div
int
cmp
repnz
leave
shl
xlat
aad
xlat
ret
or
shl
nop
repnz
shl
out
ror
in
cmp
call
shl
roll
fsubr
nop
leave
out
in
fisttpll
in
hlt
fcomi
cli
ror
testb
aam
jecxz
shl
out
shl
cs
sub
repnz
xlat
out
ret
aad
mov
push
rcll
int3
sti
shll
lret
in
clc
fldl
int
popl
in
xor
in
in
xlat
cmp
int
fistpll
cmp
std
idiv
mov
aad
out
fsub
jmp
rol
lret
cld
int
lret
aas
out
fdivr
cmp
xor
ljmp
iret
call
xor
xor
hlt
xor
ffree
xchg
mov
loope
testb
in
loop
mov
cmp
lock
into
out
loope
rol
loope
loope
fsub
leave
jmp
in
into
xchg
in
into
out
jecxz
aad
cmp
clc
iret
sbb
loop
sti
xchg
jmp
rcr
lea
iret
sti
out
ror
iret
ror
fst
test
fmulp
lret
mov
in
sar
mov
fnop
out
aaa
aaa
xor
rcr
fadd
ds
in
mov
lock
std
xchg
xchg
test
int
cmp
sti
cmp
iret
ss
roll
cmc
loop
adcl
xor
rol
iret
out
sar
loope
out
int3
lret
stc
in
xchg
cs
idiv
fsubp
out
loope
in
loopne
out
faddl
icebp
flds
into
sub
call
int3
jmp
cmp
stc
fcomip
aad
cld
test
cli
in
lret
out
xchg
xor
cmp
shl
xor
xchg
mov
cli
nop
test
ret
out
clc
lret
out
sbb
cmp
ret
int3
int
loop
std
test
ret
enter
fst
cmp
hlt
xor
fsub
cld
loope
sbb
xchg
loop
fsubrp
lret
xor
xor
xlat
lock
aas
xchg
jmp
enter
fimuls
das
xor
cli
jmp
jmp
repz
cld
aad
test
leave
std
sti
fucomp
lret
divl
rcr
lock
std
fcomip
repz
imul
aam
test
fprem
mov
ficoms
out
xor
aad
in
in
loopne
fildl
ljmp
out
cli
into
xchg
test
xor
lret
cmp
hlt
ror
icebp
ljmp
aam
mov
fucomp
fimull
adc
ret
out
fcmovu
ljmp
test
fimull
xlat
in
loope
cmp
shl
jmp
cmp
std
fcmovnb
fsubp
fiaddl
std
or
call
xchg
xor
enter
in
repz
fcmovbe
xlat
jecxz
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
jmp
rol
lret
aad
mov
pop
int
jle
movsl
add
cld
rcr
mov
or
jmp
mov
enter
out
loop
notrack
adc
mov
fsubr
fabs
incb
div
xor
ljmp
into
cmp
loopne
fisttpll
ret
iret
mov
in
cmc
sub
jmp
fyl2x
cmp
jecxz
std
ret
out
test
popl
ror
iret
int
xor
cmc
in
fcmovnbe
std
fdiv
shl
aad
xor
jmp
clc
cld
in
ljmp
out
in
aad
int
xor
fdivr
cld
in
aam
xlat
xchg
out
addb
icebp
xchg
rol
ljmp
jmp
testb
cmpb
test
stc
fxch
std
iret
and
lret
into
lret
fucompp
xor
les
decl
jmp
out
sub
test
sti
xlat
fcomi
fdiv
xlat
cmp
cmc
clc
idiv
enter
sti
test
cmc
shll
cli
fcmovnbe
aad
jmp
icebp
fdivrp
ret
xor
out
out
mov
out
out
in
hlt
cs
stc
enter
sar
rcr
jecxz
repnz
hlt
ret
out
int
out
jmp
filds
aam
enter
shl
fdivr
in
and
stc
ljmp
lock
bnd
enter
cmp
fucomi
call
fdivp
sti
repz
hlt
fcomi
out
jmp
fsubp
lock
stc
ss
lock
aaa
loopne
test
rcl
repnz
enter
xchg
mov
xchg
int
repnz
test
out
repz
cld
iret
in
loope
mov
mov
enter
xchg
out
shr
fcmovnu
cmp
stc
leave
div
call
cmp
mov
loopne
incl
cmc
in
loopne
xor
out
in
cmp
sti
rcr
fidivrs
cmc
xlat
adc
mov
jecxz
mov
xchg
aad
icebp
iret
cmp
ror
out
in
repz
in
lret
out
nop
leave
mov
mov
out
xor
loop
out
ffree
clc
out
aas
div
std
xchg
rcl
call
call
sub
cmc
sti
out
in
hlt
div
lock
sar
in
ljmp
lret
int
aad
ljmp
cmp
jecxz
fdivp
lock
mov
cld
les
mov
jmp
std
ffree
aam
cmp
fst
ret
fsubp
out
xlat
leave
leave
in
out
mov
clc
leave
rcr
cmp
cmp
cmp
ljmp
icebp
out
aam
shll
jmp
cli
fidivrl
ss
aad
cld
test
fisttpll
mov
fyl2xp1
cli
not
out
cmp
std
int3
in
aas
loopne
rorl
sar
jmp
jmp
cmp
fcmovnu
repnz
int
iret
sti
in
cmp
ret
out
jecxz
into
sbb
jecxz
sub
clc
jecxz
int3
enter
jmp
mul
loop
roll
sti
fldl
push
rol
out
xor
cmp
lret
out
sti
in
ret
out
cmp
loope
nop
fsub
loopne
rclb
xlat
repz
sar
out
idivl
xor
enter
loopne
icebp
fldln2
xchg
fdivp
hlt
xlat
in
sarb
iret
fst
fldl2e
aam
loop
add
enter
icebp
jecxz
icebp
std
in
loopne
aam
int3
vpsubusw
int
repz
shl
ret
aad
sub
xchg
call
xor
sti
lret
into
cmp
xchg
fucomp
lret
leave
fmull
rcll
in
in
ds
xor
adc
ret
filds
cli
into
mov
test
out
jmp
cmp
cld
rcl
loop
faddl
xor
out
jecxz
aad
xor
out
iret
fxch
mov
lret
in
ret
cmc
fistpll
lret
lret
out
xor
jecxz
stc
xor
shll
fcmovu
icebp
repnz
sti
icebp
xlat
fcmovne
fnsetpm(287
out
movl
not
lret
shl
xor
xchg
cmc
testl
icebp
mov
rcl
lret
cli
stc
repz
fdiv
repnz
xlat
cmp
cmc
testb
mov
mov
jmp
aam
int
aad
fldt
sbb
je
jle
movsl
add
cld
mov
mov
icebp
lock
call
cmp
or
rcl
cld
std
testl
xchg
das
lret
in
sti
aam
cld
int
fsincos
cmp
ffree
fdivr
mov
sti
rolb
into
lock
jmp
call
cmp
adc
test
cli
jmp
lret
ljmp
into
into
aaa
in
hlt
cmp
shr
or
in
test
aad
fdivr
mov
xor
neg
int3
repz
repnz
rcl
int3
cld
xchg
addb
ret
jmp
enter
repz
imul
cli
repnz
repnz
cmp
ret
cld
fucomi
lret
shr
mov
xor
out
stc
ljmp
out
fnstcw
sti
fsubr
enter
fndisi(8087
xchg
jmp
repnz
out
neg
aas
cld
in
aas
out
std
in
rcr
test
icebp
in
mov
in
lret
sti
std
fnstcw
aaa
into
repz
lock
ret
std
mov
mov
out
leave
aad
sub
cmc
faddp
loop
cmp
xlat
adc
mov
mov
out
icebp
ror
in
ror
aas
neg
fucomi
hlt
lret
cmp
ljmp
sti
hlt
leave
call
xchg
loope
out
loopne
sub
xor
sarb
cmp
ret
sbb
in
nop
mov
int3
movb
cmp
xlat
cmc
loopne
ds
shl
stc
loop
add
loope
xchg
xchg
in
xor
aaa
aam
cmp
neg
fcmovu
cld
aas
xor
xchg
mov
nop
out
in
roll
cli
cli
rcl
icebp
out
hlt
hlt
shl
aam
ret
aas
aad
call
mov
addb
icebp
sub
out
xor
cmp
lret
fabs
test
test
mov
loop
in
loop
mul
lock
jmp
and
repnz
addl
adc
into
not
fcmove
rcr
xlat
hlt
fsubrp
shl
loopne
cmp
out
cmp
neg
leave
lret
fxch
loope
cmc
out
rol
jmp
cmp
xlat
inc
icebp
sbb
in
cli
loopne
fcomp
fdivrp
cli
xchg
stc
fstp
out
icebp
lret
lret
icebp
cmp
in
ljmp
test
cmp
loopne
addb
decl
iret
repnz
sar
fiadds
test
lock
fsubp
out
idivl
ret
cli
sti
clc
ds
cli
cmp
test
jecxz
aad
leave
jecxz
icebp
fdivp
lret
mov
repnz
cmc
hlt
cmp
int
iret
stc
cmp
xchg
ret
roll
loopne
shl
out
jmp
icebp
repz
repnz
aam
fcomi
loope
xchg
clc
in
mov
in
fimuls
cld
lock
jmp
cmp
sarl
shl
xlat
stc
cld
lds
jmp
xchg
aam
das
repnz
lret
hlt
out
cmp
fcmovnu
hlt
aad
into
sub
icebp
sub
lret
repz
ljmp
into
test
aad
cli
fisttpll
dec
incb
hlt
cmp
int
idiv
jmp
loop
ret
loope
ds
mov
in
xchg
xchg
xchg
loopne
out
in
lock
into
in
xlat
call
addb
sbb
fmuls
call
aam
cmp
out
in
aas
sub
in
incb
and
std
xchg
loope
not
int3
ret
ljmp
shl
int3
cmp
aam
cli
out
fndisi(8087
rclb
fidivrl
imul
xor
loope
int3
into
test
cmc
in
ffreep
fsubr
int
mov
fisttpll
ljmp
rcr
fsub
loop
cld
cmp
ficoml
ror
cmp
jmp
into
cmc
int3
aam
clc
idivb
mul
fidivrl
mov
xchg
out
out
fnclex
lret
in
xor
cmp
loopne
loopne
fcomi
call
mov
std
lock
test
xor
xlat
das
out
div
rcl
test
ret
ret
leave
leave
in
mov
loop
notb
xor
into
xor
jecxz
xor
fxch
sub
test
xor
leave
call
ds
aam
iret
int3
fst
outsl
fmull
sahf
push
xchg
fwait
sti
jle
movsl
add
jmp
stc
xor
sti
call
ret
lock
sti
std
lea
xchg
hlt
ror
aad
leave
fsubr
call
fst
call
cmpb
rcr
and
fcmovne
jecxz
enter
mul
shr
xor
std
aam
xor
std
sar
out
std
hlt
fisttpl
in
call
xor
iret
hlt
sarl
shl
hlt
test
cld
in
fucomi
loope
out
mov
jmp
out
int3
div
aad
xor
repz
loop
loope
mov
fmuls
icebp
in
out
ss
out
in
out
leave
out
aad
cmc
clc
fcomip
lret
mov
in
leave
test
hlt
into
jecxz
fnstcw
in
in
xor
int3
adc
hlt
vpaddusb
lds
enter
xor
icebp
neg
icebp
in
repnz
icebp
loop
fsubp
cld
neg
int
jmp
jmp
cmp
stc
repz
cmp
les
mov
icebp
xchg
out
xchg
xorb
in
xor
ror
out
cmp
into
in
xlat
fcom
mov
out
int
jmp
xor
ror
enter
aad
xlat
xchg
xchg
call
lret
fistl
icebp
in
icebp
xlat
fdivrp
cmp
rol
iret
addb
leave
loopne
xchg
iret
jecxz
lret
div
clc
ss
cmp
loope
shr
ret
xchg
aas
jmp
jmp
mov
in
in
lds
neg
iret
ds
loopne
into
aad
addl
call
loopne
mov
iret
xchg
hlt
xlat
jmp
imul
enter
stc
lret
test
in
shl
clc
cli
xlat
imul
nop
jmp
nop
in
in
shl
ret
out
fsubr
out
rcr
ret
fsubr
fadds
out
mov
rorb
in
leave
aam
ds
loopne
loopne
lret
mov
jecxz
sti
jmp
aam
shl
fidivrl
cmp
mul
fcmovbe
ljmp
fadd
fcmovu
ljmp
hlt
mov
int
ret
fnsetpm(287
cs
add
hlt
loopne
xchg
in
fdecstp
clc
ljmp
out
xchg
lret
cmp
neg
clc
xor
jecxz
repnz
jecxz
fld
aam
in
mov
fcmovu
mov
call
into
out
xor
lret
roll
incb
test
loopne
loop
rcr
in
leave
icebp
repz
sti
fstp
aam
cmp
cmp
jmp
fmul
xchg
sub
ror
les
xor
stc
cmp
std
rolb
out
fldl
leave
xlat
in
lock
jmp
fistpll
std
fisttpl
incb
clc
clc
ljmp
out
cld
cmp
stc
out
test
in
roll
jmp
int3
cmp
cmp
cmp
or
faddp
in
nop
out
lret
loopne
rcl
cmp
out
int3
sar
call
test
call
loopne
mov
int3
jmp
inc
rol
lds
icebp
aaa
fstpt
cmp
mov
enter
int3
call
aam
cmc
test
incb
out
aad
leave
cld
iret
jmp
in
ror
das
stc
hlt
out
clc
icebp
cmp
hlt
bnd
ret
test
cmp
out
xchg
or
xchg
lret
into
shrb
in
icebp
std
xor
and
out
iret
aad
enter
mov
xor
into
call
sarl
shr
test
loopne
std
loope
hlt
loop
or
icebp
out
enter
fmul
xlat
loope
aas
loop
cmc
ret
repz
cmp
int3
in
sti
jmp
aam
cld
icebp
repnz
rcr
loope
cmp
repnz
mov
idiv
cld
jmp
xchg
shl
clc
cmp
int
in
xlat
cmp
roll
out
div
loope
cld
int
out
jmp
out
xchg
icebp
aaa
shr
vpaddd
lret
idiv
cmp
in
cmc
cld
push
test
loop
int3
shl
fsubp
xlat
shl
aad
out
dec
fdivl
fdiv
ret
lret
dec
loop
repz
rorb
icebp
xor
cmp
jmp
ret
xlat
int
fstp
cltd
sbb
mov
movsl
add
into
in
lret
xor
shl
rcl
faddp
aam
mov
in
mov
out
icebp
xor
aaa
out
into
out
fcmove
fildl
out
int3
mov
into
iret
in
mov
or
das
int3
xlat
out
aam
sarb
into
test
out
idiv
test
std
ljmp
xor
rcl
loopne
icebp
shl
rcr
fiaddl
enter
test
out
jmp
loop
repz
fdivr
ljmp
fsubrp
in
jmp
into
test
into
jmp
call
ss
clc
cmp
call
mov
lock
xchg
add
aaa
iret
int
sar
int3
xor
aam
xor
test
call
shll
int
in
icebp
fnstcw
stc
sar
repnz
enter
lret
mov
xlat
std
cmp
cmp
out
int3
xor
rolb
fdivr
fucomp
popl
sub
ljmp
rcr
in
imul
call
loop
enter
aad
clc
shl
shl
jmp
ljmp
std
fimull
leave
xchg
jecxz
aad
clc
stc
mov
ljmp
lret
aam
out
aad
repnz
ret
ljmp
enter
cmc
leave
cld
ss
ljmp
shl
cld
clc
lret
jmp
xchg
ror
aaa
cmp
call
clc
cmp
testl
fisttps
nop
out
in
jmp
stc
mul
into
in
loop
fcomip
loope
stc
fadd
cli
sti
cli
loopne
fiaddl
out
out
sti
xlat
aam
hlt
cmp
sti
mul
in
repnz
rorl
iret
cs
out
sti
cmc
jmp
xlat
fidivrl
ret
lret
shr
sti
mov
lret
sub
aad
fdivrl
dec
ret
aam
out
out
xchg
mov
xor
sti
cmp
shl
sar
ffreep
faddp
xchg
lret
mov
mov
in
lret
loope
or
les
fcom
cmp
lock
adc
in
fdiv
int3
add
addb
into
call
aam
fxch
mul
jecxz
aas
rcr
mov
in
enter
or
jecxz
out
icebp
lock
vcmpss
test
int3
cli
and
icebp
sbb
out
in
repnz
xor
cmc
stc
sarb
loopne
add
rol
jecxz
sbb
mov
ljmp
jmp
cmp
rcl
fdiv
aam
shl
rol
out
fiaddl
int
aad
xor
sbb
cld
xor
stc
xchg
lea
cmp
lock
cmc
lret
out
fadd
aad
test
int3
int
mov
ljmp
int
ds
std
cli
xor
roll
loopne
ljmp
shlb
cmc
xlat
cmp
in
aaa
std
in
ljmp
xchg
aad
mov
cli
or
repnz
cmp
rol
cmp
cli
iret
fmulp
cli
ret
div
in
call
enter
in
loop
jmp
cmp
idiv
in
rolb
shl
in
mov
jmp
test
xor
xor
in
or
sarb
icebp
test
ret
mov
int3
cld
lock
out
loop
lret
out
lock
repz
iret
ret
clc
addb
orb
xchg
fmul
leave
in
aam
aaa
cli
call
fldln2
out
repz
aad
ret
xlat
fiaddl
not
in
out
enter
cmp
iret
out
rcl
fdivrp
loop
add
enter
cli
ljmp
in
repz
loope
rcr
repnz
out
hlt
mov
hlt
push
ljmp
adc
clc
xor
cmp
cmp
cmp
out
loop
loopne
fcmovb
in
stc
cmp
xchg
or
loopne
int3
xlat
shl
aam
jmp
cmc
into
fsub
clc
out
loopne
in
call
out
mov
aam
ret
leave
ss
test
add
add
clc
xor
add
jmp
rol
xlat
int
arpl
mov
sbb
test
movsl
add
loopne,pt
in
flds
in
loop
aam
add
std
fidivrl
fidivrs
rcr
shl
out
mov
out
test
cld
mov
out
xor
ss
cmc
sti
icebp
call
jmp
fsts
xchg
xchg
jmp
in
into
repnz
sti
int3
adc
call
loopne
iret
mov
enter
jmp
ror
aam
clc
repz
ret
repnz
or
sti
out
fnsetpm(287
out
jmp
xlat
loop
mul
shlb
cmp
lret
in
xlat
ret
ret
out
fisttps
loope
jmp
icebp
int3
rcl
rcl
jmp
divl
loop
fcmovnbe
loop
mov
ret
test
shr
ffreep
cs
xor
lret
out
jmp
in
jecxz
sar
in
in
sti
stc
mov
out
mov
xchg
lret
shl
in
cmp
into
xor
lock
loop
enter
lds
fisttps
vpsubsw
jmp
jmp
test
in
xchg
leave
call
incb
enter
shl
repz
xor
not
xchg
idiv
call
ljmp
in
aad
xor
out
shl
mul
hlt
rol
loopne
fcom
mov
test
in
in
aaa
out
cmp
cld
jmp
aad
fldl
fldlg2
lret
mov
mov
cld
cmc
ss
cmp
cmc
cmc
ret
sar
cmpl
hlt
into
icebp
shr
lds
imul
call
loop
stc
out
cmc
cli
stc
jmp
loopne
jmp
icebp
aaa
icebp
xor
cld
cmp
fsub
ds
out
div
cld
fldpi
in
in
mov
int
out
test
out
jecxz
int3
ds
lret
cmp
test
loopne
std
out
test
lret
ret
jecxz
cmc
cmc
fcmovu
cmp
repnz
aad
repnz
ljmp
in
xchg
sub
xor
cmc
enter
int3
jmp
aad
aas
jecxz
fcomi
sti
fistpll
or
xchg
mov
cmc
xor
int
call
cmp
jecxz
test
xchg
ds
out
mov
xchg
xor
hlt
ljmp
cmc
xor
mov
leave
stc
sar
call
lret
enter
mov
shl
loope
cmp
cli
ljmp
iret
out
ror
hlt
test
aad
sti
fsub
repnz
test
rol
leave
test
repnz
out
sub
neg
aas
faddp
cmp
xchg
in
std
mov
std
out
leave
loopne
lock
cmp
xor
rcr
stc
loop
int
aam
adc
loop
fcmovu
xlat
jecxz
call
lock
ljmp
cmpl
rcr
mov
enter
xchg
jmp
in
sub
jmp
test
ret
and
jmp
out
icebp
loopne
xchg
shl
xorb
vpaddusw
imul
roll
clc
shl
flds
leave
sub
lock
enter
rcl
in
leave
cmc
hlt
addb
incl
mov
rorb
loopne
out
out
sar
ss
sarb
rolb
lret
mov
shl
ror
aam
jmp
cmp
cmc
cmc
addb
cld
leave
ljmp
xchg
nop
ljmp
leave
sar
ret
les
mov
xlat
call
int
call
icebp
stc
fmul
cmp
iret
cmpl
shl
repz
loopne
std
xchg
in
mov
out
xchg
shl
xor
cli
xor
call
cmp
aad
sbb
enter
lret
rcr
into
xchg
adcb
aaa
imul
cld
xor
sti
les
ljmp
in
loopne
jmp
shll
aad
clc
icebp
loopne
aad
shl
loopne
fcomp
test
out
shl
into
test
xlat
lock
aam
not
out
int3
rcl
clc
std
rcr
xlat
vshufps
idiv
mov
xchg
xor
in
sub
in
fcom
shl
cmp
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
jmp
lret
ffree
fcmovu
sbb
jb
add
fwait
nop
mov
movsl
add
and
sti
out
cld
in
in
xchg
loop
icebp
in
in
iret
repnz
cmc
adc
fcomi
in
xlat
not
leave
mov
xlat
rol
std
in
ror
iret
cmp
cmp
out
fcomp
aam
loopne
int
jmp
loopne
in
leave
rol
out
repz
icebp
sti
cmp
sbb
enter
xlat
fld
std
cli
call
imul
call
jmp
ds
enter
in
in
call
ror
shrl
in
xor
ss
int3
fdivrs
fptan
and
xchg
in
incb
repz
stc
cmc
lock
in
xor
loopne
in
rcl
jmp
mov
out
loope
and
fucomp
icebp
xor
hlt
fidivrl
out
clc
cmp
cmp
test
loopne
jmp
jmp
ret
in
std
lret
lret
rcr
ret
hlt
cli
cmpb
mov
sti
mov
out
fstl
leave
in
in
jmp
sti
fdivp
rcr
mov
test
in
sub
xor
in
in
xor
fldz
fsqrt
cli
cli
cmp
cmp
test
ret
cld
cld
jmp
orl
out
int3
into
int3
clc
out
hlt
ret
loopne
xlat
lock
cmp
neg
into
xlat
std
adc
hlt
out
xchg
shll
hlt
lret
rcl
fdivrs
fsubp
sbb
mov
call
mov
xchg
loop
shll
lret
into
cmp
out
iret
into
out
fsubp
ret
and
cmc
in
out
in
xchg
icebp
out
xchg
aam
out
stc
jmp
cmp
repnz
fdivr
fcmovbe
sar
ret
fucomi
out
nop
mov
lea
xor
cmp
clc
std
rol
jmp
fildl
hlt
subl
xlat
ds
iret
cli
out
stc
ret
loopne
cmc
out
call
in
ror
shll
hlt
ss
cli
aam
in
icebp
mul
fdiv
enter
lds
test
out
rol
loope
repnz
aaa
ljmp
shl
test
jmp
cli
dec
jmp
iret
loopne
loop
repnz
cmp
stc
rcr
shr
out
into
cmp
stc
aad
lret
xchg
leave
test
int
xor
in
shl
repnz
jmp
ret
fidivrl
std
jecxz
mov
jmp
rcl
test
lea
aad
in
jmp
cmc
sub
cld
rolb
std
or
add
aad
cmc
jmp
fcomp
fdivrl
sarb
in
aas
shl
std
xlat
icebp
mov
xchg
repz
or
out
aam
cli
ljmp
out
aad
not
ret
rcr
cli
std
mov
jmp
mul
in
ret
cmc
fcmovbe
cli
out
jecxz
roll
xlat
lret
leave
stc
loopne
enter
mov
ljmp
std
cmc
shl
adc
leave
call
xchg
mov
rol
xor
cmp
fcmovnu
adc
in
cli
mov
xchg
mov
ret
adcl
xor
xlat
lock
cmp
repnz
cld
testl
in
lret
fdivrs
cmp
int3
ljmp
imul
aad
les
decl
mov
lret
iret
cmp
icebp
cmp
test
lds
loop
cmc
out
xlat
ljmp
sarb
addl
sti
fxch
in
fisttps
aad
icebp
clc
fnstcw
sbb
in
fmul
lret
clc
loopne
out
in
out
out
icebp
cli
cmp
cmp
call
add
not
filds
repnz
fucomip
aaa
jmp
jmp
out
xor
out
in
and
jmp
lret
in
shl
ljmp
xor
fmul
fidivrs
cmp
xor
mov
mov
addl
fxch
fcmovbe
cmp
rcl
cld
sar
std
jmp
test
ror
in
in
in
repz
jmp
iret
cmc
shl
in
cli
cmp
loopne
in
lock
xor
mul
in
clc
into
cmp
lock
jmp
rolb
fucom
add
jne
jmp
int
into
fst
das
inc
aam
mov
mov
movsl
add
jmp
rcl
in
sub
repnz
xor
leave
int3
fcomi
int3
fdivr
xchg
or
loop
int
in
loop
nop
int
xor
aam
ds
stc
loope,pt
fucom
xchg
neg
out
in
rcll
into
cmp
fsubr
into
rol
ror
div
cmc
add
in
hlt
loopne
xchg
cld
leave
loopne
iret
shll
jmp
into
aaa
cli
sar
and
test
out
mov
xlat
fimull
ror
ss
xor
fsubrp
iret
sti
faddp
out
jmp
loopne
cld
mov
repz
cmp
in
loope
not
shl
loope
clc
mov
xchg
lret
int
int3
aaa
int
repnz
cmp
lret
aam
not
fdivrs
mov
in
sti
icebp
loop
rol
fidivs
loopne
xor
aaa
aaa
loopne,pt
sbb
int
sar
aam
faddp
mov
enter
loope
shll
stc
sarb
lock
cmp
xlat
cmpl
jecxz
sti
clc
xlat
les
adc
into
xor
aaa
shl
hlt
iret
loopne
faddl
in
flds
lock
in
xchg
test
adc
xlat
xor
fnstcw
cmp
div
loope
loop
movl
mov
int
cli
sarb
out
idivl
sub
fsub
mov
call
ljmp
call
call
lock
in
clc
and
mov
sbb
cld
nop
lret
shl
rcl
repnz
in
cmp
cld
repz
loope
mov
enter
loope
mov
sub
aam
shl
icebp
repnz
std
iret
fdivrp
out
out
flds
xchg
ret
xlat
shl
fdivrl
into
icebp
cmp
sti
ret
incb
jmp
mov
fsub
in
shlb
fidivl
rcr
in
std
int
loop
lock
fincstp
mov
fsubr
loopne
call
sub
fnstcw
repnz
shr
fsqrt
std
test
mov
loop
sub
cmc
cmc
in
repz
stc
out
loopne
sar
lret
cs
ret
xlat
jmp
out
cmp
idiv
test
lret
or
clc
out
jmp
loop
out
leave
aam
in
xlat
xor
cmc
ss
lock
jmp
jecxz
xlat
sub
cli
in
xor
fsubrp
ljmp
fmulp
cmc
jmp
test
shr
clc
mov
xchg
decb
aam
aas
sar
in
out
int
icebp
out
fdiv
ds
fdivrp
cmc
fcmovu
cli
lret
decl
int3
fdivr
faddp
shl
shl
cmp
xlat
sti
cmp
or
xlat
fcmovnb
filds
shr
rcl
cli
in
out
not
in
sti
jmp
frndint
ret
and
jecxz
clc
imul
nop
into
lret
repz
int3
in
xor
xor
fstp
fdivp
stc
jmp
clc
mul
rol
fsub
xchg
mov
mov
mov
repnz
aam
jmp
loope
into
ret
sti
fadd
std
std
lret
fiadds
movb
fdecstp
lock
iret
jmp
sar
idiv
stc
fcmovnu
mov
xchg
repz
xacquire
ret
call
fmulp
sub
incl
fmulp
mov
in
call
movl
ljmp
aam
xchg
orb
rcr
shl
iret
rcl
rcr
xor
repnz
cmp
aad
xlat
idiv
lret
into
lret
into
imulb
in
shlb
lret
ds
std
xchg
dec
dec
rcr
and
out
xor
sub
fucomip
addl
ljmp
repnz
testb
cmp
fidivrs
hlt
loop
fsincos
std
ret
test
fisttps
sti
leave
in
loop
divb
fldl
std
out
cld
hlt
lret
fisttpl
mov
xor
shlb
xlat
int
div
rolb
idiv
mov
mov
in
xchg
fpatan
repz
lret
loope
xchg
mov
out
xchg
iret
into
in
int3
out
data16
add
je
mov
mov
pop
jmp
into
lret
fcmovne
into
fistpl
adcl
pop
xchg
jle
movsl
add
aad
xlat
fcmove
in
shr
out
loopne
xlat
test
aas
jecxz
mov
cld
addl
ret
jmp
lock
aam
shl
rol
stc
in
cli
test
jmp
rorl
in
test
int3
iret
int
flds
out
int
mov
rcl
shr
in
lret
test
xor
sar
in
mov
aad
hlt
ljmp
std
shr
fcomip
sar
int3
int
ds
cmp
out
sti
loope
aas
testl
shl
jmp
lret
cli
repnz
int
rcl
rcl
rol
jmp
in
mov
leave
in
int
pause
xchg
jmp
clc
out
clc
out
lock
ss
iret
adc
mov
stc
mov
mov
jmp
enter
fcomi
call
fnstsw
cmc
repnz
repnz
sbb
sti
leave
in
xchg
xchg
shl
sub
xor
sar
lock
into
in
fadds
in
stc
jmp
adcb
ret
aam
fcmovnb
cmp
fsub
cmp
out
xor
idiv
in
int
in
sti
jmp
loop
in
sub
in
cld
in
jmp
loope
cmp
loopne
cmpl
div
lret
out
adc
fcomip
ss
int3
test
fstp
adc
loopne
cld
jecxz
call
into
xor
out
cmp
roll
fdiv
loop
std
fcmovnu
cli
mov
sti
call
fdivs
out
test
cmp
and
sub
std
lret
sti
mov
iret
leave
lret
xor
ds
fcmovnbe
cmp
stc
cld
lock
loopne
mov
in
xchg
out
loop
fxtract
cmp
fdivrl
sarl
fdiv
shl
in
clc
xlat
not
mov
in
cmc
int3
sub
xor
cli
cmc
fcomip
in
aas
leave
xchg
jmp
xchg
rcr
xchg
int3
icebp
in
out
iret
sti
rcl
shr
std
fucom
add
ret
lret
xchg
jecxz
fmul
and
lock
fucomp
aam
aad
into
xor
loop
fcom
test
cli
in
fisttps
adc
xor
shr
int3
jmp
into
in
repz
ret
cmc
fcoms
jmp
shr
lock
loopne
aas
xchg
shl
fsub
incl
int3
xor
test
into
repz
fadds
clc
loopne
jmp
leave
call
mov
jecxz
fdivs
fprem1
out
cmp
clc
fstpt
clc
clc
cli
out
ljmp
leave
out
lret
aam
repz
aad
stc
aam
rcl
std
cmp
fadds
xlat
leave
mov
xor
repnz
fcmovbe
repz
cmp
cmp
in
xchg
mov
mov
in
rcl
sti
rol
das
ljmp
sar
jecxz
shr
lret
cld
xor
aam
lret
shl
into
icebp
shl
fucom
repz
shr
leave
xchg
mov
xlat
icebp
cli
shr
idiv
cmp
jmp
fpatan
in
fcmovb
lds
std
repz
out
hlt
cli
xor
xlat
clc
xor
cmp
hlt
loopne
mov
xchg
test
lret
call
in
repz
in
out
int
int
lock
loop
cmc
cmc
cmp
fsubp
test
in
xchg
out
icebp
out
fcom
cmp
fcmovne
ret
fistpll
ret
enter
fsubr
cld
jecxz
mov
out
neg
repz
sar
fdiv
aam
rcl
lock
out
jmp
std
shl
jmp
loopne
aad
fdivrs
cmp
in
lock
hlt
loop
aas
loopne
ds
addl
in
rclb
sub
repnz
int3
shl
rcl
cmp
clc
fldl
std
fcomi
ljmp
neg
icebp
cmp
cmp
shl
cli
loope
hlt
enter
int3
in
in
out
mov
std
iret
jmp
inc
cld
xchg
cli
imul
test
into
xchg
in
jmp
aam
cli
in
hlt
inc
fadd
mov
addb
cmc
loopne
xor
xor
cmc
cmp
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
aad
into
aad
fst
int
loopne
shrb
jle
xchg
add
cmp
repz
fcmovb
aas
sub
sti
fcom
std
and
int
enter
jecxz
jmp
clc
cmp
sar
ret
lret
lret
mov
xchg
xor
lret
fdiv
cmp
xor
int
ds
sti
vpsubsb
in
ljmp
xchg
out
hlt
xor
out
xor
into
cmp
ffree
sti
fildl
jecxz
test
out
test
jecxz
enter
shll
cmp
loop
repnz
loopne
clc
orb
call
fdecstp
aaa
stc
leave
sti
sti
int
rcl
rol
in
mov
in
xchg
mov
aam
rcr
cmp
fdivr
ss
loop
out
testl
mov
shr
test
ror
fmul
xor
cmp
sarb
xor
fucomi
fdiv
in
fldl
xchg
aam
shr
lret
in
repnz
test
rcr
clc
ljmp
or
xlat
enter
cmc
div
ds
fst
in
std
cmp
ljmp
into
repz
out
lret
shr
pushl
jecxz
aad
fcmovb
rolb
enter
shr
xchg
rcl
jmp
cmp
stc
xlat
out
jecxz
roll
int
test
imul
xor
fsubr
cmp
ds
ret
test
mov
orb
test
aad
ss
out
aaa
sarl
cmp
fcmovu
stc
repz
mov
cli
int3
call
lock
fldln2
xor
cmp
std
aam
xchg
shl
std
leave
in
lock
xor
test
int3
lret
or
in
fadd
xchg
mov
test
mov
sub
repz
shl
ljmp
in
cmp
xlat
jecxz
flds
std
xchg
fbstp
in
xor
lret
fcomi
aas
cmp
fucomi
iret
xchg
loope
in
jmp
std
call
jecxz
repnz
cmp
mul
cmp
jmp
in
int
jmp
cmp
rol
std
xchg
out
jmp
mov
xor
xlat
neg
aam
out
ss
ret
fiaddl
test
rcl
in
jecxz
sarl
filds
and
out
mov
repz
xchg
in
lret
xor
in
cli
aaa
into
hlt
repz
fdivrp
fld
ret
ds
xchg
jecxz
int
mov
cs
into
int3
fnstenv
cmp
into
shl
rorl
int3
xlat
int3
std
lock
fsubp
imul
xor
xor
ds
not
loop
cli
orb
cmp
xor
aaa
int
repz
in
cli
xchg
sar
mov
jmp
rorb
xchg
hlt
rcl
xor
enter
out
aaa
shl
clc
cli
iret
faddp
testb
lret
mov
fucom
hlt
ljmp
iret
fcomi
not
int
rcr
testl
repz
enter
hlt
leave
int
shl
ret
repz
vpminsw
fcos
fmull
xchg
icebp
xchg
test
xor
out
int
lock
shl
repnz
std
xlat
fsub
call
repnz
in
fsqrt
out
xor
enter
dec
xacquire
sti
fdiv
out
leave
faddl
jmp
loopne
out
cmp
lret
ror
std
not
mov
mov
sub
mov
mov
out
shr
cmp
cli
hlt
icebp
out
xor
ds
test
in
out
loope
repz
aam
cmp
xor
leave
sti
fcomip
addl
movb
nop
aam
call
call
sar
sar
fcmovnb
fadd
call
in
fsubrp
iret
into
out
icebp
test
cmp
fidivs
loopne
cmp
addl
in
lock
mov
out
sti
ss
fsubr
icebp
cld
leave
cmp
cmp
repnz
enter
enter
loop
mov
mov
and
mov
mov
sub
xorl
mov
sbbl
push
mov
xor
movl
cmp
movl
je
sbb
jmp
rcl
rcl
rcl
aad
xchg
stos
gs
push
mov
jle
add
shr
repnz
cmp
out
jmp
rcr
sti
shl
jmp
xbegin
iret
cmc
popl
leave
sar
aam
fdivrs
flds
cld
mov
sti
leave
dec
ljmp
das
std
aas
cmp
loope
les
incb
cli
clc
icebp
fcoml
repnz
shl
clc
enter
icebp
fsub
int3
loope
cmc
sti
rorb
xchg
lret
xchg
or
jmp
ror
fsubrp
std
ds
aad
jecxz
repz
faddl
fst
iret
std
in
stc
lret
xor
fcomi
shr
xor
test
and
mov
std
in
and
in
faddl
in
fucomi
cmp
jmp
ds
in
sub
nop
incl
shl
int
jmp
addb
out
mov
jmp
ror
mov
xor
enter
sarb
repnz
loope
stc
out
addb
jecxz
mov
not
into
test
int
and
in
in
xlat
out
lret
hlt
out
jmp
rcr
fcmovu
hlt
cmp
in
fucompp
fldpi
mov
jmp
enter
fcomip
in
aaa
xor
xor
jmp
rol
repz
cmp
iret
out
call
rol
ljmp
roll
fimull
out
std
cmc
xchg
jmp
int
hlt
in
ss
aas
rcl
ds
xchg
incl
sti
rclb
xor
cmc
fsub
out
cmp
int
ffree
clc
loopne
jecxz
mov
out
fsubrp
test
call
icebp
sti
into
xor
std
std
xchg
xchg
jmp
in
mov
out
out
iret
cs
out
icebp
cli
cld
fdivr
ror
lock
jecxz
roll
call
adcl
stc
aad
jmp
lock
icebp
cld
xchg
in
movl
call
fcomi
fxch
out
loopne
and
ret
out
xlat
leave
out
repnz
xor
aam
fdecstp
clc
rcr
aam
call
loope
orb
cmc
call
ss
call
xlat
cmc
cmc
sti
fimull
lea
aam
int
repz
rolb
fcos
stc
fists
int3
xchg
call
cmp
lock
cld
aas
adc
ret
sti
cmp
enter
fmul
into
into
and
in
out
xor
aad
lret
ss
xor
roll
in
mov
loopne
cld
sti
fucomp
sbb
cs
aaa
lock
fst
cli
fadd
sarb
jecxz
cli
orl
aam
lret
into
lret
cmp
icebp
cmc
iret
cmp
cld
mul
sbb
test
lea
int
cmc
shlb
cmp
stc
xor
in
xchg
mov
loopne
repz
cli
int3
aam
ljmp
addl
adcb
lret
jecxz
enter
clc
repz
int3
into
aam
out
sar
lret
std
xlat
out
ljmp
repz
in
cmp
test
lret
fidivrs
ret
fst
clc
xchg
iret
sti
aam
xchg
ljmp
std
int
out
int
cmc
fisttpll
in
clc
in
xchg
jmp
hlt
xchg
leave
das
div
sub
repnz
into
clc
test
stc
repz
faddl
cmp
mov
fsub
shl
leave
lret
int3
xor
clc
cmp
cld
cld
lret
loopne
rorb
mov
leave
aaa
in
cmp
aaa
sub
repnz
iret
addb
adc
test
das
in
shl
fucomp
jmp
hlt
sar
cli
xchg
clc
addb
test
out
sub
xor
cmp
stc
hlt
icebp
shl
test
shr
loop
cld
test
repz
xor
shlb
cmc
repz
fstpt
ds
clc
cmc
call
fsubr
sti
jecxz
mov
inc
add
add
jne
andl
sub
addl
xor
movl
cmp
jne
adc
mov
sbbl
jmp
enter
int
int
repz
mov
jle
xchg
add
fldl
iret
icebp
xor
xlat
xor
fstp
ror
lock
sbb
out
cli
mul
xchg
jmp
iret
mov
cli
cmp
int3
lock
cmc
cmp
loopne
flds
decl
mov
rol
fcmovnb
ror
repnz
std
adc
cmp
mov
cmc
in
jmp
jmp
jecxz
in
cmc
fsqrt
call
xor
ds
xchg
sti
leave
sti
jmp
lret
rcll
ror
std
rcl
shl
out
testb
leave
fcmovbe
fiaddl
enter
stc
jmp
out
int3
lock
ret
loope
rcl
ret
in
call
mov
mov
and
iret
iret
lret
xor
ds
in
fstp
xchg
cmp
popl
xor
stc
jmp
sti
fdiv
out
dec
cld
and
hlt
sub
out
int3
div
cli
xor
out
shr
loope
neg
fsub
aas
call
out
testl
enter
fdivrp
cmp
ret
sti
sti
shr
ret
fadd
sbb
shl
in
lret
lds
cmp
hlt
xor
cmc
shr
int3
into
xchg
ret
icebp
shr
mov
fdivr
lret
mov
hlt
mov
test
cmc
into
cmc
cmp
adc
shl
out
cmp
xor
lret
pushl
stc
xor
jmp
aad
fistpll
and
in
jmp
stc
jmp
cli
test
jmp
jmp
sub
shr
rolb
mov
loopne
iret
icebp
xchg
loope
orl
cmc
in
cmp
fdivrp
enter
xchg
rorb
fdiv
xor
fsubp
xor
test
enter
aas
filds
icebp
jmp
rol
leave
aad
rcl
out
leave
jecxz
repnz
lock
ljmp
xchg
loop
out
stc
fcmovbe
shl
sti
enter
out
aad
stc
loop
xchg
clc
cli
test
out
ljmp
into
out
int3
out
int3
repz
cld
rcr
out
call
lret
jecxz
lret
shr
out
into
into
out
repnz
out
in
loop
rcr
shl
les
clc
cmp
jecxz
in
repz
loope
rol
cmp
cld
xor
aad
cmp
aad
aam
std
in
jmp
ljmp
repz
in
xor
xor
loope
and
roll
fucomp
mov
icebp
cmp
in
out
cld
cmc
cmp
sti
icebp
loop
hlt
stc
fildl
lock
loope
les
cmp
rcr
cmp
aaa
fsub
jecxz
testb
lea
out
sub
ljmp
cmp
aas
lret
lock
fldl2t
jecxz
in
out
in
fsubp
xor
cmc
cli
icebp
in
rcr
fnstsw
out
hlt
mov
iret
loopne
icebp
repnz
ljmp
repz
rolb
loope,pt
cmp
adc
in
call
xchg
in
out
shll
xor
fdivr
divl
xlat
iret
fldl
aam
xlat
sbb
xchg
out
loope
repnz
out
call
cmp
jecxz
repz
mov
enter
loope
fistl
sub
xor
in
cmp
loop
icebp
cld
cld
fildl
lock
iret
in
ret
out
fmul
cli
repnz
shl
loope
leave
xlat
std
leave
out
loop
mov
jmp
int
out
iret
sti
aas
lock
loope
jmp
cmp
out
mov
iret
repnz
cmp
clc
jecxz
out
rcr
cli
lret
nop
mov
jecxz
xchg
std
out
ljmp
aas
into
cli
jmp
loope
cmp
aas
rcr
sti
out
in
mov
aad
lock
jmp
fld
dec
fmul
out
cmc
cli
cld
stc
leave
jmp
roll
jmp
cmp
lret
leave
div
incl
in
cld
iret
sti
in
int3
int3
mov
icebp
xor
jmp
loopne
lock
add
jmp
mov
xorl
xor
add
adcl
mov
sbb
mov
andl
xor
subl
jmp
rol
aad
aad
aad
leave
mov
sub
xchg
add
ret
clc
loopne
fisttpll
rcr
call
aaa
cmp
aam
cli
cli
loopne
test
stc
call
out
test
lret
cmp
in
fdivrp
out
std
cli
icebp
sbb
xlat
rol
neg
out
fcmovu
mov
bnd
iret
cs
jmp
loope
cmp
out
lock
jmp
out
out
fnsetpm(287
dec
icebp
nop
bnd
das
rcl
fucomi
cmp
repnz
addl
mov
fmull
repnz
shl
ljmp
cmc
sar
mov
aad
mov
lret
cli
xchg
enter
cmp
cmp
xor
mov
addb
jmp
lret
std
and
lret
shl
aaa
divb
ss
jecxz
test
rcr
jmp
lock
fcoml
jmp
in
cli
xor
leave
std
clc
cmc
cmc
cmp
fisttpl
iret
jmp
div
aam
cmc
shl
xlat
in
rcr
out
aas
vpmaddwd
clc
xchg
ret
mov
orl
sub
out
jmp
std
iret
lock
rolb
shr
test
mov
mov
shll
jmp
in
xlat
lock
fcmovnu
cmc
mov
call
cmc
cmc
aam
ss
cmp
cmp
sti
test
hlt
test
test
jmp
ljmp
jmp
ss
in
idivl
ret
xlat
cli
fldl
xchg
xchg
addb
out
aad
test
loop
loope
fisttpll
xchg
repz
shr
leave
cli
xor
sti
sar
not
int3
cmpb
ret
rcl
sti
filds
jecxz
into
out
mov
ror
fsub
loopne
loopne
ss
shl
aas
aad
out
leave
cli
mov
fdivrp
jmp
aad
iret
icebp
repz
jmp
xor
hlt
fnstcw
aam
fcomi
mov
mov
in
out
xchg
ror
cmc
jecxz
xor
in
lret
repz
loopne
sbb
out
fucomi
rol
stc
loope
iret
repnz
out
xlat
into
xor
repz
cmp
dec
in
ds
and
enter
sti
in
out
repnz
in
repnz
xlat
in
std
std
sarl
ss
loop
into
icebp
push
rolb
out
out
orl
shl
lret
aaa
cmp
sti
aas
lret
into
fscale
call
lret
jmp
mov
neg
hlt
hlt
icebp
aam
fdiv
faddl
clc
aas
les
fmuls
nop
leave
divb
jmp
aad
clc
cmp
jecxz
out
cmp
ret
fsub
int3
jecxz
cld
loop
out
cmp
jmp
loope
in
icebp
aam
loopne
faddp
cmc
cmp
icebp
aam
xor
cld
out
fsubr
ds
xor
repz
mov
call
mov
rcl
lock
fstpt
xlat
out
jmp
loopne
test
std
icebp
in
test
fxch
fiadds
ficoms
int
into
xor
stc
in
idivb
loope
clc
movb
mov
mov
xchg
hlt
mov
repnz
out
loop
out
sarl
aaa
aas
std
or
ljmp
enter
xor
sarl
fdivl
fsubr
call
in
call
cmc
jmp
mov
lret
call
stc
rcl
ret
lret
ss
xor
cld
iret
rol
leave
jecxz
stc
ror
fucom
test
ror
leave
into
ljmp
lret
fst
lock
sti
mov
idiv
jecxz
xchg
fdiv
enter
repz
call
cmpb
xlat
cmc
idivl
loop
rol
jmp
mov
xchg
xchg
out
test
aad
fsubr
into
repz
ret
cmc
loop
repnz
cld
lock
ss
cmp
aam
fcmove
std
in
cmp
clc
frstpm(287
ret
jmp
fsub
movb
xorl
cli
in
lock
ds
cmp
loopne
loopne
loopne
stc
loope
out
lds
loopne
out
in
cmc
into
hlt
fcmove
call
fcmovnb
loope
mov
loope
mov
xchg
fst
mov
hlt
int
cmp
ret
sub
jmp
and
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
mov
xor
mov
jmp
into
int
fstp
aam
or
xor
test
jle
cmp
cli
in
clc
cld
cld
fdecstp
orb
loopne
xchg
out
repnz
into
loop
cmp
mul
xlat
hlt
fstp
not
idiv
aam
sarl
dec
fisttpl
rol
call
lock
lret
jecxz
cmc
fld
ffreep
stc
loopne
mov
in
repnz
xor
aam
repz
cld
neg
cmc
xor
filds
icebp
in
test
xchg
clc
shl
shl
cli
ret
xor
fsubr
out
loope
cld
adcb
repnz
enter
cmp
clc
sar
fcomi
cli
out
fmulp
mov
out
mov
in
in
stc
fidivl
enter
cmp
loope
repz
nop
addl
in
out
fcmovnbe
mul
xlat
fdivrl
ds
in
test
loopne
cmp
out
xchg
in
out
ret
jecxz
shll
rcr
call
rcr
out
mov
int3
mov
out
jmp
clc
aaa
jmp
out
sar
cld
cmp
cli
fprem
test
test
mov
out
lret
in
enter
iret
int3
ss
cmp
cmpb
in
in
cld
mov
xorl
out
in
adc
loop
cmp
fcomp
fsubr
clc
loop
xchg
xchg
nop
test
int3
into
out
lock
aaa
div
test
rcl
xchg
repz
jecxz
fisttpl
mov
lds
aad
repnz
in
clc
fdiv
ds
div
in
int
lret
dec
loope
lret
out
jmp
fidivrl
cmp
fadd
std
cmc
lret
in
fistl
xchg
into
fsubr
jmp
testb
neg
adc
aam
addl
cs
imul
out
xor
rcr
fxch
cmp
mov
testb
shr
sub
lds
fldl
add
stc
fxch
out
nop
in
cmc
iret
out
loop
ljmp
in
stc
loop
div
ret
lret
test
int
cld
and
lock
cs
cs
in
ljmp
shl
repnz
fdiv
fsubp
enter
shl
int3
icebp
ror
out
das
aam
fcomi
cld
iret
cmp
aad
ffreep
lock
aad
ljmp
fcomp
cmp
sar
sti
ret
xchg
testb
iret
lret
loop
shl
loope
ret
cmp
sar
xlat
out
incb
clc
xchg
test
rorb
ror
xlat
clc
shr
fdivrl
lret
rcr
rcr
sar
fucomip
in
out
in
xchg
adc
in
in
repz
int3
ss
cmp
mul
decb
fiaddl
int3
icebp
ret
shr
fdivl
cmp
loope
ret
cmp
hlt
neg
mov
xchg
sti
out
xchg
ljmp
sti
xor
cmp
cmp
in
sarl
fucomp
stc
int
mov
repnz
mov
cmp
fxtract
imul
int
xor
aam
out
cli
test
int
xchg
jmp
repz
into
cld
xor
cmp
clc
cmp
sarl
in
cli
mov
in
cld
repnz
iret
mov
out
cld
fnstsw
lret
int3
cli
ret
iret
addb
test
mul
out
orl
in
xor
aaa
adc
loope
test
call
fcmovnu
sbb
rol
int3
out
mov
out
xor
into
fcom
out
cld
in
fistpll
shl
loop
fiaddl
dec
lock
xchg
xor
cmp
xlat
cmpl
loopne
sti
mov
fsubp
int3
in
rcl
rcl
xor
sarl
fmul
stc
repnz
iret
aas
fcomip
test
fadds
in
lock
in
xor
lret
fsubr
ljmp
fisttpl
ljmp
sub
int3
sub
out
div
repz
into
neg
and
addb
in
in
shl
clc
hlt
fdivr
clc
jmp
int
in
enter
mov
orl
jmp
leave
rol
ret
int
cwtl
stos
cltd
fs
std
or
scas
jle
xchg
add
out
cmp
shl
sti
icebp
aaa
lret
dec
int
div
rcl
ret
loope
call
mov
xor
lds
int
std
loopne
aad
cmp
loopne
leave
movl
and
iret
out
into
fstpt
sbb
aaa
cmp
rolb
addl
cli
cmc
jmp
lock
mov
fsubrp
jmp
les
int3
out
ljmp
cmp
int
int3
int3
lret
roll
jmp
aad
fmuls
lock
aad
iret
cld
ljmp
and
cmc
sub
lds
jmp
int
xor
iret
neg
fldpi
in
aad
out
clc
mov
jecxz
sub
rcl
rol
out
in
fcomp
fsub
fstp
cmc
ret
fsub
cli
movl
repz
out
cld
jmp
aaa
aas
out
cmp
loope
xor
fadd
repnz
cmc
loope
cmp
jmp
leave
in
fldl
cmp
ret
or
out
icebp
xchg
iret
int3
divb
cld
int3
fdivp
loop
test
add
in
leave
fsub
sti
call
clc
stc
icebp
lret
lret
not
ljmp
ret
xchg
jmp
loopne
rcl
xor
aam
repz
fdivp
xor
fldl
jecxz
fsubr
cmc
out
xor
std
ljmp
icebp
in
incb
sti
fisttpl
mov
loop
lret
loopne
lock
sar
ljmp
xchg
ret
mov
sbb
out
iret
mov
out
sub
leave
out
lret
sarl
xchg
mov
fucomi
in
in
fimuls
sti
jmp
in
add
jmp
fsub
sti
popl
cmc
cmp
jecxz
fmulp
stc
cmp
push
fucom
lds
fisttps
nop
loopne
popl
idivl
cmc
out
shl
lock
fisttps
loop
test
enter
aad
ret
int3
fdecstp
repnz
int3
shl
jecxz
ret
fsub
test
int3
fmulp
inc
xchg
in
xchg
call
enter
ror
aad
std
into
test
rol
enter
enter
loopne
xchg
mov
call
jmp
ljmp
idiv
ffree
mov
mov
in
xor
aam
jecxz
aad
cmp
in
cmp
leave
addb
aad
call
lret
jecxz
int
in
not
hlt
loop
ljmp
rol
ret
mov
loopne
sbb
mov
xchg
shll
xor
aaa
iret
cmp
aam
xor
fadd
fimull
in
in
cli
fiadds
cs
int
icebp
aaa
mul
in
stc
out
loope
roll
fsubp
repnz
test
xchg
xor
jmp
clc
out
enter
repz
fidivrl
inc
cmc
enter
test
mov
jmp
lock
jecxz
sar
fsubr
jmp
xorl
xlat
cmp
loope
ret
ds
lret
out
mov
iret
call
jmp
into
bnd
aam
cmp
test
cmp
xchg
in
in
int3
icebp
xor
xor
icebp
lret
sar
aas
lock
les
fdiv
test
and
xchg
fsubp
loopne
ljmp
in
in
rcr
loope
aas
mov
jmp
in
rcr
lock
icebp
cmp
repz
fdivs
in
ds
adc
ljmp
cli
jecxz
ljmp
out
xor
adc
enter
jmp
lds
shlb
xor
clc
repnz
fstpt
sar
cmpl
std
call
jmp
out
xchg
int3
xor
xor
sti
cld
jmp
std
std
fxch
repnz
stc
xor
in
xchg
xchg
jmp
aad
lock
repz
fcmovbe
fdiv
out
call
mov
jmp
xchg
loopne
xor
mov
in
int
ds
std
or
mov
pop
ret
push
mov
sub
adc
jmp
rol
lret
iret
fcmovnbe
fcmovb
addr16
or
jle
aas
add
fists
icebp
out
cmc
shlb
fadd
repnz
aam
aad
stc
rolb
out
mov
rolb
jmp
lret
fcom
test
xor
stc
repnz
jmp
leave
ret
lret
aam
xor
ret
into
into
in
test
loop
mov
lret
out
jecxz
mov
loopne
cmp
cmp
int3
iret
cmc
aad
rcl
shl
call
xchg
out
rcl
ss
cmp
cmp
mov
call
out
test
jmp
divl
repz
icebp
cli
sti
aaa
roll
fdivp
mov
xchg
ljmp
mov
xor
xor
sar
stc
sarl
sti
loopne
loope
ds
test
mov
mov
iret
in
shl
xor
cmp
out
cmpl
roll
loopne
loop
faddl
out
xor
leave
xor
stc
cmp
into
aam
cld
in
loop
call
orb
xchg
iret
xor
in
shr
in
out
cmp
ds
std
aam
add
stc
jmp
in
incb
shl
cmp
cmp
cmp
rcr
clc
ljmp
rclb
loope
aaa
ljmp
ret
loop
add
in
loop
loopne
iret
sbb
lret
loopne
fstpt
ljmp
stc
cli
int
std
sarl
stc
aam
fldl
jmp
in
div
xlat
int
lret
cmp
into
jecxz
aas
out
clc
incb
xchg
test
repnz
shl
rol
enter
fucomp
ljmp
neg
mov
fnstsw
cmc
int3
out
fnop
iret
std
xchg
or
ror
clc
xlat
fcom
hlt
cmp
adc
fdiv
jmp
out
call
aas
loope
xor
aad
icebp
repz
std
sarl
neg
hlt
aam
test
loop
addb
shl
repz
out
lock
cmpb
fadds
std
testb
rcl
lret
in
in
cmp
iret
cmpb
fcmovbe
icebp
jecxz
std
hlt
ds
out
jmp
and
aam
ss
xor
cmp
into
int
sar
cmc
shl
fimull
out
xchg
cmc
lret
shr
xor
xlat
out
enter
cld
into
idivb
mov
jecxz
xchg
jecxz
adcb
out
cmp
div
in
out
cmp
jmp
std
in
enter
flds
xor
idiv
jmp
cmp
rolb
test
jmp
in
orb
das
rcr
cmc
cmp
icebp
aad
clc
fdiv
cmp
cmc
neg
ljmp
iret
loopne
in
lret
int3
aam
loopne
hlt
ret
fld
in
cmc
leave
stc
xchg
mov
popl
leave
jmp
std
cmp
dec
out
clc
add
in
icebp
loopne
std
out
leave
fdiv
in
rol
ss
out
sub
shl
cli
clc
fincstp
mov
into
jecxz
xchg
test
test
loope
cmp
xor
cmp
cmp
cmc
sbb
loopne
loope
aam
in
fxch
cmp
in
shl
cmp
aad
cmc
in
lock
lds
aam
in
iret
lock
xor
out
cmp
shr
icebp
in
jecxz
decl
stc
mov
lock
in
enter
std
lock
test
call
fsub
lock
shl
xchg
aad
xor
out
repnz
xor
int
cli
cmp
cmpl
fdivp
out
int
iret
in
ljmp
loop
enter
xlat
ss
loopne
loopne
fadd
aad
xchg
ret
jmp
in
repnz
loop
clc
iret
lock
shl
shlb
int
std
mov
aam
loopne
dec
or
add
add
add
inc
mov
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
xor
adc
mov
add
mov
sbb
mov
jmp
int
lret
int
and
sub
mov
jle
add
xchg
xchg
out
out
lock
int
ror
sti
fadd
shl
test
fcomp
rcll
stc
fnstenv
call
cmpl
repz
incl
in
repnz
stc
stc
iret
into
fdiv
ds
ror
rol
mov
call
ljmp
xor
cmp
fsubrp
xor
cmp
mov
not
fmulp
stc
loop
icebp
repz
xor
out
repnz
and
aad
fimull
lret
out
in
mov
in
sub
call
loop
jecxz
xlat
aas
in
ljmp
lret
aam
in
fnstenv
rol
out
ds
fcomp
iret
jecxz
xchg
std
call
addb
xchg
rcl
stc
enter
lret
leave
out
divb
fsubp
stc
fucom
sub
fistl
lock
in
out
repnz
enter
loop
out
shl
in
std
jecxz
mov
out
idivl
hlt
aam
cli
sar
sar
ret
fld
mov
xchg
xchg
std
stc
mov
xchg
jecxz
icebp
stc
icebp
jmp
into
cmp
cli
sti
stc
sbb
loopne
loopne
nop
out
in
int
loop
sub
int3
xor
loope
cmc
cmp
fcmovnbe
xchg
in
int3
out
enter
xchg
xchg
shll
cmc
in
in
xorb
bnd
repnz
aam
jmp
in
sti
repnz
mov
in
ljmp
fcomip
lock
and
mov
lret
out
std
adc
clc
clc
xlat
stc
xlat
out
loop
cmc
fcom
idivl
addl
shl
out
mov
into
les
jecxz
fdivrp
clc
test
fcmovu
out
xchg
aad
out
xlat
in
aad
jmp
repz
loopne
sarl
std
out
jmp
mov
ficoms
repz
std
cmp
cmp
into
shl
fcmovnb
jecxz
sti
xchg
in
xchg
in
xchg
repz
in
clc
fdiv
std
loop
fdivp
not
xlat
les
loopne
jmp
lret
int3
test
call
into
out
rcl
ljmp
icebp
shr
mov
in
repnz
shl
fiaddl
loopne
mov
enter
lock
repnz
cmp
call
in
aad
shl
les
int3
xchg
int
adc
cli
ss
xor
cmc
cmp
out
shr
in
add
test
std
movb
out
int
shl
lret
sti
in
fcmovnbe
std
sbb
ds
cmc
hlt
mov
fcmovu
xchg
lret
out
lock
into
aaa
out
hlt
imul
ror
lock
div
fcomi
out
mov
sti
loopne
filds
test
out
lret
loope
out
loop
icebp
orb
mov
lret
mov
jmp
leave
out
fcmovnu
fdivr
fsqrt
fiaddl
testl
mov
int3
iret
shr
sti
int3
fistpll
repnz
not
shl
xchg
ret
enter
jmp
mov
rclb
sarb
icebp
xor
cmp
sti
xchg
rcl
in
cmp
fdiv
xchg
icebp
rcl
in
ljmp
lock
fnstsw
aad
testb
iret
in
lea
cmp
in
fcomip
cmpl
adc
fildl
jmp
jecxz
into
jmp
repnz
loopne
cmpb
and
shl
fcmovnu
lret
neg
iret
lret
push
int3
mov
cmc
jmp
std
aas
hlt
repnz
jmp
sar
test
iret
shll
repz
lock
cmp
cmp
cmp
call
test
shlb
les
add
xor
mov
sub
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
ret
ror
rcr
fnsave
xchg
sti
mov
pop
cmp
add
out
fmull
imul
shl
jmp
iret
out
stc
jecxz
fiaddl
cmp
sar
test
call
enter
fnstcw
lret
shl
cmp
sti
out
aad
in
cmp
lret
lock
xor
lret
out
idivl
rol
std
loop
out
clc
lret
shl
fmull
xor
xlat
ds
std
ret
fistpll
mov
jecxz
xchg
call
clc
fptan
fsubr
roll
xchg
mov
mov
fcmove
loopne
leave
xchg
or
lret
in
xor
cmc
jmp
cmc
cmc
fld
fucom
out
call
jmp
icebp
enter
leave
call
cmp
into
dec
icebp
in
repz
xchg
lret
out
fucomip
in
mov
ret
in
cmp
ss
fistpll
out
sar
in
div
hlt
test
fsubr
loope
loope
loope
lea
aam
cld
out
lds
sti
cmc
xchg
clc
lea
xor
in
in
fnstenv
cmp
repz
xchg
in
lret
icebp
in
loopne
repnz
jmp
cmp
loopne
fdivrp
repz
xor
out
ret
cli
fcmovnb
call
test
loope
icebp
lret
enter
int3
ss
stc
test
xchg
testb
ljmp
cmc
in
cli
sti
ljmp
ds
les
fsubp
int
iret
fdivp
ret
int
sarl
cmp
aad
fdiv
sbb
mov
into
xchg
test
lds
stc
iret
call
int3
xlat
fsub
loopne
rolb
in
addb
xchg
leave
in
icebp
hlt
repz
fxch
xor
aad
out
fcomi
sbb
xchg
loope
aaa
repz
cmp
lret
lret
int
loop
fdivr
shl
fsub
test
loope
out
rcll
cmp
aam
into
in
xor
sarl
aad
stc
test
call
fldl
loope
mov
f2xm1
ret
cmp
cmc
aas
into
fucomip
loop
xchg
test
call
jecxz
xor
out
leave
sub
div
jmp
loopne
stc
ds
iret
roll
out
cli
fucomp
int3
cmc
aam
lret
out
fmul
shl
clc
in
int
out
aaa
roll
out
movb
xchg
xor
icebp
stc
sti
cmp
cmc
fneni(8087
and
cmp
loopne
fdivr
xchg
in
lret
sub
call
cmc
ret
cli
in
aam
in
fcmove
ret
ds
roll
std
into
xchg
mov
xor
enter
aam
std
aaa
fcomi
neg
loopne
mov
jmp
test
in
repz
repnz
xor
in
in
hlt
sar
aad
std
loopne
xlat
test
lret
enter
lock
out
xor
fxch
out
int
fdivrs
xlat
loopne
loope
fdivr
ret
stc
jmp
filds
jmp
repnz
out
ljmp
sar
shl
xchg
aad
in
xchg
jmp
in
into
fildll
xor
xor
call
icebp
fld
loopne
repnz
call
lret
xchg
shr
ss
fsubr
ljmp
rcl
fadds
mov
test
xchg
in
in
shr
in
xor
xlat
into
cmp
int3
cmp
in
int3
ret
ret
fldl2t
ret
or
test
jecxz
leave
fmul
out
imul
cmp
int
stc
out
mov
rclb
out
fadd
enter
repnz
lret
xor
test
xor
test
stc
flds
loop
in
out
jmp
ss
shl
rol
fadd
fisttpll
in
icebp
repz
xor
hlt
out
xor
call
in
in
repnz
cmp
hlt
sbb
fsubr
lea
jmp
xlat
rcl
fxch
fxch
jp
cmpsl
cmp
jle
aas
add
loop
lds
clc
in
jecxz
shl
cmc
shl
out
rcr
rcr
enter
mov
fcomp
test
lret
xchg
loope
icebp
lret
hlt
stc
out
ljmp
aam
jecxz
cmp
in
in
mov
hlt
in
in
xor
lret
xor
std
sti
faddl
clc
repnz
into
fdiv
loopne
mov
int3
imul
call
idivb
into
out
fsubp
loope
and
test
xchg
xchg
call
repnz
iret
rol
cmp
shl
cld
idiv
ret
adc
call
loope
out
out
jecxz
call
ror
sar
ffreep
xor
lret
int3
mov
out
mov
loop
shlb
repz
testb
lret
fcomp
fxch
rcr
in
loop
adc
ror
int3
ss
xor
ds
aad
inc
ret
fsubr
rolb
int
in
les
fcmovbe
cmp
into
fstp
stc
les
jecxz
ljmp
jmp
divb
xor
repz
out
lret
xor
fdivrp
aam
and
decl
xchg
and
hlt
cmc
lock
std
iret
xor
cld
shr
ret
xchg
ret
jecxz
cmc
idiv
nop
xchg
xchg
ss
shl
jmp
fucomi
hlt
in
fdivrl
not
fcmovnu
enter
iret
fcos
xchg
std
mov
rcr
aam
idiv
cmc
fdivr
cmp
cld
mov
out
lret
ffree
into
lret
decb
aaa
out
fdivrp
idiv
adc
fnstcw
mov
into
jecxz
sub
fisttps
cmp
frndint
cli
cli
loop
aam
test
rcr
cmp
or
xchg
sub
ret
lds
fdivr
hlt
ret
cld
ror
repnz
repz
and
xchg
xor
lret
out
lock
aam
in
ds
aas
xor
fsubp
mov
mov
clc
in
clc
call
lret
fdivp
push
test
lret
call
hlt
iret
cmp
sti
cmp
cmp
ret
in
sti
in
clc
loope
xchg
xor
hlt
into
cmp
clc
icebp
fnstsw
or
loope
mov
imul
ret
repz
ljmp
cmp
stc
ds
ret
fdivrl
fld
std
stc
mul
enter
fucomp
in
out
lret
lret
int
clc
xor
roll
cmp
out
fcmove
adcb
in
int
clc
rcr
cmp
ret
sbb
fadds
out
lret
mov
jmp
shr
int
cmp
aam
into
jecxz
aas
jecxz
inc
jmp
in
fcomip
xchg
rcl
call
cmp
fdivrp
lret
int
fst
stc
frstpm(287
out
test
fldlg2
orb
in
jmp
out
ss
ds
in
hlt
cmc
mul
mov
loope
int3
in
ret
lret
repnz
shl
rol
fstp
cmc
cli
fiaddl
xchg
ss
repnz
imul
aam
sub
repnz
fucomi
ret
into
enter
xchg
int3
lock
ret
jmp
cli
cmp
clc
cmp
jmp
clc
lret
icebp
mov
mov
out
in
lds
rcr
jmp
xchg
not
ret
in
in
call
das
aam
fdivrs
jmp
fdivrs
call
ljmp
mov
repnz
sti
jmp
in
aad
enter
test
add
dec
in
fstl
ljmp
fdiv
adc
xchg
faddl
and
out
xchg
xchg
lea
ss
idivb
iret
test
rcr
filds
jmp
fcomp
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xor
add
mov
add
mov
mov
xor
subl
jmp
sarb
into
rcl
ror
add
jmp
jb
lea
sbb
aas
add
lock
in
aas
shr
int3
hlt
out
repnz
ffree
cld
repz
call
addb
repnz
rcl
leave
lret
cmp
neg
std
cld
loop
ret
out
flds
iret
mov
into
enter
xor
lret
ror
cmp
fcmovnu
test
rorb
loop
shlb
cmp
in
cmp
xor
cmp
xrelease
sti
in
enter
lea
vshufps
int3
not
cmpb
std
fdiv
xor
loopne
enter
in
test
rcll
repz
out
std
in
cmp
clc
out
sar
in
fucom
xchg
jecxz
out
mov
shll
testb
xlat
sbb
jmp
std
addb
ss
fninit
xor
rcr
xlat
add
out
sub
xchg
int
sarb
cmp
sti
cmp
cmp
aad
fcmovu
cmp
and
fsub
loop
int3
out
fucom
int3
ljmp
in
into
fcmovnu
cmp
cld
loope
clc
xchg
enter
xchg
out
std
mov
out
lock
out
cmp
faddl
ljmp
cmp
cmp
out
repnz
in
jmp
fsub
rcr
or
fprem
orl
aad
fxtract
cld
sar
shr
lock
lret
movb
jecxz
jmp
repz
in
jmp
cmp
rol
shl
loope
cld
lret
std
nop
lea
int
repz
das
fmul
aam
cmp
cmp
rol
call
mov
neg
lret
jmp
xchg
lret
in
cli
out
fmulp
call
cmp
repnz
testl
rcr
cs
in
aam
jecxz
sti
rol
leave
in
in
in
fst
fcmovne
int
shl
stc
loop
lret
jmp
cmc
shl
roll
xchg
ljmp
div
ret
xor
xor
idiv
in
fcos
stc
repz
out
cld
mov
bnd
hlt
enter
out
enter
lock
and
fdivp
repz
xlat
lock
fcmovu
cmp
div
std
repnz
loop
jmp
nop
loop
mov
out
lret
int
into
hlt
aam
jmp
into
leave
cmp
test
loopne
ret
fcomip
test
cmp
test
test
fmul
fidivl
lock
out
cmp
aad
call
loop
lds
aad
cmp
xor
repnz
idivl
sti
cli
fdiv
in
leave
cmc
out
xchg
loopne
rcl
loopne
jmp
into
int3
fsubr
lret
repnz
out
ret
shl
cmp
xchg
rcr
int
xor
jmp
fabs
cmp
div
fnclex
shl
neg
jmp
enter
jecxz
ljmp
cmpl
cld
aad
cmp
mov
out
icebp
xor
cli
fmul
cmc
shr
lock
sarl
jecxz
jecxz
vpsubb
jecxz
fsubp
repnz
stc
leave
ret
into
cmp
cli
test
repz
add
loope
dec
rcl
lea
int3
fdivr
icebp
ljmp
jecxz
xchg
jecxz
jmp
in
call
xor
in
rcr
ljmp
stc
shl
xchg
lret
fcmovnu
or
call
sarb
fmul
enter
out
ret
sar
mov
aad
call
in
xchg
roll
int
out
sti
ljmp
out
roll
int3
std
popl
test
aam
stc
hlt
out
leave
shl
cld
inc
fdivr
add
incb
mov
orl
mov
xor
movl
inc
movl
mov
sbb
jmp
iret
fcmovnb
stc
inc
sti
mov
fimull
jle
add
ljmp
repz
fsubr
out
sbb
clc
aad
movb
ret
filds
loope
call
dec
ror
lock
orb
std
call
divl
sub
hlt
loop
fcomp
std
filds
fisttpl
jecxz
dec
ljmp
sub
adc
sar
movb
popl
test
cmc
aad
call
cmp
ret
iret
fsubp
push
out
enter
ror
mov
repz
lret
out
repz
cmp
test
repnz
std
out
sbb
xchg
loop
out
shrl
ret
xor
cli
das
jmp
jmp
in
in
roll
stc
fucom
out
repnz
clc
jmp
fcmovnu
rcl
fisttps
jecxz
ljmp
mov
enter
xor
filds
loope
call
call
cmc
loopne
lock
aam
out
repz
int
ret
cli
loope
nop
ret
orl
stc
fdivl
shr
or
cmpl
call
out
int
int3
call
aam
lock
aas
cmp
cmp
cmp
mov
inc
sub
out
loopne
xchg
ljmp
ds
fiadds
mov
call
iret
out
lret
in
mov
fdiv
in
int3
out
aad
adc
cli
lock
std
in
call
shl
int3
out
loope
loopne
cmp
jmp
iret
test
fdivrl
hlt
enter
ret
jecxz
addl
lret
aam
rcl
jmp
faddp
repz
out
lret
fmuls
out
lock
divl
divb
cmp
cli
aad
ret
repnz
fildl
in
xchg
aam
jmp
into
sar
out
leave
shr
std
std
test
shl
fdivr
mov
xchg
shl
ss
call
aas
shl
ret
ret
ds
repz
fdivr
fcoml
ss
repnz
call
in
lret
fdivr
in
ds
mov
fst
call
and
out
rcr
enter
div
cmp
repnz
roll
lret
call
out
jmp
fdivr
aad
rcl
enter
sar
shl
aas
cmp
loopne
fcmovbe
loopne
xchg
addl
lret
into
cmp
ret
jecxz
out
aam
cmc
clc
in
mov
shr
mov
shl
xor
cmp
divb
leave
hlt
shr
xlat
loop
shr
mov
rcr
aad
idiv
ror
into
xchg
hlt
loop
icebp
fdiv
out
cmp
aam
stc
shl
out
aad
clc
loope
cmp
dec
out
out
lea
jmp
in
lret
out
cmp
aam
loope
loop
lret
in
mov
xchg
test
stc
clc
lret
cmc
rcl
into
cmp
mul
aam
mov
sti
mov
cld
movb
xor
lock
lret
loopne
aam
repnz
loope
les
xchg
ljmp
out
out
ror
rcr
neg
ffreep
stc
ljmp
jmp
out
mov
jmp
in
loop
in
jmp
cmp
repnz
loopne
out
test
aam
ror
in
aaa
ss
clc
out
cld
and
test
enter
into
loope
fucomip
int
out
in
enter
ss
out
xlat
repz
shr
xor
test
jmp
in
xchg
xor
sti
cli
int
loop
into
cli
fucomi
jmp
fadd
lock
xchg
into
xor
aam
int
jmp
stc
fcmovb
cmp
neg
xlat
clc
loopne
ret
into
sti
mov
mov
orl
push
xor
mov
add
jmp
mov
mov
inc
cmp
jmp
aad
aas
ret
fcmovne
aad
mov
dec
cmpsb
sbbl
int3
imul
leave
aaa
rol
xor
out
xor
cmp
imul
xchg
mov
jecxz
adc
icebp
mov
cmc
int3
jecxz
cld
int
in
sar
cmp
cmp
out
in
enter
lret
xchg
adc
imul
int3
repnz
std
cmp
cld
int
int
cmp
filds
repnz
repnz
shr
sub
fidivrl
cmp
cmp
fidivrs
or
cli
lret
lret
loope
hlt
mov
fcmovbe
lret
enter
in
fcmovnbe
mul
stc
fsubp
loop
cld
in
leave
popl
shlb
in
aaa
fcmovu
cmp
cld
jmp
in
cmp
lock
vcvttpd2dqy
xchg
icebp
fisttps
out
lret
cmp
cmp
sti
flds
sti
jmp
fisttpll
aad
enter
cmp
aaa
in
icebp
std
ss
in
fsub
decb
fiadds
rol
lock
sarb
repnz
shl
out
ror
movl
nop
cli
int3
int3
repnz
xor
lret
iret
fmul
out
cmpl
not
aam
sti
cli
fcmovb
iret
aad
rcl
das
shl
sti
shlb
sti
ljmp
out
mov
shr
sbb
cld
iret
loope
test
cmp
std
iret
neg
lock
stc
std
leave
rol
int
jmp
roll
stc
in
clc
in
rcl
xor
in
loop
cmp
loopne
mov
call
lret
loop
out
clc
jmp
fcmovnu
idivb
hlt
shl
repz
std
aad
fmul
rol
in
jmp
hlt
das
xlat
xlat
hlt
lret
int
cmp
cmp
adc
loop
aam
addl
out
lret
icebp
xor
xor
cmp
in
rcr
out
int
fcmovbe
icebp
ljmp
fsub
repnz
fsubp
xchg
in
stc
into
cmp
ljmp
ret
cmp
out
jecxz
xchg
loope
lock
divl
rcl
std
iret
rol
xchg
sti
lret
out
out
adc
hlt
aam
repz
aad
div
xor
cli
loop
jmp
icebp
test
aam
clc
stc
lret
xor
cmp
flds
cmc
out
fisttpl
int
loop
leave
icebp
out
int3
shll
in
cmp
lret
loopne
mov
int3
mov
into
lds
cmp
aam
ror
fcmovnu
jecxz
std
fcmovb
mul
out
loopne
repnz
std
fcomip
in
repnz
cmp
cmp
addl
nop
std
cld
cld
xchg
call
into
shl
cli
lret
xor
ds
out
rol
jecxz
xor
loopne
loop
test
ret
in
ss
cld
fcmove
rol
cmc
xchg
sti
repnz
fmuls
mov
xor
int
in
int
clc
int3
aad
loopne
fcmovu
xchg
jmp
out
leave
xchg
and
out
stc
aaa
cmp
cmp
sarl
in
loopne
aad
call
testb
ljmp
hlt
cmp
jmp
cmp
jmp
rcr
rcr
xchg
orl
xor
fcmovbe
ss
cmp
hlt
cmp
rol
clc
call
or
out
ret
stc
lret
int3
std
int3
rcl
clc
cli
into
rolb
jecxz
fmul
out
fisttpl
repz
cld
ljmp
aam
aad
jecxz
lock
jmp
mov
shr
xor
sti
repz
cmp
cmp
ljmp
in
ss
clc
cmp
ljmp
cld
rol
test
or
xchg
xchg
icebp
fsubr
repz
cld
int
clc
incb
addb
fucomi
fisttps
adcb
add
add
rcl
xlat
fcmovnu
shl
cwtl
clc
xchg
repz
fcmovb
pop
push
jle
aas
add
mov
ljmp
cmp
cmc
ljmp
sub
loope
out
clc
jmp
jecxz
repnz
clc
fucomp
loopne
ret
cld
in
and
enter
lret
jmp
ret
rol
cmp
cmp
into
cmp
sti
ds
clc
int
fdivr
shr
repz
xchg
xchg
shll
repz
shr
cmp
shl
fdivr
loop
ljmp
cmp
jmp
call
lock
fmul
lret
idivl
rcr
cli
ds
idiv
repz
in
lock
mov
lret
incl
repz
int
incl
loopne
fucomp
ret
xchg
loopne
lret
test
mov
xchg
shll
rcr
clc
out
repz
fdivrs
sar
hlt
mov
fneni(8087
rcr
mov
aad
xor
enter
loop
loope
cmp
flds
call
shl
in
shr
out
aam
cmp
cmp
icebp
xchg
enter
stc
mov
mov
loop
ret
xor
cmp
jmp
iret
cmp
in
clc
ret
aam
sti
mov
in
in
std
and
xchg
into
out
sar
aaa
idiv
cmc
aas
loopne
rol
out
cmp
mov
loopne
icebp
mov
roll
cmc
cmc
lock
fincstp
imul
add
out
in
test
sti
mov
out
in
loopne
out
xlat
lret
not
clc
fnstcw
fdivrs
sti
incl
out
loope
jecxz
stc
and
cmc
loop
loopne
into
call
aam
lret
faddp
test
out
cld
xchg
fmull
ss
out
cs
iret
not
fucomp
in
rcl
fcmovb
stc
fucomip
fldlg2
mov
into
out
loop
in
cmp
into
leave
out
aad
sti
fstp
shl
cld
sbb
out
xchg
lret
int
out
into
rcl
in
cmp
lret
in
idivb
fdivr
xlat
mov
ret
mov
out
in
fucom
hlt
std
std
ljmp
xor
cli
fndisi(8087
ror
aam
xchg
cmc
fcmovbe
filds
pushl
sub
idivb
aaa
cli
cmp
sti
cmp
filds
test
int3
icebp
sub
into
xor
std
call
and
aad
fxam
in
call
ljmp
cmp
hlt
cli
in
lock
cmp
iret
loope
in
loop
mov
in
xchg
clc
xor
cmp
hlt
ljmp
sti
cmp
std
iret
sti
nop
loopne
hlt
shl
jmp
out
sarl
into
aad
cmc
hlt
fnstcw
roll
int3
in
mov
and
cmc
out
into
ljmp
lret
in
in
out
cld
mov
test
rolb
aam
in
jmp
in
ljmp
cmp
loopne
test
xchg
xchg
adc
cli
enter
out
icebp
jmp
push
aas
fcom
xlat
int3
test
xchg
in
icebp
aam
fcmovnbe
in
loope
add
repnz
cld
mov
mov
lret
int
inc
in
shr
in
leave
std
repnz
jmp
sti
push
out
aam
ljmp
test
or
in
mul
cmc
jmp
cmp
loope
into
call
rcr
icebp
roll
shl
xchg
ljmp
ss
imul
aas
shr
fcmovne
lock
repnz
cmc
xlat
fmul
cli
xchg
cli
repz
xor
xor
cli
sti
lock
cmp
shl
out
loop
fucomi
clc
xchg
cli
mov
call
xor
lock
hlt
lret
cli
int3
cmp
test
clc
shl
test
mul
mov
out
sti
faddl
out
ss
fcmovnbe
fiadds
in
out
test
mov
mov
aam
shll
aad
in
ss
repz
loope
ljmp
clc
mov
jmp
ret
ror
ret
rcl
je
repz
sbb
add
out
cmp
lret
repz
std
sar
jecxz
test
test
mov
loop
int3
xchg
sub
jmp
rcl
xor
test
aaa
sti
fnstcw
leave
mov
loopne
mov
ret
xchg
shl
aad
jmp
xor
test
ljmp
mov
out
lret
xchg
shll
jmp
fld
clc
icebp
ds
ss
div
fcom
ret
cmc
in
loop
aam
xchg
loope
lret
enter
stc
int
rcl
iret
ffree
mov
mul
cld
lret
mov
repnz
int3
shl
cmp
stc
int
loop
aas
fpatan
mul
fld
and
cli
enter
in
loopne
xor
clc
xlat
repnz
cmc
cmp
jecxz
fldl
ret
rorl
repz
ss
jmp
hlt
repnz
std
ret
fdivrp
jmp
flds
faddp
cmp
fcmovnb
lock
clc
loopne
xchg
call
nop
fld1
test
in
rcl
lock
xlat
jmp
faddp
xlat
cmp
add
fadds
int
xchg
cld
sub
aad
icebp
fnstenv
enter
dec
ds
cmp
shl
flds
lret
leave
lock
loopne
divb
aaa
xor
div
jmp
cld
fcmovbe
adc
test
test
out
sub
xacquire
in
cmp
in
hlt
fmul
repz
testb
loope
loope
fmul
in
mov
shrl
in
stc
jmp
shl
jmp
icebp
stc
sarl
fdivp
jmp
cmc
out
jecxz
or
out
mov
cmc
cmp
clc
mov
fcomp
sar
xor
enter
in
into
out
sti
cld
lret
call
aaa
cs
fnstcw
cmpb
rcl
shl
hlt
testl
call
hlt
int
repz
cmp
out
fstp
test
fucomp
fprem1
cmc
orl
mov
int3
sub
rol
iret
aam
jmp
inc
sbb
stc
hlt
xchg
out
mov
mov
in
xor
hlt
repnz
fmulp
cmp
int
test
cmc
stc
rcr
in
enter
or
lret
int
jmp
xlat
repnz
stc
iret
clc
out
fucomip
roll
rcl
loope
filds
xchg
ficoms
cmp
int
jmp
fcmove
sti
shl
jecxz
sti
sar
clc
call
test
test
sti
jmp
ror
shr
xor
fidivrl
cmp
aam
shlb
cmp
lret
enter
xchg
out
in
out
shlb
div
sti
cmp
jecxz
xor
lock
vpsubsb
fsubrp
test
and
movl
in
hlt
repz
iret
test
cmpl
mov
enter
mov
fsub
into
in
int3
int3
std
ret
lds
fndisi(8087
ljmp
iret
out
bnd
xor
fcomip
icebp
out
sti
adc
repnz
mov
ds
out
loope
hlt
std
in
shl
ret
icebp
rol
in
shr
lret
cmp
jmp
in
clc
sarb
in
fstp
fimuls
xchg
int3
xor
in
out
cld
repz
sti
aas
in
lock
xlat
call
add
rorb
aad
xor
into
in
icebp
aam
lock
std
fildl
xchg
fdiv
fucomip
mov
xchg
shrl
out
aam
out
shr
int3
fstpt
testl
xchg
lock
sti
xor
cld
ljmp
lock
fcmove
dec
std
and
loopne
loope
ljmp
cli
clc
int
shr
lret
cmp
stc
rolb
leave
xchg
call
ret
divl
shl
int
aas
fdiv
loope
cmc
call
lret
xlat
call
in
loope
jmp
xor
fxch
out
test
fdivr
iret
shl
xlat
imul
and
jmp
repz
xor
jmp
int
vpaddusw
fstp
pop
mov
outsl
push
arpl
cmc
ficomps
jle
add
jmp
fnsave
clc
shl
lock
enter
faddl
sub
hlt
ljmp
sarb
int
stc
add
test
and
repz
xor
in
aad
cmc
ss
repnz
clc
iret
in
jecxz
clc
jmp
icebp
fcomip
xor
xchg
xor
xor
int
das
call
ds
lock
cmp
mov
out
clc
in
out
lret
aam
ljmp
xlat
rcr
fistpll
rol
hlt
ret
out
cmp
loop
clc
rclb
call
fdivrl
cli
sar
in
fcom
fdivp
in
in
loope
mov
xchg
repz
jecxz
cmp
sar
fstpt
sar
fstp
shl
hlt
fimull
jmp
rcl
in
icebp
xor
fidivrl
lock
out
addb
or
xchg
xchg
nop
out
in
iret
in
repnz
sar
jmp
int
rcl
icebp
test
loop
enter
incl
ret
enter
ljmp
shl
xchg
neg
les
xor
divl
leave
fcomi
xor
call
rolb
cld
in
xlat
cld
fmul
in
sti
in
jmp
xor
call
std
aaa
cli
xor
cli
les
out
int3
xchg
fcomp
test
lock
dec
repnz
cli
cmp
out
fdivp
in
loope
cmp
in
popl
leave
xor
shl
fistpll
lock
loop
lock
repz
clc
test
add
orl
sub
jmp
sar
lock
lock
mov
in
cli
iret
loope
int
nop
aaa
aaa
out
int3
out
clc
fucomip
aas
std
aas
cmp
roll
fisttpll
out
xor
xor
loopne
ds
fidivrl
sarb
neg
xchg
in
test
mov
aam
aaa
cmp
repz
std
cmp
test
shl
lea
fcomip
out
xor
xor
stc
jmp
stc
lock
fldl
mov
call
aam
xor
aaa
call
out
loopne
aad
shl
clc
loop
in
fildl
mov
xor
in
iret
icebp
leave
out
icebp
cmp
idivl
clc
ret
enter
ret
sbb
in
mov
pop
call
cli
int
in
fdiv
test
shl
ror
loopne
out
mov
adc
mov
icebp
xor
in
incb
loopne
fadd
call
iret
repnz
repz
repz
jmp
cmp
aaa
shr
and
sar
sar
incl
std
xchg
call
divb
in
iret
ror
cmp
rolb
xchg
xchg
sti
leave
stc
decl
rol
icebp
aam
ror
repnz
loope
ret
in
loop
sti
lret
enter
lret
mov
hlt
sub
jmp
stc
testl
stc
jecxz
mov
int
lock
in
stc
aad
call
sar
shl
aad
xchg
hlt
ret
in
jecxz
int
int
loope
jmp
cmc
xor
hlt
cld
lock
ror
xchg
out
jmp
std
ljmp
stc
out
sarl
hlt
lret
leave
adc
loopne
add
fsubrp
ljmp
iret
imul
icebp
stc
xor
in
leave
hlt
cmp
fdiv
loope
xchg
in
test
lock
loope
call
jmp
divb
into
cmp
ds
test
cmp
xlat
aad
test
into
fiadds
shl
out
xor
idiv
fdivrs
fadd
aas
fdivr
xchg
call
int3
leave
or
xchg
sar
fmul
fyl2x
in
jmp
in
test
rolb
lret
ret
sti
fucom
std
in
sbb
jmp
fcom
xlat
push
xlat
outsb
shrb
iret
or
add
out
icebp
ss
aas
cmp
not
test
jecxz
jecxz
sbb
fmulp
rcl
sub
cmp
in
out
enter
test
in
jecxz
jecxz
jecxz
test
int
mov
enter
clc
jmp
cmp
test
stc
shl
sti
lds
loopne
and
loop
ss
out
in
in
cmp
out
mov
fxch
fcmovbe
mov
int3
sub
ds
stc
fneni(8087
adc
cmc
test
ror
out
ljmp
out
fst
lret
or
shl
repnz
cld
clc
in
in
icebp
xchg
call
out
in
xor
ret
cmp
hlt
ret
repz
int3
call
rolb
div
cmp
shr
in
rcl
std
ds
leave
mov
stc
in
mov
cmp
jmp
lock
clc
loop
fcmovbe
repz
lock
loope
aad
filds
neg
out
in
loopne
in
in
xor
repz
ret
repnz
icebp
fcmove
cmc
jmp
xchg
std
mov
repnz
aad
sti
cmp
ret
iret
cmp
out
icebp
nop
call
int
icebp
rcr
cmp
not
adc
enter
out
fdiv
in
in
int3
lea
fsubr
out
lret
shl
sarb
aam
filds
stc
stc
int3
int
loop
xchg
stc
lock
cld
cmp
aam
orl
xchg
sub
hlt
call
cmp
cmp
cmp
jmp
mov
stc
test
xor
fsubr
cmp
repnz
loop
loope
xlat
movl
out
movl
hlt
xlat
testl
in
addb
aaa
aad
out
repnz
repnz
out
ljmp
sar
jmp
mov
cli
int3
loop
decb
iret
iret
repz
aad
jecxz
ret
aam
fucomip
stc
sub
sub
cmp
in
into
imul
out
aam
in
out
cld
leave
xchg
fucom
fadd
in
out
cmc
jmp
xor
xor
out
rcl
out
in
mov
out
jecxz
nop
in
int
out
xor
fnstenv
int
repnz
decl
in
fisttps
mov
ss
ret
fdiv
out
cmp
int
shr
lds
in
call
loop
out
enter
div
enter
xor
aas
ret
ret
in
fcoms
in
call
ret
idivl
out
cmp
cmp
clc
in
out
fcmovne
mov
cli
ret
cmp
enter
cmp
loopne
stc
incl
mov
stc
lret
aad
lock
xor
out
out
call
fcomip
in
sbb
in
jmp
jmp
in
test
lret
xlat
cmp
repnz
cmc
cmc
loope
loopne
int
lret
repz
ret
loopne
repz
cmp
shlb
icebp
sar
inc
std
mov
jecxz
notb
in
fdiv
neg
call
div
icebp
loope
sti
xchg
mov
in
fists
xlat
in
imull
aam
clc
jmp
xchg
fsubp
neg
lret
jmp
jecxz
xchg
jecxz
xlat
hlt
cli
aam
repnz
loopne
out
sti
rcl
cmpl
loopne
faddl
add
enter
jmp
filds
stc
leave
ljmp
xchg
mov
xor
fcomi
lret
enter
fmulp
cli
xchg
enter
out
decl
xchg
xor
test
add
push
push
mov
jmp
rcl
rol
rol
rcl
mov
or
jle
add
xlat
int3
in
fidivrl
ss
aad
std
cmp
aad
ljmp
jecxz
lret
rcl
ss
cmp
std
into
out
fdivp
aaa
shl
fsub
xchg
enter
loop
fldl
not
loopne
aaa
jmp
fnsave
aad
xor
neg
jmp
lock
xchg
ljmp
lret
out
cmp
cmp
sbb
xor
out
int
flds
xor
int3
out
aad
std
fincstp
hlt
cmc
sar
out
fdivrp
int3
jecxz
icebp
hlt
aam
fcomp
das
fst
repnz
cmp
and
roll
stc
cld
mov
out
in
fadd
cmp
in
cmp
rcr
testl
jecxz
iret
out
xchg
xchg
xchg
xchg
sub
ss
hlt
cmp
hlt
rol
test
in
xchg
and
cmc
out
iret
mov
int3
loopne
int3
out
sti
ljmp
aad
xchg
in
lret
sub
stc
jmp
icebp
mov
xchg
repz
shll
cli
jmp
lret
or
roll
mov
fsubp
ljmp
mov
jmp
repz
xor
fcmove
repnz
cmp
shl
jecxz
cld
xchg
mov
out
fpatan
icebp
shll
sar
std
rol
hlt
xlat
out
fildl
jmp
int
jecxz
int3
leave
int3
aaa
ret
fcmovb
leave
cmpl
cmp
cli
not
out
loope
push
cld
test
mov
enter
in
icebp
fcomp
push
cmp
rolb
fcmovb
fiadds
iret
xchg
ror
sub
shl
clc
aad
into
aad
int
int
sarl
in
ret
ljmp
iret
fsubrp
hlt
lret
ror
ss
cmp
out
cmp
xchg
std
sti
clc
mov
loop
in
shll
stc
int3
lret
fnstenv
jmp
in
xlat
enter
out
icebp
ret
icebp
in
loope
jecxz
xlat
lret
cmc
enter
cmp
hlt
sbb
rcr
aam
fiadds
repnz
aam
ret
out
cli
leave
xor
stc
fdivr
cmp
shl
cmp
xchg
stc
nop
lock
lock
out
int3
loope
cmp
into
fcomi
and
stc
test
jecxz
call
test
sarl
iret
roll
fsub
enter
orl
in
idivl
enter
fcomip
cmc
loope
sarb
or
out
xchg
sub
out
xor
cmp
in
in
adc
jecxz
lds
rorb
ror
shr
cli
in
ljmp
clc
repnz
mov
fisttpl
shl
in
out
cli
fcomp
cmp
fnsetpm(287
mov
mov
xchg
xchg
into
fsubr
jmp
icebp
jmp
xchg
stc
incb
mov
int3
xchg
int
out
loope
ret
cld
cmp
int3
ds
shl
cmp
cld
repz
clc
out
iret
loopne
out
xchg
sub
in
leave
shl
jmp
ds
iret
roll
fimull
rcl
in
shr
out
repnz
fdivp
ds
cmp
sti
repnz
int3
jmp
lret
lock
shr
icebp
ds
into
clc
cmp
roll
lret
sti
fstp
loopne
int3
and
loop
loope
lret
clc
aad
xor
cmp
in
cmp
ljmp
xchg
in
fsub
aad
lret
sub
in
cmc
aad
fdivrs
repnz
out
icebp
test
in
lock
test
jmp
cmp
aad
cli
or
shl
out
out
jecxz
lock
fcmovnbe
int3
out
inc
lds
fucomi
cmp
fcomi
aaa
loope
sti
out
xlat
in
jmp
mov
mov
decl
fsubrp
ret
jmp
add
inc
xchg
add
add
movzwl
mov
mov
movzwl
xor
add
jmp
into
mov
fmul
iret
fucomp
sub
inc
fdivrs
out
and
jle
add
in
int
fdivs
cmp
iret
repz
out
shl
rol
add
out
int
jmp
shlb
int3
aam
hlt
repnz
xor
cmc
rcr
ret
xchg
into
in
sar
rcl
loope
loop
ret
int3
stc
fpatan
ljmp
cli
loope
shl
cld
sti
aas
test
out
and
xchg
mov
in
cmp
jmp
lret
stc
aam
rcl
les
call
cmc
mov
in
in
sar
ror
lret
loopne
shl
ret
lret
fcmovnu
int
rcl
in
jecxz
shlb
ror
enter
sar
out
rol
not
call
stc
fsubp
mov
shr
xor
cmp
cmp
test
ret
hlt
leave
stc
rcr
mov
xchg
call
faddp
leave
loope
iret
cld
xor
clc
cmp
icebp
ret
ret
jecxz
mov
filds
int
fdivl
xor
adc
fiadds
lock
mov
call
in
cmc
repz
in
cmp
bnd
idivl
fadds
xchg
into
addl
hlt
fdivrp
sti
hlt
cmp
repz
idiv
cld
idiv
f2xm1
loopne
in
fsubp
aad
lret
lret
fst
aad
xlat
fdiv
faddp
fcomi
enter
clc
decl
aam
rol
repz
repz
out
lock
test
out
out
jecxz
into
fmulp
lret
loopne
in
in
xor
shl
in
loopne
aaa
cli
int3
in
out
sarl
repz
fcomp
fcos
cld
std
mov
xchg
jmp
leave
aam
leave
lock
testb
cmc
mul
mov
ret
loopne
nop
shr
int
in
int
loop,pt
hlt
ds
mov
in
ror
lock
sti
cmp
clc
cmp
cmp
xor
icebp
mov
out
rcll
aaa
rcr
repnz
leave
cmp
in
fpatan
out
loopne
fucomi
mov
jecxz
call
movl
fdiv
sarb
not
lock
ljmp
lret
icebp
into
adc
xor
imul
cmp
repz
out
xlat
ret
out
sub
imul
icebp
icebp
xlat
in
iret
out
leave
cmp
not
mov
in
int
loopne
addb
aad
call
hlt
out
loop
test
cli
cmp
out
aad
xchg
jecxz
xchg
in
loopne
enter
int
xor
cmc
loope
std
in
xlat
sbb
cmp
cld
call
mov
lea
in
enter
cmp
stc
xlat
shl
into
aam
xchg
cld
and
xchg
xchg
xchg
cmc
shl
jmp
loopne
xor
in
out
repz
idivb
in
test
ljmp
ss
xor
cld
in
lret
cmp
xor
cld
idiv
sarb
mov
in
in
call
xlat
cmp
aaa
fidivrs
neg
stc
stc
fsubr
in
icebp
cmc
int
int
shr
aad
shlb
in
lret
in
fdivr
out
loope
cld
int3
fsubr
sti
in
mov
stc
jmp
aaa
sti
cmp
fstp
clc
jmp
std
std
std
repz
xor
aad
leave
fdivrl
fcom
lock
out
shl
cmp
enter
lds
cmc
sub
cs
cld
cmc
out
int3
int3
repz
fcmovbe
rcl
cmp
cmc
les
ljmp
out
fld
lret
shl
loopne
std
sar
cmc
cmc
dec
cmp
fisttpll
rol
ret
ret
fdivr
out
aas
aad
loopne
cmpl
rcl
ljmp
call
sub
out
out
enter
in
loopne,pt
out
loopne
cli
neg
test
fsubr
test
mov
mov
mov
inc
cmp
jne
pop
jmp
ret
xlat
rcl
lret
xchg
inc
cltd
mov
jle
add
out
ss
xor
jecxz
ds
hlt
cmc
sar
fimull
loopne
repz
ss
call
in
cmp
fsubr
ret
xchg
test
ror
xor
fnstcw
sar
in
enter
cmp
std
sti
stc
les
iret
sub
in
cld
aad
ss
hlt
xlat
xlat
fiaddl
in
mov
mov
xchg
in
imul
shrl
xor
cli
ss
out
aad
lret
cmp
out
rcr
filds
out
sti
mov
into
out
clc
sub
cmp
into
fsubrp
fcompp
ret
repnz
aas
rcr
in
iret
mov
fcmove
in
iret
or
aaa
repnz
lret
adc
rcl
aad
decb
lret
aam
int3
sti
int
clc
ds
cmp
out
fadds
stc
into
mov
sti
dec
fdivp
icebp
cli
loop
lret
in
aad
lret
cmc
ret
cld
fadds
sti
fcmovne
out
sar
imull
out
fdivs
icebp
lret
f2xm1
test
rolb
fxch
fsub
cmp
lret
into
loop
repz
enter
rcl
int
cmp
in
loopne
cmp
loopne
int
ljmp
fidivl
xor
cmc
repz
call
hlt
loope
int3
mov
out
ljmp
xor
cmp
sarb
jmp
testl
cli
out
mov
in
out
ret
idivl
loopne
repz
out
cmc
cld
repz
xchg
ljmp
sbb
sub
leave
jmp
cld
ss
rcl
hlt
divb
shl
icebp
ret
ljmp
fimuls
out
jmp
xor
xor
ljmp
cmp
ret
fldl
into
out
lret
sub
rol
fdivrp
out
out
loop
sti
in
cmp
loopne
loopne
leave
out
loopne
xchg
nop
rcl
lock
sub
fdivrl
fcmovnb
sbb
cmp
fcmovu
in
ret
sti
ljmp
fucomp
ror
fcmovb
leave
in
repz
sbb
fmull
mov
out
xchg
cld
loop
out
out
iret
shr
clc
shlb
loopne
iret
adc
fidivrs
ret
std
fcmovb
clc
xlat
flds
rclb
fscale
in
leave
clc
loop
icebp
lock
repz
aam
leave
ror
xchg
aaa
shl
imul
clc
fcomp
int3
ret
in
fdiv
rol
mov
lret
mov
cmp
aad
xlat
in
fdiv
repz
mov
out
loop
fiadds
mov
xlat
loope
into
les
xor
in
icebp
cld
in
xchg
fcom
xlat
and
in
addb
clc
ror
out
cld
cld
sub
ljmp
test
rorl
out
enter
in
cmp
divl
rcr
hlt
aad
repnz
xchg
vpavgb
loope
jmp
incl
cmp
sarl
int
xor
jmp
fsub
in
and
fxam
fiaddl
out
in
mov
ror
in
cmp
int3
cmc
cmc
iret
lock
out
out
hlt
jmp
out
xchg
cmc
jecxz
iret
cmp
sti
repz
testb
mov
lock
fisttpll
enter
cmp
sar
int3
out
cmp
in
mov
ret
call
cld
out
mov
lret
xor
int3
ror
cli
in
repz
iret
shl
out
loopne
out
out
ljmp
ret
shl
cmp
aad
out
ret
test
out
fdiv
shr
repnz
idivl
rcr
hlt
lret
cmp
shr
repnz
loopne
leave
fmull
loope
jecxz
loop
enter
loopne
fdiv
repz
rcr
inc
icebp
mov
mov
jecxz
int3
xchg
xchg
neg
jmp
inc
clc
jmp
aam
fadd
fstp
pusha
shl
fwait
or
outsb
jle
aas
add
xor
cli
cmp
cmp
shl
xlat
out
ljmp
mov
in
fcmovnb
cmp
sar
leave
in
cmp
fistpll
mov
ffree
decb
call
shr
das
ror
enter
cmc
iret
rcl
enter
ds
ljmp
lock
leave
in
xor
enter
cmp
lock
stc
enter
in
in
and
lret
cmc
lds
icebp
cmp
std
ss
shl
cmp
repz
jmp
fmulp
mov
xchg
mov
out
leave
cmp
cmp
lock
push
loopne
fucomip
add
shr
into
out
aaa
clc
cmc
into
idiv
shl
cli
cmc
loopne
repnz
repz
cli
orl
in
loop
loope
out
sti
int3
xor
loop
sbb
leave
fcomi
orl
repnz
cli
cs
loop
fiaddl
addb
rcl
mov
in
jmp
cld
fsubr
ljmp
fisttpll
cli
clc
sbb
iret
aam
shr
rcl
ss
into
or
test
std
jmp
out
int
loope
test
into
in
into
cmp
lret
fdivp
cmp
cmc
in
ljmp
cmc
out
out
aaa
shl
call
cli
jecxz
sti
les
lret
loopne
loopne
xchg
lret
loopne
repz
loop
lock
rcl
cmp
decb
cli
clc
sti
int3
call
out
xchg
rcl
bnd
jmp
repnz
cmp
rorl
aad
test
loope
in
fists
cmp
xlat
fdivp
lret
lret
repz
div
loope
jmp
int
fimull
nop
ror
stc
loope
cmc
shl
fnstcw
int3
jmp
cmp
test
mov
in
jecxz
fucomip
cli
in
jecxz
hlt
fucomi
repz
and
mov
out
in
ffreep
in
out
in
xor
shr
fdivrs
cmp
repnz
lock
add
cli
mov
jmp
fisttps
xlat
aaa
in
cmp
rcr
into
fninit
cli
cmc
rol
test
in
lret
into
xchg
out
ljmp
fcmovb
cmc
into
into
clc
cmc
ffreep
jecxz
call
addb
into
xlat
clc
call
hlt
fildl
fnstsw
cmc
rorl
out
shl
xchg
mov
ret
aad
cld
xor
rcl
aam
xchg
loopne
jmp
xchg
repz
repnz
aam
cmp
cmp
in
sar
sbb
mov
into
leave
fiadds
jmp
out
repnz
aad
cmc
loope
loop
loop
mov
xchg
shr
aad
sub
xlat
cmp
jmp
cmp
cmp
sti
loop
hlt
jmp
add
fisttps
in
lock
iret
fxch
aad
aas
ret
aam
shl
fcmovbe
cmc
and
in
iret
aas
out
int3
rcl
lret
fstpt
loop
not
lock
sub
aas
loop
fisttpll
aam
out
jmp
lret
aad
cmp
add
fcom
ret
fsub
mov
test
lret
lret
xchg
in
xor
icebp
cmc
out
ljmp
testl
repz
out
aam
in
xor
idiv
out
ror
loope
ret
repnz
repnz
cmp
ljmp
incb
xor
or
jecxz
addb
aas
ljmp
aad
rol
lret
fldz
in
ret
mov
call
iret
out
lret
xor
mul
idiv
xlat
fcmovu
orl
orl
enter
xor
jmp
fcomp
fistps
je
pop
insl
xchg
fs
jle
add
cmp
cmpb
loop
movb
add
fimuls
ror
shr
iret
out
cmp
cmp
addb
sti
loopne
int3
int
jecxz
lret
fdivs
sti
jecxz
aaa
ror
in
fsubp
movl
jmp
lds
hlt
bnd
into
ljmp
cmp
test
test
call
rcl
xor
cmp
hlt
cmp
fsubr
aad
aam
sar
fdivr
mov
int3
incl
lret
sti
lock
in
call
call
fsubp
repz
mov
xchg
int3
in
call
xchg
cs
leave
repnz
cmp
fnstcw
cmp
loopne
rolb
fsubr
incb
and
out
out
jmp
cmp
fnstenv
fcmovnbe
shl
fmul
imul
cli
mov
bnd
jmp
ror
not
jmp
cmc
fildl
rcr
mov
int
call
out
xchg
repz
sti
into
std
sti
iret
sti
out
fucom
std
addl
mov
fucomp
xor
xor
add
rcl
ds
mov
mov
loop
mov
xor
repnz
rcl
rcr
in
into
test
loop,pt
aam
jmp
std
enter
int3
fmulp
clc
xor
out
std
loop
push
aam
test
in
in
loope
in
fcoml
int
sub
repnz
ljmp
hlt
xor
jmp
call
lret
ret
cmp
out
div
cmp
hlt
test
test
imul
or
shl
xlat
into
xor
div
cmp
loopne
xlat
iret
into
int
clc
icebp
repz
pop
xchg
xchg
nop
fstl
leave
clc
out
rcl
sar
loopne
out
loopne
loope
les
test
mov
mov
mov
ror
xchg
out
repnz
icebp
aaa
clc
cmp
hlt
xor
clc
jecxz
sar
call
jecxz
leave
in
mov
in
xlat
rcr
aas
lock
icebp
loope
aas
stc
aas
jmp
jmp
xchg
loope
stc
out
divl
sti
sarb
jmp
std
testb
lret
sub
into
loop
into
fisttpll
in
aam
iret
dec
rcr
cmpl
out
cmc
cmc
loop
mov
int3
fdivrp
mov
xor
out
cmp
std
shl
lock
into
cmp
rol
jmp
int
ljmp
icebp
jmp
cmp
in
std
lret
test
in
jecxz
jmp
cmp
rolb
sub
lock
iret
ficoms
fcmovb
out
cmp
into
cmp
out
icebp
xchg
cli
aad
sti
cld
lret
loope
out
xchg
das
in
xor
out
out
into
cmpb
aas
cmp
repnz
test
out
decb
aas
lock
cld
not
sub
cmp
std
icebp
lds
xchg
sti
xchg
repnz
fucomip
fcmovu
int
cmp
cmp
fsub
hlt
rcr
std
aad
int3
cmc
out
out
mov
fdivr
clc
fmul
cli
not
loopne
repnz
rcr
flds
enter
cli
jmp
jecxz
xchg
in
aad
jmp
fst
in
in
out
sbb
out
fimull
sti
lret
xor
shl
stc
ss
lret
in
into
test
fmuls
lea
lock
in
sar
iret
stc
add
jecxz
fcmovnbe
mov
in
test
ljmp
cmc
hlt
into
idiv
fdivp
cmp
in
test
cmc
sti
aam
loope
fmul
testl
rol
xlat
fxch
std
fldln2
cmp
sti
shl
jmp
addl
mov
int3
xor
std
faddl
mov
mov
jmp
iret
aas
aas
ror
rcl
ret
pushf
mov
andl
jle
aas
add
out
int3
cmp
loope
addb
stc
fiadds
enter
nop
aad
aaa
fsubr
sti
lret
hlt
fcmovbe
aam
sti
aad
ror
call
fucomi
mov
ljmp
aaa
int
loop
repnz
repz
rcr
shl
fcomp
ljmp
test
xchg
orl
lret
fnstsw
int3
lock
clc
cmp
out
int3
in
out
xchg
addl
loope
aam
int
test
aad
std
loope
and
jecxz
cli
sub
ljmp
sti
sar
fcmovnb
enter
cli
xchg
cld
int
shll
out
loop
sti
cmp
fnsave
cmp
into
loope
xchg
fcmovnb
rcl
loope
clc
into
fucomi
jecxz
out
rcr
cli
aad
repz
cmp
loopne
sub
cmc
les
enter
lret
sub
cmp
int3
xor
fst
roll
std
cmp
rcl
std
call
out
in
frstpm(287
jmp
test
cld
div
aam
loop
xor
rolb
jmp
mov
cld
ror
lret
jmp
cmc
clc
rolb
aad
cmc
mov
loopne
xchg
out
adcb
test
hlt
fcmovbe
bnd
mov
cli
fcmovbe
cli
rcr
jecxz
mov
out
out
cmc
cmp
aaa
ds
in
loope
mov
fcmovbe
cli
lret
out
jmp
loope
cmp
in
ljmp
into
int3
aaa
out
aas
shr
aam
adcb
xchg
iret
rol
aaa
lds
out
loopne
jecxz
int
cmp
stc
into
lret
sti
and
out
div
ss
fnstenv
repz
repnz
repz
sti
out
out
out
in
fiaddl
ljmp
cmp
cmp
cmp
out
ljmp
test
into
fnop
aam
repnz
cld
xor
nop
orl
lock
cmpl
adc
xor
test
fmul
enter
repz
std
fdivp
lret
ljmp
cmp
call
mov
enter
iret
test
loop
mul
stc
jmp
ljmp
test
hlt
cmp
in
in
xlat
call
shr
fdiv
xor
sti
lret
mov
call
les
ljmp
loopne
cmpb
out
rcr
adc
into
or
loop
lock
fsubr
aas
aas
clc
cli
lock
cld
icebp
aad
test
filds
shll
std
lock
cmp
rolb
cmc
hlt
jmp
lock
cld
nop
adc
ss
shl
cmp
std
cmp
cli
aam
loop
int3
mov
std
in
shrl
bnd
cmp
cmp
cmp
test
aam
mov
test
mov
and
jmp
aad
int3
in
out
cmc
xorl
aas
fucomip
repz
xlat
neg
fisttpll
xchg
sub
jmp
in
cmp
out
testb
in
nop
ljmp
enter
cs
fcmovbe
aad
xor
fnstcw
cmp
lret
int3
in
std
into
fistpll
int3
xor
sti
out
jmp
cli
rol
in
testb
mov
and
in
out
call
out
cmp
fmul
mov
fadds
loopne
xchg
jmp
xchg
xchg
clc
xor
fcmovnbe
shll
fucomip
cmp
xor
fadd
aam
loope
loope
hlt
jmp
leave
xchg
hlt
ss
aam
in
rcl
lret
in
out
fsubr
stc
xchg
xchg
aad
cmc
loope
jmp
ror
xchg
shl
shlb
iret
leave
out
shr
add
add
rol
aad
pop
pop
movsb
or
jae
out
jle
aas
add
xor
in
cmp
shr
iret
aad
clc
orb
mov
rcr
mov
loopne
xlat
repz
fidivrs
lret
jmp
out
aad
mov
call
test
hlt
clc
aam
out
xlat
xor
jmp
aam
repnz
lock
xacquire
test
sti
xchg
fdivs
in
clc
fistpll
repnz
in
ret
loop
idiv
mov
xchg
out
mov
jmp
imul
lock
int3
shl
lock
div
out
fucomi
in
lret
mov
aaa
sub
loope
cmp
div
hlt
xchg
cmp
mov
fimull
loopne
ret
int
repnz
incb
std
loop
xchg
fucomi
ljmp
clc
loop
fdivr
out
fdiv
lock
jmp
loop
call
call
mov
std
repz
xor
xor
jmp
fsubrp
cld
fdivr
cli
ret
ret
leave
out
fisttpl
sub
out
xor
neg
in
cmp
in
cli
jecxz
testl
lock
fucom
jmp
xor
in
out
div
cmc
repnz
ds
out
lret
lds
fdivrp
shrb
iret
cmp
fldz
ss
cmp
shl
cld
hlt
leave
jmp
lea
aad
cmc
ljmp
aad
ror
neg
icebp
out
enter
out
jmp
cmp
call
loop
rcr
shl
stc
rcr
mov
lret
ljmp
repz
enter
out
aaa
cmp
ret
mov
loope
jmp
mov
loope
push
stc
jmp
cmp
clc
ret
shl
out
adc
cli
loop
repz
in
lret
lret
int3
fidivrs
in
xchg
lret
loope
out
mov
mov
fucomip
ret
aaa
fcmovne
lock
hlt
lret
sti
stc
aas
sarl
cld
sti
stc
orb
repz
xor
shl
ljmp
fcmovbe
shl
std
fdivr
fmull
shr
out
icebp
in
out
std
lret
sti
rcr
loope
cli
fsubp
out
enter
mov
loop
xchg
in
lock
ret
ds
lock
repz
aas
jmp
orl
fyl2xp1
std
ds
cmc
cld
cmp
xchg
fucomip
lock
or
out
cld
iret
xor
std
lret
hlt
fisttps
in
sti
jmp
in
out
cmc
imul
lret
clc
cmp
shl
aas
in
hlt
jecxz
sti
out
rorb
in
shlb
repz
cmp
cld
in
cmp
ror
cmc
call
mov
in
fdivrp
lock
icebp
vpsrlw
and
cmp
loope
neg
xchg
jmp
repnz
out
mov
in
in
clc
dec
ljmp
addl
fmul
mov
enter
xchg
xchg
cs
xor
in
jmp
roll
cmp
loop
mov
cmp
xlat
sbb
xchg
repnz
rol
xor
fcmove
push
cmp
icebp
clc
icebp
cmp
clc
call
int
xchg
xchg
out
xor
fcmovne
ds
aad
rcl
cmpl
int3
add
into
test
xor
in
hlt
xor
ss
lret
in
mov
ljmp
hlt
out
xor
ss
sarb
incl
xchg
testb
std
lock
in
cmc
mov
lret
xor
sti
lret
test
aam
stc
call
in
mov
in
nop
iret
rcl
sub
hlt
out
cmp
cmp
out
enter
cli
mov
mov
test
lret
out
std
xor
rolb
mov
mov
mov
jmp
ret
into
sarl
rol
rcl
ja
data16
jg
aas
add
repz
cmp
in
repz
xchg
clc
enter
cld
xchg
test
iret
ror
imul
std
cmp
out
cli
cld
adc
icebp
in
fstp
in
std
fsubrp
out
into
loope
lret
xor
cmp
call
loope
cli
cmc
repnz
fstp
enter
loop
sbb
in
nop
iret
div
fnop
sub
cmp
cmp
fst
ljmp
in
xchg
into
mov
fnop
cmp
cmp
test
sti
mov
hlt
int3
decb
iret
loop
div
lret
cmp
xor
stc
cmp
xlat
sar
cmp
loop
loope
fsubp
mov
cld
in
in
in
xlat
xor
into
adc
loope,pt
rol
in
sti
shl
xchg
loope
out
in
xor
aaa
leave
xor
fcmovnu
not
rol
fildl
lret
loope
int3
fptan
jmp
nop
iret
xor
leave
cmp
sar
aam
rcl
jecxz
cmc
out
stc
cli
or
int3
xchg
in
test
ss
cmc
out
fdivl
cmp
clc
xor
mov
ffreep
in
mov
xchg
loope
mov
hlt
loope
icebp
repz
imul
in
sti
int3
cmp
test
loop
mov
movb
in
bnd
lret
enter
rcr
xor
stc
loopne
ljmp
lret
hlt
adcb
aad
cld
jmp
call
cmp
ret
repz
adc
mov
xchg
mov
aam
into
out
std
jmp
lret
aas
fildl
cli
clc
cli
fcmovnu
cld
cmp
loop
fnop
shll
loope
fucomi
out
aad
loop
stc
sti
addl
in
hlt
in
cmc
stc
out
aad
xlat
ror
jecxz
std
sarb
xchg
leave
int
nop
mov
out
fdiv
iret
out
shl
in
fdivrs
cmp
rcl
icebp
cmp
enter
fcmovnu
xchg
cld
xchg
orb
xlat
hlt
cmp
sti
dec
out
call
xchg
fcmovu
jecxz
lock
aas
loope
cmc
in
cmp
xor
loope
icebp
hlt
lret
out
neg
fmul
jmp
hlt
xchg
xor
lock
out
loope
test
fcmovnbe
stc
ret
enter
fcmovu
sbb
in
call
ss
out
sar
jmp
repz
rcl
ds
flds
ret
iret
ffreep
shl
xchg
ljmp
cmp
aas
adc
test
fucom
addb
xchg
out
int
aaa
hlt
jmp
fdivp
mul
out
ret
out
lock
in
incb
xor
std
cmp
cmp
aam
cli
or
jecxz
ljmp
shl
lret
test
loop
enter
cmp
cmp
lret
xor
rcl
out
enter
int3
int
shl
in
in
sar
fnstenv
sub
call
xor
mov
repz
out
aam
ret
shl
jmp
push
fcmovu
cli
clc
fxam
cmp
int
loopne
rolb
rol
sti
lret
out
aas
cld
cmp
sti
rcr
xchg
xchg
int3
add
fsubrp
mov
hlt
lock
cmp
cld
lock
out
ret
adc
fsubr
test
xor
icebp
cmp
ljmp
std
cmp
fsubr
out
rorb
xor
fmul
idiv
in
into
int
hlt
ss
div
fstp
movb
icebp
leave
out
std
jecxz
ror
ljmp
int
sar
xchg
jecxz
lock
mov
mov
int
cmp
in
lret
cmp
hlt
cmc
xlat
shl
neg
mov
clc
or
std
int
fisubrs
aam
out
mul
repz
call
ffreep
loop
mov
loopne
ljmp
lds
lret
rol
cli
xlat
call
cmp
je
mov
mov
jmp
leave
aad
movsb
inc
jb
loopne
into
je
add
aas
add
cmp
out
jecxz
xchg
enter
cli
lret
lret
fucomp
enter
int
repz
in
aas
xor
xor
repz
fucomp
out
mov
sti
mov
out
decl
out
fucomi
in
idivl
in
lret
repz
fsubrp
addl
xchg
mov
div
clc
aaa
fcomp
fst
enter
test
xchg
fucomp
in
orl
ret
xor
out
aaa
cmp
clc
aam
out
ret
aad
shl
in
mov
jmp
mov
mov
xchg
in
iret
shl
cmp
cmpl
fcmovb
stc
std
in
repz
call
shl
lock
cmp
rcr
jecxz,pt
jmp
imul
leave
call
in
jecxz
repz
fcomp
jmp
aam
inc
roll
loop
cmp
test
aad
shl
sarb
icebp
sarb
cmp
rcl
and
aas
mov
aam
xchg
mov
int
lret
enter
clc
loopne
lock
sti
out
flds
ljmp
cmc
test
lret
jecxz
jmp
fcmove
stc
cli
cmp
enter
ret
int
add
faddl
lret
vpsubw
int3
out
fcmove
cmp
cmp
in
test
fcomp
iret
icebp
clc
jmp
cmp
call
ret
cmc
sarl
sti
int
fcomp
ffree
xchg
aaa
ss
cmp
cld
sub
fdivrp
sbb
jmp
enter
mov
cmp
test
rcr
fcmovu
loopne
out
into
stc
test
mov
lret
loop
mov
fmul
xchg
jmp
clc
in
ljmp
cli
aam
xor
faddp
or
jecxz
shl
iret
clc
aaa
shr
fucom
fcomip
cld
in
cmp
aas
cmc
in
mov
lret
loopne
hlt
in
in
loope
ljmp
stc
incb
out
orl
int
out
repz
in
sarb
hlt
iret
cld
aad
iret
sarb
ret
jecxz
out
sbb
in
cmc
icebp
subl
sti
cmp
jmp
rcr
hlt
in
cmc
jecxz
mov
div
repz
fstp
aad
fcomp
jmp
rol
sti
out
lret
call
xchg
loopne
sub
lret
cmp
cmp
cmp
ds
xchg
mov
mov
fimuls
sbb
hlt
shl
xor
call
aad
inc
xchg
aas
cli
ljmp
in
int
xchg
xchg
xor
int
jmp
sar
cmp
in
ret
sarb
fucomi
aad
orb
repz
fildll
test
repnz
idiv
cld
cmc
cmp
jecxz
cld
loopne
cld
int
fldpi
sti
out
icebp
rol
lock
xlat
clc
aaa
fcomip
rcl
clc
fidivrl
loop
fmul
in
int
xchg
mov
and
in
cmp
aaa
lock
cmp
in
lock
fsubr
les
in
ljmp
into
cmp
cmp
into
in
les
repz
and
loopne
sti
out
call
int3
sub
sub
xlat
enter
stc
std
lock
cmc
rcl
loope
and
mov
test
xchg
lret
out
aam
aaa
xor
clc
fcomip
fadd
xor
ds
orb
xchg
in
xor
add
cmp
test
repz
mov
in
call
nop
into
mov
lock
fmul
repz
in
jmp
cmp
cmp
std
lea
cli
in
icebp
addb
bnd
cmp
fsubr
sub
and
in
not
nop
cmp
loope
into
or
cs
rcr
shl
xlat
jecxz
cmc
incb
leave
fdiv
iret
sub
aad
clc
lret
call
xor
or
add
test
sub
add
add
add
into
aam
aad
fst
stc
hlt
stos
xchg
and
leave
popf
sub
jg
aas
add
cmc
sarb
cmc
xchg
loopne
shl
ljmp
hlt
fucomp
iret
into
in
fdivrl
das
out
int
cli
shl
cmc
cmc
call
xlat
lock
rol
xlat
sub
cmc
fdivrs
aam
loop
addb
hlt
int3
fldl
sub
lret
out
cmc
hlt
rcl
rcr
loopne
roll
lock
xor
loop
icebp
ljmp
fdivr
ss
testb
fsubr
ror
int3
iret
xchg
int
not
ss
cmp
int3
cmpb
cmc
test
testl
cld
mov
std
xchg
int3
xchg
test
cld
lret
leave
xlat
lret
sar
and
rcr
loopne
rcr
cli
mov
cld
jecxz
xchg
xchg
mov
shrb
test
push
add
repz
nop
loopne
repz
in
fucomip
shr
cmc
fstpt
aad
fdiv
fdivp
sbb
std
out
std
cmp
in
xchg
aad
loope
jmp
fpatan
xor
loop
cld
lock
xchg
decl
or
and
xor
fdivl
out
aam
sarb
neg
aam
rol
cmp
jmp
xchg
mov
call
iret
sti
bnd
out
fcmovnu
mov
fld
fucomi
iret
xorl
icebp
test
cmc
shlb
cmp
ret
loop
sti
sbb
jmp
cld
in
shl
das
xor
repz
loope
aas
iret
iret
std
mov
jmp
test
mov
mov
mov
aam
xlat
out
stc
int
out
xlat
in
loop
shl
sti
into
in
shl
jecxz
xlat
loopne
test
call
cli
ret
cmc
fld
in
sbb
test
xor
xlat
lock
xor
cmp
lock
cld
mul
loopne
test
test
out
out
shrl
das
in
jmp
lret
out
and
fcmovb
cld
aad
out
fsubp
xchg
mov
ljmp
aad
lock
clc
out
loope
fcmovne
sti
leave
orl
std
in
out
enter
neg
fcmovu
ljmp
cmp
clc
shl
test
sub
mov
sti
out
ror
vpsllw
fnstsw
rcr
ds
shl
ljmp
iret
out
hlt
rcl
xlat
xor
jmp
std
addl
mov
test
movb
std
xchg
jmp
in
jmp
jmp
cmp
mov
faddp
xchg
xchg
imul
enter
icebp
std
icebp
and
les
std
sub
sti
call
clc
vpminub
shl
cmp
jecxz
in
loop
sub
jmp
loope
out
cld
ljmp
cmp
shl
jecxz
out
mov
mov
cld
mov
loop
out
fcmovnbe
fucomip
fnstcw
clc
ror
xchg
sbb
cld
nop
into
out
test
rcl
test
rol
iret
sar
cmc
sti
fdiv
lock
inc
orl
test
in
hlt
in
aam
in
iret
enter
out
in
sarl
stc
icebp
call
std
test
out
shl
loop
lds
xlat
loopne
sti
cmc
fsub
jmp
aas
shl
loop
std
dec
loop
out
call
cmc
ror
cs
repz
cmp
rcl
sbb
fcomip
vcmpsd
mov
cmp
out
into
xor
aam
xor
out
cmp
idiv
cmp
out
addb
repz
jmp
cmp
xor
ds
ljmp
test
jecxz
out
mov
xchg
fdivr
decl
cmp
leave
int
shr
cmp
in
fmul
fstp
repnz
fadds
aad
clc
repz
rcr
fcmovnbe
std
hlt
mov
movsbl
jmp
aam
aad
fstp
movsb
ficomps
inc
ljmp
jle
rcl
cli
mov
xchg
fsubr
jecxz
lock
aam
lret
out
ss
xlat
cmp
fxch
neg
loope
test
sti
ret
mov
sar
lret
repnz
out
shl
call
rcl
sbb
filds
icebp
loop
out
in
lock
add
fldl
test
leave
int3
lret
std
cld
test
out
icebp
cmp
lret
ds
iret
cmp
lock
xlat
test
cld
lock
shl
out
mov
xlat
lret
xlat
rcr
incl
in
call
mov
ljmp
sub
repz
xlat
cmp
fcomp
xlat
jmp
fcmovnbe
lret
loope
out
cli
fcmovb
xor
int
loope
aad
test
xchg
cld
xchg
sar
fists
jecxz
cmc
leave
das
cld
aaa
cmp
in
clc
test
xlat
jmp
into
int3
leave
nop
lock
aad
loope
jecxz
div
out
in
roll
xchg
in
mov
in
xchg
std
decl
in
repz
in
f2xm1
fucom
repz
xchg
sar
sti
nop
clc
int
into
aas
loope
xor
aad
cmp
lret
cmp
rcl
aad
decb
test
enter
out
out
rcr
loopne
fcom
aad
push
add
clc
int3
repz
xchg
xchg
lret
jecxz
lock
imul
cmp
rol
loopne
inc
mov
int3
mov
sbb
mov
mov
div
out
std
xlat
shl
cmp
div
hlt
out
iret
fucom
test
rcr
mov
aam
test
ss
fpatan
aad
cmp
stc
xchg
ljmp
lock
out
into
ret
icebp
cmp
div
fsubr
test
rcr
out
int3
cmc
icebp
into
fdiv
into
in
lret
lret
xor
int3
std
icebp
hlt
aad
fcom
mov
leave
stc
in
fmull
cmp
jmp
sar
fsubp
std
loopne
addl
sti
std
loop
addl
int
in
out
cmp
cmpl
testl
mov
ret
lock
aam
ljmp
xlat
fdiv
les
xchg
loop
int3
xchg
mov
hlt
ret
xbegin
sarl
mul
adc
shl
orl
jmp
in
xlat
in
xor
cmp
ror
int
fstpt
ret
xchg
mov
lock
repz
in
cli
jmp
fcmove
jecxz
hlt
repnz
ljmp
iret
out
xchg
loopne
shl
out
xor
fdivrl
fsubr
cld
loopne
out
cmp
fldl
test
ljmp
clc
fld
ftst
call
ret
out
ret
shl
fdecstp
mov
in
int3
and
cmp
in
cmp
stc
cmp
loop
stc
test
jmp
in
sub
ss
into
lock
fiadds
ljmp
enter
xchg
out
out
xor
xor
out
cmp
repnz
icebp
test
mov
lret
in
xchg
int
hlt
ret
lock
fucomp
aam
aas
cmp
hlt
clc
clc
std
aad
xchg
mov
int3
call
iret
mov
ret
lds
sub
cmpb
sub
test
jmp
les
shl
xchg
icebp
iret
lret
aam
lock
leave
fsubrp
fdiv
test
cld
out
hlt
stc
nop
loope
in
shl
not
jmp
repnz
cmp
loope
xlat
sar
stc
test
into
into
in
mov
out
repz
lret
cmp
into
out
fildl
loopne
call
fimuls
hlt
rcl
out
xor
fdivl
shr
add
add
lret
enter
int
cltd
movsb
imul
cmp
push
stos
adc
aas
add
in
leave
fimull
cmp
xchg
clc
clc
out
icebp
jmp
cmp
shll
imul
cmc
sbb
lock
clc
ljmp
out
std
in
not
fsubrs
cli
into
ljmp
clc
test
test
enter
ljmp
ror
shlb
in
aaa
ror
cmp
ljmp
cmc
ret
cld
xchg
out
cld
int3
test
xor
out
in
into
jmp
iret
int3
out
sti
aas
in
aad
ljmp
mov
repz
lock
lret
cmp
shl
in
ret
fucomi
lret
out
xchg
into
out
fsubr
cld
rcl
cmp
or
neg
ljmp
lret
int3
hlt
divl
in
in
cli
fsubrp
cmp
cli
out
mul
fmuls
sub
shl
mov
in
repz
sti
repz
fdivrp
rol
cld
ljmp
cli
sti
std
fmulp
shl
les
rcr
int3
cmp
aas
aad
rcl
cli
lds
test
xchg
shl
icebp
jmp
cmp
lret
cli
cld
xlat
ret
aaa
aas
in
xchg
icebp
xchg
rcr
fucomip
icebp
shl
repz
call
std
iret
in
fcmovb
out
enter
into
fmul
call
into
out
fsubr
xor
fildl
call
mov
orb
aam
xor
repnz
sti
into
fcmovnbe
icebp
enter
xchg
test
or
rorb
xor
xlat
adc
addb
jmp
test
test
rcl
in
lock
into
fsubr
cmp
in
filds
aad
in
and
call
xor
iret
into
ss
out
into
call
lock
and
ljmp
loopne
jmp
cld
cmp
lret
aad
ret
mov
std
loopne
test
aam
out
aad
ror
in
cli
xlat
cmp
test
test
int3
in
ljmp
out
test
jmp
int
cmc
out
in
xchg
in
out
orb
hlt
iret
cmp
in
frndint
test
aaa
fcmovne
aad
add
mov
loope
xor
xor
cmp
frndint
fcmovnu
loop
lock
enter
ret
add
xchg
and
jecxz
enter
aad
out
clc
aad
aad
shl
mul
icebp
sti
out
cmc
fiaddl
test
jecxz
aaa
loope
mul
std
push
fucomip
fcomp
ret
loope
loop
fcmovb
sti
adcb
iret
enter
in
rcl
fmulp
faddp
int
cmc
flds
jecxz
mov
clc
ror
shr
xor
lret
lret
lds
xchg
leave
std
into
lock
mov
in
cld
jmp
fst
rol
loopne
xchg
fdecstp
loop
mov
not
shrb
xor
repz
div
jmp
fucomp
sti
and
sub
jmp
xlat
sar
ss
in
roll
enter
loopne
cli
fmul
xchg
fadd
fld1
fcmove
rol
rcr
cmc
loopne
loopne
fninit
in
stc
xchg
std
out
xchg
xchg
xor
out
ss
add
add
cld
loop
in
xchg
nop
sub
sub
int3
cld
aas
loopne
sti
sti
bnd
iret
fabs
jecxz
testl
xchg
icebp
xor
cli
hlt
cld
jmp
sarl
call
xlat
mov
stc
sbb
icebp
hlt
xor
hlt
sti
jmp
div
cmp
ds
mov
enter
out
cld
mov
xchg
jmp
enter
enter
xor
clc
cmpl
jmp
iret
ror
fcmovnu
out
mov
insb
adc
jle
add
ret
std
hlt
cmc
fimuls
into
out
fists
sar
repnz
repz
int3
xlat
out
clc
mov
mov
std
in
loopne
int
aam
in
ss
ljmp
in
aam
loopne
cld
test
ljmp
mov
cmc
sarb
fnstenv
cld
std
hlt
shlb
lret
idivl
rcr
ret
in
jmp
test
xlat
xor
int
fistpll
xor
testl
xchg
fcomip
out
aas
enter
xlat
ljmp
out
cmp
loop
loope
orb
in
iret
in
rcr
repnz
leave
neg
in
rcl
aas
loope
fadd
fcmove
lea
xchg
aaa
enter
neg
divb
out
cmc
rcr
ret
aad
rorb
in
stc
mov
lret
xchg
clc
lret
out
aas
cmp
cli
cmpb
roll
clc
ljmp
call
xlat
call
ds
ret
repnz
vpmullw
jmp
lds
xchg
mov
loop
repnz
out
in
cmp
aam
cmp
movb
fimuls
lret
out
cmp
repz
stc
cli
fiadds
call
ret
out
into
repnz
sub
les
cmp
stc
fucomi
test
xlat
orl
stc
cli
repnz
out
out
in
and
repnz
testb
test
sub
cld
xchg
xchg
loope
int3
aaa
repnz
xor
xor
in
cmp
iret
icebp
jecxz
xchg
repz
incl
popl
repz
cmp
cmpb
icebp
leave
hlt
ret
jmp
loope
loope
addb
icebp
out
cmp
ljmp
mov
std
testb
out
test
cmp
int3
call
sar
ret
adc
fildl
into
fimuls
cmp
xor
std
lret
loope
aam
cmp
repnz
mov
enter
in
xchg
repnz
into
cli
into
enter
aaa
repnz
in
in
idiv
ret
cli
fsubr
in
cli
in
icebp
cld
mov
div
sti
shl
ss
inc
hlt
in
xchg
roll
lret
xchg
mov
xor
loope
iret
fst
stc
loopne
aad
into
ss
faddl
fcmovb
in
jecxz
mov
out
xchg
aad
aaa
call
sbb
ret
sar
mov
fdivr
xabort
mov
mov
lock
in
idivb
out
lock
rol
jmp
fsts
incl
cmp
cmc
out
test
lock
loope
stc
imul
jmp
incb
in
aad
sub
jmp
repnz
mov
out
ret
xchg
ror
xor
in
jmp
mul
cmp
cld
neg
loop
cmc
out
int3
mov
call
ror
out
xlat
cmc
lret
ds
clc
sti
inc
std
xchg
repz
out
stc
cld
into
repnz
lock
repz
lret
lock
out
jecxz
xlat
fcomip
lds
jecxz
out
in
clc
int
enter
cmp
aaa
fstpt
out
fnop
rcr
in
int3
jmp
enter
mov
hlt
clc
cmc
icebp
cmp
int3
jmp
lock
loop
xchg
leave
jecxz
leave
enter
orl
sbb
cmp
xchg
add
xchg
ljmp
in
hlt
int3
xor
aaa
aam
hlt
enter
rcr
fsubp
out
test
fisttps
xchg
loopne
shl
call
clc
cmc
lret
lock
ret
enter
sub
stc
stc
iret
xchg
in
shr
iret
call
stc
sti
ss
div
lock
je
movl
jmp
int3
into
fmul
fsubrl
in
jecxz
pop
jg
fldt
add
stc
leave
fisttps
orl
jmp
sarb
loop
in
cmc
rcr
repz
mov
lret
sub
in
jmp
in
jecxz
xor
lock
hlt
test
cmc
loope
mov
sti
testl
shl
sti
in
cli
out
leave
cmp
lret
out
aad
call
aad
repz
loope
icebp
icebp
xor
repz
icebp
in
or
cmp
ljmp
in
call
ljmp
das
leave
lret
cmp
ss
cmp
iret
ret
test
in
idiv
test
cmp
into
loope
mov
lret
ljmp
cmc
int3
fdivrp
filds
orl
cmc
xchg
stc
iret
cmp
aad
iret
sti
std
cmp
jmp
dec
cmp
sti
xlat
clc
ret
test
jmp
out
loope
shr
out
ret
cmp
int3
cmp
hlt
enter
call
shl
mov
loope
cmp
sti
iret
mov
fdivr
shl
fyl2xp1
ret
clc
cld
lds
rorl
into
jmp
shr
out
shl
aad
repnz
xlat
mov
in
aad
xor
int3
in
ljmp
rolb
in
cli
lret
jmp
iret
div
jmp
cmc
rcl
fsubr
clc
shl
aas
shl
shl
fcom
lret
cli
iret
std
shl
nop
test
xor
shll
hlt
fmul
icebp
push
call
out
fsubr
hlt
xchg
rol
jmp
xbegin
xor
in
iret
rol
std
cld
cmc
in
filds
adc
jecxz
cmp
fdivr
std
iret
sarl
aam
shl
idiv
fidivrl
neg
fisttpll
icebp
ror
out
leave
out
fcmovnu
shl
adc
loope
cmp
stc
flds
mov
rcr
leave
xor
cmp
stc
hlt
ds
sti
iret
ret
xor
out
out
loop
nop
into
jecxz
jmp
int3
in
int3
sar
ljmp
aam
aad
rolb
enter
dec
iret
fsubp
loop
hlt
into
in
int3
fcmovnbe
cmp
hlt
rolb
sti
loop
addl
cld
xchg
out
leave
shlb
cmp
fldl
xchg
fsub
ljmp
out
mov
std
hlt
iret
mul
jmp
cld
int
xor
sar
incl
mov
iret
lock
rol
in
out
out
cmc
hlt
cld
stc
fnstcw
aas
fdivr
in
ret
ljmp
xchg
jecxz
ljmp
cld
aad
shl
shl
loop
std
call
mov
aam
repz
out
xor
shl
addl
mov
sub
adcl
lret
cmc
iret
cmp
lock
fsub
ss
out
rcl
mov
out
jmp
loop
rcl
divl
cli
cmc
ss
xlat
rcr
out
std
in
loope
mov
iret
shl
or
aam
aam
fcomi
cmp
ds
in
jmp
lds
div
out
leave
clc
in
into
aaa
ds
fdivrs
stc
test
xchg
repnz
int
fucomi
aaa
sti
aad
sti
hlt
cmp
jecxz
in
enter
xchg
aam
call
sar
iret
fnclex
faddp
fsubr
hlt
std
leave
mov
in
xor
xchg
lret
jmp
out
lret
clc
xor
cmp
clc
jecxz
ret
int
addb
out
jmp
loop
in
repz
aas
hlt
loope
xchg
fmuls
leave
ror
xchg
aam
lds
cs
loope
repz
loopne
mov
jecxz
cmp
xchg
mov
cli
in
ss
adc
xlat
rorb
add
add
ror
int3
aam
mov
sbb
out
sbb
jle
in
repz
enter
jmp
cli
test
div
in
imul
sar
idiv
fistpll
mov
sti
or
in
clc
in
aaa
shl
cmp
cmp
xchg
test
xchg
xchg
les
lret
ret
call
loopne
cmp
xlat
stc
ljmp
mov
mov
shr
in
aas
xor
cmp
xlat
jecxz
icebp
ret
stc
ljmp
in
lock
lock
in
int3
in
repz
orl
out
out
push
repz
mov
in
jmp
jmp
fadds
lock
idiv
testl
icebp
in
xor
sti
clc
enter
int
in
ds
loope
stc
adc
mov
jecxz
adcl
int3
cmp
std
lock
out
in
cmp
clc
ror
faddp
loope
xchg
xchg
in
aam
xor
call
fxch
repz
out
in
clc
orl
ss
sub
ret
aam
shr
repz
into
fcmovb
loope
add
ljmp
repnz
out
repnz
fidivrs
and
cmp
ret
loop
in
loop
std
filds
into
cmp
aam
repz
fdivr
into
test
xchg
cmc
cli
cmc
in
mov
idiv
std
in
mov
out
icebp
jmp
out
cmp
sti
shl
into
sar
lock
in
cld
mov
xchg
idiv
cmp
repnz
icebp
in
xlat
clc
cmp
aaa
lock
xlat
cli
fdivr
xchg
out
ss
repnz
cmp
loop
ffreep
lock
fcmovne
fsub
in
in
or
int
cmp
stc
loopne
sar
lds
xchg
lret
out
shr
xor
shl
fcomip
loop
rcr
jmp
xchg
nop
push
shrb
xor
aaa
sub
fmul
xlat
rcl
out
cli
in
aad
lret
fimull
rcll
rcr
cs
lock
ljmp
mov
cli
mov
into
jmp
int3
hlt
jmp
aaa
cld
sbb
shl
cli
loope
mov
fcmovne
cmp
ljmp
jmp
cmc
hlt
shl
or
clc
mov
sbb
jmp
mov
xor
into
clc
xor
neg
aad
ret
fdivrs
mov
mov
loope
xchg
in
lock
shll
jmp
out
shl
cmp
cmp
adc
shl
orl
out
stc
sti
lret
fcmovnu
cmp
repnz
xchg
clc
out
ror
xchg
icebp
mov
icebp
out
lock
sti
into
xor
in
cmp
and
sbb
in
xchg
jecxz
int3
loop
out
cmc
enter
cli
cmc
not
int
fistpll
rolb
jmp
ror
sbb
in
repnz
lock
fnsetpm(287
cmc
addl
lret
loope
call
int
mul
fmul
imul
shl
shl
fndisi(8087
clc
fsub
ljmp
fucomip
fsubrp
int
enter
cmp
cmp
test
out
xlat
incb
iret
loopne
enter
int3
loope
ljmp
loope
fdivrs
out
test
ret
cli
clc
mov
in
iret
roll
repz
call
cmp
ret
loopne
addb
jecxz
jmp
out
mov
in
icebp
lock
cld
imul
call
std
fdivr
sar
leave
loope
test
rolb
out
lret
jmp
sarl
xlat
fdivrs
enter
test
mov
out
fcmovnu
fcmovne
lret
call
test
rorb
in
jmp
xlat
lret
aad
aad
int
jle
and
scas
and
aas
add
in
lret
loopne
adcb
imul
sub
int3
aad
in
div
fidivrs
loope
xlat
sbb
repz
enter
in
mov
mov
int
fld1
cli
fcmovnu
sti
fsubrp
aam
fidivrs
mov
loope
mov
fcoml
in
into
cmp
cmp
idiv
lret
in
loope
mov
into
fldl
cmp
test
ret
fcmovnb
cmp
leave
stc
xchg
call
enter
in
fxch
out
hlt
int
lock
rcl
test
stc
faddl
push
loop
xlat
in
leave
ljmp
fcmovne
lret
in
in
loope
loopne
cld
out
mov
out
xchg
ret
cmc
xor
cmp
imul
sti
aam
cmp
addb
out
xchg
repz
jmp
jmp
stc
out
shr
les
lret
loopne
out
lret
sarb
fdivrs
cmp
lock
std
rcr
ljmp
shr
shr
into
icebp
xor
fdivs
div
lock
xlat
fmulp
rcl
icebp
test
fucom
imul
out
xlat
shrb
out
aaa
lds
cmp
test
cld
sbb
cld
ljmp
loope
icebp
call
int3
cld
out
cmp
std
cmc
test
out
std
sub
repnz
xchg
out
jmp
xor
cmp
in
repnz
fsubrp
repnz
xor
iret
test
sub
xlat
fidivrl
in
repnz
aas
mov
mov
les
aas
loope
jmp
rcl
out
in
aad
into
mov
mov
fcomip
into
das
lret
std
cmp
cmc
in
jecxz
repnz
rorl
mov
cmp
jmp
xlat
int3
xor
repz
in
xor
repz
repnz
test
ret
call
orb
std
ret
rol
les
in
fildl
addl
ret
and
jmp
lret
xchg
xchg
clc
fmul
cmp
ljmp
rcr
idiv
xchg
mul
sti
leave
std
test
ss
clc
sti
in
lock
aad
fdivrs
hlt
clc
test
sti
ljmp
ror
hlt
fcom
xlat
lret
stc
into
aad
loop
idivb
mov
rorb
ror
ljmp
loope
ljmp
in
call
xor
adcl
cmp
fdivr
hlt
in
sub
rol
sar
leave
jecxz
decb
jecxz
clc
sarl
icebp
call
int3
clc
adc
neg
cmc
fucom
fmul
test
lds
out
aam
fdivrs
fdivrs
xor
shl
loope
adc
incl
loope
sti
std
lea
and
lret
out
int3
enter
aam
std
leave
mov
fldl
fisttpll
in
rcl
aaa
filds
loope
xlat
fscale
aad
std
into
xor
in
shl
lock
ds
cmp
ret
cld
lret
ds
call
lock
xor
shl
aam
xlat
clc
aaa
into
stc
icebp
cld
dec
std
sti
call
out
shl
aam
test
int3
shl
aaa
lret
int
test
and
dec
out
ret
icebp
nop
test
shr
lock
sar
out
repz
cmp
lret
in
jmp
xchg
in
out
stc
les
cmp
out
loope
jecxz,pt
loop
cli
decl
lret
cli
fistl
leave
enter
repz
cmc
out
cmp
test
out
lds
mov
test
jmp
out
cmp
test
pop
mov
mov
xor
lea
mov
jmp
lret
rcr
aad
fsubr
xor
fidivl
jg
aas
add
mul
fmul
out
xchg
sti
loop
out
leave
cmc
ret
cmp
into
aam
ss
test
fsub
aas
sar
cli
fcomip
loop
mov
xchg
xchg
mov
aaa
lret
clc
fcmovu
sarl
fidivrs
sar
cmp
stc
lret
int
out
std
lret
int
ror
in
ss
aaa
xor
fdiv
test
out
fcmovu
in
sbb
xchg
repz
cmp
stc
loope
test
cld
aas
fcomi
call
in
mov
orb
stc
fadd
lret
leave
not
enter
std
int
aad
mov
jecxz
lds
fsubr
in
xlat
xor
iret
repnz
cmp
int
cmp
sbb
les
lret
loop
out
into
aad
xor
cmp
int3
int3
xor
repz
clc
in
out
in
aam
fsubrp
cmp
icebp
in
loop
addl
lock
cmp
hlt
rolb
out
lret
int
enter
cmc
test
int3
ss
cmp
clc
cmp
lret
rcr
fsin
stc
cli
mov
loope
or
lock
test
lock
in
lock
cmp
hlt
aam
repz
add
in
test
mov
shl
repnz
sti
repz
cli
std
repnz
idiv
xor
leave
cli
lea
xor
xor
shr
fdiv
cmc
icebp
fdiv
rcl
aad
test
lock
mov
lret
cmc
aaa
idivb
cmp
hlt
lret
sarb
repnz
ret
xlat
hlt
in
out
addb
ret
lock
in
cmc
out
ror
div
cmp
fcmovnb
cmp
sar
xchg
jmp
jmp
clc
out
cli
cmpb
pushl
fucom
fiaddl
addl
in
repz
repnz
cmp
cmp
neg
shl
xlat
test
cmp
in
out
loope
not
int3
cmp
lret
out
int3
icebp
rcl
clc
iret
in
loope
cmp
in
out
out
cld
into
dec
xor
out
lock
int
repz
repnz
mov
cld
test
sar
lret
in
loope
repnz
cmp
in
int
imul
cmp
jmp
int
jmp
xor
lret
test
call
fildl
int3
int
xchg
mul
out
xor
repnz
cld
stc
rcr
fadd
incb
lret
sti
out
orb
lret
into
cmp
cmc
std
cmp
loopne
loopne
xchg
or
and
std
int
out
mov
out
hlt
loope
fdecstp
jmp
shll
cmp
cmp
test
addl
test
sub
test
jmp
repz
iret
clc
repnz
icebp
in
jmp
frndint
iret
lock
rcll
in
in
fcmovbe
fdivrs
cmp
cmp
test
xchg
int3
cld
loope
out
clc
out
cmp
hlt
ljmp
fiadds
mul
addl
lock
icebp
sar
cmp
test
not
stc
fcomip
cmc
cld
repz
cld
in
mov
xor
cli
out
enter
aad
aad
ret
test
cld
leave
leave
jecxz
repnz
cli
out
idiv
jmp
iret
aas
fcmovu
rolb
int3
mov
loope
sub
loope
ss
aaa
xor
rcl
xor
stc
loopne
incl
test
in
int3
xchg
out
xchg
xchg
ret
in
fcomi
cmp
lret
aas
aad
ret
cld
in
adc
mov
sbb
rclb
xlat
in
out
int3
xlat
add
test
xchg
adc
jecxz
xchg
fmul
test
into
std
addl
jmp
fsin
call
cmc
fdivrs
enter
ljmp
xchg
xchg
loop
iret
into
in
jmp
roll
or
jmp
jmp
ret
iret
enter
int
xchg
cmpsb
push
ja
lods
push
aam
sub
aas
add
loope
ffreep
stc
jmp
shl
xchg
enter
stc
imul
rcr
lock
aas
ret
icebp
ret
fdivr
notl
xchg
xchg
xor
cmp
hlt
cmp
sti
repz
jmp
jmp
in
fdivrs
aaa
aad
into
fucomip
fcom
shl
in
xchg
sbb
in
xchg
jmp
call
out
in
cld
cmc
cmp
cmp
testl
jmp
addl
mov
ss
repz
sarl
iret
int3
shl
aaa
test
repnz
iret
stc
in
out
int
icebp
jmp
idiv
shlb
cmp
in
in
cmp
lret
lock
xlat
call
xchg
repz
fsubp
stc
repz
sti
xor
ss
xlat
sub
cmp
sar
loopne
fmulp
clc
mov
addl
cli
shl
cmp
loope
fcmovnb
test
stc
aad
and
in
push
mov
out
xor
sar
xor
lock
rcl
xlat
cmp
sti
stc
test
fucomip
fisttpl
call
shrb
cld
shl
repnz
loop
into
repz
sarl
mov
ret
jmp
cmc
into
lock
lret
in
repz
in
rcr
cmp
cmp
ds
ljmp
ret
mov
xor
int
out
cmp
std
adc
fcomp
testb
cmp
leave
and
in
enter
cmc
shl
ljmp
ret
clc
lock
aam
cli
out
fdivr
loop
loop
adcb
shrb
fprem1
fidivrs
int
loop
jmp
out
xchg
xor
repz
stc
jmp
xor
fiadds
ret
lret
jmp
iret
jecxz
repz
sub
neg
cmp
add
mov
incb
in
lret
call
lock
icebp
int3
iret
cmpl
in
shl
fistpll
call
loope
mov
iret
leave
in
jmp
lret
xor
jecxz
fcmove
xchg
fdivrp
out
fcmovnu
jecxz
aad
out
fnstenv
jecxz
cli
shr
out
in
loop
cmp
repnz
enter
into
in
xchg
jmp
fcomip
loope,pn
fdivrl
repnz
cmp
sarb
lock
xlat
shl
loope
inc
mov
rolb
xor
in
sti
das
fucomi
call
aas
xor
aas
ret
movb
lret
icebp
loopne
mov
fidivrl
aam
shl
ds
roll
cmpb
mov
ljmp
out
cmp
in
stc
int3
aaa
std
rolb
fmull
fmul
jmp
test
fsubr
idiv
sarb
cli
repnz
repnz
incb
in
mov
lret
xchg
ljmp
into
cmp
aas
div
in
fadds
int3
std
hlt
xchg
shr
sub
shl
int
fcmovbe
fdivrs
cli
lock
div
rolb
clc
mov
cld
xchg
mul
into
shr
xor
sti
fcom
iret
not
into
cmp
adc
hlt
fxtract
fprem
nop
out
loopne
jmp
int3
ret
jmp
icebp
divl
hlt
in
repnz
inc
test
icebp
test
loopne
jmp
xchg
das
lret
int3
cli
out
div
neg
loopne
aam
leave
fimuls
int3
int3
nop
shl
test
ret
hlt
cmp
fucomip
ror
out
repz
out
cld
xchg
not
sub
leave
leave
out
xchg
fsubr
repnz
xor
jecxz
in
in
lret
idivl
xlat
iret
loope
xchg
xchg
jmp
fcomi
mov
out
iret
repz
lock
shl
cmp
adc
fldl
cld
test
xchg
in
test
xchg
aad
ljmp
fnstsw
clc
cli
fsub
addl
lret
xchg
in
out
cmp
cmc
jmp
cmp
out
test
and
mov
mov
xor
mov
jmp
lret
fst
int
test
cmp
bnd
aas
add
in
fsubr
leave
decb
xor
cmc
fdiv
sar
cld
in
aaa
loopne
cmc
clc
int
fcomi
ljmp
loope
mov
cmp
int
aas
cmp
enter
mov
int
mov
mov
sti
fdiv
jmp
aad
loop
aaa
out
rcl
aam
call
out
xchg
lock
in
mov
repnz
sti
ss
repnz
aas
out
out
test
fcmovb
iret
cld
call
out
out
cmc
cmp
xlat
shl
shl
testl
test
cmp
sar
repnz
rcl
leave
out
cmc
aad
ljmp
imul
jecxz
clc
loop
adc
ljmp
fucomi
cmp
iret
fcmovbe
aas
sar
cmpl
fimull
rcl
xchg
loop
cs
cld
xlat
jmp
cld
neg
stc
test
out
out
sti
cld
fmulp
loope
std
lea
fidivl
ffreep
aas
fmul
sti
int3
lock
shl
enter
lds
sub
fcom
div
repz
ljmp
stc
rorl
into
fdivp
out
rcr
xor
repnz
jmp
clc
iret
leave
neg
loop
mov
loope
ljmp
dec
mov
aad
out
ror
cmp
repz
sarl
repz
loope
test
test
jmp
jmp
call
cmc
out
aam
lret
fcom
faddp
fucomi
fadd
add
hlt
loope,pt
test
xchg
aam
loopne
shl
int
rcr
xor
aam
in
hlt
jmp
int
int3
enter
div
out
sub
in
aaa
jmp
int
rol
ret
cmp
fdivr
mov
in
sbb
or
aad
shl
shl
fst
dec
call
out
out
call
icebp
fsubr
addl
call
out
rcr
fcom
cmp
xor
cmp
nop
mov
xor
cmp
iret
int3
fdivrs
xor
les
enter
mov
in
jecxz
leave
aaa
cmc
int
loopne
repz
rcl
cmp
filds
xchg
iret
in
test
xlat
shl
cmp
sti
imul
cli
loopne
rolb
jmp
out
cld
loope
mov
hlt
rcl
in
aad
ds
fcmovnu
in
enter
xlat
mov
fucom
repz
div
in
xor
out
fld
out
cli
lret
ljmp
hlt
loop
clc
sub
dec
or
fidivs
hlt
sti
out
out
ror
aad
loopne
fcomip
in
shl
ds
mov
rorl
jmp
rcr
rcl
xlat
not
std
fstp
call
leave
fsub
in
jmp
out
xor
fnsave
cli
cmp
and
out
enter
in
shl
divb
ret
icebp
into
xor
lret
repz
sbb
aad
hlt
hlt
xchg
leave
decl
repnz
ss
ss
loopne
out
call
xlat
enter
nop
mov
in
ljmp
cmc
aas
clc
fst
ret
aas
cli
enter
call
and
adc
xlat
fsub
shll
aad
rol
fimuls
fdiv
hlt
aam
repz
call
lret
cli
xlat
ret
xchg
lret
out
jmp
mov
enter
sar
out
lock
div
rcr
ret
out
test
call
out
lock
xchg
out
shll
call
adc
fadd
cmp
clc
call
nop
cmp
jmp
xor
cmp
leave
jecxz
ss
clc
cld
aas
out
fcmove
testl
xor
out
out
std
cmp
cld
ret
aad
jmp
mov
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
push
adc
jmp
xlat
ffree
xor
pop
fstpl
mov
jle
add
call
out
in
xchg
shl
rcl
ret
in
fcmove
cmpb
fmul
into
sar
out
jecxz
orl
in
hlt
loop
clc
ret
jmp
and
sar
sar
rolb
out
into
ftst
loope
mov
hlt
cmp
jmp
leave
int
fdivp
test
repz
jecxz
out
in
icebp
in
xchg
iret
iret
xor
std
stc
enter
cmp
test
mov
jmp
in
cli
fimuls
ss
cld
int
std
aad
ljmp
clc
loop
in
out
stc
fiaddl
xor
out
int3
cmp
out
rcl
clc
neg
out
ret
stc
fdivr
jmp
ljmp
std
rol
out
aad
cmc
into
aaa
cli
repnz
stc
lock
rcr
mov
fndisi(8087
cli
in
popl
xchg
repnz
xor
fnstcw
and
aas
hlt
lds
in
lret
lea
xor
rcr
out
clc
fdivr
roll
enter
lock
out
loope
fists
repz
jmp
cmp
roll
ret
xlat
leave
shr
mov
xchg
in
xor
clc
fdivrp
aam
aaa
sarl
ror
repz
xchg
hlt
xlat
fimull
fisttpll
int
cmp
cmp
fidivs
cmp
incl
ret
lret
jmp
in
out
enter
cmc
fucomi
cmp
xor
in
cmc
fcom
xchg
lret
in
loope
xchg
xchg
jecxz
aam
stc
fnstsw
loopne
aam
fstp
repnz
nop
icebp
out
out
jmp
loop
aad
in
hlt
out
aas
lret
cmpb
loopne
mov
incb
repz
nop
loope
cmc
ret
int
clc
fsubrp
fucom
ffreep
xlat
aas
std
out
sar
loop
sti
fsubrp
mov
hlt
stc
mov
hlt
lock
out
shr
loop
aad
clc
std
in
int
mov
test
fmul
hlt
rcl
std
fldl
shl
loopne
cli
out
fucomp
rcr
into
out
out
loop
aad
xor
in
cmp
ljmp
ret
leave
xchg
sbb
xchg
iret
sub
int
ret
shl
idivl
call
shlb
repnz
lock
mov
lret
repnz
xchg
sub
aad
clc
hlt
cmp
int
jmp
test
xchg
cli
loopne
not
cmc
std
in
loope
out
shr
cmc
call
shr
fildl
fcmovnu
cmp
lret
fucomi
out
loopne
jmp
xor
cmp
rolb
std
cmc
ret
fucomp
int
std
jmp
mov
rol
enter
fdivrp
lret
repz
sti
out
sub
fucomi
mov
mov
aad
jmp
cmpl
out
jecxz
mov
cld
xlat
mov
orl
in
xlat
stc
aad
cld
xor
rol
xchg
in
sti
nop
lea
jmp
shl
sbb
fsubp
fadd
xchg
lret
int
into
and
test
out
repnz
lret
cmp
fdivr
cld
aaa
fyl2x
loope
sar
fdivr
and
aad
mov
in
fmulp
xchg
ljmp
idiv
enter
rcl
mov
div
aam
test
decl
aaa
shl
clc
xor
int3
fcmovne
ret
fst
call
orb
std
cmc
xchg
lock
ret
aaa
aad
xlat
xlat
call
shl
std
cmc
jecxz
loopne
call
leave
icebp
nop
std
call
cmc
xor
in
iret
cmp
repz
xlat
fcmovu
leave
hlt
neg
jmp
out
fcmove
jmp
xchg
iret
ret
out
fst
call
out
shl
jecxz
loop
jecxz
xchg
in
mul
xor
test
aad
sub
aam
cmp
aam
fidivs
xchg
shl
fsubrp
mov
ret
icebp
call
ret
fadd
fcmovb
fsubrp
test
xchg
into
fmulp
lret
mov
out
clc
cmp
jmp
out
rcl
ret
int
fdivr
cmc
in
xchg
ljmp
incl
xlat
aaa
in
xor
rcl
ds
fadd
hlt
mov
into
icebp
loope
divl
inc
clc
and
mov
leave
add
add
rol
rol
or
push
aaa
push
ds
in
jg
scas
add
iret
ds
lret
aas
loopne
filds
fcomi
in
test
rol
out
mov
fxch
xor
lret
cmp
iret
std
in
cmp
aas
clc
test
lret
repnz
iret
aaa
call
cmp
hlt
clc
rcl
mul
sbb
mov
stc
out
cmc
ss
clc
repnz
cmc
aas
fildl
xchg
in
loope
in
repnz
xlat
xor
in
call
xorb
fiadds
inc
fucomi
cld
ljmp
enter
aaa
int
fst
fucomip
rcl
jecxz,pt
orb
repnz
out
mov
out
cmp
ror
out
int
in
repnz
stc
std
div
fsincos
jmp
mov
int
cmp
jmp
out
clc
fnstsw
shl
ffree
cmp
fildl
or
xor
leave
xor
ds
loop
sti
shl
xchg
mul
mov
in
mov
out
idiv
fcmovbe
cmc
into
std
idivb
lock
flds
int3
enter
dec
int3
jmp
jmp
int3
fnstcw
cmp
repz
sar
lock
jecxz
fiaddl
xchg
fldl
enter
jecxz
xor
idiv
cmc
fcom
rcr
leave
leave
sti
test
sti
ljmp
repz
fnstenv
hlt
idiv
roll
ret
clc
in
loop
mov
in
sti
xor
fucomi
cli
stc
loopne
fldl
incb
dec
int3
xchg
fsub
fcomi
ljmp
in
cli
mov
vpsubd
shr
jmp
call
in
loope
iret
lret
lret
sar
jecxz
icebp
out
fsubr
aad
testb
xchg
movb
in
in
repnz
aam
icebp
test
mov
clc
ljmp
loope
sar
xor
std
out
ss
roll
loopne
ret
stc
in
fldlg2
mov
and
xlat
loop
ret
aad
lret
ljmp
rolb
mov
in
jecxz
iret
xchg
xchg
std
mov
cmp
cmp
in
jmp
cmp
repnz
cld
shr
call
iret
rclb
hlt
test
sar
aad
inc
and
fisttpl
and
mov
out
hlt
int
clc
std
int3
icebp
faddl
add
out
in
in
rcr
mov
clc
in
lret
shl
filds
cmp
loopne
clc
sti
xchg
xchg
test
rcl
ss
fsub
int
sarl
test
mov
fcmove
in
xchg
out
xor
fdivs
jecxz
in
leave
aas
out
repz
aam
loopne
loope
repz
mov
rol
fiaddl
xor
aam
in
leave
ljmp
fscale
cmc
loope
out
out
xchg
xchg
xchg
loopne
cmp
cmp
in
cli
fnstsw
hlt
ffreep
lds
ret
in
loope
int3
int3
cmc
jecxz
ljmp
call
out
fdivrp
aas
roll
stc
out
loopne
out
out
int3
aad
icebp
cmc
fucomp
cmp
cmp
iret
out
out
rcr
cmp
mov
sti
jecxz
jecxz
shl
xor
cmp
aas
in
cld
jmp
sbb
out
les
int
into
in
mov
lds
shl
into
lret
cmp
clc
aam
repnz
dec
fiadds
xchg
in
divl
lock
cli
out
cmp
in
sti
rolb
lea
xchg
lea
leave
repz
ds
jecxz
cmp
in
loope
clc
fxch
call
ret
hlt
ror
iret
aam
icebp
out
cmp
rol
fiadds
cli
xchg
xor
aaa
out
std
aas
fucomi
fdivrp
fst
enter
call
ljmp
shl
ljmp
sub
ror
repnz
in
in
out
xchg
loope
in
xor
xor
out
int
into
cmc
rcl
in
ret
out
enter
idiv
call
shr
mov
fadd
in
cli
loopne
out
and
ds
fld
jecxz
lret
cld
daa
test
add
ror
fxch
shll
or
jmp
jg
scas
add
rcr
lock
mov
icebp
call
sar
ljmp
aas
clc
cld
cmc
loop
ffree
stc
mov
loop
ret
cmp
cmp
cli
clc
cmc
and
mov
test
repz
int
out
xor
in
fcmovne
fdivrp
imul
aam
out
sti
fisttps
out
leave
mov
ljmp
aaa
rcl
enter
cmp
jecxz
idivl
adc
ljmp
mul
ret
xor
aad
cmp
cli
fmulp
lock
out
mul
fucomi
loop
mov
mov
hlt
aaa
out
aaa
aam
leave
or
fdiv
stc
faddp
xchg
lret
decl
div
repnz
idiv
aad
into
cmc
cmp
mov
cld
fucomi
leave
fsubrp
jmp
lret
mov
stc
in
lret
xbegin
cli
loope
aas
hlt
fucomp
cmc
call
out
jmp
sar
ljmp
iret
sti
in
cmp
addl
in
lea
sub
idiv
hlt
xchg
iret
cmp
mov
iret
ret
in
test
hlt
xor
cmc
sarl
lret
repz
into
cmp
rcr
idiv
cmp
fcmovbe
xchg
popl
das
call
fucompp
cmp
aad
in
decb
in
or
aad
xor
ret
out
ljmp
ret
testb
iret
in
in
xchg
adcl
fcomp
cmp
out
loop
stc
rol
in
in
movb
mov
ret
out
leave
stc
repnz
repnz
hlt
cmpl
fcom
fdiv
out
mov
in
fstp
iret
cld
xchg
repnz
in
repnz
out
jmp
sbb
jecxz
not
call
out
lret
call
icebp
jecxz
enter
lret
fstp
faddp
aam
inc
aas
stc
adc
call
mov
fdiv
repz
xor
std
call
cli
fdivr
hlt
shl
xchg
xchg
hlt
in
cmp
out
in
push
fdivrs
in
std
cmc
loope
fldl
leave
out
jmp
repnz
test
cmc
cmp
cmp
fpatan
cmp
xchg
mov
xlat
xor
xchg
in
mov
loopne
int
lock
repnz
test
aam
cmp
ror
mov
decb
into
repnz
aam
rcl
ds
shl
aam
call
mov
loop
loop
into
ret
shll
sti
xor
fidivrl
repnz
sti
fcomi
xchg
loop
out
orl
xchg
leave
shr
rcr
iret
fcmove
fdiv
std
shr
fcmovnb
cld
loope
sti
cmc
div
fdivr
cli
popl
in
rcl
out
sar
hlt
sar
shl
rcr
shr
enter
loope
mov
out
shl
xchg
in
leave
ret
out
lret
fadd
leave
in
cmp
rcr
aas
loope
jmp
mov
rcl
xchg
faddl
out
fldcw
lock
aam
cmp
aad
fld
mov
mul
int3
cld
fsubrp
out
jmp
hlt
les
into
xor
cmp
hlt
div
int3
cmp
cmp
les
leave
fucomp
fsubr
jecxz
hlt
jmp
into
sarl
xlat
test
call
enter
xchg
out
xor
leave
int3
xor
std
cmp
lret
cmpl
aad
icebp
fidivrl
lock
cld
int3
mov
icebp
test
out
icebp
aam
cmp
rcl
lds
aad
shl
ljmp
mov
aaa
int3
lret
in
xlat
cmp
aad
and
mov
fdivr
lea
xchg
out
icebp
jecxz
sub
leave
aaa
cmp
fdivp
sarb
call
test
fmuls
out
repnz
shr
out
cmp
out
fdiv
cli
roll
leave
sar
ds
fsin
loop
jmp
xor
neg
into
xlat
fst
ret
ret
mov
in
cmc
sti
in
fldz
out
xchg
xchg
faddp
xor
loop
lock
jmp
addb
test
addb
mov
icebp
into
in
imul
repnz
ss
xor
test
fld
jmp
sbb
shrl
into
rcr
in
xor
mov
push
xor
add
mov
sub
xor
mov
sub
jmp
sarl
aam
aam
fcmovne
inc
cwtl
sbb
inc
sarb
add
fstpt
icebp
rcr
fnstcw
cmc
addb
stc
mov
ljmp
lret
aam
rol
sti
fnstsw
stc
into
rolb
out
sbb
mov
mov
in
xor
divb
xor
int3
cmp
ds
hlt
leave
ret
idiv
shr
fmull
out
int3
call
iret
jmp
lock
cmp
mov
mov
in
into
hlt
ror
cli
fcmovu
out
xlat
aam
cli
shl
fcmovu
ret
test
leave
lea
jecxz
repnz
fdivr
ljmp
iret
hlt
repnz
loopne
out
in
icebp
jmp
in
out
xor
in
int3
in
ljmp
orl
jecxz
fisttpll
shl
in
ss
rcr
repnz
rorl
loop
cld
addl
out
int
jmp
aas
cli
loop
cmp
mul
cli
shl
std
ds
fildl
icebp
xor
xlat
iret
ret
int
fcmovnu
cmp
fcmovne
ret
cli
leave
enter
mov
icebp
jecxz
in
lret
loope
leave
cmp
xor
call
std
aas
loope
fcomp
aad
cmc
sti
int
mov
aad
out
cs
icebp
cmp
stc
lret
test
aam
test
out
shl
sti
fsubrp
lret
aad
call
rcl
cmp
loop
ds
jmp
int
in
in
hlt
test
hlt
cmp
cmp
iret
rolb
out
cli
fdivrp
fcmovbe
in
into
xchg
int
sub
xor
jmp
cmp
fcmovnbe
vpinsrw
cmc
mov
rcl
std
in
orl
ror
int3
std
cmp
loope
test
ljmp
std
fisttps
xor
ret
cmp
ret
cmc
xor
test
xchg
lret
mov
decb
xor
rcr
rcr
int3
xlat
idivb
sti
in
in
clc
std
shl
in
loopne
mov
std
int3
shl
rol
in
ljmp
sti
stc
hlt
loopne
and
xchg
fdivp
call
jecxz
mov
sub
cmp
aaa
fdivrp
jmp
cmpb
or
cli
std
in
iret
hlt
cmp
stc
loope
sarl
xchg
int3
xchg
out
iret
out
repz
test
cmp
enter
std
ret
ret
loope
mul
mov
lret
fmulp
in
shl
out
mul
shl
in
fbstp
fidivrs
icebp
xor
stc
sbb
std
rclb
xor
into
clc
lret
neg
repz
std
ljmp
and
into
repz
call
aam
cmp
idiv
cmp
fsub
fcmove
out
fldlg2
in
fucomip
aad
das
clc
not
int
std
std
aas
test
int
call
aad
test
ljmp
leave
lock
lret
iret
cmc
jecxz
roll
fcmovnbe
in
lret
decb
enter
cmp
cmp
loopne
into
cmc
std
shl
loop
ret
int
enter
xchg
shr
shll
sti
fbstp
aad
cmp
repz
imul
jmp
jmp
jecxz
xchg
ret
ret
fcomip
out
cmc
cld
test
xlat
mov
xchg
test
cld
shl
rorb
xor
fidivrl
aam
cld
out
stc
sti
icebp
cld
hlt
hlt
test
aad
in
cli
mov
loop
ljmp
out
xor
shl
std
testb
cld
ret
orl
xchg
rcl
jmp
ss
cmc
iret
in
ds
addl
cmp
call
loopne
out
aam
xor
aaa
repnz
fbstp
icebp
test
rol
std
fucom
nop
test
mov
fnstenv
aam
out
mov
cli
ror
cmp
in
mov
xlat
mov
xor
cld
xchg
call
leave
int3
lret
aad
ss
fnstcw
jecxz
fldl
icebp
into
icebp
in
mov
icebp
rcl
cmp
aad
sar
xchg
out
addb
in
mov
xchg
shl
xor
cmp
fucomp
enter
fsubr
xchg
leave
xchg
and
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xor
xor
xor
or
jmp
int
fcmove
fstp
adc
js
jns
pop
int
lds
scas
add
fldl
aaa
lret
sti
in
cmp
jmp
fldl
fiadds
leave
fcomp
loopne
xchg
test
out
ss
xor
cmp
and
in
stc
repz
cld
in
xchg
leave
add
fsubrp
xor
cmp
ss
in
repnz
sbb
not
aam
out
lds
mov
sub
xor
aad
call
fnstcw
sbb
stc
stc
loopne
sbb
jmp
aam
in
loop
out
int
xor
iret
loope
cmp
fdiv
stc
loop
fucom
fucom
cmc
lret
int
xor
fsin
ss
sarb
aas
ret
cmp
sti
hlt
out
xchg
fsub
mov
lret
xor
leave
fucomi
call
hlt
cld
cmp
shr
mov
mov
roll
in
out
call
icebp
fneni(8087
inc
mov
ret
in
orl
mov
lret
mov
xor
fcmove
shl
rol
in
ret
aam
lret
xlat
sti
int3
mov
sbb
ror
repnz
xor
fcomp
ret
push
test
addl
jecxz
stc
loop
cmp
aad
cmp
xlat
std
hlt
stc
hlt
jmp
in
faddl
test
iret
shr
iret
ds
ret
not
idiv
incl
xchg
in
cli
lret
int
in
ror
leave
iret
into
int3
shr
stc
aas
stc
cli
mov
out
in
xchg
xchg
repnz
fidivrl
lock
cmp
divb
fcomip
cli
hlt
fdivr
jecxz
cld
rolb
xchg
xor
idivl
into
loopne
aas
loopne
lds
test
std
lret
vpaddsb
lret
lret
xlat
lret
aaa
int
shl
stc
lock
out
int3
ret
jmp
jmp
loop
ret
jmp
cmp
aas
rol
out
repnz
jmp
out
test
mov
cmc
shr
in
shr
in
neg
icebp
in
loopne
shl
stc
out
not
test
in
sti
clc
leave
out
adc
into
ss
fidivrl
lock
cmp
fldl
test
loope
in
xchg
repnz
in
xor
aad
in
rcr
iret
repz
fsub
mov
int
out
loop
mov
fsubp
call
out
fcomp
cmp
cmp
aad
ret
jecxz
xlat
fmul
loop
clc
enter
loop
hlt
in
leave
repnz
ds
out
shl
ret
test
mov
jmp
mov
out
hlt
cmc
jecxz
out
jmp
hlt
clc
xor
cld
call
adcl
lret
icebp
ret
iret
repnz
cli
xchg
test
cli
clc
les
in
call
xor
enter
cld
fcomi
icebp
lret
repnz
std
vpsubw
fsqrt
fldl
mov
rol
neg
out
cmp
cmp
cmp
xlat
iret
loop
call
std
lret
xor
loopne
out
fsub
xor
in
aaa
ljmp
roll
cld
jecxz
mov
out
test
ss
fcmovu
div
jmp
fcom
faddp
std
mov
sbb
les
in
call
xor
cmp
stc
aas
lret
icebp
std
stc
xlat
in
mov
neg
mov
dec
lret
fists
sti
xor
hlt
loope
loope
rcr
rcl
aas
xor
sti
lret
in
in
jmp
hlt
mov
jmp
sarl
iret
into
clc
into
in
test
clc
fmull
iret
jmp
shl
xor
cli
xlat
std
aad
in
ret
aas
aad
jecxz
in
clc
mov
loop
flds
in
ror
fst
in
cmp
loopne
in
icebp
ds
loop
stc
mov
mov
out
sub
idiv
loope
vpaddusb
int
hlt
iret
fcmovnbe
mul
std
ror
cmc
ds
sbb
mov
nop
out
dec
enter
aad
lock
rcl
fcmovnb
out
incl
loop
fmull
aad
in
ret
enter
test
icebp
cli
in
lret
out
fdivr
lock
xchg
jmp
leave
jmp
lock
icebp
rcl
fld1
add
leave
mov
loopne
clc
loopne
xchg
into
xchg
out
xor
aam
mov
add
subl
add
addl
imul
jmp
into
aam
enter
fsubl
dec
pop
push
push
or
sub
jg
scas
add
sbb
aam
fst
enter
filds
and
int3
loope
icebp
xor
ljmp
cmp
test
lret
addb
mov
cs
ds
f2xm1
xlat
ljmp
int
adcl
out
adc
sar
cmc
clc
loop
cli
test
iret
xlat
das
cmp
divb
into
cmp
rcr
in
shl
cmp
ljmp
out
enter
int3
xor
clc
shr
hlt
xlat
fcmovbe
addl
lret
incb
sub
clc
int
cmc
test
fstp
jmp
stc
ror
std
fists
mul
fmul
lock
loope
into
aas
rcl
test
out
mov
int3
icebp
cld
ror
xchg
hlt
lret
jmp
aad
std
hlt
fcmovbe
jmp
cli
loop
repnz
lret
stc
in
jmp
out
sub
not
int
cli
iret
xor
aad
xlat
jmp
filds
aam
call
cli
lret
int
lret
hlt
ss
hlt
in
sar
int3
loopne
cld
idiv
fimuls
stc
fmull
out
enter
jecxz
jmp
ljmp
repnz
int
in
cli
std
fucomp
fsubp
aaa
int
jmp
jmp
fcomip
cmc
jecxz
ljmp
jmp
mov
loopne
xor
vshufps
shl
aas
fdivrp
vpavgw
ret
xlat
lea
hlt
out
aam
repnz
enter
ret
into
cmp
out
fcmovne
leave
xchg
jmp
xchg
xchg
aad
aam
cmp
in
aad
fiadds
incb
clc
sbb
cli
icebp
cld
fldl
ret
div
rcl
cld
icebp
into
shr
xor
cli
jmp
mov
call
ljmp
aaa
repz
enter
cmp
shl
repnz
mov
int
loopne
mov
shr
in
stc
ss
std
fnstsw
fistpll
lock
add
test
call
jmp
xchg
rcr
lock
fmulp
icebp
rcr
aam
out
test
mov
enter
call
fsubr
aaa
xor
cld
push
repnz
hlt
test
out
mov
mov
fsubr
out
fdivrs
hlt
sar
fsubp
faddp
fadd
out
fsub
xchg
loopne
iret
hlt
out
enter
lret
cld
fiadds
cli
test
ljmp
xchg
orl
sarl
jmp
fsqrt
fcmovb
in
loopne
xor
rol
loop
rorb
mov
out
sti
jmp
sti
ret
and
sti
in
fsub
enter
nop
or
jecxz
ljmp
fnstsw
ret
fcmovbe
test
out
jmp
shr
hlt
out
ror
out
ljmp
int3
sarl
rorb
fabs
sbb
xchg
repz
xor
stc
fstp
fmul
out
in
idiv
inc
cld
fucomip
or
xchg
rol
cs
xor
out
std
in
fsub
fadd
in
xlat
lret
out
fdivr
jmp
out
into
nop
jecxz
out
in
in
in
in
shr
xlat
cmc
jecxz
jecxz
in
out
clc
fisttpll
shl
lret
loop,pn
xor
sarb
cmp
mov
int3
loop
mov
fldl
xor
fdivp
cli
aaa
repz
aad
rolb
lock
xchg
mov
in
ret
cmc
cli
std
rcl
loopne
shl
in
sbb
flds
out
into
lock
addl
jmp
cli
cmp
loopne
sub
fdiv
loope
hlt
mov
sub
repnz
jmp
out
hlt
cmp
cli
rcr
ret
clc
mov
leave
out
cmp
out
int3
iret
enter
cmp
cmp
loop
dec
fdiv
test
loope
shl
test
mul
jmp
jmp
out
sub
cmp
fdivr
int
jecxz
cmp
cli
fadds
and
cmc
in
out
out
cld
out
sub
ror
out
fcmovb
clc
in
loope
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
jmp
int3
rol
xlat
fstp
fst
mov
pop
rcll
pop
into
jg
scas
add
in
shl
mov
out
aam
test
lock
ret
cli
test
mov
out
mov
out
addl
jmp
loop
loopne
iret
fst
ds
enter
enter
sub
call
repnz
cli
fsubp
hlt
test
loopne
test
stc
xlat
out
xchg
or
repnz
int
cmp
fdivp
ds
add
fildl
fabs
fdivr
icebp
sbb
xor
aam
in
iret
aaa
enter
sbb
in
sarb
std
leave
xchg
jmp
out
ss
out
xor
int
shl
neg
rcl
in
test
jecxz
aad
into
sarl
in
cli
aam
icebp
icebp
cmp
xlat
cmp
xchg
xlat
test
xchg
mov
call
out
bnd
int3
aad
int
ret
aad
loopne
test
jmp
iret
int3
out
ljmp
icebp
fcomip
shll
xor
sbb
xlat
and
fadd
xchg
fmul
mov
les
jecxz
xor
out
cld
shr
jecxz,pt
rcl
cmc
incb
fsubr
sti
mov
xchg
jmp
clc
in
lock
cmp
fsubp
hlt
test
sti
out
mov
cli
into
ret
xchg
loopne
lock
repz
idivb
loopne
aam
out
std
cmp
hlt
ret
mov
mov
loope
cmp
aaa
std
lret
fldl
lret
loop
jmp
and
fidivrs
clc
icebp
xor
cmp
fcom
test
sti
aas
repnz
std
loop
mov
out
hlt
jecxz
in
ljmp
aam
ds
imul
in
lret
lea
xor
rcl
lret
leave
int3
ret
mul
idiv
or
mov
orl
fcmovu
cmp
shl
out
repnz
hlt
rcl
std
mov
stc
in
jecxz
xchg
out
in
in
cmp
cmp
aaa
sti
lock
fcomip
aam
out
ljmp
out
xchg
shl
call
ds
ret
loope
out
fucomp
into
xchg
mov
das
iret
fsubr
fcmovu
repnz
jecxz
aad
loop
std
xchg
dec
lea
xchg
fists
rcl
fdivr
iret
add
fmuls
fcomp
test
notb
int
in
enter
fldl
ret
clc
mov
mov
and
xlat
cmp
xor
fmul
aaa
rcl
iret
cmp
fnstsw
out
ret
fucomi
xchg
test
ljmp
loope
shl
lock
xor
imul
icebp
mov
sub
out
cmp
aad
cmc
fdivr
not
out
and
xchg
leave
jmp
fistl
lret
xor
aam
in
shl
xor
enter
stc
in
xchg
icebp
mov
shl
aad
lock
enter
cmp
shr
cld
xor
lock
lret
xchg
sub
ljmp
cli
div
repnz
cmp
ret
cmpb
aas
fxch
popl
aam
loop
xor
cmp
fidivrs
cmp
iret
aad
repnz
fiadds
mov
repnz
cmp
xor
in
rcl
shl
fnstcw
clc
fcmovbe
out
jmp
test
lret
int3
repnz
xor
lret
cld
cmp
int3
sti
cmp
out
and
fisttpl
pop
std
call
cli
lret
clc
cmp
lret
rcl
shl
test
dec
in
in
dec
in
xchg
xchg
fnsave
test
fcmovnb
aam
in
lret
xchg
decl
into
loopne
xor
idivb
enter
aad
std
incl
mov
lret
mov
divl
cmp
in
cli
ds
not
sar
xchg
in
fldl2e
loop
mov
out
aas
lock
xlat
rcr
cld
jmp
roll
ret
out
cli
xlat
loop
stc
in
out
lret
mov
lret
not
fdivr
jmp
loopne
cmp
sti
vpaddd
jecxz
mov
imul
jmp
out
movb
lock
leave
enter
lret
jmp
rol
rcr
fld
pop
into
shll
mov
jg
scas
add
icebp
loop
repnz
std
mul
fcmove
sbb
iret
jecxz
enter
xor
aam
clc
call
fdiv
inc
cld
fsub
cli
ficoms
call
cs
cli
fdivrl
out
fsin
xlat
hlt
cmp
test
stc
cli
in
int3
jecxz
in
ljmp
ljmp
into
repz
aam
rcr
repz
sar
leave
jmp
ror
in
repz
loopne
xlat
lock
hlt
loopne
fidivrl
adc
loopne
fprem1
fxch
in
test
aam
out
cmp
fcmove
cmp
jmp
cmp
out
loope
rcr
add
shl
aas
in
xor
stc
iret
lret
fcomip
icebp
cli
stc
in
xchg
sti
out
jmp
loop
loope
lret
loope
cli
aam
cld
jmp
leave
lret
loope
loope
call
jmp
fildl
dec
ror
fsubr
leave
fsubrp
cmc
into
hlt
aam
mul
hlt
rcr
testb
fdiv
out
decb
shl
aam
cmp
cmp
rcl
std
adc
rcr
faddl
in
std
jmp
out
in
xor
xor
adc
icebp
sti
repnz
aam
out
in
out
nop
fmulp
shl
icebp
cli
int
ljmp
shl
cmpl
loope
adcb
icebp
sarb
jmp
xlat
shr
into
and
sti
stc
leave
loope
out
lock
out
call
stc
imul
out
fcomp
sti
divb
test
mov
mov
test
in
xchg
xor
ret
lock
lret
shl
fxch
icebp
stc
std
sar
fpatan
mov
leave
ret
clc
jmp
xchg
test
adc
lock
aad
call
into
into
fcmovnb
addb
out
out
fcmovnu
out
subb
aad
ljmp
ret
cld
rcr
mov
mov
enter
dec
in
out
sub
leave
hlt
out
fstpt
cmp
repnz
int
std
out
adc
out
nop
sti
sti
aam
xchg
clc
div
rol
aam
jmp
into
adc
filds
leave
in
jmp
xchg
jmp
lock
repnz
out
shl
jecxz
repnz
rcr
in
mov
iret
out
aad
cmc
fxch
lret
out
loop
sub
loop
cld
fcmovu
ret
hlt
addl
aaa
cmp
cld
lret
fadds
in
xchg
xchg
jmp
mov
sub
xor
out
out
xor
into
test
fidivrs
cld
addb
stc
repnz
fcmove
xor
test
fnclex
repnz
ret
fstp
popl
out
lock
in
repz
not
aam
loop
cld
loope
out
mov
and
sub
fldcw
out
xlat
fyl2x
fcomip
xlat
sub
out
enter
loopne
out
xchg
mov
das
xlat
test
cli
aam
icebp
int3
fnstsw
fcmovne
in
ret
fdivrp
jmp
int
mov
hlt
ss
int3
ret
out
in
hlt
ljmp
cli
ffreep
faddp
addl
fmulp
enter
ret
xlat
sar
enter
div
ret
xlat
stc
mov
ret
mov
jmp
mov
fcmovnbe
xchg
in
xor
cmc
push
jecxz
ret
icebp
mov
jmp
xchg
fst
xchg
xor
ss
cmp
loop
cmp
fcmovb
sti
fxam
sti
out
xchg
in
shl
iret
in
xlat
stc
fcmovne
xor
std
cmp
clc
fucomp
jecxz
les
leave
std
call
in
out
clc
xor
xor
iret
cmp
test
imul
test
lret
repz
aad
rcl
repz
jmp
aas
in
test
roll
mov
fimull
aad
lret
shrl
cmp
lret
std
cmp
fcmovbe
in
cmp
mov
jmp
xlat
xor
int
shr
cli
loope
shl
xchg
in
incb
fldl
ret
jmp
sbb
in
shl
loopne,pt
aam
call
enter
in
aad
jmp
enter
lret
cmc
hlt
sarb
shl
jecxz
cmc
repz
xor
jmp
aas
sarl
fcmovnbe
fcmovb
loope
add
pop
xor
jg
scas
add
loop
subb
sti
xor
aad
cld
idiv
sbb
in
testb
in
shll
xor
int3
shl
xor
jecxz
lds
imul
aas
xchg
call
into
jmp
lret
lret
cmp
fidivrl
test
cmp
cmp
loop
fnstsw
call
repnz
ljmp
ror
in
shl
roll
clc
cmp
les
sub
lds
lret
in
into
sti
repz
loope
fucom
shl
fcmovu
xchg
jmp
call
mov
cs
aam
cmp
out
cmp
aas
shl
adc
shr
fcmove
jmp
out
mov
shl
sub
into
xor
lret
in
cmc
cmp
cmp
cli
rol
xchg
aam
enter
decl
xor
in
enter
xlat
lock
rcr
flds
lret
loope
lret
repz
shl
out
cld
fidivl
fcmovbe
cld
cmp
out
fcmovnu
fcmovne
in
out
leave
mov
rol
cmp
aaa
div
sti
jmp
in
hlt
clc
out
sti
cmc
in
jecxz
cli
lret
loopne
ret
loope
div
cmp
aas
loope
aad
hlt
cli
ret
neg
test
enter
loopne
xchg
mov
mov
enter
std
cli
int3
xor
cmp
fiaddl
jecxz
lds
iret
int
fists
sub
repnz
fucom
fcomp
leave
mov
cli
fsub
out
xchg
loope
rcl
leave
not
in
sti
lock
std
cmpl
fidivrl
out
fildl
jecxz
iret
jmp
call
cmp
cmp
fsqrt
int
cld
cmp
clc
iret
fidivrs
idivb
loope
enter
les
sub
aaa
not
stc
aaa
in
in
testb
cmp
in
cli
ret
int
in
nop
in
incb
clc
enter
cmp
out
icebp
loop
cli
sbb
in
mov
mov
jmp
fxch
int
fidivs
roll
fadds
jmp
mov
orl
cs
repnz
fucomi
loopne
in
xchg
loope
mov
mov
mov
leave
xor
fnstenv
fnstenv
loopne
in
fiaddl
std
aas
enter
imul
fdivp
mov
incl
xor
out
fsub
cmp
lock
in
test
movb
loope
mov
hlt
cmc
divb
shll
sar
push
jmp
stc
lds
in
ljmp
aad
int
lret
cmp
fxch
aam
xchg
test
in
shr
repnz
xor
call
int
in
fcomip
fucom
leave
cmp
out
loope
rcl
lret
test
repz
cmp
cld
into
shl
clc
out
fmull
int
test
xchg
jecxz
into
lret
not
lret
shl
xlat
in
out
rcl
shr
cld
loop
cmp
stc
cmc
cli
int3
loope
fiadds
rcl
xor
xor
cmp
loopne
ljmp
clc
jmp
jmp
rol
test
out
clc
cmp
fdivrl
ror
loop
clc
aad
sbb
jmp
fists
lret
call
loopne
testl
xchg
mov
xchg
aad
fdiv
jecxz
cmp
fcmovne
jmp
repnz
sar
in
test
in
repnz
cmc
ss
jmp
fsubrp
jmp
aam
in
ret
call
xchg
clc
fisttps
mov
xor
into
leave
ds
fcmovbe
neg
in
hlt
stc
xlat
lret
xlat
xchg
icebp
hlt
xchg
hlt
mov
xlat
xor
div
rcl
aas
fucomp
aad
out
shl
mul
test
test
in
fmulp
out
cld
call
enter
out
cmp
xlat
cld
loope
div
rorl
test
cli
out
mov
lock
xor
lock
cs
divl
loope
cmc
ret
in
les
iret
xchg
stc
in
fsubr
cld
fmulp
lret
in
cmc
fstp
stc
cmc
sar
loope
and
sti
in
xchg
xchg
mov
lret
out
sar
cmp
std
loope
les
stc
hlt
fdivr
sti
mov
repz
clc
fincstp
in
int3
lock
repz
fadds
roll
imul
jmp
into
aas
ror
rcl
sarl
xchg
lods
mov
insb
fdivrl
scas
add
ret
cld
vpavgb
fmul
int
in
xchg
cmc
call
repnz
fcom
loopne
aam
fsubrp
loopne
loopne
in
call
call
stc
sar
shr
fcmove
leave
sarl
hlt
hlt
loopne
lret
jmp
jmp
fdiv
into
lret
loopne
loop
in
fcomip
cld
fcomip
clc
clc
xchg
mov
lret
clc
test
icebp
loopne
loop
stc
int
shl
fsub
aam
shl
xor
incl
and
in
jmp
out
int
xor
stc
das
shl
leave
ds
rol
in
cld
mov
sti
out
mov
mul
cmc
repnz
repz
fidivrs
xor
aas
aam
out
flds
fisttps
in
mul
ljmp
ds
aad
fucom
enter
lret
ljmp
out
test
repz
cmp
clc
cmp
xlat
rcl
jmp
jecxz
loopne
jmp
mov
repz
fsubr
hlt
aas
ds
loop
out
rcr
fmul
sbb
stc
add
out
std
ljmp
xor
call
xlat
shl
decl
std
mov
mov
idiv
out
in
cmp
sti
iret
jecxz
rol
test
decl
xor
lret
sub
loop
test
into
fsubp
rolb
ret
fdivrp
xchg
aam
mov
iret
xchg
repnz
rcl
icebp
into
in
fcom
hlt
imul
fst
add
ds
in
rcl
cli
jmp
lret
rorl
xor
into
icebp
aaa
out
clc
out
rolb
fcomi
in
clc
fcomip
ljmp
cmc
nop
aas
lret
cmp
jmp
cmc
std
ror
rolb
ret
in
test
test
in
xor
call
into
out
fsubr
call
xchg
in
call
test
sub
xor
in
in
std
cmp
cmp
jecxz
ret
flds
ds
std
fiadds
mul
jmp
aaa
ss
lret
jmp
ds
fmulp
out
in
fists
xor
imul
out
iret
cmp
fdivrs
into
int3
cmpl
and
mov
test
sub
out
in
xchg
xchg
xchg
divl
shl
cmp
rcr
cmp
xlat
in
into
jecxz
out
jecxz
ror
das
not
xor
sar
clc
in
rol
repnz
ret
ljmp
mov
in
mov
lret
std
out
aad
in
loopne
shr
ret
xor
clc
jmp
mov
mov
in
loop
cli
cmp
cmp
cmp
call
shl
repz
cld
fucomi
cli
mov
mov
aaa
in
test
cmp
aas
fnop
int3
aas
int
lock
lds
mov
leave
fcoml
ljmp
xor
int
or
loopne
std
lret
int
int
xor
divl
cs
int3
call
aad
xchg
mov
lock
ficoms
lock
cld
hlt
loopne
out
aas
sti
fucomp
jmp
int3
incl
rorl
fcmovb
vpaddusw
out
test
ds
xor
xchg
jmp
mov
out
int
ss
leave
cmp
test
fcmovnu
out
std
clc
sti
sti
jmp
std
loop
iret
jmp
jmp
lret
loopne
rcl
rcl
rcl
std
dec
fndisi(8087
call
std
shr
int3
test
in
hlt
call
hlt
aas
lock
loope
xchg
in
nop
fdivrp
mov
jecxz
in
jmp
xlat
loop
iret
cmp
lret
out
cmp
sarl
enter
enter
shl
int
imul
ror
cmc
aaa
fdiv
clc
addb
out
kmovw
aam
aad
repz
out
leave
fildl
ds
xchg
fdivrp
std
in
mov
in
leave
neg
int3
sarl
aam
fucomi
repnz
int3
in
stc
std
in
sbb
in
shl
cld
jmp
sub
xor
cmp
cmp
cmp
in
loope
call
fldz
iret
repnz
call
ss
in
call
cmp
jecxz
fcmovu
mov
jecxz
out
xchg
loope
xchg
rorb
add
add
rcl
aad
aad
shll
cmp
pop
popf
loope
jle
add
call
shr
repnz
cmp
fabs
ret
ret
fucomip
out
out
loop
call
out
clc
clc
leave
sar
int
sarl
sti
in
adc
cmp
lret
or
jmp
lock
in
jmp
sbb
call
in
f2xm1
enter
jecxz
into
ss
mov
call
xlat
fld1
std
ret
loopne
loopne
lret
out
int3
ljmp
in
ss
cmp
and
ret
addl
sti
sub
mov
repnz
xchg
loop
repnz
iret
shll
fdivrp
ret
cmc
repnz
fucom
cld
std
lea
loope
cmc
clc
xor
out
ror
ljmp
out
fcmovbe
xchg
hlt
jmp
ret
orl
repnz
addl
idiv
test
cli
mov
repnz
xchg
push
rcl
ror
std
fxch
rcr
idiv
out
mov
enter
lret
addl
xor
enter
sti
icebp
rcr
std
test
stc
sarl
loop
out
test
enter
ret
cmc
repnz
int
cmp
xor
aas
or
call
mov
xchg
neg
repnz
ror
shl
lret
clc
rcr
ret
in
lret
std
fadds
out
fcomip
xlat
xlat
rcr
xlat
out
xlat
std
lret
fld
lock
fdivrp
sti
or
jmp
cli
out
xchg
out
ss
lret
repz
in
ret
fsqrt
jmp
nop
lock
xlat
in
fidivl
in
leave
incb
ret
clc
int3
fcmovu
fucomi
cli
sbb
loopne
das
rol
xor
out
not
icebp
lock
rol
test
shl
fsub
loope
mov
cs
loope
xor
clc
cmp
repnz
xlat
cmc
loope
loop
loop
xor
fdivs
ljmp
fsubp
and
flds
mov
jmp
rcl
dec
cmc
addb
repz
fildl
jecxz
fsubrp
int
xlat
sub
cmp
fdivs
cmp
xchg
std
sub
out
in
jecxz
call
clc
vaddsubpd
xor
jmp
std
aas
div
fcomip
fcmovne
loop
iret
filds
enter
shl
enter
adc
hlt
test
loop
loope
int3
stc
sti
icebp
fsubp
xchg
loopne
out
in
in
hlt
cmc
out
shr
int
shl
loop
cmc
clc
out
out
xchg
loop
leave
clc
clc
test
out
fildl
fsubr
rol
out
lea
lds
aam
fyl2xp1
cli
fneni(8087
movb
flds
mov
jmp
shl
cli
cmp
fldl
sar
clc
loop
fadd
in
out
int
xchg
xchg
repnz
aam
in
in
in
in
flds
sti
fstp
sub
xchg
loope
fcmovne
xor
xlat
sti
shl
mul
ds
fucomi
leave
add
iret
fiaddl
in
cmc
stc
out
fcom
cli
sti
jmp
frndint
les
cli
repnz
jmp
iret
leave
in
cmp
fld
jecxz
xchg
idiv
loope
fdivrp
cld
into
lret
cmc
xor
out
aad
xor
jmp
fsubrp
test
into
repnz
stc
testl
out
int
aad
fcmovb
lret
out
lock
cli
jecxz
out
ret
in
out
cli
test
mov
repz
int3
out
int
in
iret
xor
jmp
xor
in
clc
shl
cli
sbb
mul
lret
out
ljmp
lret
jmp
into
out
out
loop
into
loop
xchg
jmp
cld
in
jecxz
call
cmc
shrl
fcom
lret
out
loop
loopne
xlat
test
clc
rcr
sti
aam
movb
mov
rol
fmul
mul
in
ljmp
fistpll
leave
jmp
enter
mov
lret
iret
int
aad
cmp
hlt
std
jmp
test
sbb
vphaddudq
into
in
not
jmp
in
loope
clc
adc
cmp
mov
je
xor
add
mov
imul
add
jmp
int3
rol
aad
aad
fpatan
int3
and
ljmp
jle
add
icebp
std
rorb
mov
enter
fdivr
int
idivl
cmc
fsqrt
cli
out
rol
ret
mov
lret
in
mov
int3
loope
in
lret
xor
aaa
sti
clc
enter
aad
hlt
int
loop
shl
lret
sti
idiv
rcr
lea
divb
fdivr
jmp
jecxz
in
xchg
sbb
fiadds
ljmp
out
stc
fdivrs
cmc
rcr
test
mov
test
mov
enter
imul
int
ret
into
in
xchg
xlat
mov
iret
mov
lock
addb
cmp
fcomi
int3
stc
sbb
icebp
not
std
xchg
lock
lock
in
xor
aam
ds
iret
xlat
not
std
icebp
loop
fucomp
test
clc
faddl
out
shr
into
xlat
cli
xor
jmp
test
xchg
loopne
cli
fdivr
decb
shr
int3
out
call
int
xchg
in
cli
test
mul
fdivrp
repz
std
xchg
in
sub
hlt
jmp
fst
fsubp
xlat
fiadds
test
sub
lock
aad
rcl
into
fcmovne
icebp
xor
in
add
clc
loopne
nop
orl
iret
aas
div
iret
ds
iret
rcl
mov
loopne
in
stc
enter
and
shl
idiv
out
leave
repnz
ret
aam
cmc
stc
ds
stc
clc
clc
shl
out
fdivp
xchg
lret
enter
out
fsubrp
icebp
loopne
push
test
add
ljmp
repz
icebp
call
fst
int
cmp
loope
sbb
lret
roll
shr
lret
repz
sarl
in
enter
fdivrp
fiadds
clc
test
popl
cs
xlat
int3
in
lock
cld
in
iret
in
lock
ret
mov
jmp
in
ljmp
int
cmp
xor
in
sar
rcl
ret
dec
aam
aam
cld
out
xabort
les
hlt
aad
cmc
stc
shl
cmp
rcr
adc
jecxz
fcmovne
mov
mov
lock
in
jmp
cmp
loop
clc
cld
fisttpl
call
cmc
aad
xlat
hlt
xor
jmp
fchs
out
sti
int3
sti
test
xchg
aam
rcl
repz
rcr
in
loopne
repz
cmc
ror
mov
loop
sar
lret
incl
xchg
rol
not
sar
not
jmp
cmp
xchg
fcomp
jecxz
fsin
sar
mov
rorb
aaa
ror
out
out
test
bnd
cld
out
xchg
fsubrp
lock
ljmp
hlt
xlat
cmp
idivl
cld
addl
cli
addb
cmp
in
jmp
clc
aas
hlt
cmc
cli
xor
cmpl
in
faddl
into
fcmovbe
leave
hlt
cmp
testb
shr
out
loop
mov
sti
into
iret
ljmp
cmp
sar
aas
loope
addb
mov
mov
into
enter
mov
fisubrs
in
in
hlt
leave
jmp
hlt
loope
sti
shl
loopne
fsin
or
mov
out
enter
rcl
jmp
rcr
ret
loope
cld
icebp
cli
cli
and
jecxz
orb
jmp
in
fucomp
into
repz
jmp
adc
lret
jecxz
nop
cld
cld
xchg
aaa
int3
divb
rcl
fst
aas
loope
jecxz
cmp
xchg
ret
mov
icebp
out
xor
lret
fsubp
fsubp
ret
out
mov
fucomi
xchg
out
in
xor
xor
hlt
icebp
cmp
int
aad
call
std
jecxz
push
ror
mov
fdiv
cmp
dec
cld
fcomi
aad
aas
out
mov
sti
sbb
faddl
enter
lret
rcr
filds
sar
cmp
fsubr
fsubr
xor
ss
cmp
int3
into
cmp
clc
cmp
into
fadd
shl
fucom
ljmp
leave
xchg
xchg
popl
mov
pop
leave
ret
push
mov
push
push
mov
mov
mov
jmp
into
rol
fcomp
fcomps
xchg
jne
jg
jg
or
jle
sarb
fld
cmp
cmc
rcl
xlat
incb
out
loop
in
sbb
rolb
out
aam
stc
int3
lret
sti
std
ret
aas
xor
mov
out
loope
enter
out
xor
fadd
hlt
lret
loop
fcmovnbe
aas
icebp
repnz
fisttpll
in
xchg
in
fsub
cmp
cmp
cmp
rcl
ds
ret
jecxz
out
jmp
in
int
rorl
leave
lock
out
cmp
iret
loop
or
fucom
in
neg
fucom
lret
mov
ror
xor
iret
out
aam
cmp
idiv
cli
test
jecxz
fisttpl
ljmp
in
ror
cmp
repz
fucomi
lret
jmp
fsubp
loope
aam
lock
lret
into
xor
fdivr
neg
notrack
aas
xchg
enter
out
test
out
mov
enter
fdivrl
into
in
cmp
cmp
shl
ret
test
cli
int
lret
call
jmp
jmp
xor
out
out
out
add
jmp
fdiv
ret
xchg
xchg
nop
jmp
xor
shl
cmpl
fxam
loop
repz
in
fcomp
loopne
xchg
ljmp
aam
cmp
ds
loopne
fpatan
mov
test
mul
test
sub
ljmp
xor
leave
repnz
rcl
idivb
loope
lock
leave
std
fisttpll
rcr
mov
aad
shr
cmp
shr
test
ret
ds
sti
out
xchg
out
aad
jecxz
lret
cmc
aaa
xor
in
add
orl
leave
or
shl
loope
xor
enter
std
int
test
cmc
cmp
fcmovbe
cli
inc
out
test
out
int
repnz
leave
xlat
cmp
out
rcr
call
in
cmc
xlat
ffreep
inc
jmp
incl
ljmp
in
cmp
hlt
int3
jecxz
fdivrp
mov
in
repz
fucom
ljmp
ds
testl
movl
in
xlat
lret
xor
lret
cmp
fnclex
jmp
lret
faddp
jecxz
hlt
xchg
cmc
aad
xor
leave
shr
fcmovne
in
cmp
sar
ret
lds
cmp
loop
fldl
loope
sar
fcmovnbe
int
fbstp
repz
repnz
std
cmp
mov
mov
in
cmc
int
aaa
in
das
xor
cmp
leave
in
idivl
fdivrp
fsub
and
mul
in
filds
add
lea
clc
aad
int3
xor
sarl
ljmp
vpaddusw
jmp
out
repz
aam
in
out
cmpl
mov
cli
and
rcll
in
enter
lock
leave
cmc
xlat
sti
cmpl
loope
mov
and
jecxz
xor
sub
lock
int3
stc
jecxz
fsubp
xor
in
in
fdiv
in
out
jmp
leave
sti
hlt
jmp
cmp
vpsllw
icebp
cmp
jmp
rclb
cli
lds
aaa
out
loopne,pt
lock
xlat
shl
jmp
loopne
cld
mov
shlb
repz
xor
out
testl
cli
test
into
cld
loopne
xchg
ret
iret
cmp
into
loope
clc
in
aaa
aam
cli
fcomip
std
fildl
cld
loopne
xchg
bnd
rcr
ljmp
sbb
test
in
lret
mov
iret
incl
out
jecxz
iret
enter
cmp
inc
clc
cmp
add
add
icebp
add
add
and
add
ror
rcr
fstp
aam
cmp
lods
insl
iret
cmp
out
jg
or
jle
in
into
in
ds
ffree
xchg
loopne
xchg
shr
nop
cmc
mov
aaa
xlat
shl
fmul
repz
aam
aam
std
aaa
xor
idiv
loopne
jmp
cld
iret
jecxz
mov
rcl
xor
lret
icebp
adc
fyl2x
aam
cmc
leave
test
out
addb
cmp
ror
repz
push
fsub
mov
enter
mov
shl
out
sarl
in
sarl
inc
in
jecxz
xlat
and
stc
jmp
test
aad
enter
sub
les
int3
mov
jmp
xor
loop
cmc
cli
aad
cld
out
loopne
cmp
fldl
loopne
out
iret
test
into
cmp
jmp
out
shl
adc
fsincos
xchg
in
enter
int
jecxz
xor
call
cmp
add
mov
ljmp
shl
xor
out
cmp
xlat
out
int
xchg
enter
in
lea
aaa
aad
stc
shl
cmp
xor
std
adc
ljmp
incb
in
in
sar
pushl
cmp
icebp
neg
fdivp
repnz
in
lret
sti
ljmp
loope
into
cmp
div
out
leave
in
loope
test
repz
lds
fisttpl
repnz
repz
enter
fnstcw
ds
cmc
lock
jmp
fmulp
frstpm(287
fiadds
sub
iret
stc
icebp
stc
rcr
out
shl
out
ds
cld
fdivr
in
sbb
enter
xchg
loopne
cmp
shr
xor
fucomi
cli
addl
in
clc
jmp
mov
xchg
icebp
cmc
jmp
enter
ljmp
aam
test
cli
out
mov
movl
lock
lret
lret
icebp
mul
rcl
xchg
clc
clc
mov
mov
nop
in
in
in
repnz
cmp
cli
out
repnz
xlat
mov
out
fmull
sub
fcmovb
stc
in
rcr
xor
ret
fiadds
int3
jmp
test
jmp
shl
out
xor
test
xchg
mov
sti
in
shl
or
repz
clc
out
test
mov
xor
cmp
out
rcr
cld
jecxz
mov
enter
in
decl
aad
stc
cmp
aad
call
shl
mov
enter
int3
sbb
iret
mov
out
ds
std
cmp
ror
adc
out
shl
lret
stc
stc
mov
iret
xchg
mul
sub
aam
out
lret
in
int
cmp
filds
loop
in
lret
jmp
call
shl
xor
xlat
fiadds
xchg
lret
cld
jecxz
sub
int3
stc
aad
hlt
lock
fmul
in
test
ljmp
dec
xchg
ljmp
cmp
in
aam
std
lret
dec
test
ret
in
into
fisttps
shll
jmp
in
cld
cmp
sbb
xchg
aad
in
mov
loop
or
call
cmp
in
shr
sar
les
shl
stc
idiv
sbb
test
test
fyl2xp1
jmp
jmp
cmp
aad
mov
fmul
in
test
repz
jmp
shr
neg
fprem
fcom
into
in
clc
xchg
hlt
fadds
movl
jne
subl
mov
add
mov
xorl
xor
add
jmp
sarl
ret
ffree
in
jns
pusha
xorl
jg
or
jle
orl
call
lret
fsub
repz
clc
neg
sti
ret
mov
fsubr
fmull
lret
in
hlt
xchg
leave
in
xor
shl
cmp
xlat
icebp
fmul
cmp
out
shl
aam
cli
ljmp
std
test
ljmp
leave
sar
aas
fldl
vpsubd
fdivr
leave
in
out
call
int3
xor
lret
iret
cmp
cmc
cmpl
test
xchg
lret
mov
lock
xchg
xor
sub
std
or
loopne
div
test
rcr
out
std
in
loopne
xor
ret
leave
std
cmp
xlat
addb
loopne
fimull
cld
in
shll
xor
out
loopne
aam
cmp
jecxz
rol
shl
int3
std
out
mov
out
inc
xchg
icebp
ljmp
clc
int3
sti
xlat
fdivrp
xlat
shl
out
aad
test
loop
ffree
xchg
repnz
jecxz
lds
cmp
fdiv
inc
std
in
in
mov
mov
or
sar
xor
adc
rcl
aam
sti
in
test
jmp
xchg
loope
out
icebp
in
in
cmp
ljmp
in
fmuls
xchg
test
fsubr
xor
int
ljmp
jmp
stc
into
call
lock
div
into
out
shl
hlt
sti
fdivrp
in
loopne
jmp
sar
repnz
lock
icebp
in
fucomp
cmp
sti
lock
ret
call
fxch
nop
repnz
in
sti
in
rcl
cmp
test
jecxz
jmp
int3
std
mov
iret
test
fprem
cli
in
ljmp
repz
test
fmull
loop
xchg
rcl
cmp
fcomp
ss
rcl
fcmovb
faddl
jmp
jmp
fldl
loop
repnz
lret
lret
int
fdivr
in
jecxz
fiaddl
in
xchg
in
aam
aaa
shlb
int
fistpll
iret
ds
lock
movl
call
sarl
cld
fidivrs
out
fsubrp
loopne
and
add
ret
fprem
out
int
loopne
ljmp
das
call
into
hlt
loopne
fadds
mov
mov
incb
out
fldl2e
fnstcw
shr
int
cmc
fst
fdivr
out
cmp
in
mov
test
loop
ljmp
divb
int3
leave
into
iret
int3
in
fidivrl
mul
test
loopne
cmc
mul
aad
neg
out
in
clc
hlt
fdivp
aas
out
in
fabs
xrelease
lret
mov
aam
bnd
icebp
cmp
jecxz
rcr
loope
aas
xlat
stc
sub
std
jecxz
xchg
lret
xor
cmp
xor
repz
in
xchg
cld
out
cli
xchg
xchg
loope
in
rol
jmp
cmp
jmp
jmp
lock
clc
cmc
not
fmull
xchg
mov
fdivr
cmc
int
jmp
cld
fld
cli
in
addb
xchg
sar
xor
leave
in
cmp
fld1
cld
cmp
lock
int3
addl
call
fmul
fmul
cmp
cld
aas
out
xchg
mov
cli
mov
fnstsw
stc
addl
cli
fsubr
out
cmp
aam
call
jecxz
and
fucomp
mov
in
shl
repz
fdivrl
roll
sarl
mov
in
clc
ror
mov
loope
xor
mov
andl
add
adc
jmp
rcl
aad
rcrl
mov
or
jle
out
rcr
call
cli
filds
clc
fadd
test
mov
aaa
out
iret
cmp
xlat
in
in
jecxz
xchg
xchg
repnz
loop
xor
xor
fucomi
jmp
fdiv
rcl
repnz
jmp
fimuls
rcr
repnz
cmp
repz
loope
out
fsub
fmull
cmc
sub
lret
jecxz
lret
out
out
fdivr
fcmovu
cmc
vpsubq
mov
int3
call
int3
ss
int
jecxz
cmp
out
addl
loopne
sub
aam
cmp
in
loope
and
jmp
jmp
mov
sub
out
xor
cmp
out
xor
fidivrs
add
test
add
out
call
fidivrl
cmp
cmp
xlat
sbb
ds
mov
test
out
icebp
faddl
in
lock
stc
aad
ffree
jmp
shl
int3
sti
iret
xchg
in
into
ret
stc
cmp
fdiv
cld
idiv
stc
repz
in
call
rolb
xchg
out
aaa
in
xlat
rcl
ss
fldz
xchg
repz
in
mov
in
xchg
or
fdivs
sti
fdiv
shl
leave
fstp
out
icebp
ret
ljmp
repz
clc
cmp
lock
lret
cmp
cli
fptan
cmp
repnz
lret
int
int
icebp
call
shl
std
sub
and
not
loop
mov
lret
icebp
in
aam
not
jmp
icebp
out
fyl2x
add
repz
stc
roll
icebp
jmp
out
aam
cld
fucomi
aas
cmc
std
push
aad
out
cld
in
xchg
leave
lock
loop
jecxz
xlat
lret
ds
fsubr
fsub
in
ret
cmc
loopne
jmp
clc
int
in
in
xchg
xor
repnz
stc
shl
cmp
into
sbb
fadd
icebp
ret
in
loopne
xchg
mov
jecxz
xlat
jecxz
lock
xlat
cli
xor
fcmovnu
addb
or
out
aam
ss
cli
xlat
aam
loopne
idiv
in
cmp
fst
repz
sti
ljmp
rcl
xor
xor
cmc
fmul
clc
std
std
cli
aam
mov
test
loopne
cld
cld
loop
test
jmp
stc
lret
xor
enter
test
ret
loop
ret
cli
mov
in
mov
ss
ds
aad
cmp
fucom
xchg
test
shl
icebp
int3
int3
out
lret
hlt
out
fcmovbe
in
out
repz
sbb
aas
xchg
jmp
cli
out
fsub
jmp
aad
clc
in
ret
cmc
icebp
cmp
sbb
fdivr
in
fucomp
in
cli
xchg
cmc
shl
ss
ror
aaa
cmp
jmp
aaa
rcr
cli
and
call
mov
loop
test
out
call
call
lret
rolb
mov
in
orb
out
enter
clc
in
hlt
add
faddl
xchg
xchg
mov
shr
mov
mul
iret
idivl
int
cmp
fld1
mov
jecxz
fsubrp
sti
fcomp
test
shl
mov
aam
clc
cmp
xor
aam
cmp
cmp
cli
clc
les
rorl
rol
xor
int3
in
out
cld
out
cmp
out
icebp
ds
fsub
fucom
add
fdivr
xchg
jmp
lret
in
rcr
repnz
lret
dec
or
mov
sbbl
not
movl
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
subl
jmp
leave
xlat
rcr
mov
cwtl
push
fxam
dec
cwtl
sub
jg
roll
jle
stc
test
testl
int
icebp
and
repnz
jmp
sarb
xlat
rcr
ds
jecxz
roll
popl
out
shrl
hlt
cmp
ss
sti
into
xchg
rcl
jmp
xor
fstp
jmp
xchg
out
nop
clc
leave
hlt
lds
clc
ljmp
aaa
incb
cld
aad
loop
repnz
int
jecxz
xlat
shlb
sti
sub
idivb
cmp
out
mov
mul
cld
call
test
mov
repz
sti
cmp
ds
fst
hlt
fsubp
cmp
rcl
ljmp
das
in
rcr
lock
dec
in
fnclex
testl
xchg
mov
fcmove
xor
fdivrs
hlt
xlat
xlat
loop,pt
fsub
out
fcmovbe
int
orl
neg
aaa
xor
xor
leave
cmc
ds
dec
not
shr
xchg
roll
out
fiadds
fsubr
rol
in
repnz
loopne
ljmp
rcr
in
fiaddl
out
out
stc
xor
cmp
cmp
int3
cmp
out
clc
xchg
loop
fcomi
cmpl
std
ljmp
mov
ss
lds
aad
out
rol
in
test
std
sarb
aad
neg
or
xchg
mov
stc
call
ljmp
imul
mov
mov
call
shr
enter
lock
shr
int3
cmpl
flds
cld
int
into
fucomip
in
stc
shr
fldln2
hlt
sti
fistpll
sarb
int3
test
fnstcw
mov
out
in
mov
int
div
repnz
jmp
rcr
loope
in
cmc
test
sti
loopne
out
out
cs
clc
out
rcr
aaa
ss
ret
ss
test
cld
lret
call
out
shl
aam
xor
neg
rcr
iret
fcmovb
std
rolb
loopne
in
mov
lock
into
mov
into
xchg
loop
enter
sar
repnz
icebp
out
out
call
xchg
loopne
loop
repz
xor
out
xor
fidivrs
sti
jmp
fcmovnbe
stc
lock
fimuls
iret
into
xor
ss
iret
fcomip
push
out
std
cmp
aad
out
shr
mov
in
ret
icebp
int3
in
sti
ror
fsubrp
icebp
icebp
cmc
test
xchg
vpsrlq
call
jmp
iret
mov
fmulp
ret
jmp
cmp
cmp
test
lret
loopne
fsubr
call
aam
fstp
jmp
xlat
out
std
enter
sti
testb
std
dec
repz
stc
cld
cmp
rcl
rcl
out
in
not
fildl
leave
mov
mov
loopne
or
sti
ljmp
aas
test
test
aam
in
mov
lock
ret
cmp
cmp
cmp
lret
rol
flds
fimuls
test
xchg
jecxz
loopne
lret
enter
xor
sti
aam
out
jecxz
test
cmp
cmp
jecxz
loope
ret
repnz
out
int
in
loopne
sti
adc
test
neg
test
movl
not
cmp
hlt
xor
into
adc
xor
hlt
stc
lret
mov
into
stc
nop
int
out
ret
clc
cmc
repnz
ds
cmp
addb
xchg
sti
decb
ljmp
fxch
lret
sar
out
xlat
adc
rolb
loopne
in
fsubr
fdivrp
mov
call
xor
out
mov
int
out
int
stc
cmc
test
fsub
cmc
ljmp
testb
stc
ljmp
test
xchg
clc
loop
cli
fucomip
jmp
fst
xchg
iret
sarb
jmp
call
hlt
cld
jecxz
aam
std
fcmovnu
test
mov
daa
test
test
add
sbb
jmp
mov
fstp
enter
imul
jge
jg
roll
jle
ret
in
ret
out
out
aad
int
neg
stc
shl
out
hlt
cli
leave
xchg
vpsubsw
in
fnstcw
fcmovb
div
fcmovbe
sti
stc
icebp
icebp
rol
in
add
cli
fdiv
fucom
std
xchg
int3
jmp
iret
in
lret
enter
fcom
shr
faddl
cmp
call
mov
call
ror
int
sti
ljmp
icebp
cmp
orb
fsubrp
jmp
in
into
fcmovbe
aaa
out
cld
lock
loopne
iret
cld
adc
aad
lret
sbb
icebp
loop
xchg
out
xor
test
lret
clc
xlat
ds
repz
leave
fsqrt
sti
xchg
call
shlb
aas
into
out
aam
xchg
faddp
enter
nop
orb
lret
cmp
into
aas
out
fsubp
cmp
rcr
loopne
rolb
ljmp
das
cmc
int
lock
repnz
addl
cld
xchg
jmp
cmp
fcmovne
cld
cld
loop
int
fucomip
mov
clc
jmp
in
rcr
ljmp
jmp
cmp
rcr
xor
mov
ret
ret
clc
out
xlat
loop
lea
lds
div
fmul
sti
xlat
repz
faddl
fcmovb
faddl
aam
loop
cmp
cmp
repnz
out
loop
iret
or
decl
mov
sub
ss
and
shl
or
mov
mov
decb
cmp
fcmovnbe
out
aas
xlat
cmc
in
loop
cmp
filds
out
lock
cmp
out
shl
idivl
xor
shl
sti
out
lea
shl
in
loopne
lock
cmp
std
aad
lret
test
add
or
cli
mov
sti
mov
nop
jmp
enter
aaa
cmp
icebp
cld
loopne
xor
jmp
test
mov
jecxz
lret
int3
int
xor
lock
out
std
lret
into
shl
test
mov
clc
cmp
lret
hlt
repnz
ret
leave
xor
clc
aad
cmp
xorl
cli
loop
in
ljmp
lret
xchg
clc
les
jmp
in
cmp
std
int3
jmp
icebp
ret
std
cmp
cld
in
fmuls
mov
xchg
repz
int3
hlt
cmp
out
cmp
cmp
cli
fdivs
repz
icebp
fmulp
cld
in
or
lea
repz
rcl
cmp
ror
aaa
cmp
cmp
flds
call
out
enter
xchg
xchg
loop
hlt
shl
call
aad
clc
aad
aam
fdivr
clc
std
hlt
test
mov
hlt
out
xor
sti
fcom
in
call
in
out
cmp
out
std
repz
ljmp
mov
mov
cmc
lret
fldlg2
icebp
lret
iret
shr
fcmovb
in
int
mul
cmp
loop
ret
cld
mov
rolb
jecxz
sti
cli
fdivr
cmp
in
xor
ret
jecxz
mov
iret
adcl
repz
xlat
int3
out
ljmp
fdivp
adc
fcmove
jmp
mov
ret
stc
loop
sub
shl
sub
call
loopne
in
mov
out
rclb
lock
in
clc
fcmove
cli
lret
loope
fsubr
adc
aas
leave
ret
fcmovnbe
int3
call
lock
in
div
jmp
addl
fabs
enter
out
icebp
repz
out
aad
cmc
dec
aad
shll
sti
jmp
xlat
jmp
out
fisubrs
cld
out
neg
fdiv
repnz
rol
test
mov
fnclex
xchg
repz
mov
hlt
in
jecxz
in
ljmp
and
ljmp
sti
out
xchg
shl
in
cmp
shl
lock
cli
sarl
or
aad
andl
cld
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
inc
jmp
lret
aas
fst
fcmove
fidivrs
mov
push
cmpl
add
orb
orb
les
cmp
cmc
sarb
ret
cmp
iret
loopne
xor
jecxz
mov
jmp
aaa
aad
ss
std
out
jmp
int
ffreep
in
call
cli
jmp
xor
sub
rcl
repz
in
loope
into
sti
cld
loopne
fucomi
les
mov
fiadds
cli
xor
shl
ds
loop
fcmovnb
out
test
fninit
in
nop
stc
out
std
mov
in
jmp
not
in
sbb
out
xchg
decb
mov
repnz
cli
in
cmc
call
aas
ret
icebp
cmp
cmc
mov
stc
test
leave
into
test
rcl
cmc
jmp
out
enter
adc
incb
ljmp
fst
jmp
xor
aam
leave
call
cmp
xchg
out
call
jmp
loop
jecxz
xchg
test
hlt
sti
leave
enter
aaa
int
shl
cmc
mov
mov
adc
lret
cld
mov
in
into
mov
repnz
fcomi
out
lret
in
sti
cmc
fadd
fld
test
in
out
mov
mov
out
repz
vpslld
in
stc
repnz
cld
repnz
mov
aam
jecxz
test
repnz
xor
cmp
fdivr
int3
std
xlat
loopne
repnz
shl
fmul
out
xchg
and
jmp
lret
int3
cmp
fcmovne
cmp
cmp
aas
rol
fucom
fmull
std
rcll
in
aad
clc
icebp
cmp
rolb
loopne
jmp
xchg
out
in
rclb
xor
cmp
xor
div
cmp
ror
test
shr
mov
neg
xchg
lea
jecxz
cmp
jmp
cmp
repz
ds
sti
cmp
loope
not
clc
test
jecxz
into
jmp
lret
sti
fxtract
not
flds
std
fsubr
fmull
out
jmp
in
out
jmp
xor
rolb
jecxz
orl
test
in
cmp
aas
aad
cli
jmp
aad
test
test
aam
fdivr
iret
mov
int3
mov
imull
xor
hlt
aam
cmp
aas
xor
out
idiv
ret
fucompp
mov
lock
shr
xlat
int
fsubrp
cmp
fcmovu
cmp
fimuls
fmul
test
out
mov
lock
clc
repz
call
aam
rolb
jmp
out
xchg
hlt
jecxz
rol
fxch
fdivr
idivl
loop
fsub
repnz
std
mov
mov
iret
nop
fdivp
ror
aad
idiv
enter
jmp
out
fstp
test
out
mov
xchg
nop
out
dec
icebp
enter
fdivp
xor
sti
aam
jmp
lret
jmp
mov
xchg
shlb
xlat
lret
ljmp
fadds
xlat
clc
out
mov
cld
mov
sub
jmp
repz
int3
cmp
xlat
into
aad
test
aad
dec
int
in
out
loope
fucom
jmp
in
enter
fsub
flds
jmp
loopne
lret
xchg
mov
and
out
int3
out
cmp
int3
testl
or
in
loopne
mov
cs
sub
cmp
aam
iret
ror
sar
test
repz
cli
ljmp
loope
loop
sub
shll
iret
out
out
fdivp
loope
int3
aas
stc
lock
cmc
in
int3
decb
mov
jmp
call
shl
sarb
out
addb
mov
jmp
out
loopne
lret
repz
iret
lret
fstpt
aad
ljmp
rol
leave
lds
sti
lock
test
in
out
jmp
roll
xchg
mov
int3
int3
loop
cld
lea
movl
jmp
aam
aas
ret
lret
fst
fnstenv
lods
pop
inc
mov
xchg
in
and
jg
roll
jle
jmp
aam
out
cmc
shl
in
mov
std
xchg
mov
lret
repnz
cmc
icebp
in
xor
jmp
leave
hlt
shl
rcr
jecxz
sub
decl
jmp
xchg
hlt
subb
out
ret
fcmovnu
std
cmp
icebp
fstp
lock
aam
sub
fldl2e
leave
jmp
neg
enter
shll
loope
loop
cli
fdivr
rcl
mov
sti
clc
iret
jmp
fneni(8087
rcll
xor
iret
cmp
xlat
loopne
lock
clc
stc
in
or
mov
mov
into
aaa
out
cmp
cmp
cmp
xlat
iret
aam
flds
aad
enter
mov
lret
cs
clc
leave
call
sub
in
rcr
loop
shl
jmp
add
imul
jecxz
clc
shr
fnsave
std
fnstcw
fdivr
fucomi
shl
ret
leave
jmp
jmp
sar
test
xor
xor
div
divb
idiv
repnz
mov
cmp
test
iret
out
and
sub
hlt
xor
cmc
rcl
ljmp
repz
loop
repnz
aam
idivb
lret
ds
fiadds
stc
aam
out
in
mov
add
ror
aam
xor
fistpll
int3
xlat
imul
in
flds
leave
lock
lret
fdivp
enter
in
clc
cmp
aaa
loope
fcomi
rolb
cli
fcmovu
jmp
mov
out
clc
in
in
enter
int3
cmpb
cmp
out
in
fcmovbe
fadd
fadds
xchg
in
shlb
int3
fdivrp
in
ljmp
sti
fadds
lret
test
aam
call
sti
cld
cli
enter
loopne
aas
sarb
fxch
mov
out
jecxz
rcl
xchg
ret
jmp
clc
aad
sti
out
rcl
std
imul
iret
rorb
fimuls
mov
in
in
imul
ret
fdivs
cs
repnz
fstpt
jecxz
adc
rcr
loopne
aas
mov
sbb
cmp
stc
rcr
sti
int3
cmpl
test
cmp
ror
movl
xor
fcom
jmp
cmp
cli
cmp
shl
rcl
loop
xlat
clc
iret
cli
iret
xchg
nop
test
in
xor
xor
aam
out
clc
ss
mul
xchg
jecxz
aam
and
out
adcl
fcmovnbe
std
cmp
faddp
fadd
idiv
fmull
mov
cli
repz
nop
icebp
leave
xor
cmp
sarb
xlat
test
rcr
jecxz
movb
mov
filds
lret
xlat
ljmp
call
leave
ret
mov
hlt
xchg
icebp
iret
cs
int3
fxch
ror
in
sbb
int3
fcomp
test
mov
xor
lret
out
in
int
xor
cmp
std
cmp
xor
les
cli
ljmp
shrl
cmp
jmp
hlt
in
jmp
out
xor
sarb
cmp
in
in
repnz
xchg
rcl
aaa
ror
shr
cmp
std
sti
int3
rolb
jmp
enter
lock
stc
jmp
out
in
and
call
stc
out
icebp
jmp
shr
xchg
leave
int
in
shr
loopne
rol
aas
aas
aam
cld
and
out
lret
iret
out
test
in
repz
aaa
xor
ss
ss
ljmp
clc
fucom
out
loope
in
nop
out
cmc
in
fcomp
xor
xlat
int
stc
enter
cmpl
clc
fstp
ljmp
xchg
int
lret
fmul
fldt
into
jmp
loop
addl
cld
xchg
mov
xchg
out
out
ror
in
xor
addl
xchg
cmc
out
mov
fdivrp
jmp
loope
icebp
lret
hlt
fxch
out
inc
mul
out
cmp
loop
shl
imul
idiv
in
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
neg
mov
sbbl
push
and
lea
andl
mov
neg
jmp
rcl
xlat
fcom
push
outsl
bound
mov
roll
jle
jmp
in
out
xchg
out
sub
jmp
xor
cmc
int
hlt
ret
incl
out
in
xchg
fiadds
xor
rcr
jmp
idiv
xor
jmp
fstp
mov
loop
into
mov
icebp
out
cli
in
cmp
enter
repz
std
aas
jmp
test
or
cmc
divl
out
cmp
in
ljmp
cli
cmp
ret
lret
xor
jmp
das
ss
stc
cmp
cmc
in
shl
in
cmp
dec
mov
push
in
enter
cmp
sti
fmul
rolb
xchg
stc
std
jmp
xchg
orb
into
call
jmp
repz
cmp
fucomi
mov
mov
stc
out
sti
in
xchg
mov
in
into
fnstenv
shr
ror
shr
loopne
loope
rcr
aam
ret
imul
lret
into
hlt
repz
cmp
lret
test
sar
int
fnstsw
jecxz
testl
and
cli
clc
out
jmp
jecxz
idiv
shl
xlat
lret
fucomi
dec
xchg
jecxz,pn
sub
int
lret
std
cmc
lret
std
loope
test
loope
mov
f2xm1
int3
cld
loop
xchg
mov
fcom
fsubr
lock
jmp
fdiv
fadd
fcmovnu
loope
aam
enter
test
xchg
jecxz
loope
cmp
enter
fstpt
shl
cmc
loope
std
cmc
loopne
jecxz
enter
mov
rol
lret
shl
cld
shr
out
cld
rol
ret
stc
in
mov
addl
out
in
xor
call
fcom
cli
fscale
fldl
fucomp
shll
xlat
imul
xor
out
cmp
lret
test
shl
ret
mov
lret
mov
lock
aad
in
xor
lret
fcomip
add
test
xlat
xrelease
lret
out
into
call
lock
out
repz
fdiv
shr
orl
mov
jmp
repz
iret
aas
in
lret
into
cli
ret
xchg
test
nop
in
aam
xor
jmp
xor
clc
int
fcom
mov
inc
mov
cli
cli
in
out
nop
loopne
xor
repz
cli
out
cmp
loop
out
ds
jecxz
clc
jecxz
jmp
out
fldl
xor
cli
leave
in
repnz
xor
xlat
fsub
test
xchg
call
xor
fcmovnb
iret
in
sti
fadd
leave
decl
std
nop
xchg
iret
mov
cli
ss
out
repnz
rol
clc
fimull
repz
in
fmul
xor
xor
call
jmp
xor
stc
fcomip
mov
cmp
fmulp
std
hlt
and
aas
divl
shl
lret
ljmp
imul
std
roll
fmuls
aad
icebp
les
cmp
aaa
leave
cmpl
out
test
out
loopne
addl
ss
iret
clc
not
iret
in
aad
loope
in
sub
rcr
in
fcmovne
cli
mov
test
xor
int
cmp
rcr
repnz
decb
call
in
rol
jmp
into
into
inc
aad
vpaddd
fcmovu
cli
orl
aad
rcl
fdivr
fiaddl
xchg
in
ljmp
cmp
xor
shll
shl
stc
loop
aas
fld
enter
out
call
jmp
xlat
cmp
out
in
flds
cld
sti
loop
incl
jmp
rcl
in
shr
icebp
lret
clc
out
clc
fcomi
idiv
out
aad
rolb
and
mov
in
xor
fadd
aaa
xor
lret
fiadds
push
jmp
aam
enter
aad
cmp
and
cmpsb
inc
dec
nop
jg
roll
jle
shl
cmp
loop
loope
lret
vpsllw
aad
out
call
repz
fstp
ror
in
ret
ret
test
icebp
popl
int
xor
call
repnz
cmp
les
enter
cld
in
and
int3
lret
icebp
cmp
jmp
xor
hlt
roll
sti
cli
out
repnz
call
int
ljmp
cmp
repz
aam
test
lret
and
xchg
mov
loope
ljmp
icebp
out
cmc
idivb
loope
les
shl
std
out
call
mov
xor
repz
imul
xor
call
ds
loope
cmc
fucomi
into
orl
rcl
out
rcr
aam
fcmovnbe
int3
out
rolb
enter
mul
mov
fcmovne
jecxz
lret
divb
loop
fstpt
out
cmp
ret
enter
test
jecxz
mov
ret
clc
enter
sti
rcl
sbb
sar
xlat
test
loop
test
xlat
iret
into
aad
jmp
repz
sbb
repnz
aad
mov
xchg
mov
lret
call
test
aaa
fcmovnbe
cmp
lret
iret
cld
incb
or
std
enter
int
shlb
into
jmp
fcmovbe
neg
test
fiadds
out
fadd
xchg
mov
into
out
in
repz
into
out
fdivr
aam
int
cmp
xlat
roll
cmc
lret
mov
icebp
cmc
xor
hlt
in
enter
ror
imul
lds
enter
loopne
int3
leave
rorl
cmp
fidivrl
xor
loope
ljmp
test
clc
clc
enter
repz
xlat
cli
out
cmp
cmp
mul
repz
fcomp
in
ret
call
std
jmp
hlt
ret
xor
into
aam
aam
aas
lret
std
into
aas
decb
sbb
faddp
loopne
rorl
test
std
out
ss
fdivrs
loope
xlat
cmp
shl
stc
cld
lea
ror
jecxz
aas
sub
cli
ss
out
leave
enter
fsubrp
fucom
loop
out
xchg
mov
out
into
clc
in
fmul
jmp
shll
hlt
lock
cmp
loope
repz
int3
leave
loopne
out
int3
mov
das
call
hlt
call
lock
jecxz
std
fiadds
in
test
aam
leave
lds
not
fucomp
fsubrp
aam
fdivr
out
sbb
adc
leave
leave
enter
into
iret
popl
shl
xor
loope
loop
ret
repnz
test
shl
iret
jmp
int3
loopne
call
ror
cmp
out
test
test
mov
loop
loop
xchg
call
xor
ror
shl
fidivrs
fcompp
rol
cld
rcr
mov
int
xchg
imulb
int3
in
lock
test
loopne
call
lret
xchg
std
xchg
and
shl
xor
mul
cld
cmp
fadd
repnz
ds
xchg
loopne
cli
in
xchg
lret
adcb
shl
ljmp
ret
hlt
std
ror
clc
call
fmull
in
ljmp
imul
xor
icebp
in
aas
out
aam
adc
mov
in
ror
cmc
into
jecxz
out
xlat
and
out
fdivr
in
idiv
loop
in
int
out
rcl
jecxz
into
stc
in
ljmp
stc
test
ljmp
std
sub
aaa
ss
fsubr
lret
cmp
cli
in
in
hlt
stc
xchg
lret
enter
cmp
fdivl
repz
cmp
rorl
enter
xchg
lret
in
rcr
shl
cmc
ror
loopne
shl
aam
aam
orb
lock
sti
fstl
cs
clc
mov
mov
movl
mov
xor
jmp
rcl
enter
fcmovne
fdivl
xchg
jg
roll
jle
test
jmp
aaa
xlat
xlat
lret
cld
out
jecxz
shl
out
leave
idiv
enter
mov
xchg
xchg
imul
ljmp
jmp
xlat
xlat
xchg
loop
ljmp
mov
fcomp
int3
div
int3
xor
sarl
icebp
loope
lret
cli
sti
loope
in
in
loopne
rcl
ret
enter
ljmp
fdiv
shr
in
xchg
decl
loope
fisttpll
iret
hlt
stc
cmp
cmp
cmp
std
loopne
cmp
cmc
idiv
jmp
or
out
call
aad
lret
loope
repz
in
repz
aad
neg
mov
xchg
out
icebp
aaa
shl
xor
ljmp
out
idiv
test
jmp
aad
cli
fdivrp
mov
out
in
hlt
fcmovnb
call
ret
fadd
test
in
call
call
xor
in
out
fdivrp
loope
jmp
frndint
out
shr
std
cld
decl
fildl
xor
int
test
cmp
rolb
ds
mov
out
cli
cld
out
cli
in
nop
cmc
xchg
aam
fld
xlat
ljmp
ds
aad
cli
xlat
clc
sub
lock
xchg
lret
iret
enter
enter
jmp
xlat
repnz
rol
fdivr
out
in
xlat
imul
mov
repnz
sub
cmp
xlat
into
lock
fmul
clc
cmp
addb
in
loope
iret
int3
ror
mov
sbb
iret
in
cmp
fdiv
into
incb
rolb
sti
lret
and
icebp
rcr
xchg
mul
stc
jecxz
lret
leave
clc
cmp
jecxz
aam
rcl
test
hlt
out
add
sub
sar
aam
iret
loop
cmp
xor
shl
out
jecxz
shl
test
test
xchg
xchg
jmp
xor
int
cmp
aam
std
and
cld
in
cmc
addb
in
mov
cmp
icebp
leave
clc
lret
aam
cmp
loope
out
aas
loope
fsub
fcmovb
loope
loopne
jmp
int3
ss
into
xor
std
ds
or
sub
mov
enter
int3
hlt
jmp
xor
fadds
sar
in
fsub
fstl
shll
repz
imul
xor
lret
iret
jecxz
fidivl
fcmovb
push
repz
jmp
out
hlt
test
out
loopne
cmp
into
cmp
fdivr
test
icebp
loop
stc
ret
addl
lret
xchg
ret
int3
not
in
out
aaa
loope
sbb
filds
enter
loope
xchg
iret
inc
lret
aaa
ljmp
fldl
div
clc
cld
enter
out
xor
lock
in
lret
lock
std
jecxz
clc
std
sti
ffreep
adcb
loope
xor
jmp
fcmovnbe
fcmovb
loop
in
ret
aad
lret
test
idiv
jecxz
lret
clc
aaa
shr
rcr
out
fucomi
add
xchg
lret
adc
rcr
out
in
fdiv
xor
repnz
loopne
lock
std
fcmovb
out
adcb
mov
call
out
lret
aas
cld
loopne
add
neg
std
in
out
test
sar
das
enter
stc
cmp
cmc
cmp
fucomi
aas
fimuls
int3
sti
iret
sti
jecxz
test
loopne
xor
out
into
cmp
shl
xchg
ret
xchg
neg
jmp
out
filds
cmc
int3
int
shr
cmc
or
rorb
movl
bnd
in
xlat
cs
icebp
jmp
jecxz
aam
or
std
out
out
rcl
aad
in
out
leave
aam
cli
leave
fadd
fcmovnbe
in
sti
jmp
mov
into
in
in
ret
xor
ljmp
std
rcr
not
out
hlt
fdivrl
movzwl
adc
mov
xor
mov
or
mov
xorl
xor
adcl
jmp
int
rcl
int
stos
fimuls
jp
cltd
jg
roll
jle
jmp
orl
out
rcl
rol
aam
ss
into
cmp
ljmp
cmp
lret
in
mov
rol
iret
xor
int
ss
xor
loop
xlat
ret
fsub
fisttpl
out
in
enter
imul
aad
loopne
cmp
jecxz
lret
iret
enter
nop
fmulp
in
out
shr
divb
iret
in
in
adc
roll
fsubrp
in
stc
iret
in
in
aaa
in
ljmp
lret
loope
div
rolb
out
mov
ret
loop
loope
shl
shlb
ss
xor
aam
ret
shl
aas
fcom
mov
out
idiv
fildl
jecxz
ss
xor
hlt
out
roll
clc
loope
incl
in
icebp
fucomi
int
in
loopne
stc
out
aad
repz
idiv
adc
faddp
lds
mov
std
repnz
jecxz
fsincos
icebp
out
leave
xor
repnz
sarl
repnz
cmp
cli
cli
enter
shl
out
out
int
fsub
cli
cmp
shl
cmpl
testl
icebp
mov
call
out
fdivr
repnz
into
std
out
xlat
in
test
test
std
loop
int3
repz
cmp
into
fiaddl
call
dec
sti
flds
in
out
or
ljmp
cld
loopne
sarb
and
std
incl
loopne
out
repz
lock
clc
in
repz
rol
fiaddl
jmp
std
fdivp
out
in
repnz
enter
cmp
loop
shl
fcomip
imul
mov
nop
call
leave
shr
repnz
into
fcom
cmp
ret
iret
iret
xlat
rcl
testl
cmc
in
xor
hlt
in
cmc
xlat
dec
loope
ror
out
aad
rorl
in
xchg
xchg
mov
xlat
icebp
in
sar
neg
repz
in
stc
loope
fmull
out
fmulp
into
test
rcl
fdiv
xor
cmp
sti
out
xchg
addb
mov
test
mov
lret
repz
out
in
out
std
cmc
cmp
fscale
cli
leave
sti
mov
into
rolb
out
fcomp
cmp
loope
xor
aas
shl
fsubr
loope
rorl
in
xor
cmp
out
fstp
cmc
in
sti
iret
fadd
fsubr
int3
call
incb
loop
iret
stc
iret
repnz
sarb
sarb
xlat
ret
fucom
loopne
xchg
xlat
fsubrp
lea
call
xor
xor
cmp
cmp
cmc
xor
cld
ret
xchg
xchg
fdiv
loopne
ljmp
cmp
testl
orl
mov
lds
xlat
aaa
cli
out
aaa
cmp
clc
iret
in
fstp
aad
cmc
repz
ljmp
shr
out
lret
in
out
idiv
fst
repnz
cmp
sar
mov
stc
xchg
jmp
hlt
xchg
mov
int
loop
aam
leave
leave
lret
iret
cmp
xlat
out
rcr
lret
ret
lret
mov
cmc
vpaddusb
out
lock
lock
loope
ds
ljmp
lret
sub
in
fnstenv
test
clc
in
shl
loope
clc
ret
xchg
fcomp
ret
out
iret
in
xor
divb
jmp
fsub
lock
fcomp
out
out
std
xchg
xchg
mov
mov
xor
in
shr
xor
clc
cmp
fcmovnb
aad
cmp
xchg
loop
loopne
hlt
das
sar
fidivrl
stc
ljmp
test
stc
loop
in
loope
imul
fsub
lock
sar
in
aaa
int
fdivl
fucom
in
fcmovbe
lret
out
into
rcl
cmc
xor
aaa
jecxz
xor
jmp
enter
fmul
fnstcw
leave
out
inc
popf
jg
roll
jle
xor
jmp
in
sti
in
ret
xchg
ljmp
ljmp
xor
lret
ljmp
neg
rol
fcmovnu
out
mov
out
iret
in
out
in
jecxz
xchg
fsub
in
xor
ds
in
shl
xlat
rol
test
and
mov
fisttpl
jmp
ljmp
int3
cld
test
fdivr
loop
orl
jmp
xor
xor
aad
cmp
jmp
les
int3
loopne
test
std
mov
xor
lock
out
out
sti
not
faddl
inc
aad
cld
ljmp
out
nop
icebp
loopne
jmp
lret
lret
std
rcl
fucomp
mov
cld
cli
jmp
out
stc
fcmove
in
repnz
clc
divl
sar
std
loopne
jecxz
and
jmp
cld
cld
cld
xchg
out
sub
jecxz
cmc
into
sar
shl
aad
jecxz
loope
fcomi
jmp
not
out
shr
xchg
std
mov
les
fcomi
ljmp
roll
clc
call
jmp
xchg
xlat
neg
out
repnz
call
fadds
ljmp
jmp
in
jmp
xchg
out
jmp
stc
in
std
cli
lret
incb
aad
rolb
call
lock
hlt
jmp
lret
ss
test
fabs
sar
cmc
fildl
mov
xchg
inc
jmp
sti
in
jmp
std
addb
aad
mov
incb
out
fdiv
fdivp
lret
clc
out
rol
cmp
fnstcw
in
cli
in
roll
into
in
out
xlat
ds
cmp
cld
sbb
mov
sti
in
loopne
into
lret
cmp
vpmullw
call
shr
not
int3
fadd
mov
xchg
filds
out
rol
out
lds
fnsave
into
cmpl
ret
dec
lret
mov
icebp
xchg
shl
fbstp
in
lret
jmp
lret
rcl
or
lock
decl
shl
les
call
stc
xor
rol
aam
ffreep
lret
in
cld
lret
enter
iret
loope
out
imul
xlat
ds
or
ret
mov
aas
rcr
iret
mov
xchg
xor
lock
sti
clc
cmp
in
cmc
jecxz
out
aam
std
loope
jmp
icebp
out
call
out
ljmp
into
cmpb
fisttpll
jmp
cmp
fsubr
std
icebp
ds
clc
xlat
aad
ds
filds
mov
shr
mov
shl
fxam
aas
loope
xlat
ret
fiaddl
cld
loope
incb
hlt
rol
into
repnz
ret
aam
imul
fcos
out
ffreep
fldl
fstp
out
int
mov
in
fcom
lock
repnz
loope
aaa
shl
addl
icebp
cli
xchg
rclb
cmc
aaa
fstpt
lock
hlt
leave
ljmp
ret
shl
testb
in
xchg
mul
out
cmp
fdecstp
aad
hlt
cmp
ss
xchg
or
cmp
fdivp
test
out
repz
lock
lock
cmp
test
jmp
and
in
decb
ljmp
fcmovnbe
rolb
test
aad
fcmove
lret
out
xchg
loope
call
stc
ss
shll
ds
cmp
ds
repnz
leave
nop
out
out
loope
aam
leave
fadd
icebp
out
cmp
testb
jecxz
mov
in
iret
loope
icebp
lock
xchg
das
ret
ss
cmp
lock
aam
fcomip
cmp
aas
mov
mov
loop
fiadds
aad
lock
cld
cmp
cmp
int3
vpandn
ljmp
movb
shrb
add
imul
enter
fst
ffree
and
dec
jo
mov
jg
roll
jle
loop
out
shl
mov
xlat
lret
in
cmp
test
out
addl
loope
movl
cld
aam
sarb
cmp
rcl
addl
xchg
test
xor
lock
xor
cld
fadds
xchg
mov
int3
loopne
loop
rcl
cli
cmp
rcr
sbb
sar
cli
test
loope
repnz
cld
mov
cmc
clc
cs
int
xlat
fsubr
not
aas
sti
hlt
loope
fcmovnbe
std
mov
cli
fcmovu
sti
ror
loopne
fiadds
leave
out
repnz
fsubr
test
flds
jmp
mov
cmp
xchg
xor
enter
aam
rol
cmc
xor
fadds
loop
mov
call
orl
hlt
cmp
sti
std
enter
clc
cmc
out
out
shl
aam
ds
jmp
xchg
fsubrp
aam
out
jecxz
rcl
out
ss
std
cli
roll
xlat
cmp
clc
lea
out
xchg
jmp
fcomp
in
lret
repz
loop
cmp
hlt
test
xlat
xchg
mov
call
in
lock
fdivrs
neg
rcl
aas
hlt
out
clc
rcl
shr
jmp
std
jmp
lock
test
fdivp
jmp
out
test
mul
test
in
jmp
loope
repnz
clc
leave
out
in
xlat
enter
clc
fcompp
and
faddl
std
sub
lock
xor
sti
lret
enter
in
repz
lock
ret
xchg
loop
shll
rol
into
call
cmp
repnz
shl
xchg
in
fucomip
stc
lret
stc
fcmovu
aas
rcr
int3
out
std
clc
roll
mov
xchg
int
lock
in
cmp
fnstcw
sarl
fiadds
mov
xor
in
loop
lret
aaa
xor
enter
int
icebp
cmp
fdivp
sarb
test
fcmovnb
ror
lret
rcl
loope
lret
in
into
dec
call
fucomp
aam
fcmovb
loopne
lds
xchg
ljmp
ret
aad
fsqrt
xor
ror
std
loope
stc
aam
fucomip
loop
int
xchg
fsubr
repz
rcl
cli
les
fsub
loop
xor
icebp
cmc
sub
icebp
mov
ljmp
shr
in
xor
rcl
idiv
sti
repz
test
mov
out
icebp
mov
in
xchg
das
iret
jmp
aas
lock
in
cmp
aas
testb
in
mov
jecxz
into
mov
xor
test
cld
icebp
aam
ds
sti
loop
add
fimull
fmulp
lock
not
xor
repz
cld
test
adc
shl
iret
int
xchg
ljmp
cld
shl
loop
rolb
adc
ret
mov
nop
out
repz
aad
rol
xor
call
aaa
mul
rol
loope
mul
in
in
sbb
test
jmp
std
nop
leave
divl
icebp
iret
fdivp
fcmovne
or
roll
out
mov
iret
nop
call
into
rcl
lret
in
aaa
icebp
loope
incb
out
shr
aad
test
ror
jecxz
aaa
lret
test
std
ss
ret
xor
fucomip
or
lret
out
ret
cli
lock
cmc
iret
loope
aas
icebp
in
stc
out
fucomi
cmc
idiv
xchg
icebp
iret
cmp
aam
repnz
in
ss
cli
fidivrl
xorl
xchg
aad
xor
int3
int3
icebp
icebp
mov
call
fabs
ror
test
int
in
sti
clc
incb
in
xchg
test
leave
fucomip
jmp
fnstenv
xor
in
sbb
enter
cli
int
mov
std
in
nop
xor
leave
out
out
fistpll
fiadds
add
arpl
div
not
mov
movl
cmp
movl
jmp
rol
mov
xchg
adc
jge
jmp
add
shl
aas
out
ret
not
clc
neg
test
xchg
fcomip
in
into
icebp
xor
jmp
call
fstpt
clc
jecxz
cmp
cmp
sti
hlt
in
imul
loopne
xchg
call
shl
enter
fcomi
sbb
shl
test
loop
addb
in
repz
push
cld
out
div
cld
cld
ror
in
in
fcomip
adcl
clc
int3
cmc
repz
sti
lret
loope
incb
in
fisttps
out
icebp
cmp
cmp
loope
out
iret
rcl
cmc
sub
fcomi
fucom
repz
xchg
out
test
shl
loopne
faddl
add
fxch
sti
in
out
lret
jmp
ljmp
cmp
xor
jmp
mov
call
loop
jmp
lret
in
enter
in
cmc
stc
fcmovne
mul
loop
jmp
iret
fcomip
out
imul
xor
call
not
rcl
icebp
ret
xchg
fld1
jmp
call
rclb
loop
sti
xor
icebp
cmp
aas
lds
call
cmp
xchg
jecxz
mov
sub
xor
in
cli
std
xor
cmp
cli
xorl
cmpl
testl
hlt
lds
out
sar
repnz
in
rolb
in
jmp
fdivr
shr
jmp
jmp
out
mul
fsubrp
ljmp
in
test
xlat
test
sbb
fisttpl
aaa
xor
icebp
in
fdiv
aam
sarb
repnz
mov
loopne
jecxz
xchg
shl
lock
call
aad
aas
icebp
in
cmp
sbb
xchg
movl
stc
cmp
jmp
stc
into
into
loopne
in
int3
jecxz
fsubrp
or
repz
out
cmp
into
shl
ds
les
fcmovne
icebp
adcl
aaa
jmp
stc
aaa
xchg
fdivrl
std
fnstcw
adc
in
test
out
lret
out
ret
jecxz
cs
out
cmpb
aam
call
cli
mov
decl
sub
icebp
cld
lret
sar
ds
xchg
icebp
jmp
out
loope
loope
fisttps
sar
fdivrl
call
out
std
repnz
loope
and
jecxz
out
out
mov
fldl
cli
int3
xor
jmp
fucomip
rcr
aas
test
ret
repz
fucomp
fldl
dec
nop
cmp
xor
in
in
fiaddl
cli
ret
jmp
xchg
orb
out
out
fucompp
ror
neg
int
test
and
cld
lock
in
cld
sbb
in
call
or
loopne
hlt
xlat
hlt
loopne
ffreep
jmp
call
enter
ljmp
out
std
loope
fxch
cmc
sar
out
mov
fisttpll
repnz
ror
fidivrs
xor
repnz
leave
sti
fucomip
out
orl
ror
xor
rcl
cli
int
mov
fmull
in
adcl
cmp
call
leave
lock
cmp
call
enter
fsub
mov
in
cmp
hlt
enter
neg
loope
ret
rcl
xchg
jmp
icebp
test
jmp
call
out
xor
xchg
mov
test
std
rcr
xor
sti
ret
sti
out
fdivrl
aam
roll
in
out
loop
out
nop
in
orl
lret
int3
fcmove
fcmovb
in
mov
jmp
addl
aad
ret
out
in
lret
rol
cli
iret
aad
shl
sbb
fmulp
int
in
je
movzbl
sub
movl
add
jmp
aas
aam
int3
aad
lret
fstl
sbb
mov
add
in
int
out
enter
iret
call
test
lds
mov
test
std
orl
sti
leave
fucomi
fdivr
fsub
ret
rcl
hlt
mov
loop
filds
mov
aas
int3
in
iret
repnz
ds
fdivp
cmp
shl
sti
loopne
jmp
ror
fdivp
xchg
out
ret
stc
bnd
lock
shl
clc
aam
neg
ror
aas
cld
sbb
lea
jmp
shl
aad
neg
cmp
cmc
repnz
xchg
and
leave
fucomi
loopne
fldl
int3
hlt
jmp
cld
hlt
cli
xlat
sub
ds
fsub
cmp
out
in
dec
in
fimull
out
idivl
sarl
repz
loope
mov
fldl
xchg
ljmp
cmp
cmpb
div
cmc
cmc
fdiv
addb
sti
cmc
rcll
stc
out
shr
icebp
clc
repz
sarl
clc
sar
xlat
rorb
cmp
out
lret
in
ljmp
fsubr
aaa
rol
xlat
repnz
in
mov
int3
loop
test
xchg
div
cmc
fldcw
cmp
repnz
shl
cmp
clc
fucomp
stc
fiaddl
in
xor
lret
xlat
jmp
aas
shr
lock
repnz
xlat
movl
stc
cmp
hlt
fmul
cmp
rolb
fcmovbe
cmp
lea
out
in
xlat
xor
cmp
xlat
cmp
rol
rol
aad
fxch
test
into
lret
call
jecxz
lret
out
fmul
aaa
add
ret
xlat
shl
std
fcomi
lret
out
mov
xor
xor
lock
jmp
out
test
fldl
mov
int3
lret
in
std
ss
jmp
adc
ret
jecxz
in
lea
repnz
ljmp
stc
aad
repz
roll
cmp
leave
out
xor
test
sarb
fcomp
rcr
loope
fucomp
jecxz
icebp
lock
movb
in
icebp
jmp
in
fucom
stc
sti
out
rcr
std
aam
fmul
int
fcomip
nop
out
out
xchg
call
rcl
enter
clc
aad
rol
mov
in
cld
out
ljmp
out
cli
xor
xor
into
loopne
out
aas
loope
loop
fiadds
out
in
out
xchg
rcl
xor
out
not
rcl
loope
std
cld
loopne
sar
clc
clc
loope
stc
in
repz
or
cmp
cmp
leave
shr
stc
xlat
cmp
fcmovb
imul
loopne
into
xchg
fsub
sti
into
cmp
aaa
rcr
cmc
not
cmc
cld
sar
in
xchg
lea
jecxz
cmc
cld
in
testb
add
xchg
jmp
lock
mov
mov
xor
in
out
aam
xor
call
rcl
aam
xchg
fadd
incl
sbb
into
in
cmp
fcmovne
imul
shr
ror
lds
in
mov
hlt
shrb
icebp
in
in
cmc
cld
hlt
stc
loop
test
loop
ror
loopne
testl
sub
loop
lret
leave
lock
cmp
jmp
xlat
aad
sar
fcmovne
jmp
mov
in
in
iret
jmp
faddl
icebp
rcr
aam
in
xchg
fucomip
loope
and
aad
cli
rol
in
aam
ds
std
sar
xlat
out
repnz
jecxz
xlat
loop
test
rorb
xor
in
out
xor
cmc
cmp
std
faddl
or
mov
xchg
loope
call
cmp
cmp
loopne
fcom
test
fmul
shr
adc
shll
xor
fmul
cmp
fcmovnbe
sar
cli
xchg
mov
add
add
shlb
adc
inc
mov
cmpl
jne
push
pushl
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
dec
mov
mov
mov
imul
jmp
lret
ror
fstp
fnstsw
out
jo
add
jle
add
loop
fadd
xchg
xchg
in
leave
in
jmp
fiaddl
mov
in
std
jmp
jmp
leave
faddl
fsub
hlt
hlt
loope
cld
xlat
ret
call
dec
mov
call
into
into
fcmovbe
idivb
aad
mul
aaa
roll
std
lret
out
fiadds
xor
lret
cmp
loopne
sti
fcomi
loop
xchg
leave
add
test
mov
test
rol
cld
repnz
hlt
repz
cmp
xlat
aad
ds
fcmovnb
cmp
in
aam
repnz
cmp
repz
out
enter
loopne
orl
in
call
aad
fucom
not
xlat
leave
orl
into
repz
in
enter
enter
stc
cld
repz
cld
loop
test
mov
jecxz
fst
nop
jecxz
loop
jmp
in
clc
xlat
div
loope
mul
xor
aad
sar
in
std
int3
xchg
out
clc
ss
ror
fldl2e
aam
clc
fdivp
cmp
test
xlat
call
into
mov
test
jmp
hlt
cmp
out
cmp
hlt
leave
fcomip
add
jecxz
fmull
aam
in
icebp
int3
enter
cmc
stc
lret
fsubr
fcomp
repnz
mov
out
leave
xchg
in
std
mov
shll
lret
hlt
in
cli
std
aas
lock
out
fcmovbe
aam
cli
out
std
imul
fimull
jmp
ror
fucomip
cmp
cmp
clc
cmp
out
sub
cld
shl
cld
mov
shrb
fdivs
enter
cmp
sarb
stc
addb
inc
fiadds
fst
rorb
out
int3
out
shr
lret
fucomp
in
shl
jmp
xchg
xor
hlt
hlt
out
shr
into
fucomp
int3
sti
fidivrs
loope
cld
ffreep
in
les
in
out
cmp
lret
std
iret
fdivr
out
stc
cmp
out
ret
cmp
enter
mov
fcmovnbe
loope
mov
ret
sub
lret
lret
iret
aam
iret
lock
hlt
shr
fadds
loopne
jecxz
test
mov
ljmp
cmp
jmp
cmpl
xchg
xchg
cli
das
dec
repz
fucomp
fninit
or
mov
and
leave
iret
test
out
sub
lret
fdivrl
repz
addb
mov
into
lret
aad
call
lock
xor
cli
flds
lret
cmp
lock
iret
aam
test
cmc
out
into
fdiv
repnz
loopne
in
cmp
rcl
in
cmp
int
xchg
lret
out
cld
fucomi
rcl
ret
fcomi
clc
xor
out
into
out
mov
in
xchg
mov
cmp
xor
jmp
cli
fmul
ror
shl
cmpl
jecxz
rcr
cld
fsub
mov
loopne
out
ljmp
out
cmp
icebp
cli
test
fsqrt
in
jmp
mov
fdivrs
int3
xor
repz
cmp
into
aam
cmp
cmpl
mov
mov
shl
lret
cmp
hlt
mul
repz
jmp
aad
in
aad
out
mul
f2xm1
fucom
orl
lret
jmp
jecxz
clc
stc
in
call
fsubr
jmp
test
nop
cld
in
xorb
xor
repnz
fdiv
cmp
cmc
jmp
add
fimull
loop
xchg
mul
cmc
ljmp
call
enter
ret
std
mov
loope
jmp
int
rol
rcr
aas
cmp
cmp
fdivr
aad
cld
out
test
jmp
in
jmp
xchg
loop
enter
out
jmp
ds
fcmovnb
repnz
enter
clc
jmp
in
rol
in
adc
cmc
mov
add
add
fwait
sbb
pusha
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
jmp
rcl
rcr
fst
xlat
xchg
sbb
mov
loop
jg
roll
jle
cli
xor
xor
icebp
fnclex
int
cmp
and
shl
xchg
nop
int
div
in
ss
aam
fdivp
clc
xlat
cmp
sar
xchg
aas
jecxz
std
iret
repnz
aad
out
fmul
cmp
lret
jmp
ds
loopne
aam
aad
cld
out
int3
mov
in
fstl
out
sub
cmc
fmul
and
std
call
call
cli
cli
loope
into
in
jecxz
sub
cmp
out
ljmp
aas
cli
ret
loop
enter
call
shl
cmc
hlt
xor
ljmp
loope
lock
testl
xor
xor
cmp
fidivs
into
cmp
stc
clc
enter
fimuls
mov
shl
repz
in
shlb
fcmovb
sti
ror
testb
xchg
out
nop
mov
xor
cmp
aam
cmc
cmp
cld
repz
cli
lock
cmc
jmp
int3
in
jmp
out
int
ljmp
int3
aas
test
xlat
cmp
cmc
into
sub
mov
lock
xor
out
cmp
int3
ds
loope
stc
loopne
repz
mov
repnz
xor
call
xor
ret
in
test
in
fmul
rolb
aaa
divb
int
cmp
xlat
cmp
addl
neg
fdivr
mov
in
xor
aam
jmp
sti
call
into
aad
clc
cmp
inc
lret
ljmp
rcl
test
xor
mul
repz
jmp
aam
repnz
lock
cmp
lock
icebp
jecxz
push
shl
xor
repnz
repnz
loope
sti
idiv
loop
ret
cli
cmc
testb
dec
popl
out
std
out
shl
cli
aam
hlt
not
repnz
ljmp
out
orb
xor
int3
lret
xlat
sar
cmc
sti
mov
jecxz
ljmp
mov
out
out
fsubrs
xor
cmp
in
fchs
rolb
add
out
cli
fsub
mov
out
in
into
repnz
in
xor
roll
ljmp
in
out
xchg
stc
fpatan
hlt
sarl
cmpl
cmp
int3
rolb
lret
mov
repnz
jmp
in
cmp
cmp
test
ftst
cmp
fdivr
out
sti
fists
pop
ret
int
cmp
shl
neg
jmp
idiv
jecxz
mov
in
cmp
loopne,pt
xor
sar
ret
int3
loopne
jecxz
int3
fldl
clc
stc
xor
loope
rcr
repnz
jecxz
sbb
int
shr
lock
cmp
cmp
or
ret
shl
sti
sar
fdivrp
cli
in
lock
xlat
rcl
aad
jmp
icebp
std
inc
fyl2x
jmp
incb
mov
xor
rcl
lret
hlt
cli
std
test
roll
in
loope
fucomp
loope
lret
test
hlt
cmp
fdiv
fsubr
into
int3
aas
shl
ljmp
fimull
jmp
fpatan
lret
in
leave
cmc
fidivrs
aad
test
loopne
rcl
jecxz
jecxz
cmp
cld
cmp
std
leave
test
cli
shl
fadds
fcmovne
nop
ljmp
lret
leave
jmp
icebp
fdivrs
lret
leave
loope
out
jecxz
shl
shr
jmp
sub
out
fisttpll
into
repnz
repz
xor
sti
std
call
shl
out
sar
fcmovnb
fdivp
in
out
lret
std
mov
lret
in
leave
divl
fscale
out
std
sbb
shl
incb
inc
lock
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
jmp
rcl
mov
aad
sti
adc
mov
jg
roll
jle
cld
lock
mul
clc
xor
shl
cld
aad
sarl
or
in
rcll
icebp
out
loop
into
stc
xor
icebp
fsub
icebp
faddl
out
call
xchg
out
out
das
fxch
xlat
cmp
in
fsub
addb
jmp
test
xchg
jmp
cmp
mul
into
xor
lock
repnz
fucomp
repnz
in
in
or
nop
mov
cmp
cmc
lret
cmc
int
enter
loopne
xor
icebp
lock
xchg
test
in
fcos
lret
mov
out
out
jmp
iret
cmp
sti
into
cmp
loope
jecxz
loopne
ljmp
cli
cmc
iret
stc
cmp
int3
idivb
icebp
icebp
std
fld
sbb
in
nop
fsubr
lret
nop
repz
jecxz
iret
aam
std
jmp
xor
fcmovb
aam
clc
fsubr
mov
notb
enter
call
aaa
cli
std
ret
in
stc
int3
orb
out
divb
lock
lock
leave
into
fdivr
in
out
cmp
out
sbb
jmp
enter
cmp
idivl
fcomp
test
enter
or
xchg
lret
repz
shrl
fcomi
icebp
xlat
fmul
fidivrs
in
out
fcmovnb
fldl
fisttpl
jmp
leave
ret
vpaddb
leave
repz
loope
cmp
lock
testb
icebp
mov
hlt
call
cmc
out
out
into
fdivrs
test
jecxz
rorb
fucomip
in
xchg
mov
out
ror
shlb
sti
cli
rcr
repnz
loope
mov
fsub
jmp
out
mov
stc
enter
in
xor
xor
cmp
ss
aaa
filds
mov
mov
sti
into
xor
mul
ss
sti
std
cmp
out
add
out
cli
leave
fisttpll
cmc
int
cmc
xor
sti
sti
loop
fcom
out
loope
sti
out
fdivr
xchg
mov
xor
iret
out
repz
fst
in
cld
int3
test
xchg
std
test
mov
incb
call
xor
repnz
ds
cli
rcl
cmp
fcomi
int3
mul
addl
xor
int
into
sti
cmp
aas
fidivrl
aad
cmc
icebp
incl
leave
rcr
ficoms
fdivr
cmp
ljmp
sarl
cli
in
test
or
icebp
aaa
int3
enter
repnz
jmp
in
ret
cli
mov
ljmp
xchg
into
cmp
idiv
out
fldl
fptan
fildl
roll
out
int3
xor
ljmp
jecxz,pt
cld
xlat
loope
xchg
ljmp
mov
repz
mov
xlat
cmp
iret
ljmp
cld
ret
repz
cmc
ljmp
cli
out
and
lock
fistpll
div
rcr
shr
into
aas
not
fmull
in
fucomi
mov
out
out
shl
aad
into
aaa
cmp
cmp
xor
mov
mov
lock
cld
xchg
std
lock
lret
repnz
lret
repnz
iret
aas
ret
enter
lret
xor
repz
int3
test
loopne
mov
orb
stc
cli
hlt
cmc
iret
shrl
xor
sti
lret
cmp
cmp
clc
repnz
in
clc
hlt
cmp
jmp
orl
aam
in
xor
out
cli
fcomip
cli
out
test
mov
int
xchg
std
mov
xlat
aaa
lret
cmp
enter
sarb
xchg
out
aad
in
sti
loope
loop
fcoml
out
shll
aam
aad
jmp
hlt
fisttpll
test
out
cld
jmp
loop
icebp
ror
xor
sti
int3
mov
xor
mov
add
cmp
jmp
rol
lret
fstp
aad
dec
jns
test
mov
jle
add
fxch
ret
shl
aad
call
int
lds
aam
das
xor
out
ret
int3
std
std
icebp
rcl
ds
ret
fcmovnu
flds
lret
xchg
jmp
in
in
ret
cmp
aaa
sti
neg
cmp
cmp
cmp
addb
flds
rol
out
in
xor
fsubrp
shll
cmp
in
testl
sub
icebp
in
hlt
out
sub
ss
jmp
aam
cmp
rcr
test
repz
in
hlt
nop
test
call
xlat
xlat
lret
xor
addb
loop
std
int3
shr
in
out
jmp
aad
enter
fdiv
cmp
cmp
hlt
stc
lds
mov
loop
ljmp
in
ret
lock
out
sar
cmp
rcl
cld
add
adc
fsubp
test
loop
into
xchg
out
clc
out
in
out
cmc
test
ret
cmp
fadds
in
lret
nop
repnz
loop
call
fdivr
cmp
call
int3
cmp
aad
loop
rorb
out
cli
ljmp
das
out
jmp
ss
out
stc
clc
xor
loopne
xchg
fucomp
xchg
xchg
xchg
shl
int
loop
xor
out
aas
ds
loope
rcr
adc
fimull
shl
out
loope
xchg
shr
out
cli
out
neg
rcr
clc
cmp
loopne
fneni(8087
cmp
mov
call
out
cmp
int
repz
cli
xor
add
cli
icebp
ret
loopne
cli
mov
test
fmul
sub
lret
in
out
repnz
cmp
ret
hlt
mov
stc
loope
cld
into
xchg
cld
shr
aam
cmp
int
ljmp
xor
cmp
ljmp
cld
test
xchg
xor
sti
enter
clc
rcr
fadd
rcr
fcmovnu
mov
jecxz
fsubp
call
xchg
shl
into
leave
rcl
repz
in
cld
sar
out
cmc
fsub
rorl
mov
call
jecxz
lret
out
leave
aaa
cmp
aas
clc
loope
aas
sub
jmp
repnz
repz
cmp
shl
clc
iret
fadds
idiv
in
int3
mov
ret
sar
out
into
aaa
fldpi
ret
in
out
rcr
out
call
icebp
enter
call
or
fstp
not
shl
loopne
loope
mov
inc
xor
icebp
iret
aaa
aad
cmpb
sti
std
cmc
aam
roll
call
xchg
xchg
loopne
test
call
lret
xlat
incl
test
sti
xchg
xchg
incb
jmp
loop
in
out
cmp
fstpt
cmp
rcr
xchg
fmul
std
in
into
jmp
test
repnz
fdiv
shr
xor
rol
loope
clc
xchg
xchg
mov
rcr
int3
sub
clc
out
xor
out
loop
cmp
push
fcmovb
ret
fcomp
sti
jmp
ljmp
mov
leave
les
xor
fcmovne
ljmp
adc
cld
orb
in
cmc
lret
int3
stc
xlat
iret
clc
aad
sti
fsubrp
aas
std
cld
cmp
mov
mov
out
mov
fstp
and
rol
ss
enter
cmp
icebp
fucompp
out
or
xchg
aam
mov
xor
fadd
enter
std
cli
int3
iret
loopne
xchg
in
sar
les
enter
xchg
out
aad
in
rcr
jmp
aas
test
loop
decb
jecxz
std
adcb
in
div
lock
std
in
hlt
repnz
sti
jmp
aas
inc
xchg
jmp
sti
xchg
repnz
rol
out
vpsadbw
aad
fidivs
out
fcmovu
out
test
mov
or
loopne
out
hlt
loopne
ljmp
out
hlt
fcmovnu
cld
clc
cmc
xor
sti
in
or
je
mov
xor
add
jmp
iret
aad
aad
aad
aad
push
push
mov
fildl
jle
add
sub
rol
cmp
xor
repnz
repz
stc
ret
addb
fsubrp
or
cli
xor
stc
cmp
cmp
cmp
cmp
vpaddsb
lds
lret
xchg
loope
ror
cs
cmp
cmp
testl
xchg
in
mov
hlt
clc
shl
xor
fcomip
shr
fmul
clc
hlt
mov
jmp
cmc
test
std
aam
ds
cmp
std
out
fldl
sbb
jmp
out
in
xchg
loop
sub
jecxz
std
out
fildl
lock
leave
dec
int
mov
icebp
rorb
jecxz
jecxz
mov
lret
hlt
add
loop
ret
int3
idiv
int
sti
shr
fcomip
aad
repz
cmc
dec
aad
icebp
test
idivl
fdivr
flds
int
xor
repz
out
cmp
rcr
clc
shll
in
fcom
xlat
sti
xlat
in
jmp
xor
test
lds
aaa
leave
out
lret
cmp
rolb
std
jmp
sti
into
mov
fdivs
ror
std
cmp
jmp
fadd
ds
testl
call
out
cs
sarb
aad
mov
fadd
leave
testl
int3
fucomip
icebp
xor
shll
repz
loope
jecxz
in
in
rcl
cmc
ljmp
fisttpll
cmc
cli
fcomp
ror
cld
cmc
cli
std
hlt
les
ret
aad
mov
xchg
mov
rcl
not
enter
iret
shlb
loop
shl
in
loope
aad
mov
stc
fstp
out
out
out
int
in
cmp
idiv
cmp
out
loop
ret
shl
std
mov
icebp
shr
into
jecxz
in
xor
repnz
shl
cmp
cmp
cli
fdiv
fsub
ljmp
nop
ljmp
into
ss
iret
fmul
jecxz
fdiv
cmp
in
ret
aad
mov
cmp
das
in
cli
cmp
stc
sti
cmp
cmp
fldl
decl
clc
lret
jmp
cmc
ljmp
cmc
std
cmp
aas
cmp
hlt
sbb
out
mov
out
ljmp
fsub
in
fsubr
sarb
sbb
ret
orb
aam
in
out
cmp
cld
int
cmp
hlt
cmp
out
jecxz
push
mov
out
cli
incl
rcr
jmp
sub
repz
loope
cmp
sar
sti
stc
hlt
mov
fisttps
mov
xor
ret
out
lret
cmc
fcmovnbe
fidivrs
ret
hlt
hlt
lret
icebp
lret
xchg
xchg
nop
aad
test
ss
fucom
cli
lret
shl
shl
jmp
jmp
test
lock
stc
repz
or
int
les
ret
loopne
leave
incl
loope
cmc
das
aaa
sar
shl
rcl
rolb
xor
out
lret
lock
mov
ror
shr
xor
icebp
in
aam
leave
aam
iret
lock
cmp
stc
loop
nop
int3
mov
ret
hlt
in
cmp
fdivr
ret
or
xchg
mov
cld
jecxz
in
fsubrp
jmp
out
int3
lock
fucom
jmp
int3
cmp
loopne
xlat
faddp
and
lret
enter
out
out
stc
jmp
repz
std
hlt
hlt
loopne
faddp
rcl
rcr
jmp
mov
ret
cli
shl
incl
sti
ss
jmp
rol
loope
vpmuludq
fcmovu
xor
call
ret
cld
cli
fcomi
aam
xlat
push
test
cmp
aas
aam
jmp
call
adc
out
aad
into
cmc
aad
out
ljmp
test
aad
jmp
fnsetpm(287
aam
sub
ss
aam
hlt
out
rol
decb
fsubs
jge
mov
xor
add
jmp
ror
rcl
mov
cmp
inc
jg
roll
jle
clc
stc
mov
mov
out
incb
in
test
repz
cld
cmp
test
mov
mov
ljmp
cld
cmc
jmp
fstp
fld
sbb
ret
sti
xchg
cmp
loopne
in
sub
cmp
cmp
sti
shl
cld
mov
fucomip
test
in
ljmp
xor
cmp
ds
int3
jecxz
cmp
stc
movl
or
neg
in
enter
iret
rol
fsub
flds
testl
leave
shr
aaa
rol
cmp
loop
stc
sub
lret
aad
shl
out
in
mov
xor
cli
fxch
lret
fnclex
rcl
int3
fsub
addl
enter
int
ljmp
sti
enter
aad
cmp
addl
neg
mov
icebp
xchg
jecxz
neg
cmp
fnop
cmc
aaa
jecxz
int
icebp
aad
jecxz
in
and
loopne
mov
and
stc
xor
cmc
repnz
cld
int3
adc
imul
loope
stc
xchg
mov
xchg
lock
idiv
int
fnstcw
rcl
shr
cmc
out
fmull
in
jmp
enter
xor
lret
lret
out
cmp
faddp
out
xchg
filds
mov
out
sti
rcr
fst
in
clc
iret
loope
icebp
fildl
fmulp
test
and
in
loop
xor
fcmove
shl
repz
inc
fsincos
aad
mov
jmp
in
loope
dec
test
in
das
loop
in
shr
aaa
stc
cld
ret
icebp
shl
cli
cld
std
fcmovne
call
xchg
lds
sarl
into
fstp
lret
fdiv
ret
ret
enter
movl
xor
in
in
int3
leave
dec
sti
hlt
loop
out
test
incl
xchg
or
xor
repz
sti
hlt
sar
sarl
addl
ljmp
loope
icebp
in
cs
stc
stc
shr
ljmp
rcl
fiaddl
std
stc
lret
xchg
xor
lock
hlt
repz
ret
div
addb
fucomip
fst
mov
jmp
sar
cmc
faddl
hlt
clc
out
ret
xchg
aam
iret
sub
in
xor
rcl
jmp
cmp
shl
ret
sar
in
test
fmul
test
incl
cmc
aad
fcomp
clc
into
adc
rcl
in
xchg
cmp
jecxz
in
in
call
std
fdivrl
adc
fidivrl
xchg
ret
in
addl
icebp
aam
cmp
fsubr
iret
icebp
testl
xor
lock
out
out
fidivl
rcr
cmc
int3
ror
std
xlat
aam
testl
xchg
xchg
test
out
cmp
cmp
call
fdivrl
ljmp
leave
int
xchg
lret
xchg
int3
ret
repz
ljmp
xor
std
xlat
add
aad
xlat
mov
test
fnop
icebp
ss
aas
lret
loopne
mov
aas
fildl
mov
ror
ljmp
in
aas
in
lret
enter
and
or
leave
fxch
hlt
leave
call
lret
iret
out
loop
fiaddl
loope
rcll
out
in
cli
bnd
xor
ljmp
out
mov
repz
fldl
lret
xchg
jmp
xor
xor
lret
and
xlat
loope
cli
inc
out
xlat
loopne
leave
mov
out
enter
out
leave
out
cld
faddp
ret
loop
shl
cmp
les
in
test
mov
out
cs
movzwl
mov
xor
lea
add
jmp
rcl
aam
sarb
xchg
sbb
adcl
dec
jg
roll
jle
aam
xor
out
fdivl
adc
ret
icebp
in
fmuls
xchg
jmp
xlat
leave
fcmovbe
ss
leave
xlat
fcmovbe
out
fdivrp
rcr
enter
test
jmp
in
leave
into
in
hlt
sarl
fucomi
fdivp
lock
mul
and
xchg
nop
call
into
into
out
aam
int
out
xor
shl
aaa
sti
in
fiadds
loope
leave
push
rcr
ss
xor
ljmp
cli
stc
and
cmp
ret
incl
int3
jmp
out
fld
std
test
aas
faddl
aad
sti
imul
out
call
vaddsubps
cmp
leave
jmp
fmul
test
mov
sar
in
popl
loop
ror
ljmp
in
add
clc
out
imul
out
in
fsubr
icebp
xchg
xchg
mov
sub
hlt
cmc
ror
idivl
in
aas
cmp
adc
in
ret
fadds
cli
rorl
call
xor
in
rcr
fmuls
xlat
stc
orb
fmul
ljmp
out
loopne
shl
std
rorl
xchg
aad
int
fnsetpm(287
ljmp
std
shl
lock
mov
fsub
clc
mov
loopne
out
icebp
jecxz
out
leave
fscale
icebp
call
in
cmc
or
test
mov
cmp
hlt
loopne
repnz
test
in
mov
in
call
sub
iret
jmp
icebp
iret
cmp
neg
mov
hlt
xchg
addl
xor
aam
fnstcw
frndint
cmp
ds
aad
fscale
cld
mov
fucomip
lret
nop
out
ret
int3
jmp
cmp
aam
xor
clc
ror
xchg
loop
in
fcmovne
xchg
xchg
mov
aam
in
icebp
fdivrp
rcr
out
out
addl
fucomip
call
fprem
in
xor
lock
cmp
cmp
test
aas
fdivp
mov
orb
repz
bnd
out
leave
xor
cmpb
filds
or
out
jecxz
icebp
out
in
hlt
jecxz
xor
icebp
clc
fdivp
out
shl
xlat
fsub
sar
aam
mov
loopne
std
int3
in
out
mov
shl
cmp
cld
fldl2e
ds
not
out
sar
rolb
sti
fcmovne
repnz
xchg
ljmp
int3
aas
int3
clc
lock
ret
repz
aas
out
out
out
sub
repz
cmp
std
in
ds
rcl
shl
sbb
incl
into
fdivp
xor
xlat
iret
int
sti
rol
cmpb
out
jecxz
jecxz
loop
into
loop
in
mov
repz
shlb
xor
loopne
fcom
sarb
cmp
out
faddl
shl
jecxz
clc
idivb
cli
cld
sar
fdivr
repz
test
xchg
int
leave
int
loopne
xor
iret
cmc
fsub
cmp
hlt
aam
test
adc
test
fmul
neg
imul
decl
fdiv
shrb
xlat
rcr
int
testb
imul
leave
in
mul
out
iret
rolb
xor
shll
rcl
out
fcom
repz
aas
xchg
cli
lret
mov
ljmp
cli
fmul
std
icebp
lock
fcmovnbe
fxch
call
call
test
repz
icebp
iret
call
xor
loope
cmp
clc
aaa
fldl
clc
mov
addb
sub
in
iret
jmp
std
int
cmp
sti
call
lret
loopne
mov
icebp
out
in
sar
std
cmp
rol
rcl
movl
sbb
xchg
xor
fldcw
addb
addl
push
clc
mov
jmp
rcl
int
int
fstl
dec
push
aam
jg
roll
jle
neg
loope
fisttps
sub
aaa
int3
xor
int3
in
iret
in
call
mov
in
in
lock
repz
hlt
out
aam
fdivr
into
in
xor
loope
testl
lret
out
lds
xlat
out
fdiv
fcmovu
cld
std
repz
out
xchg
leave
jmp
fnstsw
leave
std
icebp
in
leave
in
aad
in
cmp
cld
out
aam
iret
cld
aas
or
stc
test
xchg
out
rol
lret
out
aas
repnz
rcl
stc
iret
ds
lds
testl
sub
aad
fnop
cmp
add
in
lret
stc
mov
fcmove
out
out
xchg
repnz
out
int
xor
sti
loope
test
clc
mov
sti
rolb
in
lock
fucom
std
shl
adc
clc
clc
xchg
cld
sti
aam
xor
rcr
cmp
shl
loope
div
sti
fcmovb
fdiv
mov
lea
out
hlt
iret
push
sar
ret
cmp
aam
aaa
fxch
stc
shl
rcl
jmp
mov
in
fsub
sarl
enter
out
cld
in
ret
enter
test
filds
xchg
jmp
xor
idiv
out
into
repnz
int3
xlat
out
out
cli
push
fucomp
sti
jmp
fildl
aas
shlb
int
enter
testb
in
rolb
in
xchg
idivb
repz
xor
fsub
cmpl
loope
mov
out
incb
xor
int
ss
fmulp
jmp
cmp
cmp
clc
stc
fld
loop
jmp
xchg
xchg
mov
loope
int
lock
aaa
in
sti
clc
aas
cmc
out
xlat
enter
in
call
rcr
xor
cmp
repz
aas
ror
lret
fdivr
cmp
out
clc
lock
in
mov
out
lret
out
aam
out
fptan
lock
stc
mov
cli
ffree
std
xchg
mov
cmc
shl
xor
cmp
lret
div
icebp
std
in
hlt
cmp
fildl
in
mov
mov
stc
out
aaa
ljmp
incl
fsubr
fcmovnu
sub
and
ret
vpmaddwd
out
lret
shl
into
loope
jecxz
rolb
fldl2t
std
mov
xchg
cmc
out
jecxz
lret
ljmp
sti
ret
std
ljmp
in
repz
into
in
cs
in
int
xor
faddl
xlat
stc
call
mov
mov
xlat
aaa
jecxz
xor
shr
idivb
int
hlt
aas
rcr
xlat
aad
fiadds
mov
rcr
rcl
out
aam
repz
loope
in
adc
in
in
fisttpll
xchg
in
shl
clc
out
xor
cmp
cmp
rol
ret
cld
mov
fmulp
xchg
lock
mov
icebp
in
cmp
lock
cli
fsubp
hlt
fdiv
fnstcw
xchg
fcmovnu
xchg
jmp
jecxz
ljmp
not
int
lret
shr
in
loope
xlat
icebp
addb
in
in
mov
loope
ror
lret
fdivrl
in
loopne
cmp
sbb
test
fucomi
ffree
loope
xchg
loopne
in
loopne
rcl
cmc
cmp
cmp
rcl
cmp
fcomi
loopne
rol
filds
mov
lret
loopne
aam
lock
rcl
cmp
in
xlat
test
in
mov
out
int
in
repnz
jmp
cli
leave
cmp
in
adc
clc
stc
or
lock
hlt
xlat
xor
lret
cmp
hlt
int3
loopne
loopne
loopne
shl
loop
in
out
out
out
lds
ljmp
call
repnz
cmp
test
fdivrp
xchg
fcmovne
in
leave
ljmp
cmp
roll
imul
jmp
lret
ret
enter
fcmovnu
dec
lcall
cmpsl
push
jg
roll
jle
aas
ljmp
loopne
cli
cmc
aad
cld
loop
xchg
fucom
mov
out
in
aam
into
shl
fdiv
into
aam
out
cmp
hlt
ds
fcmovbe
cmc
jecxz
enter
out
jecxz
hlt
lret
into
sar
lds
imul
xor
sar
fsubr
ret
or
cld
in
or
fcmovnu
int3
fcmovbe
loope
hlt
cmp
ret
idivb
cli
in
xchg
cmp
rcr
sbb
sti
cmp
adc
and
idiv
cli
loop
fprem1
fcomp
ljmp
lock
lock
jecxz
cli
fcmovu
into
into
rcr
rcr
test
aas
loopne
jmp
mov
shr
repnz
clc
clc
cmp
call
repz
xchg
out
int
jmp
int3
xor
ljmp
aam
stc
repz
aad
enter
fucomp
mov
loopne
xor
out
cld
out
stc
cli
int
flds
lock
mov
jmp
movb
in
ljmp
fidivrl
loope
cmp
aas
xchg
fiadds
incl
imul
int3
shr
aam
int
leave
cmp
fld
in
xlat
lds
stc
out
std
mov
lret
in
in
repnz
fsub
out
sti
div
hlt
aam
jecxz
out
sub
movb
in
icebp
int
fchs
cmc
lock
sti
xlat
shl
leave
ret
xlat
fadds
das
ss
aad
shr
into
call
test
out
fsubp
decb
xchg
mul
das
xor
fcmovnu
cmp
cli
repz
aad
out
xlat
test
repz
in
fsub
int
mov
ret
out
cmp
fcom
ljmp
call
mov
out
jmp
out
mov
ret
xor
icebp
cmp
aam
xchg
mul
in
movl
jecxz
in
std
cli
ds
sti
ret
rcr
repnz
lret
iret
and
std
test
nop
cmc
das
div
fcmovne
aad
repnz
std
fidivl
imul
add
out
jmp
loope
loope
jmp
shlb
lret
lret
int3
fcomi
cmp
cmc
into
fdivrp
test
in
or
aam
xlat
out
mov
ror
in
jmp
out
aaa
enter
shl
ret
in
enter
sbb
lret
jmp
icebp
std
aam
lret
call
ds
cmp
mov
lret
addb
loopne
iret
enter
test
loope,pt
clc
mov
xchg
inc
nop
leave
orb
xor
cmp
ret
jmp
enter
iret
test
xlat
aam
in
int
lret
cmp
rcl
filds
test
mov
cli
call
out
out
int3
out
ds
jmp
aaa
roll
cld
out
int
loopne
icebp
icebp
xor
jmp
sar
fcmovnbe
cmp
rcr
fidivrs
cmp
fsubrp
rorb
idiv
divl
jmp
ss
sti
call
aas
repnz
rorl
iret
addb
xor
enter
cmp
cld
fst
xor
lock
adc
call
in
loop
repz
lock
ret
int3
in
fnsave
cmp
ror
cmp
lret
int3
mov
fyl2x
in
jmp
cmc
loope
les
out
int
call
aad
repnz
loop
rolb
fsubrp
in
repnz
xlat
xor
idiv
fsub
cmc
jmp
ljmp
in
lock
xor
shl
xor
fdivp
out
inc
in
enter
out
iret
xchg
lret
int3
xlat
jmp
mov
or
cmp
sar
out
ret
shr
fsub
in
xchg
std
mov
mov
repnz
xor
jmp
hlt
fadds
ret
cli
lds
jmp
lret
mov
fildl
adc
jp
jg
roll
jle
lea
loop
fcmovu
hlt
fidivl
cld
repz
ss
mul
xlat
in
mov
clc
int
repz
mul
shlb
aam
sub
ss
shl
not
out
cli
fdivp
stc
jecxz
into
lret
xchg
call
repz
ss
ss
std
ljmp
sbb
out
out
jmp
in
fxch
loope
cmp
cmp
aad
lret
fsts
xchg
xchg
into
lock
aaa
iret
in
incl
repz
mov
test
xchg
lock
ror
loop
aam
xor
int3
fdivr
push
shl
cld
loope
fiadds
iret
mov
cmc
out
aam
repz
cld
cmp
clc
out
ljmp
mov
addb
lret
xchg
aam
xchg
aam
xor
icebp
fdivr
clc
loope
cli
addb
call
mov
loope
out
aad
in
out
ds
repz
shl
aam
fiaddl
in
int
ss
stc
call
aad
fcmovnu
shl
loopne
cmp
nop
fdivrp
mov
in
loop
shl
xor
in
testb
ds
xchg
fdivrl
loopne
cmp
in
mov
cli
repz
ljmp
test
ret
loopne
std
jmp
enter
repnz
int3
fsubr
ds
shl
fdiv
stc
ret
loopne
sbb
cli
fmul
int3
fucom
leave
iret
in
in
shr
call
ret
stc
in
test
call
aam
shl
fsubr
out
out
cld
cmp
repz
fildl
cmc
aas
in
fst
xlat
jmp
lret
into
lret
out
ss
shrl
xor
shl
into
aam
sti
shl
out
into
jmp
in
lret
in
xorl
lock
xor
roll
out
adc
jecxz
loop
int
xchg
int3
jecxz
ror
enter
aaa
fneni(8087
out
fsqrt
xor
testl
add
xlat
sar
lret
iret
aam
fldln2
aad
into
fdivrp
ffreep
leave
mov
loopne
sti
mov
mov
out
inc
call
leave
cmp
aaa
clc
cmp
cmp
cli
hlt
out
rolb
int3
out
rcll
idivl
shlb
inc
iret
shr
cmp
loop
aas
int3
test
fmul
lds
call
into
shr
loope
bnd
ret
repnz
mov
loop
xchg
mov
in
ror
out
int3
leave
loopne
std
xor
test
jecxz
loopne
test
ljmp
out
sub
jmp
aad
fxtract
rcl
cmc
shl
enter
ljmp
hlt
shl
fidivl
xor
stc
addl
sub
int
nop
out
incb
cmc
fcmovu
ss
lret
cmp
iret
in
cmp
test
out
loopne
ljmp
cmp
in
jmp
sti
test
sti
iret
jecxz
aam
and
ljmp
in
test
in
repnz
xor
icebp
xlat
in
lret
jmp
in
loope
hlt
jmp
leave
leave
jecxz
std
call
ds
test
cli
in
enter
xchg
fcomip
cmp
les
into
ror
shl
xor
aam
in
test
cmp
into
fdivr
cmp
shl
jecxz
cmp
in
mov
jmp
xchg
roll
jmp
cmp
dec
and
jecxz
sti
or
out
stc
addl
fdivs
enter
ss
lret
icebp
std
std
mov
xor
loopne
out
icebp
fcomi
addb
stc
sar
leave
loopne
fcom
hlt
roll
lret
stc
out
jmp
hlt
cmc
repnz
icebp
rcr
rcr
shl
inc
in
jmp
mov
mov
jmp
int3
int
fstp
fstp
mov
in
cmp
int
jg
roll
jle
cmp
sti
aam
clc
fisttps
ljmp
repz
xor
cmpl
cld
hlt
fcomp
test
call
into
mov
das
cmp
repnz
repz
cmc
stc
stc
repnz
fisttps
and
ret
jecxz
int
in
jmp
aad
sar
repnz
xchg
std
xchg
imul
cs
call
out
cmp
idiv
clc
faddp
faddp
vpsubd
in
fucomip
in
in
leave
out
jecxz
xor
lock
loopne
cmpl
sarb
loop
fsubr
lret
in
fldl2t
cmc
ljmp
ds
xor
ds
cmp
roll
out
leave
loopne
xchg
iret
int3
icebp
repnz
vpsrlw
into
sar
std
and
fadd
leave
mov
test
frndint
mov
loopne
cli
xor
cmc
div
out
cmp
cmp
fsubp
fcmovu
test
leave
mov
fsub
xchg
xchg
in
shl
ret
fucomp
jmp
fsub
fcomi
loopne
stc
in
loopne
ret
std
int3
orl
test
xor
cmc
cmp
in
aam
cli
int
aam
sti
aam
xchg
enter
mov
mov
ror
shl
cmp
aad
clc
sub
loop
test
sti
fisttps
ljmp
in
xor
in
fldl2e
in
iret
call
clc
ds
aam
rol
loopne
into
std
mov
cld
aam
inc
in
aam
cmp
lret
icebp
int3
fdivrs
out
xor
cli
cmc
loopne
out
mov
cmc
out
out
lret
xor
xor
clc
shl
aam
idivl
fiaddl
in
call
iret
lret
fadd
out
enter
cmp
stc
leave
loopne
jmp
fimull
repz
repz
sar
stc
fldlg2
int
cmp
out
loopne
fmulp
shr
mov
jecxz
stc
cmp
out
cmp
lret
std
in
mul
fdivp
lock
xchg
fcomip
xor
ror
ffree
loope
jecxz
sub
rol
leave
loopne
fmuls
mov
fprem
aaa
lock
leave
ror
rcl
ret
out
loope
in
sbb
or
loope
jecxz
aam
frndint
sarb
flds
test
fcmovnu
out
int3
and
call
fdiv
lret
cmp
lret
out
cmp
in
mov
sbb
fdivp
mov
jmp
out
xor
jmp
lret
cmp
aad
rol
mov
sbb
std
fimuls
div
rcl
rcr
fucomi
repz
cmp
mul
testl
in
out
out
fnstenv
hlt
neg
repnz
fsubr
loopne
test
xlat
ret
ret
cmp
call
loopne
xchg
fxch
xlat
mov
fmulp
cld
icebp
not
xchg
neg
jecxz
out
test
xor
repnz
rcl
int3
jmp
int
idiv
aad
ffree
clc
rol
cli
leave
fsubp
out
loop
int3
sub
lock
in
jmp
fcomp
cmp
fimull
in
sub
xchg
xchg
test
iret
xlat
in
in
ds
sti
fdivrs
sarl
fsub
in
out
mov
out
aam
lret
icebp
jmp
aaa
sar
fabs
cmpl
shl
icebp
mov
std
lret
sti
icebp
or
lret
imul
fstpt
rcr
int3
loope
test
cld
aam
shr
clc
sub
jmp
in
jecxz
xor
iret
out
in
fiadds
cmc
rol
shl
out
cmc
mov
loopne
xor
fdiv
and
xlat
div
fxch
cmc
aam
idivb
aas
lock
enter
fcos
ror
loop
int3
xlat
loope
into
fcom
cld
ffree
int3
fcom
icebp
ret
aas
stc
in
flds
mov
int3
in
enter
rcl
cmp
fstp
fstp
test
sub
clc
mov
cld
ror
xchg
out
xor
cmp
je
mov
jmp
leave
rcl
ret
ffree
arpl
lea
mov
add
ret
xor
loopne
int
jecxz
mov
stc
fsubp
int
fcom
jecxz
jmp
hlt
repnz
aad
std
cmp
xlat
cmp
ret
bnd
mov
mov
fsub
enter
xchg
in
ljmp
xor
ds
ret
enter
out
repnz
aam
int
fdivrs
out
xor
clc
aaa
shr
div
loopne
shr
loop
in
nop
jecxz
lret
loop
jmp
rcr
aas
and
cld
fmuls
test
addb
iret
loope
cmp
ss
out
cmp
fucomip
fadd
jecxz
repz
fucomip
clc
std
fisttps
hlt
cmc
clc
xor
in
aaa
out
fprem1
cli
test
xchg
out
repz
std
out
cmp
jmp
shll
leave
icebp
fcmovnbe
in
iret
icebp
idivb
out
fsub
in
cli
fucom
cld
lret
testl
xor
clc
neg
cmp
shl
cli
ret
std
std
cld
sti
mov
out
mov
loopne
test
fdivrl
jmp
fiaddl
mov
out
xchg
not
in
jecxz
std
cmp
in
rcr
out
rcl
cmp
cmc
vpsubq
repnz
in
aad
in
rcl
leave
out
repnz
into
ret
xchg
in
test
clc
lea
xchg
test
repz
leave
aas
shl
stc
clc
hlt
div
out
test
iret
xchg
xor
fcmove
xor
ror
leave
aas
into
sti
fiadds
idiv
int
fsts
jmp
xor
in
xor
bnd
cmc
fdivrs
aas
fdivrp
sti
orb
out
out
xchg
out
loop
xlat
jecxz
fucomi
int
leave
fcomip
clc
icebp
cmp
ret
fildl
stc
addb
ss
int
lret
shl
sar
shl
mov
std
jmp
mov
mov
in
lret
int
cmp
in
int3
shl
aas
fiadds
iret
ljmp
repnz
loop
shl
int
imul
loop
div
out
fsub
cli
xlat
sti
int3
jmp
fcomi
xchg
xchg
repz
xlat
cmc
fcmovu
fdiv
rcr
repz
mov
mov
out
mov
in
leave
cmc
cmp
sti
stc
xlat
xor
ror
loop
mov
xchg
lret
mov
iret
xchg
xor
call
cmpb
int3
fistpll
jecxz
test
shl
add
into
in
loope
ljmp
cmc
cli
dec
ds
int3
repnz
xchg
cli
ror
add
loope
xchg
xchg
call
ror
fdivr
jmp
idivb
movb
cli
fucomi
or
in
aam
repnz
xor
out
out
mul
adc
jmp
stc
ret
out
stc
mov
stc
xchg
repnz
ss
rol
out
leave
std
jmp
loope
std
inc
sti
enter
adcl
in
in
jmp
cmp
mov
mov
call
out
lock
icebp
in
not
stc
cmc
ds
aam
test
ljmp
in
test
out
in
fadd
cli
fidivl
lock
lock
out
fiadds
lret
shl
xor
std
cmp
ds
hlt
adc
fucom
cmc
sti
rcl
call
int3
repz
in
ror
int3
repz
xor
cld
out
ret
call
fmul
xchg
into
call
xor
fcmovu
out
std
into
xor
fst
sti
stc
mov
aad
sar
out
jecxz
out
aad
loope
fcom
test
cmp
lret
ds
xchg
jmp
mov
out
cld
fcmovne
xor
loopne
xor
xor
das
fdiv
aad
in
ret
leave
in
mov
push
out
fiaddl
iret
xor
in
ljmp
call
in
cmc
out
addl
jmp
mov
jmp
into
rcl
rol
fcomp
lahf
mov
dec
jae
jg
roll
jle
in
loopne
lret
repz
out
loopne
rcr
enter
ljmp
repnz
mul
jmp
adc
int
mov
cmp
out
aam
in
sub
adc
aam
aas
fsubrp
test
shl
cld
shl
aaa
icebp
mul
cmp
cmp
rcr
stc
fidivrl
and
test
enter
out
nop
fldl
aad
cs
std
sti
in
int
cmc
fcmovnu
rol
loope
ret
loope
jecxz
sti
fcomip
not
int3
out
repnz
ljmp
sar
mov
mov
in
cmc
ss
in
out
cmp
cmp
sti
aad
loope
cmc
xchg
jmp
out
xor
xor
std
std
hlt
into
std
out
fadd
cmc
enter
and
out
mov
out
xor
jmp
ss
imul
ret
cld
std
out
shl
imul
sbb
mov
xchg
shl
ret
aam
xor
cmp
ljmp
repnz
jmp
in
jmp
loop
call
icebp
jmp
cld
shl
lock
stc
xlat
stc
loopne
sti
clc
icebp
xor
xor
shl
in
call
in
cmp
sti
sub
sbb
stc
add
test
ficoms
call
stc
stc
loop
lock
out
repz
rol
shr
cmc
xchg
hlt
fld1
in
in
xchg
orb
shl
cmp
rcr
lret
out
jecxz
xlat
imul
jmp
mov
sti
mov
loop
hlt
xchg
enter
cmp
jmp
cmc
out
loopne
cld
jecxz
clc
std
shl
imul
out
cld
sti
xchg
hlt
shl
repz
aad
lret
clc
xlat
repz
test
xchg
addb
test
jmp
xlat
rcl
jmp
xor
lock
hlt
flds
lds
loop
in
xor
dec
std
repnz
idiv
test
mov
jmp
in
ljmp
out
rcr
into
xor
in
into
xlat
cmp
aaa
jmp
stc
fcmovb
rorl
loopne
test
ror
stc
iret
rol
icebp
mul
int
in
out
ret
out
fcomp
mov
lret
iret
lea
test
cmp
loop
int
sar
out
loope
repz
test
fcmove
int3
xchg
enter
jmp
cmp
fcomp
int
loop
rcl
lds
jmp
icebp
call
shlb
leave
cmp
call
hlt
roll
cmc
xlat
fdivrp
jmp
clc
cli
hlt
neg
rcr
test
ds
or
int
and
loop
sub
jecxz
vpmovmskb
out
std
roll
fcmovnu
stc
in
fimuls
aam
jmp
in
lret
in
dec
xlat
fdivrp
shl
loope
mov
std
call
jmp
loope
xor
fcmovne
shr
fdiv
ret
ret
loopne
test
xchg
mov
mov
cmc
xchg
div
das
xlat
lret
out
cmc
out
leave
hlt
fsubrp
out
testb
test
xchg
int3
out
mov
out
xlat
int3
repz
fmulp
aam
lock
sbb
loop
in
in
ljmp
xor
cli
rol
cli
orl
stc
sub
xchg
loope
imul
out
iret
hlt
lret
enter
hlt
xlat
clc
addb
in
lret
out
rcl
repnz
shlb
jmp
cli
shr
repz
sar
ret
cmc
repz
cmp
xlat
stc
xchg
xchg
hlt
addl
in
fsub
loop
aas
in
hlt
test
adc
ljmp
nop
mov
aaa
les
xlat
int
ss
jmp
aas
cmpl
xchg
ret
in
cld
ljmp
jmp
jmp
loop
push
iret
fdiv
cld
hlt
xlat
jmp
mov
icebp
ret
rcl
fnstcw
shr
cmp
je
mov
jmp
push
mov
sub
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
jmp
into
aas
rol
rcl
aam
pop
xchg
and
inc
out
lret
in
addr16
push
add
fcomp
fdivr
ret
repz
mov
in
test
out
sti
clc
loope
lock
cli
stc
xor
fnstcw
idiv
shl
fildl
rorb
jecxz
lock
aam
int
jecxz
std
aam
hlt
sar
cmc
testl
nop
aaa
sub
into
ror
repnz
std
fcmovbe
ffreep
iret
loope
mov
out
fimuls
int
xchg
out
repnz
xor
rcr
sbb
fcmovnbe
aas
vshufps
orl
leave
loopne
mov
out
iret
cmp
ljmp
cmp
aas
ret
sar
fucomi
ljmp
iret
cli
hlt
cmc
ror
jmp
fildl
cld
fildl
lock
aam
fucom
shr
enter
ss
into
test
vcvtpd2dq
jecxz
ret
test
cmp
in
cmc
out
cli
fsubr
xlat
idiv
fldl
out
cld
mov
fisttpl
leave
call
std
sti
mul
in
lock
enter
adc
out
call
repnz
aad
cmp
jmp
shl
test
shl
loope
and
stc
cli
or
mul
call
out
cmp
in
out
lock
rol
fdivp
ret
fcmovnb
in
lret
rorb
out
stc
int3
in
cmp
cmp
adc
out
vpminsw
loop
sbb
iret
out
call
fmul
xlat
divb
lock
ds
sar
into
ffree
mov
shr
sti
cmp
lret
mov
mov
hlt
rol
xor
aad
lret
iret
icebp
fcmovnu
clc
rcl
loop
test
test
lret
mov
jecxz
lea
ret
jmp
out
std
cld
aam
fcmovu
fildl
mov
in
ss
cmp
stc
out
in
rcr
stc
cmc
loopne
cmp
lret
ljmp
orb
in
ror
jmp
idivb
rol
cmp
fcmovu
std
popl
roll
fmul
jmp
fnstsw
ret
out
xchg
out
cld
cld
fdiv
mov
in
aad
into
xor
rcr
ret
cmp
lds
sub
out
xchg
xor
lret
out
std
fcomi
in
fcom
cmp
shr
fdivrp
loope
test
jmp
lock
in
in
sub
cmp
std
rol
out
loop
loope
aam
imul
leave
ret
bnd
stc
aaa
in
cmp
in
cmp
out
cmp
in
out
enter
stc
in
jmp
xchg
mov
ss
leave
fdivr
jmp
cmp
clc
cmp
rorl
aam
out
cmc
in
out
int
idiv
rol
ffreep
jecxz
cli
ret
xchg
out
stc
ror
jmp
call
das
shl
jmp
aam
aam
lock
mov
out
xchg
fisttpll
ret
aaa
lds
fdivp
lock
aas
loope
out
xor
mov
cmp
out
xchg
rol
loope
jmp
adc
repz
fcmove
aam
repnz
jmp
in
xor
loop
lret
cld
stc
or
test
stc
fiaddl
aad
lock
in
cmp
cmp
icebp
icebp
lret
cmp
rcl
aad
xlat
not
sbb
lret
repnz
rol
xor
sub
out
sti
fsubrp
add
mov
stc
mov
into
in
ss
fdecstp
sarb
shll
not
aas
mov
xchg
in
lret
in
int
nop
mov
clc
cli
cli
lret
cmp
loope
lret
hlt
xlat
incl
loopne
loopne
loop
mov
into
int
icebp
xlat
idiv
dec
shr
loope
aam
std
fldl
jmp
mov
iret
shr
xor
iret
lret
rol
fld
call
fxch
into
mov
xchg
xchg
xor
aad
in
xor
cmp
aam
cmp
int3
test
test
xchg
mov
aad
fadd
jmp
leave
xlat
loopne
leave
cld
add
rcr
repz
test
adc
out
aad
loopne
sub
hlt
aam
icebp
jmp
in
out
loopne
in
jmp
xchg
cld
xchg
fisttps
les
ds
imul
inc
xlat
fiaddl
incb
sbb
push
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sub
sub
mov
or
jmp
ret
fmul
fstp
xchg
aaa
pop
adc
inc
jg
insb
jg
push
add
rcll
iret
into
xor
xlat
leave
sar
shl
faddl
call
and
das
int
aam
in
ljmp
aas
inc
enter
std
out
loopne
mov
fstl
jecxz
repnz
in
add
faddp
std
mov
lea
fld
sti
cmp
in
fldl
in
call
test
jmp
shrb
fmul
cli
leave
shl
cld
fsubr
out
jmp
clc
sti
lock
jmp
and
repnz
cmp
neg
lret
clc
ret
cmp
test
hlt
cmc
sar
call
in
xor
repz
call
cli
in
lock
in
cli
in
lock
iret
or
sar
icebp
out
call
std
loop
repz
aam
jmp
xchg
iret
cmc
shl
repz
xlat
idivb
rcl
dec
aam
loop
cmp
mov
in
fisttpll
mul
ret
fcmovnu
fstpt
fnstcw
aas
repz
xor
repz
out
lock
iret
nop
and
not
out
aaa
in
hlt
cmp
sarl
hlt
and
enter
mov
loop
xchg
jmp
hlt
lock
lret
shl
std
ds
test
fiadds
out
jmp
xchg
filds
ret
xor
shr
xor
out
cld
fxch
cmp
test
std
icebp
loop
fisttpl
ficoml
xor
xlat
enter
aas
int
cli
shlb
fcom
clc
call
add
jmp
jecxz
incl
cmp
in
rolb
mov
sti
std
loopne
fdivs
clc
jecxz
shr
out
xorb
out
ret
aad
stc
fldl
in
rcl
out
test
out
xlat
aad
shl
lret
dec
test
test
cmp
call
adc
loopne
cmp
cmp
icebp
leave
cmp
aam
int
fadd
iret
xlat
ffreep
fcmove
loope
int
loopne
rclb
jecxz
jmp
fildl
mov
cld
lret
loop
cli
loop
into
iret
in
fsub
xor
enter
cli
and
std
xlat
leave
ret
loope
loopne
jmp
fimuls
lret
fstpt
in
ss
ror
aaa
loop
repnz
add
rolb
aam
sarb
in
into
int
shl
cmp
sbb
aad
loope
mov
sti
icebp
mov
out
idiv
xlat
lret
fdiv
leave
div
in
cmp
xchg
jecxz
loop
xlat
or
nop
repnz
int
lret
cld
in
aaa
cmc
out
clc
cld
ds
shl
ds
xchg
cli
faddl
xor
ret
icebp
out
stc
stc
shl
in
std
ret
icebp
test
jecxz
sti
mov
jmp
leave
loop
pushl
jecxz
in
ret
in
xlat
cli
cmc
leave
fscale
sarb
and
jmp
xchg
xchg
loopne
xor
cld
icebp
hlt
aas
icebp
into
fadd
fchs
out
sti
ds
jmp
out
out
cmc
ret
lret
cli
cmp
loop
cmp
in
xlat
call
jecxz
in
lret
ffreep
xchg
xor
aam
repz
aam
shll
std
lock
clc
cli
mul
test
fdivr
vprotq
fadd
mov
aam
jmp
jmp
in
cmc
lock
shl
int3
cmc
loopne
in
hlt
cmp
addl
shr
out
aas
fstpt
shll
vpavgb
std
mov
flds
aad
shll
stc
fsubrp
shll
loope
ds
rol
fcomp
test
ljmp
mov
lret
ljmp
filds
xchg
xchg
test
fildl
leave
jmp
std
icebp
jmp
loop
idiv
xlat
jmp
enter
in
loopne
lock
fcmovbe
leave
aam
cmp
sar
fidivrs
jmp
clc
nop
stc
shl
jmp
hlt
call
call
cmp
cmp
lret
xchg
into
int3
nop
cmp
iret
lock
sti
xor
aas
cmp
jecxz
rol
orl
sti
enter
in
repz
divb
out
test
cmp
test
sar
leave
jmp
out
fisttpl
call
not
in
stc
aaa
fcmovnb
test
ret
xchg
xlat
xor
mov
or
mov
mov
adcl
add
xorl
jmp
ror
lret
int
int
bound
jle
jo
jle
add
xor
out
xlat
mov
xchg
icebp
fldl
cmc
jmp
fcom
roll
cld
out
jecxz
cli
cld
repnz
sub
das
fcomp
cli
in
int
ffree
ds
cmc
rcr
hlt
loop
loopne
lret
nop
fisttpll
test
in
aaa
jmp
testb
fsubr
int3
mov
call
div
xor
cmp
out
jmp
fdivr
int
testl
faddl
xchg
aam
ljmp
xor
cld
idiv
jecxz
mov
int3
clc
loopne
int3
mov
leave
cmp
shl
cmc
xor
enter
in
loope
clc
in
fimull
loopne
call
in
in
rcr
cmp
aam
sarl
aam
sti
mov
xlat
out
rcr
mov
mul
hlt
shl
icebp
hlt
lock
in
cmp
sar
call
ds
inc
mov
lock
xchg
xor
sti
cmp
int
repnz
cli
icebp
lock
ret
mov
in
in
out
repnz
jmp
cmp
into
cmp
sti
fstp
fadd
repz
shl
xlat
icebp
enter
xchg
nop
out
call
shr
std
sti
cmp
xchg
rol
cmc
test
in
orl
loopne
rcl
ljmp
loop
fdivr
std
ret
loope
cmc
loope
stc
in
jmp
iret
repz
enter
aaa
dec
cld
ffree
out
mov
test
lret
fucomi
in
in
cld
fdivp
xor
lock
jmp
cmp
test
out
jecxz,pt
mov
mov
rorb
in
aad
in
cli
out
repnz
repz
mov
xlat
cli
fmuls
in
xor
cmp
sub
xor
icebp
ret
idiv
mov
xor
rol
cmp
das
shll
repz
fdivrp
sar
shl
fadds
mov
xor
fnstcw
in
fmul
lock
ror
not
roll
in
std
cld
rol
into
jecxz
cmp
aad
fsubrp
out
clc
std
stc
loope
in
mov
cld
mov
into
loop
mov
lret
jecxz
out
neg
aad
repnz
aas
test
hlt
loop
fisttpl
out
mov
ljmp
enter
jmp
cmp
loop
xchg
aam
mov
call
std
ljmp
stc
xor
in
fmulp
inc
xor
in
fucomip
test
in
sub
fbstp
icebp
rol
aam
not
cmc
aam
loope
cmp
fld1
sbb
in
cli
les
call
jecxz
clc
cmc
shr
call
fdivr
out
movl
ljmp
lds
xor
cld
rcr
hlt
fcomp
hlt
ret
fcmovne
repnz
out
lret
ficoms
repnz
cli
imul
shr
std
cmp
fcom
icebp
hlt
jecxz
fiaddl
test
in
in
mov
in
ljmp
cmp
out
fcomi
roll
faddl
sub
rol
out
in
stc
ljmp
rolb
fimull
mov
aad
ss
aad
fdivl
fmulp
fcmovu
test
mov
sub
jmp
call
repz
aaa
aam
in
call
rol
loope
call
std
xlat
fldl2t
xchg
rol
repnz
jmp
jmp
fscale
rcr
icebp
hlt
ret
xlat
incl
xchg
enter
int3
aad
hlt
repz
clc
repz
cmpb
test
cli
out
or
xchg
out
xchg
orl
ds
in
fcomp
leave
loop
cld
test
fisttps
aad
stc
imul
hlt
cli
jmp
stc
cld
stc
adc
out
in
std
loope
lret
xchg
fisttpll
fnop
fdiv
lret
sti
lret
int
vpaddw
mov
faddl
xchg
xlat
xor
hlt
in
out
rcr
cmp
sarb
cld
shl
ficoms
bnd
cli
aad
fmul
cmp
rcr
xor
loope
lret
xchg
xorl
les
fcmovu
hlt
cmp
aam
ror
clc
enter
out
fisttpl
loope
clc
in
jmp
xlat
aaa
push
movzwl
sub
mov
mov
add
mov
xor
negl
movl
adcl
jmp
ror
int3
mov
cmp
jne
jle
add
aaa
incl
fchs
out
ret
int3
out
jmp
mul
in
in
ss
aad
shr
addl
out
addb
call
out
icebp
enter
aaa
fsubrp
jmp
cld
in
cmp
in
jmp
int3
cli
xchg
in
aad
repnz
cmp
int3
repnz
fcomip
ljmp
cmp
hlt
jmp
mov
adcl
lock
lock
clc
rcr
fucomp
fcmovne
in
cli
fcmovne
in
iret
in
into
repz
cld
fsubr
aad
jecxz
loopne
stc
jecxz
sbb
int3
call
dec
div
xor
xor
xor
ljmp
fucom
hlt
cmc
cmp
fsub
neg
mov
mov
out
div
shll
lret
sarb
cmc
cmc
out
sar
not
fcmovnb
loope
leave
int3
cld
ljmp
xlat
call
loopne
aas
cmp
aad
in
idiv
fsubp
test
or
xor
xor
int3
hlt
xlat
fldlg2
icebp
faddp
out
lock
lds
mov
into
into
jecxz
aaa
lock
int3
xlat
shl
in
cld
clc
loopne
out
int3
std
into
out
in
in
xor
jmp
cmp
out
int
stc
jecxz
stc
xlat
faddl
in
sub
shl
aam
das
icebp
fdiv
ljmp
icebp
out
iret
loope
shl
fisttpl
sub
into
lret
idiv
fxch
leave
std
fnstsw
and
stc
ds
in
cmc
lret
sub
iret
out
loopne
test
enter
aas
testl
not
out
fmul
iret
decl
loopne
idiv
jmp
dec
fnstsw
std
rcl
ret
cli
xchg
clc
sbb
shl
xor
aam
cmp
xor
aad
out
cmc
out
cld
dec
rolb
sar
rcr
fcmove
call
les
sbb
enter
repz
xchg
in
xor
icebp
sar
push
shr
shl
stc
shl
ret
jmp
sbb
stc
cld
hlt
jmp
test
call
cmp
clc
test
and
sbb
mov
int
lret
out
out
cmp
cld
lret
hlt
xchg
test
std
mov
ljmp
loop
repnz
xor
cmp
stc
rol
jecxz
addl
jecxz
xor
ss
sti
lock
roll
loopne
std
xchg
fxch
iret
fdiv
hlt
sub
xor
aam
hlt
in
enter
in
xlat
shl
shl
ret
ret
in
int3
mov
mov
cld
bnd
cmp
xor
int3
rcl
test
fisttpl
mov
loop
dec
adcl
fcmovnb
lret
ss
test
in
fmull
aad
repz
xor
xor
cmp
loopne
call
loop
std
shl
repnz
in
jmp
mov
fldl
int3
lock
fucomi
iret
loope
adc
testl
fsubrp
in
lock
aad
test
cmp
icebp
loopne
rcr
xchg
hlt
ret
in
xor
cld
ljmp
aad
out
in
in
icebp
int
hlt
faddl
std
into
xchg
loopne
aad
ljmp
rcl
lock
fdivr
cmp
fadds
rclb
shl
aam
fst
f2xm1
stc
int
cmp
ret
hlt
clc
fdiv
sti
loopne
loop
mov
sti
stc
cmp
ljmp
icebp
ret
mov
test
aam
repz
icebp
hlt
fcomi
enter
out
loope
cmp
call
out
jmp
repnz
ror
icebp
int
call
out
iret
rcl
and
fsubp
jmp
hlt
in
shll
clc
lret
sarb
clc
into
loope
hlt
aam
out
hlt
mul
lds
fsubp
ljmp
in
jmp
cmp
cmp
cmp
iret
xchg
test
clc
les
idiv
xlat
mov
in
hlt
sub
in
cmp
out
aaa
fstpt
div
aam
sti
ret
aad
std
xchg
std
hlt
cmc
xchg
shlb
leave
cmp
xor
iret
cmpl
jmp
cli
rolb
movl
sbbl
add
movl
jmp
cmp
movl
jne
jmp
aam
aam
ds
adc
sahf
jp
jle
add
ret
lret
ror
into
shrl
xor
xlat
repz
orb
loope
mov
mov
cli
divb
clc
lret
out
in
int3
loope
stc
mov
mov
lret
jecxz
repz
loop
xor
aaa
std
idivb
in
incb
fsubp
call
int
cli
xchg
int3
lock
div
xor
cmp
call
in
cmp
ret
cmp
ret
cli
iret
mov
int
icebp
repz
jecxz
sti
divl
int3
fdiv
cmp
loope
incl
icebp
ret
jmp
ss
stc
cmp
repz
test
mov
aas
and
mov
cli
ljmp
out
shl
lret
sti
std
and
ret
cmp
sub
leave
out
xor
cmp
into
repz
cmp
lock
loop
xchg
out
xchg
out
test
enter
jmp
lret
jecxz
icebp
cld
xchg
fdiv
out
stc
jecxz
leave
xchg
cld
iret
xchg
cld
int3
jmp
stc
aas
repnz
in
fmull
in
mov
int3
xor
enter
aas
shr
into
jecxz
cmp
roll
into
sbb
aad
in
cmp
aam
aaa
in
hlt
cmp
ds
test
clc
orl
out
nop
xchg
test
call
shl
cmc
aad
ljmp
std
std
jmp
xchg
sti
shr
enter
xlat
out
das
cmp
sbb
fcom
in
rorb
iret
lea
imul
leave
aad
icebp
loopne
in
lds
rcr
mul
mov
in
idiv
iret
cli
leave
test
loop
jmp
ret
call
cmp
std
in
loope
ljmp
rcr
out
ror
cli
out
ret
lock
sti
lret
xlat
movl
in
ljmp
cmp
sar
xlat
cld
enter
jmp
movb
iret
leave
cld
sarl
sti
xor
filds
test
testl
xchg
repnz
loope
leave
cmp
aam
fcmovnu
icebp
in
cli
aas
repz
loopne
jmp
int
cli
leave
adcl
ljmp
cmp
cli
clc
movl
jmp
cmc
div
in
std
fidivl
cmpb
in
shr
stc
repnz
ds
out
lret
stc
adcl
sar
aaa
lret
in
cmp
fimull
out
rorl
mov
enter
int3
fdivr
aaa
loopne
ror
ret
sar
mul
lret
sti
movb
and
in
lock
repz
into
fsubr
lret
out
cmc
clc
cld
out
repnz
test
call
xor
jmp
jmp
out
in
in
test
cli
fcompp
loopne
in
fcmovnu
loop
ret
xor
cld
ror
std
into
cld
int
clc
out
fcomip
fld
mov
jecxz
xchg
leave
leave
shl
test
mov
cmp
xlat
jmp
loope
sar
ret
movl
rcl
jmp
ss
aam
vpaddsw
cmc
lock
fcmovu
int3
cmp
sarl
testb
icebp
in
ror
in
leave
jecxz
out
in
lock
filds
sarb
hlt
test
shl
ffreep
pop
jmp
fiaddl
ljmp
sarl
sarb
in
lret
fdivr
aas
call
xor
std
loopne
aam
xor
repnz
call
loope
mov
xchg
decb
in
out
in
int3
cmp
jecxz
repz
in
ffree
fcmove
out
enter
hlt
test
aaa
cmp
shr
hlt
in
rol
mov
repnz
leave
int3
stc
lock
neg
aaa
cmp
rcl
call
std
std
xchg
in
xlat
ret
add
mov
in
out
fdivp
in
leave
repnz
ljmp
int
fldl
lret
fisttpl
ror
stc
out
clc
in
xor
out
shlb
sar
cmc
addb
loopne
in
xchg
jecxz
out
fstp
int3
cmp
loope
cmpb
call
out
in
divb
cs
rol
cmp
cmp
fcomip
xchg
fsubrp
in
mov
mov
movl
mov
mov
mov
mov
jmp
int3
ret
int
mov
pusha
das
jg
xchg
ljmp
jle
leave
out
into
cli
sti
hlt
sar
icebp
xor
cmp
cmp
ljmp
aam
fdivrs
enter
stc
sub
xor
stc
clc
xor
stc
sbb
ffreep
xchg
fcmove
pop
fsubr
fsubrp
jmp
in
leave
aaa
jmp
jecxz
fdiv
std
cmpb
cmp
aad
mov
xchg
mov
ret
lret
xor
ljmp
fucom
cmp
ljmp
mov
lea
rcl
repz
ss
ss
loop
aam
fildl
mov
mov
out
out
jecxz
loope
rcl
into
call
out
idivb
xor
stc
stc
test
icebp
div
loopne
enter
mov
stc
out
neg
aaa
sarl
and
addb
in
out
lock
xor
fcmovbe
lret
clc
aaa
jmp
sarb
aam
in
fsubrp
leave
and
lock
shr
enter
lret
hlt
or
shl
shl
fdivr
cmp
call
xlat
shl
stc
ljmp
sti
ret
fadd
int3
in
fld
icebp
shr
into
loop
xlat
cmp
cmc
cmp
cld
sti
repnz
ffreep
lock
fucomp
dec
xchg
ror
les
ljmp
clc
fcmovu
test
fadds
in
in
repz
loop
xchg
ror
enter
enter
cmp
fld
out
xchg
int
xor
out
lock
aad
fsubr
cmp
fldl
repz
fsubr
decl
into
mov
in
hlt
out
cmp
int3
ds
aad
cmc
shl
xlat
shl
lret
test
ffree
in
lock
xor
cmp
rcl
lock
fdivrl
std
fcom
iret
faddl
mov
out
call
cmc
xchg
shr
stc
aad
xor
int3
aas
fiadds
aas
addb
sti
loopne
fldl
in
into
in
lret
out
aas
sti
jmp
fchs
icebp
fcmovbe
jecxz
call
lret
out
xchg
iret
cmc
nop
fsub
leave
cmp
cmc
in
hlt
aas
aam
fucomip
aam
sub
repz
mov
xor
repz
aad
out
stc
rol
rol
neg
repnz
test
out
jmp
int
nop
int
call
in
rcl
int
shr
call
test
icebp
adc
std
aam
and
aam
xchg
repz
test
std
lock
cmp
into
in
cli
rol
lds
lock
loope
fmulp
shll
out
fcomi
enter
sar
shl
fmul
stc
in
cmc
ffreep
test
out
loope
repnz
leave
int
dec
cmp
mov
fsubp
fisttps
test
mov
call
cmp
icebp
loopne
lock
aad
in
not
fdecstp
stc
test
nop
out
shl
repz
lock
iret
cmp
shl
cmp
xlat
div
cmc
ret
loop
jmp
nop
test
ljmp
xor
rcl
in
rolb
cli
jmp
call
mov
loopne
jmp
sub
not
cmp
fcmovnbe
out
xchg
xchg
xchg
xchg
not
stc
cli
out
lret
aad
cmp
cmc
cld
sti
rorb
lret
xchg
fsubrs
lret
test
out
cmp
aas
cmp
imul
xchg
cld
fimuls
nop
jecxz,pn
xor
icebp
into
xor
rcl
xlat
stc
cmc
out
test
leave
sti
sbb
in
aaa
int3
rcl
aad
call
cmp
cmc
ret
fneni(8087
out
loope
iret
xchg
shl
in
into
div
ljmp
stc
int
loop
enter
xchg
fimull
loop
jmp
fstpt
sbb
int
repnz
stc
out
filds
xor
fcmovnbe
neg
rcr
jmp
xor
cmp
jecxz
lock
test
clc
loope
and
xchg
loope
ret
cmp
rol
lock
cmp
out
loope
xchg
rol
loop
loope
xor
test
xchg
out
mov
repz
in
cmc
int3
cmp
roll
jecxz
fdivp
mov
loope
lret
nop
shl
bnd
cmc
das
cmp
aam
out
aas
cli
icebp
loopne
mov
jmp
shl
mov
aaa
in
cli
xor
ds
mov
jmp
cmp
jmp
aad
aad
aad
aad
push
push
scas
in
clc
out
add
jle
add
rcl
cmp
std
flds
out
jmp
mov
vpavgw
div
leave
ror
loopne
aad
int3
cmc
out
test
cld
hlt
cmp
iret
test
leave
aam
test
xor
xlat
idivl
fidivrs
int
xor
push
aas
jmp
fisttpll
shll
xor
out
aaa
out
lock
mul
jecxz
cmp
enter
iret
test
in
lret
ljmp
filds
repnz
mov
rcr
xchg
iret
ret
in
cmp
leave
jmp
cmp
out
repz
mov
aam
in
in
in
xchg
shl
nop
loop
lret
cs
xor
cmp
ret
xor
xchg
leave
xchg
xchg
xchg
xor
in
cmp
ds
test
cmp
les
in
enter
mov
and
das
out
ret
leave
xlat
call
ret
jecxz
fisttps
stc
in
call
int
cmp
int
lret
lret
stc
int3
fdivp
fcomip
faddl
call
call
int
mov
into
cmp
cmc
xlat
fstp
adc
rol
imul
in
out
nop
xchg
mov
iret
iret
xchg
xchg
repnz
fadd
int
repz
test
sti
loopne
test
dec
cmpb
iret
mov
mov
decl
stc
out
xor
ljmp
repnz
fldl
loope
shll
rcr
in
aam
jecxz,pt
fdivr
std
ret
std
loopne
fmul
fildl
in
in
shl
int
cld
cmp
in
in
dec
int
test
inc
clc
fisttpll
and
filds
clc
xor
stc
cmp
shr
sbb
ds
xlat
sar
xchg
out
loopne
testb
enter
call
loope
fucom
ret
in
into
into
cli
enter
xchg
xchg
xor
call
leave
xor
jecxz
fucom
idiv
repz
lret
mov
cli
lret
test
loope
call
clc
int
ds
fcmovu
jmp
fucom
jmp
xchg
out
ss
stc
sarl
into
fadd
add
std
mov
ror
hlt
call
in
icebp
cmp
out
ljmp
xlat
cld
int
loopne
out
ffree
jecxz
leave
mov
mov
out
xlat
not
ds
div
cmc
rcl
ffreep
std
cmc
and
and
repnz
icebp
cmp
stc
cmp
aad
hlt
sbb
imul
xchg
xchg
out
in
int
cmc
xor
int
fmulp
out
fcomip
cmp
aas
cmp
or
mov
shl
nop
das
xor
iret
fcmovbe
loop
sar
and
jmp
stc
std
in
test
faddl
int3
test
call
loope
repz
xchg
decb
ror
vpaddsw
fst
lock
lret
rol
add
std
lds
test
sti
fiaddl
int
cli
fnstcw
rol
xchg
ret
out
filds
mov
lock
shr
cli
in
shr
in
shr
shl
cmp
stc
stc
ljmp
test
neg
ss
fxtract
icebp
cmc
repnz
fstp
shl
xlat
int
mov
repz
jecxz
fdiv
fnstcw
ror
out
fmuls
in
mov
mov
out
hlt
out
into
rcr
ljmp
xchg
xlat
fld
neg
fsub
mov
fists
loop
lock
enter
lock
cmp
lock
incl
xchg
xchg
mov
leave
icebp
repnz
fdivr
sarb
aas
cmc
mul
sbb
std
cmp
leave
out
rclb
out
fmulp
in
stc
shl
ret
fcomi
clc
fiadds
fcmovu
int
lock
enter
out
cmp
lret
in
int
shl
cmp
in
fimull
xchg
call
enter
out
stc
aam
loopne
aam
mov
mov
popl
ss
fnstcw
sbb
std
test
cmp
mov
cld
mov
mov
loop
xchg
xchg
in
aaa
in
lock
aaa
aas
push
mul
ds
iret
fxtract
xlat
enter
cmp
out
icebp
lret
loope
into
icebp
lret
call
or
mov
jmp
aas
into
lret
leave
aam
dec
jo
xchg
cmp
cli
and
add
add
idiv
sti
fdivr
enter
sub
loope
in
jecxz
sti
lret
jecxz
call
adcl
ljmp
sti
in
lock
aam
enter
lock
out
shl
imul
xor
in
ds
aas
in
jecxz
rol
in
loope
adcb
hlt
in
into
stc
jmp
jmp
cmpb
adc
xchg
stc
jmp
incb
in
imul
neg
loope
loop
sti
cld
cmp
enter
out
int
leave
xchg
stc
fmul
jmp
addb
in
cli
enter
test
ss
out
clc
cmp
int
idivb
aad
ljmp
jmp
lock
clc
ror
fcomi
enter
cmp
shr
out
roll
fxch
out
sub
rcll
fxam
idiv
repz
aas
ret
out
sar
xlat
cli
cli
fsub
fldl2e
fsub
loop
nop
rol
iret
enter
repnz
sar
cli
sbb
aas
repnz
fadds
nop
cli
mov
mov
out
fcmovnu
rol
out
aad
icebp
loopne
adc
fsubp
addl
cs
jmp
sar
shr
xor
sti
sti
aad
xchg
fdivr
cmpb
adcl
lret
shlb
fdivr
int
cmp
filds
cmp
fdivr
mov
nop
faddp
loopne
shll
cmp
fildl
adc
in
loop
fdivr
out
jmp
mov
rcr
into
call
test
jecxz
ret
loopne
out
movl
iret
xor
cmp
cmp
jecxz
fsubrp
lret
fists
clc
aam
out
iret
out
lret
hlt
repnz
mov
cmc
enter
into
enter
xchg
xchg
shl
sti
int
lock
repnz
into
repz
iret
std
lret
jmp
lret
orl
lret
icebp
ror
shl
cmpb
out
lock
std
in
jmp
in
into
out
or
aad
ljmp
aam
clc
sti
and
ljmp
into
or
xchg
ret
xor
fcmove
sti
fdivrl
fnstcw
loopne
shl
icebp
fisttpl
in
out
xchg
loope
out
xor
fcmove
iret
ljmp
ret
roll
call
out
sar
divb
clc
ljmp
cmp
xor
xlat
icebp
jecxz
sbb
test
int
out
xchg
xlat
rol
shl
lret
lret
ljmp
and
clc
lret
xchg
ljmp
lret
dec
lret
icebp
fscale
iret
shl
loop
hlt
ret
jmp
jmp
xchg
rol
xor
call
fsubr
sar
in
test
jecxz
jecxz
aad
enter
xchg
xchg
call
xor
cs
lret
fcomp
cmpl
mov
lea
jecxz
sar
xor
lret
test
and
mov
loope
mov
mov
ljmp
out
fdecstp
fdiv
cmp
fistpll
loop
fst
mov
jmp
test
fxch
shr
repz
int
icebp
lock
adc
repnz
enter
int
in
rcr
div
xor
fcomp
rcl
cli
cli
fsub
fmul
fiaddl
mov
repz
icebp
fxch
sarl
sti
not
loop
addl
call
into
fprem
cmp
lret
rcl
inc
in
repz
lret
enter
loope
hlt
repnz
into
hlt
leave
repnz
iret
ljmp
aad
jmp
out
mov
mov
sti
int3
jmp
aam
lret
xlat
repz
add
fiadds
cld
cli
xchg
loope
jmp
in
neg
in
cmp
cld
call
ds
faddp
fcmovnb
out
loop
mov
nop
leave
lock
test
jmp
cmc
jmp
aam
iret
rolb
in
incb
lret
xchg
repz
hlt
cmp
rcl
aam
rcr
xchg
in
test
fiaddl
test
sub
into
int
into
in
xlat
out
idiv
ret
cmc
iret
std
rolb
sub
push
mov
jmp
int3
ret
int3
int3
sahf
pushf
gs
push
repz
add
add
rcr
sti
jmp
cmc
loope
call
lret
in
inc
xlat
hlt
ljmp
out
jmp
shl
les
shr
jmp
fadd
aad
out
mov
in
mov
popl
xor
lret
cld
std
hlt
xlat
out
fmulp
sbb
not
fstp
xchg
lret
mov
lret
sub
ds
cmp
enter
in
mov
out
fmulp
xchg
lock
in
cmp
cmp
repnz
aas
cmp
clc
cld
lret
incl
cmc
das
xor
call
div
fld
and
xlat
jmp
fucomip
icebp
lock
ror
int3
fstpt
cli
repnz
into
out
out
jecxz,pt
lret
cli
lret
ljmp
loop
xor
jecxz
sar
fsubr
cmp
fdivrp
aaa
shl
loop
hlt
loopne
enter
leave
out
lret
xchg
out
rcl
icebp
stc
xor
idiv
cmp
out
stc
out
cld
in
add
jmp
stc
std
rcr
rolb
das
in
xor
sti
jmp
or
test
loope
fdivp
repnz
ret
fdiv
in
loope
mov
jecxz
icebp
cld
out
leave
fstp
stc
xorb
fdiv
xor
in
loopne
leave
in
loop
test
int3
out
ror
cmp
xlat
sti
cmpb
mul
cmp
loope
enter
xchg
xchg
xchg
int3
lds
into
int3
mov
sti
aam
out
in
hlt
in
cmc
addb
fldl
xchg
in
aam
imulb
iret
aam
in
not
test
test
cld
jmp
cli
mov
xchg
mov
into
shrb
fstpt
std
out
fldl
incb
mov
loope
fucomip
shll
leave
cmp
icebp
clc
enter
in
rcr
fmuls
sti
std
loope
roll
ret
ror
repnz
repnz
test
out
loope
shl
ljmp
lea
hlt
cli
sti
cmc
clc
fsubr
test
addl
xchg
xchg
jmp
int
clc
in
leave
das
leave
aam
cmp
sti
loopne
cld
aam
hlt
loopne
div
in
fmul
loop
mov
xor
aaa
shr
in
hlt
std
repz
cmp
ret
fxtract
xor
xchg
out
aaa
aam
out
xlat
sar
fxtract
rol
out
stc
cld
aad
xchg
fiadds
aad
xor
rcr
xlat
out
repz
cmp
aas
xchg
fcmovnbe
std
ljmp
test
xor
lock
int3
in
aaa
cli
cld
cli
std
cli
rcr
aam
xchg
mov
xchg
std
out
out
jmp
sti
fucompp
loopne
aam
lock
in
shl
sar
call
movl
out
cld
int
fnstcw
sar
jecxz
loop
mov
fdivrp
fldlg2
fists
call
aam
cmp
xlat
clc
mov
aad
xchg
out
out
test
ss
xor
cmp
cli
xlat
loope
neg
rcr
roll
mov
cli
mov
aaa
sub
int3
fadd
shll
ret
aam
fstpt
cld
cld
mov
xchg
lret
icebp
xor
in
jmp
fnstsw
fdiv
cld
cmp
fcmovnb
in
fucom
icebp
loop
adcl
aad
cli
int3
icebp
loopne
xchg
xlat
mul
int3
imul
fdivrp
mov
in
in
jecxz
jmp
loopne
cmp
cli
aas
fcomi
fxch
fistpll
mov
test
xchg
not
leave
repz
out
cmp
xlat
cmp
icebp
faddp
fadds
rcr
enter
mov
fcmovnu
mov
in
sarb
shl
test
hlt
leave
inc
div
aam
sar
xchg
int3
in
jmp
in
inc
lds
int
cmp
lock
hlt
sti
xor
lea
rorb
in
aam
rcl
int3
cmp
idiv
lret
repnz
sarl
flds
xchg
mov
fiadds
hlt
out
std
leave
xlat
cmp
ret
adc
mov
lret
xchg
nop
sub
repnz
hlt
cmp
shr
shl
aam
rorl
std
mov
lret
aam
cmc
cld
fcmovne
lock
fidivrs
in
fstp
bnd
fmul
loope
hlt
loopne
mov
ret
aaa
sub
std
repnz
repz
fdivp
add
jmp
lret
into
fst
fstp
bound
push
dec
adc
jle
add
out
aam
shl
add
mov
out
mov
ret
jmp
ljmp
call
jecxz
lret
faddl
call
jmp
cmp
out
cmp
fcmove
mov
in
in
enter
lea
out
fdiv
rcl
xor
fdivrp
sar
rcr
sbb
incl
repz
into
jecxz
ret
stc
xor
fstpt
enter
ljmp
mov
lock
xor
in
xor
fxch
aaa
shr
test
stc
rcr
test
mov
sbb
mov
aad
incl
clc
loopne
hlt
aas
hlt
loope
cmc
xlat
sti
mov
in
iret
out
int
cmc
lock
neg
cmp
sar
fstl
jmp
jmp
aas
icebp
into
in
loop
lock
out
fnstsw
test
loope
loop
cmc
loop
leave
iret
cli
sti
fcomp
fsubrp
fucomi
cld
ret
fldl
mov
sti
loope
mov
cmp
iret
fcom
cld
cmp
aad
mov
ljmp
mov
stc
cmp
lock
loop
repz
in
cmpl
call
fisttpl
xor
jmp
cmp
lret
cli
and
fcomip
orl
fst
call
xor
sti
lock
cmp
aad
out
aad
in
test
xchg
int3
sar
iret
in
call
lock
xor
out
in
sti
out
loopne
call
in
clc
mul
in
out
aas
jmp
fcmovnu
filds
mov
std
into
std
lret
lock
cmp
jmp
xor
rcr
enter
cli
leave
fisttpll
lock
ret
lret
out
ljmp
aas
ret
neg
lret
jmp
cmc
testb
sti
jmp
ret
aad
test
fsincos
enter
in
xchg
aam
jmp
cmp
cmc
lock
aam
ret
fdiv
jecxz
ljmp
test
enter
ror
out
rcl
clc
cmp
aam
cmp
mov
lret
in
push
int
in
xchg
aad
jmp
cmp
aad
out
rcr
clc
xlat
loopne
xchg
neg
leave
in
out
mov
in
xchg
into
loope
repnz
repnz
adc
xlat
cmp
in
cli
dec
sub
loop
lock
aam
ljmp
test
enter
in
addl
jecxz
enter
iret
cld
test
aas
cmp
jmp
out
out
lds
jmp
cmp
repnz
fsubrp
icebp
loopne
ret
cld
aam
repz
mov
xchg
rcl
xor
xlat
lret
sbb
in
out
cmp
in
adc
mov
loopne
icebp
icebp
xor
xor
fdivrp
cli
lret
ror
idivb
std
sti
fcmovb
jmp
mov
jmp
repz
test
cld
repnz
testb
test
jecxz
loop
xchg
jmp
in
xor
xlat
in
cmp
roll
xchg
adc
out
xchg
std
lret
out
mov
iret
out
aam
cld
call
out
jmp
cmp
mov
loopne
in
leave
jmp
lret
loope
nop
aam
cld
repnz
cmp
sti
loopne
inc
loope,pt
mov
filds
lret
loop
sub
not
sti
sti
in
cmc
div
loop
cmc
xchg
stc
testl
aas
hlt
int
ljmp
cmpb
out
loope
in
fcmovu
in
lret
xchg
test
xlat
out
enter
xor
xlat
xlat
cmp
fcomp
in
ljmp
hlt
xchg
out
out
fdivr
call
cmp
mov
decb
in
mov
test
icebp
jmp
fldlg2
fcmovu
cmc
jmp
ror
int3
fstp
cmp
fldl
test
mov
loope
rcl
ret
aam
ror
lret
clc
cmp
mul
lret
or
or
xchg
xchg
int3
xor
hlt
xor
cmp
fidivrs
cmp
jecxz
test
fistpll
lret
mov
clc
xor
in
jmp
int
iret
rcl
aad
inc
xor
push
cmp
add
add
in
jmp
fildl
cli
fdivp
cld
loope
fsubr
in
fninit
into
in
aas
in
aad
cli
aaa
cmp
in
cmp
aas
test
out
rcl
loop
xlat
mov
fsubrp
cld
sti
inc
enter
repz
int
int
call
loop
aas
ret
fsubrp
test
in
test
fnstcw
aaa
aam
cmp
cmp
aam
xor
out
xlat
addb
repz
divl
cmp
sti
aam
out
jmp
aam
fdivp
xchg
xchg
fisttpl
repnz
mov
xlat
lret
out
into
call
stc
cmp
rol
rol
addb
out
in
xor
cli
ljmp
fdivr
cmc
ds
stc
mov
les
mov
xchg
sub
fxch
ret
cmp
fcmovb
aas
loope
cmc
out
fdivr
loopne
flds
jmp
shl
lds
sti
in
cld
testl
jmp
in
jmp
out
int3
test
sub
cmc
xor
in
out
repnz
stc
sti
ret
lock
in
in
out
xor
repz
aaa
out
fcom
xor
rcl
fsub
jmp
std
into
filds
fimuls
out
ljmp
rcl
fninit
fldl
xlat
stc
lret
enter
xchg
rcl
out
stc
hlt
ss
stc
fcmovnu
int
fdecstp
cmc
cmpb
adc
and
out
shl
cld
fucomi
cmp
cmp
call
lea
nop
loop
mov
xor
fdivr
lret
ljmp
flds
mov
shl
xchg
enter
icebp
icebp
hlt
not
aaa
cmpb
in
out
out
mov
mov
sub
mov
ret
jmp
cmc
cs
enter
incl
repz
xchg
out
loopne
fdiv
rcr
into
out
cmp
xlat
iret
xlat
test
mov
int3
mov
std
int
out
loop
repnz
int3
cli
out
into
cmp
xchg
ret
repz
neg
fadd
fucomp
jecxz
filds
cli
jmp
add
shl
hlt
aam
cmp
not
int3
in
int
jmp
ret
repnz
int
out
int3
out
lock
clc
shl
cmp
out
mov
sub
mov
mov
xchg
and
xor
lret
in
cmp
test
jecxz
cmc
ds
lds
leave
out
fstp
orb
call
lret
fidivrs
repz
lock
in
mov
repz
fdivr
out
fsub
cmp
shl
neg
cli
fildl
clc
in
fdivr
fiadds
cs
xor
cli
cmp
loop
lock
ljmp
fmul
enter
xor
ljmp
jmp
ret
cmp
add
iret
loopne
call
aad
cmp
ds
icebp
repz
roll
enter
iret
xchg
call
in
in
int3
call
fstp
enter
int3
ret
ds
clc
in
add
mov
loope
sti
out
xlat
cmp
aad
loope
stc
ds
sub
lock
in
repnz
hlt
xchg
rol
out
fucomip
lret
into
repz
aad
hlt
ds
into
loop
jmp
xchg
hlt
and
cmc
jmp
repnz
repnz
in
sbb
call
fld
orb
aad
xor
hlt
out
out
into
jmp
cmp
in
repz
sti
cmp
in
fmulp
xchg
xchg
rcl
xlat
fdivrl
cli
fcom
ds
aas
std
testl
loopne
in
aam
repnz
cmp
fidivrs
sti
ret
cmp
rol
repz
orb
test
sub
cld
cmp
aam
in
call
in
icebp
sti
xchg
out
idiv
fcmovbe
out
fcmovu
loope
jmp
hlt
hlt
int3
jecxz
in
fucomp
int
mov
repz
sti
ljmp
repnz
cmp
addb
ffree
jmp
shl
loop
cmp
into
aaa
ljmp
repz
icebp
ljmp
test
in
rorl
xor
aaa
xor
leave
fcom
cmp
fcmovbe
repnz
in
int
fdivr
call
incl
jmp
mov
fcmovnu
or
sub
cs
add
sbb
jle
add
mov
mov
repz
shl
enter
fprem1
jmp
into
repz
fsqrt
fcmovne
rcl
xchg
icebp
leave
jmp
sti
call
test
cld
xlat
mov
out
out
mov
leave
std
call
xlat
clc
sub
iret
out
add
cmc
aad
fcmovbe
leave
loopne
mov
lret
std
out
call
in
lock
aam
loopne
rcl
movb
shl
iret
les
xor
into
fnstcw
jmp
out
neg
aas
repz
fisttpll
lea
ljmp
loope
xor
iret
in
fnsave
cmp
in
rolb
in
frstpm(287
out
test
test
aam
icebp
cmp
out
ljmp
fcmovnbe
cli
addl
clc
in
fst
lret
out
fsubr
shl
stc
call
cmp
cld
and
repnz
xor
hlt
stc
rcr
repnz
cmp
cld
sar
incb
fmull
out
aaa
aaa
sub
cmp
aaa
xor
clc
aad
cld
stc
shl
adc
stc
fcmove
cmp
rolb
shl
les
sub
xor
into
div
ds
cmp
fucom
fxch
cld
lret
in
test
ror
into
ljmp
cmp
stc
out
neg
loop
in
fdivrp
loope
lret
out
into
xor
ss
idivb
lret
cmp
out
repnz
xlat
not
sti
mov
xchg
cli
loop
xor
repz
in
std
repnz
icebp
test
in
mov
cli
into
sar
std
mov
xor
ljmp
ds
iret
cmp
test
testb
loop
fmull
repz
stc
idivl
sar
jecxz,pt
ror
aas
lds
mov
lret
int
cmc
out
rcr
xor
out
cmp
shl
div
enter
addl
cs
xor
fidivrl
out
fadd
sti
faddl
test
out
mov
test
cmp
aaa
ds
cmc
cmp
out
leave
fcmovne
sti
ljmp
hlt
repz
out
fdivrs
ljmp
fcomi
icebp
loopne
fsubrp
out
lret
std
xchg
not
repnz
out
aaa
shr
in
clc
repz
cli
frndint
fcmovbe
cmp
aam
fimuls
hlt
in
xchg
jmp
out
aaa
fstpt
shl
hlt
lock
fcmovnb
xchg
out
loopne
mov
out
rcr
aaa
into
shlb
cmp
lret
ds
cmp
xor
aam
xchg
in
std
push
in
in
aam
aam
xor
lret
lret
aas
loope
lret
in
les
test
fsubrp
loope
fucomip
xchg
xor
fsubr
jmp
int
lret
aaa
in
hlt
cmp
loopne
out
mov
xchg
jmp
jmp
in
fidivrs
in
aas
test
test
cmp
int
test
divl
not
sub
jmp
std
cld
ds
xlat
dec
cmp
into
fimull
loopne
sub
ror
cmp
fmul
cmp
icebp
sbb
and
cli
jmp
in
lret
int
mov
int3
jmp
lock
in
cmp
mov
jmp
mov
out
ss
aad
jmp
repz
icebp
loopne
hlt
vpmulhw
neg
jecxz
mov
ror
hlt
addl
repnz
aam
repnz
not
xlat
mul
fisttpll
enter
bnd
fsubp
loope
fmul
repz
cmp
filds
rcr
lock
xlat
loop
mov
faddp
adcb
cmp
shr
int3
lock
aad
fsub
ds
test
loopne
clc
ljmp
mov
xor
xor
cmp
int3
push
in
ds
stc
test
xlat
out
sti
call
and
xor
lret
jmp
into
cmp
jecxz
out
call
sti
stc
cli
clc
mov
test
or
mov
enter
ret
shr
xor
aad
int3
repz
in
iret
test
aad
in
out
call
xchg
xchg
int
xor
stc
cmc
aam
repnz
mul
cmc
rcl
aad
fildl
icebp
jmp
std
loope
out
lret
xor
in
cld
rcr
xor
loopne
aad
out
rcr
inc
out
in
nop
enter
xchg
out
lret
lret
ljmp
cli
aas
aad
stc
addl
jmp
cmp
jne
jmp
iret
lret
rcr
aad
int
jge
ja
popa
sti
or
add
add
aam
cld
cld
mov
and
xor
nop
enter
stc
repnz
in
stc
cmp
std
hlt
and
mov
mov
in
cmp
mov
loope
into
aad
into
ljmp
iret
loop
std
sti
add
aas
test
out
int
in
test
idiv
cmp
stc
fdivr
xchg
cmp
loope
addb
in
lret
test
icebp
fxch
into
call
rcl
cmp
repz
fcmovnb
cli
leave
mov
ret
xlat
not
jmp
addl
lds
jmp
not
fcmove
fsubrp
jmp
icebp
sti
iret
fcmovb
mov
in
mov
test
in
call
xor
cmc
fdivrp
cli
cli
hlt
fmul
xor
in
ljmp
mov
aas
loopne
dec
ss
std
cmp
sti
loopne
idiv
repnz
xchg
lret
mov
loop
icebp
call
cmp
ss
cmp
inc
repz
jecxz
testl
imul
loopne
shlb
in
cmp
cmp
cmp
testl
xchg
xor
jmp
shl
clc
aam
faddl
addb
ret
fdiv
ror
cmp
clc
call
idivb
out
in
fldl
fucom
mov
ljmp
cmp
shl
stc
rcl
mov
int3
mov
sar
in
xchg
fucom
vphaddwd
xor
int
ror
fcmovnbe
into
into
cmp
std
xlat
out
loope
fstl
int
out
ss
fucom
cmp
cmp
clc
out
repz
cli
fcmovu
in
enter
fisttpll
iret
clc
cmp
fdivrl
lret
int3
cmp
rolb
sti
xlat
mov
fnsetpm(287
into
out
out
cmc
shl
hlt
rol
neg
fsubrp
fstp
stc
cmp
stc
hlt
jmp
loopne
in
shl
call
stc
xor
fcmovbe
lock
flds
sbb
out
into
mov
rclb
repz
lret
out
aas
cmp
aas
xlat
repnz
int
leave
fildl
leave
xor
xor
idiv
repz
rcl
sti
filds
std
in
xchg
test
repz
int
iret
out
lock
cmp
repz
aam
xchg
lds
fxch
orl
lret
jmp
jmp
cmp
sti
cmp
loop
xchg
xchg
fisttps
hlt
repnz
aas
repnz
hlt
repnz
into
out
test
std
loop
fcmovnu
int3
test
into
cmc
aad
xor
loop
cmp
stc
xor
cli
cmp
cli
rol
test
and
test
loope
shl
aam
xor
aam
cmp
fistpll
fdivrp
fdivr
ljmp
xchg
rol
enter
sar
into
std
fucomp
loopne
cmpb
sbb
aam
clc
test
out
fsub
xchg
icebp
mov
cmc
xlat
out
shlb
cld
shl
in
rcl
xlat
xlat
not
in
out
mov
out
xchg
addb
rcr
in
clc
aad
lock
sar
and
out
xchg
in
lock
ror
enter
shl
ret
cmc
stc
call
loope
xchg
mov
xchg
enter
fsubr
lock
in
cmp
jmp
mov
iret
or
out
ret
aad
sti
cmp
shr
cmp
shl
ffreep
idiv
addb
into
icebp
mov
fisttpll
clc
mul
repz
lret
repz
cmp
enter
icebp
out
xchg
out
shl
out
cmc
cmc
fucomi
int
xlat
fldpi
int3
int
adc
clc
and
fsin
sar
orb
shr
in
sar
lret
leave
lret
ret
fidivrs
loopne
repz
cli
out
out
les
call
in
ds
push
ds
stc
aam
fdivrl
loopne
cmp
mov
std
xchg
mov
repnz
lock
stc
div
rcl
fstp
lock
in
in
not
out
fmuls
lret
xchg
loopne
jmp
icebp
in
aaa
hlt
jmp
repz
shl
out
loope
test
out
jmp
shl
in
lret
ss
xor
fdivrl
sti
shl
fdiv
idiv
test
jecxz
mov
loope
bnd
divl
ljmp
test
inc
movsb
jmp
enter
int
int3
lret
xlat
ja
lea
add
add
clc
clc
ljmp
cmc
repz
jmp
loope
xchg
orl
ljmp
ret
fxch
les
xchg
shll
int3
into
clc
lret
inc
cmp
rol
ret
cmp
addl
rclb
leave
xor
fcmovnu
sarb
aam
cmp
ds
loopne
fcmovnu
lret
in
lret
ljmp
call
fdivr
idiv
ds
hlt
fscale
xchg
stc
in
out
fstp
int3
lea
in
mul
cmp
ffree
cld
in
int3
or
cmp
int3
leave
fucomip
test
faddl
aam
shl
jmp
ret
rcr
idiv
roll
fcmovne
jecxz
int3
mov
shlb
icebp
cmp
cs
icebp
fmulp
lret
cmp
iret
fmull
and
loopne
out
into
rcl
aaa
lock
call
fucomi
int3
xor
fdiv
fmulp
and
mov
cld
fiadds
aad
cmp
aad
hlt
ret
fdivr
call
call
shr
in
aam
jmp
out
into
fbstp
stc
stc
shl
fsub
iret
out
rcr
loop
cmc
in
xchg
iret
call
out
xor
ljmp
jecxz
mov
out
in
sti
out
xchg
xor
stc
enter
neg
cli
repz
fmuls
out
iret
repnz
leave
clc
cmp
cld
sarl
cmp
ror
testl
mov
lret
imul
xlat
xor
sarb
cmc
std
sarb
in
mov
add
mov
xchg
mov
in
test
div
ds
fmul
xchg
out
mov
lret
int
out
ret
in
cmp
int
ror
sarl
out
ds
mov
sti
fimuls
lret
das
xor
jmp
fcomi
loop
ret
fsqrt
enter
loope
jmp
out
jmp
call
out
lret
in
jmp
cli
in
call
rol
imul
fcmovnbe
hlt
call
sub
aad
ljmp
hlt
in
repz
ret
lock
test
cmp
cld
ljmp
mov
xchg
out
in
repz
cmp
int3
enter
out
leave
aam
cmp
fcmovb
fdiv
test
xchg
aad
in
stc
fld
leave
std
sti
fucomp
rcl
rol
test
mov
or
in
into
out
ljmp
cli
aad
stc
xor
sbb
cmp
fucomp
sti
enter
xchg
filds
jmp
lret
repz
cmp
fndisi(8087
repz
flds
enter
fsubrp
repz
fucomi
iret
fdivr
std
lock
into
loope
cli
cmp
sar
loope
test
les
cmp
xor
jmp
hlt
les
xlat
repz
jmp
std
cli
cli
cmp
call
out
jmp
jmp
loop
out
ret
leave
flds
xchg
repnz
in
and
leave
sti
loope
fst
xlat
loop
lock
ret
fisttps
int
rolb
cmc
cmp
lock
into
repnz
fcmovb
out
repnz
mov
xchg
cli
fiadds
aam
int3
jmp
int
jmp
xor
rolb
jecxz
out
sub
out
in
shl
in
xlat
aaa
clc
in
call
neg
out
in
hlt
enter
enter
fucomip
mov
in
sti
std
shl
shl
shl
ds
loopne
neg
lret
enter
bnd
cmc
int3
lret
ljmp
fdiv
cli
out
lock
jmp
rcl
shl
in
shll
loop
cmp
aad
fcmovnu
lret
testl
les
lock
add
test
orl
lock
in
fidivrs
repnz
in
ret
clc
aad
mov
rcl
lock
lret
in
fadd
repz
fldl
out
xor
test
out
enter
lock
aam
enter
clc
fpatan
cmp
int3
into
in
cmp
sar
filds
loope
loope
inc
clc
mov
mov
xor
add
mov
lea
jmp
rol
lret
ffree
aam
mov
mov
ror
push
jp
add
add
ror
testb
ss
cli
out
loopne
fildl
clc
ret
mov
out
loope
aad
shlb
ss
repz
fcomp
sarb
jecxz
fadd
addl
out
out
loop
leave
cmp
lret
adc
vaddsubps
div
in
cld
out
in
iret
and
fsubrp
xor
bnd
into
jmp
enter
fdivr
sbb
mov
leave
mov
fiaddl
loop
mov
xor
repnz
repnz
iret
out
int
adc
fmuls
cli
leave
enter
xchg
repz
cmp
repnz
clc
not
out
flds
sti
decb
sar
and
repnz
out
iret
fcomi
fcomp
clc
fstp
fdivrp
in
clc
add
fucomi
in
sbb
repnz
lret
cmp
jmp
into
in
fcom
fcmovnbe
xchg
jmp
lret
xchg
sub
fnstenv
aad
lret
call
fchs
addb
test
xchg
mov
cmc
fisttps
out
cmp
stc
ds
hlt
ret
rcl
rolb
loopne
xlat
xchg
iret
xlat
rol
lds
lret
repz
and
test
stc
in
cmc
out
int3
iret
in
mov
xor
cmp
in
ljmp
fsubp
cmc
incb
out
nop
in
in
jmp
leave
fnstenv
in
cmc
hlt
cmp
clc
jecxz
incl
test
leave
out
enter
cmp
loop
fistpll
in
fpatan
mul
mov
stc
mov
loopne
ret
clc
xor
xor
sarb
jmp
orl
repz
xlat
cmc
in
icebp
cmp
out
cmp
shl
flds
in
mov
fsubr
aam
aam
in
ror
lock
fstp
in
stc
jecxz
iret
in
shl
fnstsw
cld
fucomi
in
fdivr
call
ret
loope
not
shr
icebp
repz
icebp
int3
jecxz
xchg
cmpb
loope
mov
lret
test
enter
ret
iret
aad
fcmovbe
in
out
fsubp
adc
sti
jecxz
mov
enter
cmp
sub
ret
hlt
test
in
in
jecxz
in
cld
out
out
mov
out
in
enter
in
xlat
rcl
sti
fsub
ret
int3
leave
testl
lock
ljmp
xlat
shl
jecxz
fsubr
fdivr
int
fsubp
out
hlt
and
mul
int3
out
xor
in
repz
out
loop
test
xchg
icebp
lock
xchg
jecxz
int
xor
sarb
in
enter
mov
mov
test
cmp
cmp
out
cmp
aad
int
movb
cmp
fists
sub
sti
ss
fldl
test
cmp
mov
addb
cli
xchg
cmc
shl
in
icebp
call
fcmovu
loopne
test
in
cmp
out
mov
sbb
jmp
cld
fildl
rolb
idiv
in
mov
ret
lret
test
lock
shl
cli
leave
xor
cmp
test
in
in
vpaddd
out
call
repz
xor
aad
call
jecxz
ret
jmp
xlat
and
ljmp
shlb
enter
repz
ds
fdivr
test
xchg
icebp
mov
jmp
lock
out
fidivrs
in
lock
repz
repz
sbb
xchg
fmul
into
ljmp
sar
mul
call
loope
shl
pause
xor
fcom
ret
fcmove
cmp
fdivrs
out
jmp
sti
in
jmp
call
fcomp
out
stc
and
cmp
aad
movl
out
hlt
xchg
repz
mov
stc
fcom
xlat
cmp
lret
loope
aam
xchg
mov
in
int3
lea
jmp
fcmovnu
xor
aam
and
leave
stc
jecxz
cli
loope
sti
mov
mul
in
into
aad
cmp
into
jecxz
fildl
leave
lret
xchg
int3
xchg
in
and
jmp
cmp
les
mov
mov
xor
jmp
into
int
xlat
lds
push
das
add
add
call
cmp
into
mov
ror
xchg
xor
stc
call
add
add
sti
in
cmc
cld
clc
leave
jmp
or
mov
out
cmc
into
int
int
leave
ret
cmc
cmp
addl
ficoms
ret
lret
cmc
out
aad
cmp
aad
ret
shl
stc
incl
in
in
enter
hlt
call
sti
in
int3
out
ds
rcr
ds
sar
jmp
addl
shl
fcom
cmp
loope
roll
int
in
mov
out
test
out
iret
div
int3
jmp
push
repz
mov
aam
cmpb
fsubr
fisttpl
shl
rcr
cmp
call
aad
fdecstp
out
clc
cmp
idiv
stc
out
out
out
xchg
leave
ror
stc
std
icebp
ds
cmp
fdivp
cld
test
in
mov
loope
sbb
ss
repnz
in
rcl
aas
lock
ss
fdiv
hlt
xchg
mov
loop
out
out
call
adc
fsubp
xlat
hlt
fildl
mul
movb
iret
ror
fsubr
ljmp
sti
ss
jecxz
out
idiv
mov
fsubrp
iret
in
loope
out
iret
jmp
icebp
stc
rcl
shl
out
xlat
stc
aad
fabs
xchg
fisttpll
imul
rcr
fcmovnu
fnstcw
aaa
cmp
movb
jmp
enter
jmp
xor
adc
ds
enter
lret
xchg
rolb
in
cmp
aad
fprem
out
ret
fucomp
cmc
incb
ror
rcll
ret
sti
icebp
into
loopne
leave
cmp
mov
faddl
icebp
out
ror
in
call
leave
shll
call
jecxz
lock
out
repnz
in
mov
nop
mov
shr
ljmp
repnz
xor
incl
fldl
lret
call
in
ss
in
cmp
or
cmp
sarb
clc
cmc
fucom
jecxz
nop
sbb
sti
xchg
std
xor
out
xor
cmp
hlt
and
std
mov
ret
in
int3
mov
das
aam
enter
out
fcmovne
repz
cmp
roll
testb
shl
in
stc
mov
aaa
ds
cmc
shl
cld
les
jmp
out
enter
aam
sub
hlt
ror
std
cld
loopne
in
cmp
fcompp
aam
rol
mov
int3
jmp
imul
jmp
out
xor
cmp
cmpb
out
sbb
stc
jecxz
mov
int
cld
xchg
fcom
out
in
in
ljmp
jecxz
div
jmp
int
mov
icebp
out
mul
das
ret
clc
lret
cmp
repnz
jecxz
cmc
loope
jmp
lret
mov
std
fmul
sar
in
shl
cmp
aad
cmc
cmp
aas
aam
in
xlat
cmp
fadd
fcmovnbe
stc
into
mov
call
lock
shlb
iret
xlat
icebp
in
div
loopne
sub
adc
mov
icebp
xchg
das
xor
hlt
out
ror
neg
aam
ss
cmc
out
loope
jecxz
fcmove
jmp
mov
int
jecxz
lret
cmc
xlat
out
cmp
idiv
hlt
repz
mov
mov
xchg
icebp
out
shr
clc
rcl
aas
test
jmp
mov
into
lock
cmp
in
cmp
hlt
lret
addb
ljmp
in
test
clc
icebp
fdivr
lret
xor
xor
into
fdiv
aas
sti
in
aam
xchg
jmp
fisttps
loope
sub
idivl
fcmovnu
iret
enter
cmp
mov
hlt
ret
out
mul
and
sub
cmp
shl
fsubr
aam
adc
out
add
stc
repz
not
into
fcomip
call
in
int3
jecxz
stc
xor
aam
shr
clc
decb
neg
mov
jecxz
sti
std
std
out
jmp
xor
enter
repz
cmc
idiv
out
xchg
xchg
lret
fucomp
xchg
hlt
in
ret
xor
out
enter
shr
fsubrp
out
cmp
sti
jmp
call
leave
loope
call
add
mov
jmp
ret
int3
int
ret
leave
pop
cs
cmpsb
xor
jle
add
out
aam
cli
test
adc
loope
sti
loop
loop
fildl
adcl
div
lret
sbb
fdivr
out
repnz
jmp
mov
loope
orb
fdivr
hlt
std
aas
cld
std
hlt
xor
sbb
mov
sti
lock
fdivr
in
loopne
int
repnz
div
enter
ds
testb
test
rclb
repnz
roll
fcmovu
fadds
ftst
fmull
ss
lret
int
hlt
hlt
repz
clc
les
jmp
in
cli
sub
and
ret
aam
lret
testb
cli
jmp
mov
jmp
mov
cmp
aaa
out
fdivrl
stc
rolb
cmc
repnz
fchs
in
iret
and
aam
shl
cmc
out
rcl
frndint
cmp
repnz
iret
shl
roll
icebp
cli
lret
div
out
loope
iret
repnz
aad
xor
rcr
sar
aas
stc
sti
repz
jecxz
xchg
fxch
out
in
sub
repz
cmp
aam
int3
out
addl
jecxz
cld
int3
iret
out
lret
into
in
xlat
in
loop
in
fadd
loope
hlt
lds
icebp
stc
rolb
loop
hlt
lock
in
stc
hlt
std
fucomi
call
in
int3
loop
icebp
addb
fnstcw
sar
in
loope
idiv
rcl
out
cli
fdivp
jmp
orl
loop
sub
xor
repz
rcr
ret
in
mov
lret
out
and
lock
and
sub
test
into
ret
fcomi
test
sbb
lret
jmp
std
into
loope
repnz
xor
shl
xor
fadd
std
lock
movb
xchg
adcb
in
jmp
sar
fdivp
enter
loopne
in
leave
out
ljmp
fsubr
int
xor
icebp
and
cmp
cli
cld
int
jecxz
decb
aam
shll
into
cmp
xlat
loop
in
fld
in
cld
jmp
aad
xor
in
lret
enter
ljmp
incl
out
mov
int
jmp
int
fcmovne
faddp
sti
out
int3
ret
out
testl
lock
loope
shll
out
cmp
int
neg
cmp
sarb
in
imul
ret
in
mov
fldl
xor
hlt
shl
cmp
xor
ds
cmc
mov
icebp
mov
repz
lret
leave
fsubp
icebp
cld
ret
fdivrp
fdiv
rcr
leave
out
sti
mov
xchg
imulb
int3
fcmovbe
ret
cmp
rcl
jecxz
fmul
xchg
clc
int
loop
adc
rol
xor
cmp
in
jmp
cmp
in
aad
clc
rorl
lret
shr
jecxz
mov
aad
loop
clc
jmp
out
iret
into
in
cmpb
fadds
cli
xlat
mov
xchg
clc
in
into
clc
enter
ds
aad
fiaddl
in
mov
xchg
loope
leave
ljmp
in
cmp
in
les
addl
mov
shl
mul
shl
jmp
loop
aas
xchg
loope
cmc
fdivr
fcmovne
xchg
int3
mov
hlt
ret
repz
das
iret
leave
sar
repz
aas
shl
loop
mov
xchg
xchg
jmp
iret
lret
repz
call
shl
shr
shl
loopne
ret
in
cmp
mov
fiadds
not
in
aam
enter
cmpb
shl
out
out
clc
inc
icebp
faddl
aas
xor
icebp
lret
fsubr
fcomip
sti
repnz
loop
clc
test
stc
aad
jmp
ficoml
pushl
fmulp
aad
clc
cmp
clc
loop
shl
cld
fmull
enter
hlt
call
out
iret
out
loopne
in
test
hlt
out
int3
mov
shr
out
cmc
in
leave
cmp
cmp
adc
std
loope
fmul
in
loopne
sub
jmp
jmp
int
ds
into
sarb
call
cli
enter
xchg
push
mov
jmp
aam
ror
fcomp
aam
aas
idivb
cmc
cld
cmp
jle
add
fiadds
int
sti
jmp
dec
test
hlt
jecxz
fstp
rcr
int3
cmp
out
repnz
xchg
in
repnz
cli
f2xm1
in
std
add
cmp
rol
aas
ret
and
leave
fmulp
cld
mov
int3
shl
fstpt
cmp
jmp
fucom
ret
aas
call
cli
leave
out
fadds
out
loopne
cmc
jmp
loopne
lret
cmp
rcr
rcr
ret
push
lret
aad
in
fsub
fndisi(8087
call
hlt
xor
idiv
divb
xor
fcmovnbe
fld
jecxz
add
mov
xchg
incl
out
in
xor
int3
fnstcw
fdiv
cli
add
hlt
enter
sti
out
fsubrp
dec
xchg
int
fsubrl
shl
xor
loope
incl
std
cmc
fcmovne
std
orl
loope
ss
ss
call
cmp
clc
jecxz
sub
mov
mov
jecxz
addb
xor
lock
fadd
fiadds
orl
std
iret
ljmp
xlat
iret
xlat
out
int3
faddl
ds
vpaddsb
nop
fucomip
lock
in
jmp
ret
cmc
jmp
xor
ret
cmp
sbb
rorb
lret
test
call
lock
cmc
and
out
sti
mov
in
icebp
aam
ljmp
out
shl
loope
aad
faddp
ret
xchg
jecxz
mov
fisttps
mov
stc
stc
jmp
lret
cmp
addb
cmp
mov
xchg
mov
out
in
hlt
in
xor
cmp
icebp
loop
iret
incb
cmp
in
fcmovbe
cmp
in
sti
ss
cmp
in
out
loopne
cmc
ret
out
rolb
out
fsub
test
sub
sub
in
out
enter
and
out
cmp
cmc
aad
std
test
loope
lock
out
fsubrs
jmp
fcmove
out
icebp
iret
cmp
lock
rcl
aad
add
repnz
test
rol
xlat
into
cmc
cmp
aas
aam
in
icebp
cmc
aas
loop
clc
fsubr
fxch
orb
xor
fdivrs
out
hlt
dec
call
fcmovnb
filds
fcomp
clc
nop
xchg
into
shl
repz
ret
iret
cmp
hlt
xlat
icebp
xlat
cmp
clc
dec
clc
mov
jecxz,pn
sti
in
shl
fdivrp
xlat
fcmovnb
ds
hlt
aas
jmp
and
mov
leave
xor
sti
call
aad
int
aad
loop
enter
xchg
int
test
clc
in
icebp
cmc
out
fdivrp
cld
fdiv
ds
jmp
in
testl
stc
sub
int
out
int3
shlb
aas
imul
add
sarb
test
ljmp
in
repnz
out
sti
int3
out
lret
fdiv
hlt
out
and
loop
adc
jmp
int3
add
clc
shlb
in
cld
idiv
in
sar
div
clc
loopne
enter
lret
fisttps
fdivrp
adc
test
testb
repnz
xchg
les
mov
rcl
in
rcr
ss
loopne
div
loope
int
stc
in
or
xlat
jmp
test
aam
cs
shr
in
fnop
fstp
fnsave
clc
loop
mov
test
lock
loopne
clc
iret
repnz
hlt
jmp
fsincos
ret
rcr
mov
faddp
mov
iret
enter
out
mov
call
iret
cmp
fadd
in
jmp
clc
fcomip
push
fscale
in
in
xchg
mov
cld
fsub
rcl
cmc
cmp
fdiv
fsub
cmc
fsub
xchg
mov
loop
xchg
loope
xor
aaa
jmp
stc
add
clc
addb
jmp
lret
xchg
xchg
jecxz
das
shll
jmp
xor
xlat
not
clc
shl
loop
aam
out
call
out
add
loop
sarl
mov
cmp
loope
ds
mul
cli
fdiv
in
xchg
jecxz
les
sarl
out
lret
neg
std
shr
rolb
or
in
into
xchg
lock
not
int3
int
cmp
shlb
shl
rol
idiv
shr
jmp
xlat
xchg
in
adcb
xor
repz
into
xlat
clc
loopne
cmp
xor
add
push
mov
push
jmp
ret
rcl
aam
ret
sarl
bound
and
add
add
enter
out
ljmp
stc
out
xor
idivl
fdivr
loopne
shl
repz
lret
jecxz
fcmovne
mov
xchg
test
icebp
ret
cli
aam
cmp
rcr
ds
aam
loopne
clc
xchg
enter
sub
fcom
jecxz
shl
cmp
out
ffree
out
loopne
rcl
mov
decb
xchg
int3
loop
sar
cmp
loope
lock
out
mov
jmp
lret
into
sti
xor
hlt
cmp
adc
in
xchg
aas
inc
int3
jmp
fcomp
lret
mov
out
in
xor
int
test
lock
cld
aas
sarb
cmp
out
test
les
hlt
xor
aad
inc
fprem1
call
sub
loop
mov
in
in
jecxz
cli
std
imul
enter
clc
fdivrp
repnz
sbb
loopne
jmp
fninit
lret
mov
xor
cs
in
aad
cmp
ret
ret
in
fsub
enter
in
lea
jecxz
shr
iret
aaa
int3
shr
test
cld
cmp
cmpb
jmp
filds
std
neg
fincstp
ret
xor
iret
fcmovnbe
hlt
jecxz
loop
loope
loop
fadd
loope
shl
in
ror
repnz
aam
repz
cld
std
int3
fcom
ret
rol
repz
mov
mov
in
out
sti
xlat
enter
into
cmp
sti
repz
ljmp
out
xchg
in
cmp
cmp
hlt
lock
aam
out
xlat
jecxz
aas
neg
sbb
stc
movb
aad
out
cmp
in
cmp
call
lock
fnstsw
rcr
std
hlt
faddl
iret
out
out
nop
out
shll
out
divb
icebp
stc
icebp
rcl
rolb
aad
lds
xchg
lock
out
xor
shr
rcl
sarb
repnz
repnz
test
cli
and
stc
fcoml
shl
fdiv
fptan
fst
int3
xor
test
addb
mov
std
incl
loope
cmp
shl
into
jmp
in
test
out
ljmp
cmc
test
in
xlat
lret
cmp
call
cmp
test
mov
out
out
xor
cmp
leave
cmp
sarb
cld
roll
out
out
fcmovnb
fmul
std
jmp
imul
in
cmp
enter
into
icebp
loop
stc
test
flds
lret
mov
std
jecxz
out
repnz
xor
not
shl
cmp
xlat
out
sar
sti
mul
ds
loope
stc
and
adcb
shl
ljmp
faddl
repz
ror
shl
int
ret
clc
out
aad
hlt
rcl
in
loop
fcmovu
jmp
adcb
fsub
iret
das
fmul
cli
testl
jmp
mov
mov
cmc
fcmovbe
cmp
cli
cmp
shr
hlt
fistpll
idiv
call
test
loope
hlt
icebp
mov
leave
xor
clc
xor
jmp
mul
roll
ljmp
loop
lock
xlat
div
out
xor
aam
xor
xlat
fcmovnbe
test
not
lret
test
leave
fmul
iret
sar
repnz
jmp
in
xchg
sub
in
mov
lret
mov
clc
lret
fnsave
xlat
fcmovbe
shl
ds
std
cmp
fsub
call
in
out
adc
int3
aaa
cmp
shr
rol
lock
sar
call
jmp
ror
xchg
xchg
in
fnstenv
xor
out
out
roll
out
mul
std
out
leave
ljmp
cmp
cmp
loop
into
cld
into
fstp
aas
mov
jmp
mov
mov
notb
enter
ds
fdiv
sar
testb
incl
roll
lret
cli
int3
test
sbb
jmp
xchg
orl
nop
repnz
not
xor
aad
cld
cmpb
call
ljmp
out
inc
xor
fptan
lds
fdivrs
repz
mul
repz
incb
int3
int3
sub
lret
sub
aaa
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
jmp
sarb
ret
enter
fldl
jge
sub
jle
sub
add
add
idivb
cmp
shr
cmp
jmp
test
stc
sbb
jecxz
int3
jecxz
jmp
rcr
aam
lock
xchg
and
leave
nop
out
in
shr
jecxz
out
lret
lret
xor
cmp
sarl
loopne
jmp
sub
loopne
mov
mov
hlt
in
cmp
sti
aam
xchg
clc
cmp
or
fcmovne
lret
hlt
xchg
xchg
shr
cmc
cmp
lret
clc
cmp
aam
shl
flds
cld
mov
lea
out
aaa
jmp
icebp
out
int
repz
in
in
or
int3
jmp
loope
ret
stc
ror
dec
repz
sbb
sbb
out
mov
in
nop
in
out
xlat
call
int
iret
aas
icebp
icebp
in
std
testb
fmull
std
jmp
jmp
shl
ror
repnz
fcom
test
orl
ljmp
in
xor
fadd
mul
aam
faddl
mov
or
jmp
fcmovnbe
std
cmp
clc
rcr
stc
icebp
not
cmp
enter
call
loop
sar
lret
lret
das
jmp
xor
sar
xlat
aad
xchg
rol
std
fmull
adcb
fnstsw
xlat
fcom
into
cmp
and
cmc
in
aad
fucomi
xchg
xchg
std
loopne
loop
out
icebp
leave
sti
not
ljmp
rcl
fldl2e
jmp
repnz
fdivrs
call
iret
out
aad
ror
vpmaddwd
jmp
lret
loopne
ficoms
clc
aad
idiv
ds
stc
cmc
out
add
testb
leave
loop
out
xchg
repz
int
idivl
jmp
test
loop
fidivl
faddp
xchg
mov
mov
out
loop
nop
out
into
jmp
int
ds
cld
jecxz
fdivrl
ret
clc
shl
fiadds
loopne
rclb
clc
xor
vpsubd
out
cld
cld
sar
out
roll
jecxz
lret
xchg
repnz
fcomp
jmp
hlt
cli
loop
test
xchg
rcl
cld
idiv
xchg
rcll
fcmovnbe
call
ffreep
jecxz
stc
aam
fildl
ret
fldl
out
xor
cld
repnz
shl
clc
xor
testl
xchg
repnz
add
out
fstpt
fstp
cld
sti
cmp
in
add
ljmp
mov
fstl
sub
sar
rcr
faddl
loope
lock
cli
cld
mov
hlt
int
jmp
sub
aaa
sar
test
xor
fucom
test
int
iret
out
ss
fucomp
imul
flds
cmc
ret
jmp
xchg
decb
shl
loope
out
lock
std
lret
fdivrs
test
icebp
out
jmp
fmuls
mov
leave
into
in
in
sti
aad
sti
clc
into
ds
icebp
cmp
in
jecxz
xchg
out
mov
mov
ret
aam
idiv
xor
cli
cmp
jmp
roll
test
fsub
jmp
fisttpll
enter
cmp
enter
cmp
addl
leave
ljmp
xor
lock
ror
not
xorb
cmp
out
fst
jmp
mul
xchg
hlt
sub
xor
hlt
lret
divl
cmp
aaa
xchg
rcr
out
movl
mov
icebp
repz
enter
cli
cmp
aas
adc
sti
int3
lret
fstl
rcll
vpsubb
out
fidivrs
repz
cmp
out
fcmovb
mov
mov
shrl
cmc
stc
rol
fucompp
cmp
out
mul
test
cmp
fldl
xchg
aas
out
in
xor
iret
cmp
out
cld
cmp
fdivr
loopne
fcom
or
out
loop
jmp
cmc
xor
shr
cmp
loope
into
out
test
fld
mov
fmull
int
lock
aam
ret
leave
xor
jmp
fstpt
xchg
repnz
cmp
loope
test
iret
jmp
lret
cmp
cli
iret
cmp
loope
fdiv
in
icebp
cld
xchg
sbb
repnz
loop
inc
in
mov
mov
push
pop
sub
add
mov
jmp
ror
fmul
fcomp
fcmovnb
aad
jp
loopne
push
jle
add
add
in
out
jecxz
in
clc
into
clc
ds
fstp
lock
loopne
aam
roll
call
xchg
cmc
stc
repnz
cmp
shl
stc
fdivp
sti
loopne
in
loop
mul
mov
sub
in
fildll
xor
xabort
ss
aas
cmp
adc
enter
into
mov
cli
xchg
icebp
ret
stc
iret
cli
cmp
cmc
cld
cmp
cli
clc
cmp
test
jmp
xchg
xor
stc
ret
aaa
xlat
jmp
xchg
fdivr
sti
decl
out
xchg
sbb
ljmp
fnstsw
shl
std
sti
repz
test
jecxz
loope
lock
test
in
int
cli
dec
aaa
faddp
clc
clc
repnz
hlt
loope
fsub
fisttpll
aas
shr
shlb
fidivs
sti
cli
jmp
loopne
ljmp
in
out
cmp
aaa
aas
and
out
loope
sar
leave
fstp
jmp
jecxz
in
nop
in
stc
iret
aad
cmc
fucomi
cli
cmp
out
out
shl
rcr
sub
in
mov
test
xlat
shr
jmp
repz
icebp
cmp
testb
in
mov
in
fbstp
ljmp
adc
ds
test
out
cld
jmp
nop
incl
rcl
xor
xor
fstp
fdivrl
leave
loopne
repz
repz
cmc
test
fsub
mov
rcl
testb
jmp
div
cmp
fsub
std
aas
cmc
rcl
stc
flds
mov
ljmp
out
out
cld
cmp
repnz
mov
int
lock
ror
in
loopne
cmp
fmul
in
cmc
clc
fld
aam
rcr
orl
mov
xchg
in
xor
ret
das
out
call
cmpb
neg
ret
test
repz
in
loop
xor
std
rcr
std
cmp
aam
cld
iret
aam
loop
in
clc
cld
jecxz
mov
sub
lock
hlt
fidivrl
icebp
loope
repnz
addb
out
mov
sub
adc
hlt
clc
into
lret
jecxz
in
aaa
not
fmulp
into
xlat
xchg
adc
clc
test
in
ljmp
test
neg
not
call
ljmp
fdivrp
fadd
mov
decl
int
ss
loopne
xlat
fadds
hlt
ret
fmul
xlat
call
cmc
xchg
mov
sub
ret
int3
call
cmp
aas
aad
mov
out
aas
mov
jmp
jmp
fcomi
stc
ds
inc
add
call
test
ljmp
ljmp
xor
jmp
xchg
test
in
xchg
loope
test
fdivr
fld1
xor
shr
repz
fisttps
cmp
fisttpl
aad
icebp
leave
test
into
shlb
shr
repnz
fucomip
mul
jmp
fisttpl
ljmp
lock
lret
add
repz
mov
call
mov
decl
icebp
clc
fcmovnu
ljmp
loop
fdiv
clc
leave
fsubr
stc
mov
xchg
das
repnz
cmp
aad
aas
repnz
sti
leave
in
fnclex
and
std
mov
lret
out
cli
sar
cld
jmp
testb
cmp
ret
and
loop
iret
iret
mov
lret
ror
out
int
jmp
fdivr
vpmaddwd
ljmp
jmp
mov
in
repnz
cli
out
xlat
cmp
cmp
sarl
aam
idiv
ljmp
fiadds
jmp
jmp
cmp
cmp
fprem1
cmp
xchg
repz
fucomi
sbb
lret
mov
xor
out
fdivrs
repnz
repz
rcr
ffreep
into
enter
in
int3
out
ret
ljmp
aad
out
icebp
cmp
mov
mov
lret
rorl
clc
stc
fstpt
lret
std
fcmovu
stc
testl
clc
cld
jmp
out
fcomip
in
int3
test
fnstcw
int3
lock
cmp
rcl
loop
cmc
fcmovu
fdiv
lret
jmp
xor
out
fidivrs
stc
into
cmp
clc
rol
test
hlt
mov
xor
lea
cmp
jne
jmp
int3
int
fstp
cmp
pop
pushf
sbb
int3
add
add
inc
enter
sar
xor
fnstenv
aaa
cmp
icebp
out
jecxz
rol
fdiv
rol
stc
test
fucomi
cld
fmul
rcll
aad
cli
fidivrl
cmc
stc
cmc
sti
out
fdivrp
in
sti
leave
in
mov
in
jmp
in
repnz
test
into
cmp
xor
idiv
in
jecxz
sar
fadd
ljmp
fucom
fiaddl
loop
aad
cli
into
clc
rcl
cmp
in
test
int
in
icebp
mov
aas
jecxz
hlt
aam
cmp
adc
adc
aam
stc
jmp
fsubrp
repnz
xor
aam
das
iret
out
fiadds
stc
stc
stc
std
lret
mov
adcl
shlb
in
cmp
fldl
xchg
repz
cmp
call
sarb
lret
aas
shll
xor
lret
ljmp
out
xor
int
lock
in
aas
in
out
ret
hlt
xchg
xlat
clc
lds
orb
ret
fldl2e
frndint
rcr
cmp
incl
cmc
ds
rorl
rcl
ret
aaa
out
clc
enter
rcl
cld
cli
aas
rcr
flds
fistl
xchg
out
into
cmp
int
out
hlt
in
flds
fcomip
xchg
xchg
std
icebp
ret
sar
int3
loope
aad
loop
into
xor
rcl
out
cmp
idivl
icebp
out
out
in
lea
xor
ss
out
cmp
cmc
aad
sti
out
loope
xlat
loopne
in
fsubp
int
nop
xchg
repnz
xor
loopne
idiv
int3
fucom
fsub
jecxz
in
leave
out
clc
mov
mov
in
cmp
in
xor
cmp
xor
cld
fsub
nop
out
mov
mov
xor
iret
repz
cmp
loop
into
in
jecxz
test
jmp
out
loopne
into
cmp
ss
cmp
incl
aam
testb
mov
jmp
cmp
out
xor
adc
lock
mul
xchg
jmp
fmulp
test
sbb
in
ljmp
icebp
icebp
rolb
xchg
jecxz
in
xchg
jmp
xlat
sti
in
hlt
jmp
hlt
lock
std
adc
idiv
cli
mov
mov
xchg
aaa
xor
clc
jmp
fidivl
and
fnstsw
out
ret
cld
test
xor
mov
loope
out
xchg
lret
fdivr
aaa
ljmp
call
or
iret
int3
divb
shr
sarb
div
aas
div
lock
cmp
repnz
fdivrp
cli
adcb
out
cli
cmp
aam
hlt
into
loop
faddp
ret
lret
fisttps
fisttps
test
rol
out
std
loopne
fsubr
fcompp
sti
mov
fcmovnbe
xchg
mov
jmp
sarb
out
lret
int
in
stc
sti
in
icebp
stc
cmp
xlat
xlat
jmp
fcoml
loope
xor
jecxz
idivl
ljmp
test
out
cld
mov
lret
test
addl
sti
fsubr
shl
in
test
cmp
mov
into
out
addb
call
int
aam
cmp
icebp
ret
aas
sti
xor
nop
cld
mov
cmc
int
cmp
idiv
loopne
shr
int3
filds
fucom
fstp
xchg
cld
fiadds
xor
jecxz
cmp
in
cmp
xor
in
sbb
fcomp
dec
mov
cld
test
lret
clc
aad
lret
xor
hlt
std
aad
shl
fsub
out
jecxz
mov
call
sar
test
xor
ss
lret
aad
cmp
fidivs
int
icebp
add
leave
cli
out
mov
test
in
nop
aam
repz
loop
cld
fcmovnbe
cld
sar
rcl
out
clc
aad
testb
mul
xchg
hlt
lock
lret
sti
ds
test
in
in
fiadds
mov
enter
lret
cmp
std
sar
cmp
jmp
xchg
out
xor
xor
rcr
loopne
icebp
std
in
xchg
aas
mov
int3
int
int3
out
jmp
adc
lock
out
aaa
int
out
mov
pop
jmp
iret
xlat
rcl
rcr
lret
push
cmp
aad
loop
pop
stos
roll
jle
add
loope
icebp
fdivrl
shl
mov
std
xchg
shr
fucomp
aam
stc
cmp
faddl
std
test
out
xchg
lret
sti
fmulp
mov
jmp
aas
ss
shll
sbb
sar
lret
stc
jecxz
out
loopne
xchg
xor
out
clc
lret
ljmp
ds
fisttps
fisttps
out
in
repnz
jmp
enter
cmpl
cmp
loope
lret
test
mov
test
jmp
ljmp
loopne
out
repz
int3
fucom
nop
in
loop
loop
out
cmc
jecxz
into
call
lock
fdivrl
rcr
fcmovbe
faddl
fdivp
rorb
sar
aam
fsubr
rcr
loopne
int
xchg
fildl
out
fisttpll
ret
cmp
ljmp
shr
sti
add
icebp
std
ret
mov
xchg
test
sar
ror
stc
cmp
int
cmp
fcomip
call
out
jmp
out
mov
std
nop
lret
enter
aas
fdiv
aad
enter
hlt
filds
jmp
test
lock
out
imul
rcl
repz
cmp
lock
xlat
cmp
leave
fsubrp
aas
fsub
xor
loop
decl
idivb
xor
repnz
in
fcmovu
aas
test
jecxz
ret
fsubp
cld
xchg
call
repz
aam
cmc
ret
test
fcmovbe
mov
out
fdivp
in
loop
aad
xlat
jecxz
cmp
repnz
fdivrl
ret
mov
in
fiaddl
repnz
lds
in
hlt
ror
fiadds
std
test
clc
test
enter
std
fisttps
xor
aad
fcmovnu
out
int
clc
not
iret
call
testl
cmp
cmp
cmp
int
fcmovnbe
aad
in
sti
call
ror
fcmovnu
stc
fucomip
shl
int
out
loopne
faddl
or
das
shl
aad
neg
lret
cld
lret
jecxz
loopne
rcr
repnz
dec
test
into
lret
mov
rcr
aaa
fucomp
cli
rcl
imul
loope
rol
in
loop
loopne
jmp
jecxz
in
repnz
ss
fnsetpm(287
stc
lret
xor
std
in
sub
lock
cmp
icebp
mov
dec
mov
xor
idiv
in
xor
int3
cmp
cld
cmp
shl
fdivp
std
mov
in
jmp
in
rol
div
aam
out
in
aam
clc
rcl
mov
ret
enter
xchg
mov
shl
out
aaa
fchs
std
aaa
cmp
rcr
xlat
roll
jecxz
and
xor
shr
out
int3
rcr
loopne
jecxz
ffreep
jmp
lret
ljmp
int
shll
cld
iret
ret
icebp
fadds
fucomip
jmp
out
mov
and
xor
lret
clc
std
aas
jecxz
neg
lock
sti
fcmovnb
enter
repnz
into
lea
leave
cmp
stc
ds
out
sti
cld
ret
repnz
fistl
cli
shr
cli
cld
div
ds
loopne
rcr
out
ret
cmc
out
int3
out
mov
jecxz
xchg
xor
fsub
fld
shl
fdivrp
rcr
int
cmc
ret
ret
in
notb
int
call
fcom
jmp
cli
out
rcl
sar
sti
fcmovu
stc
cli
test
xchg
shr
int3
call
shl
shl
cmp
jecxz
in
cld
repz
in
jmp
fucomip
lret
sub
fdiv
sar
shl
lock
enter
jmp
rol
fcmovnu
mov
hlt
ror
xor
iret
ds
aad
cmc
loop
cmc
ljmp
loope
out
cmc
out
aad
out
std
shl
repz
icebp
test
fcompp
sar
mov
cli
ljmp
xor
shr
cli
xor
aaa
lret
repz
sarl
mov
ret
mov
jecxz
mov
loopne
iret
enter
aas
lret
xlat
aam
loope
cmpb
cld
loop
mov
iret
hlt
mov
repnz
xor
aam
cli
aad
sar
ds
ret
std
cld
out
xchg
loopne
in
out
int3
xor
pop
add
pop
leave
ret
push
mov
jmp
into
lret
rcr
xor
mov
mov
stos
add
jmp
out
aas
stc
out
stc
fucomip
cmc
aad
fcmovnbe
xchg
mov
cli
leave
std
shr
ljmp
icebp
aaa
xlat
call
loop,pt
repnz
ret
or
int
rcll
das
int3
sarl
ljmp
flds
loopne
neg
in
jmp
jecxz
leave
ret
xor
out
cli
aaa
fnstcw
xor
hlt
in
out
fdiv
repz
out
mov
hlt
ror
xlat
in
stc
into
aam
in
jmp
in
sar
fcomip
fpatan
in
fiadds
mov
xorl
ret
cs
cmp
fcomp
shl
out
stc
fdivr
xlat
int3
lret
out
lret
cld
int
test
xor
lock
imul
sar
sarl
hlt
jecxz
icebp
rcr
xchg
dec
out
loope
fsubrp
repz
xor
out
lret
loopne
test
in
test
loopne
xor
in
test
fcmovb
hlt
test
cmp
int3
lock
cld
std
leave
fstpt
mov
lret
out
xchg
out
aad
out
jmp
sar
out
test
cli
out
testl
test
aaa
aas
loopne
out
lret
repz
test
out
repz
out
sub
fimuls
clc
call
out
out
xor
stc
aaa
repnz
call
add
out
lea
ss
cmp
shr
in
roll
mov
enter
sti
loopne
xor
iret
idiv
cmc
idivl
loope
out
mov
xchg
xchg
rorl
aaa
fnop
int
rol
cmpl
movb
out
in
xchg
adcl
cmp
loopne
into
cmc
ds
div
xchg
and
xchg
aad
in
iret
repz
fld1
lret
into
aaa
rcl
cmp
int
test
cli
into
loopne
mov
shlb
xor
stc
repnz
fcmovne
cmp
cld
sarb
mov
call
lea
stc
xor
repnz
cli
fiadds
test
fcmovu
in
test
ror
hlt
xor
lock
aam
xor
ret
movl
icebp
jmp
ljmp
cmp
cmp
addl
in
adcl
out
xor
xor
cmp
and
repz
mov
std
xchg
icebp
out
leave
jmp
ss
sarb
cmp
call
cmp
mov
sti
nop
fsubrp
xchg
das
call
in
aad
lret
out
repnz
cmc
out
mov
in
mov
lret
movb
das
loope
xor
in
jmp
iret
fcmovbe
or
xchg
shl
mov
in
out
out
not
clc
aaa
lret
aam
iret
std
loop
loopne
cmp
lret
mov
call
xor
shll
idivl
adc
lock
lock
leave
in
in
call
aam
cmp
fsubr
ds
jecxz
test
std
fdivp
test
leave
xchg
xchg
jmp
rcr
out
xor
ds
aad
xor
aad
ljmp
orl
in
xor
repnz
aam
ret
xor
mul
jmp
ljmp
jecxz
cmp
aaa
call
fucomp
ret
faddl
sbb
loop
lock
cs
lret
cmp
sub
fdecstp
mov
std
lret
fucomi
mov
in
shl
ror
lret
into
repnz
stc
loop
xchg
loope
out
iret
lock
cmp
cli
cmp
aas
loop
std
loop
test
test
or
xchg
xchg
out
cmc
xor
aaa
rcr
cmp
cmp
rolb
cld
inc
fcom
fsubr
into
in
in
fmull
jmp
into
jmp
in
fprem1
loope
enter
lret
fucomi
xchg
icebp
mov
aad
out
icebp
div
loopne
in
jmp
sti
sar
ror
stc
fcom
or
mov
repnz
leave
out
xor
iret
cmp
into
fmulp
ret
ret
inc
sbb
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
sub
mov
sub
movl
adcl
jmp
mov
fcmovne
jnp
xchg
jb
pop
movsl
mov
fildl
jle
add
cmp
cli
jecxz
cmp
xchg
loopne
out
xchg
cs
rcl
aaa
sarb
jmp
in
stc
cmc
ljmp
test
xor
lret
fldcw
int3
jmp
xor
loopne
test
out
int
ret
lret
xor
mul
jmp
ss
ds
test
cld
ret
clc
fst
jecxz
jecxz
jmp
rol
xor
out
in
fcomip
addb
loop
loop
in
icebp
test
out
fdivs
sar
leave
cmp
clc
xchg
sub
sti
lret
jmp
jmp
icebp
rcl
int
enter
std
in
jmp
xchg
enter
mov
rorb
stc
in
cmp
in
sarb
lock
test
stc
idiv
out
mov
leave
loopne
out
xchg
xchg
loope
ljmp
call
in
repz
mov
rcl
sti
fdivrp
icebp
jmp
iret
xchg
ljmp
vpsllq
cmp
fsubr
test
shl
les
testb
out
in
shll
out
ss
aaa
into
rcl
cli
loopne
repz
cld
mov
or
int
loope
repz
cmp
call
lock
sti
repz
fld
jecxz
mov
mov
lret
out
loope
jmp
fbstp
rcl
icebp
iret
rcr
repz
jecxz
loopne
iret
repz
shl
call
ror
cmp
xchg
xchg
enter
jecxz
xchg
icebp
xchg
into
clc
xlat
jmp
ror
shl
repz
std
div
cmp
sti
decl
lock
xchg
iret
loope
hlt
lret
lret
std
call
stc
faddp
icebp
cmc
test
enter
stc
call
out
in
shrb
shl
aam
aam
icebp
clc
sti
clc
test
mov
mov
lock
bnd
ret
cmp
cmp
loope
cmp
hlt
xlat
jmp
aad
xlat
fsin
jecxz
xchg
jecxz
xor
shr
fstpt
fucomi
aaa
fprem1
jmp
lock
neg
jecxz
testb
in
xchg
icebp
fdivp
xlat
into
jecxz
rol
xor
xor
stc
stc
not
and
ljmp
in
out
aad
repnz
cmc
ss
ret
fcmovbe
ljmp
lock
int3
hlt
cld
out
fcomip
cmp
cmp
test
enter
shl
out
std
call
in
xchg
orb
shl
out
repnz
hlt
aaa
cld
fadds
loopne
clc
ret
ds
test
fstp
loope
xchg
xchg
repz
lock
repz
clc
hlt
repz
testb
fldl
ret
in
leave
cmc
repnz
rol
cmp
and
cmc
fiadds
lock
aad
shl
in
fiadds
or
fmulp
xchg
loope
ror
mov
xor
fdivs
in
idiv
xlat
test
call
addl
out
xchg
mov
shr
lret
aaa
rcr
xor
rcl
cmc
fxch
add
xchg
mov
clc
ret
mov
jmp
repnz
jecxz
cmp
aam
aas
sar
xlat
adc
or
loopne
sti
std
leave
mov
xchg
ss
int
cmp
bnd
cld
cmp
ret
and
int3
int3
into
xchg
leave
repnz
nop
jecxz
xor
in
vpmaddwd
loope
sti
sar
fsub
jmp
fadd
jmp
movl
loopne
cli
ret
cmp
dec
std
mov
rolb
aaa
xor
cmp
stc
cmp
int3
cmc
int3
xlat
out
icebp
ret
mov
repz
out
xor
out
std
out
loop
roll
icebp
loope
xchg
call
neg
ror
ljmp
clc
cli
out
jecxz
ljmp
xchg
aad
rcl
rcr
repz
cmc
xor
fcmovb
cli
leave
std
jmp
rcr
cmc
xor
cmp
enter
aaa
cld
fdivr
lock
out
orb
int
out
rorb
ss
div
repnz
cmp
cmp
ret
ret
sub
lret
out
in
movl
sub
mov
notl
mov
mov
jmp
lret
ror
rcr
lret
fistl
into
pop
filds
jle
add
jmp
call
rcr
shr
loope
sbb
cld
clc
lret
loopne
call
vpsllq
ljmp
aaa
enter
cmp
aad
in
faddl
call
ss
cs
fdivrs
repz
jmp
mov
hlt
aam
xor
leave
out
std
iret
int3
sar
out
xchg
repz
mov
sti
mov
xchg
out
int3
aam
in
fadd
xlat
icebp
idivb
hlt
fldl
inc
hlt
ljmp
loope
icebp
xchg
jmp
int3
xor
ljmp
iret
cmc
fcomi
sbb
vpandn
add
loop
shr
std
out
xor
icebp
ss
cmc
fcomi
cli
sarb
cmpl
idiv
fsub
cmp
xchg
int
add
out
das
in
aas
cmp
roll
mov
cli
rclb
lock
int
repnz
jmp
cmp
shl
cmp
xchg
fsub
sbb
lret
testl
lret
sti
out
xor
and
test
ds
loopne
fiadds
lret
lock
iret
sub
aad
fcmovne
out
aam
in
cli
cmp
into
int
xlat
fsub
in
jmp
xchg
out
decl
int
iret
cmp
loopne
ret
cli
shl
lret
int
iret
ror
in
xchg
jecxz
stc
in
out
xabort
aad
stc
lock
fucomi
aas
fdivr
test
int
int
mov
jmp
loope
xabort
aaa
jmp
cmp
lret
testb
lock
loopne
iret
clc
int3
cmp
out
div
into
into
in
cmp
jmp
sbb
in
jmp
sub
xor
int3
icebp
out
addb
loop
ljmp
xchg
bnd
xchg
mul
in
ss
das
repnz
cld
in
out
lock
add
idiv
call
lret
in
shr
lret
enter
addl
fdivp
std
lret
loope
jecxz
int3
loope
xchg
shrb
xor
neg
enter
test
sbb
test
in
nop
test
call
not
enter
cmp
clc
hlt
sbb
cld
xchg
in
jecxz
jmp
into
sub
call
ds
aad
fcmovnb
out
lea
lock
iret
cmp
sar
ret
loope
out
sti
decb
xchg
rcll
in
out
sti
icebp
cli
aas
ret
iret
cmp
lds
ret
shl
jmp
lret
in
cmc
ss
hlt
cld
std
std
repz
jecxz
fcom
aad
shl
fxch
shl
xchg
xchg
icebp
xor
xlat
in
out
aad
xor
in
repnz
stc
ret
filds
fmull
cmp
fadd
aas
aad
fidivrs
ret
call
mov
mul
iret
icebp
fucompp
hlt
fsubp
aaa
out
lret
xor
xlat
cmc
cmp
cmp
xchg
jecxz
loope
cmc
int3
test
int
in
icebp
fistl
in
out
fsub
xlat
loopne
sar
ds
test
idiv
ror
mov
in
sub
aaa
icebp
faddp
lret
div
loope
fsubp
rol
jmp
into
loopne
sti
xchg
shl
xchg
hlt
shll
hlt
into
fstp
lret
stc
clc
fcmovbe
out
rolb
xchg
ret
div
xchg
mov
enter
xor
out
cmc
loope
xor
roll
lock
sbb
xor
int3
xlat
ljmp
fiadds
leave
ljmp
xchg
out
xor
repz
out
cli
xlat
cmp
fdivr
fsincos
iret
loopne
jmp
test
out
fmulp
loopne
mov
lock
rol
out
in
jmp
jmp
xor
out
jecxz
loopne
aad
fcomp
fxch
test
mov
rorb
into
xor
ds
in
cmp
int3
xchg
cli
test
ror
mov
xchg
or
xor
out
repnz
xorb
into
cmc
shl
rol
in
ljmp
iret
in
faddp
in
cmc
xor
out
cld
lret
sti
aad
xchg
sti
cli
ret
xlat
mov
nop
cmc
enter
repnz
out
shr
lds
add
enter
int
fnstenv
pop
add
stos
add
clc
cld
lret
cmpl
sti
loope
jmp
fsubrp
ljmp
repnz
call
fcomp
lret
loop
fadd
incl
fimuls
xchg
xchg
xchg
icebp
int
aaa
sarb
lock
neg
test
xchg
aas
test
xlat
lret
nop
xchg
in
jmp
xor
iret
cld
cs
lock
iret
cmp
fnstsw
cmc
clc
jecxz
out
out
rcl
repnz
rol
iret
fcom
rcl
neg
fistpll
iret
fndisi(8087
cmpb
loop
lret
stc
fadd
into
test
mov
aad
int3
xor
out
sar
int3
ljmp
in
fiadds
loopne
jmp
mov
in
int3
aaa
ljmp
shl
and
fsubr
lock
loope
out
repz
cmp
sub
in
cld
fadds
xchg
mov
cld
lock
xor
sub
lret
aam
aaa
repz
xchg
repnz
sti
clc
in
jecxz
lret
in
jmp
repnz
fldl2e
idiv
aas
addl
jmp
nop
jmp
or
in
shl
jmp
jmp
testb
shl
fucompp
out
ror
in
cmc
mov
sub
repnz
int
jmp
rcr
cmc
in
in
sti
mov
cmp
call
in
loopne
shl
ds
shl
neg
fsub
fcompp
xor
xchg
in
xchg
xor
ret
int3
in
cmc
xor
in
stc
ret
ret
shr
in
in
mov
jmp
jmp
loop
xor
rol
hlt
lock
cmc
aad
sti
loope
cmp
jmp
mov
xchg
in
out
int3
out
cmp
into
sti
stc
ror
roll
in
xchg
jmp
into
int3
loopne
xor
repnz
call
shl
ret
fsubp
clc
cli
lea
clc
out
cmp
int3
cmp
div
int3
out
cmp
int3
sbb
ljmp
mov
out
ror
jmp
iret
cmp
xlat
int
cmp
and
enter
loope
xchg
xchg
nop
test
loop
cmc
call
call
lock
add
cmp
in
std
iret
fcmovu
test
rol
iret
cli
aam
int3
sar
adc
xlat
roll
out
fmul
mov
loop
pop
das
in
jmp
idiv
repz
incl
lret
xchg
in
out
xor
cmp
aad
repz
in
shl
repz
mov
out
aam
shrb
cli
in
lret
shr
out
out
test
lds
sar
test
mov
hlt
out
loope
xor
repnz
dec
rcl
icebp
out
mov
repz
mov
sub
loop
out
mov
out
jecxz
lock
idiv
cmp
in
and
fisttps
nop
test
in
xor
call
call
rcr
and
repz
repz
ljmp
clc
out
ljmp
test
rolb
mul
fmul
std
repnz
ror
ret
cli
in
into
leave
ds
repz
mov
into
incb
cmc
aam
aad
aaa
leave
jmp
loope
into
rolb
rol
cld
in
lret
int3
xchg
aam
in
cli
iret
xor
out
div
cld
cmp
ret
loop
mov
mov
out
out
aas
lock
std
xor
aas
jecxz
ret
xchg
jecxz
stc
fadds
sub
aam
ret
hlt
repnz
xor
fnstsw
cmp
loope
cmp
addl
fstp
out
lret
neg
aaa
sti
aad
int
rcr
icebp
f2xm1
std
jmp
call
jmp
repnz
int3
cld
cli
fidivrs
adc
cmc
out
fcmovnb
cld
neg
jecxz
fcmovne
jmp
std
test
xor
aam
ds
loopne
sar
faddl
lock
xor
jmp
cmp
cmc
push
repnz
idiv
vshufps
addb
jecxz
aad
fadd
jecxz
aad
ljmp
iret
cli
cmp
aam
mov
test
sbb
jmp
ret
fmul
fcom
fdiv
jne
movl
jle
stc
incb
lock
ror
int3
in
xlat
int
in
cmp
ds
ret
test
in
fcomp
icebp
lret
call
int
fucomp
jmp
xor
std
and
jecxz
fmull
mov
in
xor
cmp
fistpll
fptan
addb
test
sti
cmc
repnz
icebp
fmul
lock
into
loopne
lret
jmp
push
in
xor
enter
mov
out
sub
xor
cmp
idivl
std
jecxz
enter
ljmp
clc
xor
stc
ss
sub
xlat
icebp
xchg
out
out
mov
loope
call
xor
shl
aam
xor
and
rorl
icebp
std
jmp
call
jmp
cmp
add
incb
cld
out
mov
shlb
ror
cmp
xor
into
in
out
lret
cli
rol
cli
xlat
std
sti
xchg
aad
in
int3
nop
out
lret
aam
mov
fcmovne
clc
call
aas
shl
out
mov
loop
lret
enter
test
xor
fstp
sarb
cli
in
repnz
test
cli
rorl
in
mov
mov
iret
clc
hlt
cmp
cmp
lock
aas
icebp
sub
std
jmp
test
in
lock
lret
lock
hlt
aaa
call
rolb
xlat
loope
in
call
fiadds
xor
leave
leave
out
fsubrp
in
rol
stc
aam
cmp
call
adc
test
out
xor
cmp
ror
out
stc
aas
out
int
fcmovnu
fadd
xchg
cld
fcmovnb
out
roll
xor
rcr
out
cmp
xor
shl
sub
test
fmul
jmp
xchg
hlt
iret
cli
aaa
xor
jmp
aas
dec
xlat
aas
clc
cmpb
std
test
ljmp
test
iret
or
xlat
iret
xor
cmp
aam
stc
int
loope
fimuls
xchg
decb
out
stc
ds
clc
mul
hlt
test
shl
fcmovnb
fmulp
lret
loopne
iret
call
xlat
lret
jmp
jmp
flds
call
lret
rclb
sar
xor
in
fcomp
in
loope
dec
iret
loope
sti
xlat
out
jmp
out
cmc
xchg
or
fsub
clc
cmp
cmp
aad
iret
aas
sarb
repnz
test
repz
rcl
ss
ss
sar
aaa
ljmp
jmp
jmp
in
jmp
into
hlt
ret
ljmp
idivb
aaa
loop
xchg
ds
in
mov
shll
divb
jmp
out
cmp
cli
aas
std
sar
jmp
cli
xchg
ficoms
repz
xor
xlat
ljmp
xlat
cld
rol
fildl
loopne
jmp
mov
fsubrp
ret
cmp
in
loope
aad
sbb
sti
faddl
int
jecxz
mov
cmc
in
hlt
das
shl
repnz
cld
loopne
div
aas
sbb
xchg
mul
test
fcmovne
lret
xchg
xchg
hlt
lret
out
lds
cli
aaa
clc
adc
aas
cli
shl
rcr
stc
call
iret
xchg
xchg
shr
rcl
stc
fnsave
aas
int3
fdiv
fdiv
std
std
mov
mul
fimuls
jmp
shl
ret
icebp
leave
int
stc
testb
lock
fisttpll
lock
in
fisubrs
into
cmp
fmul
stc
jmp
shl
idiv
aad
fdiv
int3
out
loopne
in
in
icebp
mov
in
aam
int3
fcmovnbe
clc
idiv
lock
cmp
not
ret
enter
mov
adcl
cmp
aaa
cmp
stc
ljmp
xchg
fmul
loopne
cld
cli
lock
xlat
cmp
fcmovne
out
std
aam
cmp
xorl
loope
clc
hlt
call
out
xchg
aaa
into
leave
idivb
fdivrs
shr
lock
out
xchg
ret
ljmp
xchg
call
lret
lock
rolb
int
aad
shl
stc
out
sbb
mov
aam
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
jmp
aas
rcl
aad
fstp
loop
pop
mov
popa
in
add
add
out
xor
icebp
shl
jmp
iret
xor
out
test
mov
mov
shr
into
in
ss
in
stc
ss
filds
icebp
loope
cli
leave
in
fldl
out
lock
jmp
out
into
cmp
add
cli
lret
mov
clc
xchg
repnz
popl
cmp
fcmovnbe
fucomi
rcl
fdivr
shl
cmp
vpaddb
mov
into
sub
mov
out
cli
int
ss
xlat
leave
and
cmpl
faddl
int
out
lea
out
fcmovne
rcr
out
aad
idivl
shl
cli
cld
xlat
int
lret
nop
lock
aaa
aad
icebp
int
into
leave
cmp
xchg
cmc
ret
in
jmp
shl
loopne
in
jmp
cmp
enter
aad
xor
cmp
lret
mov
rol
aad
rcr
out
hlt
rcl
sarl
lds
in
ljmp
test
stc
int3
icebp
and
ffree
cli
cmc
in
and
xchg
rorb
shll
lret
cld
fucomp
addl
clc
mov
mov
shr
out
shll
jecxz
aad
hlt
cmp
iret
fdiv
inc
hlt
loopne
and
loope
fdivrp
fsubr
mov
sub
int
fnstsw
into
cmp
xchg
test
in
aad
loop
xchg
shl
into
in
mov
sarl
in
std
out
stc
and
out
fsub
xlat
lret
mov
adcl
rcl
xor
fcmove
shl
into
out
faddl
enter
cld
call
mov
xlat
call
cmp
cmp
in
aad
orb
xchg
in
adcl
leave
lret
ss
loope
ror
rol
ffree
mov
loopne
loopne
xchg
xchg
adc
cmc
aad
cmp
in
cli
idivb
sbb
cmp
loopne
fcmovnb
test
aam
shr
xlat
ss
rcr
rcl
in
icebp
testl
iret
test
mov
call
ljmp
std
sarb
xchg
stc
test
in
sbb
cmp
mov
ljmp
call
fcomip
fsub
shr
lret
clc
mov
mov
xchg
aas
shrl
fsub
ss
idivl
aaa
rcr
std
mov
jecxz
sub
enter
idivb
shr
xor
repz
adc
incl
roll
leave
int3
leave
sti
cmp
xacquire
mov
mov
fistl
aaa
in
enter
cld
int
hlt
xor
loop
repnz
cmc
imul
aam
enter
mov
lock
xlat
lds
sarl
lock
sar
in
loopne
sbb
loope
jecxz
out
faddl
imulb
cs
leave
cmp
sub
lock
sar
stc
aas
addb
test
lret
ss
std
sub
in
repz
rol
mov
cld
mov
xchg
ret
clc
aam
not
fcmovbe
iret
int
cmp
test
fisttpll
int
loop
enter
int
repz
not
ret
in
rol
call
iret
mov
adc
repnz
out
icebp
cmp
idivl
fnsave
out
repnz
aam
cld
add
lret
mov
iret
hlt
in
cmp
in
aaa
jmp
aam
test
xor
orl
out
rol
xor
test
int
test
call
cld
sti
loop
lock
in
xchg
mov
aaa
fcmovbe
rol
lret
cld
cmp
addb
fxch
loop
clc
nop
in
lret
lret
xchg
ljmp
sar
stc
hlt
lret
cmp
iret
loope
std
fnclex
call
in
xchg
hlt
aas
rcl
in
cld
cmc
cmc
into
out
lret
jmp
sar
lds
jecxz
mov
mov
enter
fcomip
rolb
mov
jmp
mov
ljmp
hlt
iret
fcmovnu
rcl
mov
sbbl
jmp
leave
aad
xlat
fcmovnu
ret
pop
lock
adc
xchg
lea
add
cmp
fimull
into
nop
xor
xlat
xlat
in
cmp
hlt
cmp
fsub
adc
in
or
mov
loop
mov
lds
jmp
cmp
aas
test
jmp
loopne
xchg
leave
test
ljmp
fsubrp
cmp
repz
cmp
loop
out
stc
testb
jmp
ss
aam
cmp
cmp
shr
inc
leave
lea
in
or
aad
leave
int
not
std
fucom
test
lret
loop
iret
fiadds
xor
aaa
aam
fcmovne
fbstp
hlt
iret
fnsetpm(287
roll
lret
out
repz
into
loope
leave
test
cmc
fstpt
fucomi
fimull
std
jecxz
call
rol
lret
not
int
int
xor
xor
cmp
fcomip
cmc
out
cmc
cmp
addl
aad
fcomp
fcmovnbe
std
sti
loop
loop
loopne
enter
fstl
loopne
ror
ret
hlt
aam
ljmp
icebp
icebp
aad
icebp
rol
enter
in
into
xchg
rclb
ret
into
xlat
cli
incb
clc
test
stc
out
hlt
mov
loope
les
ret
aaa
out
repnz
call
repz
loope
out
loop
sti
orl
sti
loope
sbb
repz
xchg
enter
loop
hlt
into
enter
fdivl
cmp
aad
std
test
repz
sti
ljmp
xchg
rcr
icebp
xor
out
out
push
cmp
addl
call
cs
xor
sti
int3
cli
cmp
enter
test
aad
and
xlat
fsubp
in
ret
lret
shl
ror
cmc
out
aam
fcmove
rcl
stc
loop
mov
call
shl
lea
imul
aam
std
fcmovnbe
repnz
add
aam
rcl
cmp
std
faddp
leave
addl
ljmp
in
repnz
icebp
xor
addb
iret
fcmovnu
fsubp
test
test
ret
in
in
jmp
or
shl
in
xchg
stc
call
rcl
ret
shr
enter
enter
repz
loopne
mov
incb
mov
enter
cmp
leave
cmp
sbb
aam
cmp
fmuls
fndisi(8087
sub
lret
repz
iret
fcmove
out
xchg
in
clc
leave
std
in
jmp
into
shl
xchg
sub
aaa
cmp
fnstcw
jmp
neg
cmp
faddl
cmp
shr
test
das
jmp
in
xor
shl
mov
loopne
lret
or
fst
hlt
in
xor
repz
push
shr
xor
ret
test
mov
aas
int
lret
int
std
xor
repz
out
leave
jmp
ljmp
fcomip
sar
cld
ret
std
lret
call
out
rcl
ds
cmp
rcr
adc
neg
int
or
std
xchg
rol
xor
cli
ljmp
ljmp
leave
clc
xchg
cmc
testb
mov
int3
shr
aam
and
addl
std
addb
loop
leave
lret
cmc
ljmp
sti
out
fcomip
clc
out
jmp
fcomip
xchg
call
in
leave
sar
cmp
cmp
jmp
shl
fsubr
icebp
fsubp
test
in
rorl
ror
call
out
std
out
sar
sar
xchg
addl
in
icebp
jmp
out
lock
ds
fsubp
xlat
jmp
in
test
test
mov
push
jecxz
enter
hlt
fcmovu
icebp
cmp
fsubr
cmp
cmp
repz
test
cmp
cmp
fmul
fnstcw
cmp
shl
out
fdiv
cmp
loopne
jecxz
aam
dec
vpsrad
icebp
ffree
stc
aad
icebp
rcr
out
cli
rcr
neg
fistpll
call
fnsave
rolb
roll
add
push
or
adc
sub
movl
mov
xor
mov
jmp
ror
ret
int
movsb
inc
push
testb
cmp
add
add
repz
iret
out
stc
rcl
loopne,pt
fildl
sti
fsub
call
rorb
lret
cmp
fildl
xchg
out
rorb
mov
jmp
jmp
shr
cmp
stc
repnz
in
fnsetpm(287
xlat
cld
shr
jecxz
xchg
out
out
orl
das
aad
fcomi
rcr
lock
fcmovne
jecxz
and
fimuls
jecxz
enter
aaa
xor
fcomip
sti
ret
aas
icebp
jmp
jmp
fcomp
fstl
shll
ret
das
sarb
repnz
out
jmp
mov
leave
stc
shl
loopne
shr
xor
hlt
lret
cli
ror
cmp
ret
ds
clc
shl
sub
in
jecxz
rcl
test
aad
xor
out
iret
fmul
cmp
rcr
repnz
fcmovu
nop
iret
call
dec
leave
jmp
sub
out
shl
sarl
into
adc
aam
fsub
mov
icebp
shl
shlb
leave
repnz
loopne
cmp
in
faddl
test
cli
in
lret
or
rol
sti
xor
stc
clc
cmp
incl
sti
mov
out
nop
into
xchg
lds
shl
icebp
loopne
cmp
fcomi
aad
vshufps
call
mov
stc
in
repz
repz
lret
ret
test
in
std
lret
xchg
int3
xchg
mov
loop
fcom
repz
xor
fxch
xlat
jecxz
xlat
testl
jmp
out
jmp
leave
in
cli
in
sti
neg
aad
fiaddl
ret
fmulp
mov
cli
incb
loope
rcl
lds
xor
cmp
loope
loopne
fdivrs
xchg
test
mov
call
call
into
shl
ljmp
ds
jecxz
loop
rol
in
out
in
shr
xor
hlt
out
int
ror
rolb
mov
in
mov
out
adc
int3
ljmp
clc
shl
ret
test
adc
std
orb
in
mov
ljmp
aam
int
sbb
hlt
roll
test
out
mov
loope
in
out
xlat
repnz
into
aam
sar
xlat
cmp
test
leave
mov
loopne
aam
iret
fdivr
iret
jmp
cmp
fsub
test
testb
mov
iret
sub
aad
cli
fucomp
int3
stc
cmp
ret
loop
loope
lret
incb
out
rol
call
aad
jmp
fidivrs
dec
filds
xchg
out
clc
stc
mov
out
std
in
fidivrl
cmp
fadd
jmp
loop
xchg
loopne
cs
in
xor
rcr
cmp
cli
rcl
idiv
mov
cmp
fmull
in
ljmp
cmp
xlat
faddl
cmpb
stc
aas
in
cli
out
jecxz
mov
xchg
aaa
xor
aaa
icebp
jmp
aam
fldl
cld
stc
in
xlat
nop
xchg
mov
repnz
ret
sti
cmp
lret
cmp
cmp
lock
ds
rcr
out
ljmp
lret
out
repz
ret
aam
rcl
fidivrl
xor
ret
in
stc
dec
popl
rcl
test
hlt
cmp
out
int3
idivl
std
aas
aas
leave
fdiv
test
lret
shlb
cmp
cld
cld
lret
in
std
loopne
cmp
fdivrs
enter
jmp
in
hlt
orb
ljmp
fucomi
std
fndisi(8087
mov
ljmp
ret
lret
loop
addb
lock
fnsave
int3
sbb
xlat
repz
aad
fiadds
into
mov
lock
sti
fdivl
fcmovne
aam
loop
cmp
jecxz
clc
test
test
rcr
out
mov
out
shll
vpsubw
cmc
fucomp
cmp
fldl
cli
in
nop
in
hlt
int3
ror
leave
in
jmp
cli
fadd
repnz
repnz
out
lret
test
shr
rorb
sub
test
fsubs
test
add
int3
rcl
ret
fldl
fldcw
add
add
fiaddl
ret
ljmp
jmp
cmc
leave
jmp
xor
cmp
cmp
cmp
out
call
xchg
shl
loopne
fdiv
repz
xlat
lret
cmp
cmp
roll
lret
jecxz
icebp
out
jmp
neg
repz
lret
icebp
cmp
in
fdivr
loop
loopne
mov
loopne
mov
cmp
aad
lock
into
lock
cmp
mov
mov
cli
xchg
cmc
out
rol
or
loope
test
mov
adc
mov
shl
div
shl
jmp
in
xor
loope
std
test
out
flds
call
sub
int3
out
std
cmp
shl
stc
int3
sti
out
cmc
cmp
fdivr
cmp
mov
shrb
cli
xor
aaa
shl
neg
loope
rcr
ret
out
ret
enter
out
rorb
jmp
jmp
cli
xor
aam
out
out
shr
in
xlat
call
std
mov
div
rcr
lret
fucomi
sar
fdivrl
rolb
fisttpl
int3
repnz
leave
xor
rcl
clc
roll
xchg
fcmovu
aad
sti
mov
adc
xor
call
stc
stc
xchg
ror
fsub
loop
lock
sub
fst
jecxz
int
xlat
loope
cmp
hlt
orl
out
repz
das
aam
out
out
adc
xchg
shl
xchg
and
incl
shl
div
out
cmp
cli
ret
stc
faddl
mov
iret
lret
std
repz
jmp
lock
neg
std
fcmovu
hlt
incl
fucom
xor
test
shl
enter
fstp
shl
ds
cli
ds
loopne
jecxz
ds
int
in
xchg
sub
cmp
clc
icebp
icebp
loop
fdiv
xchg
sti
fldpi
mov
fildl
int3
ret
repz
stc
hlt
lret
jecxz
in
cmc
cld
stc
cli
aam
into
std
ljmp
xor
ror
leave
in
int3
in
xlat
hlt
cmp
movl
icebp
shl
fisttps
stc
out
aam
hlt
loop
jmp
out
fucomp
aam
std
filds
in
iret
repnz
loope
xor
xor
cmp
jmp
fdivr
in
std
leave
lret
xor
sub
neg
cli
cmp
cli
repz
loope
xchg
sub
rcl
jmp
out
fcomp
cmc
loope
out
stc
fcmovnbe
loopne
flds
sub
into
in
call
cmp
stc
cli
cmc
add
in
shr
into
mov
mov
xor
jecxz
int3
repz
sarl
int3
cmp
ret
aad
in
flds
xor
repnz
lock
aad
cmp
fsubr
ss
repz
ljmp
fst
xchg
xchg
aad
repnz
sarb
in
loop
sbb
sar
jmp
loopne
xchg
cmc
iret
fsubrs
cmc
xor
xlat
aaa
jmp
ss
stc
fcompp
test
out
fnsetpm(287
rorb
loope
in
leave
aaa
aas
int3
out
rcr
in
shl
int3
xchg
test
shl
ss
cmp
test
cmp
cmp
clc
ret
clc
mov
sub
fcos
rorl
xor
rcr
lret
out
int
int3
div
sar
aam
in
lds
in
mov
mov
int3
test
lret
sub
orb
fsqrt
out
in
xchg
enter
clc
lret
sar
in
icebp
enter
sbb
test
orb
nop
shr
mov
xor
dec
dec
into
out
jecxz
rcr
cmp
mov
sti
mov
sbb
xchg
hlt
hlt
stc
xor
ror
rolb
jecxz
testb
out
addb
iret
int3
sbb
fucom
test
aam
test
shlb
jmp
fadd
aam
fst
fcoms
sbb
jg
fs
xchg
addb
stos
add
sbb
mov
and
sti
cld
fsubp
cmp
in
repz
addl
out
loopne
xchg
fcom
out
out
divb
out
xor
jecxz
cmc
rcr
std
ret
in
mov
xchg
mov
rolb
lret
ljmp
in
sti
out
rcl
cmp
loopne
mov
in
xchg
jmp
fcmovbe
ret
repnz
fcmovnu
cmp
cmp
fadd
cmp
mov
in
sub
shr
in
xchg
call
ljmp
rcr
incb
stc
push
mov
out
and
test
lock
out
aam
xlat
cli
cmp
sbb
leave
or
out
cli
and
ljmp
in
sti
fstpt
call
shl
fcmovbe
enter
in
xchg
xchg
int
out
shl
fnop
into
jmp
out
loop
icebp
stc
sub
loope
out
xchg
jmp
repnz
ljmp
xor
stc
fsub
rcr
call
vpxor
orb
sub
lret
divb
cmp
fsubrp
fld
rcr
fdiv
or
ret
in
into
fsubp
in
mov
repz
aad
dec
dec
aam
in
shr
std
leave
in
fsubr
cli
jecxz
icebp
call
aaa
lret
lret
stc
out
repnz
shl
iret
fsub
lret
loopne
std
leave
mov
out
ret
cmp
in
xor
xlat
fcos
cmp
cmp
test
xor
out
fdiv
fucomi
cmp
imul
iret
sti
hlt
xchg
repz
in
fcomp
fsubr
mov
test
aaa
cld
icebp
enter
loope
addb
loope
ljmp
in
vphaddubd
lret
out
cld
leave
int
aam
clc
fdivr
xchg
decb
call
aad
ret
bnd
aad
jmp
repz
fxam
cmpl
orb
out
stc
aad
xor
xlat
lret
fcmovnbe
aas
cld
xlat
testl
iret
out
mov
iret
ret
cmp
jmp
rcl
lock
ret
loope
out
into
xchg
mov
shl
in
sub
std
shlb
fucom
ffreep
mul
xchg
vcmppd
neg
mov
decb
int3
in
fdivs
lret
cmp
clc
loopne
call
ror
mov
or
lret
int
aaa
neg
shl
addl
loope
std
jecxz
nop
lock
mov
shr
out
ss
stc
cmp
out
xchg
repz
jecxz
jmp
lock
icebp
ss
out
jmp
std
aas
loop
xchg
test
lock
xchg
leave
loopne
loopne
cmc
xor
lret
fcmovnu
fdivrl
cmp
adc
repz
mov
cmp
out
out
lret
lret
loope
rcr
xchg
cmc
test
repnz
ret
mov
addl
xor
fdivr
aad
sti
les
out
cld
fcmovbe
sti
repnz
out
fmulp
sub
icebp
fnstsw
out
hlt
enter
loop
test
mov
aaa
jmp
cmp
fcmovne
xlat
cmp
xor
adc
aad
clc
clc
xchg
xlat
and
call
iret
loope
out
xor
xor
rolb
sbb
fsubp
lds
jmp
das
ror
fcmovbe
int
sar
fsub
fsubr
les
loopne
cmc
or
lret
fcomip
mov
fsubr
out
sti
repz
aas
incl
test
testl
filds
repz
repnz
idiv
ror
lock
repz
in
repz
lret
stc
in
leave
fsubp
fcomip
mov
xor
ret
cmp
div
cmc
ljmp
hlt
jmp
call
iret
inc
lds
repnz
std
shl
stc
fistpll
ret
shl
fldl
enter
jecxz
mov
loop
out
cmp
fcmovnu
loopne
cmc
incb
orb
rcr
leave
mov
fmul
cmp
fidivl
sbb
xchg
cld
mov
iret
in
not
int3
movl
not
movl
sbb
movl
mov
adc
xor
mov
subl
add
jmp
int
int
leave
push
hlt
cltd
loope
ss
ret
jle
add
stc
ljmp
fld
adc
mov
aam
ljmp
into
addl
into
dec
out
std
aad
int
incb
mov
call
aam
icebp
int3
int
xor
idiv
ljmp
loope
ret
fld
rolb
shl
fldl
in
cmp
lret
ds
sarb
or
out
in
xchg
lea
ljmp
lock
hlt
icebp
loope
ds
vpaddd
int
iret
rorl
loop
clc
fldz
leave
cld
cmc
loop
clc
cmp
aad
repnz
fimuls
out
repnz
shl
nop
aad
clc
clc
repz
hlt
ljmp
ret
mov
jmp
cld
iret
into
int
into
in
aas
aam
out
fcmovu
xor
cmp
ret
repz
dec
leave
test
loopne
jecxz
leave
ret
cmp
cmp
jmp
cmp
sarb
out
in
aad
orl
xor
out
fucomi
sti
repnz
aad
cli
cli
test
fcmovbe
idiv
fiadds
rorl
int3
rcl
sarl
int3
cmc
jecxz
test
not
mov
out
call
out
repz
int3
out
jecxz
sti
cld
fidivrs
lock
stc
aas
cmp
and
call
fiaddl
xor
hlt
std
cmp
clc
fcmovnbe
xor
out
leave
fld
or
mov
test
aam
into
shr
icebp
xlat
into
shr
sarb
ret
cmp
test
faddp
sar
test
mov
clc
mov
int
xchg
xchg
ret
aam
out
cld
roll
repnz
mov
ljmp
xchg
rcll
in
lret
into
fidivrl
std
cmpb
les
jecxz
in
leave
loop
icebp
incl
ljmp
loope
loopne
icebp
sti
testb
repz
mov
cmc
aaa
int
stc
sti
in
fcom
sti
cmp
ret
cli
mov
xchg
adcl
das
call
fdivrl
lret
jmp
in
repz
idiv
lret
fsubp
test
jmp
shl
out
hlt
clc
icebp
shlb
cmp
fidivrl
out
fprem1
in
jmp
sub
xor
loop
xor
hlt
adc
cmp
in
stc
roll
lds
adcl
hlt
icebp
xor
std
lock
fcmovb
rolb
fmulp
in
orl
ss
xor
rol
cmp
cmp
not
test
in
loope
in
mov
fdivs
in
int
cmc
ds
ds
out
cmp
out
ffree
std
fisttps
mov
aam
out
out
repnz
cmpl
int3
int
mov
fstp
out
aam
lret
sar
sarl
in
fscale
fcmovbe
sar
out
fucomi
fcomp
sti
icebp
test
xor
into
ss
ljmp
iret
jmp
addb
sbb
aam
xlat
rol
repz
sti
stc
sar
lock
not
rcl
clc
call
bnd
les
xor
cmp
add
out
fildl
loope
orl
rcl
cmp
repz
cmp
sarl
cmp
ret
adc
cli
jmp
out
xchg
ss
into
jmp
in
hlt
jmp
std
cmp
test
mov
int
nop
filds
xor
lret
xor
enter
ret
roll
sti
out
xlat
clc
stc
test
adcb
out
cmp
out
jmp
rcl
fdiv
stc
incb
jecxz
xchg
filds
into
call
stc
loope
ret
iret
cmc
xchg
fsubp
fildl
jmp
jmp
shll
lret
xor
out
fcmove
xor
ret
lock
out
sti
cmp
in
fmul
orb
enter
in
into
cld
xor
adc
sarl
cmc
cli
les
sti
loopne
test
loop
test
fst
cmp
iret
stc
lock
aad
ror
int
lock
leave
mov
aam
into
xor
div
leave
fldl2t
xor
sar
aas
out
aad
cld
cmp
movl
je
movl
push
movl
jmp
jmp
int
ret
rol
fcmovnu
jecxz,pn
jne
cld
ja
mov
jle
add
loopne
testb
int3
in
or
into
ret
fcomi
lock
roll
xor
adc
mov
iret
iret
shlb
cmp
fcmovnu
int3
rcr
loopne
fsubp
out
fisttpl
fcomp
in
xchg
leave
int3
xchg
sarb
int3
lret
jmp
divl
fnstsw
clc
aad
xor
enter
sti
hlt
into
repz
out
cmc
fnsave
repnz
xlat
adc
loop
test
lock
loopne
xor
aam
cmc
aam
call
sti
cmc
fmul
cmc
fucom
ljmp
cmp
clc
sub
cmp
out
repnz
fcmovu
call
xchg
rcl
in
jmp
cmp
aad
cmp
push
loopne
jecxz
ffree
xor
int3
mov
in
int
loop
iret
in
out
hlt
ror
fmulp
cld
int3
ljmp
test
xchg
xchg
in
fsubr
sti
fdivp
int3
ds
rolb
out
leave
in
sbb
lea
rcl
icebp
cmc
in
out
loop
cmp
fcomi
in
fmul
loope
out
dec
cmp
nop
aam
aam
xor
xor
cld
leave
stc
call
into
cmp
cld
mov
sub
aam
call
out
cmc
xchg
loopne
fdivrp
into
ret
test
test
idiv
cmp
cmp
loope
call
call
mov
aad
cmp
icebp
cld
fcmovu
sar
cmp
aam
loop
jmp
fdivr
out
out
int3
shl
aad
fnstenv
loop
shll
loop
mov
rorb
jmp
out
mov
lret
xor
xor
idivb
call
shl
sub
fdivs
fucomp
loop
test
shl
xchg
out
add
jmp
ror
loopne
ds
div
test
mov
mov
repz
repz
call
stc
in
xor
mov
fnstsw
nop
decl
iret
cs
xor
fmul
xlat
lret
in
sti
jmp
loope
sarl
jmp
sti
xchg
mov
xor
xlat
cmp
cmp
in
cli
orl
jmp
leave
cmp
cli
cmp
ljmp
out
xchg
jmp
test
repz
aaa
xlat
in
aam
cld
cmp
shl
sar
xchg
loope
xchg
fstl
stc
cld
int
aaa
sar
in
sti
fsub
leave
repz
xor
int
jecxz
out
in
cli
clc
out
cli
cmp
shl
test
std
jecxz
cld
cmp
mov
out
mov
cmc
int3
iret
int3
out
xor
cmp
icebp
loope
aas
in
stc
out
xlat
in
idiv
f2xm1
int3
xchg
ljmp
out
cmp
xlat
xor
fiadds
ret
add
ret
testl
ret
cli
aaa
out
cmp
out
loope
repz
cmc
repnz
xchg
jecxz
addl
movl
std
icebp
lret
std
xlat
aam
ljmp
lock
out
int3
icebp
aam
lret
aaa
jmp
sti
xor
cmp
aam
clc
icebp
leave
aam
aam
fsub
test
jmp
repnz
fdecstp
in
ror
test
cmp
clc
fildl
test
xchg
aam
in
repz
fstp
jmp
clc
repz
fucom
call
enter
ror
into
out
int3
repz
in
fucomi
aas
aas
lock
cld
out
test
fcmovne
decl
fucompp
lock
cmp
out
lock
out
clc
idiv
mov
testb
rol
out
in
aam
jecxz
in
cli
cmp
loope
int3
out
jecxz
loop
leave
loope
testl
inc
ss
xor
cmp
fcmove
int3
incl
lret
aad
xchg
jmp
iret
lret
sar
ss
int
lret
loop
test
ret
jecxz,pt
lret
in
fsts
mov
addl
mov
subl
sub
jmp
int
ret
aam
fstp
fstl
fmull
xor
pushf
mov
jle
add
xchg
shr
aad
xor
in
std
ljmp
loopne
sar
imul
jecxz
jecxz
frstpm(287
out
lock
out
cli
cld
lret
loopne
roll
jecxz
int3
shl
out
mov
iret
mov
rcl
out
fpatan
in
cmp
hlt
rcl
loop
repz
out
stc
mov
jecxz
in
out
jmp
out
xor
xor
ss
hlt
cmp
lret
icebp
sbb
sti
xchg
or
mov
jecxz
ret
sti
jmp
sarb
aad
shl
aam
cmp
std
jmp
xchg
lock
ljmp
fcomi
lock
aam
rcr
xchg
in
sbb
std
loopne
xchg
mov
lock
repnz
xor
std
repz
xlat
repz
fiadds
add
mov
in
lret
iret
dec
fucomp
call
ljmp
into
incl
call
xchg
loop
call
enter
xor
aaa
enter
cmp
ss
xchg
lret
fmulp
cli
fstp
sti
ror
out
out
rol
xlat
fcmovnbe
cld
leave
leave
fcmovbe
stc
fsin
addl
test
popl
in
sarl
lret
repnz
out
rcl
repz
loope
xchg
std
in
loopne
xchg
repz
cmp
sarl
out
ret
loopne
cmp
cmp
enter
ljmp
stc
aad
rcl
test
fadd
call
fldlg2
loopne
out
addl
ret
cs
xor
xor
sti
fimuls
int3
in
in
enter
mov
repnz
in
cmp
cld
leave
repnz
jecxz
cmp
xchg
addl
lret
hlt
aam
aam
into
in
jecxz
cmp
lret
fldlg2
xor
lock
out
loop
f2xm1
mov
ret
iret
int
f2xm1
cld
out
jmp
xlat
in
xchg
loope
lret
shl
in
iret
int
aam
loope,pt
fsubr
lret
dec
fcmovu
fstp
shr
xor
in
clc
fdivp
cmp
jecxz
rol
fcmovu
leave
xlat
fxch
repz
xchg
test
fmul
aam
les
test
xchg
std
xlat
fsubr
fildl
cmc
repnz
lock
cmp
cmp
ds
xlat
loop
cmp
sbb
fmul
loope
incb
rcr
rorb
iret
aaa
std
sarb
call
test
test
mov
sbb
incb
sub
lret
in
inc
cld
adc
call
dec
mov
enter
imul
cmp
aas
aad
std
lock
in
aas
aam
in
clc
xchg
adc
lret
call
enter
out
fnop
cmp
cmp
ljmp
out
fcmovne
test
das
loop
rcr
out
loope
into
out
fstpt
sti
ret
loope
loope
in
jmp
iret
loop
xor
cmp
cmp
icebp
loopne
filds
out
loopne
loopne
icebp
test
shr
out
in
hlt
loopne
sar
fnstcw
les
iret
fsub
repnz
int3
int3
out
xor
div
ljmp
hlt
xor
mov
vpaddusw
repz
out
cli
in
fxch
iret
jmp
shl
flds
hlt
test
loopne
in
mov
lret
lea
jmp
lret
stc
lret
repnz
test
cmp
mov
cld
into
out
loope
mov
mov
out
aam
cli
rcl
aas
fyl2x
fsincos
xchg
loop
and
fdivrp
xchg
int3
shl
fcom
shl
cmp
shr
not
in
cld
ds
hlt
mov
dec
iret
rcr
out
out
das
ret
in
xlat
aam
aam
fsin
not
mul
fcmovu
cmc
leave
testl
mov
enter
fxch
lock
int3
xor
aam
loop
out
les
out
loop
adcl
std
cld
out
aam
fucomip
aas
rcl
aad
ret
int3
or
cmc
adcb
aad
int3
loope
cld
aaa
aad
xchg
jmp
std
in
lea
aam
ret
aad
int3
leave
out
mov
xor
adcl
add
movl
cmp
movl
jb
xor
mov
mov
xorl
xor
or
xor
add
jmp
rcl
rcl
dec
mov
testb
xor
jle
add
repz
std
std
xlat
cmc
cld
test
fcmovbe
out
enter
xchg
shr
in
jmp
cld
cmp
aas
in
repnz
out
jmp
fdivrp
jmp
shl
fdiv
repz
fld
cmp
loopne
fcomp
mov
cld
mov
out
cld
xchg
xchg
std
mov
enter
cmp
enter
loop
fstpt
shr
div
icebp
rol
int3
leave
in
loope
xrelease
aam
repz
leave
fcomi
aas
out
cmp
and
xlat
sub
fcmovne
cli
mov
ret
hlt
ret
call
int
cmc
xlat
loop
cmc
testl
loop
leave
leave
das
cmp
call
cmp
rcl
fcomi
test
hlt
out
fsubr
fucomip
out
ljmp
shl
fdiv
in
into
repz
fsubr
ret
idiv
cmc
icebp
ret
test
enter
jmp
int
fcmovbe
out
dec
cmp
clc
repz
ret
adc
lret
fcmovnu
mov
fcmovnbe
lock
out
fldln2
out
in
dec
cmp
push
aas
testb
sar
call
clc
in
ret
in
cmp
loop
sarb
fstpt
xchg
loope
icebp
xchg
shll
icebp
cmp
cld
repz
enter
loope
loopne
ret
idiv
ficoms
shl
enter
ljmp
in
sarb
xchg
testb
nop
xchg
not
out
xlat
shl
fdivrp
int3
icebp
repz
not
rol
aam
std
xlat
cld
in
stc
cmc
ror
mul
xor
iret
std
int
int3
cmc
flds
xchg
testl
das
repz
clc
cmp
loope
ds
lock
in
fsub
mov
xchg
fst
nop
aas
ret
out
rcl
ljmp
loope
dec
sti
out
cld
xchg
or
iret
lock
in
call
out
in
aas
loop
rcr
out
rol
cmc
fildl
shr
adcl
iret
xor
sbb
cmp
leave
in
mov
fsubrp
shr
adcl
ljmp
shl
jecxz
loop
fdivrs
int3
in
out
lret
out
ror
das
ljmp
fistpll
fdivrl
int
cli
test
inc
fstp
mov
lock
lret
loopne
repz
leave
shlb
cli
cmp
out
ljmp
adcb
lock
repnz
fucomi
ds
repnz
out
fisttps
shl
iret
cmp
xor
aaa
lock
int
in
sar
loope
lds
loopne
test
lock
icebp
xor
lret
int
dec
jecxz
cmp
mov
clc
out
leave
lret
fcmove
out
rolb
jmp
cmp
cli
clc
xlat
cmp
fmulp
ret
roll
movl
int
fxch
enter
in
fucomi
xlat
in
fucomp
jecxz
out
mov
imul
xlat
in
stc
div
fmul
cmp
fcomi
fucom
shl
clc
in
fcmovnbe
in
in
xchg
out
iret
jecxz
idivb
repz
not
cmp
rolb
jecxz
shr
out
repz
cmp
iret
repz
ds
call
lret
loopne
in
xchg
and
aas
xor
ljmp
jmp
addb
test
lret
in
int
cmp
into
aam
cmp
fucomp
stc
out
repz
aas
cmp
test
fstp
xlat
xchg
std
lock
shr
repnz
jmp
xor
aam
test
jecxz
jmp
test
mov
repnz
fpatan
aad
cmp
std
lret
clc
fadds
xchg
test
mov
call
xlat
std
repz
int
fsubr
aad
cmp
mov
aad
fcmovne
lock
in
popl
fcmove
out
and
div
jecxz
fucomi
lea
lret
mov
out
in
out
jmp
div
out
out
aam
test
sub
roll
in
icebp
das
sarl
ss
fcom
cmp
cli
rolb
loope
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
adc
mov
jmp
ror
rcr
ror
js
cmp
int3
and
jbe
add
add
lock
xchg
imul
jmp
cmc
shl
xor
cli
mul
shl
in
enter
xchg
nop
shl
shl
in
repnz
out
fnstenv
cmp
cmp
loop
out
fmul
test
in
fistl
jmp
rol
iret
hlt
xlat
out
aad
out
fdiv
cmp
mov
shl
call
lret
fdivl
fmulp
xor
and
out
rolb
int
jecxz
hlt
enter
jmp
aad
sbb
cmp
mov
clc
jecxz
loope
fucomi
int3
ljmp
in
xlat
into
cmp
int
ret
cmp
loope
sti
sti
int3
fcomp
loopne
xchg
xchg
not
sub
aad
xor
int
cmp
int
rcr
fld
loop
ret
test
in
in
in
fcomip
loopne
fcmovnbe
xlat
cmp
fiaddl
ljmp
mov
repz
in
cld
repnz
xlat
in
loope
test
cmc
xchg
jmp
nop
out
out
jmp
repnz
xor
clc
cmc
in
int3
icebp
or
repz
cmpb
mov
xchg
loope
in
loope
ljmp
lret
clc
in
int3
sti
cmc
ror
testb
and
inc
sti
int3
repz
out
lock
jmp
loopne
out
aam
faddl
div
leave
and
in
rol
xor
int
int
rcr
ds
lret
leave
mov
filds
lock
aad
lock
int3
cmp
aam
ret
test
jmp
out
aas
div
cmp
int
out
aaa
loope
int
in
int
out
cld
loopne
aad
cld
test
shl
hlt
icebp
fcom
icebp
repnz
out
sti
sar
hlt
icebp
rol
sti
leave
in
out
ljmp
loopne
fmul
repnz
ss
clc
icebp
shl
cmp
mov
imul
mov
mov
xor
jecxz
ljmp
or
std
cmp
mov
cli
mov
decb
xor
dec
loop
out
fdivr
cli
sar
sarl
fsubr
rcl
repz
div
aam
cli
cld
xor
repz
shl
test
fcmovb
cld
adc
int
fxch
fildl
xor
cmp
cld
cmp
into
xor
faddp
decb
lock
lret
lock
in
out
xor
fdivrl
xlat
cmp
cld
out
add
in
test
fmul
mov
div
in
cmp
jmp
sbb
in
jecxz
aad
aad
fsub
cmp
xlat
cmp
cmp
call
std
sbb
lds
iret
iret
clc
leave
cld
cld
cmp
int
push
testl
rclb
loop
xor
int3
cmp
in
repz
xchg
addl
mov
in
xchg
call
xor
lds
hlt
xor
repz
test
clc
fmuls
shrl
xor
cmp
jmp
lret
fcomp
fsub
inc
leave
loopne
into
cld
into
loopne
ljmp
lret
into
into
cmp
ret
fdivrp
ret
jmp
lret
loopne
ficoms
fdiv
cmc
xor
cmp
fadds
cmc
loop
cli
ljmp
lock
iret
out
in
out
imul
iret
idivb
repnz
out
out
loopne
test
xchg
fcomp
fmull
loope
shl
cmp
out
cld
in
aad
fstp
ds
xchg
mov
idiv
sbb
loopne
xchg
or
in
ror
enter
leave
jecxz
cli
cld
stc
fdivp
in
int
loope
jmp
nop
fdivp
jmp
clc
fucompp
aam
out
stc
fsubr
int
in
xlat
cmp
loope
fucomip
cmc
cld
xchg
out
jmp
jecxz
test
xor
rcl
fcmovbe
xlat
fst
fcmovu
test
imul
mov
shl
xchg
int
rcr
rcl
fcmovne
cmc
int3
sti
in
sar
mov
faddp
out
lret
fildl
repnz
lret
aaa
fcomp
jmp
repnz
into
int3
sarb
test
repz
iret
jecxz
mov
ror
cmp
scas
xlat
and
mov
sub
mov
addl
sub
movl
cmp
movl
ja
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
xor
or
sbb
mov
movl
xor
sbbl
add
movl
jmp
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
aad
iret
lret
fstp
push
shrl
mov
add
hlt
leave
stc
xlat
repnz
rolb
ret
mov
mov
int
leave
lret
neg
repnz
std
int
rolb
xlat
mov
out
fimull
jmp
clc
fcomip
fsqrt
out
icebp
flds
sub
mov
repnz
shll
stc
cmp
ss
xlat
loop
xlat
in
test
cmp
std
faddl
sti
jmp
out
cmp
rcl
sti
fdivrp
aaa
aad
iret
rcr
orb
xchg
mov
out
jmp
not
das
shlb
leave
enter
out
aas
jmp
jecxz
loopne
clc
stc
stc
and
loopne
mov
fsqrt
sti
cmp
into
and
in
hlt
stc
std
out
out
les
cmc
jmp
int3
fdiv
jmp
lret
rcl
int
lock
in
jmp
xchg
fcoml
das
leave
cmp
out
icebp
repz
cli
lret
aam
aam
orb
loop
jmp
out
cs
stc
aaa
sti
ds
hlt
hlt
int3
fidivrl
ffree
repz
ret
dec
mov
xor
hlt
iret
ror
out
std
cmp
cld
out
ss
stc
fcomip
rol
mov
jmp
ror
fists
ret
jmp
fabs
rol
std
fldl
out
test
call
fadd
lret
fsub
fcmovne
int3
enter
sti
jecxz
xchg
aam
jmp
in
fildl
cmc
int
repnz
in
lock
iret
xor
fsubrp
rolb
cmc
ds
mov
ror
xchg
mul
rcl
in
fst
cli
lret
cmp
aad
rcr
ror
aam
enter
fcmovne
mov
into
aad
loop
xor
cmp
shl
rcr
fnstcw
sar
jmp
jmp
into
std
out
int
ljmp
not
sar
cli
out
sbb
leave
std
test
out
fisttpl
xor
rcl
in
aad
aad
sbb
stc
ret
leave
hlt
cmc
sar
test
cmp
xchg
loopne
in
sub
xor
ds
icebp
into
call
loop
in
call
hlt
xchg
call
out
iret
aad
out
fcmovbe
aam
repz
fsub
jmp
xor
fldl
sti
not
cli
shl
fdiv
loopne
aas
xchg
fcomi
incb
out
xchg
jmp
cmc
cmp
in
ss
cmp
cmp
rcr
test
ljmp
shl
xor
lret
call
iret
loop
sub
incb
xchg
out
out
int3
icebp
test
xor
in
aam
das
cmp
imul
cmp
test
std
ret
neg
leave
loop
cli
sub
int3
call
leave
enter
cld
jecxz
aam
cmp
ljmp
xchg
fucom
cs
cmp
out
cli
cmp
aam
sti
repz
mov
jecxz
test
fucom
in
ret
cmp
cmp
in
cmp
fucom
loope
adc
or
clc
cli
mov
in
vpcomub
cmc
enter
call
jmp
ds
aam
leave
cmc
out
cmp
test
out
mov
xor
iret
jmp
fst
cmp
loop
cmc
fadd
in
jmp
ljmp
mov
cmp
xlat
divb
in
cmp
hlt
repnz
cmc
aam
in
ret
out
xchg
div
xor
xor
into
cld
aas
addl
mov
std
sti
sti
test
stc
jmp
fidivs
int
repnz
fcmovu
in
fld
int3
fmulp
cmc
std
add
std
mov
ljmp
ffreep
repz
lock
cmp
ds
in
fucom
add
sbb
lret
mov
jmp
icebp
div
enter
lret
jmp
sbb
aas
sti
rcr
in
fisttps
mov
rorb
lret
icebp
fmul
iret
fdivr
cmp
sbb
loope
fcomi
out
fimuls
div
ss
ss
aad
rcl
sar
lock
cmp
loope
jmp
mov
shl
das
das
loop
cld
cli
into
cmc
cmp
and
loope
in
clc
test
out
call
loope
cmp
into
cmp
cmp
xor
fcmovb
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
xor
xor
add
orl
add
imul
mov
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
sub
jmp
rcl
lret
fcmovnbe
lods
pop
mov
aad
mov
jle
mov
test
lret
fcmovbe
int
adc
aaa
into
rcl
icebp
call
int
stc
loopne
aam
mov
hlt
sub
jecxz
repnz
xor
fmul
aaa
fst
repnz
ret
ret
icebp
call
loop
loope
fsubr
orb
aad
xor
out
faddp
shr
fdivs
aas
cld
in
jmp
mov
divl
call
test
idivl
aad
out
ljmp
mov
addl
sti
cmp
in
addb
cld
enter
out
fmulp
sti
nop
and
out
fmul
out
fcom
aaa
fstpt
iret
xlat
cmc
cmp
sti
aam
jmp
xchg
mov
repz
mov
call
xlat
enter
fdivrp
in
repnz
aad
cmp
loope
fnsetpm(287
stc
icebp
mov
jecxz
call
xlat
cmpb
shr
flds
std
in
nop
out
mov
fxtract
out
into
xlat
loope
stc
ds
aad
xor
fsubp
out
loopne
mov
in
ret
hlt
div
cmp
icebp
cmp
jecxz
repz
in
sub
lret
int
push
repz
shr
aad
cmp
aaa
cmp
and
rol
mov
inc
call
xchg
xchg
in
xor
int
aas
fdivrs
fcmovnbe
incl
out
test
fucomp
jmp
in
loope
clc
sti
clc
cmp
fucomp
cmp
rol
into
fcmovu
xchg
mov
enter
xchg
aas
vshufpd
xor
cmp
out
in
enter
in
in
out
lret
loope
lds
out
aad
out
xlat
stc
aam
cmp
in
out
into
stc
loope
shl
hlt
out
repnz
fcom
sarl
lock
std
into
loopne
not
in
out
clc
mov
loope
in
test
clc
iret
cli
cmp
loopne
repz
loope
jmp
in
out
icebp
ret
xor
std
test
sti
icebp
loop
enter
fiaddl
in
sub
hlt
aam
int
fdivrl
fnop
fiadds
stc
leave
lds
lock
in
cmp
sti
int3
ror
cmp
cli
repz
adc
sti
cmp
xchg
out
aad
out
ss
xlat
in
ret
fstp
out
xor
aam
cmp
int
iret
loopne
icebp
ret
in
xor
int
shl
cmp
faddp
cmc
shr
ljmp
out
in
xlat
repz
icebp
lret
neg
rcr
test
sar
in
fmuls
fstp
in
repnz
cmp
enter
addl
into
or
icebp
xchg
in
cli
in
enter
in
sarl
cld
repz
flds
mov
in
call
iret
int
cmp
fdivrs
loop
cmc
out
loopne
clc
sbb
test
in
movb
leave
mul
xor
cmp
into
xchg
iret
shl
ljmp
into
loopne
xor
ffreep
ret
lock
in
fsubr
cmp
cld
repnz
rcr
ffree
aas
lret
test
mov
test
roll
xor
cmp
rcr
cmp
int3
cmpb
loop
shl
stc
cmp
in
lret
ficoms
aad
divl
int3
cmc
repz
aad
fcmovnb
fdivr
cmc
cld
out
in
int
xchg
in
xlat
ror
fprem
cli
fdivr
in
sar
fsubp
neg
jmp
ljmp
test
icebp
xchg
shr
cli
xlat
cld
xor
int3
idivl
xlat
cmpl
out
iret
loopne
shl
out
aam
div
lret
fdivs
sar
call
aas
ret
ror
fimuls
mov
leave
aam
xchg
cmc
in
xor
std
cld
jmp
shl
shl
shl
faddl
mov
xchg
xlat
icebp
in
rcr
cli
fdiv
int3
fadd
rcl
repz
test
stc
sti
in
in
nop
in
test
jmp
jmp
cmp
aad
test
fisttpl
test
aam
mov
cmp
fiaddl
add
loope
mov
repz
cmp
jmp
fcom
rcr
fstp
fnstsw
fmull
mov
movsl
add
add
call
in
int
fsubr
sti
loope
out
ret
fdivr
leave
test
out
in
push
rol
ljmp
cmp
fdivr
filds
mov
repnz
xor
repz
stc
iret
cmp
out
out
ret
mov
enter
call
repz
xor
icebp
cmp
in
cld
out
aad
ds
fdiv
cmc
ret
mov
lret
lock
decb
ret
cmp
jmp
not
ret
neg
xchg
in
or
into
aam
mov
in
clc
enter
lret
lret
call
mul
fyl2xp1
fcmovnb
enter
jmp
shl
xor
xor
aam
icebp
std
iret
out
in
sti
cmp
mov
fucom
test
sti
sub
jmp
stc
repz
div
in
fistpll
lds
loopne
xlat
fcmovnu
ljmp
fnstcw
sarl
cmc
aad
out
addl
lret
out
fiaddl
iret
aaa
cmp
out
xorl
cmp
std
call
cli
nop
std
lret
xor
imul
shl
ds
fistpll
std
cmp
hlt
cmc
rcl
roll
stc
sti
test
loop
enter
lret
sti
loopne
fdiv
ret
cmp
fadd
xor
shl
lds
icebp
int3
enter
out
aad
cmp
aam
repz
shr
cld
out
push
inc
xchg
out
fucom
mov
in
shll
jmp
out
lret
cmp
cld
mul
sti
shl
nop
mov
mov
sar
ror
aaa
stc
iret
fucomip
xlat
in
cmp
mov
stc
lret
test
mov
aam
sub
jecxz
rcr
iret
leave
into
ror
iret
test
repz
cli
les
xchg
out
lret
shr
clc
iret
fstp
repz
shl
test
add
xchg
shll
ret
cli
out
out
xor
int
ret
clc
addl
fiadds
ljmp
loop
aaa
imul
sti
hlt
lret
neg
loope
ljmp
test
loopne
test
xor
fiaddl
in
ret
fdivrp
jmp
out
out
xchg
idiv
int3
loop
jmp
cmp
repz
ret
clc
cli
mov
notb
aam
call
sar
test
fsub
mov
int3
shl
shrl
loopne
fcmovnu
xor
cld
ljmp
xchg
lock
out
sti
fcmovbe
in
rclb
ljmp
fadd
into
in
loopne
mov
shl
xchg
inc
lret
aam
iret
repnz
cmpb
cmp
enter
fcmovu
int
enter
lock
xor
cmp
lock
cmp
aam
fsubp
fcmovnu
out
fcmove
jmp
loope
icebp
shl
sub
sub
test
testl
loopne
int3
test
test
xchg
jecxz
xor
out
sar
iret
sarb
fdiv
ret
jmp
lret
call
lock
sub
rcl
jmp
std
test
xor
not
ret
faddl
jmp
jmp
clc
lret
icebp
out
aaa
aad
pushl
lret
jmp
lock
aam
jmp
out
enter
cli
repnz
xchg
in
enter
cmp
clc
int
rolb
dec
mov
in
out
cmc
ficoms
ljmp
repnz
into
rcl
jecxz
xlat
in
frstpm(287
lret
fld
jmp
out
aad
aad
enter
xor
fdiv
cmp
ror
repz
test
jecxz
fcmove
test
mov
xchg
repnz
leave
xor
xor
cmp
rcr
stc
addl
lret
mov
xchg
xchg
addl
shl
aad
iret
xor
shl
not
in
cmp
out
inc
in
stc
ljmp
xor
fsubr
rcr
cmp
loope
aad
idiv
jmp
fimuls
jmp
in
in
idiv
fidivrs
not
shl
addb
mov
out
adcb
mov
xlat
div
fnstcw
shl
xchg
add
add
or
add
lds
add
leave
aam
aad
aam
sbb
stos
stos
add
add
loope
aad
repnz
in
loope
in
mov
loope
not
fdivs
call
into
test
xchg
lock
sti
test
cld
loope
sti
mov
xchg
lock
xor
into
aam
dec
cmp
iret
fsubr
aas
test
repz
fcmovb
mov
nop
nop
mov
in
xor
shr
clc
repz
shll
ror
cmp
ret
test
and
into
in
int3
fucomip
lret
ret
jmp
lock
fidivrs
ds
mov
add
out
in
call
ret
lret
std
fdivrp
leave
adc
fcmovbe
shr
ljmp
orl
lret
in
hlt
cmp
loope
sbb
fcmovb
fucom
call
xchg
mov
fbstp
lret
lock
repnz
lock
stc
int
test
shl
in
cmp
shr
cli
cld
xchg
loop
in
call
ss
rcl
cmp
imul
loope
ret
mov
test
in
xchg
ret
fidivl
stc
fst
lret
cmp
sarl
ror
rcl
mov
stc
addb
in
jecxz
aaa
repz
not
ljmp
xor
aas
enter
idiv
in
sti
mov
xlat
repnz
rcr
std
jmp
loope
in
sar
aad
out
xlat
ds
out
iret
fiaddl
add
mul
in
icebp
fcmovne
ss
sub
clc
test
jecxz
xchg
enter
leave
aad
fstp
fadd
cmp
cli
jecxz
jecxz
call
xchg
rorb
int
in
fsubr
lret
rcr
xlat
sarl
test
and
mov
shr
mov
aaa
fdivrs
fcmovne
out
int3
repz
in
call
ret
or
and
sub
loopne
xlat
sub
into
das
int
sti
out
rcr
int3
aaa
loop
std
out
jmp
mov
out
out
decl
ftst
jmp
leave
in
cmp
iret
les
lret
leave
fimuls
out
loope
sub
fidivl
repz
cmp
iret
xchg
sar
fadds
sub
sub
xor
aam
cmc
icebp
cmp
ret
aas
repz
adc
jecxz
lret
call
aam
shr
hlt
repnz
out
aam
lret
test
aad
loope
in
mul
movl
enter
jmp
cmp
int3
shl
rorb
aad
rol
shl
fldl2e
rol
xor
repz
fnstcw
cli
or
shl
repnz
aaa
call
xlat
stc
into
fcmovnbe
test
fdivrp
cli
mov
mov
into
cld
fdivrp
icebp
xchg
ljmp
ror
fst
xor
jmp
xchg
rcll
stc
icebp
cmp
lret
sti
iret
rcr
cmp
in
fucomp
ret
dec
decl
std
xchg
icebp
leave
in
cmp
cs
jmp
fdiv
iret
repz
xchg
enter
fists
lret
std
cmp
cmp
aaa
ds
out
clc
shl
fcmovnu
lret
out
cli
jmp
shl
cmc
out
in
leave
xor
xor
std
shr
cmp
out
out
loop
call
mov
xor
sti
out
fistpll
xlat
ret
jmp
call
neg
out
into
test
mov
repz
jecxz
aam
lock
aad
sar
adc
fidivrs
aad
enter
enter
filds
lds
in
int3
cmp
jmp
aas
rol
fistpll
testb
ljmp
out
fmulp
das
rol
ror
ljmp
xlat
loope
cmc
vcmpss
std
in
nop
int
ret
jmp
aaa
aas
in
icebp
fidivrs
aad
testl
call
ljmp
lret
sar
iret
repnz
test
aad
jecxz
xchg
lret
loope
xchg
loopne
xor
cli
xor
clc
fcmovu
ljmp
ds
hlt
ret
mov
cld
fucomp
out
orl
jmp
out
repz
hlt
in
in
enter
mov
fldl
xchg
xchg
out
sar
lock
enter
idivb
rolb
loope
fiadds
jge
xor
xor
add
add
imul
jmp
rol
aam
aad
aad
xchg
mov
lahf
and
push
xlat
scas
add
add
fsubrp
jmp
aam
fdivr
lret
cmc
xor
leave
aam
sti
repnz
fcom
faddp
cld
jecxz
shr
jmp
in
xchg
das
in
lret
xor
lret
lock
in
cli
test
aad
in
loope
cmp
out
call
int3
lock
lret
ret
shl
sbb
mov
lock
cmpl
out
call
sti
aas
jmp
addb
sub
add
out
cli
out
repz
les
iret
call
icebp
jmp
std
clc
ret
mov
out
out
fsub
mov
enter
fdivp
loop
stc
aad
aaa
neg
aam
cmp
cmp
fsubr
ds
fdivr
mov
xchg
idivl
in
repnz
in
xlat
into
ds
ret
fadd
std
faddp
in
leave
ljmp
jmp
mov
stc
leave
loop
cs
fdivp
repnz
stc
cmp
aam
incb
idiv
loop
fucomip
out
rcl
rcr
icebp
std
fcmovbe
icebp
lret
fcmovnbe
ret
cmp
fcmovb
in
clc
test
loop
jecxz
call
aam
aad
cmp
ror
jmp
rol
ror
fcomip
les
int3
mov
int
jmp
fcmovnu
hlt
loope,pt
fdivrp
fadd
fmul
int3
lret
ljmp
jecxz
rcr
ljmp
icebp
adc
test
in
adc
out
into
out
out
sar
xor
repnz
sbb
loopne
fcmove
loop
lret
incb
enter
in
fdivp
sti
rol
cmp
rcr
testb
mov
fucom
rclb
in
int3
out
aad
repz
cmp
cmc
in
out
stc
out
in
mov
xlat
jmp
out
iret
shl
xor
out
ds
out
out
fistpll
call
fldl
subl
std
enter
jecxz
fxam
repz
xlat
loopne
or
mov
lea
ret
into
out
out
lret
jmp
aas
ror
into
cmp
aam
sar
repz
loope
icebp
xchg
in
aas
xor
leave
lock
stc
xor
and
aam
fsub
imul
mov
addl
fmulp
xlat
ljmp
int3
shr
ret
hlt
cld
cmc
std
out
fcoms
hlt
xchg
aam
call
fucomp
fadd
sarb
sbb
loopne
in
out
mov
dec
lret
lret
aam
hlt
cmc
ljmp
aam
rcr
xchg
xchg
lret
ljmp
std
cmp
fdivrp
cmp
cmp
mov
ret
stc
leave
jmp
lock
test
cmp
fiaddl
fscale
fsubr
orb
clc
lret
jmp
out
hlt
out
leave
fildl
add
jmp
repz
xor
in
stc
aad
div
jmp
into
std
rcr
std
test
ret
xchg
jecxz
rcr
shr
icebp
xchg
lock
in
ljmp
int3
mul
fsubp
ds
xchg
loopne
cld
mov
rcll
call
int
lret
stc
out
sbb
repz
test
in
mov
repnz
mov
aas
xor
fdivr
cmp
stc
repz
ffreep
mov
addl
in
repz
fadd
sarb
out
in
jmp
or
movb
in
enter
fistl
jmp
hlt
aaa
out
ds
loop
aad
not
ljmp
xchg
fcmovnb
xchg
into
call
ror
int
repz
cli
stc
cld
int
iret
repnz
cmc
ffreep
test
mov
jmp
jecxz
xor
int
in
int
ds
repnz
repz
in
orl
loop
loope
stc
inc
rolb
xchg
lret
lret
out
xor
iret
rcl
fdecstp
cmp
out
cmp
ds
rol
rcl
jmp
out
int
out
mov
loop
clc
aad
aas
cld
shr
sti
repz
aad
fcompp
ljmp
repnz
nop
mov
ret
xor
sar
das
fcomi
in
ret
out
out
ror
out
xlat
mov
ror
jecxz
clc
cmp
lock
rcl
ret
fucomp
insb
fstps
cmp
add
jg
jle
cmc
fidivrl
cld
xlat
rolb
enter
orb
lock
cs
fcmovnu
fistpll
ret
vpminsw
out
and
xchg
loope
loope
xor
loope
jmp
cld
and
fisttpl
int
mov
iret
clc
ror
xor
xor
icebp
std
fcmovnbe
xor
mov
loope
in
lock
leave
in
mov
shr
cs
out
into
cmp
lock
in
cmc
jmp
fldl
xchg
loopne
jmp
ss
call
neg
fsubr
stc
cmp
in
in
inc
in
int3
lock
das
div
iret
neg
int
loope
aam
aas
loope
xchg
fdivrp
rcl
loopne
fistl
xor
xor
cli
enter
fdivp
repz
aam
xchg
lret
test
popl
cmc
rcl
leave
ret
repz
xlat
dec
std
shr
repnz
xlat
xchg
shl
jmp
das
stc
cmp
hlt
fsub
fldlg2
repnz
shl
iret
out
mov
or
jmp
in
fcoml
imul
repnz
fdivrs
into
lock
xlat
clc
stc
test
xlat
ror
mov
or
cmc
icebp
leave
test
cli
std
fcomip
stc
sti
cld
jecxz
rcr
decb
lret
int
in
jmp
sar
clc
clc
aam
ret
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
sbbl
push
push
adcl
push
xor
addl
lea
addl
xor
or
sbbl
xor
andl
add
push
lea
xorl
push
movl
push
xorl
lea
inc
xorl
xor
addl
xor
adcl
call
movl
movl
mov
mov
movl
jmp
movl
xor
sub
xor
xor
xor
xor
mov
add
xor
movl
incl
mov
mov
cmp
movl
jb
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
movl
adc
movl
mov
mov
sub
xor
lea
mov
lea
xorl
mov
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
sbb
add
not
mov
mov
mov
mov
cmp
mov
mov
movl
je
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
or
dec
mov
jmp
mov
xor
xorl
add
adcl
imul
mov
jmp
sbb
xor
xorl
add
xor
mov
movzbl
or
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
add
sbbl
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
xor
addl
add
movl
cmp
movl
jne
adcl
push
pushl
addl
pushl
call
mov
mov
sbbl
mov
incl
mov
mov
adc
mov
mov
mov
mov
adc
mov
mov
dec
movl
adc
mov
neg
movl
mov
orl
xor
add
jmp
mov
orl
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
lea
sub
mov
mov
and
xor
movzbl
and
lea
or
mov
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
and
movl
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
or
dec
mov
jmp
adcl
movl
mov
mov
xor
mov
xor
add
movl
cmp
je
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
inc
xor
add
sub
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
orl
xor
or
mov
sub
xorl
add
mov
mov
cmp
ja
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
push
mov
call
pushl
pushl
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
mov
movl
push
mov
mov
mov
push
mov
mov
mov
cmp
je
adc
mov
mov
andl
xor
sbbl
add
movl
cmp
je
mov
xor
inc
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
sbb
push
adc
pushl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
push
movl
mov
subl
mov
add
xor
cmp
jne
mov
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
xorl
mov
mov
adcl
xor
add
movl
mov
movl
movl
not
movl
movl
mov
movl
push
movl
mov
cmp
je
mov
adcl
xor
incl
xor
lea
sbbl
xor
movl
cmp
movl
jne
jmp
add
sub
mov
xor
add
mov
xor
mov
adcl
xor
movzwl
add
xor
mov
sub
mov
adc
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
neg
movl
mov
push
or
mov
mov
sub
xor
mov
xorl
add
orl
mov
and
mov
subl
push
push
adcl
test
movl
je
mov
movzbl
or
mov
mov
andl
mov
mov
sub
mov
imul
mov
subl
add
dec
mov
not
mov
xchg
inc
sub
subl
xor
mov
movzwl
and
mov
negl
mov
mov
sbb
mov
subl
xor
sub
xor
addl
add
mov
movl
mov
je
and
mov
xorl
xor
andl
add
movl
cmp
movl
jne
pushl
adcl
call
sbb
mov
mov
mov
sub
and
mov
mov
mov
sub
mov
mov
andl
xor
orl
add
cmp
je
pushl
incl
pushl
orl
call
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
dec
mov
incl
xor
orl
add
movl
cmp
movl
je
sub
mov
xorl
mov
mov
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
andl
add
mov
mov
subl
mov
add
movzwl
or
mov
mov
mov
add
mov
movzwl
or
mov
mov
addl
add
xor
mov
sbb
mov
mov
addl
add
lea
andl
mov
push
orl
pushl
pushl
call
mov
subl
mov
sbbl
xor
movl
add
movl
cmp
jne
mov
inc
cmp
movl
jb
movl
jmp
mov
xor
xorl
add
movl
jmp
subl
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
