push
mov
sub
xor
mov
xor
mov
adc
mov
sub
push
mov
mov
mov
mov
jmp
mov
or
inc
pop
rcrb
inc
adc
adc
push
clc
adc
xchg
push
in
fimull
mov
fsubl
int3
or
adc
jo
movsb
xchg
jle
dec
mov
mov
xchg
mov
daa
and
push
sbb
sbb
pushf
dec
out
sbbb
add
sbbb
inc
ret
mov
movsb
in
jne
loopne
jno
aas
xchg
in
rolb
pop
or
sbb
notl
add
pop
fidivs
cli
xchg
cmp
or
pop
or
cmp
inc
cld
mov
leave
push
jbe
push
fmuls
mov
into
mov
sbb
or
mov
inc
mov
aam
adc
repnz
mov
popa
insl
int3
repnz
pop
xchg
jae
sti
cmp
add
clc
lcall
std
pop
pminsw
rclb
fsubrl
pop
sahf
jg
aam
jne
xor
rol
cltd
insb
fidivrl
out
into
sub
xor
sbb
daa
jae
aam
les
fwait
pop
cmpsb
jl
bound
jae
into
add
inc
jne
push
rcll
jp
pop
mulb
fidivl
cmpsl
pop
cmp
push
outsl
in
or
pop
inc
jb
imul
pop
push
in
xchg
sub
and
ss
push
call
or
and
add
xchg
int
fs
nop
and
dec
adc
push
mov
sti
pop
inc
rolb
inc
mov
jecxz
xlat
jo
and
xor
jnp
mov
cmp
pop
pop
aam
js
push
jnp
jmp
lcall
or
aaa
iret
divb
push
dec
cmp
scas
out
adc
cmc
jl
in
pusha
loop
outsb
fimuls
int3
dec
lock
daa
xchg
sub
xchg
pushl
shl
cld
fistpll
mov
adc
orl
and
adc
test
nop
scas
aas
mov
jns
xlat
adc
fwait
pushf
ret
call
jnp
stc
push
push
das
and
and
mov
rclb
cli
scas
std
pop
adc
loop
jne
popa
or
xchg
pop
sbb
add
jmp
fildl
out
pop
mov
std
xchg
orl
aaa
and
xor
fsubrl
fldenv
cmc
jae
push
cmp
fwait
icebp
xchg
sbb
data16
int3
push
xlat
and
xchg
mov
mull
pop
bound
xchg
push
sahf
rcr
cltd
mov
fidivl
xchg
sub
arpl
xor
pop
and
movsl
and
cmpsb
out
movb
dec
outsl
sub
mov
out
mov
cmp
and
xchg
icebp
jmp
xorl
xor
push
sahf
mov
dec
push
xchg
mull
stc
vmovq
cmp
imul
jl
mov
mov
arpl
fisttps
ja
sbb
adc
and
adc
movsl
push
fstp
cmpsl
in
push
xchg
mov
and
sub
xchg
mov
push
mov
push
fwait
adc
icebp
add
push
and
and
pop
jge
mov
add
ds
loope
xchg
stc
ret
ret
push
mov
icebp
pop
push
ljmp
lods
jne
add
dec
scas
pop
cbtw
in
scas
test
pop
cmc
and
add
and
adc
andb
addr16
iret
cmp
std
xlat
icebp
test
imul
scas
and
rolb
inc
xor
andb
add
xor
pop
xchg
push
inc
jns
jg
dec
sbb
ds
hlt
push
push
add
push
in
or
adc
lret
inc
dec
ljmp
adc
test
push
mov
push
fisubrl
jo
outsb
cmpl
mov
mov
sub
loopne
sarb
insb
push
pop
push
test
add
sub
mov
or
test
dec
and
lock
push
sbb
mov
movsl
lret
jecxz
lcall
out
push
rolb
aas
sbb
xor
stos
mov
jg
inc
movsl
int
lret
jl
fimuls
xlat
hlt
pop
cmp
inc
loopne
and
ret
aad
scas
imul
clc
sahf
dec
test
nop
cltd
rcrb
daa
pushf
ja
mov
pop
dec
jmp
repnz
push
lds
mov
mov
or
fs
lods
jb
aam
nop
mov
sbb
jge
out
pop
nop
mov
loope
add
mov
and
enter
or
and
cmp
mov
cmp
movsl
sub
loopne
pop
jae
inc
mov
push
inc
ss
dec
xchg
hlt
ret
scas
push
data16
sub
push
movsl
adc
ja
pop
aas
outsb
lret
adc
pusha
adc
insb
mull
sti
mov
jno
ret
std
rcl
mov
testl
xchg
xchg
pop
mov
sbb
mov
rcrl
sbb
rcrb
pop
divb
xor
jbe
pop
jne
add
xor
das
aaa
addr16
dec
mov
pop
cmpsl
pmaddwd
cs
push
lahf
add
ja
add
out
fs
push
add
lret
xor
pushf
sbb
into
data16
xor
xlat
in
in
sub
adc
in
mov
cmpsb
stc
adc
mov
cwtl
or
ss
xor
xor
aas
loope
jmp
nop
popa
cmp
jmp
arpl
mov
push
popa
pop
shrb
add
xchg
push
loopne
dec
cmp
test
enter
arpl
cmpsl
mov
popl
ds
ret
mov
xor
push
or
bnd
jne
scas
cltd
sahf
iret
cmc
fwait
and
nop
xchg
dec
add
cwtl
or
pop
or
outsb
push
repz
decb
jae
in
sti
push
sbb
imul
add
sub
add
neg
or
or
enter
add
xchg
imul
adc
mov
and
fdivrp
push
add
jb
out
mov
loope
faddp
insb
inc
lcall
ss
sbb
mov
orl
orl
orl
mov
cmpl
movl
movl
jmp
movl
jne
push
push
push
call
xor
adcl
sbb
mov
and
sbbl
xor
adc
mov
sbb
mov
inc
mov
sub
mov
sbb
cmpl
mov
not
mov
jmp
movl
jg
pushl
call
sbb
or
adc
xor
or
or
sbbl
mov
orl
sub
orl
cmpl
mov
mov
movl
jmp
movl
jbe
pushl
push
pushl
call
and
and
xor
add
and
movzbl
add
mov
add
mov
sub
movl
lea
cmpl
mov
movl
jmp
movl
jg
push
call
movl
xor
add
sbb
or
and
xor
mov
addl
mov
and
mov
or
mov
mov
add
mov
add
orl
mov
mov
mov
or
mov
movzbl
or
shrd
cmpl
mov
mov
mov
mov
jmp
mov
jl
push
pushl
push
push
push
call
and
or
adc
mov
sub
shr
andl
mov
cmpl
not
notl
jmp
mov
movl
jne
push
call
movzbl
adc
and
movl
sbb
xor
add
adc
mov
mov
xor
orl
xor
or
mov
movl
sbb
jmp
push
test
pusha
stos
xchg
nop
hlt
inc
daa
inc
pop
push
clc
adc
push
clc
adc
ret
jae
sub
das
xorl
popf
popa
jle
mov
mov
or
and
mov
dec
add
or
std
pop
jno
outsb
cmp
dec
sarl
adc
mov
test
cmpsb
in
in
mov
cmc
out
jecxz
movsb
dec
ds
mov
xchg
push
fldl
scas
xor
in
xchg
pop
dec
ret
mov
in
loop
mov
add
cmc
or
dec
adc
movsl
or
xor
xchg
sub
rep
adc
lcall
and
stc
loop
push
mov
out
jae
inc
int
mov
jl
fiaddl
cmp
mov
icebp
in
add
jbe
sub
mov
lea
sub
lea
outsl
push
ror
or
enter
fidivrs
sub
jl
stos
cs
loope
lcall
pop
fdivrl
xchg
adc
push
jmp
pop
lret
mov
and
out
stos
mov
push
cmp
add
loop
ror
andb
xlat
std
pop
pop
daa
push
cmpsb
push
or
add
and
cmp
mov
arpl
pop
aas
sbb
addr16
int
pop
test
xor
loopne
scas
sti
jb
sub
rolb
ror
push
shrb
mov
push
pop
fidivrl
mov
mov
shll
addl
subl
or
test
mov
mov
into
shll
lds
mov
cltd
sub
shll
movsb
dec
cmp
lods
lods
in
lods
mov
ljmp
jecxz
adc
sarb
popa
push
sbb
pop
dec
mov
in
lods
add
jmp
mov
xchg
in
sti
cmc
pop
outsb
mov
std
ss
xchg
and
jecxz
sbb
push
sbbl
rorb
cmp
inc
testb
cmp
pop
sub
adc
fadd
mov
popa
movsb
inc
jecxz
and
adc
dec
mov
repz
adc
dec
push
inc
add
mov
jb
add
dec
aaa
dec
stos
popa
lcall
pop
inc
jne
xor
inc
fcomp
dec
or
shl
mov
cs
jmp
lds
aad
clc
ja
popw
cmp
push
stos
shrb
sbb
cmp
mov
xor
inc
adc
icebp
pop
js
mov
cmp
ja
insl
sub
push
ret
cld
xorl
inc
fucomi
js
sbbb
stc
add
fwait
aaa
imul
dec
inc
pop
fwait
in
scas
xchg
pop
loope
mov
lret
inc
daa
repz
icebp
ds
imul
fbld
fidivl
xor
mov
jo
add
outsl
fldt
out
cmp
mov
dec
movsl
outsl
mov
dec
mov
mov
clc
xchg
and
adc
xchg
in
orb
repnz
cmp
cltd
dec
xchg
mov
pop
test
inc
fxch
and
sbb
mov
mov
lret
jo
es
repnz
gs
mov
std
out
aad
fisubl
mov
dec
movsb
mov
xchg
cmpsl
mov
cmpb
pop
pop
pop
xchg
in
in
pop
es
stos
arpl
fwait
push
xor
pop
xor
in
push
repnz
mov
xchg
inc
ja
xchg
aas
cli
and
in
inc
xchg
lods
inc
dec
xorb
cmpl
orl
mov
or
in
sub
inc
and
jnp
xchg
xor
or
xor
jb
and
imul
mov
mov
or
stc
fisubl
es
mov
iret
fildll
orl
fisttpll
mov
push
jb
mov
repnz
push
xorl
clc
mov
pop
sbb
leave
repz
hlt
inc
pop
mov
mov
mov
cmp
mov
pop
movsl
clc
out
cmp
sbb
push
xor
sarb
add
sub
or
jno
mov
pop
cmp
push
in
mov
mov
loop
xchg
mov
push
pop
push
shrb
xorl
inc
sti
insb
sub
outsb
movsl
jns
cmp
stos
in
jge
loope
movsl
sbbl
jns
xchg
or
add
shl
xchg
inc
call
ds
hlt
jne
aad
jg
cmp
nop
jb
lret
xchg
pusha
cwtl
std
jle
and
lret
adc
mov
push
lret
and
jns
lret
xchg
cld
in
mov
imul
data16
insl
lret
imul
mov
push
mov
dec
cmp
adc
je
cmpsl
sub
jne
imull
xorps
xor
sub
out
mov
fwait
cmpsl
push
lahf
fs
pop
repz
daa
jo
mov
and
fadds
push
popa
cmp
mov
dec
ret
pop
mov
mov
call
cmp
dec
scas
push
cmp
jle
inc
pop
sub
xchg
pop
cmpsl
aad
addr16
sub
sbb
xor
loope
or
pop
push
into
sbb
cwtl
ret
cmp
shl
add
mov
lcall
mov
xchg
testb
mov
fimuls
je
cwtl
mov
dec
or
rep
jecxz
sar
in
cmc
or
std
cs
jno
lret
les
aam
sub
andb
inc
mov
xor
xlat
in
scas
push
mov
test
add
nop
jle
mov
push
scas
pop
iret
adc
inc
call
jne
out
ret
out
jae
std
fucomp
pop
xchg
insl
pop
pop
sub
inc
sbb
mov
dec
sub
lret
and
ds
or
lods
leave
mov
inc
cltd
cmp
inc
jno
cmp
sarb
add
lahf
jp
loope
jo
dec
push
loopne
out
inc
xchg
outsl
inc
add
negl
movl
neg
movl
neg
movl
movl
add
movl
or
movl
mov
adc
movl
cmpl
movl
mov
jmp
not
mov
jle
pushl
call
sub
orl
movl
andl
movl
and
adcl
and
movl
movl
jmp
push
sbb
sbb
sbb
sbb
out
add
adc
add
mov
inc
jle
imul
jnp
cmpsl
cmp
mov
test
stos
add
mov
push
dec
scas
sbb
mov
aad
adc
ds
nop
mov
les
xchg
clc
cmp
icebp
scas
test
outsl
mov
and
aad
adc
cmp
push
fs
out
inc
nop
cmp
xor
mov
adc
fistps
test
dec
sbb
and
lock
and
out
mov
mov
push
sub
adcl
stos
mov
sub
sbb
mov
sbb
mov
mov
daa
jmp
adc
dec
and
addb
jle
mov
mov
fmul
inc
dec
lods
xchg
dec
push
ret
das
stc
lahf
mov
cwtl
sbb
out
int3
rcrl
fwait
cmp
out
cli
fwait
cmp
adc
add
loopne
lods
out
leave
insl
inc
push
imul
stos
mov
sub
mov
adc
lahf
mov
or
decb
dec
sub
cmpl
add
mov
mov
loop
call
pop
push
cs
nop
decl
sub
rolb
sbb
hlt
imul
mov
mov
pop
test
lds
mov
sub
scas
pop
and
lret
cmp
outsb
inc
lds
shr
insl
sbb
jo
mov
rorl
insl
cmp
movsb
loope
jb
sub
std
or
jo
bound
inc
push
dec
mov
pop
mov
enter
cli
loopne
rorb
xchg
outsb
push
mov
pop
sbb
stc
test
rcr
xor
fdivrs
cmp
xchg
pop
push
mov
inc
aas
lods
adc
cmp
xchg
lahf
mov
mov
lds
pop
mov
mov
pop
test
push
xchg
shlb
cmpsb
push
into
adc
xlat
leave
xchg
mov
out
add
cs
dec
dec
xchg
arpl
push
or
adc
jb
xor
rcll
and
ja
push
lcall
out
adc
lret
into
ljmp
dec
xchg
repnz
test
rep
dec
call
xor
arpl
mov
and
pop
incl
add
jmp
jne
mov
pop
sbb
xor
test
sub
cmp
jae
cmpsb
scas
push
fistpl
lea
jno
cld
icebp
in
xchg
sarl
mov
insl
test
dec
push
sub
pop
leave
movsb
sbb
sahf
imul
mov
xor
ljmp
loope
movsb
aad
das
in
int
lods
imul
mov
nop
lods
dec
sbb
mov
jne
int
adc
jecxz
mov
jnp
xor
femms
idivb
mov
inc
call
lret
xor
pop
push
fcmovbe
jg
push
cwtl
add
push
mov
dec
imul
adc
dec
sbb
je
mov
and
mov
pop
aas
jge
stos
repz
insb
xor
fisubrl
shlb
or
sub
push
sub
aaa
add
repz
mov
mov
or
ds
push
in
sbb
stc
bound
sbb
inc
jnp
ret
aad
fsubrp
sub
stos
std
in
out
mov
adc
dec
packsswb
loopne
sbb
cwtl
push
cld
jecxz
sub
jecxz
in
cmp
sub
push
test
adc
xor
pop
sub
fbld
xchg
repnz
pop
and
out
jl
fimull
pop
shrl
jge
push
das
push
xor
sbb
dec
xchg
dec
jg
iret
inc
xchg
mov
mov
sti
xchg
out
xor
pop
sbb
lods
movsl
inc
mov
movsb
and
cltd
and
push
fsubrs
xor
dec
test
jecxz
cld
ror
in
scas
pop
out
xchg
inc
mov
cmp
call
test
cld
dec
mov
push
dec
pop
js
push
test
dec
jmp
outsb
xchg
enter
lret
mov
hlt
pop
jb
dec
mov
pop
inc
scas
das
xchg
imul
mov
fcoms
stc
mov
scas
pop
stos
sub
pop
das
cmpsl
in
fldcw
xchg
stc
xor
call
add
xchg
cwtl
push
jle
out
jecxz
fwait
dec
das
jno
xor
lods
xorb
adc
imul
orb
push
push
jne
jg
out
cmp
int3
js
in
mov
shll
jge
test
push
mov
das
dec
mov
js
pop
mov
and
out
cmpsl
addb
popf
sub
push
xchg
xor
ret
popf
pop
pop
xchg
cmp
pop
push
dec
push
mov
xor
inc
lcall
clc
sub
mov
xchg
stc
lahf
add
pushf
cltd
mov
ja
cltd
arpl
jnp
sub
dec
pop
scas
cwtl
cmpb
in
inc
daa
fs
xchg
mov
push
jne
or
mov
push
out
inc
cmp
inc
ret
adc
popa
pop
in
xor
or
jle
mov
cld
xchg
cld
shrb
je
mov
lret
push
fildl
mov
out
add
mov
push
mov
mov
mov
in
mov
shrb
sbb
out
repnz
lahf
shlb
and
mov
hlt
cmp
mov
ja
inc
lea
test
dec
lcall
cmc
out
xchg
mov
lcall
aad
dec
testl
mov
lods
or
sub
aad
jmp
lods
cmp
dec
jne
and
xor
enter
mov
mov
leave
mull
lcall
cmp
jbe
push
xor
xchg
pop
movsl
clc
inc
je
lahf
push
add
push
into
push
push
push
setae
insb
pop
call
xchg
mov
loope
std
call
jp
lcall
pop
outsb
xchg
cmpsl
inc
xchg
and
cmp
add
inc
cwtl
inc
sbb
add
inc
pushf
jge
add
not
movl
cmpl
movl
movl
jmp
movl
not
je
push
push
push
push
pushl
push
push
pushl
call
sbb
negl
orl
subl
subl
orl
movl
movl
movl
sub
movl
jmp
loop
in
gs
ljmp
aam
adc
push
clc
adc
sbb
push
xchg
mov
or
aaa
inc
fwait
jns
or
popf
dec
loopne
xchg
inc
scas
pop
inc
cli
cmp
mov
cmp
inc
or
add
out
leave
rorl
sbb
outsb
shll
popa
jne
sahf
rcrb
mov
aaa
xor
sub
lods
jnp
in
jecxz
pop
or
aam
outsl
stos
scas
ret
out
das
jle
popa
lcall
hlt
mov
or
xor
in
leave
leave
loope
mov
lea
int
xorb
loopne
orb
pop
daa
test
pop
jge
and
test
jle
pop
xchg
jg
or
mov
scas
popa
aas
mov
mov
jg
adc
les
loop
out
add
in
cmp
pop
inc
inc
fnsave
xor
scas
cwtl
push
aas
push
repnz
mov
out
or
push
es
xchg
out
inc
cmpsl
pop
cmp
and
push
testb
mov
adc
jb
aad
and
fsubl
xchg
push
pop
mov
sub
xor
or
mov
sbbl
pop
mov
sub
mov
push
rorl
dec
and
repz
subb
sbb
sub
ret
adc
jl
out
aad
mov
shlb
push
mov
ljmp
pop
popa
faddl
adc
loopne
or
mov
mov
testl
loopne
mov
inc
jmp
fadds
jae
adc
jmp
insb
bnd
xor
call
lods
je
mov
data16
bound
jbe
cmp
aaa
xor
xor
insb
out
subb
out
inc
xchg
pop
inc
dec
ret
xor
sti
adcl
sub
mov
in
sarl
mov
cli
loopne
sbb
movsl
pop
dec
test
inc
jno
cmp
add
pop
addr16
cwtl
cmp
lea
pusha
mov
push
test
call
cli
pop
push
in
push
xchg
sub
hlt
inc
jne
clc
movsb
je
or
mov
addb
test
xchg
pop
sub
fbstp
icebp
rcrl
jecxz
daa
mov
jecxz
fs
sub
leave
subb
xchg
push
jg
icebp
popa
sub
cmpsl
jmp
popf
orl
in
cmp
inc
add
imul
test
scas
sub
fsubrp
pop
mov
pusha
mov
push
lods
lret
sbb
nop
pop
push
sbb
pushf
jb
mov
leave
mov
in
mov
push
push
outsb
mov
push
push
fidivrl
or
repz
xchg
outsb
or
xor
mov
pop
idivb
out
xor
mov
mov
adc
add
repnz
cwtl
xchg
sub
xchg
jl
and
xchg
outsl
mov
mov
jle
mov
inc
mov
je
fdivr
and
insl
xor
jp
imul
icebp
ljmp
lods
push
sub
sub
cwtl
mov
jne
orl
xor
shlb
push
pop
cmp
push
lea
loope
jbe
sub
out
and
repz
mov
inc
negb
and
dec
fs
lock
adc
sbb
sub
call
mov
test
sbb
jo
fmull
fistps
xchg
ja
test
scas
mov
dec
adc
aaa
sbb
cmp
pushf
mov
aam
sub
pop
add
stos
ss
fldenv
mov
fisubs
lea
mov
scas
bsf
mov
jo
xor
push
pop
dec
daa
jo
cmpsl
outsl
adc
aaa
jns
addr16
pop
popf
shlb
shlb
iret
and
paddusw
lret
sub
lods
test
and
dec
mov
jp
mov
hlt
outsb
imul
mov
cmp
inc
xor
jge
cltd
xchg
push
ja
pop
out
jno
fwait
je
cli
nop
sbb
inc
dec
add
out
inc
mov
gs
jbe
push
fsubs
xchg
add
cmpsb
loopne
mov
jp
cmp
xor
iret
in
js
mov
or
iret
sub
popf
int
test
ret
sub
aas
inc
lea
lret
mov
lcall
mov
stc
and
mov
or
cmc
inc
xchg
push
mov
jne
push
hlt
sub
subl
ss
sub
fcoms
jg
sbb
dec
sbb
mov
cmp
rol
or
jbe
repnz
xchg
loopne
mov
push
add
sbb
mov
jp
jle
inc
push
decl
repnz
lahf
add
mov
push
xchg
shll
jmp
fstp
jns,pt
orl
rorl
and
lods
shll
xchg
mov
mov
test
jbe
cmp
stos
insl
add
nop
adc
fcompl
aam
inc
aaa
xor
jne
mov
lods
dec
sbb
cwtl
movsb
rcr
pop
sub
movsl
sbb
lahf
outsl
push
cwtl
or
xor
fwait
lcall
out
std
cmp
pop
pop
filds
jl
cmp
add
mov
mov
fs
cmp
mov
push
addr16
xchg
mov
add
dec
mov
shlb
or
xchg
sti
sbb
aad
stos
or
or
dec
out
push
out
xchg
scas
mov
stos
cld
mov
stc
xchg
cld
ljmp
xchg
movsl
fwait
adc
mov
fwait
int
mov
mov
jmp
lock
dec
fnstenv
xor
inc
add
mov
add
and
fstl
aam
inc
cmpsl
cmp
mov
mov
int
dec
inc
mov
cmp
or
mov
mov
add
gs
jnp
push
mov
aas
cmp
mov
cmp
xchg
nop
xchg
push
inc
insb
dec
insb
shrb
aas
push
movl
movl
movl
mov
adcl
shl
xor
or
and
mov
push
xorl
push
sbbl
push
push
call
mov
mov
xor
mov
and
mov
orl
xor
mov
cmpl
mov
not
movl
not
jmp
movl
movl
jb
pushl
push
push
call
sub
and
subl
xor
andl
add
orl
xor
or
mov
adc
mov
cmpl
mov
movl
movl
jmp
movl
jg
push
push
pushl
call
or
sbbl
and
xor
not
subl
cmpl
movl
movl
mov
jmp
movzbl
jge
push
pushl
push
push
call
xorl
sbb
sbb
movzwl
xor
xor
xor
and
sub
not
mov
lea
cmpl
mov
mov
jmp
movl
ja
push
push
pushl
call
sub
mov
or
sbb
or
adc
or
cmpl
mov
movzbl
jmp
mov
jl
pushl
call
xorl
mov
mov
xor
add
xorl
mov
mov
orl
or
andl
and
cmpl
mov
movl
movl
mov
jmp
movl
movl
jne
pushl
pushl
call
adc
movzwl
sbb
add
mov
sbb
mov
or
or
xor
or
or
mov
or
xor
cmp
jne
mov
and
mov
or
shrd
shr
mov
sbb
mov
shl
orl
xor
subl
xor
or
mov
cmp
jmp
pop
fdivrs
sbb
cltd
fildll
iret
adc
push
clc
adc
mov
xor
enter
andl
cltd
notb
xchg
lahf
push
int3
inc
test
cmc
jne
testl
mov
and
scas
pop
std
xchg
xchg
xchg
dec
sub
stos
pop
test
xchg
or
test
cmp
pop
dec
mov
push
int
in
xor
inc
ret
add
bound
jne
sti
es
inc
gs
pop
xor
imul
lret
cmp
push
mov
aaa
xchg
test
mov
mov
xchg
cmp
jmp
fistl
adc
inc
mov
sbb
sub
daa
sarb
fistl
fidivl
sarb
arpl
sbb
dec
jge
inc
mov
aaa
and
aam
cld
jno
andb
and
inc
or
cmp
jp
inc
int
xor
or
push
les
xor
insl
push
out
push
dec
inc
test
xor
and
jecxz
lods
icebp
mov
addl
cmp
sbb
sub
pop
and
push
push
cmp
or
stos
loop
mov
jle
movsl
inc
mov
test
fcmovb
loop
mov
adc
daa
int3
call
xchg
mov
jbe
fsubrl
popa
inc
lahf
xchg
insb
jbe
mov
fsubrl
lea
test
jne
push
jl
je
mov
pop
into
call
mov
and
in
mov
push
and
outsl
int
push
mov
mov
pop
js
xchg
bound
jmp
scas
mov
and
cmp
mov
mov
in
or
adc
lret
cmp
scas
mov
mov
adc
jp
mov
mov
xchg
mov
and
stc
pop
mov
lret
cmpb
imul
cmp
mov
out
iret
add
pop
outsl
enter
pop
mov
cmp
pop
adc
mov
cmpsb
or
add
add
inc
cmp
pop
cmp
pop
push
addr16
or
cmpsb
test
iret
push
mov
rcrb
xor
js
xchg
in
mov
add
sbb
sbb
jmp
out
int3
lret
or
pop
push
test
repz
jo
ljmp
dec
sarb
outsl
inc
and
out
movsb
insb
cmp
movsb
or
test
mov
or
mov
mov
mov
pop
shrb
movsl
xchg
add
lret
and
mov
jbe
inc
mov
rclb
fld1
inc
jmp
test
mov
pop
rcll
ret
xchg
int3
push
sbb
icebp
out
push
movb
xor
mov
xchg
divb
call
adc
fisubs
jb
and
clc
cmpsl
adc
push
sbb
mov
xlat
out
mov
xchg
popa
leave
xor
icebp
jns
in
xchg
int
mov
out
push
divl
cwtl
add
inc
xchg
pop
and
add
jp
xor
jecxz
iret
cmp
pop
enter
xchg
cmp
in
enter
inc
test
inc
aad
jle
popf
js
jnp
cmp
mov
sahf
scas
jle
push
cmp
imul
into
ret
mov
lret
lods
add
test
out
jp
mov
leave
jo
stc
cmp
iret
imul
daa
je
cmc
lds
arpl
in
jmp
mov
cmp
xchg
pop
xchg
data16
sbb
les
je
dec
jg
cmp
ljmp
adc
cmp
movsl
out
sub
out
adc
ja
ret
mov
sbb
xlat
jno
repz
lret
out
or
repz
int3
outsb
fildll
jno
sar
aad
outsb
sbb
mov
in
enter
dec
rcr
scas
fst
scas
jmp
outsl
orb
fsubr
imul
test
jne
notb
push
dec
inc
cmp
jge
iret
inc
repz
je
mov
fmuls
ja
lahf
jp
mov
test
shr
mov
sbb
and
jne
xor
roll
dec
dec
mov
lcall
or
cmpsb
push
fmuls
test
or
and
dec
inc
xchg
setg
aas
scas
mov
cmp
cltd
xchg
aas
pushf
ja
mov
mov
mov
out
mov
xor
push
punpckldq
in
sbb
pop
mov
inc
xchg
pop
int
mov
sub
dec
das
ficoml
inc
fimuls
push
or
int3
cli
and
pop
repz
aas
mov
jp
cmp
nop
push
jmp
js
sbb
stos
mov
jge
out
fcompl
xor
mov
xlat
pop
pusha
enter
push
out
lcall
jl
pushf
insb
xor
cli
push
je
inc
pop
mov
negb
mov
lahf
das
inc
xchg
and
mov
jnp
dec
fcomps
mov
sti
or
mov
mov
into
dec
aaa
iret
aas
scas
mov
mov
test
rorb
cmc
push
outsb
lods
push
and
gs
mov
cmc
cmc
jbe
inc
pop
inc
and
loop
cmc
pop
push
push
int3
adc
int3
mov
daa
adc
fwait
add
inc
aaa
sub
mov
repnz
arpl
xor
arpl
mov
loope
outsb
cmpsb
std
aaa
rcr
cmc
pop
ficomps
out
cmp
icebp
loop
sbb
mov
xchg
adc
sub
push
out
xor
fadds
jmp
xor
xchg
xchg
cwtl
out
icebp
div
imul
pop
xor
test
inc
jno
dec
mov
jl
mov
jg
cmc
shll
shrb
mov
xchg
in
xor
adc
insl
fisttpll
push
arpl
and
jae
sub
push
mov
pushf
popf
jl
int
add
adc
inc
xchg
int
mov
test
scas
mov
jb
jne
cmpl
movl
mov
mov
jmp
movl
jae
push
push
call
inc
addl
sbb
mov
xor
mov
negl
sbbl
mov
cmpl
movzwl
mov
mov
jmp
movl
mov
jle
push
push
push
push
push
push
call
subl
xor
add
sbb
mov
xor
addl
mov
jmp
std
fnstsw
pop
sbb
cmpsb
pop
decb
or
push
rcll
push
clc
adc
sti
mov
sub
test
subl
lods
add
cs
sub
enter
jle
mov
push
lret
in
mov
iret
push
bound
jmp
insb
xor
adc
and
cmp
enter
xchg
pop
add
in
loope
add
cmp
test
aam
jmp
dec
xchg
add
cmp
xchg
push
out
mov
mov
cwtl
sbbl
mov
mov
cmp
aam
pop
dec
out
sub
push
sub
mov
addl
int3
sbb
in
cmp
jns
sbb
sub
pop
mov
js
sbbl
fs
jo
add
and
cmp
dec
jmp
adc
sarb
mov
adc
int
outsb
inc
xor
dec
movnti
mov
jae
add
push
es
adc
hlt
cmc
sbb
cmp
pop
adc
aas
aas
jecxz
aad
sub
hlt
dec
fldenv
outsl
addps
lcall
inc
arpl
iret
push
sub
push
add
jg
cmpsb
shll
ret
adc
and
shl
mov
lods
lret
xchg
jb
arpl
lock
jb
into
loop
inc
xchg
movsl
pop
not
out
or
xchg
lret
stos
sbb
adc
or
xor
ret
out
stos
shll
jno
pop
fists
and
xor
test
jb
lods
sub
loopne
pop
outsl
fsubs
cmp
mov
insb
test
fmulp
or
and
mov
sub
test
jl
push
jp
cltd
call
xchg
adc
fldcw
xor
sub
xchg
cmp
popa
fwait
push
addr16
xchg
push
rcll
rcll
sbb
movsl
mov
jb
lcall
fidivrl
add
jecxz
outsb
xchg
insb
cmp
push
cmp
call
or
xchg
je
pushf
push
or
in
ss
and
push
adc
popf
pop
mov
dec
test
mov
inc
push
pop
sbb
sub
adc
cmp
lods
xchg
cmp
inc
add
lea
addr16
xchg
popa
in
pop
inc
jp
sub
sub
sti
xor
xlat
jnp
sub
inc
in
push
xchg
push
and
cmpsl
bound
jecxz
mov
mov
movsb
pop
aam
stos
pop
mov
ja
xor
sbb
push
shl
adc
push
or
mov
and
push
lods
or
jecxz
dec
sbb
jne
mov
push
xor
mov
repnz
mov
in
xchg
adc
jp
mov
leave
cwtl
xchg
out
cmp
add
add
das
mov
or
push
dec
dec
mov
clc
pushf
pop
out
fwait
cmp
nop
ret
shll
push
cmc
dec
dec
stc
mov
xlat
imul
pop
enter
sar
xchg
and
or
mov
jnp
je
outsb
bound
outsb
test
xor
pusha
adcl
negl
jl
das
jmp
mov
fcoms
jge
mov
mov
lods
push
stos
sub
push
xor
push
pop
cwtl
dec
mov
lahf
sub
in
mov
cmp
pop
lcall
adc
enter
or
and
mov
lret
dec
out
pop
jae
pop
mov
sbb
xchg
jecxz
insl
cmp
arpl
outsl
orl
mov
push
ds
and
or
fs
das
or
cmp
pusha
in
sub
inc
das
ret
cwtl
mov
fisubs
int
and
fsubrl
shll
cmp
inc
sbb
xor
and
inc
out
push
add
pop
arpl
shll
sub
xor
jl
sbb
sbb
jae
lods
testb
loopne
or
jne
gs
inc
cmp
inc
filds
ljmp
pop
jl
push
sbb
in
lods
and
shll
pop
aas
jae
sbb
dec
dec
jnp
jbe
mov
adc
sub
mov
call
ss
pop
add
hlt
or
xlat
psllq
dec
fcom
gs
sahf
cmp
pop
mov
mov
lret
pop
mov
sbb
jp
sbb
das
dec
pop
fwait
sub
out
and
arpl
push
sub
add
inc
loopne
or
xor
ljmp
repz
cmp
jge
lahf
in
push
fwait
repnz
sub
out
inc
loopne
inc
roll
aaa
inc
inc
adc
adc
stc
stos
mov
mov
jnp
xsha256
cmpsb
adc
mov
imul
stos
imul
jmp
push
push
mov
insb
int
add
push
mov
mov
negl
ficomps
and
mov
jbe
xor
notb
fidivrl
mov
add
ret
cmp
cmp
pop
cltd
xor
je
aas
aaa
cmp
mov
fsubrl
push
inc
mov
xchg
repnz
jnp
mov
pop
int
mov
imul
jge
std
mov
push
add
pop
jge
pop
cli
pop
inc
shll
jg
repz
push
cwtl
push
xor
jge
dec
fistpll
or
scas
mov
movsb
mov
and
outsb
mov
lock
pusha
aam
adc
daa
xor
cmp
push
and
sbb
push
insl
mov
lods
jecxz
jne
bound
jl
dec
rcll
pop
xchg
dec
xor
test
idivb
clc
inc
adc
pusha
pop
inc
fcoms
fsts
and
mov
pop
je
jge
in
and
mov
nop
xor
les
jp
mov
loope
push
mov
jbe
xor
into
fcmove
cmp
movsb
sarb
jno
push
nop
pushf
jg
adc
sar
sub
xor
xchg
xor
or
es
das
pop
xor
and
rorb
mov
sbb
shlb
adc
add
mov
shrd
incl
mov
cmpl
movl
mov
mov
not
jmp
movl
movl
jne
pushl
call
sbb
neg
or
add
or
mov
adcl
xor
shr
mov
xor
or
shl
sub
mov
mov
mov
orl
add
mov
sbb
mov
sub
mov
shrd
or
jmp
je
stos
cmc
sub
inc
xchg
xchg
dec
inc
xchg
ret
adc
push
clc
adc
add
aam
or
jne
loope
insb
in
inc
fwait
lods
dec
push
jecxz
mov
or
push
fadd
cmp
cmp
sti
repz
rolb
insl
add
jge
loopne
test
xchg
jecxz
adc
dec
call
pop
je
xchg
mov
popa
cmp
cmpsb
sub
cmp
icebp
inc
dec
cld
clc
sbb
fists
inc
jp
ficompl
movsb
jns
mov
push
xor
out
pop
filds
popa
xor
imul
mov
es
fiaddl
fcompl
xchg
into
jno
jo
psllw
cwtl
stos
xor
ret
cwtl
ss
inc
stc
sbb
push
sbb
push
jecxz
mov
pushf
pusha
into
and
popa
or
aaa
and
shr
and
jns
inc
xchg
jnp
mov
cmp
je
popf
mov
int3
sbb
ja
cli
xchg
push
fadds
mov
lods
shl
push
outsb
add
stos
daa
push
pop
inc
test
and
shll
jmp
insl
ret
add
xchg
out
or
inc
bswap
push
gs
dec
dec
xchg
push
add
les
dec
loopne
xchg
cmc
testb
dec
fcompl
hlt
add
and
push
jns
xorb
mov
repz
xchg
call
push
or
stos
push
xchg
jle
add
ljmp
sub
mov
cltd
in
addr16
xlat
mov
add
mov
push
pusha
fcmovbe
scas
je
mov
cld
stos
mov
lahf
ret
fimuls
cmp
in
ljmp
mov
clc
lods
jo
loopne
push
or
add
push
jnp
outsl
std
pop
jbe
sub
imul
mov
mov
fmul
and
xchg
insl
jno
fbstp
sahf
cmc
sbb
jge
cli
inc
jnp
sub
out
sahf
das
mov
dec
orb
xor
lods
outsl
dec
push
mov
das
sub
std
or
add
lcall
in
adc
movsl
xchg
inc
add
sbb
fwait
mov
inc
fbld
aad
dec
sub
mov
push
or
add
in
mov
mov
dec
fmull
insl
mov
jnp
add
out
cli
shrl
push
jb
rclb
push
push
aad
in
xlat
xchg
and
shll
and
mov
aad
ret
fisubrs
lock
scas
mov
insl
movsl
mov
inc
loop
leave
and
aad
xchg
daa
rolb
test
stc
mov
addb
es
test
push
cli
inc
popf
mov
jo
inc
adc
scas
mov
xchg
into
aaa
sub
cmp
push
into
inc
test
or
inc
lea
rorl
loopew
and
cmpsl
jmp
stc
bound
jge
incl
mov
mov
cmpxchg
pop
xor
into
sub
jmp
and
pop
sub
dec
inc
cs
and
xlat
out
jecxz
stos
bound
inc
arpl
xor
xchg
push
mov
inc
jnp
push
ja
ja
aad
cltd
push
sbb
or
adc
daa
lock
setle
lcall
and
jg
imulb
into
dec
fnstsw
adc
mov
aas
repz
inc
mov
out
inc
push
and
cmp
xchg
pop
outsl
xor
cli
sbb
outsb
fstl
mov
fisttpl
outsb
outsb
pop
cmp
pop
inc
mov
cmpsl
mov
and
in
test
jg
and
loopne
xorb
sub
or
mov
push
clc
lcall
cmp
icebp
aaa
imul
push
xchg
xchg
daa
xchg
aaa
lcall
jno
mov
mov
rcrl
je
roll
adc
xchg
sbb
popa
sub
out
and
xor
push
lea
inc
pusha
cltd
jb
inc
in
pop
shl
insl
lea
cmp
mov
adc
sbb
ret
jmp
fs
cmp
mov
push
mov
pop
subb
pop
repnz
xchg
ja
lds
jp
push
or
push
in
push
inc
inc
and
out
fnstenv
jno
mov
pop
push
and
xor
sbb
sub
add
loopew
or
dec
repz
xchg
scas
mov
gs
inc
jo
pop
aas
sub
sub
jmp
add
or
sar
arpl
sub
cmp
sub
cli
sub
bound
aas
sub
and
sbb
movsl
cmp
pushf
push
mov
lahf
aaa
mov
and
mov
jl
bound
and
push
mov
adc
jg
add
lods
insl
ret
xchg
jmp
xor
mov
jbe
jbe
lahf
push
dec
pop
inc
add
inc
inc
imull
jle
mov
jo
xchg
daa
aas
dec
push
mov
mov
fldt
inc
inc
dec
mov
out
jecxz
roll
xchg
stc
dec
outsl
cmpsb
rclb
mov
cmp
sarl
add
cmc
int3
sbb
cmpsl
mov
dec
mov
pop
fxch
std
lds
jns
pop
ffreep
icebp
jmp
arpl
lcall
mov
jge
stc
sbb
add
movsb
cmpsb
cld
das
stos
fdivs
sar
dec
loope
mov
xor
cmp
rcrl
sbb
fs
subl
inc
in
lea
add
mov
nop
mov
push
cmp
pushf
or
inc
adc
xchg
sbb
xchg
mov
jae
inc
and
xor
inc
in
gs
pop
sub
pop
ret
add
mov
push
mov
mov
jge
lods
or
outsb
loope
lcall
outsb
mov
jp
mov
inc
xchg
popa
ss
je
mov
add
inc
imul
shr
cmpl
movl
movl
mov
jmp
movl
movl
jb
push
pushl
pushl
push
pushl
push
pushl
call
incl
mov
and
mov
xor
xorl
sbb
movzbl
sbb
mov
mov
sub
sub
mov
cmpl
movl
mov
jmp
mov
mov
jb
pushl
pushl
push
push
call
movzwl
xor
adc
add
inc
mov
mov
adc
mov
xor
notl
shl
cmpl
not
mov
mov
jmp
movl
jl
pushl
call
or
xorl
xor
sbb
adcl
movzbl
sub
xor
sbb
or
cmpl
movzbl
mov
mov
jmp
movl
not
jae
pushl
pushl
push
call
mov
sub
orl
adc
neg
mov
or
mov
mov
or
mov
and
mov
notl
shrd
xorl
shr
mov
cmpl
mov
mov
mov
jmp
movl
mov
jl
pushl
pushl
push
pushl
pushl
call
mov
mov
adc
xor
or
sub
addl
addl
mov
cmpl
movl
not
jmp
movl
jle
push
pushl
call
adc
xorl
or
subl
movl
or
add
add
mov
orl
xor
xorl
xor
or
shl
negl
jmp
test
out
pop
mov
mov
cmp
ss
mov
adc
clc
adc
inc
sub
jb
lock
pop
sub
push
loop
lods
and
xchg
es
inc
lods
xchg
pop
push
or
call
fprem
adc
push
pop
mov
mov
subl
sti
clc
mov
fisubrl
out
cs
rclb
out
pop
add
sbb
cld
stos
shrb
sbb
outsb
xor
jae
in
jae
push
ret
lahf
lods
and
loopne
sbb
fcmovb
jae
cli
jb
repz
jle
fnstcw
add
fiadds
adc
mov
sub
jecxz
sub
push
shl
aas
sub
jp
pop
pop
dec
pop
in
pusha
mov
call
inc
xchg
mov
sub
jg
sahf
leave
fnstcw
rcrl
mov
mov
push
fimull
sub
fldcw
jge
out
inc
movsb
dec
inc
pop
xlat
lods
sbb
lods
push
fsincos
xchg
xchg
movsb
insl
pushf
lea
push
data16
pop
add
push
test
subb
pop
aas
shlb
test
xor
lcall
lods
jnp
adc
scas
das
je
mov
pop
or
cmpsl
cmp
fimull
or
mov
pop
ds
fs
aaa
pop
inc
and
dec
push
sbb
sahf
outsl
add
cs
mov
mov
cli
mov
adc
inc
jne
out
sbb
mov
movsb
icebp
and
cmp
dec
mov
notl
in
jne
cmp
sahf
xor
test
mov
insl
mov
call
cli
int3
xlat
insb
cmp
mov
mov
xchg
idiv
std
inc
mov
mov
jno
adc
cmp
push
call
cwtl
ds
mov
mov
call
pop
in
fadds
mov
mov
int3
ds
repnz
pushf
xchg
push
out
pop
filds
lret
mov
mov
rcr
mov
push
or
dec
inc
xchg
push
mov
lahf
loopne
in
dec
outsb
and
ret
push
hlt
cmp
stos
lahf
jb
mov
lret
ret
pop
jne
dec
dec
dec
rclb
xor
pushf
sti
cmpsl
scas
data16
in
stos
ds
je
dec
jo
dec
cmp
cmp
and
xchg
adc
dec
pop
out
ret
mov
xchg
pop
pop
aad
shll
mov
ret
sbbb
mov
push
pop
loop
xchg
stos
lods
arpl
test
sbb
das
test
rorl
lds
fsubl
xchg
jmp
fdivrl
mov
das
pop
lret
pop
adc
cltd
inc
push
jae
into
gs
fcmovbe
mov
pop
dec
in
and
inc
ljmp
and
shrb
or
xchg
das
add
sub
hlt
mov
xchg
jnp
loop
lret
xchg
or
mov
push
lea
mov
mov
mov
mov
mov
test
xchg
daa
outsb
outsl
jp
cmp
inc
mov
hlt
cltd
andb
push
inc
test
fwait
data16
jmp
jmp
push
mov
pxor
mov
mov
jb
sbbb
sub
es
sahf
daa
mov
aaa
xor
xor
adc
sub
push
jg
push
imul
mov
push
mov
lss
sahf
pusha
jo
int3
push
jae
jne
push
jb
cli
push
data16
xor
test
fldl
xor
test
out
out
cmp
jle
sub
lcall
pop
test
setl
mov
jmp
xor
add
cli
inc
cli
jb
out
adcl
fwait
inc
xor
jae
jbe
nop
adc
xor
and
jle
mov
mov
push
out
add
jmp
sbb
cltd
sahf
sub
jae
data16
xor
pusha
scas
sub
mov
push
inc
mov
pop
pop
cmp
adc
lods
btc
or
dec
xlat
rolb
sbb
test
fbstp
jmp
mov
dec
xor
popa
out
adc
rcrl
fmuls
faddp
jae
roll
jl
or
lods
sub
jl
add
pop
jp
xor
les
mov
sub
lret
int3
in
imul
lods
not
add
stmxcsr
xlat
das
jns
jge
aad
stos
mov
lds
pop
inc
jbe
push
in
and
mov
jno
cwtl
cmp
addb
pop
test
test
jmp
fisttps
aam
adc
sbb
fadd
push
pop
mov
jg
mov
pop
clc
xor
sti
inc
or
and
insl
pop
push
repz
loope
dec
outsb
aam
mov
mov
sbb
xlat
inc
xchg
cmpsl
push
in
fsubp
add
push
pushf
out
xchg
dec
jns
cwtl
aas
cmp
inc
outsb
shll
hlt
mov
sbb
shlb
sahf
xor
icebp
roll
adc
jbe
and
mov
out
fstl
negb
sbb
or
jl
icebp
jns
mov
scas
mov
ror
push
mov
xchg
jl
adc
sub
outsl
lcall
aam
dec
js
roll
mov
fisubl
pop
dec
dec
sbb
in
sbb
out
rcrl
add
lret
fmul
sbb
fldt
jecxz
outsb
pop
clc
jb
scas
out
ja
sbb
inc
or
in
push
gs
outsb
bound
jns
xchg
xchg
test
mov
xchg
cmp
clc
inc
lcall
mov
and
xor
push
mov
repnz
bound
inc
repz
lahf
sbb
jae
movsl
mov
mov
or
aaa
mov
cltd
and
xor
mov
xor
out
pop
jg
lret
inc
sarl
jb
sbb
cmp
nop
mov
es
out
xchg
sbb
dec
lsl
in
add
inc
jb
mov
xchg
ja
jae
mov
js
lods
stos
jbe
or
or
mov
xor
or
sub
mov
subl
shrd
shr
mov
cmpl
mov
movzbl
jmp
movl
jb
push
push
call
mov
xor
sbb
sbb
andl
sbb
sbb
mov
mov
cmpl
mov
mov
notl
jmp
movl
mov
jne
pushl
push
push
push
call
add
mov
or
addl
xor
mov
add
mov
adc
adc
xor
mov
andl
xor
adcl
or
shl
or
imul
mov
mov
addl
shrd
xorl
mov
incl
mov
andl
xor
shr
incl
mov
cmpl
movzbl
movl
mov
mov
jmp
movl
jg
pushl
push
push
call
adc
mov
or
mov
dec
andl
adc
adc
sbbl
mov
xor
or
subl
shl
sub
jmp
jl
mov
xor
push
cmpsl
adc
push
clc
adc
lcall
mov
fstl
push
sbb
addr16
mov
inc
fs
das
push
sbb
aas
jg
addr16
les
dec
shrl
cmpb
and
test
xor
mov
inc
in
push
sbb
in
xor
popf
push
insl
add
ds
sub
aam
jne,pt
aas
xor
in
add
push
xor
sub
or
or
pop
leave
inc
cmp
adc
push
divb
repnz
incb
and
aaa
and
fisttpll
dec
iret
imul
stos
push
int3
xor
inc
cs
xchg
mov
sub
jmp
enter
xor
cmp
dec
repnz
pop
xor
sbb
enter
dec
stc
pushf
sbb
pop
inc
pop
xor
pop
lock
call
mov
rclb
jle
das
jns
adc
int
push
add
hlt
or
test
aaa
lods
mov
xor
aaa
mov
pop
jae
mov
roll
xor
lcall
adc
jns
jae
xchg
pop
popf
lock
sub
fwait
cli
or
pop
pusha
fwait
sbb
daa
cmc
roll
mov
popl
mov
cmp
lahf
sub
xchg
mov
call
add
js
dec
lret
lahf
sub
sub
sub
sbb
dec
dec
aad
push
scas
ss
fst
and
lcall
xchg
pop
xchg
dec
out
xor
pop
cs
cmp
xor
ret
gs
push
sbb
sbb
nop
inc
outsb
test
pop
adc
rclb
adc
pop
mov
jmp
cmp
std
loop
pop
ret
nop
aaa
adc
pop
and
dec
mov
rolb
xorl
pushf
in
lock
fcmovb
aas
and
adc
mov
push
add
outsb
jnp
ljmp
in
out
mov
inc
fdivp
movb
imull
adc
lahf
enter
stos
arpl
mov
push
mov
dec
lcall
push
push
and
lods
repnz
rcll
out
in
mov
dec
shl
mov
das
xor
sub
jl
jecxz
ds
inc
dec
jno
mov
jmp
ds
sbb
adc
pop
push
jnp
popa
cwtl
pop
sub
imul
adc
in
idivb
jb
divb
sub
xchg
push
pop
lods
inc
add
pop
out
clc
dec
divb
cmp
seto
rcrb
rorb
fsts
push
pushf
out
stos
xor
xchg
hlt
xlat
sub
pop
jb
pop
push
xlat
notb
int3
ljmp
pop
outsl
in
fisttpl
ss
test
sub
xchg
fimuls
lcall
sbb
pop
mov
stc
mov
xchg
test
aas
mov
adc
pop
dec
hlt
or
mov
pushf
ffreep
aam
pop
push
mov
sbb
stos
pop
dec
sub
ljmp
mov
push
sbbb
mov
xchg
xchg
mov
movsb
mov
ja
movsl
pop
subb
mov
pop
in
cmp
xchg
insl
mov
cmp
inc
adc
mov
inc
xchg
fiadds
inc
ret
fcoml
xor
lret
inc
dec
cltd
cwtl
loop
or
ljmp
jp
xlat
insl
comiss
decb
lcall
cmp
mov
daa
dec
lds
int3
les
js
jnp,pn
mov
ret
cltd
push
arpl
push
fnstcw
stos
and
jmp
mov
or
ja
sub
cmpsb
loop
in
mov
cs
rorb
in
outsb
fs
lret
push
pop
dec
inc
outsb
ds
hlt
adc
out
sub
shr
adc
ret
icebp
xor
cmp
adc
fistpll
push
xorb
mov
adc
mov
fstl
inc
stc
add
fs
sbb
jns
scas
jmp
mov
add
into
pop
addr16
sub
mov
sub
lret
fdivs
xchg
or
in
jb
pop
lret
jmp
or
or
xchg
xchg
sub
push
sarl
xor
xchg
jns
xor
cmpsl
ret
xlat
fisubrl
adc
adc
mov
xchg
mov
or
outsl
aad
push
dec
xchg
push
daa
das
les
mov
lret
or
or
sbb
rcll
hlt
popf
scas
push
fwait
cmpsl
int
iret
lret
or
daa
mov
jnp
mov
lret
add
in
push
pop
mov
loopne
add
push
popf
push
adc
insb
dec
sub
fcoml
sbb
ja
mov
inc
test
lcall
inc
stc
or
stc
lahf
add
in
addr16
outsl
or
movb
xchg
pop
sbb
adc
das
xchg
loope
loop
fstpl
int
mov
outsb
push
mov
mov
mov
icebp
mov
cmp
rorl
push
add
pop
fdivs
and
cmp
sub
mov
sub
pop
std
inc
dec
mov
cli
fsubrl
int3
and
daa
add
mov
jne
cli
jecxz
mov
and
test
faddl
rolb
sbb
pop
lds
cmpsb
pop
cmpl
pop
sbb
fisttpl
mov
sbb
fcompl
sub
sahf
cmp
aas
adc
xor
adc
xchg
push
mov
dec
or
test
in
pop
jmp
sbb
jle
push
xor
xchg
dec
xor
imul
pop
fdivs
push
popf
jmp
andl
push
push
ss
mov
out
xchg
cmpsl
or
movsl
fcomps
jg
int
pop
xlat
sub
jns
test
cli
fldenv
dec
adc
pop
insb
or
sub
fldenv
jbe
dec
nop
fidivrs
test
mov
movl
cmp
mov
movl
jg
or
mov
orl
mov
shrd
xorl
mov
mov
subl
xor
shl
addl
xor
subl
or
addl
shr
mov
mov
sbb
mov
and
mov
shrd
shr
mov
and
mov
mov
xor
subl
xor
andl
jmp
pop
leave
sti
subl
xlat
or
mov
adc
clc
adc
mov
lea
sub
pop
addr16
movl
stc
cwtl
mov
pushf
sahf
add
mov
cmpsb
push
sbb
add
mov
icebp
or
pop
fsubs
call
fisubs
adc
mov
call
pop
lds
bound
pop
xchg
push
je
jo
mov
ss
adc
jmp
les
bound
fstps
bound
add
lcall
dec
adc
not
out
inc
bound
adc
es
xor
ret
lahf
dec
int
test
fs
mov
mov
xor
or
ret
jnp
shlb
orps
mov
mov
xor
pop
mov
and
sahf
sar
loope
mov
mov
test
sar
xchg
or
sbb
inc
xchg
pop
pop
jbe
cli
or
out
lcall
scas
in
scas
mov
or
dec
sub
cmc
jb
mov
sti
je
test
pop
nop
jns
xchg
div
cmp
fwait
inc
adc
add
aaa
cmp
jle
push
jb
xchg
pop
ret
rclb
or
push
subl
pop
pop
sub
jnp
cmpsb
enter
dec
cmp
push
mov
ror
jns
sub
and
sbb
mov
sub
stos
jecxz
and
arpl
loop
sbb
xor
sub
mov
and
or
cwtl
pop
popa
adc
loope
dec
mov
push
xor
les
in
xchg
lods
into
lret
mov
adc
jo
jnp
outsb
xchg
ljmp
test
add
mov
std
ja
test
movsb
or
mov
movb
push
mov
adc
mov
inc
repnz
adc
lea
inc
inc
xor
inc
aam
xchg
ss
adc
icebp
mov
add
rcll
std
push
hlt
faddp
js
mov
es
mov
sbbb
add
orb
movsb
xchg
daa
mov
fsubs
pop
or
lcall
xchg
sbb
mov
flds
sub
mov
flds
add
and
xchg
inc
in
and
ds
in
imul
jns
out
push
pop
xchg
and
inc
push
sbb
pop
int
lods
inc
das
xor
addr16
gs
fidivl
and
or
mov
dec
cmpsb
sti
test
xchg
cmp
lret
aam
divps
push
test
xchg
sbb
and
pushf
adc
and
fisubl
jle
xor
sub
pusha
bound
xchg
dec
mov
enter
sbb
pop
cmp
inc
cld
lds
les
mov
xor
sub
cwtl
mov
clc
movsb
out
aaa
clc
xor
jns
xchg
jl
xlat
ss
xchg
lds
lods
pop
leave
cmp
shll
cmpsb
pop
mov
sbb
sub
ret
out
and
inc
lret
loop
jnp
stos
jg
xor
aas
and
and
xlat
mov
mov
jp
lock
adc
cmp
inc
rorb
lods
xchg
cwtl
je
push
or
scas
arpl
or
ja
xchg
sbb
stc
fwait
ss
pop
sub
cmpsb
iret
mov
jne
xchg
sbb
test
in
aas
lahf
test
gs
loop
cmp
dec
cmpsl
popa
inc
mov
rcrl
mov
pop
pop
pop
push
in
pop
fiaddl
or
lcall
jmp
mov
mov
or
mov
leave
aad
jp
lret
and
ja
fcmovb
adc
je
and
pop
clc
jo
ss
int
aas
cmp
jmp
sub
enter
addb
insl
nop
fcompl
mov
pop
test
fldenv
inc
push
int3
cli
les
nop
outsb
out
or
cmpsb
fdivl
mov
cmc
sbbb
into
inc
clc
sub
mov
loop
dec
adc
adc
sahf
stos
and
in
stos
enter
cltd
push
mov
vphaddubd
sbb
push
stos
testl
dec
or
test
sbb
sub
mov
lods
dec
inc
inc
and
icebp
dec
movsl
fcoml
cmp
push
sbb
adc
jmp
rcll
fdivr
adc
stc
icebp
out
in
imul
jns
mov
lods
mov
enter
adc
and
xchg
xor
mov
inc
enter
pop
mov
and
dec
sbb
push
push
inc
or
cmp
pop
cwtl
mov
xlat
push
mov
outsb
inc
in
fdivs
pop
into
add
ds
cmpsl
dec
adcb
inc
jb
sub
popf
cmp
mov
pushf
shl
lcall
xor
push
lock
add
add
sti
das
lea
push
jle
mov
subb
dec
nop
push
mov
dec
adc
jnp
loop
shlb
sahf
stos
push
fcmovu
jbe
add
or
xchg
repz
cmpl
add
xor
addr16
sti
dec
push
and
je
cmp
mov
cmp
out
ja
stc
or
loopne
sbb
jmp
lret
test
xchg
jp
xchg
mov
aaa
mov
ljmp
test
mov
add
mov
jge
rol
in
pop
dec
xor
ror
mov
sub
lds
xchg
movb
cmp
fcoml
jne
lods
cmc
cmp
loope
shlb
ss
outsb
cli
aam
add
add
data16
dec
aam
dec
jo
mov
mov
lret
adc
cld
cmp
sub
mov
dec
sbb
pop
aas
imul
push
mov
push
and
loop
fisubs
push
int
jne
lret
sub
mov
dec
arpl
jb
cmp
cwtl
cmpsb
icebp
popa
hlt
cmpsb
jp
adc
nop
mov
test
outsb
and
lret
icebp
insl
jg
add
clc
xor
push
pop
loopne
int3
push
jns
mov
or
je
cmc
jge
sub
push
in
loope
andl
imul
jmp
mov
or
push
and
ljmp
inc
xchg
jge
adc
clc
adc
sbb
mov
cltd
push
cmp
push
hlt
xor
ret
cmc
inc
mov
aas
ss
stos
aas
cs
push
mov
outsl
pop
out
cwtl
add
jb
mov
mov
stos
inc
dec
outsl
pop
cs
fidivs
imul
das
sbb
fsub
pop
divb
mov
and
dec
lods
or
int3
push
and
adc
xchg
push
dec
in
aaa
sub
fstpl
mov
cmpsb
out
xchg
scas
fisubs
adcb
popf
inc
dec
xorb
loope
mov
jge
or
lods
xor
cmp
cmp
sub
test
aam
and
mov
iret
add
testl
add
fmull
in
ds
cltd
mov
cmpsl
adc
jnp
mov
add
or
and
sub
adc
rorb
shll
out
sub
push
lcall
icebp
rolb
lock
ss
and
jne
jp
pop
xor
call
inc
inc
xor
pop
or
mov
and
loope
bound
ds
lds
int3
xchg
cmp
jb
ja
pop
add
shlb
mov
sbb
decl
scas
fstpl
mov
out
mov
jne
cld
leave
rcrl
or
xlat
add
dec
inc
loop
fucom
mov
add
xor
aas
mov
ds
cmp
pop
cmp
movl
sbb
or
mov
dec
clc
testb
and
pop
inc
in
fs
lcall
or
loope
xchg
jnp
sbb
jbe
insb
cmp
sub
jecxz
or
sbb
push
popf
sub
add
fstl
vldmxcsr
or
je
cs
das
xchg
sub
cmp
dec
imul
inc
mov
adc
inc
adcl
int
inc
xor
add
cmp
jecxz
out
cwtl
cmp
loop
stos
pushf
dec
mov
pop
insb
cmp
add
sbb
push
push
xor
or
inc
lock
lret
in
test
jbe
mov
xchg
pop
sub
outsb
pop
lods
mov
rclb
sub
and
fcmovnbe
jo
and
orb
xor
xchg
dec
rcl
sbb
test
fmuls
cld
popa
mulb
dec
push
lods
ljmp
lret
mov
scas
push
mov
cmc
dec
cmc
push
aaa
rcrl
mov
push
cmc
xor
mov
jbe
cmpsb
dec
gs
pop
shr
je
xor
or
test
clc
mov
push
mov
arpl
xchg
mov
fs
mov
adc
outsl
stos
mov
ret
out
mov
leave
dec
repz
out
xor
pop
sub
loope
decl
dec
pusha
sbb
xor
in
lret
mov
roll
push
incl
sub
sahf
stc
fcompl
int3
mov
pop
fstpt
int3
jbe
push
or
mov
jge
outsl
mov
jg
mov
and
mov
lcall
add
inc
sub
ss
mov
fbld
push
fists
cmp
cmpsl
sbb
add
repz
je
push
push
popa
aam
mov
adc
jmp
mov
pop
nop
into
icebp
insb
dec
mov
fstpl
mov
popf
cli
jne
push
mov
into
fnstsw
jne
aad
push
push
arpl
stos
mov
out
pop
sub
sahf
popa
das
cmp
icebp
xor
aad
sbb
jo
out
shr
xor
cli
mov
jecxz
popf
cmp
mov
bound
pop
xor
mov
mov
mov
cld
jl
add
nop
sbb
lret
jbe
outsb
pop
inc
aaa
es
and
jmp
movsl
gs
mov
mov
dec
xor
jp
out
repz
orb
push
sbb
adc
daa
push
test
jno
insl
xorb
insb
dec
jae
mov
add
mov
sub
xchg
leave
orb
jbe
movsb
push
insb
aad
and
jge
jle
xchg
cltd
lods
adc
daa
adc
cld
push
sub
cmp
push
jbe
sub
call
fbld
mov
rorl
jbe
aad
xchg
lock
aas
mov
mov
cwtl
aas
dec
test
mov
bound
daa
inc
pushf
lods
and
rcl
test
add
in
cltd
cmp
inc
data16
nop
aas
pushf
cwtl
mov
xchg
jnp
sub
cwtl
jg
jmp
cmp
and
arpl
mov
popa
incb
or
inc
mov
divb
jge
repnz
fadds
and
das
cmpsb
bound
cltd
sarl
loope
orb
fldcw
sbb
adc
ljmp
adc
mov
ja
das
and
xor
pushf
sub
add
adc
fidivrs
lret
les
pop
in
arpl
clc
jnp
xor
lods
outsl
movsb
int3
imul
mov
push
aam
mov
dec
mov
push
or
lods
push
jo
xor
lods
stos
and
arpl
jbe
stos
jb
dec
inc
fsubrl
mov
nop
mov
jg
inc
xchg
es
test
add
shrl
mov
or
cmp
add
adc
je
pop
ljmp
iret
xor
jnp
or
inc
push
call
push
iret
inc
push
cmp
push
mov
lret
adc
sbb
insb
fdivl
mov
xchg
dec
dec
lret
std
jne
push
dec
or
bound
push
xchg
int3
push
cmpsl
outsl
or
jmp
insb
scas
xchg
dec
ret
push
popa
in
adc
xchg
sbbl
repnz
ficomps
push
and
sar
test
loopne
mov
orl
push
xorl
mov
orl
shrd
mov
orl
jmp
or
dec
addr16
adc
push
jbe
aam
adc
push
clc
adc
xor
inc
add
cs
dec
in
jl
xchg
cmp
pop
xorb
repnz
loope
fsubr
sub
cmp
rclb
dec
in
cmp
lcall
jno
jnp
or
xchg
loopne
dec
xchg
sbb
movsl
imul
pop
pop
push
iret
adc
sti
xchg
fs
pop
push
xchg
jae
popa
imul
enter
pop
out
ds
mov
in
test
adc
jl
inc
xor
dec
or
ljmp
scas
mov
lods
clc
sbb
mov
lcall
imul
sahf
mov
gs
xchg
aam
dec
adc
jno
or
add
int3
adc
xlat
cmp
sub
pop
dec
dec
push
stc
orb
repnz
mov
inc
es
adc
push
pop
jo
in
aas
add
mov
dec
push
pushf
rcrb
and
mov
testb
push
fcomps
push
hlt
jnp
mov
cmpsl
aam
push
mov
jno
and
lock
cltd
cmpsb
in
cmp
xor
out
cmp
mov
xchg
add
mov
mov
cwtl
int
je
clc
imulb
xchg
fcmovne
sahf
shrl
push
fadds
push
pop
pushf
hlt
jns
insb
jbe
or
fisttps
std
xor
movsl
mov
pop
fwait
adc
push
mov
xor
xchg
js
jb
xor
cmp
adc
sbb
dec
xchg
adc
stc
pop
jl
sarb
rclb
xchg
outsb
mov
lahf
and
repnz
roll
mov
stos
adcb
sti
repz
icebp
mov
inc
or
insl
or
into
pop
mov
popa
dec
mov
or
or
fstp
ds
cmpsl
or
dec
and
cmc
pop
in
hlt
and
aam
scas
nop
add
dec
and
gs
lods
jne
pop
lods
shrb
test
das
jne
lcall
jge
jb
popf
std
mov
add
js
aaa
xchg
pusha
loop
imul
psubusb
push
mov
mov
xchg
push
sahf
xchg
push
jmp
dec
cs
cmp
lret
dec
pop
mov
mov
adc
into
mov
repnz
scas
xchg
lcall
in
lahf
mov
movsb
and
or
fwait
cwtl
insl
out
push
out
loopne
lods
jl
cmp
xchg
loop
adc
push
adc
cmp
sbb
movsb
data16
mov
push
cmp
push
loop
enter
xorb
jmp
shll
or
mov
inc
jne
imul
cmc
fildl
inc
mov
rcrb
adcb
movb
or
pop
mov
loop
sub
dec
cmp
movsl
shll
jecxz
aaa
dec
inc
cmp
jmp
mov
mov
push
mov
outsl
mov
pushf
mov
cmp
or
cmp
add
xchg
add
fisubl
sub
lret
rol
test
jbe
jbe
mov
xchg
mov
sub
aam
outsl
les
fcmove
addr16
ljmp
rcll
cld
repz
cmp
scas
push
mov
and
pop
sub
lret
xor
sbb
mov
dec
lds
jg
mov
pusha
cmc
push
sbb
or
lea
push
xor
push
sti
dec
mov
xlat
js
shll
cmp
popa
je
fimuls
sbb
adc
jle
fdivs
jbe
sbb
inc
jg
pop
jb
or
pop
das
pop
and
movsl
inc
add
mov
push
into
xor
jecxz
insl
push
push
aad
mov
fidivrl
and
inc
aas
insb
fsts
incl
jmp
cmp
xchg
mov
pop
sub
inc
out
xchg
ljmp
dec
sbb
fwait
nop
cmp
lods
cmpsl
test
lea
dec
movsl
addr16
shrl
daa
aaa
xlat
sbb
fwait
cmp
lds
xor
mov
jns
xchg
test
add
fidivrs
xor
sbb
ret
decl
es
gs
test
lock
sbb
sub
fwait
mov
mov
and
inc
lds
sbb
lea
pusha
repz
mov
mov
push
aaa
lds
mov
push
pop
lods
out
sahf
pop
test
mov
pop
fadds
and
lcall
push
outsl
movsb
push
cmpl
fnsave
fbld
popa
testl
sbb
insb
das
lret
jo
scas
ret
jo
mov
sbb
cmp
shll
inc
repnz
push
ret
and
nop
mov
insb
into
js
add
sub
jne
jmp
pushf
xchg
add
into
jecxz
out
push
mov
pop
cmc
lea
cmp
or
and
insl
ficompl
test
mov
js
ss
push
jb
in
pushf
popa
pop
sbb
filds
in
stc
sti
aam
in
pop
push
in
bound
inc
adc
xor
or
lret
je
dec
inc
enter
push
sub
test
xor
gs
sbb
dec
mov
push
leave
std
test
jmp
xor
daa
int3
sub
jge
pop
mov
lea
loop
es
stos
sub
sub
bound
lret
call
repnz
pushf
pop
pushl
sub
or
repnz
filds
adc
cmpsl
push
fcomi
das
ss
push
dec
xchg
shrb
adc
rolb
dec
sbb
sub
adc
push
xor
and
add
mov
imul
cmpsb
push
loop
icebp
mov
inc
dec
jne
fxch
aam
inc
or
flds
xor
xchg
and
sub
iret
out
dec
jecxz
andb
add
pusha
popa
divb
daa
ljmp
mov
push
repnz
cltd
flds
shl
adc
cltd
movsl
icebp
clc
mov
addl
xor
orl
shl
xor
orl
or
shr
xorl
mov
sub
mov
mov
mov
shrd
shr
jmp
ljmp
sub
inc
push
pop
xor
push
clc
adc
repnz
push
fldcw
das
jge
sub
sub
adc
fstpt
or
sbb
in
mov
cwtl
mov
fst
sti
jne
lcall
adc
jae
inc
xchg
push
xlat
arpl
jmp
shl
sarb
cli
dec
or
mov
nop
sahf
pop
xor
inc
stos
dec
cmp
inc
adc
js
fldcw
cmpsl
pop
inc
in
lret
adc
in
mov
pop
xlat
movsl
dec
pusha
cmp
adc
stc
repnz
frstor
aam
jle
out
mov
sbb
leave
js
and
ss
test
int
dec
and
push
add
or
into
jmp
inc
enter
jp
test
mov
arpl
dec
ljmp
inc
test
fidivl
xchg
push
es
pushf
xchg
scas
fadds
pop
out
jg
mov
fs
adc
jbe
in
mov
xlat
add
or
ret
mov
or
jge
les
aad
jge
add
lret
push
mov
les
fs
in
daa
jnp
mov
repnz
jg
addr16
adc
cmpsb
fwait
or
mov
mov
add
sbb
push
lea
popa
inc
test
mov
and
sub
mov
cmpsl
testb
ret
lcall
cmpsb
and
lock
ss
xor
sub
xor
sub
pop
cwtl
test
scas
jecxz
sub
rcl
cvtdq2ps
fadds
cmpsb
xchg
repnz
test
dec
sbb
and
mov
cli
sub
or
xchg
mov
xlat
jp
filds
mov
in
stos
fstpl
cmp
push
inc
inc
daa
pop
mov
xor
adc
mov
push
out
es
xor
fdivrs
mov
xchg
mov
adc
jl
int3
cli
inc
mov
pushf
iret
jg
inc
add
jb
inc
push
aad
leave
repnz
sub
add
fisttpl
arpl
push
fstl
push
in
mov
out
mov
in
test
cli
adc
pop
fidivs
fcoml
pop
jecxz
pop
or
int3
xor
pop
jmp
imul
aas
pop
sbb
aas
mov
add
inc
pop
lcall
push
stc
push
mov
lret
or
rorl
movsl
xor
xchg
pop
jecxz
xchg
les
pusha
aaa
push
mov
mov
mov
jb
je
and
xchg
sub
nop
lock
cmpsl
add
fisubs
nop
jg
xchg
xor
imull
mov
xchg
jmp
out
insl
mov
xchg
loope
jle
dec
cmpl
sti
and
mov
cmpl
repnz
sbb
fs
popf
adc
pop
add
and
add
adc
fdivrs
and
scas
pop
mov
xlat
jbe
cmp
aam
iret
sbb
xor
repz
lea
cmp
fcmovnbe
lods
mov
std
cmp
call
push
lahf
mov
cli
nop
jp
or
idiv
adc
test
cmp
outsb
sbb
repnz
fcomp
mov
and
lock
cmpsb
mov
push
sub
ds
das
ss
lods
ds
mov
out
jno
push
cmp
clc
in
push
lret
or
cld
xchg
lcall
outsb
ljmp
push
push
in
adc
popl
push
imul
push
xchg
mov
pop
inc
rcll
popf
ljmp
rolb
addl
xor
push
je
push
cmpsb
jecxz
inc
adc
jae
sbb
bound
add
and
xchg
or
mov
out
in
mov
lcall
mov
dec
fisubrl
mov
hlt
push
and
lret
movsl
adc
enter
idivb
pop
lds
je
xchg
jo
int
mov
mov
jne
cld
cmp
sub
mov
push
scas
stc
push
xchg
xor
and
popa
or
mov
xor
mov
adc
xchg
leave
inc
inc
add
xchg
aad
mov
mov
add
jo
and
popf
testl
out
fwait
mov
ficoms
xchg
iret
bound
or
call
sub
mov
ret
stc
push
xor
test
push
fisubs
mov
test
jbe
push
out
add
jge
into
jae
mov
aaa
shr
in
inc
sbb
cmpsl
cwtl
jmp
sarl
shlb
insb
sbbb
in
xchg
xchg
inc
jmp
lock
pop
dec
scas
hlt
sbb
jne
divl
mov
ja
cld
icebp
jno
cwtl
xchg
inc
mov
xor
jae
sbb
or
js
scas
std
repnz
jae
add
push
testl
push
or
mov
cli
movsl
imul
test
je
push
imul
mov
inc
or
and
dec
jle
mov
imul
sub
sbbl
fidivrs
cwtl
mov
sahf
aam
mov
sbb
or
xchg
push
cli
leave
mov
repz
dec
and
xchg
cld
stos
add
dec
call
xor
dec
lods
lds
fnsave
pop
pop
int
shll
leave
loope
jge
int3
or
push
xlat
fidivl
aaa
jo
push
mov
lock
jl
imul
fwait
push
adc
std
in
mov
ret
imul
pop
xchg
cs
enter
cmp
mov
add
das
mov
mov
cmc
pop
cmp
jbe
in
mov
pop
icebp
sbb
sub
insl
negb
cmp
cmp
jge
and
pusha
jb
stc
jne
out
mov
ficoml
mov
cld
leave
out
lds
lss
inc
sbb
pop
cmp
xlat
mov
aaa
sub
or
adc
mov
xor
add
sub
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
jmp
out
add
and
xlat
es
test
inc
aam
xorb
clc
adc
ljmp
pop
mov
adc
je
mov
lods
mov
in
push
loope
mov
push
imul
mov
test
stc
repnz
icebp
dec
lea
or
jno
in
repz
and
sbb
xor
dec
push
push
dec
mov
test
push
call
aad
jnp
std
push
test
clc
inc
addr16
js
leave
in
dec
cli
insl
cmpsb
mov
addl
pop
xchg
mov
or
jecxz
cld
sbb
inc
mov
jns
push
dec
rcll
inc
std
imul
mov
xchg
mov
adc
jnp
mov
cld
bound
pop
fiadds
mov
pop
fdivl
std
mov
fcoms
subl
scas
dec
or
sub
mov
mov
push
mov
pop
cmp
xchg
ds
cvtps2pd
push
dec
mov
add
mov
cmp
or
in
mov
jl
lret
lret
xorb
or
das
daa
add
adc
cmp
add
and
imul
dec
jg
bswap
insb
popf
jg
adc
ss
dec
divl
and
inc
addr16
and
cs
mov
push
or
cmpl
add
jmp
sbb
pop
fists
sarb
pop
add
ds
imul
mov
and
push
sbb
movsb
ret
cli
movsl
in
mov
in
insb
jle
es
icebp
sub
inc
in
cmp
pop
sbb
cmp
inc
and
mov
jno
pop
mov
inc
mov
aas
orb
sbb
shl
push
add
jge
or
push
mov
xchg
xchg
mov
push
pushf
lcall
enter
mov
sub
jne
mov
add
loope
cmp
push
lock
xor
pushf
ja
gs
sbb
mov
cmp
and
adc
stc
je
stos
scas
out
pop
mov
mov
push
add
and
iret
pop
test
pop
daa
xchg
lds
sub
adc
sbb
lock
or
cli
push
pop
int3
add
sysenter
inc
add
dec
mov
jmp
xor
sub
dec
xchg
lea
imul
adc
pop
test
inc
jns
dec
int
xchg
add
popl
add
lret
loope
imul
sbb
xchg
add
xlat
int3
clc
mov
dec
cs
add
mov
jg
into
icebp
enter
repnz
pop
in
out
call
jnp
test
fnstsw
int3
nop
and
inc
ret
lods
rclb
and
xor
sbb
jmp
icebp
cmp
sub
push
adc
ficoms
jne
push
cmpsb
popa
outsl
pop
daa
xchg
popf
dec
and
pop
cmp
lds
loope
aam
xchg
mov
clc
inc
lret
arpl
inc
sbb
jp
loope
popf
or
xchg
mov
inc
mov
hlt
sbb
jg
add
cltd
daa
js
adc
pop
fimull
aad
and
sub
jb
lock
inc
dec
sub
cmp
lahf
into
sti
xor
jl
push
mov
mov
test
jne,pt
adc
fisubrl
add
arpl
aas
push
insl
xor
gs
pop
cltd
mov
aam
inc
and
lock
inc
dec
ss
cmp
sub
clc
jmp
mov
sub
fwait
jns
adc
push
mov
fs
pop
lcall
cmp
mov
cmpsb
fs
sub
inc
cmp
sbb
pop
cltd
inc
stos
loopne
imul
pop
std
jno
rcrb
inc
dec
aam
dec
test
fistpl
inc
mov
inc
adc
ss
fsts
jne
adc
lock
divb
jecxz
in
inc
pop
sbb
xchg
enter
das
in
cmp
cmp
pop
xchg
mov
mov
cld
pop
insl
loopne
cs
mov
xlat
push
test
jmp
mov
jns
lock
inc
cwtl
cmp
lock
rol
movsb
jbe
sub
pop
clc
add
in
movsl
and
mov
das
jge
sbb
nop
jge
popf
sti
pop
cwtl
push
mov
sub
out
dec
xchg
les
insb
dec
rcrb
fldln2
add
lea
movsl
test
mov
mov
int
subl
test
push
mov
mov
insb
jmp
push
aas
xor
and
daa
or
lea
push
sub
and
or
add
out
imul
add
fldenv
lea
shr
xchg
in
aam
push
xchg
sub
cmc
cmpsb
lcall
mov
jecxz
je
mov
std
push
test
imul
fcmovnb
fildl
adc
out
adc
and
in
insb
or
mov
enter
and
push
fcomi
and
jge
push
dec
cld
test
lret
mov
inc
adcl
aaa
cmp
nop
lea
mov
jb
inc
in
and
cs
imul
fiaddl
add
rol
dec
rolb
sbb
testb
ret
lcall
enter
rorb
cmp
mov
aaa
fcmovu
cmp
or
jge
dec
xor
dec
jg
cs
test
imul
dec
add
jge
pop
add
inc
das
jg
stc
xchg
jb
sbb
rol
mov
pusha
fs
pop
scas
or
rolb
mov
xor
dec
cmpsb
std
rolb
daa
mov
adc
cmc
stos
xchg
je
mov
lods
xor
adc
dec
push
jae
mov
cmc
into
cmp
jns
lods
inc
mov
pop
mov
jne
pop
push
in
insl
adc
mov
cltd
in
jo
aas
xchg
cld
subb
xor
jae
pop
insl
lock
call
cmp
jno
cwtl
add
xchg
insb
add
sarb
test
sbb
and
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
jmp
inc
mov
mov
loope
add
clc
adc
test
cwtl
std
mov
ds
icebp
mov
and
adc
sbb
cli
scas
sub
bound
add
jmp
outsb
ret
mov
dec
fldenv
and
lahf
mov
addr16
push
mov
loope
pop
popa
jo
test
inc
clc
or
xor
dec
nop
fxch
jle
aad
clc
in
fisttpl
jno
jecxz
xchg
xchg
in
jmp
ret
aaa
loop
or
cli
repnz
hlt
pop
adc
mov
popa
mov
lods
rcrl
test
orl
push
fs
outsl
pop
rcl
test
arpl
xor
sbb
cmovp
sub
outsb
inc
outsb
lahf
scas
cmp
inc
sub
in
mov
and
push
mov
sbb
mov
clc
dec
sbb
mov
xor
dec
stos
icebp
jle
sbb
or
rcrb
and
leave
pushl
pop
outsb
es
lcall
xor
adc
ljmp
leave
lret
out
dec
mov
mov
push
ret
fistpll
das
fcoms
cmpsl
pop
and
loopne
imul
sbb
sahf
jns
sahf
cli
jg
leave
fucomi
mov
xlat
jle
cmp
push
call
cltd
push
xchg
loopne
dec
lock
cmp
push
hlt
jle
dec
push
push
insl
xor
and
arpl
sub
shrb
popa
mov
jge
pop
mov
push
loopne
push
popf
mov
popf
cmc
and
fchs
mov
repnz
test
and
add
stos
fisttps
inc
xchg
fmull
dec
sbb
cmp
stc
pop
or
scas
and
test
popa
pop
ljmp
addr16
and
push
movsb
pushl
je
inc
mov
jmp
pop
xor
imul
inc
mov
and
adc
push
repz
insl
inc
dec
fs
sub
cmp
sub
cmp
mov
std
push
out
daa
sub
pop
out
cmp
add
inc
xlat
out
lahf
and
daa
ror
pop
test
push
jecxz
sbbb
mov
ja
sub
mov
loop
rorl
mov
cwtl
or
mov
insl
jl
aam
sub
cld
sbb
shrl
pop
out
fimull
adc
arpl
lret
jmp
jle
mov
mov
and
cmp
add
test
push
or
dec
xchg
ss
lods
or
subl
push
inc
in
xor
loopne
xchg
mov
push
mov
fwait
pop
daa
xchg
jp
inc
in
mov
ret
dec
sbb
pop
and
or
xor
ficomps
lret
ja
or
test
cmc
mov
scas
fstenv
mov
das
sub
push
push
adc
xlat
xchg
ret
jbe
mov
lahf
xchg
outsb
sbb
dec
in
mov
cmc
pop
outsb
lds
sub
lds
leave
jbe
sub
xor
and
lods
pop
jmp
mov
dec
in
or
lahf
pop
mov
add
fistl
inc
fstpt
pop
push
sub
jmp
insl
gs
mov
outsb
mov
or
test
insl
sahf
arpl
jne
fst
adc
sbb
push
jnp
inc
xchg
repz
cmpsl
lcall
push
sub
int
and
iret
pop
adc
adc
inc
pushf
pop
dec
cltd
or
cmc
scas
or
add
jp
sub
add
cltd
add
jne
xor
and
sbb
mov
divl
push
mov
cmp
dec
test
or
cltd
sub
xor
jl
leave
and
rclb
stos
mov
push
fwait
adc
inc
fcomip
hlt
xor
xlat
lcall
ljmp
movb
clc
inc
shrb
or
xchg
iret
pop
cltd
push
fs
mov
popa
cmp
lods
popa
decl
fs
sbb
mov
in
aam
dec
loop
incb
mov
cmpsb
in
addr16
mov
cmp
lcall
mov
fildl
sub
push
cmp
into
mov
in
bound
iret
std
sbb
sahf
nop
mov
repnz
test
mov
push
inc
jmp
shl
imul
insl
xchg
add
jae
imulb
xor
or
in
and
cmpsb
push
sarl
lcall
data16
sub
in
and
scas
lret
push
mov
lret
je
shlb
jb
cmpsb
out
sbb
xchg
vcvtsi2sd
in
loop
iret
push
fmull
arpl
insb
enter
inc
lahf
sbb
inc
fs
in
lods
pop
push
loopne
pop
mov
jbe
aaa
insb
sti
jecxz
jl
aam
jns
iret
push
aaa
lock
test
scas
aad
inc
jmp
xor
mov
mov
jae
ret
out
sub
cli
and
fcoms
out
in
push
cmp
pop
mov
pop
xor
aam
or
stc
pop
mov
push
outsl
out
ret
cmp
sar
rcrl
rcrl
es
sub
popa
add
aaa
cli
fisubl
pop
push
stos
inc
data16
incl
arpl
jp
or
push
and
rclb
stc
in
xorl
mov
lods
test
in
mov
nop
ss
mov
push
fnsave
movsl
or
push
xor
or
imul
jbe
and
sarl
jb
decl
mov
out
out
aaa
xchg
xor
call
cmpsb
jecxz
xchg
mov
adc
inc
push
adc
insl
mov
out
add
clc
jg
inc
or
repnz
push
fistps
popf
ret
cmpsb
inc
aaa
sar
inc
std
push
lret
pop
jae
xchg
jne
sbb
mov
shrl
clc
arpl
mov
movsl
mov
fwait
test
in
orl
addr16
and
gs
lods
cmp
lret
sbb
in
mov
push
rolb
mov
popw
jmp
or
lods
pop
inc
hlt
mov
push
jecxz
rorb
ret
or
cld
push
add
add
mov
sbb
dec
ss
inc
aad
adc
push
clc
adc
mov
pop
dec
sub
xchg
mov
xchg
jle
fnstsw
pop
add
push
adcb
fmuls
push
add
add
mov
mov
dec
cmp
sti
pop
stos
leave
les
xor
into
mov
mov
push
imul
xchg
inc
mov
dec
xchg
das
fs
sub
mov
or
imul
out
movsb
aaa
jp
pop
lret
imul
in
ret
pop
jo
or
mov
popf
lret
lods
push
nop
mov
sbb
sbb
test
arpl
int
push
cwtl
push
jge
mov
sti
or
and
cmp
jns
mov
in
cmp
add
cmp
sbb
mov
cltd
jno
test
sub
int3
mov
xor
add
pop
sahf
ljmp
or
mov
cli
mov
ret
mov
cmp
mov
lock
sub
pop
xchg
jmp
adc
inc
adc
mov
lcall
cli
mov
ror
mov
mov
cld
fs
jo
lahf
inc
test
mov
dec
push
lods
xorb
mov
das
jb
cmp
mov
mov
adc
mov
push
mov
stos
jecxz
cld
push
mov
cli
push
sub
pop
inc
fwait
andb
outsb
aas
aaa
mov
or
mov
lcall
mov
dec
xorl
js
test
es
dec
cmp
aam
leave
call
jae
xchg
loopne
mov
fisttps
daa
dec
mov
sub
mov
leave
sbb
adc
xchg
in
fwait
outsb
sub
aas
cli
pushf
pop
push
jmp
add
dec
shll
stos
movsb
int
addr16
icebp
inc
daa
xorb
stos
pop
mov
inc
push
and
add
ss
lcall
xchg
and
dec
push
sbb
hlt
sbb
repz
call
lret
lcall
xchg
cwtl
addr16
out
sub
mov
pop
js
mov
pop
pop
jnp
mov
xchg
or
insb
iret
fldt
or
scas
sub
add
add
inc
shlb
xor
dec
divb
fnsave
std
mov
ret
imul
mov
dec
xchg
test
mov
mov
mov
mov
jl
dec
sub
sbb
dec
jns
ds
insl
outsl
mov
jo
push
out
in
ret
cmp
cmp
jne
lods
loop
sub
adc
int3
add
cmp
mov
push
add
sbbb
jno
ja
mov
mov
leave
sti
mov
in
sbb
mov
mov
mov
pusha
int3
js
sub
adc
out
out
or
lea
mov
nop
sarl
std
clc
sbb
cmpsl
jo
shlb
adc
mov
push
mov
aas
jle
addb
call
icebp
stos
ljmp
cmp
iret
mov
inc
aam
mov
bound
outsb
dec
mov
adc
stos
orl
mov
pop
mov
inc
jae
cs
aaa
add
pop
in
or
jmp
pop
xchg
inc
dec
jp
push
mov
mov
test
or
outsl
das
jl
into
int
push
jns
loope
mov
cmpl
roll
je
xchg
leave
test
into
shrl
arpl
stc
lea
test
push
mov
in
lcall
push
sbb
in
mov
iret
xchg
xchg
xor
jge
cmc
mov
pop
int
pop
cwtl
pop
inc
pop
dec
shlb
and
fstl
push
mov
push
xor
icebp
mov
ss
outsb
ja
imul
push
sub
repz
in
lcall
ss
or
jb
fucomip
arpl
outsb
pushf
enter
mov
pop
inc
or
sbb
lahf
dec
push
and
jecxz
add
out
fcoms
adc
pusha
movsb
xchg
or
mov
sti
push
pop
pop
cli
clc
mov
lcall
cmp
xor
stos
ret
idivl
pop
fstpl
add
ficomps
mov
mov
data16
icebp
lds
rclb
aad
add
sub
hlt
xor
inc
lods
stc
sub
dec
pop
loope
cmc
mov
fbld
lahf
popl
test
outsl
mov
cli
je
or
push
lock
fmulp
push
xor
cltd
sbb
icebp
out
addr16
mov
mov
xor
and
dec
and
lret
jle
sub
mov
repnz
cmp
subb
add
dec
inc
jns
pop
loopne
ret
repz
fs
stos
lods
sbb
test
out
push
test
adc
add
dec
sbb
xor
mov
mov
cltd
inc
into
insl
add
out
fs
xchg
loope
cmp
mov
repz
mov
xor
mov
mov
inc
imul
add
xor
adc
xchg
xor
sub
mov
icebp
or
pop
jae
add
xchg
or
sub
jmp
push
mov
push
jmp
jo
mov
push
mov
sbb
jecxz
push
inc
push
leave
loopne,pt
sbb
jecxz
out
outsb
mov
shl
jbe
pop
dec
inc
adc
jb
ret
pushf
mov
mov
pop
pop
push
xchg
add
and
jb
sbb
lea
decb
sbb
dec
sbb
out
dec
dec
mov
test
mov
nop
lahf
icebp
cltd
adc
lds
mov
scas
cmp
sub
inc
mov
adc
mov
fwait
ja
in
adc
js
xchg
dec
insl
lock
test
shlb
shr
pop
jmp
xchg
fimuls
xchg
push
and
sbb
cmp
aas
add
fs
jne
xchg
pop
push
ret
iret
xchg
cld
pop
mov
push
adc
ljmp
xchg
aam
pop
je
jl
test
dec
stc
xchg
push
sbb
neg
add
fwait
ss
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
jmp
fs
xor
push
fs
fisubrs
adc
adc
push
clc
adc
sbb
sti
add
xchg
mov
xlat
aas
inc
test
adc
dec
aad
cmc
cwtl
push
add
fwait
mov
loopne
les
add
xchg
mov
ljmp
dec
mov
dec
mov
std
inc
cli
fistl
adc
sti
add
jne
ds
sbb
pop
inc
dec
xchg
mov
ffree
inc
sahf
mov
out
mov
test
inc
in
fisubrl
dec
and
xor
cmp
ja
xchg
cmpsl
dec
push
pop
stos
jmp
arpl
mov
pop
xchg
aad
sub
pop
jbe
xchg
scas
inc
push
std
daa
sahf
mov
adc
ret
or
jge
jp
push
mov
insb
loopne
adc
popf
mov
aas
lret
push
sub
test
mov
or
and
or
mov
subl
cmp
movsb
xor
popa
jns
adc
xor
jne
jmp
movsl
aam
insl
stos
fcomip
sti
fs
xchg
notb
popa
mov
cmp
es
push
js
pop
out
pop
push
inc
push
lret
jmp
popa
sbb
dec
scas
loope
adc
pop
sbb
ret
jecxz
popf
or
mov
scas
jecxz
push
daa
movsl
add
movsl
sub
push
add
outsl
pop
or
inc
and
fdivrl
dec
mov
cli
jae
in
jg
popa
mov
pushf
scas
xchg
mov
add
test
xchg
mov
insl
in
push
imul
mov
jge
pop
sbb
loopne
mov
add
mov
mov
push
popf
cmp
xchg
jno
push
out
divl
cmp
or
in
fcoms
adc
xchg
mov
xor
out
jno
jp
adc
xor
lahf
push
popf
dec
popf
push
stos
or
ret
cmp
fdivr
mov
cmp
pop
jl
loopne
cmp
mov
xchg
mov
xor
xchg
mov
rolb
pop
aas
and
mov
pop
mov
xlat
cwtl
push
mov
sbb
cmp
sub
sub
inc
cmpsl
jbe
and
xlat
lds
push
scas
fists
pop
pop
dec
cmpsl
outsb
add
mov
lret
dec
dec
xchg
popf
add
xchg
sbb
int3
adc
push
in
add
mov
dec
push
mov
jnp
das
dec
sbb
pop
arpl
std
sub
mov
mov
xchg
cmpsb
xchg
mov
gs
mov
mov
call
pop
es
sub
cmp
dec
lea
in
xor
push
dec
mov
push
subb
mov
sub
mov
mov
stos
mov
into
sbb
jns
inc
in
popf
jecxz
pop
adc
mov
sub
xor
fsub
push
insb
mov
test
in
adc
inc
push
xchg
jo
adc
push
cmp
shrl
insl
sbb
ljmp
mov
aas
andb
gs
or
lock
inc
adc
test
xchg
sbb
add
or
pop
ja
xchg
cmpsl
mov
mov
push
cmp
and
and
push
pop
inc
aaa
leave
push
into
xor
in
jb
out
leave
inc
cmpsl
xor
scas
xchg
sbb
movsb
add
fs
sbbb
sbb
mov
stos
mov
pop
mov
ljmp
cmp
fisubs
pop
xor
mov
add
popa
dec
repz
lods
mov
imul
mov
dec
xchg
mov
dec
xchg
lahf
subl
addr16
repz
push
js
or
adc
sub
out
and
mov
inc
pop
or
stos
dec
stos
mov
lahf
fsts
cmp
test
sub
jne
xchg
jbe
cs
mov
inc
mov
jnp
mov
sti
loop
cli
mov
orl
cmp
jecxz
scas
mov
inc
pop
mov
or
cmpsb
mov
pop
xchg
mov
mov
js
xchg
mov
stos
aaa
insl
sub
and
jo
ficoml
pop
lret
ds
nop
jg
stos
sub
mov
cmpsl
sar
push
and
divb
mov
mov
push
cmpsb
push
shlb
xchg
pusha
xlat
jg
xor
in
and
xchg
cmp
push
mov
daa
xor
call
push
cmp
stos
neg
sub
cli
pop
jl
int3
pop
push
leave
cmpsb
call
push
pop
daa
push
inc
insl
mov
push
lea
sbb
das
sbb
add
jle
int3
nop
hlt
xchg
jmp
cmc
and
arpl
popf
mov
pop
jecxz
mov
iret
push
mov
pop
and
mov
add
neg
pop
mov
and
cmpsl
or
sbb
in
pop
out
dec
push
iret
pop
jae
fsubs
pop
mov
lret
cmpsl
repz
int3
push
sbb
faddp
pop
sbb
imul
fs
test
ds
inc
sbb
insb
pop
sub
mov
add
push
lds
lds
and
addl
ftst
push
xchg
pop
jmp
test
dec
inc
push
mov
or
pop
sarl
stc
dec
pop
loopne
mov
push
pop
push
imul
ljmp
adc
jmp
dec
add
popa
push
cli
jp
pop
notb
pop
xor
dec
popf
icebp
imull
mov
xchg
mov
and
xchg
sub
cmpsl
test
mov
xchg
sbb
fs
push
shlb
adc
inc
loop
jns
push
inc
shrl
sub
dec
ljmp
mov
inc
push
sub
mov
and
orb
loope
mov
in
jbe
mov
inc
xor
jecxz
rcrb
scas
iret
ret
lret
mov
je
mov
pop
gs
fnstenv
push
dec
inc
push
push
int
push
inc
lock
lcall
enter
or
push
jecxz
aas
fimuls
insl
inc
hlt
inc
fs
in
sbb
out
lahf
addr16
adc
pop
je
push
addr16
jns
out
inc
inc
mov
xchg
lds
inc
loope
aad
jmp
jmp
mov
enter
add
in
loope
mov
xor
xor
or
mov
mov
or
mov
jmp
rcr
out
xchg
xchg
push
inc
es
nop
hlt
ljmp
adc
clc
adc
movsb
and
repnz
xlat
sbb
xchg
xor
and
flds
stos
jge
and
mov
dec
rcl
mov
insb
pop
adc
pop
cmp
push
adc
or
out
mov
cmp
xor
adc
add
adc
enter
in
sbb
ds
jb
in
pushf
pop
out
mov
leave
xor
imul
xor
adc
push
pop
cmp
sti
inc
mov
inc
jb
xor
push
inc
push
lods
lds
pop
adc
cmp
and
in
out
add
xchg
pusha
imul
xchg
push
aam
sub
adcb
icebp
insb
sbb
xchg
sbb
mov
movsb
imul
jecxz
dec
fistpll
ss
test
xor
pop
sub
xor
mov
je
or
add
and
sbb
lods
nop
push
pop
rcll
dec
pop
in
stos
pop
mov
int3
out
sub
sub
lock
lret
sub
or
outsb
addr16
or
cs
lret
xor
iret
add
or
scas
stos
xchg
push
mov
sub
inc
push
out
or
int
in
push
inc
mov
add
jmp
cmc
pop
das
push
xor
xchg
pop
xor
dec
inc
fcomi
mov
and
inc
xchg
inc
call
lea
dec
or
int3
pop
in
mov
loope
jmp
test
ds
in
mov
mov
call
pop
inc
bound
test
and
arpl
clc
popf
int3
int3
adc
jno
outsl
insb
insl
cmp
jmp
cli
ja
scas
mov
movb
cmp
enter
shlb
xchg
nop
mov
cwtl
push
jl
js
cmpsl
outsb
mov
mov
add
iret
lret
mov
adc
xchg
lcall
mov
ss
jnp
imul
jnp
popa
in
add
fiaddl
sbb
or
push
and
xchg
mov
push
cmp
outsb
les
int
sbb
call
rcll
dec
xchg
mov
insl
addr16
ret
jae
es
inc
push
fidivs
cli
lods
adc
flds
mov
lea
sbb
in
jo
into
lret
inc
ja
cltd
cwtl
jne
mov
mov
aas
and
js
or
pop
shlb
mov
and
mov
jge
popa
xchg
push
ss
sbb
aam
xor
movsl
ret
push
xor
stos
mov
sbb
insb
data16
sub
mov
mov
jle
jle
sub
xorb
pop
jbe
repnz
hlt
and
lods
push
subb
push
adc
xor
mov
iret
cmpsb
jae
cmp
ja
jmp
rcll
fidivrl
inc
mov
and
ds
insl
cmp
shrl
push
adc
fyl2x
je
mov
jo
sti
jae
pop
out
jl
jns
mov
das
stc
pushf
and
adc
sbb
hlt
dec
xor
fchs
xchg
fbstp
test
dec
test
add
add
xor
or
into
xchg
sub
add
ror
mov
jmp
ror
xor
ja
mov
add
add
sub
mov
leave
push
fdivrs
js
mov
cmpsb
mov
data16
jle
xchg
sub
pop
adc
and
gs
lahf
fdivrs
mov
add
je
cmpsb
sbb
sub
outsl
xor
mov
inc
mov
outsl
in
inc
or
push
daa
shlb
mov
jg
test
push
mov
jno
xor
dec
fists
jnp
stos
and
pop
subl
pusha
test
imul
push
add
test
cmpsl
daa
mov
sub
mov
stos
push
loope
repnz
push
mov
pop
and
mov
jmp
and
cld
aad
adc
bound
call
out
addl
or
mov
test
cmp
lret
fdivr
andl
stos
push
in
and
jae
and
mov
xchg
cmpsl
cmpsb
mov
lods
and
sub
js
dec
mov
js
cltd
fistps
and
xchg
pop
cmp
cs
fwait
and
je
cs
mov
faddl
jmp
enter
dec
jmp
mov
inc
or
dec
movsl
lahf
sub
movsb
icebp
pop
testb
fstpt
adcb
test
xchg
sbb
pop
ljmp
mov
xchg
jo
xchg
fs
cmp
lret
movsl
sub
out
cli
adc
enter
inc
leave
pusha
lds
jne
xchg
jne
xlat
cmp
sti
push
mov
and
test
fs
rclb
fsubl
fstpl
sub
xchg
xchg
cmp
test
xchg
js
fcomi
mov
int
rcrl
or
sub
ljmp
test
int3
xor
sub
outsl
inc
fnstsw
lds
xchg
jmp
xor
adc
fisttps
shl
cs
adc
jno
add
jb
push
int3
fwait
lock
cmp
cld
inc
inc
inc
fimuls
push
ret
mov
jp
loop
mov
in
in
outsl
xorl
jge
lea
push
push
add
int3
inc
or
dec
outsb
mov
dec
mov
pop
sbb
loop
loopne
jne
and
loopne
jecxz
inc
sahf
mov
icebp
js
out
out
cmp
out
repnz
xchg
sub
add
sub
lods
inc
jmp
or
aas
enter
mov
mov
mov
lret
sub
mov
leave
ja
add
xor
hlt
dec
jb
insb
arpl
addb
int3
repnz
mov
mov
imul
jle
dec
adc
leave
push
jmp
mov
mov
jne
or
inc
push
xor
lods
movsb
enter
sub
push
push
sub
adc
jmp
and
arpl
xorl
mov
shrd
shr
mov
mov
xor
shl
jmp
add
xchg
rorb
addb
push
clc
adc
arpl
sbb
cmp
push
dec
sti
push
dec
outsl
enter
bound
jl
cmc
sbb
push
cmpsb
xlat
mov
pop
test
xchg
outsb
rcl
xor
test
mov
mov
and
movsb
shrb
loop
xchg
iret
ja
push
test
leave
mov
test
dec
push
stos
arpl
sbb
in
jnp
jnp
mov
lcall
pop
xor
scas
adc
jp
pop
push
pop
pop
popf
fs
sbb
cli
pop
ficompl
or
lret
popl
sub
sahf
cmp
dec
xor
lret
mov
pusha
add
push
sbb
lock
jg
mov
jge
out
inc
sahf
mov
inc
imul
scas
out
adc
push
dec
cmp
mov
mov
inc
mov
aad
or
call
mov
mov
out
scas
enter
and
dec
mov
dec
mov
mov
pop
fs
nop
and
fs
xor
cmp
cmp
in
pop
pop
adc
ja
fsubs
stos
pop
insl
ror
mov
idiv
adc
and
jmp
ljmp
jecxz
adc
pusha
in
lock
call
xchg
int3
jb
dec
lods
xorl
enter
cmpsb
mov
push
and
mov
pop
mov
subl
lea
adc
frstpm(287
cmp
cmc
std
scas
inc
stos
in
out
jmp
cmc
xor
rcl
loope
leave
adc
cmp
add
pushf
pop
add
daa
je
outsl
movsb
adc
xchg
les
movsl
sub
sub
jl
pop
fdivrs
in
cli
popf
divb
and
add
fs
xchg
mov
repz
shlb
nop
daa
mov
sbb
cmp
fidivrs
mov
lcall
push
enter
pop
push
popa
xchg
shll
enter
sbb
lahf
aaa
int
stos
rcrl
pop
sahf
sbb
hlt
pop
cmp
add
pop
loopne
pusha
add
mov
aas
fiaddl
mov
movsl
pop
mov
pusha
add
or
inc
and
push
test
rcl
fistps
fiadds
dec
sub
loop
rcrb
call
jne
stos
jg
jecxz
adc
je
fstpl
mov
aas
xchg
nop
pop
in
mov
imul
popf
es
les
xlat
enter
loope
movsb
fmull
insl
dec
ljmp
cmp
or
mov
repnz
pop
push
addr16
pop
cmpsb
daa
pop
jecxz
pop
cmp
lahf
sub
inc
lea
mov
and
jae
lods
cmp
mov
jecxz
xchg
add
push
adc
inc
dec
ds
int
add
cmc
orl
movsl
push
jecxz
pop
cmc
subb
mov
dec
int3
sahf
mov
cwtl
aad
ljmp
nop
jl
sbb
sbb
pushf
mov
gs
mov
ret
gs
sub
cltd
mov
imul
cld
cmp
outsl
lods
or
ljmp
mov
mov
or
cmpsb
and
pushf
leave
pusha
stos
jl
fwait
pop
nop
and
push
outsb
sbb
scas
add
mov
push
pop
jbe
inc
rorb
outsl
jnp
jge
cmc
scas
xor
popa
or
jg
imul
sub
lret
mov
out
mov
jp
enter
dec
lods
push
jle
nop
faddl
fcomi
enter
pop
sar
dec
daa
sbb
inc
cmp
fldt
int
test
sbb
xchg
sub
or
fistpll
pop
cli
sub
xor
int
mov
mov
out
repnz
xor
shlb
xor
sahf
xor
into
inc
mov
loopne
xor
andl
movsl
iret
or
mov
or
push
out
jbe
fsubrp
pop
dec
sti
in
mov
lcall
scas
aad
fwait
into
xor
pop
sbbl
arpl
movsl
mov
testb
pop
addl
out
xchg
pop
xor
jmp
push
outsl
cmp
aaa
cmpsb
mov
inc
enter
dec
xchg
jno
adc
pop
xchg
ret
jecxz
mov
scas
mov
out
fs
popf
sub
sub
mov
or
push
mov
sahf
push
iret
idivl
out
scas
mov
shrl
test
jns
dec
lods
hlt
mov
fsubrl
pop
inc
or
je
mov
das
xor
push
adc
imul
xor
xchg
mov
ret
and
pop
or
nop
sti
stos
out
and
push
pop
jl
outsl
nop
dec
mov
and
nop
fdiv
mov
stc
adc
jecxz
ftst
call
jns
notb
sahf
lret
in
xchg
adc
aas
cwtl
jb
push
test
mov
pop
test
or
pop
mov
or
mov
mov
pop
inc
xor
push
xchg
xor
cmc
call
scas
and
mov
fistps
mov
dec
pop
mov
ss
xchg
rcrb
and
mov
int
movsb
adc
sti
orb
lock
jo
fcoms
jo
fstpl
adc
inc
jmp
inc
leave
cmc
or
aas
mov
xchg
xchg
mov
push
hlt
popa
mov
lods
sbb
incl
cld
mov
mov
add
and
fsubrs
sub
leave
clc
inc
roll
cmp
lret
or
mov
sbb
xor
aad
cmpsb
pop
mov
js
test
xlat
cs
pop
jmp
cmc
ret
frstor
jg
jbe
das
add
sub
aad
mov
mov
pop
mov
dec
and
inc
js
pop
inc
dec
scas
dec
fcompl
adc
jno
jmp
xchg
add
sub
test
out
mov
lods
and
fwait
jecxz
push
push
test
mov
lock
inc
pushf
cli
xor
in
ljmp
adc
mov
subb
or
lea
mov
mov
mov
shrd
jmp
aaa
aas
lods
and
andb
inc
aam
adc
push
clc
adc
pop
lods
test
inc
jmp
std
adc
jmp
add
fstp
lret
fldenv
ret
or
inc
push
loop
add
lret
lret
or
jge
int
mov
dec
jo
inc
mov
cmp
jle
xor
ds
add
xorl
push
add
jae
jo
jo
xchg
subl
push
cmp
pushf
lret
gs
ficompl
mov
xor
cmp
lret
xor
rolb
fwait
jnp
rcl
lods
mov
xor
xlat
outsb
loopne
loope
ret
rcl
out
andl
lods
add
and
test
mov
icebp
cmc
test
shr
imul
loopne
dec
sbb
mov
jle
bound
pop
cltd
or
xor
mov
stos
mov
cmpsb
add
enter
adc
push
dec
jbe
push
stc
push
sbb
add
push
rorl
jno
push
enter
imul
jae
lods
inc
lods
mov
sarl
xchg
lret
subb
in
and
rcrb
inc
cmp
fwait
push
xor
icebp
mulb
insb
mov
into
int
add
cmc
mov
in
sar
aad
and
sbb
inc
adc
push
call
data16
sbb
sbb
dec
aad
fs
or
add
out
pop
in
dec
cmpsb
inc
repnz
push
xchg
jb
pop
mov
loopne
cmp
xor
cmp
shl
adc
clc
test
pop
add
enter
jbe
mov
inc
xchg
aam
std
cli
sbb
push
outsb
hlt
stos
fidivl
pushf
jo
jno
int3
jmp
push
inc
lods
pop
fdivrl
ret
in
xor
clc
add
and
sbb
inc
inc
arpl
add
fs
inc
xor
orb
fadd
ljmp
mov
cltd
out
mov
jae
out
jns
jno
xchg
neg
mov
ror
mov
out
test
cmpsl
shlb
mov
int3
mov
insb
mov
xor
sub
scas
jg
nop
int
in
dec
sub
andb
aad
and
das
pop
xor
sub
shrb
jmp
mov
inc
xor
jb
or
adc
adc
sbb
or
jmp
lods
js
sub
pxor
shl
sbb
dec
adcb
mov
outsb
lret
fadds
pop
pop
loopne
sbbb
fwait
aam
cltd
pop
mov
repz
pop
push
add
in
enter
xor
das
cmp
icebp
cmc
addr16
add
or
outsb
inc
aam
add
or
ja
sbb
fnstcw
in
pushl
int3
loop
xchg
xchg
push
hlt
enter
sbb
pop
jne
js
mov
mov
aas
sbb
cmpsb
push
or
sbb
out
cld
xlat
jae
sarl
repz
mov
les
inc
xchg
xor
cli
pushf
xchg
cmpsb
int
mov
test
std
cmp
mov
add
inc
mov
scas
imul
xchg
cmp
movsb
ljmp
sbb
call
cmpsb
iret
sbb
inc
mov
fimull
fwait
ss
jge
push
out
test
mov
sbb
mov
sbb
cmp
scas
sahf
xchg
mov
mov
adc
ret
xor
ret
arpl
movsb
ljmp
daa
cmp
int
movsl
pusha
and
lods
sub
jg
ss
xor
rep
sarl
cmc
pusha
jno
jnp
xrelease
mov
lret
xchg
es
idivb
shll
sbb
sub
cmp
jl
out
lahf
jnp
imul
adcb
mov
or
mov
cmp
cmp
dec
jnp
and
sbb
mov
xor
xchg
popa
sbb
or
push
addr16
inc
imul
and
cvtps2pi
pushf
sahf
push
push
jo
cs
or
sub
les
push
add
xor
xor
sti
ds
lcall
xlat
movsb
lret
int
xor
cmc
aam
add
fmuls
cld
sub
xchg
rep
xorb
cltd
out
loop
sub
add
mov
nop
mov
cmp
inc
lret
push
mov
cmp
fstl
mov
sub
mov
cmp
inc
sub
pop
int
mov
jo
je
fisttpll
pop
push
lods
lods
fldpi
insb
pushf
or
rol
popa
hlt
das
mov
xor
fdivs
cli
jp
push
pop
xor
cmpsl
add
icebp
add
lock
pop
jge
push
fsubs
out
jbe
jnp
jmp
push
sarl
aam
jecxz
lret
and
aad
dec
and
lock
mov
push
adc
cmp
sub
nop
push
cmp
push
lds
push
insl
push
add
into
sbb
inc
repz
jae
push
mov
inc
push
mov
hlt
fstpl
popa
js
adc
push
pop
ret
nop
and
loope
lret
sbb
xchg
dec
in
lret
inc
mov
std
inc
mov
cmp
mov
cmpsl
xchg
sbb
nop
fnstsw
dec
lock
xor
and
cmp
mov
rcrb
js
jno
ret
cmpsl
aam
mov
pop
mov
inc
xor
push
add
nop
shlb
popa
pop
movl
push
lahf
iret
in
outsb
jge
fdivrp
outsb
rol
imul
dec
add
cmc
nop
out
mov
add
daa
inc
pop
add
jg
jp
sbb
bswap
out
mov
pop
dec
daa
adcb
cmpsb
push
fs
movsl
rcrl
push
mov
sbb
mov
mov
js
addr16
aaa
xor
repnz
mov
push
test
je
cmp
adc
xor
mov
int
clc
xor
aad
test
add
jmp
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
jmp
dec
jmp
dec
xchg
and
mov
pushf
hlt
inc
inc
adc
clc
adc
dec
insb
sbb
imul
add
movsb
xlat
imull
loop
cmp
test
and
mov
jg
mov
add
pop
push
out
sbb
cmp
push
mov
mov
add
lret
call
sarl
sbb
mov
push
lcall
xchg
xchg
insl
repz
push
cltd
ljmp
nop
dec
jne
arpl
xor
shrb
jg
mov
push
aad
arpl
push
xchg
pushf
mov
add
cltd
adc
clc
jp
pop
sub
xor
mov
jnp
lret
push
ffreep
xchg
arpl
jge
pushf
sub
mov
data16
divb
push
imul
mov
jg
in
fdiv
dec
cmp
loop
cmc
mov
ds
xchg
push
mov
ds
adc
stc
lcall
fimull
dec
hlt
imul
dec
jbe
ret
nop
mov
mov
imul
pop
fstpt
ss
jl
xor
call
mov
inc
push
aad
cwtl
ret
scas
mov
add
mov
mov
jmp
jle
and
add
mov
scas
pop
dec
aam
lcall
repz
jns
push
mov
push
cmp
jmp
mov
leave
les
dec
push
scas
ss
in
xchg
xor
adc
mov
adc
out
cmpsb
adc
xchg
sub
push
dec
add
adc
push
fwait
push
mov
jg
lock
xchg
out
push
sub
jmp
adc
clc
popa
inc
pop
push
dec
stos
popf
add
mov
add
movsl
jne
shll
icebp
in
add
ja
adc
pop
sbb
add
outsl
cmp
jl
mov
cmc
sub
pop
daa
lea
xchg
scas
push
int3
mov
mov
mov
mov
cmp
cmpl
add
dec
jb
push
pop
add
mov
or
clc
jle
or
fldt
lret
hlt
cmp
imul
sbb
fmuls
mov
xor
ja
push
into
shrl
push
shll
lret
mov
adc
mov
cltd
into
cs
pusha
pop
sbb
adc
sbb
pop
insb
xchg
lret
andb
jecxz
or
lcall
pop
lock
adc
jnp
lret
lea
mov
inc
pop
aas
les
sbb
push
incl
jne
mov
cwtl
xchg
call
add
int3
loop
sbb
rolb
push
mov
inc
mov
popa
dec
mov
daa
fcoms
dec
cmpsl
inc
mov
mov
int
bound
mov
xlat
addl
xor
push
jb
mov
aad
inc
mov
add
lods
dec
fcmovnu
cli
or
cmp
adc
scas
pop
movsb
xchg
idivl
push
es
jb
cmpl
fistps
mov
push
lret
fdivs
push
mov
mov
clc
pop
mov
push
popf
dec
sbb
mov
pushf
cltd
roll
push
sbb
ljmp
cmp
pop
lea
test
pop
sbb
mov
lcall
roll
pop
mov
aaa
out
mov
loop
xor
and
out
inc
inc
inc
ds
sub
loope
cmp
sub
mov
lret
fucomp
xchg
xchg
xchg
pop
leave
addr16
cli
not
scas
out
jmp
mov
test
lods
mov
out
shlb
movsb
call
dec
sub
sub
pop
enter
cmp
std
lret
cmc
mov
lock
sbbb
dec
das
dec
jo
lods
call
shlw
lret
inc
mov
xor
inc
sbb
mov
mov
inc
fprem
sarl
fdivrs
xor
pop
jne
xor
jmp
stc
inc
inc
test
mov
add
repz
cmp
push
movsl
arpl
in
lods
test
inc
sub
lea
clc
jmp
pop
adc
sbb
in
imul
or
lahf
push
div
lcall
lret
sbb
push
lret
mov
cmpsb
popa
mov
call
jge
cmp
xor
lock
xor
sbb
mov
cli
inc
sahf
mov
sbb
mov
add
push
cld
add
jle
pop
data16
scas
imulb
je
jb
mov
sub
stc
cltd
add
int3
cli
mov
aas
mov
inc
dec
inc
leave
jle
fcomps
or
inc
ds
lret
xchg
pop
mov
repz
dec
cmpsb
jno
adc
dec
dec
popf
push
out
aam
fcomip
and
add
add
sbb
outsl
push
cltd
xor
cmp
pop
lret
scas
mov
mov
sbb
hlt
je
add
sbb
int3
sub
add
mov
ljmp
lahf
dec
sub
adcb
sti
lret
cmp
adc
cmp
or
mov
dec
lock
cmp
jae
jbe
pop
out
pop
lret
sub
lea
pop
mov
push
push
sbb
out
lret
dec
pop
scas
sub
sbb
inc
or
add
lock
je
dec
mov
lret
pushl
leave
lods
inc
mov
call
clc
out
xchg
jecxz
xor
mov
pusha
out
xor
add
xchg
sub
adc
enter
mov
in
sub
out
mov
or
mov
fsubrp
insl
out
ficompl
std
xchg
ja
sbb
addr16
mov
mov
dec
jmp
xchg
jb
cmp
clc
lds
mov
in
xor
shll
inc
movb
xchg
push
sbb
cmp
mov
imul
shlb
inc
hlt
and
mov
mov
xchg
subb
movsl
cmpsl
push
or
mov
popfw
mov
xor
mov
dec
movsb
shrd
shr
mov
mov
jmp
pop
inc
inc
mov
aas
push
sbb
dec
xor
add
adc
push
clc
adc
sbb
jb
out
cmpsl
popa
int3
notl
ljmp
ja
out
mov
or
lret
pop
clc
int3
push
mov
mov
mov
mov
lock
jae
cs
cmpsl
push
hlt
xchg
dec
pop
repnz
mov
adc
mov
fisttpll
fimull
pop
xor
arpl
push
std
xchg
xlat
jle
repnz
adc
loopne
add
arpl
in
cmp
inc
xor
in
jno
push
pop
icebp
and
jl
ss
imulb
cmp
movsl
out
shlb
mov
out
popf
mov
add
in
mov
mov
ljmp
dec
std
sahf
xchg
rclb
dec
push
dec
fwait
cmp
dec
cs
iret
lock
rolb
aam
lea
dec
pusha
outsl
mov
sbb
xchg
sub
fisttps
fstps
smsw
stos
fdivl
xchg
mov
mov
insb
push
adc
shrl
adc
in
jne
pop
scas
leave
dec
xchg
sbb
sbb
xchg
popf
and
sub
cmpsb
pop
sub
push
fisubs
sub
mov
adc
rorb
mov
std
out
out
cwtl
jae
lds
or
adc
mov
xor
out
std
out
adc
adc
sub
mov
mov
sub
pop
jl
into
in
iret
out
aam
pushf
inc
lret
scas
cmp
aaa
sbb
xlat
cmp
push
jmp
dec
dec
fnsave
push
repz
xor
or
lret
mov
push
fcompl
incb
pusha
and
mov
mov
cmpb
and
popa
adc
or
add
pop
arpl
or
int
mov
add
and
add
popa
xchg
movsb
and
mov
fstpl
cmp
shll
stc
inc
mov
fldt
xor
inc
int
mov
and
lock
xor
mov
sbb
imul
mov
rorb
int3
inc
out
es
shlb
in
add
enter
inc
ret
addl
add
or
jge
mov
into
iret
sbb
cmp
dec
test
rcl
xchg
repz
dec
xor
sub
bound
xchg
mov
fstp
jae
or
clc
in
xor
and
cli
or
imul
mov
out
sub
xlat
xor
lcall
mov
das
cli
xchg
pusha
jmp
into
mov
popf
imul
sahf
add
pop
ja
mov
idiv
scas
xor
sbb
inc
mov
ret
xchg
and
lods
mov
out
sti
jmp
jge
fdivs
lods
adc
pushw
dec
ds
cmp
mov
cltd
popa
or
jge
inc
cmpsl
test
out
test
iret
mov
fstpl
out
test
into
and
movsb
dec
gs
push
adc
pop
mov
mov
xchg
jno
outsl
adc
xor
xchg
ret
adc
sbb
mov
mov
fsubrl
pop
mov
shl
mov
pushf
xor
and
dec
jl
je
push
cmpsl
add
lret
iret
push
ret
sub
inc
xor
mov
nop
call
test
dec
mov
jp
movsl
ss
and
movsb
scas
push
adc
ljmp
mov
xchg
xor
or
orb
sub
jbe
ds
jns
decl
add
cmpsl
nop
pop
xchg
sbb
inc
test
jns
sbb
or
outsb
or
je
mov
jo
add
stos
mov
cmp
push
sahf
xchg
mov
jae
hlt
sub
dec
popa
scas
pop
ror
jns
fs
ss
jge
xor
pop
add
andl
and
jnp
scas
and
mov
jns
ja
adc
jbe
std
imull
out
aas
dec
cmpsb
and
jp
mov
inc
push
in
mov
cltd
mov
xchg
push
leave
inc
in
mov
xchg
push
push
mov
mov
test
test
out
mov
loop
lret
std
stos
mov
add
hlt
or
out
jb
inc
ljmp
aad
loopw
or
into
rolb
cmpsl
jle
testl
jbe
loop
mov
stos
leave
sbb
jmp
xor
sahf
decb
pop
cmp
lret
xchg
mov
or
jo
fistps
enter
push
cltd
nop
cmp
aad
push
into
daa
mov
lods
aam
mov
in
mov
daa
out
dec
sub
notb
outsl
pop
jae
pop
xor
inc
cmp
ljmp
xchg
and
cmp
mov
pop
lods
iret
dec
add
mov
mov
dec
test
adc
loop
out
test
xchg
enter
das
pop
dec
push
mov
xor
idivb
repnz
adc
lcall
and
call
jne
add
pop
cmp
out
adcl
repz
jge
rcrb
js
mov
inc
mov
dec
dec
bound
pop
add
cli
ret
add
mov
lods
insl
aam
cmpsl
cmp
mov
mov
pop
sub
mov
jl
and
jp
cld
fcmovnbe
mov
and
lahf
or
pop
adc
xor
jg
dec
ret
js
jecxz
xchg
inc
xchg
pop
xor
cs
sub
cmp
loopne
cmp
jo
lret
sub
cmp
fcmovnb
arpl
cmpsl
mov
xor
fbstp
jecxz
and
bound
adc
and
in
xor
int3
test
dec
pop
out
orl
push
sub
push
andb
inc
mov
and
shl
nop
les
daa
iret
rcll
ss
lock
push
ror
jp
push
mov
fsubrs
pop
pop
lds
fwait
mov
mulb
adc
and
xchg
and
sub
mov
out
jbe
aaa
pop
dec
sub
aaa
pop
push
insl
inc
aas
loope
jmp
fidivs
xor
or
mov
shl
jmp
push
xchg
push
pop
push
es
cmp
adc
push
clc
adc
jecxz
outsl
sub
mov
sarb
add
shlb
and
mov
mov
cmc
fcom
mov
xor
lahf
dec
add
cmpsl
push
mov
pop
je
adc
lret
loop
mov
lcall
xor
in
cld
les
cltd
jb
ficomps
cltd
insl
mov
jmp
cmp
mov
in
mov
stos
out
inc
addr16
fucomi
fwait
test
ret
mov
push
mov
pop
pop
dec
push
jecxz
and
dec
xlat
jbe
pop
hlt
sbb
mov
sub
mov
fsubl
jmp
loop
bound
clc
xor
cmpl
fisttpl
test
stc
inc
aam
arpl
push
mov
pop
jbe
mov
xor
cltd
cltd
fnstsw
mov
sub
shll
push
pop
cmpsw
mov
jbe
adc
add
js
inc
lret
mov
mov
es
pushf
roll
and
fistpll
cmpsl
sbb
daa
pop
mov
push
inc
ljmp
mov
inc
adc
pop
das
fnstenv
rcrl
int3
mov
fistpl
sub
movsl
fidivrs
mov
push
pushf
or
stos
pop
inc
clc
jno
mov
addb
mov
mov
pop
cmp
test
shrb
sarl
push
or
repz
pop
and
and
sub
adc
lret
and
xor
out
orl
xor
adc
or
lock
addr16
fisttpll
push
pop
push
scas
cli
fwait
insb
xor
add
cld
xchg
sub
test
jo
movsb
lea
fbld
in
dec
push
jnp
xchg
mov
pop
xor
cltd
add
push
jmp
gs
and
and
ss
dec
psubb
sbb
jbe
push
movsl
dec
or
mov
mov
loope
cmc
pop
in
imul
inc
pop
mov
or
bound
inc
aas
sub
fistl
push
ficompl
movsb
fbstp
xor
or
or
test
sbb
xchg
inc
sbb
pusha
leave
push
imul
daa
dec
call
sub
pop
ja
pushf
xchg
lret
sub
scas
xchg
jl
shlb
pop
inc
out
jecxz
shll
insl
add
xor
fmuls
loope
xor
es
add
stc
pop
mov
hlt
or
mov
incl
dec
pop
lea
mov
add
xor
or
in
andl
pop
sbbb
ret
loope
lods
lahf
les
mov
cs
ror
push
iret
or
popf
push
aam
das
sbbl
and
mov
pop
lcall
stos
jno
sub
mov
jp
ss
mov
mov
xchg
mov
int3
fisubrs
lcall
movsb
test
faddl
in
movl
loop
dec
es
jg
mov
sbb
push
jbe
mov
jne
dec
ljmp
push
test
mov
sbb
cwtl
fidivrs
adc
mov
inc
enter
jecxz
repz
daa
mov
sub
lods
cwtl
add
pop
adc
dec
je
xchg
jne
sbb
xchg
lock
or
pop
xchg
sub
push
and
inc
pop
movsb
pop
cs
fwait
adc
lret
popa
lcall
xchg
imull
mov
loopne
dec
jmp
jo
lcall
jge
dec
push
pop
ss
int3
xor
dec
mov
inc
bound
lods
flds
pop
shl
pop
negb
and
ljmp
xchg
lea
inc
inc
mov
jg
dec
xor
sbb
outsl
fistl
mov
shrl
xchg
sar
lods
pop
jecxz
xchg
push
movl
adc
arpl
mov
jecxz
ret
push
bound
sbb
cltd
dec
mov
push
loop
push
xor
jnp
ret
fcmovb
xchg
mov
popf
cmp
test
call
loopne
lea
fisttps
jb
loope
daa
imul
mov
jecxz
mov
xor
pop
add
adc
roll
out
loope
sub
iret
mov
lods
xchg
inc
cmp
ror
mov
or
shr
out
xchg
fnstenv
mov
rol
push
dec
cs
and
push
mov
punpckhwd
popf
sub
imul
push
xchg
add
and
dec
inc
mov
jmp
or
jbe
jbe
sub
lods
dec
lods
push
mov
out
xor
mov
pop
popa
out
adc
lahf
scas
call
dec
out
cs
lock
jg
scas
add
sti
and
stos
pop
dec
sub
ror
dec
pop
js
in
lret
mov
aam
mov
test
vunpcklps
jle
mov
push
das
add
je
aaa
dec
mov
xchg
jb
mov
pop
and
sbb
loop
gs
pop
ror
clc
stos
mov
pop
mull
ffreep
add
lret
in
inc
sbb
pop
call
or
xchg
mov
lahf
jle
jge
cmp
out
pusha
imul
lret
xor
pop
jns,pn
mov
pop
mov
xor
mov
test
add
add
scas
pop
mov
pop
fadds
push
cltd
aaa
push
or
mov
rclb
mov
xchg
cwtl
sub
mov
cmp
inc
cmp
add
mov
mov
int3
mov
adc
cmpsb
jo
cmpb
mov
ret
push
or
push
pop
mov
not
push
mov
lret
ror
test
xor
mov
or
xor
cmp
cwtl
mov
jp
pop
jne
push
mov
imul
adc
add
int3
negb
pop
pop
mov
call
out
movsl
xchg
out
xor
add
je
aas
mov
xor
adc
jmp
jge
mov
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
jmp
pop
mov
push
xchg
enter
mov
enter
clc
adc
lret
cmp
out
sub
sub
push
sub
jp
stc
ss
clc
cwtl
int
inc
adc
push
jb
sbbb
push
and
xlat
cmp
cld
cmp
push
pop
rolb
rolb
xlat
test
mov
cmp
je
add
jp
pusha
mov
or
xor
pushf
rcrb
mov
inc
in
push
out
dec
mov
mov
dec
jns
dec
sbb
mov
int
add
or
test
testb
sub
cmp
flds
outsb
lods
std
insb
jge
stos
jp
and
inc
jmp
mov
cld
shl
sbb
push
xchg
xchg
insl
jnp
jo
inc
inc
or
mov
shrb
xor
test
enter
dec
fdiv
pusha
scas
hlt
mov
popf
out
pop
or
mov
icebp
push
or
stc
jge
lret
mov
loop
cmp
or
scas
mov
in
pop
adc
cld
aam
cmp
inc
push
icebp
push
cmp
jb
loop
mov
lock
jmp
cmpsl
mov
xchg
aaa
and
add
lret
xchg
mov
out
jns
add
loopne
icebp
push
cli
out
ss
daa
inc
mov
stos
fimull
popf
dec
call
out
imul
push
fisubl
dec
popf
add
or
cltd
addr16
jmp
icebp
mov
scas
aam
xchg
mov
clc
cmp
pop
mov
cmp
ss
loop
dec
mov
xchg
enter
jp
daa
inc
xchg
rcr
or
xor
fcmove
and
pop
stos
ss
jl
addr16
jne
ss
push
mov
flds
in
push
iret
shlb
jno
dec
negl
fwait
push
xchg
cwtl
mov
lods
add
mov
nop
push
and
pushf
loope
das
xor
inc
push
cwtl
daa
clc
in
mov
push
mulb
addl
in
mov
stos
loopne
lock
leave
fistpll
lea
cld
dec
les
xor
inc
call
sub
int3
les
rep
or
pop
int3
lahf
lods
fstpl
or
pushf
dec
xor
lret
out
cwtl
cmp
dec
cmc
xor
fstps
mov
ret
or
movsb
movsl
xchg
and
lret
sub
call
int
shrl
arpl
or
inc
in
test
sub
lcall
aas
lock
sub
mov
cmp
cld
cmova
push
in
inc
inc
lds
popf
xor
icebp
push
pop
gs
imul
cmc
test
hlt
pop
movsl
mov
push
shll
stos
inc
fidivs
push
and
xchg
jp
scas
push
and
shll
addr16
popf
lret
mov
mov
xchg
and
lcall
adc
add
dec
hlt
fsts
cmc
out
mov
lcall
jbe
iret
sub
clc
dec
xor
or
sub
mov
ds
sub
mov
mov
fsts
inc
lods
mov
fisttps
push
popf
xchg
popf
insb
mov
xchg
fcoml
jmp
cmp
sbb
sbbl
push
outsb
mov
mov
dec
adc
sub
js
insl
loopne
and
outsl
mov
call
pop
aad
mov
rorl
mov
loop
mov
mov
nop
xchg
mov
ficomps
xlat
push
jbe
push
pop
cmp
xor
inc
scas
jne
adc
mov
xor
xchg
push
cmp
fbld
xchg
sarb
adc
mov
outsb
pop
add
lea
mov
cmpsl
rclb
mov
mov
stc
or
sbb
in
push
int3
std
aaa
sub
add
stos
push
jp
cmp
mov
cltd
and
daa
xor
xchg
xchg
inc
mov
imul
mov
xor
xor
popa
jle
or
push
test
inc
lds
xchg
cmc
push
lcall
inc
in
fwait
jne
negl
push
aaa
add
pop
cmp
jbe
ret
cmp
sub
push
ffree
pop
jae
cmpsb
mov
jge
aam
push
cmpb
mov
and
mov
repnz
xor
sarl
repz
addr16
mov
sbb
shlb
out
mov
pushf
leave
loope
cmp
jp
xchg
add
jne
xor
fisubrs
xor
pop
stos
imul
cmp
sti
stc
jbe
mov
div
push
cmp
out
movq
dec
push
or
inc
scas
add
inc
or
dec
xchg
mov
shlb
dec
jno
mov
xchg
fnsetpm(287
xchg
rcrl
je
pop
out
pop
lcall
and
add
push
and
cli
push
ljmp
cld
dec
fmuls
sub
push
stos
mov
fsubl
mov
fcoml
jo
push
jnp
adc
cld
sbb
std
ret
jg
mov
ljmp
seta
xbegin
int
dec
inc
and
mov
popf
mov
xchg
cmpsb
mov
fisttps
in
dec
lcall
adc
test
gs
clc
push
sub
mov
mov
std
in
out
fsubrs
data16
cmc
bound
xchg
outsl
repz
loop
lea
adc
and
add
and
mov
jo
sti
push
andb
call
les
lds
mov
fsubs
in
cmp
popf
test
inc
mov
mov
decl
fwait
adc
sbb
dec
push
out
out
in
cli
sub
dec
pushf
and
xchg
add
jp
dec
clc
add
loopne
pop
aas
xor
mov
xor
xchg
push
push
sbb
call
cmp
sarb
xchg
mov
in
scas
mov
iret
inc
movsl
xor
jge
xchg
sbb
leave
clc
jmp
cs
out
xchg
mov
movsb
jne
js
inc
inc
stc
ja
ret
aaa
cmp
lret
shrl
push
in
bound
mov
adc
sbb
pop
or
jecxz
mov
out
push
pop
daa
rep
ret
in
xchg
das
mov
clc
lret
fists
ret
mov
mov
xor
or
mov
mov
jmp
lds
jno
push
push
or
inc
push
fdivl
adc
adc
push
clc
adc
add
push
mov
xor
loope
adc
mov
add
into
sti
mov
arpl
clc
les
pop
popa
in
loopne
sub
scas
repz
inc
sub
cltd
pop
fcompl
inc
inc
jbe
movsb
sbb
or
pop
cmp
faddl
ljmp
fistpl
or
outsb
icebp
fbld
mov
les
cwtl
mov
les
into
lods
pop
movsl
or
aas
dec
sub
jmp
pop
aaa
inc
std
dec
rolb
ss
icebp
push
push
fsubrl
leave
xchg
mov
loope
sti
cli
inc
mov
cmpb
imul
cmp
pop
lahf
or
jbe
sbb
push
les
or
cmp
lods
cmp
aaa
or
into
lea
jno
lods
mov
call
xchg
push
cmp
scas
push
pop
daa
lock
adc
push
test
jns
mov
enter
ja
lcall
cld
dec
ret
pop
adc
cmc
push
fsubrs
hlt
testl
mov
fxch
or
add
xchg
fucomip
or
cmpsl
mov
mov
stos
sub
jmp
in
cwtl
mov
fwait
pop
loop
jne
xor
pop
push
pop
lea
clc
aam
or
mov
jge
dec
xchg
bound
in
mov
in
aaa
lcall
rorl
xchg
cmp
mov
add
nop
fwait
xchg
and
aam
cs
or
jo
dec
mov
push
add
mov
and
jnp
mov
cmp
packuswb
repz
add
clc
ret
cmp
aam
mov
xchg
push
dec
dec
pop
jge
mov
insl
enter
pop
xchg
push
bound
jb
test
les
nop
aas
inc
stc
xlat
jo
push
es
cmc
pop
sbb
out
fwait
sbb
loop
je
adc
push
cmpsl
lea
daa
fistpl
and
add
repz
jge
xor
sub
sbb
push
pop
rcll
rorl
shrl
lcall
mov
je
cmp
xor
add
and
push
mov
push
xor
data16
daa
xchg
clc
fwait
inc
inc
xchg
lds
mov
call
decl
in
jl
call
inc
add
add
adc
cmpsl
fstpl
sbb
add
xlat
bound
out
pop
push
sbb
insb
ret
mov
into
lds
mov
push
cli
or
div
dec
mov
in
inc
and
jmp
in
movsb
xor
add
sahf
xchg
movsl
jmp
xor
lret
mov
ss
pusha
shr
cltd
jo
mov
insl
xchg
mov
lcall
ss
in
ds
mov
sbb
enter
fucom
dec
fnstcw
mov
lods
and
dec
mov
mov
sbb
jno
jecxz
xchg
mov
pop
gs
fisubrl
sbb
xchg
or
push
dec
xor
rcrb
xchg
mov
xchg
loop
lds
insb
cli
sbb
dec
dec
hlt
pop
outsb
adc
cltd
arpl
sbb
add
int3
ljmp
jg
addr16
fs
mov
jae
dec
mov
jl
int
add
test
cld
add
xchg
imul
inc
jecxz
dec
or
hlt
push
jp
add
cmpsl
out
push
sub
inc
loope
inc
orb
sbb
in
and
dec
jp
pop
bound
or
test
or
sbb
addr16
xchg
aad
xchg
push
dec
hlt
mov
push
and
mov
imul
cmp
cli
mov
mov
rolb
mov
rcrl
movb
dec
sti
pop
cmp
jns
inc
repz
pop
push
or
icebp
xor
movsb
and
shlb
adc
sbb
dec
mov
mov
dec
stc
jb
stos
inc
jge
aaa
std
rorb
hlt
mov
jb
outsb
xor
inc
cmp
pop
sti
pop
jne
pop
aaa
pop
push
mov
lret
push
mov
mov
pop
jbe
xrelease
mov
scas
icebp
addb
sub
mov
xchg
jbe
dec
ffreep
lahf
or
insb
and
jns
js
leave
dec
mov
push
pop
dec
pop
or
int
in
loop
mov
enter
iret
and
cmp
out
mov
xlat
xchg
ret
xor
addl
enter
push
dec
cltd
sti
sbb
pop
jbe
movsl
shrb
push
mov
popa
cmp
outsb
fs
lock
adc
testb
ja
cmp
lea
pop
xchg
mov
in
mov
sub
movb
jno
loope
add
dec
test
add
and
sbb
aas
xchg
jns
or
xchg
push
add
pop
xor
fwait
push
cmp
mov
movsb
stos
mov
sahf
bound
jbe
cli
fidivl
sti
and
pop
sub
sub
sbb
xchg
xor
and
hlt
xor
sub
add
outsb
xchg
scas
jmp
stc
xchg
gs
int3
lock
int3
adcl
mov
pop
mov
enter
mov
ja
je
or
sbb
pop
xchg
icebp
clc
dec
or
iret
jmp
mov
add
sahf
or
fsubs
or
mov
mov
or
inc
cmp
mov
int
in
popa
add
into
movsb
xor
jl
dec
dec
inc
rcrl
pop
lret
push
iret
inc
dec
sbbl
test
sti
gs
add
mov
icebp
sbb
inc
imul
jae
int
mov
xor
dec
push
mov
test
sarl
inc
pop
mov
push
mov
hlt
mov
and
fucom
sbb
int
gs
fstpl
in
lods
pop
insl
mov
arpl
push
lods
enter
add
enter
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
jmp
inc
jle
add
add
add
pop
out
push
scas
adc
push
clc
adc
std
pop
add
ss
add
sbb
fildl
cmpsb
int3
add
xchg
sub
jle
push
pop
sbb
xchg
in
dec
popf
mov
addr16
jl
sahf
xor
adc
ret
xor
mov
inc
out
lods
mov
int3
jns
cmp
jnp
inc
inc
imul
inc
jle
cmp
xor
aam
lahf
jg
shr
pop
ljmp
xsave
out
mov
scas
orb
and
push
xchg
mov
lcall
fsubrp
outsb
fstl
jbe
ljmp
in
roll
or
lcall
inc
repz
inc
pusha
fidivs
xchg
dec
cwtl
ja
push
loop
popa
mov
stos
in
add
jmp
popl
and
jp
mov
jae
lret
push
mov
scas
push
jb
sbb
jge
inc
mov
jnp
mov
daa
dec
mov
daa
mov
mov
fdivp
pop
js
sbb
out
or
mov
aas
add
jge
in
mov
popa
push
push
test
fimull
sbb
cmp
and
mov
rcll
sub
out
notb
out
xchg
lods
stos
in
aas
fsubl
cmpsl
ret
dec
outsb
mov
dec
push
fsincos
sbb
and
cmpsb
insl
and
xor
add
adc
in
mov
jae
clc
dec
push
pop
into
popa
pop
out
stos
cmp
cs
fisttpl
add
dec
lods
leave
sub
add
push
addr16
loopne
mov
dec
sbb
repnz
cmc
sub
add
or
int
cmp
jecxz
mov
in
push
movsl
rcrl
pusha
mov
daa
cli
icebp
stc
pusha
rolb
pusha
pop
xor
lods
cmp
jl
adc
std
or
pop
mov
pusha
xor
add
fldl
cmp
in
es
es
aad
cmc
fidivrs
mov
ja
aam
mov
push
test
inc
dec
pop
and
cmpsl
daa
lea
arpl
or
sub
lea
lret
scas
into
lahf
jbe
insb
clc
dec
inc
ds
lret
inc
mov
cli
jl,pt
nop
adc
inc
xchg
push
jl
imul
mov
mov
jns
fsts
aad
pop
adc
cltd
jne
into
push
stc
sbb
push
mov
rorb
cmpsl
shl
push
mov
inc
mov
sar
fisubl
addl
inc
adc
fistl
push
in
mov
mov
jmp
scas
test
aam
cmpl
dec
loop
notl
mov
fadd
cmp
inc
push
andnps
mov
mov
int
mov
cmpsb
fsubr
pop
leave
pushf
popf
add
sbb
or
mov
xchg
stos
jbe
xor
jp
pop
add
inc
out
mov
sahf
adc
testl
data16
ljmp
push
test
pop
push
cmp
cmp
pushf
in
jge
popa
push
aaa
jmp
adc
mov
mov
xchg
add
mov
xor
and
loopne
push
adc
into
mov
test
icebp
loop
xchg
jns
repnz
cmp
daa
and
mov
push
popa
add
jo
dec
sahf
sub
cmp
mov
cmp
fadd
cmpsb
pop
cmp
cs
adc
outsb
cmp
out
mov
adc
xor
aam
rorb
outsb
lret
jb
inc
shlb
pop
stos
prefetch
test
xor
add
loop
mov
pushf
dec
add
decl
lods
addr16
mov
notb
std
movsl
fwait
adc
fwait
mov
dec
into
incb
sti
hlt
daa
sbbl
arpl
test
daa
xlat
cmp
and
arpl
sbb
out
adc
out
lea
xchg
or
idivl
pop
xchg
pop
divl
and
daa
rclb
inc
jne
cmp
mov
mov
push
in
stos
out
rclb
scas
mov
js
mov
inc
lea
divl
ja
repz
inc
std
sahf
mov
sub
xchg
push
sub
xor
fcoms
mov
pop
and
lea
scas
or
rolb
aas
lahf
sub
popa
aam
sbb
lcall
ljmp
ss
pop
and
xchg
popa
xchg
jne
jp
loopne
mov
add
mov
push
nop
cs
movsb
mov
enter
or
fdivr
bound
pmulhw
push
and
xchg
sub
lret
scas
in
push
lahf
xchg
mov
loope
aad
sub
ret
sbb
fsubl
push
aaa
dec
mov
into
xor
dec
mov
out
test
dec
je
xchg
stos
leave
das
testb
es
push
jae
stos
or
sub
xchg
sti
cmp
js
sub
cltd
iret
mulb
fsub
sbb
ss
int3
dec
cs
push
sub
stos
xor
dec
sbb
cmp
xchg
insl
xor
loopne
jb
and
jl
xchg
xchg
mov
cmc
xlat
aas
scas
add
rclb
mov
and
inc
lds
test
mov
push
sti
insl
inc
das
inc
mov
mov
xchg
shl
mov
mov
sar
xor
adc
add
decl
jae
mov
ret
xchg
lahf
inc
call
sbb
sub
outsb
filds
mov
dec
test
sbb
sbb
and
shll
gs
push
sbb
cmc
dec
jmp
sub
nop
jae
and
pop
stos
mov
mov
dec
add
xor
inc
fcomp
aad
sub
out
fwait
xchg
mov
out
into
xor
pop
lea
add
loop
inc
sti
scas
sub
ds
and
cmp
pop
bound
pushf
jb
mov
sarl
clc
pop
adc
aad
cmp
add
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
jmp
test
and
push
mov
repz
mov
outsb
xor
push
clc
adc
jnp
push
push
sub
scas
push
sub
mov
xchg
and
repnz
mov
sbb
loopne
icebp
cmpsl
cmpsl
mov
adc
push
xlat
push
xchg
push
shl
mov
xor
cmp
nop
arpl
andb
js
test
xchg
popf
mov
vpackssdw
ds
ret
rorl
pop
cmp
imul
and
cwtl
push
mov
push
arpl
pop
jle
push
jp
sti
mov
lods
and
test
mov
xchg
and
cmc
inc
mov
inc
adc
loope
sar
add
imul
cmp
inc
data16
jmp
rolb
pop
mov
dec
clc
jns
aaa
mov
fisubl
and
dec
push
adc
jle
leave
lds
popa
mov
dec
ljmp
shlb
ror
fisttps
and
push
inc
jnp
out
add
or
xor
sub
imul
mov
dec
add
xor
outsb
xchg
or
xchg
fnstenv
or
ds
pop
mov
jmp
and
lret
xchg
inc
adc
popf
jne
mov
sub
hlt
enter
stc
stc
mov
jmp
add
in
insb
xchg
popa
ret
arpl
pop
enter
inc
ja
add
xor
in
negl
aas
sub
mov
adc
inc
bound
imul
sti
mov
cli
aad
in
push
pop
jg
add
mov
pop
inc
jb
mov
dec
sbb
push
mov
pushf
mull
mov
push
fprem1
gs
andb
sbb
xchg
pushf
or
daa
fwait
adc
mov
in
xor
push
push
notl
jae
out
inc
into
cmp
mov
cmpsl
mov
and
out
xor
lods
xchg
add
inc
decb
jnp
push
insl
and
mov
add
mov
jmp
lcall
xor
test
cmc
stos
in
or
shll
fwait
ss
dec
movsl
fs
pop
cmp
imul
jbe
sub
mov
imulb
mov
out
push
and
mov
push
sub
and
ljmp
ja
push
add
xor
add
ljmp
add
adcl
addr16
mov
jae
jg
xchg
or
dec
jo
lods
push
sub
inc
stos
data16
iret
scas
xchg
jmp
lods
popa
mov
push
incb
adc
mov
ret
loopne
daa
aas
pop
inc
and
or
lea
in
mov
stc
xor
add
sub
pop
xor
dec
in
xor
movsb
adc
je
lret
mov
dec
sahf
das
stos
mov
aad
out
pusha
addl
mov
mov
dec
dec
push
jno
cwtl
pusha
lret
test
mulps
mov
in
mov
movsl
lahf
mov
adc
jno
in
and
out
jae
mov
push
dec
xorb
pushf
imul
xor
shr
daa
icebp
scas
adc
sbb
push
pop
in
and
rcrl
out
jno
nop
pop
dec
std
aas
mov
in
outsb
pop
adc
xor
out
jnp
fstps
cwtl
sbb
and
mov
lret
fstpl
es
sbb
sbb
push
stc
xchg
xorl
loopne
and
loop
cmp
ss
lock
pushf
rcl
cli
cwtl
mov
or
repnz
push
adc
leave
push
je
jb
int
push
in
xor
hlt
and
xchg
ds
mov
mov
push
into
cli
in
arpl
jmp
out
xchg
sbb
sbb
or
popa
adc
add
and
mov
xor
lods
cmp
dec
mov
stos
mov
aaa
sbb
inc
insl
loope
add
mov
push
test
imul
push
push
scas
mov
fsts
out
mov
or
mov
dec
fistpll
jbe
sub
push
out
adc
dec
or
dec
or
cltd
adc
cli
mov
mov
sub
or
cmpsl
sbb
jecxz
push
jnp
js
xor
mov
aam
hlt
sub
adc
lret
mov
or
out
xchg
sub
das
std
stos
or
adc
imul
sub
xor
pop
lods
jecxz
pop
daa
loope
pushw
mov
mov
and
test
jns
and
and
push
stos
and
mov
icebp
adc
aad
add
push
jg
ja
das
sub
push
faddp
and
pop
nop
mov
aam
jo
addr16
add
sub
jge
and
insl
mov
pop
xchg
sub
push
loop
lods
jnp
mov
mov
mov
pop
mov
pop
xchg
mov
pop
negl
cmp
sub
fstpl
dec
inc
and
bound
test
out
in
push
in
test
mov
mov
fidivl
aas
scas
icebp
push
mov
push
roll
mov
out
fdivl
sub
mov
jg
sub
add
iret
and
in
subb
dec
xchg
testb
push
out
jp
imul
ficompl
sub
dec
ffreep
out
push
push
ss
enter
jecxz
sbb
gs
lea
dec
js
inc
shll
lahf
mov
push
adc
sbb
sub
scas
jo
cwtl
xchg
mov
orl
pop
push
cltd
punpcklwd
frstor
orl
fbld
add
stc
loope
xchg
jg
mov
ds
cmp
loopne
lahf
cld
or
or
scas
and
xchg
push
xchg
sub
pop
sub
push
into
shlb
repz
fcomps
push
leave
fdivrs
lret
nop
sub
or
lea
sbb
test
dec
nop
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
jmp
movsl
mov
mov
inc
repz
mov
mov
adc
inc
fs
cltd
xchg
daa
js
fmulp
cmp
xor
dec
outsb
jb
sti
cmp
jae
data16
in
inc
or
or
dec
mov
jb
xchg
mov
test
repz
lret
sbb
inc
dec
js
pop
outsl
mov
xchg
vmptrst
in
lods
repz
xor
or
mov
sbb
pop
add
insb
stos
mov
jecxz
and
or
sahf
mov
mov
lds
cmp
dec
mov
sbb
cmp
addr16
mov
mov
push
inc
add
or
ret
mov
inc
lahf
jge
lahf
jle
add
in
rcrb
adc
mov
mov
test
xchg
hlt
sub
sbb
jns
call
add
js
outsl
jae
sbb
call
aas
lea
movsl
mov
pusha
cmp
idiv
test
das
jae
inc
inc
mov
insl
xchg
mov
inc
es
ds
push
xchg
cmc
loopne
jae
icebp
mov
fstp
aam
ja
add
fsub
pushf
sbb
push
inc
jns
dec
lods
push
mov
mov
loopne
push
lret
and
jne
call
lret
movsb
leave
ds
ja
fistl
push
mov
pop
jmp
mov
cld
mov
ret
sti
xchg
mov
ljmp
mov
mov
ror
shrl
jb
mov
cmp
push
or
mov
jbe
adc
insl
dec
push
popf
rcl
mov
call
test
outsb
subl
xor
xchg
dec
cmp
loop
cmp
sub
aas
push
pop
mov
xor
mov
push
sub
sbb
inc
jmp
cltd
mov
cli
shll
jbe
mov
mov
mov
fs
ret
sti
mov
ret
leave
ret
out
out
lcall
xor
jmp
lds
out
and
cmpsl
push
es
addr16
scas
stos
in
mov
push
pushf
aas
out
imul
mov
rcll
mov
out
out
nop
adc
js
out
push
shll
adc
mov
stc
or
in
mov
adcl
mov
sub
test
pop
sub
jmp
add
jno
scas
test
loop
mov
loope
add
cmpsb
dec
into
out
cmp
dec
push
std
xchg
ljmp
sahf
test
mov
cmc
add
lret
sub
gs
mov
mov
sahf
fsubrp
mov
lea
or
adc
push
push
cld
mov
xor
cmpl
scas
enter
daa
ss
push
pop
sub
or
sahf
fwait
repz
lods
stc
jge
push
insb
cmp
xchg
jmp
jp
mov
stos
sub
and
sbb
mov
in
inc
adcl
in
push
movsb
pop
and
sub
dec
fbstp
adc
iret
ja
inc
pop
stos
repnz
je
fdecstp
cmp
jbe
adc
fs
sbb
push
jge
subl
push
cmp
dec
sbb
shlb
jge
sbb
test
gs
push
jb
repnz
leave
aas
faddl
into
lcall
sub
cwtl
lods
sub
fnstcw
add
dec
dec
lods
push
push
inc
pop
ja
mov
orl
push
std
stc
adc
jns
pusha
fld
inc
dec
mov
xchg
stos
and
in
xor
mov
dec
dec
jb
mov
push
push
mulb
jl
jnp
push
xor
sbb
int
nop
fidivl
aas
aas
or
insb
xchg
rcr
jns
mov
xchg
dec
push
mov
xchg
pop
mov
int
jmp
xchg
outsl
andb
sbb
pop
mov
and
mov
test
roll
popf
rcrl
push
icebp
pop
dec
or
cmp
daa
xor
pop
popf
rolb
popf
popf
test
sahf
arpl
rcll
pop
sub
sbb
sarb
dec
or
js
data16
jle
inc
jne
mov
std
inc
adc
mov
inc
popf
push
dec
dec
aam
inc
jle
sub
leave
xchg
mov
xchg
out
shll
xor
imul
in
pop
cltd
sub
mov
leave
aad
cmpsl
xor
subl
mov
dec
in
inc
jmp
pop
scas
sbb
push
jg
xor
adc
repz
add
aas
sub
jns
mov
enter
cmp
lock
sub
xor
mov
lcall
xor
xor
lret
xchg
and
mov
sub
or
cmp
push
mov
push
ret
adc
int3
mov
cmp
push
add
xchg
xor
sarl
mov
call
xchg
sub
cwtl
jge
sbb
fstps
inc
cmpsb
das
xchg
rorb
stos
bound
outsl
into
in
mov
add
movsl
mov
xchg
xchg
outsl
fsubrs
mov
push
and
pop
adc
inc
int3
jge
daa
cmp
push
push
into
test
dec
aad
std
aam
jae
imul
inc
leave
bound
sub
mov
push
pusha
negl
mov
jmp
mov
mul
add
insb
xor
dec
js
mov
movsl
hlt
xchg
dec
add
pop
xchg
cmc
add
xchg
iret
adc
les
jae
dec
ds
xorb
pop
mov
push
sbb
mov
xor
pushl
add
add
stos
sti
bound
aad
mov
mov
mov
pop
pop
push
adc
les
and
xchg
xchg
lahf
or
hlt
in
bound
gs
mov
cld
aad
arpl
movsb
pop
fstps
pop
test
dec
add
jne
loop
test
add
sti
mov
jnp
stc
pop
push
mov
inc
cwtl
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
jmp
xchg
inc
aad
les
push
fmuls
add
inc
cmp
adc
clc
adc
or
inc
stos
xor
jl
out
data16
jbe
cmp
inc
aam
in
mov
mov
nop
mov
inc
dec
ret
mov
sub
xor
sbb
sub
push
fwait
sub
jno
mov
lock
sarl
test
jge
es
test
sti
cmpsb
jbe
cmc
inc
int3
push
ret
jg
popf
mov
push
add
sbb
cli
gs
je
pop
mov
scas
mov
addr16
rclb
or
xor
sbb
jl
sub
sbbl
cltd
push
push
xchg
lret
inc
pop
rorb
push
pop
insl
mov
cmpsl
das
int3
xor
in
mov
gs
fnstcw
loope
push
aas
inc
and
les
out
popf
sub
fwait
imul
pop
in
push
jno
mov
cmp
fwait
test
cltd
xor
inc
sub
xchg
mov
ret
mov
sbbl
imul
pop
into
popf
push
pop
insb
loopne
sub
jge
jmp
xor
inc
js
daa
fstpl
sarb
daa
icebp
test
add
or
lock
scas
pop
xlat
fnstcw
xchg
cwtl
add
inc
out
pop
jg
aaa
and
pop
fisubs
xor
lock
aas
mov
or
shrb
faddl
dec
out
arpl
repz
sub
xchg
adc
pop
sbb
cmp
cld
mov
push
mov
shlb
loopne
pop
pop
push
mov
add
int3
sub
test
and
jg
and
push
mov
adc
addr16
or
andb
pop
jbe
sub
xchg
pop
add
push
fnstcw
test
ja
cmpl
cmp
and
push
out
sub
inc
push
inc
rclb
add
lock
push
push
inc
or
xchg
xchg
sbb
lahf
mov
stos
nop
add
shll
jns
jno
cmp
xchg
addr16
push
mov
jns
cmp
out
sub
stos
fnsave
push
mov
loop
jge
sarb
push
dec
and
ss
insb
and
or
incb
mov
xchg
loope
out
lea
jge
adc
add
sub
stos
je
jmp
movsl
into
push
push
inc
or
pop
mov
mov
test
xor
jl
jae
xchg
sar
sbb
into
cld
cmp
cltd
lcall
xchg
sub
sub
out
sbb
jl
test
jge
std
loop
aaa
pop
mov
mov
test
les
mov
insl
jle
test
cmpsl
xchg
mov
jle
mov
mov
pop
jae
xor
gs
insb
enter
pop
sbb
test
cmp
loop
pop
xlat
fwait
mov
aam
lea
pop
inc
push
and
test
push
cmp
popa
fsubrs
mov
test
jecxz
ss
and
adc
add
loop
in
fisubrl
lret
testl
in
lret
aaa
stos
adc
outsb
xlat
aas
sbb
gs
mov
cltd
outsb
pop
iret
sarl
dec
cmc
xchg
push
stos
scas
adc
int
loopne
sub
sub
movsl
movsl
xchg
ret
push
shrl
push
mov
int
xor
mov
jp
test
dec
and
loope
inc
out
rcrb
xchg
sbb
outsb
hlt
outsb
outsl
shrl
cmp
jne
inc
xor
loop
push
dec
std
xor
bnd
loopne
or
mov
cld
inc
fmull
ja
nop
add
repnz
popa
rcl
pop
out
xchg
push
pop
leave
call
jno
mov
add
mulb
fnstenv
push
xchg
nop
xlat
inc
les
xor
jnp
subb
insb
dec
pop
es
xor
mov
adc
sbb
ja
push
jg
lods
ror
cmp
lds
fucomi
mov
xor
lret
lods
imul
jbe
aas
dec
push
jecxz
xor
sub
out
cmp
push
repnz
call
aam
andb
into
lea
cmpsb
movsl
or
jns
sub
cmp
fisubs
inc
stos
dec
cs
pop
jmp
imul
mov
add
add
push
enter
out
push
push
popa
xchg
out
inc
data16
das
rcrb
add
orl
xor
jns
lret
push
fisttpll
xor
lock
add
sarl
sahf
in
dec
fldl
mov
mov
jne
or
cli
mov
icebp
mov
jle
iret
dec
push
sbb
es
js
push
enter
sbb
sbb
inc
jne
jb
and
cmp
iret
xor
mov
mov
and
dec
jae
mov
and
sub
inc
cmpsl
adc
lods
cmp
out
jno
dec
jg
mov
ret
test
push
out
sbb
cwtl
addb
int3
rcrb
ds
cmpsb
inc
popf
arpl
or
mov
mov
outsb
lds
dec
mov
notb
fprem1
clc
xchg
push
adc
loopne
adc
or
mov
push
dec
inc
hlt
out
dec
scas
mov
adc
int3
push
adc
push
mov
insb
outsl
adcb
dec
push
adc
mov
and
js
jbe
mov
psllq
jp
pop
sbb
rcr
loopne
xchg
cmpsb
pop
jno
add
inc
xor
dec
xchg
xlat
inc
int3
or
daa
sbb
stc
andl
mov
xor
cltd
faddp
dec
pop
push
inc
adc
movsl
out
test
rep
mov
shll
out
negl
ds
xor
test
dec
mov
incl
loop
and
inc
call
dec
xor
push
outsl
and
push
pop
pop
je
les
fs
bound
enter
aas
adc
mov
xchg
test
add
pop
adc
iret
jnp
dec
movsb
repnz
pop
mov
xor
shld
xor
mov
mov
shl
jmp
lret
xchg
cli
icebp
mov
fiadds
in
adc
adc
clc
adc
in
pop
std
xorl
mov
inc
and
fists
push
and
in
push
nop
lock
fcmovnbe
jne
enter
repnz
clc
dec
cld
pop
jge
sub
xor
mov
xchg
mov
and
popa
push
mov
dec
fs
popa
lcall
sbb
dec
cli
cmp
pop
sbb
enter
dec
loop
pop
sub
popf
mov
jne
shl
loop
fbstp
arpl
repz
cmp
rcr
and
lahf
pop
jb
in
push
or
mov
mov
mov
xchg
pop
outsl
add
mov
push
lods
sub
push
andl
rcr
out
push
cmp
xchg
test
jno
adc
ljmp
or
push
mov
mov
cmp
push
add
fs
fwait
roll
les
push
dec
pushf
mov
jle
jns
xlat
sarl
lods
mov
xor
fsts
fistl
cmp
cli
add
test
fcoml
add
lahf
scas
outsb
lahf
dec
xlat
hlt
sbb
test
shrl
cmp
addr16
call
xchg
pop
mov
subb
cmp
movsl
popa
mov
fldenv
ret
cmp
aas
sbb
mov
insl
pop
adc
ret
es
inc
and
xor
lahf
loope
popa
push
daa
fcmovu
xor
or
ja
enterw
scas
push
sbb
fdiv
scas
nop
mov
test
cmc
sbb
xlat
jne
bound
fstp
repnz
out
lea
arpl
mov
and
jae
js
int3
sub
fnsave
or
addr16
mov
lret
dec
mov
mov
add
cmpsl
sbb
jge
or
pushf
fs
aaa
gs
sbb
popf
add
mov
push
push
adc
pop
jae
cld
ds
cmp
cmp
mov
xchg
sub
popf
dec
xchg
and
test
pop
sbb
lods
add
fdivp
xor
sbb
arpl
mov
cmpsb
popl
cmpsl
jae
jno
enter
jno
or
nop
stc
jle
and
fcoms
pop
out
insb
push
nop
or
push
add
pop
xchg
sar
sahf
ret
addr16
add
call
jmp
pushf
xchg
cmp
repz
cs
ret
arpl
in
test
popf
mov
xor
divb
movsb
adc
xchg
dec
inc
cmpl
inc
dec
das
icebp
loopne
dec
adc
add
shl
leave
les
inc
dec
xchg
mov
sub
ss
test
adcl
cld
lahf
cmp
popl
not
call
push
xchg
dec
sub
mov
jno
xchg
rcl
jo
shll
sbb
psubusw
stos
sbbb
sbb
inc
mov
cs
lods
lds
jnp
inc
xor
insb
or
hlt
sti
push
push
shrl
pop
test
push
push
fidivs
movsl
xor
pop
inc
pop
cmp
dec
inc
push
outsb
xor
sub
sub
mov
arpl
pop
pop
or
lret
pop
std
dec
adcb
jmp
mov
data16
nop
test
add
roll
data16
sbb
sub
fwait
mov
xchg
shrl
dec
xchg
xchg
cld
adc
xchg
bound
sbb
sub
sahf
loopne
lcall
xor
inc
cmp
push
aas
rorl
mul
test
test
jp
arpl
cwtl
pop
testl
mov
sub
rcl
fildll
fdivl
mov
xor
jae
aad
iret
pop
or
jnp
cmc
es
mov
xchg
xor
pop
push
out
mov
sbb
testl
pushf
insb
xchg
mov
jb
outsb
iret
xor
insl
bsf
and
jnp
icebp
cmp
leave
int3
imul
push
les
fiaddl
mov
cli
mov
pop
sbb
xchg
fcmovu
mov
and
sub
sbb
cmpb
fs
pop
sbb
jbe
dec
pop
cmpsl
pop
in
dec
pop
xor
cs
sti
test
xor
push
mov
mov
jle
jp
fdivrs
mov
mov
subb
jge
int3
fiadds
imul
sbb
daa
jp
call
pop
cmpsb
iret
test
jmp
cmp
cmp
xchg
cmp
popf
sbb
sahf
xchg
mov
or
xor
xor
aaa
push
jg
xlat
mov
cli
jp
mov
push
aad
insb
xchg
cmp
popf
xorl
mov
shrb
stos
adc
stos
roll
gs
ds
hlt
mov
loopne
adc
mov
pop
push
and
out
lahf
test
ret
xchg
adc
jo
and
lds
addr16
pop
cmp
and
lds
out
fmul
jle
xchg
icebp
push
orl
lock
adc
jb
add
imul
in
sub
imul
push
adc
push
gs
mov
rcll
push
or
push
aam
loopne
ret
mulb
or
pop
fistpll
pop
ljmp
jl
scas
stc
outsb
add
fstl
mov
pop
mov
inc
ffree
jg
popf
adc
outsl
scas
imul
cmp
add
dec
in
jg
fistpl
mov
xchg
inc
and
lcall
xor
xor
jecxz
aam
mov
add
inc
xor
jno
pop
xlat
adc
push
mov
or
mov
or
adc
in
icebp
pop
push
xor
out
call
dec
mov
push
shrb
sub
adc
fs
sbb
and
sbb
mov
push
cmp
pop
out
cmp
ss
jnp
mov
test
xchg
scas
movb
cwtl
rcrb
lds
ss
lds
sbb
inc
in
adc
pop
jge
stos
lock
fidivs
roll
repnz
and
add
bound
adc
inc
adc
test
ret
push
add
mov
imul
push
xchg
hlt
xchg
push
adc
mov
cs
cmp
pop
arpl
or
xchg
add
test
adc
lods
jns
sbbl
test
sub
xor
rcrl
dec
in
aad
jne
out
or
push
or
add
mov
mov
xor
sub
shr
daa
das
ljmp
out
scas
and
test
pop
pop
das
pop
mulb
push
pop
ja
faddl
sub
int
arpl
dec
test
jl
aaa
xor
and
movsl
das
addr16
movsl
insb
mov
shll
test
js
xor
sub
jmp
adc
xlat
mov
push
rep
cli
rcrb
mov
stos
mov
dec
fdivs
cmc
enter
dec
cmpsb
add
add
sbbb
mov
nop
pusha
ffreep
ret
sub
loopne
inc
insb
in
fidivl
adc
jl
inc
rcrl
mov
mov
adcb
movsl
outsl
je
sub
repnz
call
inc
movsb
pop
jge
cmpsl
pusha
stc
xchg
sub
or
mov
aam
push
icebp
lret
push
sbb
jb
xlat
dec
mov
jnp
pop
repnz
sub
or
xor
mov
aas
push
jno
stc
mull
xchg
sub
sbb
loope
or
lds
push
cmp
cltd
dec
nop
cmovp
or
xor
xchg
je,pn
or
test
cli
mov
mov
lcall
imul
adc
xor
cmp
cld
mov
inc
pop
jmp
mov
mov
pop
imul
or
aad
mov
or
in
ret
outsb
clc
xchg
mov
mov
inc
push
inc
push
mov
push
imul
push
jg
jnp
movsl
dec
xchg
xor
or
mov
add
in
nop
or
rcr
mov
xchg
sbb
and
push
sbb
push
xchg
sub
in
popf
xchg
sub
stos
popf
daa
jmp
cli
mov
popf
inc
popf
jae
push
cmc
cmp
stos
repz
gs
popf
xchg
fcoms
in
push
mov
das
out
cli
dec
hlt
push
mov
in
mov
stc
xchg
push
test
nop
aas
in
mov
lea
rcll
pop
jb
xor
pusha
sbb
lods
imul
mov
inc
cwtl
add
lahf
jmp
push
add
push
movsb
push
cmpsl
movsl
insl
inc
shll
push
push
bound
cmp
mov
mov
movsl
stos
jb
in
cld
add
clc
rcrb
sub
mov
inc
or
pushf
xchg
dec
les
push
push
cmp
mov
mov
je
mov
adc
cmpsb
loope
sub
push
cmp
mov
fs
dec
aam
pop
cli
lds
jo
cmpl
cmpsl
inc
enter
inc
and
imul
cmp
xor
adc
adc
jnp
sub
jae
xchg
push
mov
mov
mov
jns
cmp
and
cmc
inc
cs
stc
mov
pop
mov
and
std
sub
or
cmc
jecxz
xor
mov
xchg
out
lret
push
adc
inc
pop
rorb
js
cmp
mov
testl
xchg
inc
inc
icebp
mov
outsb
cmp
inc
jl
sbb
cltd
ret
ds
fimull
or
cmp
or
inc
xchg
cmpsl
mov
adc
sub
imul
fidivs
cs
test
adc
rorb
push
call
fisubrs
push
movsl
mov
xchg
faddl
aaa
xchg
ljmp
push
xor
je
into
sub
inc
repz
out
mov
mov
scas
push
dec
sahf
or
fwait
or
mov
mov
xchg
cs
nop
cmpsl
mov
pop
adc
xchg
js
subl
fcmovnbe
push
roll
push
sbb
inc
roll
mov
push
sti
fldl
es
aam
test
out
mov
shlb
sub
cmpsb
mov
out
inc
jbe
icebp
insb
add
mov
push
mov
xchg
cmp
xchg
int
jo
movsl
xchg
xor
rolb
jmp
push
lret
jge
aam
mov
add
cmp
inc
in
cmpsl
fstl
push
push
out
das
not
les
sbbl
in
popa
fistpll
fs
daa
jb
adc
shll
cmp
xchg
ds
in
xor
pop
jl
mov
mov
mov
inc
mov
insb
mov
aas
mov
vmovupd
jge
sub
sbb
mov
int3
jmp
aam
gs
js
icebp
rol
cmp
mov
mov
loopne
inc
jbe
mov
stc
inc
pop
je
ret
mov
out
xchg
nop
push
cmpsb
cmp
insl
test
add
mov
lea
mov
pop
or
pop
jb
jns
sub
ljmp
xor
fists
subl
stos
pop
mov
pop
shlb
test
arpl
jmp
stos
insb
xchg
lds
std
pop
xchg
scas
sbb
mov
cmp
pop
xchg
add
call
mov
push
add
push
outsb
stos
jl
or
push
jnp
mov
xor
jl
in
dec
adc
fnstcw
loopne
pop
rorl
or
push
cmp
push
jl
jge
pop
mov
mov
dec
xchg
xor
stos
jl
inc
clc
pop
jno
mov
aad
ds
mov
ret
pop
lock
sti
pop
outsl
or
cmp
lds
out
push
jb
push
popf
and
jns
addl
sahf
push
fidivrl
xchg
and
rorl
push
sahf
and
insl
jg
cmpsb
dec
pop
cld
pop
pop
inc
adc
loope
rorb
fdivrl
lds
inc
or
test
push
mov
mov
mov
mov
xor
shl
mov
mov
xor
jmp
dec
lds
stc
or
loopne
push
add
pop
adc
push
clc
adc
push
aas
aaa
add
mov
lret
push
pop
jae
mov
and
addr16
notb
adc
cmp
add
add
into
loop
push
hlt
or
lea
mulb
popa
xchg
arpl
in
das
jl
mov
in
xor
dec
jne
call
jl
setae
jnp
fsubrl
and
movsb
push
ss
je
and
pop
xor
lods
hlt
sbb
cs
in
xor
fcmovb
push
pop
les
aaa
lret
ret
and
and
inc
rorb
jno
sbb
xor
push
rol
adc
out
pop
outsl
dec
cltd
or
mov
sti
gs
push
push
gs
data16
pop
mov
mov
sub
jecxz
fistpl
inc
xor
or
mov
and
pop
adc
mov
lea
push
stos
data16
jle
xor
aaa
and
shl
test
cmp
fwait
mov
mov
imul
and
sahf
ret
xchg
aas
cmp
xchg
mov
movsb
cmp
inc
cmpsb
bound
inc
enter
jo
and
dec
enter
test
adc
cli
test
mov
add
test
test
or
add
push
xchg
push
fwait
push
mov
loop
pop
dec
test
ret
cwtl
push
mov
ret
jne
mov
jb
subb
mov
dec
inc
pop
out
pop
scas
sti
jle
adc
xchg
movsl
add
add
cmpb
das
cmp
xchg
jnp
js
subl
pop
scas
jae
ljmp
sahf
sub
push
mov
mov
iret
xor
test
js
stos
jb
xor
or
jecxz
or
inc
xchg
gs
inc
and
ljmp
mov
aam
lea
cmpl
fcmovnbe
cs
inc
mov
leave
dec
cmc
sahf
mov
sbb
jns
inc
lahf
adc
aaa
fcmove
pop
mov
outsb
add
mov
les
into
sub
xchg
adc
loopne
pop
pop
in
pop
arpl
push
repnz
mov
jb
sbb
mov
je
push
pop
jno
and
sub
aad
loop
out
repz
mov
adcl
jne
and
shl
rclb
xchg
mov
sub
stos
daa
push
dec
arpl
or
inc
inc
xchg
andb
and
enter
pop
jo
imul
cmp
mov
mov
xchg
adc
mov
nop
ficoml
inc
mov
iret
mov
aad
into
xchg
lea
mov
nop
ja
xlat
cmc
and
xchg
ficoms
sbb
test
jge
inc
pushf
jbe
pop
cmp
xor
push
inc
adc
imul
or
push
mov
inc
mov
sub
subl
nop
shr
mov
mov
pop
aas
add
jne
ficomps
enter
pushf
cmpsb
xor
imul
and
fmul
pop
xchg
mov
xchg
jns
mov
xchg
pop
shl
ret
adc
ja
lret
movsb
sahf
pop
pop
mov
push
insb
repz
xchg
adc
mov
xlat
sbb
xchg
sti
dec
das
xchg
loopne
lods
out
sub
mov
jmp
mov
xorb
inc
repnz
aam
bound
imul
jne
movsb
xorl
cld
adc
outsb
insb
sbb
loopne
mov
xlat
pop
jne
cmpsl
and
adc
mov
jno
sbbl
mov
add
mov
and
cmpsl
addl
xchg
mov
mov
mov
outsl
dec
pushf
cmp
jno
pop
nop
je
add
dec
jbe
dec
push
inc
xor
clc
jno
bound
or
inc
dec
xor
xchg
jp
insl
pop
xchg
enter
adc
push
mov
mov
add
cltd
and
jge
pop
xchg
addl
push
add
test
lahf
les
or
test
fwait
ret
fcoms
xchg
push
aad
pop
jae
xchg
mov
jbe
test
sbb
pop
ret
imul
push
movsb
sbb
inc
push
sbb
jbe
or
clc
and
movsb
subl
jne
add
add
stos
xor
mov
inc
or
and
outsb
add
ljmp
hlt
mov
lcall
push
scas
cld
and
scas
jb
mov
mov
stos
fimuls
mov
push
cmpsb
jbe
mov
out
stc
mov
stos
sbb
fwait
movb
inc
and
pop
xchg
mov
sub
xchg
mov
lret
push
sub
es
imul
shrd
adc
mov
cmpsl
cmc
hlt
push
mov
loope
or
adc
imul
clc
push
mov
arpl
add
cld
inc
mov
lahf
xchg
sub
push
mov
out
sbb
scas
cmpl
addr16
popa
fstpl
fwait
adc
aas
mov
add
adc
jns
xor
sub
pushl
pop
jbe
loop
mov
insl
cmp
add
cmp
push
cld
daa
push
xchg
lretw
enter
cltd
xlat
pop
add
ja
xchg
push
dec
fimuls
jns
mov
roll
pop
mov
cmc
data16
sub
fstp
push
xorb
ficoms
scas
mov
adc
ljmp
pop
push
int3
add
mov
cmp
mov
sub
push
push
mov
jle
adc
push
je
jl
sub
push
xchg
imul
inc
xchg
scas
jmp
fwait
cmpsb
sub
test
stc
dec
mov
scas
jp
sti
ss
mov
mov
outsl
inc
inc
xor
ljmp
daa
into
adc
jge
sti
pushl
cmp
sub
scas
stos
or
enterw
js
xchg
ret
aaa
mov
ds
cmp
addr16
call
loope
push
in
mov
mov
adc
and
in
mov
mov
jmp
cmpsl
sbb
jbe
es
sbb
js
adc
adc
push
clc
adc
mov
mov
repz
cltd
popf
enter
xchg
fwait
cmpsb
stos
int
dec
mov
inc
adc
pop
jl
push
mov
ret
xor
mov
inc
and
pop
shrl
push
arpl
outsl
cld
mov
pushf
std
cmp
test
test
and
sbb
push
sub
inc
jmp
out
mov
cli
or
sub
pushf
test
pushf
lahf
lods
cmpsb
sub
push
orl
in
pushf
push
adc
cmc
into
cmpb
clc
push
rol
cmpsb
dec
ret
jmp
hlt
cmp
in
jg
pop
xlat
mov
stos
cmp
push
loopw
adc
mov
loope
mov
xor
add
mov
cwtl
popf
inc
hlt
dec
movsl
mov
imul
nop
lock
push
add
adc
testl
cld
rorb
orb
dec
mov
inc
in
adc
xchg
push
push
ljmp
cmp
push
pop
popf
add
add
in
xor
sub
inc
pop
stos
outsb
cmp
cmp
jle
or
or
push
in
rcrl
jmp
jp
inc
dec
insb
push
sbb
stos
dec
push
test
in
pop
mov
or
cmpsb
and
adc
mov
add
sub
xor
pop
lods
mov
mov
neg
pusha
bound
dec
mov
scas
fnsave
adc
pop
call
sub
inc
or
pusha
mov
and
xlat
mov
pop
xchg
pop
test
fldl
imul
adc
out
sbb
or
xor
rolb
jae
repnz
lds
lds
icebp
push
and
movsl
dec
jbe
lock
xchg
push
aad
mov
idivb
lahf
subl
loopne
mov
mov
mov
jns
rorl
pusha
int3
jb
daa
pop
cmp
repnz
rorl
insl
or
inc
test
add
rclb
std
dec
stos
inc
test
repnz
cmp
mov
clc
pop
xchg
ret
xchg
mov
imul
add
mov
insl
popf
adc
loopne
cmp
aaa
mov
pop
push
cs
dec
mov
loopne
int3
push
ds
sbb
mov
enter
out
rol
mov
sti
mov
sbb
push
rcl
stos
mov
dec
mov
adc
dec
scas
test
and
or
sbb
push
popa
or
jo
gs
jo
add
adc
out
add
sbb
mov
cmpsl
and
or
shll
ss
push
sbb
add
inc
pop
testb
pop
subb
push
lret
jns
mov
pop
sti
daa
inc
and
and
jae
cmp
js
aam
lods
out
clc
xchg
mov
xchg
pop
cmp
fldenv
xor
fnstcw
insb
xor
out
dec
push
and
sub
test
pop
pop
scas
ret
pop
mov
inc
ja
dec
addr16
jge
sbb
sub
pushf
movsl
mov
fdivrs
add
adc
cmp
movups
stc
cwtl
pop
hlt
scas
out
push
loopne
or
imul
cli
sub
pop
fstl
test
dec
xchg
les
lcall
xorb
adc
and
lds
jo
dec
out
cmp
and
push
jae
xchg
add
mov
add
inc
push
mov
sbb
pop
dec
dec
sub
in
pop
inc
mov
lock
fimull
and
cmp
jecxz
cld
lcall
repz
xchg
sub
xor
cmpsb
xor
pop
sbb
aas
int3
and
movsb
adc
mov
xor
xchg
lods
in
lahf
popf
decl
sbb
call
ja
out
jno
loop
push
repz
xchg
push
push
fdivp
or
push
out
test
push
pop
shll
movsl
cmp
pop
loopne
lds
stc
andl
cld
cmpsb
xor
jecxz
add
paddusw
mov
jg
lret
enter
adc
stos
rcrl
cmp
add
mov
rclb
jl
je
ljmp
mov
sub
popa
dec
adc
rolb
das
mov
or
xchg
aas
into
in
jp
xor
iret
inc
mov
jmp
pop
mov
fcomps
sub
idivl
mov
push
js
cmp
enter
jb
and
clc
in
mov
push
mov
dec
cltd
sbb
jnp
xchg
jle
imul
ret
pusha
into
jg
lahf
dec
loope
orl
pop
sti
pusha
cmp
jmp
mov
test
cwtl
clc
dec
xchg
pop
sbbl
cmc
in
push
mov
jns
push
ljmp
jne
aas
dec
mov
sub
inc
sub
dec
mov
mov
call
fs
test
cwtl
jbe
iret
inc
pop
xor
xchg
ret
xor
inc
lcall
cmp
test
out
push
sub
repz
sahf
repz
int3
add
daa
dec
test
mov
lahf
mov
enter
cmpsb
push
cmpsl
fcompl
xor
rcrl
xchg
mov
mov
sub
xor
sbb
push
neg
popa
push
test
lahf
dec
xlat
ds
mov
insb
jp
fs
addr16
insb
cmpsl
cmp
sbbb
test
push
pop
mov
adcb
jbe
scas
and
jns
xor
cwtl
mov
push
xorl
dec
pop
test
fcmovb
shrl
jmp
adc
or
stos
jmp
push
xchg
pop
jne
adc
fstpt
cmc
movsb
imul
jmp
scas
jns
pop
push
lret
pop
inc
mov
and
mov
or
test
loopne
sub
fstpt
mov
xchg
iret
lods
stos
std
les
lret
pusha
rolb
xchg
addr16
enter
adc
jmp
mov
or
mov
mov
push
jmp
adc
outsb
mov
mov
xor
adc
push
clc
adc
adc
cmpsl
sti
jecxz
sub
mov
dec
mov
dec
pop
push
scas
sbb
ja
xor
test
xchg
xor
test
add
aad
imul
imul
je
jle
push
lahf
lods
adc
pop
mov
dec
movsl
clc
cmp
mov
mov
movsb
pop
stos
pop
xchg
aam
cmpsb
mov
jae
xor
ficomps
js
clc
pop
insb
inc
ds
mov
xchg
pop
pop
cmp
into
push
hlt
stc
jmp
mov
in
add
call
push
idivl
sbb
insb
sub
jns
push
int3
shrl
mov
xchg
dec
adc
mov
jb
pop
stc
aam
nop
sub
xchg
hlt
or
xor
xchg
adc
or
repz
movsb
mov
sub
add
add
scas
push
push
ret
nop
cmp
imul
jge
cmp
das
ret
dec
ret
add
add
jg
loopne,pn
pop
popa
dec
inc
daa
divl
adc
xor
cmpsb
negb
xlat
in
mov
pop
int
and
jne
adc
cmpsl
cli
enter
clc
mov
dec
lcall
cli
sbb
fldenv
inc
test
xchg
or
fiadds
and
jle
lods
in
push
mov
imul
pop
stc
dec
pop
in
sbb
adc
adc
lods
pop
jecxz
in
mov
jae
dec
cmp
scas
cmpsl
ljmp
out
mov
jo
mov
stos
in
mov
push
lock
std
add
mov
pusha
mov
ret
and
sbb
pop
fsubrs
imul
sub
cs
xchg
scas
out
and
inc
decb
pop
push
jg
dec
stc
aam
push
pop
inc
or
orl
sub
push
add
xchg
cmp
xor
pop
mov
into
loopne
xchg
cltd
pop
idivb
pop
or
dec
adc
lds
insl
fbld
in
mov
mov
or
xor
int
scas
pop
dec
in
int
push
add
dec
in
rolb
pop
push
sub
dec
add
ret
sbb
out
popa
loope
sub
dec
or
ds
les
aad
clc
dec
dec
lds
or
aad
out
inc
add
pop
rolb
inc
push
and
lret
sbb
bound
cmp
mov
addr16
xchg
xchg
cwtl
test
mov
push
lcall
rcrl
insb
inc
xchg
sbb
cld
sahf
int3
cltd
call
inc
jecxz
adc
cmc
fmuls
xor
push
cmp
add
sub
in
std
push
pop
mov
jmp
loope
adc
mov
loope
aam
out
mov
outsb
idivl
xor
addl
jmp
arpl
stos
popf
out
push
push
mov
popa
lea
push
lret
out
jbe
lea
lret
repnz
fdivrs
lea
bound
cmc
pop
cmpsl
dec
stos
fucomp
xchg
mov
adc
dec
ret
flds
inc
cmp
outsb
ret
sub
ret
jp
andb
inc
or
pop
pop
std
mov
push
addr16
pop
dec
je
lcall
outsb
in
jnp
jne
mov
push
call
outsb
lods
cmp
es
lcall
rcr
mov
and
xchg
call
sub
fwait
std
ficoms
mov
lret
cmp
arpl
xchg
cltd
inc
lcall
sbb
popa
dec
fwait
pop
xchg
lret
pop
mov
mov
lret
sub
ss
sarb
ficomps
sbb
sub
movsb
fidivs
mov
jl
lods
adc
cs
daa
clc
imul
and
mov
xor
push
pop
popa
mov
sahf
repz
scas
sbbb
call
lcall
and
lcall
out
mov
push
nop
add
fmul
fsubp
sub
and
pop
faddl
cmpsl
and
notb
xchg
ret
mov
out
pop
pop
loope
dec
sub
cld
and
xor
lret
adc
lock
in
xchg
and
iret
rcll
jecxz
shll
jb
pop
cmp
dec
nop
push
and
mov
fwait
push
fsts
xchg
ljmp
insl
dec
mov
imul
ja
ljmp
std
mov
dec
fsts
mov
sub
cmp
jae
call
lahf
sub
cmp
idivl
push
addr16
and
test
cmp
call
or
enter
push
jne
jle
out
dec
mov
or
mov
pop
loopne
test
sbb
in
inc
outsb
xchg
idivl
scas
movsb
pop
stc
fisttps
clc
lret
sbb
xor
mov
es
ret
jnp
xor
outsl
mov
fmull
cli
mov
in
and
mov
jle
leave
xlat
pusha
sti
push
pop
rcrl
aaa
sub
push
inc
push
xchg
gs
lcall
inc
in
mov
shll
out
jnp
out
sub
shll
pop
fnstenv
fcompl
ret
jle
test
cltd
mov
dec
cli
push
add
push
jo
or
incl
add
add
call
jmp
cmp
sub
xchg
and
jns
movsb
stos
inc
adc
pop
or
lock
mov
leave
aad
aam
fsubrp
jecxz
daa
sub
lock
jle
mov
jle
movsb
dec
sub
pop
mov
add
mov
nop
inc
lods
mov
arpl
mov
movsl
call
sti
pop
jne
sub
mov
or
bound
test
repz
push
xor
into
xor
cld
daa
pop
rclb
mov
and
inc
adc
loop
pop
cld
cli
jae
enter
rol
xor
repz
popf
jbe
sbb
out
sub
jne
jmp
add
mov
inc
insl
inc
pop
push
inc
adc
push
clc
adc
lcall
dec
inc
sub
fwait
lods
cltd
or
mov
inc
roll
pop
imul
cld
enter
push
js
pop
leave
scas
sbb
and
les
imul
scas
and
test
xor
or
jge
stos
mov
or
sbb
aas
xchg
scas
in
test
push
mov
mov
add
add
xlat
push
adc
test
scas
repnz
in
std
loopne
push
push
pushf
sbb
sub
je
mov
dec
dec
scas
sub
lea
mov
xor
fdiv
xchg
js
lcall
jge
loopne
iret
push
mov
cld
push
jnp
xor
cld
sub
in
push
lods
ficoms
cmp
cltd
cmpsb
push
call
jmp
push
adc
loopne
and
pop
push
lcall
aad
and
cmp
mov
popa
sahf
xchg
xor
add
call
movsb
push
jle
aaa
dec
pop
jl
imul
mov
or
movsb
lock
jnp
jle
shrl
mov
sbb
xor
fcompl
mov
ds
dec
pop
notl
jns
or
lock
add
dec
fiaddl
js
jns
mov
aas
add
mov
push
sbb
xchg
lret
testb
icebp
sub
outsb
imul
rcl
dec
jae
push
fxch
mov
imul
mov
inc
clc
frstor
cmp
sub
repnz
xor
in
pop
out
gs
sub
cmp
cmp
xor
inc
mov
jbe
mov
xchg
cltd
aaa
fs
test
pop
mov
jbe
out
pop
push
ja
pop
ror
add
lea
mov
pusha
fldcw
push
ret
fwait
outsb
pop
push
enter
shr
inc
out
pop
add
xor
mov
loopne
hlt
or
push
jecxz
add
repz
lds
and
pusha
jns
insb
cwtl
mov
stos
push
lock
dec
mov
lcall
inc
stc
or
das
jb
shll
rcrl
pop
lods
jns
out
sub
mov
xchg
testb
movsl
xor
inc
add
cmpl
pusha
icebp
repnz
rcrb
cmc
dec
mov
lret
pop
inc
andb
jg,pt
and
push
cmpsb
sbb
fsubr
push
jo
pop
hlt
jns
movl
dec
xor
sub
hlt
inc
loop
inc
pop
scas
stos
mov
aam
insb
cmp
dec
iret
clc
inc
sub
out
hlt
rorb
in
add
out
cmp
sbb
jns
orb
sar
xchg
rorb
mov
pop
add
fcoms
push
xchg
fninit
mov
aaa
addr16
xchg
dec
pop
cmpsl
mov
pop
lret
cld
sbb
cmp
movsb
or
push
lds
pop
dec
push
fldcw
fisubrs
push
fs
mov
inc
adc
popf
sbb
xchg
mov
in
in
pop
lock
sub
ljmp
xorb
mov
jle
lcall
cmpsb
mov
cmp
sub
jecxz
mov
adc
pop
dec
adcb
lea
int3
fs
sub
cmp
mov
outsb
sbb
lods
ret
adc
in
in
adc
fstl
aad
mov
ljmp
imul
xor
push
lahf
pop
into
mov
fdivr
mov
mov
mov
cmpsl
mov
stos
sahf
mov
dec
dec
call
adc
cmpsb
in
popf
push
sbb
dec
inc
jae
sub
icebp
jns
ja
pop
jle
stos
rcll
shrl
rcr
xchg
in
cmp
daa
call
hlt
mov
sub
sbb
aam
sub
shrb
lcall
inc
andl
lret
sti
and
mov
aam
aas
in
loop
sub
rorl
sahf
test
outsb
mov
xchg
stos
fidivrs
movsl
dec
int
xchg
fs
lahf
or
inc
inc
call
pop
lods
inc
sbb
dec
clc
out
cmp
xchg
mov
cmp
mov
outsl
mov
push
repz
lods
cmp
cmpsb
lahf
pop
mov
dec
out
mov
rcrb
les
fsts
jle
xorl
jle
xchg
push
in
xor
lock
popf
shll
or
je
js
jae
call
push
test
inc
sub
add
mov
or
jns
cmp
jg
outsl
cmp
xadd
xor
imul
and
mov
or
inc
outsl
cmpsl
fidivrl
imul
push
stc
xor
std
js
out
and
mov
repnz
arpl
inc
adc
pushf
or
mov
jne
mov
add
nop
mov
dec
pop
setne
dec
out
cli
dec
dec
movsl
cmpsb
cmp
call
mov
mov
les
fwait
sbb
pop
sub
jge
bound
add
psrlw
inc
testb
test
mov
imul
mov
cwtl
inc
call
sub
xor
sbbb
push
and
loopne
stos
inc
xchg
add
mov
sbb
push
call
fists
sbb
add
sub
cltd
popa
cmc
cmp
push
sub
push
lods
mov
xchg
sti
inc
and
cmpsl
sub
dec
mov
sbb
sub
js
cmp
mov
pop
xchg
addr16
pop
js
or
mov
or
xchg
jp
or
add
mov
divps
push
js
int3
mov
mov
cmc
cmp
add
xchg
dec
mov
cmp
ljmp
stos
shr
xchg
scas
sbb
js
out
mov
push
jnp
push
mov
or
cmpsb
jp
push
cltd
jmp
loop
inc
cmp
dec
in
out
push
jp
aam
mov
pushf
imul
cmp
shll
ds
ret
test
push
mov
cwtl
aam
fwait
inc
cmp
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
jmp
jae
jmp
dec
movsb
xchg
hlt
sub
enter
adc
push
clc
adc
mov
mov
lret
popf
push
xchg
or
fidivs
insl
mov
leave
lods
loope
push
add
das
push
jae
pop
mov
cmc
scas
in
sbb
mov
mov
inc
hlt
sub
mov
xchg
fs
stos
pop
lea
jp
bound
subb
in
fcoml
adc
pop
movsb
xchg
push
cs
daa
inc
dec
shl
adc
fistl
cmpsl
mov
pop
scas
and
jno
cmpsb
mov
jnp
adc
inc
loop
inc
lods
sbb
loop
std
stos
scas
in
cmpl
inc
xor
testl
loope
fdivl
js
cwtl
or
inc
mov
hlt
imul
xchg
int3
xchg
ja
ss
lcall
lds
sub
mov
pop
push
dec
mov
out
push
xlat
daa
movsb
inc
pushf
test
mov
popf
dec
cmp
nop
fcomps
fbld
loope
punpckldq
fsub
and
mov
mov
stos
sub
daa
mov
or
fcoml
popa
sbb
sbb
mov
shrb
dec
xchg
adc
mov
pop
sbb
xchg
sub
pop
push
ja
xchg
lea
inc
jp
sti
or
pop
or
inc
adc
push
les
shll
adc
add
push
mov
les
movsl
gs
xlat
decl
ret
add
pushf
sbb
pop
clc
adc
add
movl
xchg
mov
mov
or
in
pop
aam
sbb
jo
lods
std
jg
loop
int
popa
sbb
sbb
loope
mov
xchg
iret
ficompl
lret
jge
lock
xor
mov
jle
lea
mov
cltd
lods
push
push
fidivrl
add
add
mov
dec
dec
mov
cs
fimuls
nop
sub
loop
sbb
mov
push
or
mov
loope
xlat
or
mov
cltd
xchg
sub
pop
mov
mov
xchg
cmpsl
test
jge
jno
aas
mov
ret
fcomps
imul
call
push
andb
jo
push
int3
fbld
in
das
stc
jmp
mov
rdmsr
push
jecxz
mov
shll
pop
dec
loop
sti
pop
pop
jns
dec
jg
shr
cwtl
dec
pop
jbe
cli
mov
sbb
push
int
cltd
mov
popa
adc
inc
xchg
js
leave
dec
add
dec
int
and
mov
mov
dec
cli
fwait
pop
xor
push
out
test
adc
add
xor
ret
inc
inc
dec
mov
dec
and
pop
and
sub
xchg
fdivrp
cmc
jae
aam
cli
insl
xchg
fbld
je
lret
xchg
ret
push
push
std
lahf
sbb
mov
mov
sbb
push
lret
sub
push
es
shll
sbb
jle
ror
mov
test
mov
in
push
inc
pop
xlat
mov
dec
icebp
mov
call
cmp
add
shrb
dec
xchg
inc
imul
int3
xchg
and
push
stc
stos
hlt
push
or
xor
sti
inc
and
push
sbb
les
stc
sbb
dec
dec
sbb
pop
push
lcall
or
inc
movsl
inc
cltd
xchg
fsubr
loopne
in
push
and
imull
adc
shr
xor
fisubrl
andb
loope
cli
mov
orb
pop
push
pusha
mov
arpl
adc
cmp
stos
xchg
movsl
or
push
scas
loop
jp
mov
pushf
jp
sti
outsl
faddl
xchg
pop
out
add
mov
mov
cmpsb
bnd
adc
adc
jge
inc
and
lret
mulb
or
sbb
add
push
or
fldcw
pop
outsl
shr
repnz
cmp
repz
xchg
or
fwait
arpl
add
es
imul
jl
pop
in
xchg
and
adc
in
sub
adc
and
push
inc
inc
pop
mov
stos
stos
adc
jne
testl
mov
cmp
negl
add
aaa
sub
addr16
incl
in
clc
pop
jge
stos
jge
add
inc
jmp
or
cltd
insb
xlat
loop
loope
push
cmp
mov
mov
inc
pop
aaa
push
or
inc
es
ljmp
adc
scas
aad
or
cmp
add
push
sahf
push
push
and
lods
add
add
mov
sar
inc
push
movsl
jecxz
fwait
push
repnz
clc
mov
jnp
or
sti
and
loopne
ljmp
push
add
mov
out
or
es
mov
add
fwait
test
sti
lret
cmp
js
outsl
jmp
fadds
jb
sbb
pop
adc
sub
aad
xchg
imul
and
lock
sub
icebp
and
mov
lcall
pop
mov
testl
add
pop
xchg
imull
mov
data16
and
jnp
dec
jle
inc
xchg
lock
pop
out
cmp
test
scas
jp
inc
lcall
and
lods
lock
jmp
add
mov
xor
xor
cmp
xchg
mov
adc
adc
ja
int
add
mov
push
insb
sub
and
flds
or
rcrl
jnp
mov
testl
es
in
scas
inc
mov
out
test
jne
push
stos
aad
xor
stos
adc
and
dec
mov
test
sbb
dec
test
pop
cld
or
dec
psubd
dec
add
jns
push
jp
pusha
lcall
lods
imul
ficoml
addl
repz
and
mov
jp
lods
fiaddl
mov
mov
mov
mov
aam
repz
insl
jne
cmp
lock
icebp
faddl
mov
cmp
xchg
cmpsb
shrb
inc
outsl
sub
aad
pop
ds
or
cmp
shrd
shr
mov
mov
xor
shl
jmp
lods
jmp
nop
cmp
push
add
es
push
clc
adc
sbb
push
xchg
sub
mov
lock
mov
jae
fisubrl
fsubr
inc
pop
mov
dec
add
inc
add
mov
pop
jp
jecxz
in
and
fildll
mov
jns
in
xchg
push
jmp
push
es
bnd
daa
cmp
lcall
aad
jb
sahf
sub
mov
addl
nop
xchg
pop
or
lods
int
fnstenv
pop
sbb
sti
jecxz
adc
inc
push
ret
and
xchg
lea
lret
stos
loope
mov
xor
and
mov
andl
jbe
test
mov
cli
lods
dec
outsb
mov
pusha
mov
sbbl
rol
add
stos
add
cmc
aas
xchg
add
sbbl
outsb
daa
dec
sub
push
jecxz
in
inc
pop
fmuls
ret
and
lods
movsb
insl
push
or
push
jns
xor
inc
pop
loope
cltd
call
icebp
cmp
outsb
sub
sbbb
call
dec
xchg
movsl
gs
xbegin
aas
pop
add
cmovge
and
sarl
and
out
dec
sarb
push
xor
shrb
mov
mov
adc
fdiv
cmpsl
fstl
std
jmp
mov
out
andl
pusha
mov
rolb
mov
mov
test
push
mov
int
int
test
into
xor
bound
add
mov
and
dec
in
in
cmp
inc
mov
or
adc
sbb
mov
cltd
dec
cmp
mov
test
xor
cmp
mov
adcb
sub
push
call
loope
mov
arpl
out
fidivs
fwait
lods
mov
popf
stos
loopne
adc
push
bound
jge
and
pop
sbb
add
jbe
arpl
ds
push
les
stos
mov
daa
popf
or
mov
mov
push
lret
or
imul
sub
and
fldenv
jae
hlt
jnp
fstpl
dec
shlb
jle
mov
in
push
adc
sub
dec
outsb
shll
cmp
mov
dec
decb
bound
out
fmulp
and
out
push
mov
sub
jge
jecxz
sbb
cli
lods
adc
imul
outsl
je
xchg
std
popf
hlt
in
loopne
pusha
or
xor
or
sub
jmp
test
or
jg
addr16
push
outsl
stos
loope
mov
mov
xlat
inc
sbb
sbb
dec
gs
sbb
jns
add
push
imulb
pop
iret
ds
add
dec
pop
rclb
pop
inc
jle
mov
divb
movsl
jp
test
or
pop
call
in
dec
loope
mov
sahf
cmp
ja
inc
sbb
add
cmp
fmul
pushf
cli
add
pusha
push
pop
or
sbb
aas
sbb
inc
or
mov
mov
jae
jp
ja
cmp
arpl
inc
flds
jns
mov
stc
mov
hlt
jle
dec
lea
fisubs
xor
ljmp
lret
add
and
xchg
inc
pop
cld
inc
in
dec
dec
pop
jne
pusha
mov
std
aaa
cmpsl
or
pop
push
xor
icebp
lcall
adc
test
and
out
push
sbb
adc
cld
int
mov
pop
fs
push
stos
jg
lret
and
jns
jbe
push
es
fisttpll
inc
lds
or
jmp
out
hlt
mov
ficomps
push
aam
outsb
int3
sub
xor
mov
mov
loopne
add
xchg
cmp
inc
xor
cmp
or
cmp
lret
cltd
lods
addr16
outsb
pop
xchg
rcr
xchg
daa
les
mov
icebp
jle
dec
cmc
hlt
fucom
and
jp
repz
jp
mov
xchg
inc
push
cmp
cmpsl
xor
fldt
sbb
push
nop
fists
pop
jp
int3
xor
je
scas
pop
mov
in
outsb
xor
sbb
or
pop
push
push
push
jp
fisubs
lret
mov
adc
push
enter
mov
popf
cmp
pop
repz
divb
jae
sahf
enter
sub
lea
jno
jecxz
adc
in
mov
hlt
xchg
xor
sbb
into
xchg
adc
add
pushf
test
lods
xlat
into
sti
push
aad
sub
add
and
xchg
cld
sub
outsb
fidivrl
lds
testl
adc
jne
cmpsl
es
push
fidivrl
int3
jnp
int3
cld
jecxz
shll
jl
push
bound
xor
je
ret
sahf
dec
insl
mov
or
sahf
cmp
and
push
lahf
push
bound
out
push
addr16
cwtl
cltd
pop
sbb
jb
test
xor
sub
out
jb
insb
fisttpll
dec
push
lahf
or
lock
pop
mov
imul
orb
sahf
mov
add
inc
xchg
mov
mov
out
push
stc
push
lods
pop
popa
sub
xchg
mov
xchg
jmp
dec
mov
or
nop
xor
and
mov
sti
add
mov
leave
mov
or
stc
js
inc
pop
or
mov
inc
sub
add
repnz
xlat
scas
dec
push
fidivs
mov
rcll
pop
lock
pop
mov
call
pop
mov
or
adc
ret
pop
jb
ret
dec
ss
in
shlb
loope
dec
outsb
inc
push
push
fidivrs
iret
jnp
jne
pop
and
mov
fbstp
fsubl
insl
pop
out
les
xchg
xor
xchg
or
xchg
ficoml
leave
add
push
xchg
add
and
cmc
fisttpl
inc
jecxz
mov
cltd
push
mov
jb
incl
ret
add
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
jmp
mov
push
pop
or
adc
push
or
push
clc
adc
jne
je
lret
fsubl
fmuls
jecxz
lods
xchg
or
mov
stc
lock
mov
push
pop
hlt
xchg
and
pushf
xor
inc
cmp
mov
lock
inc
dec
popf
clc
test
out
fisubs
outsb
mov
cmp
or
add
jg
inc
cli
mov
repnz
fistpll
push
mov
test
test
mov
fisttps
cwtl
and
jg
mov
das
je
shl
mov
mov
push
mov
sahf
lods
in
lds
cmp
pop
pop
xor
xlat
aaa
ja
fdiv
jecxz
cmp
push
add
inc
inc
pop
lret
mov
icebp
cmp
jbe
xor
cmp
mov
fsubl
sub
ljmp
mov
lods
test
xchg
mov
push
enter
mov
inc
cmp
push
push
aas
fwait
cltd
adc
outsb
cltd
adc
push
lods
mov
mov
jl
scas
xor
jmp
xor
lcall
movsb
xchg
push
sbb
mov
add
mov
and
out
lcall
test
sahf
adc
cltd
xor
dec
inc
in
xchg
repz
bound
aad
js
outsl
pop
addr16
clc
xchg
mov
sarb
popa
in
out
incl
sbb
xchg
fs
loopne
mov
stos
pop
jbe
insb
mov
jne
call
cmp
icebp
shrl
lahf
out
jae
adc
sub
sbb
aam
int3
or
ret
sbb
xchg
out
xor
mov
adcb
or
scas
imul
nop
daa
arpl
ds
sbb
shl
mov
pop
out
fisubrs
xor
lods
out
mov
adc
fldt
lods
in
cmp
push
mov
dec
or
jmp
dec
pop
pop
lea
add
fxam
fdivp
mov
sub
bound
push
mulb
cmc
icebp
dec
fs
insb
cs
out
add
sub
mov
xchg
ja
ds
cs
sub
inc
dec
pop
out
loop
and
push
push
bound
cmpb
in
es
int3
sbb
loope
add
jb
test
jae
sbb
pop
fimuls
aad
jl
pop
or
sbb
jb
lea
pop
das
sbb
jl
mov
lds
lret
push
mov
test
push
pop
mov
xor
jae
add
decb
or
or
cmp
jmp
cmp
or
pop
pop
push
insl
stos
jle
and
andl
nop
xor
adc
pop
lcall
into
shl
add
lock
adc
jl
pop
mov
xlat
jns
lahf
jno
sbb
jbe
jae
test
lahf
aam
sti
mov
pop
int
mov
mov
lock
jae
sub
jb
in
jbe
mov
inc
ret
pushf
xchg
sbb
int3
pop
push
pop
push
and
filds
push
sbb
inc
or
cmpsb
mov
call
enter
out
bound
sbb
mov
es
incl
iret
mov
cwtl
jnp
mov
push
cld
xor
mov
xor
pop
jmp
outsl
pushf
mov
loope
push
push
cmp
pop
int3
orb
xchg
jge
xchg
rorb
inc
into
mov
hlt
imul
inc
xchg
sar
mov
adc
xchg
jl
movsl
push
enter
les
push
in
sti
leave
mov
cmpsb
fistpl
idivb
xchg
and
sbb
in
xorl
sub
push
imul
push
ficoml
pop
xchg
pop
mov
stc
xchg
test
xchg
fdivrp
inc
sub
xor
or
sub
js
dec
xor
cmp
mov
stos
movb
fs
repnz
push
mov
int
dec
cmp
pushf
add
out
jle
je
mov
adc
es
push
loopne
sbb
and
push
bound
out
rcrl
gs
pop
notb
xor
and
adc
insl
jb
aas
jns
jecxz
pop
bswap
sub
sbb
pop
xchg
push
sbb
xchg
sbb
lea
add
cmp
sbb
cmc
jle
arpl
adc
aas
loope
test
mov
test
sub
jecxz
gs
in
pusha
ror
cmpsl
or
das
mov
and
pop
mov
adc
pop
outsl
mov
jmp
sbb
jp
subl
bound
dec
test
dec
sti
test
lea
test
mov
push
add
xchg
inc
cmpsl
adc
and
mov
jns
pop
mov
add
cmp
out
xor
roll
xlat
loope
mov
push
adc
clc
scas
scas
sbb
fisubl
imul
add
icebp
dec
add
add
sbbl
outsl
mov
or
ja
cld
pusha
ret
cmp
pop
pop
jle
push
xor
addr16
pop
repnz
jno
and
or
or
int3
sbb
push
loopne
fistl
lds
dec
pop
xor
cmpsl
mov
adc
xchg
dec
and
rcll
jle
rorl
pop
dec
sub
lahf
pop
cltd
add
leave
cmpsl
test
xor
xchg
dec
mov
cltd
rcrl
xor
repz
mov
mov
sbb
or
inc
push
adc
add
out
sbb
cmpsl
int3
test
cltd
xchg
or
jnp
scas
cmp
pushf
push
cmp
jne
ret
xor
inc
or
pop
or
jmp
neg
xor
xor
or
adc
push
xchg
testb
aam
adc
mov
mov
add
fwait
xchg
enter
dec
mov
jle
stos
insb
mov
je
aam
in
xchg
mov
sub
js
pop
shll
dec
lods
xchg
pop
mov
hlt
add
mov
inc
cmpb
test
lahf
pop
xor
jge
stos
ret
push
xchg
shrl
lcall
cwtl
popf
dec
jp
inc
adc
inc
mov
lods
enter
add
movsb
xor
shl
xor
or
mov
jmp
loopne
rcl
mov
mov
sub
adc
clc
adc
fwait
mov
mov
in
lock
enter
sub
insl
push
pop
push
mov
fsubs
xchg
fdivl
int
mov
mov
sbb
mov
lods
pop
cmpsb
outsb
test
fmull
mov
xor
mov
inc
mov
call
xor
sti
push
xchg
jmp
lds
jbe
jno
or
lcall
mov
incb
sub
cmp
cli
cli
adc
cmp
mov
mov
loopne
dec
cmp
insl
mov
fdivl
xchg
push
mov
lahf
js
push
mov
push
mov
inc
cmp
ds
mov
push
pop
lock
adc
sysenter
addr16
cli
outsl
pop
repz
dec
enter
cmpl
sbb
shlb
adc
enter
jne
and
sub
ljmp
pusha
xchg
lods
arpl
clc
mov
lret
xchg
sub
imul
xchg
push
imul
bound
jecxz
hlt
push
sub
std
mov
add
mov
mov
out
pop
lods
mov
push
mov
mov
mov
mov
popa
rcl
mov
out
pusha
das
jp
fcmovb
push
sti
cmpsb
mov
jl
shl
nop
pop
jmp
inc
lods
daa
fnsave
and
jp
sbb
jl
xlat
and
mov
xchg
jae
inc
insb
dec
dec
cs
in
scas
dec
cmpl
loop
out
shr
xchg
sti
divl
in
stos
inc
in
ja
por
xchg
aaa
adc
dec
xchg
sarl
pop
addb
aaa
xor
movsb
mov
faddp
je
aas
jae
sahf
mov
or
loop
push
fbstp
sub
and
xor
jo
js
pop
mov
jle
jae
push
pusha
popa
cmp
lds
adc
add
sti
out
mov
push
iret
rorb
test
outsl
fistpll
jo
mov
xchg
inc
scas
mov
fisttpll
into
repz
aaa
and
push
out
loop
xor
hlt
dec
or
out
cmp
dec
sub
push
lahf
push
arpl
fsubl
pop
fsubs
mov
dec
jno
fcompl
lret
je
cli
mov
jle
outsl
mov
iret
push
push
cmp
call
out
pop
dec
jns
lods
xchg
in
mov
push
and
cmp
dec
pop
or
or
inc
mov
test
icebp
jns
lods
adc
pushf
push
stos
loop
stc
xchg
mov
sahf
pop
dec
loope
mov
cltd
xor
cmp
aad
push
jmp
or
sub
sub
sahf
fs
stos
and
test
rep
popf
jecxz
jl
fistps
lds
orb
stos
or
jns
xchg
ja
fidivrs
rcrl
shlb
mov
ja
xor
jmp
cs
dec
ljmp
test
and
test
aad
inc
enter
aad
sub
rclw
fs
xchg
loopne
popa
mov
aas
add
notb
pop
in
pop
das
lock
test
or
xchg
push
stc
icebp
mov
xchg
mov
dec
inc
xor
outsb
jae
cltd
adc
fcoms
sti
pop
in
sub
fstl
mov
out
cltd
and
xchg
loopne
cld
into
jo
mov
repz
outsb
mov
pushf
add
je
sub
lret
sbb
adc
pop
jg
fistps
cmc
out
lcall
cld
jnp
push
lock
mov
cmp
fistpll
dec
sub
add
mov
in
addb
cld
sbb
cld
inc
jmp
mov
fcmovu
cmp
mov
popa
outsl
mov
mov
mov
mov
xchg
outsl
sub
pop
mov
mov
ret
lahf
fwait
pop
mov
jb
jecxz
push
mov
mov
js
popf
test
pop
xlat
adc
xchg
xchg
cmp
mov
pushf
push
loope
xor
fistps
ds
xor
and
push
daa
adc
xchg
jl,pn
xchg
hlt
jle
rclb
lahf
jge
imul
lret
lcall
xchg
pop
cld
mov
fisubrl
lcall
aaa
adc
mov
pop
jg
fnstcw
pop
inc
cmp
in
arpl
and
data16
hlt
push
sbb
add
adc
push
mov
cltd
pop
sub
in
or
mov
push
push
rclb
mov
sbb
jns
adc
das
sub
sahf
sub
aad
lea
jecxz
adc
cmp
jno
imul
pop
orl
lret
sub
fimull
nop
aad
bound
xchg
outsb
jmp
lret
ja
mov
xorl
notb
push
dec
in
daa
add
jno
das
pop
int
gs
mov
jl
push
das
mov
lret
mov
mov
bound
test
xchg
mov
das
stos
dec
fwait
dec
loop
fcmovnb
arpl
add
xor
xchg
sbb
xorl
push
inc
stc
insl
ret
ja
mov
cld
ret
cltd
mov
xchg
fimull
imul
xchg
add
add
xor
movsl
arpl
cmp
flds
cwtl
sub
add
xlat
xlat
stc
push
outsl
arpl
lods
or
xor
or
addr16
jge
xchg
cli
mov
add
cmpb
gs
int
testb
arpl
das
in
mov
lcall
jg
aas
and
lret
scas
mov
inc
gs
in
in
mov
sub
inc
pop
jae
dec
mov
aaa
cmp
mov
sarb
imul
xchg
shlb
shrb
mov
adc
mov
mov
dec
pop
and
mov
sti
push
fwait
dec
faddl
and
xchg
outsl
ljmp
ret
gs
cli
xchg
cld
push
psubd
outsb
jb
data16
lods
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
xchg
hlt
rol
xor
mov
add
in
adc
clc
adc
les
std
jne
call
mov
leave
xchg
pop
add
scas
shr
mov
xchg
mov
outsl
popf
int
and
push
inc
iret
pop
loope
xor
jg
push
adc
mov
adc
es
push
dec
push
push
sbb
sti
mov
adc
pop
and
dec
lods
js
cli
mov
cld
aaa
mov
fs
push
sahf
sbbl
cld
cld
leave
ss
mov
jno
test
cwtl
bound
pop
sbb
or
sbb
int
test
mov
xchg
mov
iret
repz
add
or
adc
add
push
movsb
int
scas
inc
cmpl
and
imul
inc
push
shlb
xchg
cld
cmp
ja
xchg
loop
jmp
out
mov
loopne
cmc
aad
data16
mov
fdivr
testb
cmp
fwait
sbb
out
sti
in
scas
mov
in
pop
and
cmc
cli
divl
adc
fst
cld
int3
mov
xchg
dec
sbb
sub
loope
lcall
inc
pushf
es
add
mov
mov
ja
ficomps
cmp
inc
add
or
push
aad
push
rcll
pusha
xorb
pop
pop
sbb
mov
mov
push
rol
push
imul
cmp
add
xchg
rorl
call
aaa
inc
in
pushaw
repz
stos
cmp
jge
ret
and
es
jle
mov
sbb
lcall
xchg
dec
dec
bound
inc
shl
in
push
inc
mov
adc
in
test
mov
dec
cs
test
inc
cmc
stc
sbb
sti
nop
jge
ljmp
xor
imul
icebp
adc
pushf
pop
scas
cmpsl
cmovo
push
push
sub
les
ret
push
inc
jl
ficompl
shll
push
daa
mov
sbb
imul
pop
pushf
pop
dec
sub
imul
movsl
mov
jge
cmc
outsb
lea
mov
iret
pop
jno
adc
jl
mov
sub
xchg
in
mov
bnd
cmpsl
enter
cwtl
push
std
xchg
cwtl
inc
adc
and
jo
in
mov
sub
or
sbb
loop
lret
cmp
cltd
jg
and
xor
jmp
cmp
pusha
sub
in
incl
xor
cmp
ljmp
jge
sub
jbe
mov
sbb
imul
sti
pop
enter
call
push
push
pop
imul
scas
mov
mov
push
adc
pop
push
xor
int3
negl
inc
and
sbb
xor
adc
pop
push
je
push
push
cwtl
and
lahf
test
mov
pop
movsb
jecxz
jl
mov
or
in
stc
inc
fiadds
add
inc
out
dec
and
in
negl
not
dec
arpl
lods
insb
mov
scas
sbb
in
sbb
xchg
jle
inc
movsl
adc
push
jmp
xor
cmp
repnz
xor
add
pushf
sbb
enter
and
and
sbb
sbb
sbb
xchg
sub
out
inc
into
out
pop
or
add
outsb
icebp
daa
pop
sbb
sub
push
sub
push
es
jmp
sbb
imul
mov
loopne
add
aad
test
sub
mov
push
jo
cmpsl
xor
jo
mov
jle
mov
nop
dec
addr16
pushf
sub
and
shlb
push
loop
jnp
push
xchg
cli
dec
mov
push
mov
pop
xchg
rclb
scas
inc
shlb
add
insb
enter
jbe
ficompl
scas
shrl
fwait
mov
ljmp
insl
lods
mov
ljmp
out
rol
cli
adc
xchg
mov
push
fsubrl
push
adc
fdivl
stos
push
mov
push
cmp
jecxz
in
mov
mov
cmp
push
cli
cmp
dec
into
cmp
cmp
mov
adcl
dec
push
packsswb
je
pusha
ret
mov
lds
and
sub
daa
jne
les
lea
push
flds
and
jbe
shrb
lea
jns
loope
icebp
lea
add
aaa
loopne
cmp
add
add
mov
mov
js
xor
pushf
push
sbb
stc
lods
ss
push
enter
sarl
loope
pushf
sbb
gs
test
jb
add
dec
stos
mov
loop
pop
scas
iret
xor
sahf
sbb
cmpsb
push
sbb
pop
inc
fnstsw
dec
sarl
es
enter
xor
dec
ffreep
daa
adcb
add
jae
gs
jno
mov
enter
cmpsw
lds
mov
mov
divb
sbb
js
in
fucomip
mov
pop
shl
jae
lds
dec
outsb
jl
jp
jecxz
sbb
int
sbb
insb
add
cld
mov
ret
or
loopne
icebp
push
fcoms
fwait
sub
pop
inc
int
inc
xor
pop
adc
xchg
pop
rolb
stos
xor
jp
fsubs
jno
push
dec
cs
sbb
cmp
jae
push
cltd
stos
cmp
mov
mov
lret
pop
cmp
pop
dec
xor
xchg
cs
push
or
cmp
cmpsl
jae
repz
enter
mov
rcl
mov
mov
sbb
sti
dec
pop
sbb
and
lea
insl
cmpb
imull
loope
cmp
daa
or
in
sub
flds
jp
in
dec
sub
popf
in
add
sahf
jae
or
xor
inc
mov
call
cmp
inc
mov
mov
adc
std
lds
sbb
stos
aas
sub
dec
lcall
sbb
dec
push
shlb
jmp
sarl
sub
repz
cld
into
jge
push
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
jmp
jecxz
fstl
inc
xor
fiadds
fists
adc
clc
adc
fwait
jmp
cld
dec
enterw
xor
sbb
dec
inc
xor
int3
push
fimuls
in
rol
aas
push
rorl
adc
adc
repnz
dec
in
call
mov
sahf
stos
sarb
inc
lcall
xlat
ret
mov
outsb
orl
or
pushf
mov
gs
push
ret
sub
repz
xor
movsl
ss
dec
ficoml
adc
pop
arpl
push
in
mov
inc
rclb
addb
out
in
cmp
xor
stos
lock
lock
jp
inc
and
shrb
dec
and
inc
notl
adc
dec
dec
inc
lret
jne
adc
jb
daa
or
adc
les
push
jl
out
push
out
sti
loope
cmpsl
dec
xor
ja
add
cmp
sti
das
hlt
or
sbb
sbb
jle
adc
mov
xor
push
fadds
sbb
mov
loopne
xchg
push
or
outsl
ds
adc
mov
in
scas
push
outsb
pop
test
mov
mov
iret
mov
insb
cld
jp
iret
or
pop
into
pop
add
shll
push
dec
inc
xlat
stc
ljmp
mov
inc
mov
jo
addr16
push
push
pop
lret
push
leave
dec
or
popa
bnd
inc
lahf
cmpsb
faddl
inc
inc
out
rolb
loope
sbb
add
roll
iret
shll
adc
sub
mov
adc
sbb
cmpb
mov
push
loop
xchg
fxch
mov
or
xchg
nop
jmp
push
fcoml
push
mov
jns
jge
dec
push
loop
push
xchg
dec
jno
push
dec
inc
jg
inc
std
cltd
sbb
xor
loopne
lods
movsb
test
sbb
mov
jecxz
cs
xchg
mov
les
pop
add
ret
dec
push
pusha
out
gs
inc
cli
sub
add
movb
clc
cmp
adc
dec
cmp
cmp
mov
cmp
ror
xor
arpl
xchg
loope
shlb
xor
pop
add
out
dec
mov
push
hlt
pop
pop
popf
pop
outsl
jne
fcoml
shll
add
mov
push
and
je
pop
in
cltd
jbe
out
pop
push
jmp
adc
xor
mov
push
mov
cli
inc
mov
mov
das
pop
xor
insl
xchg
rcr
jmp
push
outsb
pushaw
cmp
jnp
xlat
out
mov
scas
hlt
cwtl
pop
cmpb
dec
and
mov
ret
xchg
add
mov
push
insl
jns
pop
adc
mov
xorb
fldenv
xor
adc
and
call
xchg
mov
sub
scas
data16
call
fsubs
sbb
mov
lret
push
loope
xchg
dec
sbb
xchg
loop
popa
sarl
xor
sahf
mov
mov
inc
xor
mov
dec
cwtl
add
dec
mov
mov
mov
adc
loop
repz
add
pop
adc
fcompl
out
mov
add
js
sbb
leave
sbb
mov
cmp
push
fstps
or
adc
in
jle
xchg
cmp
inc
push
in
pop
mov
xor
out
dec
bound
insl
movsl
xchg
rcrb
and
fstpt
out
call
lds
inc
je
dec
jle
jnp
pusha
repnz
cs
negl
sbb
jo
mov
mov
jl
mov
jle
ja
outsl
mov
ds
loop
xchg
pop
push
xor
or
mov
rorl
leave
sub
data16
dec
xchg
lods
stc
fcmovnu
cmc
xor
dec
or
cli
inc
pusha
dec
test
mov
sbb
lods
pop
jmp
js
in
sahf
fisubrl
loope
jp
pop
push
out
dec
pop
mov
jecxz
and
push
test
jns
cltd
xchg
xlat
adc
xor
lods
mov
jno
mov
push
sti
loopne
out
push
insl
leave
cs
mov
jo
xchg
dec
cmp
xchg
es
lahf
add
ss
xor
and
gs
inc
into
test
mov
mull
mov
and
mov
jecxz
sub
and
in
mov
pop
enter
outsb
dec
lock
add
punpcklwd
mov
cmp
lahf
ss
fnsave
js
xchg
sarl
dec
push
or
jbe
cli
in
xchg
hlt
and
es
shrl
add
inc
xor
inc
lret
aas
nop
lcall
xlat
or
loope
and
scas
cwtl
ljmp
and
xchg
mov
inc
add
sti
out
xor
clc
cmovae
bound
inc
xor
cli
push
loop
test
mov
incb
clc
and
dec
hlt
or
inc
add
movsl
lcall
imul
mov
inc
or
cmpsb
mov
pop
test
data16
cmp
mov
movsl
mov
pop
std
and
aam
jns
inc
push
and
shll
stos
cmc
jl
or
mov
push
jmp
xchg
mov
movl
mov
insl
pusha
adc
out
into
sub
dec
test
push
movsl
mov
xchg
scas
mov
pushf
xlat
je
add
sbbl
les
mov
mov
adc
orl
test
cmpsb
clc
push
outsb
push
sbb
scas
sar
aas
fwait
aad
mov
loop
jmp
lret
jne
out
mov
or
sti
mov
arpl
pop
jns
je
cmp
loope
aas
mov
repz
xor
xor
sub
push
lcall
orb
fistl
test
jno
xor
js
arpl
sub
fs
pop
fldcw
jae
push
loope
sahf
fcomp
adcl
cmp
arpl
xor
or
into
inc
insl
cmp
lahf
pop
and
mov
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
jmp
pop
mov
push
or
pop
in
fistpll
jecxz
adc
clc
adc
frstor
in
sbb
fbld
mov
xor
cltd
mov
jl
push
clc
test
stos
mov
js
dec
nop
fisttps
pop
xchg
loope
add
dec
in
xor
std
inc
lods
push
cmpsb
mov
shr
push
xchg
cs
repz
rcr
fwait
sub
ret
adc
jns
leave
mov
sbb
aas
mov
pop
mov
pop
jl
cltd
cltd
fsts
out
popa
add
sbb
pop
push
idivl
xor
nop
hlt
dec
testl
inc
jge
pop
pop
fsubrl
mov
push
push
cmp
lcall
js
mov
push
movq
aad
outsb
adc
outsl
lret
idivb
setno
iret
adc
xchg
push
fiadds
or
push
ret
sbb
roll
mov
jns
shl
mov
test
int
rcrl
jecxz
push
mov
or
lahf
mov
sub
std
outsb
jmp
mov
or
out
xlat
test
jo
lods
rclb
out
mov
or
jl
aad
inc
aad
int
add
xchg
out
jp
dec
out
shlb
rclb
mov
or
cmp
cwtl
imul
jp
and
in
outsb
nop
or
lret
lcall
rclb
jmp
mov
adc
pop
cltd
xchg
fisubrl
fstps
push
clc
test
sahf
pusha
dec
mov
push
hlt
fcompl
fdivrl
sbb
lods
int3
jmp
sahf
out
test
cmp
cmp
mov
imul
jne
ljmp
or
ret
aam
out
or
orb
mov
xor
xchg
je
mov
icebp
sbb
add
shlb
mov
push
push
fcoml
mov
xor
xchg
cmc
mov
insl
es
jo
mov
mov
gs
and
jle
rcrb
cmp
clc
pop
xor
xor
add
fstps
push
xchg
fcmove
and
les
mov
pcmpgtd
ss
lods
aad
push
mov
lahf
pop
sub
repnz
push
sub
sub
in
cmpb
add
aas
lcall
cwtl
sub
mov
out
mov
or
andl
pop
test
pop
test
ficompl
fsts
shrb
hlt
jo
mov
outsb
cwtl
jmp
push
sbb
dec
out
fwait
mov
adc
pop
cwtl
scas
adc
mov
mov
aad
fwait
in
mov
jno
test
jg
adc
cmp
cli
data16
xor
xlat
jnp
dec
and
xchg
out
movsl
or
dec
in
icebp
pop
pop
dec
or
mov
or
ss
dec
shrb
out
jns
mov
int3
dec
lret
enter
aam
cmpsb
and
in
insl
aam
inc
mov
in
jae
push
xchg
adc
jb
ret
lret
push
lock
repz
cmp
std
stc
out
push
into
mov
rcrl
jle
movsb
mulb
mov
pop
jno
iret
mov
xor
push
and
and
rolb
out
pop
daa
adc
test
push
pop
add
fiadds
roll
sbb
mov
mov
push
mov
dec
push
loopne
adc
nop
dec
loop
in
jae
inc
push
addr16
push
xor
jne
lret
mov
sarb
xor
imull
mov
jno
idivb
cmpsl
dec
xchg
mov
fisubrl
shlb
fs
add
mov
lods
inc
popa
inc
rcll
aam
sub
outsb
inc
cli
dec
and
cmp
xchg
adc
iret
mov
fsub
cs
loope
inc
cmp
mov
loope
sbb
push
data16
sub
mov
mov
pop
scas
cmp
jmp
mov
pushf
dec
stc
sbb
rcll
out
mov
aaa
mov
pop
push
adc
shll
mov
cli
je
and
pop
orl
jno
hlt
xchg
hlt
mov
cmpsl
out
lcall
dec
int
jo
ss
popaw
or
xor
sbb
jb
imul
fld
fwait
pop
or
or
gs
addr16
mov
mov
or
xor
and
les
push
dec
pop
fdivr
mull
xor
cwtl
push
mov
scas
adcb
cltd
inc
add
cli
or
xchg
pop
cmp
jp
jns
sbb
aam
push
and
and
js
fcoml
or
and
and
test
jp
jge
pop
aam
and
pop
rcrb
or
bound
lods
mov
inc
mov
int3
cmpsb
movsl
loope
mov
sbb
ror
cld
pop
cmp
cmc
xor
pop
and
xchg
ret
aam
jo
xchg
fs
mov
repnz
jle
xchg
jo
or
fldt
in
mov
mov
sub
ret
adc
pop
push
or
test
ja
mov
movsl
push
aam
data16
cwtl
inc
cli
push
jno
je
dec
fldl
pop
lea
lcall
xor
aaa
adc
inc
mov
dec
xor
mov
mov
sbb
sub
xchg
out
jp
in
push
nop
sbb
push
push
nop
mov
inc
cmpsl
sub
inc
iret
mov
mov
dec
adc
mov
imul
xor
push
jnp
mov
lock
adc
fucomip
or
jg
dec
shrb
adc
call
pop
push
jb
jmp
das
pop
push
sti
add
mov
stos
sub
adc
mov
mov
scas
push
adcb
jb
or
push
and
mov
xlat
nop
cmp
mov
or
cmp
enter
dec
dec
sarb
cmpl
add
ljmp
xchg
mov
sub
and
sbb
rcl
xor
inc
andb
enter
popf
nop
mov
enter
ret
int3
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
xor
mov
push
and
mov
das
cmp
adc
clc
adc
aad
inc
add
daa
mov
dec
test
push
pushf
les
into
dec
pop
mov
xchg
push
xchg
inc
sub
jb
bnd
xor
or
xor
testb
icebp
mov
lahf
dec
stos
insb
cmp
dec
fcomps
js
pop
ret
xor
lods
ja
ror
les
rcrl
roll
inc
insb
push
rclb
mov
jnp
or
in
out
loopne
ja
testb
cmp
rorb
inc
dec
mov
fildl
cld
lods
jp
mov
loopne
adc
mov
and
stos
inc
test
xchg
ficoml
int
out
in
outsl
test
jnp
sub
aas
pop
ja
out
or
fisttpll
dec
adc
dec
pop
lods
clc
aad
pop
loop
jne
xchg
and
sbb
testb
mov
ret
out
dec
sbb
mov
pop
in
mov
lret
push
cs
fsubp
lods
xor
add
jl
outsb
cmp
testb
pop
jno
loope
mov
inc
lea
mov
cmp
mov
xchg
mov
std
dec
notl
mov
mov
stos
mov
mov
dec
jne
insl
mov
lahf
lods
push
outsb
into
les
xchg
jmp
into
push
fs
repnz
or
loopne
fadds
mov
sbb
inc
add
jne
push
imul
in
frstor
iret
pop
pusha
inc
mov
cmp
xor
gs
mov
rcrl
cmp
mov
add
pusha
call
push
dec
sub
arpl
xor
xor
pop
inc
cmp
and
insb
cwtl
clc
inc
sahf
jae
dec
jle
out
loope
push
outsl
xchg
outsl
mov
adc
int3
push
ja
mov
ds
sub
notb
dec
out
xchg
das
cs
arpl
imul
insb
mov
and
orl
lock
mov
ja
rcr
aad
mov
int3
loope
mov
and
inc
mulb
mov
sub
cmpsb
mov
xor
mov
fmuls
shlb
iret
rorb
jbe
adc
and
sbb
bound
shrl
icebp
dec
ds
inc
adc
into
and
xor
sub
jne
jl
lahf
push
jg
aam
test
ljmp
das
popf
out
cmovs
popf
push
xchg
sbb
sbbl
sbb
adc
mov
roll
jmp
add
rcrl
add
mov
inc
jb
sub
jbe
aaa
dec
mov
stos
or
scas
jecxz
xchg
mov
xlat
adc
xchg
sbb
inc
rcrl
mov
and
fwait
push
jae
dec
sub
stc
push
inc
mov
jp
cmp
sub
fimuls
dec
and
or
cmp
xchg
incb
aam
add
sub
or
sub
pop
icebp
push
popf
jle
aas
mov
es
pop
cli
cmp
adc
repnz
pusha
test
movsb
daa
cmp
stos
outsb
mov
mov
sarl
loopne
xchg
xchg
aad
addb
dec
push
xchg
fs
mov
popf
pop
into
inc
xlat
and
add
out
jmp
dec
pop
inc
jg
or
push
nop
lods
jp
lret
mov
out
popa
frstor
pusha
pusha
cltd
or
cmpsl
cmp
mov
ret
arpl
push
test
sbbl
xchg
cmc
test
out
jmp
xor
idiv
or
sub
aaa
sarl
notl
aad
mov
fdivrs
dec
push
adc
mov
pop
and
adc
xchg
pusha
in
outsl
in
mov
mov
xor
loop
pop
int3
ret
or
test
add
xorb
and
adc
pop
test
rdmsr
daa
inc
call
mov
sar
mov
xor
xor
dec
mov
and
sub
push
shrl
mov
or
lahf
lock
dec
mov
shll
sbb
or
shl
int
inc
mov
sbb
out
daa
outsb
jmp
mov
fs
push
dec
adc
iret
pusha
jb
ret
jnp
or
mov
or
addl
jecxz
stc
scas
bound
adc
ret
loopne
roll
subb
jp
aad
sub
ret
jp
sub
xchg
jl
mov
dec
cs
sub
jo
pop
mov
mov
por
test
leave
dec
mov
xor
pushf
and
inc
in
jecxz
xor
inc
inc
mov
dec
jmp
clc
ss
push
sub
dec
sub
inc
js
fistps
decb
imul
mov
jnp
and
jecxz
cli
cmp
aaa
push
fxch
add
clc
jecxz
repnz
cmpsb
push
push
xorb
sbb
mov
and
ret
enter
push
testl
jle
xor
fsubp
or
movsb
scas
jle
pop
das
lahf
push
lea
lods
mov
sub
mov
mov
sbb
cmc
push
cmp
lcall
dec
call
pop
sbb
lods
outsl
in
cmp
sbb
sub
push
xchg
dec
int3
aam
into
lahf
pop
addl
sbb
cmp
jmp
test
jp
xor
loop
lcall
mov
push
data16
push
sahf
sbb
push
and
pop
jns
repnz
mov
movsl
dec
outsb
shl
lds
lret
outsb
out
sbb
cmpsl
shrb
and
fisttps
subl
mov
iret
mov
sbbb
shll
mov
xchg
mov
sahf
mov
dec
mov
jg
loope
xchg
mov
or
dec
insl
mov
leave
cltd
repnz
adc
loope
loopne
lret
dec
je
sub
adc
ss
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
jmp
popf
scas
add
mov
aaa
shlb
adc
clc
adc
and
js
ljmp
lods
ret
xchg
adc
in
push
addr16
mov
loop
sub
adc
add
call
mov
add
jecxz
call
and
lock
dec
sbb
mov
mov
adc
cmp
hlt
sahf
leave
lock
jmp
das
jp
out
out
push
xor
pop
loope
lea
sbb
dec
jne
add
mov
push
cmp
je
out
shlb
add
jns
dec
push
and
icebp
das
inc
out
mov
mov
pop
jae
mov
pop
loopne
aam
add
xchg
arpl
inc
icebp
adc
clc
leave
aam
mov
jl
dec
pushf
mov
rol
or
fdiv
insl
and
add
mov
mov
iret
dec
mov
push
mov
jmp
cmp
jno
dec
in
and
inc
cmc
xchg
dec
jno
jmp
add
pushw
sub
inc
jae
cwtl
push
mov
sbb
pop
dec
inc
jo
ljmp
mov
jb
ja
push
sbb
jb
push
cmpsl
and
lcall
mov
ja
sub
dec
sub
stc
stos
imul
data16
jle
jmp
cmp
movl
hlt
test
push
xor
in
sub
fcmovu
test
xlat
stos
les
jbe
dec
mov
loopne
xor
popf
or
push
mov
clc
bound
cld
push
mov
jno
inc
cld
pushf
pusha
sbb
xorb
insb
pop
xchg
cs
mov
sub
loop
adc
ds
mov
nop
jg
push
jbe
negb
inc
push
idiv
cli
pop
xor
repnz
push
and
lock
fmull
rcr
popa
stos
mov
pop
sbb
lcall
mov
pusha
les
dec
pusha
sbb
push
fnsave
imul
jb
int3
mov
lcall
xlat
in
pop
aaa
xor
jne
lcall
scas
push
adc
dec
xor
or
pop
inc
mov
aaa
aaa
mov
jl
xor
jo
imul
nop
je
insb
mov
call
mov
mov
imul
cltd
fwait
sarl
insb
dec
mov
inc
pop
mov
push
sub
lret
mov
insl
add
aas
lea
shrl
sti
icebp
push
in
mov
pop
xor
sub
mov
fsts
adcb
jnp
mov
or
pop
or
cmp
ret
lret
xchg
push
imul
cmp
rorb
pop
in
stc
mov
jno
push
lahf
dec
aas
xchg
push
lea
xchg
cmpl
aad
add
sub
inc
xchg
pushf
and
pop
dec
ret
inc
push
cld
xchg
push
sbb
ss
jle
mov
adc
jmp
in
cmpsb
push
popf
pushf
xor
aaa
lock
mov
xlat
nop
andb
and
mov
leave
aaa
add
ret
cs
cmp
je
call
mov
outsb
inc
fidivrl
push
mov
xchg
cmp
mov
or
std
add
test
inc
and
mov
negb
andl
adc
xor
popa
daa
pop
aad
dec
push
cli
out
jl
in
sahf
add
xchg
cmp
lock
dec
jp
push
inc
int3
pop
fcoms
or
and
fildll
test
repnz
mov
sti
imull
hlt
mov
or
jl
dec
push
push
mov
jp
mov
mov
repz
lahf
shl
stos
pushw
nop
mov
sub
dec
mov
sub
enter
std
test
rcrb
mov
cmp
pop
loope
repnz
addr16
lret
ss
popf
cmp
mov
mov
mov
icebp
loopne
jmp
lcall
test
sbb
loop
lret
imul
shll
jge
das
ja
dec
mov
push
sub
gs
cli
shrl
jno
mov
lock
lds
popf
mov
add
ja
jbe
xor
jno
js
or
push
xchg
xchg
mov
sbb
mov
cwtl
ss
rcl
push
and
sarb
imul
add
cmp
add
or
pop
vmwrite
repz
xchg
mov
int3
sub
lock
in
sub
push
loope
popf
bound
imul
pop
lahf
loop
mov
dec
add
lret
mov
andl
push
mov
call
lods
into
dec
mov
inc
pop
xor
decb
cs
sub
movsb
aad
ljmp
cmp
inc
stos
xchg
out
aas
test
outsl
pop
sahf
xor
push
arpl
push
adc
insl
adc
dec
jae
push
fidivrs
and
xchg
pop
jge
jge
fnstenv
fstl
popf
hlt
and
sbb
push
pop
adc
mov
xchg
dec
ljmp
mov
sub
add
xor
lods
jns
adc
push
adc
fwait
add
dec
loopne
fistl
mov
xchg
clc
inc
mov
lds
loope
jle
and
push
cmp
jmp
cmp
xchg
pop
lea
pop
popa
scas
add
cmc
mov
cmp
hlt
out
and
inc
enter
pushf
wbinvd
movsl
pop
lock
lret
pop
mov
cmpsb
lret
jns
repz
add
out
jg
inc
lods
shll
out
and
lock
jecxz
push
xlat
xchg
std
mov
add
mov
jge
xchg
dec
pop
fs
movsl
idiv
mov
incl
adc
loop
fwait
push
imul
jnp
jb
pusha
inc
rolb
jle
dec
jno
sub
dec
fwait
movl
mov
pop
mov
sbb
jae
jns
subl
fs
mov
mov
cmc
stos
outsl
lock
adc
ds
cmp
jae
sub
xchg
cs
mov
or
out
sub
lret
outsb
pop
dec
mov
adc
xchg
mov
inc
fstl
ret
stc
out
ja
xchg
or
shrd
shr
or
xor
or
jmp
lea
cwtl
sbb
sbb
loopne
out
inc
adc
clc
adc
cmp
prefetch
loop
lods
jecxz
mov
xlat
out
in
and
mov
nopl
je
sbb
out
sbb
mov
push
int
pop
sbb
dec
dec
cmpl
mov
jbe
cli
in
xor
mov
lock
fimuls
dec
fsts
stc
xchg
sarl
push
and
lods
cwtl
in
rol
movsb
push
test
test
mov
test
fsubrs
pop
jp
xor
adc
adc
in
inc
jne
jnp
jmp
push
jno
sub
push
call
mov
mov
into
mov
lcall
subb
push
incl
sub
popa
and
jmp
cmp
scas
sbb
in
insl
push
mov
ss
cs
and
stc
adc
imul
inc
aam
ja
ficompl
stos
clc
add
dec
adc
mov
cld
inc
fildl
insb
pop
fxch
xchg
enter
pop
push
push
int
into
ljmp
jg,pt
rclb
in
orb
out
cmp
aaa
mov
and
loop
push
cmp
jl
cmp
jecxz
cmp
adc
pop
ret
std
pushl
mov
and
push
fcoml
int3
mov
enter
mov
push
daa
jecxz
fwait
ret
sub
dec
push
lds
mov
in
xor
mov
pop
aaa
ljmp
and
popf
sbb
inc
inc
cmpl
xchg
pop
push
adc
popf
xor
popf
fsub
outsl
fbld
ffree
cmpsb
mov
bound
mov
dec
out
inc
jg
pushf
fcmovnb
mov
or
lret
mov
or
adc
mov
jo
adc
shrl
daa
out
xchg
cs
lea
add
leave
xchg
pop
bnd
bound
inc
std
inc
jge
dec
fdivrs
aad
push
mov
sbb
stos
xor
xor
push
adc
push
call
push
push
shlb
adc
mov
mov
xor
scas
inc
mov
stc
test
call
xchg
mov
adc
movsb
cwtl
push
ficoms
adc
xor
mov
js
js
mov
lods
aas
mov
adc
mov
xor
out
pop
xorb
and
pop
mov
jle
push
cmp
mov
pop
nop
dec
sub
dec
adc
mov
cmc
fbstp
data16
outsb
daa
push
jp
xchg
adc
adc
and
dec
mov
filds
and
test
sbb
sub
das
addl
aas
repz
mov
movsb
mov
iret
and
shrd
out
out
mov
cli
xor
inc
xchg
imul
or
pop
push
fucomip
insl
xor
xor
testb
ret
push
or
sub
inc
xchg
pop
or
mov
sbb
pop
xor
hlt
mov
push
mov
xor
and
in
or
xchg
dec
xchg
sub
test
ds
dec
jns
sti
xlat
xor
mov
dec
cli
cld
push
pop
fmull
ds
pop
insl
outsb
pushf
insb
xchg
sahf
icebp
loopne
mov
rclb
mov
repnz
mov
scas
adc
push
mull
loope
xchg
fdiv
xor
pop
xchg
jmp
adc
pushf
loope
das
mov
leave
cltd
adc
or
or
mov
pop
mov
inc
adc
test
mov
mov
mov
mov
add
cmp
xchg
mov
imul
cmp
pop
mov
notl
cwtl
adc
popa
cmp
push
inc
ret
ja,pt
es
and
imul
into
iret
js
adc
cld
mov
cmp
mov
scas
icebp
add
sbb
push
pop
adc
movsl
fimull
mov
adc
jl
loop
dec
add
gs
xchg
mov
jge
cs
mov
addl
fisubl
and
dec
mov
lea
add
mov
lret
sub
jbe
dec
dec
scas
add
or
mov
enter
inc
pushf
fsubl
je
movsb
sub
xor
push
add
sbb
sbb
enter
fisttpl
sbb
xchg
in
mov
popa
pop
inc
dec
test
mov
call
int3
xor
xchg
popf
mov
add
jnp
sub
inc
sbb
insb
mov
rcll
dec
roll
data16
fs
jb
push
insl
sub
push
lds
lds
add
adc
xchg
adc
mov
mov
into
push
xor
jb
mov
push
hlt
mov
mov
test
cmovb
in
xlat
or
mov
lcall
popf
xlat
or
push
or
mov
xchg
push
out
xchg
lcall
jne
int3
jg
mov
cmp
jecxz
mov
cmp
sub
in
mov
stos
fcoms
insl
out
pop
cmp
xlat
les
test
aaa
imul
push
decl
inc
or
ret
sti
shll
and
movsl
arpl
call
xor
jo
dec
int
cmp
cmp
inc
inc
insb
lret
xchg
fwait
sahf
test
addr16
and
jecxz
icebp
jns
stc
fwait
push
add
pop
subl
lods
inc
mov
sub
inc
clc
push
inc
xor
xchg
and
pusha
or
ja
rcrb
lahf
aas
daa
lret
mov
jno
dec
cld
ret
cmp
stos
inc
add
sti
outsb
inc
pushf
popa
pop
stos
xor
mov
xchg
int3
cmp
dec
sub
in
dec
lods
add
leave
and
xor
shll
shll
mov
cmpsl
enter
pop
xchg
jl
cmp
test
cmp
cmpsb
inc
fiadds
push
xor
stos
pop
cmpl
xchg
ds
out
xor
push
push
fstl
scas
xchg
aaa
dec
dec
push
inc
insb
aaa
inc
mov
aam
lret
inc
mov
shrl
mov
mov
mov
mov
xor
shl
xor
jmp
dec
fisubs
dec
dec
push
out
xchg
repz
leave
xchg
mov
adc
clc
adc
sbb
mov
out
adc
cmpsl
loopne
loopne
ds
cld
cmp
es
xchg
ret
cld
in
jno
push
mov
call
repnz
andl
inc
push
fcmovb
jns
mov
push
pop
dec
lahf
ret
loop
mov
jmp
repz
std
enter
lss
cwtl
pop
aas
add
and
pop
mov
inc
lock
flds
inc
sub
dec
hlt
es
xchg
mov
in
sub
fldt
xor
int
stc
test
dec
jno,pt
inc
mov
cmp
mov
ds
mov
dec
adc
pop
or
mov
lock
add
jbe
or
inc
lret
add
jns
cmp
out
iret
mov
jae
cmp
jnp
cld
mov
pop
fdivrp
jb
mov
or
dec
sub
xor
loop
cmpsb
aas
imull
jecxz
push
adc
adc
inc
dec
push
mov
mov
cs
push
lcall
or
insb
xor
ror
push
mov
out
ffree
out
jg
adc
ja
mov
or
push
mov
jmp
imul
xchg
mov
xor
pop
cmp
sbb
gs
cmp
xchg
repnz
mov
inc
sub
and
push
adc
sbb
push
addr16
cmp
clc
or
mov
xchg
ds
pop
jp
fwait
inc
pushf
cwtl
shll
mov
movsb
lret
stc
xchg
push
mov
insb
xchg
orl
or
addl
sbb
push
push
fsubrs
stos
and
cmp
inc
sub
jbe
xor
icebp
in
cmpsl
xchg
sbb
rcll
or
scas
loop
test
lahf
fstpt
out
push
std
ficoml
in
or
xchg
adc
pop
sbb
repnz
hlt
push
adc
mov
aaa
cmp
inc
ljmp
pop
adc
dec
test
lea
scas
gs
lret
repz
popf
jmp
cmp
push
xor
int
enter
or
stos
aas
bound
inc
lea
ljmp
test
jae
je
jo
push
out
mov
mov
xchg
push
lods
iret
dec
ss
lock
xchg
lods
jl
adc
push
push
scas
cmp
push
xor
dec
aas
inc
daa
test
sub
scas
in
xchg
out
inc
cs
pop
push
mov
or
in
in
xchg
test
ficompl
inc
and
jle
lds
sti
pop
pop
insl
test
jmp
pop
stos
adc
xor
fisttpll
add
mov
adc
repz
cwtl
cmp
xor
in
sub
cmpsb
mov
stos
insl
mov
and
jb
jge
dec
cmp
lea
cmp
xor
je
cmpsl
or
add
loopne
inc
into
lods
adc
orb
push
movsl
adc
push
nop
stos
cs
add
mov
cmp
mov
addr16
pop
adc
mov
rcll
jbe
mov
push
adc
leave
adc
repz
sub
les
dec
js
pop
adc
sbb
fucomi
pop
fwait
aas
repz
mov
into
fwait
push
adc
cmpb
je
mov
mov
pop
aas
xchg
aad
fstpl
xchg
nop
sbb
xor
mov
loope
aam
push
out
fwait
xchg
popa
adc
fidivrl
xchg
not
xor
test
out
rolb
pop
xchg
rorl
shl
mov
pop
lret
mov
mov
jae
cltd
mov
add
mov
xor
cmpsl
or
cmc
ss
pop
mov
or
in
xor
cmovne
lea
out
xor
ds
mov
mov
test
aas
push
xlat
mov
jecxz
push
leave
testl
pop
push
xor
adc
mov
inc
xchg
lcall
fsubs
xchg
mov
jmp
jno
or
sbb
lret
mov
lahf
iret
ja
sbb
lret
ret
jl
xor
aaa
lret
out
aad
dec
mov
cmp
cld
in
adc
fwait
int3
jnp
cltd
add
jge
enter
inc
bnd
xchg
sti
sbb
aad
lock
jbe
icebp
fnstsw
stos
jmp
outsb
lcall
pusha
sbb
adc
in
les
xor
rorb
push
jmp
pop
mov
and
and
dec
jb
and
lods
sub
fs
cli
mov
push
xlat
push
and
jl
xchg
ljmp
sub
adc
or
jecxz
mov
fcoml
sub
lea
hlt
mov
push
ret
mov
pushf
dec
jo
adc
scas
hlt
je
aaa
cmp
jnp
push
in
mov
out
loop
push
out
mov
cmp
pusha
push
mov
lcall
mov
imulb
scas
mov
mov
les
adc
std
lock
mov
adc
mov
out
mov
or
mov
sub
xlat
in
inc
push
into
dec
xorl
sbb
pop
int3
cs
and
or
jnp
lahf
or
in
push
sub
dec
hlt
ret
fnstsw
ljmp
ret
pop
pusha
xchg
addr16
cwtl
aad
loop
push
adc
mov
mov
arpl
scas
faddl
repnz
sbb
push
xchg
fcomps
movsb
in
push
imul
and
adc
cmpsl
or
fdivrs
into
push
push
jns
lock
inc
jmp
and
scas
push
pop
mov
sbb
jo
adc
mov
cltd
xor
movsb
in
push
in
or
mov
xchg
test
add
pop
cwtl
lods
push
into
cmp
mov
and
adc
jmp
xor
xchg
and
lods
and
and
addr16
js
jns
out
sbb
insb
ficoml
push
mov
push
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
jmp
cmp
sub
jae
mov
adc
clc
adc
push
and
or
fs
jo
sub
sub
data16
inc
pop
rcrl
mov
sbb
adc
pop
jne
and
sub
stc
mov
scas
dec
clc
add
in
jl
xor
pusha
test
dec
rcrl
mov
popf
push
dec
add
or
pusha
push
mov
adc
daa
mov
add
xor
sarl
test
push
xor
pop
jne
push
ret
sub
jg
cmp
push
stc
adc
mov
cld
mov
stos
mov
xchg
aad
ja
hlt
mov
mov
push
mov
mov
or
mov
xchg
and
mov
pop
imul
push
arpl
pop
das
jo
mov
pop
ja
ret
stos
jl
inc
pop
xchg
pushf
shrl
mov
jo
gs
jp
and
dec
xor
fisttps
cmp
daa
test
scas
push
sbb
dec
enter
shlb
add
lds
icebp
pop
cli
xor
and
outsl
fsts
aaa
pop
push
stos
fmul
mov
imul
adc
addl
add
cmp
insl
push
pop
lds
ss
int3
lods
fs
rcrl
mov
je
cwtl
push
xchg
shrl
push
dec
adc
call
xlat
inc
cmc
ret
mov
xchg
pop
dec
cmp
fdivs
sbb
mov
sbb
loop
gs
inc
mov
xor
fidivrs
test
mov
repz
mov
cmc
pop
cmp
jmp
leave
stos
mov
sub
insl
test
or
xor
fwait
cs
and
or
fsubp
add
jns
repnz
cmpsl
adc
jge
insl
dec
cltd
adc
loopne
movsl
aaa
jne
insb
pusha
jo
imul
xor
stos
mov
fsts
push
mov
jo
ja
mov
lea
xchg
push
xor
mov
pop
jle
and
jae
inc
int
inc
and
lahf
test
sub
pop
sub
xlat
sbb
gs
clc
stc
mov
adc
adcb
insl
xor
pop
xchg
cld
ret
jae
xor
lahf
dec
push
xchg
and
loope
gs
outsb
mov
mov
xor
test
mov
cwtl
jl
and
lcall
imul
and
xchg
adc
aad
fisubrs
pop
add
sub
es
gs
mov
negl
mov
add
inc
add
movl
sub
jno
jl
sbb
in
mov
movsb
mov
pop
xor
pushf
push
rcll
or
pop
sbb
sbb
stos
xor
imul
in
je
lods
daa
ret
jno
arpl
inc
sbb
cmp
cltd
sbb
in
ret
icebp
fimull
pushf
jecxz
fwait
push
xor
sub
clc
cmp
enter
outsb
lods
outsl
cmp
add
mov
lcall
jno
pushf
aam
push
pusha
xchg
xor
ss
dec
and
mov
dec
sub
add
mov
icebp
or
or
mov
movb
hlt
cmp
xchg
aas
xor
jns
adc
popa
inc
push
add
out
adc
sbb
push
lock
cmpsl
and
and
adc
mov
loope
push
push
inc
sar
repnz
add
adc
push
mov
loope
dec
es
add
jae
cli
ret
das
clc
mov
cmp
push
xchg
jnp
ljmp
loope
out
iret
gs
aaa
lock
xchg
insl
jg
xor
mov
or
test
xchg
out
push
mov
pop
lcall
xchg
xchg
popf
sub
mov
shrb
aaa
jge
shl
sub
in
xchg
mov
jl
inc
mov
orb
leave
add
sbb
pop
out
xorb
into
addb
lock
daa
adc
and
mov
ret
mov
lock
xor
jg
add
dec
pop
lret
stos
xor
test
push
lds
dec
dec
movsb
pop
mov
adc
sub
fwait
out
popf
lods
pushw
imul
sub
orb
sub
mov
rolb
shlb
push
sub
sbb
hlt
dec
sbb
mov
jae
cmp
loop
addr16
mov
jo
pushf
adc
xchg
and
lods
cmp
inc
mov
or
sub
push
int
mov
and
cmpsb
lret
aam
xchg
imul
add
jmp
xor
mov
inc
loope
out
pop
adc
or
mov
jo
cmpb
cld
add
push
or
mov
mov
add
mov
mov
cld
arpl
loop
xor
shll
ljmp
mov
pop
add
pushl
out
xor
pop
scas
pop
sbb
mov
xchg
pop
xchg
imul
dec
jbe
xor
mov
rorb
pop
shll
imulb
rcrb
xchg
leave
or
pop
das
cmp
push
sbb
shll
and
test
cmp
shl
into
loope,pn
adc
arpl
nop
and
mov
push
repz
jae
lea
pop
sahf
add
arpl
cwtl
push
jb
lock
push
fsubrl
inc
fbld
inc
aad
mov
xchg
sub
pop
les
lret
js
add
cmpsb
jns
xchg
dec
mov
sub
add
push
sbb
jp
and
dec
sbb
inc
mov
push
scas
repz
gs
loop
loope
and
mov
shrb
jmp
mov
ds
cmp
js
in
cld
scas
divb
cmpsb
imul
sbb
push
movsl
jl
cltd
inc
dec
pop
mov
mov
xchg
mov
loope
sbb
shll
loopne
test
cmc
daa
or
xor
mov
pop
arpl
adcb
jne
sahf
jg
std
push
dec
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
jmp
jmp
or
aam
mov
inc
aad
adc
clc
adc
repnz
xor
and
repz
xor
stos
sbb
mov
insb
sub
push
cmc
push
decl
mov
push
stc
in
mov
mov
add
inc
in
pop
mov
dec
cltd
jle
pop
sbb
arpl
pop
mov
mov
loop
lea
bound
push
mov
ljmp
jp
dec
jnp
adcb
push
push
dec
lret
rorl
add
push
filds
pushf
test
mov
lahf
and
jle
out
loop
aaa
les
stc
jg
in
sub
dec
pop
test
pop
js
aam
xchg
or
jbe
addl
arpl
rclb
or
push
inc
mov
cld
jge
dec
mov
mov
or
sbb
scas
daa
je
lods
int3
outsl
xchg
daa
cmp
imul
dec
ds
dec
sub
nop
das
jmp
dec
test
push
fsubrl
push
negb
mov
mov
in
push
ja
xor
adc
sub
pop
mov
or
mov
out
scas
rcll
loope
mov
jo
lsl
fsubr
stos
loope
lds
inc
sub
andb
repz
sbb
or
cmc
xchg
jle
mov
aaa
mov
iret
sbb
push
inc
fisubrl
push
cltd
in
repnz
outsl
enter
mov
and
push
andb
dec
data16
xchg
lock
push
roll
out
dec
pop
shlb
cld
mov
call
pop
sub
mov
lcall
inc
mov
in
sub
dec
jno
inc
fstps
shr
aad
or
lods
dec
mov
mov
lret
js
pusha
les
pop
xor
or
jmp
xchg
push
xchg
imul
jl
jbe
mov
into
xchg
mov
xor
fs
insb
in
mov
mov
cmpsl
aam
mov
cltd
mov
les
daa
in
push
push
fdivrl
fs
mov
rsm
jmp
in
mov
loop
in
mov
popa
dec
xchg
ficompl
sti
jnp
xchg
mov
xchg
cs
or
pop
mov
orl
sti
xlat
push
cmp
fsubrs
fwait
sub
lahf
sbb
andl
and
jae
or
lret
pop
call
adc
cld
adc
test
fdivr
inc
xchg
push
xchg
xor
lods
adc
xchg
jno
iret
out
mov
fsubr
lcall
out
jns,pn
enter
aam
adc
or
cld
fsubrs
hlt
xchg
xor
shll
popa
mov
push
adc
divl
outsl
repnz
addr16
cmpsb
insb
push
jae
cltd
push
sub
or
data16
addr16
in
push
push
jne
and
xor
lods
xchg
int3
icebp
adc
push
push
and
enter
fimull
or
mov
outsl
mov
ljmp
mov
les
lock
xlat
cmp
inc
jle
xchg
xchg
sbb
xor
mov
fsubrs
shrb
pop
in
xor
aad
pop
sbbl
mov
loope
test
and
rorl
dec
cmp
add
call
adc
sti
or
xor
inc
dec
xchg
out
dec
out
je
stos
test
ficoml
push
lret
je
stos
ljmp
in
enter
inc
movsl
xor
call
mov
mov
lahf
inc
sbb
jmp
xor
mov
inc
imul
ret
out
imulb
outsb
dec
sahf
cs
in
sub
xor
sub
movb
push
sbb
mov
cmp
xchg
fidivl
addl
inc
sub
sbb
jns
dec
jb
mov
pop
dec
jg
xor
bound
aaa
and
imul
xor
fildl
or
xchg
sub
add
jb
mov
shll
cltd
sbb
inc
aam
xor
dec
scas
mov
lock
mov
jo
mov
cmp
mov
fs
repnz
icebp
pop
jle
scas
lea
pop
stos
push
sub
mov
loopne
and
in
decb
ds
cwtl
cmp
mulb
aaa
push
shr
pop
dec
int
pop
adc
adc
pop
in
es
mov
dec
mov
outsl
mov
mov
and
mov
mov
mov
jmp
lods
bound
aam
mov
sbb
pop
lahf
in
add
mov
sub
movsb
or
add
sbb
pop
pop
jnp
sbb
sbb
xchg
hlt
sbb
cmpsl
incl
iret
mov
lret
cwtl
aas
out
dec
pop
ja
les
out
dec
and
shr
aaa
shlb
cmp
inc
mov
outsl
mov
scas
mov
stos
mov
pop
cs
cmp
out
pushf
jg
xor
loop
movsl
jecxz
aam
fists
cmp
mov
nop
nop
sub
xor
sbb
mov
jo
aam
and
adc
lret
popa
fcom
sub
xchg
into
test
rclb
subb
sub
pop
mov
cltd
mov
mov
fs
fnsave
sti
aaa
xchg
mov
add
jo
or
sbb
and
outsb
xchg
aaa
inc
and
adc
in
imul
fiaddl
push
sbb
dec
movsb
paddq
sub
xchg
sub
out
mov
popf
int3
cmp
inc
pop
or
jno
inc
fmull
mov
mov
mov
iret
mov
jecxz
test
ss
std
dec
push
sub
out
mov
leave
sbbl
shr
xor
cli
mov
dec
sub
and
adc
push
out
pop
imul
jno,pt
cmpsl
lea
dec
lcall
add
in
enter
imul
inc
adc
adc
clc
adc
and
add
jmp
adc
shl
push
imul
out
leave
sti
pop
push
xchg
sbb
pop
imul
push
adc
roll
out
das
call
dec
mov
out
dec
lcall
mov
xor
sti
mov
pop
xchg
jg
inc
inc
rcl
xorl
dec
push
shrd
subl
dec
mov
daa
jb
lret
sahf
xchg
cli
lea
fwait
out
dec
or
fcompl
mov
imul
or
repz
jmp
pop
or
sahf
nop
jmp
fcomps
shll
sub
iret
clc
test
mov
mov
pop
cmpsb
in
jno
enter
adc
js
pop
cli
dec
mov
mov
sbb
inc
push
push
mov
jb
loop
cld
mov
inc
lahf
pusha
adc
jbe
clc
scas
aaa
mov
dec
bound
xor
and
hlt
mov
jnp
ljmp
scas
fbstp
jno
mov
add
repnz
jae
or
repz
cmpsb
pushf
enter
fmul
fs
addr16
dec
fs
adc
push
xorl
testb
pop
sbb
xor
inc
aam
in
into
cltd
inc
dec
xorl
mov
adc
movsl
pushl
sub
cmp
fcompl
rcr
mov
mov
les
in
in
or
mov
or
cmpsb
lret
pop
push
mov
ds
inc
add
sbb
daa
popa
dec
sti
cmp
jne
xlat
dec
mov
jae
scas
push
cld
ficoml
xor
add
std
mov
jp
lahf
out
lahf
dec
jne
push
add
mov
xchg
adc
adc
push
ret
fstpl
jo
es
push
mov
inc
das
outsl
sti
push
dec
popa
cmp
push
mov
inc
sub
mov
adc
pop
mov
mov
mov
add
inc
cmp
xchg
adc
add
inc
xchg
mov
and
mov
mov
les
jecxz
movsb
dec
nop
lea
xor
pop
ds
adc
lahf
push
jge
stos
dec
mov
push
cmp
or
xchg
cmp
cwtl
push
push
lcall
adc
sbb
das
enter
fsubrl
insl
jnp
ja
outsl
iret
mov
pop
cmp
xchg
enter
and
or
inc
jg
mov
mov
mov
das
outsb
lea
in
xor
push
jg
jle
les
int
shll
jmp
add
pop
and
cli
xchg
je
pop
ret
loopne
addl
mov
jbe
shlb
push
repz
dec
out
fxch
outsb
jnp
inc
mov
xchg
cs
es
jo
and
push
icebp
mov
xor
sbb
xchg
mov
xchg
std
aad
into
mov
pop
pop
test
sub
pop
daa
stc
imul
inc
lret
ds
mov
mov
in
push
xchg
sahf
aad
ljmp
jp
xchg
cmpsl
es
fcmove
mov
dec
and
test
testl
jmp
mov
cmc
ret
mov
andb
mov
leave
mov
push
jb
inc
addb
add
mov
pop
gs
xchg
in
or
jb
inc
idivb
mov
loop
incl
insl
les
fldl2t
inc
into
push
pushf
xchg
xor
imul
mov
and
sub
roll
cmpsb
cmpsb
out
adc
mov
sbb
mov
fcomip
jns
loopne
push
push
cmpsb
lea
mov
sub
xor
sub
stc
fucomi
add
test
hlt
push
push
xchg
adc
out
or
add
out
loope
or
lret
ret
add
xchg
pop
out
mov
shr
fmul
test
jle
mov
pusha
out
pusha
jmp
pop
pop
mov
ja
int3
sbb
sbb
cmp
jg
outsb
stc
in
inc
into
xor
out
int3
xchg
aaa
push
adc
sahf
xor
js
pop
addps
int
inc
je
pop
push
loopne
pop
mov
jge
aaa
push
ljmp
into
mov
pusha
cli
rorb
inc
int
ss
pushf
sub
cmpsl
push
pop
imul
mov
and
push
test
mov
scas
out
fcomp
sbb
dec
popa
xlat
pop
sbb
pop
stc
fcmovnb
cmp
cmp
mov
push
jae
adc
xchg
repnz
das
mov
fisubrs
in
outsb
clc
cmc
push
loopne
fwait
xor
adc
or
jecxz
shlb
jne
les
inc
enter
fucomi
add
fistpl
pop
add
jne
mov
cmp
adc
ret
loopne
in
add
mov
push
popf
jle
mov
lods
mov
or
jge
sti
outsb
sub
jbe
fcomps
movsl
and
mov
push
adc
stos
imul
or
dec
insb
xor
cmc
add
pop
call
mov
lea
sbb
pop
je
mov
movsl
jae
mov
jb
data16
mov
add
dec
xor
scas
cmc
push
mov
mov
sub
cmp
lock
lcall
insl
in
scas
add
add
xor
popf
ljmp
fsubrl
stos
jnp
fsts
add
inc
mov
jp
mov
inc
jecxz
icebp
jbe
mov
loopne
mov
add
call
mov
fcomps
inc
sti
jnp
push
inc
inc
xlat
lcall
mov
adcb
pusha
mul
enter
loop
popa
xor
add
je
inc
cmp
push
jg
adc
dec
xor
push
mov
pop
lahf
mov
sbb
outsl
mov
ret
cmp
sahf
and
cld
xor
inc
adc
out
add
inc
imul
lcall
dec
push
cmpsl
in
inc
pop
and
add
enter
mov
enter
mov
fstps
repz
push
loope
push
fst
call
jmp
in
cmc
dec
stos
dec
sub
add
mov
adc
clc
adc
int3
sahf
arpl
and
mov
dec
out
lods
out
jnp
dec
xchg
pusha
sbb
psubw
test
lods
arpl
mov
xchg
xor
xchg
in
popa
mov
sbbl
inc
in
cwtl
rcr
nop
push
test
jge
popf
jle
cs
pop
sub
aam
jmp
push
ret
or
or
xor
inc
std
mov
xchg
xor
inc
test
and
arpl
mov
jo
inc
adcb
ror
xor
push
das
push
ret
mov
fsubrs
shlb
mov
cmp
sub
test
pop
lods
inc
das
icebp
shll
add
dec
xchg
jmp
push
cmp
dec
dec
shrd
imul
insl
stos
add
and
in
dec
test
shll
rorw
lahf
pusha
jns
stos
push
repz
ds
repnz
int3
dec
inc
testb
or
repz
push
mov
daa
xorb
fadd
shlb
xchg
cmp
xor
ret
rorb
lcall
out
mov
fldl
xchg
adc
sbb
pop
or
loopne
daa
push
and
sbbl
pop
insb
jae
daa
or
add
rcl
adc
xchg
out
out
lods
dec
aad
jo
or
mov
adc
pop
and
js
sti
sub
rol
pop
sbbl
movsl
stos
ja
push
add
cs
lcall
fidivl
add
daa
dec
push
ret
add
ljmp
dec
sub
jne
outsb
sub
test
fcoms
test
test
xorb
jnp
mov
out
fxam
mov
cmp
and
test
mov
test
or
les
or
popa
add
mov
add
lea
and
enter
addr16
xchg
test
push
or
push
jp
pop
mov
arpl
dec
je
cs
mov
pop
mov
pop
push
and
mov
mov
sti
push
jg
mov
push
popa
notb
aas
adc
pop
dec
cs
rorb
adc
cwtl
xor
jecxz
mov
mov
gs
xor
popa
pop
dec
imul
sbb
and
icebp
and
pop
sub
lret
insb
loop
jle
pop
cld
dec
icebp
ror
mov
ret
repnz
cmp
add
dec
cs
sti
jp
fistpll
adc
clc
and
test
and
popa
add
pusha
or
out
sub
sbb
mov
popf
or
cmp
lret
pop
mov
insb
mov
cmpsb
dec
mov
sbbl
add
mov
andl
cmc
inc
fisttpl
lods
js
pusha
lds
adc
add
daa
and
shrb
loopne
xchg
xchg
cmp
in
xchg
test
and
inc
test
and
test
add
out
pop
mov
pushf
lret
divb
shr
dec
negl
mov
jbe
cs
sbb
pop
rolb
das
xchg
push
pusha
out
enter
jle
cmp
popa
dec
jp
xchg
jmp
jo
sbb
xchg
std
jle
cmp
pop
xchg
push
test
xchg
sbb
inc
cmpsb
ljmp
sarb
lea
add
cmp
and
movsl
pop
push
daa
js
imul
bound
loope
dec
push
in
jne
xchg
pop
pop
mov
mov
cmp
aad
shlb
sbb
mov
sub
cmp
push
cmp
pop
loopne
les
pop
jo
or
or
mov
lret
sbb
insl
inc
scas
shrb
pop
mov
fnstsw
jmp
and
jbe
mov
rorl
inc
mov
add
gs
gs
sti
jbe
rorb
jge
cmp
aam
loope
imul
add
ffreep
lods
loopne
into
out
mov
bound
mov
mov
loopne
stos
xorl
and
push
sub
mov
in
sahf
in
mov
mov
ja
clc
ljmp
test
pop
adc
pop
mov
mov
or
cs
out
ljmp
push
notb
sub
lret
xchg
jo
mov
dec
call
push
inc
push
rolb
shrb
inc
shl
xor
jno
aaa
call
xchg
and
mov
sbb
das
test
dec
das
gs
inc
or
jae
imul
adc
or
add
lret
loopne
dec
sub
movsb
enter
lcall
rcrl
adc
xor
xchg
xor
and
adc
frstor
lea
mov
xlat
ja
push
mov
ljmp
lea
clts
mov
mov
jl
push
push
cmpsb
push
mov
mov
shl
outsl
out
cmpsl
fadds
out
cwtl
inc
push
xchg
or
dec
cmp
cmp
stos
or
inc
insb
push
ficompl
clc
push
in
scas
sub
push
into
es
add
mov
sti
ret
jbe
lahf
cmc
mov
push
stos
mov
sbbb
bswap
fidivl
imul
or
xor
adc
lods
mov
leave
xor
cmp
xchg
in
xchg
outsb
jo
mov
stos
push
int
or
std
rcll
sub
cltd
xor
or
cli
scas
fbld
dec
fstpl
adc
imul
or
adc
fs
pop
mov
jecxz
bound
lods
cmc
cmp
inc
cmp
sbb
mov
adc
mov
out
fldt
cld
cmp
iret
sub
dec
out
lret
sbb
and
fs
sub
imul
ds
mov
cltd
cltd
int
push
out
pop
inc
mov
sbb
adc
mov
mov
shrd
jmp
sbbb
pop
mov
pusha
push
push
out
cmp
arpl
shl
xchg
adc
push
clc
adc
inc
outsl
push
push
lahf
fcmovnu
rcll
add
imul
clc
sub
imul
lahf
lock
test
dec
shrb
mov
pop
or
sbb
cmpsb
pop
cmpsb
pusha
push
mov
in
test
add
jge
adc
das
outsl
jno
lock
or
xchg
fsubp
inc
scas
sub
or
sub
cs
or
mov
or
xchg
stos
aam
push
fidivs
jl
ror
ja
test
pop
leave
xchg
mov
and
add
jmp
sub
sahf
add
push
ret
enter
icebp
lock
dec
in
in
fstpl
dec
sbb
jno
gs
clc
icebp
movsb
add
cmc
pop
xchg
into
jge
add
cmpb
jno
in
enter
dec
add
sub
in
arpl
lcall
jae
rcrb
fidivs
mov
divb
lahf
pop
lods
cli
push
lods
aad
adc
enter
mov
mov
rorl
sub
cmp
pop
lock
ss
clc
jo
sbb
stc
add
out
lods
pop
push
mov
cmp
pop
aad
rcrl
push
cmp
cmp
ffree
or
xor
aaa
cmc
xor
xchg
mov
xchg
push
fwait
sub
stos
in
or
lret
inc
xchg
aaa
sub
jl
into
stos
mov
and
xchg
xchg
mov
sbb
mov
icebp
rolb
mov
jmp
pop
sub
lret
mov
jge
js
xchg
xchg
and
xor
gs
out
icebp
and
sarb
rcrl
shl
xor
push
mov
or
xchg
cli
mov
pop
inc
xor
hlt
popf
fildll
out
mov
sbb
dec
adc
mov
cmp
sti
clc
sbb
mov
pop
mov
add
dec
imul
adc
pop
sub
lret
cmp
stos
xor
pop
xchg
lods
sbb
xor
test
mov
jae
pop
out
push
pop
dec
adc
rcrl
pop
cmp
xchg
jne
push
adcl
or
fisubs
movsl
cltd
aad
sub
jns
andb
stos
push
icebp
adc
cmp
std
clc
jg
jae
lahf
sbb
mov
sbb
cld
addr16
ds
movsl
xor
or
loop
dec
pop
mov
xchg
movsl
gs
add
ljmp
pop
xchg
repnz
mov
add
clc
out
call
push
ja
gs
aas
push
mov
ja
loop
sbb
jge
in
in
outsl
dec
mov
nop
add
gs
rcr
icebp
cmp
test
ss
lcall
into
stos
outsl
mov
xor
xchg
das
and
das
imul
dec
mov
les
fwait
mov
mov
mov
cmpsl
popf
or
out
fs
inc
into
fstps
hlt
adc
mov
push
jnp
jb
xor
pop
or
jo
push
pop
adc
lret
fstps
int
ficompl
movsb
mov
inc
xchg
gs
and
shlb
jecxz
jmp
shrl
pop
mov
push
cmp
and
call
bound
mov
out
lods
push
fmuls
icebp
and
cmc
ja
fcmovb
jne
add
iret
mov
fmuls
test
xchg
test
negb
andl
scas
xchg
rclb
aad
clc
adc
movl
pop
adc
inc
adc
xchg
pop
or
sbb
insb
xor
ljmp
mov
inc
imul
mov
mulb
aad
and
sbb
addr16
xchg
fldcw
mov
fistpll
sub
push
ds
mov
adc
cmp
ss
vmread
repz
pop
lods
xor
xchg
testb
mov
mov
push
mov
repnz
adcb
scas
or
dec
inc
lea
out
inc
mov
mov
mov
inc
mov
sbb
outsl
int
gs
add
popf
xchg
inc
xor
bound
mov
or
pop
mov
fwait
push
and
fildll
mov
add
jae
dec
inc
mov
repnz
fisttpl
adcb
clc
and
repnz
out
and
pop
pop
mov
sub
into
sub
imul
jmp
push
or
lods
xchg
adc
mov
aas
dec
xchg
xchg
int3
mov
dec
mov
sub
std
les
test
testb
jge
js
inc
int3
data16
and
lods
inc
out
out
stos
sub
mov
jge
dec
inc
inc
xchg
and
mov
push
arpl
popf
cmp
imul
ja
shrb
jge
jmp
push
jp
lods
push
lret
inc
add
xchg
bound
push
mov
popf
out
push
and
xchg
pop
xor
inc
out
mov
dec
ljmp
push
mov
pop
in
mov
push
adc
scas
cmp
ret
lret
lret
or
loope
pop
add
subb
subb
imul
push
bound
add
mov
sti
loop
mov
xor
pop
mov
cmp
arpl
fidivrl
int3
hlt
insl
cmc
and
stos
push
arpl
xor
lret
add
icebp
shlb
mov
adc
sbb
jmp
ljmp
pop
sub
lret
les
lcall
and
daa
mov
loop
mov
mov
jo
pop
mov
arpl
iret
je
jle
pop
cmpsl
call
cmp
cld
sub
sbb
cwtl
mov
cmp
jl
movsb
mov
or
push
ds
pop
loop
popf
xlat
scas
lcall
ja
mov
bound
ja
or
ljmp
out
xor
jmp
mov
push
push
push
mov
repnz
hlt
aam
adc
clc
adc
in
mov
xchg
test
inc
out
push
dec
mov
je
ljmp
sub
jmp
les
xchg
insl
gs
imul
xor
add
mov
cli
or
pop
xor
les
inc
data16
out
imul
adc
push
xor
mov
and
movsl
imul
ret
pop
push
loope
add
movb
cwtl
mov
rcl
mov
jb
pushf
repz
cmpsb
pop
cmpsb
loopne
sub
jbe
sti
jp
mov
rcl
pop
outsl
iret
inc
sbb
push
and
cmp
xor
or
mov
clc
jmp
add
fisubrs
xchg
jmp
pop
jmp
add
push
iret
mov
push
sbb
push
in
imul
pop
push
lret
cmpsl
dec
ret
xchg
dec
mov
test
lds
fwait
lahf
enter
icebp
in
add
daa
fcompl
cmp
and
push
cwtl
or
xchg
pop
icebp
push
cmp
inc
or
mov
out
bound
push
ja
insl
mov
lret
repz
jmp
xchg
aad
inc
call
xor
cmpb
popf
jmp
and
and
mov
fsubr
shl
notb
cmp
mov
pushf
or
std
mov
lock
ljmp
xchg
pop
mov
cld
push
fcomi
ljmp
out
xor
pop
mov
popf
lret
inc
mov
pop
cmp
or
jecxz
xor
mov
adc
movsb
push
negb
rcl
sarl
push
or
jecxz
and
pusha
shlb
pop
fsubrl
ljmp
mov
sar
push
pop
test
nop
fisubl
xchg
cmp
int3
and
outsl
jb
mov
jl
xchg
inc
sbb
fists
aad
dec
ds
xor
push
jbe
and
and
push
cmp
fucom
inc
and
adc
pop
mov
jg
mov
inc
dec
push
mov
das
push
pop
mov
movsb
jecxz
xchg
mov
xor
inc
adc
shl
push
addb
xchg
xor
cmpl
lock
adc
adc
pop
pop
bound
mov
ljmp
dec
mov
ret
jb
xor
push
out
lea
xchg
scas
hlt
jnp
in
sub
or
xor
pop
imul
ficomps
cmp
nopl
xor
addr16
adc
test
inc
lahf
rol
leave
mov
jb
mov
sub
mov
sbb
push
xor
loop
xor
vmwrite
movsb
leave
inc
in
das
movsb
xor
cli
stos
mov
test
adc
mov
movsb
mov
cwtl
lcall
lods
push
lods
hlt
adc
out
mov
mov
jbe
mov
and
sub
mov
dec
cs
out
scas
test
dec
inc
cmp
test
xchg
xor
or
gs
call
mov
test
cwtl
ja
sbb
pop
les
cmp
mov
add
mov
inc
shlb
rol
ret
jo
insl
push
lret
mov
pop
sbbl
cmp
xor
out
addr16
cmp
loopne
inc
adc
hlt
dec
pop
jge
ds
sub
adc
jb
enter
mov
popf
movsl
test
in
jne
call
push
pop
icebp
cs
pop
push
and
jmp
sti
xor
push
xor
xchg
mov
push
sub
xchg
stos
dec
call
jb
imul
fdivrl
mov
push
dec
ret
pop
push
repz
sub
je
enter
jge
xchg
mov
int
ljmp
scas
out
clc
mov
or
gs
sub
ret
les
repnz
std
lcall
repz
mov
push
dec
lods
decb
lret
es
clc
jne
sbb
lods
mov
inc
lret
adc
inc
loope
scas
pop
xorb
daa
cmpsb
mov
out
call
mull
dec
daa
out
xor
lcall
test
fwait
push
daa
inc
cmpb
fstps
mov
outsb
out
inc
jb
pop
push
rol
dec
sti
xchg
inc
ret
sub
stos
xor
mov
inc
mov
ret
add
popf
arpl
jmp
mov
dec
pop
popa
fidivs
hlt
clc
pop
fmulp
push
fstl
add
loope
mov
pop
lret
inc
outsl
push
xor
dec
loopne
jl
mov
fdivrl
dec
mov
rcll
mov
mov
dec
mov
mov
insl
adcb
lret
add
mov
xchg
aad
or
daa
xlat
xor
pop
imul
mov
or
lcall
adc
adc
cmc
jl
ss
sbb
mov
jno
or
loope
jmp
in
pusha
in
sahf
pop
push
int3
mov
les
inc
imul
jg
fwait
gs
xchg
ds
outsl
std
test
sbb
test
sub
insl
cwtl
jmp
sbb
jg
fwait
lock
sub
jnp
add
rol
push
and
stos
sbb
shlb
mov
inc
mov
add
stos
repnz
fstp
xchg
sbb
jb
push
sub
adc
je
stos
mov
ret
ret
add
sub
ds
inc
mov
inc
aas
adc
test
insb
push
push
inc
adc
mov
pop
sbb
push
stos
negl
adc
cmc
sbb
mov
add
and
ret
cbtw
ds
add
inc
pusha
les
test
cmp
pop
push
neg
popa
jecxz
xchg
arpl
fildll
mov
dec
dec
ds
xlat
sbb
push
jae
rol
aaa
cmpb
ja
stos
shl
insl
mov
stc
sub
dec
push
sbb
mov
rorb
adc
push
call
shld
shl
mov
jmp
push
hlt
jmp
push
or
movb
hlt
xchg
outsb
xor
push
clc
adc
repz
push
push
gs
pop
lods
popa
fisubrs
xchg
inc
call
pop
test
orl
mov
jp
andl
add
nop
cwtl
jno
adc
ret
popf
ljmp
stos
bound
outsl
inc
adc
mov
push
leave
or
scas
scas
js
mov
and
popa
mov
inc
popf
in
mov
push
and
push
outsb
xchg
mov
mov
fisttps
adc
sbb
arpl
insb
sub
push
xchg
cmp
sub
iret
mov
lahf
lods
cmc
cwtl
ja
mov
and
xor
dec
mov
nop
and
xchg
mov
sub
outsb
fchs
leave
sbb
cmp
or
mov
addr16
mov
pop
push
cmpsl
push
mov
or
push
jecxz
nop
ret
dec
mov
cltd
jmp
cs
push
lock
test
ds
jb
dec
iret
add
das
out
js
rolb
jns
repnz
jmp
jle
bound
mov
icebp
pusha
mov
popf
pop
popf
jmp
leave
outsl
adc
and
in
sbbl
int3
lret
xchg
or
cmc
in
mov
mov
or
sub
and
mov
cld
adc
in
xchg
aam
inc
ja
repnz
xchg
cmpsb
inc
mov
arpl
jo
sbb
mov
enter
aas
jp
sbbl
or
cmc
in
hlt
subl
je
mov
shll
movsb
xor
sub
pop
ss
cmpsl
sub
xchg
dec
les
mov
dec
loopne
stc
pminsw
pusha
push
ja
jnp
xchg
mov
and
aam
std
adc
loope
movsl
cmpsl
imulb
popf
adcb
push
mov
int
adc
mov
fidivs
inc
ret
enter
or
xchg
cmp
out
lret
rep
mov
mov
inc
pop
push
repnz
in
cmc
fsubr
sbb
cwtl
jb
jo
push
imul
jno
push
dec
mov
imul
arpl
test
pop
and
push
or
inc
pop
pop
mov
sbb
cmp
sbb
jp
lahf
cmp
xor
fwait
sub
out
push
cmpsb
imul
or
and
or
or
inc
push
push
inc
fadd
dec
aaa
adc
jg
ss
jne
push
xor
mov
or
lcall
insb
cmpxchg
fwait
mov
jge
icebp
cmp
sahf
jg
push
inc
dec
inc
nop
dec
in
pusha
or
cmpsb
scas
stos
aas
lahf
pushf
arpl
and
stos
sub
hlt
jecxz
daa
jnp
ret
lds
daa
sarl
pop
xchg
push
mov
cmpl
and
mov
nop
nop
cmp
xor
add
test
jmp
or
sarb
sub
icebp
shrb
movsb
es
pop
pop
and
and
ret
push
out
mov
loopne
leave
and
ficoml
or
cmp
mov
in
xchg
icebp
adcl
mov
xor
lock
movsl
nop
dec
fistpl
xor
cli
jl
adc
hlt
repnz
cmp
cmp
sub
add
adc
leave
push
outsb
dec
mov
jecxz
pop
std
bound
dec
cmpsl
test
or
in
into
imul
xchg
add
outsb
lret
insl
imul
dec
divb
aad
push
in
push
dec
rorb
das
or
insl
inc
mov
and
cld
test
cs
scas
ja
decb
enter
dec
les
jns
addr16
pop
xchg
mov
insb
pop
test
and
xchg
call
lcall
lret
mov
mov
testl
or
cmp
pop
or
aaa
ja
pop
ja
mov
sbb
add
mov
cltd
or
inc
sti
out
les
fiadds
xor
mov
int3
call
stos
xor
mov
fstl
push
lea
cmpsl
adc
mov
and
sbbb
fsubrl
add
cld
popa
data16
cs
push
or
push
stc
pop
push
push
pop
jp
push
jne
inc
adc
xor
adc
adc
pop
lret
xchg
sub
in
nop
sub
leave
sub
mov
ret
inc
and
push
inc
aam
scas
test
mov
pop
mov
lahf
mov
pop
repz
dec
addl
popa
outsb
mov
hlt
sbb
cs
mov
orl
jle
push
loop
xor
jo
mov
push
add
jge
shll
sti
andb
cmp
lret
bound
jbe
mov
clc
insb
push
in
xor
dec
xchg
into
fidivrl
add
pushf
aad
bound
jecxz
cmpsb
sub
xchg
inc
nop
add
cmp
out
rcrl
mov
inc
dec
inc
mov
xor
push
test
inc
jmp
xor
pop
mov
xor
push
ret
or
std
mov
push
iret
inc
jmp
push
and
and
inc
cmpsl
inc
xor
xchg
pushf
mov
sub
mov
or
fcmovbe
and
or
imul
lods
popf
nop
mov
mov
or
xchg
adc
push
adc
push
roll
popf
push
paddd
scas
lahf
mulb
xchg
inc
or
mov
jbe
mov
cwtl
inc
xor
xor
lods
mov
sub
jp
xchg
test
add
or
push
xchg
push
inc
jge
push
out
push
in
add
popf
mov
fwait
inc
cmp
adc
lcall
inc
cmp
es
cmpsl
inc
leave
rorb
push
cmp
push
shlb
adc
cmc
sahf
cld
mov
popf
jae
jns
clc
push
out
fnsave
loop
nop
scas
jae
mov
jbe
scas
pop
push
cwtl
ss
lods
bound
into
loop
enter
or
pop
shl
notl
testb
stc
mov
mov
ret
pushf
sahf
andb
jle
xchg
cmp
add
adc
rorb
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
jmp
inc
mov
cs
jmp
daa
mov
adc
clc
adc
in
dec
push
out
or
and
and
enter
iret
mov
adc
dec
aaa
and
imul
cltd
scas
ja
repz
out
pop
sub
mov
sub
loope
xchg
int
cmp
pop
cmc
push
mov
aam
unpckhps
xchg
xchg
mul
mov
icebp
int
xlat
sbb
mov
inc
adcl
push
sahf
jbe
xor
addl
cmp
sub
inc
scas
jecxz
lret
insb
rol
mov
rclb
inc
xchg
out
sub
insb
std
push
leave
push
je
mov
loop
jnp
hlt
bound
sbb
ljmp
mov
mov
push
add
jg
mov
jecxz
cltd
out
mov
scas
cmp
inc
or
jmp
mov
in
sahf
cmp
mov
xor
bnd
out
mov
nop
jg
lcall
inc
jno
les
cmc
lret
adc
inc
sarb
mov
rclb
clc
or
mov
push
xor
outsb
test
jge
sub
add
fs
sbb
ljmp
mov
adc
jno
sbb
xor
data16
jae
lcall
lods
push
mov
sahf
test
pop
mov
out
or
dec
cs
fadds
icebp
jg
decb
mov
leave
mov
pop
jns
in
inc
repnz
sbb
pop
adc
out
mov
ljmp
ss
xchg
aas
mov
and
cwtl
mov
mov
xchg
dec
xor
lods
stc
sbb
lods
cs
cmc
add
mov
cmpsl
scas
out
adc
cmpsl
lea
jmp
pusha
sbb
cmpsl
cmpb
cmp
pusha
mov
call
dec
bound
and
lods
shrl
pop
ds
pop
cmc
mov
pop
outsl
cmp
out
dec
inc
test
pop
cmp
pop
inc
mov
jp
fs
xchg
lods
jb
xchg
imul
sub
and
mov
xchg
outsl
hlt
sbb
jns
leave
push
sbb
or
pusha
jecxz
je
push
movsb
adcb
aad
mov
decb
test
or
sbb
mov
push
fiaddl
das
push
adcl
fisttps
test
mov
iret
xor
loopne
jae
dec
push
and
fidivs
jg
es
push
loop
sbbb
dec
mov
jl
sti
pop
sub
or
mov
fwait
jge
mov
cmp
ds
sub
xor
scas
fscale
pop
add
daa
dec
je
lds
stc
pop
out
sub
ficomps
mov
adc
pop
bnd
add
loopne
xchg
test
inc
js
aam
daa
insl
int
call
push
mov
loop
sbb
xchg
sub
pop
pushf
jo
mov
mov
xchg
jno
adc
mov
mov
ja
popa
mov
dec
jno,pt
popa
and
movsl
pop
cmp
ret
cmp
lods
mov
jae
xor
gs
sub
jo
stos
xor
mov
inc
push
std
pop
xor
mov
xor
jg
out
inc
shrb
mov
shlb
pushf
bound
jb
sub
les
and
inc
fnstsw
test
inc
rclb
inc
sub
add
shll
lret
jmp
repnz
in
sarl
cwtl
cmp
xchg
ror
aam
add
jmp
leave
int
push
fimull
pop
pusha
xchg
aam
sub
jo
sbb
sbb
lahf
dec
sbb
mov
cmp
push
mov
shlb
fsubrp
add
icebp
sub
mov
or
add
or
testb
fdivl
bound
adcl
mov
pop
add
xchg
or
jmp
cmp
arpl
inc
jno
push
sub
mov
movsl
xor
jo
xchg
or
and
cli
add
add
or
sub
pop
fadds
push
ljmp
dec
mov
jmp
xor
fidivrl
mov
adc
add
shrl
mov
xor
mov
cmc
or
imul
cmp
sbb
cmp
xchg
or
hlt
test
mov
sub
pop
cmpsl
sub
ljmp
arpl
enter
inc
ja
loopne
inc
fmull
xchg
fwait
dec
adc
lods
push
ja
add
push
sarl
call
or
fcos
dec
push
aas
test
or
das
and
xchg
mov
mov
add
les
xor
add
scas
fidivs
push
adc
fildll
sub
mov
sbbb
jle
adc
push
or
es
lods
loopne
or
dec
push
inc
insb
push
add
insb
xor
idiv
pop
sbb
push
mov
clc
aad
push
es
push
sbb
mov
cmpsb
out
pop
and
cli
dec
or
movsb
xchg
std
xchg
push
push
scas
das
icebp
jo
xchg
lret
punpckhwd
xchg
cs
push
int
cwtl
gs
cmc
repnz
ss
fwait
jmp
inc
inc
out
jbe
andb
rcll
add
shrb
loope
mov
stos
or
cwtl
ret
pop
mov
in
sbb
shlb
lods
and
inc
adc
push
inc
jns
rorb
sbb
mov
mov
xchg
mov
cltd
and
sbb
pop
lods
out
push
push
inc
inc
movb
adc
sub
sub
jg
mov
inc
cld
mov
sbb
insb
cltd
mov
inc
shrb
cmp
fdivrl
fcomps
sub
jb
xchg
or
mov
sbb
out
push
cmp
jb
bound
or
or
mov
jp
leave
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
jmp
jmp
dec
int
xchg
jle
or
fists
clc
adc
adc
outsb
data16
sahf
add
fstps
lret
js
pop
mov
inc
and
ret
loop
mov
mov
mov
int3
inc
mov
adc
sub
mov
fsubr
addb
fsts
jmp
jne
inc
mov
xor
inc
jmp
andb
adc
ja
loope
sbbl
mov
xchg
mov
adc
mov
ret
push
mov
or
inc
inc
mov
ret
adc
mov
mov
lods
loope
mov
xchg
sub
mov
sub
adc
out
sub
xor
push
shlb
jle
or
stos
sub
imull
cld
out
push
test
lcall
mov
out
test
lret
pop
mov
fstpt
ret
add
lcall
inc
je,pn
pushf
cli
fwait
cmp
mov
pop
stos
mov
mov
lar
dec
mov
jbe
insb
cmp
testl
sbb
lea
xchg
mov
inc
mov
mov
cmc
xor
cltd
push
mov
dec
loopne
mov
cmp
push
lods
jo
and
scas
xchg
mov
mov
adc
jecxz
decb
lcall
and
cmp
jg
jnp
dec
mov
lahf
mov
gs
sub
jo
dec
xchg
dec
cmp
xchg
pop
je
cmp
mov
into
clc
rol
cs
sub
stc
out
pop
dec
mov
adc
out
out
jns
fs
int3
cmp
xchg
or
sub
mov
insl
mov
jl
ss
sahf
ljmp
repnz
jp
pusha
aaa
int3
dec
mov
sbb
popf
jmp
cmp
les
out
fdivrl
mov
jecxz
mov
movsb
push
lock
mov
mov
lret
ss
add
imulb
call
cmpsl
pusha
mov
or
inc
nop
test
lret
lods
loop
inc
flds
cmp
insb
ffree
push
cmpsb
jg
add
jecxz
jl
xor
ss
enter
stos
cmpsl
imul
pop
lret
add
jne
aaa
and
fimull
loope
push
mov
add
xor
in
push
push
daa
xor
loopne
scas
pop
mov
lea
movsl
in
std
jmp
nop
stos
jae
jge
jle
push
insb
aad
cmpsl
cmp
push
dec
cmp
mov
and
popa
lret
stos
inc
stos
sbb
cmp
mov
pop
in
xchg
and
loop
xchg
clc
jne
cmp
addr16
adc
jp
addr16
addb
ja
cltd
fwait
mov
shr
ror
dec
xchg
idivl
mov
xchg
jl
xlat
fcomi
mov
idivb
bound
stos
outsb
lret
bound
mov
fsubr
hlt
xchg
add
adc
outsb
mov
int
cmp
decl
hlt
pop
and
dec
mov
fsubs
add
push
ja
movb
push
js
jmp
dec
xor
popl
jmp
enter
jmp
xchg
jo
fstpt
lods
xchg
stos
xor
andl
push
aas
movsb
leave
adc
or
lods
inc
repnz
fidivl
lret
loop
xchg
movsb
xchg
xchg
fisttpll
test
dec
sub
sbb
cmpsb
lahf
and
js
sub
std
outsl
ss
cltd
add
lret
stos
mov
clc
fistpl
imul
fs
pop
mov
xor
dec
xchg
sub
cs
jmp
xchg
fldcw
filds
add
orl
add
clc
cmp
test
cmpsl
call
push
pop
shrb
repz
aam
mov
lcall
inc
mov
dec
cmp
mov
fsubs
push
cmpsl
push
sub
sbb
push
in
xchg
gs
call
adc
or
call
imul
inc
xchg
mov
rorl
jnp
test
enter
das
outsl
test
pop
push
scas
dec
clc
stc
cmp
lcall
sbb
outsb
inc
cmc
out
and
adc
loopne
je,pt
rol
xchg
or
add
mov
cwtl
into
addb
lahf
sbb
push
mov
dec
xchg
sub
lods
ficoml
pushf
jne
adc
les
subb
adc
jp
cmpsl
ljmp
sbb
repnz
or
popl
test
sub
mov
movsb
push
cld
add
push
xchg
mov
lods
inc
jmp
sbb
cmp
add
sub
push
and
and
data16
add
mov
inc
mov
add
hlt
das
incb
or
movsb
xchg
cmp
sbb
jmp
xchg
dec
aaa
popf
lret
les
xor
sbb
decl
dec
cmp
pushf
xchg
insl
add
repnz
test
aad
insl
sbb
icebp
mov
roll
outsb
roll
scas
sbb
cmp
push
int3
xchg
add
fwait
addr16
repz
or
pop
sbb
mov
pop
pushf
sbb
pop
mov
lods
std
pop
adc
sub
jno
mov
in
nop
fistpl
xchg
stos
mov
pop
mov
xchg
mov
inc
add
pop
sub
repnz
or
jg
cs
ja
popf
lcall
xor
cld
mov
xor
or
stc
cmc
out
sub
mov
mov
jb
xchg
xchg
xchg
mov
test
add
and
pop
shrl
or
push
sub
test
pop
cld
push
mov
test
mov
sbb
lds
xchg
add
mov
ds
fnstcw
and
jns
pop
test
jnp
pusha
test
ds
loop
push
mov
inc
lahf
cmp
int
inc
pop
les
inc
pop
mov
mov
mov
std
aas
mov
push
call
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
jmp
ret
icebp
imul
scas
sbb
pushf
pop
pop
aad
adc
push
test
dec
push
int
lods
jae
filds
ret
popf
push
inc
sub
fildl
dec
sbb
and
jnp
pop
jg
xchg
push
cwtl
pop
push
cmp
mov
dec
lock
pop
xor
lcall
std
xorb
jmp
cmp
rep
scas
fwait
push
mov
iret
stos
lahf
loopne
ret
aad
mov
fstpl
aad
or
sti
and
sub
ljmp
xbegin
test
out
daa
nop
pop
bound
and
mov
gs
ds
mov
cmc
loopne
ret
jbe
ror
mov
daa
xor
out
or
je
ret
xchg
jp
add
inc
add
cmp
das
dec
add
add
cmc
xchg
mov
fdivl
xor
loop
test
stos
xchg
and
test
mov
sub
push
mov
ret
movsl
adc
sbb
add
shufps
rcrl
push
mov
insl
push
ds
out
int
or
push
adc
iret
test
push
xchg
fcmovne
test
or
nop
mov
lcall
mov
xor
pop
jns
dec
gs
bnd
mov
adc
scas
jne
mov
arpl
out
clc
out
add
inc
clc
sub
es
mov
xlat
icebp
shll
int3
nop
cltd
sbb
insb
and
sub
ds
in
adc
sub
mov
inc
fisubl
or
sbb
cmp
inc
push
push
xchg
jmp
sbb
pop
add
lret
mov
dec
push
lret
int3
dec
and
fldt
ud2
cld
ret
dec
dec
in
cmpsl
jb
hlt
dec
jp
adc
mov
lret
in
cld
das
lea
movsl
stc
cmp
divb
cli
cmp
or
stos
sbb
jae
jno
adc
cmc
arpl
lret
pop
pop
or
insl
add
lret
push
fst
jnp
or
or
nop
test
adc
jecxz
cmc
shr
push
mov
push
les
xor
ja
inc
mov
fsubs
mov
fnsave
add
sub
adc
inc
clc
fistpl
cmp
cmpb
rcrb
and
add
ljmp
mov
cmc
stc
cmpsl
rclb
jo
cmp
pop
nop
or
sub
scas
xchg
outsb
mov
mov
or
sti
sub
pop
sbb
mov
out
mov
addb
fld
shrl
xchg
in
push
pop
push
mov
movsl
or
cwtl
inc
cmp
data16
xor
dec
insl
lods
das
adc
xlat
test
ljmp
or
push
add
inc
mull
inc
scas
add
fisubs
mov
add
or
jecxz
lret
add
inc
std
pop
dec
jmp
inc
inc
outsl
sub
aaa
sbb
fcomps
and
push
xorb
dec
sbb
mov
push
in
ljmp
leave
push
repz
iret
and
dec
cmp
mov
cmpsb
mov
lret
decb
push
inc
std
cs
ja
mov
jmp
je
fisubl
xor
mov
aad
xor
jae
fwait
sub
mov
pop
insl
sbb
push
aas
rcr
pop
or
pop
int
mov
lock
pop
movsb
les
arpl
jnp
pop
mov
lret
pop
in
nop
mov
pop
lock
jmp
cmp
in
inc
lods
in
pop
rolb
rcll
insl
pop
out
adc
cmp
and
push
and
pop
sahf
adc
cld
mov
sub
andl
int
cmp
dec
mov
mov
das
add
sahf
sbb
aad
adc
mov
cmp
mov
cs
movl
pop
jne
push
ficoms
leave
jno
bound
imul
sub
jnp
sbb
jo
adc
aaa
addl
fldl
pop
cmc
sbb
lock
jle
adc
inc
or
out
out
pop
cs
jbe
movsl
sbb
inc
inc
out
out
cmpsl
shl
mov
mov
sbb
ret
shrb
adc
pop
pop
pop
adcl
pop
in
insb
xor
ja
cwtl
add
fdivl
add
push
rorb
sbbl
dec
jge
jae
sub
jae
add
jge
stos
pop
aaa
loopne
lods
in
and
es
test
add
add
adc
fisttpl
mov
cltd
jp
in
xorl
adc
push
call
icebp
mov
mov
pop
dec
sbb
or
cmp
or
push
jo
xchg
and
inc
cwtl
dec
mov
pop
pop
insl
and
push
fwait
push
pop
out
xchg
push
call
adc
xor
test
xor
push
sub
rcr
or
pusha
xchg
lock
lea
cmpsb
les
add
sub
scas
sub
inc
mov
pop
fisubl
rcrb
ljmp
sub
xor
push
and
imul
dec
and
fs
mov
int
clc
out
adc
push
xchg
and
jae
out
xchg
into
pop
data16
xorb
loop
test
dec
mov
mov
popf
push
repz
xchg
xchg
xchg
add
stos
xchg
lret
test
xor
push
xor
jp
fcmovne
stos
out
aam
in
and
fs
ss
sub
or
insl
pop
sbb
scas
push
pop
loop
cmpsl
movsl
push
fcoml
lods
sbbl
pusha
adc
xor
dec
push
jae
jbe
jmp
test
dec
movsl
push
addr16
inc
ror
pop
cmp
mov
xor
out
icebp
pop
pop
xor
adc
mov
pop
push
cmpsb
cmp
mov
paddw
fisttpll
outsl
jb
mov
shrl
sbbl
push
fmuls
or
or
pop
and
test
pop
adc
pop
push
and
sub
inc
dec
loopne
sub
jb
jp
mov
sbb
sub
mov
test
xor
xchg
stos
xchg
insl
mov
mov
and
int
and
cmp
sahf
popa
xchg
mov
and
dec
jo
cli
subl
mov
push
mov
adc
cld
push
cmc
adc
sbb
cmp
pushf
jae
sbbl
shrd
movl
shr
ret
mov
xor
orl
and
jmp
add
ss
ss
cs
mov
cmc
inc
jl
js
or
clc
adc
lret
add
je
mov
leave
mov
cltd
aam
movsb
aaa
sub
jp
cmpsl
divb
nop
mov
add
rcrl
pop
cmp
call
mov
mov
and
loope
add
fadds
cwtl
lods
loop
das
xlat
repnz
or
dec
xchg
icebp
test
mov
pusha
fs
sub
rclb
sub
or
add
xchg
aas
je
adc
jp
out
mov
sarb
push
dec
mov
push
bound
sub
sub
in
mov
lods
cmp
mov
inc
or
xor
cmpsb
dec
cmp
mov
pushf
jge
pop
mov
aaa
out
inc
test
xchg
shlb
jecxz
push
mov
shr
xor
mov
subb
dec
stc
sti
inc
rorb
mov
sbb
and
xchg
aaa
stos
aas
out
call
mov
sahf
push
std
sub
push
sub
aam
int3
cmc
pop
xchg
movsl
inc
jne
repnz
push
insb
js
or
aad
adc
mov
xorl
push
into
and
shr
dec
aam
mov
xchg
mov
inc
sbb
jns
addr16
push
push
jae
loope
shll
sub
pop
pushf
nop
scas
dec
ljmp
push
add
pop
inc
jg
xlat
enter
iret
fidivrl
dec
sarl
popf
push
push
repnz
push
and
scas
mov
mov
push
cmp
dec
dec
and
push
repnz
jb
iret
test
inc
push
or
inc
pop
in
sahf
fwait
pop
xchg
stos
and
test
nop
imul
inc
cmpsl
mov
inc
sbb
jae
adcb
arpl
addl
push
and
lret
cmp
out
dec
leave
pushf
outsb
push
push
sbb
push
das
mov
mov
sbb
mov
dec
mov
or
ret
test
mov
clc
imul
push
jns
push
dec
daa
jne
shr
sbb
popf
loop
push
mov
push
bound
stos
ret
cmp
inc
aad
cmpb
js
push
mov
inc
les
inc
jne
popf
test
xor
jne
mov
in
andl
mov
fabs
adc
add
jg
das
pop
movsl
out
sub
mov
ljmp
negl
xchg
push
or
pop
cmp
jbe
sub
loopne
mov
test
mov
sub
shll
xchg
dec
repnz
add
sbb
rol
add
cwtl
xor
ljmp
repz
stc
mov
sbb
mov
sbb
ja
add
jo
xchg
addr16
sbb
clc
icebp
cltd
xchg
sub
mov
movsb
arpl
lcall
paddw
out
and
stos
inc
mov
je
movsl
cmp
cmp
jae
inc
outsl
dec
fwait
js
mov
stc
or
add
jge
sti
sbb
mov
inc
mov
push
adc
sbb
pop
int3
jecxz
popf
and
sub
insl
cs
test
or
ret
fsubrs
sub
push
out
xlat
ret
test
adc
outsl
lods
test
outsb
inc
xor
shlb
add
xlat
inc
dec
push
outsb
cmp
inc
mov
lahf
std
jno
mov
lods
jge
xchg
pop
and
divb
push
lods
pusha
mov
or
test
je
incb
pushf
push
nop
sarb
jae
clc
movsl
clc
pop
jmp
xchg
push
movswl
inc
dec
cs
icebp
mov
fistpl
sub
sbb
inc
or
push
gs
cwtl
jb
in
or
mov
call
lods
pop
mov
imul
jnp
mov
xlat
mov
int
push
dec
stos
push
cmp
aad
mov
ret
xorb
sub
jg
mov
xchg
pop
inc
cmpsl
iret
jmp
jge
in
adc
sahf
out
gs
repnz
test
arpl
jo
ficompl
je
enter
lods
rol
adc
rcrl
shrl
push
cmpsl
xchg
mov
and
push
movsl
in
mov
ds
adc
std
aas
push
add
into
bound
cld
xor
lcall
js
lahf
fcoms
lock
xlat
lret
mov
imul
gs
dec
xchg
lods
ja
mov
fwait
mov
jg
pop
dec
push
mov
xchg
cli
dec
subl
outsl
push
jle
es
lods
sar
inc
xor
mov
imul
mov
aad
mov
repz
test
repnz
pushf
sbb
lcall
sub
push
dec
dec
mov
xchg
mov
sub
and
xor
ret
push
push
jge
jl
dec
test
jnp
xor
cmp
fdivs
outsb
ficoml
push
dec
xlat
or
jbe
loopne
xchg
cmpsb
push
test
xlat
adc
or
dec
xor
shll
xchg
mov
shrb
xchg
out
inc
adc
jp
adc
and
xchg
nop
sbb
jle
lods
inc
adcb
sub
pop
pop
data16
loop
icebp
and
push
cmp
int3
data16
inc
push
dec
mov
int
mov
mov
jecxz
jle
rcrl
adc
out
xchg
push
pusha
icebp
inc
jno
pushf
dec
movb
jbe
fstl
mov
les
shlb
ret
push
mov
sub
cmpl
movl
movl
jmp
movl
jbe
pushl
pushl
call
adcl
subl
sbbl
add
xorl
incl
movl
xor
xor
add
mov
mov
movl
andl
mov
movb
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
pushl
push
call
incl
subl
xor
xorl
orl
orl
or
orl
or
movb
subl
movb
movzbl
mov
addl
sub
addl
imul
cmpl
mov
mov
jmp
mov
jne
pushl
pushl
push
pushl
pushl
pushl
call
movzbl
xor
sbb
orl
andl
subl
orl
movzbl
subl
push
adcl
and
mov
movb
orl
movb
andl
movb
sbbl
movb
andl
mov
mov
add
adcl
imul
mov
or
mov
subl
and
mov
movl
cmp
movl
ja
mov
and
mov
sub
mov
cmpl
not
mov
jmp
mov
ja
push
push
push
pushl
pushl
push
pushl
pushl
push
push
push
pushl
push
call
movzbl
and
sbb
xor
xor
or
adc
mov
sub
mov
not
mov
mov
movzwl
movl
movzwl
shr
andl
or
xorl
sub
andl
mov
movb
xorl
movb
mov
mov
xor
add
movzbl
cltd
push
pop
idiv
mov
movb
movb
mov
mov
add
movzbl
movzbl
cltd
idiv
mov
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
mov
push
push
push
call
mov
mov
mov
or
mov
mov
shl
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
orl
push
add
push
xorl
mov
dec
mov
shrd
cmpl
mov
movl
jmp
movl
jg
push
push
pushl
pushl
call
or
xor
or
mov
sub
xor
adc
sub
xor
xor
adcl
neg
shr
xor
mov
not
mov
cmpl
mov
mov
mov
mov
jmp
mov
mov
ja
push
push
push
pushl
push
call
addl
movzbl
sbb
sub
xor
xor
mov
xor
or
mov
notl
mov
shl
subl
mov
xorl
shrd
add
xor
movl
shr
adc
mov
mov
xor
mov
sbb
or
mov
or
mov
sbb
mov
mov
mov
mov
add
mov
cmpl
movzwl
movl
jmp
mov
notl
jae
call
adc
sub
and
xor
sub
adc
movl
mov
mov
add
mov
addl
mov
cmpl
movl
mov
movl
jmp
movl
jne
push
call
neg
xorl
or
xor
xor
or
or
add
incl
inc
mov
add
shl
xor
shld
movzwl
or
mov
shl
mov
xor
xor
movl
movl
movl
movl
cmp
jne
cmp
movl
je
mov
and
mov
mov
cmpl
mov
mov
not
jmp
movl
je
pushl
call
adc
or
incl
subl
sub
mov
movl
xor
shld
orl
shl
sbbl
xor
decl
xor
movl
cmp
jne
cmp
movl
je
mov
mov
sub
and
mov
mov
add
mov
addl
shl
mov
addl
xor
andl
shr
addl
or
mov
cmpl
mov
movl
movl
jmp
not
jl
push
pushl
call
add
and
or
adc
and
adc
adc
sub
mov
orl
mov
adc
mov
xor
add
mov
add
mov
sub
mov
orl
push
adc
pop
orl
sub
mov
add
notl
mov
cmpl
mov
mov
movl
movl
jmp
movl
jb
push
push
push
pushl
pushl
call
orl
or
mov
adc
dec
sub
sbbl
lea
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
pushl
pushl
pushl
call
movzwl
and
xor
adc
neg
subl
xor
mov
movzwl
add
mov
mov
orl
xor
adcl
shr
addl
shl
or
mov
adc
movl
cmpl
mov
movl
not
mov
jmp
not
movzbl
je
push
call
sbb
xor
or
add
and
mov
mov
movl
xor
shr
addl
shl
andl
or
push
lea
push
lea
xorl
push
adcl
call
cmpl
movl
mov
mov
jmp
mov
movl
jge
pushl
push
push
push
pushl
push
call
sub
adcl
movzwl
adc
or
movzbl
sub
mov
mov
xor
or
sub
and
mov
add
mov
xor
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
call
adc
mov
mov
or
adc
and
adc
orl
notl
shr
cmpl
mov
movl
movl
jmp
movl
movl
je
pushl
pushl
pushl
call
subl
or
sub
neg
notl
adc
shl
cmpl
movl
movl
mov
jmp
notl
mov
ja
push
pushl
pushl
call
movzwl
sbb
xor
and
sub
sbbl
adc
or
push
lea
adcl
push
or
mov
mov
or
shrd
xorl
shr
sbb
mov
mov
adcl
xor
adcl
xor
xorl
or
subl
lea
adcl
push
shl
orl
call
dec
mov
and
mov
xorl
xor
mov
sbb
mov
shl
shr
movzwl
sbb
or
or
push
lea
xor
xor
sub
push
add
mov
neg
mov
and
shrd
cmpl
movl
not
mov
jmp
movl
movzbl
jge
push
push
pushl
push
pushl
pushl
call
mov
mov
or
sub
movl
movzbl
sbb
mov
or
mov
xorl
xor
xor
sbb
shr
mov
or
mov
xor
andl
shl
sbbl
xor
addl
or
xorl
lea
push
call
inc
mov
adc
mov
movzwl
or
xor
xor
shl
shr
cmpl
movl
movl
jmp
mov
mov
jg
pushl
pushl
push
pushl
pushl
pushl
call
movzwl
xor
inc
or
inc
mov
xor
add
sub
or
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
shl
or
mov
xor
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
shl
or
mov
xor
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
andl
or
mov
movl
jne
cmpl
movl
movl
jmp
movl
not
jl
pushl
call
and
adcl
subl
andl
movl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
push
call
pushl
call
test
jg
movl
movl
movl
mov
adc
mov
sbbl
imul
orl
or
and
mov
xor
mov
movl
movl
mov
or
mov
subl
mov
push
subl
add
movl
push
movl
adc
orl
push
push
andl
call
add
mov
adc
mov
movl
or
movl
cmpl
mov
mov
jmp
mov
movl
jle
push
call
adc
movzwl
sub
adc
subl
adc
mov
mov
sub
mov
and
and
movl
xor
movl
cmpl
notl
movl
movl
jmp
movl
jae
pushl
pushl
push
push
call
movzwl
adc
mov
sub
andl
xor
xor
and
cmpl
mov
movl
jmp
mov
mov
jbe
push
pushl
call
addl
xorl
adc
sbb
add
add
movl
movl
and
mov
cmpl
mov
mov
movzwl
jmp
mov
mov
jne
pushl
push
call
sub
mov
adc
mov
adc
xor
add
xor
mov
xor
mov
mov
mov
movl
and
cmpl
movl
mov
movl
movl
jmp
movl
movl
ja
push
call
subl
sub
andl
adc
sub
xor
or
sbb
cmpl
movl
movl
movl
jmp
movl
jne
pushl
push
call
mov
add
neg
sbbl
or
subl
sbb
cmpl
mov
mov
mov
jmp
movl
je
pushl
call
adc
add
inc
or
and
add
mov
and
mov
movl
or
andl
or
add
adc
and
and
subl
xor
mov
orl
xor
movl
cmp
movl
ja
movl
jb
cmp
ja
cmpl
mov
mov
jmp
movl
ja
push
push
call
xor
sub
subl
xor
or
sub
add
movl
or
movl
movl
add
movl
cmpl
movl
mov
mov
jmp
notl
movl
jg
pushl
push
push
call
not
sbb
or
or
xorl
add
movzwl
sbb
mov
xor
or
mov
sub
or
movl
cmpl
movl
mov
jmp
mov
movl
jne
push
push
pushl
push
push
call
xor
movzbl
or
xorl
mov
add
or
and
adc
movl
movl
sbb
mov
mov
subl
sub
incl
and
and
or
mov
sub
adc
pushl
cmpl
movl
mov
movl
jmp
movl
not
jl
pushl
push
call
sbb
xor
sbb
or
adc
mov
and
mov
cmpl
mov
not
movzbl
jmp
movl
jae
pushl
call
xor
sbbl
mov
mov
sbb
or
mov
xorl
lea
sub
push
pop
subl
xor
div
add
mov
sub
xor
pushl
mov
movzwl
or
pushl
cmpl
mov
mov
movzbl
jmp
movl
mov
je
pushl
pushl
push
call
xor
or
add
xor
adcl
xor
or
addl
adcl
mov
sbbl
pushl
and
or
pushl
mov
addl
pushl
addl
xor
xor
pushl
adc
mov
sub
pushl
orl
call
movl
add
movl
mov
or
movl
xor
movl
mov
mov
or
mov
mov
subl
sub
xor
mov
and
mov
orl
xor
shr
imul
pushl
call
xorl
dec
cmp
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
call
movzwl
sbb
movl
xor
xor
and
xor
add
add
xor
adc
neg
movl
cmpl
movzwl
movl
jmp
movl
movl
jbe
call
negl
xor
add
xor
neg
xor
adcl
cmpl
mov
mov
mov
jmp
movl
movl
jae
push
call
xorl
xor
adc
add
and
movl
adc
or
mov
movl
mov
andl
movl
mov
sbbl
call
cmpl
movl
not
movl
jmp
not
not
ja
pushl
push
push
push
call
mov
mov
sub
and
neg
adc
sub
or
add
sbb
lea
cmpl
not
mov
jmp
mov
jae
push
pushl
call
adc
mov
mov
sbb
andl
adc
adc
adc
mov
addl
lea
cmpl
mov
movl
mov
jmp
mov
movl
jge
push
pushl
push
pushl
push
call
xor
and
movzbl
and
mov
and
addl
mov
mov
sbb
mov
and
mov
sbb
mov
and
xor
cmpl
mov
movl
jmp
movl
jge
pushl
push
push
push
pushl
call
orl
addl
xor
add
xor
xor
sub
add
mov
mov
sub
or
sub
xor
cmpl
movzbl
movl
movl
mov
jmp
movl
movl
jne
push
push
push
call
or
sub
xorl
xor
or
mov
mov
or
sub
shl
cmpl
movl
movl
mov
jmp
mov
movl
jg
pushl
pushl
call
mov
xor
xor
sub
imul
mov
mov
sub
and
sub
add
not
shr
dec
or
mov
xorl
mov
sub
mov
mov
xor
add
or
mov
mov
mov
sub
shrd
shr
cmpl
mov
mov
jmp
movl
jg
push
call
adc
xor
add
adc
adc
or
adc
xor
and
mov
mov
xor
xor
or
mov
push
pushl
lea
push
shl
call
lea
push
mov
mov
lea
push
mov
lea
mov
mov
mov
push
call
push
push
pushl
call
mov
mov
mov
mov
shr
shl
or
mov
xor
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
add
mov
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
adc
push
push
sbb
push
movzbl
sbb
movl
movl
or
movl
movl
neg
mov
mov
mov
mov
xor
and
subl
mov
cmpl
mov
mov
jmp
movl
movl
jb
pushl
call
and
adcl
mov
and
add
dec
xor
and
subl
add
mov
xor
xor
movzwl
xor
mov
orl
movl
neg
movl
adcl
mov
xor
cmpl
movl
movl
mov
jmp
movl
mov
jne
push
pushl
push
push
call
sub
add
sub
mov
mov
or
mov
mov
sub
sub
cmpl
mov
movl
movzwl
mov
jmp
movl
movl
jge
pushl
push
push
call
add
inc
movzwl
and
adc
and
sub
subl
mov
add
imul
not
xor
or
mov
div
adc
sub
mov
mov
sub
and
mov
or
movl
movl
mov
mov
and
movl
movl
add
movl
sub
movl
movl
mov
mov
imul
add
or
and
sub
sbbl
mov
sub
andl
mov
sub
mov
sub
andl
add
sub
mov
andl
xor
subl
div
mov
adcl
sub
mov
add
movzwl
sub
mov
sub
movl
xor
movl
mov
mov
sub
and
movl
add
mov
xor
cmpl
mov
mov
mov
jmp
mov
je
push
call
and
or
sbbl
mov
adc
addl
movl
adc
add
mov
xor
div
cmpl
mov
movl
mov
mov
jmp
movl
movl
jb
push
call
or
mov
sub
xor
or
adc
andl
dec
sbb
and
cmpl
movl
mov
jmp
movl
movl
jl
pushl
push
pushl
push
push
push
pushl
call
sbbl
sub
sbbl
mov
sub
mov
and
mov
or
and
sub
sub
mov
movl
and
movl
mov
mov
xor
movl
sub
movl
mov
cmpl
mov
movl
movzbl
jmp
movl
ja
pushl
push
pushl
call
mov
sub
movzbl
add
mov
orl
xor
mov
xor
mov
and
mov
xor
adc
xor
adc
push
xor
pop
movl
div
cmpl
mov
mov
movl
jmp
movl
movl
je
push
push
push
pushl
call
inc
inc
xor
sbbl
mov
xorl
xor
orl
div
movl
mov
movl
or
sub
sub
cmpl
mov
mov
movl
movl
jmp
movl
movl
jb
push
pushl
push
pushl
pushl
pushl
push
push
call
negl
xor
mov
and
mov
adcl
mov
adcl
movl
mov
cmpl
movl
movl
movl
jmp
movl
mov
jle
push
push
push
call
andl
addl
andl
sbbl
sbb
sbb
mov
andl
xor
orl
div
andl
imul
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
push
call
or
and
adc
or
neg
xor
orl
xor
sbb
imul
add
xor
mov
sub
mov
mov
subl
movl
movl
subl
movl
sbb
mov
cmpl
movl
mov
jmp
movl
jge
pushl
call
adc
subl
xor
xor
mov
sbb
adcl
or
cmpl
mov
movl
movl
jmp
notl
movl
jg
pushl
push
pushl
call
orl
sub
sbb
xor
xor
adc
andl
add
orl
or
and
or
mov
addl
xor
sbbl
div
sub
mov
sbbl
imul
or
add
xor
mov
incl
sub
cmpl
movl
movl
movl
movl
jmp
movl
je
push
pushl
call
addl
movl
subl
or
xor
andl
mov
cmpl
mov
mov
mov
movl
jmp
mov
mov
je
pushl
pushl
pushl
push
pushl
call
xor
add
sbb
or
adcl
mov
mov
adc
sub
xor
movl
mov
and
and
cmpl
movl
mov
jmp
mov
movl
jge
push
push
pushl
push
pushl
push
call
orl
xor
xor
adc
mov
xor
add
xor
mov
not
movzwl
sbb
sbb
add
cmpl
movl
notl
mov
notl
jmp
movl
jb
push
pushl
push
push
push
call
adc
movzwl
sub
adc
add
adc
andl
mov
sbb
or
xor
cmpl
mov
mov
jmp
movl
je
pushl
call
movzbl
or
mov
andl
mov
adc
addl
mov
sub
mov
movzbl
adc
adcl
sub
mov
mov
xor
add
sub
imul
movl
cmpl
mov
movl
jmp
notl
movl
ja
push
call
sbbl
mov
sbb
sub
sub
add
xorl
movl
xorl
movl
neg
mov
adc
and
mov
adc
add
adcl
add
add
or
cmpl
not
movl
jmp
mov
mov
jl
push
push
call
mov
adc
movzbl
adc
sub
notl
sbb
add
or
xorl
sub
mov
movl
xor
movl
adc
movl
cmpl
mov
mov
jmp
mov
mov
jg
pushl
push
pushl
call
andl
orl
not
add
add
mov
shr
sub
xor
xor
mov
lea
movl
push
orl
call
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
push
push
push
call
or
neg
add
sub
xorl
xor
add
cmpl
mov
mov
mov
jmp
not
jl
push
pushl
push
call
mov
xor
xor
or
xor
xor
sub
or
or
xor
or
mov
sub
and
or
mov
mov
sbb
or
xor
add
sbb
and
lea
mov
mov
mov
sub
or
movl
sbb
movl
cmpl
movl
mov
mov
jmp
mov
movzbl
ja
push
push
pushl
push
call
mov
mov
sub
imul
mov
mov
and
sbb
subl
xor
movl
movl
movzbl
adc
mov
movl
movl
movzwl
sub
movl
movl
subl
mov
add
mov
and
dec
sub
mov
sub
lea
mov
orl
mov
mov
sub
mov
imul
sbb
and
cmpl
mov
not
movl
movl
jmp
movl
movl
ja
pushl
push
push
call
add
orl
adcl
negl
andl
subl
movzwl
and
not
imul
cmpl
mov
not
jmp
movl
jl
pushl
pushl
call
adc
add
adcl
sbb
subl
mov
or
mov
lea
mov
cmpl
movl
mov
movl
jmp
mov
jbe
push
call
sbbl
and
movzwl
adc
sub
mov
mov
sbb
xor
or
and
mov
cmpl
mov
movl
not
jmp
movl
mov
jge
pushl
push
push
push
pushl
push
call
add
orl
sbb
add
neg
addl
sub
movl
adc
movl
movl
cmpl
mov
mov
mov
movl
jmp
movl
jg
pushl
push
push
call
sbb
xor
sbb
mov
sub
mov
sbb
adc
movl
cmpl
mov
movl
mov
jmp
mov
ja
pushl
push
call
mov
mov
sub
or
inc
add
sbb
or
and
add
mov
mov
mov
xor
xor
xorl
mov
addl
call
adcl
mov
orl
mov
orl
mov
cmpl
movl
mov
mov
jmp
movzwl
mov
jl
pushl
push
pushl
pushl
push
call
add
movzbl
adc
mov
xor
add
add
mov
sub
add
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
not
push
push
cmpl
mov
movl
movl
movl
jmp
mov
mov
jge
push
pushl
pushl
push
push
pushl
call
xor
add
subl
adcl
add
sbb
mov
sbb
mov
xorl
or
movl
jne
xor
xor
mov
sub
or
mov
mov
cmpl
movl
mov
movl
jmp
movl
je
push
push
pushl
push
pushl
push
push
push
push
pushl
push
push
push
call
or
decl
andl
adc
sbbl
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
andl
subl
cmpl
movl
je
and
add
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
jae
cmp
movl
jae
shld
notl
shl
ret
mov
xor
mov
decl
xor
and
shl
ret
xor
xor
ret
