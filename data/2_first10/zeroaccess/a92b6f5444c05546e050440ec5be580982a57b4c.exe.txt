add
add
call
add
add
add
add
add
add
add
add
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
pushl
mov
mov
cld
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
test
pandn
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
rorl
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
addr16
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
enter
incl
in
xor
mov
cld
jle
mov
add
mov
decl
add
inc
das
mov
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
lds
add
push
cs
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
lahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
ret
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jp
add
mov
inc
lret
inc
iret
jb
mov
enter
cmp
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
fadds
xor
mov
clc
enter
mov
test
clc
incl
aas
mov
test
clc
pushf
inc
pushl
cld
pushf
inc
mov
insl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
cmp
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
lahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
lahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
lahf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
cmp
rolb
clc
popa
jb
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
cmp
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
popa
xor
mov
popa
xor
orl
fsubs
int3
lea
push
cmp
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
cmp
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
lahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
lahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
sar
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
adc
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
loop
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
loope
push
push
incl
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
jmp
inc
jmp
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
xlat
ss
aas
loope
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
cmp
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
cmp
pushf
mov
jl
add
add
or
test
clc
or
cmp
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
data16
push
rorb
incl
inc
add
decl
mov
add
add
xor
cmp
jbe
lea
mov
jae
mov
decl
add
call
add
mov
jb
incl
mov
sbb
push
je
incl
data16
test
lea
cmpsl
movw
mov
lea
js
incl
mov
pop
jmp
add
out
pusha
out
call
jmp
inc
add
in
mov
addl
mov
data16
addl
push
in
dec
inc
add
mov
in
incl
sub
incl
jle
leave
add
test
push
addl
outsl
in
add
test
ljmp
data16
inc
inc
xlat
cmp
jle
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
sub
jne
movl
int3
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jle
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
loope
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
int3
mov
cwtl
movl
ljmp
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
jmp
pushl
add
push
loope
jae
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loop
adc
call
mov
sbb
loopne
cmp
dec
mov
sub
inc
mov
xor
test
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
push
sbb
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
cmp
cld
xor
cmp
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
lahf
mov
add
add
cmp
je
add
mov
pop
mov
lahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
orl
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
lahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
lahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
lahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
cmp
fadd
test
jne
decl
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
aas
mov
jne
mov
or
icebp
lahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
pop
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
repnz
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
cmp
fdiv
test
clc
mov
rcll
stc
or
mov
in
lahf
jne
mov
or
lahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
add
add
mov
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
cmp
pushf
or
rcrl
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
cmp
cmp
clc
ret
dec
inc
xor
inc
add
add
dec
mov
cld
mov
cmp
pushf
dec
mov
xor
mov
cmp
push
mov
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
in
mov
hlt
mov
mov
in
jb
push
inc
push
jle
leave
cmove
lods
add
mov
or
xor
mov
orl
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
lret
mov
sbb
inc
call
and
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
or
test
clc
incl
cmp
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
lahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
data16
add
andl
mov
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
lahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
data16
add
pop
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
add
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
inc
data16
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
mov
cmp
je
push
pop
sysenter
leave
dec
popa
jle
popa
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
add
mov
cmp
repz
xorb
inc
inc
add
cmp
pushf
push
je
xor
mov
andl
add
in
push
mov
add
mov
clc
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
add
dec
push
mov
add
rcrb
add
ret
jne
mov
xor
mov
test
clc
fs
mov
pop
sub
add
xor
xor
add
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
testb
sarl
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
lahf
in
xor
mov
clc
test
cmp
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
cmp
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
pop
mov
add
xor
sub
mov
inc
inc
mov
dec
lahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
data16
pushf
mov
mov
cld
test
push
inc
mov
lahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
lahf
xor
add
inc
cmp
pushf
std
xor
inc
fadds
inc
mov
inc
lahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
lahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
mov
inc
or
shlb
jne
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
pop
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
add
data16
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jle
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
add
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
ljmp
add
inc
or
dec
add
test
push
ret
lea
pushl
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
pop
pushf
dec
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
ds
or
rorb
push
inc
in
mov
or
lock
test
clc
rolb
cmp
add
mov
xor
xor
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
cmp
add
inc
cld
cmp
hlt
inc
test
clc
hlt
inc
test
clc
pushf
push
push
inc
inc
fdivrs
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
cmp
cmp
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
mov
sbb
ljmp
mov
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
lahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
cmp
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
pop
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
cmp
cmp
adc
test
cmp
pushf
sbb
add
add
dec
jnp
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
push
adc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
cmp
pushf
add
add
mov
test
clc
inc
inc
cmp
mov
or
bound
clc
lea
xor
lea
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
cmp
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
lahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
pushf
ret
mov
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
pop
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
ds
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
aas
add
aas
add
jne
incl
clc
add
inc
jne
call
fadds
mov
add
add
add
incl
push
and
roll
inc
adcl
inc
adc
inc
lcall
je
sbb
lea
je
sub
je
and
mov
clc
and
and
add
and
add
cmp
or
pop
push
mov
sub
xor
mov
mov
mov
orl
mov
movl
mov
and
movl
mov
xorl
push
push
andl
push
mov
xor
addl
mov
orl
add
mov
movzwl
and
movl
dec
movl
movl
add
jmp
xlat
mov
and
mov
mov
jle
jg
jle
cmp
fld
ja
or
sbb
bswap
adc
sbb
mov
or
rol
or
dec
add
push
in
outsl
add
pushf
jo
dec
mov
cmp
xorb
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
sub
jae
lret
lcall
mov
loop
cmp
fs
sub
or
sbb
and
add
fisttpll
popl
shll
movb
pop
rcll
jns
mov
daa
add
fstpt
dec
loopne
xchg
inc
sbb
cmc
jae
ret
push
and
pushf
jg
fs
movsb
fadd
pop
mov
icebp
sub
out
inc
sub
sub
in
ds
je
outsl
and
and
loope
pop
xchg
inc
inc
jl
adc
or
dec
mov
sar
aaa
je
sub
or
sbb
pop
xor
lds
mov
xchg
adc
inc
outsl
add
cmp
lods
das
int3
xchg
in
inc
add
pop
jbe
clc
shlb
adc
mov
in
mov
ret
ljmp
add
inc
test
sbb
push
jle
add
movb
mov
je
add
fstl
cltd
loope
jns
and
scas
pop
addr16
insl
cmp
fidivrl
jle
ret
sbb
adc
ret
loopne
lods
or
push
mov
scas
push
les
mov
mov
jmp
add
mov
lods
mov
shll
scas
or
in
daa
fwait
or
sahf
imul
sar
cmp
xchg
lcall
cs
sahf
and
dec
out
mov
adc
pop
sti
out
sahf
pop
cmp
adc
movsb
sti
mov
add
push
imul
pop
jg
arpl
mov
mov
mov
push
add
ja
cmpsl
int
inc
jp
dec
les
push
std
loop
or
sbb
loopne
and
mov
sub
cltd
jmp
xchg
cmp
fldenv
lods
sbb
jo
lcall
push
clc
stos
xchg
mov
or
fsub
aas
xor
call
xchg
or
mov
xor
out
fnstcw
mov
cltd
adc
jl
mov
xchg
mov
xchg
jl
lods
jo
pop
xchg
fbstp
in
dec
jge
sbb
inc
dec
shlb
jnp
push
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
subl
movl
movb
sub
mov
xor
andl
add
mov
mov
xor
adcl
add
andl
push
dec
mov
xor
andl
add
xorl
push
andl
mov
jmp
push
mov
xchg
push
mov
push
or
mov
fidivrl
jle
out
sub
jle
push
sub
lret
mov
js
test
dec
mov
adc
push
int
pop
popa
push
ljmp
mov
mov
in
xchg
mov
dec
loope
hlt
and
dec
push
mov
cmp
ja
adc
fistl
imul
loope
fisubrl
fadd
mov
dec
sahf
jg
decl
daa
mov
inc
pop
sti
pop
sbb
bound
cmp
je
cmpsl
shr
fimuls
sbb
mov
sub
ror
outsb
add
out
scas
movsl
setbe
mov
movsb
jecxz
push
mov
cmp
mov
ljmp
cld
into
push
mov
lea
repz
adc
cmp
cmp
jne
shr
jno
insb
test
rcl
jl
push
sbb
adcl
lock
sub
imul
jne
add
xchg
add
loopne
loope
aam
fidivrs
inc
mov
cli
es
jae
int
int
jecxz
cltd
pop
jge
aad
sub
ja
xchg
mov
xchg
dec
in
mov
xor
negl
add
xorl
push
lea
push
movl
pushl
subl
pushl
subl
call
incl
test
movl
je
subl
lea
negl
push
add
mov
andl
xor
add
andl
push
mov
add
push
andl
mov
subl
mov
pushl
addl
call
movl
mov
movl
cmpl
notl
lea
mov
je
lea
jmp
ja
je
je
test
push
outsl
jne
jns
stos
add
jle
jg
jle
add
fwait
push
xor
and
sti
xchg
mov
sub
cmp
dec
mov
loop
shl
negb
scas
xchg
xorb
mov
movsb
out
xchg
clc
mov
jl
xor
mov
shrb
and
mov
cmovnp
push
clc
or
add
or
pop
pop
sti
jb
inc
jecxz
das
xor
mov
outsl
inc
rolb
lds
and
cmp
fstpl
cli
stos
dec
scas
mov
mov
and
cmp
sub
xchg
test
movsl
sarl
mov
jmp
daa
push
push
aas
jnp
imul
jb
ret
test
jns
fs
mov
xchg
icebp
pop
fadds
push
stos
cli
and
pushf
icebp
pusha
leave
test
fcomp
loopne
add
pop
sub
mov
jae
sbb
mov
mov
fistl
bound
xor
in
cmp
sbb
inc
add
push
aaa
xchg
xor
bound
icebp
mov
adc
inc
out
fildl
stc
xchg
je
dec
pop
movsb
xchg
shrb
andl
push
imul
jbe
push
dec
pop
jb
repnz
fdivrs
dec
loop
es
and
pop
popf
scas
cmpsb
mov
mov
testl
jge
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
adcl
xor
add
andl
jmp
adc
imull
mov
and
out
jae
jle
jg
jle
icebp
fisubrs
sti
dec
shr
pushf
and
stos
frndint
lret
pop
push
jp
cmpsl
sar
enter
loop
adc
jp
and
push
mov
mov
enter
jae
mov
push
movsb
adc
mov
jbe
popa
rcr
pop
adc
xchg
mov
ljmp
push
mov
notl
mov
outsl
rorb
add
xor
rclb
inc
xchg
pop
test
or
pop
loope
inc
sbb
lahf
and
dec
push
ljmp
jecxz
dec
jg
dec
sub
bound
int3
jo
subb
gs
repnz
out
add
data16
inc
rcrl
mov
push
aad
sub
out
scas
imul
mov
cltd
sbb
popf
lret
xchg
frstor
push
xor
daa
fisttps
aaa
cmc
inc
pop
je
mov
fildll
cmp
sahf
stos
push
shll
pop
sahf
les
fldcw
dec
loope
es
jg
jns
nop
inc
js
lds
adc
sub
pushf
call
adc
dec
iret
mov
pop
fs
ja
push
cld
sti
xor
jno
test
push
lock
or
je
mov
sbb
push
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
jmp
sbb
clc
and
fldcw
inc
inc
pop
dec
jo
jle
jg
jle
popa
enter
fdivrl
int
rolb
ja
adcb
mov
jne
jae
push
pop
sub
lret
sub
pusha
xchg
push
rorb
fidivs
out
add
sbb
in
pop
bound
dec
mov
fnstenv
loopne
repnz
jle
jge
cmp
out
test
rcr
test
in
xor
div
inc
inc
mov
and
sub
mov
xor
adc
pop
dec
cmpsl
cmp
scas
outsb
inc
testb
shufps
loop
jo
ret
shrl
les
push
push
pop
in
mov
jmp
mov
xchg
fimuls
push
scas
push
das
push
jle
sub
adc
popf
flds
bound
lahf
xor
repz
test
mov
adc
outsb
cmp
mov
jecxz
outsb
mov
clc
inc
cmp
bound
lea
test
sub
xchg
mov
repz
in
js
add
cltd
and
mov
test
mov
daa
mov
arpl
out
aam
insl
xchg
xor
out
pushf
das
jmp
clc
lea
push
pushl
pushl
jmp
loop
cli
cs
cli
cli
ret
cmpsb
push
mov
jbe
jle
jg
jle
or
push
rol
sbb
aad
sub
sbb
mov
ja
jnp
and
ja
mov
rorl
test
pop
jo
shrl
push
push
jmp
sbb
fistpl
stos
jns
loope
pop
dec
stc
cmp
out
lret
mov
subl
push
shlb
mov
fdivl
into
or
adc
sbb
cmpsl
adc
hlt
xchg
push
and
mov
xor
jp
popf
imul
fwait
or
call
out
xchg
stos
out
sbb
cmpsb
mov
mov
aas
jmp
loopne
mov
inc
xadd
pop
sub
scas
pop
nop
sub
mov
fmull
out
xchg
jbe
mov
pop
mov
add
adc
call
dec
lods
jmp
sahf
lea
cmp
jo
lret
xor
add
ret
sbb
xor
xchg
subl
push
leave
pushf
push
adc
scas
add
sub
xor
xor
popf
push
xor
cmpsb
xor
or
xlat
mov
stos
aad
pushf
stc
jl
dec
inc
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
jmp
lahf
icebp
shll
icebp
addl
data16
jle
jg
jle
mov
lcall
sub
mov
sub
push
rcrl
or
imul
sbb
push
in
cli
scas
enter
and
insb
fidivrl
test
loopne
mov
mov
pop
stos
mov
jae
sub
push
cmc
fs
cmc
and
shl
cmp
sub
xlat
sbb
push
sub
enter
mov
dec
scas
mov
push
sbb
stc
xchg
in
xor
add
mov
jno
test
ds
sbb
dec
js
les
pushf
mov
out
add
add
push
inc
add
push
leave
mov
insl
push
jb
popa
lods
or
pop
lret
mov
sahf
data16
mov
cmp
jae
mov
jmp
dec
push
fs
dec
or
lcall
sar
sbb
mov
jle
pop
mov
cmpb
add
adc
sub
cmp
push
pusha
subl
dec
daa
adc
mov
pop
into
repz
test
pop
pop
xorl
and
xchg
movb
js
divb
cmp
icebp
lock
mov
insl
push
orl
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
mov
in
stc
andb
cmp
cmp
out
je
jle
jg
jle
pop
jnp
roll
ret
notb
xchg
push
cs
imul
fistl
sbb
icebp
sti
adc
and
mov
aam
mov
xor
jecxz
add
mov
cmp
and
sbb
lea
xor
jno
repz
std
cs
je
inc
pop
test
fimuls
pop
cmp
mov
mov
xor
andl
inc
test
test
sub
dec
mov
xor
outsb
cmp
addr16
push
rcll
cmc
lret
add
call
mov
mov
pop
sub
mov
jmp
xchg
imul
xor
sahf
adc
add
shlb
sub
pop
push
pop
fld1
jmp
jns
notl
dec
idivb
stos
dec
scas
pop
and
mov
mov
aas
push
stos
xchg
jp
jns
and
scas
outsl
push
xor
lcall
xchg
mov
push
xlat
loop
cmp
mov
cs
xchg
mov
xor
xor
jno
cltd
mov
push
and
lds
shll
popa
fs
cmp
or
jnp
leave
add
jne
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
jmp
mov
fidivl
or
jp
or
jle
jg
jle
nop
xor
pop
jl
movsb
xchg
mov
sbb
xchg
mov
and
pop
dec
imul
dec
cmp
outsl
out
test
inc
les
pop
jl
ja
sub
cmp
push
add
jno
iret
fisttpl
imull
repnz
popa
gs
and
sahf
loope
inc
arpl
adc
jg
stc
je,pt
loopne
pushf
leave
mov
adc
pop
pop
sbb
enter
mov
push
fs
push
cwtl
xor
cld
arpl
xor
and
jge
xor
lock
cmp
hlt
and
pop
cmp
sbb
sub
push
insl
nop
xchg
push
jg
mov
inc
orl
sahf
in
or
or
pop
adc
fisubrl
cmp
loop
cmp
sar
lahf
and
mov
int3
mov
mov
stc
inc
gs
sti
insl
cmp
push
xor
dec
repnz
adc
addr16
insb
imul
inc
daa
and
daa
cwtl
data16
out
pop
cltd
sub
std
gs
cmp
imul
ret
arpl
scas
mov
inc
add
or
pop
leave
ret
push
mov
sub
push
sub
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
orl
movl
xor
add
and
movl
mov
mov
mov
xor
adc
mov
movzwl
sbb
add
addl
mov
jmp
mov
cmp
or
and
jle
or
leave
flds
dec
js
in
push
dec
sahf
inc
inc
inc
sub
outsl
add
push
aad
rcll
ret
sub
pop
les
jbe
outsb
inc
and
pop
in
int3
sub
sbb
pop
or
nopl
adc
jo
inc
pmuludq
out
repz
cmp
dec
fs
insb
push
pop
push
and
fidivrl
imull
lock
lods
mov
das
cmp
sub
or
pop
push
push
aam
push
jnp
jbe
daa
xor
mov
pop
daa
inc
out
ss
mov
jg
bound
cmpsl
pusha
cmpsl
jb
jne
inc
out
int3
pop
and
aam
cmp
imul
cmp
icebp
addr16
sarl
das
adc
scas
fptan
loop
and
push
push
inc
cmc
push
adc
rclb
out
mov
and
jmp
xlat
aas
sub
divl
ret
fcmove
inc
sub
outsl
mov
in
adc
add
xchg
xor
xlat
pop
out
jp
sbb
cmp
aam
lock
jg
ds
mov
pushf
unpckhps
fdivrs
mov
andl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
xor
add
jmp
xchg
lcall
pop
jb
push
mov
test
jle
and
jle
dec
fsubs
jle
cmpl
mov
jle
enter
push
shr
mov
pop
lret
jle
or
andb
int3
test
dec
sahf
add
int3
pop
adc
jge
pop
int
xchg
cltd
testb
or
aaa
stc
mov
inc
fwait
testl
dec
iret
fst
dec
sahf
jne
dec
cld
lds
cs
mov
lods
xor
mov
pop
test
addr16
cmp
fs
pop
inc
jns
into
xchg
jmp
stc
ljmp
push
lods
pusha
adc
inc
out
cld
jne
jbe
dec
sbb
loop
mov
mov
cmpsl
aam
xchg
lret
jmp
cltd
scas
add
xchg
fnstsw
subb
clc
nop
test
outsb
xor
aam
sbb
into
iret
in
iret
xchg
fldl2t
call
shlb
jl
pop
inc
dec
push
xor
out
lds
mov
mov
call
and
loopne
loop
sahf
pusha
dec
lret
dec
mov
scas
pusha
dec
cmpsb
mov
dec
lcall
add
xchg
jecxz
push
or
jmp
or
mov
or
inc
mov
jle
and
jle
mov
arpl
cmp
pusha
or
mov
fcmovb
cmp
outsb
nop
mulb
mov
sbb
mov
scas
inc
mov
shl
mov
das
imul
push
aaa
dec
test
add
or
and
fwait
popa
outsl
ja
sbb
mov
nop
fsubrp
or
jo
sub
inc
out
in
ja
rolb
addw
fcmovbe
mov
nop
or
test
aas
mov
stos
cmp
rclb
xchg
neg
jl
cmp
ficoms
inc
mov
or
jecxz
ret
pop
bound
cld
pushf
mov
andb
hlt
mov
jmp
cmp
push
sbb
dec
mov
mov
adc
push
dec
and
inc
popf
lds
xchg
mov
mov
sar
mov
xor
adc
cli
mov
push
imul
adc
lods
mov
mov
aam
mov
fcoms
jle
jns
sarb
bound
repz
pop
hlt
enter
fadds
xor
adc
mov
movl
movl
adc
movl
or
movl
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
andl
movl
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sub
xor
mov
add
cmp
movl
je
movl
jmp
lock
jns
mov
je
jp
movd
jg
jle
xchg
orb
ret
shrb
adc
and
mov
orb
cmp
sub
movsb
mov
jo
scas
enter
stos
int
pop
sbb
cld
std
jne
sbb
inc
in
jb
push
add
orl
push
xor
mov
nop
stos
add
push
sub
call
lea
add
in
adc
cmp
nop
js
out
xor
int3
in
mov
lahf
xor
mov
lods
inc
xor
mulb
mov
or
sub
mov
lahf
sar
cmp
adc
test
pop
push
pop
and
pusha
or
out
dec
into
repz
cmp
push
out
mov
mov
int
inc
mov
mov
mov
push
mov
xchg
and
inc
scas
jnp
add
loopne
and
movsl
push
std
xchg
add
xorps
imul
lods
dec
mov
cmpb
hlt
roll
push
dec
insb
mov
jmp
cld
xchg
rclb
xchg
scas
icebp
add
dec
cwtl
arpl
lds
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
orl
sub
adc
mov
adcl
xor
sbbl
add
movl
cmp
movl
jb
mov
sbb
mov
mov
or
xor
xor
movl
add
dec
add
dec
imul
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
sbb
mov
incl
sub
movl
cmp
movl
ja
mov
movl
xor
addl
add
movl
jmp
mov
sbbl
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
add
mov
inc
popf
imul
ljmp
jle
sbb
pop
imul
in
and
xchg
cwtl
mov
xor
pop
ss
jne
pop
outsl
pop
sbb
dec
or
ljmp
inc
add
and
add
mov
push
lahf
out
push
scas
mov
es
mov
stc
push
fs
les
xchg
adc
dec
mov
adc
test
fnstenv
adc
and
mov
daa
arpl
xchg
cmpsl
cs
lahf
cmp
sbb
xor
fucom
and
cwtl
pushf
fs
pop
xchg
lret
sub
mov
push
jl
cmc
emms
pushf
or
fwait
test
test
mov
mov
sbb
pusha
dec
xchg
and
lcall
sub
aas
dec
orb
lds
mov
loop
lret
test
call
sub
aas
sub
cld
pop
and
int
inc
adc
xchg
testb
fyl2x
sub
cmp
in
dec
popf
or
cli
cltd
mov
jecxz
lods
mov
out
cmpsl
cmp
and
hlt
daa
jns
clc
add
add
imul
mov
jmp
jbe
xchg
call
adc
testb
jle
jg
jle
es
popa
sub
jmp
and
leave
xchg
popf
adc
mov
or
mov
xchg
aam
fwait
test
sahf
mov
ret
add
pop
push
fnstcw
jmp
sbb
jecxz
jne
dec
and
insl
jo
cmpsl
hlt
aaa
and
mov
fisttpl
test
jae
adc
sbb
add
in
stos
jmp
xor
lock
stos
notl
shl
shrb
and
mov
dec
arpl
mov
inc
sbb
jecxz
fimuls
xchg
ja
inc
fwait
inc
mov
jae
shl
jp
push
inc
ss
orl
xchg
sbb
cld
ret
inc
inc
jg
jno
inc
in
pop
loope
adc
sub
shl
ja
push
stc
leave
rorl
or
push
lds
daa
cmp
test
cmp
outsl
repz
jns
je
nop
and
out
xor
push
lods
inc
in
inc
push
movsl
out
lock
sbb
cmp
lea
mov
adc
fistpll
fimull
xchg
add
add
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
jmp
lock
xchg
mov
and
hlt
repz
outsl
inc
add
and
jle
data16
xchg
adc
xchg
jl
jo
adc
add
mov
movsl
and
movsb
jge
imul
rcl
aad
or
sbb
pop
and
mov
cmp
and
pop
and
or
lret
adc
in
pop
jecxz
ret
ss
dec
add
xchg
push
popa
insb
xor
bound
xor
hlt
push
push
fiadds
out
arpl
push
aas
adc
sub
dec
xchg
xor
int3
jne
aam
pusha
mov
jle
dec
pop
in
and
fucomip
in
lds
xor
adc
movsb
inc
cmp
hlt
pop
out
in
lea
mov
rorb
sar
sti
int3
fdivs
jbe
jne
mov
addr16
in
and
push
aam
add
xlat
adc
pop
rorl
test
bound
xchg
mov
nop
pop
test
outsl
xchg
xor
in
cmc
push
push
mov
and
inc
test
pop
sar
shr
cmc
bnd
sbb
cmpsb
xchg
push
jle
fisubrl
adc
rorb
jp
pop
icebp
stc
jmp
inc
call
mov
movl
movl
mov
jmp
daa
mov
in
dec
push
push
cmp
cmp
jne
jle
and
jle
shrl
xor
pusha
pop
andb
jecxz
add
mov
mov
lods
jecxz
rcrb
jecxz
ljmp
adc
cmpsl
fnstsw
fistpl
mov
in
or
jge
ss
adc
jno
mov
into
sbb
call
int3
loop
add
jae
out
out
insb
and
cltd
cmpb
test
push
cmp
cwtl
xlat
movsl
loope
popa
jb
pushf
add
push
mov
sbb
into
imul
or
sahf
fimuls
adc
xchg
and
movzwl
mov
repnz
mov
pushf
fwait
sub
data16
pop
adc
xchg
in
xorl
aas
inc
ret
jb
push
fcmovnbe
movsl
adc
inc
xor
xchg
iret
push
mov
fld
mov
xchg
push
fldcw
pop
roll
or
cmp
lods
vdpps
push
xor
lds
sub
in
insb
aaa
and
hlt
mov
pusha
outsl
mov
or
lods
mov
xor
jmp
int
mov
stc
repnz
in
add
and
jle
add
mov
loop
inc
push
leave
sbb
mov
jecxz
js
out
adcb
add
mov
adc
scas
ja
lods
js
sbb
xor
xor
pop
add
test
xchg
push
sub
cs
mov
fdivrl
mov
xor
repz
or
rcll
cli
out
sbb
std
ficompl
fnstenv
inc
and
es
push
jp
or
pop
dec
sahf
add
mov
and
sti
test
ljmp
ja
add
jecxz
sbb
int
into
std
xchg
cs
inc
aas
sub
dec
mov
jns
jbe
loop
jg
sbb
dec
xchg
and
jbe
movsb
pop
aas
jl
add
xor
push
stos
popf
dec
int3
push
cld
add
fs
insl
insl
adc
pop
jae
mov
lahf
icebp
mov
and
stos
filds
outsl
pusha
adc
loopne
xor
fildl
mov
call
outsl
fistps
js
js
pop
and
jge
pminub
xor
shr
pop
add
add
add
mov
mov
mov
mov
xor
add
jmp
mov
scas
pop
popa
cmp
xor
jecxz
jle
and
jle
insb
sub
mov
push
leave
jnp
or
xchg
xchg
or
add
jge
push
add
loopne,pt
jnp
xor
in
xchg
imul
jns
pop
or
inc
inc
and
icebp
dec
jno
in
sbb
and
lock
aad
sbb
mov
fidivl
andl
or
test
sbbl
outsb
xor
test
mov
jp
xor
cmp
cmp
mov
popa
pusha
push
enter
sar
push
inc
mov
mov
test
cs
or
fwait
pop
pop
mov
xchg
xchg
fsub
push
ret
loop
dec
mov
in
imul
aas
sar
jecxz
sarl
mov
data16
xlat
fcoml
add
and
pusha
pop
dec
cs
mov
nop
xchg
inc
push
ret
lods
psubusw
push
leave
inc
inc
jnp
dec
rsm
insl
cmp
stos
dec
jl
push
sub
out
and
lret
inc
sbb
mov
xchg
ja
lods
loopne
cli
std
testb
jge
mov
mov
mov
mov
xor
add
mov
jmp
stos
out
pop
sbb
test
leave
ss
subb
jle
and
jle
xor
std
cmp
lods
fs
outsl
lahf
dec
xlat
imul
shlb
adc
testb
mov
sbb
or
jns
aam
xchg
das
cmp
test
lret
fstl
push
outsl
loope
lds
jp
cmp
cmc
inc
lods
aaa
sarl
inc
clc
pop
lods
mov
insb
push
or
cltd
pop
int
jmp
xor
rorb
aaa
test
inc
pop
out
jg
sbb
les
aam
cmp
loop
mov
xchg
inc
jb
inc
cs
mov
int
inc
loop
jmp
mov
xlat
jbe
pop
and
lods
dec
push
or
shlb
lahf
movsb
xchg
out
mov
aas
cld
xchg
mov
rcll
cmp
sbb
leave
add
lods
inc
popf
das
stos
data16
jne
xchg
aaa
les
pop
imul
inc
pop
fwait
ja
mov
or
pop
cmc
xor
popf
sbb
test
mov
mov
inc
mov
leave
mov
jl
sub
mov
jmp
jns
mov
dec
js
movsl
mov
lods
or
jle
jg
jle
iret
dec
cmpsl
mov
dec
inc
dec
aam
dec
xor
pop
push
push
jle
jmp
jle
aam
sub
jge
in
stc
mov
in
fisttpl
shl
popf
cmp
pop
jg
lcall
add
or
aad
mov
push
sub
or
pop
fwait
repz
xor
cmp
and
addr16
pop
popf
lahf
mov
fwait
or
iret
adc
cmp
pop
sti
sbb
mov
mov
mov
ds
jmp
loope
and
cs
and
add
movsl
mov
adc
cmpsl
std
pop
xchg
or
xchg
out
outsl
imul
sub
shll
or
fmulp
dec
xor
jge
mov
inc
pop
jb
add
or
pop
test
js
mov
jnp
cmp
push
jb
icebp
or
lret
pop
fwait
cmp
add
sub
push
movsb
dec
jge
outsl
mov
andb
pop
inc
aas
testb
imul
jecxz
jae
sti
cmpsl
shlb
and
hlt
sbb
and
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
jmp
hlt
jae
pop
mov
pushf
sbb
jl
out
in
add
jle
and
jle
popa
lahf
and
mov
adc
jle
je
mov
repnz
fcoms
mov
inc
mov
dec
cmp
and
mov
mov
pcmpgtb
pop
arpl
outsb
push
test
push
add
sub
pop
pop
pop
std
jo
mov
mov
pop
xchg
push
sub
add
mov
imul
sbb
jo
mov
mov
fsubl
int
lret
addr16
decb
sbb
xchg
or
outsb
sub
jg
fidivrs
mov
xchg
mov
fsubrl
cmp
out
push
mov
mov
insb
lock
xor
sub
mov
adc
gs
leave
adc
dec
pop
fs
outsb
xchg
push
aad
mov
dec
je
sub
aad
popf
fadds
leave
iret
and
iret
sbb
ret
mov
dec
xor
pop
pop
cld
mov
pop
mov
mov
mov
shrb
mov
add
mov
lea
mov
mov
xor
mov
sub
add
jmp
sub
jmp
sub
add
cmp
sbb
and
jle
aam
jge
negl
cmp
or
push
dec
jle
cmp
add
adc
xor
mov
ja
sahf
xchg
push
sbb
sbb
and
popf
sub
mov
cld
jne
mov
icebp
mov
cmpsb
sbb
rcrl
adc
aad
lods
stos
adc
arpl
push
jl
push
jbe
loopne
arpl
icebp
adc
lahf
inc
sbb
mov
outsl
test
out
dec
adc
push
add
jb
and
mov
fs
mov
sahf
jno
jl
fldcw
and
sbb
xchg
pusha
xchg
cmc
dec
pop
aad
fcomp
loop
imul
jae
mov
xchg
dec
pop
dec
inc
lret
das
fmul
bound
mov
loope
test
xchg
xor
xchg
dec
test
jns
sub
push
add
add
aad
frstpm(287
fisttps
fidivl
lcall
inc
aaa
mov
mov
das
ss
add
push
in
xor
add
and
xchg
push
mov
or
jns
mov
mov
xor
add
imul
cmp
jbe
pop
jmp
push
cld
dec
or
jp
adc
les
sbb
and
jle
sub
mov
cltd
cmc
cli
sti
dec
sub
mov
cmp
xchg
out
enter
mov
adc
xchg
xchg
test
lods
push
insb
outsb
mov
aam
adc
lods
fsubrs
daa
or
shlb
dec
ret
pop
decl
adc
jo
xor
jb
pop
sbb
shlb
popf
or
mov
test
in
aam
cmp
jo
push
fs
repnz
in
mov
push
cwtl
xor
and
in
inc
jns
mov
or
xchg
lret
lods
or
mov
stos
rorl
ret
popf
adc
mov
pop
mov
stos
jl
fcmove
sbb
or
jmp
adc
sbb
andb
scas
in
inc
aad
inc
sbb
xchg
xchg
push
ficompl
and
jbe
lret
out
add
inc
out
cltd
xor
rcl
sbb
add
bound
aaa
mov
aas
xchg
mov
xlat
and
xor
js
aas
inc
jae
inc
lds
loope
xorl
push
inc
push
xor
push
add
ret
push
mov
jmp
jb
test
adc
mov
lods
sbb
jmp
mov
pop
mov
xchg
push
ffreep
cmpsl
mov
dec
lea
out
mov
sbb
out
sbb
cmpsl
xchg
lcall
sarb
insb
or
or
inc
scas
adc
sarb
stos
mov
pop
jp
pop
push
test
xchg
or
lock
pop
xchg
fadd
out
in
mov
dec
sbb
hlt
push
movl
dec
pop
fisttps
clc
mov
int
out
insb
insb
mov
and
imul
cmc
inc
cmpsb
orl
push
rclb
sbb
xchg
inc
or
or
jg
push
rorb
jo
int
stos
cmp
les
cmpsb
xor
sbb
sar
addr16
mov
les
and
sub
rolb
scas
sbb
in
sub
mov
loop
pop
mov
sbb
leave
in
icebp
imul
mov
pop
mov
cmpsl
push
jae
sbb
pushf
add
inc
sub
pop
in
cltd
adc
out
fdivrs
add
dec
mov
divb
jb
xchg
bound
mov
daa
xor
hlt
xor
mov
cltd
cli
lods
movsb
xor
mov
test
bound
lods
enter
xchg
add
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
call
jmp
xorl
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movl
mov
push
adc
mov
xor
mov
push
mov
add
cmp
jmp
iret
in
push
adc
jns
int
les
rcrb
mov
jmp
dec
dec
jecxz
sbbl
push
inc
or
jmp
mov
mov
cmp
out
clc
mov
jg
xchg
sti
je
dec
mov
popf
mov
sub
mov
aad
insl
jne,pn
aad
cmp
pop
sarl
mov
push
data16
pop
sub
mov
mov
jae
push
scas
xchg
fidivrl
ds
sub
jmp
and
and
cmpsl
xlat
xor
push
rorb
clc
add
cmpsl
pop
adcb
xor
mov
fcom
cmp
cli
sti
enter
cmpsb
stos
or
dec
or
xchg
je
repnz
add
popa
out
cltd
fildll
addb
jnp
repz
push
enter
ja
jg
inc
jmp
repz
jnp
loope
cmp
adc
es
lods
scas
pusha
add
std
insb
inc
cld
inc
mov
push
push
inc
inc
inc
inc
add
xor
decb
cwtl
fists
pop
xorl
add
aad
mov
jge
xchg
pusha
lock
jo
push
mov
or
orb
inc
aad
push
in
sbb
push
mov
mov
ds
in
outsb
push
repz
cld
xchg
inc
sbb
adc
pop
or
jno
push
stos
je
jmp
in
pop
jg
cmpsl
insl
in
imul
sbb
jle
jg
jle
mov
test
jno
mov
push
test
stos
xchg
data16
jmp
pop
cmp
sub
out
add
cmp
cwtl
dec
mov
lock
inc
xor
inc
push
ficoml
xchg
xlat
das
lahf
cmp
fadds
out
dec
or
movsl
cmp
fimuls
or
inc
popf
xchg
test
data16
mov
fistpll
test
jae
cld
movsb
xor
xchg
enter
lock
dec
insb
xchg
fldt
mov
adc
popf
inc
cmp
lock
fsubl
imul
jno
jle,pn
inc
movsl
and
xchg
cmpsl
xchg
cli
mov
cmp
cwtl
mov
pop
insb
loop
idivl
ja
fsubrl
push
test
or
mov
sbb
shlb
cmp
fbld
repnz
or
sbb
das
add
lahf
out
js
jp
dec
sbb
inc
lds
xchg
in
imul
ja
mov
inc
ret
shll
notl
xor
test
jge
mov
cmpsl
inc
fidivrs
mov
sbb
mov
dec
js
les
or
add
jbe
xchg
ret
insb
inc
dec
mov
data16
pushf
jnp
test
cmc
iret
jle
adc
sub
xchg
bound
mov
mov
jg
add
pop
int
ret
xchg
lret
ret
xchg
jnp
test
cld
xor
mov
sub
jmp
les
add
gs
dec
hlt
sbbb
es
jle
jle
jmp
mov
xor
pop
imul
std
sbb
jle
dec
fs
ror
loop
cmpsb
xchg
cld
test
mov
push
popf
js
rolb
adc
pop
clc
add
mov
inc
lcall
in
mov
sub
in
jno
inc
jns
sub
adc
loop
jbe
mov
lcall
or
repz
push
push
add
xchg
jle
xchg
cmpsb
lea
cmp
mov
adc
test
mov
mov
lcall
sub
sbbb
fisubs
shll
mov
mov
sub
fs
jns
or
hlt
ret
outsl
cli
fdivl
shr
xor
mov
mov
mov
movsl
fwait
inc
or
jns
jae
div
pop
mov
add
pop
test
ror
lahf
push
add
cwtl
pushf
clc
push
xchg
aas
xor
mov
sbb
int
inc
mov
sbb
pop
fcmovnbe
inc
or
xor
xor
mov
mov
and
cmp
mov
adc
xor
cld
mov
pop
mov
data16
test
daa
lret
pop
insb
cmp
filds
aas
popa
icebp
push
notb
sbb
cmc
int
fiaddl
jge
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
mov
andl
push
andl
pushl
pop
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
xor
mov
xor
jmp
xchg
bound
pusha
ljmp
out
jmp
jg
jle
ret
daa
dec
push
jge
lea
jne
xchg
and
jl
scas
and
mov
mul
in
push
dec
fwait
xor
jne
shlb
outsl
push
or
aad
lds
or
fcomi
jecxz
xchg
pop
shll
mov
jge
leave
jmp
fstps
push
shll
imul
push
in
inc
insb
or
sti
jmp
mov
pusha
mov
mov
mov
sti
aaa
jp
sahf
stos
jg
rcl
stc
dec
mov
or
mov
pop
mov
insb
jmp
and
shrb
sub
js
push
je
out
pop
mov
pop
mov
outsl
mov
jp
pop
cmp
loope
addr16
sbb
jb
stc
and
ret
xchg
or
leave
lahf
xor
adc
lret
aam
mov
stos
mov
xchg
sub
ss
mov
dec
dec
popf
dec
xchg
in
in
lcall
xchg
fcompl
stc
lock
ja
sbb
sbbl
fisttpl
out
dec
cwtl
xlat
pop
sub
sahf
mov
in
rcrl
pop
mov
add
jecxz
loop
and
outsl
es
or
cs
jl
cmp
movl
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
jmp
icebp
mov
mov
cmp
xchg
dec
adc
fdivrl
jle
ja
xor
add
pop
inc
lock
xor
and
fst
push
xchg
sub
outsl
roll
rol
mov
mov
enter
cmp
cltd
bound
jae
xchg
sub
dec
pop
xchg
iret
imul
ret
es
aam
pop
jecxz
mov
sub
sti
add
sbb
insb
aam
push
push
out
in
je
mov
and
mov
pop
sub
xchg
stos
scas
int
cmpsb
jl
adc
stc
stc
pop
jne
popw
loopne
sub
insl
pop
outsb
sbb
pusha
test
xor
push
pop
add
xchg
adcb
addr16
mov
jo
cli
aas
add
jno
nop
jno
movsb
mov
sbb
jle
sbb
in
pop
mov
out
jnp
mov
mov
pop
mov
je
lds
cmp
mov
cmp
add
cmp
sbb
pop
mov
rcll
mov
xchg
mov
stos
pop
jb
sub
sbb
int
dec
cmp
and
and
jns
xor
jnp
aaa
adc
or
shll
jnp
ficoms
or
or
pop
test
aas
pop
fs
aaa
jmp
and
cld
out
mov
add
mov
mov
jmp
and
pop
xchg
adc
arpl
push
push
jle
fdivrl
jle
push
inc
jle
arpl
movsl
outsb
xlat
icebp
aam
or
push
stos
sbb
sub
aaa
testl
cmp
jae
test
add
mov
pop
scas
lods
fsubl
push
push
add
adc
stos
cli
sarl
mov
nop
fwait
jg
cmpsl
mov
mov
out
mov
jo
pop
add
push
add
sbb
das
or
data16
jbe
imul
incl
dec
mov
and
cmp
leave
es
std
push
ds
adc
and
std
sbb
ret
and
mov
xor
aad
test
rcrl
mov
icebp
es
test
aad
cltd
inc
jae
out
sbb
dec
inc
js
aas
testl
repz
push
outsb
ficomps
mov
mov
psubd
mov
addr16
jo
add
call
loope
jbe
xor
popl
and
dec
push
fs
adc
add
bound
pop
andb
mov
pop
decl
sub
lea
movsl
jae
cmp
call
mov
mov
cld
rol
and
roll
mov
jmp
mov
jmp
push
gs
movsb
fisubrs
jle
fdivrl
jle
repnz
in
icebp
aaa
fwait
xlat
inc
out
mov
inc
lahf
filds
dec
xor
mov
or
lahf
int
cmc
test
fisubrs
pop
mov
dec
inc
mov
or
or
push
adc
adc
add
testb
je
and
nop
or
lds
adc
jle
jno
mov
inc
loop
arpl
scas
fstpl
nop
sbb
pusha
jb
dec
jg
sub
push
pop
inc
cmp
adc
lret
sbb
pop
or
testl
jbe
repnz
dec
push
inc
mov
push
pop
lcall
add
cmc
mov
xchg
leave
repnz
and
mov
sti
inc
lods
adc
sahf
faddp
rcr
loop
dec
mov
push
cld
aaa
xorl
ljmp
rcr
cmp
pop
adc
jne
xor
sub
mov
pop
push
sub
iret
pop
adc
in
rorl
cmc
mov
lds
sbb
insl
jg
sub
ljmp
mov
imul
in
push
push
pop
mov
jg
jne
or
or
mov
clc
dec
popa
xor
test
mov
mov
mov
add
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
incl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
mov
subl
jmp
dec
pushf
push
in
imul
mov
adc
jle
jg
jle
addr16
fcoml
jnp
adc
jno
push
inc
xchg
icebp
leave
sbbb
pop
mov
loop
xchg
jae
pop
sbb
xchg
mov
inc
cmpsl
insl
das
pushf
sbb
vsqrtsd
xchg
push
imul
ror
jmp
cwtl
test
xchg
je
dec
push
push
push
jle
popa
aad
daa
cmpsl
mov
in
fimuls
cs
mov
fwait
and
xchg
lcall
outsl
mov
inc
arpl
jl
mov
xorl
pop
xor
subl
pop
jno
push
addr16
pop
pushl
imul
ret
cmp
scas
pop
cmp
mov
test
xor
xchg
imul
faddl
dec
testl
xorl
jbe
aaa
sbb
mov
xchg
leave
pop
mov
push
clc
addr16
inc
xor
mov
notl
add
mov
or
mov
jmp
sub
xchg
jns
jns
or
xor
fidivrs
jle
or
jle
jg
rep
ja
mov
mov
incl
aam
clc
adc
or
dec
or
imul
adc
adc
mov
jne
pop
push
out
inc
aad
cli
mov
mov
fidivrs
cli
pop
sub
leave
push
ss
inc
pushf
mov
or
lods
add
mov
sub
or
icebp
push
es
icebp
or
xchg
mov
sti
mov
adc
nop
ja
aas
cmp
cwtl
popf
mov
pop
and
js
xor
xchg
pop
mov
call
push
sub
push
enter
sti
jne
shlb
js
cmp
mov
dec
jae
jg
cwtl
cld
cmpsb
scas
int
and
cmp
xchg
out
rolb
sub
mov
sbb
cmpsb
and
test
sbb
lock
sub
stos
pop
lret
xor
cmc
push
movzwl
add
mov
movb
lea
and
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
mov
xor
orl
sub
mov
xor
jmp
adc
fs
jmp
ficoml
sub
or
jle
sbb
fisubrl
in
mov
call
ss
imul
cld
pshufw
pusha
jne
out
fisttpl
fst
add
xor
mov
out
in
push
jmp
jnp
es
repnz
jmp
mov
sbb
daa
mov
jp
adc
stos
add
inc
push
jns
cltd
sub
ret
jno
add
mov
call
mov
mov
ret
stc
cld
jp
rclb
mov
sub
call
mov
jg
sahf
sub
mov
shlb
xor
push
cmpsl
mov
inc
pop
enter
adc
jp
mov
pop
movsb
push
out
adc
sbb
in
out
mov
and
adc
adc
or
xchg
insl
stos
stos
test
xchg
jmp
aad
das
test
out
inc
push
pop
test
xchg
inc
clc
cmp
jo
inc
add
inc
lock
clc
xor
add
sbb
mov
addl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
sub
fwait
and
sti
lds
or
jle
out
add
mov
dec
xchg
ror
rcl
bound
repnz
add
jns
out
add
cwtl
add
dec
fstpl
xor
add
mov
or
push
and
xchg
les
and
lods
and
xor
repnz
xor
popf
std
or
push
mov
cmp
das
mov
repnz
xorb
push
pop
data16
fsubrl
fmuls
jg
das
nop
stos
call
jl
std
mov
movsl
push
loopne
call
ret
popf
notl
mov
mov
push
loop
push
cwtl
add
adc
lahf
xor
dec
sub
shrl
bnd
cli
iret
jno
aam
ds
nop
andb
loope
cli
test
xchg
add
mov
cmp
push
xor
xor
sub
gs
jae
cmp
inc
pop
inc
in
rdpmc
roll
cmp
je
jmp
xor
cltd
js
popa
cmp
and
xchg
cwtl
adc
jle
or
jle
ds
mov
fs
push
rcrl
dec
push
aas
push
aad
pop
inc
scas
imul
cmc
lock
ja
sarb
out
push
decl
add
cli
aaa
add
mov
jle
test
xchg
aam
pop
pop
xchg
and
enter
jl
jmp
mov
add
test
cmpl
xchg
lahf
pop
mov
stc
xlat
jp
scas
jg
fsubs
mov
pop
inc
imul
out
jne
push
lods
rcl
cmpsb
iret
out
dec
je
add
outsb
or
sbb
into
jge
mov
push
imul
cmp
cmc
fisubrl
xchg
icebp
orb
mov
mov
dec
inc
in
jg
das
pop
pop
lret
inc
lods
mov
repz
fnstsw
fldenv
push
jg
lahf
mov
jecxz
shrb
repz
nop
sarb
jnp
jl
imul
push
pop
mov
aam
xchg
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
jmp
fcoms
sub
clc
fcomps
iret
jge
sub
jg
jle
pop
or
jbe
sahf
pop
jecxz
lods
cmp
scas
xor
dec
repz
shll
iret
jge
sbb
or
pop
fidivrl
popa
pop
cwtl
shll
or
lds
sti
and
dec
add
push
pop
cmp
jmp
js
sbb
push
adc
subl
sub
lods
fs
das
pushl
jg
dec
dec
mov
xchg
xchg
adc
dec
xchg
jge
insb
mov
es
test
xchg
imul
in
stos
pop
jo
xor
mov
pop
fwait
scas
cmpb
adc
push
xchg
lods
pop
or
iret
pop
shlb
repz
test
imul
pop
sub
mov
or
inc
xlat
movsb
inc
movl
push
mov
test
into
aad
je
jmp
enter
cmc
sbb
inc
mov
scas
loopne
jle
cmpsb
adc
mov
bound
push
ja
mov
nop
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
inc
jno
icebp
stc
js
xchg
insb
lret
repz
das
jle
or
jle
pop
cltd
jns
jl
scas
jle
sbb
cmp
jmp
shll
icebp
jg
pop
aas
mov
test
cmp
and
jnp
mov
cmp
xorb
test
sbb
jne
inc
mov
aas
ds
xchg
push
push
xchg
dec
mov
iret
xchg
lcall
push
aas
jle
pop
dec
sub
movsb
cld
sub
xor
imul
int
clc
xlat
ljmp
sti
fsubl
push
jmp
xor
fcoms
mov
dec
xor
stos
mov
xchg
sti
mov
inc
mov
aaa
xor
out
cmp
lcall
adc
jecxz
xor
dec
push
inc
adc
in
iret
aad
jno
mov
jecxz
js
mov
mov
lock
add
rcll
push
jle
mov
mov
jmp
dec
sub
lock
or
xor
jg
jle
iret
cwtl
mov
lret
mov
sub
in
pushf
insb
push
out
sub
mov
sub
sarb
bound
xlat
xchg
gs
cmpsb
mov
in
jl
sub
jmp
ja
inc
outsl
pop
sub
ret
fwait
in
push
int3
cmp
scas
inc
mov
das
sub
jp
xchg
hlt
pop
lahf
jl
andl
mov
cmp
push
fwait
adc
xchg
cwtl
lods
je
mov
sbb
pushf
into
leave
sbb
xchg
push
mov
mov
repnz
mov
movsl
mov
gs
and
scas
test
inc
adc
clc
pop
add
pop
xchg
imul
test
repz
inc
mov
pmaxub
imul
xchg
pusha
sahf
xchg
adc
leave
stos
sub
cmp
roll
jge
fidivrl
cmp
mov
pop
rep
jno
sbb
sahf
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
jmp
jmp
loopne
mov
jmp
ret
sub
jle
jmp
int3
stos
or
push
nop
out
test
pop
push
xchg
fsts
or
fwait
movsb
push
pop
jno
add
cmpsl
push
fnstsw
out
mov
jbe
xchg
inc
and
or
fs
push
add
std
or
inc
or
std
outsl
add
xlat
and
test
mov
mov
xor
adc
push
dec
mov
pop
mov
mov
push
jns
stos
mov
popf
cwtl
lea
pop
cltd
xchg
push
ds
fdiv
mov
mov
xchg
xchg
lahf
pop
add
jae
dec
cmpsb
jecxz
in
ficoml
pop
jmp
ror
push
cltd
bnd
jo
or
insl
and
enter
push
fnstenv
stos
das
cltd
lahf
sahf
xchg
mov
movsb
pop
rol
or
fldt
aam
aad
hlt
pop
push
and
add
pop
xchg
or
loopne
outsl
xchg
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
jmp
lods
lock
sbb
daa
fiaddl
mov
or
jle
xchg
jge
insb
fsubrs
lret
and
add
mov
sbb
push
into
add
jg
icebp
mov
cmp
add
cmp
insl
dec
addb
mov
cs
and
aas
sub
xchg
jl
dec
daa
xchg
mov
sub
dec
es
mov
push
hlt
mov
lahf
xchg
call
fucomi
movsl
push
ret
dec
cmpsb
mov
adc
mov
mov
nop
pop
sbbl
in
xchg
pushf
ljmp
popf
pop
mov
out
push
sbb
xor
cli
mov
push
sub
mov
xchg
leave
jne
sub
out
mov
in
push
iret
daa
inc
test
bswap
out
jo
sbb
and
pop
or
test
mov
ret
loope
cmp
aas
push
cmp
add
push
pop
insb
cmp
inc
xor
fisubs
sbb
pop
mov
enter
sahf
ret
aaa
push
pop
sub
rorl
add
or
inc
std
decl
jmp
or
stc
mov
xor
and
or
jle
inc
or
sbb
mov
sub
jnp
cwtl
lcall
xchg
fbld
aad
mov
insb
int3
inc
sarl
adc
jne
push
xchg
or
or
es
cwtl
add
sub
cmp
clc
mov
and
idivl
mov
les
pop
popa
sbb
or
fdivr
inc
adc
jo
mov
mov
dec
ror
adc
mov
jle
shll
fbstp
mov
inc
int
and
mov
mov
pop
jmp
jb
imul
je
mov
xor
cld
aas
cmp
and
es
sahf
add
inc
enter
xchg
lcall
fld
adc
pop
xchg
xchg
jb
xor
fadds
dec
and
arpl
sub
lods
stos
jmp
rcll
mov
movsl
sti
cmpsl
adc
dec
dec
jae,pt
enter
sub
mov
ret
lcall
mov
pop
leave
ret
push
mov
push
not
movl
mov
mov
add
mov
adcl
xor
add
andl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
xor
adc
push
add
mov
mov
add
xorl
mov
mov
mov
sub
xor
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
jmp
andb
xchg
xchg
mov
xchg
xor
in
jle
cmpb
pop
test
xchg
fwait
icebp
sub
je
add
pop
cmp
inc
repnz
xchg
imul
push
pop
jp
mov
sbb
pop
test
and
sub
aas
arpl
xor
sarb
lods
in
pop
fstp
sub
cmp
icebp
sub
in
xlat
into
lret
jo
or
repnz
xchg
xor
movsb
pop
sub
dec
sahf
rclb
inc
dec
and
inc
mov
adc
sbb
sub
xchg
adc
nop
inc
cli
inc
mov
subl
adc
mov
jmp
es
mov
les
xor
and
jle
cmpb
jo
pusha
std
xor
jno
mov
leave
push
test
jb
jne
push
jecxz
jecxz
mov
jns
dec
mov
bound
or
add
cwtl
aad
sub
adc
inc
in
pop
pop
test
mov
jo
or
outsl
xchg
push
jno
mov
fnstsw
cld
xor
jne
push
push
mov
cwtl
jne
mov
inc
loope
ret
mov
jge
adc
out
aaa
shlb
ret
pop
cmp
ss
add
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
test
pusha
test
cmp
fnstenv
and
push
jg
jle
mov
pushf
adc
or
unpcklps
sub
lock
fwait
adc
xchg
cmp
arpl
hlt
lds
pop
ds
jmp
mov
xchg
sub
je
sub
ljmp
add
data16
mov
pop
pop
dec
repnz
xor
into
dec
ljmp
and
pop
mov
xchg
test
scas
mov
xchg
lock
xlat
clc
pop
add
outsb
test
inc
imul
je
lret
adc
ds
lods
icebp
push
mov
dec
pop
idivb
jge
int
lds
jmp
scas
push
mov
xchg
int
sub
es
jno
mov
mov
fwait
jb
jne
mov
mov
daa
cwtl
add
push
out
cwtl
das
xchg
xchg
mov
mov
and
jbe
adc
jg
loop
push
scas
insb
insb
xor
mov
cmp
fnsave
jb
shlb
mov
cmc
jne
sub
pushf
lret
cli
push
sbb
movl
or
mov
orl
mov
movzwl
adc
mov
subl
xor
adcl
add
movl
mov
xor
jmp
push
xlat
lcall
jl
out
movl
jle
sbb
fcoms
ja
aas
inc
mov
pop
addr16
das
cld
or
sub
call
repz
rcll
cmp
mov
insl
je
pop
lods
cli
sub
mov
jp
sahf
add
repnz
mov
and
in
jnp
xchg
int
lcall
inc
cmp
fdivs
jge
out
fstpt
sub
aaa
into
pop
or
nop
add
xchg
ficoml
sbb
push
lds
sbb
push
xchg
push
sbb
or
lahf
rcrb
dec
push
outsl
in
inc
cmp
arpl
pop
test
shll
addl
lods
decl
je
fimull
xchg
inc
xchg
inc
stos
adc
fwait
test
pop
add
and
pop
popf
cmp
je
in
pusha
lret
add
imulb
jo
dec
out
lods
pop
stc
ja
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
mov
jmp
add
cmp
jns
gs
movsb
or
push
daa
jle
push
jg
jle
mov
xchg
jo
repz
lock
loop,pt
faddl
and
iret
mov
in
inc
xchg
into
jle
mov
xor
push
xchg
mov
jecxz
inc
cmp
aad
xor
int3
pop
mov
shl
hlt
ljmp
aas
inc
mov
sub
cs
cmp
mov
sbb
push
push
dec
mov
lret
add
sbb
ds
mov
push
mov
push
dec
push
cltd
pop
mov
pusha
jge
mov
push
repz
sbb
inc
rol
popa
mov
sbb
aad
and
mov
mov
outsb
into
sub
inc
pushf
or
test
negb
sbb
pop
mov
fistl
lock
jmp
pop
mov
inc
mov
add
push
aas
fildl
add
pop
movsl
add
cmp
pop
jge
jp
bound
and
pop
ret
jns
rcr
mov
dec
das
aas
int
pop
jge
xor
mov
pop
and
lock
add
insl
mov
inc
or
adc
and
adc
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
orl
push
incl
push
mov
subl
push
push
xor
adcl
push
adcl
mov
xorl
call
cmp
je
xor
jmp
push
mov
mov
push
adcl
push
andl
push
andl
lea
mov
andl
push
negl
call
adcl
mov
mov
test
movl
je
notl
pushl
adcl
call
addl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
xor
shll
and
inc
mov
imul
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
add
or
mov
movl
mov
cmp
movl
jne
movl
inc
movl
cmp
jb
andl
push
subl
call
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
shll
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
and
mov
inc
imul
mov
mov
xor
mov
or
movl
mov
mov
mov
cmp
jne
inc
movl
cmp
jb
xor
sbb
shll
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
xor
imul
mov
sub
mov
and
or
mov
mov
movl
cmp
jne
movl
inc
cmp
movl
jb
xor
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
addl
shll
and
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
push
push
call
jmp
mov
imul
mov
or
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
mov
sub
imul
xor
shll
and
or
mov
xor
imul
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
or
or
mov
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
jb
xor
orl
shll
and
and
mov
adcl
imul
adc
mov
xor
or
xor
or
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
movl
jb
sbb
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
shll
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
neg
and
mov
neg
imul
xor
mov
adc
or
mov
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
xor
shll
and
mov
imul
mov
or
mov
mov
cmp
jne
inc
cmp
jb
inc
cmp
jb
mov
mov
movl
lea
mov
lea
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
cmp
mov
je
mov
xor
add
imul
mov
jmp
xor
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
movl
add
mov
mov
addl
add
sbbl
xor
cmp
movl
jne
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
push
sub
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
sub
movl
jmp
jmp
aam
push
pop
jnp
fwait
jne
sbbb
jle
jg
jle
sub
mov
pusha
and
adc
sarl
push
aad
cmpsl
mov
add
popa
lret
mov
xchg
lock
call
movsl
adc
dec
adc
call
sub
sti
add
dec
in
orl
out
scas
movsl
push
scas
dec
shlb
sbb
shl
and
repnz
xor
sahf
cmp
sbb
hlt
aaa
cmp
out
lods
clc
addb
dec
lods
js
ret
jne
cmp
pop
movsb
xchg
test
in
mov
jnp
xchg
dec
jne
xchg
pop
lahf
jno
lret
adc
adc
lret
in
add
mov
fsubr
daa
cmc
add
std
dec
xchg
pusha
fsts
or
sub
shr
sub
sub
cmp
cmp
sub
int3
xchg
mov
jne
or
lods
inc
or
sbb
subb
push
jmp
or
mov
fs
push
adc
dec
ret
pop
out
lcall
test
call
outsl
jmp
aad
repnz
aam
lcall
pop
xor
jecxz
pop
fistps
fbstp
fmulp
bndstx
pop
xchg
shlb
pusha
stos
mov
mov
and
cmp
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
jmp
addr16
mov
jl
arpl
sbb
mov
loopne
jle
lds
jle
andl
mov
jge
int
xor
xor
sub
sbb
xchg
sub
adc
mov
faddl
jae
outsb
push
ja
sti
jecxz
jbe
enter
xor
xor
dec
inc
jo
js
pop
testl
es
xor
mov
ret
jle
rorb
cmpsl
mov
xchg
in
lods
pusha
inc
cs
or
cs
cmp
in
and
sbb
stc
cmp
jbe
and
mov
cmp
cmp
in
arpl
sbb
inc
push
sub
adc
testl
sbb
sbb
mov
lret
inc
loop
aaa
jp
mov
add
out
mov
xchg
cwtl
hlt
jbe
push
cmp
and
cld
mov
jle
pusha
sbb
adc
pop
inc
dec
jnp
mov
and
jmp
loope
out
xor
lret
rorl
lods
daa
call
and
push
enter
jns
mov
add
mov
adc
aaa
mov
enter
adc
mov
jmp
push
add
imul
les
ret
add
jmp
jg
add
jns
cmp
loope
dec
cmp
lds
jle
mov
cmpsb
jmp
xorl
push
mov
and
sub
aaa
mov
enter
add
fstpl
les
lcall
shll
cld
or
cmp
mov
jbe
jle
push
mov
mov
push
sti
inc
xor
push
jb
inc
loopne
xchg
xchg
add
in
scas
cmp
push
or
push
adc
test
stos
das
insl
adc
rol
xor
xor
dec
fnstenv
add
pop
movsl
sahf
inc
xlat
scas
mov
leave
xor
insb
pop
sar
mov
or
mov
icebp
aad
jb
test
sbb
mov
ss
dec
pop
jecxz
pop
sbb
jbe
packuswb
and
into
in
clc
cmp
test
popa
lods
leave
hlt
enter
sbb
push
pop
push
int
mov
into
pop
int
and
xchg
xchg
or
sub
movsl
dec
insb
or
jbe
dec
repz
pop
and
or
add
pop
mov
mov
cltd
or
outsb
or
or
cld
mov
mov
or
les
gs
testb
and
stos
out
mov
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
push
mov
sub
cmc
sub
cmp
lds
jle
adc
lcall
fsubl
les
jne
sahf
jmp
inc
inc
mov
cli
fs
push
ds
or
ret
pop
lods
sarl
sub
sbb
dec
cwtl
js
outsl
lds
push
hlt
rolb
push
gs
pop
xchg
lea
dec
sbb
dec
push
push
data16
mov
into
jno
adc
lods
in
stos
insb
int3
mov
cmp
mov
jbe
inc
mov
mov
push
add
inc
fwait
and
fmul
dec
lea
or
lods
ss
cmp
lcall
mov
cmovo
pusha
loopne
inc
mov
sbbl
mov
popa
ret
pusha
fcomip
push
fnsave
mov
mov
jp
adc
or
mov
jb
fwait
daa
xor
and
xchg
mov
or
sub
loopne
mov
mov
pop
cwtl
mov
ljmp
out
jg
push
inc
leave
lcall
sbb
lcall
ror
mov
pop
adc
addr16
mov
cmp
cmc
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
addl
movl
movl
decl
mov
push
mov
xor
xor
jmp
je
jg
addr16
test
enter
jle,pt
mov
jle
sbb
jmp
in
out
pop
xlat
sbb
ja
or
push
es
stos
fmull
dec
sub
in
push
sbb
shlb
add
xor
mov
in
sahf
popf
sahf
cmpsb
mov
in
jns
lret
mov
adc
push
adc
negb
pop
rcl
push
fdivr
fcomps
and
mov
out
xor
jmp
inc
lods
adc
xchg
mov
aad
cs
inc
arpl
sbbl
pusha
shl
dec
xlat
sbb
leave
jns
mov
jns
xchg
or
lock
mov
sub
add
sbb
dec
add
pop
mov
add
andl
mov
movl
mov
addl
push
push
orl
test
je
mov
mov
mov
movzbl
and
imul
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
or
mov
mov
movl
xchg
mov
mov
or
sub
and
xor
adc
mov
mov
add
mov
and
jmp
scas
mov
imul
pop
pusha
fisttps
fdivs
jle
jle
jle
mov
push
ja
inc
xchg
inc
andb
jns
mov
jle
jmp
pop
mov
inc
fwait
push
icebp
mov
iret
cmp
outsb
push
sbb
pop
dec
mov
xlat
push
lods
dec
out
into
cmp
addr16
lea
dec
stos
adc
dec
mov
or
leave
sub
xor
adc
push
cmp
sub
bound
add
sub
inc
sti
jge
lea
loope
test
out
call
into
sub
jmp
insb
pop
movb
jo
sub
or
loope
loope
nop
je
sub
push
jno
pop
push
gs
mov
imul
mov
mov
movzbl
and
jmp
mov
stos
popa
jns
in
mov
push
xor
cmp
jle
jle
jle
lock
loop
imul
jae
jle
cmp
adc
jmp
sub
cmpsl
lds
xor
push
aad
std
mov
jp
xor
scas
xchg
fidivrs
inc
enter
stos
push
or
push
lock
mov
orl
jmp
lock
cmp
jp
orb
xchg
imul
cmp
or
arpl
xorb
add
mov
dec
cs
inc
sbbl
sbb
xchg
pop
sahf
aam
lods
rorb
movsb
aad
sub
jb
les
jmp
lahf
cld
in
lcall
jb
int3
adc
std
push
inc
add
stos
inc
add
enter
cmp
add
not
mov
mov
je
mov
xor
mov
xor
andl
add
movl
cmp
jmp
push
pop
popf
aam
fs
test
xor
mov
mov
jle
mov
loope
dec
sub
mov
dec
pop
and
xchg
and
int
cwtl
or
adc
pop
inc
fidivl
cmp
inc
stc
fwait
sahf
push
cmpl
inc
das
mov
add
cmpsb
push
lods
shll
xor
adc
sub
jnp
pop
in
pop
lods
cmc
in
inc
pop
lahf
stos
mov
aad
pop
add
mov
cmpb
sub
fdivrl
jbe
or
popa
mov
push
cmpsb
jg
dec
pop
sbb
pushf
cli
int3
movsl
sbb
mov
sub
test
and
data16
push
pop
xor
imul
and
lcall
or
and
iret
jne
pushl
movl
call
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
mov
not
mov
xor
subl
add
cmp
jmp
add
or
in
loope
js
dec
inc
cmp
jle
mov
jle
jo
in
repnz
xchg
mov
jecxz
lods
popf
lcall
ret
ficoml
or
loop
mov
mov
sbb
popa
pop
repz
jg
subl
mov
xchg
pop
or
sub
dec
jle
push
mov
in
into
jg
mov
pop
cmpsb
cs
fwait
iret
in
sub
popf
insb
hlt
xchg
pop
rolb
xchg
test
adc
pop
push
shll
sbb
test
ja
inc
jo
test
push
mov
sub
pusha
dec
push
pop
imul
pusha
xchg
sub
xlat
rcr
cmpsl
cs
addr16
ss
jae
test
add
sbbl
pushl
jmp
sti
loopne
lock
cltd
sti
jns
cmpsb
pop
out
icebp
out
jmp
jle
jle
mov
sbb
jo
pusha
adc
shll
leave
mov
sahf
mov
outsb
loopne
out
and
and
fdivrp
xchg
push
jae
pop
sbb
loope
cmp
out
test
lods
sbb
rcr
es
xor
loop
pop
cs
pop
and
das
push
int3
add
xchg
nop
hlt
mov
leave
cmp
inc
add
cmpb
pop
xchg
aad
and
push
and
lahf
lock
movsb
jno
fs
jmp
jo
add
sub
jecxz
and
mov
jbe
sub
pop
mov
inc
lret
inc
inc
jns
insl
pushl
call
or
mov
mov
adc
mov
adcl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
movzbl
sbb
mov
xor
or
xor
xor
sub
sub
mov
subl
mov
addl
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
jmp
mov
or
pop
pop
aas
mov
pop
and
jle
mov
jle
cli
xchg
imul
test
xorl
rcrb
mov
and
scas
addl
jne
cmc
outsb
mov
or
cwtl
int
jnp
mov
dec
imul
cmp
mov
pop
jno
mov
xchg
mov
dec
sar
pop
insl
repnz
dec
fdivrl
arpl
fnstenv
sbb
mov
xchg
mov
add
xchg
sub
or
hlt
sbb
rcl
in
jmp
pop
xor
outsb
pop
jecxz
pop
bound
repz
fmulp
pop
inc
sahf
adc
and
push
jo
ja
int
pop
mov
pop
out
test
js
lds
dec
aam
inc
in
mov
add
xor
mov
mov
mov
add
jmp
pop
pusha
pop
movsb
jns
out
cmpsb
push
jg
inc
xchg
dec
into
jns
jle
mov
jle
stos
loope
cwtl
push
mov
cmpsb
adc
jbe
insb
mov
and
jle
into
hlt
aas
adc
sub
add
mov
mov
dec
cmp
cmp
pushf
adc
ror
sbb
out
cmpsl
popf
cmp
sti
push
pop
push
or
icebp
fldl
mov
sbb
sahf
fstp
jo
cmpsl
hlt
push
mov
or
jo
jle
dec
or
sbb
cmp
xchg
add
gs
loop
jle
cmp
adc
scas
mov
cmpsb
mov
cld
add
adc
sbb
arpl
push
mov
xchg
pop
jns
je
loope
mov
rclb
lea
push
or
nop
mov
aaa
lds
imul
adc
jnp
adc
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
jmp
test
scas
pop
cmpsb
jns
and
lock
inc
sbb
jle
jle
push
inc
xchg
ljmp
out
pop
dec
push
push
cmp
adc
ds
imul
mov
mov
pop
inc
hlt
test
sbb
cli
psrld
scas
into
addl
jg
inc
loop
lea
mov
inc
mov
dec
pushf
adc
pop
popa
aad
scas
sahf
test
cmp
ficoms
popf
xchg
xor
aad
repnz
fmuls
inc
mov
in
mov
and
cmp
pushf
lods
mov
cwtl
mov
xor
jne
mov
movsb
pop
inc
sbb
xchg
add
push
mov
lahf
xor
mov
add
fnop
or
add
fnstenv
push
xchg
add
push
daa
sub
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
pop
imul
mov
jnp
push
pop
and
aas
xchg
xchg
mov
jle
mov
jle
push
fidivrl
pop
mov
ret
jge
adc
sti
cmp
adc
lea
out
cmp
add
jne
in
lock
add
pop
add
push
sbb
subb
cmp
inc
inc
adc
cmpsl
test
push
int
mov
std
mov
cmp
stos
cmp
adc
pushf
mov
mov
stos
cmpsl
dec
cmc
xlat
adc
pop
fmuls
pop
jbe
sub
sbb
adc
rcrb
mov
scas
sub
pop
arpl
pop
sub
jne
add
mull
cmp
outsl
fstpt
ja
je
cmp
jecxz
or
loop
jg
pop
ljmp
int3
pop
dec
les
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
xchg
adcl
mov
insl
daa
cwtl
ret
jle
mov
jle
and
jg
ja
cmpb
mov
lret
cmpsb
mov
ja
cwtl
daa
test
mov
mov
cwtl
mov
or
aad
shl
outsb
mov
jl
in
shrb
sbb
aad
rorl
dec
popf
lcall
movsl
sub
xor
icebp
sbb
inc
dec
dec
push
xchg
push
jmp
pop
insb
add
ret
dec
mov
arpl
out
push
loope
fwait
and
stos
imul
lret
push
mov
mov
mov
push
daa
daa
insl
outsb
add
jl
roll
adc
nop
test
mull
lds
and
je
mov
mov
pop
xor
fsubp
add
mov
fwait
cmp
shlb
sarl
ret
or
add
mov
jmp
decl
xchg
hlt
jne
and
aaa
jle
mov
jle
lret
loop
and
xor
repz
pop
pop
or
lods
data16
insb
add
jge
fiadds
sbb
and
xlat
mov
jnp
iret
xchg
ljmp
add
pusha
sub
enter
out
data16
incb
jle
cmp
frstor
in
lea
es
jmp
mov
adc
aam
cld
jg
sub
add
test
sti
adc
dec
mov
jmp
idivl
cmp
and
sub
sbb
shll
cmp
jo
and
pop
dec
cmpsb
enter
rol
mov
add
and
bound
mov
loopne
add
inc
loop
xchg
imul
dec
jno
aaa
jle
mov
jle
push
mov
ja
mov
push
rolb
ja
mov
mov
movsb
sub
jbe
cmp
scas
sbb
or
push
mov
movsl
xchg
mov
cmp
dec
sub
pusha
pop
sbb
lahf
pop
dec
popa
xchg
aad
xor
sarb
dec
xor
lods
xchg
adc
cmp
popf
push
xorl
and
mov
ret
xor
sbb
or
stos
movsb
sub
test
adc
add
mul
mov
cmc
sub
jle
je
mov
and
inc
cmp
ret
test
xor
or
clc
xor
sti
nop
lret
arpl
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
jmp
pop
sub
sub
jne
stos
pop
adc
jle
mov
jle
inc
jno
push
cmpsl
mov
lea
adc
in
jg
cs
in
fistpll
xor
movsb
inc
xor
dec
jge
ss
cmp
push
enter
mov
sarb
jno
cmpsl
test
icebp
push
xchg
fisttps
mov
push
jp
push
repz
rolb
enter
adc
push
xor
mov
push
dec
ljmp
xlat
aaa
aad
lock
int
lcall
or
jo
out
stos
mov
jecxz
bnd
sub
mov
movsbl
pop
ljmp
aam
xor
scas
lods
xchg
iret
pop
add
dec
sbb
pop
jge
cltd
jno
repz
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
jmp
mov
pop
mov
xchg
adc
xor
jle
and
lods
in
movsb
mov
cltd
push
int
adc
rdpmc
cmp
outsb
jmp
add
subb
jnp
repz
popf
and
push
xor
cld
mov
add
and
xor
xor
into
jecxz
dec
lret
popa
xor
out
fsubp
insl
xor
pop
outsb
adc
push
mov
mov
adcl
iret
mov
rclb
fisubs
pop
sub
fimull
fisttps
fisttpll
xor
das
pshufw
mov
out
pextrw
cmpsl
mov
xor
fwait
lea
lock
vfnmsub231ps
and
sub
aam
pop
icebp
cmp
push
push
cltd
mov
or
enter
std
decl
add
mov
jmp
mov
or
leave
jns
or
cmp
jle
mov
jle
cmp
and
add
xchg
push
cmp
and
out
sub
outsl
push
jbe
out
pop
dec
hlt
aad
sub
out
pop
lods
lods
cli
jae
sub
xchg
adc
movsl
in
outsl
mov
jnp
add
jg
dec
int
pusha
jnp
loope
xor
daa
data16
jle
faddl
and
testb
inc
inc
nop
push
fwait
cmc
lahf
mov
and
or
pop
push
dec
stos
dec
add
mov
jnp
cmc
loop
xor
lods
sarw
xchg
pushl
dec
subb
inc
in
dec
scas
inc
jae
leave
repz
and
pop
outsb
mov
jo
add
or
addb
cld
xor
add
mov
xor
lea
add
jmp
sbb
cmp
pop
inc
and
gs
mov
lret
jle
mov
jle
mull
mov
ljmp
adc
and
jmp
add
fldenv
stc
dec
cltd
push
pop
sbb
push
xorl
jns
sub
cwtl
and
mov
fstp
pop
cmpsl
imul
fadds
inc
lds
jnp
lds
inc
out
inc
mov
jmp
lods
rcrl
mov
and
jp
ret
jmp
into
mov
in
dec
jge
pop
or
imul
fdivrs
mov
test
pop
lods
out
jecxz
xor
loope
ss
pushf
push
dec
mov
daa
inc
dec
scas
pop
ds
dec
pop
es
xor
call
xor
jmp
popa
jno
jnp
jnp
or
mov
jle
mov
jle
xor
aad
mov
repnz
sti
aaa
int3
das
mov
sbb
jae
dec
pop
mov
pop
out
xor
sub
jecxz
lock
adc
sbb
push
cmpb
mov
loopne
ds
ljmp
xchg
pop
push
sub
fistpl
push
push
mov
mov
les
data16
cltd
mov
mov
clc
dec
mov
sahf
je
and
sbb
sbb
cmpsl
scas
xor
enter
icebp
pusha
test
mov
insl
xchg
lret
pop
lds
icebp
jecxz
push
cmp
dec
testb
test
dec
jp
push
jo
xlat
mov
inc
cmp
jmp
test
xchg
push
stos
push
push
mov
enter
jle
jle
jne,pn
popa
stc
neg
push
arpl
push
mov
aad
push
lods
xlat
push
adc
or
loope
jecxz
pop
clc
out
aam
mov
add
fstl
mov
mov
or
jne
push
out
mov
mov
das
out
mov
ret
iret
mov
add
jmp
mov
mov
pop
imul
aam
sbb
clc
push
loop
mov
cld
leave
jp
xchg
fwait
jle
or
cmp
iret
inc
ret
jle
stos
test
pop
jo
aas
add
mov
mov
sahf
and
sti
mov
mov
scas
sub
cmc
mov
std
call
push
sbb
test
add
add
add
inc
xchg
sub
xchg
jmp
xchg
out
jnp
jns
add
call
fxch
jle
mov
jle
mov
pushf
dec
outsb
or
inc
jmp
xchg
bound
mov
mov
movsb
aam
repz
clc
ret
je
in
aas
pop
push
popa
xrelease
test
call
jp
add
aad
jp
out
out
inc
jno
pop
jne
notl
sub
mov
mov
das
inc
and
ret
test
push
js
xor
sbb
insl
add
movsl
mov
dec
cltd
ret
lods
or
lds
sub
out
test
lods
push
hlt
xchg
test
dec
sub
jg
inc
lret
add
sub
sbb
arpl
sarl
or
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
