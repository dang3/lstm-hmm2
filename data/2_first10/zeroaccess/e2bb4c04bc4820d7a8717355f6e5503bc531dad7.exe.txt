push
mov
sub
xor
mov
mov
cmpl
movl
mov
mov
mov
jmp
movl
jne
push
push
push
push
push
push
pushl
push
call
xor
subl
sub
neg
movzwl
sub
mov
mov
sub
inc
push
mov
mov
sbb
addl
mov
orl
movzwl
adc
mov
orl
and
mov
cmpl
mov
mov
not
jmp
movl
mov
jl
push
push
pushl
pushl
push
push
call
xor
dec
add
sbb
mov
add
add
mov
sub
mov
cmpl
mov
mov
jmp
movl
mov
jb
pushl
push
call
andl
mov
mov
or
sbb
orl
mov
sub
mov
sbb
add
mov
orl
orl
dec
lea
mov
mov
xor
mov
mov
add
mov
sbb
mov
and
mov
and
mov
and
shrd
shr
mov
xor
mov
adc
mov
jmp
stos
xchg
sarl
cmp
and
and
pop
mov
movlps
sbb
dec
mov
stos
cmpsb
or
lods
add
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
cmpl
dec
in
enter
fisubrl
sbb
jl
mov
pop
test
xor
sbb
add
lcall
scas
test
jl
je
sub
leave
or
sbb
aas
leave
fwait
dec
add
orl
movsw
jge
xchg
bnd
push
cwtl
or
or
xchg
test
xchg
push
sbb
fbstp
hlt
sbb
out
pusha
mov
mov
add
mov
sub
mov
stc
or
push
or
mov
out
fldcw
movsl
and
sbb
out
mov
loopne
inc
cmp
dec
cli
test
out
jo
ss
cmp
cmp
sbb
cmp
scas
shr
in
jnp
dec
ds
mov
leave
shll
sbbl
imul
movsb
ss
loopne
xchg
int3
or
push
mulb
shll
sub
mov
mov
fstpt
and
xlat
or
rolb
xor
lock
xchg
popf
nop
sub
addr16
inc
les
cld
adc
jge
jmp
or
cmpsb
popa
ficoms
pop
ja
or
xor
subl
xor
jmp
mov
push
xchg
mov
movlps
movlps
and
xchg
inc
imul
dec
out
lret
ja
hlt
mov
push
popf
dec
inc
jae
std
mov
add
sub
and
imulb
pop
add
push
ds
nop
mov
sub
push
xchg
daa
sbb
and
lock
adc
ja
xchg
pop
sti
cmp
mov
inc
sbb
sbb
scas
lods
mov
push
xchg
cmp
sbb
mov
sub
mov
stos
mov
aaa
shl
sbbl
sbb
scas
ljmp
mov
mov
mov
arpl
mov
and
sbb
inc
jmp
incb
cwtl
add
add
bnd
les
sbb
nop
mov
mov
inc
addr16
shll
xchg
sbb
aam
fwait
lret
cld
jb
jo
outsl
jnp
mov
mov
xchg
fildll
lods
xor
xchg
mull
sbb
jg
xor
cmp
enter
lds
push
pop
cmc
pop
adc
pop
shll
imul
daa
pop
repnz
xchg
enter
pushl
je
pushf
xor
xor
loopne
xchg
bound
cmp
out
cmpsl
movsb
bound
popf
sub
push
mov
movsb
xlat
cmp
mov
xchg
mov
stc
adc
cltd
mov
adc
ljmp
and
and
sub
pop
jge
inc
xchg
xor
aaa
mov
xchg
lods
or
pop
adc
mov
hlt
mov
mov
imul
jnp
push
adc
push
daa
pop
cmpsb
dec
sbb
cwtl
test
cmc
and
mov
dec
mov
pop
mov
test
and
mov
mov
test
mov
movl
movl
adcl
movl
movl
and
movl
movzbl
xor
movl
subl
movl
cmpl
mov
movl
mov
movl
jmp
mov
je
push
push
push
call
andl
andl
orl
andl
sub
adcl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
pushl
call
subl
orl
or
xorl
andl
sub
adcl
xor
dec
movl
and
movl
movl
mov
add
movl
movl
movl
movl
and
movl
cmpl
movl
movl
movl
movl
jmp
mov
mov
jb
pushl
push
call
addl
adcl
addl
andl
orl
neg
movl
xor
movl
adcl
movl
sbb
movl
movl
movl
sbbl
movl
adc
mov
orl
shl
mov
adcl
push
push
push
push
subl
call
mov
xor
mov
negl
xor
cmpl
mov
mov
jmp
movl
mov
ja
push
push
pushl
pushl
call
adc
adcl
adc
or
mov
subl
jmp
jno
sub
cmp
push
pop
js
mov
insb
or
adc
movlps
mov
xchg
sub
dec
in
sti
loope
fs
add
lods
sahf
push
dec
jbe
push
lret
inc
mov
pop
jno
adc
fsubrl
mov
shl
and
xlat
pop
or
dec
adc
in
test
std
popf
ret
fwait
ss
cs
jle
cltd
push
xor
pop
mov
pushf
jne
in
out
les
fwait
cmp
mov
cmp
ss
push
mov
adc
push
scas
pop
or
adc
sbb
repnz
push
shl
push
jle
sub
inc
xlat
mov
push
cmp
lods
sub
mov
mov
inc
fstpl
sub
sbb
fisubrl
jp
cwtl
pop
scas
popa
mov
xchg
dec
loopne
xchg
daa
scas
or
test
xor
fistpl
mov
cmpsb
jge
shlb
cmp
mov
es
outsb
nop
fiaddl
xor
das
mov
pop
push
dec
imul
xchg
pop
push
mov
pop
jno
mov
mov
add
hlt
pop
push
pcmpeqw
cwtl
jo
push
js
dec
mov
and
xor
daa
inc
push
xchg
loope
jo
lock
pop
mov
lahf
fimull
lock
and
aam
cmp
xor
popf
sub
jne
ds
mov
and
imul
and
jne
lock
stos
push
cmp
mov
cmp
fsubrl
stc
pop
lret
xchg
mov
or
sub
mov
mov
dec
xchg
adc
jle
sbb
scas
jns
repz
lods
mov
out
lret
mov
pushf
inc
xchg
sets
test
push
add
fmull
mov
push
dec
arpl
lock
in
dec
sub
mov
sub
cmpl
notl
mov
jmp
movl
movl
jbe
push
pushl
pushl
push
pushl
call
adc
add
movzbl
xor
mov
sbb
adc
sbb
xorl
mov
lea
sbb
mov
mov
adcl
or
andl
and
cmpl
movl
mov
mov
jmp
movl
jg
push
push
call
adc
xor
xorl
and
orl
cmpl
movl
mov
movl
jmp
movl
jb
pushl
push
pushl
push
pushl
pushl
call
dec
movzwl
adc
addl
add
and
movzwl
or
mov
inc
not
mov
xorl
or
notl
xor
movl
cmp
jne
mov
adc
mov
jmp
push
sbb
xor
popf
mov
adc
movlps
inc
mov
cs
dec
repnz
xchg
out
dec
inc
sbbb
outsb
adcl
and
dec
shlb
scas
mov
pop
mov
push
fcmovnb
lock
mov
mov
pusha
push
cmp
cmp
mov
sbb
cmc
idivb
inc
sbb
pop
mov
popa
stos
or
push
pushf
shll
into
ja
push
hlt
pop
out
rclb
pop
dec
xor
test
jne
sbb
popf
adc
or
mov
jle
jae
cmc
je
es
ja
faddl
push
sbb
jg
mov
lret
lea
cmpsl
push
adc
insb
int3
pop
adc
mov
inc
sbb
ljmp
push
mov
fwait
sbb
sub
inc
xchg
leave
mov
mov
cmp
and
pop
aas
pop
loopne
ss
pop
sub
sti
inc
std
mov
xchg
das
mov
xchg
dec
mov
enter
mov
sub
fdivrl
lea
pop
int3
sbb
pop
ja
xchg
inc
fwait
push
or
and
mov
mov
stc
mov
lock
xor
sub
dec
mov
movups
jne
lods
mov
or
jo
xor
and
mov
movsb
cs
mov
cmp
jle
inc
call
nop
fcmovbe
mov
test
fmuls
repnz
cwtl
aaa
pusha
popf
ret
ljmp
jecxz
inc
int3
sub
fs
add
outsb
ds
adc
xchg
sbb
orl
cmp
outsb
mov
shlb
adc
jne
les
insl
jae
dec
push
and
es
ja
push
ror
in
cmp
add
or
add
lods
roll
cmp
add
movl
movl
movzbl
jmp
movl
mov
jl
push
push
push
push
push
call
dec
xor
add
xor
xor
adc
and
orl
movl
shr
sub
mov
mov
shl
addl
xor
andl
xor
subl
or
mov
mov
cmp
jne
mov
adc
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jle
pushl
pushl
pushl
push
call
add
xor
add
or
xor
adcl
neg
movzbl
add
mov
sbbl
xor
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
push
push
pushl
call
xor
sbbl
and
movzwl
xor
mov
adcl
sbb
mov
mov
shrd
subl
mov
cmpl
mov
mov
mov
mov
jmp
mov
mov
jge
push
push
push
push
push
push
push
call
adc
notl
sbbl
mov
or
decl
mov
xor
shr
xorl
jmp
and
aaa
and
ljmp
insb
add
adc
movlps
mov
adc
insl
mov
sbb
inc
aad
addb
jg
iret
xor
mov
stos
mov
xchg
or
mov
test
jne
jb
sbb
mov
sbb
push
dec
mov
enter
arpl
adc
pop
inc
packuswb
dec
sub
daa
cmc
rorb
sub
pushf
sahf
les
test
movsb
mov
insl
jecxz
ja
xor
sbb
dec
hlt
aam
adc
push
inc
push
stc
shll
insl
imul
fisubl
push
pop
mov
cwtl
pop
push
xor
xor
mov
jecxz
adc
pop
adc
and
dec
mov
lcall
sub
xor
int3
js
jl
dec
call
sbbb
jne
push
push
and
sub
adcl
filds
xchg
imul
mov
popa
aaa
aad
inc
xor
adc
sbb
xchg
data16
sbb
shll
jl
xor
repnz
shll
jp
and
mov
scas
out
js
mov
or
cmpsb
rcll
xor
push
sub
movsb
xor
adc
jle
mov
or
imul
stc
movsb
movsl
pop
cwtl
and
dec
mov
xor
arpl
aaa
cltd
fsubs
sbb
lds
push
pop
sbbb
cmp
jle
test
addr16
pusha
movsb
cmpsl
addr16
sbb
sbb
dec
mov
into
fcmovu
lcall
adc
inc
stos
dec
xchg
subb
pop
insb
fidivrl
out
fld
sub
xchg
outsb
call
pop
gs
in
loopne
sub
out
mov
out
adc
inc
mov
notl
xor
orl
or
adcl
shl
sub
mov
mov
sbbl
mov
xor
add
mov
mov
cmpl
notl
movl
jmp
mov
jg
push
call
negl
xorl
sbb
sbb
add
mov
or
mov
jmp
test
and
and
test
ljmp
insb
call
adc
movlps
sbb
mov
cwtl
sub
or
fildll
mov
lret
arpl
into
fcoml
bound
mov
mov
xlat
dec
jno
push
mov
push
clc
in
dec
push
leave
in
pop
xor
mov
dec
xchg
arpl
lahf
cwtl
add
ja
std
outsl
mov
dec
aas
jmp
add
cmp
xor
test
jbe
sbbl
insl
push
in
es
cmp
cwtl
stc
cmp
jle
dec
push
xchg
clc
pop
gs
mov
call
sub
out
push
cmp
test
xor
orl
xlat
mov
and
lea
mov
movsb
arpl
mov
dec
mov
dec
add
rorl
mov
jecxz
movsl
std
and
push
sbb
arpl
ret
imul
sub
push
arpl
faddp
add
sub
ret
xor
outsb
faddl
stos
push
sbb
call
in
jnp
ret
pop
lret
stos
insb
pop
call
mov
mov
mov
and
sahf
stos
push
xchg
mov
aas
and
inc
out
sbb
lret
pop
scas
sub
mov
pop
stos
pop
call
int
push
push
jae
leave
loop
imul
sbb
pop
adcl
int
stc
inc
out
fsubp
stos
and
mov
push
sub
xchg
mov
testl
sti
inc
mov
cmp
fiadds
xor
add
test
inc
jns
jecxz
std
adc
sub
add
mov
cmpsl
add
dec
pop
in
pushf
lds
notl
lea
add
jmp
inc
add
adc
sbb
mov
shrd
shr
adc
mov
xorl
mov
dec
xor
shl
mov
adc
mov
xor
cmpl
movl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
add
xorl
or
movzbl
or
mov
mov
or
mov
addl
or
movzbl
and
mov
mov
xor
or
add
mov
shrd
orl
shr
adc
mov
mov
cmpl
movl
mov
jmp
movl
jg
push
pushl
push
push
call
dec
sub
sbb
decl
sbb
cmpl
mov
movl
jmp
movl
jae
push
call
sbbl
and
adc
mov
add
add
or
sbbl
adcl
mov
movl
xor
xor
or
shl
lea
mov
mov
adcl
shrd
shr
cmpl
movl
mov
jmp
mov
movl
ja
push
call
sbb
mov
sbb
inc
inc
sub
subl
cmpl
mov
mov
jmp
mov
jl
pushl
call
xorl
add
xor
xor
xor
sub
or
mov
mov
mov
or
xor
mov
or
mov
xor
or
addl
shl
imul
cmpl
movzbl
mov
mov
movl
jmp
mov
ja
pushl
push
pushl
push
pushl
pushl
push
call
movzwl
sbb
addl
or
sbb
and
mov
cmpl
mov
mov
mov
jmp
movl
je
call
sub
orl
and
sbb
sbbl
decl
subl
xor
mov
shrd
orl
mov
jmp
xchg
arpl
pop
inc
push
pop
pop
adc
in
jle
inc
pop
lods
sti
sti
adc
movlps
fcomps
lea
sub
xchg
mov
push
cmp
insb
push
and
loope
jge
mov
mov
out
jae
pop
outsl
ret
cmp
mov
les
loop
inc
stos
addl
mov
push
mov
fs
stos
pop
mov
push
lods
fidivl
cmp
adc
xchg
jbe
xchg
repz
inc
push
fistl
jecxz
mov
bound
jns
mov
js
mov
clc
jmp
add
inc
mov
add
je
test
in
jbe
std
inc
fmull
sbb
and
addr16
inc
test
mov
ss
mov
xor
insb
mov
mov
fsubs
jp
push
mov
loopne
ss
jbe
out
enter
lods
add
sbb
push
shlb
popf
aaa
add
gs
imul
cs
mov
aad
sbb
mov
out
in
int3
ret
ret
roll
inc
sbb
js
loop
and
push
pop
popa
out
xlat
add
test
add
sbb
aaa
les
lea
gs
mov
pop
inc
in
jae
jno
and
jl
inc
mov
imul
jb
sti
shlb
cmp
out
mull
pop
pop
in
or
shlb
cmpsl
push
das
push
sub
in
lock
hlt
and
jmp
xadd
mov
je
cs
cmp
lret
cmp
push
loop
sub
and
and
adc
dec
stos
ret
dec
inc
loop
xchg
out
mov
mov
shrb
mov
dec
pop
inc
xor
xchg
lret
push
push
mov
pusha
lock
push
in
xchg
jne
or
add
inc
add
jge
sbbl
shr
mov
mov
orl
xor
subl
or
addl
shl
negl
sub
movl
mov
jmp
add
add
and
std
jle
notl
adc
movlps
icebp
fs
jmp
inc
mov
test
add
stos
int3
cmp
mov
cmp
fcoms
mov
add
aas
mov
xchg
pop
and
arpl
mov
loopne
sbb
daa
aas
movsb
iret
insb
ds
xchg
dec
push
faddl
jp
cmc
sbb
and
aad
scas
icebp
icebp
scas
repz
xor
and
push
out
ficoms
test
les
out
mov
inc
mov
rcrl
or
test
cld
inc
mov
cmp
std
stc
imul
sub
mov
addb
std
sbb
addr16
rclb
out
sbb
clc
faddp
loope
add
xor
sbb
inc
popa
jb
add
mov
mov
cmp
mul
movb
xchg
repz
xor
js
and
lret
and
xchg
lcall
xchg
mov
movsb
lret
inc
imul
movsl
in
mov
icebp
arpl
js
jb
inc
fcoms
add
gs
mov
sbb
ljmp
mov
lds
push
mov
lret
jmp
sti
xchg
test
call
adc
jle
push
or
lret
test
mov
lds
fs
jno
dec
jg
mov
inc
jne
lret
in
pop
pop
push
data16
rolb
mov
jle
mov
pushf
in
pop
mov
cmpl
ret
sbb
inc
xchg
mov
shrb
test
cmp
mov
shl
jle
jne
sub
cld
daa
xchg
jl
cmpsb
andb
popf
fildll
test
jle
lods
jns
and
and
dec
shl
add
sub
adc
inc
add
sub
add
mov
orl
mov
adcl
shrd
mov
or
mov
sbbl
xor
orl
shl
xor
or
shr
mov
cmpl
not
not
mov
jmp
movl
jb
push
pushl
call
not
inc
sub
mov
and
mov
mov
sub
sub
addl
and
movl
mov
sub
mov
xor
mov
shrd
shr
mov
mov
adc
mov
mov
mov
movl
xor
xor
andl
or
shl
imul
sub
jmp
or
mov
mov
xor
mov
addl
shrd
mov
mov
sbbl
xor
sbbl
shl
xor
or
sbbl
shr
mov
adcl
mov
mov
movzbl
sbb
mov
addl
shrd
shr
mov
jmp
cwtl
mov
lcall
sbb
stos
repz
movlps
push
push
test
jb
aas
pop
xlat
xor
enter
xor
dec
test
sar
xor
popf
dec
int
jae
lret
inc
ss
jg
movsb
or
cs
adc
iret
insl
ja
xchg
add
outsb
pop
mov
shrb
ljmp
js
loop
fldl
mov
dec
fmuls
movsl
mov
loopne
outsb
jl
xchg
adc
sbb
movsl
mov
negb
or
and
repnz
or
adc
add
lret
cmpsb
mov
data16
jo
sub
in
fs
push
cmpl
stc
jmp
cmp
int
push
pop
adc
ds
inc
nop
out
data16
or
int3
pop
mov
push
mov
mov
fistps
cmp
mov
aas
lcall
sub
mov
aaa
sbb
xchg
cmpsb
xchg
stc
or
aaa
daa
cmp
and
mov
inc
mov
push
xchg
or
loop
jno
and
and
mov
cltd
mov
inc
jnp
push
cltd
fimull
sbb
push
int3
fisubrl
jnp
add
ljmp
hlt
push
mov
push
andb
lock
and
xchg
ss
push
shll
and
dec
mov
push
lahf
loope
dec
adc
sbb
idivb
shlb
add
mov
jge
jbe
shr
and
fs
mov
je
adc
ret
sahf
inc
sarb
fcoml
push
and
fnsave
movsb
jne
mov
push
push
push
mov
in
dec
push
jb
nop
cltd
dec
xor
adc
sbb
hlt
or
or
repnz
jb
jp
out
scas
pop
xchg
shr
or
xlat
js
and
fwait
scas
sub
call
adc
pop
ljmp
mov
stc
lahf
scas
xchg
inc
jge
ds
stos
pop
sub
jecxz
sti
cmc
addb
sbb
add
inc
add
mov
andl
xor
andl
xor
adcl
or
shl
andl
add
cmpl
mov
mov
not
jmp
not
jbe
push
push
call
adc
mov
xor
mov
sbb
sub
xor
add
mov
sub
mov
cmpl
movl
mov
movl
jmp
movl
mov
jge
call
movzbl
sub
mov
mov
add
and
sbb
sbb
dec
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
sbb
sbb
jmp
pop
lret
push
push
out
adc
movlps
inc
stc
sbb
test
add
pop
push
shl
mov
imul
sbb
je
daa
cwtl
test
xor
or
insl
bound
cwtl
jnp
andnps
mov
jbe
inc
mov
imull
cld
cmp
push
and
adc
mov
cwtl
or
push
jl
mov
je
mov
mov
in
sbb
test
or
dec
inc
and
add
dec
aaa
push
les
sub
insl
insl
notb
dec
xchg
and
int3
fdivrl
movups
mov
int3
mov
inc
mov
scas
or
in
or
xchg
fs
or
cmc
out
les
fnstcw
orl
popa
inc
ret
scas
in
nop
add
pop
test
jge
jns
jp
outsb
add
lea
cltd
and
xchg
push
pop
rcr
outsb
sbb
xchg
mov
cmp
aas
mull
mov
les
cmp
xchg
lret
sub
cmpsb
addr16
jmp
cmp
xor
test
movsb
popl
nop
shll
aaa
lret
das
pop
scas
mov
mov
popf
xor
cmpsb
mov
mov
ror
sub
xchg
mov
dec
add
popa
mov
fwait
lock
in
adc
insl
xchg
out
mov
pop
push
popf
mov
xchg
lods
mov
sub
mov
sbb
stc
jbe
int3
xor
sbb
or
add
sbb
dec
pop
imul
push
or
mull
and
xor
adc
xchg
lahf
pop
jmp
sub
stos
inc
sub
jae
pop
movsl
out
pop
mov
lock
or
into
dec
lretw
int3
dec
jge
inc
or
sub
les
mov
pop
test
lcall
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
jmp
mov
imul
xor
jmp
adc
movlps
pop
push
cmp
test
fsub
mov
jmp
nop
sbb
sbb
pop
sbb
sub
sbb
rcrb
in
js
sbb
add
sahf
jae
jb
cmp
js
cmpsl
orl
lret
decl
mov
sbb
rolb
add
ds
mov
ja
jecxz
mov
adc
scas
fcoml
addr16
push
pop
lds
inc
mov
inc
insl
xchg
rcrb
sbb
mov
in
xchg
and
jp
loop
pushf
push
aad
and
aas
mov
mov
and
fsubrl
adc
cmp
xchg
out
out
cmp
and
sbb
decb
stos
inc
jae
addr16
sbb
jbe
sbb
lods
cmp
dec
mov
movb
pop
push
out
jp
icebp
popa
out
cmp
lahf
out
cmp
jle
mov
subb
xchg
cmp
xchg
testl
adc
sub
xlat
adc
mov
or
insb
sarb
cltd
les
shl
inc
cmp
add
xor
inc
push
inc
aad
push
shr
aaa
call
test
stos
insb
daa
sub
add
mov
and
xor
add
in
sub
cmpsl
movsl
xor
lahf
jnp
or
in
or
xlat
dec
aaa
cmpl
push
jecxz
in
push
mov
cmp
dec
call
test
movsl
ja
or
fisubl
xor
stos
movsb
sbb
cmc
clc
lock
popa
cmp
fsts
push
mov
in
adc
cld
fcoms
cli
call
lock
fwait
push
lahf
inc
cmp
insl
test
loop
insl
out
mov
stos
sbb
jl
clc
inc
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
mov
outsb
mov
fidivrl
mov
movlps
test
call
pop
imul
mov
mov
dec
gs
mov
repnz
test
and
add
dec
imul
mov
mov
mov
push
xchg
addr16
div
sub
loope
cs
mov
cmp
dec
repz
imul
aam
xchg
fdivs
je
xchg
sbb
mov
push
sub
pop
sub
cmpsl
setnp
dec
jb
xor
bound
xchg
mov
push
jl
jg
addl
push
movsb
imul
jne
test
into
push
add
mov
mov
les
or
test
hlt
lods
xor
add
aaa
out
inc
mov
xchg
cmc
sbbl
jmp
scas
sbb
inc
fucom
mov
mov
iret
sbb
test
in
addb
mov
mov
mov
add
popa
xchg
push
xchg
cmc
jno
mov
leave
jle
and
dec
or
add
outsl
xchg
addl
jmp
int3
bound
mov
mov
mov
lds
sti
or
xchg
mov
in
sub
inc
out
push
adc
aad
shll
mov
je
repnz
stos
push
push
and
adc
daa
scas
cmpsl
rcll
add
mov
jae
xchg
xor
jo
out
or
sahf
je
mov
lock
push
je
adc
xchg
ror
inc
xchg
sub
pslld
fisttps
aas
mov
not
sbb
je
pop
adc
rol
ret
fdivrp
xchg
pop
out
push
add
out
push
pop
lods
lret
les
lret
dec
lret
jnp
test
push
sarl
jp
sub
scas
or
mov
mov
out
pop
lods
je
dec
ffreep
pop
push
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
jmp
adcl
stos
in
cmpsl
xchg
js
in
adc
movlps
jns
and
adc
and
add
in
in
pop
pop
jo
ljmp
mov
pop
or
aas
mov
ja
xchg
cmp
push
dec
pop
push
dec
jo
icebp
cmp
icebp
dec
adc
in
fwait
mov
xchg
test
inc
nop
cmp
je
sbb
pop
repnz
inc
aam
inc
aas
jnp
inc
xor
fwait
ret
clc
popf
hlt
addb
add
lcall
ljmp
test
loopne
dec
cmc
lock
and
mov
inc
sub
and
sub
lock
add
lods
xchg
scas
mov
push
add
jns
cld
jge
adc
mov
imul
pop
sub
int
repnz
lock
gs
ret
lods
jecxz
insb
mov
xchg
pushf
rclb
fmull
insl
pop
into
incl
sub
cli
movsb
call
jae
and
or
dec
cmp
iret
cmpsb
mov
cmovne
psrad
and
into
and
cs
ficoms
pop
push
repnz
out
addr16
pop
jp
nop
ja
cmc
push
shl
mov
cmp
cltd
sub
outsb
mov
and
mov
push
scas
scas
pop
push
and
mov
mov
mov
enter
std
pop
out
mov
int
testb
rclb
mov
pop
bnd
ret
mov
jns
fstpt
xchg
lcall
repz
sbb
add
outsl
mov
sbbb
and
push
fwait
xlat
mov
mov
dec
xor
popl
xor
adc
mov
inc
fwait
pushf
cmp
lds
outsb
sahf
jmp
lahf
xchg
adc
out
mov
out
popf
dec
mov
ds
and
and
test
cmpsb
gs
daa
mov
push
mov
aam
rcrl
call
fmuls
ja
imul
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
jmp
stc
popa
mov
inc
xor
jle
dec
ss
loopne
adc
movlps
jg
mov
jae
cmc
xor
push
push
mov
repnz
mov
fcmovne
xor
xchg
jle
mov
push
sbb
cmp
inc
sbb
ret
mov
mov
jnp
adc
lea
ss
imul
inc
imul
cmp
adc
or
and
xchg
addr16
mov
bound
mov
orb
rcr
mov
and
and
lea
cmp
rcll
cwtl
and
push
mov
data16
das
psubw
xor
push
dec
xchg
xchg
pop
clc
pop
push
dec
jnp
int3
mov
sbb
push
enter
xchg
sub
inc
dec
push
ret
sub
push
pop
cmc
or
pop
jbe
xchg
call
adc
clc
adc
add
sub
sti
mov
inc
mov
dec
fimull
mov
ja
mov
xchg
adc
hlt
xchg
fstl
sbb
mov
xor
sbb
cmc
mov
pop
mov
push
mov
mov
jmp
add
adc
bound
pop
xor
cmpsl
movsl
push
call
adc
and
cmc
cmpsb
push
xchg
testl
les
in
aad
mov
frstor
cmpsl
insb
in
popf
mov
jg
push
sub
test
cwtl
hlt
out
fmul
fcomip
pusha
mov
popa
enter
cmp
jae
adc
mov
jge
popa
ret
xchg
in
outsb
leave
test
rorb
fcomps
mov
shr
pop
aaa
mov
std
inc
sub
and
enter
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
jmp
mov
pop
lahf
push
or
lods
jge
insb
insb
adc
movlps
ror
das
dec
dec
pop
decl
ljmp
xor
adc
xchg
xchg
enter
adc
shrb
mov
mov
cmp
in
data16
int
orb
shrb
scas
fwait
div
dec
insl
jb
js,pt
add
lcall
in
enter
stos
in
scas
mov
xor
pop
in
mov
leave
xchg
mov
jnp
aas
mov
pop
dec
mov
daa
cmp
sub
mov
sub
out
fcomip
push
cmp
mov
adc
es
insl
add
and
int
lcall
inc
xor
pop
addl
imul
jg
fistpl
push
test
stc
inc
out
xor
mov
push
xchg
mov
loope
out
jmp
push
ljmp
subps
mov
pop
or
aam
push
sbb
mov
sub
dec
jo
xchg
add
outsl
pop
push
call
xchg
std
testb
xchg
xor
or
fcoml
nop
test
cmp
jbe
lcall
cmp
push
loop
pushf
out
repnz
rcl
and
inc
mov
dec
dec
lcall
add
pop
sbb
data16
sub
add
fisubrl
sbb
sbb
adc
jns
push
data16
mov
add
test
js
test
sbb
rolb
sub
mov
fs
mov
pushf
pop
push
push
push
outsb
cmp
sub
jo
cwtl
cwtl
mov
repnz
mov
sbb
cmp
dec
mov
into
int
aaa
mov
sbb
mov
pushf
mov
inc
lods
xchg
fisubrl
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
jmp
push
shl
dec
jne
sub
lods
jnp
xor
movlps
mov
cmpsb
sbb
rolb
pop
adc
out
cmp
das
sbb
jo
outsl
fwait
and
sub
adc
ret
jecxz
ret
mov
push
ljmp
in
mov
xor
into
sbb
ljmp
fucom
inc
call
repnz
and
lods
cld
mov
cmp
lret
dec
bound
xor
inc
jg
dec
sbb
sub
push
pop
shrl
mov
dec
test
into
jb
pop
xor
aam
jae
ret
adcl
lds
lds
pop
add
jp
xchg
lahf
lea
pushf
stc
outsl
ret
mov
jle
add
mov
shrb
jmp
into
lcall
call
test
jecxz
popa
insb
mov
add
jecxz
sub
or
js
inc
adc
add
call
lret
hlt
inc
pop
push
adc
in
or
les
ret
mov
jp
fwait
movsl
inc
imull
xor
pop
mov
push
test
imulb
movl
fsub
dec
mov
lret
rcr
scas
scas
add
loop
mov
mov
cs
pop
jl
xor
outsl
in
aam
aaa
shlb
test
movsl
jnp
loope
and
hlt
ss
sub
inc
cs
jmp
in
adc
pop
inc
pop
cwtl
hlt
out
jae
or
aam
lret
jecxz
dec
repz
pusha
mov
movsb
jae
pop
fimull
sub
cld
pop
jae
arpl
xchg
fwait
sbb
outsb
mov
add
jb
adc
outsb
leave
xor
hlt
popa
out
mov
jmp
sub
mov
fstpt
call
adc
movlps
push
mov
sbb
adc
xchg
and
push
jle
sub
push
xchg
inc
iret
lock
stc
push
std
mov
mov
gs
in
shlb
mov
xchg
sbb
sub
jle
iret
add
push
test
in
lds
int3
cmp
outsb
not
loop
adc
dec
lcall
fsubrs
xchg
mov
ljmp
cmp
xor
fwait
cwtl
jmp
xchg
stos
push
mov
mov
inc
cmp
icebp
sbb
xor
andb
imul
push
fwait
xchg
pushf
sbb
ret
lock
adc
mov
imul
pop
jecxz
clc
cmp
ss
push
mov
cmpsb
mov
mov
fbstp
aad
cmp
pop
loopne
or
cmc
mov
cmp
sub
jl
sbb
adc
dec
add
jp
loope
jge
xor
shlb
jno
jnp
in
mov
dec
es
xor
fsts
in
fmull
das
cmp
dec
pop
mov
pop
aad
adc
mov
or
push
out
repz
int3
xchg
add
ja
cmp
jle
and
fiadds
add
leave
xor
dec
adc
adc
ds
and
inc
mov
in
rcrb
add
mov
and
mov
das
jp
mov
mov
cmp
jmp
mov
scas
std
lret
flds
xlat
aad
mov
out
sahf
push
xor
xchg
xchg
add
mov
push
loopne
das
mov
test
outsl
push
jge
ret
sub
adc
les
daa
xor
das
jmp
mov
popa
stc
shlb
push
call
adc
jnp
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
jmp
lods
mov
xor
pop
sbb
js
or
stos
rcl
adc
movlps
cmpsl
sbb
mov
cmp
jnp
mov
mov
jmp
aaa
nop
xor
push
or
ret
or
xchg
adc
mov
pop
mov
adc
dec
leave
loopne
sahf
addr16
sti
fwait
test
and
adc
pop
cmp
cli
adc
fs
ljmp
pusha
mov
jae
sub
sbb
nop
mov
loope
xor
inc
jno
shl
mov
push
stos
imul
mov
push
rcl
dec
out
xchg
or
sarl
dec
inc
mov
mov
aad
cmp
pop
ljmp
lds
das
out
es
pushf
adc
inc
inc
test
lret
jae
pop
daa
xchg
sbb
cs
pop
mov
fstps
js
shl
mov
movsb
mov
sahf
pusha
rorl
stos
mov
xchg
adc
mov
outsb
jl
fidivs
sub
pop
pushw
arpl
mov
push
cmpsl
cmp
mov
add
or
into
xor
xchg
notb
lods
dec
push
push
ret
mov
jo
in
sbb
sub
mov
dec
jl
mov
decb
add
xchg
pop
xchg
subb
sub
arpl
in
pop
insb
je
std
or
sub
notl
mul
cli
cwtl
mov
inc
lcall
sbb
je
jle
jbe
outsb
aad
icebp
idivb
xlat
sbb
mov
adc
or
vcvttsd2si
push
mov
dec
roll
je
aam
shlb
sarb
mov
out
mov
jmp
mov
and
mov
pusha
test
aas
push
addl
pop
xor
sbb
pop
fsubs
adc
push
inc
mov
addb
jno
xchg
xchg
sbbl
adc
pop
test
imul
add
cld
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
jmp
inc
mov
aaa
cwtl
arpl
push
std
push
adc
movlps
loop
mov
aad
cmpsb
push
notb
imul
mov
sbb
mov
jae
sbb
testb
gs
mov
add
inc
xor
cmpsb
pop
aad
das
cli
pop
fistpll
xchg
lcall
les
push
adc
stos
cmp
pop
push
mov
xchg
fcompl
pusha
dec
pop
cmp
adc
dec
les
lret
sub
call
out
js
nop
push
mov
sarb
loop
adc
xchg
xchg
loopne
sbbb
aam
iret
outsb
cld
cltd
clc
insl
or
add
xor
push
mov
mov
in
push
jmp
nop
and
xor
les
call
js
mov
ds
std
icebp
push
xchg
inc
and
jne
cmpl
repnz
aaa
fstps
insb
sub
adc
std
cmpsl
pop
fstps
pop
iret
xlat
pusha
pop
xor
jb
mov
ss
adc
pop
jecxz
mov
mov
mov
data16
pop
or
daa
cmp
shl
mov
jno
push
fcmovnb
stos
jl
xchg
add
stos
and
dec
in
addl
cltd
or
mov
icebp
dec
xchg
mov
xor
insb
pop
mov
push
and
xor
jge
xchg
cltd
mov
das
shlb
pop
icebp
cmc
gs
mov
jbe
jno
rcll
add
jg
inc
xor
pop
jo
cmp
cmp
xchg
shlb
shlb
jnp
daa
jnp
outsb
imul
movsl
cltd
lea
daa
fs
scas
insb
fwait
insb
mov
sub
mov
pop
lods
and
inc
xchg
and
int
mov
xor
fildl
adc
cmp
jno
inc
scas
and
adc
imul
rcr
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
add
lret
lret
add
filds
lods
enter
movlps
daa
fwait
inc
xor
fcmovnu
loop
add
fiadds
jns
sti
out
stos
or
pop
mov
mov
stos
and
ss
and
sbb
repz
jg
mov
mov
cmc
xlat
xchg
insl
sub
xchg
sub
mov
jne
mov
sub
dec
pop
sub
js
aaa
in
add
int3
mov
outsl
xchg
scas
mov
add
es
sub
rol
and
cmp
sub
loopne
repz
inc
loope
mov
mov
and
jae
test
push
pop
cld
or
xchg
push
xor
and
sbb
mov
dec
or
aam
inc
int3
sub
xor
sbb
nop
inc
add
xor
jmp
push
outsb
xor
mov
pop
xor
mov
and
mov
loope
int
lods
adc
flds
mov
pusha
out
lods
jmp
aaa
mov
jg
es
mov
aam
mov
xor
jmp
sub
ljmp
push
cmc
mov
sbb
iret
mov
rcrl
xchg
add
sub
lret
xchg
das
cli
jae
xchg
adc
shll
addr16
sbb
xor
cmc
push
cmpl
out
fldt
cli
aaa
inc
aas
push
inc
adc
test
cmp
movsb
into
ljmp
mov
xchg
inc
mov
add
inc
cmp
loopne
inc
inc
sub
in
fsubp
shlb
push
int
sub
lret
sbb
dec
idivb
inc
inc
inc
and
add
cwtl
cli
gs
loopne
jns
mov
inc
xor
popf
cmc
mov
jecxz
ss
std
adc
inc
ss
xchg
inc
adc
repz
jecxz
mov
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
jmp
inc
jl
xchg
pop
xor
js
lcall
movlps
jo
pushl
ja
std
cli
add
pop
and
int
jg
ja
data16
mov
sarl
fs
lea
xor
xor
shl
cmp
idivb
dec
sbb
jnp
imul
jno
and
jge
cld
add
scas
pop
jg
dec
mov
mov
fsubs
sbb
mov
mov
fistpl
cmp
adc
sti
sbb
popa
xchg
lods
mov
xor
jecxz
cmp
icebp
add
test
mov
je
sub
jae
xchg
daa
orl
push
jge
into
std
and
lods
popw
xor
sbb
xor
add
jae
cltd
inc
scas
jno
inc
lret
clc
jecxz
nop
movsl
xchg
pop
mov
ficoms
enter
ss
dec
xchg
pushf
sub
pop
fmul
rorb
lahf
nop
lock
mov
or
mov
inc
adcb
pop
test
movsl
aam
mov
or
ja
and
cmpsl
xchg
cmp
outsb
add
mov
frstor
cwtl
fsubs
stos
int
cmpsb
jbe
push
dec
daa
push
sub
ja
adc
sub
lea
cmp
ficomps
movsb
insb
out
pop
imul
stos
js
add
cmp
inc
pushf
cmp
out
sub
add
je
aas
jnp
adc
push
bnd
mov
into
lds
out
jp
mov
jmp
push
adc
mov
cmp
lods
push
enter
pop
hlt
or
inc
scas
sbb
mov
adcb
pop
stos
xchg
inc
dec
clc
push
int3
jl
jne
jle
push
inc
or
sbb
loopne
jbe
inc
hlt
lock
add
and
push
push
cmpsl
fxch
fcmovnbe
int
mov
xchg
cmp
and
cmp
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
jmp
jb
jecxz
gs
sbb
push
xchg
ljmp
adc
movlps
clc
imul
fldcw
in
fdivrl
push
jmp
xchg
sub
and
pop
or
pop
scas
aad
push
lret
icebp
xchg
mov
mov
jae
and
hlt
shrl
fmulp
inc
pusha
test
lahf
and
lods
popa
add
adc
js
in
ficoml
or
push
or
jle
mov
mov
jl
movsb
mov
addr16
hlt
mov
push
popa
movsb
jo
rorl
cltd
out
mov
fs
hlt
outsl
mov
xchg
aas
in
adc
ss
lock
add
aaa
js
xor
mov
mov
pop
clc
xor
fdivl
test
xlat
fsubl
fsubl
jno
sbb
xchg
lcall
inc
mov
xchg
adc
pop
outsl
sarl
mov
mov
sbb
dec
mov
and
test
dec
adc
inc
cli
dec
lcall
pusha
es
xor
mov
jne
test
mov
pop
add
jmp
or
aad
lret
fadds
lret
imul
pop
adc
sbb
mul
pop
call
loop
sti
xchg
push
stc
outsb
cmpsl
mov
mov
mov
mov
repnz
lahf
cwtl
cmp
mov
sbb
les
push
pop
shlb
pop
stos
sti
shlb
je
sub
vmwrite
dec
movsb
nop
adc
outsl
in
mov
jo
cmp
movsl
xchg
mov
add
push
scas
push
xchg
and
stc
scas
test
pop
push
pop
dec
aas
scas
inc
jle
xlat
leave
jae
cmp
sub
stos
add
mull
sub
or
jo
jecxz
vsubsd
hlt
paddb
stos
arpl
test
lahf
cltd
lret
jnp
sahf
mov
js
cmpsb
jns
pop
add
imul
add
push
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
jmp
imul
xor
and
mov
pop
xchg
rep
mov
movlps
sub
sbb
fstl
xchg
or
fstl
out
cmp
and
pop
or
shlb
mov
jp
mov
dec
add
jmp
rcrb
insb
sub
xchg
fbld
repnz
sbb
cld
aad
cmc
dec
aad
xchg
and
stos
imul
dec
jns
pop
push
out
mov
loope
sub
ds
popa
mov
pop
adc
or
inc
mov
xchg
jp
xchg
sub
jg
jae
jmp
push
adc
dec
or
in
jne
cli
mov
iret
add
lea
pop
mov
mov
loopne
adc
xor
filds
jb
xor
std
das
inc
pop
test
mov
aaa
es
in
mov
xchg
cmp
rcrb
mov
cmp
cmc
cmp
fcompp
push
call
popf
sbb
imul
sub
dec
jne
adc
jle
loopew
scas
jnp
in
insl
testb
lahf
mov
pop
arpl
and
icebp
repnz
andb
jae
xor
mov
xchg
sub
inc
into
mov
inc
push
sbb
arpl
xor
xor
stos
lcall
ret
nop
cmp
inc
xor
cmp
negb
or
ljmp
out
mov
cmp
imul
scas
sub
loopne
std
out
cs
pop
sub
mov
outsb
mov
dec
arpl
loop
push
or
add
mov
xchg
sbb
push
and
lds
insl
cs
xchg
xor
push
aad
rcrb
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
jmp
mov
xlat
sbb
jecxz
cmc
stos
mov
movlps
pop
in
mov
scas
mov
sbb
push
pop
push
xor
jl
mov
out
divb
add
lcall
sub
fidivrs
lods
mov
xchg
mov
test
and
fst
dec
push
lret
jge
cmp
xchg
mov
jb
lock
push
and
mov
push
mov
mov
and
aad
mov
push
insb
sbb
fxch
imul
rcrl
test
test
adc
pusha
xchg
jbe
jae
add
in
int3
cltd
lret
loopne
or
insl
and
jne
ret
mov
sbbl
in
pop
inc
inc
mov
jns
jne
mov
mov
ds
add
xchg
mov
push
imul
and
xor
cmpsb
pop
in
jecxz
in
hlt
imul
jmp
xor
xchg
xchg
xor
cmpsb
in
mov
cwtl
pop
mov
aam
inc
and
repz
push
push
repz
cmc
fidivl
shl
xor
and
cmpsl
sahf
cs
push
outsl
xor
xlat
push
ss
idivl
xor
cmp
mov
das
jne
js
jecxz
add
lea
lods
ss
inc
lea
mov
sbb
pop
xchg
or
cwtl
sahf
mov
push
dec
loop
push
push
loop
mov
add
mov
cmp
out
iret
stos
mov
push
test
dec
sbb
outsl
je
dec
js
cmp
mov
xchg
pop
out
pop
popf
stos
jmp
inc
sub
push
xor
mov
jne
xor
out
mov
test
in
fistps
dec
outsb
xchg
andl
popf
cs
xlat
jp
ds
adc
or
bound
das
fld
add
adc
outsb
daa
ffreep
cmp
or
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
jae
cmp
movl
jae
subl
shrd
movl
shr
ret
mov
xorl
xor
and
movl
shr
ret
xor
xor
ret
push
mov
sub
and
movl
cmpl
movl
mov
mov
movl
jmp
movl
jae
push
pushl
call
adc
and
mov
sbb
sub
andl
mov
cmpl
movzbl
notl
movl
mov
jmp
notl
jle
push
pushl
push
pushl
call
xor
add
andl
movl
or
add
mov
movl
mov
mov
or
movl
movl
sbb
movl
mov
mov
or
push
and
movl
cmpl
mov
movl
mov
jmp
mov
notl
jge
pushl
pushl
call
sub
and
sub
movzbl
or
add
neg
subl
movl
movzbl
sbb
push
adc
movl
add
mov
mov
push
orl
push
orl
push
sbbl
jmp
shrb
push
sbb
mov
mov
adc
lahf
movlps
push
jg
pop
ret
mov
pop
pop
jo
lret
iret
adc
stos
mov
xchg
mov
das
xchg
jae
xchg
jo
sub
test
dec
jmp
xor
cs
ljmp
gs
mov
mov
in
or
xor
lahf
ljmp
outsb
sbb
scas
adc
jne
roll
arpl
xor
insb
cmp
dec
mov
mov
aas
push
ret
add
jl
scas
sbb
jp
jne
aaa
pop
adc
add
mov
and
ss
pop
bswap
mov
iret
out
and
mov
xor
xchg
jbe
cli
xchg
dec
in
or
in
xchg
repnz
inc
sub
cs
mov
jmp
divl
sub
and
ljmp
jnp
pop
div
xor
incb
pop
rcr
jbe
xchg
filds
sub
gs
imul
sbbl
outsl
orb
pop
cmp
pusha
pop
in
dec
enter
stc
decb
jg
adc
cwtl
mov
out
clc
comiss
xor
mov
addl
push
xchg
repnz
lods
ja
cmpsb
push
jl
lds
lods
int3
and
out
inc
ja
dec
enter
inc
rcr
lret
cmpb
xchg
xchg
out
and
and
clc
or
in
movsb
stos
cmp
xchg
adc
dec
std
xchg
push
push
jp
and
lds
pop
push
cmp
fsts
cmp
call
mov
pop
rorb
test
sahf
fdiv
jge
or
jecxz
or
setg
push
mov
popf
xchg
inc
cwtl
fucomi
and
push
fbld
fnsetpm(287
stos
adc
adcb
pop
dec
sbb
cs
pop
daa
arpl
outsb
add
push
imul
data16
dec
cs
mov
inc
mov
mov
popf
leave
mov
pop
cmp
popa
jmp
cmc
xchg
test
cmp
dec
xchg
hlt
mov
xchg
cmpsb
mov
mov
in
cmpsb
pushf
push
cmp
push
mov
xor
cmp
cmp
cmp
ljmp
arpl
pop
in
sub
jle
sahf
cmp
iret
pop
push
ds
dec
loop
add
outsb
jno
fs
es
inc
inc
xor
cmp
mov
xchg
test
dec
and
inc
push
stos
fwait
call
cmpl
mov
movl
jmp
mov
mov
jae
push
call
mov
mov
sub
xor
andl
sbb
adc
adc
or
mov
xor
mov
mov
orl
push
addl
or
sbbl
push
addl
or
sbbl
xor
subl
xor
decl
push
push
call
not
mov
and
mov
push
push
push
push
call
cmpl
mov
mov
jmp
movzbl
movl
ja
push
push
pushl
call
add
mov
sub
addl
sub
sub
sbb
mov
mov
adc
mov
and
movl
cmpl
notl
mov
jmp
movl
jbe
pushl
pushl
push
call
mov
sbb
andl
subl
addl
and
xor
xor
mov
sub
add
andl
movl
xor
movl
movl
movl
cmpl
movl
mov
jmp
movl
not
jne
push
call
subl
or
sub
sub
add
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
jmp
mov
and
loopne
add
mov
adc
push
push
in
pop
mov
pop
jns
lea
push
aam
pop
cmp
subb
loopne
and
sti
fildll
mov
xchg
xor
testl
cmpsl
add
clc
cmp
pop
push
out
mov
or
cmpsb
aaa
push
jb
test
add
ja
inc
loope
or
imul
xor
scas
jp
mov
aam
icebp
ljmp
dec
push
lahf
pop
xor
jl
jg
repz
dec
lahf
repnz
jle
cmpsl
mov
aaa
push
and
stos
push
pop
mov
cmp
call
stos
ds
aad
insl
imul
daa
push
insl
or
fstpl
cld
and
adc
lcall
jmp
jmp
sub
lea
fisttps
decl
push
movsb
imul
stos
mov
movsl
in
add
stc
loopne
mov
mov
scas
jnp
sbb
popf
adc
mov
mov
ret
inc
xlat
dec
push
gs
jecxz
push
icebp
pusha
push
xchg
cmp
out
sbbb
sarl
push
mov
and
jbe
jns
cmc
add
leave
testb
aad
lcall
pop
mov
dec
daa
or
mov
lret
arpl
mov
int
jl
mov
mov
xchg
push
ficompl
jne
mov
fldcw
push
les
jno
ja
xlat
frndint
or
rcll
enter
std
dec
jno
or
mov
inc
pushf
in
aas
push
ficompl
add
cmc
imul
lock
cmc
ljmp
ret
icebp
in
push
lret
adc
dec
jbe
pop
fcmovb
sbb
in
sbb
cwtl
cmp
shrl
xor
push
sub
loopne
clc
and
push
xor
cmpsb
es
cmp
and
addl
inc
iret
cmp
xlat
std
sbbl
icebp
jae
jne
add
loope
cmp
daa
pop
mov
mov
and
outsl
out
popf
fstps
push
adc
xor
xchg
inc
cwtl
mov
cltd
js
cmpb
je
xchg
adc
ror
bound
ret
test
cmpsl
sbb
fistpl
mov
xchg
mov
mov
loop
push
fiadds
call
inc
lcall
loopne
pop
nop
inc
xor
pop
jp
lea
lret
jb
hlt
test
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
jmp
jbe
mov
imul
cmpl
scas
adc
lahf
movlps
push
outsb
sti
xor
jle
test
dec
xor
or
pop
stc
shll
jmp
in
cmp
test
sbb
insb
lea
dec
pop
sbb
mov
jmp
push
in
lret
shl
shll
loope
xchg
dec
pusha
rorb
xchg
pop
popa
pop
les
inc
inc
out
stos
mov
rcll
xor
adc
mov
xchg
das
mov
adc
scas
pop
in
xchg
fcoml
out
into
and
js
inc
fcos
sbb
push
mov
hlt
call
sub
fcmove
xchg
insb
repnz
stos
insl
add
jecxz
cld
pusha
cs
jecxz
sbb
pop
xor
cmp
push
xor
jl
sbb
and
in
lret
lea
xor
stos
clc
mov
cmp
sbb
ret
pop
and
or
mov
adc
xor
scas
jp
or
sub
sbb
sbb
shlb
fildll
imul
jp
fs
stc
clc
push
dec
fsubrl
or
loop
xchg
ljmp
out
inc
push
cld
leave
test
stos
mov
popa
sbb
stos
xlat
imul
addb
subl
add
imul
mov
lods
in
xchg
jno
adc
loope
loop
xorl
push
and
jns
inc
mov
cli
mov
sarb
lods
mov
data16
leave
pop
cmpsb
repz
call
aam
js
loop
repnz
into
or
and
adc
daa
dec
and
andl
mov
mov
sti
dec
jo
dec
pop
cmp
jb
loopne
xchg
mov
adc
mov
pop
or
pop
or
repz
cmpsl
lods
push
jae
jg
rcr
jno
sub
dec
movsl
loopne
sub
out
in
fldenv
fisttpll
sbb
jmp
nop
fdivrl
jle,pn
cmp
xor
pop
and
push
fwait
cmc
sbb
insw
push
mov
rorb
popf
and
mov
dec
cli
sar
push
xor
jae
sahf
lahf
test
jl
outsb
fistpl
jae
dec
jl
cmp
sub
sub
mov
pop
xchg
stos
mov
xor
cmpsb
rclb
ljmp
mov
js
repz
test
xor
in
pop
int3
xor
xor
add
mov
adc
jmp
addl
scas
sbb
pop
add
sbb
insb
insb
pop
movsb
adc
lahf
movlps
push
mov
das
inc
xchg
mov
mov
pop
sub
sti
inc
not
mov
or
rcrb
fs
fnstenv
xor
jl
pop
dec
repnz
pop
adc
adc
filds
pop
test
ss
outsl
sub
in
mov
ja
inc
pop
shll
or
or
int
cld
cmpsl
dec
rclb
jge
sub
push
mov
nop
leave
adc
insb
and
adc
jne
ja
adc
sub
sub
lret
or
jp
scas
add
push
sub
stos
insl
sbb
test
out
pop
mov
sub
gs
inc
imulb
sbb
add
lcall
add
iret
insl
jl
add
jge
xor
jg
psrlq
les
or
in
outsl
cltd
mov
sub
pop
cmpsl
cmpsb
mov
and
rorb
sub
fdivp
push
and
and
lret
inc
aaa
iret
xor
stos
scas
mov
cli
insl
popf
pop
jo
loop
mul
mov
push
jge
scas
fsubrl
mov
cmp
dec
jae
fwait
stc
out
cmpsl
push
mov
or
aaa
popf
sbb
dec
mov
push
mov
mov
arpl
mov
mov
xor
jns
xchg
and
imul
icebp
cmpb
inc
sbb
inc
xor
repnz
mov
jns
inc
push
loop
rorl
inc
pop
out
sbbl
roll
push
fldl
jecxz
leave
jmp
mov
cmp
jg
dec
sbb
mov
adc
push
mov
jmp
mov
mov
sbbb
inc
mov
jp
dec
enter
jae
lret
mov
pusha
loope
js
xchg
sbb
dec
ss
cmp
push
xor
enter
lods
fistl
movsl
and
pop
shlb
add
into
lods
mov
imul
xor
adc
cwtl
ds
loop
aam
cmpsb
xchg
std
shlb
xor
rcll
leave
adc
adc
cwtl
xchg
outsb
push
mov
mov
add
cld
dec
cmp
int3
jb
pop
test
sbb
outsl
fadds
mov
or
or
mov
lea
out
loopne
pop
sub
xor
push
icebp
pop
hlt
rolb
adc
push
lods
cmp
clc
pop
test
mov
inc
fs
mov
cmp
jne
cmp
je
movl
movl
jmp
pop
repnz
push
mov
call
insb
in
adc
lahf
movlps
jmp
mov
cli
add
lock
imull
sbb
loop
aaa
iret
sbb
ret
sub
mov
shrb
xor
pop
fcoml
dec
imul
clc
hlt
sub
mov
push
dec
cmp
mov
test
out
sahf
xchg
push
insb
push
shr
push
jmp
test
bound
xchg
iret
jmp
movsl
gs
cmpsb
je
lods
mov
clc
mov
push
jae
pop
std
call
mov
sbb
fistpll
mov
ljmp
shll
in
adc
pop
clc
cmp
insl
ds
xchg
mov
jo
sbb
adc
and
lods
xchg
mov
xor
cmp
xor
push
adc
and
mov
xchg
andb
or
and
ljmp
ss
inc
clc
mov
xchg
pushf
sub
imul
ss
xchg
pop
push
inc
movsl
xchg
ss
dec
cmpsl
es
cwtl
lret
xchg
adc
imul
sbb
xchg
mov
jmp
push
mov
pusha
sub
pop
popf
xor
mov
sub
push
notb
fstpt
popf
xor
rorl
fs
imul
mov
sahf
cs
sbb
subl
out
scas
stos
mov
ljmp
aas
push
jae
out
fdivrs
stc
popf
ljmp
jecxz
scas
cmpsb
arpl
shl
jle
jnp
sub
ret
xchg
cltd
xchg
cwtl
and
jbe
or
cmp
sti
dec
pop
rolb
mov
push
mov
ss
and
test
or
mov
outsb
jecxz
or
aaa
sub
jne
ljmp
in
sub
and
cmpb
mov
in
scas
aam
es
in
jge
sbb
mov
mov
mov
and
movsb
aad
ret
push
insb
test
or
mov
jae
push
mov
in
insb
aam
push
mov
cmp
xor
adc
xchg
sbb
fldl
hlt
xor
add
push
mov
cs
jno
pop
pop
in
jb
or
popa
or
int3
mov
sub
mov
mov
cmpsb
jmp
outsb
cs
in
lcall
daa
movl
jmp
ja
pop
add
rcll
push
bound
add
jle
sahf
adc
lahf
movlps
add
orl
lods
and
hlt
jmp
pop
fcmovnbe
mov
sbb
push
sti
iret
pop
or
sbb
mov
es
insl
imul
xor
pop
pusha
out
push
xchg
or
adc
repz
inc
or
call
std
adc
sahf
negl
mov
dec
push
jp
shrb
adc
mov
loop
lods
mov
adc
cmp
push
cmpsb
xchg
mulb
cmp
adc
inc
psubsb
inc
mov
iret
xchg
hlt
or
cs
mov
leave
xor
mov
ljmp
and
lret
mov
fwait
add
loop
lcall
orl
std
pop
cli
add
repnz
repz
clc
dec
jp
mov
repnz
jns
mov
frstor
push
fs
or
xor
inc
mov
repnz
adc
lea
ffreep
popa
cmp
xchg
and
in
arpl
loopne
jbe
jecxz
mov
xor
and
push
push
jg
std
ficoms
mov
dec
xchg
sbb
jno
rcrl
movsb
dec
sbb
or
incl
movb
scas
adc
test
rsm
fwait
or
xor
repz
mov
push
mov
data16
inc
pop
jnp
cld
movsb
fwait
in
pop
xor
push
sub
sub
mov
and
dec
bound
push
pop
frstor
xlat
adc
mov
and
cwtl
adc
test
xchg
mov
inc
ret
mov
jp
adc
insl
xchg
out
jo
shrb
mov
mov
xchg
sar
mov
jg
sbb
aam
cmp
clc
jge
push
aaa
mov
push
mov
inc
xchg
adc
xor
fimuls
push
cmpb
jne
xchg
push
in
nop
iret
mov
or
pop
adc
rcr
test
push
cmp
bound
ret
dec
dec
mov
cmc
jle
sar
mov
in
in
sub
inc
or
xchg
mov
arpl
xor
mov
pusha
scas
xchg
test
loop
push
das
divl
dec
sarb
imul
mov
iret
push
add
cld
cli
sub
jge
push
or
cmp
in
jno
or
adc
int3
jp
adc
and
add
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
jmp
sbb
cmp
sbb
notl
fdivrl
lahf
movlps
jg
or
repz
in
mov
inc
jns
je
int
add
sarl
arpl
or
pop
ss
mov
dec
push
es
push
add
mov
mov
adc
rolb
cmp
xchg
sahf
testl
sbb
pusha
mov
jmp
test
out
mov
out
lea
inc
test
mov
mov
sub
pop
aas
fcompl
int
mov
adc
fs
out
or
in
aad
pop
scas
cmp
fisttpll
aas
push
bnd
and
lret
outsl
add
mov
or
movsl
sbb
sbb
jbe
stos
stos
fldl
mov
scas
mov
mov
mov
dec
or
push
mov
sti
int3
testl
jp
push
or
inc
mov
xor
or
xchg
jb
xchg
mov
mov
cmp
dec
pop
stos
fadds
sub
lods
jl
sarb
xor
jp
pop
jmp
and
aam
scas
repnz
cmp
daa
fsubrl
mov
cmpsl
add
mov
mov
mov
cmp
jle
push
push
jns
insl
inc
scas
movsb
lea
cmp
bound
hlt
insb
or
scas
in
push
leave
shrb
sbb
push
xchg
inc
ja
jmp
lods
cmpsb
pop
fcomi
push
cli
cli
pop
xchg
sahf
stos
pop
xor
shlb
inc
nop
xchg
outsb
sbb
push
sbb
fdecstp
rorb
xor
aam
loop
ret
mov
or
pop
jp
repz
fildll
jns
stc
sbb
cmpb
sub
adc
push
jns
enter
sbb
mov
fs
cmp
loope
xchg
inc
xor
mov
push
jmp
div
ret
sbb
mov
andb
test
or
or
ret
jl
testl
push
jp
pop
jno
clc
sub
clc
subb
bound
xchg
out
fistpll
mov
adc
and
push
or
inc
mov
inc
jae
xchg
pop
in
cltd
aas
and
je
inc
mov
sbb
in
cli
add
stos
sub
fsubl
imul
or
adc
jp
push
push
sub
xlat
and
mov
ds
xchg
sub
push
push
rorb
xor
pop
out
pop
push
mov
hlt
jge
adc
jle
mov
lcall
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
jmp
xchg
jnp
stc
pop
jno
loop
cmp
shlb
xchg
adc
lahf
movlps
pusha
repz
loopne
popf
movsl
je
inc
xchg
test
add
test
shll
aaa
insb
xor
push
xlat
in
jo
std
arpl
xchg
ja
adc
divl
pop
push
notw
fidivrl
mov
fiaddl
mov
aas
inc
insl
xor
mov
mov
out
push
or
imul
icebp
adc
push
and
loope
in
scas
mov
mov
add
enter
add
fstl
shll
outsb
dec
adc
and
xchg
sub
mov
out
mov
inc
add
ljmp
cmc
dec
aas
inc
adc
inc
and
ljmp
hlt
mov
pop
in
mov
cmc
pushf
in
adc
aaa
icebp
insb
xor
repz
leave
push
stos
cmp
push
test
mov
xchg
cmp
fsubrs
int
dec
imul
fs
dec
push
pop
enter
sarl
out
cmp
and
and
aad
cmp
mov
inc
jb
mov
scas
mov
inc
repz
pop
loope
jecxz
stc
les
lods
push
xor
cmp
push
and
rol
aaa
lods
aas
ds
insb
rorb
add
call
sub
inc
sbb
add
inc
sbb
push
adc
jnp
aaa
dec
out
jecxz
addb
inc
das
sahf
xor
int3
xor
jp
mov
testl
xchg
pop
dec
pop
mov
cli
mov
arpl
xor
dec
adc
xor
bound
xchg
inc
add
hlt
loop
divl
cltd
iret
int
aam
and
fs
pop
pop
test
mov
mov
mov
mov
push
loope
bound
add
jp
movsl
data16
imul
outsb
fstpl
push
adc
and
sub
fcmovne
insl
jecxz
or
sti
stc
jge
daa
cmpsl
push
cmpsb
mov
adc
andb
add
sub
xchg
mov
fsubr
mov
jnp
mov
pop
adc
faddl
lds
cltd
jnp
and
push
bnd
fnstenv
cld
cmpb
bound
pop
sub
dec
mov
mov
mov
push
in
je
and
cld
or
sub
icebp
xchg
sbb
and
pusha
pop
stc
adc
loope
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
jmp
sbb
ja
pop
sbb
mov
dec
mov
pop
movlps
jo
dec
call
and
in
jne
outsl
lods
rorb
add
into
popf
call
call
mov
mov
ss
sbb
shlb
pop
daa
xchg
pop
push
mov
nop
jp
sti
jbe
sub
leave
into
dec
popf
push
add
out
lret
xchg
push
mov
hlt
push
cmpsb
push
adc
xorl
dec
call
mov
stos
and
push
add
inc
ja
sub
or
repnz
mov
xor
and
fistps
arpl
andb
rcrb
clc
push
xor
jecxz
hlt
popf
fadd
or
cld
gs
aam
stc
out
in
jno
lret
scas
sbb
cmp
out
add
xor
jne
xchg
in
in
ret
push
dec
sti
mov
push
dec
push
push
jno
sub
mov
jl
repnz
xchg
cmp
call
adc
nop
in
pop
add
hlt
sub
pop
mov
addr16
push
pop
pop
ss
sub
xchg
mov
or
jne
sbb
or
cmp
pushf
scas
out
push
mov
iret
inc
std
inc
lahf
aaa
inc
jns
cli
jmp
fcomp
xor
sub
rorl
mov
js
push
fstps
mov
sbbb
aam
push
mov
cltd
leave
jae
pop
push
call
mov
arpl
lcall
shl
push
cmpl
pop
or
ret
adc
jmp
mov
mov
ja
bound
push
test
sub
jg
sbb
sub
inc
xchg
enter
mov
add
pusha
icebp
roll
cmpb
fmuls
sbb
in
pop
mov
insb
jl
rcll
push
ds
push
fwait
outsb
adc
int3
push
jno
sbb
mov
enter
jns
clc
mov
inc
fildll
rcl
in
clc
popa
and
int3
in
out
jo
sbb
test
pop
pop
jae
sbbb
inc
or
decl
in
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
jmp
sbb
sbb
and
div
jle
test
adc
adc
cli
ja
inc
cmp
ss
lock
jle
mov
outsb
shrb
fs
out
mov
movsl
jl
cs
loop
adc
or
scas
add
sahf
or
ret
es
add
ja
pop
inc
push
and
pop
cli
cmpsl
cmp
outsb
movsb
xlat
testl
mov
jno
out
daa
or
mov
mov
push
add
push
ret
cmp
xchg
mov
movsb
pop
mov
test
sti
and
xor
gs
cmp
sub
dec
and
orb
setae
addb
inc
ljmp
js
je
imul
cld
push
loop
sbb
sub
mov
sub
scas
icebp
cwtl
inc
and
jmp
dec
fadds
cmp
or
gs
pop
pop
xchg
mov
sbb
out
lret
mov
pop
insb
mov
leave
stos
mov
mov
pop
int3
mov
pop
mov
push
xlat
sbb
fildl
push
xchg
add
push
xchg
imul
jp
pop
jl
loope
into
add
inc
imul
mov
adc
cli
aaa
sub
cltd
clc
out
mov
jnp
sbb
out
out
jle
push
pushf
fcompl
daa
and
scas
push
filds
rclb
or
es
idivb
jb
push
mov
mov
cs
jecxz
pop
sar
pop
leave
ljmp
fcomps
inc
mov
hlt
xchg
movsl
sbb
jmp
mov
orb
in
xchg
ret
ja
push
adc
push
es
xchg
jbe
shll
add
inc
pop
pop
mov
mov
sti
jb
fnsaves
pushf
cs
pop
and
das
cmp
xchg
clc
lods
mov
jl
jns
xchg
cmpsb
testl
dec
sbb
mov
sysret
movsb
mov
pop
int3
or
pop
push
lea
or
repz
es
sub
lods
repnz
cwtl
cmp
mov
ja
data16
repz
and
mov
decl
inc
or
jmp
fdivl
fnstcw
sbb
push
insl
or
adc
adc
jo
push
ljmp
out
rcr
fmuls
add
and
lods
pop
nop
aas
andb
push
arpl
imul
adc
sub
std
jle
clc
ja
mov
dec
cmp
mov
inc
rcrl
je
add
push
dec
inc
test
and
outsb
lock
out
test
ja
inc
fists
cmp
out
ss
fiadds
push
loope
sahf
dec
or
or
sbb
and
jp
js
and
hlt
inc
jge
push
dec
lds
cli
leave
and
pop
adc
xchg
popf
push
loopne
fsubrl
xor
in
mov
addr16
jae
add
cmp
popf
scas
adc
cmp
or
data16
jne
add
test
into
pop
push
jecxz
lahf
rolb
jecxz
pop
push
jne
push
imul
stc
push
adc
pop
lcall
pop
into
mov
repnz
test
push
imul
jge
and
addr16
pop
cmp
lcall
and
faddl
xchg
jle
call
std
push
push
mov
mov
stos
cmp
xlat
imul
sub
scas
ficompl
sbb
jmp
and
jg
and
sbb
lock
fldl
jle
pop
lahf
xor
mov
mov
cmpsl
push
mov
stos
pop
mov
inc
test
add
mulb
and
or
das
cld
pop
ljmp
jo
push
popa
subl
and
jne
adc
and
dec
fbld
stos
push
cmpsl
bound
xor
shlb
dec
mov
xchg
orl
icebp
jmp
xchg
xor
sti
xor
cli
iret
imul
je
mov
mov
xchg
test
cmp
mov
repnz
loopne
into
rcll
cli
or
aas
xlat
push
dec
jne
cmc
rclb
insb
jl
add
xchg
sbb
add
mov
mov
adc
into
jno
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
jmp
nop
xchg
cltd
lret
pop
dec
mov
push
fisubrl
jle
jle
adc
adc
sub
out
xchg
notl
call
mov
les
mov
jl
and
cld
sbb
mov
sub
rclb
jno
loope
jecxz
cltd
dec
sbb
and
xchg
xchg
ljmp
add
cltd
sarb
cmp
imul
lretw
test
sbb
jns
cmc
repnz
ror
add
add
loope
sbb
adc
push
call
fwait
mov
push
stos
cmp
mov
pushf
push
or
sub
fisttps
lds
inc
ja
mov
loopne
rorb
mov
loope
or
add
pusha
xchg
jo
sub
movsl
and
lea
andb
or
or
mov
and
imul
cmp
dec
gs
sti
sub
std
notb
add
pop
mov
add
shlb
pop
insb
fsub
in
pop
sbb
or
lcall
in
iret
cld
in
push
sbb
push
cmp
out
dec
jnp
and
adc
cmpsl
movsl
sbb
jb
aas
pop
mov
lcall
inc
sub
push
in
jecxz
dec
dec
or
in
ds
pusha
dec
push
inc
mov
or
les
mov
aam
test
mov
inc
lcall
rcrb
insl
pop
cmp
jae
jns
mov
dec
adc
dec
mov
pop
loopne
arpl
lret
int
bound
jp
mov
jmp
test
and
mov
adc
popf
fists
mov
push
cmp
cwtl
cmp
scas
add
adc
mov
in
inc
inc
test
fwait
cmp
push
adc
test
popa
mov
mov
mov
loope
idivb
adc
sbb
cld
sub
xchg
ja
imul
mov
xor
cld
xchg
pop
je
pop
das
xor
jl
out
or
loope
dec
mov
lods
test
mov
xchg
call
or
leave
aad
dec
sub
lock
push
fcoms
fcmovnb
dec
dec
inc
xor
sub
cmc
fs
xor
and
dec
addr16
inc
cmp
je
lcall
ret
pop
add
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
jmp
add
popf
pop
sbb
push
std
push
push
jp
adc
adc
adc
adc
xor
mov
hlt
and
xchg
xchg
loope
arpl
cmpl
je
push
mov
negb
cmp
jge
pop
jae
adc
lahf
daa
add
cmp
xchg
adc
adcb
cmp
imul
or
outsl
dec
inc
dec
add
sub
mov
push
fs
xchg
xlat
inc
ror
add
movsb
cld
lcall
imul
insb
jae
jmp
ja
xchg
xchg
mov
dec
pushf
outsb
in
and
mov
mov
adc
mov
jns
cltd
and
adc
aad
ret
gs
mov
and
out
fisttpll
xchg
dec
push
je
movsb
repz
ja
ficompl
js
xchg
cmpsl
mov
scas
cmp
ret
orl
je
cli
cli
mov
add
pop
jns
lcall
xchg
pop
das
sub
sub
xor
push
lock
into
enter
xor
cs
mov
inc
mov
dec
inc
addr16
outsl
push
idiv
jne
mov
in
push
js
cmpsl
sub
cmp
jge
sub
sbb
push
rep
cld
enter
aad
add
orb
push
jmp
scas
jb
into
insb
inc
cwtl
jns
outsl
push
dec
xlat
pop
pcmpeqw
jecxz
push
in
and
pop
inc
cwtl
xorl
fcmovnbe
jb
jge
cli
dec
movsb
push
and
out
mov
adc
dec
shll
cmp
xor
fwait
sbb
sub
enter
div
test
adc
xor
jne
push
jmp
rol
push
test
leave
xlat
loopne
jl
dec
jno
sahf
push
push
mov
mov
aaa
js
sbb
and
push
pop
push
and
push
sbb
lods
jecxz
xchg
pop
hlt
adc
mov
pop
popf
mov
mov
dec
notb
data16
ljmp
jmp
mov
add
and
lahf
jo
sahf
pop
imull
rcrl
imul
lret
cwtl
pop
outsb
and
mov
fs
lea
inc
maxps
test
or
add
lea
cwtl
les
stc
add
out
es
cmp
push
addr16
rorb
cmpsb
dec
jbe
fildll
sti
dec
addr16
jmp
decb
pop
test
or
arpl
dec
cld
pop
inc
or
jg
cmp
mov
sbb
push
inc
jae
sub
ja
es
pushf
xor
cmc
fwait
outsl
outsb
push
int
sarl
jno
lcall
inc
lcall
aam
shr
mov
push
outsb
pop
xchg
pop
bound
rcrb
cmp
sbb
scas
xor
pop
sbbb
pop
pop
je
inc
pushf
cmp
sub
mov
mov
lods
cld
mov
insl
lret
lock
clc
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
jmp
std
push
mov
ja
pop
jmp
xchg
sub
ficoms
adc
loope
in
loope
cmpsl
pushf
shll
daa
sbb
cltd
and
stos
lods
je
mov
push
sti
add
daa
push
fidivrs
sub
xchg
fildll
and
xchg
push
ret
ret
push
pop
popa
testb
and
subl
call
inc
push
cs
and
fnsave
push
outsl
adc
jae
repnz
push
ret
pop
sub
out
inc
fs
out
ficoml
pop
loop
popa
addr16
mov
cli
and
jne
out
out
cmpsb
scas
lahf
mov
les
adc
mov
inc
jns
mov
leave
jae
jbe
lcall
imul
repz
cltd
fldcw
stos
aas
xor
push
out
repz
stos
fsts
cltd
testb
jb
push
or
mov
je
daa
rclb
and
sub
xor
fsubrs
sti
dec
push
dec
cmpsb
subl
mov
fildl
mov
les
vhsubps
je
mov
inc
jp
out
pmovmskb
jmp
mov
or
lods
jnp
sbb
cld
jns
add
test
sti
xor
add
popa
push
call
pop
dec
cmp
xchg
xor
adc
pusha
and
clc
jbe
daa
fstl
mov
out
rorb
xorl
push
popf
sub
mov
je
sub
das
mov
idiv
mov
adc
push
scas
jmp
sbb
jp
or
mov
or
es
aas
fwait
sub
das
mov
in
arpl
push
in
lea
enter
fistpl
loop
adc
nopl
lahf
fsubp
rcrb
mov
mov
outsb
aad
jl
dec
cmp
cld
sbb
repz
cld
lret
icebp
and
and
imul
xchg
add
jp
cmc
pop
es
dec
imul
mov
ret
aaa
pop
jp
icebp
add
mov
out
mov
in
jb
repz
mov
iret
bound
mov
call
fists
daa
decb
insb
sbb
fimuls
in
jl
cmc
pop
xchg
sar
ss
xchg
imul
rorl
xor
pop
push
mov
int
pop
shll
outsb
push
out
mov
adc
inc
and
outsb
pop
int
lret
xor
je
xlat
cs
scas
mov
cli
jg
out
nop
push
dec
cmpsb
jmp
mov
push
bound
loopne
and
xchg
bound
pop
insb
push
lods
aad
push
and
cld
xchg
push
push
add
lahf
repz
push
aas
dec
out
fstpt
dec
cmp
mov
push
push
mov
mov
inc
clc
stc
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
jmp
decb
sub
ficoms
stos
mov
adc
ficoms
adc
push
in
push
gs
nop
mov
inc
or
leave
cmp
rcll
and
je
fs
and
pop
mov
inc
and
cltd
fisubrl
in
movsb
mov
push
sbb
outsb
std
orl
es
in
es
mov
sti
dec
mov
mov
repnz
mov
iret
add
mov
mov
xor
gs
push
dec
pop
push
repz
mov
sti
out
stc
mov
pop
jb
add
or
xchg
mov
ljmp
or
aaa
or
lret
rorl
in
mov
mov
loope
fucomip
testb
xorb
add
in
inc
mov
popf
mov
lods
push
shll
push
loopne
dec
into
inc
dec
mov
pop
aaa
add
repz
adc
mov
scas
int
fimuls
mov
adc
pop
sub
xor
xor
sbb
cs
aad
jge
fsubl
lret
xor
sarl
push
ja
inc
test
lret
mov
movsl
xchg
pop
push
jae
adc
call
adc
jl
adc
pop
lock
sub
test
call
and
shlb
push
mov
jge
inc
lret
loop
inc
inc
les
push
lods
sbb
xor
jb
mov
push
sarl
and
add
insl
mov
in
mov
sarb
jns
sbb
ja
jne
adc
sti
sbb
pop
ss
dec
adc
push
je
xchg
test
mov
jcxz
repz
aaa
in
push
je
dec
in
push
je
pop
bound
inc
pop
xchg
adc
dec
lcall
ficomps
dec
stos
sub
jp
add
mov
push
ljmp
fldl
orl
out
rclb
add
andl
xchg
cmp
int3
out
aad
push
daa
fucom
and
jecxz
fidivl
stc
fldt
or
je
bnd
push
scas
rcr
dec
lret
mov
lods
sub
in
mov
or
and
sub
xchg
cmp
and
cmpsl
addl
push
loopne
out
out
leave
adc
into
mov
test
js
push
or
push
sub
popa
vmptrld
and
pop
aam
lret
cmp
pop
cmp
test
inc
adc
fdivl
sub
cmpsb
mov
jmp
adc
sti
outsb
and
sbb
inc
or
ja
sub
xchg
cltd
sbb
sbb
push
xor
cld
dec
pop
push
data16
push
test
movsb
xchg
repnz
jp
pop
leave
inc
jo
push
jg
arpl
inc
mov
and
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
jmp
aam
lock
mov
insb
push
xchg
inc
stos
andl
loopne
push
xchg
fisttpll
jg
push
outsb
mull
lock
cmp
mov
adc
adc
adc
fs
xchg
push
mov
insl
cmovae
jns
dec
fcmovne
rclb
xchg
clc
loop
pop
gs
sub
push
insl
dec
int3
jp
sbb
in
mov
sti
dec
push
shrb
cwtl
jp
scas
ljmp
test
dec
add
or
jle
outsl
mov
orb
jbe
and
jle
pushf
xor
sbb
fcmovnu
enter
pushf
or
push
mov
pop
add
mov
addr16
mov
cmp
shll
push
outsl
shrb
pop
nop
mov
adc
test
fiaddl
and
pop
mov
movsl
sar
fisttpl
sub
push
push
sub
xor
sarb
incb
jmp
pop
xorb
mov
das
mov
mov
push
stc
pop
lea
jge
push
in
movsb
jmp
adc
sbb
and
xor
dec
mov
ret
imul
xor
testb
shll
push
adc
sbb
jl
cmc
cli
in
hlt
dec
ss
pop
add
daa
leave
cmp
lock
leave
dec
mov
cmpsl
inc
cltd
mov
adcb
les
imul
pop
sbb
pushf
cmpb
adc
xchg
adc
push
xchg
fsub
les
fmull
mov
pop
pop
push
outsb
es
pop
sub
jbe
or
fnstenv
mov
lea
hlt
pop
or
ja
aad
xchg
or
cmp
push
fidivrs
jp
jne
test
and
jbe
jnp
add
mov
fs
cmpsb
xchg
loop
lods
dec
lret
mov
sti
out
push
push
or
pop
inc
aam
jno
mov
fst
out
aam
out
data16
pop
sti
cmp
xor
leave
loopne
cmp
stc
subl
jb
jmp
pop
xor
loopne
xor
pop
mov
leave
mov
inc
lcall
daa
mov
sbb
int3
jmp
xor
and
icebp
ret
pushf
lods
cwtl
cs
popf
xor
pushf
adc
pop
mov
pop
std
jp
push
cwtl
jnp
cli
movsl
add
jge
inc
scas
lea
mov
mov
xchg
movsb
and
pop
cs
das
mov
push
mov
sub
lods
fs
out
or
imul
pushf
leave
leave
iret
cli
sbb
jnp
nop
je
into
mov
jmp
dec
inc
pop
in
inc
dec
inc
sahf
in
pop
or
notb
js
fldenv
loope
cmp
cmp
test
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
jmp
jae
jge
jge
and
jle
push
mov
ficoms
adc
mov
data16
or
outsl
aaa
hlt
mov
cltd
daa
and
mov
lret
subb
or
out
jmp
push
sbb
repz
sar
jp
xor
push
xchg
out
sahf
pushf
enter
jbe
into
sbb
and
in
mov
inc
arpl
cmc
add
add
jg
das
nop
mov
in
popa
mov
sbb
sahf
dec
adc
mov
xchg
xchg
push
xchg
loop
jns
sbb
ja
test
and
mov
nop
js
hlt
jle
mov
loope
mov
mov
stc
sti
push
in
and
mov
push
push
sbb
leave
into
jge
pop
mov
ljmp
mov
jb
sahf
sar
aad
adc
cmc
outsl
nop
sbb
sub
in
fistps
push
jge
insl
in
lea
xchg
sarl
sti
out
shrb
cld
push
filds
mov
and
movsl
or
pop
and
inc
into
jne
repnz
shrb
arpl
adc
dec
out
jbe
sbb
test
push
dec
or
repnz
dec
jbe
aaa
idivb
sub
addb
popf
push
je
cmpl
xchg
and
imul
xorb
or
outsl
lcall
jne
sbb
int3
jae
pushf
dec
dec
xchg
mov
or
mov
or
shrb
xchg
mov
outsl
pushf
pop
mov
loopne
ret
inc
inc
mov
or
xchg
std
xor
data16
or
inc
push
xchg
out
jne
sub
pop
sub
jmp
rcrl
rcll
out
fcompl
xor
out
mov
pop
bound
iret
xchg
into
stos
mov
cmp
mov
call
test
lods
push
shrl
and
push
std
in
push
repnz
push
sub
insl
shll
push
adc
pop
movsb
xor
popa
and
add
mov
xor
lock
mov
xchg
or
sbb
push
inc
mov
outsl
idivb
adc
lret
dec
lahf
ja
pop
sub
rcrb
repnz
jmp
or
repnz
pop
outsl
xlat
lods
adc
mov
call
mov
fiadds
imul
sbb
dec
jno
js
ljmp
lea
pop
mov
sbb
xor
add
sar
or
stc
and
add
clc
mov
cmp
popa
sar
ficomps
das
mov
dec
sbb
mov
repnz
repnz
sets
add
lahf
pushf
cmp
jno
xchg
add
dec
scas
jns
mov
pop
nop
sahf
mov
fbld
enter
gs
rorl
jp
inc
lock
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
jmp
gs
icebp
pop
ficompl
das
mov
add
xor
adc
sarb
sbb
jne
mov
addr16
jno
push
outsl
jmp
mov
jmp
ficomps
add
push
xchg
ljmp
xor
sub
mov
push
fwait
int
dec
fucomi
enter
aas
cmp
add
push
push
mov
cmp
mov
add
stos
sbb
out
or
pop
lea
mov
mov
mov
cmpsb
rcrl
sbb
mov
inc
negl
in
add
add
push
iret
mov
push
lea
push
ljmp
ja
jne
sub
adc
mov
xor
inc
cmp
mov
adc
std
and
mov
pop
mov
addb
mov
sbb
mov
adc
adc
stos
gs
in
sbb
jb
movsb
mov
dec
int
sub
enter
sub
pop
jmp
cmpsb
lret
lcall
pusha
xor
mov
jne
lcall
orb
cmc
jns
cmc
jmp
aaa
stc
cwtl
sub
mov
imulb
scas
xor
mov
je
sbb
mov
jecxz
push
lds
into
cmpsl
fmuls
push
fwait
mov
cmp
mov
pop
aam
gs
rcrl
xor
add
and
lock
push
push
jo
push
imul
xor
jp
mov
push
call
addb
push
cmpl
mov
xchg
jb
movsb
mov
dec
in
pop
and
cmp
jb
adc
call
mov
xchg
shrb
mov
outsl
outsl
mov
subb
mov
pusha
test
adc
dec
scas
outsb
dec
push
movsb
push
push
repnz
mov
bound
sti
ret
int
std
lods
ret
or
adc
adc
mov
in
iret
movsb
dec
jb
out
stc
add
cmp
leave
dec
fst
mov
daa
orl
mov
and
fisttps
jbe
lahf
nop
pusha
sub
aad
cmpsl
push
pusha
clc
adc
add
ret
in
and
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
jmp
sbb
pop
loope
pop
pop
cmp
cmp
jle
push
adc
xor
adc
adc
nop
dec
xor
out
inc
mov
or
ljmp
inc
jne
jmp
mov
outsl
ret
ja
pushf
lret
notl
in
imul
subl
pop
xlat
inc
cmc
jle
mov
mov
shlb
nop
das
cmp
mov
stos
and
andl
adc
xchg
cmpl
and
pop
scas
sbb
nop
gs
jg
or
jmp
aam
jle
or
cmp
in
mov
cld
jmp
scas
js
and
jae
ljmp
out
insb
rcrl
xor
sti
nop
cmp
mov
jne
cmp
xor
sbb
repz
ret
insb
cmp
push
bound
pop
mov
pop
xor
lock
sarb
lods
in
push
jmp
pushf
add
mov
arpl
out
push
jo
xchg
mov
and
mov
cmp
test
fldcw
push
into
movsb
jno
mov
mov
sbb
ja
xor
cmp
sub
cmp
mov
mov
paddq
and
xchg
cmp
icebp
mov
fdivrl
mov
mov
shl
push
push
sub
xor
dec
popa
pop
jl
inc
mov
mov
lock
adc
xchg
leave
push
mov
dec
insb
dec
or
fsubrl
movsb
and
xchg
push
cmp
in
out
and
xor
push
sub
push
ret
dec
mov
ds
mov
pushl
push
or
sbb
test
jp
fnstsw
and
inc
fcomps
out
fidivrs
test
ljmp
dec
cli
pop
pop
lahf
mov
stc
pop
loopne
loope
adcb
add
push
cltd
inc
loop
lock
mov
jo
pop
push
dec
out
mov
dec
cmp
cmc
mov
das
mov
mov
mov
mov
test
push
std
and
inc
xchg
test
inc
int
ss
and
xor
jl
jg
mov
add
xchg
and
nop
mov
ret
adc
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
lods
mov
lods
cmp
aaa
mov
adc
adc
cmpsb
dec
xor
andb
cmc
arpl
xchg
xchg
and
test
movsl
or
jp
xor
decb
loop
std
ljmp
addr16
movsl
xchg
popa
inc
repz
hlt
iret
jns
push
out
pop
loopne
inc
sbb
dec
clc
xchg
fs
insb
shll
fnstcw
mov
hlt
xor
cmp
sti
rcll
pop
jecxz
xor
imul
adc
and
cli
mov
mov
ds
mov
or
loopne
push
data16
mov
pop
addr16
xor
xchg
stos
mov
aad
cmp
mov
jbe
movsb
pop
xchg
and
mov
inc
cli
lret
lods
jno
gs
inc
enter
fsts
dec
cpuid
std
js
jp
addl
add
or
lcall
data16
inc
lods
jb
mov
mov
cmp
pop
mov
loope
cltd
orl
pop
mov
mov
sbb
push
mov
addr16
insl
adc
popa
sbb
dec
iret
jns
inc
jnp
sub
repnz
push
mov
or
ret
lret
dec
fwait
mov
mov
xchg
lcall
ss
jo
xchg
stc
mov
cmp
insb
add
lds
adc
es
push
jg
dec
ret
cmpb
jle
out
and
mov
ret
mov
fcomip
inc
xchg
mov
es
mov
mov
fildl
sti
imul
xchg
jmp
mov
fdivr
dec
push
subb
dec
push
push
divb
lods
or
lret
addr16
lock
rorb
arpl
lods
xor
cmc
cmpsl
push
subb
sbbl
subb
ljmp
and
mov
pop
in
cmpl
nop
out
popf
lcall
or
xor
testl
ds
mov
mov
jbe
mov
shlb
lds
rcrl
sub
outsl
out
jae
subl
imul
call
stos
pop
fimuls
mov
sub
outsb
orl
ss
jae
push
adc
imul
pop
jae
jb
je
jo
movsb
hlt
and
push
or
add
mov
ds
inc
or
mov
or
jnp
jnp
add
mov
sbb
scas
push
and
outsl
dec
cmpsl
sub
cmpsl
fldt
into
lahf
hlt
in
xchg
jp
and
mov
push
jecxz
and
push
inc
adc
dec
out
xor
sbb
gs
sub
movsl
lret
sbb
mov
mov
pop
push
insl
xor
dec
stc
ds
mov
cs
jbe
cld
and
imul
xchg
pop
jg
ds
data16
cmp
iret
aas
bound
push
add
movl
mov
mov
push
push
push
call
mov
mov
xor
jmp
fcomps
pop
sub
and
pop
sub
dec
adc
push
adc
adc
out
inc
xchg
dec
or
jecxz
xchg
cs
xchg
adc
sbb
jns
arpl
and
jbe
or
pop
stc
push
add
xchg
cs
mov
push
outsb
lods
add
imul
xor
pusha
movsb
jp
fimuls
sti
imul
xchg
cwtl
das
filds
xor
jl
cmc
xchg
sbb
es
pop
jno
negb
add
idivb
cmp
hlt
push
xchg
adc
inc
push
call
adc
outsl
mov
stc
outsl
adc
xchg
shl
fsubrs
test
pop
mov
pop
xchg
cmp
add
in
das
cs
gs
iret
adc
repz
mov
push
and
xor
clc
sub
mov
sbb
mov
imul
lcall
aas
ret
aam
dec
jnp
xchg
and
in
gs
pusha
popa
push
call
and
aam
jne
sub
test
sarb
lea
icebp
fadds
adc
xchg
and
dec
aad
popa
loop
cmp
jge
gs
mov
xchg
lahf
dec
in
mov
hlt
shrb
add
jecxz
repnz
stos
test
mov
sub
jbe
mov
pop
cmc
sbb
ret
stos
xor
repz
sarl
xor
mov
sbb
dec
dec
pushf
insl
into
cmp
test
call
mov
cmp
sub
xor
addr16
xchg
ret
cmp
mov
test
sub
fwait
mov
sbb
inc
test
repnz
pop
cwtl
mov
sbb
dec
dec
push
enter
mov
sub
cmpsb
ljmp
add
jmp
cltd
jne
pop
mov
mov
mov
xor
mov
adc
and
or
add
pushf
imul
pop
bswap
js
repz
shlb
adc
jg
push
inc
inc
out
mov
push
orb
cmp
fnsave
dec
cvtps2pi
lds
pushf
ds
xchg
jg
pop
lret
stos
inc
jecxz
jmp
cmp
and
pop
sti
leave
pop
ret
sbb
lea
sub
js
mov
into
dec
jg
and
and
mov
dec
das
dec
addr16
xlat
jle
or
add
cmpl
aam
addr16
ja
nop
lods
dec
lahf
lahf
pop
out
adc
mov
jmp
fcompl
jp
test
jecxz
shl
in
out
es
pop
dec
data16
fildll
int3
mov
xor
outsb
add
and
dec
mov
fildll
push
fwait
xchg
lods
scas
fildl
in
repz
xchg
setp
stos
sub
xchg
aaa
add
je
adc
and
mov
pop
and
jle
adc
sahf
and
jmp
sub
mov
sbb
subl
call
mov
mov
mov
push
test
sub
jbe
mov
arpl
cmp
sub
and
dec
mov
mov
rorl
mov
xor
mov
xor
jmp
sarl
sbb
jbe
stos
fwait
mov
adc
push
adc
adc
lods
movsb
sbb
add
or
call
xor
sbb
aas
xchg
mov
insb
add
fsubr
xchg
movsl
cs
in
fucomp
push
xchg
mov
sub
nop
pushf
jecxz
ljmp
test
mov
fs
lock
sbb
mov
in
mov
mov
sub
testb
sahf
mov
pop
in
inc
scas
or
add
repnz
in
dec
jne
cmp
inc
stos
sti
mov
sbb
sbb
mov
sar
loope
lret
sub
pop
lock
icebp
mov
cmp
jns
dec
xor
cltd
rolb
insl
mov
es
mov
rcr
pop
clc
iret
jne
inc
mov
mov
add
mov
mov
insl
pusha
jecxz
repz
sbbl
sub
xor
push
inc
dec
jecxz
jne
clc
push
cmp
testb
dec
popf
arpl
push
xchg
bound
cmp
sub
mov
add
dec
stos
dec
push
push
sub
xchg
push
popa
je
lods
add
dec
jb
sub
mov
cltd
jp
sarb
dec
fs
or
or
loopne
fbstp
inc
pop
xchg
and
sub
addb
lcall
cmc
xchg
dec
jmp
data16
pop
mov
pushf
push
notb
lods
and
adc
cmp
arpl
repz
push
sub
imul
sub
lock
div
loop
clc
jge
and
or
jns
jmp
roll
sub
shl
stos
fsubrs
dec
inc
mov
incb
das
fistps
jae
mov
xchg
adc
js
mov
into
cltd
mov
xchg
test
jae
or
adc
stc
and
and
int3
mov
lea
fnstenv
data16
push
inc
jbe
test
loope
testl
rolb
cltd
arpl
in
jo
jl
stc
inc
lods
xchg
in
mov
rcr
and
pop
adc
repz
jge
sti
sti
arpl
sub
cld
jge
nopl
loopne
xchg
lea
inc
inc
loop
add
repz
pcmpeqd
pop
mov
pusha
mov
das
pop
jns
in
aas
test
jecxz
inc
sbb
mov
fwait
pop
int3
cmc
jnp
adc
fstpt
hlt
sub
cmp
mov
gs
push
test
push
xchg
push
je
outsl
movsb
out
enter
sti
cmpsb
lahf
xor
nop
das
sub
xor
dec
aas
inc
ss
popf
mov
sti
rolb
in
cmpsl
jecxz
cld
jmp
pop
dec
jbe
mov
mov
stc
adc
sub
inc
dec
add
pushf
outsb
xchg
pop
enter
inc
iret
sub
mov
mov
andb
mov
ss
clc
mov
lock
dec
cmpsb
dec
popa
xor
sbb
ficoml
lds
mulb
adc
ljmp
ficomps
inc
mov
cwtl
fs
in
fcomps
push
or
vpcomw
ds
adc
and
imul
das
or
int
xor
add
dec
addr16
fisubl
popa
dec
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
jmp
mov
imul
test
stos
add
jle,pt
cmp
adc
adc
adc
push
je
repz
push
push
loop
outsb
addb
jge
xor
inc
jae
out
xchg
leave
inc
or
mov
and
adc
xor
ljmp
sub
mov
jecxz
dec
mov
and
adc
popf
inc
movsb
xor
mov
mov
lretw
scas
or
idivl
adc
stos
nopl
fwait
add
xorl
jb
sub
cmp
addl
loop
add
adc
push
in
stos
dec
setnp
xchg
dec
inc
adc
sbb
es
mov
fdivr
test
lahf
xchg
adc
adc
imul
lcall
mov
adc
mov
movsl
mov
push
lds
jnp
adc
adc
sbb
dec
cs
scas
sbb
sti
add
outsl
jb
adc
jge
jmp
sub
insl
jbe
mov
xchg
int3
stc
pop
cmpsb
sbb
sub
xor
fsubrl
push
jmp
pcmpgtd
mov
mov
fwait
mov
mov
out
icebp
fs
add
std
shrb
and
es
xchg
lods
add
in
popf
ds
push
push
jo
dec
pop
arpl
xchg
pop
mov
xchg
loopne
or
sbb
jns
pop
mov
inc
dec
xor
push
loope
pop
fyl2xp1
cmpsl
outsl
sbb
or
mov
lret
mov
inc
mov
adc
sbb
jne
jnp
into
pop
mov
sbb
bnd
xchg
idivl
sbb
stos
xchg
imul
mov
arpl
addl
adc
and
shl
add
in
or
jb
in
pop
ss
mov
ds
add
adc
push
push
sbb
aam
add
mov
adc
cltd
jg
jmp
fwait
lahf
push
jne
or
fsub
xor
jae
cmc
dec
push
push
mov
lcall
imul
and
cmpl
or
imul
sub
rcll
mov
inc
xor
sub
xlat
xorb
popa
cmp
mov
out
test
insl
push
popa
jl
loopne
inc
pop
and
pop
push
adc
rcll
fnstsw
mov
mov
shrb
jne,pt
int3
dec
ss
pop
pop
cmpsl
inc
pop
popf
out
mov
stos
and
cmp
in
fsubs
out
or
mov
xor
xchg
bound
jns
dec
sub
and
push
mov
dec
test
inc
lret
hlt
clc
add
mov
jnp
out
pusha
cld
dec
push
mov
or
xchg
test
sbb
cli
outsl
stos
push
push
push
push
int
imul
add
mov
ja
jo
or
iret
xchg
push
nop
xchg
psrld
mov
loope
lds
mov
inc
insb
pop
movsb
xchg
mov
jnp
push
call
sbb
or
movsb
subl
pop
rol
lds
or
xchg
aaa
and
dec
mov
fs
cmc
test
divb
mov
cmpsb
imulb
je
jmp
insb
ror
shlb
insb
daa
ret
mov
ret
jle
xor
adc
adc
adc
je
js
out
or
fcmovb
push
loope
in
mov
adc
test
inc
adcb
push
hlt
cmp
inc
jns
loop
dec
loope
mov
push
aaa
add
ljmp
scas
cwtl
mov
xchg
out
xchg
cmp
and
cld
mov
adc
mov
mov
push
xchg
repnz
lahf
jno
clc
inc
inc
sahf
jge
scas
pop
or
pushf
mov
es
rol
cmpsl
mov
ja
orb
cli
push
movlps
push
cwtl
sub
dec
mov
out
cmc
in
push
jecxz
jo
sbb
sbb
pop
jae
jo
test
fcmove
mov
lret
js
out
mov
push
lds
inc
adc
inc
sbb
add
push
add
dec
and
mov
scas
push
shrl
pop
mov
fcmovbe
cmpsl
xor
mov
sarl
ljmp
aas
dec
xchg
into
imul
cmp
stos
fisttpll
enter
mov
cli
sub
or
pusha
in
fdivl
dec
lds
loop
jl
sub
mov
inc
imull
daa
jmp
inc
cltd
pop
cmpsb
loopne
pop
cmp
mov
and
movsb
inc
jno
clc
xchg
repnz
ds
cmp
cmp
xor
je
iret
nop
or
mov
push
inc
loope
xchg
pop
lods
outsl
jle
inc
lock
fimuls
subb
mov
cmp
add
adc
xor
hlt
roll
inc
jmp
xchg
mov
shlb
fnstsw
mov
test
jl
sub
imul
push
inc
rol
jns
fcoml
adc
fstpt
pop
ja
int
out
test
or
imul
xlat
pop
cmp
test
pop
xchg
adc
fwait
mov
mov
loop
or
pop
inc
jge
xor
out
movsb
popa
in
dec
jo
test
fwait
stos
or
stos
cmpsb
jo
js
lea
xor
std
jbe
inc
or
icebp
or
enter
fcmovnu
jg
mov
dec
stc
or
subl
rclb
fists
jp
mov
in
pop
arpl
lret
stc
xchg
jns
inc
mov
mov
push
fwait
mov
into
stos
stos
mov
xor
sahf
test
dec
adc
pop
sub
jp
xor
push
cmp
rcrb
mov
fadds
movsb
pop
stos
lods
inc
leave
call
out
add
cmpsl
enter
outsl
hlt
es
out
mov
sbb
pop
lret
xor
inc
stc
pop
push
xor
lret
jno
push
das
into
adc
xchg
dec
lods
sti
inc
inc
adc
jl
arpl
cmp
mov
mov
pop
sbb
xor
fcomi
push
jb
int3
adcl
sub
mov
mov
pop
push
notb
pop
fadds
mov
cmp
ljmp
cmc
xchg
mov
pop
sbb
and
test
loope
sbb
test
pop
jne
stc
mov
push
imul
mov
mov
mov
mov
add
adc
or
mov
jmp
les
lds
pop
inc
daa
and
mov
out
adc
push
adc
adc
pop
xor
lea
mov
test
pushf
aaa
scas
jbe
int3
subb
pop
hlt
inc
in
mov
ret
sbb
mov
xchg
push
jmp
jbe
jmp
pop
std
push
push
pop
sarl
cmpsl
cmp
aam
inc
add
sbb
and
addr16
cmpsb
xchg
xor
sbb
scas
jl
mov
xor
xchg
add
mov
fadds
scas
or
push
cmpsl
into
hlt
push
push
xor
or
and
lcall
mov
inc
int3
add
push
jmpw
push
push
xchg
add
push
add
pop
cmpsl
mov
push
mov
mov
mov
pop
bnd
xchg
dec
xchg
jo
xor
sbb
inc
xchg
popf
into
mov
nop
adc
sub
ss
js
out
orb
mov
pop
xchg
call
cld
sbb
and
jne
mov
sahf
out
movsl
mov
jns
pusha
into
or
movsl
push
popa
inc
outsl
dec
or
addr16
and
stos
inc
pop
fcmovu
fildl
sub
dec
push
add
addb
ds
test
ficoms
mov
xchg
xor
jnp
scas
mov
mov
adc
xor
sarb
xchg
popf
iret
add
cmp
mov
in
push
fs
outsb
jne
and
push
cmp
dec
sbb
int
mov
out
cmp
xlat
adc
pop
cmp
sbb
mov
sbb
bound
lcall
inc
scas
mov
xor
xchg
fcmovnb
test
shrl
jae
rcrb
int3
push
ss
pop
xchg
movsl
adc
outsl
aas
rolb
dec
cmpsb
imul
insb
scas
cmc
mov
mov
movsb
cmp
or
into
push
mov
jae
and
mov
imul
cmp
inc
jns
scas
cmpb
fildll
scas
mov
aad
clc
sbb
dec
test
popa
into
rol
xchg
mov
dec
test
xchg
add
xchg
outsl
mov
fcmovnbe
insl
xor
xchg
add
leave
push
cwtl
or
mov
fbstp
inc
dec
into
shl
dec
push
nop
roll
int3
nop
outsb
scas
cltd
pop
ss
sti
sbb
pushl
cmp
jmp
insb
xor
fdivrl
ret
push
jle
je
adc
cmp
rolb
in
cmc
xchg
inc
xchg
add
pop
or
jmp
cs
or
cmp
pop
nop
movsb
stc
push
in
popa
lods
repnz
into
mov
aas
stc
lock
add
add
pop
adc
test
lods
outsb
aaa
test
dec
ret
sub
xchg
jge
adc
xchg
sub
lcall
cmp
cmp
dec
cmp
mov
inc
sarb
mov
sbb
lret
int
mov
mov
nop
cmp
iret
lret
lret
shlb
leave
sbb
in
lahf
xor
cmp
cmpsb
mov
popa
mov
jp
lods
cmp
test
mov
push
ret
repz
int
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
jmp
push
add
aaa
mov
inc
sub
iret
inc
stos
fisubl
adc
push
adc
adc
test
rorb
mov
mov
outsl
dec
xchg
cmp
insb
mov
inc
int3
sbb
repz
jmp
add
jp
loope
ss
aam
movsl
add
inc
ret
or
repz
xor
push
lret
pop
rcr
test
jg
out
stos
xchg
pusha
int3
push
sub
sub
stc
cmp
push
dec
scas
adc
movsb
mov
jnp
flds
xchg
popa
jo
xchg
jmp
loopne
das
icebp
ror
mov
arpl
ret
xchg
test
rcl
push
out
insb
add
sub
mov
sbb
mov
dec
mov
incb
push
lret
test
icebp
sub
pop
nop
sti
mov
or
xchg
dec
mov
hlt
ret
jnp
sbb
pop
iret
repnz
mov
push
pop
jnp
and
lret
movsb
hlt
mov
pusha
movsb
es
les
dec
and
dec
jg
ret
sub
mov
sub
in
jp
aam
mov
sub
imul
mov
xor
popl
push
enter
aas
jl
sub
rep
pop
dec
mov
or
push
mov
push
stc
push
hlt
xlat
jle
cmpsl
lahf
subl
adc
pop
jl
in
cmpb
out
lods
push
sub
add
mov
mov
dec
push
push
in
enter
adc
mov
jge
bts
push
test
inc
xchg
lock
fwait
add
xor
pop
xor
outsl
pop
pop
in
push
inc
adc
addr16
inc
ljmp
sbb
lret
mov
inc
imul
add
cmpsb
leave
mov
jmp
pushf
out
aaa
or
xchg
push
push
int3
fnstenv
dec
icebp
test
outsb
mov
inc
ret
fcomps
sub
test
jne
xor
xor
push
in
jge
add
mov
sbb
aas
fcmovb
pop
sbb
sbb
jmp
nop
jmp
xor
lea
iret
jge
sbb
sub
clc
sub
mov
les
call
cmpsb
xchg
aam
cmp
shrl
jge
mov
iret
jecxz
xlat
gs
jp
pop
aam
add
stos
aad
nop
push
popl
arpl
sbb
jo
push
gs
rol
xchg
rcl
cld
cmpsb
jmp
push
mov
dec
repnz
and
inc
test
mov
sbb
roll
sbb
mov
or
inc
mov
mov
imul
out
adc
mov
xchg
push
jecxz
imul
ror
cmp
push
out
or
shr
push
push
test
ljmp
es
mov
cmp
adc
mov
fcoms
addl
nop
dec
jne
into
imul
cmp
nop
out
xchg
add
scas
dec
xchg
loop
test
dec
sbb
mov
push
mov
xchg
js
out
repnz
stc
dec
int3
mov
mov
sbb
mov
or
shrb
add
insl
test
and
and
add
add
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
jmp
and
pop
sbb
push
iret
and
sbb
adc
movlps
mov
xor
icebp
pop
xor
sbbl
cli
xor
jmp
mov
stos
jnp
push
cmpsb
pop
lods
in
xchg
fst
stos
iret
stos
dec
push
and
subl
mov
mov
sahf
ret
in
jns
js
lret
loope
idivl
inc
push
aas
bnd
inc
inc
shrl
daa
daa
movsl
into
mov
pop
or
movsb
xor
xor
hlt
out
lock
jnp
jo
pop
push
dec
es
fcoml
lcall
cmc
scas
inc
int
lods
xor
cmp
sbb
mov
sbb
fcomp
icebp
and
mov
iret
add
jp
das
movsb
les
ljmp
iret
add
mull
mov
cmp
stos
mov
push
mov
add
ja
repnz
insl
sbb
and
sbb
inc
jo
lahf
std
inc
lret
dec
adc
mov
fcomip
cltd
addr16
fisubl
subl
dec
push
pop
fdivrs
pop
or
xchg
dec
adc
das
mov
insb
xor
in
into
icebp
mov
pop
popf
repz
sarb
sub
xchg
ja
sub
sahf
shll
ds
xlat
mov
sub
movsb
loop
sub
sbb
loop
fwait
mov
dec
adc
jle
push
cmp
mov
rcrb
xor
mov
jns
aaa
cwtl
xorl
out
sub
std
rcll
jo
idivl
ret
inc
xchg
sti
xchg
sbb
fbstp
fimuls
jae
stos
push
insb
scas
sub
lret
imul
nop
mov
addr16
ret
lret
lock
sbb
xlat
jg
es
mov
fwait
mov
cmp
inc
or
filds
rorb
lret
mov
mov
pop
les
mov
xlat
insl
sbb
scas
clc
stc
mov
int
cltd
stos
adc
push
xchg
mov
pop
shll
jge
inc
in
lahf
out
mov
or
repz
mov
arpl
js
mov
push
push
pop
mov
jl
arpl
and
jns
cli
jb
into
dec
pop
xchg
push
and
test
cmp
clc
mov
insl
and
loop
in
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
jmp
pop
rolb
sbb
sbb
popf
fs
cmp
adc
movlps
cmpb
cmp
xor
jae
and
pop
adc
sbb
sarb
call
and
shll
repz
mov
mov
adc
inc
push
mov
inc
mov
call
test
dec
das
xchg
imul
mov
ljmp
cmpsb
inc
sbb
mov
data16
mov
stos
sar
sub
lea
lock
and
pushl
jg
and
inc
dec
mov
adc
shr
xchg
xchg
inc
aam
jg
pop
fildll
push
popa
aam
mov
xchg
jne
adcl
sahf
mov
in
es
dec
mov
mov
push
or
in
movsl
inc
fdivl
fstl
xchg
ror
and
xlat
adc
pop
ret
sbb
ret
pop
sbb
ret
js
xor
fnstcw
inc
jmp
cmp
sbb
sti
das
cmpsb
test
out
mov
pop
lret
filds
adc
lods
add
rolb
cwtl
add
lahf
enter
call
or
push
test
fstpt
add
sbb
lea
jecxz
pop
inc
cmpsb
lcall
sub
js
xchg
pop
pop
xchg
add
xchg
shrb
testl
and
ljmp
adcl
pop
jo
call
fcom
stos
sub
dec
push
out
mov
clc
xor
push
cltd
jg
jg
shlb
mov
add
aaa
sbb
or
dec
push
adc
mov
jl
xchg
stos
or
inc
jmp
pop
xor
int
das
fwait
iret
fldenv
mov
or
and
pop
or
xor
inc
xchg
sbb
stos
jns
iret
jp
pop
imul
and
push
cmpsb
lods
outsl
je
sbb
and
push
add
add
xor
test
lretw
mov
pop
jae
test
fsubs
add
xchg
jle
int3
mov
les
cmc
xor
jle
dec
mov
repnz
sbb
imul
and
and
mov
fldl
es
sarl
mov
icebp
pop
mov
orb
frstor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
jmp
repz
push
cmpb
adc
sahf
lods
push
adc
decb
adc
add
adc
stos
int
cmpsl
lods
jo
push
test
gs
pop
jle
xchg
aad
outsl
lcall
jmp
add
mov
mov
jo
inc
mov
repnz
mov
add
rolb
das
ficomps
lods
loope
lock
repnz
xor
adc
pop
hlt
push
fsubrl
push
pop
add
sti
imul
mov
inc
sub
in
inc
adc
cmp
mov
mov
sub
fsubl
ss
mov
mov
pushl
adc
aas
and
sub
fwait
pop
ret
push
mov
fs
jecxz
scas
jno
sahf
xor
fsubrs
popa
and
inc
adc
pop
aad
mov
xchg
push
dec
arpl
lcall
into
in
push
es
ss
xor
pop
fmuls
shlb
push
pop
jno
or
out
les
jbe
adc
push
test
movsb
fnstsw
je
pop
popf
cmp
sbb
inc
and
or
loopne
add
adc
xor
test
and
movsl
sub
lret
xor
stos
out
mov
enter
dec
dec
inc
jg
pushf
stos
repnz
pop
xchg
into
nopl
jae
rcll
inc
and
sub
insl
ss
ret
inc
movsl
aaa
fnstcw
adc
add
fimuls
cmpsl
or
fs
push
add
adc
es
adc
mov
pop
iret
push
popa
iret
fists
pop
xor
or
in
fidivs
jge
jl
lret
pop
negb
cs
add
push
cmpsl
pop
adc
dec
xchg
pop
inc
add
in
cwtl
or
sub
loopne
imul
imul
into
and
push
mov
shlb
or
pop
lcall
lock
dec
cld
sbb
mov
cmpsl
cmp
mov
test
jle
in
psubd
xor
cli
pop
jmp
cmp
cmp
cmp
gs
xchg
mov
dec
dec
pusha
data16
mov
mov
push
push
dec
push
add
les
pop
iret
orb
xchg
cltd
push
test
ss
inc
aad
xabort
fistpl
call
stc
add
sarl
in
fildl
iret
sub
mov
mov
sbb
mov
sub
mov
sbb
add
jmp
mov
bound
popa
adc
inc
add
jle
or
adc
movlps
lcall
sbb
mov
scas
ss
and
cmc
mov
fmul
or
mov
cmp
mov
inc
mov
push
mov
stos
rorb
xchg
mov
shlb
maskmovq
sbb
rcrl
inc
and
js
rorb
out
loope
xchg
lds
es
mov
sbb
or
inc
cmp
mov
ffree
ljmp
lahf
adc
pop
cli
mov
lods
lret
ret
push
sub
mov
imul
das
pop
setnp
xor
stos
imul
sbb
or
in
cmp
lock
and
fs
incb
je
lea
push
mov
mov
repnz
mov
push
je
push
sub
out
mov
out
inc
rorb
push
adc
sub
imul
inc
jge
inc
mov
dec
pop
mov
xor
ds
inc
gs
lret
jmp
mov
pop
inc
ret
std
aad
lcall
add
adc
subb
or
dec
mov
lret
jo
adc
sbb
cwtl
xchg
fwait
lahf
into
cs
mov
ds
add
add
or
mov
mov
pop
lahf
clc
add
pop
xchg
cmc
clc
ss
negb
outsb
imul
addl
adc
daa
movb
add
and
add
inc
and
jge
std
xchg
lods
out
mov
int
mov
loopne
jae
aam
lret
inc
test
dec
pop
lcall
push
and
pop
jnp
jne
fs
mov
pusha
hlt
sti
fcomps
scas
mov
mov
sub
jmp
inc
fidivs
mov
mov
jo
into
scas
hlt
cld
pop
add
ja
ds
les
in
push
stc
jecxz
mulb
and
cli
out
dec
repnz
jbe
ja
mov
jmp
sub
outsl
sbb
inc
cwtl
iret
fwait
adc
stc
lret
mov
in
repnz
adc
push
jg
pop
dec
push
jnp
add
mov
pop
cs
pop
jae
test
cli
ljmp
cmp
add
sbb
cmpsb
mov
nop
dec
dec
aas
fnstcw
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
jmp
jp
push
sub
pop
cmp
das
jb
mov
decb
adc
push
js
cmp
push
push
ffree
notl
sar
jnp
imul
aad
sbb
jg
loope
aad
pusha
add
push
cmp
shll
mov
test
jle
sub
xorb
or
fs
sbb
hlt
sub
mov
mov
xor
add
jp
adc
push
xchg
dec
sub
int
cmp
jns
jg
xor
jecxz
dec
out
or
pop
inc
push
mov
xchg
repz
aad
leave
and
and
iret
pop
mov
lahf
mull
jb
add
rol
inc
or
sbb
addr16
add
or
dec
lcall
sbb
into
mov
pop
popf
cmp
jnp
add
xchg
push
mov
xor
les
push
add
mov
add
aad
xchg
jmp
cmp
fimuls
mov
mov
in
mov
test
frstor
neg
or
lret
push
push
xorb
fildll
scas
rcrb
jl
xchg
sbb
ret
ss
xchg
mov
fsubs
xchg
sub
mov
leave
jmp
lea
decb
pop
dec
pop
fildll
mov
jae
inc
test
mov
cltd
or
or
jp
lods
loop
sbb
push
xlat
nop
pop
sbb
lcall
es
mov
enter
imul
addr16
xchg
xchg
push
adc
int
shll
mov
cmovp
sub
mov
ret
les
aam
inc
outsl
daa
pop
arpl
insb
add
mov
mov
pop
cmc
jmp
jnp
pop
mov
xchg
aaa
pop
cmpsb
outsb
lods
pop
jecxz
pop
scas
ss
dec
movsb
or
es
daa
xchg
cmp
fisubs
rorb
pop
push
add
pop
and
push
sbb
adc
shlb
scas
daa
lock
lret
push
popa
xchg
and
sarl
popf
mov
dec
xchg
push
mov
lods
test
in
and
aad
and
movsb
mov
fsts
lcall
push
les
push
sbb
or
sub
out
outsb
inc
test
hlt
adc
insl
jo
imul
loope
add
nop
shll
push
fwait
jnp
sbb
enter
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
jmp
mov
call
sub
push
mov
push
adc
rorl
adc
add
repnz
in
lods
push
adc
call
icebp
test
jg
cmp
push
xchg
ret
and
shrl
leave
ret
data16
xor
enter
and
int3
jae
fldt
fimuls
fs
sti
inc
or
ret
ret
fdivl
sarb
sbb
rcrb
pop
pushf
loope
adc
nop
or
mov
data16
adc
mov
int
call
inc
out
cld
imul
test
enter
cmpsl
sbb
xchg
mov
paddw
daa
pop
jae
jg
mov
insb
mov
jp
mov
adc
pop
adc
ds
insb
pop
out
imul
cmpsb
add
rclb
cmp
and
shll
jns
jp
sarl
add
sub
and
mov
push
insl
pop
shll
xchg
and
push
std
push
lea
movsb
cmc
xor
das
inc
cmc
add
les
icebp
outsb
cmpb
lock
data16
nop
adc
mov
xor
out
sub
push
je
inc
mov
jecxz
mov
push
cmp
jmp
jge
ror
add
lock
mov
ret
add
and
cmp
mov
bound
push
fsub
adc
inc
and
lret
inc
rcr
add
jnp
push
pop
test
stos
in
jns
or
and
lahf
sub
lods
jge
and
jne
loopne
mov
cmp
dec
jecxz
pop
dec
ds
or
test
dec
ficoml
mov
xchg
mov
or
jne
fmuls
sti
pusha
cwtl
mov
mov
arpl
xchg
in
inc
cmp
jne
jae
mov
std
repnz
jbe
aaa
ljmp
movsb
xchg
orl
lret
aam
pop
lods
pop
sbb
push
xor
push
and
notl
mov
test
lds
sbb
nop
movsb
cmpsl
sbb
stos
jle
popf
out
push
pop
or
dec
sub
data16
inc
inc
addr16
mov
pop
lea
lock
cltd
cmpsl
adc
rcll
jg
lds
cmpsb
or
loopne
push
pop
xor
fldcw
clc
insb
cmp
and
xor
bound
add
inc
enter
add
inc
int3
mov
add
inc
rcr
jg
add
inc
aam
sub
add
inc
fmuls
sldt
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jl
and
pop
popa
loopne
stos
orb
push
cld
adc
popa
movlps
test
call
xchg
mov
push
mov
jl
or
iret
dec
and
inc
ss
xor
jns
psubsb
ret
je
adc
addr16
inc
lahf
xor
pop
adc
xchg
jo
xchg
outsb
add
mov
jge
or
in
sub
dec
push
out
loop
cmpsl
fdivr
push
inc
xchg
pushf
mov
add
mov
mov
jns
sbb
inc
inc
dec
xor
cmp
repnz
cmp
mov
std
ret
jne
or
add
fcompl
xchg
iret
ret
shlb
out
push
and
inc
repz
shl
sbb
scas
ja
xchg
je
ss
ljmp
xor
and
outsb
fildll
jns
inc
fmuls
cmp
jp
inc
arpl
jnp
push
dec
out
in
xor
or
adc
or
fisubrs
and
adc
sub
mov
in
push
addl
mov
pop
rep
push
std
icebp
insl
in
sbb
sbb
das
jecxz
into
and
xchg
hlt
xor
push
jmpw
fnstsw
lock
repnz
in
mov
xorl
push
jae
in
imul
mov
mov
mov
jge
push
jl
jns
or
fisttps
adc
push
add
rcrb
jmp
mov
and
dec
hlt
mov
lcall
fnstcw
jb
ljmp
xchg
movsl
add
outsl
push
lds
sbb
dec
jp
int3
xorl
jp
dec
mov
push
push
loopne
mov
pop
sub
icebp
mov
cld
mov
cld
mov
pop
mov
aad
test
jns
out
stos
mov
mov
les
subl
in
and
mov
inc
sub
pop
push
push
repnz
aas
lods
and
sub
jne
aas
mov
loop
test
push
push
or
stos
pop
out
das
add
sub
inc
insb
mov
sub
xlat
fcomi
and
mov
stc
rol
lcall
je
js
fisubl
stos
pop
xor
cmp
jge
dec
adcl
call
jge
add
movsl
call
shlb
pop
mov
push
dec
mov
mov
enter
testb
jnp
xor
fsubrs
fwait
enter
in
jbe
add
mov
loopne
lahf
adcb
mov
jb
outsl
push
sub
inc
cld
dec
pusha
add
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
jmp
mov
loop
lcall
stos
xchg
outsb
test
dec
clc
adc
popa
movlps
dec
cmpl
or
push
xchg
mov
dec
pushf
into
cmpsl
mov
and
sub
stos
dec
aam
cmp
inc
jns
adc
sbb
dec
cwtl
xor
mov
adc
xor
fwait
repz
push
loop
outsl
or
dec
cwtl
pop
lods
ss
imul
push
pop
test
in
je
mov
lock
xchg
pop
pop
lock
fsubs
ja
xor
sub
lods
mov
pop
and
push
repnz
mov
shll
cmp
mov
arpl
loope
mov
jns
dec
out
sbb
fxam
mov
cmpsl
bound
leave
lea
jge
sarl
push
jo
pop
or
outsl
or
adc
xor
push
pop
int3
cmp
inc
mov
mov
xor
mov
jge
es
pop
and
or
pop
stc
mov
push
ds
or
fildl
popa
or
inc
sub
xor
dec
add
mov
mov
aam
lods
ret
test
and
ficomps
mov
in
mov
sbb
inc
daa
jecxz
in
push
loop
movl
mov
sub
sbb
lret
dec
mov
cld
adc
mov
mov
icebp
cmp
out
outsl
daa
les
test
icebp
js
or
nop
jne
adc
out
xlat
cmp
mov
cmp
adc
sbb
xor
jecxz
sub
addr16
xchg
or
add
mov
icebp
popa
jmp
daa
test
push
popa
cmp
sbb
cmp
gs
in
pop
xor
xor
mov
shl
lret
and
jb
addb
xchg
cmp
fcmovnbe
and
xchg
push
pushf
cmp
cmp
dec
sub
jns
pop
mov
add
fwait
cmp
pop
cmp
pusha
push
inc
fstps
mov
or
mov
jbe
inc
sbb
into
add
pop
test
ja
mov
mov
or
xchg
aam
dec
lret
aad
push
push
sbbb
sbb
divb
outsl
fldcw
fsubl
negl
aaa
sub
sub
loope
cmp
data16
xor
xchg
stos
cmp
in
push
pop
mov
or
sbb
adc
pop
sar
dec
xor
push
test
rolb
xor
clc
mov
xor
sub
div
mov
mov
or
xor
mov
jmp
sti
je,pn
sub
stos
aam
cmp
notb
adc
adc
fidivrl
out
mov
movsl
stos
xchg
xchg
insl
xor
ret
mov
cmp
mov
mov
xor
sub
mov
iret
inc
and
jl
and
inc
imul
xor
movsb
jnp
mov
push
aas
insb
or
lds
daa
push
mov
jp
stos
mov
fstl
mov
in
jb
mov
xchg
add
pop
outsl
pop
ljmp
jb
mov
mov
push
xor
sub
pop
into
mov
fs
lods
loopne
jb
call
fistl
iret
test
cltd
pusha
test
cltd
jo
jo
popa
stos
repz
fmuls
pop
pop
sbb
loop
push
jbe
xchg
sbb
sub
push
add
cmp
inc
push
sahf
and
xchg
dec
sub
into
insb
push
lret
inc
fs
sub
pop
in
outsb
xor
jne
push
inc
fiaddl
pop
jbe
xchg
and
add
push
jno
jecxz
stos
std
push
mov
jp
je
cmp
xor
imul
sub
pop
mov
cltd
sub
add
mov
jb
adc
push
test
ss
push
xchg
dec
mov
aad
arpl
cld
testb
push
mov
gs
clc
and
jg
push
and
xlat
hlt
int
aas
mov
add
fidivl
clc
pop
stos
inc
pop
leave
ljmp
pushf
mov
lods
out
adc
clc
mov
and
pop
adc
dec
loopne
cmp
jp
outsb
mov
mov
imul
mov
inc
pusha
mov
adc
mov
sbb
nop
addr16
repnz
jecxz
adc
push
xchg
inc
and
xchg
adc
push
ja
or
fnsave
mov
mov
cmpb
mov
cmp
movsl
aaa
fisttpl
bound
pop
dec
add
mov
int3
lds
mov
mov
leave
lods
call
outsb
sub
mov
popa
adc
or
xlat
sub
mov
pop
aam
mov
push
cmp
sahf
push
out
push
and
and
sti
fcompl
push
or
fnstsw
ss
lds
repz
inc
dec
xchg
fstl
adc
mov
add
pop
add
fimuls
out
mov
popa
cld
sarl
jge
int
pop
xor
int3
outsb
push
xor
dec
cli
cmp
int3
jnp
mov
stos
test
mov
adc
xor
sbb
test
lds
xchg
xor
push
test
scas
lahf
add
mov
sbb
cld
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
jmp
xchg
and
jp
sbb
lods
mov
in
adc
popa
movlps
test
insl
sbb
in
inc
add
mov
repz
pusha
add
outsb
and
andl
call
aad
std
xchg
aaa
fiadds
leave
ret
ds
test
and
mov
scas
in
sbb
dec
dec
test
out
insb
pop
push
sbb
mov
adc
fdivrs
or
shlb
outsb
mov
test
push
in
push
pop
popf
int
rol
sahf
jge
xchg
int
pop
ljmp
jo
mov
ret
xchg
test
movsl
mov
jg
inc
jne
xor
xchg
loop
adc
imulb
mov
and
lret
push
ds
and
pop
pop
xchg
push
fcmove
sbb
mov
jle
aad
pop
icebp
popf
xchg
or
jbe
fsubl
das
push
and
icebp
arpl
movl
cld
sub
test
les
cli
out
mov
inc
ss
test
cmp
pop
adc
dec
ds
sbb
stc
repnz
mov
push
pop
mov
mov
cmpsb
jl
push
js
push
int3
sbb
mov
mov
pop
ret
add
xchg
fmul
xchg
pop
dec
fidivrl
inc
das
pop
adc
fmulp
xchg
jns
mov
and
inc
icebp
or
sti
leave
dec
aad
jl
jmp
mov
pushf
mov
sub
jbe
inc
fidivrl
sahf
push
xchg
xchg
movsl
dec
cwtl
fwait
cmp
mov
push
sub
daa
pop
dec
sbb
loopne
xchg
jno
out
inc
and
mov
aam
and
pop
imul
cmc
inc
cli
ja
add
lods
pop
sahf
mov
jnp
iret
std
cmp
dec
movsb
mov
fisubrs
cmpsb
test
jo
in
cmp
lahf
cld
cmp
fsub
ljmp
inc
sbb
lods
sbb
and
fwait
ret
gs
test
fldenv
loopne
sub
fldcw
insb
add
ror
loope
xor
mov
stc
xchg
cmpsl
in
notl
stos
nop
test
loop
sbb
fbstp
sub
dec
cmpsb
arpl
and
test
cmp
xchg
iret
out
jae
push
sbb
xor
sbb
jns
stc
dec
lret
lods
xorl
adc
test
fmul
adc
lret
int
insl
push
in
lret
xor
add
lcall
sub
sub
das
divl
jg
and
xchg
mov
mov
sahf
xchg
aam
out
out
movsl
test
mov
xor
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
push
addl
push
mov
or
mov
push
mov
sub
mov
shrd
cmpl
mov
mov
mov
jmp
movl
not
jae
push
push
pushl
pushl
call
movl
sbb
xor
mov
mov
sub
imul
add
xorl
mov
or
addl
shr
mov
mov
mov
mov
xor
mov
xor
xor
cmpl
mov
mov
movl
jmp
movl
ja
push
push
pushl
call
or
orl
sub
movl
mov
mov
sbb
sbbl
mov
sbb
mov
or
mov
mov
andl
shl
adc
mov
add
shrd
negl
xor
shr
xor
mov
adc
mov
xor
or
mov
mov
negl
mov
mov
mov
mov
cmpl
movl
mov
mov
jmp
mov
mov
ja
push
push
push
push
push
push
call
mov
mov
sub
sub
and
mov
xor
xor
sub
imul
sbb
add
mov
mov
andl
mov
mov
shl
xor
jmp
filds
scas
pop
sub
out
in
jmp
cs
adc
sbb
mov
mov
pop
mov
jae
dec
fldenv
cmp
xchg
or
xor
in
lret
xchg
fmuls
cmp
dec
lret
inc
vrcpps
pusha
rcrl
pop
pop
push
mov
adc
add
jns
xor
movsb
in
add
into
insl
push
mov
xorl
mov
subl
ja
mov
sub
loope
push
sbb
mov
jg
scas
out
jp
adc
cmp
nop
jmp
movsl
pop
mov
pop
mov
in
xor
lret
movsb
add
push
push
sub
jmp
sbb
loope
xor
das
xchg
mov
fwait
lods
loop
inc
loope
dec
sbb
lea
ficoml
push
hlt
ret
cmp
xorl
inc
add
insb
ret
sub
scas
mov
arpl
out
push
push
jmp
sbb
stos
jnp
mov
inc
push
xchg
cmp
xor
sbb
xlat
sbb
pop
adc
mov
sbb
cmp
mov
mov
mov
or
cmpsl
fwait
ljmp
push
lret
push
and
andb
sub
stc
hlt
jl
sub
inc
fistpll
mov
ss
ficoms
fmull
mov
jmp
ror
cs
sbb
imul
inc
cmp
arpl
fs
xor
testb
jne
inc
inc
inc
xor
and
pop
test
sbb
shlb
inc
pop
mov
test
stos
and
mov
adc
das
rolb
lock
sub
mov
je
mov
int3
mov
add
sub
mov
push
les
mov
lahf
xchg
cwtl
jbe
sub
cmp
out
aad
and
and
push
or
mov
cs
mov
mov
repnz
cmp
aas
jmp
inc
push
jecxz
add
add
scas
sub
jmp
in
dec
js
mov
fld
pop
lods
mov
out
push
jbe
xchg
sub
inc
stos
in
xor
fnstsw
comiss
insl
out
stos
loop
mov
xchg
jg
idivl
mov
cltd
push
jbe
ficoml
mov
and
movsb
sbb
lcall
enter
jle
add
movb
mov
xor
adc
shld
mov
shl
mov
movl
movl
movl
cmp
movl
jne
cmp
je
mov
cmpl
mov
notl
movzbl
mov
jmp
mov
jbe
pushl
push
push
push
push
call
or
sbb
not
movzwl
adc
xor
xor
and
mov
add
xor
add
xor
add
movzwl
xor
mov
cmpl
movl
movl
not
mov
jmp
mov
movl
jge
pushl
push
push
call
or
or
movl
andl
orl
movzwl
adc
andl
adc
xor
incl
xor
xor
xor
mov
sbb
mov
shld
movl
shl
movl
cmp
movl
jne
movl
cmp
movl
je
cmpl
mov
mov
jmp
mov
jne
push
call
addl
and
and
and
movzbl
or
xor
mov
mov
mov
adc
mov
mov
mov
sub
xor
push
pop
xor
xor
xor
jmp
shlb
jno
jno
stos
sub
cmpsb
js
roll
adc
out
jae
cmp
adc
into
mov
cmp
aas
icebp
xor
icebp
andb
inc
mov
outsb
fldenv
vpackuswb
sarb
gs
imul
pushf
iret
and
jnp
and
or
sahf
jle
inc
sub
jmp
icebp
xlat
arpl
std
ljmp
mov
sub
outsb
xchg
push
add
gs
les
loop
jne
add
cmp
ret
mov
ficoml
ret
sbb
loop
push
jne
xchg
out
in
mov
pop
fimull
adc
idivb
push
in
or
cli
mov
rol
and
ljmp
imul
clc
and
sub
repz
mov
rorb
xor
rcrb
xchg
sub
dec
pusha
outsb
add
aas
cmp
dec
repz
sub
stos
fdivrl
dec
ficoms
ljmp
push
cli
ja
enter
sbb
pop
push
or
loope
mov
xor
lret
xor
or
mov
adc
xchg
dec
jg
jg
test
xchg
mov
jnp
loop
popa
xor
add
arpl
pop
dec
out
mov
dec
dec
inc
mov
xchg
mull
inc
ret
pop
mov
push
jne
jnp
xchg
mov
testb
out
mov
notl
les
lret
push
inc
adc
mov
ds
xchg
push
push
adc
xor
addb
clc
push
xor
mov
sub
jno
aaa
repnz
fbstp
lea
mov
inc
rcrl
mov
mov
mov
out
mov
mov
std
dec
das
inc
lret
mov
cs
dec
add
adc
push
inc
aas
mov
test
cmp
mov
out
sbb
xchg
xchg
std
fs
pop
xchg
loope
mov
cmp
cwtl
inc
push
pop
mov
cmp
movsl
pop
adc
xor
cli
in
repnz
scas
test
jg
push
pop
std
and
outsl
jl
inc
mov
in
cwtl
je
enter
clc
in
xor
pop
mov
out
outsl
jle
leave
sub
xchg
xchg
mov
popf
not
sbb
movsl
mov
insb
dec
psllq
pushf
sub
mov
pop
hlt
movsl
mov
jne
pop
add
pop
outsl
pop
jo
ret
outsl
add
lods
ss
out
sub
adc
shl
adcl
mov
xorl
xor
movl
shr
or
cmpl
mov
mov
movl
jmp
movl
movl
ja
pushl
pushl
pushl
push
pushl
call
or
or
xor
add
and
add
xor
mov
xor
mov
mov
mov
mov
mov
push
cmpl
mov
movl
jmp
mov
mov
jae
pushl
call
sbb
adc
xor
movl
orl
add
pop
andl
sub
cmpl
mov
mov
jmp
movl
movl
jne
push
push
push
call
xor
movl
or
or
subl
adcl
mov
xorl
add
addl
mov
subl
lea
mov
mov
mov
xorl
jmp
outsb
xchg
or
pop
pop
stos
adcb
fistl
adc
sbb
movsl
int3
in
sbb
addl
sub
cmpsb
mov
popa
adc
jp
lea
xchg
fcoml
cmpl
mov
aaa
out
unpcklps
sub
xchg
ficompl
mov
inc
cltd
out
pop
add
dec
sub
inc
ret
or
in
pop
shlb
es
mov
jae
add
clc
push
add
test
cmp
push
sti
arpl
and
sbb
pop
mov
fcoms
lret
in
pop
cmp
mov
icebp
mov
adc
mov
movsl
test
jae
xor
sub
lahf
jno
shlb
fwait
sub
sti
stos
mov
dec
push
pop
jb
out
xor
cmpsb
rcrl
je
lahf
insb
test
loope
and
lret
pop
cmpb
ds
push
inc
mov
xor
or
cmp
and
jno
and
pop
dec
cmc
mov
hlt
mov
jno
iret
orb
and
push
xchg
mov
out
dec
adc
outsl
or
sbb
ret
in
push
or
jle
call
scas
push
cld
pop
mov
outsl
cmpsl
push
mov
push
in
sbb
scas
loop
in
mov
leave
sub
mov
lea
and
jl
test
add
sub
or
imul
out
push
inc
mov
and
pop
pop
movsb
inc
sbb
ret
or
mov
pop
jbe
lods
sbb
movsb
hlt
arpl
push
xchg
inc
xchg
adc
icebp
std
dec
outsl
and
lea
pop
je
addb
mov
mov
jae
bound
and
and
ljmp
sbb
mov
inc
aas
sub
shll
xor
cmpsb
js
xchg
lret
mov
punpcklwd
scas
push
dec
jle
push
adc
sbb
shl
es
scas
int3
xor
testl
fisubs
lret
fstl
sub
jbe
in
or
mov
jnp
pop
out
mov
adc
inc
sbb
sbb
ret
jmp
ret
mov
mov
xchg
push
popa
adcl
jns
int
xor
fistps
call
cld
out
cmp
fimuls
repz
mov
xor
sti
pusha
mov
push
xor
xor
andl
jmp
sub
sbbl
pop
js
lods
scas
cld
and
fsts
adc
mov
outsl
insb
ret
jge
dec
scas
pop
push
and
jno
inc
aam
sbb
xor
jnp
into
jns
test
sub
dec
icebp
pop
scas
mov
jmp
sub
push
or
dec
das
pop
mov
xlat
fucom
stc
ljmp
pop
out
xchg
dec
sti
pop
xchg
push
dec
into
rol
addl
clc
inc
fisubs
sub
jno
adc
add
out
add
pop
xor
fcompl
pusha
lock
push
jmp
scas
sub
jge
or
cli
push
jg
fidivs
scas
xor
or
or
movsb
or
lods
sub
leave
into
jle
sub
aad
pop
pushf
mov
lods
cltd
push
inc
add
mov
lret
sub
and
jecxz
fistpl
dec
ja
dec
aad
mov
test
jbe
leave
cltd
imul
xchg
int3
and
mov
jecxz
ljmp
cmp
dec
fwait
sbb
movsl
in
call
push
jo
jne
shlb
pop
push
push
push
sub
xor
mov
inc
jae
sub
fsubl
adcb
mov
or
cmpsb
rclb
or
mov
adc
js
cmpps
clc
add
pushf
lods
add
pop
cmc
dec
into
xlat
addr16
pop
test
cmp
add
pop
dec
movb
xchg
add
mov
xchg
or
adc
gs
stc
fcoms
sub
inc
jl
out
mov
aad
shll
fstpl
push
jb
xchg
dec
mov
cmp
inc
insl
test
inc
ror
inc
lret
shll
cltd
scas
push
arpl
add
fists
mov
imul
arpl
sbb
test
sbbl
push
adc
mov
int3
sub
sub
dec
mov
mov
scas
subb
in
shrb
je
sub
pushf
outsl
and
ficompl
jmp
fldenv
pushf
dec
push
cmpl
pop
dec
shll
cmp
lret
mov
and
cmp
in
mull
lahf
inc
bound
mov
das
xor
jecxz
jle
xor
leave
stc
push
movsb
fs
stc
sti
inc
test
sqrtps
pop
dec
inc
repnz
arpl
fildl
rcrl
das
clc
inc
dec
int
fcmovnbe
dec
int3
or
shrl
aad
aas
jmp
jns
jne
call
enter
leave
inc
add
loope
sbbl
or
xor
mov
movl
jmp
test
repnz
cltd
dec
sbb
mov
es
adc
xchg
movlps
outsl
add
call
movsb
cmp
sub
and
in
push
jae
jmp
jmp
push
gs
mov
out
push
push
push
mov
ja
ja
xor
jb
or
je
negl
push
sub
and
dec
add
mov
jo
test
xor
xchg
and
adc
dec
pop
or
test
sbb
xlat
jno
in
test
fscale
cmp
dec
dec
cmpsb
inc
xchg
movsl
and
dec
add
push
push
sub
fisttpl
pop
imul
sahf
jns
jmp
loopne
ret
dec
loop
pop
mov
js
jle
aas
mov
mov
das
mov
faddp
cmp
aad
lcall
icebp
or
jne
aad
clc
fiadds
movl
pop
fistpll
stc
lcall
fisubrs
jmp
push
nopl
pushf
test
pop
mov
sub
add
adc
fstp
orl
xchg
fists
arpl
hlt
jecxz
sbb
push
in
dec
imul
dec
push
or
push
call
mov
test
adc
clc
pop
xchg
mov
xlat
push
out
popa
sbb
xor
stos
mov
cmp
push
andl
lretw
jne
imul
fdivs
sahf
hlt
aas
lea
pop
push
or
push
and
inc
in
mov
xor
es
in
xchg
mov
cmpsb
push
test
mov
adc
cltd
push
xor
jge
rol
push
jbe
out
bound
fsts
push
sbb
addr16
divl
pop
mov
out
or
dec
and
in
push
pop
sbb
iret
into
stos
ss
jne
push
mov
cwtl
roll
fstps
repz
and
xor
dec
lock
test
mov
push
sub
dec
roll
cmp
cmpsl
dec
mov
test
cmp
idiv
addl
mov
sub
mov
cltd
or
inc
mov
sti
subb
lods
jns
ds
jle
xor
mov
cltd
mov
stos
shrl
jbe
scas
jle
sti
mov
out
aas
push
push
out
mov
cwtl
imul
add
daa
sbb
add
mov
call
js
pop
dec
xchg
mov
lock
js
sub
sbb
inc
add
mov
movl
mov
jmp
movl
ja
push
push
push
push
push
push
push
push
push
call
addl
and
orl
and
add
movl
jmp
mov
jns
sbb
into
lods
mov
mov
adc
rcr
mov
add
stc
fisttpll
adc
rcl
mov
mov
jg
loopne
decb
cmp
cmp
cmp
cmpsb
cld
std
mov
jnp
mov
stc
ret
xor
inc
aam
ss
gs
popf
push
pop
shll
jmp
fldt
jg
push
in
sbb
daa
and
jns
pushf
mov
push
pusha
cmp
xor
icebp
or
scas
mov
mov
xor
aad
ret
insb
sbb
dec
mov
test
cmp
pop
iret
mov
xchg
lret
movsl
and
add
std
into
out
pop
int3
lret
xchg
iret
add
ret
and
repz
mov
push
aam
lcall
or
cmc
mov
pop
inc
and
cmpsb
rclw
dec
rcrb
jecxz
in
lods
jmp
push
mov
incb
dec
mov
rclb
xlat
inc
mov
pushf
aad
pop
xchg
imul
xor
test
andb
or
fdivrl
mov
sar
and
sbb
mov
jnp
cwtl
cmp
sbb
xchg
push
push
and
inc
ret
mov
inc
scas
and
fbld
push
dec
or
out
and
ss
imul
sti
mov
ss
adc
pushf
or
and
dec
mov
popf
stc
dec
iret
pop
pop
test
or
test
add
icebp
and
and
cli
and
push
test
cmp
sti
inc
scas
divb
mov
fcmove
hlt
push
ret
or
push
cld
dec
testb
fstps
les
ds
adc
dec
test
jl
sbb
fcoms
daa
nop
jb
das
hlt
enter
sub
jo
push
scas
out
mov
push
ja
sub
inc
mov
or
movb
add
faddl
push
loop
pop
mov
sbb
aaa
nop
mov
scas
frstor
subb
adc
mov
in
mov
jmp
lahf
cltd
je
xchg
in
insb
inc
shlb
sbb
jmp
int3
inc
mov
push
xchg
das
mov
mov
test
jns
cmp
mov
sub
mov
leave
bound
mov
testl
repnz
mov
cmp
jne
pop
dec
test
hlt
mov
cli
mov
xor
adcl
xor
shr
adcl
shl
sbbl
or
push
lea
subl
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
jmp
icebp
mov
cmp
pushf
mov
sbb
adc
xchg
movlps
cmp
adc
ror
enter
popa
mov
add
mov
cmc
fisttpll
adc
rcrb
push
loopne
out
xchg
adc
lret
jmp
cli
xchg
test
xchg
mov
inc
mov
cmpsl
mov
jbe
cli
sub
inc
mov
sbb
cli
mov
js
dec
and
mov
and
and
xlat
inc
inc
sbbl
nop
pop
lods
push
add
mov
and
pop
xchg
cmp
iret
ss
sahf
jg
testl
je
jg
shl
xchg
loope
push
test
mov
push
sbb
sbb
into
mov
dec
or
or
jo
cld
aaa
scas
sti
mov
cmp
lea
decl
or
lods
xacquire
jl
mov
loope
mov
pop
clc
lods
fcoms
lret
loop
mov
xor
inc
jle
es
sub
movsb
out
or
mov
and
jl
stos
xchg
mov
jno
inc
arpl
mov
mov
sub
fmul
aad
xor
mov
loop
ret
cmp
notb
popf
clc
fcos
cmp
cmp
xchg
mov
ja
ficompl
and
and
ret
inc
xor
pop
fiadds
movsl
mov
pop
xchg
mov
movsl
or
dec
adc
in
in
push
mov
xchg
or
hlt
pop
sub
pop
fsubr
and
push
adc
add
aaa
sub
cmp
xchg
ss
xchg
add
cmp
xor
mov
xchg
iret
adc
fdivs
aaa
dec
xor
lea
cmp
mov
lods
cmpsb
scas
pop
jecxz
or
pop
sbb
jge
scas
das
and
sub
and
pop
test
aam
rorl
ds
push
adc
mov
jp
mov
cmpsb
mov
mov
leave
jne
inc
mov
dec
cmpsl
movsb
mov
dec
call
and
sub
shr
into
lret
jo
scas
mov
testl
leave
imul
scas
xchg
mov
dec
cwtl
mov
stc
int3
fldl
sub
add
jmp
call
js
mov
xchg
fldenv
mov
mov
fdivs
jb
pop
stos
xchg
mov
test
mov
popf
mov
inc
in
adc
out
ss
add
xor
arpl
inc
inc
mov
sbb
int3
sbb
cld
push
rcrl
mov
loop
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
jmp
iret
xchg
stc
cmp
dec
mov
fwait
mov
adc
xlat
jp
xor
push
mov
mov
inc
add
push
jmp
xchg
mov
jmp
call
cmp
mov
leave
fsubs
aam
loope
pop
test
ja
or
data16
xor
scas
push
sbb
inc
testb
lret
push
mov
ss
push
mov
lret
test
jecxz
xchg
mov
and
adc
and
mov
insl
sub
and
vpsllw
fnstcw
xorl
add
xchg
mov
nop
xchg
sbb
lds
fisubs
push
dec
cmpb
pop
sahf
iret
orb
adc
sbb
add
in
arpl
sbb
mov
notb
sub
sub
ljmp
xlat
dec
dec
outsb
movsl
xchg
xchg
mov
mov
inc
ja
stos
aam
fcmovb
adc
or
lods
sub
insb
testl
add
adc
mov
mov
lcall
pop
hlt
sub
sub
xor
jne
mov
test
in
sahf
imul
xor
dec
cli
nop
and
sbb
cmpsb
cmp
mov
iret
iret
mov
push
pusha
xchg
lds
popf
bound
aas
xchg
cmp
icebp
ret
push
mov
test
jb
pop
sbb
jo
ss
pop
mov
stos
adc
rcr
dec
lret
dec
rep
subl
sub
es
dec
ret
cmp
clc
push
push
lcall
sbb
fxch
sbb
or
jne
stc
testl
push
ffreep
lahf
cmc
sub
iret
imul
lcall
ret
mov
popa
in
movsl
xor
xor
repnz
shrl
sub
mov
fwait
cmp
sub
lcall
sbb
jl
sub
sub
fidivrl
push
fsubl
mov
inc
test
mov
cwtl
mov
xchg
jb
xchg
test
dec
pop
out
gs
add
pop
fmul
rorl
lret
adc
xchg
pop
rcll
in
jnp
rol
dec
cmpsb
xor
into
stos
stos
push
push
and
jge
adc
jo
push
into
test
shrb
fcmovu
ficomps
sub
test
pushf
sbb
dec
xchg
dec
and
inc
cmp
jmp
mov
shrb
xor
roll
add
lds
jnp
loope
sub
mov
jmp
jbe
popa
push
ds
enter
mov
cmp
xchg
push
popa
cmp
xor
loope
call
jmp
imul
cltd
sbb
imul
add
xchg
movlps
push
jb
sbb
ret
fsts
roll
ret
push
loope
fstl
out
xchg
insb
pop
sub
xchg
sbb
cmpsb
adc
push
push
out
fimull
pop
lahf
jne
clc
add
mov
sahf
leave
pushf
add
daa
mov
sub
add
out
fisttps
inc
mov
sahf
pop
jb
xchg
push
out
adc
jg
popa
loopne
push
add
push
ret
shll
push
rolb
out
jl
sub
cmp
sbb
push
adc
pop
mov
repz
popa
jbe
rorb
stos
in
pop
xchg
cmp
in
and
mov
imul
ror
or
xor
test
in
push
or
in
jo
jle
mov
jecxz
negl
xchg
in
cmpsb
call
int3
inc
push
push
imul
dec
mov
lret
fnstenv
cld
fldt
mov
inc
dec
lahf
jg
leave
out
rclb
xor
sub
jl
fdivs
int
or
jg
aas
jecxz
andl
adc
out
fwait
outsb
int3
xchg
or
daa
add
xchg
sub
out
add
in
ret
lods
jnp
adc
das
push
add
icebp
inc
push
lock
out
loope
aam
ffreep
mov
jb
lea
adc
mov
cmp
jnp
or
pop
or
sti
jg
stc
or
icebp
and
mov
push
filds
shlb
mov
mov
int
push
pop
mov
dec
and
lods
mov
shl
xchg
popa
lds
mov
lods
cs
das
or
cs
cmc
push
lahf
mov
enter
push
cmp
hlt
cmp
mov
fistpl
cmp
push
add
push
sbb
pop
fwait
out
in
loope
out
push
nop
int
or
and
jmp
out
test
dec
xor
cmp
cli
xor
sbb
ljmp
xor
pop
jae
dec
jl
lahf
repz
insb
cli
out
sbb
pop
outsb
sbb
fstpt
mov
mov
stc
pop
ja
mulb
push
xchg
lods
sbb
inc
outsl
mov
out
push
lods
cmp
xlat
mov
push
xchg
sbb
rcrb
jp
adc
cmc
fcmovu
out
mov
pop
xchg
and
outsb
movsl
test
or
mov
dec
jmp
push
movsb
scas
xchg
push
jbe
mov
push
fwait
mov
and
push
mov
jnp
dec
mov
inc
mov
inc
adc
enter
add
adc
jmp
mov
mov
pop
pop
mov
lods
ficoml
cmp
cwtl
mov
adc
dec
mov
cmp
inc
fst
adc
in
push
sbb
fildll
fs
call
je
inc
push
inc
sti
repnz
xor
pop
or
pop
out
inc
sub
xchg
cmp
xchg
dec
inc
mov
cmpsb
cmp
cmp
stos
xchg
xchg
and
add
lret
inc
ret
and
aad
cmp
jo
aam
inc
jbe
adc
sub
cmp
in
scas
cmp
jo
fcomps
movb
in
xor
mov
mov
mov
push
lods
sbb
loope
xchg
loopne
or
movsb
and
data16
les
aad
leave
xorl
out
popa
mov
stos
das
mov
xchg
faddp
fidivl
pop
loope
ja
or
push
lret
es
sbb
js
aad
pop
js
mov
jp
out
mov
mov
mov
movsb
mov
enter
mov
lret
enter
add
jbe
aad
decb
in
ret
sahf
cmc
es
bound
xor
push
push
out
das
mov
int3
jo
xchg
jae
pop
aas
sar
test
jmp
dec
adc
add
scas
pop
orl
mov
leave
cmp
add
sub
fsubrl
adc
mov
or
repz
xchg
rcll
popf
sbb
add
mov
jmp
popfw
sbb
xor
mov
and
inc
push
jle
ret
ret
xchg
decb
add
dec
sbb
bound
xor
fldl
push
cmp
cli
add
dec
add
pop
ret
jl
and
jne
or
cmp
out
pop
xchg
ljmp
jae
arpl
pop
dec
inc
mov
push
mov
jno
out
lods
mov
subb
push
inc
movsb
cmpsb
lcall
xor
lock
and
adc
add
dec
shl
test
jnp
insl
xor
add
es
cmc
nop
jae
cwtl
jne
icebp
cmp
or
xchg
lods
aaa
mov
lods
clc
or
or
ss
xor
adc
addl
cmpsl
scas
dec
add
sbb
jge
jbe
jp
inc
xchg
das
and
stos
pop
mov
or
jmp
sub
sub
shrl
rcr
out
imul
dec
push
fiadds
mov
jbe,pt
mov
mov
xchg
lea
insb
cwtl
inc
push
sti
lods
mov
rorb
ret
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
jmp
cwtl
push
cwtl
sbb
mov
mov
xchg
movlps
xchg
ret
mov
pop
int
or
mov
outsl
xor
xchg
mov
daa
sub
stc
xchg
xchg
sbb
loope
or
pusha
ljmp
aaa
stos
lss
enter
mov
lds
mov
pop
mov
shl
adc
inc
mov
aaa
and
or
push
add
test
add
movsb
or
mov
push
jle
xchg
xchg
int3
sub
or
xchg
femms
mov
mov
mov
dec
jecxz
jmp
sbbl
mov
xor
rcr
and
in
and
xchg
push
icebp
mov
sti
xchg
xchg
cli
mov
and
dec
pop
cmp
sti
sub
jmp
or
push
rcl
push
iret
lds
xor
add
call
jg
xlat
pop
andb
mov
fcom
mov
and
push
push
test
push
iret
xchg
mov
movsl
jge
push
and
push
jp
std
inc
xchg
ficoms
icebp
xchg
les
in
outsl
imul
arpl
ja
cmp
mov
adc
mov
shlb
inc
daa
mov
lods
xchg
lds
les
sbb
rcrb
sub
fsubl
adc
stc
repnz
pop
sbb
lret
pop
fisttps
rcll
cmpsl
jns
movsb
movsb
and
aas
pop
add
jnp
and
orl
inc
dec
out
xor
setne
gs
mov
pop
push
test
ret
xor
in
lea
daa
outsb
push
lcall
fcmovne
outsb
jle
stos
sbb
cwtl
fisubl
rolb
and
sti
xor
xor
cmp
aad
decl
jg
pop
adc
sub
ds
fistpll
shll
adc
sbb
movsb
or
inc
ss
daa
ret
add
and
sbb
orl
lcall
adc
iret
mov
movb
adc
out
jns
ljmp
int3
loop
add
mov
mov
adc
mov
jl
iret
sub
add
mov
mov
push
or
sub
cs
mov
dec
xchg
pushf
mov
loope
enter
fs
imull
cld
xchg
xor
jge
dec
in
jae
mov
or
mov
lret
loop
mov
jns
push
mov
pop
aam
adc
push
cmp
cmpsl
leave
repz
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
jmp
jno
cmp
cmp
jno
xchg
xlat
test
push
xchg
mov
movlps
inc
repnz
xor
mov
and
mov
mov
pop
out
jb
lods
sar
jmp
je
push
or
aaa
inc
sub
insl
sahf
sbb
cmpsl
mov
mov
mov
mov
add
xchg
mov
mov
mov
sbb
inc
jp
sub
gs
push
xor
xchg
mov
push
cwtl
xchg
jbe
sbb
pop
dec
push
call
cli
lock
movl
sti
popf
and
or
jb
push
insl
stc
aam
dec
mov
inc
cwtl
xchg
jnp
loopne
out
mov
jb
inc
mov
sub
xchg
push
outsl
add
pop
movsl
jno
mov
jb
not
dec
adc
cmpb
aad
push
push
jae
lahf
lods
pop
or
xor
cmpsl
adc
or
repnz
cmc
jge
mov
cltd
jp
cmp
jmp
cmpsl
fldt
mov
in
dec
fs
cmp
cwtl
enter
pop
sub
sub
add
pop
jmp
jb
push
inc
rcr
sbb
add
rorl
jae,pn
je
ljmp
outsb
add
mov
fistpll
add
push
add
and
addr16
cmp
je
std
push
jbe
enter
out
insb
mov
in
ja
sub
aaa
xrelease
js
adc
cld
jmp
mov
adc
std
mov
xor
jl
jl
lret
arpl
daa
cmpsl
iret
or
sbb
dec
aas
pop
add
inc
pop
dec
xchg
and
call
stos
addb
in
push
fdivl
xchg
pushf
push
inc
hlt
xor
mov
inc
xlat
cmp
in
shr
iret
cmc
testl
leave
in
popl
xchg
adc
rorb
add
xor
lds
in
mov
xlat
rorl
add
dec
dec
jns
mov
rol
cmp
cli
ror
jae
mov
cmp
cmp
xor
inc
lcall
les
or
lock
lret
lods
sub
ret
les
mov
inc
pop
ficoml
ds
cmp
push
gs
fildl
popa
adc
aam
jmp
mov
movsb
adcb
js
pop
insb
shrl
xor
xor
adc
jecxz
pusha
arpl
sub
mov
popa
sbb
dec
mov
mov
add
ret
ret
mov
and
mov
or
mov
jne
sbb
mov
sbbl
mul
ret
subl
push
cmpl
mov
mov
movl
mov
jmp
movl
jne
push
pushl
pushl
call
adc
not
movzbl
xor
mov
movzwl
adc
or
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
jmp
adc
fscale
fyl2xp1
lock
lock
mov
adc
repnz
mov
jl
mov
scas
pushf
cmc
sbb
into
mov
mov
mov
mov
xchg
sti
out
adc
js
inc
std
xchg
mov
cmp
orb
mov
add
push
mov
mov
pop
cmp
mov
xchg
mov
sbb
loopne
and
pop
rorb
out
ljmp
mov
enter
inc
outsl
into
js
xchg
roll
ljmp
bound
mov
jns,pn
popf
jno
or
sti
adc
and
xchg
lcall
cwtl
xchg
popf
jecxz
adc
stos
pop
mov
push
sbb
xor
dec
lock
push
mov
sub
and
jnp
outsl
cmp
mov
gs
mov
int3
dec
imul
add
cli
jb
dec
mov
add
es
lret
mov
out
mov
insb
mov
add
repz
test
sarl
dec
mov
and
and
push
xor
lock
nop
roll
and
cltd
mov
mov
out
fcmovnb
sahf
add
sbb
mov
jecxz
mov
out
push
ljmp
pop
adc
cmp
xchg
fcompl
mov
jecxz
and
iret
xor
lahf
adc
outsb
stos
insl
dec
popa
je
fdivrs
inc
imul
sub
pop
xor
in
inc
pushf
js
ljmp
loop
movsb
jne
stos
sub
add
xchg
sbb
fisttps
or
inc
out
mov
cwtl
dec
shll
inc
pop
std
adc
and
fists
mov
scas
cs
repz
sub
push
fistpll
mov
inc
iret
repnz
cmpsb
xchg
jge
enter
xchg
sbb
lret
test
push
jg
mov
repz
fldl
loop
idivl
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
jmp
pop
mov
push
sbb
loope
push
jae
stos
mov
adc
mov
push
cmpsb
sbb
adc
add
or
xor
cmpsb
repz
stc
iret
mov
pop
rorl
orl
int
adc
mov
rcrb
mov
call
int
popf
mov
das
push
pop
lret
jne
mov
and
and
lds
mov
add
fisubrl
add
pop
int3
shll
dec
sub
or
ret
lret
adc
push
iret
nop
sub
data16
mov
in
ss
mov
dec
adc
cmpl
xor
gs
push
and
cwtl
fmul
mov
movsl
dec
sbb
hlt
or
insl
mov
mov
dec
cmp
jnp
fwait
mov
inc
aaa
jbe
arpl
add
mov
loop
loopne
xor
cmp
adc
cwtl
data16
aas
push
fistpl
xchg
mov
scas
push
mov
repz
nop
test
rolb
shll
or
inc
mov
movsb
xor
bound
jmp
adc
orb
jg
out
inc
movsl
testl
lcall
mov
sbb
jmp
imul
rolb
clc
dec
sarb
push
fsubl
test
imul
or
xor
xor
jmp
adc
dec
mov
xchg
movsb
add
sub
mov
sbb
fwait
stos
sub
fmull
adc
xlat
sbb
mov
and
cmpsl
lea
outsl
xor
out
cmp
jl
cmpps
or
jmp
hlt
pop
sub
sti
pop
pop
loop
arpl
cwtl
cmp
shll
out
mul
les
mov
shll
sub
ret
mov
mov
jg
dec
out
sub
cmpsl
pop
test
cmp
xchg
pop
ret
jne
pop
jno
jb
cmp
mov
in
je
enter
cltd
pop
adcl
jecxz
push
cmpsl
jo
dec
clc
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
jmp
and
popa
and
clc
inc
jbe
adc
push
push
fwait
adc
mov
mov
rclb
and
fs
outsl
mov
mov
add
mov
test
enter
aam
je
xchg
leave
cld
outsl
fcoms
cmpsb
xor
cmp
push
add
insl
ret
or
xor
pusha
cs
scas
loopne
sub
xor
and
mov
pop
or
sahf
jle
outsl
xchg
xor
fs
daa
ljmp
mov
js,pt
adc
hlt
out
int3
scas
and
jmp
push
sub
fcomps
mov
xor
xchg
dec
movzwl
add
popa
jmp
lock
test
hlt
mov
or
inc
jge
sahf
out
inc
push
testl
xchg
es
aam
in
xor
sbb
ret
imul
pop
add
jl
sbb
sbb
xor
jb
insb
test
aam
ret
fwait
outsl
push
mov
inc
scas
aaa
fldl
into
fs
cli
into
bound
xchg
jnp
pop
in
aas
mov
fnstcw
imul
insl
movsb
das
aam
rolb
scas
inc
push
sbb
mov
neg
jo
sub
mov
lahf
sbb
mov
les
xor
sti
lods
jo
fmuls
jmp
dec
inc
outsb
cmp
cmp
add
outsb
or
push
mov
lret
lea
mov
cmpsl
adc
aaa
sub
xchg
mov
mov
inc
add
push
cmp
paddq
and
xchg
in
push
sub
fistl
mov
cmc
lea
sbb
jnp
push
cmp
sub
jo
loopne
pop
mov
xor
ss
test
imul
dec
fsts
and
in
pop
subb
pop
dec
push
sub
xor
mov
cmp
rorl
pop
test
daa
pop
dec
pushf
cmp
aaa
or
pop
std
jnp
out
or
test
sarb
and
and
loope
aas
insb
std
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
jmp
lret
push
out
sub
rorb
sarb
cltd
adc
mov
stos
sbb
in
lds
ret
loopne
movsb
mov
roll
cltd
push
or
mov
add
xor
sbb
lcall
test
push
mov
loopne
jno
mov
add
hlt
dec
out
mov
popf
clc
or
or
aaa
or
adc
pop
adc
movsb
jmp
and
orl
or
mov
cmp
and
sub
outsb
xor
enter
fwait
das
pop
ja
xchg
lret
adc
pop
pop
xorb
cmp
cld
cmp
mov
pop
daa
sti
dec
sbb
dec
mov
xor
cmc
sbb
sub
adcb
out
fcmove
in
jo
mov
shr
adcb
dec
es
insb
add
rcr
cwtl
jne
mov
mov
jge
movsb
sub
jnp
push
and
jb
int
rolb
mov
insl
mov
fdiv
xlat
or
cmp
aam
dec
in
ds
dec
mov
adc
stos
popf
jmp
mov
lods
adc
xchg
das
std
int
mov
jno
dec
iret
mov
jo
mov
test
enter
push
jp
mov
jae
and
xchg
aas
loop
mov
adc
push
mov
out
rcr
into
xchg
into
lret
mov
ret
and
pushf
xchg
and
mov
and
xor
cmp
in
push
sbb
addr16
pushf
repnz
xorb
push
iret
or
stos
xor
mov
ja
cli
fdivr
das
lods
pushf
cltd
jge
je
inc
or
aam
lds
neg
dec
add
push
lds
push
jnp
movsb
push
mov
cltd
mov
inc
adc
jge
nop
push
or
data16
ret
add
cmp
jge
jns
test
sbb
je
cmp
aad
lea
xor
jmp
in
popf
jmp
xchg
mov
into
push
insl
xor
pop
jmp
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
push
call
mov
movzwl
push
call
test
jne
xor
movl
jmp
mov
mov
and
mov
mov
push
cmpl
movl
movl
jmp
mov
movl
ja
pushl
call
addl
subl
subl
orl
pop
mov
mov
mov
mov
mov
andl
movzwl
subl
or
andl
cltd
adcl
movzwl
sbbl
idiv
xor
movzwl
adcl
or
and
mov
and
mov
cmpl
mov
mov
jmp
movl
movl
jne
pushl
push
call
orl
sbb
sbb
xor
add
and
mov
mov
mov
subl
mov
mov
andl
sub
andl
mov
movl
xor
add
mov
sub
movl
mov
movl
cmp
movl
jb
cmpl
movl
mov
mov
mov
jmp
movl
jbe
push
push
call
adc
movzbl
add
mov
adcl
and
add
subl
movl
movl
adc
movl
add
jmp
loope
jnp
cmp
pop
popf
push
xor
stos
cmpl
sahf
xchg
adc
pop
adc
adc
icebp
and
adcl
xor
stos
fstl
and
loope
mov
jb
add
mov
repz
xchg
mov
cli
inc
out
test
inc
and
pop
ja
aad
inc
cli
insb
in
or
test
inc
aad
lahf
push
pop
out
pop
pop
push
out
pop
sub
sub
mov
push
out
pop
pushf
dec
inc
mov
and
pusha
int
dec
push
xor
mov
mov
aam
pusha
cmc
nop
jl
mov
push
add
push
rcrl
adc
dec
cmp
inc
pop
lret
xor
inc
repnz
add
dec
xchg
pushl
cmp
push
adc
sbb
leave
loopne
pushf
pop
mov
call
xchg
sub
push
ret
sbb
jbe
cmp
push
popf
ds
xacquire
out
imul
pop
fcmovnb
aas
push
jp
rclb
orl
out
out
add
mov
js
or
or
scas
fisubs
mov
cmp
mov
int3
xchg
mov
arpl
nop
and
ds
push
int
paddb
jno
or
mov
adc
xchg
add
int3
pop
mov
out
push
mov
movsl
inc
push
or
dec
out
add
inc
pop
fnsave
and
sbb
xchg
cltd
pop
inc
lcall
push
pusha
adc
mov
mov
sub
cltd
cmp
dec
xchg
test
lock
jg
popf
inc
inc
or
rclb
push
or
leave
cwtl
adc
cwtl
dec
jl
xchg
arpl
xchg
push
lcall
and
sub
jnp
fs
dec
lds
xlat
rorl
cbtw
out
hlt
pop
and
sub
lcall
out
cmpsb
mov
sar
and
add
cs
aam
rcrl
enter
push
dec
push
sbb
mov
fwait
pop
sbb
xor
push
pop
mov
rclb
push
repz
push
pop
fmull
shrb
aas
inc
adc
loope
push
fidivs
pop
mov
dec
int3
test
push
rorl
xchg
mov
inc
add
lahf
clc
cmp
cltd
cld
es
jmp
sbb
mov
dec
ljmp
cmpsb
call
jp
bound
std
divl
rcr
cld
sub
repz
adc
jl
push
dec
xor
mov
fimuls
push
ljmp
mov
dec
add
cmpsb
jne
push
sub
lea
adc
ret
cmc
rep
cmp
and
popl
mov
add
ret
sti
std
out
mov
fdivrs
inc
sub
inc
lods
mov
push
xor
out
cmovb
addr16
push
mov
push
adc
sub
sub
es
inc
fidivs
loop
les
loop
stos
pop
push
in
add
movl
mov
xor
mov
mov
sub
add
add
mov
xor
incl
div
mov
add
adcl
and
subl
pushl
xorl
pushl
call
movl
cmpl
movl
mov
jmp
mov
mov
jl
push
push
pushl
push
pushl
call
neg
sbb
addl
sbb
addl
sub
adc
movl
sbbl
movl
orl
mov
mov
and
or
adc
mov
and
xor
andl
pushl
adcl
pushl
call
or
pushl
movl
movl
movl
cmpl
mov
notl
jmp
mov
ja
push
pushl
pushl
pushl
push
pushl
pushl
push
call
or
and
xor
add
movl
adcl
movl
sbb
movl
movl
add
movl
xor
mov
cmpl
mov
mov
mov
jmp
movl
not
jbe
push
pushl
push
call
movl
movzwl
or
mov
mov
add
xor
and
andl
adc
mov
sub
mov
or
addl
and
mov
xorl
sub
pushl
mov
mov
incl
add
andl
and
mov
adc
jmp
pop
push
shlb
lcall
jle
push
ljmp
pop
adc
adc
pop
sbb
arpl
mov
inc
addr16
decb
faddl
add
mov
pushf
pop
mov
push
cld
mov
lods
jp
iret
xorl
cmp
nop
stc
cmp
pusha
xchg
inc
xchg
js
ficoml
lret
out
add
adc
sbb
cmp
jp
lret
jbe
sbb
sbb
cmpsb
fidivl
and
add
repz
push
arpl
rcll
ret
in
not
sbb
push
into
pop
xor
stc
and
push
mov
mov
xchg
jo
popf
mov
mov
scas
xor
dec
add
fistl
push
cmp
ret
jg
int
xor
mov
loop
adc
xchg
sbb
repnz
mov
mov
push
adc
dec
add
pop
mov
rcll
mov
les
mov
in
pushl
int
or
dec
push
xlat
add
loope
add
int3
bound
mov
push
xchg
pop
shlb
scas
cmc
add
ret
popf
pop
ret
loopne
std
cld
mov
mov
xor
fistl
imul
xchg
adc
roll
in
jg
jmp
jno
sub
icebp
icebp
jb
jns
loope
testb
pusha
ret
loop
ljmp
mov
imul
dec
dec
jmp
and
pop
lea
push
cmp
loope
outsb
mov
fcomp
cmpsb
sub
jo
loopne
call
int3
pop
outsl
std
lods
std
inc
roll
nop
lcall
sub
mov
in
fimull
sbb
imul
mov
fildl
pop
xor
mov
adc
or
mov
mov
inc
add
in
jno
inc
xchg
scas
cs
pop
pop
pop
xchg
lret
dec
cmc
fisubrl
sub
mov
dec
sti
mov
je
or
inc
into
dec
js
or
pushf
xchg
pop
mov
nop
cltd
and
jb
lds
adc
xor
push
mov
sbb
test
push
jge
push
cmp
insl
ret
js
ficoms
pusha
aaa
or
ljmp
arpl
scas
fwait
call
inc
sub
jecxz
lods
movsb
pop
mov
adc
out
lcall
hlt
out
in
lret
stos
fidivs
jnp
sub
pop
cli
mov
inc
insb
daa
stc
jo
jbe
push
das
lret
ret
push
mov
leave
xchg
test
repz
enter
stc
mov
out
xchg
push
fisubs
dec
or
cli
dec
sub
aad
add
sarl
or
xchg
or
and
lods
pop
outsl
stos
cs
push
xchg
jecxz
xchg
inc
xchg
adc
stos
aas
mov
nop
mov
jmp
or
mov
std
icebp
dec
mov
mov
movsl
pop
add
fnstcw
mov
leave
out
stos
cs
aaa
inc
enter
sahf
sub
rorl
push
lret
sub
inc
add
adcl
and
pushl
mov
movzbl
and
mov
imul
sbbl
xor
subl
or
andl
mov
sub
pushl
call
andl
dec
movl
jne
sbb
movl
mov
subl
mov
movl
sbbl
mov
call
inc
lea
cmpl
mov
mov
jmp
mov
jbe
push
pushl
call
movzbl
add
dec
dec
sbb
sbb
mov
xor
xor
sub
add
mov
adcl
lea
mov
xor
mov
mov
cmpl
mov
mov
mov
not
jmp
movl
movl
jle
push
push
pushl
pushl
call
adc
sbb
and
or
and
sbb
adc
xor
mov
adc
mov
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
push
call
mov
adc
and
or
orl
sbb
dec
xor
xor
movzwl
xor
shl
adcl
shr
or
movzbl
and
mov
xor
mov
cmpl
mov
movl
mov
movl
jmp
not
mov
jne
push
call
and
movzbl
adc
sub
movzbl
sub
movl
and
sub
mov
xor
mov
and
mov
xor
mov
mov
xor
xor
sub
or
mov
shrd
shr
inc
mov
and
mov
cmpl
mov
mov
movzwl
jmp
movl
mov
ja
push
push
pushl
push
pushl
push
call
sbb
add
mov
xor
mov
not
and
inc
mov
xor
xorl
xor
or
or
mov
adcl
push
sbbl
pushl
incl
lea
andl
push
andl
shl
orl
call
lea
sbbl
push
adcl
mov
orl
mov
xorl
lea
orl
push
mov
lea
mov
adcl
mov
adcl
mov
push
call
push
push
addl
pushl
xorl
jmp
nop
fwait
inc
stos
pop
sbb
dec
sti
adc
or
mov
pop
adc
adc
js
lock
xchg
pop
pop
out
popf
push
shr
pop
xchg
nop
lea
push
aaa
aad
mov
lret
pop
cwtl
imull
insl
imul
or
shr
fiadds
pop
fucomi
push
repnz
and
mov
out
jl
enter
add
scas
scas
jecxz
cmp
jmp
daa
jp
sbbl
sub
mov
xlat
aas
xor
aam
mov
ss
sub
mov
call
add
orb
push
jnp
stos
xor
in
rep
daa
rolb
and
pushf
pop
in
call
lea
mov
fisttps
jecxz
jge
pop
popa
push
mov
flds
mov
lret
mov
daa
mov
pop
xchg
sbb
mov
sarl
jnp
ret
into
fstps
dec
xchg
sub
ret
adc
or
jge
pop
sbb
fdivs
push
and
les
sbb
or
fadds
divl
sahf
in
sar
mov
adc
or
mov
cmpsl
jl
or
imul
mov
addr16
jne
sub
jbe
adc
rcrl
call
call
xchg
or
call
insb
mov
outsb
inc
dec
je
xor
mov
fnstenv
push
shlb
mov
ficoml
xor
push
xchg
stc
pop
push
stos
cmc
clc
fwait
dec
and
dec
dec
cmc
iret
sbb
and
mov
inc
stc
gs
daa
jle
nop
mov
mov
shr
ret
xor
in
insb
inc
dec
adc
lcall
outsb
js
out
sahf
lahf
pop
ret
lods
sub
int
std
call
pop
add
jecxz
cmp
pop
pop
mov
enter
mov
cmc
jno
out
aas
lds
or
movsb
xor
mov
and
fnstenv
ss
mov
addr16
jg
bound
bound
sub
leave
mov
cs
js
dec
bound
xor
out
jo
jae
jne
xchg
pop
shr
dec
mov
lds
lods
out
nop
popl
cmc
imulb
add
pop
arpl
cwtl
lods
fs
dec
cli
loope
fimuls
inc
es
push
xchg
sub
adc
xchg
test
push
insb
mov
sub
lds
dec
das
cli
add
imul
mov
cmp
dec
inc
jb
pop
mov
pop
fs
mov
aam
inc
pop
push
jae
test
mov
test
cmpsl
inc
idiv
cltd
sub
out
push
in
jne
js
rcrb
stc
lds
jo
std
je
jge
push
rorl
cmc
mov
cmpsl
cmp
shlb
pusha
in
fsubrl
lcall
sbb
roll
push
cmp
shrb
subl
fcmovnbe
pop
dec
and
pushf
jecxz
xorl
inc
mov
repnz
mov
psubusb
and
mov
pusha
mov
call
mov
cmpl
mov
mov
jmp
mov
jge
push
call
mov
add
add
add
xor
adc
xor
movzwl
and
sbb
mov
mov
cmpl
mov
mov
mov
jmp
movl
jne
pushl
push
push
call
or
mov
add
sub
sbb
subl
mov
adc
shr
adcl
shl
or
adcl
mov
xorl
xor
cmpl
movl
movl
mov
jmp
mov
mov
jb
pushl
pushl
call
not
mov
or
or
add
adc
mov
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
call
xor
inc
add
adc
sbb
sub
sub
cmpl
movl
mov
jmp
mov
movl
jge
pushl
push
push
pushl
call
or
mov
mov
sub
add
orl
neg
movl
incl
xor
lea
mov
adc
mov
lea
mov
mov
or
mov
adc
mov
sub
sub
andl
lea
xor
subl
movl
cmpl
mov
movl
movl
jmp
movl
jle
push
push
pushl
call
sbb
addl
xor
mov
sbb
adc
adc
subl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jl
push
call
and
movl
xor
or
xor
add
sub
add
adc
mov
mov
or
and
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
jmp
aaa
mov
add
aaa
dec
faddl
jle
adcl
adc
shl
lock
lock
pop
ret
adcl
push
stos
xor
jp
mov
push
push
inc
pop
cmp
gs
mov
push
pop
mov
rcll
in
or
push
insb
inc
insl
cmpsb
fwait
out
repnz
push
and
test
jnp
or
jmp
sub
outsl
inc
and
daa
nop
mov
push
repnz
cmp
test
arpl
ret
dec
movsb
inc
pop
jmp
lret
dec
mov
ljmp
push
xchg
sbb
das
jbe
ret
add
pop
xchg
fs
cmpsl
mov
jg
dec
icebp
ss
or
push
mov
push
pop
sysenter
cmp
xor
aam
jge
orl
popf
sbb
mov
add
shll
ret
jns
add
mov
xchg
ja
pop
leave
test
stos
jno
pop
jno
push
cmp
pop
pop
scas
fimull
scas
xor
lea
mov
call
xchg
mov
add
push
addr16
loop
cmp
xor
lock
add
loop
adc
push
xchg
push
mov
add
aad
mov
push
pop
stc
cmpsl
push
pop
pop
xchg
faddl
test
adc
push
jmp
mov
sahf
jae
icebp
pop
cmp
inc
in
pop
dec
test
daa
cld
inc
add
movsl
dec
inc
xchg
stos
mov
jae
dec
in
loopne
in
push
addl
mov
out
addr16
loope
pop
mov
and
add
jmp
mov
out
aad
push
aas
xchg
int
jmp
scas
jle
outsb
cmp
iret
ja
pop
jnp
andb
jnp
sbb
jne
je
fdivr
xor
subl
inc
dec
push
push
cwtl
shll
xor
adc
popf
clc
fistl
inc
orb
lods
cltd
fwait
sub
pusha
lods
sbb
imul
aad
insl
iret
repnz
cmc
add
jae
adc
stc
inc
cmp
add
je
aaa
shlb
mov
push
das
push
ljmp
scas
pop
in
push
dec
jle
dec
push
jnp
test
xor
pusha
sub
pop
into
loopne
or
cmp
mov
and
idivl
loop
push
push
stos
pop
jae
into
cmp
mov
xlat
inc
negb
shl
cmpsl
jg
pop
adc
mov
push
or
ficomps
xchg
jmp
pop
cwtd
test
dec
mov
idiv
out
inc
inc
pushf
and
clc
popf
adc
dec
xchg
or
xchg
repz
loop
lcall
push
dec
xor
aas
inc
mov
js
push
xor
lret
jl
and
or
mov
rcrl
fwait
push
ret
jecxz
cmp
jne
cmp
ret
push
shll
mov
mov
jno
cmpsl
xchg
int
leave
push
aam
sub
repz
push
xor
xchg
mov
mov
jecxz
or
xor
push
sub
mov
sbb
mov
cmp
jne
cmp
jmp
mov
and
fwait
iret
test
int3
lods
mov
adc
adc
testl
ss
loope
push
xchg
xor
jge
inc
arpl
mov
cmp
push
inc
hlt
dec
pushf
or
cld
and
xchg
aam
xchg
repz
push
clc
push
dec
add
mov
jno
mov
lock
rclb
inc
sub
inc
mov
push
push
popf
xor
add
and
xor
or
fidivl
inc
xchg
les
mov
sbb
push
xor
inc
loop
and
push
add
rcll
cmpsl
in
or
fwait
pop
adc
test
jge
cld
call
arpl
mov
mov
sub
ss
lock
les
cmp
push
dec
decl
scas
sti
movsl
jbe
pop
sbb
enter
pop
addr16
push
sub
and
xchg
cmpsb
lret
ss
out
push
jae
mov
or
je
stos
cltd
pop
pushf
nop
and
out
pop
dec
in
rcll
hlt
push
pop
dec
dec
sarl
inc
xchg
xor
mov
arpl
jno
mov
lcall
xor
mov
push
inc
pop
test
cli
das
or
pusha
int
jmp
xchg
int3
mov
fwait
pop
pop
test
in
fs
ror
jmp
lret
fidivrl
lds
sbb
fidivrs
pmullw
sub
dec
adc
mov
fadd
push
rcrl
je
je
insl
sbb
popf
testl
jg
add
outsl
ljmp
lods
sbbl
or
mov
repnz
into
mov
clc
pop
popf
fists
fld
jle
or
pop
pop
in
repz
push
sbb
and
cltd
cmp
pop
and
imul
cmp
or
mov
pop
outsb
movsb
push
lock
adc
cli
lds
xor
rol
lret
cli
call
lret
lcall
loopne
ss
mov
lcall
mov
test
mov
mov
fldl
js
push
push
push
sahf
fmul
pop
sub
add
jae
sub
out
push
xlat
enter
sbb
loop
stos
loop
xchg
jo
xor
cmpl
clc
jns
adc
cld
hlt
mov
push
pushf
xchg
adc
dec
push
test
or
jne
sti
icebp
jb
sbb
rorb
mov
mov
jle
int
pop
add
dec
and
xchg
and
out
std
movsl
aad
outsb
sbb
lods
mov
push
int
sub
enter
cmp
aaa
daa
ss
jmp
mov
adc
cmp
push
loopne
jne
stc
mov
push
cmpsl
test
inc
xor
adc
mov
push
or
push
or
scas
ds
fisttps
fwait
lret
lcall
fsubs
enter
orl
mov
sub
adc
arpl
sbb
sbb
hlt
fdivl
and
add
es
pop
xor
and
cmp
mov
cltd
out
push
in
iret
cmpsl
fs
popa
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
jmp
sbb
je
sub
cmp
ret
mov
pop
adc
adc
rcll
and
loop
ds
sub
mov
sbb
mov
inc
jb
or
stos
sbb
pop
add
in
jae
mov
xor
dec
gs
shlb
cmpsb
dec
mov
xchg
scas
in
inc
push
into
js
jns
lea
nop
sbb
jno
add
mov
add
sbb
pushf
les
or
divl
lds
push
rolb
sub
cmp
or
pop
mov
js
fs
add
inc
mov
mov
or
sub
mov
xchg
mov
enter
jg
adc
adc
loop
xchg
sbb
sahf
imulb
dec
inc
sarb
adc
aas
lret
sbb
adc
cmp
dec
sub
int3
push
jmp
mov
aas
movsl
add
adc
sarl
sti
js
mov
pop
insl
xor
in
sarb
test
xchg
inc
mov
sub
pop
fcomip
into
test
pop
bound
cmp
dec
and
inc
scas
subb
sahf
emms
cmp
sub
xchg
inc
fildl
adcl
pusha
cmpsb
mov
jae
flds
xor
mov
pop
jno
mov
pop
dec
inc
jns,pt
imul
enter
arpl
movl
mov
mov
dec
les
mov
loope
aad
pop
mov
call
scas
imul
xlat
cmpsl
lods
lds
ret
aas
xchg
jo
dec
jnp
bound
sub
and
xor
pop
cmpsb
ljmp
cwtl
mov
lcall
jbe
or
inc
aad
sub
sahf
idivb
shl
xchg
fs
icebp
xor
sub
insb
pop
inc
gs
or
cmc
std
adc
shrb
sub
iret
jg
sbb
pusha
adc
dec
xor
jo
mov
imul
add
and
gs
imul
push
and
xchg
fsubp
mov
cwtl
mov
xchg
iret
push
clc
popf
dec
bound
je,pn
outsb
insl
or
shll
scas
fimull
sahf
mov
fdivrl
push
add
mov
les
add
push
ret
cmp
je
mov
add
aam
imul
cmpsb
mov
mov
push
and
sub
jns
jecxz
cmp
fbld
jl
mov
pop
test
test
mov
daa
mov
lods
fnstsw
push
xor
add
std
es
xchg
xor
ljmp
adcb
mov
mov
mov
andb
xchg
add
lods
call
lret
push
lods
add
jb
inc
call
stc
fwait
out
mov
xchg
mov
lret
loope
call
cli
int3
mov
icebp
scas
jns
pop
jge
add
in
sbbl
test
adc
xchg
xchg
sbb
sub
jne
mov
test
inc
and
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
adc
or
addb
dec
insl
adc
pop
adc
adc
jmp
pop
jl
mov
xor
fs
xchg
xchg
aam
lret
repnz
shrb
mov
dec
xchg
jg
pusha
inc
sbb
imul
insb
ja
stos
inc
ret
repz
push
aaa
mov
sbb
dec
mov
sub
xor
fbstp
lcall
test
push
cmp
sti
jns
imul
mov
out
test
and
cld
xchg
lea
gs
pop
cli
pushf
mov
fmull
mov
icebp
cmp
mov
adc
dec
jle
inc
push
dec
mov
dec
test
lahf
dec
movsb
xorb
mov
aaa
xor
psubq
shlb
jnp
icebp
sbbb
fcmovbe
adc
dec
add
cmp
popf
aaa
out
push
mov
or
jecxz
inc
aad
sub
jne
cmp
stos
and
mov
and
sbb
xchg
lds
jle
cwtl
movsb
pop
stc
adc
stos
pop
xor
cmpsb
jecxz
mov
adc
test
fwait
loopne
ja
jle
mov
jne
xchg
sub
pop
repz
popa
notb
fstp
push
xchg
jecxz
lret
mov
daa
shrl
add
lods
adc
and
xlat
jnp
cmpsl
mov
das
add
inc
cmp
fcoml
mov
dec
pop
mov
je
inc
imul
sbb
arpl
add
das
inc
pusha
xchg
lret
add
pop
adc
stos
cmp
mov
pop
mov
sbb
test
loopne
pushl
nop
std
das
mov
inc
nop
fidivrl
add
dec
adc
test
lds
js
cmp
add
lcall
call
or
or
dec
add
test
ljmp
dec
fs
stc
and
outsb
test
sub
mov
mov
push
push
xchg
test
cmp
or
pop
dec
push
sub
addb
cmp
jbe
mov
dec
stos
mov
xor
insb
sbb
movb
lret
stos
pop
test
in
test
movl
rorb
jns
adc
gs
jo
add
pop
mov
pusha
inc
jmp
pop
sbb
sub
sbb
jecxz
cvtps2pd
je
xor
push
pop
rorb
addb
movsb
push
outsb
inc
ss
stos
insl
jecxz
inc
in
mov
lods
or
jns
pop
inc
stos
adc
leave
popa
or
lea
cmpsb
int
popf
fidivrl
cmp
loope
cmpsb
mov
add
add
cmpsl
and
mov
mov
pop
enter
cs
pop
je
movsb
in
mov
adc
dec
bound
jb
out
mov
sub
data16
dec
pop
jg
cmp
movsl
mov
or
in
fildl
push
ret
mov
insb
fistpl
test
mov
iret
fmull
scas
sub
inc
fcoms
out
cmp
lods
mov
idivl
out
popf
jbe
or
fistpll
out
push
mov
loopne
or
jnp,pt
mov
cmp
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lods
test
jmp
insl
pushf
inc
fs
mov
adc
adc
adc
scas
inc
adc
test
add
and
in
bound
insb
dec
shll
dec
mov
or
icebp
shlb
push
inc
rol
mov
dec
jno
sub
mov
add
aam
push
sbb
jb
jmp
leave
cs
addb
fisubrl
adc
clc
aas
jbe
add
lea
pushf
sbb
leave
push
shll
add
cltd
ljmp
push
dec
mov
cmp
adc
mov
dec
stc
shlb
stos
jo
jb
pushf
movsl
loopne
fucomp
inc
dec
sub
push
lret
mov
and
push
repz
pop
pop
mov
dec
inc
lea
outsl
xchg
scas
mov
aad
int3
add
mov
pop
pushf
cmp
clc
mov
xchg
out
fimuls
sbb
sti
addr16
pop
mov
mov
xchg
or
iret
mov
cmp
aam
out
or
test
or
mov
les
xlat
and
mov
mov
cmp
roll
mov
lods
sbb
lcall
lsl
int3
mov
out
and
cld
lret
pusha
jb
cmpsb
int
outsl
push
cmp
mov
mov
les
xor
icebp
rorl
gs
jle
rorl
jnp
or
sbb
out
mov
jecxz
stos
jl
push
sub
or
std
mov
aad
pop
stos
pop
out
jecxz
and
std
idiv
push
addr16
out
or
or
xorl
insl
dec
ss
test
loop
negl
and
and
cld
movsl
mov
in
and
popa
xchg
dec
inc
lds
test
mov
or
xor
jns
inc
insb
lods
xchg
in
xlat
lods
mov
mov
adc
or
je
mov
or
cmp
mov
nop
jmp
mov
xor
les
mov
das
popf
jns
imull
mov
pop
dec
push
mov
pusha
ficompl
xchg
or
scas
push
sbb
fs
add
jb
pop
xchg
outsb
loopne
cmpsb
scas
pop
fwait
mov
xchg
andb
cli
sub
and
je
and
ret
sub
mov
adc
in
ret
outsb
ret
xchg
jo
imul
jnp
jb
pop
push
in
aas
fwait
adc
sub
mov
sbb
daa
jl
loope
ror
pop
lcall
mov
std
repz
push
and
ret
pusha
xor
gs
sbbb
inc
push
add
jmp
jne
gs
aad
sub
loope
mov
rorl
push
aad
jbe
sahf
push
mov
lock
cmp
sub
shlb
roll
cmpsl
sbb
ficompl
leave
push
and
divl
jbe
xor
cmc
jns
xchg
cmp
push
mov
jge
loope
jl
pusha
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
mov
test
cwtl
lods
inc
sbb
mov
pop
adc
adc
jmp
out
push
mov
xchg
les
sbb
ds
push
cmp
sbb
aad
xlat
mov
fistpll
and
and
mov
sub
push
pop
mov
imul
leave
inc
in
jg
rcr
push
jmp
adc
in
xor
cmp
xchg
or
xchg
mov
test
xorb
mov
jbe
or
push
sahf
lret
inc
xchg
cmp
mov
pop
xor
lock
adc
stos
bnd
sbb
das
mov
enter
and
jo
lret
mov
add
mov
mov
out
cld
or
push
das
frstor
cs
ljmp
or
pushf
xor
xor
jne
rorb
or
jbe
lcall
cwtl
call
add
out
and
hlt
enter
pusha
enter
jne
inc
bound
jnp
add
or
sbb
pop
mov
mov
ret
lahf
rorb
imul
adc
mov
movsb
or
sbb
das
sub
cld
imul
int
lret
cmp
imul
aas
stc
data16
pop
mov
fnstsw
cltd
js
insb
imul
enter
xor
mov
sbb
mov
sbb
or
clc
sub
mov
jp
aaa
add
ljmp
pop
idivw
test
out
jge
lahf
adc
stos
pop
jp
ds
fiadds
adc
push
js
cmc
cmp
flds
aam
mov
push
push
ljmp
lods
loopne
dec
mov
dec
jecxz
bound
cmp
xchg
aad
nop
or
imul
dec
call
mov
xchg
cltd
cs
inc
lcall
dec
push
xor
mov
mov
stos
cmc
xchg
icebp
adc
insl
cs
add
lods
ja
mov
hlt
in
stos
xor
jmp
push
mov
mov
repz
bound
fdivl
mov
shl
cwtl
insb
test
push
sub
push
pusha
jecxz
fmuls
xchg
sti
push
lods
mov
test
pushf
fsts
pop
negb
out
jge
lret
loope
mov
or
push
jl
int
mov
push
cmp
push
sub
mov
hlt
aad
pushf
cwtl
das
mov
jl
shll
fucomip
add
mov
lahf
cmp
out
or
mov
test
add
and
pop
out
push
push
xchg
mov
push
nop
dec
cmp
ds
lret
je
lods
mov
add
mov
xchg
dec
lret
fstl
sbb
inc
orb
lea
or
or
sahf
in
add
loop
inc
sub
push
int3
xor
pop
in
push
test
cmp
loop
shll
sbbl
rorb
fincstp
push
push
push
jmp
jne
pcmpgtb
sbb
aaa
data16
mov
sbb
pop
adc
adc
mov
call
sti
pop
add
pop
cwtl
add
cld
add
push
adc
jecxz
out
or
shrb
and
arpl
inc
mov
mov
rcrb
or
sbb
ljmp
gs
loopne
fists
daa
jge
jnp,pn
mov
adc
sbb
clc
sarb
mov
cmp
adc
xchg
fcmovnb
outsb
pop
xchg
hlt
xor
and
test
mov
test
or
mov
lret
aad
sub
enter
pop
add
ficompl
es
jecxz
int
dec
aam
mov
in
pop
call
insb
inc
or
jns
test
pop
imul
push
in
inc
in
test
stc
scas
adc
cld
out
jns
adc
push
dec
mov
lods
out
sbb
into
fdivp
sbb
sub
clc
jmp
inc
mov
adc
sub
xor
das
shl
mov
nop
jne
sti
xchg
sub
push
pop
shrb
shl
aas
jnp
lret
cmp
mov
fcomps
scas
cmp
add
fwait
lahf
adc
fwait
push
ret
lahf
sub
and
aad
xchg
inc
mov
and
shrl
dec
aam
mov
mov
and
ljmp
je
into
pop
xchg
sahf
fcoml
scas
rcr
and
and
ljmp
cli
fld
adc
gs
insl
cwtl
call
scas
pop
push
adc
mov
ja
pusha
dec
jge
hlt
pop
push
jo
call
lahf
add
add
shll
or
pop
std
sub
mov
pop
popa
mov
or
imul
and
adc
xor
in
sbbl
aam
push
fildl
das
les
dec
inc
mov
mov
cmp
push
adc
cmp
and
pushf
je
fistpl
add
into
repz
imul
lods
inc
leave
outsb
daa
movsl
jg
lret
dec
dec
pop
add
add
xor
mov
pop
push
movsb
daa
xlat
in
fmul
adc
movsl
xor
aaa
mov
push
add
and
dec
mov
jge
cmp
add
frstor
xchg
out
and
push
or
add
mov
stc
xchg
sbb
mov
daa
adc
fsubrs
ds
sar
jbe
adc
arpl
sbb
cmp
mov
rcll
insl
push
sbb
leave
xchg
mov
imul
aas
xor
add
and
bound
xlat
mov
clc
jmp
push
gs
push
sub
movsb
addb
repnz
cmp
jecxz
sarb
push
pop
aam
adc
out
sub
addr16
cmp
inc
push
out
into
mov
push
sbb
test
daa
push
inc
aas
sub
or
jno
ret
xlat
sub
inc
xor
xor
mov
stc
jmp
push
pop
pop
xchg
xor
loop
sub
js
xor
das
pop
rclb
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
jmp
pushf
cmpsb
mov
scas
fwait
cmp
sbb
pop
adc
adc
jo
adc
cmp
inc
pop
or
adc
addr16
mov
je
sub
unpcklps
jmp
xor
mov
mov
imul
cs
outsl
xor
fnstcw
jns
sysret
or
mov
ficoml
inc
stos
jae
xchg
notb
clc
in
jbe
stos
aaa
xchg
mov
add
and
adc
dec
leave
repnz
lds
adc
lds
xlat
inc
aaa
daa
add
mov
xor
or
dec
shlb
das
pop
sti
jb
test
push
fstps
punpcklwd
sahf
int
out
cmp
sbb
arpl
pop
filds
lret
push
fdivrl
xchg
shll
nop
add
scas
fstl
mov
call
add
lods
jns
mov
xchg
clc
aad
cmc
scas
dec
jp
cli
xchg
mov
or
arpl
dec
pop
dec
iret
in
enter
and
cmp
daa
xor
aam
nop
repz
outsb
jmp
lcall
sub
sahf
stos
enter
fwait
jbe
insl
sbb
fwait
icebp
orl
lret
insb
xchg
daa
outsb
es
jp
in
fsubrl
jns
loop
sbb
mov
mov
inc
inc
ljmp
sub
aad
mov
xchg
rorl
mov
dec
push
adc
jl
bound
cli
test
popf
enter
mov
fisubrl
loop
cltd
mov
sbb
push
dec
fcom
hlt
jp
mov
jecxz
xchg
inc
dec
dec
xor
mov
add
push
loope
aaa
clc
adc
loope
xchg
mulb
lods
xchg
xor
jl
cmp
fs
mov
aad
jns
scas
sahf
push
mov
cmp
dec
icebp
or
and
mov
adc
iret
mov
ret
fsubs
mov
mov
iret
pop
and
and
xchg
outsl
std
pop
filds
pop
adc
cmc
sbb
je
and
push
popa
cmp
aaa
push
adc
in
aas
and
rcrb
out
repnz
cld
push
mov
mov
adc
fcomps
dec
cltd
dec
ds
mov
jge
adc
aaa
mov
loop
sub
fs
cs
jbe
cmpsl
mov
bound
aaa
pop
dec
mov
test
mov
xchg
and
sahf
xchg
idivb
mov
push
fabs
cmp
sbb
cmp
xchg
rcrl
xorb
push
loope
daa
mov
sub
add
add
inc
neg
jecxz
popf
jge
adc
test
xor
xchg
cld
shrl
adc
adc
dec
shll
lahf
xor
nop
fs
outsb
dec
mov
lods
dec
push
nop
ss
sub
xchg
lcall
xor
pop
cltd
lahf
test
in
add
xchg
push
dec
add
mov
xchg
mov
cmp
add
inc
and
insl
movb
mov
mov
or
sub
mov
sub
jmp
sbb
insl
imull
sub
idivl
inc
adc
pop
adc
adc
mov
subb
int3
subl
test
sbb
pop
cmc
rorl
dec
and
ja
push
mov
jp
pop
pop
sbb
lfs
mov
loopne
mov
sbb
ds
dec
enter
sbb
adc
aam
push
leave
fnsave
dec
xchg
movl
inc
xchg
sub
push
push
sbb
push
insb
hlt
add
mov
mov
cmovg
push
ds
icebp
outsb
dec
dec
sbb
imul
push
mov
imul
dec
jo
imul
adc
mov
push
sbb
dec
or
lret
scas
fists
roll
xchg
into
sub
or
pop
adc
jl
test
mov
rcll
aam
pop
test
jne
fidivrs
xor
dec
flds
fldcw
sbb
and
pop
mov
hlt
xchg
sahf
sub
mov
sbb
inc
xchg
dec
jg
pop
push
push
jge
cmc
dec
sti
push
movlps
pop
jae
fisubs
ret
bound
add
push
lret
incl
notl
inc
aad
mov
movsl
dec
xchg
movsb
out
xchg
sub
mov
or
nop
adc
jecxz
popf
mov
rorb
rcrl
xchg
decl
add
popa
and
jne
lods
daa
stos
adc
cmp
out
stos
add
pusha
xchg
add
bound
js
cmp
push
out
insb
stc
test
cmp
aaa
test
addb
inc
push
dec
imul
mov
ds
pop
mov
ds
subl
data16
dec
movsl
ja
popa
lock
sbb
jmp
subb
xor
lods
push
cmp
out
xchg
push
adc
test
cmp
out
push
stc
stos
inc
fwait
cld
mov
sub
sub
add
call
ds
mov
and
xchg
or
or
xlat
mov
mov
xchg
add
int
arpl
lea
imul
sbb
setns
inc
inc
iret
aad
out
cmpsb
jge
aaa
xor
mov
add
cmpsl
enter
je
data16
mov
daa
insb
push
out
sahf
push
mov
inc
mov
imul
sbb
or
aad
mov
fcmovne
in
outsb
pushf
mov
xor
sub
pop
ret
jg
inc
adc
pop
mov
pop
or
push
pop
jb
mov
scas
xchg
push
mov
cmp
mov
pushf
mov
sub
fmull
pop
divl
xor
mov
mov
fsub
cwtl
lcall
jno
mov
movsl
mov
jmp
imul
fwait
test
ja
pop
ret
xchg
cwtl
jne
ja
lahf
jno
push
out
pop
xchg
dec
insb
jmp
jno
cltd
xchg
mov
test
pop
sub
outsb
faddp
sub
in
stos
xor
lcallw
and
rcrb
mov
movzbl
cltd
idiv
movzbl
jmp
rclb
dec
push
add
mov
test
mov
pop
adc
adc
stos
cmc
push
stos
and
add
ja
stos
sarb
in
in
enter
add
mov
push
cwtl
sahf
sbb
xor
xchg
and
cmpsl
lret
scas
xchg
push
lret
jmp
sbb
mov
mov
test
xchg
xchg
mov
js
scas
rcl
imul
movsb
inc
xchg
pusha
push
jns
ficomps
fstpt
dec
bound
xor
inc
pushf
loop
popa
outsb
mov
in
cmp
arpl
and
jo
and
pop
inc
in
pop
in
push
pop
repnz
idivb
or
outsl
xor
das
out
cld
loope
and
ret
mov
pop
mov
shrb
inc
std
cmp
cmp
sub
aas
jmp
xchg
adc
jl
mov
cmp
sti
adc
sbb
cmp
shrb
push
cmpb
es
insl
js
test
xchg
xchg
pop
add
fidivl
adc
shlb
push
mov
adc
mov
mov
inc
sti
inc
ret
or
push
loope
ret
repnz
int3
cmp
pop
jp
jae
cmp
addr16
mov
pop
pushf
hlt
test
imul
xchg
lock
lret
jb
add
push
add
scas
xor
stc
popa
jns
inc
and
mov
in
cmp
inc
ja
call
lock
lahf
cltd
and
xchg
jns
jmp
test
repnz
or
inc
or
or
pop
mov
inc
inc
fstpl
fbstp
dec
lods
xchg
mov
pop
add
jnp
ret
movb
aam
lahf
xchg
xchg
outsl
xchg
nop
mov
lret
imul
cmp
cmp
test
jne
iret
push
push
sub
ss
pushf
js
inc
mov
rorb
cmp
outsb
xor
sub
sarl
aas
add
mov
arpl
fwait
push
jg
xor
mov
adcb
leave
mov
sti
lods
inc
hlt
sbbb
cmp
add
int3
mov
push
push
imul
jb
es
add
dec
dec
cmp
add
ds
mov
sub
xchg
dec
or
jnp
xchg
xchg
dec
icebp
in
es
dec
or
sbbl
pop
mov
add
loope
outsb
pop
push
push
cmc
mov
xor
mov
ljmp
ficomps
push
push
mov
stc
mov
push
out
popf
jns
mov
cwtl
fdivrl
addr16
cwtl
ret
test
xchg
ds
test
stos
cmpsl
xorb
negb
mov
sub
pop
mov
test
mov
push
push
xchg
in
lret
out
sti
orl
pop
nop
dec
push
rep
xor
int3
daa
ret
loope
les
test
jnp
lods
das
adc
sub
inc
pop
aam
and
inc
push
fdivr
cs
in
jns
leave
sbb
and
je
pop
gs
mov
sbb
in
rclb
pop
xorl
and
inc
and
add
inc
and
iret
movb
movb
movb
mov
mov
jmp
iret
xchg
mov
dec
daa
mov
pop
mov
mov
inc
cmp
adc
adc
dec
mov
fidivs
and
inc
sahf
jns
aas
bound
fwait
daa
push
inc
cltd
jno
mov
dec
or
movsl
xor
sahf
stos
into
mulb
aaa
sub
outsl
test
sbb
insb
push
jle
dec
and
xchg
aaa
dec
add
adc
push
mov
rcr
or
inc
mov
cmp
push
aas
pop
sub
insl
cld
mov
mov
adc
shlb
dec
xor
mov
xchg
and
data16
push
xchg
inc
loop
ret
mov
pop
daa
jo
cmp
aaa
mov
scas
push
fisubs
pop
out
dec
iret
sbb
mov
fisubrl
push
or
add
mov
ret
std
aam
cmc
cmp
in
mov
outsb
jg
pusha
push
arpl
testl
jo
icebp
mov
mov
jae
xchg
outsb
cmc
pop
or
out
shlb
sarb
mov
mov
insb
gs
daa
pop
sub
push
pop
mull
out
pop
ja
shrb
ss
hlt
aad
jns
xchg
adc
sub
jg
test
pop
out
pop
mov
sub
mov
push
sbb
sbb
push
int3
mov
fcompl
test
outsb
xchg
xchg
pop
mov
sbb
mov
push
jae
add
fdivp
movsl
aaa
clc
pop
jbe
imul
mov
js
lods
lds
es
and
and
sbb
mov
outsl
dec
into
sub
and
bound
dec
inc
je
cltd
xchg
cmp
push
sub
stc
fidivs
pop
and
mov
loopne
test
pop
adc
sbb
xor
cmp
aam
add
stos
sbb
mov
push
jae
and
sbb
jp
sub
in
movsl
pop
push
in
in
test
sbb
stos
lcall
leave
jg
xchg
lock
jne
shr
insl
push
jmp
js
daa
inc
sub
jns
leave
addr16
mov
fxam
scas
mov
mov
adc
scas
and
sbb
cli
cmpsb
xor
cmp
sar
inc
imul
or
and
in
cld
push
ja
ret
call
pop
mov
pop
iret
add
mov
or
popa
sbb
orl
in
cli
xor
loop
sbb
push
out
pop
mov
or
stos
mov
aad
inc
xchg
mov
add
xor
cltd
ret
sub
mov
push
mov
push
mov
ror
stos
cli
es
lcall
pushf
mov
scas
mov
ljmp
sub
outsl
bnd
sub
xor
mov
pop
scas
repz
inc
cld
imulb
test
mov
imul
inc
int3
xor
jae
pushf
lret
in
push
lock
les
rorl
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
jmp
and
mov
mov
dec
fidivrl
mov
adc
pop
adc
adc
rdmsr
add
orl
aam
outsb
xor
shl
loopne
popa
inc
test
rclb
push
jne
cmp
or
repz
repnz
and
pop
fidivl
icebp
or
adc
sbb
push
cld
cmp
lret
lds
add
push
vcvtsd2ss
ficomps
xor
cmp
push
lods
clc
rclb
fcomi
fnsave
scas
fs
xor
roll
inc
scas
xchg
or
iret
cmp
je
sbb
fsub
push
jmp
add
pop
push
jno
lahf
xor
leave
mov
sbb
addr16
adc
sub
mov
adc
sub
in
daa
in
jle
and
push
rorl
dec
or
mov
call
sub
cs
sbb
sti
mov
test
mov
insb
xor
cltd
xchg
adc
sahf
mov
sub
and
add
pusha
add
inc
inc
pop
in
dec
in
std
lcall
fidivs
nop
js
push
imul
jge
ficomps
out
ret
ljmp
mov
cmp
xchg
rcrb
ret
pop
mov
inc
lahf
inc
add
sbb
aad
xchg
das
lods
add
xorl
hlt
lds
aam
xchg
addr16
call
pop
sub
sub
shr
les
mov
or
inc
mov
mov
push
aaa
sbb
pop
dec
xchg
or
ret
cltd
es
stos
frstor
rcrl
push
dec
xor
fptan
das
xchg
loopne
mov
dec
stos
out
aaa
fstl
out
adc
scas
ljmp
mov
xchg
dec
aad
and
enter
fdivl
xor
sahf
scas
jge
mov
pop
pop
jo
jg
xchg
ret
xor
push
ja
mov
stos
jmp
fistl
xchg
daa
bts
imul
sbbl
jae
bound
in
repz
pop
sub
push
daa
aas
in
mov
jno
xor
mov
jbe
mov
sbb
pop
push
adc
dec
cmp
adc
xor
pop
stos
xor
cltd
push
sub
shlb
ss
into
adcb
iret
aaa
mov
sub
out
mov
sub
dec
mov
imul
jle
cltd
push
xchg
xor
or
adc
cmp
cmp
subb
mov
jne
mov
cmp
pop
out
test
enter
out
in
das
into
shl
les
dec
cltd
and
bound
sbb
mov
insb
mov
enter
pop
cmpsb
mov
add
pop
push
cmp
inc
sub
imul
scas
std
or
xchg
rcrl
enter
ret
mov
inc
mov
lods
mov
dec
cli
sub
shr
adc
sbb
lcall
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
sbb
sbb
stos
int
stos
mov
xor
adc
adc
je
ljmp
adc
inc
add
rorb
xchg
negl
adc
or
gs
sti
cmc
pushf
into
out
sub
int3
mov
jae
lahf
mov
ja
pop
mov
sbb
int
push
mov
or
push
int3
jp
lods
xor
std
fdivl
stos
leave
jno
mov
push
xor
arpl
xchg
mov
xchg
inc
ret
pop
pop
data16
jecxz
ds
shlb
and
leave
adc
xor
xor
ljmp
cwtl
bound
test
jp
or
dec
dec
sahf
jb
cltd
sub
fs
js
pop
mov
xor
js
mov
sub
push
cmc
or
cmpsl
mov
lods
jb
add
push
jge
mull
jb
mov
add
sub
jmp
gs
roll
jl
xchg
xchg
cmpsl
test
or
sub
mov
cmp
cmpsb
dec
test
sub
imul
push
insl
and
push
imul
lret
test
cmp
daa
pop
push
aaa
push
pop
or
aad
loop
stos
pop
jno
dec
insl
clc
fs
and
cld
dec
jp
in
mov
arpl
test
sub
lods
movsl
ds
ds
nop
sub
jnp
pop
push
xchg
or
adc
pushf
mov
and
jp
leave
ret
loop
mov
jl
cld
jmp
jmp
fsubrs
popf
adc
pop
repnz
outsl
imul
push
enter
pop
inc
mov
decb
jmp
mov
ljmp
enter
jns
cld
dec
mov
sbb
jns
mov
leave
pop
pop
rcrl
aaa
loopne
loop
xchg
jmp
sbb
inc
mov
fmuls
in
ljmp
push
jl
popf
jne
dec
and
dec
cltd
in
adc
jg
add
mov
fdivrl
ret
inc
sbb
mov
cmpl
mov
pop
mov
xor
xor
mov
fimull
and
dec
pop
xor
mov
xor
imul
test
mov
sub
push
jbe
mov
sahf
addr16
in
fs
scas
and
inc
pop
mov
test
push
test
adc
xchg
repnz
out
mov
jne,pt
leave
cli
fwait
push
scas
inc
inc
xlat
and
shrl
and
out
stc
xor
sbb
mov
pop
inc
mov
fmul
jb
in
push
mov
sbb
lock
out
push
je
xchg
test
add
fdivrs
cmp
fwait
mov
aaa
cmc
mov
and
sbb
and
lods
xchg
jnp
aam
shrb
dec
and
cmpsl
inc
pop
pop
test
and
pusha
loop
xchg
pop
outsb
rcll
testl
mov
cmp
xchg
inc
jne
popf
mov
xchg
out
or
outsb
sub
add
jo
negb
movsb
pop
out
inc
and
and
ret
xchg
in
lods
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
adc
jmp
jne
rcl
cmp
adc
scas
insb
pop
xchg
cmp
sbb
movlps
dec
dec
mov
sti
or
gs
sbb
in
xor
or
hlt
cmpsb
loop
scas
cmp
int
xchg
loopne
sub
sti
shlb
xor
iret
jp
jge
outsb
popa
jae
sub
popl
imul
loopne
inc
sarb
pop
ror
paddsw
test
push
or
adc
sub
test
enter
ss
loope
inc
push
mov
lds
out
rorb
xchg
out
pop
mov
daa
push
add
mov
int
mov
rorl
lahf
jae
xchg
decb
enter
inc
pusha
cmp
int3
arpl
je
cli
xchg
mov
add
xor
popf
cmp
outsb
xor
ja
cmpsl
mov
ss
jns
mov
lods
mov
shrl
push
ds
xchg
add
lret
xor
jb
xor
pop
pop
int3
cld
shrb
in
nop
dec
cmp
cld
mov
test
mov
stc
and
cli
cmc
xchg
inc
shll
iret
into
fbstp
int3
pop
lcall
mov
inc
cmpsl
mov
and
dec
pop
mov
sbb
stos
repz
aas
data16
and
pop
and
pop
sti
xor
push
adc
rcrb
mov
push
and
lods
test
ret
scas
dec
mov
rorb
clc
push
lods
imul
es
and
shrb
and
mov
insb
xchg
xchg
lods
and
sub
es
jmp
xor
daa
nop
or
xchg
and
ja
sbb
inc
push
mov
adc
in
push
int3
ret
pop
push
mov
jb
jg
xchg
loopne
in
jne
pop
subps
push
push
xchg
mov
popa
sahf
add
inc
pop
pop
pop
sti
xlat
sub
or
mov
add
mov
scas
cmc
les
jmp
sbb
mov
and
push
enter
inc
add
add
dec
adc
jb
ror
mov
movlps
call
push
and
gs
out
cld
mov
js
jle
stc
outsl
add
xchg
mov
clc
hlt
imul
jp
pop
inc
scas
add
mov
and
inc
jl
xchg
out
in
xchg
sti
fwait
xor
repz
and
cltd
jl
push
subl
pop
ficoml
mov
mov
sub
push
cmpsl
mov
test
repnz
and
xchg
ss
mov
dec
jns
out
add
cmp
cmpl
lret
push
and
cs
es
push
ret
int3
movsl
mov
cli
sbb
test
fidivrs
mov
jecxz
hlt
xchg
aam
fcomip
orl
add
sub
dec
inc
int3
rcr
adc
cs
fs
sahf
push
sbb
repz
mov
jg
stc
les
sbb
pop
call
lahf
inc
clc
mov
into
popa
out
inc
icebp
jb
jl
dec
sub
repz
insb
jp
outsl
mov
loop
js
movsb
adc
movsl
adc
mov
popf
call
mov
insl
hlt
fwait
rcr
mov
mov
add
loopne
cmpsb
push
insb
xor
mov
push
rcrb
stc
mov
mov
fsubl
ja
pop
pop
mul
add
and
and
or
cmc
repnz
add
cmp
pop
mov
mov
sbb
push
fs
out
xor
gs
leave
mov
movsb
push
str
fmul
dec
pop
jge
mov
jle
lock
add
in
lret
movsl
loope
movq
fldlg2
cs
rclb
rcll
xchg
mov
out
add
adc
loopne
mov
aaa
nop
dec
movsb
xchg
aad
inc
loop
mov
sub
pop
push
and
enter
jmp
xchg
loope
xchg
mov
push
or
xor
data16
mov
scas
xor
adc
and
inc
add
movl
not
movl
mov
jmp
mov
jb
pushl
pushl
call
or
xor
or
sub
mov
mov
sbb
sbbl
andl
push
mov
sub
movl
movl
movl
jmp
mov
pop
test
aad
cmpb
movlps
loopne
gs
dec
pop
fiaddl
cmc
loopne
fistpll
enter
ja
shl
pop
mov
das
lock
xor
or
push
jecxz
out
out
xor
mov
xchg
sub
shrd
sbb
or
aam
inc
loopne
add
sahf
pusha
loope
pop
popf
lret
xor
aam
enter
fstps
jg
or
addr16
lds
insl
mov
je
cmp
mov
sbbl
mov
mov
outsb
and
cmp
js
xor
push
cmc
or
loop
call
xchg
imul
xor
pop
sub
pop
jno
pusha
inc
cltd
outsl
cs
lcall
cli
add
inc
xor
push
xor
mov
inc
ror
mov
test
push
les
sub
xlat
es
push
or
inc
rcrb
jne
push
push
das
cmpsb
sbbb
and
pop
pop
cwtl
cmp
mov
xor
mov
mov
out
sti
jge
mov
mov
mov
inc
and
ret
fld
mov
loope
fs
and
pop
add
fsubrl
cmp
dec
mov
out
cmp
dec
lods
mov
mov
stos
test
inc
filds
ja
and
jns
mov
imul
stc
and
aad
add
xor
xlat
dec
add
push
inc
adc
mov
jmp
adc
fildl
mov
rorl
data16
aas
aaa
pop
in
dec
push
add
sbb
daa
lcall
mov
and
fisubs
mov
inc
pop
dec
inc
push
mov
insb
push
jno
inc
mov
mov
sbb
iret
sahf
pop
scas
or
lahf
jo
jp
sbb
pop
int3
mov
insl
lds
cltd
sub
jbe
mov
mov
movl
xor
subl
div
adc
imul
cmpl
mov
movl
mov
jmp
movl
jne
push
pushl
push
call
adc
adc
mov
add
mov
or
xor
sbb
movzbl
xor
mov
subl
xor
add
and
mov
movl
xor
xorl
div
sub
xor
mov
cmpl
movl
mov
jmp
movl
movl
jae
push
pushl
push
call
orl
movzwl
adc
dec
and
cmpl
mov
mov
jmp
mov
mov
jg
push
pushl
call
sbb
and
addl
adcl
adc
movzbl
sbb
mov
mov
or
jmp
bound
adc
popa
add
lcall
sbb
adc
fnstcw
iret
lock
adc
dec
jg
and
std
mov
sahf
xlat
enter
das
lock
jge
jge
mov
jbe
outsl
pop
fiadds
outsb
lret
jge
dec
jnp
rorl
jae
fistl
or
les
clc
xchg
jnp
les
int3
or
repz
push
int
jge
les
iret
ficoms
sub
dec
test
adc
xchg
ret
cs
outsl
or
in
mov
fdivl
add
ja
dec
out
mov
jns
mov
sbbb
push
jl
call
movsb
push
nop
cld
lds
mov
imul
mov
fistl
xor
sbb
and
out
add
xor
mov
mov
je
sub
and
mov
inc
aas
ss
cmpl
int3
leave
les
pop
fnstcw
jne
mov
int3
push
sub
shrl
aaa
or
jb
in
jp
xor
pusha
xor
lcall
jmp
jb
movsl
movsl
and
inc
jl
aad
movsl
pop
cmp
mov
xchg
jo
or
pusha
mov
sahf
inc
cmpsl
test
xchg
pop
subl
lahf
sbb
mov
gs
mov
xor
or
mov
test
dec
dec
pop
lahf
sbb
mov
dec
call
xchg
popf
cltd
and
xor
shrl
mov
adc
sub
ljmp
xchg
jae
mov
add
mov
adc
dec
pop
sbb
pop
shl
jl
adc
and
lcall
push
xchg
push
dec
fcomip
xchg
jl
nop
inc
push
cmp
mov
inc
aam
sub
aad
jnp
addb
xor
sbb
cwtl
adc
test
clc
das
add
movl
addl
jmp
pop
repz
cmp
pop
data16
idivl
sbb
adc
movlps
xchg
xchg
jge
pop
cmc
push
in
pop
lods
push
fldcw
dec
cmpsb
clc
ja
mov
push
rcll
mov
icebp
pop
sbb
shrb
adc
sbb
mov
cltd
cmp
xor
mov
fwait
jne
pusha
mov
outsl
mov
pop
test
or
xorb
lea
loop
cmp
mov
sub
xor
dec
shrl
pop
dec
dec
stc
mov
out
mov
outsb
dec
adc
les
decb
js
ljmp
xchg
or
inc
lds
cmpsb
enter
pop
xchg
mov
inc
inc
gs
pusha
inc
dec
xor
ss
add
test
out
pop
push
mov
sahf
fwait
mov
add
loop
test
test
cmp
inc
out
popa
aas
mov
roll
in
xor
lock
ljmp
cmp
pop
add
sbb
aam
add
clc
adc
test
xchg
mov
xor
inc
xchg
xchg
xchg
es
push
and
repz
fstpt
mov
jl
lea
stos
xchg
in
cmc
aam
addb
mov
aad
pop
pop
repz
push
xor
sahf
mov
stc
ret
stos
sub
test
pop
dec
movsl
out
jp
loopne
test
lret
ud2
pop
aam
stc
sbb
mov
sub
push
fwait
or
ss
je
or
js
pushf
test
repz
cmpsb
cmp
int
cmpsb
push
std
xchg
push
cmp
cmp
leave
repnz
push
je
rorl
cwtl
sbb
test
lret
pop
loope
pop
and
push
sbb
addb
jnp
pop
adc
mov
scas
test
scas
cmp
mov
or
push
xor
jecxz
jle
cmp
push
test
inc
sbb
scas
fcompl
cmp
add
lds
jno
and
shrb
incl
add
xorl
mov
add
xor
or
xor
imul
cmpl
movl
movl
jmp
mov
jl
push
push
pushl
call
not
movzwl
adc
add
sub
xor
mov
xor
add
sub
and
mov
xor
and
sub
mov
mov
mov
sub
add
movl
orl
movl
movl
cmpl
movl
movl
jmp
mov
je
push
push
call
and
addl
orl
xor
add
or
mov
mov
xor
xor
sub
or
movl
and
mov
cmpl
mov
mov
mov
jmp
movl
movl
jb
pushl
push
pushl
pushl
call
neg
xor
sbb
or
neg
subl
imul
mov
imul
imul
mov
adc
mov
adcl
and
or
xorl
mov
xor
mov
add
mov
mov
addl
lea
cmpl
mov
movl
movl
jmp
movl
jae
push
call
notl
or
addl
movzwl
sbb
mov
sub
xorl
neg
inc
mov
cmpl
movl
movl
mov
jmp
mov
mov
jbe
push
push
push
call
and
andl
sbb
neg
movl
movl
cmpl
mov
movl
mov
jmp
movl
jge
push
pushl
pushl
pushl
pushl
push
push
call
neg
or
movzwl
and
mov
movl
xorl
xor
and
movl
mov
xor
jmp
int3
cs
lahf
push
pop
leave
sbb
jns
js
adc
adc
jmp
stos
push
dec
std
pop
mov
les
and
mov
leave
or
or
nop
add
push
mov
subb
jns
into
out
or
cmp
jo
icebp
sti
push
inc
testb
ljmp
mov
daa
out
leave
out
and
sub
sbb
push
inc
je
pop
aam
mov
pop
push
stc
test
mov
jb
ficompl
jbe
mov
dec
popl
and
push
jle
cs
out
mov
push
cs
stos
push
push
sbb
cwtl
loopne
jmp
cmpsl
stc
lret
leave
mov
roll
scas
daa
mov
rcrl
xor
mov
push
jne
fldl
pop
gs
insb
fs
and
das
dec
mov
je
xor
ss
push
imul
in
sbb
pop
add
dec
div
repz
dec
pusha
fstpt
dec
jmp
test
cmpsb
stc
fcompl
je,pn
jge
and
cmp
mov
gs
mov
pop
icebp
out
scas
hlt
push
mov
lret
jnp
dec
mov
test
push
call
inc
pop
aaa
dec
roll
mov
and
adc
test
sub
add
icebp
xchg
lods
or
notl
or
inc
iret
popf
cmp
loopne
insl
in
xor
xchg
sub
cltd
jmp
cmc
xor
or
lds
shlb
incb
push
cli
push
or
sub
jbe
mov
fwait
sbb
xlat
or
jne
xchg
lret
stos
add
rcrb
lea
and
jmp
jne
js
mov
bound
push
mov
ret
adc
fimuls
les
dec
cmp
cmp
push
dec
jnp
out
sbb
int
and
or
xchg
xor
incl
add
add
roll
in
incl
add
lret
or
movzwl
sbb
add
movl
xor
mov
xor
movl
sub
movl
movl
sub
mov
movzbl
and
add
or
mov
sbbl
sub
cmpl
mov
mov
jmp
mov
je
push
pushl
pushl
push
call
xorl
sbb
mov
adc
mov
add
adc
mov
lea
add
or
cmpl
movl
not
movl
jmp
movl
movl
jge
push
call
adcl
orl
xor
or
or
add
subl
inc
xor
xor
sub
sbb
sub
xor
xor
and
mov
mov
andl
movl
xor
movl
incl
mov
inc
add
cmpl
mov
movl
mov
mov
jmp
movl
mov
jb
push
pushl
push
pushl
push
call
mov
adc
mov
negl
andl
movzwl
xor
mov
adc
imul
jmp
aas
mov
cmp
add
stos
dec
or
adc
movlps
movhlps
xor
mov
aas
ss
jg
adc
je
aas
les
std
imul
std
add
pop
adc
dec
popa
maxps
loopne
sbb
xchg
pop
mov
shr
icebp
pop
fsubs
jb
lret
loopew
pop
mov
add
mov
add
adcl
pop
lahf
mov
add
int
jns
lahf
or
nop
repz
xor
inc
gs
sarl
jnp
ds
stos
mov
sub
mov
jecxz
sbb
fidivl
pop
sbb
add
or
mov
xchg
repnz
leave
pop
or
or
inc
cmp
movsl
xchg
inc
addr16
fstl
pop
lret
orl
mov
aas
jae
cmp
or
std
sub
xor
push
loopne
cmp
sti
push
fwait
add
xchg
shll
jne
adc
std
roll
push
shll
or
or
pop
pop
in
hlt
sti
stos
sub
hlt
shlb
adc
push
push
into
add
add
imul
mov
pop
popf
shlb
sbb
rcrb
cmp
cmp
in
jge
movsb
sbb
add
cmpsl
ss
int3
mov
push
adc
mul
xor
pop
jno
cli
mov
dec
and
rep
mov
test
stos
out
bound
call
sbb
fdivl
cmp
jecxz
fs
pop
insl
inc
lods
jmp
aas
mov
fsubs
out
stc
test
lods
imul
outsb
adc
lods
test
aad
xchg
cmp
mov
sub
inc
in
cwtl
repnz
outsb
aaa
loop
rcrl
sub
jl
sub
push
out
mov
mov
xchg
ret
adc
ja
pop
add
imul
dec
movsl
cmpsl
outsl
inc
xchg
cmp
adc
xchg
imul
adcl
xor
subl
mov
div
sub
mov
sbb
mov
cmpl
mov
mov
mov
jmp
movl
mov
jg
pushl
pushl
pushl
push
call
add
negl
sbbl
and
sub
xor
movl
movl
movl
sub
mov
mov
movl
xor
jmp
jbe
and
sub
lods
insb
and
movlps
lret
xor
stos
faddl
enter
sub
lcall
cs
or
jne
sti
or
bound
add
stos
and
push
out
mov
add
pop
mov
sbb
stc
and
cmp
fldenv
ret
lret
xchg
subb
sbb
fmull
mov
dec
icebp
clc
xor
push
lock
icebp
adc
dec
push
stos
fucomip
enter
int
xchg
in
imul
pop
mov
add
hlt
cs
je
add
adc
ljmp
rcrb
adc
insl
aad
cmp
enter
subw
mov
mov
sbb
int
sti
dec
xchg
jbe
and
or
push
js
fucom
mov
mov
pop
sbb
xor
xchg
andb
xchg
jo
xchg
mov
test
cmp
fildl
and
cmp
bound
mov
mov
cld
hlt
mov
mov
sub
push
pop
sbb
jge
orb
jmp
enter
out
shlb
sbb
cmp
call
pop
jecxz
jecxz
test
push
andb
push
cmp
aas
call
fcomip
fildll
mov
out
rorl
sbb
jmp
pop
dec
fwait
dec
loop
outsl
cmp
push
adc
loope
and
dec
test
stos
xchg
nopl
mov
nop
mov
iret
aas
in
or
push
hlt
cmpsb
jg
xchg
scas
mov
fmul
xor
fneni(8087
sbb
mov
xchg
dec
and
cs
push
shl
test
aam
mov
mov
in
ret
xchg
or
jb
mov
int3
sbb
mov
jb
sub
shrb
out
aaa
dec
dec
js
inc
lret
div
mov
add
imul
add
add
sbbl
mov
xor
xor
xorl
mov
div
xor
cmpl
mov
mov
jmp
mov
mov
jl
push
push
push
push
call
sbb
adcl
movzbl
adc
mov
mov
xor
adcl
mov
inc
movl
sbbl
movl
adcl
movl
cmpl
mov
movzwl
jmp
movl
ja
push
push
call
sbb
and
neg
or
sub
adcl
and
mov
mov
orl
sub
shr
mov
xor
sub
mov
imul
cmpl
movl
movl
movl
jmp
mov
jne
push
pushl
call
sbbl
sbbl
sub
xorl
adcl
cmpl
movl
movl
movl
movl
jmp
movl
mov
jle
push
pushl
call
notl
xorl
sub
xorl
mov
adcl
and
mov
sbbl
sub
add
mov
movl
sbb
movl
mov
add
or
mov
or
sub
mov
or
mov
sbbl
movl
incl
movl
movl
movl
movl
and
movl
sbb
movl
sbb
movl
notl
mov
add
mov
sub
cmpl
movl
movl
jmp
movl
movl
jg
push
call
and
and
andl
xor
negl
and
or
orl
mov
imul
sbbl
imul
orl
mov
sbbl
or
andl
mov
lea
xorl
push
call
mov
orl
mov
or
imul
xor
xor
xor
mov
add
cmpl
mov
movl
mov
mov
jmp
movl
jb
push
call
addl
sub
sbbl
movzwl
adc
adc
movzbl
or
and
sub
jmp
xchg
out
lcall
mov
cmc
stos
lret
mov
int3
movlps
cltd
loopne
and
imul
cmpsb
adc
jmp
cmp
shlb
add
push
imul
push
fcompp
mov
and
lret
xor
push
jge
jnp
outsb
int3
insb
xor
lea
aas
repz
inc
test
lds
xlat
xchg
cld
jbe
movsl
stc
test
sbb
decl
pop
daa
addr16
notl
icebp
jo
push
pop
inc
fadd
packsswb
push
dec
jle
mov
push
out
jne
sbb
mov
pop
pushf
push
fimuls
mov
sbbb
les
and
addr16
imul
jmp
jmp
mov
lret
cli
or
stc
adc
mov
add
adc
rorl
inc
lods
popa
aaa
mov
mov
cmp
sub
jl
pop
clc
imul
cmp
cltd
push
pop
mov
mov
scas
and
xor
push
adc
icebp
xchg
mov
sub
xlat
frstor
push
fcomip
xor
mov
mov
xchg
int
hlt
add
mov
jo
sbb
lods
dec
push
out
push
mov
and
xchg
imull
push
lret
add
daa
jecxz
dec
imul
test
mov
enter
jp
mov
out
cmp
adcb
adc
push
clc
and
adc
out
sbb
in
idivl
movb
mov
and
cmc
stc
and
out
adc
fiaddl
rolb
xor
dec
inc
sub
add
sti
cmp
mov
mull
stc
scas
xor
push
mov
and
adc
int3
sti
cs
push
inc
lods
movsb
inc
loop
add
mov
sub
lods
ds
hlt
or
inc
std
pop
jb
pop
or
fnstsw
cmp
jg
imul
sbbl
mov
jns
xchg
cli
mov
push
sub
cmpl
mov
movl
movl
jmp
movl
movl
jb
pushl
push
call
xor
subl
movl
add
movzbl
adc
sub
adc
neg
xor
xor
mov
andl
div
xor
sub
add
mov
cmpl
mov
not
jmp
not
notl
jl
push
pushl
push
push
push
call
mov
add
mov
andl
add
subl
xorl
decl
movl
xor
movl
movl
cmpl
movl
movl
mov
jmp
mov
jae
push
call
or
adc
inc
adcl
or
adcl
adcl
movl
movl
xor
or
sbb
movl
movl
movl
movl
not
movl
movl
sbbl
movl
orl
mov
mov
add
mov
cmpl
movl
mov
movl
jmp
movl
movl
jl
pushl
push
push
call
or
or
sbbl
sbb
andl
and
xor
sub
sub
imul
cmpl
mov
mov
movl
mov
jmp
mov
movl
jle
pushl
call
sub
sbb
adc
sub
movzwl
sub
movl
mov
lea
cmpl
mov
movl
jmp
movl
mov
jbe
pushl
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
sub
mov
mov
mov
sub
sub
mov
and
mov
xor
add
mov
or
lea
cmpl
movl
mov
not
jmp
movl
jle
push
push
call
xor
adc
mov
mov
sub
and
xor
subl
and
sbb
mov
orl
sub
cmpl
movzwl
notl
jmp
movl
jg
pushl
push
pushl
pushl
call
subl
adcl
sbb
xor
add
add
adc
sbb
add
sbb
mov
movl
adc
movl
mov
sbb
mov
movl
neg
movl
mov
xor
mov
sbb
mov
subl
xor
addl
xor
andl
mov
andl
call
mov
cmpl
movl
mov
jmp
mov
jl
push
push
call
xor
or
or
mov
or
sub
notl
andl
mov
and
mov
mov
sbbl
mov
xor
movl
xor
andl
mov
xorl
call
addl
or
xorl
or
mov
adc
mov
adcl
xor
sbbl
xor
mov
orl
call
sub
mov
and
mov
mov
subl
mov
andl
jmp
aam
jle
cmp
xor
xchg
call
adc
sti
lods
sbb
imul
fldl
fdivr
fsubl
pop
mov
push
dec
shrb
clc
icebp
jmp
sbb
iret
xor
dec
push
push
cmpsb
sub
mov
mov
rcll
fsub
xor
mov
adc
sbb
mov
sub
fmuls
pop
push
jns
fwait
das
rclb
push
push
adc
jne
rcrl
cwtl
lods
or
int3
scas
or
mov
jnp
test
arpl
imul
in
mov
xor
cmp
pop
fcoml
mov
popa
lcall
mov
pop
push
add
pop
jae
test
xorb
das
or
scas
sbb
mov
mov
push
or
mov
push
sub
push
sub
xchg
lahf
and
in
nop
aas
and
jge
add
and
push
repnz
mov
push
loopne
mov
pmuludq
stc
out
jg
cmp
cmp
cmpsl
ljmp
cwtl
mov
ljmp
cltd
add
lcall
inc
sub
bound
shrl
xchg
shlb
push
lahf
pop
iret
push
pop
lock
negb
add
loopne
jnp
push
arpl
inc
imul
mov
sbb
scas
bound
loop
rolb
jb
call
out
aad
lret
jns
aad
lods
jl
or
mov
cmp
popa
scas
insl
jbe
int
incb
jmp
addr16
lods
ss
push
int3
adc
inc
cwtl
sbb
push
data16
sub
sub
scas
sub
test
loop
xchg
inc
popf
xchg
movsl
jle
jnp
inc
mov
cmp
movsl
dec
xchg
and
fucomip
cli
push
enter
sub
les
push
and
fisubl
xor
jo
lret
sbb
inc
cmp
xorl
cmp
xor
xor
mov
xorl
mov
or
mov
orl
mov
addl
mov
call
mov
add
mov
mov
sbbl
or
sub
mov
movl
or
xorl
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
jmp
pop
dec
scas
jns
pop
sbb
stos
insb
push
mov
movlps
ja
cmp
int
add
push
pushl
push
fldt
jns
int3
cmpsl
sbb
adc
icebp
cltd
adc
jl
icebp
lds
ss
mov
fcomi
data16
jmp
in
ja
cwtl
mov
or
call
jp
stos
ret
lea
in
stos
mov
xor
sbb
mov
stc
std
shl
pop
pop
scas
lret
mov
mov
sbb
push
lret
inc
cli
jg
cmp
sbb
stc
aam
mov
mov
cld
mov
clc
lret
ds
mov
daa
cmpl
cmp
mov
es
pop
sbb
dec
jp
xor
loope
paddd
mov
jnp
inc
jl
dec
into
xchg
stos
xchg
mov
and
rorl
jno
nop
pop
ret
xchg
mov
mov
mov
lret
cmc
fisubs
ds
into
repz
pop
xchg
xor
cli
jecxz
test
aas
enter
aaa
inc
ss
iret
cli
std
adc
data16
fwait
pop
lods
ljmp
sbb
or
pop
mov
dec
and
daa
in
adc
adc
aas
push
and
mov
adc
dec
sbb
fidivrs
fcomip
fistl
cmp
inc
jbe
jp
or
adcl
mov
repnz
adc
leave
adc
jp
scas
out
inc
mov
test
cmpsl
push
cld
sahf
sbb
sub
sbb
ss
jns
lock
leave
push
push
gs
pushf
cli
or
push
inc
lret
sub
or
dec
jo
cli
jae
rolb
lret
mov
cmpb
aad
push
dec
jns
inc
push
or
sub
lahf
adcb
dec
xor
and
jb
fsub
test
sbb
mov
xchg
jmp
int
stc
mov
push
dec
push
xor
xlat
jns
adc
cmpsl
fistl
mov
std
decl
ret
add
add
add
js
inc
pop
lods
push
notl
adc
mov
test
sub
cmp
ss
and
pop
in
cmpb
lcall
dec
adc
test
and
mov
or
lea
repnz
jno
xor
data16
mov
loopne
sbb
adc
pusha
mov
add
inc
inc
cwtl
xor
std
mov
int3
xchg
fcomps
sbb
dec
pop
sahf
inc
fisubl
pop
loopne
mov
test
clc
jle
mov
out
imul
push
push
inc
dec
xchg
or
jecxz
cmp
in
mov
add
cmpsl
mov
push
push
jmp
xchg
push
pop
mov
inc
mov
push
imull
jp
push
dec
jg
ret
jo
inc
mov
sbb
ret
in
int3
lods
fs
iret
movsb
or
xchg
shlb
andb
stos
sub
mov
inc
push
sbb
cmp
jg
xor
adc
and
mov
pop
lods
iret
sbb
xor
jb
pop
int3
dec
or
mov
xor
enter
loop
out
adc
jg
mov
pusha
add
push
shrl
inc
mov
insb
outsb
inc
incl
daa
shlb
loope
and
jns
lret
inc
out
pop
rol
out
test
or
addr16
ds
addr16
stos
icebp
clc
mov
inc
lock
mov
add
out
into
testb
fistpl
push
xor
push
adc
daa
fldenv
fsts
int3
cmp
push
hlt
rcl
cwtl
add
out
sub
aam
into
movsl
lahf
out
sub
cmp
test
fldenv
pushf
xor
lahf
xlat
scas
rcl
scas
pop
outsl
adc
pop
add
outsb
xlat
mov
sbb
inc
iret
mov
mov
rep
adc
adc
mov
hlt
cmp
scas
or
add
arpl
pop
repz
xor
adc
inc
fists
mov
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
jmp
ljmp
pop
inc
lea
mov
movlps
pop
inc
out
out
xchg
inc
movsb
leave
push
lds
adcb
cmp
inc
rcll
cmpsl
sub
pushf
js
orb
aam
push
cmc
mov
movsl
out
mov
in
int3
stc
and
mov
inc
push
jns
jg
sbb
pop
cli
mov
fcomp
cmp
adc
sub
out
add
or
enter
insb
pop
push
jb
mov
pop
mov
push
mov
shl
add
incl
addl
pop
cltd
push
and
or
cld
sbb
inc
fildl
int3
add
loop
inc
pop
shrl
sti
sahf
jbe
loope
jmp
mov
dec
or
xor
mov
jno
stos
ficoml
mov
xor
adc
dec
shl
lods
pop
adc
jns
xlat
lds
mov
push
ret
cmp
jmp
jecxz,pt
movl
lods
xchg
hlt
push
cs
in
jmp
jge
lock
push
cld
mov
xchg
sbb
jns
dec
sar
cmpb
push
pop
pusha
cli
rorl
les
xor
xorl
bound
adc
fsubs
jmp
xchg
jmp
sbb
and
popa
out
xor
push
lods
push
jne
fs
mov
aaa
cld
jae
and
sarb
mov
pop
push
or
cltd
push
mov
js
fsts
jge
sahf
int
outsl
stos
repnz
and
ljmp
icebp
movsl
push
pop
mov
or
inc
and
xor
jle
push
push
cmpsl
hlt
or
and
mov
popf
mov
jo
jno
mov
cmp
xchg
movsl
shrl
imul
bound
lret
jbe
ret
push
mov
loopne
push
jne
and
and
dec
sub
out
out
fidivrs
cmpsl
push
leave
xchg
mov
pop
sti
nop
testl
mov
inc
add
add
pop
sbb
sbb
ss
cmp
js
rcll
adc
movlps
add
xor
mov
das
out
pop
push
test
test
pop
and
incb
repz
adc
mull
adc
test
xor
pop
fsubrs
mov
xor
or
enter
pushf
addr16
rcrl
popl
cmp
adc
lock
lcall
ret
stc
cld
sub
add
dec
outsl
inc
int
cmp
jo
sub
test
mov
fstps
or
sbb
mov
sbb
sub
cmp
mov
ljmp
fprem1
aas
ret
movsl
pop
pop
mov
dec
inc
dec
les
push
mov
or
and
and
mov
dec
stos
lahf
test
mov
shrb
iret
shlb
arpl
aad
adc
cli
mov
popf
pop
push
jp
or
mov
sub
jno
aas
mov
clc
repz
jno
fistpl
je
popf
fsubs
add
pop
inc
pop
ss
andb
inc
push
pop
lcall
sbb
and
xor
pop
jbe
and
data16
sahf
jno
push
mov
mov
es
mov
push
stc
fldenv
mov
sbb
pop
jle
cmc
lret
pop
ret
outsl
je
cmpsb
dec
cltd
add
outsb
xor
jle
fwait
and
lahf
xorb
and
pop
pusha
sbb
add
aad
push
jp
sub
xor
cmpsb
or
adc
mov
pushfw
mov
xchg
add
inc
jbe
std
pop
add
dec
insb
adc
sbb
dec
es
incl
cmpsb
and
lret
push
std
sub
mov
mov
add
sbb
inc
inc
rolb
das
enter
fwait
pop
fisubl
lods
daa
cltd
iret
scas
in
movsl
fstpl
frstor
add
cmpl
xorl
ret
lea
icebp
sahf
lcall
rorl
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
jmp
arpl
das
sub
sub
and
or
sub
movlps
lahf
fwait
cltd
loopne
add
fbstp
arpl
pop
jno
add
lock
pusha
pop
or
lock
ret
mov
sub
sub
jbe
sub
repz
bound
pop
sbb
hlt
pop
ljmp
daa
and
or
test
lret
fstps
xor
xchg
cli
dec
mov
sub
pop
in
pop
bound
pop
mov
mov
jecxz
or
hlt
xor
mov
les
ja
sbb
sub
adc
aam
push
sbb
mov
xor
jge
push
popf
xlat
xlat
in
xchg
push
inc
imul
loope
xchg
pop
pop
and
push
icebp
xchg
jns
test
sub
into
mov
imul
xor
sahf
loopne
add
lret
gs
shrl
pop
inc
mov
or
jae
adc
push
push
or
xchg
ja
lcall
jmp
jl
push
lods
shll
sub
insb
lret
push
sbb
and
jno
push
cld
je
neg
daa
sbb
nop
inc
push
addr16
mov
adc
jmp
cmp
test
aad
cli
ljmp
fcoms
popf
in
loopne
lahf
sbb
xchg
jo
call
pushf
jmp
inc
xchg
dec
sbb
sub
sub
jle
negl
cmc
xor
add
cmp
mov
push
in
imul
dec
cmpsb
in
leave
sub
ret
lods
jne
lret
mov
sbb
sub
fnstcw
test
inc
pusha
add
inc
push
mov
dec
lock
rcrl
xchg
insb
pop
lock
mov
je
ss
cmp
das
pop
jp
push
icebp
shrl
jl
repnz
popa
push
mov
dec
loop
scas
inc
aas
adc
loopne
int3
arpl
repnz
pop
addr16
push
jae
outsb
add
adc
dec
std
pop
jne
sub
mov
std
decl
jmp
xor
fisttpll
and
rcrb
lods
out
adc
adc
inc
dec
xor
mov
cmp
push
cs
mov
xchg
aas
add
xorb
mov
xor
mov
mov
xor
ss
inc
mov
out
mov
enter
xchg
test
std
mov
fs
lock
cmc
add
jnp
addb
mov
jo
stc
pop
mov
mov
movsl
gs
push
xor
jbe
gs
mov
jmp
xchg
push
sar
cld
fisttpll
xchg
popa
fwait
mov
cwtl
inc
aad
add
and
mov
mov
enter
lods
iret
inc
mov
pusha
xchg
ds
xor
xchg
out
cmp
adc
loopne
sarb
adc
popa
mov
shrl
addr16
repz
aad
loopne
je
or
cmp
int
jne
call
jbe
push
into
jp
mov
xchg
lea
mov
jb
jecxz
pusha
sub
cltd
rcr
clc
mov
insl
and
push
adc
xor
int3
add
push
jmp
arpl
or
dec
in
pop
cmpsb
push
pop
mov
sub
mov
cwtl
mov
pop
cs
jo
ja
sub
mov
bound
or
mov
and
and
jns
out
inc
push
lock
dec
cwtl
hlt
popa
dec
xchg
adc
jg
les
out
push
cs
jae
ja
push
icebp
xlat
sbb
rorl
nop
incb
call
xchg
mov
mov
cmpsl
insl
into
shll
mov
sbb
mov
adc
loop
adcb
bound
sbb
mov
or
outsl
push
test
mov
cmp
lds
out
test
out
add
ret
xchg
fisttpll
inc
inc
xor
mov
inc
cmc
push
dec
push
pop
and
jae
bnd
imul
or
decl
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
jmp
les
jp
pop
test
mov
out
adc
movlps
adc
or
xchg
jle
leave
test
mov
test
daa
ja
in
in
mov
adc
dec
mov
mov
inc
popa
cmp
cmp
and
jl
fldt
stos
jge
add
add
cmovbe
dec
push
daa
adc
sub
mov
aas
jmp
push
stos
dec
inc
adc
xchg
pop
cltd
xchg
adcl
aaa
mov
aam
repz
jb
add
mov
fnstenv
bound
stos
leave
data16
ret
xchg
outsb
dec
jmp
mov
jge
pop
xorl
mov
loope
sahf
ds
icebp
andb
mov
icebp
cmp
and
adc
sub
xorb
lods
fs
lock
xor
aam
stc
lret
adc
cmp
out
dec
mov
cld
jmp
inc
ljmp
mov
jge
imul
lock
mov
repnz
xlat
repz
jne
inc
and
mov
shr
xor
pop
imul
xchg
outsb
xchg
jmp
cli
call
rclb
mov
lods
negb
repnz
cmp
xor
mov
and
sti
addr16
shlb
add
mov
cltd
sub
mov
adc
repnz
mov
out
and
mov
xor
mov
aas
movsb
scas
shr
cmpsl
sti
leave
dec
adc
cmp
fstpl
or
hlt
test
push
jp
inc
adc
shlb
pop
psubb
pop
cld
testl
inc
adc
fwait
dec
xor
jge
xchg
jge
outsb
fs
ficomps
mov
hlt
jecxz
lcall
mov
jae
adc
outsl
out
inc
mov
outsl
roll
adc
add
out
cltd
ljmp
push
lds
scas
sahf
pop
lahf
flds
mov
mov
xor
xor
mov
call
jmp
cmpsb
test
fistpll
and
mov
loop
adc
movlps
shrb
das
sbb
mov
push
mov
xor
sub
add
mov
lods
and
inc
add
ss
sbb
out
pop
ss
scas
mov
pusha
add
filds
and
dec
pop
loop
cld
push
sub
adc
push
mov
jmp
sbb
pop
lret
dec
adc
mov
outsb
imul
movsb
cli
lods
daa
cltd
lods
movsb
test
or
iret
mov
jle
xchg
xor
dec
popa
sub
lret
mov
hlt
fcomip
xchg
jbe
mov
rcrl
lret
dec
dec
cli
jns
jns
mov
cmp
or
data16
cmp
mov
add
adc
lock
enter
mov
adc
jns
fcoms
dec
fistl
or
push
repz
inc
cmp
adcl
xchg
data16
pop
lock
jg
inc
cwtl
sahf
add
push
scas
stc
push
arpl
les
push
dec
std
rcrb
lret
sub
mov
out
push
mov
mov
movsl
or
fsts
test
xor
cmp
pop
jge
xchg
inc
std
push
lods
cmpsl
outsb
push
mov
or
cmpsb
jge
lahf
xor
dec
imul
dec
jnp
lods
pop
setbe
popf
jl
cmp
inc
push
add
pushf
dec
xchg
cmpsl
push
dec
je
and
sub
out
xchg
jno
cmp
push
jp
and
mov
fwait
fwait
pop
dec
push
rorl
inc
push
add
mov
pop
inc
and
push
in
fwait
data16
inc
mov
and
cmp
sub
jno
in
int3
loop
dec
jp
jbe
fistl
xlat
jmp
dec
mov
xchg
aad
insl
mov
push
jo
aam
ja
mov
add
push
mov
sub
cmp
jmp
cli
inc
ja
out
add
inc
int3
in
pop
aaa
lods
and
sbb
addl
loopne
out
push
nopl
aam
lock
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
push
insl
mov
pop
mov
sti
jle
ljmp
int3
movlps
pop
xchg
pop
sbb
sahf
cmp
js
or
pop
pop
add
rcll
and
jae
in
cmpsl
scas
jmp
dec
cmc
xor
addr16
and
jae
mov
pop
int3
stos
inc
cmp
mov
cmc
mov
fcomp
adcl
push
jno
adcb
dec
out
lea
stc
insl
push
imul
pop
pop
jo
and
xor
test
stos
xor
jnp
inc
fisubrs
movaps
mov
lock
xchg
dec
mov
xor
cmp
and
shl
daa
add
mov
cld
xor
pop
sbb
fsubrl
xchg
movsl
sti
cmp
jmp
xchg
fcompl
mov
dec
jmp
inc
loop
sbb
mov
int
sbb
cmc
lock
push
xorl
ds
push
imul
ja
nop
dec
and
mov
adc
testl
pop
lods
pusha
ljmp
cltd
out
sbb
bnd
out
mov
sbb
xchg
inc
push
push
fiadds
bound
sbb
fcomps
cmpxchg
xchg
xchg
jle
loope
ret
pusha
mov
push
add
int3
mov
ret
mov
cmpsb
das
rolb
cmp
sbb
sub
fbld
outsb
fs
xor
nop
and
and
ss
inc
sbbl
movl
es
sarb
cmp
and
and
gs
into
or
xchg
andb
sbb
ss
jmp
inc
and
cld
pop
or
in
and
push
imul
sti
push
sub
cmc
mov
pop
in
cs
fcmovne
sub
jno
push
add
test
lods
sub
ljmp
loope
scas
xor
pop
push
and
inc
scas
pandn
cli
xor
push
sub
add
cld
enter
jg
push
sti
and
std
sub
cmp
cmpsb
push
dec
mov
mov
or
lds
cmp
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
jmp
adcl
inc
cmp
jmp
adc
adc
aas
scas
mov
sbb
cmpsl
clc
fldcw
mov
repz
fldenv
popf
adc
sub
pop
cmp
inc
jnp
lea
mov
mov
xor
addr16
repnz
in
or
jb
mov
mov
mov
push
cmc
sbb
inc
cltd
out
mov
xor
add
sub
in
xor
pop
nop
movb
ret
rol
mov
andb
out
rcrl
and
int
xor
lret
jbe
dec
mov
xchg
cmp
jle
and
sbb
push
mov
mov
arpl
inc
xchg
cli
lods
cmpsb
rorl
scas
push
insb
stc
inc
dec
xor
xchg
cwtl
xchg
idiv
sub
les
mov
mov
pop
or
fnsave
pop
fmulp
cmc
rcrl
or
lahf
lods
xchg
adc
sbb
sub
popa
shll
cmp
test
notb
cli
je
push
cmp
adc
mov
sub
pop
sub
push
xor
sbb
mov
jb,pt
shlb
clc
aad
and
mov
int
std
enter
cmp
dec
cmp
test
or
push
fidivrl
shll
mov
mov
mov
into
jl
and
test
sbb
pushl
mov
jno
inc
xor
xor
push
fsubrs
dec
lods
arpl
and
jle
xor
lret
mov
sbb
add
mov
mov
dec
jnp
xor
pusha
test
dec
pop
test
lret
push
rclb
add
cmp
in
popa
mov
cmp
imul
test
ljmp
es
dec
jbe
or
xor
jno
out
stc
jno
jne
std
inc
stos
cmp
decl
xchg
sub
mov
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
jmp
stos
in
inc
cwtl
inc
sbb
fidivs
push
inc
stos
jge
adc
adc
test
outsl
sbb
lock
ljmp
sahf
jns
and
mov
mov
ret
pusha
mov
sbb
iret
jns
inc
push
xchg
and
out
mov
dec
cmc
icebp
pop
imul
pop
mov
or
add
ljmp
jbe
imulb
or
mov
cmp
pushl
xor
xchg
clc
addr16
jno
sbb
int3
cmp
add
jecxz
add
mov
sbb
loop
mov
dec
jp
imull
or
iret
cmc
repz
lret
dec
mov
jp
push
sub
lret
out
sti
cmp
mov
bndldx
dec
xor
cltd
xchg
cmp
inc
lock
cli
sub
pop
int
in
dec
sbb
enter
js
pop
cmp
in
push
negb
xchg
xchg
es
pop
push
sub
mov
fdivs
xchg
cli
shlb
loope
jno
jmp
pop
mov
push
test
sub
int3
inc
pusha
sub
mov
sbb
push
pop
shll
popa
push
incl
pop
inc
push
jno
test
movsl
mov
inc
push
or
xchg
out
fs
or
xor
loop
pushf
imul
xor
mov
xchg
cmp
cwtl
xchg
dec
lock
loopne
inc
movsb
mov
lock
icebp
inc
addr16
dec
lea
bound
and
pop
addr16
push
xchg
dec
lds
cld
aad
push
cmp
jge
dec
call
out
js
ret
movsb
mov
movsb
int
fldenv
xor
in
shrl
icebp
inc
insl
std
xor
xor
xchg
and
popa
mov
adc
pop
push
or
inc
data16
fcoms
jmp
cmp
pop
dec
sub
out
test
icebp
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
jmp
enter
cmp
jp
aas
inc
stos
in
imul
rclb
adc
movsl
loopne
pushf
adc
sti
and
dec
pop
daa
stos
popf
push
push
pop
int
outsb
mov
inc
mov
lahf
or
std
jecxz
cmpsb
fwait
xor
adc
jnp
add
mov
pop
jb
imul
jnp
ljmp
lock
out
jecxz
or
adc
add
cmp
idivb
in
cmpsb
sub
jl
test
sub
lcall
jp
sti
test
mov
or
xchg
ret
test
filds
movb
inc
leave
clc
in
sti
pop
or
cwtl
pop
jmp
stc
or
cmc
sub
testl
scas
fistl
mov
jmp
cld
xchg
inc
adc
hlt
cli
jne
sahf
push
nop
xor
push
shll
jbe
push
arpl
idivb
jl
adcl
in
aam
test
mov
incl
add
mov
aad
testb
loop
dec
scas
add
push
mov
pop
lret
dec
cmpsb
test
fidivs
cwtl
pop
dec
std
test
lds
inc
int
out
push
movsl
fnstsw
mov
inc
xchg
dec
jbe
out
jno
cwtl
cmpsb
dec
lds
insl
jne
scas
jmp
pop
push
addr16
ljmp
mov
fisttpll
and
lea
pop
jae
lcall
dec
adc
loopne
adcl
arpl
in
lods
adcl
repz
jp
test
jg
inc
rdtsc
xchg
clc
fidivrl
cmpsb
jl
or
mov
movsl
adc
rol
jl
cmpb
cmp
lds
js
test
xchg
or
sub
inc
pcmpeqb
add
daa
xor
in
pop
jae
cmpsl
pushf
lahf
inc
loope
xor
mov
hlt
and
into
mov
push
inc
mov
rcrb
mov
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
jmp
xchg
sbb
les
ficoms
lods
in
enter
movlps
dec
sub
xor
insl
out
test
inc
rcr
aad
lahf
icebp
negl
add
xchg
mov
mov
stos
lret
mov
outsl
test
lds
shll
xchg
daa
lods
jne
sbb
sti
sub
fldcw
gs
movsl
jmp
fldenv
js
xor
sahf
mov
cmp
inc
cld
push
jno
icebp
cmpsb
add
adc
xchg
mov
jns
sub
out
add
and
dec
lret
pop
adc
inc
aad
pop
mov
cmc
repnz
push
int3
mov
sub
mov
jbe
fwait
xor
xorb
pop
xchg
es
xor
sahf
subb
in
or
mov
mov
mov
dec
or
iret
push
jg
lcall
pusha
jno
and
ret
mov
add
sbb
outsl
scas
inc
fwait
lret
cmp
mov
xor
sub
ja
mov
xchg
cmp
mov
xchg
mov
lahf
pop
ljmp
xor
or
cmp
jns
lock
imul
jae
daa
insb
jb
xchg
push
sbb
icebp
test
mov
cli
andb
jecxz
push
in
call
push
xlat
movsl
in
nop
add
jae
in
xchg
pop
movsb
rcrb
outsl
sbb
mov
jno
repnz
pop
sahf
push
cmp
and
mov
dec
aad
add
fcmovne
pop
mov
push
mov
pop
das
iretw
test
pop
xor
and
outsb
push
loopne
pop
cmpl
cmp
pop
adc
call
stc
adc
mov
ficompl
xchg
inc
or
or
and
fadd
push
or
add
out
pushf
popa
pop
out
arpl
sub
add
sub
jne
mov
add
sbbl
dec
adc
lret
test
jg
lods
test
jecxz
push
push
ljmp
pop
inc
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
jmp
xor
inc
popa
inc
and
xchg
xchg
int3
movlps
fistps
jno
mov
loope
push
mov
push
pop
cmp
cmpsl
cmc
xchg
daa
int3
add
hlt
ljmp
out
jb
lods
and
imull
mov
sub
xor
ss
insb
dec
mov
rol
sbb
loopne
loopne
mov
sarl
xor
sbb
loopne
sbb
ljmp
int3
popa
dec
sub
xlat
insb
shl
jmp
das
popa
je
pushf
mov
add
jge
jns
cld
daa
int3
sbb
in
aam
inc
xor
out
and
cmpsl
push
in
mov
jecxz
push
mov
push
sub
sub
mov
xchg
fs
mov
std
push
stos
test
popa
xor
add
lahf
rorb
fwait
xchg
std
fnsave
loope
and
stc
jo
xchg
flds
fwait
sbb
jmp
in
push
jbe
and
pop
push
je
jp
cmp
lcall
jns
ljmp
push
adcl
shrb
xchg
add
sub
or
mov
mov
mulb
fisubrs
lret
cmpsl
sbb
cmp
ss
movsb
mov
or
mov
and
push
fsub
jns
jne
jecxz
xor
mul
clc
gs
jo
jge
jg
sub
repnz
jmp
cmp
icebp
mov
test
pop
out
pop
xchg
and
mov
xchg
in
xor
out
hlt
sbb
out
inc
aas
insb
pop
sub
mov
push
mov
push
stos
push
sub
mov
repz
dec
fistps
mov
pop
push
sahf
lret
xchg
lea
lret
lock
stc
and
or
inc
dec
mov
and
cltd
enter
sbb
repnz
xor
inc
xchg
shr
dec
xchg
jno
dec
lret
pop
xorl
lds
adc
in
sbb
mov
lods
and
cld
incl
add
jmp
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
sub
mov
and
inc
and
rclb
popa
test
pop
xorb
divb
sbb
in
mov
int
adc
in
aad
jmp
pop
cmp
cld
add
adcb
add
in
mov
sbb
xor
pop
hlt
push
mov
mov
xchg
movsl
jno
clc
xor
push
push
gs
inc
and
pop
test
mov
in
bndstx
rcrl
lods
scas
sahf
or
xor
imulb
aad
pop
in
and
jge
lahf
loop
inc
andb
xor
mov
or
hlt
fisubrs
push
movsb
cltd
ret
fsub
push
arpl
pushf
movsb
xchg
bound
outsb
lret
push
mov
sbb
sub
daa
mov
nop
pop
cmp
or
mov
ficomps
imull
fidivs
rcl
cmc
aad
pop
test
mov
jbe
cmp
js
nop
push
adc
test
les
lahf
push
jnp
mov
mov
adc
scas
push
js
sbb
or
outsb
idivb
sbb
mov
or
cmp
imul
push
mov
addr16
xchg
xchg
sbb
inc
cmp
inc
push
mov
out
in
pusha
sub
ljmp
fwait
pop
pop
leave
dec
and
nop
movsb
jb
or
mov
in
fmuls
fistl
movsl
and
dec
or
sbb
aam
mov
lods
das
in
je
jne,pt
or
loopne
mov
mov
xchg
mov
jge
subb
pop
fs
lods
pop
fimuls
cmc
xor
in
cwtl
mov
fs
add
xchg
ljmp
in
pop
scas
aaa
push
push
lahf
dec
fcoml
test
stos
push
xchg
sub
out
jle
call
lret
mov
jb
xchg
pop
mov
cmp
je
pushf
aam
mov
or
int3
sub
dec
or
mov
pushf
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
jmp
out
imul
mov
jle
mov
adc
mov
jae
es
xor
subb
fcoms
in
mov
mov
dec
pop
leave
pop
icebp
jp
inc
pop
arpl
fs
sti
mov
inc
fnstcw
sbb
pop
pushf
daa
sbb
inc
xchg
fcmove
jmp
adc
and
pop
dec
int3
int3
leave
push
leave
jl
aaa
adc
shll
push
pop
mov
xor
data16
xchg
mov
sbb
out
lock
pusha
dec
xor
push
pop
xchg
push
mov
mov
jge
adc
xor
incb
pop
daa
and
inc
mov
and
adc
pushf
dec
andb
add
aas
jl
out
sub
faddl
push
jge
jg
scas
xor
xchg
repnz
dec
cli
or
pop
fwait
xchg
bnd
dec
add
xor
scas
cwtl
adc
fcomip
cli
gs
lcall
mov
fisttpl
scas
sub
push
hlt
daa
pop
in
imul
inc
sarb
movl
icebp
mull
daa
inc
cmpsb
adc
sub
xchg
fs
jae
and
or
hlt
xchg
push
loop
enter
mov
jp
xor
push
test
out
xchg
sub
sbb
movsb
mov
cmpsb
xor
adc
das
or
adc
pushl
cwtl
iret
push
scas
sbb
js
sbb
cld
pop
adc
mov
shll
mov
clc
out
int
and
insb
andb
adc
adc
and
dec
out
xchg
cmp
cli
clc
mov
pop
dec
xchg
sbbl
nop
test
das
cltd
or
jbe
push
xchg
mov
sbb
lahf
addr16
int
test
xor
cli
lds
les
cmp
cmp
jns
int3
mov
out
sub
dec
jmp
jl
sbb
addr16
test
cmp
pop
lods
idiv
dec
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
jmp
cltd
outsl
sbb
and
cli
idivl
mov
adc
rcl
jnp
out
scas
dec
stc
lds
out
es
cld
mov
push
clc
int3
jbe
dec
test
dec
into
jp
out
mov
ret
fsubrs
add
jg
negl
fwait
cwtl
test
pop
inc
pushl
aad
rorb
sub
jno
out
stc
add
xchg
mov
lret
inc
dec
fsubs
push
js
outsb
pop
push
cld
lea
mov
dec
outsl
testl
aas
dec
and
sbb
pop
jns
lahf
adc
inc
mov
hlt
pop
das
sub
into
or
test
lahf
add
xchg
xor
sub
jp
popf
mov
and
idivl
aam
pushf
or
mov
xor
jecxz
rolb
mov
or
adc
sbb
mov
decl
fsub
imul
sahf
scas
sub
iret
inc
pop
sub
rcll
inc
scas
ljmp
mov
pop
jnp
das
cwtl
fsubl
shll
pop
add
bswap
test
repz
aas
xor
dec
sub
mov
and
das
sahf
sti
or
or
mov
adc
or
in
popa
mov
rorl
cli
jne
scas
imul
xlat
add
fldcw
in
inc
pusha
lods
shll
push
clc
xchg
and
leave
inc
pop
popa
push
mov
shlb
and
xchg
add
cmp
pushf
popf
repnz
cwtl
das
add
push
sar
mov
mov
das
ja
jge
imul
xor
lds
movsb
jp
jns
pushl
stos
daa
inc
adc
pop
into
and
add
dec
pop
cmpsb
insb
out
mov
aas
in
ss
js
mov
and
xchg
xchg
cmpsl
movsb
sbb
test
test
pop
repnz
testb
cmpl
mov
std
decl
mov
mov
add
mov
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
jmp
jg
loope
mov
mov
mov
test
adc
aam
xor
cmp
sbb
pop
test
popa
add
mov
sub
mov
mov
xlat
pop
push
add
cltd
stos
sbb
jb
ret
test
mov
push
sub
sbbl
mov
in
daa
xchg
lods
inc
es
jne
sub
pop
jns
push
jp
jo
mov
jns
mov
mul
mov
xor
pop
arpl
sub
cltd
outsb
jne
insb
mov
add
fwait
mov
mov
mov
cmc
jbe
cmc
mov
cmp
push
inc
sub
scas
lds
shl
sub
add
jae
movq
jnp
mov
scas
mov
mov
pop
arpl
or
cmpsb
data16
aad
and
push
push
leave
inc
or
nop
push
lods
jg
in
pop
jbe
push
xor
gs
inc
pop
out
shll
int3
addr16
dec
stos
jbe
jp
fs
xorb
cmp
dec
repnz
inc
gs
leave
je
cmp
ret
test
mov
leave
arpl
aaa
or
test
pusha
int3
in
sub
dec
dec
inc
imul
decb
shld
scas
xchg
clc
popa
sbbb
outsl
adc
mov
xor
ds
lret
xor
sti
add
mov
mov
sub
sub
mov
fnstsw
cwtl
aaa
enter
pop
loope
or
mov
test
sub
mov
outsl
call
in
add
lret
out
fcmovu
jecxz
push
dec
insl
aad
stc
xchg
ds
orl
push
dec
sahf
dec
jnp
mov
ret
mov
sub
mov
loop
add
sub
adc
sbb
inc
or
mov
jno
les
dec
insb
outsl
jmp
outsb
jge
iret
mov
sub
orb
fdivs
and
add
out
or
ds
or
or
mov
mov
mov
jmp
cltd
jns
dec
and
cltd
pop
sub
sbb
int3
movlps
inc
xor
call
into
out
jnp
lret
mov
jb
outsl
pop
dec
mov
pop
dec
cpuid
pushw
jl
les
loop
daa
mov
dec
fidivrl
lret
jno
xchg
js
push
add
jmp
in
lret
test
xor
sahf
js
inc
stos
mov
enter
scas
xor
dec
and
insb
push
jl
lea
das
add
sbb
mov
cs
inc
dec
xorl
fadds
pushf
testb
dec
push
add
inc
addr16
pop
leave
xor
lret
hlt
and
outsl
ficoml
push
pop
fldcw
nop
xchg
and
hlt
sbb
sbb
ret
ds
test
pusha
sub
dec
int3
jl
enter
inc
jp
cli
push
testl
lret
repz
xchg
negl
sbb
outsl
inc
ret
inc
adc
test
loope
and
cli
inc
leave
xor
lahf
mov
pop
out
imul
test
dec
scas
xlat
mov
shll
ljmp
fwait
mov
dec
out
and
lret
arpl
sub
xor
mov
pop
xor
push
ret
ljmp
ret
rclb
push
jle
notl
jbe
lahf
add
je
adc
scas
movb
xor
fsts
enter
test
inc
test
gs
xor
scas
push
and
lods
push
outsl
movsl
repnz
dec
in
mov
loop
popa
iret
pop
iret
pop
das
aas
dec
decl
add
lret
adc
adc
xor
lahf
sbb
cli
sbbb
cmp
jp
mov
fwait
or
mov
mov
fwait
daa
sub
inc
pop
mov
pop
or
lock
xor
mov
arpl
lea
add
or
test
mov
pop
in
xchg
xchg
ljmp
cwtl
dec
dec
jmp
adc
cmp
fidivrl
in
cmc
adc
lret
fmuls
call
mov
mov
mov
mov
jmp
sub
sbb
sbb
cs
icebp
mov
js
cmc
scas
adc
adc
fistpll
insb
add
fwait
nop
in
into
or
inc
sub
or
xorb
xchg
add
clc
xchg
jne
xor
mov
fmuls
push
xor
inc
sub
cltd
mov
mov
sub
and
stos
push
lahf
and
mov
inc
addl
cs
bound
dec
out
mov
imul
fwait
and
xor
jns
xor
mov
leave
adc
jg
ret
mov
rcll
fldl
sbb
push
xor
inc
add
mov
iret
cmp
pop
adc
cmpsl
xchg
int3
mov
mov
or
pop
mov
pop
popf
repz
jns
pop
pop
leave
mov
cmp
andps
mov
cmp
fs
sbb
xor
rorb
loopne
push
imul
push
adc
mov
scas
adcb
mov
mov
mov
mov
sub
fidivl
das
ret
andb
cmp
dec
push
scas
filds
inc
ret
dec
jno
adc
icebp
mov
das
in
nop
or
mov
mov
frstor
in
add
ljmp
push
iret
and
les
sub
pop
test
mov
gs
push
rcll
add
jne
xchg
jg
jl
into
inc
add
xor
xorl
cmp
sbb
sub
cs
mulb
xor
notb
dec
push
cmpb
jb
pop
pop
adcb
pop
pop
movsl
adc
add
dec
pop
mov
adc
call
xchg
and
mov
lods
aam
push
test
push
xor
pusha
addr16
mov
in
sti
leave
sbb
adc
out
jbe
cmc
push
mov
jge
in
mov
in
aaa
call
sbb
mov
call
je
imul
or
add
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
jmp
insl
ja
add
popf
sub
xlat
mov
mov
int3
movlps
scas
cmp
out
je
fcoms
pop
xchg
or
push
push
pop
push
movsl
mov
mov
mov
sbb
cltd
add
js
inc
andl
pusha
stc
ja
lds
jbe
dec
mov
fcmovb
jl
mov
ret
cmp
andl
repnz
shrb
call
insb
sub
cmpsb
clc
xlat
jle
inc
jne
movsl
insl
sbb
outsb
sbb
arpl
mov
jne
jb
and
imul
push
test
pop
lahf
das
sbbl
mov
push
pop
nop
mov
stos
mov
scas
movsl
leave
xchg
adc
ja
mov
arpl
mov
or
pop
ds
std
inc
scas
aad
jmp
hlt
xchg
fldt
or
mov
nop
int
mov
je
sti
lea
xchg
pop
leave
and
inc
xchg
push
push
nop
and
add
dec
mov
out
test
lcall
cs
jae
cmp
sbb
dec
or
dec
mov
mov
jno
dec
and
pop
fstpt
push
push
lret
mov
test
aas
inc
inc
sahf
jl
and
pusha
bound
shll
adc
in
cwtl
lods
mov
daa
ret
sbb
jnp
inc
mov
ljmp
push
pop
rcrb
adc
orb
mov
xchg
cmp
je
aam
fdivrs
das
stos
rclb
mov
dec
push
push
push
aam
and
mov
popa
xchg
dec
scas
xchg
jnp
xchg
pop
sub
ret
imul
aas
dec
js
mov
cli
push
mov
f2xm1
sub
lock
or
shll
data16
and
xchg
sbb
ja
xor
mov
or
lods
mov
jecxz
js
or
outsb
push
pop
subl
dec
cltd
xor
test
inc
pop
push
adc
lods
push
pop
xchg
pop
xor
mov
call
or
or
xor
xor
mov
mov
jmp
addr16
pusha
out
sbb
xor
into
lods
data16
adc
adc
fists
call
lds
push
mov
insb
dec
daa
add
mov
mov
xchg
push
mov
sbb
lea
or
push
fcomp
mov
clc
and
cmp
lret
imul
pop
loop
xchg
jmp
sub
mov
mov
idivl
in
lock
mov
mov
icebp
into
pop
sbb
mov
lods
shrl
push
cli
cwtl
xor
mov
pusha
sub
cli
clc
hlt
push
cmpsb
int3
cmp
adc
jne
sti
add
es
add
jl
jo
cmp
fistps
aaa
and
pop
aas
dec
and
fdivrs
popa
fwait
iret
pushf
pop
sbb
pop
call
mov
push
sbb
enter
clc
push
dec
pusha
mov
inc
enter
push
push
mov
inc
sbb
std
jmp
and
shlb
pop
daa
pop
push
pop
push
test
daa
aaa
jge
cwtl
imul
rcrb
and
aas
xchg
imul
push
popf
jmp
fisubrl
faddl
jbe
cmpsl
sub
jmp
sub
push
add
test
jle
fs
inc
loop
adc
ljmp
inc
fldt
pop
sbb
hlt
mov
bound
jp
fbstp
sbb
or
cltd
xchg
cs
icebp
frstor
jb
xor
cmc
insl
adc
adc
mov
push
incl
aam
push
lds
test
and
xchg
imul
mov
mov
adc
test
sub
mov
fdivrs
mull
imul
xor
pop
mov
mov
inc
out
in
insb
fsts
ljmp
jne
js
jb,pt
cmp
inc
pop
lahf
mov
sbb
inc
fstl
add
push
rorb
stos
leave
and
js
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
ds
jnp
pop
and
popf
cmc
inc
in
rorb
adc
adc
adc
loope
imul
xchg
ret
add
jge
icebp
lcall
inc
pushf
mov
mov
sub
into
xor
in
mov
idivl
xchg
hlt
cmp
rol
xor
sbb
sub
scas
arpl
int3
jo
mov
orl
lods
gs
sbb
push
gs
mov
sub
sbb
jo
or
dec
mov
pop
xchg
ret
jmp
ror
cmp
test
inc
inc
lock
pop
jae
xchg
mov
cmp
pop
cmp
out
mov
jmp
xor
loope
dec
or
filds
les
cld
sarb
pop
pop
test
sub
bound
mov
and
pushf
xchg
mov
jns
js
jp
in
lahf
add
callw
mov
loopne
ret
cwtl
lret
dec
mov
aaa
dec
ss
push
inc
aam
pop
out
sbb
mov
pusha
cmp
or
mov
mov
fwait
clc
rep
add
loop
jecxz
mov
insb
lods
andb
ljmp
fistpll
push
cmp
test
add
jae
pop
jb
pop
mov
cli
movsb
push
in
in
and
cs
cmp
iret
dec
filds
add
push
in
jg
nop
filds
cmc
or
adc
fildl
movsb
mov
arpl
inc
fs
push
push
jo
pop
push
dec
into
js
cmp
jae
push
push
jae
jmp
adc
call
add
xor
jne
sub
mov
pop
jmp
movsb
aad
insl
or
ud0
push
cmpl
enter
sub
je
ljmp
es
imul
adc
test
ret
int
popa
cmp
into
addb
and
cltd
mov
pop
adc
fisubrs
fmull
mov
xchg
dec
mov
sti
xchg
lods
rcl
sahf
or
inc
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
xor
and
mov
jg
insb
insb
aad
adc
adc
jmp
fcomi
cltd
ljmp
xor
sbb
add
or
pop
std
and
mov
andl
or
rol
lret
add
mov
push
in
sub
push
adc
mov
mov
add
mov
mov
pop
push
mov
lret
cmp
leave
shll
or
dec
xchg
cli
mov
lahf
mov
sahf
aaa
jne
cltd
or
jmp
fnstsw
and
pop
push
inc
sub
arpl
out
int
adc
sub
sub
mov
push
mov
jp
add
fbstp
inc
push
inc
out
mov
mov
sbb
sub
pusha
fldl
mov
cli
loope
cli
mov
cmpsl
pop
cltd
lret
jge
ret
je
push
fdivrs
or
aas
sub
jns
sti
xlat
sbb
outsb
scas
sbb
cltd
push
shll
xchg
adc
dec
out
imul
into
xorb
xor
or
xchg
jecxz
jns
push
push
stos
mov
sub
or
mov
mov
dec
cmpsb
fimull
mov
movsb
and
xchg
or
mov
xchg
loopne
adc
jl
inc
repz
xchg
mov
inc
dec
clc
pushf
in
xor
push
mov
movsb
jl
divb
mov
es
pop
or
pop
mov
dec
xchg
lock
loopne
cmpsb
fwait
das
sbbb
and
loop
movsl
out
pop
rcrl
ljmp
jbe
xchg
and
in
popf
popa
repnz
jno
lahf
daa
les
sub
fsubrl
cmpsb
mov
mov
xchg
pop
std
bound
call
jae
in
pop
daa
sub
push
dec
dec
xor
movsl
xor
ljmp
inc
daa
mov
mov
fcoml
jecxz
loop
bound
mov
push
shll
xchg
add
pushl
xor
mov
jmp
call
push
pop
popa
cwtl
daa
punpckhdq
mov
insb
lea
adc
lret
xor
les
repz
call
jns
pop
aas
mov
dec
xlat
pop
and
sub
ljmp
pop
mov
lret
addr16
or
mov
inc
aaa
sub
outsl
movsb
imul
sarb
mov
jge
add
leave
jno
roll
sti
loop
lcall
push
ljmp
inc
scas
clc
add
clc
cwtl
stos
add
xchg
sub
dec
push
push
xchg
in
adc
std
dec
lret
test
fldenv
fwait
test
ljmp
testb
mov
sahf
sub
imul
dec
pop
mov
xchg
and
push
mov
jnp
in
loop
pop
inc
jae
jl
sub
pop
cmc
lahf
push
sbb
sbb
leave
fdiv
push
imul
repz
inc
nop
jp
add
test
sub
in
pop
inc
fadds
adc
push
dec
add
fidivrl
jge
adc
test
push
xchg
jnp
aam
add
dec
add
mov
sbbl
stos
pop
push
fisttps
or
jmp
add
insb
popa
xchg
sbb
lea
xchg
insl
aad
mov
scas
shll
jbe
pop
arpl
daa
sbb
cmp
pop
mov
sahf
pop
xlat
cmpsl
dec
lcall
xchg
cwtl
jbe
inc
jbe
xor
neg
les
xchg
mov
push
adc
dec
sbb
add
pop
cmpsl
insb
and
aad
scas
push
sub
push
or
jno
jnp
sub
add
aaa
cmp
stos
push
mov
dec
cmp
cmp
sub
in
lret
add
jb
popa
push
int3
gs
scas
mov
inc
add
inc
pop
mov
leave
inc
jg
subb
into
push
test
inc
add
clc
sbb
or
mov
push
and
insl
inc
ja
mov
add
sub
icebp
cmpl
inc
and
shll
mov
movsb
fs
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
jmp
fwait
xchg
out
cmp
aaa
sbb
lods
fists
lods
inc
xchg
adc
adc
aaa
xor
rcr
sub
outsl
movsb
fiaddl
cmp
in
sahf
aaa
std
sbbb
sti
stc
jne
or
mov
or
divb
jmp
or
mov
pop
stos
jl
inc
xor
cmp
jnp,pn
testb
sarb
movsb
rolb
mov
and
push
in
xchg
das
rorl
cmp
lret
pusha
psubsb
mov
ljmp
xchg
call
mov
adc
dec
cmpsl
lods
idivl
aam
sbb
push
sbb
cmp
insb
lret
ja
data16
cmp
fwait
xchg
mov
inc
jno
and
and
pop
sbb
add
mov
sbb
mov
mov
adc
mov
stc
test
inc
pop
adc
xor
pop
xchg
out
mov
sbb
fsubs
pusha
inc
push
xor
sbb
jns
daa
mov
xor
jg
adc
cld
std
push
je
inc
outsl
inc
cwtl
or
cmp
ss
or
stos
xchg
sub
cmp
ljmp
adcl
mov
push
inc
incb
pop
sbb
notl
dec
jns
sub
pop
add
add
add
mov
inc
mov
aam
mov
or
adc
sbbl
inc
mov
daa
and
pop
pop
pop
dec
js
sbb
and
ret
ds
shr
aam
cwtl
aas
push
mov
adc
fsts
loopne
rcr
stos
ljmp
stos
cltd
jg
push
lock
jnp
push
mov
xchg
clc
inc
mov
aaa
sbb
nop
pop
push
imul
push
ror
inc
adc
es
add
shrw
repnz
pop
jno
xchg
jle
and
and
leave
mov
or
into
add
mov
dec
cmp
movsb
add
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
jmp
stos
f2xm1
mov
sahf
cmpsl
fldpi
xor
stos
lret
stos
std
mov
adc
pop
push
sbb
cld
cs
push
mov
adc
push
idivb
cld
cmp
mov
jecxz
and
mov
inc
sub
rcrb
push
bound
movsl
fsubrl
dec
aam
test
cmp
das
js
sti
cmc
jns
add
cmpsb
mov
sub
in
shl
push
push
imul
fcom
sbb
dec
imul
pop
je
xchg
adc
mov
adc
push
in
fisubrs
fstps
negl
cmp
popa
imul
cmpsb
mov
push
cmp
xor
push
and
test
xorb
mov
xchg
ret
sbb
xlat
pop
sarb
mov
nop
testb
stos
dec
shrl
mov
mov
or
mov
cmp
mov
stc
mov
popa
push
mov
xor
lea
jns
in
push
js
jge
sbb
mov
fwait
push
psrld
push
mov
dec
mov
xor
dec
std
cmp
jmp
aaa
adc
notl
adc
mov
in
pop
sbb
cmpsb
add
pop
orl
je
shll
xchg
push
loope
inc
push
cs
pop
mov
fs
and
ljmp
push
pop
jb
sub
aam
jnp
jae
insb
mov
dec
dec
xor
popfw
pop
jmp
or
insb
mov
or
fimuls
mov
adc
cld
pop
push
pop
outsl
imul
jne
ja
jg
inc
mov
shrl
xchg
cli
cmp
xor
sbb
insl
std
dec
orb
sub
movsb
lds
std
jo
cs
das
cmp
loop
movsl
or
cmp
enter
mov
es
add
ljmp
pop
in
add
xor
mov
mov
test
out
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
jmp
push
loope
dec
cmp
push
fsts
xchg
mov
adc
adc
or
mov
cmp
pop
push
dec
xchg
lcall
outsb
call
pop
push
mov
pop
xchg
pop
pop
mov
imul
adc
mov
addb
ljmp
xchg
ds
mov
out
xor
cld
sbb
xchg
jne
sub
js
ret
aaa
sbb
dec
cld
js
push
ds
sub
rorb
mov
int3
int
jbe
add
xchg
pop
push
jecxz
inc
dec
mov
pop
aad
dec
cwtl
imul
jle
jae
push
rcrl
sbb
das
scas
inc
jmp
sbb
hlt
dec
mov
pushf
sarl
cmp
out
and
int3
inc
xchg
lock
mov
pusha
sbb
push
mov
sub
fwait
pushf
insl
or
rcr
movsb
inc
xor
and
lock
mov
mov
pop
sbb
mov
jb
jmp
sub
mov
dec
daa
movsl
lcall
pushfw
fisttpll
mov
and
pushl
push
and
mov
movsb
leave
sbb
jne
jl
fnstcw
mov
icebp
mov
sbb
call
sub
mov
addr16
stos
ja
pop
popa
das
dec
aas
jle
dec
enter
imul
pop
mov
cwtl
lret
inc
inc
mov
testl
dec
idivl
sub
mov
xor
mov
mov
cs
clc
cmp
push
aas
or
adc
push
mov
loop
ret
sub
xor
jns
into
xor
clc
adc
lret
push
push
mov
mov
pop
call
dec
movsb
cli
mov
lds
fld
andl
jns,pn
out
adc
dec
jecxz
rcll
and
rcr
xor
sub
sbbb
sub
decl
pushl
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
jmp
mov
jl
push
push
pushl
pushl
pushl
push
push
push
push
push
pushl
pushl
pushl
pushl
call
adcl
orl
sbbl
xor
and
movl
sbb
push
adcl
push
movzwl
and
mov
adcl
or
movl
jne
or
mov
mov
cmpl
movl
movl
jmp
movl
mov
jle
push
push
push
push
pushl
pushl
push
call
sub
and
inc
notl
or
or
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
jmp
mov
sub
push
call
adc
adc
lea
xchg
idivb
xchg
clc
cmp
outsb
inc
xchg
outsl
cwtl
fidivl
mov
pop
or
sub
lock
mov
push
lahf
aas
sahf
add
js
test
sbb
push
lcall
scas
arpl
sub
ret
sub
inc
mov
addb
mov
lds
pop
pop
mov
inc
pushaw
sbb
xchg
mov
imulb
or
pop
mov
add
loopne
and
jae
mov
push
xor
sbb
mov
jmp
inc
mov
push
sbb
pop
or
rcr
add
cmpsb
sbb
push
ljmp
cmp
cwtl
out
aam
aas
xchg
or
mov
sahf
mov
jg
jecxz
push
fldenv
adc
push
xchg
lret
mov
mov
sub
jns
jb
jg
jns
push
jb
inc
pop
adc
dec
push
inc
push
dec
push
push
xchg
iret
gs
jp
mov
loop
cmp
int3
popf
push
sub
or
mov
sbb
and
add
jns
push
jo
popf
mov
mov
ss
pop
push
jne
push
jbe
pop
std
scas
add
inc
mov
test
mov
mov
add
popa
int3
mov
push
popf
mov
adc
aad
add
mov
or
lock
mulb
push
jle
loop
jae
cmp
mov
add
push
ljmp
jl
std
fisttpl
cmpsl
clc
pop
vmread
into
add
sub
pop
mov
loope
jne
sub
aas
sar
daa
jne
outsb
xor
ficoms
imul
lods
jecxz
and
xor
ja
dec
push
push
pop
stc
xchg
test
aad
gs
sbb
test
push
mov
lock
jle
pop
mov
xor
xchg
scas
fdivrl
daa
push
add
jmp
mov
sti
add
aas
jmp
sbbb
test
outsb
push
fucomi
sbb
and
push
push
or
movsb
mov
push
sbb
in
lahf
xor
add
mov
lods
push
aaa
movsl
mov
rcrb
into
in
jle
jge
mov
loopne
lahf
jg
mov
outsb
pop
imul
xlat
movsb
mov
in
lods
cmp
ja
daa
fldl
in
pop
cli
leave
insb
je
addr16
inc
dec
rolb
mov
jb
in
cmp
mov
lahf
mov
lret
daa
push
sbb
pop
sar
dec
sbb
mov
fstl
sbb
lea
mov
dec
scas
fldt
imulb
int3
repnz
xchg
jo
mov
roll
imulb
inc
mov
and
pop
cmp
sti
xlat
cmp
icebp
push
fstp
bnd
mov
jae
adc
test
imul
or
fs
add
aaa
cmp
mov
cmp
fwait
xchg
icebp
je
ret
pop
mov
fldenv
ljmp
mov
dec
test
mov
jmp
dec
inc
popf
loopne
adcb
pop
shr
jmp
les
jno
sbb
and
lret
push
popf
test
adcb
push
adc
adc
mov
xchg
add
and
ret
dec
xor
movsb
fdiv
imul
or
pop
sub
fwait
mov
fwait
sub
or
pop
adc
lock
leave
jns
inc
and
mov
mov
xor
xor
dec
jl
mulb
mov
loop
in
leave
mov
sbb
data16
loope
lcall
stc
push
sar
push
jl
adc
and
adc
in
inc
repnz
inc
jge
rorl
push
out
mov
mov
in
icebp
cmpsl
push
mulb
in
popa
and
fimull
mov
lods
push
jp
jns
adc
adc
mov
inc
xor
or
inc
lret
movsl
mov
mov
lods
cmp
sahf
cmp
fwait
outsb
sbb
inc
in
mov
xchg
xchg
aad
pop
mov
mov
stos
lret
es
jp
imul
sbb
push
dec
xchg
in
cwtl
inc
stc
cs
inc
stos
mov
cmp
pop
sarl
ror
outsb
cmp
pop
mov
mov
mov
icebp
sub
add
ss
fsub
sbb
leave
dec
pop
push
pop
dec
xchg
xchg
scas
idiv
push
push
loop
and
mov
test
jb
xchg
mov
imul
mov
bound
jge
pusha
pop
aad
and
sbb
std
popa
add
sahf
jmp
jb
pop
cltd
mov
push
orb
jns
testb
push
lret
pop
and
pop
sahf
out
add
xchg
lcall
sbb
ss
adc
sbb
fmul
lcall
or
dec
in
push
js
mov
add
hlt
enter
mov
push
cmpsl
sub
jns
mov
push
sub
aam
pusha
repnz
add
xor
call
movntq
out
leave
mov
pop
pop
gs
outsl
pop
popa
ja
xchg
loopne
in
xor
mov
add
add
dec
scas
jp
stc
push
pusha
call
mov
ret
out
jle
mov
jne
iret
movsl
dec
hlt
out
lea
add
push
mov
push
jne
jb
in
pop
dec
shlb
rcrb
imul
mov
pop
shll
mov
nop
sub
lock
pop
xchg
lea
adc
mov
push
jno
push
pop
add
mov
inc
mov
fidivl
mov
into
mov
sbb
xchg
aam
aad
popa
imul
jb
in
cld
inc
push
imul
imulb
scas
scas
call
sar
xor
push
movsb
loop
push
das
push
outsl
js
mov
frstor
dec
in
cmp
ljmp
pusha
jnp
orb
jae
push
dec
fisttpl
imul
lds
loopne
pop
mov
inc
mov
lods
outsl
mov
pop
jmp
lock
pop
adc
rorb
fldcw
xor
push
xchg
jge,pn
sbb
xchg
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
sbb
add
mov
movzbl
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
xor
subl
and
shl
ret
xor
xor
ret
