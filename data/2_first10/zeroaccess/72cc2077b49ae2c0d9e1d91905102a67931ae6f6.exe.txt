push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
cmp
adc
adc
adc
adc
les
fisttpl
lds
lods
add
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
sarl
notl
in
enter
jp
imul
int3
xor
std
dec
and
addb
ret
push
movsb
push
dec
inc
ljmp
mov
or
popa
test
add
les
push
aad
add
inc
adc
stos
mov
mov
push
inc
pop
dec
xchg
test
ret
cmp
lds
dec
mov
fcomi
pop
fwait
pop
xor
out
jae
xor
in
push
pop
in
inc
inc
jecxz
imulb
mov
outsl
mov
xor
lods
in
ja
stos
mov
mov
cmp
icebp
lds
enter
xchg
sub
sti
lea
aaa
jo
sub
pop
mov
jmp
sub
sbb
cmp
std
cmp
inc
xchg
xor
mov
imul
into
or
cs
movsl
pop
rcrb
pop
push
not
mov
lahf
out
cli
gs
loope
bnd
popa
jbe
icebp
ljmp
add
jge
popa
pushf
sbb
mov
push
lock
and
mov
aas
push
outsb
out
sub
fwait
loopne
pop
pop
bound
dec
test
xorl
ds
mov
or
roll
stc
mov
mov
imul
push
rcr
cmp
sbbb
push
sub
jl
inc
fists
ret
pop
sbb
lcall
jge
in
cmp
lret
ja
inc
pop
adc
dec
pop
fcomi
les
scas
mov
daa
push
mov
adc
xor
popa
xlat
sub
mov
popa
dec
add
cmp
enter
push
int
xor
das
outsl
lahf
dec
daa
pop
mov
das
jae
pop
pop
xor
int
push
or
out
xlat
outsb
mov
mov
cltd
cmp
cli
pop
pop
mov
movsb
outsb
stos
pop
adc
cmp
xor
jae
mov
cmovge
inc
inc
mov
movsb
xlat
or
adc
sbb
push
jecxz
repnz
pop
jnp
data16
mov
sub
adc
mov
arpl
or
sub
imul
pop
push
arpl
cmpsb
test
pop
imul
in
adc
jle
mov
or
mov
hlt
jae
cmp
jne
mov
jmp
inc
inc
xchg
sub
cli
xor
sub
ja
test
stos
bound
jbe
rorb
inc
ss
aad
sub
xchg
inc
lods
mov
jl
jo
or
mov
psadbw
mov
xchg
xor
xacquire
jmp
or
in
mov
notl
sub
xor
rolb
lock
sub
xor
lea
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
xchg
and
adc
adc
adc
adc
hlt
ficoms
mov
mov
cmc
fadd
in
stos
inc
mov
lcall
popf
insb
pushf
push
sub
scas
aas
mov
inc
sti
dec
add
lds
jmp
xchg
jmp
sub
repnz
popl
inc
adc
movsb
mov
xor
das
shl
inc
imulb
es
inc
push
jp
push
movl
xchg
jge
adcl
scas
cmc
hlt
mov
push
cld
gs
dec
in
aaa
dec
and
push
outsl
test
cmp
aam
sbb
jl
aaa
fcoms
xor
add
jno
lock
ret
stos
cmp
add
push
xchg
rcl
dec
sub
jns
loop
scas
dec
dec
loopne
arpl
not
xchg
stos
rolb
adc
cltd
xchg
daa
les
rcl
jne
in
dec
stos
add
fistpll
test
dec
imul
ja
xchg
jne
jmp
lock
cmp
test
mov
mov
adc
in
jne
jg
pop
cmpsl
jmp
xor
lea
push
adc
jp
stc
pop
je
cld
inc
inc
std
dec
bound
test
jecxz
movsl
arpl
adc
cmp
cwtl
jmp
ss
push
call
stos
add
sbb
xor
jns
into
leave
fnstsw
sbb
sbb
aas
insb
pop
add
pop
aaa
stos
push
sub
pop
add
jecxz
lods
mov
fildl
adc
dec
xor
std
das
xor
push
pop
and
cs
jns
cmp
mov
ror
xchg
idivl
mov
push
cmp
mov
pop
cmp
mov
cmp
popf
in
adc
add
mov
jle
aam
sahf
cld
push
adc
ljmp
das
mov
pop
pop
adc
push
pop
out
push
dec
xlat
adc
add
dec
in
sub
push
jno
mov
dec
mov
aad
outsb
mov
lods
xor
inc
pop
push
int3
lret
mov
into
test
push
out
mov
push
aaa
std
pop
gs
dec
out
mov
cmc
aas
dec
jl
push
xor
cmc
arpl
and
lods
outsb
xchg
inc
pop
or
sti
jns
add
inc
push
cmp
sub
push
add
jp
inc
add
pop
xchg
sti
mov
mov
outsl
or
jge
popa
clc
in
shrl
add
fs
arpl
mov
mov
out
cld
loope
arpl
cmp
push
stos
and
mov
js
daa
mov
inc
jp
out
sahf
sbb
js
jle
pop
rolb
insb
xchg
jp
xchg
push
pop
roll
mov
or
mov
aaa
aam
inc
adc
negb
push
pop
fld
ret
and
and
lds
adc
lret
jb
lods
outsl
mov
xchg
sbbl
loopne
fdivl
cmp
adcl
loopne
mov
lcall
dec
adc
cli
fs
sub
in
jo
inc
in
cmc
ret
xchg
nop
mov
into
jbe
int
sub
push
sbb
fiaddl
subb
and
sub
push
and
ret
sub
add
jo
mov
mov
lods
dec
rorl
mov
mov
rclb
mov
dec
cmp
mov
inc
mov
imul
mov
cmpl
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
sub
lret
or
adc
adc
adc
inc
xor
into
dec
jo
push
inc
and
imul
pop
jecxz
ret
or
sti
adc
dec
repz
pop
xchg
ljmp
pop
hlt
mov
div
aaa
push
xor
cli
sbb
xchg
incl
xor
aad
sbb
enter
dec
jne
push
lds
out
repnz
fwait
jle
call
les
subl
cmpsb
mov
fwait
mov
imul
stos
sub
mov
jno
mov
popa
adc
dec
test
mov
daa
sti
ficomps
pop
mov
lret
sbb
mov
sub
xor
insb
fisubl
or
push
dec
hlt
lock
pop
clc
call
testb
jns
ljmp
or
in
out
and
ds
cmpsl
divb
xor
dec
out
mov
dec
movsl
jno
add
sbb
push
pop
sub
pop
push
cmpsl
mov
movsl
pop
mov
jl
xor
fcomps
shr
inc
mov
clc
scas
and
mov
ja
bound
mov
or
fldenv
jb
fwait
in
sub
add
lds
jne
iret
lcall
das
lahf
jbe
sbb
je
inc
xor
cmpsb
adc
jecxz
mov
mov
cmpl
jge
cmpsb
mov
sbb
in
fnstcw
pop
jecxz
fistpll
icebp
sub
popa
ficompl
jo
xlat
inc
dec
test
mov
sub
pop
inc
or
mov
das
movsb
inc
faddp
lds
mov
and
inc
pop
xor
and
mov
lds
call
lcall
jae
sbb
outsb
out
push
js
popa
pop
mov
and
insl
sbb
push
mov
push
jo
mov
mov
inc
ds
dec
mov
cmpsb
xorb
repnz
fsubrl
out
and
xlat
test
icebp
sbb
stos
inc
fcmovnbe
adc
test
out
cltd
xor
loope
and
iret
cmp
lret
pop
add
bound
cmp
jge
mov
movsl
push
xor
cmp
sbb
imul
inc
inc
xor
inc
mov
subl
add
enter
shrb
clc
mov
xchg
cs
call
sub
in
xchg
adc
fs
pop
stos
sbb
scas
andb
loopne
sub
imul
sti
mov
xor
popa
push
shr
aaa
xchg
pop
jge
jle
movb
jecxz
subl
inc
lods
out
sti
push
mov
test
xorb
cwtl
cwtl
xor
adc
push
loop
in
adc
dec
dec
jmp
add
fadds
sub
shrb
rcr
div
mov
leave
in
stc
popa
hlt
outsl
sub
inc
jnp
sub
cmp
cwtl
dec
nop
es
and
or
pop
pushf
lret
dec
add
push
jne
mov
xchg
jl
cmp
push
std
dec
dec
push
sbb
sub
jbe
pop
rcll
inc
scas
inc
and
dec
mov
adc
test
cwtl
into
aam
cmpsb
adc
inc
xor
enter
jno
orb
decl
jno
inc
add
add
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
sub
out
fistps
rcll
mov
lods
xor
mov
xor
loopne
xchg
inc
dec
push
frstor
aam
jg
pop
and
gs
cmpb
lea
adc
add
sub
add
dec
lret
in
inc
or
outsl
xchg
popf
fimuls
sar
mov
mov
fistl
int3
sbb
push
pop
stos
dec
cs
xchg
mov
arpl
jo
sub
mov
cmp
mov
movsl
mov
fdivrs
sti
lcall
mov
dec
adc
inc
dec
lret
fiadds
jnp
faddl
jne
sbbb
mov
test
xchg
scas
mov
inc
pop
in
movsb
cmp
jno
adc
jne
outsl
cli
aam
stos
jmp
divl
movaps
imul
into
or
pop
pop
or
mov
xchg
xor
fwait
je
ds
add
fnstenv
pop
mov
fldt
test
xorl
sub
sub
mov
and
shll
or
cmp
push
pusha
fsubrl
out
pusha
add
sub
cli
adc
arpl
jns
and
dec
gs
mov
inc
xlat
cmc
leave
cmpsl
lds
out
sbb
lods
ss
dec
cmpl
nop
and
fisttpl
dec
cmp
inc
push
xorps
push
orl
xor
int3
repz
pop
bnd
mov
xchg
into
sar
pop
ds
mov
test
scas
outsl
loope
sbb
push
cmpsl
adc
es
rol
repz
dec
lret
mov
dec
mov
enter
mov
xchg
loopne
add
dec
mov
cmp
push
in
xchg
insb
int
sti
test
xorl
mov
sub
cmp
pop
sahf
fcoms
into
repnz
mov
sahf
mov
lcall
pushf
popl
add
and
sub
imulb
lret
shl
dec
mov
insl
dec
adc
add
imull
cmpsb
loop
scas
in
into
sbb
pop
mov
xor
movsl
imul
mov
push
xor
jns
outsl
nop
rcrl
and
les
add
arpl
cltd
inc
call
adc
mov
or
add
jg
rcr
mov
out
xchg
push
cmp
push
enter
sbb
lock
inc
push
add
mov
in
rcrb
pop
sub
pusha
sahf
mov
insl
and
cwtl
inc
ss
or
pusha
ficoml
ljmp
jecxz
loope
jne
pop
cwtl
scas
push
sub
cmp
push
outsl
push
dec
jge
push
jge
stc
sbbb
xchg
push
nop
rclb
pop
or
add
fdivrl
lea
push
jne
or
pop
adc
and
loop
mov
mov
cmc
add
xor
mov
or
dec
scas
out
cmp
popf
jbe
and
addr16
cld
fnstsw
shlb
call
stc
jge
daa
in
sub
test
in
add
jbe
mov
jg
addr16
lods
loopne
pop
pop
out
sbb
fcom
repnz
xchg
orb
test
call
sbb
xchg
ret
icebp
adc
dec
pop
mov
movsl
sub
stc
dec
repz
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
int
push
notl
adc
adc
adc
add
xchg
jns
mov
je
arpl
pop
adc
mov
mov
call
pop
fdivrl
movsb
je
jb
jbe
loope
lahf
push
pop
sbb
mov
inc
pop
add
flds
jmp
fwait
or
stos
jo
add
cli
xchg
repz
ficoml
imul
xchg
aas
jno
jecxz
jne
mov
jl
mov
lcall
mov
fadd
in
mov
or
dec
stc
mov
loopne
sub
inc
subb
push
jbe
in
xor
mov
fildl
lds
in
jle
pop
mov
addl
sarl
nopl
imul
mov
mov
in
in
mov
inc
mov
std
cli
aaa
clc
adc
mov
push
lret
and
testl
inc
fisttps
js
ret
mov
in
jb
sub
daa
mull
dec
push
pop
iret
push
call
call
fdivrs
adc
mov
rcr
ljmp
fsts
enter
cmpsl
xlat
repz
push
add
mov
xchg
ret
sahf
sub
lea
adc
popf
mov
push
leave
mov
xchg
inc
jmp
leave
mov
jl
repnz
or
xchg
mov
sbb
mov
leave
jl
mov
sbb
aam
cpuid
out
adc
testb
pop
pop
inc
or
aam
and
push
clc
loopne
aad
nop
mov
lcall
pop
xor
pop
jl
jns
dec
testb
and
aaa
and
push
fstl
loopne
push
pmaddwd
pop
xchg
das
add
scas
addr16
enter
jbe
in
lds
sbb
ja
fimull
lahf
mov
fwait
jne
popa
stos
cmp
out
sbb
bound
test
cmp
sbb
lcall
xor
loopne
cltd
push
cmp
ja
xor
xor
sub
inc
ficoms
and
cmpsb
pop
sub
enter
dec
push
ds
stos
sub
sbb
xchg
add
inc
in
adc
sar
xchg
fxch
pop
adc
fimull
pop
and
cmpsl
pop
in
add
jnp
mov
and
or
mov
lret
test
dec
testb
fwait
jb
xchg
jle
inc
stc
out
and
sub
xor
add
loopne
and
or
sti
mov
pop
pminsw
dec
inc
mov
fcom
jmp
cld
outsl
mov
push
push
subl
arpl
pop
mov
pop
loop
in
xchg
and
adc
cmp
aaa
jmp
or
adc
repz
inc
pop
jmp
cmpb
ljmp
in
mov
cmp
aas
lret
mov
cwtl
inc
ss
cmp
jns
mov
cmp
add
jg
push
or
leave
jmp
mov
adc
add
in
jns
out
rorb
inc
inc
std
mov
cmpsl
push
inc
jno
hlt
nop
mov
xor
pop
mov
push
or
fs
push
ss
dec
xor
shll
fs
repz
xor
pushf
add
push
arpl
fsubrs
in
cmpl
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
stos
mov
lods
cmpsb
out
adc
int
adc
js
cld
xor
xchg
ljmp
fld
jnp
out
xor
jbe
test
fnstcw
jmp
scas
repz
loop
out
mulb
xchg
shlb
ret
jmp
in
sub
scas
mov
ret
orb
out
ror
cmpsl
adc
stos
xchg
shl
stc
arpl
mov
lods
dec
fcoml
sub
pop
mov
xchg
cmpsl
and
cli
pop
fisubs
adcb
mov
sub
pop
test
insb
jnp
out
sub
jnp
sti
cmp
into
iret
xor
adc
shr
adc
mov
and
or
mov
or
gs
icebp
push
jl
push
bound
out
addr16
adc
push
mov
popf
mov
arpl
aas
addr16
mov
cltd
ja
hlt
pop
imul
loope
lret
test
mov
shll
pusha
icebp
add
or
sbb
loope
movsl
jecxz
into
lret
into
das
sub
mov
cmp
dec
arpl
push
or
jp
fwait
cmp
mov
xchg
imul
iret
into
xchg
dec
movsl
mov
inc
shlb
mov
repnz
hlt
inc
jg
mov
popf
lcall
movsl
mov
push
mov
sbb
mov
inc
jle
xor
add
mov
fs
mov
xor
cmpsl
repz
mov
inc
push
std
xor
mov
arpl
rol
shrl
and
in
mov
adc
sub
test
jb
xor
sub
mov
adc
and
push
jecxz
sbb
sub
mov
cmp
pop
adc
lods
push
out
push
fidivrs
js
mov
mov
cltd
mov
movsl
cltd
cmp
popf
and
xor
mov
gs
js
xlat
push
loopne
ja
lods
mov
stc
jo
xor
add
adc
ret
xlat
dec
cmp
add
mov
sti
cltd
cld
or
das
push
pop
hlt
add
loopne
ficoms
lret
int3
push
mov
sub
into
inc
push
les
jae
cmp
pop
mov
mov
inc
pop
add
cmp
mov
jecxz
add
push
dec
insb
xor
xchg
sub
out
or
jb
fisubrl
push
test
mov
push
jne
repz
mov
mov
aaa
xlat
mov
inc
stc
mov
sbb
mov
sub
repz
and
sub
mov
or
adc
enter
dec
jl
xchg
nop
movsb
dec
scas
and
andb
divb
or
add
test
daa
xlat
sub
je
mov
rcll
or
add
pop
fdivrs
scas
pusha
cmpsb
push
add
sub
or
xor
popl
pop
cltd
push
cmpsb
dec
jecxz
ss
les
sbb
dec
out
movsl
outsl
mov
popf
pop
mov
sbb
pop
fsubs
movsb
xchg
std
mov
sub
lods
mov
into
fildll
sbb
pusha
lock
mov
cwtl
push
lods
pop
loop
mov
sub
mov
mov
jae
mov
add
dec
dec
dec
in
sbb
in
jno
sub
mov
sub
push
sbb
jge
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
jp
mov
adc
adc
adc
xor
clc
test
pop
cltd
ret
cmp
testl
inc
movsl
in
push
push
das
notl
and
mov
inc
push
fbld
push
fwait
push
sbb
sbb
jns
ljmp
lods
mov
push
jo
lock
mov
rorb
xor
dec
mov
out
add
mov
clc
lods
lods
jmp
jb
mov
addb
xchg
leave
aaa
or
cmc
sub
dec
add
std
push
push
daa
fs
sahf
es
std
sub
sahf
xchg
cmp
rolb
push
stos
mov
imul
int3
jge
scas
inc
xlat
xchg
mov
inc
pop
cwtl
mov
cmc
js
std
int
push
dec
mov
mov
jae
aam
pop
cli
adc
and
insb
pop
dec
fucomip
cmp
cmp
add
mov
inc
mov
jo
fs
aas
pushw
pop
idivb
call
sbb
mov
push
lcall
jp
and
dec
loope
adc
aam
dec
rclb
insb
xchg
push
xor
inc
enter
test
mov
push
pop
or
incb
aaa
test
mov
pop
add
loope
dec
mov
outsb
xor
jmp
add
gs
mov
outsl
loopne
popw
mov
mov
lods
fcmovb
icebp
sbb
mov
ljmp
push
loopne
pop
cmp
jl
pop
in
push
stc
repz
mov
andnps
fbld
jns
dec
pop
movsl
adcl
out
push
addl
call
jp
das
leave
pop
mov
idivb
lds
gs
xchg
add
mov
pop
push
repnz
rolb
mov
mov
push
and
lock
cmpsl
add
mov
xchg
insl
cwtl
adc
sbb
fcom
inc
add
adc
mov
mov
xor
pop
jmp
jnp
pop
fisttps
mov
aam
xchg
xor
or
int3
mov
jnp
and
sti
adc
fdivl
mov
lods
fnsave
xlat
rolb
jno
subb
insl
pop
sahf
mov
daa
pop
sub
popf
shll
mov
push
sub
aas
pop
pop
clc
push
xchg
loop
aas
jne
test
mov
mov
icebp
sahf
jge
in
and
push
mov
xchg
cmp
in
fistl
div
icebp
dec
push
dec
in
stos
pop
fadds
orl
mov
fdivrs
jmp
loopne
push
mov
mov
test
or
xchg
pop
arpl
mov
xchg
iret
fs
fsts
fcomp
cli
push
lea
mov
in
mov
sbb
or
push
ds
cmp
sbb
scas
outsb
sarb
mov
daa
cmpsb
add
lods
inc
lods
adc
jb
imul
lcall
cmp
push
or
divb
xchg
and
in
mov
xchg
inc
and
pop
stos
in
add
cmp
sub
aad
mov
ret
dec
cli
jnp
xor
push
jo
lret
lcall
dec
mov
jmp
pop
fcmovu
inc
stos
cmpsb
adc
sub
mov
and
daa
aam
rclb
pop
push
mov
inc
bound
stos
aam
xchg
mov
movl
mov
movl
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
inc
dec
and
out
adc
adc
adc
pop
mov
popa
shlb
mov
xor
pop
in
mov
dec
push
lods
push
test
add
xlat
lahf
int3
arpl
xor
jb
rcll
pop
aam
pop
cli
xchg
push
sbb
jns
jge
cltd
jne
insl
fidivrl
jmp
testb
cmp
pop
push
or
sub
push
es
cmp
lret
gs
adc
push
push
add
jge
pop
inc
sub
adc
scas
fdivs
and
ret
data16
or
es
sub
xchg
in
js
repnz
mov
fwait
or
push
mov
xchg
mov
jno
pop
pushf
push
adc
or
sti
xchg
inc
enter
mov
push
push
add
js
movsl
adc
in
mov
jno
lret
mov
inc
lcall
xor
jg
jo
jp
iret
mov
mov
lock
leave
mov
lds
mov
adc
ljmp
in
andnps
adc
add
mov
xlat
mov
inc
cmp
jno
repz
mov
pop
rolb
imull
addr16
clc
adc
adc
movsl
out
mov
or
mov
ffreep
mov
mov
mov
inc
xor
cli
pop
xor
insb
and
jae
sub
iret
pop
das
jecxz
lret
into
pop
add
cmp
out
cmp
fstpt
add
test
sbb
popf
pop
in
cltd
mov
or
push
mov
hlt
fcompl
sbb
ja
iret
out
xor
rorl
scas
mov
cld
inc
ds
cmp
mov
add
jno
dec
repnz
imul
sub
xlat
lret
aad
sub
lea
sbb
jp
dec
imul
dec
icebp
ljmp
sub
mov
jp
fcmove
leave
lods
mov
and
sub
hlt
xchg
push
sahf
mov
or
faddl
inc
xor
icebp
mov
cmovae
sub
test
movsb
add
sbb
lods
loop
sbb
decl
ret
cltd
mov
js
sti
mov
sub
mov
cmpsl
enter
push
fiadds
insl
cld
mov
jmp
ljmp
dec
sbb
mov
sub
mov
jns
dec
addl
andb
and
test
rcll
rorb
sarl
sub
and
cltd
loopne
xchg
or
add
in
dec
pop
cmp
shrb
insl
daa
and
cmc
adc
add
ret
or
cmp
hlt
fcmovnu
movzbl
call
jmp
ljmp
or
out
push
push
es
inc
cmovl
lret
xchg
xor
mov
jge
xchg
out
push
leave
es
jp
rorl
inc
insl
inc
shrl
pop
shlb
mov
pop
ja
js
mov
insb
sub
dec
icebp
rcll
daa
es
mov
es
loopne
lds
dec
inc
jae
add
in
inc
dec
jecxz
ja
sub
xlat
push
jne
and
rcrb
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
gs
js
ficoms
adc
adc
adc
lds
pop
push
repnz
ret
push
dec
mov
xor
cmp
mov
std
pop
pop
add
inc
test
repz
push
push
and
mov
pop
enter
inc
fsubrp
push
jl
js
or
inc
dec
or
unpckhps
sbb
and
adc
sub
pop
cli
out
mov
pop
add
xchg
pop
fadds
jg
push
push
scas
dec
addr16
push
fnop
out
and
mov
pop
out
sbb
xchg
xchg
xor
or
jg
lret
sub
imul
daa
shrb
jno
push
in
ss
mov
cmp
or
daa
outsl
mov
sub
gs
add
addr16
xchg
jg
imul
cmp
jge
lcall
fadds
and
fildll
xor
loop
sahf
mov
aad
daa
lods
dec
jmp
out
push
dec
out
inc
lcall
popf
mov
fsubrs
mov
push
fwait
mov
mov
jno
pop
jb
cmpl
faddp
mov
or
sbb
push
shlb
jle
mov
popa
xchg
or
inc
xor
sarl
jno
jecxz
inc
test
jae
cmp
cmp
lret
pushf
xchg
repz
adc
push
xor
cltd
xor
movsb
or
jno
mov
and
in
jmp
push
call
pop
cmc
ret
fwait
shrb
aad
dec
bound
ja
jb
xchg
mov
cs
sub
out
mov
mov
or
inc
mov
xchg
fwait
lret
int3
push
push
mov
sub
loopne
aad
in
testl
je
sub
enter
xor
xchg
add
nop
pop
sub
iret
ficompl
rcr
adc
xchg
dec
mov
sti
sbb
xor
xor
loopne
out
sbb
push
sahf
xor
inc
adcb
jo
cmp
les
std
inc
and
cmp
je
lods
test
adc
inc
cmpsl
cmc
add
xor
cli
sbb
mov
outsb
xchg
mov
addr16
test
add
xchg
sbb
inc
dec
fcmovbe
out
dec
xchg
popf
roll
push
adc
ret
sbb
aaa
add
inc
lahf
push
movsb
and
lock
rol
ss
aas
ljmp
leave
aam
std
push
xlat
je
sub
in
push
mov
pusha
mov
cmp
fstpl
dec
repz
sahf
out
test
mov
add
pushl
push
daa
test
stos
lret
mov
rorl
rcl
dec
cmp
sbb
pop
insl
jle
dec
jle
cmpsb
pop
push
cli
stos
cmpsl
jg
sbb
ja
sub
out
pusha
jbe
xchg
dec
cmp
xor
mov
sbb
mov
in
xchg
loop
xchg
jns
xorl
adc
fimuls
lods
jg
jb
sub
pushl
jne
fs
push
pop
dec
xorb
pushf
jle
lahf
fadd
mov
fnsave
cs
xchg
aaa
push
movsl
out
jb
lret
dec
mov
hlt
adc
mov
and
jmp
mov
shl
jmp
fmuls
sbb
inc
jl
lods
jge
adc
int
adc
cwtl
mov
ret
cmp
xchg
arpl
sbb
xor
jmp
idivl
pop
push
adc
inc
loopne
imul
pop
cmpsl
lret
xchg
inc
sbb
or
jbe
test
mov
dec
pop
mov
cs
cmp
lds
push
fmuls
scas
bound
inc
mov
leave
jecxz
dec
test
dec
cmc
ja
push
xor
gs
cli
lahf
mov
mov
movsl
hlt
fs
ljmp
sahf
xchg
lret
in
cs
push
sbb
or
insl
jno
sbb
shll
loop
xor
xor
adc
test
pop
mov
insb
ss
js
mov
es
stos
pop
roll
push
jno
movsb
xchg
cmc
loope
cs
cli
pop
call
or
inc
push
or
mov
inc
sub
lock
xchg
int
in
cmp
movsl
fidivrl
lret
sub
inc
insb
je
and
clc
push
lret
xchg
imul
push
mov
xchg
fisubrs
mov
lahf
mov
push
pop
mov
into
xchg
hlt
addb
inc
inc
mov
pop
push
jae
repz
rclb
push
jmp
lods
loop
jo
pop
mov
adc
das
mov
pop
sub
jbe
scas
ret
sub
stc
out
outsb
jne
ud0
comiss
outsl
add
fsubrp
dec
mov
leave
iret
dec
in
jae
cli
outsl
xlat
out
cmp
adc
inc
inc
rcrl
arpl
dec
push
or
lret
push
jo
movsl
cltd
fwait
inc
mov
test
int3
pop
shll
pop
ja
and
mov
xchg
push
push
int
std
hlt
fistps
cwtl
pop
adc
inc
in
pop
imul
mov
xor
push
push
jbe
jae
out
push
cmp
ljmp
shlb
enter
into
jl
xchg
xlat
jns
mov
jp
scas
add
lds
daa
jnp
and
stos
int3
jmp
sbbb
rorl
push
ret
mov
mov
pop
cltd
imul
fs
adc
lock
mov
mov
jns
in
call
add
scas
negb
inc
fisttpl
btr
je
mov
dec
xor
ljmp
sub
mov
movsl
aas
jae
or
cmp
add
jae
icebp
data16
or
jg
sbb
mov
xor
addl
mov
outsl
jno
xchg
stos
cmpsb
sbb
inc
jno
pop
mov
cld
mov
push
mov
mov
aad
loope
xchg
add
dec
mov
and
jp
mov
call
adc
pop
les
pop
jne
out
sub
cmpsl
jb
cltd
pop
jne
test
push
mov
cs
out
scas
into
arpl
sbb
xchg
mov
inc
loope
js
loop
mov
sbb
bound
jo
lret
push
fsts
shrl
cmp
xchg
je
xor
ja
pushf
in
xchg
and
adc
pop
xchg
sarb
hlt
add
test
mov
xor
orl
rorb
ret
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
andb
xor
adc
int
adc
cmpsl
and
xchg
iret
jnp
lods
mov
inc
jmp
push
mov
mov
mov
int3
pop
cmp
adc
push
sbb
daa
lea
push
mov
imul
out
push
test
or
out
movsb
mov
mov
stc
push
sbb
daa
add
mov
dec
adc
jns
cmp
in
push
pop
shrb
int3
mov
sbb
mov
mov
enter
adc
notl
repnz
or
mov
repnz
xor
xor
shll
jg
xchg
out
push
test
pop
mov
jno
jecxz
aaa
xor
inc
aad
fidivl
pushf
js
cmpsb
dec
pop
pop
jne
dec
sbb
in
add
movl
sbb
fwait
mov
dec
cmp
mov
cmpsb
mov
lahf
push
push
fstl
mov
dec
aas
dec
pop
loop
sub
xlat
pushf
xor
or
testl
lret
mov
jbe
aad
ds
cmpb
push
gs
fnstsw
in
and
leave
scas
daa
and
mov
mov
dec
sub
adc
inc
mov
in
pop
cmpsl
fisttps
imul
fstp
sub
test
sub
ret
lret
leave
cmp
and
cwtl
push
shlb
outsb
fimull
test
mov
pop
dec
lds
sub
jae
aam
inc
fsubrl
dec
and
int3
out
stos
mov
out
mov
decb
inc
out
xchg
imul
xchg
sbb
and
adc
fistpl
push
rcr
mov
sbb
push
mov
mov
rorb
cmp
mov
cmc
jb
popf
xor
dec
push
jns
and
daa
lods
dec
adc
repz
in
sbb
cmpsl
ret
hlt
sbb
les
inc
push
push
mov
xchg
scas
imul
or
mov
push
push
push
sarl
mov
leave
mov
cwtl
add
xor
bound
fimull
aam
cmpsb
mov
mov
lock
dec
sbb
ret
testb
xchg
cli
inc
pop
add
push
mov
je
sub
das
or
mov
jne
std
xor
mov
cmpsb
mov
insb
aam
pushf
loopne
mov
in
cmp
adc
lahf
xchg
aaa
add
inc
jbe
icebp
xchg
inc
cmpsb
sbb
leave
aam
mov
push
sbb
xchg
sarl
jmp
rcr
aas
jne
cld
enter
sub
in
dec
adc
mov
dec
and
xchg
sbb
pop
fisttpll
in
adc
dec
push
pop
gs
out
mov
mov
filds
push
push
je
mov
out
cmp
sahf
jl
bound
into
mov
sub
cmp
les
mov
out
in
xlat
or
pop
push
dec
fsubs
and
sbbl
jg
das
cld
dec
mov
adc
sub
dec
push
inc
pop
popa
lock
fisubs
jmp
lods
xor
inc
and
push
pop
ds
aam
lret
sbb
jmp
dec
lds
popf
das
jae
dec
lret
fwait
sbb
dec
test
lahf
inc
std
ljmp
inc
dec
pop
insb
mov
push
or
loopne
shr
mov
mov
xor
mov
xor
or
mov
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
mov
les
adc
adc
adc
mov
xor
sub
ja
inc
bound
into
nop
std
sahf
pusha
pop
inc
arpl
cmpl
mov
dec
mov
scas
test
cmp
nop
in
cmp
leave
das
inc
inc
scas
push
cmp
inc
xchg
adc
jecxz
push
fcmovu
adc
sbb
jnp
mov
lock
sub
dec
cltd
dec
mov
sbb
pop
or
adc
outsl
mov
dec
jmp
lret
mov
cmp
and
frstor
mov
sbb
je
mov
pop
test
das
add
push
mov
adc
ret
xchg
adc
pop
lods
or
push
or
pop
sub
movsb
out
testb
insb
add
jns
sub
push
inc
adc
jge
sbb
pop
mov
add
sub
lds
es
xor
cs
mov
or
aaa
jmp
push
adc
int3
xchg
fisubs
xchg
mov
jb
sub
sub
adc
push
sti
stc
or
xchg
sbb
out
mov
add
and
push
mov
push
xchg
sbb
clc
jb
mov
cld
out
clc
dec
dec
xchg
fstpl
inc
or
ss
fwait
in
inc
pushf
ljmp
push
jne
fisttpll
in
sbb
dec
mov
xchg
push
jecxz
rcr
je
pop
pop
fiadds
movsl
outsb
mov
ficomps
add
pop
add
cmp
rcl
outsl
add
pop
mov
and
fdivl
cmp
cltd
cmp
mov
in
inc
movsl
adc
popa
mov
clc
fcompl
sti
out
out
push
push
sbb
outsb
cltd
or
fst
cli
jae
mov
ficoml
mov
fcomp
mov
lret
jae
loopne
mov
in
xlat
je
mov
and
jo
dec
aaa
cld
xchg
jae
test
cld
dec
xchg
push
cmpsb
jb
in
sti
mov
scas
mov
lds
inc
out
push
cmp
add
mov
mov
fs
in
jg
jne
fistpl
out
sbb
cmp
test
mov
idivl
sub
mov
lcall
mov
push
sub
std
mov
or
call
je
cmc
dec
nop
push
sub
enter
push
std
std
xchg
pop
lds
push
fisttpl
sbb
mov
xchg
loopne
push
popf
dec
jle
mov
dec
push
mov
fst
lret
ret
fstps
cmpsl
ret
push
adc
pop
sub
sub
fildl
mov
push
int3
jp
bound
cli
ret
inc
lahf
adc
mov
jno
push
cmp
cld
fwait
cs
push
popf
sbb
es
jge
fstpl
loopne
pop
xchg
js
cmp
sbb
scas
outsb
in
cmp
mov
aas
sbb
push
stc
bound
ss
jno
orb
ds
and
neg
jge
cmpsl
lahf
clc
aas
inc
int3
loopne
adc
ja
mov
imul
lods
jle
les
mov
and
add
push
push
push
adc
pusha
loopne
icebp
mov
sbb
xlat
sbb
add
pop
decl
scas
sbb
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
mov
sti
jle
ret
int
adc
push
jmp
pushl
jg
inc
pop
sbb
in
sub
loopne
xor
push
shll
pop
mov
rcr
inc
xchg
lea
test
mov
sub
sbb
jbe
das
xchg
pop
lahf
popa
repnz
jb
push
or
sub
adc
push
mov
imul
xlat
test
in
jecxz
int3
sub
xchg
arpl
popf
xor
push
cmp
adc
cli
pop
push
hlt
or
pop
clc
sub
add
pop
and
pop
xor
or
test
loop
pop
sti
xchg
push
sti
out
cmp
jns
scas
fimuls
jbe
xchg
mov
mov
sub
mov
out
outsl
jle
mov
adc
and
pop
in
adc
xor
adc
rcll
cs
inc
jmp
adc
cmc
sub
mov
jnp
sti
push
inc
stos
mov
shlb
inc
enter
push
addr16
rclb
inc
fwait
lahf
mov
shl
dec
in
movsb
cmpsl
movsl
shlb
or
sub
jno
arpl
mov
mov
dec
fsubs
fisttps
fldl
shlb
inc
fadds
xchg
cmp
inc
mov
cli
mov
aam
stc
sbb
xor
mov
sar
or
lret
add
mov
push
popl
lea
jecxz
iret
gs
mov
pop
jbe
adc
sbb
xchg
inc
ret
jne
xchg
subb
xlat
ja
flds
mov
call
es
pushf
add
ret
into
mov
xchg
adc
sub
dec
mov
ret
in
xorl
mov
sahf
ljmp
or
jmp
es
hlt
add
xor
jle
pop
sub
es
jmp
rol
pop
mov
movb
mov
loop
and
cmp
or
cs
sub
pop
inc
dec
xchg
xor
filds
int
imul
mov
popa
sti
mov
mov
mov
fdivs
push
cld
jl
adc
xchg
ss
push
jl
cmp
movaps
mov
jae
ret
mov
hlt
nop
cmp
xor
out
sbb
cmp
fnstsw
loope
mov
jae
jns
xor
jns
divb
insb
popf
ss
pop
fdivs
cmc
push
mov
inc
leave
mov
movsb
push
add
jne
add
push
xchg
xor
movsl
aaa
clc
jp
fistpl
pop
sbbl
gs
imul
add
lock
loop
sub
hlt
xchg
cmpsl
pop
inc
mov
inc
popf
gs
lock
sub
add
in
scas
mov
mov
notb
or
dec
js
dec
xor
pop
cmpsl
cltd
dec
jp
js
pusha
mov
or
popl
dec
enter
cli
int
pushf
or
pushl
mov
mov
push
imull
sub
xchg
nop
inc
and
or
cmp
xchg
fs
adc
inc
ret
testl
mov
loopne
mov
adc
cmp
mov
stos
sub
adc
and
icebp
inc
arpl
in
adc
jae
mov
jecxz
ljmp
gs
add
or
les
jp
movsb
or
sarb
add
shlb
rorb
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
sahf
cmp
push
mov
adc
pop
inc
mov
out
in
enter
inc
inc
ret
cmc
sti
loope
enter
xor
je
stos
sti
and
rcl
addr16
iret
xchg
dec
pop
pushl
jp
push
dec
add
mov
mov
and
movl
clc
aad
mov
or
adc
scas
mov
cs
sahf
mov
dec
mov
jmp
pop
pop
push
int3
cmp
sub
dec
fwait
testl
pushf
dec
xlat
cmp
push
push
inc
dec
inc
outsb
sub
fs
xchg
sbb
call
jmp
shrb
xchg
daa
bound
nop
out
mov
add
pop
push
hlt
clc
cld
in
xchg
mov
test
test
stos
mov
lea
movsb
fimuls
out
cmp
insb
or
sbb
stos
push
fnstcw
dec
mov
dec
sti
add
xor
sub
pop
imul
jl
outsb
or
jae
in
mov
jns
imul
movsl
incl
es
mov
adc
sarl
push
ljmp
daa
add
inc
adc
add
xchg
orl
test
pushf
stc
mov
clc
icebp
xor
push
cmpb
and
mov
xor
and
into
rolb
outsb
ss
add
xchg
lods
pop
cmpsb
icebp
data16
pop
repnz
xchg
lods
jp
repz
out
mov
adc
fdivr
jmp
mov
jbe
xchg
adc
pop
cmpsb
das
int3
ja
adcb
scas
push
pop
gs
incl
movsl
xchg
cmp
loope
or
leave
repnz
pusha
iret
cltd
inc
push
jecxz
jnp
js
push
xorl
in
sbb
int3
ljmp
jne
sub
mov
mov
popa
and
mov
lock
into
repz
jns
sub
scas
dec
add
jp
sbb
inc
sbb
mov
sahf
push
fwait
sbb
jle
fnsave
sub
lea
cmp
xchg
pop
repz
cli
bound
mov
pop
xor
adc
sti
scas
js
mov
add
jmp
rol
imul
ds
pop
outsl
jae
subl
into
xlat
adc
sbbl
jle
lcall
xchg
dec
jmp
lea
dec
mov
xchg
sahf
inc
enter
loope
dec
aas
imull
dec
in
notb
ret
test
lods
dec
cmovno
sub
add
xchg
div
pop
add
pop
in
hlt
dec
inc
or
and
mov
fs
inc
inc
ds
fists
pop
and
jns
test
sbb
imul
add
cmp
inc
mov
int3
mov
mov
pusha
aam
mov
xchg
and
test
lds
int
xlat
jno
inc
adc
imul
sub
mov
cmp
mov
xor
rclb
push
gs
adc
test
shrl
dec
push
jns
out
cmp
adc
or
cmpsl
les
pop
xchg
jl
loopne
pop
jns
outsl
and
jmp
or
cli
pop
iret
mov
xchg
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
pop
sbb
js
mov
adc
adc
adc
ss
add
pushf
push
adcl
jnp
mov
xor
push
jl
out
mov
xor
sbb
and
adcl
ljmp
addr16
das
mov
sub
arpl
outsb
test
das
mov
cmp
xorl
jne
inc
in
repz
cmp
ror
rcll
dec
pop
movzbl
ds
pop
add
pop
rolb
sub
xlat
out
inc
clc
imull
lret
shl
jge
mov
sbb
or
jb
jns
push
in
sbb
inc
lock
cmc
inc
cwtl
out
add
jl
mov
sub
push
xor
mov
dec
add
mov
sti
xor
adc
test
pop
inc
js
xchg
or
mov
or
adc
dec
dec
mov
mov
pusha
or
inc
jecxz
imul
add
pop
and
repnz
adcl
push
or
pop
mov
push
pop
xchg
xor
ret
dec
movl
hlt
lds
lret
lock
enter
ret
rorl
fstpt
imul
lds
icebp
pop
mov
insb
push
pop
adc
es
dec
rorl
push
stc
loop
fs
repnz
sbbl
mov
xor
das
push
mov
sti
xchg
pop
clc
dec
je
jg
insl
sbb
mov
repnz
dec
mov
mov
xchg
push
xchg
js
mov
or
mov
aam
out
lahf
mov
scas
clc
lcall
mov
shlb
and
neg
xlat
xchg
jp
pop
mov
pop
xor
imul
fdiv
rol
xchg
mov
shrb
adc
addr16
xlat
add
into
mov
loope
adc
jmp
jnp
push
cmpsb
xor
addr16
push
daa
sub
sub
aam
das
mov
push
in
cmpsb
sahf
and
cmpsl
data16
push
and
cmp
imul
xchg
in
fs
filds
jae
mov
shl
das
mov
pop
test
imul
cltd
pop
mov
aam
jnp
inc
push
repz
cs
pop
popf
sbbb
xchg
scas
push
xchg
out
or
lret
imul
mov
into
scas
sbb
stos
mov
ss
push
decl
in
push
pop
mov
loopne
xchg
sub
sub
adc
clc
pop
mov
xor
dec
add
cmova
jo
mov
mov
and
sbb
data16
adc
push
mov
in
loop
insb
out
add
push
in
jmp
cmc
arpl
mov
fwait
pop
and
and
movsl
repz
add
hlt
push
sbbl
psubb
fcomps
cmp
outsl
jo
add
sarb
lahf
xchg
icebp
mov
cmp
adc
sbb
xchg
mov
mov
jl
test
dec
sub
fildll
dec
cmp
mov
xchg
mov
push
jbe
clc
arpl
jg
mov
adc
cmp
xchg
add
xor
cs
movnti
add
test
cwtl
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
int
js
test
adc
adc
adc
add
mov
pop
mov
xor
popa
mov
ret
in
jo
rcrl
mov
fwait
push
dec
push
push
mov
or
iret
mov
ja
iret
ret
fimuls
sahf
xor
fnstcw
and
sbb
es
jnp
fldt
enter
sahf
insb
and
xchg
jo
cmp
push
or
adc
or
push
call
dec
stc
dec
nop
addr16
pop
cs
and
xlat
clc
xchg
cli
ds
stos
aas
bound
rcrb
repnz
out
icebp
scas
lret
nop
adc
add
out
test
pop
decl
roll
mov
andb
push
sbb
insb
dec
xor
repnz
mov
cmpsl
cld
je
sub
xchg
lea
ja
mov
lea
popf
nop
sub
ljmp
out
xchg
cmp
ljmp
dec
xchg
rcll
aas
dec
cltd
scas
fisttpll
out
sbb
xchg
ret
jno
imulb
xchg
push
add
push
jmp
and
test
icebp
jns
cld
fisttps
jbe
xlat
sbb
xlat
add
pushf
mov
jbe
inc
test
adcl
sbb
push
insb
imul
int3
pop
in
xchg
shl
jle
out
push
lret
subl
mov
loop
shlb
xchg
aam
mov
add
fisubrl
xchg
cmp
xchg
rcr
sub
jl
clc
add
sarb
pop
mov
sahf
cmp
add
mov
das
arpl
ret
inc
andl
add
in
das
cmp
xchg
jb
dec
cmp
and
mov
inc
aam
pop
inc
push
iret
popa
std
call
sbb
fsubl
add
sub
jg
push
inc
jp
push
stos
sbb
mov
xor
jae
clc
add
aam
and
fcmovnb
cmpsb
in
lret
shll
adc
in
int3
xchg
mov
inc
push
lret
adc
inc
ret
or
dec
jp
loopne
ja
mov
idivl
and
jnp
fwait
mov
in
jmp
jecxz
lods
mov
mov
std
enter
gs
addr16
arpl
jmp
stc
shrl
stos
mov
enter
cltd
mov
lods
repnz
adc
push
add
ss
xchg
dec
aaa
inc
dec
push
pop
ljmp
jmp
shlb
jb
sbb
cmpsl
jmp
fdiv
sahf
ss
mov
loope
sahf
sub
lds
lds
sti
pusha
cs
pop
dec
adc
pop
outsl
xchg
push
xchg
mov
mov
pop
pop
popa
xchg
popf
adc
scas
fbld
test
dec
push
mov
into
and
cmp
test
std
mov
outsb
cmp
xchg
cmpsb
sub
push
jmp
test
mov
mov
mov
sahf
mov
xor
in
adc
test
lret
rcr
mov
pop
add
sub
popf
xorl
leave
push
and
push
push
popl
dec
and
jns
mov
addr16
push
cmpsb
inc
inc
add
jbe
aam
push
add
rol
loopne
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
mov
adc
adc
adc
pop
iret
das
mov
sub
push
repz
out
push
in
repz
push
lods
pop
adc
sbb
lea
jbe
xor
xor
mov
xchg
sarl
adc
sbb
xchg
rorb
adc
xlat
cmc
rcr
adc
sub
dec
clc
loope
xchg
das
xchg
jecxz
fisttpll
inc
ja
push
push
repnz
and
sub
sbb
jl
add
pop
cmpl
push
ret
sbb
loopne
mov
mov
xchg
adc
insb
in
out
inc
push
mov
dec
lods
jcxz
sbb
movsb
pushf
popf
mov
jg
in
jbe
stc
clc
xor
pop
adc
add
ret
fiadds
mov
adc
or
add
sbb
mov
xor
mov
dec
push
arpl
xchg
push
std
and
movsb
sbb
stos
mov
and
push
in
popl
shlb
and
lods
das
fistps
lahf
dec
out
clc
inc
test
cmpsb
ja
pop
pop
lock
mov
mov
shll
jge
aad
sub
mov
mov
push
enter
pop
jge
popf
bound
cmp
cmp
inc
add
mov
xchg
pop
push
negb
mov
fdivrs
or
ss
mov
pop
mov
xchg
push
inc
lret
sub
bound
jbe
inc
hlt
add
dec
inc
cmc
dec
cltd
sbb
push
add
loop
sbb
ljmp
negb
jnp
xlat
sbbb
clc
rclb
sarl
scas
xchg
sbb
xor
nop
ret
mov
add
cmp
mov
insl
cs
sti
add
xor
in
rcr
nop
fnsave
in
jge
cmp
pop
das
shlb
jne
add
jmp
mov
sbb
pop
orl
scas
and
daa
std
sahf
dec
inc
leave
push
loop
adc
cli
lcall
pop
shrb
mov
test
and
mov
push
sbb
push
adc
pop
sub
inc
aam
xor
es
mov
std
and
mov
aam
popf
lret
cmp
mov
lret
pop
jbe
insb
subl
push
adcl
ja
mov
negb
neg
clc
or
outsb
mov
xchg
mov
adc
push
in
into
xchg
and
aaa
and
xchg
adc
enter
je
push
mov
pop
iret
pop
inc
cmp
mulb
cmp
outsl
lcall
test
sub
add
cld
inc
or
add
mov
mov
dec
xor
push
out
mov
loop
mov
sbb
test
dec
test
call
mov
jmp
push
push
inc
add
xchg
dec
sbb
push
repnz
xchg
out
test
lds
mov
std
cmp
sub
and
mov
insb
mov
xchg
jmp
popa
clc
jle
ficoms
das
push
or
outsl
int
shlb
and
and
in
cmpsb
jl
setns
outsl
add
sbb
xor
outsl
scas
popa
pop
add
jno
and
or
pusha
xchg
push
lahf
and
or
fnsave
adcl
lret
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
mov
adc
int
adc
add
xor
sbb
fwait
pop
or
push
sub
pop
sbb
xchg
mov
fldt
ficoms
xor
mov
xchg
cmp
add
pushf
mov
mov
mulps
cmp
pop
scas
mov
inc
jnp
rorl
icebp
pop
loop
sub
in
pop
xchg
movl
pushf
ljmp
cmp
or
xchg
test
cmpsb
and
mov
dec
test
xchg
fadds
mov
pop
inc
xor
movsb
mov
inc
jae
loopne
mov
movsb
and
ljmp
lcall
pop
and
call
and
insb
sbb
jo
jge
and
sub
adc
loop
push
addr16
mov
loop
adc
inc
sbb
jne
sahf
xchg
scas
nop
sub
cmp
sub
mov
push
sbb
in
pushl
and
inc
test
mov
aas
inc
popf
pop
cmp
bound
mov
je
lret
cli
add
lcall
xchg
cmc
pop
cs
adc
cmp
stc
mov
sub
test
cmpsl
or
push
mov
jp
popf
stc
sbbb
pop
inc
lock
push
enter
je
loop
jp
adc
push
sbb
sahf
fxtract
sub
subl
push
lret
int3
jne
repz
mov
aam
jb
es
sbb
pop
flds
sbb
fsubl
cmp
flds
ja
mov
stos
sar
loope
stos
jl
sbb
cmp
je
std
fsub
sbb
cwtl
adc
xor
mov
push
in
lcall
or
je
fistpl
frndint
adc
mov
jnp
iret
rcrl
arpl
jns
sarl
aam
test
aas
dec
push
sbb
jns
jle
xchg
sahf
lahf
cmp
mov
fisttpll
data16
sahf
loopne
into
jl
pop
out
or
in
into
add
jo
iret
ret
push
xor
loope
sbb
test
sbb
cmp
loope
jle
lea
mov
sub
mov
sub
xor
xchg
rorl
xchg
inc
mov
pop
xchg
cmp
mov
mov
cmp
fldl
mov
in
ret
xchg
inc
mov
add
cmp
jb
inc
es
add
shrl
int3
mov
bound
push
stc
adcb
movsb
cmp
inc
icebp
roll
fdiv
mov
xchg
gs
divb
insb
les
in
or
stc
and
dec
mov
cmpsb
stos
xchg
ds
stc
div
arpl
xchg
or
clc
adc
inc
data16
pop
sub
and
mov
sbb
push
and
cmpsl
inc
cmpsb
jae
rorb
arpl
in
mov
mov
sbb
dec
leave
push
xchg
sbb
out
or
or
dec
ljmp
jp
fwait
jl
pop
std
lods
xchg
dec
cmp
and
js
sub
pusha
jb
fldcw
insl
mov
movsl
lods
push
lahf
cmpsl
ud0
sbb
cmp
mov
rol
cmp
sbb
stc
xor
xor
xor
mov
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
jg
fwait
sbb
adcl
push
lcall
cmp
dec
add
xchg
imul
mov
aad
pop
adc
adcb
scas
pop
leave
sub
sti
cmp
mov
pop
push
call
mov
ret
xchg
leave
out
test
mov
xor
jp
sbb
lcall
adc
mov
lds
mov
or
shl
cmp
addl
fcomi
stc
pop
roll
xchg
pop
mov
sub
orl
into
fidivrs
xchg
add
cmp
sub
xchg
pop
adc
jl
jecxz
mov
rol
nop
or
cmp
lods
sbb
es
adc
add
add
lods
pop
or
loope
dec
fidivrl
xor
into
sahf
pushf
mov
adc
jb
xor
je
jecxz
or
js
mov
ja
test
cmp
fs
pop
ds
mov
clc
mov
and
or
enter
movsb
xor
daa
cmp
stc
test
ret
das
leave
arpl
or
pop
adc
imul
cmp
lods
out
mov
out
sub
fwait
jne
imul
dec
loop
pop
arpl
les
adc
bound
mov
lahf
add
aad
xchg
sarb
ja
insb
mov
xor
test
jl
iret
test
sub
cmp
cmpsl
xchg
ss
nop
imul
sub
jno
adc
shrb
jbe
xor
out
and
push
and
sub
int3
or
jns
call
in
xchg
mov
mov
lcall
jge
lock
pop
adc
stc
outsl
das
xor
data16
sbb
outsb
mov
jp
inc
fs
xchg
jo
addb
ds
or
jns
sbb
cmc
gs
lret
icebp
loop
pusha
jp
cwtl
in
bound
push
fwait
pop
iret
cmp
xor
movsl
add
jge
sahf
xorl
mov
les
xlat
push
lods
ret
call
sub
xchg
mov
jb
mov
push
cmp
fldcw
mov
sbb
sub
jb
xrelease
jbe
pop
or
mov
mov
xchg
and
pop
call
int
and
aaa
add
push
imull
push
inc
sub
sub
fucomi
jp
pop
movb
imul
insl
mov
lods
in
xor
ss
or
mov
inc
rorb
mov
inc
or
sbb
scas
sbb
jae
enter
mov
sbb
in
push
jb
sbb
sub
ret
mov
jp
sub
dec
adc
pusha
mov
cli
fists
or
loope
cli
add
sub
inc
mov
popf
fnstenv
mov
mulb
mov
mov
pushf
cs
movsl
das
test
dec
ja
pop
popa
dec
int
ret
cmp
jno
ja
adc
adc
and
cmp
inc
add
fstpt
inc
repz
movsl
ficoml
dec
scas
lahf
cmpsb
cli
lods
cmp
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
ljmp
int
adc
mov
pop
sbb
fmulp
imul
sub
cmp
loopne
lock
ret
jmp
aad
jb
ret
cmp
cmpsb
lock
push
call
data16
add
insl
test
jno
loop
loop
jmp
cmp
xlat
fwait
mov
adc
out
mov
and
adc
or
fsubs
push
inc
adc
nop
mov
pop
pop
xor
sti
inc
fidivrl
das
frstor
cmpsl
push
ljmp
jne
fs
mov
xor
out
nop
mov
rolb
mov
andl
mov
movl
push
mov
pop
xchg
jns
mov
push
mov
cmp
scas
inc
xor
lahf
cmp
test
dec
shr
sbb
imul
pop
jnp
xor
ficomps
pop
cmpsl
xchg
and
out
xchg
push
sub
std
sub
insb
je
shlb
xor
mov
outsl
xor
adc
mov
pop
fisttpl
insl
aad
loopne
mov
jmp
add
lret
xor
or
mov
insb
in
not
inc
xor
mov
dec
push
test
insl
cmp
aam
mov
or
loope
dec
cmp
add
cmpsl
add
adc
pop
add
or
les
fisubrl
push
push
sub
add
cwtl
daa
mov
sbb
add
and
in
sahf
cmc
test
loope
popf
jle
daa
jmp
lahf
outsl
add
pop
adc
cmp
adc
mov
inc
clc
in
jp
mov
push
fiaddl
outsl
push
sbbl
testl
cmpsb
mov
cmp
and
cltd
gs
fs
out
stc
repnz
sub
sub
jo
cs
xor
dec
cmp
jmp
call
sub
js
sub
xchg
mov
loop
cli
js
cmp
xchg
flds
mov
jae
cli
mov
enter
gs
into
cmp
jns
sub
gs
aad
loop
push
xchg
pop
dec
syscall
push
loop
inc
xchg
mov
mov
fcomp
jbe
imul
pop
jle
mov
mov
mov
and
push
jb
dec
cmp
sahf
stos
test
test
cli
or
push
jns
sub
inc
add
cmpsb
xor
lret
int
ret
fistl
sbb
fs
push
negb
pusha
outsl
mov
sub
jns
ja
mov
or
sub
xchg
fs
pop
outsl
add
push
add
sub
xchg
cli
lret
jecxz
cmpsb
lock
push
add
xchg
sbb
push
orl
out
into
or
gs
push
push
and
test
xor
in
mov
add
into
pushf
rorl
in
ret
pusha
lock
mov
shrb
push
icebp
sbb
insl
pop
jg
jno
fadds
mov
subl
cmpsb
mov
sahf
cmpsb
lret
fwait
mov
incb
jb
push
pusha
pop
dec
ss
notl
pop
outsl
inc
jge
loope
mov
clc
sbb
repnz
ja
jge
xchg
add
xor
mov
popf
xor
dec
scas
rorl
or
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
mov
test
adc
adc
adc
or
add
add
mov
js
dec
inc
sti
stos
test
lcall
pop
xor
mov
or
je
int3
out
fsts
dec
pop
scas
sti
dec
repz
in
jae
mov
xor
cmp
or
fwait
sbb
dec
push
insl
outsl
jae
mov
es
das
lock
mov
daa
out
dec
cmpsl
jmp
fsubr
fidivrl
mov
repz
scas
mov
dec
push
mov
mov
xor
data16
jp
es
sub
scas
jo
inc
subb
movsb
jge
pushf
sbb
pop
sti
xor
xchg
jns
pop
int
std
js
into
popf
sub
mov
jg
imul
dec
arpl
push
es
je
xor
cmpsl
data16
jno
xchg
aaa
cltd
pop
mov
xchg
dec
lock
jae
test
nop
incb
mov
stos
add
mov
push
jbe
cmpsb
pop
xchg
push
mov
addr16
adc
popa
inc
dec
push
lahf
ja
mov
inc
adc
in
xor
and
mull
pop
lods
int
push
fsubrp
icebp
inc
push
aad
push
mov
mov
cltd
xor
in
test
subl
lock
sar
or
push
sbb
mov
or
add
ja
jg
jle
sbb
pop
sub
push
fnstcw
pop
ljmp
pop
sub
enter
test
dec
or
inc
hlt
mov
out
sbbl
pop
les
mov
mov
aaa
rolb
push
in
pushf
or
iret
pop
push
mov
sbb
mov
pop
dec
adc
jl
jbe
vprotb
outsb
fisttpll
dec
popa
sub
xor
loopne
lret
sub
inc
xor
cmp
push
roll
cli
iretw
sbb
bound
xor
jecxz
hlt
ficomps
popl
dec
lock
jl
mov
inc
dec
ss
push
or
stos
ret
fidivrs
add
xor
xchg
je
push
xlat
fsubs
imulb
gs
and
or
movsl
xor
js
sub
insl
and
jl
dec
test
add
push
pop
subb
jge
or
out
les
adc
scas
lods
and
jp
push
inc
bound
dec
pop
cltd
adc
pop
adc
sub
adc
jns
sarl
es
pop
mov
dec
imul
jo
pop
jmp
insb
xchg
sub
push
loope
inc
insb
int
insb
jbe
jne
push
sub
mov
inc
add
cltd
inc
sbbb
ficompl
add
repz
xor
imul
push
inc
test
test
and
inc
mov
inc
add
test
lods
lcall
sub
push
xchg
lods
cmpsl
dec
or
mov
fistps
sub
aaa
adc
mov
jnp
xor
test
mov
cs
fs
inc
je
icebp
ror
inc
fistps
clc
mov
enter
les
cmp
sbb
and
mov
mov
hlt
mov
and
shrb
ficoms
mov
adc
mov
loopne
push
inc
mov
pushf
and
int
xchg
sbb
imull
xor
fisttpl
enter
inc
adc
or
movsb
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
dec
les
adc
adc
adc
lcall
push
stos
repz
jne
outsl
jmp
mov
xchg
xchg
xor
scas
cld
mov
imul
mov
jle
mov
cwtl
loop
xor
lods
cmpsb
adcb
lock
outsl
push
add
ret
cli
inc
incl
mov
xchg
ror
dec
call
inc
mov
leave
sub
mov
into
fisubs
gs
sbb
stos
lcall
pop
mov
adc
inc
jp
push
repnz
adc
bound
sbb
mov
xorl
cs
js
fbstp
das
jle
rcrl
jns
out
xor
sar
and
xor
xchg
std
push
push
mov
js
jmp
loop
into
gs
and
adc
rcrb
sub
mov
and
cltd
mov
out
mov
mov
adc
mov
jecxz
sub
adcb
fdivrs
scas
pop
pop
fnsave
lock
mov
sbb
mov
inc
call
stos
int
mov
into
mov
mov
xchg
out
push
repz
adc
sahf
loopne
mov
aaa
movsb
or
fldt
dec
cmpsb
scas
sub
icebp
or
jmp
sub
jmp
vcomisd
out
je
fwait
xchg
mov
out
pop
mov
push
adc
dec
aad
insl
scas
pop
add
fsubl
mov
scas
lcall
clc
mov
jae
xchg
imul
add
mov
fs
jnp
pop
pop
cmp
loope
popa
push
xchg
insb
call
xchg
les
push
icebp
stos
mov
xor
mov
loopne
in
push
dec
iret
dec
gs
fwait
add
mov
aaa
hlt
clc
rorl
fcmovnb
and
and
loopne
inc
aam
inc
in
cwtl
shlb
mov
xchg
mov
clc
lret
ret
dec
imul
stos
inc
lret
xchg
call
sub
cmp
or
fs
std
data16
sahf
cmp
push
xchg
or
imul
sbb
xor
bswap
sbbb
lahf
es
jl
lcall
xchg
lea
fisubl
test
mov
outsb
mov
outsb
sub
in
jo
xor
xchg
stos
popa
jno
add
pop
repnz
int3
fwait
divb
data16
mov
dec
stc
pop
jne
push
sub
xchg
and
dec
jno
or
xchg
call
push
push
sbb
shl
lret
out
pop
pop
jno
out
dec
jle
mov
dec
pop
icebp
shl
sub
or
xchg
jmp
inc
pop
pop
mov
ficoml
mov
dec
lcall
cli
sbb
subl
out
sub
ficompl
rcll
xchg
pop
sahf
pop
jge
sahf
lock
neg
test
rcr
je
jecxz
xchg
loopne
jg
mov
xchg
jle
js
mov
push
pop
sub
mov
add
mov
out
into
jae
push
and
jns
inc
mov
pusha
aas
sub
jb,pt
jle
testl
in
xor
rolb
mov
push
xchg
insb
add
xchg
nop
pushl
mov
lret
mov
icebp
ja
pop
dec
adc
push
adc
inc
push
or
iret
lds
add
clc
mov
push
pushl
push
push
call
mov
jmp
xor
sbb
stos
sti
inc
cmpb
adc
adc
xchg
adc
pop
push
in
pop
rcl
idivl
mov
outsb
inc
mov
std
loopne
sbb
insl
pop
jmp
fsts
call
cmp
mov
enter
xor
call
add
sbb
jnp
clc
lret
dec
cmp
adcb
pop
add
popa
les
inc
sub
pop
ret
push
mov
mov
fcmovnbe
or
cld
repz
es
out
mov
jmp
mov
test
dec
cltd
ss
sub
and
cmp
mov
popf
enter
daa
push
imul
inc
mov
pop
fdivs
cmp
or
cmp
push
xchg
lods
pop
aad
int
dec
imul
ret
aam
mov
sub
jecxz
jno
imul
negl
addr16
into
pop
jecxz
add
jg
repnz
scas
pop
fdivr
jmp
jns
scas
data16
xchg
sub
es
and
push
cmpsb
hlt
dec
notb
mov
pushf
push
jge
call
mov
lods
and
repnz
js
mov
mov
xorl
jo
mov
mov
cmp
jle
sahf
iret
push
adc
jnp
push
fstpl
adc
xor
mov
adc
scas
xchg
rcrb
jbe
adcb
les
lret
xor
or
mov
mov
lds
ja
jnp
testb
fcomps
and
mov
scas
aad
mov
add
aas
jecxz
scas
and
pop
xor
push
loope
sub
out
outsb
hlt
fs
pop
dec
mov
int
dec
inc
aaa
std
dec
push
rcrl
mov
pop
imul
divb
scas
inc
shr
int
sub
out
jle
add
test
fidivl
sub
jnp
in
and
cmpl
imul
cmp
xchg
dec
pop
pop
outsb
rcll
scas
push
data16
push
lea
jge
ljmp
aam
lea
dec
dec
sbb
movsb
sbb
scas
fwait
jbe
test
mov
ljmp
testl
int
imul
fisttps
add
stos
js
pop
shlb
fcoms
lods
and
xor
shll
xor
sti
test
ja
jmp
pop
lcall
cmpsb
insl
sbb
pusha
pop
cmp
dec
mov
rclb
loopne
insb
mov
imul
inc
xor
mov
ja
lea
and
mov
sbb
pop
sub
mov
jp
or
inc
enter
cmovle
sahf
cmp
add
sbb
mov
and
cmp
lods
inc
daa
mov
jl
lea
repz
cmp
sbb
inc
push
dec
fbstp
push
test
inc
sbb
rclb
dec
sub
dec
shll
inc
ja
je
addr16
adc
xor
cmpxchg
fiadds
jb
popl
mov
ret
inc
sahf
jnp
jge
arpl
cltd
lret
sub
xor
xchg
mov
les
inc
out
pop
aas
mov
push
sbb
xor
repz
adc
shrd
jmp
ja
jle
sub
xchg
mov
dec
dec
xchg
int
adc
pminsw
leave
out
or
sub
loop
in
lods
or
mov
jg
push
ds
psrlw
aam
cmp
push
subb
and
and
xorl
sbb
and
stos
lods
sub
inc
mov
and
psubsw
add
lcall
shll
sub
push
fdivl
fmuls
mov
fbld
jae
pop
dec
fwait
or
jns
cmc
outsb
cmpsl
cmp
fcmovu
sub
cmp
mov
addr16
mov
lret
gs
stos
ljmp
or
inc
jnp
cmp
icebp
rol
jecxz
pop
mov
sbb
arpl
dec
jo
and
stos
test
mov
call
jmp
sub
xchg
jecxz
cmp
adc
pop
add
inc
cmp
jle
shr
xchg
xchg
mov
cmp
repnz
and
lds
jnp
pop
xchg
insb
iret
pop
sbb
sbb
mov
cmovge
out
hlt
cmc
call
push
push
mov
fists
adc
cmp
mov
std
rorl
mov
xor
data16
mov
xchg
js
mov
std
sahf
pusha
cmpsl
push
pop
adc
roll
jecxz
dec
fcmovnbe
lea
cmpb
cwtl
xor
jne
pusha
cmp
cmp
js
pushf
xchg
pop
inc
xor
movsl
insb
pop
jg
add
shlb
in
stc
sarb
push
mov
and
push
push
lret
imull
fisubl
test
fildl
fsubr
xor
fs
and
int
mov
push
mov
cmc
inc
cmp
mov
sub
mov
sub
mov
xor
lret
sbb
cmp
sti
cmpsb
inc
sbb
xlat
mov
lods
je
ja
inc
push
movsb
dec
and
push
ret
nop
jno
jo
mov
test
sub
repnz
sbbb
in
dec
adc
jge
popf
pop
daa
and
sub
enter
xor
cltd
into
mov
push
testb
aad
stos
and
jmp
dec
mov
adc
je
popa
adc
push
push
mov
mov
cmp
sbb
or
inc
sbb
movsl
sbb
jne
int3
rclb
mov
pop
ret
fcomps
fimuls
adc
jbe
sub
mov
inc
mov
xchg
and
or
jne
mov
popf
test
addb
lock
or
and
or
cld
dec
jle
pop
rcrl
xor
jae
imul
repnz
adc
andb
testb
mov
imul
sbb
int
or
loop
adc
es
in
pop
ja
icebp
shll
mov
daa
movsb
test
scas
rol
jmp
xchg
int3
je
loopne
sub
std
mov
add
ljmp
cltd
mov
add
inc
lock
jp
ret
inc
xchg
cmp
xchg
lahf
mov
icebp
das
lret
sahf
pop
adc
pop
jmp
mov
jle
sub
das
outsl
ja
arpl
adc
pop
pop
pop
dec
shll
sub
inc
cli
sbb
fcmovnb
jmp
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
test
jmp
and
adc
int
adc
mov
jmp
push
fldenv
rcrw
mov
push
jecxz
cmp
jle
sbb
push
add
hlt
inc
mov
dec
jmp
jmp
insl
mov
popf
dec
mov
mov
icebp
sub
adc
jecxz
lret
stos
orb
das
aaa
cltd
cmp
dec
jb
adc
fsubp
xor
add
sti
into
call
sbb
or
pop
xchg
xchg
addr16
stos
outsb
add
push
frstor
dec
sbb
icebp
jecxz
dec
fnsave
and
jp
sbb
dec
es
in
in
xchg
pop
push
push
mov
pop
lods
xor
aas
mov
sti
inc
je
sbb
jge
mov
xchg
fxch
add
sbb
inc
cmp
xchg
sub
adc
fdivl
pushf
xor
push
divb
hlt
fimull
xor
mov
and
ljmp
and
fsubrs
js
adc
addr16
or
inc
push
cmp
mov
sbb
and
or
inc
push
movsb
cmp
das
into
imul
aad
stos
loope
fisubrs
lret
and
repz
int3
icebp
mov
push
fwait
int3
sbb
mov
aaa
xor
dec
pop
in
xor
out
dec
cmp
pop
sarl
add
lock
ss
jg
loopne
ds
js
or
stc
es
dec
sbb
adc
movsl
jno
xchg
xchg
inc
shrb
fs
aad
in
js
sar
mov
pop
push
jmp
push
pop
gs
or
jbe
cmc
fidivl
push
mov
mov
push
std
dec
or
add
push
sub
push
inc
mov
fxch
adc
pop
inc
shlb
repz
outsb
mov
ret
in
jnp
in
xchg
dec
mov
sbb
xor
mov
jb
mov
aaa
sbb
dec
add
jp
add
dec
push
cmp
sub
jns
repnz
sti
enter
xchg
out
inc
or
sub
pop
mov
cmp
imul
jb
pop
or
jmp
xor
pushf
xchg
xor
sti
xchg
mov
mov
jle
stos
inc
pop
xor
iret
inc
pop
stc
sbb
inc
sbb
cwtl
sbb
jmp
outsl
cmc
stos
push
pushf
dec
jle
lret
and
shrb
aam
mov
jo
or
mov
adc
push
mov
jbe
js
pop
add
jno
push
sub
xchg
mov
mov
jns
adc
dec
cmp
orb
fcmovnbe
mov
loopne
ljmp
push
dec
pop
imul
mov
xchg
jmp
std
xor
pop
inc
pop
leave
jne
inc
push
adc
clc
es
mov
mov
mov
ficompl
fistl
sbb
loop
dec
cld
fs
iret
cmp
sbb
jl
test
jl
stc
push
scas
stos
jl
pop
nop
test
add
push
sub
sarl
fisubrs
mov
and
sarb
or
insb
fcompl
and
fsubr
jne
fists
pop
or
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
dec
cmp
bound
adc
adc
add
jmp
iret
mov
mov
push
pop
in
xor
mov
pop
xor
xchg
mov
push
repz
outsl
into
and
ss
js
rcll
cs
fs
movsl
fisubrl
mov
push
adc
das
std
shlb
mov
xor
mov
cmc
insb
pop
rcrb
dec
int
jecxz
andl
or
cld
testb
sbb
mov
pop
fbld
aad
adc
mov
lods
mov
xor
repnz
enter
xor
fucompp
pop
movsb
push
jle
pop
xchg
lahf
jo
mov
add
push
lock
dec
pop
rcrb
lock
imul
push
jge
out
add
xchg
push
sub
fnstcw
sub
sbbb
and
jg
add
movsb
mov
lods
sub
outsl
mov
xchg
add
imul
jnp
nop
xchg
push
mov
data16
push
or
repnz
jp,pn
push
add
gs
xor
add
fsubs
push
xchg
fs
sub
push
icebp
int3
aam
leave
rcl
mov
mov
cmc
add
fmuls
xor
out
inc
mov
je
inc
aaa
mov
inc
mov
pop
add
test
leave
fwait
push
lret
repz
xor
sti
pop
add
in
add
sub
mov
aad
mov
mov
loop
mov
pminub
into
xchg
in
call
or
sub
xchg
adc
adc
arpl
xchg
xchg
sbb
test
adc
imul
mov
rcr
sti
or
mov
test
sti
jmp
fwait
lods
mov
mov
xchg
daa
or
aaa
adc
xchg
sti
filds
lcall
mov
adc
aaa
push
pop
mov
add
int
ja
push
movsb
aam
insl
fxch
adc
dec
shr
jb
jmp
sbbb
roll
adc
std
or
mov
push
dec
or
je
or
sbb
scas
jb
rorb
ljmp
repz
gs
mov
lea
out
test
shrb
outsl
jge
add
pop
or
outsl
addr16
xchg
pop
das
fstl
aam
add
test
push
cwtl
loope
cmp
mov
jns
adc
jno
mov
adc
ljmp
inc
ss
repnz
adc
mov
lahf
inc
push
sub
inc
push
mov
lcall
jp
sbb
scas
dec
sub
pop
inc
sbb
popa
mov
dec
je
xor
stos
ds
push
bswap
fs
mov
inc
mov
cwtl
lcall
pop
dec
jle
test
mov
inc
loopne
mov
mov
dec
adc
and
int3
ret
mov
les
pop
ror
adc
add
enter
xor
icebp
inc
dec
mov
xchg
sbb
loopne
dec
out
stos
ss
xchg
fwait
imul
in
xorb
push
std
inc
mov
dec
pop
dec
loop
rorb
mov
cld
pop
in
pop
fistl
popf
xchg
push
xchg
mov
and
test
fsubl
aad
xor
aaa
adc
nopl
cltd
ss
mov
lcall
mov
push
and
ss
dec
aas
test
js
mov
movsl
inc
sbb
lods
rol
add
int
add
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
jle
pop
lods
adc
adc
adc
adc
stc
loop
push
cli
mov
dec
in
mov
mov
jo
outsl
cld
inc
push
pop
push
int
jl
mov
aaa
std
negb
mov
xchg
push
mov
mov
xchg
fsubr
out
inc
cmpsb
out
add
mov
push
or
pop
hlt
lea
and
sbb
lcall
hlt
inc
das
std
out
mov
inc
ret
insb
fadd
jg
mov
outsl
rcrb
outsl
xchg
aaa
xchg
sti
js
dec
mov
jo
inc
cmpsb
mov
loop
sbb
pushf
pop
imul
icebp
addr16
cmp
xchg
cmp
push
mov
ss
xor
xchg
cld
fadds
push
iret
test
aam
fidivl
push
fwait
adc
push
sbb
imul
cmp
cmp
sub
loope
fdivr
xor
mov
sub
jnp
sbbb
pop
mov
mov
rcrb
dec
sbb
add
adc
push
jecxz
or
dec
mov
dec
mov
push
sub
dec
pop
mov
mov
mov
pop
adc
imul
add
dec
push
mov
push
shr
jae
cli
xor
push
loope
add
and
inc
add
cmpsl
jl
xor
sub
pop
lock
fcoms
or
jnp
dec
cltd
add
pop
cli
mov
xor
xlat
in
jmp
inc
jmp
lods
sub
push
cli
xchg
lret
jp
jno
inc
ja
push
lret
popa
xchg
movsb
xor
xchg
inc
shlb
xchg
dec
insl
lahf
les
sub
inc
gs
outsl
push
loopne
push
pop
lahf
sub
pop
push
inc
sbb
outsb
mov
mov
dec
and
xor
hlt
fnstenv
jp
pop
clc
cmp
add
inc
scas
subb
lods
jp
inc
inc
xchg
push
in
mov
jns
xorb
xor
rcll
xor
cmpl
lea
pop
sub
and
jns
or
adc
push
xchg
shr
cmp
cmp
jne
stc
mov
ficoml
xchg
pop
rcrb
pop
adc
jl
sarb
aad
push
xchg
mov
es
andl
jne
pusha
mov
fcmovnb
or
adc
insb
cmpsb
xor
cmp
out
rcl
dec
xor
push
mov
stos
mov
xor
xchg
adc
inc
dec
mov
xor
movsb
out
or
xchg
ja
cmpsb
aad
scas
pop
adc
or
jns
inc
rorl
and
pop
cmp
ss
push
aas
out
mov
sarb
int3
fadds
sub
cmp
and
inc
push
nop
add
out
sub
jnp
leave
push
repnz
test
ja
or
jne
call
roll
pusha
insl
jb
mov
cld
clc
andl
lods
dec
cmpsl
stos
dec
push
lods
push
lock
pop
sbb
sbb
lds
rcrl
loope
push
xchg
jecxz
sbb
jbe
movsl
ror
lods
mov
jmp
inc
sbb
xor
dec
dec
jp
lcall
test
cmp
out
mov
cwtl
fwait
in
inc
jbe
sbb
cmpsb
lds
cli
mov
stos
pop
icebp
fcoml
lods
sub
add
rorl
mov
bound
jge
cmp
les
pop
dec
push
stos
dec
aaa
sbb
push
lods
lods
mov
fisttps
jae
adc
aam
sbb
or
inc
and
adc
sbb
sti
push
ret
sbb
ss
adc
and
movsl
in
sub
cmp
inc
fadds
add
add
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
mov
push
push
adc
xor
adc
adc
sub
dec
mov
pop
and
mov
mov
mov
sbb
jno
in
jp
push
hlt
fildll
mov
or
gs
sub
and
and
iret
out
pop
repz
mov
mov
in
lea
mov
iret
jne
and
sbb
and
daa
pusha
test
call
inc
sbb
xchg
out
sub
hlt
les
gs
stos
xchg
add
inc
xor
aas
sbb
push
out
sbb
push
or
mov
xchg
inc
adc
stos
pusha
add
sbb
mov
mov
push
mov
xor
mov
test
lea
pop
js
test
cmp
jp
imul
push
add
adc
in
xor
das
xchg
jnp
je
fidivrl
hlt
adc
cmp
adc
jl
leave
mov
inc
imulb
fs
cltd
fs
jg
outsl
xor
mov
adc
in
pop
cmp
adc
cmpsb
out
addb
js
mov
lret
sbb
cmp
sbb
addl
pop
rcrb
scas
aaa
or
xchg
daa
add
pop
jp
out
mov
adc
je
sahf
scas
sbb
mov
cmp
mov
sti
xorb
mov
inc
std
pop
push
jne
sbb
cmpsb
testb
ret
imul
sbb
icebp
stos
inc
jb
mov
mov
ret
mov
enter
push
stc
out
mov
sbb
add
jmp
pop
mov
int3
out
sub
sbb
cmc
faddp
push
xlat
add
into
popf
ja
int3
push
pusha
add
leavew
dec
ret
out
push
sbb
xor
xor
movsl
mov
mov
js
xchg
js
adc
push
nop
mov
or
or
xchg
stc
or
cmpsb
mov
mov
shll
out
xchg
stos
pop
xchg
ljmp
into
pop
sbbl
mov
lret
fs
push
out
lcall
sub
jge
iret
or
daa
ja
pop
cld
mov
sarl
orb
xchg
sbb
outsl
aaa
jecxz
adcb
idivb
mov
les
lcall
adc
and
and
cmp
push
xchg
xchg
xchg
xlat
into
adc
push
ds
push
test
loop
pop
inc
mov
ja
mov
inc
int
push
xchg
adc
xor
int3
push
stos
imul
movsb
fsubr
push
je
imul
jns
loop
xchg
sbb
shll
and
test
sub
addr16
andb
fwait
imul
aaa
enter
cs
sbb
dec
adc
ljmp
sarl
out
add
mov
mov
sbb
jo
jns
xlat
int
mov
mov
popf
or
call
pop
cmp
imul
pop
fdivp
jge
retw
aad
sub
test
negl
gs
cmp
test
xor
xlat
pop
jmp
negb
pushf
dec
pop
jo
addl
dec
push
jecxz
fistpll
test
xchg
push
adc
arpl
pushf
and
scas
mov
scas
cmc
out
incb
scas
inc
pop
xor
testb
pop
jne
inc
xor
pushf
push
sub
ds
stos
outsl
repnz
daa
mov
int
add
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
movsb
jl
inc
dec
adc
xor
adc
push
sbb
das
in
test
call
hlt
ss
pushf
adc
out
mov
pushf
dec
shlb
xor
addr16
fsubr
mov
leave
fwait
iret
test
cmpsb
cmp
dec
pop
icebp
in
lret
push
aad
mov
xlat
scas
adc
sbb
sub
psubusb
mov
pop
out
xchg
push
loopne
repz
cs
cmp
daa
mov
mov
sbb
mov
inc
subb
or
mov
sub
fcompl
je
into
out
add
pop
in
mov
stos
xorb
inc
leave
rcrl
fcoml
sti
inc
xchg
pop
sub
orl
dec
out
jmp
sbb
test
and
cmp
mov
repz
lock
pop
loopne
js
pop
aad
add
and
inc
out
stos
pop
add
pop
rclb
xor
fcoml
jns
mov
pop
clc
sbb
sub
push
fldcw
in
fcmovnu
jne
and
dec
inc
mov
adc
pop
pop
jl
or
cltd
add
push
lea
dec
lcall
dec
jmp
cmpsl
mov
or
xor
pop
jge
incb
pop
out
inc
enter
adc
adc
pop
mov
insb
mov
add
out
and
int3
call
and
or
push
addr16
test
ret
lret
ljmp
and
inc
clc
aaa
iret
test
pusha
jge
outsl
insb
xchg
or
adc
jecxz
push
sahf
scas
iret
pop
sahf
icebp
lret
cmp
loop
je
pushf
inc
lfence
repnz
inc
popf
fcmove
cli
mov
movsl
sbb
cmpb
xor
stos
sbb
or
lea
jge
cmp
addr16
xchg
xor
psllw
push
mov
enter
rol
sub
push
bound
and
and
sbb
mov
mulb
lea
sub
in
repz
nop
int3
loop
push
movl
stc
cmp
mov
jecxz
addr16
fildll
push
push
and
xor
insb
cmp
xchg
xchg
ficompl
fisubrl
repnz
add
call
jno
in
add
adc
push
fdiv
jp
stos
imul
add
cmp
and
jno
dec
xchg
call
jle
mov
data16
inc
sub
jno
adc
or
arpl
push
sbb
rcl
dec
jns
jecxz
or
cmp
push
jb
xchg
sub
jae
adc
in
pop
es
cmpsb
dec
lods
jae
dec
ret
jbe
subl
fnstsw
lock
cmp
sbb
inc
mov
repz
loopne
sar
cmp
push
cmp
cs
or
ficompl
popf
arpl
gs
sahf
pop
ret
or
addr16
mov
pop
xchg
in
jle
jmp
fimull
sbb
aad
in
rolb
rcr
addr16
mov
call
fs
jmp
cmc
sbb
repz
lea
sub
dec
push
mov
add
outsl
mov
push
pop
cwtl
aaa
rorb
cmp
outsb
inc
test
fadd
fs
enter
pop
std
inc
daa
int
cmp
pop
xchg
add
movsb
in
lds
mov
adc
adc
cmp
shl
icebp
add
ja
call
mov
inc
repnz
dec
inc
mov
ljmp
insb
jg
cmp
push
call
lods
enter
push
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
mov
sbb
xor
sbb
pop
xor
sub
out
fdiv
mov
sbb
cwtl
sub
inc
fsubs
mov
addl
mov
cmp
ja
mov
je
iret
inc
popf
in
mov
enter
add
push
subl
xor
dec
mov
int3
mov
xor
pop
and
jecxz
ja
sbb
hlt
dec
mov
xchg
and
es
in
outsb
int3
imul
or
and
xchg
mov
push
into
push
pushf
jp
leave
out
cmp
sub
inc
paddb
test
dec
cmp
sahf
test
inc
pusha
xchg
sbb
pop
cmp
jbe
hlt
inc
push
pop
mov
add
push
sbb
sahf
mov
fiadds
shlb
mov
mov
inc
mov
test
mov
loope
sub
xlat
xor
xor
lods
or
lcall
mov
or
prefetchw
out
xor
iret
movsl
incb
inc
incb
imulb
inc
jp
out
adc
push
lar
mov
fs
cmc
pop
addr16
sub
jo
add
ds
nop
es
arpl
cltd
push
xlat
xchg
aaa
jmp
loop
dec
ret
out
insb
test
js
lret
outsb
xor
dec
lret
dec
inc
jmp
mov
mov
inc
hlt
xchg
and
xchg
lcall
inc
mov
inc
nop
int3
mov
pop
sahf
call
pop
xchg
out
mov
leave
or
xchg
enter
int3
pop
lret
push
or
cltd
cmp
sbb
lods
test
push
mov
sub
in
and
sbb
jnp
mov
adc
mov
js
jne
push
dec
mov
lods
lahf
inc
fcompl
dec
cmp
fnsave
lcall
sub
shll
add
add
cwtl
mull
pusha
xlat
fimull
sub
adc
rclb
mov
rcrl
sub
xorl
jno
jnp
lret
xchg
dec
mov
jb
cmp
out
lret
xchg
lock
and
jp
in
bound
vmovss
js
cltd
rcrb
xor
leave
dec
lea
and
lret
mov
inc
call
daa
in
fcmove
mov
daa
cwtl
call
pop
mov
xchg
out
ret
sub
data16
sbb
add
shll
jo
push
mov
mov
push
scas
adc
jl
bnd
cmp
mov
leave
jae
jne
aad
and
jbe
mov
add
mov
aam
push
vpsubsb
outsl
cmp
mov
loopne
adc
xor
push
outsl
scas
push
xchg
mov
xchg
mov
sbb
pop
dec
push
fistl
cmp
mov
or
dec
scas
nop
mov
mov
or
or
sub
push
test
gs
push
cli
cld
movsl
addps
mov
jo
dec
push
mov
fwait
inc
mov
leave
pop
lret
hlt
ja
adc
aaa
sub
test
loopne
sub
daa
mov
and
adc
mov
mov
or
mov
dec
adc
js
rcl
mov
scas
add
dec
mov
repz
js
sub
cmp
fisttps
cli
mov
lret
sbb
outsl
dec
gs
push
ljmp
xor
xor
cmp
inc
push
bound
lods
pushf
scas
inc
mov
push
lcall
insb
outsb
popa
mov
mov
ljmp
in
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
je
jnp
adc
xor
adc
fisubrl
call
and
or
outsl
inc
mov
cmp
out
mov
dec
inc
fcmovnb
leave
shll
jg
das
jno
adc
sub
andl
jmp
mov
jns
sbb
cltd
cmp
test
mov
cs
mov
xor
jl
pop
scas
addr16
movsl
add
test
sti
dec
stos
sti
enter
and
sub
int
sbb
pop
inc
repnz
mov
jl
lock
movsl
jo
adc
lods
pop
insb
cmp
sub
arpl
frstor
sub
insb
cmpsl
aas
andb
pop
pop
nop
fistpll
ja
push
shll
mov
cs
imul
std
and
xchg
shrl
sbb
cmp
add
into
mov
cld
cmp
lds
imul
mov
or
cmp
pop
enter
mov
sbb
jecxz
push
mov
sbb
or
mov
fistpll
lods
ss
cmpsb
xor
xor
sub
cmpsb
mov
sahf
fidivrl
add
xchg
or
adc
arpl
cmp
rolb
out
scas
loopne
fistpl
aam
add
inc
mov
cmp
into
or
outsl
in
imul
test
push
mov
scas
pop
ret
jecxz
mov
mov
stos
rcrl
mov
mov
js
iret
mov
out
ja
sub
sub
dec
add
repz
cmp
cmp
adc
xchg
jae
bound
dec
sarb
sbb
mov
lret
pop
adc
aam
jmp
jne
test
mov
inc
xor
inc
push
jp
and
aam
fistl
push
fnsave
cmp
lret
jns
gs
pop
mov
mov
pop
push
sbb
nop
mov
pop
adc
dec
sbb
push
or
cmp
adc
jo
popl
inc
outsb
mov
loopne
cmp
push
dec
lret
in
sbbl
xchg
xor
inc
mov
xchg
movnti
iret
fistpll
mov
sbb
fs
pop
or
imulb
mov
jae
dec
je
pop
bound
sbb
lock
mov
pop
xor
stos
push
xchg
imull
sub
push
fsubs
inc
add
cmp
sub
mov
sti
outsb
xchg
das
loopne
mov
mov
adc
and
dec
hlt
push
xchg
jecxz
jmp
sub
test
or
jns
pop
dec
aas
inc
jge
pop
aad
je
cs
scas
pop
dec
mov
andl
xchg
mov
movsl
push
in
gs
pop
cmp
inc
push
push
enter
lock
mov
xchg
stc
xor
les
sbb
xor
jb
jg
push
ja
or
ret
aam
pop
fs
inc
xchg
in
addb
mov
scas
loope
mov
cli
rclb
cmpsl
popa
dec
std
adc
cmp
mov
push
inc
inc
inc
out
add
scas
je
cwtl
stc
outsl
cld
add
xchg
movb
cmpsl
jno
shrb
sub
outsl
sub
int
mov
test
les
jle
popf
ret
and
cmp
mov
sbb
in
leave
in
lock
dec
pop
jns
icebp
int3
outsl
mov
pusha
inc
pop
fs
call
push
les
decb
mov
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
pop
loop
test
or
ss
fidivs
call
add
fimull
pop
sbb
xor
out
aad
cmp
in
dec
and
cli
pushf
sbb
aam
dec
dec
xchg
lods
xor
xor
test
scas
imul
mov
outsl
mov
imul
jge
clc
je
lods
push
pop
sub
adc
adc
pusha
cmp
insb
fstl
out
mov
adc
ret
js
decl
and
scas
lret
mull
and
pushf
gs
outsb
dec
inc
shrb
insl
fs
mov
lock
data16
mov
int3
shl
mov
mov
cmpsl
lods
rcrl
cmp
adc
icebp
dec
popa
aas
stos
ds
stos
std
and
shll
sbbb
shll
inc
add
rorb
int3
lods
jae,pt
push
in
fldl
scas
mov
scas
sub
out
sub
jbe
das
jne
jl
sub
inc
fisttps
push
xchg
or
fsub
out
add
out
test
pop
cltd
stos
mov
loop
cmp
sti
je
jo
mov
pop
pop
jg
scas
popa
adc
mov
dec
push
fwait
dec
mov
sub
dec
aas
adc
cvtps2pi
dec
jmp
sbb
cmp
pop
es
mov
adc
push
sub
sbb
in
jne
or
push
cmp
adc
sahf
iret
jecxz
pushf
inc
pop
pop
dec
pop
sbb
scas
jb
cmp
jns
add
xor
scas
ficoml
out
adc
lahf
or
addr16
fmull
sbb
sub
cmp
pop
and
xor
sub
int
cmpsl
xor
daa
lods
int3
cmp
mov
lcall
xor
sbb
mov
sub
int
push
sub
setge
ret
jae
insb
mov
sbb
dec
cmp
cld
sbb
jae
idivl
cmp
adc
test
js
inc
push
sbb
sbb
cmp
xor
mov
sub
dec
arpl
sbb
jmp
lods
jo
cli
xchg
test
jo
jne
and
add
inc
mov
mov
test
mov
dec
fstps
pop
and
jae
aaa
js
lret
jmp
or
adc
lods
inc
gs
jg
dec
loope
js
sbb
sbb
inc
inc
pusha
aam
pop
int3
jne
sbb
push
mov
cli
cmp
push
inc
pop
out
roll
aam
add
sbb
lods
adcb
pop
pop
sub
ret
pop
ljmp
fisubrl
inc
hlt
or
mov
test
call
daa
mov
test
pop
nop
pop
cmpsl
jne
cltd
jge
mov
imul
sahf
sbb
dec
sub
subb
iret
int3
sbbl
aam
movsb
pop
and
stos
das
prefetchw
adc
jb
and
pop
addl
xor
pusha
dec
fistps
mov
repnz
mov
fcmove
push
add
lcall
std
cld
inc
cmc
mov
loopne
rcr
push
popf
popa
mov
pushf
mov
mov
stos
rorb
sbb
out
loope
jge
jne
lret
aaa
sbbl
arpl
jp
mov
shlb
imul
les
rcrb
call
lods
jl
jne
push
in
shrd
xor
jmp
mov
popa
lcall
outsl
lret
sub
adc
adc
adc
insl
inc
xor
and
ss
sub
mov
and
xchg
shlb
gs
sub
pop
and
xchg
sub
ds
cmp
out
and
fdiv
jg
cmpb
push
repz
scas
push
xor
dec
mov
sbb
test
inc
adc
ja
push
xor
sub
clc
dec
cmp
mov
pop
popa
cmpsl
sub
pop
arpl
insb
inc
jo
movsb
test
pop
push
mov
outsb
push
adc
scas
mov
sbb
pop
and
ds
push
mov
pop
and
filds
mov
add
shlb
xchg
mov
js
jmp
add
scas
pushf
adc
add
xchg
mov
mov
test
fwait
xchg
sarl
popf
jl
adc
lods
pop
mul
bound
dec
cmp
mov
es
xchg
mov
fimuls
or
cmp
stos
or
xchg
hlt
call
jb
sub
sbb
jg
inc
inc
jmp
jns
sub
iret
inc
fcoms
cmp
outsl
ret
pop
dec
and
dec
jmp
or
push
xchg
and
or
push
mov
mov
pop
idivl
les
push
jbe
mov
pop
sbb
dec
xchg
pop
pop
mov
xorl
xchg
cwtl
sbb
xor
mov
int3
es
cs
aam
das
push
lock
xlat
rorb
pop
jp
push
cmc
in
pop
jmp
loop
outsb
inc
jmp
adc
xor
insl
leave
mov
mov
mov
gs
movsb
addr16
dec
push
mov
add
int
inc
in
mov
dec
push
insl
xor
dec
aaa
enter
add
cmp
add
in
sbb
cli
iret
aas
int3
cltd
inc
mov
mov
scas
out
in
aaa
cwtl
push
and
jns
sub
lods
call
xchg
mov
xor
dec
scas
and
jo
insl
data16
rep
add
subl
shrl
stos
dec
push
pop
inc
push
jle
push
test
dec
add
dec
leave
mov
out
push
in
push
aaa
arpl
dec
call
xor
inc
addr16
xor
jg
adc
and
jecxz
add
inc
jns
cld
jno
btr
aad
loop
ljmp
mov
fsubrl
mov
push
movsb
mov
sbb
sub
lret
ljmp
es
or
cmp
mov
shl
inc
filds
cmpsl
and
in
jae
inc
xor
jle
lds
gs
mov
imul
push
adc
cmp
lock
fidivl
out
pop
adc
inc
and
mov
xchg
add
int3
or
pop
mov
cmp
nop
mov
jl
cmp
lret
or
mov
lcall
push
mov
jle
xor
cmc
add
dec
cmpl
add
pop
fistpl
cltd
repnz
inc
bound
cmp
test
add
scas
inc
adc
sub
pushf
loopne
in
cmc
movsb
jecxz
mov
ret
rcl
sbb
xor
sbb
into
mov
push
loop
hlt
outsb
scas
ficompl
les
dec
push
leave
xchg
jmp
pop
push
mov
out
cmp
dec
sub
or
xchg
cmpsb
mov
aam
imul
dec
fistpl
out
jg
xor
popf
push
jbe
jae
call
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
jge
lods
int
adc
fmull
adc
inc
lds
xor
sub
mov
scas
rcrb
cmpsl
int
popf
fstl
pop
sub
sbb
sub
fistpl
ja
adc
jg
and
ret
and
movsb
sbb
and
fst
in
fsubp
dec
and
push
scas
clc
cld
daa
jne
cwtl
out
push
push
add
inc
add
and
lahf
jnp
inc
bound
test
cs
or
push
popf
fsubs
lock
enter
xor
jb
or
rsqrtps
loope
outsl
cli
inc
mov
xor
sub
test
xor
pop
in
addr16
orl
jbe
pusha
imul
repnz
pushf
cmp
lds
stos
push
mov
xchg
out
adc
mov
pop
jb
cmpsb
popa
xchg
idiv
loope
mov
lret
cmpsb
jno
xchg
xor
out
jecxz
xchg
int3
in
xchg
je
mov
mov
std
xchg
inc
pop
fidivrs
repnz
xchg
mov
inc
jno
popa
sub
mov
jo
mov
xchg
sbb
xlat
add
inc
aad
mov
jne
ficompl
push
pop
and
out
icebp
jle
stos
push
sub
jle
sbb
dec
add
mov
call
adc
clc
jnp
fucomip
cwtl
add
inc
or
xchg
fistps
mov
jae
or
sub
lods
xor
cmpsl
pushf
push
add
jne
dec
ljmp
out
push
loop
push
or
loope
and
xchg
or
dec
xchg
fldenv
jp
xchg
add
mov
xorb
and
lock
pop
xor
adc
or
sub
pop
sti
and
fmull
mov
push
or
lret
jns
dec
or
fcmovb
jnp
stos
pop
dec
cmpsb
push
ljmp
stos
pop
add
loope
jae
sub
loope
mov
and
icebp
push
and
or
lahf
rorl
jl
adcl
mov
ret
mov
aaa
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
loop
sarb
sbb
adc
movlps
xor
es
jp
dec
in
mov
and
lods
xor
mov
jns
or
mov
dec
jge
ja
mov
daa
sbb
cli
sub
cmp
lods
test
daa
es
mov
xchg
inc
jge
sbb
movsl
mov
in
push
pusha
xchg
or
push
mov
pop
repnz
cmp
ret
jno
add
pop
cwtl
jae
or
in
mov
xor
in
dec
insb
int
shlb
lahf
out
jns
hlt
lods
mov
or
mov
mov
add
mov
gs
jo
out
jle
ss
out
popa
mov
iret
xchg
mov
pop
add
je
movsl
out
or
in
aam
mov
pop
in
icebp
jb
in
jge
loope
xchg
mov
mov
inc
mov
cmp
mov
daa
int3
js
mov
mov
mov
jo
int3
dec
add
xchg
xchg
hlt
fwait
sub
jno
jg
xchg
ja
ret
mov
mov
mov
add
and
mov
aas
testb
fldenv
inc
in
xchg
add
add
ja
xchg
mov
mov
js
ljmp
mov
imul
mov
jge
dec
pop
mov
leave
stos
cmp
stos
and
hlt
push
mov
dec
aad
imul
popl
push
adc
pop
not
mov
mov
in
test
lods
mov
rcrl
push
test
push
mov
push
inc
pop
stos
movsb
xchg
inc
mov
push
repnz
fs
ja
mov
adc
jmp
fwait
jo
or
and
iret
imul
cmp
xchg
push
adc
cmpsb
pushf
push
mov
mov
dec
jae,pt
cmc
push
outsl
dec
cmpsb
cld
nop
cmp
xchg
in
push
mov
sbb
addb
shrl
jecxz
mov
mov
out
out
mov
ret
jbe
xor
adc
add
inc
hlt
popa
cmp
lock
inc
cld
stos
and
add
add
add
stc
or
popa
imul
nop
js
mov
stos
pop
sbb
adc
movlps
sbbb
jmp
addr16
dec
lcall
and
dec
loope
pop
stos
and
fidivl
fistpl
mov
loopne
in
rolb
and
lcall
and
lods
lret
push
lcall
into
pop
je
dec
mov
xor
sti
mov
cmp
pusha
inc
dec
xchg
leave
insl
sub
stos
push
clc
popf
lret
cmp
lea
pop
jmp
lods
mov
sub
roll
stos
jg
add
push
mov
and
les
mov
xor
jae
addr16
loopne
int3
dec
faddl
push
pop
addl
jle
sbb
adcb
sbb
mov
pop
push
mov
xor
lods
pop
jns
xchg
mov
cmp
push
jl
das
xor
xor
ja
dec
lcall
jl
in
popf
bound
dec
sbb
pop
out
jb
addl
out
clc
and
scas
ds
leave
mov
pop
jecxz
add
and
cmp
pushf
push
out
movsl
mov
cmp
adc
int3
enter
and
movsl
xchg
pop
lret
stos
mov
fists
pop
push
pop
scas
out
pop
out
mov
dec
dec
push
sbb
outsl
into
xor
inc
jns
or
daa
lret
cmpsl
mov
mov
aad
mov
or
mov
mov
cltd
in
push
iret
push
loope
sub
xchg
or
push
sub
cwtl
jne
cmp
cmp
testl
adc
rcll
mov
mov
xchg
mov
sub
sti
pop
jo
mov
les
std
icebp
inc
outsb
mov
fwait
repz
xlat
je
ljmp
xchg
push
sbb
leave
push
xor
pop
rcrl
jmp
jecxz
xchg
or
notl
push
ficoms
daa
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
mov
mov
fmull
adc
ja
cmp
add
sub
and
pop
sti
inc
inc
outsl
cmpsb
dec
mov
int
stc
out
leave
ja
xchg
lods
testb
popl
mov
pop
and
adc
xor
push
js
test
pop
inc
pop
imul
mov
inc
ret
xor
sub
adc
aam
and
or
dec
sbb
inc
rcrl
clc
mov
mov
cmp
push
mov
mov
fidivl
test
sbb
xor
addr16
lcall
xor
xor
data16
or
xor
add
in
or
fbstp
pop
inc
jae
xchg
cmp
fiaddl
data16
pop
bnd
dec
and
and
cmpsb
test
cmp
arpl
xor
xlat
test
xchg
pop
fmul
sub
jle
mov
pop
inc
imul
or
in
enter
or
fidivrs
ds
push
movsb
ret
sub
xor
jge
scas
stos
xchg
jmp
or
fidivrl
jmp
pop
mov
stos
fwait
dec
pop
mov
aad
scas
pop
stos
pop
jnp
cld
add
push
jo
cmc
pop
shll
and
mov
sbb
mov
movsb
push
das
pushf
fildll
aam
or
inc
push
mov
or
cld
mov
inc
lret
pop
popa
mov
or
mov
bound
out
cmc
fbld
lahf
cmc
popa
add
sub
mov
leave
out
mov
mov
or
dec
inc
cmp
lods
sbb
lahf
in
sub
mov
pop
xchg
sub
or
xchg
xor
xor
stc
js
xchg
cmp
lea
lret
loop
dec
pusha
sub
into
cltd
repz
inc
out
or
aad
cmp
sbb
sub
inc
cmp
into
in
mov
iret
call
jns
inc
hlt
cmp
add
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
popa
je
in
adc
adc
movlps
jo
lods
loopne
js
push
mov
lods
pop
add
iret
sti
xchg
or
push
daa
arpl
xchg
mov
cmp
loop
xchg
dec
jle
in
movsl
pop
xchg
movsb
adc
ret
mov
in
jbe
fbstp
sbb
add
xchg
dec
cltd
mov
in
cmp
jne
js
insl
inc
mov
xchg
add
adc
lret
sbb
cli
or
jp
adc
xor
in
in
adc
sub
pop
cmp
out
sub
jno
aas
mov
mov
jnp
orb
adc
xchg
cmp
cmp
fsubrs
ljmp
mov
dec
fnstenv
push
call
mov
andl
jle
mov
stc
enter
mov
xlat
sub
mov
mov
inc
add
pop
popa
adc
add
lds
mov
mov
nop
add
push
mov
mov
or
rcrl
in
jno
test
cmp
arpl
scas
dec
rcrb
dec
lahf
inc
lcall
out
cltd
test
mov
pop
add
pop
sbb
xor
mov
fsubs
add
jo
fildll
xchg
imul
xchg
test
daa
insl
enter
fldcw
rcll
push
test
out
enter
jno
loop
dec
ja
or
mov
xor
mul
xor
fdivl
and
inc
mov
push
push
push
adc
pop
stos
loopne
aam
xchg
jmp
dec
xor
jns
sub
sbb
das
pop
cmp
dec
push
scas
addb
push
sahf
mov
or
jae
pop
dec
xchg
xchg
push
mov
nop
xchg
call
cli
adc
lods
mov
jecxz
lahf
popa
xor
repz
push
cmova
dec
in
cmp
add
roll
mov
cs
dec
jae
mov
mov
adc
fmull
adc
sub
outsl
xchg
adc
fmull
pop
inc
add
subb
xchg
sbb
pop
repnz
dec
mov
dec
xchg
jmp
gs
dec
jbe,pt
ja
jmp
and
ret
insb
scas
inc
jbe
sbb
mov
sarl
jl
dec
out
and
out
mov
arpl
mov
cmovp
out
and
inc
cmc
sub
mov
jnp
aad
pop
popa
jle
mov
cmpsb
call
cmp
mov
push
or
mov
sahf
out
ja
xor
xor
sub
cmp
out
xchg
jge
jle
pop
mov
push
push
pop
dec
mov
add
leave
adc
ja
mov
lock
fisubrl
xchg
ja
pushf
pop
mov
into
es
js
cmpsb
xchg
jno
pop
xchg
fldt
rcl
pushf
cwtl
insb
and
ljmp
xlat
or
lret
mov
pop
mov
lods
movsb
xchg
or
add
test
cmpsb
pushf
movsl
int3
jne
pusha
jp
jmp
sbb
ret
cmp
fisttps
jmp
and
push
mov
clc
nop
mulb
loope
bswap
mov
pusha
les
int3
mov
mov
fbstp
test
mov
adc
push
and
nop
gs
dec
dec
jo
mov
sub
sarl
xor
mov
cld
pop
leave
hlt
inc
mov
jmp
lret
pop
mov
idivb
xor
mov
rcrb
lahf
xchg
sbb
jae
mov
rclb
aam
clc
repz
adc
sbb
pop
andl
sub
jae
xchg
lds
mov
pusha
fs
icebp
pop
js
popa
inc
jecxz
add
cmpsl
pop
cmp
xchg
pop
sub
inc
fdiv
in
pop
pop
mov
into
or
jnp
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
movsb
inc
stos
jle
adc
fmull
adc
negl
push
push
rorb
out
jl
data16
test
adc
adc
cmp
xor
in
pop
frstor
sbb
xchg
adc
insl
adc
and
clc
mov
mov
lds
jmp
sbb
mov
int3
jecxz
mov
xchg
call
cmp
jns
add
jne
cmp
cwtl
insl
ds
inc
div
jbe
sbbb
xlat
aam
xor
popa
mov
popa
push
aam
push
pop
push
xor
insb
mov
std
test
stc
lsl
out
jo
adc
cli
cmp
pop
lea
mov
in
andb
push
xchg
cmp
cli
aas
js
add
test
add
aad
inc
jbe
in
mov
sarl
into
cmp
ss
popf
dec
pop
andb
das
jno
lret
dec
cmpsl
aas
and
decb
and
aaa
jg
pop
call
pushf
ss
cmpsb
mov
mov
dec
iret
movsb
pop
inc
jne
aam
mov
shrb
and
popf
ds
sub
fnstsw
movsb
in
inc
test
lods
loopne
mov
je
loop
mov
xor
out
out
bound
in
subl
adcb
inc
mov
pop
jb
shll
mov
aaa
mov
cmp
xlat
orb
xchg
sub
jb
mov
jg
mov
mov
clc
and
xlat
add
jmp
cli
nop
xor
dec
test
bound
pop
int
imul
fidivl
out
mov
xchg
mov
aas
lahf
cmpsl
aas
push
xlat
pop
cmp
push
jp
xadd
xlat
push
stos
out
lea
mov
mov
fmul
sub
pop
cmp
and
xchg
call
in
call
insl
test
into
push
stos
fimull
dec
xchg
test
cmpb
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
adc
loope
cmc
jb
pop
jbe
adc
pop
pop
lds
mov
sbb
ljmp
pop
lea
push
sbbb
push
lods
xor
mov
movsb
imul
mov
xor
iret
mov
cmpsl
mov
aas
push
scas
xchg
leave
imul
cmp
outsl
mov
outsl
add
xor
es
pushf
pop
dec
loop
lret
negb
jecxz
aam
and
or
ljmp
daa
xchg
or
push
mov
cwtl
movsb
mov
imul
push
xorl
jns
pop
sbb
movsl
jle
popa
pop
imul
inc
push
fisubl
push
sbb
mov
mov
sahf
sub
sbb
xchg
test
jl
js
push
les
aaa
or
mov
jmp
mov
lods
rorb
mov
cld
mov
xchg
and
packssdw
push
hlt
aaa
push
xor
cmp
sarl
sbb
divl
data16
mov
xchg
repz
mov
mov
stos
out
fsts
xchg
fwait
nop
mov
jbe
mov
ja
rorl
xor
xchg
push
pop
mov
int
enter
bound
je
pop
daa
jmp
pop
inc
push
sub
xchg
push
lret
les
xchg
test
push
fistpl
cmp
xor
ds
pop
jno
dec
inc
repz
mov
leave
push
mov
aaa
ljmp
lcall
jbe
and
xchg
mov
add
in
mov
mov
mov
mov
bound
inc
and
divb
rcll
mov
test
or
add
xor
pop
rorb
cmp
xorl
lock
addl
add
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
addr16
cmp
in
cmp
jge
fisttpl
sbb
xchg
int3
stc
stc
jecxz
lea
jl
es
ret
lods
decb
das
push
shl
loopne
mov
jns
push
repz
popf
lods
cld
mov
mov
clc
mov
mov
out
push
pushf
or
sbb
mov
cwtl
sti
stc
cmp
fstl
dec
popa
ss
stos
or
and
out
mov
push
jg
xchg
adc
dec
pop
outsl
out
jae
mov
aam
fisttpl
mov
jp
fwait
out
addl
cmp
sbb
pop
xchg
int
filds
and
jl
and
jns
idivl
mov
cmpsl
and
adc
data16
dec
fisubl
dec
pop
mov
push
mov
lret
iret
aas
scas
jno
in
mov
loopne
sbb
pop
jns
fimull
fdivrl
and
sub
loopne
gs
push
andl
adc
cmp
and
jno
dec
mov
ret
lds
push
jl
jecxz
mov
cli
add
cmp
xor
mov
push
add
negl
rcr
aad
pusha
stos
adc
callw
in
pop
addr16
xchg
and
mov
jbe
adc
xchg
jno
lret
jbe
mov
cli
in
scas
movb
or
sub
fstps
ljmp
stos
sbb
fisubrl
mov
nop
xchg
popf
jnp
push
rolb
push
pop
sbb
cmpsl
dec
xor
clc
sbb
push
ret
out
cwtl
js
nop
pop
cs
push
popa
inc
and
aam
mov
test
mov
jns
xor
jp
push
sarb
out
outsb
notl
xchg
je
mov
outsb
and
jmp
repnz
mov
mov
xchg
jecxz
in
movsl
mov
movsb
insl
mov
movsl
mov
std
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
xor
call
adc
movlps
jb
mov
lahf
push
mov
sar
xchg
mov
lret
lods
jb
inc
xor
xchg
or
pusha
cld
rcl
mov
push
xor
push
js
xchg
sub
imul
inc
xor
int
xchg
test
cmp
je
jecxz
sti
pushf
sub
imul
in
adc
dec
sbb
dec
and
cs
mov
mov
cwtl
push
sar
add
xor
aad
into
push
xor
push
cwtl
es
cs
jne
adc
mov
test
add
mov
cmp
hlt
cmpsb
in
hlt
sahf
movsb
jmp
add
gs
push
cld
pop
dec
inc
jae
rorb
pushf
jne
push
out
int
and
data16
mov
movsl
sbb
shl
sbb
gs
push
push
and
repz
cmp
mov
sbb
and
or
mov
aaa
insb
add
jle
movsb
test
fldpi
daa
inc
push
xchg
jg
dec
mov
clc
arpl
loope
dec
push
insl
sbb
dec
mov
cmpsl
insb
cmpsb
inc
lods
cltd
adc
lock
mov
cmp
push
inc
mov
loope
mov
imul
dec
push
cmpsl
inc
arpl
push
test
aam
aad
jl
insb
pop
jne
outsb
sub
sar
leave
xor
pop
call
cmp
sub
jle
std
or
movsb
int
movsb
mov
pusha
or
bound
inc
pop
add
paddb
mov
and
mov
int3
pop
push
int
xor
lods
push
nop
and
adc
cmp
pop
add
cmp
push
dec
fisttpll
xchg
or
iret
fisttpll
js
cmp
int
cmp
sub
in
es
repnz
scas
dec
mov
insb
add
and
jb
xchg
test
sti
loopne
sub
cmp
test
ret
and
sti
lock
push
lret
enter
popa
cmp
xor
stc
outsb
sti
push
dec
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
or
push
cli
adc
fmull
adc
adc
out
rcll
xor
aas
mov
int
cltd
dec
sub
xchg
jmp
mov
push
push
jp
out
fcompl
lock
outsb
sbb
hlt
sub
enter
mov
stos
pushf
sub
test
lret
gs
aam
rorl
jbe
push
mov
movsb
aas
scas
scas
inc
sarl
adc
add
lcall
je
fs
faddl
dec
mov
dec
sahf
subb
hlt
enter
lods
clc
jmp
arpl
dec
xorl
xor
mov
rorl
leave
stc
push
jecxz
jbe
mov
sub
jmp
ficomps
icebp
movsb
mov
xchg
es
or
mov
sbb
lea
cwtl
and
les
push
aaa
inc
fsubrp
idivb
cmpsl
in
pop
adc
xor
lcall
dec
je
add
mov
movsb
adc
stos
jno
mov
sbb
shll
sbb
scas
add
movsb
adc
xchg
dec
add
cwtl
dec
push
and
orl
sti
push
lock
je
add
cs
jo
insb
xchg
lcall
sahf
mov
mov
jp
dec
and
mov
dec
adc
into
jns
mov
test
mov
in
dec
mov
fs
outsb
or
fcomps
mov
leave
adc
and
rolb
dec
add
jne
adc
mov
cmp
mov
jae
mov
xchg
daa
fidivl
or
jnp
mov
in
pop
stc
cmp
mov
out
cmp
push
sub
push
jbe
mov
scas
icebp
fidivrs
jle
and
or
loop
adc
add
and
sti
push
fcompl
lock
minps
push
lods
or
dec
jno
popl
and
or
ret
add
ret
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
push
mov
adc
fmull
adc
call
inc
mov
scas
push
lea
mov
mov
movsb
es
push
fistpll
add
fcmovb
inc
lock
inc
js
mov
dec
or
rcl
xchg
insl
shll
or
rcrb
cltd
test
and
add
add
aad
mov
mov
jg
jo
call
xor
fistpl
dec
iret
ds
repz
out
cmp
adc
scas
and
and
ss
sahf
mov
mov
xchg
jns
jns
mov
add
and
sub
push
sbb
pop
dec
add
out
pop
xor
daa
out
daa
and
push
sub
in
push
and
loope
jb
inc
gs
xor
fstpl
aas
out
pop
das
insb
xchg
repnz
divb
push
push
add
xchg
sub
push
inc
shll
adc
push
aam
aas
pop
repnz
inc
fucomi
xchg
dec
and
enter
and
rcll
dec
push
xor
out
adc
lcall
enter
jb
mov
inc
and
je
das
fists
stos
jl
mov
inc
movsb
inc
mov
cmp
jmp
iret
xchg
lods
or
sub
shrb
negb
cmpsb
test
jnp
xchg
mul
xorb
cwtl
stos
test
jns
inc
ror
fcomp
push
cmp
lds
pop
in
jnp
pop
push
inc
rolb
mov
and
mov
mov
or
cmp
inc
mov
mov
out
push
nop
test
lods
hlt
lods
leave
sub
je
and
mov
add
and
ret
aad
mov
mov
xchg
push
repz
addr16
test
fisubs
jle
or
fsubrl
rorb
inc
frstor
std
pop
in
xor
add
jecxz
add
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
pusha
mov
pop
out
mov
fildl
js
sub
cmp
imul
lds
xchg
adc
mov
inc
push
mov
jmp
mov
imul
push
loope
addr16
adc
es
fstpl
mov
movsb
inc
fdivrl
add
es
mov
inc
lds
adc
bsr
dec
sub
sbb
inc
adc
sub
inc
jne
or
lods
push
xor
jnp
jno
cmp
cmp
dec
pusha
and
push
cmp
rcll
add
ljmp
dec
scas
jge
cli
mov
pusha
mov
push
outsl
iret
stc
jns
cmp
mov
adc
ja
mov
lahf
rcl
dec
mov
subb
testb
outsb
ds
sbb
and
je
inc
out
loope
into
daa
cmp
sarl
mov
mov
loope
aad
dec
test
dec
rolb
out
cmp
outsl
mov
popa
sti
movsb
shl
mov
cmp
fmuls
out
outsb
mov
clc
arpl
sbb
fucomip
sbb
loope
dec
test
and
fisttpl
push
xchg
sarb
push
sub
mov
push
adc
sarb
mov
rep
or
shrb
cld
aas
xor
cmp
and
xchg
adc
aam
data16
fadd
out
and
push
sbb
mov
iret
imul
les
stos
sub
xchg
xor
push
das
push
pop
and
xor
xchg
rolb
and
pop
ja
inc
ljmp
mov
sub
xchg
push
dec
dec
bnd
test
loope
cs
xlat
or
mov
push
int3
sub
push
mov
rolb
pop
pop
mov
adc
jge
sahf
insl
jl
out
cmp
out
andl
scas
outsl
add
loop
fisttpl
or
das
aad
mov
das
clc
pop
xor
in
mov
in
or
lahf
iret
jmp
ficoms
repnz
xchg
pop
mov
sbbb
lds
xor
popf
iret
adc
pop
mov
pop
push
lret
pushf
jge
cs
adc
test
fsubr
scas
mov
pop
mov
cmp
outsl
cmp
ret
popa
cmp
rorb
lcall
mov
mov
insl
mov
enter
je
dec
pop
inc
xor
jnp
pusha
jl
mov
dec
push
lcall
je
inc
mov
in
in
cltd
push
push
inc
adc
push
rol
sub
xchg
jne
mov
addr16
test
ret
jmp
repnz
pop
int
addr16
and
push
and
adc
pop
shlb
lock
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
jo
js
jmp
adc
cmp
fildll
cmp
adc
nop
in
orl
xlat
inc
add
mov
push
mov
movsb
sahf
outsl
adc
sbb
and
es
pop
dec
mov
add
push
stos
test
lcall
dec
jle
push
ds
jb
pop
adc
imul
pop
das
out
mov
inc
fnstcw
push
adcb
icebp
daa
int3
mov
or
mov
lods
mov
xchg
insl
repz
aaa
xor
roll
jle
jle
pop
les
sar
stos
mov
repnz
mov
add
sti
cwtl
out
push
repnz
cwtl
scas
xor
mov
cmp
xchg
xor
fs
xor
mov
ljmp
jnp
cmpsl
cltd
and
repz
xor
stc
and
mov
daa
xlat
out
in
in
js
ss
push
addr16
mov
jmp
mov
repnz
cs
cmp
adc
add
adc
push
push
pop
sbb
fadds
dec
adc
dec
shlb
jo
loopne
add
lahf
in
add
or
and
sahf
shr
pop
mov
ret
in
ficoms
or
out
or
push
dec
mov
xchg
scas
or
inc
repnz
jle
or
pop
dec
push
and
sbb
test
pop
mov
lods
ret
divl
inc
adc
cmp
out
jmp
sub
xor
out
stos
xor
jecxz
popa
outsb
cmp
cld
mov
jecxz
mov
cld
dec
rcrb
sbb
mov
jnp
or
aad
cmp
aam
pop
lret
in
psraw
inc
pop
cltd
xchg
mov
push
popa
cmp
fnsave
mov
push
jbe
cld
mov
mov
fdivrs
dec
inc
stos
jl
sub
inc
stos
les
pusha
lods
enter
push
fstps
push
test
mov
lods
inc
ficoms
subb
leave
push
xlat
test
pop
sub
inc
dec
jge
fwait
fwait
push
pop
xor
addr16
cmpsb
dec
sub
es
iret
adc
or
adc
aas
enter
test
in
mov
sbb
mov
sti
test
pop
je
pop
sbb
cmp
mov
rcrb
jo
inc
mov
lods
mov
cli
dec
push
enter
subl
mov
int3
jmp
rcrb
enter
outsl
and
mov
add
inc
and
aam
and
ficomps
mov
fdivp
and
xchg
mov
cltd
out
xchg
lcall
ret
aam
inc
leave
ret
adcl
mov
imul
xchg
sahf
mov
mov
mov
and
sub
sub
jmp
pop
scas
addr16
inc
xor
adc
push
pop
movsl
incb
stc
incl
cld
in
cmp
cld
xor
lret
xchg
and
mov
pop
mov
adc
or
push
add
clc
lods
push
add
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
sub
in
adc
jo
adc
test
jbe
loop
mov
lds
sahf
into
fistpll
jmp
inc
xor
and
xchg
cmp
lds
mov
scas
test
cmp
mov
cmp
subl
ret
cmp
cmp
in
xor
cmp
fsubs
pop
push
xchg
push
in
loope
jge
lret
imul
pop
mov
loopne
inc
rolb
inc
into
sbb
inc
loopne
rclb
fstps
and
leave
daa
mov
imul
jb
xor
popa
sbb
jg
sti
mov
sbb
mov
push
add
mov
inc
insl
push
loope
ljmp
dec
cli
dec
dec
add
insb
and
push
jecxz
fdivrp
mov
lret
cmpl
into
mov
lret
in
lahf
or
and
jle
or
add
mov
add
fcmovu
lret
aam
jno
sbb
addr16
clc
dec
adc
nop
dec
nop
imul
js
mov
inc
cwtl
mov
cs
jno
and
lret
cmpsb
filds
sahf
mov
lock
mov
lret
push
jb
add
pop
pop
inc
mov
push
out
fsubrl
hlt
or
push
fnstsw
mulb
leave
xor
add
jb
fiadds
push
jecxz
pop
or
int3
mov
fstps
sub
addb
pusha
sub
out
fwait
pop
jbe
fnstenv
or
test
push
push
in
push
add
int
push
and
inc
psubsb
lahf
xor
dec
lret
cli
stc
divl
mov
mov
jg
repz
pop
jne
mov
xor
cwtl
mov
adc
bound
inc
xor
jno
mov
aaa
mov
xor
hlt
sub
imull
mov
adc
lods
adc
pop
rorl
mov
js
jl
les
fdivs
int3
add
test
fwait
out
push
fstp
cmpsb
cmp
mov
popf
mov
push
adc
xchg
addr16
nop
outsb
pop
dec
push
push
and
sbb
jg
dec
sbb
mov
inc
dec
int
dec
xchg
lods
lret
sub
cmp
fildl
mov
jmp
stc
sahf
and
mov
xchg
xor
in
inc
and
cmpsb
sub
lret
mov
add
movsl
or
add
xor
mov
iret
addr16
add
fbstp
adc
sbb
negl
cmp
xchg
sbb
cmp
rolb
xchg
mov
add
ljmp
into
fnstcw
aad
in
ret
sbb
insl
movsb
loop
or
jbe
mov
stos
and
ds
pop
xchg
and
rcr
dec
fcoml
mov
add
xchg
iret
inc
pop
out
addr16
dec
push
mov
add
iret
pusha
xorb
and
iret
clc
mov
out
lahf
out
inc
aam
cmp
add
inc
cld
xor
add
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
mov
adc
jo
adc
pop
scas
fistpl
icebp
mov
hlt
mov
mov
lret
sub
sar
mov
mov
scas
imul
cmp
pinsrw
and
inc
sub
or
gs
pop
stc
or
jo
cmp
mov
pop
lret
aaa
cmp
loopne
inc
jge
sub
stc
pop
pop
stc
scas
xchg
lods
rorl
enter
mov
sbb
faddl
dec
imul
or
aad
sarb
inc
in
cmp
aaa
out
and
jge
test
cmpsl
int
pop
idivl
jp
loope
sti
jbe
add
cmp
add
aam
cli
rolb
arpl
ret
jns
xor
pop
in
pop
imul
xlat
xchg
movsb
push
cmp
add
cmp
jnp
popf
mull
out
mov
cmp
nop
dec
adc
mov
inc
and
clc
mov
in
mov
addl
push
lret
or
xchg
xor
ja
dec
orl
pushf
push
aam
js
icebp
dec
mov
pop
pushf
clc
aam
and
add
popa
add
adc
fs
in
movsb
mov
movsl
add
scas
das
push
inc
xor
pop
pop
inc
lahf
mov
lcall
and
dec
nop
cmpsb
ret
sti
jp
mov
mov
int3
int
pushf
mov
in
mov
mov
inc
mov
pop
insb
lret
xchg
adc
push
mov
scas
xchg
mov
loopne
jle
mov
xlat
aad
movsb
fsubs
jnp
inc
add
cmp
js
xorb
xchg
xchg
int3
loop
lret
sbb
bnd
pop
fwait
dec
inc
push
mov
jg
sub
cwtl
loop
fmull
add
push
imul
fstpt
int
lret
sbb
popa
orl
and
dec
add
mov
cmp
adc
xor
shrl
xchg
insl
mov
es
pop
mov
ret
out
push
stc
xor
mov
mov
jp
mov
ds
xor
popa
add
pop
inc
not
pop
ficompl
lock
push
stos
stos
divb
nop
pop
loop
add
add
mov
dec
xor
stc
imul
add
rcr
xor
decb
loopne
pop
ror
cmp
push
sub
cmp
adc
dec
pop
or
dec
std
mov
fadds
fwait
lret
dec
adc
cli
mov
loope
xchg
pushf
pop
in
mov
mov
jle
aam
inc
dec
insb
adc
adc
dec
in
mov
leave
lds
loope
loopne
cmpsb
pop
shll
push
mov
push
fwait
mov
rcrb
lock
jb
pushf
je
xchg
push
fisttpll
stc
das
jge
mov
lret
mov
outsl
gs
leave
mov
cmp
fnstsw
add
sbb
pop
lret
out
loop
cmp
fcoml
sbb
rorl
inc
in
jno
add
in
outsb
add
add
inc
dec
and
cwtl
lods
fwait
out
and
sahf
aad
adc
adc
cmp
pop
cmp
mov
nop
mov
mov
add
inc
dec
push
xchg
dec
lret
push
mov
aaa
and
fnsave
adc
in
loopne
mov
and
clc
dec
scas
xor
mov
mov
dec
mov
out
mov
cmp
pop
scas
jecxz
cs
add
pop
loopne
xchg
shlb
pusha
fwait
push
pop
xchg
dec
out
aas
cmp
add
rcrl
mov
dec
outsb
movhps
add
stc
fwait
mov
stc
lods
or
stos
bnd
sarl
mov
pop
loop
popa
xchg
mov
nop
jnp
xchg
or
inc
lret
jo
mov
fsubrs
xchg
mov
jle
dec
jp
fistps
lret
sub
mov
scas
mov
in
test
in
jbe
pop
xchg
insb
movsb
ja
push
icebp
cmp
lret
add
test
icebp
ss
test
adc
lret
jbe
add
jg
xor
sub
xor
icebp
out
lret
ret
call
int
and
hlt
push
add
add
mov
mov
add
mov
add
nop
dec
subb
imul
jae
jle
addl
add
pop
enter
sub
scas
push
sbb
out
push
cmpsl
test
sbb
pushf
lret
push
addb
push
add
pushf
jae
rolb
mov
dec
aas
popf
das
mov
pop
shl
sahf
jne
jae
into
mov
out
ret
test
mov
xor
outsb
out
lahf
push
push
xor
pop
adc
insb
sub
cltd
into
xor
test
popf
inc
and
std
ljmp
sbb
xchg
adc
adc
lret
cmp
ljmp
xchg
inc
sub
sbb
add
pop
mov
xor
inc
in
cmpsb
hlt
adc
je
scas
inc
mov
jo
cld
icebp
in
fldenv
les
push
xor
add
and
leave
and
sbb
ret
fdivs
adc
shl
std
and
inc
int
sti
daa
bound
mov
in
jl
dec
out
jo
sub
lcall
cltd
in
inc
shrl
loop
fwait
or
test
xchg
out
int
jg
fiadds
iret
je
std
push
cmp
xchg
xor
push
insb
out
and
xchg
sbb
in
add
mov
adc
lahf
fisubrs
or
mov
sub
out
lea
dec
mov
sarl
push
loop
add
mov
add
and
fcomi
dec
loopne
dec
int
ljmp
xchg
lds
cmp
jp
xchg
pop
fsubrs
xor
xor
push
loop
test
ja
push
adc
add
mov
ficoms
lea
mov
push
adc
adc
loopne
das
lret
sbb
and
jl
adc
sbb
xor
mov
ljmp
mov
add
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
mov
mov
jo
adc
or
xchg
pop
dec
jns
xchg
push
repz
in
or
pop
stos
popf
inc
pop
inc
sub
dec
mov
sti
rclb
mulb
add
out
jae
xchg
subl
shr
mov
mov
xchg
jg
fwait
push
in
insb
pop
cmpsl
inc
cmp
movsb
sub
leave
incb
shl
push
pop
mov
pop
mov
dec
hlt
mov
lods
test
clc
lock
or
sbb
mov
pusha
test
adc
xor
int3
inc
inc
or
jge
and
mov
pop
mov
pop
scas
jmp
cmp
dec
test
outsl
mov
xchg
fisubs
mov
dec
out
push
xchg
sbb
aas
pop
cmpsb
pop
lcall
lahf
push
pusha
inc
outsl
xchg
cmp
in
or
outsb
dec
mov
mov
imul
cs
push
inc
insb
adc
mov
adc
cs
xor
lods
testl
std
in
push
scas
push
out
cmp
or
mov
or
fmuls
shrb
jmp
xor
adc
ret
aam
jno
hlt
add
xor
aad
mov
or
es
sub
dec
nop
adc
push
dec
aam
mov
js,pn
shlb
int3
xchg
mov
adcb
outsl
adc
mov
pusha
adc
cmpsl
pop
push
std
inc
inc
aaa
js
sbb
lea
fs
popa
inc
jbe
xorb
mov
sub
les
into
out
ror
cmpsb
mov
dec
jno
leave
push
loope
jp
lcall
mov
add
push
mov
cmp
push
inc
and
sub
data16
add
mov
cmpsl
sarl
xchg
add
add
fucomi
xlat
cs
cmc
imul
jle
decl
dec
into
enter
mov
cmpsl
xor
adc
movsl
adc
cmpsl
xchg
xchg
push
push
lret
dec
stos
push
xor
leave
outsl
xchg
or
pop
rorb
inc
sbb
icebp
icebp
inc
fisubs
add
mov
cmc
sub
xor
je
mov
pop
ss
cmp
jbe
mov
sbb
repnz
mov
mov
in
xlat
mov
mov
ds
mov
xchg
dec
mov
add
bound
lods
sti
popf
push
jmp
add
mov
das
xchg
sub
adc
cmp
div
push
xor
push
lahf
pop
and
push
cmp
les
cmp
fwait
or
gs
lea
xchg
loope
cmp
sbb
cld
fnstcw
loope
pop
xchg
jecxz
push
jge
dec
push
stos
out
loopne
sub
push
shrb
lock
mull
cmp
aaa
lahf
adc
mov
scas
mov
mov
inc
pop
rcrl
add
mov
inc
insl
bound
push
setge
js
cmp
jno
lcall
jne
popf
stos
aad
ss
insl
dec
xchg
or
pop
and
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
sbb
inc
call
cmp
cmp
xor
daa
sbb
ljmp
xchg
call
sub
orl
fs
bound
and
sub
cld
push
jae
vmovntps
adcl
jecxz
push
mov
add
jns
test
mov
xor
adc
lea
adc
iret
inc
mov
lret
add
jno,pt
adc
fcompl
sub
jbe
cmp
stos
cmc
push
add
cmp
mov
or
jle
pop
adc
adc
lods
pop
mov
and
push
xchg
push
and
notl
push
mov
into
dec
into
xchg
push
ja
shll
adc
scas
add
ljmp
and
dec
add
mov
inc
cmp
or
push
mov
test
and
iret
or
fldl
pop
jo
mov
enter
pop
jg
xor
daa
test
lea
aas
iret
icebp
mov
movsb
ret
loopne
jp
lahf
adc
cmp
and
loop
dec
mov
mov
fs
push
adc
dec
ss
sbb
xor
test
subl
popf
fisubrs
pushf
and
int3
push
adc
inc
mov
add
xchg
mov
xor
call
push
test
xorb
mov
xchg
add
fcmovnb
rcr
lahf
or
xor
pop
mov
sbb
sub
fmul
or
cmp
mov
xchg
pop
fmul
xor
push
scas
push
dec
mov
jge
movsl
popa
xchg
clc
xchg
xchg
ss
add
mov
xor
xor
enter
lret
or
pushf
jge
sti
pop
cltd
cmp
test
mov
push
pusha
mov
movsl
jo
test
mov
xor
add
fists
lock
insb
dec
sbb
mov
jge
push
jge
call
jg
mov
pop
in
addl
pop
xchg
or
repnz
sbb
jne
cmc
imul
and
sbb
out
pop
pop
dec
decl
fwait
out
divb
mov
in
lods
pop
push
lock
pop
stc
push
jge
mov
aas
stos
mov
cmp
lret
shl
push
in
iret
out
out
jmp
out
jp
mov
sbb
das
xor
lea
fs
leave
xlat
xchg
fistpl
jns
add
lret
dec
cmp
inc
pop
aam
inc
aas
movl
push
cmpsl
test
adc
lret
xchg
mov
call
gs
xor
lds
dec
test
jnp
fldt
sub
ret
push
push
inc
jo
fldl
adc
inc
decl
jae
sub
or
push
mov
pop
sti
sub
cmpsb
sbb
jbe
xchg
dec
cmp
add
sub
adc
ds
inc
cltd
add
cli
out
lret
dec
xchg
sub
fwait
sub
sub
popf
push
fxch
jmp
js
lcall
add
test
call
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
mov
sarb
rcll
jo
adc
jb
and
add
lcall
inc
pop
mov
aas
add
fwait
and
cmp
lock
cs
ret
jae
dec
jp
inc
sub
testb
arpl
push
cmp
in
inc
cmpsl
mov
mov
pop
insb
add
std
stos
jle
fwait
arpl
or
ja
or
sbb
dec
inc
push
adc
cmp
xor
lock
xchg
addl
imull
jne
xor
dec
call
je
roll
pop
jno
call
test
jb
push
scas
repnz
mov
mov
mov
cmpsb
pop
jbe
imul
mov
hlt
aad
stos
push
enter
sahf
xchg
cwtl
dec
jmp
icebp
sbb
lds
xchg
jnp
outsl
into
aad
enter
cmp
pop
push
dec
mov
dec
pop
lea
mov
fisubs
sub
fsubp
sub
ret
and
xchg
shll
dec
fsubs
popf
popf
fildll
and
and
decl
sti
outsl
enter
inc
inc
test
adc
test
fdivl
lods
lds
ja
in
leave
cmpsl
xchg
imul
mov
and
sub
xchg
rcr
mov
je
lods
and
dec
xchg
jno
push
pop
inc
out
pop
mov
xchg
jecxz
pop
add
dec
jl
inc
arpl
inc
push
lahf
cmpsb
xchg
fistpll
jnp
test
inc
lock
xchg
loop
lods
fsts
mov
inc
outsb
jo
aam
pushl
push
test
popa
call
xor
sbb
pop
jge
mov
rolb
test
inc
mov
mov
pop
and
bound
fildll
inc
dec
xchg
mov
pop
ja
fildl
and
int3
subb
or
jle
fcmovbe
leave
mov
fsubs
mov
push
sub
hlt
aas
cmp
loopne
out
and
mov
mov
push
movsl
mov
xor
mov
pushf
mov
mov
imul
inc
cld
add
sbb
scas
add
push
or
fwait
add
push
in
pushf
sbb
insl
std
insb
mov
push
loope
pop
pushf
sbbb
add
pop
add
lret
repnz
ret
and
jns
stc
xchg
add
lcall
cld
add
adc
xor
pop
inc
sbb
xchg
inc
cld
xchg
movsl
ss
gs
nop
je
shl
imul
push
and
push
sbb
shlb
inc
jne
insb
mov
sbb
aaa
xor
subl
push
mov
sbb
mov
orl
push
into
ja
mov
jge
ljmp
ja
mov
fwait
popf
cmp
hlt
mov
adc
rcl
inc
movsl
add
mov
daa
imulb
mov
or
pop
dec
sbb
out
add
sti
xchg
mov
mov
dec
cmp
test
mov
xchg
in
popa
mov
subl
shlb
jge
data16
add
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
mov
mov
adc
adc
shrb
loopne
leave
mov
mov
jecxz
mov
mov
mov
stc
or
xlat
test
repz
dec
jmp
movsl
loopne
iret
daa
push
int3
push
push
add
xor
inc
in
outsb
push
mov
in
ja
imul
and
sbb
jmp
lods
ret
mov
cmp
clc
inc
inc
mov
mov
jl
mov
cmp
popa
inc
inc
das
je
pop
testl
inc
mov
inc
jnp
push
xor
jle
pop
push
bound
push
out
inc
out
imul
divb
mov
pop
mov
cld
pxor
sarb
add
lahf
out
repnz
mov
dec
arpl
lcall
enter
inc
pusha
cmp
and
adc
dec
adc
pushf
sub
movsl
xor
pop
xor
add
mov
cwtl
jecxz
xchg
int3
push
mov
push
adc
gs
lret
and
repnz
sub
movsb
call
aad
cli
js
hlt
shlb
icebp
into
out
mov
xlat
or
loop
aad
and
movl
jbe
mov
nop
mov
adc
loop
iret
push
and
sub
sub
inc
push
push
lea
pop
lods
push
lahf
push
and
ja
outsb
cmpsl
inc
xor
and
adc
sahf
cld
push
adc
repz
jo
sti
and
adc
add
sub
sbb
ljmp
dec
insl
inc
je
pop
xlat
push
testb
inc
mov
sbb
lret
xchg
ss
inc
xchg
xchg
aas
mov
fistpl
xor
out
subl
aad
in
les
or
cs
jp
lds
js
call
pop
cltd
adc
and
xor
in
enter
fsubrl
mov
out
pop
insb
sti
sub
movsl
sbb
in
xor
adc
fwait
dec
xchg
xor
sub
loop
cmpsl
mov
adc
jnp
jne
or
add
xchg
lods
out
add
fisttps
test
push
shlb
mov
mov
addb
push
fildl
pushf
inc
enter
xchg
lods
addl
jae
scas
pop
icebp
or
and
call
jp
bound
and
mov
xlat
xchg
pop
in
adc
es
scas
clc
dec
aaa
icebp
xlat
xchg
insb
xchg
out
xchg
repz
lea
out
dec
lods
es
cmp
sbb
test
jo
pop
mov
lret
xor
xchg
cmpsl
cli
jge
popa
sarl
lcall
mov
cmp
pop
dec
add
lock
or
xchg
enter
add
fnstsw
rcrb
xor
xchg
loopne
imul
jb
inc
cmp
hlt
pop
jg
dec
sbb
and
leave
mov
rorb
xchg
fisttpll
sti
popa
push
mov
jnp
imul
fnsave
pop
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
xor
cmp
in
mov
inc
jb
std
test
push
lahf
aam
scas
je
jo
xlat
orb
mov
jmp
mov
pop
lock
in
push
pushf
dec
sub
cmc
mov
adc
cmp
cli
pop
xor
call
adc
jo
xor
jecxz
sub
das
xor
out
pop
addr16
mov
pop
or
sbb
hlt
inc
dec
dec
mov
and
adc
mov
mov
fdivr
mov
jge
inc
xor
mov
mov
push
jmp
outsb
mov
push
jbe
and
add
push
sbb
add
scas
into
test
lret
in
and
shrb
dec
outsl
and
clc
xchg
dec
dec
xor
dec
mov
pushf
mov
repz
adc
sub
mov
andl
mov
cmp
push
xchg
mov
int3
and
dec
pop
mov
push
repz
sarl
clc
aad
lods
iret
xor
test
cmp
cmp
ja
out
mov
sbb
and
jge
repnz
jmp
jle
mulb
push
lock
mov
call
push
xor
or
and
cmp
int3
insl
adc
dec
push
sub
mov
js
inc
mov
pop
xchg
cmp
dec
jp
sbb
inc
jp
icebp
or
mov
mov
rorb
les
loop
inc
ffree
ljmp
mov
not
sbb
add
cltd
icebp
mov
bound
cmp
cmpsb
xor
jg
mov
out
mov
sub
mov
add
cmp
call
jae
jmp
push
and
iret
or
jae
sub
jb
cwtl
cmc
out
inc
ss
iret
push
mov
mov
js
jo
and
jmp
scas
xchg
mov
mov
or
cmp
sub
std
dec
push
push
call
mov
mov
or
or
push
add
push
jmp
push
pop
push
js
fdivs
stos
imull
adc
rolb
sbb
push
jo
test
stos
xchg
lret
add
or
bound
ss
mov
or
xchg
pushf
sbb
or
cmp
mov
rorl
mov
mov
ljmp
ret
ja
push
jecxz
test
and
lods
mov
xor
pop
pop
or
mov
jg
or
cmp
xor
sar
jecxz
inc
data16
mov
inc
xchg
out
das
push
mov
fdivrl
mov
adc
sbb
sbb
rol
push
stos
dec
push
ja,pn
enter
fs
pop
addb
xor
xor
popf
popa
mov
loope
jno
pop
sbb
or
insb
into
fmull
lods
negb
mov
mov
fs
jnp
nop
mov
outsb
loope
xor
scas
mulps
dec
sub
lret
cmp
cmc
lahf
stc
rclb
out
sbb
int3
pop
add
sub
cmp
push
mov
cmc
fistpl
data16
in
xor
pop
mov
or
and
sbb
jecxz
cmp
and
cmp
cli
xchg
dec
cmp
arpl
pop
lahf
mov
jecxz
imulb
add
movsb
lods
movsl
inc
repz
sub
or
repz
xor
adcl
mov
pop
in
mov
sbb
jae
jne
and
clc
jmp
adc
sbb
add
push
lret
stos
mov
or
movsb
ljmp
call
push
sbb
sahf
push
cwtl
sbb
adc
jne
add
rorb
mov
sub
test
call
fmull
mov
xchg
test
imul
or
mov
stos
pusha
push
adc
cmc
movsl
bound
xchg
mov
xor
xchg
xor
lds
cmp
jne
mov
inc
andl
sub
inc
lods
shll
mov
mov
fcmovb
loope
xchg
mov
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
aam
mov
stos
movlps
fcomp
test
jbe
dec
je
rcll
mov
aaa
outsl
lods
sub
ret
inc
mov
mov
and
xchg
pop
sbb
jo
mov
popa
pop
lds
sbb
xlat
call
scas
push
aam
pushf
xor
sub
add
cli
add
mov
daa
in
pop
jl
ss
jmp
mov
dec
cmp
fs
xchg
test
push
shll
rorb
into
mov
cmp
push
xchg
les
imul
fsubrl
push
or
pop
push
enter
or
into
mov
and
jo
xchg
push
lods
inc
mov
mov
nop
inc
mov
and
subb
adc
xor
divb
and
pop
xchg
add
push
pop
jg
notb
xchg
nop
cmpsb
push
out
mov
fisubrs
cmp
divb
xlat
sub
push
mov
jb
cmpsb
cmp
add
xor
movsl
pop
push
cmovge
push
lods
loope
or
mov
cmc
sbb
ljmp
adc
fstl
dec
mov
loop
cmpsb
inc
sbb
mov
icebp
mov
popa
cmp
in
loopne
pusha
lcall
and
mov
dec
sbb
fnsave
test
xchg
push
enter
fidivrl
dec
insl
pusha
fildl
insl
shlb
shlb
pop
pop
leave
sub
and
jl
xchg
pop
out
sbb
je
je
popa
jmp
pusha
lock
mov
aam
jecxz
nop
negb
and
outsb
test
xchg
and
pop
adc
and
mov
lea
mov
mov
jns
cmpsl
pop
dec
dec
inc
sbb
outsl
arpl
adc
xchg
ficompl
call
mov
jne
xor
shlb
and
mov
pop
inc
in
adc
inc
or
and
or
inc
in
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
cmp
push
mov
adc
test
lods
jp
lea
xor
ret
call
or
jle
popa
push
outsb
je
insb
repz
aaa
jl
jmp
adcb
into
or
adc
das
or
call
jb
pop
cwtl
jns
scas
add
jne
or
inc
inc
stc
scas
lcall
ds
je
pop
jge
mov
iret
js
mov
and
stos
icebp
shll
in
and
enter
lcall
outsl
inc
data16
repnz
mov
cld
add
repz
mov
push
lock
push
aam
jo
das
rclb
stc
roll
adc
inc
mov
or
mov
sar
sbb
push
call
mov
and
lods
mov
sub
and
xor
movsb
push
ja
dec
incl
clc
pop
int
push
loopne
jns
xor
fst
lock
jmp
mov
repnz
loopne
push
lds
xorl
pop
lret
cwtl
jmp
addr16
xchg
pop
mov
mov
jo
incl
aad
pop
fxch
hlt
rorb
jmp
fcomip
mov
mov
mov
dec
mov
push
xchg
push
leave
mov
testb
pop
lahf
test
push
filds
cmp
nop
cmp
push
jge
mov
loop
aaa
mov
dec
movsb
test
int3
orb
cwtl
push
inc
dec
mov
mov
jnp
mov
cmp
cmpsb
cmpb
clc
in
mov
mov
gs
push
xchg
sbb
jb
test
xchg
mov
dec
sub
dec
jmp
mov
xchg
dec
jnp
mov
scas
pop
mov
popf
xchg
pop
jbe
fimuls
wbinvd
idiv
nop
js
fisttpl
jmp
addr16
or
stos
and
xchg
add
je
push
enter
push
or
movsl
inc
and
sbb
test
adc
shll
lahf
imul
cmp
or
lea
sbb
vmovdqa
in
movsb
imul
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
cmc
pop
ljmp
movlps
popa
dec
vmovd
lret
cwtl
sbb
mov
pusha
add
arpl
test
fiaddl
add
ds
xchg
xchg
push
call
lahf
xor
andl
stos
outsb
iret
push
sub
es
pushf
ds
mov
adc
out
nop
stc
xchg
xor
mov
jb
aad
inc
ds
cmp
test
out
cltd
lret
push
jno
shrb
in
xor
in
mov
popa
mov
cs
xor
roll
fdivs
xlat
mov
imul
mov
repnz
inc
sbb
jae
xlat
mov
push
dec
push
xchg
out
insl
aad
iret
jno
xor
aam
cmpsl
in
adc
sub
cmpsb
inc
addb
cmp
cmc
lock
subl
mov
mov
mov
in
push
sahf
sbb
enter
inc
or
mov
push
out
pop
push
sarb
iret
sbbl
xchg
pop
dec
add
xchg
push
xlat
decb
xchg
cmp
daa
mov
test
leave
xchg
cltd
mov
shrb
pop
ficomps
pop
xchg
cld
jle
pop
arpl
cmpb
lahf
insb
cli
dec
or
shll
adc
movsl
lods
pop
sbb
scas
xor
subb
sbbb
imul
pop
fwait
jg
mov
or
xor
fbld
les
inc
loope
inc
sbb
je
xchg
loope
or
mov
push
pushf
inc
cli
xor
sub
push
ja
and
insl
xchg
add
push
subb
pop
mov
mov
sbb
fs
pop
sub
stos
cltd
and
repz
in
mov
int3
cmp
sub
dec
mov
or
and
jnp
dec
mov
fucomi
fbstp
gs
pop
mov
mov
pop
add
arpl
jl
jl
pusha
add
pop
je
js
mov
inc
and
arpl
inc
or
dec
or
shrl
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
fsubrs
loop
ds
dec
popf
in
mov
fisubs
pop
ficompl
insl
and
inc
addb
add
pushf
es
lods
test
stos
jb
dec
loopne
lahf
sahf
mov
test
sbb
add
cmc
sbb
test
mov
pusha
and
jno
xor
mov
cmp
cmp
xor
jno
and
gs
mov
pop
mov
and
inc
xchg
outsl
xor
int3
ljmp
inc
mov
loop
std
movsb
jno
jl
xor
jecxz
bound
cmpsb
sub
adc
push
scas
inc
cmpl
push
fstpl
lahf
jnp
xor
cmp
push
cmovae
pusha
stos
push
repnz
cld
call
adc
xchg
dec
mov
jns
inc
adc
out
add
or
loop
test
pushf
test
faddl
vmovaps
pop
in
sbb
jae
push
imul
loop
and
ret
dec
fsubl
or
dec
popf
sub
pop
test
cmp
sbb
pusha
lock
xchg
std
nop
in
into
push
rcll
out
pusha
shrb
aad
movsb
mov
jmp
mov
push
cmp
addl
daa
test
fwait
pop
push
jp
jge
inc
hlt
adc
push
mov
cmpl
lahf
push
or
add
sub
and
pop
adc
sbbb
sbb
pop
pop
cmp
dec
scas
adc
aam
mov
jge
in
adc
mov
adc
ficomps
fldenv
pop
mov
and
jae
in
loopne
sbbl
loopne
loopne
lods
xlat
pop
xchg
rcrb
outsl
mov
sub
fwait
into
out
frstor
pop
int
inc
rclb
and
sub
xchg
add
mov
cwtl
in
add
mov
mov
mov
icebp
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
sbb
lock
aam
mov
subb
dec
aam
popa
mov
aaa
mov
inc
popa
xlat
dec
pop
jp
loop
pop
ja
int3
sbb
add
fimull
enter
xchg
stc
mov
std
aaa
bts
dec
stc
das
push
ja
cmp
mov
je
stc
cmp
sarl
inc
push
aaa
cli
cmp
add
aam
xchg
xchg
pop
pop
mov
test
mov
stc
mul
roll
mov
xor
or
sbb
es
movsl
mov
sbb
cli
outsb
ss
push
cmove
imul
and
or
daa
in
add
pusha
sbb
loopne
rolb
rcrl
icebp
and
bound
sub
out
in
inc
cmp
mov
fcompl
mov
stos
and
inc
pop
sarl
sbbl
bound
or
out
and
mov
andb
and
ret
adc
xchg
or
iret
add
gs
sub
xchg
sahf
inc
mov
xor
xchg
mov
div
cmp
add
je
push
push
rcrl
ss
imul
inc
lock
sbb
jle
loope
pop
cwtl
mov
int3
repnz
pop
test
out
in
repnz
inc
jmp
pop
and
ljmp
adc
test
jmp
push
xchg
pop
or
jge
adc
ret
xor
ljmp
int
negb
mov
fnstcw
loop
inc
xor
fwait
rcrl
into
xchg
stc
sti
stc
psrld
mov
mov
lods
pop
dec
lds
pop
or
je
scas
outsl
popa
mov
jns
jle
frstor
addr16
ja
nop
rol
decl
out
mov
pop
in
mov
adc
jo
xchg
in
subl
ja
mov
push
loop
pop
scas
pushf
mov
pop
xor
ficoms
mov
mov
aas
sti
cli
mov
jp
mov
xchg
stos
sub
in
mov
push
jno
rdmsr
dec
xchg
stos
jecxz
xchg
pop
ret
imul
xor
scas
data16
sti
fcompl
sar
aad
inc
test
pop
fiaddl
pusha
mov
and
xchg
es
movsl
dec
movsb
cmp
rclb
and
shrl
scas
xchg
xchg
inc
xor
out
mov
mov
int3
or
mov
loopne
sbb
scas
into
loopne
or
push
mov
dec
lcall
cs
in
fisubl
push
lcall
jge
dec
lock
dec
sub
aad
pop
les
imul
fcmovbe
sbb
int3
icebp
sub
cwtl
add
rcll
cmp
int
pop
sbb
mov
mov
ret
imul
jle
xchg
lahf
xchg
lcall
int3
popf
stc
add
jno
inc
fldl2e
mov
add
mov
adc
mov
mov
jmp
repz
mov
scas
push
mov
icebp
push
pop
push
xchg
rorb
sbb
popa
cs
mov
rcrb
in
cmpsl
lds
imul
aas
sahf
pop
push
repnz
cmp
ss
dec
js
hlt
push
sub
xlat
push
insb
insl
lcall
jo
or
push
xor
ror
out
xchg
inc
push
pop
mov
sub
mov
into
cld
xchg
fmull
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
xchg
push
loop
adc
pop
adc
adc
in
das
add
jl
daa
sarb
jp
xor
adc
ss
stos
mov
xor
ret
lret
jb
stos
push
stos
add
xchg
gs
push
push
jae
cmp
inc
adc
jl
jp
jo
sub
lret
sbb
mov
add
cltd
and
mov
mov
shrl
les
pop
mov
pop
insb
or
insb
jge
jns
rcrb
add
rcrl
sbb
mov
dec
sbb
sahf
call
movsl
mov
cmp
neg
pop
into
in
and
cmp
adc
mov
xchg
sub
cmp
and
jbe
adc
mov
stos
inc
mov
popf
ss
es
xor
stos
xchg
lods
das
cmp
iret
sbb
imul
jo
aad
dec
arpl
sbb
adc
into
rorb
push
pop
push
inc
pop
push
dec
es
fistps
mov
mov
in
push
jp
mov
xchg
pop
sbb
push
push
mov
xchg
leave
and
push
fisttps
call
adc
cwtl
dec
lods
cmp
mov
xchg
aad
repnz
push
insl
sub
int
mov
leave
xor
or
adc
lea
jnp
sbb
das
aaa
mov
sbb
ret
inc
add
repz
and
cmc
sbb
cli
inc
imul
sbb
rclb
test
adc
push
add
aam
and
lods
rcl
sahf
cmp
rcrb
add
imul
aad
push
cltd
leave
pop
loopne
test
add
int3
ds
dec
aas
cld
jmp
xor
les
inc
fs
xchg
test
or
into
scas
mov
push
das
mov
shrl
jo
xchg
mov
pop
gs
scas
int
xchg
jmp
jle
xchg
scas
sub
or
mov
mov
push
fiaddl
out
nop
ja
lock
mov
jle
xchg
stos
scas
dec
cmp
test
aas
add
mov
rclb
and
cmp
or
sbb
push
pcmpgtw
cmp
sbbl
out
inc
jo
xor
daa
mov
stc
testb
add
push
popl
mov
sbb
jmp
mov
xor
xor
adcl
ja
xchg
pop
test
adc
fisubl
sub
and
mov
std
cmc
cwtl
push
setns
dec
sub
inc
lahf
sarl
adc
je
in
lret
and
mov
xor
idivl
test
stc
iret
jb
rcl
push
inc
aaa
dec
scas
mov
xchg
jno
shlb
mov
aas
xor
sub
cltd
mov
fnstsw
xchg
aad
ja
adc
mov
test
mov
sbb
adc
mov
push
sbb
xor
pop
dec
sbb
pop
cmp
iret
mov
in
dec
push
mov
shll
fcoml
call
mov
pusha
adc
test
popa
adc
pop
dec
loopne
popf
popf
inc
pushf
sarb
mov
adc
xchg
sbb
call
push
mov
adc
aaa
aam
push
jnp
aad
push
mov
mov
xlat
sahf
inc
add
test
imulb
or
pushf
int3
daa
jo
sti
lret
dec
jbe
xchg
int3
loop
test
sbb
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
fsts
adc
and
adc
push
fisttpl
dec
mov
jecxz
std
push
push
adc
je
pop
das
clc
outsl
lods
stos
push
mulb
ficomps
xlat
sbb
mov
push
in
pop
ljmp
mov
cmp
cmp
xchg
pop
push
mov
xchg
jno
in
bound
aam
xchg
cld
sub
aam
dec
add
std
or
das
inc
add
cwtl
es
scas
xor
cli
aad
dec
mov
mov
je
jmp
push
shrb
fdivrs
pop
repnz
pop
mov
sub
adc
xlat
icebp
push
pop
adc
push
dec
out
addr16
pop
xchg
scas
push
inc
mov
xchg
idivl
test
jae
add
fisubs
mov
das
in
scas
out
out
or
sub
fmull
pusha
outsl
pop
jnp
sbb
mov
jo
das
in
push
icebp
sub
and
movsb
ret
xchg
outsb
fsubr
jl
mov
cwtl
stos
nop
leave
push
push
lret
xchg
lahf
mov
cmp
jae
push
cmp
in
or
and
das
ljmp
test
sub
and
jg
inc
in
or
or
inc
xchg
arpl
je
or
testl
cli
pop
shrb
push
mov
test
in
sub
test
pop
or
pop
int
loope
jmp
shll
cmpb
je
sbb
or
xchg
mov
pop
xor
popf
xchg
repnz
es
sub
inc
aaa
sbb
pop
in
or
es
frstor
mov
and
dec
insb
mov
sahf
pop
test
jo
test
mov
ds
or
mov
dec
dec
das
pop
add
in
lock
andb
lret
or
cmp
mov
jecxz
xchg
imul
shlb
mov
repz
enter
jle
cmp
jae
int3
aas
cmpl
aam
icebp
fwait
cmc
and
push
xorb
dec
push
pop
mov
push
adc
push
xchg
int
dec
xchg
mov
dec
mov
sbb
scas
adc
sub
xchg
jecxz
sub
cmp
dec
mov
jle
jnp
fwait
cmp
cmpsb
mov
fmuls
aas
jne
mov
mov
jmp
xorb
xor
mov
shlb
mov
jp
test
aaa
sub
xchg
repz
shlb
jmp
sbb
add
jle
xor
add
fcomi
mov
popa
repnz
sbb
adcb
je
jo
movsl
stos
mov
iret
int
iret
xchg
int3
cmovae
insb
add
sub
sbb
inc
les
add
inc
enter
add
inc
int3
cmp
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
repnz
xchg
inc
cwtl
push
sti
rcll
lods
rclb
hlt
aad
outsl
mov
aas
cld
mov
pop
stos
pop
add
jl
mov
in
xchg
push
mov
lcall
daa
aas
dec
or
dec
ljmp
pop
imul
int3
adc
cwtl
inc
jno
scas
in
pop
and
jp
pusha
pop
dec
es
orb
ss
xor
aaa
mov
clc
mov
dec
xor
and
inc
ss
mov
aam
xchg
fldcw
sarl
inc
jmp
and
sbb
or
jecxz
xlat
pop
add
in
cmpsb
cmpl
xchg
xor
pop
fimull
adc
pusha
mov
fisubs
add
gs
dec
jge
adc
jae
jecxz
loopne
insb
or
cmp
sub
insl
dec
ret
loopne
fnstenv
loop
xchg
sub
je
add
push
leave
jno
dec
add
into
xchg
jmp
and
stos
mov
push
out
sub
mov
and
inc
and
inc
inc
xor
div
xor
xor
fidivl
push
inc
aam
xor
std
lods
shrb
jnp
mov
inc
fstpt
pop
xchg
cmp
xchg
pop
arpl
mov
pop
hlt
jmp
lds
push
xor
dec
enter
jecxz
pop
push
sub
mov
xchg
add
out
stos
or
aas
je
enter
jl
adc
sti
std
mov
xor
sub
std
pop
aas
ja
mov
aas
out
sbb
fisttpll
cltd
lret
call
xlat
mov
fs
lahf
sub
sub
dec
mov
fildll
sub
and
hlt
outsb
stos
pop
mov
aad
out
or
icebp
aad
inc
mov
inc
cmpsb
adc
shll
push
rcrb
xor
mov
mov
and
ljmp
ret
add
stos
or
dec
xchg
aas
jnp
cmp
das
inc
adc
pop
daa
jne
and
sbb
push
imul
lret
sbb
dec
test
mov
adc
xor
dec
pop
pop
dec
fmul
push
insb
dec
scas
xor
leave
add
call
add
or
imul
push
insb
xor
sbb
ss
push
aaa
ja
mov
or
jp
test
ficoml
inc
fisubl
mov
cmp
jns
cmpsb
shl
sub
cmp
cmpb
pop
pop
jl
mov
cld
cmp
fldcw
pushf
cmp
bound
sub
shlb
pusha
xchg
imull
iret
aaa
pushf
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
jp
add
adc
movlps
mov
popa
outsl
stos
int
inc
cmc
inc
icebp
xor
repz
jne
testl
xchg
data16
pop
push
push
mov
adc
fadd
xor
mov
cmp
pop
push
xor
mov
cmpsb
xchg
andl
mov
sti
lods
jbe
mov
add
mov
clc
lods
add
and
mov
leave
adc
xchg
xchg
pop
cmp
stos
jg
ret
push
xor
add
iret
mov
mov
sbb
mull
insb
outsb
xchg
loop
rcrb
into
lcall
fmulp
cmp
or
into
and
movl
mov
leave
pop
sbb
adc
addr16
jae
dec
mov
or
inc
aam
rolb
xor
stc
add
xchg
dec
pushf
lret
pop
je
mov
adc
mov
je
sti
lock
or
lods
push
mov
sti
add
or
and
mov
push
movsl
inc
dec
pop
stos
mov
and
jne
hlt
sbb
xchg
or
int
orb
and
cmp
xchg
adc
shrl
or
gs
add
cmp
aad
push
pop
pop
jp
lahf
test
sub
daa
sub
pop
popa
js
neg
push
jae
xlat
fisubrs
cmp
data16
inc
imul
adc
xchg
sbb
lock
inc
test
frstor
call
imul
push
add
mov
xor
lods
push
lea
loope
mov
ja
sub
sbb
mov
or
mov
adc
jl
aad
icebp
scas
dec
lahf
mov
cmp
stos
cmpl
add
mov
das
mov
into
pop
push
enter
insl
outsb
inc
xor
es
clc
cmpsl
jno
sbb
das
movsl
sahf
sub
sub
cwtl
cs
int
mov
and
js
mov
int
dec
or
test
add
ja
daa
push
lret
mov
les
lods
shlb
aas
mov
ja
mov
rolb
in
jge
xchg
in
xchg
adc
in
or
xchg
bound
adc
mov
scas
cmpsb
mov
neg
aaa
pop
mov
mov
shlb
mov
lds
sub
movsl
movsl
jae
mov
and
orb
cld
lock
pop
pushf
out
sbb
icebp
mov
mov
or
xchg
or
inc
clc
xor
out
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
xchg
divb
stos
pop
jae
adc
gs
out
lea
outsl
popf
rcrb
jge
add
sub
inc
mov
cli
cmpsl
pop
xchg
pop
xchg
in
and
mov
xor
orl
cwtl
jae
add
cmp
jnp
leave
aas
jb
or
imul
popa
and
dec
xchg
cmp
jbe
ljmp
push
arpl
imul
gs
or
mov
std
aaa
mov
aam
std
jg
hlt
add
aas
shlb
leave
mov
inc
nop
jle
pop
mull
out
jbe
cmp
or
lds
inc
in
pushf
sti
dec
neg
enter
sbb
ds
and
and
out
inc
mov
xchg
pusha
enter
mov
xchg
push
insb
pop
orb
lret
inc
js
shl
pop
test
xor
das
int3
faddl
test
mov
xchg
mov
inc
aam
pop
movsl
je
js
je
cmp
sbb
cs
cld
repz
jmp
addr16
dec
add
pushl
xchg
sub
mov
and
subl
test
adc
pop
pop
sub
repnz
test
adc
xchg
add
add
les
push
ss
dec
cmp
dec
pop
test
pusha
stc
xor
data16
push
daa
out
inc
bound
fnclex
or
gs
fwait
sub
cld
adc
dec
cli
scas
inc
call
mov
sbb
mov
cmc
mov
aam
loope
inc
data16
pop
mov
sub
push
push
or
push
in
pop
ja
nop
ret
jmp
xor
outsl
xchg
add
loope
fdivp
xchg
inc
jo
inc
pop
inc
imul
and
sbb
adc
dec
sbb
out
lahf
into
mov
cli
jns
imul
lea
ja
and
cmpsb
test
jns
or
adc
mov
jne
add
lcall
ss
outsl
cld
pop
dec
aam
shl
mov
cld
push
movsl
or
mov
push
out
pcmpgtb
sbb
pop
xor
aad
loop
sbb
adc
in
add
call
gs
in
dec
and
test
mov
adc
pushf
in
loope
inc
jno
xchg
xlat
imul
add
mov
mov
sub
adc
xlat
popf
int
mov
mov
dec
mov
loope
scas
and
fcmovb
pop
xor
or
cmp
int3
mov
loop
fisubrl
jge
pushf
mov
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
decb
insb
mov
push
xchg
aad
mov
xchg
subl
mov
stos
jae
jb
add
mov
add
sub
cmc
call
test
out
mov
jge
stos
xchg
jbe
jg
or
xchg
adc
push
jno
test
xchg
mov
and
rcrl
pushf
pop
rcll
xor
popa
dec
cli
fidivl
mov
std
sub
push
xchg
xor
mov
xchg
mov
out
mov
cmp
xor
cmpsb
xor
sbb
inc
inc
xchg
mov
shrl
or
cmpb
mov
mov
sub
xlat
ret
enter
andb
test
mov
aam
pushf
mov
mov
inc
sbb
aad
jbe
mov
cmp
movsl
mov
mov
xchg
fimuls
mov
cmpsb
cmpsb
mov
sbb
mov
dec
push
lcall
adc
or
int
push
and
xlat
sbb
xchg
std
xchg
xchg
cmp
hlt
mov
gs
push
ret
jne
fisubrl
dec
xorl
inc
out
push
jge
cmc
pop
dec
cmp
xor
cmpsb
push
lret
sbb
push
sub
xor
je
add
mov
repnz
ror
push
ljmp
add
pop
std
mov
in
popf
stc
jge
sub
mov
andb
fisttps
imul
or
into
mov
or
xor
push
ret
pop
fstl
repnz
fiadds
xchg
nop
cmp
std
sbb
mov
divb
pop
out
ret
icebp
add
ret
test
loop
ret
xor
mov
xor
pop
notb
cld
push
or
inc
mov
mulb
lahf
and
push
cmp
xor
jne,pn
mov
sti
fcomp
movsl
pop
loopne
dec
test
pop
mov
or
sub
dec
outsl
adc
push
add
push
and
sbbl
imul
add
fists
adc
jo
jg
aad
inc
or
xor
cs
outsb
adc
out
out
pop
or
sbb
cwtl
lcall
jle
gs
in
sub
sbb
jg
dec
scas
jb
mov
mov
xchg
data16
ss
dec
mov
hlt
add
push
jno
lock
jmp
arpl
pop
dec
jle
add
adc
dec
ret
or
fucom
fs
imul
loop
dec
mov
in
cs
jbe
jl
lret
sub
jae
pop
jnp
xor
lods
and
aas
fwait
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
lahf
iret
cwtl
lods
repz
or
jmp
xor
data16
lcall
mov
jmp
jo
mov
dec
data16
movsb
cmp
daa
xor
cmp
mov
mov
sbb
clc
sbb
mov
sahf
daa
jmp
test
xor
andb
test
pop
or
rcr
pop
or
mov
sbb
vmulss
lret
jg
xorl
inc
inc
sbb
pop
mov
stos
cmpsl
ja
cwtl
push
sti
ds
and
pop
cmp
sub
mov
stos
xchg
loop
out
test
lea
cmpsl
mov
mov
sbb
ljmp
mov
fidivrl
jmp
xor
pop
push
xchg
stos
loop
jae
pop
jbe
enter
les
lret
and
adcl
out
push
cmp
cs
hlt
xlat
insl
push
out
movsb
sarl
xchg
rol
das
fcmovnb
mov
lahf
cmp
xor
xchg
in
fistpll
fmuls
jg
and
ljmp
cs
jge
pop
jae
aam
leave
shl
adc
mov
lcall
lods
dec
push
mov
push
mov
push
insl
jae
xchg
test
add
cltd
pusha
mov
les
sahf
pop
in
ret
loop
push
rorb
cli
jo,pt
dec
aad
jno
sub
xor
add
adc
lods
data16
and
dec
inc
jnp
jle
inc
cwtl
dec
jb
push
movsl
sub
or
xor
pop
push
and
mov
push
loop
fistl
addr16
sarl
jmp
mov
push
jno
adc
cmp
mul
push
dec
inc
js
in
shrl
or
sar
or
sub
fs
imul
mov
loopne
imul
push
pushf
aam
push
add
xchg
xchg
sbb
imul
pop
in
lahf
js
imul
inc
adc
in
xor
mov
push
sub
fidivrs
stos
inc
mov
test
popa
and
pop
outsb
xor
addr16
mov
add
jno
mov
hlt
repz
adc
pop
sar
fcmovb
mov
test
dec
sbbb
xor
inc
mov
add
lahf
or
mov
outsl
mov
xchg
dec
dec
or
mov
std
pop
push
pop
xor
fs
add
cmc
pop
dec
inc
sarl
fcomi
inc
mov
and
jns
mov
loope
cltd
xor
mov
lock
jo
adc
xchg
inc
shlb
mov
add
add
add
add
push
add
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
out
jp
xor
repz
xchg
mov
js
pop
arpl
fcomi
sub
js
arpl
mov
xor
jae
inc
int
xlat
lods
stos
lds
gs
push
dec
lea
mov
xchg
insl
xorb
data16
lds
jbe
test
in
icebp
xor
movsl
xor
fcoms
pushf
cmp
sahf
adc
inc
in
outsb
mov
popa
xchg
repnz
int3
mov
jecxz
push
pop
sbb
jle
aaa
fstpl
shl
arpl
addr16
mov
imul
adc
or
push
xchg
inc
dec
lcall
js
test
jmp
mov
adc
push
adc
adc
adc
insl
insb
xchg
es
fsubrp
pushf
xor
push
clc
push
std
jne
ret
mov
mov
cmc
jnp
or
add
jge
test
add
and
mov
inc
sub
in
add
ss
and
dec
loop
lret
mov
mov
xchg
push
sub
lods
loope
ret
sbb
scas
aam
aaa
mov
scas
sbb
sbb
int3
mov
andl
rorb
pop
jo
pusha
cwtl
testb
es
inc
push
inc
test
lods
cwtl
xlat
inc
cmp
xchg
pop
dec
xchg
subb
cmp
xorb
stos
sbb
inc
notb
dec
jg
shrl
dec
push
scas
int
mov
mov
or
xchg
add
mov
mov
das
pop
out
sbb
pusha
stc
push
fwait
dec
and
jo
mov
cmp
sti
int
ja
std
sbb
mov
sbb
push
add
cli
jp
ljmp
dec
and
rol
sbb
pop
xor
pushf
cmpl
jmp
jmp
jbe
push
cmp
lret
pop
ret
push
cmp
adc
dec
adc
and
rcl
mov
fxch
repnz
and
inc
sbb
insb
outsl
xchg
jmp
jno
mov
mov
sbb
movsb
sub
add
or
outsb
sub
xchg
mov
pop
dec
dec
bound
int
adc
arpl
cld
dec
test
cltd
out
mov
test
dec
aas
shlb
mov
rcrb
xchg
aad
shl
pop
jle
scas
lods
scas
int
inc
dec
xor
bound
mov
icebp
mov
add
sarl
test
daa
mov
xchg
mov
add
pop
cmpsb
pop
xchg
mov
iret
xchg
push
lock
clc
push
mov
xchg
mov
push
shrl
out
pop
and
add
push
sbb
pop
sahf
mov
adc
sti
mov
or
pop
dec
imul
sub
adc
jmp
arpl
push
aad
ss
mov
bound
out
mov
push
dec
mov
imul
inc
aad
icebp
call
test
pop
fs
dec
js
or
in
mov
in
pusha
movsl
push
jl
inc
jno
pop
mov
dec
push
cmp
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
js
enter
adc
jp
adc
movl
sbb
movsl
sub
ljmp
push
lods
pop
sbb
insb
out
incb
fldcw
mov
push
in
sbb
add
jg
inc
pusha
out
mov
aad
shll
loopne
mov
pop
test
xlat
js
xchg
fs
test
les
sbb
cmpsb
add
mov
pop
jbe
std
cmp
roll
cmpl
sarb
fwait
movsl
notb
clc
pusha
sti
test
push
sbb
aad
dec
adc
mov
and
mov
daa
mov
ret
outsl
and
sub
dec
lret
add
mov
pop
mov
gs
inc
jge
clc
mov
sbb
mov
dec
push
aam
loope
fcoms
add
gs
and
mov
pop
pop
add
test
cmpsb
pop
push
daa
int
jnp
pop
jg
fnstenv
fiadds
inc
cmp
into
jnp
adc
sbb
pushf
lret
fstps
out
pop
xchg
jbe
mov
pushf
out
insb
jmp
pop
out
scas
mov
lcall
repnz
mov
nop
dec
call
sub
jae
jecxz
xchg
push
push
insb
lret
iret
add
ja
or
cltd
mov
push
test
mov
xchg
divb
clc
popa
fldenv
pop
loope
les
cmpsb
arpl
rclb
outsl
sahf
stos
push
lds
mov
out
pop
jbe
dec
xor
fimull
pop
imul
dec
outsb
add
adc
movb
in
mulb
shlb
jmp
cmp
cmp
inc
sub
call
jle
sarl
fcomp
ss
or
add
loop
sbb
outsl
in
cmp
mov
fs
adc
mov
test
inc
add
mov
push
xchg
aas
push
cmp
pop
ret
lea
shlb
mov
add
dec
xchg
mov
add
xlat
ljmp
or
daa
loope
mov
js
fidivrl
popa
imul
pushf
push
lret
jl
mov
mov
rcrb
repnz
pop
insb
repz
add
xchg
ljmp
and
lahf
pop
gs
sahf
xchg
leave
les
cmp
sti
mov
push
ret
cltd
sub
es
fsts
ja,pn
insb
adc
pop
cmpb
sub
xor
push
lock
push
mov
movsl
aam
pop
xlat
pop
icebp
add
jnp
out
and
mov
lods
sub
pop
lds
mov
cmp
inc
insl
mov
je
fmull
test
in
cmp
mov
push
jmp
movsl
push
or
cmpsb
out
popa
add
xor
and
pop
pop
enter
stos
jecxz
xchg
cltd
addr16
mov
adc
mov
test
daa
bound
pop
mov
pushf
adc
daa
mov
adc
lret
inc
adc
dec
jbe
test
lcall
cmp
push
push
cmp
lret
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
pop
loope
jle
pop
adc
jp
adc
cmp
and
mov
jnp
aas
jb
push
fdivrs
loopne
adc
sub
nop
movb
dec
push
jae
jmp
mov
jb
movsb
push
rolb
mov
cwtl
push
imul
or
sbb
and
or
mov
sub
sbb
sub
push
lods
push
popa
pushf
arpl
scas
adc
pop
orb
dec
dec
pop
repz
adc
xchg
aam
pusha
stos
cmp
adc
in
lea
movsl
adc
cwtl
xchg
ja
push
fcomip
fstpt
jmp
shll
int3
popf
jp
pop
out
and
mov
movsl
in
popf
sub
movaps
xchg
jg
mov
and
movsb
lock
popf
or
xor
sub
and
imul
jp
dec
loope
add
add
sbb
ljmp
xchg
insl
jb
int
inc
adc
inc
aaa
jnp
data16
cmpsl
ljmp
or
fisubrl
sub
jb
or
adc
push
in
aaa
adc
jl
mov
call
pop
jl
push
inc
dec
pop
add
fcos
or
mov
rcll
dec
sub
int
mov
es
popa
rep
sub
ret
icebp
mov
sti
inc
das
lret
or
xor
test
mov
sub
jmp
and
cltd
mov
pop
ja
push
and
push
cwtl
jbe
or
sbb
mov
movsb
cmp
mov
mov
push
lea
rcrl
jnp
sbb
pop
or
adc
cmp
mov
stc
cmp
mov
ss
addb
das
and
enter
rolb
dec
push
cmp
jno
mov
sub
lods
and
loop
nop
clc
icebp
xor
jle
pop
cwtl
ljmp
mov
or
clc
jge
mov
inc
adc
dec
jecxz
pop
pop
mov
rolb
cmp
in
insl
push
dec
xchg
cmc
out
xlat
test
push
mov
adc
sbbl
pop
mov
pop
adcl
lret
movsl
cmp
rcrl
dec
ds
mov
sbb
sub
idivb
jb
adc
fsubr
in
mov
cld
push
and
sub
sbb
xchg
push
add
add
sti
xchg
je
mov
jb
jns
ja
test
enter
stos
mov
imul
decb
cmp
xchg
and
pop
inc
jle
mov
lret
push
hlt
dec
cli
inc
rcrb
outsl
mulb
clc
mov
xor
and
mov
outsl
sub
or
mov
and
and
cmp
pop
jmp
mov
or
movsl
leave
hlt
sub
and
adc
mov
mov
and
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
punpckhdq
push
adc
jp
adc
lret
sbb
cwtl
testb
adc
lret
mov
add
mov
push
push
scas
jp
ret
sbb
stos
cmp
lds
sbb
or
jo
bound
mov
inc
or
clc
jns
int3
or
mov
mov
loop
push
and
mov
pop
icebp
popa
and
into
pop
jge
sbb
dec
pop
ljmp
add
mov
or
sti
ret
ret
stos
movsb
mov
loope
add
jl
mov
imul
shll
pop
adc
mov
lock
out
mov
push
loope
lods
in
mov
cmp
adc
add
xorl
xchg
push
mov
jnp
jbe
mov
cld
into
sbb
das
mov
jg
xor
dec
dec
cmpsl
mov
insl
pop
daa
xchg
dec
leave
scas
in
xor
sbb
mov
ret
pop
push
xchg
and
and
xor
call
aam
fimuls
dec
sub
shrl
in
cmp
lret
dec
cmp
push
outsl
adc
imul
rorb
int3
movsl
icebp
leave
cmpsb
jmp
test
sahf
insb
repz
lea
mov
ljmp
jbe
test
mov
fisubrl
enter
add
popf
mov
xchg
lods
inc
sbb
jg
test
int
shlb
mov
add
divb
sbb
inc
cmp
push
xor
ljmp
sub
stc
leave
jae
push
scas
jbe
or
or
pop
xor
loop
inc
cli
sbb
xor
into
xchg
pop
shr
and
xor
scas
mov
add
push
jmp
insb
movl
sbb
subb
mov
gs
jbe
mov
jl
xchg
pop
ds
aad
jge
cli
iret
cmp
imull
ret
sahf
mov
out
iret
pop
fwait
shl
add
lret
and
pushl
push
mov
mov
idivl
sahf
std
call
lret
outsb
lahf
mov
jno
stc
xchg
fs
jmp
cltd
push
sbb
mov
sbb
outsb
icebp
les
mov
adc
in
movsl
mul
jo
xchg
aad
stc
jmp
dec
push
jno
test
jne
and
push
lock
je
cvtdq2ps
jg
jbe
push
sbb
out
cmp
out
dec
xor
fdivs
test
xchg
cmp
into
outsb
sbb
fldt
andl
hlt
push
inc
fstpl
push
movsl
shlb
mov
lock
outsl
enter
push
roll
sahf
dec
xor
ljmp
cmpsl
imull
sbb
and
ljmp
daa
inc
or
and
mov
adc
push
sbb
in
aas
aam
mov
mov
sub
xor
imul
jle
and
push
pop
mov
mov
adc
jp
sub
repnz
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
jp
mov
lea
adc
push
inc
shll
adc
cmp
rcrl
mov
cld
ja
xor
inc
sbb
jbe
jmp
sub
xchg
mov
sbb
add
and
into
addb
pop
movl
les
jns
es
xor
xchg
inc
fnstcw
lret
pop
in
mov
or
out
mov
mov
test
jmp
fidivl
jg
push
inc
stc
sub
or
fistpll
das
fcomp
aaa
or
stos
xchg
mov
lret
sbb
dec
add
or
mov
enter
inc
push
mov
lea
cltd
cmc
cmp
js
sub
cmp
push
nop
aam
movsl
outsl
xor
mov
mov
jge
add
xchg
dec
xor
or
movsb
loop
xor
mov
sti
inc
bound
add
in
xchg
ds
pop
bound
movsb
ret
clc
and
fsts
sahf
pop
pop
sbb
inc
dec
cwtl
ret
mov
add
pusha
xlat
out
test
jp
jp
sbb
lods
sar
movsl
pop
inc
jns
cmp
loope
addr16
dec
sbb
aaa
dec
xor
fadd
and
sahf
jno
push
repz
fidivs
jecxz
addb
pop
aas
mov
jnp
out
ljmp
add
mov
roll
or
pop
pop
pushf
pop
xor
out
bound
loopne
pop
adc
fisubrs
or
xchg
jge,pn
push
mov
mov
mov
or
loop
lds
fs
inc
mov
mov
inc
stos
outsl
sbbl
cmp
xchg
inc
shrl
or
out
jne
pop
test
faddl
lods
pop
adc
mov
in
adcl
sarb
lahf
lahf
sub
leave
dec
bound
jnp
js
mov
in
leave
mov
inc
mov
sub
xchg
adc
adc
sub
mov
sub
mov
dec
or
dec
cmp
mov
sub
mov
lea
lret
sbb
mov
fwait
adc
adc
mov
fldl
inc
dec
in
xor
mov
add
xchg
adc
shll
in
xor
dec
pop
mov
push
pop
into
andl
ret
mov
gs
nop
js
jns
fiadds
inc
inc
sbb
or
inc
pop
les
mov
mov
adc
jmp
xchg
mov
sub
les
loopne
adc
lea
adc
push
out
pop
xlat
in
mov
mov
ja
and
mov
or
add
lock
mov
rorl
mov
testb
mov
test
xchg
imul
inc
fistpll
dec
adc
pop
addr16
loop
arpl
invd
stc
dec
ljmp
aas
outsl
add
ljmp
mov
lock
in
stos
xchg
and
xor
sub
je
mov
pop
int
jnp
push
movups
shlb
in
cli
sub
nop
js
dec
mov
fsubrp
imul
cltd
out
push
int
mov
loopne
and
cmpsl
mov
loop
dec
scas
jecxz
add
jecxz
loop
add
inc
jmp
inc
sbb
fisubrs
pop
out
iret
fdiv
test
lods
out
mov
push
divl
vpopcntq
mov
cmp
jbe
pushf
stos
into
in
arpl
sahf
xchg
loop
out
aas
repz
dec
fwait
test
clc
push
stos
cmp
into
push
sbb
sub
scas
xor
mov
in
xchg
ss
or
sarl
xchg
sbb
leave
inc
test
cltd
dec
imulb
push
mov
stos
vpsubq
push
mov
jns
je
sarl
adc
test
mov
dec
arpl
xchg
mov
sbb
fidivrs
or
adc
jae
xor
aam
add
jmp
add
pop
mov
test
pop
push
mov
pushw
cmpsl
add
and
pop
imul
scas
cmp
or
lods
movsl
and
xor
gs
mov
mov
jle
adc
jbe
ret
scas
rclb
addr16
stos
outsl
pop
xor
cmpsb
popl
daa
xor
pop
dec
outsb
adc
jmp
es
jecxz
sbb
scas
cmp
and
mov
sub
sub
cmc
sbb
aaa
filds
adc
loope
das
xor
je
les
ror
imul
dec
rcll
mov
sahf
in
pop
and
xlat
inc
in
fdiv
sub
xchg
pop
sbb
insl
or
aas
and
ljmp
lret
xlat
add
pusha
adc
repnz
dec
pushf
adc
fsts
mov
adc
dec
mov
jp
fdivl
ljmp
mov
fisttpll
jb
mov
sbb
pop
imul
lret
jp
leave
or
nop
xor
push
or
cmp
add
add
mov
xlat
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
clc
ret
dec
jno
xor
gs
pop
cmc
iret
insl
lock
push
sbb
adc
pop
call
mov
stos
loop
jae
repz
inc
stos
mov
lcall
jae
xor
loope
dec
xor
aaa
mov
aad
fcmovu
jne
fnstenv
hlt
xor
es
or
call
xchg
test
shlb
cmp
sti
lock
dec
xchg
int3
rol
pop
adc
hlt
push
cwtl
push
mov
imul
cli
stos
sub
xor
cltd
cmp
or
sub
ds
int
fs
outsl
imul
fsts
cmp
jae
adc
mov
pop
insb
jp
inc
add
or
ret
inc
js
push
popa
xchg
movsb
jbe
jge
or
pop
adc
sbb
pushf
cwtl
xchg
mov
lods
dec
inc
mov
test
xor
and
inc
lods
inc
test
xor
std
lcall
sub
inc
sub
mov
sub
sub
mov
push
cltd
xor
lods
sub
xor
xlat
pop
lds
sub
dec
cmp
dec
jge
ja
insb
clc
cmp
aas
pop
xor
int
sbb
notb
jbe
add
inc
test
pop
push
addr16
les
out
cmpl
adcb
ds
push
adc
xlat
push
xchg
pop
lea
inc
int3
jo
pop
mov
lret
leave
iret
fistps
sub
push
cmp
mov
xchg
lahf
cmp
inc
outsl
movsb
xchg
iret
pop
les
pop
sbb
fsubs
fstl
add
mov
lods
iret
jb
je
jns
pop
cmp
xchg
push
cmpsl
jge
add
dec
ficompl
iret
or
call
sub
mov
push
dec
inc
sbb
xchg
sbb
dec
jne
cs
push
clc
inc
es
sub
or
mov
negb
fwait
adc
jle
jle
popa
or
loope
std
inc
or
pop
lods
mov
mov
xor
push
inc
jg
sbb
enter
or
dec
lds
xor
out
pop
je
pop
cmpsl
lahf
xchg
xor
test
ret
je
ljmp
mov
test
fdivrs
out
ljmp
push
dec
cmp
andb
into
mov
mov
add
aam
push
jns
repz
jnp
in
jmp
mov
or
das
pop
xchg
es
lahf
mov
pop
sub
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
hlt
push
add
lea
adc
push
mov
fistl
mov
pop
popf
dec
mov
and
js
xchg
push
ret
dec
mov
jb
sbb
sub
fwait
mov
ljmp
bound
adc
cmpsb
mov
test
inc
fmuls
mov
sbb
movl
mov
or
out
ret
inc
insb
inc
roll
sub
mov
pusha
addr16
mov
cli
pop
mov
movq
cmpsb
and
std
and
in
or
jae
or
sub
out
dec
in
es
jg
push
aad
push
dec
insb
or
out
les
or
addb
dec
add
rcrl
das
pop
xchg
pushf
sbb
push
lahf
jp
std
dec
dec
in
pop
cltd
pop
mov
cmp
ret
sti
mov
mov
jge
ret
adc
jl
inc
sbb
or
xor
pop
dec
xor
or
stc
pop
mov
adc
adc
roll
lods
adc
push
inc
xor
or
inc
cmp
nop
inc
out
push
dec
or
xchg
sbb
inc
repnz
and
sub
mov
sub
mov
push
stc
stos
dec
cmpsl
ss
sbb
add
pop
push
push
xor
icebp
filds
mov
cld
xchg
inc
aad
add
cld
adc
mov
inc
shrl
push
es
std
lods
and
mov
jecxz
mov
test
cli
outsb
push
cmp
jle
jnp
xor
insl
lods
iret
ds
inc
das
adc
jns
push
into
jo
mov
sbb
aad
shrb
loop
mov
sti
and
xchg
jns
inc
pop
inc
cld
mov
lock
dec
insl
dec
daa
xor
repz
cli
test
repnz
cmpsl
jns
outsb
scas
dec
pusha
dec
pop
scas
xorl
inc
jb
je
subb
cmp
jl
daa
xor
shrb
outsb
cld
mov
or
xlat
imul
test
fcmovnb
inc
faddl
sbb
iret
out
or
push
repnz
inc
mov
and
xchg
js
sub
jno
xchg
aam
popf
aas
pop
mov
rcll
push
gs
adc
ret
test
push
repnz
js
adc
clc
in
jo
inc
cld
or
xchg
sbb
shlb
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
loope
insb
inc
xor
adc
pop
xor
loope
mov
repnz
cmp
dec
lods
call
hlt
sub
cwtl
or
fwait
sahf
shlb
in
jb
push
and
out
cmpsb
jmp
sub
lcall
mov
out
fwait
sub
inc
inc
adc
mov
push
insb
and
and
jge
or
out
lods
cmp
dec
cmp
or
pop
mov
movsl
popf
aam
lea
mov
fwait
cld
adc
adc
push
shlb
and
push
out
push
or
mov
aaa
sbb
fwait
subb
jp
inc
jmp
leave
out
mov
sbb
out
idivb
sbb
mov
sbb
push
arpl
xchg
mov
in
pop
pop
les
mov
push
test
rcrl
adc
push
mov
mov
rorb
sub
fcompl
sbb
mov
cmpsl
pop
mov
pop
fs
jmp
es
mov
mov
daa
lcall
pusha
loop
push
push
or
sbb
ljmp
pop
popf
mov
cs
push
mov
insl
dec
out
in
insl
and
data16
fdivl
fisttpl
inc
scas
mov
xchg
adc
shll
sub
or
in
cltd
movsl
cmpsb
push
mov
push
das
add
cmpsb
pop
or
mov
clc
xor
xchg
cmp
orl
daa
pusha
or
jae
lahf
cli
jmp
add
mov
sub
popa
and
negl
or
xlat
add
bound
popa
adc
sub
shlb
xchg
idiv
cwtl
lret
xor
scas
mov
and
xchg
sbb
adc
inc
in
mov
cmpsl
shl
mov
mov
fsubp
or
scas
lds
xor
push
mov
jle
pop
mov
sbb
cmp
mov
outsl
push
lea
fisubrs
and
xchg
sbb
pop
call
jmp
addb
dec
lock
push
in
sub
into
xor
mov
movsb
dec
mov
lea
dec
in
add
mov
sarb
sbb
je
test
adc
pop
aaa
mov
adcb
inc
mov
fwait
aas
mov
movq
mov
ja
dec
mov
mov
pop
aaa
movsb
leave
outsl
iret
maxps
pop
bound
mov
cld
jle
mov
sti
in
inc
in
cmp
push
stos
and
adc
mov
adc
enter
add
adc
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
push
icebp
stos
mov
movlps
das
jecxz
sbb
cmpsl
mov
and
lock
mov
add
mov
or
std
cmpsl
inc
pop
mov
fidivrs
dec
cmpsb
es
xor
push
inc
decl
jbe
mov
addl
xor
mov
imul
mov
clc
push
loop
movsl
adc
sbb
clc
insl
jns
mov
push
js
mov
xchg
jg
push
aad
mov
sar
ret
out
lea
popf
stos
sub
test
sub
popa
jae
sub
cmp
dec
outsl
jns
scas
push
lret
inc
rcll
and
inc
inc
add
jecxz
adc
imul
in
nop
int3
inc
rcr
enter
jmp
push
ds
add
dec
cmp
ficoms
jl
clc
dec
sti
cmc
loopne
jecxz
loop
pusha
jae
in
fidivrs
xchg
jnp
ljmp
adc
pop
int
push
out
add
loop
jecxz
decl
sbb
jle
add
cmp
or
sub
adc
pusha
sub
and
lret
inc
inc
popf
dec
stos
jnp
mov
bnd
add
je
pop
lods
and
cmc
aaa
mov
ja
mov
fdivr
push
ret
add
faddl
jg
shrl
xor
leave
popf
lock
xchg
sub
loop
or
ret
push
movsl
or
xor
jnp
inc
jl
loope
push
jle
loop
or
push
xchg
mov
into
jne
xor
fidivrs
daa
mov
dec
pop
add
fdivrl
movsb
int
mov
xchg
outsl
in
mov
lds
xchg
inc
mov
and
imul
popf
jg
hlt
repnz
pop
std
enter
add
and
movsb
mov
leave
mulb
pop
cmp
cld
adc
xchg
sahf
and
add
xchg
jg
movl
sub
jl
lock
arpl
aad
push
push
jo
mov
iret
push
mov
inc
loopne
nop
loop
dec
jp
lret
xchg
outsl
xor
jl
push
mov
lahf
mov
shr
icebp
lods
jb
sbb
pusha
mov
jle
jl
out
loopne
xor
loop
je
fldcw
mov
bound
in
pop
clc
aam
int3
pop
int3
jmp
and
add
cwtl
fisubs
sbb
les
cmpsb
sahf
scas
jge
jne
mov
nop
sbb
ret
jne
cs
dec
or
xor
or
push
add
jmp
and
lods
and
js
fldcw
daa
adc
lea
adc
fsts
das
fwait
inc
arpl
push
outsb
jbe
cmpsl
dec
movsl
push
test
dec
jg
mov
lahf
add
iret
aas
sbb
or
xor
pop
or
add
scas
dec
ss
ret
jge
adc
xchg
sub
push
mov
push
cs
pushf
fadds
jecxz
fstl
xchg
aas
enter
xor
inc
mov
sub
insb
lods
mov
mov
repz
jmp
sti
lock
in
popa
push
int
arpl
repnz
icebp
inc
pop
or
into
pop
or
adc
jl
out
inc
pop
imul
push
push
add
mov
iret
testb
leave
hlt
sbb
inc
push
dec
mov
in
rclb
fs
mov
jbe
add
inc
aas
adc
xor
fwait
cmp
mov
stos
xchg
xor
roll
push
xchg
std
inc
or
dec
xchg
lcall
pushf
mov
dec
push
fs
ljmp
cwtl
lahf
sbb
into
icebp
or
out
mov
push
insl
jb
xchg
fldt
inc
popf
pop
addr16
popa
push
mov
push
add
mov
jle
jbe
add
and
roll
popf
adc
mov
bound
repz
jne
fsubs
mov
aam
sub
dec
sbb
enter
pop
or
packssdw
fisttpl
cltd
xor
cld
xchg
push
xchg
aad
dec
xor
adcl
pop
mov
test
bswap
cmp
notl
push
jnp
fwait
jno
mov
adc
sbb
test
mov
mov
mov
dec
hlt
ljmp
insb
cmp
jle
in
inc
push
xchg
and
jmp
mov
xchg
sbb
sub
rcl
ret
jp
ja
cmpsl
in
push
and
inc
stos
jbe,pt
pop
mov
pushl
and
dec
aam
xchg
mov
push
mov
push
xor
cltd
test
lock
mov
inc
clc
cmp
xchg
pop
pop
movsb
idivb
mov
repnz
nop
lea
mov
negl
or
push
mov
mov
addb
insb
cwtl
aaa
jle
add
jp
pop
repnz
dec
dec
dec
cmp
jo
scas
dec
rcrb
movsb
stc
xor
jge
jl
test
ljmp
test
fstpl
lret
sbb
mov
pop
or
jb
mov
dec
orb
or
sub
inc
push
lea
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
das
xchg
pop
loopne
shll
and
mov
fisubrs
add
adc
cmpsb
sub
add
es
aaa
xchg
inc
imul
repnz
outsl
adc
icebp
cmp
imul
cmp
push
addr16
ret
adc
adc
ret
pusha
sbb
pop
mov
dec
ja
add
sbb
push
stos
mov
insl
adc
fwait
mov
popa
stos
fstl
dec
sub
lcall
pop
sahf
adc
lcall
ret
nop
ror
pushf
adc
cmp
adc
loope
mov
dec
mov
cmpsl
xchg
std
sbb
cmp
scas
cmpsl
roll
out
shll
pop
add
and
in
lods
cmp
push
fstpt
lods
jge
or
and
add
lea
mov
and
sub
lds
pop
lea
jae
cmp
out
test
jecxz
lcallw
push
jecxz
aaa
dec
cmp
jmp
dec
cmpsl
nop
sbb
jne
inc
inc
repnz
es
jp
fisubs
movb
jb
outsb
xchg
lret
arpl
in
insb
or
inc
sbb
mov
push
daa
push
lods
imul
lods
into
pop
leave
ret
mov
shr
fisubrl
sub
add
je
mov
cmp
cmp
xor
mov
fldcw
lock
dec
mov
scas
hlt
sub
enter
outsl
xchg
mov
int
rol
cmp
xor
dec
mov
fmull
pop
jne
test
mov
jmp
sbb
mov
mov
in
inc
push
pop
ljmp
sbb
mov
inc
push
icebp
push
mov
inc
movsb
lcall
rdpmc
mov
addb
ds
inc
add
or
xor
icebp
ja
xchg
lahf
scas
mov
fsub
rorl
adc
pop
mov
insb
loop
cltd
sbb
fnstenv
aaa
repz
jo
pop
call
lret
lahf
push
shrb
fs
push
xchg
pop
xor
sub
xchg
insb
xchg
push
enter
xlat
sbb
nop
cmp
sub
sbb
dec
push
sahf
xor
stc
pop
mov
ret
popf
arpl
mov
add
cmpsl
pop
mov
les
mov
loop
fcmovne
lods
aam
sbb
cmp
push
dec
xchg
add
xchg
outsl
fcomps
mov
push
ss
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
lret
sbb
adc
movsl
inc
xor
pop
mov
push
or
jmp
inc
cmp
jbe
rclb
in
jbe
cmp
push
repnz
push
bswap
dec
pop
adc
and
push
cmp
lret
shll
and
sub
int3
scas
sbb
mov
push
ret
push
shl
lahf
insl
or
jae
or
cmp
cmpsb
xor
mov
aad
adc
lcall
xchg
add
sbb
out
mov
sbb
xor
push
gs
nop
mov
jne
scas
sbb
test
call
xlat
add
xchg
lahf
mov
inc
lock
cmp
fisubrl
clc
mov
test
call
ret
sbb
les
pop
mov
push
outsb
pop
xchg
xor
and
repnz
push
das
cmp
xchg
iret
mov
sub
fs
push
inc
dec
add
sbb
push
pop
movsl
arpl
lea
jmp
lcall
iret
xor
aam
xchg
bound
adc
lock
jbe
adcb
sbb
sub
pop
fsubl
scas
ret
out
and
rolb
sbb
sub
data16
cmp
test
jnp
insl
shll
sbb
aas
fnsave
insb
dec
cmp
push
mov
pop
sub
les
and
xor
pop
scas
mov
sbb
fmull
xchg
or
jle
inc
arpl
or
ds
test
test
push
fsts
push
or
rcll
lods
js
xor
adc
xchg
add
cltd
dec
rol
imul
ret
fisubrl
sub
mov
fwait
or
xchg
lea
add
mov
sub
pusha
in
add
and
aam
sub
sbb
addr16
aaa
data16
jb
js
mov
adcl
test
and
adcl
cmpsl
dec
arpl
js
inc
cmpsb
adc
sbb
push
push
loope
or
popf
mov
outsb
rorb
decl
int
cltd
pop
cmp
test
std
push
adc
xchg
shll
fildll
add
scas
mov
sbb
push
sbb
cwtl
sub
mov
lods
sbb
push
lds
pop
lods
in
sahf
arpl
mov
mov
in
mov
fsubp
cmp
in
scas
push
shr
mov
stos
lahf
mov
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
xlat
fiadds
nop
sbb
adc
inc
jo
sbb
jb
push
pop
jmp
xor
push
mov
mov
pop
daa
sub
mov
mov
xlat
jae
insb
jmp
sub
in
mov
loop
into
mov
jo
push
aam
mov
cmpsl
stos
arpl
adc
loope
jb
fwait
adc
and
lret
fs
mov
mov
pop
xchg
ret
pop
test
mov
pop
stc
jo
pop
add
decb
sahf
dec
push
xchg
repnz
sbb
rolb
push
int
push
fxch
mov
cmp
stc
xor
cmc
xor
mov
and
roll
add
in
and
fwait
add
movsb
sub
int3
jg
lahf
stc
test
push
in
mov
ja
lds
jmp
mov
dec
mov
pop
stos
je
dec
idivl
sbb
stos
or
cmp
andb
pushf
imul
and
and
ds
xor
xchg
filds
lds
rcll
jg
and
out
fidivrs
sbb
mov
or
lods
dec
pushf
add
dec
xchg
fxam
dec
xor
sub
lds
sbb
std
xchg
les
cmpsb
mov
or
imul
pusha
nop
das
icebp
rorb
std
add
movl
adc
xchg
je
mov
in
or
out
add
pop
push
cmp
js
stc
call
jb
mov
movsb
pop
mov
cmpsb
sub
mov
je
loop
addl
xchg
and
jecxz
loope
repnz
cmpsb
mov
shlb
push
inc
push
add
xchg
dec
jmp
pop
nop
sbb
jae
and
aad
dec
cmp
pop
popa
jns
push
loope
push
popf
insb
lcall
xchg
and
call
pop
into
push
push
sbb
add
jbe
mov
sbb
aad
aas
inc
icebp
inc
cld
cwtl
gs
iret
imul
cmp
pushf
repz
mov
mov
xor
jge
nop
mov
add
call
daa
cmp
into
pushf
mov
cmpb
out
cmp
inc
rcrl
xchg
cmp
mov
lds
in
xor
fwait
sub
pop
add
arpl
sti
loop
je
mov
cmp
mov
insb
cltd
push
push
test
push
add
cmp
ljmp
scas
push
push
neg
fidivrs
and
push
std
aaa
dec
xchg
jns
xchg
pop
xchg
push
mov
sbb
lods
cld
pop
int3
fidivrs
sub
inc
sub
adc
xor
aam
imul
in
ja,pt
inc
mov
test
repz
sti
adc
lea
ja
cmp
push
aam
cmp
adc
sti
sub
clc
or
hlt
push
sbb
inc
jae
sbb
inc
int3
jp
divl
subl
add
insb
mov
sub
imul
adc
adc
ret
pop
pop
mov
outsl
jnp
dec
pop
sbb
mov
jle
into
je
popf
sar
jg
in
popf
push
test
cmp
scas
lret
mov
sub
pop
mov
mov
scas
dec
inc
adc
jecxz
cli
je
xor
aaa
nop
es
adc
jne
push
jne
shr
mov
sub
std
push
mov
or
add
inc
mov
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
jne
insb
aaa
unpckhps
mov
gs
fs
add
loope
fwait
imul
add
or
call
push
pop
add
orb
mov
aaa
repz
sub
ljmp
xor
push
in
or
mov
aas
lcall
testl
push
call
in
sub
or
xorb
idiv
mov
gs
in
cld
add
push
into
pop
adc
in
and
movb
push
or
popa
aaa
ja
jl
lcall
or
cmp
lea
mov
scas
mov
rolb
fdivl
mov
sub
add
push
leave
insl
decl
cmp
dec
sub
pop
xlat
push
loop
outsl
mov
dec
add
pushf
jns
fwait
add
push
mul
sub
pop
mov
lods
fnsave
fidivl
insb
and
sbb
add
mov
cs
repnz
xchg
outsb
cmp
rcll
and
mov
adc
dec
inc
pushf
in
popa
push
ret
xor
and
les
inc
jecxz
outsl
inc
pop
xorl
dec
fstp
out
das
fisubl
loopne
std
lods
mov
jnp
or
inc
jno
push
adc
jmp
push
ret
loop,pn
cltd
outsb
mov
sbb
inc
cmc
sub
jecxz
and
push
fwait
xor
daa
add
fsubs
aaa
cmp
sbbl
adc
inc
in
out
mov
aam
sub
dec
gs
add
fistpll
cmpsl
imul
push
scas
inc
sbb
shll
adc
lds
inc
xchg
movsb
das
roll
testb
push
js
sbb
xchg
aaa
outsl
inc
adc
adc
in
xor
xor
fdiv
fdivrl
push
lret
cmp
mov
add
jl
dec
and
ret
pushf
pop
dec
add
pop
mov
in
das
mov
adc
int3
mov
and
into
add
add
sub
sbb
inc
mov
pop
mov
sti
xchg
outsb
adcb
iret
out
xchg
dec
lret
imull
pop
cmp
push
jns
gs
cmpl
fmul
arpl
popa
mov
incb
xor
mul
fimull
and
mov
fwait
out
pusha
scas
fs
out
mov
push
xchg
mov
cmpsb
push
pusha
mov
xor
inc
pop
fwait
pop
in
jg
fcoms
aas
inc
ret
iret
ret
pusha
or
dec
stos
jmp
insl
push
mov
outsb
inc
fs
mov
ljmp
dec
jg
icebp
das
sbb
loop
add
aas
mov
push
rclb
movsl
popf
scas
mov
xor
aaa
cmp
dec
in
sbb
ljmp
mov
cmp
fs
xchg
js
adc
fnstcw
popl
into
pop
push
push
stc
xchg
xchg
insl
aam
frstor
mov
pop
test
popa
mov
pop
xchg
addl
dec
lcall
sub
push
sub
cltd
mov
maxps
adc
add
out
xor
outsl
add
aam
xor
mov
cs
adc
mov
cld
rcll
or
cmp
cs
ret
and
es
mov
push
jae
pusha
cmpsb
lea
jb
bound
leave
jnp
add
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
js
pop
adc
adc
lret
lods
inc
jns
out
shlb
dec
jne
add
repz
or
jnp
dec
cwtl
xchg
imul
and
add
clc
lods
push
sub
xor
adc
fidivl
dec
jg
inc
xchg
cmpsl
adc
call
test
jecxz
stos
xchg
push
jg
add
push
cs
dec
add
mov
mov
pusha
arpl
mov
jmp
add
sub
out
hlt
pause
xlat
scas
clc
js
outsl
xor
sbb
out
cmpsl
addb
jmp
int
mov
add
ss
mov
jmp
jbe
push
xchg
hlt
add
jb
repnz
adc
or
ja
insb
test
cmpsl
jne
sub
filds
sub
std
clc
pop
add
mov
fildl
ljmp
repnz
fsts
loopne
push
sub
je
xor
dec
fistpll
test
lahf
lods
das
ret
ljmp
mov
push
xorl
imul
imul
jl
jns
cld
stos
fadd
loopne
push
scas
pop
pop
push
xor
or
js
addr16
mov
out
aas
push
or
xchg
js
cmp
filds
and
stos
mov
adc
fnstcw
add
pop
adc
jge
sbb
int
fidivrl
daa
lret
mov
jmp
push
jno
lret
push
or
mov
adc
jecxz
cli
lcall
insb
or
stos
dec
push
dec
testb
and
out
inc
rclb
fisubrl
call
jnp
pop
xor
rcrl
xor
mov
nop
cmc
repnz
daa
mov
sbb
shlb
mov
in
push
arpl
pop
inc
or
rcrb
mov
lea
add
push
sub
addb
push
out
loopne
ret
cs
xchg
out
sbb
and
jl
jae
push
pop
add
jle
xchg
pop
ret
pop
or
mov
jg
ret
sub
pop
jmp
mov
add
lahf
push
mov
cmp
and
insb
push
in
shll
ds
icebp
inc
andb
cmpsl
or
cmpsb
test
mov
sub
fsts
pop
test
dec
mov
xor
pop
repz
pop
dec
aaa
inc
stos
mov
test
mov
cs
imul
sbb
cld
ljmp
xchg
sbb
outsl
andl
cmp
sarl
jns
fisubrs
xchg
mov
sub
mov
mov
dec
aaa
je
shll
into
jns
out
icebp
movsb
dec
inc
test
mov
push
or
in
repz
jmp
movsb
cmp
jb
bound
shlb
adc
repz
jecxz
jmp
add
pop
clc
jnp
lods
fs
add
mov
int3
fwait
outsl
xchg
iret
xor
outsl
dec
pop
sub
pop
sbb
dec
adc
jne
sahf
out
fcompl
dec
pusha
or
cmpsb
fwait
rcl
mov
daa
adcl
cmpsb
sbb
dec
mov
fnstenv
roll
jno
sbb
hlt
scas
fcompl
hlt
sbbl
sub
pop
adc
cmp
jns
scas
cmp
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
in
mov
movlps
pop
js
xor
mov
sbb
cmp
jmp
mov
into
inc
mov
stos
insb
add
dec
inc
out
or
add
lds
dec
iret
push
cltd
push
mov
scas
mov
in
mov
data16
pushf
aas
cmp
fstl
pop
xchg
addr16
out
mov
cmpsb
pop
les
jnp
enter
adc
cmp
call
int
int3
adc
push
call
adc
xchg
sub
mov
pop
std
adc
mov
aad
shlb
push
gs
pop
xchg
aas
adc
fdivl
ja
in
lock
cs
cmp
or
add
in
repz
out
xchg
scas
aas
cmp
je
inc
repnz
mov
insb
xor
push
les
and
push
push
pop
fnstcw
pop
iret
jecxz
adc
imul
loopne
in
enter
or
mov
stc
or
test
and
imul
mov
sahf
stos
jmp
lock
cmp
push
aaa
xor
xchg
adc
mov
fucomi
lret
sti
pop
test
xor
out
test
mov
int3
and
mov
gs
outsl
roll
out
mov
or
xchg
dec
lods
pop
sub
aad
lock
add
lock
mov
pop
mov
popf
xlat
vpacksswb
gs
sub
arpl
fisttpl
xor
jnp
push
mov
flds
into
clc
sub
mov
and
imul
mov
imul
ja
or
jle
test
lcall
ss
xchg
add
loop
mov
movsl
mov
fsubrl
mov
or
add
sbb
je
ljmp
insl
lret
push
jns
cmp
mov
cmp
out
int3
mov
lds
daa
jg
and
mov
data16
aam
xor
adc
repnz
xchg
push
pop
mov
sub
cwtl
sub
sahf
inc
push
pand
pop
inc
lahf
adcb
and
jne
lahf
cld
jb
mov
sbb
mov
xlat
push
cmp
or
push
cld
mov
cmc
push
push
imul
data16
push
lea
hlt
shrb
push
jno
mov
xor
add
enter
inc
pop
jmp
addb
sbb
push
mov
inc
mov
pop
xchg
das
dec
outsl
mov
negb
mov
jo
pushl
pop
enter
sbb
add
inc
and
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
icebp
inc
stos
or
adc
adc
jne
sbb
pop
repz
ds
ret
repz
jge
mov
ds
xlat
je
out
loopne
call
jp
xor
aam
ficomps
mov
inc
xchg
dec
xchg
js
cmpsl
sbb
dec
jnp
stc
mov
add
push
aas
cmp
cmpsl
in
aaa
lret
mov
cmp
pusha
jmp
jg
bnd
pop
and
cltd
shll
movsl
pop
mov
clc
or
fistpll
fdivr
adc
loope
add
dec
enter
lds
dec
lods
ss
xchg
adc
sbb
mov
mov
dec
out
mov
call
subl
jle
sub
stc
xchg
iret
mov
cmpsb
test
test
mov
mov
test
loop
mull
add
fistpl
inc
enter
stc
scas
sub
loopne
cmp
inc
jl
ret
inc
popf
je
incb
sbb
jl
jb
out
aad
push
imul
cmp
mov
cmpsb
shrl
pusha
push
mov
scas
in
xor
or
mov
jmp
cmp
mov
pop
loope
or
push
movsb
xchg
mov
add
lahf
cli
cwtl
js
outsl
cltd
jmp
and
in
popf
xchg
addb
mov
sbb
xor
repnz
ljmp
jno
in
fidivrs
mov
pop
adc
adc
adc
xchg
adc
sub
stc
xor
lret
inc
mov
aam
sbb
adc
lret
jno
dec
fs
stos
sbb
cli
aad
add
xchg
mov
lods
xchg
lock
inc
mov
fidivl
pop
and
shll
movsl
cmp
xor
and
testl
sbb
inc
inc
or
cmpsl
jl
std
call
mov
mov
adc
xor
sahf
and
mov
andb
pop
adc
pop
movsb
int3
xor
sbb
andl
add
mov
stos
stc
dec
xchg
or
shlb
leave
mov
pusha
popl
iret
cmp
mov
jge
jae
jl
mov
in
bound
inc
addr16
movsb
in
xchg
inc
ljmp
pop
or
subl
add
push
mov
insl
fdivl
aam
clc
mov
dec
mov
sbb
out
sti
mov
ret
cld
lods
push
cmpsb
sar
xchg
add
inc
outsb
decl
or
les
xchg
je
stos
daa
push
xor
pop
push
addr16
insl
mov
sub
movl
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
mov
adc
adc
ss
mov
out
aas
xchg
xor
pop
cmp
and
and
pushf
test
fldt
add
adc
push
mov
mov
cltd
ret
pop
xchg
sbb
nop
cltd
and
outsl
ret
and
xor
jb
pop
mov
shlb
jbe
es
jmp
movsl
dec
loop
lea
icebp
popl
inc
mov
and
and
cmc
sbb
fwait
out
jp
ljmp
je
lret
mov
outsb
sbb
and
mov
fcomps
lods
xor
jb
cs
lcall
adc
cmp
scas
push
push
arpl
out
mov
sbb
mov
sub
jmp
push
ret
add
scas
les
push
and
dec
cmp
fcoms
ljmp
jmp
jno
imul
cmp
lea
cmp
sbb
daa
cmp
arpl
cmp
jmp
clc
jecxz
mov
adc
push
shll
push
mov
test
cld
or
test
addl
or
bound
mov
push
cli
int
lock
or
test
push
das
dec
test
les
cmp
mov
das
dec
inc
int3
pop
mov
std
pop
adc
lret
dec
push
leave
in
xchg
outsb
inc
rorl
push
add
mov
mov
ja
mov
push
jp
shl
dec
sbbl
sub
fcmove
push
inc
pop
adc
data16
clc
cmp
xchg
mov
arpl
andb
adc
push
push
sbb
pop
aad
mov
xor
sbbl
cmpb
jo
outsl
sbb
movsl
push
je
push
jge
xor
movsl
test
xor
xor
js
imul
mov
jno
ljmp
ret
xchg
fld
sub
leave
aaa
cli
xchg
mov
adc
insl
dec
jns
movsb
out
push
imull
loopne
add
xchg
xor
xlat
leave
cltd
sbb
shrl
jg
sub
jmp
and
or
push
ret
das
mov
lahf
and
or
or
pushf
and
or
incl
sub
push
aam
mov
inc
sbb
aad
cld
and
pop
mov
mov
xchg
dec
insb
cmp
pop
mov
pop
outsl
pusha
das
in
fmull
rcl
adc
adc
ret
add
mov
add
sub
movl
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
jge
lods
push
out
adc
adc
push
fiadds
xchg
std
or
pop
je
cltd
xor
rol
mov
insb
cmp
rcl
sub
and
and
xchg
cld
jbe
jmp
jle
lcall
pop
jmp
shrb
cltd
int
mov
and
iret
mov
jb
sti
mov
lcall
movsl
xor
mov
shlb
iret
adc
gs
das
sub
ss
mov
push
push
xchg
pop
or
fisttpl
xor
mov
sub
adc
fisubrs
push
xchg
dec
add
sbb
and
lods
xlat
dec
sub
clc
pop
push
nop
divb
add
dec
push
std
inc
mov
in
cs
fucomip
or
icebp
fsts
add
xchg
ret
shlb
inc
mov
mov
in
push
pop
fcompl
ret
in
and
mov
cmpsb
dec
push
add
inc
fidivs
cmc
jp
test
or
mov
ss
leave
rorb
jmp
arpl
repnz
sbb
cmp
push
mov
sub
sti
mov
cmp
push
aas
mov
bound
and
mov
and
aaa
jne
imul
dec
iretw
scas
arpl
cmpsb
dec
dec
xchg
inc
mov
cs
jmp
jns
push
cmp
cld
jge
pushf
mov
jge
sub
leave
repnz
sarl
add
sti
shr
sahf
pop
xchg
cltd
mov
xchg
shll
fdiv
adc
or
jmp
inc
inc
xchg
cmp
pop
xchg
popa
std
fldt
jae
lret
push
fstpt
adc
push
sti
dec
lret
stos
jecxz
xchg
pop
adc
repz
je
cltd
push
sub
xor
xchg
sub
adc
loopne
sbb
arpl
loope
call
out
pop
lahf
mov
in
fs
lret
nop
in
movl
and
and
pop
push
mov
add
xchg
inc
dec
lret
repz
cltd
or
jecxz
inc
arpl
mov
mov
das
mov
xchg
sti
mov
inc
enter
in
and
jle
jge
aaa
dec
cld
popa
xor
push
jae
sbb
lods
xchg
pop
xor
jp
push
mov
mov
out
xor
adc
push
xor
dec
xchg
adc
call
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
ja
cmpsb
js
in
adc
adc
mov
loope
xlat
enter
xor
jecxz
fisubrs
rorb
aas
leave
add
call
bound
mov
jae
scas
sbb
mov
jnp
xchg
repz
adc
popf
sqrtps
imul
sub
imul
add
mov
imul
dec
repz
std
mov
ljmp
int
das
sub
xor
pushf
sub
repnz
mov
scas
push
shlb
add
jg
xchg
cmp
mov
ret
jge
pop
dec
sahf
push
enter
sbbb
jle
loopne
mov
js
ret
sbb
jnp
mov
xor
and
jne
in
mov
mov
xlat
dec
jmp
xor
cmpsb
push
mov
inc
fldcw
addb
cltd
mov
push
mov
fsubrs
fnsave
push
flds
dec
pop
or
jge
jp
lods
inc
je
add
xchg
bound
push
adc
subb
test
sbb
fstpl
gs
or
jne
mov
mov
cmp
outsl
rclb
mov
sbb
das
cmp
nop
adc
xchg
fstp
das
sbb
xchg
pop
mov
loope
sbb
sarl
and
and
movsl
sahf
fldt
xor
insb
pop
test
lods
adc
inc
mov
lcall
fistpll
jbe
cltd
fsubs
jle
push
pop
mov
push
sarl
mov
xor
lahf
hlt
lea
sub
jo
push
ret
xor
bound
pop
xchg
popa
insb
xchg
pop
enter
shr
pop
fcompl
test
insb
ljmp
cld
or
test
add
lahf
out
mov
push
outsb
add
inc
js
lret
xor
gs
fbld
xor
inc
aam
jp
lods
or
mov
cmp
cld
or
push
mov
jno
mov
add
mov
and
nop
inc
fsubs
mov
loopne
stc
push
xchg
lcall
lret
push
lcall
dec
mov
sub
ret
into
mov
movsb
das
inc
or
xlat
fs
pop
push
js
andb
pop
mov
lcall
sub
test
sub
dec
loope
test
jecxz
add
ret
sbb
mov
out
and
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
lcall
adc
cmpsl
fistpl
add
mov
mov
aas
jge
jno
dec
pop
lret
xor
sbb
loop
subb
lahf
push
mov
sub
je
pusha
lcall
in
jbe
inc
ljmp
orb
in
inc
push
pop
inc
cwtl
enter
jecxz
aam
sbb
stc
les
stc
scas
xchg
jae
fists
nop
out
cli
aad
repz
mov
call
or
je
jns
jns
insb
icebp
lea
jge
sub
mov
insl
pop
mov
shll
loope
fsubs
dec
cmc
scas
mov
push
je
lods
dec
loope
mov
cmp
fistpl
inc
sbb
xor
xor
divb
mov
push
test
sub
xor
mov
dec
cmp
fisttpl
popf
pushf
cmp
or
fs
stos
push
iret
push
call
bound
push
pop
cli
dec
sahf
lahf
fs
cltd
arpl
sbb
fstl
mov
lds
pop
cs
inc
mov
push
adc
fsubr
xchg
sbb
mov
xchg
cmp
fdivp
or
lods
and
jge
mov
ret
jae
ja
flds
mov
dec
jns
jp
or
insl
aam
xor
adcl
pop
test
iret
and
adc
js
inc
or
add
mov
pushf
leave
cmc
outsl
adc
add
scas
fwait
jns
xor
mov
add
push
dec
cmpsl
add
or
int3
shrb
dec
xchg
outsl
inc
ret
or
arpl
inc
push
shlb
cmp
sbb
mov
mov
xchg
xor
cmc
je
sti
rsm
and
mov
cmp
mov
sub
testl
mov
outsb
lock
inc
xchg
xor
lahf
loopne
mov
adc
cmp
testb
stos
mov
mov
and
and
sbb
mov
cmp
sbb
das
cmp
xor
inc
imul
mov
fcmovnu
add
in
push
xor
inc
jmp
das
leave
inc
test
cmpsb
or
xor
lret
adcl
or
enter
inc
xchg
dec
test
sub
mov
mov
mov
sbb
push
les
fistpl
sub
stc
jecxz
fbstp
push
mov
popa
mov
cmc
sub
icebp
lea
lret
aaa
cli
in
xor
in
or
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
push
loopne
adc
icebp
mov
dec
cmp
xlat
stos
std
sub
leave
pop
bound
icebp
sahf
xchg
pop
shrb
mov
jb
cmp
js
jnp
push
inc
add
sbb
lahf
js
mov
cld
add
jbe
or
dec
pop
adc
test
or
pushf
mov
js
inc
loopne
sbb
mov
sub
adc
push
mov
push
mov
dec
fdivrs
jge
ret
fidivl
and
sub
cmc
cli
stc
sub
ljmp
inc
jmp
test
arpl
cli
or
and
nop
out
ret
or
popl
dec
or
add
mov
add
les
stc
xchg
xchg
ja
sbbl
jge
xor
mov
outsb
movsb
jno
push
shl
sbb
dec
add
mov
dec
ja
shll
sub
ret
jg
movsb
mov
cmc
arpl
and
xor
lretw
pop
inc
adc
jp
hlt
mov
aaa
fdivrl
stc
push
rcr
in
out
incl
push
in
cmpsl
push
stos
sub
pop
lea
hlt
dec
xor
cmpsb
popa
jbe
dec
sub
cmpsb
sbb
add
or
xchg
xchg
cmp
sub
stc
test
enter
test
test
mov
cltd
testb
rcrl
out
lea
jb
test
sarb
mov
mov
push
mov
lds
push
pop
push
and
sub
test
aas
lcall
xchg
aam
mov
outsb
add
xchg
xchg
aas
jae
cli
lret
sbb
adc
adc
rorl
fisubs
loopne
ja
jl
mov
enter
mov
test
dec
push
scas
rol
in
ror
mov
adc
enter
jecxz
fiadds
add
pop
push
cmp
test
push
mov
jg
inc
xlat
dec
or
push
stos
push
ficomps
jg
ftst
outsl
cmp
jbe
loope
jns
les
jbe
push
dec
mov
in
jg
cli
pop
popf
push
subb
mov
mov
cmp
aam
sbb
mov
outsl
mov
cmpsl
sub
outsb
int
inc
pop
ja
adc
mov
push
dec
subl
push
gs
adc
mov
mov
lock
push
popa
in
aam
rorl
mov
sub
es
mov
lret
mov
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
insb
ficoms
adc
mov
out
xchg
jmp
pop
pop
push
cltd
inc
push
clc
cmp
sbb
dec
sbb
xor
jge
xchg
dec
xchg
fnstcw
addr16
and
jns
leave
sbb
negb
jns
sub
push
add
push
xor
cmp
mov
adc
add
leave
test
mov
fwait
adc
sub
and
nop
or
jno
cmp
call
add
mov
jmp
fistps
adc
jnp
test
les
mov
mov
lcall
cld
pop
lcall
sbbl
sbb
out
or
cmpsl
pushf
lret
fnstenv
out
sub
lds
jecxz
out
dec
inc
addb
loopne
test
imul
adc
cs
and
rclb
arpl
adc
and
out
std
push
sbb
xor
out
int3
mov
jns
xchg
push
pushf
and
shr
xchg
mov
mov
sub
xor
pop
inc
jnp
or
enter
stos
fadds
rorb
mov
cmp
fnstenv
stos
fmuls
gs
inc
or
cltd
mov
fisubs
clc
dec
xchg
fwait
jne
and
xor
loopne
addr16
data16
jnp
data16
and
mov
jle
mov
cmp
and
sub
in
shr
xor
ret
pop
cld
push
movsb
loope
roll
xchg
pop
bound
sbb
jno
pop
aaa
cmp
js
add
cmpsl
push
cli
inc
sub
pop
mov
push
or
int3
pop
lods
fxch
ljmp
xor
and
das
sarl
shl
xchg
sub
sub
clc
aaa
or
sti
mov
or
lret
data16
test
dec
loope
jg
lods
mov
cmp
pop
stc
dec
imul
mov
sub
lods
cmp
mov
call
test
mov
aam
pop
dec
daa
push
jp
inc
fwait
jp
std
lretw
inc
mov
addr16
outsb
out
insb
int3
std
jge
rcr
and
pop
cmp
outsl
dec
mov
cmpb
and
stos
sbb
lods
repz
mov
push
jne
imul
jg
sub
sbb
and
and
cmc
pop
pop
mov
push
je
adc
add
shll
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
xchg
pop
sti
jle
aam
adc
inc
jmp
aas
aas
rcrb
test
repz
add
xor
xorl
stos
jg
rolb
repz
popa
js
or
pop
adc
sub
cld
ds
sub
dec
xor
mov
mull
aam
adc
mov
shrl
jge
adc
shll
cmp
clc
std
dec
mov
sub
insl
xor
out
push
dec
ss
cmp
outsb
adc
push
into
inc
push
ds
sub
imul
xor
inc
jp
popa
cmc
jns
mov
and
cld
les
daa
outsb
cmp
lods
data16
mov
fidivl
cwtl
mov
iret
mov
aaa
pop
in
mov
andb
mov
mov
in
lret
inc
mov
mov
je
dec
loopne
cmpsl
int3
push
inc
jle
and
or
in
mov
nop
sub
inc
out
dec
mov
jecxz
inc
movsb
shlb
adc
cld
mov
inc
test
mov
cmp
fiaddl
push
mov
lret
dec
cmc
add
fmul
out
leave
ss
add
sbb
inc
add
outsl
jae
dec
adc
xchg
xor
addr16
sti
pushf
shl
arpl
push
jns
std
add
inc
push
out
sbb
mov
clc
shrb
inc
hlt
scas
int3
rclb
fildl
mov
out
jnp
lds
out
into
ljmp
adc
rclb
push
ds
std
rcl
xor
int3
lds
cmpsl
mov
xchg
xchg
cmp
pop
ljmp
mov
xchg
pop
ret
outsl
lds
dec
sbb
dec
jbe
adc
jno
cmpsl
cli
int3
gs
mov
pcmpeqw
stos
lods
fsubl
pop
jbe
inc
or
xor
les
aas
int
out
ss
movsl
out
adcb
inc
jp
je
cmp
push
inc
pop
adc
dec
pop
jp
mov
mov
gs
pushf
sbb
sbb
and
outsb
sbb
push
mov
xchg
add
pop
decl
ja
movsl
push
jne
lds
mov
int3
popf
push
xchg
enter
push
repz
xor
xor
mov
aad
mov
mov
pop
or
pusha
dec
negl
cmpsl
jnp
pop
stc
sbb
xor
frstor
mov
and
push
sbb
adc
jne
lods
lret
xor
add
ret
outsl
xchg
cmpsl
cmpl
gs
or
add
inc
xchg
xor
and
mov
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
cmp
pushw
push
pop
sti
aas
dec
pop
push
popa
or
add
scas
cld
clc
ja
scas
icebp
cmp
lods
sub
insl
xchg
jnp
xchg
push
rep
into
adc
loopne
push
xor
pop
mov
mov
dec
in
sub
or
nop
add
jmp
pop
test
paddsw
mov
and
mov
nop
loopne
jbe
arpl
sbbl
scas
pop
and
push
stc
imulb
sti
inc
cmp
out
and
inc
mov
mov
cmp
ret
in
pushf
inc
dec
cs
xchg
sti
xchg
test
enter
add
test
into
pop
das
and
hlt
es
lds
push
lea
pushf
mov
pushf
aam
int3
divl
out
sub
mov
sub
mov
repnz
cmp
aad
and
xor
fistps
adcb
cmpsb
push
mov
mov
outsb
push
jb
popl
dec
mov
xchg
pushf
jns
sub
mov
push
cltd
loop
pop
pop
gs
nop
jne
mov
xor
xor
jnp
inc
dec
sbb
mov
pushf
dec
xchg
push
sahf
bound
ljmp
pop
leave
dec
xor
add
jne
jmp
fldenv
jbe
nop
push
hlt
dec
mov
pop
popa
js
scas
cwtl
lock
inc
hlt
loope
push
push
jne
call
push
out
jecxz
sbb
xor
lcall
in
addb
sub
push
pushf
jb
lret
mov
daa
lods
xchg
jle
in
and
cmp
and
cld
addl
pop
or
sbb
xlat
adc
mov
movsb
shrb
sbb
xor
xor
inc
dec
scas
adc
shlw
pop
pop
js
sub
mov
aaa
sub
lret
xor
add
bound
dec
cld
hlt
lret
cmpsl
ss
sahf
jbe
jae
sub
imul
mov
subl
and
dec
or
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
mov
js
into
adc
adc
data16
fistl
cli
insb
xlat
sub
out
or
xor
push
call
lods
movb
adc
mov
mov
sub
fisubrs
cmp
movsl
outsl
inc
and
fcmovnbe
test
and
xlat
add
aam
pop
or
ss
dec
and
iret
cmp
fucomip
rol
fldpi
test
xchg
lea
pop
sub
mov
addl
in
jnp
sub
pop
push
mov
inc
push
leave
outsb
lods
or
in
movsb
mov
cmp
pop
in
push
test
add
sub
outsl
cmp
shlb
std
in
mov
push
push
movsb
xchg
mov
fsts
out
mov
jmp
hlt
js
les
push
js
int
cmp
xchg
jge
xchg
push
dec
sub
push
mov
xchg
mov
test
add
pop
lods
dec
mov
cmpsl
fadds
nop
das
xchg
scas
and
js
and
xchg
aas
mov
stos
aaa
mov
pop
rol
xchg
mov
mov
sub
imul
pop
sarb
jge
or
sub
add
push
mov
ret
js
mov
js
in
aam
xchg
outsl
and
int
xor
mov
loopne
adcb
mov
push
jge
xchg
xor
adc
lds
or
jo
aaa
out
mov
pop
stos
test
ljmp
push
lods
pop
cmp
mov
icebp
adc
pop
add
xchg
jle
mov
sbb
dec
mov
sub
ja
test
mov
mov
pop
dec
dec
stos
mov
stos
or
push
inc
inc
rcrl
or
sbb
fidivrl
jmp
test
out
int3
bound
enter
sbb
sub
and
mov
or
movl
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
imul
adc
adc
test
sbb
das
inc
ljmp
lods
aaa
cmp
sub
repz
sub
cmp
dec
arpl
leave
iret
push
mov
pushf
in
fidivl
or
mov
xchg
shr
inc
xchg
andb
popa
jp
pop
push
aas
in
shlb
sbb
gs
xchg
dec
xor
adc
iret
das
in
sti
sbb
arpl
add
js,pn
or
sbbl
js
mov
inc
cmp
mov
into
daa
ja
xor
xor
ss
pushl
mov
mov
xchg
adc
mov
add
inc
or
bnd
jns
pusha
call
out
inc
and
aaa
cld
fs
lods
or
cmp
mov
xchg
pop
adc
cmp
stc
inc
xor
add
mov
sub
fwait
mov
sbb
inc
jmp
mov
mov
lock
aam
cmp
push
data16
mov
insb
pop
lods
or
pusha
fs
sbb
out
adc
jbe
dec
loop
shrb
cmp
adc
pop
push
aam
push
lahf
cmp
fcmovne
push
sbb
pop
pushf
xchg
push
mov
mov
mov
lahf
mov
cmp
clc
cwtl
test
or
popa
jne
int3
enter
mov
shl
pop
bound
push
push
dec
jae
shlb
ja
push
lods
lods
jge
xchg
pop
and
cmc
call
jne
sub
inc
sti
call
enter
mov
mov
push
xchg
out
leave
test
insl
loope
stos
sahf
push
mov
cmp
mov
inc
mov
xchg
imul
sbb
jmp
push
in
mov
lahf
in
jno
stos
push
pop
mov
in
out
pop
mov
into
cmp
in
mov
and
cmp
fcoms
mov
mov
lods
insb
in
and
pop
cs
adc
mov
inc
jo
fnstenv
mov
mov
add
add
cmpl
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
in
mov
enter
aaa
sbb
dec
aaa
push
push
mov
and
push
mov
cmp
xor
out
adc
and
imul
dec
pop
mov
and
js
jnp
xor
lods
lds
xor
add
stc
arpl
arpl
mov
inc
mov
pop
xchg
xor
lds
pop
div
popf
sbb
sbbl
and
push
mov
mov
add
xor
repz
inc
andps
cmc
jnp
push
add
lahf
imul
or
sbb
mov
sbbb
sbb
fxtract
pop
aaa
adc
leave
cwtl
lods
std
pop
iret
cmpl
sahf
jo
push
sarl
aas
dec
xlat
pop
movsl
xor
ljmp
pop
dec
int3
in
jmp
or
xchg
lods
dec
test
mov
sbb
cmp
add
andb
mov
jnp
xor
into
addr16
ljmp
imul
int
xchg
cmp
and
hlt
addb
cmp
xor
out
lret
test
sti
pushf
and
push
clc
mov
add
sub
out
test
xchg
push
jo
sbb
icebp
sub
out
js
adc
sbb
in
mov
les
and
or
add
mov
dec
ret
mov
into
ds
pop
lods
into
inc
xchg
dec
dec
loopne
add
popa
mov
int
outsl
daa
mov
cmpsb
in
mov
out
pop
mov
lock
or
ret
mov
xor
dec
iret
pop
mov
jecxz
aas
popf
and
cs
add
inc
fwait
js
loop
loopne
xorl
cmp
out
mov
stos
mov
mov
xchg
movsl
fldl2t
xchg
das
cs
sbb
mov
dec
xor
push
fmull
mov
and
sti
or
outsl
mov
push
fadd
test
pushl
jp
add
inc
mov
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
dec
mov
enter
aaa
or
inc
inc
lea
ljmp
jo
pop
jl
ljmp
outsl
inc
outsl
jb
aam
jl
fimuls
pop
cmp
sbb
jae
xchg
jae
or
adc
pop
cmp
nop
and
movsl
adc
insb
push
pop
mov
rclb
xchg
pop
pop
xor
ret
cli
lock
fisubrl
mov
sub
leave
mov
and
aas
sub
movsb
xchg
pop
jle
jns
aad
jecxz
clc
in
stos
dec
lret
jecxz
sbb
mov
and
xchg
dec
jmp
cli
jnp
dec
add
fst
inc
xor
xor
mov
es
jg
addr16
enter
jp
cwtl
shr
cmp
jp
loopne
push
jb
movsl
sbb
shr
push
dec
scas
and
dec
cs
out
mov
xchg
cmp
inc
mov
and
push
push
inc
cs
roll
in
incl
push
dec
xchg
sub
adcl
enter
outsb
jne
out
xchg
xor
xor
test
outsb
leave
daa
movzbl
sub
sub
inc
xor
popf
lods
jnp
or
lods
stos
dec
mov
jo
out
cs
mov
xor
ret
sbb
aam
jns
les
nop
dec
stos
aas
pop
and
and
dec
les
les
xchg
jle
or
push
out
cmp
mov
stos
or
lret
fisttpll
push
or
fdivs
sbb
test
push
out
test
pop
enter
filds
mov
in
cmp
sub
or
stos
push
mov
or
inc
out
push
into
push
fstp
getsec
mov
in
out
scas
jae
imul
hlt
lock
push
sbb
lret
test
add
inc
sahf
add
cmp
add
js
pop
add
ret
sub
cmpl
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
lods
punpckhdq
adc
adc
jle
sbb
mov
inc
lds
and
xor
sbb
pop
mov
clc
cltd
shll
fnstcw
and
mov
xor
xor
call
lods
iret
out
aad
push
xchg
into
mov
inc
or
shlb
loope
ja
mov
inc
es
push
sti
inc
push
loopne
mov
cmc
xor
mov
mov
xor
mov
dec
loop
add
adc
outsl
and
out
xchg
outsb
sub
cmpsb
mov
imul
lret
loopne
pop
fildl
add
in
addr16
pop
and
mov
jle
inc
sbb
add
xchg
aad
in
fs
rorb
loope
mov
mov
js
jne
ja
das
ljmp
fs
movb
mov
inc
sbb
sahf
rol
clc
xor
ss
scas
in
jl
rcll
push
jle
inc
bound
arpl
xchg
xor
inc
or
adc
leave
stc
mov
and
cld
mov
out
iret
mov
lret
imull
mov
sub
add
pop
stos
and
lods
mov
sahf
js
rcr
xchg
cmp
mov
sbb
add
jo
mov
stos
add
jo
and
and
jge
dec
leave
and
xchg
in
xchg
andl
loop
mov
jl
cmpsb
add
movsb
mov
in
lahf
push
pop
data16
lcall
gs
mov
dec
jo
aad
imul
pop
flds
sarb
mov
or
sbb
sarb
lahf
xchg
add
cmp
lcall
inc
xor
mov
cmpsb
in
call
mov
xchg
and
xchg
sarl
mov
addr16
or
pop
xor
in
cmpsb
sbb
push
imul
scas
fnstenv
mov
add
lea
mov
and
mov
cmpl
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
adc
adc
movlps
loop
das
sbb
mov
sbb
jp
pop
lea
test
xor
push
jle
dec
repz
lret
sub
sbb
lea
fs
jae
sub
xchg
loopne
pop
push
push
dec
js
inc
xchg
xchg
push
movsb
fisubs
pop
add
mov
adc
mov
add
mov
stos
ds
and
cmp
in
inc
scas
or
xchg
push
cmp
sub
push
lds
xor
loope
pop
scas
je
mov
sub
add
mov
push
int
and
xchg
out
jmp
jae
aad
lods
mov
lds
push
jmp
aas
sbb
dec
aad
and
dec
dec
cs
xchg
xchg
mov
stos
inc
scas
pop
sbb
add
xor
adc
mov
ds
aam
xchg
addr16
pop
stos
loope
iret
stos
jl
mull
lock
aad
sub
dec
pop
fidivrs
adc
xchg
daa
pop
mov
add
orb
rcr
jecxz
test
jb
das
std
aam
pop
aaa
mov
jecxz
cmc
push
pushf
rolb
sbb
out
dec
and
int3
clc
jo
cs
mov
ja
cwtl
add
push
out
jne
sti
sbb
xchg
pop
jg
pop
adc
ss
sbb
adc
into
fs
jmp
enter
sbb
sbb
pop
sti
inc
xchg
cmpsb
cmp
in
xchg
stos
ret
ja
and
aad
jp
fmulp
movsl
out
push
inc
mov
cmp
mov
rorb
or
mov
mov
and
push
int
xor
scas
roll
cmpsl
mov
repz
jns
fcom
enter
jecxz
aad
sbb
movsl
jp
cmc
lret
scas
cmp
ret
mov
and
das
or
aas
fstps
lods
inc
in
pop
gs
push
pop
les
rolb
sbb
fwait
testb
ret
inc
xor
xor
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
cmp
enter
ljmp
roll
or
push
mov
ljmp
dec
mov
leave
and
mov
cmpl
sbb
jl
leave
add
pop
and
shll
mov
adc
stos
lods
out
jb
xchg
stc
pop
popf
push
jnp
outsb
in
push
lahf
int
scas
scas
adc
pop
inc
push
mov
hlt
fucomi
call
shll
mov
mov
and
sub
aad
jnp
mov
repz
inc
insl
mov
cmp
pop
test
lret
or
test
or
daa
sub
pop
mov
push
lods
sub
popf
ja
mov
imul
jno
sub
pop
lahf
push
cwtl
call
sub
leave
xchg
out
mov
lock
xchg
xchg
inc
pushf
dec
orb
fsubr
adc
lcall
test
orb
sbb
faddl
inc
jbe
aaa
mov
out
adc
and
xor
jae
cmp
jp
jg
adc
rcrb
and
test
repz
mov
mov
fistpll
in
pop
jle
filds
sub
mov
mov
pop
mov
jo
cmp
dec
jne
jae
arpl
movsl
hlt
jo
sbb
aad
in
xchg
inc
inc
push
int
into
push
lock
js
shlb
scas
mov
inc
xchg
jmp
inc
lahf
das
mov
add
icebp
cmc
add
test
pop
mov
mov
sub
imul
in
je
mov
mov
mov
or
and
inc
lcall
popf
outsl
dec
in
lods
push
jge
adc
adc
jns
loopne
mov
push
adc
addl
pop
jecxz
into
insb
dec
sub
dec
mov
jge
add
mov
int3
lock
mov
movsb
enter
push
sub
mov
xor
loopne
xchg
and
mov
pushf
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
jae
js
lcall
adc
ja
adc
repnz
mov
push
adc
popf
mov
pop
mov
loopne
pop
jge
cmp
pop
mov
push
and
xchg
lds
push
cmp
imul
jae
call
cmpl
mov
cmc
loope
adc
xchg
mov
pop
out
loop
sbb
adc
jge
mov
pusha
mov
jge
int3
jl
aaa
lods
fsubl
mov
cmc
scas
push
xchg
loope
fwait
loopne
sub
lcall
fs
dec
insb
in
fwait
addr16
push
cmpsl
mov
sbb
or
cwtl
dec
dec
notl
push
pop
hlt
mov
arpl
mov
add
cmp
or
gs
mov
es
into
mov
pusha
in
jae
int3
pop
outsb
cmp
mov
or
out
int3
outsl
vorps
es
sbb
aad
dec
mov
cmp
lods
scas
mov
xchg
adc
push
out
fistl
mov
scas
jno
test
sub
mov
clc
pop
inc
xchg
fildl
loop
add
inc
out
mov
rorb
cmp
test
outsb
iret
jae
cmpsb
and
push
jmp
push
stc
fdivr
test
fdiv
pop
cmpsb
cmp
adc
xlat
cmc
dec
or
test
ja
ror
pop
xor
mov
int3
sbb
sub
dec
sti
pusha
jb
or
cmp
adc
movsl
ret
shrb
adc
rcr
aam
ss
push
pop
test
sub
cmp
pop
pop
mov
sbb
cmp
ljmp
cli
arpl
jmp
fisubs
add
aas
adc
and
cmp
mov
je
mov
mov
jnp
xchg
sub
jge
add
cli
test
movsb
orl
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
aam
adc
adc
movlps
ficoml
sbb
iret
in
rclb
lods
mov
cli
lcall
lahf
mov
jl
jp
movsb
lock
jb
xorl
pop
mov
movsl
mov
test
fscale
popf
fcomps
fisubl
mov
sbb
pop
cmp
xchg
aad
inc
rcrl
rclb
das
sub
xlat
leave
inc
jnp
adc
cli
jle
popf
pop
cmc
ret
mov
push
addb
fs
adc
scas
pop
in
inc
jo
and
xor
std
cmp
adcl
adc
pop
pop
movsb
gs
testb
inc
mov
ret
and
shll
mov
popf
in
into
test
push
orl
or
inc
mov
iret
push
sarb
aad
pop
adc
sub
and
in
sar
sarb
push
sti
push
jo
leave
lds
shl
mov
rcll
lret
fs
mov
lahf
test
add
ret
xor
mov
aaa
add
pop
mov
jns
jl
inc
lret
cld
test
pop
dec
fsubl
add
data16
test
aaa
mov
ffree
imul
or
sbb
mov
xlat
pop
jbe
cmpsb
popa
mov
or
jge
cmp
or
mov
jnp
rcrl
addr16
jp
fs
loop
jmp
loope
push
inc
adc
enter
dec
ljmp
ret
les
lret
enter
notb
fsubl
mov
fbstp
stc
ror
mov
pop
fidivrl
cli
xor
cmp
mov
in
cmp
dec
arpl
jg
lock
cmpsl
test
mov
dec
xor
jae
add
jbe
cmp
shr
xor
cmc
sub
jp
dec
imul
inc
xor
fstps
dec
sbb
jl
mov
sbb
decl
decl
decl
incl
lret
fmuls
aam
decl
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
add
enter
dec
and
cli
cmp
fmuls
pop
sub
push
mov
push
mov
js
sarl
pop
in
push
les
cmc
fnstsw
mov
pop
loop
or
adc
pop
cltd
mov
mov
jo
adc
push
popa
sub
mov
ja
cmp
pop
mov
stos
jbe
mov
sbb
add
in
cltd
mov
xchg
mov
fadd
jp
xchg
mov
pop
ror
mov
or
test
mov
test
call
and
mov
es
adc
push
adc
int
cltd
jne
les
pop
bound
xchg
push
sbb
and
adc
xor
imul
ret
movsl
xor
mov
xor
ja
test
add
dec
jns,pn
mov
insl
inc
scas
repz
jbe
mov
out
ror
add
mov
pop
repz
repz
xchg
dec
inc
ror
mov
sub
aad
and
jp
ja
push
hlt
push
js
push
inc
cmp
add
mov
shrl
mov
xchg
in
jg
xor
mov
push
mov
sbb
push
dec
pop
cwtl
lcall
jne
pop
daa
push
add
out
or
xchg
xchg
mov
cwtl
jno
sub
dec
xchg
jp
insl
in
popa
add
out
movsb
jmp
cld
out
add
sbb
sub
sbb
push
insl
jl
jmp
add
bound
repz
xchg
inc
sub
lret
pop
pop
out
or
int
jbe
push
sbb
mov
arpl
push
int3
cmp
adc
push
nop
xor
push
ja
push
adc
jnp
mov
xchg
pusha
ret
cmp
test
xlat
mov
movsl
mov
lock
add
cli
sahf
cmp
xchg
mov
cmp
je
jmp
icebp
arpl
clc
insb
ss
fcoml
repnz
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
rolb
mov
adc
xchg
push
imul
xchg
imul
push
mov
pop
mov
addr16
jns
iret
js
in
ja
rolb
and
inc
inc
int3
les
enter
adc
je
stc
fiadds
adc
aad
sbb
xchg
sbb
cmc
mov
aaa
repz
pop
adc
xchg
jg
pop
testl
dec
mov
or
push
add
movsb
adc
xchg
clc
or
jno
data16
loopne
nop
sub
lock
mov
test
fstps
std
or
mov
xor
aas
test
ds
mov
push
sub
pop
das
bound
xchg
sub
movsbl
push
test
lahf
and
js
xor
xchg
cs
fcoml
mov
shrb
lcall
clc
push
mov
sbb
cmc
repnz
fs
adc
push
stos
inc
inc
lret
fildl
jo
adc
jo
and
loop
aad
cmpsb
sbb
add
push
sub
sbb
stc
or
or
icebp
stos
adcl
lds
call
add
or
icebp
xchg
mov
cmc
cmp
dec
xor
enter
or
lcall
fstpt
ss
std
or
cmp
mov
add
dec
pop
arpl
test
repnz
sub
pop
push
ja
pop
das
cmp
mov
std
push
shrl
jns
adc
push
mov
mov
lea
repz
pop
leave
int
notb
es
push
push
cmp
mov
jle,pt
xorl
cmp
test
jbe
int3
dec
shr
mov
adc
cmp
imul
mull
pop
xchg
out
in
rcr
fldcw
push
stos
fadd
fdiv
xor
cs
outsb
cmp
jle
jo
int
enter
sbb
lcall
push
jp
imul
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
lods
imul
xor
hlt
xor
mov
mov
addr16
fnstenv
in
pushf
xor
dec
lcall
fs
pinsrw
adc
push
cs
leave
sbb
mov
adc
inc
loopne
mov
out
leave
nop
gs
xchg
hlt
xor
sbb
xchg
xor
inc
insb
or
push
push
lods
movl
rolb
mov
adcb
jge
lock
les
mov
clc
test
jmp
xchg
popa
fnstcw
addr16
insb
dec
mov
xchg
mov
sbb
lcall
jne
lock
pop
inc
bswap
push
dec
push
and
mov
loope
aad
ret
sbb
push
inc
cltd
iretw
das
jge
add
dec
cmp
insl
push
jp
cwtl
cmpsl
ss
pslld
aam
xorb
pop
out
test
popa
push
xchg
jmp
xor
and
gs
orb
fucomip
mov
aam
cmp
mov
out
into
cmpsb
outsb
loope
jmp
mov
loopne
inc
cmp
mov
cmp
stc
cmp
aam
adcb
push
sub
aad
inc
or
loop
ljmp
mov
cwtl
jg
cs
out
jmp
or
jo
mov
pop
mov
data16
pop
popf
sbb
mov
lods
push
sbb
imul
sbb
or
test
daa
outsl
inc
in
orb
adc
rorl
push
daa
xor
mov
repnz
cmpsb
mov
loop
icebp
jecxz
ficoms
sbb
cld
add
push
loope
sbb
fcoml
bound
jb
dec
outsl
ds
arpl
ss
les
mov
repnz
out
ret
adc
outsl
test
mov
lock
sub
in
pop
xor
lds
jg
jle
cmp
xchg
addr16
mov
mov
test
cltd
add
add
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
dec
pop
lods
sbb
movlps
fdiv
add
jbe
js
mov
lret
add
xchg
inc
iret
arpl
repz
push
push
jl
fsubrl
inc
lea
add
lcall
inc
xor
aaa
push
aam
in
xor
mov
ds
xchg
addr16
add
inc
dec
and
xchg
std
and
jl
lds
bound
dec
xor
add
jl
test
cmp
addr16
fistpll
data16
dec
inc
adc
scas
pop
loope
mov
mov
bound
arpl
adc
mov
pop
mov
mov
pop
ja
and
mov
leave
jle
arpl
sub
fs
lods
pop
or
imul
lods
scas
js
cld
fdivrs
aad
fisubrl
xor
addr16
enter
xchg
shl
pop
and
cmp
out
xchg
mov
dec
aas
mov
fidivrs
add
mov
icebp
into
and
adc
test
and
xchg
testl
pop
sbb
pop
xchg
dec
push
cwtl
pop
fisubrl
inc
lret
sbb
repz
lret
jg
test
pop
jmp
insl
js
int
xchg
lods
out
adc
in
out
out
bnd
sub
jmp
repz
fiaddl
adc
push
out
lret
clc
add
cmc
cld
scas
mov
pop
pop
das
jne
mov
loope
nop
lds
lcall
inc
lret
lret
cmp
push
push
cld
inc
sbb
pop
stos
insb
inc
test
in
push
add
rcrl
cmp
in
xlat
or
jne
dec
testb
adc
xchg
inc
mov
js
test
sub
sbb
xor
or
pop
jl
lret
add
enter
outsb
jg
clc
fdecstp
mov
shlb
cmpsl
inc
mov
push
les
add
decl
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
addr16
adc
movlps
dec
mov
dec
ret
es
rclb
jmp
mov
jo
ss
pop
xchg
addr16
aas
add
lds
dec
adc
mov
jle
xor
xchg
sbb
sahf
sbb
int3
sub
nop
push
push
mov
inc
dec
lret
pushl
aas
imul
jns
push
imul
nop
mov
push
cltd
popa
xor
mov
adc
mov
neg
in
mov
inc
imul
inc
dec
stos
in
jle
mov
jne
test
push
stos
xor
outsb
outsl
movsb
and
ror
ja
cmp
cs
add
mov
push
movsb
or
test
lock
jne
push
and
mov
movsl
stos
mov
and
ds
sbb
ss
push
aas
rcl
mov
lcall
adc
push
aam
push
and
inc
in
in
mov
cmpb
sub
mov
pop
repnz
lods
popf
and
iret
add
dec
add
and
push
jp
mov
fs
push
pop
mov
ret
inc
lods
adc
sub
daa
xor
loopne
lret
int3
xchg
dec
sti
cmpsl
lods
xchg
cmpsl
push
inc
div
dec
or
jae
cld
test
jl
add
mov
mov
push
aad
das
hlt
sub
fwait
inc
jge
pop
lret
jne
test
test
jg
loopne
fiaddl
inc
xor
outsb
add
adc
mov
mov
cmc
pop
sti
lahf
pop
ss
fnstsw
jp
aad
jg
fs
out
fstp
xor
and
sbb
sahf
mov
outsl
pop
jo
inc
xlat
addr16
sub
out
mov
les
push
cli
sysret
mov
call
push
jge
jbe
pop
dec
inc
or
mov
lcall
into
inc
cmp
enter
mov
add
arpl
ds
jmp
jmp
mov
dec
push
jne
inc
sub
jg
xor
clc
arpl
test
pushl
lret
adc
fmuls
and
pushl
imul
fmuls
sbb
decl
decl
decl
mov
and
inc
add
add
pop
lods
mov
and
pop
mov
cmp
xchg
adc
xor
xor
into
xchg
mov
sub
leave
outsb
push
xor
ss
add
xor
gs
cwtl
dec
mov
pushf
jbe
jg
popa
orb
pop
push
shrl
inc
pop
add
push
push
pop
addr16
fwait
adc
pop
cmp
mov
xor
nop
movsb
iret
mov
nop
push
out
push
pop
imull
insb
stos
adc
nop
andl
loopne
sahf
lea
cmp
bound
stos
dec
aam
sbb
and
mov
out
inc
shll
sub
js
add
fnstenv
popa
imul
out
outsb
ljmp
mov
movsl
cwtl
pushf
inc
pushf
bound
bound
lahf
test
pop
outsl
adc
mov
push
or
outsl
ss
jae
mov
jnp
push
test
dec
push
sub
dec
mov
test
jp
mov
mov
clc
cli
ja
cmp
fs
xlat
dec
push
mov
mov
and
loope
inc
sbb
xchg
leave
mov
mov
push
or
cmp
push
nop
fists
popa
insl
adc
push
sub
imul
leave
andb
or
jecxz
in
xor
cld
into
inc
loope
std
es
lahf
inc
inc
imul
push
mov
bound
mov
daa
js
loop
lods
stos
add
inc
test
aad
lret
inc
out
fwait
rcrl
test
add
push
out
addr16
xchg
loop
push
daa
into
mov
test
dec
adc
jp
sbb
mov
xchg
sbb
jge
push
das
adcb
cmp
xlat
fcmovb
inc
dec
sub
jmp
mov
adc
push
sbb
cmp
lahf
and
mov
fsubl
out
cs
nop
sub
ds
sbb
inc
mulb
dec
add
pushf
mov
or
cmpsb
jl
ret
ffree
jns
sbb
jg
push
push
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
xor
mov
adc
jb
xor
pop
divl
push
mov
inc
pop
divb
jb
out
push
or
popf
out
add
idivl
shrl
jne
imul
jno
in
or
inc
enter
sbb
sar
pop
test
cmp
add
divb
adc
xchg
add
or
jbe
in
or
hlt
test
pop
xchg
xorb
ja
imul
mov
xchg
cmp
cmpsb
rcrl
out
loopne
and
addr16
nop
inc
ret
adc
mov
and
jb
cmpsl
fcomip
hlt
ds
int3
jp
sarb
pop
hlt
xchg
mov
es
pop
jmp
out
sbb
arpl
nop
leave
sbb
sbb
add
loope,pn
sub
lret
repz
addl
or
pop
loop
or
out
cmc
fisubl
or
xlat
or
out
dec
jmp
xor
stos
mov
cmpxchg8b
adc
jno
daa
loope
adc
je
paddsb
push
add
je
mov
ds
fxch
push
daa
pop
scas
clc
add
adc
xchg
mov
test
sahf
lds
mov
lret
xchg
dec
fsub
sbb
in
lock
inc
lock
aam
xor
mov
out
inc
enter
or
inc
xchg
into
jnp
push
cmp
and
mov
jo
mov
pop
lods
outsb
jbe
movsl
jno
mov
lea
pop
popf
xchg
in
and
jno
xchg
dec
sub
mov
xchg
icebp
shll
fcmovnb
lock
mov
add
mov
dec
stc
sub
cs
lods
fildll
into
sbb
js
adc
xor
es
mov
push
jno
sarb
out
lds
sti
minps
xlat
cmpb
bound
cmp
jle
mov
mov
pop
inc
sti
and
jle
scas
loope
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
test
popa
shlb
push
mov
inc
movsl
push
sub
inc
xlat
aad
push
test
sbb
cli
fcmovb
xchg
mov
jae
aam
push
dec
adc
fcmovnb
dec
push
sbb
test
lret
dec
push
jle
pop
out
dec
jb
testb
dec
adc
pop
inc
inc
sub
leave
pop
sbb
mov
push
bound
sub
mov
dec
rorl
adc
test
cltd
adc
pop
xor
mov
faddl
jle
xor
cmc
adc
mov
mov
cmc
xorl
out
out
lea
clc
xor
mull
imul
cmp
xchg
movsb
ret
dec
lods
fnop
inc
fstp
pop
in
push
jge
add
fnstcw
jmp
xor
cmpb
mov
fldl
push
dec
adcb
mov
jp
into
in
xchg
mov
sub
mov
dec
cltd
shrb
sahf
out
icebp
cltd
sub
mov
shlb
clc
pop
aas
out
rol
scas
dec
sti
shr
stos
mov
inc
enter
pop
pop
out
lds
shlb
dec
lret
nop
imulb
fstps
pusha
imul
mov
mov
insb
lods
xchg
loope
out
mov
in
lea
xchg
nop
pop
jl
or
rcl
jl
mov
inc
jae
sahf
push
sti
mov
mov
mov
adc
ljmp
int3
inc
jnp
adc
cmp
pop
jbe
lods
bound
in
sub
mov
mov
mov
push
dec
pop
sbb
jns
push
sbbl
and
insb
clc
jae
mov
jmp
xor
fistl
mov
and
mov
push
mov
gs
lods
mov
sarb
mov
or
cmp
xor
add
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
and
js
xchg
adc
or
loope
sub
and
mov
rcrl
xchg
mov
icebp
inc
leave
xorl
xchg
stc
pop
fwait
pop
fucomip
push
scas
outsb
subb
fs
xor
aam
nop
xlat
add
ds
add
mov
mov
mov
mov
push
add
loope
xchg
fwait
mov
test
xchg
icebp
jne
xchg
sub
int3
cltd
push
jmp
lahf
lea
xor
insb
and
hlt
add
icebp
cmpb
jbe
jb
dec
mov
cmc
jno
cwtl
cmpsl
leave
pop
xchg
mov
push
mov
inc
aam
jmp
iret
dec
and
cmpsb
ja
push
rcrl
mov
lods
or
je
xor
xor
sub
inc
add
sbb
fidivrl
add
stc
xlat
sbb
cld
int
jbe
push
lods
fcom
mov
mov
inc
and
std
fdivrs
jo
jmp
repz
movsb
daa
lods
ljmp
dec
xlat
push
into
pop
loope
shrb
dec
stos
lret
pop
pop
ja
cmp
orb
sbb
push
insb
jg
stc
movsl
rolb
fmul
mov
sbb
incb
xchg
xor
inc
mov
mov
stos
add
pop
cmp
or
es
mov
mov
pop
mov
adc
jmp
and
clc
fisubs
bsf
ret
cmp
in
enter
sub
push
pop
dec
les
adc
sub
insl
rorl
test
xchg
subl
xchg
popa
out
cli
push
xchg
mov
int
jo
push
lahf
stc
sub
adc
test
aam
xlat
into
dec
mov
in
dec
pop
xor
xor
push
push
sub
or
cli
lock
in
mov
lods
addr16
lcall
out
enter
sbb
jne
pop
mov
mov
mov
xor
xor
mov
call
or
jmp
mov
or
mov
push
push
or
mov
enter
movlhps
ljmp
mov
popa
jne
dec
ljmp
sarl
movsl
xchg
xchg
dec
or
sub
lcall
sub
out
sbb
pop
fstpt
das
sahf
xchg
adc
dec
loopne
sahf
out
sub
popf
cld
pop
andb
push
in
and
rcrl
hlt
aaa
xchg
rep
mov
sub
outsl
sub
mov
outsl
int
xchg
xchg
cli
mov
mov
stos
enter
sub
mov
data16
xlat
lret
popa
movsb
loopne
add
imul
jo
cmp
sbb
xor
adc
fldenv
outsb
lods
inc
stos
lods
cmpl
mov
pop
add
inc
add
sahf
xchg
dec
mov
inc
dec
and
repnz
add
int3
xchg
xor
pop
js
mov
shll
push
cmp
aad
sbb
std
mov
cmp
mulb
scas
scas
mov
sahf
mov
addl
and
jnp
jne
inc
xchg
push
fiaddl
subl
pushf
dec
test
punpckhbw
imul
mov
mov
leave
lret
xchg
scas
pop
mov
std
daa
movsb
in
out
fs
push
cmp
sarb
mov
or
cmp
mov
push
or
sbb
mov
clc
mov
stos
dec
jns
mov
cmp
cmp
inc
cmpsl
movsb
dec
loopne
fxch
jg
in
pop
xor
sbb
cmpsl
daa
add
xchg
daa
xchg
dec
mov
clc
pop
std
sub
jmp
imul
xchg
sbb
sub
stos
incb
adc
lahf
mov
mov
add
cli
add
mov
mov
cmp
jmp
stos
js
pop
and
mov
daa
mov
jle
js
adc
movlps
mov
jmp
nop
les
les
cld
arpl
xor
dec
mov
into
inc
xor
or
sbb
notb
jo
pusha
mov
xchg
dec
and
add
adc
outsl
inc
fwait
ds
bound
inc
outsl
dec
mov
cmp
sub
or
dec
lcall
outsb
inc
imul
or
frstor
negb
outsl
lock
xchg
adc
pop
mov
andl
cld
lret
mov
mov
rcl
dec
iret
gs
inc
add
mov
ret
ffreep
test
pop
lahf
lods
dec
mov
adc
xor
mov
rcr
adc
popf
subl
xor
ret
jmp
inc
sub
insb
adc
fcom
divl
fsubs
jmp
mov
xor
outsb
mov
je
xchg
fdivrs
add
or
loop
ret
push
sub
repnz
jmp
movsb
pop
rol
aad
pop
sbb
pop
lock
imul
pop
mov
mov
cmc
xor
cmp
add
push
js
xchg
imul
mov
aad
sub
repz
jg
pop
fwait
mov
jmp
sbb
aam
pushf
lahf
sarl
mov
ljmp
push
mov
idivb
xchg
push
arpl
out
scas
test
cmp
lock
pop
jmp
mov
testl
cmp
pusha
jg
rcrb
sub
mov
cmpsl
add
ds
pop
adc
mov
and
add
jb
mov
pusha
inc
or
pop
mov
mov
fwait
jne,pn
sbb
adc
in
loop
jo
pop
adc
push
add
int3
loopne
jle
pop
push
adc
call
adc
push
outsb
jmp
cli
mov
adc
or
cmc
xchg
jns
leave
pop
test
into
jb
jb,pt
loop
lods
icebp
inc
push
xchg
test
add
add
decl
decl
mov
addl
add
mov
sar
jmp
ds
in
mov
xchg
js
pop
ljmp
movlps
lcall
aaa
movsl
mov
lods
addl
stc
arpl
pop
cmp
hlt
add
cmp
lock
rorl
adcb
addl
sbb
in
int
xor
les
sbb
fwait
push
ret
pop
insb
scas
dec
xchg
xor
adc
test
stc
xor
shlb
push
mov
jl
jne
xchg
add
xor
and
mov
imul
push
int3
fwait
mov
and
scas
lcall
mov
dec
loopne
or
lods
adc
push
push
out
sub
push
push
lret
xchg
sbb
mov
popa
sahf
jae
call
aas
or
fwait
aas
mov
pop
mov
shlb
lds
inc
into
pop
mov
jl
adc
lds
lods
mul
fs
imul
push
pusha
mov
stc
sub
mov
and
sub
ds
sahf
push
jg
rcl
fsub
hlt
jne
dec
rolb
mov
pusha
mov
and
out
in
dec
int3
shlb
lahf
fstps
les
in
into
mov
sbb
mov
xchg
test
mov
mov
jnp
push
push
cld
mov
pop
in
push
stc
or
shlb
mov
in
cli
or
lret
mov
mov
scas
sahf
outsl
out
sahf
mov
vshufps
sbb
and
xchg
add
cmp
sti
cmp
int3
inc
fcoml
into
mov
jnp
jae
mov
push
out
push
test
clc
cmpsb
push
jge
gs
gs
cmp
cmpsb
dec
xor
rclb
adc
sub
dec
gs
repz
mov
mov
adc
mov
lock
mov
pop
out
push
cmpsb
rcll
pop
cmc
int
nop
adc
fmul
aam
lea
decl
decl
mov
mov
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
pop
cmp
jb
adc
adc
push
mov
gs
mov
adc
xchg
test
movsl
cmp
cmpsl
jmp
and
ja
or
inc
repnz
push
jbe
mov
fs
jnp
into
incl
sub
dec
shlb
jl
test
out
loop
sub
push
daa
jb
testb
ret
jns
mov
mov
insb
fwait
sub
add
in
xchg
xchg
cld
xlat
negb
mov
sbb
clc
push
mov
inc
cld
push
dec
ret
sub
push
adc
cwtl
cs
sti
andl
mov
mov
push
hlt
pop
lret
cmpb
mov
aam
inc
cs
push
sti
mov
call
cmp
xor
fsubl
dec
add
xor
std
les
or
cmp
rcl
sbb
negb
dec
rorb
and
mov
mov
or
aam
repnz
adc
enter
mov
inc
mov
pop
sbb
adc
xor
sub
pop
mov
lds
sub
scas
les
mov
nop
stc
lcall
xlat
pop
insb
pop
jae
pop
loop
add
jne
dec
and
sbb
cwtl
mov
movb
inc
test
mov
jno
cmc
in
je
push
popa
ljmp
fsubl
mov
add
pushf
mov
lcall
subb
hlt
and
xor
sbb
jge
adc
les
dec
or
sbb
fistl
sahf
xor
out
ja,pt
shl
cmpsl
aaa
into
push
adc
and
scas
jle
fidivl
xor
add
mov
cmp
sub
cli
mov
adc
out
add
int
xor
push
push
sbb
push
cmp
hlt
lods
jl
push
in
ror
rorl
xchg
sbb
xor
add
imul
and
decl
pushl
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
inc
loop
stos
es
adc
adc
mov
and
popa
inc
ficoml
rep
pushf
sub
dec
sbb
jae
cmpsl
mov
jmp
iret
popa
les
out
mov
xchg
or
movsb
inc
fcmove
xchg
loopne
mov
jno
gs
lock
mov
aaa
jno
xchg
xchg
or
sub
sbb
mov
cltd
pusha
das
adc
jge
inc
out
inc
cmpsb
in
enter
push
pushf
or
sub
rclb
jmp
mov
outsb
jle
jno
bound
or
dec
pusha
jmp
ss
in
and
jne
xorl
fisttpll
movsl
xor
pop
xchg
push
js
push
or
push
pop
pop
mov
ja
xchg
jg
mov
mov
add
jp
pop
inc
dec
jg
add
cmp
adc
sbb
mov
shrb
lea
and
xchg
jp
push
leave
xchg
push
mov
aad
imul
stos
dec
mov
pop
lcall
in
pop
xchg
pop
sub
push
sahf
push
insb
and
push
insb
pusha
lea
and
and
int
jb
jecxz
xor
push
dec
imul
pop
in
adc
xor
xchg
je
leave
xchg
notl
adc
push
mov
jg
lcall
add
faddp
mov
adc
fcmovbe
sti
fidivl
cmp
xchg
sbb
js
sub
dec
push
int3
dec
mov
repnz
enter
ret
leave
arpl
pop
ja
fidivrs
in
in
dec
pop
mov
adc
mov
rorl
cmp
lds
push
je
ret
mov
add
scas
inc
mov
mov
test
jl
or
sar
jae
je
movntps
jns
mov
flds
and
in
xchg
sar
adc
js
or
sub
pop
mov
add
stos
int3
inc
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
mov
push
adc
ret
fistpll
in
pop
fldenv
scas
stos
test
bound
mov
push
fildll
sub
nop
pushf
or
into
int3
sub
daa
aam
inc
insl
decb
pushf
pop
mov
fidivrs
jle
cmp
sti
stos
sub
cmp
ja
add
lahf
sub
call
push
mov
jns
js
mov
pushf
jecxz
in
sub
xor
fistps
mov
push
movsb
into
cmpsb
pop
popa
and
xchg
movsl
lret
adc
out
jle
scas
loop
cwtl
or
iret
jb
jae
stos
into
pop
dec
jo
xor
popf
scas
push
mov
mov
jb
jnp
push
jne
mov
jnp
sbb
pop
rcrl
xchg
les
dec
das
sub
sbb
mov
xchg
inc
push
lds
push
mov
mov
test
mov
mov
jmp
decl
cmp
js
lret
fwait
stos
fldl
daa
test
loop
jg
mov
ffreep
shl
and
jo
in
je
out
fs
inc
push
mov
rolb
leave
loop
lret
cmpsb
jno
movsb
ja
mov
repz
pop
test
imul
sbb
jg
cmp
mov
scas
push
jp
aad
loop
out
int
int3
pop
sub
push
jg
xor
pop
fucomp
aad
notl
pop
jecxz
mov
andl
xor
lahf
test
call
or
out
ret
mov
mov
cmpsb
xchg
in
sbb
or
push
popf
mov
mov
cmp
aaa
enter
mov
sub
sbb
cs
lods
adcb
cld
push
mov
add
mov
lahf
popf
cmp
sbb
in
push
out
and
orl
sub
and
pushf
jae
mov
clc
mov
ja
mov
and
adc
decl
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
or
enter
cwtl
enter
dec
jecxz
jle
cmp
inc
push
arpl
mov
mov
cs
movsl
aaa
xor
lock
call
mov
or
popl
mov
mov
dec
ja
push
test
mov
mov
adc
sbb
xlat
xlat
sub
ss
arpl
in
aaa
cld
pop
jge
xchg
dec
mov
xor
testb
lock
fwait
add
decl
movsb
xchg
lahf
fcomps
sbb
mov
rclb
inc
mov
scas
fwait
dec
hlt
jns
adc
push
jge
scas
insb
rorb
pop
and
and
sti
mov
fs
inc
pusha
jg
loop
jnp
jae
or
jno
lods
pop
ror
jnp
push
das
mov
mov
fcmovne
repnz
ret
fidivs
test
inc
mov
clc
dec
pop
loope
fcoml
fsubp
punpckhdq
stc
adc
addl
aam
hlt
stos
les
push
mov
outsb
daa
mov
pop
fiadds
mov
mov
jle
pop
movsl
mov
sbb
pop
repnz
shll
push
sbbb
mov
sub
ss
pop
mov
gs
inc
mov
jmp
jle
inc
jecxz
sbb
and
sub
out
int3
jae
fnstcw
adc
stos
inc
xsaveopt
inc
or
cmpsb
popf
daa
sub
mov
inc
imul
and
xor
leave
faddl
jecxz
nop
sbb
and
call
mov
and
test
sub
dec
and
outsb
je
shlb
xor
add
xchg
jo
mov
sub
repnz
enter
dec
and
jns,pt
cmc
sbb
mov
sbb
imul
mov
inc
and
cmp
repnz
jecxz
jmp
mov
scas
mov
stc
mov
push
cs
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
sbb
das
mov
cld
lret
pop
and
in
cmpsb
arpl
push
sti
sub
xchg
addr16
mov
or
test
dec
test
and
sarb
adc
dec
fiadds
mov
pop
and
mov
jns
clc
outsb
fwait
and
lock
int3
inc
pop
dec
sbb
dec
or
icebp
xchg
add
lock
dec
push
xchg
sub
pop
dec
xchg
mov
les
and
jo
nop
adc
pusha
jle
mov
sub
into
mov
das
push
and
cmp
mov
scas
jmp
nop
pop
jno
mov
fnsave
rcrl
push
pop
imul
push
push
mov
iret
inc
jo
js
jbe
fwait
add
jecxz
xchg
add
cltd
sti
xchg
loope
mov
push
mov
push
push
ja
mov
inc
sbb
mov
adc
adc
lret
je
and
jle
inc
jbe
xchg
loop
xor
negl
lret
push
sub
int3
scas
jae
mov
mov
fimull
xor
sahf
jns
ljmp
mov
test
int
ljmp
mov
pop
pushf
fwait
repz
mov
inc
push
enter
ja
sub
push
inc
jle
pusha
mov
test
lea
mov
ljmp
repz
inc
sub
stos
jbe
mov
mov
mov
add
jmp
gs
imul
sbb
pop
push
sbb
mov
jg
mov
xchg
xor
xchg
arpl
cs
lcall
push
out
mov
imul
sahf
xchg
insl
lcall
jb
iret
iret
add
dec
lds
push
cltd
cmc
lcall
or
or
stos
out
xor
mov
cmp
cmpsl
jne
inc
xor
or
addr16
lahf
aas
adc
test
add
sub
mov
movl
jmp
adc
add
jnp
bound
ss
gs
insb
cmc
pop
adc
adc
jge
xor
hlt
dec
fwait
aam
std
sahf
xor
inc
mov
mov
test
loop
aad
add
mov
rcrb
mov
push
xor
pcmpeqw
sbb
mov
mov
pop
stos
in
aam
orl
jecxz
jl
mov
aas
mov
pop
xor
xor
aam
lcall
ret
jge
mov
inc
or
out
fcmove
cmp
xchg
mov
inc
lods
insl
sub
les
mov
dec
out
inc
and
pop
dec
fidivrs
std
sub
iret
ljmp
sti
data16
sub
xor
std
dec
fisttpl
mov
dec
sub
std
xchg
shll
mov
mov
sbb
push
xor
push
pop
mov
repnz
cmpl
adc
bnd
push
ficomps
xor
pop
pop
sbb
xor
sub
mov
xchg
and
insl
and
push
pop
push
inc
out
out
arpl
vmread
pop
in
repnz
mov
and
stc
mov
shlb
fcomps
divb
js
cmpsb
mov
inc
or
mov
jmp
mov
mov
scas
cmp
and
adc
cmp
push
out
inc
dec
das
fs
sbb
cld
fsubrp
mov
lret
sub
cmpsl
mov
mov
mov
mov
inc
pop
jns
lcall
cli
jmp
dec
int3
pop
repz
gs
add
cmpsl
jp
sbb
enter
lds
push
mov
lret
push
jge
push
jmp
and
add
test
cltd
dec
xchg
stos
loopne
rcl
jecxz
mov
outsl
jp
ret
push
push
addr16
movsb
or
pop
nop
pop
and
or
jp
aad
cltd
cli
ss
insb
andl
loope
mov
movsl
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
push
adc
adc
adc
cmp
jnp
mov
xchg
sbb
cmp
fistpl
in
pop
shrb
mov
out
push
fsts
inc
hlt
pop
pop
dec
negl
fs
xor
jnp
and
sub
jno
addr16
sub
jecxz
sbb
icebp
pop
scas
repz
cmp
lahf
cmp
cmp
out
and
inc
pop
mov
add
js
imul
pop
jecxz
lahf
stc
xchg
and
shrl
pop
clc
mov
and
test
stos
pop
add
in
fs
xor
jb
mov
xchg
add
mov
or
test
test
js
add
mov
cmpsb
mov
jbe
xor
push
jge
in
sbb
sbb
xor
xchg
sbb
mov
pusha
mov
jecxz
jo
rcrb
mov
jns
nop
xchg
leave
cmp
loopne
jns
push
mov
inc
lahf
rclb
xchg
lods
adcb
jbe
fwait
dec
sbb
jne
or
cmpsb
sub
xchg
pop
and
xlat
shr
inc
inc
jb
pop
test
mov
dec
mov
loopne
jecxz
adc
mov
sahf
add
or
jns
test
shll
out
call
call
jmp
mov
sub
jle
adc
fadds
mov
jge
testl
stc
mov
outsb
pop
imul
mov
andb
cmp
ret
arpl
and
pop
mov
or
mov
pop
roll
call
out
decl
xchg
adc
cmpsl
aas
mov
into
aam
push
mov
jg
nop
aaa
das
mov
dec
mov
cmp
inc
aas
ds
lods
popa
daa
mov
loope
cmp
jecxz
lret
mov
jns
loop
stc
je
dec
xlat
mov
dec
push
repz
scas
scas
push
int
cmp
ret
push
and
aam
popf
dec
jns
sti
pop
xor
and
mov
sub
push
mov
or
adc
loopne
cmp
mov
jns
mov
cmp
push
mov
cmpsb
pop
gs
lahf
cld
add
int3
mov
mov
lret
cmp
or
push
push
test
jo
dec
imul
rcrl
add
jo
xchg
movsl
daa
xchg
aad
out
inc
loopne
ds
andl
ljmp
mov
nop
add
mov
cmp
js
out
xchg
scas
movsb
in
sub
jp
orl
hlt
sbb
sub
mov
sbb
jne
xor
add
mov
dec
neg
mov
dec
fisttpl
scas
cwtl
add
in
inc
cmpsb
push
test
jne
incl
in
add
xor
je
push
mov
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
lods
push
adc
adc
mov
cmp
out
xchg
pop
jmp
popa
cmc
pop
lds
jecxz
int3
or
mov
test
jbe
data16
sbb
dec
clc
inc
shll
adc
mov
mov
mov
cmpb
mov
jecxz
inc
std
test
or
inc
push
outsl
inc
sahf
jae
popa
pop
jo
or
outsl
jno
cltd
arpl
aad
repnz
imul
popl
and
mov
les
out
or
add
mov
orb
lret
test
loop
ss
mov
and
test
mov
pop
xchg
jl
call
jmp
sbb
jae
fsubs
pop
jno
push
dec
lock
stc
inc
sub
sub
push
pop
fistl
xor
imul
test
repz
aam
lret
mov
inc
movsb
push
push
aas
jmp
push
lahf
jno
mov
and
stos
jp
and
jg
add
pusha
scas
or
fsubrs
shrl
mov
sub
sbbb
cmp
and
cltd
xchg
mov
sbb
lret
jl
sub
out
nop
ret
mov
mov
add
movl
adcl
and
push
xchg
in
sti
pop
xchg
inc
into
aam
hlt
lahf
test
fistpl
insl
in
les
popf
push
push
pop
adc
test
leave
mov
and
dec
push
test
cld
sbb
mov
mov
and
inc
jnp
adc
loope
pop
out
pop
or
push
gs
enter
mov
xlat
aaa
icebp
pop
ret
ss
xchg
pop
addr16
sarb
ret
adc
in
test
jb
test
dec
mov
xor
mov
add
mov
iret
or
js
sbb
loop
xchg
iret
fsubrl
imul
std
inc
cs
jne
xor
test
cmp
enter
cld
jl
dec
jne
xchg
mov
popa
arpl
push
pop
mov
aam
inc
andl
inc
and
sbb
push
xchg
push
cmp
rcrb
pop
add
hlt
jecxz
mov
sti
aaa
jnp
xchg
mov
and
cmp
dec
fcompl
jl
sbb
mov
and
popf
adc
dec
cmp
ja
fisttps
dec
data16
lahf
or
pushf
xchg
cmpsl
jge
push
js
inc
jo
pop
mov
dec
jmp
xchg
divb
das
mov
movsb
out
xlat
jne
out
mov
jnp
lahf
fsubs
mov
push
push
pop
push
sbb
mov
out
stos
das
lds
cmpsl
or
inc
pop
out
sub
popf
loope
add
sarb
adcl
in
and
notb
mov
dec
fs
adc
fs
mov
loopne
sbb
add
jb
or
mov
into
or
sub
jae
xchg
shlb
sbb
in
je
cltd
mov
mov
inc
sahf
sbb
lahf
int3
fwait
mov
inc
dec
imulb
adc
jbe
and
mov
not
mov
pop
movl
pop
pop
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
