push
mov
sub
mov
adc
mov
mov
or
mov
sub
push
movl
mov
mov
mov
sbb
mov
and
mov
orl
mov
mov
add
orl
mov
add
mov
jmp
iret
inc
loopne
push
adc
fmuls
orl
ja
inc
rcrb
mov
jmp
xlat
sahf
adc
in
mov
adc
ss
data16
mov
dec
inc
movsl
mov
pop
inc
xchg
mov
fdiv
ret
orl
adc
movsb
jge
dec
mov
and
cwtl
clc
pusha
lds
popf
mov
inc
push
mov
cli
imul
loop
push
stos
xor
notb
out
mov
cmp
xor
sub
jae
jp
call
jle
push
push
jl
adc
or
cmp
lret
xor
mov
aam
jne
push
ret
add
pop
fsubs
test
lea
push
xchg
xor
mov
data16
cltd
mov
shrl
loope
inc
cs
xor
mov
addr16
ds
mov
fsubrs
xor
dec
ret
cltd
mov
dec
nop
int3
or
stos
pop
lea
movsbl
mov
aas
std
mov
adc
outsb
dec
ljmp
adc
test
push
leave
jp
outsb
inc
testl
mov
ret
scas
mov
incb
ljmp
xchg
or
sbb
mov
inc
or
dec
dec
push
out
pop
sbb
loopne
sbb
popf
push
and
mov
dec
stc
sub
inc
sub
cmc
pop
jnp
dec
mov
inc
in
mov
shlb
xor
lret
hlt
es
sub
repnz
cld
lods
lods
addr16
pop
lret
inc
inc
inc
mov
xchg
mov
vmptrst
jb
push
jbe
loopne
js
jp
mov
sub
ljmp
xor
repnz
fs
push
jne
aas
mov
mov
ss
push
sbb
cmpsb
pop
dec
and
leave
mov
pushf
mov
xchg
out
sbb
mov
push
arpl
stos
adc
popf
stos
xchg
jno
fbld
jb
mov
and
mov
imul
shll
dec
inc
add
push
scas
int3
xchg
cmp
inc
cmc
mov
inc
pop
inc
or
pop
and
fstps
xchg
xor
xchg
test
xor
mov
push
test
or
and
cs
dec
in
dec
jmp
xchg
push
in
inc
ret
out
xchg
pop
imul
mov
stc
imul
sbb
outsl
jne
das
xchg
inc
ret
adc
sub
loopne
cmp
jne
xor
inc
sti
sbb
lock
or
push
push
or
pushl
pop
hlt
fnstcw
pop
or
cmp
adc
mov
pop
mov
outsl
int
sbb
or
cmc
movsb
dec
xchg
cwtl
ret
lahf
inc
xchg
xchg
push
sbb
fcomps
mov
insb
imul
mov
sbb
add
jnp
jg
lock
call
movl
and
xchg
inc
or
nop
mov
inc
sti
xchg
pop
mov
mov
xor
inc
fadds
repz
loope
sub
jle
push
mov
cmp
std
iret
mov
mov
in
xchg
jo
sahf
adc
movb
and
jp
adc
inc
lea
pop
mov
enter
dec
jg
test
rclb
mov
sub
mov
aaa
rcr
pusha
and
cmp
and
or
fcomps
rol
mov
mov
ds
cwtl
sub
push
pop
push
loop
dec
jnp
sbb
sti
movsl
xchg
lea
mov
or
mov
mov
jo
outsl
mov
jnp
sbb
inc
cmpb
push
and
jnp
and
test
add
ljmp
test
dec
pop
xor
in
or
mov
lret
or
fcom
je
pop
into
cmp
jns
shl
xor
pop
lods
jecxz
mull
rcrb
pop
sbb
out
nop
popa
adc
mov
out
jge
push
mov
mov
cmp
sbb
fwait
ss
sbb
add
das
lea
jle
fsubs
rcrb
add
mov
fiaddl
or
ss
mov
filds
sub
fwait
hlt
ret
add
and
fsincos
pop
notl
cmp
adc
daa
pop
insl
sub
adc
mov
lret
adc
sbb
add
inc
out
push
add
push
pop
dec
cmpsl
adcb
and
mov
add
aam
cld
jne
pushw
mov
mov
shlb
cmp
xchg
movsl
test
push
inc
pop
inc
retw
xchg
mov
jbe
push
push
aas
and
mov
addr16
sub
shll
mov
push
shrb
test
mov
scas
leave
lock
inc
cmp
xor
adc
notb
lea
subb
dec
jmp
and
pop
xor
rolb
pop
lock
sbb
xlat
jg
test
xor
push
mov
test
adc
add
iret
fstpt
sbb
test
cmc
dec
or
in
mov
sbb
adc
add
jae
lock
lea
push
lock
sarl
fwait
pusha
dec
negb
sbbl
dec
sti
xchg
aaa
xchg
mov
lods
hlt
jg
outsl
or
sub
jmp
or
jnp
cli
jmp
xchg
lahf
movsb
movsl
adc
xchg
iret
sub
xlat
cmpl
shlb
int3
cld
mov
lds
mov
aas
data16
pop
in
mov
or
sbb
test
std
jae
or
jl
rclb
cmp
test
daa
je
dec
lods
and
in
or
bound
jmp
cmp
and
repz
push
mov
jo
sbb
loopne
popa
lods
iret
stos
dec
sub
mov
decl
test
mov
mov
lods
jae
jbe
imul
pmulhw
push
mov
je
outsl
dec
sub
sub
std
jne
mov
inc
xor
mov
sub
das
scas
hlt
pusha
fsubs
mov
xchg
adc
lcall
scas
cld
lret
scas
dec
insb
adc
cmp
cmp
bound
hlt
jnp
cmp
mov
daa
int3
mov
jns
jo
sub
jmp
jmp
repz
pop
fistpl
push
dec
imul
repnz
scas
ljmp
in
dec
outsb
xor
jbe
xchg
jmp
cli
fwait
pusha
xor
lock
mov
xchg
test
mov
mov
mov
addl
sub
notl
mov
movl
sbb
add
mov
not
orl
orl
cmpl
movl
mov
jmp
mov
jg
pushl
pushl
call
sbb
sbb
sub
or
orl
lea
adc
mov
or
mov
and
mov
xorl
mov
adc
add
mov
dec
mov
mov
adc
jmp
mov
xor
js
or
ja
hlt
out
lahf
adc
cmp
xchg
repz
inc
push
mov
sahf
jno
sbb
in
push
ds
adc
aas
jo
inc
daa
pusha
and
cmp
sub
xor
dec
std
cmp
mov
fiaddl
mov
jg
lret
testl
lret
add
bound
cmp
jnp
fldcw
sub
sbb
jo
pop
or
xchg
mov
push
cltd
and
add
das
sbb
fisttpl
fimuls
xor
lock
inc
loope
push
and
add
add
or
cmc
inc
leave
inc
call
rorl
add
xorb
mov
test
mov
mov
mov
pop
add
cmpb
out
mov
and
aam
dec
cmp
adc
imul
mov
push
xor
mov
out
das
mov
repnz
jns
rcll
dec
pop
xchg
and
gs
inc
pop
cmpsb
pop
cmp
mov
es
jmp
cmpsl
iret
push
int3
xchg
outsb
push
dec
test
mov
mov
imul
xchg
test
in
dec
out
int
push
add
pop
xchg
pusha
push
aad
cmp
lock
insb
mov
dec
push
mov
pop
fcmovnu
cmp
push
jp
int
into
or
xor
imulb
fmull
sbbb
mov
mov
test
xor
dec
sub
in
jb
movsl
mov
ja
lcall
jb
and
outsl
js
or
stc
or
jne
dec
xchg
push
xor
push
popf
lods
pop
test
stos
je
mov
cld
xchg
push
mov
inc
push
dec
add
lods
mov
dec
inc
pushf
lret
andnps
cmp
add
add
dec
mov
and
popf
dec
stos
inc
cld
cltd
movsl
rcr
xor
xor
shlb
into
mov
mov
out
stos
and
add
addl
add
inc
daa
out
mov
sbb
push
jle
cli
lea
ret
in
or
sbb
neg
sbb
add
movsb
sub
adc
add
int
add
mov
clc
xchg
jno
xlat
in
fwait
dec
rcr
inc
cmp
mov
std
lock
loope
add
inc
jnp
pop
es
sahf
andb
testl
enter
sbb
stos
loopne
in
pop
aam
pop
inc
xor
dec
push
add
fldt
push
xchg
dec
sbb
fnstsw
add
iret
shl
stc
push
adc
pop
sub
fstpl
jmp
fildl
push
popa
pop
loop
cwtl
bound
pop
add
sbb
fadd
mov
fldcw
mov
push
and
add
xchg
xchg
mov
sti
filds
jle
pop
pop
dec
shrl
notb
push
xor
stos
mull
pop
out
mov
popa
ja
aam
jge
jg
shll
lahf
sub
sbbb
mov
sub
int
cmp
or
das
gs
xor
shlb
push
test
inc
js
and
xchg
aaa
push
inc
scas
sub
cltd
nop
dec
mov
mov
hlt
sbb
jo
in
pop
fistl
or
mov
ljmp
mov
dec
scas
stos
jns
adc
repz
in
push
xchg
add
shll
cmp
cmpsl
pop
xor
lret
cmp
clc
xchg
xchg
jae
dec
cwtl
data16
ret
or
cld
xchg
pop
je
lds
inc
inc
in
arpl
dec
ds
jp
and
jp
ficoms
cmp
xlat
bound
jo
mov
and
testb
ret
ds
xchg
and
mov
lret
cmpsl
dec
jge
out
cmpsl
pushl
push
popa
mov
subl
push
sbb
adc
lods
sub
mov
aad
lret
enter
out
out
push
add
pop
fsub
aaa
es
jae
cs
mov
dec
push
mov
jle
and
lea
mov
scas
xchg
ret
insb
out
fidivrs
data16
xchg
gs
xchg
pop
out
mov
push
sarl
xor
mov
popf
scas
stos
out
mov
xor
dec
rol
std
out
or
adc
xlat
xchg
sub
mov
and
dec
push
dec
adc
mov
jne
push
xor
mov
ret
inc
mov
mov
test
aam
cltd
repnz
or
add
jbe
and
xchg
sbbl
cmp
mov
popf
pop
inc
push
subb
adc
mov
into
cs
cmc
and
negl
xchg
add
imul
sub
mov
ds
test
or
fldl
jle
cmpb
cmc
sbb
xchg
data16
xchg
ljmp
pushf
addl
pop
test
add
and
xchg
out
push
out
xchg
push
add
inc
or
mov
cli
repz
or
sub
repz
lret
dec
jmp
add
cmp
bound
xor
fadd
rcr
jb
out
jge
cli
dec
cld
insb
int3
iret
in
in
sbb
mov
mov
fnstsw
xor
mov
test
pop
dec
scas
cmp
and
xchg
or
xchg
jmp
push
iret
dec
hlt
addr16
iret
cmc
pop
inc
pop
std
jmp
enter
push
inc
cmp
or
mov
lods
mov
pop
rcrl
test
mov
into
push
outsb
out
sub
inc
dec
fmul
push
adc
or
sbb
enter
shlb
ja
sar
lret
add
mov
into
pop
mov
enter
push
xchg
xlat
rcll
out
pop
mov
mov
cmp
lods
push
leave
outsl
dec
scas
inc
mov
and
jns
int3
pop
loopne
cwtl
xchg
pop
cvtdq2ps
test
push
dec
ja
push
inc
adc
aas
sti
sub
pop
cmp
movsb
xor
add
adc
mov
pop
mov
cmc
cmp
jae
sub
push
loope
mov
je
sbb
loopne
jg
sti
xlat
rorb
jno
shll
fnsave
dec
lcall
pop
adc
cmp
into
es
cwtl
aad
sbb
pop
or
leave
scas
fwait
bound
or
ds
loope
xchg
out
mov
aaa
inc
and
pop
fisttpl
sahf
aad
loopne
rol
je
xor
leave
stos
push
mov
add
or
and
sbb
lods
enter
hlt
adc
add
jmp
jmp
mov
lock
popf
mov
pop
jp
mov
xchg
insl
mov
add
aam
imul
cmpsb
lods
mov
xchg
aam
data16
inc
jae
cmp
push
fs
outsb
adc
es
jmp
aaa
hlt
sub
jne
mov
inc
out
push
mov
pop
mov
les
jnp
mov
add
movsb
mov
dec
or
inc
sub
int3
jnp
mov
jne
and
lods
mov
cli
icebp
daa
mov
add
mov
orb
sbb
inc
jmp
imul
or
fadd
jl
mov
popa
adc
xchg
xchg
repnz
jbe
jnp
out
pop
or
push
enter
repz
cmp
mov
js
inc
imul
add
call
arpl
test
push
xor
cmpsb
inc
andb
pop
xor
andps
dec
and
gs
in
aaa
scas
hlt
das
jb
enter
sti
lds
or
fstl
jbe
dec
sub
scas
adc
mov
push
mov
cmp
scas
push
xchg
or
sbb
mov
cmp
inc
push
mov
xlat
xchg
cmp
pop
into
add
decl
sbb
and
js
mov
je
ja
xor
pop
pop
xchg
shrb
scas
mov
paddusb
jge
movb
xchg
jne,pn
and
xchg
shl
and
sub
push
push
sahf
adc
cmpsb
loop
xchg
pop
mov
mov
xchg
push
aas
mov
mov
cmc
sti
andl
mov
xchg
mov
lret
or
stc
jge
insb
lea
mov
lret
sub
es
mov
icebp
out
push
jno
mov
push
inc
imul
or
leave
xchg
arpl
jbe
fidivrl
dec
sbb
pop
adc
and
inc
scas
loope
add
aas
adc
ret
pop
pop
in
mov
mov
iret
mulb
sti
test
mov
cmpsl
ret
mov
out
in
adc
fisttps
jg
xchg
xchg
inc
popa
outsl
inc
dec
cs
mov
jnp
aad
jecxz
mov
imul
fcoml
dec
cli
pop
cmp
add
jle
leave
popa
int3
cmp
outsb
or
jae
movl
and
push
sbb
outsb
dec
mov
sbb
dec
xchg
push
inc
or
scas
lea
fs
add
or
ja
sbb
adc
leave
push
push
xchg
imul
fcomip
add
mov
lea
ret
test
lcall
lods
jp
xor
ja
and
jne
jg
ret
push
nop
add
fs
in
rorb
dec
test
filds
subb
aad
mov
mov
dec
das
jnp
les
mov
dec
out
cltd
addb
repnz
in
insl
lods
fsub
mov
test
loopne
fisubl
xchg
xchg
arpl
inc
int3
out
adc
test
sarb
dec
out
dec
cmpsl
cmp
cmp
xor
cmpb
stos
and
push
cld
movsb
push
jecxz
test
daa
mov
imul
rcrb
sbb
mov
out
stos
hlt
subl
hlt
push
push
pushf
pop
cmp
std
out
mov
gs
pop
test
int
mov
inc
pop
ja
rcll
sub
jnp
daa
mov
out
fcomp
pop
adc
iret
fidivs
cmpb
or
bound
inc
push
inc
xchg
dec
bound
test
int
jecxz
cmp
ret
mov
ret
das
nop
mov
mov
push
push
adc
das
xchg
repz
sub
mov
pushf
leave
ja
pop
jno
ret
rclb
sbb
lret
out
loope
pop
mov
lods
mov
mov
jae
into
or
add
mov
adc
push
imul
scas
push
pop
fmul
out
je
aas
add
mov
cmc
stos
pop
dec
and
and
insl
hlt
call
mov
lahf
aam
inc
adc
ds
mov
jp
aad
aad
dec
pop
scas
cmc
jb
es
mov
enter
mov
ljmp
or
lock
xchg
call
sti
inc
ljmp
jg
lods
fcomps
fwait
jno
xlat
into
jae
das
dec
lods
repnz
pop
das
xor
mov
cmp
je
aaa
xor
insb
repz
aaa
add
mulb
adc
inc
jg
addl
jb
in
push
loopnew
pop
and
pop
scas
and
or
or
popa
pop
nop
out
shr
fstps
cmc
xlat
daa
push
stos
call
insl
sub
xchg
sbb
lret
hlt
ja
mov
jns
jmp
jp
xchg
xchg
aam
xchg
adc
into
push
pop
push
out
mov
pop
mov
popa
mov
js
push
arpl
mov
and
jns
pop
pop
push
outsb
clc
pop
or
std
ss
mov
stc
add
sahf
cltd
cmp
daa
stc
sub
out
jne
mov
insb
sahf
mov
or
mov
fs
lea
test
cmp
adc
cmp
push
insb
mov
shr
push
push
adc
mov
test
inc
mov
xchg
popa
cmpsb
jmp
mov
push
xchg
shlb
int3
pop
mov
roll
into
xchg
pop
sbb
cmp
xchg
nop
and
sub
push
stos
andl
adc
repz
in
pusha
mov
inc
sahf
xor
push
cmp
arpl
mov
pop
shr
cmp
jno
pop
sbb
into
lods
jae
loopne
cli
cmp
push
xor
xchg
and
jbe
fucom
dec
mov
push
out
adc
inc
cmpsb
stc
sub
rol
cmp
les
push
inc
cwtl
cmpb
sub
add
nop
shlb
test
cmpb
push
popa
lret
mov
cmp
or
jbe
addr16
daa
cwtl
lds
mov
inc
sub
pop
mov
test
xor
fwait
inc
insl
hlt
inc
ja
or
push
repz
push
cmp
xchg
shl
cltd
push
jne
dec
xchg
icebp
or
cwtl
mov
popf
mov
push
lods
push
mov
or
cmpsb
push
jnp,pt
imul
test
sbb
cmc
leave
pop
push
jbe
inc
sbb
fstpl
popa
lods
fsubr
bound
xor
sarb
andb
scas
lds
pop
fistps
mov
push
xor
jnp
mov
mov
jne
insb
xchg
dec
aaa
fnstsw
fs
cmp
or
mov
xor
mov
sub
sub
call
xchg
ja
dec
jo
js
cmp
js
arpl
scas
int
or
int3
cli
xchg
add
xchg
clc
movsl
xor
inc
add
push
sbb
and
pop
cmp
add
movl
add
rorb
rolb
add
movl
movl
movl
jmp
movl
not
jg
pushl
push
push
push
pushl
push
pushl
call
sub
xorl
andl
andl
addl
addl
adcl
movzbl
adc
jmp
sti
loopne
stos
dec
or
xor
and
out
cwtl
out
ja
fsubp
mov
mov
data16
test
out
jns
mov
push
or
pop
shr
fcomip
sbb
push
in
mov
outsb
add
hlt
xchg
fisubl
dec
xor
enter
mov
mov
pop
addr16
test
jb
dec
lds
iret
sbb
add
dec
inc
stc
xchg
int
jnp
jp
inc
cmpb
sahf
cmp
or
clc
dec
mov
mov
sub
pop
clc
cmpb
adc
cmp
push
mov
push
idivb
test
adc
in
pop
decl
push
in
outsl
enter
or
int
incl
inc
cmp
mov
pop
ja
sarb
or
rcrl
pop
sub
gs
jb
into
enter
xchg
pop
sbb
mov
mov
pop
pop
mov
mov
sub
sbb
mov
shr
xchg
lret
mov
out
inc
arpl
hlt
push
lea
std
xchg
xchg
scas
mov
test
imul
jmp
and
xor
pop
lea
push
jne
test
out
clc
in
fisubl
dec
test
test
aas
lcall
dec
mov
mov
outsl
mov
inc
pop
jne
cmp
mov
and
fists
push
sub
xchg
push
sub
mov
clc
mov
sahf
cmp
fcomip
adc
add
int3
jo
cmpl
enter
xchg
cmpsl
loope
out
dec
jne
sub
mov
lcall
and
stos
adc
jae
xchg
arpl
testl
dec
gs
jno
dec
data16
pop
shlb
mov
cmp
pop
lds
inc
pop
jl
pushf
pop
mov
pusha
dec
inc
sub
xchg
imul
int
imul
into
add
push
cli
bound
dec
add
mov
dec
repnz
mov
or
js
pop
in
xchg
mov
cmp
mov
lock
xchg
mov
xor
pop
mov
xor
rol
fsubrl
fsub
sti
dec
jnp
leave
mov
sbb
pusha
mov
dec
jns
xor
xor
popa
mov
push
adcl
mov
sub
sbb
rcll
in
mov
out
icebp
push
push
inc
fs
out
xchg
mov
pop
or
ds
mov
jae
icebp
adcl
bound
stc
mov
add
sub
sbb
push
push
sbb
nop
dec
loope
and
lods
mov
sahf
rorb
lock
hlt
push
push
add
cmp
push
out
cmpl
mov
push
js
adc
sahf
bound
rcr
mov
aad
adc
je
mov
pushf
rolb
mov
inc
popa
das
test
clc
lcall
xchg
je
pop
sti
mov
xor
or
int3
pop
inc
push
je
xlat
push
xchg
out
dec
mov
sub
sbb
dec
push
sbb
cld
sub
pusha
xchg
xor
lret
stc
push
mov
ret
inc
cmp
and
mov
mov
sarl
gs
ss
mov
adc
lods
or
jns
dec
push
add
mov
imull
adc
fldenv
bound
mov
xchg
jns
push
decb
test
jg
xlat
push
int
hlt
int3
mov
es
cltd
push
xchg
lret
mov
je
xchg
jle
add
mov
jecxz
mov
mov
fcmovu
in
inc
xchg
push
add
and
xor
in
add
subb
int3
add
or
xchg
xchg
filds
jnp
inc
ds
sub
xchg
jnp
fimuls
loopne
mov
xorl
stos
dec
js
adc
mov
lods
push
mov
test
hlt
mov
pop
xchg
pop
cmp
test
cmpsl
pop
mov
and
fisubs
xchg
and
and
call
dec
imul
test
test
dec
mov
jne
jmp
xchg
ja
cs
in
sarb
mov
cwtl
fs
and
cli
gs
in
subl
stos
adc
mov
dec
orl
lar
cmp
inc
sub
and
adc
lea
dec
mov
jns
adc
jae
cmp
push
jae
sahf
dec
pop
jnp
or
std
loop
pop
lret
mov
sahf
aaa
jo
jns
jp
rol
dec
jp
cmpsl
dec
repz
out
mov
hlt
push
in
ss
mov
popa
movsb
loope
out
sub
dec
sahf
xchg
jle
std
lahf
jmp
pusha
mov
jg
and
cmp
mov
jmp
xchg
add
push
sub
xor
sbbl
pop
cwtl
stos
lods
loope
sti
mov
cmp
rcl
aam
push
bound
add
pop
fimuls
pop
inc
pop
sub
arpl
xor
inc
sub
and
mov
inc
mov
cmp
ss
push
lods
inc
jno
or
push
and
imul
xchg
and
fstl
pop
fs
nop
pop
stos
jmp
xor
fnstcw
pop
es
mov
mov
jmp
and
cmpsl
addr16
andnps
fidivs
hlt
fsubl
stos
push
int
jp
dec
dec
ds
sbb
stos
fsubs
fidivl
stos
sbb
stos
pop
pop
and
subb
push
sbb
mov
xchg
xor
xor
mov
mov
fsub
out
call
mov
loop
ret
dec
jmp
sbb
adc
xor
sub
sub
lock
aaa
insl
push
add
push
sbb
ret
jb
aad
add
ja
fcomi
data16
cmp
mov
push
push
add
out
jns
call
shrb
or
pop
icebp
pop
pop
fcomip
ffreep
mov
js
dec
cli
cmp
movsl
xchg
fs
data16
fwait
std
mov
into
adc
mov
cld
pop
arpl
lea
ds
and
mov
imul
cs
jne
out
fmuls
dec
mov
outsb
cmc
shll
sbb
xchg
add
scas
pop
xor
mov
aas
adc
push
cld
cs
es
rolb
outsb
mov
sub
rclb
sbb
or
or
xchg
dec
cmp
add
sub
data16
movsl
pushf
movsb
scas
rcll
adc
xor
pop
sub
push
adc
test
mov
in
ret
addb
or
cmp
push
faddp
lret
push
cmp
and
dec
out
and
arpl
jo
movzbl
mov
or
movl
movl
sub
movl
movl
and
movl
movl
movl
xor
or
adc
movl
cmpl
movl
mov
jmp
not
jl
push
pushl
pushl
push
call
add
sbbl
add
sbbl
xorl
sbbl
notl
or
movl
addl
movl
movl
movl
mov
or
mov
movl
dec
movl
movl
cmpl
movl
movl
movl
movl
jmp
mov
jge
push
call
movl
orl
orl
add
xorl
xorl
xorl
and
movl
cmpl
movl
mov
jmp
mov
mov
jb
push
pushl
push
push
pushl
push
pushl
push
push
pushl
pushl
call
orl
sbbl
adc
addl
movl
sbbl
movl
add
movl
jmp
and
jnp
sub
mov
dec
dec
mov
ja
in
push
popa
cs
adc
jbe
pop
adc
xor
dec
ret
mov
fdivs
adc
hlt
xchg
jle
iret
lock
jbe
mov
push
sub
adc
call
mov
xor
and
or
lock
fs
lods
sarl
bound
inc
data16
push
push
pop
add
lret
jmp
mov
sbb
jns
push
cmpsl
dec
push
add
jl
inc
into
movsw
pop
dec
dec
in
fsts
inc
lret
scas
mov
mov
test
ss
lea
test
outsb
sti
lcall
loopne
lcall
push
sbb
fsts
cld
cmp
xchg
sbb
daa
dec
mov
test
lock
leave
sub
movsb
add
iret
jo
pop
and
jmp
mov
mov
lods
xchg
mov
fildl
dec
test
mov
popl
test
add
and
clc
and
out
mov
outsl
sbb
mov
leave
outsb
js
fmuls
in
jecxz
dec
xor
mov
ljmp
or
mov
jge
ja
cld
add
and
inc
adc
and
sub
mov
cmc
rcrl
test
or
jge
xor
jge
jae
enter
dec
push
das
js
imul
push
out
aas
inc
popf
loope
inc
sub
imul
sti
imul
inc
inc
aas
and
mov
lods
dec
cmp
inc
bound
test
leave
add
pop
pusha
and
push
shlb
gs
adc
lret
jl
pop
inc
xor
sbb
push
jp
mov
sahf
sub
sarl
and
call
test
push
jno
xor
sub
notl
or
and
in
dec
aam
mov
ljmp
push
push
jb
ljmp
mov
popa
pop
stos
imul
movsl
xchg
jmp
in
jle
push
vprotb
dec
shlb
or
sbb
push
fistpl
mov
cmp
xor
mov
mov
mov
cmp
popl
pop
fimuls
xchg
xor
mov
pop
rcrb
nop
jns
movhps
rcrl
ret
aad
arpl
repnz
push
sbb
nop
add
je
in
or
test
push
jno
and
fcomps
dec
xchg
mov
mov
bnd
dec
inc
fbld
push
mov
leave
inc
daa
cmp
insl
and
jle
mov
lahf
xchg
and
mov
daa
and
inc
lds
pop
fisttpll
ljmp
ret
ja
mov
test
lock
dec
pop
jge
dec
add
sarb
rorl
dec
or
pushw
push
imul
dec
fistps
jl
ljmp
add
cmp
xchg
mov
dec
fwait
shrl
repz
movsb
dec
js
loop
das
movsl
xchg
test
fnstsw
scas
sub
jne
sbb
xchg
mov
test
pop
in
cmpsb
out
outsb
mov
sbb
int
hlt
pop
push
pop
xchg
shll
hlt
pop
xchg
xchg
push
call
cmp
mov
mov
lock
mov
in
repz
daa
aad
leave
push
xchg
jbe
jns
pop
fcmovu
cmp
popf
inc
push
jmp
sarb
fwait
xchg
fldl
xchg
mov
or
sub
mov
jnp
cmpsl
inc
and
fwait
xchg
imul
xchg
and
pop
mov
adc
inc
es
pop
adc
imul
push
bound
jns
inc
push
pop
lods
jp
div
and
jns
rorb
push
and
mov
sub
out
xor
shrb
xor
sub
pop
pop
cli
out
mov
daa
rorl
mov
ss
in
sahf
outsl
jno
lcall
xor
jle
mov
cmpb
xor
lea
or
mov
aad
add
push
inc
int
dec
into
or
ss
cli
fcmovnu
xchg
xchg
in
cmpsl
add
loope
js
sub
jl
or
inc
mov
pop
jne
mov
stos
sub
icebp
inc
sub
adc
mov
xor
mov
stos
jecxz
fbld
sbb
pushf
add
pop
mov
popa
lods
mov
pop
mov
mov
jg
push
dec
out
dec
adcl
hlt
stos
imul
subb
mov
ss
mov
mov
out
js
aam
push
jnp
cld
lcall
push
push
imul
lods
iret
xor
lcall
pop
rcrb
iret
inc
fidivrl
ljmp
shlb
push
mov
adc
mov
jecxz
sub
cmp
push
push
cmpsb
sbb
scas
sbb
call
fisubl
cmp
mov
or
add
shll
roll
mov
sbb
push
inc
fs
int
jp
add
xchg
test
cs
fxch
inc
call
jg
js
push
sbb
xchg
enter
push
lret
imul
outsl
fildll
cmp
or
mov
loop
dec
and
std
cmp
dec
out
mov
jg
out
mov
jbe
sub
add
inc
jmp
cmpsl
mov
pop
mov
dec
xchg
sarl
repz
inc
push
pop
mov
rorb
push
test
cmp
push
mov
xlat
out
in
sahf
mov
shlb
jno
push
insb
jb
cld
call
pop
insl
fbstp
aad
loopne
add
addl
movsb
aam
aaa
mov
xchg
jbe
popf
int3
test
jle
bound
sbb
jp
orl
jbe
rorl
dec
mov
in
hlt
ds
xchg
loop
mov
sbb
mov
stos
mov
fstpl
or
sti
packssdw
test
in
enter
push
mov
fwait
jle
jbe
out
subl
xor
lods
push
xor
cltd
mov
push
lret
sti
sbb
stos
and
call
jmp
lods
cmpsb
mov
cmpsb
sbb
xor
popa
or
out
sbb
jne
in
cltd
pop
lea
cmp
add
push
stos
lahf
js
out
pusha
lds
jns
add
fdivl
fists
push
ret
mov
jmp
cltd
mov
push
adcl
mov
sti
enter
cwtl
jns
mov
repz
sub
jmp
das
dec
inc
je
adc
shr
movsb
cmp
jb
incb
mov
or
lea
mov
jmp
cmp
pusha
stos
xor
ret
and
xor
leave
dec
lcall
icebp
daa
push
jns
in
and
inc
aam
push
add
inc
movl
xorl
movl
mov
xor
movl
not
movl
mov
addl
jmp
in
outsl
dec
gs
notb
inc
test
cmpsl
les
ja
push
xchg
gs
lret
push
imul
inc
dec
hlt
cwtl
lock
and
loope
sub
je
sbb
xor
or
jae
sbb
cmp
add
and
and
cwtl
push
mov
jb
shll
or
bound
sahf
out
js
add
pop
sbb
mov
sub
and
jb
inc
testl
pop
add
inc
mov
adc
or
mov
aad
adc
cmpsl
mov
daa
sbb
lds
test
xor
mov
fs
push
or
xchg
adc
js
pop
jne
pop
push
and
jmp
pop
bound
addl
fwait
push
loope
xorl
cmp
xor
mov
pop
out
mov
xchg
dec
test
mov
test
pop
or
bound
fstl
repz
dec
hlt
cmp
cltd
sar
cmp
in
clc
das
cmp
sub
adc
das
adc
xlat
and
imul
imul
outsb
rorl
repz
orb
scas
test
mov
xchg
inc
xchg
call
xor
xchg
decb
xor
jbe
sub
xor
jmp
je
pop
cmpsl
lcall
cmpsl
into
dec
push
sbb
mov
js
sbb
in
xchg
cmp
fisubs
aam
add
data16
lret
das
inc
mov
push
cmp
xchg
fsubp
mov
test
insl
je
lcall
jne
mov
fmuls
mov
loopne
jg
cmc
mov
std
je
mov
push
aam
roll
bound
push
rorl
push
mov
data16
sti
push
xlat
sub
orl
sub
jle
xor
repnz
push
icebp
push
mov
mov
mov
cmpsl
lcall
insb
jmp
andb
cwtl
daa
push
out
dec
hlt
jge
imul
push
pop
cs
into
ret
or
xor
jae
jmp
cld
cmp
sbb
ret
jb
sub
nop
fwait
pop
sbb
cmp
dec
or
dec
ret
in
shll
or
enter
cld
stc
sub
add
movsb
xchg
jne
adc
cmp
push
in
lea
rorl
cld
test
adc
sub
loop
lret
addb
movsb
sbb
fisttpll
sbbl
ja
fildl
inc
movsl
xor
cld
xor
mov
jne
inc
inc
adc
sub
sbb
jg
mov
mov
ds
or
into
mulb
frstor
adc
xsaves
push
js
sub
add
imul
fisubrl
dec
mov
jnp
out
sahf
or
jb
mov
insb
jecxz
out
rorl
imul
sbb
cmp
fmuls
push
psrlq
das
pop
jmp
ret
cmc
mov
mov
push
sarb
xchg
cld
xchg
rolb
lods
movb
stos
js
jle
pop
mov
xchg
scas
ret
sarl
add
repnz
popa
mov
mov
fidivs
xchg
xchg
aaa
out
pop
adc
insl
es
bound
jmp
xchg
inc
outsb
mov
mov
outsl
std
inc
addr16
popf
push
ror
lods
lret
add
xchg
mov
xchg
mov
or
dec
mov
aad
xor
stc
aas
jo
shr
shll
xchg
sub
dec
mov
ficompl
pop
aas
sub
mov
repz
cwtl
cltd
xor
mov
cmc
sahf
jbe
push
dec
jae
mov
lret
aam
pop
jg
dec
inc
xchg
pop
xchg
gs
shlb
repz
ljmp
in
mov
add
sbb
pushf
or
or
or
mov
mov
sbb
and
push
test
adc
aaa
add
jl
out
cmc
call
push
sub
fidivrs
sbb
mov
or
mov
cwtl
mov
lahf
jecxz
mov
ja
clc
lock
ss
pushf
pop
cmc
jno
adc
jmp
cmp
xchg
sbb
mov
sub
and
sbb
or
mov
cmp
mov
repnz
cs
pop
je
push
out
rsqrtps
lahf
dec
in
stc
mov
movsl
sbb
mov
bound
xor
jmp
das
xor
adc
push
jg
je
cmp
jb
xchg
in
xchg
mov
and
xor
sbb
xlat
or
xlat
cmp
mov
dec
cmc
jb
push
shll
push
sub
sti
mov
add
or
mov
lods
xor
fmull
in
push
fmulp
repz
sub
ja
and
call
stos
ret
adc
mov
imul
pop
jo
adc
scas
icebp
mov
push
data16
push
fmull
rclb
movl
dec
push
adc
fidivrl
notb
lahf
mov
push
push
lods
lcall
sarb
cmpsb
imul
sub
in
mov
pushf
clc
dec
into
popf
mov
dec
mov
cmp
sbb
repnz
jecxz
or
clc
jne
loope
push
push
mov
pop
cltd
pop
xor
scas
jp
imul
mov
insb
and
sar
clc
jb
push
movsl
xchg
movsb
inc
loopne
and
sbb
fdivl
ret
xchg
shrb
or
xchg
pop
pushl
and
mov
jg
arpl
mov
shll
adc
pop
das
dec
iret
das
ret
pop
inc
ret
lods
into
rorb
iret
imul
mov
inc
jg
jge
sbb
push
sub
pop
inc
in
repnz
mov
xor
enter
xchg
shrl
fcmovnu
outsb
stc
test
jmp
js
adc
stc
dec
push
int3
and
lods
cmp
add
and
mov
movsb
jl
ja
mov
push
cmp
xlat
out
cltd
pop
inc
loope
push
push
pusha
daa
es
sub
sbb
mov
inc
cmp
in
ja
adc
push
test
mov
ljmp
movsb
dec
jge
inc
setno
shlb
jmp
or
clc
hlt
lret
cmc
repnz
cmpsl
mov
sub
xchg
scas
xchg
xor
mov
call
les
mov
or
inc
in
mov
out
xor
mov
insl
push
mov
pop
mov
xchg
push
inc
sbb
xchg
hlt
add
jbe
nop
mov
bound
aam
out
inc
mov
mov
jecxz
hlt
in
loope
cmc
aas
and
popf
rcrl
push
mov
orl
push
adcl
push
andl
push
push
adcl
call
adc
mov
subl
mov
xor
mov
sub
mov
movl
jmp
mov
daa
xchg
gs
or
mov
xor
inc
mov
ja
xchg
pop
add
jne
insb
test
scas
loope
in
sub
addl
sub
push
cmp
loope
sub
xchg
adc
xchg
rol
adc
lea
orb
push
mov
xchg
push
sub
mov
test
push
sub
xchg
lret
loopne
cwtl
jge
repnz
iret
xor
or
sub
xchg
enter
push
cwtl
out
std
mov
inc
test
or
cmp
mov
stos
ja
xchg
push
test
inc
xor
mov
mov
mov
pusha
lock
or
aaa
test
sbb
or
or
loop
add
inc
dec
sbb
push
repnz
sub
test
scas
adc
rcrb
xor
sub
push
js
andl
pop
data16
xorl
push
je
xor
jns
gs
dec
adc
jns
pop
ret
jno
inc
hlt
xor
pop
xor
aad
jmp
cmp
mov
xlat
lock
mov
xchg
mov
mov
loop
icebp
xor
cmp
and
mov
jle
cmpl
push
sti
inc
aas
cmpl
arpl
call
adc
pop
test
subl
cmpsb
add
add
lods
stos
pushf
cs
lea
ret
pop
sti
mov
cmpsb
clc
ljmp
mov
inc
ds
jle
push
jnp
adc
dec
inc
sbb
inc
test
je
or
fcmovu
pop
jb
mov
test
adcl
sbbl
jb
or
mov
jo
mov
and
lock
sahf
inc
lahf
ss
jecxz
gs
je
push
int3
hlt
test
dec
lods
dec
popf
inc
push
and
cwtl
testl
addr16
sbb
std
mov
xchg
rcr
cmp
clc
adc
scas
rorl
and
in
sub
and
push
add
or
adc
in
inc
sbb
pop
inc
pusha
adc
sarl
xchg
in
inc
pop
hlt
cwtl
js
add
pop
pop
clc
popa
stos
xchg
mov
jl
fists
xor
jbe
push
sbb
sub
sbb
js
ficoms
cmp
ret
or
or
cmp
scas
test
pop
in
scas
ret
lock
jge
insl
xlat
jno
sub
aad
and
inc
inc
mov
shl
dec
lock
add
lret
lock
jg
pop
push
cltd
pop
int3
fwait
inc
inc
lcall
jmp
inc
dec
and
adc
inc
xchg
inc
lret
xchg
and
xor
add
mov
das
or
fst
nop
lret
cmpsb
mov
xlat
loopne
xor
pop
cmp
xor
mov
and
dec
fldt
std
pop
jmp
adc
out
mov
sbb
pushl
pop
cmp
aaa
push
fs
mov
sahf
push
push
jns
jp
dec
rclb
push
or
adc
shlb
jp
in
fs
das
add
mov
pop
cmpl
pop
mov
fisttps
ret
adc
cmp
insl
iret
aad
dec
mov
or
pop
mov
call
lods
cltd
cmpsb
xchg
out
test
pop
or
and
add
push
lds
stos
js
jl
sbb
xor
das
mov
scas
pop
xchg
iret
dec
sbb
movl
lods
xchg
into
pop
push
bound
test
insb
and
pushf
sub
imul
ficomps
scas
dec
mov
add
adc
push
fwait
aam
and
sub
pop
jne
loopne
pusha
pop
mull
out
scas
mov
xor
sub
sub
es
repnz
and
dec
in
je
jns
jno
push
push
int
je
and
aaa
add
mov
or
lds
lea
jb
xor
cli
lods
lcall
xor
daa
pop
sub
sub
addl
aaa
pop
cs
stc
int3
adc
fidivrl
adc
push
add
sar
pinsrw
inc
in
sar
sti
inc
jl
jg
adc
les
mov
or
psubusb
sub
mov
jno
mov
sbb
cmp
cli
call
dec
cmpsl
gs
mov
mov
add
stos
ljmp
pop
nop
or
or
out
fisubrl
test
das
and
pop
repnz
ficomps
cmp
push
leave
xor
cs
push
cmp
fbstp
sbb
xchg
xchg
stos
fists
and
pop
add
adc
and
fcoms
sub
xchg
pop
in
cmp
or
dec
push
test
in
xlat
jg
into
push
mov
push
stos
add
mov
jmp
or
call
and
mov
jge
push
fstpt
xchg
cwtl
ror
xchg
jno
sub
jne
jg
dec
mulb
sub
mov
notb
mov
fists
nop
shll
in
outsb
sbb
je
lret
cmp
or
push
pop
out
mov
fsubrs
add
push
pop
int3
arpl
jge
mov
mov
adc
add
cmp
push
mov
stos
mov
pop
cmp
jno
xchg
fmull
dec
add
sbbl
les
outsb
xor
inc
insb
fildl
shll
out
jl
sub
push
cmp
stc
adc
roll
cmp
loope
sarb
mov
inc
push
inc
lea
scas
sbb
add
mov
mov
lds
xchg
shlb
lods
int3
sbb
jl
rorl
nop
push
mov
ljmp
cwtl
mov
or
leave
cmc
out
sbb
fbld
ret
dec
jmp
test
or
add
push
lret
mov
inc
sub
xor
in
mov
jne
jae
lret
mov
stc
int
fistpl
sub
pop
push
jmp
add
fldl
add
out
movsb
arpl
push
in
jae
pop
int3
repnz
test
cld
mov
pop
adcb
jnp
inc
rclb
ds
cwtl
sbb
stos
lods
cmpsl
push
or
push
push
in
xchg
cmp
mov
cld
jno
lcall
mov
mov
ss
adc
mov
lock
inc
lret
leave
cmp
stos
popf
push
mov
int
push
inc
aam
sub
jge
adc
jo
sub
inc
dec
into
mov
testl
sbb
in
out
pop
test
repz
fldt
pusha
inc
out
out
add
adc
jmp
es
mov
test
cltd
jns
pop
xchg
xchg
inc
mov
mov
test
mov
add
add
add
add
decl
aam
leave
add
add
add
lret
int3
or
adcl
xor
movl
cmp
movl
jne
mov
and
mov
shrd
adcl
shr
adc
mov
mov
orl
shl
xor
andl
jmp
sub
sub
sub
adc
xchg
out
inc
fimull
movsb
ja
dec
adc
pop
sub
shlb
scas
pop
mov
xor
jg
lret
add
fstpt
push
gs
mov
or
pop
adc
push
cmp
dec
pop
add
outsl
sar
and
popa
sbb
adcb
xchg
fwait
push
cmp
call
mov
sub
outsl
loopne
enter
cld
clc
jbe
sbb
cmp
xchg
and
xlat
pop
or
int
and
dec
mov
push
mov
jb
movsl
gs
popa
inc
jecxz
pop
mov
shl
push
xor
icebp
inc
and
leave
shl
lahf
jecxz
sti
xor
stos
mov
jnp
fsts
jl
xchg
or
inc
fidivs
testb
addr16
call
push
pusha
add
mov
jb
mov
inc
shll
sbb
jmp
iret
std
mov
inc
push
or
dec
push
mov
pop
mov
lock
jbe
mov
xor
jp
sbb
ljmp
xchg
insb
mov
mov
mov
mov
frstor
rolb
stc
sbb
inc
int
inc
in
xorl
jge
mov
jp
leave
fisttpl
cmp
and
jno
lods
das
ds
mov
fisubrs
jno
xorl
jge
xlat
dec
xchg
daa
push
xchg
push
or
bound
add
in
es
ud2
sbb
xor
sub
loopne
and
mov
mov
das
sbb
outsb
iret
dec
dec
cmp
nop
out
hlt
xor
daa
les
dec
js
pop
xchg
xchg
in
int
xlat
push
psllw
mov
lret
cmp
add
mov
ss
enter
pop
mov
dec
daa
in
jne
imul
loope
push
aas
cmp
or
mov
imul
push
enter
jnp
push
andb
aam
lods
sbb
dec
cltd
mov
mov
shr
jecxz
mov
or
push
scas
incb
sub
or
int3
nop
mov
cmpsl
and
xchg
or
push
popf
xor
out
lock
iret
ds
mov
xor
repnz
mov
xor
pusha
roll
movsl
jbe
fstps
inc
sub
imul
jmp
mov
roll
sbb
je
cmp
xchg
repz
xchg
sbb
or
scas
xor
iret
insl
das
mov
xor
mov
mov
add
sbb
popf
cmc
push
pop
xor
sub
aam
pushf
cltd
stos
aam
cmp
mov
and
mov
jg
in
ret
into
push
xor
test
stos
cmp
jno
ret
xchg
push
shll
mov
test
xchg
stos
jmp
add
fisttpl
mov
sub
adc
dec
pusha
les
and
outsb
pop
inc
cwtl
sub
fistpll
mov
into
pop
add
rcrl
xchg
ss
jnp
add
icebp
inc
add
adc
data16
decl
movl
or
sarb
dec
movsl
push
jns
sbb
lret
fnstenv
push
outsl
test
jne
cmpsl
mov
bound
xchg
or
cmp
jnp
test
adc
mov
mov
pushf
dec
orl
pushf
mov
adc
xchg
cltd
mov
mov
sahf
cmc
xchg
ret
mov
xchg
dec
or
xchg
mov
jne
clc
lahf
pop
cmpsb
popa
outsb
xor
sub
in
mov
lds
mov
mov
cmpsl
sbb
ja
pop
adc
sbb
popa
iret
mov
lcall
push
jnp
xchg
cmp
mov
les
dec
inc
pop
cmpsl
ficompl
stos
mov
sub
xchg
pop
and
sahf
cs
lret
cmp
hlt
fadds
sub
incb
pop
lcall
testl
and
ret
mov
sbb
or
xchg
std
mov
xchg
into
mov
xor
leave
push
scas
add
test
mov
movsb
inc
ret
stos
mov
out
adc
sbb
fmuls
bound
xorb
fsubrs
adc
or
daa
push
hlt
adc
sub
or
jns
scas
fidivl
cmp
or
dec
outsl
inc
pop
jnp
and
push
clc
push
xchg
sbb
imul
xchg
and
rcrl
or
adc
cmpsl
in
pop
jo
loopne
ds
mov
js
fwait
out
adc
outsl
sbb
in
push
int3
test
scas
push
and
adc
jle
xchg
les
xchg
nop
add
out
adc
xchg
pop
adc
mov
or
xor
into
and
dec
mov
inc
jns
pop
shlb
mov
fcomip
xchg
ficompl
lock
mov
cmc
dec
or
ja
sbb
insl
lret
adc
jl
ss
int3
sub
sub
pop
pop
ds
je
xor
scas
movsl
nop
ficomps
jp
lret
or
ja
xor
mov
mov
insb
dec
aad
dec
sub
push
xchg
ljmp
pop
call
addl
mull
cmpsb
inc
sub
xchg
and
sti
jmp
repnz
cwtl
in
fucomip
sbb
addr16
xor
sbb
sub
inc
cmp
decb
pop
inc
outsl
push
push
jmp
sbb
dec
aas
lods
lea
insb
lods
insb
sidtl
insb
push
push
xor
btc
sahf
and
mov
cmp
jl
js
push
push
aad
push
dec
mov
sub
gs
and
xchg
cmpsb
push
cmp
dec
sub
decl
sub
xchg
loop
test
sub
mov
repz
jns
imul
movsl
lahf
aaa
subb
shlb
xchg
leave
insb
mov
and
and
insb
rcrb
jl
jbe
cmp
jbe
xchg
xchg
scas
pop
inc
daa
mov
push
and
andl
push
jmp
pop
jecxz
mov
mov
sub
imul
jmp
loope
test
rol
lret
adc
and
lea
push
jmp
or
scas
aam
mov
adc
imul
mov
jg
cld
mov
lret
jno
or
add
lret
mov
jmp
into
mov
int
jp
sahf
pop
and
fistpl
out
scas
pop
ja
pop
and
mov
shlb
xor
or
mov
movl
cmp
jne
notl
mov
mov
xor
cmpl
mov
movl
mov
jmp
mov
movl
jl
push
call
xor
or
movl
movzbl
xor
and
mov
xor
mov
xorl
mov
jmp
daa
mov
or
shrb
dec
mov
ja
pop
mov
ds
icebp
push
mov
push
popw
test
jge
lock
cs
and
sahf
in
and
or
or
cmp
out
in
add
in
jae
es
add
aas
xchg
aam
pop
test
in
cmp
std
cmp
jo
dec
int
enter
daa
mov
dec
or
cmpsb
mov
mov
sti
mov
movsl
xor
in
pop
xor
push
sbb
cmp
test
sbb
out
sarb
adc
decl
pusha
push
push
jne
jbe
mov
add
push
fs
cmpsb
das
dec
mov
add
jl
jl
nop
fistl
daa
add
clc
adc
and
push
pop
sbb
imul
dec
mov
dec
insb
rorb
out
notl
sarl
ret
pop
mov
mov
gs
add
in
das
and
dec
add
xchg
ja
inc
fisubrl
and
jge
pop
sbb
notb
pushf
dec
cmpsl
sbb
lcall
bound
faddl
cli
cmpsb
mov
lahf
push
adc
pop
adc
mov
mov
lret
sbb
repz
pop
hlt
fwait
push
flds
nop
or
mov
and
outsl
cmc
repz
movsl
dec
ret
mov
pop
jmp
xchg
test
rorb
jo
adc
mov
je
popf
rcll
rcll
add
movsl
mov
dec
and
mov
sbb
rcr
and
inc
jns
faddl
and
imul
sbb
adcb
pop
sbbl
jmp
in
dec
sti
adc
add
pop
test
inc
xchg
repz
mov
inc
loope
ljmp
jb
cmp
fildll
xchg
jbe
xlat
sub
pop
fadd
test
lret
push
bound
xchg
es
setns
sbb
sub
test
mov
push
jno
sub
add
in
pop
gs
mov
enter
pop
in
adc
test
or
add
sbb
loop
push
push
pop
enter
ret
or
add
pop
mov
push
push
aam
and
sub
fmull
rolb
adc
and
in
jns
xchg
mov
pop
mov
sbb
sbb
jmp
pop
jno
inc
sbb
xor
sahf
jecxz
outsb
or
cld
inc
imulb
mov
push
or
rorb
jmp
jnp
stc
mov
xchg
std
fsubrp
or
pop
mov
mov
int
ljmp
aaa
jbe
and
mov
mov
int3
dec
lods
and
sub
dec
in
xchg
test
mov
mov
idivb
dec
jl
shll
leave
cs
mov
mov
repz
mov
pop
cmp
shrb
jmp
xchg
add
mov
stos
test
repz
test
popa
test
popa
xor
mov
inc
pop
sub
outsb
cmp
add
add
mov
push
xlat
add
aad
jle
sbb
mov
dec
add
js
mov
mov
cli
push
pop
repz
or
mov
movsl
pop
fdivp
jge
jmp
add
mov
dec
ljmp
psubd
mov
add
pop
push
out
pop
pushf
pop
push
lcall
adc
cmp
xchg
nop
or
outsb
mov
sub
mov
cwtl
mov
hlt
jno
mov
mov
xchg
xor
fdivr
cmc
hlt
hlt
aas
xor
sub
sbb
cmpsl
mov
xor
cmp
popa
int3
in
or
lahf
ss
mov
call
mov
cltd
sbb
and
test
cmp
xchg
test
xor
cmp
add
pop
rclb
pop
inc
mov
ja
ret
pusha
gs
mov
lods
int
xor
das
sub
add
outsb
pop
push
repnz
daa
adc
mov
mov
ret
std
mov
mov
leave
mov
insl
adc
sbb
mov
outsb
sbb
cwtl
hlt
arpl
stos
adc
add
pop
leave
jno
fs
push
push
xchg
xchg
and
mov
jmp
shll
out
sub
xlat
or
insl
inc
aad
test
mov
add
aad
cld
inc
or
adc
shll
sub
test
mov
pop
outsl
mov
dec
mov
dec
mov
push
inc
mov
stos
or
dec
xchg
sub
mov
fcmovbe
out
or
push
jmp
pop
scas
out
sbb
add
hlt
loope
or
clc
sarb
into
adc
mov
cmp
mov
xchg
dec
dec
dec
pop
aas
loopne
xchg
push
adc
cltd
outsl
cmpb
das
cmp
inc
adc
cmpsl
add
mov
shr
xor
adc
or
xor
dec
mov
outsb
xchg
dec
mov
pop
pop
dec
iret
js
mov
or
ljmp
xchg
jns
jnp
lahf
out
add
js
mov
sbb
dec
mov
inc
mov
test
mov
lock
pop
xchg
pop
fldt
pop
push
cltd
leave
lods
icebp
addb
dec
cmpsl
arpl
dec
mov
imul
cltd
loopne
push
pop
jno
clc
lret
lds
aad
outsl
addr16
push
jmp
lods
push
test
adc
loop
mov
stos
imul
mov
xchg
cmp
fadds
out
add
xor
lret
xchg
mov
add
clc
les
outsb
push
add
sahf
and
mov
in
ret
lahf
xchg
and
movsb
stos
loopne
fs
sub
add
mov
jns
adc
and
and
xor
dec
lods
mov
mov
push
jae
xchg
mov
and
add
sarb
fsubrp
lcall
xchg
lock
cmc
int
addr16
int
fildl
pop
pop
add
jecxz
and
cmc
ljmp
jno
imul
push
gs
fwait
xchg
scas
sub
mov
xchg
dec
nop
aam
xchg
add
cmp
mov
arpl
sub
ljmp
mov
adc
stos
popa
inc
cmp
xchg
lret
mov
data16
mov
mov
fisubs
xchg
stos
cmp
pusha
les
mov
pop
pop
mov
inc
out
inc
int3
and
and
sarb
mov
mov
sti
mov
mov
xchg
push
scas
inc
sahf
jno
out
inc
mov
sbb
adc
sub
sub
push
enter
sub
mov
addr16
mov
pop
sbb
std
sti
addr16
jp
ss
pop
outsl
ror
jmp
out
lods
roll
andl
mov
cmpl
movl
mov
jmp
movl
movl
jne
push
push
push
push
push
pushl
push
push
call
orl
or
xor
xor
xor
add
adc
adc
sub
add
mov
xor
xorl
shr
xorl
mov
orl
xor
or
movl
shl
cmpl
movzwl
movl
jmp
movl
movl
jle
push
call
not
or
sub
sub
sbb
sub
mov
mov
sub
imul
mov
cmpl
not
movl
jmp
mov
jne
push
pushl
pushl
push
push
call
sbb
adc
neg
subl
adc
mov
mov
not
add
mov
mov
mov
shrd
shr
adcl
mov
mov
xor
add
shl
incl
xor
jmp
jle
jl
dec
mov
push
out
mov
ja
lret
inc
mov
leave
push
push
sbb
jno
cmp
adc
adc
sbb
mov
cmp
cwtl
push
adc
aas
jle
repz
out
add
xor
lock
adc
adc
and
lret
mov
pop
push
add
xor
clc
imul
inc
inc
xchg
dec
std
imul
inc
cli
xor
ljmp
sbb
daa
or
push
xor
imul
push
jge
jg
fistps
pop
dec
dec
cs
imul
mov
scas
js
mov
mov
ljmp
and
mov
add
inc
out
push
pop
pop
aaa
xchg
mov
fsubs
shrb
cmp
mov
sbb
mov
sbb
push
pusha
or
mov
pop
jb
mov
cmp
add
lods
call
pop
xchg
fsubrs
jmp
adc
adc
dec
xchg
cwtl
pop
mov
and
xor
xchg
jecxz
sti
in
mov
pop
imul
cmp
fisubl
in
sub
add
outsl
adc
stc
push
hlt
stc
dec
lcall
ss
and
push
out
rcll
jbe
mov
xchg
shlb
mov
sbb
ficomps
add
adcl
cmpsb
adc
mov
xchg
mov
xchg
cld
dec
aam
outsb
jge
cmp
mov
mov
xchg
in
hlt
fldcw
mov
cmp
or
mov
je
push
dec
sbb
dec
sbb
jmp
fwait
xor
xorb
and
and
daa
adc
jnp
xchg
dec
pop
mov
push
or
inc
es
popa
mov
pop
shlb
jge
cmp
add
icebp
or
cmpsl
out
test
outsb
int3
rcrl
test
out
push
xchg
popf
movsb
xor
adc
jl
es
daa
js
arpl
inc
cmpsb
jl
adc
inc
cmpl
iret
and
sti
add
rcrl
mov
inc
addr16
pop
sti
mulb
push
jae
mov
ret
dec
sub
pop
int
and
add
test
xlat
mov
gs
push
xor
jb
and
push
mov
fbstp
adc
shrb
adc
dec
push
pop
push
sub
in
int
pushf
js
lods
push
dec
fs
in
lods
adc
fsubrl
pusha
out
sub
test
inc
and
sub
popf
repnz
pop
jo
int
sbb
inc
pop
inc
negl
inc
jle
sti
push
ds
mov
dec
push
mov
mov
lret
js
nop
out
adcb
ss
jl
cwtl
mov
and
divl
test
cmpsl
gs
mov
jbe
sbb
ret
push
cwtl
jmp
or
jle
pop
push
sarl
daa
rolb
adc
loop
arpl
cmpsb
push
inc
xor
pop
adc
mov
lods
andb
jo
call
clc
xor
pushf
scas
mov
js
mov
inc
rclb
jp
and
lret
cmp
jecxz
movsl
cmpsb
fisubs
movsl
xor
mov
sbb
aaa
fisttpll
int
hlt
cli
cmp
push
test
insl
stos
push
jnp
dec
inc
mov
and
and
repz
aad
loop
fimull
adcl
cmpsl
adcl
pop
icebp
imul
pushaw
es
insb
iret
cli
xlat
or
sbb
lds
xchg
cmpsb
cmp
fstpt
clc
mov
xor
test
std
roll
xchg
int3
lock
dec
push
rclb
outsb
sub
sbb
pop
test
addr16
cwtl
icebp
fidivrs
xchg
cmp
shlb
bound
fndisi(8087
mov
lret
sbb
ficomps
insl
jns
or
adc
dec
cld
jno
dec
inc
or
sub
sub
imul
cwtl
jle
test
sub
sub
dec
push
push
roll
adc
insl
jb
mov
jno
cld
mov
or
fisttpll
test
mull
sub
adc
add
fidivrl
mov
and
mov
lea
negl
xchg
andb
xchg
and
push
pop
loope
aaa
mov
stos
sub
mov
jbe
push
test
pop
xlat
mov
xchg
out
int
dec
ret
std
cmp
push
iret
bnd
cmpsb
cmp
mov
mov
mov
xor
inc
adc
pop
xlat
jo
cmp
arpl
mov
mov
add
or
xor
iret
repz
outsb
dec
xor
mov
pusha
fdivs
dec
cmp
and
dec
push
inc
sbb
mov
adc
add
jnp
sub
decb
inc
stos
test
js
cli
push
enter
iret
mov
jae
xor
fdivrl
adc
lahf
add
das
ret
gs
das
push
push
lret
dec
push
pop
insl
cmc
push
jecxz
dec
jge
js
mov
add
lods
mov
iret
testl
mov
jecxz
fwait
inc
sub
xchg
ljmp
mov
idivl
pop
stos
add
add
lock
cmp
addr16
xchg
mov
rol
or
mov
adc
adc
xchg
or
or
icebp
gs
mov
adc
push
stos
adc
sahf
jo
add
jo
ss
jnp
js
pop
push
inc
cli
jp
imul
dec
mov
gs
mov
mov
pop
jge
mov
pop
loop
std
out
stos
sti
pusha
in
hlt
call
add
in
mov
pop
sbb
stc
out
mov
nopl
push
repnz
mov
pop
mov
imul
test
mov
ljmp
sub
les
nop
idivb
orb
inc
jb
mov
movsb
xorb
inc
cli
jp
das
or
sahf
les
into
jg
dec
xor
out
push
popf
aas
cmpsb
inc
pop
bound
push
ljmp
inc
mov
in
xor
lods
call
jo
jl
test
aas
adc
repz
test
repz
je
pop
mov
int3
stos
jp
fldenv
scas
mov
inc
mov
pop
repz
push
aas
scas
or
subb
sub
test
out
dec
clc
jmp
mov
je
adc
and
ret
stos
jb
mov
pop
lcall
stos
subb
ret
les
mov
jecxz
inc
and
sbb
xlat
add
rcl
pushf
lds
in
outsl
inc
adc
in
pop
inc
insb
adc
mov
sbb
cmc
das
fistpll
cmpl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
xor
or
mov
sub
sub
mov
xor
or
sub
xor
and
xor
or
sbb
mov
mov
add
mov
mov
sbb
mov
mov
incl
shrd
subl
shr
adcl
mov
add
mov
cmpl
not
mov
jmp
not
jne
push
push
push
call
mov
sbb
and
andl
and
orl
sub
or
sbb
jmp
pop
and
push
adc
inc
xchg
pusha
push
ja
ds
adcl
xchg
lods
std
sbb
jb
aad
mov
lds
xlat
idivb
push
ss
lods
mov
aad
push
rorb
and
aas
adc
repz
cltd
mov
shrb
jmp
add
adc
pop
add
mov
rcll
cmp
pop
pop
lret
mov
scas
sub
cltd
sahf
mov
add
cmpb
jo
fprem
sbb
jmp
jmp
jbe
push
lcall
loope
mov
popa
ja
jle
lds
cmpsb
ljmp
roll
sbb
insl
lds
insl
sahf
hlt
add
subb
es
add
enter
sub
loope
shr
mov
xor
adc
add
data16
lahf
jo
sbb
cmp
sbb
cld
shl
mov
in
push
adc
shl
test
out
icebp
jmp
in
xchg
mov
int3
push
and
sti
mov
xor
sub
push
hlt
cmp
add
jl
jmp
add
xor
cmpsl
add
jno
pop
adc
bound
pop
xchg
jbe
divl
xor
sub
push
rorl
pop
xlat
lods
into
jno
mov
mov
dec
xchg
jae
cmpsl
frstor
test
cmp
sub
pop
mov
mov
mov
push
push
dec
nop
stos
mov
xlat
sbb
xor
scas
lea
movsl
pop
mov
shl
inc
mov
mov
or
mov
jns
dec
adc
fs
lock
imulb
inc
push
in
xchg
ja
xlat
sbb
mov
sub
scas
sarl
out
jbe
xchg
in
or
mov
jge
cmpsl
mov
jne
sahf
jecxz
add
xchg
mov
dec
cmpsl
int
dec
jno
mov
sbb
stos
mov
lds
add
inc
daa
or
mov
dec
ss
mov
and
sti
mov
cltd
fmul
push
repnz
stos
test
sbb
dec
mov
test
out
daa
sub
in
inc
test
adc
lods
repnz
mov
dec
aad
outsl
stc
data16
cmpsl
adc
test
inc
jle
push
mov
loop
push
js
pop
aas
mull
mov
xchg
pop
dec
loop
lea
lcall
mov
jo
mov
lds
push
icebp
lds
das
repz
nop
sbb
fsubrl
mov
loop
mov
pushf
push
lcall
jne
fistl
fst
push
adc
xor
nop
in
xor
cli
or
ds
out
push
scas
int
loop
rorb
xor
unpckhps
pop
ss
into
sub
adc
in
and
adc
cmp
shll
dec
adc
inc
nop
clc
dec
out
cmp
rorb
arpl
xor
int
ljmp
push
cmp
clc
xor
and
push
fisubl
andl
aam
cmp
icebp
fwait
in
sub
inc
mov
cltd
lea
mov
test
pop
xchg
inc
adc
push
mov
cmp
sbb
rclb
pop
xchg
insb
add
adc
push
mov
pop
icebp
out
push
cmp
movsb
bound
dec
lcall
in
inc
test
and
xor
sbb
and
pop
sarl
mov
and
xchg
popa
ss
mov
add
sbb
pop
mov
movsb
sub
sub
jbe
gs
mov
cmp
sub
imul
dec
shl
cltd
js
inc
inc
cmp
aam
add
mov
arpl
sbb
or
aam
mov
leave
dec
je
ret
out
inc
enter
clc
mov
mov
pop
imul
fcomps
es
test
mov
adc
hlt
call
jl
icebp
pop
mov
scas
lods
int
int
dec
mov
xchg
xchg
mov
cwtl
bound
xchg
cmpb
push
in
push
fs
outsb
mov
les
aas
fisttpl
sbb
inc
push
push
je
xlat
sbb
lods
or
mov
jne
jp
mov
fs
mov
or
sbb
ret
push
mov
mov
out
aad
jne
mov
cmp
mov
xor
cwtl
cmp
xchg
mov
jbe
fistl
cwtl
pusha
sub
xchg
pop
sub
jns
push
test
sbb
xor
mov
mov
nop
stc
out
mov
add
stc
test
sti
iret
mov
inc
dec
push
cld
jmp
in
inc
pushf
test
mov
jbe
mov
xchg
and
mov
imul
pop
clc
inc
in
orl
mov
es
xorl
push
adc
cmp
les
xchg
adcl
dec
out
leave
jnp
dec
rol
dec
aaa
cli
lret
into
mov
aad
ljmp
inc
push
sub
jg
dec
ljmp
mov
mov
push
add
popf
jmp
push
enter
popf
sbb
dec
inc
sti
pop
add
dec
out
or
dec
pop
or
cmp
jp
mov
test
lds
push
into
jo
xor
push
sub
dec
pop
and
xor
movsl
jbe
mov
jbe
lock
jecxz
and
lods
dec
cltd
xchg
cs
fstl
xlat
sub
sbb
xlat
add
adc
or
xor
out
sbb
lods
repnz
setnp
lock
pop
mov
cmpb
or
in
mov
insb
imul
jp
xor
outsb
outsl
stc
and
pop
dec
xor
test
dec
add
cmp
cmc
je
inc
mov
push
add
aad
xchg
dec
fmul
xor
int3
icebp
loope
mov
xchg
inc
sbb
jg
inc
xor
pop
push
shrl
mov
and
rcrl
call
shrb
arpl
adcl
in
jnp
dec
jmp
scas
pop
sbb
aam
pop
lods
mov
mov
xor
loop
jle
jne
pop
pusha
popa
adc
push
arpl
cli
adc
jle
aaa
jecxz
add
xchg
cmp
xchg
in
push
push
add
cmp
pushf
cmpb
jl
sub
or
and
loop
mov
xchg
leave
cs
sub
dec
jae
pop
dec
aam
dec
pop
sbb
mov
sub
dec
and
jge
xor
subl
or
andl
shl
sbbl
lea
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
jg
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
pushl
push
call
xorl
movzbl
adc
movzbl
add
or
add
movzwl
sub
mov
shrd
shr
cmpl
mov
mov
mov
jmp
mov
jbe
push
call
andl
mov
adc
sbb
movl
mov
mov
or
not
mov
mov
sub
mov
add
jmp
rcrl
cmp
and
and
scas
dec
or
fcomps
ja
or
lods
pcmpeqw
and
leave
adc
fldenv
int3
pop
imulb
or
cli
pop
inc
mov
mov
mov
pop
cmp
mov
sarl
call
xor
push
cld
jge
cltd
icebp
xchg
cmc
stos
ss
jns
xchg
jnp
jg
shlb
adc
xchg
pop
fidivl
in
and
pop
jecxz
jbe
into
dec
rorl
xlat
xchg
mov
or
jae
movsb
mov
lret
fdiv
es
test
ficoml
dec
or
push
push
sub
imul
adc
in
and
lock
sarb
jecxz
cmp
mov
lea
or
mov
test
rcrb
adc
ds
repnz
push
push
mov
idiv
faddl
jle
pusha
in
dec
dec
push
aad
xor
jmp
mov
mov
and
pop
mov
fucomip
mov
dec
loope
sarb
movsl
mov
js
adc
push
pop
mov
inc
dec
outsl
mov
arpl
jbe
xor
je
mov
mov
loop
add
das
scas
push
jle
mov
dec
pop
imul
sbb
lcall
and
int3
adc
fsubrl
lods
pop
scas
mov
mov
mov
xor
enter
xor
int3
popa
inc
add
sbb
inc
adc
xchg
in
mov
dec
movsb
cmp
dec
cmp
xchg
enter
movsb
mov
jb
into
mov
cmp
sbb
sub
imul
imul
nop
xchg
notb
xchg
out
lods
sub
jo
jo
orb
mov
popl
popa
and
inc
pop
sub
out
inc
int3
test
out
jecxz
jl
xlat
jge
cmpb
cmc
insl
sti
sti
addr16
outsl
shrb
mov
pop
adc
test
jg
xchg
ror
xlat
sub
in
bound
cli
addr16
in
jecxz
mov
lods
mov
lret
adc
js
pop
xor
sti
and
or
dec
hlt
pusha
xchg
jle
inc
inc
and
push
pop
fwait
jno
and
mov
iret
jp
mov
jmp
sti
rorl
jge
jbe
loopne
dec
mov
outsb
push
adc
enter
imul
pop
popa
rcrb
test
xor
xchg
pop
ffree
test
xchg
add
fsubr
inc
jno
push
add
lock
mov
jg
or
sbb
ja
xchg
fs
leave
inc
aam
dec
sub
push
into
xchg
loopne
idivb
test
and
jmp
adc
and
and
jecxz
pop
repz
jp
jl
xchg
dec
sbb
int
push
jo
cmpsl
cmp
mov
push
das
sub
cmp
stos
rcrb
inc
sarl
inc
xchg
sub
add
add
xor
pusha
sbbl
cmp
pop
mov
test
sbb
lods
lret
push
jl
mov
push
mov
scas
xor
daa
filds
dec
pop
adc
mov
jge
into
int3
sub
dec
leave
fcmovne
dec
stos
jnp
jmp
jae
into
stos
shr
mov
push
aam
daa
xorl
mov
mov
in
cmp
test
lods
into
push
mov
les
mov
dec
push
mov
aaa
in
xor
push
adc
xor
shll
jb
js
xchg
dec
sbb
repnz
mov
outsl
les
and
aaa
sbb
popl
addr16
pop
popf
test
hlt
xor
inc
jns
pushf
sub
push
imul
cli
push
or
mov
sbb
mov
call
xor
scas
pop
das
repz
outsl
lea
jp
sbb
imul
out
lea
add
or
pop
xchg
fstps
push
sub
pop
test
push
insl
seta
inc
sbb
data16
out
aad
outsl
dec
fimull
cmpsl
fists
jmp
jns
mov
lods
inc
pop
jno
cltd
sub
pop
in
dec
jb
mov
loope
in
outsl
fcmovb
jns
loopne
nop
test
imul
jp
and
sub
inc
adc
mov
sahf
addr16
push
cmp
insl
add
lds
stos
insb
out
hlt
dec
pop
mov
mov
iret
mov
pop
in
mov
push
mov
repnz
cmpsl
or
data16
mov
or
mov
jo
mov
mov
mov
imul
enter
mov
add
andb
into
or
lcall
aad
adc
jmp
scas
adc
fsubrs
mov
adc
pushf
inc
cwtl
sbb
shrl
jnp
or
inc
fisubrs
pop
movsb
sub
aam
lcall
or
cmp
ja
fs
flds
cmpb
mov
cmp
test
inc
sub
add
sub
inc
mov
test
andl
loop
test
lcall
sbb
sarb
dec
int
jl
inc
stos
stos
iret
popf
loop
jge
jecxz
dec
dec
add
adc
adc
dec
adc
fs
out
jmp
mov
out
add
push
dec
adc
push
rcr
xchg
mov
inc
dec
bound
and
dec
lahf
imul
cvtdq2ps
mov
cmp
xchg
dec
aad
test
call
fisubl
adc
jp
lahf
jns
les
sub
cmp
sub
sub
lods
pop
sub
add
insl
in
cmp
imul
xchg
inc
int
sub
mov
frstor
mov
imul
out
rorb
dec
stc
sub
imul
loop
imul
xchg
les
pop
pop
inc
cmp
lods
mov
xchg
mov
out
push
cmpsb
mov
mov
cs
enter
mov
cmp
add
icebp
idivb
repz
out
xor
scas
scas
dec
orb
adc
xchg
fcmovbe
ret
push
imul
xchg
out
pop
mov
nop
stc
mov
test
jge
inc
and
cmpsb
dec
jae
xor
jg
mov
cs
cmp
ror
mov
int3
mov
sub
xchg
mov
cmpb
push
jg
pop
mov
ret
repnz
or
fisubs
cli
adc
cmp
mov
pop
xchg
dec
push
into
imul
in
push
lds
sub
fildll
mov
pop
xor
push
add
loop
clc
pop
inc
out
lret
loope
fistl
jle
mov
xor
xchg
test
enter
mov
xor
adcl
or
shl
movzbl
or
imul
mov
mov
xorl
shrd
xorl
mov
mov
xor
shr
mov
and
mov
sbbl
xor
orl
or
sbbl
shl
adcl
sub
mov
mov
cmp
mov
mov
jg
xor
add
mov
sub
and
mov
cmpl
movl
movl
jmp
mov
mov
jb
push
push
call
xor
mov
sub
sbb
movzbl
and
mov
jmp
les
cmp
push
mov
mov
movsb
js
dec
cmc
dec
outsl
dec
ja
jmp
pop
mov
cli
outsb
cmp
inc
mov
push
movsb
dec
repnz
call
ret
cmp
sti
inc
inc
aam
aam
mov
xlat
loopne
xchg
jo
push
mov
fisttpll
jo
incl
xor
xor
repz
sub
mov
xor
inc
mov
mov
sub
fbstp
adc
pop
scas
pop
mov
jg
lret
cltd
dec
lret
jge
mov
lret
lock
icebp
mov
inc
es
jne
out
mov
dec
adc
dec
rorl
jnp
fisubrl
push
daa
mov
xor
xchg
mov
in
fbstp
aad
sbb
mov
nop
jne
dec
add
stos
inc
imul
dec
stos
xor
or
push
sub
jmp
fnsave
add
xchg
out
and
ret
sub
movsl
std
idivl
lahf
hlt
aam
dec
roll
adcb
jbe
mov
inc
stos
lret
in
or
fcoms
int
pop
inc
or
aad
sbb
movsb
std
push
and
mov
push
pop
inc
push
dec
addr16
bndldx
fnstcw
dec
push
gs
cli
mov
cli
or
cwtl
pop
mov
jne
addr16
roll
push
jbe
xor
call
ja
and
ret
test
std
cmp
add
dec
mov
add
or
and
dec
xchg
dec
mov
jmp
dec
adc
sahf
js
lock
incb
mov
cld
mov
dec
sub
lods
inc
jno
adc
jbe
paddw
mov
es
cwtl
out
in
add
xchg
mov
sub
dec
mov
cli
and
popa
xor
or
enter
mov
mov
sbb
sub
aad
push
addb
jae
out
adc
sub
xor
push
mov
cmp
sahf
cmp
daa
pop
jo
fsubs
dec
xor
dec
mov
sub
stos
pop
insl
jae
mov
and
or
ja
mov
inc
xlat
mov
or
getsec
jmp
pop
xchg
jae
fdivrl
dec
fcoms
dec
clc
out
arpl
enter
outsl
sbb
mov
repz
iret
inc
cmp
fs
mov
ss
out
mov
fucomip
jecxz
ja
xorl
lret
loop
sub
mov
or
leave
out
pop
dec
test
add
mov
cltd
sbb
xchg
mov
das
pushf
out
xor
add
fmuls
ss
dec
cmp
gs
fisubrs
xchg
lods
push
addr16
out
pushf
fiaddl
add
leave
xchg
inc
in
stc
mov
xchg
nop
jno
in
scas
pop
jae
nop
inc
les
in
stos
adc
and
cld
xor
add
daa
pop
jecxz
dec
xchg
dec
mov
ljmp
cli
dec
adc
xchg
in
xlat
mov
cmpsl
imul
lcall
out
pop
mov
imul
clc
push
mov
imul
cltd
sbb
cmp
in
scas
jl
fsubl
xor
push
int3
adc
push
cmp
sbb
mov
add
or
sbb
cmp
das
jmp
add
push
push
add
xor
xchg
xchg
mov
add
in
mov
sub
fbld
mov
je,pn
sbb
push
popa
pop
addb
ljmp
imul
sub
jmp
pop
xlat
sti
inc
in
push
or
pop
nop
xlat
and
cmp
jecxz
mov
xchg
xchg
dec
cmp
jge
push
dec
cltd
adc
xor
aaa
xchg
jl
aaa
jmp
push
pop
popf
clc
adc
add
pop
push
test
jo
dec
cli
insl
dec
adc
cmp
subl
movsb
xchg
fstpl
sbb
les
push
or
int
andb
inc
addr16
add
clc
pop
aas
int
hlt
inc
add
push
jae
popa
scas
pushf
fstp
or
test
mov
or
and
pop
outsl
int
cmp
out
lret
je
test
or
ror
ljmp
mov
iret
add
mov
popa
push
fucomi
sbb
sbb
cmp
jmp
lret
push
adc
test
dec
sub
mov
jecxz
pop
jb
nop
mov
lds
mov
roll
or
daa
mov
les
fsubrp
aam
pop
xchg
pop
and
stos
dec
data16
idivb
int
mov
outsl
or
push
push
cmp
sbb
call
and
pop
mov
int
add
mov
jo
inc
idivl
aas
push
jno
cmp
fwait
mov
xor
jnp
jp
push
cmp
push
lock
sarb
in
mov
scas
ficomps
lods
std
mov
rolb
data16
or
mov
pop
gs
or
push
pop
popa
test
pop
cltd
iret
dec
mov
sub
mov
jg
bound
daa
mov
push
out
in
xchg
out
dec
and
cltd
add
jg
xor
cmpsl
repz
pop
insb
mov
pop
push
pop
add
shl
idivl
mov
dec
dec
push
jg
add
aad
push
lds
dec
cmp
jnp
and
cltd
mov
and
xchg
cmp
mov
out
test
das
xlat
add
cmp
jp
dec
leave
inc
hlt
ds
jno
ds
pop
inc
dec
mov
lret
sbb
push
mov
lret
aaa
pop
bswap
stc
mov
xchg
inc
out
pop
mov
and
inc
sbb
inc
fsubr
test
add
out
jnp
sub
inc
dec
rcl
push
aam
clc
or
cmp
incl
dec
pop
lcall
mov
sbb
repnz
xchg
stc
fmuls
jbe
pop
sbb
jno
lods
nop
mov
mov
cmp
daa
sbb
push
xor
fninit
out
inc
jno
out
andl
mov
aaa
and
pop
stos
pop
or
push
or
lds
sbb
sub
mov
sbb
pop
mov
in
loope
lret
imul
scas
das
loopne
flds
mov
pop
decb
fs
mov
dec
push
sbb
mov
jne
test
or
add
sahf
sahf
lock
and
fnstenv
sbb
cmc
jmp
fdivr
inc
aas
xlat
mov
lcall
mov
shll
push
aad
push
push
add
or
mov
mov
andl
shrd
mov
movzwl
or
mov
adcl
xor
andl
shl
orl
xor
adcl
or
sbbl
shr
and
mov
jmp
mov
mov
ja
rclb
ja
xchg
pop
popa
aad
mov
pop
dec
sub
jmp
mov
pop
mov
push
cmp
cmc
jmp
mov
sbb
xchg
jmp
fmulp
scas
xlat
and
push
mov
xlat
cmp
mov
or
adc
sub
mov
push
push
mov
out
out
xchg
popf
or
xchg
sub
mov
dec
mov
cmpsb
jp
sbb
push
sbb
mov
data16
fmuls
cmp
fwait
scas
sbb
sub
dec
rol
push
das
test
call
in
or
cld
popa
fcomps
das
daa
fdivp
dec
test
icebp
sub
add
stos
xchg
movsb
xor
cs
in
jg
adcl
aad
aam
mov
lods
repnz
pop
jne
xchg
out
mov
lahf
into
repz
out
mov
inc
test
js
insl
je
xor
stc
cs
mov
and
popa
xchg
stos
jne
ss
std
dec
pop
adc
gs
push
push
mov
in
inc
push
fildll
push
ss
dec
ljmp
popa
cmp
pusha
adc
push
push
dec
inc
xor
jae
ss
ret
leave
cwtl
xchg
mov
mov
in
cli
ret
lods
sarb
mov
stos
imul
and
adc
adc
cwtl
clc
test
repnz
punpckhwd
mulb
pop
and
scas
lahf
sbb
repnz
sbb
xchg
popf
mov
imul
dec
xor
push
sub
push
jge
rclb
xor
xchg
aad
data16
xchg
enter
mov
out
in
mov
pushf
outsb
pusha
scas
pusha
mov
daa
fistpll
es
cmp
cmp
test
int
hlt
rol
xor
jecxz
lea
xor
xor
insb
or
fs
add
jae
outsl
push
ds
lods
dec
pop
sbb
or
shlb
jb
or
pop
mov
inc
pushw
stc
xchg
adc
sub
jb
hlt
push
jbe
aam
lret
pop
stos
dec
push
pop
mov
xor
push
jle
sbb
rcll
jecxz
sub
push
fistl
mov
lds
in
test
lods
mov
jmp
fisubl
xor
jmp
cmpsl
jbe
cmc
xor
scas
lods
jbe
or
fstps
sub
or
imul
popf
cli
int3
sbb
dec
adc
sti
cmp
push
out
insl
pop
test
lods
loopne
jmp
push
fldl
jle
jmp
xchg
inc
aad
xor
pop
cltd
sbb
mov
or
or
fdivl
psubusb
fdiv
sub
sbb
push
adc
aaa
inc
mov
es
pusha
inc
xor
cmpsb
push
mov
scas
idivl
sub
addb
push
loope
aad
dec
arpl
lea
repz
popf
mov
adc
push
jmp
mov
mov
sub
jmp
mov
push
sbb
fwait
inc
call
xor
fwait
or
jl
leave
cmpsl
fs
add
jecxz
loope
add
xor
and
imul
lea
cmpsb
test
lods
add
inc
mov
bound
lret
into
inc
fstpt
stos
sub
roll
jg
ljmp
mov
iret
cli
std
pop
or
dec
cld
out
pushf
pop
ret
andb
cmp
adc
lea
sub
fldenv
jg
dec
mov
stc
sbb
js
inc
jnp,pt
stc
cmp
xor
aam
mov
imul
mov
sub
jecxz
dec
inc
push
sbb
loope
fdivrs
rcll
cs
push
daa
jle
and
hlt
les
inc
lock
loop
add
std
mov
sar
pop
loope
mov
jne
jno
mov
imul
cmp
add
xorb
outsl
inc
mov
rcrb
adc
mov
aaa
outsl
or
mov
push
jnp
xor
dec
rcrb
fsubr
push
cmpsl
push
pop
lods
inc
fidivl
outsl
mov
dec
aad
addb
out
shlb
push
xchg
xchg
aaa
dec
ja
jmp
mov
or
das
push
fidivrs
cmpb
cld
or
hlt
outsb
inc
outsl
and
ja
pop
adc
sub
push
sbb
loop
loopne
mov
jne
push
inc
mov
and
lock
sbb
cli
mov
ret
sahf
add
vpavgb
shl
lds
add
jmp
dec
les
ss
lahf
pop
movsl
cmc
in
mov
test
xchg
repnz
pusha
dec
mov
rorl
imul
outsb
sub
adc
xchg
and
mov
adcb
cmpsb
sbb
mov
xchg
popf
aaa
fdivrl
cmp
hlt
das
add
test
lock
rep
in
aam
mov
push
out
dec
loopne
sbb
ret
lret
sbb
insb
sub
test
mov
adc
out
inc
stc
testb
mov
xor
loopne
mov
notl
lret
loope
dec
xor
push
jge
pusha
xor
pop
pusha
jne
mov
pop
repnz
mov
cmpsb
mov
jae
fisttpll
shlb
jbe
jns
jg
stos
js
aas
and
sbb
andl
and
mov
adc
or
rcll
cld
push
mov
xor
inc
mov
stc
cmpsb
sbb
and
stc
call
mov
shll
cwtl
pop
xchg
outsb
in
jns
ror
popa
jge
dec
pop
xor
outsb
jmp
je
and
push
jge
insl
mov
lods
jno
xchg
adc
fidivrs
rolb
xchg
movsl
pop
faddp
nop
mov
sbb
mov
mov
sbb
sbb
cmp
add
dec
scas
pop
iret
push
sbb
push
cmp
lahf
cli
imulb
lock
stos
pop
cwtl
push
imul
aam
xchg
mov
cmp
stc
dec
lds
adc
mov
cmc
ja
or
sub
sti
cmp
inc
mov
jl
cmp
call
lcall
jno
jns
and
ljmp
ds
pop
lods
rcrl
pop
bound
scas
stc
adc
int
sub
and
or
insb
into
test
cmp
fldcw
cmpsl
sti
into
les
push
adc
repz
rol
mov
jae
jae
jle
jae
aad
adc
or
int3
clc
xlat
or
sub
mov
test
sub
daa
jecxz
push
add
mov
int3
nop
xchg
sub
out
mov
adc
jg
sub
mov
shrb
insl
xor
cmc
adc
mov
mov
or
mov
mov
mov
add
mov
andl
shrd
sbbl
shr
mov
mov
inc
jmp
shll
adc
push
scas
xchg
xor
mov
subb
ja
repnz
in
cs
or
out
mov
xor
xor
add
out
adc
mov
xchg
push
aas
add
scas
dec
and
pop
inc
stos
sub
rorb
jns
push
push
mul
fwait
mov
xchg
jle
cmp
mov
jle
xor
cld
cmc
jge
ds
shrl
stc
xchg
xchg
sarb
insl
push
lods
loop
fcoml
pop
popa
out
in
jns
imul
or
sbb
xchg
xchg
jmp
cwtl
and
push
sub
and
adc
push
addr16
cmp
or
ljmp
les
int3
jbe
ret
pusha
pop
sbb
fstpt
dec
sti
dec
gs
mov
inc
ret
jnp
out
pop
sub
mov
and
push
into
mov
in
sarl
pusha
jns
repnz
pop
fs
lock
cmp
in
pop
mov
or
fimuls
xlat
mov
fsts
sbbb
cld
xor
add
mov
mov
xchg
in
sbb
test
lods
inc
test
push
lcall
xor
mov
iret
adc
sarb
push
add
or
jo
iret
shrl
movsb
xchg
xor
clc
outsl
adc
dec
test
fld
jne
jl
pop
and
and
mov
jecxz
pop
loop
xchg
or
call
sbb
mov
ror
pop
cmp
push
xchg
cmpsl
pop
mulb
mull
mov
xor
test
repnz
jne
icebp
je
pop
add
les
jae
into
and
sti
idivl
or
fistps
push
and
push
xchg
push
ret
pop
dec
cmp
loopne
dec
sti
cmp
adc
dec
popa
xchg
imul
cmp
inc
test
cwtl
mov
das
mov
mov
lcall
test
pop
adc
shll
xchg
push
ret
push
std
push
subb
pop
pop
mov
mov
ret
stc
out
fstpl
sbb
mov
test
xchg
cmp
das
lds
pusha
inc
sub
cltd
push
jmp
loopne
adc
ret
jo
rcrl
mov
mov
mov
test
cmp
out
mov
push
pop
enter
add
cli
ss
daa
fsubp
mov
arpl
in
aam
push
jb
push
out
ds
fistpl
sub
mov
cmp
out
daa
icebp
pop
outsl
or
scas
and
push
dec
mov
and
notb
ds
mov
push
mov
insl
mov
xchg
cmpsb
push
in
dec
js
sub
mov
mov
imul
lods
xorl
xchg
sahf
in
iret
repnz
xchg
imul
arpl
push
pop
xchg
cld
pop
mov
nop
and
cmp
cmpsl
mov
xchg
push
roll
test
test
sti
outsb
dec
leave
call
lret
inc
out
adc
aaa
xchg
fnstcw
or
mov
popf
rorb
pop
rorb
mov
stos
push
pop
sarb
ffree
cld
push
test
and
fucomip
cmp
push
scas
outsl
inc
pop
jne
vzeroall
ds
gs
sahf
dec
push
iret
mov
in
aad
ror
test
or
or
lea
stc
jno
idivl
inc
and
enter
insl
jl
push
xchg
cwtl
loopew
in
mov
push
imul
dec
and
mov
inc
dec
xchg
mov
push
jg
add
in
filds
add
fwait
idiv
hlt
dec
jl
mov
hlt
pop
stos
imul
sub
add
cmp
fs
xor
mov
mov
inc
rolb
ret
cs
stc
lock
jge
xchg
inc
dec
xchg
inc
mov
lcall
dec
sub
sti
out
movsl
aam
pop
je
sbb
andl
push
in
dec
fs
out
add
insb
lcall
lods
mov
sub
pop
outsb
push
data16
xlat
and
ja
adc
and
add
std
or
cmc
push
rol
pop
imul
add
out
fwait
pop
test
adc
das
sbb
add
sub
fidivl
mov
xchg
cwtl
lea
js
jge
dec
int
jnp
cmp
adc
push
and
lock
lods
push
shll
jecxz
pop
icebp
cmp
add
lods
push
pop
shrl
pop
loop
popf
mov
or
out
jnp
mov
rorl
cmc
jnp
or
pusha
xor
aad
iret
sbb
sbbb
push
push
inc
add
fstps
mov
fwait
mov
pop
xchg
sbb
mov
aad
ror
mov
jno
mov
movsl
dec
push
mov
mov
dec
sbb
std
pusha
sbb
mov
fdivrl
jmp
mov
push
mov
sub
xlat
pop
mov
jae
push
jne
lods
int
mov
xchg
aaa
je
sub
and
jge
pop
mov
lahf
ret
dec
inc
sbb
pusha
and
adcl
shlb
mov
aam
sbb
rcrl
cmp
lds
in
jo
jle
fwait
xlat
iret
out
popf
pop
jmp
test
hlt
stc
aaa
mov
cmp
push
outsb
loopne
sub
daa
cmovle
mov
cmc
inc
cmp
cmp
fcmove
pop
sbbl
push
mov
ret
mov
adc
fst
mov
pop
mov
sub
arpl
mov
xchg
cltd
jb
js
and
rorb
pop
push
imul
jo
aam
push
arpl
lods
scas
stos
dec
fldt
cmp
xor
push
push
ror
mov
xchg
add
daa
test
rolb
popf
icebp
adc
sub
mov
xchg
fsubs
jae
mov
lret
inc
push
pop
mov
xor
sbb
frstpm(287
mov
dec
les
push
sub
mov
and
insb
xlat
push
push
cmovg
mov
push
je
push
sbb
and
jae
sub
lock
outsl
and
stos
movsb
adc
enter
mov
pop
cwtl
jge
lock
pop
sbb
repnz
outsl
sub
pop
push
in
lahf
fistps
sub
cld
or
xchg
popa
loop
cmp
lods
xor
or
gs
push
pop
pop
test
jg
rcrl
push
add
sub
mov
cwtl
rclb
mov
mov
adc
push
pop
inc
outsl
ret
cmpsb
mov
xchg
xor
mov
lea
sub
movl
std
popf
in
sarl
xchg
das
cmp
pop
cld
xchg
negl
jmp
int
fidivs
pop
enter
push
or
sub
ret
loopne
dec
pop
rcrl
xchg
movsb
shrd
dec
leave
lods
call
lods
stos
dec
dec
cmp
mov
inc
add
jb
add
jge
subl
jmp
scas
popa
inc
jge
sbb
cs
pop
in
push
xchg
sbb
ja
pop
xchg
es
push
inc
pop
pop
xor
sbb
pop
xchg
jle
dec
cmp
push
mov
ds
or
arpl
je
scas
cmpsb
mov
es
loopne
lcall
icebp
js
decb
mov
lahf
out
dec
cmpsb
push
iret
in
popa
mov
ss
adc
push
fsubp
cmp
enter
and
js
jno
xor
inc
cmpsl
dec
mov
pop
lcall
xchg
in
popf
enter
outsb
dec
adc
scas
xor
in
xchg
and
pop
cmp
addl
ficoml
and
adc
push
push
and
and
loopne
sub
scas
dec
js
enter
sbb
cmp
pop
lahf
sub
scas
push
pcmpgtb
loop
bound
mov
sub
cwtl
xchg
and
inc
popf
push
or
test
xor
inc
imul
xor
mov
cmp
cmovnp
adc
loopne
out
add
push
lret
fwait
mov
and
sbb
pop
xor
in
add
fwait
js
adc
add
adc
inc
ljmp
mov
or
not
add
dec
adc
mov
lds
mov
mov
cmpsl
add
xor
push
push
pop
push
cmpsl
add
dec
rorb
push
fsubs
fistpl
jbe
hlt
test
jle
push
das
sub
repnz
pop
dec
enter
adc
jb
pop
inc
iret
loop
fldl
push
cmpsl
out
ljmp
and
clc
jnp
add
in
dec
sub
inc
pop
pop
popf
dec
mov
pop
cmp
cmp
jbe
mov
arpl
or
popf
cmpsl
cmpl
fcompl
inc
outsl
scas
ds
js
dec
das
mov
mov
addr16
enter
sbbb
sbb
fdivs
push
sbb
adc
add
dec
outsb
insl
jns
mov
push
mov
hlt
outsl
dec
addr16
sahf
in
or
ds
int
xor
dec
sahf
rcll
mov
lds
in
fiadds
test
mov
das
test
add
inc
cmp
lcall
inc
dec
xchg
inc
stos
push
fistpll
or
gs
mov
sub
xor
pop
xchg
inc
repnz
enter
mov
cs
dec
sbb
xor
xchg
fs
dec
xchg
addl
inc
sbb
pop
pop
push
in
ret
pop
imul
pop
jp
imul
fs
idivb
sub
xchg
sahf
and
xor
out
in
mov
xor
push
cld
aam
xorb
mov
movsb
dec
enter
fucom
and
adc
sub
jns
mov
jo
scas
hlt
jp
pop
xor
mov
sub
mov
cwtl
dec
dec
fdivrl
inc
and
or
repz
push
inc
test
in
fmull
lock
and
movb
mov
rclb
pusha
cmp
push
sbb
mov
adcl
popa
jg
stos
jb
test
stos
les
dec
in
call
cmp
cmp
inc
or
or
inc
and
fwait
jle
pop
or
clc
orl
xchg
insl
mov
lods
or
popf
clc
in
pusha
sbb
xchg
sbb
stc
nop
sbb
ret
cmp
mov
test
cmpsb
pushf
lfs
test
push
mov
pop
adc
xchg
call
mov
inc
jo
xchg
xchg
imul
pusha
mov
cmc
lahf
cmp
mov
mov
mov
jmp
push
push
cmpsl
aad
sahf
les
push
inc
jmp
testl
popa
push
push
lcall
mov
cmpsl
cmpsl
inc
in
insb
jbe
jmp
push
xchg
mov
adc
pop
jbe
pop
div
xor
xchg
aam
adc
jmp
lret
jno
repnz
iret
mov
push
jnp
shlb
sahf
xor
mov
clc
jmp
insb
pop
loopne
push
jno
xor
test
lds
scas
fidivrs
loope
test
stos
mov
pop
pop
inc
push
in
xorb
xchg
and
call
cwtl
pushf
pop
adc
add
andb
es
icebp
inc
dec
inc
dec
inc
lods
insb
insl
xlat
add
mov
lret
imul
mov
or
stc
aaa
mov
adc
sub
fcmove
add
daa
adc
sbb
jle
scas
shrb
jecxz
clc
dec
lcall
xor
into
cmp
push
mov
sahf
movsl
shll
imull
cmp
dec
push
mov
inc
sbb
lcall
and
mov
sub
push
arpl
xchg
sbb
rclb
stos
add
dec
int3
and
outsl
sub
or
js
fwait
add
jae
push
adc
nop
jge
xchg
add
cmp
out
in
add
ja
lds
or
leave
pop
fs
add
sub
lea
jnp,pt
fists
sbb
xchg
insb
shlb
testl
test
out
cltd
in
pushf
outsl
fiadds
mov
jb
lds
push
inc
mov
outsl
xchg
push
loope
dec
cmp
fmull
pop
out
int3
aaa
into
les
xchg
into
rcr
test
cmp
daa
sbbb
xorl
and
scas
add
mov
push
add
les
test
sub
xor
push
out
ret
stos
pop
daa
or
sub
push
sub
pop
xchg
mov
lea
mov
jo
dec
xlat
enter
stc
push
test
fs
imul
lret
or
pop
pushf
fmuls
add
iret
test
lods
hlt
pop
add
into
add
ret
add
cwtl
mov
mov
or
ja
and
mov
push
aaa
adc
mov
inc
jl
jbe
xor
sarl
adc
ss
push
int
in
xor
cld
mov
pusha
add
gs
nop
push
cmp
fcmovnu
lcallw
pop
dec
pop
ret
xor
push
xor
pop
adc
sub
arpl
and
mov
scas
test
orl
xor
lret
iret
insl
aaa
dec
mov
push
sub
push
push
or
push
sbb
ret
mov
and
aas
mov
push
mov
test
jle
mov
mov
mov
adc
clc
popf
je
cmp
rorb
jae
jns
aaa
sub
cmp
movsl
jg
inc
mov
scas
lret
lock
aaa
mov
clc
test
push
sbb
pop
cmp
lods
add
inc
insl
into
nop
mov
lcall
sahf
lahf
inc
in
aam
xor
or
addl
shl
imul
jmp
add
or
or
adc
push
push
ja
pop
cwtl
popa
lea
jl
adc
and
jge
cwtl
nop
mov
dec
cmc
mov
pop
and
data16
pop
mov
lock
jmp
jp
mov
call
stos
pushf
fmull
sbb
or
cmp
subl
mov
jno
dec
pop
nop
mov
rorb
mov
push
out
xor
push
inc
mov
push
lea
mov
leave
mov
dec
imul
enter
stc
mov
jo
dec
sbb
imul
xchg
addr16
daa
xchg
les
push
std
pop
sbb
jns
push
fcomip
jge
jnp
push
sbbl
dec
cmpsl
pop
sub
xor
xchg
clc
int3
cwtl
jae
sub
repz
jmp
test
cmp
pop
ja
jb
or
and
xchg
jae
out
cmp
xchg
mov
dec
sbb
roll
inc
sub
popa
lcall
addl
iret
adc
imul
push
push
xchg
dec
dec
outsb
xchg
or
fwait
sbb
mov
icebp
je
imul
outsb
cli
dec
fistl
ds
aaa
fdivrp
shll
sub
add
lret
mov
or
or
cli
or
mov
sbb
adc
adcb
mov
rcrl
cmp
mov
sarl
dec
and
pop
adc
icebp
jl
adc
inc
lods
xchg
sub
cmp
xchg
ja
mov
rorl
sub
mov
ds
in
mov
cmc
pop
loope
sbb
dec
sub
push
inc
fs
leave
xlat
aas
outsb
in
int
push
cwtl
mov
je
push
enter
clc
cwtl
ja
pop
push
ds
adc
jbe
sub
pop
adc
push
lahf
add
les
call
pop
je
je
sarb
in
lods
gs
hlt
test
push
iret
icebp
movsb
in
dec
out
out
sti
sbb
pop
pop
test
pushf
or
xor
cli
repnz
popa
es
sbb
dec
es
iret
fimuls
lret
bound
xor
mov
push
jns
mov
das
scas
mov
xchg
ffreep
dec
lds
fmuls
shr
sub
insl
inc
add
mov
xchg
jbe
sbb
pop
lds
popf
inc
clc
jg
in
imul
fwait
push
ret
push
mul
dec
pusha
push
sub
sbb
js
data16
pop
push
push
loope
inc
movsl
movsb
push
cmp
mov
pop
mov
and
add
das
mov
inc
inc
into
sub
add
mov
pusha
mov
push
jne
jo
mov
push
jns
pop
add
out
jle
popa
bound
lods
out
add
dec
cwtl
pop
ficompl
pop
arpl
shll
mov
jne
or
add
sub
mov
imul
sub
dec
nop
sbb
cmp
cli
rcrb
ljmp
push
frstor
rorl
mov
movsb
sbb
dec
sub
adc
sbb
push
adc
das
cmpsb
imul
mov
enter
cmc
jb
sub
jmp
mov
adc
mov
xchg
pushw
jnp
icebp
mov
mov
stos
sub
inc
inc
mov
lods
jle
into
add
mov
cmp
sbb
cwtl
sub
xchg
pushf
inc
out
inc
add
cs
xchg
rcll
mov
lahf
negl
fstpl
mov
jl
fwait
and
stc
je
out
insb
push
pusha
xchg
scas
mov
mov
mov
inc
lret
in
sbb
nop
xchg
push
repz
mov
dec
mov
or
adc
push
mov
mov
iret
pop
adc
notl
mov
mov
cmpsb
jl
pop
rcll
call
ja
ret
mov
aam
cmp
jo
fcoms
jns
repz
adcb
into
sbb
lods
lods
mov
es
cmpsl
xchg
jne
aam
fmuls
mov
fsts
popa
les
or
mov
xchg
stos
xchg
adc
bound
lcall
sub
arpl
insl
dec
loop
or
ret
mov
and
bnd
lods
add
aaa
arpl
lahf
adc
cmpsl
je
pop
ja
jecxz
mov
insl
lret
movsl
xchg
adc
outsl
fstl
xor
sub
cwtl
js
mov
mov
jae
add
mov
xchg
lds
movb
cmp
cmpsl
aas
cmc
inc
std
orl
test
and
out
jecxz
or
stos
sbb
jmp
scas
call
int
je
insb
add
adc
cmp
mulb
out
xor
jmp
mov
dec
fnstcw
int3
int
addl
xor
mov
xchg
inc
xchg
mov
out
mov
neg
sbb
in
rcrl
jl
imul
mov
cwtl
loopne
mov
out
or
subb
fldenv
push
lds
xchg
cltd
xor
pop
push
jmp
mov
dec
sub
inc
je
insb
push
add
xorps
jl
and
cli
insl
clc
add
repz
or
test
add
add
outsl
pusha
xlat
test
clc
cmc
into
ror
adc
pushf
cmp
xchg
sub
dec
int
xchg
jge
loopne
jp
and
aad
xlat
mov
mov
movsl
inc
jl
lea
push
in
mov
out
or
mov
pop
sub
mov
orb
fs
add
adc
imul
add
xchg
sbb
inc
push
shrl
push
shlb
repnz
inc
mov
aad
and
gs
inc
cmc
dec
sub
rcll
and
inc
je
out
imul
jbe
js
std
pop
js
movsb
adc
push
stc
cmp
jns
rcr
or
xchg
inc
jge
xchg
ljmp
test
mov
imul
jo,pn
hlt
xchg
cmc
stos
mov
dec
in
sti
les
ds
aam
imul
push
pop
std
in
mov
shrl
sti
aad
inc
xchg
and
mov
jno
in
lahf
and
movsl
cmp
sti
movsl
mov
cmpl
cltd
sub
aaa
xchg
adc
cmp
dec
jle
push
repnz
movsl
jmp
and
xchg
and
pop
dec
es
pop
mov
je
xor
cltd
es
cmp
pop
je
push
ljmp
into
inc
clc
push
mov
sti
jne
cmp
or
xchg
outsl
cmp
in
mov
jp
test
mov
sub
lods
ds
inc
aas
lods
jbe
cmpsl
mov
or
hlt
sub
movl
jmp
cmpl
mov
movl
movl
mov
jmp
movl
jle
push
pushl
call
andl
adc
xor
xor
mov
sub
and
not
and
movzwl
adc
cmpl
mov
movl
movzbl
mov
jmp
movl
movl
jbe
push
push
push
pushl
call
add
sbb
sbb
xor
add
mov
mov
shrd
adcl
mov
or
mov
addl
jmp
inc
or
add
cltd
or
subb
ja
pop
lcall
push
add
mov
lock
notb
add
pop
sub
fldenv
sub
lret
mov
in
les
jno
insb
imul
loop
lea
push
fsubp
xchg
push
lods
inc
mov
xor
fistpl
ja
iret
jne
outsl
loopne
dec
mov
aas
mov
aad
cld
ljmp
sbb
roll
and
idivl
cmc
lfs
inc
push
and
js
fsubl
sbb
xor
lahf
xchg
gs
pop
add
sub
mov
andl
mov
popf
sub
popa
test
packsswb
cmp
cmc
xlat
xor
in
and
daa
mov
dec
sub
ja
dec
leave
test
and
xchg
sahf
jo
xlat
push
imul
mov
push
fsubr
ljmp
enter
stc
mov
out
inc
std
mov
arpl
mov
dec
lcall
aaa
std
pop
fsubrl
jbe
ror
mov
negl
push
dec
pop
push
xor
insb
adc
xlat
sbb
ss
icebp
adc
shll
popf
popf
cltd
inc
cmc
or
push
into
jae
jecxz
jno
sub
add
add
test
es
cmp
cmp
xor
jp
jge
jns
inc
ljmp
mov
inc
dec
push
rcll
sbb
pop
push
outsl
test
and
lds
ficoml
fdivr
add
add
xchg
push
push
les
mov
add
push
or
nop
dec
mov
js
and
add
cmp
and
inc
xchg
pop
jns
test
gs
xchg
add
pop
cmp
mov
jns
inc
cmp
mov
hlt
xchg
xor
mov
add
test
outsb
xchg
push
sbb
cs
add
repz
or
sub
cs
xor
dec
cmpsl
cmp
inc
imul
aam
pop
or
aam
mov
xchg
aad
pop
bnd
jnp
scas
stos
jg
inc
xchg
sahf
or
jge
cmpsb
das
repz
adc
mov
ret
stos
mov
cmp
leave
call
lret
cld
mov
stc
sarb
mov
xor
insb
out
and
mov
dec
mov
cmp
inc
jne
popf
mov
jg
pushl
adc
es
scas
or
dec
jge
jmp
dec
in
jno
sbb
jne
icebp
aam
xorl
lea
inc
xchg
stos
sub
sub
iret
cltd
lds
dec
and
lods
cmp
add
xor
add
sti
aas
je
cmp
mov
std
inc
jmp
lahf
sbb
or
repnz
pop
cmp
out
or
sbb
cmpsb
notb
mov
and
xchg
pop
push
pusha
pop
ret
mov
mov
xchg
in
sub
imul
rorb
cmc
sub
pop
xchg
popf
xchg
test
sbb
insb
xchg
or
xlat
push
outsb
outsb
jbe
or
adc
aam
inc
push
imul
dec
xchg
dec
sbb
or
hlt
pusha
jne,pt
pop
into
sub
or
insb
and
icebp
sbb
or
push
ja
cltd
daa
das
ret
jp
cwtl
shll
stos
sub
lcall
into
movsl
shl
jmp
add
bound
jp
and
fldt
out
cli
cmp
sbb
add
mov
lea
out
xor
dec
stc
lds
std
mov
int3
fstp
inc
shrb
jnp
mov
test
repz
jnp
xchg
push
cmp
sbb
shr
fdivp
cmp
jmp
mov
cmp
mov
cmp
sub
xor
fisubrl
mov
popf
lcall
and
imul
and
cmp
pop
pop
jnp
bound
cmp
shr
mov
mov
lret
int
nop
outsb
add
mov
sbb
xchg
push
lods
in
ljmp
and
mov
popa
mov
sub
dec
cmpsb
outsl
pop
mov
inc
bound
mov
adc
or
sbb
int3
pop
int
andb
notl
scas
je
rcrb
lods
jl
xchg
inc
testl
or
aaa
push
cli
xchg
bsr
jmp
push
xchg
mov
out
xor
sub
lret
in
push
call
xor
jno
mov
pusha
add
out
push
lret
sbb
repz
ss
mov
icebp
sbb
imul
lcall
jecxz
mov
fmuls
or
ret
in
xchg
fsubrl
pop
pop
inc
iret
pop
ds
pusha
and
mov
jno
mov
push
mov
adc
pop
add
dec
orb
daa
pop
mov
ret
sub
int3
dec
adc
jb
mov
pop
add
push
lods
dec
dec
jns
inc
sbb
movsl
sub
push
cmp
cmpsb
in
pop
cmpsb
sbb
les
sub
push
cmp
inc
insl
loopne
jl
cmp
push
mov
popl
mov
sbb
inc
inc
rcll
sarl
or
add
sbb
imul
cmc
mov
pop
push
filds
test
mov
outsl
push
data16
jne
mov
hlt
fbstp
test
pop
in
notl
mov
jno
ret
push
sbb
out
cmpsl
aad
and
and
aas
push
add
xor
cmpsb
rolb
mov
xor
les
and
call
in
xor
icebp
xor
gs
push
jecxz
xchg
ss
mov
sub
cmp
mov
sub
ljmp
ror
push
clc
xor
fs
lea
rcrl
xchg
sti
fildll
jne
mov
add
mov
lods
mov
or
fbld
adc
pop
pop
sbb
jo
test
push
mov
jo
xor
mov
fmull
cs
hlt
jp
xlat
mov
add
inc
in
lcall
cli
cmp
mov
cmp
and
repnz
and
lds
mov
adc
in
mov
cli
inc
add
nop
lods
mov
pop
ds
adc
push
aam
fstl
stc
jb
arpl
pop
cmpsl
mov
xlat
xor
insb
movsl
out
xchg
fidivl
int
xor
xchg
cs
add
push
push
sub
sti
ss
adc
stc
jmp
addr16
dec
sub
add
sbb
outsb
lret
add
adc
cmp
and
test
shl
xor
movl
or
shr
mov
subl
mov
mov
addl
mov
adcl
shrd
shr
mov
cmpl
not
mov
movl
mov
jmp
mov
mov
jb
pushl
pushl
pushl
pushl
push
pushl
call
or
adcl
movl
sub
and
subl
subl
mov
mov
xor
xor
adcl
or
adcl
shl
add
add
add
mov
mov
adc
mov
and
shrd
cmpl
movl
not
mov
mov
jmp
movl
movl
jge
pushl
pushl
push
pushl
push
push
call
sbb
add
or
or
xor
or
add
mov
movl
cmpl
mov
movl
mov
jmp
movl
movl
jg
push
push
pushl
call
add
sbbl
mov
adc
mov
xor
mov
addl
sub
shr
movl
mov
or
mov
addl
xor
shl
cmpl
movl
mov
not
jmp
movl
ja
pushl
push
push
push
call
xorl
xor
incl
xorl
subl
sub
xor
mov
sub
or
cmpl
mov
mov
movl
jmp
mov
jl
push
call
addl
adc
xor
neg
mov
mov
add
sbb
and
mov
movl
mov
and
mov
movl
mov
add
movl
mov
mov
adc
jmp
ret
mov
dec
rcrl
dec
mov
add
out
pop
cwtl
inc
dec
leave
ss
sub
es
fnstsw
stos
aam
lretw
dec
sahf
arpl
ss
mov
mov
dec
pop
inc
ljmp
lea
fsubs
addb
cmpsl
dec
stc
out
aaa
loopne
cmp
gs
leave
gs
push
loope
push
out
jmp
insl
inc
mov
aas
dec
cmc
pop
das
or
pop
data16
pop
sub
xchg
fs
pop
outsb
cmp
test
nop
xchg
jle
negl
mov
out
in
jae
mov
in
push
cmpsl
jle
fstps
arpl
clc
les
push
pop
xchg
inc
je
insb
mov
hlt
and
clc
and
sbb
jns
xor
data16
sbb
stc
pop
enter
add
test
leave
pop
xchg
not
push
loopne
lret
xchg
lds
xlat
shlb
mov
add
cmpl
mov
hlt
sbb
lret
fcomi
mov
lahf
lahf
scas
iret
xchg
pop
adc
shrl
mov
push
cli
in
or
pop
adc
jg
lods
jmp
insl
jo
pushf
jmp
add
out
das
in
adc
sbb
dec
imul
fwait
movsb
pop
add
jecxz
sbb
in
lods
pushf
ret
jb
jne
mov
pop
imul
icebp
xlat
adc
inc
lahf
pop
outsl
xchg
jnp
arpl
pop
cld
add
inc
pop
inc
or
push
loop
leave
cmpsl
mov
push
xor
mov
pushf
add
adc
jnp
mov
cmpsl
mov
fs
ret
scas
xchg
mov
or
jp
dec
and
pop
mov
mov
sbb
xchg
sub
mov
add
dec
sti
xchg
push
negl
leave
sub
ljmp
mov
sahf
fdivl
ret
pop
adc
jp
jmp
cmpsl
add
adc
rcr
mov
or
mov
insl
mov
mov
int3
pusha
jle
out
fbld
sbb
push
push
xchg
cmpsl
dec
popf
jae
inc
stc
in
stos
pusha
or
and
add
cli
adc
sub
decb
xchg
in
in
enter
xor
lods
cmp
dec
mov
aas
std
cs
jmp
xchg
into
and
lret
fidivrs
mov
mov
jmp
out
add
iret
call
pop
cmp
ficoml
daa
sbb
ljmp
icebp
sub
mov
add
push
hlt
leave
pop
testb
ljmp
lds
and
sbb
cli
call
xchg
daa
or
dec
fcomps
push
aaa
mov
mov
repnz
fs
rorl
lods
jmp
pop
loopne
xchg
xchg
sub
lock
sub
dec
daa
les
pop
cmc
sahf
lods
xchg
adc
outsb
cmp
or
rcll
orb
jmp
jne
shlb
mov
inc
movswl
lods
outsb
pop
dec
js
mov
dec
jecxz
fwait
lahf
xor
adc
pop
cli
lock
loopne
fsubr
sub
sbb
mov
fidivl
test
push
mov
fsubrl
sub
movsl
shrl
xchg
in
xor
lea
repnz
rcr
in
jo
push
sahf
data16
mov
imul
adc
mov
xchg
cltd
mov
nop
xorl
out
cmpsb
push
ja
ja
xchg
sbb
ljmp
sbb
mov
pop
js
outsb
jl
test
fnstcw
fidivs
lea
popa
enter
mov
mov
dec
mov
add
mov
loopne
and
or
mov
pop
and
cmpb
inc
jnp
xorl
sbb
fcmovbe
sbb
pop
ss
lock
mov
sbb
shrb
or
jne
or
xchg
movsb
cmpsl
mov
test
flds
pop
sbb
xor
xor
lea
iret
xchg
shll
push
jl
sub
leave
mov
or
out
sub
pop
stc
mov
jns
test
jge
out
lods
shlb
insl
mov
testb
push
aad
xchg
ljmp
inc
adc
cs
xchg
lahf
cwtl
fsubl
lret
xchg
mov
sbb
push
lods
jbe
sbb
ljmp
mov
int3
popa
sub
data16
cmpsl
jno
xor
cs
xor
sahf
mov
pop
xchg
jmp
mov
jle
cmc
ret
push
cmp
mov
daa
push
push
insl
data16
subl
add
inc
xorb
sub
and
sbb
rcrl
push
call
movsl
add
jb
aaa
das
aad
mov
sub
push
movsl
mov
rcll
mov
mov
xchg
cmp
and
mov
popa
xchg
ss
xor
icebp
leave
addr16
call
xor
decb
outsl
mov
dec
adc
or
xchg
cmp
add
jnp
inc
jns
movsb
gs
sti
fwait
lahf
cwtl
sbb
loop
popa
test
and
pcmpeqw
push
and
rcr
xchg
pop
mov
sub
pop
inc
addb
push
ja
rolb
mov
sbb
pop
cmp
cmc
sahf
mov
mov
or
stos
scas
fcmovne
clc
cmp
out
pusha
mov
pop
jne
push
fisubrl
pop
jl
adc
sbbl
xchg
pop
ljmpw
adc
enter
add
cmpsb
test
movsb
sub
sub
push
push
test
push
aas
call
adc
mov
mov
and
mov
frstor
filds
lods
mov
pop
mov
xor
aam
push
mov
pushf
mov
adc
push
push
incb
movsl
in
lahf
sub
out
out
adc
ficomps
pop
push
push
mov
inc
popf
inc
cmc
mov
orl
pop
xchg
dec
gs
addl
dec
popf
lds
fidivs
or
jmp
dec
call
jmp
add
jae
mov
or
pop
xchg
sahf
jl
imull
adcb
dec
hlt
popa
inc
lea
scas
outsl
add
loopne
xor
push
andl
mov
jno
lahf
jb
mulb
scas
and
fildll
dec
popf
cmp
jmp
xor
cs
bswap
sub
xchg
mov
cmp
hlt
dec
and
pop
pushf
popf
adc
int3
pop
sbb
inc
out
dec
pop
mov
loope
mov
and
js
adc
fistl
push
mov
xchg
sbb
test
nop
aam
or
xor
iret
and
loop
xchg
rorl
and
loopne
jge
mov
insb
add
mov
dec
loope
mov
dec
icebp
arpl
jb
inc
add
push
iret
dec
mov
movl
jmp
lods
jp
scas
adc
xchg
mov
pop
fisttpl
ja
adc
mov
in
fnsave
ja
add
outsl
and
push
xchg
bound
jbe
jae
pop
pop
dec
pusha
add
aas
add
cwtl
add
gs
adc
out
fdivs
mov
repnz
aaa
cmp
or
stos
jmp
mov
fistps
adc
in
fstl
movsb
adc
push
pop
mov
bound
pop
data16
sbb
adc
fwait
ds
pop
mov
aad
sub
lds
adc
iret
inc
testl
shrl
sahf
in
int3
xchg
xchg
loope
dec
sub
pop
xlat
out
pop
daa
mov
into
out
inc
xlat
pop
pop
mov
pop
push
or
mov
mov
nop
nop
cmp
in
sbbl
insl
adc
outsb
xchg
xchg
addr16
mov
push
add
or
pop
mov
adc
jae
in
add
pop
dec
pop
nop
and
or
mov
int
jne
mov
movsl
xor
xor
mov
addr16
shlb
push
sbb
test
mov
or
sbb
loope
jae
or
sbb
loop
mov
add
stos
and
outsl
cmpsl
stos
cmp
dec
xchg
fnstsw
insb
aaa
scas
inc
push
stc
fldcw
movsl
sbb
mov
jg
add
sbbb
pop
divl
mov
cmp
movsb
lcall
repnz
add
inc
adc
inc
sub
into
das
mov
lods
lock
and
inc
mov
aad
mov
jb
cld
push
jb
jecxz
pop
dec
js
mov
insl
das
jecxz
rorb
sub
push
jae
repz
loopne
cli
mov
mov
or
repz
lock
dec
lcall
cli
imul
dec
sub
xor
sahf
sbb
adc
fisttps
bnd
int3
dec
mov
add
or
jne
pop
push
jge
sbb
dec
mov
loop
or
clc
out
mov
xchg
shll
mov
repz
orl
adc
pop
mov
pop
in
std
cmp
xor
cmp
or
cmp
mov
je
cltd
in
jle
fisubl
xor
xchg
das
shll
jnp
adc
mov
and
pop
mov
popf
ret
cmp
dec
into
jmp
repz
dec
mov
outsb
sub
and
push
lcall
push
or
and
int
xchg
imulb
or
mov
jmp
cmp
outsb
mov
xchg
and
sub
and
sbb
idiv
int
imull
or
xchg
ja
int3
dec
push
aaa
jns
or
nop
insb
xor
sub
dec
fisttpll
lahf
dec
pop
cmp
imul
sti
mov
cltd
add
sub
mov
arpl
mov
lcall
addr16
mov
or
xchg
pop
xchg
out
mov
xor
adc
iret
subb
jae
xchg
and
jecxz
out
imulb
popf
test
or
push
pop
jecxz
jo
push
cmpsb
pop
and
adc
cmp
cli
mov
repnz
xchg
in
mov
mulb
xchg
loop
scas
mov
fstpl
lret
popf
add
sbb
jge
push
mov
lret
sbb
jge
andl
mov
popa
and
push
clc
pop
mov
int
lock
outsl
and
mov
sbb
in
and
xchg
daa
mov
cmpsl
jae
mov
push
jle
push
cmc
adc
mov
ds
ljmp
sub
fcomps
sub
push
test
sahf
jecxz
xchg
jo
call
cli
adc
or
insb
add
dec
add
push
cmpsl
dec
nop
or
dec
jmp
mov
out
das
cmp
jb
gs
xchg
pop
lret
jl
lock
xchg
jmp
sbb
iret
movsl
mov
cltd
sub
lds
ja
push
adc
sbb
jp
fcompl
adc
in
adc
out
jecxz
add
jbe
mov
push
mov
mov
add
dec
inc
jge
xchg
outsb
lock
mov
dec
dec
and
les
ret
dec
mov
imul
mov
insb
int3
jp
mov
add
mov
mov
lcall
stos
cld
cld
add
imul
mov
cmp
int3
mov
cltd
mov
leave
mov
adc
mov
add
fistpl
mov
mov
stc
dec
icebp
xchg
aas
inc
shl
js
adc
pop
or
pop
cmpb
xchg
cwtl
fidivl
arpl
jno
pop
push
pop
cmp
cmc
pushf
xor
add
sbbb
add
jmp
push
pop
jp
pushf
add
cmp
repnz
cs
xchg
push
push
shrl
outsl
jo
hlt
sub
test
int3
pop
out
js
sbb
ja
adc
push
std
psubsw
sub
sti
imul
xchg
mov
scas
sbb
call
movsb
jno
cmp
jae
lcall
mov
jp
test
xor
nop
adc
aaa
shrl
jno
shl
lahf
sub
mov
rcl
jle
xchg
stos
jle
push
jecxz
sub
inc
mov
or
mov
lods
dec
fs
xchg
test
scas
jo
fisttps
mov
mov
dec
ja
xlat
add
mov
push
inc
push
ja
bound
rclb
push
out
out
mov
cmp
ret
jl
out
cld
into
enter
xchg
sbbb
out
int
adcl
jo
lcall
loope
cmp
dec
push
addr16
xor
mov
jp
lret
adc
mov
stc
push
dec
dec
nop
insb
ret
push
xchg
jge
xlat
rcrl
push
imul
imul
cmp
mov
cwtl
jno
push
pop
pop
test
push
sbb
mov
outsb
mov
adc
scas
dec
rorb
jmp
xchg
aam
lds
xchg
lods
jnp
sbb
dec
pop
addl
adcl
fdivl
icebp
mov
cli
ffreep
lock
or
fcomi
sbb
sub
pop
or
add
add
push
mov
inc
test
fstpl
xlat
cld
inc
cli
cmp
cwtl
push
cmpsl
xchg
mov
jmp
bound
jmp
lret
pushf
mov
sbb
push
mov
pop
jns
mov
dec
mov
gs
xchg
mov
call
mov
jb
push
scas
mov
dec
sbb
jmp
mov
mov
xor
movhps
fxam
lcall
movsb
mov
mov
shrd
jmp
add
dec
push
adc
call
push
push
mov
add
ret
pop
sahf
fisubrs
dec
push
xchg
mov
call
cbtw
and
insb
xchg
xchg
sub
jl
fmulp
repz
mov
fwait
iret
adc
fisttpll
cmp
push
xchg
sbb
sbb
ss
fists
mov
dec
pop
xor
pop
pop
pop
aam
sbbb
pop
xchg
push
xor
jb
pop
push
sbb
sbb
rolb
xchg
mov
pop
pop
fwait
adc
push
xchg
pop
pop
xchg
jne
add
jmp
mov
fwait
xor
lcall
jne
sbb
inc
test
mov
rcll
lods
mov
cwtl
mov
jmp
ret
mov
sub
dec
addr16
jns
call
shlb
ficoms
or
inc
ljmp
mov
sarl
out
pop
add
push
loop
pop
lock
jp
sbbl
sub
das
cmc
sbb
mov
loop
push
mov
testl
add
or
and
ja
in
jmp
dec
andnps
lret
sub
xor
add
sbb
clc
shll
sbb
push
push
icebp
je
ret
imul
xorb
out
mov
jae
dec
mov
inc
nop
outsb
mov
aam
add
mov
lcall
mov
sbb
jnp
pop
hlt
and
faddl
in
jmp
lret
push
nop
mov
ret
rcrl
cmp
mov
add
dec
mov
aaa
cmp
xor
xor
sbb
sbb
jne
pushf
push
xlat
lds
jbe
jnp
sar
dec
add
or
and
aad
fwait
das
pop
sub
xchg
xchg
inc
sbb
test
out
test
sub
sub
lahf
fistpl
out
cmp
jns
icebp
adcl
mov
or
sub
ds
sub
push
mul
dec
jp
fnsave
or
push
aam
movsl
mov
push
jl
xor
fs
inc
cwtl
jne
out
sti
adc
mov
lea
jo
outsl
adc
pop
dec
jmp
jnp
dec
dec
xor
mov
pusha
mov
adc
jl
sbb
out
push
jp
push
fwait
inc
mov
addr16
in
mov
mov
jp
sub
sub
loop
sbb
push
cmpsb
popf
test
dec
mov
lcall
jbe
mov
add
inc
push
leave
inc
in
imul
xor
sub
mov
shl
push
cmp
mov
push
sub
inc
ds
xor
lds
mov
popa
and
mov
stos
dec
cmp
xchg
cmp
and
shlb
mov
pop
inc
in
scas
mov
push
pop
push
pop
nop
pop
daa
outsl
daa
call
jb
xlat
cmpb
add
sub
inc
cmpsl
sbb
mov
fwait
push
popa
mov
mov
xchg
fnsave
leave
dec
pop
xchg
lahf
in
fcmove
lods
lods
aam
cmp
popa
movsb
mov
sub
jg
pop
dec
inc
pusha
pop
jecxz
loopne
dec
mov
and
mov
pop
lds
mov
jbe
pop
inc
xchg
ja
mov
xor
inc
pop
out
fsubr
and
std
sar
repz
rolb
lret
cli
stos
push
cmp
dec
push
mov
mov
cmp
shrl
xchg
test
scas
lahf
mov
cmp
adc
cs
ror
xor
shlb
pop
push
push
mov
vmovsd
sub
lcall
in
mov
push
lods
mov
notl
cld
gs
mov
into
cmc
push
sahf
pop
dec
xchg
dec
dec
hlt
imul
mov
dec
mov
sub
inc
and
out
cmp
and
cld
push
les
rcrb
and
das
jle
mov
mov
xlat
xor
push
fs
out
mov
fs
std
imul
jg
xlat
adc
in
fimuls
fstl
jnp
arpl
imul
cs
sbb
or
ror
dec
jmp
sbb
jmp
jb
or
cmpl
and
dec
fstpt
test
jp
adc
repz
cmp
out
iret
jno
inc
cmc
negb
or
lds
cltd
or
inc
mov
movsb
decl
into
cmp
or
mov
mov
push
xchg
je
leave
test
out
int
push
adc
pop
mov
das
xlat
and
dec
out
sub
sahf
out
bound
cmp
adc
pop
mov
stos
jge
cwtl
mov
inc
rcrb
aaa
push
xlat
add
js
insl
mov
or
or
test
loope
dec
or
out
sbb
cmp
xchg
sub
jecxz
fstps
xchg
fwait
cmp
jnp
sahf
mov
mov
add
jmp
movsb
rorl
sarl
sbb
out
and
jp,pt
mov
daa
and
int3
jp
aad
dec
jne
fnsave
jb
xchg
stos
inc
ds
inc
mov
sbb
xor
out
scas
cwtl
pop
inc
and
stos
lret
aas
lods
push
out
cwtl
mov
xchg
nop
adc
enter
inc
sub
stos
adc
lcall
sub
cmpsb
aaa
mov
or
cld
mov
xor
cmp
jmp
push
out
mov
cmp
test
std
test
mov
rorb
xlat
imul
xorl
mov
add
mov
or
in
mov
xchg
arpl
add
ljmp
add
cmpsl
cs
inc
sti
mov
out
lret
pop
aaa
inc
sub
dec
mov
inc
or
sti
imull
add
push
shl
ret
cmp
xchg
sub
or
fs
cmpl
push
aad
ss
cmp
data16
stos
fildl
enter
movsb
js
cmp
cmp
incl
mov
push
testl
add
dec
addr16
or
add
int3
rcrb
push
shl
push
je
movsb
sbb
scas
arpl
inc
push
mov
fnstenv
movsb
cmp
push
mov
cmp
lret
jl
rclb
stc
mov
pop
sbb
xor
pusha
shl
ss
test
shrl
lods
jbe
je
rdmsr
push
cli
and
frstor
jmp
adc
cmp
imul
rolb
movsl
ret
lea
xchg
jnp
int
js
stc
mov
and
lock
pop
dec
aam
or
jae
pop
scas
adc
loopne
fdivrl
cli
arpl
lds
xor
mov
cs
das
xchg
mov
push
jne
inc
mov
aad
out
cmp
and
and
or
jle
out
sahf
ljmp
adc
sub
popf
mov
js
inc
lcall
rorb
shl
xor
or
lea
mov
mov
mov
shrd
shr
jmp
in
in
data16
push
sbb
jb
dec
sub
setno
jle
aam
adc
pop
dec
xor
scas
or
and
icebp
in
loope
push
adc
bound
shll
mov
pop
push
in
push
or
xlat
mov
pop
xor
mov
jg
icebp
dec
in
fdiv
das
fwait
icebp
push
dec
mov
shlb
mov
adc
jbe
mov
mov
adc
pop
pop
pop
das
and
in
mov
loop
fisttps
aam
lods
stos
ficompl
ja
outsl
mov
adc
jne
pusha
rcr
jle
xchg
add
and
js
xor
mov
dec
sbb
dec
mov
push
imul
mov
mov
sbbl
pop
outsb
adc
xor
cmc
sar
sub
repnz
mov
or
mov
pop
mov
lcall
xchg
inc
stc
insl
cltd
in
lds
sti
push
jae
xchg
ret
inc
push
repnz
mov
or
popa
mov
xchg
push
sub
add
sub
push
imul
insl
cmp
iret
ja
cmp
dec
xchg
mov
mov
dec
push
movsb
xchg
mov
gs
and
out
in
lret
test
pop
inc
iret
cmpsb
pop
jg
sbb
push
data16
add
popf
dec
pusha
inc
andl
xchg
stc
cwtl
ljmp
cmpb
mov
cld
arpl
add
loopne,pt
nop
gs
lea
mov
pop
std
lea
cmp
jae
push
daa
mov
aam
xchg
xor
inc
jo
imul
mov
lcall
pushf
inc
sbb
jns
add
dec
and
jne
std
adc
aam
sub
in
and
ja
fcmovnb
fisubl
xchg
cmc
adc
fs
push
int3
mov
inc
mov
xchg
pop
notl
dec
stos
enter
add
sbb
push
fdivrs
hlt
sbb
mov
push
mov
add
pop
mov
or
into
mov
mov
adcl
mov
xchg
movsb
mov
or
gs
mov
and
mov
mov
andb
enter
andb
iret
ss
mov
shll
fcoml
test
cli
jge
rcl
push
mov
adc
cmp
in
sub
jp
into
cmp
ror
roll
push
cld
lods
and
jp
xor
pop
dec
push
and
cltd
push
arpl
cmp
lods
dec
in
out
in
mov
fisubrs
call
fisubrs
inc
mov
mov
or
imulb
int
aas
xor
xchg
sub
xchg
cmp
in
inc
dec
add
mov
and
testl
mov
mov
in
cmp
lret
loop
jbe
or
xchg
ret
ret
lcall
jb
iret
fildl
cmc
adc
adc
push
stc
cmpl
hlt
enter
scas
stos
cmp
outsl
xor
insl
adc
movsb
pop
sti
movsb
nop
decl
stos
mov
push
bound
mov
cmpsb
lret
or
sbb
mov
repnz
test
ja
mov
fstps
mov
lods
push
dec
xchg
mov
adc
jge
xor
and
pop
cmp
rcrb
rcrl
mov
outsb
nop
or
mov
in
mov
cmpl
loopne
pop
jmp
push
scas
lret
sbb
stos
sbb
sbb
mov
mov
xchg
daa
test
mov
test
jb
in
dec
repnz
mov
lret
push
out
mov
or
scas
xchg
sbb
push
in
jbe
inc
shrb
xchg
pop
push
xchg
dec
inc
orl
test
insb
notl
lds
cmp
repz
push
bound
add
dec
es
add
lret
inc
and
call
jg
andb
ja
mov
pop
lds
jl
dec
inc
adc
stos
popf
sub
fsubl
and
xchg
jecxz
in
mov
out
sahf
ljmp
jnp
sbb
push
in
xchg
mov
add
fstpt
movsl
mov
loope
sub
lds
dec
lret
sbb
add
push
xchg
xchg
out
in
inc
adc
loopne
pop
mov
mov
xchg
add
lds
leave
iret
push
lret
ja
outsl
fnstenv
xchg
push
dec
xchg
xchg
dec
jbe
push
aad
cwtl
je
pop
loop
jns
xchg
sbbb
mov
sub
adc
inc
shl
xchg
shll
data16
rolb
call
cmp
sbb
jno
mov
mov
jne
incb
add
dec
push
xchg
jne
add
dec
rcl
cltd
pop
xor
insl
and
into
test
aas
add
pushf
push
jnp
inc
push
sub
lods
out
lds
push
dec
or
push
icebp
mov
mov
hlt
outsb
testl
fwait
push
cmp
cmpsb
and
push
inc
lret
insb
mov
xchg
mov
stc
dec
xor
mov
lret
mov
enter
mov
pop
xchg
adc
jne
push
push
mov
inc
xchg
hlt
jo
aaa
addb
xor
xor
mov
sbb
aam
add
jne
mov
out
xor
jge
sbb
movsb
stc
stos
mov
or
stos
arpl
sub
push
aad
add
scas
mov
push
jg
into
sub
jmp
cwtl
xor
mov
jmp
mov
shlb
cmp
push
inc
and
scas
mov
xchg
adc
and
push
imul
rolb
das
jmp
push
xchg
inc
mov
dec
mov
mov
pop
stc
push
fnstenv
ret
dec
push
les
dec
vxorps
stc
sahf
xor
jae
mov
clc
jbe
and
nop
sbb
insb
xchg
mov
fstl
dec
jnp
push
sub
xor
fisubl
xlat
xor
call
inc
in
push
ljmp
leave
mov
insb
outsl
fneni(8087
nop
pop
jbe
cmp
out
jne
dec
or
popf
xor
jb
cltd
jecxz
adc
sbb
rcrb
es
loope
imul
and
xchg
inc
or
sub
fisttpl
stc
xor
push
mov
push
push
out
mov
pop
ret
jno
movsl
pop
push
or
das
and
and
call
jg
or
pop
je
jecxz
cltd
mov
ficompl
mov
stc
sbb
lret
xlat
cli
in
mov
cmp
xor
xor
mov
leave
mov
and
sub
testl
mov
cmpsb
fadds
aas
and
add
lock
dec
sbb
xchg
fs
and
insb
bound
pop
sti
or
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
jmp
outsb
hlt
xorl
xor
shrb
punpcklwd
pop
imulb
ja
push
jnp
bound
xchg
mov
lods
mov
jl
mov
clc
test
mov
adc
roll
outsl
scas
mov
sbb
lahf
push
inc
lods
js
jbe
jl
repz
sub
inc
sbb
imul
or
or
sbb
shrb
push
jle
inc
mov
inc
sbb
sti
insl
jge
xchg
leave
jae
popf
pop
sub
out
mov
into
jne
out
es
adc
or
and
ljmp
aaa
adc
dec
dec
mov
mov
mov
sub
outsl
ja
sub
adc
pusha
add
daa
stos
mov
aad
push
pop
dec
sub
bound
inc
pop
testb
and
mov
ljmp
leave
ss
pop
repz
std
push
out
sub
push
bound
sarb
pop
mov
fwait
aas
daa
jno
movsl
dec
pop
or
push
mov
cltd
adc
xchg
mov
scas
or
dec
xor
js
frstor
aaa
mov
lret
dec
imul
mov
sahf
xor
icebp
aas
pop
cli
add
jecxz
fsub
mov
mov
lahf
lret
mov
push
jmp
into
dec
stc
hlt
mov
scas
inc
add
jne
jge
ret
cmp
mov
ret
rolb
out
push
dec
int3
cs
and
xor
movaps
movsb
jl
arpl
shrl
imul
cmp
inc
lock
mov
call
sti
push
sub
add
mov
jns
mov
and
push
adc
cltd
call
and
subb
clc
or
jmp
jo
cmp
and
inc
add
fwait
lret
mov
inc
and
imul
das
jl
xchg
cmp
add
push
cmp
xchg
adc
adc
jnp
hlt
adc
and
out
sub
iret
cmpsl
add
in
mov
inc
test
lods
sti
cwtl
loope
das
lods
push
insb
out
add
add
test
sar
out
xchg
add
lret
xlat
pop
int
ljmp
aaa
cld
adcl
jo
jbe
adc
sbb
pop
xchg
add
lret
dec
or
push
jmp
pop
sti
sub
mov
and
adc
fs
pop
fwait
testb
cmp
pop
sub
push
jg
jp
ljmp
and
clc
je
loop
fsin
xchg
arpl
push
or
inc
mov
icebp
cmp
inc
or
jmp
mov
rorb
mov
jmp
push
fnstcw
adc
push
jb
icebp
pop
cmp
cmc
xor
inc
push
jae
pop
cltd
pop
fisttpll
dec
add
sub
cmpsb
fwait
push
add
xorb
pushf
icebp
in
cmpb
dec
add
dec
pop
push
iret
jecxz
sbb
enter
rclb
pop
lret
movsb
and
pop
int3
int3
sti
add
fnsave
push
testl
fimuls
dec
jle
jp
imul
xchg
jl
sbb
fs
mov
lods
call
test
sbb
and
sti
scas
inc
shl
fldenv
jecxz
push
addr16
out
scas
mov
adcb
lods
enter
cmp
stc
loope
divb
push
dec
push
dec
movsl
push
movb
lcall
scas
pop
jno
stos
jne
xor
jo
sub
cmp
pop
ljmp
dec
sub
lods
jp
leave
sub
pusha
daa
jmp
xchg
test
add
or
or
add
pop
dec
lods
jns
arpl
cmpsb
xchg
inc
jnp
imul
xchg
inc
xchg
xor
mov
xor
mov
xchg
jge
mov
scas
ss
xlat
jne
xlat
popf
loopne
cwtl
sbb
jno
inc
mov
or
mov
mov
in
fs
adc
xlat
mov
xor
cltd
sub
push
sub
inc
aad
fists
adc
movsl
testl
ret
adc
imul
jae
test
mov
lock
xor
xlat
imul
std
sbb
aaa
xchg
xchg
add
jae
jle
stos
stc
mov
sub
jp
push
dec
lret
daa
cs
aad
pop
inc
divl
pop
push
add
sbb
rorl
inc
cmp
mov
mov
sbb
cmpsb
cwtl
loopne
std
lds
jp
test
dec
mov
sub
iret
xorl
jp
sub
leave
jns
ret
cmp
sub
xchg
movsl
pop
insl
xchg
jle
push
or
jge
fcoml
lcall
rol
mov
mov
pop
repnz
mov
int
sub
rcr
hlt
sahf
cmpsl
arpl
cmp
pop
lahf
outsl
and
cmp
cmc
mov
mov
xchg
fwait
or
decb
push
cwtl
dec
jp
cmpb
in
aam
or
insb
leave
cmp
testl
ficompl
nop
lret
xor
add
insl
in
jo
and
int
xchg
and
push
rolb
fwait
xor
sbb
pop
or
add
leave
cmp
sbb
sub
mov
xor
std
mov
push
ds
sbb
mov
call
push
cmove
cld
jno
lock
mov
mov
xor
sbb
sbb
xchg
adc
aaa
pushf
jecxz
aad
or
cmp
mov
cmpl
inc
mov
lods
sbb
sbb
lcall
lods
test
mov
cs
jmp
push
sub
and
loopne
adcl
icebp
test
push
xchg
add
int3
pop
add
jge
add
mov
imul
jae
xor
movsl
fwait
add
pop
nop
int3
xor
inc
dec
inc
cmp
fcmovbe
cmp
repnz
push
push
jecxz
bound
cwtl
inc
roll
aas
adc
jno
xchg
loopne
or
fsubp
lock
das
cmp
lea
and
dec
outsb
ret
pop
arpl
stos
sti
fistpll
xor
dec
push
mov
cmova
jne
in
mov
add
jns
nop
xchg
aaa
inc
jl
insb
add
mov
mov
cmp
push
cmp
xor
mov
sub
xchg
pushf
or
mov
pop
imul
dec
pop
aam
insb
scas
sti
pop
lcall
pop
movsl
mov
jo
cmp
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
add
mov
inc
xchg
dec
mov
ja
fsubl
mov
addr16
cmp
dec
adc
mov
mulb
int3
sbb
lret
xchg
js
loop
sub
push
imul
cmp
inc
mov
mov
mov
or
in
mov
or
jle
scas
sbb
repnz
mov
xor
ds
mov
aas
jb
cltd
xor
pop
adc
gs
mov
repz
inc
imul
jp
jmp
xchg
sti
jg
outsb
in
or
sbb
stos
pop
add
fdivp
cmp
cwtl
mov
push
xor
sub
or
xchg
xor
jo
xchg
cmpsl
mov
aaa
dec
push
push
sub
cld
mov
sub
jmp
das
jmp
and
adc
push
pop
push
sbb
jmp
roll
add
mov
cs
pushf
stos
add
jb
ss
or
sbb
xor
lcall
or
fcoml
loope
xchg
push
rcrl
js
add
scas
inc
rcrb
aas
mov
mov
iret
xor
cmp
xor
and
dec
daa
xor
scas
cs
outsl
xor
fs
jl
jl
insb
mov
sbb
mov
sbb
std
js
test
fucomip
sbb
loope
loopne
cmp
jne
mov
push
mov
push
jnp
sbb
dec
pop
sub
mov
outsl
fsts
jbe
out
dec
cmp
mov
dec
sbb
or
push
inc
xlat
cmp
in
int3
ja
adc
addr16
sbb
test
pop
mov
push
pushf
outsl
xchg
mov
jp
repnz
xor
mov
dec
add
inc
in
pusha
mov
int
jns
mov
xchg
cld
js
mov
and
pop
shlb
ret
sub
xchg
xchg
loop
xchg
mov
lock
in
fiadds
push
dec
jns
push
ja
sub
mov
out
loope
jp
cmpsl
dec
and
mov
dec
jmp
test
rcr
push
jmp
test
pop
inc
and
out
dec
test
stos
adc
inc
cmp
les
dec
cld
add
rcrb
mov
mov
shrb
iret
ja
or
cmpsl
imul
sub
out
outsb
adc
push
jmp
repz
cmp
sarb
clc
sub
pushf
or
das
xor
loop
lahf
pop
dec
fists
and
push
cs
and
subl
mov
xor
data16
test
dec
test
inc
mov
jle
je
loop
icebp
xchg
sti
cmpsb
jne
jge
hlt
sub
jmp
adc
fucomi
xor
je
mov
mov
adc
sahf
inc
pushf
inc
addr16
and
jbe
adc
lret
jle
add
push
and
jmp
ret
sbb
xchg
das
in
incb
out
lea
pop
dec
out
scas
ss
mov
ret
out
sbb
mov
call
adc
mov
pop
cmp
xor
sub
and
pop
or
mov
cli
loope
inc
xor
in
push
pop
cmp
push
fidivl
mov
xchg
mov
push
cmp
sbb
sti
xchg
scas
mov
xchg
xchg
lods
aaa
dec
imul
pushf
push
clc
cmp
add
scas
ja
daa
cmp
xor
out
loop
push
xchg
ljmp
sbb
add
mov
xor
iret
push
pop
add
push
push
ljmp
adc
insl
inc
lahf
jo
dec
mov
lds
fwait
test
imul
add
inc
jno
jg
push
sbb
je
add
fists
mov
ds
cmpsl
clc
or
jle
mov
xchg
mov
lods
pushf
xor
outsl
int
dec
add
cli
sub
loop
pop
mov
mov
jns
das
aam
repnz
pop
pop
sub
out
cmp
xlat
dec
inc
out
or
fldcw
ret
movsl
test
int3
jne
xor
enter
xlat
popf
push
aad
popf
and
in
and
cwtl
jae
pop
add
daa
lods
jo
mov
add
mov
stos
sub
sub
scas
mov
mov
adc
add
jg
adc
dec
lret
push
pop
mov
ds
xchg
sbbl
loopne
test
mov
mov
cmp
mov
scas
lods
aad
inc
mov
jl
int3
xchg
jmp
xlat
iret
sub
and
xorb
xor
int
pop
mov
cmc
test
add
mov
rcl
pop
adc
pop
push
push
and
sbb
sub
sbb
out
test
int
iret
test
adc
push
and
pop
dec
and
xor
imul
inc
xchg
xchg
fwait
pushf
push
jae
mull
xchg
pop
and
pushf
mov
sbb
inc
or
dec
inc
daa
adc
mov
sbbl
inc
xchg
call
cltd
test
pcmpgtw
cmp
mov
and
jl
xchg
mov
leave
in
in
in
sti
and
cwtl
cltd
inc
cmp
sbb
das
mov
cmp
lret
mov
cs
lret
mov
sarl
xchg
out
cmp
js
loope
pusha
jmp
jg
adc
loopne
cmp
outsl
movsb
add
inc
cwtl
add
and
pop
pop
into
popa
or
mov
pop
lret
lods
insb
outsl
lds
push
pop
stos
ja
xor
repz
dec
xchg
xchg
leave
cmp
imul
jmp
jl
push
dec
cmp
adc
not
int
mov
out
test
inc
mov
jae
stc
sub
scas
xchg
adc
mov
lock
xchg
sbb
leave
xor
jae
xor
mov
les
or
adc
dec
and
outsb
aam
ljmp
in
js
add
mov
push
sub
das
insl
fdiv
fcomps
loop
pop
push
or
negb
rorl
jecxz
jns
lcall
push
jg
outsb
mov
xchg
sbb
lock
or
mov
push
jle
and
pop
out
lret
sbb
mov
mov
je
or
add
in
mov
lea
filds
xchg
sbb
daa
or
sbbb
dec
and
ficompl
push
fwait
push
xchg
mov
mov
push
cmp
dec
mov
and
pop
loopne
push
das
cwtl
push
rcrl
daa
inc
ret
mov
int
ret
lea
dec
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
orl
push
cmpb
aam
push
mov
xchg
mov
push
pop
inc
xchg
enter
push
fwait
imul
addl
je
cltd
ljmp
sub
cltd
js
out
dec
scas
pop
ficoml
lcall
faddl
push
jae
test
shll
xchg
pop
jmp
out
sub
sbb
inc
push
mov
cmpsb
pop
mov
pop
add
test
out
inc
mov
mov
movsl
out
bound
dec
cmp
fimull
and
mov
daa
lea
jb
lcall
loopne
and
pop
mov
inc
push
cs
dec
cmp
cmp
fdivrl
dec
aas
jp
stc
bound
mov
mov
dec
xchg
push
mov
jno
jmp
rorb
cmp
add
jae
rcll
nop
inc
dec
sbb
test
daa
lret
push
jmp
jo
cmc
popf
mov
inc
jnp
data16
adc
add
sub
and
lock
jecxz
insb
xchg
sbb
xchg
pop
bswap
jl
out
jb
add
jecxz
jae
imul
inc
imul
sub
lahf
out
push
cltd
or
bound
ljmp
xor
sti
roll
cmp
dec
mov
jmp
dec
jno
lret
ja
lods
xchg
test
cmpsb
sti
je
jnp
testb
cmp
icebp
int
xchg
dec
mov
in
mov
mov
scas
das
and
and
js
popa
pop
sub
and
dec
jo
mov
add
in
push
test
cmpsl
mov
adcb
test
cli
and
jl
sbb
div
xorl
inc
ss
push
pop
jbe
loope
jno
sub
sti
test
cltd
incb
inc
add
je
dec
sub
out
shr
mov
push
stos
push
ret
mov
add
inc
push
int3
push
mov
pop
test
dec
and
add
jae
adc
xor
push
rol
add
lds
in
test
mov
cmp
popf
xchg
setg
or
cwtl
ds
jae
fisubl
inc
sti
lahf
mov
cli
pop
jg
insl
pop
in
and
mov
gs
cld
clc
and
push
aaa
mov
mov
inc
cmp
jg
decb
pop
lret
dec
jne
add
pop
jo
mov
ja
jg
jecxz
std
insl
test
pop
push
add
js
lret
test
mov
cmpsl
add
xchg
mov
xchg
xchg
cmpsb
ljmp
push
push
test
pop
fildl
xor
adc
add
push
dec
repnz
movsb
stos
decl
imul
popa
push
xlat
xchg
ja
add
jnp
fdivs
push
xlat
xor
outsl
out
jns
cwtl
ja
adc
push
inc
xchg
jbe
test
jl
daa
test
test
imul
pop
nop
dec
adc
sub
aad
add
sub
rcr
and
adc
ss
int3
fwait
sbb
cmpsl
lds
into
sub
or
dec
push
repz
mov
sub
push
jne
dec
mov
jle
sub
loopne
fldl
popa
xlat
mov
hlt
fildll
std
push
leave
stos
iret
mov
leave
nop
fistps
out
pop
jae
push
xor
ja
cwtl
mov
jg
shll
aaa
test
sub
push
notl
imul
mov
jg
or
repz
sub
jge
xchg
push
xor
sbb
popa
and
sbb
movsb
mov
int
pop
jmp
dec
test
xchg
fistl
mov
out
nop
add
sub
push
jl
push
and
repnz
aam
adc
shl
hlt
pop
pushf
xchg
out
pop
adc
aad
adc
xor
pop
outsb
pop
push
mov
mov
insl
add
or
inc
dec
adc
cmpsl
mov
xchg
or
sub
adc
pop
xor
inc
xchg
loopne
test
pop
dec
add
je
cwtl
inc
sbbb
jnp
push
scas
stos
fstpl
or
rol
mov
mov
mov
icebp
fmulp
inc
ss
lods
jl
cmpsl
mov
cmp
ja
add
mov
sbb
mov
mov
das
mov
inc
pop
mov
inc
movsl
fstps
push
icebp
cmp
je
sub
jecxz
mov
test
sbb
cmovbe
or
test
adc
shr
mov
aaa
mov
repnz
leave
dec
test
mov
sub
out
cltd
mov
mov
xchg
pop
pop
jns
push
cmp
mov
jae
inc
fs
out
sub
pop
loop
jmp
and
lret
fwait
cmp
add
jl
stos
inc
movsb
aaa
xchg
loopne
or
mov
sarl
loopne
ja
cld
sahf
jnp
mov
hlt
cmp
cmpsb
stos
inc
xor
adc
mov
orl
mov
dec
jmp
addr16
mov
sub
cmp
loopne
sub
adc
mov
dec
lods
loop
xchg
xchg
daa
je
int3
popa
lock
dec
stos
or
scas
dec
clc
sti
aas
fistpl
jmp
data16
add
dec
pop
cltd
pushf
mov
mov
repnz
daa
ret
mov
fsubp
dec
test
out
push
scas
pop
jle
add
jnp
nopl
lods
cmpsl
xchg
in
add
insl
clc
inc
push
sti
jge
fs
stos
sbb
ds
outsl
mov
jle
inc
jle
test
jg
xchg
es
pop
rolb
enter
mov
arpl
lds
dec
cmp
cmc
xor
lods
aas
test
or
ret
push
enter
pop
push
inc
std
sub
jo
adc
lds
test
divb
fstps
add
adc
pop
inc
cmpsb
ljmp
push
lods
jae
jne
cmp
lcall
dec
mov
insb
outsl
push
cmp
mov
jbe
xchg
jge
in
in
adc
jns
mov
mov
test
inc
cmpsl
popa
std
xchg
aaa
adc
add
call
xor
push
ljmp
sub
inc
inc
aaa
gs
sub
aam
xor
pop
add
cmpsl
adc
and
mov
mov
icebp
test
cmp
xor
push
js
mov
xorl
addl
shrl
mov
jo
cmp
pop
sbb
lods
xor
in
push
mov
imul
ret
mov
jns
sub
xchg
xchg
dec
std
push
rcl
lret
adc
mov
adc
mov
jno
sti
bound
lods
aad
and
and
cltd
out
adc
add
stos
push
std
enter
xchg
mov
test
dec
scas
lahf
mov
push
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
jmp
mov
and
setns
dec
cmp
lcall
add
sti
mov
xchg
std
ds
inc
adc
jmp
cmpsl
cmp
mov
outsl
pop
adc
fs
mov
pop
adc
cld
out
xchg
insb
inc
xchg
mov
dec
xchg
push
cs
lods
jnp
xor
rcr
fs
xchg
mov
jl
imul
aad
mov
js
cmp
lea
jge
shrl
inc
orl
push
xor
fnsave
aas
cmp
adc
inc
or
dec
sahf
call
xchg
fdivl
in
xor
pop
adc
sub
out
call
xchg
iret
add
in
xchg
inc
lcall
push
loope
jmp
gs
fstps
add
lock
leave
mov
cltd
sub
addr16
inc
cmp
dec
sbb
ljmp
lods
xchg
sar
mov
icebp
out
outsl
inc
js
in
cmp
or
xchg
adc
int3
push
sbb
or
cmp
out
or
push
and
shll
pusha
mov
pop
add
movsl
adc
int3
jo
jg
mov
outsb
jmpw
ja
jge
iret
sahf
dec
sbb
addl
add
das
cmpsl
xorb
into
xor
jmp
push
pop
mov
adc
sub
jecxz
jecxz
sti
inc
jo
pushf
andb
mov
push
push
xchg
xchg
fbstp
pop
cli
arpl
daa
xchg
arpl
les
andl
or
cli
sarb
out
sbb
xor
adc
cmc
jae
mov
add
cltd
cmp
adc
xchg
int
dec
cmp
js
dec
xchg
pop
repnz
sub
lock
jmp
jmp
daa
cmp
js
jmp
das
lods
mov
adc
add
xorb
filds
pop
mov
dec
adcl
sub
loopne
gs
ljmp
test
or
cmpsb
mov
mov
inc
out
xchg
imul
lods
xor
cmpsb
test
int
sub
fisubs
pop
push
sub
les
daa
and
lret
ficomps
and
adc
mov
sub
int
es
mov
into
cmp
mov
cltd
pop
mov
jmp
or
xchg
sbb
movsb
xchg
jae
int
clc
xchg
mov
dec
loope
cmc
jbe
mov
addr16
mov
leave
jp
or
mov
mov
mov
dec
out
xor
cmp
lcall
arpl
dec
test
inc
sub
enter
sbb
mov
jp
in
ljmp
push
cmp
sub
pop
fidivrs
popa
ds
lahf
xorb
push
mov
push
cmc
pop
push
or
xor
adc
mov
inc
arpl
sahf
imul
fisubrs
jp
fcoms
pop
mov
mov
mov
negl
imul
push
adc
sbb
dec
push
xchg
cmp
jb
pushf
js
movsb
and
incl
sub
jl
sub
sbb
imul
shlb
push
push
lcall
sub
inc
insb
xchg
xchg
int3
jp
fldenv
cld
or
cmp
or
mov
lock
pop
xchg
mov
fisubrs
sbb
pop
lods
inc
out
add
and
pop
xor
push
in
lahf
fst
add
dec
repz
add
scas
mov
cmc
jno
sets
xchg
adc
sbb
cmp
jmp
fwait
dec
bound
jb
cmp
ljmp
lret
push
pop
mov
cwtl
pop
fcoml
and
ss
xchg
cld
cmpsl
xchg
add
pop
cli
arpl
cmc
adc
gs
xchg
fmul
mov
cmc
jae
mov
addr16
ljmp
movsb
jl
into
addb
sub
pop
test
decl
movsb
popf
mov
imul
cmp
pop
cmp
inc
pusha
push
cmp
lea
dec
leave
int
xchg
mov
lock
jb,pt
xor
add
mov
jmp
enter
and
pop
sub
adc
inc
loop
cmp
cmpsl
mov
sub
dec
cmp
clc
xor
test
inc
dec
xlat
repz
notb
pop
into
push
jae
inc
and
shll
dec
repnz
dec
pop
mov
lahf
inc
cli
mov
add
fmulp
arpl
add
fmull
int3
sahf
das
inc
push
cli
popf
fimuls
push
es
dec
sahf
icebp
call
mov
cmpb
fwait
dec
popa
js
insl
pop
push
in
xchg
xchg
stos
pop
je
xchg
dec
or
push
repnz
ss
das
nop
arpl
cmpsl
pop
lret
mov
cmp
pop
hlt
lods
push
cmp
test
jecxz
xchg
adc
push
aaa
imul
in
dec
out
mov
movsl
fisttpl
sub
cmc
rclb
je
cmp
and
pop
leave
sar
repz
sbb
xchg
sahf
repnz
jae
nop
enter
rclb
xor
push
and
and
cli
lods
or
pop
ret
add
jmp
jg
inc
push
xchg
jb
pop
outsb
cmp
and
sub
jle
xor
fwait
das
repz
mov
mov
adc
xchg
mov
fimull
mov
inc
addr16
mov
add
xchg
repnz
mov
or
jmp
inc
sti
adc
movsl
jb
or
mov
scas
cmpsb
push
or
add
mov
or
or
sbb
inc
leave
or
aaa
in
sub
jl
mov
push
sbb
push
ret
fnstcw
xorb
and
cld
mov
outsl
inc
lcall
test
js
fildl
xor
fisubrs
fmul
and
jp
out
lahf
inc
pop
inc
lahf
scas
into
push
sub
inc
pop
sbb
aad
jle
mov
mov
mov
cmpsl
jg
aam
ret
xchg
gs
scas
js
xchg
sbb
lret
pop
dec
aas
cmp
push
mov
aam
and
bound
daa
lock
push
xor
mov
mov
ret
push
cmpsb
daa
cld
rolb
jmp
es
and
ret
push
aad
in
pushf
iret
add
xchg
or
sbb
mov
dec
sub
xor
movsl
fdivp
add
outsb
xor
cltd
and
into
pop
testl
xor
lea
jecxz
mov
cmpsb
lahf
or
jno
ja
fninit
out
pop
adc
mov
xor
jae
mov
insb
bound
push
and
cmpsb
jp
lahf
fldenv
push
rolb
in
movsl
xchg
stc
pop
cli
xchg
ss
sub
push
movsb
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
jmp
ret
fwait
mov
and
and
into
xchg
orl
cmovb
mov
jns
mov
mov
adc
adc
or
daa
fisubl
jmp
sarb
es
jg
jo
add
inc
fdivs
cmp
and
xchg
inc
in
int3
popa
ja
pop
dec
mov
mov
dec
incl
sub
xor
xchg
cmp
inc
mov
clc
cmpsb
xor
jno
nop
mov
pop
mov
pop
test
or
mov
out
and
add
pop
mov
fisubrs
imul
faddp
mov
adc
or
sub
xchg
js
cmp
rcrb
cmp
ror
inc
push
pop
push
das
cwtl
sahf
les
insb
shl
cli
frstor
fcmovu
mov
mov
outsl
lret
jmp
out
fnstsw
mov
xchg
cwtl
jge
aaa
mov
sahf
inc
sbb
add
mov
jne
out
or
adc
sbb
test
mov
lea
sbb
and
jo
push
lret
mov
aad
or
jp
pop
loop
cmp
dec
fwait
cmp
lods
movsb
push
jns
test
inc
mov
pop
cmpsb
and
sarl
cmp
loop
xor
xlat
movsb
stos
lret
movsb
sub
nop
bswap
and
fstps
xchg
rorl
repz
adc
jnp
mov
cmpsl
push
fldcw
in
fstps
inc
jg
fisubl
ss
cmp
in
test
mov
pusha
test
std
in
sub
rolb
dec
out
push
inc
pop
push
sub
ror
mov
daa
and
mov
xlat
nop
in
or
mov
lds
lds
adc
dec
dec
outsb
movups
adc
jmp
fcmovnb
aaa
fistpl
movsb
stos
xor
outsl
pop
xor
popa
adc
inc
in
dec
dec
popf
xchg
in
jle
sbb
int
lods
and
pop
mov
dec
jbe
sbb
ret
out
push
or
push
in
jl
nop
jo
add
rcll
aam
mov
pushf
inc
arpl
and
push
test
inc
out
jl
scas
addr16
aad
dec
call
aaa
adc
sub
popf
mov
xchg
lret
dec
pop
mov
pop
mov
sbb
aad
push
and
sbb
add
out
loopne
mov
or
xor
sub
adc
cmp
int
inc
ss
pop
stc
adc
cmp
fisttpll
adc
mov
out
mov
mov
insl
cmpsb
icebp
pop
jp
fwait
int
mov
pop
jo
dec
fcomip
hlt
pop
test
in
das
imul
lds
mov
jnp
xor
dec
mov
or
lods
fstpt
shll
dec
mov
xor
out
push
push
mov
out
pusha
mull
push
icebp
mov
sbb
xor
out
lret
jge
mov
scas
add
call
ss
sub
out
mov
insl
outsb
popf
push
xchg
adc
outsl
jnp
mov
mov
bound
loope
sbb
mov
mov
dec
or
xorl
testl
pop
gs
in
xor
fstpl
and
iret
mov
into
das
adc
daa
mov
inc
pop
xchg
adc
mov
bound
in
fiaddl
shl
sahf
jg
mov
dec
mov
and
insb
mov
pushf
scas
das
repz
ljmp
call
inc
mov
call
push
dec
or
das
mov
sbb
or
movsb
xlat
outsl
lods
mov
insb
test
or
je
xor
lret
adc
scas
inc
add
adc
loop
fnstcw
cmp
xor
in
sbb
out
xchg
xchg
sbb
popa
inc
arpl
imul
mov
adc
fimull
mov
jl
sbb
aad
sar
or
push
adc
fmul
fdivs
dec
dec
testl
loope
faddl
test
and
iret
mov
js
and
push
cmp
mov
out
push
and
flds
popf
cmp
divb
cmp
sahf
or
imul
ja
sub
les
mov
jle
push
sbb
mov
pop
lods
cmp
pop
gs
addr16
push
sbb
les
mov
movsl
test
incl
xorb
in
nop
imul
repnz
add
sbb
fdivl
cmp
fldenv
xacquire
test
ds
daa
insl
mov
sub
imul
push
push
loope
inc
test
bound
int3
jl
bound
mov
mov
ja
fisubl
jb
das
add
adc
out
int3
fsubs
or
into
icebp
fimuls
push
aam
sbb
xor
jb
cmp
adc
repnz
xchg
fucomip
enter
mov
loope
inc
roll
out
vmovupd
pop
xlat
lea
ds
pop
int
jmp
dec
push
mov
sbb
inc
xlat
xchg
dec
pop
mov
negb
rcrl
push
cmpsl
ss
dec
sub
xchg
mov
inc
outsb
push
jno
insl
sarl
mov
leave
push
inc
xorb
inc
jl
pop
push
out
popf
mov
sub
xchg
xchg
or
jp
dec
imul
mov
loop
xor
sub
loop
pop
mov
lahf
xchg
add
fidivrl
fimuls
dec
icebp
scas
jecxz
sbb
out
cli
orb
outsb
inc
rcrb
addr16
mov
bndstx
mov
ret
xchg
fdivs
loop
xchg
jno
ficoms
jne,pn
inc
pushf
sub
mov
sbb
dec
mov
js
jnp
rolb
push
mov
dec
imul
sbb
into
int
mov
icebp
dec
insl
cltd
insb
or
and
jae
mov
mov
pop
stc
push
test
js
jmp
addl
scas
out
scas
scas
inc
into
lods
pop
sub
pop
rcrl
xor
out
adc
fstpt
add
sub
cmpsb
mov
push
loop
jno
das
cld
into
jl
mov
cmp
pop
push
add
aas
sti
xor
addr16
push
popa
sub
xchg
lock
vphadduwq
es
js
mov
push
or
pop
popa
mov
jl
repnz
or
ljmp
dec
pop
cmp
pop
aaa
jecxz
stos
popf
js
in
mov
ss
clc
mov
xchg
adc
inc
lea
daa
fnstcw
xchg
xchg
jg
sub
movsb
call
add
pop
js
insb
push
jl
sbb
je
pop
out
sahf
mov
mov
mov
jmp
aam
inc
test
addr16
add
jp
ja
adc
mov
icebp
lods
mov
push
fldcw
lea
pop
push
icebp
scas
scas
lret
add
xor
in
sbbl
pop
mov
call
test
data16
enter
mov
and
lcall
pop
xchg
pop
fisttpll
sub
test
and
addb
push
xor
add
mov
push
rsm
stos
adc
sbb
das
jo
sbb
popa
shl
lods
xor
incb
xor
std
mov
test
rcr
lods
push
and
jle
lock
mov
inc
fldl
imul
cs
mov
sar
sahf
loop
loope
xchg
shll
imul
and
test
leave
mov
xchg
scas
pop
jnp
hlt
push
cmp
sbb
push
movsb
out
fcomi
xchg
jg
mov
decl
xor
add
stc
add
jecxz
stos
sbb
iret
hlt
adc
inc
fisubl
in
jecxz
and
jbe
jo
sbb
cmp
mov
inc
push
xor
fs
rcll
imul
mov
inc
mov
adc
orl
mov
clc
or
push
clc
pop
dec
sbb
pop
loop
fldl2t
jl
add
lcall
inc
cmp
mov
stos
and
cmpsb
adc
stos
fnsave
movl
xchg
imul
push
mov
pop
xchg
xor
mov
xor
lcall
icebp
inc
sub
cmc
adc
sti
js
loopne
scas
cmp
push
enter
adc
inc
xor
out
push
fstpl
mov
cltd
lcall
mov
lock
ss
or
out
mov
mov
decl
inc
jo
mov
hlt
idivb
enter
xchg
jb
sub
test
dec
inc
fists
repnz
adc
mov
mov
push
fsubr
push
or
jo
pop
dec
mov
fisubl
loope
mov
adc
dec
hlt
dec
stos
adc
sub
xchg
shlb
aaa
and
or
xor
sbb
fwait
jae
jo
test
out
dec
enter
pop
aaa
mov
shlb
rcrb
loopne
push
push
mov
cmc
outsl
cmp
flds
test
mov
mov
sub
adc
inc
fs
pushf
jmp
idivl
pop
or
cli
cmpsb
pop
cmpsb
jne
push
mov
mov
popf
mov
iret
cmp
or
xor
add
in
xchg
adc
xchg
jno
mov
insl
xor
add
ret
add
sub
scas
lahf
ljmp
mov
mov
mov
add
push
adc
mov
add
jae
fstpl
inc
push
aad
or
movsb
xchg
mov
sbb
pop
int3
test
cmpsb
out
push
lock
lcall
lcall
or
jb
movsb
inc
inc
mov
decb
scas
cmpsl
jge
and
cmp
sets
fcomps
lods
xchg
dec
mov
sub
push
aam
inc
xchg
sub
test
cmp
mov
daa
fistl
adc
lcall
fs
rorb
mov
out
jae,pn
jp
adc
xchg
cmp
in
sbb
add
xor
imul
mov
std
out
mov
push
jno
inc
insb
and
mov
sahf
jl
pop
xchg
cmp
insb
shll
sub
xor
mov
popf
jno
adc
xor
scas
push
dec
push
aad
xchg
push
or
insl
mov
popa
add
and
add
repz
les
pop
push
or
cli
adc
push
imul
sbb
fsubs
jg
in
push
addr16
fisubrs
fmuls
lahf
mov
sub
clc
aam
ljmp
cmpsb
sbb
sbb
jle
sub
lahf
push
popf
mov
mov
mov
cmc
jnp
sbb
loop
sahf
and
jo
jns
lret
stos
das
mov
or
dec
pop
clc
out
in
sub
call
sbb
inc
mov
inc
cmpsl
dec
in
jmp
mov
mov
inc
adc
xor
stc
sbb
or
sub
in
cmp
loop
dec
icebp
jo
pop
mov
add
scas
in
movsb
icebp
adc
jl
pusha
lock
mov
cmc
lds
sbb
loopne
jne
jecxz
stos
xchg
arpl
mov
pop
fidivs
das
adcb
rorb
ja
mov
mov
leave
cmp
das
ljmp
aad
les
mov
and
ficomps
mov
sub
scas
mov
adcb
sbb
mov
dec
test
icebp
rorl
sete
dec
xchg
lods
or
push
hlt
leave
pop
add
adc
jne
idivl
fmuls
inc
movsb
ja
outsl
sbb
lcall
push
aam
jne
adc
cltd
nop
dec
test
adc
mov
mov
testl
ljmp
xlat
jge
insl
or
sub
pop
xor
mov
repz
and
lds
cmp
ljmp
xchg
pop
xchg
std
ret
sub
and
jo
int3
fsts
sub
cli
xchg
inc
adc
mov
jbe
pusha
movswl
cmpsb
jle
mov
add
sbb
add
sahf
xchg
push
rcrl
jne
pop
xchg
or
out
fbstp
jbe
arpl
sbbl
cmp
fsub
ljmp
dec
mov
xor
lea
pop
sbb
jnp
scas
mov
int3
jmp
cltd
lods
fdivl
pop
jno
fmull
stc
lods
adc
jnp
dec
cs
mov
in
scas
ljmp
xor
movsb
mov
add
jo
sbb
je
je
inc
ljmp
lods
leave
movsl
lcall
hlt
data16
mov
arpl
sbb
imul
lcall
std
test
jle
cltd
inc
xchg
dec
sqrtps
adc
add
mov
push
xchg
ficoml
mov
bound
xor
cmp
daa
cli
cmp
mov
sbb
inc
adc
mov
outsl
jecxz
cli
adc
jg
cmp
jge
test
lcall
cmp
jo
inc
cmp
xor
cmp
cs
pop
cmc
lock
add
mov
inc
cmpsl
jae
xor
jecxz
shll
mov
clc
outsl
mov
fmulp
xchg
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
jmp
adc
cmp
ret
aam
mov
ja
jl
mov
nop
add
cmp
pop
cmc
mov
jno
ret
sbb
loop
loopne
inc
mov
into
jge
xor
push
cwtl
stos
test
mov
xor
pusha
xchg
pop
mov
or
mov
push
lods
dec
in
xchg
movsl
dec
push
addr16
pop
pop
dec
mov
int
outsb
test
jmp
lock
mov
mov
aaa
je
mov
bound
pop
lcall
out
and
inc
add
pusha
stos
fildl
ror
pusha
daa
pop
stos
les
pop
inc
pop
cmp
inc
out
xchg
nop
test
sarl
sbb
test
sub
mov
add
loopne
into
jp
and
cmpsl
dec
ja
xchg
f2xm1
mov
inc
outsb
insl
fcompl
aad
ror
inc
mov
loope
popf
test
cmp
mov
or
ss
fs
orb
jl
out
or
mov
dec
mov
push
mov
xor
sub
jmp
pop
push
shlb
jbe
inc
cld
jne
xchg
pusha
sbb
stc
cmp
mov
fbstp
mov
xchg
dec
mov
jns
adc
iret
mov
inc
cmc
imul
shlb
mov
cmc
lahf
ljmp
call
in
into
mov
test
lods
add
inc
shll
adc
xchg
pop
pop
imul
test
fdiv
jns
cld
xchg
xor
sahf
test
out
dec
in
lods
mov
sbb
and
push
sbb
mov
xchg
jbe
lods
push
jne
punpckhbw
out
cmp
xchg
ljmp
xchg
push
ret
mov
fistpl
jmp
push
sbb
mov
cmp
es
dec
outsl
movsb
and
leave
dec
jbe
inc
nop
push
int
adc
push
loope
popa
mov
pop
lahf
aas
int3
leave
dec
mov
mov
sti
mov
push
faddl
mov
xor
scas
cltd
sub
rclb
xor
push
loopne
lret
push
cmp
jns
xchg
lock
lret
sub
push
xchg
sub
add
mov
mov
call
insb
stos
adc
push
notl
dec
fs
sbb
enter
fdiv
mov
sub
fcomps
negb
ret
adc
push
pusha
shlb
out
mov
push
leave
dec
shlb
cmp
aad
pop
dec
adc
mov
xchg
add
in
pushf
push
cmc
sbb
cmp
lahf
sbb
sub
dec
adc
dec
mov
stc
cmc
xor
inc
push
or
es
cmp
fidivl
dec
cmp
jmp
loop
call
xor
or
dec
mov
rolb
inc
arpl
mov
ja
push
mov
jmp
mov
jnp
push
cmovbe
jns
adc
imul
cmp
sub
adc
dec
movsb
and
mov
stos
test
sub
jp
js
jecxz
xchg
fadds
mov
ret
push
lock
mov
test
cmp
dec
xchg
xor
hlt
and
and
push
in
push
jns
hlt
test
je
icebp
jb
sti
xchg
adc
pop
sti
inc
xchg
and
push
dec
adc
jg
popf
les
icebp
pop
cmc
push
out
lcall
xchg
in
out
loop
fidivrl
cmpsb
les
lahf
mov
dec
fdivr
mov
xor
mov
stos
dec
shlb
shlb
adc
sbb
sub
adc
sub
sbb
addr16
cmp
pop
ds
ja
bound
mov
add
and
mov
push
hlt
xor
ljmp
jecxz
sbb
call
or
cltd
dec
scas
ret
push
lods
cmp
jnp
mov
lods
push
lock
push
out
negb
rclb
bound
imul
xchg
fprem1
cld
jae
add
das
roll
push
out
mov
jo
push
pusha
mov
roll
adc
push
ret
pushf
pop
jno
outsb
xchg
cmc
je
stos
ljmp
cmp
pop
mov
iret
sub
mov
mov
push
cwtl
in
sarb
lcall
jb
int
rcrl
sbb
iret
pop
in
pop
jecxz
mov
scas
jmp
and
add
lods
dec
or
and
scas
xor
call
repz
insb
mov
xor
mov
cwtl
loop
jp
ja
mov
adc
sbb
inc
in
out
cld
xor
inc
enter
mov
sbb
dec
je
shlb
jecxz
pop
xchg
stos
lret
ss
dec
les
mov
sub
xor
mov
sbb
les
adc
jb
pop
push
lods
fistl
push
add
mov
mov
jae
popf
sarb
jae
clc
addr16
sbb
add
jp
fisubl
dec
rcr
sub
push
mov
imul
outsb
addb
cs
fs
dec
std
in
call
push
or
adc
adc
adc
inc
aam
sahf
inc
jmp
in
faddl
subb
call
jb
cmp
fsts
call
mov
mov
arpl
scas
dec
mov
pushf
dec
push
mov
mov
mov
icebp
inc
jne
fidivrs
out
ret
xchg
push
push
add
jbe
pushf
and
repz
ret
pop
out
std
fidivrl
clc
into
aad
daa
sub
push
cmp
out
and
push
pop
xchg
ja
push
sbb
mov
cmp
jg
xchg
sbb
inc
fisubrs
and
mov
dec
dec
dec
sub
mov
sub
xchg
ret
shld
sbb
loopne
jg
fistps
xorb
ret
inc
cld
loope
jmp
pop
push
xchg
inc
cli
xlat
out
repnz
cmp
mov
ret
pop
xchg
mov
addl
insl
or
ja
fildll
and
mov
xor
imul
add
inc
in
aad
push
mov
xchg
push
imul
jg
push
sub
and
push
push
and
out
mov
jecxz
push
push
cld
dec
mov
add
dec
fistps
or
sub
test
lahf
cmp
out
rcrl
inc
sub
cld
or
test
sbb
push
shrb
mov
xlat
dec
cwtl
mov
enter
inc
fdivrs
mov
push
adc
mov
jns
rcr
mov
aad
int3
cmp
fs
xorb
or
jle
sub
jb
jns
jp
das
mov
mov
popf
aad
ror
mov
adc
xor
je
notl
fists
dec
lods
cwtl
push
fcoml
adc
cli
cmpsl
outsl
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
jmp
sbb
and
dec
dec
xchg
mov
xchg
stos
mov
push
add
add
test
push
pop
mov
add
lock
ret
dec
mov
dec
scas
pop
mov
mov
xor
mov
jbe
fwait
push
lcall
lcall
push
js
mov
xor
ret
stc
sub
jo
je
adc
lea
inc
cmp
xchg
aad
dec
pop
pushf
sbb
jno
data16
xor
outsb
std
aad
mov
xchg
jb
repnz
mov
movb
and
jle
orps
lods
pop
xchg
mov
mov
mov
test
sbb
adcl
test
adc
pop
push
pop
roll
lret
adc
or
mov
jg
das
movsb
pop
andl
jns
jo
xlat
or
mul
fs
push
and
xchg
test
inc
pop
nop
pop
pop
cmpsl
nop
inc
rep
arpl
adc
fs
add
aam
sbb
insl
sub
xchg
sbb
aas
nop
and
add
adc
movsb
xchg
jg
cltd
pop
cmp
jge
mov
aam
loopne
fwait
dec
repnz
andb
and
dec
stc
fdivs
xchg
repnz
mov
pop
jno
lods
pop
cmp
or
mov
fstpl
or
test
popa
pop
cmp
hlt
mov
aaa
cwtl
inc
shrb
cmp
out
int3
inc
jnp
inc
mov
xchg
rorb
in
pushf
imul
popf
sbb
shll
shlb
cmp
cmp
fs
push
into
mov
fwait
adc
popf
and
xchg
call
cld
and
and
std
not
shlb
sbb
js
mov
push
inc
cmpsb
jno
int
sub
sub
jg
insb
daa
xchg
clc
fs
or
testb
dec
dec
mov
aas
mov
xor
inc
cmp
fwait
cmp
jae
add
js
imul
and
inc
fistpl
xchg
iret
dec
or
cs
pop
xor
and
xor
jnp
cmp
cld
pop
roll
popf
mov
rorb
adc
test
ret
inc
jg
cmc
mov
mov
ja
xchg
or
popf
pop
into
test
movaps
aas
adc
cmc
xchg
jmp
sbb
xchg
add
pop
lods
push
sub
mov
xchg
pop
pop
clc
pop
push
ret
jb
mov
jne
les
mov
fmuls
mov
mov
mov
xchg
mov
push
inc
jg
sub
sbb
stc
cmp
ds
mov
js
sub
out
int3
arpl
aaa
subb
cmp
push
and
add
add
imul
xchg
js
lcall
sbb
dec
lods
push
sub
fadd
in
repz
sbb
repnz
push
ret
or
pop
sub
mov
test
cmp
adc
scas
mov
mov
call
ljmp
jmp
int
xchg
stc
dec
cld
push
and
ljmpw
jne
in
cmpl
jge
adcb
shl
mov
pop
inc
push
cmp
ja
sbb
mov
mov
mov
fistpl
fwait
xor
pop
or
lret
mov
mov
ljmp
pop
sbb
xchg
mov
es
nop
les
test
pop
jnp
dec
push
mov
outsl
loop
mov
xchg
sub
adc
loope
int
out
dec
sub
jb
add
pushf
jl
or
lahf
lock
cmp
mov
sti
inc
mov
jnp
xor
pop
add
jnp
rcr
iret
popf
loope
jae
stos
shl
idivl
push
cmpsb
push
pop
testb
jp
inc
jge
rcrl
jnp
and
cmc
addr16
iret
pop
dec
mov
and
dec
clc
cwtl
or
xchg
xchg
aam
ret
cmc
mov
mov
scas
cmp
jb
sub
xlat
dec
inc
shlb
fisttpl
or
mov
jb
xchg
cli
mov
or
scas
fucomp
sub
aad
test
int
bound
pop
cmp
in
pop
rcll
mov
clc
leave
push
jbe
bound
inc
je
adcl
mov
mov
dec
and
cmpsl
adc
popa
into
sub
cltd
and
fcoms
sbb
or
stos
sbb
das
xlat
cmp
stos
mov
mov
lods
fcompl
sub
test
daa
push
dec
clc
aam
inc
in
movsb
out
cmp
xchg
dec
mov
sahf
push
arpl
sub
dec
jmp
mov
jmp
stos
or
das
or
cmpsb
out
repnz
setl
mov
sub
fidivrl
addb
pop
adc
orb
icebp
and
int
jle
mov
call
sarb
stos
push
aaa
push
mov
lea
dec
add
mov
cmp
nop
lods
xor
faddl
cmp
nop
sbb
cmp
cltd
adc
xor
in
cltd
popa
ret
sub
mov
outsb
mov
add
ss
negl
in
dec
fwait
mov
pop
scas
shrd
xchg
out
inc
inc
dec
pop
mov
cld
dec
push
rclb
push
jns
push
jg
in
pop
xchg
movsl
lcall
mov
push
cmp
scas
push
cmp
push
jo
popa
andl
lock
pop
cmp
xor
adc
lock
xor
icebp
sbb
jle
jecxz
js
rcl
orl
add
cmp
xchg
mov
push
insl
and
mov
mov
jbe
leave
out
and
xor
pop
fistps
cmp
lock
daa
jmp
shlb
dec
mov
data16
movsb
insb
outsb
and
pop
ljmp
sub
xchg
cltd
xchg
inc
dec
dec
cmp
inc
push
les
push
jb
addr16
leave
aad
push
daa
out
lods
xchg
inc
inc
jbe
add
repnz
jl
push
ja
pop
adc
in
js
mov
ret
jecxz
push
pop
pushf
bound
sub
jecxz
adc
std
mov
and
lret
insb
pop
cmc
xor
lds
rol
rorb
data16
xchg
xor
lock
movsl
decb
jecxz
insb
icebp
aaa
dec
popf
mov
stos
jo
jmp
cmpsl
mov
xchg
mov
lahf
dec
fs
push
push
add
cs
pop
jle
adc
aas
jb
jge
imul
arpl
mov
push
test
icebp
dec
adc
xor
mov
dec
mov
addr16
jge
inc
lret
loop
xor
mov
cmpb
insb
jbe
cwtl
xchg
xor
mull
add
add
shlb
rol
push
xor
mov
mov
mov
jmp
sti
test
sbbl
adc
in
aas
ja
pop
or
test
mov
pushf
out
mov
sbb
sub
sub
mov
mov
daa
out
fs
cmp
rcrb
xor
xchg
out
outsl
aam
stos
push
xor
xchg
or
and
sub
das
pop
and
rcr
or
inc
in
sbb
pop
pop
push
out
fs
std
imul
lds
sti
and
cwtl
loopne
rorb
iret
out
repnz
ret
xchg
pusha
push
xchg
sbb
jns
or
stos
addr16
stc
incb
mov
jno
outsl
and
js,pn
test
push
jno
jge
xchg
xchg
pop
mov
xor
pushf
dec
inc
shrl
jbe
adc
loope
ror
add
in
lea
arpl
mov
sub
test
add
aad
sbb
sub
imul
cmp
es
mov
aam
daa
mov
mov
cmp
add
popf
js
add
xchg
loop
fldenv
or
xchg
movsb
out
leave
mov
pop
testb
rorl
scas
fistpl
popf
xchg
sahf
add
lret
cwtl
cli
scas
lcall
mov
fbld
xlat
xor
jnp
mov
mov
ja
in
inc
pop
mov
xchg
xor
add
jecxz
or
xchg
sub
fstps
jbe
je
xor
decl
imul
xchg
stos
xor
pop
aas
stos
ds
cmp
shll
int
xor
mov
roll
xor
out
mov
popa
add
cmp
fcomip
fisubrs
outsb
cmp
test
fnstenv
cmp
stos
mov
or
sub
lahf
sbb
add
iret
mov
call
and
sub
dec
push
cwtl
int3
push
sub
xchg
fsubl
lea
mov
data16
pop
mov
pop
and
adc
cltd
or
push
call
mov
out
add
stc
adc
adc
shr
push
insl
cmpsl
xchg
sbb
jge
push
rcrl
xor
inc
cwtl
xor
push
jns
aas
adc
cmp
sbb
sbb
in
scas
scas
cld
stos
cmp
add
sub
push
pop
call
mov
adc
in
repnz
add
ss
dec
out
std
popf
lret
ret
test
push
lock
scas
flds
mov
pop
sbb
mov
push
test
aas
ret
sub
pop
pop
stc
sarl
and
cld
aam
loopne
arpl
mov
pop
sbb
xchg
sbb
pop
js
nop
cmp
cmp
jbe
cltd
int3
out
xlat
ja
nop
and
mov
and
loop
nop
jae
fistpl
push
adc
loopne
lea
out
inc
pop
daa
cmpsb
push
popa
add
lods
dec
xchg
jp
pop
out
enter
jle
mov
and
jns
int3
add
xchg
test
pop
dec
push
cli
add
cmp
xchg
jle
cmp
sbb
mov
fdiv
popa
mov
ret
or
out
std
xor
inc
ss
push
adc
inc
xorl
lcall
adc
xchg
shll
cmp
adc
popf
xlat
test
shlb
and
pushf
ds
repnz
ja
xor
lods
fwait
mov
fldl2e
enter
xchg
movsb
ljmp
lret
scas
xchg
jmp
mov
fsubrs
ja
int3
stos
mov
loop
xchg
pop
popl
pop
orb
scas
loopne
mov
xor
cmp
or
popa
xchg
loop
mov
mov
cli
lahf
sub
push
fmul
aaa
out
test
cli
push
sub
inc
mov
mov
jo
les
inc
lock
iret
das
ja
cld
in
cmp
mov
ret
idiv
std
pop
pop
stc
xor
aaa
pop
push
mov
jne
js
inc
mov
xor
xor
add
jmp
xor
lods
jnp
pop
xchg
std
mov
mov
mov
jns
and
add
sti
dec
sbb
push
loope
bound
cmp
nop
fsubrl
inc
dec
push
orl
jp
inc
xchg
pop
mov
xor
xor
jg
dec
or
sbb
or
adcl
test
fimuls
and
mov
pop
in
addl
pop
fwait
outsb
test
scas
push
nop
scas
mov
cltd
inc
xchg
fadds
push
mov
pop
or
inc
sbb
add
fldcw
rcll
mov
ds
arpl
xchg
dec
add
gs
mov
js
fs
stos
repz
repz
sahf
push
test
cwtl
jecxz
nop
test
pop
and
cmp
sahf
adc
hlt
loopne
pop
jns
js
mov
shl
out
mov
mov
xor
inc
clc
cmp
jae
jle
mov
js
adc
push
fimull
std
mov
rcll
aad
imul
sbb
xchg
shll
stc
sub
nop
inc
or
dec
out
loope
dec
test
idiv
enter
adc
inc
into
sub
mov
add
clc
adc
sbb
mov
sarl
outsb
pop
pop
hlt
ljmp
test
mov
fchs
inc
xchg
jns
cmp
or
pop
add
aas
aaa
sbb
cmp
cmpl
jmp
pusha
sub
xchg
imul
dec
shll
sub
push
fsts
das
sarl
pop
cli
ljmp
sub
push
shrb
pop
add
adc
fsts
ds
loope
cmp
notb
in
hlt
sbb
pop
and
xchg
mov
add
rol
mov
adc
push
cltd
fstpt
dec
xchg
pop
mov
movq
push
in
inc
lds
sub
loope
je
jbe
jle
sbb
sbb
imull
aas
and
xor
in
iret
jge
cmpsl
shrb
sbbl
std
cli
cs
sbb
pop
mov
pop
sub
pop
xchg
movsl
aam
ds
icebp
inc
mov
jb
cltd
or
xor
sbb
repz
inc
das
mov
fildll
mov
cmp
sti
test
dec
test
push
add
insb
cmp
pop
mov
xor
scas
push
imul
loop
xorl
lret
mov
inc
adc
push
inc
fsub
xor
xor
dec
mov
xchg
addr16
fs
pop
push
mov
sub
jb
inc
xchg
add
xchg
xchg
push
add
pop
bound
push
cmp
push
add
cmpsb
and
or
mov
shll
jnp
dec
incb
add
arpl
test
ljmp
inc
nop
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
jmp
nop
loope
pop
dec
gs
int
xlat
sub
insl
mov
ja
ja
jo
mov
sub
aas
pop
sub
push
add
push
adc
mov
inc
js
lock
dec
or
loop
add
cmp
fwait
test
adc
xchg
ds
and
into
inc
cwtl
push
jge
jbe
cwtl
push
cmp
pop
rep
xor
mov
push
adcl
mov
aaa
cmp
add
mov
rcll
push
add
mov
jo
std
rol
mov
xor
cld
and
mov
inc
sub
mov
and
cmpsb
pop
imul
ljmp
mov
sbb
test
jae
addb
loope
pusha
ret
clc
cmpb
int3
cli
lcall
or
lahf
jg
cmp
ss
outsl
or
pusha
nop
cmp
stos
xor
jno
jbe
push
xorb
lods
jnp
mov
sub
xchg
mov
xor
rcrl
mov
stos
out
stos
pop
mov
mov
ja
mov
push
add
xlat
insb
jo
fs
shll
into
enter
ljmp
and
lcall
fidivrs
stos
dec
ds
or
into
pop
and
jae
cmp
in
pop
aas
loopne
xchg
adc
loopne
popf
cmp
stos
jg
push
into
lcall
push
aas
add
mov
push
std
pop
add
pause
mov
cs
mov
testl
scas
xlat
xor
jno
pop
inc
or
gs
add
inc
push
mov
or
movsb
out
mov
adcl
jne
testl
insl
inc
in
xchg
jno
ret
into
or
add
pusha
pop
mov
std
adc
std
dec
and
or
xchg
lock
rorl
cmp
and
jmp
stos
mov
or
pusha
pop
mov
mov
sbbb
pop
pop
shll
outsl
sub
aaa
push
mov
imul
shll
ret
std
sti
imul
lods
cmp
clc
aaa
xor
aas
xor
and
lods
mov
pop
ss
ret
sbb
fst
sub
btc
sub
xor
fdivr
and
pop
repnz
and
or
push
xlat
lret
lds
adc
pop
outsl
and
mov
cmp
add
dec
fcomp
fists
iret
cmp
mov
or
sar
dec
inc
sbbb
sbb
cmpsl
movsl
ret
push
test
test
sub
nop
sub
rcrl
add
fimuls
lea
add
or
sbb
repz
and
xor
mov
jns
daa
or
lds
jge
lea
xorb
cmp
bound
aaa
jp
outsb
push
fdivl
pop
and
adc
mov
in
xchg
xchg
xorb
pop
xor
stos
jno
fucomi
jnp
in
call
loope
mov
stc
shl
hlt
dec
js
movsb
or
fsubr
push
xor
mov
push
in
fidivs
mov
cmp
cmc
or
xor
pop
je
mov
dec
push
call
ja
pop
sub
mov
in
outsb
shll
mov
and
cmpsb
sub
push
dec
mov
sub
insl
mov
jl
sub
ret
mov
mov
inc
lds
ja
mov
inc
and
mov
dec
or
add
sub
push
push
subb
lcall
jno
pop
xor
cmpsb
movsl
xor
sub
mov
jo
jecxz
pop
js
pop
xchg
sarl
inc
mov
add
mov
push
mov
mov
mov
xchg
or
cmp
push
xchg
ds
xor
jno
outsl
adc
pop
and
jl
clc
dec
push
ds
sub
adc
push
sub
xchg
mov
popa
push
enter
pop
adc
mov
xor
pop
je
or
aas
xchg
scas
test
or
pop
jecxz
push
adc
mov
dec
and
add
adcl
mov
xchg
movsl
inc
int
enter
or
arpl
jbe
repnz
dec
cltd
maskmovq
push
jae
out
popf
mov
or
sti
dec
add
daa
mov
out
mov
mov
inc
out
pop
aaa
xor
sahf
outsl
daa
jle
pusha
xchg
mov
or
or
cmc
aad
rcrb
orb
push
and
and
jl
dec
dec
pusha
insl
mov
jae
xchg
imul
pop
imul
inc
setge
inc
mov
pop
lods
mov
mov
jl
inc
pop
cmp
add
jno
jp
popf
std
adc
xchg
xlat
out
cmc
jmp
add
js
and
pop
into
aam
cli
xchg
dec
fbld
ljmp
adc
lret
sbb
je
shlb
bound
lcall
mov
roll
shll
jno
xchg
xchg
pop
pcmpeqw
fwait
push
addb
inc
js
fisttpl
mov
mov
adc
push
mov
pusha
xchg
std
mov
lahf
arpl
in
mov
push
or
dec
les
push
sbb
popa
pop
add
orb
add
ret
scas
jmp
pop
fmul
aaa
inc
cmp
sbb
inc
xor
cmpsb
stos
xchg
aam
dec
int
iret
int3
mov
sti
pushf
rorb
insb
jge
fdivl
cmp
mov
lret
jbe
adc
dec
and
repnz
adc
adc
and
sub
popf
cmp
cmp
cwtl
test
lods
mov
enter
add
lock
in
loopne
xor
dec
fucomp
es
mov
dec
jns
shl
jbe
sar
pop
sbb
pop
dec
mov
mov
cmp
and
das
lea
cmpsb
push
cmp
lea
sbb
mov
cmpsb
xchg
xchg
enter
ljmp
movsl
or
push
pop
in
inc
scas
fs
divl
or
xor
and
fcompl
or
clc
movl
mov
adcb
sbb
mov
sbb
ret
jmp
loopne
out
sbb
xor
shrb
pop
inc
xchg
enter
and
ror
outsl
xchg
into
fadds
imul
std
jp
adc
xchg
ds
movb
inc
repz
inc
sbb
jbe
xchg
or
cli
imul
orl
add
push
add
mov
arpl
pop
loop
aaa
mov
mov
test
scas
ljmp
cli
xchg
in
subb
gs
adc
arpl
in
test
mov
dec
adc
test
ljmp
add
inc
adc
ljmp
or
mov
mov
mov
jmp
dec
loope
lret
sbb
or
mov
adc
push
mov
lock
pop
movsl
in
popa
sub
xchg
sti
and
out
jge
fnstsw
pop
or
jne
and
leave
mov
popa
repnz
xor
mov
push
jge
fnstsw
lock
hlt
in
or
aad
pusha
push
jne
dec
fbld
std
lret
outsb
cmp
ja
fidivs
push
xchg
lds
popfw
fbstp
aas
jmp
dec
mov
insb
sbb
add
sub
sub
js
xchg
std
jp
shlb
jb
sti
les
xchg
pslld
call
pop
clc
fldl
xchg
aam
adc
add
daa
lret
xchg
sbb
jge
test
loope
and
fadd
fstps
imul
inc
in
push
jae
mov
aas
push
bound
dec
int
mov
add
cmp
popa
dec
in
dec
mov
decl
shrl
pop
mov
mov
dec
daa
inc
cmpsb
mov
shlb
xlat
push
enter
mov
xchg
xor
pop
adc
jmp
gs
pop
cmpsw
stc
jo
xor
movsb
inc
stos
fs
mov
xor
test
ljmp
rorl
cld
sub
push
dec
xor
fmul
addr16
nop
pop
cltd
pop
xchg
and
inc
popa
pusha
mov
daa
and
ja
dec
cwtl
mov
cmp
pusha
mov
pop
fistpl
mov
add
popa
add
jno
test
sbb
and
lret
jbe
sub
add
sub
test
jmp
pop
mov
lods
lods
push
sbb
cli
xchg
cs
mov
adc
ret
and
pop
adc
stc
xor
inc
xchg
or
fwait
insb
ret
test
test
mov
es
xchg
mov
and
dec
jle
add
cmp
and
or
push
mov
ljmp
mov
cmp
scas
andl
scas
shlb
inc
sbb
add
test
movl
xchg
scas
out
push
int
popl
jl
lret
pusha
out
push
in
orb
mov
dec
jne
pop
aaa
outsl
rcrl
sbb
cltd
inc
and
lgs
arpl
into
ss
mov
std
out
push
mov
push
add
push
push
push
cmp
inc
adc
push
movl
sbb
int3
mov
aas
mov
mov
or
cmp
dec
test
add
or
std
test
pandn
shlb
lret
pop
out
mov
insl
in
repnz
xchg
ss
fstps
nop
andl
sbb
out
cltd
cmp
cmp
lcall
stc
test
clc
pop
test
cld
mov
mov
or
int3
pop
lcall
test
sub
mov
in
mov
jo
fbstp
push
hlt
aaa
fcmovu
mov
xchg
dec
xchg
out
inc
test
icebp
cltd
cld
lret
test
fstpt
or
mov
imul
addr16
mov
and
xchg
popf
xor
addr16
clc
movsb
cwtl
or
dec
cmp
fldt
adc
rcll
mov
pop
jbe
fwait
mov
xchg
pusha
xor
or
cmp
mov
dec
jno
pop
bnd
call
data16
add
orb
popa
dec
imul
cltd
mov
pusha
add
sbbl
jbe
sub
xchg
call
dec
jecxz
in
ret
ret
jno
cmp
cmp
jb
fisubrl
repnz
jb
ret
and
insl
sbbl
add
or
adcl
jmp
or
pop
test
ja
sub
in
mov
mov
push
scas
mov
sbb
lret
and
cld
xchg
or
jg
fcmovnb
fwait
jl
or
lds
data16
mov
sbb
mov
sub
adc
xor
js
mov
push
sub
mov
adc
cmpsb
fwait
call
adc
cmp
popa
mov
shrb
jge
sbb
and
mull
mov
inc
jg
or
mov
stos
repz
loopne
push
inc
sbb
mov
sbb
push
sbb
ss
mov
fmuls
sub
xchg
repnz
pop
pop
or
ret
xchg
jne
push
sbb
cwtl
or
loop
rdtsc
lods
daa
sbb
adc
xchg
lret
ss
jne
popa
sub
add
push
cmpl
dec
loope
xchg
clc
cld
or
or
pop
stc
mov
das
jle
rcl
mov
or
cmpsl
mov
add
cli
push
out
ss
cmpsb
fistl
ja
stos
lahf
jns
out
mov
movsl
mov
or
xlat
adc
mov
rclb
mov
jg
pop
ljmp
cmp
andl
jp
dec
rcr
adc
mov
sub
dec
push
es
aaa
je
jne
mov
push
rorl
xchg
cli
push
inc
push
jg
xchg
or
xchg
movb
rol
inc
je
dec
mov
andl
call
mov
test
stc
lret
insl
sti
js
cwtl
inc
sub
xorb
add
aas
enter
sub
xchg
and
or
pop
in
mulb
pop
fcmovu
jnp
inc
pop
pop
outsl
jb
or
es
pop
jns
push
sub
xchg
push
jg
mov
jne
scas
jmp
in
fildl
push
insl
ret
mov
leave
dec
stos
inc
push
push
dec
xor
shrb
loope
inc
jge
fstpl
jecxz
xor
cmp
shll
adc
stos
mov
popa
push
sbb
into
aaa
mov
ljmp
push
in
call
sub
mov
or
push
xlat
insl
out
xchg
mov
in
in
xchg
js
lods
into
shll
pop
pop
andb
cltd
and
pop
xchg
push
adc
addl
or
xchg
sbbb
add
das
mov
scas
test
mov
xor
shll
cmp
pushl
paddsw
inc
adc
pop
xor
in
xlat
add
clc
daa
sbbb
popa
scas
push
clc
mov
mov
test
mov
aam
push
test
lret
push
addl
in
or
dec
sub
cmp
rorl
fidivrl
iret
dec
mov
in
mov
and
rclb
dec
jns
sub
push
fnstcw
ja
mov
dec
mov
cld
in
adc
add
cli
or
lret
xchg
mov
xchg
ds
enter
in
int
adcb
or
add
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
jmp
cltd
push
in
sub
jno
fsubrl
cwtl
js
adc
vmwrite
mov
cmp
rolb
syscall
ss
int3
push
daa
popa
outsl
add
js
lock
mov
mov
clc
dec
mov
ja
or
cmpsl
add
cmp
xor
push
push
xor
mov
jl
sub
xor
adc
ja
or
xlat
mov
sub
jnp
lods
and
add
out
rolb
push
outsb
cmpb
mov
shr
pop
divb
ljmp
fnstenv
dec
add
inc
inc
pop
cmpl
fnsave
jno
ss
mov
enter
jge
xor
mov
mov
mov
jle
dec
adc
scas
popa
push
leave
fdivrl
cwtl
mov
xor
loope
fiadds
xor
subl
aaa
dec
daa
and
cmp
mov
xchg
mov
xchg
cwtl
cmc
sbb
out
pop
sub
fsubs
into
lods
ss
lret
jb
xor
pusha
cmpsb
icebp
adc
fimuls
icebp
push
sub
orb
xor
lds
mov
cmp
cld
jp
std
lret
and
test
imul
mov
repnz
mov
out
movsb
xchg
jnp
sbb
jle
mov
mov
mov
call
insl
adc
inc
popa
leave
pop
sub
mov
inc
scas
push
outsb
sbb
cli
jl
daa
lds
outsb
jo
mov
in
mov
jle
lea
je
mov
adc
add
xor
sbb
aam
hlt
das
sub
jl
sahf
loopne
insl
mov
jle
add
xlat
mov
aam
ss
xchg
mov
stos
loope
neg
and
lock
push
mov
cltd
cmpb
mov
cmp
inc
pop
and
mov
or
into
and
add
pop
xor
ja
push
add
mov
fwait
mov
repz
les
lods
mov
jmp
dec
jae
ds
lret
rorb
fldl2t
xor
cmp
fwait
mov
int
pop
rolb
sub
jno
pusha
mov
repz
mov
shll
cmpsl
mov
movsl
mov
out
inc
es
pop
lea
xchg
cmc
enter
mov
push
jo
fnstcw
pop
ret
enter
jno
into
icebp
icebp
adc
cs
dec
jg
aam
push
icebp
sub
push
mov
inc
rcrl
popa
out
aam
out
mov
insl
bound
sbb
jp
and
cmp
roll
into
shll
mov
test
imul
sub
mov
lea
jp
addr16
pop
or
adc
jbe
push
ficoml
dec
and
mov
daa
bound
xor
cmp
mov
cmp
jg
pushf
xchg
adc
push
shlb
ret
ljmp
movsl
fucomip
and
mov
add
es
add
lret
lds
adc
mov
dec
insl
pop
gs
cld
adc
ja
adc
pusha
test
pop
scas
cmp
pop
xor
mov
shlb
das
imul
dec
xchg
js
push
shrb
inc
into
sbb
and
pop
aas
cmpsb
rcrl
cmp
repnz
pop
dec
inc
mov
scas
add
mov
xchg
push
jo
xchg
jmp
jns
jbe
sub
out
xor
jmp
push
adc
mov
das
cmp
aad
pop
test
fs
xchg
sbb
mov
das
mov
mov
pop
pop
cld
sub
mov
sub
test
dec
xlat
push
jnp
xor
sub
mov
clc
pop
int3
jne
ret
push
fs
fidivrs
or
sub
ljmp
dec
sub
sub
outsl
outsb
mov
pop
cmpsb
into
sbb
push
jns
testl
mov
out
pop
fs
fwait
xor
cmp
or
movsl
jno
pop
push
loope
out
jno
cli
fildl
rolb
and
adc
daa
and
cwtl
jns
in
sti
outsb
sub
xchg
xchg
adc
xor
mov
ss
mov
mov
dec
fadds
sub
and
push
cltd
mov
popa
aas
in
and
ret
movsl
cmp
lds
sti
sahf
ret
push
sbb
dec
xor
in
mov
mov
mov
arpl
ret
inc
jmp
cmp
imul
cmp
mov
outsb
xor
insb
jl
push
mov
xchg
xor
sub
jg
ficompl
divl
pop
lock
mov
js
push
pop
mov
in
cltd
fsts
mov
mov
xchg
push
repnz
or
mov
dec
sbb
mov
or
mov
push
scas
cmc
es
and
cmp
xorb
xor
cli
inc
and
scas
mov
pop
out
inc
mov
xchg
and
mov
fs
dec
pop
cmpsb
jle
out
nop
jl
roll
mov
xchg
fiadds
div
bound
xchg
sub
or
lds
dec
movsl
rcrl
outsb
cmc
imul
xor
out
inc
addb
lcall
lret
std
sbb
mov
inc
lcall
pop
jl
xchg
dec
out
mov
xchg
jo
sbb
pop
cmpsb
loope
jae
sub
nop
mov
int
in
test
mov
aaa
jnp
psrld
nop
adc
ja
cs
in
in
jbe
inc
aas
lcall
mov
jae
testb
pop
adc
rorb
test
adc
es
scas
out
adc
movsl
cmp
adc
movsl
xor
ficomps
add
jecxz
movb
scas
lea
fs
pop
sbb
mov
or
inc
lahf
jle
and
out
inc
mov
popf
movsb
pop
pop
mov
cmp
mov
mov
xchg
dec
in
or
sbb
mov
adc
shrb
cld
jge
mov
mov
sbb
mov
mov
mov
pop
add
adc
ss
pop
push
dec
and
dec
aam
push
jns
pop
mov
push
xchg
aaa
std
pop
andps
mov
mov
mov
mov
stos
sub
jmp
dec
jnp
add
pop
sub
into
push
cmpb
and
pop
sbb
sbbl
adc
xchg
scas
jnp
clc
cmp
xor
stc
mov
push
in
fildll
rorl
xchg
out
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
jmp
push
mov
adc
xchg
lret
pop
add
ja
jmp
shrb
das
pushf
je
fsts
imul
je
or
add
incb
xor
mov
mov
fs
dec
ret
mov
and
mov
rcr
sub
outsb
push
mov
jle
pop
aad
push
or
pusha
adc
add
dec
inc
sbb
mov
cmp
mov
rclb
ficoml
lods
in
addl
clc
inc
cli
jns
pop
adc
loope
les
jecxz
or
xchg
cmpsl
in
rcr
jo
ja
in
mov
jno
bound
repz
repnz
sbbl
inc
lret
sub
mov
mov
mov
mov
imul
and
cmp
loop
aas
xchg
sub
int3
sbb
dec
jg
push
mov
test
in
pop
push
mov
mov
jbe
fs
inc
ss
lcall
pop
movsl
cld
cmp
dec
fisttps
push
aas
roll
mov
xchg
fs
pop
shlb
leave
sub
or
dec
xor
aad
fisubs
push
cmp
ret
inc
movsl
xchg
es
mov
inc
testb
lock
push
jns
cs
imul
adc
imul
sbb
out
aaa
sbb
mov
jb
push
jno
mov
cld
push
cld
mov
loopne
sarl
push
inc
mov
punpckhbw
lret
add
outsb
shlb
inc
cmp
lcall
inc
out
cmp
fisttpl
mov
mov
les
mov
out
enter
mov
dec
ret
gs
sbb
int
xor
pop
fidivs
decb
adc
adc
mov
mov
fidivs
cltd
bound
and
xchg
and
hlt
cmp
xchg
dec
or
fisttpl
out
jae
dec
sub
push
inc
les
inc
ds
mov
mov
call
call
dec
and
lea
jge
scas
inc
inc
mov
mov
push
fadd
fidivrl
mov
lret
mov
in
les
int
or
adc
aad
lods
sbb
inc
ja
push
sub
fisttps
pop
add
push
adc
sarb
mov
jmp
pop
in
mov
int3
loop
lret
es
pop
pop
sbb
mov
pop
packsswb
into
jbe
hlt
push
mov
mov
mov
jp
cwtl
push
mov
das
or
sub
mov
fisttpl
jg
scas
mov
leave
pop
std
insl
notb
scas
loopne
inc
jg
outsb
mov
dec
dec
clc
hlt
popf
fimuls
xor
pop
roll
sbb
shlb
and
test
popa
pusha
aaa
push
mov
inc
lds
in
jl
fildll
sub
leave
add
idivb
decl
js
pop
sub
in
push
mov
xchg
dec
adc
bound
mov
or
pop
sub
mov
clc
outsb
inc
sbb
inc
shll
rcll
jne
cltd
paddusb
pop
or
pop
jo
frstor
cltd
adc
push
fs
mov
leave
xchg
outsl
insl
xlat
add
dec
add
jmp
aas
bound
repz
sbb
leave
mov
mov
test
shrb
adc
adcl
test
jle
sub
or
hlt
mov
repz
sbb
mov
cwtl
insb
jecxz
mov
outsl
mov
inc
fs
mov
jne
xchg
xchg
es
and
xor
push
pop
xor
test
sti
fmulp
pop
movsl
lea
jo
lods
xor
inc
sbb
stos
inc
rcrl
cmp
pop
mov
cs
fwait
movsl
adc
js
xor
loopne
xor
inc
mov
lods
fcmovne
mov
fcompl
xchg
fucomp
movsb
aam
stc
mov
jae
add
push
adc
in
xchg
fiaddl
push
out
pop
incb
add
call
lock
lcall
pop
in
dec
nop
mov
cmc
nop
test
lock
aam
adc
add
cmovo
jle
scas
push
loope
sub
test
cmpsl
ljmp
in
imul
out
mov
out
mov
push
add
or
xorb
inc
rclb
rcr
push
loop
adc
popf
xchg
rcrl
dec
in
fisubl
test
jmp
xchg
xor
cmpsl
pop
xor
adc
in
cli
mov
mov
inc
jno
sub
rclb
fisubrl
mov
sub
push
aad
jge
inc
imulb
jp
fisttpl
ss
xchg
adc
out
inc
mov
xor
push
pop
test
je
outsl
iret
test
xor
in
test
push
jg
xor
mov
ljmp
jecxz
outsb
sbb
pusha
jp
xor
or
cmpsl
sub
or
scas
ret
jg
xor
mov
xchg
cld
stc
and
mov
dec
inc
shrb
sti
and
out
int
dec
jmp
cmp
xor
xor
xchg
sarl
xchg
rclb
data16
or
lock
addl
movsl
mov
push
stos
es
mov
and
mov
aad
cwtl
aad
or
mov
mov
inc
add
cs
xchg
add
flds
inc
lahf
aam
xor
imul
pushf
lods
fcomps
fdivs
test
arpl
jmp
pop
and
xor
cmc
mov
stc
mov
es
enter
fwait
roll
lock
ljmp
jb
je
inc
ds
leave
movsl
das
out
jl
mov
lock
fldcw
push
add
push
dec
sahf
push
sti
jg
pop
lds
or
add
and
cmp
mov
inc
xchg
push
icebp
clc
movsl
fldl2t
pop
dec
repnz
aaa
cmp
fld
inc
inc
push
xchg
jmp
push
in
cmp
jb
outsb
jb
scas
js
mov
push
xchg
daa
xlat
movl
xchg
adc
adc
adc
mov
movsb
outsl
add
cmp
test
dec
xchg
test
cmp
inc
ficoml
mov
push
insl
lcall
cmpsb
ret
mov
movsb
fstps
adc
cmc
or
cltd
xchg
lcall
sbb
out
and
xor
jl
shll
aaa
mov
fcoml
mov
insl
jns
loopne
sub
dec
cwtl
dec
or
mov
je
outsl
lds
xchg
out
mov
cli
insb
push
pop
mov
push
out
out
leave
mov
jae
lcall
dec
imul
lahf
dec
mov
push
repnz
mov
ret
mov
sbb
mov
out
xlat
insb
jmp
dec
call
cs
mov
xor
jmp
cmp
adc
mov
test
xchg
repz
xchg
cld
pop
xchg
xor
push
xor
jle
inc
fstps
dec
pop
fsubrl
and
lret
jmp
sti
push
adc
jecxz
xor
addr16
fs
cmpsb
add
loopne
dec
xchg
mov
sub
test
mov
pusha
pop
xor
jmp
pop
arpl
sti
add
outsb
out
je
mov
mov
xchg
insl
std
lds
pop
mov
test
mov
js
shrb
fisttpl
sbb
xchg
sub
test
popa
push
lods
lods
ja
movsb
js
rcll
push
sti
adc
mov
cmp
in
movsl
add
ljmp
dec
lds
insb
pushf
fcmovne
out
jl
popf
push
pop
jle
movhps
repnz
jl
xor
cmp
mov
rol
inc
pop
xor
dec
mov
pop
inc
hlt
pop
adc
xor
xchg
pop
sbb
sbb
out
cmc
sbb
outsb
cli
inc
xchg
je
decb
xchg
into
out
lea
dec
push
dec
rorl
int3
ficoms
adc
orb
mov
outsb
sub
loopne
cmp
loop
idiv
and
jmp
shll
loopne
out
imul
shr
inc
mov
cltd
js
int3
test
sarb
ret
adcb
gs
fsubrl
fwait
dec
scas
ds
cli
or
push
divl
into
in
cs
enter
xchg
cld
mov
repz
insl
xchg
mov
jl
fs
lahf
sbb
jbe
push
xchg
rcrl
imul
sbb
fcomps
dec
cld
mov
insl
jne
lahf
push
in
and
rorl
sbb
cmp
int
sbb
cmc
sbb
dec
aad
enter
mov
lret
sbb
clc
sub
pop
jg
sbb
test
sub
jo
mov
stos
xchg
ja
aaa
gs
jp
lret
pop
fbld
ret
dec
mov
and
jp
mov
std
adc
inc
pop
ljmp
or
pop
test
insb
sbb
push
and
sbb
addr16
pop
mov
add
adc
cmp
rcl
iret
subb
sub
repz
xor
xchg
inc
mov
das
jnp
or
cmc
stos
mov
out
lds
mov
aam
jecxz
jne
pop
xor
clc
arpl
inc
adc
xor
jmp
in
xor
mov
dec
shll
sub
stos
cmp
dec
pusha
sbb
and
fimull
ja
push
cmp
jl
jbe
out
test
push
jne
sbb
xchg
xor
add
jae
pop
cmpsb
adc
adc
addr16
sbb
xor
lods
fisubl
jo
mov
dec
mov
in
mov
xchg
sbbb
xchg
mov
insb
xchg
int
push
sbb
xchg
xor
loopne
addl
pop
pop
mov
xor
in
sahf
es
push
cmp
in
pusha
je
xor
mov
aad
adc
inc
mov
loopne
fs
push
in
aad
inc
or
fbld
ficomps
jae
inc
lea
mov
out
sbb
jmp
dec
or
or
movsb
fbstp
mov
push
movsl
ret
int
or
dec
or
nop
sub
lret
sub
jmp
insb
cmpsl
jae
lock
sub
addr16
cmp
fidivl
jecxz
ja
adc
mov
popf
loope
jb
inc
daa
fidivrl
flds
dec
and
jnp
scas
xor
shlb
mov
data16
cwtl
push
xor
add
jae
mov
mov
lock
inc
stos
daa
mov
sub
mov
jnp
leave
pop
sub
fbstp
xchg
in
scas
xchg
fcomp
or
aas
add
movsl
ss
lahf
faddl
inc
mov
sub
stos
mov
cmp
mov
aas
jg
ljmp
ljmp
rcrl
mov
outsl
test
sub
shlb
or
jmp
cwtl
insl
das
repnz
movhps
push
cmp
imul
jecxz
sbb
and
movsb
push
arpl
cmp
pop
rclb
fiaddl
sbb
rep
mov
mov
and
jle
jg
sub
iret
fcomi
jle
pusha
dec
jp
adcl
ja
mov
and
mov
adc
cmpsb
fs
xor
inc
call
inc
leave
dec
mov
iret
clc
ret
xchg
mov
mov
hlt
push
cmp
inc
pop
xchg
mov
out
push
xchg
ret
mov
mov
inc
sahf
pop
pop
into
test
sub
outsb
addr16
jmp
repz
jnp
in
cmpl
adc
jmp
mov
mov
fisubrl
push
loope
fidivrs
dec
fstpt
int
fwait
or
mov
pop
std
lods
scas
add
mov
loope
jo
sti
lcall
pop
xor
dec
fnstsw
ljmp
mov
lods
rol
lret
dec
push
xor
dec
cli
mov
push
jbe
imul
test
push
sti
cli
cmp
adc
daa
inc
mov
aam
dec
sub
stos
sub
lahf
mov
cmpsl
or
sbb
loope
mov
jbe
in
adc
or
mov
data16
fidivs
adc
int3
lods
bound
cs
mov
xchg
mov
jns
xor
push
test
mov
test
sarl
dec
push
jbe
pop
adcl
xlat
push
pop
pop
cs
sbb
in
inc
pop
in
cmpsb
lods
int
cmp
addr16
cmp
notl
repz
sub
dec
mov
rclb
out
mov
inc
xchg
and
add
pop
xorb
mov
mov
push
dec
xlat
rcr
jmp
iret
out
mov
rcrl
jnp
mov
sub
fiadds
stc
xchg
xchg
xchg
sbb
push
mov
adc
stos
aad
sbb
cwtl
int
sbb
mov
mov
cmp
scas
fimull
or
jmp
xor
xor
test
frstor
jo
js
cmp
outsl
test
dec
out
jae
mov
rcr
inc
pop
push
repnz
push
sbb
xor
dec
jae
mov
xor
test
in
mov
sub
pop
xchg
iret
ja
pop
hlt
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
jmp
cmpsl
icebp
cmp
pop
dec
arpl
xor
adc
xchg
aad
push
pop
or
mov
cmp
sbb
lret
idiv
sbb
arpl
rcrb
jbe
adc
jb
and
lret
add
cltd
ret
adc
jge
lret
aas
jo
add
movsb
jmp
fsubrs
cwtl
push
int
lds
or
jmp
mov
jae
rclb
mov
cmp
xchg
mov
and
inc
fnsave
jge
push
dec
and
mov
xchg
cmp
or
mov
sub
hlt
loope,pn
fst
movsb
dec
in
je
jae
add
cli
pop
mov
dec
in
push
movl
mov
and
dec
test
xchg
cmp
push
jae
mov
into
loopne
aad
jnp
movsl
out
iret
adc
xlat
dec
int
push
pop
fdivs
mov
sub
fistl
xchg
mov
cmp
add
pmullw
popa
push
inc
push
mov
into
outsb
in
sub
repz
pop
or
lret
mov
or
pushf
pusha
xorb
jb
and
cmpsb
adc
scas
ja
stc
out
test
dec
aaa
mov
sbbl
mov
lahf
subb
faddl
cmp
mov
das
fwait
pop
pop
aas
dec
mov
sbb
xor
push
jecxz
sahf
inc
mov
inc
ljmp
outsb
jg
bound
js
jp
or
stos
cmp
push
std
in
bound
push
dec
je
push
cmpsb
sbb
xchg
dec
aam
inc
fcmovu
xchg
inc
mov
cmp
into
lcall
aas
out
inc
mov
jns
inc
dec
pop
push
sub
jb
stos
imul
push
in
or
arpl
je
rclb
fdivl
popa
jae
mov
inc
inc
mov
ljmp
xlat
and
ja
test
mov
mov
repnz
and
fdivs
out
movsl
rcrb
in
mov
jb
mov
adc
popl
mov
aas
jno
xchg
pop
mov
xchg
test
jbe
adcb
cmpl
test
adcl
lds
js
push
das
mov
dec
sti
adc
adc
push
lret
inc
dec
mov
fdivrs
rorl
sub
pop
mul
addr16
dec
push
mov
mov
notb
jno
and
push
and
std
outsb
imulb
dec
ljmp
std
adc
inc
dec
std
push
icebp
pop
cmp
adc
jmp
mov
out
xor
pop
std
or
fildl
dec
cmp
lods
dec
shlb
js
loopne
int3
es
and
pop
dec
test
pop
lret
insb
repz
fnstcw
cmp
dec
mov
xchg
add
mov
and
jns
into
inc
inc
fldenv
push
cltd
and
sbb
jne
pop
arpl
or
jp
and
sbb
leave
cmp
xchg
jge
mov
shlb
in
lcall
pop
mov
ja
pop
js
xchg
incb
add
xor
mov
lret
dec
rorl
jmp
fsubl
addr16
inc
cmp
mov
jne
mov
mov
adc
div
jb
test
add
push
sub
xor
imul
sbb
pushf
rcrl
sbb
xor
and
std
fdivl
adc
jbe
fldenv
xor
arpl
xchg
test
adc
jl
cwtl
or
sub
cmp
add
lret
cmpsl
loop
jae
inc
sarl
enter
cmp
or
je
in
js,pn
or
add
loope
cmp
inc
sub
frstor
mov
loopne
in
add
push
or
shlb
pop
jmp
cmpb
mov
adc
mov
fldcw
not
repnz
loopne
aad
test
cmp
movsl
push
push
mov
addr16
in
jl
dec
mov
jg
fucom
movsl
dec
push
outsb
fs
sub
xchg
lret
je
leave
lock
lret
in
pop
cmp
push
and
xchg
mov
pop
int
test
or
lea
xchg
mov
pop
das
es
inc
xorb
mov
imul
mov
pop
xlat
pop
sbb
adcb
push
add
repz
cli
pop
hlt
and
fldt
and
jb
push
shlb
bndldx
jae
cmp
negl
imul
sahf
mov
mov
mov
xor
sbbl
dec
fmul
popa
lock
add
stos
iret
pushf
pushw
int3
orb
adc
push
repnz
mov
push
dec
mov
cmpsb
add
mov
inc
test
int
add
pushf
aaa
and
push
cwtl
cltd
inc
call
fwait
mov
aaa
movsl
push
push
pop
push
bound
pop
gs
xor
mov
aad
add
inc
in
xor
xchg
xchg
ss
shll
mov
sbb
aad
sti
rorl
stc
xor
sar
mov
subb
push
and
xchg
push
shr
mov
mov
jle
cmp
jecxz
scas
test
inc
xor
xchg
addl
in
cmpsl
clc
xchg
aad
in
clc
pop
jg
inc
ret
sub
lahf
push
mov
push
pop
and
cmc
dec
incl
enter
call
push
jmp
push
ss
jbe
pop
jmp
mov
cmp
push
shlb
cld
mov
xor
mov
in
popa
mov
dec
pop
push
lret
mov
xchg
shll
xchg
mov
or
add
xor
xchg
jns
std
insb
xchg
mov
lock
ss
or
jne
je
and
sbb
fidivrl
mov
mov
sahf
lods
dec
into
mov
addb
lcall
cmp
clc
add
fildll
loope
lods
mov
in
mov
mov
mov
xchg
xor
mov
scas
and
xor
dec
insl
push
push
in
stos
add
cmovs
xchg
add
and
sarl
addb
fidivl
in
insb
mov
jmp
cmp
incb
inc
in
mov
cltd
lea
fbld
nopl
adc
mov
rorb
xchg
rorl
jp
rcrl
adc
enter
adc
jge
lods
ss
pop
sbb
ret
mov
fcompl
pop
push
cmp
dec
andl
push
xchg
and
out
fnsave
std
cmp
xchg
mov
xor
and
mov
pop
xor
pop
insb
std
adc
mov
test
xchg
outsb
cmpsl
jp
push
fistpl
fbstp
jg
sbb
out
fldcw
pop
imul
push
mov
aaa
rolb
mov
mov
jmp
ljmp
sub
loopne
in
test
adc
xchg
ljmp
sub
push
dec
test
pop
pop
mov
jmp
add
gs
ss
int3
dec
inc
fdivrs
adc
adc
jno
fisttpll
inc
mov
xchg
lods
fcoms
ja
xchg
sahf
scas
inc
sbbl
test
repnz
sbb
jb
pop
mov
dec
push
icebp
cmp
in
xor
mov
mov
rolb
pop
mov
cmpsl
loopne
sbb
lret
adc
ret
sub
sub
lcall
mov
repnz
hlt
mov
push
lahf
cmp
xchg
or
mov
ja
es
inc
movsb
cmpsb
inc
arpl
sbb
stos
mov
add
xchg
das
pushf
addr16
cmpsb
mov
test
enter
insb
sbb
sbb
jbe
test
push
out
out
cmp
xor
loop
outsb
mov
test
sub
jl
add
xor
cs
call
pop
jns
pop
call
int3
clc
cmc
mov
ljmp
scas
push
pop
daa
mov
jns
xor
mov
mov
out
rorl
cmp
insl
dec
jbe
adc
pop
adc
dec
fstl
cmp
sti
pop
cmp
jge
jp
mov
lahf
mov
pop
sarb
mov
sbb
sub
es
adc
inc
ja
cmp
gs
repz
test
mov
sub
shlb
sub
push
lds
imul
xchg
fiadds
mov
xor
add
outsb
nop
or
rolb
aaa
aas
sbb
into
ja
std
lcall
pop
pop
sbb
xchg
mov
test
push
adc
leave
in
push
popf
mov
lods
mov
xchg
mov
jp
or
xchg
pop
cmp
popa
pop
lea
popa
push
lret
pop
cwtl
sub
push
xor
scas
push
jnp
sbb
xchg
inc
jo
sbb
mov
adc
sbb
add
enter
imul
jae
sbb
cmpsb
jmp
xor
idivb
adc
popa
pusha
pop
data16
mov
sub
mov
mov
stc
lret
xor
in
xchg
dec
cmp
mov
sbb
add
add
loop
xor
sbb
mov
pop
ret
or
popf
push
push
mov
pop
jo
mov
mov
repnz
cmp
pop
lock
cs
das
outsl
or
jmp
and
sub
and
jmp
mov
inc
arpl
ret
and
pop
fucomp
outsb
outsl
shl
ret
jne
jge
and
and
push
cld
or
mov
mov
pop
mov
cmp
pmulhuw
mov
movsb
sbb
jmp
adc
movsl
xchg
mov
jge
mov
mov
sub
push
mov
arpl
dec
imulb
mov
outsb
cmp
jae,pt
pop
jmp
pop
or
sahf
adc
cltd
inc
and
movsb
mov
dec
pop
mov
push
cmp
out
pop
in
jne
aaa
into
pop
sahf
mov
jle
pop
mov
addr16
lcall
jnp
loope
xchg
popa
jo
fs
sahf
pop
lds
nop
or
add
arpl
out
icebp
fisttps
lods
jne
int3
insl
mov
inc
mov
or
jne
dec
mov
sub
out
push
in
in
mov
mov
pop
arpl
mov
mov
mov
jmp
cmp
sub
cmp
push
cli
mov
loopne
out
sub
jno
cmp
fisubs
lds
dec
lds
cmpsl
je
push
es
cmp
movsl
inc
mov
inc
in
aas
inc
mov
sti
fmull
lahf
push
lods
jmp
ds
js
int
push
mov
jmp
or
pop
mov
bound
push
lods
add
ds
int
shld
cmp
test
cli
sub
loopne
in
mov
jle
arpl
cwtl
addl
push
ss
cmp
push
fcoms
inc
pusha
pop
mov
sub
or
sbb
pop
or
lcall
sbb
add
in
inc
pop
inc
sbb
sub
cmp
mov
cmp
mov
pop
aaa
mov
and
cmp
pop
insb
sbb
or
push
mov
call
mov
fsub
test
xchg
cmp
jle
mov
xchg
fistps
ds
xor
rorl
fisttps
sti
popl
sbb
mov
add
out
sbb
xchg
inc
dec
xchg
jge
dec
adc
jb
cmp
inc
jp
jmp
mov
imul
dec
stos
mov
es
sbb
shr
xchg
ja
dec
xchg
icebp
enter
jge
lcall
sbb
push
mov
push
shll
inc
pop
xchg
sahf
mov
lcall
adcl
lea
mov
xchg
mov
sbb
aas
mov
cmp
lret
mov
das
mov
loop
or
stos
cmp
dec
and
mov
push
les
sub
xor
push
push
mov
adc
test
xor
adc
shlb
cltd
mov
loope
ds
aas
fstpl
lcall
cmp
jno
shll
xchg
gs
lahf
in
repnz
stos
cmp
xor
insl
adc
roll
fwait
or
or
push
movsl
sbb
sub
push
ret
push
pop
inc
cmp
sbb
in
aam
sbb
lods
cltd
xchg
push
stos
hlt
je
sahf
cli
and
sbb
xor
aam
pop
mov
movsb
out
fwait
lods
in
movsb
sub
ljmp
xchg
adc
testb
mov
push
test
repz
xlat
into
pop
and
xor
push
adcb
cld
loopne
xchg
sahf
ds
mov
or
mov
xchg
or
mov
out
jno
cmc
mov
or
loop
orl
sbbl
in
push
xor
pusha
push
push
mov
mov
jo
imul
jne
xor
shll
jl
in
pop
cmpsl
insb
sarb
adc
jp
fisttpl
dec
mov
jne
mov
sbb
stos
daa
out
pop
dec
adc
pop
mov
ljmp
push
sub
sbb
cltd
nop
testb
push
mov
mov
pop
mov
dec
cmpsb
ja
inc
xor
push
mov
hlt
lds
shll
xchg
fcmovu
test
mov
in
xchg
gs
sbb
add
pop
sub
addr16
jle
rclb
add
daa
ret
push
push
or
jge
adcb
or
call
mov
jmp
push
rcrb
and
inc
outsb
xchg
sahf
pop
js
mov
setb
adc
push
add
or
lret
xchg
sub
pushl
ljmp
nop
pusha
mov
xchg
pusha
and
mov
cli
ds
mov
test
dec
test
js
or
lock
sbb
lock
stos
icebp
fwait
les
push
xor
or
jg
ja
stos
mov
test
lahf
xor
cmp
or
cli
or
jns
push
dec
ftst
xlat
insb
icebp
sub
push
or
cmp
fwait
cld
and
sub
mov
cli
jge
sbb
int3
iret
andl
sarl
mov
inc
push
mov
insb
test
mov
bound
mov
inc
testb
sub
jns
sbb
add
lock
fmul
cmpsb
ss
xchg
jns
inc
sbb
sti
clc
js
mov
push
push
sub
pop
mov
dec
outsb
push
sub
aad
movsb
mov
enter
gs
cmp
dec
pusha
xchg
jne
lea
cmp
ds
xor
cmpsb
xor
inc
pushf
stc
push
fcmovne
js
stos
add
bound
sub
mov
cmp
dec
sbb
xor
pop
ds
mov
pop
movsb
xchg
mov
pop
and
dec
xchg
sub
popa
rorl
pusha
jmp
clc
push
inc
jge
dec
icebp
lock
mov
rcr
sahf
mov
pop
cmp
inc
sbbl
add
call
enter
add
push
and
cmp
jo
ja
movsl
jmp
clc
ljmp
fidivs
mov
jg
ss
rorl
push
mov
mov
inc
xor
mov
xchg
jmp
scas
sbb
sub
mov
mov
xchg
addr16
mov
jae
xchg
rol
loope
imul
push
dec
cmpsb
dec
pop
and
lods
pushf
jp
lret
mov
adc
stos
cmp
scas
in
fsubr
cmp
sub
hlt
loop
fdivrp
popf
fcomps
dec
add
cmc
inc
mov
in
xchg
cmpsl
add
mov
cld
test
cmp
inc
add
xor
sub
add
stos
xchg
rcl
jae
lahf
inc
repz
je
out
aas
mov
filds
iret
cltd
mov
pushf
xchg
mov
or
inc
mov
inc
imul
xor
insl
ror
xor
and
mov
xor
shrd
addl
pop
sbb
bound
jnp
stos
out
jmp
sub
popf
add
sub
lods
pop
jp
sbb
das
push
xchg
ja
add
push
insb
outsb
mov
in
orb
xor
lods
hlt
mov
aam
sub
test
adc
dec
in
push
test
pusha
flds
nop
aaa
cli
xor
mov
aam
loopne
out
mov
dec
jmp
cmp
stc
int
ffreep
icebp
int3
inc
adcb
int3
pusha
xchg
pop
xor
xchg
shlb
xor
dec
push
insb
leave
cmp
fldcw
lret
mov
or
sub
outsb
ret
movsb
add
push
push
stos
push
push
cmp
and
xchg
imul
inc
adc
mov
out
and
fsubrp
xor
xor
jmp
aaa
mov
mov
jp
inc
push
jg
loopne
add
sbb
hlt
mov
adc
arpl
sub
sbb
xchg
mov
aam
cwtl
lret
adc
jp
leave
jns
out
subl
add
mov
xor
ficoml
loope
adc
xchg
and
test
popf
aad
mov
ret
rcll
loopne
dec
es
xchg
push
dec
mov
in
push
cmc
adc
enter
and
jbe
loopne
inc
push
inc
pop
dec
test
sbbl
aam
dec
loop
inc
push
push
push
jmp
inc
push
rorb
lods
pop
or
sti
sub
pop
sbb
les
mov
call
push
outsl
cltd
divl
call
cmp
imul
adc
test
inc
mov
das
sub
xor
stc
movsb
xchg
pop
notb
test
sbb
addps
jae
loope
dec
add
icebp
pop
hlt
sarb
pop
jbe
add
ss
repz
pop
mov
or
fisttps
insl
jg
arpl
fcomps
imul
sbb
mov
lahf
pop
add
sub
ljmp
inc
fldt
cmp
xor
clc
out
mov
inc
push
lcall
cmp
iret
fmull
nop
dec
mull
dec
add
loop
dec
xchg
mov
jb
cmp
outsl
xchg
add
enter
scas
sub
jbe
sbb
cmpsb
ljmp
in
xchg
add
dec
and
pop
and
cltd
shlb
imul
xchg
and
lret
outsb
mov
aam
fs
out
add
lcall
popf
and
sub
xor
jb
sbb
pop
xchg
push
add
lds
jne
ret
aam
xorl
call
jns
jmp
lods
aas
scas
cli
addb
and
mov
fidivs
xchg
mov
int3
ss
clc
js
lock
pop
push
cld
xorl
data16
and
mov
out
mov
dec
test
aad
and
push
or
inc
xchg
sub
je
jecxz
mov
mov
shll
repnz
jp
push
inc
shlb
mov
imul
push
divl
sub
imul
insl
mov
arpl
push
add
or
add
movsl
jle
outsl
gs
pop
jg
add
fstpt
fadd
cmp
vmulpd
inc
vcvttss2si
mov
pop
cs
ret
jp
stc
lds
and
dec
xchg
dec
jmp
mov
icebp
and
clc
es
fdivr
dec
xchg
popl
fidivs
das
outsb
inc
jne
lcall
sbb
xor
loope
mov
mov
jnp
cmpl
cmp
xchg
add
xor
jecxz
js
out
loop
lods
aad
jnp
push
iret
lret
xor
pop
xchg
xor
lock
ret
popa
jnp
sti
aad
fstps
jbe
cmp
cmpsl
or
out
or
dec
dec
mov
ret
loop
fidivrl
pop
xor
lods
popa
sti
pusha
repnz
push
push
xor
cmp
mov
push
movsl
mov
xlat
subl
xor
cmpsl
sahf
and
jle
xor
adc
adc
out
insl
in
fcoms
inc
cmp
ja
mov
mov
pop
fisttps
mov
jmp
loope
pop
inc
fs
in
push
or
into
sub
or
dec
add
lods
enter
add
ljmp
imul
scas
sbb
xor
jle
and
xchg
movsb
xchg
inc
add
inc
in
iret
cmp
mov
out
add
pusha
jecxz
push
dec
out
xchg
pop
ds
pusha
xchg
mov
ss
lock
adcl
push
pop
sahf
inc
mov
cmp
mul
pop
push
mov
iret
fcmove
decl
shrb
ds
push
or
cmpsb
sub
cltd
mov
ds
xor
mov
daa
cwtl
movsb
fs
cmpb
sbb
push
pop
es
pop
sbb
xor
inc
mov
jg
mov
and
sti
xacquire
cmp
out
mov
lds
addr16
xchg
outsl
or
cmpsb
push
lea
repz
mov
mov
adc
daa
insb
mov
lahf
aam
jne
mov
pusha
stos
cmp
addr16
popa
xchg
leave
sbb
sbb
mov
pop
ret
dec
jl
mov
stos
or
sbb
push
cld
xor
jne
rcl
out
jne
orl
xchg
aas
adc
jnp
dec
sbb
sub
xchg
jo
sub
lea
cltd
jno
lods
arpl
fwait
loope,pn
insb
sbb
inc
dec
sub
push
jb
mov
xchg
cmp
arpl
lock
aaa
mov
sbb
fs
dec
cmpsl
out
jae
xor
fsubl
mov
mov
mov
outsl
mov
fdivrl
out
rorl
movsl
cld
out
cmp
aaa
xchg
fcmovb
inc
cmp
lcall
rclb
mov
mov
ret
cmp
xchg
jmp
jmp
jl
cld
inc
cmp
iret
dec
sahf
pushf
inc
and
adc
pop
popl
or
repz
inc
insb
dec
jmp
push
icebp
or
call
daa
fbstp
aam
push
test
xor
gs
or
jg
clc
icebp
insl
cltd
in
js
pop
xchg
xlat
inc
adc
jp
jmp
xchg
or
and
mov
push
out
in
sbb
xchg
mov
jmp
shlb
outsl
std
push
sub
pop
imul
dec
mov
add
pop
fs
dec
mov
sub
mov
in
jo
negb
ret
add
icebp
lret
adc
mov
rcll
pop
inc
shl
xor
adc
lock
cmp
inc
xchg
gs
inc
andl
test
stc
in
inc
cmc
hlt
xchg
je
pop
aaa
sub
movsl
adc
mov
movsl
orb
cmp
mov
outsb
ljmp
das
in
and
movsl
xor
cmp
cmp
imul
leave
mov
cmpl
cmpsb
xchg
outsb
mov
sbb
jae
bound
mov
cmp
movsb
xor
sbb
add
jge
mov
cli
jne
push
add
mov
stos
pop
incb
js
inc
std
jl
ja
pop
adc
mov
adc
das
push
sub
int3
jmp
mov
leave
sub
add
push
in
jle
repz
add
out
jb
cmpb
mov
das
jb
jmp
bnd
xor
xorb
std
test
mov
jo
cmp
and
imul
xor
in
inc
lcall
and
pushf
fcoml
sbb
push
adc
shlb
fcmovb
je
addr16
mov
gs
push
sahf
jo
fcmovnu
sbb
dec
mov
ss
setno
and
inc
sbb
add
out
pop
arpl
and
mov
mov
popa
loop
ja
ja
or
dec
fsubrl
cmp
dec
mov
add
sbb
mov
adc
xor
pop
push
sbb
loope
dec
test
jle
and
mov
inc
cmp
jnp
gs
pop
sti
pop
mov
scas
mov
cmp
call
das
push
fsub
dec
nop
mov
push
sbb
fistpl
je
add
bound
in
outsl
mov
xor
cmc
add
push
pop
jge
and
push
pop
mov
hlt
push
sub
and
imulb
rorb
mov
jecxz
xchg
aam
sbb
xor
jne
pop
jl
repz
cmpsb
or
adc
and
aas
les
movsb
addl
or
orl
loopne
add
pop
in
movsl
movsl
pop
insb
push
ss
outsb
xor
xchg
cmp
aaa
push
adc
mov
int3
fs
sti
mov
cmp
pop
ret
inc
push
xor
int
mov
pop
jae
add
cld
sbb
psrlq
sahf
daa
insl
xlat
shl
pop
aam
inc
mov
ret
movsl
into
leave
xor
adc
hlt
cltd
push
mov
cmp
fcomip
push
sub
mov
ret
stos
xchg
cltd
mov
scas
nop
and
jb
push
or
imul
dec
stos
scas
or
pusha
cltd
sub
push
in
sbb
lcall
and
or
jae
mov
inc
adcb
movsl
bnd
imul
test
rdpmc
das
and
pop
int
and
mov
stc
add
loopne
iret
mov
jge
insl
mov
and
and
mov
or
pop
es
inc
cmp
movsl
fisubs
outsb
clc
fcos
mov
or
sbb
mov
jno
test
xchg
fidivrl
ds
mov
sub
data16
and
rcrb
nop
add
imul
jb
xor
pop
mov
pop
movl
mov
jns
mov
pop
ljmp
and
int3
sarb
in
mov
dec
mov
jno
out
arpl
mov
or
inc
int
cs
repz
les
rolb
out
add
jmp
cmp
inc
xor
call
xor
ret
push
lods
pop
das
sub
inc
sarb
push
dec
mov
fwait
lahf
push
mov
lock
cmp
aam
dec
jecxz
fs
and
movsb
test
sbb
mov
adc
push
aad
cmpsl
mov
lret
in
mov
scas
mov
add
jo
inc
mov
sub
call
in
arpl
psraw
rorb
fldt
push
sbb
cmp
movsl
mov
test
notb
daa
add
dec
cwtl
aam
pop
sub
std
in
bound
mov
pop
outsl
es
in
sbb
loope
or
pop
fidivrs
jl
adc
sub
out
inc
push
addr16
in
lea
and
notl
sub
push
mov
push
ficompl
fcomi
scas
fisttps
lret
in
inc
add
push
test
xor
push
xor
mov
mov
mov
push
push
jmp
push
xchg
stos
les
ret
sub
icebp
push
lcall
mov
or
rcll
pushf
lea
repnz
rorl
andb
xchg
pxor
fprem
mov
in
and
std
in
dec
insl
mov
mov
outsl
push
pop
jb
pop
int
ljmp
inc
mov
das
imul
das
and
sbb
mov
mov
cmp
arpl
xor
int3
xchg
ret
cmpsl
je
push
inc
pop
fildl
pop
movsb
out
test
pop
inc
std
das
or
icebp
push
test
cli
xor
ss
push
pop
mov
fldl
push
or
push
repnz
aam
pop
mov
dec
out
aaa
fists
xchg
and
mov
push
xchg
xor
dec
into
sbb
hlt
inc
cltd
pop
jge
inc
mov
aaa
incb
mov
lods
and
popa
xchg
fldt
mov
sub
in
xchg
mov
pusha
pushf
in
jbe
jg
data16
stos
adc
mov
and
nop
adc
loopne
imul
leave
daa
test
ja
mov
jle
stos
push
movsl
dec
loop
inc
lret
movsl
and
and
loopne
mov
aas
dec
xchg
out
das
push
dec
jge
mov
dec
dec
adc
push
cmp
sbb
out
faddp
aaa
xchg
leave
mov
dec
sti
sub
or
mov
movsb
sbb
cmp
inc
in
xchg
push
aas
lods
fcmovnb
fadd
fsubs
out
mov
lock
push
data16
ljmp
fs
int
int
jmp
out
or
fiaddl
shll
loop
mov
bound
dec
add
adc
or
or
repz
es
cmp
inc
adc
pop
sbb
pop
pop
ret
fstp
test
jns
sbb
adc
out
mov
push
push
dec
ss
jecxz
loope
sti
rcll
cmp
lds
shll
adc
adc
sbb
xadd
add
rcr
inc
pop
xor
cmpsl
cltd
mov
and
sbb
rcrl
test
sub
pop
or
scas
adc
push
jae
xor
inc
mov
xchg
pop
sub
dec
cs
xor
sub
xchg
lahf
and
mov
cld
fs
or
cs
inc
into
orl
int3
push
or
outsl
mov
lea
ret
outsl
js
repnz
in
xor
adc
outsl
sbb
push
adc
push
shl
lea
aam
imul
mov
loopne
jmp
inc
js
js
test
mov
dec
js
sahf
xchg
lret
mov
sbb
test
jo
mov
sbb
fwait
sbb
gs
and
rcrb
rorl
mov
sub
sbb
into
cmpb
cmp
scas
mov
fldcw
ds
outsb
or
sbb
ja
mov
ss
lods
lahf
add
add
call
sbb
hlt
inc
inc
mov
cmp
mov
das
test
mov
mov
mov
lock
fdivp
add
cld
mov
out
xchg
inc
lock
pop
adc
lock
sub
jno
imul
sub
inc
sub
jmp
cmp
out
pop
lods
cltd
ds
push
cld
jo
out
push
pushf
push
mov
inc
dec
shll
ss
mov
pop
pushf
packuswb
add
insb
xor
and
sarb
out
daa
js
lcall
aam
ds
movsl
popf
aad
in
push
adc
int3
mov
popa
dec
in
xor
xor
in
sub
adc
cli
dec
mov
adc
inc
daa
fmulp
jns
shlb
mov
aad
mov
daa
lds
and
jg
insb
icebp
push
xor
and
cmp
dec
aaa
mov
shrb
dec
pop
dec
adcl
out
xor
mov
push
and
bound
call
int3
adc
loope
nop
push
aas
idivb
fisttpll
fsubs
into
rolb
into
or
mov
aam
fsubrs
decl
loope
sub
sbb
stc
fyl2xp1
push
ss
adc
popf
inc
pop
repnz
sahf
adc
adc
push
jmp
mov
push
xlat
push
inc
sbb
in
add
repz
mov
jne
jp
sbb
sub
flds
scas
pop
fsubrs
in
gs
fcomps
xlat
ficompl
add
cmp
xchg
out
stos
adc
jb
stos
pop
ret
sub
mov
lea
ret
xchg
add
ljmp
mov
sbb
pop
mov
call
lds
imul
inc
js
add
and
jmp
xchg
js
aaa
ljmp
fistps
dec
sub
popa
jp
repz
daa
jp
push
pop
out
mov
cmp
aad
lcall
test
pop
test
dec
sbb
mov
call
cli
lods
mov
out
add
mov
in
std
cs
mov
pop
xchg
testl
aad
pop
outsl
lea
rcl
sub
cmovae
pop
mov
cmp
push
sbb
mov
aam
sbb
out
push
aad
and
stc
jmp
hlt
inc
push
imul
jno
rcl
push
outsl
adc
stos
leave
imul
mov
push
jecxz
imul
imul
mov
dec
mov
test
insl
push
mov
push
xor
fcom
sbb
jb
push
cwtl
cld
ja
popa
xor
or
sbb
insl
out
ds
sub
das
fst
out
jp
xchg
outsl
push
test
add
add
jle
sub
sub
je
arpl
lds
jb
shlb
lea
lret
xor
and
sub
outsl
sarb
push
push
in
sbb
xor
pmaxub
jle
mov
sub
jb
out
or
les
mov
jno
inc
jmp
jae
push
dec
and
mov
inc
stc
lahf
push
sbb
xchg
mov
pop
mov
mov
or
data16
lds
jne
cmp
adc
xchg
jmp
add
and
insb
add
aas
sbb
addr16
hlt
pop
fsubrs
cltd
es
ss
dec
mov
xor
js
loop
lods
mov
push
or
sbb
int3
lods
gs
pop
add
cmp
mov
leave
test
jae
cld
and
into
aaa
dec
sbb
arpl
movsl
push
insl
and
shrb
sbb
fsubl
sbb
insl
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
jmp
pop
jge
lds
hlt
inc
pop
sarb
ja
and
sbb
xchg
or
mov
pop
push
pop
popa
adc
jecxz
push
in
push
push
lea
push
pop
pushf
lret
stos
pop
jno
push
push
fmull
xchg
xchg
js
test
sub
sbb
xchg
lcall
xor
aam
push
xchg
ljmp
xchg
dec
jae
pop
mov
xorl
in
icebp
or
or
pop
fstps
in
icebp
sub
mov
movsb
int3
push
arpl
stc
sub
mov
sbb
adc
sub
mov
lahf
mov
add
cs
js
jno
xorb
inc
sar
fldl2t
push
dec
add
clc
mov
sub
jecxz
lods
push
adcl
pushf
ret
in
daa
pop
inc
inc
les
frstor
cmp
std
shl
mov
dec
sub
sbb
add
push
and
sar
inc
pop
shlb
in
add
pop
sti
add
pop
out
sbb
push
mov
mov
and
je
pushf
pushf
stos
dec
negb
cld
aam
lods
addl
dec
push
jne
stc
imul
lods
popa
int3
sbb
ss
pop
cmp
push
ret
daa
imul
pop
dec
mov
and
shll
or
jae
push
xchg
fdivl
popa
test
rol
repnz
xor
addb
mov
jae
aas
dec
lds
sub
out
pushf
aad
cltd
out
push
faddl
mov
aas
loopne
push
inc
das
les
jno
jnp
pop
jns
jb
inc
out
mov
pop
mov
jmp
dec
fsubrs
loopne
mov
add
xor
add
inc
sti
mov
push
in
push
testl
push
into
repnz
mov
and
shlb
cs
std
insl
xor
cmp
mov
pop
mov
push
pop
xchg
hlt
lock
cltd
add
push
xor
cs
sbb
jmp
mov
adc
add
cli
or
out
mov
pop
js
addl
jnp
and
stc
popa
mov
pop
cwtl
jno
pushf
popf
mov
pop
loope
inc
lods
leave
outsb
push
jae
cs
fisubs
lea
mov
lods
bound
dec
dec
std
and
ljmp
sbb
test
aaa
adc
loop
jg
test
sti
inc
testb
push
pop
ret
ja
inc
mov
out
out
jo
lods
outsl
aad
out
popa
in
and
mov
lods
sub
repz
nop
or
les
jg
lret
cmpsl
mov
loope
sub
and
repz
xchg
push
mov
inc
push
push
sbb
jae
inc
jmp
push
xchg
scas
and
and
scas
dec
lds
sbb
popa
in
ret
dec
lds
add
mov
stos
sub
cmp
data16
pop
add
mov
pusha
or
pop
mov
mov
sbb
inc
shl
mov
and
dec
nop
adc
and
inc
xlat
loope
shr
nop
test
lcall
in
mov
enter
jmp
testl
popa
push
add
xchg
xchg
stos
jp
decb
fcmove
dec
push
cmc
stc
sub
pop
je
or
push
das
mov
xchg
out
lods
imul
xchg
jmp
ljmp
imul
in
fscale
hlt
mov
xchg
or
arpl
dec
movsb
ja
imul
inc
hlt
sbb
jecxz
mov
scas
jb
nop
fistps
popf
push
and
sahf
repnz
add
jae
xchg
fistl
jle
push
xchg
and
pop
xchg
punpcklbw
pop
push
cs
sub
repnz
sbb
xchg
out
lcall
icebp
js
test
cmp
cli
cmpb
mov
jnp
push
cmp
jno
push
mov
ret
cld
sub
xchg
dec
ss
jne
rorb
xor
loopne
jns
ret
mov
pop
cmpsl
movsl
mov
in
sbb
out
mov
push
lret
xchg
mov
sub
mov
xchg
cmp
pushf
sti
es
jae
cli
rclb
nopl
xchg
scas
scas
es
scas
cmc
sbb
pop
mov
mov
pop
cltd
xor
movsl
dec
xchg
out
movsb
loopne
fwait
int3
aaa
mov
lret
vucomisd
add
out
cs
lret
out
mov
mov
das
jns
xor
push
inc
in
xlat
cmc
sbb
pop
ficompl
inc
xor
pop
jmp
cmp
shr
popa
dec
out
xor
mov
pop
mov
push
out
inc
or
pop
mov
cmp
xor
cmc
fstpt
mov
addr16
xor
or
mov
mov
pop
or
inc
subl
add
inc
data16
dec
scas
aam
cld
fsub
xchg
mov
pop
mov
jns
aam
scas
pusha
and
out
fimuls
mov
sarl
adc
sti
popf
push
in
in
lret
es
incl
push
push
dec
pop
cli
mov
clc
or
lds
rcrl
xchg
cmp
fldl
mov
fs
das
mov
xchg
and
push
movsl
iret
push
lcall
ret
sahf
pop
loopne
adc
lret
leave
xor
or
cmpsb
dec
mov
sub
mov
test
xchg
aam
popa
or
lahf
adc
xchg
fstpl
fcoml
adc
dec
imull
inc
fdivs
lods
cld
ds
in
das
aaa
shll
jecxz
sub
andb
mov
enter
push
xchg
std
lret
fmul
xchg
adc
cmpsl
shlb
xchg
cmpb
jo
pushf
leave
out
and
aas
xlat
stos
testb
arpl
jecxz
push
jno
addb
cmp
shlb
inc
int
into
repnz
into
or
loope
in
cmpsl
sar
data16
sti
outsl
je
mov
nop
imul
jns
jp
repnz
mov
fisubrs
cmpsb
loopne
mov
aaa
xor
add
je
jmp
or
adc
sti
int3
jnp
push
mov
mov
std
or
daa
push
sub
cwtl
adc
push
sbb
jge
lcall
stos
lcall
ret
movsl
mov
xor
in
loopne
mov
ljmp
xchg
das
imul
rolb
or
adc
sub
sarb
mov
pop
dec
mov
lods
push
imul
daa
jnp
and
cwtl
jge
jbe
insl
ljmp
add
xchg
jge
outsl
cmp
xchg
mov
mov
dec
shrd
shr
jmp
and
add
loop
es
pop
js
loope
mov
xchg
addr16
je
xchg
insl
mov
leave
pop
xchg
enter
adc
inc
inc
add
xor
push
inc
xorl
push
sub
pop
xchg
cwtl
pop
xor
pop
ret
jns
mov
pop
js
xor
test
mov
popa
cmpsb
stos
clc
lahf
jb
xchg
repz
lock
xchg
xlat
loop
cmpsb
sub
xor
orb
mov
test
pushl
inc
icebp
frstor
cmpsb
push
pop
icebp
out
test
jne
hlt
mov
lods
mov
clc
mov
jl
pop
lods
mov
pop
fcmovb
dec
lds
aam
pop
or
in
cs
cld
or
jne
or
out
sbb
push
push
loopne
sar
pusha
in
inc
rolb
bound
imull
xchg
addl
es
jecxz
push
xchg
or
sbb
push
mov
das
xchg
stc
mov
loope
es
aad
imul
mov
mov
js
arpl
out
or
add
stc
rcl
jb
lahf
aaa
insb
aaa
jl
xchg
punpckldq
pop
cmpsl
mov
mov
imul
out
jns
rolb
in
out
mov
dec
fisubrs
pop
stos
dec
ljmp
push
sbb
xor
hlt
data16
pop
ljmp
arpl
ret
test
fxch
in
loop
notl
and
icebp
cmp
cmp
sub
pop
or
jecxz
and
sub
jb
add
xchg
out
push
popa
insl
mov
sbb
dec
clc
lock
jo
loop
icebp
jae
ljmp
push
dec
in
enter
imul
mov
xchg
pop
push
out
std
inc
cs
sbb
or
xchg
sarl
mov
mov
xor
in
repnz
sub
ds
test
add
sbb
stos
out
insl
clc
and
xor
pushf
add
sbb
insl
data16
mov
popf
dec
popa
add
sub
jo
int
push
mov
dec
outsb
mov
cmpsl
stc
or
jg
enter
sbb
lock
jno
pushf
and
push
xchg
fistl
dec
mov
inc
xorl
and
sbb
xor
pop
pusha
sub
xchg
sbb
or
mov
jge
pop
call
data16
jb
cmpsb
or
mov
pop
sbb
and
adc
adc
sub
imul
and
sbb
sub
ret
imul
mov
inc
dec
jg
test
std
icebp
cwtl
sub
jb
cmpsb
fisubrs
inc
mov
adcb
daa
and
imul
mov
and
mov
xor
pop
and
sub
test
or
rorb
jmp
pop
fstl
repz
fdivl
fcom
lea
fsubs
jge
stos
cmp
mov
and
gs
mov
scas
sahf
into
aam
outsb
mov
enter
ret
and
repnz
fisttpll
xchg
loope
enter
adc
jns
mov
xchg
mov
lahf
orb
cmp
shlb
push
hlt
sub
xchg
test
stos
sub
or
jg
push
cmp
mov
in
sbb
adc
push
push
push
sbb
cmp
sarl
and
and
idivl
in
cmpsl
push
push
xchg
pop
lods
hlt
imul
ds
dec
push
and
inc
mov
stos
or
push
or
xchg
pusha
cld
movsl
call
subb
js
cmp
xlat
lret
mov
loopne
das
dec
dec
jae
movsl
outsb
div
mov
es
jno
addr16
fsubrs
jecxz
outsl
dec
dec
gs
pmullw
iret
icebp
sub
ror
call
or
sbb
mov
outsl
imul
cmpsl
push
shrb
xchg
pop
out
sbb
xor
lds
or
mov
dec
dec
adc
mov
add
mov
shl
je
push
push
inc
and
mov
mov
into
daa
push
shl
test
mov
subl
mov
insl
push
jno
dec
or
js
loopne
adc
lret
jne
sahf
and
fisubrs
dec
add
adc
mov
in
pop
cmp
add
fsubrp
popf
mov
enter
xchg
int
lds
add
or
test
test
cs
mov
jnp
adc
push
fistpl
push
push
ret
pop
or
arpl
or
lods
fnstcw
outsb
arpl
push
jbe
es
lock
fldcw
and
mov
fwait
fwait
pop
test
jno
fiaddl
inc
pop
test
or
cmp
inc
out
fs
test
pop
push
test
jge
mov
mov
lea
shlb
shrb
in
push
cld
std
inc
lret
fwait
inc
jle,pn
cmp
loope
mov
xor
jne
xchg
arpl
sbb
cmp
cmp
inc
movups
mov
jp
xor
mov
mov
in
rcrl
dec
fcos
std
jmp
rdmsr
pop
mov
outsb
fwait
xor
fidivrs
sbb
inc
gs
dec
repz
adc
mov
loope
push
outsl
into
push
movsb
adc
bound
sbb
cli
sbb
pop
movsl
dec
push
aaa
subl
mov
inc
jbe
sahf
jae
mov
out
or
out
mov
or
cltd
shrl
jge
pushf
repnz
outsl
xchg
push
xlat
fcoms
push
loopne
test
xor
dec
out
push
fsubrs
xlat
mov
js
jl
xor
mov
les
jp
mov
mov
cld
xchg
cmc
inc
shll
das
mulb
pop
or
push
cmpl
xchg
shll
in
sbb
scas
ds
and
fidivrs
insb
dec
add
inc
jo
stos
fstl
scas
mov
inc
sbb
faddl
lea
cmpsb
icebp
setg
repz
jmp
pop
pop
addr16
mov
imul
mov
adc
add
adcl
inc
mov
call
outsb
loope
xchg
inc
rorl
push
dec
or
leave
arpl
sbb
cwtl
jp
pop
push
mov
decl
int
rorb
cmp
fwait
xor
arpl
mov
cmp
pushf
arpl
lahf
imul
repz
testb
loopne
cwtl
mov
lea
je
das
jne
add
push
hlt
std
dec
pop
cli
negb
sub
cmp
cmc
sub
mov
repnz
sbb
xor
jb
jne
xor
out
push
or
push
cs
add
adc
es
aad
js
iret
cmc
call
dec
mov
mov
aam
in
push
jbe
mov
test
mov
dec
or
shl
xor
or
jmp
aam
mov
xor
push
push
push
mov
push
setg
rcrb
ret
xor
fld
incl
inc
popa
and
push
cmpsb
movsb
mov
pop
adc
gs
push
cmpsl
loopne
xchg
das
push
sub
mov
movsb
pop
fistpll
iret
pop
movsb
sub
jecxz
add
inc
movsb
xchg
scas
rorl
imul
out
inc
or
cmpsb
cltd
loope
push
cmp
mov
mov
add
jbe
xchg
es
and
cli
xor
push
adc
sbb
jnp
aaa
xor
inc
push
sub
sub
push
xchg
rolb
dec
xor
mov
shll
push
pop
aad
pop
adc
add
fwait
mov
add
clc
add
test
cmpsb
leave
dec
std
daa
clc
dec
lahf
and
jns
aaa
and
jl
sbb
xor
scas
cwtl
orb
mov
ss
int3
mov
jmp
fsts
sti
nop
scas
push
fwait
and
and
pop
xorl
cmp
push
dec
and
mov
sbb
dec
jb
outsl
divb
xlat
xor
imul
gs
sub
nop
hlt
jg
or
sbb
push
mov
jecxz
or
fimull
cmp
pop
push
dec
ja
pop
imul
lret
mov
clc
clc
jae
pop
popf
jecxz
push
push
inc
in
aas
mov
test
jp
call
arpl
inc
mov
imul
popa
rolb
adc
gs
add
jmp
test
add
dec
gs
and
or
das
jmp
add
xor
andl
clc
lahf
ret
mov
mov
in
int3
cmp
movsl
add
pop
push
sub
jge
cs
xor
roll
pusha
or
adc
lods
loopne
dec
xor
lret
inc
jbe
cltd
push
dec
xchg
jl
pop
daa
mov
negb
lret
dec
rorb
shll
dec
fnstenv
imul
fscale
in
leave
loopne
daa
insl
xchg
dec
icebp
cmpsb
or
test
fnstsw
mov
jb
sub
test
iret
popf
es
cmc
out
dec
int
mov
lret
xchg
lret
jne
push
test
and
loopne
fidivs
das
mov
scas
add
imul
sub
cmp
jl
arpl
jp
dec
adc
cwtl
pop
fnstcw
xchg
lock
mov
jl
add
pop
das
and
into
shlb
xor
xchg
std
jmp
andb
sahf
lret
or
lcall
ret
cmp
xchg
mov
data16
adc
bound
add
inc
cld
out
fcomp
lods
stos
push
push
cmp
adc
or
xchg
into
xor
fnsave
jle
jnp
out
or
pop
inc
push
xchg
repnz
out
dec
sbb
jge
or
lahf
cmp
sahf
xchg
dec
lahf
mov
or
shl
mov
test
int
xchg
sarl
add
xchg
push
pop
mov
dec
dec
sub
cmpsl
out
mov
fldl2e
sub
popf
or
int3
test
call
push
mov
adc
cmc
iret
jg
aam
lea
arpl
rcrb
pcmpeqd
mov
jl
and
stc
daa
jl
out
stos
ss
jge
xchg
sub
flds
or
or
xor
push
pop
adc
mov
xchg
pop
data16
xor
je
xor
imul
mov
jbe
sub
pop
adc
mov
push
shrl
sahf
rol
mov
inc
das
das
mov
call
lahf
cmc
dec
popf
pop
push
fs
xchg
test
mov
sbb
outsb
add
cmc
loop
mov
jne
jne
xor
inc
mov
subl
test
cltd
dec
test
jecxz
sub
adcb
sub
jg
mov
arpl
andnps
sbb
stos
push
add
or
push
pop
sti
or
or
gs
or
fbld
test
push
jp
jg
inc
or
std
adc
lahf
sbb
stos
xchg
lods
inc
ficoml
hlt
mov
jne
movsb
outsl
mov
xlat
filds
out
cmp
cmp
into
mov
cmp
mov
mov
neg
shrl
dec
inc
mov
lcall
mov
xor
jecxz
xchg
push
sbb
lds
out
jp
jae
mov
sub
jo
cmpsl
jne
mov
sarl
mov
in
mov
lods
div
lds
push
sbb
sub
xchg
mov
stc
fnstsw
lea
xchg
je
push
add
pop
les
or
sub
and
jne
fs
cmp
mov
inc
pusha
adc
xor
xor
dec
inc
lret
rcll
xor
push
xor
xchg
jne
mov
repz
gs
pop
mov
or
jge
pop
jnp
jb
ljmp
mov
sub
lock
lock
insb
dec
shlb
sbb
repz
stos
xor
mov
or
into
das
lods
cmp
mov
cmc
std
mov
xchg
mov
xor
nop
push
shlb
loope
mov
mov
lock
sbb
jo
push
stc
fldt
fisttpll
inc
inc
xor
sbb
pushf
dec
cmp
push
mov
test
inc
xchg
mov
push
adc
adc
mov
iret
xorb
icebp
xchg
stos
dec
shrb
rorl
cmc
iret
xchg
mov
pushf
gs
push
xchg
outsl
inc
xor
ljmp
jns
add
mov
addr16
inc
inc
movsl
popf
pop
fistpll
test
jle
nop
xor
dec
sar
mov
pop
mov
aad
aas
aam
sub
movb
fisubrl
clc
and
fiaddl
mov
orl
add
mov
fstl
dec
call
push
inc
mov
jae
mov
cmpb
xchg
inc
leave
jp
inc
and
jmp
push
mov
jl
and
xchg
pop
fs
xchg
aam
fsubrs
popf
dec
mov
mov
or
jl
movsb
aas
push
xchg
xchg
lds
add
lods
mov
inc
jb
or
shll
mov
fcoms
movsl
sbb
push
int
jbe
sbb
iret
lret
push
inc
enter
cltd
loop
iret
imul
jne
rcrb
push
pop
outsb
push
roll
ljmp
sub
mov
sub
mov
or
rcrl
jnp
adc
ds
enter
cmp
loope
lods
rcrb
addr16
addr16
movb
push
sub
dec
or
sbb
or
pop
xchg
add
mov
jecxz
sbb
jl
hlt
movsb
and
push
scas
adc
faddl
pusha
scas
pusha
rcrl
push
fildl
inc
sarb
fisubrs
fadds
add
or
pop
inc
or
and
jo
adc
xchg
dec
xchg
sub
iret
sbb
sbb
pop
hlt
xor
nop
or
mov
jecxz
rcrl
int
xchg
cmp
cmpb
push
dec
aad
loope
out
mov
imull
cmp
sbb
push
push
push
mov
out
cmp
mov
jns
cld
push
mov
push
int3
lahf
pop
cmp
repnz
inc
cli
lret
das
mov
or
xor
jno
sahf
cmpsl
shlb
aaa
and
mov
mov
and
sub
call
lahf
cmp
inc
icebp
fucomp
push
sbb
push
icebp
lcall
cwtl
dec
lock
popa
scas
into
call
mov
loopne
push
mov
icebp
mov
popa
loop
and
xor
ds
inc
push
inc
fldt
lods
mov
xchg
mov
mov
ret
mov
loope
cmp
stc
scas
cmp
fnstsw
cmp
xchg
inc
pop
pop
mov
aam
mov
ljmp
pop
test
push
in
ficomps
call
and
push
pop
lcall
ss
dec
push
ljmp
jae
and
loop
add
mov
xor
jge
imul
add
jecxz
fidivs
mov
das
push
sub
negb
dec
push
mov
adc
pop
cld
xor
push
pop
scas
mov
in
stos
inc
jbe
add
pop
jne
sbb
or
sbb
pop
sub
loope
xchg
fiaddl
and
into
fcompl
cmpsl
jbe
mov
and
int3
mov
dec
mov
xchg
les
xor
sub
in
scas
and
mov
jns
int3
or
insl
stc
pushf
movsb
popa
xlat
cmc
sar
imull
mov
mov
push
adc
mov
nop
xchg
cmp
jmp
mov
outsl
cltd
xchg
movl
ds
cmp
or
and
inc
sbb
push
mov
imul
adc
fmull
xchg
mov
sbb
adcb
xchg
pop
mov
subl
mov
and
jbe
imulb
popa
jae
cmp
test
or
xchg
mov
sarl
cli
pop
lods
jne
add
jbe
mov
idivb
jle
pop
push
mov
pop
pop
mov
arpl
add
cmp
add
aad
repz
mov
pop
xor
sarl
and
mov
mov
dec
jmp
sub
lods
adc
pop
inc
sbb
loopne
and
vpaddusb
add
dec
add
xlat
mov
sbb
sbb
pop
movb
xchg
lea
dec
jae
xor
push
sub
xlat
scas
jge
push
mov
mov
or
push
dec
push
xchg
loopne
xchg
mov
or
cli
jb
sub
or
sbb
loope
xchg
inc
fisubl
loope
pop
loop
fld
in
mov
and
mov
mov
cmp
jbe
jg
xor
fbstp
or
dec
sub
xor
add
das
jns
mov
les
jecxz
stc
cmpsb
push
mov
insb
push
inc
pop
dec
cmp
mov
xchg
fwait
repz
popa
arpl
sbbl
dec
outsb
pop
push
enter
cmp
or
adc
push
lret
lods
add
inc
aad
mov
or
aas
push
mov
ret
shll
in
mov
pop
sbb
js
movsb
jp
scas
pop
cmp
jb
dec
or
mov
shr
push
les
pop
addr16
stc
mov
add
ja
int
push
pop
adc
pop
dec
fcomip
xchg
mov
inc
pop
xlat
add
sbb
in
rcl
adc
stc
test
xlat
dec
popa
fdiv
push
mov
mov
test
dec
cmp
mov
pop
adc
sahf
cmc
push
lea
and
jae
test
daa
xchg
sub
pushf
adc
stc
add
cmp
xchg
cs
inc
mul
adc
pop
jp
shll
xor
xor
lret
or
mov
std
cmp
mov
orb
stos
daa
out
movsb
xchg
mov
inc
or
outsb
add
pop
jbe
not
arpl
scas
adc
cld
and
and
nop
in
pop
or
mov
subb
mov
test
divl
js
jg
loope
ds
inc
sahf
int
inc
nop
idivb
shll
push
fsubl
jb
cmp
dec
cmc
mov
loop
arpl
jle
es
or
imul
push
xor
stc
icebp
push
dec
imul
cmpl
cmp
aaa
cmp
inc
or
clc
inc
scas
jo
stos
sub
ljmp
fsubrs
sbb
or
mov
sub
sahf
lcall
push
add
sahf
mov
subb
sub
mov
mov
jbe
jmp
pop
mov
in
xor
nop
cmp
dec
fstl
sub
movsl
aam
mov
hlt
fxch
xchg
xchg
push
xlat
push
sub
mov
scas
cmpb
push
lods
jne
cmpsl
repz
dec
jmp
push
loopne
insb
cmp
test
mov
dec
jno
jle
lahf
pushl
mov
push
leave
test
add
out
and
fcompl
out
push
std
loopne,pn
stc
add
cmp
sub
jbe
inc
insb
fwait
daa
mov
mov
sub
push
xor
in
int
out
sbb
mov
and
popa
sar
sbb
iret
pop
movsb
mov
sbb
adc
dec
ljmp
adc
unpckhps
sbb
xor
pop
jo
xor
mov
vmovsldup
mov
not
les
out
push
idivb
or
out
pop
out
cli
xlat
xchg
pop
rcrb
dec
rorl
jl
mov
pop
and
dec
clc
fnstcw
or
out
stos
std
out
sarl
cmp
scas
in
jne
dec
push
or
jns
ret
mov
cmpsb
and
sub
mov
enter
cmp
mov
pop
cmpsl
inc
imull
push
adc
hlt
into
lods
lods
testb
imul
pop
adc
fisubs
xor
into
or
daa
push
adcb
jecxz
lahf
adc
dec
loopne
push
into
fstl
pop
lret
push
lea
cmp
addr16
add
pop
jae
xor
dec
cmp
ror
pop
mov
jae
test
dec
sub
int
add
scas
xchg
cli
je
push
mov
jb
mov
mov
mov
push
mov
inc
enter
xchg
popa
leave
mov
pop
mov
inc
mov
jmp
std
sti
sbb
sbb
mov
out
adc
xchg
ret
mov
adc
cmp
adc
sub
shll
adc
sbb
jge
test
les
nop
cld
xchg
sahf
insb
frstor
jl
dec
add
cmpsb
lret
outsl
das
icebp
std
push
mov
lret
pop
sbb
mov
xchg
jno
sbb
dec
jbe
add
mov
movsb
add
or
add
daa
pop
outsl
pop
hlt
mov
sub
mov
out
mov
idivl
inc
cwtl
cwtl
push
push
dec
les
mov
pop
xor
jle
or
mov
xchg
loopne
push
test
rcrb
xchg
scas
mov
jmp
aas
shlb
jno
fldenv
aad
mov
and
push
push
out
test
sbb
pushf
outsb
scas
cmpl
pop
arpl
in
sahf
ja
movsl
imul
int3
jnp
mov
clc
cmp
fsts
aad
aas
rclb
push
icebp
or
mov
ss
push
sbb
sbbb
xchg
and
aaa
pop
es
mov
xchg
std
fistl
fwait
iret
or
pop
daa
xor
lcall
cwtl
cli
shrl
cld
scas
inc
sarl
xor
outsl
int3
sti
out
sub
out
cli
push
inc
pop
dec
xchg
and
dec
rolb
in
xchg
dec
adc
movsl
cmp
adc
xchg
mov
in
jge
and
and
jecxz
into
por
popf
dec
movb
lock
mov
ret
cmp
jge
mov
jecxz
stc
push
es
add
push
push
mov
jns
fwait
aas
test
pop
xor
sub
xchg
cmc
loopne
xor
xor
out
xchg
iret
dec
mov
lcall
and
cmpsl
sbb
jecxz
sub
pop
outsb
push
lods
insb
xor
xor
xchg
mov
and
mov
dec
in
mov
xchg
orb
pop
aaa
mov
xchg
and
xor
sub
std
dec
xor
in
jecxz
in
mov
and
imul
cmc
loop
in
jne
test
mov
hlt
fnstenv
cmp
inc
div
jle
pop
dec
jae
nop
and
loope
movsl
aaa
aaa
fstps
ficomps
lds
xchg
nop
cmp
ret
xor
jge
adc
insl
call
mov
cs
dec
mov
inc
int3
rorb
les
pop
or
addb
sub
rcl
cmpsl
adc
les
jnp
and
out
cmp
dec
cmp
repz
cmpsl
pop
ljmp
loopne
insl
loop
lods
in
jle
lods
inc
sub
fimull
stc
stos
sub
sbb
scas
test
jmp
jne
fiadds
icebp
jg
in
mov
jns
add
fmuls
es
mov
mov
xlat
or
in
ds
mov
dec
add
iret
and
dec
jmp
and
and
or
lret
mov
mov
insl
xor
pushf
shlb
aas
rcrl
cwtl
rcrl
gs
lock
jp
sahf
push
pop
sub
pop
cmpsl
sbb
and
ret
and
jp
imul
mov
fdivrs
cmpsl
mov
xchg
push
cltd
jl
push
leave
add
andl
ret
add
es
and
adc
es
mov
loopne
cmp
stc
mov
repnz
dec
in
ret
les
or
aas
dec
scas
sahf
inc
dec
shll
mov
into
xchg
notb
repnz
jecxz
add
push
cmc
int3
ret
pop
sbb
repz
fdivs
mov
mov
fnstcw
dec
ficoml
mov
push
pop
add
mov
pop
pushf
iret
mov
pop
sti
out
icebp
xchg
cmpsb
dec
and
sti
mov
xor
inc
jnp
mov
mov
aaa
out
xchg
mov
out
imul
jmp
mov
cmpsb
rcrl
mov
nop
mov
add
pop
test
loope
dec
data16
testb
ss
ja
push
push
aad
mov
or
xorl
jmp
xchg
cld
popf
mov
fldl
and
push
fwait
add
jnp
mov
xor
adc
push
add
xor
insb
xor
into
push
push
repnz
sub
int3
ret
dec
shlb
push
scas
push
repz
sbbb
jle
pop
das
es
ss
xor
fstps
call
mov
jo
shll
nop
sub
ret
cmp
sub
iret
outsb
rorl
jg
push
xor
pop
push
jl
push
fwait
and
stc
int3
fwait
mov
mov
jg
and
test
addr16
adc
and
sahf
jnp
es
outsl
out
rolb
cld
bound
xor
call
xor
and
push
test
cmp
sbb
cli
fwait
and
cwtl
jmp
cmp
insb
mov
mov
sbb
stc
cmp
aaa
jp
es
arpl
pop
and
cmp
out
jmp
push
test
stos
pop
inc
call
adc
xchg
xchg
mov
out
xchg
pusha
xchg
in
fadds
movl
aaa
stc
lds
pop
ffreep
scas
sbb
and
push
dec
jecxz
jbe
mov
push
test
add
jmp
sbb
and
enter
pushf
scas
ret
cmp
loopne
push
jg
mov
add
and
inc
inc
jo
add
nop
xorl
sbb
arpl
jb
in
data16
sarb
dec
or
push
out
aam
test
int3
mov
cmpsb
daa
mov
lods
push
sub
mov
imul
xor
push
ret
push
mov
mov
addb
test
stc
inc
dec
cwtl
mov
push
js
jle
jns
enter
dec
mov
enter
shr
lock
in
popf
jb
xchg
or
mov
sbb
les
in
mov
mov
test
repnz
and
push
repz
add
and
or
mov
rcrb
repz
rolb
aas
fstl
dec
lret
and
std
sbb
mov
jnp,pn
sub
adc
hlt
mov
scas
bswap
sbb
cltd
xchg
mov
push
cmpsl
cltd
sbb
or
aaa
cmp
out
popf
cmpl
aas
add
in
es
dec
xchg
push
jo
xchg
fildll
cmp
aaa
add
scas
push
test
mov
adcl
xlat
in
push
aad
adc
xor
addr16
pusha
mov
or
lret
inc
and
dec
add
dec
inc
daa
sub
stos
scas
lods
ret
xorb
clc
mov
xor
adc
nop
aaa
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
xlat
mov
iret
or
push
mov
repnz
lret
adc
xchg
iret
pop
adc
scas
push
ret
daa
dec
bound
loop
push
mov
mov
pop
xchg
pop
add
rcrb
mov
imul
enter
pop
rcll
and
sbb
mov
fcoml
lods
xorb
lcall
mov
lods
and
lods
and
cmp
jg
test
dec
cmp
leave
jp
push
inc
pusha
add
add
inc
jne
ds
push
xchg
mov
insl
cli
bound
and
xchg
jp
cmpsl
mov
mov
inc
lods
in
xlat
mov
scas
dec
lods
dec
xor
jo,pn
mov
insl
imul
movsb
out
stc
mov
scas
leave
mov
adc
orl
mov
iret
movsl
inc
aaa
mov
in
pop
pop
sub
mov
mov
pop
scas
mov
pop
xchg
xor
dec
dec
fisubrl
xchg
jbe
or
push
push
hlt
hlt
cld
in
pop
sbb
and
mov
scas
fidivl
test
xlat
dec
xor
repnz
icebp
fmuls
incb
xor
nop
rolb
sub
rorl
mov
jne
cld
mov
xor
fwait
repz
dec
cmp
cmpb
sub
sbbl
popa
xorb
stc
jne
add
div
outsl
out
inc
lcall
jle
cld
sub
rcll
daa
repnz
pop
push
js
mov
mov
sub
shl
mov
inc
shlb
int
inc
dec
add
push
ja
push
shrl
fildl
rolb
pop
orl
mov
push
in
jbe
push
dec
repz
xor
jl
xchg
add
ljmp
testb
pusha
inc
adc
pop
mov
lcall
cmp
shr
scas
ljmp
testl
lcall
or
data16
xchg
jnp
ss
add
rcll
jp
jne
leave
div
jl
xor
sbb
mov
xchg
gs
xlat
and
sub
repz
xchg
enter
push
sti
mov
imul
jae,pt
xor
xchg
cli
stos
in
and
in
imull
inc
arpl
fidivl
add
cmp
int3
test
aaa
mov
sbb
xchg
inc
or
xchg
jbe
xchg
pop
pop
fbstp
rcr
iret
rorl
out
mov
sahf
push
mov
in
neg
add
jne
fwait
sub
aad
outsl
mov
bound
jae
imul
fistpl
fwait
cmpsb
push
xor
into
mov
test
sub
inc
cmp
adc
ss
jno
xlat
adc
mov
or
and
mov
not
dec
xchg
in
jae
adc
push
adc
aaa
inc
sub
cli
leave
add
ret
sub
jae
inc
jne
pop
pushf
mov
pop
mov
rclb
mov
movsl
into
lods
fsubl
flds
ret
sub
call
into
jno
xlat
sbb
inc
subb
adc
sub
add
movsl
pop
dec
cmpsl
aaa
pop
mov
push
pushf
icebp
jo
add
pop
mov
sub
or
sub
outsb
mov
cmc
cmp
mov
add
push
or
jbe
out
lea
fmull
pop
xor
xchg
addr16
lods
inc
sub
out
xor
daa
movsb
popa
lods
mov
leave
pusha
mov
int
leave
aas
movsb
fisttpll
dec
clc
js
inc
loope
xchg
sub
jo
in
pusha
bound
loopne
add
jl
adc
test
je
je
aad
dec
dec
aam
xchg
jecxz
ficoms
adc
cmpsl
lahf
and
mov
or
xchg
inc
enter
jbe
mov
mov
cmpsl
push
iret
cmp
inc
out
lahf
int
sbb
insb
popa
outsl
fmulp
xchg
and
ror
movsl
xchg
fwait
push
mov
iret
push
call
dec
inc
or
jne
outsb
inc
jne
nop
cmp
sbbb
add
pop
test
pop
sbb
popa
jmp
push
and
pop
jns
ss
cmp
mov
pcmpgtw
lea
push
lock
cmp
fiadds
out
icebp
bound
adc
jmp
push
out
scas
inc
push
and
movsl
xchg
in
jnp
stos
mov
sub
fidivl
push
fcomps
adc
mov
add
addr16
jne
cld
aaa
pop
cltd
cld
out
mov
push
out
test
inc
add
repz
in
sub
cmp
jle
mulb
ja
cli
adc
jo
arpl
ja
and
mov
pop
iret
fmuls
leave
inc
loop
les
jb
inc
loopne
push
lret
leave
jns
mov
loopne
js
fxtract
lea
add
adc
adcl
repnz
sub
xchg
repnz
pusha
mov
lods
jecxz
lock
or
mov
pop
dec
or
cld
loopne
int
nop
imul
jge
or
lret
push
inc
popf
fstpl
outsl
sub
xor
test
xor
rcrb
popf
inc
mov
sub
push
xchg
clc
sbb
flds
xchg
sub
xchg
aaa
clc
inc
sub
and
subb
pop
push
lods
incl
push
lods
sbb
pop
adc
cmp
mov
test
dec
dec
push
add
push
xchg
std
mov
int
les
push
cwtl
lcall
add
or
ds
mov
cmp
push
sub
incb
cs
sub
outsl
jle
test
push
dec
push
jl
stos
int3
add
jmp
movsl
push
mov
in
scas
dec
shlb
out
push
into
nop
out
fwait
or
push
scas
out
pushf
push
jnp
and
lds
mov
mov
cmp
inc
lret
faddl
sqrtps
push
mov
jge
in
cltd
push
icebp
mov
dec
fdivr
dec
push
pop
aad
fidivl
pop
inc
cwtl
or
bound
sub
sarl
cwtl
adc
mov
inc
push
jp
repz
fucomi
lret
push
inc
out
and
sub
cwtl
cmpb
std
sub
out
cmp
cli
int
es
repz
andps
push
and
enter
sub
xbegin
stos
jnp
and
xchg
test
imul
lods
icebp
push
dec
and
out
xor
cmpsb
out
out
ljmp
jle
loop
push
sbb
push
sub
inc
mov
push
into
sbbb
jne
push
pop
test
mov
adc
mov
cmp
lahf
sub
out
sbb
fs
cld
fdivs
je
jmp
and
sub
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
mov
outsb
arpl
xchg
and
xchg
inc
mov
adc
xchg
leave
pusha
insb
addr16
push
enter
rcrb
pop
in
xchg
test
sub
and
or
mov
jnp
inc
cmp
inc
bound
insb
pop
out
xor
cld
sub
xchg
leave
pusha
mul
lds
movsb
cltd
rol
mov
add
mov
xchg
test
mov
ljmp
rclb
adc
push
mov
add
push
fstl
sub
jae
movsb
mov
scas
push
sbb
jno
or
aam
fistpl
add
push
add
mov
add
sti
adc
enter
test
sbb
js
aam
movsl
loopne
or
lret
dec
push
add
and
mov
fildll
or
aaa
in
jb
loope
jae
xorb
cmp
mov
cs
outsl
push
pop
xchg
data16
gs
repnz
jnp
mov
adc
cltd
jns
pop
sbb
jno
push
inc
mov
mov
sub
inc
ljmp
jle
mov
out
aas
cld
and
mov
clc
lahf
jmp
xchg
add
push
iret
cmp
mov
outsl
jae
sbb
mov
es
les
jecxz
movsb
jg
fcomip
in
push
xchg
repz
jbe
xchg
ficomps
rclb
cs
mov
push
gs
mov
insb
and
les
mov
push
dec
and
push
push
mov
mov
push
dec
sbb
mov
daa
jne
roll
jnp
inc
into
popa
out
pushf
inc
mov
push
jns
mov
fsts
ljmp
repnz
lret
mov
push
inc
data16
pop
push
jl
mov
add
daa
mov
into
mov
jmp
cmp
mov
rcrb
add
decb
sub
out
imulb
lea
or
gs
add
jne
inc
jns
or
xchg
sbb
fcomps
out
ds
popa
je
cmp
lock
fs
xchg
hlt
push
cltd
enter
add
inc
mov
add
repnz
jno
xchg
push
push
push
xchg
icebp
shl
rclb
rcrb
ficompl
cmp
adc
sbb
fs
and
lods
cmpsb
lods
push
mov
mov
cmp
fs
pop
cmp
sbb
sub
adc
push
cmp
jg
mov
adc
cmp
fmull
jb
push
into
or
xchg
in
pop
es
dec
push
mov
mov
cs
aad
mov
dec
cmp
cmp
fldl
call
rorl
test
adc
repnz
mov
int
shll
sub
mov
inc
jecxz
mov
sbb
out
mov
xchg
xchg
jbe
lahf
gs
bnd
mov
stos
sbb
push
push
dec
cwtl
cmpsb
mov
inc
sub
fcoml
je
mov
ljmp
rol
inc
xor
int3
mov
cmp
das
add
imul
mov
xor
adc
xor
cwtl
sub
lret
roll
test
fldcw
and
jnp
mov
insb
add
int3
xor
leave
xchg
push
repnz
xchg
push
sbbb
mov
cli
data16
jne
cmp
pop
pavgw
mov
sbb
fcoml
aam
jge
mov
test
jl
or
dec
out
xchg
rcr
movsl
push
add
out
fwait
mov
inc
test
xchg
repnz
cwtl
ret
cmp
jp
pusha
dec
pop
ds
sbb
outsl
test
add
push
fwait
xor
outsl
add
nop
rol
lods
dec
jns
imul
daa
repz
loope
jmp
dec
outsb
rcrb
std
xchg
fadds
sbb
mov
and
stc
mov
out
add
clc
add
cwtl
sub
shrb
test
andb
jmp
push
xchg
mov
pop
test
adc
data16
push
adc
rcll
inc
inc
std
rorb
cmp
test
xchg
lock
insb
in
cmp
add
aam
jmp
clc
dec
add
adc
mov
jne
into
shl
add
daa
loope
sub
cwtl
loope
ja
adc
push
scas
lea
je
roll
cli
push
mov
cmp
cmpsb
xchg
aam
scas
cmpsl
lahf
pop
push
xor
jle
push
rcr
test
and
cmp
add
lret
je
sbb
mov
inc
mov
icebp
leave
sarb
test
stc
jle
and
fadds
iret
movsl
jae
imul
sbb
into
fidivs
fldt
mov
lock
lea
enter
mov
inc
dec
loopne,pn
inc
repz
xor
mov
mov
push
or
or
inc
dec
dec
xor
xor
daa
pushf
iret
rcrb
bound
movsl
jno
pop
mov
out
and
icebp
lds
addr16
arpl
in
mov
fcomp
nop
orl
fnsave
movsl
cld
sti
movsb
notb
orb
fwait
jg
clc
loop
or
fists
inc
sar
sbb
dec
and
pusha
xchg
and
test
cmc
aaa
mulb
les
aam
mov
cmp
lret
test
xchg
icebp
data16
push
xor
push
mov
filds
add
jo
push
push
loope
sbb
pop
insl
mov
add
aam
lret
pop
out
add
adc
mov
mov
dec
data16
fildl
out
movsb
xchg
aas
mov
pop
out
sub
mov
lock
cmc
jae
xor
cmpsl
inc
in
pop
jbe
test
fstps
fsts
adc
inc
std
cwtl
call
push
aam
add
out
imul
aaa
dec
push
adc
sub
push
mov
mov
jp
aad
rcrb
add
icebp
mov
mov
sbb
adc
xchg
out
lock
shll
aad
adcb
sub
push
ds
nop
xchg
nop
lcall
dec
jmp
js
stos
aas
xor
sub
cmp
inc
enter
dec
lret
push
pop
adc
lret
mov
pop
sub
imul
cmp
dec
mov
clc
sub
lds
or
adc
lds
xchg
aad
lock
xlat
icebp
mov
inc
mov
in
adc
inc
aas
insl
cltd
inc
mov
sahf
and
xor
mov
mov
inc
loop
inc
inc
jbe
sbb
jg
inc
or
bound
or
int3
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
fnsave
push
adc
adcb
adc
xchg
lcall
std
bound
cwtl
jbe
adc
enter
das
jnp
in
add
std
cmp
scas
sbb
and
jg
xor
lahf
es
mov
int
in
pmaxub
insl
xchg
mov
pop
into
imul
adc
mov
cmp
repnz
shrl
testl
movsb
jae
lret
mov
sahf
jbe
shll
and
jmp
add
mov
push
int
xchg
pop
sbb
mov
call
in
or
sbb
adc
sbb
stc
pop
std
andb
xchg
fldl
adc
cwtl
fmuls
sbb
aaa
scas
sbb
std
repz
scas
sub
adc
out
lcall
pop
cmp
js
jp
add
fs
ds
das
xchg
mov
aad
sbb
sbb
insl
sbb
jl
out
sub
and
lds
push
xchg
in
imulb
aad
test
push
xor
lods
lret
mov
jp
xor
sbb
sahf
pop
inc
xchg
jmp
mov
cs
sub
inc
lock
jae
push
pop
sub
push
arpl
mov
mov
push
ret
rcl
ja
xchg
mov
movsb
mov
sbb
xor
lahf
xlat
lret
xor
into
pop
inc
testl
mov
cmp
add
add
cmp
sbb
and
je
mov
mov
pop
cmp
xchg
pop
sbb
pusha
shrl
cmp
pop
dec
cltd
fcomip
fwait
cmp
arpl
imull
stc
or
push
jl
sbb
cmp
push
and
test
inc
add
mov
inc
mov
xchg
inc
shl
stos
push
cltd
push
push
adc
mov
mov
ss
mov
out
sub
ja
mov
sahf
cwtl
fiadds
push
shlb
sub
push
mov
cmp
jns
lods
pop
in
push
imul
add
out
or
cmpsl
mov
roll
cli
pop
mov
fs
mov
xor
adcl
lds
lods
mov
inc
fiaddl
clc
loopne
test
jne
and
sbb
and
pusha
aas
mov
and
adc
dec
cmp
cld
cmpl
leave
cmp
or
jecxz
jle
or
loop
push
fadds
orb
sbb
out
sbbb
and
inc
inc
jae
push
pop
movsl
lret
xchg
shll
dec
in
stos
dec
shlb
cmp
dec
inc
out
cltd
arpl
insb
into
push
out
mov
test
add
scas
loope
or
addr16
mov
dec
adc
mov
mov
inc
mov
and
subl
divl
jb
pop
ss
inc
or
mov
jo
dec
cld
push
je
inc
sub
stc
aad
mov
and
jge
pop
xchg
mov
xor
and
xchg
mov
xchg
add
inc
test
mov
mov
xchg
int
or
sub
mov
sbb
fs
mov
sbb
arpl
pop
xor
call
ret
xchg
jl
xor
pusha
aam
xor
cmp
jns
pop
test
push
xchg
sub
arpl
cld
sbb
mov
sub
jmp
jno
inc
add
pop
int3
inc
fisttpll
mov
leave
adcl
mov
das
jae
sbb
sub
pop
adcb
cmc
xchg
add
xchg
addr16
adcl
sbb
mov
pop
sbb
push
dec
int
mov
xor
xchg
mov
ss
mov
int
xchg
mov
or
jno
inc
icebp
push
out
mov
ds
cs
fldt
mov
push
std
and
sub
loop
mov
rorb
stc
fdivrs
mov
push
sahf
lods
inc
std
mov
mov
jnp
mov
pop
cmpl
dec
in
cmp
mov
fs
inc
cwtl
dec
add
movsl
aam
push
sbb
mov
notb
mov
push
adc
es
jle
or
cmpsl
leave
xor
xchg
mov
insl
pop
scas
jne
pushf
lods
jae
adc
inc
xchg
test
setno
add
test
jnp
push
cmp
pop
xchg
imul
xor
aam
sub
push
out
cli
fsts
mov
mov
adc
ljmp
out
sbb
test
ret
lahf
mov
xchg
mov
fs
add
jns
push
std
mov
push
mov
push
lods
mov
clc
push
daa
jge
jecxz
cltd
bound
pop
sbb
lcall
lea
inc
fnstsw
ret
addb
stc
push
shl
popf
repz
push
pushf
jp
xchg
sbb
add
lret
lods
sti
fsubl
inc
rcll
add
lret
jns
data16
dec
inc
or
pop
jne
jmp
insb
sbb
test
adc
stc
sub
cltd
push
and
and
jp
scas
adc
pusha
iret
mov
das
mov
cmp
or
shl
pop
inc
addl
je
xchg
adc
sbb
jmp
bound
fcoms
mov
hlt
cmpsb
fsubrl
test
dec
and
shr
jnp
je
pop
xchg
jg
popf
dec
lret
daa
movsb
dec
push
xor
lds
dec
mov
xchg
and
ds
in
jp
mov
adc
push
and
xor
push
add
enter
loope
sbb
ficoms
dec
lcall
jae
mov
mov
fisttps
inc
std
mov
inc
sub
rol
test
cmp
cmp
pusha
xchg
hlt
out
mov
cmp
std
dec
sahf
pop
mov
das
mov
and
mov
mov
inc
in
inc
lret
imul
inc
movsl
repz
xor
sbb
jb
sub
mov
jge
mov
in
das
mov
push
mov
aad
pop
pop
stos
pop
jl
or
lret
inc
sub
push
hlt
pop
push
jge
lods
add
cmc
jo
pop
mov
mov
sarb
mov
lds
mov
pop
int3
cmp
test
fsubrs
call
and
pop
call
mov
pop
xor
test
ss
insl
cmp
imul
inc
adc
shl
lret
jle
xchg
or
fcomi
jg
pop
mov
jg
jo
shrb
xlat
test
pop
aad
push
test
push
nop
sub
and
sarb
loope
push
or
mov
mov
shl
shl
mov
mov
jmp
test
fcoms
jmp
or
ja
mov
out
out
inc
divl
sub
test
or
cmp
lods
repz
push
xchg
mov
pop
adc
sub
xor
mov
sbbb
jle
jns
lods
sahf
ret
mov
dec
and
mov
arpl
or
inc
pop
mov
add
je
lea
xchg
clc
add
loop
cmp
xchg
mov
inc
mov
sub
js
out
test
aaa
mov
fbld
mov
mov
and
ljmp
cmpb
jmp
rorl
mov
sti
and
inc
push
negl
imul
stos
dec
and
push
xor
lcall
adc
sub
insb
aas
lret
call
pop
insb
std
clc
mov
inc
arpl
ds
sbb
cli
xor
lds
stos
scas
repz
xchg
push
andb
push
lret
mov
lds
insl
cmp
popa
inc
dec
rcll
stos
or
sarb
mov
call
insl
int3
rolb
pop
or
cmpsl
sub
arpl
adc
arpl
cs
and
shl
lahf
jmp
mov
xchg
int3
inc
or
dec
adc
add
dec
lret
jmp
inc
jmp
rorb
mov
movsb
jl
fdivl
mov
mov
add
aad
in
cltd
and
rcr
xchg
pop
sub
dec
js
enter
mov
pop
adc
jl
sub
push
pop
push
mov
fists
xor
mov
sub
adc
cmp
nop
jg
je
pop
neg
fidivrs
lods
faddl
mov
dec
std
shrb
dec
xchg
adc
repnz
out
mov
shl
fbld
pop
dec
jl
mov
adc
add
mov
jle
xchg
nop
rclw
mov
and
xlat
lcall
outsl
push
jae
popa
mov
or
mov
xchg
or
int
ud0
pusha
daa
inc
loopne
dec
push
fcomp
fnsave
jnp
pop
sahf
or
adc
push
pop
xchg
add
out
sub
lahf
mov
jb
nop
fmulp
cmp
push
push
or
jmp
es
mov
jmp
std
and
fwait
xor
sbb
repnz
sbb
xor
jb
sbb
stc
add
pop
lds
insl
aas
xchg
in
fmull
sub
or
push
ffreep
lock
push
imul
jl
cli
es
jno
std
pop
xchg
dec
push
mov
lret
cmp
cmp
mov
pop
push
mov
test
xor
fldcw
lods
mov
mov
jae
adc
aaa
or
add
mov
sub
es
out
and
test
test
xchg
adc
push
sbb
push
imul
imul
fbstp
or
ret
stc
lret
out
xor
inc
insl
sbb
push
lret
mov
inc
pop
jecxz
loope
inc
xorb
divb
or
xchg
out
hlt
cmp
and
cld
inc
data16
jb,pn
arpl
loope
mov
lods
test
xchg
or
sbb
cwtl
repz
xchg
push
mov
dec
or
or
mov
fcomps
lret
xor
xchg
mov
sarb
push
jp
adc
jmp
aaa
mov
les
daa
and
adc
aad
loope
mov
and
cld
negb
or
jmp
pop
in
cltd
imul
fistl
jg
mov
addr16
cltd
into
enter
inc
lock
adc
lret
and
fs
ds
scas
test
dec
ds
aaa
jge
fs
frstor
cli
int
lods
sbb
inc
loope
sbb
adc
int3
incl
xor
jl
dec
stos
add
addr16
enter
pop
xorb
adc
enter
sbb
dec
jge
xchg
test
jecxz
inc
pop
push
or
cmp
neg
add
imul
mov
mov
xor
aas
pushf
and
stos
movsb
popa
jge
int3
sub
std
rorl
mov
mov
xlat
js
leave
lahf
push
clc
loop
cwtl
psraw
out
push
mov
cltd
mov
cmp
xlat
hlt
lods
mov
or
pop
dec
mov
mov
aam
sub
shll
mov
dec
rclb
xchg
fimull
xchg
mov
sti
out
js
jg
add
jno
mov
out
sub
scas
xchg
sbb
scas
dec
pushf
stos
xchg
cs
cmp
in
fdivs
dec
adc
ss
add
or
sbbb
cmp
inc
sub
lahf
and
sbb
push
jno
aaa
out
jb
pop
aas
ljmp
adc
cmp
dec
daa
ss
fisttps
mov
jo
xor
sub
jb
add
movsl
aas
lcall
add
push
popa
pop
outsb
dec
pop
lods
push
ljmp
jb
enter
add
out
mov
mov
dec
shrl
xchg
mov
push
sbb
movsb
repz
stc
push
push
jmp
or
mov
jge
es
pushw
insb
mov
es
mov
cmpsl
fsub
xor
in
movl
shrb
pop
xchg
adc
aas
stos
clc
popa
fs
loop
test
loopne
jl
and
inc
mov
xchg
int
or
xchg
bound
inc
cmp
in
pop
je
test
cmpsb
std
xor
fidivl
mov
out
ds
ds
push
cmp
insl
jmp
popf
in
pop
pop
mov
repnz
sbb
mov
add
xchg
stos
jg
xor
andb
xor
fwait
hlt
sti
rol
adc
xchg
jg
dec
cmp
enter
mov
bound
xchg
push
data16
movsb
and
cmpsb
push
mov
lret
test
lock
rcrl
out
ljmp
mov
lea
jp
idivb
and
mov
adcb
inc
cmc
pop
cld
aam
sbb
and
in
pop
pop
test
into
xchg
pop
shlb
out
dec
popf
xor
ret
popf
mov
shll
sub
dec
filds
add
ljmp
mov
in
push
fcomp
popf
int3
sarb
and
ret
fwait
xor
xchg
xchg
jmp
mov
xchg
mov
push
sub
sti
lahf
pop
fs
repnz
nop
dec
and
aam
mov
adc
test
call
mov
and
mov
push
dec
push
in
insb
jl
cmp
push
jb
pop
scas
cli
adc
sub
mov
iret
lds
popa
push
jmp
ficompl
imull
add
add
inc
adc
arpl
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
jmp
sti
icebp
lods
mov
outsb
fs
cmpsl
jmp
lahf
cld
adc
aaa
testl
mov
pop
mov
jnp
sub
pushf
pop
jno
cmp
pop
cmp
add
movsl
mov
ficomps
mov
stc
adc
jns
xor
imul
in
sub
push
testb
and
pop
or
pop
push
push
sub
inc
lods
nop
and
or
in
testl
jnp
movsl
inc
inc
dec
pop
mov
mov
aas
cld
out
xlat
ror
mov
xchg
int3
out
mov
mov
add
jo
cs
lcall
ror
cmp
or
ret
push
aaa
add
mov
jo
mov
sub
and
xorl
adc
mov
fcmove
and
jne
mov
xlat
mov
mov
push
pushf
popa
lods
mov
cmp
in
or
subl
xor
cld
popa
sub
mov
daa
ffreep
inc
ja
and
mov
fistpl
in
mov
mov
pop
insl
push
cs
add
jo
loop
xor
mov
cmp
testb
cmp
pushf
xchg
mov
lock
int
push
iret
adc
mov
lds
bound
fistps
icebp
lds
cmpsb
lods
aam
xchg
lods
outsl
inc
jl
sub
imul
roll
ljmp
dec
pusha
test
pop
jp
jmp
sub
in
pop
sahf
out
add
dec
repnz
jno
inc
roll
dec
std
mov
dec
xor
push
lret
cmp
hlt
insb
pop
adc
cmpsb
and
cmpb
inc
les
sahf
aaa
or
ret
xor
ret
mov
pop
mov
xchg
lea
pop
ds
pop
ds
outsb
xlat
xchg
scas
jno
pop
or
and
and
shrb
add
aam
xor
aaa
aad
push
enter
push
dec
roll
mov
repnz
into
stc
pop
mov
movsb
in
jne
and
repnz
or
lds
sbb
adc
adc
js
push
rcl
mov
xchg
das
sbb
jb
inc
or
xchg
sbb
stos
sub
inc
ss
stos
push
mov
mov
jg
add
sti
push
adc
adc
sub
mov
inc
fwait
mov
jl
push
mov
push
flds
ja
and
int3
jbe
movsl
imul
jnp
test
stos
in
jge
mov
or
shrb
lock
push
cltd
out
mov
inc
iret
ficoms
je
cmp
enter
push
push
jnp
xor
sbb
out
mov
repnz
push
mov
inc
push
cmp
dec
mull
jecxz
into
cmpsb
push
addr16
xchg
pop
jp
jl
aam
cld
xorb
pop
mov
adc
cmpsb
xchg
ret
mov
adc
pushf
cmp
or
push
dec
sub
dec
loopne
and
inc
lahf
fwait
mull
pop
mov
stos
ja
jp
adc
sbb
aad
pop
fwait
outsb
mov
dec
xor
jmp
sub
jns
cmc
mov
mov
inc
into
scas
arpl
mov
sbb
in
roll
repnz
add
lock
push
andb
push
gs
testb
in
hlt
cs
push
pop
pop
enter
xchg
repnz
popf
sbbl
cmp
and
idivl
jmp
jo
or
idivl
aaa
fs
adc
lods
dec
sahf
xor
fwait
inc
jp
test
sub
stc
adc
mov
out
jle
adcb
jb
mov
xchg
or
test
ja
loop
adc
icebp
lcall
push
dec
mov
xchg
test
jecxz
push
je
cmp
push
lret
pop
jns
loope
mov
stos
orb
mov
and
cltd
stos
inc
mov
pop
pop
ja
lea
daa
addr16
mov
xchg
lods
mov
xchg
mov
cltd
mov
inc
iret
fstpt
popf
sbb
fbld
dec
dec
loopne
out
jl
mov
leave
test
xor
out
jae
dec
in
gs
push
push
xchg
jbe
jae
add
or
imul
xor
dec
popf
adc
or
sar
cmpsl
cmp
in
pusha
pop
out
mov
arpl
add
inc
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
cmp
jae
xorl
shrd
movl
shr
ret
adcl
mov
xorl
xor
sbbl
and
shr
ret
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
movl
notl
jle
push
pushl
call
notl
andl
andl
sbbl
adcl
movl
mov
incl
mov
adcl
movl
mov
movb
sbbl
movb
and
movb
adc
movzbl
andl
mov
sbbl
sub
addl
imul
movzbl
andl
push
and
andl
mov
addl
movb
movb
andl
movb
movb
negl
mov
mov
negl
add
adcl
imul
sbbl
mov
subl
or
mov
sbbl
and
mov
movl
cmp
ja
mov
mov
mov
or
mov
mov
cmpl
not
mov
movl
jmp
movl
jb
push
push
call
dec
xor
add
mov
add
adc
xorl
xor
adc
mov
movzwl
addl
movzwl
sbbl
shr
notl
or
sub
mov
subl
movb
notl
movb
mov
orl
mov
xor
xorl
add
mov
or
mov
movzbl
and
cltd
sub
push
cmpl
not
mov
mov
jmp
mov
je
push
push
call
mov
adc
xor
neg
adcl
or
adc
pop
adcl
idiv
mov
addl
movb
addl
movb
xorl
mov
mov
negl
add
movzbl
movzbl
xorl
cltd
idiv
mov
movl
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
and
push
cmpl
not
mov
not
not
jmp
movl
movzbl
je
push
pushl
pushl
push
pushl
call
sbb
adc
adc
subl
add
push
adc
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
pushl
push
pushl
push
push
call
sbb
adc
xor
mov
mov
sub
sub
xor
add
xor
or
sub
and
addl
addl
sbb
mov
shrd
shr
cmpl
movl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
push
pushl
call
addl
orl
mov
add
mov
add
mov
sub
mov
mov
mov
sub
sub
xor
movzwl
sbb
mov
neg
xor
sub
or
mov
mov
cmpl
mov
mov
jmp
movl
mov
jne
call
dec
addl
xor
sub
inc
andl
mov
mov
adc
shl
cmpl
mov
movl
movl
jmp
mov
movzbl
jle
push
push
call
mov
adc
mov
adc
xor
inc
xor
or
or
notl
add
movl
mov
cmpl
mov
mov
jmp
mov
jge
pushl
push
pushl
pushl
call
andl
or
add
xor
or
shrd
xor
orl
shr
xorl
mov
and
mov
xor
or
or
cmpl
not
mov
mov
movzwl
jmp
mov
mov
jge
push
pushl
call
movzwl
xor
movzwl
add
mov
or
mov
sub
or
addl
xor
mov
mov
and
mov
mov
mov
mov
inc
mov
xor
mov
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
jle
pushl
push
pushl
pushl
call
not
andl
adc
sub
xor
shl
orl
xor
and
shld
sub
shl
inc
mov
orl
xor
addl
xor
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
cmpl
movl
movl
not
jmp
mov
movzwl
jle
push
push
push
call
sub
adc
or
sbb
adcl
sbbl
xor
adc
mov
mov
mov
and
mov
xor
shld
sbbl
shl
xor
xor
cmp
jne
movl
cmp
movl
je
cmpl
mov
movl
jmp
mov
not
jbe
push
pushl
push
pushl
call
xor
mov
add
adc
and
adc
not
mov
subl
mov
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
pushl
pushl
call
subl
mov
add
add
add
xor
shl
mov
xorl
xor
shr
adcl
or
mov
mov
movzwl
or
mov
mov
and
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
call
and
orl
subl
subl
sbbl
orl
and
cmpl
movl
movl
movl
movl
jmp
movl
je
push
call
sbbl
movl
orl
andl
adcl
sbbl
xor
subl
cmpl
movl
movl
movl
jmp
movl
not
jb
pushl
pushl
call
xorl
sbb
add
addl
subl
movl
and
push
pop
sbbl
sub
mov
add
mov
lea
mov
mov
mov
sub
and
mov
xor
or
xor
mov
xorl
xor
xorl
shr
subl
shl
or
add
mov
cmpl
movl
mov
jmp
mov
mov
jae
push
call
add
sbb
or
movl
and
movl
add
mov
mov
andl
xor
movl
shr
shl
adcl
or
push
orl
lea
adcl
push
adcl
lea
push
call
cmpl
mov
movl
jmp
movzbl
jbe
push
push
pushl
pushl
pushl
pushl
call
orl
addl
movzwl
sub
mov
movzwl
sub
mov
sub
movl
sub
mov
mov
subl
xor
subl
shr
mov
xor
shl
or
cmpl
mov
mov
mov
jmp
movl
mov
jne
call
add
sub
add
adcl
mov
or
movzwl
or
push
lea
sub
push
or
mov
mov
sbb
shrd
sbb
shr
xor
add
xor
or
sub
imul
mov
notl
mov
xor
addl
xor
or
xorl
lea
adcl
push
adcl
shl
subl
call
mov
mov
xor
shl
cmpl
mov
movl
mov
jmp
movl
jne
push
push
call
xorl
xorl
add
orl
and
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
push
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
adcl
or
movl
mov
jne
sub
mov
adcl
mul
ret
push
mul
cmpl
movzbl
movl
push
pop
jmp
mov
mov
je
push
push
pushl
push
push
push
pushl
call
mov
sbb
mov
not
movzwl
adc
mov
mov
add
mov
xorl
sbb
mov
adc
mov
xorl
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
pushl
call
test
jg
movl
movl
movl
push
dec
movl
mov
xor
mov
andl
push
notl
push
orl
push
call
sbbl
push
andl
push
and
and
push
subl
push
andl
call
cmpl
mov
movzwl
notl
movl
jmp
movl
jbe
push
push
pushl
call
neg
subl
dec
sbb
subl
xor
or
mov
sub
or
mov
mov
xor
or
cmpl
movl
not
jmp
mov
jg
push
push
push
push
call
sbbl
xor
movzwl
and
orl
xor
mov
xor
or
mov
movl
movl
or
movl
sbb
movl
mov
xor
or
sub
add
movl
cmpl
mov
mov
jmp
mov
movl
jg
push
push
pushl
call
dec
xor
inc
adc
movl
xor
add
xor
mov
adcl
movl
cmpl
mov
movl
jmp
mov
mov
jg
push
push
call
addl
mov
sbb
sbbl
mov
mov
sub
xor
xor
or
xor
movl
or
sub
sbb
mov
cmpl
mov
movl
notl
jmp
mov
movzbl
jg
pushl
call
xor
movzbl
sub
mov
mov
sub
add
adc
xor
mov
mov
mov
andl
or
or
mov
or
mov
sub
mov
mov
sbb
or
mov
xor
subl
xor
addl
and
adcl
and
cmp
movl
jne
cmp
jne
movl
decl
movl
xor
movl
adc
movl
xor
or
mov
sub
xor
movl
mov
and
mov
sub
adc
mov
orl
imul
subl
and
notl
imul
mov
xorl
pushl
or
imul
adc
xor
mov
movl
div
mov
xor
cmpl
movl
notl
mov
jmp
movl
je
pushl
pushl
push
pushl
push
call
sbb
adcl
or
mov
sbb
mov
add
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
neg
mov
mov
xor
sbb
sub
sbb
cmpl
movzwl
mov
movl
jmp
movl
jl
pushl
call
sbb
or
addl
and
sub
xor
add
mov
sub
dec
mov
sbbl
sub
addl
or
xor
adcl
pushl
pushl
addl
call
addl
pushl
call
movl
cmpl
mov
movl
not
jmp
mov
mov
jge
pushl
call
and
add
adc
xor
movl
adc
movl
xorl
movl
movl
movl
mov
mov
xor
mov
mov
subl
add
movzwl
mov
adc
add
mov
add
adc
and
xorl
mov
orl
and
mov
movl
movl
subl
movl
orl
movl
dec
cmp
jne
and
movl
mov
xorl
mov
subl
movl
mov
subl
call
andl
lea
mov
cmpl
movl
movzbl
jmp
movl
jb
push
call
adc
sub
and
andl
mov
xor
add
sub
imul
xor
sub
lea
mov
sub
mov
sbb
mov
add
mov
mov
decl
xor
shl
and
shr
movl
or
mov
or
mov
mov
cmpl
movl
mov
movl
jmp
mov
movl
ja
pushl
push
push
pushl
call
and
xorl
add
sub
addl
addl
cmpl
not
mov
jmp
not
jae
push
call
adc
subl
and
xor
add
adc
and
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
pushl
call
or
andl
and
sub
adc
mov
and
mov
mov
mov
shrd
shr
and
mov
not
mov
movl
xor
xor
andl
or
mov
sbb
mov
mov
orl
push
addl
pushl
subl
lea
andl
push
adcl
shl
orl
call
addl
lea
addl
push
mov
mov
sbbl
lea
orl
push
mov
orl
lea
adcl
mov
adcl
mov
mov
push
call
subl
push
andl
push
pushl
xorl
call
andl
mov
or
mov
and
mov
cmpl
mov
movl
mov
jmp
mov
jg
push
pushl
push
push
push
call
sbb
xor
or
mov
adc
xor
adc
mov
shr
not
shl
or
sub
mov
or
xor
mov
notl
lea
xor
mov
lea
movzbl
or
mov
cmpl
mov
movl
movl
mov
jmp
movl
movl
je
push
call
or
add
mov
or
mov
xor
inc
add
not
mov
mov
and
mov
cmpl
mov
mov
mov
jmp
movl
mov
jne
push
call
or
sbb
addl
add
orl
mov
mov
sub
sub
movzwl
sbb
mov
and
sub
cmpl
movzbl
mov
movl
jmp
movl
jae
pushl
call
add
add
movzbl
add
add
movl
add
lea
andl
xor
cmpl
mov
mov
movl
jmp
mov
jg
push
pushl
pushl
push
push
call
or
adc
xor
mov
adc
mov
movl
movl
movl
cmpl
movl
not
jmp
movl
not
jle
push
call
subl
not
orl
and
and
mov
or
mov
movl
mov
mov
add
mov
not
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
cmpl
movl
mov
movl
jmp
movl
jbe
push
pushl
push
pushl
push
call
adcl
sbb
sub
adc
mov
xor
mov
mov
mov
sub
xor
movl
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
push
pushl
pushl
call
adcl
notl
dec
add
subl
sbb
not
sub
movl
mov
subl
mov
xor
xor
mov
xor
and
adc
mov
sub
xor
or
and
cmpl
mov
mov
not
jmp
mov
jl
push
push
call
inc
xorl
and
sub
sub
add
mov
add
xor
mov
or
movl
movl
mov
sbb
mov
add
xor
sub
adcl
mov
or
imul
adc
xor
mov
or
div
subl
sub
and
mov
movl
sub
movl
movl
mov
mov
adc
movl
cmpl
movl
mov
movzbl
jmp
mov
movzbl
jg
pushl
push
push
push
call
or
xor
or
or
mov
sub
add
inc
movl
mov
sbb
mov
movl
movl
mov
xor
mov
imul
adc
add
xorl
and
adc
sub
cmpl
mov
movl
mov
mov
jmp
mov
je
pushl
push
push
call
add
adc
neg
and
not
mov
sub
or
mov
mov
cmpl
mov
movl
mov
movl
jmp
movl
jne
push
pushl
push
call
inc
or
dec
sub
adc
adc
or
add
sub
add
mov
xor
adcl
div
not
mov
sub
and
mov
add
addl
mov
cmpl
mov
mov
mov
jmp
mov
mov
jle
push
push
call
add
add
sbbl
subl
xorl
movl
movl
dec
movl
cmpl
movzbl
mov
jmp
mov
jne
pushl
pushl
pushl
push
call
sbb
orl
movzwl
adc
add
mov
mov
add
mov
xor
add
mov
andl
xor
movl
div
add
and
mov
or
cmpl
movl
mov
jmp
movl
movl
jg
push
push
push
call
mov
sbb
mov
add
mov
movzbl
sub
subl
decl
adc
cmpl
not
mov
jmp
mov
movl
jae
push
push
push
push
call
xor
sbbl
mov
sbb
mov
inc
mov
mov
sub
sbbl
cmpl
mov
movl
mov
jmp
mov
movl
jg
pushl
call
mov
adc
mov
mov
adc
mov
mov
xor
xor
or
mov
sub
sub
adcl
mov
and
movl
movl
movl
and
movl
mov
sub
mov
orl
xor
sbb
xor
push
xor
pop
orl
div
mov
andl
xor
div
mov
or
sub
xor
mov
xor
movl
inc
mov
movzwl
sbb
mov
xor
div
imul
adcl
xor
xor
sub
imul
xor
dec
mov
adc
movl
cmpl
movzwl
movl
mov
jmp
movl
mov
jg
pushl
push
pushl
pushl
pushl
pushl
push
push
pushl
push
push
call
adc
xor
mov
adc
mov
mov
xor
mov
xor
or
xor
mov
movzwl
sub
or
or
movl
movl
cmpl
mov
movl
movzwl
jmp
mov
movl
ja
pushl
call
xor
dec
adc
movzbl
sbb
xorl
mov
and
mov
xor
subl
div
mov
sub
mov
orl
imul
xor
add
mov
or
add
xor
sbb
mov
sub
movzbl
or
mov
mov
movl
cmpl
notl
mov
mov
mov
jmp
notl
mov
jg
pushl
call
notl
adc
adc
sbb
movl
mov
or
and
notl
and
or
xor
cmpl
mov
mov
movl
jmp
movzwl
mov
jg
pushl
push
pushl
call
movzbl
sbb
add
negl
sub
dec
mov
movl
movl
movl
cmpl
movl
movl
movl
mov
jmp
mov
jb
pushl
push
push
call
mov
and
mov
neg
xor
andl
and
movl
mov
xor
and
add
xor
add
or
or
cmpl
notl
movl
mov
movl
jmp
movl
jle
push
pushl
push
push
pushl
pushl
pushl
push
call
adc
mov
add
or
sub
neg
sbb
sub
mov
inc
movl
cmpl
mov
movl
mov
jmp
mov
mov
jne
push
pushl
call
decl
decl
sbbl
and
movl
movl
movl
xor
mov
shr
xorl
sub
cmpl
movl
mov
mov
mov
jmp
mov
movl
jbe
pushl
pushl
call
add
xorl
mov
sbb
and
adc
or
xor
mov
lea
sbbl
push
adcl
call
addl
mov
adc
or
cmpl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
sub
mov
xor
or
sub
imul
negl
sbbl
and
mov
orl
or
xor
and
lea
adc
mov
movl
movzwl
xor
movl
movl
xor
xor
or
movl
movl
and
movl
cmpl
mov
not
movl
movl
jmp
mov
notl
jg
push
call
sbb
orl
xorl
add
xor
xorl
xor
xor
xor
mov
sub
or
movl
sbbl
movl
mov
mov
mov
sub
xor
mov
sub
and
cmpl
movzbl
movl
jmp
movl
movl
je
push
push
push
push
push
call
sub
or
notl
sub
xor
add
add
mov
sbb
sub
and
sub
or
mov
sbb
lea
mov
mov
add
mov
add
mov
mov
imul
sbbl
and
cmpl
mov
mov
mov
movzbl
jmp
notl
mov
jbe
pushl
pushl
pushl
push
pushl
pushl
call
xorl
add
movzbl
adc
not
or
imul
mov
lea
mov
addl
movl
movl
movl
movl
mov
sbb
mov
or
mov
movl
xor
andl
xor
sbbl
mov
call
cmpl
movl
movl
movzbl
movzwl
jmp
movl
movl
jb
call
sub
and
and
add
adc
subl
sub
sbbl
mov
mov
sub
mov
mov
adcl
xor
xor
mov
call
xorl
or
or
sub
mov
or
mov
andl
xor
xorl
xor
mov
call
mov
cmpl
movl
mov
movl
jmp
movl
jbe
call
or
xor
inc
or
andl
cmpl
notl
mov
jmp
mov
movl
je
push
pushl
call
mov
mov
and
sbb
not
mov
sub
sbb
or
and
mov
movl
mov
mov
xor
xorl
xor
addl
mov
mov
xor
mov
xor
or
mov
sub
mov
movl
mov
mov
movl
call
cmpl
mov
movl
mov
jmp
movl
movl
ja
push
push
call
and
addl
adcl
movzbl
xor
or
mov
adcl
or
mov
or
subl
push
push
subl
push
andl
push
orl
call
movzbl
mov
cmp
movl
jne
mov
sub
mov
mov
xorl
mov
subl
xor
xorl
xor
mov
call
adc
mov
add
mov
xor
mov
mov
incl
xor
addl
xor
xorl
mov
xorl
call
or
and
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
notl
jmp
movl
mov
jle
pushl
push
push
pushl
call
negl
addl
orl
adc
sbbl
sbbl
not
push
push
not
mov
or
movl
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
sbb
and
or
xor
xor
mov
sub
add
add
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
je
add
mov
mov
pop
pop
movl
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shld
shl
ret
xor
mov
addl
xor
and
shl
ret
xor
xor
ret
