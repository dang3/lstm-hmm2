push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
or
mov
mov
jmp
rcl
fmul
rcr
add
mov
mov
jle
add
fld
fcom
enter
leave
cld
icebp
fmulp
sar
rcl
mov
nop
fsub
nop
cld
jmp
leave
ss
xor
neg
aad
int
fnsetpm(287
lock
in
cli
sti
jmp
xchg
in
cli
fxch
out
leave
icebp
idiv
iret
ds
lock
repz
enter
out
fildl
ret
sub
shl
xlat
fdiv
stc
aas
adc
call
fmuls
repz
mul
ret
into
jmp
loopne
iret
lock
in
repnz
into
sub
sti
ljmp
int
into
out
rorb
fimull
div
aam
hlt
cmc
aad
ss
int3
rcl
rol
idivb
icebp
les
out
sti
xchg
jmp
jecxz
xor
shl
fcomi
cmp
ret
jmp
sub
clc
in
orb
enter
cli
repnz
sti
hlt
ror
add
mul
cmc
dec
in
mov
fucomp
filds
aad
int
sar
sti
xor
test
test
lds
jmp
shl
xor
cmp
cmp
sarl
hlt
jmp
loopne
fdivr
fldl
xor
test
out
std
aam
stc
fucom
loope
repz
jmp
fsubrp
int
xchg
fdiv
call
xor
lock
repz
shr
rcl
fmuls
loopne
and
xlat
call
das
out
xlat
hlt
adc
shr
std
repnz
test
in
lret
jmp
rol
hlt
int
lds
div
shl
icebp
std
loope
in
orl
lock
sar
ss
aaa
repnz
xor
lock
hlt
xchg
mov
nop
jmp
int
clc
idivb
cmp
xlat
sti
aas
stc
std
testl
div
out
xor
fmul
cmp
aas
out
into
sar
fidivrl
icebp
aam
in
test
nop
in
inc
rolb
xor
out
cmp
jecxz
fsub
aad
in
clc
cli
out
xchg
in
out
out
shrb
into
cmp
ret
test
fstp
mov
leave
sti
aad
mov
fsub
in
shl
xor
xor
enter
fstpt
cmp
sti
rcl
shr
out
cld
xchg
mov
lret
mov
icebp
lret
call
shl
fsin
fdivp
sar
in
loopne
enter
std
mov
xlat
xor
sar
lret
lret
lock
std
loopne
icebp
fsqrt
imul
xchg
into
test
repnz
ljmp
lock
sarl
ret
cli
neg
jmp
ffreep
cmp
lret
ret
repnz
jmp
out
cli
call
std
cmp
stc
shl
std
fld
fcmove
out
loopne
in
sar
ror
xor
ds
cmp
rolb
rolb
lea
jmp
out
xor
cmp
loopne
rol
in
cmp
in
mov
out
call
int
sub
cld
std
lock
iret
repz
stc
shl
idiv
ljmp
sti
fcomip
loopne
repz
jmp
icebp
out
rcl
in
clc
cli
sti
fcomip
xchg
icebp
fld
orb
mov
cmc
in
aas
aaa
out
fsub
rcr
shr
in
jecxz
jecxz
in
out
xchg
shrl
cmc
shll
icebp
rcr
hlt
repz
std
addl
mov
repnz
idivb
fmul
shlb
xor
xchg
jmp
xchg
test
mov
loope
leave
ret
int
aam
icebp
testl
mov
fiadds
loope
out
fsub
icebp
xor
repnz
int
xor
mov
xchg
out
fmull
aaa
cld
stc
xlat
aam
rcl
idiv
cli
jecxz
ret
clc
out
clc
mov
mov
into
into
icebp
out
cmp
loopne
ds
in
repz
repz
loop
xchg
out
in
xor
repz
leave
int3
int
std
sar
mov
enter
ror
ror
into
call
xor
mov
sbb
mov
mov
orl
push
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
push
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
adc
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
jmp
xlat
iret
into
fst
xor
mov
data16
jle
lock
std
into
lock
in
stc
rcr
repnz
jmp
out
test
shr
clc
icebp
clc
loop
out
fdivrl
cmp
cmp
test
loopne
fsubr
loope
hlt
nop
call
xor
fyl2x
jmp
into
int3
neg
out
iret
into
div
fsub
xchg
call
out
call
aaa
in
xor
std
neg
testb
vpmullw
loopne
jmp
fcmovu
test
int3
shr
stc
out
sar
fdecstp
cmp
fnclex
int
ret
sbb
int3
int3
int3
iret
jmp
sub
fnsave
not
fcmovu
faddl
fprem
mov
lret
xchg
rcl
in
enter
sti
in
cmp
testl
mov
in
loop
out
shl
icebp
repz
ds
cli
xor
icebp
sar
xchg
in
xchg
jecxz
jmp
out
call
out
leave
or
icebp
repz
jmp
loop
out
stc
lret
icebp
dec
loope
hlt
ljmp
rcl
repz
test
mov
mov
clc
call
cld
jecxz
iret
xchg
xor
divl
in
fcmove
fdivr
aam
cli
cmpb
lock
lret
ljmp
xchg
into
imul
ss
std
sarb
lret
lret
int
aad
shl
mov
stc
mov
in
jecxz
hlt
xchg
repnz
hlt
sub
lret
int
lret
in
aad
cmp
fnstcw
mov
in
sti
dec
jmp
lret
in
int3
ss
lock
testl
fdivr
in
mov
test
xor
xor
cmp
cli
loop
fadd
ds
lret
out
mov
in
aad
lds
jmp
cmp
aad
iret
int3
loop
cmp
xchg
clc
orb
or
jmp
out
loopne
shl
clc
ror
icebp
in
test
sti
leave
lret
ror
orb
repnz
in
fxch
in
lret
cmp
loope
fneni(8087
xlat
leave
neg
fiaddl
out
in
call
xor
cld
int3
aas
cmp
loope
neg
hlt
mov
into
jmp
roll
clc
cli
int
ljmp
icebp
sbb
clc
jecxz
sbb
ffreep
icebp
in
loop
mov
repz
in
fidivl
test
ret
mov
into
in
mov
loopne
xor
aaa
in
cmp
fsubrp
inc
cli
cmp
xchg
fst
enter
and
xchg
ror
cmp
clc
std
int
icebp
ds
out
cli
int3
into
int
out
fmul
fdivr
cmc
fmul
out
idivl
in
loopne
aas
cmp
not
fidivrl
les
sar
ljmp
in
cmp
xlat
icebp
cmp
cmpl
xchg
in
test
adcl
xor
rol
shr
clc
filds
sti
cmp
iret
in
std
call
enter
iret
lret
cld
cmp
out
aas
aad
sar
test
in
xchg
rcll
fnstenv
cmc
flds
cmp
sar
cmc
fstp
out
std
loopne
adcb
out
ss
shr
stc
xor
aad
fmuls
and
out
out
int
out
stc
cmp
hlt
loopne
out
out
faddl
clc
out
cmp
ljmp
out
cli
clc
cmp
in
int
lock
cmc
call
iret
repnz
out
xor
in
sti
lock
imul
in
cmp
fcomi
aas
cmc
test
out
cld
enter
int
rcr
into
fmul
int3
idivl
idivl
hlt
aam
int
out
iret
out
lret
jmp
int3
call
shl
ror
shl
fidivl
fstp
sarb
cmc
enter
loop
mov
jmp
in
fxtract
cmp
out
repnz
cmp
int
xchg
fdivr
lret
in
ljmp
jmp
out
ljmp
sarl
cmp
testl
cld
in
xchg
xor
stc
ret
repz
repnz
sar
dec
roll
sbb
jmp
iret
xor
cmp
fcom
hlt
into
adc
add
mov
fadd
leave
int
bound
inc
aad
pop
pop
mov
pop
jle
movsl
add
inc
out
xchg
loop
enter
xchg
xchg
mov
in
lret
lret
cmp
stc
into
sarb
cmp
ljmp
ffreep
ljmp
ljmp
rol
ret
cld
and
aad
in
aad
cli
in
call
leave
xlat
ss
rcr
sti
fildl
clc
lock
cmp
jecxz
orl
adcl
cs
iret
int3
call
adc
ds
sti
in
mul
cli
out
xchg
jmp
ret
xor
ss
int3
lock
cmp
in
in
dec
lret
xchg
sub
loop
leave
lret
out
in
jmp
ffree
fcom
loop
lret
int
mov
nop
lea
repz
neg
out
repz
xlat
rcl
cli
fsub
rcl
test
loopne
xor
cmp
das
lock
dec
aad
rcr
hlt
hlt
ljmp
out
xchg
hlt
out
mov
ror
xor
int
fmul
aas
aad
cmp
repz
rol
mov
jmp
repz
enter
ss
repz
icebp
in
xor
out
cli
std
cli
fadds
xchg
or
fnstcw
int3
aas
sub
sbb
test
xlat
fisttps
sub
into
aam
cli
loopne
dec
hlt
addl
loopne
loopne
lret
jecxz
lock
loope
in
out
ds
incl
sar
loop
sti
mov
int3
loope
mov
cmp
iret
ss
cmp
cmp
cmp
leave
fadd
out
xchg
std
xchg
mov
rcl
sub
xor
aaa
not
fildl
repz
mov
testb
rclb
ror
fyl2x
aam
out
shl
shl
xlat
ret
lret
clc
clc
ljmp
clc
xor
mov
cmp
fdivrp
hlt
orb
loopne
mov
in
shr
fst
fnstcw
idiv
aas
xor
stc
xchg
leave
in
repz
aam
xchg
call
jmp
out
stc
jmp
and
movb
and
push
out
in
jmp
jmp
aaa
iret
iret
cmc
rolb
cli
inc
mov
xor
fidivrl
lret
jmp
loope
addl
xchg
shl
cmp
ss
stc
fcomip
rolb
out
in
in
mov
or
out
xlat
cmp
cmp
ljmp
mov
loop
loope
or
repz
in
in
fadd
sarb
ss
cmp
clc
in
test
rcl
icebp
dec
int3
aad
mov
loope
mov
jmp
fcom
in
cmp
fdiv
cli
fcomp
aad
call
enter
mov
xchg
fucomp
cmpb
aad
in
int3
repz
ror
aam
shl
ffreep
adc
call
call
fadd
repz
lret
fcomip
lret
rolb
aam
test
mov
repz
fcomi
cmc
int3
cmp
int
in
les
cli
cli
in
loope
repnz
jmp
ret
ss
loope
ret
aas
fsub
mov
mov
std
ljmp
call
aas
cld
flds
xor
sti
sti
test
std
loope
sub
cmc
hlt
out
imul
rol
in
sbb
xchg
cmc
clc
orb
aam
div
out
enter
iret
cmp
ljmp
lock
std
ljmp
into
jecxz
jmp
cmp
fmulp
call
std
fnstsw
fcom
sar
in
xlat
call
mov
mul
rol
xor
clc
cmp
stc
repz
lock
fcmovne
enter
ljmp
jmp
rcr
jecxz
aam
jmp
ds
cmp
fucomi
ljmp
hlt
cmp
sarl
lock
ds
ret
xlat
stc
hlt
aam
faddp
jmp
fucomi
xchg
mov
out
xor
jmp
cld
repnz
loope
sar
sbb
incl
mov
mov
sub
and
mov
mov
and
mov
orl
xor
xor
add
mov
add
jmp
rcl
lret
fst
jmp
push
movsl
add
ds
lret
int3
add
int
repz
loopne,pt
lret
fsub
neg
mov
aam
mov
out
mov
div
shl
in
jmp
cmp
fsubp
cld
sti
shl
fcmovbe
mov
mov
out
rorb
ret
lret
sti
aad
cmp
sub
fnstsw
filds
int
leave
lock
and
in
fnstenv
ljmp
fadds
mov
mov
mov
jmp
out
in
repz
fcmove
shl
ret
lock
loop
in
in
int
xchg
in
mov
jecxz
ret
cmc
ljmp
repz
aad
adc
cli
lds
call
in
aaa
ror
in
lret
repnz
cmp
neg
fsubr
decl
mov
nop
cli
int
int3
cmp
ret
cmp
fdivp
int3
adc
movb
movb
xchg
in
jmp
out
lock
aad
cli
clc
and
cmpb
leave
out
shl
ljmp
ret
stc
stc
cs
xlat
idivl
in
fiaddl
aad
mov
xlat
lea
mov
enter
cmp
cld
in
ds
std
loope
loopne
fmull
mov
in
rclb
fsubr
aam
icebp
rcl
xlat
add
shl
rcl
leave
mov
and
in
addb
fmul
call
sar
shl
loop
cmc
mov
xor
xor
out
in
rcl
xor
loope
call
movl
xchg
hlt
out
ret
xor
std
bnd
test
cmp
in
fldl
lret
out
test
repz
out
jmp
not
or
iret
repz
fucompp
clc
loop
les
std
test
int
divb
sbb
ror
ret
out
ret
std
xchg
sub
cmp
cmp
cmp
stc
fcom
shl
cmc
and
incb
shrb
in
out
call
aaa
stc
in
test
fiadds
out
mov
call
add
aaa
into
xor
cmp
roll
fdivr
cmc
test
out
shl
icebp
sub
iret
lret
out
fsubrp
enter
loope
div
std
cld
aad
enter
icebp
nop
lret
mov
out
xlat
aam
aad
icebp
into
repz
fnstsw
out
icebp
sar
out
in
call
mov
lret
dec
fmul
out
fcomi
leave
das
divl
cmp
jecxz
cld
fst
test
test
cli
fmull
mov
aaa
in
fnstenv
xor
cmp
repz
rol
and
out
in
test
test
mov
xlat
rcl
cmc
cld
cmp
imul
cmp
jmp
stc
cmp
test
icebp
int
div
shl
shll
xlat
cmc
sti
fdivr
cmp
cmp
clc
fld
out
lret
int3
mov
ret
out
ljmp
lock
std
cmp
aas
repz
repnz
lock
movl
fsub
nop
ss
clc
shl
aad
enter
aad
ret
stc
cmc
xlat
cld
sar
xchg
sti
fiadds
test
rcl
ljmp
fcom
fdiv
shr
icebp
loop
shl
sti
cli
loopne
lret
mov
cld
repnz
out
enter
hlt
enter
iret
shl
out
cmp
loop
in
cld
mov
xchg
test
stc
xor
cmp
loop
std
cmp
hlt
fucomip
call
lock
repnz
cmp
cmp
test
out
rcr
loopne
shr
aam
loopne
loop
fdiv
xlat
jecxz
mov
shll
cld
icebp
repz
loope
stc
cmp
std
addl
cmp
int3
fcmovu
hlt
cli
fmul
loop
cld
aad
mov
fucom
and
rorl
shl
lret
add
movl
jmp
xchg
repnz
neg
cmc
out
sti
icebp
aad
std
rolb
jecxz
in
jmp
int3
repnz
icebp
cld
iret
cmp
cmp
test
out
enter
add
mov
jmp
int3
rcl
aad
int3
call
add
lcall
jle
xchg
lock
shl
in
sti
rcr
jecxz
ror
test
jecxz
sub
jecxz
xchg
lret
aas
sub
ss
fcmovnbe
shlb
out
repz
aam
rolb
jmp
shl
in
in
shl
stc
jmp
int
clc
jmp
aam
fcmovb
hlt
jmp
flds
fbstp
out
loopne
aaa
fcmovnb
fucom
aas
cmp
sar
cmp
fcoml
test
test
fcmovnu
clc
iret
sar
stc
out
xlat
in
out
ret
cmc
rorb
xchg
in
jmp
leave
sti
fadds
std
cmp
enter
test
mov
mov
popl
repnz
ds
aad
out
out
addl
mov
mov
xchg
out
cld
into
cmp
cld
icebp
in
std
xor
shl
loope
stc
in
mov
xor
fucomp
lret
clc
ret
cmp
cmp
in
repnz
shl
lock
fcmovu
in
faddp
mov
filds
aad
in
repnz
xor
rol
aas
adc
cmc
ljmp
out
mov
fdivr
in
fmul
clc
rcl
fsub
out
fld
xlat
stc
mov
sti
ror
loopne
sar
rcl
repz
cmc
lock
cmp
ljmp
out
mov
mov
lock
icebp
xor
jmp
aaa
fstp
cmp
fcmovu
into
std
shl
cmp
mov
and
into
roll
shrb
into
ret
ret
in
cli
cmp
lock
incb
rcl
test
in
test
out
stc
mov
xchg
rcr
mov
xlat
xor
repz
xlat
leave
cmc
aad
ffreep
call
out
repz
cmp
cmp
fdivr
lret
cld
cmc
cmc
std
out
enter
jmp
xchg
mov
int
aam
out
stc
enter
cmp
fdivp
shr
hlt
mov
ret
lret
mov
mov
out
mov
xchg
ss
cmp
cli
jmp
fsub
lock
ret
rolb
jecxz
and
xchg
mov
out
lock
fsubp
in
ffreep
in
xlat
add
out
test
lret
xchg
xor
ljmp
rolb
test
fndisi(8087
in
lret
loope
xchg
rorb
cli
sarl
repnz
ds
jmp
rcr
loopne
ror
lret
jecxz
mov
nop
out
mov
cmp
shl
cli
cmp
icebp
call
cmpb
repz
xchg
xlat
int3
in
out
cmc
fcomip
loop
test
lock
call
loopne
sti
ret
out
std
sar
out
nop
xchg
xchg
fbstp
lret
xor
aad
xor
fnstsw
out
cmp
sar
lock
repz
fists
ror
shlb
into
hlt
ss
lret
shr
aam
jmp
out
les
roll
xor
icebp
lret
les
xlat
leave
in
jmp
or
addb
fnstcw
call
fiaddl
lret
loop
or
xchg
repnz
out
jmp
divl
sub
in
hlt
std
fimull
test
loop
call
aas
in
lock
and
mov
sti
xchg
xchg
jecxz
icebp
fxch
xor
clc
call
iret
cmp
sar
loop
jecxz
loop
orb
loop
loope
ljmp
shl
loope
shl
hlt
adc
or
fucom
in
mov
ror
out
lock
xlat
ror
repz
mul
fcmovbe
cli
cmc
not
sti
std
ljmp
xchg
leave
lock
test
cmp
xor
cmp
cmp
ret
ret
cmc
fmul
loop
cli
leave
xchg
out
loopne
out
shl
lock
xlat
repz
shlb
stc
xor
test
mov
ljmp
enter
int
enter
iret
fsub
stc
fdivrp
lock
rol
out
mov
ljmp
out
vpmullw
cmp
enter
aad
test
loopne
incl
mov
in
xchg
xchg
cs
ljmp
in
aad
lret
fnstsw
aad
enter
fcmovne
enter
fdivrp
test
jecxz
movl
jmp
int3
rcl
fstp
fldt
jne
cmpsl
rcll
jle
lret
cmp
sar
lock
fcmovnb
ret
rcr
cli
loope
mov
fcmovnu
ljmp
out
out
cmp
cmp
aam
xlat
in
jecxz
in
call
fsubrp
out
call
loop
shll
shl
shll
cmp
loop
cmc
hlt
not
loope
cld
leave
in
loop
in
in
mov
stc
xor
in
cmp
fidivrl
cld
xor
icebp
mov
xlat
sub
std
out
xchg
cmc
in
cs
fdivr
out
jmp
rol
fadd
fucomp
loopne
jecxz
into
in
xchg
aad
xor
out
xor
repnz
sar
xor
lret
jmp
sti
mov
mov
xor
ss
hlt
in
cmp
clc
iret
cld
fcmovnb
loopne
vpxor
mov
loope
roll
div
stc
repz
into
aaa
shlb
fadds
std
sar
call
ret
icebp
stc
into
cs
imul
lret
jmp
cli
hlt
fildl
jmp
fmull
int
lret
sarb
ror
ds
adc
test
movb
jecxz
loopne
and
xor
enter
in
icebp
sar
cmp
fscale
repnz
loopne
fcomip
fcmovne
fildl
out
clc
in
enter
shl
sti
cmp
mov
ret
cli
fisttpl
in
test
int3
out
call
stc
repz
hlt
ret
test
cli
mov
stc
xchg
in
mov
lret
ljmp
leave
out
xlat
idivb
icebp
fcmovu
cmp
sti
imul
jecxz
cmp
loopne
cmp
out
int3
idiv
jmp
lret
lret
in
into
loopne
in
neg
fldl
jmp
sti
or
int3
das
out
sarb
cmp
xor
in
iret
ds
enter
loope
fmulp
call
xchg
cs
sarl
hlt
fnstcw
aas
clc
cmp
repz
xchg
repz
xor
ret
jecxz
lret
jmp
fcomip
sbb
shl
fabs
mov
rorb
loopne
aam
xor
lock
into
hlt
cmp
fcmovne
repnz
filds
fcomip
hlt
fnstenv
xor
cmp
out
idiv
add
sarl
fmull
faddl
rcr
ret
xor
aaa
out
cld
loope
sarb
fidivrl
filds
fdiv
in
cld
loopne
xchg
in
cmc
aad
rcl
jmp
cmp
xor
cld
cmp
cmpl
loopne
mov
repnz
out
jmp
cmp
fdivrp
in
repnz
call
decb
mov
enter
cmp
loop
loop
ret
mov
stc
cmp
lock
hlt
iret
xchg
xchg
sub
repnz
out
out
sub
xchg
add
fildl
mov
ret
jmp
aaa
in
addl
xlat
loope
in
jmp
orb
lock
cli
out
out
lret
enter
sti
xlat
aad
in
aam
enter
jmp
in
xor
aaa
jmp
out
fidivrl
aam
ds
repnz
loope
call
icebp
xchg
rcl
test
enter
ljmp
icebp
repnz
test
rcr
mul
mov
ljmp
out
out
int3
not
in
lret
in
repnz
addb
out
ljmp
nop
iret
repz
cmc
not
int3
iret
fidivrs
cmpb
out
aas
cmp
test
mov
xchg
lock
in
shlb
neg
shr
stc
out
cld
xlat
xchg
loop
mov
mov
std
add
rclb
shl
cmp
aam
sarl
test
cmp
fimuls
icebp
fsub
xchg
aam
out
fcmovnu
jmp
call
hlt
loope
aam
or
addl
xor
in
int3
rolb
ret
sar
testl
int3
iret
xchg
shrb
xor
sti
fldz
shr
out
repz
stc
cmc
xchg
int
rolb
cmc
xor
in
enter
cmp
fucom
ffree
fcmovb
mov
in
mov
lds
xor
in
cmc
loopne
inc
in
mov
xor
add
mov
mov
mov
mov
mov
mov
jmp
iret
xlat
rcl
fcomp
iret
bound
jnp
subb
sbb
movsl
add
hlt
ds
ret
mov
mov
test
lret
mov
mul
shl
in
in
cmp
in
xor
fstp
cmc
mov
jmp
jmp
fsub
mov
cli
ljmp
cli
rcl
fldl
addl
orl
in
icebp
cmp
in
shl
mov
sub
lds
repz
imulb
ret
aam
out
lret
cmp
fstpt
rcr
out
or
test
leave
roll
imull
call
rcl
jmp
aam
ffreep
fmul
test
mov
fmuls
mov
lock
int3
lret
ss
repnz
sub
out
orb
shr
leave
enter
in
out
icebp
in
loop
in
hlt
cld
xchg
rcr
jmp
iret
out
in
icebp
repnz
shll
aad
int3
sar
cmp
aad
xchg
mov
nop
jmp
mov
lret
repz
neg
xor
repnz
and
lock
call
xor
repnz
xor
int3
repnz
out
sbb
sti
fsub
int
cmp
fnsetpm(287
out
in
test
jmp
sar
int3
jmp
rcr
cli
stc
iret
out
fisttps
in
cmc
inc
xor
mov
imul
std
ror
testl
in
repnz
xchg
xchg
in
cmp
ljmp
loope
fcomip
lock
test
xchg
ljmp
fsubr
shll
hlt
neg
xlat
leave
lret
lret
jecxz
test
incl
xchg
and
in
mov
lock
lret
leave
clc
testb
repz
lret
xchg
jmp
xor
in
fdiv
fcomp
sti
stc
int3
adc
aaa
aas
lock
mov
out
sub
mov
xchg
hlt
xor
clc
repnz
lock
cmp
repz
test
cmc
xchg
lret
lock
lret
lret
jmp
faddp
sar
out
addl
out
addl
cmp
shr
cmp
in
test
cli
cmc
test
out
xchg
loopne
in
int3
out
shr
repnz
ror
lret
cmp
addl
vpmaxub
int3
or
fisttps
les
out
xor
xor
cmp
std
ror
loope
xor
fisttpl
lret
mov
mov
shll
xor
hlt
hlt
in
loope
inc
loope
rcl
mov
fdiv
test
repz
nop
jmp
ret
out
in
leave
icebp
jmp
sar
aas
ret
int3
cmp
movb
in
vpsrlq
cld
hlt
test
mul
xchg
fucom
sti
aam
loopne
xchg
out
lock
in
jecxz
aad
cmp
lret
icebp
out
test
fadds
xchg
xor
lds
clc
in
cmc
fdiv
shl
jecxz
loop
fimull
lret
mov
repnz
into
xor
cmp
in
cmp
in
in
sbb
leave
jmp
in
ljmp
in
cmc
cli
out
cld
ljmp
xchg
mov
lock
into
mov
icebp
fdivp
lock
out
xor
aaa
flds
call
int3
mov
fucomp
mov
jecxz
icebp
jmp
xor
cmc
cmp
rcr
rcl
aam
test
in
int3
enter
cmp
fmulp
int
iret
imul
xor
cmp
call
loope
cmp
cli
xchg
jmp
decb
sub
out
rcr
or
rol
aad
out
into
test
or
aam
idiv
fcmovu
into
fcmovnbe
sti
in
in
cld
rcl
push
iret
out
fst
out
sbb
xchg
xchg
in
call
cs
aad
fstp
out
fildl
mov
jmp
xchg
xchg
cld
lret
int
in
clc
cmp
shrl
aaa
idiv
cmp
jecxz
ffree
xchg
mov
test
int3
mov
mov
decb
int
stc
aam
lock
ds
cmc
hlt
mul
ret
loope
int3
filds
into
mul
in
cmp
xor
out
fidivl
std
std
cli
shl
cmp
mov
aas
ret
aad
aad
mov
sbb
add
aas
aam
jecxz
std
iret
xchg
xchg
call
xor
int
out
aaa
lret
sub
test
adc
cmp
fmull
xchg
cmc
xor
sti
leave
cmc
xlat
int
cmp
ret
out
lock
out
xchg
nop
test
call
leave
fcmovnb
int3
jmp
repnz
cmp
lret
cmp
rclb
hlt
fdivr
cmp
rcr
repnz
sarl
iret
loopne
leave
add
ffreep
and
xchg
repnz
leave
xor
lret
fsubr
cli
xor
cmpb
sti
shl
loope
decb
loope
mov
into
in
ret
cmp
ds
into
add
mov
ret
in
test
loop
leave
mov
imul
out
out
out
cmp
out
in
dec
int3
fmul
in
lock
cli
rorb
addb
xor
das
in
xlat
repz
cmp
ds
mov
mov
call
repz
aam
rcl
cmp
aad
rol
cli
ffreep
sub
out
out
shl
mul
in
xor
int3
sub
sti
fnsetpm(287
rolb
test
cli
xchg
cs
int
std
lock
aas
cmp
aas
ret
push
inc
clc
stc
imul
leave
int
xchg
ljmp
in
or
fisttpll
jmp
into
ror
lret
mov
test
dec
hlt
fcomip
fstp
sti
cmp
aam
loope
orl
loop
out
ss
cld
out
iret
std
jmp
out
out
jmp
lret
xor
sarb
not
in
sti
rcl
neg
sbb
cld
aad
popl
call
xor
cmp
aaa
cmp
cmp
lock
in
fsubp
stc
mul
aas
mov
ljmp
clc
cmc
ror
ror
repz
cmp
fcmovnbe
neg
cmp
add
pop
mov
xor
call
fidivl
loope
lock
jmp
sub
cld
sti
shl
call
xor
shl
iret
xor
mul
fstp
cmp
fadd
in
test
mov
jmp
xchg
loopne
loope
xor
shr
aas
loop
cli
aad
sti
incl
dec
out
in
mov
leave
loope
not
in
in
jmp
int
cmp
repz
loope
in
enter
orl
icebp
div
enter
cld
aad
xchg
std
mov
cld
mov
mov
out
repnz
jecxz
lock
repnz
aas
lock
adc
in
fmul
out
lret
test
ret
sub
out
cld
not
cmp
loope
aad
fnclex
cld
shl
mov
in
std
repnz
imulb
int
ljmp
aad
inc
rol
sti
loopne
jecxz
xchg
xor
cli
out
les
leave
xor
loopne
hlt
cmp
lret
ljmp
std
cs
in
int3
cmp
loopne
idivl
sti
mov
xchg
orl
lret
xor
in
sbb
test
cli
xchg
in
in
fsubrp
nop
sbb
xor
cmc
sub
lock
into
test
dec
out
jmp
decb
mul
xor
rcl
shl
fsin
out
loope
cld
lret
rcr
aad
cmpl
cmc
sti
mov
call
cmp
cs
jmp
sarl
loopne
lock
jmp
mov
mov
ljmp
icebp
lret
loopne
int
not
shl
mov
out
jmp
xchg
mov
jmp
cmp
leave
xlat
shl
cmpb
repz
leave
jmp
call
out
test
hlt
into
enter
aam
ss
icebp
cmp
repz
test
mov
dec
rolb
ss
stc
cmp
leave
stc
repz
stc
test
hlt
loopne
cmp
sbb
cmp
xor
les
shll
cli
idivl
sarb
lret
int
fiaddl
mov
enter
jecxz
xchg
out
lea
cli
shr
fsincos
loopne
not
repz
cmpl
call
add
jmp
rol
ror
rcr
fcmovnu
mov
test
lahf
and
movsl
add
in
int3
out
les
cmp
aaa
ljmp
fsub
out
fcomi
rcr
shr
sti
mov
into
ret
cmc
int
iret
cmp
fdivp
vmaskmovdqu
cmp
out
int
fxch
lret
xchg
out
out
fucomp
lret
not
call
sarb
ds
jmp
clc
roll
testb
adc
shl
hlt
ret
into
fcmovu
fsubp
addb
fiaddl
ljmp
shr
in
repnz
cmp
ds
aad
inc
sti
aas
repz
fisttpl
call
loopne
jmp
ljmp
icebp
mov
out
in
int
loopne
repz
das
enter
out
std
out
cmc
ljmp
xchg
enter
shl
fsubp
shl
test
aaa
jecxz
rcl
sti
enter
lret
fcomi
leave
sub
out
cld
iret
cli
iret
aam
rol
xor
out
in
fsubrp
aad
fdivrp
in
test
test
enter
loopne
jmp
fdivl
rolb
std
cmc
ljmp
mov
decl
lock
call
ror
in
leave
ljmp
xchg
mov
jecxz
ljmp
cmp
cmp
out
call
enter
ljmp
sti
repnz
aam
fcmovnbe
aas
aaa
cmp
cmc
fdivr
or
int
leave
test
loop
in
mov
xor
hlt
int3
repnz
aam
shl
loop
in
mov
xchg
or
int3
aad
fdivl
in
cld
clc
sbb
fdivr
mov
cli
xchg
out
mov
repnz
out
stc
shl
fidivrl
adc
ret
clc
loope
out
sti
xchg
into
jmp
neg
ds
sar
in
cld
aas
iret
out
fcmovnb
ror
cli
in
leave
jmp
call
in
ror
rcl
call
in
cmp
into
std
aas
addl
rorb
shl
aaa
cmp
icebp
xor
lret
cmp
cmp
cli
mov
xlat
lret
int
call
mov
mov
cli
rcl
rcl
aaa
clc
repnz
out
icebp
loope
cld
jecxz
fscale
mov
in
fstl
lock
repz
aaa
clc
repnz
cmc
rcr
xlat
fcmovb
out
mov
filds
repnz
lock
aaa
cli
shlb
cmc
sarb
xor
std
in
loope
test
call
fisttpl
ret
call
int3
aas
loop
dec
xlat
out
ljmp
in
int3
cs
fdiv
out
into
sarl
ftst
sar
cmc
test
fiadds
xchg
ljmp
fcmovnb
std
icebp
xlat
cmp
sti
int3
filds
jecxz
cmp
in
lock
cld
in
jmp
in
out
icebp
cmp
cld
cmp
aam
fsubp
xchg
sbb
in
fisttps
fsub
out
hlt
shll
in
out
aaa
shll
rcl
fcmovnb
fadd
loope
and
loop
mov
in
jmp
fadd
out
cmp
shl
rol
aad
ret
incb
leave
in
out
mov
into
fcom
ljmp
fnstsw
loop
sar
out
mov
mov
out
loopne
cld
out
in
xor
fxtract
int3
hlt
stc
lret
rolb
out
clc
mul
addb
xchg
and
not
out
xor
add
shl
adc
std
ret
ret
leave
in
in
mov
repz
xor
sub
xor
fcmovnb
shl
cmp
fucom
mov
cmpl
loope
fsubp
icebp
addb
jmp
aam
out
jmp
inc
rol
xchg
jmp
fcomp
jecxz
test
ss
lret
in
cmp
xor
cmp
cld
enter
mov
xor
jmp
xchg
hlt
xor
std
int3
int
ret
loope
vpsadbw
cli
out
mov
inc
in
in
aam
ror
cmp
icebp
fxtract
xchg
mov
icebp
xchg
xchg
loope
xchg
aam
xor
xor
lock
test
loope
test
vpsubd
loopne
out
out
mov
mov
jmp
ret
leave
aad
fcmovnu
sub
clc
sahf
xchg
pop
daa
jle
movsl
add
jecxz
fcom
cmc
xor
out
jmp
loope
cmp
faddl
out
test
cli
lret
divl
rcr
into
int
idivl
in
cld
filds
sti
jmp
out
call
hlt
int
shl
jmp
xor
cld
fdiv
in
lock
in
mul
repz
cld
std
ljmp
xchg
xchg
xor
jecxz
mul
out
cli
cmp
in
sti
cmp
loop
enter
cld
decl
jmp
aaa
out
call
in
sar
sarb
out
faddl
int3
int3
call
rorl
aad
sar
aad
into
fmulp
cmpl
rolb
leave
fsubr
shr
aad
hlt
hlt
ss
cmp
lret
jmp
hlt
shl
fcmovbe
xor
std
loopne
lret
leave
out
jmp
nop
ffreep
fsubr
fcmove
cmp
out
lret
cmp
repnz
fsubr
in
aas
sti
out
lret
mov
xchg
lea
cs
into
rcl
loope
cmp
lret
sub
jmp
cld
xchg
aad
aam
clc
cmp
xlat
int3
loopne
in
rcr
into
fdiv
decb
loop
addl
in
fadd
cld
rcl
enter
in
repnz
xchg
in
loope
mov
stc
xchg
xchg
lock
in
repnz
xor
cmp
lret
leave
neg
sbb
fcomip
cld
jmp
loop
std
lock
in
xor
in
cmc
repz
sarl
cld
clc
icebp
fcomip
loop
std
fcomp
int3
out
xchg
xchg
shl
in
shlb
jmp
xor
lock
aas
ds
jmp
loope
fdivrp
int3
repz
jmp
xor
rcr
shl
lock
xlat
cmc
fadds
in
xchg
rol
iret
test
iret
cmp
cmp
sti
shl
add
sarl
decb
fucomip
out
shl
cmp
ror
aas
int
stc
cmp
cld
loopne
jmp
lret
std
jecxz
ror
mov
xor
leave
call
aam
loop
jmp
loop
fdivr
xlat
ret
xlat
lret
mov
sar
in
loope
xor
xlat
cmp
stc
aaa
fxch
cmp
int
in
std
enter
xchg
lret
in
int
out
shll
aaa
sar
ds
xlat
les
xlat
mov
lock
std
shl
out
idivl
cmp
cmp
out
in
hlt
rol
ret
ret
fimuls
cld
orb
sar
sti
jmp
rcl
loope
test
in
nop
std
int
in
jmp
vshufps
out
cmp
sarl
in
ffree
repz
imul
fdecstp
in
xchg
xorl
fxch
shr
repnz
cmp
repz
iret
test
jecxz
out
ljmp
int
enter
in
aaa
fdivrs
ret
xor
enter
xchg
ror
in
hlt
imul
lock
addl
rol
ljmp
xchg
repnz
aas
rol
repz
out
aam
cmp
ss
fsub
repnz
mov
jmp
xchg
call
ret
fnstenv
imulb
idiv
loopne
sbb
fidivrl
lret
ficoml
testb
fst
jmp
aad
ret
push
cmp
ffree
aad
sub
mov
repnz
hlt
ret
call
xor
loope
cli
addb
lock
mov
cmp
sti
into
sarl
ror
jecxz
repnz
vmovq
mov
jmp
neg
rol
int3
jmp
ljmp
in
clc
fiaddl
mov
std
test
fldlg2
shl
cmp
fldl
test
jmp
clc
add
xchg
cmc
shl
idiv
fldln2
cmp
shr
ds
cld
aas
sbb
out
out
fldl
and
out
xor
ljmp
faddl
jecxz
aad
in
xchg
out
in
mov
ret
clc
out
ljmp
lock
fiadds
xchg
and
mov
xor
iret
into
repz
in
aam
cmp
loop
cmp
hlt
ljmp
jecxz
mov
stc
vpaddsb
add
cmp
jmp
vaddsubpd
rcr
pop
push
xchg
fcmovnb
mov
jle
movsl
add
rcl
hlt
aad
loopne
hlt
into
sarb
addl
rcr
xchg
lret
xchg
int3
xor
hlt
aam
out
int
in
lret
ret
out
test
in
std
mov
jmp
decl
repz
rcr
hlt
icebp
fidivs
cmc
aad
fidivrl
lret
hlt
in
fsubp
test
in
jmp
hlt
repz
in
shl
and
ret
in
xor
jmp
int3
mov
ror
iret
in
lret
mov
aad
lock
shl
icebp
mul
cmc
enter
or
jmp
lock
enter
hlt
fnsave
int
ret
out
cmp
jmp
out
out
popl
loop
divb
xor
int
std
xchg
cmp
mov
addb
into
icebp
stc
cmp
rcr
fsubrp
icebp
in
cli
ret
in
out
test
mov
xor
in
sti
icebp
hlt
cmp
hlt
shl
vcvtdq2pd
xchg
incl
jecxz
adc
neg
lock
int
repnz
cmc
cld
jmp
mov
orb
lret
fnstcw
shl
repnz
loopne
lea
jecxz
loope
jecxz
xor
sar
iret
sarl
aaa
xlat
shl
lock
xchg
in
loop
lret
aam
repz
xor
int3
enter
aas
in
repnz
rol
out
jmp
repz
xchg
call
call
cmc
cli
out
std
not
mov
fucom
xchg
lock
out
out
fdivr
call
lock
and
cld
jecxz
clc
lock
mov
out
stc
leave
in
cld
fucomip
xor
lock
fadd
ret
rol
out
mov
int3
lret
out
out
clc
iret
cmp
xor
cmp
into
and
sar
mov
idiv
cld
xchg
xchg
sub
lret
cmp
jmp
in
cmp
mov
ljmp
int3
xchg
in
test
hlt
fdivr
loope
shl
aam
sti
ffreep
sbb
lret
ret
push
aad
in
stc
shlb
cld
repz
sar
xlat
ds
out
xchg
fcmovnu
rol
mov
std
faddl
xor
enter
fcmove
idiv
std
cmp
testb
rcl
incl
xchg
cmc
shr
shrb
fdivr
jmp
in
ljmp
aad
jmp
std
vpsubsw
lock
out
aam
sarb
int3
fmul
hlt
shl
idiv
fiadds
and
adc
hlt
in
repnz
out
xlat
in
rol
jecxz
in
in
loop
fadd
enter
out
fcom
lret
jecxz
xor
ret
in
icebp
sub
loopne
cli
leave
int
out
mov
loop
in
int3
xlat
hlt
out
sar
icebp
cmp
cmp
clc
roll
into
fmul
lock
rcl
xor
mul
cli
sti
stc
fcomp
fucom
ror
cmp
cmp
enter
loop
fisttpll
xchg
les
cmp
cmc
shl
fimuls
call
jecxz
cmc
lret
leave
clc
cmp
lret
sti
cmp
fcomp
loop
jecxz
mov
fisttpl
out
xlat
out
out
cmc
enter
out
cmp
cmc
out
fdivrp
clc
sbb
fmull
loop
int
aam
hlt
ljmp
or
in
fsincos
out
fsubr
enter
xchg
in
mov
aad
repz
cmp
cmp
repz
ret
mov
loope
xor
cli
cmp
out
cmp
aas
rcr
fidivrs
rcr
neg
call
clc
ror
out
orl
aam
shl
xor
stc
idivl
rol
stc
enter
out
into
clc
loope
out
out
cmc
icebp
ss
fsubr
cmp
cmp
fcmovb
aad
inc
call
jmp
in
fstp
mov
in
stc
repz
stc
xor
sti
in
add
leave
jecxz
cmc
cli
out
popl
lret
xor
out
fucomip
lret
clc
imul
cli
ret
fmulp
mov
xchg
call
ljmp
into
xor
iret
loope
test
and
add
add
add
xlat
fcom
fcom
fstp
outsb
push
mov
pop
and
pop
sub
jle
movsl
add
add
out
fcomp
vpaddb
loopne
shl
jecxz
xchg
loope
imul
xor
jmp
loop
div
xchg
sti
in
clc
jmp
mov
ror
div
int
repz
test
loopne
repz
loop
call
xchg
call
std
icebp
out
in
fcom
roll
sti
adc
call
xchg
loopne
leave
int
in
cmp
repz
sarb
rol
filds
mov
mov
loopne
mov
sub
out
jmp
xor
repnz
loop
int3
fucom
iret
icebp
rorb
lret
fucom
lret
xor
test
in
test
mov
jmp
mov
xor
sub
out
imul
cmp
rcr
in
cmp
rol
in
ror
sti
loop
in
iret
lock
enter
cmp
ret
cli
ffree
mov
test
leave
xchg
out
in
lret
ror
int
lret
cmp
aad
lret
cmp
shl
stc
incl
out
in
jmp
repz
in
cmp
in
in
fmul
cmp
neg
out
call
loop
mov
add
fptan
jmp
xor
sub
stc
enter
fiaddl
mov
out
div
in
shl
cmp
loopne
ret
rcr
call
loope
xor
fsubp
lock
faddp
aaa
out
lock
into
sarl
loop
ret
aad
not
vpavgw
orb
icebp
ret
fsubr
fxch
ljmp
cli
adc
xor
mov
in
hlt
not
xor
idiv
cmp
ret
and
lock
repz
div
ret
ror
repnz
fnstcw
xor
aad
test
std
rcr
mul
xchg
xor
out
loopne
loop
jecxz
sub
clc
cmp
shl
clc
clc
cmp
xchg
test
xchg
out
cmc
in
hlt
fmul
jmp
jmp
rcl
sub
mov
neg
std
into
xchg
icebp
fdivp
ror
enter
shr
stc
int3
fsubr
testb
cld
jmp
out
call
rol
shr
jmp
xor
repnz
shll
shr
fldl
call
iret
out
repz
int
out
sar
int3
shl
int
rol
xchg
addb
icebp
shl
fdivs
leave
shr
faddl
in
call
addl
loopne
ljmp
lret
iret
sbb
ret
call
sbb
lret
call
jecxz
sarl
fdivs
enter
lock
icebp
test
fsubrp
fsincos
in
into
decl
cli
enter
ffreep
lock
int
out
rcr
shr
xchg
mov
call
lock
sarl
in
out
test
ret
in
fcomip
cmp
mov
jmp
leave
mov
jecxz
fsub
in
neg
out
iret
aas
ffree
call
mov
add
loope
icebp
int
idivl
fdivl
iret
fmul
cld
not
loope
mov
stc
out
test
xchg
lret
das
hlt
xor
shr
ljmp
int3
fnstcw
xlat
leave
fucomi
int3
leave
or
leave
lds
fsubrp
sti
cmp
orb
xlat
jecxz
cld
leave
shr
mov
cmc
out
fld1
clc
in
fnstsw
adc
add
in
ljmp
test
sarl
cmp
repz
into
clc
fsincos
cld
rcr
ret
loop
int
int
loopne
mov
cs
lret
aad
cmc
not
cli
ljmp
clc
fdivp
cli
test
mov
into
repz
rol
in
iret
leave
cmp
lock
lock
in
sar
loopne
shl
in
fiaddl
xchg
sub
shr
fprem
int
dec
xor
loope
call
enter
call
xlat
shl
out
sti
fcmovb
lret
call
cmp
fsub
in
rcr
bnd
mov
loop
lret
call
cmp
out
aam
sti
idivb
aaa
shl
and
std
loop
orl
cmp
jne
mov
mov
xor
add
mov
mov
mov
jmp
ret
fstp
ret
frstor
mov
cli
sbb
jle
add
test
xchg
out
jmp
xor
xor
loopne
in
fcmovu
int3
vpinsrw
xlat
test
or
hlt
cmc
ljmp
loopne
cmpb
aam
fadd
repz
fisttpl
jmp
rorl
xor
call
sti
jmp
fiadds
imul
ret
mov
out
xor
shr
in
in
int3
shr
cmpl
repnz
lret
mov
int3
mov
in
lret
aaa
loopne
clc
shl
ret
rol
int3
inc
loopne
std
leave
in
into
lret
enter
xlat
jmp
fdiv
jecxz
xchg
test
cmc
xchg
dec
xchg
int
addl
ljmp
out
fcmovnb
adc
mov
rorl
lret
fucompp
cmp
out
repz
cmp
mov
test
jmp
nop
out
std
ljmp
std
cmp
repz
int
cmpl
and
mov
lock
mov
in
xchg
test
xlat
shl
cmp
into
fst
ss
repnz
orl
call
xchg
sub
ss
call
out
cmp
std
in
icebp
sti
xlat
xor
into
xchg
out
iret
out
clc
call
fcmovnu
repz
cmc
stc
stc
loope
not
xchg
sti
fsubp
lea
out
lock
stc
cmp
lret
aad
clc
rorl
out
jecxz
mov
sti
icebp
xchg
int
out
in
imull
out
into
ror
loope
xchg
xchg
stc
mov
fsubrp
fisttps
iret
shr
xor
xlat
fmulp
lret
and
sbb
loopne
out
and
out
enter
call
cli
into
cmp
jmp
jecxz
fsub
xrelease
sti
repz
icebp
ret
sti
ljmp
cmc
ds
ret
repnz
out
and
lds
loope
in
ljmp
call
fdivr
fdivp
test
fcmovne
dec
nop
decl
cli
xor
cmp
lret
ret
repnz
std
idiv
out
leave
test
ret
loopne
xchg
test
in
stc
fcomi
cmp
fstp
shlb
cmp
stc
loope
ds
xlat
mov
ds
jmp
in
hlt
jmp
xor
aaa
fcomip
cmp
cmp
out
sti
std
cld
testb
orl
lret
xor
rcr
icebp
fstpt
out
repnz
jecxz
stc
stc
and
in
loope
call
test
ds
cmpb
test
cld
sarl
out
clc
in
addl
ss
int
aaa
aaa
shll
sub
hlt
in
repnz
decl
iret
ljmp
fyl2x
out
leave
xor
out
idivl
cmpb
aaa
aad
std
out
or
sti
int3
sub
jmp
repnz
sti
into
stc
fdiv
in
fcomi
in
ret
or
xlat
call
call
jecxz
xor
sti
fsub
cld
neg
in
xlat
faddl
faddl
loope
loopne
shll
mov
fdiv
jecxz
mov
fucomp
in
out
out
xchg
leave
cld
rcl
iret
xor
out
jmp
aas
cmp
ret
sti
mov
lock
jmp
ffree
repnz
in
ret
call
fiadds
in
jmp
lret
divb
fdivrs
aam
filds
enter
int3
inc
shr
shl
call
repnz
icebp
cmp
repnz
fyl2xp1
enter
mov
xchg
out
int
fstl
aam
jmp
hlt
add
xlat
aad
std
test
sub
int3
test
inc
xchg
repz
hlt
icebp
call
in
xor
xlat
vpsrlq
fsub
repz
repz
lock
cmp
roll
cld
ljmp
int
xor
out
aaa
cmp
shl
loopne
mov
in
in
xor
test
das
fprem
lret
icebp
xor
cli
aam
rcr
repnz
hlt
out
lret
xlat
fsubrp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
jmp
aam
fistl
adc
jle
add
std
test
icebp
ss
cmp
sbb
jecxz
out
faddl
loopne
fmull
ret
jecxz
xor
in
call
repz
fcmovnb
cmc
loopne
int3
ljmp
xchg
loopne
int
stc
sti
std
flds
icebp
hlt
aas
loopne
in
fcmovnb
mov
addb
sti
cli
jmp
cmp
cmp
jecxz
icebp
sti
aad
fstp
test
jmp
rcr
xor
hlt
divl
xor
out
ds
xorb
call
loope
mov
test
loopne
frndint
in
lret
fld1
hlt
cmp
shr
cmp
test
fcmovbe
shr
jmp
xor
vpminsw
aaa
out
iret
fsubp
iret
repnz
sar
cld
mov
int3
lock
xor
icebp
das
jecxz
aaa
leave
lret
ror
cmp
ds
ljmp
or
out
cmc
xor
call
sti
test
test
loope
mov
mov
mov
aam
lret
sti
sar
cmp
fcmovnbe
in
loop
aas
in
xchg
in
out
xchg
shl
lock
ljmp
f2xm1
jecxz
cmp
cld
mov
int
jmp
mov
in
in
shl
clc
jmp
jmp
fcomp
aam
cli
fimuls
int3
mov
in
rolb
idiv
cmp
leave
xor
sti
into
fdivr
shl
sar
lds
jmp
shr
shll
in
jmp
jmp
in
cmp
mov
or
test
hlt
mov
xchg
not
shrl
in
repz
iret
cld
cld
enter
lret
jmp
std
xchg
ror
ret
in
xlat
filds
cld
in
cmp
ds
out
in
repz
lea
test
aaa
cmc
aas
iret
loopne
clc
fstp
cmc
ret
cmp
in
test
rol
movb
ljmp
cmp
in
repz
std
mov
mov
fmuls
mov
xor
icebp
test
xor
std
sarb
fdiv
std
repnz
mov
in
mov
fstl
repnz
cmp
cli
xor
call
cmp
test
fcomip
test
idiv
jmp
std
fadd
std
mov
ret
fnstcw
lock
shl
loop
repz
cmp
div
fcmovne
test
out
ret
lret
cli
aad
lret
fcmovu
std
stc
fstpt
fadd
addb
leave
into
xchg
int
repz
into
leave
lret
cmp
incb
mov
mov
jecxz
std
mov
xchg
aas
loope
xor
clc
fdivrl
add
sbb
hlt
xlat
jmp
cli
mov
call
rcl
fadd
std
divb
adc
loopne
int3
mov
rorb
hlt
cmc
xor
vshufps
loopne
aas
aad
idiv
loop
out
in
ljmp
sub
cs
rcr
jmp
test
ds
cli
xchg
std
test
clc
loopne
call
out
shlb
cmc
out
cmp
ds
int3
into
shl
jmp
into
sti
mov
nop
fisttps
repz
xor
std
sar
loopne
repnz
enter
call
out
in
out
hlt
int
jmp
ds
xlat
ljmp
in
out
mov
sub
rcr
ljmp
icebp
fld
not
stc
test
call
jmp
aam
in
xor
sar
xlat
mul
int3
clc
test
ret
cld
enter
out
in
lret
xchg
enter
not
xor
int3
mul
icebp
aam
ror
mov
std
lock
ficoms
xor
jmp
cmp
cmp
sti
fcmovnu
loope
jmp
into
sti
sub
xor
les
iret
iret
aaa
cli
jmp
shr
addb
lret
and
sbb
cmp
jmp
fucomip
aas
fdivp
ret
out
fsub
xchg
repz
enter
in
sub
fsubp
loope
loopne
aad
in
xor
loope
lret
in
xor
shr
add
add
fcom
fstp
je
xchg
or
and
jle
movsl
add
cmc
ljmp
sti
hlt
rcr
sti
std
mov
loope
iret
and
out
int
out
out
test
fxch
icebp
fdivr
cli
or
testl
loope
imul
rcl
stc
fsubr
xlat
ljmp
lock
roll
lock
into
iret
test
jecxz
in
clc
aam
into
idiv
out
shl
hlt
fdivrp
jmp
fistl
xchg
fsubrs
ror
int3
in
rcl
fdivrs
stc
rcr
mov
fmul
xchg
hlt
mov
test
int
leave
repz
out
fsubp
hlt
fcomp
movl
xor
hlt
cmp
cmc
xor
cmp
incl
test
out
roll
int
xlat
in
iret
out
fndisi(8087
lret
loop
cld
rorl
out
loopne
xchg
in
repz
cmp
cmc
repnz
mov
xchg
out
loopne
lret
xchg
mov
in
stc
fidivl
fnstcw
cmp
cld
jmp
cld
xlat
shl
dec
in
sti
int3
in
in
lock
sbb
in
jmp
int
roll
fucomi
enter
fisttps
int
fcmovb
fmul
out
xlat
rolb
out
loopne
xlat
fisttpll
xchg
out
fsubrp
int
iret
leave
lock
std
stc
shr
cmc
ret
repnz
in
mov
out
in
test
cld
mov
int3
hlt
int3
fildll
fadd
in
call
iret
jecxz
iret
ffree
rol
fxch
nop
mov
cld
loopne
xor
aaa
into
out
std
cmp
lret
shl
sbb
out
cld
in
in
test
roll
jmp
das
cmc
into
clc
xlat
out
in
fndisi(8087
bnd
rolb
in
clc
lret
cmp
out
loop
std
xchg
in
sub
xor
ljmp
loop
rcl
jmp
out
iret
icebp
test
lret
jmp
fmul
aam
loopne
loop
test
jecxz
stc
jmp
in
in
xlat
out
cmc
ret
iret
hlt
iret
lret
fidivrs
in
cli
hlt
rcr
sub
jecxz
roll
loope
rcl
sti
out
ljmp
in
cmc
xlat
orb
lea
lret
fmul
sti
div
cmp
fnstcw
in
in
fabs
ret
jmp
iret
lock
loope
out
fsqrt
aaa
cli
lret
in
sbb
shr
test
sti
loope
stc
loop
incb
rcr
hlt
call
cld
jmp
jecxz
addb
int
test
fldl
lret
cmp
enter
idivb
cld
xchg
rcll
shlb
stc
ret
out
hlt
cmp
enter
aam
test
xchg
ret
mov
dec
repnz
xor
fdiv
cli
fchs
loope
test
test
xchg
test
xlat
fimuls
int3
and
int
out
repz
fdivrp
cmp
test
ret
in
lret
loop
xchg
mov
xchg
shll
jmp
cld
lock
iret
repnz
jecxz
rolb
xchg
in
lret
leave
divl
enter
inc
cmc
loope
fadd
aad
mov
loopne
ljmp
icebp
shlb
ljmp
cmpb
fcomip
loope
out
mov
enter
repz
cmp
xor
fdivrs
ret
sti
mov
loop
fcom
mov
int
les
ljmp
cmc
sarb
in
into
xchg
fiadds
loope
cmp
into
repnz
stc
sarb
aam
in
orb
rorl
jecxz
in
aam
out
ror
xorb
stc
aam
sar
test
fcmovnb
addb
rclb
imul
icebp
stc
cmp
cmc
repnz
test
lret
lret
test
aad
int3
div
sti
cmp
cmp
ljmp
aad
fsubrp
fadds
cmp
mov
call
stc
lret
lock
std
int
fistpll
call
fsub
call
fdivs
stc
out
in
hlt
xor
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
jmp
int
rol
fst
lcall
ljmp
jle
cmp
int
rcr
sub
loop
clc
int3
test
loopne
repnz
stc
cmp
iret
cmp
sarl
lret
repnz
jecxz,pt
inc
aam
out
xchg
out
ror
in
jecxz
fcmovbe
cmp
call
clc
cli
inc
clc
loop
loop
fmulp
and
in
orb
xor
cmp
fmulp
cmp
ds
cmc
addb
fsub
xlat
into
nop
in
test
fists
in
fsubr
xor
in
xor
aad
fdivrp
fcmovne
stc
fdivr
in
out
ljmp
fcmovnbe
test
sti
ds
jmp
in
iret
loope
lret
shlb
icebp
out
std
lret
ljmp
in
icebp
cmp
in
jmp
std
fimuls
shll
in
int3
test
int
std
inc
cld
cmc
rorl
mov
mov
std
shl
xchg
fdiv
enter
lock
xor
cmp
xlat
test
test
loopne
out
mov
jmp
aad
cmp
xor
cmp
rolb
test
fisttps
xor
in
rcl
aaa
ds
enter
in
mov
out
std
cld
iret
int3
mov
aam
in
cmp
hlt
loope
rolb
fisttpll
loopne
fmul
adc
call
cmp
jmp
repz
add
mov
fiaddl
test
cmp
xor
into
into
loopne
in
aas
aad
mov
out
call
loope
out
not
aaa
in
shl
loopne
sbb
test
call
stc
cli
in
enter
test
lock
ljmp
sar
loope
sar
lret
loope
mov
cli
repnz
in
lock
lret
sar
cli
fiadds
ds
addl
or
mov
sti
shr
ss
sti
iret
icebp
ret
dec
xchg
jecxz
in
in
xchg
fsubrp
in
out
xlat
stc
in
fucomp
xor
stc
int
ret
loope
hlt
faddp
loopne
mov
enter
iret
test
int3
shl
lock
aam
std
lock
xlat
aam
icebp
fincstp
test
cli
sbb
out
jecxz
into
repnz
sti
enter
aas
cld
lock
cmp
hlt
repnz
dec
test
lock
fsubr
mov
xor
fld
icebp
loopne
fsubrp
ret
cld
and
mov
fucomp
out
div
lret
rcl
into
ss
cmp
aam
faddl
mov
cld
out
int3
out
loopne
int
lret
xlat
ds
xor
test
out
loop
decl
iret
roll
jmp
out
xlat
fxch
lock
fstp
fsubp
orl
nop
adcb
divl
hlt
neg
jecxz
aas
loopne
fadd
shr
xlat
sti
jmp
iret
mov
aam
cmp
out
repz
sti
rcl
loop
out
filds
in
call
lock
rcl
ret
cmc
shl
ror
or
into
sti
testb
mov
loope
lret
ror
cli
icebp
cmp
repz
jecxz
fadd
and
out
fcmove
lock
add
xlat
testb
cmp
bnd
decl
jmp
int
enter
clc
rcr
test
out
std
loopne
and
out
in
out
out
icebp
in
repz
cld
call
div
repnz
fstp
sar
hlt
cmc
mov
xchg
mov
cmc
ljmp
fiadds
aas
loope
cld
hlt
jmp
out
out
icebp
loop
lds
jmp
out
ror
shl
int
shl
into
fsub
rol
in
mov
lret
ljmp
hlt
cli
xor
ss
not
cmc
aas
rcl
div
stc
sbb
int
in
dec
xchg
shl
xor
fdecstp
sti
lock
fcomp
neg
xchg
mov
in
lret
in
mov
loop
lock
in
in
in
int3
not
jmp
loope
shl
aad
loop
jmp
in
fdivr
nop
rorb
leave
fnop
std
cmp
lret
loope
loope
xor
sub
sub
mov
jmp
jmp
leave
ret
int
int
mov
popa
jnp
out
enter
add
fst
aam
stc
loope
mov
orl
cli
loope
stc
add
fimuls
jecxz
mov
xchg
hlt
ljmp
xor
shr
leave
fiaddl
mul
std
test
repz
cmp
icebp
in
cmp
into
fucomp
fcmove
cmp
fdivrp
leave
ret
loope
fisttpl
loop
imul
fadd
int3
cmp
jmp
sar
fcmovnu
mov
movl
out
loope
lret
call
ret
div
mov
mov
loopne
loopne
xchg
in
test
mov
repnz
out
cld
sti
fidivrs
into
cli
fcmovb
xor
fdivr
nop
fcmovb
cld
fucomp
loope
fincstp
sub
jmp
leave
loope
fstpt
clc
out
in
ljmp
rorb
mov
lret
fcmovu
loop
test
in
sub
int
xor
aad
cmp
repnz
ss
cmp
jmp
mov
mov
xor
sar
cmp
into
out
test
sar
std
loope
cld
test
incb
ss
ss
xor
aam
fsubp
dec
ror
ret
mov
jmp
fmuls
xchg
rol
out
jmp
aaa
xlat
aaa
loop
xlat
fchs
shl
addl
fmull
xor
cli
xlat
cld
out
into
int3
loopne
lock
ljmp
ret
iret
aam
int
fdecstp
cmc
ss
call
jecxz
out
sti
xlat
fscale
imul
idiv
mov
rcr
ror
loope
aad
out
lret
aad
cmp
incl
mov
faddl
lret
fucomp
clc
xlat
jecxz
stc
xlat
xor
sar
repz
testl
in
out
ljmp
cmp
cli
out
xlat
cmp
int3
jecxz
iret
ret
cli
xlat
enter
shr
popl
hlt
lret
xor
xlat
out
fcomp
ret
sti
repnz
push
add
ret
cli
out
xchg
out
int3
ljmp
hlt
sar
lret
rolb
in
test
stc
jecxz
xchg
xchg
mov
call
rcl
int3
cmp
sub
loope
call
out
cmc
neg
lea
in
ljmp
cmp
lock
ror
aam
ret
mov
xchg
int
mov
sbb
int
jmp
stc
xor
icebp
idiv
lret
loopne
icebp
roll
ljmp
movl
cld
cmp
in
div
jmp
iret
cld
lock
ror
das
jmp
loopne
xlat
aam
ret
aas
test
icebp
call
mov
jecxz
jecxz
aad
in
jmp
fxch
in
hlt
lock
sbb
call
std
lds
or
jmp
jmp
cmp
fcmovb
roll
loop
ret
rcr
loope
int3
sub
jmp
xor
filds
test
fstp
in
cld
jecxz
repnz
out
stc
clc
sar
leave
fxch
shl
icebp
cmp
lock
mov
lret
xchg
into
xchg
cs
xor
out
sar
fcmovbe
ror
xlat
fnstcw
cmp
jmp
mov
in
repnz
lock
aad
in
repz
aam
icebp
roll
jecxz
loope
nop
fsincos
fsubr
repz
cmp
into
repnz
cmc
mov
fstp
les
xchg
call
aaa
out
lret
fcmovnbe
in
leave
rcl
aam
not
lock
fmul
vpsraw
mov
rcll
int3
cld
stc
out
int3
cmp
aas
test
clc
out
stc
loop
enter
in
out
out
xchg
mov
enter
int
lock
in
cld
fcom
xor
rcl
fldl
addl
shr
xlat
cmp
aas
in
repnz
shr
loopne
fucom
mov
mov
les
aam
repz
loopne
aaa
cmc
repnz
aas
aad
in
loop
call
mov
mov
xor
jmp
loopne
cmp
test
aam
aad
xor
jmp
aam
mov
ja
loope
int
jle
add
fisttpl
repz
loop
into
in
xlat
neg
aaa
iret
jmp
stc
out
aam
aas
fsubr
rorb
ljmp
ret
lret
xlat
in
cmp
sti
stc
repnz
xor
repnz
incb
out
repz
icebp
int
cmp
fsin
sti
mov
or
loop
jmp
fmull
ljmp
cmp
aad
stc
inc
std
in
fmull
lret
ljmp
out
jmp
clc
ret
aam
ret
cli
fadds
int
in
int
xor
div
sar
aam
ljmp
xchg
neg
ret
fcmovu
icebp
in
xchg
in
nop
in
rol
int3
lret
icebp
repz
int3
repz
rcl
xlat
rcl
sbb
leave
fmull
mov
ljmp
cmp
sub
hlt
repz
xlat
mov
orl
out
mov
shr
xlat
enter
cld
lock
sar
jmp
lea
shrb
in
stc
ror
clc
sarb
cmp
shl
jmp
std
loopne
sti
jmp
nop
jecxz
cmc
into
jmp
xlat
out
cmp
xor
lock
cld
test
clc
repz
into
mov
in
xchg
shl
xor
enter
into
into
stc
stc
fxch
rolb
test
loopne
xchg
mov
loope
rcr
into
hlt
aad
ror
ret
clc
loopne
fimuls
int
jmp
loope
test
lret
shr
div
hlt
icebp
shl
xor
cmp
rcr
clc
loop
sub
loope
enter
and
enter
shr
lret
div
ror
sbb
sbb
fcmove
test
mov
mov
fimuls
jmp
hlt
jmp
loop
test
rcr
fcmove
ljmp
ror
in
xchg
iret
in
ret
enter
aam
cmp
cld
not
test
jecxz
leave
les
jecxz
rcr
jmp
rolb
out
xlat
mov
incb
cmp
mov
repz
in
out
ljmp
ret
enter
jmp
ret
fsubr
xchg
ror
loopne
out
rol
xor
cmc
cmp
std
and
rcr
repnz
cmp
stc
in
orl
icebp
test
xor
cmp
int
sub
ret
loopne
out
fdivr
xchg
adcb
loop
out
xor
rol
out
faddl
ljmp
xor
sar
ret
fxam
fcomi
rcl
in
loope
mov
out
fbstp
ljmp
loope
fldl
test
lret
int3
ljmp
out
int3
aas
sti
fstpt
loope
rcl
cld
out
aad
loop
fnop
xchg
mov
xchg
out
out
das
ret
aad
aaa
cli
lret
stc
idiv
aad
in
repz
hlt
mov
fisttpll
rcll
lds
in
rcr
in
fsubrp
ds
rol
jmp
lret
fsts
icebp
int
out
xor
aaa
hlt
ret
shl
roll
in
out
std
and
les
out
repnz
xor
in
jecxz
iret
rcl
ret
test
jmp
fiaddl
test
hlt
in
xor
hlt
xlat
ss
incl
idivb
loopne
mov
xchg
leave
lock
in
hlt
aas
loopne
repz
cmp
hlt
fadd
jmp
iret
in
call
shll
aas
rcl
aad
hlt
rcl
shl
std
mov
out
stc
jmp
xchg
xchg
xor
repz
stc
clc
fdiv
in
loopne
std
test
test
jecxz
in
jmp
test
lea
fcmovb
out
clc
cmp
fcmovnb
cmp
call
cli
out
hlt
out
cli
int3
xor
cmc
rcr
ljmp
shl
xlat
shl
idiv
call
mov
ljmp
cmpb
ret
shl
loopne
shr
out
int3
mov
rolb
shl
aam
ljmp
into
loopne
int
cli
aad
clc
mov
addb
out
lea
mov
mov
cmp
je
jmp
xlat
rol
xlat
enter
push
jns
ficoml
movsl
add
lret
into
repz
in
iret
hlt
jmp
loopne
repz
cmp
ds
filds
rol
clc
das
cmp
cmp
int
cmp
loope
repnz
out
jecxz
out
xchg
mov
loopne
mov
cmc
xor
xor
sarb
xlat
in
in
xlat
loope
fcmovnb
rol
cmc
out
lret
test
cld
mov
fildll
ljmp
int
repz
les
rol
in
loope
rcr
xchg
idivb
out
cmp
cli
ret
rol
mov
shl
ret
cli
in
into
test
lea
mul
jmp
enter
clc
test
enter
in
mov
in
mov
shl
or
enter
leave
out
shl
xor
mov
fucomip
jmp
push
rclb
jmp
enter
jmp
std
loope
ror
loopne
xor
in
in
cmp
stc
rol
cmp
fnstsw
loope
aam
stc
loopne
cmp
jmp
into
sub
icebp
xor
int3
in
cli
cmp
xor
in
repz
mov
rorl
cmc
enter
in
fcomip
aam
sar
rol
xor
mov
mov
lret
hlt
sarb
leave
stc
cmp
cmc
aas
xor
jecxz
test
call
cmc
aaa
into
fxch
test
lret
sti
repnz
repz
hlt
testl
icebp
ljmp
into
icebp
enter
call
ror
sub
cmc
in
shl
mov
out
loope
aaa
shl
out
cld
imul
out
icebp
iret
sti
aam
loopne
aad
hlt
enter
cld
stc
sti
int3
call
leave
sar
fucomi
fcomi
fld
cmp
test
xchg
loope
lret
fdivr
idiv
fcmovnu
shl
neg
loopne
rcl
out
xlat
jmp
lock
int
sar
out
repnz
in
fucomip
test
in
out
xlat
sub
cld
std
cmp
xchg
lret
int3
fildl
jecxz
cmp
loope
out
sarb
aad
repz
aam
jecxz
ret
call
out
fst
into
out
mov
jecxz
aam
ljmp
inc
fst
jecxz
fcmovb
aam
testl
ss
fcmovu
into
cmp
in
fcmovu
cmp
cmpb
lret
enter
out
fimuls
ss
hlt
in
in
cmp
call
loop
shl
mov
cmc
jmp
in
out
sti
mov
fdivp
loopne
out
cli
fcomp
cmp
neg
faddl
mul
cld
xchg
xchg
mov
xchg
out
jmp
sti
in
fcmovnbe
jmp
cli
hlt
cld
in
in
std
clc
fmull
xchg
test
in
xchg
stc
iret
in
into
test
xor
iret
div
xchg
repnz
lret
jmp
loopne
ror
call
enter
rcl
cmp
into
aad
enter
jmp
lret
repnz
into
jmp
test
cmc
aad
fcmovu
icebp
std
icebp
sbb
test
call
out
rclb
fxam
int3
shl
cld
test
jecxz
out
fcmovnb
aam
xchg
call
out
in
in
int
cli
hlt
aad
ss
xchg
vpand
enter
in
loopne
leave
mov
faddp
out
int3
ss
aad
aaa
cmp
sarb
cli
sub
in
lock
aaa
lret
repz
repnz
cmp
ret
lock
fmull
loope
mov
jmp
hlt
int
lret
xor
aam
loop
int3
cmp
rolb
in
out
stc
or
repnz
icebp
int
lret
rcl
int
sar
cmp
jecxz
incl
test
int3
into
xchg
fsub
out
and
icebp
xlat
enter
out
cld
fidivrs
neg
cmp
roll
lret
sti
cld
xchg
jecxz
in
leave
aaa
enter
cmp
loopne
iret
fsubp
sbb
loopne
loope
in
cmc
test
in
hlt
int
out
cmp
fcmovu
loopne
not
add
mov
loopne
ljmp
les
cmp
hlt
cmc
enter
cmp
fcom
shl
cmc
cmp
in
into
loope
repz
loope
out
cmp
add
add
into
ror
fxch
fst
cmc
mov
mov
jecxz
jle
movsl
add
int
fdiv
cmp
loop
test
fidivrl
fsubr
mov
out
cld
loopne
fucomip
shr
into
idiv
shl
sarl
idiv
in
xchg
testl
leave
xabort
aaa
call
fst
loopne
cmp
mov
leave
xchg
test
iret
rcl
repnz
stc
lock
fcmove
int
sti
idivb
mov
test
xchg
call
in
loop
idiv
test
fstp
clc
idivb
aam
ds
addl
cld
out
out
loopne
aaa
shrb
flds
jmp
inc
imul
call
cld
int3
decb
xor
rcr
cmp
into
fdiv
mov
mov
test
mov
loop
leave
shr
sar
loope
enter
repnz
fsub
div
fdivr
rcr
in
xlat
xlat
and
fimull
cs
aad
fucom
fmul
lret
sarl
iret
test
stc
xlat
cld
in
leave
into
shr
icebp
lock
aaa
jmp
lret
aad
into
sti
cmp
xlat
in
out
aad
faddp
out
test
rorb
ret
in
aaa
fucomp
jmp
int3
int3
cli
shl
loop
aas
test
in
enter
rcr
out
sub
iret
xor
int3
int
incl
xor
hlt
mov
imul
mov
in
std
test
lret
icebp
in
xor
aas
fadd
aad
sar
enter
cld
rcl
ljmp
in
cmp
loopne
shl
std
aad
loope
aad
in
std
or
iret
jmp
call
clc
jmp
jmp
cmp
repnz
in
fcom
fstpt
test
loopne
out
mov
leave
mov
xor
in
clc
iret
aad
cmp
cmp
stc
xchg
sbb
in
in
mov
icebp
into
sub
lock
loopne
int
stc
fcomi
ffree
cld
leave
fldz
loop
lret
ror
repnz
jmp
cmp
loopne,pt
rcr
filds
test
in
lret
loope
in
repz
clc
sub
fnstsw
out
test
rcr
xchg
xchg
jecxz
xchg
leave
icebp
out
std
xorb
idiv
in
enter
loopne
into
cmp
cli
jmp
les
in
mov
loopne
lret
repz
clc
ret
repz
lock
cld
int3
mov
loope
iret
jmp
shl
sarb
cmp
loop
enter
mov
loop
notb
enter
sarl
ljmp
stc
loope
out
xchg
jecxz
mov
mov
xor
rcl
cmc
idiv
sbb
out
fmulp
clc
fucomi
lock
lea
repnz
into
clc
stc
xor
icebp
rcr
iret
int3
cmp
test
test
orl
divb
out
lret
int
leave
sti
int
aam
aad
add
and
ljmp
ret
leave
repz
neg
out
icebp
ret
sti
cmpl
hlt
in
xlat
int3
test
repnz
loopne
call
lock
aad
in
loop
xlat
call
fisttps
rcr
xchg
aaa
ror
jmp
icebp
leave
cmp
fdivrs
std
lret
clc
int3
loop
decl
ret
imul
xlat
sti
ljmp
xchg
test
in
fdivrp
mov
iret
rol
lea
enter
xlat
divl
cli
hlt
sti
iret
ds
aad
cld
ljmp
xor
icebp
repnz
lret
int
fdivrs
fsubr
xchg
enter
cli
jecxz
xchg
rorl
in
out
lret
fiadds
fucom
ret
jecxz
out
enter
call
stc
aaa
out
repnz
ss
not
rolb
xlat
jecxz
leave
jmp
xchg
nop
xor
aaa
enter
xlat
incl
and
fldl
leave
call
xor
cmc
xorb
into
std
xlat
and
out
out
iret
out
aaa
das
out
sti
enter
in
lret
sti
fcomip
roll
vpsubb
nop
out
mov
jecxz
shl
aad
xlat
out
int
fcomp
cli
stc
movl
jmp
mov
jmp
ret
rol
rcl
rcl
sar
and
adc
ret
or
jle
movsl
add
jmp
roll
clc
lds
enter
xorb
out
fcmovnbe
cli
lock
sarl
fcmovnbe
xchg
not
fadd
clc
std
ret
nop
faddl
ljmp
rcl
icebp
repz
repz
out
call
in
or
shrb
jmp
incb
testl
ljmp
call
int
cmc
cld
int
loopne
lock
xchg
sti
sub
sub
out
lret
xor
add
mov
iret
out
jmp
iret
xchg
ss
lret
fcomp
enter
cmp
loopne
test
ljmp
sub
shr
cmp
les
xor
aas
idiv
iret
fadd
addl
out
and
xorb
cmc
lret
iret
out
lret
aad
ds
in
adc
and
loope
out
call
xor
aaa
lret
out
cmp
shlb
int3
not
aas
rol
clc
test
lret
shl
fsubrp
in
shlb
les
std
jmp
rcr
cmp
incl
in
call
ffreep
in
nop
lret
shl
xor
shl
iret
rolb
loopne
cli
clc
into
std
hlt
xchg
cmc
enter
in
icebp
xor
fprem
adc
out
shl
ret
shl
filds
call
cmp
cmp
shr
lret
loop
ds
test
out
out
repnz
rcl
rcl
cli
test
sti
xchg
out
iret
clc
out
aaa
fucompp
test
lret
cmp
loop
ljmp
out
loopne
sub
enter
xlat
fnstsw
stc
ds
enter
aad
clc
in
loop
leave
ror
out
aam
aaa
rcr
aas
hlt
fcmovb
cmc
fcmovnb
mov
incb
loop
ljmp
cmp
xchg
mov
mul
shr
int3
cmp
jmp
repz
sti
xor
shr
loop
addb
icebp
shl
out
repz
aaa
stc
addl
fsubr
mov
orb
repz
repz
aaa
shll
ss
not
ss
cmp
enter
int3
test
jmp
imul
fsqrt
iret
iret
int
into
clc
loopne
lret
lock
lock
fmuls
jecxz
jecxz
mov
aad
shl
lret
call
aam
test
out
idivl
decb
out
lock
shl
in
in
ss
int
xor
int3
xlat
jmp
neg
cmc
clc
ret
lds
ljmp
xor
repnz
cmp
out
out
fisttpll
in
neg
nop
cmp
aam
shr
in
jmp
adc
mul
shl
loopne
out
xlat
mov
call
jmp
in
aaa
hlt
rol
std
neg
int
aas
addl
fldl
out
jmp
xor
iret
hlt
or
shl
aam
loop
clc
mov
xchg
repnz
rcl
cmp
sti
vpor
lret
into
loop
in
in
loope
in
call
int
sbb
test
aam
bnd
or
out
repnz
enter
call
filds
mov
jecxz
call
out
ljmp
cmp
cld
cmp
out
cmp
fcmovnbe
hlt
cmp
cld
fcomp
call
int3
ret
sub
lock
xor
in
orb
enter
enter
repz
fcom
aaa
fcmovne
sarl
out
lret
sti
test
jecxz
fsub
sti
ljmp
mov
lret
lock
shr
out
cmc
cmp
std
shl
idivl
jmp
jmp
in
xchg
xor
call
jmp
cmp
cmp
repnz
mov
loope
stc
fists
dec
lret
call
divb
in
ror
loop
int
fistpll
jmp
movb
cmp
jmp
rcl
rcl
fstp
rcr
cld
cmp
jmp
lods
outsb
cmp
add
out
loopne
test
xchg
leave
div
xor
iret
fcmovnbe
rcl
hlt
loopne
out
loop
lock
lock
mov
cmc
ds
leave
aad
out
xlat
int
fldl
int
nop
int
lret
rol
enter
ss
iret
cmp
xlat
std
jmp
in
fsubr
fsubr
mov
mov
stc
neg
in
out
cmc
ljmp
cmp
ret
mov
icebp
xchg
mov
adc
lock
repz
rcr
jmp
out
fdivr
mov
int3
out
loopne
or
jmp
clc
cmc
fcmovne
fcmovnbe
lock
aas
clc
jecxz
jecxz
cli
sti
fisttpll
cli
xchg
xchg
test
out
in
lock
cmp
repz
fucomi
loop
and
loopne
cmp
enter
ljmp
fst
aaa
shll
int3
lock
xlat
ds
stc
mov
iret
jmp
mov
xchg
into
ret
out
cmp
repnz
cmc
cmp
lret
fsubr
ror
in
ljmp
in
in
aam
out
ljmp
test
aad
enter
loopne
shl
mov
lock
lret
cmp
shr
fsubr
sarb
roll
loop
mov
out
out
enter
or
ret
in
in
int
fstp
cli
jecxz
sar
addb
fimull
in
vcvttss2si
aam
hlt
cmp
loope
aas
ret
repz
xlat
ljmp
loop
fmul
roll
ljmp
jmp
fdivp
movb
cli
xchg
cli
jmp
adcl
jmp
aam
jecxz
cli
cmp
aam
loope
jmp
iret
call
out
lret
fmulp
aad
ror
into
clc
cld
out
mov
jmp
jecxz
out
xchg
xor
int
call
fidivrs
rcl
fsub
sti
test
call
or
mov
in
hlt
cmp
rcl
int
sarl
inc
in
clc
shl
loop
ret
in
mov
lret
hlt
rcl
ss
dec
jmp
cli
cld
rcl
orl
std
ret
cmp
aas
aaa
fcom
rcr
cmp
jecxz
enter
stc
jmp
sarl
in
cmp
xor
idivl
enter
addb
fiaddl
shr
xlat
cmp
in
cmp
out
aam
ffree
loop
cmp
ffree
rol
leave
adcl
shr
xor
shr
sbb
test
cmc
in
orb
mov
in
in
fcmovb
cmp
dec
hlt
fcmovu
sti
out
and
jmp
aas
in
test
sti
xchg
in
in
ljmp
fiaddl
cmp
fildl
ret
call
orl
cmp
sti
int3
cmp
cli
fcompp
addb
std
int
iret
or
out
shl
into
cli
xor
cmp
cmc
int
out
shll
fcmovu
test
decl
aaa
int
into
icebp
into
fst
clc
lock
xchg
jmp
into
sti
mov
into
xor
cmp
in
aad
or
jmp
out
in
ljmp
mov
call
xor
ss
int3
das
rcl
lret
ljmp
shl
cli
lea
lock
mov
xor
out
fdivrl
jmp
ds
cli
xor
loopne
loopne
in
leave
ljmp
std
out
jmp
int3
cld
cmp
fcom
idiv
fstpt
xlat
aad
jecxz
adcl
lock
xor
into
out
rcl
shll
mov
and
mov
fninit
xchg
in
repz
in
xor
int3
ljmp
xchg
repz
add
fimuls
xor
repnz
icebp
cmc
fadd
loope
sarl
idiv
test
in
xlat
test
out
nop
sub
push
jecxz
sar
jecxz
les
cld
xor
fcmovne
clc
fdivrp
std
addl
xchg
ljmp
in
in
out
int3
in
cmp
out
sti
in
fadd
xchg
add
mov
mov
jmp
int3
enter
lret
int
stos
test
push
adc
std
fsub
jle
movsl
add
out
cmc
mov
clc
out
rcl
lret
ljmp
cmc
aad
xchg
repz
mov
fdiv
ljmp
ljmp
cld
fneni(8087
loopne
sbb
test
repz
xlat
fsubp
fimull
in
out
aaa
in
iret
cs
loope
adc
fcomi
fsubr
jmp
xlat
in
mov
hlt
test
idiv
not
idiv
testb
rol
jmp
std
adcl
cmp
cmp
shll
in
clc
iret
cld
mov
lret
shl
fiadds
cmp
xor
lret
aad
cmp
aas
clc
fiadds
lret
fucom
hlt
xchg
mov
out
cmp
jmp
fdiv
fadd
rcr
cmp
testb
enter
jecxz
ss
jmp
cmc
cli
aam
sar
ljmp
xchg
xor
into
aam
xor
shl
fcmovu
loope
xchg
xlat
stc
out
ljmp
int3
ret
cmp
xor
leave
loope
std
aas
cmc
repz
loope
clc
aam
mov
int3
sti
int3
ljmp
ret
cmp
cmp
out
loop
jecxz
aad
mov
and
hlt
shl
lock
fnstsw
icebp
int3
cli
into
fcmovnu
shl
loopne
cmc
cli
and
popl
xchg
not
aad
ret
cmp
leave
repnz
aam
out
out
call
clc
rcl
out
in
iret
xor
fsqrt
fcomp
fucomp
lock
fnstcw
mov
loop
aaa
int3
in
fucomp
out
lret
sub
lock
ret
out
jecxz
cli
into
out
icebp
sar
xchg
nop
lret
idivl
aam
repz
sarl
cld
fadds
decl
incl
in
xor
icebp
shlb
clc
fincstp
cli
jecxz
rcr
ret
mov
nop
enter
call
ret
fcmovbe
das
dec
rcl
loop
cld
ds
out
sub
cld
loope
incb
int
fcmovu
cli
fdivrs
fcmovu
fadd
ret
cmc
xlat
ljmp
not
shl
idiv
clc
out
xor
fdiv
sti
lock
sti
fdiv
or
out
call
in
lock
int
enter
in
rcr
xlat
aad
in
rol
std
lret
orb
loop
iret
shl
shl
aaa
cld
enter
xlat
cmp
sar
faddl
xchg
int
int
test
and
in
icebp
icebp
fcomi
call
sti
ret
icebp
mov
int3
clc
test
fimuls
xor
hlt
enter
out
ljmp
repz
mul
jecxz
xlat
jmp
in
std
shr
leave
shr
out
fsubrp
jmp
push
aam
cmp
ds
enter
leave
stc
iret
xchg
jecxz
xchg
ljmp
icebp
cld
cmp
sarl
mov
dec
in
test
iret
jmp
cmp
aad
rcl
fcmovnbe
sti
fcomp
repnz
sub
repz
test
in
mov
into
in
out
repz
out
out
int
in
inc
fneni(8087
stc
test
mov
repz
int
rol
in
das
sub
cmp
std
xor
cmp
fcmovu
xor
clc
in
fucomip
sar
out
sub
cli
aam
leave
leave
lock
vpinsrw
loop
clc
stc
lret
jmp
rclb
loop
cli
shll
xor
fcom
rcr
stc
fdivr
enter
out
fcmove
in
jmp
ss
xor
stc
int3
loope
test
int
in
xchg
roll
out
lock
out
cmc
jmp
fstp
mul
out
into
jecxz
fcmovnbe
adc
xchg
into
jmp
in
xchg
jmp
lret
loopne
xor
ror
repz
cmc
int
in
test
fucomi
fsub
xlat
leave
fmulp
loope
test
aam
xor
int
rcr
fdivrp
jecxz
sarl
xchg
jecxz
mov
xchg
cmc
div
test
xor
shr
sti
rcr
fcmovbe
in
decl
icebp
out
xor
std
in
stc
stc
repnz
hlt
incb
lret
leave
mov
xchg
mov
mov
lea
add
mov
mov
mov
jmp
int
rcl
fcmovu
int
xchg
daa
ljmp
jmp
jle
in
sarl
cmp
loopne
aad
flds
test
icebp
loope
adc
aad
xor
shr
shl
sarb
out
loope
out
in
ljmp
stc
push
in
cmp
fcmovnbe
cld
out
call
fldl
out
shl
dec
in
fcmovne
xor
std
aas
int3
repnz
fdivrp
mov
mov
in
fsubrp
iret
in
clc
aad
into
out
repz
std
shl
loope
cld
fisttps
out
roll
ss
enter
movl
cli
aas
loope
fcmovne
enter
xchg
lret
ljmp
aam
call
mul
ret
aam
fcomip
shr
ret
mov
sar
lret
out
icebp
in
rolb
clc
mul
fucomp
int
movl
cmp
shl
cmp
repz
aam
mov
out
xchg
in
out
mov
leave
imul
fxch
int3
cmp
cmc
aam
and
loope
cld
in
frndint
push
in
fsub
shrb
into
and
loop
loope
cmp
in
idiv
stc
jmp
out
jmp
lret
std
xor
sar
ret
dec
test
lock
lret
vpmulhuw
sarl
stc
lret
fistpll
cmp
repnz
cmc
loope
in
testb
mov
fucomi
cmp
enter
ds
loopne
jecxz
rorl
xchg
loop
lret
lret
in
vpsllq
leave
repnz
in
xor
aas
fcmove
adc
rorb
call
leave
lock
sar
sarl
lds
orb
mov
mov
loop
out
icebp
fcomi
lret
ljmp
in
loop
in
loop
loopne
in
rclb
fnstenv
out
cli
clc
int
hlt
fxch
ret
mov
sbb
out
jmp
incl
xchg
rcl
icebp
xor
out
aad
or
aas
lock
call
ljmp
leave
enter
jmp
call
sarl
aam
xchg
lds
call
xor
in
out
sarl
cmp
aaa
fdivrl
aam
icebp
lds
fists
ss
lret
roll
loope
jmp
mov
out
test
xchg
out
shl
int
cld
fcom
xlat
fcmove
loope
cld
ds
clc
ret
fdivrp
jmp
nop
dec
out
addb
cmc
aam
cli
leave
rcl
fst
cmp
cld
fcmovnb
fninit
loopne
fdiv
nop
loopne
jmp
lock
out
div
cmc
cmp
fdivrp
mov
roll
cld
loop
addl
sarl
repnz
lret
out
in
fiaddl
fld
int
call
roll
imul
aam
enter
cmp
shl
icebp
ljmp
int3
out
dec
rolb
jecxz
int3
aaa
int3
cmc
cmp
into
lret
stc
fadd
hlt
aad
repnz
mov
lock
shl
divb
xor
in
aas
repnz
fdivl
aad
not
in
hlt
fdivr
out
ret
test
in
out
enter
test
lret
aad
cmp
out
mov
inc
leave
clc
addb
rol
leave
out
xor
cmp
fdivr
ss
std
push
cmp
out
xchg
loope
int
loope
iret
sarb
rcl
icebp
std
aas
int3
rol
repnz
cmc
mov
loope
in
fcompp
out
roll
xor
in
xor
fsubr
sarl
ret
rol
xchg
fsubrp
enter
loope
orb
fucomi
call
loop
xor
stc
in
std
enter
icebp
xchg
fsubp
out
xor
cmp
imul
cld
leave
or
xchg
fiadds
addl
out
into
out
sar
shll
jmp
adc
in
out
repz
loop
mov
std
loope
icebp
adcb
enter
cmp
jmp
cli
shl
repnz
xchg
jmp
lret
test
out
aam
fdivr
mov
mov
xor
add
mov
jmp
mov
fst
fxch
jg
lods
loop
mov
scas
cmpsb
in
jle
movsl
add
loopne
cmp
aas
rol
xchg
xchg
xchg
clc
lock
cmp
stc
cmp
loopne
sti
mov
enter
fsubr
mov
shl
xlat
ret
ljmp
not
sarl
loopne
loopne
rolb
fyl2x
xchg
xchg
repz
loopne
test
out
rcr
into
aad
neg
addl
rcr
adcb
cmp
std
loopne
lock
faddl
jecxz
dec
xchg
xchg
aam
xor
iret
ljmp
ror
test
fcmovu
vmovq
lock
xchg
icebp
lret
int
out
xor
int3
cmp
cld
cmp
cmp
ret
cld
mov
jmp
repz
ljmp
lock
cld
sti
cmp
std
jecxz
cli
jmp
stc
add
jmp
out
in
mov
xor
jmp
cld
fsincos
rcl
loope
aam
cmp
int3
flds
in
repz
leave
xor
int
in
iret
shr
out
aam
sarl
jecxz
hlt
cmc
jmp
out
out
mov
mov
pop
jmp
sarb
cmp
shl
test
lret
fistl
fistpll
rol
out
jmp
into
hlt
jmp
in
loopne
fadd
test
call
ljmp
icebp
in
out
cmc
iret
ror
cmp
rcl
fdivp
ret
stc
fiadds
jmp
leave
clc
in
xor
out
sarl
int3
aad
loope
out
jmp
lea
rolb
jecxz
jmp
repnz
in
orb
in
mov
jmp
stc
ljmp
cmp
repnz
icebp
ffree
fmuls
lret
fucomi
test
xor
fdivrp
std
std
in
lock
cmc
jecxz
fisttpl
cli
out
in
repz
fdivs
jmp
cld
imul
loop
repnz
cmp
jecxz,pt
ret
in
xlat
mov
nop
sti
mov
xchg
xor
xlat
test
cmp
stc
cmp
sbb
shl
ftst
cmc
add
xchg
into
loope
cmc
lret
xlat
cld
clc
clc
lret
fdivr
out
in
ret
rcl
shr
leave
sti
jmp
out
xchg
ljmp
aaa
icebp
xor
xlat
fadds
test
stc
cmc
std
out
jecxz
filds
xor
cld
jmp
enter
jmp
shl
in
in
ret
fsub
repnz
xor
out
sarl
hlt
iret
cmp
fcom
cmc
aas
test
mov
leave
in
fmul
out
shlb
int3
lret
idiv
roll
jmp
mov
adc
shl
lret
enter
aam
in
fstpt
loopne
xchg
clc
stc
loopne
cld
sti
iret
decb
test
cmp
lret
idivb
fstp
xchg
in
in
cli
xchg
call
aam
ljmp
jmp
aad
loopne
loop
ror
vcvtpd2dq
lock
shr
repnz
icebp
das
xor
jecxz
cmp
hlt
cmp
and
repnz
lret
or
mov
fyl2xp1
cmp
hlt
out
fxch
cmc
rcr
in
test
xlat
in
out
xor
jecxz
int3
stc
idivb
cmp
in
div
rol
fiadds
ljmp
xor
jecxz
xlat
test
aam
xlat
inc
stc
in
fxch
mov
mov
fdiv
ret
int
in
in
fcomp
out
in
xchg
cmp
mov
out
in
mov
shl
xor
iret
fld
out
fucomi
loopne
jecxz
out
fdivrl
shl
mov
into
iret
lret
call
imul
jmp
out
shl
icebp
cld
cmp
cmp
repz
cli
leave
cli
lret
xlat
clc
sar
nop
xchg
xlat
xor
clc
vaddsubps
inc
fdivp
ret
loopne
fdivr
leave
mul
xchg
ret
ljmp
cmc
in
int3
clc
in
cld
cmp
stc
aad
hlt
xor
hlt
fucompp
fucomp
int3
mov
xchg
aam
leave
fst
sti
leave
addb
fnop
out
test
xchg
test
fstpt
out
fcmovbe
out
aaa
fdivrs
iret
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
jmp
rol
lret
aad
mov
xor
bnd
movsl
add
add
loope
loop
sub
fimuls
hlt
cmc
lock
ss
into
sti
shl
shl
vcvttpd2dq
lret
jmp
xlat
mov
repz
ror
jecxz
xor
aad
xlat
loope
shr
int
add
fsub
lret
int
sub
ljmp
fdiv
lret
std
sarb
idiv
cmc
loopne
mov
ljmp
repnz
repz
shl
enter
cld
shl
vpmovmskb
mul
mov
cli
clc
xchg
lea
ret
ljmp
jmp
ss
fmuls
movb
in
xor
ret
out
fcomip
fucomip
ds
add
out
filds
test
loope
rclb
int
jmp
in
lret
cmp
cmp
repnz
stc
xchg
stc
xlat
cli
sti
inc
out
loop
rcl
lock
rcl
loopne
rol
in
out
hlt
fdivrp
and
int
std
out
in
fprem1
cli
xor
hlt
repz
shr
loopne
cmp
out
std
ljmp
lock
jmp
in
shl
fdivr
clc
cli
and
into
ret
ret
rorb
mov
mov
loopne
ror
out
sarb
adc
repnz
cmpb
mov
into
adc
loop
xor
iret
cmp
cld
xor
or
jecxz
icebp
ret
aad
loopne
jmp
addb
ljmp
fdivp
cmpb
loope
repz
cld
ljmp
mov
repnz
stc
sti
sar
fdivr
aad
into
rol
test
ljmp
das
cmp
sti
fcmovne
shl
shl
aaa
sti
in
std
in
out
jecxz
leave
std
fucomi
int
in
xlat
aaa
jmp
xor
jmp
ffreep
fildl
and
leave
into
lock
xchg
jmp
ror
leave
iret
sti
hlt
cmp
loopne
aad
faddp
and
loop
in
sti
faddl
test
xor
iret
idivb
ss
out
test
stc
mov
jmp
mov
xchg
xor
icebp
das
enter
lock
icebp
sti
xlat
call
cli
cld
jmp
xchg
loop
lock
jmp
cmp
cmp
shl
test
fcmovnb
out
call
in
xchg
cmp
repnz
out
roll
jecxz
decl
lret
out
mov
icebp
rcl
in
fstpt
xor
fidivrs
fadds
out
aam
or
std
in
test
xor
in
int
cmp
cmp
fcomi
repnz
div
xlat
in
ret
xchg
mov
enter
aaa
cmpl
rol
loop
sti
leave
mov
jecxz
xor
in
fcomp
std
xlat
rcr
shl
cmc
rol
repz
jmp
xchg
jmp
fidivl
repnz
std
call
sarb
int
xlat
faddl
loopne
clc
sbb
jmp
lock
jmp
in
call
fcom
vpslld
jmp
in
stc
xchg
xchg
ljmp
sti
ljmp
call
in
faddl
test
mov
in
sub
cmp
fucom
in
in
clc
out
iret
aad
icebp
out
jecxz
cld
xchg
in
int
int
cs
fdivr
stc
rcr
lret
cli
rcl
push
xchg
leave
ret
fmul
loop
loopne
loopne
in
ljmp
ss
cli
jecxz
iret
repnz
rol
clc
mov
fucomi
int3
mov
xor
aaa
sarl
jmp
idiv
cmp
cli
cmc
hlt
addl
loop
adcl
rcr
fcmovnbe
into
std
incl
fnstcw
mov
fcmovb
xor
das
in
les
fucom
out
in
sarb
ret
cmc
out
cmc
out
fcmovu
and
lret
in
ret
les
out
ds
imul
cld
fdivrs
ret
ret
xlat
loope
ljmp
ror
shl
cli
call
cmp
mov
mov
fcmovnu
or
repnz
shr
icebp
cmp
fcmovnbe
aad
test
aas
xlat
adc
inc
or
or
mov
ror
aad
fldt
sbb
je
jle
movsl
add
addl
repnz
xor
fld
std
lret
out
loopne
xlat
fldl
in
xlat
loop
jmp
jecxz
call
ret
xor
cmc
sti
cld
idivl
shl
test
loopne
neg
out
xchg
sub
enter
in
fcomp
ret
std
movb
fildl
adc
in
out
fldl2t
cmp
loope
hlt
aam
sar
xchg
cmp
fsub
sbb
fcmovu
adc
test
lret
hlt
icebp
int3
lock
test
loopne
enter
iret
pop
xor
cmp
cmp
div
repz
cld
adc
mov
lret
out
jmp
jecxz
fildll
xor
sti
rcl
aam
cmp
cli
sar
cmp
test
mov
loopne
aam
ror
xor
lret
jmp
xor
out
adc
std
imul
loope
mov
aam
in
int
ret
ret
jmp
into
dec
cmp
hlt
rorl
cli
rcl
iret
in
clc
cli
sti
in
ss
std
out
clc
ret
fdivr
cmpb
int3
xchg
fcmovu
ret
xchg
icebp
mov
xchg
int3
fnstcw
lret
out
sar
cmp
std
out
loope
xchg
out
out
fsubr
jmp
aaa
rol
stc
jmp
in
leave
std
add
iret
cmc
hlt
rcr
fdivp
in
ljmp
in
test
aad
cmp
cmp
ret
ffreep
testl
test
aam
clc
fsubr
icebp
ss
cmp
aam
out
call
addb
jmp
cld
ljmp
neg
leave
in
xor
fucomip
cli
test
cli
sarb
ffree
fmuls
stc
shr
int
lock
xor
out
cmp
xlat
idiv
orb
test
int
jmp
lret
in
hlt
ljmp
stc
in
ret
mul
fcmovb
fucomip
mov
aas
loop
cmc
vpaddb
ds
icebp
sbb
std
shl
aad
cli
or
mov
iret
in
shlb
hlt
fcmovnu
jmp
int3
fstp
jecxz
loope
icebp
fucomp
cmp
loop
enter
call
sti
cs
cmp
sarl
aas
enter
fisttpll
mov
out
in
das
jmp
aad
in
jmp
aas
cmp
mov
mov
fmulp
fisttpll
in
jmp
fsincos
enter
faddl
aad
not
enter
int
xchg
loop
in
aam
lret
iret
ljmp
loop
std
repnz
ljmp
adc
out
lds
stc
xlat
fdivr
sti
fcomp
icebp
fst
ffree
test
fcmovnu
mov
mov
jmp
aam
aaa
cmp
fdivrs
loope
std
in
hlt
cli
cli
out
xlat
test
fisttps
jmp
aam
ret
fprem
sar
in
sti
fmul
out
std
roll
nop
enter
rorl
shl
out
clc
fnstcw
call
out
out
fcomip
ret
idivb
loop
orl
cmp
out
aaa
rcr
aam
rcr
in
dec
test
fucomp
lret
xchg
cmc
repnz
xor
fcmovnbe
cmp
out
aad
call
loopne
loope
test
into
aad
repnz
cmp
fsub
int3
std
int3
lock
repz
int3
shl
in
rcr
fdivrs
cmc
fcom
loope
push
or
test
mov
xchg
mov
out
xor
leave
loopne
stc
ffreep
jmp
out
loope
out
jmp
mov
lock
out
xor
fdiv
int3
rcr
aas
idivb
rol
in
test
int3
std
jecxz
test
repnz
stc
ljmp
incb
shr
mov
xchg
in
sub
shl
fdiv
cmp
cmp
aad
std
neg
loope
mov
not
loopne
fiadds
aad
repnz
xor
lret
xor
loope
out
idiv
hlt
fld
fcmovb
sti
stc
out
mov
sub
in
hlt
ljmp
div
ror
jecxz
test
test
testl
or
jmp
aam
iret
int3
fst
outsl
fmull
dec
enter
jle
movsl
add
nop
int3
in
int3
ljmp
jmp
icebp
stc
fisttpl
orl
rcl
ror
in
xor
iret
aad
fldl
dec
test
iret
in
xchg
loopne
xor
divb
fucomi
cli
fdivr
lret
out
shr
repnz
rcr
enter
jmp
mov
in
lock
cli
cld
shl
rol
rol
ljmp
xchg
into
jecxz
aaa
sub
cmp
imul
cmp
xchg
out
in
incl
cld
in
mov
stc
aaa
into
std
icebp
cmp
cld
cmp
icebp
aam
jecxz
std
ret
xchg
mov
out
ljmp
int
loop
lock
icebp
repnz
adc
iret
xor
int3
int
leave
std
clc
fildl
mov
fsubrp
out
icebp
adc
in
out
int3
fucomip
repnz
cmc
fdivr
shl
loopne
testb
in
int3
int
shr
into
leave
cmp
xlat
repz
hlt
rol
in
shr
cli
lret
xchg
out
into
rcl
xlat
sti
cmp
jmp
aas
rcr
in
fldl2t
std
ffreep
mov
clc
shl
repnz
fiadds
lock
ror
xor
into
in
mov
rol
in
int3
loopne
fildl
rol
sub
int3
aaa
std
ss
shr
shl
fdiv
ljmp
cmp
and
fcomip
idivl
test
inc
cmp
in
test
xchg
mov
decl
ret
out
lret
rcr
fnstcw
sbb
aam
adc
xlat
mov
hlt
jecxz
rcl
ljmp
enter
aas
in
sti
mov
loop
jmp
icebp
sbb
ret
cli
stc
cli
fcmovbe
cmp
loope
cmp
cli
aad
cmpb
mov
fucom
mov
addl
xlat
aam
leave
cmp
cli
cld
not
out
cmp
shl
leave
xor
cmc
cld
into
cli
out
out
in
xchg
clc
hlt
rcl
cld
in
xor
shl
adc
cmp
lret
ljmp
das
loope
in
fadd
and
cld
aad
xchg
shl
out
in
fmul
fsubp
shl
fiadds
iret
in
iret
int
iret
aam
fcomip
fsubp
test
frstpm(287
addb
roll
shr
in
fcmovne
test
fcomip
fcomp
sub
ret
mov
ss
loop
out
xor
out
sti
repz
shl
clc
call
test
roll
cmp
ret
cmp
out
shl
loope
rcr
rcl
inc
cld
mov
loopne
out
cmp
out
in
shl
shl
rol
call
xor
fldln2
ds
mov
mov
loope
repnz
stc
call
std
out
cmp
add
fiaddl
in
int
clc
fucomi
fst
xchg
orb
lret
int3
cmp
cmp
test
jmp
cli
mov
mov
adc
ljmp
xor
clc
in
fimuls
lret
mov
lock
std
into
shlb
aas
std
aas
repz
out
cmp
xchg
ljmp
cmc
in
clc
fcom
ss
cmp
xchg
idiv
sti
rorl
xchg
clc
repz
icebp
out
rcr
shl
repz
roll
nop
rclb
mov
out
rcr
aaa
xor
enter
fidivl
shl
shr
fcomp
or
icebp
into
and
repnz
cmc
loop
sti
into
fsubr
xlat
aam
xlat
cmc
fsubp
in
ljmp
nop
xchg
jecxz
in
sarb
out
repnz
icebp
shll
cmp
ret
jmp
xchg
fcmovu
loop
jmp
hlt
out
cmp
enter
shl
fcos
ljmp
shl
fidivs
leave
in
hlt
cmp
fsub
shl
loope
jmp
jecxz
lret
out
icebp
in
xchg
loop
int
sub
aas
sar
add
fsub
xlat
mov
test
loope
xor
cmp
jmp
ret
xlat
int
fstp
cltd
sbb
push
ret
jle
add
in
rcr
jmp
stc
into
shl
test
xlat
call
mov
test
fdivp
xor
cmp
cmc
out
out
testb
repnz
ljmp
shl
int
iret
lock
cmc
icebp
std
rcr
sbb
aam
test
icebp
orb
xor
out
stc
in
out
cld
loop
xor
out
cmp
std
in
out
adc
enter
hlt
jmp
xlat
roll
jmp
lret
call
mov
int
jmp
out
aam
ss
fsubrp
aad
fsubrp
repz
fst
test
movl
hlt
jmp
divl
repz
aad
xor
fdivr
out
mov
leave
test
loope
ljmp
repnz
leave
ljmp
rcl
xlat
lret
out
std
xchg
rcll
lret
xor
lret
aaa
hlt
ror
fsubr
ds
fdivr
out
adc
jmp
ret
ljmp
repnz
shl
aaa
leave
fcomp
jmp
inc
sti
cmc
xchg
lret
loopne
out
fxam
sar
orb
neg
enter
lock
jmp
out
xchg
cld
in
incl
rcll
leave
aaa
ljmp
sti
cmp
sub
test
fisttps
rcl
aam
shll
aaa
cmc
loop
fcomp
icebp
xlat
xlat
clc
ljmp
nop
int
jmp
int3
loopne
jmp
icebp
cmp
fadd
hlt
sti
ror
ss
out
out
std
test
ljmp
int3
repz
in
hlt
cmp
cmp
fidivrs
in
fcmovu
clc
decb
add
shl
repnz
in
fdiv
lret
in
test
mov
aas
mov
xchg
repnz
clc
jmp
sti
fnstsw
aam
aad
lds
int3
int
rcl
loop
out
fcmovne
cmp
repnz
loopne
rolb
in
lret
in
xchg
mov
enter
aam
aad
aad
shl
cmp
cmp
mov
lret
out
cld
ret
out
ljmp
fucomp
add
cmpb
fiaddl
iret
fndisi(8087
icebp
out
xchg
jmp
in
cmp
int3
ror
cmpl
cmp
int
mov
shr
clc
xor
xor
jmp
ret
aam
xor
aam
leave
call
xchg
aad
lret
in
xor
jmp
lret
xorb
incb
xchg
sti
stc
out
nop
loopne
int
sub
cmp
iret
cmp
sar
fcmovbe
ds
enter
orb
int3
adc
icebp
call
lock
aaa
std
loope
fcom
aas
test
fstp
xlat
fnclex
lock
xchg
out
icebp
fcom
sti
sarl
out
rcr
aaa
iret
adc
idiv
out
ret
ret
int
lret
fucom
clc
cs
cli
ds
ss
out
ror
testl
lea
leave
ss
leave
cld
out
in
cld
sti
ret
repnz
aam
fistl
xor
out
shl
cmp
in
lock
sarb
jecxz
ret
ljmp
incb
aaa
repz
out
out
cld
incl
fdivrp
fsubr
mov
mov
lret
rcl
xchg
ljmp
imul
cmp
test
inc
out
fst
and
test
test
shl
fucom
not
rcl
xor
iret
in
sar
lock
out
hlt
out
call
loop
hlt
out
in
aam
ss
cmp
cmp
cmp
cmp
and
mov
and
jecxz
rcl
aad
fidivrl
sar
jecxz
xor
push
call
out
xchg
repz
ret
lret
cmp
leave
fcmovu
aaa
lret
test
lock
cmc
call
xchg
mov
hlt
icebp
out
ljmp
loop
stc
cld
loopne
cli
cmp
in
fxch
out
fmulp
xchg
in
in
loopne
xlat
loope
ljmp
ds
fistpll
std
rcr
ret
ljmp
aad
xor
in
cli
int
or
test
add
add
clc
xor
add
jmp
rol
xlat
int
arpl
mov
popf
ss
jle
add
test
ds
aam
loopne
fsubrp
fxch
out
and
fdivs
sar
clc
leave
cmc
hlt
call
shl
jmp
test
fildl
xchg
in
jmp
ret
xor
aam
cmp
cli
fcmovb
mov
in
rclb
int
rcr
das
repnz
loope
test
cld
repnz
cli
jecxz
clc
lret
sub
iret
shl
cmc
leave
in
stc
xlat
int3
cmp
fcmovnbe
xlat
loopne
in
idiv
mov
not
out
call
out
ljmp
cmp
out
cli
ret
aam
hlt
test
jmp
jmp
loopne
xor
leave
sti
in
lret
sbb
ret
cmp
les
mov
fcmovnbe
or
ror
clc
shl
lret
out
aam
and
test
fcomip
fdivr
jmp
out
sar
repz
filds
iret
fdivp
out
aad
decb
lret
in
mov
out
rcl
enter
cmc
clc
cmc
out
stc
ds
jecxz
out
fucomp
ror
in
aas
ror
div
out
out
out
cmp
clc
fidivrs
ljmp
in
cld
shr
out
clc
das
fcmovu
test
in
cld
jmp
cmp
rcr
cmp
mov
xchg
orl
xor
in
jmp
test
fiadds
mov
lock
xchg
in
test
out
rcr
roll
rol
repz
and
xchg
int3
rcl
sub
in
cmp
cmp
cli
in
neg
fsubp
mul
mov
out
out
fidivrl
icebp
into
ds
loop
loope
stc
hlt
sbb
neg
stc
mov
lret
loopne
mov
int3
out
jmp
int
xlat
std
int
cli
rol
ljmp
jecxz
rorl
cmc
cld
xor
shr
lock
test
aad
fidivrl
cli
sti
mov
xchg
xchg
out
add
in
rcr
repnz
xor
shll
cmc
lock
repz
ljmp
mov
leave
enter
push
aas
iret
fst
sti
stc
sub
cld
fincstp
in
jmp
out
iret
std
rcl
fcmovu
rcr
stc
int3
stc
cmp
loop,pt
std
in
roll
out
int
ljmp
repnz
loopne
iret
hlt
aad
fiadds
orl
leave
jecxz
in
cmc
pushl
aaa
rolb
xlat
sti
sbb
call
decb
div
in
icebp
cmp
ss
sar
cmp
ljmp
roll
shr
into
jmp
fdivrp
lret
cld
sarb
mov
mov
into
imul
ret
shr
int3
fucomip
aaa
out
out
cmp
repz
ljmp
fsub
mov
cld
int
lret
cli
hlt
xor
cmp
test
rol
call
add
mov
mov
int
fldl2t
xlat
fcmovbe
jmp
hlt
fmul
loope
aam
mov
fdivrp
loope
test
mov
lret
cmp
jmp
aaa
repz
mul
fcomp
loop
mov
ljmp
xlat
fcmovbe
cmp
sar
lret
lret
in
ds
out
mov
sti
out
int3
jmp
hlt
call
cmp
enter
fcom
cmc
shl
hlt
aad
xchg
mov
fsub
in
faddp
in
fsubr
ljmp
repz
fiadds
xlat
mov
int3
lds
xchg
in
sub
aad
in
ror
fcomp
testl
sti
sub
mov
xchg
ror
xor
jecxz
xor
std
loopne
aad
cld
aam
iret
idiv
std
cmp
fmull
test
ret
cmp
cmp
call
fsub
shl
fadd
lret
out
int3
fcomip
lock
bnd
in
sti
cmp
loopne
clc
in
rcr
lret
jmp
int
cld
mov
out
into
clc
xlat
enter
icebp
lret
out
fnstcw
repz
cmc
sbb
mov
loopne
in
nop
xchg
repnz
repnz
cmp
lret
fnstsw
loope
ret
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
jmp
lret
ffree
fcmovu
sbb
jb
mov
mov
movsl
add
icebp
ret
faddl
out
xchg
fsubrp
shl
repz
std
cmp
cli
cmc
addl
in
cli
lret
xchg
mov
leave
sti
into
sar
cmp
lock
jecxz
mov
fadds
xchg
out
in
ljmp
repnz
cld
stc
cld
fdiv
cld
mov
addb
lret
stc
aaa
in
out
sti
fcmovne
xor
fdiv
iret
rol
cld
rorl
test
out
in
shl
hlt
int
lock
aaa
aad
iret
cmp
out
into
in
out
xlat
cmc
out
jecxz
mov
mov
aaa
cmp
in
int3
int3
cld
aam
test
cld
cmc
fcmovnb
vpavgb
test
in
out
xor
sti
addl
loope
into
mov
ljmp
in
int3
sarl
ret
test
stc
in
std
xchg
int3
sub
rol
fidivl
fdivr
iret
enter
out
out
cli
xlat
vpsubusb
faddl
ror
out
aas
cld
cld
repnz
in
idiv
in
std
jmp
icebp
xchg
lret
clc
ljmp
fchs
xlat
cmc
ret
loope
sar
mov
xchg
xchg
ror
in
test
call
int3
cmp
fsub
fpatan
cld
cmp
enter
in
out
fmull
in
in
stc
stc
int
fdiv
in
std
lret
clc
loopne
cli
test
xor
lret
cmp
stc
fsubr
xlat
fucomp
cmp
mul
in
incb
out
fnsetpm(287
shr
xor
sub
out
aaa
idiv
lret
jecxz
into
fcomi
out
rol
in
mov
aam
clc
in
enter
fmulp
aam
ror
ret
testb
out
leave
cld
mov
loope
xor
aam
cmp
fcomp
ror
sar
roll
lock
in
in
sarl
fcmove
jmp
ljmp
out
sti
in
in
test
loop
xchg
rorl
cli
stc
aaa
int
jmp
shl
aad
aam
jecxz
or
lret
fdiv
mov
xor
xor
iret
cmp
clc
std
ret
mov
lret
rol
mov
sti
into
enter
ds
stc
loopne
test
out
loopne
mov
mov
in
iret
xchg
in
xor
cmp
fnstsw
aam
ds
rol
rcl
jmp
cld
aad
xchg
int3
sti
repnz
xchg
xor
fdiv
int
repnz
cli
lock
in
xlat
in
stc
rol
aas
fmul
mov
in
shl
int
xor
xor
cli
fdivrs
adc
loope
movb
lret
mov
std
xchg
cmc
not
ret
xor
repnz
lock
test
loope
aad
std
cld
xchg
fsts
in
rol
ret
out
ds
fiaddl
rol
addb
lea
xchg
hlt
aaa
rol
lret
icebp
enter
cmp
iret
repz
fdivr
mov
out
jecxz
cmp
fcmovu
ds
loope
sarb
rcr
in
out
orb
xchg
mul
sub
jmp
lret
sti
jmp
neg
xchg
jecxz
sub
mov
jmp
out
ss
lret
xor
aas
cmp
lock
in
xlat
in
xchg
xchg
jmp
jecxz
enter
xlat
cld
jmp
neg
cmp
int
fcmovbe
fptan
cmp
xlat
lret
out
out
ror
repz
loope
lret
xor
clc
idiv
lock
out
cmp
mov
mov
xchg
mov
lret
rol
cmp
out
xor
fcmovnbe
out
jecxz
test
loope
loopne
loope
loop
cmc
lock
enter
ror
sbb
mov
std
out
jmp
rorb
rcl
lock
cmc
jmp
cmc
test
xor
xchg
push
cld
icebp
enter
cmp
int3
hlt
cmp
shr
out
div
cmpb
loop
mov
test
jmp
xor
xor
call
in
incl
pushl
jmp
int
into
fst
das
inc
aam
mov
jle
movsl
add
lock
fcmovb
fcmovne
call
fldl
fsubr
fidivrl
shl
loopne
adcb
mov
aad
aad
iret
ds
not
test
ret
xchg
xchg
fcmovnb
cli
in
lock
xchg
loopne
int3
rcr
hlt
cmp
ss
cmp
jmp
mov
xchg
in
leave
cmp
into
xor
cmc
shl
aaa
loop
xlat
xchg
mov
cmp
add
in
mov
jmp
in
cli
xor
leave
lock
lock
shl
out
xchg
fcomp
loope
fmul
decl
call
jmp
fdivp
out
in
repz
repnz
add
jmp
xchg
cld
fmull
aad
cld
leave
sti
repnz
cmp
sub
icebp
hlt
clc
sti
cli
and
in
loopne
loopne
test
repnz
leave
std
repz
aam
cmp
aas
test
xlat
xchg
leave
fmul
mov
rcr
mov
lds
cmp
aaa
out
fnstenv
cmp
in
xlat
xor
xlat
call
jmp
fnclex
mov
loope
ret
les
stc
sti
fidivrl
repz
shl
loop
loope
clc
in
jmp
std
call
repz
xor
shl
lock
test
sar
fildl
int3
enter
fiadds
cli
clc
out
cld
aas
lret
lock
push
loopne
mov
iret
rcl
xlat
xor
out
lret
sbb
stc
in
jecxz
fildl
mov
jmp
int
xor
xor
aaa
sar
sub
div
ds
out
enter
ljmp
cmp
rcl
sti
sbb
cmp
in
repnz
in
mov
in
mov
enter
call
int3
add
test
cmp
mov
in
xor
fldln2
jecxz
lret
ss
aam
cmc
out
inc
in
in
mov
jmp
lret
call
fstpt
sti
icebp
ret
out
rorb
loopne
clc
sti
cli
repnz
shrl
int3
cmp
cmp
ret
in
out
cmp
ds
loope
out
filds
icebp
sti
enter
fucomp
aaa
loopne
cmp
rcr
mov
cmc
in
decl
enter
neg
fldln2
xor
sar
cmp
sarb
fsubr
cld
add
sti
orl
aad
cmp
xor
call
idivb
repz
neg
xchg
fneni(8087
rorl
in
cmp
into
cmp
loopne
loop
lds
xchg
hlt
lret
shl
repz
loopne
cmpb
cmp
ret
aad
jmp
mov
fldl2e
jmp
in
loopne
xchg
fbstp
xor
rcl
cs
cmp
cld
aas
ret
roll
fimuls
sub
aam
cmp
in
leave
hlt
cmp
out
ljmp
shl
lret
cli
jecxz
cld
lret
icebp
lock
clc
stc
aaa
cmp
repnz
jecxz
jecxz
mov
dec
int
fcom
aad
neg
aad
ljmp
fsub
cmp
mul
int3
jecxz
loopne
cmp
out
leave
xor
cli
jmp
fcomip
idivb
test
xchg
mov
test
icebp
fstl
in
loop
cmp
int3
icebp
rol
std
int3
in
call
cmc
stc
loopne
fimuls
xchg
cmc
out
ljmp
sti
sub
adc
in
fstp
fdivrp
loopne
out
call
cld
in
aam
clc
rcr
sti
out
cmp
out
test
out
lret
lret
jecxz
xchg
into
int
shr
repz
out
repnz
testl
in
fsub
xchg
adcl
iret
sarb
shr
fsub
loopne
xor
mov
fcmovnb
mov
xchg
cmc
loopne
int
clc
cmp
xor
cmp
fst
not
in
repz
fisttps
lret
push
hlt
cmc
xor
xor
cmc
aam
cmp
fmul
neg
fadds
xchg
neg
sar
ror
cmc
xchg
cmc
xor
in
jmp
fxch
in
cli
fcmovb
xchg
inc
sti
std
filds
ljmp
mov
cmp
je
mov
mov
pop
jmp
into
lret
fcmovne
into
fistpl
adcl
pop
xchg
jle
movsl
add
shlb
shl
cld
lock
fsubr
lret
mul
fscale
xlat
xor
test
aad
icebp
out
sti
xor
stc
cmp
repz
fdivrl
iret
loope
hlt
out
ret
std
testb
in
leave
test
vpsubb
lret
in
repz
xchg
cmp
clc
ret
xchg
in
into
std
mov
repz
hlt
cmp
lock
lret
sub
into
aas
roll
cli
in
ljmp
jmp
cmc
shl
lret
std
ret
out
xchg
fcomi
test
in
mov
xor
in
xor
cmp
sti
cli
aad
mov
jmp
call
sub
ljmp
fcomp
out
shr
faddp
and
ljmp
not
int3
lock
aam
iret
fcomip
loopne
loopne
in
loope
out
loope
lock
shlb
in
aaa
out
lret
fiadds
in
jecxz
jecxz
in
repnz
addl
clc
ss
cmp
shl
and
ret
int3
neg
mov
loope
cs
xor
cmp
out
shl
rcr
movb
stc
mov
in
ljmp
in
into
into
cld
call
sub
addl
jmp
icebp
mul
ss
call
std
roll
sarl
stc
test
in
fimuls
xor
stc
jmp
cmp
std
shr
dec
ret
int3
in
xchg
iret
in
xchg
fucom
repnz
out
jmp
lock
vmovq
and
loopne
xor
cmp
int
fcompp
cld
loop
hlt
and
mov
mov
ret
out
and
hlt
xlat
iret
jecxz
aam
xor
sarl
sti
cmp
mov
jmp
out
loop
aad
jmp
fldz
cmp
cmp
cmp
loop
shr
cmc
in
in
lret
repz
std
cmc
sar
loopne
in
shl
ds
sar
mov
sti
xchg
lret
jecxz
cli
int
push
addb
sti
imul
fucom
enter
ror
into
in
shl
lret
jmp
lret
das
jmp
ds
lret
cmc
test
clc
enter
in
sti
iret
xchg
lea
out
xor
aad
lock
cli
fmulp
ds
std
xlat
jmp
aas
in
cmp
fists
lret
lock
cld
loop
lock
sar
cld
lock
loop
jecxz
repnz
cli
int3
lret
ss
aad
jecxz
rol
leave
lret
xlat
test
aam
sar
xor
out
aas
rolb
iret
fcom
xlat
fcmovbe
mov
jecxz
aam
ljmp
cld
not
jmp
into
icebp
incl
in
enter
std
sar
call
in
cli
jecxz
fst
aas
cmp
cmc
sbb
aam
test
out
out
repnz
ss
out
iret
push
in
fmull
iret
out
ljmp
aaa
rcr
out
repnz
into
fadd
testb
fcmovu
cli
nop
sti
int3
fsubrp
fcom
xor
fnstenv
cmp
cmp
aaa
test
out
loope
test
iret
sar
xchg
xchg
out
iret
out
repnz
fcmovnbe
into
rcl
clc
cmp
cli
adc
in
xor
jmp
clc
in
clc
iret
rol
xbegin
jecxz
iret
fdivp
lock
cmc
icebp
sar
aad
sti
cmp
rcr
out
cmc
aad
call
fucomi
adc
lock
out
shl
shl
call
loope
in
cmc
ret
std
jecxz
ljmp
repnz
mov
test
xor
cmp
in
icebp
cmp
repnz
fidivrl
aad
out
cmc
lds
std
lock
fcmovnbe
out
xchg
jmp
xor
jmp
fidivrl
loop
in
out
test
ror
loope
lret
into
mov
repnz
mov
sarb
call
jmp
jecxz
loopne
shl
fimuls
mov
mov
std
int3
in
fnstenv
aaa
cs
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
aad
into
aad
fst
int
loopne
in
mov
xchg
add
cmp
cmp
stc
fdivp
std
roll
fcmovne
adc
xor
ret
cmp
lock
cmp
cmp
into
shl
in
shl
mov
ljmp
mul
out
cmp
aam
ror
aad
in
ds
div
mov
leave
nop
int
cld
orb
iret
ljmp
std
sar
ds
mov
fimull
ljmp
ljmp
loop
aad
loopne
flds
lea
cmp
fptan
aad
aad
into
clc
ret
in
sti
test
lret
mov
aad
ss
cmc
cmp
sti
std
into
rol
movb
mov
cld
loope
cld
in
ljmp
shl
cld
loope
cmp
repnz
loop
imul
repnz
cmc
cmp
movb
sub
lret
xor
cmc
in
loop
int3
fsubrp
out
icebp
fdivr
lret
addl
in
rorl
les
into
iret
cmc
imul
stc
aad
rol
enter
int
loope
xchg
lea
ljmp
cmp
aam
cmp
std
jecxz
fcmove
out
loope
jmp
mov
rcll
xor
cmc
jmp
fistpll
icebp
jecxz
loop
in
in
fstp
mov
mov
rol
xlat
leave
aad
fiadds
loop
cmp
mov
loop
ljmp
cli
cmp
cld
lret
cmp
ret
roll
cli
std
xor
leave
xor
aad
fcmovnu
cmp
cmp
xlat
xchg
ret
mov
aam
loope
aaa
shr
std
hlt
aad
loope
cld
lock
stc
loope
fld1
aam
fildl
faddl
icebp
fcmovu
aam
in
xorb
fcmovnu
test
clc
call
out
in
call
xlat
test
fcmovnu
fcomip
clc
and
adc
mov
xchg
mov
ljmp
shl
rcr
loopne
fsub
inc
xchg
movb
cld
xchg
jmp
fmul
fdiv
cmp
jmp
ljmp
xlat
fneni(8087
fcmovnbe
lret
fisttps
loopne
aaa
stc
icebp
ljmp
faddp
ret
jmp
sti
mov
mov
rorl
call
cmp
rol
ret
cmpl
sti
loopne
cli
cli
fsincos
clc
mov
xchg
out
mov
sti
out
clc
add
sarb
sar
loope
mul
loopne
stc
orb
lock
leave
cmc
cmp
int3
fnstcw
loope
fcomip
ret
mov
ljmp
jmp
repz
call
fcmove
rolb
xchg
mov
loope
lret
xchg
mov
call
cmp
std
lock
sti
aad
mov
fstp
mov
mov
in
imul
not
ror
stc
cmp
int3
ljmp
cld
cld
xchg
fiadds
sar
lock
sub
cmp
cmp
in
clc
cmp
aad
cmp
stc
xchg
fildl
lret
fmull
in
aam
call
sar
cmpb
jecxz
rorb
in
ljmp
jmp
cmc
in
xor
idivb
shl
fsubp
lock
out
loope
orb
divb
into
xor
clc
lock
cmp
xlat
out
stc
aam
std
in
adcb
icebp
cld
in
in
out
repnz
fstpt
out
fiaddl
jecxz
xchg
rcr
icebp
iret
shl
in
aaa
rcl
lret
cmp
add
xchg
repnz
addb
cmp
das
aaa
out
cmp
ffreep
cli
xchg
stc
call
call
fdivp
xchg
jecxz
out
in
out
lock
rcr
cmp
cmc
out
cmc
test
cld
mov
jmp
aad
sub
cmp
jecxz
into
ds
add
addl
ror
shl
loopne
in
bnd
int
int3
xor
shl
test
call
test
lret
hlt
in
mov
adc
and
mov
mov
sub
xorl
mov
sbbl
push
mov
xor
movl
cmp
movl
je
sbb
jmp
rcl
rcl
rcl
aad
xchg
stos
gs
jle
add
mov
loope
cmp
fldz
cli
loopne
rcl
stc
cmc
div
rorb
into
fsin
in
xchg
out
int
shl
enter
cmp
adc
cmp
testl
int3
into
rolb
out
in
cld
repz
fdivr
test
repz
out
xor
iret
std
fstl
leave
icebp
imul
fidivl
fdivr
ret
test
icebp
fcomi
ljmp
xchg
xor
in
in
cld
lret
aaa
repnz
cmc
stc
f2xm1
aas
ds
lds
loop
icebp
out
jmp
jecxz
out
xor
into
aad
in
loope
test
div
roll
cli
mov
lret
jecxz
fmul
fcmovnbe
leave
fcmovnu
cmp
int
sti
out
call
fiadds
xchg
call
jecxz
les
int3
fcmovbe
aad
in
loop
lock
cmc
movb
xchg
in
leave
ret
icebp
cmp
fldl2e
jmp
cmp
addl
mov
ret
cmp
cmp
ds
aas
lock
cli
or
and
mov
out
mov
xor
in
ljmp
cmpb
fnop
roll
stc
int
iret
leave
xchg
loopne
clc
out
shr
shr
ds
loopne
in
repz
inc
mov
jmp
lret
jmp
test
sub
cmp
cmp
cmp
mov
shl
test
testl
out
sar
aad
cmp
not
xor
out
rolb
in
out
rcr
divl
fistpll
fcmove
sarb
fisttpl
mov
in
lret
mov
mov
lret
int3
in
in
cmp
jmp
aad
mov
stc
xchg
sub
in
dec
mov
jmp
stc
cli
fstpt
int3
in
out
clc
aad
loopne
fchs
xchg
mov
xor
shl
xor
int
rolb
shl
mov
out
fsub
out
leave
mov
mov
loope
sti
ss
into
fdecstp
in
ror
mov
fcmove
sbb
in
leave
xlat
ss
fsubr
in
lret
sarb
into
faddp
ret
mov
into
jecxz
fcmove
cmp
fcomi
stc
xlat
rcl
stc
hlt
cli
call
mov
fucomip
xchg
cs
sarb
cs
xor
out
adc
xor
xlat
fiadds
shr
shr
aam
stc
xor
test
into
xor
shl
sti
sarl
idivb
les
out
leave
mov
out
mov
lret
jmp
cld
icebp
ljmp
in
mov
cld
mov
out
mov
out
mov
rol
aam
fidivrs
cmp
shl
iret
loope
iret
ret
loopne
mul
loopne
clc
loop
ljmp
cmp
lock
fdivs
icebp
std
shl
cmp
fcmove
cld
fsubrp
mov
das
in
xor
std
fprem
test
div
ret
bnd
jmp
iret
adc
call
jmp
out
sarb
leave
fcmovu
out
sub
ret
adc
and
fsub
fcomip
loope
das
in
ret
sarb
jmp
testl
ret
lret
call
xor
hlt
fcmovbe
xlat
int
std
out
into
lock
adc
ret
ret
loope
loope
in
in
fists
xor
jmp
ror
iret
std
div
fucom
call
mov
lret
out
int
xor
fxch
out
flds
in
leave
shl
fcmovnu
sub
shl
loopne
out
lret
shl
out
into
xor
fucom
add
in
in
mov
enter
in
loope
neg
out
ss
cmp
stc
fucomip
icebp
into
rcl
test
clc
aam
fcomi
std
int
into
lock
mov
int3
xchg
call
hlt
fadd
aad
fadds
leave
aad
adc
test
repnz
stc
jmp
repz
not
ds
ljmp
repz
fiadds
aad
out
xor
icebp
shl
sbb
shr
xlat
stc
mov
sbbl
mov
andl
sub
addl
xor
movl
cmp
jne
adc
mov
sbbl
jmp
enter
int
int
repz
mov
jle
xchg
add
cli
std
sti
cli
jmp
xchg
xchg
lret
fucomip
fmul
fcmovbe
ret
loopne
mov
test
into
loope
jecxz
xchg
fmul
aad
aam
in
fidivs
fidivrl
jecxz
fcom
clc
fcmovbe
sbb
out
in
xchg
xchg
out
xor
lock
in
fucomp
enter
iret
rol
sti
cmp
mov
jmp
xchg
ret
enter
jmp
cmc
loopne
stc
rol
or
repnz
jmp
faddl
out
roll
shlb
xor
fsubr
aam
shr
cmp
loop
fcomi
fldl
xchg
xor
lock
cmp
cmp
cmp
loopne
out
std
hlt
ffreep
jmp
jmp
mov
nop
out
cmp
jmp
xor
jmp
adc
int3
clc
shr
ret
jmp
out
cmp
mov
rcl
xor
into
int3
sti
fcmovbe
fsubr
loopne
rolb
clc
out
mov
or
out
fsub
cmp
fcmove
into
cmp
cmp
addb
ret
sti
mov
call
roll
icebp
ss
repz
clc
in
loopne
lock
fxch
mov
int3
in
loopne
mov
enter
sti
out
in
sarb
fstp
addl
call
loopne
leave
xlat
cmp
aad
cli
neg
cmpb
icebp
cmp
call
jmp
cmp
call
test
cmp
hlt
hlt
cmc
fistpll
cmp
in
ljmp
or
int
in
cld
out
jmp
aaa
jecxz
loopne
stc
out
ret
int
fucom
pop
xchg
test
cmp
cmp
aaa
stc
repz
sti
in
ljmp
mov
or
ljmp
cs
lret
xor
shl
cmp
mul
cli
fisttpl
test
in
aad
sarl
cmp
clc
sar
loop
aaa
std
mov
loop
fxam
out
fmuls
jmp
loopne
hlt
shl
jmp
cli
loope
xchg
test
clc
ljmp
loop
xor
in
iret
fdivrl
out
ljmp
fiaddl
test
loopne
into
xchg
cmc
icebp
xchg
ror
jmp
ror
jmp
idiv
test
sti
fimull
mov
nop
xchg
xchg
dec
in
in
in
in
jmp
addl
xchg
cli
jmp
lret
aam
int
xor
cmp
cld
fmul
ret
sar
icebp
testl
lret
lret
repz
call
call
test
fsubr
loop
mov
ret
std
mov
mov
out
ljmp
fildl
lret
mov
rcll
cli
jmp
cmp
clc
into
aad
fcmovnbe
lock
fcompp
jecxz
in
out
dec
mov
in
fld
clc
cmp
lret
jmp
stc
out
rcr
roll
ret
out
lret
call
sub
ror
cld
in
cmp
sar
rorb
testl
int
call
icebp
repz
lock
shl
aam
in
loope
rolb
mov
icebp
das
jecxz
ss
repnz
rcr
fpatan
mov
sti
in
in
call
xchg
lret
idivl
xor
fxtract
icebp
clc
cmp
out
xchg
incb
out
lret
xor
xor
iret
out
lret
ds
std
loope
ds
loopne
stc
aas
jmp
fiaddl
out
call
cld
xlat
int3
clc
out
sar
lock
leave
fcmovu
std
test
in
lret
in
jmp
repnz
das
les
repz
fiaddl
enter
in
mov
mov
xor
iret
cmp
icebp
ret
cld
fcmovnbe
loop
jecxz
jecxz
aas
clc
in
fsubp
in
shrl
jmp
or
aad
stc
into
repz
out
in
hlt
cli
lret
mov
fsub
fstl
jmp
cmp
aam
jmp
clc
out
fildl
add
stc
lea
lret
aam
xlat
lret
xlat
aad
sbb
xor
add
jmp
mov
xorl
xor
add
adcl
mov
sbb
mov
andl
xor
subl
jmp
rol
aad
aad
aad
leave
mov
dec
int
jle
xchg
add
fadd
aas
rcr
ljmp
ljmp
in
xlat
int3
out
lret
out
out
stc
repnz
out
enter
out
jecxz
mov
xor
cmc
in
mul
cmp
in
in
fdivrp
mov
out
in
cmp
xor
shr
out
shr
stc
cmp
icebp
aam
roll
popl
into
cmc
rol
ret
xor
cmp
leave
rcr
int3
aaa
not
cmp
jecxz
call
mov
call
ret
icebp
not
clc
out
cmp
int3
addl
add
out
test
icebp
xlat
out
out
enter
ret
fcmovnu
test
jmp
ret
loop
int
mov
ret
rcl
aam
ss
incl
fsub
addl
int
into
mov
xchg
xor
idivb
aam
std
xlat
shlb
xchg
cmp
aam
loop
lret
icebp
hlt
int
xchg
int3
in
ret
aam
fidivrl
out
iret
in
lret
f2xm1
repz
mov
fisttpl
out
iret
xchg
xchg
aad
out
cmp
cli
lock
cmp
xchg
leave
xchg
xchg
xchg
xchg
xorb
repnz
sti
test
loope
out
repz
cli
leave
out
test
int3
cmp
int3
test
cmp
out
cmc
loopne
test
adc
std
cli
loope
lret
mov
aaa
xlat
rcr
out
cmc
adc
repnz
ds
clc
addb
aad
in
aam
loopne
cld
rol
mul
ret
neg
in
fsubrp
fcoml
repz
ss
ljmp
in
fadd
stc
ljmp
nop
fucomip
xchg
div
int
bnd
xor
leave
cmp
fdivrl
xchg
aas
in
in
fistl
icebp
call
xor
fmul
adc
mov
jmp
loope
jmp
icebp
in
shl
xchg
loop
icebp
sar
cmp
aam
not
loope
aad
frstpm(287
addb
leave
mov
jmp
xor
xor
cld
repz
ret
shl
add
xlat
addb
lock
test
fidivs
cmp
fldpi
jmp
xor
cmp
lret
call
repnz
out
xor
cmp
fld
leave
fcmove
loop
mul
faddl
out
fucomp
out
lret
rorl
xor
repnz
lock
repz
xor
stc
xlat
ror
fiadds
xchg
loopne
aad
call
fidivl
cmp
in
cmp
ret
test
incb
leave
stc
rol
mov
ljmp
cld
shr
std
ljmp
loop
mov
decl
out
leave
xor
xor
loopne
cmp
aam
loopne
cmp
mov
shlb
loope
xor
lds
aad
rcl
lock
inc
test
out
int
incb
xchg
loope
das
out
sar
div
out
ds
sarl
clc
loopne
cld
jmp
cmp
fcmovne
rolb
or
jmp
fsqrt
into
sarb
icebp
lock
fcmovbe
fcomp
xchg
loopne
stc
out
ficoml
ss
cmp
cmp
iret
cmc
cmp
cmp
fildl
out
loop
xor
hlt
out
jecxz
xor
in
xor
lret
iret
cmc
stc
rcr
xlat
cld
sti
jmp
jecxz
loopne
and
clc
fdivs
xlat
repnz
cmp
fcompp
clc
cmp
fldl
fcmove
ret
shl
shl
in
in
enter
out
jmp
fsubrp
int3
mul
aas
stc
std
hlt
adc
mov
aas
lock
lret
sti
shl
sti
rcr
lock
cmp
adc
not
out
loope
dec
in
loopne
fisttps
aad
jmp
out
loop
test
ret
test
enter
xchg
fcmove
into
cld
and
xor
sti
cmp
add
rcr
sbb
std
test
jmp
shl
xchg
loopne
shl
xor
out
stc
stc
loopne
ds
les
jecxz
out
fucomip
rol
test
icebp
shl
out
xor
mov
jmp
and
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
mov
xor
mov
jmp
into
int
fstp
aam
or
addr16
gs
jle
xor
cmp
out
hlt
call
mov
mov
loopne
jmp
sti
lret
repz
ds
iret
cmp
xlat
out
cmp
enter
int3
xchg
xor
in
cli
ss
fptan
cmc
cmp
rol
ret
mov
decb
jmp
mov
aam
xor
fdiv
aad
cmp
cmc
loop
xor
aam
rcl
mov
mov
mov
neg
vaddsubps
repnz
out
orb
repnz
in
aad
sub
iret
out
aad
into
loopne,pt
in
cmp
fucomi
repnz
cmp
ljmp
aaa
out
sti
repz
ss
repz
aas
sbb
cmc
in
cmp
mov
out
out
sub
leave
lret
clc
faddp
stc
mul
adcl
mov
out
repnz
ss
out
xor
fistpll
aam
in
jecxz
cli
out
fadd
in
xchg
ljmp
jmp
out
icebp
aam
ret
cld
mov
shr
in
out
sub
cli
lds
repnz
in
clc
not
cmp
loope
stc
jmp
addl
aam
sub
fmul
xor
rcl
xlat
cmp
leave
aad
out
xchg
fdiv
lret
in
cmp
shll
xor
int
aam
fsubrp
aas
loop
xlat
filds
xchg
les
ss
repnz
lock
lret
cmp
xor
shl
repnz
loop
cli
mov
std
enter
not
call
stc
cmc
sti
ss
jecxz
ret
decb
nop
lret
in
cmc
shl
aad
jmp
std
cmp
cmp
fistpll
ljmp
test
adcl
ss
xor
hlt
cmp
and
aam
rol
lret
jmp
loop
test
hlt
repz
sarl
cmp
xlat
aad
jecxz
stc
fcmovu
stc
ret
xrelease
mov
out
enter
xor
repnz
hlt
int3
inc
aad
sbb
addb
call
cli
aaa
aas
loop
fdiv
sti
hlt
rol
loopne
enter
xchg
out
out
les
ret
clc
cmp
div
xor
fcmovu
call
cld
out
xchg
mul
lock
mov
ljmp
int3
aad
icebp
test
cli
aad
clc
fdivr
sti
in
ror
int3
xchg
fiadds
aaa
out
cmp
shl
fdivrl
fmuls
fmull
lock
repnz
cli
aaa
div
repnz
aad
loope
lret
out
in
in
out
xor
in
hlt
out
into
out
iret
in
out
roll
mov
test
in
int
xor
clc
fnstsw
into
loop
or
lret
idiv
fcmovne
mov
int
xor
shll
cmc
in
cmc
fyl2xp1
loop
cmp
int
jecxz
out
jmp
ror
in
cli
cmp
imul
icebp
clc
cmp
fcmovnbe
ret
loop
hlt
fucomi
loope
fildl
lret
xchg
aam
shl
aam
sti
int
int3
in
cld
fsub
ds
aad
fsubr
lret
fmuls
lds
hlt
xor
into
shlb
rcl
div
aad
jecxz
cli
lret
xlat
int
out
iret
ror
shlb
aad
out
lock
out
lock
int
shl
test
stc
ffreep
out
cli
repnz
call
xchg
out
int
cmc
out
cmp
and
ret
div
ljmp
jmp
jecxz
fucomip
cmp
rcl
cmp
cmp
addb
loop
leave
fmulp
idiv
fsin
clc
int3
ror
int3
repnz
cs
out
fnstenv
leave
stc
cmp
in
shr
in
fsubrp
jecxz
xor
fisttpll
cmp
aaa
cmp
rcl
xlat
sti
rolb
test
fcomp
fildl
xchg
repnz
aam
cmp
cmp
cmc
dec
fnstcw
ret
cmp
mov
mov
fldl
loop
jecxz
out
xlat
xor
ror
lret
adc
loope
out
repz
cli
fiadds
leave
enter
div
icebp
mov
and
jmp
leave
rol
ret
int
cwtl
stos
cltd
fs
inc
and
xchg
add
subl
fmul
div
jmp
loop
in
xchg
loope
test
call
in
aaa
clc
fmul
jmp
xor
out
hlt
loopne
fildl
xchg
cmc
call
ror
leave
in
out
cmpl
fucom
fildl
loop
rcl
shl
cmc
ror
stc
fcmovnbe
sarb
test
adc
fucom
mov
cld
mov
test
lret
cmp
hlt
cmp
cmp
ds
fsub
in
sarb
loope
ljmp
fdivp
clc
shl
xor
in
out
fstpt
cmp
div
loope
jecxz
out
enter
mov
repz
add
xor
xor
cmp
cmc
aad
cld
fdivr
call
jecxz
fcoml
in
out
xor
lret
repz
test
out
loopne
adc
out
out
std
lock
jmp
in
aas
loop
cmp
mul
rolb
mov
fisttpll
into
jmp
fcmovnbe
aad
repnz
icebp
out
loop
lret
xchg
out
ss
lret
fstp
int
xor
in
xlat
call
clc
xchg
cmp
cli
ljmp
sti
repnz
aas
iret
icebp
in
rcl
xchg
test
aad
loop
hlt
loop
xchg
hlt
icebp
int
cmp
imul
sti
hlt
clc
jmp
std
fstp
jmp
call
leave
test
jmp
aaa
cmc
out
lock
cmp
clc
cld
out
cmc
sar
ds
out
mov
lret
xchg
out
das
idiv
aaa
sar
stc
call
faddp
in
out
loopne
in
fdivp
xchg
sbb
in
lret
icebp
out
lret
shl
test
cmp
repz
leave
in
loop
mov
loope
cli
out
repnz
xlat
out
icebp
xlat
aam
cmp
cmp
xchg
loop
xor
xor
fsub
int3
repz
clc
aas
int
fmul
idiv
ret
jmp
loop
loopne
and
xor
aam
into
icebp
stc
int
jmp
rcr
aaa
jecxz
lock
ret
fcomip
jecxz
int
cmp
out
call
ss
sti
xor
test
loopne
addl
out
in
fyl2x
aaa
hlt
fcmovnbe
into
cli
test
les
clc
fndisi(8087
mov
test
aam
out
xor
cmp
repnz
rol
out
clc
shr
loope
std
lret
sub
mov
rcl
cmp
out
cmp
cmp
cli
cmp
aas
mov
rcr
aad
fmuls
rcll
in
cmp
sti
cmp
sar
cmp
repz
mov
mov
xor
aad
cs
sti
aas
stc
into
loop
mul
std
out
dec
nop
fdivrp
repz
stc
fyl2xp1
ss
loope
cli
cmc
shr
cmp
loopne
orl
ret
into
cmp
xor
cmp
aaa
std
loopne
loopne
fcomip
loop
ret
lea
loopne
iret
sar
repz
ljmp
fucomip
fsin
jecxz
fiaddl
fsubr
jmp
divb
cli
incb
in
ret
repz
fsqrt
mov
mov
mov
loope
xor
out
cld
xor
fyl2x
fucom
lock
out
lret
xlat
fmulp
or
out
dec
lock
xor
in
icebp
into
push
or
repnz
sti
in
aam
xor
fcmovne
hlt
cmp
push
repnz
fsub
decb
sbb
in
std
shl
ret
jmp
hlt
ljmp
stc
jmp
fcmovb
icebp
xchg
mov
xchg
ljmp
aaa
hlt
call
xlat
fcom
cmc
out
idiv
xchg
in
fucom
call
xor
xlat
jmp
lret
iret
shr
out
ds
repz
cmp
out
ljmp
call
das
sar
fcmovne
into
sarb
iret
hlt
test
fcmovnbe
ret
loope
leave
rcl
out
xor
int3
hlt
out
xlat
std
lret
hlt
lock
aas
fsubr
xchg
aas
rcr
mov
or
mov
pop
ret
push
mov
sub
adc
jmp
rol
lret
iret
fcmovnbe
fcmovb
addr16
js,pn
lods
adc
add
int3
in
cli
or
shl
xlat
loopne
xor
shr
xlat
lock
cld
in
sar
hlt
jecxz
mov
test
decb
lret
xor
fdiv
lock
xchg
fmul
fucom
fptan
fcmovne
cmc
cmpb
ret
jmp
cmp
cmp
cmp
stc
xchg
test
mov
leave
mov
mov
fmul
jecxz
cmc
ljmp
fdiv
ljmp
sti
ljmp
call
mov
divl
sub
clc
cmp
repz
sbb
icebp
movl
mov
in
lret
imul
div
lret
clc
xlat
shl
cmc
sti
rcl
ror
int3
adc
in
into
in
icebp
dec
sar
icebp
lock
into
xlat
ss
aad
or
sar
loopne
cmc
ret
out
sti
lret
int
lock
clc
in
cmp
sarl
stc
test
loope
ret
lret
ficoms
test
das
rcl
repnz
out
call
into
aam
xchg
rorb
fndisi(8087
out
shl
cld
mov
ljmp
repz
xchg
xlat
aas
cli
jmp
ljmp
xchg
shr
iret
clc
rol
into
leave
fdiv
fucomi
shl
sar
loop,pt
xlat
fdivr
inc
mov
icebp
mov
shl
int3
icebp
sarb
call
sti
icebp
hlt
in
jecxz
sar
hlt
and
test
jmp
sub
lret
in
jmp
test
jmp
mov
loope
ret
shll
ljmp
int3
shl
repz
lret
mov
xchg
idiv
aaa
aam
call
out
loope
clc
cli
cld
sar
shl
cld
mov
mov
fimuls
in
enter
rcr
shl
fildl
mov
enter
in
xchg
iret
shl
shr
in
fdivrl
das
sti
lock
mov
fisttpll
in
incb
xor
icebp
enter
ds
shl
shl
xchg
fdivp
lret
icebp
int
xor
xor
int3
xor
ret
cmp
repz
lock
in
ljmp
fst
cmp
sar
rol
xlat
fdivr
call
out
test
clc
out
out
int
cmp
ss
fsubp
loope
cli
loopne
cmp
fstp
fmul
cli
mov
fadd
not
clc
jmp
rcr
repnz
mov
and
lock
shr
fcmovne
cmp
ror
in
xchg
call
mov
iret
fucom
xchg
aam
shl
jmp
jmp
cmp
idiv
shl
out
cmc
repz
incb
int3
mov
cmc
test
fucomp
iret
aam
clc
fdiv
out
loope
ret
ljmp
iret
fimuls
aad
xor
ds
rolb
in
mov
loop
shr
xor
lret
out
cmc
lret
sbb
ret
cli
cmc
add
lret
out
xchg
repnz
into
in
shrl
call
repnz
loope
cmp
cmp
fcmovbe
sbb
cli
in
in
in
cld
int3
repnz
xor
clc
aad
loope
lret
ret
fdiv
test
fdivr
fisttpl
cld
into
icebp
in
xlat
hlt
jecxz
shr
fistpll
aam
rcr
clc
out
repnz
clc
in
sti
addl
lret
aam
ret
xor
cmp
iret
rcl
cmp
cmp
or
out
enter
lret
aaa
ss
lret
in
fcmovb
fprem
idiv
not
fcmovne
ljmp
aam
idivl
cmp
sar
test
mov
jmp
decl
in
xor
xor
std
stc
cmp
fcmovbe
icebp
loopne
ret
lret
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
xor
adc
mov
add
mov
sbb
mov
jmp
int
lret
int
and
test
aas
add
jecxz
loop
fdivrp
out
xchg
rcl
loope
leave
std
fptan
not
cmp
xlat
fdivrl
sar
stc
loopne
int
out
cli
jmp
xlat
ret
std
hlt
fnstsw
adc
out
stc
cmp
loop
in
xchg
test
aaa
out
cmp
cmp
ror
iret
fcomi
stc
xchg
fsubr
mov
or
in
mov
call
fnstsw
sar
out
cld
mov
rol
les
out
mov
int
hlt
not
leave
out
roll
cld
fildl
jmp
in
orl
xlat
cmc
repz
rcl
adc
int3
fsub
loopne
cmpb
lret
icebp
in
mov
out
fcmovbe
call
out
iret
fxtract
fsub
fsubp
std
out
cld
and
iret
loope
aaa
fcmovnu
clc
in
leave
not
addb
faddl
leave
repnz
call
aad
repnz
clc
aad
cmp
int3
shr
rorl
out
stc
orl
in
loop
out
shl
cmpb
sar
iret
cmp
leave
clc
out
mov
int3
ljmp
enter
repz
out
cld
loope
iret
cld
jecxz
loop
std
call
cli
cli
mov
lock
call
stc
loopne
in
faddl
clc
int3
call
aam
jmp
ror
jmp
rcr
ret
sar
cmp
faddp
jecxz
repnz
ror
call
cs
int
in
into
fcom
jmp
jmp
flds
ret
mov
cli
adc
jmp
shll
fcom
fnsave
repnz
roll
aad
xchg
test
iret
divb
cmc
hlt
xor
xlat
stc
sarb
cmp
fdiv
cmp
loope
lret
xchg
shl
repz
repz
xor
out
fsubr
cmp
cld
aaa
out
xchg
sti
call
repz
in
aaa
hlt
std
fistpll
clc
sar
test
enter
int
lret
in
in
lret
xor
div
in
loop
aad
lock
loop
hlt
loop
cmp
lret
out
int3
iret
xchg
aam
xor
cli
cmp
not
shl
fidivrs
icebp
cmp
in
fsubp
loope
fdivr
out
mov
xchg
cs
xor
ljmp
ret
int
fmull
lock
shr
fsubr
icebp
loope
into
leave
out
cmp
int
stc
fst
int
fdivrp
lds
jmp
icebp
aad
fdiv
ss
std
cmc
enter
iret
ror
clc
cmc
sbb
fcmove
out
mov
sti
xchg
jmp
mov
out
aaa
cmp
sbb
shl
ret
out
sti
repnz
lret
fldl
lret
call
rcl
hlt
out
fucomi
sbb
fcomip
std
cmp
in
mov
fildl
jmp
xor
fucomi
lock
clc
sbb
cmc
cmp
cmc
aam
cli
fcmovne
call
fucomip
in
in
cld
in
clc
cmp
int3
out
repz
rcr
mov
fstp
cmp
cs
fmul
rcr
div
lret
roll
sbb
test
aad
repz
ss
clc
shr
std
into
sar
int
cmp
mov
loop
jmp
ljmp
icebp
lock
fld
ljmp
loop
fstp
loopne
mov
ljmp
xchg
xchg
xchg
in
sar
cmp
aaa
int3
fcmove
cmp
imul
les
clc
test
call
out
loopne
hlt
icebp
xor
in
fxch
jmp
fsub
test
mul
cld
mov
lret
fmulp
enter
out
out
shr
jmp
iret
loope
loop
fisttpll
out
das
loop
in
into
cmp
fadd
test
call
out
mov
xor
mov
xor
xor
mov
sub
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
ret
ror
rcr
fnsave
xchg
sti
mov
dec
xchg
mov
jle
in
fucomp
loop
sub
shr
xor
sti
jmp
jmp
repnz
mov
jmp
leave
loop
sar
cs
in
xor
fcmovbe
in
aam
out
sarb
stc
push
std
stc
cli
enter
imul
mov
in
in
xor
in
cmp
aam
rcr
test
xchg
shl
std
int3
icebp
test
mov
lret
out
clc
shl
cmp
in
cld
aad
out
mov
enter
xchg
fsubrp
in
ret
out
int3
clc
into
loopne
ljmp
mov
test
nop
out
sub
aad
fxch
xor
cmp
ret
out
aad
repz
aad
fisttps
into
int
shr
ret
neg
call
ds
ret
cmp
jmp
mov
jmp
int
out
imul
lock
iret
cld
cli
in
fcmovnbe
mov
clc
out
fadds
and
int
repz
std
cmp
lret
cmp
in
cmc
mov
cld
repnz
loope
mov
iret
xor
repz
ds
mul
rcr
hlt
aam
mov
icebp
iret
fildl
fsqrt
aaa
call
xlat
and
fadd
loope
mov
addl
shl
aad
clc
cmp
jmp
sub
xlat
sbb
or
int3
ljmp
lret
rcr
out
mov
stc
iret
cmp
ffreep
jmp
in
aad
cmp
jecxz
call
cmp
jmp
cmp
fcmovnbe
in
rcr
cld
mov
repnz
in
in
jmp
repz
cmp
jecxz
in
in
in
mov
rcl
xlat
shlb
cmp
shl
ljmp
inc
icebp
call
loope
mov
div
call
sar
ss
xlat
fstpt
roll
cmc
not
loope
loopne
in
adcb
icebp
into
aas
ljmp
mov
sbb
jmp
xchg
lret
out
mov
xlat
in
xor
cmp
rcl
incl
enter
and
in
lret
xchg
cmc
sub
hlt
not
xor
lret
lock
ret
and
ret
fxch
ret
ljmp
ljmp
cmp
icebp
enter
sti
in
cmp
std
cli
enter
test
icebp
cmc
out
lock
xlat
lock
addb
jecxz
lds
out
out
sub
ret
div
jmp
loope
repnz
xlat
mov
xchg
lret
int
fsub
shl
jmp
xor
xor
fdivrl
cmc
cmp
rcr
stc
xlat
fadd
sti
repz
mov
sub
fidivl
cld
iret
ret
fidivrl
neg
shl
test
jmp
std
hlt
in
cli
hlt
lret
into
aaa
int
hlt
out
movb
lret
jmp
fimull
idivb
xor
clc
clc
aam
incl
fadds
xlat
int3
and
rcl
in
enter
cmp
aam
fsubrp
into
clc
fiaddl
loopne
orl
das
cmp
xlat
leave
std
out
cmp
loop
rol
hlt
in
aad
fimuls
mov
nop
rclb
stc
in
cmp
clc
out
repz
int3
repz
cmp
mov
loopne
loopne
out
out
fiadds
repnz
in
fsubrp
jmp
sar
repnz
lret
fsubr
rcl
test
leave
lret
jmp
xor
cmp
clc
aaa
ret
loope
sti
mov
int
jmp
aad
rol
stc
out
in
idiv
fdivrl
shr
cmpb
sti
in
ljmp
and
mov
icebp
repz
xor
xor
fdiv
testb
jmp
std
std
lea
jmp
xlat
rcl
fxch
fxch
jp
cmpsl
les
nop
pop
mov
jle
call
ss
sarb
in
cmc
aad
icebp
int3
in
in
repz
rolb
mov
xchg
mov
fcom
sar
fdivrs
cmp
aam
cmc
loop
ret
cld
fsubr
out
jmp
xchg
sub
xor
shlb
jmp
cld
std
cmp
cld
test
fisttps
clc
mov
ljmp
clc
aam
fcmovnu
aad
iret
lock
fcmovbe
xchg
out
xchg
jmp
lret
fcmovbe
into
loopne
loopne
clc
shl
mul
testl
xchg
fdiv
test
divb
sti
cmp
fidivrl
in
ss
fcmovb
call
out
mov
addl
leave
call
cld
int
in
mul
sub
test
lea
rcll
sarb
aaa
fsubp
enter
sti
cli
xchg
ret
xchg
out
lock
lret
iret
shlb
in
lret
ljmp
cld
loopne,pt
xchg
ret
std
int3
test
int
xchg
enter
enter
neg
ror
repnz
cmc
xlat
fildl
fstp
fsubp
jmp
lret
fidivrs
shl
lock
cmp
stc
neg
call
leave
nop
faddl
int
ljmp
xlat
cli
iret
mul
orl
mov
loope
test
out
lret
rcl
cmp
iret
fnstsw
sarb
xchg
fucomp
test
loop
ficoms
call
fcmovnu
aas
in
hlt
cmp
or
loop
les
jmp
fucom
lret
fiadds
xor
cli
sar
icebp
sar
cmc
mul
aam
fcos
lret
mov
xchg
test
ljmp
iret
ds
aam
ret
aad
jmp
out
jmp
les
shl
and
fstp
jecxz
vpaddsw
sbb
in
loopne
nop
iret
aas
lret
ret
jmp
leave
int
into
lret
rol
xchg
xchg
faddp
rorb
into
int3
rol
xor
aaa
incl
fiadds
jecxz
in
xchg
mov
int3
lds
jmp
cmp
xchg
clc
in
call
in
mov
repz
popl
jecxz
lret
cmp
test
fimull
decl
shlb
cmp
iret
jmp
cmc
loopne
ret
sbb
out
fucom
std
jecxz
nop
xor
lret
ljmp
ret
in
ret
enter
icebp
loop
xchg
xchg
call
aad
in
fsubr
hlt
repnz
fcomip
loop
fsubrp
lret
into
fucom
loope
loop
ret
icebp
xor
enter
adc
mov
ret
int3
leave
into
decb
in
lret
cmp
lret
aaa
in
xor
std
out
fdiv
cmp
stc
orb
std
mov
iret
test
jecxz
xlat
xlat
xor
icebp
fmul
div
aas
clc
cmp
lea
aad
out
repnz
hlt
int
fst
aas
fsubr
cld
call
leave
mov
fdivr
shr
xchg
shl
sub
aaa
xor
repnz
fcmove
stc
cmp
hlt
xchg
lret
mov
out
std
jmp
rcl
out
leave
ljmp
cmp
rorb
loope
fmulp
in
xor
loope
xor
in
idiv
lock
fcmovnbe
ds
vpsubb
fildl
repnz
out
xor
cmp
cmp
in
fstp
sarl
rcl
clc
jecxz
int3
xchg
lock
std
jmp
shl
ftst
les
jmp
enter
cld
aas
ds
ljmp
loop
out
fstl
int
xor
in
in
orb
test
inc
lock
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xor
add
mov
add
mov
mov
xor
subl
jmp
sarb
into
rcl
ror
add
jmp
nop
sbb
jle
aas
add
in
int
adc
xor
iret
cmp
shr
lret
out
in
cmp
mov
test
icebp
jmp
clc
into
fcmovu
enter
xlat
hlt
repz
fld
fadd
mov
fimuls
xor
out
cmp
into
loope
clc
testl
mov
int
mov
lret
aad
ret
int3
icebp
aas
ror
sbb
clc
iret
cli
rolb
and
hlt
repz
fcomip
loop
cmp
std
enter
testb
rolb
in
vprotw
int
xor
xor
aad
int3
out
cmp
test
testb
lret
jmp
loope
xor
cmp
repz
xlat
fcmove
sar
out
std
out
shr
in
fcompp
iret
out
out
out
enter
fstp
cmp
push
hlt
in
clc
out
sub
cli
iret
jmp
out
xchg
xchg
stc
jmp
fstpt
lock
icebp
shl
fcmovnbe
std
loop
xchg
loope
int
idiv
hlt
call
loopne
and
idivb
fsubp
lret
out
imull
xor
cmp
fstp
in
stc
repz
out
shl
flds
mov
jmp
jmp
mov
into
das
fdivs
shr
out
std
and
mov
in
fucom
mov
cmp
xor
repz
out
sar
std
ret
rcr
and
neg
clc
clc
loope
jmp
ror
aad
out
ret
xlat
leave
cmp
cld
jecxz
jmp
aam
out
in
ljmp
lock
out
fnstsw
cmc
repnz
cld
and
mov
jmp
aad
jmp
cmp
leave
hlt
imul
int
loopne
ret
xlat
test
hlt
mov
or
repz
stc
stc
out
out
fcmovnu
aam
icebp
call
aam
shr
or
test
enter
xchg
ret
shll
call
xlat
roll
faddp
loope
jecxz
int
out
cs
xor
xor
loopne
int
aad
stc
ret
rcl
jecxz
mov
fmuls
cld
shll
int
in
jmp
leave
rol
ret
xlat
test
aam
hlt
clc
int3
in
in
xchg
in
mov
jecxz
xor
cmp
adc
sti
loop
cli
xlat
dec
out
lock
ljmp
enter
div
jmp
cmp
ret
mov
mov
fisttps
jmp
xchg
ljmp
into
ljmp
addb
test
fsubrp
into
out
int
shl
ss
repnz
shl
stc
iret
adc
loop
aaa
std
rcl
rcl
call
iret
in
into
xchg
call
lock
in
cmp
ljmp
hlt
faddp
fcom
fadd
int3
in
cld
in
xchg
ljmp
cmp
aam
clc
lret
ljmp
ret
xlat
loop
int3
ljmp
out
jmp
sarl
xor
clc
test
sti
lret
fcomp
std
in
hlt
out
cmc
ret
xor
loop
in
aad
repnz
jecxz
hlt
fdivr
rolb
aad
hlt
aaa
cmp
xlat
call
aam
loop
test
aam
les
loop
leave
dec
jecxz
loopne
ret
aaa
leave
fnstenv
clc
fucomip
cmp
mov
mov
mov
into
lret
xchg
aad
ror
xor
cs
enter
sub
fsub
fimull
shrb
out
jmp
cmp
int
aad
xlat
int
in
repz
cmp
cli
xchg
call
jmp
in
into
cmp
loop
jecxz,pt
clc
rorb
xor
xchg
mov
lret
out
fdivr
xor
xlat
in
fcomi
ffree
cli
hlt
roll
xchg
repz
orl
mov
xor
movl
inc
movl
mov
sbb
jmp
iret
fcmovnb
stc
inc
sti
mov
fimull
jle
add
cmp
jecxz
lret
xor
repz
cmp
fcmovbe
rcr
enter
mov
repnz
aaa
iret
in
shl
cmp
out
in
ds
jmp
in
mov
xchg
in
rol
ret
sar
std
std
stc
loopne
into
roll
jmp
mov
xor
out
call
xlat
or
xor
fcmovu
ds
in
nop
cld
xchg
fdiv
xchg
adc
fnstenv
jmp
imul
hlt
loopne
add
lret
clc
sub
out
int3
out
repnz
loopne
xor
repnz
clc
out
aad
rcr
cmp
rol
stc
fcmovu
mov
cli
jecxz
sub
shl
cli
out
ljmp
in
loop
cmp
in
std
jmp
dec
jecxz
mov
leave
xor
std
xor
loop
repnz
fidivrl
or
ror
cmc
in
repz
stc
jecxz
int3
ss
aam
repnz
ds
clc
cmc
enter
xchg
xchg
out
out
xchg
repnz
hlt
in
out
clc
cld
cmp
fcmovu
ljmp
fneni(8087
out
call
leave
fcomi
aaa
fsub
aaa
in
cmp
aam
std
addb
xchg
xchg
ljmp
lret
lret
aas
into
int3
loope
rcr
fsub
leave
incb
int3
out
int3
out
aam
shrl
cmc
fldl2t
int3
sti
lock
cld
fidivrs
int3
lock
out
xlat
sbb
test
sti
iret
test
fcomi
shl
into
loop
ret
hlt
fadd
lret
sbb
in
int
repnz
out
aad
int3
fmull
iret
shl
xlat
jmp
clc
xor
not
fcmovnu
test
jmp
les
loop
movl
cmp
cmc
loope
div
ljmp
in
fiadds
idiv
jmp
cmp
cmp
ret
hlt
in
leave
test
call
aaa
imul
xor
in
cmp
fcmovnu
sar
fcmovb
int
in
mov
test
in
fcomp
frstpm(287
jmp
xor
int
cld
loope
rcr
fildl
xchg
into
hlt
out
lret
xor
fyl2xp1
in
ds
lock
jecxz
loopne
cli
ljmp
in
std
lea
cmc
out
icebp
sar
aaa
std
xor
sar
cmc
mov
lret
mov
fstp
xchg
icebp
xchg
in
in
aam
fnstsw
sbb
ffree
rcr
mul
in
lock
xchg
mov
cmp
out
rcl
leave
sar
aas
cmp
sti
out
test
jmp
fstl
bnd
fcomp
enter
shl
shl
aas
cmc
out
cmp
cld
adcl
ret
cmp
in
jmp
lret
aam
std
addl
lret
lds
aad
in
loop
xor
rcr
adc
testl
call
repz
mov
ss
stc
sti
jmp
aas
addl
enter
out
mov
std
loopne
shl
int
not
in
ror
in
lret
iret
fiaddl
jmp
sub
jmp
in
cld
leave
iret
cmp
leave
cmp
cmc
aam
in
jecxz
fsub
in
test
or
aam
loop
out
into
dec
xor
fidivrs
or
inc
in
stc
shl
std
xchg
vpsadbw
int
cmp
sti
rcl
std
and
fisttps
imul
cmp
in
enter
fidivs
hlt
aas
addl
fucomi
fisttpl
mov
shr
into
int
cli
in
sti
ljmp
in
out
hlt
in
loope
call
xchg
shl
jmp
cmp
jmp
fdivr
clc
cmc
ret
xlat
sti
adc
mov
test
mul
in
std
mov
mov
orl
push
xor
mov
add
jmp
mov
mov
inc
cmp
jmp
aad
aas
ret
fcmovne
aad
mov
shrb
dec
jle
aas
add
int3
aam
jmp
clc
xor
cs
in
shr
into
cli
std
shl
iret
in
cld
lret
out
lret
int
test
ret
call
ljmp
xchg
aam
aam
out
out
fildl
lret
loopne
ljmp
ljmp
test
out
icebp
mov
jmp
xor
jecxz
jmp
cmp
fdiv
lock
repnz
add
fldz
int
icebp
xchg
aam
jecxz
lock
int
out
xlat
xor
aam
out
ret
jecxz
orl
sub
stc
xor
lret
loopne
cmp
repnz
cli
rcl
push
sbb
int
int
aaa
icebp
int
int
repz
shl
cmc
rcr
mul
aad
jecxz
out
ljmp
jecxz
hlt
shl
xor
icebp
idiv
iret
in
mov
ljmp
jmp
sub
ljmp
mov
sti
idiv
std
xchg
lock
jmp
out
in
iret
fdivp
loope
loope
std
test
ljmp
into
sub
iret
aaa
aas
stc
std
out
in
ret
xchg
cmp
iret
roll
lret
sti
repz
ss
fdivrp
cmp
out
lock
clc
in
vshufps
loopne
sti
loope
jecxz
out
rcl
fsincos
lret
loop
out
stc
rol
xchg
xchg
rorb
out
lock
repz
enter
cmp
rcr
filds
in
fsubr
into
mov
lret
sub
xor
sti
neg
call
repnz
out
rcr
clc
fdivrl
mov
test
fcomi
xor
cmp
stc
repnz
out
xchg
mov
mov
nop
sti
repz
aam
rcr
jmp
loopne
ljmp
orl
in
loop
adcb
fnstcw
sar
aad
xlat
icebp
in
in
test
xor
test
clc
int
lock
addb
jecxz
repnz
int
icebp
ds
in
les
mov
repnz
call
lret
xchg
aam
lret
in
in
in
int
div
rolb
out
std
sti
in
fists
lock
in
dec
aas
fcom
cmp
bnd
incl
sub
enter
xchg
ror
xor
cli
fdivl
fucomi
push
aad
lock
fucom
repz
cld
lret
ret
fmuls
jecxz
hlt
fmul
fucomi
inc
cmp
sti
icebp
cmp
shl
lock
incl
fcoml
aam
rcl
ss
into
cli
loopne
fsin
ret
in
std
mov
std
rcll
jmp
out
fdivrs
sti
clc
fsubr
std
sti
cld
fsub
sti
call
jmp
xchg
hlt
fadd
stc
repz
sti
aaa
cmp
std
lock
cmc
aam
decb
enter
imulb
out
rcl
shl
xor
shl
cmp
in
mov
iret
fsubr
out
cli
aad
aad
int3
int
xor
repz
ljmp
shr
mov
ljmp
cmc
clc
lret
rcl
xchg
out
mov
loop
clc
cli
fcmovu
mov
imul
xor
out
xor
idiv
std
cmp
aas
enter
cli
sti
faddl
jmp
lock
jecxz
cmp
xlat
repnz
in
test
in
in
jmp
out
int3
xchg
sar
xor
fcmovnu
icebp
ret
repz
cmp
in
std
fsubr
addb
out
cli
cmc
sti
out
cmc
repnz
rcl
out
ror
mul
fcmovbe
ljmp
or
repz
ss
repz
fstp
faddl
xlat
mov
mov
faddl
xchg
adcb
add
add
rcl
xlat
fcmovnu
shl
cwtl
clc
xchg
pop
leave
daa
cmpsl
pop
push
jle
aas
add
in
mul
cmp
fsin
cmp
into
std
cmp
sar
cmp
mov
lock
xchg
in
xor
repnz
aam
xlat
out
loope
in
out
shl
stc
hlt
xchg
jmp
test
iret
xchg
test
loope
xchg
xor
in
in
xor
out
int
repnz
loop
iret
iret
call
cmc
out
std
mov
call
rol
lret
out
jmp
cli
aam
sar
div
out
neg
xchg
mov
out
test
repnz
xchg
rcl
int
not
enter
rcl
cmc
fimuls
stc
jmp
fsubrp
lret
not
int3
aaa
aam
fucomp
cmp
aad
decb
mov
cld
test
aam
int3
sti
in
hlt
jmp
icebp
add
ljmp
out
xchg
std
adcl
not
icebp
ret
xchg
xlat
in
stc
fisttpll
rorb
enter
aad
ds
xor
xor
icebp
xlat
xor
xlat
fisttpl
sti
hlt
mov
shl
stc
ljmp
stc
lret
repz
loop
ror
test
mov
sti
iret
fistl
enter
sti
enter
int
ret
icebp
lock
ret
test
call
ljmp
ds
cli
rol
adc
loop
jecxz
mov
aad
in
fiadds
xor
xor
cmp
cmp
aad
roll
icebp
ret
aas
loop
leave
in
std
std
out
push
rcl
int3
int3
ror
fcom
fidivrs
aad
fcmove
repz
leave
xlat
and
ljmp
icebp
idivl
repz
cmp
cmp
shl
addl
jmp
repz
aad
sti
sti
cld
lret
rcl
std
out
xchg
xlat
hlt
jmp
out
fmul
mov
in
mov
test
ror
lret
repz
cmp
enter
xchg
jmp
lea
into
enter
int
jecxz
jmp
out
fdiv
frstpm(287
out
lea
lock
out
cmp
iret
loope
sar
addl
lea
xor
ljmp
aas
test
mul
ret
call
cmc
hlt
aam
int3
cmp
div
fcomi
loope
shl
into
test
out
ljmp
sub
test
repz
hlt
jecxz
icebp
aas
loopne
xchg
idiv
xchg
call
in
mov
shl
lret
xlat
cmc
fdiv
cld
and
std
xchg
in
in
xchg
fstl
sub
cmp
std
aad
aam
icebp
cmp
movb
mov
jmp
mov
fsubrp
int3
in
out
into
repnz
test
ss
fdivr
mov
xchg
orl
sub
xor
ss
sub
div
fxtract
xlat
in
cmp
bnd
cmc
loope
leave
iret
jmp
jmp
jmp
bnd
div
test
xlat
jecxz
test
in
test
clc
cmp
jmp
loope
stc
ds
ror
xlat
jecxz
out
test
loope
in
in
ret
leave
iret
jmp
sti
out
stc
cmp
out
mov
fmul
fcomi
xchg
leave
nop
jmp
into
cli
ds
stc
lret
idiv
loop
mov
mov
in
mov
jmp
jmp
in
rcr
lret
ljmp
jecxz
in
cmc
test
std
icebp
cli
int
cld
repnz
call
out
ds
fucomi
out
xor
loope
in
in
mov
xchg
in
sar
repz
xor
lock
out
cmp
roll
enter
out
adcb
ret
mul
ret
sar
clc
repnz
fiadds
cli
frndint
ret
nop
hlt
rorb
hlt
jmp
ret
ror
ret
rcl
je
repz
sbb
add
xchg
xor
int
ljmp
or
fdivrp
adc
int
shl
ror
shl
iret
ret
in
aaa
cmp
icebp
out
loopne
rol
aaa
rolb
in
loopne
lock
call
xlat
bnd
shr
faddp
addb
mov
in
lret
fsubr
aad
or
test
aaa
icebp
sti
xlat
ljmp
in
mov
out
ljmp
lret
clc
sar
call
call
ror
lret
xchg
jmp
loop
cs
icebp
out
clc
clc
shl
into
vpmulhw
fcmove
mov
or
in
loopne
fcmovnu
ss
cld
cli
aad
ds
ret
jmp
mov
int
repnz
cmc
repz
loop
cmpl
xchg
in
faddp
cli
xchg
icebp
xchg
out
mov
lock
in
fadds
loop
sbb
mov
cmp
rorb
in
rol
ss
xor
xlat
cmp
jmp
jecxz
out
ret
aam
jecxz
int3
testl
iret
enter
lret
lds
xor
sti
lock
hlt
shr
aad
add
mov
mov
out
fdiv
sarb
ret
incb
call
call
shl
out
iret
fldcw
cmp
in
shl
shl
cmp
ret
lds
test
mov
mov
sarl
out
rcl
cli
out
in
in
cld
call
in
in
mov
mov
mov
mov
leave
rcr
ljmp
call
fiaddl
fldl
cmp
xor
aad
into
fistpll
fldl
xchg
out
mov
out
xlat
les
out
cmp
jmp
loopne
repz
incb
call
xchg
xor
ret
out
fnstenv
jecxz
iret
xchg
fdiv
les
stc
xchg
out
std
xchg
xorl
hlt
sti
iret
in
rcl
fadd
in
sti
rcl
xchg
neg
ljmp
out
shrl
cmp
loope
aad
in
stc
fdivrs
mov
loope
mov
lock
in
lock
cmc
shl
test
ret
jmp
out
jecxz
mov
ror
cmp
fst
sti
aas
int3
cmp
shl
std
not
out
and
loope
into
orb
loope
xor
xor
std
jmp
fcmovnbe
out
cmpb
orl
mov
ror
iret
notb
call
aad
fcmovbe
fadd
add
repz
lea
and
in
xor
leave
out
sarl
cld
ret
loop
call
fsubrp
leave
loop
mov
ffreep
int3
aad
aam
fisubrl
cmp
stc
cmp
aad
test
mov
in
in
in
lret
repz
fdivp
in
int3
div
ror
shl
fmulp
sarb
icebp
sti
cld
ljmp
jecxz
mov
xchg
loop
test
lret
les
int
fdiv
shr
aam
test
test
mov
and
loop
icebp
xchg
and
in
xchg
in
iret
ss
idivb
cmp
xor
jecxz
test
ret
sub
loope
aad
out
xor
rcr
fidivrl
cmp
hlt
addl
rcl
xchg
rclb
sar
repnz
clc
leave
clc
cmc
shl
cli
hlt
sbb
lret
jecxz
icebp
fabs
loopne
hlt
rcr
in
xor
int
incb
or
rorl
iret
out
xchg
mov
shl
cmp
out
cmp
ret
loope
clc
orl
test
ss
cli
adc
faddp
aas
xlat
ret
clc
fxch
test
fiaddl
jecxz
shr
pop
add
add
iret
vpaddusw
fstp
pop
mov
outsl
movl
jle
add
xor
in
icebp
cmp
rcr
ror
in
fsin
sti
mov
ret
int3
stc
and
ljmp
icebp
in
cmc
xor
fdivr
icebp
rcl
ret
mov
out
vpor
fucompp
xchg
jmp
repz
fcmovb
repnz
hlt
lret
aam
sti
in
in
shl
fisttpl
fmuls
shr
loopne
xor
cmc
in
clc
xor
sti
std
repz
call
in
rolb
lret
xlat
out
cmp
call
shlb
cld
clc
ret
mov
mul
mov
into
repz
rcl
aad
cmp
ds
rolb
fcmovu
in
loop
roll
repnz
sti
int
cmp
ljmp
ffree
clc
testb
cli
sar
mov
sub
shl
enter
hlt
int3
lock
rcl
ret
clc
out
enter
xchg
rcr
shll
cmp
cmp
fxch
in
clc
xchg
cli
loopne
incl
mov
out
idiv
fdivr
clc
std
fstpt
lock
stc
cmc
cmc
mov
jmp
dec
jmp
in
aam
repz
cmp
aad
jmp
mov
int
mov
aaa
xlat
in
lock
sar
leave
xor
clc
in
fsub
jmp
cmp
enter
jmp
aad
ror
fcmovbe
cmc
repz
not
out
into
jecxz
ds
neg
loopne
fsubr
xchg
fmulp
div
lret
divl
repnz
not
lds
test
xchg
icebp
out
out
ret
fcmovnbe
shl
loope
loopne
ss
div
call
test
icebp
fidivs
sub
int3
ss
cld
fdivrl
lret
int3
iret
int
ror
ds
ljmp
aad
loop
repz
xlat
xlat
hlt
ss
lret
adc
fcmovnu
xchg
mov
rorb
stc
aaa
cmp
xor
lret
roll
test
neg
clc
cli
fdivr
fucom
jecxz
loope
xor
xor
int
not
fdiv
aas
in
cmp
sub
icebp
call
in
fcom
out
lret
testl
loopne
cld
stc
xchg
int3
aam
out
xlat
iret
repnz
cmp
div
cmp
test
in
xchg
lds
cmc
out
in
cmp
sar
jecxz
out
adc
mov
out
aam
xchg
sub
xor
ds
neg
out
cld
repz
faddl
xchg
int
ror
int
xor
shl
ret
ret
fndisi(8087
enter
enter
cmp
shl
fincstp
aam
hlt
stc
cmp
into
icebp
add
mov
ret
mov
loope
in
jecxz
mov
int
ljmp
rcr
or
cmp
out
cld
lea
xchg
rcr
xor
in
xor
cmp
ss
fnstenv
fsubrp
fnstsw
ret
les
cmc
nop
mov
cmp
xor
cmp
std
sarl
adc
lret
enter
int
xchg
call
cld
call
fmul
jecxz
int
jecxz
fisttps
in
mov
repz
int
loop
cmp
sar
call
jecxz
fildl
loope
cmp
leave
xchg
xchg
lock
cmc
ljmp
fdivr
rcl
cmp
aas
ljmp
shr
repnz
ss
fsub
out
ljmp
mov
cld
out
test
int3
out
jmp
aam
clc
xlat
int
sti
xlat
icebp
repz
cmp
aad
xchg
mov
repz
xor
sub
fmul
adc
jecxz
clc
fucomip
loope
mov
or
mov
jmp
fcom
xlat
push
xlat
outsb
sar
fdivr
das
lahf
pop
jle
aas
add
xlat
vpmovmskb
call
hlt
and
test
in
out
mov
in
rclb
shr
int3
int
loop
in
out
in
repz
iret
xchg
adcl
cmp
fsub
aaa
cli
faddl
mov
ljmp
stc
jmp
cmp
fsubrp
lret
int3
out
out
idiv
hlt
jmp
dec
mov
stc
xor
xlat
jmp
int3
lret
xor
repnz
call
ret
xchg
aam
ffreep
sti
in
fmulp
int3
cmp
div
les
cmp
mul
hlt
mov
mov
xchg
leave
jecxz
mov
int3
xor
aam
in
fdivp
repnz
aas
icebp
hlt
ljmp
std
shl
mov
das
icebp
into
in
stc
hlt
cli
int3
clc
aas
cli
loopne
ret
shl
fcomi
shl
mov
call
out
in
ljmp
ljmp
fldl
mov
sti
nop
fucom
test
jmp
ds
iret
xor
loop
frndint
fildl
xorl
lret
sti
aas
jmp
fldl
aam
mov
hlt
xchg
iret
clc
xor
cli
jecxz
ss
in
in
jmp
rolb
ljmp
sbb
addl
iret
cmc
lock
and
test
faddp
hlt
ret
rorl
fiadds
lock
cmp
rcr
out
aas
cld
cmpl
ret
cmc
testl
sar
das
repnz
ljmp
hlt
fcmovne
cmc
loop
icebp
repnz
cmp
iret
lret
testb
in
cmp
cmc
out
cmp
fpatan
repz
fnclex
lret
out
fsubrp
out
lock
fsub
out
cld
out
ss
stc
xor
cli
aam
in
mov
sbb
mov
fld
jmp
out
ss
cmc
ds
fcmovnb
fdecstp
xchg
orl
cmc
inc
shl
vpmaxub
in
rcl
sarb
fdivrp
xchg
stc
jmp
ficoml
leave
shrb
xor
clc
cmp
cld
cmp
rcl
out
faddl
loop
mov
xchg
xchg
repz
fidivl
rcl
aad
fsub
test
xlat
repz
xlat
fdivr
fcmovnu
mov
out
out
cld
into
sarb
xor
aam
fsubp
jecxz
hlt
xlat
std
xchg
mov
ljmp
cld
in
fcmovbe
xchg
int
clc
iret
lret
loop
cmc
repz
jmp
stc
sti
call
cmp
cmp
into
cld
out
orl
xchg
out
in
aam
repnz
jmp
and
cmp
hlt
fsubr
fdivrp
fucomp
ret
jmp
sub
mov
jmp
out
repz
iret
cmp
and
faddp
mov
int3
xchg
out
in
aad
call
xor
adc
mov
into
in
cld
repnz
stc
fcmovnb
in
fsubr
fstpt
testb
repz
leave
mov
mov
ljmp
call
ds
ffreep
in
cmp
cli
cmc
in
fninit
rcl
call
ret
aaa
icebp
cld
repnz
in
lret
icebp
fst
div
sbb
clc
fsubrp
fcmovnu
lret
lock
out
sbb
das
xor
lock
cmc
shl
aam
neg
enter
std
call
in
rcl
aam
hlt
lret
cli
hlt
neg
cld
loopne
in
out
out
out
sar
jecxz
frstpm(287
int
fucomip
sti
in
rol
fmuls
mov
mov
int
call
xor
cmp
out
repz
hlt
ret
cli
in
sub
xchg
fbstp
cmp
je
push
push
mov
jmp
rcl
rol
rol
rcl
mov
arpl
pusha
popa
jle
aas
add
cmc
repnz
enter
test
cmp
cmp
loop
out
loop
fucomi
mov
lock
shr
ror
xlat
cmp
fsubrp
cmp
lock
rcr
cmc
loope
cld
mov
xchg
into
shl
xor
cmp
cmp
sti
adc
out
test
stc
enter
mov
rorl
lock
cmp
out
jmp
repz
xor
addb
shl
call
cmc
lret
aam
fcmovnbe
out
in
sarb
shl
fdivrp
loopne
decl
sti
repnz
orl
clc
xor
sarb
aas
fcmove
cmp
in
in
cld
jmp
out
xchg
ror
stc
out
int
out
jmp
repz
xor
mov
xchg
into
xchg
jmp
xor
xlat
out
das
repz
roll
fcmovne
loop
aad
fdivr
enter
test
test
in
cmp
cli
shl
cmc
cmp
stc
addl
xchg
addl
xor
repnz
out
cld
sar
into
out
ds
sub
int
mov
dec
cmp
jmp
hlt
in
hlt
cmp
fcomi
aad
loopne
in
hlt
sbb
out
push
loopne
in
call
xor
fsubrp
jmp
vpandn
fcmovnb
lret
mov
stc
out
xchg
into
jmp
sub
clc
sarl
rolb
or
in
xchg
loop
xchg
fdivr
shl
repz
leave
aad
lret
repz
shl
les
std
mov
mov
out
xchg
hlt
shl
cmc
enter
out
lret
cmp
sbb
cmp
cld
jecxz
test
mov
in
ljmp
cli
iret
ror
aam
repnz
xchg
loopne
fcomp
mov
in
icebp
repnz
cmc
out
rcl
xor
stc
xor
into
shl
int3
stc
std
sar
out
clc
xchg
nop
loope
aam
out
icebp
shl
aaa
out
clc
fsub
addl
lret
xchg
mov
ret
cli
jecxz
clc
rol
sarb
fnstcw
aas
repnz
loopne
lret
subl
int3
xor
les
cmp
test
xchg
out
fdivr
repz
iret
cli
out
cmp
into
hlt
xlat
out
shl
addb
ljmp
repz
idivb
xlat
stc
enter
into
iret
into
test
sti
shl
jmp
stc
out
std
ror
call
out
jecxz
lock
icebp
fdivr
int3
cmp
loop
fadd
call
ror
icebp
adc
out
out
les
rcl
ljmp
cmp
aad
call
in
loope
cli
loope
addb
aad
in
cld
cmp
aad
hlt
clc
ds
repz
loopne
stc
stc
in
fstp
ret
sbb
lock
mul
stc
test
aam
addb
stc
call
out
jecxz
hlt
inc
repz
sub
fdivr
or
ret
aam
shl
std
aas
into
testl
in
aad
fucomi
cmp
aad
clc
cld
fmul
stc
ljmp
stc
fiaddl
lret
jmp
repz
aad
int3
ret
adc
sti
enter
xlat
out
mov
in
das
jmp
fsub
std
sti
rcl
rcl
cmpl
out
nop
addl
xor
hlt
xor
fxch
std
shr
loope
ret
cli
addl
out
out
xchg
int3
in
fmulp
xor
xor
cmp
repnz
out
fstp
iret
cmc
fucom
inc
repnz
out
mov
ljmp
aad
shl
ss
cmp
xlat
test
lret
in
xchg
xchg
in
lock
ret
in
cli
jmp
cli
repz
bnd
faddl
incl
orl
sarb
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
jmp
into
mov
fmul
iret
fucomp
sub
inc
in
not
and
jle
add
out
in
out
cmc
repz
flds
in
mov
ffreep
repnz
lret
aaa
cmp
iret
cmp
std
aas
fucom
ret
fldl
int3
mov
mov
jmp
ss
fcomp
repnz
xlat
jecxz
hlt
leave
in
xlat
lock
jmp
iret
test
out
fcom
jmp
cmp
cmp
int3
in
test
les
jecxz
nop
in
rorb
call
repnz
std
aam
cmc
idiv
loope
cld
repz
in
testl
jmp
idivl
in
rol
clc
jmp
ljmp
xchg
xchg
shlb
cmc
jmp
sti
iret
call
adc
fdivrl
loope
mov
loope
rorl
aam
lret
enter
cmp
addl
clc
clc
lret
out
orl
clc
clc
out
aaa
xor
aad
aam
xlat
push
add
ljmp
cli
sub
shlb
icebp
sarl
idiv
div
test
ljmp
loopne
xchg
in
int
out
out
lret
aas
fst
rol
into
repnz
sti
fucomip
in
test
call
xor
icebp
aad
in
out
out
aam
in
roll
nop
decl
fsub
lock
fnsave
lret
fdivrl
cli
test
filds
mov
xchg
xor
das
shr
cld
call
fcomi
aas
testl
mov
or
bnd
jmp
xor
loopne
aam
ljmp
mov
mov
mov
shlb
in
shl
fucomi
in
cli
xor
out
iret
cmp
sbb
lds
in
int3
out
out
nop
ss
ss
enter
sar
out
jecxz
test
aad
lret
stc
out
in
lock
ljmp
aaa
int
cmp
aam
iret
repz
mov
ftst
lret
dec
sti
test
out
in
ss
out
aas
lret
in
sti
rol
cmc
cmc
mov
call
int
repz
jmp
clc
shrb
fcmovu
shlb
test
fnop
clc
mov
std
ljmp
aam
out
xor
int3
fdiv
jmp
jecxz
sbb
clc
jmp
in
jmp
rcr
ret
call
adc
repz
jmp
loopne
ret
in
dec
in
xor
rol
shr
fsubp
ds
clc
xlat
sar
adc
loope
out
ror
jmp
jmp
aam
rcl
sbb
repnz
xchg
enter
icebp
repnz
aaa
leave
shl
cli
add
xchg
fld
aam
lret
mov
mov
mov
int3
int
in
iret
repnz
shlb
out
xlat
fsub
out
fninit
repnz
idiv
int3
mov
fmuls
rcl
lret
out
iret
std
cli
repz
add
dec
fucomp
xchg
jmp
lock
lret
cmp
loopne
sbb
cmp
in
fcmovnb
leave
shr
nop
and
out
lret
into
repnz
rcr
in
test
rolb
cld
fdivr
mov
mov
dec
ss
in
xor
iret
imul
cmc
icebp
lret
fidivrs
repnz
les
leave
in
decb
mov
lret
int
xor
rcl
std
aad
xlat
ljmp
iret
sti
fimull
filds
in
fdivrl
shl
loopne
jecxz
addb
imul
leave
loopne
and
call
sub
int
cmp
push
ljmp
out
mov
mov
xchg
das
aad
out
xor
aad
lret
cmp
fstp
cmp
fcomip
out
loope
jecxz
out
in
hlt
rcl
clc
mov
mov
mov
inc
cmp
jne
pop
jmp
ret
xlat
rcl
lret
xchg
xchg
mov
loop
jle
aas
add
xlat
jmp
call
shl
lret
shl
stc
loopne
out
loop
and
loop
xor
cmp
out
std
fdivrl
cmp
aas
std
cmc
leave
aad
call
in
test
loopne
das
fcmove
leave
das
leave
out
cmp
lock
flds
ror
in
loop
repnz
sub
call
into
cmc
ljmp
sar
mov
in
leave
repnz
fists
in
out
clc
lret
iret
in
fadd
aas
out
ror
jecxz
vpmaxsw
shl
mov
test
repz
lock
and
cli
in
loop
ljmp
call
lret
cmp
loop
in
loopne
loope
in
ret
add
xchg
xor
sub
iret
out
repz
shl
aad
fsubr
fucomp
lret
les
lret
ror
cmp
aam
in
icebp
in
repnz
leave
leave
aad
stc
dec
out
lret
xchg
xchg
aaa
aaa
shl
fdivr
ss
sub
repz
faddl
out
int3
icebp
jmp
ljmp
in
fmul
iret
cmp
test
neg
aam
cli
jmp
loop
into
hlt
repz
out
cs
fmul
fstpt
aas
int
cmp
mov
idivl
leave
test
adcl
xor
cmc
frndint
aam
in
ret
aas
xchg
lret
test
jecxz
out
ljmp
iret
addb
jecxz
std
enter
fsub
shl
out
out
shl
jmp
int3
lock
sar
loope
aam
fmul
addb
xchg
sub
lret
xlat
rcr
fdiv
std
inc
test
mov
shr
lret
leave
icebp
enter
sti
ror
int3
int
cmp
xlat
in
mov
hlt
jecxz
rcl
fucomi
vaddsubps
loope
ret
rorb
lret
cld
jmp
in
std
xchg
jmp
rcl
fptan
aaa
jmp
aaa
cmp
loopne
shl
in
clc
lret
mov
fimuls
loopne
sar
rcr
out
cmp
out
ret
shl
cmp
fildl
call
mov
test
stc
leave
and
cmp
lock
out
hlt
cli
loop
sbb
std
iret
aam
out
loop
sar
fnstcw
fcmovnbe
std
and
fildl
sti
in
ror
std
xchg
rol
loop
lret
sub
ret
call
call
test
mov
ljmp
in
iret
fldl2e
lret
cmp
std
test
faddp
test
jmp
out
nop
jmp
test
in
stc
repnz
imul
fistpll
hlt
lock
addl
lret
icebp
test
xchg
xchg
in
lock
sarl
aaa
cld
fnstcw
cmp
addl
xchg
lock
rcl
ret
xor
faddl
fisttpll
stc
movl
xor
into
xor
ds
std
xlat
cld
ror
ret
test
jmp
or
int
out
jecxz
iret
in
iret
ljmp
les
shr
test
les
mul
shl
lock
ljmp
fcomi
ss
jmp
loopne
cmp
fsin
loope
fiaddl
out
xchg
adc
divb
in
ljmp
repnz
stc
cmp
not
mov
out
test
out
in
loop
div
in
call
incb
std
test
int3
fimull
xor
repz
aam
cli
aam
lret
clc
rcl
into
stc
cld
mov
cmp
lret
mov
xchg
in
mov
rol
in
hlt
int
cmc
ds
out
mov
out
mov
lret
loopne
jmp
out
lret
in
test
mov
jmp
aam
fadd
fstp
pusha
shl
mov
outsb
jle
aas
add
sar
stc
fcomp
cmp
stc
or
in
fmul
out
flds
test
rcl
out
cld
jmp
neg
adc
hlt
xlat
repnz
out
lea
test
imul
repz
idiv
repnz
cmc
ds
sarb
repnz
test
fdiv
in
rolb
lret
in
hlt
aad
jmp
cmp
ds
inc
enter
test
adc
loop
icebp
stc
cs
ljmp
cmp
ljmp
xor
sbb
lret
stc
icebp
out
aam
idiv
repnz
cmp
les
int
orb
cmp
std
int
aam
aam
loopne
mul
flds
xchg
out
ror
not
out
out
ror
xor
repnz
loope
xlat
lds
mov
xchg
call
aaa
enter
ss
jecxz
aas
xlat
fcomip
mov
mul
add
xchg
xchg
sar
lret
aad
leave
cmp
out
xchg
std
jmp
test
nop
loope
repnz
fsqrt
fidivrs
cmp
test
out
xor
loope
leave
nop
test
shr
enter
xor
repz
aaa
ljmp
adc
fstp
call
adc
jmp
cld
aad
hlt
icebp
xlat
fdivrp
cli
repnz
aad
call
mov
or
test
jmp
fucomip
jmp
jecxz
fsub
loope
cld
loopne
int
fsubr
enter
loopne
jmp
fyl2x
not
out
call
loopne
rcr
mov
xor
mov
iret
xchg
repz
in
ret
xor
stc
int
cli
jmp
aas
in
incb
std
sti
fdivrp
into
loop
aad
rol
repnz
icebp
jmp
cmp
std
aas
stc
repz
fldl
jmp
xor
hlt
div
xlat
adc
idiv
stc
stc
std
rol
repnz
stc
clc
neg
xlat
test
int
loope
jecxz
rol
in
cmc
out
cmp
fmulp
ret
cld
loopne
xor
in
leave
or
lock
in
rcl
mov
aaa
cmp
cli
test
aad
repnz
leave
test
xlat
jmp
nop
jmp
enter
fsubr
in
lock
in
loopne
clc
mov
fcmovu
test
int
fxch
call
mov
rcl
aad
cmc
stc
repz
neg
fcmovnb
aad
in
cmc
div
fimuls
in
ret
in
clc
fdivrl
into
cmp
cli
test
cmp
icebp
test
sbb
xchg
xchg
out
test
cmc
in
fnsave
cld
out
into
lds
loope
cld
leave
cli
orb
in
xor
div
call
jmp
into
loop
loopne
test
repnz
or
out
out
iret
leave
sti
rol
rcl
aas
incb
add
in
test
int3
out
shr
iret
lds
rcr
in
jmp
loopne,pt
ret
fsub
cmc
ljmp
fiaddl
xor
sar
loopne
rolb
rcr
repz
xchg
std
icebp
jmp
shl
jmp
in
cmp
xlat
aaa
shl
test
mov
cli
loop
in
in
test
xchg
idiv
ror
cli
fstp
cld
in
call
fsubp
fstp
mov
shl
repz
dec
xor
into
out
fdivrl
aaa
ds
sarl
jmp
in
lret
aam
loope
hlt
ror
les
idiv
lret
rol
sar
repnz
cmp
incl
fiadds
cmc
xor
fcmovnbe
aas
ds
neg
aas
repz
sar
sbb
in
or
fiadds
rcl
cmp
aad
in
xlat
xchg
leave
loop
loope
icebp
jmp
sub
test
testb
pop
add
add
fcomp
fistps
je
jg
shll
jle
add
fdivrs
jmp
test
neg
sub
loope
lret
cld
std
std
mov
xor
out
repz
fdivrl
cmp
aas
icebp
incb
mov
leave
jmp
out
out
mul
xor
fdivr
into
ds
out
cld
test
fsub
fsubr
cld
push
cld
std
jmp
lock
leave
out
xor
in
fnstsw
xor
lds
lret
std
jmp
loopne
cmp
fcomi
sarb
cmp
shr
fcomi
repnz
mov
loopne
fisttps
repz
xor
lret
aad
in
jmp
cmp
stc
stc
leave
test
lret
lds
aad
aam
leave
iret
stc
xor
lret
addb
adc
int3
jecxz
cmc
loop
ret
fst
xor
into
sti
adc
aam
jmp
out
call
cs
ljmp
add
aam
repnz
xlat
mov
in
lea
ror
ss
test
out
aad
xchg
in
cmp
out
fisttpll
cmp
fcomp
fldln2
rol
lock
aam
xchg
lret
fdiv
xchg
out
clc
xor
ret
cmp
jmp
test
mul
rolb
xchg
iret
jmp
std
out
in
ffreep
out
repz
aam
cmp
cld
aam
clc
shl
enter
fucom
ljmp
jecxz
in
call
shl
in
lret
repnz
hlt
mov
jecxz
in
jmp
test
clc
aam
aam
ss
repnz
cmp
shl
stc
aam
fsub
test
filds
xor
cmp
enter
aad
mul
ret
sti
std
lret
jmp
lea
rcl
rol
xor
xor
imul
aas
in
fsub
aas
faddl
xchg
cld
xchg
aaa
rcl
int3
clc
shr
xor
sti
out
aad
sti
fisttpl
jecxz
sub
in
clc
int
ljmp
lret
rcr
sarl
out
adc
lock
cld
xchg
rorl
fstpt
out
repz
xor
sbb
loop
loope
aad
idiv
in
leave
mov
hlt
lret
ss
call
sti
lock
out
hlt
fcmovnu
loop
test
mov
out
in
lock
fidivrl
rol
loope
xchg
aam
xchg
fisttpll
ss
cmp
cli
test
xlat
in
xchg
int3
iret
xchg
decb
test
xor
cli
sub
cli
or
enter
loopne
lret
int3
stc
out
xlat
lock
fxch
std
ret
cld
xchg
ljmp
xchg
fsubr
loope
jmp
neg
test
out
icebp
mov
fisttps
std
jecxz
mov
imul
jmp
out
loopne
iret
xlat
in
fdivrp
test
sti
iret
nop
icebp
in
shl
test
call
lret
lret
roll
fsubrp
in
in
loop
rorb
lock
out
jmp
cmp
xchg
movb
xchg
int
aas
aaa
out
ret
imul
cmp
loop
cmp
ret
out
in
mov
int
in
out
jmp
in
fdivp
rcr
idiv
ret
ds
jmp
cld
cld
aam
clc
div
fcomi
shll
int
cmp
out
xchg
fucomip
rolb
in
lock
aad
imul
ss
ret
cmc
into
aam
repz
not
fdivrp
std
hlt
clc
fsubrp
leave
fmulp
xchg
repz
cmp
fistpll
cmp
aas
std
div
repz
repz
fcmovnu
out
mov
out
nop
jecxz
jmp
cmc
in
fiaddl
mov
mov
jmp
iret
aas
aas
ror
rcl
ret
pushf
mov
cmpl
jle
aas
add
in
enter
call
sti
mul
sti
in
jmp
test
jmp
into
test
jmp
ret
aaa
aaa
ljmp
out
mov
enter
or
ljmp
fdivrp
cmp
stc
sti
cmp
hlt
cli
xchg
or
lock
div
cmp
fmulp
sbb
in
loopne
jecxz
cmc
lock
cld
mov
xchg
divb
rcl
leave
aam
cmp
aad
out
repz
fdivp
in
lret
lds
sar
xchg
sarb
lock
stc
hlt
neg
xlat
iret
iret
fcmovne
jecxz
les
loop
icebp
xchg
shl
xchg
leave
jmp
stc
out
in
cmp
sarb
fimuls
into
cli
mov
xchg
xor
stc
int3
cld
fdivrs
jmp
cli
rcr
loope
faddl
and
ljmp
xor
rcl
cmp
out
lret
and
xchg
ret
aam
cld
lock
sti
int3
lret
jmp
repz
div
cld
stc
cmp
aam
ret
stc
lret
fabs
xchg
out
fidivs
in
ljmp
fst
repz
loopne
std
test
into
cmc
into
out
call
lret
int
adc
testl
jecxz
loopne
xchg
out
in
out
sar
cmp
std
cli
aas
rcr
cmp
sti
stc
cmp
loopne
out
jmp
call
out
mul
into
fdivrs
not
in
sti
div
cld
cld
incl
loop
nop
call
mov
into
aad
cli
jmp
enter
hlt
iret
xlat
hlt
shl
fst
cmp
std
xchg
testl
in
fxch
not
int3
cmp
cmp
cmp
fcomp
shl
ret
test
leave
jecxz
bnd
mov
cmp
enter
hlt
neg
fdivr
rcl
shr
cld
fiadds
xchg
in
jmp
not
lret
jecxz
int
shl
repnz
shl
out
fnsetpm(287
or
call
int
sub
les
roll
repnz
repnz
repz
loope
call
out
int3
in
fnop
call
int3
in
iret
fstp
loope
test
loopne
shl
cmc
jecxz
xchg
mov
shll
xor
xor
das
xor
cmp
sar
jecxz
leave
testl
hlt
icebp
rcl
clc
in
stc
sar
repz
cmc
sti
test
xchg
fnstsw
lret
lret
out
mov
into
sar
cmpb
sarl
xlat
sbb
aas
fucom
fcmovu
ffree
xchg
aad
jmp
fdiv
aad
jmp
out
clc
call
loop
out
jecxz
jmp
aam
cmp
cmp
xor
iret
rcl
rol
and
testl
out
fxch
hlt
leave
call
fstpt
loop
out
out
fildl
out
into
xor
cmp
rcr
in
xlat
add
aad
rol
nop
xchg
sar
mov
ror
jmp
out
lret
lock
test
hlt
fcmovbe
shl
addl
out
out
lea
in
cli
repz
xor
out
loopne
lock
hlt
in
test
cmc
in
call
std
fucom
xchg
jmp
sarb
repz
shl
roll
lret
in
mov
out
mov
xchg
lock
aad
enter
cmp
jecxz
repz
xor
xlat
mov
into
jecxz
lret
call
rcl
repz
loopne
int
mov
in
test
xchg
sbb
and
f2xm1
sti
fcom
sar
fxch
icebp
out
cli
idiv
decb
loope
fcomip
shr
jecxz
call
cli
in
cld
int3
xchg
in
call
out
mov
xchg
adc
xchg
jecxz
fdivr
call
jmp
int3
rol
aad
pop
pop
movsb
or
xchg
popa
loop
jnp
jle
add
xor
out
in
in
mov
aad
in
stc
dec
jmp
leave
in
cmc
lret
iret
xlat
cld
cmp
repnz
in
orl
aad
in
shr
repnz
aaa
sti
loopne
std
xchg
jmp
mov
in
hlt
aas
out
icebp
leave
call
cmp
aad
rol
in
cmc
jmp
mov
sar
in
out
xor
call
lret
xor
out
test
fsubrp
imul
lret
jmp
int3
ljmp
out
cmc
int
hlt
addl
xchg
call
sti
iret
xchg
xchg
xchg
leave
lret
lret
call
aaa
jecxz
clc
repnz
fadd
fiadds
roll
stc
int3
aam
fcmovne
cmc
ljmp
lock
repz
fsubr
xchg
loop
adcl
cmp
sbb
into
fcom
hlt
sti
cmp
fsub
ljmp
leave
out
xor
in
repz
cmp
flds
nop
addb
xor
out
std
fdiv
shl
ret
into
fdivrl
rcl
in
int
xchg
mov
aam
test
xlat
repnz
xor
call
repz
stc
test
out
fucomp
into
xchg
rorb
leave
stc
xlat
aaa
leave
aaa
not
jecxz
cld
rol
dec
test
and
int
fcmovnbe
fsubrp
shll
in
mul
fidivl
fsqrt
incb
test
roll
fisttpl
xchg
lock
aam
cmp
enter
fcomi
clc
aaa
loope
ret
cld
inc
leave
stc
out
nop
fstp
call
in
jmp
ss
div
cmp
fcom
in
std
repnz
loop
jmp
mov
jecxz
hlt
repz
aaa
ror
shr
aad
aad
jmp
stc
in
ret
std
mov
jmp
xor
xchg
loopne
das
lret
cmp
aaa
stc
cmc
out
shl
ret
in
aam
cld
fcomp
int
test
cld
nop
hlt
shrl
shl
aam
aas
fsubr
sarb
lock
cli
jecxz
xlat
sub
out
nop
in
out
xchg
enter
jmp
cmp
loopne
clc
clc
fsubp
loopne
jecxz
int3
and
leave
in
inc
hlt
jmp
call
xlat
sar
cmp
loop
ds
cld
cmc
ffreep
movl
ror
clc
xor
xlat
xor
cmp
xchg
xchg
ljmp
xlat
out
sti
cmp
out
sbb
out
addb
loopne
in
aad
fld
cmp
int3
icebp
cmp
jmp
xlat
test
movb
out
call
loope
stc
int
xor
filds
cmp
fldl
in
dec
aam
clc
ret
aad
loope
cmp
ret
enter
cld
jecxz
stc
loope
lea
jecxz
iret
aad
out
cmp
repnz
clc
mov
stc
in
mov
clc
iret
repnz
icebp
loopne
sub
lret
fcmovnu
leave
fmul
fcmovnu
ds
stc
test
jmp
ljmp
mov
das
das
sti
xlat
repz
sti
xor
loop
sti
out
ffree
mov
neg
and
out
cld
int
mov
xor
lock
sar
iret
leave
lret
lret
cmp
std
repnz
jmp
test
lret
mov
lret
in
clc
fcmovnb
int3
out
fchs
loop
sti
xlat
aam
mov
sub
sar
xchg
hlt
iret
jecxz
enter
rcl
stc
sar
and
ffree
les
cmp
movl
aad
xlat
out
cmp
xlat
shr
in
fiaddl
lret
fiaddl
test
orl
std
cmc
sti
faddp
ret
iret
icebp
aad
repz
cli
jmp
xchg
loop
enter
fmul
ror
icebp
testb
mov
mov
mov
jmp
ret
into
sarl
rol
rcl
ja
data16
movsb
xor
add
in
in
ds
sti
sbb
icebp
cli
clc
sti
div
mov
cld
lret
loopne
fmul
in
in
lock
loope
cmp
out
cmp
fcmove
ljmp
fucom
out
ret
out
in
xlat
out
aas
hlt
fdivrs
cmpb
fdivr
stc
ret
clc
ljmp
aad
into
lret
rcr
out
cmp
ror
fsubp
fcmove
hlt
fst
mov
test
xchg
jmp
aam
in
stc
cli
fcomi
aas
cli
jecxz
iret
into
fcmovbe
aas
mov
cmc
leave
mov
xchg
shr
out
call
in
xor
enter
std
repz
repz
adc
fdivr
clc
jmp
out
xor
fsub
cmp
sbb
shl
aam
jecxz
sub
orb
int
in
out
jmp
div
aam
sbb
test
loop
stc
jmp
repz
xor
shr
shll
das
aam
xorl
sti
sar
jmp
fsub
xchg
lret
fadd
cmp
mov
fsubr
idiv
jecxz
out
xor
call
jmp
loopne
out
xchg
xor
sar
fprem
in
repnz
aad
in
sbb
loopne
jmp
int
int3
call
aam
cmp
out
aam
shl
fildl
loopne
adc
shl
loop
les
std
rcl
lock
fadds
mov
jmp
mov
out
in
fcom
in
icebp
cli
in
sti
repz
cmp
fstp
ljmp
fdivp
xor
xor
fmulp
shl
out
dec
idiv
mov
mov
in
mov
xor
int3
jmp
xlat
xlat
cli
repz
testb
sbb
fabs
leave
leave
icebp
mov
mov
lret
jecxz
std
fcmovu
std
int
ret
out
rol
cmc
testl
std
mul
das
lret
shll
in
fsub
fcomip
aad
div
sar
fisttps
mov
int3
xchg
enter
cmp
stc
lds
lock
repnz
idiv
adc
out
xchg
orb
in
cli
ljmp
loop
shl
loop
and
mov
in
lret
test
out
icebp
cmp
cmp
not
loopne
test
ds
orb
cld
into
shl
xchg
fsubrp
ljmp
call
int3
cmp
and
leave
call
lret
iret
int
rcr
inc
ret
out
int
hlt
fcom
cmp
xlat
cmpb
jmp
mov
ljmp
aas
stc
ret
in
neg
cmp
fcmovnb
rolb
xchg
sbb
enter
lret
jmp
sarb
icebp
ljmp
stc
sti
iret
fld
std
cmp
xchg
jmp
xor
jecxz
addb
int3
stc
out
cmp
shl
cmp
fucom
call
in
cli
rolb
out
jmp
leave
fcmovnbe
fdivr
lret
in
out
aam
cmc
clc
cld
lret
hlt
mov
loopne
clc
aaa
ret
cmp
cli
hlt
div
into
std
shl
fucom
shl
clc
mov
faddl
incl
in
aam
xor
testb
cmp
cli
shl
jecxz
icebp
repnz
sar
in
out
aas
out
loope
clc
out
cmp
repnz
test
stc
out
jmp
rorb
xor
vpsllw
icebp
ss
fiaddl
sti
test
in
clc
xchg
jmp
xchg
in
call
int
shr
das
fsubrp
loop
ds
int
lock
cld
sbb
lock
jmp
in
ret
ss
int
aam
into
fidivl
xor
aam
jecxz
cmp
cmp
sub
fists
jecxz
aam
in
out
shl
rol
clc
not
in
clc
rcl
in
ret
hlt
out
mov
icebp
sar
sar
repz
cmp
je
mov
mov
jmp
leave
aad
movsb
inc
jb
and
mov
aas
add
repnz
test
out
in
stc
enter
call
iret
and
out
cmp
in
cmp
int
loope
cmp
repnz
in
hlt
testb
adcl
iret
cmp
shl
sti
cmp
mov
neg
mov
xlat
sub
test
lea
hlt
jmp
shll
fucomip
cmc
fcmovnb
icebp
mov
cld
jecxz
int
into
icebp
ret
xor
cmc
xor
cmp
neg
fadd
fisttpll
testl
not
jmp
lret
lret
idivb
cld
loop
cmp
loop
mov
test
in
in
xchg
xchg
aaa
repz
int
cmp
test
stc
aas
cmp
loope
xchg
cli
cmp
std
loop
ljmp
aam
cmp
dec
sti
shl
enter
loop
in
in
mov
hlt
test
cmc
das
leave
aad
xlat
shl
sarb
cmp
test
repz
cmc
in
cmc
cmp
in
clc
xor
enter
loope
int
not
hlt
ret
lret
in
fmul
xchg
in
jecxz
int3
in
clc
leave
shr
sti
cld
fcom
rcr
out
enter
stc
incl
orb
out
repnz
fnstsw
rol
sarl
lock
ret
fldl2t
shl
lret
into
icebp
in
loop
shll
in
cmp
iret
aam
cmp
cld
sub
fprem
cmp
aam
out
incb
lret
xor
out
lret
fstp
aaa
int3
sbb
in
mov
add
fimuls
div
xor
into
int3
fldl
stc
xchg
rcr
xlat
mov
mov
iret
call
out
lret
fsubr
cmpl
fprem
ror
shl
cmp
fcmovu
mov
xchg
repz
xor
cmp
fistpll
sub
mov
les
sar
loop
ror
stc
out
hlt
repnz
sti
loope
hlt
out
fcmovnbe
leave
test
shr
shl
jmp
xchg
in
call
push
lret
cli
loop
testl
std
xchg
in
xchg
loop
aam
rcl
int3
not
jmp
loope
or
incb
fld
mov
xchg
mov
test
sti
cmc
fdivrp
stc
cmp
aas
xchg
aam
mov
lock
shl
jecxz
lret
icebp
rcr
lret
call
out
std
jecxz
loop
or
lock
out
call
jecxz
fcmovb
aad
stc
cmp
aam
inc
loope
ret
clc
test
add
rorb
call
fucomip
std
mul
repnz
out
fdivr
enter
lret
sbb
xchg
idiv
xlat
int3
test
cmp
ret
test
sar
testb
xchg
lock
std
mov
in
into
lret
aaa
xor
loopne
adc
mov
hlt
hlt
jecxz
mov
loope
fiadds
out
lret
in
out
cmp
out
icebp
ret
loopne
rcr
mov
ljmp
xchg
xor
iret
xor
lret
sti
incl
cld
fidivrs
loopne
roll
loope
iret
lret
xchg
test
enter
div
cmp
aam
fucomi
repnz
shl
mov
lret
sti
jecxz
lret
mov
fld
xor
fcmovnb
cmp
icebp
cmp
std
mov
ljmp
out
xor
into
sarb
in
cld
cmc
hlt
xor
ret
aad
mov
rorl
xchg
loope
repz
in
lock
sbb
test
mov
mov
repz
loop
lret
rcl
jmp
cmp
rcr
adc
xlat
fmulp
loope
iret
icebp
and
rorl
fld1
fld1
ds
repz
loopne
clc
stc
cmpl
fcomp
loop
addb
ret
ljmp
mov
cmp
jne
mov
jmp
ret
into
aam
aad
fst
stc
hlt
stos
xchg
stc
ret
sub
jg
aas
add
rcr
in
incb
stc
cli
iret
lea
sub
test
cmc
shl
imul
loopne
sar
fdiv
vpminsw
int
in
jmp
fisttpll
in
hlt
fidivl
adc
fst
ffreep
in
sbb
lea
ret
in
sub
fcom
loopne
rcr
testb
filds
adcl
in
sar
in
jmp
call
ds
shr
ret
mov
aad
fcmovne
into
loop
loopne
out
out
hlt
sti
shr
rcl
test
hlt
idiv
lea
jecxz
in
sar
aam
loope
in
sarb
enter
cli
sarl
sti
aas
sti
shl
cmc
clc
fsub
rcr
les
into
repz
fprem1
sarb
lret
fucomi
fucom
out
fldl
jmp
hlt
out
xchg
lret
cmc
out
xor
sarl
ret
rcr
jmp
out
nop
mov
call
cmp
not
out
ss
ds
jecxz
ds
neg
lret
xlat
in
xchg
in
shr
xor
fldz
in
in
aam
xchg
rcr
repnz
jmp
lret
std
nop
in
xchg
xlat
cmc
rol
out
fld
clc
in
imul
in
lret
fcomp
orb
int3
xor
int3
lret
shl
cld
incb
jmp
fsubr
test
mov
loope
repz
lret
out
cmc
call
out
xchg
idivb
int3
out
movl
xor
cli
sarl
test
neg
hlt
mov
fmull
ljmp
aad
loopne
in
lret
in
std
decb
fsubrp
stc
fcmovu
sti
in
xchg
jmp
xlat
ret
std
enter
imul
cmp
out
dec
mov
into
icebp
sar
out
cmp
fcomip
int
cmp
fadds
sti
jmp
hlt
ror
mov
iret
jecxz
rcl
cmp
neg
out
sti
cli
rcr
sti
fdivr
loope
xlat
std
sbb
addl
icebp
in
shr
call
aam
lret
icebp
aad
loope
cld
cmc
fsubr
enter
mov
neg
xor
cmp
or
call
mov
incb
xchg
loopne
ljmp
fidivrs
lret
fidivrs
loope
aam
fisttpl
enter
jmp
int
leave
fucomi
int3
fidivs
cmp
cmc
ror
aad
fimull
mov
lret
xchg
sar
icebp
lret
cmp
fdivl
in
cld
iret
hlt
repnz
ret
ret
test
in
into
loop
xchg
into
lret
test
icebp
int
lret
out
rcl
lock
cmp
iret
shr
clc
div
ret
xchg
hlt
fucomip
loop
incb
xlat
xor
rcr
cli
lret
shl
neg
add
aam
cli
test
call
fstp
shr
nop
jmp
icebp
lret
rcl
cmp
aad
out
fxch
jecxz
cld
in
jmp
in
int3
cmp
test
fmulp
jecxz
rcl
les
fcmovnb
shlb
aad
fdivp
rolb
fnsetpm(287
lret
loope
sti
mov
mov
mov
mov
in
aad
clc
fucomp
int3
repz
shl
repnz
ret
fucomp
sar
sti
jecxz
icebp
jmp
ss
cmp
repnz
out
cmp
ss
repz
jmp
loop
fldl
nop
icebp
aam
cmp
aaa
clc
cmp
shl
fcmovnb
xchg
aam
mov
ljmp
jmp
in
sti
lock
jmp
shl
fcomp
faddl
stc
icebp
into
mov
out
cmp
sub
xor
jmp
sar
lret
ffreep
sar
ror
repnz
std
sub
lret
shr
lret
int
cli
jmp
test
cmp
test
cmc
mov
lret
shl
rolb
in
cmc
cmp
lock
cmp
adc
pop
add
add
rol
aad
fstp
movsb
ficomps
ljmp
jle
cli
clc
call
ret
cli
leave
in
cld
in
adcb
in
int3
int3
aam
cld
fdivs
aas
cli
xlat
stc
aas
cmp
shl
shl
idiv
in
or
aam
loop
shl
fxch
cmp
aaa
xor
out
sti
cmp
ds
std
mov
xchg
xchg
les
jmp
in
out
clc
sar
rcl
loope
in
clc
test
mov
xchg
aam
int3
icebp
vpmaxsw
cld
icebp
cmp
fcmovne
flds
cmp
aad
test
sti
in
loopne
call
lea
xor
sar
sarl
int
in
ds
fcomi
ret
loopne
fmulp
std
lock
xchg
aaa
xlat
cmp
clc
cmp
iret
aaa
cli
call
cld
aas
out
test
lret
fdivr
jmp
jmp
out
cmp
stc
xor
or
call
mov
in
lret
test
xchg
icebp
out
ret
aad
shlb
out
jmp
neg
hlt
jecxz
test
ret
cld
out
fsts
fcomip
xor
loop
call
repnz
cmp
hlt
idiv
xlat
fdiv
neg
test
flds
in
shrl
imul
fnstsw
shr
fcmovne
int
jecxz
repnz
lock
jmp
loope
repz
jmp
das
cmp
fsubr
out
ret
cmp
fdivr
jmp
std
or
shl
cmc
jmp
sti
leave
fdivrs
ret
into
test
decl
in
loop
aam
ror
cmp
jmp
cmp
cmp
ret
mov
sub
leave
fucom
sti
in
out
aam
xlat
out
rcr
idivl
cld
iret
fnstcw
fnclex
sarb
std
leave
aam
fucomi
in
cld
lock
in
out
call
shl
jmp
sti
cmp
jmp
fcomp
fld
faddp
stc
mov
loopne
sub
int
ret
leave
xor
cld
fcomp
cmp
fnop
sar
loopne
loopne
out
aad
jmp
std
icebp
out
roll
aam
sarb
aas
int
cmpl
xchg
out
loop
loopne
loopne
xorl
ljmp
cld
fldl
mov
mov
repz
ss
fxch
test
std
rol
mov
stc
jmp
adcl
repnz
aad
icebp
loopne
repnz
fcomip
loopne
xchg
mov
stc
sbb
xchg
int3
int3
cmp
repnz
int
fsubr
jmp
mov
les
and
out
jecxz
loope
ljmp
aas
aad
fadd
out
cmp
sti
test
jmp
in
call
shr
cmpl
shl
jmp
cld
ljmp
sub
lret
rcl
ljmp
loope
loope
repz
int3
fcmovu
std
frstpm(287
in
repz
loope
lret
xor
test
loope
adc
fdivrs
fdivrp
xchg
test
mov
icebp
nop
fcmove
xchg
xchg
xor
aaa
out
shl
cli
neg
ljmp
aad
jmp
xchg
loopne
test
test
sub
jecxz
lret
in
out
lock
int3
in
lock
shr
fadds
int3
sub
ret
fsub
lret
out
cmp
cmp
test
in
mov
fucom
ljmp
lret
xor
rol
cmp
sti
fprem1
rcr
cli
loop
xchg
mov
or
add
divl
std
fcom
and
mov
jmp
fnclex
out
xchg
shr
out
int
sti
aam
test
cmp
cmpb
repz
std
fsubr
mov
xchg
lret
ss
test
loopne
hlt
jecxz
cmp
addb
fucomp
out
loopne
stc
icebp
sti
fdivp
fsub
loopne
not
aam
ljmp
out
in
into
lock
repnz
fsubr
int
xor
jmp
ret
lret
enter
int
cltd
movsb
imul
xchg
and
stos
adc
aas
add
ss
jecxz
ljmp
into
leave
fildl
out
out
cmp
out
cmp
in
aaa
hlt
jecxz
sar
mov
in
or
icebp
hlt
jmp
aad
ljmp
aas
hlt
and
aam
stc
lret
addb
hlt
xchg
out
loop
not
lret
out
neg
add
jmp
stc
loop
lret
std
les
loopne
shrl
fdiv
out
shl
sarl
sar
out
cmc
jmp
fucomp
fsub
leave
shl
lock
in
fcom
aad
cmp
adc
jmp
mov
loopne
jmp
ret
fisttpll
lret
aaa
cld
cli
fsubr
cmp
ret
fldl
std
mov
lret
out
std
shll
call
iret
rol
flds
add
fxam
loopne
mov
lret
sub
xor
aam
shlb
out
std
fdivrs
loope
cmp
jecxz
cli
loopne
test
into
fildl
aam
xor
int3
out
cmp
fcmovne
cmp
and
xchg
aam
ret
out
cli
xchg
into
mov
mul
aad
cld
jmp
in
loope
out
cmp
in
loope
in
icebp
cld
fucomip
mov
xor
leave
not
cmp
aam
loope
or
fsub
xchg
in
int3
call
std
in
aaa
call
cmc
aam
aam
std
cmpl
hlt
repz
jmp
in
in
loop
lock
xchg
test
repz
out
fidivrl
out
hlt
stc
std
int
jmp
int
test
int3
orl
fists
int3
fsqrt
cmp
aam
icebp
iret
fadds
mov
mov
xchg
jecxz
shlb
int
cmp
xlat
xlat
std
jecxz
lock
cmp
shr
shrb
xor
fadd
fdivp
ljmp
mov
test
loopne
int
aam
out
aas
fmulp
cmpb
fdiv
sti
loop
jecxz
nop
xchg
iret
fldlg2
shl
out
addb
rcl
fcmovne
mov
fsubr
repz
shr
xor
cmc
fnstcw
std
cld
testl
cld
fsubr
xchg
out
xorl
xor
hlt
sarl
loope
out
jecxz
repnz
flds
sti
lock
lock
repz
ljmp
aam
roll
in
movl
ficoms
ret
call
icebp
rcr
lock
in
cli
out
std
loopne
faddl
jecxz
cmc
in
cmc
cld
cmp
ror
int3
jecxz
loop
out
cld
loop
ljmp
cld
rcl
icebp
lock
xor
neg
cmp
repnz
ljmp
adc
fsubp
mul
in
out
int3
loopne
shl
jmp
sar
clc
cmp
cld
fnstcw
cld
ret
orl
idivl
xor
idiv
clc
push
cmp
test
xchg
filds
into
mov
out
and
ljmp
sar
rol
fcmove
ret
jmp
add
icebp
icebp
in
cmc
in
xlat
cmp
cmp
std
shl
cli
in
loop
neg
and
xchg
out
into
xor
into
xlat
stc
clc
cmp
loope
jmp
fdivr
clc
stc
fldl
repz
enter
rcl
cmp
ret
sti
sar
xchg
sub
mov
call
in
fdiv
fucompp
cmp
out
in
fsubp
ret
xchg
xchg
in
filds
jmp
rcl
idivl
fiaddl
bnd
std
mov
std
ljmp
fmul
enter
loope
cmp
fisttps
adcb
xor
cld
ljmp
repnz
jmp
iret
ror
fcmovnu
out
mov
insb
adc
jle
add
idiv
clc
xlat
aad
addl
orl
out
rcr
cmc
in
out
xor
roll
repz
incl
out
cmp
repz
hlt
cmp
loopne
clc
roll
in
int3
lock
xchg
int3
das
stc
cmp
xlat
rcl
in
loopne
frndint
lock
in
stc
xlat
inc
test
xchg
out
fcmovnbe
divb
out
aad
sti
fsubr
out
xor
cmp
loopne
cli
mov
stc
fcmovne
ret
ljmp
icebp
cmp
cmp
out
adc
test
aas
leave
out
jecxz
int3
fdiv
mov
int3
aad
lret
lret
cmp
fld
out
icebp
fucomp
repz
fptan
sti
clc
xlat
faddp
repz
jmp
into
xchg
xchg
sub
out
cmp
clc
fcmove
imul
std
cmp
fld
in
xchg
mov
lret
out
xor
stc
aam
rcl
clc
out
jecxz
cmpb
cli
xchg
jmp
into
fmull
int3
xor
cmp
leave
loop
clc
cmp
jecxz
rcl
test
popl
ljmp
stc
jmp
cmp
shl
in
aam
repz
enter
ror
jecxz
xchg
loop
xor
sti
fcmovnu
into
fdiv
int3
iret
hlt
jmp
fsubr
xchg
mov
mov
not
cs
ret
hlt
aam
iret
shr
sti
leave
test
aas
mov
fucom
addb
test
jecxz
ret
lret
out
aam
icebp
std
xchg
les
mul
out
mov
lret
into
xor
out
test
cmp
out
fucomi
stc
shl
cli
lock
ret
aad
jecxz
std
sti
test
out
xorb
fidivs
aam
ret
loope
loope
ret
jmp
ljmp
loopne
xor
leave
std
out
cmp
hlt
hlt
and
sti
mul
addl
out
xor
shl
xor
int3
aas
iret
mov
in
incl
jmp
mov
enter
cmp
out
in
push
test
incl
mov
lret
clc
aam
repz
in
out
out
xor
cmp
fdivr
cmp
hlt
xchg
xchg
loop
call
fdivrl
fadd
test
xchg
loop
lret
mov
in
hlt
xchg
mov
xor
fidivrl
cmp
int
aas
add
hlt
testl
loopne
shl
shl
int3
lock
out
fdivrp
cli
lock
xlat
loope
fildl
leave
shr
jecxz
out
aam
sti
lret
out
repz
cmp
lock
jmp
lret
fnclex
test
roll
lret
aam
xor
in
cli
ror
ftst
ret
ret
sub
xchg
in
out
xchg
out
ljmp
cli
aas
into
xlat
adc
aas
ljmp
iret
test
orl
fdivr
in
cli
sarl
test
aam
mov
sti
nop
in
roll
shlb
stc
shl
aam
ret
fadd
ror
fxam
std
test
out
jecxz
lock
ror
repnz
icebp
cmp
mul
fcmovu
rcl
ljmp
ljmp
leave
imull
jmp
int
xlat
lret
fcom
in
test
repnz
xchg
xor
jmp
xor
icebp
icebp
clc
loopne
ds
in
ret
ljmp
out
jecxz
int3
pause
xor
xor
fsubr
cld
xlat
sti
clc
std
rcr
lock
fadds
cli
repz
fdivp
xor
xor
xlat
cmc
shll
in
rcl
add
test
out
movb
iret
leave
fisttpll
xor
int3
ss
icebp
lret
clc
fmulp
enter
jmp
jecxz
rcl
rclb
in
stc
stc
stc
std
fcomi
cmp
je
movl
jmp
int3
into
fmul
fsubrl
in
jecxz
inc
hlt
or
aas
add
std
hlt
icebp
fsub
cli
dec
clc
std
out
mov
cli
fucomi
in
into
out
ljmp
stc
cmc
cmpb
cld
loope
ret
rcr
xor
xlat
fnstenv
cmpl
sti
ffree
ret
xchg
sub
fildl
hlt
lock
in
icebp
sti
shr
in
sarl
fadd
call
sar
ljmp
fxtract
lock
stc
xor
out
sarb
cld
cmp
add
std
xlat
mov
in
lret
xchg
fucomi
ljmp
ss
not
cmpl
aam
out
and
in
xchg
int
ljmp
rcl
ror
clc
loopne
cmpl
stc
sub
mov
jmp
in
cmp
ror
cmp
ror
clc
adc
rcr
fsub
fldpi
out
stc
int3
filds
jmp
vpsubusb
shr
div
fdivr
std
cmc
flds
out
fsubr
lret
jmp
loop
in
not
call
icebp
shll
testl
cld
lret
iret
mov
ror
jecxz
aaa
xor
cmpb
std
test
fst
out
stc
mov
enter
nop
loopne
jmp
cs
clc
xor
int3
clc
jmp
idiv
fcmovnbe
ret
loop
ljmp
nop
mov
xor
in
lret
fcomi
lock
cmp
les
jmp
mov
call
int3
aam
xor
int
fdivrl
xor
ds
clc
faddp
fcmovb
in
and
nop
leave
fiadds
xlat
aad
xor
ljmp
sti
addl
xchg
jmp
in
aam
rol
repz
leave
xlat
lock
test
fprem
mul
and
int
repnz
test
call
in
lock
cli
xlat
jecxz
int
sar
addl
fstp
adc
mov
into
repz
fcmove
hlt
shl
std
sar
out
rolb
aad
out
mov
rcl
or
not
loop
addb
loopne
in
lock
ret
cli
xor
cmc
neg
shl
filds
in
testb
int
lock
rcr
aad
ljmp
fucom
sub
fxch
decb
shr
rorb
cmp
cli
cli
jmp
and
out
fiadds
in
in
mov
xor
aaa
call
int
repz
loope
leave
jmp
lret
loopne
in
repz
cmc
cmp
ds
ds
vpaddb
mov
cld
enter
jecxz
cld
ljmp
xor
cli
lret
cmp
cld
jmp
out
in
out
test
jmp
nop
out
iret
lret
iret
fsubr
sarb
lret
xlat
ror
out
fcmovu
cmp
sar
fcomip
jmp
jmp
ret
in
std
xor
fsubr
repz
rcl
test
std
ret
out
lock
mov
xchg
loopne
enter
iret
in
fcmovbe
aam
cmp
ret
add
mov
jmp
shl
cmp
cmc
iret
test
fidivrl
icebp
out
ds
test
repnz
cli
out
mov
in
hlt
ror
ret
ss
cmp
cmc
int3
clc
out
hlt
shl
les
clc
sub
fldl
aam
jmp
icebp
fprem1
out
sar
cmp
hlt
rol
ljmp
iret
icebp
enter
jmp
repnz
fsub
int3
cli
cmp
loope
leave
out
out
xchg
sub
aam
ds
not
imul
ret
in
xchg
faddp
out
clc
sbb
pushl
in
in
stc
lret
neg
ret
sti
xchg
xchg
lret
sti
int
cld
iret
xchg
lea
cmp
aad
rcr
icebp
stc
xlat
out
ret
lea
jmp
ret
ror
aam
mov
xor
out
sbb
jle
lock
loope
in
mov
xchg
cmc
aad
xlat
xor
cmp
cmp
aas
fnsetpm(287
aam
int3
mov
ljmp
call
into
in
lret
aad
stc
sbb
addb
jecxz
sti
lret
in
fsub
int
xor
aas
repz
fdivl
cmc
addl
fcmovne
fadds
ror
cmc
ss
aad
shl
jmp
hlt
fucom
out
adc
jmp
loopne
lret
std
lret
aam
sub
ret
cmp
cmpb
rcr
loop
mul
testl
xchg
lock
xor
rcr
rolb
fcmovnb
xchg
loop
clc
mov
jmp
out
out
cs
ret
cmp
cmp
lock
ffreep
les
inc
xbegin
out
loop
cmp
hlt
ds
xlat
sub
in
stc
in
add
ffree
orb
int
cmp
icebp
in
cmp
lock
xlat
mov
aam
jecxz
call
ljmp
lock
f2xm1
in
out
not
out
xor
fdiv
int
int
out
aaa
hlt
aam
aam
cmp
fmulp
icebp
ffreep
in
clc
out
loop
out
orb
fadd
lock
aad
enter
xlat
call
mov
hlt
addb
in
nop
fucomp
xor
iret
stc
in
ss
int
cmp
movb
jecxz
into
cli
loop
sti
xchg
jmp
in
out
shl
clc
loop
frndint
idivb
vshufps
adcb
repnz
lock
xlat
cld
stc
ds
mov
cmc
leave
out
out
nop
ljmp
cmc
xlat
cld
out
fucom
out
ret
out
ret
lock
shr
mov
decb
xchg
ror
leave
in
int3
cmp
fucompp
repnz
in
out
jecxz
out
ret
mov
in
leave
sti
loop
hlt
in
shl
rol
imul
div
out
aam
cmp
in
loop
mov
enter
in
repz
int3
stc
in
out
out
cmp
out
repnz
shl
neg
leave
in
jmp
fsub
ror
in
hlt
stc
fld
call
int
in
test
sbb
out
loope
nop
cli
in
into
xchg
xor
fsubr
aad
icebp
fcmovnu
jecxz
cmp
ror
xchg
clc
xlat
loope
icebp
sti
jecxz
out
ret
fyl2xp1
aaa
jmp
in
jmp
jmp
jecxz
fdecstp
stc
clc
fld
loope
shl
xchg
out
shl
sub
icebp
cli
lds
cmp
incb
aad
sti
mov
fmul
call
xchg
sub
xor
leave
cld
xor
repz
lock
shl
out
leave
out
in
xchg
fsub
xchg
in
ljmp
cld
divl
int3
push
fmul
in
mov
leave
repz
mov
and
rclb
shl
lret
cli
cmp
aam
in
fsub
fcmovb
loopne
mov
out
test
ljmp
out
int3
jmp
out
aas
ret
cmp
shl
int
ret
xchg
mov
int3
jmp
sar
sarb
fmul
fdivp
enter
mov
sbb
lret
ffreep
cmp
jmp
fst
mov
aam
lret
icebp
sti
lret
repz
in
ljmp
out
cmc
incl
cmc
jecxz
fsubp
fimull
xor
lret
cmc
shr
std
test
sar
shl
ret
ret
movb
loop
sub
jmp
std
fsubr
out
loope
fdivr
xor
faddl
lret
test
cmp
out
xor
cmp
test
cld
addl
xchg
mov
shlb
fcomp
cmp
cmp
imul
in
fisttpll
in
jmp
xlat
lret
aad
aad
int
jle
and
scas
and
aas
add
ret
test
int
std
loope
repz
xchg
iret
ret
fxch
enter
loope,pt
aad
test
inc
enter
in
xlat
stc
loope
leave
in
in
lea
loope
ss
jmp
fcomp
fcomi
adc
cld
out
stc
repz
mov
icebp
loop
ss
aaa
ror
lock
sar
cmc
aaa
ds
repz
int3
fcmove
std
mov
lea
in
out
shl
out
hlt
in
out
aad
and
mov
out
lock
aaa
ror
fstp
fmul
sar
sti
sti
loop
hlt
fst
fcmovnu
add
xchg
jmp
aad
stc
lret
in
aam
fdivrp
rolb
cli
fcmove
mov
enter
fmulp
mov
out
leave
sti
lock
testl
into
add
sub
int
hlt
pushl
faddl
icebp
aad
xlat
call
loope
into
out
loop
xlat
out
out
shr
int3
cmp
rol
out
out
sti
ljmp
icebp
lock
repz
ljmp
loope
loop
aas
leave
xchg
fildl
mov
rcl
les
cld
out
ds
cmp
sti
mul
repnz
lret
ljmp
jmp
icebp
cmp
lret
lret
loopne
aad
loopne
shl
in
cmc
lret
call
fsubrp
clc
ljmp
frndint
cmp
ret
fisttpll
ljmp
out
cmp
cmp
jmp
loop
cmp
fdivr
call
xchg
fdivr
out
ljmp
xor
jmp
rcl
repnz
aam
cli
cmp
icebp
sbb
xchg
ror
rolb
out
xor
das
fcmovnu
loope
in
out
adc
cmp
xchg
call
jecxz
xor
std
xabort
fcomip
cmp
fcmovbe
xchg
fiaddl
xor
adc
aad
cmp
loop
addb
aad
loop
mov
fxch
in
into
out
clc
jecxz
out
aad
call
add
test
out
lea
mov
ss
aam
in
in
cmp
xlat
lret
loopne
hlt
faddp
mov
enter
aam
xor
int3
cmp
sti
sar
hlt
test
cld
loope
repnz
aas
cld
and
xchg
aad
repz
xlat
in
out
int3
icebp
cmp
cli
clc
xchg
orb
mov
shl
jmp
lock
sub
in
cmp
jecxz
jmp
out
in
mov
nop
div
stc
test
int
stc
fcmovnb
shl
rcl
std
std
jmp
cmc
out
ljmp
xlat
shl
aaa
lock
ds
in
rol
rcr
aad
out
out
fucomip
icebp
ljmp
clc
repnz
ds
cli
jecxz
aam
ljmp
sti
in
mov
repz
jmp
out
sarl
aaa
loopne
lret
ret
xor
ret
fadd
enter
out
lret
jmp
cmp
lret
clc
aad
fst
cmp
loop
aad
mov
repnz
sar
cli
lock
faddl
hlt
out
cld
jmp
cmp
xlat
fcomp
loope
adc
xchg
in
shr
clc
cmp
aam
icebp
idivb
loop
jecxz
xchg
mov
and
aaa
in
xlat
shr
fdivr
cmp
in
addb
fisttpl
mov
out
in
xchg
iret
test
shr
out
or
sar
ds
fadd
out
xchg
loop
hlt
ljmp
out
iret
shl
repnz
std
iret
rolb
les
xor
std
shl
int3
loop
jmp
aam
cmp
aam
loope
incl
pop
mov
mov
xor
lea
mov
jmp
lret
rcr
aad
fsubr
xor
inc
jo
jg
aas
add
call
into
addb
repnz
xor
enter
aas
jmp
neg
lock
cli
ds
rorb
test
clc
cld
fcomp
cli
out
stc
cld
cmp
in
shl
std
xchg
cli
out
ljmp
nop
or
lock
cmp
jmp
addl
mov
in
in
xchg
loop
int
int
out
ss
sarl
aas
vpavgw
mov
cld
call
xchg
mov
shr
les
call
xor
fcomi
rcl
out
aam
fcmovnb
enter
stc
test
into
xor
fdivrs
fdivrs
into
lret
testb
jmp
test
fmuls
nop
jmp
shl
cmp
rcr
cld
fdivl
clc
xor
lret
in
clc
in
jmp
out
idiv
iret
enter
aam
cmc
testl
incb
divl
xor
stc
fcmovnb
lock
jmp
sarl
sti
test
leave
shr
fmul
in
cli
mov
call
in
clc
repz
hlt
fnstcw
int3
loopne
out
fpatan
ret
aas
int
xchg
sti
sti
fimuls
cmp
call
out
cmp
cli
cmc
out
cld
fcmovnu
jmp
fucomi
test
aad
xor
hlt
fdivl
lret
xor
in
repz
cmp
jecxz
fnstsw
mov
nop
fisttpll
aad
xor
test
addb
inc
ret
sti
shl
loop
rol
ror
in
idiv
cmp
aas
into
addl
sub
in
into
hlt
in
mov
ret
aam
in
ss
rcr
loopne
xchg
inc
mov
std
mov
std
incb
stc
fcmovb
clc
cmp
cli
aad
ret
dec
adc
xchg
in
mov
roll
int
cmp
stc
lock
aas
cmp
rcr
repnz
aas
out
orl
push
call
shl
sbb
sarl
cmc
stc
call
lock
lret
jmp
shl
out
xor
sti
aad
cmp
lock
lock
fisttpl
jmp
notb
sub
cmp
into
loop
cmc
rol
stc
loop
repz
int3
mov
test
jecxz
xchg
cmp
fdiv
lret
cld
loopne
fyl2x
clc
std
repnz
sbb
xchg
fucom
repnz
loopne
divl
in
in
repnz
cmp
sbb
incb
fldl
mov
ljmp
iret
enter
bnd
shl
leave
out
cli
cld
ret
std
out
in
aaa
into
into
int
int3
loope
fcmovu
icebp
xlat
xlat
cld
cmp
out
call
in
in
cmc
ret
in
in
sarl
aas
int
cmp
repz
xbegin
in
in
stc
enter
std
repnz
jecxz
sar
out
not
loope
imul
into
int
jmp
fmull
xlat
fcomp
xor
xor
clc
cli
sti
mov
ljmp
icebp
xchg
jmp
sub
cmc
repz
lret
call
fiaddl
mov
in
lock
div
shr
cmp
lock
rcl
clc
icebp
jecxz
repz
ret
out
cli
iret
jmp
shl
out
ss
cmp
roll
icebp
shl
sti
jecxz
fmul
in
repnz
iret
ljmp
fdiv
bnd
ret
test
xchg
or
call
out
cmc
xchg
int3
xor
fcmove
std
in
repnz
cli
ds
fndisi(8087
std
fscale
sar
mov
add
xchg
in
xchg
icebp
hlt
ret
aam
sar
xor
hlt
cmp
xor
jmp
nop
cld
fsub
xchg
mov
loope
cmp
in
int
not
enter
lock
into
mov
jmp
jmp
ret
iret
enter
int
xchg
cmpsb
push
ja
cmp
jle
add
aad
mov
fsubr
ror
repz
jecxz
sti
into
xlat
not
fadds
fucom
fldl
mov
in
out
lea
cmp
leave
iret
jmp
add
aas
loope
mov
lret
jecxz
orl
enter
aam
cmp
out
shl
repz
in
repz
in
xor
out
cmp
fsincos
hlt
fcmovu
loopne
filds
enter
mov
hlt
fdivrs
ror
aad
cld
cmc
xor
aas
rcl
fcomi
loop
call
xchg
jmp
xchg
int
xor
fnstenv
not
fcmovne
test
ret
loopne
loope
fimull
jmp
lds
hlt
sar
idiv
rolb
loope
icebp
std
enter
call
popl
xor
in
repz
aad
int3
cmp
xchg
fadd
dec
enter
stc
iret
repz
iret
fucomip
in
jecxz
div
ss
int
sub
mov
std
ljmp
in
call
repnz
enter
rol
xchg
mov
add
std
mov
xor
lret
aad
shr
sar
fsub
div
sub
jmp
xlat
vcmpps
div
xor
in
out
loopne
out
cmp
cmp
test
int3
iret
fstp
call
enter
out
xor
into
fcomp
cmp
ds
filds
lock
divl
out
ljmp
cmp
cmc
stc
roll
cmc
fadds
out
cmc
in
xchg
hlt
jecxz
in
aad
hlt
repnz
ds
sarl
enter
add
std
fucomip
nop
iret
clc
jecxz
xlat
fcomi
divb
cmc
not
in
iret
mul
test
xchg
in
mov
ljmp
jecxz
icebp
out
cmp
jecxz
shl
fstpt
clc
decb
jmp
mov
mov
decb
in
into
fidivrs
iret
repz
cli
mul
clc
cmp
enter
mov
sti
lret
in
xor
cmc
int3
xor
sub
in
out
testb
int
fisttps
shll
iret
sar
cmp
int3
out
loopne
jmp
cmc
repz
into
repz
xchg
out
xor
cli
fnstsw
sti
incb
fcmovu
filds
out
fucom
in
ror
adc
div
clc
aam
int
std
shl
sti
aaa
sar
loope
fmull
loop
loopne
ror
int3
out
lret
hlt
repz
repnz
int3
sar
decl
test
lock
test
loop
xorl
cmp
aam
std
cld
stc
in
fildl
in
jmp
cli
fimuls
rcr
in
lret
sar
cmp
int
repz
out
fildl
addl
int
sti
hlt
iret
xlat
in
idiv
repz
in
test
fadds
mov
clc
repz
out
cli
xor
out
loope
stc
idiv
stc
jecxz
mov
into
xor
cli
ljmp
out
sarl
shl
cmc
shl
cmp
enter
out
sub
mov
out
out
aad
jmp
sar
rcr
ret
xchg
test
mov
cmp
xchg
fsub
ljmp
xbegin
loopne
xchg
loopne
loop
mov
cli
in
incb
jmp
aad
cld
idiv
rcl
hlt
in
cmc
in
lock
cli
fadds
orl
ljmp
rcl
xchg
sbb
movb
mov
lock
out
fdiv
cmp
loopne
out
cli
sbb
in
in
xchg
xchg
iret
fisttpll
in
aaa
fdivp
in
cld
jecxz
hlt
lock
fcmovnu
fimull
mov
jmp
lret
fst
int
test
cmp
bnd
aas
add
cmc
xlat
addl
out
xor
cmp
dec
rcr
clc
xlat
shl
aam
fucom
fsubr
lock
in
in
into
ljmp
clc
div
hlt
out
fadd
ret
jmp
fndisi(8087
in
in
lret
into
decb
rol
test
cmp
fstp
rol
shl
std
sub
in
mov
cld
clc
aad
fnstcw
jmp
cld
aas
fucom
std
fcom
in
out
out
sti
in
repnz
out
rol
sub
stc
out
shr
ret
aad
adc
leave
sub
mov
addl
out
jmp
addb
flds
fimuls
enter
leave
jmp
xorl
rolb
int
call
xlat
fmul
std
fnstenv
cmp
cmp
fcomip
sarl
aas
jecxz
mov
enter
lea
int3
jecxz
aaa
xor
stc
xlat
cmp
fsubrp
fdivrp
not
ds
clc
jecxz
mov
out
xchg
ror
repnz
clc
std
in
jmp
iret
fmul
std
fcmovnbe
std
rorl
enter
into
loopne
mov
enter
cmp
idivl
rcl
sarb
call
mov
out
into
xor
into
xor
int3
aam
fld
xlat
loop
rcr
jecxz
test
jecxz
out
xchg
xchg
cmc
loop
mov
hlt
ds
repz
fmull
out
call
aad
ret
lret
icebp
cmp
clc
fxch
in
xchg
mov
call
ror
loope
xor
cmp
sar
aas
stc
aad
ds
std
fsub
leave
jmp
mov
nop
int
mov
imul
ret
cmc
lret
fdivrl
fsub
loope
les
xchg
int3
in
into
int3
loopne
rol
cmc
fdiv
ds
fcom
int3
rcl
cli
test
repz
shl
mov
rol
shll
jmp
out
shl
iret
sar
aam
xchg
cli
fucomi
test
mov
lret
int3
mov
xor
hlt
fbstp
ds
std
shl
xor
cli
clc
jecxz
test
loope
fcomip
aam
sar
shl
ds
cmp
loop
out
xchg
add
xlat
out
lea
shr
cs
stc
shl
rol
rolb
fld
out
in
fsub
sub
int
loope
ljmp
icebp
int3
jecxz
lds
loope
les
rclb
xchg
jmp
in
jmp
sti
in
ret
out
call
loopne
out
out
test
jmp
out
ror
fcomp
cli
cmp
ret
xchg
fiaddl
mov
leave
icebp
loop
lret
enter
call
hlt
hlt
sar
cmp
ret
in
ret
loop
test
mov
in
out
mov
jmp
out
into
jmp
shl
out
idivb
mov
mov
mov
ljmp
cld
aas
ljmp
aad
sbb
out
fdivr
and
int3
leave
shl
jmp
cmp
sti
ret
call
jecxz
out
mov
loop
xor
xor
divb
lock
sub
mov
xchg
mov
jecxz
leave
lret
call
cmp
out
cmp
out
clc
ljmp
mul
sar
in
out
xchg
into
fdivrp
in
faddp
xor
xor
call
sbb
int
ffreep
call
add
call
icebp
xchg
xchg
iret
lock
hlt
imul
repnz
loopne
xlat
testl
sti
mov
jmp
faddl
in
iret
repnz
clc
stc
cmc
aad
shr
cli
xchg
test
out
neg
ret
cld
mov
xor
std
leave
cli
cmp
add
mov
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
push
adc
jmp
xlat
ffree
xor
pop
fnstsw
dec
xorb
jle
test
out
mov
loope
out
sub
loop
ror
fucomip
cld
cli
xor
repz
cmp
test
ljmp
in
lock
enter
fcom
test
cmp
sti
mov
filds
mov
stc
call
int3
idiv
cmp
call
ljmp
sub
out
xchg
ljmp
ror
in
fucomip
repz
iret
xchg
faddp
hlt
ret
xchg
int
loopne
loopne
jmp
mov
shlb
cli
leave
hlt
icebp
in
xlat
aad
call
jecxz
aas
dec
in
sub
out
in
std
out
xchg
cmp
ds
cld
rcl
cmc
fmuls
lock
hlt
iret
xor
cmc
aam
xbegin
sarl
shl
test
repz
ret
fxch
in
mov
cmc
iret
out
ss
cmp
cmp
rol
ds
xchg
cld
ljmp
in
lock
in
out
cmp
aas
neg
repnz
cli
fcmovne
cmp
mov
sbb
jmp
hlt
cmp
shr
cmp
fcomip
incl
out
mov
leave
repnz
in
aad
xor
fmulp
in
ljmp
test
jecxz
int3
mov
out
int
in
xor
aam
cmp
std
aad
aas
les
fcmove
ds
leave
xchg
enter
jmp
cli
cmp
leave
cmp
fcmovnbe
cmp
clc
fcomip
xchg
mov
ret
lret
sub
lea
repz
in
cmp
int3
hlt
loop
ds
loope
fstpt
loope
mov
mov
in
xchg
xor
fucomi
aaa
into
cmp
into
ret
orl
mov
xor
cmc
xor
or
shl
std
cli
fstp
lret
iret
cli
fucomp
loopne
enter
div
cmp
shl
leave
in
int
out
out
addl
in
ljmp
cmp
ror
int3
std
cmp
lock
out
clc
fmulp
enter
orb
iret
call
out
jmp
fldl
xchg
in
clc
decb
lret
ljmp
out
call
ret
fsubp
hlt
loope
out
addb
hlt
mov
ljmp
ljmp
ret
jecxz
hlt
mov
loop
cli
adc
fst
call
shl
lock
lock
xor
leave
in
lret
cli
incl
ss
lret
aam
imul
cmp
rolb
rcr
sar
cli
loop
mov
sub
sbb
aad
lret
ljmp
loope
cli
repz
fcmovnb
frstpm(287
int
xchg
ret
out
icebp
ljmp
idiv
xlat
cmp
loop
fiadds
mov
call
ss
enter
aaa
cld
sbb
cmp
out
cld
fsubr
fstp
mov
in
xchg
mov
sub
enter
aad
ljmp
fucomip
xchg
test
in
cmc
test
in
fcom
loop
lret
ror
cmp
in
repnz
fiadds
in
fdivrp
xor
test
jmp
loope
fldl
filds
ljmp
shr
int3
shl
cmpl
in
aam
enter
sub
jmp
xlat
ljmp
test
xchg
enter
fiaddl
icebp
call
ror
repnz
ds
fcmovnu
int
aad
fstpt
leave
mov
int3
fsubp
xchg
std
sub
in
imul
in
fldl
sub
leave
add
in
fadd
std
test
leave
divb
xor
out
cld
out
cmp
repz
ds
call
int3
xlat
mov
std
in
fildl
out
rcl
xor
lock
cmp
aas
fcmovbe
les
xchg
cli
jmp
lret
hlt
std
xchg
aaa
in
mov
hlt
cmp
or
cli
decb
xlat
test
addl
xlat
das
test
aas
iret
in
cli
loope
repz
jmp
ret
repnz
out
out
in
int
aam
int
inc
clc
and
mov
leave
add
add
rol
rol
or
push
aaa
daa
iretw
cmc
in
jg
scas
add
enter
in
fiaddl
ffree
fiaddl
xchg
out
mov
out
sub
fidivl
and
cmp
jmp
lret
fstp
call
out
into
stc
call
rolb
aad
mov
sti
in
icebp
call
int3
lret
stc
in
out
cmp
div
iret
rcl
loopne
cmp
fmuls
test
lret
in
xor
repz
ljmp
sti
rcl
xlat
fcmovnu
cli
fdivrp
enter
xchg
ret
hlt
shr
das
aaa
std
cmpb
test
idiv
cmp
jmp
xchg
ror
jmp
ror
loop
aam
cmp
lret
lret
in
cli
not
fucom
fsub
ret
loope
mov
enter
out
ss
out
fdivr
int3
ret
ret
call
hlt
loopne
mov
fmul
test
cmp
xor
neg
fst
loop
test
xchg
or
clc
leave
loopne
adcb
jmp
out
xlat
leave
int
ljmp
idiv
fucom
fnsetpm(287
incl
xchg
in
iret
lock
shl
rcr
mov
testl
out
xor
iret
fsubr
cli
cmp
ss
out
in
ljmp
std
jmp
iret
in
xor
cli
icebp
cmp
loop
rol
fimuls
loopne
lret
xchg
fisttpll
ljmp
rcl
in
div
mov
loop
fists
xchg
rcl
int3
not
fsubp
faddp
icebp
ret
fstp
aad
out
in
lock
xor
lret
cmp
jmp
std
in
icebp
xchg
add
rolb
divl
cli
in
cmp
out
sar
cmp
aas
adc
out
loope
out
in
test
loop
div
in
cmc
rol
cmp
out
jmp
fisttpll
das
rcl
cmc
std
cmp
lret
incl
out
xor
sti
lock
lea
int
sti
out
aam
icebp
jmp
aas
test
cmp
clc
test
fnstcw
int
int
icebp
icebp
xchg
lock
into
fst
xlat
std
adc
cmp
in
cmc
sti
test
int
in
out
loopne
test
mov
xlat
loop
repz
lock
clc
shl
cmpl
shr
xor
jmp
rcr
xchg
cld
imul
icebp
cmp
ljmp
call
mov
cld
mov
in
hlt
iret
mov
jmp
ljmp
sbb
roll
addl
int
roll
sub
cmp
or
aam
repz
fsubr
std
lret
out
lret
xor
lret
div
ret
int3
idiv
sarl
fcmovbe
jecxz
push
fcmovnu
test
fld1
jmp
repnz
mov
ljmp
loopne
xor
aad
sti
ds
in
fmul
loopne
lea
repnz
out
int
aaa
cli
iret
lret
fsubr
int
cmp
xor
icebp
cli
lret
in
cs
lock
out
fidivl
xlat
xor
leave
aad
fmull
jmp
jmp
mov
ljmp
in
out
dec
cmp
aas
icebp
xor
fimuls
out
shl
aam
icebp
fcmovu
into
lock
out
hlt
lock
mov
out
mov
loop
lret
cmc
imul
cli
stc
shl
cli
shl
aad
clc
mov
test
in
test
repnz
fcoml
idivl
ljmp
shl
out
stc
repnz
stc
call
cld
out
addl
out
in
ror
out
cld
loope
aas
lock
vpsubsw
lret
call
fimuls
lret
neg
mul
aas
in
fdivr
ret
ret
in
and
xchg
ficoml
jmp
loop
out
into
icebp
iret
fidivrs
fucomip
cli
cmp
rol
ret
test
enter
flds
cmc
jmp
lret
xor
fmul
into
ret
flds
addl
leave
xchg
test
cmc
cs
shr
ror
clc
out
loope
in
aad
shl
ror
movl
jmp
enter
fxch
shll
or
je
pop
adc
add
out
mov
fldl
out
lret
test
iret
sarb
aas
sti
icebp
fdivr
repz
xchg
repz
subl
aaa
rcr
leave
idiv
icebp
sbb
addl
test
loope
repnz
out
cmp
cmp
test
xchg
loopne
jmp
leave
call
lock
ror
clc
fucomp
stc
repnz
mul
repnz
aam
lret
enter
fiaddl
xchg
fsubrs
cmp
into
cli
cmp
icebp
loopne
sarl
rolb
fucomp
ror
jmp
shr
aam
icebp
call
into
fstp
fcomip
loope
cmp
mov
cli
loopne
iret
xchg
out
jmp
cmp
fcomp
dec
neg
cmp
fdivr
testb
mov
into
mov
xor
xor
fdiv
ds
clc
jecxz
in
rcl
aad
cld
sub
out
out
sub
xchg
ret
cmp
call
ljmp
in
leave
enter
stc
fcmovne
lock
bnd
out
shl
cmp
lret
int
lret
ret
std
cmpb
cmc
mov
or
cli
out
xor
icebp
out
cmp
cmp
aad
cmp
hlt
add
out
sar
repz
test
sarl
in
ds
icebp
imul
cli
ljmp
jmp
out
in
cmp
into
icebp
std
cmp
cmp
lret
fldz
loop
ret
ffree
xchg
cld
loope
std
hlt
test
xor
fcmovnbe
imul
int3
call
out
xlat
clc
in
stc
orl
sti
int3
repnz
lock
call
fdivr
call
out
sti
call
orb
sti
fsubp
xchg
in
stc
call
ror
cmp
test
fdivr
ret
cmp
in
into
xchg
loope
xor
xor
loope
sti
in
push
mov
jecxz
loope
fists
in
int3
rcl
int
xor
int
push
sub
test
xchg
rcl
in
cmp
fdivs
xbegin
cmp
vshufpd
xchg
sbb
jmp
movl
jmp
fcomp
cmc
jecxz
out
mov
leave
fcom
in
incl
xchg
xor
rcl
cmp
fprem1
fdivp
lock
test
out
mov
orl
aad
cmp
xor
fisttps
jecxz
adcl
out
fcmovbe
loopne
out
xlat
into
cli
div
call
nop
iret
cmp
icebp
test
repnz
cmc
xor
hlt
cmc
lret
sbb
cmc
testl
out
rorl
aad
cmp
xlat
cmc
fdivp
rcl
and
test
shr
fcomp
cli
xor
int3
ffreep
cmp
sbb
iret
xchg
jecxz
loop
icebp
vpmullw
out
in
ss
cmp
cmp
out
fdivrp
sti
cld
jmp
shlb
clc
xor
loope
test
roll
enter
enter
jmp
or
out
out
fsubr
fdivs
ss
ret
rcl
mov
in
fdivr
in
faddl
ljmp
fcomip
rcl
rcr
sar
out
cmp
enter
mov
jmp
mov
add
iret
jecxz
rcl
loopne
in
loop
int3
out
mov
shr
out
clc
clc
fnstsw
std
xor
out
ret
aam
call
int
xchg
repz
xor
fsubrp
cmpb
cmc
aaa
ret
shr
fucom
mov
fcmovb
orl
hlt
cs
cld
leave
out
cmp
cmpl
cmp
fnclex
mov
icebp
imul
jmp
int
shlb
addb
xchg
sti
out
in
test
shr
int3
sub
in
jecxz
in
in
cmp
cmp
out
shl
faddl
and
fcomi
mov
repnz
in
int3
stc
cli
sti
xorb
xor
loop
cli
fcomip
xlat
in
int
sar
std
in
aam
aam
cli
hlt
int
cmc
mov
push
xor
add
mov
sub
xor
mov
sub
jmp
sarl
aam
aam
fcmovne
inc
cwtl
sbb
inc
sarb
add
out
ss
sti
iret
rolb
lret
stc
test
test
xor
repnz
sti
cmp
fmul
sar
test
xlat
fucom
in
std
fsubr
xchg
aam
out
cmc
lret
ds
std
cmc
fiaddl
cmc
std
mov
loopne
into
jecxz
loop
icebp
call
fidivrl
in
fdivp
ret
fucomi
ljmp
out
int3
cmp
not
ror
aas
iret
test
inc
loopne
loopne
in
call
out
out
out
in
aam
xor
clc
rcl
or
lds
mov
test
xchg
out
iret
into
in
shl
iret
xor
cmp
cmp
sar
into
jecxz
cmp
sti
iret
int3
jmp
in
int
int3
xor
repz
rcr
hlt
fcomp
clc
test
mov
enter
rolb
mov
lock
rcr
cmp
imul
cmp
sar
rol
clc
aad
mov
fsubrp
in
clc
xor
jecxz
icebp
xor
int
in
repz
fcomi
cmc
aad
faddl
jecxz
ror
in
xor
in
repnz
iret
cmp
fdivr
cmc
ljmp
jecxz
out
sub
call
fxam
ljmp
idivl
not
int3
fdivr
fucomp
lock
lret
cmp
std
repz
jecxz
fcomi
in
jecxz
into
out
in
jmp
loope
das
xor
repz
aaa
loope
lret
jecxz
fiaddl
in
test
int
fucomp
ror
sarl
out
leave
leave
ljmp
sti
fcmovnb
aad
mov
nop
mov
and
mov
sti
cmp
repz
fstp
div
lret
xlat
jecxz
aas
std
in
repz
int
jmp
ljmp
in
in
cmp
sarl
in
aam
ds
enter
lock
xor
shll
xor
fcmovbe
fistpll
loop
in
ret
ret
mov
fst
shl
jmp
cmp
fcmovne
out
into
cmp
icebp
not
test
sar
jecxz
and
int3
xchg
cmc
std
mov
aad
xor
cmp
aad
sti
xor
ds
repnz
in
mov
mov
fsub
sti
in
iret
in
iret
aas
sub
sti
out
idiv
xlat
mul
out
sarl
ret
cmc
cld
xchg
cmc
sti
sti
mov
test
out
into
cmp
int
out
sar
clc
push
aam
les
hlt
fmull
loope
into
iret
xor
int3
int3
neg
hlt
loop
int
in
fst
cmp
std
sti
lret
addl
ljmp
aad
fcomip
ds
repnz
ret
jmp
out
mov
in
jmp
in
enter
repnz
in
sti
out
rolb
into
enter
fucomip
fisubrs
enter
fcomi
sti
fsqrt
sti
push
in
rolb
loope
out
stc
and
xchg
mov
fidivs
sub
fcmovne
jmp
jmp
repz
xchg
int3
lret
test
lock
enter
cmp
lret
cmp
int
aad
cmp
xchg
in
std
out
in
jecxz
into
ss
fsubr
hlt
ffree
xchg
in
std
sti
xchg
lret
xchg
xchg
rcr
leave
iret
cmp
enter
xlat
cmp
in
rcr
lock
fucomip
fcmovnb
cld
ljmp
repnz
clc
out
fcomi
repnz
jmp
cmp
fdivr
ret
fdivrp
addl
mov
jmp
rcl
cmp
rcr
shl
out
fadds
mov
ret
fiadds
aad
in
ror
fsubr
xor
fdivrp
sti
sti
xlat
loop
testl
shr
clc
sti
clc
xor
repz
rcl
clc
out
loop
and
iret
out
nop
in
jmp
sarb
cli
int
cmc
aam
fsubp
xchg
test
cli
in
iret
int
mov
in
in
sarl
out
iret
std
imul
lret
adc
rcr
mov
faddl
out
clc
aam
cs
int
xor
fidivrl
mov
test
mov
test
xchg
mov
cs
sub
loope
icebp
icebp
ss
xchg
leave
cli
orb
push
pop
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xor
xor
xor
or
jmp
int
fcmove
fstp
adc
js
and
jg
scas
add
mov
mov
addl
int3
ss
rcl
les
and
out
ljmp
into
aad
into
repz
lret
ds
cld
cli
aad
test
fiaddl
xchg
roll
icebp
repz
ds
sub
cmp
fdivr
lret
in
loop
mov
imul
cmp
fcmovu
sar
rcl
loope
test
mov
testl
shlb
cmc
cmp
out
stc
aam
ror
les
xchg
hlt
aad
jmp
xchg
test
into
loope
rcl
not
cmp
in
jmp
rcr
test
jecxz
jmp
ficoms
neg
out
out
cmp
repnz
std
aad
mov
cmp
ljmp
xchg
loop
lret
repnz
aad
sarb
lock
lret
xchg
mov
adc
in
imul
aaa
rcr
enter
loop
lock
ret
sti
sti
mov
lret
icebp
lret
in
loope
xchg
out
leave
ljmp
not
shr
testl
test
out
mul
cmp
lret
incl
clc
jecxz
neg
mov
ret
in
repnz
fdivrs
dec
int3
sarb
loopne
cli
faddp
xchg
xchg
lret
jmp
xor
idivl
fnstcw
cli
fcmovbe
fsub
std
icebp
ror
fcmovne
fucomip
mov
xchg
mov
repz
ror
int3
xor
repnz
idiv
cmp
cmp
dec
adcb
cmc
xor
jmp
icebp
hlt
int3
jmp
ds
cli
call
xlat
xchg
leave
repz
out
aaa
lret
jmp
fcom
cmp
jmp
xchg
cmc
shr
loope
into
sti
mov
in
out
mov
jmp
lret
aaa
fucom
cmp
fcmovu
enter
fiadds
out
incb
ret
cmp
rcl
repz
cld
loopne
inc
mov
fcmovne
int3
into
in
out
test
xchg
in
xor
xlat
aad
fdivp
loopne
xlat
loopne
sti
rcl
jecxz
xlat
mov
int3
out
loope
out
shl
xor
imul
cmp
fcmovnbe
aaa
rol
cli
test
lret
decl
hlt
loopne
xchg
in
out
leave
sti
in
enter
out
frndint
sbb
mov
roll
stc
repnz
xor
call
cli
fmuls
xlat
jecxz
test
enter
mov
repz
cmp
ljmp
icebp
loopne
aad
fcmove
sbb
out
ljmp
lret
jmp
iret
cmp
sti
addl
out
loope
movl
out
cmp
repnz
sarl
xlat
repnz
ljmp
jecxz
in
cmc
loopne
aam
in
out
lock
aaa
jmp
jmp
aam
std
ret
out
sti
mov
ljmp
aad
enter
std
cmp
aam
rcl
xchg
jmp
out
decl
iret
in
xlat
sti
repnz
aam
mov
sti
test
icebp
out
rclb
lret
in
cmp
jecxz
rol
jmp
mov
int3
call
jmp
fdivs
rcl
int
jmp
idiv
div
ds
mov
in
dec
leave
call
jecxz
loopne
lret
cld
cmp
shr
repz
aam
loopne
loope
fmull
in
out
in
lret
xor
stc
iret
xor
aas
repz
xor
aad
ret
repnz
leave
lret
jmp
loope
loopne
repnz
leave
sub
cld
iret
xlat
aad
sar
lret
fcmovu
out
out
mov
divb
int
in
div
icebp
lock
ffree
out
clc
aad
ret
mov
loope
aaa
aam
aaa
aam
hlt
loopne,pt
fidivrs
out
into
aas
test
mov
fnstsw
imul
xchg
lock
into
xchg
xor
sub
xor
cmpb
hlt
in
ret
in
enter
call
xchg
jmp
out
in
cmp
int
stc
fldz
rol
enter
cld
cmp
std
int3
xor
into
leave
in
jmp
out
jmp
mov
add
subl
add
addl
imul
jmp
into
aam
enter
fsubl
dec
pop
lret
inc
fcompl
lret
scas
add
icebp
lret
sti
loope
adc
mov
repnz
leave
loopne
loope
cmc
test
aaa
cmp
loope
hlt
ds
loope
call
leave
into
in
out
repz
sub
out
cmp
shl
adc
fstp
out
jecxz
test
in
roll
xor
repz
repz
shl
cmp
fimuls
xchg
sub
test
add
fstp
aam
rcl
aas
incb
stc
in
test
push
lock
loop
in
aam
ss
icebp
jmp
clc
loop
ds
std
aad
fiaddl
fdivr
out
lret
int3
shll
hlt
out
iret
adc
in
cmc
cmp
cmc
fmull
or
int3
leave
into
shl
fsubrp
rcr
not
cmp
aam
xchg
ret
in
shl
fidivs
leave
shll
hlt
das
into
leave
call
repz
cli
cmp
call
xchg
out
cmc
xchg
loope
aam
jmp
fiadds
sti
in
sti
rcr
xchg
std
jmp
sub
jmp
in
loopne
fucomi
shr
iret
call
rcr
loopne
hlt
cld
std
lock
and
xlat
fildl
xchg
aas
lock
int3
xor
in
jmp
cmp
cmp
loope
stc
xchg
jecxz
cli
call
xchg
int
cmc
in
out
cmc
sar
into
fxch
cli
cmp
cmp
rcl
fiadds
cld
xor
out
das
lret
into
fsubr
idivl
ljmp
xor
les
lock
das
cs
xor
aaa
in
stc
into
clc
sub
fnstsw
ds
mov
iret
iret
loope
into
sub
aaa
cmp
leave
enter
cmp
fdiv
mov
leave
loopne
in
aam
icebp
out
ljmp
cmp
std
into
test
fdivr
sti
loope
loopne
sti
loopne
loop
xchg
in
xchg
lock
repz
std
iret
int3
fdivrl
lret
enter
or
xor
nop
clc
ljmp
cmp
cmp
fcmovbe
loop
fmulp
in
into
loope
fldl
repz
icebp
out
ffree
lock
out
lock
enter
lret
iret
test
out
mov
clc
jmp
into
cmp
out
rol
add
xchg
mov
lret
mov
sub
leave
jecxz
in
shr
in
repz
cmp
iret
mov
leave
or
test
mov
into
xor
cmp
int3
into
jmp
leave
rolb
jecxz
flds
loopne
mov
ror
in
fxch
cmp
neg
idivl
into
test
cmp
jmp
roll
out
aaa
neg
rcr
cmp
out
fstp
cmp
xlat
lret
ret
addb
aam
ss
aas
into
dec
repz
fnstcw
cmp
fprem
in
loopne
loop
fcmove
xchg
jecxz
in
fnstenv
in
jmp
in
rolb
ret
stc
orb
lret
ss
aam
fsubr
aaa
fidivrl
int3
repnz
loope
leave
fstp
fxch
into
out
icebp
fmulp
sub
call
xor
loopne
rcl
leave
faddl
orb
ljmp
out
fstp
iret
stc
into
aaa
shl
xchg
mov
in
mov
in
ljmp
ret
std
out
jmp
fdivrl
rol
out
std
mov
loope
sbb
out
std
shl
in
in
int
in
cmp
fdivr
test
xlat
out
std
loope
into
adc
shl
aaa
fidivrl
hlt
leave
aaa
cmp
clc
fdivrl
roll
orl
push
rcl
int
lret
int
out
into
loop
fdiv
loopne
sub
ror
enter
bnd
cmp
aam
int3
int
loop
cmc
roll
sub
into
int
int
lret
clc
call
test
iret
in
out
loop
test
and
in
test
jmp
jmp
in
ret
cmc
call
in
loop
in
int3
fucom
loop
sub
int
xor
fcom
cli
idivb
loop
fcomi
out
or
cli
lret
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
jmp
int3
rol
xlat
fstp
fst
mov
push
add
into
jg
scas
add
xchg
int3
std
int
in
loope
xor
not
cli
cmp
fdivrs
std
ret
in
ljmp
iret
out
aad
aaa
jmp
lret
lret
sarb
in
out
int
out
icebp
aam
in
cmp
int3
ljmp
aam
loopne
aad
in
in
cli
sti
test
orb
repnz
cld
shll
roll
xor
xchg
out
icebp
fnclex
nop
jmp
cli
sti
out
lret
in
lock
fcmovbe
aaa
div
lock
incl
fxam
fcoml
hlt
cmp
repz
cmp
iret
fidivrl
aad
fcmovne
std
fmulp
cld
out
aam
repnz
xor
divb
loope
cmp
fdivrp
ds
xlat
in
fstp
lret
iret
std
int3
ror
cld
ljmp
int3
jmp
ror
idiv
repz
mov
mov
ror
jmp
cmp
leave
lock
in
aas
icebp
loop
lock
jmp
fxch
mov
loop
idiv
out
icebp
xor
aaa
cmp
fdivr
out
in
adc
in
fiadds
pop
int
aam
lock
aad
not
fadds
loopne
jecxz
fmul
loope
shl
hlt
call
int3
fcmovu
roll
leave
aad
cmp
call
repnz
xor
cli
call
shl
jmp
loop
or
loop
xchg
lret
rorl
fadd
clc
leave
ret
in
fcomip
enter
xor
aad
ljmp
fcomip
rcl
shl
das
cmp
call
loope
loopne
int
sub
shl
in
stc
out
nop
in
mov
xchg
xchg
jmp
fsubrp
shlb
fnstsw
ret
out
mov
inc
xchg
xchg
mov
mov
sti
clc
cmc
int3
clc
clc
xor
sar
out
mov
call
cli
int
ror
lret
icebp
call
iret
ffree
cmp
ljmp
mov
ficoms
ljmp
loope
int
aam
in
cmp
mov
mov
shr
shl
or
ror
xor
mov
call
in
xor
vaddsubps
ss
testl
std
mov
in
sti
sti
mov
aam
aad
aad
aam
out
into
std
fistpll
jecxz
cmc
rcl
in
fstp
fsubp
in
icebp
out
loope
xor
xor
fcom
leave
repnz
hlt
cmp
jmp
out
nop
std
call
into
jmp
sar
cmp
sbb
sar
ret
xlat
loope
in
adc
in
mov
xlat
into
int
cmp
aaa
lret
hlt
shl
neg
loop
idiv
fsubr
jmp
enter
call
lret
cmp
in
lock
fucomp
ret
aam
neg
les
clc
in
shl
out
aam
aad
int
lock
jmp
test
cmp
ret
incl
jmp
rol
xlat
in
clc
jmp
rcl
int
out
repnz
xlat
sbb
loopne
lret
rol
ret
out
das
divl
icebp
aad
hlt
fiadds
mov
fucomi
out
repnz
into
test
in
jecxz
cli
fmulp
repz
cmp
loope
aad
xchg
decl
repz
loop
int
cld
rcr
out
rolb
clc
rcl
sti
add
jmp
out
repnz
cmp
cmp
clc
out
fnstsw
sarb
in
not
test
mov
xchg
loopne
icebp
xor
int3
leave
cmc
cmp
xlat
int3
cmp
cli
faddp
std
cmc
out
loopne
sar
lret
mov
loopne
xlat
rcr
into
std
in
repnz
cmp
fucom
fimull
std
in
fcmovu
loop
addl
cmp
clc
shl
rcl
cmc
loope
in
lret
iret
iret
lock
jecxz
out
aaa
xor
xor
sti
flds
faddl
mov
in
cli
mov
out
das
shl
out
cmc
enter
jmp
shl
rcr
mov
in
lret
in
sub
aad
shr
sti
lret
stc
fcomp
adc
ret
add
add
fadd
fcom
fld
pop
into
shll
mov
jg
scas
add
cmp
adc
loope
aam
in
or
mov
in
leave
out
xor
cmp
loopne,pt
mov
fxtract
xchg
jecxz
incl
rol
leave
iret
sti
fstp
cmp
test
ret
mov
mov
xchg
mov
fucomip
ret
cld
clc
cmp
cmp
out
sti
hlt
std
rolb
fdivr
mov
shl
shr
call
rcl
cmp
in
loop
xlat
hlt
cld
ret
test
rolb
out
repnz
stc
fadds
aas
loope
cli
jmp
aad
int3
mov
out
out
repnz
idivl
lret
repz
icebp
lret
add
addb
faddl
aam
in
out
ror
stc
fcomp
cmc
jmp
out
aas
clc
enter
in
fsub
repnz
in
xlat
enter
ljmp
jecxz
aam
sti
jecxz
cli
mov
cli
faddl
lret
ljmp
loopne
icebp
in
aad
mov
fmul
into
out
stc
int
xchg
jecxz
ljmp
fdivp
cmp
hlt
ds
cmp
lret
in
loope
in
iret
lock
ljmp
fstp
call
int
cld
fidivrl
incb
orb
fdivr
out
xor
hlt
cmp
jmp
fisttpl
xchg
in
aad
out
repnz
in
xlat
aad
out
lock
cmp
xlat
orb
fsubr
xor
out
aaa
out
loope
test
loopne
filds
cld
nop
loop
ror
orb
call
hlt
out
shl
xor
clc
cld
lret
jecxz
loope
in
repz
into
shll
fidivrl
std
cli
clc
test
int3
fisttpl
cs
call
iret
hlt
int3
fidivrl
in
decb
clc
xchg
icebp
or
xchg
shl
icebp
loope
int
aad
cmp
aas
shl
call
add
xchg
call
xor
cli
aaa
int3
ror
fdivrp
out
sarl
ret
fadds
fcmovu
or
xchg
repnz
ret
into
in
iret
repnz
aaa
loop,pt
stc
fdivr
jecxz
shr
cld
out
out
ficoms
jecxz
divb
xor
cld
cmp
in
loopne
sti
mov
aam
ljmp
nop
incb
cmp
in
cmp
xlat
cmp
out
not
loop
jecxz
mov
loope
flds
in
int3
ljmp
cmp
ret
jecxz
faddl
loope
out
aam
out
xor
icebp
cli
cmp
lock
aam
roll
lret
cmp
cld
xchg
hlt
out
call
ljmp
fildl
lds
int3
int
xlat
shl
out
int
into
cmp
jecxz
repnz
fst
test
mov
mov
lock
loope
sub
aam
rcr
cmp
in
fsubp
repnz
ds
aam
leave
call
leave
test
loope
sar
enter
cmp
aas
sub
aas
addb
jmp
fcomp
in
xchg
mov
icebp
xor
jmp
enter
cli
cmp
ror
test
cld
cmp
sti
fsub
into
in
test
mov
enter
in
jmp
fdivr
mul
cld
cli
cld
fdiv
loopne
in
fmulp
hlt
loopne
leave
in
ret
rol
divb
xlat
cmpb
lock
out
repnz
fldl
loop
jmp
in
xor
cmp
lock
cmp
fucom
neg
fldl
fisttpll
call
aam
xor
in
out
leave
aad
cmp
testb
lret
xchg
sbb
int
call
out
out
jmp
fst
fcmovnb
rcr
faddl
hlt
xchg
iret
out
sar
call
cmp
aaa
sti
int3
cld
div
lret
fildl
loop
lret
popl
jecxz
sarb
into
cmc
in
fstp
hlt
aam
into
test
repz
xchg
leave
test
leave
addl
aas
in
repnz
into
ss
repnz
ret
loop
fdiv
mov
mov
mov
fsubr
in
xor
jmp
aas
sarl
fcmovnbe
fcmovb
loope
add
fcmovb
or
jle
add
jecxz
cmc
in
out
jmp
fdivrs
lret
sar
aad
shl
xor
mov
jmp
jmp
out
in
lret
cmp
inc
stc
out
repnz
cmc
mov
iret
and
xchg
in
xchg
fsubrp
in
lret
xor
sti
adc
fdivp
aas
hlt
fsubp
fmul
ret
lret
out
stc
and
mov
into
in
cmp
icebp
ret
out
loop
sar
loop
mov
aad
clc
in
icebp
lock
lock
aaa
jmp
into
out
addl
clc
call
in
nop
loop
lret
lock
inc
jecxz
in
jecxz
aad
cli
addb
incl
rcl
jmp
out
shl
loope
cmp
and
mov
loope
int3
or
loop
ror
in
ss
fcmovnu
cli
in
aad
mul
xor
sti
xchg
lea
xchg
xchg
ljmp
out
cmp
aas
out
ret
in
iret
into
jmp
sti
in
repz
xor
rcr
out
fdiv
ljmp
fyl2x
repz
ljmp
nop
xchg
mov
icebp
jecxz
call
xlat
fcomp
xchg
into
loope
jmp
mov
xor
fyl2x
imull
sar
out
loopne
repz
ret
xchg
loop
xchg
in
xchg
xchg
not
leave
cmc
lret
xor
aam
clc
cli
std
rcr
shr
loopne
loopne
out
icebp
out
shl
ror
hlt
in
into
out
int
std
adc
jmp
mov
cli
ficoml
in
jecxz
xor
shl
fsub
fstp
ror
mov
shl
in
les
in
int3
cli
cli
int3
idivb
in
clc
cld
in
hlt
adc
loope
jmp
in
hlt
jmp
in
iret
loope
in
out
test
stc
cld
xchg
mov
fimuls
xor
xor
lret
cmp
cld
cmp
rcl
xchg
cld
out
int3
xor
cmp
into
int
cmp
rcl
jmp
call
sti
lea
lds
loope
loop
repnz
jecxz
jecxz
loope
icebp
icebp
ror
aad
leave
xor
xlat
in
xor
idivb
stc
shl
out
in
out
fdivr
in
shl
mov
in
cli
xlat
shlb
cmp
cmp
xor
fiaddl
mov
fsubp
into
std
out
xlat
aam
stc
jmp
cmp
in
shl
ret
fcomp
xlat
leave
or
fdivr
std
into
in
jmp
loope
test
icebp
jmp
in
rol
shl
vpsubb
lock
and
sar
fstpt
leave
in
icebp
fiadds
cld
and
sub
clc
jmp
std
hlt
loopne
sarb
rol
cmc
rolb
loope
ret
cmp
rcr
in
enter
add
adc
shlb
aam
sti
ljmp
into
stc
fld
ffreep
in
xchg
and
loopne
jmp
cmc
repnz
cmc
iret
out
shl
loope
mov
in
ljmp
in
fisttpll
jmp
int3
cli
rcr
std
repnz
repz
aas
faddp
call
in
xchg
xchg
ljmp
shlb
xor
loope
out
out
cli
cld
loopne
out
in
mov
fsubr
xor
loop
in
fucomip
jecxz
rcl
in
cli
fadd
mov
leave
shr
mov
xor
int3
shll
cmp
aas
add
cmpl
lret
xlat
out
test
mov
lret
xchg
iret
mov
xor
icebp
fldl2t
xor
loopne
icebp
loop
loope
mov
test
rclb
cmp
ss
ljmp
in
fstpt
div
cmc
jmp
out
into
lret
xchg
rolb
out
repz
fiaddl
out
enter
loop
clc
cli
int
xchg
xor
clc
loop
sub
push
in
shl
icebp
cli
call
test
clc
lock
shl
in
into
das
xor
aam
out
xor
cli
div
ret
rcl
jecxz
ror
test
leave
in
fmull
jecxz
repnz
sub
fdiv
into
fsubr
fdivrl
cmp
add
add
imul
jmp
into
aas
ror
rcl
sarl
xchg
lods
mov
insb
fdivrl
scas
add
sbb
in
out
sbb
iret
loope
mov
sar
icebp
aam
std
call
fdivr
cld
iret
fucom
aad
in
loop
ret
sub
rcr
rcr
fsubr
icebp
or
fsub
loope
test
fsubrp
leave
in
loopne
jmp
into
icebp
cli
call
xlat
cmc
mul
cmp
ret
std
test
fdivrp
addl
divb
shl
in
or
sti
fsubp
rcr
add
fcmovnu
in
stc
jmp
xor
fidivl
std
in
cli
out
ljmp
fucompp
out
mov
lock
mov
imul
iret
jmp
idivb
aad
fiadds
mov
fdivr
test
lret
shl
hlt
aas
jecxz
repz
cmp
aaa
stc
in
into
cmp
icebp
shl
div
stc
div
sub
int
xchg
cmc
cs
out
imul
loope
loope
rorb
int
out
int
out
lret
jmp
out
ret
call
shr
in
cmp
loope
xlat
ljmp
cli
icebp
xchg
fcmovnbe
ljmp
cmp
cmp
fst
fdivr
out
rcr
test
ljmp
mov
jecxz
aaa
icebp
out
fcom
das
stc
iret
lret
and
ret
xchg
in
loop
jmp
sub
hlt
ret
call
leave
cmp
xlat
add
cmp
in
mov
out
loop
das
loopne
cmp
out
in
movl
addl
loope
sub
leave
xor
in
cmp
stc
clc
lret
aad
in
jmp
in
stc
in
in
or
repz
xor
mul
call
hlt
and
imul
jecxz
jmp
repnz
test
cmp
fadds
in
in
iret
into
call
aad
not
aaa
aaa
in
lret
cmp
aad
cmp
mov
clc
int
cli
xchg
and
cmp
in
cli
fadds
test
ret
in
fldpi
in
jecxz
jmp
aam
lret
rcl
call
repnz
out
fcomi
ljmp
in
in
incl
aaa
stc
cmp
ljmp
test
in
fldl
ljmp
shr
leave
ss
xor
jmp
cmp
enter
xlat
fimuls
in
in
ljmp
cli
std
cmp
cli
fcomi
rcl
flds
orb
test
leave
out
jmp
std
out
loope
sti
loop
leave
clc
or
cli
mov
mov
cmp
cmp
fucomi
lret
ss
out
faddp
vaesenc
fcmovne
in
xor
aad
cli
call
ret
ds
jecxz
out
dec
fmulp
loopne
shl
sub
test
icebp
fsincos
ss
hlt
into
jecxz
ds
shl
out
in
enter
mov
aad
ret
repnz
iret
out
jmp
cmc
cli
xor
fst
out
jecxz
mov
repz
loopne
fcmove
aad
out
int
sti
stc
shl
neg
add
jmp
ror
fst
out
ret
xor
out
cmp
fcom
inc
repz
lret
mov
nop
ss
cmp
clc
std
into
cmp
int
rcl
fcomp
jmp
fcomp
in
ljmp
lret
mul
icebp
fcomi
dec
aad
cmp
repz
faddl
loop
jmp
lock
call
ljmp
xlat
repz
loope
inc
ljmp
rcr
int3
int
lock
enter
jmp
fidivrl
cmp
loop
incl
out
in
mov
rcl
xor
in
idiv
fldl2t
in
fabs
stc
test
sti
lret
clc
jecxz
loopne
lret
call
int3
cs
call
adc
stc
out
loopne
fcom
in
int
xchg
lret
lock
incb
icebp
les
fcmove
cmc
cli
sbb
repnz
jmp
mov
xlat
mov
mov
int
into
call
ror
in
aad
lock
cld
leave
jecxz
ret
loopne
jmp
jmp
loop
jne
jmp
rcl
aad
aad
shll
imul
jle
in
in
in
stc
aad
cmp
clc
loope
icebp
out
shr
clc
ret
filds
mov
sti
ljmp
xor
aas
out
add
call
rol
jecxz
in
fucomp
call
jecxz
and
xlat
repz
in
inc
fdivp
clc
xchg
xchg
out
call
incl
ret
fdiv
faddl
fdiv
loopne
leave
xlat
jmp
sbb
stc
leave
repz
enter
sar
rorb
mov
test
out
xchg
out
mov
leave
das
xor
aad
cld
stc
loope
cli
xchg
jecxz
int3
add
std
rolb
xlat
in
sar
shl
xlat
add
xchg
enter
fsubp
mov
rcl
xchg
hlt
xor
div
cmp
lock
test
test
cld
loopne
fldl2e
in
cli
xchg
mov
in
sti
cmp
out
into
aad
test
out
fdivr
repz
mov
call
fdivp
adcb
call
rol
aad
aas
xlat
clc
ffree
ror
out
and
ljmp
xlat
sub
fnstsw
ljmp
ret
cmc
in
leave
fstp
sub
out
test
ret
xabort
shr
cld
rcl
fxtract
repz
icebp
in
lret
fdivr
frndint
mov
decb
rcr
in
stc
int
lret
sti
aam
test
bnd
cli
orb
xor
stc
clc
ss
fnstcw
repz
test
cmp
enter
in
out
xchg
loope
fcmove
lret
bnd
int
fiaddl
mov
out
aam
in
clc
in
mul
lret
ss
lret
loopne
fnsetpm(287
roll
fsub
incb
mov
ss
aam
repz
icebp
loope
fcmovu
cli
out
cld
orl
xor
lret
cmp
xor
std
sar
fsubrp
idiv
fadds
in
adcl
aaa
cli
shr
in
loopne
test
cmp
out
std
orl
mov
cmp
hlt
rcr
hlt
sarl
in
fstpt
mul
ret
jecxz
addb
xchg
lret
jecxz
repnz
not
rcr
in
incb
jmp
neg
call
cmp
ds
ffree
test
fsubr
fldl
xchg
divl
aad
lock
repnz
shl
enter
stc
cmp
fdiv
neg
loope
cmp
in
sbb
xchg
xchg
out
leave
in
clc
lds
ret
neg
sar
aam
sub
jecxz
in
fcmove
cmc
xchg
xor
jmp
shlb
leave
loopne
in
out
jecxz
fst
clc
out
loope
mov
fucomip
in
ror
cs
fyl2x
dec
in
sar
shr
out
cmc
stc
in
loopne
mov
nop
ljmp
aaa
aaa
idiv
cmp
test
xlat
std
mov
fst
into
jecxz
iret
and
loopne
hlt
das
ret
in
jmp
stc
hlt
stc
loopne
div
fsqrt
repz
lds
shl
out
stc
cmp
ljmp
fisttpl
mov
mov
out
cmc
ret
ret
in
fdivp
cli
jmp
ror
call
mov
xchg
int
std
in
jmp
out
hlt
into
jmp
shr
aad
fisttpl
loopne
jecxz
xchg
call
xor
fcmovnbe
fsubrp
cmp
test
test
sar
jmp
lock
out
xchg
test
ret
ss
cmp
out
roll
shl
sub
jecxz
call
int
div
aad
cmp
loop
fcomip
cld
mov
int3
cld
enter
mov
div
idiv
sti
hlt
std
xor
stc
in
shl
ret
xchg
testl
iret
in
fadd
iret
xor
out
shl
iret
jmp
cmc
hlt
shl
xchg
jmp
xchg
orl
cld
sti
into
out
cmp
std
fdivrl
ret
stc
jecxz
enter
sub
icebp
or
iret
cmc
ret
lret
cmp
cmp
cmp
sarb
lock
je
xor
add
mov
imul
add
jmp
int3
rol
aad
aad
fpatan
int3
and
xor
xorl
jle
out
xlat
enter
enter
lock
mov
xor
jmp
out
fnsave
fistpll
in
out
cmp
loope
and
test
hlt
fmul
lret
xor
rcr
hlt
sti
div
mov
cli
xchg
aam
aad
ror
ljmp
jecxz
cld
lock
addb
iret
jecxz
ret
xlat
fstpt
xor
rcl
loope
test
lret
sti
lock
ror
sbb
loop
xor
out
in
icebp
jmp
sar
adc
jecxz
call
jecxz
stc
xchg
cld
aam
out
icebp
out
mul
in
int3
ds
loop
aas
aas
aas
std
inc
xchg
iret
xchg
out
incl
cmp
repz
cmp
not
cmc
cli
test
aas
enter
int
loope
out
icebp
mov
div
loope
jmp
lock
fst
aad
xchg
ljmp
std
shr
sbb
in
stc
repz
out
aad
repz
int
cmc
loopne
out
lds
into
shl
xchg
hlt
xlat
xlat
cmp
shrl
fnstsw
fdivrs
repz
sarl
cmp
fxtract
mov
in
call
aam
xchg
aad
lret
xor
bnd
rcl
rcl
in
mov
repnz
iret
in
leave
ljmp
jmp
stc
in
in
test
xchg
out
loopne
out
nop
icebp
xchg
ret
aaa
shll
iret
clc
shl
fdivp
cmpl
addb
cld
notb
in
xor
shr
jecxz
cmc
into
cli
clc
xchg
addb
jmp
xor
icebp
out
cmp
lock
ljmp
add
jecxz
loope
test
leave
mov
jmp
cli
icebp
bnd
test
test
out
test
jmp
xchg
aad
jecxz
sar
enter
ljmp
in
cmp
jmp
xlat
xchg
in
fsubr
iret
in
xchg
das
in
out
cmp
fdiv
fcmovu
cmpl
sti
loop
incb
fcmovne
mov
not
fsub
rcl
fnstsw
repnz
clc
iret
int
roll
fmul
xlat
mov
out
out
aam
repz
out
jmp
loop
cmc
add
or
in
in
cld
hlt
rcr
aam
xor
xor
into
fdivp
not
hlt
cmc
cmp
fnstsw
icebp
ffree
rcr
into
or
xchg
into
out
stc
aaa
jmp
cmc
aas
sar
fsubr
std
ds
cli
lret
out
std
cld
shr
xchg
rcr
enter
clc
xor
repnz
roll
int3
lea
fdivp
xlat
jmp
lock
repnz
cmp
aas
out
cmp
enter
into
ljmp
in
sub
rcl
ljmp
fimull
faddl
shr
lret
enter
icebp
repz
in
repz
loope
loope
xlat
test
not
loope
lret
enter
hlt
fcmove
lret
fcmovu
out
leave
in
mov
adc
loopne
enter
jmp
lret
sar
aas
loope
leave
fdivr
mov
xchg
call
cs
xlat
lret
cmp
call
lret
iret
out
into
xchg
test
sub
xor
jmp
cmp
icebp
sbb
mov
ror
jmp
out
in
mov
loopne
std
add
sub
sti
divl
into
aad
out
loopne
out
out
aam
decl
out
mov
cmp
rol
in
cmp
cli
fcmovne
ret
mov
ror
loop
xchg
into
xchg
mov
jmp
cs
fsub
repnz
cmp
aad
out
aam
mov
xchg
fdivrp
test
repz
out
xor
stc
call
cli
cmp
aam
lds
xchg
in
das
lret
rcl
ljmp
out
clc
ret
mov
cli
sti
loop
out
mov
xlat
jecxz
clc
clc
cld
shl
repz
iret
cli
sarb
cli
test
nop
out
ficoms
shr
call
idivb
sar
iret
cli
and
xlat
lock
inc
or
inc
or
leave
ret
push
mov
push
push
mov
mov
mov
jmp
into
rol
fcomp
fcomps
push
and
jg
jg
or
jle
xor
ss
clc
out
ffree
hlt
fadd
aas
enter
decl
shl
cmc
xchg
imul
out
int
fxtract
jecxz
test
fiadds
in
leave
jmp
stc
hlt
xchg
in
rcl
loopne
call
ss
rcr
repz
cmc
xlat
loopne
mov
xchg
aad
repz
fdivp
cli
cld
clc
cmp
fadds
mov
std
in
xchg
shr
ret
std
shlb
in
fdivr
cmp
out
xlat
fimull
fcomip
out
out
xor
in
inc
shr
inc
not
repz
out
std
test
fisttpll
ss
hlt
out
cmp
lret
sarl
ss
lock
fsubrp
loopne
aam
test
mov
out
and
xor
loope
in
cmc
out
in
cmp
ror
loop
repnz
jmp
hlt
mov
into
nop
xchg
rol
aad
fcom
out
shr
cmp
cmc
cmpb
sub
loop
rcr
out
fucomip
mov
sub
xor
hlt
out
fldz
repnz
into
aas
loope
loopne
cmp
in
ljmp
in
enter
xor
in
cmp
aad
ds
loop
enter
clc
xchg
out
int3
enter
fmulp
aaa
out
test
cli
ret
rorl
call
and
shl
repz
int3
rcr
call
std
hlt
icebp
neg
xchg
cld
lea
mov
cmp
ljmp
cld
out
stc
in
loopne
fdivr
test
jmp
neg
cmp
cmp
ljmp
cmp
in
stc
fcmovbe
xchg
cld
lock
in
shl
out
in
clc
fcomip
idivl
cli
xlat
shl
loope
xchg
cld
cld
mov
nop
fidivs
fxch
call
aas
aaa
clc
ds
out
icebp
rolb
ds
lret
out
movb
int
jmp
int3
idiv
ret
incb
ljmp
mov
out
out
lret
stc
stc
xor
fscale
aam
in
cmp
shr
mov
int
fucomp
out
shr
das
leave
clc
shlb
enter
cmp
out
cmp
in
and
out
jmp
out
mov
xchg
stc
hlt
aam
cmp
aad
ds
sti
repz
loop
icebp
repz
and
jecxz
loop
test
fdivp
shr
cli
jmp
cmp
lret
std
in
test
call
in
fisttps
enter
ror
icebp
bnd
xlat
sbb
int
std
cli
in
in
out
fists
jmp
fcomip
fiadds
out
cld
in
mov
mov
out
out
cs
rcl
clc
xor
int3
shr
stc
test
sti
shr
add
jmp
loopne
int
xchg
loopne
loope
sub
leave
idivb
cmc
aam
xchg
fidivrs
jecxz
cmp
nop
loop
in
in
in
lret
xor
cmp
lock
repnz
repnz
ftst
out
mov
xchg
xor
stc
cli
aaa
std
into
in
lret
stc
int
cmp
loop
cld
test
fmull
fdivrs
out
in
cmp
idivb
hlt
idiv
ror
mov
stc
sbb
cli
icebp
jecxz
mov
ljmp
hlt
sti
cmp
div
shl
repz
lea
in
or
call
fcomip
int
rcl
rcr
cmp
mov
jmp
icebp
dec
bnd
out
lret
cmp
test
std
aam
cmp
mul
dec
fiadds
in
int3
lret
ss
loopne
mov
movl
movl
jmp
rcl
rcr
fstp
aam
cmp
lods
mov
out
jg
or
jle
aas
hlt
in
loope
shr
rorl
leave
mov
xchg
int3
aas
loope
into
lock
lret
cmp
fcmovbe
loop
fadd
mov
call
mov
loop
shl
ret
lret
sarb
dec
cmp
ret
ffree
shl
leave
ljmp
int
shl
loope
not
jmp
fdivrs
in
fidivrs
jecxz
loopne
stc
xlat
aam
fcmove
jmp
loopne
out
idiv
out
int
das
sti
in
into
test
std
xlat
sbb
lret
fsubr
mov
rorl
ljmp
int
shl
call
std
call
test
shl
incl
out
cld
idivb
sti
cmc
cmp
repnz
shl
jmp
out
xor
xor
repz
rol
xlat
cli
in
clc
hlt
xchg
test
int3
xchg
int3
das
leave
in
xor
fpatan
fcmovnu
cmp
repnz
ret
loop
dec
loopne
sub
icebp
mul
hlt
jmp
cmp
cmp
vcmpss
lret
fmulp
xchg
aam
cmp
fcmovnb
cmc
cmpb
ds
mov
shl
fcmove
jecxz
xchg
out
out
out
test
ss
iret
cld
das
xor
call
xchg
test
lret
mov
lret
hlt
aam
fdivr
aaa
call
rcl
sbb
fst
repnz
mul
mov
iret
orl
xor
cmp
repz
xor
mov
loopne
xchg
jmp
fidivrl
std
cmp
cli
cli
aam
xlat
fcmovu
sub
lock
mul
shl
iret
icebp
leave
clc
stc
fsub
cmp
clc
les
loop
mov
loop
aam
out
xor
stc
cld
lret
int3
shlb
out
aam
hlt
xlat
loope
fcomp
loop
xchg
out
into
int
stc
out
int
std
stc
std
cli
cmp
aam
roll
xchg
iret
lret
repz
cs
lds
xor
jecxz
lock
testl
ljmp
sub
cmp
jmp
cmp
cmpb
rolb
in
mov
jmp
nop
nop
xchg
xchg
iret
iret
call
lret
out
lret
ds
loopne
fsubrp
fcomi
lret
in
flds
les
aam
into
cmp
fsubp
int
fcmovb
loop
loop
lret
cli
cld
mov
sti
in
into
rcl
stc
repz
fst
out
aam
ret
icebp
repz
leave
fdivr
mov
call
xchg
xor
jecxz
xor
fmul
cmp
stc
out
not
in
neg
test
sub
xchg
mov
into
in
lret
out
sti
shl
enter
hlt
imul
addl
in
filds
sub
cmp
not
sti
xor
in
fdivp
fdiv
mov
mov
out
fcomip
cmc
out
xlat
jmp
aaa
ds
ret
aas
flds
loop
shr
fstl
out
out
xor
xor
icebp
out
add
jmp
addb
iret
ret
repz
aam
shl
ds
filds
clc
xrelease
enter
iret
shll
div
jmp
repz
rcr
sar
filds
fsub
lret
jecxz
repz
out
jmp
std
out
cmp
sti
repz
fadd
inc
rol
in
adc
mov
shl
ljmp
in
repz
sti
fdivrs
icebp
add
movb
iret
loope
xlat
enter
aam
out
sbb
test
in
fcomp
mul
cmp
movl
jne
subl
mov
add
mov
xorl
xor
add
jmp
sarl
ret
ffree
in
jns
pusha
add
sbb
adc
add
fucomip
incl
shr
loop
cmp
lret
repz
iret
fmul
div
not
xlat
clc
aad
jmp
lea
out
inc
in
lret
stc
jmp
cmp
cmp
aam
vpsubusb
jmp
cmp
loope
iret
leave
fmul
lret
into
out
cmp
into
aam
rcl
mov
fdiv
and
jmp
loop
xor
repnz
cmp
cmp
icebp
aam
fsubp
test
clc
jmp
mov
enter
shl
out
out
ljmp
int
cmc
icebp
clc
out
vcvttpd2dq
orl
cmp
xlat
aad
cmc
sti
cmp
shl
int3
aam
fcmovnbe
xchg
int3
jmp
test
aam
ret
jmp
xor
in
aam
aam
rcl
rcr
fcmovnb
lret
loopne
sub
loope
mov
test
fcmove
xlat
rol
test
rcl
shl
call
fdivr
in
sar
hlt
test
xor
rcr
loop,pt
aam
aam
in
call
fildl
in
aaa
xlat
cmp
into
or
idivb
cmp
xor
fdiv
leave
orb
xor
in
aaa
leave
cmp
rcl
loope
clc
shlb
aas
fld
out
cli
test
int
fdiv
repnz
jecxz
in
lret
ss
cmp
loopne
cmc
not
iret
fadd
std
fadd
test
jmp
mov
xor
cmp
xlat
in
cld
lock
rcl
aad
call
jecxz
sti
fucomp
jmp
aaa
xor
cmp
lret
out
testl
bnd
mov
std
leave
sbb
aas
xor
shl
in
cmp
cmp
idivb
out
aas
faddl
aad
mov
repnz
aaa
xor
loop
div
sarb
into
int3
aam
repz
test
fadds
std
mov
das
repz
cli
rcl
cmc
into
loop
repnz
adc
out
mov
xchg
jmp
iret
lret
repz
into
iret
xor
aam
lock
shl
out
mov
fmul
addb
out
out
shr
cmp
rol
repz
out
in
icebp
fadd
cmc
loop
ret
mov
lret
repnz
sub
fucomi
int3
loop
cmp
rol
loope
fdivr
in
mov
addb
out
clc
ljmp
sti
stc
xlat
icebp
out
cld
stc
ror
cmp
test
cmc
sub
in
idiv
jmp
fadd
and
decl
mov
loopne
xor
in
aam
lock
clc
testl
leave
cli
mov
xor
int3
aad
in
idiv
aad
cmp
shr
ljmp
lret
jecxz
ss
out
clc
clc
iret
ror
cmp
cmp
loop
in
out
cld
out
loop
aaa
ljmp
loope
into
shr
loope
cmp
out
xchg
xchg
repnz
ss
xor
out
std
fadd
icebp
call
jecxz
out
out
xchg
hlt
jmp
lret
cmc
repz
repz
incl
mov
in
out
mov
cli
and
int3
xchg
test
lock
or
repz
ret
test
xchg
out
nop
in
rcr
std
ljmp
out
icebp
std
in
neg
jecxz
fadds
aad
out
mov
mov
fucom
iret
in
in
hlt
out
cmpl
rcr
cld
mov
ret
lock
loop
cld
repnz
loope
loop
repnz
int3
aad
clc
cmp
call
aad
aam
ljmp
mov
std
out
xor
add
add
bound
add
adc
jmp
rcl
aad
rcrl
in
addr16
jg
or
jle
rol
sti
in
into
imul
lock
fcomi
loop
mov
mov
mov
leave
into
jmp
ljmp
fdiv
testb
ljmp
in
out
xor
ffree
rcr
fxch
pushl
stc
loope
or
cld
mov
stc
int3
in
loopne
mul
rcl
ss
cmp
test
call
call
int
xchg
mov
sub
rcl
cmp
cmpl
in
loop
mov
ffree
stc
and
xchg
ror
sub
lret
cmp
hlt
stc
loopne
repnz
cmp
ds
sti
enter
stc
fmul
shl
and
out
xor
cmp
fnstsw
cld
icebp
ret
out
rcr
call
stc
xchg
loope
repnz
int
xlat
in
ljmp
repz
mov
fdiv
mov
fstp
xchg
lret
out
test
xor
fmul
int
fdivr
rcr
cli
rol
movb
xchg
ror
sarb
jmp
call
shr
in
aas
aas
xchg
ret
out
cli
lock
bnd
jmp
jmp
int3
cmp
out
icebp
cmc
xlat
xchg
in
nop
cmp
stc
aaa
jecxz
enter
iret
idivl
testl
fadd
stc
std
fstp
cld
std
rol
ss
ss
fnstcw
fcmovu
lock
ret
in
xchg
cld
int3
iret
fdivr
in
cmp
xor
idivl
cld
out
in
loopne
in
fmul
flds
hlt
xor
sub
in
lret
shr
shl
clc
rol
repnz
cmpl
xchg
lea
cmp
cmp
in
cmp
loope
fcomp
out
std
in
fucom
jmp
lret
xchg
xchg
shl
jecxz
int
call
ss
shl
cli
fsubp
repnz
lds
repz
lret
fists
out
cld
iret
aad
cmp
cmp
std
cmc
cmc
ffree
aas
std
loopne
test
in
xor
loope
fdivr
fst
in
cld
mov
mov
out
jmp
decl
loopne
jecxz
into
clc
lret
ss
fabs
shl
cli
aad
int3
leave
imul
adcb
in
icebp
rcr
das
sar
sbb
test
aam
in
lea
dec
xor
rol
ds
cmp
lock
cli
cmp
ljmp
in
enter
cmp
out
call
out
sti
in
call
out
test
cmc
int3
aam
cmp
cmc
rcl
out
int3
dec
fidivrs
loope
adc
fdivr
mov
into
cld
out
or
lock
cmp
cmp
rolb
fucomip
xlat
in
xchg
int
out
mov
shl
aaa
xor
std
repz
ds
rcl
shl
mov
in
fiadds
loope
loopne
xor
shr
loopne
ds
hlt
cmp
aam
lret
call
std
mov
les
cmp
int
xor
test
loop
call
testl
cmc
ljmp
fcmovnbe
aad
cmc
cli
cli
mov
fmuls
sbb
cmc
imulb
leave
call
in
std
in
test
shl
aam
fld
flds
hlt
out
xchg
jmp
iret
xor
cli
fstpt
mov
filds
in
shr
shll
aam
cmp
lock
inc
icebp
stc
fdivr
cmc
xlat
jmp
mov
clc
fsub
xchg
repnz
fidivrl
fsubrp
ss
fisttpl
rolb
fldcw
add
rol
add
sbb
add
add
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
subl
jmp
leave
xlat
rcr
mov
cwtl
push
cld
or
jle
add
cmp
cld
fadds
enter
decl
sub
xor
xor
aad
lret
loopne
cld
call
test
mov
loopne
enter
std
fucomip
mov
lock
cmp
lret
loop
fidivrs
add
rol
rol
fisttpl
in
cs
enter
out
lret
int3
out
repnz
shl
ret
out
xchg
enter
loope
xor
repz
iret
int
iret
icebp
std
xor
ret
leave
mov
jmp
cld
int3
call
in
clc
repz
cmp
mov
ret
clc
out
jmp
int
jmp
aas
loop
mov
xchg
test
orl
repz
fadds
rol
repnz
xchg
int3
in
lds
clc
aad
in
into
fcomp
not
repz
test
repnz
fxtract
in
jmp
ffreep
leave
jecxz
rcr
shl
jmp
loopne
into
fdiv
xor
rcl
cmp
mov
lret
loop
leave
lock
fnstcw
sti
enter
loopne
jmp
repnz
enter
in
cli
call
leave
loop
sar
sti
fxch
cmc
cmp
rol
xchg
xchg
mov
loope
call
xchg
into
loop
idiv
int3
cmp
aas
aas
sti
in
iret
loope
dec
sbb
lret
mov
jecxz
sti
iret
mov
xor
repz
fxch
lret
xor
rcl
cmp
add
lret
ljmp
xchg
mov
ljmp
fadd
jmp
sti
rcl
cmp
stc
les
mov
lret
iret
fmul
or
fcmovnu
mul
iret
call
cmc
jecxz
enter
fisttpl
clc
ss
call
aam
sti
cld
cmp
xchg
loope
sti
iret
mov
call
clc
in
lret
clc
aam
std
cmp
fcmovbe
fcmovu
rol
ffreep
sub
jmp
jmp
clc
cmp
std
cmp
fucomp
sarb
std
sub
mov
hlt
test
enter
jecxz
loopne
cmc
cmc
out
cli
fcom
int3
std
cmc
out
clc
out
test
and
fcmovu
xchg
in
repnz
xor
iret
repz
into
jmp
std
neg
adc
lret
int
jecxz
xchg
jmp
test
jmp
in
std
sti
cmp
iret
loop
cmp
aam
fdiv
xlat
clc
leave
test
ror
out
xor
in
xor
rcl
cmc
test
rcl
cld
roll
mov
stc
fstl
repz
ret
in
enter
cmp
test
ds
hlt
jmp
mov
leave
in
cld
fsubrp
loopne
xchg
lock
in
cmp
out
rcl
cmp
in
aas
hlt
jmp
clc
mov
lock
rcll
in
xbegin
ret
ret
sar
repnz
loope
fucomi
movl
jmp
out
call
fucom
loop
out
in
in
jmp
clc
icebp
sti
mov
xchg
cld
xor
fmulp
cmpb
addl
out
in
cmp
in
repz
xor
sti
iret
out
lret
cmp
aad
stc
testb
ljmp
enter
cmp
repnz
int
clc
call
rol
repz
shrl
int3
int3
sub
jmp
cli
clc
stc
cmp
or
loop
incl
sarl
lock
lret
hlt
out
cli
loope
in
fdivp
sti
testb
jmp
out
ret
shl
jmp
ss
fsub
in
nop
in
bnd
mov
lock
cmp
jmp
lock
fidivrs
aad
fld
ljmp
fucom
aam
xor
fadd
jmp
cmp
cli
loop
add
loope
jecxz
loope
repz
iret
xchg
cmc
movl
movl
mov
sub
jmp
mov
fstp
enter
imul
or
roll
jle
icebp
out
icebp
int
rcr
leave
loopne
aam
loop
icebp
loope
test
fcmovbe
ljmp
mov
subl
aaa
cli
fcmovnu
sarb
ror
cld
in
fsubr
repnz
rol
hlt
leave
out
shr
int
jecxz
fldl
mov
jmp
xchg
cli
jecxz
jmp
rcr
cli
fdiv
xchg
aam
ljmp
loop
test
ljmp
hlt
aad
out
adc
sbb
sub
sti
loop
jmp
out
enter
fnstsw
stc
aam
sar
fisttpl
test
test
rcl
out
shr
out
repz
ds
int
repz
fidivrl
in
nop
out
nop
cs
icebp
in
repnz
aam
aam
shl
filds
stc
nop
in
fiadds
enter
call
repnz
icebp
xchg
ljmp
out
mov
jmp
imul
xor
aad
cmp
int
cli
icebp
int
ret
cmp
in
jecxz
sub
cld
xchg
hlt
cs
aad
jmp
ss
cmp
testb
ret
mov
mov
lret
mov
hlt
sti
call
lds
mov
stc
out
mov
std
shl
in
jmp
cmc
div
cmp
repz
cmc
ret
in
aam
jmp
testl
aad
sub
clc
out
out
cld
aam
cld
cmp
mov
cli
les
test
out
mov
in
shll
call
leave
sarb
call
in
repnz
clc
jmp
mov
xchg
test
sub
cli
xlat
xor
cmp
cli
shl
loope
stc
in
fdivr
lret
mov
in
shl
out
loopne
iret
fcmovu
in
stc
rcr
mov
out
lea
into
int
test
repz
lret
cmp
cmp
fsub
mov
cli
out
in
hlt
rcl
ret
aad
cmp
out
stc
sti
cmp
ds
div
cmpb
idiv
std
nop
call
mov
into
fcmovnu
in
dec
int
out
aam
clc
push
fadds
call
fsubrp
aad
in
in
into
clc
inc
fcmovbe
jecxz
cmpb
mov
mov
std
lret
in
hlt
loop
into
rcl
in
aad
aam
into
repnz
cmp
loope
mov
out
loop
shl
iret
rcl
int3
stc
xor
xor
jmp
neg
out
or
repnz
cli
sti
cld
lret
sti
cmp
rcl
fsub
fld1
ret
jmp
mov
ror
in
shlb
lock
enter
clc
repnz
int
aas
ret
cmp
test
adcl
cmp
aas
dec
sar
aad
cli
shl
cli
ljmp
test
into
ret
int
xor
xor
idivb
rcl
neg
fdiv
mov
aad
xchg
test
enter
call
test
iret
out
sbb
std
cmp
cmp
stc
testl
sub
xor
in
jmp
lock
in
std
aas
cmp
loope
xlat
clc
std
testb
rcl
das
cmp
cmp
aam
out
in
shl
out
orl
decl
hlt
repnz
lret
lret
std
fistpll
into
in
cld
rcl
enter
out
adcb
ss
sti
cmp
fdivrp
clc
iret
cli
mov
test
xchg
iret
loopne
xor
jmp
rcl
cmp
lret
sti
testl
iret
test
mov
xor
lret
ss
fidivrs
cmp
clc
cli
sti
cmc
ret
int3
clc
enter
mov
int
int
cmp
cmp
aas
cmp
aam
cmp
inc
cld
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
inc
jmp
lret
aas
fst
fcmove
fidivrs
mov
push
cmpl
add
clc
mov
mov
call
repz
in
jmp
hlt
rcr
cmp
rol
loope
jecxz
popl
loope
int3
enter
cmc
in
sub
cmp
aam
ljmp
xchg
repz
stc
aaa
in
int3
cmp
rcl
aam
loope
mov
jmp
call
loop
xor
in
lret
fcmovu
repz
lock
out
xlat
in
fsubr
lret
enter
mov
loope
out
clc
in
in
xor
lock
cli
sbb
cmp
cli
in
cld
xchg
in
vpaddsw
add
xlat
loope
cli
sbb
jecxz
in
xchg
cs
repz
fidivrs
fsubrp
loope
xor
ret
jmp
rol
fildl
ret
int3
xlat
cmc
cs
lock
cmp
add
ds
hlt
sti
test
dec
hlt
mov
in
sar
cmc
repnz
icebp
fcomi
addb
cld
lea
xchg
mov
xor
in
xlat
aam
iret
fdiv
faddl
fcom
fmull
repnz
jecxz
into
hlt
ljmp
in
hlt
icebp
hlt
ljmp
enter
decb
into
xor
div
shl
stc
iret
rol
loop
mov
sub
mov
xor
int
rcr
fiadds
call
fsubp
sar
loopne
mov
shl
rol
out
aam
icebp
std
in
aas
in
repnz
cld
out
cli
cmp
mov
test
cli
fsub
sarb
shl
int
in
test
in
shl
in
int
jmp
iret
leave
stc
rcl
fcom
ljmp
not
ljmp
loop
rolb
out
cmc
fcmovne
sarl
sar
std
xor
sub
jmp
shr
lret
test
leave
out
out
int3
repnz
test
rolb
test
fucom
or
repnz
mov
icebp
in
fcmovnbe
cmp
loop
aam
test
jmp
sar
fiaddl
imul
aad
shl
lock
stc
aam
cmpl
fst
hlt
aas
test
jmp
cld
jecxz
loopne
lock
aad
sar
in
aad
std
cli
fdivr
hlt
rolb
fdivrs
fsubr
lock
ret
xor
call
cmp
cmp
addl
mov
in
jmp
iret
rcr
lret
ss
ljmp
std
std
sti
in
cli
aad
rorl
xchg
loope
mov
out
aam
iret
shl
fnstenv
cld
lock
fcomip
xlat
jmp
adcb
xor
jmp
fistpll
idiv
icebp
out
loope
fld
fucom
sti
ret
test
in
imulb
sub
not
in
enter
aam
roll
loope
lea
sti
jecxz
mov
idivl
aam
jmp
idivb
cmp
fstpt
lret
xchg
in
addb
div
out
fcmovu
cli
in
fdivrs
icebp
cmp
vpand
clc
into
jecxz
xchg
test
cmp
fdivp
xlat
cmp
fabs
cmp
repnz
fstp
shl
int
in
mov
in
call
icebp
iret
divl
in
xlat
shl
jmp
faddl
fdivrp
ret
push
cld
out
mov
out
fucomi
clc
ss
cmp
testb
fcmove
in
std
test
xor
fst
out
ss
lret
in
xlat
lock
fcmovnb
out
repnz
test
in
fcomi
out
jmp
cmp
aam
aas
clc
mov
loope
test
ret
hlt
ss
fsubrp
loop
loope
aam
fcmovnu
out
idiv
in
orb
pop
sarl
xor
ljmp
arpl
orl
add
imul
aam
aas
ret
lret
fst
fnstenv
lods
pop
inc
mov
stos
std
and
jg
roll
jle
aaa
shll
fucomip
stc
loop
adc
sbb
fimuls
sbb
loope
lock
fcomip
int
sbb
xor
ljmp
rorb
cli
lret
cmc
out
std
icebp
jmp
stc
adc
cmc
aam
int3
mov
loopne
out
aam
jmp
in
cli
fsubrp
fcmovnbe
jmp
cld
fcmovnb
out
cli
imul
aad
aad
jmp
std
fmulp
jmp
cli
cmp
aaa
fildl
and
stc
cli
testl
hlt
out
out
in
in
out
lret
leave
repz
test
and
repz
test
iret
int
in
aam
das
vpsubw
cmp
les
loop
fisttpll
lock
xor
into
cmp
fsubrp
flds
lock
out
ret
xor
aad
ret
fidivrl
cli
ror
lret
stc
fcomp
shl
hlt
mov
mov
faddl
call
repnz
ss
int
aas
repz
testl
icebp
loopne
xor
imul
repnz
into
fmul
sti
add
loop
fiadds
out
icebp
fiadds
cmp
xor
lret
clc
cmp
loop
in
xchg
push
out
jmp
xchg
in
in
xor
std
lret
ret
ret
jmp
testl
shlb
xor
iret
icebp
clc
aas
loopne
not
clc
mov
mov
fmull
out
stc
rol
into
mov
ds
cli
frstpm(287
aad
fcmovnbe
aad
ret
mov
out
in
enter
jmp
jmp
fcom
ss
rorl
loopne
mov
mov
decb
fidivl
lret
rcl
cmc
test
aad
icebp
aas
xchg
sti
push
jecxz
nop
ret
sub
fimuls
in
out
enter
lock
mul
clc
std
stc
ljmp
xchg
ljmp
shl
aad
std
cld
cmc
call
xchg
fcmove
fldl
call
out
fdivp
ds
lret
icebp
hlt
std
adc
faddp
mov
loop
std
ljmp
fldl2e
clc
repz
in
into
iret
std
rorb
and
test
into
cs
xor
cld
sar
loopne
sbb
test
fcmovnbe
mov
int
xchg
roll
fdivs
ss
rol
cld
aad
xlat
xlat
in
loop
xchg
cli
incb
ljmp
iret
fdivrs
rcr
cmc
repz
sti
repz
cmp
xor
xor
hlt
sbb
fcmovbe
out
addl
call
repz
cmp
cmp
sbb
loopne
loopne
sti
bnd
lret
lock
loopne
aaa
jmp
into
lret
cmp
int
ds
cli
ljmp
mov
icebp
mov
sub
ds
ds
cmp
out
shl
xor
mov
in
ret
lret
xchg
icebp
aas
aaa
cmp
aam
cmp
sti
icebp
hlt
cmc
into
aam
sti
hlt
flds
nop
xchg
out
sar
aam
out
cmp
sarb
int3
cmc
cmp
ds
adc
xchg
mov
lret
ljmp
icebp
leave
icebp
aam
int
faddl
loope
fstl
loope
rcl
out
in
lock
aaa
ret
cld
fsubr
sti
loopne
mov
nop
xchg
fsubrs
into
lret
cmc
xor
sti
cmp
ds
mov
lret
fmul
mov
xchg
xor
enter
cmp
and
neg
lock
std
imul
mov
stc
in
mov
ret
lret
pushl
sbb
fiadds
in
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
neg
mov
sbbl
push
and
lea
andl
mov
neg
jmp
rcl
xlat
fcom
push
outsl
bound
mov
roll
jle
mov
cld
popl
shl
lret
fucomp
cmc
enter
addl
stc
decl
xchg
ror
xor
call
aam
xlat
fldl
cmp
mov
in
inc
fisttps
fbstp
int
shl
cmp
jmp
add
out
filds
lret
jmp
orl
cmc
repz
shl
mul
ret
shr
xchg
addb
xchg
das
call
in
cli
in
int
cmc
xchg
xlat
sti
loope
aad
jecxz
mov
fmulp
rclb
fucomi
cmp
fmul
in
clc
std
test
cmp
call
testb
cld
mov
repz
lock
aaa
leave
loop
xor
movb
lret
out
mov
div
cmc
xor
ror
loopne
cli
cmp
test
ftst
loope
sub
lret
incl
out
ljmp
ds
ds
out
cmp
sbb
nop
in
orl
cmp
cli
cld
cmp
fcomi
jmp
fsubr
xchg
in
out
lret
nop
leave
out
out
clc
out
out
xor
int
hlt
push
aas
xlat
repz
rcl
loop
cmc
fcmovu
out
out
out
cld
in
xchg
xor
ljmp
sarl
aas
fldlg2
cmp
fdivr
hlt
jecxz
sti
cmp
xchg
repnz
out
fcom
rcr
cmp
std
loopne
loopne
in
test
test
test
les
int
lock
aad
lock
cmc
cmp
ss
mul
ljmp
xchg
test
out
repz
icebp
clc
neg
into
aam
cmp
ret
xchg
sti
xchg
lret
xchg
call
shl
ljmp
repnz
rcl
fdivrp
in
neg
std
mov
sti
in
in
call
aam
icebp
sti
jmp
shr
cmp
jecxz
hlt
aad
div
lret
enter
iret
fst
decl
xor
lret
into
stc
in
cld
fsub
repz
test
xchg
lret
std
xchg
loop
cmp
leave
fcmovnbe
cmp
test
out
out
hlt
aas
test
sbb
nop
test
out
call
les
ljmp
aaa
clc
loopne
fnstsw
icebp
xchg
sti
sti
int
cld
lea
dec
out
out
cmp
lret
shl
ds
sti
xlat
rcl
xor
loop
mov
out
into
in
xor
int3
aam
cmp
int
repnz
xlat
aam
cli
lds
in
rcll
cmc
out
jmp
loop
aad
jecxz
aas
fcmovnb
enter
mov
sar
in
call
repnz
xlat
cmp
cld
cmp
fsub
repnz
in
sti
out
xchg
rolb
clc
into
fldln2
clc
std
fldl2e
out
in
repz
ret
cld
aad
adc
loop
out
loop
in
icebp
jecxz
ret
leave
cld
xor
sar
cmp
rol
test
sub
fcmovnu
lea
ljmp
in
ljmp
cmc
call
mov
lock
cmc
fdiv
iret
stc
in
and
rol
movb
test
in
test
cli
ljmp
sarl
fnstcw
hlt
in
flds
ljmp
in
int
cld
int3
idiv
ljmp
mov
mov
and
mov
int
out
shr
shl
xlat
in
into
test
std
jecxz
in
mul
fmuls
hlt
cmc
sub
in
in
shl
fucomp
lret
cmp
fmul
iret
iret
call
ret
loope
hlt
loope
out
jmp
loope
out
mov
rol
fcmovbe
xor
int3
cmpb
cmp
ret
mov
fimuls
imull
jmp
int
ds
aad
vpmaxub
loopne
int
icebp
std
int3
icebp
vpaddsw
fcom
call
ret
in
jmp
aam
enter
aad
cmp
and
je,pt
nop
jg
roll
jle
xlat
cli
hlt
fsubr
out
nop
shl
xchg
iret
fidivl
int3
repz
out
jmp
cmp
fisttpl
in
out
xchg
ljmp
cld
shr
out
call
aam
out
test
enter
clc
adcb
cmc
out
aaa
int3
lret
in
cmp
out
cld
ret
repz
loope
ljmp
lret
test
cmp
iret
xlat
rcl
cmp
xlat
jmp
aas
in
loopne
addb
xchg
jecxz
aad
call
loope
aad
neg
aad
in
in
lret
repnz
in
loopne
xor
jmp
not
out
jecxz
loope
in
cmc
jmp
into
cli
repnz
test
jmp
clc
rcr
xor
and
test
mov
fiadds
out
loope
ret
shr
int3
ljmp
cmp
cmp
std
ror
int
sub
cli
xchg
int3
cmc
aad
lock
jmp
repz
aad
jmp
fadd
cld
hlt
leave
xchg
lret
out
nop
in
shr
mov
shr
repnz
stc
ror
cld
in
cmc
hlt
jecxz
in
lret
int
std
fcomip
hlt
fucomip
xchg
clc
clc
out
in
xlat
cmp
fdiv
aaa
xor
aam
out
ljmp
xchg
out
out
in
shll
xlat
iret
xor
icebp
aad
sar
into
test
in
loop
fcomi
leave
xchg
into
iret
call
leave
imul
lret
int3
sti
cld
aaa
out
in
repz
call
adc
lock
hlt
in
cmp
cli
sti
ds
clc
rol
sar
cmc
call
xchg
aad
out
fucom
xchg
in
jecxz
repz
call
fcmovnu
add
les
sbb
test
fucomip
vcvtpd2dq
ss
hlt
shr
sar
sti
sti
ret
lret
fdivr
stc
jmp
ret
jmp
cmp
aam
xlat
sti
clc
xor
faddl
leave
fiaddl
in
repz
fdivr
int3
cli
jmp
shl
repz
fcom
fucom
jmp
mov
into
int3
loope
xlat
xlat
out
dec
int3
fdiv
fsubp
xlat
cli
iret
sar
enter
sti
lret
in
nop
lret
call
sti
cld
cmp
ljmp
shl
call
in
repnz
in
jmp
cli
ror
fdivr
fdivrs
incb
std
jmp
mov
ljmp
fxch
fsubrp
cmc
hlt
not
ret
rcl
fucomip
aam
aas
test
in
int
xor
xor
fcmovu
rcr
lret
into
iret
std
shl
jmp
or
mov
icebp
icebp
rcl
ljmp
repz
hlt
loope
div
fdivr
mov
jmp
xchg
out
shlb
iret
neg
xor
shlb
jmp
xlat
rcr
out
xlat
mov
enter
test
mov
sub
lret
in
call
lret
xlat
aas
shll
mov
ljmp
mov
xchg
aad
xor
ss
repnz
fmulp
xlat
call
fneni(8087
iret
cmc
std
test
sti
mov
loopne
rolb
call
ss
in
rol
in
hlt
faddl
int3
addb
fcomp
cmp
lret
sub
xor
aam
aas
out
xchg
repz
lea
lret
jmp
aas
in
fucomp
shl
roll
in
test
xchg
xor
loope
clc
out
lock
fdecstp
testl
call
mov
aam
lret
int3
lret
jmp
lock
jmp
icebp
std
addb
out
icebp
bnd
das
int
ss
clc
jecxz
shl
repnz
mov
mov
shll
aad
cmp
enter
testb
incb
xchg
rorl
mov
mov
mov
movl
mov
xor
jmp
rcl
enter
fcmovne
fdivl
xchg
jg
roll
jle
jmp
shl
lds
xor
lret
xlat
sarl
cmp
out
clc
jecxz
lret
ret
test
xchg
jecxz
int
fstpt
into
out
ret
int3
cmp
in
mov
out
mov
jmp
fdivr
cli
call
addb
jmp
icebp
fucom
loop
fdivrs
xlat
int
ffree
into
cmp
test
push
fld
loope
sti
loope
int
mov
fldl
sti
fcmovbe
cld
fdivr
aas
fcomip
shl
fsubp
cli
mov
mov
int
aam
xor
leave
int3
idivb
idiv
loopne
testb
jecxz
in
sbb
leave
rcl
rcr
ror
xor
lret
ljmp
sbb
aas
ret
fxch
fiadds
icebp
ljmp
call
repnz
aas
fdivrp
lds
out
lea
sub
out
sarl
stc
test
test
call
cmp
rcr
enter
call
xlat
fmulp
clc
mov
int3
cld
std
test
repnz
icebp
cmp
rcl
loopne
std
sar
repnz
xchg
fdivrp
mov
int
in
jmp
icebp
iret
mov
xor
ror
leave
int
cmc
ret
ffree
test
leave
int
test
rcl
in
sub
clc
bnd
loopne
and
repz
fdivp
addl
in
test
iret
loopne
out
sti
aad
rcr
cmp
int
into
fdiv
rcl
lds
mov
jmp
shr
cld
sub
cmp
leave
cmc
cld
fdiv
xlat
in
iret
int3
fdivrp
addl
fucomi
test
popl
sarl
repz
ror
enter
int3
cmp
loopne
cld
mov
jecxz
loope
loope
loop
cmc
jmp
aam
in
sti
cmp
xor
iret
mul
std
out
loope
clc
add
in
fists
ljmp
hlt
int3
vpsubb
int
std
shl
testl
jmp
cmp
int3
xchg
ret
xor
in
in
aaa
loope
cmp
fcmovnb
fsub
rcr
out
xchg
aaa
repz
lret
rcr
xlat
sar
aad
testb
into
stc
test
call
int3
enter
iret
call
testb
cmc
jmp
in
test
fiadds
xlat
in
lret
jmp
fmul
in
cmpl
icebp
in
fsubr
cld
loopne
lret
hlt
testb
xor
ss
fstpt
test
iret
repz
cmp
aad
jmp
int3
in
iret
in
aam
clc
repz
fcmovnbe
das
jmp
aad
ret
enter
cmc
leave
out
int3
cld
fildl
hlt
idivl
leave
aam
fldl
clc
xchg
loopne
in
out
mov
cli
lock
icebp
test
ljmp
cmp
lret
div
loopne
lds
push
in
fucomip
out
out
out
jmp
xchg
jmp
idivb
fmulp
cmp
repz
cld
adc
in
filds
icebp
xchg
out
in
sub
repz
fst
in
sar
fninit
shl
ror
hlt
fimull
loopne
sar
stc
int
cli
cli
out
lock
sti
loop
lock
clc
ret
std
lea
cmc
xor
sub
cld
stc
xor
int
rcr
test
fdivr
les
mov
rorb
aaa
jmp
out
out
cmp
loopne
clc
repz
aad
stc
in
movl
rol
lock
ds
rcr
shl
cmc
enter
loopne
out
out
in
mov
test
xor
jmp
ljmp
repz
and
fdivrp
lret
popl
xlat
int
imul
cmc
out
neg
fiaddl
fsub
int3
fldl
test
fdivr
stc
repnz
clc
testb
rcr
dec
or
movzwl
adc
mov
xor
mov
or
mov
xorl
xor
adcl
jmp
int
rcl
int
stos
fimuls
add
roll
jle
mov
sti
in
jecxz
xchg
lret
out
sar
xor
lret
std
fcmovnbe
lock
int3
test
add
ljmp
mov
jmp
xchg
in
shlb
enter
fxch
xor
cmp
ret
cld
mul
fcmovnu
stc
clc
loope
repz
into
ret
cmp
jmp
neg
in
fadd
cmp
mov
cld
ret
in
out
in
int
lret
out
xor
cmc
cmp
leave
xor
jmp
int
shl
add
mov
test
lret
rcl
xchg
xor
xor
aaa
in
fsubr
fidivrl
cmp
sti
rol
cmp
fisttpll
out
mov
std
lock
cmp
fdivr
aad
aaa
lock
loop
test
and
test
int
rolb
aam
in
cmp
rcr
into
clc
sar
loope
mov
mov
fst
mov
jmp
ror
rcr
ljmp
ds
aam
ljmp
repz
xchg
in
das
sub
cmc
hlt
cmp
jmp
lock
fimuls
leave
call
fmul
test
lret
hlt
in
in
call
cmp
cmp
ret
adc
stc
xchg
lock
xchg
in
std
xchg
fmul
xor
mov
into
lock
fcmovnu
in
out
sti
out
cli
in
mov
xor
out
clc
cli
fnstsw
loope
fcomp
xchg
sti
int
out
out
filds
xor
out
icebp
fcmovbe
test
test
test
out
iret
std
sub
aad
xor
cld
cld
loop
int3
repz
ret
cld
cmp
into
in
shr
mov
or
ss
in
cmp
call
sar
fisttpl
leave
int
rorb
enter
fcmovnb
cld
cmp
mul
in
sbb
loop
orl
sti
test
fucomp
into
repnz
xor
in
aad
xlat
sub
lret
out
shl
in
rolb
in
in
in
loop
out
jmp
jmp
stc
aam
xor
aad
xchg
fimuls
hlt
sub
ret
cmc
shlb
sar
jmp
std
clc
icebp
hlt
xchg
out
loop
xchg
shr
xor
into
fxch
icebp
out
ss
cmp
xor
in
loopne
rcl
hlt
out
loope
addb
aaa
ret
out
fcmovbe
fdiv
xor
aad
ljmp
cli
xchg
lret
iret
icebp
jmp
xor
fcmovb
rol
xchg
in
shll
out
aaa
hlt
out
std
xlat
stc
fnstcw
roll
leave
std
jmp
xchg
mov
out
out
jecxz
cmp
fsubr
cmp
cli
ds
lret
test
sbb
mov
fst
ljmp
hlt
cmp
sti
out
aam
cmp
test
stc
mov
lret
mov
das
fcmovnbe
inc
int3
repnz
iret
repnz
fldl
stc
mov
jmp
cld
cmp
aam
lock
out
ljmp
loope
loopne
les
int
fildl
loop
icebp
loope
xor
rcr
loope
lock
neg
lret
not
xchg
aad
aad
fmul
cmc
in
icebp
repz
cmp
fcmovnu
out
lret
out
fistl
mov
out
lock
hlt
cmc
sar
lret
icebp
shl
fildl
in
xchg
out
leave
rorl
sar
aad
fdiv
out
fmul
fyl2xp1
xor
cld
mov
aam
out
lret
fsubr
mov
das
aam
std
cmp
repnz
repnz
stc
not
loop
call
in
fildl
loop
repnz
out
aad
jmp
adc
ret
cmp
fsubrp
loope
sub
mov
shl
xchg
cmc
stc
leave
jmp
fidivrl
fidivrl
hlt
rolb
in
cli
repnz
xchg
ss
iret
enter
imul
enter
fmul
fnstcw
ds
jg
roll
jle
fmul
xor
cmp
xlat
cmp
fsubp
mov
mov
fdivs
cmp
cld
out
xor
shl
xor
test
xchg
jecxz
out
fmul
jecxz
xchg
mov
out
xor
vaddsubpd
icebp
cmp
fidivrs
in
shl
sar
loopne
shr
fabs
loop
std
loopne
loope
in
jmp
xor
xor
cmp
fidivrs
xchg
sub
in
ror
mov
icebp
out
lret
jmp
stc
out
loope
cli
fcmovnbe
hlt
in
out
mov
addl
xor
hlt
cmp
shl
rcl
in
mov
mov
jmp
addl
in
in
cmp
jmp
jmp
idiv
out
aam
in
lock
mov
loopne
jmp
std
jmp
inc
fincstp
clc
xlat
imul
lret
sarl
cmp
out
cld
test
rcr
leave
clc
jmp
jmp
lret
cmp
in
icebp
lret
out
std
cmp
sar
testl
test
jecxz
iret
cs
cmp
cmc
cmp
in
test
xchg
in
aam
int
icebp
xor
aam
aaa
ffree
into
cld
ret
sti
jecxz
icebp
test
adc
lret
xchg
test
jecxz
xlat
repz
lret
ljmp
stc
orl
jmp
xchg
call
in
ljmp
rcr
shr
shl
repnz
mov
std
cmc
lock
xlat
in
lock
leave
enter
mul
jecxz
test
xchg
int
xchg
out
or
mul
xlat
cmp
fsubp
test
call
jmp
out
shr
int
ret
aam
fcmovne
into
xlat
rcl
cld
in
vpsubsw
std
idiv
call
test
decl
in
leave
clc
in
cmp
inc
lret
test
xchg
sbb
cld
rorl
neg
cld
call
cmp
not
loopne
mov
cli
out
xchg
xchg
cmc
std
clc
iret
mul
cmp
iret
xlat
shl
ret
cld
cld
leave
fstp
sti
iret
sub
out
xor
aaa
cmc
in
repnz
repnz
fcomp
int
mov
ljmp
idiv
iret
ret
cs
fcmovu
icebp
cli
sti
shr
jecxz
ret
in
sti
mov
xchg
out
xor
cmp
ror
enter
xor
test
fadds
or
xlat
int
in
int3
int
xchg
loop
int3
jmp
lret
iret
iret
cmp
jecxz
in
mov
adcb
test
out
leave
lock
icebp
fistpll
clc
aas
hlt
lock
test
enter
into
out
rcl
out
leave
sti
cld
fdivr
int
lret
ret
in
fxam
aas
cmc
in
cmp
fimuls
jmp
cmp
xor
rol
call
stc
fmul
xchg
lock
into
hlt
out
cmp
cmp
iret
iret
out
ds
faddl
enter
loopne
addb
cmp
test
fiaddl
shl
repz
cli
stc
in
mov
rol
xor
fadd
stc
ljmp
fdivr
sti
cmc
clc
fiaddl
nop
mov
mov
shr
xor
sub
hlt
add
out
out
flds
jmp
in
mov
rol
fcmove
fcomi
lret
fstp
test
loope
ret
not
loope
mov
iret
ljmp
icebp
das
clc
xor
cmp
cmp
idiv
mov
repnz
int
shl
int3
jmp
fmul
incl
clc
rol
test
fdiv
lea
in
fdivp
int
ss
fst
ror
xlat
icebp
sar
aad
rcr
cld
xchg
loop
fcmovu
int
in
iret
sarl
xor
jmp
sar
adc
incl
movb
shrb
add
imul
enter
fst
ffree
and
dec
jo
push
ds
roll
jle
in
in
mov
xchg
rorb
out
into
dec
out
xlat
iret
in
cmp
fld
icebp
hlt
test
fsubr
cmp
clc
int3
addb
out
fptan
incl
aad
std
mov
sti
out
decl
in
int3
out
rcr
in
in
enter
lret
icebp
out
mov
stc
fimull
xchg
shl
lret
aad
in
stc
fdivrs
out
rcr
cmc
fidivrl
fcmovu
icebp
decl
int
iret
int
out
xor
mul
xor
aam
and
ret
out
mov
mov
fsubrp
in
xor
xor
sub
xor
shl
cmc
shl
sbb
xlat
mov
faddp
mov
and
in
repnz
std
cmp
jmp
fcompp
aad
cmp
cli
mov
aam
faddl
shl
aad
ret
xor
xor
cmp
hlt
aad
in
aas
repnz
mov
lea
in
nop
xor
in
iret
cmp
cld
cmp
ret
xlat
sti
xchg
fmuls
in
jmp
into
fldl
cmp
cmc
in
lock
sarl
cmc
rcr
rcl
mov
cli
fstp
test
test
aam
xor
fdivrp
shl
lret
jmp
icebp
cmpb
cld
xchg
ret
mov
test
xor
shll
leave
rcr
stc
fxtract
hlt
repz
mov
out
test
loope
jmp
in
in
shll
fcomp
ljmp
int3
sti
cmp
hlt
mov
xchg
loopne
mov
jmp
int
loop
xlat
div
sti
div
imul
cmp
cld
xlat
xchg
ret
fiaddl
stc
in
test
sbb
int
ret
ljmp
sar
clc
lds
loopne
std
ljmp
ss
fsubr
icebp
out
loope
int
rcl
adc
in
mov
test
out
out
aam
rcr
das
sarl
in
jmp
cmc
cmp
loop
clc
hlt
call
out
icebp
lock
lret
out
ds
aad
cld
out
in
loopne
fiadds
loope
sub
mov
repnz
lret
ror
cs
cmc
ljmp
xchg
call
loop
fldl2t
leave
aam
repz
aad
stc
jmp
lock
aad
sarl
aam
fsubr
aad
lea
cld
xchg
aad
call
out
cmp
rcr
int
repnz
repnz
testl
shl
mov
loopne
shr
rcr
xor
iret
clc
out
les
aad
add
in
testb
loopne
shl
aaa
xor
lret
test
cmp
ret
cmc
aad
ret
cmc
decl
out
in
ror
pushl
int
fidivrl
cmp
in
into
shl
xor
out
jmp
in
into
mov
xchg
out
xor
iret
int3
int
out
cmp
ffree
iret
clc
xlat
aam
ljmp
repnz
mov
mov
lret
call
ds
stc
in
cmp
cmp
ljmp
xchg
fcomp
cmc
cli
clc
repnz
cli
iret
cld
loopne
cmp
aad
fisttps
call
xchg
std
pop
xor
das
sar
aaa
ds
shl
out
fcmovnb
std
loop
lock
fmul
adc
cmp
xor
aam
cmp
cmp
out
hlt
fsubp
lea
test
rclb
cmp
sarl
ds
cmp
in
fildl
enter
sti
xchg
faddl
xor
stc
rcr
jmp
sar
aas
vpsrlq
jecxz
std
in
out
mov
repz
jmp
lock
ror
shll
mov
cld
div
call
loop
nop
repnz
cmc
lock
cmc
les
cmp
cmp
cmp
cmp
xchg
aam
in
in
call
loopne
jmp
shr
in
cmp
aad
repz
ret
repnz
idiv
not
cli
lret
iret
xchg
into
in
fcom
xor
sti
xlat
ss
icebp
hlt
add
addl
div
not
mov
movl
cmp
movl
jmp
rol
mov
xchg
test
cmpsb
jg
roll
jle
cmc
shl
and
fcomi
jmp
iret
in
out
decb
sub
fdiv
fptan
fnsave
fcmovnu
jecxz
cmp
lock
jecxz
out
cli
xchg
int3
into
filds
jecxz
repz
clc
enter
iret
rol
loope
loope
out
int3
mov
sbb
decb
sar
out
iret
clc
hlt
clc
stc
out
sbb
cli
std
lret
jmp
in
in
jmp
cmp
fincstp
lret
test
fisttps
int
shl
dec
shl
into
in
shl
xor
out
repnz
in
stc
loopne
div
xlat
sbb
and
das
icebp
ljmp
lock
hlt
jmp
fadd
into
clc
fiadds
lock
fcmovnbe
cmc
cmp
or
aam
sar
in
xchg
xchg
leave
call
ret
mov
cmp
and
fninit
xlat
add
icebp
loop
out
mov
loope
shlb
int
enter
stc
loopne
fcomip
in
loope
aas
clc
out
imul
mov
mov
sub
idiv
out
rcl
xor
fidivrl
icebp
mov
xchg
leave
orl
mov
sti
cmp
iret
aad
sti
sarl
ror
jecxz
mul
shr
test
xchg
call
icebp
shr
jmp
aaa
out
jmp
cmp
in
stc
idivb
ret
lret
out
enter
in
in
call
xor
call
stc
out
fsub
xlat
lds
sub
xor
cmp
fld
idivl
mov
sub
lds
loopne
faddp
fsubr
jmp
sarb
idiv
cmp
test
out
std
repnz
int3
in
jecxz
loope
in
loop
aam
xor
out
out
in
ror
xlat
lock
rcr
fnsetpm(287
ret
shl
ljmp
loope
lret
xor
jmp
out
enter
int
fsubr
cmp
sar
movl
xor
cmp
call
test
out
mov
out
sub
out
nop
out
aam
shr
in
cmc
shr
ror
hlt
ret
cmc
enter
ljmp
out
loop
vcvtpd2dq
out
sti
icebp
fidivrs
ljmp
stc
out
xrelease
cmp
xchg
out
ret
cmp
lret
xor
repz
loope,pt
fcomp
std
loope
sbb
leave
jmp
call
fcmovne
icebp
int
repnz
loopne
out
loop
xchg
fmulp
loope
jmp
orl
cmc
lock
jmp
cmp
rcl
test
cmp
enter
lret
mov
ljmp
cli
cmp
aam
out
cmp
fst
adc
lock
in
aam
movb
fmulp
das
repz
jecxz
cli
std
leave
std
leave
ljmp
repz
enter
xchg
mov
cmc
aad
test
cmp
shl
repnz
loopne
out
out
fistl
cmc
das
clc
shl
lret
iret
cmc
and
in
test
sti
loopne
in
jmp
fisttpll
test
das
clc
cmc
iret
cld
fyl2x
fmulp
into
cli
lock
jmp
jecxz
nop
adc
aam
xor
aam
shr
div
lock
fdivp
test
in
rclb
rol
repnz
idivl
in
jmp
in
cli
icebp
aam
lret
int3
enter
shl
rol
aaa
fmul
cli
sti
xlat
clc
shl
aad
ret
clc
call
ljmp
hlt
out
aas
shl
stc
in
cmp
fpatan
loop
shl
aam
cmp
in
in
loop
test
jmp
repnz
cmc
loop
repz
ret
sar
call
in
mov
out
xor
loop
xor
shl
jmp
jmp
repnz
jecxz
and
enter
rol
je
movzbl
sub
movl
add
jmp
aas
aam
int3
aad
lret
fstl
or
mov
add
fstl
int3
idiv
lock
out
loope
ss
and
ljmp
cld
mov
loopne
fcmovbe
cmp
cmc
shr
int3
xor
repz
fxtract
jecxz
ljmp
xchg
imul
xor
out
cmp
cmc
cmp
cmp
fsub
cmp
fcmovnbe
ret
testb
mov
iret
lret
cmp
fdivr
in
loopne
and
sar
stc
stc
xor
in
mov
jmp
int3
sti
ljmp
sub
stc
shr
icebp
cmp
neg
ret
sub
icebp
test
sarl
xlat
ss
roll
into
stc
sub
in
mov
repnz
sub
aaa
out
out
fcmovb
rcr
repz
incl
ljmp
xor
aam
jmp
in
rolb
ret
in
sub
in
sti
into
addb
lret
fmul
cmp
cmp
out
out
clc
mul
int3
clc
fimull
addb
cld
jmp
icebp
repnz
int
repnz
repnz
les
int
clc
xchg
icebp
loop
mov
enter
enter
sar
lock
stc
call
inc
loop
jmp
clc
loope
out
fidivrl
frndint
cmc
leave
les
fsub
rcl
and
aad
in
out
lret
mov
iret
rol
int3
stc
lock
int3
xor
stc
aad
fcmovnb
rol
out
out
in
addl
int
ret
jmp
xor
int3
test
rol
fadds
mov
mov
into
sbb
clc
clc
jecxz
lret
out
aad
ret
sar
ret
fld
ds
loope
lret
fcmovu
ljmp
icebp
jmp
lret
shr
neg
sti
ret
lret
fisttpl
sbb
jmp
call
int
test
hlt
loop
test
in
into
out
in
mov
sub
int3
cli
ljmp
cmc
jecxz
out
rol
cmc
lock
in
test
into
in
div
lret
neg
enter
loopne
cmp
mov
xchg
stc
enter
loopne
xchg
xor
cmp
jmp
cmc
leave
loope
cli
aad
xchg
mov
out
in
out
iret
in
jmp
cs
in
ffree
fucomip
cli
in
mov
fsubp
out
rclb
ljmp
ror
loope
sti
ror
jmp
fucom
std
mov
mov
out
xor
sti
call
fnstsw
cmp
repnz
loope
mov
test
xchg
in
in
jmp
cmp
fmul
sar
cmc
loopne
cld
cmp
out
adc
idiv
xchg
cmc
aad
xor
shlb
aam
std
shl
adc
and
loop
mov
aaa
aaa
fstpt
rcr
fdivrl
lret
cld
cli
movb
test
mov
adc
das
clc
into
cmc
lock
repz
xlat
test
in
std
orl
out
loopne
enter
vpaddb
out
ror
rol
aam
xlat
filds
mov
mov
leave
cld
enter
sar
out
loope
in
aam
test
jecxz
test
out
rcr
cmp
sarb
lret
repnz
icebp
loope
test
icebp
nop
icebp
test
xor
leave
int3
aaa
lret
stc
shl
rcr
fsub
aad
jmp
loopne
testl
inc
xor
das
fcmovu
enter
sti
hlt
ret
icebp
rcr
stc
lret
enter
ljmp
stc
cmp
div
cmp
cli
fldl
ds
out
jecxz
xchg
jmp
repz
out
lock
fildl
sti
ret
fcmovb
xchg
out
lock
mov
ljmp
aas
xor
inc
hlt
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
dec
mov
mov
mov
imul
jmp
lret
ror
fstp
fnstsw
out
jo
pop
push
jg
roll
jle
cmp
mov
out
xchg
icebp
cmp
jmp
in
into
les
std
leave
in
clc
aaa
cmp
cmp
xabort
in
leave
xchg
out
in
in
repz
call
hlt
test
lock
sarb
fsqrt
in
int3
fsubp
addb
aam
out
aaa
ljmp
cmp
div
hlt
in
or
mov
xchg
std
mov
hlt
out
in
fcmovnbe
ljmp
fdivr
icebp
ds
testl
mov
aad
sarb
ss
test
not
xlat
les
cli
std
xchg
stc
in
addl
xorl
int3
ljmp
aam
ds
rcl
out
out
ljmp
loope
cli
enter
jmp
jmp
xor
cmp
ljmp
in
xor
xor
in
fistpll
xlat
in
cmc
cmp
les
jmp
xchg
loopne
in
enter
cmc
cmp
loope
xchg
icebp
rcl
loop
call
iret
enter
xor
xor
hlt
std
std
cmp
rcr
ret
sar
fsubr
cmc
lret
sti
xchg
out
sub
stc
call
out
cld
loope
test
loop
and
orb
mov
xlat
loopne
xor
into
sarb
xlat
lret
stc
ss
aas
test
out
xchg
mul
lret
stc
repz
xor
lret
xor
fidivrs
fiadds
and
out
out
leave
mov
jmp
int
into
clc
shr
out
in
jmp
loope
fcmovb
shl
mov
cmc
mov
call
jecxz
aaa
into
test
repz
stc
xlat
mov
mov
mov
cli
orb
sarb
out
icebp
fcmove
fidivrs
cmc
out
mov
int
loope
repz
shr
shlb
aad
les
fidivrl
loop,pt
std
sti
aad
xor
int
mov
xchg
iret
cli
aad
cmp
xlat
int
clc
in
iret
repnz
fdivp
mov
incb
in
cmp
jmp
cmp
fdivp
call
lret
aas
loope
loope
sti
call
out
cmp
int3
cmc
cld
xor
in
test
xor
xlat
xchg
jmp
not
sub
idivb
out
fmul
icebp
ljmp
cld
enter
lret
mov
icebp
test
hlt
fisttps
out
std
int
aaa
cmp
idivl
loope
mov
in
nop
aam
mov
xor
repnz
cmp
sar
test
loopne
cli
in
mov
out
jecxz
fneni(8087
mov
rcl
int
hlt
cld
int
fnclex
hlt
lock
fldl
loop
enter
cli
mov
aad
jmp
fsincos
fcmovnbe
aaa
fdiv
fld
div
mov
in
testl
iret
sti
ror
stc
repnz
rcl
rcr
sub
fucomi
jmp
in
xor
hlt
faddl
jecxz
test
enter
enter
test
in
aas
cmp
cli
aad
cmp
flds
out
out
xchg
mov
nop
shl
in
ret
cmp
ror
addb
movl
xchg
aam
out
xor
icebp
icebp
jmp
cmp
into
cld
cmp
cmp
xlat
cmc
call
lret
out
into
enter
rol
lret
int3
iret
aas
shl
rol
xlat
lret
fistl
mov
xor
lret
cmp
ret
fsub
xchg
xchg
cmc
les
aad
xor
loopne
cmp
shll
fcmovu
sti
loope
ljmp
addl
clc
sarl
xlat
loope
flds
out
fxtract
mov
leave
in
test
mov
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
jmp
rcl
rcr
fst
xlat
xchg
sbb
xchg
stc
loop
jg
roll
jle
shll
aad
repz
cmp
cld
iret
clc
fstp
sbb
sti
leave
in
mov
out
adc
test
enter
ljmp
lock
rcr
sti
xlat
in
mov
xchg
xchg
out
clc
xor
xor
repz
aad
roll
cld
enter
fcomi
out
xchg
inc
jmp
fcom
clc
cmp
cld
xlat
clc
xchg
cli
hlt
hlt
fdivr
xchg
jecxz
test
fmull
enter
in
shl
ljmp
adc
cmp
cmp
neg
fsub
xchg
mov
int3
icebp
shr
in
in
call
rcr
icebp
in
in
mov
test
loope
ljmp
lock
cli
leave
aaa
div
stc
cmp
lock
leave
fucomi
fucomp
decl
aam
repnz
fcom
out
aaa
repz
loopne
shl
cld
rcl
jmp
in
loop
sti
in
into
ror
xor
lret
rcr
jmp
out
int
loope
fldl
out
fisttpl
int3
mov
fadd
ret
in
in
in
iret
stc
fdivr
in
lock
faddl
into
jmp
icebp
aaa
std
repz
jmp
fcmovbe
fdivp
iret
cmp
mov
cmc
stc
in
enter
mov
xor
out
neg
fdivp
idiv
ret
loope
rcr
loop
fmul
xchg
in
std
xchg
inc
in
not
cli
cmp
lret
cmc
div
loope
cmc
not
call
jmp
mov
lret
loop
iret
lret
mov
cmp
out
faddp
cmc
fldl
enter
cld
out
in
sub
ret
xor
in
hlt
fsubr
loope
aas
cmp
rol
sar
fyl2xp1
xlat
in
cli
lret
sti
fmull
lret
into
rcr
icebp
fmulp
fst
loop
fiaddl
out
fcmovnu
test
repz
aam
clc
aaa
ljmp
fcmovnbe
in
out
cli
ljmp
ljmp
xor
lret
fdiv
cmp
cmc
aaa
in
lds
cld
mov
aas
in
hlt
cmp
fpatan
cmc
aaa
sti
fucomp
ret
repz
cld
rcr
test
inc
in
incb
icebp
xor
in
cli
out
ss
lret
fcomi
sti
cmp
rol
cld
aam
leave
fmuls
xor
xor
lock
repnz
roll
in
leave
idiv
loope
jecxz
test
xor
hlt
hlt
out
out
ds
clc
test
vmaskmovdqu
xchg
test
flds
cmc
lock
in
in
cmc
fnstcw
cli
sar
loop
ds
repz
flds
xchg
hlt
or
xor
in
in
out
cmp
inc
clc
mov
lret
loope
in
call
in
shl
lds
cmp
enter
dec
cli
repz
icebp
cli
cli
mov
xlat
in
rolb
repnz
aam
out
in
sti
sbb
into
cmp
aas
aad
ret
loop
lret
mov
xchg
mov
test
lret
out
hlt
fsubr
ljmp
std
test
loope
leave
in
repnz
incl
in
cmp
ds
cld
out
loope
std
fcmovu
mov
xor
sti
ret
xchg
fsubrp
into
repnz
into
lret
cmp
xlat
cmp
xchg
in
imul
xchg
in
jecxz
fldl
in
xlat
xor
cli
cmp
clc
enter
ds
jmp
int
lret
lock
call
repz
out
call
aam
xor
cld
fcomi
ljmp
ljmp
in
out
cli
repnz
cmp
jecxz
cmc
jecxz
incb
mov
cli
divl
lret
cmp
in
xlat
idiv
aam
loopne
shl
fdivp
out
fstl
out
xchg
in
jecxz
leave
divb
sarb
cli
ret
test
fildl
in
fiadds
out
jmp
in
icebp
jmp
int3
fdivr
lock
cmp
jmp
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
jmp
rcl
mov
aad
sti
adc
mov
jg
roll
jle
jecxz
addb
loopne
ret
lret
fcomip
ds
fdiv
iret
sbb
lret
cli
test
cmp
enter
in
jmp
cmp
in
aad
fnstsw
add
out
xchg
jecxz
in
xor
call
lret
cmp
xor
add
fadds
test
fdivrp
loop
nop
call
out
ror
hlt
das
cmp
out
aam
fcmovu
into
clc
std
not
call
in
loope
icebp
repnz
fdivs
lret
fdivr
cmp
cmp
sbb
rcr
fcmovnb
roll
fst
shr
out
out
cmc
xor
out
aad
jmp
fld1
cld
idiv
test
in
fscale
mov
loopne
fsubp
call
ljmp
in
cmp
fcom
repz
in
ds
ret
ffree
cld
enter
lret
cld
jmp
fsubrp
rol
rol
fxch
test
aam
lret
cmp
repz
rcl
loopne
aam
shl
in
sbb
repnz
cmc
hlt
lret
cmp
aaa
lock
cli
xlat
xlat
out
loope
lea
std
sti
repz
aad
shr
int3
out
fmulp
fcomp
cli
rcl
aad
out
cli
incl
fimuls
jecxz
aaa
divl
cmp
in
lock
out
cli
jecxz
cld
rcl
xlat
test
xchg
stc
test
leave
int3
ljmp
in
addl
xchg
out
call
mov
in
aad
clc
lock
xor
jmp
xlat
lock
test
in
xchg
shl
test
jmp
shl
std
cmp
rcr
aas
sti
fadd
cmc
ds
mov
test
xchg
mov
in
xor
xor
xor
stc
cmp
dec
iret
fstpt
ret
flds
into
fcmove
int
lock
aaa
out
sub
repnz
fst
rol
hlt
in
enter
leave
jmp
orl
rcr
ds
repz
ds
aas
vpaddq
xchg
jmp
xchg
jecxz
xchg
xchg
loope
lret
xor
cmc
ss
fbstp
jmp
int3
into
fadds
std
ljmp
mov
test
fsubr
cmp
in
shl
fsubp
jmp
mov
out
out
aad
rcr
idiv
cmp
lock
loope
call
rol
cmc
xchg
jecxz
roll
aam
cmp
in
ds
leave
repnz
xlat
rolb
out
clc
mov
rorb
out
cmc
fdivs
fcmovnbe
shlb
fstpt
lret
test
fdiv
sti
aam
not
clc
adcb
jmp
out
into
iret
out
vpaddusw
cmp
test
loop
jecxz
leave
call
loopne
out
mov
in
lock
cmc
cmp
adc
std
addb
out
mov
repnz
shr
out
repnz
xor
sti
rcl
hlt
enter
ljmp
mov
clc
rcl
shr
jmp
div
addl
out
loope
rolb
enter
stc
iret
iret
loopne
test
lock
call
stc
in
lea
stc
xor
fcmovu
aad
std
fidivrs
ret
cmc
jmp
mov
out
fcmovbe
aad
clc
int3
int
stc
rcl
sar
shl
mul
int3
ljmp
icebp
xchg
lret
sar
repnz
jmp
fndisi(8087
neg
ds
rcr
jecxz
xchg
lret
aam
int3
repz
aaa
xor
clc
test
out
in
xlat
xchg
mov
out
jecxz
in
fistpll
in
shl
xlat
ret
rorb
lret
in
test
cmc
lret
cli
in
shl
lock
cmp
not
in
jecxz
mov
mov
mov
das
divl
rcl
cmc
fidivrl
div
sar
div
aad
std
and
rorb
xor
out
out
aam
lds
in
mov
xor
mov
add
cmp
jmp
rol
lret
fstp
aad
dec
jns
push
iret
in
or
jle
fbstp
test
fucomip
mov
loopne
jmp
test
test
out
out
fst
ljmp
xor
jmp
flds
jmp
lret
xorl
xor
stc
xor
cmp
rcl
rcr
fcmovb
jecxz
leave
into
xor
shl
jmp
out
cmp
int3
rcr
std
xchg
enter
in
test
mov
xchg
loop
sub
shr
xor
aam
jmp
shl
fucom
hlt
repz
cld
mov
shr
jecxz
xlat
fdiv
cmp
in
cmp
cld
out
loopne
cmp
ret
mov
in
fimuls
mov
xchg
xor
cli
cmp
aad
fprem
cmc
repz
in
addb
test
hlt
lret
icebp
in
stc
in
cmp
out
test
ret
xchg
orb
std
mov
in
out
sti
leave
into
das
cmp
call
aam
out
xor
cld
xchg
repnz
lock
xor
cld
xor
xlat
aas
out
icebp
aam
mov
stc
fldl
repnz
enter
jmp
imul
leave
cmp
fldz
xor
addl
int
jmp
out
in
ljmp
ljmp
xacquire
loop
out
out
in
out
enter
jecxz
out
out
sarl
cld
fcomip
stc
ds
std
aad
enter
mov
fdivp
xchg
rol
imul
xlat
shr
cli
inc
testl
xchg
jmp
int
enter
imul
cmp
jecxz
cmp
lock
xor
jecxz
and
leave
clc
lret
iret
int
and
out
xor
xlat
enter
ror
aad
out
call
ljmp
out
cld
mov
out
into
fdivs
leave
test
shl
cmp
repz
rcl
xlat
lock
test
std
ret
out
ljmp
cmc
clc
call
push
sti
sti
in
fildl
xchg
test
cmp
xor
out
cmp
jmp
ds
cmp
std
enter
in
mov
mov
loop
aaa
jecxz
stc
stc
cmp
cmc
loop
jecxz
aam
shl
xchg
in
orl
xlat
clc
into
xor
rcr
int
sti
iret
fscale
test
ds
fldl
stc
jecxz
mov
int
aas
xor
stc
fcmovnb
std
cmc
out
repnz
in
out
cmp
aam
aad
out
xchg
lock
cld
lret
in
fcmovnbe
xor
repnz
mov
rcr
out
loope
in
shlb
xor
aas
rcl
addb
jmp
orb
cmc
mov
repz
fxch
fcmovnbe
jmp
add
rolb
jecxz
in
jecxz
nop
into
cld
icebp
aam
jmp
cmp
cmc
repnz
cli
roll
xlat
test
lock
ret
hlt
leave
lock
in
cmp
shr
ds
leave
xlat
leave
cld
enter
cmc
xor
test
jmp
cmp
fsubrp
loopne
mov
sub
out
xor
enter
lock
stc
repz
loope
shl
enter
clc
jmp
sbb
test
mov
out
xor
into
xor
leave
call
repz
in
call
lret
jmp
mov
shl
stc
sar
mul
fidivrs
jmp
aas
addb
ljmp
sub
icebp
fcomi
enter
sar
cmp
fnclex
test
loop
in
fsubr
fiadds
in
in
out
int3
out
cmp
faddp
aam
call
add
mov
loopne
test
das
out
ljmp
cmc
leave
cmp
lock
push
sub
lret
xchg
out
ljmp
out
shl
out
lret
into
fcomi
sub
mov
jmp
mov
test
je
mov
xor
add
jmp
iret
aad
aad
aad
aad
push
push
mov
fildl
jle
add
shl
not
cli
aam
loopne
in
cmp
mov
repnz
fmul
out
lea
xlat
ret
out
test
int3
cmc
out
testb
repnz
out
out
mov
out
nop
xchg
enter
sti
ljmp
ror
repz
rcl
xor
int3
loope
in
xchg
lock
clc
xlat
aad
cmp
leave
out
out
cli
lret
cli
loop
test
hlt
sub
in
in
nop
std
shl
out
cmp
shll
hlt
aaa
fdivrp
shr
in
testb
fucom
into
in
test
rcr
in
call
cmp
ds
cmp
xlat
jecxz
jmp
xchg
sti
jmp
int
int
hlt
into
int
lret
lret
incl
aam
loop
cli
aas
out
aam
enter
xlat
out
lret
stc
loopne
xchg
rcr
idivl
fdiv
cli
ret
xchg
repz
fsubrs
aad
ret
cmp
ljmp
icebp
sbb
loop
incl
fdiv
loopne
xchg
jmp
enter
aas
icebp
cmc
fsub
sti
rcr
and
cli
loop
loop
icebp
rclb
jecxz
test
repnz
cld
rolb
xchg
filds
int
aaa
shl
rol
hlt
repz
std
shl
div
hlt
popl
mov
jmp
repnz
stc
in
out
ss
fcomi
rcr
repnz
and
aam
mov
adc
jecxz
into
mov
cmp
xor
sarl
cld
loopne
lret
repz
rcl
cld
fldl
mov
xchg
test
hlt
nop
int
leave
out
hlt
ror
int3
lock
rcr
div
in
mov
cli
les
jmp
hlt
std
xchg
xor
clc
sti
fadd
xor
neg
lock
aad
loope
fscale
xlat
jecxz
in
int
decl
hlt
in
xor
fdivrp
fsub
aas
sti
sti
rcr
and
loope
int
decl
ror
xor
out
jmp
sar
incl
repnz
idiv
ljmp
out
jmp
lock
int
fcmove
xor
loop
int
push
aam
aas
aad
aad
enter
xchg
addb
not
hlt
cmp
icebp
cmpl
not
cmc
and
int3
lret
iret
int3
fmulp
xchg
in
in
out
fdivrl
cli
leave
rcl
lds
out
fcmovnbe
cld
fisttpll
loopne
loope
xor
rcl
std
iret
xor
out
aad
std
loope
test
lret
ljmp
aad
xor
xor
cmp
in
in
mov
xchg
in
int
lock
xor
stc
leave
stc
stc
aad
ret
sti
test
jecxz
clc
ljmp
into
jecxz
ret
into
iret
stc
cld
xor
test
std
fdiv
ds
in
ret
int3
int3
out
call
out
xor
xor
sti
aad
fsub
les
cld
mov
mov
sti
ror
in
out
cli
cld
xor
shl
ds
lock
int
out
and
xlat
out
imul
clc
stc
fcmovbe
in
out
out
out
or
out
int3
mov
xchg
ljmp
jmp
fucomp
and
ds
in
idiv
lret
sbb
in
int
loope
in
xor
int
cmp
fiaddl
loop
loopne
addl
lret
cmp
cli
aad
fscale
sar
mov
sbb
leave
mov
fdiv
xchg
ljmp
out
fyl2xp1
in
jecxz
test
test
loope
rcl
inc
iret
hlt
in
out
jmp
xor
std
inc
orb
fucomi
out
fcmove
adcb
lock
aas
xlat
stc
sti
fcom
out
leave
fdivrp
and
orb
repz
enter
aam
lret
repnz
xlat
cmc
mov
mov
mov
mov
xor
add
jmp
ror
rcl
mov
dec
mov
roll
jle
adc
cld
fcoml
xchg
cs
icebp
in
dec
aad
aam
rol
out
xor
mov
bnd
ss
lret
lock
cmp
loopne
repz
sar
fsubr
out
mov
out
jmp
cmc
xorb
ror
lret
ds
fldln2
cmp
out
ret
lret
neg
into
std
lret
jmp
jmp
xlat
leave
into
cld
cmp
out
out
loope
dec
fucomp
loope
xchg
ljmp
shlb
cmc
lret
cmp
out
xlat
idiv
test
cld
jmp
in
out
xchg
std
aad
xor
ror
cli
int3
cmp
cld
aam
xlat
ret
lret
mov
out
nop
jmp
xchg
into
out
out
in
ds
shl
into
xchg
loope
ljmp
and
xor
bnd
cmp
lret
neg
shl
div
jecxz
xchg
mov
jmp
jmp
cmp
fnstsw
test
cld
aad
shr
sbb
int3
into
in
xchg
in
lret
iret
cmp
fdivs
ds
repnz
aam
and
in
xchg
mov
ljmp
iret
out
into
shl
cmc
xor
faddl
fadds
mov
out
loope
xor
std
call
fdivrs
out
cli
ret
cld
cmc
fucom
out
clc
dec
rclb
xor
xor
icebp
out
repnz
cmp
fxch
addl
fiaddl
hlt
jecxz
lret
shll
mul
out
ffree
cmp
fmuls
cld
fucomp
loop
loop
or
in
sub
jmp
sar
clc
jmp
cmp
icebp
aam
cmc
clc
xor
fsubr
sub
xchg
icebp
out
lock
repz
lret
cld
aad
aas
cli
ffree
hlt
add
sar
fmull
xchg
lret
into
iret
call
cmp
in
rcl
test
fninit
into
mov
in
iret
mov
xor
cli
in
xor
leave
adc
out
test
loop
xlat
neg
not
loop
in
loope
xchg
xchg
clc
ljmp
idivl
rcr
and
sarb
lret
mov
xor
out
rcl
xbegin
cmp
loop
fdivp
repz
in
cli
jecxz
shr
loop
in
loop
fcmove
ret
shl
shr
rcr
adc
lds
shr
ror
cld
xchg
cmc
xlat
hlt
lret
in
sar
cmp
cld
int3
cmp
cli
test
repz
shl
orb
loope
out
cmc
xor
int3
leave
lret
sti
in
std
in
div
into
roll
std
jmp
lret
in
lret
divl
divb
std
cmp
shr
stc
inc
test
cli
int
std
jecxz
xlat
in
in
repnz
out
int
imul
adc
mov
leave
sub
mov
in
rcl
sub
fprem1
std
fcmovu
or
repnz
jmp
in
call
iret
shl
int3
clc
shl
in
ss
iret
out
hlt
into
div
aam
shl
aad
neg
int
in
int3
hlt
fsub
nop
xor
cmp
cli
loopne,pt
shl
xlat
test
xlat
std
lret
lret
fcmovnu
xchg
int
int
icebp
rcl
xor
neg
aas
roll
test
adc
sti
xchg
mov
ret
stc
imul
fxch
imul
fdivl
sar
int3
in
lret
xchg
aam
xor
iret
aaa
sti
into
fbstp
jmp
shl
fcmovnu
loopne
xlat
sub
rcll
das
fmul
loop
div
cmp
out
out
cld
enter
in
test
jmp
faddl
sti
ljmp
sbb
repz
xchg
ljmp
out
out
cmpl
rcl
fcmovnb
leave
leave
idivb
fsub
call
loope
lret
lock
mov
xor
lea
add
jmp
rcl
aam
sarb
xchg
sbb
outsl
fsubrl
roll
jle
iret
stc
int
idiv
filds
cmp
stc
enter
mov
and
das
int
xor
neg
lret
jmp
test
int
shl
filds
mov
xor
aam
fidivrl
icebp
sarl
fcmovu
test
fcomip
mov
cmc
test
fmulp
sub
fidivs
rol
jmp
sbb
xlat
shl
cmc
rolb
cli
cmc
addl
aam
fnop
fadd
rcr
ss
cmp
icebp
jecxz
in
lret
mov
repz
loope
shl
out
not
icebp
cmc
jmp
std
cmpl
shl
sbb
ljmp
int
cmp
cmc
loopne
cmp
iret
fadds
hlt
in
test
fmull
xor
xor
cld
icebp
lret
stc
out
loope
jecxz
fdiv
shl
addl
mov
repz
std
cmp
cmp
fdivp
incl
fiadds
xchg
test
ror
repz
repz
cli
ds
fiadds
lret
in
aam
test
fld
ss
out
fdivp
int
cmp
fsin
cmp
sub
call
xchg
shr
into
repnz
not
cmp
out
cmp
std
cmp
xchg
lds
loopne
ljmp
xor
xor
jmp
fdiv
idivb
pushl
div
hlt
std
in
lret
cli
mov
xchg
out
shl
xor
rcl
xlat
sarl
in
xor
jmp
pop
mov
repnz
cli
cmp
cmp
ret
sbb
les
in
fdivp
test
iret
mov
lret
ss
out
cmp
sar
add
xchg
sar
test
call
xchg
out
jecxz
out
ss
out
int3
not
cmp
sar
loop
rorb
int
in
ficoms
fdiv
out
repnz
jmp
and
enter
call
jmp
xor
lock
iret
aam
cmc
ret
neg
fucom
call
mov
iret
fsubp
jmp
das
leave
stc
ror
ss
mul
fdivrl
out
out
xor
test
xchg
lret
xchg
jmp
cmp
out
iret
clc
lret
cmp
rorl
xlat
loopne
loop
ljmp
jmp
shl
lock
sti
loopne
add
clc
jmp
ljmp
out
out
int3
cmp
faddp
fdivrp
iret
rolb
test
idiv
lock
in
xchg
out
jmp
call
into
lock
xor
shr
fiaddl
orb
mov
das
int
fcomi
sti
cli
aaa
loope
xor
lock
jecxz
addb
cld
lret
mov
shlb
shl
jmp
ror
aas
shr
filds
jmp
jmp
xchg
out
out
call
cli
rcr
out
ror
in
hlt
out
idivb
mov
loopne
mov
jmp
call
ss
repnz
fstpt
rcr
add
faddl
mov
fucom
in
xor
into
in
int
aaa
xor
ret
out
fcomi
sti
movb
cli
mov
nop
test
lock
in
in
aam
aad
jecxz
into
cmp
test
lock
enter
aad
repnz
repnz
jecxz
rorb
ljmp
xchg
xor
xor
shr
cli
in
sar
stc
cli
xlat
inc
test
rolb
cld
in
std
call
jmp
jmp
jmp
cmp
iret
fdivp
cld
aad
lret
addb
in
out
hlt
lret
loop
icebp
cmp
out
ljmp
cmp
ret
jmp
fstp
fdivrp
nop
out
loopne
xor
xor
sarl
out
fmul
rcl
repnz
shl
out
mov
mov
mov
jmp
rcl
int
int
fstl
dec
push
aam
jg
roll
jle
mov
icebp
icebp
jmp
shl
out
leave
out
cli
test
fadds
cli
jmp
shl
aam
sar
sarb
loope
clc
iret
loopne
jmp
fucomi
cmp
addb
repz
aam
leave
icebp
in
jecxz
std
div
inc
aad
movb
mov
aam
int
in
out
cli
cmp
addb
hlt
clc
in
clc
ret
jmp
clc
ret
in
xor
out
out
loop
faddp
xlat
div
sar
mov
out
in
xchg
stc
test
out
ss
cld
cmp
neg
addb
out
mov
cmp
rcl
aaa
jmp
aaa
out
shr
aam
fmull
mov
jecxz
xchg
repnz
loopne
icebp
fcmovbe
ljmp
shl
jecxz
sti
cli
les
ret
jmp
test
mov
fxch
aad
fsincos
cmp
loopne
ret
shl
leave
in
std
shr
addl
lret
in
sti
fldln2
lock
sbb
in
cmp
out
sti
loopne
cmp
xchg
jmp
sarb
aas
fsub
rol
rol
rcr
loopne
clc
in
lret
addb
stc
xlat
out
enter
cld
int3
fcmovnu
stc
fcomi
std
xor
jecxz
mov
xor
lret
lret
cli
cmp
in
shl
out
mov
into
xchg
test
sub
cld
jmp
repnz
fdivp
stc
fsub
cmp
test
out
aam
iret
aad
out
repnz
int
fldl
int3
in
clc
int3
loopne
call
out
xor
xlat
lret
ss
loop
rcr
xlat
ffree
cmc
jmp
lret
loope
int
jmp
in
cmp
cmc
ss
jecxz
imul
fdiv
xchg
testl
out
shr
stc
cmp
int
into
shr
jmp
hlt
test
loop
jecxz
sub
decl
xchg
loope
ret
jmp
cmp
aad
addb
dec
loop
test
loopne
xchg
mov
ror
cmp
lock
cli
in
add
and
jmp
cmc
in
call
sti
cmp
ljmp
roll
jmp
fstp
repz
xor
cmp
ds
ds
cmp
loop
in
mov
and
lea
loope
in
int
imul
fcmovu
aas
aam
loop
repz
mov
out
lret
divb
aad
aaa
jecxz
xor
aas
out
in
cli
neg
vpand
jecxz
test
mov
ffreep
xor
cmp
into
ljmp
fiadds
loopne
mov
ljmp
xchg
fildll
ret
sar
xor
jmp
xor
mov
rorl
ret
int3
lret
ljmp
lret
int3
fst
cmc
lret
rol
out
out
sar
xchg
into
in
xchg
rclb
iret
lock
out
cld
aaa
cmp
test
ffreep
std
fcmove
jmp
aad
in
hlt
repz
stc
out
not
call
out
cld
xlat
mov
mov
out
or
fcomip
adc
stc
divl
aaa
fidivrs
out
out
hlt
out
mul
aam
test
ret
loope
in
sub
xor
aaa
jmp
cmp
fucomip
aas
fstpt
cli
mov
fmuls
xchg
in
iret
out
sti
rcl
in
out
sti
ffree
not
loope
ljmp
mov
fucomip
shl
repnz
repnz
cmp
fcomi
fsubp
ret
out
mov
or
in
int
xor
fmul
xor
iret
hlt
lret
loope
into
fcom
cmc
aad
out
leave
jmp
repnz
in
ret
repz
in
fst
xor
add
imul
jmp
lret
ret
enter
fcmovnu
dec
lcall
cmpsl
push
jg
roll
jle
cmp
into
icebp
aam
in
clc
or
rcl
sarb
int3
fsubr
std
clc
fadd
cld
hlt
fcomi
ret
sti
fadd
xlat
sti
call
fiadds
lock
idivl
adc
cmp
loop
enter
std
out
loop
imul
sar
call
rol
not
ljmp
nop
rorb
ret
ss
das
stc
cmpb
cmc
rcl
int
sar
mov
test
rorb
lock
cmp
repz
in
cli
loope
aad
cld
cld
ljmp
icebp
lret
xor
sar
icebp
hlt
int3
fsubp
hlt
cmp
clc
in
cmp
mov
fildll
out
out
lret
fdivl
cmp
clc
in
testl
loop
ret
shl
nop
icebp
sub
aam
jmp
rol
sar
lock
in
rolb
aam
clc
loope
out
mov
int3
xchg
repnz
hlt
xor
leave
icebp
cs
rolb
aam
fsub
xchg
nop
lret
jmp
fcmovbe
int3
jmp
rcl
fidivrl
fstpt
in
cld
loopne
out
xchg
fadd
ror
sti
in
xor
rol
xchg
repz
shr
ror
addb
fcmovb
sti
clc
loopne
and
shl
cmp
idiv
cmc
out
jmp
jmp
int
icebp
and
out
cmp
rcl
clc
loope
loopne
stc
div
jmp
orl
out
loop
in
aam
repz
call
fisubrs
jmp
imul
fdiv
cmp
cli
ljmp
mov
loope
fcmovu
fstp
in
lret
mov
dec
lock
repz
loope
sti
aaa
aam
cmc
inc
aad
xlat
mov
loopne
into
xchg
shr
call
ss
fsubr
neg
enter
cmc
movb
shl
jmp
int
out
xor
repnz
repz
in
ds
rcr
std
stc
xchg
or
int3
out
in
std
hlt
aam
out
das
cmp
hlt
ljmp
idiv
std
mov
stc
sti
int
ljmp
shl
xor
aaa
cmp
enter
ret
cmp
loope
fimull
filds
out
cmp
int
ss
idivb
loop
test
fdivrp
cli
test
cld
leave
lret
cld
lret
mov
in
out
jmp
lret
cmp
in
idiv
lret
int
sar
faddl
enter
mov
int3
aam
in
in
shl
xor
ds
sbb
aas
rcr
fucomip
in
jmp
rolb
ret
in
leave
xor
aaa
ljmp
icebp
clc
ret
ret
aad
out
cli
int
cmp
ret
cmp
hlt
imul
cmp
out
std
test
orb
cld
out
xchg
fiaddl
aaa
cmp
les
aad
cld
out
std
loop
cmp
test
xchg
enter
mov
loope
jecxz
imul
lret
cmp
std
cmp
ror
cmc
icebp
cmc
fdivrl
rorl
sti
lds
in
iret
in
repz
int
dec
lret
rol
vpaddb
in
lock
xchg
jmp
xabort
repz
rcr
test
fiadds
lret
xchg
fisttpll
jecxz
les
stc
in
fnstsw
cmc
ljmp
jecxz
xchg
nop
loope
ljmp
lret
rcr
mov
cli
mov
flds
int
xchg
mov
out
ss
loop
out
or
test
mov
sub
enter
xchg
leave
ljmp
out
loop
fstpt
std
cmp
cli
std
loop
int
in
mov
nop
call
shr
cmp
lock
in
not
out
loop
clc
fdivr
sti
ljmp
jmp
lret
mov
fildl
adc
jp
jg
roll
jle
lock
iret
xor
fstp
rcl
ret
sarl
mov
lret
out
mov
fcomip
or
xlat
fcomi
xlat
ds
adc
in
out
test
leave
idiv
mov
xchg
into
ror
cmp
xor
rcl
ds
test
xlat
aad
cli
xchg
into
loop
loop
in
shl
lock
xor
call
xor
fidivrs
jecxz
loopne
mov
filds
in
in
in
cld
cli
enter
iret
iret
aad
repz
out
fiadds
lret
sti
in
in
push
xor
lock
aaa
out
aam
jmp
cmc
int3
rol
repnz
test
out
iret
test
cmc
jmp
cmc
aas
lret
clc
addb
loope
in
lret
ljmp
enter
leave
enter
adc
jmp
loope
int
shl
rorb
lret
rcl
fucomp
aaa
fsubrp
adc
sti
test
test
ffreep
std
loope
shr
or
jmp
rcl
loop
int
icebp
ss
xor
cmp
aad
rorl
xchg
repz
mov
call
lret
out
std
int3
fdivr
cmc
stc
loope
ljmp
out
loope
iret
jmp
lret
cmp
int
cmp
lock
ljmp
jmp
lock
ss
cmp
repz
fcmovnb
cld
rolb
enter
lock
xor
cmp
std
divl
loopne
addl
fcomp
call
in
icebp
in
fcmovne
clc
fidivrl
aam
int3
hlt
clc
rcr
leave
leave
loopne
clc
cmp
xor
jecxz
hlt
out
clc
cmp
lock
sarb
aam
ret
int3
test
test
int3
repz
mul
in
jmp
sbb
aam
repnz
loope
in
fldl
jmp
ret
ss
ss
xor
cmp
mov
loop
mov
xchg
xchg
aam
jmp
int
rol
hlt
fptan
aam
repnz
test
sti
loope
sbb
mov
hlt
in
ret
fxch
icebp
in
xor
iret
dec
cmp
rol
lock
fimull
mov
into
mov
stc
aaa
leave
ss
cmp
aas
iret
aas
sti
loope
repnz
fmulp
mov
repnz
loope
call
cld
cmc
lock
not
into
shl
rcr
in
inc
fsubp
xchg
hlt
mov
nop
enter
icebp
out
enter
ds
ds
fcmovu
fld
loopne
lret
in
lret
out
cs
xor
out
cli
imul
iret
sbb
cmp
xor
fstp
in
leave
call
aaa
jmp
aad
out
fdivrl
cld
cmpb
int
fcmovnu
call
loope
call
loop
clc
lret
cmp
cmp
sbb
jecxz
fsubr
ret
test
cmp
test
cld
and
xlat
aad
fxch
int3
iret
out
idivb
jmp
mov
jecxz
sub
shl
fdivrs
fdivr
leave
out
fxch
in
in
fldl2t
out
cmp
nop
loope
decl
repz
aad
out
aad
rcl
rol
cli
std
in
neg
xchg
ljmp
xor
aaa
ss
adc
repz
loope
rol
fsubrp
loopne
fldl
stc
shr
jmp
std
cmc
loopne
shl
mov
enter
les
icebp
cmc
cmp
clc
ror
ljmp
loop
iret
in
fld
mov
idiv
lret
enter
out
add
xor
in
iret
into
fucomp
jmp
lock
shl
test
mul
cmp
sti
loop
mov
out
out
int3
adcb
xor
cmp
cld
aas
ljmp
repz
testb
out
xchg
hlt
icebp
shl
xlat
aad
sarb
lret
fcmovne
rorl
xlat
decl
call
add
int
fstp
fstp
mov
in
cmp
int
jg
roll
jle
fstpt
rol
in
in
xor
fimuls
xor
out
cmp
jmp
clc
cmp
clc
shl
cmp
mov
ret
into
nop
loope
mov
mov
aaa
divl
in
leave
out
repnz
in
shl
repz
mov
test
stc
into
in
xchg
xchg
mov
imul
leave
jmp
sarl
into
shl
rcr
test
jmp
rorb
xlat
xor
into
fcomip
out
ret
out
ljmp
mov
loope
xor
cli
repnz
lret
ljmp
clc
ret
xchg
rclb
ljmp
lret
imul
int
cmp
clc
hlt
cmp
out
jmp
lret
xor
cmp
enter
aam
xor
jecxz
xchg
cmp
sbb
xchg
adc
out
aaa
ds
clc
cmp
rcr
in
bnd
jmp
mov
mov
ret
fcomi
fcom
shl
lret
sar
cmp
filds
imul
out
jecxz
loop
sub
aad
cmc
aad
iret
xor
ss
out
cli
ljmp
ret
call
xor
fcmovb
aad
sti
leave
fcmovnbe
jmp
into
fcom
xchg
ljmp
fabs
shr
xchg
rol
fsubr
icebp
call
lret
loope
cli
addb
cmp
test
in
sub
loop
in
fmul
aaa
idivb
neg
cmp
shl
in
leave
fiaddl
in
out
lret
shlb
loope
aam
fcomi
std
shr
cmp
icebp
ret
in
loopne
leave
loope
out
out
loopne
out
iret
lock
cmp
jecxz
cmp
cli
lret
int3
cmp
ret
addl
stc
jmp
mov
iret
shrl
cmp
xor
in
sti
add
test
fmul
clc
test
jmp
fcmovne
orl
jmp
aam
shl
fnstcw
cli
cld
test
xchg
out
lret
mov
shr
loope
clc
lret
int
rcl
fidivrl
fadd
in
lret
ret
mov
call
hlt
out
jmp
lret
int
test
shl
decl
in
xchg
mov
cli
enter
aam
lret
lock
test
stc
mov
jmp
into
in
lock
rcr
test
cli
ret
mov
mov
xchg
mov
ror
ljmp
out
icebp
aas
roll
out
mov
mov
fnstenv
in
leave
cmp
int3
cmp
addl
jmp
fcmovnb
lds
mov
out
lret
shl
cmc
fmul
ss
aam
add
test
mov
lret
loopne
loop
ror
ss
fbstp
lret
rol
cmp
test
stc
loope
div
int3
testl
rol
aam
rcl
fstp
ror
shl
cmp
call
cmc
fdivr
xlat
jmp
xchg
in
cld
ror
adc
out
loope
jecxz
cmc
sti
into
adcb
jmp
ror
ljmp
cmp
fisttps
mov
subl
call
int3
jmp
shl
icebp
in
faddl
movb
lock
fucomi
out
out
fcmovnb
iret
repnz
cmc
stc
mov
and
fiadds
aam
repz
jmp
fnstenv
call
xor
add
idiv
ljmp
sub
in
into
xor
cmp
into
cli
std
rcl
fdivr
fimuls
addl
out
int
jmp
not
lret
cmc
cmc
loop
and
in
std
fmulp
lea
shl
iret
loop
lret
int3
int
loopne
aas
sti
fst
fcmovnbe
ffreep
jmp
fildl
xchg
jmp
xor
cmp
je
mov
jmp
leave
rcl
ret
ffree
arpl
lea
mov
add
repz
les
leave
jmp
loop
shl
aas
fcomp
aad
leave
jecxz
cld
mov
rcll
leave
xor
in
aam
jmp
out
ret
xchg
call
stc
in
repz
out
enter
in
out
int3
ds
loopne
imul
loopne,pt
call
fmul
loop
call
leave
ljmp
lret
lock
sbb
test
fisttpl
out
shl
out
in
cmp
div
cmp
int
aad
and
and
nop
fsubr
cmp
out
jecxz
xor
aad
ljmp
aas
aam
xchg
fcmovu
loopne
in
in
das
stc
xor
cli
jmp
cmp
ret
xchg
mov
out
cmc
xchg
int3
icebp
nop
out
call
in
ror
call
jmp
shlb
int
shl
loop
ret
in
int3
out
test
lock
jmp
int
test
cld
iret
repz
loopne
test
out
int
stc
leave
fimuls
shlb
in
cmp
in
cld
cmc
cmp
repnz
fnop
mov
out
out
das
out
mov
idivb
lock
in
mul
aam
clc
aam
fld
mov
into
iret
out
repnz
loop
leave
cmp
shlb
ret
cli
jmp
std
out
and
mov
int
das
lret
repz
aam
jmp
shl
and
fucomip
mov
loope
loope
loopne
aas
xor
leave
imull
jmp
ss
ret
fdivr
in
jmp
clc
into
mov
mov
sub
ljmp
int
out
sar
loop
hlt
fldl2e
mov
nop
jecxz
in
mov
in
lock
cmp
out
shr
aad
leave
fmul
sbb
jecxz
shl
cli
cld
loop
cli
mov
iret
fadd
ror
cmp
repnz
aad
out
fsubrp
neg
mov
in
out
icebp
test
sarl
sarb
cmp
test
ret
std
cmp
cmc
idiv
out
jmp
xchg
out
fprem
jmp
cmc
cmp
int
div
iret
xor
test
lret
cld
icebp
aam
icebp
rcl
ss
cmp
faddp
loop
cmp
sub
stc
ds
xchg
roll
rcr
not
xbegin
rcr
rol
in
ljmp
fdivp
nop
jmp
repz
cli
not
into
lock
sbb
shl
cmp
enter
adcl
jmp
into
fpatan
lret
aad
xchg
stc
fsubp
into
iret
rclb
out
aad
out
cli
in
ljmp
in
fcomi
movl
orb
fcmovnbe
aam
cmp
std
sarl
fadd
call
mov
xchg
sti
rorl
out
jmp
hlt
cmp
shl
and
enter
or
xchg
in
mov
xlat
cmp
ljmp
in
rcr
not
clc
in
fcomp
in
adcl
xor
in
sub
out
out
hlt
lret
lock
aam
loop
in
loope
shr
leave
lock
hlt
lret
icebp
in
aad
fyl2xp1
lret
fcmovu
rol
rorb
cld
mov
aad
lret
shl
aam
ljmp
out
in
in
aad
cmp
iret
sti
into
mov
int3
jmp
fdivl
std
ffree
fdivrp
rolb
cli
out
push
test
int3
out
fcmovbe
fprem1
cld
ljmp
ret
loop
leave
mov
clc
test
cld
mov
xchg
jmp
xor
into
imulb
clc
cmp
fcmovbe
jecxz
cli
xchg
mov
faddl
xor
sub
cld
dec
cmp
stc
fstp
loop
cmp
ljmp
loop
aas
xor
rcl
rcl
clc
jmp
rcr
fnstenv
in
incb
pop
jmp
mov
jmp
into
rcl
rol
fcomp
lahf
mov
in
jae
jg
roll
jle
mov
xchg
in
lea
sarb
aam
int3
cmp
int
rcl
cld
faddp
test
mov
out
fimuls
xchg
jmp
xor
vpaddd
jecxz,pt
hlt
in
aam
xchg
rolb
mov
dec
iret
in
in
enter
loope,pt
repnz
jecxz
inc
rol
jmp
cli
mov
xor
in
mov
xor
cli
cmp
cmp
cmp
cmp
ror
orl
loop
xchg
repnz
sub
rol
icebp
in
out
cmp
aad
icebp
fcmovnbe
ret
lret
mov
repnz
out
shl
ror
in
sti
in
in
fcmovu
aam
cli
sbb
loop
test
mov
xchg
int
test
lock
aam
xor
int3
int
sbb
out
test
loope
fsubp
jecxz
out
test
ret
jmp
idiv
sar
lock
add
in
mov
xchg
in
aam
das
idiv
xor
cmp
xlat
xor
sar
clc
shl
ror
aam
std
xlat
mov
fdivp
addb
sar
in
ss
repnz
add
in
ljmp
xchg
iret
mov
lret
int3
int3
out
fdivr
ret
out
idivl
lret
mov
out
in
in
out
xor
out
out
imul
out
ds
mov
ret
faddl
fdivs
stc
cmp
sarb
repnz
sar
mul
aad
cli
mov
mov
jecxz
in
div
xor
repnz
fucomp
std
testb
frndint
std
mov
test
repnz
idiv
in
leave
cmp
out
fdivp
sarl
jecxz
sti
testb
xchg
lret
fsubr
lock
int
cli
cmp
sar
test
call
ljmp
call
fadd
xlat
int3
cmp
rcl
jecxz
std
aas
fcmovb
xor
into
jmp
iret
jmp
leave
call
sti
sar
lret
aas
enter
ljmp
cmp
into
repz
div
cmp
mov
in
stc
int3
iret
loope
xchg
repz
repz
cmp
loopne
int3
cmc
loop
fdiv
std
mov
jecxz
test
cli
lock
into
aad
xor
int
repnz
loopne
cmp
stc
stc
fisttpl
jmp
ljmp
lret
enter
cmp
iret
aas
in
cmp
ljmp
fstp
into
out
shr
into
ss
leave
int
ljmp
ret
xchg
repz
mov
iret
xor
cmp
fcomp
int
out
jmp
fldl
mov
mov
stc
nop
jecxz
xchg
shlb
std
neg
loopne
icebp
mov
rorb
hlt
xchg
iret
loope
xor
fdivr
cmc
in
cmpb
xor
enter
xchg
call
repz
jmp
cmc
aad
aad
cld
aam
clc
icebp
fsub
fcmovnb
faddp
orl
fimuls
iret
cs
lret
cmp
cmp
ffreep
ret
sti
repnz
hlt
xlat
fdivr
mov
orl
lret
cmc
sti
ds
cmp
iret
std
clc
cli
fsub
cli
mov
test
in
fsub
xchg
clc
ret
jmp
dec
cmc
aad
ror
repnz
test
loopne
in
int3
int
out
jmp
aad
fdiv
leave
int3
fsubr
call
rol
iret
shl
sti
and
sub
sti
mov
out
nop
out
xchg
fdivrp
bnd
enter
xlat
fcom
ljmp
ljmp
fscale
cld
int3
jmp
cmp
fdivr
shl
ror
or
fnsetpm(287
loopne
aad
filds
mov
aam
test
idivl
aaa
int
ss
out
out
in
mov
jmp
fucom
out
loope
ret
cmp
test
leave
mov
jmp
push
mov
sub
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
jmp
into
aas
rol
rcl
aam
pop
xchg
and
mov
mov
jle
add
lret
rol
lock
lds
aas
xlat
out
call
xor
int
cmc
cmp
rcr
fildl
std
xlat
in
fxch
mov
enter
jmp
aam
lock
repz
icebp
int3
icebp
shl
ffreep
std
mov
shl
stc
lret
dec
nop
into
out
loop
xlat
lret
fcmovnb
adc
cli
loop
incl
leave
xchg
out
cmc
out
shlb
icebp
divb
xlat
cmp
loope
cmp
loop
or
dec
test
jmp
out
shl
fsubr
int
sti
lock
int
cmp
ret
mov
testb
in
in
repnz
ljmp
out
in
ljmp
shl
xchg
stc
popl
rolb
jmp
jmp
fninit
cmc
ret
loopne
std
iret
shl
fmulp
sub
cli
leave
iret
out
std
test
xor
aam
fadds
fiadds
test
stc
divb
aad
lret
enter
jecxz
xlat
fcom
aas
fxch
fucomip
std
add
in
out
std
aam
call
xor
neg
in
xlat
lret
cmc
in
idiv
fsubp
sbb
int3
faddp
enter
hlt
xlat
aad
in
icebp
out
fmulp
into
neg
fdiv
cmpl
sti
out
movb
repnz
repnz
int
in
fucomip
iret
aad
icebp
int
jecxz
ds
stc
fcmove
cli
std
repnz
dec
divb
cmc
xor
iret
xlat
shll
fiadds
fildl
stc
call
sti
jmp
int3
repz
cld
out
aad
iret
int
loop
xchg
cli
cmp
mov
loopne
into
add
jmp
ljmp
int
test
loopne
hlt
test
fiaddl
iret
out
ret
in
in
out
cmp
out
loope,pt
repz
idiv
iret
cli
aad
cli
loop
int3
jmp
iret
in
call
in
lret
jmp
icebp
xor
sti
int
cld
sti
out
testb
sbb
hlt
ljmp
aam
out
and
ds
rol
ljmp
int3
leave
in
loop
fsub
xor
not
jmp
rcl
loope
addl
in
jecxz
decb
fidivrl
jmp
in
cmp
sarb
aam
test
sub
fucomip
mov
repz
das
in
repz
cmp
aaa
cmc
adc
cld
cmp
out
std
mov
faddl
mov
leave
xor
test
aam
loope
aas
fcom
rolb
loop
stc
fmull
in
clc
clc
out
lret
cmp
aam
lret
xor
aam
sti
testl
cmc
aad
into
aam
clc
enter
in
repnz
ljmp
jmp
cmc
xor
in
fdivl
sarb
cmc
fdivrs
ret
incl
aad
jmp
out
nop
shll
shl
ret
shl
call
into
clc
fcomip
ret
mov
mov
mov
rolb
xor
lret
jmp
not
repnz
in
decl
icebp
int
int
out
loopne
aad
cmp
fdivr
iret
hlt
clc
aad
into
out
jmp
jecxz
ljmp
or
ret
lret
icebp
sar
cld
ss
fsin
cmp
cmp
xlat
lret
leave
test
xchg
xlat
xor
in
out
cld
fnstcw
rcr
in
fdivrl
fst
ljmp
lret
fucomp
xchg
xchg
xor
cmc
cmp
idivl
faddp
xchg
ret
jmp
xchg
orl
idivb
std
shlb
sti
hlt
fcmovnbe
imul
not
xlat
or
ret
cli
mov
xchg
mov
icebp
sub
xor
hlt
clc
rcr
aas
rcl
rol
aam
xchg
leave
jecxz
inc
xchg
xor
xor
cmp
xor
ret
aam
test
mov
nop
mov
sar
test
int3
aas
cli
cmp
vpmulhw
les
call
xchg
lock
repz
jmp
in
into
loope
in
add
sti
clc
cmp
ror
jecxz
repnz
enter
lret
test
rol
shl
in
test
cli
enter
int3
xchg
mov
xor
aam
aad
xor
xor
cmp
in
out
call
nop
into
push
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sub
sub
mov
or
jmp
ret
fmul
fstp
xchg
aaa
pop
adc
int3
pushf
sbb
jg
push
add
loope
in
in
out
repz
cmp
cmp
std
not
std
mov
fisttpll
xchg
adcl
aad
xlat
aam
ds
xor
cmpl
orl
ret
ror
in
out
aam
div
std
cmc
iret
repnz
sub
int
loop
inc
xor
rol
stc
ffree
cmc
std
fcmovnu
call
incl
loop
xchg
repnz
cmc
into
lret
cmp
int
jmp
lret
std
ds
out
cmc
out
stc
fxch
iret
jmp
repnz
in
cmp
fsubr
cmp
out
int3
in
loope
cli
aam
xchg
mov
shrl
icebp
ret
in
out
ror
repnz
cmp
xor
xchg
out
loopne
cmp
in
xchg
ljmp
in
cmp
int
xor
clc
rcr
jmp
stc
stc
int3
out
xchg
ljmp
xor
pushl
not
cmc
cmp
ret
leave
ljmp
int
mov
jmp
sti
aam
loopne
sarb
fiadds
int3
jmp
fstp
sbb
xchg
lret
sar
into
sti
int
in
xchg
call
in
lock
xchg
test
in
aam
iret
fsubr
std
int
into
loopne
ret
stc
filds
in
xchg
ret
xchg
xchg
jecxz
lock
iret
jmp
enter
ds
cld
ret
cmp
in
lret
int3
lret
aam
fldcw
aaa
icebp
in
fcmovnbe
aam
xlat
xor
aad
mov
jmp
in
jecxz
incb
loopne
xor
out
divb
cli
fcomi
loopne
std
sbb
jecxz
mov
stc
jmp
xchg
leave
in
hlt
aas
icebp
fxch
cmp
rcl
ret
fcmovb
std
int3
icebp
roll
rcl
std
fdivrs
xor
cmp
ret
sar
in
xchg
lret
add
ror
mov
iret
in
xchg
sub
lret
cmp
cmp
stc
fiadds
out
hlt
addb
mov
repz
call
ljmp
fdivr
aad
call
fsubp
cld
lock
das
fidivrl
jecxz
sti
jmp
cmp
repnz
loopne
repnz
std
vpsubb
mov
fcmovnb
cld
adcl
cmp
in
ror
jmp
ljmp
xlat
ljmp
out
call
cs
enter
jmp
test
ret
fisttpll
jmp
in
lock
testb
fdiv
fnstcw
cmp
clc
enter
mov
std
shr
xchg
call
lret
repz
iret
decl
out
int
repz
test
call
hlt
jmp
cmpl
call
fucomip
std
leave
clc
mov
mov
int3
call
cmp
sti
cmp
fdivr
repnz
test
test
std
into
jmp
loop
xor
xlat
shlb
jmp
sti
ss
lret
cld
div
aas
movb
lret
add
fiaddl
in
xor
int
shl
iret
or
in
fidivrs
out
repz
stc
clc
jecxz
out
int3
ljmp
xor
xor
cmp
iret
push
fdivrl
fcmovnbe
leave
jecxz
leave
sti
jecxz
addb
shl
ror
icebp
icebp
leave
int3
into
sbb
shll
loopne
rcl
mov
loop
xlat
sti
ror
adc
aad
fdivs
rcr
iret
jmp
xlat
loopne
cld
ret
loop
xlat
jmp
in
out
lock
out
enter
cli
iret
ror
lret
shl
fstp
ret
filds
out
enter
fidivrl
fcomip
fcomip
into
std
hlt
fdiv
loopne
loope
mov
test
call
xchg
int3
icebp
mov
lret
repnz
cmpb
in
dec
jmp
xchg
out
loope
cmp
in
icebp
cmp
out
call
out
ror
xchg
pop
int
clc
aaa
fcmove
out
icebp
out
cmp
clc
loopne
test
aam
mov
cli
stc
int
cmp
fmull
aad
cmp
enter
in
shl
std
loope
jmp
xchg
in
fists
jmp
enter
jmp
ds
jecxz
test
addl
xchg
ljmp
clc
cmp
jecxz
into
cmp
cmp
loopne
rolb
xor
mov
or
mov
mov
adcl
add
xorl
jmp
ror
lret
int
int
bound
aaa
jb
jg
push
add
loop
mov
into
jmp
ret
jecxz
cs
repz
fadds
incl
xchg
test
repnz
xor
sar
cmp
xor
idivl
loope
shl
out
loope
idiv
xchg
test
in
in
ret
cld
hlt
fcos
xor
rolb
mov
addb
rcl
int
cmp
ds
aad
icebp
ds
std
cld
sub
out
fdivr
jecxz
repnz
out
jmp
cmc
cmp
fxch
in
hlt
icebp
sbb
jecxz
test
loopne
in
mov
iret
sub
test
into
fmulp
cmp
sar
out
xor
enter
neg
int
test
hlt
int
sub
cmp
lret
repz
std
int3
hlt
fistpll
xchg
xchg
loope
mov
xor
repnz
std
cmp
enter
in
cld
sar
std
clc
roll
in
xchg
jecxz
sub
ss
hlt
ljmp
ret
in
shl
sti
in
clc
mov
ljmp
lret
int3
ljmp
aam
add
cmc
sti
ljmp
jmp
jmp
out
stc
idiv
fidivrs
xlat
rol
rcr
repz
cli
in
ljmp
fldl
into
aad
out
flds
incl
int3
testb
cmc
test
call
jmp
fmulp
lock
ret
add
in
call
int
ljmp
out
stc
iret
neg
cmp
clc
repz
in
xchg
ret
clc
loope
xchg
lock
aad
ljmp
xlat
ffree
fucomi
shr
out
jmp
loope
popl
xor
int
out
out
aam
aam
rcr
aas
icebp
jmp
fdivp
dec
in
out
call
divb
div
fucomip
clc
fnstenv
sti
aas
fdiv
out
loope
lock
ror
into
xor
vshufpd
cmc
lret
fidivrs
fincstp
test
test
out
in
mov
icebp
fsubr
xchg
iret
loop
cmp
cmc
sar
xchg
les
addl
icebp
lret
out
repz
repnz
out
addb
aad
xchg
loop
in
mov
shll
repnz
lock
out
cmp
cmp
sar
lock
lret
aad
iret
mov
fcoml
in
cli
xor
iret
call
fstpt
cmc
cli
shl
in
in
fcomip
jmp
repz
int
sti
shr
icebp
mul
cmp
fndisi(8087
sti
std
idiv
jmp
mov
loopne
rcl
ss
repnz
repnz
into
icebp
cld
fadd
rcr
leave
in
int
into
mov
jmp
lret
enter
aas
sub
hlt
aas
mov
enter
leave
std
rolb
divl
int
xor
sti
clc
cmc
sar
cmp
hlt
repnz
inc
out
sti
call
int
rol
aad
jmp
fucomi
xor
fdiv
test
loopne
rcr
loop
loop
fadd
loope
xchg
jmp
aaa
xor
in
cmp
out
ret
iret
repnz
ret
enter
lock
test
out
cmp
xor
cmc
xlat
filds
mov
in
loopne
jmp
xchg
lock
call
aam
leave
cmp
cmp
cmp
or
cmc
mov
lret
mov
xchg
xchg
aas
xor
lret
aaa
ss
std
in
repnz
mov
cld
loopne
ret
cli
xchg
ljmp
out
xor
jmp
mov
fmul
ror
shl
out
clc
xlat
iret
cmc
ss
stc
hlt
ds
loopne
fsub
stc
in
ljmp
lock
cld
aam
shlb
loop
aaa
cmp
hlt
rcr
div
out
leave
or
int
lock
loope
hlt
lret
call
jmp
fmulp
loop
out
out
hlt
xchg
int
sti
out
fistl
fdivs
clc
rcr
cmc
fdivrp
stc
aaa
clc
cmp
jecxz
mov
shl
cmc
mov
and
in
mov
stc
cmp
int3
ss
cmp
ret
lret
mov
cld
mov
incb
lret
jmp
div
shl
cmp
in
cmp
out
int
lock
xor
fcmovne
not
ficoms
mov
int3
arpl
sub
mov
mov
add
mov
xor
negl
movl
adcl
jmp
ror
int3
mov
cmp
jne
jle
add
into
test
cmc
ds
mov
loopne
jmp
fxch
sub
cmp
ror
cmp
icebp
cmp
fdivr
test
in
mov
lret
hlt
in
jmp
out
lock
cld
fdivr
fsub
in
out
nop
xchg
mov
out
test
leave
xor
fcomip
sar
test
loop
in
testb
loopne
jmp
leave
rcr
sub
not
in
out
stc
ds
call
out
ror
out
shl
shlb
hlt
fstpt
in
xlat
sti
into
imul
flds
sbb
fsubr
lret
loopne
aam
xchg
jmp
sub
rol
xor
in
idivb
fildl
lds
jmp
xchg
rorb
loop
in
into
cmp
in
leave
cmp
cmp
icebp
test
out
fadd
mov
jmp
jmp
fcmovnbe
shl
sti
loopne
sti
out
rcr
xlat
loopne
test
cmp
xchg
ljmp
aam
xor
out
clc
aad
aas
aad
cli
aas
cli
repnz
out
call
mov
ljmp
das
lret
jmp
int3
rcr
ret
not
mov
or
ljmp
hlt
xor
ret
ljmp
aam
cmp
std
jmp
fucomi
enter
out
out
clc
xor
aaa
loopne
out
faddp
repnz
in
jmp
ffree
dec
enter
loopne
ror
call
sub
sub
loop
shl
and
into
fcmovnu
out
xacquire
aaa
call
not
in
aad
fcomip
stc
xchg
rcr
enter
out
jecxz
lock
xor
shl
int
out
jmp
out
out
cmc
int
ret
cmp
clc
clc
rorb
call
loop
rcl
cmp
sbb
clc
ret
movb
xchg
clc
jmp
shl
call
addb
out
out
fcomp
mov
roll
out
repnz
ror
out
ljmp
shl
movl
rolb
iret
sar
std
aad
xor
jecxz
adc
not
jmp
lret
mov
rcl
xor
jecxz
xor
lret
out
rcr
cmp
add
vpaddd
ret
jmp
mov
nop
into
xchg
xchg
lret
out
iret
ret
jmp
fdiv
fsubrp
lret
cld
fsubrp
fsub
fucomi
orl
hlt
roll
xor
aaa
aam
clc
sar
mul
neg
in
not
fucomi
mov
out
decl
xlat
into
fnstcw
lret
iret
aad
ljmp
clc
xchg
sti
mov
in
ficoms
in
out
aaa
xor
std
fildl
cld
test
repnz
enter
lret
call
fsubr
jmp
cmp
jmp
cmp
loopne
out
in
jmp
ljmp
jmp
shl
in
fstpt
cli
loopne
aaa
fdivr
loop
ret
mov
mov
xchg
ljmp
cli
repnz
aam
rolb
xlat
out
mov
repnz
cmc
aam
jmp
fstpt
cmp
cmp
shl
ffree
in
enter
test
lea
shr
fnstenv
fnsave
fcmove
into
fidivrs
clc
cmc
in
xor
mov
loopne
out
shr
lret
mul
ror
int3
out
ljmp
ds
enter
ljmp
call
das
loope
fsubr
int
cmc
fdivrs
cmc
hlt
loopne
rorl
fisttpl
stc
ror
out
cmp
xor
fdivr
into
cld
std
jecxz
mul
jmp
mov
mov
loope
int3
into
out
out
fst
rcr
aam
ds
loope
mov
jmp
loopne
test
fcmovnu
cmp
stc
sti
dec
rol
loop
mov
fucomp
sti
stc
shl
into
fsubp
xchg
repz
aad
stc
rcr
cmc
fiadds
shr
test
loop
cld
lret
int3
das
in
iret
cli
cli
out
aas
int3
loop
fadds
xchg
call
out
aad
aad
out
cmc
shl
cmp
xor
fcomi
rol
loope
in
jecxz
loope
jecxz
in
out
lock
repnz
fsqrt
iret
ror
enter
iret
int
out
out
xchg
loopne
ljmp
repz
xchg
movl
sbbl
add
movl
jmp
cmp
movl
jne
jmp
aam
aam
ds
adc
insb
sahf
jp
jle
add
xor
fdiv
idiv
leave
ds
cmc
repnz
cld
out
loope
stc
out
loop
shlb
clc
in
fdivrp
sarl
aad
ret
fcomi
rcr
lret
stc
out
out
fists
not
xlat
repnz
lock
aas
cmp
jecxz
vpmovmskb
jecxz
loop
std
nop
out
fcom
in
xor
fdivrp
sti
cli
cmp
shl
std
xlat
add
enter
fstp
xchg
ljmp
in
cmp
icebp
fstp
fildl
div
mov
loop
cmc
out
rcl
aam
lds
out
hlt
sar
out
icebp
aam
out
aas
call
fmul
cli
addb
aam
rcl
out
out
jmp
fdivrl
cmp
cmp
add
out
fyl2x
mov
lret
sub
in
out
cmp
ljmp
fiaddl
addl
std
repnz
in
hlt
in
cli
lock
cmp
cmc
lret
sub
clc
xchg
jecxz
or
xor
jmp
cmp
not
sti
out
cld
ffree
jecxz
mov
in
into
mov
loopne
out
in
loope
stc
neg
xor
cmp
lock
aas
fstp
roll
xor
out
out
xchg
sbb
xchg
cs
sub
test
aas
ljmp
cld
shr
ljmp
rolb
repz
aaa
leave
fidivs
fmul
into
into
xor
out
in
jmp
mov
out
test
call
xor
in
clc
in
xor
stc
sar
test
in
mov
cld
lret
jmp
jmp
shl
cmp
call
ljmp
loop
jmp
ffree
mov
jmp
ljmp
fidivrl
ds
jecxz
jecxz
fstpt
vpinsrw
xor
out
clc
leave
hlt
repz
lret
aam
jecxz
out
xchg
mov
in
incl
jecxz
in
cmp
aaa
sbb
add
test
aad
hlt
xchg
fmuls
shl
xchg
stc
aam
out
cmp
clc
int
clc
iret
test
loope
xlat
out
xchg
mov
jecxz
rcl
fmul
bnd
fmul
sti
aas
fdiv
cmp
enter
out
xchg
out
ret
xor
rcl
into
cmp
add
cld
cli
xchg
hlt
cmc
lret
in
out
leave
lret
xchg
mov
int3
lret
int3
call
shl
fdivr
call
and
loop
repz
xchg
aad
ljmp
xbegin
ret
add
xlat
loop
in
jecxz
call
sub
in
fistpll
sar
fpatan
icebp
test
leave
aad
fdiv
mov
mov
in
cld
fistpll
sti
leave
sar
cmp
cli
hlt
sub
lds
in
mov
repz
call
shl
fnop
shl
cmpb
sub
addl
test
in
cmc
cs
lock
out
hlt
lock
bnd
std
call
ret
iret
loope
into
xchg
mov
ror
clc
aaa
int
cmp
stc
clc
lock
xchg
test
cmp
sti
fcmovu
xchg
out
xor
cmp
xor
iret
into
rcr
icebp
loopne
sti
xchg
ret
enter
in
lock
xor
repz
fadd
jmp
int
loope,pt
stc
std
xchg
cld
lds
out
xchg
xchg
sub
loop
divl
int3
cld
int
in
repnz
mov
or
loopne
xchg
fstl
shl
call
clc
xlat
shl
loopne
sar
sar
xor
lret
jmp
cli
jmp
sub
rol
lock
clc
loop
sbb
aad
testb
clc
addl
out
clc
int3
std
repz
bnd
into
std
fdiv
stc
cmc
aad
decb
test
lea
jecxz
ljmp
roll
fsub
stc
loope
mov
repz
testb
aad
out
cli
jmp
loopne
out
rolb
cli
lret
adcl
sar
enter
cld
ljmp
sti
faddl
decb
mov
repnz
dec
loop
fdivrp
cmp
lret
lds
xchg
repz
ret
aad
ljmp
and
fnstcw
ret
mov
mov
movl
mov
mov
mov
mov
jmp
int3
ret
int
mov
pusha
das
adc
add
add
loopne
cmp
out
fstl
int3
std
aaa
ror
aaa
rcl
loope
shl
xchg
cli
ret
or
xchg
and
aaa
xor
sub
mov
xlat
iret
rcl
filds
ljmp
sub
loopne
dec
in
hlt
into
cli
cmp
aas
hlt
hlt
ds
fsub
lret
testb
xchg
in
ljmp
shr
fsubrp
out
aam
rol
clc
addl
std
out
mov
in
test
call
lret
xlat
fucom
sar
fmul
iret
rcr
call
fndisi(8087
mov
out
std
nop
ljmp
rcr
hlt
idivl
iret
cld
clc
movb
in
lock
call
imul
in
xor
stc
aam
iret
into
repz
shl
loope
jmp
loop
in
xor
not
int
ss
repnz
fneni(8087
cmp
ret
in
neg
lock
icebp
std
out
call
repnz
cli
lret
out
aas
adc
not
cmpb
std
fcmovne
test
lret
ljmp
in
aad
in
ds
cmp
sti
mov
fisttpll
icebp
decb
aad
ds
adc
int
stc
iret
ret
mov
aam
in
lret
out
out
sar
rcr
iret
xchg
sar
cmc
cmc
in
flds
loope
ljmp
icebp
cli
div
fcmovu
rcl
ds
rcr
fsubr
test
in
std
ljmp
jmp
hlt
repz
loopne
fcomp
clc
decl
jmp
hlt
enter
xlat
ror
incb
icebp
sti
cld
ret
in
addl
shll
rol
loopne
jecxz
loope
ljmp
xchg
loop
fnstsw
loop
ljmp
in
out
adc
out
neg
int3
xchg
xlat
fimull
ljmp
out
test
cmc
filds
mov
cmp
loop
out
stc
xor
shr
sarl
int3
int
rol
fsincos
sar
idiv
xlat
jmp
jmp
icebp
iret
jmp
cmp
sar
repz
rol
call
xchg
xchg
fadd
mul
iret
loopne
loop
hlt
xor
int
cmp
rcr
stc
cmp
cmp
mov
leave
mov
xchg
xchg
faddl
jecxz
stc
ror
cmp
jmp
fcomp
fxch
loope
sti
rorl
out
nop
in
fimuls
sti
aaa
cmp
lret
cli
test
sarb
clc
aad
ret
loopne
sti
int3
xchg
cs
jecxz
cmp
iret
push
iret
rcl
aam
orl
out
out
loopne
icebp
cmc
hlt
into
cmc
jecxz
int3
icebp
shl
xlat
or
sti
loope
mul
xchg
mov
int
sti
mov
int
stc
fcomi
std
testl
cli
out
sbb
nop
mov
rcll
cmc
aam
sar
cmp
shl
cmc
mul
lea
in
in
into
shl
rcr
lret
cmp
cmp
cld
xlat
repz
rcl
jmp
out
nop
decl
test
cmp
shr
fcmovu
cmp
ret
leave
aam
in
in
jmp
test
lock
fdivs
rcl
aad
aam
cmc
cmp
std
xchg
sti
rol
ret
aam
cli
lea
mov
out
rol
xor
lret
aas
lret
xlat
out
out
frstpm(287
jecxz
loope
fcomp
enter
add
enter
cmc
out
repz
imul
xlat
icebp
cli
test
out
lock
in
repnz
lret
enter
xlat
ljmp
cmp
imul
int
xchg
hlt
sub
div
int3
lret
fucomi
lret
fsubp
rol
fst
cld
in
ds
fdiv
fiadds
xchg
ret
hlt
aaa
leave
in
shl
div
repz
cld
jecxz
sti
stc
xchg
jmp
icebp
in
xchg
ror
aad
xlat
vmovq
fdivp
rolb
aad
test
mov
xchg
in
mov
cmp
sar
jmp
add
cmp
les
int3
out
mov
in
out
xor
idivl
out
xlat
orl
lret
mov
fadd
loop
fcmove
leave
sbb
fmuls
dec
add
cmp
jmp
aad
aad
aad
aad
push
push
scas
and
pusha
cs
jle
add
add
test
xchg
in
loope
cmc
repnz
xor
xor
push
cmp
iret
mov
test
aas
fmull
lea
jecxz
fsubp
sbb
ret
aas
faddl
lret
addl
xor
loopne
aam
lret
mov
call
repnz
xchg
int3
out
sub
fcom
jmp
loopne
cmp
fsin
aad
ret
xchg
cld
fcmovu
movl
lret
aam
std
aad
repnz
sar
cmc
fcmovu
enter
ret
lret
mov
leave
mov
xchg
aam
in
icebp
cmp
icebp
lock
repnz
aas
out
rcr
lret
call
nop
int
test
hlt
loope
call
xor
cmp
test
mov
jmp
aad
ss
icebp
fucomi
aad
stc
ds
fdivrs
adc
into
int3
rorb
fbstp
jecxz
in
ss
xlat
repnz
shl
icebp
call
test
jmp
fimuls
cmp
int
cmp
icebp
out
not
into
ret
xchg
repz
addb
jecxz
sub
lock
ss
in
fsubrp
ljmp
aas
cmc
cmc
mov
jmp
cmp
lret
jmp
xor
jmp
fdivr
into
in
cmc
xlat
std
xchg
jmp
loop
int3
int3
repnz
xlat
cli
out
icebp
leave
out
sar
fucomp
cmp
in
into
mov
int3
lds
fdivr
int3
int3
aaa
shl
into
icebp
cli
fadd
mul
enter
in
fucomi
lret
out
iret
hlt
cli
jecxz
icebp
fdivl
clc
sar
clc
fsub
out
sar
filds
sar
out
hlt
loopne
xor
in
lret
not
shl
rcr
out
out
jmp
aad
in
xchg
ret
icebp
clc
aad
stc
cmc
into
out
icebp
iret
loopne
out
xchg
ljmp
into
decb
cli
in
iret
fsubr
xlat
ss
fcmovu
repz
in
cld
cmc
ret
out
jmp
test
lds
lret
clc
rcr
aad
lock
clc
ret
iret
test
in
std
repnz
xor
sar
cld
fcom
clc
loopne
in
cmp
fdivr
jmp
loope
loope
call
jecxz
cld
ss
ds
fcmovu
in
repz
test
xchg
loope
std
repnz
aad
int
div
int
stc
lret
sti
in
cmp
in
out
xlat
aad
in
cld
enter
xchg
test
xchg
into
ss
sti
ss
cmp
aam
xlat
fildl
sti
mov
mov
xor
stc
lret
imul
shr
mul
aam
fcmove
testl
ljmp
lret
rcr
cmp
rcr
or
repz
mov
mov
ljmp
in
cmp
out
rcl
cmpb
lock
in
xchg
test
ror
xor
shl
cmp
lret
in
test
out
filds
loop
jmp
call
repz
hlt
testb
loop
hlt
testl
in
xor
out
shl
rcl
out
cmp
rcr
loopne
cmp
fdivp
cli
out
cld
in
call
loopne
test
aam
aaa
into
ljmp
enter
int
ljmp
sarl
iret
dec
push
cmpb
xor
cli
orl
lock
aam
into
xlat
cmp
call
sar
hlt
std
iret
loopne
cli
les
or
icebp
out
stc
ret
leave
cmp
neg
in
ror
aas
fiaddl
cmp
addl
mul
ret
in
stc
cmp
cmp
fdiv
test
jecxz
mov
les
repnz
call
xor
aad
sarl
into
cmp
fcmovu
fincstp
fdiv
aam
sti
out
into
rclb
cmc
iret
icebp
int
fincstp
jmp
loop
cld
test
in
stc
mov
sti
enter
hlt
xchg
iret
not
sti
into
lret
fldl
aad
repnz
cmc
xlat
in
sti
mov
loopne
jmp
ss
ss
cmp
cli
idiv
cmc
jecxz
out
sbb
neg
into
lea
repnz
jne
andl
mov
jmp
aas
into
lret
leave
aam
dec
jo
xor
or
jle
add
in
ljmp
cld
loop
fiaddl
hlt
std
cld
xchg
jmp
aam
xor
cmp
out
int
fnstcw
fiadds
test
out
loop
xchg
xchg
lret
repz
aad
cli
rol
cmp
filds
mov
adc
out
sti
in
stc
repz
fxch
test
sti
cli
shl
loope
ds
xchg
fimuls
jmp
lret
xor
fcos
jmp
lds
stc
cld
rcr
fimuls
out
call
clc
loopne
std
cmp
les
cld
cli
int
in
and
fsubrs
icebp
repnz
ss
fildl
lock
ret
mov
aas
fdivr
out
test
in
fcmovnbe
xlat
aad
cmp
out
cmp
in
ljmp
in
lret
test
in
xchg
ret
loop
ljmp
sti
shr
ds
in
xchg
addl
repnz
call
lret
fucomi
cli
int
fmul
shr
incl
out
mov
aad
xor
xor
aam
jmp
repnz
xlat
in
cmp
cmc
lret
test
xchg
sti
fsubr
xchg
mov
in
aam
cmp
cmp
cmp
jmp
sti
icebp
iret
stc
ds
mov
xchg
fndisi(8087
lret
test
lret
fidivrl
shr
rcr
xor
out
mul
ret
orb
xchg
int3
mov
in
test
loopne
aad
aam
stc
xabort
aad
orl
ret
ror
cmp
repnz
repnz
int
rol
mov
fcmovnb
jecxz
cld
sub
and
aad
fstp
call
cmp
cmp
xlat
test
fldl2t
lea
shl
cmc
xlat
cmp
fucomi
jmp
fdiv
iret
rcr
aad
fcmovu
mov
ljmp
sub
fldt
icebp
cmp
cmp
inc
loopne
movl
xchg
iret
jmp
stc
cli
out
cmpl
cmp
out
xor
lock
xor
xor
hlt
ss
stc
in
ds
addl
add
in
shr
rcl
ret
xor
shr
in
shl
imul
aad
xor
fcmove
cld
mov
adcl
jecxz,pn
into
xlat
rcr
in
rolb
cmc
rol
les
orl
in
cli
out
out
inc
sti
rol
clc
loope
jecxz
loope
mov
mov
repz
mov
loope
ss
test
cmp
ret
idiv
std
lret
test
sti
in
in
shl
rcr
out
sar
cli
xlat
repz
lock
ds
repnz
jmp
add
out
jecxz
rcl
ror
aad
out
loopne
flds
out
hlt
sti
cld
fimull
lret
sar
shr
ljmp
xor
aaa
lock
cld
aad
flds
int3
into
mov
loope
xchg
int
xor
lret
out
rcl
lret
cld
or
repnz
loope
xchg
sti
nop
addb
in
lret
icebp
ror
fsub
test
aad
loope
ret
out
cli
test
leave
nop
decl
cmp
xor
int3
jmp
jecxz
repz
testl
repnz
sar
mov
out
aam
aam
out
shr
out
stc
rol
xchg
repz
ljmp
mov
in
lock
aam
icebp
into
xor
ret
test
roll
lret
cmc
int3
lret
cli
cld
ljmp
out
repnz
in
in
sti
lret
loopne
repnz
addl
loop
repz
call
out
out
hlt
cmp
hlt
cmp
test
xchg
out
mov
in
hlt
mov
jecxz
xor
leave
lret
hlt
fucomp
cmp
repnz
ds
neg
cld
loopne
mov
sti
orl
xor
repz
loop
in
stc
test
xchg
iret
out
fcomi
cmc
jmp
hlt
out
xlat
iret
fdivr
fidivrs
loopne
cmp
std
sarl
clc
lret
in
fcmovu
leave
call
in
xor
xor
enter
cmp
fstp
aam
cld
loopne
movl
test
fsubr
fildl
ds
mov
mov
jmp
int3
ret
int3
int3
sahf
pushf
gs
add
add
add
xchg
or
mov
icebp
into
xor
lret
out
out
fcomp
test
xchg
mov
clc
jmp
out
lret
mov
shr
ror
int
xor
test
loop
xchg
cli
lret
iret
xchg
aad
fcmove
repz
hlt
in
cmp
fldl
in
jmp
mov
cld
sti
bnd
ror
icebp
shl
hlt
std
iret
fnstsw
aas
into
shl
neg
stc
test
icebp
fucomi
loope
sbb
mov
xor
in
cld
test
stc
icebp
cmp
cld
rcl
in
loop
mov
lret
dec
out
out
shlb
xor
cmp
fstp
enter
xlat
icebp
in
mov
jecxz
jmp
xlat
aad
leave
leave
aad
in
cmp
or
cmp
les
into
mov
cmp
shl
mul
aad
shr
cli
lret
shl
cmp
icebp
repz
call
leave
xchg
loopne
out
vcvtdq2pd
in
lret
fsubr
cld
loop
aam
test
xlat
std
ljmp
into
mov
out
hlt
sti
xor
cmp
shl
out
aam
hlt
ljmp
lret
fiaddl
ljmp
fdiv
aam
repz
repz
hlt
filds
cli
std
jecxz
loopne
xor
cmp
xor
rcl
ror
xlat
not
cmp
cmp
in
mov
cld
sti
in
fsubrp
aam
loopne
icebp
stc
lret
std
addb
loopne
mov
out
enter
nop
ljmp
icebp
ds
in
cmp
xlat
add
fsubr
ret
mov
xchg
out
int
xchg
icebp
inc
call
fdivrs
in
fistpll
xor
aas
loope
out
rcr
out
loope
lret
xchg
fcoml
ss
aaa
jmp
fucomip
shl
filds
cmp
fildl
int3
sti
call
enter
cmp
neg
hlt
jmp
mul
cmp
shl
test
int3
lret
fnstenv
enter
shl
sub
test
repz
neg
in
fdivrp
jecxz
shl
jmp
out
xor
sti
cmp
out
lock
ds
clc
test
faddl
lret
push
in
icebp
mul
in
call
aad
lret
sar
testl
out
mov
xlat
ret
fdiv
call
shl
fndisi(8087
in
out
int3
cld
mov
test
cmc
ror
shl
cmp
sar
fldpi
rcr
jecxz
cld
sti
jecxz
test
cmp
and
repnz
int3
in
loopne
in
std
fcomi
enter
loope
in
cmc
out
mov
cld
enter
jecxz
xor
loope
call
cmp
in
loope
cmp
rcr
fisttpl
in
loope
xor
stc
aad
fcmovnbe
ds
idiv
xorb
out
mov
xchg
in
or
in
xchg
mov
cmc
xor
xor
icebp
fdiv
cmp
ljmp
ljmp
ret
lock
into
xor
xlat
hlt
jmp
loopne
cli
into
in
test
loope
or
in
lock
xor
xor
fsub
fxch
in
out
out
enter
mov
ljmp
stc
shl
out
hlt
icebp
ljmp
sti
cmc
cmp
in
addb
neg
repz
repz
hlt
cmp
int
cmc
lock
test
clc
jecxz
fisttpl
lret
ret
out
iret
cli
fdivrp
hlt
cmp
cmc
ret
out
stc
in
jmp
enter
lds
aad
shr
cmp
sarl
ret
into
fucomi
and
call
xchg
xlat
in
shl
xor
aas
dec
cmp
cmp
sti
orl
std
loop
in
std
xchg
and
imul
cli
leave
repnz
flds
cmp
ds
xchg
aad
enter
fsubr
div
in
xor
out
idiv
clc
loopne
fiadds
fsub
lret
test
loop
repz
int3
jecxz
cmp
icebp
loopne
loopne
aad
clc
in
aas
aad
fst
and
fistl
jmp
aam
out
ss
sarl
out
test
call
adcb
sar
sub
int3
ljmp
cmc
fcmove
mov
lock
jmp
xchg
in
lret
sti
in
int
lock
in
jecxz
add
jmp
lret
into
fst
fstp
bound
xor
jle
add
repnz
imul
incb
std
xchg
fucom
das
in
iret
iret
fmul
icebp
int3
mov
ret
cli
cmc
fstp
mov
stc
add
xchg
ljmp
hlt
ror
call
cmc
stc
aam
cmp
testl
in
not
fcmovne
in
out
fxch
cmp
hlt
add
fld
sub
ret
in
fisttpll
aad
xor
add
out
cld
test
mov
xchg
rol
xor
lds
fscale
xor
adc
out
and
clc
mov
les
int3
call
cmp
cmp
cmc
fcmovne
sti
out
loope
cmp
rol
loop
ljmp
cld
lock
shl
in
ret
xor
jmp
testb
aad
aam
fprem1
fsts
int3
loop
into
cmp
ss
cmc
out
sti
aad
cld
repnz
mov
cld
aas
fmul
shl
lret
loopne
aad
lret
out
out
rcl
cmp
hlt
lock
cmp
not
clc
div
out
fsubr
lock
cmc
xor
out
in
sbb
loope
cmp
stc
sarb
xlat
ror
out
stc
test
mov
xchg
int3
hlt
out
ret
xor
cmp
clc
cmp
cmp
idiv
decb
in
mov
mov
leave
stc
fcmovne
in
out
stc
jmp
ljmp
enter
cmp
ljmp
hlt
xor
int
lret
leave
xor
idiv
fidivrs
in
test
or
icebp
mov
xor
in
icebp
fnstsw
fcomip
addl
fimull
lock
ret
xlat
out
rcr
idivl
repnz
xlat
out
repnz
jecxz
xlat
ror
lret
fists
lret
mov
out
rcr
jmp
out
rol
test
sti
testb
out
out
enter
jmp
in
lret
xor
jecxz
xlat
jecxz
repnz
add
lds
int
loope
lret
cmp
cs
ds
aad
shl
xlat
fxtract
cli
mov
jmp
xchg
aad
into
clc
lds
aad
sub
sti
ret
sti
in
fistpll
and
out
out
out
lea
xlat
cmp
fadd
lret
loope
out
cmc
stc
idiv
std
out
in
ret
fiaddl
into
test
aad
loopne
cmp
shl
repz
jecxz
fucom
fadds
in
icebp
enter
jmp
test
and
orl
cld
in
xchg
ret
loopne
xor
sti
xor
ror
ds
cmp
rcl
icebp
xchg
rorl
in
idivb
lret
hlt
rcr
ds
aam
call
in
jmp
fistl
not
shll
cmc
jmp
xlat
loopne
shl
loope
fmull
out
lea
cmp
cld
int3
cmp
iret
iret
icebp
fstp
repz
ljmp
int
jmp
rcl
imul
jecxz
cmp
lret
repnz
mul
cmc
loope
cld
sbb
out
mov
lret
sti
in
cmc
fsubrp
test
icebp
shl
mov
int3
test
jmp
leave
xor
cmp
icebp
loope
int
xlat
jecxz
std
jmp
cmc
lret
jmp
mov
jmp
out
aaa
icebp
icebp
aaa
in
cmp
in
clc
in
mov
clc
cli
in
stc
clc
cmp
repnz
test
in
cmp
lret
loope
aam
neg
hlt
idiv
lret
in
call
in
out
icebp
jmp
cld
sti
icebp
lret
repz
in
in
testb
adc
call
ror
iret
ret
into
rcr
fucomip
rcr
jmp
sar
aam
xchg
fdiv
out
enter
out
xor
aaa
iret
in
int
cmp
ss
lock
hlt
rol
loopne
test
sar
xor
fldl
jmp
cmp
leave
in
in
in
fistpll
aad
test
out
shl
into
fdivrp
sub
xlat
ljmp
out
sarl
clc
idiv
loope
add
loopne
out
repnz
repnz
cli
xor
cmp
xor
xlat
shl
fucom
lock
fcmovne
std
in
rol
out
fcmovbe
aaa
cmp
fdivrl
int
iret
lock
loope
loopne
jmp
mov
xchg
call
push
jmp
int
iret
rcl
aad
inc
xor
sub
pop
add
add
call
jmp
fldl
sti
int3
test
call
imull
out
shl
ljmp
lock
sar
fdivr
call
orb
shr
clc
lret
ret
cli
aas
cmp
cli
fstp
loope
test
mov
ljmp
ror
fldl2e
xlat
ljmp
test
jecxz
fcmovnu
fimuls
xor
xor
shl
ljmp
shl
repnz
flds
fdivp
das
leave
xor
cld
ss
lock
icebp
cmp
testb
mov
out
xchg
out
in
shl
fdivr
sar
fadd
aaa
out
loopne
out
enter
ljmp
in
ss
xor
icebp
cli
enter
addl
ret
incl
faddp
iret
lock
out
in
cmp
out
addl
mov
out
lret
out
int3
ret
hlt
cld
lret
ss
cmpb
enter
aam
int
cmp
shl
in
out
cli
leave
cmp
repnz
out
std
fdivr
ljmp
lret
inc
in
out
sub
xor
out
repnz
ljmp
aas
lret
jmp
jecxz
shr
mov
cmc
call
out
roll
out
faddl
loopne
test
out
loop
jmp
cmp
into
out
out
rolb
aas
cmc
shl
hlt
int
xlat
clc
jecxz
mov
xor
lret
int3
aad
hlt
rcr
out
hlt
ret
or
xlat
clc
cld
int
std
loop
out
into
sub
out
cmp
cmp
cmp
lret
flds
cmc
cli
loop
clc
ljmp
hlt
aam
enter
icebp
cmp
into
ffreep
fsin
test
xchg
out
mov
loop
loop
repz
ss
xor
std
loop
aas
fdivr
test
sbb
fdivr
lock
iret
xchg
hlt
cli
aad
stc
jmp
ss
cmc
jecxz
faddl
repz
test
lock
cli
aaa
hlt
imul
int
cmp
jmp
xchg
orl
jmp
xor
call
out
cmp
mul
shl
call
in
out
xor
xchg
stc
neg
cld
fcmovnu
cmp
cmp
vpslld
xchg
sti
fxch
xor
aas
hlt
cmc
aaa
ljmp
cmp
aam
rol
stc
loope
test
int
fcmovnu
in
aam
int
fsubr
in
push
stc
idiv
loopne
loope
movb
fcomp
nop
rcll
jmp
lock
clc
int3
xlat
sar
iret
sti
test
fld1
jmp
test
xchg
int
repnz
in
fst
aam
sbb
out
cmp
xlat
ds
test
xchg
lret
cmp
repz
hlt
repnz
in
out
call
stc
loope
cli
in
fcmovu
lret
int3
std
into
int3
out
cmp
neg
aam
lock
cmp
vpmovmskb
cli
fsub
lret
iret
in
repnz
icebp
xchg
aaa
icebp
leave
iret
icebp
std
iret
dec
lret
incb
mov
fisttps
mov
repz
jmp
fcomi
sti
shl
shl
in
test
in
jecxz
out
lret
int3
call
ljmp
repz
test
xchg
fucomp
xor
cmp
test
lret
jmp
fcmovu
cmc
fidivrl
ljmp
clc
int3
shlb
into
jmp
xor
aas
fcomp
jmp
fucomp
mov
mov
lret
in
lret
ljmp
lret
stc
cli
cmp
addb
aas
enter
mov
leave
ftst
sar
cld
clc
ljmp
idiv
xchg
jmp
jmp
int3
lea
jmp
not
flds
sti
ret
mov
fldz
sti
out
in
aam
in
sarb
xor
fucomip
rcl
xchg
ret
jmp
xchg
into
rcl
sub
icebp
jmp
std
shll
cmp
loopne
repnz
faddl
cli
fsubp
mov
mov
call
jecxz
cmp
ss
aaa
xor
test
sti
cli
fadd
in
or
loope
sub
add
inc
or
out
add
add
aad
fisttpll
sub
sbb
add
add
fxam
in
in
xchg
hlt
jecxz
in
into
into
cmp
lret
cmp
sub
and
rol
sti
aad
cmp
and
loope
lret
cmc
lock
cld
ds
cmpb
cmp
sarl
stc
xchg
xchg
orb
out
aaa
fdiv
in
cmp
sti
ret
repz
fmul
mov
xlat
out
in
int3
mov
enter
xor
sti
sbb
sarb
movl
addl
aaa
xor
sti
fstp
loopne
sti
sti
leave
xchg
in
stc
out
ror
iret
mov
stc
in
in
addl
aam
int3
cmp
test
enter
iret
shr
xor
int
loope
add
mul
mul
adc
aam
in
fmul
popl
xor
imul
lock
shr
cmc
fdivr
add
aam
test
xchg
sti
loope
loopne
out
ljmp
and
hlt
fiadds
rorb
repz
xor
leave
icebp
fiaddl
stc
fdivrp
orl
fldl
int3
aam
jmp
out
cli
iret
lret
and
test
cmc
xchg
cli
iret
fstp
call
in
cmp
enter
aas
stc
out
icebp
cmpb
out
cli
iret
cli
repz
jecxz
out
xor
fdivrl
cmp
loopne
fcom
frstpm(287
shl
sar
out
in
and
and
stc
xlat
call
cli
repz
sti
jmp
out
xchg
out
int
jmp
lret
ds
loopne
clc
std
test
out
ftst
xlat
mov
mov
mov
shl
fcmovne
iret
fdiv
jmp
sarb
sti
int3
loopne
leave
xchg
out
jmp
xchg
shlb
into
ljmp
cmp
rol
aas
cmp
aas
cmp
in
std
loopne
loope
out
icebp
in
sar
ror
call
aad
out
cmp
mov
mov
mov
out
lret
jecxz
xchg
aad
fmul
xor
leave
icebp
cmp
in
aad
cmp
xlat
aad
fucom
mov
out
int3
cmc
repz
xor
hlt
aam
cmp
clc
fmul
mov
fxch
movl
leave
icebp
lret
cli
repnz
icebp
sti
mov
ror
fcmove
sti
mov
aam
lret
lret
bnd
int3
idivb
neg
sti
rolb
loope
mov
test
das
ljmp
xor
and
repnz
ljmp
ror
in
leave
fdivrp
mov
loopne
xor
leave
in
icebp
repz
aam
repnz
loop
fmuls
xchg
cli
ljmp
out
xor
out
cmp
repnz
fucomi
in
shl
fcmovnb
cld
ret
in
cmp
call
ret
leave
out
xor
into
lret
cmp
lock
fstpt
mov
in
out
mov
loop
bnd
cmp
lds
neg
jmp
or
call
xor
xor
xlat
int
cld
lock
fcmovnu
fimuls
fucom
lock
cld
loopne
xchg
fcomip
sub
call
cmp
roll
loop
cmc
mov
shr
cmp
cmp
cmp
loopne
loope
mul
mov
jmp
fsub
addb
in
xor
int3
aas
cmp
aas
ds
cmp
imul
test
out
xchg
sub
out
int
aad
cld
into
cmc
sarb
roll
mov
imul
xlat
fisttpl
xor
not
xor
das
cld
cmp
xor
sbb
idiv
cmc
cli
out
int3
loop
enter
fdivl
fildl
mul
aas
icebp
cmpl
loop
cmc
loope
call
aad
fdivrl
repnz
loopne
std
nop
sti
xchg
sub
out
test
push
xor
test
out
loopne
fdivrp
xor
mov
aam
ss
fdivrl
fstp
xor
jmp
rcl
loop
leave
cmc
test
addl
xor
in
cmp
test
or
test
div
shl
cmp
sar
adc
jge
push
jb
jmp
cmp
jne
jmp
iret
lret
rcr
aad
int
jge
ja
shrl
jle
add
fdiv
cli
xlat
lret
rolb
hlt
xchg
out
iret
shlb
jmp
int
loopne
not
cmc
fsub
shl
xchg
lret
int3
xchg
in
lret
ds
repz
lock
icebp
fdivrp
xlat
call
mov
popl
call
stc
sti
cmp
jecxz
hlt
call
fcmovnb
mov
in
addb
out
in
fldl2t
or
jecxz
xchg
lds
out
fisttpll
in
rol
in
enter
iret
lock
cmp
call
in
jmp
sub
in
hlt
loop
stc
cmp
frndint
iret
repz
out
rol
repnz
cmp
out
lock
int
in
int
xor
ret
clc
out
cmp
rcl
and
xor
fmul
iret
jmp
cmp
testb
lret
out
hlt
stc
hlt
loop
ss
sti
fdivr
jmp
lret
xrelease
cmp
cli
cmp
ret
rcr
ljmp
xchg
and
in
clc
std
fcmovne
cmp
or
idiv
cmp
loopne
clc
jmp
mov
mov
fcomp
lock
jmp
into
icebp
aad
enter
fucomip
into
loope
into
xchg
xchg
ror
shl
sarb
iret
hlt
fdiv
fcmove
fimuls
test
leave
mov
push
mov
loope
sti
aaa
shlb
fdivrl
fidivs
repnz
cld
jmp
stc
mov
mov
mov
aad
int
shr
stc
aaa
hlt
ss
cmc
shl
fsub
in
lea
in
shl
orb
enter
hlt
rcr
cmp
jecxz
rol
sbb
xchg
loop
mov
ljmp
fnstcw
fmuls
jmp
sbb
leave
sarb
repnz
rol
aad
clc
loope
in
lret
int3
loope
iret
enter
ss
out
out
shr
cmpb
loopne
flds
enter
xchg
shl
jmp
shl
rcr
iret
cmp
rcr
loope
iret
test
sti
repnz
test
icebp
fdivr
in
shl
in
aam
fucomp
xor
stc
aaa
or
loope
decl
in
loope
mov
leave
out
in
shl
into
in
iret
int3
out
ds
loop
rcl
rcl
mov
rorb
not
xor
xor
neg
icebp
repz
iret
cmc
out
cli
loope
xchg
call
cli
std
cld
cmc
test
int
xor
aaa
aas
aad
cld
out
loope
rcr
call
testl
stc
repnz
neg
fmul
cmp
sar
xlat
fadds
xlat
cli
fisttpl
jecxz
cmp
fdivl
repnz
clc
jecxz
cld
clc
xlat
ds
or
testl
lock
aaa
cmp
cmp
cmp
cmp
hlt
not
enter
test
std
jmp
in
in
xchg
aad
repz
enter
out
fdiv
shl
shl
loope
xchg
sbb
in
xchg
out
fdivr
jmp
cmc
std
fiadds
lret
jmp
xchg
jmp
ror
lret
xlat
neg
dec
incl
aam
mov
fucom
lea
mov
out
cli
aaa
jecxz
cmp
cmpb
fsubp
loopne
loop
hlt
fcmovu
xor
lret
xor
ret
fdivs
in
sarb
rcr
fcmovu
sar
lds
int3
into
nop
call
jmp
repnz
lret
aam
loope
cmp
xor
shl
in
in
jecxz
lret
xchg
ljmp
fdivr
xor
jmp
std
cmp
sub
in
jmp
fisttpl
lock
icebp
not
jmp
fsubrp
cmp
clc
stc
int3
test
ffree
aas
mov
rcl
mov
clc
mov
jmp
cmp
icebp
xor
cmp
aas
cmp
cmp
int3
flds
jmp
cli
fscale
sub
xchg
xchg
cmc
cmp
div
imul
fistpll
adc
out
clc
hlt
int3
in
nop
mov
repz
call
cmp
call
cli
aas
std
into
inc
cld
rolb
loop
jecxz
xchg
int
xorl
lret
clc
jmp
cmp
clc
fsub
xlat
xchg
call
sti
loope
mov
call
movl
mov
mov
jmp
enter
int
int3
lret
xlat
ja
idivb
add
add
in
cmp
loopne
cli
sar
jecxz
jecxz
hlt
fiadds
lock
in
jmp
fmul
jmp
imul
inc
xchg
repnz
std
fiaddl
out
out
shl
fcomi
cli
lock
in
std
cmp
test
fcmovne
sbb
aaa
xlat
sub
call
cmp
aad
out
filds
xlat
jecxz
sar
incl
fadd
jmp
ror
aam
loop
sbb
and
xlat
ds
fimull
jecxz
in
iret
clc
xor
sar
std
out
call
std
in
fildl
jecxz
in
in
xchg
fisttps
ljmp
int3
cmp
int
aas
out
aam
repz
into
test
xchg
xchg
rol
icebp
sar
das
int
lret
out
in
loopne
cmc
aam
test
test
fimuls
mul
in
out
aam
cmp
mul
std
out
nop
addl
jmp
fmul
fucom
ffreep
mov
xchg
leave
jmp
cli
sub
out
iret
iret
ret
fsubrp
hlt
orl
out
fsubp
cmc
out
aam
int
lock
shl
std
lock
cld
cli
cmp
fucomp
xchg
int
loope
int
sub
xor
aaa
fdivp
clc
fdiv
clc
loop
sar
sti
aas
add
fdecstp
in
in
lret
in
lret
int3
ret
xor
fincstp
jmp
lret
cmp
fdivr
test
frstpm(287
xchg
ljmp
loop
enter
std
into
cmp
cmp
sarl
fcmovbe
ret
mul
nop
fucomip
in
out
mov
aam
out
aaa
test
fcmovnbe
lret
cmpb
aad
test
lret
xchg
adcb
icebp
xor
cmp
addb
call
mul
clc
test
or
fdivs
lret
int3
xorb
xchg
mul
aam
jmp
fucomp
ror
ljmp
into
int
loopne
lock
hlt
test
stc
hlt
clc
ljmp
in
xchg
enter
out
iret
repz
std
fistpll
shl
mov
fimull
loope
in
clc
repz
lret
int3
cmp
shr
ds
aam
ret
fst
ljmp
icebp
divl
loope
test
stc
lock
ds
mov
loop
loope
aad
in
out
ret
xor
cmp
lret
out
div
test
hlt
filds
stc
and
nop
xchg
loope
out
leave
rcr
cmp
std
faddl
rol
test
adc
in
test
leave
cld
cmp
in
iret
stc
int3
cmp
icebp
repz
ret
xchg
in
sbb
int3
out
jecxz
ror
ror
repz
cmc
stc
ds
int
ds
std
lock
fiaddl
cld
ror
ror
in
hlt
xor
ffree
icebp
shlb
ret
std
test
fcompp
popl
shll
loope
ss
xlat
out
int
fidivrs
fstpt
fidivrl
not
out
leave
and
lock
aad
shr
enter
aam
repnz
mov
leave
fdiv
mov
in
fldl
cmc
xor
xor
repz
fsubrp
cmp
or
shl
std
stc
loopne
int3
mov
xchg
rorl
xor
repnz
out
rol
test
xchg
decb
call
lret
aaa
cmp
aam
iret
cld
rcr
shr
xchg
aas
int3
mov
xchg
xchg
cmp
lock
aad
xlat
lret
in
addl
aad
nop
int3
icebp
fisttpll
jmp
aam
fnstsw
neg
ret
sbb
loop
mov
and
mov
clc
aam
fxch
sub
rolb
cmp
out
addb
int3
lret
repz
enter
out
sti
xlat
test
imul
loope
leave
mov
jecxz
shl
into
out
iret
aaa
cmp
stc
iret
icebp
fdivr
neg
xor
addb
loope
mov
out
in
ret
sti
fdivrp
jmp
cli
in
out
in
aad
idiv
in
loopne
jmp
mov
nop
mov
ljmp
int
into
in
out
int3
iret
lock
into
icebp
lock
jmp
in
sub
lock
mov
mov
xor
add
mov
lea
jmp
rol
lret
ffree
aam
mov
mov
dec
dec
sub
push
add
xchg
into
fcom
xor
shl
cmp
lret
icebp
xor
repnz
test
xlat
mul
mov
lret
int
ljmp
test
aaa
bnd
fnop
fcom
in
into
testb
lret
loop
out
out
xchg
lret
cmc
xor
ss
enter
cmp
not
fmull
mov
into
into
std
jmp
into
shll
xor
sti
std
cld
int
xlat
repz
loop
repz
mov
rcl
fcomp
ror
stc
fidivrl
repz
aad
cmp
jmp
faddp
out
jmp
sarl
shl
aad
jmp
fcmovnu
fadd
mov
dec
out
mov
or
fbstp
xor
shl
cld
aad
cmp
xlat
and
jecxz
in
loopne
xchg
lock
shl
shl
int3
jmp
xor
cmp
xchg
shl
std
call
fucomp
xchg
repz
xlat
fxtract
dec
push
fcomip
cmc
call
jmp
movb
call
stc
int3
xor
out
fcomip
aam
fiaddl
ret
mov
loope
jecxz
roll
in
not
int
cmp
in
lret
ffree
shl
cmp
in
fdivr
lock
lret
into
xor
aad
sub
int3
fnstcw
lock
idivb
repz
mov
icebp
sti
out
mov
in
in
cmp
cmp
loop
out
xor
clc
int3
xchg
mov
mov
fcom
lret
out
xlat
lret
ret
clc
out
clc
icebp
fucomp
test
xchg
jecxz
in
test
ljmp
cmpb
xor
rcr
call
fadd
icebp
mov
jecxz
mov
jecxz,pn
aam
fucomp
int
cmp
in
fdivrl
repz
shr
test
lea
jmp
repnz
cmp
aam
adc
fsubp
mov
out
rcr
enter
jmp
xor
std
xor
cmp
loope
fcomp
sar
mov
stc
loope
in
xchg
xchg
int3
aad
rol
cmp
out
xlat
lret
loope
rcl
jecxz
out
lock
roll
in
int
dec
sar
ds
repnz
mov
jmp
jmp
nop
rclb
test
divl
leave
lret
rcr
out
roll
cli
loop
xchg
cli
out
cmp
cmp
fsubrp
icebp
sar
icebp
repnz
cli
sbb
jecxz
icebp
loopne
out
lret
testb
cmp
roll
out
shl
roll
mov
mov
in
out
rol
xor
fyl2xp1
out
shl
rcr
sub
ret
rol
cmp
in
stc
jecxz
mov
cmc
cmc
fcmovnbe
aad
leave
cmp
int
shl
repnz
out
fcomip
hlt
xlat
enter
aam
cld
aaa
xlat
int3
cmc
and
addb
out
mul
xor
icebp
shll
cmp
lock
cmp
fsubr
jecxz
repz
enter
lock
in
mov
in
icebp
xor
ret
in
enter
cmp
hlt
inc
mul
loope
or
idiv
sbb
repnz
ljmp
stc
cmp
cmp
icebp
test
jmp
mov
icebp
out
into
out
lret
cmp
xlat
rcr
cmc
hlt
out
test
xlat
test
loop
clc
enter
xor
xlat
bnd
add
jmp
in
ljmp
out
xor
in
xor
loop
fdiv
fsubp
aad
test
fisttps
iret
int3
aas
repnz
xor
aas
fcomi
int
test
in
sti
fadds
fsubp
in
test
ror
into
xor
fst
xlat
in
sti
icebp
fyl2x
stc
cmc
loopne
mov
shl
clc
lret
lret
out
shl
icebp
xlat
loop
shl
aad
cld
in
fsubp
loop
fcmovu
call
int3
cli
out
fnstsw
hlt
cmp
jecxz
div
in
xlat
ljmp
mov
jecxz
jmp
xchg
cmc
icebp
leave
xor
cmpl
in
fdivr
les
test
mov
loope
sub
xor
lock
icebp
cld
call
repz
fmuls
int
loopne
imul
loop
ljmp
in
jecxz
in
aam
loopne,pt
inc
mov
inc
mov
add
add
int
xlat
add
add
add
add
jecxz
fucomip
mov
fmull
lret
neg
leave
fucomp
in
idiv
sar
cmc
repz
jmp
xchg
fsubr
out
cmc
leave
in
idivl
xor
cld
fsub
repz
leave
lock
orb
vpmulhuw
enter
xlat
ds
shl
roll
fprem
sar
cld
fiadds
xor
in
cmp
int
ret
rcr
fdivp
icebp
idiv
in
jecxz
icebp
mov
repnz
cli
enter
rcr
cmpb
lock
lock
cmc
sti
fimull
repnz
xor
repnz
shlb
leave
xor
in
aad
aam
enter
jmp
fiaddl
mov
out
out
call
cmp
loop
lret
roll
loop
lret
in
test
enter
leave
cld
sar
xor
iret
les
dec
out
loope
jmp
call
sti
jmp
lret
cli
ljmp
fld
ljmp
cld
incb
loop
stc
cs
call
neg
shr
loope
aam
leave
test
loop
push
das
int3
repz
shlb
std
aad
iret
aam
rcr
std
add
ret
out
mov
mov
fiaddl
aad
les
into
in
in
testl
mov
rcl
sub
xor
aam
in
loopne
aam
int
and
roll
in
leave
adc
leave
lret
ljmp
cmp
or
fiadds
lds
sbb
jmp
int3
fldlg2
cmp
cmp
aas
aas
out
loopne
aad
xchg
std
sub
out
into
into
icebp
shr
xor
fidivrl
out
jmp
in
in
fucomi
cld
shl
clc
cld
and
sbb
clc
in
std
fsubr
or
jmp
call
cld
or
cmp
and
leave
faddl
adcb
icebp
jecxz
neg
test
std
iret
enter
lret
sti
sti
xchg
repz
mov
xlat
ror
not
out
div
ror
iret
cmp
rcl
repz
int
in
fcmovnb
incb
into
out
xor
ljmp
std
fsubp
loop
cmc
fisttpll
jmp
ret
cmp
int
icebp
dec
xor
into
rcr
stc
and
fld
fadd
in
lret
call
decl
int3
xor
out
lock
cmp
fcmovnb
ror
xchg
iret
jmp
sub
sub
jmp
sbb
out
rcr
orb
xchg
in
xchg
ljmp
cmp
into
out
leave
stc
cli
sti
xchg
rol
in
fldln2
out
decb
out
aaa
cmp
div
fucom
out
in
cmc
repz
cli
rcr
adc
xchg
loop
in
das
out
in
imul
clc
out
xor
cli
push
out
loop
loopne
in
fmul
stc
ljmp
repnz
ss
rcr
dec
clc
shl
in
fcmove
mov
loope
dec
mov
in
xor
lret
cmp
repz
clc
repz
jmp
out
xchg
xchg
mov
xor
ss
std
cld
jmp
stc
out
in
call
clc
std
test
in
into
sar
xor
out
into
aaa
cld
loopne
cmpb
rolb
mov
mov
decb
xchg
loop
repz
clc
rcl
cmp
sar
clc
lock
iret
sti
out
repnz
iret
hlt
divl
clc
clc
cmp
int
rcl
in
in
std
fld
lret
test
ljmp
fstp
aaa
loopne
clc
jecxz
fcmovnbe
stc
xlat
test
xchg
test
fsubp
in
ss
out
out
jmp
ss
cmp
loopne
sar
ret
fiaddl
lret
repz
xchg
jmp
cmp
fdivrs
loopne
out
div
mul
les
mov
in
aad
cmp
out
ljmp
out
ss
test
testb
in
fists
in
out
cmp
cli
repnz
cmp
into
repnz
aad
lret
in
out
lea
fcomp
xor
leave
std
int
rol
out
loopne
test
fcmovu
clc
cmc
fcmove
jecxz
xchg
xlat
jecxz
in
repz
cli
roll
ret
mov
jmp
ret
int3
int
ret
leave
pop
cs
cmpsb
xor
jle
add
sar
jmp
or
into
mul
rcl
fdivr
lret
in
xchg
std
icebp
xor
lret
enter
int3
ds
cmp
loopne
in
enter
iret
enter
into
nop
ret
divb
xor
into
aad
cmp
cld
cld
rolb
and
nop
lret
jecxz
sub
cmp
cld
cli
hlt
int3
cmp
jecxz
std
test
std
sbb
out
sub
out
icebp
fcom
xor
into
rcr
out
loopne
ljmp
xchg
repz
jmp
in
jmp
cmp
ds
cmp
iret
repz
std
out
loope
xchg
orb
jmp
call
out
cmc
out
call
repnz
lret
and
into
ror
orb
ss
out
std
sti
cmp
loop
cmc
rcl
fnstcw
int
out
test
push
das
out
cmp
cmp
std
shl
fxch
xchg
rorl
in
or
rclb
call
fidivrl
out
fimuls
nop
xchg
jmp
aam
div
out
in
rcr
cmpl
div
fimuls
leave
lea
iret
in
jmp
aad
roll
cmp
imul
fstp
mov
repz
aam
xor
lret
cld
lock
fcomp
in
cmp
rcr
shr
out
leave
cli
jmp
lret
addl
xlat
repz
shl
cld
test
ret
fcmovb
fdivr
decl
loopne
shr
sub
shl
into
cld
fucomip
ret
vpavgw
loop
in
xchg
iret
ljmp
shr
xlat
sti
aam
rcr
ds
repnz
incl
dec
filds
cmp
std
enter
in
loopne
cli
aad
aam
lds
mov
xchg
iret
xchg
test
out
xor
fdivrp
sar
repnz
repnz
loopne
div
loop
test
lock
xchg
xchg
out
test
cs
ljmp
hlt
cld
rcr
stc
mov
mov
loope
lock
int3
xlat
ljmp
cld
ret
fiaddl
jmp
out
call
in
enter
int3
xor
loope
std
out
std
fcmovnu
loop
cld
int
xchg
std
lock
in
aaa
ret
in
repz
cmp
jmp
ss
loop
mov
cld
out
cld
xchg
loope
in
icebp
xor
xor
repz
cmp
out
xchg
fdivrp
mov
rorb
icebp
cmp
lock
repz
repz
loope
ret
xor
xor
std
mov
hlt
cli
into
jmp
cmp
aas
fdivrl
rol
in
loop
test
leave
out
fidivrl
sti
enter
aam
in
sti
filds
out
jmp
mov
lock
lret
ror
in
repz
std
call
mov
idiv
adc
std
lret
int3
aam
clc
xor
cmp
cmp
out
cmp
fdivr
rcr
sar
xrelease
mov
mov
jecxz
out
imul
aam
hlt
lret
fcmove
aaa
jecxz
addl
mov
ror
sub
sub
xor
icebp
repnz
in
out
test
loopne
in
cli
into
icebp
rorb
lock
in
imul
xlat
xlat
ret
fsub
mov
sub
sti
mov
call
loope
jecxz
enter
divl
loope
rcr
sar
fscale
test
ffreep
int3
icebp
xchg
rolb
xor
lret
sti
aaa
or
fcomp
test
shl
ljmp
cld
les
aaa
xlat
lret
leave
cld
in
repnz
shl
repz
xchg
imul
vshufps
enter
pause
mov
in
shr
clc
xor
aas
clc
into
xlat
cmp
out
ffree
loopne
rol
mov
test
stc
fucomp
xchg
shr
fsqrt
out
iret
idiv
int3
cmp
clc
cmp
loop
iret
call
out
mov
fldl
das
aaa
mov
in
call
and
out
std
aas
loop
fsub
ret
out
mov
cmc
aam
das
xor
sar
fdiv
out
rol
stc
in
fucom
sub
adcl
cmp
cld
lock
mul
sti
repz
fsubrp
cmc
ret
mov
mov
inc
or
out
add
add
int3
ror
fcomp
aam
aas
idivb
mov
push
add
addb
repz
out
sar
cmp
aam
aas
enter
fiaddl
ficoml
clc
in
call
hlt
fnstcw
in
repnz
sarb
loope
std
out
mov
repnz
das
in
xor
sti
jmp
aam
rol
test
fucomp
loopne
vpsraw
ficoms
loopne
out
enter
repz
cmp
dec
shl
rcl
shl
incb
in
in
adc
in
xor
std
fptan
cmp
jmp
inc
enter
lret
call
mov
neg
cmp
hlt
sbb
sarb
iret
std
cmpl
shl
ds
frstpm(287
out
loop
rol
sarl
xor
repz
in
hlt
int
decl
shl
lret
xor
imul
lock
shl
sti
icebp
loope
out
enter
test
shl
out
xor
int
clc
fucomp
aam
fcomp
fucomip
fmulp
out
out
nop
sub
into
rorl
lock
aas
fstp
cmp
cmp
test
nop
int
ror
out
icebp
in
clc
cmp
aam
jmp
bnd
test
aam
leave
ljmp
out
out
xor
repnz
fldl
in
fst
flds
call
in
hlt
clc
xor
fucomip
addb
loopne
ret
cmc
and
lock
call
in
repz
jecxz
icebp
fiaddl
addb
out
xchg
in
out
in
rcl
enter
rcr
lock
repnz
ret
incl
cmp
rcr
incl
cmp
cmp
clc
mul
into
loopne
rol
repz
test
mov
lret
jmp
repz
in
xor
cli
aas
xlat
out
ljmp
std
fiaddl
loop
in
xor
lret
fsubr
call
iret
jecxz
rol
loopne
mov
decb
sub
in
iret
in
sti
test
cmp
fsubr
lock
xchg
out
mov
in
jmp
sar
test
aas
ds
rolb
sbb
in
out
shr
testb
in
call
test
lds
sti
enter
int
mov
cmc
xchg
adc
fcmove
iret
std
std
aam
stc
cmp
lret
ret
clc
stc
out
std
test
addl
into
int3
das
xor
cmp
jmp
into
cmp
sti
rcl
idivb
neg
loopne
jmp
cld
lret
out
xor
aaa
cmp
fucomi
cmp
rol
hlt
loopne
fsub
xlat
ftst
out
xor
cs
shll
out
call
lret
test
loopne
addb
call
test
xor
loop
fstp
leave
cmc
cmp
cmp
fstp
rcl
loope
sub
lock
loope
icebp
sub
cmc
cld
aad
sar
sub
fsub
cli
shl
sbb
mov
decl
icebp
test
out
sti
not
out
int
iret
cmp
fucomi
in
loopne
loop
sti
mov
jmp
into
cmc
divb
shl
xor
jmp
loopne
addb
jecxz
sar
ljmp
xor
out
ljmp
int
sbb
xchg
lret
call
rcl
mov
in
ror
xlat
cmc
cmp
ret
fsubp
mov
fscale
mov
lret
int3
xor
xor
fadd
out
cmp
push
cld
jmp
nop
std
lock
ljmp
cmc
test
mov
lret
out
repz
into
cmp
call
jecxz
fnclex
lock
in
jmp
in
out
shl
icebp
stc
fcomi
repz
repnz
loopne
idivl
out
fsincos
mov
std
loope
loop
ret
in
rcl
lock
sar
call
clc
cld
in
xchg
xchg
lret
aam
test
cmc
divb
fdivp
faddp
cmp
fcom
or
jmp
cli
loope
ljmp
repz
lock
fcomp
aam
rcr
in
rcl
xlat
out
mov
test
in
incl
cli
shr
lret
std
leave
xorb
idiv
rol
movb
push
mov
push
jmp
ret
rcl
aam
ret
sarl
push
xor
jle
add
mov
in
in
call
out
call
int
int3
cmp
int3
cmpl
xor
xchg
fmulp
test
rorb
fcmove
int
repz
fdiv
shl
mov
cmc
test
rolb
hlt
icebp
xor
jmp
int3
int3
stc
xor
cld
cmp
cmp
hlt
call
fsubp
in
xchg
mov
xor
ret
jmp
xlat
fucomip
test
fdiv
rcl
loope
sub
nop
int
hlt
into
loope
jecxz
in
iret
cmp
cmp
xor
icebp
int
std
rolb
testl
lock
int3
call
test
out
cmp
mov
stc
fcomip
and
rcl
out
lock
cmp
fdiv
cld
jecxz
hlt
shl
out
clc
jecxz
in
mov
jmp
xchg
lret
aad
cli
aad
hlt
cmp
clc
idiv
fadd
test
rol
xlat
in
xchg
repnz
lret
in
out
hlt
sar
test
in
xchg
out
loopne
mov
shl
int3
cmp
imul
fcomi
sti
into
loop
ds
aam
rol
stc
in
leave
clc
cmp
jecxz
xchg
mov
loop
aad
xor
cmp
call
xlat
cmp
out
out
cli
test
jecxz
in
in
into
cld
call
hlt
hlt
aas
enter
testl
xor
lret
cli
ljmp
out
jmp
cli
loope
cli
hlt
call
xor
cmp
ljmp
xlat
test
rolb
aam
in
ret
lret
cmp
xor
test
cli
loope
cld
icebp
mov
fcomip
shr
out
xlat
aad
cmp
les
add
ljmp
sarl
rol
fxch
roll
add
enter
xchg
call
out
into
in
lret
cmp
cmp
shl
shl
icebp
hlt
repnz
ljmp
xchg
aaa
fsub
call
add
hlt
cmp
shl
in
fstp
test
hlt
std
inc
in
ljmp
clc
cmp
sti
fsub
loope
call
enter
cld
test
ljmp
sub
rolb
out
out
fildl
aam
xor
xor
xor
int3
iret
ret
repz
repz
fcomp
in
xchg
mov
int
icebp
cmp
out
int3
aaa
ror
int
loope
jecxz
lds
fcomp
icebp
test
call
shl
xor
fdivrs
iret
ret
jecxz
xchg
out
push
rcl
ret
repnz
repz
rol
lock
fnstcw
aad
out
jecxz
std
loop
cld
xchg
into
jmp
icebp
in
shlb
int3
std
out
hlt
stc
loopne
test
cld
test
fnstsw
lret
in
in
adc
int
int3
int3
aam
aaa
cli
out
ret
sar
add
fcomi
int3
sub
lock
aam
ljmp
roll
ds
out
sar
sti
into
lret
fstp
in
xchg
rcr
in
enter
icebp
cmc
clc
fcomi
xor
call
jecxz
int3
out
mov
mov
icebp
testb
aad
std
repz
fcmovnb
addb
in
movl
das
xor
shll
shll
cmp
cmp
std
test
stc
in
out
out
in
fists
rol
neg
cmp
test
div
clc
cmp
loope
iret
out
clc
test
in
lret
bnd
cmp
iret
hlt
xlat
cli
test
aad
imul
fdivrp
mov
in
ljmp
out
repz
fcmovb
in
int
adc
out
loopne
shr
fcmovne
cld
in
stc
aam
fdivrl
out
aad
mov
fsubp
nop
fldl
loopne
rcl
xor
int
aam
rolb
cli
cmp
in
sti
mov
call
ret
out
hlt
in
xor
clc
cmc
out
in
stc
fld
jmp
nop
mov
jmp
lret
cmp
lret
aaa
sti
stc
ror
hlt
lock
cmp
fmull
cli
addl
xor
idivl
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
jmp
sarb
ret
enter
fldl
jge
rcll
sub
add
add
fdivrl
jmp
xchg
leave
in
cmc
adcl
out
stc
cmp
sti
aas
sti
fdivr
mov
call
leave
mov
xor
loope
out
cmp
sti
fmulp
idiv
std
sbb
xchg
mov
test
xbegin
xchg
mov
xchg
in
xor
cmc
in
lret
cld
into
jecxz
loop
clc
aam
xchg
out
jmp
clc
enter
div
leave
lret
cmp
xlat
fiaddl
ljmp
loopne
sti
enter
ror
aam
aam
xchg
mov
repnz
div
test
out
in
call
in
lret
cmp
cmp
xlat
std
hlt
cli
iret
test
xchg
int3
mov
xchg
xchg
in
cmp
xor
xor
enter
jecxz
fiadds
std
aas
neg
mov
jmp
shl
rcl
aam
lds
xlat
idiv
cmp
repz
into
clc
loope
mov
xchg
lret
leave
nop
orl
fucomip
lock
iret
in
jecxz
lock
mov
les
mov
xor
les
aaa
idiv
call
fcos
cmc
stc
shl
test
out
out
cld
lret
xchg
ret
lret
xor
int
jmp
hlt
lock
ret
enter
test
in
fxch
jmp
xchg
call
out
neg
cmc
loope
clc
in
aad
cmc
ljmp
nop
out
xchg
xchg
ljmp
fdivrs
xor
shl
rolb
nop
in
mov
ror
loope
icebp
cli
cmp
xlat
clc
in
in
aad
iret
test
ljmp
stc
lret
fmulp
int
aad
loop
int
xlat
aaa
clc
fnclex
cmp
mov
out
test
call
lock
in
ret
aaa
clc
ss
cld
fmul
int
ret
sti
ror
repnz
mov
and
lock
aad
out
fdivp
into
cmp
into
jecxz
aad
faddl
loopne
ror
lock
sub
aaa
sarl
loopne
call
inc
fcom
hlt
mov
sbb
addb
aaa
out
repnz
aad
cmc
movl
enter
shl
in
loop
xor
xor
cli
loope
hlt
iret
lock
aad
aas
out
sub
lock
shl
ss
cli
rcr
xor
cmc
cmp
fimull
inc
out
aam
rcr
cmp
jmp
cmp
rol
addl
test
mov
xchg
xchg
cmc
enter
enter
out
clc
stc
repz
out
ds
fildl
test
clc
out
int3
lret
jmp
aam
call
loopne
stc
test
jmp
fnstenv
cmp
in
or
in
adc
and
sub
fsubp
in
test
iret
cmp
aad
neg
cmp
icebp
test
hlt
filds
cmp
fcmovnu
int
out
jmp
bnd
out
out
loop
test
out
xor
in
xor
lret
into
div
jmp
int3
int3
out
out
fdivr
in
in
xlat
out
out
lret
cmc
lret
xor
in
cmp
xor
fxtract
in
out
xchg
out
mov
orl
fstp
cmp
xor
int3
test
clc
xlat
iret
cld
cld
fildl
nop
out
xor
xor
xor
cmp
aas
cmp
mul
mov
loopne
orl
aam
rcl
rol
fnsave
cmp
ds
icebp
mov
mov
std
lret
int3
jmp
xchg
lret
out
call
jmp
cmp
in
cld
cmc
xchg
out
test
loopne
in
in
jecxz
xor
into
repz
aam
sarb
cmp
cmp
repnz
enter
in
out
repz
lret
ljmp
fdivrl
jmp
repnz
jmp
sti
test
ret
xchg
das
enter
repnz
rcr
fimull
loopne
jecxz
int
sub
in
int
std
incb
neg
aam
xchg
ljmp
clc
lock
out
cmp
sar
rolb
fdivrs
call
filds
inc
cld
mov
push
pop
sub
add
mov
jmp
ror
fmul
fcomp
fcmovnb
aad
jp
in
sarl
add
add
rcl
enter
icebp
xor
fdiv
repz
repz
faddl
int3
fcomp
lret
out
les
loope
cmc
stc
into
hlt
cmp
int3
icebp
cld
iret
ds
add
sbb
out
dec
icebp
xlat
repz
rcl
ljmp
testb
into
shr
int
jmp
lret
enter
ljmp
loopne
jmp
xchg
mov
in
in
sbb
ror
out
int3
xabort
aad
xor
aad
aam
mov
sti
shr
leave
ljmp
out
xor
in
xlat
enter
cmc
lret
in
rcr
ffree
jmp
flds
rcr
aad
cs
ret
cmp
out
in
leave
aad
xlat
xchg
std
fists
xor
ror
ror
ljmp
out
shl
faddl
lock
ret
cmp
xor
int
shl
leave
cmp
shl
clc
sar
loope
in
xlat
fdivr
std
or
xor
ret
hlt
ss
into
cmpb
test
in
aas
fscale
cmc
in
or
loopne
std
loope
divl
rcl
out
xor
out
lret
sarb
rcl
rcr
aas
enter
mov
incl
call
in
cli
ljmp
xor
call
mov
xchg
fsubrp
loope
xor
div
cmc
cmp
cmc
aas
cmp
cld
sti
lock
out
hlt
xchg
out
xchg
loop
ffree
shl
out
ret
stc
lock
fldz
repz
shr
mov
ret
xchg
jecxz
xchg
call
jmp
enter
jmp
repnz
aas
rol
ror
loope
test
fmulp
hlt
mov
ret
stc
xlat
cmc
ffree
cmp
jmp
cmc
out
cmp
hlt
out
mov
out
fiaddl
in
repz
lret
cld
stc
sti
fcmove
mov
fdivr
lret
in
in
cmc
loop
ror
ret
fdivr
into
loopne
cmp
test
cmp
enter
cld
loopne
fucom
iret
loop
ficoms
in
fdivrp
fcmovu
fcmove
repz
sub
out
decl
out
loop
fld
int3
in
into
fdivl
in
rcl
shl
fadd
not
int3
int3
xlat
ret
iret
lock
clc
into
in
loop
out
jmp
cmp
into
in
incl
xlat
loopne
popl
mov
cmc
jecxz
out
cmp
sarb
xor
repz
ljmp
bnd
iret
xor
ljmp
std
jecxz
roll
std
enter
adcl
aas
into
lock
cmp
cmp
mov
lret
enter
in
xchg
ror
repnz
fdiv
lret
lret
int
loop
lock
cli
fld
icebp
cld
into
out
xchg
cmc
jmp
out
cli
cli
lret
cmp
cld
faddp
leave
clc
cmc
imul
or
mov
nop
lock
int
ljmp
int3
rcl
test
test
sti
mov
fiadds
test
xchg
leave
out
lret
shl
cmp
leave
in
cmp
repnz
hlt
jmp
test
leave
mov
in
xchg
lret
out
lret
leave
icebp
into
std
test
repnz
fcomi
xlat
fsubrp
fisttpll
in
jmp
cmp
ljmp
cmp
clc
int3
xlat
in
fsub
mov
loop
out
loopne
repz
rcr
xor
cld
adc
jecxz
fdivr
sar
mov
sti
jmp
fcmovu
lret
xchg
in
repnz
fxtract
xor
idivb
stc
or
xor
in
test
cmc
fdivr
stc
loope
loop
loope
loop
fidivrl
cmp
adc
cmp
aad
cmp
out
ljmp
xchg
test
xor
ret
in
into
in
ss
fnclex
test
out
loop
cli
cmc
in
loop
and
out
loope
in
cmp
fcom
aas
test
out
rcr
repz
mov
testb
std
std
jmp
test
sti
cmp
into
lret
fucomi
ret
out
add
out
clc
into
lock
lret
out
out
leave
div
fmulp
cmc
loope
ds
incl
int
loopne
lret
orb
cld
lock
leave
aad
roll
hlt
loope
repz
int3
fstp
cld
jmp
ror
xchg
aam
icebp
enter
int
std
xor
ds
aam
lret
mov
xor
lea
cmp
jne
jmp
int3
int
fstp
cmp
pop
pushf
push
inc
std
sub
jle
add
int3
shl
call
aam
int3
out
rcl
repnz
fstpt
addb
hlt
out
loope
sti
fisttpll
out
inc
xor
loop
in
aam
int3
in
xlat
loope
ret
out
leave
fldl
xchg
rcr
int3
loope
out
xor
test
cmp
stc
out
fcmovu
mul
in
shl
fimull
cmc
mov
hlt
enter
lock
hlt
loop
cmp
stc
cld
fdiv
ror
enter
out
xchg
jecxz
xchg
jecxz
mov
out
cmp
cmc
shr
xor
cmp
cmp
shr
fmuls
orl
iret
shl
cmp
sub
aas
out
roll
out
les
fpatan
enter
xor
std
out
or
test
int3
adc
iret
xchg
in
fadd
call
mul
lret
cmp
stc
clc
stc
out
and
jmp
ljmp
out
int3
cmp
fadd
imul
cli
fadds
lret
out
lret
decb
xor
repnz
das
xor
lock
fstpt
sar
rcl
loop
mov
mov
cli
cmp
shr
cmc
not
xor
shr
sti
cmp
rolb
sti
loope
in
sbb
jmp
jmp
enter
clc
ds
fnstenv
std
mul
ret
cmp
fxch
ret
ffreep
loopne
mov
jmp
iret
shl
sub
ror
fdivrl
clc
aad
addl
lock
leave
ror
xchg
shrb
cs
fidivrl
fcmovne
stc
int
ror
cmc
out
addl
enter
sbb
lock
jecxz
xor
enter
loope
ret
ret
lret
les
lret
adc
cmp
in
enter
ret
fcom
out
fcmovnb
rcr
fcmovne
call
in
out
xchg
aam
out
idivb
int3
cmp
ss
aad
fdivrp
stc
ds
mov
repnz
out
xchg
lret
out
aad
aaa
into
adc
and
adc
test
lret
fcmovnb
loopne
cld
call
xchg
in
lret
call
cmp
cmp
mov
stc
xchg
shl
jmp
shrb
shr
fstpt
fdecstp
repnz
hlt
stc
xchg
repz
fsub
jmp
xchg
adcb
cmc
ljmp
fmul
test
incb
rcl
loope
cmp
jmp
aad
in
int3
jmp
cld
hlt
std
test
lock
icebp
mov
call
rcr
iret
cmp
enter
in
into
sarl
fldl2t
ljmp
out
fucomp
inc
out
loop
cmc
leave
aaa
xor
addl
sti
icebp
in
icebp
xorb
call
sti
lret
int
std
testb
mul
cli
aad
loope
cld
test
xchg
jecxz
jmp
xor
repz
call
test
fsubr
fcomip
aam
jecxz
lock
xchg
shl
in
lret
xor
neg
int3
cld
mul
cld
cli
sti
fadds
out
xchg
jecxz
loope
xor
xor
out
fxtract
in
shl
idiv
aad
loopne
leave
lret
lret
mov
in
lret
sub
jmp
icebp
rcl
out
xor
hlt
sar
cld
mov
lock
lret
xchg
xchg
aam
xor
into
repz
in
repnz
jmp
in
repz
std
leave
xlat
icebp
out
xchg
jmp
mov
hlt
aam
shl
in
fiadds
mov
test
jmp
mov
int
sarl
lret
aad
sar
xlat
loope
xchg
test
sar
aas
mov
test
cs
neg
fdivrl
icebp
int
loopne
fnstenv
fucom
aam
jmp
mov
lock
sti
leave
std
rcl
cld
clc
int
out
push
cmp
sar
aad
in
nop
in
mov
ljmp
sti
stc
xor
faddp
xlat
out
leave
lret
jecxz
out
xchg
into
enter
fidivrl
not
roll
aas
rolb
addb
jecxz
shl
ljmp
xor
ret
in
idiv
cmp
in
test
orb
ljmp
into
shl
out
fcomi
not
sbb
sub
fisttpl
in
ss
cmc
cld
sti
aad
lret
or
jmp
iret
xlat
rcl
rcr
lret
push
cmp
aad
jae
test
add
lock
in
out
mov
test
into
int
xchg
out
shr
aam
aam
rolb
shl
fcmovb
fmul
hlt
aas
out
cmp
mov
xlat
aam
into
shl
jmp
std
out
xchg
ljmp
loop
and
ret
aaa
xor
cmp
fdivs
loop
sti
add
call
std
iret
out
icebp
xor
xor
cmp
leave
xor
fcmovne
test
test
in
cmp
sbb
idiv
cmc
clc
out
cmp
xor
lret
cmpb
fptan
lret
stc
iret
ret
mov
xchg
out
jmp
xor
in
aad
aas
cld
in
mul
xlat
cmc
shl
ljmp
in
shl
ljmp
out
lret
fcomip
hlt
test
cmpb
loop
faddl
lret
ror
ficoms
int3
rol
int
fst
shl
repnz
fcos
rcl
xchg
xor
decl
ljmp
testb
sti
fcomp
aam
idiv
lds
xchg
fdivp
aaa
xor
aaa
aas
cmp
rcl
testb
in
fmul
mov
repz
enter
repz
xor
rcl
icebp
repnz
and
ljmp
aam
inc
enter
call
cmpb
cmc
cmc
in
aad
fdiv
fcmove
mov
ret
repz
aad
ror
cmc
ror
icebp
test
loop
les
lret
aad
xor
fcomi
enter
stc
cmp
cmp
xlat
cld
fcomp
rcl
xchg
testb
jmp
iret
rolb
rol
cmc
rolb
out
leave
fsubrp
lret
lock
mul
icebp
rcr
rcl
cmc
clc
xchg
out
in
ljmp
faddp
sar
in
ss
fxch
ljmp
fpatan
rol
mov
xchg
rorb
icebp
repz
ret
test
cld
stc
cmp
out
aas
ljmp
fsubr
cmc
sub
jecxz
in
xchg
loop
sarb
clc
iret
lock
repnz
in
in
repnz
idiv
ret
xchg
out
fldl
adcl
fcmovnbe
loopne
loop
ret
test
xchg
mov
ret
lret
call
cmc
aam
out
jmp
cmp
lret
cmpb
flds
int
leave
xchg
jmp
xor
out
cmp
int
dec
cmp
mov
fdivr
test
in
mov
das
lret
hlt
rcr
stc
fdivrp
shr
icebp
loopne
cld
out
xchg
leave
stc
loope
mov
iret
mov
xchg
lea
lret
aam
fsubr
cmp
rcr
leave
mov
out
cli
jmp
shr
xor
rcr
aam
sar
int3
int
shl
jecxz
std
flds
out
nop
in
aad
sub
xor
jecxz
hlt
aaa
div
repz
fscale
and
rcr
fiaddl
rclb
leave
test
cmc
cmp
int
rol
fcmovb
call
ljmp
ret
in
leave
int
icebp
jmp
jmp
lock
aam
jmp
stc
in
cli
out
xchg
jecxz
cmp
cmp
aad
in
hlt
cld
sbb
shl
shl
iret
ret
mov
mov
sub
jmp
cmp
repnz
aam
les
loop
fstp
mov
loopne
loop
orb
ror
repnz
fndisi(8087
cmc
les
xchg
mov
mov
test
xchg
repz
idiv
xor
fsub
ljmp
shl
fucom
addl
fucomp
out
das
cs
out
fnstsw
out
loopne
ds
xlat
in
in
lret
out
ret
stc
int3
lret
rcl
not
xchg
rcr
mov
enter
loop
adc
and
rol
in
cli
loope
sar
loopne
in
jecxz
enter
xchg
hlt
cmc
divb
ret
out
fsubr
lock
into
flds
in
in
into
out
fcmove
loop
icebp
loop
ret
imul
std
sarl
cld
repnz
aas
aad
repnz
jmp
incb
out
xor
in
iret
fucomp
aaa
fcomp
std
fdiv
adc
hlt
in
int3
test
mov
sub
int3
xor
pop
add
pop
leave
ret
push
mov
jmp
into
lret
rcr
xor
mov
gs
jle
add
fld
sar
sar
cmp
in
and
cmc
loop
jmp
in
hlt
incl
cmp
xor
aaa
out
ljmp
leave
ljmp
out
xor
add
out
int
iret
push
fcomp
iret
div
xor
loope
jecxz
addb
lock
jecxz
loop
cmp
sarl
cli
hlt
aam
fdivrs
stc
cld
loop
mov
xchg
loop
fstp
loop
cmp
jmp
clc
fmulp
fldl2e
aaa
hlt
faddp
test
ret
out
out
in
lret
out
rclb
sub
out
ljmp
aam
shl
clc
fadd
stc
addl
repz
xor
xlat
sti
icebp
add
fmulp
test
aas
cli
out
ret
fucomip
in
cmc
out
aaa
shl
xlat
cmp
stc
fcompp
fdivrl
cmp
fabs
loopne
out
rolb
aam
in
out
cmp
cld
ret
ds
fiaddl
in
int3
int3
mov
cld
jmp
cs
cmp
xlat
cmp
aad
std
loop
fsubr
enter
fmulp
repz
jmp
shr
out
cmc
sti
ss
jecxz
cmp
in
loopne
cld
sub
in
leave
xchg
xor
xor
icebp
cmpb
sarb
aad
std
ret
div
xchg
call
cld
lock
xor
cmc
fcmovne
cli
int
neg
ss
loopne
ret
mov
jmp
in
mov
std
in
in
not
xlat
stc
xor
jmp
test
cmpb
hlt
lret
into
fisttpl
shl
fnstenv
aad
lret
fmul
hlt
cmp
ret
xchg
roll
rcr
mov
mov
out
rol
out
lret
iret
int
stc
int
ss
out
rcl
clc
cmp
loope
xchg
addb
aaa
ror
aas
cmp
fadds
xchg
fld1
std
mov
enter
test
aad
shr
leave
rol
iret
icebp
aad
int3
aad
aaa
sti
out
hlt
cmc
out
mov
test
iret
jecxz
xchg
jmp
icebp
cld
ljmp
sar
rol
enter
ljmp
ss
fdivrs
std
lock
call
neg
or
ret
into
jmp
in
shlb
aaa
rcl
cmp
out
into
div
shl
aas
f2xm1
les
out
out
in
sub
xchg
cmc
call
hlt
xlat
iret
clc
int3
xlat
fnstcw
div
cmp
icebp
bnd
int
cmp
int
xor
loop
xchg
adc
hlt
lea
xchg
nop
aad
xor
out
clc
cmc
int
lds
rcl
rol
out
test
xchg
xchg
xchg
ret
shl
fcmovnb
clc
idiv
loopne
fmulp
iret
and
loop
cmc
jecxz
xchg
fcmovne
iret
xchg
out
loopne
out
stc
out
cmp
sar
ds
sar
fcmovnu
mul
rcl
loopne
mov
mov
jecxz
out
mov
xchg
call
repz
rol
cmp
loopne
fcmovnu
incl
cmp
out
test
rorl
xlat
lret
sti
xlat
sti
out
or
call
in
test
jmp
ljmp
out
fdivrp
cmp
in
ret
lock
ljmp
jecxz
mov
xchg
into
out
out
loop
ss
in
sar
ds
loope
mov
ffreep
hlt
sub
fldl
out
xor
fsubr
not
repnz
cmp
iret
ret
sti
repnz
fcomp
and
xor
xchg
jmp
jmp
out
div
lret
jmp
int
aam
fchs
xchg
ds
decb
addb
out
sarb
aaa
repnz
cmp
aam
cmp
jmp
in
in
mov
lock
jmp
test
int3
rcl
cmc
std
loop
xlat
fmulp
ljmp
shl
jecxz
xlat
xlat
in
fdecstp
iret
sar
cmpl
sti
mov
cld
leave
jmp
cmc
xchg
loopne
aad
enter
enter
fnstenv
aam
shl
iret
loop
rol
mov
std
lret
stc
testl
shl
aam
ljmp
out
out
repnz
fsub
fldpi
ret
jmp
int
mov
test
sar
in
fucom
repnz
in
inc
sbb
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
sub
mov
sub
movl
adcl
jmp
mov
fcmovne
jnp
xchg
jb
in
or
add
repnz
clc
aam
fld
in
filds
shll
lret
vpaddusw
leave
iret
cmp
out
fsubp
cmp
lret
xchg
loopne
cld
xchg
ljmp
hlt
icebp
clc
rol
mov
fsub
aam
cmc
cli
in
fst
lret
divl
jmp
int
int3
xor
in
loopne
cmc
enter
enter
mov
lret
lock
icebp
aas
call
jecxz
not
hlt
in
out
cmp
and
mov
aam
lret
neg
in
ljmp
test
xor
out
adc
orb
lock
std
lret
jmp
rolb
fcmovu
fsubrp
mov
stc
fldl
in
xchg
in
hlt
in
int
xor
stc
out
ds
in
clc
into
xchg
shr
test
lock
cmc
aas
cli
in
addb
in
mov
mul
cmc
fcomp
into
jmp
addb
fdiv
aam
fdivr
mov
aad
rol
in
xlat
cmp
faddl
roll
ljmp
sub
ret
cmp
repnz
repz
test
jmp
cld
sbb
cli
lret
xchg
repz
in
cmp
aad
lret
in
cmpl
int3
in
fisttpll
jmp
vpminsw
clc
cmp
stc
sti
in
test
mov
out
out
xchg
xchg
test
lret
repnz
div
fdivrs
in
loopne,pt
fcmovb
mov
mov
test
icebp
cmp
aad
std
fdivrl
cmp
clc
iret
rol
in
aam
loopne
sti
xchg
or
in
xchg
xor
repz
cmp
repz
xlat
sti
and
std
adc
inc
fmul
lock
in
rol
jmp
cmc
repnz
and
shl
vpaddb
ror
enter
out
lret
loopne
out
shlb
std
xlat
leave
fcmovu
idiv
jmp
sbb
in
ret
loopne
cmp
iret
int3
out
in
sarb
repz
call
hlt
lret
fcmovu
cli
leave
repz
call
cld
sar
int
adc
aam
fsubp
lock
cld
test
rol
hlt
in
in
ror
fabs
ret
rcl
jmp
iret
in
fsubr
xchg
sarb
lock
call
neg
cmp
neg
ds
in
mov
in
xchg
aam
mov
iret
out
into
jmp
ljmp
cmp
lock
ret
fsub
div
loopne
in
call
in
sub
cmp
cli
cmp
fnstcw
aad
loop
jmp
mov
test
xchg
in
shl
in
repz
repnz
neg
loopne
std
les
ljmp
xor
fstp
cmc
out
idiv
cli
cmc
shr
cmp
xchg
lret
in
cmc
mov
int3
loope
call
cmp
shl
cmp
cmc
std
div
hlt
cld
ffreep
ret
xchg
lret
lret
xchg
rcl
jmp
out
sarb
lret
cmc
repz
std
idiv
ljmp
xchg
xchg
loop
in
sar
out
cli
xor
test
xlat
sti
lret
nop
mov
mov
call
ret
test
fldpi
fistpll
fnstsw
cmp
leave
stc
fmul
out
fisttps
mov
cmc
ss
fsubr
ror
in
loopne
cmp
fxch
movb
adc
lock
out
iret
shr
lret
ljmp
shl
lret
test
stc
xchg
enter
mov
loopne
ljmp
loopne
test
leave
stc
jmp
aas
in
icebp
filds
loopne
lret
ret
out
cmp
xor
rcl
aas
mov
aas
in
xchg
mov
int3
fcmovnu
shr
repz
fcmovu
in
adc
ret
ret
loopne
ljmp
enter
sti
rcr
cmp
int3
testl
ljmp
mov
shl
out
cmp
fmulp
lock
cld
ds
cld
xor
test
out
mov
movl
sub
mov
notl
mov
mov
jmp
lret
ror
rcr
lret
fistl
adc
pop
filds
jle
add
xchg
shl
lret
in
out
clc
rcr
rol
aam
iret
test
std
int
in
in
nop
push
iret
sub
xlat
jmp
aam
shr
mul
fcom
out
in
stc
fcmovu
jmp
aam
neg
shll
call
repz
shl
cmc
fxch
clc
xchg
test
dec
iret
loop
icebp
div
xor
sti
stc
icebp
call
shr
xlat
xor
movb
addb
fcmovbe
rcl
jmp
sarb
sub
loope
fnclex
test
mov
in
xchg
shl
aad
lret
iret
ljmp
rcr
call
lock
rolb
lock
sti
int3
neg
fldl
cmp
mov
loop
fcmove
in
jmp
in
fdivrl
cmp
aad
loop
in
ret
repz
ret
ljmp
orb
out
rcr
xlat
cmp
lret
in
div
iret
rcl
xchg
cmp
in
xchg
nop
rcl
orb
int3
xor
out
jmp
cmp
ds
test
out
aad
sti
in
call
int
xor
in
stc
cmp
cmp
sti
xchg
repnz
faddl
aaa
divb
cmp
xlat
enter
iret
repnz
fcomip
leave
ret
testb
int
jmp
jmp
fucomp
idivb
rol
test
rcl
enter
hlt
incl
mov
clc
fld
cmp
lock
rcl
loop
rol
loope
test
mov
fsubr
sti
icebp
xchg
and
fxch
ljmp
lock
fcmovne
out
cmc
loopne
in
enter
jmp
in
xchg
rcr
repz
iret
rcl
and
test
xchg
leave
jmp
faddp
shl
cmp
and
cmp
test
sbb
mov
xlat
div
hlt
xor
in
aad
aam
cmp
sti
aas
fxch
mov
fcmovu
rolb
rcr
aad
int3
in
fcomp
lock
aas
xlat
aad
ret
enter
fdiv
repz
shrb
out
loop
fcmovne
cmp
ds
repz
fcmove
xchg
loopne
enter
test
mov
in
test
ror
aam
lret
aaa
cli
rcr
call
repnz
cmc
mov
test
enter
xor
ret
ret
xlat
repz
cmp
xor
fdivr
clc
mov
lock
loopne
ss
in
aam
call
aas
cmp
repz
in
xchg
xchg
aas
int3
loop
out
lret
aaa
cmp
aad
fadds
std
or
fmull
clc
leave
jmp
lret
cli
fdiv
into
lret
jecxz
cld
loope
test
vpsadbw
lret
mov
in
int
lret
fcmovbe
in
stc
fdiv
cmp
std
xor
aam
fimull
sti
rcr
out
repnz
xor
cld
mov
into
cld
cld
repz
in
icebp
movb
out
icebp
lock
xchg
rol
shrl
cli
hlt
aad
call
cmp
out
hlt
shl
ret
xlat
mov
int
aam
sarb
cli
cmp
cmp
aad
xor
in
std
clc
repz
cmc
repnz
xlat
test
in
aas
ljmp
cmp
cmpb
stc
faddl
stc
clc
adcl
ret
sti
ss
aad
int3
sbb
rcr
ret
ffree
out
test
rcl
repnz
out
aad
lock
loope
test
shl
add
jecxz
fisttps
xchg
mov
xor
int3
std
xlat
fiadds
fcmovbe
cli
fsubrp
mov
in
les
shl
repnz
cli
cmp
jecxz
test
rcl
mov
hlt
ljmp
int
cmp
icebp
jmp
cmp
filds
out
mov
into
call
test
in
aad
aas
mov
fucom
jmp
mov
repz
test
out
jmp
lret
lock
iret
int
mul
hlt
xchg
adc
loopne
iret
xor
cmc
cld
aam
int
xor
jmp
enter
int
fnstenv
push
pop
addb
jle
rcr
sarb
ret
xlat
cmc
loop
enter
mov
mov
repz
xlat
shl
int
fcmove
cmp
repz
std
rcr
call
clc
loope
test
xchg
hlt
loop
rol
jmp
fcom
stc
in
cli
out
div
xchg
mov
fcoml
xor
cmp
fidivrl
in
ffree
in
hlt
loope
rorl
ljmp
out
xor
xor
xor
int
shl
neg
rcr
stc
fmul
mov
call
shl
call
in
xor
fnstsw
cmp
xchg
aam
out
ret
fsub
int3
jmp
xchg
hlt
into
cli
clc
int3
out
fsubr
std
sub
rol
fcmovu
jecxz
out
imul
stc
or
shl
lock
icebp
iret
jmp
xor
and
ret
mov
out
cmp
int3
fdivrs
lret
ror
cmp
xor
into
rcr
in
int
clc
repnz
in
into
fucomip
not
aas
jmp
xor
cmc
enter
into
shr
aam
ret
fiadds
lret
icebp
xchg
jmp
repnz
fst
sarl
in
int
ret
ret
cmp
clc
push
cmc
fucomi
test
loop
int3
into
aam
repnz
in
adc
rcr
fcmovu
xlat
cmp
aad
mov
clc
fcmovnu
jmp
mov
into
icebp
into
aad
xor
iret
aam
aam
out
repnz
sti
mul
loope
out
loope
in
clc
in
cli
ret
xor
hlt
out
cld
loope
in
shl
icebp
cli
mov
or
iret
xchg
mov
out
hlt
cli
cmp
aaa
cli
ror
rcl
in
mov
lds
out
out
in
call
int3
fidivl
aam
fucomp
aas
repz
aad
jmp
addb
ror
jmp
rcl
xlat
aad
std
repz
repz
hlt
mov
filds
orl
div
jecxz
shlb
shl
fmul
cmp
aam
loope
out
loopne
addl
fimuls
clc
fucomi
into
fdiv
aaa
lret
ffreep
cmp
rcr
cmpb
test
ljmp
aad
in
cmc
cmp
mul
hlt
fdivr
cmp
loop
vpsubsb
in
call
xchg
in
addb
in
fdiv
xor
fmul
repz
out
enter
lds
decl
xlat
hlt
xor
in
icebp
aas
xor
fidivrs
out
shl
aam
jecxz
loope
nop
loopne
cld
into
rol
in
hlt
jmp
cmp
ds
int
iret
idiv
out
std
std
in
out
int3
nop
fstl
iret
stc
jmp
xor
int
repnz
loopne
xchg
jmp
xchg
sti
rorb
lret
iret
enter
fidivrl
rol
fildl
mov
loop
iret
repnz
aad
repnz
icebp
cmpb
in
cli
aam
xchg
fcmovnb
loop
test
aaa
ror
shr
cld
ds
cmc
fidivrl
shl
xchg
lret
out
loop
or
enter
cli
clc
cli
in
lret
sti
in
and
lret
in
sar
cld
adc
enter
test
fcom
hlt
xlat
lock
mov
mov
xchg
nop
in
loop
shl
in
das
fsubr
neg
cmp
shl
mov
out
loope
bnd
ljmp
fldz
loop
fildl
leave
in
fsub
fisttpl
loope
rol
ror
xor
lock
sar
orl
lret
call
jmp
xor
repz
std
hlt
xor
out
into
mov
nop
fcomp
enter
fsubr
std
stc
shl
stc
fsub
fxch
xlat
frstpm(287
test
xlat
aam
repnz
fxch
int
icebp
sti
xor
lret
lock
push
sti
mov
fcmovnu
in
ljmp
enter
enter
aam
in
out
hlt
mov
xchg
int
jecxz
shl
xchg
xor
rcl
leave
loope
loope
into
loope
mov
hlt
mov
in
fildl
lret
cld
fcmovne
sar
stc
ljmp
repz
aam
xchg
jb
add
cmp
jmp
ret
fmul
fcom
fdiv
jne
pusha
or
jle
add
fcomi
test
out
ror
cs
aas
fdivr
hlt
clc
ror
cmp
sti
loop
mov
lock
rorl
int3
int
std
cld
clc
cmp
loopne
xchg
in
mov
test
xchg
divb
shll
in
ss
jmp
and
sarl
out
sub
jmp
mov
mov
xor
xor
sti
fdivr
std
lret
cmp
ljmp
iret
in
lret
in
loop
jmp
enter
xor
aas
xlat
in
cld
fisttps
mov
int
xchg
out
out
out
hlt
call
fabs
cmpb
xchg
fldl
fstp
mov
jmp
xchg
lock
sarl
faddl
cli
fsubp
icebp
out
call
in
divb
shl
jmp
lock
int3
repz
lock
inc
movl
in
out
shlb
xor
shrb
repnz
into
in
mov
enter
xchg
std
mov
in
xchg
cmp
mul
in
cmp
loope
iret
out
in
loop
shr
std
in
imul
in
xor
loopne
icebp
cmp
sti
call
out
fmul
stc
repnz
fdiv
in
xchg
loope
loopne
test
in
aad
shl
in
cld
out
iret
cmp
jmp
jecxz
icebp
ds
mov
push
xchg
icebp
in
loope
call
call
test
lret
cld
ror
sbb
fxch
and
nop
xchg
loope
loop
ret
lret
jmp
and
cld
adc
jmp
loope
aad
not
out
cmp
cs
cmp
cmp
testb
mov
shr
mov
aad
cmp
out
filds
ret
bnd
cli
fnstcw
out
ror
mov
shl
jmp
cmp
cmpb
in
rcr
jmp
xlat
cld
fldz
int3
fimull
rcl
out
cmc
fdiv
fdiv
out
fucomip
fildl
repz
in
les
in
lock
in
aad
sti
xlat
hlt
mul
fucom
fadds
cmp
stc
jmp
int
mov
rol
in
repnz
into
aad
in
int3
test
fildl
in
std
in
out
ss
leave
icebp
out
lret
rcl
and
addl
out
shl
xor
jecxz
into
xor
xlat
jmp
loop
cmp
in
sti
in
ret
mov
loope
icebp
repz
stc
repz
jmp
rcr
adc
adc
fldl
int3
std
out
fadd
icebp
shr
std
ljmp
test
aas
vpaddq
test
iret
loop
kmovb
sub
stc
enter
lock
aas
int
int
aaa
xlat
loope
jmp
sti
mov
cld
jmp
loope
jmp
test
fcomp
cli
repnz
shl
call
repz
xor
ss
hlt
sti
cmc
imul
into
faddp
and
fucom
mov
int3
icebp
faddl
int3
sub
cli
icebp
cmp
in
imul
out
rol
aaa
test
cmp
sti
std
loope
sti
int
xchg
mov
jecxz
sarb
leave
ret
in
xor
aam
fdivr
test
enter
xlat
cld
idiv
clc
addl
fcomp
call
in
cli
xlat
cmpb
aad
loop
rcr
adc
xchg
cmc
aas
in
shl
ss
not
fistpll
rolb
test
fxch
in
repz
jmp
jmp
ret
idivl
lret
xor
shl
jmp
rol
iret
loop
mov
lds
call
inc
out
cmp
out
in
cmc
cmp
fdivr
icebp
cmp
xchg
xchg
out
call
repz
cmp
cmp
xor
fcom
repz
cli
icebp
rcr
call
mov
lret
rol
stc
xor
clc
cmp
in
cmp
test
fildl
mov
leave
lret
lock
leave
into
std
fnstsw
lock
iret
ror
jmp
test
rorb
int3
repz
fcmovnbe
aaa
cld
ds
cmp
rcl
imul
shl
mov
cs
leave
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
jmp
aas
rcl
aad
fstp
loop
pop
mov
popa
in
add
add
into
ljmp
loopne
aas
testl
xchg
lock
iret
xor
cmp
fdivrs
sarb
hlt
cli
leave
in
std
mov
orl
sarb
sti
iret
shl
xchg
fcomi
mov
jmp
ficoml
loop
xor
cmp
ljmp
cli
fcmovnu
aam
ljmp
int3
out
addb
sub
loope
fcom
clc
int
aad
test
in
in
xchg
out
ss
int3
cmp
mov
in
clc
hlt
jecxz
cmp
fmull
sti
test
lret
cmc
xor
xor
cmp
in
hlt
icebp
bnd
ljmp
jmp
xchg
and
iret
shl
int3
ror
jmp
fiaddl
jmp
dec
sti
in
ficoms
hlt
out
cli
iret
ror
enter
std
test
lret
loopne
cli
mov
xchg
orl
sti
xor
cmp
jmp
xlat
neg
cmp
stc
out
rclb
xchg
mov
lret
sub
out
cmc
push
ret
stc
aam
fildl
jmp
mov
xchg
aas
in
in
jmp
aad
sub
aam
out
jmp
lret
fcmovu
jmp
rcl
aad
cli
cmp
ds
aad
hlt
rcr
xchg
clc
ljmp
int
mul
icebp
fcmovnbe
in
repz
adc
rol
sti
int3
sti
lret
out
loope
out
hlt
iret
xlat
leave
cmp
aad
aam
roll
fiaddl
imul
test
xchg
mov
aam
out
repz
les
xor
aam
clc
fucomp
loopne
loopne
jmp
addb
loopne
mov
out
xor
out
fcmovbe
call
clc
rcl
stc
loop
mov
std
fdivrp
fildl
in
hlt
ret
stc
sarl
loopne
ljmp
rolb
call
xchg
aaa
jmp
lock
cld
fcmovnu
xor
faddl
repnz
cli
ret
xchg
orl
out
ss
fcmovnbe
out
test
orl
lret
fucomi
out
xchg
fmulp
loop
into
cmp
cmp
int3
iret
out
xchg
mov
ret
adc
cmp
in
lret
leave
in
jmp
incl
incl
loop
test
ss
cmp
enter
cld
ss
into
cmp
jecxz
fsub
clc
test
jmp
mov
aad
aam
in
in
stc
shl
hlt
loope
xor
repz
fsubp
int
test
divb
leave
int3
int3
lret
stc
cmp
cmp
cld
flds
aad
fmull
test
loop
jmp
int
iret
into
repz
fdivr
cmp
sbb
cld
xchg
loope
out
mov
lret
idivl
cmp
int3
cmp
repnz
fiadds
out
mov
in
or
int3
sti
lret
leave
aas
icebp
icebp
into
ret
adc
and
mov
lret
mov
in
xor
cmp
repz
cmp
out
in
repz
loop
fildl
ror
clc
cmc
not
fnstcw
icebp
cmp
cmc
cld
sarb
icebp
call
out
addl
xor
hlt
cmp
shr
in
stc
repnz
fmulp
mov
mov
shrl
jecxz
in
cmp
push
neg
sti
rol
xchg
ds
fmul
fimuls
sub
ljmp
repz
fsubrp
cli
ds
fcmovnb
not
or
adcb
jmp
cmc
fnstsw
aad
sti
xchg
xchg
xlat
in
fdivr
icebp
enter
call
lret
dec
fcmovnbe
cmp
fcomp
loopne
lds
jecxz
jecxz
ljmp
xor
stc
rolb
loopne
call
fcmovnu
in
mov
nop
repnz
iret
out
call
repnz
aad
icebp
ret
roll
out
out
mov
and
adc
shl
repz
mov
sbbl
jmp
leave
aad
xlat
fcmovnu
ret
pop
lock
scas
mov
pop
mov
add
add
loopne
stc
and
cmc
in
repnz
sub
out
aam
aam
sar
cmp
cld
enter
out
iret
repnz
jmp
loop
icebp
xlat
iret
in
cli
sarl
repz
neg
cmc
aas
test
out
and
fiaddl
loope
cmc
out
stc
in
sarl
fsub
int
stc
fsubp
ret
call
jmp
xor
enter
loope
cmp
int
cmp
std
fbstp
lock
icebp
ljmp
lock
stc
vpminsw
leave
iret
cmp
loop
in
imul
fdivr
nop
test
xchg
shr
lds
aad
in
cmp
clc
repnz
fcmovnb
xchg
xchg
xlat
into
call
cmp
fidivrs
xchg
bnd
fisttpll
rorb
in
iret
repnz
lret
jecxz
sar
fdivp
vpaddd
ret
out
int
mov
loopne
mov
das
repnz
cmp
clc
xlat
fldl
rcr
aad
test
fdivrp
into
std
nop
test
xchg
out
aam
imul
fdiv
cmp
shl
in
into
sar
aas
sar
test
loope
out
dec
cmc
in
repz
ret
cmp
cmp
in
ror
cmp
into
div
ret
mov
std
enter
test
xchg
xor
cli
xor
loopne
shl
loope
fadd
shl
add
fucomp
clc
lret
cli
fldl
cmp
in
hlt
out
flds
repz
adc
ljmp
aaa
out
lock
sti
hlt
ljmp
bnd
std
mov
loop
nop
mov
xor
cld
out
int
aam
cli
cld
ror
fsub
mov
loop
pop
xchg
out
aam
shl
out
cs
out
lret
fdivrs
incb
call
xchg
hlt
xchg
xchg
xor
aad
out
dec
lock
leave
ljmp
xor
mov
or
in
std
filds
xor
fnsave
fst
loop
in
icebp
iret
call
lret
ret
loope
out
jmp
iret
iret
fdivs
in
stc
jmp
into
aas
test
fiadds
lret
out
loope
and
out
in
sti
hlt
ss
in
out
testl
sar
imul
cli
sarl
ljmp
mov
test
in
cli
addl
lock
repz
in
cli
out
shr
aam
sti
repz
jecxz
shl
xchg
call
loop
xor
cmp
fidivl
cld
hlt
rcl
sar
testb
cli
fcomp
mov
iret
jmp
clc
iret
les
into
xor
cmp
out
clc
in
rolb
mov
iret
out
mov
loopne
lock
stc
int3
xor
cmp
aas
fmul
aas
sti
cmp
shl
jecxz
mov
ljmp
loopne
jmp
xor
into
fdiv
aad
jmp
clc
fcmovnu
rcr
xchg
xchg
ret
sar
mov
xorl
icebp
shr
ljmp
fcom
repz
lock
repz
leave
loop
test
xor
fcom
ss
fcmovne
into
std
ret
shl
out
ret
aad
call
cmp
clc
jmp
hlt
ret
loop
cli
out
lds
jmp
loop
in
into
out
xlat
cmp
shl
repnz
call
sti
ljmp
hlt
out
leave
icebp
cli
neg
clc
sub
iret
aam
incb
ljmp
enter
lret
ss
out
cmp
fdivr
cld
test
out
mov
out
mov
xchg
hlt
ss
aaa
sti
idiv
in
jecxz
out
rolb
ret
roll
hlt
repnz
cld
aaa
divl
in
neg
rolb
xchg
mov
in
mov
ljmp
cmp
jecxz
aas
cmp
loop
mov
jmp
jmp
mov
loop
aad
repz
lock
lock
in
mov
loop
int3
fmulp
lock
xchg
vpor
out
lret
int
cmp
lret
inc
loop
aam
fstp
fcmovnb
xchg
jmp
rolb
roll
add
push
or
adc
sub
movl
mov
xor
mov
jmp
ror
ret
int
movsb
inc
push
mov
adcb
add
dec
clc
ret
sarl
cmc
fcmove
enter
icebp
lock
xor
call
sti
mov
xor
aam
in
cmp
hlt
cld
cmc
filds
xlat
out
aad
call
xor
enter
cmp
fsqrt
cmp
ljmp
loop
repnz
repz
lock
cmp
in
fninit
roll
testl
shlb
into
mul
fdivp
into
fcmovnbe
loope
cmp
test
jmp
mov
shl
cld
int
lret
cmp
in
testl
ret
lret
sub
xchg
xor
leave
lret
rcr
flds
in
fcom
mov
out
out
clc
ljmp
jmp
enter
adc
rcr
hlt
rol
ds
mov
out
leave
shl
mov
ret
fidivrs
shl
fsub
jecxz
int
loope
ret
enter
in
in
lock
xlat
fidivrl
cmp
cli
jecxz
aam
ret
ffree
lea
in
adcb
lock
out
lret
cmp
and
fdivr
fdivr
fmul
fucomi
jecxz
fdivrp
xchg
mov
shr
in
shl
sti
cld
clc
shl
in
loop,pt
test
xchg
xchg
cmp
stc
into
fdivrp
ror
aam
out
ret
cmp
xchg
mov
fdiv
xchg
aam
xor
enter
in
lock
cmp
test
rol
in
sti
fucomp
loopne
out
repz
rcl
cmc
into
int3
call
addb
lds
fldl
cli
hlt
in
rcr
stc
jmp
fcmovnb
fsub
fucom
cld
xchg
out
loopne
jmp
xchg
jmp
shr
xlat
stc
xor
loop
cld
ret
enter
cli
loope
fmulp
repz
shl
loop
ret
das
hlt
fldl
filds
out
test
xchg
into
loop
in
iret
test
fmulp
jmp
div
test
fisttps
xchg
into
loop
aam
xor
cmc
cmp
xorl
lock
fildl
out
icebp
shl
cmp
aaa
cmp
lret
ss
icebp
cli
cmp
lock
test
mov
std
mov
enter
in
std
f2xm1
stc
std
cmp
cli
cmp
out
jmp
leave
fsubp
xchg
jmp
into
iret
shl
sarb
lret
int3
ffree
sti
fsub
fcomp
out
clc
enter
loopne
lret
test
leave
fldz
int3
icebp
cld
aam
out
jmp
loopne
cli
ds
mov
adc
xchg
shlb
in
idiv
lret
aas
repz
xor
in
clc
add
cld
fnclex
xchg
test
jecxz
das
int
out
test
into
lret
repnz
cmp
fucomi
loopne
xlat
in
out
enter
leave
fsubrp
shr
ljmp
clc
repz
jmp
ds
lock
cmc
shl
fisttpll
lock
idivb
in
enter
icebp
stc
fxch
shr
test
cli
xchg
out
out
enter
and
aam
icebp
jmp
xlat
shl
repnz
loop
faddp
in
test
cld
fsin
mov
lret
stc
fcmovu
rcl
hlt
loope
ret
aas
loope
cld
enter
mov
lock
jecxz
xor
clc
out
hlt
cli
std
iret
cmc
hlt
add
test
in
fsub
loope
iret
in
fisttpll
in
fcmove
xor
cmp
in
aaa
fninit
loop
stc
jmp
sti
into
call
ljmp
cmp
cmp
ljmp
ret
cmp
cmp
out
iret
into
lds
in
cli
xlat
lret
iret
shlb
cmp
rcr
ds
clc
icebp
in
hlt
lret
int
xchg
lock
out
stc
cmp
cli
adc
sub
int
cld
mov
loop
into
repz
sub
int3
cmc
cli
sbb
repz
cmp
mov
cli
sti
and
std
call
cs
repnz
divl
aas
fucomp
lock
loop
cmp
neg
test
in
jecxz
int
aad
repnz
jmp
std
cld
aam
lret
fsubs
test
add
int3
rcl
ret
fldl
gs
push
add
rcl
jmp
fsub
loope
rcr
loope
into
lret
ljmp
cli
jmp
in
lret
shl
jmp
aad
test
test
stc
xor
xchg
fndisi(8087
fcoml
div
int
shr
repz
into
cmp
loopne
aad
std
movl
aad
cmc
jmp
sti
lock
repnz
cmp
rcr
stc
add
fsub
test
aad
int3
loop
out
sarb
cmp
cmp
aam
xlat
out
out
mov
mov
mov
leave
cli
xor
xor
fstpt
lret
fdiv
int3
out
shl
jecxz
fcmovbe
stc
stc
fxam
out
fimuls
stc
iret
fsubr
fucomp
lret
aad
rcr
int
faddp
stc
loopne
fcmovnb
fsubr
in
in
rcl
cmc
shl
clc
cmp
repnz
lock
incb
mov
jmp
xchg
xchg
sub
repnz
cli
shl
repnz
sbb
mov
fmul
lock
int3
icebp
xor
cmp
fstpt
ljmp
sti
aad
icebp
in
fdivrs
std
fsubr
shl
in
aad
repz
shlb
repnz
cld
sar
ljmp
shr
int
icebp
hlt
in
enter
int3
repz
and
cmp
fxam
fadds
test
rcl
jecxz
fldcw
xor
faddp
int
ror
cld
cmp
cli
xlat
xor
loop
nop
xor
rol
cmp
aam
imul
sarl
xchg
loop
neg
cmp
nop
ljmp
repnz
fprem1
cmp
stc
in
sar
fcmovnb
stc
iret
cmc
aas
out
fdecstp
rolb
xorb
out
in
idivl
fdivp
enter
in
adc
add
loopne
sti
jecxz
ror
in
lret
call
ss
repnz
lret
cmp
ds
rcl
jmp
xchg
jecxz
cld
std
fucomi
nop
mov
stc
call
cmp
rolb
out
loopne
inc
icebp
test
nop
aad
loope
stc
aaa
cmp
clc
int
cmp
clc
test
out
sar
aad
mul
sti
fucomp
jecxz
ljmp
rol
ss
hlt
cmp
loope
incl
clc
in
filds
icebp
xor
lret
cmp
idiv
cli
out
fdivrp
sti
stc
clc
aad
mov
out
xacquire
hlt
aam
repnz
jmp
roll
out
ret
cld
hlt
xor
in
out
std
test
cli
cld
cld
jmp
repnz
not
rcr
fmul
stc
fyl2xp1
rol
shr
les
jmp
xor
hlt
rcr
ror
stc
hlt
stc
leave
call
leave
fsubr
loopne
icebp
shrl
out
cmp
jmp
out
iret
sti
out
aas
aas
jmp
enter
xchg
rclb
rol
lock
rcl
shr
aad
icebp
aaa
test
fiadds
jmp
shr
ror
mov
div
rol
jmp
fcmovnbe
cmp
stc
ret
test
cmc
xchg
ljmp
jecxz
ret
cmp
cli
xlat
cmp
fmul
sti
hlt
repnz
repz
cld
in
ffree
loope
mov
lock
stc
jmp
in
out
shl
sbb
out
movl
lret
sarl
repz
fiaddl
lret
out
fcomip
out
fcmovu
test
jmp
aam
loope
loope
leave
call
loop
rolb
leave
xor
lret
iret
cld
rcr
fcomp
testb
test
cld
clc
int3
std
in
mov
test
loope
rol
xor
stc
fmul
iret
sbb
sbb
cmp
in
and
xlat
cmp
cmc
ror
sti
repnz
fdivrp
hlt
in
fistpll
in
xchg
shl
in
call
lds
xbegin
fyl2x
xor
jecxz
xchg
ljmp
roll
in
cs
cmp
leave
fdivrp
fdivrs
out
jecxz
jecxz
ret
and
out
xlat
mov
lret
out
jmp
cmp
cmp
in
ret
cmp
test
xlat
jmp
mov
loope
loope
xchg
cmc
lret
lock
in
aad
aad
ss
cli
fadd
enter
fcmovb
inc
aam
test
shlb
jmp
fadd
aam
fst
fcoms
sbb
jg
dec
sbb
stos
add
lds
xchg
test
rcl
in
jmp
int3
cmc
lret
fcmovnu
in
lds
cli
out
fsub
test
aad
hlt
not
aaa
stc
rcl
sarb
in
xchg
incb
fcom
ljmp
in
xlat
fdiv
cmp
repnz
imul
repz
filds
sti
in
jecxz
orl
fsubrp
rcr
fcomp
inc
lock
mov
cld
fdivr
ret
jmp
loope
cs
xor
hlt
aad
enter
loopne
sarb
loopne
repnz
jmp
fdivp
enter
mul
cmp
sarb
shr
leave
fadd
incl
adc
aad
rcl
sar
lock
in
sar
hlt
test
or
fcmovb
xchg
lds
rol
in
leave
iret
ljmp
ffreep
test
dec
decl
std
xchg
jecxz
out
in
xor
ffreep
ror
in
fiaddl
lret
jecxz
mov
cmc
jmp
iret
in
lds
lock
cmp
out
cli
repz
repz
lret
mov
nop
cld
jmp
ror
rcr
out
leave
aam
xlat
fucomp
dec
test
in
ret
fcmovnu
cmpb
incl
out
iret
sub
in
ss
sti
sarb
ror
fadds
or
test
cmc
nop
xlat
in
stc
jecxz
fsubr
std
stc
cmp
fstpt
repz
rolb
out
stc
jmp
shl
jecxz
xor
int3
xor
in
lret
cmp
fldl
mov
xor
lock
repz
jecxz
cmp
sarb
shl
jecxz
or
xchg
cld
out
fsubrp
rcl
in
loop
into
call
xor
icebp
cmp
int3
mov
cld
loopne
or
dec
aaa
shl
into
cli
in
leave
cli
aas
cld
ds
idiv
call
loop
call
testb
fsubrp
out
aad
call
aad
out
cmp
hlt
xor
aam
stc
in
out
lock
out
xchg
addl
hlt
out
shl
int
repnz
loopne
shl
sub
in
xlat
fsub
iret
call
aaa
cmp
int3
cmp
shl
imul
fadd
cmc
add
stc
xor
mov
jmp
in
call
lret
cmp
jecxz
std
lock
xchg
loopne
and
mov
in
ljmp
dec
int3
ret
fdiv
in
std
loope
lret
out
xlat
test
xchg
and
orb
ror
fmul
shl
lret
rol
cmp
loopne
mov
cld
sar
xchg
out
aam
jmp
clc
repnz
cld
mul
fiaddl
fisttps
idiv
std
aam
cmp
or
aas
loope
jecxz
jmp
ffree
enter
decl
leave
fldcw
in
std
aas
out
aam
sar
aad
mov
cli
ljmp
mov
lret
cs
iret
ret
int
aam
cmc
out
sar
test
ljmp
cli
std
ror
repz
hlt
stc
push
lret
int
roll
ds
fstl
xchg
xchg
in
repz
cmc
out
xor
out
fdivp
cmp
sbb
and
roll
lock
mov
xor
shlb
fmul
ljmp
xchg
clc
xchg
mov
icebp
nop
xchg
lret
ljmp
out
idiv
xlat
jmp
fxtract
ret
fcmovnu
loop
sbb
lock
repz
stc
idivl
out
cmc
fcmovnu
test
cmc
repnz
iret
out
loop
loope
enter
cmp
cmc
xor
cmp
loope
shl
rol
fsub
leave
int3
test
iret
mov
out
loop
imul
xor
jmp
aam
rolb
mov
fildl
loop
and
int
ljmp
cld
jmp
cld
fsub
jmp
test
int3
enter
in
cli
aaa
cmc
sarl
neg
stc
in
rcr
cmp
mov
iret
jmp
shl
lock
out
repz
int
aam
ret
jmp
clc
out
in
jmp
sti
hlt
into
mov
xor
mov
pushf
clc
not
movl
sbb
movl
mov
adc
xor
mov
subl
add
jmp
int
int
leave
push
hlt
cltd
loope
xor
test
jle
add
jecxz
in
cmc
out
ss
xor
mov
loop
cmc
xchg
loopne
decb
xor
in
out
into
cld
cmp
repnz
hlt
aad
test
lret
mov
in
stc
in
lret
stc
hlt
fucomi
fdivrp
cmp
ror
ret
shl
clc
loop
lret
call
jecxz
rol
lret
mul
out
int3
out
sarb
cmc
enter
jmp
fmull
lock
hlt
lock
call
repz
loope
testl
in
xchg
dec
shr
in
int3
stc
leave
imul
cmp
fadd
int3
out
shl
roll
and
icebp
test
icebp
test
repz
fxch
cld
cmp
out
out
jecxz
in
sti
sti
loopne
fucomp
iret
out
test
cld
mov
xor
into
cmc
shl
divb
call
hlt
xlat
shr
fstpt
rol
in
call
ret
in
xchg
das
jmp
aam
fdivs
int3
cmp
aam
xchg
test
mov
adcb
xor
jmp
cld
fcmovnbe
repz
std
out
sarb
in
fmull
hlt
cmp
xchg
cli
leave
lock
shl
cmp
repz
cld
out
neg
in
loope
idiv
jmp
mov
xchg
leave
xor
out
repz
aaa
movl
cmp
cmc
jmp
lea
shl
cmp
out
ljmp
fdivr
in
loopne
rcr
faddp
mov
int
cmp
out
out
mov
xor
aaa
int3
into
iret
fistpll
jecxz
fnstcw
les
lret
jmp
nop
loop
int
aad
aad
fcmovnb
repz
stc
icebp
shl
sti
cmp
shr
loope
test
orl
ret
lret
aaa
enter
call
fstp
loop
jecxz
cmc
fadd
mov
fcmovne
and
loop
in
shll
leave
cmc
push
adc
fdivrp
fsubrp
mov
repnz
cli
fcmovnb
mov
fimuls
ret
cmp
fidivs
fdiv
ffree
test
loopne
or
in
in
addb
xor
hlt
enter
cmc
ffreep
repz
test
addb
in
xlat
lock
xor
cmp
xlat
fcom
cmpl
cld
jecxz
fildl
std
jmp
loop
lock
cmc
hlt
ss
cld
xchg
jmp
jmp
fcmove
into
call
ror
cmp
cmp
icebp
hlt
sar
repz
fsub
ljmp
lret
fimuls
stc
icebp
into
cli
ror
ss
fdiv
jecxz
ffreep
fcmovbe
out
test
stc
mov
mov
das
loop
into
xor
fxch
imul
sti
cld
fdivrp
xchg
ret
in
xchg
mov
out
hlt
leave
in
in
idivl
jmp
shl
cmp
cmp
loope
stc
std
cli
loopne
in
call
in
ss
cmp
idiv
cmc
rcl
loopne
icebp
rcl
cld
out
lds
in
into
leave
clc
cld
divl
fsubrp
xchg
shl
fmulp
xchg
hlt
nop
rorb
xor
out
int3
hlt
clc
loope
icebp
aad
cmp
test
jmp
jecxz
nop
xor
icebp
lret
ljmp
in
in
shl
repnz
mov
xlat
in
out
fsin
in
xchg
loop
ror
xlat
cli
sar
cmp
cmp
cli
ret
mov
fxch
loopne
lock
jmp
shr
ss
not
cmp
sti
stc
cmp
leave
inc
loopne
mov
out
in
in
xor
in
xor
repnz
out
ret
lock
fildl
clc
stc
loope
mov
rorb
fucomi
cmp
xlat
loopne
clc
repz
jecxz
repz
lret
out
ljmp
icebp
ljmp
lock
int
std
ds
call
leave
int
xchg
lret
dec
jecxz
fdiv
cmc
cmp
aaa
rcl
cmp
int3
test
testb
mov
sti
out
lret
cmp
sar
stc
out
out
sbb
mov
lds
rorb
cmp
sarl
out
cmp
lock
sbb
mov
in
notl
loopne
jmp
ss
lock
adc
sar
cmp
movl
je
movl
push
movl
jmp
jmp
int
ret
rol
fcmovnu
jecxz,pn
dec
sbb
push
outsl
mov
jle
add
cmc
orl
repnz
xchg
repnz
ror
aam
mul
clc
in
sbb
test
mov
test
out
lret
shl
int3
int
rcr
out
cmp
fadds
mov
lret
call
adcl
fldln2
xor
loop
in
aam
cmp
ret
loope
cld
lock
loop
xor
into
div
xor
aas
in
aad
cmpl
mov
imul
out
stc
shr
mov
repz
xor
out
rcr
ror
fidivrl
in
filds
mov
cli
out
in
lret
xor
or
int
xor
fst
lock
cmp
aas
out
jmp
testl
in
imul
rcl
stc
jmp
aad
ret
lret
fucomi
out
int3
int
test
cmp
imul
xor
sti
clc
rcl
test
rcl
add
std
mov
fldl
fsubp
loopne
cli
xor
push
out
sbb
mov
jmp
out
jmp
out
rol
cli
iret
clc
icebp
cmp
sti
icebp
rcl
test
in
fxch
test
fsub
out
lret
hlt
shl
cmp
clc
enter
lret
in
rcr
std
loop
fcmovbe
sbb
ljmp
aam
xlat
in
cmp
lock
xlat
std
test
lret
enter
std
rcr
ljmp
sub
aam
cmp
loop
cmpl
fucom
in
lret
leave
fsubrp
leave
jecxz
out
mov
call
ljmp
loope
out
rcl
repz
out
and
jecxz
xor
cmp
cli
in
lock
aad
fst
ret
ljmp
iret
lret
jmp
in
loope
into
ret
fstpt
lret
out
cld
repz
xlat
fyl2x
test
test
mov
in
fucomip
mov
xor
into
int
hlt
cmc
cli
aam
loop
loopne
test
iret
shll
jecxz
icebp
std
jmp
sarb
rolb
lock
lock
repz
clc
ds
stc
rcr
in
out
mov
leave
mov
rcr
rorb
jmp
repnz
aad
fucom
sub
rcl
jmp
adcb
notb
fcmove
cmp
fld
stc
aam
incl
stc
add
lds
lock
fsubr
rcr
xor
iret
loop
cld
mov
std
ret
std
fcmovnu
leave
flds
rcl
cmp
call
rcr
shl
cli
shr
loope
sti
sti
mov
loopne
xor
cli
div
div
std
in
xor
mov
out
lret
into
mov
leave
ss
repnz
aas
addl
test
stc
in
ljmp
xor
xor
out
jmp
in
xor
cmpl
loope
xlat
cmc
sti
std
loopne
xchg
rorl
xor
lock
fdiv
cli
ds
les
sub
loope
cli
out
leave
sarl
cmp
lock
in
cmc
std
jecxz
iret
out
out
mov
in
std
mov
int
loope
cmc
int
aam
aam
hlt
aam
dec
fucomip
fimuls
aad
jmp
into
std
int3
aaa
sarl
hlt
shr
out
cmc
cmc
cmp
out
fsubrp
repz
aad
faddl
repnz
out
rcl
ror
fcom
cmc
fcmovu
int3
iret
xchg
mov
sti
loop
jmp
fcmovnu
jecxz
test
div
stc
into
in
icebp
aad
fcmovnbe
stc
ret
cmp
cmp
test
loop
shl
sti
loop
mov
jmp
ret
cmp
aad
lret
cli
out
icebp
cli
fnstsw
div
test
out
rcll
shr
fcom
fidivrs
cmp
out
cmp
fsubp
mov
out
into
in
lret
mov
out
cmc
xor
jmp
lret
jecxz
add
out
loop
cmc
mov
mov
mov
cmp
stc
out
cmp
rolb
vpsubd
repz
ljmp
int
in
out
lret
jmp
cmp
lret
ds
in
ret
fcmovnu
inc
jecxz
xchg
out
out
incl
add
scas
jle
add
js
inc
add
inc
add
cli
jmp
int
ret
aam
fstp
fstl
fmull
sub
add
add
ljmp
lret
out
jmp
hlt
in
fxtract
clc
mov
xchg
xor
out
cmp
in
cmp
jmp
mov
out
xchg
roll
int3
xor
fldl
repz
xchg
fisttps
call
loopne
ret
aaa
leave
fcmovb
cli
add
rcl
rol
fsqrt
out
in
loop
in
aas
ljmp
sti
ds
ret
test
cli
loope
mov
int
ret
cmp
shr
sar
xlat
sub
aam
loope
call
addb
in
cld
out
ss
rcl
aas
rol
dec
in
testb
out
divl
xor
div
repnz
aas
ds
mov
fcmovu
icebp
fsubr
jecxz
xchg
lret
enter
fidivrs
lret
xor
shl
out
repnz
cli
in
mov
loope
ss
cmc
out
leave
into
ds
mov
rolb
xchg
subl
ljmp
xchg
std
out
out
mov
loope
jecxz
lret
lds
cli
call
aas
clc
test
cmp
mov
movl
shll
int3
lret
xlat
loope
ds
shl
int3
lea
fldl
in
aam
xor
cmp
shl
in
in
leave
mov
jmp
out
lock
std
in
ljmp
loope
out
in
loopne
push
aas
loope
sti
filds
test
nop
xchg
shr
loop
jecxz
jmp
clc
icebp
shl
lock
mov
jmp
ljmp
hlt
enter
xlat
repnz
out
ror
rcr
adc
call
rcl
cli
clc
decl
cmc
aam
cmp
int
lret
jmp
shl
repnz
into
out
test
lret
xchg
repnz
xacquire
sti
fsincos
testl
test
cld
enter
jmp
lret
jmp
ljmp
cli
jecxz
lret
sti
loopne
mov
out
xchg
lret
xor
out
cmc
hlt
loop
not
clc
cmp
jmp
ficoms
xchg
cmp
fxch
sar
roll
loopne
out
fdivr
xchg
ror
mov
xor
fstp
cmp
lock
test
out
fucomi
jecxz
mov
xchg
faddp
sub
cmp
leave
cmp
std
fdiv
xlat
loope
test
cld
cmc
jmp
lret
xchg
rcr
loope
aas
xor
clc
ss
hlt
hlt
xor
xchg
std
aad
aam
dec
xchg
loopne
fstp
out
sub
cmp
lret
iret
cmc
jmp
int3
loopne
out
cld
aam
imul
roll
out
mov
call
enter
mul
shlb
faddl
cmp
cld
loop
in
adc
xor
in
jecxz
idivl
ret
clc
aam
into
aas
flds
fadd
ljmp
iret
in
lock
aaa
fadd
sarl
fmul
fiaddl
shl
test
in
int
adcb
cld
shll
cmp
out
xlat
out
cld
mov
out
int3
cld
xchg
out
and
xor
faddl
std
fldlg2
mov
in
test
lea
ret
aad
hlt
neg
or
enter
out
fucom
mov
ret
int
fmul
iret
rcl
faddl
lret
jmp
xchg
into
into
xchg
fsub
iret
ret
imull
imul
ds
ret
sti
xchg
clc
fsubp
stc
or
in
xchg
in
xor
icebp
ljmp
aad
aam
clc
loopne
fcmovne
ret
xchg
leave
jmp
int3
loop
out
leave
lret
sar
xor
std
aaa
cmp
ret
aad
fsubr
add
xchg
loope
mov
fxch
xlat
aad
cld
cmp
cmp
in
xlat
out
repz
idiv
loop
neg
cli
xchg
repnz
addl
jmp
cld
xor
adcl
add
movl
cmp
movl
jb
xor
mov
mov
xorl
xor
or
xor
add
jmp
rcl
rcl
dec
mov
notb
jge
leave
xchg
add
add
adc
out
out
movb
mov
repnz
call
clc
cld
lret
int3
int
stc
in
out
repz
fidivrs
in
fcmovu
std
decb
loopne
fidivs
iret
call
hlt
sar
xor
rcl
cmp
mov
std
fucom
jmp
fisttpll
ret
loope
fmul
repz
cli
out
div
test
mul
ret
int
iret
int
fcmovb
enter
fiaddl
addl
shl
mov
xor
cmp
lret
ror
lret
repz
cmp
rcr
aad
in
mov
nop
ror
orl
jmp
adc
cmp
in
test
xchg
lret
loop
call
loop
aaa
sarb
repz
xlat
loop
and
in
call
fsubr
xchg
int
xchg
mov
int
xlat
cmp
fscale
fcmovne
stc
aas
jecxz
ret
mov
xchg
sbb
decl
test
aaa
repz
clc
incb
sarl
in
ret
out
out
test
mov
xchg
test
fxch
xor
cmp
test
cmc
xchg
mul
cld
test
loop
lock
neg
stc
icebp
cmc
aad
in
test
rolb
test
movl
fdivs
jmp
out
cld
and
and
fcmovb
cld
mov
mov
in
shll
cld
aad
fsub
hlt
cmpb
or
cli
fiaddl
loope
fucom
leave
adcl
fdivrp
aaa
loope
cmpl
sbb
xchg
ljmp
aad
repz
cmp
fidivrl
shr
aam
xlat
repz
in
cld
rcr
leave
and
in
loope
sub
clc
cmc
stc
enter
ret
xchg
mov
out
mov
out
lret
into
shl
xor
fdivs
aam
cmp
loope
cmp
leave
mov
mov
xchg
ljmp
test
shr
ror
int
hlt
stc
std
and
mov
xchg
jmp
in
jecxz
xor
int
cmp
xlat
loopne
and
xchg
fcomip
out
xchg
lea
lret
neg
fnstcw
stc
bnd
hlt
out
ljmp
int3
nop
hlt
sar
iret
stc
jmp
out
xor
repnz
fst
fprem1
adc
loopne
fucomi
hlt
loope
fdiv
loop
in
nop
xchg
xor
leave
jmp
lock
hlt
out
sbb
fdivrl
aas
ret
shl
std
lea
faddl
xor
and
out
idiv
cld
fadds
in
call
loope
in
lret
out
cld
in
cmc
aas
jmp
xlat
cld
in
out
cmp
out
cli
mov
int
out
rcr
stc
cmp
cli
rol
in
push
xchg
loope
xchg
jmp
sbb
xlat
iret
lret
out
cmp
icebp
jecxz
faddl
cld
fildl
or
in
shl
out
cmp
out
cmp
cli
aad
fcmove
sar
std
loopne
hlt
jmp
out
fcmovu
into
jmp
into
cmp
xor
cmp
and
xor
cmc
jmp
fildl
in
roll
test
not
ss
sti
cmp
loop
fst
enter
int3
loope
test
divl
iret
cmc
out
fucomp
std
loopne
cmp
jecxz
vpsubb
jmp
stc
in
sub
rol
iret
iret
std
shl
repnz
out
and
jecxz
icebp
std
mov
orb
int
in
hlt
lret
lock
loope
cmp
ss
cmp
mov
stc
call
jmp
stc
repz
cmp
shl
std
add
addb
loop
xchg
clc
in
jmp
xor
ds
dec
fsin
out
hlt
mov
shr
mov
int
adcl
lock
repz
rcr
cmp
out
shl
out
and
in
lret
xlat
xchg
jmp
int3
xor
cmp
clc
out
std
cmc
rcr
iret
aad
xor
fdivrp
mov
out
jmp
repnz
xor
xlat
enter
iret
addl
rcr
cld
int3
mov
rol
add
sbb
add
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
adc
mov
jmp
ror
rcr
ror
js
cmp
lret
adc
jle
add
fucom
lret
xchg
fisttps
cmp
shr
fildl
loop
sar
call
test
xor
jmp
cmc
xor
cli
cmp
frndint
cmc
cmp
ret
mov
lret
lock
test
xchg
out
in
std
repz
push
cmp
in
clc
fcmovb
cmp
xchg
xchg
call
loop
in
cmp
mov
lock
repz
fmull
mov
int3
leave
xor
aaa
aam
into
jmp
loopne
aad
ljmp
jecxz
nop
decl
div
int3
iret
ss
cld
fcmovnu
sti
rcl
fpatan
ffree
cmc
out
lret
in
out
idiv
jecxz
aam
ljmp
cmp
test
fcomip
cld
fisttpl
xchg
std
decb
test
aaa
jmp
loop
out
fcmovnu
loopne
into
cli
xchg
lret
adc
aam
icebp
hlt
sti
ljmp
cld
hlt
rol
faddp
out
in
ret
in
fstp
mov
jmp
loopne
repnz
fcomi
sti
jmp
int3
in
aad
loopne
rol
in
lret
rcl
ljmp
ss
in
sti
out
fdivr
cmp
repnz
in
mov
out
test
shl
hlt
test
enter
int
int
shl
fiadds
lret
test
lea
ret
repz
shl
fdivr
fcmovnb
in
aas
out
loop
add
idiv
jecxz
fucomp
lret
aam
call
sarl
not
ds
aam
cmp
fdiv
jmp
fisttpl
out
out
int3
repnz
leave
lret
xor
clc
int3
aad
sub
rcr
cld
xor
out
xchg
mul
das
repz
call
repnz
ret
shl
iret
cmc
shl
mov
jmp
enter
aam
repnz
iret
out
ffree
fmulp
rcr
repz
cld
fdivr
jmp
icebp
call
sti
fdivrl
repz
ss
add
ljmp
fcmove
sti
lock
xlat
out
cmp
lret
cld
incb
xchg
ret
out
fucomi
out
jmp
xchg
jmp
lds
int
loopne
fcom
sti
test
loop
mov
cli
std
mov
xor
hlt
lret
icebp
int3
repz
rol
lret
les
out
in
fucomp
repz
fdivrp
ljmp
fcmovnu
cld
mov
flds
call
out
cli
cli
cld
lret
cmc
xlat
neg
out
hlt
test
xchg
lea
call
repnz
cmp
stc
loope
and
in
fucompp
fimuls
addl
xor
rcr
imul
out
repnz
add
cld
leave
loope
rcr
leave
jmp
aam
repnz
icebp
loopne
cld
call
mov
cmp
xchg
cli
mov
iret
and
lret
iret
out
xor
cmp
cmp
idiv
or
fmulp
call
jecxz
aam
fst
lock
cmp
cli
in
ljmp
leave
shr
int
ss
in
jecxz
repnz
fdivr
loop
out
jmp
fsubrp
in
mov
ljmp
jmp
std
sar
icebp
in
out
xlat
cmc
sti
mov
jmp
inc
shr
shr
dec
cmp
sti
xor
mul
ljmp
cld
int3
hlt
and
clc
lock
out
stc
int
leave
cmc
cmp
fstpt
out
lret
sti
mov
cmp
out
cmp
fcmovb
das
icebp
rcr
xlat
hlt
sarl
iret
roll
loope
mov
loopne
rcl
ljmp
icebp
cmc
fidivrl
cmp
iret
shl
icebp
in
test
jecxz
int3
xchg
fucomip
out
jecxz
ret
out
xor
iret
clc
xor
cld
hlt
test
sti
fcmovnbe
orb
or
jmp
mul
lock
out
clc
xor
fadd
cmp
aas
cmp
out
xchg
mov
in
xchg
sar
fldln2
cli
leave
sarb
int
fcmovu
aad
hlt
fucomip
mov
loope
mov
leave
hlt
out
cmc
adc
enter
scas
xlat
and
mov
sub
mov
addl
sub
movl
cmp
movl
ja
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
xor
or
sbb
mov
movl
xor
sbbl
add
movl
jmp
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
aad
iret
lret
fstp
push
shrl
mov
add
cmp
icebp
aaa
call
sar
out
fcmovnbe
test
or
in
xchg
out
in
vpxor
cmp
rcl
in
rolb
repnz
cld
xchg
dec
loop
in
int3
jmp
loopne
iret
out
xchg
faddl
rorl
div
int3
lret
fidivrl
aas
ss
clc
test
div
in
fcmovbe
imul
cli
int
lret
into
into
xor
lock
stc
int
sar
imul
out
loope
ds
ret
loope
decl
jmp
int
jmp
aam
int3
fcomp
cmp
clc
addl
leave
leave
jmp
out
loope
loop
iret
aad
repnz
cmp
repnz
vpandn
fsubrp
cmp
in
in
xchg
lock
repnz
std
std
int3
add
cmp
mov
mov
cmc
icebp
fadd
out
into
sti
cmp
std
fimull
fcoms
incl
int3
shl
out
fucomi
cmc
xor
ret
std
fcomip
neg
stc
inc
dec
rorl
int3
out
fdivrs
out
clc
cmp
cmp
cmp
icebp
ret
leave
aam
test
mov
repz
xlat
in
in
jmp
aas
sti
out
cli
inc
out
out
out
sub
xchg
jecxz
xor
lock
fucomi
fdivr
fld
cld
loopne
jmp
loopne
movb
enter
into
xor
xlat
roll
lds
fsin
mov
sub
xor
ss
hlt
fidivrs
aas
fcomp
icebp
ret
xlat
fsubrp
mov
fld
mov
xchg
xchg
dec
in
xor
xor
cmp
rol
rcr
ds
enter
loop
lock
ljmp
cmp
ss
loope
stc
rcl
int
hlt
rcl
icebp
cmp
out
lret
fadds
xlat
roll
iret
xchg
xchg
loopne
fiadds
shr
repz
cli
call
std
mov
ljmp
fadd
sti
cli
out
out
int3
aaa
aaa
loop
add
mov
mov
loope
lea
lret
aad
cld
shl
clc
std
cmp
ds
ret
jmp
test
std
out
int
out
fnstcw
repnz
sar
in
ret
sub
jmp
shr
call
in
xlat
clc
iret
iret
xor
xchg
hlt
enter
cli
add
ljmp
aaa
cmp
out
cmp
fnstcw
clc
sti
sti
fcmovnb
xlat
xchg
cli
aad
loop
fsub
fcmovnb
icebp
int3
xchg
cmc
fld
jmp
sti
leave
fucom
std
cmp
loope
fsub
mov
xchg
mov
loopne
repz
loop
out
xor
out
cmp
shr
ffree
out
call
int
int3
mov
roll
jecxz
aaa
aaa
icebp
cmp
out
repz
inc
repz
aad
aam
and
out
lock
cmc
lret
fnstcw
and
adc
xchg
stc
fdivrp
out
lret
iret
fucom
xchg
jmp
repz
cmp
iret
aaa
call
cmp
loopne
ret
fcmovne
mov
mov
out
rcl
into
fcmove
ljmp
vcmpss
test
xchg
orl
jecxz
in
fdiv
ds
rol
sar
mov
inc
in
fldl2e
out
repnz
ss
call
shl
iret
cmp
aam
aas
in
aas
adc
adc
xchg
out
fcmovu
fmull
aaa
ss
stc
aad
idiv
and
rcl
cld
xchg
jecxz
mov
test
xchg
out
rol
in
xor
ror
cmp
xor
push
xlat
faddl
mov
test
lock
loope
jmp
ds
repnz
icebp
out
faddp
clc
leave
shl
std
mov
clc
repnz
clc
enter
loope
in
xlat
loope
out
clc
fsubrp
in
ljmp
in
in
das
ror
cmc
add
ret
sti
hlt
clc
mov
ljmp
into
icebp
repnz
aas
out
hlt
test
out
cmc
pushl
rolb
add
add
add
add
sbb
cmpl
jne
push
push
push
call
cmpl
jb
xor
xor
add
orl
add
imul
mov
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
sub
jmp
rcl
lret
fcmovnbe
lods
pop
mov
xchg
shlb
jle
in
out
xchg
loop
hlt
fmul
sub
rcr
call
loopne
std
sub
repnz
in
out
fsubrp
fildl
xor
fadd
idivl
cli
cmp
loop
aam
cli
xchg
neg
lret
jmp
loope
out
loop
enter
cmp
xor
repnz
mov
in
fsubr
repz
loop
jmp
hlt
sar
int
in
repnz
std
cmp
mov
test
enter
xchg
call
repz
jmp
out
jmp
out
clc
cld
xlat
out
clc
mul
xlat
fiadds
int
lret
shll
cmc
aaa
mul
lock
aam
cld
out
call
incl
xchg
in
nop
jecxz
aam
out
xlat
in
sti
rcr
leave
in
repnz
cmp
out
add
rcr
ljmp
vpand
leave
icebp
ss
fcmovu
xlat
in
leave
mov
out
out
icebp
sti
iret
cmc
ror
ljmp
cmp
jecxz
addb
mov
loope
in
jmp
int3
jmp
lret
xlat
jmp
fdivrp
cmp
cmp
test
ljmp
incl
ljmp
aas
in
lret
rol
cld
add
ffree
mov
out
rcll
fdivl
lret
ss
icebp
shl
loopne
mul
loope
dec
mov
fdivs
fnstenv
enter
cli
ret
into
sti
fldl
std
in
enter
icebp
ljmp
idiv
in
rcr
aaa
cmc
sti
std
ljmp
jmp
repz
hlt
jecxz
faddp
lret
aaa
xlat
repnz
iret
fcmovnb
cli
shr
addb
sbb
out
int
icebp
icebp
divl
out
idivl
cli
cmc
add
div
add
loop
test
mov
into
or
ffreep
xor
xor
xlat
ds
xor
out
xchg
jmp
jmp
enter
xchg
lret
mul
out
in
lret
out
shr
adc
rcr
aad
xchg
test
icebp
cmp
xor
ret
fsubr
sti
aam
sarb
ror
ret
test
fcompp
out
leave
icebp
in
xchg
in
aad
clc
ret
cmp
ss
sti
cmp
test
aam
fcomip
icebp
out
xchg
orl
cmp
xlat
sarl
cld
rorl
repnz
in
loopne
loope
lock
neg
adc
aas
fst
sub
ret
in
jmp
nop
dec
nop
jecxz
lock
out
lret
cmp
in
neg
loop
cmp
xlat
call
lea
out
in
jecxz
xchg
jmp
call
ror
cmp
into
in
sarl
rol
loop
loope
mov
into
out
sti
cmp
in
ret
loope
xlat
in
out
fldln2
cli
cmp
test
lret
in
test
int3
loope
clc
lds
call
hlt
cmp
fnstcw
ret
rol
in
xlat
nop
fsub
xchg
into
add
hlt
aad
xor
stc
int3
lret
fidivrs
in
test
mov
out
mov
fmulp
shll
jmp
leave
cmp
rcl
clc
aam
loop
cld
sar
fsubp
sbb
xchg
int3
out
sti
stc
ss
lret
cmpb
out
test
addl
test
rcl
int
repnz
div
clc
out
xlat
incl
test
test
lock
mov
not
cmc
int3
sarl
cmp
idiv
ret
repz
ret
cmc
mov
fmulp
xchg
nop
std
cmc
orb
xor
ljmp
repz
loope
sti
loop
mov
mov
ror
leave
in
shll
in
aas
cmp
cli
jmp
mov
in
nop
in
shl
fcmovne
out
imul
sbb
sti
fimull
test
loopne
into
rorb
cmp
aam
cmc
aas
in
fdiv
loop
icebp
clc
ret
sti
jmp
xlat
mov
cli
repnz
in
out
lret
shl
fdivr
jmp
neg
std
ror
aas
sbb
testl
in
aad
into
clc
xor
sti
out
int3
repnz
test
aad
repnz
fcmove
cld
mov
cli
and
mov
fucompp
lds
add
aam
rcr
fstp
fnstsw
fmull
lock
or
jge
add
add
in
ror
xor
out
ss
icebp
sar
cli
fldl
sub
in
xchg
xchg
cld
sub
loopne
lret
cmp
rcl
xor
ljmp
cmp
ret
ret
loop
mov
repnz
xchg
shr
int3
rol
xlat
cmp
repz
in
sarl
xchg
movl
std
std
aam
cs
lret
ror
cmc
lock
xlat
fst
ljmp
loope
lret
icebp
sti
fnstcw
sti
in
fchs
fdivrp
rorl
out
fimull
iret
xchg
ss
ror
cli
aaa
flds
xor
xchg
in
lret
ljmp
fidivrl
enter
hlt
std
test
rcr
fcmovbe
mov
mov
int
loop
repnz
repnz
cmp
in
shl
std
or
lea
aad
xor
rcl
in
enter
cmp
ds
cmp
jmp
loopne
lock
test
out
xor
hlt
stc
xor
lret
std
loop
into
cmc
in
fmuls
out
lret
in
leave
sar
jecxz
lock
out
aaa
stc
aas
idiv
loopne
fildl
in
test
lock
hlt
out
out
out
hlt
iret
repnz
cli
int
sar
repnz
lock
into
out
loopne
lret
out
jmp
fistpll
stc
faddp
into
cmc
in
ret
test
leave
jmp
repz
jecxz
out
ds
test
repz
repnz
sbb
xchg
nop
xchg
loop
hlt
call
cmp
cli
cmp
cmp
test
enter
addb
jmp
ror
rol
int
ror
int3
hlt
fadd
cmp
iret
xchg
les
lock
lret
cld
iret
out
jmp
add
loop
repnz
aad
or
faddl
in
xor
jmp
sti
cld
rol
shl
ftst
sarb
jmp
fsubr
in
cld
mov
xchg
shl
hlt
xchg
out
sub
jecxz
repz
lret
fdivrp
fcmovnu
testb
lock
xchg
addb
aam
cmp
sti
addl
sti
test
test
loope
repz
in
icebp
aad
leave
out
cmp
ss
cmp
adc
neg
sti
in
iret
ficoms
cmp
aam
cmp
ror
ret
in
fcmovb
xlat
addb
jmp
jmp
in
rcl
call
fadds
jmp
clc
fucom
loop
orl
jmp
in
loopne
jmp
rcr
sbb
xchg
xchg
call
call
shl
not
cmp
repz
aas
cmp
xchg
call
in
test
call
ljmp
cmp
lret
in
jecxz
iret
adc
std
loop
in
dec
fsubr
test
xor
loope
xor
call
ret
iret
cld
aad
rolb
xchg
lret
repnz
in
int
test
repz
cmp
ds
fdivrp
ret
imul
int3
stc
leave
jecxz
lret
jmp
cmp
aam
cmp
stc
ret
in
loopne
jmp
popl
out
repnz
cmp
enter
cmp
enter
in
std
jmp
in
aaa
hlt
ss
clc
cmp
sti
push
aam
shl
cli
in
in
jecxz
fucomip
lock
lret
test
jmp
in
out
rcl
rol
jecxz
clc
ds
ret
mov
test
ljmp
in
into
ret
in
cmp
out
ljmp
cmc
shr
hlt
fiaddl
xchg
in
lea
int3
ljmp
jecxz
hlt
cli
ret
test
testl
cmc
iret
iret
aas
lret
out
xlat
leave
fdivl
cmc
into
sub
fiadds
fiaddl
call
iret
rol
sti
mov
cmp
lret
testb
std
sti
cli
in
stc
in
lret
ljmp
cmc
fcomp
in
jmp
ds
add
clc
div
jmp
xlat
clc
decl
aam
in
fcomi
out
aad
orl
rolb
add
or
add
lds
add
leave
aam
aad
aam
sbb
stos
stos
add
add
shr
stc
sti
out
adcl
xor
aad
not
cmp
loope
cld
fld
in
fmuls
jmp
in
lret
iret
add
shr
aaa
icebp
shl
xor
cli
sar
fucomi
std
lret
int3
call
mov
into
divl
aam
fxch
addl
in
test
in
sti
test
hlt
ret
enter
aad
lret
aam
in
test
xchg
cld
jecxz
testl
loopne
aas
lret
cmp
in
shr
in
icebp
fcmove
jecxz
test
jmp
lret
mov
lret
xor
into
cmc
jmp
ror
aam
xlat
rcr
xchg
leave
mov
fstp
jmp
lret
mov
out
out
fnstsw
cld
ds
aad
std
lret
sub
xchg
iret
xor
call
sti
cmp
filds
in
sti
adc
mov
loopne
dec
out
int3
shlb
sbb
faddp
xchg
call
mov
test
lock
lret
rcr
int3
cmp
shr
flds
fsub
out
mov
loop
cld
cmp
lret
bnd
lock
clc
aam
in
fmul
inc
cmpb
mov
out
lret
out
mov
in
cmc
int
enter
into
xor
loope
cmp
shl
loop
into
jecxz
test
sub
out
cmp
repnz
not
cli
idiv
cli
enter
addl
roll
shr
icebp
leave
rcr
int3
lret
not
adc
fcomi
std
fcmovnu
std
jmp
div
rcl
rcl
xor
ljmp
and
rol
mov
fdivp
fists
decl
xor
jmp
imul
jecxz
loope
cmc
ret
rol
call
loop
int3
jecxz
ffreep
aam
in
rcl
aam
int3
clc
in
jmp
lea
jecxz
rcl
out
in
clc
neg
jmp
std
cmc
div
jecxz
aas
mul
repnz
out
lret
xchg
aam
repz
cmc
fcomp
icebp
cli
lret
lret
std
lock
fcmovnbe
rcl
loop
clc
fucomip
call
xchg
rol
jmp
shr
imul
shl
lret
sarl
rolb
rolb
das
cmp
int
call
aam
cmc
int
cmc
out
ljmp
loop
jmp
out
xor
ret
xor
lock
cmp
hlt
addb
fucomip
fisttpl
in
decb
into
in
ljmp
fadd
icebp
cmc
loope
clc
in
cld
in
out
sti
sub
jecxz
xlat
shl
repnz
aad
rcl
sar
std
neg
mov
in
cmc
stc
mov
fscale
mov
and
xlat
stc
leave
fsubr
lock
sti
repnz
fadd
jmp
xchg
xchg
rorb
xchg
xor
ss
aaa
aaa
fsubr
int3
jmp
std
loop
jmp
std
loop
aad
out
idiv
jmp
loopne
ret
fidivl
repz
iret
cmc
loopne
in
int
cmp
hlt
in
neg
rcr
icebp
iret
mov
iret
in
into
out
test
addb
fadds
loopne
xchg
imull
xor
xlat
cld
hlt
repz
into
adc
call
leave
fucom
loope
int
cld
fiadds
xor
sti
iret
into
hlt
aas
fdivrl
out
cmc
xchg
shr
hlt
aam
fcomp
fsubp
in
rcll
xor
xor
rcr
repz
rcr
out
out
in
stc
icebp
fdivr
out
ljmp
jmp
ror
loop
fucomp
xlat
ds
neg
jecxz
in
in
jecxz
rolb
cld
jmp
iret
fucomip
int
faddp
std
clc
rcr
enter
loopne
mov
icebp
xchg
rol
out
div
ljmp
fcomip
testb
mov
int
loope
xor
jmp
leave
cmp
clc
xchg
rcr
ret
test
xlat
mov
iret
loopne
lret
ret
cmp
cmp
repz
lds
std
cld
fistl
in
ljmp
cmp
lds
fadd
std
repnz
lret
call
mov
xor
xor
add
add
imul
jmp
rol
aam
aad
aad
xchg
mov
gs
aam
scas
add
add
loop
in
adcb
cmp
ss
lret
cli
out
cli
cmp
lock
repnz
cli
in
cmp
shl
cmc
repz
loope
out
aaa
ror
in
fcomp
aas
cmp
not
shl
cld
orb
mov
xchg
jmp
ror
cs
in
jmp
rcl
fsin
in
out
ret
xlat
lret
mov
shl
rol
xor
out
fcomp
sti
repnz
stc
jmp
cli
fdivrp
mov
in
xchg
loop
xchg
out
out
int
in
repnz
fcmovnu
repnz
std
int3
and
hlt
ljmp
shr
ljmp
cmp
shl
hlt
fprem1
dec
add
loop
call
xor
rcl
aad
ss
lret
into
repz
iret
iret
adc
mov
fimuls
fisttpll
rcl
rcr
fyl2x
int
cmp
and
jmp
fdiv
loope
jmp
cmc
in
icebp
clc
enter
enter
shr
cld
sbb
fdivr
push
rcr
fmuls
jmp
ret
enter
std
shr
fprem
ffree
test
ret
out
out
rorl
cmc
imul
hlt
leave
cld
std
sti
stc
cmp
out
shlb
aam
icebp
leave
call
fisttpl
xor
xor
sti
in
cmc
jmp
jecxz
out
ret
ret
test
clc
test
mov
rolb
cli
int3
in
call
into
aam
ret
cld
out
xchg
int3
lret
and
in
iret
iret
mul
xor
fstp
ljmp
xchg
out
lret
test
xchg
call
enter
cmp
idivb
mul
loopne
ror
aad
test
in
fst
in
nop
loopne
in
in
jecxz
stc
clc
in
fnstsw
cli
xlat
rcl
loop
jmp
lret
cld
jecxz
icebp
xchg
shl
int3
int
xlat
stc
cmc
repz
fld
lret
in
stc
aad
aas
cmc
in
cld
test
icebp
jecxz
ret
aaa
out
xor
cli
cmp
xchg
stc
aad
shl
ret
aas
call
leave
aaa
sub
shll
shl
fcmovnu
test
cmp
repz
sub
lret
in
test
shl
ror
cmp
out
lock
sar
loop
rol
lret
mov
int
out
sub
int3
cmp
aaa
repnz
cmp
int
neg
call
stc
mul
ljmp
lock
in
idivl
fmul
stc
loopne
repz
out
orb
loopne
rcl
fdiv
neg
lock
ljmp
sar
xor
in
in
mov
cmp
mov
aad
out
call
loopne
cmp
mov
in
xor
repz
fcmovb
cli
repnz
jmp
loop,pt
rol
shl
cli
mov
fcmovbe
jmp
out
jecxz
ss
shr
xlat
cmp
lock
call
lret
int3
loop
xchg
xchg
hlt
test
rol
fxch
cmp
or
repz
fadds
mov
mov
in
jecxz
movl
stc
icebp
clc
loopne
fsubr
fstp
sti
sub
loop
pop
mov
xchg
repnz
in
cmp
cli
call
in
shl
repnz
ret
hlt
ljmp
mov
cs
cmp
fyl2xp1
shr
loop
jecxz
repz
fcmove
enter
nop
fdivrp
or
bnd
cli
lret
out
idivl
xor
aam
adc
stc
mov
in
jmp
out
xchg
cs
cmc
stc
sarl
test
sar
in
lock
mov
cld
nop
std
roll
xor
aam
clc
xor
lret
sar
clc
sti
shl
in
fdivrl
test
cld
fisttpll
ss
bnd
xor
loop
test
repnz
jmp
aad
test
mov
lock
xor
repz
int3
idiv
loope
fsub
xchg
loopne
cli
frndint
mov
rolb
shr
cld
in
jmp
cmp
stc
add
loopne
mov
lret
sbb
mov
out
jmp
sar
jecxz
aas
rolb
cli
rcr
xchg
das
icebp
les
jge
mov
jmp
rcl
ret
fucomp
insb
fstps
cwtd
inc
movl
jle
out
out
cmp
aad
ret
cli
in
std
mov
mov
mov
enter
iret
cmp
aam
imul
shr
iret
iret
cld
rcl
out
ljmp
push
ss
xor
xlat
lret
in
fldl
fcmovnbe
out
sbb
aam
out
fidivl
rcr
fcmovnb
out
ljmp
cmc
mov
xchg
decb
in
cld
mov
xor
xor
repnz
int3
loope
shr
sar
fadd
filds
loopne
mov
aam
leave
das
lret
aad
cmp
cmc
out
cmp
xor
in
sbb
aad
loopne
test
jecxz
incl
out
repnz
fcmovnu
call
adc
sbb
lret
cmp
call
aam
out
in
rcl
fdivr
lret
sarl
cli
cli
fcmovnb
fmull
icebp
hlt
jecxz
cmp
fimull
xchg
add
add
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
sbbl
push
push
adcl
push
xor
addl
lea
addl
xor
or
sbbl
xor
andl
add
push
lea
xorl
push
movl
push
xorl
lea
inc
xorl
xor
addl
xor
adcl
call
movl
movl
mov
mov
movl
jmp
movl
xor
sub
xor
xor
xor
xor
mov
add
xor
movl
incl
mov
mov
cmp
movl
jb
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
movl
adc
movl
mov
mov
sub
xor
lea
mov
lea
xorl
mov
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
sbb
add
not
mov
mov
mov
mov
cmp
mov
mov
movl
je
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
or
dec
mov
jmp
mov
xor
xorl
add
adcl
imul
mov
jmp
sbb
xor
xorl
add
xor
mov
movzbl
or
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
add
sbbl
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
xor
addl
add
movl
cmp
movl
jne
adcl
push
pushl
addl
pushl
call
mov
mov
sbbl
mov
incl
mov
mov
adc
mov
mov
mov
mov
adc
mov
mov
dec
movl
adc
mov
neg
movl
mov
orl
xor
add
jmp
mov
orl
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
lea
sub
mov
mov
and
xor
movzbl
and
lea
or
mov
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
and
movl
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
or
dec
mov
jmp
adcl
movl
mov
mov
xor
mov
xor
add
movl
cmp
je
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
inc
xor
add
sub
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
orl
xor
or
mov
sub
xorl
add
mov
mov
cmp
ja
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
push
mov
call
pushl
pushl
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
mov
movl
push
mov
mov
mov
push
mov
mov
mov
cmp
je
adc
mov
mov
andl
xor
sbbl
add
movl
cmp
je
mov
xor
inc
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
sbb
push
adc
pushl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
push
movl
mov
subl
mov
add
xor
cmp
jne
mov
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
xorl
mov
mov
adcl
xor
add
movl
mov
movl
movl
not
movl
movl
mov
movl
push
movl
mov
cmp
je
mov
adcl
xor
incl
xor
lea
sbbl
xor
movl
cmp
movl
jne
jmp
add
sub
mov
xor
add
mov
xor
mov
adcl
xor
movzwl
add
xor
mov
sub
mov
adc
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
neg
movl
mov
push
or
mov
mov
sub
xor
mov
xorl
add
orl
mov
and
mov
subl
push
push
adcl
test
movl
je
mov
movzbl
or
mov
mov
andl
mov
mov
sub
mov
imul
mov
subl
add
dec
mov
not
mov
xchg
inc
sub
subl
xor
mov
movzwl
and
mov
negl
mov
mov
sbb
mov
subl
xor
sub
xor
addl
add
mov
movl
mov
je
and
mov
xorl
xor
andl
add
movl
cmp
movl
jne
pushl
adcl
call
sbb
mov
mov
mov
sub
and
mov
mov
mov
sub
mov
mov
andl
xor
orl
add
cmp
je
pushl
incl
pushl
orl
call
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
dec
mov
incl
xor
orl
add
movl
cmp
movl
je
sub
mov
xorl
mov
mov
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
andl
add
mov
mov
subl
mov
add
movzwl
or
mov
mov
mov
add
mov
movzwl
or
mov
mov
addl
add
xor
mov
sbb
mov
mov
addl
add
lea
andl
mov
push
orl
pushl
pushl
call
mov
subl
mov
sbbl
xor
movl
add
movl
cmp
jne
mov
inc
cmp
movl
jb
movl
jmp
mov
xor
xorl
add
movl
jmp
subl
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
