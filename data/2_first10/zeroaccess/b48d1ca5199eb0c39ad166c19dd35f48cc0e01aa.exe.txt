push
mov
sub
mov
push
movzwl
or
push
add
push
mov
xor
mov
add
mov
xor
mov
mov
sbb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
mov
dec
mov
dec
mov
movl
subl
mov
xor
add
mov
movzwl
sbb
mov
mov
orl
mov
adcl
mov
sub
mov
push
adc
pop
orl
sub
add
sbb
movl
mov
mov
or
movl
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
pushl
push
push
pushl
push
call
cmpl
jb
mov
adcl
mov
mov
add
mov
mov
mov
incl
xor
sbbl
add
mov
lea
mov
sub
mov
xor
andl
add
mov
subl
lea
movl
push
and
mov
adcl
xor
add
movl
push
mov
xor
mov
mov
adcl
push
addl
pushl
adcl
call
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
dec
mov
sub
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
movl
xor
mov
inc
mov
lea
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
xor
inc
mov
adcl
sub
mov
movl
mov
mov
cmp
movl
je
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
xor
xorl
lea
or
mov
xor
sbbl
div
mov
andl
mov
inc
mov
cmpl
jg
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
sub
mov
pop
and
into
movsb
jnp
jnp
hlt
pushf
jnp
ror
aam
ret
add
xchg
mov
xchg
test
orl
ja
stos
jl
jno
jl
inc
mov
sti
nop
jl
or
rcrb
push
imul
out
sti
fldcw
ss
rcrb
cmpsb
enter
cwtl
neg
sti
jns
sbbb
pushf
push
scas
lock
mov
lret
mov
xchg
add
xor
xchg
lods
in
mov
test
inc
mov
in
cli
xchg
xchg
inc
testb
and
push
dec
test
jecxz
fiaddl
sub
in
jecxz
adc
outsl
add
pop
pop
fildl
dec
mov
xor
out
rorb
xchg
jmp
cmp
sbb
or
scas
mov
xor
pushf
js
jbe
out
xor
mov
pop
repz
xchg
pop
hlt
xlat
cwtl
mov
das
add
jno
jbe
lahf
pop
pop
jb
add
jecxz
sbb
sbb
lahf
dec
jnp
mov
cmc
add
pop
dec
into
cmp
test
scas
push
inc
sbb
imul
xor
adc
repnz
push
aam
jnp
sub
fistpl
jl
mov
arpl
cmp
pop
pop
fnstsw
inc
ljmp
int
inc
inc
outsl
xchg
mov
xor
mov
clc
test
push
out
jge
mov
push
loope
stos
mov
add
aad
das
or
mov
push
pop
push
repz
cmc
push
and
and
mov
hlt
jnp
aas
cld
and
rcl
sub
pop
out
loop
inc
call
ficomps
jbe
cwtl
in
imul
fcomip
adc
pop
out
push
loopne
cmp
sub
fnstcw
ret
cmp
ja
xchg
sub
leave
imul
lret
push
push
lahf
and
jbe
jle
mov
jae
jno
adc
or
ficompl
shrb
jmp
sub
add
jo
pop
sub
mov
hlt
jns
mov
adc
or
pop
shl
dec
adc
adc
dec
or
xlat
out
movsl
fstpt
adc
leave
push
lods
inc
sbb
mov
fsts
aaa
jns
cmc
or
js
ja
lods
push
xchg
arpl
pop
testb
ss
bound
pop
xchg
xor
popa
test
leave
inc
shlb
imul
cmp
inc
push
shl
aaa
popf
int
push
jno
pop
or
aad
pop
adc
xlat
sbb
ret
jecxz
and
adc
adc
jae
in
pusha
push
push
jge
sbb
mov
cmpsl
fmull
pushf
test
cmpsl
fwait
insl
push
test
cmp
test
push
jmp
popl
pop
sub
add
rolb
fs
shlb
into
and
popa
xor
movsb
or
add
cmp
mov
pop
jge
in
loope
xor
aam
mov
cmp
sbb
jne
aaa
mov
mov
dec
xor
dec
imul
cltd
clc
gs
pusha
dec
inc
bound
int
je
fstpl
mov
sub
ret
push
int3
cltd
daa
frstpm(287
loop
sbb
int3
movsb
mov
movsb
jl
mov
add
lds
negl
and
lea
mov
popf
or
and
and
and
xor
fldl
stc
cltd
add
xchg
cwtl
stos
adc
xchg
dec
mov
dec
rcrl
mov
mov
add
xor
repnz
imul
in
test
in
jns
xor
sarl
popf
mov
fidivrl
sti
xor
cltd
sub
jl
xchg
movsb
je
inc
mov
pop
ja
inc
outsl
or
inc
scas
inc
jbe
sbb
aaa
mov
sbb
xchg
test
sub
fidivs
mov
lcall
mov
mov
arpl
adc
stos
sub
xchg
jnp
dec
inc
std
mov
push
xlat
sbb
add
lds
mov
shrl
and
lcall
xor
inc
sub
test
xor
movsb
mov
in
xchg
sahf
dec
xor
lret
add
scas
mov
cmp
xor
sbb
repnz
xchg
popa
sbb
rcrb
cmpsl
jne
sub
jbe
cs
iret
inc
jmp
imul
or
pop
sbb
push
mov
push
jno
repnz
sahf
adc
or
les
pop
jge
rcrl
mov
ljmp
je
or
mov
arpl
adc
aam
xchg
inc
test
sbb
fildll
test
iret
push
js
dec
mov
adc
pop
sbb
sub
lcall
cmc
push
dec
jnp
or
mov
mov
push
call
clc
xchg
jge
add
inc
adc
inc
push
sub
sub
mov
testb
ja
lds
mov
jo
push
notl
mov
cmp
bound
pop
fimull
and
nop
mov
push
dec
dec
bound
add
cmpsl
or
inc
pop
cmp
xchg
ret
std
xchg
add
cmc
les
bound
ljmp
data16
lods
xchg
mov
pop
dec
sub
in
ja
jge
pop
int3
dec
jle
dec
xor
push
std
and
bound
push
insl
test
xor
in
jne
adc
std
sbb
add
or
out
js
jmp
push
scas
and
cmc
xorl
ds
sbb
loopne
sub
shrl
mov
push
add
fwait
mov
mov
add
mov
xchg
mov
sbb
mov
insb
fmuls
fs
stc
rorl
or
imul
adc
sbb
je
inc
adc
xchg
mov
cmc
adc
pop
shll
imul
out
dec
int
rcl
mov
dec
jbe
cmpb
inc
dec
sub
push
cli
test
push
jl
sub
jne
clc
ds
pusha
push
xchg
sti
mov
push
test
incl
testb
mov
push
ljmp
sarl
xchg
and
mov
jle
mov
insl
addb
mov
dec
xchg
ja
daa
fcomps
pop
test
and
lcall
jge
pop
mov
or
cmp
gs
push
add
insl
pop
stos
adc
mov
ret
push
mov
das
sub
cmp
pop
ja
xchg
dec
iret
sub
xchg
dec
adc
insb
jmp
insl
out
insb
cmp
sar
test
fdiv
push
insl
fldenv
arpl
jg
loope
dec
stos
in
enter
scas
dec
and
repz
in
xor
leave
pop
int3
dec
or
mov
or
clc
movsb
iret
pop
push
inc
push
int
cwtl
and
inc
pop
icebp
bound
fnstsw
or
mov
pushf
dec
lea
lock
adc
arpl
sub
in
pop
fadds
dec
push
sbb
negl
pop
mov
js
mov
imulb
cs
pop
xchg
and
sbb
ret
xchg
xchg
add
dec
mov
mov
sub
inc
inc
or
loop
lods
fistl
xchg
and
fsubs
sub
add
xor
insl
jl
cltd
pop
in
prefetch
mov
jecxz
xchg
pushfw
loope
dec
aad
rcrb
jo
mov
jp
outsl
add
cmpsb
pop
mov
in
jle
lods
flds
mov
shr
fcmovbe
cltd
jne,pt
addb
out
std
sbb
xchg
mov
pop
call
arpl
mov
push
in
std
out
lahf
stos
daa
or
enter
pop
popf
int3
sub
in
popa
adc
stos
jne
xor
test
les
scas
push
cmpsl
call
cmpsl
fstpt
push
lret
call
clc
jg
add
push
sti
push
adc
pop
and
hlt
inc
jecxz
in
dec
adc
inc
lret
sbb
out
popa
or
xor
cmc
ret
int3
xor
fiadds
xchg
inc
mov
or
dec
dec
cmp
int
dec
ja
mov
fwait
jmp
insb
cmp
or
rclb
cltd
or
pop
movsb
dec
jno
je
movsb
stc
stos
cld
jmp
out
adc
mov
pop
or
lcall
push
cmp
mov
scas
lods
sub
adc
movsl
mov
pop
mov
or
iret
rclb
aad
or
jae
and
data16
cmp
ss
cmp
push
lods
inc
add
jecxz
in
pushf
fadd
lods
das
cmp
cmpsb
out
iret
push
mov
push
push
out
into
in
jecxz
loope
sbb
push
outsb
and
in
inc
lret
add
pxor
sahf
jg
jno
mov
movsl
int3
loope
xor
xchg
pop
xchg
add
movsl
jge
jmp
frstor
rcrb
xor
lods
or
mov
scas
stos
filds
xchg
lret
jmp
inc
cmp
sbb
add
shlb
cltd
push
sub
stos
cmp
and
mov
xor
lret
jp
mov
xlat
shll
xor
call
dec
lea
push
push
cld
call
or
lods
pusha
int
adc
push
lods
mov
mov
aas
cmp
rorl
ja
xchg
sub
ja
test
mov
inc
cmp
xor
lret
add
stos
out
xor
fisubrl
shrl
setns
fs
pop
mov
in
push
jmp
lahf
rorl
or
popa
into
addl
imulb
scas
add
pop
pop
fwait
dec
adc
loop
push
and
cmp
arpl
nop
lods
loope
and
je
in
fwait
and
jg
fdivr
loop
jae
mov
pop
clc
push
xor
mov
imul
push
repz
pop
or
pop
sbb
jbe
add
lcall
pop
mov
adc
cwtl
lods
addr16
pop
adc
pop
inc
rcll
mov
lds
cmp
dec
lahf
fcmovnu
sbb
sub
faddl
shlb
leave
das
ret
xchg
adc
jns
xor
dec
lcall
xor
mulb
stc
mov
sub
cmp
mov
jle
pop
mov
call
adc
shrb
sub
inc
pop
fistl
mov
inc
mov
cmp
inc
in
mov
jp
out
or
add
lea
sub
addr16
dec
cs
insl
adc
adc
loop
sub
test
nop
loopne
into
push
push
or
xchg
cmp
push
rolb
adc
jle
repz
arpl
iret
mov
and
jne
xor
addl
inc
fsubrp
push
data16
xor
iret
sbb
jbe
pop
mov
add
mov
dec
fbstp
outsl
lret
lcall
ss
push
push
enter
enter
outsb
stos
jae
ja
xchg
js
test
xor
xor
icebp
mov
ds
femms
shl
add
psadbw
idiv
inc
out
insl
add
add
fimuls
push
fdivl
and
fcomps
imul
outsb
stc
in
inc
out
js
test
adcb
fisttpll
notl
add
shll
cmp
movsl
mov
cmpsb
cmp
dec
adc
pop
out
lods
pusha
dec
pop
mov
pop
fisubs
nop
aam
mul
dec
and
adcl
adc
mov
dec
int3
mov
mov
mull
icebp
pop
aaa
push
push
dec
xchg
sbb
cwtl
mov
mov
test
fwait
leave
and
movsl
jo
sub
js
cld
cmp
and
inc
dec
inc
popa
notb
cmp
insb
add
loop
cmp
test
mov
push
or
jge
pop
std
push
xchg
add
aam
leave
or
xchg
mov
jg
loop
fcmovbe
sub
and
in
jae
in
icebp
lcall
sbb
out
adc
push
lret
xchg
adc
cmp
inc
jp
xor
cmc
iret
xor
and
in
inc
mov
or
sub
jl
sahf
sti
fwait
hlt
popf
scas
or
xor
pop
aaa
mov
xor
stc
sbb
imulb
dec
pop
ret
imul
cmp
push
out
in
dec
outsb
dec
pop
cmc
popf
hlt
popf
sbb
sbb
mov
js
popf
xchg
pusha
and
pop
dec
gs
push
push
adc
fcomps
sub
push
popl
popf
jge
mov
and
cmp
pusha
xor
add
or
xchg
xchg
loop
push
cmp
push
mov
pop
loope
push
and
mov
mov
cmp
jl
bnd
mov
xchg
add
mov
jmp
inc
int3
sub
ret
jo
xorl
dec
mov
mov
nop
cmp
andnps
pop
adc
aas
mov
cmp
shlb
push
xor
adc
mov
fs
sbb
adc
push
imul
push
loope
or
int
sbb
push
int3
pop
pop
insb
add
repz
cmp
cs
add
mull
mov
ret
push
arpl
lods
ficompl
mov
xor
fisttpll
and
out
and
jmp
jle
push
js
lods
xor
cmp
push
test
and
bound
clc
or
movsb
lahf
loope
jnp
sbb
cld
jno
shll
push
adc
jne
sub
jo
sub
jmp
xchg
adc
movsl
mov
pop
xor
fwait
ret
stos
scas
loop
sbb
mov
daa
lods
adc
push
inc
fmull
jbe
aam
lcall
sub
jg
sbb
mov
dec
ljmp
mov
pop
adcl
mov
cmp
mov
je
and
xchg
sub
pop
add
lock
add
add
ret
push
test
lock
pushw
sub
leave
inc
mov
ret
fdiv
xor
cmp
add
pop
xchg
arpl
dec
push
jne
shr
hlt
dec
test
jne
add
jbe
paddusb
xor
lcall
imul
loope
jge
push
into
and
jne
xor
jnp
xor
push
xor
addb
mov
push
jae
jmp
jb
push
and
and
outsb
faddp
dec
add
out
mov
xor
sahf
out
stc
stos
loope
loopne
push
test
stc
mov
popa
mov
pop
sarb
roll
cmc
xor
mov
cmpsl
xchg
inc
jle
cwtl
pop
or
or
int
mov
sub
dec
xchg
inc
dec
push
cmp
ja
sbb
sbb
push
mov
mov
mov
mov
les
pop
movsb
sub
xor
xchg
jp
cmp
hlt
sbb
pop
cmpsb
subl
mov
xchg
repnz
xlat
jecxz
popa
stc
dec
adc
jl
loopne
int3
adc
orb
call
fidivs
and
jmp
and
aad
pop
dec
jo
shll
xchg
fcomi
or
loopne
dec
sub
into
lods
rcrb
sbb
mov
xchg
or
arpl
fdivrl
imul
fisubrs
cmp
cmp
lahf
out
mov
cmp
std
inc
mov
dec
or
dec
hlt
scas
fadds
push
add
imul
rcr
insb
ja
inc
dec
nop
mov
adc
or
lods
cmpsb
jbe
sbb
ret
sub
push
repz
out
sbb
hlt
out
nop
inc
sub
fcoml
fsubrs
cs
cmp
adc
inc
movsb
clc
test
sbb
loope
push
inc
in
cwtl
add
sub
inc
lret
es
sub
inc
pop
icebp
jmp
mov
nop
pop
popa
push
popf
popf
arpl
enter
les
dec
in
xor
mov
cmp
mov
sub
imul
fisttpl
ficoml
xlat
lods
or
xor
mov
jo
xchg
sub
loope
sub
dec
sub
mov
js
xchg
scas
arpl
sub
adc
ja
push
jo
mov
loop
test
lret
mov
ljmp
sarl
lea
cmpsb
sbb
jmp
stos
sub
fwait
cmpsl
pop
ret
cltd
mov
xor
lahf
pusha
jle
bound
add
lret
dec
repnz
stc
cmp
sbb
in
pop
mov
sbb
cmp
repz
inc
push
subb
sbb
fldz
mov
addl
push
movsb
push
daa
jmp
adc
out
mov
flds
inc
push
inc
rcr
lods
dec
movsl
adc
cmpsl
les
push
out
jne
add
int3
dec
sbb
stos
add
int
in
cmp
out
mov
ret
ja
push
mov
mov
jmp
in
cmpsl
cmp
std
add
loopne
inc
mov
aam
into
pop
mov
aaa
test
les
push
ret
insb
popf
outsl
pop
or
ss
sbb
mov
xchg
add
xor
js
or
inc
dec
aaa
adc
jg
inc
iret
ret
subb
and
les
push
and
dec
cmp
add
push
out
push
filds
shrl
call
cwtl
inc
push
add
cmp
lods
add
fst
lret
push
push
imul
mov
or
mov
add
icebp
push
mov
pop
dec
cmp
jl
popl
xchg
fldl
sahf
cmp
std
mov
mov
lds
je
jp
test
shl
adc
or
out
pop
sub
and
mov
lret
sbb
rcll
mov
data16
clc
push
mov
dec
sbb
repz
pop
jne
pop
push
lea
loop
mov
sub
pop
insl
ffree
testb
and
insl
push
loop
sub
push
adc
idivl
cmp
cmpsb
loope
dec
into
sti
mov
xchg
jp
stos
sbb
stos
inc
adc
jne
mov
sbb
push
insl
push
push
add
dec
cmp
stos
insb
mov
mov
push
cmc
and
pop
data16
pop
clc
sub
sti
pop
lcall
jo
jae
aad
nop
mull
adc
lds
jns
dec
cmp
cmpl
cs
xchg
inc
cmp
inc
arpl
xchg
xor
cmp
bound
mov
or
pop
rorb
icebp
mov
sbb
sbb
lahf
out
pop
pushl
mov
out
mov
lahf
aaa
into
pop
insb
sbb
ret
cwtl
or
and
mov
cmp
icebp
sbb
testl
mov
outsb
hlt
mov
loopne
inc
mov
int
out
outsb
cltd
mov
jecxz
sub
in
sub
inc
lock
imul
lcall
adc
push
fisubrl
xchg
loope
stos
test
adc
sub
mov
pop
int
test
icebp
test
sbb
movsl
ret
popf
jne
add
clc
jmp
lahf
jmp
mov
jno
pop
xor
xor
inc
mov
je
sub
lea
inc
jb
inc
xor
outsl
sub
push
sahf
lea
sbb
adc
int
test
ja
fisubrs
std
fsts
xchg
std
loope
or
rorb
fiaddl
jecxz
imul
insb
inc
inc
mov
mov
xchg
call
pop
aam
push
out
jl
cmp
ds
js
repnz
sbb
add
jae
pushf
ljmp
pop
stc
cmpb
stos
or
push
and
cmpsb
mov
fisubrl
jmp
in
push
push
out
xlat
push
rcrl
scas
and
adc
push
outsb
in
jno
pop
or
adc
jnp
and
movsl
sahf
xchg
sahf
mov
lret
test
push
int
pop
mov
dec
sub
pop
dec
aas
mov
jae
outsb
in
inc
cmp
sub
adc
out
mov
movsl
mov
lcall
insb
jo
mov
addl
int
popa
adc
mov
inc
aas
mov
jns
mov
fisttpll
cs
mov
jl
and
xchg
pop
ds
adc
int
imul
sarb
fs
jno
in
fwait
jnp
jl
mov
lret
aaa
jo
jns
adc
inc
push
daa
push
pop
mov
int
cmpsb
push
push
jl
mov
xlat
xlat
push
mov
std
lock
shrb
add
clc
add
outsl
sub
sub
bound
jo
int
out
mov
out
js
mov
xchg
fdivrl
pop
mov
out
mov
lock
add
sub
in
jmp
inc
test
clc
nop
mov
cmc
out
sbb
cld
lcall
mov
xchg
sbb
dec
mov
scas
jge
pop
mov
mov
rolb
add
popa
and
mov
mov
fnstcw
data16
pop
xor
cmp
add
outsb
fucomp
inc
pop
clc
rcrb
adc
inc
lret
or
xor
arpl
test
stc
push
or
std
lret
pop
rcll
mov
cmp
scas
shlb
push
or
in
jb
nop
fwait
clc
mov
jge
shr
add
sub
mov
dec
jne
push
jae
push
add
jmp
leave
in
mov
or
inc
int3
je
mov
add
adc
push
or
int
push
stos
xchg
lods
stc
out
cmp
and
rclb
inc
mov
andl
jne
lods
movb
mov
bound
jl
fsubr
fs
bnd
jno
or
stos
pop
mov
in
mov
jns
cmc
mov
test
sahf
and
push
mov
or
das
in
xchg
jecxz
sbb
loopne
xchg
cmpsb
jecxz
ret
push
rorl
push
shr
iret
xchg
iret
fscale
std
jp
adc
add
push
into
test
shrl
mov
xchg
pop
add
call
enter
xor
jl
ds
sub
or
shll
push
mov
mov
insl
in
int3
dec
mov
ljmp
add
or
dec
xchg
xchg
adc
pop
hlt
push
test
and
testb
and
shlb
in
mov
xchg
sbb
adc
int3
test
push
ret
out
add
ja
clc
mull
js
inc
push
dec
cld
out
not
xchg
fmulp
cwtl
pusha
mov
rcl
orl
cltd
enter
sbb
mov
cmp
pop
int
mov
mov
test
fistpl
pop
ret
ja
pop
out
mov
loopne
hlt
adc
iret
xchg
jno
inc
xlat
pop
dec
cmpsl
mov
push
bound
loope
mov
inc
flds
mov
push
loopne
shlb
jno
stos
pop
mov
sub
sub
cwtl
xor
add
pop
mov
mov
inc
pop
dec
lret
mov
cmp
pop
adc
mov
test
sbb
sub
xchg
not
ja
movsb
ja
mov
movsb
xor
imul
jmp
mov
cmpsb
dec
push
outsl
dec
imul
rolb
dec
adcl
stos
movsb
sub
sbb
xchg
jb
aaa
dec
pop
add
and
cmpsb
sub
sbb
push
xchg
aad
or
cmpsb
divps
cwtl
pushf
jl
jmp
add
sub
shl
pop
call
cmpsl
mov
jmp
in
jno
stc
xchg
repz
sbb
and
lcall
inc
arpl
and
push
mov
push
andb
cmp
jns
test
into
inc
jo
repnz
add
fwait
mov
push
cmc
test
and
insl
in
in
inc
ficoml
movsl
cmp
sub
xor
mov
cmpsb
jne
add
mov
mov
out
ret
cs
les
pushf
fidivs
sub
mov
hlt
pop
mov
mov
mov
push
pusha
addr16
xlat
and
jbe
pop
lret
push
inc
and
sub
movb
push
pop
ss
aad
pop
shlb
test
cli
push
out
loop
stc
dec
pop
jns
adc
imul
sbb
call
data16
mov
mov
les
stc
es
insb
pop
sbb
daa
orl
xchg
pop
dec
push
orb
int3
mov
int
aaa
xor
addr16
lret
cltd
adc
mov
popa
sub
push
fs
cmpsb
in
loope
dec
or
cmp
aaa
fcmovnb
add
and
movsb
into
pop
imul
cltd
push
ret
icebp
push
in
loopne
pop
lock
add
lret
pop
pop
dec
mov
jle
mov
out
xchg
xchg
xchg
sarl
outsl
scas
ljmp
stos
aad
adcb
mov
lcall
or
ficoml
fwait
adc
popa
fprem1
mov
cmpsl
fsubrs
adc
push
repz
sbb
adc
sbb
sbb
addr16
xor
and
mull
jecxz
sub
and
incb
jbe
mov
cs
sysret
sbb
jnp,pn
test
inc
inc
rorb
sti
scas
push
and
std
fildl
repnz
das
or
pop
cmpl
in
inc
into
faddl
mov
fstpt
lahf
sbb
pop
outsl
add
push
incl
out
rcll
add
into
or
sbb
cld
pop
sbb
fiadds
sar
lret
fs
cli
js
cli
mov
push
sbb
push
and
ret
mov
push
add
sub
es
nop
ss
mov
lods
add
mov
popa
movsl
push
out
arpl
in
xor
minps
lods
sub
pop
jge
arpl
sub
cmp
adc
popa
bound
push
in
jae
push
jnp,pt
fildl
loopne
mov
mov
fwait
inc
hlt
mull
pop
cmpsb
ret
pop
lods
mov
cltd
push
or
rcll
in
leave
sub
test
fwait
adc
sbb
sarb
orb
imul
inc
add
vandps
and
mov
sub
mov
leave
and
aaa
mov
lea
sub
fs
int
les
xlat
mov
pushf
imul
mov
push
pop
xor
xor
test
int3
xchg
imul
lods
cmp
adc
cmpsl
sti
lock
pushf
mov
inc
fidivrs
movq
xchg
daa
repnz
outsl
shrl
in
popa
jne
insl
jo
lock
insl
cs
ljmp
fsts
ljmp
movsl
pushf
adc
or
xchg
adc
xor
pop
arpl
mov
hlt
jg
insl
test
mov
push
push
xchg
dec
jle
out
lods
fwait
mov
les
jl
mov
push
xorl
pop
std
sub
fdiv
xor
add
sub
or
cmp
imul
jecxz
rorl
mov
sub
jb
pmulhw
das
mul
or
aaa
push
jbe
out
imul
cmpsb
cmp
pushf
jnp
cmpsb
aam
loop
dec
dec
xorl
sub
mov
movsl
and
inc
decl
test
xchg
test
jbe
mov
stos
shrb
inc
data16
mov
or
mov
fdivrs
pop
or
or
push
jl
ficoml
and
sub
loop
mov
lret
out
pop
sbb
add
fwait
sahf
or
mov
lock
adc
les
mov
pop
adc
imul
pop
jle
sbb
mov
imul
mov
mov
pop
ret
mov
lds
es
sub
std
fidivs
ficoml
jb
or
dec
js
mov
or
fnstenv
sub
fcmovbe
jl
or
loop
add
cmp
rorb
xchg
fwait
xchg
pop
mov
inc
ljmp
xchg
mov
lods
lret
mov
or
pop
adc
sbb
cmpsl
inc
inc
push
popa
clc
mov
mov
cmp
rcl
xor
pop
fnstsw
push
in
xchg
mov
lcall
xor
or
cmp
add
data16
adc
leave
sar
inc
pop
repz
sti
or
aaa
pop
jle
push
sbb
mov
or
shlb
add
fcmovnu
xlat
outsl
filds
test
mulb
popa
pusha
jns
push
xchg
inc
push
repz
gs
add
dec
mov
out
sub
mov
lods
add
mov
mov
loopne
lret
mov
sahf
dec
pop
mov
mov
mov
pop
mov
imul
dec
xchg
shlb
ss
cmpl
stos
and
repnz
js
sbb
das
pop
stos
in
rcr
push
imulb
sub
mov
pop
and
push
jns
adc
pop
cmc
dec
gs
jno
mov
adc
xor
inc
jecxz,pt
ret
adc
and
sub
mov
mov
adc
idivb
outsl
add
aam
dec
iret
mov
sub
addr16
push
push
push
les
dec
push
xchg
lock
inc
rcl
jg
push
jnp
leave
add
int3
and
aam
cltd
inc
adc
gs
movsb
jmp
adc
jecxz
movsb
xor
mov
cmp
dec
add
jne
sahf
add
adc
jecxz
fiadds
xlat
add
mov
jle
push
adcl
xlat
mov
cld
inc
shrl
aad
loope
movsl
and
bound
out
je,pt
jmp
insl
push
fists
fadds
jle
jb
bnd
push
pusha
scas
in
sbb
sbb
push
aad
fimull
jns
or
xor
inc
imul
sti
push
sub
les
lret
cld
lret
dec
aad
jnp
cmp
repz
adc
shrb
jo
dec
push
jecxz
cmp
cmp
mov
rcrl
add
fcmovb
dec
dec
stos
stc
adc
jo
xchg
cs
out
btr
nop
mov
fmulp
movsl
and
rcr
outsb
xchg
push
in
int3
jae
pop
pop
push
cmpsb
mov
jne
jmp
xchg
repz
mov
je
cmp
jmp
enter
addb
enter
mov
dec
and
adc
fsubp
and
out
in
jae
leave
xor
das
pop
ret
sbb
mov
dec
lock
xor
adcl
xor
sub
movl
cmp
jne
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
andl
xor
adcl
add
sbbl
add
movl
mov
cmp
movl
jae
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
call
jmp
mov
decl
mov
orl
xor
xorl
add
lea
movl
mov
movl
mov
cmp
jbe
addl
addl
jmp
addl
mov
xor
sbbl
inc
incl
sbbl
add
movl
cmp
jb
mov
xor
mov
add
mov
xor
notl
mov
sub
add
subl
mov
xor
sub
ror
xor
or
mov
mov
mov
mov
xorl
sub
xorl
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
jmp
lock
pop
pop
insb
js
mov
cmpsb
addr16
hlt
pushf
jnp
hlt
pushf
jnp
dec
sub
test
adc
into
jge
jae
lock
imul
jnp,pn
fwait
test
imul
add
inc
pop
xchg
sbb
cld
popf
mov
adc
cmp
pop
or
push
icebp
push
imul
scas
add
pop
or
movsb
sti
mov
sarb
adc
mov
pop
push
outsb
lahf
fimull
out
repz
dec
and
inc
push
xlat
ja
add
bound
jb
loope
addr16
jecxz
out
jp
sbb
jae
mov
and
and
gs
lea
jae
mov
inc
insl
neg
xor
lods
lret
or
test
mov
icebp
push
aaa
ljmp
mov
mov
add
cmp
test
push
dec
xor
rclb
xor
pusha
jnp
push
lods
sub
sbb
jno
mov
pop
cmp
push
scas
pushf
movhlps
add
sbb
js
repnz
lret
dec
push
loope
mov
sub
mov
inc
adc
xchg
pop
stc
aam
inc
or
out
stos
mov
lret
pop
sbb
dec
push
or
stc
add
and
mov
pushf
sub
jmp
xchg
subl
mov
dec
in
sbb
adc
mov
jno
mov
daa
xchg
testl
add
gs
inc
cmpl
push
repnz
cmp
xor
dec
pop
subb
mov
sahf
inc
mov
stos
ret
xchg
adc
xor
sbb
ficomps
aam
and
pop
pusha
lods
cwtl
add
sbb
mov
pop
jge
lcall
fwait
insb
lds
and
jp
push
lcall
arpl
xchg
addr16
adc
dec
sub
xchg
pop
sub
add
mov
add
sahf
inc
data16
cmp
les
adc
jo
lret
arpl
or
lahf
orl
movsb
cld
cltd
aas
add
jnp
cli
das
push
aad
imul
dec
cmc
ret
das
andb
push
and
mov
ja
push
jmp
inc
sbb
or
test
dec
inc
ss
inc
out
pop
fwait
mov
jmp
out
inc
jne
outsb
push
add
xchg
push
cmp
push
mov
cmc
or
jnp
pop
fcoms
or
inc
adc
inc
stos
mov
push
lret
add
push
ret
cmp
aad
push
push
pop
xor
jge
sti
xchg
stos
jns
sub
jecxz
and
ret
xor
xlat
pop
xor
xchg
insb
aas
cltd
fcoms
stos
dec
shlb
sbb
and
push
fisubl
insb
scas
lock
jmp
xchg
pop
cmp
pop
pusha
out
add
bound
mov
cmp
push
fnstenv
cmp
and
xchg
js
push
xchg
mov
mov
hlt
dec
enter
xor
jle
xor
mov
mov
push
cmpsb
int
pop
mov
cmp
cmp
pop
adc
push
add
arpl
bound
js
xchg
sahf
shlb
push
ljmp
pop
shl
mov
pusha
popf
mov
test
sub
adc
outsb
add
dec
pop
aaa
addl
jbe
xchg
add
pop
xchg
add
sbb
cmp
push
mov
popf
fwait
addl
sbb
push
mov
adc
call
rcl
jle
fldcw
lock
lock
fistl
in
sti
push
pop
stos
pop
push
dec
push
cld
mov
push
nop
jns
xor
scas
pop
mov
pusha
pop
jge
jg
shll
out
fistps
sti
in
push
xchg
insb
inc
pop
rorl
and
mov
adc
imul
outsl
xorb
and
ss
dec
shll
dec
es
xchg
and
in
push
lret
adc
mov
mov
cltd
insl
ret
inc
push
push
push
js
lret
xor
fucomip
mul
and
loopne
mov
sahf
cld
sbbl
in
pop
adc
sbb
adc
mov
outsl
cmc
sbb
or
or
cmp
push
iret
sahf
popa
cmp
mov
lea
mov
cli
insb
push
jno
adc
push
fcoms
sbb
shl
popf
ror
xorb
lods
test
arpl
stos
hlt
push
jmp
inc
adc
clc
adc
fcoms
fwait
mull
shrb
rorb
int3
cmp
mov
cmp
jbe
gs
cs
add
or
lcall
jg
sub
cmp
add
or
dec
icebp
test
into
jns
shl
sbb
cmp
ret
cmp
sbb
xchg
cltd
jg
push
out
or
pop
movsb
cmc
fistpll
mov
sbb
icebp
cmpsl
mov
std
jmp
push
xchg
pusha
sarl
dec
ret
xorl
xchg
jno
cmpsl
mov
and
xchg
or
pusha
out
pop
pop
les
imul
test
cmpsl
aaa
movsl
adc
pop
cmp
mov
ljmp
imul
aas
imul
arpl
lcall
mov
in
lcall
sahf
gs
fisubrs
out
lea
sub
push
push
adc
xor
in
out
xchg
adc
movsl
shlb
jns
push
je
pop
lahf
inc
cltd
lds
cmp
daa
xchg
pop
and
daa
adc
aam
mov
mov
pop
dec
dec
repz
into
fs
jbe
aas
mov
shr
dec
mov
add
xchg
inc
sti
jp
pop
mov
xchg
cmpsb
movsl
inc
repz
dec
enter
jns
and
leave
cmpsl
mov
shlb
mov
jnp
sbb
imul
out
int3
jae
fs
ds
adc
repz
mov
jo
ds
mov
push
subb
std
pop
mov
insl
pop
imulb
add
mov
mov
jae
shll
xorl
jbe
pop
and
pop
jns
popf
mov
and
jmp
das
insb
out
ficomps
int
xor
and
ror
cli
mov
scas
mov
mov
xchg
es
out
popf
addr16
out
dec
filds
xor
xchg
stc
arpl
lods
xorb
sbb
adc
mov
push
ja
insb
rolb
sub
lods
popf
xchg
aas
in
es
ljmp
jle
inc
pop
les
sub
xchg
pop
cmp
push
jmp
bound
dec
dec
mov
pop
push
lock
sbb
and
orb
aas
in
add
xchg
pop
xchg
lods
and
jo
loopne
mov
and
inc
pop
sarl
sub
push
pop
fsub
lods
aam
cmpsb
sbb
pop
jle
int3
in
rcr
add
adc
sbb
shrl
outsl
inc
fidivrs
shlb
pop
mov
sarl
gs
and
cld
in
cmp
mov
jg
imul
and
test
xchg
loop
out
cltd
int3
lods
addr16
fidivrs
cld
aaa
fmul
bound
cmc
add
add
int
xor
inc
pushf
mov
mov
adc
lea
inc
xor
inc
jge
xchg
mov
adc
pushf
push
dec
jbe
pusha
cs
add
push
dec
dec
fimuls
adc
pop
sub
push
xor
in
sub
rol
dec
xor
inc
ret
arpl
data16
sub
in
xchg
rclb
lret
cltd
in
jl
sub
hlt
lcall
shrd
mov
sbb
int3
das
mov
add
out
inc
and
insb
sbb
bnd
or
inc
addr16
inc
mov
out
test
mov
jmp
lea
cmc
ds
fdivrs
lods
inc
gs
loopne
iret
arpl
ret
jge
inc
pop
pop
sub
ss
add
inc
jnp
hlt
xchg
pop
and
xor
in
loope
inc
xchg
fsubrs
ja
jae
fnstsw
fdivl
popa
mov
and
sbb
lds
inc
test
pop
incb
push
sub
icebp
fld1
mov
adc
add
or
add
and
insl
mov
sub
cmp
arpl
push
xor
mov
lods
add
mov
imulb
sti
dec
insb
out
ja
jb
sahf
cs
push
shll
mov
pop
out
mov
lods
adc
sub
jg
cld
cltd
cmp
cltd
mov
xchg
pop
aad
dec
fldt
cmp
daa
ljmp
adc
xor
fmuls
int3
inc
arpl
test
jg
test
dec
arpl
sub
mov
fnstenv
dec
inc
bound
xor
movsl
cmp
mov
addr16
push
pushf
ds
movsl
lds
mov
idiv
cmp
xlat
shll
ljmp
dec
add
mov
mov
xchg
mov
jae
add
repz
or
cli
push
fbld
jg
inc
scas
enter
test
ficoms
shrl
xchg
bound
cs
jo
into
jne
gs
out
adc
loopne
xchg
adcl
mov
cmp
rcl
lods
enter
jnp
fwait
pop
out
sub
or
je
mov
xchg
jmp
sub
dec
ret
stos
rcl
or
push
fnsave
and
mov
jecxz
insl
inc
nop
sbb
lods
xor
jae
push
das
jns
fnstcw
sub
sbb
pusha
mov
jno
adc
lret
mov
and
xchg
lods
fistpl
mov
in
repz
lret
xchg
jg
add
es
mov
cmpsb
fcmovnu
ficoml
das
cli
pop
inc
fisttpll
push
sbb
rorb
dec
jae
leave
inc
ds
sbb
call
xor
mov
fwait
popa
leave
mov
es
out
push
ds
jbe
ds
jnp
pop
adc
imul
decl
fsubs
ljmp
add
leave
inc
fcom
loop
push
fbld
jnp
jl
jns
adc
mov
push
xor
out
fbld
jbe
or
sub
ss
das
fs
rorl
sub
inc
lahf
push
in
inc
ficomps
mov
jmp
dec
sbbl
mov
adc
addr16
lret
ja
jns
jecxz,pt
adc
push
fs
movsl
movsl
add
call
dec
nop
sub
das
lret
push
xlat
mov
jecxz
es
cmpsl
pop
call
cmp
ret
push
test
jno
and
mov
or
cmp
inc
xor
fwait
ss
flds
hlt
lea
jo
and
jecxz
ja
scas
sub
jecxz
popf
inc
fsubrs
jb
ja
cmp
outsl
loop
add
mov
jo
jle
test
pop
enter
ds
std
test
add
inc
gs
aas
push
lahf
stc
insb
mov
and
inc
in
jns
mov
jne
and
jae
mov
in
outsl
aad
cli
movsl
ret
xor
and
xchg
push
mov
ficoms
pop
fnstsw
push
and
push
sbb
mov
and
sbb
jo
pop
call
cmp
adc
dec
pop
in
push
push
stc
xchg
adc
xchg
xor
sbb
mov
add
andl
add
dec
movsl
jb
xor
test
xchg
xchg
roll
xor
bound
push
fisubrs
and
cld
inc
inc
aad
pop
mov
pop
jle
testb
mov
hlt
push
mov
loopne
cmp
or
adc
mov
shll
fidivl
xchg
inc
lock
pushf
sub
mov
mov
int
or
jl
xor
out
aaa
push
or
sbb
test
loopne
add
stos
shrb
mov
and
jg
push
bnd
xchg
xchg
inc
out
in
in
mov
push
mov
dec
mov
mov
outsl
sbbl
add
mov
sti
rcll
sti
mov
and
pop
daa
lock
lcall
in
hlt
data16
js
cmp
lds
ds
cmp
xor
imul
xor
xor
pusha
jmp
mov
clc
out
jb
jnp
and
clc
mov
push
sbb
mov
loope
mov
in
and
mov
out
pop
adc
adc
adcl
nop
fnstsw
outsl
filds
mov
cli
push
inc
shll
push
dec
lea
sbb
call
xor
into
imul
into
dec
out
and
add
dec
xchg
jg
dec
inc
adc
mov
aad
jl
outsl
les
dec
fcmove
pop
in
stos
pusha
arpl
imul
hlt
fwait
jo
sub
stos
icebp
jnp
stos
mov
icebp
cwtl
add
fcoml
ljmp
inc
pop
sahf
cmc
xchg
jnp
loope
js
sub
lcall
mov
sbb
hlt
inc
test
fistps
movsbl
mov
jno
fwait
push
pcmpeqd
cltd
mov
xchg
lahf
and
out
insl
int
int3
fucomp
mov
mov
dec
insl
cli
adc
testb
out
loopne
arpl
xorl
jge
icebp
scas
jge
into
adc
fisubrs
imul
jg
arpl
ljmp
cwtl
jnp
or
sbb
pop
stos
add
mov
push
in
xchg
mov
jge
inc
adcl
test
or
or
sbb
shl
and
repnz
push
mov
jecxz
sbb
adc
ret
xor
rcl
int
out
into
dec
and
xchg
fcomps
ds
shrl
jmp
or
cwtl
and
into
mov
cld
jnp
sbb
xchg
inc
imul
jg
jl
imul
repnz
scas
and
push
jecxz
int
push
add
xlat
jmp
sub
imul
or
push
test
xor
fldt
aas
adc
or
out
sbb
sbb
xor
imul
xchg
sub
xor
cmpsb
outsb
cmc
out
xlat
jno
xlat
xchg
xor
inc
mov
test
fdivp
jg
jl
hlt
mov
test
push
mov
pushf
insl
pop
cmpsl
mov
cli
adc
inc
adc
out
jno
out
cwtl
cwtl
jge
daa
push
sbb
jg
dec
dec
or
jge
push
jns
ljmp
and
jecxz
rcll
sbb
fdivs
adc
mov
or
roll
sub
mov
cmp
add
mov
testb
or
lret
mov
aaa
nop
sbb
lds
inc
cmpsb
or
scas
mov
mov
cwtl
arpl
sbb
pusha
sbb
mov
mov
cmp
scas
adc
in
inc
sti
jge
nop
xchg
imul
or
ljmp
mov
addb
sub
ret
adc
xchg
mov
push
sbb
and
xorl
or
dec
adc
adc
cmc
lret
loope
sbb
repz
push
lea
iret
xor
insb
arpl
adc
mov
ljmp
mov
int3
shll
stos
movsl
outsb
xchg
mov
bound
leave
cltd
ret
fdivrs
lock
bound
cmp
aam
pop
sbbb
lahf
fxch
cmp
or
inc
imul
or
xchg
mov
shll
mov
in
xor
sbb
fs
sti
fcmovu
fs
push
lahf
mov
push
push
outsl
mov
pushf
jp
loopne
jne
out
jns
fmul
push
xor
mov
les
or
mov
ficoms
pop
sbb
out
repz
enter
mov
mov
mov
loope
xchg
push
notb
push
aam
adcl
push
xchg
sti
bound
and
mov
scas
loope
xchg
shlb
xor
push
pop
icebp
inc
xchg
cli
jl
or
add
fs
dec
dec
sbb
out
jp
mov
decb
outsl
aaa
hlt
push
push
dec
jle
aas
les
xchg
mov
les
out
packuswb
jl
lahf
cmc
cltd
mov
stc
inc
cwtl
test
inc
cmp
mov
lret
push
sub
mov
loopne
pop
sbb
sahf
stos
mov
xchg
xchg
outsb
rcll
cmp
popa
cmp
pop
dec
push
enter
push
or
lcall
lea
and
lret
cmc
cmpsb
stos
xchg
stos
add
mov
jp
popa
dec
pop
fbstp
aam
or
cmp
loopne
jp
or
je
lds
mov
int
into
int
push
jns
fcom
sbb
lahf
in
mov
pop
push
icebp
pop
shlb
mov
and
xlat
repz
jb
lods
cmp
test
cmpsl
loop
outsl
dec
inc
fsts
lods
cli
pop
or
or
mov
or
mov
je
or
xchg
outsb
or
in
or
or
fisttps
sbb
ficoml
incl
pop
fildl
push
lcall
dec
inc
mov
scas
imul
mov
jne
test
and
punpckhdq
repnz
aas
pop
xor
idiv
shl
imulb
cli
sbb
inc
xor
and
int
pop
cwtl
fidivl
cmp
push
shl
xchg
das
pop
ja
push
mov
xlat
add
mov
dec
pop
jne
jb
rclb
mov
dec
push
popa
ror
dec
hlt
cmc
mov
mov
jae
xchg
iret
pop
xor
pushf
jae
rep
fwait
sbb
out
and
scas
add
pop
hlt
push
inc
fistps
ja
xor
outsl
adc
sahf
pusha
jle
sbb
xchg
add
dec
mov
mul
enter
or
rol
int3
push
shll
iret
mov
imul
mov
addr16
jne
push
jmp
test
hlt
out
shrb
lret
test
out
mov
sbb
jmp
push
stc
adc
out
sbb
fidivs
sub
xlat
int3
mov
push
jae
dec
ror
inc
push
hlt
jecxz
mov
cmpsb
test
xchg
and
aas
in
pushf
jg
mov
ret
nop
jbe
daa
adc
dec
insb
decl
pusha
sbb
add
jo
cmc
mov
sbbb
shll
jnp
test
lds
push
pop
outsl
add
out
sub
aad
nop
insl
enter
outsb
iret
fcoml
mov
mov
cmp
inc
jmp
xor
mov
iret
or
dec
rclb
pop
popa
xchg
mov
xor
xchg
cmpb
jbe
loopne
lahf
lret
mov
ret
test
icebp
aas
mov
jp
cmp
out
sbb
js
shlb
inc
fs
sub
cmp
xchg
push
fcmovnbe
mov
clc
cmc
loop
lahf
fucomip
inc
and
xchg
push
push
jp
add
fcomp
cmp
or
sub
std
fmuls
add
dec
mov
pusha
enterw
ss
lahf
js
xor
mov
imul
push
movsb
aaa
mov
clc
stc
adc
xchg
and
mov
inc
sbb
mov
or
int
sti
pop
cmpsb
jbe
je
jmp
jae
cli
mov
jo
mov
xchg
sbb
icebp
push
sti
scas
xchg
int
imul
fucom
mov
fldl
xchg
out
pop
outsl
adc
cli
and
xor
adc
ret
push
aaa
jl
mov
movsl
and
test
sbb
pop
hlt
lods
and
shll
jae
dec
and
sar
pushf
sbb
scas
xchg
aas
fcmovnu
leave
push
or
bound
jmp
cmp
fisubs
pusha
addr16
mov
pop
jns
add
out
repz
fistl
jge
hlt
sbb
subl
pop
or
nop
push
insb
mov
mov
jp
sbb
jge
jbe
sub
inc
std
cwtl
js
popf
jo
popa
mov
pop
sub
push
push
lds
data16
xchg
int3
xor
xor
filds
inc
testb
icebp
xorl
out
mov
jns
pop
gs
fbld
dec
loop
fs
and
mov
icebp
shr
sub
bound
bound
arpl
cmp
sub
arpl
jg
icebp
hlt
insb
call
mov
xchg
loop
scas
inc
bnd
jg
mov
cmp
pop
dec
pop
inc
out
mov
ds
fcomi
mov
add
adc
mov
rorl
cmc
pop
mov
jbe
es
cld
aaa
add
insl
jmp
cwtl
cld
int3
mov
jp
cmp
pop
enter
in
jle
mov
stos
test
imul
pop
aaa
xlat
stos
push
fcmovb
or
mov
ds
pop
iret
es
xchg
dec
and
inc
sub
cmp
mov
adc
popf
test
cmpsb
xchg
xor
mov
fsub
sbb
sub
repz
pusha
sbb
fistl
mov
gs
mov
push
cmpxchg
cltd
test
sub
dec
lcall
push
xchg
test
lock
sub
in
xor
dec
xor
testb
xchg
fsubl
pop
js
xchg
js
sbb
mov
sub
jmp
loope
mov
mov
es
ja
jns
or
pop
jp
dec
out
mov
jae
cmp
xchg
negb
movups
push
mov
xchg
mov
push
loopne
xchg
pop
cmc
shlb
add
dec
xchg
rorl
pop
or
lods
pop
cmp
ud1
cmp
movsb
sbb
cwtl
js
mov
cmp
leave
fiadds
and
jb
adc
push
add
stos
call
cmp
dec
xor
pop
dec
inc
mov
inc
cmp
clc
popa
sub
call
mov
xchg
xchg
stc
das
scas
or
mov
into
mov
dec
lods
dec
std
sarl
dec
inc
cwtl
pop
and
push
add
add
gs
dec
int3
push
outsb
xchg
cmp
pop
inc
cld
sti
or
icebp
xor
jmp
loopne
sub
sbb
dec
lods
nop
mov
jne
test
dec
cmp
mov
lret
sub
repz
in
aam
test
loop
xchg
xchg
xchg
test
loope
insb
enter
ja
dec
bound
mov
inc
dec
mov
aad
sub
movsb
and
xor
cld
in
hlt
loope
in
clc
rorl
inc
imul
fmuls
stos
mov
or
int
inc
lods
or
jnp
xchg
sub
jnp
sub
daa
in
shll
add
ja
jl
enter
ja
or
mov
sub
push
push
sub
or
std
push
fidivrl
add
mov
push
adc
jbe
cs
jp,pt
sbb
out
fs
inc
in
jmp
in
bound
jns
repz
pop
repz
dec
stos
inc
or
popf
cmp
mov
jl
jle
mov
into
ficomps
adc
je
fs
das
movsl
pop
es
dec
ror
mov
sbb
xchg
test
cmc
jno
mov
cmp
ficoml
sub
push
into
cwtl
in
jae
arpl
sub
aam
lds
inc
in
idivl
pop
jecxz
push
ret
push
inc
inc
mov
adc
cli
rorl
inc
push
stc
cmp
in
push
popa
mov
repnz
sub
lret
jp
adc
lock
popa
shrb
mov
mov
push
fxch
cmp
adc
inc
test
js
scas
fs
mov
repz
shr
inc
inc
stc
pop
mov
or
xchg
stos
int3
mov
jns
fs
mov
mov
mov
mov
in
xchg
inc
in
jp
lret
in
adc
stc
jb
xor
push
dec
push
mov
mov
mov
adc
clc
pop
sbbb
sub
insb
sub
mov
xchg
or
mov
or
ret
sarl
cltd
mov
push
cmc
imul
xchg
xchg
and
xor
mov
push
push
lea
or
int3
es
shrd
jbe
jne
push
cmp
lock
adc
fdivl
pop
sub
jge
mov
push
push
mov
xchg
stos
cmp
loopne
or
cli
pop
aam
pop
or
out
outsb
aad
out
popa
jp
ds
mov
movsl
fbld
and
lcall
loopne
mov
pop
cmpsb
push
xor
cs
repz
mov
push
mov
sbb
xchg
in
mov
jbe
sub
out
test
enter
loope
sar
xchg
push
push
pop
js
lret
mov
xchg
jno
xchg
shl
lret
rcrb
pop
shll
stos
cmp
cltd
push
or
mov
pushf
cwtl
popf
test
cmp
test
mov
dec
mov
xorb
repz
or
xchg
fdiv
mov
cli
daa
xchg
mov
loopne
insb
or
ljmp
enter
xchg
pslld
lea
sub
insb
jle
cmp
js
rorl
inc
ja
push
dec
push
imul
push
subb
int
jge
mov
data16
cmc
call
testb
pop
jge
jno
iret
push
aaa
call
or
sub
addr16
adc
leave
in
lods
test
js
xchg
cmp
stos
jmp
cli
xor
jl
inc
testl
fwait
daa
sub
stc
loop
pushf
fstpl
aaa
dec
and
push
sbb
es
nop
dec
mov
add
adc
gs
ret
testl
jno
packsswb
sbb
js
mov
and
in
in
cmp
in
cmp
les
cmp
cmc
out
xchg
xchg
int3
mov
add
jb
mov
cld
adc
and
xor
mov
push
jmp
je
jecxz
aam
push
je
mov
mov
insb
sbb
jne
mov
clc
dec
jp
sub
sub
inc
xchg
mov
pop
cltd
cli
fdivrp
loopne
out
stc
jmp
or
dec
xor
push
xchg
into
cmp
mov
push
cmp
sbb
sub
cmc
aas
or
xchg
mov
adc
out
daa
mov
lret
push
dec
stc
sbb
xchg
xor
add
push
jg
sbb
xchg
sub
pop
fsubl
mov
push
leave
icebp
mov
mov
in
sbb
lahf
dec
ds
jmp
xchg
mov
mov
sbb
call
flds
insl
xor
mov
fcmovne
loop
push
xchg
or
cld
sbbl
lods
rcrl
cmpsb
xor
inc
bound
inc
sbb
xor
gs
fcmovnb
ss
outsb
xchg
mov
std
and
fildll
lods
cli
inc
sub
mov
repnz
push
push
cmp
adc
mov
adc
rcrl
enter
push
cli
je
cli
cs
int
xchg
cmp
cli
dec
jmp
cld
add
dec
sub
fimuls
lds
add
push
outsb
cmp
movsl
test
daa
stc
push
pop
je
mov
mov
push
cld
mov
in
subl
scas
cmpsl
push
cmpsb
pop
xor
adc
inc
outsl
push
aad
pushf
ljmp
pop
clc
loopne
sbb
inc
gs
pop
scas
insl
xor
repnz
rcl
popa
cmp
xchg
xchg
pushf
icebp
add
mov
inc
cltd
out
push
xchg
and
sub
mov
mov
mov
push
jns
bound
add
pusha
xor
xchg
adc
ret
sarl
sahf
dec
outsl
popf
pop
push
push
pop
pop
sub
sub
sbb
or
jne
dec
adc
jo
inc
xor
push
lods
call
mov
lods
inc
iret
movsb
repnz
and
iret
and
add
add
aad
cmp
filds
xchg
arpl
ds
push
mov
pop
add
lea
ror
shrb
jge
add
dec
mov
test
enter
xchg
push
adc
in
imul
push
cmp
sbb
insl
movsb
test
int3
fs
jmp
daa
lret
jns
cli
out
push
cli
mov
push
dec
xchg
imul
jge
scas
ss
ja
mov
cmp
sahf
and
adc
mov
ss
loopne
filds
or
xchg
mov
repnz
int
stc
std
lahf
jp
sbb
dec
out
push
push
add
lods
jl
mov
xchg
jge
cmp
sti
and
sub
ljmp
fisttpll
jmp
rclb
dec
out
ja
xor
out
xchg
jle
jmp
xchg
scas
mov
dec
jp
inc
or
mov
adc
shll
hlt
sbb
xchg
adc
mov
mov
adc
jge
inc
cs
es
or
sub
cmpsl
jo
mov
out
xor
aas
std
dec
pop
or
pop
cmpl
ror
xchg
xor
add
out
adc
adc
addr16
mov
pop
sbb
leave
fildll
out
sub
push
insl
fnstcw
iret
daa
mov
pusha
loope
mov
mov
mov
inc
jecxz
jo
arpl
repnz
sub
mov
sti
jns
push
enter
out
lret
das
add
ret
fcom
mov
adc
pop
push
add
shll
es
outsb
and
mov
es
jbe
lods
lods
mov
inc
pop
fisttpl
ret
pop
data16
gs
fidivrl
call
lret
cmpb
jecxz
shrl
mov
inc
xchg
mov
clc
movsb
mov
clc
ficomps
pushf
inc
mov
mov
aas
gs
call
nop
sti
daa
adc
jg
inc
push
sub
cmp
leave
xchg
xor
cmp
add
test
add
int3
add
jge
lock
stos
dec
sub
dec
mov
push
pop
addr16
lret
push
popa
pop
xor
mov
jns
dec
mov
mov
or
mov
pop
inc
lcall
fiadds
push
loope
andb
das
sub
div
xchg
and
loope
ret
mov
push
shlb
sub
outsl
push
mov
outsl
inc
cs
sub
xchg
mov
inc
call
mov
and
into
ror
xor
or
ret
xor
dec
xchg
pop
test
incb
pop
dec
xchg
popl
stos
push
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
jmp
leave
pop
xchg
movsl
or
cmp
jecxz
jno
jnp
hlt
pushf
jnp
stos
pop
out
icebp
inc
pop
aaa
push
jb
stc
fldl
sbb
lret
jnp
je
mov
inc
popa
pusha
add
adc
mov
cmc
in
and
push
push
mov
repnz
nop
imul
enter
lahf
pop
les
movsl
mov
sbbb
getsec
push
in
popf
and
ret
pop
lods
cltd
adc
jo
jbe
mov
ret
xchg
out
xchg
jl
mov
pop
sbb
sub
xor
pop
fmulp
mov
add
push
cmp
out
add
xlat
leave
pop
test
cltd
mov
imulb
sbb
mov
add
stos
sbb
mov
cli
mov
out
xchg
inc
addr16
or
pop
xchg
movsb
cmc
adc
and
push
jmp
cmp
adc
push
arpl
bound
loope
popf
out
pop
ud0
fcmovnu
pop
mov
js
mov
in
pop
jne
fnstenv
or
mov
pop
inc
cli
inc
test
repz
outsl
insl
ljmp
es
aas
mov
stc
sub
movsb
adc
call
mov
je
jmp
cmp
inc
inc
arpl
mov
and
add
and
adcb
enter
or
insb
xchg
xchg
push
pop
jmp
xlat
mov
cmp
inc
scas
jmp
jo
mov
pop
icebp
nop
lret
mov
fistl
fdivrl
mov
and
into
xor
ja
fldz
xor
lock
xchg
pop
ror
sub
outsl
jmp
xlat
fwait
fs
push
mov
jb
inc
jecxz
cs
dec
pop
and
add
sub
lods
jge
and
hlt
adc
mov
push
inc
mov
dec
outsb
mov
aaa
scas
jb,pt
mov
pushf
hlt
inc
out
cmc
mov
jne
jo
shl
loop
je
mov
pushf
fdivs
gs
add
push
push
stc
fs
jno
push
push
pusha
insb
mov
or
sbb
in
mov
lods
dec
mov
je
icebp
push
mov
aad
hlt
xchg
jg
mov
ds
inc
das
mov
in
and
dec
icebp
leave
or
or
std
stos
sbb
pop
pop
xchg
and
lahf
je
mov
jns
shll
inc
testb
out
in
pop
bound
scas
sahf
push
inc
sbbl
cld
cwtl
mov
add
cli
sahf
cli
lds
mov
je
sbb
push
imul
adc
shlb
inc
subb
mov
and
in
sub
pusha
sub
cmp
push
lods
jl
cmp
cmp
push
out
mov
int3
fwait
mov
iret
xchg
dec
mov
xchg
mov
mov
into
push
xor
adc
je
fldl
les
out
repnz
out
push
out
popf
arpl
fcomps
fs
jae
subl
loop
pop
lds
xor
add
int3
xor
fisubl
loope
jl
cmc
les
xchg
fs
mov
and
rcrb
pop
xchg
aad
sbb
scas
sub
hlt
in
dec
dec
lcall
sub
adc
out
add
pop
xchg
sti
incl
and
push
pop
dec
lods
adc
mov
fdiv
fsubrl
mov
push
imul
xor
sti
test
in
cmc
idivb
inc
mov
scas
xor
sbb
jne
xchg
or
arpl
xchg
xchg
ljmp
pcmpeqw
mov
nop
xchg
or
inc
xorb
inc
lds
scas
movsl
sahf
mov
nop
dec
xor
push
jecxz
xorb
outsb
test
fadd
lods
sbb
push
add
cld
push
je
stos
out
cltd
nop
push
shrb
lahf
add
cmp
into
enter
push
cmpsl
pop
cmp
lds
cmp
add
xchg
sub
mov
mov
xchg
iret
fmuls
ja
ss
lret
fldt
insb
lea
mov
jmp
shlb
out
mov
inc
ljmp
cmp
mov
repz
adc
adc
fidivrs
out
nop
das
pushf
bnd
xchg
lcall
xor
in
enter
jge
scas
ds
fldt
fdivl
cmc
jns
arpl
cmp
cs
aam
outsb
in
jmp
and
int3
loop
push
shrb
nop
jns
xor
cmp
cltd
push
imul
dec
jo
and
jecxz
pop
dec
add
insb
insb
mov
adc
icebp
push
stc
daa
inc
or
sub
sbb
adc
sbb
call
push
and
sub
and
scas
cmp
js
int
rcrb
decb
sbb
push
cmc
inc
dec
mov
cmp
push
xchg
push
adc
stos
inc
xorl
negl
mov
je
inc
sub
js
sub
in
in
add
dec
cmp
add
cmp
mov
add
fnsave
mov
and
sub
int
outsb
arpl
inc
fcmovb
fstp
test
das
in
jecxz
es
fistpll
outsl
adc
fildll
push
mov
mov
sbb
lds
rorb
adc
das
pop
or
push
scas
pop
push
mov
shr
xchg
dec
jae
mov
sbb
in
push
mov
pmulhuw
js
stos
hlt
popa
hlt
push
pop
repz
xor
mov
mov
add
inc
scas
fisttpll
mov
ret
mov
dec
inc
xlat
jmp
inc
popa
or
out
in
repnz
or
or
stc
xchg
out
mov
xor
lods
sbb
fnsave
clc
inc
xchg
std
sbb
add
cli
pop
xor
adc
pusha
lock
jnp
mov
movsb
mov
daa
pop
xchg
dec
mulb
inc
inc
mov
pushf
jl
dec
ficoms
std
cmpsl
ss
test
ljmp
int3
xor
inc
dec
insb
mov
dec
lods
les
je
push
in
mov
mov
xlat
outsl
aam
aaa
cmp
mov
aam
iret
negb
leave
pop
test
pop
out
or
daa
xchg
or
add
popf
movsl
xchg
iret
jns
scas
inc
subb
jne
out
rcll
dec
outsl
out
shl
dec
cmp
int3
sahf
movsl
lret
mov
insl
in
imul
mov
adc
es
sbb
fnsave
nop
sub
movsb
jae
adc
fists
dec
mov
mov
fldcw
adc
pusha
in
jecxz
test
into
xchg
pop
les
cmpsb
sub
imulw
rcrl
ret
repnz
or
lcall
sub
mov
push
js
lcall
xchg
dec
mov
aas
mov
xchg
sti
mov
or
lock
mov
or
cs
arpl
adc
in
cltd
xor
mov
fstl
aaa
add
outsb
mov
add
int3
push
add
mov
mov
add
and
arpl
jno
stos
lods
or
adc
xchg
or
pusha
sub
push
cmp
out
arpl
enter
add
sbb
insb
mov
xor
popa
imul
loop
xor
sarb
pusha
dec
outsb
mulb
repnz
outsl
js
push
mov
arpl
lret
add
mov
sub
pop
mov
mov
mov
outsl
dec
pop
loopne
adc
out
xor
jno
adc
es
loop
int3
in
dec
push
sbb
mov
sbbl
xchg
jl
test
pop
stos
lock
cmpsl
movb
xchg
adc
jecxz
jnp
pop
sbb
pop
mov
inc
lea
imul
inc
pop
mov
arpl
fildll
add
mov
shrl
pop
mov
and
gs
sub
xor
dec
popf
mov
xchg
pop
cli
sbb
lcall
or
dec
test
cmp
loope
aas
dec
mov
pop
or
xchg
popa
push
xchg
out
mov
xchg
add
test
test
xlat
jp
dec
mov
jge
mov
sti
je
cmc
fisttpll
pop
iret
xchg
loop
xchg
sub
js
into
lds
push
out
add
push
xor
adcl
js
cmp
cltd
mov
mov
dec
jmp
mov
cmp
inc
mov
xchg
dec
jecxz
test
inc
cltd
sbb
pop
fistpll
mov
es
xchg
pop
mov
xor
lcall
pop
sbb
hlt
cmp
sbb
lock
mov
mov
or
popa
sbb
cmpsl
xchg
ss
dec
push
ljmp
sub
pop
mov
pop
fucomi
push
push
icebp
repz
dec
push
fdivr
fistpl
mov
pushf
scas
in
jbe
aad
inc
daa
out
cmp
jb
dec
mov
roll
pop
frstor
xor
cs
loopne
adc
pop
movsb
or
cli
popa
repz
inc
pop
movsl
push
insl
in
fwait
jmp
mov
xchg
ret
jo
xor
cli
lea
out
je
or
dec
aam
cs
mov
aad
andl
fwait
push
shrl
or
push
or
cmpsl
ljmp
jns
inc
aaa
push
into
add
jns
shlb
bndstx
sub
xor
fidivs
pop
int
dec
test
cmp
in
lea
idivl
push
xchg
sbb
lcall
ds
aam
insl
dec
lods
pop
mov
xchg
test
rcl
mov
aam
xchg
push
adc
push
jp
fndisi(8087
adc
rcll
mov
add
push
inc
or
shl
push
sti
enter
lcall
xchg
movb
dec
ss
or
out
and
cwtl
or
push
shlb
mov
xchg
mov
clc
outsl
mov
and
sbb
stos
cmp
mov
out
cmp
or
out
mov
jns
inc
sub
pusha
pop
pop
js
rol
ret
xor
mov
mov
in
popf
cmpsb
arpl
jae
sub
lock
sub
aad
ljmp
sub
out
push
ljmp
add
push
mov
cli
and
xchg
pop
mov
or
das
cs
sbb
push
mov
icebp
fadd
arpl
imul
stos
mov
mov
int3
int
popf
push
mov
sub
adc
mov
dec
push
cmp
mov
mulb
push
jp
fisttpll
push
out
inc
in
fcmovu
mov
add
gs
lock
addr16
add
fnstenv
cs
pop
mov
sbb
mov
jo
nop
xor
pushf
adc
in
fnstcw
data16
aam
pop
sbb
jle
ret
scas
xchg
mov
aam
nop
pushf
lcall
xor
xchg
mov
andl
add
push
jg
and
pop
sub
xchg
mov
mov
addr16
lcall
pop
sbb
jl
adc
mov
das
dec
xor
mov
xor
lret
mov
cmp
call
sar
and
push
movsl
cmpl
mov
imul
mov
sbb
andl
mov
mov
cmp
fs
mov
xorb
rolb
or
pop
fisttpll
jg
insb
xchg
add
and
pminsw
in
jle
out
test
sbb
mov
pushl
mov
loop
sub
stos
cmp
sub
sbb
xor
call
js
fs
mov
fs
mov
sbb
nop
pop
rcll
mov
and
adc
cmp
pushf
cmp
push
dec
xchg
mov
xor
xor
mov
je
xchg
movsl
incb
pop
stc
xchg
sub
movsb
inc
xchg
xor
lea
add
xchg
arpl
add
jns
mov
cmp
std
sar
mov
nop
pop
or
mov
mov
mov
xchg
pushf
test
test
add
inc
loopw
loopne
or
pop
les
hlt
cs
fcoms
adc
out
push
movsl
or
repnz
test
sbb
inc
inc
push
je
aas
and
mov
mov
xchg
xor
adc
loopne
fsub
push
imul
jl
add
movsb
aad
popa
push
imul
sbb
cmp
dec
dec
pop
jno
stos
addr16
seto
and
aad
or
leave
mov
cmp
jb
cmp
adc
lds
cld
xchg
testl
mov
xchg
sbb
push
jmp
cmpsl
mov
test
xchg
jns
mov
cwtl
test
ljmp
repnz
es
fistps
add
in
mov
xchg
mov
adc
into
and
dec
xor
mov
xchg
fmull
lods
mov
add
sarb
lret
push
or
out
lods
daa
sub
add
loop
fisubs
stc
fildl
pop
in
xor
push
lods
leave
sbb
adcl
xor
and
and
dec
sbb
jns
cli
dec
jl
cmpsl
push
stos
sarb
addr16
add
jnp
sbb
sub
mov
sub
xchg
cmp
movsb
ss
popf
jmp
ret
push
in
cmp
xchg
int
out
and
scas
dec
adc
jae
fimuls
imul
mov
js
scas
jne
iret
aas
push
mov
xor
sarl
pop
jno
hlt
mov
sahf
popa
xchg
arpl
movsb
jo
ja
xchg
movsb
xlat
idivl
sbb
loopne
xor
arpl
mov
in
mov
lahf
sbb
jp
jl
mov
adc
mov
and
popf
aad
dec
outsb
daa
sbb
loope
popf
clc
inc
jle
sarb
lock
test
sbb
icebp
rcll
lret
rorl
loope
ds
stc
mov
xchg
mov
ret
dec
cmp
aad
and
jmp
mov
adc
test
nop
jp
imul
adc
testb
mov
dec
push
pop
stc
stc
adc
xorl
push
lds
in
and
cltd
jmp
xchg
daa
es
imul
or
mov
jo
dec
mov
adc
xchg
pop
mov
dec
sub
add
arpl
loope
jmp
jge
daa
jecxz
scas
mov
dec
push
in
xlat
ja
jp
push
test
lds
cmp
jns
adc
daa
pop
or
mov
test
in
mov
dec
testl
dec
jl
sbb
imul
lods
xor
mov
push
rcr
jge
jbe
cltd
fstps
ffree
adc
stos
les
and
int
add
jle
cld
aam
mov
cmpsl
in
es
pop
push
ret
ficomps
pop
xchg
dec
sub
lods
or
out
les
ror
test
rcrb
fcoml
icebp
xchg
dec
mov
mov
stc
dec
mov
sbb
adc
cmp
mov
adc
jmp
movsl
ficoml
xchg
xchg
movsl
call
insl
dec
rcrl
stos
ljmp
rcrl
test
xlat
je
mov
inc
sub
ficompl
sbb
sub
outsl
sbbb
insb
cltd
cmc
sbb
fdivrl
aad
xchg
push
data16
ds
mov
inc
je
push
mov
mov
mov
mov
movsb
cli
adc
leave
xchg
push
sahf
mov
addr16
aad
mov
mov
jg
bound
sti
pop
sbb
nop
jl
mov
fistpll
or
dec
inc
in
std
nop
add
pop
fs
and
mov
test
dec
loope
push
sbb
cli
pop
push
cmp
jb
cmp
lret
xchg
movsb
jg
mov
fdivl
jg
cli
shrl
ret
gs
sbb
outsl
pop
test
jns
je
push
push
add
jl
ficoms
xchg
pop
popa
lods
and
into
fwait
mov
dec
inc
mov
and
mov
jns
mov
jge
push
sarl
mov
arpl
jne
push
arpl
jle
lret
sahf
adc
adcl
in
movsl
push
mov
sbb
aas
repnz
aam
out
sahf
scas
test
ror
push
sbb
dec
add
aas
je
or
adc
jmp
lea
inc
xchg
inc
outsb
call
xchg
hlt
mov
xchg
jmp
pop
in
dec
pop
sbb
sbb
mov
sbb
mov
pop
leave
dec
push
mov
add
jbe
sub
stc
sub
dec
xlat
nop
push
add
icebp
adc
ds
aas
sbb
push
or
pushaw
and
adc
adc
jno
int3
inc
or
mov
notb
jb
out
xchg
lahf
das
dec
in
into
ljmp
sbb
sbb
push
jno
cmc
cmp
xchg
repz
sbb
es
adc
mov
mov
cltd
dec
into
push
mov
adc
mov
xchg
mov
mov
scas
sbb
xor
jne
xor
push
sub
es
imul
sti
xchg
xor
xor
sub
enter
mov
lahf
xor
insb
sbb
dec
test
jge
mov
and
jg
ds
mov
add
cmp
pushf
dec
push
cmpsl
sub
pop
sbb
fildl
pusha
sbb
in
xchg
loop
stos
mov
popa
stc
xchg
test
pop
out
scas
iret
sbb
les
xchg
mov
pop
lret
xchg
cmp
in
xchg
mov
loop
xchg
dec
iret
cmpsl
sbb
jp
mov
push
int
in
sub
pop
js
add
cmp
cli
rcll
pusha
pop
movsb
test
mov
lret
decl
cmc
daa
lds
sarb
faddl
test
out
pusha
push
ffree
sti
inc
mov
pop
loope
iret
aaa
mov
push
mov
mov
aas
adc
sbb
popa
or
insl
popa
insb
fwait
jle
cmp
fyl2x
adc
xor
pop
sbb
ret
pushf
dec
jns
pop
cmc
sbb
pop
sahf
and
xor
jb
push
jo
jae
shufps
adc
hlt
sub
js
ret
pop
lret
ja
mov
mov
pop
pop
shrl
imul
mov
in
sub
xor
ds
jbe
mov
sbb
xchg
scas
xor
ds
insb
dec
fst
lea
or
mov
fmuls
insb
adc
in
jge
in
cltd
cmpsl
push
cltd
cs
dec
add
stos
adc
xchg
sbb
mov
or
ljmp
int3
and
ret
hlt
adc
sahf
mov
jle
sub
jb
call
cli
push
inc
mov
jne
fstpt
arpl
les
mov
rclb
cld
and
cmp
sar
cmp
out
nop
leave
and
repnz
xor
mov
mov
xchg
mov
or
imul
mov
add
cmpb
and
int3
mov
shl
jne
cmc
xchg
mov
add
lods
lahf
imul
rcr
call
ljmp
test
xchg
pop
pop
pop
mov
jecxz
sub
dec
cmp
jb
arpl
xchg
inc
loopne
xorl
and
xchg
cmpsb
mov
in
dec
sub
pop
and
outsb
cmpsb
xor
stos
mov
cmp
data16
mov
mov
sub
mov
jmp
mov
inc
push
jmp
push
mov
addr16
pop
mov
xchg
mov
add
xor
in
sahf
orl
push
mov
int
dec
lods
xor
sub
aad
out
lds
es
inc
push
inc
cli
lret
sti
leave
sbb
subb
test
mov
cltd
scas
mov
mov
aad
rorb
lock
mov
jbe
cmp
out
sbb
jbe
aaa
and
cmovne
and
gs
xor
dec
mov
nop
loopne
outsb
jge
push
cmp
rcl
fnsave
or
enter
push
mov
lss
push
fisubs
ror
addl
cmp
test
inc
xor
xchg
push
das
jo
loopne
sbb
outsb
mov
mov
stc
aaa
imul
jo
popa
mov
push
mov
cld
hlt
iret
sahf
xorl
pop
adcb
scas
dec
mov
or
xlat
mov
cmp
mov
out
popa
pop
jae
pop
popa
mov
mov
loope
fmul
stos
iret
aam
addr16
fldenv
aad
lahf
mov
cwtl
mull
jle
push
out
inc
out
sub
pop
addr16
sub
aad
mov
movsb
lods
cmp
jns
scas
std
add
pop
in
push
scas
mov
xor
push
add
cmp
jmp
xchg
sub
sbb
bound
cwtl
arpl
mov
rcrb
or
cmp
dec
cmp
inc
cmp
inc
cmp
push
xchg
xchg
ror
sbb
je
inc
jecxz
xorl
mulb
inc
xchg
insb
mov
lods
pop
sarb
test
les
mov
sbb
cmpsb
ss
cmp
mov
cmp
sub
jg
loope
es
mov
sbb
jne
lds
insb
mov
cmp
xchg
pop
cmc
push
add
in
jnp
pop
cmp
jmp
fcmovbe
repnz
clc
cld
push
mov
xor
pop
mov
jmp
add
test
pusha
adc
jns
inc
jb
jle
adc
inc
jge
pop
and
jno
add
lret
pop
dec
cs
dec
fisubs
scas
cld
mov
fldenv
inc
mov
and
fldl
mov
in
xchg
adc
shlb
cmpsb
repnz
xor
xor
enter
scas
adc
xor
push
pop
leave
out
into
push
fwait
das
adc
addr16
sar
lock
outsb
fldcw
andl
push
inc
in
ds
loope
pusha
push
sbb
or
in
rcrb
push
loope
sbb
push
add
repz
clc
fisubrl
and
or
mov
sbb
jmp
shr
xor
pop
into
push
cmp
aaa
ja
mov
dec
xor
cmp
lea
xchg
inc
int3
pop
aam
push
jl
push
mov
push
sbb
mov
mov
sub
aad
adc
push
dec
lea
mov
mov
pop
mov
sub
mov
jecxz
xor
jle
and
ret
movsl
sbb
jb
lret
aam
pushf
pop
out
add
lret
out
jae
mov
sahf
mov
dec
fildll
and
in
les
cld
stc
addb
es
push
mov
js
outsb
sub
inc
jp
jo
pop
jo
frstpm(287
imul
inc
dec
sbb
sbb
fmul
xchg
hlt
je
pop
sub
in
cli
or
lea
mov
cmp
pop
mov
movsb
jae
push
call
mov
stos
loop
sub
mov
cmp
aaa
cmpsl
push
adc
loop
out
fwait
inc
movsb
pop
jecxz
stc
cltd
pop
mov
idivl
xor
and
sbb
xor
pushf
fdivl
jnp
cwtl
mov
lret
mov
jp
jmp
jl
pop
sbb
fsubrs
dec
mov
les
aaa
fidivrl
mov
dec
loopne
dec
fwait
mov
add
or
ret
mov
dec
out
out
mov
and
jmp
pop
jo
push
mov
add
push
rclb
mov
sub
mov
mov
outsl
xor
scas
ja
add
outsl
je
fdiv
lcall
pop
pop
jo
mov
ds
out
xchg
mov
adc
xchg
xchg
jmp
outsl
ficompl
jle
sbb
cmc
repz
dec
movsl
es
or
aad
inc
addr16
fsubrl
adc
adc
sbbb
mov
lds
sub
les
mov
and
lods
lds
mov
test
push
into
orl
add
aad
gs
shll
mov
mov
push
lock
inc
or
cmp
scas
inc
sub
sub
loop
nop
shlb
inc
adc
pusha
mov
xlat
addl
xchg
mull
in
loopne
fs
cmp
lret
inc
adc
sbb
or
inc
dec
imul
mov
fmulp
dec
mov
mov
or
loopne
jg
sbb
pushf
int
jmp
int3
lods
push
ss
push
aam
mov
xchg
inc
lods
test
int3
fnstsw
rorb
dec
in
lds
push
inc
and
xchg
addl
xchg
cmc
xor
xchg
adc
mov
inc
mul
repz
sub
cmp
xchg
lahf
shl
ret
cld
aad
imul
sub
ja
mov
enter
stos
ficomps
xchg
mov
adc
add
xchg
stos
ds
sbb
out
xchg
or
test
jnp
push
mov
jae
xchg
in
ss
xorps
sub
xchg
inc
add
fldl
aas
ret
mov
iret
sbb
xor
inc
notb
adc
push
mov
pop
inc
pop
fcmovnu
sub
nop
jp
mov
and
or
jecxz
in
gs
cli
subl
lea
mov
xchg
pop
int
cmpsb
and
xchg
xor
or
or
dec
lock
jnp
mov
lds
xchg
jl
lret
shr
add
arpl
and
fisubrs
pop
sbb
adc
sbb
mov
mov
cmpsb
cmc
sub
stos
shlb
das
fwait
jmp
cltd
in
push
adcb
inc
outsb
add
pop
push
fwait
jl
and
push
inc
jbe
mov
cpuid
push
jo
dec
jle
pop
ficoms
or
gs
push
add
push
push
push
sbb
mov
mov
jnp
test
pop
mov
mov
fs
rcl
inc
xor
loopne
addr16
xorb
in
loope
push
stc
into
pop
xchg
add
inc
dec
lahf
xchg
repnz
packsswb
imul
repz
inc
mov
push
mov
xor
mov
dec
nop
xor
fistpll
stos
cmpsl
rcll
in
and
adc
add
das
ss
dec
jmp
rcrb
mov
xor
dec
lods
arpl
sub
pop
pushf
idivl
or
icebp
enter
add
jl
cmpsb
adc
or
mov
int3
mov
xor
add
ds
cmp
add
mov
mov
and
dec
ret
dec
push
pop
stos
sub
jnp
icebp
mov
test
rorl
pop
out
dec
xchg
xor
bound
ss
inc
xor
jecxz
and
insb
jmp
jbe
dec
push
add
adc
dec
cmp
test
rol
notl
mov
and
roll
das
lds
sbb
xchg
faddl
xor
pop
subl
lods
or
xchg
sbb
test
gs
mov
bound
jbe
in
popa
pushf
loop
pop
or
pop
mov
scas
mov
cltd
sub
aad
inc
lock
je
cmpsl
mov
icebp
sbb
cmpsl
hlt
push
sub
fidivrl
dec
add
aam
inc
mov
sbb
mov
shlb
sti
xlat
arpl
inc
and
data16
xchg
or
lcall
cli
dec
ret
fldl
push
jbe
lret
ret
and
rcrl
lea
xchg
test
mov
movsb
lds
aas
ret
ljmp
dec
in
jecxz
lock
mov
sahf
cmpsb
sarl
jb
mov
js
add
popa
xlat
jbe
pop
into
jl
inc
push
dec
jmp
test
pop
sbb
popa
data16
pop
js
daa
dec
outsb
sar
orb
xchg
dec
mov
js
mov
enter
sbb
mov
mov
fsubr
lock
pop
stos
std
inc
dec
insb
pop
inc
ret
cmp
pop
and
int
je
cmp
ss
adc
mov
pop
mov
aam
xbegin
mov
cmp
push
mov
pop
roll
fisttps
stc
popa
dec
push
fwait
clc
adc
inc
test
mov
aas
outsl
mov
insb
sbb
xchg
test
stc
xchg
int
add
insb
push
pop
xchg
push
sbb
out
push
push
fs
pop
mov
inc
jl
cmpsb
icebp
or
leave
mov
push
xor
clc
add
testl
arpl
aam
in
sbb
pop
shr
loop
add
xor
cltd
and
adc
pop
jge
xchg
idiv
out
xor
jbe
xchg
stc
in
adc
ret
stc
int3
mov
mov
jle
inc
ss
test
loope
movsb
xchg
add
xchg
cwtl
push
jp
jne
push
mov
scas
icebp
add
shr
ret
iret
rorl
jae
insl
and
mov
adc
inc
in
xchg
idiv
into
pop
mov
cmp
pop
pop
pop
test
cmpsl
in
neg
cs
xlat
lcall
jns
sti
xorl
dec
lcall
push
or
clc
or
testb
cwtl
dec
mov
jno
cmp
xor
mov
sbb
mov
insb
icebp
test
fisubrs
xchg
sub
mov
and
push
scas
xor
fldcw
xchg
and
jmp
inc
mov
inc
adc
int3
cmp
push
sti
inc
loopne
sahf
scas
inc
rcll
insb
xchg
insl
add
push
cmp
pushf
xchg
push
mov
jg
push
test
push
sub
xor
in
test
mov
andb
test
sbb
add
add
mov
test
roll
pop
sahf
cwtl
xor
in
mov
std
push
in
sbb
inc
pop
jbe
call
cli
xchg
pop
int3
ret
lret
mov
stos
jo
icebp
sub
push
or
data16
push
push
jge
cmp
adc
or
lock
out
lcall
imul
fldenv
fs
loopne
leave
outsl
in
stos
mov
mov
imulb
mov
dec
cmpsl
test
iret
and
test
lock
imul
mov
fildll
imul
jns
adc
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
call
cmpl
jb
movl
sbb
push
add
movl
xorl
mov
xorl
push
sbb
mov
orl
xor
adcl
push
mov
orl
add
andl
mov
mov
test
movl
je
mov
and
mov
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sbb
add
mov
mov
sub
mov
xor
and
add
mov
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
add
movzbl
sub
mov
sub
mov
not
xor
add
sbb
mov
decl
sub
lea
sbbl
xor
addl
xor
cmp
movl
je
addl
mov
subl
xor
add
movl
cmp
movl
jne
pushl
subl
call
mov
sub
mov
and
mov
xor
subl
add
cmp
je
adcl
pushl
andl
pushl
andl
call
and
mov
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
addl
xor
subl
add
movl
cmp
movl
je
mov
mov
xorl
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
mov
mov
decl
mov
andl
add
andl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
mov
sbbl
add
movl
mov
jmp
mov
or
mov
mov
add
add
mov
mov
mov
xor
add
movl
cmp
je
movl
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
jmp
cwtl
mov
cmp
mov
mov
jnp
pushf
jnp
jecxz
push
sbb
mov
loope
jns
push
push
sub
or
fwait
imul
loopne
subl
or
enter
sbb
or
mov
push
dec
mov
stos
roll
mov
mov
pop
pop
cmc
inc
sub
mov
jo
push
pop
inc
out
stc
pop
movl
xchg
xor
insb
xchg
mov
jae
test
xor
mov
in
lods
add
adc
lret
mov
cmp
mov
push
xor
jecxz
mov
xchg
sub
cmp
bound
xor
jmp
mov
lea
pop
jecxz
repz
cs
sbb
scas
mov
sbb
shrl
mov
int
bound
lock
jnp
add
cmp
test
push
lock
movsb
negb
test
xor
push
in
xchg
xor
arpl
dec
mov
cmp
jo
adc
mov
mov
push
xchg
pop
inc
inc
scas
popa
push
inc
jge
mov
ficomps
dec
mov
jl
inc
std
jge
pop
mov
loop
mov
sbb
int3
repz
repz
fmul
jp
xor
insl
lods
xor
push
scas
xchg
pop
and
lods
repnz
ss
xchg
dec
leave
loopne
loopne
outsl
xor
pop
pop
pusha
inc
pop
movsl
push
sti
cli
jg
push
into
addl
pop
push
mov
fbld
popa
xchg
dec
jp
clc
pop
mov
cmp
stc
jbe
or
jmp
pop
xor
pop
adc
sub
mov
pop
mov
iret
imul
dec
and
ljmp
hlt
sbb
pop
sar
sbb
sbb
jle
mov
adc
mov
cltd
popf
ja
stc
shlb
fsubs
push
push
out
or
inc
push
inc
xchg
or
jo
dec
orl
xchg
scas
cld
mov
cmp
xor
mov
sbb
add
nop
or
add
ja
pshufw
cmpsb
jbe
addr16
inc
add
push
jnp
pop
pop
inc
push
mov
jo
xchg
push
jecxz
pop
inc
dec
push
decl
divb
jae
jbe
test
inc
aas
sub
mov
or
inc
lods
or
add
iret
jecxz
lods
sti
adc
adc
movnti
mov
sahf
int3
daa
enter
nop
in
pop
sbb
addr16
and
and
cmp
inc
movsl
sub
imul
mull
mov
std
push
ss
mov
or
insb
mov
mov
andl
cltd
out
or
rolb
lcall
mov
movsl
int
inc
cwtl
mov
or
mov
sar
popf
or
push
lcall
hlt
mov
cltd
adc
sub
mov
hlt
out
xor
test
fs
arpl
lea
loop
mov
mov
mov
rclb
cmp
fcmove
xlat
out
xchg
mov
and
mov
push
cld
int
cwtl
leave
sub
sub
sti
pop
sarl
jb
test
scas
push
fsubl
xchg
mov
andl
xor
mov
fcmovb
mov
sbb
and
pop
pop
adc
jecxz
mov
orb
cmp
out
or
xorb
int
cmpb
stos
jb
inc
xlat
dec
inc
out
arpl
je
int
fdivrl
or
gs
popl
add
call
add
jb
mov
adc
insl
sub
filds
push
sbb
jnp
push
push
inc
arpl
divl
imul
into
rcl
push
cmpsl
jmp
adc
fdivl
dec
lret
add
dec
xchg
pop
cmp
sahf
and
sub
lds
lods
lahf
stc
dec
shlb
and
inc
inc
xor
in
mov
and
aaa
or
add
iret
cmpsb
stc
enter
mov
lods
idivb
sarl
sti
fsubrs
sbb
les
pop
jecxz
or
mov
adc
push
pop
jb
pop
xchg
xchg
cmc
outsb
ja
jecxz
aad
jmp
mov
xor
mov
jl
sbb
cmp
dec
ret
xchg
test
jmp
mov
or
sbb
scas
jmp
pop
sub
inc
repz
push
cwtl
les
cwtl
mov
ds
or
fisttpll
call
clc
cmp
inc
mov
inc
sub
ret
aas
xor
shrb
mov
sub
mov
stos
inc
movsb
push
sub
enter
and
cmp
xchg
ds
add
cmp
sub
push
dec
or
test
pop
xlat
out
test
faddl
dec
pop
inc
sahf
pop
mov
ret
and
jne
popa
xor
aas
test
cmp
adc
vcvtps2dq
outsb
pop
jge
sub
cmp
rclb
cmc
push
in
mov
pop
dec
aad
sbb
mov
xchg
jp
and
or
cmp
pop
xor
out
cmp
jmp
pop
jge
les
add
nop
fstp
movsb
sbb
cli
scas
subl
aaa
stos
pop
xchg
xchg
sbb
addl
cmpsl
shll
and
jp
add
loope
into
cmp
pushf
xor
std
iret
repnz
xor
insb
adc
call
dec
pop
int
inc
mov
mov
pop
sub
ror
jne
jno
adc
jmp
fadds
cmpsb
lock
inc
inc
dec
xor
cmc
sahf
mov
ret
divb
xlat
jge
inc
scas
mov
fsubrl
xchg
dec
sub
fstl
mov
push
outsl
adc
pushf
clc
or
inc
shrl
std
add
mov
xchg
mov
cs
xchg
loopne
mov
mov
mov
push
addr16
out
shrb
pop
and
scas
addb
xchg
fsubp
add
in
pop
xchg
insl
fwait
roll
push
scas
rolb
xor
cmp
js
inc
jge
js
lock
xor
aaa
jmp
pop
into
xchg
dec
test
xchg
jmp
test
xor
insb
or
ss
mov
sti
fs
es
jb
pop
dec
pop
sarb
in
xchg
xchg
jbe
repnz
jmp
loopne
fnstenv
mov
loop
mov
outsl
cmpsl
nop
xlat
xor
mov
mov
je
fsubl
lcall
sub
or
push
mov
mov
xor
mov
rcr
sub
insb
lds
or
daa
sbb
and
sti
test
pusha
lret
add
sbb
inc
push
out
xchg
fs
push
inc
pop
pop
pop
fisubrl
js
mov
popa
inc
xchg
xor
xchg
push
adc
inc
pushf
pop
daa
das
push
iret
sbb
xor
push
scas
cmc
pop
cmp
fldcw
sub
cmp
dec
dec
es
jmp
jecxz
jae
dec
out
les
xor
xor
loop
xchg
or
mov
fcoml
or
or
sub
jg
loope
sbbl
popa
sub
les
addr16
cmpsb
insb
cmp
mov
movsb
jecxz
jmp
and
ss
setns
shrb
scas
divl
out
xor
aaa
cmpsb
mov
xchg
dec
mov
movb
xor
loopne
jmp
dec
mov
in
xor
imul
mov
ret
mov
test
pop
cmpsb
clc
out
xor
mov
bound
sub
sbb
ret
mov
shrl
imul
xor
in
push
fadds
scas
mov
enter
shrb
pop
push
push
mov
jae
gs
in
pop
in
jnp
cmp
mov
pop
sbbl
cmp
dec
xor
or
jmp
cmc
mov
xor
pop
gs
jo
cmp
out
in
jae
mov
push
sub
lret
pushf
push
sub
and
jnp
fs
mov
scas
pop
outsb
xor
ror
nop
cmpsl
cs
sbb
sub
cmp
loopne
mov
xchg
jno
push
loop
les
subb
iret
cs
jnp
sub
gs
add
test
push
outsb
cwtl
les
imul
addr16
dec
xchg
test
jno
daa
dec
ja
aam
add
rclb
mov
out
std
test
and
inc
jne
inc
mov
mov
sarb
cmp
mov
mov
in
shll
xor
push
cmpsb
jp
push
js
dec
cmpsb
icebp
mov
ds
cmc
mov
xchg
insl
pop
loope
xor
mov
mov
out
fisttpll
sbb
in
push
pop
jo
jbe
subb
sub
add
mov
pop
out
call
jae
dec
xchg
xchg
lds
sarb
pop
xchg
cltd
push
jno
jns
fwait
mov
jnp
pop
idivb
and
cmc
inc
sbb
in
stc
jecxz
call
xchg
sti
loopne
addr16
addr16
mov
fs
cmp
inc
sbb
sub
fnstcw
sbb
aaa
ss
daa
in
jae
add
mov
push
dec
inc
jae
inc
in
pop
pop
popa
das
mov
dec
stos
outsb
aam
or
or
dec
cmc
call
sub
in
faddl
push
sub
pop
add
addl
movsb
movsb
test
repz
mov
xlat
cmc
mov
jne
leave
mul
stc
pop
insb
leave
or
mov
dec
add
aad
mov
cmp
outsb
sbb
adc
ljmp
add
icebp
adc
pop
into
mov
nop
xor
inc
adc
xor
cmp
push
xor
cmp
test
stos
mov
push
xchg
pop
mov
sub
add
mov
dec
mov
mov
or
into
test
or
jae
or
loope
xor
ss
cli
mov
and
cmc
data16
sahf
mov
lcall
loope
fiaddl
push
mov
adcl
aaa
outsb
or
lret
push
pop
or
movl
cmp
inc
test
xchg
inc
in
push
lret
xor
and
add
mov
or
lea
negl
ret
cmp
aad
roll
addr16
xchg
rorl
dec
roll
cmp
dec
rcll
xor
outsb
aam
ds
mov
fidivs
sub
out
jbe
mov
ss
andb
inc
pop
dec
js
or
and
push
and
cltd
mov
mov
pop
or
inc
fwait
popf
jb
sub
pop
jb
jmp
dec
test
lahf
push
xlat
inc
shr
jmp
or
xorb
xor
add
fidivrs
jg
mov
decl
sub
stos
add
fldenv
popa
push
jmp
shll
push
movsb
xchg
pop
out
fcomip
add
xchg
dec
jp
scas
aaa
and
movsl
outsb
jg
clc
fstpt
push
lret
xchg
sbb
and
lods
dec
outsb
mov
out
imul
dec
cld
lods
popa
mov
cmp
xlat
ss
add
test
dec
jl
push
arpl
popa
insb
sub
out
mov
xchg
int3
jl
addr16
xor
rorb
and
pushf
fisttps
sub
shrb
jo
jecxz
sbb
fidivl
lar
test
ljmp
sub
in
mov
out
scas
push
fsubrs
outsl
dec
sbb
xchg
lfs
les
std
add
mov
leave
sbb
icebp
pop
in
scas
sub
push
lret
repnz
in
sti
daa
adc
push
movb
out
inc
push
xor
sub
jecxz
dec
scas
pop
ljmp
ss
ret
mov
js
gs
dec
ja
pop
lea
mov
add
scas
sbb
imul
shrl
movsb
sbb
inc
pop
pushf
pop
data16
push
and
inc
in
fbld
mov
inc
and
bound
sbb
int3
arpl
lea
mov
push
sbb
iret
fisttpll
sarl
fisubrs
sbb
adc
cmp
add
imul
mov
js
or
mov
dec
in
xchg
data16
push
ret
enter
and
cwtl
cwtl
cmc
shrl
pop
sarl
imul
dec
in
insl
push
pop
fdivr
cltd
and
popf
cmp
sub
adc
mov
fisttpl
sbb
clc
adc
dec
data16
adc
mov
mov
loop
inc
fs
lret
push
lock
pop
adc
mov
sbb
ds
sub
icebp
gs
lahf
fcoml
mov
push
xlat
xorb
stos
dec
add
push
fcoms
les
loope
repnz
lret
pop
cli
sub
mov
pop
mov
popf
js
lret
pop
mov
xor
scas
test
loope
inc
adc
ljmp
push
insl
add
mov
fisubrs
and
pop
iret
lret
mov
jnp
loope
ds
ja
inc
insl
sub
roll
shrl
jbe
cmp
xor
pop
lret
shll
shl
outsb
pop
popf
mov
in
stos
sbb
jno
fstl
repnz
mov
loope
ret
js
fldenv
das
dec
sub
loopne
jae
js
cli
dec
lods
pop
add
pop
aad
sahf
pop
mov
int
mov
loope
rorl
pop
mov
xchg
mov
stos
sbb
pushf
dec
pop
jp
repz
ss
sub
fsubs
cmpsb
mov
dec
xchg
addb
mov
fcompl
mov
movb
bound
or
in
mov
mov
aas
xor
adc
adc
imul
xchg
outsl
sarl
repnz
adc
out
notl
bound
inc
sub
pop
sahf
int
add
xor
bound
dec
add
pop
xchg
dec
js
sbb
adc
mov
lcall
rolb
pop
mov
sbb
push
add
lods
jle
lahf
stos
insl
in
fiaddl
dec
ja
shrb
mov
movsb
dec
fisubl
inc
pop
xor
testl
or
jbe
xchg
fcoms
xchg
adc
pop
add
inc
cmp
out
sbb
adc
push
xchg
incb
stos
add
idivl
adc
les
test
push
fisubrl
ret
pop
cld
push
add
mov
outsb
and
xchg
jmp
sbb
xor
add
jg
pop
pusha
loope
xor
inc
add
fs
mov
jecxz
adc
into
xor
sbb
or
outsl
push
mov
fcos
lret
xor
jns
mov
jmp
inc
xchg
jle
imul
push
addr16
imul
sub
pop
repz
jb
xor
cmp
sbb
cmp
pop
push
pop
aaa
lods
cmp
xorl
fimuls
bound
jle
movsl
dec
xchg
sahf
lret
inc
mov
push
xlat
lcall
push
jne
idivb
mov
repnz
inc
mov
pop
mov
stos
cltd
pop
xchg
xor
jmp
fsubs
jo
sbb
xor
mov
jae
pop
std
xchg
adc
daa
mov
inc
mov
pushf
pop
cvttps2pi
xchg
inc
in
cmp
xor
hlt
xchg
movsb
les
not
mov
pushf
pop
adc
xchg
inc
dec
outsb
mov
pusha
dec
cld
xor
imul
ja
ret
pop
xchg
mov
inc
pop
and
xchg
in
jmp
fidivs
sbb
jne
stos
in
jno
xor
mov
push
js
rolb
aaa
mov
xchg
push
jnp
jne
lock
test
push
insl
xchg
push
imulb
popa
jge
push
or
xchg
lods
and
ficompl
icebp
rcrb
dec
test
icebp
pushl
and
sbb
cmp
xor
pop
dec
xor
push
std
ds
mov
lret
and
add
in
ret
cli
cwtl
mov
addl
scas
xchg
repnz
imul
je
sbb
push
xor
pop
pushf
pop
aad
mov
add
sub
sub
xor
jmp
pop
jnp
push
mov
loope
mov
jecxz
les
fisubrl
rolb
or
icebp
inc
sub
movsb
xchg
mov
popf
ss
adc
ds
or
jns
mov
lret
test
xchg
cltd
mov
xor
ss
aaa
cld
test
cmp
movsl
or
int
lds
xor
call
push
das
repnz
jecxz
shrl
xlat
inc
sub
add
xchg
faddl
mov
enter
xchg
ss
loop
jo
das
cmpsb
xchg
dec
sbb
aad
or
lret
sub
pop
jmp
mov
jle
pop
rorl
sub
cld
push
add
pop
xor
into
inc
out
xchg
arpl
rorl
iret
imul
and
push
and
dec
sub
jle
pop
fistl
std
cmp
push
push
out
jb
xchg
cmc
mov
addr16
int3
das
inc
add
pop
xor
pop
notb
stc
clc
inc
push
inc
jb
stos
cli
or
push
mov
aas
icebp
pop
xchg
ljmp
xchg
mov
pop
shrb
sub
movsb
data16
aam
adc
fwait
pop
inc
xor
iret
inc
data16
jns
je
in
out
ret
xor
mov
mov
cmpsl
sbb
jg
rorl
cmp
mov
or
nop
lret
jmp
and
cmpsb
and
add
mov
loop
inc
push
insl
outsb
movsb
pop
scas
mov
mov
loopne
and
bound
out
test
popf
adc
xchg
mov
or
cmpsl
in
fidivrs
and
shl
rcl
adc
push
and
lds
stos
rcll
mov
lock
sub
mov
adc
cmp
cs
cmc
mov
cmp
test
xchg
test
pushf
xchg
hlt
jnp
sub
lret
das
push
mov
out
sbb
sbb
bound
pop
test
mov
xor
sub
cmp
in
mov
adc
inc
rorb
add
repz
into
pusha
pushf
mov
cmp
popf
jge
add
jl
and
stc
push
test
add
in
int3
mov
adc
add
pushfw
jmp
daa
adc
dec
sbb
cmp
or
lret
sbb
in
scas
push
jecxz
lock
aas
sbb
testl
pop
movsl
hlt
xor
ljmp
xchg
adc
insl
cmpsb
imul
leave
jbe
adc
addr16
mov
push
scas
out
mov
subb
sub
mov
push
subb
push
das
stos
sub
xlat
insb
mov
loopne
ret
insb
add
lret
pop
fwait
sbb
test
sbb
and
in
jge
sbb
sti
sbb
push
cmp
mov
addr16
mov
sarb
jae
movsb
or
ds
inc
mov
jnp
scas
adc
cmp
xchg
out
dec
cmp
fnstcw
pushf
xor
and
mov
insb
adc
popa
ficoml
or
add
sbb
scas
pushf
and
icebp
js
mov
frstor
in
mov
jmp
imul
push
cli
test
flds
je
ds
jmp
inc
jno
pop
sbb
test
aas
lahf
imul
pop
fistl
and
pop
and
adc
mov
mov
mov
scas
sub
mov
jnp
cli
mov
xchg
push
fcomps
pusha
sub
call
or
xchg
dec
test
je
push
and
enter
add
bound
lea
enter
stos
dec
dec
mov
popa
xor
movsb
or
cmp
dec
scas
pop
mov
into
dec
in
rcrl
in
loope
push
incb
push
push
sub
inc
jnp
xchg
ret
sub
sub
imull
pusha
mov
pop
xchg
das
in
popf
add
mov
inc
cmpsb
sub
jg
sub
jne
mov
xchg
es
mov
jo
movsb
lret
add
xchg
or
into
xor
pop
mov
ljmp
or
sub
testb
stc
dec
add
xchg
lods
sar
xchg
hlt
fxch
insb
jo
fldenv
movsl
call
imul
andb
dec
aas
test
jnp
mov
lret
testl
aas
mov
cmp
sbb
pop
dec
push
icebp
inc
or
out
cmc
dec
sarb
push
addb
add
adc
mov
pop
test
sub
popf
lret
cmp
pop
stos
scas
rolb
mov
adc
fwait
jp
sbb
je
cltd
pop
or
sub
mov
jp
pop
loop
jbe
imul
sbb
fcmovb
lods
xchg
mov
or
inc
enter
jno
pop
outsb
fsubs
cmp
lods
mov
add
push
dec
push
or
pop
cmp
xor
mov
mov
push
or
mov
scas
icebp
popa
inc
addr16
mov
cmp
es
ds
dec
into
jne
icebp
mov
push
dec
pop
xor
adc
jns
cmp
pusha
lds
sub
sbb
mov
xchg
jns
jbe
nop
sbb
jl
int
adc
and
push
js
fidivrs
xlat
les
xchg
mov
or
rorb
ds
mov
sahf
repnz
je
push
and
push
or
xchg
cs
adc
sahf
cmp
push
aaa
adcb
je
pop
outsb
mull
mov
mov
push
adc
popf
leave
adc
mov
xor
aad
inc
xchg
mov
cmp
enter
sbb
fdivl
push
jae
aas
adc
enter
sub
mov
popa
mov
pop
jmp
cmp
jle
daa
jo
call
imul
xchg
jg
jo
sub
sub
add
or
push
sbb
mov
fwait
jmp
insl
fcoml
movsb
cmp
arpl
sbb
or
mov
loope
mov
jp
adc
fistps
je
and
inc
add
jmp
lahf
test
leave
imull
scas
int
notl
xchg
mov
mov
dec
and
int3
iret
inc
std
outsl
push
sub
cmp
pop
scas
in
mov
jp
mov
jo
push
jo
and
orl
cmp
pop
xchg
mulb
jmp
dec
into
iret
pop
inc
cmp
pop
repnz
or
daa
sbb
in
insl
mov
mov
or
ss
movsb
insb
jno
inc
ja
sub
sbb
lcall
andb
adc
xor
clc
jnp
lods
adc
andb
mov
push
mov
test
int
popf
cltd
icebp
movsb
adc
mov
outsl
and
ss
ja
sub
inc
leave
fs
ror
mov
pop
in
pop
arpl
sub
in
iret
pop
ss
push
hlt
rolb
nop
fsubrs
stc
pop
aaa
sbb
arpl
sub
push
push
pop
stos
mov
lods
mov
rcrb
frstor
xor
add
imul
mov
fcomps
fdivl
je
mov
mov
and
add
fdivrl
js,pn
jnp
lea
cmp
repz
repnz
dec
pop
in
inc
aad
xor
push
and
pop
push
mov
mov
shll
icebp
jge
push
sub
xor
std
xor
dec
xchg
out
inc
pop
mov
xor
xchg
lea
sub
in
xor
pop
cltd
inc
push
sahf
lret
cmpb
inc
imul
cwtl
hlt
lret
movsl
repnz
shrl
adc
cmp
loope
jg
dec
add
lock
sub
or
or
orl
mov
inc
stc
mov
popa
jns
data16
ret
jmp
xchg
stos
call
out
xor
lods
push
cmp
add
stos
xchg
add
lret
dec
mov
push
mov
pop
jp
enter
inc
mov
or
insl
addr16
ds
sbb
outsb
xchg
jg
daa
clc
sub
mov
lahf
iret
fucomi
inc
push
pop
movsb
jbe
cmp
inc
inc
rorb
mov
fwait
inc
aas
jle
sbb
and
int3
les
xchg
int3
out
std
lret
test
leave
jp
in
jnp
pop
dec
jmp
jne
ljmp
bound
aas
mov
adc
jle
jbe
gs
mov
stos
push
push
aas
daa
sub
out
addl
jae
sbb
mov
xor
gs
push
jp
stc
push
push
aad
icebp
xor
shlb
mov
mov
movsb
jno
push
adc
jmp
stos
fists
pop
mov
mov
pop
repnz
add
loope
xchg
aad
sahf
lcall
jb
or
cld
dec
in
mov
push
push
addr16
inc
add
lahf
cwtl
jge
jbe
arpl
push
call
fdivrl
mov
mov
nop
jge
xchg
cmp
or
mov
jl
mov
adc
incb
cli
lds
jecxz
ja
ja
or
lods
scas
lds
and
sub
adc
sbb
incb
fidivrl
sbb
push
nop
pop
push
mov
mov
int
sbb
sbb
push
daa
lcall
ret
sub
xchg
sbb
mov
sbb
xchg
sub
pop
movl
ret
out
mov
iret
stos
in
std
popa
xor
jns
mov
sbb
rcrl
pop
xchg
mov
mov
lret
adc
out
fimuls
fs
sti
test
leave
ffree
sbb
cltd
add
xor
fbstp
ficoms
cli
dec
dec
xchg
lods
hlt
lret
js
stc
cmpsl
pushf
mov
pop
add
sar
cmp
jge
dec
inc
outsl
data16
sahf
mov
cmp
arpl
jb
xchg
mov
push
sub
dec
jae
jns
notb
jge
sub
add
and
mov
jns
out
add
inc
int3
cmp
out
stos
xchg
and
fwait
daa
and
call
cmc
push
iret
push
int
lock
je
notb
dec
add
outsl
stc
lahf
jne
or
push
inc
mov
popa
pop
jno
ss
add
ss
enter
xor
mov
jb
and
mov
mov
mov
loope
das
or
sbb
and
cmc
adc
mov
jo
ds
cmp
push
add
dec
xchg
pop
xor
jle
inc
or
pop
xorb
mov
push
push
sub
popf
pop
and
dec
in
fmul
imul
jns
lcall
cmp
sbb
scas
adc
cmp
popa
adcb
lea
loopne
mov
in
cmp
call
jle
ljmp
jb
int3
and
sti
pmaddwd
or
lods
cs
mov
xchg
insl
fadd
inc
imul
jae
pop
lret
xchg
lcall
mov
xor
jl
cmp
call
imul
loope
adc
enter
jbe
mov
gs
mov
rcrb
inc
orb
rclb
push
int
bound
dec
outsb
js
and
push
mov
addb
and
jne
dec
in
rclb
cmp
mov
and
cli
stos
test
jmp
and
out
movsl
in
xor
incl
dec
sub
pop
xchg
shlb
xchg
mov
ret
mov
xchg
je
mov
sti
sbb
pop
jp
movsl
sbb
daa
data16
pop
mov
sbb
inc
dec
pop
js
dec
loopne
xchg
xor
test
lahf
ljmp
lods
imull
inc
sbb
or
test
loope
and
and
mov
in
xlat
add
icebp
stos
cltd
nop
call
mov
dec
fisubl
sbb
xorl
test
test
pop
inc
xor
push
inc
insb
sub
mov
add
adc
mov
or
add
test
pop
sbb
pop
mov
inc
xor
rorb
sbb
scas
testl
mov
mov
push
ret
cmpl
and
add
push
push
xchg
mov
add
xlat
and
jp
addl
mov
ja
call
push
mov
xchg
int3
sub
jg
outsl
add
and
adc
mov
xor
aaa
add
jl
lahf
jecxz
pusha
xor
dec
xchg
push
aad
out
mov
cmp
inc
mov
test
cmc
jmp
xchg
mov
mov
test
xor
popa
fidivs
sti
fidivl
jae
ret
iret
sbb
test
push
add
inc
pop
push
mov
fisubrs
xchg
or
mov
lahf
dec
inc
sbbb
das
push
dec
sbb
lea
negb
inc
stos
pop
adc
add
mov
repz
dec
iret
xchg
lahf
sub
pop
icebp
ss
sbb
loop
ds
out
stos
into
dec
inc
stos
lret
fcmove
mov
mov
pushf
dec
bsr
sub
cmp
add
lcall
pop
rorl
test
shr
jbe
push
sbb
xchg
and
sub
lods
jno
mov
jb
test
mov
push
shr
call
or
and
adc
pusha
mov
aaa
in
cmp
lea
cltd
adc
call
push
and
cmp
cmpsl
add
lock
jns
push
les
pushf
jmp
xorl
jno
and
cmp
ja
push
out
andl
and
cli
mov
sbb
push
mov
xchg
shrb
jno
sbb
aam
inc
pop
push
mov
imul
xchg
inc
call
sub
sarl
lahf
mov
xchg
sbb
xor
dec
js
loope
add
aad
or
adc
mov
xchg
std
mov
gs
ss
mov
insl
out
adc
inc
repnz
xor
inc
and
movsl
sbb
pop
popf
mov
insl
je
call
in
dec
sbb
dec
test
mov
callw
mov
clc
mov
fst
xor
sbb
sbb
add
imul
jne
cmp
outsb
jecxz
jb
mov
mov
mov
pop
xor
mov
popa
adc
ret
mov
push
sti
into
mov
mov
pop
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
jmp
cmpsl
fisubrs
jbe
jbe
outsb
xchg
adc
pushf
jnp
adc
cmp
adc
add
daa
push
inc
sbb
lret
rcr
xor
mov
and
jns
or
cmpsb
dec
cs
push
pop
inc
int
push
icebp
aad
arpl
pop
push
imul
stc
shl
dec
cmp
ja
push
das
jne
sub
cmp
sbb
xchg
test
push
sub
call
scas
sbb
nop
fsub
sbb
sbb
es
add
clc
lcall
lods
hlt
xor
fwait
jbe
adc
cld
in
mov
push
dec
pop
je
fdivl
jo
xor
jns
cwtl
or
test
or
ja
test
cmp
mov
jp
inc
cmc
inc
cld
inc
pop
std
push
stos
mov
mov
cld
mov
dec
outsb
jne
add
lcall
mov
xlat
aam
inc
xchg
clc
mov
push
jne
out
xchg
scas
sti
repz
mov
or
xchg
das
xchg
xchg
cmp
loopne
jmp
in
push
cmp
rolb
dec
ret
negb
add
icebp
or
andb
xchg
std
mov
iret
adc
lcall
addr16
jmp
daa
jl
lods
std
imul
adc
xchg
enter
jmp
jnp
pop
jg
sbb
je
push
cmpsl
dec
fidivs
mov
adc
stc
roll
push
inc
adc
or
mov
lods
int
sbb
jg
xchg
mov
push
adc
test
fisubrs
out
add
dec
insl
scas
inc
into
roll
cmp
mov
cmpsl
aad
sbb
aas
add
roll
test
xor
ds
xor
add
outsb
lret
mov
pop
push
xor
jo
das
dec
and
in
push
jne
xchg
adc
pop
sub
add
push
imul
lea
lret
pop
fsubs
or
xchg
mov
cmp
sub
and
dec
mov
xchg
leave
stos
xor
xchg
xchg
lcall
mov
aam
push
xor
fcmovnbe
scas
pop
scas
ficomps
mov
popf
fisubs
sub
sarl
mov
rorb
stc
xlat
int
repz
call
enter
lret
enter
aam
sub
fs
icebp
xor
push
test
add
sarb
mov
push
xchg
sub
ficoms
cs
jmp
adc
ret
mov
xchg
movsb
mov
xchg
gs
frstor
scas
mov
jb
mov
sub
stos
pop
repz
dec
xchg
fwait
aaa
jge
loopne
movb
dec
insb
inc
mov
dec
xchg
mov
aaa
jnp
jecxz
and
xor
adc
rorl
outsl
mov
sbb
pop
sbb
inc
popa
neg
sbb
repz
fs
and
jle
js
ret
notl
sub
mov
push
cwtl
mov
xchg
add
or
andb
ror
es
xchg
lea
xchg
in
push
pusha
sub
fwait
mov
out
fisubrs
sbb
push
divl
adc
cmpsb
sbb
in
or
jno
xorl
xchg
ss
cmc
pusha
nop
rcl
push
xlat
sub
sbb
insb
and
xor
mov
out
test
xchg
sub
ds
jl
xchg
adc
lds
popa
pop
scas
imul
test
cld
xor
sti
cmp
add
pushf
jl
dec
pusha
adc
pop
mov
bnd
jl
inc
stos
mov
mov
jge
sub
cs
sbb
push
or
in
mov
fdivrs
sub
cmpsb
lds
jno
shll
adc
dec
add
mov
jno
aaa
push
shrb
fldt
pushl
pop
cld
loop
jmp
fucomip
inc
and
adc
jo
jp
dec
sbb
test
add
jnp
insb
dec
cmpsb
daa
xor
adc
imul
inc
fimuls
cmp
out
cld
pusha
sysret
and
std
adc
out
dec
lret
inc
mov
xchg
scas
xor
sbb
xchg
nop
stos
and
cmp
mov
movsl
mov
mov
std
add
mul
pop
dec
ret
cli
xor
fildl
enter
cltd
shl
mov
sub
mov
mov
aad
push
sub
sbb
dec
in
or
pop
add
lcall
inc
data16
or
insb
imul
inc
jb
in
adc
pop
sahf
outsb
test
add
jle
into
xchg
in
rcll
inc
fnsave
sbb
dec
inc
xchg
lcall
jns
jecxz
out
cmc
or
lret
sbb
sub
aaa
pop
push
push
push
mov
xchg
mov
or
test
aaa
xchg
inc
dec
fmul
sbb
jle
loop
call
lret
outsl
sub
rcll
repz
fwait
outsl
mov
mov
std
mov
orl
movsb
and
iret
insl
sbb
sbb
cmp
inc
shr
shld
push
add
mov
jecxz
push
jg
jecxz
out
repnz
dec
ljmp
std
mov
pushf
cld
pop
ljmp
xchg
loope
insb
in
mov
shlb
mov
popf
mov
sbb
data16
xor
mov
cmovno
mov
sub
pop
add
or
xor
cmp
enter
jmp
scas
stos
jl,pt
xchg
inc
sub
cmc
imul
xor
aad
pusha
add
insb
out
push
dec
push
aam
xor
push
mov
fsubs
stos
sub
push
push
jge
inc
jl
cld
fcompl
push
movl
xchg
js
aas
das
lea
sti
daa
test
loope
mov
js
cli
adc
movsb
xchg
sti
aaa
mov
adc
ret
dec
pushf
lds
sbb
int3
insl
sti
push
inc
cs
mov
insb
lahf
je
fimuls
push
dec
pop
imul
mov
aad
inc
fnstenv
inc
ja
xchg
jp
xchg
mov
into
xor
mov
fadds
push
and
adc
cmp
int3
insl
ss
or
pop
add
fdivs
lds
xor
repnz
pop
sbb
sub
mov
pop
das
jmp
cmp
cmp
bound
les
fistl
lods
pop
pop
insl
xor
fs
cli
dec
add
push
lds
jl
push
aaa
insl
add
pop
push
cmpsb
cwtl
push
or
phaddd
sub
push
xor
repnz
leave
jp
cmp
jmp
pop
dec
or
in
sahf
ret
leave
shrb
mov
divl
pop
insb
or
clc
pop
mov
push
das
imul
repnz
push
pushaw
or
jno
sub
daa
clc
popa
popa
sbb
je
mov
stc
sub
pop
sub
ret
aaa
test
mov
es
pop
add
into
push
and
das
add
arpl
pop
stos
outsb
and
call
cmp
mov
inc
pusha
pop
loop
mov
int
jmp
mov
in
inc
into
jbe
push
mov
mov
fwait
jp
push
cmc
xchg
or
and
inc
mov
outsl
cld
fwait
mov
jmp
popa
popf
ja
inc
mov
lcall
nop
dec
sbb
dec
cmc
cmp
adc
cli
xlat
jns
leave
mov
sbb
aam
hlt
inc
push
data16
sub
dec
call
cld
movsl
mov
sbb
xchg
adc
hlt
lods
inc
push
mov
call
jb
cmpsb
adc
add
and
sub
out
outsb
dec
inc
mov
and
mov
je
mov
mov
testl
divb
movsb
aas
iret
inc
imul
lock
repnz
sub
rclb
fiadds
shll
icebp
std
dec
pop
neg
push
jecxz
icebp
jns
jb
push
jmp
ss
dec
mov
mov
insl
stos
fwait
dec
ret
pop
out
shll
jns
mov
lret
push
stc
sbb
xlat
imul
ficoml
sub
mov
mov
push
or
mov
test
add
sbb
xor
lcall
fnstenv
nop
cld
xchg
mov
js
dec
int
icebp
ret
je
inc
sub
imul
pop
les
inc
add
mov
sbb
pop
imul
dec
imul
insl
daa
pop
add
loope
mov
js
xor
mov
adcl
and
pop
add
out
je
std
push
scas
cmpsl
mov
in
and
negl
push
andl
sbb
leave
fbld
popa
sub
mov
repz
xor
xorb
xchg
push
mov
fwait
ret
or
sbb
pop
mov
add
inc
push
popa
add
fidivrs
lcall
push
ret
arpl
and
push
dec
add
pop
or
loope
pushl
subl
mov
mov
loopne
stc
out
data16
jl
adcb
call
addl
pop
add
test
adc
clc
push
jo
and
hlt
jle
repnz
mov
cs
push
movsl
mov
mull
lds
rcll
mov
xor
popa
mov
enter
and
xchg
pop
repnz
cmpsb
cs
xchg
jp
aad
mov
xchg
lods
in
xchg
cmpsl
add
or
insl
cmpsb
or
lock
or
add
call
push
push
je
repz
push
push
mov
inc
jg
dec
ljmp
jg
in
xchg
idivl
les
into
and
xor
call
mov
mov
mov
sbb
es
aad
adc
jne
movsb
or
cmp
and
imul
mov
dec
mov
loopne
xchg
pop
cltd
es
dec
mov
inc
sub
pop
and
mov
fisubrs
sbb
jb
inc
js
nop
adc
in
push
pop
pop
push
ret
stc
add
lret
cmp
fcmovbe
into
jns
fisubs
shrb
rcrb
rolb
add
hlt
lea
adc
mov
stos
aam
jle
sub
test
fs
adc
fldcw
imul
push
mov
push
inc
inc
pop
and
mov
in
sbb
mov
xor
dec
out
cmovnp
bound
lret
mov
lcall
ret
mov
stos
push
in
pop
mov
jae
mov
lds
scas
aaa
lock
adc
and
andb
dec
sub
pop
popa
cld
jb
pop
adcl
sub
cmc
adc
xchg
das
scas
and
mov
in
out
cs
or
int
jge
push
sbb
push
stc
inc
and
xchg
scas
jo
js
mov
out
cmp
clc
pop
pop
pop
mov
mov
int3
inc
jno
lahf
cld
shl
dec
mov
cmp
dec
jo
shrb
xchg
icebp
enter
fstpl
outsl
jle
adc
push
xor
out
add
mov
dec
add
mov
mov
mov
inc
or
insb
mov
pop
fdivrl
cmp
xor
aam
scas
ja
jae
pop
and
movd
ss
add
cmc
mov
pop
xchg
mov
test
or
or
je
adc
mov
mov
or
xor
loopne
sti
inc
cmp
mov
add
pushf
sarl
or
test
nop
cmp
push
testl
jb
cli
jle
add
adc
in
sbb
lds
push
pusha
dec
jecxz
xor
cmp
and
stos
mov
loopne
rclb
push
sub
aad
or
cmp
rcrb
bound
and
into
fwait
xchg
ds
test
dec
dec
loop
add
cmp
jbe
orl
shrl
addr16
xor
and
mov
jecxz
xor
sub
pop
cmp
aaa
int3
jnp
mov
push
xor
into
mov
test
adc
mov
mov
add
xchg
cmpb
out
and
mov
notb
mul
xlat
push
ret
mov
mov
jmp
into
je
fnstenv
mov
mov
xchg
ret
cmp
fsubl
cmova
ja
and
lods
dec
push
xor
mov
xchg
jecxz
lods
pop
mov
push
pop
cmp
add
notl
scas
add
gs
mov
mov
test
pusha
xlat
imul
je
add
mov
fdivs
loopne
cmp
dec
xchg
ret
mov
cmp
pop
movsb
dec
lods
fnstenv
mov
sub
clc
sbb
xchg
mov
xchg
in
out
dec
push
jne
xchg
pushf
loopne
es
and
xor
inc
ds
ja
dec
ja
cmpsb
mov
mov
scas
push
faddl
and
push
insl
push
add
fbstp
xchg
loope
and
jae
or
inc
cli
out
lods
stc
test
or
mov
mov
mov
enter
push
js
inc
cmp
lcall
nop
inc
repnz
movsl
pop
fnstenv
cwtl
test
in
rclb
popf
out
xchg
add
icebp
cmc
jb
loope
arpl
add
add
add
test
hlt
ljmp
popa
xchg
push
jns
xor
call
jecxz
aaa
sub
mov
inc
int3
es
das
popf
mov
mov
sysexit
jns
and
aad
xchg
lods
lahf
push
aad
aas
mov
mov
dec
xor
andl
mov
ljmp
or
in
loop
xor
cmp
xchg
dec
mov
lret
ja
je
adc
orb
insl
mov
fiadds
mov
lds
les
scas
shlb
les
sub
leave
inc
jo
pop
out
in
movl
or
mov
jnp
rclb
xchg
inc
ljmp
stc
mov
ja
mov
insb
fldenv
cli
xchg
popf
mov
sbb
sub
mov
pop
sbb
mov
mov
xchg
cmp
xor
or
sti
enter
or
std
iret
hlt
dec
push
push
int
push
les
cmp
lock
inc
jnp
loopne
ficoml
dec
pushf
mov
in
mov
cld
or
xor
mov
std
mov
outsb
xor
jno
shlb
sub
outsb
adc
lods
xchg
loopne
and
xchg
sbb
add
ja
jae
dec
sti
imul
ljmp
add
xchg
add
sarb
aam
cmp
sbbl
fisubrl
dec
adc
jmp
call
xor
addr16
mov
cwtl
jno
pop
pop
push
mov
xchg
push
fstpt
out
aam
test
and
lods
scas
jne
lcall
xchg
inc
xchg
std
clc
and
sbb
cmc
pop
test
or
sbb
imul
jbe
rolb
inc
add
into
jmp
test
clc
fnsave
cs
mov
popf
fmuls
loop
mov
imul
aas
or
aas
fldenv
in
cli
mov
jno
jmp
add
jecxz
sub
jns
aaa
fisttps
addb
sbb
cmp
xor
dec
dec
cwtl
jno
dec
push
in
dec
ret
loopne
ret
mov
xchg
mov
sub
or
cltd
lock
and
sub
xchg
rorl
jne
xchg
pop
pop
mov
cmc
inc
aad
lea
out
xchg
xor
fldenv
shl
xorb
outsl
dec
insl
and
roll
add
dec
cld
fbstp
jl
iret
insl
test
inc
mov
dec
cmp
or
push
xor
xor
cwtl
adc
sub
push
sub
xor
pop
pusha
lret
push
cmp
mov
jnp
dec
mov
adc
icebp
jae
addr16
mov
sbb
stc
in
jg
xchg
xor
xchg
jo
jo
sub
mov
mov
jnp
jb
xchg
fnstcw
pop
popf
ja
sbb
jp
mov
add
sub
lahf
pop
jle
add
add
loopne
ret
out
jb
mov
sbb
jl
mov
push
iret
subl
mov
jno
push
clc
xchg
aas
and
in
adc
jmp
add
sub
fisttpl
filds
js
sub
sbb
andb
test
pop
stos
dec
xchg
int
out
out
sbb
jns
repz
push
adc
mov
push
jle
stos
fistl
mov
outsl
sub
sbb
lock
add
lock
aas
adcl
mov
fucomip
sahf
movsl
cltd
xor
push
mov
inc
pop
pop
daa
imul
cs
sub
and
loopne
pop
fisubrl
das
test
mov
push
mov
cld
je
hlt
xchg
gs
les
xorl
jne
rorb
push
xor
xchg
lock
push
fimull
push
or
jb
jg
test
divl
ror
inc
pop
cltd
in
stos
xchg
fildll
sub
rclw
pop
mov
stos
push
jmp
aaa
mov
hlt
je
mov
fstps
cs
xchg
dec
push
mov
pop
int
xchg
xchg
sbb
add
jnp
xor
add
clc
mov
fldl
xlat
subl
fmul
lods
push
imul
sti
outsb
ljmp
aam
mov
adc
or
in
add
dec
icebp
xchg
push
mov
jle
or
adc
loopne
cmp
dec
xchg
sarl
mov
fimull
dec
add
adc
mov
fwait
in
aas
xchg
mov
filds
push
or
dec
insl
and
xchg
addl
out
cmpsl
in
int
ret
dec
push
cmp
in
push
jno
pop
in
cmpsl
lods
pop
fs
cltd
das
xor
stos
sahf
stos
out
test
icebp
sub
push
mov
mov
push
ds
mov
pushf
pop
cmp
ljmp
cmpsb
xchg
aad
sbb
shlb
fcomip
sub
test
outsb
clc
fucomp
faddl
mov
pop
sbb
and
icebp
and
fistpll
lahf
sub
sub
mov
push
or
cmc
jge
stc
test
in
fidivrl
dec
insl
ret
shl
mov
mov
aaa
daa
dec
push
nop
int3
cmp
cmc
mov
mulb
je
jp
push
leave
jmp
pop
add
and
out
push
adc
jl
mov
mov
push
int
mov
xor
xchg
out
pop
mov
mov
fwait
cmp
jg
call
out
movsl
popf
lock
dec
test
jecxz
in
aad
push
lods
or
lock
or
ret
cltd
inc
mov
rcrb
dec
jge
rcrb
jne
mov
ds
cmp
xor
cmc
sub
inc
adc
dec
int
pushf
sub
stos
stos
add
jge
sbb
jmp
pop
fwait
jbe
cmpl
mov
lock
mov
cmp
fisttpll
mov
mov
outsl
gs
lods
das
cmp
andl
and
xlat
mov
mov
das
inc
or
cltd
xor
add
sub
repnz
test
and
int
out
daa
cmpsl
mov
addr16
ds
and
js
or
mov
pop
out
jle
imul
enter
jb
or
sub
popw
sti
sbb
insb
ret
or
into
test
in
fwait
nop
dec
aad
pop
mov
sbb
stos
js
mov
pop
jp
adc
jg
dec
pop
int
enter
jo
pop
mov
add
dec
mov
lods
std
cli
aad
nop
adc
xor
data16
jecxz
jecxz
fdivrl
inc
jnp
push
scas
sub
movsb
mov
test
jne,pt
imul
fcomps
pushf
jne
idivl
out
or
je
pop
or
shrl
mov
mov
cmp
stos
sar
sbb
pop
sahf
lret
mov
sub
out
test
data16
cs
cmpsl
lock
sbb
push
fisttps
mov
xchg
push
lods
adc
jae
adc
dec
sbb
or
sub
dec
fdivrs
add
and
jno
pushl
lcall
shlb
icebp
xchg
andb
loope
mov
pop
mov
loope
lret
imul
pop
test
enter
lods
sbb
ljmp
sub
and
in
pushf
push
xchg
mov
insb
sub
push
sbb
fdiv
cltd
xor
mov
ja
dec
jbe
addb
sbb
xchg
in
jno
rcrl
into
ja
popa
test
jecxz
xorb
xlat
and
mov
fldcw
pop
or
sbb
aaa
out
jmp
add
push
je
or
mov
cmpsl
popf
mov
pop
addr16
push
or
popf
sub
in
xor
enter
ret
inc
sbbl
mull
shl
or
xor
mov
jb
xor
add
adc
arpl
jp
std
lahf
test
and
gs
adc
cld
dec
lds
add
jae
lret
ss
movsl
cs
sbb
jmp
ljmp
outsb
or
xor
xlat
ds
ret
lret
out
mov
push
adc
sbb
outsb
mov
stos
adc
push
imul
mov
and
leave
xor
jnp
lds
iret
outsl
xchg
lcall
outsb
pushf
mov
mov
inc
stos
shr
in
in
jne
pop
adc
lea
mov
popa
lret
pop
mov
rol
repnz
cmc
lods
inc
and
imul
xchg
aad
lret
xchg
dec
mov
inc
dec
adc
mov
push
inc
inc
xchg
ficoms
jp
mov
adc
xorl
aam
inc
addr16
jae,pn
cs
popl
gs
pop
adc
or
push
rcrl
push
out
pop
iret
das
adc
pop
test
daa
ror
xor
scas
lds
mov
mov
or
pop
pop
fcmovnbe
mov
push
xchg
jb
pop
mov
scas
mov
mov
and
inc
fistps
rclb
repnz
jno
out
pop
adc
imull
add
movsb
insb
push
ds
ret
or
notb
negb
leave
push
add
outsl
cld
je
add
and
imul
neg
mov
mov
clc
fstp
push
sti
push
flds
xchg
mov
sub
pop
jb
cld
repz
int
push
push
sub
loopne
test
insb
dec
inc
popf
jl
dec
jo
xchg
sbb
inc
sbb
mov
mov
rorb
and
cmp
lock
cmp
jl
pusha
pop
mov
mov
loope
push
pushf
sbb
sub
test
push
outsl
jae
fwait
jecxz
ss
fsubl
pop
xlat
mov
repnz
ja
mov
xchg
or
scas
mov
sahf
std
scas
lds
icebp
loop
imul
addr16
imul
insb
sarl
jle
pop
out
cmp
jno
les
pop
gs
pushf
daa
lahf
adc
pop
cmp
iret
or
mov
sub
mov
iret
cltd
stos
inc
cmp
pusha
lods
in
test
cld
stc
and
mov
dec
dec
test
lods
enter
add
jno
sub
jmp
dec
push
sub
in
hlt
mov
in
push
stc
inc
inc
mov
not
xlat
sbb
mov
jge
daa
lahf
fwait
inc
inc
jle
lret
cmpsb
aam
jne
jmp
and
iret
insl
ss
imul
adc
gs
test
inc
mov
repnz
adc
stos
jp
jo
push
movsb
mov
and
dec
aaa
sub
testl
mov
mov
cmp
sbb
jge
lahf
mov
scas
jne
inc
imul
repnz
and
jg
add
mov
js
mov
push
jecxz
xchg
add
adc
pop
inc
rorl
or
fldcw
sahf
enter
pop
jns
add
out
pop
insb
rolb
or
add
jge
inc
rcrl
dec
push
mov
push
das
arpl
faddl
pop
lods
or
loopne
push
sub
subl
dec
imul
ljmp
pop
loop
dec
mov
jmp
shll
pop
scas
xor
cmpsl
fstp
rcll
pop
lret
fistpl
mov
mov
push
aad
pusha
cs
ret
cli
pop
int
xor
aas
popa
jl
sbbb
sub
fs
out
fsts
xchg
mov
xor
movsb
sahf
outsb
cwtl
outsl
or
icebp
cmp
pop
into
push
adc
adc
ficomps
loope
cltd
and
add
js
loope
imul
iret
jb
mov
and
and
cwtl
stos
cld
or
mov
subb
test
mov
adc
xor
rcrb
fimull
dec
aad
outsb
mov
cmp
lea
scas
push
addb
and
out
push
clc
jmp
outsb
das
xchg
rol
fwait
in
shrb
adc
inc
sbb
and
pushf
dec
mov
test
fwait
pop
push
lock
jae
lods
sahf
adcb
leave
in
xchg
movsb
inc
and
jb
aaa
cwtl
jmp
lret
and
jo
push
jp
mov
xchg
inc
mov
xchg
push
inc
xchg
push
jmp
ret
dec
or
add
pop
lds
sbb
cmp
enter
stos
jno
sub
cli
aam
popf
cmp
adc
sbb
mov
fadd
lds
mov
pop
int
inc
rcl
stos
xor
shrb
mov
jge
test
lret
jnp
lods
mov
repz
rcrl
mul
lods
pushf
xchg
cmpsb
inc
fwait
sbb
push
lds
pop
ret
neg
repnz
int
xor
sub
jbe
addr16
fcompl
xor
sbb
cltd
xchg
jle
xchg
jg
es
stos
mov
int
fiadds
and
orl
sbb
push
sub
or
sub
gs
sub
sub
les
push
movsb
dec
inc
inc
and
imul
test
mov
pop
sub
xor
lock
test
push
cmp
hlt
in
jle
sbb
fstps
jne
movsb
std
add
jge
loop
sub
repnz
adc
ret
std
jns
sets
jns
mov
mov
mov
or
hlt
in
cmc
xor
xor
jae
icebp
repz
pop
popf
pop
add
sub
popa
fdivrs
les
out
repz
push
mov
insb
test
dec
cmp
std
mov
or
mov
add
jg
ret
cltd
adc
pop
cwtl
loop
in
push
ret
lds
fnstsw
push
pop
add
mov
xchg
mov
outsb
jmp
in
mov
mov
lcall
int3
outsb
mov
out
inc
mov
or
push
fsubrl
adcl
sbb
adc
mov
mov
cmc
jle
stos
adcl
insb
cmp
dec
mov
test
and
sub
xor
and
mov
sub
xorl
loop
mov
and
aam
ret
cmp
pop
pop
in
shrb
loopne
jle
cltd
dec
or
or
push
mov
jp
pushf
lods
xchg
cs
pop
or
jns
lret
mov
js
inc
mov
inc
mov
push
test
lret
xlat
fucomi
mov
and
outsl
inc
xchg
jns
in
icebp
cli
aad
das
stos
mov
nop
mov
xchg
sub
jp
jmp
inc
aam
dec
ret
scas
xchg
cmp
loop
icebp
aaa
sub
cmp
xchg
adc
jae
in
insl
and
mov
jge
fnsave
sahf
popa
lcall
jo
lcall
sub
xchg
lods
fistpl
or
mov
bound
sub
test
out
arpl
fildll
or
ljmp
adc
fcomi
sahf
addl
inc
flds
rorl
cltd
in
out
sub
imul
out
loopne
push
inc
and
ret
insb
and
inc
daa
insb
int3
std
sbb
lods
sbb
mov
stc
je
pop
mov
fildll
pop
push
imul
shrl
in
aam
out
inc
dec
incb
movsl
pop
fsubs
cmc
inc
sar
sub
add
inc
pop
rdmsr
mov
aas
sub
mov
dec
mov
repnz
mov
sahf
movsl
push
xorb
rcrl
pop
inc
pop
sbb
push
adc
xor
fwait
push
adc
lret
js
insl
cmc
mov
test
push
push
cld
es
fdivr
adc
roll
jne
and
mov
push
push
dec
jo
push
and
mov
xchg
sbb
rorl
lds
inc
aam
jg
jnp
sub
cmp
xor
aam
shr
sbb
es
scas
sub
and
xchg
out
stos
fbstp
mov
and
out
xlat
ss
ja
ficompl
ret
insb
or
mov
adcb
pop
fcoms
xor
les
sbb
into
mov
inc
push
sub
mull
shlb
popf
je
and
subl
xchg
jecxz
inc
ds
divb
add
sub
ljmp
inc
mov
data16
push
aam
lods
cmp
daa
jl
arpl
jmp
dec
xor
int3
xchg
mov
les
jle
mov
movsl
dec
inc
jmp
push
xor
es
xchg
dec
mov
fisttpl
in
lcall
movsl
push
mov
sbb
dec
xchg
in
mov
dec
bound
out
mov
aad
mov
push
pop
pop
inc
xchg
cmp
jecxz
push
sbb
orl
or
xlat
or
push
mov
xchg
mov
mov
test
je
movl
push
pop
push
sub
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
and
xor
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
orl
movl
movzbl
sub
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
mov
xor
jmp
mov
hlt
mov
ja
out
je
xor
sbb
jnp
clc
pushf
jnp
fadds
pushf
stc
or
sbb
int
out
js
testb
adc
fbld
sbb
int
add
sub
divl
or
insl
testb
and
sar
add
or
insl
inc
ficompl
push
test
ja
leave
lret
sbb
lds
das
aaa
pushf
neg
mov
push
pop
push
add
scas
push
jg
xor
adc
gs
lods
shlb
sbb
pushf
cmpsb
pop
js
shl
sub
out
in
inc
in
fmuls
or
lahf
mov
fsubr
or
int3
insl
loop
lods
cmp
cmc
or
lock
jg
repnz
je
sbb
in
je
inc
aas
rcrl
imul
popa
imul
push
mov
and
shll
or
jne
mov
imul
dec
inc
lahf
jecxz
adc
jl
or
mov
fistpll
jp
or
dec
loop
mov
sub
push
mov
rcrl
out
mov
outsb
push
xchg
arpl
fbstp
jns
push
cltd
pop
loopne
xchg
in
std
xorb
ljmp
jno
pop
adcb
icebp
mov
mov
fstpl
mov
mov
ljmp
cli
imul
jno
sub
pop
mov
push
xchg
ss
pop
jg
sar
add
jle
movsb
sbb
dec
scas
fistl
cs
xchg
pop
mov
ret
and
dec
das
adc
ds
xchg
jp
sbb
out
jae
push
sub
push
adc
xchg
jne
xchg
lcall
sti
jo
sahf
adc
push
leave
ret
lock
xor
repnz
jl
dec
add
mov
sahf
popf
pop
fmuls
je
out
mov
mov
mov
aaa
jg
pop
mov
loope
loope
adc
ret
or
popf
jnp
daa
sarl
cmc
ja
inc
inc
sub
fistpll
add
test
and
jno
mov
inc
mov
adc
add
jbe
cmc
mov
xchg
mov
or
sahf
mov
xchg
mov
sahf
inc
adc
sbb
jb
pop
es
xor
pop
dec
pop
outsb
idivl
dec
cmc
dec
inc
inc
mov
mov
popf
sarb
fdivs
mov
mov
lahf
mov
mov
fimull
dec
hlt
clc
test
movsl
mov
fstpt
imul
enter
out
pop
mov
lock
add
sub
inc
cli
sbb
dec
pop
adc
test
int3
fstps
cmp
out
fs
xchg
popa
arpl
aam
pop
cmp
dec
scas
and
sti
mov
cs
or
dec
jl
fisubl
imul
add
stos
ret
sbb
adc
shlb
adc
mov
mov
mov
cmp
pop
lods
in
in
popf
add
dec
mov
xchg
out
cmc
loope
fidivs
hlt
cli
subl
add
sbb
or
or
ficomps
shrl
jl
dec
add
and
imul
add
lods
inc
lret
jnp
test
xor
inc
nop
mov
push
and
idiv
xor
xor
inc
fiadds
pop
pushf
popa
mov
inc
es
mov
insl
xor
lret
sbb
je
pushf
in
repnz
push
dec
or
sarl
mov
jno
push
loopne
sbb
push
fmull
loop
adc
jmp
and
sub
push
cmpsb
jae
adc
sub
aad
sub
data16
sbb
rorl
cs
adc
xchg
cmp
stos
xor
into
or
sub
or
push
xchg
sbb
cli
jle
ss
shrb
push
jo
mov
je
mov
xor
sbb
stos
pop
out
int
jbe
stc
ljmp
dec
sub
test
test
or
mov
fisubl
sub
mov
sti
repnz
mov
jb
outsb
data16
outsb
xchg
add
leave
cli
in
xchg
xor
fstpl
mov
mov
repz
jle
fisttpl
and
dec
call
in
xor
xor
lret
iret
cmp
pop
add
mov
nop
ds
xchg
or
dec
cmpsb
es
inc
mov
mov
decl
or
scas
scas
xchg
xor
nop
jae
dec
mov
sub
out
ret
int
add
and
pop
push
fcomi
jmp
add
mov
mov
or
pushl
xor
lcall
xlat
lret
mov
sub
shlb
or
xchg
jno
push
test
mov
in
cltd
pop
addr16
lods
enter
sub
int3
test
out
nop
filds
loop
push
popf
bnd
movsb
add
and
mov
mov
pop
push
lds
popf
popa
pop
je
xor
add
adc
lods
mov
inc
dec
out
mov
aas
mov
push
jge
loope
xchg
push
adc
inc
jns
shr
and
dec
add
cmpsl
jl
into
shll
xchg
pop
add
fbstp
cli
jle
cmp
xchg
test
mov
adc
addl
lret
sub
sarl
loope
xchg
push
cmp
add
mov
filds
mov
jecxz
jb
dec
sahf
ret
movsb
ja,pt
and
mov
hlt
adc
inc
lds
aas
pop
ret
inc
jae
push
ljmp
ret
push
xchg
cli
sbb
dec
adc
aam
popf
imul
test
cld
subb
cmpsl
gs
fisttpl
lods
stc
daa
test
mov
lods
negl
lods
jle
repz
insb
mov
stos
push
call
shrb
push
add
aaa
mov
hlt
xorl
sarb
dec
dec
sub
or
aaa
lods
popa
cmp
xchg
xchg
jns
pusha
pop
leave
mov
imul
lock
mov
movsb
mov
jp
cmpsb
lock
sbb
aas
ds
jmp
ja
bound
mov
into
inc
aad
daa
inc
add
testb
mov
mov
repnz
loopne
pushf
xor
xchg
fcomi
jmp
push
mov
scas
fistps
lods
scas
xchg
lahf
int3
setne
fldenv
arpl
fcmovnu
fsubs
shll
fbstp
dec
call
pop
xchg
jns
dec
dec
xor
outsb
jnp
dec
cmpsb
sub
pushf
pusha
stos
inc
std
push
push
aad
cmpsb
xchg
js
aas
add
mov
inc
icebp
lahf
addb
push
arpl
push
push
xlat
push
int
mov
mov
rcrb
aam
loope
mov
arpl
sub
or
cmpsl
arpl
aas
lods
stc
mov
aam
inc
xor
inc
push
mov
loop
jmp
int3
insb
jp
in
notb
popa
xor
mov
test
andl
mov
ss
inc
stos
lods
outsb
jecxz
mov
jp
sub
pop
pop
das
jp
rcl
jg
lcall
rorl
lods
test
inc
push
rorl
stc
cmc
rclb
data16
mov
jb
pop
xchg
sbb
aam
inc
push
rclb
js
cmp
mov
or
add
dec
sub
xor
xor
fwait
ret
mov
pop
div
loope
and
lds
dec
xchg
mov
ljmp
addr16
push
iret
shrl
push
xchg
sbb
push
rclb
add
lock
daa
xchg
repnz
mov
test
repz
xor
adc
cmpsb
and
dec
fistpll
or
xchg
stc
dec
movsl
int
jae
adc
pop
fisubrl
mov
inc
in
stos
loope
aam
mov
icebp
jp
fbstp
test
add
fucomip
orl
push
xchg
lods
lret
dec
shl
push
es
xor
das
aaa
mov
aas
repz
ret
or
inc
sbb
add
mov
lock
cltd
jl
popa
mov
lds
jb
and
aam
sbb
pop
pop
imul
aas
push
jo
shr
xchg
mov
add
cmp
cld
int3
jbe
mov
mov
mov
inc
into
mov
dec
or
adc
mov
dec
repnz
fs
mov
cmp
add
orb
fstpl
leave
adc
sahf
mov
pop
xchg
adcb
cmp
xor
push
or
pop
xor
sbbb
mov
inc
push
lods
xchg
loop
jmp
and
mov
inc
pop
cmc
xor
push
jne
cmp
dec
fistl
push
inc
xor
xchg
addr16
mov
stos
mov
xor
or
ret
out
insb
mov
in
inc
push
scas
jge,pt
jb
pop
dec
daa
insb
adc
hlt
shrl
jae
in
fisubs
jecxz
je
mov
sub
and
sub
pop
jns
or
stc
in
xor
mov
adc
jb
movsb
cmp
out
inc
inc
mov
push
mov
data16
sub
mov
lret
pop
mov
xor
pop
enter
mov
cltd
jno
adc
cmp
into
enter
or
pop
into
jne
fucom
jmp
mov
push
sahf
fcomp
imul
pushf
test
js
xchg
bound
lret
aaa
sub
push
loopne
fistps
adc
movsb
cmp
mov
cs
cmp
lahf
enter
scas
arpl
cld
les
das
xrelease
add
fwait
lahf
pop
sub
dec
push
in
ret
daa
ds
lea
add
pop
jmp
shrb
movsl
sbb
fldcw
inc
imul
addl
cwtl
ds
stos
and
stos
and
mov
stos
fs
fsubs
push
push
fwait
mov
dec
mov
in
sub
cmp
das
fucomi
cmpsl
repnz
and
dec
push
cmp
out
loopne
scas
add
pusha
movsl
mov
mov
repz
je
cli
add
cmp
xchg
jle,pn
inc
ret
adc
aad
lds
out
mov
jo
add
xor
popf
ffree
pop
inc
sbb
test
add
repz
mov
fbstp
enter
hlt
ret
inc
or
xor
sub
cli
dec
and
cmc
int3
ljmp
in
pusha
sahf
movsb
divl
sub
popa
sbb
mov
mov
pop
outsb
push
aaa
xor
inc
cmp
pop
mov
or
dec
pop
push
out
int3
cmp
ds
stos
push
es
addb
aad
mov
pop
ja
cmp
outsl
in
inc
jbe
shlb
dec
cld
and
cmc
or
mov
xchg
and
call
inc
inc
daa
or
out
push
or
loop
add
lock
insl
and
in
int3
aaa
lahf
and
mov
cmp
cmpsl
lret
pushf
cmp
repz
scas
ret
mov
cmp
mov
scas
je
push
cmp
jbe
int3
outsb
mov
fwait
xorl
sub
dec
out
pop
adc
or
mov
push
jge
je
jecxz
ret
cs
mov
add
scas
out
cmc
popf
insb
cmpsb
adc
test
mov
out
lcall
sbb
or
lahf
sbb
jo
mov
or
sbb
or
ds
loopne
jg
sub
test
xchg
and
or
push
mov
jl
cmp
mov
sti
sbb
add
push
jnp
pusha
sub
and
jo
pop
xchg
shr
xor
inc
dec
jae
fistl
or
mulb
and
cmp
lret
int3
inc
inc
jb
xor
pop
arpl
movsl
push
pop
cmp
dec
ficoml
adc
jmp
mov
jecxz
stc
cmp
sub
or
jl
shll
roll
cmpsb
xor
inc
test
jge,pn
push
lods
inc
loopne
mov
mov
push
mov
ret
or
rcrb
xor
xor
xchg
jecxz
push
ret
push
push
aad
fmull
cmp
pop
or
mov
cltd
mov
mov
pusha
jp
decb
inc
mov
pop
pop
pop
mov
jae
push
push
pop
cld
adc
aas
sbb
mov
divl
sti
push
pop
mov
scas
aad
mov
arpl
adc
add
js
call
arpl
fstpl
stc
dec
add
lock
xchg
mov
adc
mov
and
jge
in
push
add
or
and
iret
push
xchg
lret
mov
int3
ret
and
and
pop
cmp
je
inc
idivl
sub
mov
repnz
sub
lds
js
inc
add
xchg
cmpl
sbb
adc
js
stos
add
jae
int
cmp
jae
mov
and
adc
xchg
inc
outsl
cmpsl
xchg
cs
mov
push
test
gs
push
aas
mov
xor
test
cmpsb
rclb
or
mov
cmpsb
add
cs
push
inc
mov
mov
and
cld
stc
push
out
mov
xor
lea
in
js
inc
dec
push
popf
xchg
nop
xor
add
aam
sub
jo
mov
inc
aas
cmp
imul
std
ljmp
jl
lods
nop
mov
adc
fprem
pop
sbb
ljmp
mulb
ficoms
xchg
pop
movsl
add
jnp
notl
in
adc
and
popf
cld
inc
xor
xchg
or
xchg
jecxz
cltd
inc
pop
ss
push
cld
mov
or
int
dec
lcall
outsl
dec
stc
push
sbb
jecxz
ret
dec
adcb
pop
mov
pop
mov
bound
loopne
adc
popa
test
ljmp
jmp
cltd
jne
mov
xchg
ret
mov
fisttpl
gs
mov
popa
rcr
cmp
lcall
and
movsb
out
sub
subl
mov
or
sbb
xor
in
cmp
mov
push
jbe
stc
cmp
push
adc
push
orb
cmp
adc
addb
sub
cmp
and
cmp
pop
push
push
imul
mov
jae
push
das
cmp
pop
mov
cmp
fwait
stc
or
addr16
jo
push
and
aad
out
scas
das
or
inc
aad
loop
lahf
outsb
sbb
cmpb
and
cld
pop
dec
xchg
sbb
out
fiadds
clc
sbb
push
sub
insb
mov
jg
out
or
xchg
xor
fcomip
mov
xchg
xchg
and
add
push
repz
cs
lock
mov
pop
push
sub
mov
rcl
push
and
movsb
scas
xchg
sbb
sahf
inc
mov
dec
mov
in
or
push
inc
testl
test
mov
xchg
out
xchg
or
leave
mov
into
insb
dec
push
das
push
fs
fadds
pop
and
mov
or
dec
xor
inc
js
push
clc
pop
imul
aad
jmp
or
pop
mov
out
inc
mov
cmpsl
outsl
fwait
popf
xlat
push
sub
xor
fs
int3
xchg
pop
cltd
cmc
sbb
pushf
mov
icebp
out
adc
stos
xor
test
jp
sbb
ret
dec
push
gs
mov
fwait
adc
adc
ret
aad
sub
aaa
les
fiaddl
mov
in
or
data16
inc
mov
movsb
imul
dec
push
cltd
push
dec
in
add
imul
int3
imul
outsb
mov
fcompl
pop
in
sub
hlt
cmpl
or
jns
fcmovu
loop
or
push
lods
push
ret
sbb
cltd
mov
int3
popf
test
imul
mov
movsl
jne
sub
lock
dec
pushl
xchg
sub
popf
ror
dec
ret
pop
std
jb
sub
out
jno
jno
mov
arpl
pop
mov
or
insb
mov
inc
push
jns
jmp
insb
xorl
mov
jnp
hlt
xchg
shlb
orl
mov
jle
push
bound
icebp
xor
lock
dec
ficompl
mov
mov
test
jg
adc
arpl
jp
jmp
cmc
inc
dec
push
adc
cmp
sub
mov
inc
mov
dec
sti
pop
lcall
ret
jp
call
fwait
add
mov
add
fbld
push
mov
lcall
unpcklps
mov
stc
subb
mov
pop
repnz
addl
add
je
ficoml
cmp
popf
insb
xor
inc
pop
loop
jp
push
cmp
aas
push
out
xchg
jb
adc
adc
adc
jns
hlt
out
pop
cmp
sub
xchg
or
or
xchg
push
sahf
sbb
subl
xlat
inc
sbb
in
ret
cmp
ja
cmp
ds
fstpl
push
ret
ljmp
out
lret
xchg
int
fwait
mov
insl
lret
add
xchg
das
mov
jnp
push
les
adc
pop
xlat
mov
rolb
sub
inc
iret
fisubl
or
cmp
dec
mov
push
repz
mov
jl
mov
pushl
movsb
inc
rol
jp
movsb
neg
mov
mov
stos
lock
sbb
rcrl
inc
pop
mov
addb
or
icebp
aad
addr16
xchg
lahf
dec
pop
stc
jb
rcl
push
pushf
fcomps
or
cltd
and
shlb
jb
rcll
dec
jne
ja
dec
pusha
adc
mov
cmc
adc
cld
or
inc
out
and
mov
push
test
lods
mov
outsb
std
xor
orl
push
pusha
out
mov
fbstp
hlt
add
out
das
mov
jne
inc
out
stos
mov
movsb
xor
jo
push
mul
rol
sbb
adc
sarl
xor
add
adc
sbb
add
xchg
mov
xchg
jl
mov
mov
test
push
xchg
nop
addr16
xchg
add
or
sbb
lcall
and
inc
iret
ret
add
cmp
sub
loopne
pusha
lea
sub
ss
mov
jg
loop
sub
aam
dec
movb
or
mov
test
cli
imulb
pop
or
out
xor
repnz
inc
sti
or
mov
cmp
ja
das
and
mov
add
sbb
mov
dec
cmc
pop
sbb
cmpsb
aaa
test
dec
mov
test
mov
testb
in
sbb
xchg
ret
jbe
cmp
aaa
pushf
mov
cmp
fsts
sbb
arpl
dec
xchg
out
hlt
stos
jmp
mov
imul
xor
loop
sbb
cwtl
arpl
add
addb
aas
push
sbb
push
std
cmp
dec
jnp
push
fistpl
loop
fwait
inc
dec
push
pusha
es
xorl
inc
xor
fisubs
mov
cmp
mov
pop
scas
sub
mov
mov
mov
movsl
adc
lods
pop
push
outsl
inc
sbb
and
test
jns
adc
lds
outsl
pushf
jmp
outsb
ss
jmp
leave
decb
push
aaa
mov
mov
arpl
jle
push
mov
push
sub
pusha
fnstcw
js
scas
push
adc
flds
daa
leave
jo
dec
and
mov
in
mov
inc
mov
pop
pop
sbb
lahf
jae
out
pop
push
push
cmp
fistpll
sbb
out
js
or
lahf
hlt
xor
adc
adc
aaa
adc
xchg
stos
scas
xor
insl
pushf
test
cmp
sub
dec
es
adc
test
out
js
or
cmpl
sbb
les
pushf
mov
outsb
leave
sub
std
jo
divb
mov
add
fwait
mov
movsb
cmp
push
test
dec
mov
das
cmc
cwtl
add
int3
in
pop
ror
std
mov
cmpl
lahf
jae
mov
push
mov
fistps
out
xlat
cmp
cs
in
lods
std
inc
sbb
add
loop
push
dec
adc
fisubrl
daa
inc
repnz
out
cs
sbb
xchg
dec
in
dec
and
inc
pushf
mov
cmpsb
sti
pop
inc
dec
stos
sbb
pop
lea
pop
jnp
push
mov
adc
jae
loopne
rolb
jge
rcrb
add
repnz
test
adc
call
adc
fwait
sbb
scas
mov
popl
out
call
orb
mov
ja
cltd
movsb
fcoms
out
cld
orl
jb
addr16
incb
loop
sarl
adc
lcall
cmp
and
jbe
ss
mov
testb
and
sbb
fdivrl
jb
jae
test
lds
jno
imul
loope
movsl
dec
mov
mov
popa
out
jge
lret
ds
sti
stc
aam
popf
movsb
stc
inc
mov
pop
cmp
icebp
dec
arpl
xlat
cwtl
ljmp
in
pusha
bnd
shrb
outsl
adc
es
cmpsl
fdivr
sbb
dec
or
out
pop
sub
cmp
shlb
cwtl
lea
xchg
mov
nop
sti
fcmovb
imul
ljmp
jae
mov
pop
insl
mov
cmpsl
mov
iret
mov
xor
scas
cmp
clc
clc
mov
in
inc
mov
dec
jmp
ss
pop
loop
and
repnz
shl
arpl
sbbb
icebp
pop
jbe
cmp
xchg
adc
daa
lret
push
ja
cmc
ljmp
xchg
xchg
bnd
lods
inc
jnp
fisttpll
ret
int
sbb
cli
pop
mov
mov
movsb
or
xchg
adc
dec
mov
popa
adc
ja
and
inc
int
test
adc
sub
into
jp
sbb
dec
or
ljmp
pop
or
xor
cmpsl
xchg
leave
sbb
outsb
pop
push
hlt
cli
loopne
jb
mov
outsl
xchg
jmp
lahf
dec
pop
aad
dec
cld
cltd
mov
enter
push
ja
pushf
fdivrl
xlat
cld
jmp
insl
ljmp
inc
lcall
imul
mov
lods
cwtl
jns
repz
push
clc
add
mov
mov
sbb
mov
xchg
daa
inc
mov
lods
sbb
adc
push
jl
movsl
cli
fsub
pop
subl
mov
sbb
stos
sbb
dec
movl
lock
pop
xchg
push
fmull
inc
xchg
jno
les
xchg
hlt
xor
mov
sahf
out
loop
mov
cltd
or
lock
in
pop
jne
sbb
jl
cs
insb
repnz
fists
xlat
fldcw
pop
out
ficompl
push
jne
fiadds
andl
je
popl
xlat
popf
test
cli
mov
or
fsubp
cmp
mov
mov
cmpsb
mov
cltd
add
aas
movsl
and
lock
xor
or
xlat
pop
rcl
mov
dec
cltd
sbb
or
lret
jnp
mov
sub
inc
inc
add
xlat
xor
and
sbbb
fbld
xchg
icebp
daa
mov
cmp
je
mov
clc
jno
add
popa
xchg
dec
adc
inc
ds
mov
mov
mov
sti
xchg
dec
iret
stos
inc
jmp
push
and
mov
popf
cmc
inc
ds
inc
jae
xor
and
cld
out
xor
adc
mov
mov
adc
adc
clc
add
mov
mov
bound
rcll
sbb
mov
std
ja
lock
das
pop
dec
or
add
arpl
sbbb
sbb
xor
mov
rcll
out
aam
ret
fdivl
call
outsl
lret
add
mov
jp
mov
push
iret
ret
xor
push
adcb
jge
or
dec
adc
popl
inc
mov
nop
or
xor
pop
dec
in
xchg
out
aas
mov
ljmp
inc
clc
cmpb
insb
jno
inc
push
add
dec
push
in
jle
push
jb
cltd
jg
jns
dec
adc
into
or
dec
orb
movsb
sub
mov
int3
divb
jo
cmp
jnp
fst
xchg
dec
imul
sbb
imul
pop
repnz
sub
jbe
outsl
lock
in
lahf
sub
add
xor
xchg
scas
push
out
lods
mov
imul
mov
ds
jns
jb
xchg
adcb
pop
out
sub
leave
movb
add
mov
shr
push
cmp
or
in
js
mov
adc
in
out
and
cmp
mov
xor
cmp
in
movsl
xchg
hlt
xor
scas
lods
clc
hlt
ljmp
add
aas
add
mov
jae
pop
add
mov
data16
and
neg
dec
inc
or
mov
xor
mov
push
orl
pop
fildl
aaa
add
aam
push
int3
xor
jbe
adc
and
add
mov
loope
cld
cli
cmc
outsl
imul
push
sub
jmp
decb
jl
add
push
inc
jo
aas
je
in
sbb
or
inc
dec
loope
ss
pop
hlt
dec
lcall
out
fcom
stos
mov
mov
xchg
inc
loope
mov
hlt
test
cmpsb
push
xor
dec
ret
or
jbe
dec
clc
adc
test
dec
std
ret
dec
decl
inc
mov
js
mov
or
shlb
ljmp
mov
pushf
fnsave
push
adcl
cli
aad
ja
mov
movsb
imul
push
xor
jl
rorb
popf
jne
sbb
out
mov
xchg
cmp
adc
and
jge
inc
sub
scas
xchg
sbb
cs
mov
in
add
addl
imul
sahf
mov
outsl
scas
dec
loopne
sti
movsb
aaa
fmull
fimull
js
or
insl
movsl
inc
lcall
test
inc
int
push
push
mov
sbb
pop
push
push
lcall
sbb
aaa
and
ret
and
push
sub
gs
test
test
inc
and
push
stos
lret
out
andb
sub
adcl
testl
test
inc
sbb
push
iret
lret
in
or
fbstp
cld
mov
ja
and
push
cmc
rorb
loopne
jle
sub
stos
adc
fwait
int
mov
push
dec
arpl
mov
out
jl
or
aam
mov
add
adc
xchg
cmp
pop
push
sarb
lcall
fnstenv
add
mov
std
ljmp
dec
mov
ja
in
mov
inc
push
scas
sub
sub
inc
sahf
xchg
mov
and
jae
clc
movsl
ljmp
addr16
sbb
test
jo
add
mov
jbe
mov
repz
pop
jle
xor
dec
push
in
mov
jae
pop
pop
sti
xor
xor
andb
cld
int
cs
loop
mov
aas
test
jbe
inc
adc
in
mov
xchg
mov
test
xor
or
jl
cmc
cs
xor
stos
lahf
push
cmpsb
int
cmp
add
xor
mov
std
and
lea
xor
mov
sbb
add
mov
mov
xchg
pusha
jmp
sarb
cmp
add
cmp
mov
ja
adc
adc
cltd
clc
push
mov
pop
jecxz
rorb
xchg
aas
or
lcall
movl
nop
add
xor
faddl
push
add
incb
xchg
xchg
xor
fdivrp
mov
test
sbb
fisubs
mov
push
mov
jns
dec
fldcw
mov
add
sbb
cltd
jnp
inc
call
out
xor
dec
inc
sbb
mov
filds
mov
mov
xor
mov
or
mov
adc
pop
popf
scas
dec
xchg
pusha
int3
xchg
mov
mov
jae
out
dec
and
adc
jb
cmp
cld
add
add
int3
mov
mov
iret
inc
adc
push
rolb
lahf
fdivs
sub
insb
cld
je
mov
jp
pop
mov
les
push
jne
adc
mov
or
push
or
pop
xor
loop
mov
or
cmp
cmpsb
mov
repnz
es
and
jge
inc
xchg
or
loope
stos
fcoml
int3
xchg
rcrb
les
sbb
imul
fistpl
push
mov
sub
lahf
popa
push
out
gs
popa
inc
mov
fldenv
xor
mov
mov
mov
xor
sarb
jmp
and
lea
out
mov
dec
mov
mov
pop
dec
lret
popa
cs
xchg
insl
dec
aas
mov
jno
popa
xchg
dec
daa
lea
int
cltd
std
adc
iret
inc
ljmp
sti
ja
jae
iret
pusha
decb
jl
std
test
jge
push
xlat
rorl
shl
pop
mov
ret
and
pop
test
lcall
and
push
mov
outsl
lcall
rorl
lods
mov
xchg
mov
fnstenv
pop
pop
mov
dec
fdiv
cs
loope
jno
xor
push
sub
ds
in
jno
sub
jl
inc
call
jl
sub
cmp
aas
mov
adc
arpl
mov
mov
mov
loop
pop
mov
fsts
add
sub
sub
push
mov
into
leave
mov
dec
rcrl
adcl
push
jle
sub
push
repnz
push
cltd
cmp
imul
iret
cmp
ljmp
push
enter
icebp
mov
push
pop
sub
inc
pop
fscale
icebp
pop
jecxz
lcall
fs
pop
fstpl
jmp
and
das
push
data16
jle
xchg
adc
jb
sub
scas
xor
dec
insl
mov
pop
in
stos
movsl
add
mov
out
bound
mov
scas
stos
jno
lahf
fwait
jp
or
push
lock
mov
jne
rep
mov
jge
inc
mov
mov
push
pop
xor
orl
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
mov
mov
add
mov
mov
jmp
or
mov
xor
mov
fwait
dec
jnp
clc
pushf
jnp
jmp
inc
adcb
sub
xor
cmp
out
test
arpl
push
test
int
popf
rorb
icebp
aam
push
frstor
sti
add
xchg
xor
clc
outsl
test
sub
nop
in
rcr
add
inc
mov
ds
daa
das
inc
mov
leave
aam
jnp
mov
cmpsl
packssdw
popa
or
cmp
shl
add
jns
push
mov
sub
mov
sahf
jg
or
hlt
sub
jmp
pop
lods
test
pusha
cmp
or
bound
adc
into
dec
inc
mov
push
cmc
out
loopne
int
push
or
cmpsl
dec
into
imul
jp
push
adc
and
cmpsb
push
loop
dec
jge
pushf
jae
dec
add
cltd
or
jecxz
push
pop
cltd
dec
xor
mov
imul
std
stos
push
lods
mov
jmp
lods
fwait
mov
stos
xchg
cmp
mov
sub
push
jge
aaa
sub
data16
sbb
mov
rcll
adc
mov
pop
pop
js
insb
adc
rcl
cmp
jo
xor
int3
or
push
jbe
jmp
sub
cmp
push
dec
andb
and
mov
ljmp
loope
pop
in
repnz
aas
sub
or
in
frndint
xchg
push
xchg
xor
and
hlt
xorb
fisttpl
adc
fnstcw
or
sub
pushl
sub
hlt
insl
in
out
cmp
mov
jp
pop
imul
mov
adc
xor
pop
jge
mov
xchg
imul
insb
mov
movsl
and
sbb
stc
or
xchg
or
sbb
repnz
jnp
push
adc
mov
loop
mov
jg
call
into
paddd
stos
jg
addr16
jp
jg
das
bound
and
insl
test
or
lcall
lods
add
test
jb
mov
loop
mov
je
sub
fucomp
xor
sub
lods
out
mov
xlat
gs
test
lock
mov
xor
dec
add
sahf
mov
jl
mov
mov
inc
stos
scas
jae
iret
xlat
inc
je
sub
mov
xchg
stos
dec
lods
adc
movsb
inc
mov
xchg
test
add
out
xor
or
lcall
nop
inc
ljmp
stc
sbb
idivl
adc
mov
cltd
jge
mov
pop
test
orb
stc
dec
xorl
sbbb
mov
subl
inc
push
daa
jge
js
icebp
jae
fcomi
in
mov
repz
dec
cmp
dec
lea
adc
add
pop
jl
xor
std
pop
jo
dec
leave
test
cmpsl
and
imul
push
orb
leave
outsl
adc
cli
xor
mov
iret
loopne
lds
jmp
adcl
sub
pusha
sub
mov
sub
fcoml
lds
jecxz
jb
cmp
jmp
mov
mov
pop
fldl
and
daa
sbb
lret
xchg
jg
dec
rolb
lds
xor
mov
sbb
movsb
dec
jecxz
hlt
cld
insl
or
push
push
adc
into
xlat
scas
or
mov
test
loopne
add
movsb
es
fiaddl
cmpsb
ljmp
push
fists
ds
sahf
js
out
and
cmp
and
xchg
mov
pop
sub
leave
mov
pushf
lds
and
call
leave
xor
in
pop
xchg
lcall
add
roll
ret
into
adc
fildl
push
ljmp
sub
imul
mov
addr16
shll
xchg
lret
adc
cmpl
in
orl
push
sub
mov
shlb
std
gs
movsl
jno
mov
push
sti
dec
cs
loopne
mov
add
sbb
push
cmp
lcall
in
mov
push
adc
pop
mov
cmpsb
jmp
push
push
pop
add
das
data16
cld
out
push
mov
cltd
cmp
and
ljmp
add
frstor
pushf
call
jne
xchg
fsubl
daa
push
cmpsl
das
je
loopnew
sub
nop
movsb
iret
mov
push
adc
push
mov
inc
xchg
ljmp
lcall
inc
mov
adc
xlat
pop
cmp
mov
pop
fs
jl
stc
insb
into
mov
loope
sti
dec
mov
cmp
pop
or
aad
dec
lods
or
pop
dec
push
mov
lahf
rclb
add
into
adc
pop
mov
mov
mov
xor
mov
shlb
adc
pop
movsb
lcall
add
cmp
ss
daa
std
jg
inc
xacquire
and
or
or
dec
mov
xchg
mov
dec
mov
xchg
sbb
xchg
xor
push
lea
and
into
or
addb
dec
and
inc
arpl
pop
cmp
mov
fisttps
sub
add
mov
stos
and
das
pop
lods
movsl
xchg
sub
xlat
xchg
incl
test
jb
das
adc
gs
addl
pusha
jmp
femms
into
ss
inc
loope
mov
aas
mov
xor
dec
ljmp
daa
pop
popa
add
sub
pusha
inc
ja
lahf
insl
out
aas
or
or
into
pop
test
mov
jecxz
fwait
lds
in
or
add
dec
xlat
lods
sbb
xchg
xchg
sbb
movsb
xor
nop
inc
push
mov
das
dec
mov
or
inc
aam
lcall
xchg
outsl
lds
cmp
dec
clc
int3
mov
xchg
fidivrl
daa
dec
ds
mov
push
xor
cli
inc
mov
push
ret
push
and
cmc
imul
and
lahf
std
out
inc
imul
in
add
clc
sub
out
mov
popf
mov
push
outsl
lods
sbb
inc
jne
pushf
mov
daa
fiaddl
mov
in
testb
inc
stc
push
inc
cmp
mov
inc
data16
add
cmpsl
mov
inc
and
jno
sbb
mov
pop
push
and
aam
mov
add
stos
or
out
push
mov
mov
mov
jecxz
aas
js
sbb
and
fldenv
dec
cmp
in
and
xchg
add
adc
stos
xor
cmp
lahf
popf
mov
testl
outsb
enter
adc
cmp
mov
dec
push
std
nop
and
xor
mov
or
decl
mov
lock
cwtl
scas
xor
mov
sub
mov
stos
gs
jne
and
lahf
ljmp
or
cmp
shld
sarl
dec
decl
mov
xor
popf
test
mov
test
mov
jge
pop
pop
nop
jne
out
int3
aam
or
int3
mov
sarl
dec
push
int3
mov
ss
popf
cmp
and
pop
aam
dec
cmp
lods
cmp
cmpsl
add
sti
je
dec
mov
add
je
cmpsl
popa
dec
sbb
in
xchg
jo
lds
lods
imul
jnp
mov
pushf
jnp
and
and
sti
lods
mov
mov
call
daa
sahf
sbb
into
or
stos
jno
ret
insl
mov
jmp
mov
push
jne
leave
cmp
mov
mov
mov
bound
and
adc
add
jecxz
push
sub
fwait
jmp
xchg
imul
sbb
cmpsb
lea
cld
jecxz
divb
push
xchg
cmp
outsb
or
int
in
push
cld
and
jg
push
mov
test
jnp
out
add
scas
push
das
jo
inc
ret
aaa
mulb
xor
jmp
test
dec
pop
out
dec
clc
lsl
mov
sub
xchg
and
repnz
mov
lock
inc
mov
mov
cld
nop
les
sub
adc
mov
pop
popl
fistpll
fsubrs
jecxz
enter
lcall
inc
repnz
push
sub
lods
xchg
dec
rorb
add
inc
pop
jp
jmp
ss
and
inc
dec
push
adc
sub
inc
leave
call
test
outsl
popa
les
pop
and
push
jl
or
fsubl
rcrl
rcl
sbb
jmp
in
add
cmpsl
pop
jnp
mov
xor
inc
push
xor
xor
jmp
imul
add
cmp
fimull
movsl
mov
pop
mov
out
mov
pop
dec
pushf
push
mov
mov
mov
xlat
addr16
dec
push
aam
jmp
sub
aad
or
into
rorb
jecxz
mov
jg
subb
call
lock
scas
mov
dec
push
fdivrl
ja
xchg
jl
sbb
jmp
adc
mov
xchg
jecxz
enter
mov
adc
jg
cltd
cmp
jecxz
sbb
jb
jns
dec
rorb
and
pop
sahf
mov
push
pop
or
push
sahf
movsl
dec
ss
cmp
sub
lock
cmpsb
movsb
mov
scas
and
ror
sbb
int3
jecxz
rorb
and
loope
pop
aas
mov
div
aad
push
ret
mov
mov
jmp
mov
fwait
dec
pop
ret
dec
sub
push
ret
jbe
adc
mov
mov
ror
and
int
push
dec
lock
jg
stos
lods
out
push
push
mov
sbb
inc
mov
jmp
out
dec
jno
push
addr16
dec
std
ss
mov
push
clc
mov
sub
jmp
mov
sbb
adcb
cs
add
cmp
mov
mov
jb,pn
loope
inc
push
imul
push
cltd
sarb
push
inc
movsl
dec
fs
imul
pop
lods
inc
popa
inc
cltd
and
aas
cmp
mov
rcrb
adc
jb
jb
das
and
es
lcall
outsl
in
shll
add
inc
mov
sbb
cmp
popa
add
fs
xchg
aam
jae
sub
gs
cwtl
inc
pusha
mov
sti
outsb
xor
addr16
insl
out
pop
shlb
jns
cmp
testl
nop
inc
repnz
outsb
stos
sub
jl
fcoms
int
mov
dec
rolb
jle
fcoml
cmpl
push
lods
and
adc
negl
inc
sub
arpl
mov
add
xchg
xor
lods
pushf
inc
push
jecxz
pop
sub
xchg
or
mov
and
jnp
into
ljmp
jno
sub
mov
xchg
push
sar
aad
cmpsl
push
cmpsb
add
scas
call
fcompl
xor
add
popl
sbb
or
xor
inc
mov
cld
sbb
shlb
push
stos
mov
xlat
mov
jge
out
out
jbe
xchg
mov
fcomps
push
add
sbb
rclb
pusha
fwait
mov
inc
in
inc
pop
pop
stos
and
xchg
and
mov
cmpsl
mov
push
test
ss
andb
push
and
lea
pusha
xorb
dec
pop
leave
xchg
jge
in
lcall
fisubrl
and
js
lahf
jne
sub
test
push
jo
bound
pop
js
in
lret
das
mov
and
cmc
mov
xchg
fdivrs
jmp
cmpsb
mov
leave
cmp
leave
mov
xchg
out
les
popa
sbb
xchg
inc
out
shl
data16
and
pop
fldenv
mov
jle
cld
stos
rcrl
hlt
pop
stos
sub
into
xor
fmuls
bound
mov
inc
pop
scas
sbb
imul
lret
push
loop
mov
jmp
out
mov
adc
lahf
outsl
insb
xchg
dec
or
cwtl
sar
jl
jb
ds
in
mov
pop
mov
cmp
lahf
imul
popa
sub
in
inc
mov
movsl
mov
sub
repz
xchg
ja
jmp
mov
fs
ss
xchg
xor
subl
mov
es
mov
inc
add
fmull
mov
stos
adc
loop
out
pop
add
mov
outsb
xor
bound
repz
jne
cmp
sbb
lds
jae
mov
and
push
enter
push
adc
dec
dec
push
fbstp
push
test
cltd
cmpsb
aam
adc
dec
pop
push
lea
pop
mov
dec
add
dec
add
int
mov
dec
jl
cwtl
sub
mov
mov
test
imul
or
push
or
enter
mov
in
lret
fsubl
dec
in
in
int
xor
loope
fbld
repz
xchg
aad
or
dec
enter
dec
sbb
dec
js
fisubs
sub
sub
xchg
push
insb
push
dec
leave
lcall
ror
fucomi
sub
sbb
or
xchg
sub
cltd
mov
mov
addl
cmp
mov
xor
or
xchg
in
lret
sub
sbb
mov
inc
push
mov
sbb
pop
repz
mov
aaa
testl
jmp
pop
shl
jge
rol
dec
mov
insl
stos
push
sub
out
add
stos
mov
push
jnp
fbld
arpl
pop
mov
popa
push
popa
xchg
pop
popf
lcall
sar
std
mov
jg
in
sub
ret
out
popf
dec
outsl
sub
adc
xchg
cmc
arpl
bound
outsb
fnstsw
jg
inc
push
and
mov
pop
sub
stc
scas
hlt
sub
pusha
dec
mov
cmp
ss
xchg
stc
ss
jl
jle
cmc
gs
jge
jg
jmp
ret
out
stos
jae
xchg
cmp
ficoms
xor
outsb
ss
repnz
inc
push
adc
or
cltd
or
je
sub
lods
fimuls
rcpps
dec
ds
mov
inc
inc
jno
std
adc
out
jecxz
push
mov
jl
js
mov
fdivr
aas
les
xchg
push
mov
pop
jmp
call
mov
sbb
aam
in
int3
inc
cli
fs
push
lock
sbb
js
push
flds
outsl
ja
gs
faddl
scas
sub
push
adc
scas
test
mov
inc
mov
rcrl
lahf
sahf
push
insb
shll
loope
sbb
rcll
jg
xchg
lahf
xchg
jae
enter
enter
in
adc
lcall
adc
test
xchg
das
mov
fiadds
push
idivb
aas
push
pop
pusha
pop
mov
popf
push
push
cmp
lcall
ret
dec
leave
jecxz
sbb
sub
out
xchg
add
popf
and
pop
out
or
cmp
imul
dec
mov
pop
push
pop
add
cmp
mov
popa
lret
add
pop
pop
lahf
mov
mov
mov
sbb
xor
jle
rclb
pop
add
mov
fsubrs
mov
push
mov
cs
out
sub
mov
adc
insb
inc
or
call
push
gs
sub
pop
mov
stos
adc
test
add
fsubrl
orb
mov
mov
inc
or
cmp
icebp
loop
adc
test
pop
push
jnp
jl
sahf
subl
add
jne
xchg
mov
mov
jle
loope
les
sbb
jbe
gs
jbe
lds
bound
sbb
mov
cmpsb
jne
test
enter
pop
sbb
divb
inc
xor
xchg
or
lret
mov
dec
push
roll
orl
inc
int3
js
jg
shlb
ss
aam
cmp
inc
xchg
inc
scas
add
or
lock
gs
sub
jnp
adcl
ret
cmpsb
sub
pushf
push
imul
push
gs
out
ret
test
adcb
mov
les
in
and
fisubs
into
sbb
movsb
stos
mov
push
popa
xor
xor
test
out
sub
xorl
js
mov
jnp
negb
dec
cmp
into
pop
xchg
call
jb
cld
testb
xor
ljmp
test
push
rcrb
push
in
xor
daa
loop
inc
in
scas
mov
cmp
cmp
mov
imulb
inc
std
mov
xor
cwtl
mov
sbb
and
xor
or
mov
fs
xor
movsl
adc
adc
test
ljmp
mov
int3
adc
mov
fucomp
inc
jl
lods
mov
mov
bound
push
adc
dec
flds
cli
cmp
cmpsl
in
jo
jbe
push
ja
subl
aad
mov
jnp
sbbl
inc
sbb
je
ficompl
inc
add
add
in
pop
in
pop
shll
add
dec
les
pusha
dec
scas
adc
xlat
xchg
cld
inc
pop
adc
ja
imul
sbb
inc
arpl
xchg
dec
lret
dec
dec
jg
inc
cmp
sbb
stos
dec
and
sub
mov
scas
lock
and
sub
dec
ljmp
jae
xor
cwtl
out
adcb
fwait
push
dec
pop
cli
xor
stos
gs
sub
and
inc
and
inc
or
rcr
inc
jno
or
out
inc
fstpt
xchg
xchg
sub
jno
add
cltd
dec
inc
out
int3
dec
jge
push
fsubl
push
jns
sbb
add
jp
ss
sub
adc
adc
subb
popa
enter
dec
aas
xor
cmpsb
xchg
cs
dec
in
jo
mov
and
cmc
mov
cmc
pop
mov
aas
push
mov
adc
cmc
mov
push
movsl
or
cs
bound
cmp
lods
xor
inc
adc
pop
rcrb
aaa
mov
xchg
mov
addl
pop
loop
add
inc
das
shrl
enter
xorb
lods
push
mov
sahf
jmp
or
sub
lds
jo
mov
mov
pushf
inc
xor
leave
sub
or
xchg
and
outsb
notb
and
cmp
pusha
cld
scas
inc
mov
mov
insb
loop
xor
xchg
push
in
sub
ffree
fisubrl
adc
mov
mov
scas
push
mov
leave
add
xor
inc
fists
jmp
andl
xor
scas
repz
dec
test
and
sahf
int
dec
jb
int
outsl
cmp
pop
add
mov
repz
cmp
and
pop
push
int3
fidivs
lret
stos
mov
jno
adc
ret
andb
jmp
int
push
mov
mov
jno
xchg
notb
fistpll
rcll
push
popf
popf
or
adc
movsl
clc
push
test
push
rorb
push
or
or
lock
and
jo
test
dec
mov
repnz
int
fwait
lcall
stc
or
cmpsb
loop
mov
leave
push
test
dec
call
pop
dec
dec
test
lds
pop
fdivrs
mov
bound
xchg
jne
arpl
sbb
jo
stos
mov
inc
in
sub
pop
jp
push
push
clc
js
mov
xchg
ret
jae
mov
pop
cmpsb
test
icebp
out
and
mov
fiadds
inc
xor
outsl
insb
dec
mov
sbb
in
jae
jnp
aas
xchg
add
cmp
ret
push
in
out
shlb
cmpsl
aam
cmp
mov
jnp
jb
pop
xor
addr16
xchg
sub
call
lret
loopne
sub
or
ds
mov
les
xchg
sbb
cmp
out
cmpsl
lret
inc
mov
pop
xchg
fists
iret
and
pop
lcall
pushf
mov
mov
jo
cmp
lahf
xor
mov
cmp
ljmp
sar
daa
adc
sbb
xchg
fnstenv
data16
aas
pushf
incb
aaa
ss
call
popa
jbe
rcrb
pushf
pop
mov
cmc
lock
in
int
sub
jp
in
adc
and
xchg
dec
push
cmp
lret
mov
jle
jo
fstps
add
ljmp
xchg
divb
fucomi
lcall
ja
fistpll
in
mov
aam
jecxz
aaa
sub
and
xor
cmp
inc
jp
jl
aaa
mov
cmpsb
push
dec
xlat
mov
push
mov
jnp
mov
addb
xor
movsb
jmp
mov
push
fidivrs
or
loop
xor
xchg
sub
dec
jg
lock
mov
xor
cmp
lret
repz
and
rolb
fcoml
mov
testl
lret
mov
outsb
xor
cs
jnp
movswl
scas
and
out
cmp
jge
adc
mov
or
xchg
or
mov
or
sub
mov
push
cmpsb
fdivs
pusha
fcoml
cs
or
push
dec
pop
in
imul
add
push
orl
test
xchg
mov
lret
lcall
mov
cld
flds
jmp
mov
ret
xchg
push
lret
lock
in
cwtl
xchg
negb
iret
sub
or
les
lods
xchg
push
or
push
jbe
nop
add
ja
adc
lds
repnz
push
arpl
pop
cwtl
mov
fwait
mov
rcll
imul
lret
adcb
mov
cmpsl
or
pushf
int
or
popf
lret
add
sbb
xchg
xor
mov
cmp
int3
adc
jp
xor
cwtl
fldenv
je
std
rcrb
push
cvtps2pi
shll
js
cmpsl
fs
pop
add
dec
repz
xchg
stos
aas
cwtl
ret
adc
cmp
push
inc
pop
xor
std
jl
cltd
xchg
inc
mov
pop
in
push
addr16
cmc
loopne
xchg
popa
adc
data16
mov
dec
dec
aas
push
inc
or
loopne
mov
mov
fldl2t
and
mov
mov
das
jg
out
jae
mov
repnz
cli
mov
xor
lods
rcrl
je
inc
loope
mov
test
mov
kandw
ja
add
insb
sub
push
lret
push
sahf
test
loope
push
jno
jp
pcmpeqd
and
loope
or
and
adc
adc
lahf
sarb
add
push
xor
or
and
frstor
or
in
mov
test
jbe
or
lret
loopne
cmc
scas
sub
cli
mov
mov
mov
fbstp
and
mov
in
xor
mov
into
cli
xor
cs
sub
mov
in
fisttpl
add
cmp
mov
jno
lods
frndint
mov
dec
aam
lret
pop
stos
mov
jmp
mov
and
jp
lods
sbb
xchg
sub
sbb
pop
fldt
arpl
sarl
jns
dec
jne
pop
fs
pop
xor
mov
mov
scas
rcrl
and
and
icebp
mov
and
or
add
lahf
sti
int3
fidivs
cmp
cmp
cmp
jle
das
push
scas
pop
fisttps
hlt
stos
insb
sbb
push
mov
sbb
shr
or
cmpsb
xchg
rcll
mov
mov
shl
leave
mov
fsubl
mov
cmp
sbb
xor
in
xor
inc
or
pop
insl
jl
daa
mov
sub
icebp
cmp
mov
ljmp
pop
std
mov
popa
jb
fwait
pop
imul
add
sub
and
jg
mov
test
mov
lods
es
or
or
fiaddl
push
jns
adc
das
cwtl
fimuls
mov
lock
add
ds
gs
clc
jns
and
xchg
mov
test
aas
jmp
out
xor
push
mov
nop
push
data16
icebp
dec
sub
inc
jbe
insl
loop
pusha
pop
and
mov
loope
cwtl
sbb
lods
and
popa
dec
push
mov
idivb
adc
scas
jnp
test
mov
adcl
cwtl
scas
es
xadd
jmp
fadds
push
mov
fstpl
pushl
mov
sub
lahf
mov
pop
sarb
fucomi
mov
popa
jnp
pop
dec
and
sbb
mov
sbb
notb
stos
cmc
out
sbb
mov
sub
es
mov
dec
outsl
jo
pusha
push
cmpsb
sahf
jmp
pop
jp
jmp
pop
push
or
enter
mov
inc
je
xchg
pop
insb
mov
mov
cmp
sbb
fwait
rcrl
sahf
inc
call
loopne
push
pop
push
pop
outsb
jo
mov
rolb
and
dec
lcall
sahf
incl
xchg
dec
fs
push
push
sbb
popf
test
lea
add
push
sub
cmpsl
mov
inc
sub
rorb
js
dec
mov
addl
push
scas
inc
out
mov
add
xchg
add
test
aas
int3
cmc
jno
scas
ja
out
adc
pop
or
stc
push
jnp
mov
leave
popa
cmpb
jae
pop
cmp
insl
push
addr16
push
mov
negl
int3
shll
sub
xchg
adc
pop
pop
lods
pop
cli
sbb
xchg
inc
cmp
jb
or
and
arpl
es
and
in
and
sub
push
je
cmovge
out
fdivr
adc
in
push
ficoms
mov
pop
leave
stos
jne
fwait
adc
sbb
popf
popf
mov
ret
cs
cli
stc
push
pop
ja
jl
ss
movsb
out
pop
out
jge
icebp
ds
sub
ds
pusha
mov
fldenv
adcl
test
imul
scas
int3
dec
xchg
cli
and
or
pop
mov
int
add
aaa
mov
orb
cmpsb
xchg
adc
xchg
mov
pop
add
pop
pop
push
and
mov
adc
loope
jl
imul
mov
sbb
mov
xorl
stos
fwait
sbb
or
aas
iret
jg
es
lret
push
cmp
xor
mov
clc
es
dec
mov
add
mov
sub
in
popf
dec
jno
pop
pop
jae
mull
jbe
or
pop
xor
jne
out
lods
das
sbb
movsb
nop
push
cmp
ss
fnstsw
pop
insl
jl
cmpsl
cltd
mov
bnd
jne
xor
xchg
sub
addr16
les
mov
jmp
push
scas
shlb
jnp
mov
pop
xchg
mov
mov
or
and
mov
out
cmpsl
out
adc
push
imul
adc
ss
dec
xchg
lret
dec
inc
add
andl
mov
push
movsl
iret
popf
cmp
adc
adc
lods
aas
xor
dec
push
stc
cld
push
fwait
call
loop
push
fists
mov
fsubs
cmpsb
lret
in
sbb
xor
push
and
xor
std
jmp
add
add
mov
inc
mov
fsubrs
cltd
ljmp
dec
inc
and
mov
jne
jns
jnp
mov
test
mov
sub
data16
in
rcll
dec
lahf
dec
pushf
xchg
add
adc
movsl
pop
bound
lods
test
leave
jbe
sbb
js
jg
test
mov
xlat
rclb
imulb
jg
test
xchg
mov
adc
xor
pop
adc
je
adc
adc
out
mov
in
lock
pop
adc
out
out
test
addr16
dec
or
in
les
jbe
sub
sahf
out
enter
sahf
sbb
jp
xchg
insb
daa
and
popf
lret
aad
mov
mov
mov
adc
xor
data16
testb
mov
pop
hlt
mov
xorl
popf
sbb
cmp
hlt
int
cli
jge
xchg
stc
bound
cmp
push
pop
rcrb
sub
dec
and
sbb
loopne
push
xchg
into
push
xchg
push
xchg
jg
mov
shlb
sub
lock
pusha
movsb
adc
out
sbb
mov
rcrl
movsb
xorl
es
or
push
jge
arpl
syscall
xchg
outsl
jp
pop
mov
fstpt
pop
dec
in
pusha
xor
xchg
clc
mov
jecxz
inc
scas
sbb
mov
enter
cli
sbb
popf
lret
xchg
jecxz
kortestw
adc
adc
data16
inc
roll
mov
mov
leave
inc
pop
add
adc
adc
lods
mov
insl
shlb
ret
pop
les
es
lods
mov
or
das
pop
cmpb
outsb
or
xchg
imul
ret
and
push
mov
jns
aad
inc
add
andl
mov
outsb
adc
fidivl
pop
xor
xchg
stos
aas
and
push
sub
test
aaa
rcrl
data16
mov
sbb
mov
sbb
popf
sbb
shll
mov
push
xor
dec
xchg
mov
lcall
mov
add
xchg
repnz
pusha
int3
xchg
add
inc
pop
add
in
mov
mov
js
or
lcall
sar
or
cmp
fisttps
mov
and
mov
je
pop
mov
fcompl
sbb
movsb
out
stos
int
loope
test
dec
outsl
xchg
xorb
cmp
cmp
jmp
cmpsl
in
inc
push
outsb
mov
mov
xchg
fistpll
mov
sub
push
fs
push
pop
lcall
stos
jp
ja
adc
mov
in
xor
xchg
stc
jae
testl
inc
jmp
push
in
fwait
hlt
mov
push
aam
adc
fnstenv
push
xor
fucomi
cld
ret
dec
mov
xchg
fimuls
test
xor
pop
fisubs
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
sbb
mov
adcl
xor
movl
cmpl
je
cmpl
jge
jmp
call
mov
dec
mov
jmp
mov
add
movl
cmpl
je
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movzwl
mov
sub
mov
movb
lea
mov
mov
mov
xor
subl
add
subl
mov
and
movl
push
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
push
push
push
push
pushl
push
call
cmpl
jb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
push
mov
xor
mov
push
add
jmp
notl
mov
movl
mov
inc
movl
cmp
movl
jb
subl
mov
xor
add
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
call
jmp
mov
addl
xor
mov
orl
add
movzwl
mov
mov
sub
mov
mov
orl
movzwl
adcl
xor
xorl
add
mov
movl
mov
inc
mov
mov
cmp
jne
sub
mov
xor
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
call
mov
dec
mov
jmp
add
xor
mov
mov
xor
add
and
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
call
mov
dec
mov
jmp
movl
movl
cmpl
je
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
adc
movl
mov
adc
mov
movzbl
add
mov
mov
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
push
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
call
jmp
add
mov
mov
mov
movl
je
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
pushl
call
jmp
mov
mov
add
mov
mov
xor
sbbl
xor
addl
sub
sub
sbb
xor
mov
add
mov
mov
lea
mov
mov
xor
mov
andl
add
adcl
imul
orl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzwl
sub
mov
add
sbbl
and
mov
xor
or
adc
mov
andl
mov
andl
add
movl
or
andl
mov
and
mov
movl
cmpl
je
cmpl
jl
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sub
sbb
add
subl
mov
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
mov
add
addl
xor
xorl
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
push
pop
push
js
pop
imul
xchg
inc
sbb
jnp
pushf
jnp
shr
and
jo
dec
fbld
test
pusha
push
push
rcrl
mov
icebp
les
pop
stos
xchg
je
jmp
cmp
xor
loopne
pop
clc
cmp
stos
insb
or
jns
and
popl
mull
int
mov
push
lods
sub
lahf
mov
enter
mov
ud1
dec
sbb
loop
fdivp
aam
cmp
push
lahf
aas
xchg
or
dec
inc
and
rolb
insl
hlt
add
inc
sbb
mov
mov
and
jae
mov
push
pop
xchg
jge
inc
add
inc
pop
fldl
sub
test
scas
lret
and
xchg
mov
bound
leave
scas
inc
popa
and
push
xor
scas
outsb
jb
add
xor
or
jo
add
enter
add
jp
pushf
stc
loope
jne
mov
add
or
lea
inc
pusha
ds
dec
or
inc
adc
subl
loope
push
lods
ficoml
jns
cmc
in
cmpsl
and
sub
inc
or
mov
mov
dec
jne
hlt
sbb
pop
ds
lret
mov
push
mov
fwait
cld
cmc
rcr
fstl
lds
lret
out
imul
jo
lock
fnstenv
sbb
xlat
adc
daa
rcr
popf
jb
pop
clc
jl
adc
repz
lahf
xchg
xor
in
dec
int
xchg
jno
fidivrl
into
cmp
cmpsl
mov
lcall
loopne
add
cmp
xchg
pop
dec
sbb
repnz
das
sub
ljmp
mov
in
jle
popf
fdivrl
mov
jle
cmp
sti
mov
imulb
cmc
sbb
add
sbb
andb
add
clc
dec
cmp
jnp
es
pop
inc
jns
dec
xor
shl
push
xchg
sub
xchg
sub
xor
out
fsubs
and
xor
ficompl
sbb
cwtl
lock
mov
inc
rorb
adc
int
xchg
aad
out
int3
das
sub
lcall
sbb
adc
cs
push
fmul
sbb
mov
ljmp
adc
test
pop
mov
lods
cmpsb
std
xchg
add
lcall
cmp
cmpsb
cmpsb
inc
cmc
mov
lea
push
xchg
daa
fcoml
cs
inc
cli
rcrb
xchg
lret
lods
push
aas
push
fnstsw
data16
aaa
jb
adc
popa
clc
mov
cmp
adc
sbb
popf
xor
leave
insb
jecxz
mov
fildll
int
std
ficoml
vpslld
sbb
jne
insl
rolb
jnp
jb
mov
lods
or
sub
movsb
xor
jl
mov
jb
xchg
sub
xorl
fcmovu
lock
jns
push
xchg
add
push
xchg
mov
cmp
adc
lock
xchg
sbb
stc
xchg
div
adc
pop
icebp
push
sbb
ss
or
orb
arpl
leave
lock
mov
push
lahf
adc
cmpsl
jo
mov
ljmp
sbb
adc
pop
sub
inc
bound
aam
mov
inc
fistl
lods
loope
xor
mov
jns
pop
pop
int3
out
sbb
adc
bound
hlt
sub
jl
cmp
in
mov
cltd
ds
test
xchg
fstp
cs
sti
and
xchg
int
stc
mov
jmp
enter
adc
dec
mov
or
aam
test
fmul
es
adc
cmpsb
js
insb
inc
pushf
mov
fs
ds
pop
mov
sub
popa
xor
sub
mov
push
popf
mov
movsb
aaa
subb
pop
mov
and
mov
push
inc
out
lods
js
out
dec
out
pop
dec
nop
jbe
cwtl
lock
mov
dec
jg
call
cmp
ffree
inc
jl
jmp
jns
sbb
jl
stc
xchg
dec
mov
fisttpl
scas
fidivrl
push
mov
sbb
aad
lret
pop
xchg
sbb
in
dec
or
jle
test
sub
adc
daa
shlb
mov
ds
ret
fdivrs
dec
and
xchg
push
pop
pop
adcl
push
nop
push
pusha
hlt
mov
adc
xor
test
mov
icebp
rcl
push
sbb
daa
pop
shll
mov
jge
lods
sbb
hlt
pushaw
pushf
pop
or
fbld
add
aaa
inc
mov
leave
loopne
call
sbb
addb
test
mov
mov
sahf
lcall
mov
enter
jecxz
sarl
jl
jmp
mov
in
aaa
dec
lahf
enter
inc
ret
xchg
in
push
punpcklbw
fwait
cmp
push
sti
mov
mov
and
xor
and
adc
sti
and
fwait
call
push
jb
push
and
jb
xchg
sbb
mov
pop
lahf
mov
add
mov
push
jmp
addb
or
mov
lcall
aas
cmp
push
mov
rorl
mov
es
pop
aad
js
stos
cmp
or
and
pop
xor
add
and
xchg
sub
flds
add
sub
jle
jno
in
daa
ret
sarb
mov
push
inc
mov
lods
xlat
out
sarl
and
dec
cmp
mov
shll
mov
mov
imul
add
insl
out
mov
inc
fidivrl
icebp
out
inc
aam
cmpsb
rcr
std
and
andb
mov
xor
mov
adc
int3
pop
lods
inc
pushf
daa
fstps
push
pop
cmp
or
aas
push
fdivrp
xchg
dec
sub
cmp
fstl
inc
cs
mov
cmpb
fbstp
inc
outsl
daa
leave
push
cmp
loopne
mov
mov
sbb
sub
pop
punpckldq
out
jns
adc
aas
inc
lea
dec
pop
cmp
test
mov
int
cmp
sub
lahf
fisttps
jge
dec
sti
mov
out
out
sub
inc
lahf
push
xor
dec
lods
push
xchg
adc
mov
push
jle
inc
jl
cmc
sub
ss
lahf
jae
sbb
pusha
cmp
dec
iret
out
addb
add
inc
enter
pop
nop
movsl
inc
mov
adcl
mov
je
adcl
mov
and
jne
sbb
or
or
imulb
mov
sub
adc
aaa
pop
icebp
inc
lods
push
sub
sub
int3
lods
jno
gs
dec
or
lret
sar
fdivs
in
xor
clc
inc
add
lret
arpl
xchg
xchg
outsb
js
jge
lea
es
jne
adc
sub
mov
push
xchg
test
jbe
adc
pop
shll
cld
stos
adc
pop
push
repnz
ja
push
push
wbinvd
inc
ret
adc
sub
mov
add
sbb
sbb
pop
cmp
into
jecxz
inc
sbb
cld
adc
pop
pop
dec
add
in
out
mov
xor
lret
mov
sub
xchg
fists
cmp
xor
shr
xchg
mov
add
xor
xchg
mov
cmpl
iret
ja
sub
movsb
inc
push
xchg
mov
es
ljmp
mov
out
cmc
test
out
sbb
inc
jnp
cmp
xor
shll
mov
lods
sbb
mov
xor
shll
or
movsb
or
jno
mov
cli
adc
sbb
stc
dec
pop
lret
inc
or
mov
rcll
inc
jge
mov
mov
lahf
dec
cmpsb
pop
push
xchg
cmp
insl
int
xlat
mov
pop
pop
iret
mov
cmpsl
fsubs
scas
call
scas
in
and
int3
sti
xor
stos
iret
stc
rolb
xchg
lcall
adc
push
sub
add
lret
repnz
sbb
movsl
repz
mov
icebp
add
repz
aaa
mov
jge
mov
mov
in
fistl
arpl
xchg
jmp
xchg
insb
sbb
cltd
jle
sub
push
xchg
xchg
mov
xor
push
mov
xchg
in
sbb
pop
lods
cmp
mov
jno
fstpl
or
aad
push
add
add
or
xchg
sbb
add
push
sbb
lods
lods
inc
sar
adc
out
jmp
andl
movsl
sub
cmp
and
mov
cmp
mov
sarl
lock
out
cmp
adc
addr16
xor
insl
shrl
or
sub
xor
mov
mov
mov
loop
xchg
nop
or
adc
fisttpl
and
push
addb
dec
push
leave
ficoms
in
xor
mov
addl
out
aam
add
jnp
mov
sbb
cmpsb
and
fcompl
mov
pop
mov
int3
xor
pop
add
jmp
inc
ficomps
rclb
cltd
adc
imul
add
in
out
pop
cwtl
xchg
add
fisttpll
cmp
faddl
dec
mov
and
push
mov
sub
ffree
xchg
insb
imul
mov
inc
jns
jnp
sub
push
inc
pushf
sbb
add
xchg
jecxz
cmp
ficompl
ficoms
cld
mov
inc
bound
add
andnps
push
inc
pop
sar
mov
inc
lahf
xchg
pop
loope
dec
iret
filds
or
or
xchg
fcmove
ja
push
gs
add
jmp
pusha
mov
stos
addr16
mov
shrb
xlat
mov
sub
mov
sub
sub
adc
or
mov
es
fld
xor
dec
dec
xchg
inc
pop
movsb
dec
ljmp
mov
loope
jb
fists
outsb
pop
mov
iret
popf
lock
jecxz
jge
ljmp
aaa
or
imul
push
mov
dec
or
cmp
xor
cmp
xor
sbb
jnp
leave
mov
fs
cvtps2pd
test
adc
in
int
push
push
cwtl
xchg
outsl
inc
mov
push
pop
in
movntps
and
or
push
and
add
into
and
xchg
xchg
jnp
dec
nop
push
cltd
push
xor
icebp
shlb
ja
or
out
pxor
outsl
movsl
scas
imul
out
nop
aas
cmp
jmp
xchg
mov
jb
hlt
mov
cmp
pop
push
cld
xor
jp
sub
pop
js
rcrl
push
dec
lcall
pop
jnp
xor
cld
int3
out
ja
int3
ds
pusha
mov
subl
repz
push
fldt
lods
mov
lea
shll
movsb
sbb
fdivs
and
leave
decb
dec
sbb
pop
call
into
cltd
roll
mov
pop
pop
scas
sti
dec
ss
frstor
xchg
adc
xor
test
xlat
ficoms
jle
xchg
out
icebp
add
testl
push
dec
and
gs
je
out
call
mov
adcl
jb
in
sti
das
mov
mov
xor
fsubrs
dec
jl
or
popa
dec
lret
mov
xor
jecxz
inc
addr16
pushf
arpl
cs
adc
push
push
dec
mov
aaa
xorb
inc
lahf
pop
jmp
lahf
negb
inc
mov
mov
sbb
pop
gs
scas
cli
cwtl
icebp
xor
icebp
into
mov
pushf
ss
add
sti
pop
mov
jnp
imul
lret
imul
in
clc
outsl
push
out
clc
loop
out
popa
daa
aam
cmc
aaa
push
aaa
movsl
cmp
in
insb
sbb
jb
mov
pushf
cs
push
push
mov
ss
in
sub
jp
jbe
mov
xchg
cld
arpl
jo
ret
dec
push
xchg
xor
test
jle
icebp
hlt
rol
mov
outsl
or
jmp
mov
xchg
ljmp
out
mov
ror
xlat
and
fptan
imul
xchg
fistpl
and
imul
enter
push
cmp
lods
dec
cmp
dec
dec
add
test
or
sti
fsubr
sub
push
sub
sbb
adc
in
lahf
ficoml
in
adc
mov
lock
daa
inc
and
rorl
adcl
or
in
sti
jmp
sub
lret
xchg
imul
mov
fidivl
cmp
sub
dec
in
outsb
repz
add
rcll
movb
push
hlt
jmp
ljmp
pop
scas
push
in
test
jl
push
pop
mov
push
mov
fimull
movsb
pop
inc
xchg
push
sub
mov
cld
das
adcb
or
add
cli
add
cmp
push
mov
fsubl
push
jo
adc
sub
pop
jne
int3
fwait
jecxz
or
cmpsb
push
sar
inc
pop
pop
sub
jb
outsb
clc
arpl
repz
add
mov
pop
inc
mov
sbb
mov
cmpsb
imull
sahf
lcall
aaa
arpl
mov
lcall
pop
add
outsb
cmc
mov
adc
rorb
addr16
scas
scas
sub
dec
roll
add
clc
add
mov
inc
add
aad
xor
sbb
add
and
aad
mov
mov
rcll
cmpsl
sbb
ret
movsl
xchg
out
pusha
notl
cmp
mov
lret
call
lods
xchg
adc
dec
loop
push
adc
or
cmp
aas
adc
mov
out
inc
into
daa
fimull
cwtl
push
out
scas
out
pop
mov
movsl
mov
adc
push
inc
js
xchg
or
bound
pusha
add
setb
int3
daa
loopne
and
psllw
mov
ret
hlt
test
sub
lret
jmp
repnz
mov
dec
sbb
xor
adc
inc
enter
dec
test
stc
aaa
xor
xchg
cmp
dec
lods
xchg
or
repz
push
lcall
ljmp
and
cwtl
push
aas
cmp
stos
in
xchg
ss
inc
in
sub
mov
or
rol
cmpsb
push
mov
cwtl
xchg
js
jge
cli
jne
lods
aam
lods
lret
movsl
push
xor
mov
xor
rcr
test
sti
inc
and
bound
pop
icebp
jp
fsubrs
call
jb
and
pop
frstor
xor
adc
add
sub
subb
outsl
inc
sbb
jl
pushf
pop
stc
push
mov
bnd
or
sub
testl
sub
add
add
movsl
push
push
out
fucomip
ret
out
xor
dec
xor
mov
inc
add
test
jl
mov
sti
iret
pop
pushf
lock
aaa
repz
and
iret
mov
adc
sahf
outsl
mov
jne
addr16
lods
cmpsb
std
ljmp
jecxz
in
add
pop
insb
popa
call
popf
seto
cmp
idivb
jmp
lcall
sbb
dec
sub
adc
mov
lock
aad
cmpb
mov
mov
sahf
jo
in
rcrl
sbb
or
call
mov
push
pop
call
adc
dec
int
ss
push
dec
jl
push
and
daa
scas
sbb
int
lock
pop
jle
subb
outsl
in
stc
add
cli
insl
mov
test
xchg
pop
mov
or
mov
xchg
cmp
aaa
cmpsl
fnstcw
sub
pop
jnp
add
into
lahf
dec
fs
mov
mov
push
rorl
aas
mov
xor
shlb
stos
jne
push
add
in
jecxz
push
stos
push
adc
xchg
and
dec
or
mov
xor
shrb
mov
mulb
sahf
push
repnz
mov
xor
jno
ds
and
add
dec
in
jle
nop
mov
sub
int3
lcall
jmp
adc
cltd
inc
call
inc
jae
imul
sbb
loop
subl
movsb
je
out
adc
out
mov
insl
in
jno
fsubrs
mov
fnsave
out
sbb
mov
lret
sub
call
out
sbb
daa
and
pop
lahf
cmp
add
stos
cmp
jl
xor
dec
rolb
xor
sub
push
les
xchg
cs
aam
sub
jnp
mull
jae
cmpsl
ljmp
push
jns
pop
sub
inc
bnd
lods
loop
enter
xchg
in
mov
pop
pop
dec
cmpsl
aaa
adc
fwait
add
out
xor
aam
fmul
mov
mov
mov
mov
jle
or
xor
inc
test
sbb
cmp
loopne
mov
jmp
jmp
loop
test
lahf
pushf
dec
inc
cwtl
mov
and
pop
nop
inc
bound
dec
int
pop
lcall
mov
inc
and
in
insb
decl
jno
pop
adc
fists
movsb
daa
sub
xchg
xchg
mov
fnstsw
dec
push
xchg
frstpm(287
and
fwait
lea
mov
push
mov
inc
out
xchg
add
push
xchg
xor
xchg
jge
jns
pop
scas
rorb
pop
lret
jb
cmp
unpcklps
ds
fdivrs
bnd
dec
js
mov
cmpl
pusha
sti
mov
clc
popf
cmp
dec
sbb
cli
inc
movsl
loopne
fs
jns
push
inc
fcomi
jmp
into
loop
mov
das
pop
pop
in
dec
pop
xchg
sub
loope
fs
pusha
ss
or
out
push
push
out
jns
movsl
sbb
iret
mov
jns
out
dec
out
data16
mov
mov
dec
push
mov
push
out
pushf
dec
mov
mov
xchg
pushf
jbe
les
and
dec
xor
pop
mov
add
mov
ror
ret
fidivs
andb
in
sub
std
cmp
stc
jae
jmp
cmp
cmc
adc
out
mov
cld
xchg
lret
out
mov
mov
xlat
stos
mov
sbbb
xchg
and
outsb
mov
jmp
popf
mov
inc
xchg
aas
aad
adc
adcl
popf
shll
add
pusha
mov
daa
sub
inc
pop
and
xlat
pop
xchg
stc
sbbb
dec
dec
jns
adc
mov
aas
push
dec
xchg
add
loopne
mov
push
loopne
aad
iret
xchg
out
xor
addb
xchg
jmp
add
add
test
mov
sub
mov
imul
stos
dec
clc
lock
cwtl
sub
push
out
test
in
xor
jge
stc
popl
repnz
rcl
mov
mov
jnp
add
or
in
jno
mov
mov
cmpb
inc
xor
sub
sbb
xchg
insl
lahf
pop
icebp
jl
or
add
lret
in
inc
inc
pop
loop
std
inc
loop
out
sbb
mov
or
sbb
add
leave
pop
lret
sub
sahf
shrb
xchg
xor
jg
and
test
in
ret
fcomp
inc
clc
in
js
add
scas
adc
cmp
loopne
push
out
test
mov
jmp
pusha
adc
std
and
jecxz
sbb
lret
lahf
jne
xchg
mov
rorb
mov
adc
lods
jg
int3
sub
push
adc
mov
inc
mov
xchg
jl
outsl
cmp
mov
dec
xor
sbb
pop
icebp
jnp
jns
sub
mov
sbb
mov
jb
cmp
inc
push
jmp
and
sarb
jp
pop
insb
mov
pop
add
mov
stos
pop
test
cmp
popa
mov
xchg
mov
lds
or
xchg
bound
imul
inc
xchg
data16
popf
pop
sbb
sbb
aam
fbstp
repnz
stos
lds
and
ret
pusha
ljmp
inc
aam
fcomps
mov
add
call
movsl
lock
xor
dec
or
mov
test
shll
xor
jbe
mov
out
imul
or
cmpsl
fistl
sbb
push
pop
inc
ja
sub
into
and
and
gs
inc
dec
sbb
dec
xor
cs
cmp
cli
cmp
inc
jae
xor
push
js
or
addr16
dec
mov
xchg
stos
subb
out
jns
inc
lahf
dec
pushf
sbb
lods
add
fwait
xor
test
cli
clc
mov
cmc
jno
test
xchg
cmp
aam
xchg
jecxz
addr16
cmp
push
jle
lock
pop
and
xchg
sbb
lahf
insl
movsb
cwtl
jge
mov
fsubs
jecxz
xor
iret
mov
bound
dec
lods
fistl
adc
push
sub
mov
repz
aaa
out
xchg
call
cli
xor
cmp
insl
movsb
sbb
or
stc
std
pop
cld
pop
inc
inc
movsl
movb
loope
cli
sub
cmpsb
cmpsl
aad
sbbb
mov
push
aaa
push
jno
andl
jbe
loope
movsl
pop
int3
and
lahf
mov
loope
inc
inc
sub
imul
sbb
mov
xchg
push
push
sub
mov
lret
xor
sub
ja
or
and
pop
mov
xor
aad
repz
xor
andb
iret
jg
lret
xchg
aas
xchg
adc
mov
call
or
out
sbb
xchg
and
push
stos
repz
add
xor
jl
xchg
mov
ret
cmc
xor
xlat
xchg
mov
daa
rcr
aad
flds
xor
and
or
dec
jbe
dec
dec
vpshufhw
fsub
pminub
imul
fnstenv
ret
scas
decl
bound
jmp
cmp
gs
popf
mov
xor
lods
std
aas
inc
es
xchg
cmp
aam
ficoml
pop
cli
out
mov
sbb
shll
int
dec
out
rcrb
lods
xor
or
jne
mov
aas
jmp
daa
sarl
pop
xchg
sub
ret
xchg
das
sub
repz
mov
mov
adc
das
pop
out
push
jnp
les
mov
and
cld
fcomi
inc
cwtl
dec
or
scas
or
je
adc
jmp
stos
dec
loopne
flds
fnsave
xchg
aad
mov
and
loopne
push
dec
jb
loop
aaa
sbb
aam
cmp
jge
lahf
xor
lods
sbb
sbb
mov
dec
arpl
mov
test
sub
loop
xchg
addb
jl
or
decb
mov
imul
cmovbe
jle
mov
ret
cmp
in
mov
and
fwait
iret
adc
or
push
pop
test
ror
mov
inc
mov
or
idivb
fldl
or
daa
xchg
ja
in
mov
jp
and
out
pop
cli
jmp
and
mov
outsl
push
xlat
cld
add
lahf
xor
out
lret
pop
and
arpl
adc
jmp
gs
cmp
sub
jle
popa
push
push
dec
dec
out
fbld
mov
movl
mov
inc
imul
in
into
scas
imul
pusha
xchg
out
cmp
popa
adc
inc
scas
mov
rcrb
mov
ljmp
stos
pop
aam
mov
pmuludq
cli
mov
xchg
mov
or
sub
xchg
out
sti
cld
inc
mov
xor
arpl
lcall
jne
mov
ss
testl
in
jae
jb
daa
rcll
testb
adc
call
int3
mov
mov
psubusw
rcll
std
sub
pushf
loope
sub
cmp
push
insb
push
sub
leave
lret
shlb
sub
add
lds
repnz
adc
xor
or
mov
pop
sbbb
add
mull
in
cwtl
leave
lret
or
cltd
pop
xchg
mov
sti
scas
adc
push
and
jno
daa
mov
sahf
pushf
xor
or
popa
das
out
aaa
cld
arpl
cmp
jl
push
sub
div
pop
mov
add
jne
mov
les
stos
push
lret
sbb
aad
xor
shll
lret
int3
and
xchg
xor
fidivrs
sub
push
outsl
pop
mov
repz
dec
es
mov
stc
adc
mov
loopne
mov
les
sbb
or
sbb
jl
fcmovbe
mov
xor
push
xor
pop
push
das
and
sbb
jno
xchg
cwtl
adc
sbb
cmp
cmp
jle
mov
xchg
dec
cmp
jge,pt
fsubr
inc
sub
xchg
lea
orb
pop
ljmp
stc
mov
lea
aam
filds
dec
nop
ret
add
in
mov
pop
pop
dec
arpl
cmp
add
mov
jecxz
xchg
out
pop
hlt
scas
mov
xchg
scas
sbb
sub
bound
mov
xchg
xor
cmpsb
popa
or
inc
fildl
xor
cmp
push
jne
inc
mov
cmp
pop
push
hlt
xor
sub
mov
in
stos
aas
rolb
adc
and
outsb
aam
int
sbb
fsub
ror
int
mov
add
inc
dec
mov
daa
or
and
pop
mov
cmpsl
dec
sub
cwtl
cmc
arpl
add
jno
push
jbe
inc
ret
in
sub
repz
or
inc
push
xchg
out
scas
lods
ja
ret
ja
data16
inc
cmp
lahf
jge
imul
and
inc
das
jmp
xadd
test
mov
rorl
sbb
sub
pusha
xchg
sub
ret
ja
sub
cmp
sub
test
xor
stos
iret
jbe
jp
loop
mov
lock
outsw
das
unpckhps
xchg
mov
lret
shl
stos
fisttps
jle
mov
insl
cli
bound
mov
push
inc
cmp
into
in
xchg
iret
out
xchg
fimuls
jecxz
ret
insl
out
push
repnz
enter
mov
pop
test
outsb
cltd
loope
dec
clc
lods
aaa
cld
cmpsb
mov
push
imul
lret
mov
mov
jg
cmp
pop
data16
inc
and
or
ss
lds
ja
mov
xchg
mov
or
and
repz
into
cmp
inc
faddl
pop
mov
adc
mov
icebp
dec
push
dec
dec
les
jp
cmp
cmpl
lret
out
fnstenv
jbe
push
aam
outsl
add
pusha
or
jo
xor
add
pop
aad
daa
lret
std
xchg
mov
xor
jp,pt
jns
xor
push
mov
xchg
scas
mov
lahf
fldt
mov
pop
cli
mov
mov
stos
insb
out
mov
pop
jne
and
orps
mov
fildll
jge
pop
pop
cmp
add
hlt
cmp
aaa
jbe
cmpl
pop
xor
dec
loopne
roll
lret
jp
test
xor
and
lcall
pop
sub
sbb
les
inc
aam
pusha
dec
push
fsubp
mov
pop
push
inc
mov
enter
inc
adc
inc
add
sub
lods
cmp
aaa
push
jge
cmpsb
loope
push
js
pop
push
cmpsl
dec
das
sar
lock
mov
stos
test
out
sti
mov
daa
bound
and
mov
notb
test
bound
fiadds
adc
popa
mov
sub
mov
inc
loopne
jno
in
mov
xchg
and
repnz
movsb
adc
enter
ja
test
jmp
imul
les
xor
stc
ds
adc
bound
fstpl
test
fsubrl
pop
cltd
mov
fst
jecxz
pop
popa
cs
mov
popl
add
xchg
or
push
xchg
push
lock
lret
popl
call
clc
inc
in
fstl
sbb
xorb
es
and
jle
jge
fwait
popa
xor
push
inc
add
fprem
and
jns
stos
pop
mov
jnp
cwtl
shrb
ds
adc
pop
xchg
out
in
xorl
cmpsl
js
adc
mov
bnd
addr16
sub
mov
adc
inc
sub
std
add
loop
lods
mov
mov
dec
bound
dec
loope
cmp
and
dec
mov
and
jb
add
stos
sbb
pusha
jbe
mov
loop
shrl
test
xchg
inc
xlat
pusha
ss
add
dec
cmp
addr16
das
into
pop
aad
aam
mov
adc
out
dec
ljmp
push
mov
pushf
inc
jge
add
out
xchg
mov
adc
popa
pusha
clc
jle
inc
mov
cwtl
orl
sbb
je
push
xor
add
push
xor
stos
dec
imul
adc
int
jnp
and
dec
leave
fldenv
outsb
sahf
jmp
mov
mov
test
and
cmp
adc
imul
daa
or
adc
inc
stos
pop
cmc
mov
jno
push
mov
push
ja
mov
push
mov
adc
pop
loope
dec
xor
xchg
int3
jmp
ret
outsl
add
sbb
adc
xchg
outsl
or
scas
std
and
sbb
scas
or
ljmp
inc
scas
out
cmp
and
fistps
fisubl
in
js
or
movsb
or
xor
ja
push
pop
inc
shl
je
dec
dec
dec
push
cmp
xor
inc
xor
sti
xchg
or
gs
inc
nop
mov
pusha
loope
mov
mov
aas
fildll
pop
shrb
or
or
adc
cli
testl
sbb
mov
cmp
adcb
pusha
inc
sub
gs
mov
sub
hlt
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
jmp
outsl
sub
xchg
divb
daa
mov
mov
lea
jnp
pushf
jnp
xor
cs
mov
sbb
idiv
xor
dec
mov
pop
add
jns
std
push
xchg
cwtl
or
lret
and
dec
pop
add
jns
sbb
aas
stc
jno
das
les
imul
repz
jo
and
ljmp
push
and
repnz
or
fsubp
das
and
or
roll
fistl
incb
cmp
shlb
mov
xor
cmp
fdivrs
pusha
ficoms
in
inc
adc
push
mov
mov
inc
std
mov
outsb
xor
lea
lret
or
cmp
jo
adc
xchg
cmpsb
fisubrl
shr
dec
out
cmp
pop
pop
insb
and
dec
mov
fistpll
iret
xchg
pop
ret
xor
sbb
daa
sbb
shrl
adcl
outsl
jno
je
mov
aas
es
sbb
dec
xchg
push
cli
xor
stos
sbb
mov
mov
xlat
push
out
sarb
and
clc
ja
jae,pn
stc
cmp
pop
sti
setae
rcrb
cmp
jmp
add
adc
xchg
sbb
insl
add
and
test
pop
aam
pop
ja
loop
mov
es
and
adc
inc
aam
mov
or
aas
loopne
jne
outsb
push
in
push
jg
push
jbe
lods
mov
mov
jp
call
add
out
adc
inc
ret
sbb
outsl
bound
out
pop
jne
jae
xor
jp
pop
iret
scas
int3
stos
or
xchg
add
xor
fdivrs
addr16
jns
pop
jo
cmp
mov
cmpsb
call
fiadds
out
sbb
push
mov
lret
clc
stos
pop
pop
cld
mov
push
dec
pop
das
into
or
pop
jle
sub
jno
addr16
data16
pop
xchg
cmp
jge
loope
push
mov
in
sarb
dec
cltd
jl
xchg
xchg
mov
pop
fstpt
mov
out
fstl
inc
xor
dec
out
aad
fidivs
ds
jmp
fists
dec
pop
add
jb
addr16
add
push
out
outsl
mov
inc
fdivrs
xor
mov
out
scas
int3
dec
test
imul
jae
pop
aas
cmp
and
jle
push
cli
adc
pushaw
in
mov
jle
popa
push
jno
jp
xchg
std
lods
mov
test
aaa
add
lahf
sbb
sbb
cs
jg
pop
test
mov
js
or
lock
xor
sub
std
or
inc
or
cmpsl
loope
jbe
cmp
sahf
cld
xchg
mov
dec
repnz
mov
adc
and
push
sub
cmc
mov
dec
xor
out
mov
std
xchg
dec
loope
xchg
adcb
mov
push
sbb
or
jno
int
stos
cli
mov
paddsb
inc
dec
lahf
call
aas
or
inc
ja
insb
cs
testb
mov
jnp
xor
cmp
shl
notb
incb
enter
xorb
les
test
mov
fcoml
push
dec
mov
mov
mov
imul
mov
out
cmp
inc
and
inc
push
clc
mov
pop
cmp
jp
xchg
pushf
lds
and
mov
jle
or
adc
cwtl
mov
push
ss
testl
jnp
or
mov
scas
in
sbb
jae
lods
jne
sbbb
xchg
leave
lds
shr
add
lea
jg
pop
lods
pop
inc
push
push
popf
lods
jnp
test
add
push
pop
outsl
dec
add
in
pop
mov
inc
sub
jmp
push
mov
cmp
xor
push
je
repnz
das
cmpsb
loop
jo
lahf
xchg
fadd
das
ss
mov
cs
xchg
lea
mov
imul
xor
cmp
or
pop
add
push
cli
popf
jg
jg
xlat
xchg
add
rcll
inc
stos
sbb
je
xor
sbb
add
mov
mov
sar
pop
insb
inc
sub
roll
stc
repz
popf
inc
sbb
mov
xchg
pop
mov
push
sbb
out
sub
jbe
cmpsb
cltd
mov
jg
sbb
cltd
add
int
xchg
shlb
cmp
sbb
mov
ss
xchg
jo
or
js
adc
cli
leave
push
pop
push
push
fidivl
xor
icebp
stos
jecxz
xor
add
sbb
push
jbe
fdivr
lret
xchg
mov
rolb
sbb
jecxz
insl
or
cmc
mov
inc
loop
mov
adc
dec
data16
or
das
push
add
jb
leave
in
insb
lcall
std
scas
jmp
fxch
daa
das
or
push
rcrb
gs
lret
sub
daa
jle
movsb
adc
xor
cmpsb
mov
xchg
loop
rcl
notl
cmp
sub
push
ret
xor
push
push
jbe
xchg
gs
dec
mov
xchg
xchg
inc
insb
lahf
dec
cltd
mov
ret
dec
outsb
sub
fwait
sbb
mov
push
icebp
mov
jge
xor
and
pop
push
into
repz
shr
stos
mov
push
es
push
pushf
int
adc
lcall
movsb
lret
imull
ja,pn
popa
mov
cmp
lret
mov
push
inc
sti
xor
fdivl
xlat
xorb
adc
xlat
nop
or
mov
jno
inc
mov
stos
fstl
loopne
xchg
adc
lock
iret
cld
xchg
aaa
mov
scas
cmp
into
xchg
repz
in
addl
jb
popa
mov
mov
sbb
sbb
mov
mov
ljmp
push
xor
mov
popa
adc
test
or
movsl
pop
insl
push
push
in
outsl
push
or
cmp
mov
aam
insl
insb
fsincos
sub
mov
and
ljmp
mov
push
adc
cmp
inc
push
sbb
xchg
push
pop
lods
and
popa
jecxz
in
dec
in
add
xor
aaa
or
sar
xor
outsl
ss
jge
sti
jns
orl
jecxz
loope
inc
jl
add
pop
cmp
dec
ret
add
mov
clc
ret
mulb
pop
out
push
mov
xlat
test
push
int3
or
test
rcrl
xchg
int
jecxz
push
int
inc
dec
mov
dec
xlat
gs
mov
cmc
loop
imul
lock
cmpsl
icebp
xor
add
dec
pop
jbe
jp
cmp
nop
lock
bound
push
xchg
loopne
lea
fisubl
clc
jae
cltd
popw
push
xlat
test
and
add
or
pusha
in
ss
mov
push
pop
pop
mov
scas
les
lcall
imul
movsb
arpl
xor
dec
xor
xor
andb
mov
xchg
xlat
sbb
repz
stos
in
in
loopne
cmp
daa
fprem1
stc
rcrb
scas
mov
push
int3
dec
scas
jmp
jecxz
pop
movsb
pop
stc
dec
sti
xchg
mov
cmp
jp
or
call
sbb
jle
adc
stos
out
sarb
es
shrl
push
mov
jbe
cmp
jge
das
lret
mov
cwtl
fwait
add
xchg
sbb
fwait
jo
cmpsl
xchg
push
push
outsb
rolb
sub
pop
mov
jp
mov
test
xor
jo
nop
faddp
stc
lea
ror
movsl
push
jns
shrl
rorb
sbb
add
and
jle
mov
cmpsl
sub
into
sbb
bswap
movsl
rorl
mov
and
cmp
jecxz
jne
sarl
sub
add
adc
pop
xorb
cmp
xchg
cltd
jp
add
pop
mov
shlb
icebp
adc
pushf
inc
int
loope
stos
sbb
adc
fcoml
add
ljmp
jno
xchg
or
xchg
inc
sbb
mov
imul
scas
fcomps
int3
inc
lcall
repnz
inc
xchg
aaa
cmpsl
subb
mov
fdivrs
cli
in
lret
mov
pop
inc
push
mov
test
mov
insb
je
push
add
fwait
call
or
adc
cmc
mov
js
dec
notb
xchg
jge
ss
mov
push
xchg
push
es
stos
roll
sub
xor
rorb
lock
sti
pop
mov
inc
add
stc
in
dec
in
jne
fstp
inc
aad
outsb
inc
xchg
test
fwait
jg
test
in
dec
arpl
cmp
push
dec
ja
popl
mov
lahf
cmp
inc
mov
fisttps
adc
or
push
arpl
punpckhdq
or
lods
leave
xchg
push
jecxz
outsb
xchg
into
cmp
sarb
fmuls
inc
outsl
cld
in
add
pusha
lea
movl
sbb
jp
jno
repnz
jge
repnz
or
ja
sbb
jmp
add
subb
inc
push
adc
xchg
mov
in
leave
int
cmp
adc
mov
sub
loop
lods
scas
pop
repnz
push
pushf
gs
mov
or
adc
stc
xchg
fdivp
notb
fistl
aas
div
stc
jge
xor
popf
xchg
vucomisd
fs
pop
push
test
jno
jb
fsubs
push
and
test
push
pop
scas
movsb
leave
adc
sti
xor
in
test
adc
mov
idivl
mov
leave
movb
cltd
out
cmp
test
mov
pop
xchg
jp
jecxz
dec
dec
jecxz
bound
inc
int
jge
push
dec
jbe
cmp
test
adc
in
cmp
dec
jp
ljmp
int3
sbb
cmp
das
mov
jmp
cmc
cwtl
pop
jecxz
push
popl
ret
xchg
imul
pop
cmpsb
popf
fcoms
xor
std
aaa
push
push
mov
xchg
dec
mov
rcrl
jae
das
ret
leave
mov
test
push
dec
repz
cmc
add
pop
stc
mov
push
xor
mov
test
nop
bound
adc
mov
in
ret
bound
lahf
fwait
add
cmpsb
les
shlb
lock
adc
lock
sbb
cmp
sar
fistps
adc
cmp
and
jmp
mov
adc
out
jl
mov
sbb
add
push
push
mov
mov
in
ss
data16
movsl
jae
cwtl
mov
xorb
mov
pop
lret
xchg
rclb
pop
adc
mov
jo
mov
cmp
cmp
jo
and
into
mov
pusha
cld
adc
adc
cmp
or
xlat
arpl
and
ret
and
jp
cs
sbb
shlb
inc
insb
sbb
gs
pop
pushf
cld
into
adc
push
jbe
push
xor
adc
popf
inc
push
adc
cmp
movsb
loope
imul
pop
sub
fnstenv
mov
fcmovnb
and
mov
dec
outsl
mov
nop
loopne
fcoml
pop
popa
ror
push
xchg
and
out
xchg
out
mov
mov
rcrl
push
outsb
fisttpll
les
cmp
addps
sbb
lock
jbe
jmp
cmc
call
movsl
pop
sub
inc
nop
rorl
ret
scas
push
add
das
mov
out
in
addb
aam
pop
cmp
xlat
adc
sbb
mov
gs
mov
loope
aas
mov
push
jecxz
pop
test
inc
repnz
cmp
sub
pop
int3
adc
out
jb
es
push
sbb
jo
out
mov
fistl
hlt
dec
pusha
repz
mov
fwait
rolb
mov
xor
out
dec
lret
inc
lods
outsb
cmpsl
lock
adc
popf
fwait
inc
out
pop
or
loope
mov
xor
sbb
sahf
xor
aad
stos
fidivrs
cmp
aam
push
loopne
cmp
mov
testb
mov
mov
xchg
jae
dec
sbb
pop
add
pop
addr16
jp
ficoml
push
daa
cmp
aad
fs
call
push
add
adc
je
jmp
mov
fwait
add
enter
mov
xor
jnp
data16
mov
rol
push
fistl
insb
adc
jmp
fbstp
pop
stos
jno
mov
movsb
jge
or
dec
lcall
sbb
jmp
fdivr
xchg
sbb
popa
xor
xor
fistpl
test
lds
dec
loopne
test
in
add
int
mov
mov
cmp
jne
icebp
in
fcoml
cmp
sub
neg
pusha
jmp
dec
xlat
add
dec
or
ds
daa
sub
sub
and
dec
jo
addl
and
pop
mov
xor
push
jo
loop
orb
aam
test
test
fwait
xor
lret
jg
fsubl
out
dec
fidivrs
out
pusha
aas
stos
jnp
ret
and
sbb
or
cmp
aad
dec
out
enter
jno
adc
xor
dec
div
inc
lret
sub
mov
gs
outsb
mov
movaps
ljmp
pop
push
in
jecxz
jnp
dec
stc
pop
cmc
xchg
mov
xchg
sub
cmpsb
sti
fld1
adc
lea
icebp
std
lcall
icebp
fwait
lods
mov
mov
repz
cmp
xchg
in
outsb
rcrl
addr16
ja
cli
jmp
xor
jbe
sti
cmp
lea
pop
xchg
fnstcw
stc
lcall
clc
jns
movsl
loope
mov
push
sub
daa
jb
sbb
bound
ret
and
enter
pop
lods
sub
xchg
inc
mov
push
sbb
lret
xor
scas
mov
int
and
xchg
hlt
loop
scas
ret
and
fwait
dec
rcr
push
das
xchg
adc
outsl
sti
cli
out
pop
push
dec
push
inc
pop
and
cmp
out
ss
in
cmp
shl
and
mov
push
cmp
adc
lret
stos
or
out
jne
sbb
movsl
enter
pop
test
sbb
enter
lret
in
test
sub
mov
or
mov
stos
cmc
lret
xchg
mov
outsb
movsl
test
out
scas
divl
mov
int
mov
mov
sahf
add
mov
mov
push
es
dec
hlt
mov
lea
test
sub
sbb
mov
push
pop
sti
jne
xor
out
test
xchg
lret
daa
push
test
xor
pushf
jge
cmp
adc
stc
enter
aad
aas
dec
cmp
mov
jge
popa
lods
pop
lahf
cs
jne
loopne
mov
repz
mov
jae
xor
les
add
cld
pushl
sbb
add
rcr
push
adc
mov
dec
add
in
data16
and
sub
test
lods
rorb
xor
and
add
imul
or
out
mov
cmpsl
and
lcall
jne
rol
mov
int3
jge
popa
out
std
aad
fincstp
movsb
lock
out
and
mov
nop
adc
push
xchg
cltd
lock
jge
je
in
or
cltd
push
mov
inc
sbb
xchg
mov
ljmp
arpl
or
xor
outsb
scas
xchg
incb
jmp
cmc
sbb
cmp
push
pop
imul
ret
jbe
cmc
imul
pop
aad
push
outsb
xor
xchg
jb
mov
insl
pop
xchg
outsl
mov
and
push
sti
les
clc
add
test
adc
aas
and
daa
into
and
scas
lret
fidivs
fdivs
dec
or
xchg
lods
xchg
xor
pusha
mov
sub
stc
and
or
mov
sub
xchg
rcr
sub
pop
xchg
cli
ljmp
incl
shll
into
jb
clc
sbb
iret
lret
mov
push
inc
shll
cmp
les
or
push
mov
pop
mov
dec
mov
push
and
mov
clc
mov
adc
jae
icebp
insl
in
pop
popa
bound
insb
lret
ss
andb
jl
test
pop
push
sub
pop
add
scas
push
aas
imulb
sarl
imul
lea
pop
leave
xchg
pop
jno
leave
xor
sbb
mov
push
sahf
loop
add
xchg
adc
mov
xor
xchg
mov
mov
lds
mov
push
clc
mov
add
fisttps
enter
lods
shlb
sbb
iret
inc
pop
lods
xorl
out
hlt
jecxz
movsl
std
adc
in
stc
sbb
push
and
or
sti
dec
jb
add
loopne
aam
enter
jno
or
mov
jb
mov
and
loope
in
pop
outsl
sub
push
test
sar
in
sbb
and
movsl
xor
enter
pop
xor
or
pusha
stos
xchg
scas
mov
fcoml
icebp
xchg
arpl
lahf
sbb
xor
sub
dec
and
push
cmp
cltd
xchg
sub
xchg
cmp
outsb
cs
test
xor
cmpl
jge
and
and
test
popa
outsl
cmp
inc
outsb
and
scas
mov
daa
inc
sub
push
mov
iret
push
sub
mov
or
push
or
xor
jbe
outsl
pushf
mov
pop
jns
xorl
rclb
cmpsl
jnp
in
lea
jge
test
ljmp
fimuls
and
dec
gs
outsl
into
mov
push
cmp
sti
cmp
stos
aam
shl
das
sbb
dec
xchg
test
dec
sub
lcall
loopne
add
lods
mov
jmp
pop
add
inc
js
fld
xorl
addr16
ds
mov
cmc
ds
adc
inc
jl
cmp
inc
test
xchg
mov
pop
mov
movsb
shrl
mov
ficoms
xchg
jg
jg
mov
push
aam
test
cmp
jae
mov
xor
fldcw
int
or
mov
fists
in
shrb
scas
jg
ljmp
stos
dec
sbb
xchg
pop
jmp
push
imull
aas
mov
loopne
dec
or
lds
mov
adc
push
mov
fidivrl
out
stos
cmp
pop
push
pop
movsb
xlat
mov
xchg
xor
dec
and
ds
fcoms
or
dec
inc
leave
mov
xor
jl
push
mov
sub
or
pop
xchg
lods
rcl
push
mov
repnz
jl
mov
jnp
das
dec
jp
add
and
fwait
imull
aaa
gs
jl
test
push
out
and
lock
cmp
push
ret
fwait
lret
xchg
test
shll
xor
ljmp
jnp
aam
lds
xor
dec
ss
mov
in
push
imul
inc
cmp
fmull
cltd
idivb
ret
dec
xor
sahf
je
aaa
or
add
loope
iret
je
in
sbb
add
rcr
jmp
mov
aad
adcb
mov
sub
xchg
rcrl
iret
adc
out
fidivs
sub
ds
xchg
sar
jo
sub
cmp
cld
mov
jno
mov
lahf
cmp
mov
mov
add
xlat
imul
pop
scas
cmpl
inc
icebp
dec
insl
adc
inc
pop
gs
mov
or
movsl
hlt
inc
aam
addr16
xchg
dec
enter
or
movsb
mov
mov
popa
and
and
pop
popf
popa
repnz
cmp
jge
loop
mov
lods
add
jns
out
sbb
rep
mov
sub
rclb
mov
or
cmp
std
mov
fists
jbe
call
fisubrs
outsb
pop
inc
jnp
paddb
mov
loopew
cltd
pop
scas
pop
dec
aad
pop
clc
cmp
imul
cmpsl
mov
test
pop
sbb
sahf
mov
jecxz
iret
mov
mov
clc
pop
dec
fs
ja
jl
mov
add
xchg
push
test
or
dec
lea
daa
dec
xor
iret
add
mov
xor
fildll
orl
cmp
inc
push
pop
sub
loope
int3
cmp
imul
fidivrl
add
xor
dec
push
int
xchg
push
lock
loopne
mov
xor
mov
stos
test
repnz
mov
rolb
pushl
into
and
dec
sbb
out
and
shlb
mov
cld
rcll
lret
mov
fistpl
ret
repnz
repz
cmp
add
xchg
push
sbb
cwtl
pop
xor
movb
sub
adc
and
adc
push
js
pop
pop
cwtl
fisubrs
loope
pop
and
arpl
rol
imul
das
pop
jno
iret
mov
mov
fistl
repz
jnp
mov
mov
inc
loopne
repz
mov
and
scas
mov
and
push
jp
dec
xorl
aaa
pop
out
into
xchg
stos
faddl
outsb
repz
mov
shrl
lahf
rorl
and
lea
pop
xor
jmp
movsbl
pop
cmpsl
push
std
sub
out
jle
add
cltd
dec
psrld
cmp
jno
xchg
lcall
cmp
movsb
jns
jg
lods
or
ret
and
push
pop
hlt
imul
cmp
xor
mov
mov
ja
frstor
jbe
pop
in
sbb
rcll
addl
pop
dec
scas
fsubs
or
ss
xchg
fs
addr16
adc
arpl
sbb
int
cmp
sbb
mov
mov
fidivrs
les
pop
mov
pusha
mov
call
out
dec
aaa
loopne
popl
rcr
imul
cmp
cmpsb
mull
dec
jne
add
add
pop
mov
sub
mov
jecxz
adc
mov
je
inc
sbb
add
adc
mov
je
sbb
fsubl
dec
inc
mov
xchg
insl
lret
pop
inc
and
and
and
xchg
inc
enter
std
cli
movsl
iret
adc
sbb
cmp
cmpsl
and
mov
cmp
cs
inc
sbb
daa
outsb
sbb
sub
mov
ja
sub
or
mov
sbb
or
clc
call
mov
sub
ret
sbb
rcll
loope
scas
mov
jbe
pop
movsl
mov
icebp
inc
fistpl
data16
shll
adc
test
dec
inc
dec
sub
fldenv
adc
adc
es
hlt
sbb
mov
fidivl
lea
ljmp
cmp
cmp
adc
ret
je
jbe
leave
xor
je
sub
lret
sbb
popf
xchg
push
lret
pop
jnp
insl
mov
push
cmp
mov
sbb
sub
add
add
inc
push
sti
and
leave
and
mov
popf
rolb
sbbb
push
add
jo
test
jb
mov
sub
cmpsl
imulb
int
mov
insb
insb
cmpsb
dec
ret
loop
ljmp
push
rcrb
test
pop
jb
clc
dec
mov
mov
push
cmpsl
rorb
pop
push
jp
and
mov
xlat
rcl
pop
orb
loop
inc
shr
and
jge
ret
cmp
test
xchg
jnp
jns
popl
lret
push
les
add
mov
cmp
std
dec
fs
pop
insl
sbb
fdivs
test
push
pushf
out
push
movsl
mov
pop
dec
jp
sub
rcll
inc
jnp
out
roll
or
std
mov
adc
push
xchg
pop
in
pushf
icebp
or
push
insb
push
xchg
lcall
sti
jmp
mov
or
sbb
je
movsb
pop
or
add
mov
lds
cmp
ja
inc
and
cmpsb
xlat
inc
incb
je
dec
mov
push
cmc
sub
push
mov
cltd
ja
pop
dec
dec
fsub
out
fcmovnb
sub
test
mov
sub
imul
sub
iret
aam
sbb
and
adc
push
push
cmpl
cmc
and
pop
mov
jns
pop
or
push
xor
fisttpll
in
dec
rcll
das
dec
not
dec
sub
add
inc
add
push
arpl
mov
ljmp
cmc
insb
pop
mov
in
jnp
cltd
call
lcall
jo
dec
add
outsl
cmp
lods
jp
lahf
jmp
loopnew
hlt
mov
adcb
or
xchg
sti
inc
cwtl
shl
scas
jl
test
mov
jb
xchg
pop
icebp
sahf
sub
jns
dec
pushl
push
sbb
mov
call
xchg
sub
ret
ficompl
jns
or
pop
add
mov
push
push
mov
mov
adc
add
adc
jp
xor
dec
push
movsl
inc
mov
aas
int
and
sahf
sbb
ret
outsl
clc
inc
pushf
jmp
jmp
dec
fildll
and
and
dec
les
int3
loopne
mov
icebp
adcb
ds
xor
mov
dec
jl
mov
inc
int
add
clc
loope
aad
iret
int
popf
sbb
or
mov
lahf
sbb
in
repnz
shll
ljmp
pop
aas
testl
jne
cmpsl
les
xor
lret
out
popa
cmpsl
out
fwait
cmp
ret
mov
push
fdivl
lods
imul
xchg
filds
sbb
and
test
in
xchg
pop
movsb
mov
lods
lret
xor
fldcw
js
in
dec
add
std
and
fistpll
scas
xor
loope
sbbb
dec
pop
pop
cmp
rcrb
push
sahf
sbb
je
jae
shrl
push
fdivrs
jmp
or
push
mov
inc
push
mov
cwtl
fsincos
xchg
sub
lahf
mov
jle
jmp
xchg
dec
xchg
adc
shrl
loopne
or
xchg
and
repnz
les
mov
lea
shlb
xchg
arpl
dec
mov
inc
add
and
imul
sub
xor
adc
xchg
out
lods
adc
sub
jl
das
test
leave
sub
nop
mov
mov
cmp
sbb
rcl
cmp
lock
flds
mov
mov
sub
pusha
outsb
repz
or
mov
mov
fisubrs
aad
fistpll
sarb
outsl
pusha
mov
and
inc
mov
mov
dec
je
xor
xchg
insl
cmpsl
xchg
or
and
or
inc
pop
push
push
xor
movsl
loopne
mov
inc
cmc
xor
cmc
or
xor
push
outsl
or
sub
ja
pop
dec
or
roll
lock
mov
cltd
add
fidivs
sahf
repz
outsl
mov
imul
mov
xchg
out
inc
andl
xchg
add
dec
mov
cmp
repz
sti
cmp
cmp
or
lcall
fldcw
or
jnp
adc
dec
aas
add
push
ret
pop
in
outsl
mov
xlat
cmpb
jns
jne
loop
loop
jb
xor
xchg
cwtl
dec
pop
cld
das
test
mov
loop
fnstsw
loop
push
repnz
mov
cmp
lock
sti
cld
ljmp
push
ds
loopne
jo
add
int3
jb
cmp
js
outsl
or
out
mov
test
cld
xchg
mov
pop
mov
mov
push
xor
js
or
ja
movsl
cmp
ret
mov
inc
jmp
mov
das
mov
in
rcl
mov
jmp
cli
jmp
add
test
dec
jne
sub
xchg
mov
jmp
push
and
lret
dec
outsl
mov
mov
jnp
add
movsl
idivl
dec
mov
pop
mov
insl
lahf
lcall
xor
dec
dec
pop
daa
push
xchg
call
js
xor
in
imul
outsl
cmp
popf
and
popa
xor
mov
jmp
jmp
fistpl
sub
rcrb
push
ja
in
in
lcall
sti
ficompl
add
cmp
xchg
pop
adc
out
sbb
cmp
outsl
sbb
sbb
add
pop
hlt
rclb
cmc
mov
sahf
scas
fwait
lock
inc
aam
into
and
inc
add
outsl
loope
enter
jmp
jns
outsb
mov
sti
inc
sbb
jmp
insb
mov
xchg
ret
scas
test
xchg
mov
test
mov
adc
cmpsl
nop
adc
shll
inc
data16
inc
fs
test
pushf
int3
pop
add
iret
jge
aas
adc
out
sub
sub
jns
imul
or
jmp
dec
pop
push
jmp
xorl
pop
adc
movsb
out
les
dec
idiv
mov
clc
jecxz
or
lcall
test
inc
test
mov
mov
mov
mov
cmp
xor
sub
mov
loop
pop
inc
sub
dec
push
in
popa
orb
xor
xor
lods
dec
and
pop
add
xor
cmp
adc
or
mov
jbe
mov
pop
sub
fidivrl
fldcw
fs
pusha
mov
je
ss
pop
pop
mov
pop
in
enter
and
jecxz
add
adc
jle
mov
and
ja
push
aas
std
cmp
loop
imul
push
push
cmp
mov
into
lock
or
pop
inc
repz
scas
js
divb
int3
cmp
or
sbb
sbb
cmp
in
xchg
ss
cmp
pop
shlb
jle
inc
dec
add
push
loope
cmpsb
out
and
sbbl
sbb
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
addl
push
mov
mov
sub
imul
push
xor
or
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
movl
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jg
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
sub
mov
mov
and
mov
andl
xor
or
inc
mov
cmpl
ja
jmp
push
pushl
push
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xorl
mov
xor
mov
movl
cmpl
je
cmpl
jg
jmp
call
mov
dec
mov
jmp
mov
sbb
sub
mov
sbb
orl
mov
mov
adcl
sub
mov
orl
movl
cmpl
je
cmpl
jb
jmp
call
mov
dec
mov
jmp
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
neg
push
adc
push
push
xor
movl
mov
xor
xor
sub
add
lea
sub
mov
subl
movl
xor
lea
add
mov
xor
mov
or
mov
mov
mov
sub
imul
mov
andl
xor
add
inc
mov
cmpl
jle
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
xor
mov
add
xor
mov
mov
mov
mov
add
and
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
xor
mov
sbb
mov
mov
add
cmp
movl
je
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
push
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jl
jmp
call
jmp
mov
or
movl
cmp
movl
jne
movl
cmp
jne
movl
push
movl
push
movl
jmp
not
mov
mov
cmp
jne
movl
cmp
jne
movl
push
push
jmp
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
movl
jne
push
movl
push
jmp
mov
mov
cmp
movl
jne
movl
cmp
movl
jne
push
push
movl
jmp
movzbl
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
jne
sub
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
jmp
mov
jae
jbe
cmp
add
sti
or
mov
jnp
adc
hlt
fidivrl
push
out
gs
jmp
jl
xchg
addl
stos
push
pop
dec
int3
xchg
fcmovne
inc
in
dec
xchg
adc
das
xchg
adcl
mov
aas
and
xchg
cmp
test
ss
and
inc
leave
adc
out
xchg
mov
fdivl
fnsave
scas
or
ret
lea
ret
xor
push
push
mov
rcl
cmp
xor
adc
jne
jnp
push
fucomip
cmp
jbe
es
int3
les
ret
adc
push
or
mov
stos
loopne
cmp
call
outsb
inc
xchg
data16
subl
sbb
lcall
pop
cwtl
mov
ds
fs
lcall
ffreep
inc
pop
sub
and
pop
es
test
mov
cmc
andl
cmpsb
cmp
out
aad
int
xlat
or
fwait
sbb
mov
lret
out
push
lret
out
push
repz
repz
mov
rolb
aas
cmp
je
cmp
inc
loop
sti
xor
stos
cmp
xor
jb
cmp
push
inc
xchg
test
orb
push
jns
mov
testl
mov
movsb
pop
bnd
pop
adc
movsb
push
jecxz
and
sbb
leave
inc
pop
test
or
cs
push
dec
push
js
out
jae
pop
xchg
movsb
push
or
mov
dec
xor
nop
fwait
cmp
dec
and
hlt
arpl
pushf
mov
hlt
cwtl
cmove
sbb
push
ds
sub
fwait
movsb
xor
loopne
push
popa
cltd
out
mov
sbb
mov
rorl
scas
mov
and
mov
imul
mov
pop
xlat
cmpsl
mov
sbb
lock
jge
out
push
mov
mov
jne
insl
jno
mov
cli
lea
jg
xchg
pop
bound
sub
jmp
sbb
inc
test
into
aaa
sbb
xorb
ret
add
xchg
sub
fs
out
or
in
addl
or
stos
sub
in
sub
and
nop
push
pop
mov
and
add
cmp
ret
stc
scas
dec
cmc
lods
popf
mov
pop
cld
add
push
xchg
dec
push
dec
jge
mov
leave
push
in
push
mov
xchg
aas
sti
aas
pop
xchg
add
mov
mov
dec
sbb
mov
pop
add
adc
scas
negl
add
in
lcall
int3
lods
inc
push
insl
mov
popa
xchg
mov
notl
addr16
out
adc
ja
xor
jns,pt
mov
add
rclb
jmp
nop
cs
out
and
cmp
and
scas
gs
xor
pop
cmp
sbb
push
iret
mov
loop
push
daa
ret
xchg
in
loop
and
lret
sub
and
sub
mull
push
sub
je
jae
push
jbe
xor
and
add
mov
jbe
pop
icebp
rcr
repnz
pop
negl
adc
pminub
mov
jmp
movsb
sbbl
xchg
mov
push
icebp
enter
xor
push
and
shrb
scas
mov
addr16
sti
cmp
mov
ja
imulb
sbb
ret
sbb
fwait
cwtl
mov
pop
adc
testb
xor
push
jne
sub
sub
repnz
xchg
cmp
dec
shll
sbb
ja
push
es
and
imul
cmp
dec
and
pusha
inc
add
or
cmpl
test
mov
fistl
mov
push
xor
mov
and
hlt
and
rorl
mov
or
popf
mov
adc
fbld
or
xchg
jnp
and
das
dec
loopne
stos
mov
lds
pop
ljmp
outsl
rcrl
pop
cld
mov
or
shlb
xchg
outsb
mov
xor
dec
in
stc
push
je
sub
ret
or
adc
stc
outsl
mov
pop
sub
clc
xchg
pushf
mov
mov
in
push
cmp
iret
fidivrl
pop
cmp
fwait
in
shrl
cmp
fdivr
mov
loopne
jmp
fsts
nop
dec
and
repz
movsb
es
mov
cmp
arpl
popf
je
mov
dec
rol
pop
jle
cmp
enter
jne
iret
cli
outsb
repnz
pop
lds
xchg
push
ficoml
xchg
sbb
sbb
in
les
subl
cltd
stos
xchg
xchg
push
dec
xor
sti
mov
and
out
pop
imul
mov
shrb
jl
push
sti
lock
insb
pop
fwait
sbb
xor
aam
jmp
mov
ja
cmpsl
push
clc
pop
cmc
inc
push
sub
js
movsl
xchg
in
sahf
jmp
lock
xchg
jecxz
pop
cltd
cmpsl
repnz
mov
cwtl
dec
mov
pop
mov
outsb
xchg
jae
mov
dec
push
mov
cmp
add
jge
addb
outsb
lods
inc
notb
cmp
or
ret
inc
stc
xchg
xor
push
mov
loop
pop
idivl
insb
cmp
cs
and
add
pop
mov
mov
mov
pop
jnp
cmpl
out
cmp
inc
popa
inc
jmp
and
inc
mov
test
push
xor
push
jns
aaa
inc
out
mov
sbb
pop
scas
pusha
and
in
inc
add
pop
push
loopne
fdivrs
pop
add
mov
fiaddl
je
lret
mov
mov
arpl
mov
push
mov
mov
inc
mov
push
mov
cld
mov
xorb
xchg
cmpsb
pop
das
and
icebp
inc
inc
stos
gs
lock
jb
test
in
adc
dec
add
aas
pushf
popl
cltd
mov
xor
push
iret
pop
xchg
xchg
movsl
fisttps
xchg
lcall
add
and
fistpll
and
push
in
push
loope
es
mov
adc
aaa
mov
cmp
sub
and
mov
fidivl
cwtl
fnsave
adc
movsl
je
or
inc
pushf
stos
or
lock
inc
cmpl
push
jmp
mov
xchg
sub
testl
aam
cmp
bound
push
push
mov
push
bound
add
and
jnp
sbb
and
daa
repz
and
or
sbb
mov
sbb
fsts
xchg
dec
out
out
mov
inc
call
lds
push
push
das
mov
sub
jae
loope
xor
sbb
push
lcall
add
test
aam
sub
js
adc
arpl
inc
lret
mov
mov
jns
movsb
mov
fwait
jns
mov
iret
sub
cmp
test
test
adc
sbb
call
adc
pop
push
jno
push
into
lcall
mov
fisubrs
xor
jge
or
mov
xlat
cmp
mov
mov
push
cmpsb
or
mov
fdivrl
popa
stos
lods
jecxz
or
or
orb
das
adc
das
pop
or
fs
sarl
push
pop
push
jecxz
sub
pop
fcomps
cmp
push
or
cmc
jo
mov
xor
lret
inc
loop
mov
jnp
ret
lods
inc
jae
imul
in
jl
xchg
popa
stos
xchg
lock
bound
int3
adc
or
addb
pop
sahf
dec
rcrl
dec
rcrb
orb
or
mov
add
lds
mov
or
shll
jmp
negl
mov
pop
idivb
nop
mov
xchg
hlt
pop
pop
sti
inc
lods
repz
pop
dec
cmp
icebp
and
pop
js
add
scas
inc
aas
loop
jns
lea
sti
imul
ds
adc
pop
push
dec
inc
test
xchg
scas
push
outsl
and
clc
movsb
jp
or
loopne
mov
push
push
jo
dec
push
popa
je
mov
mov
in
es
pop
mov
or
add
das
cmp
mov
mov
das
jne
sub
cmpsb
in
and
out
outsb
jg
or
and
ret
dec
mov
jecxz
mov
xchg
mov
or
fs
lcall
lahf
xchg
shll
popf
cltd
nop
outsb
mov
fcomps
push
sub
pop
or
loope
mov
mov
andb
gs
jmp
lds
sbb
outsb
int3
jne
and
push
xchg
and
mov
addr16
data16
scas
cmp
mov
call
add
enter
in
push
and
jmp
mov
std
inc
mov
orl
xor
dec
pop
fwait
jg
dec
inc
add
aad
cmp
fidivrs
and
mov
fimull
jp
dec
stos
dec
std
sarb
sbb
pop
inc
jae
lahf
mov
lea
loopne
inc
or
in
aaa
cli
push
test
xor
ret
sub
into
jecxz
scas
jge
aad
pop
insb
dec
xor
adc
mov
shll
lea
stos
fisubrs
or
imul
xor
mov
data16
pop
mov
inc
and
inc
pop
dec
mov
out
add
adc
loopne
jb
add
icebp
fadds
fdiv
cmp
xor
push
and
xchg
xchg
sbb
xor
adc
insl
faddl
enter
mov
push
jnp
gs
adc
std
mov
and
imul
cltd
imul
inc
and
sbb
mov
xor
jb
int3
push
xchg
ljmp
fdivs
scas
jne
or
push
and
fmul
leave
pop
mov
ljmp
fisubrs
cmp
scas
cmp
pop
or
popf
and
shl
adc
lahf
cld
fcmovne
xor
dec
mov
mov
inc
lret
pop
or
push
pushf
lock
dec
mov
push
adc
jmp
fwait
cli
aad
mov
cmp
cmp
push
lret
shrl
or
mov
insb
out
lods
lret
and
hlt
mov
aas
shrb
sub
arpl
sbb
lock
mov
mov
outsl
xor
ds
sub
jmp
sub
and
dec
jnp
add
xchg
pop
pop
adc
push
ja
xchg
test
pop
cmc
xor
inc
xchg
xor
outsb
add
pop
dec
xlat
int
sbb
sub
das
jp
jnp
notb
ret
jno
push
lods
aam
adc
mov
stos
pop
stos
and
lods
mov
pop
into
frstor
das
cmpsb
mov
mov
call
bound
cmp
in
jns
int
sub
xsave
mov
mov
enter
xchg
xor
out
mov
mov
mov
lds
cmpl
adc
ds
push
aad
xchg
and
jge
sahf
sbb
cmp
xchg
sahf
fs
inc
xlat
mov
mov
dec
xor
cltd
in
xor
lret
lahf
pop
ds
push
lock
mulps
xlat
mov
loopne
orl
and
sub
and
and
dec
mov
jno
fs
mov
iret
cmp
mov
jmp
repnz
jb
pop
push
mov
xchg
movsb
imul
cmp
push
lods
jmp
sub
sbb
outsl
fwait
push
in
shll
and
mov
push
or
xchg
xor
mov
sub
lea
sbb
lcall
jge
stc
gs
lods
fstl
lret
repz
xor
insb
fldt
jnp
lods
mov
add
push
mov
adc
dec
push
xchg
push
inc
dec
inc
into
in
outsb
imul
mov
test
xchg
aam
loope
xorb
pushf
negl
movsb
nop
out
cmp
enter
lods
popa
sub
mov
dec
xchg
std
adc
enter
and
and
jns
cli
shll
stos
repz
inc
cli
xchg
adc
das
popa
scas
sbb
int3
inc
adc
test
mov
cwtl
in
dec
popl
or
enter
ret
mov
ss
movnti
aaa
out
scas
mov
rcll
or
loop
andl
enter
sub
outsb
and
shrl
fnstsw
sti
mov
in
dec
scas
sbb
lret
gs
clc
cmp
pop
lock
xorl
and
ds
push
fdiv
jmp
sub
cmp
cmp
pop
mov
test
in
mov
shrb
xchg
dec
fst
inc
mov
js
mov
fsubrl
cld
movsl
push
push
push
je
jmp
jne
adc
testl
pusha
icebp
int
pop
aaa
lods
out
rclb
aad
jecxz
jne
cmp
cmp
insl
pop
lret
pop
and
adc
scas
jp
and
hlt
push
dec
loop
add
call
mov
fsubp
out
mov
ljmp
dec
mov
mov
pop
cli
sbb
insb
mov
push
stos
mov
push
jb
dec
and
testb
jle
mov
movsl
ja
cs
or
imul
mov
clc
fpatan
inc
mov
movsl
movsl
popf
xlat
insb
sub
mov
lock
jae
pop
fs
call
std
xchg
cltd
inc
jg
jl
outsl
lea
lahf
jb
cs
or
movsb
jno
xor
sahf
pop
adc
push
xor
sub
popa
pop
inc
mov
adc
into
pop
adc
enter
jne
in
outsl
loop
ret
loop
call
les
popa
mov
test
enter
lret
hlt
sub
xchg
and
testl
and
inc
push
lcall
jo
into
adc
inc
dec
add
loope
and
ja
sti
dec
or
les
pushf
lret
mov
pop
das
adc
sub
jge
stos
test
jbe
rol
testl
fidivrs
mov
icebp
clc
icebp
adcl
sahf
xchg
pop
push
outsb
ret
out
mov
cmpsb
shlb
xchg
std
add
int
push
sbb
pop
jl
lods
jno
cld
adc
ss
mov
dec
ljmp
mov
push
mov
out
xor
dec
js
sub
or
jns
mov
cmp
fcomps
mov
int
push
ja
les
fisttpl
jnp
or
movl
sbb
mov
insl
repz
xchg
sbb
pop
aam
scas
lea
sbb
lahf
mov
sbb
insb
aam
cmpl
sub
cmp
mov
mov
sbb
cs
inc
loopne
cmp
cmpsl
into
xchg
mov
aam
cs
leave
sub
jl
imul
shll
movsb
dec
jb
gs
sti
xchg
outsl
stos
test
stos
inc
nop
jle
jmp
testb
clc
or
xchg
xchg
jne
in
cmp
mov
cwtl
int
jle
jbe
orb
ss
pop
rcrl
add
pusha
jno
push
sbb
or
in
pop
fs
neg
add
fwait
xchg
cmp
mov
sbb
mov
mov
xlat
add
cld
jne
cs
out
and
add
sbb
push
lock
and
pop
mov
dec
ds
int3
out
test
andl
cmpsb
sub
sbb
cmp
inc
dec
push
fildl
bnd
jbe
xchg
cmpsl
mov
pop
ja
jae
push
mov
jecxz
ja
cltd
or
mov
dec
push
or
lret
insl
jl
aas
in
ds
repz
gs
push
xchg
jns
mov
and
gs
inc
mov
jle
out
inc
std
mov
in
mov
mov
sub
out
sbb
inc
add
xchg
pop
pop
push
and
in
fsubrl
dec
leave
pop
sbb
stos
dec
ja
sti
mov
mov
sub
push
sarl
daa
and
aam
bound
mov
jns
jge
jg
rcl
pusha
cmp
stos
mov
pop
gs
sbb
pop
incb
fstpt
pop
outsl
popa
jbe
clc
push
jae
fimull
jmp
test
or
outsl
jg
mov
lahf
lds
stos
insb
fscale
sub
ret
arpl
outsl
mov
loop
mov
xor
xchg
adc
jl
cwtl
sbb
aam
sbb
xlat
mov
test
dec
mov
sub
ret
mov
aad
notl
sahf
mov
pop
xchg
add
stc
dec
clc
add
push
push
inc
sub
or
test
add
lcall
and
iret
mov
cmp
add
inc
sub
stos
test
pop
icebp
sub
mov
sbb
jo
jb
jo
fsts
fisubl
add
inc
fs
orb
inc
jbe
xchg
loop
nop
jmp
jge
lahf
into
mov
xchg
loop
iret
pop
push
bnd
xor
test
lods
pop
fadds
daa
mov
adc
popf
cwtl
add
lock
sbb
push
addl
sbb
add
loope
into
lods
inc
cli
mov
xchg
data16
nop
and
fs
inc
lds
push
rolb
sbb
aam
inc
jo
fisubrs
mov
cmp
jo
add
or
in
dec
int
movd
cltd
or
loopne
sti
in
xchg
add
adcl
and
mov
sub
jg
fmull
xchg
xlat
jns
subl
ret
test
clc
mov
sub
movsb
scas
jecxz
fs
cwtl
mov
or
clc
pop
jne
out
mov
aas
push
in
pushf
mov
xchg
xor
xchg
inc
xor
jns
mov
add
push
push
ret
fdivrs
loop
daa
xchg
mov
inc
nop
mov
mov
and
cmp
cmp
xor
cmp
je
cmp
push
call
sub
mov
pop
ja
lret
shlb
inc
or
sub
add
pop
out
mov
fists
cmpsb
aam
push
push
inc
mov
sbb
jg
mov
dec
push
daa
jp
out
mov
enter
mov
cli
into
mov
popf
setbe
xlat
jecxz
pop
mov
lods
into
dec
aas
xchg
out
inc
cmp
out
stc
sbb
xor
or
ror
add
lcall
aam
sub
jbe
leave
std
sub
movsl
pop
and
add
std
xlat
mov
cmp
xchg
dec
xorl
cmp
out
xor
stos
aad
das
mov
mov
adc
stc
or
inc
push
pushf
mov
xor
push
lods
mov
imul
inc
or
call
fcoml
loopne
test
movsb
xor
dec
jno
jnp
xchg
inc
cwtl
jns
inc
shl
sub
pusha
mov
or
mov
les
aad
jns
mov
cmp
mov
xchg
cmc
dec
xchg
mov
jae
xchg
notb
add
pop
dec
add
push
lea
dec
dec
lds
popa
mov
lret
mov
repnz
add
insl
xchg
or
addb
xchg
xchg
mov
or
add
lret
sub
les
mov
push
mov
cwtl
rol
repnz
jecxz
pop
outsb
ret
dec
pusha
pusha
push
mov
cwtl
shrb
xlat
les
ss
and
mov
pxor
jb
out
xor
std
rorb
xchg
mov
int3
fcompl
xor
popa
lods
mov
roll
dec
or
cmp
and
add
ljmp
aad
mov
aaa
adc
lahf
lock
fldt
mov
std
ss
fs
or
xchg
leave
push
js
dec
mov
cs
push
mov
xor
xor
push
or
mov
inc
jle
in
pop
mov
int3
aaa
aaa
aam
in
xchg
pop
sbb
std
pusha
shrb
pusha
jp
push
hlt
cld
test
xor
mov
push
mov
iret
jne
shrl
mov
ficompl
cmp
je
addr16
std
push
imul
lcall
jmp
ljmp
inc
repz
ret
data16
mov
cmp
add
lods
cmp
insl
lock
loope
ds
jnp
repnz
test
aaa
addr16
add
xchg
xor
fcoms
icebp
adc
mov
pop
scas
sub
daa
les
pop
sub
mov
andl
dec
pop
mov
mov
sub
loop
mov
sti
call
popf
shrb
sbb
mov
es
dec
pop
sub
sahf
xchg
mov
fisttpll
sub
dec
or
xor
add
lods
nop
inc
stos
out
movsb
cmp
rolb
mov
mov
inc
sbb
icebp
adc
aam
sbb
aam
add
fldcw
cli
pop
mov
daa
push
mov
shl
push
mov
pop
and
repz
mov
push
inc
inc
cmpsl
mov
sub
sti
xor
ds
and
fiaddl
inc
test
mov
jecxz
in
add
xor
mov
std
rcl
insl
popa
shlb
cs
or
dec
xchg
xlat
enter
repz
mov
lahf
cmp
repz
mov
int3
sarb
dec
dec
cmp
push
lods
insb
jg
iret
push
addr16
sub
mov
pop
cmp
mov
sbb
push
sub
inc
addl
daa
and
dec
sub
mov
int
fxch
push
xchg
test
test
bound
mov
into
stos
hlt
dec
out
ds
out
cltd
dec
sub
push
push
sub
push
ljmp
int3
sub
mov
out
ss
repz
push
adc
dec
aad
movsb
outsb
cs
jecxz
fwait
dec
je
inc
xchg
lock
cs
push
cmp
add
faddp
stos
cs
sahf
lea
mov
fisubl
mov
push
rcr
xchg
xor
jb
hlt
inc
iret
dec
jae
mov
aas
jnp
call
pushf
rorl
cmpsl
add
jae
addl
mov
mov
push
insl
fmul
mov
cmp
lret
js
std
xchg
mov
pop
mov
in
sbb
sbb
sub
in
cmp
mov
xchg
shr
and
dec
pop
dec
sub
fsubrs
inc
icebp
jmp
clc
lods
sub
scas
fwait
or
xor
lock
outsb
lods
fs
sahf
sbbl
push
mov
rcr
test
pushf
aam
push
imulb
test
and
xchg
xorl
add
movsb
push
mov
cmp
pop
xor
push
xor
mov
sub
out
ljmp
adc
movsl
rcrb
addb
mov
nop
nop
push
or
pop
xor
mov
and
inc
jnp
cli
nop
xchg
and
int
sub
dec
jp
add
mov
js
fbld
mov
sub
jnp
in
dec
pop
pop
mov
mov
jecxz
add
sbb
in
xor
or
push
in
aaa
clc
out
test
int3
sub
jnp
clc
outsb
mov
xchg
jmp
outsb
push
in
xchg
add
hlt
outsb
sub
int3
add
xchg
pop
sbb
or
mul
imul
add
sbb
lods
dec
cmc
sub
ds
inc
nop
cmp
lret
xor
fs
shlb
jmp
mov
int
out
scas
fsubrs
xor
arpl
xchg
cld
imul
cmc
lahf
and
xor
inc
or
lahf
repz
mov
into
cmc
cld
inc
ljmp
adc
xchg
mov
mov
xchg
xchg
jg
mov
out
push
xor
out
ljmp
nop
cld
stos
popa
push
mov
pop
imul
dec
push
xlat
xor
push
in
stos
cmp
adc
les
icebp
mov
jl
mov
xchg
add
mov
pop
jg
fisttps
lds
inc
jp
push
rcrb
sbb
in
fnsave
outsl
mov
mov
mov
cmpsb
and
sub
xor
cli
int3
cmp
rcrl
ljmp
mov
jbe
loope
adc
scas
sbb
or
xor
stos
int
sar
lock
sub
jb
inc
xchg
xor
rolb
scas
and
ffree
ss
cltd
icebp
repz
imul
or
ficompl
loopne
cwtl
push
dec
lret
mov
xchg
or
movsl
mov
push
mov
xchg
add
xchg
mov
xor
mov
test
cmc
xor
lods
stc
pop
sub
mov
or
sbb
inc
mov
inc
lahf
test
jmp
jg
sub
mov
shll
pop
push
in
cmp
cmpsb
cmp
imul
dec
rolb
xor
adc
inc
pop
or
adc
xor
xchg
test
cvtps2pi
and
xchg
push
jne
fisubrs
inc
in
pop
xor
les
js
dec
jbe
inc
pop
pushl
out
inc
inc
aam
out
mov
lcall
and
jo
test
cmc
and
flds
adc
pop
mov
loopne
adc
mov
or
fldl
cltd
call
bound
push
andl
fidivl
pop
jp
inc
and
cmp
jns
xchg
mov
pop
movsl
rolb
mov
adc
mov
inc
xchg
call
subl
int
xchg
out
outsl
inc
aaa
jecxz
dec
jecxz
imul
addb
rcll
sbb
inc
ret
gs
and
cld
pop
es
inc
mov
out
inc
pushf
popa
xchg
pop
push
fs
js
add
call
cmpsb
cmpsb
cld
cld
jg
js
mov
pop
xchg
push
test
push
loope
jae
ljmp
sub
xchg
push
sahf
imul
ljmp
push
nop
fidivs
mov
dec
jmp
xor
cmp
imul
xor
mov
sbb
cmp
sti
bound
js
lea
or
testl
add
xor
jo
push
push
cmp
jbe
push
lcall
xchg
xchg
js
dec
and
scas
loop
mov
mov
ds
cmp
xor
fistl
push
and
mov
fdivrs
mov
in
cmp
insb
stc
sub
bound
dec
faddl
mov
fucomp
sub
xchg
push
rorl
xchg
sub
push
mov
inc
and
adc
int3
out
xor
pop
mov
rcrl
sbb
xor
scas
lret
out
cmpl
pushf
andl
mov
mov
adc
clc
and
jne
jae
lods
movsb
xchg
push
js
push
pop
sbb
pop
inc
stos
xchg
and
daa
and
js
add
test
imul
dec
sbb
loopne
sti
arpl
adc
lahf
stos
repnz
gs
sarb
jmp
dec
or
push
ficoml
out
in
mov
test
jne
popf
lret
push
notb
outsl
scas
ficompl
test
sbb
test
jl
mov
mov
mov
cwtl
jns
inc
ljmp
mov
shlb
repnz
out
subb
jle
fs
mov
xchg
pop
or
lock
pop
jae
shrl
xor
adc
call
jmp
dec
mov
clc
or
sub
and
out
cmpsb
mov
ficompl
xor
dec
lret
pushl
push
imul
sub
aas
pop
fnstcw
js
dec
pop
test
xchg
jl
mov
mov
and
pushf
cmp
lods
sbb
mov
cmp
push
mov
call
dec
data16
stc
icebp
sbb
push
call
add
sub
daa
inc
testl
loop
fs
fidivrs
js
lods
les
frstor
es
sub
daa
adc
subb
xor
dec
out
cwtl
or
rorl
mov
lret
out
jecxz
test
test
mov
loopne
scas
dec
pop
and
outsl
adc
in
cmpsl
adc
xor
sbb
sbb
and
xor
push
sti
mov
hlt
das
in
ds
jle
lock
lcall
sbb
pop
jge
xchg
lret
movsb
pop
outsb
in
sahf
cmp
icebp
inc
cmpsl
mov
jecxz
aam
test
adc
js
add
testl
jae
aad
mov
pop
or
sti
xchg
nop
stos
pop
add
inc
xchg
push
mov
adc
ds
xor
jns
cmp
loope
xor
xor
leave
or
push
out
es
fimull
dec
loopne
mov
loopne
stos
mov
testb
gs
jecxz
and
push
sbb
pop
cmp
test
add
fucomi
push
out
xlat
pop
data16
cltd
jo
and
cwtl
push
fistpl
dec
cmp
imul
mov
aas
adcl
add
or
jne
or
pop
gs
mov
push
mov
fs
jecxz
xor
xor
outsl
outsb
push
or
inc
mov
lret
add
mov
shll
aaa
mov
adc
icebp
dec
mov
mov
and
cld
sarb
cli
jno
xor
mov
test
sub
mov
add
icebp
imul
gs
fld
push
lea
mov
loop
mov
adc
out
sbb
mov
cmc
xchg
aad
mov
out
loop
fadd
xor
outsl
int3
inc
adc
pop
mov
pop
inc
ljmp
dec
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
jmp
dec
mov
imul
pop
inc
jbe
cmc
fnstsw
call
add
lods
movsb
in
ret
scas
xchg
in
mov
adc
xchg
sbbb
push
fsubl
movsl
add
sub
jnp
add
sahf
adc
shll
shll
mov
mov
jge
mov
adcl
cmc
inc
rorb
stc
js
or
pop
dec
and
mov
adc
or
jecxz
mov
mov
cmp
jge
push
jae
insl
mov
movsb
insb
test
push
or
adc
lea
jnp
add
jae
cwtl
push
jmp
leave
iret
add
cmp
dec
jmp
aad
mov
in
jmp
mov
or
cmp
mov
pusha
adc
jo
and
xchg
sub
ja
hlt
out
push
lcall
scas
jnp
mov
sbb
loop
fcmovbe
cmp
fs
sub
in
pusha
or
fdiv
add
sub
xor
cmpsb
leave
xor
pop
arpl
push
dec
les
mov
insb
outsl
mov
adc
sbb
in
jle
ljmp
push
aam
jp
movb
and
shrb
add
push
pop
clc
or
cwtl
xor
lods
mov
outsb
out
jmp
sti
add
lret
pop
push
sarl
scas
aaa
xchg
xor
pop
add
inc
scas
nop
loopne
dec
sbb
and
inc
stos
xchg
inc
pop
ret
lahf
mov
fstps
clc
mov
icebp
push
adc
sti
ds
adc
cld
jl
or
leave
insb
add
mov
or
mov
pushf
mov
sbb
movsb
push
aad
rcrl
push
pop
in
mov
incl
hlt
int3
push
bound
fnstenv
jne
or
out
gs
jge
cmpsb
dec
insb
pop
lahf
adc
xor
mov
js
cmp
je
xor
push
mov
and
ret
pop
ljmp
sbb
popa
pop
jp
push
lds
push
lods
lret
sub
inc
cmpsl
cmpsl
lea
mov
adc
lcall
int
lods
or
and
and
incb
push
repnz
mov
fsts
mov
popf
loope
add
xchg
jecxz
or
xchg
cld
fistpll
lods
ss
push
sub
dec
push
sahf
in
mov
out
adc
out
aas
sub
mov
sti
lock
stos
cld
push
lods
jae
cmp
outsb
repnz
outsb
out
ljmp
cltd
mov
scas
sub
repnz
pop
pop
or
ja
jae
rclb
mov
sbb
ret
nop
and
fwait
inc
out
lods
mov
les
inc
ja
xlat
negl
cmp
stc
test
pop
cmpsb
cltd
cmc
mov
xchg
push
ljmp
mov
scas
mov
pop
mov
jne
out
mov
pop
jae
rcrb
repz
add
sub
xchg
out
repz
xchg
jb
xchg
cmp
jo
int
mov
cmovle
push
and
sub
or
and
bound
imul
mov
mov
sarl
ljmp
pop
inc
aaa
jne
stos
mov
arpl
sub
imul
sarl
popf
out
dec
push
push
xor
push
and
lret
xchg
loop
ficomps
xor
hlt
sub
imul
xchg
xchg
popa
adc
sub
xchg
xor
inc
jp
mov
add
mov
inc
negl
std
cmp
rcr
pop
popa
lods
mov
add
mov
es
stc
shr
lds
scas
mov
or
push
push
pop
fwait
jle
jo
stc
sbb
jl
aam
xor
cld
sub
les
jno
inc
and
out
adc
and
push
cmpb
dec
into
push
fistl
and
lret
cmp
mov
add
mov
lds
pop
inc
sub
xchg
mov
repnz
and
cmp
inc
and
lret
pop
frstor
imul
and
mov
popl
jle
push
fdivl
loope
add
pop
mov
icebp
xor
adc
xor
loop
cmpsb
scas
dec
outsb
lea
out
pop
cld
orb
and
aam
xchg
popf
mov
dec
shrl
inc
xchg
jge
out
sub
sbb
jge
mov
mov
jbe
or
lods
ret
push
aam
ficompl
and
pop
or
jb
dec
sbbb
and
and
ljmp
and
jge
loope
mov
xor
or
cld
adc
insl
dec
mov
push
fwait
inc
xlat
pop
sbb
adc
xchg
das
mov
cmp
negb
mov
jge
mov
cmpsb
inc
inc
dec
mov
fnstsw
add
adc
push
mov
int3
mov
pushf
f2xm1
adc
fsubrl
ret
aam
addr16
pop
and
adc
mov
xchg
movb
push
ja
mov
cltd
mov
sub
andl
jmp
gs
mov
test
mov
in
jns
out
test
mov
pop
jle
aam
outsb
push
les
ja
test
mov
xor
stos
push
pop
mov
mov
adc
add
sub
sti
xchg
dec
jae
idiv
dec
mov
jnp
cwtl
out
jnp
or
andl
xchg
pop
popf
mov
mov
jge
cmp
subl
push
push
insb
cmp
sbb
inc
iret
ja
clc
jb
je
dec
fwait
ja
outsb
in
or
cmp
push
add
outsb
lcall
inc
or
clc
call
gs
adc
xchg
fcomps
cmp
lret
xchg
fs
gs
jae
mov
push
cmp
repz
cmc
jo
imul
addr16
subb
push
lods
jle
cmpsl
outsb
pop
movsl
popa
scas
icebp
rcl
daa
mov
std
lret
sub
add
push
xor
ret
fcoms
cmp
in
mov
mov
cmp
inc
lods
pop
pop
push
push
or
pop
mov
mov
jg
adc
ds
in
jae
idiv
push
xor
add
mov
cmp
mov
addb
into
test
cmp
jo
sarb
mov
mov
jecxz
fcomps
fdiv
stos
jns
xchg
repz
mov
pop
stos
sbb
mov
pop
push
xchg
sub
xchg
xchg
leave
mov
inc
fwait
adc
cmp
in
jnp
in
ret
jbe
cmp
ficoms
pop
cmp
xorl
jg
repz
cmc
mov
jo
call
mov
pop
test
nop
into
es
rorl
cmp
inc
push
lea
mov
fs
lcall
sbb
aas
in
dec
aam
in
sub
inc
adc
adc
add
lock
int3
jns
icebp
xor
sahf
lods
sbb
fsubrs
inc
mov
jb
jecxz
mov
fucomip
into
inc
scas
loop
cmp
jae
xor
xor
insb
inc
stos
rorl
jo
mov
cli
out
xlat
inc
pop
pop
fstps
inc
das
xor
repnz
mov
jne
push
mov
cs
inc
mov
cli
ljmp
or
ljmp
cmp
or
nopl
aas
aad
hlt
cmc
and
dec
adc
adc
lahf
into
lahf
shl
lret
mov
and
mov
jp
and
shrl
push
xor
xor
push
into
push
idiv
dec
inc
sbb
cmp
inc
pop
movsl
mov
addr16
out
sbb
xchg
push
pusha
dec
hlt
jecxz
pusha
inc
lret
rorb
and
xor
repnz
cs
cwtl
xlat
cli
pop
pop
dec
sbb
stos
nop
cmp
leave
ret
inc
push
inc
cmp
xchg
mov
fmuls
push
lret
add
outsb
lcall
or
loope
iret
pushl
mov
xchg
sub
cli
jne
das
icebp
mov
nop
out
es
loope
cmpsl
in
js
mov
std
or
and
add
testb
lods
sub
pop
rcrl
xchg
and
test
in
mov
or
sahf
shrl
add
imul
sahf
mov
cmp
ret
in
mov
fiaddl
in
arpl
loop
pop
pop
jp
sbb
push
push
std
daa
jmp
sub
in
leave
enter
test
scas
cli
pushf
enter
mov
mov
mov
into
bound
xchg
aad
mov
outsb
insb
jno
aad
or
cmpsb
lock
fwait
inc
or
push
inc
lds
jns
xor
aam
pop
stc
sbb
adc
jne
jle
mov
mov
jle
push
out
xchg
into
jne
add
and
popa
icebp
in
bound
push
mov
adc
xor
std
sub
xor
aam
add
out
bound
sub
and
sbb
xchg
das
add
in
cmp
cmpb
jmp
pop
fs
int3
aaa
jbe
pop
jg
dec
scas
mov
push
and
js
fs
les
cmp
in
sub
fnstenv
xchg
in
push
xlat
shll
cs
dec
lahf
test
sub
adc
xor
lcall
mov
sub
rcrl
stc
movb
push
pop
rolb
addb
xor
andl
shll
adc
pop
inc
xchg
adc
inc
jno
imul
jle
fsts
rcrb
js
mov
sbb
push
mov
fdivs
sbb
sub
lods
notb
mov
rorb
sbb
jb
sahf
cmp
fdivrl
test
or
test
or
inc
loop
aas
and
push
rcrl
mov
out
pusha
xlat
or
mov
mov
adc
in
push
pop
cwtl
push
fldl
mov
cwtl
jge
push
fidivrl
adc
cmp
or
jg
test
arpl
clc
repz
ffreep
cwtl
shlb
fildl
mul
and
call
xchg
dec
ss
pop
dec
push
mov
or
or
ds
faddl
sbb
std
pop
inc
pop
popa
push
cmpxchg
filds
adcb
xor
out
cmp
hlt
ljmp
les
adc
inc
mov
jb
nop
jnp
daa
mov
xchg
out
lret
cmpsl
pop
fdivs
add
sub
jmp
insl
pop
loop
jnp
xor
jb
push
xchg
cmp
sbb
add
xchg
jp
push
push
les
cmp
mov
stos
cmp
lods
sti
xchg
mov
rclb
push
das
into
sbb
shlb
xchg
mov
add
jb
xchg
mov
cs
je
aam
push
sub
fstps
das
fwait
mov
pusha
dec
jnp
cmp
movsl
jnp
imul
out
xor
or
xchg
push
stos
and
les
push
add
push
sub
je
push
pop
xchg
inc
push
or
add
repz
xchg
xor
les
cltd
les
js
dec
add
xor
cmp
and
sbb
ja
jo
loope
sarl
gs
xchg
std
push
and
and
inc
adc
push
mov
pop
loopne
push
push
imul
inc
push
loope
pop
rorb
mov
mov
inc
out
test
pop
scas
loopne
test
lcall
jmp
mov
popa
pushf
dec
xor
cmp
mov
dec
aas
out
sbb
mov
jo
enter
push
add
stos
mov
cld
mov
sbb
mov
aam
out
pop
jmp
xor
rolb
pop
or
xchg
lds
and
stos
xchg
out
out
lahf
pop
sbb
xchg
pop
add
mov
sahf
lahf
mov
imul
sbb
and
sbb
mov
dec
xor
pop
loopne
sub
mov
pop
cli
out
movsl
pop
fldt
or
sbb
and
lods
loopne
cmp
jno
dec
push
jmp
leave
cltd
mov
pusha
ljmp
movsl
mov
and
or
mov
mov
sbb
pop
inc
movsb
sub
cmp
push
dec
movsb
aas
xchg
or
rcrb
fs
push
sbb
xchg
addr16
mov
xor
xor
test
mov
lahf
pop
scas
or
loope
mov
dec
cli
rclb
imul
and
je
cmp
push
cmp
es
mov
rol
xlat
cmp
adc
dec
pop
stos
shrb
in
jmp
ret
outsl
idivb
lods
out
leave
dec
mov
inc
into
sbb
icebp
or
ret
fidivl
test
jp
inc
stos
dec
pop
test
aas
sub
cmp
mov
dec
int3
xchg
inc
loopne
inc
shlb
fldl
add
insl
sub
inc
pop
and
sbb
sbb
inc
inc
out
xchg
loop
pop
fs
dec
push
and
mov
fdivrs
loope
mov
add
adc
sbb
aaa
fdivp
mov
mov
insl
lahf
mov
movsl
sub
test
shl
mov
inc
popf
adc
cmpsb
loope
sar
mov
mov
mov
inc
mov
out
les
mov
scas
and
cmpl
jno
jo
stos
insl
addr16
in
lea
cwtl
mov
cmp
xchg
adc
sbb
push
lds
jge
mov
sahf
cltd
sbb
hlt
clc
push
cwtl
and
and
iret
push
iret
fwait
push
pop
test
push
inc
arpl
push
addr16
ret
divl
out
mov
xchg
push
outsb
cmc
popf
int3
sub
jne
cmc
xchg
jp
mov
repnz
mov
xor
frstor
sti
js
adc
pop
mov
xor
cmp
loope
in
mov
push
ds
in
sahf
sub
and
mov
loop
in
adc
jecxz
nop
sub
inc
xchg
xlat
sbb
push
pop
or
in
lret
add
mov
and
cmp
mov
in
insl
jle
pop
inc
push
xchg
stc
aam
and
jmp
cwtl
lods
pop
daa
pop
stos
lods
out
cmpsl
rorl
mov
mov
das
adc
mov
inc
pop
cmp
mov
cmp
xor
jo
xor
push
shl
mov
and
and
data16
mov
or
dec
mov
cli
xor
test
fwait
out
lods
mov
xchg
xchg
xor
movlps
push
add
pop
ja
push
dec
mov
mov
das
fwait
push
push
pop
imul
or
sub
mov
lods
aas
and
dec
iret
and
popf
or
les
xchg
movsb
std
adc
push
hlt
ja
cmc
push
das
inc
sub
xchg
xor
das
in
test
test
pusha
jo
aas
jno
cmp
pop
and
mov
and
push
not
lret
cltd
or
push
negl
imulb
stc
cmpsb
push
fiadds
ljmp
rolb
push
cmpsb
push
sbb
fildll
out
popf
jns
lret
inc
test
xchg
dec
das
inc
dec
fisttpl
cmp
mov
push
rcll
sub
lods
sub
jb
add
test
mov
add
dec
clts
or
rcr
adc
into
cli
inc
mov
fisubrs
mov
xor
cld
xlat
mov
sub
cmp
inc
inc
xchg
cwtl
aas
shrl
adc
push
jge
aaa
cmpsb
cmp
pop
and
out
add
push
sub
das
and
jnp
push
cwtl
adc
outsb
add
imul
adc
in
repnz
xchg
push
es
scas
adc
xor
stc
cmp
dec
or
ljmp
push
xchg
out
xor
cmp
xchg
adc
arpl
xchg
gs
cmp
adc
xor
xor
mov
aad
test
call
add
xchg
and
xor
mov
mov
test
inc
sub
mov
rcr
pop
loopne
cmpsb
and
mov
aaa
push
or
test
into
ret
mov
hlt
bound
test
inc
bound
lret
jbe
into
stc
loope
testb
shl
sbb
fbld
cmc
movsl
loopne
jae
push
and
push
dec
shl
pop
imul
popa
jmp
out
mov
frstor
pop
rcrb
movsb
lret
jg
adc
mov
loope
cmp
pop
scas
jp
dec
mov
popa
pop
int3
push
push
jle
or
dec
and
daa
stos
cmp
mov
lret
rcr
mov
jns
lahf
inc
xchg
mov
or
fsubl
cmp
xchg
cs
jmp
addr16
add
pop
xchg
or
mov
je
repz
in
sbb
je
add
lock
mov
jns
lea
jmp
cmpb
add
inc
jno
cmp
mov
stos
notl
aaa
jnp
mov
rcrb
jmp
xchg
pop
mov
jmp
cmp
dec
jl
lahf
jle
stos
xor
ret
or
mov
or
addb
clc
push
xchg
mov
sbb
xchg
pop
add
dec
mov
push
push
dec
pusha
add
sub
std
pop
sub
mov
es
cmp
lock
cmpsl
imul
add
jns
pop
hlt
dec
xchg
or
sub
and
adc
in
add
mov
addr16
push
dec
sub
stc
push
add
stc
stos
repz
mov
pop
in
ds
xchg
jns
or
lods
adc
enter
push
xchg
push
inc
pop
push
add
outsb
pop
call
fsubl
in
lds
ljmp
sub
xlat
loop
popa
add
data16
mov
pop
cmp
dec
inc
div
sub
pop
cmp
ret
jnp
inc
xor
add
test
bound
push
sbb
fisttps
test
cmp
cmpsl
cwtl
mov
les
sahf
in
inc
mov
jb
ret
lret
imul
pushw
and
cs
or
jge
rcrb
pop
rclb
test
or
push
cmp
cmp
in
and
fiaddl
dec
pop
pop
movsl
fldenv
jge
mov
xchg
lods
loopne
in
data16
xchg
xchg
aad
mov
adc
or
add
adc
gs
mov
mov
jmp
inc
ret
shrb
jno
arpl
pop
rcr
outsl
inc
fmull
cmpsl
ja
xor
bound
fwait
push
jo
or
subb
test
test
sarb
adc
insl
ja
mov
mov
adc
xchg
sti
lcall
fistpll
pushf
in
outsb
or
stc
mov
mov
mov
out
inc
xchg
dec
std
aas
jnp
test
test
imul
ja
fcmovnbe
xchg
fnstsw
mov
push
pop
jo
into
cmp
and
dec
int3
lret
sub
mov
and
add
jns
add
pop
dec
xchg
mov
xchg
clc
pop
pop
popa
mov
dec
dec
jle
lret
aad
mov
lds
loop
sub
outsb
not
ljmp
xor
jge
jp
ds
loop
lahf
pusha
or
dec
push
dec
js
jp
inc
xor
les
fidivs
push
xor
js
mov
sbb
fstl
mov
insl
mov
mov
inc
pop
inc
and
fwait
sub
jnp
repnz
ror
mov
inc
cmc
and
filds
int
jae
xchg
inc
jle
mov
mov
adc
shrl
outsb
mov
outsl
ds
mov
and
repnz
js
xchg
cmp
movsl
jp
int
push
je
cmp
xchg
jae
pop
fdivrs
jmp
std
fcmovb
or
mov
fwait
mov
and
lret
data16
mov
and
or
sub
cmp
ret
xchg
gs
or
xchg
mov
stos
lea
js
inc
mov
pop
fdivs
test
sbb
cmp
and
mov
icebp
adc
imulb
dec
or
xchg
or
push
rcrb
idivl
fucomp
sbb
jg
rol
test
xor
cld
mov
or
int3
loopne
fsub
ja
dec
shlb
and
test
adc
leave
xchg
sbb
mov
lea
inc
insl
xor
xor
loope
les
mov
mov
lods
jns
insl
popf
push
aas
out
outsl
mov
xor
xor
or
insb
insb
jno
xor
testl
mov
jnp
push
repz
pop
xchg
xchg
push
push
add
stc
pop
mov
push
sbb
fdivrs
ffreep
cmpsl
sub
sub
int3
mov
imul
mov
jns
jg
into
sub
dec
push
mov
sbb
mov
sub
inc
jmp
sub
sbb
push
mov
arpl
jmp
out
dec
pusha
dec
fwait
lahf
dec
push
iret
cmp
mov
cmp
xchg
xor
cmp
push
pop
pop
popa
mov
clc
dec
imul
inc
ds
inc
fstl
push
and
addb
sub
movsb
outsb
mov
or
add
mov
ret
loopne
pop
loope
xlat
mov
divl
xchg
lahf
pushf
stc
inc
cmpsl
mov
mov
lret
jp
sbb
sub
push
fld
idivw
sbb
sbb
popa
outsl
mov
sub
inc
lahf
jae
jns
cld
test
insl
or
xchg
or
nop
daa
lock
rcr
cmovnp
jno
jp
test
mov
stos
mov
lcall
push
shll
sub
push
inc
adc
test
test
xchg
sahf
pop
mov
dec
push
mov
mov
mov
out
cmp
cli
push
pop
mov
jp
andb
sub
in
xor
fwait
cmp
aam
mov
les
sar
aad
cmpsl
insl
or
mov
lahf
mov
jge
mov
insl
push
and
lods
mov
adc
or
hlt
mov
outsl
adc
mov
shlb
imul
pop
push
push
lea
jo
mov
inc
mov
push
call
fsubr
pop
sbb
sbb
push
push
incl
packssdw
test
cmpxchg
mov
repz
inc
pop
iret
jp
pop
in
imul
jb,pt
add
and
cltd
popa
fisubl
mov
mov
dec
scas
pop
jge
ljmp
jmp
andl
pop
sti
push
adc
mov
pop
mov
pop
push
push
int
jnp
and
push
hlt
sbb
push
pop
stos
aaa
into
fcomps
fnstsw
sbb
pop
es
push
and
sub
aad
pop
daa
mov
shr
nop
loope
ret
popa
cwtl
int3
roll
les
sub
or
jo
aas
mov
push
add
jno
xor
mov
sub
sar
pop
lods
pop
xchg
push
jge
into
cmpsb
loop
xchg
fsts
and
push
test
lahf
imulb
push
ja
mov
xor
scas
xchg
icebp
mov
shl
rolb
xchg
mov
mov
enter
push
insl
xlat
and
test
insl
xchg
mov
xchg
outsl
pop
jmp
outsl
stos
loope
push
xor
and
lods
sub
xchg
sub
mov
in
xchg
mov
and
and
sub
mov
mov
sub
stc
pop
mov
sbb
dec
lcall
dec
mov
mov
push
repz
aas
and
dec
out
pusha
imul
popa
push
push
mov
out
sti
stos
sbb
sbb
dec
cmp
xor
push
and
push
cld
repz
jecxz
adc
cmp
popa
icebp
inc
xor
scas
shrl
mov
into
aaa
fnstcw
lahf
sub
scas
insl
dec
ljmp
leave
and
ljmp
cmp
cmp
in
imul
adc
inc
out
or
cmpsb
fcmovb
push
sbb
and
pop
mov
dec
cmpsl
shlb
arpl
lret
clc
pushf
dec
mov
mov
pusha
pop
jl
or
aaa
lcall
cwtl
movsl
xchg
leave
shrl
add
mov
ss
mov
mov
leave
adc
pop
xchg
inc
cmc
bound
fwait
mov
pop
mov
mov
adc
mov
jp
loop
jb
in
and
push
das
sbb
mov
jmp
in
mov
add
in
mov
inc
pop
add
outsb
icebp
shr
add
popa
sub
jbe
mov
inc
dec
clc
mov
fsts
je
push
dec
jo
jecxz
and
sbb
imulb
mov
push
std
loope
rorl
xor
jno
gs
sbb
mov
fsubs
xchg
mov
js
hlt
pop
shrl
pop
cmc
call
dec
dec
data16
out
push
sub
lea
subb
insb
lret
add
and
and
ja
mov
cmp
mov
or
fistl
or
repz
test
fwait
loopne
cs
out
loop
shl
mov
mov
mov
fs
shlb
cmp
jecxz
mov
ret
cmp
jge
adc
xchg
ss
daa
pop
mov
or
arpl
lea
sub
loopne
inc
push
mov
or
xchg
xchg
icebp
in
iret
fwait
xchg
jns
inc
push
xor
push
pop
lea
mov
inc
or
leave
rcrb
xor
fists
shrb
adc
stc
dec
jnp
adc
dec
inc
ret
imul
pop
xchg
xchg
and
in
rorb
xor
push
sarb
mov
bound
addr16
dec
push
jl
or
xchg
and
xchg
jecxz
xorl
aam
fdivrp
mov
dec
movsl
cmc
repnz
or
cmpsb
cmpsl
mov
jecxz
mov
vpacksswb
push
out
shlb
in
and
mov
jl
dec
and
dec
push
jg
int3
push
xor
xchg
push
mov
or
shl
popa
ret
pop
scas
imul
test
addb
jo
mov
decl
lahf
jl
std
sar
adc
fwait
pop
sub
cmp
or
iret
xchg
pop
int3
repz
test
or
shl
or
mov
pop
leave
popa
in
adc
movsb
pop
pop
inc
mov
fdivrl
sahf
adc
movsl
popl
push
movd
daa
mov
push
imulb
mov
mov
or
push
adc
mov
inc
insl
scas
add
xor
pop
xor
loope
mov
or
dec
subl
mov
mov
loope
dec
lea
out
push
shlb
cmc
pop
or
add
and
mov
in
add
or
jecxz
xchg
movsl
popf
xor
scas
fisttpll
adc
dec
movsb
cmpsl
and
xor
in
rol
dec
imul
dec
xchg
pop
lcall
pop
stc
shrb
and
dec
push
dec
mov
mov
in
xchg
in
jbe
cld
xlat
nop
push
mov
jae
or
cltd
aad
cli
mov
and
and
or
das
popa
adc
pop
pop
mov
addr16
mov
pop
pop
xor
mov
sub
jnp
dec
dec
pop
xor
hlt
push
and
out
gs
divb
xchg
ret
rcll
loope
cmp
mov
add
aaa
mov
lds
cmpsb
push
jp
jno
cmp
sar
pop
negb
je
xor
push
inc
pop
cs
mov
dec
mov
pop
mov
lret
lea
pusha
mov
std
iret
divl
vmovsd
ljmp
imul
fdivrs
fdivl
cmp
daa
in
lods
out
jmp
loopne
negb
and
xorl
sbb
pushf
adc
xchg
test
lods
repz
push
mov
inc
jl
jp
mov
xlat
sbb
shl
test
add
out
das
cmp
rcll
push
out
stc
ljmp
outsb
mov
arpl
stos
orb
sbb
lcall
lds
xchg
or
cmpsb
jecxz
popa
repz
jg
sahf
or
mov
xchg
add
or
cld
xchg
nop
jno
mov
dec
mov
adc
xchg
iret
dec
ja
dec
jmp
roll
std
jb
popa
jns
lahf
imul
xlat
xchg
xor
push
repz
mov
jg
imul
jo
or
sub
gs
sbb
sbb
add
cld
rep
push
leave
out
arpl
imul
and
or
mov
xchg
aaa
mov
test
inc
cmp
jb
aas
inc
iret
mov
lea
call
aaa
inc
sub
pop
scas
fs
ja
mov
daa
pop
cmpsl
test
lret
pop
jnp
adc
push
pushf
mov
cmp
ljmp
in
fwait
outsl
push
sbb
sub
xor
and
and
add
sub
fdivs
xor
in
push
inc
sub
addr16
mov
imul
jo
lret
push
das
lcall
and
and
repz
adc
stos
shlb
add
add
sbb
iret
push
repz
lea
iret
cli
lods
jle
adc
or
add
in
jnp
adc
mov
fadds
movsb
notl
sub
mov
jbe
stos
mov
gs
sbb
lea
jno
mov
dec
hlt
pop
mov
xlat
push
repnz
in
or
mov
ljmp
dec
cmp
stc
rorl
popa
es
sub
test
insl
dec
sbb
loope
fdivrs
adc
out
ljmp
lret
insb
ja
cmp
push
push
repnz
pop
mov
sub
xlat
arpl
sub
stos
xchg
sub
out
xchg
cmpsl
popf
call
xchg
ficoml
fcompl
repz
add
test
outsb
mov
mov
dec
ss
or
js
mov
pop
and
movsb
test
into
rorb
arpl
and
or
lret
or
xor
rcrb
fiadds
mov
mov
jo
repnz
inc
les
ljmp
push
pop
out
inc
test
jae
mov
pop
cmp
and
dec
aaa
je
dec
call
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
addl
mov
sub
movl
push
push
push
movl
cmp
movl
je
orl
xor
movl
jmp
mov
cmp
movl
jne
neg
mov
andl
push
sbbl
push
adcl
call
test
movl
je
push
andl
call
movl
mov
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
movl
lea
mov
mov
mov
sub
sub
lea
mov
subl
mov
mov
sbb
mov
movl
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
pushl
call
jmp
mov
andl
xor
mov
add
mov
movl
mov
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
mov
addl
xor
adcl
add
andl
mov
mov
subl
xor
add
adcl
mov
mov
adcl
xor
add
subl
mov
mov
sbbl
mov
adcl
mov
sbbl
mov
adc
mov
mov
incl
mov
xorl
mov
mov
negl
mov
movzwl
sbb
mov
movl
sbbl
mov
xor
add
jmp
movl
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
push
orl
push
call
test
movl
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
subl
push
push
call
sbbl
test
movl
je
andl
xor
xor
inc
mov
cmpl
ja
jmp
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
adc
mov
xor
lea
push
xor
mov
adcl
xor
sbbl
lea
xorl
push
xor
mov
adcl
pushl
adcl
call
mov
mov
xor
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
pushl
call
cmpl
jb
lea
mov
mov
xor
sbbl
xor
add
sbb
mov
adcl
xor
movl
lea
movl
mov
cmp
movl
jbe
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
jmp
mov
mov
mov
mov
sub
xor
mov
inc
mov
sbbl
sub
subl
xor
mov
movl
lea
movl
mov
movl
lea
movl
mov
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
subl
push
sbbl
push
sbbl
call
test
movl
je
mov
movl
cmp
movl
jne
mov
cmp
jne
push
addl
push
call
test
je
movl
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
push
adcl
push
call
adcl
test
je
movl
mov
movl
cmp
movl
jne
mov
cmp
jne
xorl
push
push
call
test
je
movl
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
addl
push
movl
push
xorl
call
test
movl
je
movl
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
adcl
push
push
call
movl
test
je
mov
movl
cmp
jne
movl
mov
movl
cmp
movl
jne
subl
push
addl
push
subl
call
adcl
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
sbbl
push
adcl
push
call
test
movl
je
movl
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
push
push
call
xorl
test
movl
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
push
call
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
push
xorl
push
call
test
je
mov
movl
cmp
movl
jne
movl
mov
cmp
jne
push
subl
push
call
orl
test
je
movl
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
sub
add
mov
and
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
mov
sbb
mov
movl
cmpl
je
cmpl
jg
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
push
or
mov
mov
and
xor
xor
mov
push
xorl
mov
add
movl
cmp
je
mov
movzwl
add
mov
xor
xor
add
addl
add
movl
adc
andl
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jb
movl
negl
mov
or
movsbl
sub
jmp
ret
addb
inc
cmc
in
sub
mov
jp
rcrl
jbe
aam
mov
call
mov
and
jle
cmp
jno
mov
xchg
add
test
insl
outsb
xor
jo
mov
adc
outsb
mov
stos
std
nop
xor
mov
add
mov
and
push
loop
imul
test
mov
mov
je
mov
xor
dec
sbb
sbb
repz
pop
xchg
jne
mov
mov
xor
scas
adc
push
aad
scas
fistps
loope
jo
jecxz
aaa
inc
mov
dec
pushf
jno
and
mov
fmull
fs
in
fs
ret
xchg
add
push
push
xchg
dec
xor
dec
lock
test
addr16
pop
lret
ja
and
dec
xchg
sbb
fildl
dec
imul
movsl
cltd
shl
les
rep
dec
aad
insb
loop
addb
xchg
lods
ds
and
int3
shrb
out
push
sbb
aas
pop
mov
sbb
mov
cmp
inc
xor
daa
fimull
into
dec
sub
dec
push
daa
bound
or
mov
jno
mov
cmp
mov
negl
imul
adc
sub
push
xor
fiaddl
pop
out
fwait
cmpsl
daa
imul
or
and
popf
pop
pop
out
lods
insl
cmpsb
mov
sub
daa
std
jge
inc
iret
dec
or
lock
sub
mov
incb
xabort
mov
cwtl
in
scas
pusha
fisttps
sub
and
fwait
divl
mov
shl
negl
push
push
cmovl
aas
lret
sbb
dec
pop
int3
loopne
hlt
aaa
rclb
sub
jge
out
cmp
out
mov
notb
rcr
fimuls
push
pop
cmp
jecxz
les
xchg
sbb
addr16
add
ret
sbb
and
and
mov
mov
jl
imul
data16
daa
enter
push
shl
sbb
sahf
shll
dec
xchg
inc
in
jl
movsl
int
aam
sub
xor
adc
sbb
xchg
and
outsl
xchg
cld
rolb
js
out
nop
in
mov
mov
loopne
mov
scas
cs
call
push
sbb
fs
scas
pop
in
jne
popa
cmp
mov
outsb
pop
data16
pusha
pop
std
or
aaa
repz
mov
rclb
in
and
enter
imul
or
push
test
test
scas
or
jp
mov
out
arpl
and
mov
mov
push
xchg
sbb
mov
hlt
stos
or
mov
push
and
movsb
push
adc
cs
xchg
pushf
lret
inc
daa
je
jmp
in
or
int3
mov
mov
in
mov
pushf
or
dec
jbe
or
call
mov
notl
les
mov
lds
or
push
fiaddl
jbe
xor
add
mov
mulb
mov
and
or
push
or
sub
pop
pop
add
add
es
repz
lahf
icebp
call
pop
xor
enter
cmp
xchg
imul
or
lods
rcll
and
aas
lea
jl
mov
inc
xor
jbe
add
lds
fsubs
cs
subb
dec
jge
inc
and
mov
push
adc
rcll
fnstcw
testb
daa
sub
shll
daa
push
sub
jmp
adc
add
sbb
push
ja
adc
jmp
jle
lahf
or
scas
pop
movsl
shll
imul
adc
cmpsb
imul
popa
push
iret
mov
adc
inc
lret
mov
or
sahf
jmp
jnp
mov
xor
add
inc
push
cmp
cwtl
or
lds
inc
jge
adc
divb
xchg
sahf
push
push
mov
xchg
stos
inc
mov
stc
mov
jg
jecxz
data16
cmpb
sub
divl
arpl
inc
lds
test
daa
push
repnz
push
xchg
sahf
add
or
sbb
ja
insl
xor
in
and
or
add
or
push
or
into
jnp
in
xchg
ror
mov
adc
mov
mov
pop
sub
sub
out
inc
push
jmp
and
and
pushf
in
es
lods
rcrl
mov
loop
idiv
popf
add
push
lahf
cmc
hlt
and
in
xchg
dec
sbb
and
mov
mov
jl
mov
repz
pop
enter
add
inc
cmp
push
inc
push
aad
mov
and
jno
out
mov
xchg
fistps
push
in
mov
rcr
cld
leave
or
aas
jle
and
mov
arpl
cmc
cld
dec
pop
xor
mov
js
js
push
dec
cmpsb
push
outsl
loopne
jo
cs
jmp
add
mov
xchg
xor
sbb
sub
je
xchg
iret
or
enter
add
jb
mov
addr16
push
sub
adc
mov
push
mov
xchg
in
jecxz
jae
lods
xchg
sub
pop
mov
push
cmp
push
jp
jmp
inc
mov
jecxz
ds
inc
mov
andl
pop
mov
xchg
jns
cld
popf
jnp
xlat
xchg
cmpsl
cmpl
ret
cmpsl
or
cmp
enter
repnz
js
cmp
sti
jbe
fisubl
lods
pop
mov
js
jb
mov
jp
inc
inc
sbb
mov
inc
inc
mov
mov
inc
imul
mov
in
mov
or
int3
mov
add
mov
cmp
inc
or
mov
fwait
lods
shl
gs
movl
shrl
js
add
call
mov
pop
dec
sbb
xchg
and
mov
cmp
fbld
xchg
jbe
add
scas
push
cmp
inc
jno
mov
out
mov
test
inc
cmp
and
xchg
test
jb
adc
int3
fldl
add
sbb
inc
test
jb
dec
or
pushf
shl
loope
test
ficompl
data16
adc
push
int3
inc
ror
xchg
cmp
inc
pop
aas
xchg
mov
repz
outsb
mov
filds
fistl
add
mov
test
push
mov
cmp
imul
inc
adc
pop
dec
dec
push
pushf
es
pop
pop
or
mov
mov
repz
push
lock
mov
sub
andl
adc
dec
lcall
in
jecxz
lahf
sbb
lds
adc
sbb
imul
cmp
push
mov
jb
dec
ljmp
cmp
mov
mov
mov
icebp
cltd
dec
and
loopne
jle
loopne
pushf
pop
out
popf
das
aam
data16
in
jmp
dec
lea
cmp
pusha
push
mov
incb
mov
dec
jecxz
lcall
mov
and
loope
movsl
mov
in
jge
ljmp
ds
add
imul
clc
stc
or
js
popf
xlat
and
dec
jle
dec
stos
fsubr
fcoml
popa
mov
dec
xlat
push
subb
mov
das
pop
cli
roll
dec
mov
jae
sbb
inc
mov
ds
rorb
fnstenv
mov
pushl
mov
int
inc
pop
push
shrl
jge
out
mov
xchg
pop
xchg
adc
stos
adc
mov
inc
pushl
sti
mov
cld
mov
jmp
repnz
enter
mov
inc
imul
cmp
mov
lods
scas
mov
and
insl
lds
push
out
ja
lahf
imul
sbb
push
lock
dec
mov
daa
mov
sbb
adc
mov
pop
sub
push
adc
pusha
mov
push
and
mov
or
lret
movsb
add
leave
jo
data16
sbb
outsb
dec
in
cltd
xchg
lock
cs
mov
lock
loopne
clc
test
scas
or
mov
pushf
insl
mov
jo
xchg
sti
js
xor
mov
xchg
dec
xor
arpl
mov
cmpl
ret
ret
jne
clc
imul
lock
xor
aam
sti
test
xor
pop
jecxz
shrb
lods
jmp
add
and
xor
sbb
bound
js
lods
and
and
rcll
xchg
inc
paddusb
in
sub
cmpsb
sub
dec
push
mov
bound
scas
xor
rorb
inc
hlt
inc
jb
cmp
scas
pop
mov
xchg
rep
mov
inc
mov
and
stc
fmuls
rcrl
dec
jp
pop
jmp
dec
daa
cmp
xchg
add
cmp
mov
cmp
mov
add
cmc
loopne
mov
jecxz
rcrb
les
and
pop
push
iret
mov
or
pop
arpl
test
js
lcall
inc
pop
cmp
scas
dec
das
mov
sahf
and
shlb
ficoml
pop
popf
cmpsb
shll
lds
into
xor
es
jp
push
add
movsl
and
and
jg
inc
icebp
mulb
popa
insl
test
je
std
cltd
arpl
and
dec
cmp
xor
test
jp
out
fcoms
add
sbb
mov
in
fcoml
icebp
jno
add
and
mov
push
xor
popw
imul
lret
rcll
mov
xor
icebp
stos
in
and
cmp
imul
sahf
xchg
dec
aaa
arpl
xchg
and
push
fcmovb
out
pop
iret
push
das
add
sub
insl
inc
lret
pop
and
mov
pop
arpl
xchg
mull
sbb
sarb
and
ljmp
and
in
jne
clc
push
mov
out
cld
test
rcll
jle
inc
lcall
ds
gs
lock
jmp
adc
inc
lock
mov
lcall
insb
xchg
or
xor
mov
jge
sahf
or
scas
popa
dec
mov
or
in
jle
adc
cmp
sub
cmp
mov
push
and
js
popa
mov
xchg
xlat
jecxz
or
sub
jle
int
loopne
jecxz
push
aam
jecxz
nop
aad
pop
sahf
mov
jl
xchg
std
jns
test
clc
dec
iret
xchg
mov
fidivrs
lret
repz
out
pop
mov
or
subb
out
popf
cmc
enter
fidivs
jbe
ss
shll
xchg
and
mov
loopne
sbb
mov
add
adc
lahf
inc
lock
jbe
aam
pusha
mov
mov
and
sahf
push
ljmp
add
lahf
lret
pop
jp
dec
fmul
ds
lods
call
lahf
test
push
arpl
push
inc
scas
pop
push
xchg
xchg
bound
mov
mov
fistps
iret
pop
cmp
push
insl
into
pop
ficoms
mov
mov
gs
xor
pop
inc
mov
pushf
mov
mov
aaa
sub
arpl
xor
inc
insl
fs
mov
mov
inc
inc
sub
adc
cmp
inc
adcl
cmp
and
inc
stc
gs
popf
fldl
push
xchg
loope
ds
jno
jne
aam
sahf
pop
jbe
xor
xchg
divb
inc
jae
push
or
jae
pop
repnz
gs
dec
mov
daa
xlat
sbb
aad
scas
dec
push
jl
sub
xchg
xchg
test
push
movsb
mov
mov
jnp
fdivrs
call
mov
lahf
pop
or
nop
out
scas
adcb
xor
cmpsl
lds
pusha
sbb
sti
popf
cmp
pop
fwait
sarl
in
je
aaa
lods
and
divl
and
cmp
push
pushf
dec
sub
dec
mov
test
stos
gs
shlb
add
nop
test
bound
push
cmp
sub
mov
test
cmpsb
xchg
and
xchg
add
add
pop
js
mov
in
xchg
xor
inc
dec
push
rolb
push
stos
sub
lret
cwtl
cmpsl
jbe
icebp
push
inc
cmpsb
xor
add
inc
outsl
enter
call
cmp
sub
adc
or
stos
inc
sbb
fcoml
repz
ljmp
mov
mov
ret
xchg
mov
inc
lcall
sbb
lock
jle
roll
add
in
xchg
shrb
sub
sub
jmp
in
add
addr16
rolb
outsl
or
add
mov
enter
push
rorl
mov
jp
or
sahf
mov
aas
mov
mov
add
dec
xor
or
imul
pushf
call
mov
lods
adc
and
popf
mov
ja
repnz
pop
mov
leave
or
orl
cmpsl
int
xor
andl
xor
jp
in
mov
mov
xor
or
imul
adc
mov
sbb
adc
xor
fildll
lret
mov
pop
rcll
adc
mov
in
bound
shrb
idivl
imul
outsb
fsubs
lret
sbb
je
mov
push
mov
stos
xor
ret
push
or
and
mov
daa
cmp
dec
or
fcmovu
std
or
mov
mov
or
mov
std
repnz
jge
sub
pop
mov
sarl
test
popf
or
inc
cmp
sub
leave
push
daa
repz
mov
pop
cmpb
fidivrl
popf
cwtl
rcll
jg
jecxz
test
xchg
in
sub
loopne
shlb
inc
fs
sti
sbb
inc
cmc
and
cld
aam
mov
add
cmc
sti
popf
cmpb
cmpl
or
fimull
stc
gs
lahf
cmp
inc
inc
lods
out
inc
dec
xchg
xor
sub
sbb
adc
leave
or
outsb
pop
xchg
xlat
sbb
pop
mov
test
xor
in
cs
dec
je
push
sbb
cmp
push
xor
xchg
mov
dec
pop
sti
push
mov
cmp
add
cld
mul
std
cmp
lock
stos
lea
aam
jmp
outsl
lahf
mov
lds
loop
test
adc
repnz
outsl
mov
mov
jno
cmpsb
jae
cmp
and
xor
jne
cmp
mov
iret
daa
into
jecxz
inc
cmp
nop
out
pop
and
test
out
dec
push
pop
lds
jg
loope
loope
mov
or
adc
lret
inc
lds
adc
gs
and
dec
push
fmuls
clc
or
xchg
sbb
sbb
push
pop
test
arpl
xchg
dec
mov
pop
xchg
cld
mov
jnp
xchg
or
cli
in
mov
iret
clc
in
mov
sarb
lods
ja
fsubs
fimuls
mov
ds
out
add
daa
or
in
pop
stos
push
push
loope
lods
and
xor
mov
xchg
sbb
jle
mov
dec
jae
in
lret
or
lods
cmpsl
mov
inc
push
push
sbb
outsl
stos
or
mov
inc
dec
cmp
or
inc
push
loope
in
fisttpll
jae
mov
inc
sti
and
inc
jae
icebp
or
neg
jne
adc
hlt
jecxz
dec
add
movsb
pop
dec
push
mov
dec
outsb
pop
cli
push
subl
and
mov
fsubs
pop
stc
out
aas
daa
mov
sub
imul
mov
jg
sub
test
repnz
push
pop
fs
icebp
dec
cwtl
cmc
fwait
push
sbb
mov
pop
pop
orl
mov
cli
xor
add
lods
repnz
lea
push
enter
cmp
rorb
sbb
xchg
adc
nop
cwtl
jge
out
arpl
loopne
mov
int
bound
in
mov
xchg
fistps
nop
cli
mov
cmp
push
mov
or
xor
fnstsw
in
lcall
push
inc
addr16
mov
cmp
jecxz
pop
add
jecxz
cmp
addr16
cmpsb
jb
fidivrl
adc
lods
and
pop
jge
xchg
cmpsb
cmp
and
fsts
or
fidivs
sub
xchg
mov
out
scas
jns
sbb
pop
pusha
inc
sub
popa
fidivl
sti
int3
jo
sub
push
xlat
push
scas
jns
in
call
sbb
mov
out
xor
or
lret
insl
jecxz
or
arpl
xchg
lcall
xor
mov
inc
cli
mov
cmp
es
lods
in
xor
repnz
mov
data16
test
push
add
aam
mulb
shl
sub
xchg
outsl
clc
dec
cmp
sub
jge
in
push
test
dec
dec
mov
aaa
lea
out
jbe
mov
push
pop
lods
leave
xchg
icebp
test
add
ss
xchg
scas
sub
push
cmc
push
push
cmp
xlat
jle
addr16
mov
loopne
dec
popf
fmull
stc
add
cmpsb
add
push
sahf
inc
cmp
mov
int
pop
aad
sarl
pop
sbb
fldenv
rclb
shr
xchg
lea
inc
bound
cmp
sbb
loop
hlt
test
or
xor
push
xor
ljmp
pop
sarb
cli
test
or
push
xor
sbb
sahf
push
jp
cmp
mov
imul
adc
into
sub
push
mov
dec
adc
pop
sbb
rcl
fwait
inc
jmp
jg
stos
jnp
ficoms
add
scas
adc
jp
dec
jge
dec
mov
push
sub
scas
push
mov
sti
push
das
test
pop
jge
and
mov
mov
mov
jo
jmp
pop
or
mov
outsl
mov
insl
jge
pop
push
pop
jmp
fiaddl
inc
cmpsl
push
repnz
js
mov
testl
aas
pop
pop
aaa
test
xor
les
pop
sarl
pop
add
mov
gs
cwtl
mov
outsl
cmp
test
pusha
or
fidivrl
mov
movsl
push
or
aad
fs
xor
push
gs
fldenv
and
test
xchg
xchg
or
pop
jle
mov
out
sbb
dec
fwait
in
dec
je
xchg
enter
test
in
push
sub
dec
dec
push
popa
xchg
or
sbb
lcall
inc
repz
sub
push
rolb
imul
xor
and
adc
push
enter
inc
cmp
in
xchg
push
cmp
dec
addl
push
xchg
push
push
test
sti
pop
sub
test
or
mov
rcrb
or
sbb
fldcw
paddb
std
test
scas
in
mov
test
xor
or
push
and
clc
pop
std
cmpb
adc
pop
xchg
in
adc
addb
fidivl
in
test
jnp
dec
cmpsb
mov
pop
clc
xchg
jno
pusha
out
out
or
dec
outsb
frstor
sub
fnstcw
push
push
add
mov
mov
std
nop
lret
fists
fsubl
mov
nop
js
adc
mov
xor
adc
mov
inc
lods
push
movsl
push
xor
cmp
fs
and
and
inc
hlt
mov
mov
mov
inc
xchg
cmp
or
stos
jp
ds
js
aam
sub
cmp
dec
daa
lcall
aam
psrlq
and
xor
dec
mov
jns
mov
repz
mov
adc
or
into
loopne
push
xchg
repz
lods
stos
icebp
orb
int
inc
mov
mov
mov
push
nop
pop
decl
mov
xchg
mov
inc
inc
jl
mov
mov
cmp
test
sti
jp
ljmp
sbbb
jae
mov
leave
neg
sub
mov
sbb
mov
dec
jmp
xchg
cmc
mov
fdivs
xlat
imul
sahf
pop
fidivrs
dec
js
mov
inc
mov
xor
rcrb
cs
mov
xchg
ficompl
or
and
ret
dec
cwtl
pop
pop
insb
sbb
cld
movsb
mov
pop
add
push
add
pop
in
pop
fcmove
daa
loope
fisubs
arpl
dec
loop
cltd
xchg
add
popa
repz
out
jl
fisttpl
dec
pop
dec
arpl
sbb
and
negl
sbb
cwtl
lret
cmp
stos
cwtl
icebp
xchg
cmp
jle
xlat
mov
cmp
js
pop
outsb
xor
stc
adc
mov
leave
pop
test
pop
or
mov
stc
jg
pop
imul
or
mov
bnd
dec
or
cld
das
cmp
aaa
adc
data16
mov
pop
rcrl
jg
test
xor
jb
xchg
pop
pop
insl
ds
shrb
add
pop
in
inc
enter
repz
add
js
ret
sbbl
pop
add
mov
cmp
xchg
mov
imul
sbb
std
mov
sti
fimuls
mov
and
mov
add
pusha
add
push
cli
cli
fucomp
int
movsl
imul
mov
maxps
imul
orl
sahf
dec
fdivr
test
sub
sti
rcrb
or
adc
stos
pop
pop
sbb
xchg
das
xor
ret
inc
aam
cmp
jo
xlat
adc
inc
je
test
leave
jns
cmp
push
nop
out
int3
ret
mov
mov
push
sbb
push
sbb
xor
push
sub
xchg
jns
adc
popa
int
sbb
add
push
mov
or
mov
cmp
cld
loope
iret
sarl
fnstenv
out
and
fwait
pop
repz
ja
mov
inc
xchg
inc
aaa
jnp
dec
push
cmp
inc
push
setno
scas
sub
xchg
add
push
in
out
vpmacswd
inc
aas
pop
pop
daa
dec
dec
stos
clc
aas
mov
jmp
fisubrs
test
cmc
mov
lret
mov
setl
add
inc
rclb
dec
xchg
movsl
jno
cmp
sbb
ret
test
lret
inc
out
enter
repz
jmp
xchg
dec
cmp
push
push
lahf
out
les
loope
leave
dec
into
int3
outsl
test
repz
xchg
aas
jne
xor
pushf
fwait
and
mov
push
or
pop
test
ljmp
test
cmpl
fildl
pusha
loope
dec
iret
cwtl
inc
aad
insl
cmp
cmp
mov
or
std
mov
in
pop
sbb
cmp
aam
lods
sbb
inc
cltd
test
jns
mov
dec
mov
repz
mov
mull
mov
loope
or
or
jne
lret
inc
in
pop
mov
mov
push
lret
jne
shlb
mov
mov
cmp
cmp
pushf
jp
xchg
sub
and
mov
fdivl
push
push
add
add
add
ss
jmp
mov
push
mov
popa
mov
or
clc
fcoml
add
jne
mov
mov
in
xchg
inc
es
cmp
test
add
or
in
push
dec
push
es
jp
int
aad
jnp
lods
shr
pop
test
mov
jns
mov
out
inc
rolb
bound
or
push
mov
das
mov
lods
ss
ja
push
mov
out
inc
push
mov
jmp
sub
in
add
enter
push
movsl
ja
sbb
stos
jno
nop
or
mov
mov
xor
push
push
test
xor
call
addb
cld
sub
in
fldcw
fsubrl
movsl
adc
or
out
jns
sub
sti
cmpb
or
lcall
es
lahf
roll
mov
sbb
stos
pop
arpl
popa
cmp
negl
and
sbb
jg
mov
repnz
xchg
cmp
scas
rcrl
les
add
adc
adc
sahf
arpl
inc
xlat
es
lret
add
sbb
inc
fisubrl
sti
rorl
or
sbbb
fs
lods
sub
and
cmp
mov
sbb
test
mov
stos
mov
push
push
mov
shl
and
pop
lods
xchg
int3
test
in
cltd
jl
movsb
loop
mov
mov
test
adc
movsb
imul
inc
push
rorb
cmp
das
sbb
imul
adc
mov
pcmpeqd
lds
call
lock
inc
jle
aam
cmp
leave
cmp
sbb
das
les
movsb
push
mov
push
stos
cmp
jl
ficomps
jae
scas
add
fisttpl
mov
cmpsl
stc
arpl
enter
pushf
xchg
mov
cld
inc
pop
push
fimull
roll
xchg
js
dec
xchg
cmpsl
mov
jae
insb
hlt
or
dec
cli
sub
in
mov
cwtl
adc
outsl
mov
popf
jb
fwait
loopne
in
shr
sub
pop
ljmp
repnz
or
fstl
xchg
in
js
fnstsw
fnstcw
xor
mov
adcl
leave
pusha
daa
sahf
sbb
xchg
sti
test
inc
sbb
adc
ds
repz
mov
mov
mov
mov
cmp
scas
clc
fsts
or
push
push
iret
adc
xchg
fcmovu
cmp
xor
sbb
jmp
jmp
mov
arpl
imul
fxch
sub
js
ljmp
cld
sbb
inc
out
and
push
gs
fcmovbe
fcompl
push
int
cmp
add
imul
inc
fldenv
int3
add
jge
cltd
stos
or
xchg
mov
les
subl
aaa
pop
imul
or
xchg
rcrl
jle
fbstp
pop
lock
shlb
sbb
ret
nop
repz
mov
sub
ret
mov
cmp
imul
in
loope
fbld
lret
xor
mov
bound
xor
imul
mov
insb
mov
xor
sub
inc
xor
in
dec
mov
xchg
push
ficomps
xor
sbb
imul
jmp
pop
sti
mov
mov
das
jge
test
adc
mov
adc
lds
adcl
or
stos
mov
mov
lret
bndldx
inc
popf
mov
cmpsl
pop
mov
mov
adc
cwtl
sub
test
test
jl
push
xor
xor
xchg
and
mov
fadd
xor
pop
mov
xor
sub
dec
adc
test
adc
jnp
push
in
insb
push
push
sub
shr
das
aam
out
vorps
in
sti
notb
lcall
pusha
mov
lods
xchg
sub
adc
add
sbbb
out
xchg
pop
aas
ud1
addr16
in
xor
es
mov
cmp
jno
inc
fisubrs
pop
testl
pop
data16
cwtl
cwtl
mov
mov
fadd
add
pop
xchg
sub
push
jne
cmpsb
mov
cs
jle
jnp
test
xor
mull
adc
and
push
xchg
mov
jne
xor
ljmp
add
in
mov
ss
xchg
ret
das
mov
movsl
inc
imull
out
jae
add
sub
aas
push
pop
ss
cltd
cld
shlb
das
rorl
dec
xor
adc
lock
jp
iret
outsb
push
mov
inc
add
or
jl
xchg
in
iret
popf
sub
data16
test
mov
out
cwtl
push
and
out
mov
scas
inc
imul
lahf
mov
repz
mov
cwtl
lods
int3
ss
addb
xor
outsl
and
test
xchg
add
adc
insl
mov
adc
fdivrp
dec
xchg
add
jmp
adc
into
add
xor
adc
int
push
loopne
inc
mov
fisttps
mov
mov
sub
xchg
idivb
xchg
aas
adc
mov
adc
fs
mov
add
mov
out
rcrl
fadds
push
mov
mov
dec
and
das
or
jmp
into
ss
add
daa
cmp
ljmp
inc
cld
mov
push
adc
xchg
leave
out
fisubrl
push
xchg
xchg
cltd
or
nop
pop
xchg
or
jbe
and
scas
push
les
xchg
in
rcrb
cmp
test
cmp
iret
in
lahf
lea
push
mov
add
outsl
js
fstl
dec
jns
ja
adc
sahf
inc
mov
pop
jo
repz
xchg
dec
sub
lcall
sub
mull
push
xchg
popa
jae
popf
mov
adc
pop
adc
stc
jl
and
adc
push
dec
mov
push
dec
fdivr
scas
sub
lret
add
pusha
inc
testl
xlat
dec
in
testl
movsl
sub
enter
xor
rcrl
rcrb
sahf
sbb
xchg
mov
jp
mov
sarb
wbinvd
and
mov
mov
loope
and
cltd
cmpsl
sahf
and
adc
cmpsb
mov
mov
popf
mov
in
mov
adc
or
call
aaa
ret
pop
push
in
pop
enter
push
lds
lahf
loop
inc
into
icebp
or
pop
jb
divb
es
sbb
adc
jmp
mov
call
sbb
mov
pop
enter
dec
test
mov
sbb
hlt
push
ror
pop
jg
xchg
pop
inc
out
mov
addl
pop
sub
xchg
push
outsl
pusha
pop
stos
push
mov
cmp
jle
movsb
fwait
inc
xchg
daa
lods
les
out
loope
mov
pusha
pop
xchg
jl
jecxz
mov
out
fldt
lret
notb
push
sbb
shll
xchg
ja
lret
sub
sub
cli
jb
add
ret
mov
mov
push
pop
orl
xor
cmp
jne
mov
sbbl
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
mov
mov
sub
or
mov
adc
mov
movl
subl
mov
addl
push
mov
or
mov
sub
xor
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
pop
sbb
add
add
add
add
add
mov
out
add
add
add
push
push
inc
push
mov
adc
inc
mov
push
jns
add
add
inc
cmp
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
stos
cmp
pusha
outsb
add
mov
mov
cs
xchg
cmp
mov
sarl
aaa
mov
cmp
mov
pop
sti
mov
sbb
or
pop
std
mov
mov
lods
fcompl
or
mov
mov
mov
mov
mov
lahf
and
rorb
mov
dec
and
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
add
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
