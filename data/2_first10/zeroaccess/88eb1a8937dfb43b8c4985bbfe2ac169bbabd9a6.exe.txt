push
mov
sub
sub
mov
push
add
push
push
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
movl
cmpl
je
cmpl
jge
jmp
push
call
mov
dec
mov
jmp
mov
or
add
mov
xor
mov
andl
mov
subl
mov
mov
and
mov
mov
xor
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
jmp
mov
and
xor
add
add
subl
mov
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
mov
not
mov
push
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
pop
sub
sub
add
movl
movl
cmpl
je
cmpl
jb
jmp
push
call
mov
dec
mov
jmp
mov
movzwl
sub
movl
mov
xorl
mov
mov
mov
mov
adcl
xor
sbbl
add
orl
mov
notl
lea
mov
adc
mov
orl
xor
orl
add
orl
mov
adcl
lea
push
neg
mov
subl
xor
xorl
add
subl
push
mov
addl
push
orl
pushl
orl
call
sbb
mov
adc
mov
mov
adc
mov
mov
movzwl
and
movl
mov
mov
sbbl
lea
sbb
mov
movl
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
xor
mov
addl
sub
movl
mov
not
movl
mov
mov
movl
cmp
movl
je
jmp
mov
inc
popf
test
cmp
pop
addl
subl
sub
cmp
jp
jbe
in
jae
jae
dec
insl
push
je
lods
jge
data16
cmp
push
mov
mov
ja
add
repnz
rol
repnz
sub
xchg
adc
xchg
jb
sbb
lsl
and
jne
mov
pop
sbb
mov
fs
and
test
xchg
mov
or
inc
mov
dec
dec
imul
int
rcll
push
adc
or
sbb
push
sarl
add
mov
pop
and
ds
and
cmpsl
scas
out
adc
adc
mov
push
dec
push
jecxz
push
adc
aaa
pop
lods
cltd
inc
and
cmp
dec
aad
cmp
insl
inc
mov
cwtl
cmp
clc
pop
inc
cmpsb
adc
adc
andl
sbb
hlt
test
inc
jo
push
cmp
andl
pop
pop
or
ss
andl
repz
adc
dec
mov
aaa
mov
repz
adc
adc
inc
cmp
movsl
pop
pushf
pusha
cld
xchg
push
adc
mov
sub
push
jl
pop
push
sbb
stos
addr16
cmp
xor
mov
lcall
push
mov
dec
shrl
ja
cmpsb
out
push
outsb
jnp
add
mov
mov
sub
mov
jb
cmpsl
movsb
mov
mov
adc
dec
movsb
and
mov
jmp
xlat
mov
mov
rorb
repnz
daa
sbb
push
cmpsl
cs
lret
out
mov
cs
arpl
sub
fsts
xchg
pop
mov
push
mov
mov
mov
sahf
ss
inc
icebp
add
test
sub
mov
cmp
js
adc
inc
mov
movsb
imul
mov
imul
pop
mov
gs
sbb
cltd
cmp
mov
out
cld
mov
inc
push
mulb
test
cmpsb
cmp
inc
in
insb
push
mov
loopne
leave
and
divl
xchg
pop
adc
add
mov
mov
inc
lcall
sub
xor
push
call
cmpsb
movb
cwtl
jne
and
inc
inc
xchg
pop
out
sub
nop
fsubl
jno
inc
mov
imul
sbb
push
dec
inc
js
xchg
jge
ficomps
jnp
loopne
jno
or
shll
xor
in
dec
adc
mov
mov
fisubrl
outsb
xchg
mov
das
in
inc
pushf
mov
dec
add
out
jb
scas
fstps
in
iret
fwait
sbb
adc
and
xchg
aas
fdiv
add
xchg
xchg
imull
nop
js
fdivr
pop
scas
hlt
cld
je
js
mov
adc
xlat
out
lea
enter
in
dec
push
ja
mov
into
ffree
add
icebp
xor
sbb
bound
pop
ja,pt
mov
sub
mov
dec
cli
push
cli
jae
fucomp
push
in
jp
and
cmp
nop
jl
mov
fwait
mov
lods
and
int
or
pushf
dec
sbbl
stos
je
xchg
cwtl
jl
or
stc
push
jle
mov
xor
scas
repz
dec
pminub
dec
imul
lock
cmp
stc
loop
sbb
movaps
cli
xor
jl
out
int3
lret
out
jae
rorl
mov
mov
push
mov
jno
lods
lds
adc
ja
bound
into
and
test
or
lods
cmpsl
cmp
aam
add
sarb
mov
outsl
push
mov
lock
aam
pop
jge
out
push
jg
test
and
and
mov
sbb
imul
and
dec
or
int
aam
jl
outsb
xchg
and
add
lds
jle
xor
dec
dec
test
or
mov
cmpl
dec
inc
push
popa
lret
bound
push
pusha
or
dec
sub
sub
jno
sbb
imul
adc
neg
jns
push
lods
adc
push
mov
call
push
jge
push
pop
jno
cmp
jbe
xchg
sub
mov
lods
movntq
inc
call
xor
jo
lds
mov
fimull
gs
cmpl
jnp
in
enter
adc
or
sbb
imul
shrl
aam
mov
fildl
inc
lods
testb
imul
mov
imul
cmc
xor
push
xchg
cld
repz
aaa
addr16
mov
pop
push
out
insb
bound
cs
shlb
mov
sub
dec
xchg
add
mov
cmp
sbb
or
ret
push
sub
aam
sbb
inc
movsl
xchg
out
sbbl
popf
mov
stc
in
scas
pop
push
adc
push
add
repnz
jge,pt
adc
pushl
pop
mov
arpl
out
dec
fs
into
clc
add
inc
jg
in
pop
fucomp
pusha
jne
push
pop
scas
pop
and
fstpt
xchg
cli
inc
cltd
jno
xor
popf
inc
dec
insl
cmpsl
out
bound
int
aad
or
test
aaa
fdivrs
inc
outsl
jbe
aaa
dec
jae
repz
sarl
int3
mov
push
nop
daa
add
cltd
or
ret
inc
cs
mov
int3
scas
leave
mov
jl
ret
into
test
pop
jp
jns
sbbb
enter
repz
into
js
jp
fwait
popa
or
adc
fstps
stc
loopne
cpuid
push
repnz
jmp
cmpl
jle
sbb
hlt
addr16
xor
xor
xchg
les
arpl
pop
icebp
repnz
lds
and
xchg
pop
mov
or
iret
xchg
sub
dec
mov
add
fcoms
pushf
insb
les
or
out
and
jle
pop
dec
je
jbe
faddl
mov
in
add
sarl
lock
mov
cmpsb
add
loopne
push
dec
xchg
cmp
jmp
lods
sbb
push
cltd
xchg
insb
and
sbb
and
sub
mov
cmp
popf
mov
inc
mov
and
and
fwait
bound
mov
daa
pop
orb
push
aad
lea
ds
pop
xchg
testl
pop
push
pop
testb
stos
mov
mov
cmp
adc
sub
inc
push
cmp
pop
pop
clc
sarb
mov
fcmove
inc
sub
adc
dec
jecxz
jge
popf
sub
pop
shll
cmp
stos
ja
push
int
notb
adc
jnp
lea
dec
xor
mov
and
addr16
mov
movsb
mov
fistl
mov
clc
push
testl
imul
xchg
jge
dec
cmc
sti
into
push
fistpl
cmpsb
movswl
pop
daa
test
out
lcall
xor
or
sbb
stc
clc
orb
stos
out
mov
or
inc
mov
adc
pop
cs
mov
and
mov
shrl
and
daa
cmc
pop
incl
xor
cltd
repnz
lahf
xor
mov
lret
mov
loopne
daa
fmull
jae
or
je
insb
inc
dec
mov
cmpsb
imul
inc
mov
and
inc
jnp
pop
leave
adc
fdivs
stos
pop
flds
mov
xchg
xor
adcb
in
shl
lcall
dec
xlat
mov
outsb
pop
fs
cmc
cmpsl
push
mov
mov
push
pop
or
mov
popf
call
cmp
mov
pop
pop
mov
outsb
outsb
adc
lock
lahf
roll
nop
cli
cli
fwait
add
adc
scas
and
lahf
ret
out
mov
aas
outsl
jl
les
mov
es
fwait
sbb
jae
in
mov
adc
in
pop
jno
mov
test
orb
jnp
mov
inc
aam
sbb
inc
repz
movsl
imulb
pop
jns
dec
mov
call
ljmp
jp
bound
aam
mov
mov
imul
std
jbe
divl
or
and
iret
mov
sbb
mov
scas
popa
add
xchg
mov
pop
pop
pop
je
lret
jecxz
add
dec
mov
cld
stos
and
cmp
insl
sbb
flds
stos
mov
sub
repnz
rorb
jge
iret
aad
in
fstps
push
in
jno
outsb
shl
sbb
repnz
ficompl
insl
push
mov
mov
sub
pop
push
into
adc
push
xor
push
enter
jne
inc
ljmp
pop
cmpsb
jno,pt
insl
popf
push
out
ljmp
testl
pop
adcl
jo
les
aad
pop
inc
fwait
mov
dec
mov
shll
aas
adc
popa
mov
in
inc
or
mov
mov
sti
loope
sub
jmp
imul
movsl
cmp
jbe
pop
pop
push
ss
mov
mov
stos
jl
cli
sti
jmp
inc
ficoms
jg
pushf
dec
lods
shrl
mov
dec
xchg
fs
cltd
jno
adc
inc
xchg
jne
lods
jmp
jl
das
xor
jecxz
inc
inc
out
fcmovne
mov
rorb
pop
mov
movsb
ficoms
iret
mov
stos
sarl
mov
data16
ret
and
xor
cmp
mov
mov
rcrl
fs
inc
xor
rol
ds
aaa
adc
mov
fsubl
xor
inc
sub
jo,pn
in
mov
int3
cmp
inc
mov
enter
lods
adc
fisttpll
scas
adc
movl
xchg
dec
out
add
and
xlat
fs
xchg
lret
push
push
outsl
or
mov
sub
idivb
outsl
xchg
lret
mov
mov
pop
notl
data16
cmp
je
mov
jns
xlat
xor
adc
sub
fcmovnb
je
push
jns
aaa
bound
pop
mov
fists
leave
mov
enter
mov
dec
fwait
push
lret
sbb
lods
stos
inc
jle
clc
xchg
cli
iret
jecxz
push
outsl
or
cmp
cwtl
rcr
inc
xlat
xor
subl
and
and
sbb
out
in
jg
loopne
add
xchg
adc
iret
sub
roll
fwait
lahf
fs
dec
sub
mov
mov
imul
mov
lods
aad
fimull
sbb
cmc
lcall
mov
push
mov
and
out
mov
in
jno
lea
inc
ret
jae
arpl
test
fs
mov
lret
pop
test
aas
in
mov
add
movsb
adc
mov
int3
imul
rolb
or
inc
lea
sub
fcompl
decb
push
inc
cs
loope
add
out
jo
cmpsl
lcall
or
sbb
push
movsl
inc
dec
dec
jae
or
mov
pop
out
xor
mov
fidivrl
sbb
lods
sbb
pop
mov
jo
fisubrl
scas
insl
adc
mov
mov
test
icebp
mov
loope
repnz
je
pop
push
test
je
mov
ret
imul
clc
adc
xor
dec
or
push
xor
xorb
inc
mov
mov
fwait
lds
mov
scas
dec
push
dec
push
sbb
mov
push
adc
hlt
mov
or
jg
add
dec
icebp
testb
mov
insb
push
and
push
cmp
xorb
push
idivl
repz
and
add
call
add
loop
stos
inc
push
sub
ja
popf
jo
xchg
mov
inc
fnstenv
add
add
repz
enter
adc
mov
cmp
inc
inc
push
mov
sbb
sbb
xchg
xchg
xchg
dec
add
adc
xchg
inc
and
mov
push
xchg
push
jns
loopne
int
adc
cs
xchg
mov
jae
ja
lret
loopne
adc
mov
test
pop
imul
shl
and
xor
pminsw
fildll
adc
adc
mov
inc
fimuls
xchg
sbb
out
leave
rorl
ret
lock
cmp
dec
rorb
pushf
xor
stos
pop
test
add
loopne
dec
sub
sub
das
loopne
jb
shrl
arpl
movsb
cmp
xor
sbb
mov
mov
out
cmpb
arpl
out
imul
pop
in
sbb
mov
push
sar
shl
inc
js
cmp
sub
inc
sbb
jns
lods
mov
jge
sub
xchg
lds
mov
gs
adc
and
nop
icebp
subb
ljmp
inc
hlt
std
adc
push
popf
add
loopne
mov
sbb
pushf
mov
lea
pushf
push
xchg
inc
inc
shr
call
loope
aaa
jno
fsubs
jg
push
adc
ja
xor
cmp
jns
jo
dec
into
sbb
out
daa
cmpsb
cmp
lea
mov
pop
jno
push
xchg
rolb
test
repz
ror
lret
popa
adc
xor
cmp
xor
mov
push
adc
xchg
lcall
add
out
push
movsl
or
jnp
ret
flds
xor
data16
enter
orb
xchg
pop
sub
adc
rcrb
cwtl
andb
cld
xlat
pop
push
fmuls
orl
jns
sti
fsubr
jbe
cli
mov
cltd
rolb
xchg
sub
fcomp
aas
lods
mov
xchg
adc
push
imul
loope
or
xor
ret
jmp
imul
mov
adc
subb
mov
std
cmc
or
inc
jle
lods
jne
xchg
jbe
xchg
cmp
xor
lahf
data16
and
mov
inc
xlat
mov
ja
and
lods
decb
in
outsl
repz
dec
and
push
in
xchg
sti
test
jne
pop
repnz
xchg
es
inc
in
cmc
test
or
cmpsb
repz
ret
mov
sub
mov
ljmp
pop
adcb
outsb
clc
adc
mov
inc
or
ds
lods
es
lret
cmp
repnz
and
cmp
mov
inc
lds
sbb
cli
les
jbe
movsb
inc
mov
addl
cmp
mov
sub
mov
mov
int
es
dec
sbb
sbb
in
adc
sub
mov
or
sbb
pop
mov
test
ja
lock
push
sub
jl
xor
cmpsb
ficompl
jae
jnp
cmc
lcall
adc
cli
adc
lods
cmp
dec
push
xchg
or
sub
mov
push
sbb
mov
cs
mov
lret
iret
or
push
loopne
scas
mov
jae
cmc
add
leave
or
or
scas
jp
dec
xor
out
mov
cmp
aas
sub
adcl
sub
sbb
add
pop
and
xchg
cmp
gs
dec
xchg
stc
imul
test
loope
mov
repz
lea
je
xchg
mov
gs
enter
xchg
cli
dec
inc
jmp
xor
lds
jmp
insl
push
pop
rcrl
inc
stc
jnp
adc
and
push
fistpl
lods
push
rclb
rcrb
dec
notb
gs
fbld
dec
cld
repnz
leave
mov
das
sub
test
shll
mov
jecxz
fiadds
fs
stos
push
shlb
add
mov
add
popf
shlb
je
push
mov
mov
sub
ret
ljmp
jns
xchg
cli
jp
lea
pop
pop
leave
inc
and
pop
xor
lahf
sarl
mov
outsb
inc
push
sub
xchg
dec
xchg
xchg
idivl
sbbl
test
je
lcall
xchg
mov
inc
jecxz
les
sub
cmp
cmp
adc
and
in
in
iret
cld
and
cmp
sbb
out
out
sub
xor
sti
xchg
in
mov
jl
loop
cwtl
and
pop
int
mov
xor
adc
lahf
push
adc
lret
repz
add
mov
cmp
mov
xchg
loopne
out
call
lret
pop
aaa
or
fstl
aas
xchg
fwait
dec
imul
test
or
push
insb
mov
outsl
aaa
imul
int3
ja
inc
out
lods
xor
xchg
cmp
outsb
push
ja
adc
mov
mov
shrb
outsb
xchg
adc
dec
int
xor
and
shrb
push
pop
inc
ja
mov
mov
pushf
bound
int
mov
fldt
shlb
dec
ficompl
aas
sub
push
push
push
push
pop
sub
outsb
xor
sbb
frstor
jno
sub
jb
dec
sbbl
mov
xchg
adc
daa
push
cmp
cmp
jo
roll
addr16
jo
xor
adc
dec
fwait
xor
sub
sub
call
bound
hlt
sahf
in
and
sub
fcompl
loopne
push
jp
sbb
mov
sbb
sahf
add
cwtl
mov
sub
bound
mov
jecxz
lcall
andb
cli
in
out
mov
ret
add
mov
jp
daa
sti
jbe
jp
cmp
in
push
xor
sarb
orl
and
fdivs
mov
repz
pop
push
mov
xchg
xor
sub
out
cmp
dec
fbld
sbb
pop
aad
mov
pop
in
pop
dec
and
xchg
mov
std
icebp
mov
imul
xor
cld
adc
push
jp
and
subl
inc
inc
xor
popf
mov
out
stos
mov
xchg
inc
adc
xlat
adc
loopne
xor
hlt
jne
stos
lahf
mov
mov
xor
das
out
jno
dec
ljmp
cld
fisubrs
cltd
int
ss
fstps
and
mov
sbb
jnp
jno
jecxz
ljmp
lods
adc
lods
in
in
cmp
in
mov
inc
inc
fs
fisttps
fs
or
fsubrs
stc
cld
xchg
mov
xchg
mov
fcoms
pop
outsl
adc
pop
pop
nop
sbb
mov
sbb
jge
push
outsb
fstps
loope
lcall
inc
cmp
aam
cmp
and
sub
xchg
mov
push
dec
insb
mov
rcl
mov
jb
pop
ret
inc
push
inc
rolb
or
dec
sub
in
aas
enter
pop
leave
lret
mov
stos
adc
dec
xchg
lcall
push
outsl
mov
xchg
movsb
push
or
loopne
jae
lods
mov
out
pusha
and
and
out
cltd
inc
and
cmc
leave
sbb
and
das
test
call
sub
or
jl
mov
imul
in
pop
out
jmp
orl
jmp
out
xor
xchg
les
jp
jle
jg
out
cmp
sbb
or
sbb
cmc
sub
dec
scas
cmp
adc
xchg
jbe
lcall
jno
fldcw
mov
lcall
sbb
insl
adc
mov
fidivrl
mov
push
pop
jg
inc
pop
rclb
loope
nop
cmp
mov
mov
ret
pop
mov
mov
xor
cltd
clc
loope
aad
shlb
or
rcll
or
or
cltd
xchg
cmp
jae
jo
and
cs
push
int
aam
push
xor
ljmp
sub
mov
je,pn
or
lock
pop
or
shll
dec
test
inc
movsl
push
es
pop
mov
out
nop
pop
and
loop
movsb
mov
sub
bound
or
mov
push
repz
fcoms
lahf
push
cwtl
sub
add
mov
nop
pop
fs
and
add
inc
in
mov
mov
rcr
dec
mov
jne
mov
sub
sub
jno
stos
imul
sbb
fstpl
xchg
lea
xor
sub
jp
jmp
out
mov
add
popa
dec
jl
fiadds
push
cmp
call
sub
or
sti
and
push
stos
push
mov
daa
dec
pusha
pusha
jbe
add
sub
push
test
add
scas
scas
mov
je
imul
mov
fistpl
lret
mov
sub
js
and
shrb
daa
sub
ljmp
adc
data16
outsl
imul
mov
mov
pop
and
xchg
xchg
sub
in
pushf
outsl
fstpt
arpl
push
pop
into
cltd
jno
adc
dec
fnsave
mov
in
pop
pusha
push
popa
fcomps
testl
lods
pop
cltd
jns
pop
xchg
lret
or
insl
sti
scas
jae
int
mov
cmp
lods
lcallw
out
and
fnstenv
pop
or
jne
andl
add
inc
ret
pop
add
sub
call
jo
push
mov
aaa
iret
mov
fdivp
orl
andl
filds
arpl
sbb
pop
nop
cld
daa
jne
push
mov
xor
inc
mov
stc
outsb
and
pop
mov
lods
scas
enter
leave
jecxz
es
mov
push
fdivrl
loop
pop
cmp
jnp
inc
loope
pop
dec
dec
gs
sub
sub
in
add
test
push
dec
and
mov
dec
cmp
mov
aas
fisubrl
inc
mov
sbb
divb
mov
adc
std
jae
sar
jb
out
lcall
xchg
lret
dec
sbb
xchg
pop
fnstcw
ret
and
fildll
cwtl
rorl
lods
or
stos
jns
add
jmp
fwait
inc
cld
adc
je
into
push
sbb
lret
xchg
mov
shll
in
cmpsl
xor
out
sbb
flds
sbb
repnz
test
and
push
push
mov
notb
mov
and
std
xchg
xchg
jecxz
iret
popa
sbb
mov
iret
pop
pop
jne
xor
or
dec
js
fucom
mov
mov
fimuls
xchg
mov
adc
mov
or
mov
pop
adc
mov
mov
sub
fists
adc
nop
sbb
lods
lret
stos
jo
xchg
adc
mov
adc
sbb
push
enter
jb
add
or
nop
popa
xchg
mov
lds
sbb
sub
sti
mov
add
sarl
es
adc
je
aad
jmp
aaa
xchg
stos
das
mov
daa
xor
outsb
sub
ret
mov
shlb
dec
les
xorl
fwait
xchg
loopne
and
cmp
fstps
test
jne
and
pop
bound
call
push
push
sbb
inc
fistpll
dec
movsb
lret
ret
jp
mov
aaa
sahf
mov
lock
dec
or
adcb
out
out
mov
adc
inc
mov
adc
dec
pop
scas
push
push
jo
push
pop
fcmovbe
insl
inc
fs
pop
sbb
push
inc
fs
jne
cmpsb
cli
testl
sub
cli
test
outsb
dec
lock
jbe
inc
and
in
adc
shlb
mov
mov
mov
lock
testb
dec
loope
xchg
adcl
lds
shr
icebp
loope
mov
stc
cmp
xchg
fcoms
pop
call
add
mov
mov
inc
or
imulb
fistl
fdivrl
dec
xor
jmp
aam
and
mov
push
call
inc
inc
icebp
ffreep
push
bound
popf
loope
inc
dec
lods
or
stc
cli
or
xchg
sti
sub
or
jae
mov
insb
stos
adc
sub
lea
mov
xor
pop
xor
insb
clc
mov
sbb
cmp
mov
sti
or
das
and
or
mov
cli
pop
imul
sub
popf
lahf
out
mov
jnp
repnz
adcb
mov
sar
mov
es
adc
inc
fidivs
iret
xlat
sub
imul
dec
dec
lods
inc
mov
sbb
pop
add
or
adc
pop
sahf
scas
xor
push
jp
and
push
dec
cltd
sbb
mov
out
inc
loop
mov
cmp
sti
imul
lock
fisubl
arpl
popa
mov
jmp
inc
xor
xchg
sub
xchg
inc
insl
push
cld
push
mov
loope
mov
cmpsl
jnp
xchg
mov
outsb
jg
incl
dec
fwait
jae
out
sbb
sub
sub
jge,pt
cs
cmp
dec
mov
outsl
mov
test
push
jns
dec
inc
dec
arpl
and
cs
dec
das
ret
cmp
dec
addl
std
xchg
fadds
mov
pop
test
fwait
jl
rolb
test
push
outsl
scas
pop
es
popa
xor
xchg
clc
pushf
dec
and
imul
mov
sub
xchg
leave
flds
mov
into
lods
inc
pusha
ud2
inc
mov
es
mov
jnp
adc
lods
dec
jecxz
loopne
les
rcrl
leave
aaa
cmp
loope
mov
jns
sub
insl
mov
std
aas
push
cmp
xchg
std
xchg
outsl
add
dec
pushf
xor
pop
mov
xor
mov
sbb
dec
or
xor
jmp
pop
ljmp
inc
cmp
xor
mov
cmpsl
fcmovne
arpl
pop
lods
sub
cltd
ja
fisubl
fwait
xor
das
inc
mov
dec
push
das
xchg
xchg
mov
jp
cmp
arpl
jae
jae
dec
or
mov
dec
mov
test
mov
std
in
cmpsb
nop
fcmovb
mov
add
and
lock
lret
sbb
lds
sahf
xchg
cmc
mov
add
sti
dec
daa
inc
cmp
mov
dec
jl
notl
data16
inc
mov
add
sub
stc
and
mov
push
cmpsl
neg
mov
mov
and
pop
lcall
add
xchg
xor
cmp
pop
cmp
loopne
lcall
xlat
ds
xorl
and
inc
jmp
inc
xchg
fs
hlt
xor
sahf
dec
rolb
xchg
lds
dec
sbb
scas
inc
jl
jno
in
mov
imul
dec
pop
inc
push
je
addr16
pushf
loope
sbb
popa
pop
mov
pop
jp
cmp
push
mov
negb
inc
aad
push
fwait
mov
inc
or
mov
sbb
add
cmc
out
dec
pop
bound
or
jl
outsl
jmp
test
add
jg
xchg
in
ret
lods
repnz
push
push
adc
mov
cmpsl
jmp
pop
pop
or
mov
mulb
adc
jle
xor
pop
stc
jne
loop
cld
jg
jnp
push
lret
pop
hlt
stos
leave
jbe
jae
loope
adc
in
fnsave
data16
mov
inc
fs
rolw
push
sbb
outsb
and
pushf
inc
movsl
jg
and
repz
add
jl
shlb
mov
mov
add
cmpsb
mulb
mov
fisubrs
mov
cld
pop
cld
mov
sbb
hlt
ds
in
or
test
push
in
xor
or
cmp
jl
xor
aam
xor
pop
ja
jecxz
push
popf
stos
mov
lret
leave
and
movb
mov
iret
pop
mov
sub
push
xchg
adc
add
mov
out
cwtl
xchg
and
cmp
jmp
xlat
adc
xchg
mov
shll
and
xchg
inc
cmc
sub
out
ja
out
mov
mov
jae
sub
or
pop
jmp
push
fimull
cwtl
mov
pop
repnz
mov
aas
out
push
mov
leave
push
and
sub
std
inc
movl
sub
push
ret
dec
out
jp
in
add
insl
push
aad
mov
push
push
and
mov
cmc
aaa
add
fdivr
addr16
addr16
idiv
xchg
cmpsl
out
or
ds
and
adc
sti
add
inc
fdivl
and
mov
mov
push
stc
jb
lret
and
cmp
out
jns
rolb
mov
mov
aas
orb
push
jl
stc
stos
and
repz
dec
test
movsl
cs
shrb
mov
hlt
in
inc
divb
aas
cmp
or
pop
cli
jle
int3
lea
pushf
xchg
inc
inc
sub
fadds
add
imul
sub
ret
iret
rorb
cmp
and
dec
sub
cmp
add
push
dec
test
stos
je
in
cmp
add
xor
jnp
push
mov
adc
cs
repz
lock
in
cmp
dec
sbb
adc
aam
bound
mov
sti
pusha
mov
mov
fwait
jno
mov
popf
test
jnp
pop
jle
lcall
adc
or
iret
neg
lea
jecxz
dec
out
pop
sbb
sbb
nop
pop
sub
xchg
and
inc
loop
in
xlat
mov
push
or
loop
push
jl
inc
addr16
pop
add
or
sub
sbb
mov
roll
pop
bound
adcb
mov
push
jnp
inc
decl
mov
cld
fcomi
sbbl
leave
inc
fldenv
dec
dec
mov
imul
inc
lock
xor
xor
subl
lea
mov
sbbl
xor
adcl
div
movzwl
add
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
xor
sub
movl
cmp
movl
jne
mov
mov
sbb
mov
mov
orl
xor
xor
add
add
mov
movl
cmp
movl
jae
mov
xor
lea
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
call
cmpl
jb
mov
orl
xor
xorl
add
lea
mov
movl
mov
movl
cmp
jbe
xorl
addl
movl
jmp
orl
addl
mov
andl
xor
xorl
inc
subl
incl
add
movl
cmp
jb
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
xor
mov
sub
addl
add
sbb
mov
subl
xor
sub
subl
ror
sub
xor
mov
add
mov
mov
mov
sub
and
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
mov
dec
mov
jmp
mov
negl
sub
subl
xor
movl
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
jmp
outsb
pop
or
push
pop
xor
cld
fwait
push
rclb
rolb
addl
add
in
inc
sbb
push
push
shl
pop
cwtl
pop
arpl
sbb
loopne
sahf
pop
insb
test
inc
adc
mov
jo
cmpsb
arpl
push
and
lods
fcmovb
in
iret
sbb
cmpb
push
push
les
xchg
lret
outsb
aas
xchg
gs
mov
rcrl
cmc
sub
repz
pop
and
pop
lahf
jg
cmp
jnp
and
or
mov
test
gs
sbb
add
jge
rolb
mov
testb
test
je
push
sbb
fwait
add
inc
cmp
ja
mov
pop
fstps
pop
mov
sahf
inc
repnz
jmp
sti
aaa
les
testl
sahf
xchg
shlb
out
inc
jp
mov
inc
in
adc
subl
in
ficomps
xchg
repz
jecxz
and
data16
sbb
mov
mov
in
movsl
pop
mov
rorl
addr16
fsubrl
or
cld
mov
cmc
xchg
aaa
xor
xor
int
xchg
dec
addb
test
xchg
imul
jo
stc
xchg
or
xchg
enter
mov
inc
les
push
test
dec
sbb
adc
loop
xor
call
pop
test
fsubs
cmc
mov
adcl
das
outsb
push
daa
or
movzbl
divl
insb
cld
jbe
xor
leave
lahf
mov
lods
mov
in
or
negb
hlt
ficompl
jbe
rcrl
das
lcall
jo
bound
scas
add
ret
daa
push
dec
xor
iret
lds
cltd
mov
lret
jg
xor
inc
adc
inc
jae
sub
stos
int
gs
and
int
mov
imul
dec
gs
in
imul
pop
ss
or
dec
les
jg
mov
inc
lods
ja
aam
sbb
pop
jno
mov
popf
jp
xchg
in
add
inc
repz
xchg
xlat
roll
js
nop
out
push
sbb
adc
rclb
fsubrs
mov
arpl
das
popf
shll
in
pop
pop
jle
cld
adc
pusha
stos
aam
cmp
jge
pop
movsl
cli
addr16
jbe
cs
into
cltd
fldenv
pop
mov
cli
fidivrs
mov
inc
or
sbbb
push
push
jmp
jp
jl
mov
mov
ret
rclb
jnp
test
pop
and
mov
fs
insb
out
sub
bound
addb
sti
fcomp
ss
push
push
pop
pop
aaa
cmovge
shrl
push
sbb
sub
or
in
mov
inc
and
inc
jp
jbe
inc
mov
mov
adc
movsl
int
mov
lret
mov
imulb
dec
xchg
sbb
outsb
pop
dec
xor
inc
or
aaa
mov
cmp
adc
jmp
int
or
inc
sti
jmp
mov
arpl
daa
fwait
fwait
push
pop
lods
inc
xor
inc
rcrb
xor
mov
cli
enter
jnp
cmp
sbb
sarb
mov
adc
adc
in
ja
and
jb
cmp
fnstsw
push
sub
push
xchg
lock
mov
push
mov
cltd
popf
adc
in
xchg
loope
pusha
mov
clc
xor
push
pop
or
and
ljmp
sbb
and
cmpsb
mov
mov
jg
or
inc
cs
rcrl
fistps
imul
or
int
xchg
rcll
movsl
jb
pop
jno
jne
sub
imul
rolb
xchg
and
jp
lea
movsb
lea
test
mov
inc
fs
xchg
stos
mov
jae
jle
pushf
lahf
jg
jno
roll
fwait
into
icebp
frstor
jp
test
jp
cltd
adc
loop
stos
push
ss
mov
jmp
sub
jns
cmp
cmp
inc
fxch
inc
in
iret
dec
ds
lcall
out
out
pop
pop
scas
cmp
pop
sub
out
fsubrl
frstor
jno
rdtsc
ss
negb
sbb
sahf
clc
mov
push
xor
arpl
lea
sub
sarl
nop
stos
mov
xor
addr16
mov
jg
and
mov
in
jmp
mov
out
das
lods
mov
cmpsb
gs
xchg
sbb
lret
hlt
out
std
negb
add
mov
insl
mov
pop
scas
paddb
lods
lahf
iret
cmp
bound
adc
jae
lock
jecxz
mov
cmp
adc
movsl
outsl
push
jecxz
incb
nop
clc
jo
cmpsb
loope
aam
fs
into
mov
int3
xor
in
rcll
add
fstpt
mov
stos
daa
xor
add
mov
fimull
fdivrl
xor
xor
fldl
or
ret
mov
dec
push
add
jl
fmull
mov
inc
inc
jecxz
jmp
adc
mov
iret
test
cmc
mov
sub
inc
lcall
in
fs
cmp
xchg
sahf
scas
jae
lahf
cld
sahf
mov
jbe
inc
sbb
aas
pop
popf
jno
and
sub
jnp
pop
xor
pop
jle
popf
add
dec
cltd
fsubr
cmpsb
xlat
mov
push
cmp
jns
aaa
cmc
pop
sbb
push
jo
push
dec
insl
cmp
jle
lods
scas
mov
pop
inc
fdivs
adc
cmpsb
mov
gs
pop
dec
test
jns
les
fwait
iret
ret
negl
push
cli
dec
jp
jecxz
loop
jp
and
shll
lds
xchg
jp
adcb
mov
lods
fcompl
int3
cmpsb
cmp
cmp
jge
and
and
pop
outsb
jnp
aam
cmpsb
arpl
aad
and
popa
lods
mov
imul
out
out
cmc
ret
xor
cld
sbb
sbb
adcl
or
mov
and
pop
addr16
cmpsb
mov
test
adc
jb
mov
xlat
imul
jmp
adc
cli
mov
mov
fnsave
sub
dec
inc
je
or
pop
or
mov
mov
sbb
mov
imull
dec
lods
jge
mov
jmp
pop
outsl
orl
in
push
inc
test
cltd
dec
pop
lods
mull
sbb
ja
test
pop
fstpt
cltd
jns
popa
dec
push
adc
sbb
pop
adc
popf
xor
ja
rcl
data16
mov
imul
pushf
pop
inc
movl
scas
sub
fisttps
mov
repnz
and
lods
lods
xor
adc
outsb
pop
movsl
sub
jnp
idivl
cmp
sbb
push
pop
sbb
testl
std
sbb
cld
mov
or
lahf
inc
dec
jno
dec
addr16
cltd
adcl
mov
push
and
xor
mov
negb
pop
cwtl
inc
fisubrl
mov
pushf
sbb
mov
lods
push
and
pop
int
sbb
add
mov
push
add
inc
mov
cmp
pop
xor
lea
mov
xchg
inc
or
sub
pushf
rcr
cmp
dec
lods
iret
dec
insl
popl
mov
sub
popf
sbb
push
scas
pop
mov
incb
inc
outsb
xchg
inc
xor
shlb
popf
mov
add
std
sbb
shrb
add
dec
rorl
shrb
fstpt
jl
xchg
sbb
icebp
jge
inc
lahf
call
sbb
mov
dec
and
out
scas
sub
xlat
lods
mov
ret
rorb
lahf
ja
fucom
shlb
add
aam
jo
xor
add
stc
stc
outsl
pop
dec
imul
mov
mov
cmp
test
incl
addl
dec
cwtl
mov
mov
lea
or
ljmp
movsl
bound
push
fcoml
and
clc
in
adc
pusha
mov
scas
inc
mov
movsl
push
sub
lea
imul
iret
and
push
jl
jl
xor
lods
outsb
arpl
sub
xor
push
shr
stos
icebp
cli
and
icebp
jne
stos
add
aas
lods
inc
or
inc
adc
test
mov
lret
imul
outsl
or
sarb
dec
pusha
cwtl
pop
lret
out
test
sub
xor
mov
ja
adc
enter
adc
int3
jmp
adc
faddl
in
shll
and
add
nop
push
popf
pushf
mov
adcb
into
adc
sub
nop
or
mov
loopne
inc
mov
adc
mov
adc
sbb
xor
or
arpl
mov
pusha
mov
push
mov
jns
adc
xchg
loop
xor
mov
mov
mov
xchg
and
sub
arpl
loopne
btr
push
cmp
cli
aam
jge
xchg
fwait
inc
or
test
xor
test
jbe
ret
inc
leave
lock
dec
mov
inc
shrb
and
push
out
dec
xchg
sahf
data16
add
in
inc
jmp
je
xchg
stos
mov
popa
and
sahf
dec
inc
int
adc
lea
cmp
nop
aaa
mov
sti
repnz
jmp
lods
dec
mov
mov
cmp
enter
xchg
push
outsl
stos
sbb
fnstenv
push
inc
fsub
outsl
mov
test
into
sub
jnp
push
pop
rcl
jp
aaa
mov
adc
jnp
cmp
dec
or
lret
xchg
xchg
adc
xchg
adcb
mov
jne
sbb
out
inc
mov
and
dec
cmp
lods
imul
xchg
or
repnz
leave
js
je
dec
ss
xchg
mov
push
or
loop
iret
add
cs
dec
test
and
mov
add
ljmp
or
iret
jecxz
insb
fsubr
popf
mov
mov
outsb
jno
jg
pop
adc
jmp
jns
in
mov
clc
ja
loopne
cmp
sbbb
sub
scas
loop
cmp
mov
add
hlt
jb
or
lahf
sub
cmp
imul
cmp
sbb
xchg
dec
dec
fisubrl
push
leave
inc
pop
cwtl
fidivrl
jns
pop
test
out
test
xchg
sbb
add
out
mov
fs
sbb
add
loopne
add
scas
dec
and
aad
es
mov
and
mov
sti
pop
in
testl
push
dec
lods
sub
and
das
leave
sub
cltd
cld
lea
jmp
cmp
or
inc
mov
outsb
out
addr16
cwtl
aas
push
jg
jle
mov
test
push
icebp
iret
cmp
cmp
test
push
mov
std
xlat
into
movsb
sub
and
test
push
dec
xchg
aaa
adc
sub
mov
fwait
lods
jg
xchg
dec
test
lods
loop
xchg
idivb
fldenv
or
and
idivb
xchg
push
subl
outsl
lods
arpl
addb
sahf
mov
movsl
lcall
add
push
fisubrl
inc
mov
xor
gs
mov
pop
jbe
or
mov
out
push
bound
ds
dec
icebp
and
jmp
sbb
mov
mov
sub
imul
xchg
cmpsl
pushf
out
popa
and
inc
outsl
jge
pushf
push
cmp
insb
push
push
jne
inc
in
push
mov
xchg
push
mov
xor
jl
popa
mov
pop
ljmp
arpl
mov
jae
fiadds
es
mov
mov
std
mov
fcoml
fcoms
sahf
cmp
mov
sti
xor
dec
or
pop
mov
clc
es
fidivs
les
lret
mov
cmp
inc
fimuls
pushf
sub
jmp
cmp
cmp
sahf
inc
sbb
fstps
ret
or
das
ljmp
pop
cwtl
lea
mov
push
hlt
xchg
push
enter
jbe
movsb
in
sub
lcall
dec
std
loop
xorl
les
loop
out
mov
and
and
mov
lahf
inc
in
mov
mov
adc
sub
cmpsl
pusha
decl
leave
shll
out
xchg
mov
stc
insl
out
mov
enter
adc
mov
stos
insb
or
inc
pushf
data16
out
mov
sbb
mov
and
fsub
out
repnz
dec
mov
mov
arpl
out
mov
or
xor
inc
incb
test
stc
and
jbe
loope
mov
cmp
lret
add
mov
cmp
lods
xchg
add
jb
add
lret
dec
js
sbb
mov
sbb
lahf
ret
popf
adc
jae
xor
insb
loop
je
xchg
xor
jbe
pop
pop
or
push
xor
cmp
push
jne
jbe
jge
mov
sbb
or
into
jp
icebp
leave
push
pop
jb
xchg
clc
xor
ja
aaa
idivb
inc
ret
aad
mov
push
xor
mov
ja
inc
inc
aam
jle
xor
sub
and
xchg
xlat
outsb
rcll
imul
nop
jnp
cmp
mov
cmp
sti
sub
mov
push
sbb
mov
push
jecxz
lods
xchg
pusha
ret
push
xor
xor
pop
ret
pushf
dec
lea
test
inc
add
or
out
dec
push
int
jnp
pushf
sub
add
sbb
adc
pop
inc
adc
or
pop
outsb
sahf
cmc
sbb
or
adc
inc
push
imul
mov
sti
pop
add
push
xchg
data16
fwait
in
out
inc
adc
mov
inc
pop
fsub
xchg
js
mov
lcall
mov
sub
sti
loopne
jno
jb
sahf
sub
outsl
lds
ret
pop
pushf
movsl
mov
divb
inc
push
sahf
xor
jbe
push
test
cmp
call
mov
test
xor
std
or
xchg
mov
fmull
and
std
jb,pn
fistpll
les
cmp
mov
jae
loopne
push
jns
dec
lahf
idivb
lods
stc
lret
pushf
and
push
cmpsl
enter
out
fwait
jl
sahf
movsl
fisttpll
jl
cmp
mov
insb
cli
enter
xchg
or
xchg
push
inc
or
loope
aam
xchg
loopne
adc
add
cmpsb
das
lds
arpl
cld
cmc
pushf
push
stos
mov
mov
sub
insl
xchg
orb
into
sbb
xor
cwtl
sbb
adc
xor
adc
jmp
mov
out
push
push
cmpl
into
pop
scas
rclb
fdivr
je
arpl
loop
inc
push
bound
aam
mov
jge
dec
test
cmp
ja
fimull
xchg
in
xchg
sbb
pcmpeqd
add
cmp
test
rcr
mov
test
pop
cwtl
sub
and
imul
xchg
fsts
in
fildl
in
jb
decb
jns
jno
push
lret
and
push
mov
mov
cld
push
pop
xchg
scas
test
jno
push
imul
sbb
nop
out
inc
lods
jl
cmp
jmp
out
lahf
xchg
sti
and
outsl
dec
pop
inc
cmpsl
adc
jnp
cmpl
icebp
fisubs
xchg
and
div
cld
sbb
mov
pop
jmp
lds
inc
cmp
or
je
jb
push
mov
mov
jbe
sub
cmp
mov
xchg
pushf
test
stos
jle
mov
pop
dec
mov
mov
imul
xor
adc
fildll
xchg
sbb
ss
idiv
jbe
jb
jmp
xchg
addb
cmp
lret
add
or
add
pop
or
push
jmp
push
lret
into
iret
jmp
push
stos
add
jg
xor
push
cmp
jle
cmp
lods
es
out
pop
dec
int
in
mov
jnp
int3
hlt
lods
adc
mov
movsb
outsl
push
inc
popw
clc
push
shrb
mov
mov
jg
inc
mov
sahf
push
pop
fs
in
cmc
sub
fldpi
mov
sbb
mov
push
aam
lret
mov
imull
aam
ss
jns
sbb
nop
lret
push
addr16
mov
stc
xchg
or
mov
inc
inc
mov
inc
loope
push
pop
push
push
sti
addb
into
gs
test
jmp
push
test
jo
push
xchg
lods
mov
push
add
jb
test
xchg
mov
cmc
fstl
or
or
jmp
cld
jo
xor
mov
pusha
movsl
sbb
add
leave
pop
jns
rorl
jg
xchg
jl
xchg
ret
and
icebp
into
cmp
fistl
jb
xchg
jne
inc
out
dec
or
std
stos
jbe
data16
in
sbb
lret
lods
sub
cmpsl
lock
inc
sti
mov
lret
sti
xchg
inc
xlat
or
cld
aaa
aaa
push
push
and
inc
add
movsl
test
cmpsl
leave
cmc
xchg
pop
xor
mov
fucomp
in
das
stc
arpl
inc
lods
je
ja
xor
insb
loop
lds
adc
mov
bound
out
adc
js
insb
out
fwait
add
mov
xchg
lret
xchg
pop
aas
es
clc
cli
xor
inc
enter
lea
mov
and
xchg
add
mov
cmp
pop
jge
lea
push
nop
test
inc
pusha
fwait
mov
sahf
sbb
int
imul
stc
jb
outsl
dec
or
cmp
adc
push
or
fsubrl
popf
roll
mov
dec
xor
psrlw
jno
jns
jmp
hlt
dec
cmp
cmpsl
mov
ret
push
out
jo
jae
cmpb
adc
mov
push
lret
or
lods
inc
lock
loop
mov
cltd
decb
fs
push
inc
lods
pop
out
les
ss
lret
pop
sbb
cld
sarb
or
les
xchg
push
fcomp
das
jb
add
sbb
jecxz
push
nop
pop
and
fs
scas
ret
fimull
xor
jmp
inc
divl
mov
std
mov
mov
pop
sub
jno
lea
shl
mov
dec
xorb
push
pop
fcmovne
jmp
xchg
mov
adc
mov
pop
sar
hlt
lock
push
pop
testb
adc
bound
xor
xchg
sti
test
push
nop
leave
test
and
inc
xchg
jb
sbb
adc
sbb
mov
xchg
jge
push
add
xchg
mov
in
and
xlat
xor
sti
insb
jns
mov
je
pop
mov
cmpsl
inc
xchg
cmp
mov
movsl
mov
mov
pop
mov
jge
lds
pop
fiadds
xor
mov
fwait
jae
jecxz
dec
jle
gs
sub
lds
lods
dec
adc
jl
stos
and
dec
test
or
addr16
and
ror
and
orl
popa
mov
push
cwtl
movsl
movsl
jg
cwtl
fistpl
cmpsl
xor
cld
xor
mov
and
dec
push
scas
push
addr16
push
pop
dec
testl
icebp
inc
aam
ja
imul
xor
mov
sub
jle
mov
stos
jle
pop
fistps
test
jle
dec
inc
xor
dec
popf
ret
lock
idivb
adc
test
gs
stos
repnz
aad
dec
int3
add
xchg
mov
jle
or
ds
aad
rcll
dec
test
push
testl
fwait
sub
leave
outsl
ret
cmp
mov
cmp
pop
push
mov
push
lcall
cmp
mov
xor
xor
stos
stc
mov
adc
clc
outsl
test
dec
sub
sbb
fidivl
in
push
imul
xchg
sub
cs
mov
cmpsl
sbb
jnp
and
ja
xor
lret
std
add
pushf
lcall
inc
or
leave
data16
dec
call
and
or
insb
scas
xchg
jo
dec
or
mov
stos
xchg
int
mov
push
sub
movsb
xchg
mull
inc
les
lret
adcb
xchg
jne
test
test
and
vpsubq
pop
repnz
fadds
stos
mulb
sub
lret
add
push
in
mov
stos
mov
pop
stos
aam
fistpl
pop
out
sbb
ret
call
push
dec
fldl2t
movsb
or
sub
sbb
mov
adcl
iret
andl
clc
sbb
enter
pop
aad
out
imull
push
jmp
sub
add
add
fldcw
mov
loope
stos
leave
add
xor
repz
sbb
iret
stos
sub
shrl
mov
push
mov
or
shl
lret
cmp
pop
cltd
push
mov
ret
and
xchg
aas
xor
adc
adc
fcomp
and
xchg
sbb
fucomp
mov
inc
notl
xor
aaa
push
add
loop
iret
jmp
dec
push
in
scas
xchg
and
stos
xchg
jle
inc
pop
leave
add
mov
ficomps
mov
inc
movsb
loop
xchg
push
or
xor
adc
jb
inc
popf
rorl
xchg
pop
dec
sbb
push
sbb
xchg
sahf
jne
sti
int3
ret
fstl
or
imul
or
mov
sbb
cltd
inc
and
lea
lock
in
sbb
jne
ds
adc
dec
out
mov
push
sub
xor
aas
negb
sub
dec
cld
inc
inc
sub
fucom
shrl
push
add
ficoml
add
lret
add
inc
int
add
jecxz
cmp
in
sbbb
mov
lds
inc
test
loopne
or
pop
cmp
mov
push
mov
or
adc
mov
add
mov
subl
out
sbb
imul
add
insb
jbe
lret
inc
or
xchg
repz
out
jnp
popa
std
and
jne
pop
fisubl
fadd
imul
mov
sti
hlt
cmp
test
rcrl
sub
adc
test
nop
push
clc
fstl
pop
outsl
loop
sub
and
lcall
cmp
insl
push
sbb
in
inc
xlat
ret
add
jno
mov
pop
cmp
fidivl
or
rcrl
push
or
pop
mov
std
test
pop
mov
into
ds
out
pop
dec
jmp
ficomps
sub
xchg
insb
inc
test
scas
mov
mov
arpl
or
dec
loope
inc
pop
cmp
jb
aam
loopne
loopne
dec
xchg
cmp
rcll
mov
stos
mov
inc
test
adc
mov
sbbl
call
adc
inc
fsubs
push
mov
push
add
cli
cli
lret
push
cltd
lcall
and
cld
mov
test
mov
aaa
ret
adc
mov
pushf
out
ljmp
jmp
jbe
and
mov
push
inc
out
rorb
xor
cmc
adc
lcall
outsl
mov
out
jl
xor
sub
idivb
out
push
cmpl
inc
ret
enter
cmpsl
sub
ljmp
xchg
xor
movsb
lret
or
pop
sbbb
mov
cmp
push
in
pushf
mov
mov
maxps
jp
ljmp
imul
outsb
add
outsb
test
sahf
push
add
mov
inc
cltd
stos
mov
pop
xor
xchg
or
in
or
xchg
aas
popf
push
add
sub
bound
or
dec
sbb
hlt
ds
mov
xchg
cmp
jae
jle
xor
mov
sbb
jmp
movb
int
out
and
mov
pop
jg
push
xlat
xchg
xlat
push
gs
out
cmp
mov
mov
push
fstpl
mov
sub
add
and
insl
out
aaa
mov
ret
mov
ljmp
xchg
and
lea
pop
ss
or
imulb
aad
mov
out
inc
test
pop
mov
pop
cmp
es
push
jbe
push
mov
adc
inc
jecxz
ret
nop
leave
and
test
cmp
dec
cld
jb
inc
push
nop
xchg
int
outsl
mov
jecxz
in
mov
mov
call
jo
push
daa
sbb
addl
mov
and
xchg
icebp
loope
and
add
insl
aad
in
lods
clc
jge
jae
pop
pop
xor
mov
rolb
dec
adc
imull
inc
sbb
cmpsl
add
xlat
aas
xchg
sbb
jmp
nop
dec
inc
pop
movsb
inc
mov
and
pop
push
scas
shll
mov
imul
stos
loopne
std
into
or
jmp
loope,pn
rclb
pop
test
dec
frstor
or
mov
leave
dec
lds
or
pop
push
pushf
aas
icebp
lock
mov
sbb
test
cmp
stc
nop
clc
jl
mov
lods
repz
and
fistl
or
adc
into
push
xor
or
scas
imul
lea
push
int3
xchg
sub
pand
add
xchg
inc
test
cmp
jne
loop
out
mov
lods
lahf
aas
pop
out
sti
test
mov
lahf
and
push
int3
in
leave
popl
test
or
add
leave
test
xor
cld
fsubl
aas
enter
shll
cmpsb
xchg
or
xor
in
xlat
hlt
addr16
or
jle
dec
mov
mov
mov
jb
fwait
jmp
push
movsl
jb
jl
pop
cmp
lret
lea
xor
cwtl
sub
stos
and
jns
data16
jp
scas
pop
jb
mov
fmull
scas
push
inc
orl
sbb
lds
pop
jns
inc
incb
ljmp
mov
mov
jle
xchg
fs
cmp
adc
mov
cmpsl
lea
movsb
pop
adc
mov
cmp
adc
in
jnp
fmuls
push
into
loopne
movsb
add
sub
fnsave
sbb
and
rorl
cwtl
or
out
dec
test
cmp
cs
xlat
adc
movsb
movsb
aam
arpl
ss
dec
addr16
addl
push
cs
jmp
and
dec
decb
and
ljmp
push
cmp
dec
cmp
mov
rorb
push
int
fnstcw
mov
int
jp
filds
add
or
imul
inc
pop
xchg
das
lret
cmp
inc
stos
ds
or
pop
nop
cmp
cmp
lcall
inc
xchg
add
aam
addr16
pop
gs
jp
rcrl
imul
outsl
and
mov
in
sub
or
mov
mov
mov
sub
data16
into
push
pop
test
sbb
mov
inc
sti
ss
mov
cmp
jge
imul
or
push
dec
push
inc
cld
sub
scas
flds
in
mov
cmpsb
sbb
mov
addb
stc
adc
mov
loopne
lods
cmp
nop
push
sub
scas
inc
or
sub
shr
popf
xchg
jp
mov
cmp
mov
xlat
adc
jg
inc
jmp
dec
or
out
lcall
mov
sahf
add
mov
jnp
sub
push
jne
jb
iret
sbb
aad
sbb
std
add
push
icebp
repz
pop
out
sub
mov
xor
and
mov
dec
push
xor
fcomps
push
rorl
and
ljmp
lret
out
cmc
test
cmpl
pop
adc
sahf
sub
iret
or
cmpsl
xor
pop
push
fcomp
jl
xchg
ds
lahf
pusha
js
cmpsl
ljmp
sbb
mov
call
and
sbb
mov
pop
push
lret
jmp
loop
or
xchg
lret
lret
inc
repz
sub
mov
and
insb
sbb
aaa
mov
push
push
and
std
sbb
js
inc
and
pop
daa
imul
cmp
mov
imul
int
jmp
xchg
sahf
nop
jp
mov
xor
xchg
in
mov
dec
rep
push
push
fildl
test
add
mov
xchg
pop
xchg
insb
or
aaa
orl
lods
jecxz
mov
mov
into
fcoml
fstpt
je
and
data16
sbb
cmp
es
or
xchg
push
add
add
xor
jmp
and
fmull
mov
ds
dec
dec
mov
repz
mov
inc
call
popa
testl
pop
repnz
sub
std
roll
fdivrl
push
stos
divb
int
sub
cmc
inc
test
jnp
cmp
test
dec
call
push
add
ljmp
loope
jge
or
xchg
daa
jns
and
enter
pop
xchg
ja
test
dec
dec
inc
xchg
jp
clc
loopne
test
loop
cmc
jns
inc
xchg
ss
mov
stos
jp
xcrypt-ecb
cmpsl
or
xor
imul
pop
arpl
les
jecxz
dec
push
pop
imulb
ss
jns
insb
xchg
cmpsl
jbe
rolb
mov
mov
loop
lcall
add
lret
mov
cwtl
scas
stos
gs
xor
repnz
xorb
push
pop
cmpsl
jnp
int
adc
cmp
addr16
add
xchg
repnz
adc
outsb
lret
add
popa
jge
hlt
sub
iret
dec
jo
gs
ljmp
dec
pop
frstor
push
sbb
popf
sub
or
aam
dec
insl
jbe
adc
sub
imul
pop
push
xor
insb
push
aas
adc
out
ret
xchg
push
xor
iret
push
mov
push
sbb
adc
xchg
mov
sub
icebp
fstpl
rorl
cli
pop
or
cld
add
lea
pop
pop
or
sbb
pop
fdivrs
xlat
adc
sti
xchg
mov
pop
imul
call
cs
imul
imul
mull
outsl
in
inc
jne
lods
fxch
mov
add
jmp
xor
sub
mov
pop
xchg
xchg
jmp
push
ljmp
xor
shll
scas
lock
jnp
mov
aas
lods
sbb
dec
cmpsb
jno
mov
out
pop
loope
stc
pop
mov
mov
test
lock
dec
cs
fsub
hlt
ja
test
divb
add
add
pop
pop
pop
leave
ret
xor
ret
push
mov
sub
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
movl
push
mov
adc
jmp
xchg
xchg
add
stos
push
cmp
addl
out
mov
out
stos
mov
cmp
into
jmp
cmp
adc
popf
pop
pop
pop
test
or
pop
out
mov
les
repnz
notb
shll
push
cmp
test
fdivrs
xor
inc
and
fwait
jg,pt
cs
cltd
mov
jle
mov
les
jno
aaa
jbe
popf
add
mov
jbe
divb
jmp
mov
or
jmp
test
push
lods
cli
inc
dec
cmpsb
cld
shrb
fiadds
mov
cmp
shll
dec
aad
sub
das
or
and
add
enter
inc
stc
inc
fcomi
je
inc
ja
push
or
sahf
add
rclb
rol
and
cmpsb
int3
shrl
push
mov
or
repz
push
das
scas
sub
mov
and
cmpsl
pop
inc
sub
and
out
sti
out
imull
jg
outsl
cmp
pop
cld
fistl
repnz
movsb
push
pop
inc
es
and
pop
cld
lret
pop
push
fs
xchg
or
imul
cmpb
popa
mov
data16
subl
push
push
jle
shll
sbb
test
cmp
add
out
int3
testb
in
pop
pop
icebp
adc
xchg
loope
cmp
or
bound
insb
or
mov
pop
push
cwtl
xor
insl
aaa
clc
orb
dec
mov
adc
inc
cli
jp
mov
pop
adc
mov
adc
or
sbb
test
mov
sub
dec
mov
or
outsl
movsl
lahf
cmpsb
mov
and
lds
clc
xchg
mov
mov
shlb
pop
jp
enter
adc
mov
hlt
ret
fs
mov
jge
cmpsb
shlb
push
xor
jo
or
pop
mov
ret
xchg
rolb
xchg
ja
int
in
lahf
and
adc
sahf
faddl
xchg
add
out
or
mov
cmp
push
shl
pop
popf
aad
xor
dec
sbb
pop
cmp
in
enter
xchg
loop
lahf
repz
or
cld
jge
and
cmp
push
dec
in
pushf
adc
xchg
pushf
fwait
les
cmp
xchg
xchg
pop
mov
cmp
scas
or
shl
dec
push
jb
inc
pop
pusha
in
lds
pop
int3
or
lcall
outsl
daa
or
clc
aad
push
scas
push
movsb
repz
cwtl
test
lods
sti
cmpsb
push
mov
fimuls
fdivs
insb
dec
mov
adc
hlt
cmp
adc
aas
mov
inc
scas
ret
aam
and
cmp
or
mov
fcoml
and
les
ljmp
fisttpl
cli
aas
dec
movsb
fsub
aaa
icebp
mov
inc
imul
sub
stos
test
int3
inc
icebp
jne
adc
rorl
jno
lahf
cmpb
incb
xchg
add
out
imul
sbb
leave
add
mov
pop
aaa
mov
decl
shr
dec
or
rclb
xchg
inc
xchg
mov
push
dec
dec
cmc
xor
out
outsb
pop
xor
leave
mov
and
lcall
xor
rcr
xchg
daa
stos
xlat
pop
jnp
or
lret
and
das
cmp
cmpsb
pushf
dec
fldcw
cwtl
clc
or
cmp
fwait
in
ds
iret
dec
cmp
mov
lahf
lret
subb
dec
stc
rorl
cli
lea
shrb
jo
inc
add
in
inc
arpl
push
ret
ds
pop
adc
cmpsb
test
addr16
push
pop
loopne
fidivs
stos
or
mov
testb
arpl
ja
jae
hlt
pop
lock
xchg
sbb
inc
in
popa
call
aam
lret
loope
das
pop
xchg
or
adc
and
mov
popa
inc
addr16
push
pop
pop
aas
out
and
nop
lsl
pop
or
dec
imul
lahf
imul
adc
ljmp
push
into
jnp
xorl
rolb
push
sahf
mov
and
mov
inc
aas
pop
pop
dec
test
inc
pop
sub
icebp
dec
jle
adc
pushf
adc
in
jle
lds
mov
outsl
pop
xlat
adc
stos
jae
xchg
shrl
inc
xor
xchg
push
lock
mov
ljmp
and
mov
dec
jno
lea
mov
dec
inc
pop
or
aam
repnz
outsb
imul
data16
xchg
fwait
pop
mov
fnstcw
adc
or
sbb
dec
jb
cmp
jbe
inc
movsb
sub
inc
and
push
lea
xchg
sbb
sub
pop
xchg
arpl
inc
push
mov
sarb
lea
add
mov
and
lahf
in
mov
fiadds
out
inc
cmp
popa
or
sub
ret
mov
loop
jae
add
repz
jecxz
fistpl
mov
and
or
popf
les
push
loopne
data16
cmpsl
jl
stc
popa
dec
mov
inc
push
pop
pop
loope
mov
pop
fbld
mov
mov
pop
jle
jo
mov
out
sti
cmp
ss
mov
call
test
jns
das
adc
or
outsl
stos
aas
cmpsl
call
or
notl
mov
es
loop
dec
aaa
aad
add
sub
lahf
inc
mov
inc
inc
mov
pop
push
inc
pop
lea
cmpsb
loopne
scas
add
cmp
inc
mov
nop
iret
into
sub
je
fiaddl
in
sub
or
cmp
std
les
jmp
adc
sarb
popf
xchg
test
out
ljmp
pop
xor
ret
sbb
xacquire
xchg
call
cmp
mov
cmp
inc
outsl
jg
cltd
mov
out
shl
bound
pushf
xor
sub
mov
int3
int
loope
leave
and
andl
mov
xchg
mov
mov
xor
sub
mov
stc
inc
cmp
add
lds
and
push
orl
test
fistl
and
imul
mov
nop
pop
push
jae
ret
mov
nop
mov
xor
cmp
xor
fidivrl
fucomip
mov
push
movsb
fstpl
push
xlat
je
jo
outsb
mov
pop
sbb
mov
jnp
mov
adcl
add
int3
push
in
je
add
lds
pop
adcl
jl
mov
mov
lahf
outsb
or
and
adc
xlat
out
sub
cwtl
shl
dec
ret
std
cltd
push
xchg
clc
and
push
iret
xor
packuswb
js
pusha
int
lret
nop
mov
leave
mov
pop
or
or
aad
jnp
mov
popf
ret
add
ja
sbb
call
fsubrl
add
xor
add
adc
add
mov
mov
ja
pop
inc
sub
dec
mov
jo
inc
lock
cmc
stos
aas
les
loopne
mov
mov
arpl
xchg
nop
mov
jge
fs
push
outsb
lcall
push
jle
movsl
cmpsb
in
push
push
xor
fisubl
mov
addr16
insb
daa
enter
adc
xorb
icebp
pop
pop
movsb
xchg
mov
mov
stc
outsl
mov
gs
pop
nop
pop
ficompl
aam
orl
and
lahf
xchg
dec
sub
and
test
mov
or
loop
mov
clc
sbbb
xlat
fcomps
movsl
or
and
rcll
and
pop
nop
int3
lods
jmp
je
and
lea
and
sub
mov
mov
hlt
sbb
xor
sahf
loop
fidivrl
xor
mov
aas
inc
imul
enter
imul
jnp
mov
mov
pusha
sub
enter
or
adc
lds
mov
push
mov
ds
stc
push
rcrb
push
cmc
mov
out
mov
xchg
into
inc
pop
mov
cmp
xor
popf
sbb
es
push
rorb
push
ret
loope
mull
popa
int
and
dec
leave
xchg
dec
jo
decl
push
or
push
in
jno
andl
xchg
push
andb
loopne
sbb
loop
jno
xchg
stos
sub
cmp
push
or
pop
adc
sbb
aaa
and
and
sahf
push
jb
inc
lods
add
lods
repnz
ret
insl
ret
pop
imul
and
lcall
cwtl
test
addr16
jae
pop
mov
out
aas
mov
pop
sub
out
pop
xor
test
xlat
in
rcll
addr16
mov
xor
push
ss
dec
sar
xor
sbb
outsl
es
imul
mov
filds
xlat
pop
push
decb
es
mov
jnp
sub
pop
cmpsb
push
xchg
vpshlq
fcomp
dec
fwait
lods
aad
cld
and
adc
mov
movsl
test
sub
aad
test
repz
fists
push
ljmp
mov
sub
sahf
pusha
and
scas
test
test
icebp
outsb
out
inc
cmp
jecxz
sbb
fwait
and
outsb
loope
push
out
lret
mov
cmp
in
insb
les
jl
cmp
std
and
xchg
dec
sbb
cld
test
stc
jb
cli
arpl
pop
fistpll
xchg
xchg
xor
fs
mov
push
popa
stc
loope
mov
lahf
xor
arpl
dec
orl
ja
or
mul
pop
jne
or
pop
inc
andb
mov
sbb
pop
ljmp
pusha
pop
fcompl
mov
jle
imul
fdivrp
stos
imul
out
add
aad
mov
cmpsb
fwait
xor
pushf
sub
mov
cmp
imul
test
xchg
push
push
adc
dec
cmp
cli
dec
xchg
adc
ret
cmc
fwait
aam
cltd
insb
and
scas
insl
xchg
jg
mov
pop
jecxz
pop
imul
iret
add
adc
mov
repz
movsb
dec
mov
dec
mov
es
or
mov
cmp
dec
xor
push
lcall
rorl
outsb
push
push
std
fwait
mov
add
shld
cmc
adc
push
pop
lss
dec
mov
adc
incb
cmp
adc
jbe
stos
add
roll
fidivrs
scas
push
cmp
mov
mulb
inc
hlt
pop
pop
in
pop
cmp
data16
scas
cltd
mov
xchg
cwtl
sbb
sbb
movsb
cmc
jl
xchg
daa
fstl
fwait
testl
aam
mov
lock
sbb
out
or
pop
xchg
sub
loop
push
pop
dec
aam
fs
add
fisubrs
stc
or
gs
or
repnz
fnstcw
dec
xorb
cmp
mov
add
mov
arpl
je
mov
cmp
shl
sbb
sub
xor
std
xorb
iret
pushf
imul
clc
xor
adc
xlat
dec
addr16
ret
loope
aas
push
sub
sub
cmp
mov
clc
mov
add
dec
shr
jle
es
das
and
in
mov
pop
sub
jns
xor
xchg
roll
shll
add
enter
sub
jmp
fisubl
in
lods
jne
ja
outsb
jmp
sbb
icebp
mov
or
inc
mov
cmp
mov
or
mov
push
adc
lods
rorl
in
out
xor
insl
test
int3
inc
push
rep
xchg
sbb
lods
adc
sub
adc
outsl
loopne
sahf
cld
inc
mov
jmp
push
and
hlt
lahf
mov
lcall
or
inc
and
mov
cmp
pop
jbe
jl
repnz
ja
insb
push
fiadds
fnsave
repnz
lret
mov
inc
push
lds
add
jp
xchg
pop
in
sbb
xchg
ret
scas
xlat
aad
sbb
lcall
or
push
movsl
fldenv
xchg
rcll
add
cli
outsl
sbb
enter
ret
pop
cli
cmpsl
into
sub
xor
cmpsl
in
lahf
pop
mov
pop
sub
inc
repnz
cmpsl
jns
sub
out
stc
or
mov
scas
xchg
popf
pop
jecxz
cltd
sub
inc
xor
push
stos
es
mov
cmpsb
inc
adc
lock
jae
out
ja
scas
xchg
push
inc
rcrb
xor
cmp
mov
and
idivb
push
xor
lock
repz
jne
add
mov
dec
lret
in
add
sub
jmp
cmpsb
hlt
cmpsl
shl
cli
hlt
insb
push
push
psllw
int3
cmpsl
and
sub
cmp
out
lret
sbb
leave
mov
sti
out
sub
fidivrl
or
pop
mov
and
cwtl
repz
and
jmp
push
stos
xchg
andb
inc
jae
bound
mov
fistpl
xlat
pop
ja
icebp
dec
cmpsl
xchg
movsb
stc
inc
fdivl
or
sub
mov
scas
mov
lsl
xor
jg
xchg
adc
mov
adc
mov
adc
imul
stos
mov
es
inc
dec
pop
or
sbb
push
pop
push
pop
sub
and
or
aas
push
iret
inc
jmp
push
cmp
xor
jg
mov
xchg
or
xor
aam
push
in
in
push
xor
push
cmpxchg
mov
sub
push
out
pop
aad
mov
mov
xchg
div
sub
push
shll
in
push
out
xor
aam
or
cmpsb
repnz
sbb
hlt
jne
loopne
fsubr
dec
or
and
mov
repnz
dec
xor
adc
cmpsl
mov
pop
cmc
push
insb
pop
js
jmp
sarb
out
mov
frstor
cmpsb
push
hlt
lock
ret
int3
xor
int
fisubl
and
sub
push
or
adc
and
ret
push
sub
and
ja
dec
movsl
and
popa
das
ljmp
mov
ja
xchg
push
sbb
ds
xor
push
mov
adc
int
lock
push
lcall
ljmp
adc
adc
scas
sbb
mov
adc
fadds
repz
inc
pop
std
cmp
cmp
movsb
popa
pop
lret
rclb
in
push
add
jb
push
movsb
js
int
mov
xor
pop
aaa
sub
jmp
out
mov
out
cmp
popf
push
ss
int3
ret
dec
mov
gs
dec
fsubrl
test
xor
mov
gs
push
jp
add
fwait
cwtl
dec
test
mov
dec
cmp
pop
or
icebp
daa
stos
inc
lock
xor
jo
adc
imul
ds
mov
sub
stos
push
mov
test
bound
push
push
pop
pop
jmp
pop
jno
stc
jo
out
nop
pop
pop
lcall
sbb
push
cmp
sbb
jns
jg
adc
jo
pushf
int
out
mov
pusha
mov
movsb
sbb
imul
mov
and
mov
insb
jnp
fdivs
xchg
mov
sbb
jecxz
pushf
sti
or
cmp
cmp
clc
pop
js
pop
pop
mov
sbbb
ljmp
fs
xor
loop
stc
push
sub
int
cmc
mov
jae
popa
cmp
fs
daa
aad
mov
int
ret
imul
push
mov
adc
dec
add
lret
movsl
call
mov
dec
or
mov
loopne
in
rolb
movsb
jne
inc
pop
in
xchg
mov
fs
and
fnsave
nop
inc
jno
push
fmull
in
aas
xchg
sbb
pop
push
cmp
mov
dec
xchg
aaa
and
xchg
jne
sar
or
inc
fsubs
repnz
inc
or
nop
mov
mov
mov
into
xor
enter
inc
or
aas
mov
adc
cmp
enter
scas
aad
cwtl
mov
lea
mov
loopne
mov
pop
push
cmc
push
jle
loop
jo
popf
es
cmpsl
push
xor
sbb
add
adc
jmp
inc
movsb
test
push
inc
add
mov
popf
mov
push
stc
mov
mov
outsl
inc
out
cmp
cmpsl
mov
xlat
lcall
cmp
fiadds
or
xor
fwait
mov
cwtl
shlb
mov
sbb
push
pusha
ja
test
push
ret
sbb
jle
or
adc
adc
pop
xor
xchg
sbb
repnz
adcb
push
dec
add
sub
xor
stos
sub
pop
test
mov
in
mov
movsl
dec
pushf
xor
xchg
out
ret
dec
push
xor
addr16
test
or
push
xchg
cmc
xor
repnz
xor
inc
xor
pop
outsl
dec
inc
adc
cli
lcall
xor
dec
push
loope
add
enter
mov
mov
notb
bnd
imul
jbe
mull
aas
test
or
mov
dec
sbb
or
fstpt
stos
inc
daa
pusha
jge
aaa
pop
call
mov
pop
repz
lock
push
lods
sbb
test
sbb
arpl
popf
inc
or
fucomi
sub
enter
fistpl
in
mov
and
or
inc
pop
push
shrb
adc
cmpsb
popa
mov
mov
lds
daa
and
bnd
cld
loopne
pop
mov
stos
xor
mov
jb
iret
sub
mov
cld
pop
mov
xchg
inc
vmovntps
hlt
popa
call
cmp
ja
inc
push
insl
shl
mull
and
xor
mov
les
lods
jg
cmpsb
sub
fcoml
aam
int
sar
fdiv
mov
arpl
push
fldt
inc
mov
inc
loop
addr16
pusha
jmp
xor
loop
insb
loopne
xlat
scas
loop
jns
and
pop
enter
movsl
jl
mov
xor
and
repz
sbb
sub
pop
xor
fnstenv
bound
sbb
cmpsb
lret
aad
mov
jne
imul
or
fsubrs
xor
inc
push
mov
dec
xor
movsb
push
mov
cmp
fdiv
jp
inc
xchg
imul
scas
ret
rorb
daa
es
push
cmp
inc
mov
sub
js
mov
pop
test
js
ljmp
mov
orl
fldt
test
pop
or
or
gs
mull
sub
imul
jae
dec
or
pop
mov
arpl
fbld
and
dec
fiaddl
enter
rcll
stc
sbb
sub
das
and
fists
mov
jnp
jp
dec
push
dec
test
mov
xchg
nop
adc
sbbb
mov
adc
xchg
mov
dec
hlt
push
idivb
jne
jmp
int3
les
arpl
push
mov
cli
sbb
loopne
mov
lock
call
push
fmul
fisubrs
in
sub
mov
push
mov
sahf
scas
adc
pop
cmpb
gs
jb
jb
xor
loope
jno
inc
inc
add
mov
or
jle
push
add
cmpsl
mov
mov
cli
sbb
icebp
sbb
ds
sub
cmc
in
sbb
popl
pop
nopl
xchg
xor
push
clc
in
pop
cmp
idiv
xchg
lret
add
in
sahf
mov
fnstsw
jge
testb
adc
lcall
inc
xchg
int3
sarb
mov
adc
inc
pop
inc
push
data16
or
hlt
pshufw
dec
in
pop
repnz
xchg
jb
pop
jns
and
pop
sub
xchg
stos
popf
dec
pop
es
jo
sti
lea
xchg
lcall
jmp
push
movsb
fsubr
cmp
cmp
xor
push
lahf
sbb
inc
mov
fwait
sti
stos
xchg
cltd
inc
sub
sub
addr16
orl
mov
or
loop
push
mov
add
sub
jb
mov
jmp
pop
jecxz
imul
addl
pop
add
mov
in
mov
fmuls
mov
bound
dec
sub
mov
insb
les
sbb
push
push
idivl
enter
es
dec
adc
lcall
fstps
inc
mov
addr16
dec
sub
add
loopne
lret
enter
push
out
jb
fldl
dec
mov
fcomi
movsb
or
rcrl
mov
imul
and
pop
test
icebp
or
pushf
movsb
lcall
out
cmp
xor
cltd
xchg
nop
popa
pop
fsubrs
das
fisubrs
xor
cs
pop
add
jge
sbb
sub
cwtl
lret
cmp
loop
or
or
mov
adc
lea
sbb
mov
sbb
inc
inc
jbe
xchg
jb
in
and
push
hlt
ret
cmpsb
sub
inc
push
jbe
xrelease
inc
push
sahf
sub
setle
cwtl
add
imul
xchg
mov
fiaddl
cli
es
and
dec
cld
dec
push
pop
clc
and
out
inc
subl
js
jmp
clc
dec
mov
or
sub
ja
mov
dec
sti
hlt
das
std
stc
lds
bound
or
je
movsl
je
xchg
jecxz
shlb
fwait
mov
xchg
push
dec
push
sub
sub
imul
jno
inc
movb
into
rsm
ds
cmp
popa
movsb
shl
fbld
jle
mov
stos
fcoml
movsl
fildll
sbb
inc
into
and
cmp
std
pusha
lods
cmpsb
cli
mov
dec
add
scas
jmp
imul
rorb
out
pop
das
push
scas
pop
mov
mov
adc
loop
lods
push
adc
ficomps
jbe
adc
ss
and
pusha
jnp
add
addr16
xchg
xor
add
sub
repnz
and
pop
ror
xchg
daa
push
test
dec
shrb
stc
shl
lret
outsb
dec
fistl
sbb
dec
xor
mov
push
pop
lret
lock
or
into
sbb
aas
mov
fsubr
jnp
aaa
push
and
push
jbe
in
lcall
inc
and
leave
pushf
dec
xchg
sbb
push
or
adc
pusha
jae
dec
sub
dec
mov
fs
testl
fcomi
push
jnp
cmp
sub
add
jne
xor
aaa
dec
mov
rcl
dec
lea
sub
cld
sub
mov
pop
mulb
sbb
mov
into
dec
add
inc
push
push
jb
aam
js
lock
insl
stc
sub
jb
bound
jno
insl
and
push
mov
xor
pop
xor
jle
add
xor
or
mov
int
test
jle
push
test
stos
in
xor
add
loop
and
mov
aad
nop
mov
imul
cwtl
mov
imul
stos
daa
jl
mov
dec
popa
cmc
aaa
push
xchg
jmp
test
xchg
xchg
and
xchg
or
add
mov
cmp
popa
fwait
lea
xlat
stc
stos
js
dec
adc
mov
xor
xchg
fdivrl
mov
aam
adc
mov
inc
jle
mov
hlt
lods
dec
pop
into
rcl
addb
cmp
ds
xlat
mov
pop
daa
xchg
sti
add
cltd
adc
mov
iret
out
push
pop
add
cli
push
mov
pop
out
jb
jno
out
mov
and
xchg
pop
and
sub
and
cmpsl
jecxz
lds
pop
call
popa
xchg
or
outsb
cmpsl
repnz
subl
push
andb
mov
adc
arpl
in
insb
cwtl
mov
mov
sbb
dec
sub
iret
jp
xchg
insb
repz
dec
mov
jle
loop
jns
adc
push
push
popa
xchg
roll
push
cld
sbb
sti
jne
pop
and
xorb
outsb
ds
sub
push
mov
test
dec
mov
jmp
cmp
dec
and
aaa
or
or
int3
push
xchg
sub
aaa
push
int3
das
mov
fsub
mov
mov
push
jmp
adc
xchg
sarb
mov
sub
sbb
sbb
inc
mov
push
gs
psubusw
les
xchg
lea
adc
jb
in
dec
sbb
adc
cld
lods
cmp
fistps
aas
adc
jo
aas
in
ja
adc
xor
daa
outsl
xor
push
add
or
test
aas
mov
out
jl
cmp
mov
mov
pusha
and
mov
sub
adc
xchg
in
fnsave
mov
jmp
into
insb
fiadds
mov
jp
int3
icebp
in
mov
push
test
scas
addr16
mov
ret
xor
push
or
nop
xchg
xor
inc
ds
adc
js
in
popa
loope
xor
jns
lea
leave
loopne
push
sbb
fucom
cld
sbb
cmp
nop
stos
push
mov
add
fsubrl
iret
add
jmp
inc
xorl
pop
pop
inc
sub
outsl
mov
jae
movsb
fadd
push
mov
inc
xchg
test
jnp
insl
int3
aaa
adc
pop
add
js
cli
scas
fs
rolb
arpl
mov
rcrl
hlt
ret
mov
es
inc
scas
push
sbb
xchg
movsb
mov
in
sub
cmp
pop
sbb
hlt
xchg
mov
xchg
clc
xchg
xorl
jae
mov
fwait
pusha
pop
adc
jge
sbb
cmp
cmp
scas
sub
nop
cmp
aam
sub
push
cltd
xchg
pusha
lds
sbb
das
shrl
std
insb
push
popf
add
mov
cltd
shr
andl
cmc
mov
sub
testl
add
sbb
lea
mov
sahf
pop
enter
cwtl
mov
jmp
and
mov
jns
jge
sbb
iret
iret
inc
leave
sbb
and
lods
xchg
mulb
lock
sub
dec
mov
and
push
mov
and
dec
push
cwtl
xlat
mov
into
scas
mov
fs
adc
mov
gs
mov
dec
int
scas
cmpsl
sbb
and
push
adc
notb
mov
nop
cld
cltd
mov
add
cmp
dec
sbbl
adcl
cmp
jmp
ja
mov
jns
mov
test
adc
or
or
cltd
dec
daa
jg
shll
adc
fstpt
ljmp
adc
xor
lock
sub
outsb
lock
rol
sub
adc
scas
scas
push
pop
jle
ret
fwait
dec
into
test
cmp
inc
pushf
jb
mov
mov
popf
sub
into
imul
pop
dec
popf
data16
inc
dec
sub
xchg
adc
mov
das
pop
imulb
dec
subl
push
and
fmul
jb
stos
dec
pop
sub
dec
nop
xchg
xchg
decl
pop
push
mov
enter
movsb
shl
and
les
mov
stos
pusha
out
pop
jno
loop
ja
add
stos
push
and
in
jnp
push
orb
mov
adcb
mov
inc
scas
xchg
dec
mov
test
enter
stos
adc
push
test
mov
and
aaa
addr16
scas
in
imul
mov
pusha
or
rolb
addr16
inc
xor
lcall
inc
stc
cmp
and
fsub
hlt
lret
add
xchg
loop
and
in
sub
or
into
push
cwtl
stos
stos
les
push
sbb
inc
in
or
mov
sub
or
sub
xchg
add
dec
dec
inc
xor
cmpsb
add
aaa
jo
cmpsb
shlb
or
stos
lea
mov
or
inc
push
jecxz
push
inc
fimull
idivb
enter
push
mov
xlat
lcall
add
scas
and
popa
in
into
jg
add
jge
or
imul
fadds
mov
sbb
mov
fisttpl
nop
nop
aam
adc
mov
mov
into
shlb
inc
out
aam
mov
mov
pop
outsl
sbb
ss
sahf
fdivr
sub
shlb
cmp
and
scas
adcb
enter
cmpsl
xor
mov
fst
jnp
outsb
gs
lcall
daa
ja
icebp
ds
scas
out
test
lret
int3
popf
cltd
mov
inc
push
pop
rorb
mov
adc
stc
or
jle
insb
pop
cmp
lods
xchg
mov
movsl
daa
xlat
outsl
cmp
push
pop
cwtl
je
fdivrl
fsubrl
adc
push
xchg
fdivs
jp
mov
sbb
gs
lret
sahf
aaa
out
addb
jo
mov
mov
mov
cmp
repz
and
inc
pop
out
sub
jne
cmp
faddl
push
inc
fnsave
insl
adc
dec
pop
xchg
lret
cwtl
lcall
adc
sbb
fisttpl
cltd
xchg
iret
dec
cmpl
repz
push
ljmp
push
fucomi
push
and
and
outsb
cmp
in
orl
xor
mov
push
mov
mov
push
andl
fcoml
shrb
xor
cmp
sbb
dec
fiaddl
ds
scas
cmpsl
stos
fadds
cld
xchg
push
rol
scas
dec
cmp
sub
movsb
cmp
lcall
std
cli
push
addr16
test
not
xchg
sub
call
mov
sub
cltd
stos
jmp
enter
push
imul
or
push
inc
xor
xchg
mov
mov
xor
pop
negb
mov
mov
add
ret
adc
jo
inc
mov
mov
inc
adc
mov
push
sub
sub
cmp
inc
pusha
ja
sti
or
adcb
mov
xlat
mov
mov
sarl
pop
shlb
test
jmp
add
push
in
test
pushf
insb
test
test
cmpb
dec
cli
pop
sbb
in
pop
lahf
cs
push
rcr
jo
and
movl
mov
jmp
sbb
les
push
insb
add
jns
addl
jae
cmp
sub
cltd
movsb
pop
stos
xor
int3
js
or
in
ret
adc
mov
jge
loope
dec
inc
xchg
push
mov
insb
enter
inc
dec
in
loop
dec
fucomi
xchg
stc
fsubl
mov
subl
pop
arpl
mov
or
sti
stos
jp
mov
arpl
movsl
mov
xor
lret
dec
jl
cmp
cld
mov
push
jb
push
inc
pop
daa
fwait
rorl
sub
popf
enter
push
inc
add
fisubl
subb
insl
xchg
jno
pop
arpl
mov
inc
cmp
adc
add
cmc
mov
inc
mov
adc
or
loop
shll
rolb
mov
pmaxsw
dec
jecxz
inc
loope
ret
test
jle
lea
jo
mov
adc
shll
xchg
cmp
faddl
sub
mov
xor
scas
call
movsb
inc
lods
mov
jbe
mov
adc
xor
int
int
xchg
std
jb
mov
insl
and
pop
fldt
filds
dec
popf
mov
nop
push
rcll
adc
mov
test
daa
insb
or
aam
cld
dec
dec
mov
add
bound
add
inc
pop
sbb
inc
adc
in
xor
xor
lds
cltd
pusha
fists
adc
ljmp
aas
mov
mov
dec
sahf
lcall
xor
cld
sub
dec
mov
fdivrs
cmp
test
mov
movsb
inc
fildl
aaa
lcall
mov
jge
mov
daa
lods
cs
adc
inc
inc
ds
aaa
leave
inc
mov
mov
inc
sti
in
negb
and
in
dec
hlt
sbb
pop
iret
pop
push
mov
mov
push
aad
pop
les
cmp
sbb
dec
sbb
add
mov
xor
or
fdiv
outsl
in
notb
fsubr
adc
mov
cmp
aam
and
jb
cmpsl
mov
shll
xchg
xchg
mov
xchg
or
mov
xor
cmp
mov
int
add
jbe
out
cmpsl
add
je
insb
mov
loopne
ljmp
inc
sbb
and
pushl
sbb
cmpsb
xor
lret
shr
sar
mov
inc
push
push
hlt
cmpsl
loop
or
inc
stc
push
mov
or
or
jo
fwait
xlat
or
inc
adc
repnz
or
xchg
das
in
inc
cmp
lods
xlat
ja
jg
je
mov
inc
pop
jl
cmc
cmp
mov
and
pop
mov
cmp
adc
adc
bnd
loopne
xchg
call
or
ja
cwtl
and
or
push
enter
jnp
pop
inc
sub
aas
mov
daa
sbb
sub
jg
fimull
fs
int
push
inc
adc
mov
dec
adc
imul
pop
add
xchg
iret
outsb
inc
add
cs
dec
in
into
int
stc
cmc
pop
push
push
mov
movsb
inc
lret
mov
mov
xor
jno
outsl
or
rcrb
lea
push
cmpb
lret
push
mov
ret
cmp
cmp
leave
and
imul
adc
pop
sub
sub
push
sub
outsl
or
and
cs
mov
dec
lret
dec
adc
xchg
or
nop
dec
icebp
jg
loope
sub
mov
test
cs
daa
cmp
fisubl
cmpsb
adc
sbb
cwtl
cmp
cmp
xchg
jno
add
jns
aad
cld
nop
sbb
add
sbb
idivl
scas
mov
enter
jne
les
mov
arpl
scas
adc
or
dec
orl
ret
or
mov
lock
sub
xchg
xor
inc
lahf
pop
dec
pop
lcall
popf
lret
mov
inc
inc
cmp
outsb
test
jo
inc
or
sub
mov
xchg
push
jo
loope
mov
xchg
mov
aas
outsb
mov
sbb
sbb
pop
pop
mov
pop
fwait
lahf
sti
jne
leave
ret
cltd
mov
inc
jb
pop
jne
repz
rcl
and
jno
push
in
pushf
pop
mov
arpl
push
pop
leave
test
jmp
adc
inc
and
dec
or
cwtl
sahf
dec
jg
mov
xor
push
mov
push
pop
mov
mov
sub
add
or
pusha
push
jge
out
jecxz
cmp
hlt
ficoml
pop
cli
mov
in
dec
dec
stos
and
and
pop
mov
imul
out
ret
insl
dec
js
pop
jbe
into
push
xchg
mov
andb
cs
aaa
adc
jecxz
mov
sbb
shll
adc
mov
aas
jmp
sbb
sbb
fstpl
sbb
pop
repz
stos
mov
decl
aad
fldt
daa
jecxz
repz
jbe
mov
imul
dec
xlat
cmp
or
dec
cmp
pop
clc
stos
add
jge
xor
sub
mov
inc
pop
and
push
and
and
js
mov
mov
call
test
or
out
ljmp
sub
dec
pop
idivl
push
leave
sti
call
xor
dec
das
fisubrl
lret
test
movsl
inc
dec
aas
aaa
lcall
push
cld
push
or
or
sub
mov
pop
inc
adc
aaa
shlb
out
mov
stc
test
mov
js
inc
dec
lret
vpaddw
inc
or
shll
fidivl
xorl
mov
add
aad
xchg
fwait
aas
add
cmp
cmp
mov
scas
scas
rclb
sahf
repz
pusha
das
and
test
mov
push
cmc
js
inc
les
jg
mov
int3
and
mov
scas
cmp
cld
xchg
cmp
mov
or
pop
mov
lcall
push
cmp
pushf
add
jns
test
call
sbb
mov
pushf
mov
jae
popl
xor
lock
mov
xchg
dec
addl
xor
movsl
rorb
nop
add
ljmp
sahf
push
adc
xchg
xlat
pop
push
testb
rorl
aas
or
aam
repz
je
cmp
xchg
sub
jge
add
push
imul
cmpsl
aam
adc
fsts
pop
pop
fisubs
aad
aad
xchg
and
popf
fildll
mov
adc
push
push
mov
cmpsb
pushf
dec
jo
or
cmc
adc
pop
jb
xchg
scas
popf
insb
jno
add
call
in
out
cmc
sbbl
addr16
push
sarb
pop
jb
inc
scas
sbb
xchg
stos
stos
sbb
popa
push
xor
sub
push
add
pop
xor
or
add
xor
pop
mov
in
jmp
mov
pop
sub
repnz
lcall
sti
pop
popa
test
lods
imul
fiadds
cmp
aad
lock
jmp
insb
lods
and
pop
fsubrs
xor
repz
push
scas
cmp
roll
dec
loop
push
dec
insb
divb
mov
outsl
ja
fisttpll
repnz
add
popa
cli
fcmovnb
and
mov
mov
shll
cmp
aad
fnstsw
rcrl
bound
push
lret
in
sbb
jae
dec
hlt
popa
xchg
and
in
test
pop
add
lahf
mov
push
fcomi
or
int3
cmp
pop
popa
sbb
xchg
repz
sub
push
cld
dec
sbb
add
cwtl
js
test
rorl
sub
inc
aaa
gs
hlt
inc
xor
push
into
or
or
in
lods
add
cmpsb
frstor
out
daa
pop
sub
and
mov
imul
pop
test
adc
mov
add
movsl
insb
xchg
cmpb
cmp
hlt
lret
push
and
das
or
mov
popa
add
insb
jl
popa
enter
cvtpi2ps
pop
xchg
jl
mov
cwtl
mov
ret
and
out
jp
mov
add
jns
pop
cmpsb
push
sbb
cmp
ret
jne
test
sbb
adc
iret
int
es
jl
icebp
in
mov
jno
movsl
mov
nop
fadds
mov
dec
jp
jg
sub
outsl
insl
inc
lods
add
ljmp
jmp
dec
fwait
loope
inc
in
loope
test
push
sahf
lret
and
out
out
imul
imul
stos
or
gs
rorl
jae
xchg
and
lcall
faddp
ja
stc
jecxz
fsts
out
mov
jp
xlat
stos
jge
adc
clc
cmp
test
mov
xchg
pop
xorl
lret
ja
sarb
pop
mov
insb
hlt
clc
mov
addr16
fbstp
gs
xchg
rcll
push
jl
or
call
scas
jnp
test
repz
push
jl
xor
in
cli
cmp
sbb
cmpsb
aam
sbb
leave
pop
daa
stc
sbb
bound
fdivl
aas
jns
out
xchg
pushf
pop
cmpsl
lea
into
mulb
adc
sub
mov
pop
sahf
push
mov
pop
add
jns
mov
sub
inc
add
inc
pop
push
xor
pop
mov
nop
shrd
pop
outsl
sbb
dec
fwait
mov
pop
dec
sub
fisttpll
xchg
leave
repz
lret
dec
jns
nop
out
arpl
push
insb
add
enter
xor
pop
jns
xchg
xor
xchg
and
rcrb
mov
mov
or
aaa
sub
push
cwtl
sbb
outsb
mov
xchg
cmp
decl
outsl
movb
loope
pop
das
mov
mov
mov
mov
pop
lods
hlt
lods
divb
push
sub
fwait
adc
sub
inc
sbb
cmp
push
mov
adc
cmp
sbb
pop
or
xor
pop
stos
js
das
icebp
ja
sub
mov
cmpsb
sub
inc
or
adc
jno
fldenv
fwait
out
fstpl
loop
push
dec
jecxz
cmp
mov
out
xlat
dec
lods
test
movsb
mov
popl
int3
scas
icebp
add
xor
sub
int
mov
xchg
xchg
push
call
cwtd
loopne
test
movsl
lods
pusha
repz
test
imulb
movb
pop
xor
sti
add
mov
lret
mov
adc
das
scas
dec
jnp
movsl
loope
movsl
mov
test
into
dec
lahf
sbb
mov
into
or
lret
lds
shll
testb
dec
fimuls
add
push
imul
jg
pop
in
fisubrl
push
cli
xchg
roll
out
cmp
mov
push
ss
cmp
mov
lds
ljmp
movsl
sbb
call
aaa
sub
mov
nop
insl
or
es
sub
adcb
mov
add
inc
insb
fiadds
lods
fdiv
cmp
mov
enter
jo
inc
cmpsl
mov
sbb
jno
xchg
lret
fisttpl
faddl
cmc
ds
popa
sarb
call
cs
dec
jmp
xchg
push
in
stc
push
or
mov
out
cmpsl
add
adc
and
hlt
mov
ja
daa
push
out
jbe
push
and
inc
or
arpl
rcll
mov
lahf
addr16
cwtl
xchg
lahf
mov
jg
mov
daa
nop
rorb
mov
int3
in
pop
orl
sbb
mov
and
leave
jae
ror
sub
outsb
leave
dec
mov
insb
jbe
jno
cltd
pop
mov
mov
sbb
mov
sahf
sbbl
cmp
rcrl
push
push
pusha
aas
add
push
push
sahf
jecxz
dec
icebp
les
sbb
mov
out
and
xchg
test
inc
pusha
scas
mov
cld
icebp
sub
iret
push
sar
xor
inc
int3
jle
daa
push
out
das
insl
mov
xlat
stos
mov
outsb
sub
cmp
pop
add
dec
mov
pop
jl
jno
popa
mov
scas
inc
dec
pop
sub
js
add
testb
dec
mov
insb
in
jecxz
or
jge
cmpsb
into
je
or
pusha
sbb
mov
nop
cmp
inc
adc
cltd
xchg
loope
push
adc
in
insl
adc
pop
lcall
sub
inc
mov
ret
pop
bound
jbe
rclb
nop
imul
fbld
mov
enter
mov
and
sbb
pop
in
sbb
pushf
xchg
jae
or
ffreep
insb
fsubs
cmp
addr16
mov
sarb
insl
ja
movsl
in
cli
xor
nop
pop
xchg
orb
cmp
adc
sub
fs
inc
shlb
ret
inc
outsb
daa
mov
mov
or
mov
dec
cmp
cmp
dec
xchg
fidivrl
mov
inc
add
or
in
pop
mov
aam
popa
pop
mov
das
add
rorl
in
out
int
shr
mov
dec
ja
and
mov
in
movsl
mov
mov
sbb
and
sub
push
mov
pop
pop
je
sbb
addr16
mov
jle
push
jecxz
dec
js
mov
adc
into
pcmpgtb
test
int3
push
pop
push
insb
fildll
add
jo
outsl
mov
fstpt
inc
adc
mov
jmp
cmp
fildll
mov
mov
pushf
mov
call
xchg
bound
dec
inc
aad
push
outsl
cmp
fwait
addr16
push
std
xor
inc
andb
outsl
pop
ds
or
and
pop
sbb
add
dec
push
sbb
push
lret
mov
aad
sar
and
ficompl
les
adc
mov
mov
jmp
cltd
int3
std
push
and
stos
movsl
jl
cmc
and
mov
stos
int
adc
xor
jno
cmp
sub
and
xor
gs
sbb
jae
or
sbb
sbb
pushf
nop
lods
mov
jp
movsl
xor
dec
cmp
add
dec
xlat
test
pop
push
fmull
pop
xor
lret
push
cmpsl
movsl
or
ja
inc
push
test
incb
aad
push
lods
in
jo
cmpsl
lds
rcrb
inc
in
adc
movsb
jecxz
repz
adc
sub
jno
jge
int3
dec
mov
lret
push
out
pusha
mov
xor
xchg
inc
pop
out
dec
adc
add
ds
idiv
push
ror
mov
push
in
jo
xchg
stc
xchg
xchg
and
pop
leave
cld
subl
shrl
mov
xor
push
in
jp
aam
pushf
jnp
aad
cmp
in
jp
aad
pop
and
adc
int
xor
xor
dec
js
xchg
pop
mov
and
add
ret
mov
add
jbe
mov
xor
mov
shrl
mov
push
test
cmpb
in
jo
xchg
fstps
mov
sarl
xchg
mov
mov
sub
xor
stc
pop
mov
adc
mov
ljmp
sbb
insl
repz
lea
jg
cli
and
divl
jle
and
and
ret
outsb
mov
cltd
sbb
dec
clc
mov
add
aad
mov
jns
movsl
sub
sub
push
jns
adc
or
bound
popa
cmpsb
sbb
push
adc
pop
sti
dec
sub
pusha
xor
outsb
in
pop
fimull
dec
or
in
xlat
mov
push
fisttpll
or
fsubl
pop
cmp
lcall
test
pop
nop
dec
xchg
movzwl
and
jne
pop
rorb
mov
jl
ja,pn
cli
and
xor
test
sbb
cmp
mov
outsb
in
pop
xchg
pop
mov
insl
push
pop
mov
ljmp
jecxz
adc
outsb
daa
dec
outsl
pusha
cld
test
in
jge
jbe
mov
push
shlb
jp
add
push
sub
sub
sbb
mov
mov
dec
jecxz
dec
loopne
popa
xor
xchg
jp
jge
imul
sub
inc
dec
clc
jmp
pop
mov
in
imul
lahf
cmp
lcall
ficoms
jg
push
cmp
add
xchg
cmp
inc
mov
cmp
xor
hlt
mov
or
fwait
dec
push
pop
aaa
dec
fwait
mov
push
jp
clc
or
movl
push
mov
xor
shll
mov
sub
mov
push
or
or
mov
iret
jno
cmp
shlb
clc
enter
hlt
and
cmp
sbb
mov
nop
push
gs
insl
sar
fisubs
jne
insl
adc
adc
add
jg
leave
jecxz
and
data16
mov
mov
lea
adc
aad
dec
scas
add
cmp
pop
sbb
test
lcall
std
dec
fst
cli
jns
repnz
or
add
int3
sbb
and
das
pop
and
loope
xchg
inc
and
or
mov
push
stos
popf
sub
aad
mov
sub
or
add
jp
mov
add
mov
in
pushl
sarl
xor
cmp
push
negl
mov
pop
mov
cmp
fidivl
arpl
pop
stos
push
pop
adc
mov
mov
in
leave
in
jno
xor
cmp
pusha
outsl
pushw
pop
mov
outsb
xchg
in
jecxz
add
rclb
and
and
mov
outsb
aam
enter
iret
dec
bndldx
or
push
xchg
mov
or
cld
cmp
push
dec
aaa
pushf
out
addb
es
cld
cwtl
cmp
enter
xlat
cmc
sbb
cli
sbb
jne
aaa
in
fwait
out
jecxz
fnstenv
out
loope
nop
mov
mov
andl
and
mov
push
out
dec
xchg
leave
sub
pop
push
sub
pushf
dec
pop
sti
adc
stos
jmp
rorb
pop
jge
pop
vmwrite
push
add
setl
add
fstl
dec
push
add
push
insl
rcll
fiaddl
cli
xchg
push
test
out
enter
dec
jnp
das
les
repnz
dec
jb
movsl
iret
xchg
add
inc
push
adc
ja
cmpsl
cmp
inc
test
xor
xor
pop
in
bound
lahf
inc
out
lret
cld
xchg
adc
out
mov
xor
xchg
ds
mov
jns
popa
in
cmpsl
sbb
cmp
pop
inc
js
in
test
call
cmpsl
xlat
inc
fstps
outsl
add
bound
mov
jno
cmp
jle
incb
cmp
fisttps
and
pusha
dec
int
dec
or
xor
mov
mov
push
mov
sbb
push
push
mov
cmp
lods
movsl
loope
mov
add
sub
repnz
shll
adc
xchg
mov
jle
xorl
mov
lea
sbb
cltd
test
shll
mov
push
dec
in
jae
dec
mov
xor
xchg
mov
jbe
or
adc
aas
adc
imul
push
mov
insb
dec
stc
pop
pop
scas
insl
roll
xchg
popf
imul
mov
icebp
mov
ljmp
jmp
xor
and
or
jo
pop
inc
movsb
inc
testb
rcl
xchg
xchg
pusha
push
popa
fiadds
mov
outsb
fsubp
jl
pusha
mov
sub
lods
add
and
cmp
mov
jg
in
movsl
popf
jae
lcall
aam
cmc
inc
push
sub
loope
mov
sub
es
popl
jp
adc
adc
cmpsb
inc
inc
in
pop
stos
dec
and
incb
jmp
orl
loopne
jge
les
lock
cli
sbb
pop
sub
xor
leave
ret
in
pop
xor
mov
pop
mov
mov
adc
dec
in
lods
mov
and
icebp
jp
inc
jp
adc
cs
insl
aam
sbb
sub
dec
xlat
jecxz
or
popa
fdivl
dec
clc
and
mov
cmp
push
cmpsb
inc
shrl
fistl
xchg
mov
pop
mov
rorl
outsl
loopne
inc
cmp
mov
outsb
outsb
push
lods
in
call
sbbb
ss
nop
jmp
daa
push
sub
pop
mov
mov
cmp
xor
inc
into
pushf
push
rclb
mov
stos
daa
cmp
into
dec
add
daa
cmp
sbb
add
lods
das
mov
nop
mov
mov
sub
cwtl
and
jns
inc
inc
insl
imul
cmpsl
lods
aas
bound
in
sbb
jno
call
aaa
fldlg2
mov
push
and
push
rcl
cmpl
aaa
mov
jp
sbb
dec
loop
movsl
scas
xor
jecxz
and
ret
push
sbb
dec
cmp
jae
mov
cmp
fadds
hlt
fadds
cmp
stos
inc
inc
cmp
fimuls
dec
inc
push
sbb
pop
add
adc
xchg
xor
inc
push
std
mov
out
sbbb
lcall
jle
or
xchg
push
mov
das
mov
dec
rcrb
jns
adc
xchg
leave
jp
sbb
push
push
aam
or
outsl
sti
mov
xchg
int3
fidivs
in
lds
pop
inc
sub
ret
fwait
insb
xchg
ret
out
pusha
sbb
aam
mov
mov
dec
pop
sub
ss
cmpsb
cmp
xor
out
add
and
int
xchg
stos
xor
loop
enter
jmp
mov
outsl
ljmp
shll
xchg
xor
imul
inc
xor
mov
pushf
sbb
sbb
cltd
add
xorl
lahf
loope
mov
sbb
mov
and
cltd
in
mov
lods
int
mov
inc
and
pushf
pop
cmpsb
lea
dec
fdivrs
mov
pop
jge
or
inc
cltd
sarb
and
push
addr16
and
xorl
pop
mov
mov
in
jg
xlat
push
xchg
or
adc
bound
xor
pop
adc
jge
out
ret
inc
test
mov
dec
insb
test
jae
pop
xor
xchg
aam
mov
les
rolb
nop
repnz
xor
cwtl
insl
mov
arpl
pop
inc
sub
sub
mov
jb
sbb
jo
gs
inc
adc
arpl
dec
mov
push
aas
jae
cmp
imul
jae
mov
aam
jnp
sub
cmp
ss
fldl
push
sbb
div
mov
stc
sub
mov
push
push
insl
sbb
mov
pusha
cmp
gs
pushf
or
enter
add
repz
in
out
mov
stc
jg
dec
leave
cmp
or
in
mov
mov
mov
cld
add
out
push
ja
xor
pop
fdivrl
scas
and
pusha
sub
movsb
ss
jg
mov
int
cmp
lahf
jmp
jbe
add
fdiv
cwtl
push
adc
lock
and
push
jbe
adc
inc
adc
loopne
dec
repnz
hlt
cmp
jge
inc
or
shl
inc
aaa
xchg
mov
jne
adc
scas
cmp
xor
scas
lcall
enter
addr16
cwtl
add
in
push
pop
inc
adc
adc
js
stos
gs
pop
add
jns
outsl
icebp
sub
xchg
push
jns
addb
js
xlat
lods
es
das
divl
jl
and
cltd
movsl
cmp
push
xchg
pop
inc
mov
or
xchg
adc
mov
and
cmpsl
pop
sbb
movsl
or
mov
push
push
aad
mov
mov
jno
mov
hlt
lret
fidivs
lea
movsl
inc
push
jae
into
xchg
cmpl
jno
xor
adc
scas
dec
xchg
fsubs
add
dec
sarl
mov
mov
dec
loope
jbe
cmp
test
jne
dec
add
push
jmp
pop
fadd
leave
pop
mov
sti
inc
adc
lret
flds
xchg
leave
sti
pop
add
xchg
dec
cmp
pusha
ficoms
mov
gs
mov
clc
sub
pop
fmulp
jno
rcpps
pop
mov
dec
fs
or
imul
ljmp
jb
jo
mov
pop
lods
xchg
sbb
out
dec
imul
pop
jmp
inc
inc
dec
inc
cmp
jae
cwtl
gs
addr16
xchg
mov
repz
lea
imul
and
cwtl
sbb
push
cmp
aam
rcrb
push
je
cmp
inc
xor
imul
inc
dec
outsl
rolb
mov
xor
xor
cmp
push
xor
sub
shlb
testl
mov
hlt
idivb
lods
push
mov
sahf
bnd
jns
mov
ljmp
cmpsl
cmc
imul
sbb
push
pop
jo
data16
test
stos
outsl
and
sub
push
arpl
test
cmp
mov
iret
lcall
inc
sbbb
stc
cmpb
adc
pop
test
hlt
add
mov
fcompl
and
push
nop
push
fistps
call
popa
jbe
xchg
mov
mov
out
mov
fs
sbb
sub
repz
push
dec
in
and
cld
shl
leave
cwtl
pop
repnz
mov
jb
aam
or
nop
stc
fimull
xor
fcmovnb
adc
xor
mov
push
xchg
jo
push
popa
dec
out
popf
xchg
scas
sub
ret
dec
cli
dec
pop
xor
xchg
add
jmp
test
push
or
mov
lock
pop
das
mov
jb
mov
lcall
cmp
add
fstl
jno
or
lods
movb
aas
xor
add
lcall
fs
insb
adc
jmp
xor
test
scas
sbb
adc
xchg
sahf
mov
cld
jecxz
and
jnp
lahf
mov
pop
lods
aad
jb
out
repnz
lcall
pushf
adc
loop
fcmove
cmp
fidivs
test
push
inc
jae
lret
lcall
ljmp
adc
pop
test
insl
jns
out
in
mov
aam
jno
imul
iret
mov
mov
mov
lods
dec
loopne
cmp
popf
sbb
aam
insl
repz
outsb
cmpsb
cmpsl
shll
clc
movsl
cwtl
jmp
sbb
in
xchg
in
cmpsb
es
push
dec
cmpsb
lret
fisttpl
xor
mov
and
loop
aas
and
mov
xchg
ffreep
ror
popa
xchg
inc
sbb
rclb
sbb
push
aad
scas
jp
mov
jg
or
cli
out
dec
adc
pop
in
dec
cli
mov
cwtl
push
loope
push
imul
lods
push
xchg
iret
mov
or
dec
out
cwtl
jo
std
adc
add
ds
or
testl
mov
jp
and
rorl
pop
mov
clc
scas
mov
leave
cli
das
xlat
push
push
cmpb
dec
shl
inc
subb
mov
sbb
loop
in
lret
or
lods
adc
sarl
fstpt
dec
ficoms
cmc
loop
cli
push
pop
sbbb
clc
iretw
in
clc
xchg
mov
mov
xor
fidivs
test
mov
and
pop
mov
cmp
popf
inc
pop
add
cltd
jle
lret
into
enter
cmp
aad
out
jnp
arpl
and
cmpsb
cmc
pop
repnz
and
nop
pop
in
cmp
jp
movsl
pop
sub
popa
pop
jmp
aad
or
lahf
sti
sub
lods
movsb
test
and
outsl
mov
cs
inc
sbb
lods
mov
push
test
dec
lahf
mov
mov
gs
loop
ds
jo
hlt
in
lahf
ret
sub
fimull
mov
mov
inc
pop
push
sub
lcall
ror
push
jge
daa
pop
data16
xchg
aaa
repnz
xor
test
jge
rorl
sbb
insb
sbb
mov
aas
cmp
cmpsl
leave
mov
or
fcoml
movsl
dec
jae
mov
cmpsl
cmp
inc
sub
sbb
fdivs
xor
or
ret
inc
fistps
lock
mov
out
push
outsl
rcr
jge
clc
and
lds
jmp
push
lahf
push
sub
cmp
cmp
cmp
in
scas
xor
push
add
ror
in
fmull
in
jbe
inc
dec
sbb
call
adc
imul
mov
push
add
movsl
cmp
dec
push
push
sbb
mov
mov
repz
test
mov
sbb
fists
sub
and
cmp
xor
cld
jnp
or
pop
icebp
addl
testb
jb
xchg
insb
rorl
inc
cmp
mov
aad
push
lea
push
xor
xchg
sub
sbb
jnp
adc
mov
pop
stos
and
fcomp
fisubrs
adc
inc
es
cmp
add
jne
aam
popa
mov
and
or
aas
cmpsl
add
pushf
or
stos
cwtl
imul
inc
pop
nop
push
xchg
push
test
cs
push
mov
andb
jge
mov
dec
fists
inc
dec
xchg
inc
js
pop
cli
cmp
lret
add
shlb
dec
xchg
mov
jae
into
jb
lahf
scas
rep
jne
ret
pop
mov
aaa
sbb
pop
jb
mov
popf
sbb
out
es
xor
adc
mov
jmp
mov
jle
popa
popw
es
sahf
xchg
xor
repnz
dec
add
js
idiv
int
addb
mov
inc
push
mov
mov
iret
test
sbb
stos
data16
stos
jmp
loop
sbb
ja
inc
inc
xlat
cmc
cmpl
mov
lret
cmp
sbb
imul
sarl
scas
ret
xchg
mov
cmpsl
push
push
orl
mov
xor
push
and
mov
andl
add
mov
mov
adcl
test
je
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
pushl
call
cmpl
jb
mov
mov
dec
mov
mov
xorl
xor
and
add
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
mov
dec
mov
jmp
mov
add
xor
add
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
jmp
jmp
dec
shr
shl
push
mov
adc
mov
pop
mov
icebp
pusha
addl
cld
jge
pusha
sbbb
jo
dec
shrl
icebp
mov
das
cmc
xor
push
mov
mov
daa
dec
gs
into
or
push
pop
mov
sbb
inc
fists
repnz
mov
mov
xchg
xlat
mov
mov
int
pop
idiv
sbbl
mov
aam
inc
fwait
imul
jmp
sub
dec
inc
ret
std
lcall
fs
push
js
mov
inc
cmp
or
jg
insl
mov
outsl
loopne
jle
cli
sub
cli
dec
cld
and
xchg
icebp
stc
xchg
std
adc
pop
insl
push
mov
idivb
and
int3
adc
push
xor
jp
sbb
es
jae
mov
ret
xlat
mov
and
cld
cmp
pop
negb
xor
cmp
fwait
xchg
jmp
fldl
jge
aas
push
push
ja
nop
mov
roll
mov
mov
add
xchg
lods
loop
mov
mov
adc
xor
sahf
inc
cmpsb
lret
scas
push
xchg
cld
jmp
mov
loopne
aam
jae
cmova
xchg
dec
push
mov
rorl
mov
imul
pop
push
add
fld
cwtl
push
stos
fistpl
enter
call
push
sub
lock
xchg
std
jnp
sub
sarb
xor
xlat
dec
rol
mov
fildll
or
cmp
xor
lea
in
push
mov
cld
das
xor
push
cli
dec
and
into
inc
testl
hlt
scas
sub
loop
fwait
jb
cmp
ljmp
imul
cmc
pop
xchg
dec
push
and
jmp
pushf
dec
cli
xor
aaa
xchg
and
repz
add
cmp
aas
xchg
xor
lahf
mov
sahf
out
dec
cltd
cwtl
addr16
mov
xor
mov
cmp
cmp
mov
jle
pop
cli
jl
push
hlt
cmp
inc
adc
aas
or
fimuls
inc
dec
mov
jns
mov
dec
mov
xchg
in
mov
adc
fldenv
mov
mov
xor
mov
cld
xor
add
sbb
adc
push
dec
sti
movsb
push
test
into
pop
lahf
cmp
ror
mov
xor
mov
clc
sbbb
add
cld
xor
inc
xor
int
iret
add
aaa
sbb
or
orb
sbb
mov
nop
sar
idivb
push
ja
push
test
sbb
fwait
pop
addr16
adc
or
jp
add
jge
push
cmc
adc
push
mov
inc
outsb
push
popf
or
mov
out
aad
add
adc
lahf
and
icebp
aad
push
add
push
fwait
add
pop
or
fimull
ret
imul
inc
push
lock
dec
test
adc
into
in
push
gs
cld
xor
xchg
xchg
and
das
jecxz
jge
scas
mov
insl
pop
xchg
shl
clc
mov
mov
cmp
stos
pusha
scas
leave
push
fldpi
bound
inc
sbb
pop
jge
xlat
cmc
mov
ficoms
and
inc
jp
sub
in
cli
jl
xor
mov
inc
flds
shr
js
fidivrl
cltd
cwtl
mov
outsl
shrl
aas
popf
mov
jnp
movsb
test
std
pop
jp
jo
jle
repz
ss
mov
int3
mov
arpl
push
dec
popf
sahf
insl
ljmp
test
mov
scas
inc
jge
push
sbb
sub
xlat
mov
sub
enter
xor
mov
cwtl
out
add
cmp
push
ds
jg
push
fisubs
loope
push
xchg
inc
ljmp
jmp
mov
sub
pop
enter
push
pusha
imul
repnz
ljmp
sbbl
flds
jb
mov
push
scas
fbstp
bound
fsubrs
fs
mov
mov
ds
xchg
outsl
popa
pop
imul
pop
push
inc
adc
or
adcl
sub
sbb
xor
movsl
adc
lret
in
add
loopne
inc
pusha
add
int3
push
aas
dec
in
mov
sub
or
lods
lahf
sbb
iret
enter
mov
jne
mov
lea
lret
or
or
and
xor
lods
mov
dec
loopne
mov
addr16
xlat
pop
push
fisttpl
int3
xchg
cmp
lods
hlt
adc
or
lret
push
xchg
or
fchs
jl
shlb
aaa
div
pop
stc
faddl
sub
hlt
jle
pop
in
aaa
pop
insl
mov
push
ljmp
cwtl
dec
lods
push
adc
in
bound
out
push
inc
repz
sub
xchg
testb
cmp
lock
push
orb
xchg
ds
pop
rclb
fisubl
cmp
or
jle
dec
push
xchg
jl
and
pop
mov
imul
add
insb
jnp
add
pop
sbb
dec
sbb
in
testb
xor
jmp
test
xchg
mov
jo
jge
int3
fstpl
sbbl
out
lds
shlb
cmp
testl
jnp
loopne
pop
mov
inc
push
mov
ljmp
sub
in
jg
and
cmpsl
push
aad
icebp
xchg
jecxz
in
adc
inc
jle
dec
movsb
cmp
inc
cmc
xchg
sbb
mov
in
xor
leave
arpl
enter
sbb
jmp
push
lock
mov
pop
clc
aaa
push
in
aas
loope
jg
sbb
sub
push
js
mov
test
or
jmp
inc
mov
adc
inc
scas
bound
push
test
imul
mov
mov
dec
data16
fwait
loope
shl
jno,pn
loopne
and
adc
mov
cltd
pop
fidivs
jae
sarb
jmp
imul
test
dec
add
lock
fldcw
cli
cmp
xchg
aaa
aas
mov
mov
sbb
and
dec
add
add
mov
mov
jb
xor
xchg
push
in
loope
xchg
xchg
jmp
mov
es
sub
mov
pop
ficoms
and
jnp
stc
insl
lcall
sub
jecxz
sbb
mov
dec
in
ljmp
and
mov
rorl
fsubs
mov
sub
lods
out
and
scas
mov
pop
scas
xchg
fldl
push
ds
frstor
clc
pop
lret
push
mov
in
pop
shl
dec
cmc
pop
cmpsb
lods
into
pop
ljmp
adc
and
sbb
add
mov
aad
lods
insb
aas
popa
push
pop
xor
adc
xor
inc
sbb
or
nop
popa
leave
mov
sahf
mov
pop
sbb
cmp
jo
xor
imul
bound
stos
push
das
stc
jne
lods
es
out
jge
std
inc
mov
enter
sub
das
shrb
pop
ret
in
mov
out
push
push
test
sbb
outsb
idivb
dec
cmp
fwait
loopne
aad
fsubrs
mov
pop
push
sub
out
sbb
jmp
mov
sbbb
sub
ret
pop
out
leave
ds
bound
scas
fbld
mov
mov
mov
repz
dec
push
inc
adcl
lock
pop
cld
xor
iret
lahf
mov
pop
call
cs
xchg
pop
out
pop
jmp
xchg
sub
shll
shlb
cmp
push
cmc
pusha
lods
test
ss
aas
mov
xor
push
jnp
pop
test
push
and
inc
mov
push
mov
jge
je
jp
mov
inc
push
test
jne
int3
inc
test
jl
call
jecxz,pn
add
sbb
or
jmp
nop
rcll
movsb
out
xchg
stc
loopne
jl
xor
mov
or
addb
sub
dec
lock
je
pop
jge
movsl
mov
fucomi
sub
mov
jbe
sub
inc
lea
fadd
mov
outsb
push
aad
adc
adcb
jns
bound
mov
and
mov
sub
pop
roll
std
imul
cmp
xor
rcrb
push
xchg
loope
dec
repnz
sub
int
test
xlat
and
icebp
xchg
daa
rolb
lea
loope
in
ja
mov
mov
pop
dec
and
mov
mov
fnstsw
jmp
xchg
out
sub
in
or
clc
in
sbb
mov
jmp
inc
cld
jmp
insb
sbb
sbb
add
ljmp
popa
in
jne
pop
mov
add
push
mov
inc
jo
outsl
sub
xchg
sahf
bnd
jmp
xlat
dec
jo
sub
inc
inc
mov
cmp
imul
lock
data16
sbb
and
mov
fwait
mov
fildll
addl
mov
je
adc
xchg
loopne
pop
ja
cwtl
xchg
jge
cld
mov
rcrl
std
or
repz
in
add
in
push
mov
jp
and
subl
cltd
fld1
cld
pop
push
xor
jo
jns
into
mov
push
or
cmp
and
sub
dec
dec
sub
mov
pop
mov
data16
cmpsb
jl
into
adc
mov
jecxz
cld
arpl
jecxz
mov
add
fists
fldenv
mov
add
xor
psrlw
xor
aad
xchg
pusha
mov
mov
push
in
subl
leave
xorb
mov
push
jp
outsb
rorl
push
fiadds
loopne
push
fwait
ret
into
sbb
ret
icebp
pop
inc
mov
das
js
xor
mov
lods
movsb
outsl
repnz
out
dec
adc
shl
lahf
stc
int3
ror
testl
mov
icebp
cs
add
repnz
or
movsl
inc
jb
movsl
aas
sub
cmp
inc
aam
ficompl
push
pop
mov
mov
pop
loopne
mov
pushf
xchg
jmp
mov
aaa
decb
sbb
inc
sub
xor
lds
mov
jo
scas
mov
testl
mov
enter
sbb
aam
jns
sbb
fadd
xor
sbb
sbbb
mov
sub
dec
mov
xor
pop
jle
inc
lea
xlat
dec
insl
or
xchg
aas
cmpsb
es
or
fidivs
fimuls
lods
leave
outsl
int
mov
pop
mov
xchg
push
aad
sub
lods
ss
pop
xchg
push
mov
cmpsb
and
xor
mov
cmpsl
jbe
inc
inc
lods
xchg
lret
inc
inc
mov
lcall
je
xchg
ds
xchg
pushf
insb
int3
xchg
loope
add
in
jmp
fs
dec
adc
sbb
lea
and
jmp
mov
pop
cmpsl
arpl
xor
jl
iret
sbb
xchg
push
mov
aas
ret
adc
js
rorb
data16
or
sub
jae
stos
push
in
lods
mov
das
stc
lcall
mov
sbb
or
sub
jl
rol
push
pop
fwait
shl
xorb
cmp
mov
and
test
es
xchg
xchg
and
jp
repnz
lahf
cld
gs
jno
pop
or
mov
sbb
fwait
mov
xchg
push
dec
push
test
repz
xchg
inc
jae
xchg
cmpl
rcrl
inc
sbb
lcall
mov
imul
jle
sub
cmc
cmp
sub
daa
test
pop
sub
sub
sbb
es
loopne
cmpsb
mov
fs
adc
push
ret
mov
fsubr
mov
rorl
popf
lret
dec
sbb
or
mov
arpl
push
shl
xchg
loopne
add
mov
xchg
sub
mov
jno
xchg
inc
in
pop
mov
sbb
dec
data16
pop
cmp
or
ret
shll
add
inc
pop
add
cmp
js
and
xor
lock
pop
xlat
sub
lods
out
loopne
orb
scas
and
add
rol
js
inc
sbb
dec
cld
lret
xchg
cltd
stos
mov
mov
push
fwait
adc
stos
in
and
xorb
push
xchg
dec
sbb
sub
inc
push
enter
cld
push
push
ja
sarb
mov
nop
popa
ja
adc
out
imul
xor
xchg
fnstcw
mov
and
add
int3
lahf
adc
cmpl
icebp
sbb
daa
xchg
xor
xor
mov
xchg
pop
and
dec
aad
scas
inc
iret
insb
sbb
or
orl
xchg
mov
dec
es
mov
or
stos
aad
xor
mov
rorl
xlat
popa
pop
sahf
cmc
popa
das
mov
test
hlt
shlb
jg
fsubrs
out
repnz
dec
pop
bound
push
scas
cli
jbe
icebp
call
dec
fs
xchg
push
fwait
movsl
lret
sbb
mov
xchg
jle
jge
push
test
imul
adc
cwtl
mov
std
es
popa
jb
cmc
adc
inc
cld
arpl
js
shlb
sbb
pop
icebp
mov
pop
mov
test
test
xchg
xor
std
bound
and
xchg
dec
mov
std
and
pop
shrb
mov
data16
mov
mov
test
mov
jl
or
insb
push
jo
daa
jle
xor
mov
xchg
dec
mov
sub
xchg
pop
clc
jge
je
jae
sarb
jp
pop
fildl
aad
sbb
and
inc
mov
leave
jae
mov
jge
aaa
cmp
mov
shlb
push
data16
xchg
cmpsl
dec
cli
push
repnz
pop
adc
ljmp
in
test
or
js
in
les
call
jns
adc
xlat
jbe
inc
cltd
push
add
mov
add
pop
inc
push
and
dec
popa
mov
cmp
cmpl
xchg
jbe
cmp
pop
adc
stc
insl
int
mov
inc
jnp
mov
popa
es
dec
push
arpl
sub
scas
and
iret
adcl
mov
mov
push
fists
out
mov
loopne
cli
xchg
pushf
jp
xchg
nop
and
jne
ja
out
xor
pop
lahf
push
lea
or
inc
inc
xchg
popf
xor
xchg
aaa
cmpsl
or
xchg
pop
jmp
mov
shrl
sbb
popf
jbe
xchg
sar
and
shl
pushf
lret
rcrb
fwait
mov
sub
jb
sub
dec
lcall
pop
mov
add
xor
out
mov
mov
inc
and
mov
inc
mov
aas
cmp
iret
and
movsl
sti
pop
jo
pop
mov
std
or
fidivl
mov
rcll
test
cmp
insl
test
popf
push
call
inc
cmp
xchg
jmp
pop
into
and
in
pop
cmpsl
shl
outsl
insb
jbe
jno
sbb
pusha
sti
mov
mov
clc
dec
dec
xbegin
stos
fdivl
mov
dec
push
cmp
out
out
mov
icebp
ds
push
int3
addr16
sub
cltd
mov
push
cmp
xchg
mov
push
sahf
in
loopne
mov
loope
push
xchg
std
dec
negl
cs
aas
les
mov
pop
loop
std
pop
push
and
popa
aam
pusha
and
adc
pop
sahf
outsl
lock
mov
push
std
mov
dec
lods
sbb
addl
out
rclb
out
or
insb
and
clc
or
dec
mov
mov
sbb
lods
mov
jo
pop
mov
jg
andl
push
push
std
or
sub
add
adc
adc
fdivrs
roll
jle
jmp
mov
mov
lret
in
call
dec
or
push
mov
js
ja
xchg
ss
mov
jbe
pop
push
xchg
in
imul
outsb
fcom
cmp
sahf
add
and
ret
pop
fwait
icebp
mov
or
cs
loope
push
jg
push
push
lcall
or
ret
addr16
mov
xchg
adc
xor
xchg
xchg
addr16
mov
addr16
jae
mov
popa
icebp
jns
and
test
sub
aas
push
sub
cmp
in
dec
pop
insb
sub
mov
push
js
lods
test
push
mov
movsb
xor
fs
je
xorl
pop
negl
adc
mov
xor
or
lock
rcll
and
xor
and
adc
xchg
mov
push
xor
dec
iret
jne
faddl
sub
cli
mov
xor
cmc
xchg
push
repz
leave
lock
dec
and
mov
sub
and
xor
dec
sub
or
dec
push
sahf
rcll
imul
sub
sbb
movsl
negb
iret
into
mov
xlat
xchg
inc
insb
jge
nop
scas
xor
push
xor
cli
xor
sub
push
mov
inc
mov
dec
sbb
and
push
cmpsb
push
mov
imul
adc
or
out
lock
pop
int
push
fidivrl
mov
ds
insb
push
xor
mov
cmp
mov
mov
shll
xchg
xchg
out
and
stos
loopne
data16
mov
rorl
pop
fnstcw
lods
lcall
adc
fstl
xchg
into
enter
or
or
adc
jp
das
repnz
jle
sub
in
pop
mov
rolb
out
sub
rcrb
loop
and
mov
push
dec
push
or
and
bound
push
push
mov
test
sub
stos
loopne
pop
fiaddl
inc
jns
cmp
xor
xor
ljmp
cmp
pop
lods
xor
xchg
sbb
fcomp
stc
mov
xchg
mov
xor
leave
pop
adc
inc
cmpsl
sub
add
aam
jno
sbb
loopne
orl
dec
sub
dec
sbb
stos
mov
ss
js
jae
mov
cmp
nop
dec
andb
imul
call
ja
push
sub
lahf
jp
jae
jl
sbb
lds
jo
add
dec
jecxz
test
dec
in
ret
mov
jns
fldl
out
dec
sahf
shrb
rolb
mov
sub
faddl
repz
cwtl
push
or
xor
std
mov
jne
push
sbb
mov
add
out
sbb
fsubs
shl
dec
pop
inc
xchg
stos
xor
xor
pop
cmc
adc
pop
outsl
ret
inc
or
cltd
fcompl
push
cmc
loopne
pusha
imul
cli
jge
repz
setbe
rcr
test
cmc
icebp
add
inc
rcr
sbb
mov
push
lods
sarl
dec
jecxz
fcoms
mov
mov
jecxz
movsb
test
stos
sbb
fiadds
call
xor
rsqrtps
mov
sub
ret
pop
loope
fisttpll
popa
xchg
mov
pusha
enter
adcl
xlat
sub
out
movsb
test
sbb
dec
dec
fdivrl
xlat
cmc
mov
xor
and
and
enter
push
push
lds
fildl
movsl
icebp
rcll
mov
jle
cmp
scas
test
sbb
movsb
das
sub
les
xchg
pop
xchg
pushf
nop
je
pop
in
pop
mov
lret
or
sbb
ret
xlat
sub
inc
out
lahf
and
adc
in
jne
ja
popf
push
jbe
push
imull
in
idivb
add
adc
push
jg
sar
xchg
xor
addl
push
enter
cltd
mov
rcrb
stos
xlat
aam
fistpll
mov
mov
inc
cmp
push
mov
icebp
mov
adc
outsb
loope
and
mov
fsts
lahf
scas
mov
ret
imul
pop
adc
movsl
int3
jmp
inc
add
jge
cmp
inc
cmpsl
repz
dec
lahf
pop
pop
pop
setb
xchg
mov
sbbb
mov
fldl2t
fcomps
mov
dec
pop
fisubs
loop
call
cmpsb
icebp
js
and
shrl
shlb
jecxz
push
test
add
mov
or
out
add
daa
cli
pusha
fsts
scas
pop
pop
adc
sbb
mov
sub
mov
js
sub
cmp
int3
lds
mov
ds
js
fwait
lahf
out
cmp
jle
insl
pop
cmp
cld
lahf
push
inc
std
lods
pop
or
jl
scas
sbb
mov
mov
sub
pusha
and
jns
or
and
fcomp
jno
xchg
dec
push
push
mov
andl
pushf
and
scas
push
inc
xchg
or
rorl
adc
insb
jno
push
sbb
or
mov
pushf
into
int
sbb
mov
inc
leave
loope
pop
pushl
imul
add
and
adcb
cmpsb
mov
in
test
xchg
or
test
add
mov
notb
mov
cmp
xchg
adc
lcall
subl
lods
sub
or
push
in
pop
inc
ret
cld
sub
lock
je
test
sti
lcall
jmp
rolb
xor
jno
mov
mov
nop
xchg
mov
pop
and
xchg
js
bound
outsb
dec
pop
ljmp
jle
sbbl
fldenv
inc
jne
fdivl
jb
cltd
pop
xchg
inc
push
adc
lea
inc
loop
xor
jge
and
lret
lods
lods
dec
inc
or
sbb
and
test
lret
xchg
nop
int3
es
loop
sub
pop
sbb
aaa
add
fwait
pop
cmpl
ret
sti
mov
xor
inc
sub
mov
mov
pushf
aas
imulb
stc
pop
cld
xor
repnz
xor
repnz
arpl
dec
xlat
lods
mov
dec
adc
mov
in
fwait
jge
insb
cmp
inc
test
inc
sub
fiaddl
outsl
pop
adc
testl
jno
out
cmp
push
and
jle
flds
adcl
and
xor
test
mov
fs
pop
mov
cmp
mull
aad
in
inc
or
arpl
ss
hlt
dec
adc
push
sbb
dec
jl
jp
in
adc
or
jle
in
test
jecxz
cmp
and
movsl
or
xchg
dec
sti
test
lea
cmpsb
mov
jns
out
inc
mov
push
cwtl
xchg
inc
insb
mov
and
jne
cmp
xor
in
mov
int
out
sarl
inc
adc
clc
sub
mov
or
test
scas
ja
mov
rol
jnp
or
mov
movl
dec
call
adc
push
adc
inc
pop
pop
test
sarl
dec
pop
adc
mov
rorb
mov
outsb
fsts
jb
sub
mov
in
jg
and
dec
mov
jne
push
mov
in
or
add
and
pop
mov
xor
enter
test
dec
leave
fs
push
xor
shlb
fstpl
xchg
pop
or
out
mov
sub
movsl
dec
sbb
cmp
outsl
inc
stos
mov
sub
xchg
xor
ror
call
fnstenv
sub
xchg
push
addb
push
shlb
out
adc
aaa
inc
shrb
ss
out
data16
insl
data16
ja
sub
imul
sub
loop
or
cmpsb
hlt
in
mov
adc
std
xor
imul
icebp
pop
xor
in
sub
inc
sbb
mov
aad
mov
sbb
lods
les
mov
movsb
xchg
out
inc
andl
jmp
loopne
jae
sbb
ja
xchg
clc
cmp
add
movsb
neg
push
cmp
imul
lcall
ret
jle
mov
mov
jne
xchg
lock
dec
xor
hlt
stc
pop
js
dec
scas
ja
fisubrs
jl
icebp
inc
int
xchg
in
dec
xor
and
cmpsl
cltd
adc
dec
insl
jb
sub
and
pushf
jg
int3
into
sti
mov
and
lods
sub
insb
insl
cltd
pop
xor
dec
outsb
lds
or
cmp
push
xchg
je
icebp
fidivrl
sub
jp
jno
cmpl
sbb
loop
ficoml
jp
xchg
shr
mov
out
mov
inc
or
cld
dec
sub
pop
mov
scas
xor
sbbb
jbe
adc
pop
out
pop
arpl
mov
daa
sub
sbbb
nop
call
sub
and
mov
mov
call
jbe
add
mov
dec
mov
addb
and
pusha
add
push
dec
sub
insl
push
sbb
xchg
and
pop
push
lahf
andb
mov
fstpt
pop
pushf
mov
loopne
jge
pop
pop
sbb
xchg
jne
scas
sbb
je
andl
or
mov
adc
sbb
out
rorl
incb
movsl
imul
mov
fldenv
mov
xor
filds
sub
addr16
sbb
xchg
cltd
xchg
cmp
stos
loop
jge
adc
dec
sarl
loop
mov
mov
fadds
lods
ja
push
cmp
daa
cmpsl
cmp
hlt
testl
iret
aas
stc
repnz
inc
lret
out
outsb
mov
imul
loopne
lods
cmp
enter
jbe
dec
cmp
push
test
inc
xor
leave
xor
jecxz
and
mov
sbb
cli
xchg
popl
in
jmp
jae
ja
lock
repz
dec
rcr
jno
out
fstp
daa
fisttpl
movsb
mov
pop
outsl
imul
in
mov
and
scas
pop
jp
inc
imul
pop
and
stc
pop
fcoml
cli
gs
jle
imul
mov
xchg
out
pop
xor
inc
arpl
aam
xchg
rolb
xchg
arpl
insl
iret
inc
or
adc
aaa
push
add
sub
ljmp
es
sub
push
lahf
out
inc
addl
mov
sbb
pushf
lcall
add
ja
xchg
aam
mov
sahf
adcb
lds
orl
xor
ja
ror
rcr
cmp
cmp
test
pop
test
test
daa
mov
xlat
dec
and
jnp
sub
dec
loopne
fisttpll
movsb
pop
stos
cwtl
bound
add
push
mov
inc
movsl
lods
outsb
int3
arpl
stos
adc
jno
dec
aaa
mov
push
mov
pushf
mov
mov
insb
mov
cmp
jnp
scas
aam
push
add
inc
sti
jns
push
sbb
xor
sti
dec
mov
mov
negb
sbb
movsb
jae
mov
imul
inc
scas
mov
push
bound
add
testb
stos
insb
ja
std
jno
and
repnz
bnd
and
jne
xor
incb
mov
push
pop
inc
and
lods
jl
push
push
dec
popf
push
sub
ret
mov
loope
aaa
push
mov
jle
clc
mov
aad
popa
push
dec
fs
daa
inc
cmp
inc
in
add
pop
out
jnp
sub
jo
loop
jecxz
dec
mov
xchg
hlt
popl
or
sub
mov
arpl
rcr
push
outsl
hlt
lds
jno
lods
mov
cwtl
aam
outsb
imul
push
std
mov
add
pusha
pop
popa
sbb
jmp
jle
mov
dec
lea
adc
mov
xchg
nop
jno
dec
jbe
shrb
std
lret
push
rolb
fs
cmpsb
xor
stc
xchg
aaa
sbb
sub
hlt
rcr
xchg
dec
mov
push
xchg
add
js
and
xchg
xor
mov
sbb
mov
shlb
or
add
jnp
imul
xchg
fdivr
lahf
fidivrs
in
out
gs
inc
pop
ja
loop
aaa
inc
add
mov
push
aam
outsl
mov
ljmp
xlat
arpl
mov
and
sbb
fdivs
push
and
insb
pop
or
xchg
push
movsl
aad
jmp
out
aas
movsl
add
or
in
xor
rcrb
or
pop
in
int
sub
push
cmc
mov
lods
fidivs
lea
ja
jle
enter
scas
and
mov
inc
pop
xchg
xor
sub
rcll
fs
jge
xor
sub
cltd
mov
into
adc
push
insb
sub
or
add
or
enter
push
push
mov
dec
movsl
repz
jae
jnp
and
xchg
icebp
fisttpll
fisttpll
and
inc
cwtl
nop
scas
mov
push
pop
sub
push
or
pop
dec
fdivs
add
xchg
ror
xchg
shl
js
cli
dec
sahf
aas
adc
movsb
outsb
daa
adcl
hlt
cmp
loope
fwait
lret
pop
roll
shl
mov
mov
mov
ljmp
stc
push
jmp
mov
out
mov
fdivr
pop
hlt
lcall
cmp
xchg
mov
cwtl
aas
shl
sbb
mul
stos
loop
push
or
dec
outsl
add
sub
aas
dec
cli
mov
scas
mov
add
dec
push
into
into
clc
aad
pop
pop
xorb
fisubl
and
inc
jl
mov
rcrb
icebp
movsl
mov
adc
fisubs
arpl
mov
mov
jbe
adc
sbb
in
lea
stos
mov
cmp
lcall
hlt
fs
cmpsl
jge
jp
test
mov
cmpsb
jg
push
xchg
aas
sub
push
mov
insb
mov
jl
into
push
sub
js
jl
cli
lret
jne
cmp
sbb
inc
or
push
xor
int3
popa
pushf
jmp
add
arpl
inc
inc
int3
sub
imul
inc
cld
movl
cmpl
je
cmpl
ja
jmp
pushl
call
mov
dec
mov
jmp
xor
add
or
mov
mov
or
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
add
sub
mov
xorl
sub
lea
xor
xorl
xor
movl
cmp
movl
je
mov
and
mov
negl
xor
incl
add
movl
cmp
jne
xorl
pushl
xorl
call
or
mov
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
xor
sbbl
add
cmp
movl
je
pushl
xorl
pushl
call
mov
mov
mov
and
mov
negl
xor
subl
add
cmp
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
or
mov
adc
mov
add
xor
xor
sbb
mov
mov
dec
mov
add
mov
add
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
mov
mov
and
mov
xorl
mov
add
movl
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
jmp
jns
mov
mov
rolb
addl
xchg
shll
mov
push
out
jb
push
pop
sbb
mov
inc
push
mov
inc
cld
shrl
adc
test
sbb
xchg
xchg
mov
adc
jne
mov
out
mov
adc
addr16
dec
rorb
xor
mov
sbb
sbb
lods
and
daa
sbb
dec
xchg
adc
enter
dec
das
fucomip
es
cmpsl
dec
sub
mov
loop
and
out
das
or
mov
cmp
rcr
rorb
daa
mov
adc
popf
outsl
jb
mov
sub
mov
jg
sbb
jge
pop
andl
push
jmp
adc
sub
push
test
scas
rcr
push
inc
mov
mov
xchg
lock
test
mov
jmp
inc
pop
mov
fimuls
das
lock
mov
out
mov
and
mov
scas
pop
mov
sub
ret
outsl
xchg
aam
mov
fidivl
clc
jno
je
pop
shrl
mov
imul
cmpsl
adc
pop
adc
mov
stos
lcall
imul
add
push
push
shll
mov
mov
not
jb
movsl
fists
ss
nop
mov
sub
iret
jb
adc
repnz
pop
fldt
pop
add
xlat
pop
leave
fisttpll
jg
test
stc
insl
xchg
ss
lea
pushf
cmp
mov
or
pop
imul
imul
cld
sub
push
pop
arpl
mov
add
das
cmpb
push
sub
mov
add
mov
cmp
das
arpl
cmp
inc
mov
mov
aam
std
aam
jp
sarw
loop
cltd
call
xchg
sub
fldcw
repz
insb
int3
ljmp
aas
in
ret
sbb
pop
mov
repz
or
bts
inc
test
mov
xchg
add
xchg
lahf
fidivl
jae
pop
pop
inc
push
sahf
es
aad
jl
sti
cltd
mov
testb
fsts
xchg
dec
push
jge
pop
mov
dec
mov
fsubrl
mov
daa
inc
iret
lcall
ret
jns
pop
mov
movsb
pop
xchg
cmp
arpl
cmp
xor
mov
les
lret
inc
add
dec
std
daa
dec
xor
push
jne
fs
xor
sub
enter
dec
ljmp
dec
lret
dec
xor
into
out
insb
cmc
push
adc
adc
adcl
rclb
test
pop
and
adc
mov
in
fnstenv
out
or
jo
xlat
inc
adc
lret
adc
or
scas
std
fcomi
movntps
test
add
inc
mov
mov
sahf
jbe
xchg
cmp
jne
dec
shlb
je
lret
fsubr
lods
sub
cmp
inc
sub
xchg
inc
mov
mov
mov
xor
cmp
lock
fs
outsb
aad
sbb
sub
cmp
icebp
sahf
int
xchg
aad
xlat
in
lods
xchg
leave
mov
xchg
shrl
icebp
sbb
jnp
push
bound
popf
pop
rcr
loopne
mov
push
jno
mov
or
mov
inc
loop
es
push
dec
outsb
jo
nop
ds
or
js
inc
lret
cld
mulb
rep
dec
sbb
mov
sbb
push
ja
out
sbbb
push
movsl
xlat
dec
insb
scas
adc
fbstp
dec
cmp
sbb
pushf
mov
push
rcr
imul
inc
js
out
add
and
add
into
cmp
and
pop
mov
jb
std
mov
sub
jo
fdivrl
inc
icebp
mov
cmpsb
or
std
insb
lcall
jle
xchg
movsl
pop
fmul
rcl
jns
aaa
xrelease
mov
xor
aas
rcr
clc
jb
push
lea
int
or
jb
jb
mov
add
mov
cmp
mov
movsb
xchg
shlb
push
pop
mov
jmp
sahf
scas
mov
arpl
sahf
sbb
and
push
mov
mov
jae
mov
sbb
ss
fidivrl
dec
inc
mov
dec
jbe
inc
int
add
cmpsb
in
leave
sbb
pop
xchg
aaa
ret
or
fidivl
les
lods
addr16
test
xchg
and
push
aaa
lea
dec
in
sub
and
enter
js
pop
jp
xchg
or
mov
xchg
xchg
and
test
aad
or
and
push
xchg
out
loopne
outsl
mov
nop
cmp
out
rcrl
xchg
xorl
cmpsl
push
or
xorl
mov
or
inc
mov
and
fsts
stc
xor
push
stos
sbb
movsb
pop
mov
pushf
scas
into
xchg
filds
inc
sarl
or
or
push
cmpb
jo
movb
add
adc
or
outsl
jo
out
stos
jns
push
fstpt
dec
out
pop
fbld
gs
loope
jno
vpsubsb
fistpll
insb
out
psllq
in
movsb
movsb
cmp
ret
inc
push
js
or
inc
mov
xchg
rorl
push
insb
xlat
data16
cmc
inc
inc
sub
sub
int3
sbbb
aam
adc
jne
lods
imulb
clc
aad
scas
mov
bound
mov
bound
push
cmp
lods
rcrb
adc
push
adc
mov
pop
std
push
cmc
push
fs
shr
out
addb
mov
and
cmp
out
fisttpl
arpl
subl
push
or
lahf
sub
or
insb
jg
inc
pushf
dec
xchg
xorb
gs
aam
into
xor
add
lret
nop
cltd
andl
cli
jno
and
xchg
mov
xchg
jb
imul
pop
jo
fidivl
mov
test
repnz
xchg
inc
scas
fscale
mov
lods
inc
push
fdivp
iret
mov
mov
imul
jb
rcll
jno
mov
daa
cwtl
outsl
xchg
fistpll
mov
mov
dec
test
test
jb
fs
loopne
das
mov
popf
or
jl
shll
push
pop
out
cmp
xor
pusha
imul
iret
cmp
mov
jmp
inc
adc
je
faddl
call
mov
xchg
push
js
cmp
decb
inc
push
jo
xor
jecxz
cmp
aas
inc
jno
cmp
ficoms
cmp
pop
mov
ss
jl
lods
cmc
lea
mov
push
add
add
jnp
xchg
mov
in
cli
dec
out
test
mov
sbb
jb
sbb
adc
scas
fmull
int
insb
scas
jns
out
mov
add
sbb
mov
or
or
pusha
dec
jno
popf
shl
cs
mov
push
sahf
fistl
push
and
in
mov
adc
and
int3
xchg
bound
cltd
scas
lods
jo
lea
push
divb
and
movsl
push
pop
pop
popa
loop
jne
in
sbb
xor
scas
dec
in
pushf
call
in
jmp
cmp
inc
jbe
movsb
daa
arpl
fsubrl
in
sbb
xchg
add
sbb
ret
sti
cwtl
bt
leave
clc
sbb
adc
xchg
lods
cmp
sub
pushf
cmp
or
jge
mov
or
js
out
inc
mov
std
sbb
shr
lret
insl
push
out
in
adc
add
cmp
xchg
dec
inc
out
fiadds
push
mov
fucomp
mov
loopne
lock
lds
or
adc
fimuls
arpl
jo
test
adc
mov
iret
sub
xchg
mull
push
add
sahf
adc
dec
lret
push
and
test
mov
xor
dec
mov
mov
cld
pop
sub
clc
ja
and
adc
jle
imul
add
in
jnp
insb
lret
sbb
and
push
inc
bound
ds
popa
stc
cwtl
fsub
jbe
arpl
pop
pop
cmp
mov
or
dec
cmpsl
pop
aam
sub
mov
popf
jmp
push
cmp
push
fdivp
mov
faddl
loop
pop
loopne
sbb
imul
xor
xor
cmp
push
outsb
in
xchg
insb
push
xor
push
pop
inc
sbb
mov
dec
mov
sbb
mov
xchg
adc
adc
push
pop
xlat
xor
ds
mov
fwait
scas
lock
mov
in
idivb
xchg
mov
into
ret
add
cli
cli
insb
out
arpl
cli
into
outsl
ja
subl
xor
bound
loopne
in
fistpll
inc
add
jb
push
insb
ret
or
stos
outsb
cld
pop
das
pop
xchg
mov
inc
ret
leave
push
pop
rcr
das
arpl
nop
cmp
test
stos
adc
mov
pop
or
pop
out
push
scas
mov
scas
adc
sbb
in
mov
xor
cmp
lahf
xor
jns
jl
sbb
bound
outsb
lahf
ja
jge
jmp
movsb
sub
inc
jns
mov
dec
push
jmp
xchg
out
ret
xor
enter
mov
test
vcvtdq2pd
movsb
mov
mov
ja
dec
ret
int
aaa
adc
aad
in
xor
xchg
leave
mov
jns
insb
or
inc
mov
inc
ss
adc
test
fincstp
ret
push
pop
push
lock
sub
mov
scas
insb
cmpb
push
addr16
in
imul
bound
mov
or
jp
add
in
bound
pop
fdivl
sub
xchg
push
adc
xor
xchg
lret
add
loopne
imul
cmp
xchg
repnz
mov
ret
adc
add
lock
push
testb
ljmp
andb
movsb
mov
sti
jecxz
mov
lret
aad
cmp
or
bound
or
jl
xorl
dec
and
mov
mov
add
mov
roll
je
rcll
pop
add
out
lcall
adc
daa
std
cmpsl
arpl
mov
out
sbb
sub
adc
xchg
imul
repz
mulb
adcl
pop
sbb
push
ficompl
cmp
inc
sbb
mov
rcr
sti
cli
mov
push
out
mov
inc
mov
sbb
std
add
fistl
lcall
test
js
lds
mov
xchg
mov
add
and
cld
mov
gs
xlat
jns
cmp
mov
add
and
lcall
lret
push
jecxz
inc
movb
mov
or
fadd
xor
pop
lock
pop
mov
pop
mov
xchg
lods
in
dec
jns
push
aad
das
les
cmpsl
stos
outsb
fistpll
mov
push
push
push
inc
xchg
mov
addr16
cmp
ja
lret
popa
fstpl
sub
call
mov
jbe
repz
mov
and
or
mov
cmc
xor
or
pop
xlat
cwtl
mov
jp
push
push
jae
or
sbb
test
sbb
outsb
loopne
or
pop
cld
insb
lret
movsl
fldl
stc
push
dec
adcb
hlt
int3
add
ret
add
jnp
je
loope
push
fwait
mov
sub
clc
pop
cmpsb
fstps
jecxz
inc
cwtl
enter
sahf
data16
xchg
and
xchg
xchg
mov
stc
fldenv
xlat
stos
cld
pop
test
sub
inc
mov
lods
lea
shrl
mov
cmpsl
mov
enter
pop
xor
popf
add
popf
in
and
jmp
or
cmp
mov
sbb
lahf
dec
inc
lds
pop
cmp
repz
adc
mov
push
lea
shrl
jp
inc
es
xor
lock
inc
fcoms
xchg
cmp
test
sub
call
shll
mov
mov
mov
sbb
cmp
aam
daa
outsb
jmp
icebp
cmp
sub
mov
ret
pop
cwtl
imul
push
pusha
push
add
inc
inc
cli
in
mov
sbb
daa
inc
stos
inc
daa
popf
cmp
pop
push
ret
jl
pop
mov
sbb
pop
je
push
ljmp
lods
addr16
inc
push
mov
pushf
push
adc
xchg
pop
ds
scas
jp
popw
jg
imul
sbb
inc
inc
lcall
mov
sub
pop
lahf
sub
shlb
sbb
sbb
jae
xchg
sbb
inc
mov
ret
loope
rcr
jecxz
daa
dec
dec
out
push
in
jnp
jle
dec
fcomip
std
je
inc
mov
inc
filds
mov
and
adc
xor
imul
mov
lock
pop
mov
scas
loop
enter
push
pop
adc
pop
pop
xchg
fdivs
sar
in
mov
inc
fdivrp
cwtl
dec
std
mov
jnp
fbld
enter
mulb
sbb
cmp
pushf
pop
jg
fmull
aas
loopne
cmp
mov
out
mov
lds
cwtl
ret
xor
xlat
mov
push
mov
mov
or
or
stos
jl
insb
adc
xor
out
or
aaa
fidivrl
sbb
xor
aas
or
hlt
and
push
adc
dec
lcall
cmp
cmp
iret
ret
and
clc
and
and
lea
repz
adc
pop
in
sti
xchg
inc
ret
daa
fstpt
lods
imul
out
mov
clc
push
adc
xchg
cmp
stos
daa
cmp
ret
loop
jo
pushf
mov
stos
sub
call
arpl
push
mov
push
xchg
loopne
psrlq
inc
jbe
push
fdivr
fwait
adc
into
ret
and
add
fstps
das
movsb
in
add
aam
nop
xor
sbb
cltd
lret
sbb
dec
jge
pop
sub
repz
pop
into
sbb
in
ss
dec
xor
cld
xor
xlat
lods
lret
or
mov
enter
push
sti
cs
aad
int3
mov
or
cli
stc
add
pop
jle
mov
in
mov
test
xor
mov
jg
jnp
icebp
mov
je
mov
mov
jmp
adcb
sti
adc
mov
mov
mov
bndldx
jo
ja
mov
and
mov
push
dec
call
jge
ds
in
aaa
out
xchg
pop
push
sbb
popw
mov
rolb
enter
out
and
rol
and
xlat
inc
pop
addr16
stc
lcall
jno
xor
cltd
mov
std
dec
outsb
xor
outsl
push
ljmp
xor
mov
orb
cld
lcall
stos
into
push
sti
and
ds
insb
mov
sbb
xchg
insb
mov
xor
jb
stos
gs
movsb
dec
or
mov
sbb
dec
and
adc
xchg
mov
mov
inc
cmp
lahf
sti
ss
sub
add
and
cltd
push
xchg
inc
mov
xor
fadds
mov
rcrl
adc
adc
or
movsb
sbb
lods
mov
std
insl
sbb
jbe
lods
fscale
nop
imul
inc
sti
cmp
jae
sti
inc
cltd
push
hlt
aad
xchg
cmp
repz
fiaddl
inc
mov
enter
and
lret
sti
es
cmp
mov
xlat
ja
pop
mov
and
sub
ljmp
pop
mov
mov
imul
sub
add
mov
mov
daa
dec
roll
stos
inc
nop
ror
inc
push
pop
fwait
cmp
int3
adc
dec
imul
lcall
mov
xor
mov
and
stc
inc
mov
inc
jg
shrb
stos
cmc
lahf
pop
and
adc
mov
mov
insl
js
cmpsb
pop
rorb
cmp
orl
push
dec
ja
inc
ret
jl
idivb
dec
lods
xor
mov
das
inc
add
sar
xlat
cmp
push
jne
add
test
push
ficoms
xchg
movsb
dec
mov
mov
loopne
loopne
jo
loopne
rcrb
cmpsb
mov
leave
sub
scas
cld
stos
mov
or
sub
out
mov
cmpsl
leave
dec
ret
xor
push
cmp
ss
in
push
loope
imul
iret
gs
mov
mov
lea
sbb
lods
fdivr
movsl
dec
shll
scas
sbb
pop
pop
out
addr16
and
jmp
jno
cld
loope
sahf
jmp
adc
push
and
and
lock
sahf
inc
sbb
sahf
mov
daa
das
iret
xor
popa
mov
ret
loopne
cs
pusha
jbe
xchg
nop
pop
js
stos
mov
jnp
xchg
mov
aam
sub
push
mov
js
jl
cmp
mov
jge
add
jns
fcompl
sbb
sub
call
mov
sbb
in
popf
lahf
je
out
cmp
or
shrl
sbb
adc
sbb
jecxz
push
and
test
mov
ds
icebp
xchg
mov
sbb
add
cmp
mov
je
jg
ds
push
sub
sbb
dec
movsl
jne
inc
mov
sbb
mov
cli
sub
cmp
jb
cmp
jb
movsl
in
shl
push
insl
dec
icebp
mov
add
faddl
mov
adc
add
fucom
das
out
xchg
idivl
mov
cmp
je
pusha
xor
shll
insb
xor
push
out
inc
and
sub
mov
jae
xchg
pop
jecxz
mov
rcll
push
xchg
adc
pusha
jno
inc
push
and
mov
out
ss
aam
in
adcl
push
add
jge
cmp
jmp
subl
fwait
addl
push
movsb
insb
push
push
daa
lahf
push
xchg
inc
fldl
adc
aas
repz
jnp
or
pop
mov
pop
push
mov
and
callw
mov
pop
jns
jbe
in
mov
pushf
lds
push
roll
pop
jno
movsb
adc
popf
into
jae
in
sbb
sbb
sbb
aaa
rorl
cmpsl
pop
push
imul
pop
or
jno
mov
arpl
and
cmp
mov
xchg
je
jne
lods
lods
adc
push
mov
rcrb
loopne
cmpsb
cld
in
shrl
shlb
cld
inc
jl
jge
jbe
jno
cmp
test
jnp
push
inc
xchg
cmp
ret
aaa
icebp
cwtl
popa
insb
test
jno
fisubrs
add
fsubrs
jbe
mov
xchg
ja
sbb
call
lret
fstpl
add
arpl
pop
packsswb
pop
add
andb
les
push
mov
mov
pusha
sbb
test
insl
sbb
mov
jo
cmp
cmp
pop
cmp
lret
pop
fldcw
ficomps
jecxz
xchg
idivb
mov
fsubrs
dec
roll
push
leave
insl
movsl
xchg
divl
cmp
dec
jle
sarl
and
add
outsl
mov
mov
ret
or
mov
jl
mov
jp
mov
jbe
outsl
cmp
mov
push
mov
push
and
xor
insl
bound
lods
jp
lods
push
ljmp
push
pop
xchg
insl
push
fbstp
movsl
xor
adc
shll
pop
and
mov
cli
cmpl
les
xor
mov
cmp
add
out
je
das
das
xor
lret
int3
jle
or
inc
or
sub
dec
out
ss
subl
idivb
aaa
lds
sarl
or
loopne
ret
push
mov
xchg
adc
das
dec
dec
jl
ret
lds
cmpsb
xchg
add
scas
push
cmp
fiaddl
jecxz
fisttpl
daa
jl
push
movsb
or
sbb
mov
pop
push
leave
push
and
push
jns
mov
fidivrl
and
outsl
ret
hlt
out
xor
push
rorb
mov
dec
scas
fmull
int
lahf
sub
and
mov
fdivrp
int
mov
inc
adc
push
rcrb
loope
enter
mov
stos
je
jecxz
xor
and
movsb
rolb
dec
mov
xor
aam
cmp
cs
xchg
pop
int3
jl
sahf
orl
scas
adc
gs
aam
add
orb
mov
leave
test
aam
cs
in
fimuls
fcomip
cmp
and
dec
dec
fstl
movsl
call
pop
add
sub
cbtw
cli
mov
mov
in
fsubr
add
mov
movsl
cmp
push
mov
or
lret
out
and
gs
loope
jo
repz
loopne
mov
clc
hlt
cmp
movsl
mov
mov
cmpsb
adc
mov
frstor
adc
jp
jae
jge
sub
aaa
xchg
mov
cmp
cmp
fsubs
cs
sbb
aas
cmpsb
pusha
dec
push
xor
lcall
and
fdivl
roll
mov
int
xor
dec
adc
fistpl
icebp
mov
xlat
icebp
call
inc
sub
in
lock
icebp
imul
test
mov
lcall
cmp
testl
popf
int3
jae
fsts
push
mov
pop
pop
shrb
in
je
mov
jl
popf
lds
pop
jbe
mov
loope
inc
nop
jle
jp
ljmp
rcll
sbb
enter
sub
jbe
rcrl
sub
mov
sub
ret
push
mov
inc
insl
pushf
push
pop
mov
and
out
cld
jmp
loop
mov
mov
jbe
loopne
insb
std
aaa
and
ss
arpl
mov
mov
adc
leave
orb
ficoms
jno
jl
xchg
movsl
inc
test
and
call
adc
hlt
jns
ficoml
or
sbb
or
jno
xlat
fsubrl
push
out
push
dec
fs
cmp
in
out
sbb
stos
subb
lret
aaa
jmp
cmp
add
xor
xchg
sub
aad
dec
jno
inc
mov
xchg
mov
mull
fcomps
scas
xor
inc
stc
cmpsb
test
mov
test
xlat
cmp
mov
sti
dec
ljmp
mov
loopne
dec
inc
mov
pop
cmc
popf
mov
pop
ret
sub
and
cmpsl
rcll
ficomps
adcl
push
push
fsubr
xor
insl
nop
fs
test
inc
ds
scas
lahf
push
push
push
scas
mov
xchg
in
mov
test
int
loopne
cmc
jns
loope
or
lret
test
daa
insl
lcall
sub
ret
lock
mov
pop
jg
or
cmp
gs
add
xor
push
imul
test
ret
in
dec
adc
out
xor
cmp
inc
xchg
nop
sbb
pushf
insb
in
test
xlat
into
cli
fwait
push
pop
mov
sub
pushf
ja
rcrl
lods
mov
pop
out
rorl
sbb
in
out
pop
sub
je
cmc
in
pop
popf
insl
push
fdivl
js
cmp
arpl
jne
mov
cmpsl
dec
add
jge
xchg
and
adc
dec
push
ret
int3
nop
adc
imul
jmp
cld
and
jb
push
loop
xchg
push
mov
jecxz
xor
pop
movsl
rcrl
fsubrl
add
call
sbb
pop
push
rol
xor
and
dec
mull
stc
jb
cwtl
fs
aas
fistpl
xchg
lahf
lock
aaa
lea
in
lret
test
pop
xor
and
je
data16
xor
cmp
push
or
xor
cmpsl
or
in
dec
pop
xchg
inc
aad
stos
fdivl
jae
cmp
aaa
imul
sarb
outsl
nop
cmpsl
sarb
fsubs
mov
int3
push
mov
pop
xchg
leave
lods
mov
stos
notb
idiv
cmc
adc
add
ret
psraw
rcll
aam
dec
cmpsb
jae
adc
add
aad
into
inc
mov
rcr
orl
inc
and
jl
inc
out
xlat
dec
imul
pop
fcomps
mov
adc
repz
add
lcall
pop
xor
lret
mov
mov
loopne
push
mov
add
int
loope
cmp
jg
dec
dec
cli
jae
mov
jle
jae
jo
push
addr16
xorl
push
inc
mov
mov
mov
aas
rclb
adc
adc
scas
mov
icebp
sub
in
cwtl
inc
mov
xchg
mov
mov
iret
call
sbb
test
idivl
out
xor
and
and
cld
mov
jae
or
insb
xchg
lods
jmp
into
jg
into
xchg
xor
int
mov
dec
je
adc
xchg
imul
shrl
stc
lds
hlt
mov
out
adc
mov
mov
lds
decb
cs
paddb
fwait
addr16
pop
testl
adc
mov
pop
dec
rcrl
gs
or
test
push
scas
cmp
mov
lods
pop
jge
and
add
add
imul
repnz
sub
pop
movsb
cmpsb
daa
jno
jb
pop
outsb
repnz
lgs
pop
or
jbe
rcr
mov
call
cli
dec
xor
mov
mov
shll
inc
ja
sti
in
adc
test
orb
jle
mov
mov
out
pop
loope
pop
rclb
xchg
ss
fists
shll
push
xor
outsl
and
std
out
xor
xchg
mov
mov
pop
or
shr
dec
inc
push
mov
dec
jnp
fcoms
movsb
dec
das
xor
mov
or
pusha
scas
jnp
add
repz
repnz
inc
xor
xor
and
mov
pop
jle
and
out
fs
mov
cld
data16
negb
mov
ljmp
test
xchg
jge
cmp
icebp
adc
hlt
je
shl
add
ss
or
mov
push
not
mov
std
push
into
lret
or
pop
pop
dec
cmp
ds
pop
leave
mov
sahf
add
add
ljmp
xor
pop
adc
dec
xor
or
inc
dec
add
add
mov
cmp
mov
fwait
mov
addr16
adc
fidivs
popa
inc
mov
push
mov
in
out
mov
push
xchg
jne
jmp
push
testl
test
jmp
dec
fadd
xchg
jg
mov
sbb
xor
dec
jp
loop
adc
push
data16
leave
inc
loopne
jge
aad
repnz
push
push
rclb
bound
jnp
or
dec
shlb
add
fisttpl
mov
jp
sub
push
adc
into
add
adcl
mov
daa
push
xor
push
dec
ljmp
dec
imul
pop
mov
xchg
sbb
repz
mov
xchg
mov
clc
jge
into
loope
lea
aam
loop
xchg
pop
pop
add
dec
in
cmp
push
mov
leave
mov
add
mov
pop
add
scas
hlt
std
push
mov
cmp
jge
movsb
sub
or
scas
jnp
and
andl
mov
insl
xor
in
mov
pop
push
mov
lock
roll
popa
jecxz
int3
push
popf
mov
cmc
cmp
and
stos
mov
dec
mov
add
mov
icebp
xorb
add
fistl
in
in
lds
insb
mov
inc
pop
jno
test
cmpsl
xor
push
cld
mov
in
sub
pop
xchg
xchg
out
jne
in
out
or
setne
mov
leave
push
and
xor
jge
jo
push
inc
ret
mov
add
adc
mov
aam
popa
rclb
mov
lods
cmpsl
fistpll
push
mov
mov
addr16
fcmovne
adc
insl
xchg
rorb
lods
and
inc
adc
xchg
lret
mov
in
sbb
stos
arpl
mov
loopne
or
je
icebp
ret
mov
std
push
pop
mov
lds
inc
adc
dec
cmc
mov
inc
push
xchg
out
lds
imul
xchg
add
imul
xchg
inc
pop
mov
mov
jns
cli
pop
dec
lcall
fstps
insl
jmp
jge
aas
gs
js
test
gs
dec
xchg
sbbb
dec
sub
inc
int3
mov
insl
push
hlt
jp
fisubrl
jne
push
test
pop
mov
jae
mov
negb
out
cmp
lods
shrb
popf
sbb
mov
sbb
push
inc
inc
mov
std
pop
scas
leave
cs
lret
sub
mov
aas
fsubrs
dec
add
mov
hlt
scas
mov
pop
add
pop
es
mov
inc
push
lcall
add
or
test
pop
sub
arpl
mov
xchg
mov
xor
fsubl
or
ret
cmc
dec
dec
addr16
imul
lea
mov
add
inc
jecxz
jmp
dec
and
ret
lret
jae
jg
aas
loopne
xchg
iret
push
movb
roll
inc
pusha
mov
and
jle
je
stc
and
pop
sub
clc
adc
movsl
xor
sub
je
xchg
add
cltd
dec
and
js
addb
orb
mov
cmp
dec
dec
push
imul
dec
sub
xchg
out
xchg
daa
mov
xorl
sub
js
pop
adc
pop
mov
ljmp
xchg
call
and
dec
mov
cmp
mov
pushf
mov
sbb
mov
pop
mov
adc
cld
repnz
sarl
scas
shl
pop
ret
outsl
outsl
push
xchg
in
inc
rorb
mov
bound
ror
das
pop
pop
ja
cmc
jbe
cmpsb
mov
lret
mov
xchg
add
sti
popa
std
jmp
mov
pop
xor
jle
cmp
sbb
push
sub
lds
pop
and
mov
inc
cld
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
jmp
push
into
cmc
pop
in
xchg
mov
in
push
mov
icebp
pusha
addl
js
imul
push
add
iret
adc
insb
inc
push
jg
data16
lahf
ret
jo
rorl
pop
pop
and
loop
daa
scas
push
jns
mov
xor
lcall
mov
or
xor
push
movsl
mov
clc
loopne
imul
hlt
test
adc
mov
fadds
nop
adc
vpunpckhwd
lds
into
es
pop
xchg
loope
popa
jge
daa
jge
dec
xadd
mov
sub
inc
pushf
arpl
dec
jne
or
mov
mov
or
js
sub
inc
lret
dec
int3
sbb
repnz
ljmp
repnz
addb
add
ret
aad
mov
ja
test
sub
sub
and
mov
gs
sbb
mov
sahf
or
addr16
insl
adc
dec
pop
and
mov
inc
and
rorb
add
jae
mov
js
xor
lock
xchg
mov
pop
enter
xor
xor
jnp
add
movsb
lods
add
add
enter
arpl
mov
test
into
and
pop
or
sbb
xchg
leave
pop
pop
jg
out
fcomip
add
jge
shlb
cld
mov
pop
xchg
fmull
lea
or
out
fistpll
fs
cmpsb
xchg
xchg
mov
jecxz
xchg
jo
mov
jno
pop
push
aam
into
cs
mov
nop
sbb
sbb
mov
out
enter
push
dec
scas
je
push
jb
int3
outsb
imul
repnz
adc
das
inc
lods
ret
dec
push
cmpsl
xchg
lret
rolb
lahf
push
inc
pop
adc
dec
add
inc
test
ret
jns
push
fidivl
mov
mov
dec
fldenv
or
call
lods
es
add
repz
sub
sbb
or
lahf
repz
mov
lret
xor
aaa
int
jmp
mov
fldl
in
inc
cmpsl
and
sbb
dec
loope
scas
decl
xchg
dec
gs
in
mov
lahf
jmp
pop
rorb
sub
or
shlb
lahf
xchg
or
sar
pop
cmp
lock
push
lds
cmp
sub
stos
adc
mov
sub
push
loope
out
push
pop
out
adc
or
test
cmp
mov
push
mov
dec
scas
push
scas
or
stc
push
or
inc
push
jno
dec
mov
sbb
cmpsl
out
into
pop
aam
popf
out
push
add
repz
mov
jbe
adc
popf
repz
mov
push
ds
pop
xor
dec
cwtl
iret
sub
repnz
push
inc
iret
lods
jns
faddl
sbb
enter
sbb
inc
movsl
cmp
scas
fdiv
aam
popf
and
and
xchg
mov
xchg
test
sub
or
hlt
mov
dec
inc
enter
push
in
sbb
and
dec
stc
push
mov
adc
add
fcompl
lret
movsl
and
pop
mov
xchg
lret
into
subb
pushf
mov
pop
add
mov
push
lods
shll
pop
mov
jnp
dec
jg
inc
fstps
das
arpl
test
ss
mov
or
div
test
loop
lds
loop
add
lcall
sbb
jecxz
sub
mov
dec
rolb
dec
xor
jnp
push
sti
daa
aam
mov
add
mov
jo
xchg
es
adcl
mov
addb
mov
imul
sbb
pop
sti
cmp
pop
sbb
sahf
xlat
adc
int3
in
pop
mov
xchg
lods
inc
sbb
mov
sub
shrb
or
adc
mov
rcrl
mov
scas
pop
cmp
push
ret
cmp
mov
test
jge
mov
sbb
adc
fwait
into
sbb
rorb
add
and
ret
ljmp
push
mov
xor
xchg
shrb
sub
fbstp
insl
push
clc
bound
in
loop
xchg
repnz
leave
sub
sahf
mov
xchg
add
daa
xor
inc
xor
bound
sub
sti
xchg
leave
shrb
jae
xchg
fwait
xor
fnstenv
pop
push
outsl
fbstp
sub
sbbl
lret
ret
mov
adc
mov
pop
jmp
fnstenv
imul
mov
fiadds
push
pop
aas
push
std
or
fdivs
arpl
inc
dec
stos
dec
clc
pop
or
outsl
mov
addr16
aas
adc
les
xchg
cmp
pop
into
mov
loopne
les
pop
mov
ret
add
jg,pt
push
and
int
push
push
jb
mov
test
sub
stos
push
lock
mov
in
xchg
xlat
adc
shrb
xor
sbb
or
sbbl
adc
cmp
ret
insl
or
subl
dec
ds
repz
pop
mov
xchg
jae
shlb
and
sbb
fstpl
stc
push
push
das
mov
imulb
js
adc
push
mov
insb
mov
jo
push
push
fsincos
mov
xchg
sbb
adc
loope
fdivp
cmp
in
add
ret
xchg
mov
xchg
mov
sbb
jae
aaa
xor
sti
aaa
loop
repnz
cld
mov
insl
pushf
sbb
sbb
enter
sub
fcmovnb
popf
jne
mov
jae
test
sub
mov
jnp
enter
fldl
das
lcall
imul
fadds
movb
enter
mov
int3
dec
lret
outsb
push
icebp
sub
jae
sub
pop
idivb
mov
xchg
mov
push
ret
notb
mov
push
add
fstp
sbb
pop
xchg
mov
std
push
in
mov
sbb
jl
js
test
xchg
mov
gs
repnz
xor
mov
push
jmp
jns
sub
fmuls
mov
and
imull
stos
fdivrp
sbb
cli
clc
and
mull
ja
push
pop
mov
cli
sahf
lahf
js
lock
addr16
jl
shrl
ss
xchg
or
inc
int3
xor
fisubl
popa
into
jp
stos
es
push
or
mov
int
jnp
into
mov
in
adc
push
pop
or
sub
mov
data16
or
jns
cld
xchg
sbb
in
hlt
es
mov
loope
mov
and
nop
push
xor
xchg
jl
js
xlat
jne
in
inc
sbbb
sub
cli
xor
mul
test
mov
sbb
jae
aam
arpl
pop
int
lock
jl
xchg
pop
in
fidivl
stc
jns
je
sbb
mov
xor
mov
bound
or
fildl
xor
cmp
arpl
add
adc
ficoml
and
jecxz
nop
sub
je
lret
cmp
pop
jge
cwtl
sub
mov
xchg
push
and
and
mov
clc
out
sti
and
loopne
mov
std
mov
gs
popf
rolb
lods
icebp
outsl
lods
mov
jecxz
loope
imul
stos
dec
mov
mov
inc
mov
hlt
inc
jnp
sbb
inc
pop
dec
push
aad
or
pop
push
cmc
cmp
call
pop
pop
xchg
and
data16
sub
test
je
ljmp
call
popa
mov
xor
pop
push
fimull
ja
repnz
cmp
cld
mov
ja
outsl
or
xchg
lods
in
mov
and
aaa
ret
xchg
arpl
inc
aas
shll
repnz
imul
xchg
xor
lcall
int
or
adc
fnstcw
outsl
aad
loope
addr16
rcrl
fs
lcall
in
and
inc
cmp
mov
mov
mov
dec
fwait
xchg
jp
and
cmc
xor
lock
addb
aad
cld
test
andb
scas
sub
jno
pop
aam
in
cmp
dec
inc
test
jne
push
inc
int
add
adc
jmp
sar
jp
xchg
jmp
cmp
in
in
push
cmp
fisubrl
fldenv
pusha
add
mov
sub
jl
ljmp
je
mov
mov
xchg
out
lock
or
inc
dec
mov
mov
out
leave
outsl
in
adcb
fwait
and
in
loop
xor
pushf
mov
mov
ljmp
loopne
pop
mov
mov
aam
pushf
jne
lcallw
mov
negb
in
fisttps
sar
and
nop
mov
dec
inc
push
xchg
sub
cmp
and
mov
or
roll
pop
cmp
sahf
pop
jb
jge
mov
data16
and
test
popl
push
pop
adc
lret
js
fwait
jbe
lods
dec
pusha
imul
push
jae
clc
scas
jno
aam
or
sub
xor
and
popf
int3
insb
icebp
hlt
faddp
les
inc
imul
cmp
dec
out
mov
shrl
cmp
cmp
jp
dec
pop
dec
ret
test
lea
cltd
shlb
jo
push
xchg
sbb
dec
cmpl
out
mov
dec
add
mov
adc
cltd
xchg
pop
mov
out
pop
nop
cmc
test
cmp
notl
pop
sbb
inc
xor
push
insl
sbb
jo
inc
lret
lea
jmp
mov
jp
mov
push
push
adc
ret
test
fwait
into
jmp
outsl
mov
nop
xlat
jg
sbb
dec
movb
scas
inc
imul
imul
sahf
and
push
lock
repz
leave
push
lods
push
int3
fs
mov
mov
cmp
lock
mov
rcrb
push
jp
pop
xor
add
das
icebp
stc
scas
jnp
clc
es
jnp
xchg
mov
adc
ja
dec
repz
cs
and
inc
or
lods
stc
popf
add
ss
mov
std
arpl
or
clc
rol
mov
inc
int
das
pushf
repnz
cmpsb
inc
loope
and
mov
fisubl
or
xchg
add
mov
add
jo
imul
add
push
adc
push
stos
fcoml
add
mov
pop
pop
add
inc
push
xchg
add
imul
mov
and
pop
inc
sahf
repnz
sub
and
aaa
add
lods
jns
dec
out
notl
jae
dec
ljmp
jbe
ret
je
dec
push
aas
mov
xchg
bound
outsb
dec
fnsave
push
and
loop
add
dec
lret
push
insl
cmp
ja
jg
jge
xchg
and
ret
cmp
clc
dec
add
repz
adc
mov
adc
jno
daa
sti
shl
aam
xchg
push
enter
jg
sub
iret
jns
jno
je
das
fcomp
push
push
dec
iret
test
gs
hlt
fsubrl
fcompl
iret
movsl
cmp
pop
inc
mov
cmpl
filds
pop
dec
inc
pop
ja
leave
cmp
rorb
cmp
into
cmpsb
imull
dec
push
sub
loop
and
push
in
mov
inc
xor
out
add
pop
inc
pop
mov
push
outsb
and
pop
popa
mov
or
jae
std
sbb
jp
pop
mov
xchg
mov
jmp
stos
mov
push
or
aam
inc
scas
imul
fmuls
xorb
push
jecxz
mov
in
xor
adc
xchg
rcr
xchg
mov
iret
orb
mov
cli
mov
xor
mov
aad
sahf
jno
xor
push
enter
aam
cmp
das
les
movsl
adcb
js
and
or
int
mov
mov
gs
mov
pop
ret
in
push
dec
popa
outsl
out
loopne
shrl
cmpb
sbb
aad
jg
mov
test
stos
aad
loope
inc
xchg
inc
sbb
roll
dec
inc
pop
dec
inc
push
mov
push
sub
sub
push
pop
icebp
pop
jl
dec
sub
lahf
pop
outsl
or
stc
sub
push
imul
pop
and
insb
cwtl
push
cli
mov
cmpsb
inc
dec
cmp
inc
in
pop
cs
sub
pop
mov
add
mov
jo
into
aaa
jne
insb
mov
dec
dec
adc
xchg
mov
pop
cmpsb
out
in
loop
push
adc
cmp
popf
or
testl
or
dec
xchg
cmp
sbb
push
insl
sti
mov
lds
in
or
nop
bound
or
sbb
das
dec
out
xchg
shrl
icebp
or
xor
loope
jns
cmp
frstpm(287
mov
mov
and
in
cmp
sbb
enter
mov
rol
fistps
and
cmp
aaa
leave
sbb
popf
mov
lea
sbb
aaa
fists
cwtl
push
xlat
push
add
jg
or
repnz
divb
mov
pop
add
gs
push
mov
int
fisttps
out
inc
pop
push
mov
and
fsub
outsb
cmp
out
adc
jge
scas
pop
lods
ljmp
jmp
jo
pusha
cs
add
in
sahf
mov
and
dec
push
jecxz
push
imul
push
movsb
dec
sbb
aam
out
iret
lcall
inc
or
inc
aaa
fiaddl
repz
loop
mov
jno
lods
test
cld
push
gs
xchg
outsb
inc
arpl
mov
mov
cld
add
lds
popf
mov
mov
cltd
mov
cmp
pop
sti
fucomip
pop
xchg
push
pop
push
fucom
in
cs
pop
out
cmpsl
mov
pusha
fidivs
xchg
inc
or
dec
add
add
gs
fwait
cmpsb
or
test
xchg
js
sbb
std
xorb
adc
sbb
in
xor
movsb
test
jle
iret
and
jmp
cmc
sbb
loopne
or
iret
xchg
pop
shll
push
nop
loop
les
cwtl
mov
mov
shrb
pop
out
sarb
sbb
clc
or
popf
push
pop
sahf
fisttpll
into
and
pushf
jecxz
mov
loop
int
ret
adc
repnz
out
and
mov
inc
gs
sbb
add
mov
pop
cwtl
jmp
bound
mov
adc
xor
sbb
sbb
mov
add
xchg
mov
sub
fcmovnb
out
imul
outsb
es
pusha
push
stos
fmul
dec
aam
aas
inc
popf
and
ja
push
mov
idivl
clc
xchg
ror
leave
push
xchg
mov
jp
sbb
mov
and
jmp
std
xor
pop
shlb
test
repz
mov
mov
aam
and
add
imul
int3
pop
in
mov
mov
mov
jbe
xchg
xor
out
jb
out
fimull
daa
jae
xchg
cli
pop
addr16
mov
gs
aaa
xorl
sub
arpl
inc
or
sbb
jg
add
sub
scas
or
mov
xlat
xchg
and
add
sub
push
lods
rcl
fisttps
std
data16
in
test
lret
pop
inc
testb
xchg
push
in
push
mov
push
inc
jbe
repnz
scas
adc
sub
dec
lret
mov
std
sub
push
push
ret
mov
jbe
xchg
roll
adc
pop
js
out
mov
push
out
xlat
inc
dec
push
sub
add
and
push
fistpll
sub
adc
inc
mov
push
pop
cmp
lock
jl
bound
jg
nop
mov
iret
jecxz
jecxz
inc
pop
mov
inc
mov
pop
pop
sarl
jns
out
push
inc
add
daa
inc
pop
inc
xchg
loope
les
ficompl
sbb
mov
ljmp
repnz
fadd
jge
xchg
dec
rcrl
dec
movsl
insb
rcr
or
je
inc
mov
dec
push
cld
aaa
dec
pusha
arpl
xorb
imulb
pop
cs
pop
sbb
xor
cmpsl
out
or
lahf
jae
jge
pop
inc
fnstenv
mov
jge
xchg
mov
xchg
and
add
adc
inc
mov
stc
es
imull
fs
adc
adc
and
imul
xbegin
lret
add
adc
push
icebp
mov
ret
xchg
hlt
xchg
in
repz
call
dec
add
and
or
xchg
fisttpl
xchg
inc
jl
and
xor
incl
pop
jp
das
jle
repnz
push
mov
sbb
inc
shlb
xchg
in
test
and
jmp
mov
daa
lods
pop
shr
cltd
dec
out
sub
inc
sti
dec
lock
ficoml
push
dec
sub
jmp
or
ss
rcll
jae
jmp
inc
add
jae
pushf
push
popf
pop
xchg
arpl
or
jbe
mov
int3
into
insl
lds
dec
xchg
push
outsl
fwait
mov
sbb
lahf
fidivrl
jl
rcrl
movsl
xlat
and
jns
jb
mov
adc
xchg
add
jae
mov
aaa
ret
fldl
in
lea
adc
cltd
mov
js
ret
push
cwtl
mov
loop
mov
jnp
fwait
std
das
ljmp
lret
xchg
adc
and
pop
add
push
insb
xchg
xlat
inc
xorb
mov
imul
nop
bound
mov
leave
mov
mov
jbe
inc
popf
mov
sar
add
fs
in
adc
push
cmp
sbb
push
rolb
add
fld
mov
mov
ljmp
clc
arpl
jns
or
sbb
cli
pusha
insb
pop
int
mov
sbb
rclb
setl
cmc
jns
mov
xchg
mov
mov
xor
pop
inc
mov
lcall
mov
in
psadbw
cmpsl
adcl
mov
pop
scas
mov
xchg
dec
xor
xchg
mov
pop
inc
fwait
mov
insb
fs
or
ljmp
inc
push
test
sbb
adc
push
jl
subb
ss
es
mov
in
mov
icebp
push
rcrl
mov
inc
stos
enter
movaps
xchg
popf
in
stc
fwait
jno
mov
cmp
jg
dec
pop
lods
je
xchg
test
or
aas
sub
test
stc
divb
jb
mov
sbb
lds
dec
push
dec
inc
xor
xlat
cmpsb
fsubs
js
mov
xchg
je
pusha
mov
mov
repz
dec
sub
dec
jle,pn
push
lret
mov
repz
imul
outsb
gs
not
fadds
or
adc
jecxz
sbb
push
push
aam
add
imul
dec
jmp
xchg
xor
cmpsl
pop
mov
test
fcmovnbe
ret
xor
inc
jno
sub
bnd
jge
mov
xchg
pop
sub
stos
pushf
pop
test
jmp
inc
cmp
pusha
xor
jg
mov
jae
mov
lods
lock
pop
jecxz
cld
push
cmp
and
mov
add
jmp
in
pushf
icebp
dec
call
pop
xchg
jno
in
ficoml
test
or
rclb
mov
in
xchg
mov
sbb
or
fwait
add
fstps
das
dec
jnp
adc
add
cli
fs
mov
jno
dec
xchg
test
mov
mov
addl
cltd
adc
shlb
xchg
jo
sbb
in
xchg
ds
or
mov
mov
adc
xlat
add
fwait
scas
pop
addr16
imul
xchg
loop
dec
push
pop
in
and
pop
push
jns
xor
nop
and
jmp
xor
stos
jbe
leave
sbb
outsl
mov
jl
sbb
inc
in
or
popa
or
or
inc
jecxz
sbb
stc
shll
and
insb
rolb
lret
cmp
test
stos
mov
cmp
popl
pop
enter
jbe
js
inc
add
test
imul
enter
cmpb
lcall
sbb
and
sbbl
xlat
pop
jmp
mov
in
sbb
jp
adc
mov
out
jmp
scas
repz
lods
mov
xchg
xor
jl
mov
or
mov
jo
rcll
dec
bound
mov
loop
cmp
jge
xor
daa
pop
jae
lea
setge
data16
add
mov
cmp
fsubr
outsl
pop
or
stos
mov
hlt
cltd
fidivrl
into
mov
faddp
test
sbb
push
cltd
fsubs
and
or
mov
notl
sbb
xor
cwtl
cmp
xor
push
hlt
in
daa
es
cmc
adc
xchg
aam
xorb
fs
xor
pop
push
icebp
shrl
les
flds
lahf
and
mov
xchg
cmp
jge
add
movsl
jnp
loopne
mov
gs
mov
aaa
mov
into
mov
push
cmp
out
mov
stc
push
inc
or
repnz
dec
scas
inc
cld
mov
mov
xchg
cmp
jo
pop
mov
fwait
jb
lcall
loop
xor
mov
in
add
mov
inc
iret
dec
std
push
test
dec
movsl
push
sbb
jmp
cmc
imul
xor
add
stos
pop
xchg
pushf
negl
cwtl
outsl
xor
pop
test
and
out
dec
out
adc
xchg
pop
xor
xchg
ljmp
mov
test
stc
push
popf
jo
adc
sahf
cmpsl
das
loopne
push
pop
sub
iret
mov
das
mov
stos
xor
cmp
pop
sbbb
pop
cwtl
cmpsl
lret
cs
dec
add
dec
and
adc
dec
push
loope
jmp
test
xlat
push
push
cmp
sub
adc
das
pusha
mov
aad
fisubrs
enter
pop
and
sub
adc
popf
lret
ja
sbb
pushf
add
and
cmp
iret
sbbl
icebp
jmp
scas
adc
push
ljmp
ljmp
test
pop
pushf
das
or
leave
pop
push
sub
aad
xchg
test
pop
aas
cmp
fdivrl
mov
sarb
ljmp
jge
sub
jns
jb
test
addr16
push
xchg
jp
sbb
cmp
pusha
jo
popa
lds
das
mov
sbb
jl
xor
ja
js
imul
pusha
insl
cmpl
stos
cld
and
jnp
add
cmp
mov
outsl
and
or
rol
inc
ret
jo
xchg
aam
sub
xchg
lcall
xchg
data16
pushf
dec
mov
push
or
and
and
lods
lods
and
daa
xor
ljmp
lahf
push
xor
arpl
jb
in
shll
test
mov
arpl
fisubrs
and
jno
bound
ds
jb
push
sub
rorb
das
and
jmp
loop
sub
shr
les
stos
lahf
test
cli
mov
sbb
add
sbb
loope
push
push
mov
mov
call
dec
ficoml
int
out
popf
jno
mov
xchg
imul
mov
fwait
xor
lret
pop
lods
cmpl
aam
sti
cmp
hlt
jmp
inc
lret
add
ja
push
mov
adcb
xchg
cmc
mov
je
loop
dec
jnp
mov
sub
cmp
mov
mov
int
out
mov
sbb
ja
push
push
inc
xchg
fwait
in
subb
pop
mov
add
out
outsb
int3
leave
iret
jnp
into
dec
lahf
jge
push
outsb
js
or
xchg
dec
cmpsb
jg
push
stc
int3
insl
jle
jmp
mov
repz
pop
adc
pop
sub
nop
arpl
push
js
sbb
jne
xor
xor
cwtl
test
cmc
xor
movsb
dec
sbb
ret
sbb
fistpll
shll
rorl
rolb
pop
cwtl
adc
and
scas
jns
pop
and
xor
sbb
adc
fnstcw
mov
shl
sbb
add
mov
xchg
inc
andl
push
mov
fmuls
mov
add
cld
mov
out
hlt
aad
popa
xor
gs
fbld
push
xchg
jae
rcrb
pop
jnp
push
outsb
mov
lahf
movsl
test
mov
cmp
ds
cmp
push
push
cmpsb
add
in
vsubss
jmp
aam
mov
les
or
or
into
push
or
nop
dec
dec
ljmp
repnz
xchg
and
add
adc
sbb
clc
test
mov
stc
and
fildl
fwait
jno
insl
push
lds
jecxz
ljmp
bound
sbbb
adc
dec
bound
mov
push
cmp
sbb
ret
mov
sub
push
xor
in
push
add
icebp
inc
sbb
insb
js
sbb
sub
xor
xor
pop
push
gs
xchg
stos
mov
aad
mov
hlt
adc
jl
dec
imul
sub
adc
pusha
mov
jge
dec
loop
and
daa
test
int
sbb
sub
pop
mov
jb
xchg
cmpsl
xorl
sti
in
xor
xlat
inc
clc
rorl
push
rol
int3
add
jae
std
out
mov
std
gs
out
jne
inc
mov
out
jmp
ficompl
ret
mov
daa
enter
adc
sub
pop
mov
sbbb
mov
jp
jb
ja
stc
and
jno
sbb
mov
xor
dec
mov
test
popa
push
stos
sbb
out
jb
xchg
mov
lcall
lret
repnz
or
in
test
notb
mov
pop
add
dec
cmp
stc
loop
gs
jge
sub
imul
mov
pop
scas
and
dec
sbb
push
stc
fmul
add
bound
repz
sub
roll
inc
fstps
sub
cld
push
adc
scas
jns
in
xorl
je
loop
cltd
cltd
push
mov
sbbl
test
lret
hlt
mov
pop
or
or
mov
cmp
xor
pop
repnz
movb
ret
icebp
sbb
stc
adc
fimuls
inc
jg
test
adc
adc
in
pop
xchg
mov
fdivr
enter
mov
lret
rolb
fwait
push
inc
icebp
push
xchg
adc
dec
or
and
cmpsl
ja
sbb
rcll
jbe
mov
jl
xchg
push
lahf
mov
push
push
lcall
movsb
lea
les
int
gs
lock
mov
outsl
mov
into
dec
iret
mov
lods
in
jns
insl
xchg
jno
lods
cmpsb
xor
add
pop
push
mov
pop
roll
pop
sub
add
outsl
dec
enter
push
mov
add
mov
and
je
lea
pop
mov
mov
or
sub
sbb
aaa
xorb
cmp
add
xchg
mov
xor
sub
or
push
xor
fwait
pusha
dec
lods
ret
cvtpi2ps
sbb
out
cmp
aas
mov
xor
jbe
repnz
addr16
sbb
nop
stc
mov
sub
mov
pop
shrl
adc
ficomps
push
mov
mov
add
loop
jg
cmp
xchg
pavgb
outsb
outsl
test
aad
pop
and
xchg
push
adc
dec
jb
cli
mov
sub
push
mov
imul
stc
ljmp
vcvtpd2dq
rcrl
ja
loopne
in
into
movsl
sub
popf
clc
punpckldq
insb
inc
pop
fistpl
pop
sub
js
mov
fidivrl
sti
cmc
xchg
pop
adc
jmp
rorl
dec
mov
mov
je
xchg
inc
inc
cmp
jmp
xorb
pop
in
ret
lds
ficomps
xchg
mov
xor
sti
fists
push
andb
add
lret
jmp
stc
and
dec
ljmp
ss
loopne
cmp
xor
int3
jle
int3
cwtl
es
and
rcll
dec
int3
dec
cmp
in
iret
mov
mov
push
stos
push
cmp
pop
les
test
imul
and
inc
mov
pop
das
dec
mov
scas
mov
sti
push
adc
ret
xchg
cwtl
cmp
pop
and
xor
fs
cmpl
sub
out
mov
add
jbe
test
pusha
test
xchg
nop
loope
pusha
mov
aam
scas
test
push
xchg
leave
aam
mov
cmpsl
xchg
andl
movsl
cmp
sub
and
ds
or
ret
push
lahf
shrb
test
insb
loop
hlt
adc
cmp
pop
sub
add
insb
sbb
mov
inc
cmp
arpl
lods
sbb
and
testl
or
les
jae
jp
cld
outsl
jnp
lcall
lock
clc
jmp
test
jmp
mov
ja
sbb
movb
imulb
jo
leave
into
push
cwtl
adc
jbe
cltd
call
mov
inc
cmpb
lcall
inc
repnz
xchg
subl
and
cmp
sbb
or
out
ljmp
stos
into
out
cwtl
sub
or
lods
outsb
mov
jmp
sub
add
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
mov
sbb
mov
mov
sbbl
xor
orl
add
andl
mov
mov
xor
orl
push
mov
mov
sbb
mov
xorl
add
orl
mov
mov
movzwl
sub
mov
adcl
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
sbb
mov
mov
xor
mov
adc
mov
subl
add
movzwl
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movb
lea
orl
mov
xor
mov
mov
sbbl
xor
sbbl
add
adcl
mov
and
movl
push
mov
add
movl
not
mov
movl
cmpl
je
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
jmp
cmpsl
test
cltd
mov
pcmpgtw
xor
addl
mov
sub
lock
imul
popa
lds
loopne
push
sub
sbb
cmp
xor
and
mov
arpl
cli
sub
xrelease
mov
into
xchg
fs
stc
xchg
int
jle
sbb
xchg
mov
lea
and
xor
inc
jmp
xchg
repnz
out
cld
fldl
roll
inc
cli
daa
cmpsl
sub
mov
xchg
xor
popa
push
cwtl
cld
mov
sti
cmp
cmp
sbb
and
das
test
mov
cmp
icebp
sub
hlt
jle
decl
movsb
enter
mov
lahf
push
add
mov
inc
mov
jbe
movsb
stc
sti
out
stos
pusha
test
push
adc
cli
loope
sub
stc
sbb
frstor
stos
aas
in
push
fmull
cli
xchg
mov
stc
xchg
stos
jns
inc
cli
rcrl
and
shrb
jle
pop
push
gs
iret
daa
pop
xchg
cmp
std
lods
ffree
mov
stos
sub
adc
mov
popf
enter
mov
push
dec
popa
push
mov
js
mov
dec
pop
data16
inc
pop
dec
mov
pushf
dec
fiaddl
hlt
insb
btl
add
inc
dec
jne
fwait
std
mov
loop
jmp
loope
push
negb
mov
or
push
out
adc
mov
mov
xor
adc
rclb
or
mov
cmp
imul
xor
cmp
add
pop
pop
ret
jle
inc
mov
or
flds
pop
arpl
les
dec
push
and
cmp
or
outsb
and
sub
pop
or
jae
push
mov
pop
test
mov
mov
jo
aaa
adc
jmp
and
enter
mov
ds
sub
mov
and
loopne
pop
pop
lret
cwtl
add
rcr
arpl
ror
punpckhbw
stos
nop
and
push
cld
ljmp
push
pop
jmp
adc
add
scas
push
or
xor
mov
outsl
xchg
inc
dec
test
and
daa
pop
fstp
mov
mov
cs
loope
jnp
repnz
sbb
ret
imul
scas
rorb
xor
and
and
or
xor
push
mov
or
push
xchg
xchg
mul
mov
mov
xchg
mov
cmp
adc
insl
add
jmp
mov
sub
lds
and
fstl
mov
xchg
add
xchg
sti
jecxz
push
jns
xchg
mov
push
ret
pusha
mov
cmp
sub
xor
jge
adc
dec
int
mov
enter
xchg
xor
ljmp
add
mov
cmp
and
ja
gs
clc
jb
and
shlb
xor
push
test
sub
ja
in
adc
push
fcmovu
cmp
cmp
mov
inc
mov
or
jp
lret
out
xor
orl
push
pop
sbb
mov
loop
insl
cltd
pop
push
lea
stc
add
pop
cmpsl
and
in
cltd
arpl
les
add
mov
sbb
rcll
ljmp
sub
aad
ja
push
or
ret
cli
bound
sti
stos
xor
shl
loopne
stos
bound
pop
adc
std
leave
mov
inc
mov
out
cltd
mov
loope
hlt
push
xchg
imul
aam
jg
sti
sbb
fcoms
lea
or
adcl
fs
outsb
adc
push
fadds
add
test
dec
push
mov
sbb
aam
or
mov
push
xchg
mov
or
loope
js
jnp
pop
movsl
mov
jp
jae
sahf
xchg
daa
sbbb
push
popl
sub
stos
add
jbe
rcll
dec
mov
add
pop
cmpsb
cs
cmpsl
fucomip
mov
fbstp
mov
mov
iret
add
out
inc
and
dec
mov
cmp
pop
inc
ss
sbbb
pusha
insb
dec
les
inc
mov
xor
enter
sbb
shrl
pop
repnz
test
mov
in
mov
call
fdivl
sub
or
nop
add
sub
jno
out
mov
std
jp
inc
call
fs
arpl
mov
mov
lret
or
and
inc
out
call
mov
mov
cmp
data16
pop
hlt
pop
movsl
inc
addb
xor
sub
jnp
xor
daa
add
mov
cltd
scas
sbb
jmp
adc
and
bound
aaa
xchg
les
std
cs
dec
pop
cmp
rcll
pop
shrb
imul
fidivs
bound
or
mov
dec
fnstsw
testl
shrl
lods
dec
sarl
mov
jp
jp
fwait
sub
mov
mov
jns
xor
rcrb
out
push
push
not
rcrl
fstpl
mov
adc
stos
out
jae
push
mov
loopne
mov
dec
and
loope
cmp
cld
xchg
fistps
lcall
sub
pop
in
inc
jb
xchg
popa
in
cmp
orl
ret
mov
pop
or
inc
ss
xchg
aas
jo
push
pop
outsl
xor
pop
fidivl
test
scas
mov
mov
sbb
pop
std
and
dec
cld
mov
sbb
push
testl
xchg
and
sbb
stos
push
mov
shlb
add
jo
sbb
add
and
clc
mov
inc
jno
mov
xchg
push
mov
fsubrl
pop
push
movsl
xchg
clc
ret
jmp
push
sarb
lea
leave
add
sbbb
add
pop
dec
test
aas
fiadds
cmp
add
pusha
inc
pop
out
adc
fsubrs
add
ds
push
icebp
push
rcll
add
pop
mov
cwtl
jno
pushf
push
mov
testl
add
outsb
dec
xlat
popf
rol
movsb
jl
sub
push
aad
pop
jne
mov
push
pop
in
out
lods
inc
xchg
xchg
sbb
sub
imul
mov
aad
cmp
hlt
and
icebp
cmp
out
push
and
sbb
xchg
jmp
xor
mov
out
mov
xlat
imul
call
inc
lea
popf
xor
mov
dec
mov
add
adc
es
add
test
xor
and
cmpsl
aad
xchg
pushf
mov
cwtl
sbb
fldlg2
mov
pop
fnstcw
sti
adc
sti
pushf
insl
or
int3
sti
lods
sti
stos
lcall
fsubs
cmc
faddp
push
mov
pop
and
dec
add
test
jmp
xchg
push
lcall
clc
sarb
fidivs
xchg
repnz
mul
mov
aaa
add
mov
or
or
fcoml
pop
mov
fwait
dec
sub
pop
lea
mov
push
mov
aad
gs
or
xor
mov
push
arpl
cmp
in
pop
mov
insl
pop
pushf
dec
xor
fiaddl
je
xlat
jno
fcompl
sub
mov
xchg
and
mov
jnp
inc
enter
fiaddl
leave
xchg
les
jns
insb
ljmp
mov
sbb
dec
push
hlt
xor
js
pop
shr
xchg
sub
addr16
jg
pushf
pop
or
ffreep
xchg
ljmp
div
and
mov
push
lea
mov
mov
dec
inc
adc
ret
sub
ss
cmp
ja
leave
sbb
bound
dec
cmpsb
inc
jo
pop
insl
and
fildll
sbb
aad
push
sub
cmpsb
add
pushaw
pop
cmpl
push
or
subb
imul
mov
pop
jbe
sub
in
adc
cld
push
push
cmp
pop
inc
gs
jp
mov
in
or
shlb
mov
sub
mov
adc
movl
xchg
push
aaa
shrl
int3
xchg
arpl
add
mov
fdivrl
xchg
fbstp
push
pop
cmp
pop
dec
pop
lods
loopne
in
ret
or
xor
push
mov
in
lods
lods
ds
test
cmpl
mov
mov
adc
mov
pop
xchg
rcl
enter
pop
adc
dec
mov
fwait
sub
dec
sahf
push
dec
imul
add
xlat
mov
js
loop
pusha
mov
mov
in
mov
xor
push
int3
insl
ret
add
sbb
sahf
push
sbb
inc
push
hlt
stc
xchg
sarl
mov
or
mov
ret
dec
or
mov
adc
lds
lret
adc
cmp
pop
out
mov
sbb
xchg
pushf
dec
jo
stos
clc
shl
push
mov
shlb
xor
fidivl
push
sahf
add
bnd
inc
and
std
cs
jecxz
movsl
or
lea
loopne
addl
push
adc
divl
loope
mov
xchg
pushf
pop
mov
movsl
faddl
popf
shlb
in
push
push
adc
xor
insb
sbb
ficompl
stos
jge
push
cli
add
lds
bound
ja
movsb
or
dec
mov
lret
jl
mov
push
push
xor
push
jmp
mov
sahf
ret
inc
xchg
mov
add
pop
xor
rcrb
or
les
dec
dec
fwait
mov
dec
jns
and
imul
or
lcall
sbb
mov
sbb
inc
jle
dec
js
mov
and
scas
mov
movsl
ss
cmp
mov
jmp
add
scas
jg
cs
sbb
push
aas
pop
push
repz
or
jge
sti
gs
add
dec
sub
jmp
push
in
mov
repz
jae
jno
or
andl
xchg
mov
sar
or
gs
pop
aad
dec
jae
mov
test
xchg
mov
adc
mov
mov
pop
mov
je
icebp
push
mov
jbe
cs
push
inc
fistl
inc
sub
xchg
push
mov
inc
sub
out
inc
mov
loope
push
mov
pop
inc
push
dec
and
fsubr
loope
sbbb
mov
in
call
adcl
add
out
into
lret
fs
mov
andb
push
add
xor
mov
inc
shrb
add
push
and
clc
testl
sub
push
adc
pop
cmc
aaa
sub
push
insl
mov
lret
int3
mov
andb
outsb
mov
loopne
rcrl
jne
lcall
jnp
mov
pop
inc
sahf
les
cmp
sbb
repz
ret
or
and
pop
jae
sub
inc
lahf
dec
addr16
wrmsr
sbb
sbb
pop
call
xor
bound
jne
cmc
les
test
dec
xor
mov
int3
adc
adc
inc
pushf
jnp
jb
inc
xchg
andl
out
mov
jecxz
dec
dec
jae
int3
mov
sbb
mov
or
lea
mov
outsb
and
jno
jl
and
mov
stos
and
sbb
push
out
add
or
dec
mov
adc
mov
xchg
push
cmp
sub
lahf
loopne
push
jnp
fnstenv
xorb
daa
inc
ds
test
and
add
jne
data16
inc
mov
or
jg
or
cmp
lret
lret
push
push
mov
in
repnz
shl
loope
dec
mov
outsl
push
in
dec
lods
sbb
ja
lret
xor
mov
and
scas
dec
test
jge
push
xchg
add
add
lret
sbb
add
lock
sbb
rcrl
xchg
push
inc
xor
int3
adc
fstpl
scas
nop
mov
fldt
fnstcw
mov
sahf
stos
mov
and
sbb
out
scas
inc
jle
ficomps
ficompl
das
rcrb
cmp
jnp
outsl
cwtl
sub
adc
sub
fsub
or
mov
addr16
sbb
dec
push
lods
scas
mov
dec
pop
push
jge
and
push
daa
dec
xchg
jmp
cmc
sti
fxch
cli
push
cmp
push
fmull
aas
scas
sub
and
jg
lret
dec
aas
rorl
mov
xor
repnz
pop
cmpsl
push
sahf
inc
cmc
jnp
fdivs
ret
incl
jno
gs
je
je
jl
sub
push
int3
add
push
aas
jae
xlat
and
and
clc
fidivrs
jb
stos
out
popa
popf
repnz
sbbl
insb
add
jae
jae
out
cmp
sub
lret
rolb
lea
aaa
sub
jmp
ret
iret
movsl
mov
mov
out
cmp
pop
mov
jbe
outsl
mov
fimull
es
xor
stos
dec
enter
adc
into
adc
add
adc
lret
and
xlat
xchg
outsl
push
jno
adc
ret
xchg
xchg
lock
mov
dec
in
lret
repz
rorb
imul
mov
pop
addr16
cmp
xchg
popa
sbb
xchg
xor
rcrl
iret
pop
pop
aas
stc
add
adc
adc
lahf
jae
lahf
sub
mov
push
mov
sbb
jmp
loop
cltd
je
jmp
mov
gs
lahf
mov
mov
mov
jmp
add
aas
leave
icebp
test
mov
pop
fcmovnbe
cli
mov
out
into
ret
sbb
push
divl
ss
xor
out
scas
adc
cmp
mov
xlat
ljmp
je
dec
add
fbld
mov
cmc
popa
mov
mov
cld
int
sbb
ret
out
or
aad
lock
int
mov
pusha
and
aam
popf
adc
fcompl
or
and
ret
jb
sbbl
cmpsb
popf
mov
mov
jbe
mov
imul
fcompl
jb
lods
shrl
fmull
das
sub
rorl
adc
mov
mov
mov
cmpsb
outsl
data16
leave
ret
call
jae
aaa
cmp
or
pop
addl
push
jecxz
jmp
enter
or
add
sub
ds
sbb
cmpsb
xor
fcmovb
cli
or
jge
and
sbb
mov
sarb
mov
ljmp
dec
sar
sub
and
fidivs
addb
sub
daa
rol
sbb
ss
xchg
jl,pt
cwtl
stos
bound
nop
pop
push
in
add
pop
test
adc
mov
push
pop
mov
jb
lcall
sbb
aam
and
dec
jbe
jb
loop
add
int3
adc
dec
lret
adc
push
dec
in
sub
ljmp
jmp
std
cmpb
in
sub
inc
pop
sbb
xor
inc
rorl
loopne
adc
dec
cmpsl
push
push
adc
aad
xorl
mov
and
fadds
push
push
mov
sbb
fildll
cmpb
cmp
scas
xchg
push
pop
movsl
call
push
dec
adc
sahf
popa
pushf
jae
jno
sbb
add
push
test
sbb
test
cmp
outsb
cmp
je
inc
pop
adc
fs
mov
or
push
test
filds
and
in
arpl
in
out
std
test
scas
sti
or
fildl
pop
jns
popf
daa
hlt
jg
adc
inc
out
jo
mov
add
inc
popa
jnp
lret
stc
lcall
inc
mov
mov
adc
imul
xchg
mov
or
jne
mov
cmp
aaa
stc
cmp
gs
mov
sti
adc
push
xor
or
mov
movsl
sbb
inc
push
sbb
loopne
jae
mov
inc
cmp
mov
enter
addr16
stos
mov
mov
push
mov
cmc
sub
mov
and
xor
xor
mov
jle
push
jno
push
lea
loopne
call
sub
push
pushl
inc
movsl
and
push
jns
jmp
jge
ror
imul
sub
and
shll
es
dec
pop
movsb
pusha
mov
jg
jae
or
mov
xlat
ret
jmp
ljmp
shl
pop
and
push
sub
sbb
push
push
pop
mov
cli
fldcw
cmp
sub
jbe
add
loope
lods
push
pushf
ds
shll
push
outsl
or
xchg
push
xlat
lds
xor
push
das
hlt
cmp
repnz
mov
add
pushf
movl
jl
and
addl
cld
cmp
sbb
daa
and
add
lcall
dec
std
fildl
fcmovbe
stos
fldt
fisubrs
mov
stos
inc
mov
cmc
test
aas
sbb
jno
pop
addl
in
push
add
or
cmpsl
push
scas
and
sarb
fidivl
popa
sub
cmpsl
ret
mov
pop
and
adc
loope
cmp
mov
ja
addl
lret
inc
dec
lahf
clc
rclb
fisttps
js
loope
push
js
xchg
push
outsb
pop
in
mov
mov
fcomi
lret
dec
mov
mov
push
aad
xchg
int
fdivrs
xchg
dec
rcl
icebp
ss
push
push
call
cmp
js
popa
or
lock
or
imul
fstps
jecxz
mov
hlt
stc
xchg
mov
gs
cmp
push
mov
je
sbb
dec
sbb
test
cli
in
stc
sub
fldl
inc
out
add
cmpsl
cmpsb
call
xor
jbe
scas
aad
lds
fstpt
mov
cmp
inc
mov
fptan
jno
les
fldl
add
inc
movsb
ljmp
inc
and
adc
mov
mov
fnsave
jge
cltd
movsb
int
push
shrl
or
add
movsb
sbb
pop
mov
gs
jb
push
pop
imul
sub
xor
add
pop
add
adc
imul
aas
jge
add
jbe
sbb
mov
es
cmp
xor
pop
cmp
aam
dec
adc
mov
popa
or
jmp
or
or
mov
or
sub
into
stc
int
or
fiaddl
loopne
push
sbb
sub
orb
mov
xchg
xchg
jae
push
mov
shl
into
jl
into
push
fdivrp
loope
push
lahf
xor
or
aaa
mov
fldenv
clc
lock
fcoms
mov
adc
dec
cmpsl
push
pop
xlat
push
test
jecxz
dec
push
push
xchg
push
divl
cmc
in
adc
push
mov
or
dec
sub
loopne
xor
test
mov
mov
push
sub
jmp
ret
ja
add
int
ds
push
jmp
fsubs
mov
or
rcrl
inc
pop
sub
ja
dec
stos
jge
pop
jmp
xorb
loope
push
dec
inc
repz
call
and
ja
mov
lret
in
stc
inc
out
add
rorl
lahf
jmp
jo
ret
cmp
js
jo
push
adc
mov
dec
sahf
cmc
aas
jp
mov
scas
add
ret
rolb
xchg
jge
sub
push
dec
pusha
mov
lods
aas
lods
add
lcall
lret
mov
jb
mov
pop
decl
inc
cli
sbb
sti
faddl
mov
adc
movsl
sbb
lahf
sub
mov
fs
mov
fisubs
leave
popf
mov
lret
add
fs
and
mov
sbb
cmp
aaa
fucom
cld
jb
dec
jne
int3
pop
cmp
insl
mov
fsubp
test
xorl
ljmp
imul
inc
in
and
fnsave
test
addr16
je
repnz
push
in
xchg
test
adc
dec
fstpl
fs
cmp
daa
cltd
mov
inc
push
adc
and
in
faddl
movsl
scas
xchg
mov
out
jl
insl
push
xor
and
ret
test
test
xchg
clc
fdivp
inc
or
lock
lea
movsb
aaa
add
mov
mov
mov
aad
sub
push
insl
inc
iret
pcmpgtb
outsl
addr16
xlat
andl
incl
pop
mov
fldcw
aam
dec
jl
inc
xor
lods
or
mov
insl
add
dec
push
and
dec
ja
pop
fadds
aaa
pop
or
or
adcl
and
adc
das
and
rclb
xchg
pop
ret
cld
in
in
fmull
cmp
jnp
cmp
mov
add
jp
sub
dec
lcall
mov
in
out
pop
xchg
mov
popa
and
std
mov
dec
mov
xor
add
cltd
push
popa
or
dec
mov
pop
push
xchg
push
les
sbb
sub
int
jge
aaa
mov
pusha
pusha
cmp
add
lret
ljmp
fdivrs
mov
sub
push
cwtl
dec
pop
push
pop
shlb
xlat
fildl
mov
xor
sbb
cmp
std
adc
xor
cmpsb
stos
sarb
push
scas
mov
imul
insb
inc
mov
add
in
add
fwait
xchg
inc
mov
cmp
dec
pop
xor
cmp
pop
jmp
fdivrs
fmull
jnp
arpl
pop
sub
cmp
dec
test
jnp
adc
add
mov
push
mov
xchg
ljmp
icebp
pop
daa
mov
sub
cs
shll
test
push
sub
shll
js
fsubrs
pop
jae
scas
rcl
bound
pop
cmp
out
mov
push
testl
scas
sub
jmp
rcll
mov
jo
jg
sbb
jmp
lods
dec
fmul
test
iret
testl
mov
sub
cli
and
bound
inc
push
xor
jbe
sti
dec
adc
sarb
fiadds
outsb
inc
js
cmp
int3
push
test
or
inc
lock
dec
mov
dec
jae
insb
pop
push
sbb
push
mov
fcmovne
fcomi
dec
mov
roll
fidivl
xchg
fwait
xor
mov
outsl
sbb
sbb
xor
cmpl
mov
sub
pop
fsubs
test
ret
mov
xlat
push
jle
xchg
adc
insl
add
mov
xchg
sbb
sbb
inc
mov
hlt
push
xchg
mov
push
loop
dec
mov
add
mov
lock
xchg
dec
mov
test
js
mov
push
pop
pop
xchg
notl
add
push
sahf
pop
insb
fadds
mov
ljmp
addr16
pop
daa
inc
insb
cmp
mov
push
jnp
insb
sbb
mov
stos
xchg
add
add
mov
jmp
push
xor
aas
jno
sbb
sub
jle
and
or
dec
mov
loopne
sbb
cwtl
addr16
lcall
push
fsubs
inc
jecxz
ficoms
sbbb
cmp
faddl
popa
mov
pushf
subb
or
jne
jne
push
xchg
ds
pop
sub
add
xchg
test
add
ljmp
sbbl
mov
out
stc
mov
ss
pop
lret
fs
leave
mov
cmp
sub
out
lock
mov
aas
dec
pop
or
mov
and
mov
mov
mov
mov
push
mov
shl
add
scas
repnz
test
lods
cmpsb
mov
movsb
push
lret
andb
daa
and
inc
in
sbb
sub
insb
outsb
sbb
bound
dec
push
sbb
mov
out
sarl
popa
fsubrl
dec
and
mov
sub
cld
lods
pop
test
inc
dec
lret
jg
loopne
mov
sti
aam
arpl
shrl
or
mov
or
or
cld
popf
orl
sbb
cmp
pop
andb
push
daa
or
xchg
cmpsl
fcomp
xor
lods
inc
and
fsubrp
dec
pushf
push
aas
pop
xchg
das
adc
inc
fbld
xor
add
stos
sub
fwait
das
dec
push
pop
adc
ljmp
jl
mov
in
out
mov
out
dec
xor
jl
push
insl
sahf
stc
fs
inc
bswap
insb
push
or
sti
fdivl
lea
cmpsb
test
lret
movsl
pop
mov
out
xor
lds
lods
jne
sbb
outsl
mov
out
or
in
test
mov
pop
fisubrs
bound
sub
or
fistpl
and
push
cmpsl
pop
pushf
inc
jle
ja
rolb
or
jb
inc
out
push
ret
push
mov
dec
inc
and
ret
stos
fs
fwait
pop
or
sub
pop
hlt
fdivrp
lahf
xsave
scas
repz
sub
mov
testb
or
cmovae
pop
scas
stc
lcall
lds
mov
repnz
pop
clc
lods
cmp
add
pusha
xor
push
nop
mov
adc
sbb
imul
test
arpl
pop
cld
mov
cwtl
dec
mov
sub
roll
clc
shrb
fwait
sbb
mov
roll
gs
push
or
repz
jb
jnp
xchg
xchg
jmp
inc
pop
pop
pusha
inc
add
dec
fisubrs
push
jne
out
jnp
hlt
nop
sbb
scas
outsb
inc
or
add
lods
pop
std
inc
icebp
cwtl
mov
sti
fsubl
push
dec
mov
push
roll
mov
cmp
or
push
add
add
mov
xchg
sub
aad
loop
inc
sbb
jae
call
add
cmpsl
or
push
cmp
xchg
mov
divb
addr16
and
inc
ljmp
hlt
scas
shll
out
shll
xor
jno
out
int
inc
jecxz
dec
xchg
cwtl
dec
div
adc
insl
cmp
fwait
in
clc
lds
xorb
sub
pop
insl
jg
add
and
xchg
and
mov
and
ja
dec
test
jl
pop
scas
fs
or
push
mov
insl
cld
and
lods
mov
mov
sub
idivl
xchg
and
xorb
add
add
es
inc
and
nop
loop
xlat
mov
push
cmp
mov
push
test
pop
or
adc
or
in
js
cld
push
push
loope
out
mov
test
cmpsb
mov
mov
mov
jl
adc
or
fimull
sub
movsb
movsl
in
cmp
add
mov
int3
les
jecxz
cld
clc
pop
mov
xchg
out
lahf
ret
aaa
push
mov
aaa
hlt
movsb
dec
pop
inc
ja
adc
rcll
cld
cmp
outsl
push
ret
call
test
incb
mov
or
lock
pop
mov
mov
aam
mov
xchg
add
imul
in
sbb
in
paddw
or
xor
sub
mov
sbb
xchg
jae
or
cmp
pusha
adc
inc
rcr
sbb
fnsave
cmp
adc
popa
mov
and
xchg
pop
insl
ret
dec
mov
mov
loop
xor
lock
data16
sahf
jge
push
fdivr
movsl
lret
fisttpll
pop
and
cltd
jne
jp
bswap
fnstcw
scas
jl
pop
movsb
arpl
lahf
mov
leave
xlat
jnp
lods
repnz
ljmp
lret
or
fdivl
mov
in
daa
cli
int3
mov
dec
fwait
push
fwait
dec
cmp
stos
push
ret
or
out
mov
aam
jns
lahf
push
mov
xchg
sti
filds
cmp
and
push
scas
dec
sahf
cmp
pop
jg
out
pop
xor
jns
mov
dec
jns
fisubrl
aad
ret
lds
jo
ljmp
mov
jle
add
pop
and
pusha
xbegin
push
inc
call
loope
mov
jne
jge
cmp
aaa
cmp
pushf
in
sahf
insl
mov
jb
sub
movsb
js
cmp
loop
sbb
mov
popf
mov
std
add
pop
imul
add
cmp
cld
lea
movsl
hlt
jge
dec
in
fcmovb
or
dec
adcl
jg
jmp
sub
mov
repnz
jg
push
cwtl
xor
xchg
xchg
fstps
pop
xchg
fwait
ds
loopne
ss
push
or
insb
ja
pop
enter
cmp
mov
imul
test
mov
mov
jbe
pop
add
out
ficompl
pusha
jno
or
stos
inc
sub
idivb
inc
ficoml
test
cmp
je
popa
fcomp
or
in
es
test
jne
inc
and
or
pop
fs
or
pop
cmp
fsubrs
inc
sti
loopne
arpl
std
pushf
sbb
xor
ret
xor
sarb
pop
shl
std
test
cwtl
aad
push
jl
ss
outsb
fistpll
out
idivl
sti
call
cmp
lret
xor
sbb
mov
testl
hlt
lods
and
push
xorb
jg
jg
pop
rclb
mov
loopne
arpl
fldenv
jmp
imul
adc
imul
inc
xchg
ss
sbb
sbb
aam
into
and
sarb
inc
cmp
enter
push
push
sbb
cmp
cmpsb
leave
push
popl
xorb
cmp
cmp
outsl
clc
stc
add
xor
pop
mov
out
cld
jecxz
leave
outsb
pop
bound
mov
out
and
popl
add
xchg
jg
pop
sub
sub
cmc
adc
mov
enter
fdivrl
and
mov
jmp
cmpl
mov
inc
pusha
jmp
push
das
pop
adcl
or
and
xor
mov
adcl
push
add
jmp
movl
mov
mov
movl
inc
cmp
jb
mov
andl
xor
add
movl
jmp
and
mov
neg
mov
andl
xor
movl
mov
andl
add
movzwl
xorl
mov
mov
jmp
lea
sub
stos
test
cmpb
push
addl
xchg
mov
cmp
mov
xchg
ja
ja
xchg
mov
dec
push
in
cmp
call
adc
pop
je
cmpsb
jno
les
or
lods
add
fcmovnu
jb
inc
mov
inc
xchg
out
scas
into
add
clc
or
jnp
sarb
pop
inc
dec
or
addr16
lret
inc
push
mov
pop
cs
pop
scas
cmc
xor
fs
int3
hlt
sarl
shll
je
inc
pusha
xchg
and
jmp
pop
jno
fistl
sbb
adc
lcall
xchg
mov
cmp
sti
int
xor
push
pop
popa
leave
jbe
lret
call
out
push
adc
sub
lcall
add
mov
das
pop
push
andl
cmp
inc
sbb
mov
notb
mov
cld
xor
pop
push
push
mov
dec
cmp
or
pop
popa
iret
jle
sbb
xorb
in
xchg
mov
inc
test
pop
add
pop
repnz
jge
lret
sbb
cmp
movsb
cmpsl
xchg
andb
aam
fisubrs
mov
ss
jbe
adc
mov
jecxz
lds
xor
mov
xchg
push
pop
and
fmuls
add
and
test
dec
cmpsl
lret
sub
mov
jb
subb
dec
es
and
mov
jp
imul
fistpll
cmpsl
mov
cmc
scas
daa
push
cmpsb
mov
rolb
and
cli
jmp
or
les
clc
mov
push
mov
or
add
and
lret
movsl
arpl
xlat
mov
je
stos
push
bound
jp
xchg
mov
and
popa
xor
mov
int
fsubrs
das
sbb
ret
ljmp
stos
negb
or
out
mov
sti
or
addr16
sub
fildl
pop
test
mov
inc
fistl
or
ja
or
outsl
insl
cs
popa
fstpt
push
push
in
sub
lods
repz
inc
shll
mov
mov
adc
xchg
fimull
test
add
jno
push
leave
ss
mov
sub
bound
popa
adc
bound
loope
xchg
add
stos
imull
imul
jp
add
and
jg
loop
negl
xchg
xchg
addr16
mov
mov
push
mov
xchg
adc
xchg
cwtl
incb
xchg
adc
and
sbb
cmpsb
dec
arpl
mov
in
popw
pop
mov
aad
jne
in
mov
xchg
leave
xchg
add
movsb
aam
push
fdivs
sbb
sti
hlt
or
xor
push
adc
sbb
add
cmp
mov
dec
and
ds
testl
xchg
mov
pop
sbb
xchg
pop
jecxz
adc
adc
mov
addr16
rorb
shll
sbb
adc
pop
jmp
push
and
jno
inc
stos
mul
mov
dec
xor
push
jbe
xlat
in
movsl
leave
mov
outsl
pop
pop
ret
stc
cmp
addr16
bound
jmp
jo
xor
or
lcall
js
fidivrs
int3
pop
inc
in
inc
popf
jnp
mov
mov
loop
inc
pop
xchg
je
out
adc
insb
xor
loopne
fidivrl
cmp
stc
loope
mov
je
add
stc
ret
lods
inc
movsb
jmp
mov
sub
push
push
loop
popf
dec
sarb
xchg
pop
mov
sbb
mov
xchg
sub
lock
in
adc
leave
and
inc
push
cmp
mov
or
clc
lds
cmp
xor
mov
mov
in
add
add
pushl
sarl
push
lods
mov
xchg
cmovl
or
lret
ret
jecxz
fwait
xchg
aaa
jecxz
arpl
mov
and
icebp
aaa
ret
aam
and
imul
cld
mov
pop
std
rcll
rcr
in
pop
loopne
xchg
xor
and
repz
sarl
cmc
xchg
lods
jnp
je
repz
cmpsl
and
cltd
push
and
test
movsl
stc
xlat
dec
or
push
mov
xchg
push
popa
jns
and
jp
mov
xchg
mov
popa
xchg
or
in
jae
xchg
inc
push
xor
shrb
lret
jge
add
push
mov
sahf
mov
arpl
inc
cmp
xchg
dec
sbb
or
inc
mov
push
or
pop
ret
orl
movsl
xchg
dec
out
sub
push
pop
cmp
out
xchg
out
mov
dec
adc
mov
dec
mov
push
or
int3
mov
scas
fs
xchg
rcr
xchg
lahf
push
mov
gs
imul
or
popf
out
xchg
jne
and
ret
fldenv
mov
dec
adc
jmp
sahf
jne
lods
cs
jg
mov
ja
push
loop
jnp
fcomip
enter
jl
and
ret
fisubs
out
jae
and
cltd
jnp
ljmp
jns
fidivl
jne
mov
add
aad
jno
rcl
jge
loope
mov
push
fdivs
mov
adc
fisubs
andl
inc
pop
gs
ja
lret
daa
gs
xor
rorl
push
lret
fnstenv
jmp
or
aad
add
scas
outsb
push
push
or
int
pop
dec
dec
jg
bound
imul
inc
inc
repz
daa
xor
mov
sbb
inc
popf
daa
or
out
outsl
imul
mov
movsb
jns
xor
and
jmp
adc
cltd
sub
sub
push
mov
clc
xor
xchg
xchg
or
ficoms
incb
call
out
rorl
add
sbb
or
or
or
adc
inc
cmp
cmpsl
popa
mov
push
push
es
cmp
xlat
mov
pop
pop
rorl
fcoml
mov
dec
pop
sarl
fdivrs
cmp
test
pop
add
pop
adc
fdivs
mov
ret
inc
xor
xlat
mov
xchg
xchg
jne
call
imul
or
in
bound
leave
addr16
int3
add
pop
jp
push
dec
xchg
fcoml
mov
fsubl
div
ss
jp
inc
ljmp
mov
xor
mov
cmp
das
cmpsb
or
in
pop
mov
shrl
lock
inc
outsl
pop
cmp
out
push
stos
clc
add
fwait
nop
inc
fiadds
fists
add
mov
cmp
ret
jo
das
add
cli
inc
xchg
fisttps
push
mov
ja
ret
cmp
mov
push
xorl
out
pop
out
cli
lret
adc
out
out
loope
imul
pop
mov
jmp
mov
rorl
dec
std
push
mov
gs
push
push
and
push
push
les
popa
in
mov
mov
cmp
out
or
js
dec
and
cmp
test
shrl
or
in
movsb
adc
and
inc
in
push
mov
jae
leave
mov
mov
pop
mov
shrb
insb
mov
imul
mov
xlat
negl
arpl
cmp
inc
ror
je
loop
loop
ret
scas
ja
hlt
add
xchg
push
sub
jo
mov
popf
repz
adc
jno
insl
rol
add
mov
aad
jnp
iret
roll
addr16
dec
outsl
out
and
test
xor
fs
jl
sbb
cmpsb
sarb
out
shlb
add
mov
aas
dec
adc
jns
or
mov
sub
loope
xor
out
push
and
ss
push
adc
mov
ljmp
out
sbb
rorb
pop
jle
ds
adc
xchg
jae
inc
jecxz
outsl
iret
cwtl
test
stc
jb
xchg
cwtl
addr16
or
loopne
lock
cmp
mov
jne
data16
sub
movsb
aas
mov
adc
mov
jns
inc
nop
loop
xchg
mov
and
fwait
jle
and
mov
xchg
repz
insb
mov
cmc
out
push
mov
andl
sub
dec
pop
pop
cmp
inc
ja
adc
fwait
mov
rcrl
sbb
adcb
ja
shlb
mov
sub
repz
inc
mov
xchg
jg
pop
cmp
movsl
sub
push
shll
inc
mov
std
lahf
rep
cmp
andl
xchg
adc
movsl
cli
aas
dec
mov
push
jo
loopne
pop
movsl
popa
mov
adc
jl
mov
jb
cs
pop
jnp
jne
inc
sahf
mov
mov
cmpsb
xchg
mov
lahf
cltd
xchg
inc
inc
pop
cli
ja
inc
stos
bound
push
lret
pop
ja
call
orb
cltd
push
cmp
push
mov
pop
or
in
xlat
iret
pop
and
jb
mov
add
cs
adc
jl
mov
sbb
adc
mov
jbe
push
or
leave
insl
int3
inc
sub
fildll
push
jmp
leave
sub
push
or
loopne
xchg
push
xchg
and
aad
jp
sbb
dec
int3
fidivrs
sti
nop
mov
or
arpl
int3
fs
mov
add
jle
ficomps
cmp
xor
fsts
inc
rdpmc
test
push
push
jge
jae
jbe
dec
mov
cld
sub
xor
mov
dec
cld
hlt
testb
pop
dec
pop
push
and
hlt
pusha
ret
jne
aas
cmp
pop
cmc
imul
and
jo
cmp
fsubrs
std
or
add
xchg
push
add
int
dec
in
inc
lods
xor
xor
bound
xchg
sbb
xchg
cmpl
fldcw
arpl
int
adc
inc
xor
push
leave
mov
int
std
mov
jno
xor
xlat
and
andl
add
mov
inc
into
or
or
jge
mov
rolb
pop
mov
inc
aad
inc
pushf
sbb
arpl
jmp
pop
lea
dec
rolb
pop
in
fadds
jmp
pop
xchg
push
fs
cmpsl
addl
les
lods
push
jne
push
cs
pop
jge
pop
fcoml
pop
outsl
inc
jae
cwtl
ret
pop
icebp
in
adc
xchg
loopne
and
sub
xor
mov
daa
bound
cmpsb
fwait
dec
clc
movsb
jmp
std
mov
cmpl
fsubr
sub
pop
jmp
aaa
aas
rcrl
and
jg
inc
sbbl
push
push
test
cmp
or
inc
call
cmp
push
push
js
ja
sub
push
mov
fisubrl
push
adc
xor
and
pop
jno
fstpt
jecxz
aam
push
iret
jl
xor
test
repz
jge
mov
mov
aam
cmp
mov
movsb
pop
adc
jmp
mov
push
lea
call
mov
mov
sbb
dec
jns
add
insb
and
mov
xor
add
insl
fincstp
or
das
push
and
jecxz
mov
xchg
or
inc
sub
mov
aad
pop
cmpsl
or
or
sbb
movsl
fisubrs
loopne
lahf
es
push
mov
sub
addr16
jle
xlat
dec
movsb
shll
push
and
adc
cmp
pop
xlat
aad
and
or
dec
int3
jno
out
xlat
mov
out
adc
mov
pop
mov
or
enter
sbb
in
inc
pop
sbb
push
adc
mov
cli
fucom
push
inc
sbb
fcomps
add
push
imulb
aam
inc
dec
nop
out
jb
add
xor
test
and
inc
lock
xchg
imul
sub
cmp
adc
or
test
jo
loop
sub
adc
push
test
sbb
adc
lahf
cmp
adc
retw
call
jl
mov
or
push
xor
daa
pop
es
fbstp
adc
or
cmpl
inc
mov
ret
push
jl
pop
loopne
loopne
sbbb
jnp
mov
sbb
adc
repz
rol
out
jnp
jle
hlt
cmp
scas
jp
jmp
xchg
pushf
aaa
insb
ret
jbe
dec
cmp
leave
push
sub
mov
add
mov
stos
and
movsl
loop
outsl
adc
or
gs
mov
push
jns
sbb
cmp
inc
mov
push
sub
repnz
shll
and
faddp
mov
mov
out
fldenv
push
ja
nop
shl
popa
xchg
aaa
mov
lds
inc
pop
clc
loopne
and
fisubs
popa
es
mov
sbb
roll
or
xchg
mov
push
pop
add
sti
inc
xor
insb
jne
xchg
pop
mov
ret
jle
pop
imul
fdivr
ljmp
outsl
sub
fdivrl
imul
xchg
pushf
and
xor
jle
scas
bound
add
icebp
pusha
inc
insl
out
mov
jns
mov
cld
int3
out
rcll
lcall
repnz
inc
mov
cltd
mov
jnp
pop
aam
and
lods
dec
lods
and
outsb
pop
mov
xor
and
push
push
dec
lods
mov
jmp
in
roll
fwait
add
int3
in
out
xor
jmp
icebp
mov
cli
aad
ljmp
jns
inc
sbb
xor
out
mov
in
movsb
adc
push
pop
and
jp
lahf
add
mov
iret
inc
pop
pop
in
push
jl
icebp
sbb
ret
sbb
dec
cltd
hlt
aaa
int3
sbb
lahf
sbb
lock
mov
add
inc
cmp
jns
lods
sbb
dec
shll
insl
subb
sbb
lret
jecxz
add
lea
xchg
cmp
jae
mov
inc
dec
enter
ret
mov
pop
scas
xchg
nop
andl
push
pusha
fscale
in
out
and
int3
add
adc
jmp
ficoms
repnz
push
call
loop
mov
and
lds
repz
sub
ds
leave
out
insl
cs
or
movsb
fcomip
mov
add
dec
inc
jecxz
icebp
xor
test
xchg
popa
mov
cld
lods
jle
mov
cmc
jmp
es
int3
and
dec
jge
in
xchg
fistpl
enter
add
mov
sar
je
pop
lods
pop
clc
cmc
push
ja
xor
and
jnp
orb
sub
jp
outsb
pop
std
repnz
dec
arpl
out
mov
clc
sbb
xchg
sbb
pop
cmp
jbe
lock
adc
mov
shl
push
add
sub
movsb
mov
popa
je
xorb
jbe
mov
stos
je
xchg
icebp
inc
sbb
inc
stc
pop
aam
dec
outsb
mov
dec
enter
negb
xchg
adc
xchg
jg
jb
fists
cmpsb
mov
mov
jns
fidivrs
pop
inc
mov
fucomi
push
jne
xchg
jecxz
sbb
push
sbb
cld
das
lock
cli
aam
mov
ret
fdivrl
sub
jle
bound
loop
iret
mov
mov
xchg
push
pop
cmp
popf
push
xchg
movsb
dec
xlat
sub
sub
inc
mov
adc
jbe
jnp
xlat
jp
int3
cmp
pop
push
test
or
lahf
or
addr16
data16
xlat
push
cs
or
stos
sub
xor
sbb
xor
mov
test
aad
insl
mov
adc
dec
mov
jb
add
aam
inc
xlat
mov
adc
pop
loope
jge
mov
shl
fnstcw
xchg
inc
mov
leave
popf
lds
xchg
repnz
and
xor
mov
cmp
sti
mov
mov
xor
push
sub
adcb
xchg
mov
add
sub
mov
test
jae
mov
ja
push
loopne
ror
out
enter
sub
cltd
mov
push
push
mov
jge
daa
iret
inc
fadd
push
dec
adc
inc
leave
arpl
or
push
push
cmpsl
mov
in
daa
jle
dec
xor
dec
mov
dec
jp
fidivrs
or
test
adc
xor
inc
or
cltd
and
ja
adc
sub
cmpsl
je
fldt
popf
out
pop
ret
dec
and
adc
pop
pop
sbb
dec
cmpsl
pop
les
cmp
icebp
int
dec
sub
lahf
incl
sub
adc
push
jne
clc
xchg
je
gs
mov
pusha
pop
test
xchg
fs
iret
sysret
push
mov
lahf
cmp
fsts
sahf
push
jae
or
dec
inc
mov
test
aad
sub
out
aad
cmp
jp
sbb
xchg
mov
jo
jge
sub
push
mov
repz
cwtl
mov
or
leave
daa
sub
inc
bound
rcr
jo
lcall
sub
loope
jg
shrl
push
rcrb
xor
sbb
idiv
fiaddl
out
sarl
xchg
leave
push
shrl
clc
and
movsl
xor
jbe
in
imul
scas
ja
and
inc
mov
into
pop
dec
pop
or
and
out
jmp
and
outsl
out
mov
push
mov
add
outsb
data16
xor
cmp
xlat
xor
test
sub
cmp
and
mov
loope
adc
dec
mov
rolb
ss
int
mov
mov
icebp
orl
mov
or
cmpsb
xorb
iret
sahf
push
fcompl
imul
pop
ljmp
mov
sub
and
cmp
pop
cmp
out
insl
sub
pop
dec
inc
push
xchg
mov
cs
mov
adc
xor
lds
mov
pop
ja
push
xorl
inc
xor
mov
lock
test
adc
popl
push
xor
popa
mov
movb
mov
inc
dec
arpl
cmp
test
lock
test
inc
inc
repz
fldt
sbb
sub
mov
ljmp
adc
jmp
test
imulb
les
and
call
cs
mov
sub
cmp
mov
and
cmpb
repz
mov
mov
jno
mov
movsl
mov
outsb
pop
es
pop
shr
inc
mov
jnp
cmpsl
loope
add
cmpsb
jno
arpl
cmp
sahf
in
push
adc
loopne
dec
loope
and
lods
sbb
xor
and
pop
inc
loop
jge
dec
add
daa
pop
sbb
daa
mov
addl
mov
mov
lret
jge
mov
js
and
or
es
inc
push
into
mov
mul
push
in
ds
adc
int3
xchg
bound
repnz
and
jmp
lea
dec
jl
cmpxchg
xor
adc
push
pop
jecxz
mov
pop
push
stos
mov
cmc
enter
push
and
sbb
fidivrs
push
xchg
mov
mov
sub
push
xchg
sub
pop
mov
jns
data16
mov
and
pop
add
mov
jbe
sub
xchg
lret
add
mov
xor
ret
mov
aam
ret
cld
cmp
aam
movsl
mov
fldl
and
adc
mov
or
rcrb
sub
xchg
repnz
lods
jno
insb
push
popa
mov
clc
cld
sbbl
xchg
inc
mov
xchg
mov
or
mov
leave
cmp
pop
mov
mov
push
jno
loopne
add
in
cwtl
push
insl
hlt
lock
mov
ljmp
add
jp
fidivrs
gs
cmc
xchg
mov
mov
fadds
lcall
outsl
pop
aas
lcall
sti
jnp
outsl
pop
daa
jecxz
std
push
mov
mov
pop
mov
cmpsl
int
mov
push
sbb
cmp
jecxz
cmpsl
fisttpll
jl
mov
or
jg
sbb
mov
mov
pop
hlt
shl
enter
xor
mov
repnz
js
sarb
outsb
out
fs
adcl
push
mov
mov
decb
scas
sbbb
test
out
pop
xchg
lock
sarl
pop
adc
mov
fisttpl
ja
jnp
test
xor
sahf
add
dec
xor
xchg
in
mov
pop
mov
or
adc
sub
loope
test
aad
loope
cmp
fiaddl
cmovne
add
push
dec
mov
jae
add
cmp
dec
mov
stos
es
cmp
dec
inc
push
xchg
shll
cmp
xlat
mov
outsb
adc
lahf
std
inc
cltd
xchg
mov
cmp
xor
fidivl
and
fldenv
mov
out
and
xchg
into
lret
ljmp
mov
cmp
push
fisubs
jb
out
inc
out
jmp
sbb
ret
out
add
or
cmp
lahf
stc
and
int3
ljmp
in
rorb
mov
movsl
mov
dec
mov
sarb
dec
rolb
cmp
dec
cmp
and
cmp
std
pop
mov
nop
mov
inc
fdivrs
pop
jo
dec
leave
and
std
or
fsubl
or
and
mov
outsl
jae
cmc
inc
jo
adc
and
mov
mov
jl
mov
je
mov
test
jp
pop
enter
inc
ret
mov
je
xlat
mull
inc
cmpsl
addr16
dec
sub
psubusb
inc
test
imul
adc
push
das
test
adc
add
fdiv
and
xor
and
fldcw
push
adc
hlt
stc
sub
scas
fidivrs
addb
push
out
dec
cmovge
dec
push
cmp
daa
clc
pop
cmpsb
cmpb
pop
pop
mov
insb
dec
jae
jno
jg
mov
shlb
pop
mov
lods
jno
aad
rolb
xchg
imul
lock
movsl
mov
cvtps2pd
sub
xor
enter
sarl
or
mov
inc
imulb
repnz
push
or
sub
jnp
xor
shr
or
es
jle
enter
lods
mov
mov
and
xor
test
cltd
jno
dec
sbb
outsb
shr
sub
orl
clc
adc
cltd
outsb
shr
jecxz
pop
jmp
icebp
mov
fnstcw
ds
mov
xchg
mov
sbb
xor
ret
push
sbb
add
push
arpl
cmpsl
lds
das
xchg
or
ret
mov
icebp
push
mov
imul
cmpb
arpl
divl
sbb
push
outsl
xor
cwtl
mov
inc
ds
fistl
pop
scas
push
fnsave
popa
cmpsb
mov
mov
mov
pop
cmp
xchg
addr16
sbb
sub
pop
mov
mov
mov
les
jbe
stos
fsubrl
sahf
inc
popl
push
out
imul
sbb
lods
mov
sbb
push
xchg
push
push
scas
sub
cld
add
ds
stos
xchg
aad
and
or
fsubl
jg
mov
inc
and
or
pop
push
fidivs
dec
scas
xchg
or
icebp
xor
inc
lret
and
mov
inc
inc
jnp
out
cmp
stc
pop
sar
xor
sarl
fldenv
push
xchg
add
and
enter
adc
iret
arpl
fdivrs
scas
int3
adc
mov
cld
cld
jnp
xchg
mov
xchg
xchg
mov
push
dec
cmp
pusha
mov
or
cmp
imul
pop
loop
inc
inc
les
xor
int3
jle
jle
movsl
aaa
sar
dec
jge
push
aas
pop
or
rorb
or
push
lahf
cmp
out
lahf
insl
jo
aas
mov
add
mov
sub
stos
mov
sbb
mov
mov
jnp
cmp
insb
ljmp
and
pop
daa
mov
pop
add
enter
mov
dec
cmpsl
cmc
ljmp
lret
xor
test
sbb
sub
jbe
sti
cmp
cmpsb
xor
sbb
cld
add
gs
daa
cld
xchg
add
mov
cmp
rcrb
mov
or
repz
sar
jno
mov
inc
lahf
mov
lret
add
push
mov
imul
xor
xor
rcll
pop
stc
clc
add
mov
int3
rorl
in
scas
fcomps
add
ficoms
push
aaa
pop
out
leave
daa
leave
call
mov
add
rorb
inc
cmp
xchg
sarb
sub
push
in
add
fdivr
lret
ljmp
mov
mov
cli
ja
push
into
es
mov
testb
or
data16
icebp
sub
mov
sbb
lret
dec
push
popa
xchg
insl
mov
or
out
pop
adc
add
shl
jle
mov
insb
sbb
mov
inc
outsl
punpckhwd
rclb
mull
rclb
mov
sub
adc
jns
out
lahf
mov
mov
stc
mov
xchg
int
cld
pop
mov
or
int
fs
std
add
lret
rorb
test
add
ja
jns
cmp
adc
ja
stos
inc
imull
and
je
jne
subl
mov
cmpsb
fiaddl
xor
call
dec
scas
test
cld
popf
sahf
mov
adc
out
outsl
mov
mov
inc
test
xchg
fstpt
jl
push
mov
lret
cmc
mov
inc
roll
pop
add
pop
addl
cmc
fwait
pop
iret
sbb
and
sub
push
pop
popf
jne
ret
dec
xchg
shrb
dec
cmc
bnd
cmp
adc
mov
sbb
inc
mov
lret
loopne
sbb
xchg
arpl
scas
inc
jmp
shrb
mov
popa
shlb
mov
ljmp
sub
test
mov
pop
out
sub
push
stos
mov
xchg
or
mov
insb
rep
stc
push
sub
or
jo
mov
or
je
xchg
push
gs
data16
xchg
movsb
mov
pushf
pop
clc
xor
and
jg
inc
pextrw
sbb
out
pop
dec
push
test
data16
xchg
pusha
movsb
cwtl
data16
lahf
inc
push
push
dec
dec
sti
outsb
inc
movsb
addl
cmp
sti
dec
jb
pop
or
pop
call
pop
scas
js
hlt
mov
ss
stos
push
addb
ret
mov
sbb
movsl
pop
mov
lret
mov
jne
jmp
movsl
add
mov
imul
mov
scas
dec
lock
sbbl
dec
cmp
jb
fstpl
mov
mov
inc
mov
pop
push
mov
adc
sub
ret
gs
inc
push
and
cmpsb
adc
ja
adcb
inc
mov
sbb
xlat
xchg
and
movsb
repz
movsl
or
aam
sbb
add
mov
shll
icebp
mov
jle
cmp
pop
dec
cmpsl
sbb
lods
adc
fcmovnb
and
popa
int3
out
data16
mov
flds
dec
sub
int
pop
xor
in
mov
add
xchg
pop
mov
in
sub
lds
push
jecxz
add
orb
sbb
push
cmc
sti
lret
call
add
outsl
add
or
jmp
loopne
imul
push
cli
fldt
cmpb
repz
sub
sub
sbb
jno
sub
outsl
xchg
sub
shll
fildl
fistpl
test
lods
fwait
ja
in
jae
pop
fucomi
iret
addr16
xor
xor
adc
out
or
outsl
movsb
fs
xchg
mov
sysexit
push
call
inc
cld
xlat
ljmp
fucomi
cmc
cmp
out
lahf
push
outsb
add
pop
xchg
outsb
mov
cmpsl
adc
xchg
outsb
movsb
nop
push
cwtl
sbb
adc
cmpsb
sbb
mov
jae
jge
mov
sbb
mov
test
inc
pusha
adc
push
lds
stos
enter
lret
mov
or
mov
xchg
lret
jmp
daa
outsb
mov
aad
cmpsb
call
leave
fnsave
enter
je
jae
adc
adc
jns
add
or
out
add
inc
in
cmp
dec
and
mov
dec
sbb
stos
ja
mov
daa
sti
sub
jnp
dec
xor
adc
arpl
ja
pop
mov
add
insl
push
mov
fistpll
xchg
or
js
das
mov
testl
in
push
jbe
sbb
xor
out
or
daa
mov
pop
call
pop
mov
stc
or
pop
aas
imul
jnp
or
lods
sarl
sbb
ja
jecxz
mov
mov
data16
cmp
aaa
cs
jns
adc
mov
jp
repnz
add
push
push
mov
loope
das
aad
call
xorb
xor
mov
shll
roll
gs
outsl
or
or
nop
cmp
pop
sub
cltd
and
test
mov
xchg
in
repnz
xor
mov
sbb
lods
cmpsb
jns
lds
lcall
pop
daa
adc
mov
pop
and
mov
jmp
pop
jne
out
push
test
clc
pusha
xchg
jne
mov
push
mov
dec
mov
dec
mov
arpl
cltd
dec
sub
jae
push
xor
cs
jl
sub
cmp
shrb
test
push
hlt
inc
push
ud0
mov
or
lods
sbb
add
std
popf
push
xchg
and
cs
inc
mov
sahf
cmc
and
mov
aam
mov
fildl
push
sub
call
lcall
insb
dec
sti
dec
pop
add
lahf
jns
push
cmp
hlt
mov
xchg
push
loop
loope
repnz
sbb
add
push
inc
xlat
pop
daa
add
ljmp
xor
mov
xor
sub
cwtl
dec
shll
mov
push
pop
cltd
xchg
outsb
ret
fidivs
jle
ljmp
xor
jle
jle
movzwl
xorl
xor
movl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
push
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
xor
add
add
xor
mov
sbb
mov
xor
xor
add
movl
cmpl
je
cmpl
jbe
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
movl
movl
sbb
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
add
mov
sub
mov
xor
xor
mov
adc
add
mov
mov
mov
movl
je
mov
mov
negl
xor
xor
sub
xor
sub
addl
xor
orl
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
mov
adcl
add
imul
mov
or
mov
mov
mov
sub
xor
mov
mov
xorl
add
andl
or
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
subl
add
xor
xorl
mov
sbbl
mov
adc
mov
sbbl
add
addl
and
movzwl
xor
mov
add
mov
or
mov
lea
xorl
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
sub
add
mov
mov
xor
mov
mov
xor
add
jne
movl
jmp
mov
xor
or
xor
mov
sub
xor
sbb
mov
jmp
out
dec
mov
stos
xchg
add
dec
or
inc
addb
adc
scas
jb
cmpsl
mov
mov
sti
hlt
lret
add
lods
movsl
and
je
xchg
cmp
sub
adc
sub
jo
insb
fistpll
pop
add
xlat
jp
stc
int3
sbb
inc
outsb
push
mull
xchg
xchg
dec
aad
lcall
pop
stos
aam
cld
dec
mov
std
jle
add
lock
call
mov
ret
dec
iret
hlt
jns
dec
mov
jbe
sub
fisubrl
data16
mov
xchg
in
mov
js
idivl
loopne
add
jo
pop
sub
aad
shr
dec
pop
pop
mov
xlat
xchg
cs
sbb
sbb
xchg
pop
das
flds
into
xor
jg
and
out
adc
add
pop
lea
xchg
lds
or
lds
pushf
notb
push
cmp
scas
inc
es
xchg
mov
push
stos
fcmovu
jmp
jne
aaa
enter
cltd
pop
jo
push
adc
test
fwait
ret
ret
fldt
cltd
fdivs
jbe
sub
mov
fisttpll
ficoms
fidivrl
aad
bound
inc
mov
je
loopne,pt
mov
xor
adc
mov
xchg
jle
stos
pop
xor
outsl
mov
ljmp
push
shll
pushf
mov
pop
les
dec
jp
jl
repz
aam
xor
lock
jns
push
mov
adc
mov
incb
push
mov
and
stos
push
aas
mov
fnstenv
decl
scas
push
xchg
pop
mov
lods
gs
es
mov
sahf
test
nop
pop
int3
gs
lock
cld
xor
lods
fcmovbe
lret
fdivrs
mov
fldl
pusha
fwait
cmp
jne
sub
out
dec
and
iret
sub
xchg
sbb
cld
mov
push
or
pop
add
pop
xor
xor
daa
fcmove
test
mov
daa
push
cwtl
cmpsb
pushf
shrl
test
nop
mov
lret
mov
xchg
dec
push
jne
outsb
dec
rorl
cld
mov
pop
inc
lock
in
aad
pop
xchg
adc
xor
loop
dec
or
jmp
and
cwtl
mov
mov
into
insb
cmpsl
dec
xchg
popl
and
test
mov
jb
pushf
mov
testl
dec
dec
out
lds
mov
cmp
cmpsl
pop
repnz
test
mov
fwait
shl
inc
inc
xor
cmp
pop
incl
pop
fisttpll
ret
push
or
mov
cmp
push
arpl
sbb
mov
inc
push
cmp
nop
push
enter
loop
lds
cmp
push
sti
mov
push
cmp
out
fildll
movsl
lret
cli
sub
pop
xchg
clc
call
sbb
mov
push
push
ror
mov
out
mov
jecxz
push
push
call
dec
aam
jne
stos
inc
movsb
mov
pop
test
push
inc
arpl
dec
and
mov
dec
and
lea
jns
inc
mov
popf
sbb
outsl
mov
sbb
lea
lret
cmp
aam
leave
mov
jl
in
sti
jne
testl
pop
jle
rclb
jmp
rorl
adc
cmpsl
ja
pop
in
cltd
jo
or
mov
cmp
add
fcomip
mov
mov
outsl
sbb
mov
outsl
xchg
hlt
or
lods
int
int3
and
out
popa
cld
sbb
shrl
pop
pop
mov
adc
dec
cs
inc
shll
test
inc
push
fld
inc
push
aam
je
jl
sub
pop
arpl
inc
mov
cmpsb
fcompl
jbe
shll
iret
mov
fisubrs
sbb
mov
les
movsl
push
jmp
add
or
sub
or
pop
xchg
pop
dec
es
outsb
scas
cmp
xchg
jl
sarb
fwait
mov
test
xchg
sub
lock
xchg
pop
mov
pop
pop
mov
rorl
sub
dec
sbb
and
cmp
lea
lahf
mov
add
rolb
and
jae
dec
fcom
push
xchg
scas
sti
cld
push
cwtl
cwtl
push
dec
lcall
aaa
jbe
cmpsb
pop
push
cmp
xor
inc
data16
outsl
sahf
push
push
pop
xor
fs
test
test
push
mov
shlb
loopne
fsubrp
lcall
imul
inc
sub
ret
icebp
popf
sti
js
sub
movsb
push
xor
loope
adc
mov
jne
jae
jg
inc
mov
loope
pop
fildl
test
fidivl
ss
mov
mov
test
xchg
pop
shlb
or
mov
enter
xrelease
adc
inc
mov
mov
mov
or
push
shlb
sub
mov
mov
bound
test
bound
fwait
xlat
jle
andb
or
xlat
test
in
xchg
dec
mov
cmp
lret
jmp
stos
sbb
adc
jg
cmp
loopne
mov
pop
and
dec
loop
mov
dec
rorl
pop
xor
jmp
mov
and
adc
hlt
inc
in
testb
testl
rep
push
call
insb
xor
gs
push
mov
inc
test
push
cli
cmp
aad
shl
pop
sbb
ljmp
pop
gs
mov
xchg
sti
xadd
sbb
into
sub
pop
jl
xchg
jbe
insb
cltd
stc
sub
sbb
mov
lds
dec
call
mov
pop
inc
mov
mov
mov
in
ffreep
ds
test
test
jp
xchg
push
dec
hlt
dec
sbb
es
mov
mov
sub
hlt
scas
lret
jl
lcall
add
sbb
inc
leave
repnz
jns
inc
shlb
stos
fcoml
jmp
clc
and
call
sub
pop
inc
pop
test
mov
cwtl
out
movsl
cmp
push
push
xor
pop
das
int
or
cli
filds
loopne
lds
or
in
ja
add
dec
push
popf
data16
stos
lods
loopne
repz
push
dec
cli
int3
notl
or
lods
inc
sbb
popf
jae
pop
lock
pop
roll
stc
xchg
inc
daa
jne
xor
inc
ret
sbb
xchg
sub
cmp
nop
ljmp
popf
xchg
jg
repnz
in
out
jle
jg
cwtl
or
gs
out
testb
lock
js
data16
jecxz
sub
sub
test
mov
lret
ss
inc
pop
ret
pop
popf
fistps
adc
push
push
jns
and
add
aas
push
adcb
movsb
aaa
xchg
xlat
jno
lea
mov
mov
adc
daa
test
adc
aas
add
aad
add
and
orb
popl
jno
mov
lret
in
pop
fbld
and
inc
mov
jbe
pop
or
clc
or
sbbb
xchg
imul
jb
jmp
lcall
cwtl
dec
outsl
test
inc
mov
mov
negl
fscale
lea
roll
dec
push
inc
sub
and
or
pop
in
sub
test
pop
jae
xor
sbb
mov
jge
jb
mov
stos
sub
mov
and
pop
push
rcll
jg
xchg
lret
out
cwtl
push
pop
lock
push
iret
xchg
test
and
add
sbb
loop
lret
mov
xchg
inc
stos
jo
mov
sbb
adc
ss
gs
cmp
jecxz
lock
filds
jg
int
mov
push
mov
outsb
xlat
or
push
rcrb
call
adc
xlat
cmp
clc
outsl
xchg
daa
dec
mov
aaa
sub
or
mov
inc
cld
dec
fidivl
movsl
fdivs
in
pop
inc
jp
inc
das
mov
je
insb
pop
negl
dec
dec
fisubrs
int3
pop
outsl
push
outsb
push
xorl
sti
clc
lock
insl
shrl
sbb
std
bound
es
ljmp
sub
lret
mov
mov
int3
cli
imul
sub
xchg
cltd
mov
loopne
push
mov
int3
mov
mov
sti
and
fmul
fisttpll
inc
cmp
iret
mov
and
dec
jp
out
and
cmp
aam
jo
cmpsl
daa
jge
adc
lret
fbstp
cmp
or
add
lods
pusha
and
cmpsl
pop
cmp
dec
repz
movsb
popa
test
movsl
mov
sbbb
xlat
stos
and
scas
inc
ljmp
and
cmp
push
xchg
decl
xorl
sti
jbe
adc
movsl
jns
enter
stos
and
ret
arpl
std
sub
pop
stc
xchg
lret
movsb
stos
imul
xchg
clc
jmp
enter
mov
ljmp
cmpsl
fdivl
push
push
test
adc
sub
fstp
pop
jo
loop
dec
stos
push
aas
push
fisubs
fcmovbe
sub
pop
gs
mov
push
lret
outsl
push
pop
out
mov
daa
clc
in
lahf
xchg
cld
imul
int3
jb
add
pop
outsl
cmpsb
rcrb
int3
xor
ljmp
push
xor
xchg
mov
pop
insl
add
xchg
dec
adc
xchg
jp
das
lea
roll
pop
dec
pop
or
xchg
das
xor
sub
mov
lcall
or
loope
xor
outsb
es
adc
lcall
add
std
push
inc
xchg
xor
jae
dec
es
inc
divb
sub
sub
clc
add
lcall
mov
into
lcall
sahf
jp
push
jp,pn
out
adc
pushf
sub
jnp
mov
andnps
push
and
cmp
lds
jae
scas
dec
adc
hlt
pop
je
pop
rcrb
xchg
adc
mov
ljmp
imul
adc
push
cmp
jecxz
xor
or
nop
sub
sub
js
xor
push
test
mov
pop
imul
jecxz
daa
movsl
mov
andb
int3
shrb
lock
in
mov
jmp
inc
inc
mov
adc
mov
mov
addr16
mov
push
mov
ret
test
icebp
sbb
xchg
insl
sub
xor
inc
nop
movsl
sub
in
sarl
stc
jb
lods
ret
mov
icebp
daa
cmpb
inc
xor
jb
aam
je
adc
test
lret
mov
jecxz
push
and
cli
sub
aad
test
into
pop
xchg
les
inc
shll
mov
mov
ss
pop
je
mov
mov
sbb
pop
repnz
gs
jbe
fiaddl
loope
or
push
xchg
jecxz
lret
shll
inc
mov
or
in
jnp
sub
jnp
hlt
lret
sti
lods
ret
je
push
xchg
cs
call
sahf
and
ja
or
sbb
pop
jl
or
or
xchg
cs
sbb
repz
pop
and
mov
cld
movsb
pop
dec
push
add
cmp
andl
mov
xchg
lret
stc
lock
iret
and
scas
fwait
pop
test
aad
test
pop
xchg
xchg
xlat
fs
leave
jns
push
jb
or
sub
pushf
and
or
divb
cli
and
xor
dec
nop
scas
stos
inc
and
fsubs
xor
and
fdivp
cmc
and
cmp
push
rclb
stos
jle
push
arpl
daa
sahf
lods
add
int
push
push
bound
call
leave
push
shrl
mov
arpl
sarl
push
jbe
cltd
xchg
fmul
jb
in
out
push
lock
sahf
adc
inc
inc
in
sarl
add
mov
xchg
xor
xchg
jae
ret
cwtl
mov
inc
ljmp
mov
jecxz
mov
mov
int3
push
mov
xor
xor
mull
out
push
jnp
jns
lods
pop
inc
mov
cltd
jmp
pop
fdivrl
sub
in
mov
dec
jl
dec
ds
ret
enter
xor
repnz
ss
pop
fdivl
sbb
scas
mov
sub
scas
and
push
enter
sub
mov
outsb
sbb
xor
or
sub
inc
in
adc
jecxz
inc
xchg
mov
std
movsb
in
fs
mov
pop
inc
dec
mov
jl
or
aaa
fdivl
popf
adc
push
mov
insb
xlat
pop
sbb
out
mov
xor
ret
push
mov
pusha
sbb
jg
dec
xor
push
std
jno
mov
ja
shrl
mov
stos
leave
push
mov
arpl
or
aam
aam
imul
mov
cmp
inc
aam
movsl
dec
adc
xchg
pop
stos
push
adc
sbb
dec
mov
dec
cmp
lods
pop
push
adc
ficoml
aas
mov
fwait
cli
mov
mov
sbb
icebp
xchg
dec
mov
dec
push
jb
adc
data16
sub
push
dec
cmpsl
add
xchg
mov
mov
mov
dec
inc
sbb
adc
movsb
mov
pop
or
and
add
ret
sbbl
out
lods
jne
mov
insl
shlb
mov
inc
aas
and
subb
xor
or
mov
shlb
sub
mov
sub
xchg
les
pop
mov
mov
incb
push
outsb
mov
xchg
aaa
pop
mov
out
lods
mov
xchg
lods
jns
insl
cltd
aaa
mov
xor
cmp
lcall
mov
movl
sbb
add
pop
scas
xchg
pop
into
fsubr
mov
push
inc
ds
mov
pop
push
clc
xchg
sub
fstps
je
jg
arpl
adc
ljmp
rorb
cmp
sub
mov
jecxz
xchg
mov
sbb
inc
cmp
fwait
or
test
mov
fistpll
std
dec
jo
cmp
jg
xchg
fnop
mov
mov
inc
shl
aad
or
insl
mov
cmp
jb
pop
adc
jge
loopne
out
fcmove
mov
and
and
sbb
icebp
mov
sahf
repnz
add
cmp
pop
subb
outsl
cltd
cld
xor
pop
inc
mov
dec
adc
pop
fldt
cmp
es
pusha
dec
sub
xor
addr16
ficompl
push
inc
cld
push
pop
jp
lods
push
cmp
mov
lea
jmp
divb
jecxz
adc
stc
jge
rcr
cmp
dec
xchg
sbb
cld
push
fnsave
dec
ljmp
inc
sbb
lret
push
repz
cltd
cmp
mov
mov
mov
mov
pop
imull
test
ljmp
xchg
repnz
test
fs
repnz
ret
lret
pop
pop
stos
insl
lods
dec
faddl
out
inc
loopne
mov
mov
sbb
subl
mov
or
xchg
aas
xor
iret
inc
ret
insb
pop
push
mov
int
adc
cmpsl
or
scas
push
aaa
cmp
xchg
jno
xchg
rorb
in
aad
sub
call
in
jne
and
jge
lahf
pop
push
data16
sub
sti
out
push
ss
add
rol
lahf
fsubl
jp
stos
xor
pop
cmp
or
pusha
cmp
mov
jne
inc
cmp
push
sub
rclb
xorb
jmp
add
cmc
jecxz
push
cmpsb
xchg
movsl
into
shll
in
aad
cmp
pop
in
movsl
roll
or
and
les
push
stos
xchg
pop
loopne
jmp
cld
pop
movsb
mov
xchg
test
cmp
push
xchg
aaa
mov
jno
adc
xor
clc
mov
mov
lret
das
jns
mov
dec
and
push
loop
in
orl
dec
xor
icebp
cli
jg
sbb
cmpsl
jbe
cmp
push
add
ds
shrb
xchg
add
mov
or
loop
cmpsl
cld
imul
stos
ffreep
flds
pop
adc
inc
enter
inc
test
adc
xor
push
lock
js
ja
fisttps
orb
pop
push
jmp
pop
daa
sub
jae
in
inc
or
or
sbb
cmp
sbb
push
xchg
fidivrl
mov
iret
aam
cvtps2pd
dec
jp
rorl
cwtl
push
cmpsl
pop
cmpb
fdivrl
lcall
push
test
das
xor
jno
sbb
in
xor
pop
or
cmp
xchg
push
jl
push
xchg
push
lcall
inc
pop
sub
ja
and
in
jne
add
loopne
cli
sbb
out
push
adc
pop
ss
cli
es
std
outsb
mov
inc
pushf
jmp
fildll
mov
dec
cmp
cmp
sbb
xlat
inc
pop
inc
out
repnz
jbe
sub
gs
and
outsl
adc
sahf
pop
std
xchg
xchg
scas
int3
aas
inc
push
arpl
outsb
adc
add
xchg
xor
xchg
xchg
mov
inc
pop
daa
cwtl
mov
imul
insl
int3
push
jmp
popf
xchg
jge
or
add
inc
add
cmp
ss
add
sub
loop
xor
incb
out
add
cli
fimuls
sahf
ficomps
mov
mov
outsb
mov
mov
push
sub
mov
cs
add
sbb
pop
jmp
cwtl
inc
dec
repnz
push
adcl
xor
dec
push
les
in
scas
xor
shll
imul
pop
outsb
bound
movsb
fucomip
aam
in
into
add
cmc
int3
mov
enter
int3
fs
mov
nop
loop
push
pop
repz
scas
test
sahf
outsb
mov
fucomip
xchg
test
lods
xchg
ret
out
adc
aam
test
sub
adc
jo
xchg
push
xor
inc
adc
push
add
rclb
push
xor
and
pop
fcmovb
push
adc
pop
idivb
xchg
pop
xchg
fs
sbb
ss
mov
orl
and
insl
sbb
lcall
mov
sti
inc
mov
or
dec
ljmp
lahf
xchg
and
adc
cmp
mov
mov
imul
andl
lcall
pop
jb
or
add
mov
lret
or
mov
mov
and
lods
lds
add
mov
xchg
mov
cmc
stos
lcall
push
add
sub
add
jp
fstl
push
mov
mov
xchg
shll
mov
dec
rolb
jle
nop
mov
fisubl
jae
and
ret
arpl
in
sub
ja
and
xchg
std
push
lock
test
mov
test
push
add
jg
add
and
cltd
inc
mov
testb
out
outsb
lret
dec
and
adc
sub
imul
stos
or
popf
mov
imul
mov
call
mov
push
xchg
lods
scas
xor
xlat
dec
clc
xchg
pushf
pop
cmp
inc
jo
je
mov
out
or
sbb
sub
add
and
mov
lods
cmpsb
imul
mov
sub
and
push
sub
xor
mov
adc
sbbb
xchg
std
xchg
lahf
into
inc
mov
jae
mov
sbb
add
sub
mov
mov
movsl
jne
jno
pushf
in
clc
imul
nop
loop
add
jg
dec
dec
xchg
cmpb
fisttpll
std
add
outsb
addb
inc
movsl
xchg
cltd
pop
sub
mov
push
push
mov
cs
pop
adc
lds
popa
dec
fsubrl
mov
sbb
addr16
adc
add
out
cmc
repz
mov
adc
loopne,pn
mov
xchg
sub
or
lds
adc
aad
cmp
in
into
adc
inc
xchg
hlt
aas
shlb
mov
cmp
dec
mov
push
call
push
into
fisubrs
dec
push
inc
adc
sbb
adc
out
adc
test
sbb
adc
stc
push
jl
sbb
out
ret
stc
lret
cltd
xchg
test
sub
outsb
ds
in
cli
lods
sbb
push
sub
mov
or
mov
aad
pop
aad
mov
cld
pop
jecxz
add
pop
jle
xchg
sbb
mov
inc
fs
mov
xchg
int3
lret
jge
cmc
jmp
int
ret
ret
cmp
cli
jecxz
in
mov
mov
mov
mov
shrb
imul
inc
mov
push
ret
cs
lret
mov
icebp
fwait
xchg
jge
xor
and
cmp
arpl
mov
xchg
sbb
cld
pushf
rcl
push
jb
pop
mov
shrb
lea
cmp
inc
test
inc
xor
mov
test
and
cmp
inc
sub
pop
xchg
mov
pop
imul
and
nop
leave
jo
xor
sub
stos
push
pop
es
movsb
mov
cmp
and
xor
mov
dec
sarl
mov
shlb
daa
sub
xor
scas
jge
repnz
notb
or
xchg
outsb
mov
gs
outsb
or
cs
inc
js
pop
call
inc
sub
push
mov
jno
pusha
cmp
stos
lret
pop
dec
xchg
push
pushw
das
testb
cmp
daa
xor
sub
sub
cmp
test
jl
enter
test
mov
pop
dec
lret
imul
mov
pop
push
je
stos
mov
stos
xor
or
mov
add
mov
adc
scas
loopne
xchg
std
sbb
cltd
movsb
sub
testl
add
mov
pushf
fucomp
pop
push
push
into
xor
adc
sub
xor
ja
shll
xor
icebp
add
push
pop
mov
test
mov
sub
mov
cli
mov
jmp
push
je
ss
stc
mov
mov
push
push
sbb
jae
pop
jg
testb
lret
lahf
mov
sbb
lahf
inc
or
in
jecxz
insb
sbb
jg
cmp
ret
stos
push
scas
imul
test
push
dec
sub
pushf
in
and
cmpb
jg
mov
iret
or
cmpl
inc
js
stos
mov
std
xor
negl
jne
stos
sti
stos
and
nop
lret
lea
or
lret
cs
addr16
pusha
out
xchg
jno
fdivl
in
aaa
sub
icebp
jp
inc
cld
sub
cmpsl
or
xlat
and
mov
mov
scas
cmc
pop
loopne
and
divl
jl
sbb
insl
cs
inc
inc
cmp
sbb
or
lock
into
call
mov
mov
cmp
pop
das
push
mov
sahf
fbstp
add
mov
ret
mov
push
adcl
aad
or
inc
out
lock
sti
add
andb
stos
js
arpl
cmc
xchg
adc
cmp
movsb
pop
ljmp
imul
fwait
inc
pop
sbb
and
xor
jno
dec
mov
sbb
ds
jmp
insl
rolb
and
jl
aad
mov
pusha
int
or
inc
add
mov
les
jb
dec
mov
sbb
loope
sahf
sti
add
cmp
out
xor
dec
dec
mov
shr
out
fwait
dec
adc
js
xchg
aam
fldenv
mov
shrb
cmp
ss
pop
jae
pop
mov
sti
or
dec
filds
in
push
add
jp
bnd
outsl
and
lret
push
bound
mov
aas
push
leave
mov
dec
sub
stos
sahf
fdivr
jg
in
es
jb
mov
mov
test
andb
sahf
push
push
adc
add
mov
mov
movsl
lea
jnp
xchg
and
mov
pusha
aaa
pushf
scas
gs
pop
mov
aad
mov
rorl
cmp
loope
test
popl
arpl
jae
push
add
cmp
sbb
sub
ret
pop
scas
sbb
insb
cli
adc
jge
sbb
in
pop
std
movsb
push
dec
loopne
and
mov
adc
shl
nop
lods
xchg
rorl
jnp
ja
cltd
xlat
jnp
inc
ja
in
lret
pop
jne
xchg
mov
push
jbe
aad
aad
iret
imull
loope
fisubrs
insb
je
sub
xor
jo
insb
mov
pop
lods
inc
ret
out
inc
xor
lea
cmp
sub
iret
outsl
test
sub
enter
adc
mov
jp
xchg
divl
push
xchg
test
push
sbb
sarb
pop
mov
push
mov
repnz
jl
pop
std
pop
and
outsl
test
jbe
push
lods
xchg
fucom
xor
or
ljmp
push
aas
lret
in
scas
push
pop
or
std
mov
xor
inc
pusha
cli
outsl
jae
in
lea
je
dec
push
test
sub
jp
pop
inc
aad
cmp
cmp
mov
sbb
and
popf
mov
shl
cmpsb
in
cmpsl
rorb
mov
loop
push
fldt
push
sub
push
test
inc
pop
sub
mov
inc
push
push
mov
jmp
daa
push
or
xorl
int
mov
inc
into
pop
inc
aad
mov
imul
jae
pop
hlt
test
into
je
leave
inc
and
cmpsb
push
inc
lds
inc
jle
test
pop
jae
rolb
popf
in
call
int3
or
loop
mov
mov
fisubs
and
ds
push
adc
std
loop
adc
push
push
lds
pop
insb
lret
aam
mov
push
orl
mov
lods
xchg
enter
insb
loop
sarb
adc
mov
lods
loop
ret
int
mov
mov
mov
dec
adc
sub
xlat
jae
fwait
adc
dec
cmp
mov
mov
fisttpl
sub
lahf
lea
shrl
and
mov
cs
lods
jg
dec
xor
and
add
fs
xor
loope
push
jnp
jmp
cmp
mov
repz
mov
mov
lock
icebp
iret
sbbb
pop
mov
lods
dec
fisubl
icebp
cmp
push
mov
bound
aam
push
pop
data16
mov
sbb
outsb
bound
sbb
mov
mov
movb
scas
fdivrl
fbstp
xchg
aad
sarl
mov
enter
pusha
in
jecxz
pop
cmp
jl
sbb
pop
aaa
sub
sub
cs
push
jns
or
cmp
out
and
popf
xor
data16
mov
iret
inc
xor
out
pop
int
pusha
stos
call
movsb
sub
lret
pop
addr16
lods
fidivs
or
daa
cmc
pop
test
mov
icebp
fcomip
jbe
shrb
sub
xor
push
cmp
fisubs
lods
xchg
add
mov
ja
imul
int3
clc
inc
mov
xchg
std
lcall
std
out
xor
rcr
push
sarl
push
cwtl
enter
pop
or
mov
xchg
imull
call
gs
cmp
nop
adc
xorl
imul
lret
mov
adcb
sbbl
dec
int
mov
lahf
lods
jbe
js
push
aas
imul
push
adc
cmp
jnp
push
psubsw
jg
pop
jae
sub
and
aam
mov
in
ss
sarl
pop
hlt
mov
pop
inc
imul
daa
out
test
push
jge
pusha
fs
js
dec
ret
out
lahf
push
cmc
aad
jae
pop
nop
xor
insb
jmp
or
insl
add
fstpl
push
cmp
lods
iret
loopne
xchg
cmp
sub
inc
movsl
pop
call
fcmovnb
jecxz
hlt
sarl
mov
cmp
xor
push
push
out
mov
fnsave
dec
and
jl
movsl
and
xchg
xor
adc
jp
int
inc
outsl
inc
adc
shll
jmp
mov
push
andl
mov
pusha
push
lcall
sar
mov
ja
pushl
fstpl
add
mov
cmpsb
iret
cmp
dec
outsb
cwtl
push
add
adc
push
test
mov
dec
outsl
and
ret
dec
out
mull
addr16
jno
mov
push
inc
jnp
in
add
mov
outsb
mov
mov
mov
scas
std
jmp
subb
outsb
lods
and
popa
test
loopne
xlat
jecxz
or
clc
gs
in
dec
cltd
fs
jnp
hlt
cs
xor
mov
int3
jnp
sub
idiv
sbbl
inc
xchg
stos
add
cli
pop
xorl
popf
fbstp
fwait
pop
cmpsb
lock
lret
jl
out
mov
xchg
insb
into
push
mov
in
mov
mov
cmp
inc
cmp
mov
jne
pusha
sbb
jg
and
adc
xchg
xchg
lds
ret
test
popf
dec
adc
xchg
fstps
cmpsl
fxam
sub
pop
xchg
pop
push
xchg
sub
je
mov
sti
sahf
call
xorl
data16
xor
hlt
repnz
stc
sub
push
push
sub
ljmp
pop
pop
fstps
loop
dec
mov
cltd
pushf
js
xor
jp
push
aaa
enter
hlt
pop
jo
lods
dec
outsl
and
or
cmp
mov
fldenv
rorl
loop
and
pop
inc
adc
rorl
negb
xchg
cld
cmpsl
sbb
lahf
or
and
xchg
insb
sub
inc
cmp
sub
loopne
cmc
jmp
dec
cmp
pop
in
mov
mov
rcrb
es
cmp
cmp
jnp
jns
pop
test
and
jns
pop
dec
ficompl
sbb
dec
pop
mov
pop
dec
repnz
fs
pushl
orb
dec
sbb
push
loop
jmp
mov
orl
mov
adcl
xor
orl
xor
sub
sub
sbbl
xor
mov
mov
mov
mov
movl
jmp
xorl
mov
mov
adcl
xor
xor
sub
or
sub
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
mov
mov
subl
add
andl
imul
dec
mov
adc
mov
mov
add
or
and
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
push
push
or
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
mov
movl
sub
movl
mov
mov
sub
mov
and
xorl
adc
mov
mov
xor
sub
mov
sbb
orl
or
mov
adc
mov
sub
add
mov
and
orl
add
mov
mov
sub
add
mov
orl
orl
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
subl
sub
mov
neg
mov
mov
mov
xor
addl
mov
orl
add
or
movl
mov
add
mov
jmp
imul
or
dec
xchg
in
lret
pushf
jns
pop
and
cmpl
dec
rcl
lock
jb
inc
adc
push
or
fimull
rorl
and
outsb
jbe
cmpl
inc
lahf
dec
movsl
aaa
rolb
cli
cmp
xchg
test
cmpb
xchg
imul
imul
imul
insb
testl
mov
mov
adc
xchg
lcall
push
fwait
aaa
es
daa
outsl
mov
xchg
mov
jae
xchg
pusha
stos
test
lods
jle
int3
sbb
xor
rcll
repz
stc
or
cmpsl
call
adc
dec
das
test
mov
add
jmp
pop
xor
xchg
shl
shll
mov
ret
mov
xchg
or
shlb
jne
jno
subl
mov
repz
pop
cs
fsubrp
shlb
pop
push
xorb
xor
cld
adc
incl
jecxz
jne
mov
aaa
push
daa
rorb
inc
push
xor
add
outsb
enter
inc
inc
lods
adc
jl
popf
arpl
inc
sbb
imul
ja
pop
inc
lret
mov
dec
loope
aaa
shlb
repnz
mov
jae
imul
add
mov
mov
cmp
add
aas
in
cwtl
loopne
mov
imul
and
mov
nop
sbb
cmpsb
mov
push
lods
mov
sub
xchg
insl
imul
mov
imul
gs
pushf
popa
adc
jae
loopne
or
and
mov
stos
fwait
mov
clc
xor
jp
std
aas
xorl
dec
aaa
pusha
bnd
push
les
cltd
jae
clc
inc
pop
jge
dec
xor
iret
xor
jp
mov
insb
mov
jbe
cmp
jmp
xchg
jmp
int
xor
adc
sbb
pop
test
pop
pushf
and
mov
mov
or
lea
mov
sbb
sbb
add
enter
sbb
out
lds
add
cmc
xchg
mov
out
cmp
adc
outsl
jnp
cmp
shll
add
and
mov
imul
or
sbb
jae
xchg
ficomps
imul
std
repnz
inc
std
mov
subb
xor
mov
push
out
dec
or
inc
push
mov
xor
leave
aad
lret
outsl
lea
popa
data16
pop
xchg
cmpsb
cmp
lock
inc
in
in
xor
sub
nop
ja
fwait
imul
ljmp
out
push
out
and
cmp
inc
subb
int3
xor
js
xchg
mov
xchg
fwait
cwtl
jecxz
sahf
mov
aam
cmp
fnstcw
push
test
xchg
jnp
mov
insl
mov
cli
test
sahf
cmp
cmpl
pop
pop
cmp
imul
cmp
add
pop
bound
sbb
jae
and
dec
push
push
in
nop
ror
mov
xchg
in
call
xchg
pop
or
xchg
inc
dec
shrd
rolb
mov
rcrl
or
xchg
scas
incl
rcrb
jne
or
sub
aaa
xchg
leave
pop
pop
adc
inc
cli
scas
mov
rcrl
cmp
or
roll
cmpsb
push
push
inc
sub
xorl
stos
clc
rcrl
out
bound
lea
jge
outsb
pop
cmp
mov
arpl
ja
and
cmpsb
xchg
jmp
imul
mov
lds
sbb
loope
in
rcll
dec
mov
jbe
or
int
cmp
xchg
scas
mov
ljmp
or
ret
xchg
mov
cmp
xchg
xchg
jp
push
cwtl
jo
insb
jns
iret
push
pushf
mov
mov
jp
sub
mov
pop
rolb
inc
lcall
ja
les
or
mov
loop
or
dec
push
arpl
test
dec
inc
in
cltd
gs
mov
faddl
outsl
stos
push
jnp
int
xchg
pop
in
cwtl
or
pop
aam
mov
cmc
bound
in
dec
xchg
lret
mov
xor
mov
hlt
push
inc
rcll
push
pusha
aaa
int
xchg
push
jge
xchg
push
jns
jbe
adc
push
cmp
mov
dec
in
cmpsl
lret
xchg
add
stos
xchg
jge
call
cmp
bound
mov
lcall
jnp
stc
push
cmpsb
adc
lea
je
flds
sahf
mov
rorl
stc
subb
cmp
out
cltd
test
loop
ljmp
cld
dec
xchg
jbe
sub
or
pop
int3
movsl
fbld
js
pop
or
fistpll
cmpsb
fistpll
adc
sti
fucomp
cld
inc
outsb
test
lcall
stos
mov
lods
addr16
add
xor
out
or
out
mov
rcrb
pop
int
imul
xlat
push
gs
sahf
roll
push
xchg
rcr
aam
stos
nop
mov
rclb
push
mov
jmp
cwtl
inc
jne
outsl
add
roll
jae
fsts
lds
not
lret
call
mov
sbb
mov
cmc
jae
ss
xchg
dec
out
cli
mov
outsl
ret
movl
scas
push
into
and
outsb
and
test
dec
into
out
jle
jae
push
lods
ficompl
add
sahf
jnp
imul
les
adc
ljmp
sub
jecxz
cmp
sbb
fucomip
xorl
sbb
stos
imul
xor
rolb
ja
sub
mov
in
daa
mov
cmp
mov
out
xchg
pop
ja
aam
nop
popf
dec
inc
call
push
jg
divl
adc
mov
add
in
insl
mov
sar
jne
jnp
outsb
or
fwait
jmp
jne
iret
lcall
pop
fimuls
jle
pop
lcall
jl
xchg
out
adc
mov
in
dec
ffree
push
mov
mov
rorb
inc
add
mov
sub
mov
push
lret
and
and
insb
rcll
pause
popa
jb
and
pop
push
mov
mov
lock
sti
jmp
mov
pop
test
imul
mulb
mov
jp
mov
dec
cmp
arpl
inc
arpl
mov
mov
push
inc
jmp
nop
popf
out
jb
xor
jmp
aaa
andb
xchg
push
mov
or
lea
sti
in
xor
adc
out
push
pop
dec
push
out
jo
adc
adc
mov
mov
cld
test
push
add
daa
das
push
sarb
push
lods
lods
push
daa
test
out
lock
mov
mov
jecxz
lss
mov
cmp
adc
test
push
pop
stos
xor
lahf
push
adc
insl
cmc
push
xchg
cmp
loop
adc
xchg
sbb
aad
shll
add
cmp
push
push
ret
xorl
and
out
jmp
imul
xor
lret
inc
pop
enter
push
adc
ret
jp
or
nop
sbb
inc
das
push
dec
xchg
sbb
scas
xchg
stos
pop
push
rcrb
push
loop
jecxz
xchg
dec
insl
shl
outsl
cmp
adc
orb
dec
in
push
add
dec
scas
and
xchg
ret
fistpl
outsb
dec
sbb
loope
and
jmp
ja
addb
push
xor
xlat
loopne
mov
mov
mov
imul
out
sub
inc
cmp
pop
push
stc
loope
cmpsl
mov
ret
loopne
aam
jo
add
outsl
loop
rorb
sub
out
cs
loope
pop
or
mov
or
add
stos
jle
fistps
das
fcomps
sub
dec
adc
sub
loop
push
mov
xor
and
je
inc
roll
or
dec
adc
ror
mov
sbb
sti
inc
lcall
lock
mov
mov
jnp
sbb
sub
unpcklps
int3
iret
mov
lret
nop
inc
or
test
mov
jns
aad
lods
fs
dec
cmp
cli
insb
test
cltd
popa
mov
mov
test
movsb
and
inc
lret
inc
mov
outsl
or
fimuls
fdivs
pop
add
jbe
test
imul
in
iret
mov
inc
cmp
xchg
aad
mov
push
sbbl
sar
sub
lods
push
push
xor
cmp
fidivrl
das
orl
add
mov
shll
pusha
jl
jno
lahf
fcomi
sbb
ljmp
pop
lret
push
sbb
repnz
xor
jle
add
mov
jbe
pop
jp
repz
cltd
xchg
mov
and
pop
sti
imul
stos
call
mov
popa
add
fistpl
ljmp
mulb
adc
sbb
lret
les
cmp
shll
movsb
cmp
jecxz
jo
sub
push
dec
dec
adc
cld
and
sbb
mov
fbstp
popf
enter
mov
mov
inc
jp
fwait
repz
jns
push
into
ds
inc
pop
xor
inc
xchg
add
jae
mov
out
xor
push
or
nop
mov
cmc
pop
das
xlat
frstor
fstl
jne
movsl
push
lock
inc
jle
mov
out
pop
cmpsb
sahf
out
xor
jmp
push
push
pop
inc
pop
mov
aaa
inc
inc
xchg
inc
sti
mov
mov
dec
enter
outsb
xlat
dec
cld
jne
fistpll
stos
mov
xor
into
hlt
xorl
popa
jp
fs
call
in
in
dec
cmc
scas
jne
and
push
nop
gs
mov
stos
add
fsts
dec
out
jmp
outsb
inc
arpl
and
push
pusha
cltd
add
shr
out
xchg
cmc
pop
sbb
add
jp
pop
xor
and
lahf
dec
cltd
mov
and
daa
stos
pop
scas
sbb
xchg
loope
push
movsl
sbb
pop
sub
sbb
movsb
pop
shll
fdivl
inc
call
imul
push
mov
mov
and
popa
out
loopne
daa
jo
push
pop
mov
or
mov
fstps
mov
jle
push
push
or
rorl
sbb
sahf
add
dec
fcmovb
add
mov
insl
adc
outsb
or
or
push
outsb
sbb
jp
test
add
xor
addr16
adc
mov
dec
js
jae
mov
incl
fsubr
lds
test
add
or
mov
jle
jle
sub
loope
sub
mov
adc
push
sub
psubusb
adc
jl
popa
iret
push
fstpt
or
mov
lds
lods
in
cmpsl
xor
in
xchg
popa
sbb
ret
aaa
or
nop
mov
push
mov
add
xor
fwait
mov
cmp
xchg
push
lock
lods
adc
cmp
jo
icebp
loopne
into
adc
mov
mov
push
pop
push
push
rclb
jb
mov
mov
push
fsubr
dec
scas
jns
cs
lods
inc
fistps
pop
or
xchg
xchg
adc
lea
adc
iret
mov
sub
and
es
ficoml
lahf
xlat
incl
sahf
push
scas
mov
mov
dec
inc
xchg
dec
pop
mov
cmpsl
xor
add
cmpsl
out
aas
add
cld
out
iret
outsl
sbb
rcl
gs
mov
cmp
mov
and
xchg
inc
sbb
stc
jae
xchg
pop
push
xchg
bound
out
lds
mov
rol
fldcw
adc
int3
push
cld
jecxz
stos
jb
shlb
js
gs
sti
loopne
aam
movsl
pop
pushf
mov
lahf
or
mov
fwait
mov
sbb
imul
fwait
jnp
dec
cs
sbb
bound
rcll
jo
repz
xchg
pop
arpl
adc
test
sbbb
stos
iret
add
pop
hlt
out
out
fisttpl
pop
test
sbb
adc
out
and
repz
xchg
fdivrl
adc
or
out
popf
cwtl
aaa
mov
cmp
jmp
sbb
ret
das
jmp
jno
daa
fists
lea
jno
mov
shlb
mulb
jb
jmp
aad
mov
jo
das
xchg
mov
inc
jge
and
loop
andb
jbe
mov
jne
adc
push
in
mov
es
daa
arpl
aam
jg
orb
add
mov
dec
xchg
xor
lock
sub
test
add
sbb
xor
cmp
jle
rorl
negl
push
push
ja
scas
jmp
test
gs
out
stc
stos
and
push
mov
cld
xor
mov
addb
push
inc
jl
mov
test
adc
andb
movl
mov
pop
xchg
xlat
add
push
insl
pop
xor
adc
mov
cld
jg
leave
sbb
add
xchg
sahf
xor
mov
ds
cmp
jl
fs
out
sahf
mov
in
lea
xor
xor
inc
subb
stos
jp
in
sub
call
xor
mov
mov
jg
out
jg
fdivrl
or
mov
sub
sub
mov
xchg
add
mov
inc
inc
ret
daa
inc
test
inc
mov
add
test
jns
rorl
sti
mov
je
lcall
in
pop
idivl
xor
stos
jmp
loopne
out
in
or
mov
add
les
fmull
mov
insb
pop
or
js
inc
imul
sub
sbb
lds
pusha
ss
mov
and
add
bound
aam
dec
fisubl
xor
fsts
add
sahf
stos
jp
lds
mov
stos
ds
jo
push
mov
mov
mov
mov
shll
popl
stos
cld
jno
mov
xor
data16
inc
push
hlt
cltd
stc
jae
popf
sbb
js,pt
movsl
imul
int3
into
lcall
clc
cmpsl
xchg
adc
mov
xchg
jmp
fisttpl
shlb
jno
cmp
js
loop
inc
shr
xchg
pushf
dec
in
pop
pop
pop
sub
incl
push
pop
xor
divb
pop
mov
sidtl
mov
cltd
cmp
movsl
push
xchg
aaa
xlat
and
jo
jle
pop
adc
lret
lods
pop
add
adc
das
inc
cmp
xchg
insb
mov
xchg
mov
pop
dec
xor
popf
mov
mov
add
shll
or
dec
push
dec
out
cli
addr16
out
out
cltd
xchg
add
jbe
xor
cmc
adc
andb
sti
xchg
cli
mov
xchg
sub
xchg
mov
out
mov
scas
into
mov
dec
and
sbb
inc
repz
jecxz
xchg
das
lea
mov
dec
lret
jmp
daa
xlat
outsb
mov
jmp
dec
push
and
sbb
xchg
addb
inc
scas
xchg
cltd
push
pop
push
cmp
rorl
mov
adc
or
iret
aas
push
mov
sub
lcall
movsb
sbb
daa
cmp
mov
dec
xor
jg
adc
pop
nop
mov
fwait
sbb
mov
mov
mov
cmp
cltd
ret
mov
mov
cmp
sbb
and
cmp
mov
std
xchg
dec
xchg
rcrb
loope
mov
test
lahf
mov
push
jnp
ret
jge
cli
dec
sbb
es
lret
mov
push
pusha
push
adc
insl
dec
stos
add
and
out
inc
mov
icebp
adc
lret
outsb
aad
or
pop
adc
mov
cmpsb
loope
nop
xchg
outsl
xchg
sub
add
pop
test
ror
and
sbbb
jbe
adc
dec
push
xchg
stos
mov
lcall
sbb
pop
test
fists
shlb
fdivrp
add
pusha
sti
push
push
sub
jae
imul
sub
js
jae
and
scas
ficoms
jnp
jg
xchg
scas
adc
adc
xor
lcall
dec
xor
in
in
cmpl
mov
push
sub
push
imul
bound
xchg
jmp
out
mov
xchg
clc
sbbl
shll
iret
arpl
add
push
jge
pop
dec
cmp
mov
push
jecxz
bound
scas
punpckldq
add
sub
jp
call
rolb
dec
sub
sub
sbb
cltd
shl
loopne,pt
push
nop
pusha
inc
and
push
cmpsb
dec
adc
mov
or
inc
scas
push
fdivr
call
and
outsl
and
les
in
xchg
and
add
js
rorl
dec
aam
jecxz
ror
lcall
popa
jno
mov
addr16
mov
lds
stc
call
push
mov
shr
push
mov
cltd
ja
adc
dec
jecxz
data16
push
daa
xor
loopne
or
mov
fsubrs
test
nop
pusha
lcall
cmp
cs
aas
xlat
sbb
cmp
xor
inc
jno
jnp
in
cmpsl
mull
hlt
in
ss
jb,pn
adc
dec
jb
test
lcall
pop
bound
div
ret
add
adc
cmp
sar
lret
sbb
or
paddb
mov
popf
shufps
aas
iret
xchg
fadd
test
movsb
mov
fs
mov
aam
add
icebp
mov
lret
jae
cmc
inc
xor
test
cs
in
cmp
or
pop
loope
cmp
inc
cmpsl
movsl
cmp
mov
outsb
and
iret
push
sarb
lods
xchg
insl
push
jg
aam
btc
stos
scas
dec
xor
add
imul
stos
xchg
xchg
out
sbb
stos
and
jbe
mov
ficoml
xor
xchg
adc
lea
in
mov
fsts
es
lahf
lods
jo
pop
mov
cli
mov
jmp
add
mov
mov
and
sbb
lods
ror
jecxz
popa
xor
testb
jae
fistl
mov
push
xchg
mov
pop
mov
or
dec
pop
dec
lock
ljmp
daa
pop
or
int3
js
jno
leave
mov
test
sbb
add
inc
scas
nop
aas
mov
pop
mov
mov
sub
add
adc
insl
out
daa
mov
sahf
mov
imul
test
js
jle
pushf
lock
pop
loope
jns
add
aas
sub
adc
and
sub
fwait
stc
mov
sub
push
sub
sbb
sbb
sbb
outsl
sub
jmp
or
cli
cmpl
inc
cmpsb
fisttpll
cmpsl
lods
pop
pop
push
dec
mov
mov
gs
push
sub
les
outsb
cmpb
lea
rolb
aas
mov
add
mov
fimuls
out
imul
test
push
jecxz
xor
lock
imul
and
sbb
roll
iret
mov
xchg
or
loope
sbb
loope
cld
pop
mov
xor
leave
daa
xchg
mov
pop
popl
negb
cmp
cli
ret
and
fldlg2
jmp
adc
or
jo
cmc
sbb
add
js
xchg
fsubr
inc
shlb
xchg
aad
repz
pop
cmc
cmpsl
push
sub
fsubr
pop
sbbb
push
sub
xor
xchg
xchg
sbb
cmp
push
mov
add
sbb
xchg
sub
rcll
cmp
aas
icebp
xor
xor
addl
nop
inc
fprem1
adcl
inc
andl
jmp
test
scas
mov
cmp
add
fs
aas
add
in
lahf
roll
xchg
lods
or
sarb
lret
sbb
pop
push
pop
and
addr16
test
inc
and
ljmp
popf
jb
lret
leave
stos
test
sti
pop
fistpll
cs
sbb
andl
aad
fiadds
movsl
push
push
fildll
sbb
loopne
push
cwtl
dec
pop
jg
mov
repz
jp
sub
cwtl
mov
ss
xchg
xor
ljmp
xchg
mov
inc
leave
mov
mov
and
enter
cmp
push
lcall
shrl
push
addl
rcll
hlt
cwtl
jnp
push
aaa
inc
push
inc
mov
mov
and
xchg
scas
ret
push
or
push
jno
dec
cltd
aaa
push
adc
stos
loop
sti
cmp
fistpll
sub
jl
pop
clc
sub
sub
cmp
test
push
std
vmwrite
fwait
pop
mov
in
rorl
adc
dec
stos
push
fcmovb
adc
repz
lock
adc
pop
out
push
cmp
mov
dec
repz
shlb
cli
pop
in
aam
loope
xchg
imul
mov
pop
test
inc
int
insb
daa
inc
add
movsb
fdivr
push
mov
mov
inc
out
dec
pop
testb
or
mov
ret
notl
xor
mov
inc
ja
inc
push
sub
orb
arpl
cmpsb
adc
mov
aas
fs
xchg
push
cmpsl
push
mov
je
popf
mov
jmp
call
jmp
repz
lahf
stc
testb
enter
fstl
or
dec
xorb
mov
cmp
push
rorb
dec
mov
mov
sahf
add
fistl
outsb
data16
jmp
dec
push
nop
and
pop
mov
jno
mov
loope
daa
aad
inc
lods
jns
cld
push
mov
mov
stc
pop
adc
cltd
out
js
cs
jae
adc
and
inc
dec
sub
lcall
dec
lret
sub
mov
in
lds
and
xchg
push
sahf
shl
pop
mov
test
movsb
jae
mov
push
dec
mov
xorl
out
push
sub
call
jb
outsl
push
icebp
fdivrs
xor
jge
flds
add
mov
mov
cmp
int
sub
fwait
xor
mov
push
pop
add
xor
pop
mov
test
adcb
in
sbb
mov
scas
mov
outsb
pop
popf
aam
mov
pop
rorl
push
enter
jb
pop
push
inc
inc
mov
mov
sbb
dec
mov
or
iret
sub
or
popf
pop
push
sbb
add
mov
mov
sub
jne
aas
jns
push
jne
sti
test
xchg
inc
fisttpl
aad
cmp
out
lock
push
or
jmp
sahf
or
adcl
shll
jns
sbb
mov
xor
js
mov
inc
sub
sbb
dec
test
push
pusha
or
sub
or
jno
pusha
cmp
pop
mov
jnp
and
out
pop
mov
xorb
pop
xorl
rolb
push
dec
jmp
xor
notb
pop
lcall
jnp
adc
outsb
insl
cmp
mov
or
bound
or
lods
int
insb
push
int
mov
xchg
jmp
sub
mov
inc
add
ds
fcmovnbe
test
dec
lahf
push
rcrb
scas
push
lret
mov
loope
call
dec
sbb
mov
jp
pop
aad
mov
divb
pop
sahf
push
arpl
adc
mov
push
xor
or
xchg
mov
subl
in
cmp
adc
and
fwait
or
sarl
pushf
flds
ficomps
rcrb
xchg
xchg
pop
jns
xor
mov
clc
loope
jnp
and
xchg
and
stc
popa
cmpsb
test
sbb
ret
inc
xchg
adc
popf
imul
mov
scas
sbb
negl
scas
pushf
adc
leave
leave
es
push
jb
inc
out
push
push
push
movsl
aam
lods
or
mov
shlb
and
call
dec
push
into
xchg
dec
or
add
cmp
xorl
imul
je
int3
lcall
iret
push
xchg
sbb
add
pop
lahf
xor
xor
mov
movsl
mov
sub
fisubrl
inc
jns
ret
sbb
fsubrs
retw
push
push
xchg
mov
xlat
push
stos
scas
sub
jns
pop
movsb
scas
int3
xchg
mov
pusha
cmpsb
dec
push
xorb
fcomp
xor
outsl
dec
data16
insb
push
push
ja
in
sub
repz
xchg
imul
add
pop
test
daa
adc
shll
mov
data16
dec
call
xchg
fstpl
mov
sbb
fucomi
in
mov
outsl
int
ja
and
adcl
and
cld
mov
aam
lret
adc
insb
mov
mov
and
loop
mov
and
mov
adc
dec
mov
imul
outsl
frstor
mov
pop
fsubrp
inc
jne
ficomps
aaa
in
gs
jbe
adc
push
enter
pusha
sbb
sbb
mov
or
pop
sub
lea
sbb
pop
jle
fidivl
fsubrl
sub
pop
std
andl
xor
enter
fcmovnu
sbb
mov
xchg
xor
orb
dec
repnz
aam
cmpsl
jmp
mov
outsb
push
out
dec
jp
pop
mov
lahf
and
inc
jnp
ret
dec
sarb
xchg
pop
xchg
or
mov
mov
addr16
inc
and
mov
sbb
lds
lret
lods
punpcklwd
icebp
dec
popf
fcompl
mov
adc
jo
mov
mov
dec
sub
add
add
popf
jne
mov
lods
sbb
xor
add
dec
jne
ret
xchg
mov
cli
mov
mov
adc
jecxz
aaa
dec
fbstp
adc
js
adc
dec
out
shll
jo
inc
rcl
aaa
mov
das
stc
jbe
lret
mov
stos
sbb
test
add
imul
stos
lods
outsl
mov
pop
stos
jns
std
xor
pusha
pusha
test
push
stos
shrl
enter
cmp
cmp
or
mov
cmp
sbb
stc
and
dec
mov
xor
adc
aad
stos
stc
cmp
rcll
mov
lds
in
jbe
adc
sub
and
outsb
jns
adcb
jge
cwtl
dec
or
bnd
das
cmpsb
xchg
xchg
cmp
push
mov
jo
sbb
mov
dec
mov
dec
mov
mov
push
mov
pushf
stos
jnp
rclb
sahf
mov
out
push
int
jne
in
or
xor
out
std
jbe
ficoml
cmp
out
sub
lods
inc
jns
fucom
sbb
sub
iret
js
jae
and
add
adcb
mov
test
or
dec
out
sub
push
bound
addb
pop
jmp
in
cs
mov
sbb
push
out
cmovg
mov
add
adc
cltd
pop
pop
ds
nop
movsb
ret
add
or
cmpsl
scas
mov
mov
inc
flds
push
adc
sub
xchg
sbb
cmp
movsl
sbb
push
xchg
inc
into
mov
mov
aas
rcrb
ds
cmpsb
dec
sbb
popa
rcll
lods
dec
adc
add
mov
lock
loope
jl
lret
add
adc
cmpsb
xor
cmp
in
or
sub
int3
scas
repnz
xlat
adc
and
es
rclb
push
aam
std
std
pop
lcall
cs
aad
leave
pop
mov
clc
jg
cwtl
mov
xchg
int3
pop
stc
dec
in
mov
mov
insl
bound
cmc
andl
je
outsb
das
or
mov
cltd
mov
fmull
sbb
mov
hlt
xlat
xchg
xchg
pop
lds
test
popa
pop
enter
jne
int
or
jb
pop
orl
stc
popf
js
shlb
add
or
mov
mov
jo
or
cmp
jle
daa
cmc
jg
or
outsl
fdiv
adc
dec
cmpl
shll
pushf
and
scas
cmp
les
jecxz
inc
sbb
aam
cmp
pop
stos
dec
push
inc
test
bound
xor
dec
or
or
aaa
insb
add
add
mov
cmp
out
xor
mov
movsl
cmp
mov
mov
mov
lods
jae
shll
xchg
push
mov
repz
and
push
nop
in
adc
push
inc
add
jmp
cmc
push
inc
xchg
xlat
adc
mov
dec
aaa
push
jle
icebp
arpl
fnstenv
jg
in
mov
nop
loopne
push
xchg
xchg
xchg
shrl
and
pop
add
ret
iret
movl
cmp
sbb
lea
push
mov
dec
inc
mov
pop
xchg
or
cmp
sbb
jbe
test
cmc
dec
inc
dec
lds
xchg
je
pop
jp
xor
in
push
cltd
clc
js
cmp
repnz
ljmp
jne
loop
fwait
pusha
pop
dec
fidivl
decb
ret
mov
in
xor
add
rorl
mov
aad
add
orl
xor
mov
decl
xor
orl
add
push
mov
xor
addl
add
andl
push
mov
orl
xor
xorl
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
push
dec
push
push
xor
xor
mov
sub
sub
movl
lea
andl
mov
inc
mov
cmpl
jg
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
movl
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
mov
dec
mov
jmp
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
xor
subl
add
mov
sbb
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
mov
dec
mov
jmp
add
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
xor
mov
add
movl
cmp
movl
je
movl
mov
movl
jmp
or
mov
mov
adc
mov
mov
addl
or
jmp
scas
fwait
or
mov
add
std
addb
inc
sub
jns
cmpsb
lods
mov
clc
or
sahf
or
xchg
stos
xchg
lea
mov
cmp
mov
sub
mov
sarl
icebp
in
out
mov
aam
out
fstps
xor
sbbl
les
xor
das
dec
adc
fwait
fs
or
aas
rorl
popf
das
mov
or
in
enter
add
inc
add
test
subb
sbb
mov
push
xchg
popf
cmpsl
outsb
push
into
sahf
inc
out
loop
xor
gs
pop
adcb
adc
iret
lret
idivb
lcall
or
push
inc
push
fcmovb
cmp
fsub
xor
dec
cmpb
adc
in
xchg
repz
sahf
fdivrs
pop
in
lods
scas
leave
cld
scas
sbb
or
mov
mov
outsb
push
jo
or
and
push
hlt
pusha
cmp
or
and
fs
sbb
xlat
mov
xchg
insb
adc
adc
loop
push
pushf
int
adc
and
jmp
mov
jb
or
inc
jbe
in
test
mov
push
fsubs
sub
les
xor
jle
jns
repnz
or
or
and
mov
int3
in
jnp
add
iret
divb
mov
mov
popa
popf
mov
pop
inc
callw
xor
call
cld
repz
dec
mov
jecxz
jae
cmp
jbe
jne
jo
pop
je
and
mov
jmp
xchg
jmp
or
cwtl
inc
and
inc
popf
pop
or
or
mov
aas
repnz
xor
push
fidivl
mov
out
popf
and
pop
push
loopne
insl
cli
jle
les
mov
sbb
mov
push
cmp
lret
ss
push
jns
rclb
xchg
inc
repz
dec
or
stos
mov
and
and
add
bound
addr16
mov
add
cmc
ljmp
push
mov
xchg
inc
scas
pusha
fldl
incb
sti
xchg
popa
scas
pop
loop
popaw
jge
popf
call
mov
ss
out
mov
lock
inc
jecxz
ja
test
aam
adc
ss
push
mov
out
flds
arpl
rcrl
xchg
ret
inc
mov
pop
lock
fisubrl
cmp
psubusw
sbb
jae
xchg
outsl
cmp
jno
in
xor
sub
divb
mov
or
cmc
in
xor
mov
cltd
fmull
pop
dec
repz
cmp
inc
out
jmp
sahf
sub
fldcw
mov
aam
cmp
or
xchg
mov
mov
ret
sub
jp
pop
int
loop
xor
test
dec
iret
mov
pushf
hlt
mov
inc
jmp
clc
cmp
out
lds
sahf
movsl
test
mov
cmp
shlb
or
test
jae
test
out
push
mov
iret
pop
xchg
adc
jne
fmull
daa
movsl
adc
testb
dec
divb
fiadds
in
mov
ret
pushf
lods
or
dec
stc
xchg
jb
lahf
fwait
inc
out
xchg
push
dec
adc
inc
push
xchg
shlb
inc
adc
mov
pop
pop
cmp
push
adc
mov
mov
inc
add
jge
jno
dec
lea
push
mov
cs
xchg
dec
rclb
xor
fscale
cmp
test
fwait
push
push
nop
scas
in
insb
into
rcll
cmp
dec
cwtl
mov
lock
iret
pop
lret
push
inc
push
shl
push
mov
cld
bound
lods
fmuls
movsl
in
push
mov
in
hlt
or
jae
or
and
mov
scas
rcrl
fldenv
pop
sbb
or
jecxz
xlat
ret
rcll
or
jecxz
jno
push
repnz
cmpl
ja,pt
sbb
daa
loopne
xor
sub
stc
push
fs
xlat
pop
push
push
or
in
addr16
addr16
in
outsl
push
jnp
arpl
gs
cmp
adc
jp
stc
xor
dec
hlt
sbb
enter
call
stc
iret
pop
xchg
lcall
loop
mov
shlb
adc
xor
mov
cmp
int
inc
in
movsl
jg
and
pop
and
pop
movsl
sti
dec
cwtl
or
cltd
push
pop
stos
add
cwtl
sub
cmp
sbb
test
sbb
cld
mov
push
mov
cmp
ss
fwait
sub
or
pop
sub
or
or
or
mov
and
push
iret
dec
xchg
movsb
pop
push
push
dec
aaa
in
pop
mov
addr16
adc
adc
pop
lcall
imul
test
sub
dec
adc
lods
cmc
inc
dec
and
sbb
dec
cmpl
push
inc
es
jmp
fnsave
pop
xor
fstpt
lds
imulb
push
adc
js
mov
insl
cmp
jle
and
pushf
mov
fwait
scas
sub
mov
cmpsl
frstor
jno
insb
jge
and
or
pop
das
adc
aaa
mov
rcll
adc
jae
push
mov
shll
mov
imul
test
inc
xchg
daa
notl
jle
lcall
adc
mov
push
aaa
mov
ja
xchg
lea
inc
mov
js
xchg
test
test
lock
in
push
cmpsb
mov
int3
sub
xor
adc
push
hlt
mov
fwait
scas
adcb
jg
bound
or
lea
pop
xor
test
push
fldt
xor
rcr
fsubs
cmpl
cs
inc
mov
fidivrl
sahf
ret
hlt
movsl
or
jb
add
mov
push
rclb
ljmp
adc
sub
push
mov
push
jmp
in
sbbl
pop
ret
scas
sub
arpl
js
push
imul
or
dec
mov
mov
aad
jecxz
sub
adc
jl
jne
xor
or
fwait
or
mov
cld
push
inc
sub
jg
pop
lods
adc
loop
mov
es
jmp
xchg
std
or
repnz
aam
leave
and
cmp
and
adcb
mov
mov
xchg
mov
pop
roll
and
enter
rorb
cmpb
daa
lret
scas
lock
push
imul
movsl
int3
ret
out
push
cmpsb
push
in
xor
call
fisttpl
out
dec
test
mov
mov
dec
push
mov
rolb
pushf
jbe
push
movsb
aam
adc
gs
pop
jae
test
adc
cmp
js
add
insb
in
into
fdivl
repnz
pop
push
lock
jns,pt
push
push
mov
std
sbb
or
sbb
mov
and
xchg
jge
lods
push
sub
push
in
mov
mov
pop
jge
xchg
dec
scas
test
je
cwtl
into
sbb
xor
mov
sbb
inc
push
fnstsw
jmp
or
iret
lods
xchg
jns
xor
fwait
ds
sbb
and
and
adc
outsb
sub
stos
xchg
ror
in
outsl
mov
jecxz
int3
les
jecxz
mov
lcall
cli
pop
adc
into
test
scas
std
dec
sahf
adc
out
shll
xchg
xor
pop
test
and
sub
sub
and
sbb
mov
push
mov
sbb
loopne
imulb
jg
mov
jmp
stc
push
ficoms
icebp
cltd
jne
into
test
test
xor
mov
scas
cwtl
and
xchg
pop
jge
push
xor
push
jbe
mov
mov
adcb
leave
dec
inc
push
outsb
call
cmp
mov
jb
jge
sbb
pop
bnd
and
jnp
fbld
xchg
cmp
xchg
jns
bound
lods
inc
mov
fsts
roll
mov
test
je
sub
inc
add
push
xlat
lods
fsts
mov
dec
cmp
in
mov
cmc
add
push
dec
push
mov
movb
push
addr16
std
mov
cbtw
gs
or
lret
lahf
mov
stc
movsl
sti
repz
xor
arpl
enter
mov
lcall
enter
movsl
inc
adc
xor
mov
push
sub
and
pop
xchg
jp
call
jg
mov
stos
xchg
inc
outsb
je
je
fld
fdivs
add
add
out
testl
adc
dec
movsb
pop
add
test
clc
in
jmp
mov
mov
icebp
mov
add
loopne
loop
in
sarb
or
jb
ds
out
adc
push
insb
adc
cli
daa
mov
push
shll
pop
aad
jp
lret
pop
xor
test
daa
int3
in
ret
dec
xchg
adc
fucomip
in
inc
test
ja
xor
stc
adc
pop
mov
pop
rcrb
pop
hlt
test
test
int
mov
in
xchg
int
lds
lock
jecxz
lods
mov
and
pop
les
xor
lods
and
push
xor
lahf
mov
loop
jge
inc
mov
push
jge
in
push
test
jb
xor
inc
cs
and
mov
and
pop
mov
shlb
inc
dec
adc
repnz
and
loop
loop
adc
inc
lcall
scas
mov
jbe
inc
lock
mov
and
mov
test
pusha
insl
out
data16
fstps
test
xorb
xlat
dec
ds
jne
cmpsb
mov
daa
mov
mov
adc
mov
cli
lret
insb
or
pop
cmp
mov
in
jnp
cwtl
lcall
pop
int3
cmpsl
nop
icebp
mov
stos
xor
pop
lcall
sbb
jo
mov
pushf
ja
adc
stc
xchg
out
mov
fwait
test
xchg
push
test
andb
out
or
dec
sbb
aaa
stos
lret
mov
sub
inc
ret
pop
sbb
mov
push
sarb
jecxz
stos
adc
mov
sbb
mov
xor
mov
sbb
ja
aad
adcb
jge
mov
orb
repnz
push
mov
sbb
pop
lahf
scas
aad
in
sti
xchg
mov
jecxz
cld
test
mov
in
jg
lds
lahf
pop
aas
leave
xchg
stos
inc
ja
lahf
jg
subl
add
xor
xlat
aaa
xchg
loope
and
shrl
pop
pushf
test
add
adcl
in
pop
imul
pop
xchg
sub
pop
js
insb
call
fistps
imul
arpl
in
add
cmp
jl
jno
rolb
inc
aaa
outsl
es
mov
icebp
jg
xchg
addr16
sub
ret
adc
movsl
popl
and
int3
add
sub
push
clc
push
stos
mov
pop
subl
jb
mov
mov
add
out
push
lods
mov
jmp
rcrl
xor
and
imul
clc
dec
popf
jae
fsubrl
mov
push
or
jp
fcoml
adc
cmp
add
fisubs
push
out
pop
ds
jmp
movsl
mov
dec
xlat
push
and
xor
ret
scas
jmp
lcall
dec
pop
loope
cmp
test
sub
scas
cmpsl
cmpsb
jp
mov
lods
push
mov
icebp
hlt
mov
aaa
xchg
xor
pop
sub
fistpll
roll
mov
jmp
fnstenv
fsubp
rcrl
adc
jmp
jmp
lahf
sbb
icebp
mov
dec
sbb
mov
into
ret
cld
cmp
decb
xchg
cmp
xor
rolb
call
pop
add
jbe
aam
sbb
js
mul
lds
lret
adc
andb
and
lret
inc
jne
mov
popl
lods
jne
lods
ja
pop
mov
xor
ret
mov
sbb
mov
pop
into
adc
push
fmuls
mov
or
jo
mov
out
arpl
jp
repnz
ret
mov
mov
data16
ds
fisubs
sub
xchg
movsl
jnp
test
adc
jbe
loope
andb
addl
inc
inc
dec
adc
fdivrs
stos
mov
dec
and
mov
fs
push
xor
test
clc
xchg
or
je
pop
fstpl
cltd
fsub
sub
aas
dec
add
mov
jns
loop
ret
fs
cmp
insl
aaa
faddl
leave
inc
mov
insb
out
loope
lret
push
sub
rcrb
test
xchg
test
stos
xor
sub
jno
movsb
data16
pop
test
lods
hlt
mov
ja
jb
pop
ret
push
adc
aad
int3
sbb
cmp
outsb
lods
mov
push
test
fwait
stos
in
in
scas
ret
shlb
mov
jp
sub
mov
jg
mov
jp
mov
push
push
push
ret
divb
mov
daa
cmpsl
test
frstor
out
sub
icebp
mov
mov
or
nop
out
add
cld
push
mov
rorb
outsl
mov
sub
ret
ret
sarb
lahf
dec
ljmp
lretw
push
out
lds
or
fsubl
adc
sbb
mov
xchg
adc
in
xor
daa
push
pop
push
lods
mov
dec
loop
dec
ret
aad
jmp
or
fwait
inc
outsl
movaps
jne
pop
inc
ja
aam
arpl
scas
xchg
sub
adc
push
fstps
mov
jno
test
test
test
sbb
xorb
cltd
xchg
add
pushf
add
outsb
loope
je
es
in
movsb
xchg
movsl
aas
jbe
sub
xlat
cld
call
outsb
cmpsl
add
orl
jne
notl
fiaddl
jns
and
mov
sbb
add
inc
call
sub
es
mov
xlat
faddl
lds
or
sub
sub
jle
mov
incl
mov
or
arpl
add
pop
fidivl
or
mov
outsl
push
loope
and
daa
sahf
xor
mov
lret
into
test
movsl
xor
repz
addb
ret
push
dec
dec
jmp
jmp
xchg
mov
mov
mov
add
and
sbb
xchg
scas
out
push
fdivl
xor
jb
pop
into
lahf
jl
add
push
lods
jmp
stos
imulb
mov
cmp
jne
test
mov
out
fnstcw
adc
addr16
dec
loope
and
add
mov
mov
mov
frstor
nop
dec
push
notb
movsb
out
inc
insb
inc
pop
gs
pop
insl
js
gs
dec
and
xchg
int
or
jecxz
jno
and
xor
jno
xor
scas
lods
cmp
or
sbbb
jns
mov
addr16
imull
dec
cmp
movsb
and
adc
or
sbb
mov
js
lea
cmp
fisubrs
jno
pushf
mov
sub
jge,pt
xor
rolb
xchg
movsl
test
aas
sbb
inc
negl
pop
xor
rorl
mov
jbe
inc
fnsave
iret
stc
loope
push
imul
fiaddl
into
xlat
push
push
lock
cmp
sti
push
test
inc
inc
dec
sub
push
loop
cmp
cmp
xchg
adc
in
mov
hlt
push
dec
and
pusha
jge
out
dec
shll
add
pop
es
xlat
push
mov
les
dec
or
mov
mov
mov
cli
ret
cli
sbb
mov
cld
and
addl
leave
mov
inc
xor
xchg
push
sbb
and
in
out
out
push
inc
arpl
popa
push
sahf
cmp
test
xchg
sbb
out
loope
pop
xor
adc
mulb
push
add
jg
lret
loope
sub
inc
stc
cltd
adc
sub
inc
ret
inc
icebp
push
xor
mov
dec
push
mov
xlat
iret
mov
push
sub
pop
pop
add
cmp
inc
pusha
mov
pop
out
inc
xchg
imul
pop
jge
fcoml
call
decb
out
in
fidivrl
aas
xorb
test
jno
std
jno
js
out
sbbl
or
add
rorb
sub
imul
pop
mov
wbinvd
icebp
fwait
xchg
pushl
outsl
adc
jmp
addl
adc
sub
stc
ja
shl
push
and
jnp
movsb
cmpsb
pop
ss
movsb
movsb
or
pop
xchg
add
pop
dec
int
lds
into
inc
sub
mov
and
pop
jge
movsb
xchg
jge
push
sbb
ljmp
inc
xor
call
lret
jno
fcoml
pop
push
mov
shrl
jmp
add
aaa
not
pop
add
packsswb
push
scas
sub
xchg
sbbl
mov
shrb
cmp
xor
xchg
lcall
shlb
aad
aad
mov
aaa
push
lea
movsb
add
fldl
or
rcrb
xor
mov
enter
push
mov
mov
stc
xor
sbb
mov
insl
xlat
leave
cmp
xchg
jge
fdivrl
movsb
sarb
in
shll
mov
iret
or
js
es
jle
xor
aam
cld
in
inc
inc
sbb
cli
outsl
mov
cmp
in
lahf
pusha
jns
arpl
xor
and
ja
fadds
gs
jecxz
mov
sub
popf
pop
pop
test
inc
fs
ror
dec
jno
call
push
fistps
mov
subb
jae
lret
and
or
sbb
scas
jg
xor
add
mov
jecxz
sub
cmc
fwait
push
clc
dec
cmp
into
jge
or
in
sub
ret
jecxz
lock
push
xor
outsl
jne
jp
xchg
add
test
xor
mov
cmp
pop
xchg
inc
or
arpl
cmp
mov
into
mov
repz
mov
pop
xchg
sub
movsl
cwtl
je
mov
aam
jecxz
stos
pop
enter
shrl
sbb
pop
jecxz
loope
lock
mov
push
add
insl
xchg
aas
fwait
mov
mov
add
std
jbe
lods
aad
imul
ljmpw
bound
mov
movsb
insl
fmull
pop
js
jg
push
outsb
ss
sbb
and
stos
inc
into
dec
mov
dec
sub
clc
adc
test
loopne
aas
or
ret
fldenv
lcall
push
movsb
fidivl
arpl
loopne
pushf
dec
push
mov
test
mov
sub
sbb
test
xchg
mov
mov
mov
movsb
mov
sbb
cmp
mov
insl
xor
push
rcl
out
xchg
fisubrs
pop
insl
mov
lret
adc
mov
inc
xchg
dec
ja
test
ficomps
mov
movsb
fsubrs
cmp
adc
loope
inc
mov
and
pop
pop
and
inc
mov
pop
lret
pop
loop
or
stc
jo
lahf
push
push
sbb
cmp
fdivs
push
push
pop
shll
mov
arpl
fidivrs
ds
popf
add
fistps
hlt
push
mov
cwtl
negl
cwtl
test
xor
pop
lods
and
xchg
cmp
orl
xchg
ss
movsb
dec
inc
and
pop
sub
out
adc
in
jmp
xor
loop
pusha
leave
loop
push
aaa
daa
les
cld
cmpsb
adc
xchg
es
inc
sarl
xchg
inc
prefetch
or
sbb
mov
fidivl
mov
cwtl
and
add
outsl
jo
inc
hlt
mov
shl
hlt
cmpsl
ret
jns
arpl
sbb
mov
inc
std
or
push
divb
and
xchg
dec
sahf
lea
lret
xor
jb
cmp
ljmp
in
ss
mov
mov
sub
xor
out
jae
insb
cmp
xor
pop
stos
imul
push
rcll
out
push
cs
pushf
clc
movsl
pop
rclb
add
xor
mov
push
rcl
hlt
and
adc
lods
mov
and
movb
cmp
cmpsb
outsb
cmpsb
xor
xchg
mov
loop
push
rcll
mov
mov
repz
mov
outsb
xor
ss
push
cmpsl
inc
insb
outsl
push
loop
out
in
push
iret
int
jbe
insl
ja
lret
aas
inc
mov
mov
ficompl
sbb
mov
xlat
or
in
mov
std
xchg
arpl
movsl
clc
mov
dec
and
pop
jns
inc
inc
je
lods
pop
mov
or
cltd
cmp
push
inc
lcall
mov
in
sub
cli
imul
notb
pushf
push
insb
pop
js
movsl
pop
enter
icebp
roll
push
fmull
aas
clc
sahf
jmp
mov
add
mov
insb
jno
out
in
cmp
and
daa
push
inc
mov
iret
pushf
test
cmp
pop
inc
sbb
out
pop
repz
inc
push
and
inc
jecxz
repz
lods
pop
cmp
aas
jo
xchg
or
movsl
xchg
dec
mov
bound
adc
out
sub
loopne
jae
mov
push
sub
xchg
lds
adc
jmp
cwtl
inc
sub
pop
sbb
arpl
add
pop
pop
lods
cmpsl
push
pop
inc
inc
into
leave
das
int
insl
sub
fildll
hlt
inc
cwtl
into
sub
jmp
subb
imull
mov
shl
jmp
ror
loopne
stc
xor
nop
lds
adc
jmp
xchg
leave
insl
jecxz
ds
icebp
in
gs
cmpsb
hlt
es
data16
sbb
mov
test
andb
push
jns
ficoml
cmp
pop
dec
inc
ja
jne
test
add
adc
ss
icebp
mov
sti
xchg
fsubs
fdiv
es
add
popf
fcoms
test
lret
inc
shll
cld
jmp
fcmovnu
inc
push
imul
xor
dec
sbb
pop
adc
inc
dec
mov
sub
ficomps
and
addl
in
add
icebp
xor
xor
ja
adc
pop
sub
xor
nop
add
push
xor
loop
test
jp
push
inc
addl
daa
or
cmp
icebp
sub
je
cmp
roll
aas
xchg
mov
jb
sub
aam
sub
ffreep
push
js
jge
sub
stos
loope
xchg
das
xor
lret
dec
decb
sub
in
dec
jnp
fs
sub
lods
add
fadds
out
sub
lret
dec
daa
leave
adc
mov
lods
push
push
outsl
push
pop
cmp
jbe
cmc
inc
or
ds
enter
inc
xchg
cmpsb
cmpsb
out
call
out
dec
dec
enter
jecxz
cmp
and
pop
sarl
xor
pop
jp
mov
lret
xor
lret
es
fldcw
inc
mov
movsb
shlb
sbb
imul
mov
pushf
add
and
mov
xchg
mov
xor
add
jmp
xor
fs
out
cmp
mov
mov
jmp
mov
mov
mov
or
mov
test
mov
ljmp
inc
stos
push
je
lret
sbb
pusha
cs
rolb
cmc
lahf
movsl
jo
cmc
cmc
fmuls
sbb
outsl
enter
cmp
repnz
ss
cmpsl
xchg
or
scas
test
and
mov
cmp
xchg
js
negl
add
test
push
sub
roll
lds
rcl
pop
push
ficompl
sub
cwtl
push
hlt
insl
add
fisubrl
pop
stos
mov
shll
inc
cli
or
mov
cld
popa
mov
mov
inc
mov
das
jl
lret
ret
aam
add
mov
xchg
mov
jns
mov
mov
out
pop
mov
mov
fistps
sbb
push
outsl
ret
ljmp
sarl
rcrl
adcl
dec
lret
xor
dec
imul
aaa
mov
push
fs
push
fcompl
cld
push
xchg
mov
pusha
mov
fmuls
sbb
xor
xor
push
mov
push
and
and
add
and
into
push
pushf
pop
push
aaa
jmp
int
into
out
ret
loopne
andb
xor
cmp
movsl
movl
add
add
push
dec
inc
aad
out
fnstsw
lcall
lret
inc
or
outsb
out
gs
xchg
imul
push
sbb
sub
push
add
pop
mov
push
jbe
int3
repz
mov
out
lcall
test
adc
mov
jle
int3
cwtl
lcall
enter
fisttpl
icebp
xor
cmp
mov
mov
mov
jg
and
push
mov
rcrb
lds
lods
mov
ret
test
roll
push
jb
cwtl
add
cmp
jg
inc
call
shlb
mov
jge
fimull
outsl
in
gs
pop
inc
mov
testb
inc
xchg
mov
cld
cmp
repnz
push
push
add
mov
mov
int3
xchg
std
push
cmp
pop
call
fucomp
jle
inc
mov
subb
lock
sbb
and
sbb
xor
fsts
add
cmpl
jl
insb
mov
cmc
lahf
out
mov
ljmp
inc
pop
cli
xor
insl
std
int
and
out
imul
cwtl
das
popf
cmpsb
sub
sti
bound
or
push
loop
push
lret
mul
fcompl
cmp
test
cmp
cwtl
mov
cmp
out
leave
out
dec
leave
mov
adc
mov
fidivl
popa
add
jo
clc
dec
pop
xchg
xor
inc
xor
in
and
pop
insl
test
rorl
addb
aaa
and
mov
les
cmp
rcrl
jg
push
mov
jle
push
dec
cld
ljmp
je
aad
mov
mov
add
add
incb
or
adc
dec
repz
icebp
cmpsb
mov
cmp
les
cmc
cmp
into
inc
popa
movsb
ds
fisubs
mov
stc
cmp
clc
pop
dec
push
test
or
out
fcmovnu
ret
es
stos
jge
inc
xor
and
inc
push
adc
fisttpll
mov
mov
cmp
cmp
outsb
insb
mov
or
xchg
dec
loope
lods
filds
pop
sub
mov
or
jmp
mov
adc
imul
pop
xor
push
lock
enter
popa
xor
dec
stc
movsb
sub
ret
in
push
cmp
sbb
sub
sti
cmp
adc
push
sbb
out
out
pop
mov
loope
stos
xchg
js,pt
mov
fadds
sbb
and
fdivs
mov
push
xchg
fcoms
sbb
insb
es
shlb
aam
movb
andb
aas
jg
and
add
xor
xchg
in
jns
adc
cmp
xchg
shrl
mov
xchg
push
shll
cmp
sar
jno
mov
xchg
das
sbb
adc
dec
lock
andb
sti
jo
mov
push
inc
push
inc
notb
ljmp
outsl
and
mov
dec
adc
int
mov
push
in
sbb
pop
adcb
std
aaa
jb
cmp
mov
and
sbb
xchg
inc
leave
rclb
mov
in
aad
aaa
push
imul
mov
push
pushf
dec
call
mov
outsb
mov
les
and
lods
ret
out
pop
cmp
pop
or
loop
push
cmp
inc
jno
cwtl
cmpsl
xor
shrl
loope
inc
and
ja
adc
jp
dec
sub
popa
cmp
mov
sub
dec
test
nop
std
dec
in
and
dec
repnz
movsl
in
or
divb
test
push
lock
fstpt
adc
arpl
les
test
lock
mov
pop
sbb
inc
leave
outsl
fs
roll
xor
lret
nop
insb
rcll
fincstp
inc
mov
adc
mov
enter
loope
repnz
adc
imul
or
add
shl
pop
lock
or
lret
lods
pop
mov
in
mov
sbb
in
pop
sbb
mov
rcll
lret
shll
lock
push
pop
mov
push
movsl
pop
scas
add
xor
xor
jl
mov
subl
addr16
outsb
jne,pt
xor
cmpsb
lret
xchg
mov
add
out
shlb
xor
pop
pop
lods
cmpsl
mov
es
es
push
ljmp
push
lret
mov
cld
cmp
cmp
and
push
inc
test
scas
xor
xor
and
jns
out
and
sbb
call
xor
pop
scas
jge
rcrb
bound
out
leave
inc
cmp
jnp
mov
imul
fcoml
or
xor
jecxz
cmp
mov
dec
mov
dec
xchg
xchg
frstor
and
xchg
inc
push
add
inc
insb
dec
add
xchg
pushf
cmpsl
push
js
adc
mov
imul
lock
popf
cld
push
adc
push
ljmp
add
push
adc
add
test
add
add
xrelease
jne
push
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
cmp
movl
jne
push
movl
push
jmp
movl
mov
mov
movl
cmp
jne
movl
cmp
jne
push
movl
push
movl
jmp
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
push
movl
jmp
mov
not
mov
mov
cmp
jne
cmp
jne
mov
xor
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
jmp
push
inc
dec
test
test
addb
mov
pop
hlt
arpl
movsb
lret
xor
sbb
xchg
add
int
mov
fwait
add
lcall
xchg
inc
lds
add
inc
orl
data16
aas
ljmp
mov
inc
shlb
dec
cmc
stos
jnp
bound
adc
imul
imul
and
jmp
cmp
int3
and
fistps
inc
cmp
mov
add
test
dec
fnstsw
test
flds
mov
ret
pop
jo
inc
jne
stc
push
xchg
mov
mov
jne
fwait
xchg
push
lcall
imul
and
push
inc
cwtl
imul
sti
pop
fcompl
mov
sbb
dec
pop
into
ret
dec
lds
enter
enter
or
enter
mov
xor
les
icebp
lock
jno
in
xor
mov
and
pop
xor
lds
mov
out
sub
fsubrs
pop
jo
xor
fs
loope
cmc
out
outsb
mov
lahf
sbb
mov
int3
xor
mov
pop
fwait
cltd
mov
xchg
sub
popf
sub
cmp
and
xor
jg
pop
xor
fcompl
js
sbb
push
shlb
xchg
mov
mov
and
cltd
fwait
rcll
push
add
push
cmp
dec
add
mov
nop
ljmp
pop
mov
sub
xchg
jg
cli
int
movsl
jge
cli
ds
or
mov
xchg
popf
sub
jl
pop
out
mov
dec
in
aas
sub
or
push
cmpsb
cmp
in
cmpsb
inc
or
lahf
inc
pop
frstor
stos
mov
testb
lahf
xchg
inc
pop
mov
shl
xor
sahf
js
or
fiaddl
mov
cwtl
mov
jge
inc
pop
sbb
outsl
pop
insb
pop
adc
cli
and
iret
sub
xorb
xchg
js
addr16
int3
inc
push
mov
add
leave
scas
loopne
pop
popa
jb
xchg
test
add
inc
hlt
jb
xor
lret
insl
jb
ret
inc
xor
mov
hlt
popa
mov
cwtl
fs
xchg
mov
xchg
fcomp
pop
lock
xchg
dec
or
popa
dec
pop
addb
es
cwtl
outsb
subb
fidivrs
insb
push
call
jecxz
sarl
das
enter
andl
sub
cmc
test
pop
mov
mov
cmp
cmp
sbb
sub
arpl
jecxz
lock
rcl
dec
push
add
stos
sbb
loope
fimuls
push
push
mov
mov
push
xchg
adc
lds
xchg
adc
mov
aam
int3
xchg
es
mov
push
mov
in
adc
push
dec
xlat
dec
inc
xlat
repnz
inc
lret
cmc
jno
jno
scas
lock
pop
pop
adc
aad
inc
das
pop
mov
sub
in
cmpsl
inc
test
test
lock
test
arpl
mov
cmp
and
push
mov
add
add
cld
pop
mov
jmp
incl
loope
sbb
sarb
out
push
outsl
ficomps
daa
inc
inc
popa
dec
pop
pop
addr16
pop
dec
add
sub
xor
data16
fyl2x
sub
movb
imul
popf
push
adc
ljmp
lds
dec
fildll
cltd
lds
sub
clc
fdivr
xchg
movsl
int3
cmp
sbb
adc
hlt
push
ret
xchg
fwait
adc
inc
mov
cmp
loopne
daa
movsl
dec
jne
dec
inc
mov
bound
mov
cld
jns
imul
adc
cld
mov
js
and
les
mov
push
pop
mov
pop
lahf
and
scas
cs
cli
das
mov
rolb
jecxz
mov
ds
sub
in
loope
loope
xchg
push
rorb
jmp
in
inc
pop
loope
scas
or
sub
mov
xchg
bound
scas
or
fmuls
sub
enter
cmp
ss
push
rol
nop
cltd
pop
scas
jb
mov
mov
sahf
xchg
pop
sub
pop
or
inc
scas
popl
push
hlt
jo
int
fcomi
orb
hlt
sbb
inc
mov
lea
inc
pusha
xchg
cltd
inc
mov
and
or
notl
pop
sub
popf
jecxz
and
and
sar
push
lods
add
xor
inc
in
push
push
fcomi
or
sbb
cmc
xor
scas
cltd
add
rolb
xchg
push
shll
add
push
add
or
push
sahf
popf
push
fstp
push
cmp
notl
add
in
inc
je
push
push
inc
in
inc
sub
into
filds
shll
mov
push
push
cmc
test
inc
fidivl
js
jmp
dec
dec
ja
sbb
fdiv
sub
xor
jp
loopne
clc
dec
lahf
nop
push
mov
xor
test
and
inc
ret
shrb
aad
push
call
dec
sbb
add
loope
in
pop
pop
std
gs
mov
sbb
cmp
sti
xchg
in
ss
xor
repz
or
ds
pop
cmpl
repz
out
push
das
pop
or
mov
jae
enter
int
addl
lret
cmc
lret
jno
push
or
imul
addb
or
bound
daa
dec
cmp
mov
push
pminub
and
jbe
int
pop
add
iret
testl
into
ds
cmc
mov
addb
popf
bound
push
sub
jge
icebp
cmpsb
push
pop
out
mov
cs
xchg
xchg
iret
mov
dec
pop
mov
or
dec
pop
push
loop
and
xchg
xor
cmp
sub
or
aam
mov
aaa
stc
test
lcall
inc
xor
or
pusha
out
fistpll
jne
aam
xchg
mov
mov
cltd
push
je
pop
cs
adc
mov
fidivrl
icebp
cltd
push
push
cmp
stos
push
movsl
xor
jmp
fsts
shl
imul
jle
inc
dec
adc
cmpsb
cmpsl
mov
imul
test
xorl
adc
mov
or
ret
ficoms
scas
outsb
xchg
sti
dec
ret
xchg
mov
mov
and
push
data16
and
mov
sbb
jns
jb
push
sbb
dec
cwtl
sbb
outsb
incb
aam
pushf
das
lret
push
adc
xor
jns
mov
lahf
aam
popa
mov
repz
imul
in
call
inc
ljmp
testl
xor
fs
cwtl
icebp
push
mov
daa
jecxz
arpl
cmpl
mov
out
idivb
inc
or
mov
sbb
repz
push
lods
ljmp
push
out
or
sub
adc
sarb
inc
cld
mov
roll
add
adc
push
push
mov
fisubl
pop
or
mov
dec
ja
cltd
and
in
ja
xor
inc
sub
rolb
adc
insb
mov
lods
cwtl
out
test
gs
jo
lret
dec
es
stc
mov
pusha
jnp
mov
cwtl
addr16
pop
lahf
cmpl
lahf
nop
iret
pop
and
clc
jae
neg
cwtl
inc
je
sbb
into
push
add
inc
dec
mov
pop
adc
and
jns
out
inc
mov
int
mov
and
mov
gs
and
stos
bound
outsl
pop
popf
ret
ret
addr16
jne
mov
ret
and
sbb
shl
mov
xchg
mov
scas
mov
mov
cwtl
lods
and
addr16
fidivrs
pop
xor
cltd
jb
mov
xchg
insl
sahf
push
cmp
cmp
les
cmp
scas
jo
or
shl
push
xlat
push
push
pop
add
cmp
inc
nop
sub
jae
stos
sub
pop
mov
dec
add
sbb
push
pop
div
jb
dec
aam
xchg
inc
shl
add
push
int
ja
push
cld
pop
inc
insb
mov
cli
jne
mov
cltd
mov
leave
mov
popa
sbb
es
mov
sbb
mov
cmpb
adc
std
shll
sbb
lock
jle
sub
scas
cwtl
xchg
adc
jno
jle
and
mov
outsb
ds
mov
stos
add
xor
mov
aas
or
bnd
add
cmp
sti
xchg
sub
mov
jo
mov
fs
cs
sub
outsl
add
adc
insb
xlat
fisttpll
and
push
inc
pusha
stc
lcall
les
lods
adc
icebp
adc
fstl
jne
nop
aas
dec
mov
fadds
into
inc
mov
aas
pushf
mov
in
jno
push
lret
mov
jg
push
xchg
jo
loop
jnp
pop
mov
iret
fwait
adc
sbb
add
push
int
in
insb
mov
or
rolb
enter
cwtl
push
iret
push
mov
lcall
pop
imul
movsl
jbe
sub
dec
scas
adc
xchg
pop
dec
mov
fdivr
pop
mov
jno
dec
sbbl
test
jle
push
mov
lret
or
popa
test
inc
scas
sbb
mov
adc
jmp
mov
or
lea
sbb
jge
call
fcoml
add
push
mov
or
addb
movsl
cmp
cmp
mov
rcrb
insl
mov
stos
je
gs
cmp
sbbl
xor
push
cmp
and
loop
sbb
leave
aam
mov
jbe
sbb
lahf
add
dec
fsts
clc
das
sbb
inc
repnz
sbb
xchg
inc
leave
ret
push
das
jecxz
pushf
xor
xor
sbb
in
dec
add
push
xchg
jecxz
xor
aaa
sbb
add
cmp
or
sub
mov
xor
add
les
ds
rcrb
push
loop
and
sahf
cs
cld
xor
cmpsb
mov
xchg
jnp
jge
jmp
or
fsubr
jmp
dec
fdivrp
in
mov
sbb
jmp
cmp
and
je
out
sub
scas
cltd
mov
sbb
or
inc
insl
cmp
mov
rorl
mov
ret
jecxz
add
test
shll
jmp
repnz
xchg
popf
aad
cwtl
in
hlt
push
add
mov
les
xor
pop
in
dec
test
int3
test
icebp
call
mov
cmp
inc
ss
rcl
and
push
xchg
and
ret
lahf
mov
data16
cld
call
add
enter
pop
sub
jns
mov
cmp
dec
pop
insl
out
sub
dec
mov
cld
gs
int3
jmp
dec
lock
icebp
or
ljmp
mov
cwtl
lahf
jne
es
add
sarl
pop
inc
test
popa
int3
leave
mov
mov
sub
inc
mov
sbbl
lcall
sub
inc
inc
fnsave
sbb
in
and
xor
popf
xlat
add
xchg
cmpsb
ja
inc
rcrl
push
xchg
test
fst
scas
jg
ja
cmp
mov
lock
lret
test
cmp
in
lods
test
cmp
sbb
pop
popa
pop
sub
xchg
std
fs
movsl
mov
mov
test
shrb
dec
mov
lock
mov
sti
fldcw
lcall
jbe
mov
fs
sub
call
jge
into
jp
sub
xchg
and
adc
xchg
or
mov
lods
mov
or
out
daa
jmp
pop
dec
dec
int3
push
adc
mov
adc
add
cmp
and
rcrl
and
xchg
clc
push
sahf
adc
addr16
stc
lods
mov
in
mov
bound
adc
cmp
lahf
add
cltd
es
jbe
mov
lea
dec
cmp
cmp
pusha
shlb
gs
das
movsl
jp
xor
adc
adc
arpl
mov
add
mov
xchg
xchg
ljmp
fidivrs
adc
pop
mov
andb
xchg
cmp
pop
mov
mull
cld
sub
dec
sahf
and
push
adc
outsl
imul
adc
mov
popa
push
push
mov
push
sbb
jbe
pmulhw
std
xchg
sub
mov
nop
clc
int
icebp
xchg
pusha
sbb
sti
dec
dec
aaa
lock
dec
into
push
fs
call
mov
pusha
loope
into
in
sbb
lock
scas
pop
and
xchg
xchg
dec
jmp
add
mov
fmulp
push
cltd
repz
ljmp
std
sub
cld
inc
sbb
leave
nop
inc
insb
jmp
fdivs
push
xor
mov
sub
add
loope
dec
mov
pop
jl
cltd
and
or
clc
cld
loop
jmp
inc
mulb
cld
or
mov
adc
pop
push
int3
push
mov
ljmp
mov
jns
and
leave
cmp
ja
rol
jecxz
leavew
xchg
popf
into
enter
out
push
jp
lds
sbb
int3
daa
ret
pop
cmp
and
sbb
pusha
and
jle
cld
in
ljmp
data16
and
jbe
xor
in
lock
cmp
loopne
xchg
push
shlb
xlat
mov
or
xchg
jmp
push
push
cs
xor
sarb
push
pop
aam
push
cltd
or
lret
loop
sub
sub
lods
dec
mov
insb
andb
lods
inc
mov
shl
pop
aad
in
loope
sub
push
xchg
sar
std
pop
imul
mov
movsb
pop
and
xchg
fisubrl
in
fisttpl
mov
stc
sub
pop
ret
xor
push
inc
aad
pop
push
lock
mov
stc
cmp
mov
dec
mov
pop
stc
out
sbb
mov
lock
insl
aad
jnp
pop
jo
fs
sub
pop
jne
int3
sahf
test
inc
lret
lret
stc
sbb
mov
mov
or
pushf
sub
out
fdivr
dec
sub
lret
les
and
dec
mov
sub
mov
push
in
fdivs
movsb
sbb
fs
inc
xchg
sti
lret
add
add
leave
les
mov
jmp
lods
testb
adc
sub
jmp
push
inc
inc
pop
push
mov
cmpsb
inc
jmp
addr16
enter
sbb
stc
xchg
xor
pushf
or
ljmp
jg
pop
nop
xor
das
lds
lcall
fcompl
jo
lcall
xor
cld
nop
std
gs
xchg
or
sub
stos
push
mov
xchg
cmpsl
jg
std
in
insl
pop
les
nop
inc
xchg
adc
stos
add
add
aaa
lods
iret
or
fidivrs
cli
imul
ja
stos
call
xchg
mov
mov
mov
xchg
nop
je
push
lret
ja
ret
out
cmp
gs
mov
shlb
in
xchg
lods
daa
mov
in
jge
push
xor
pop
cmp
loopne
mov
or
enter
cli
ret
adc
test
cmp
jg
xor
insb
cmp
sub
iret
dec
add
mov
leave
mov
push
or
nop
cmpb
inc
xor
jge,pn
aas
inc
push
in
out
in
lahf
in
push
jns
jecxz
in
adc
rcr
dec
mov
push
mov
loope
pop
pop
mov
int3
mov
cmc
push
mov
jb
in
pop
lcall
bound
pop
sahf
pusha
scas
test
mov
inc
jae
or
mov
pop
sub
sbb
repnz
scas
or
test
sbb
mov
dec
mov
out
je
pop
jl
pop
bound
stc
adc
cmp
test
xor
data16
imul
aas
cmp
cs
out
sarl
mov
int
call
xor
pop
arpl
fistps
xor
or
outsb
mull
adc
xchg
jg
dec
mov
pop
loop
addr16
or
push
jl
jmp
or
sbb
push
ds
es
adc
mov
fwait
clc
push
cld
pop
or
movsb
shrl
jae
testb
iret
cltd
lret
adc
dec
lods
fcomps
stos
inc
dec
mov
add
cwtl
iret
adc
mov
out
cld
pop
daa
arpl
dec
int
push
dec
push
rcr
dec
loope
jns
popa
sbb
pop
test
cmc
inc
repnz
out
add
xchg
mov
outsb
mov
sbb
imul
fwait
pop
xor
mov
jl
xorb
inc
adc
loop
mov
or
fcomps
insl
mov
xorl
icebp
xorl
inc
lods
mov
pop
mov
inc
xor
imul
lret
cmp
out
cmp
mov
mov
sahf
xlat
sub
out
outsb
adc
movsl
push
mov
lds
inc
cmpsb
ds
std
sbb
fnsave
sub
and
mov
xor
dec
aas
scas
shlb
js
int
cmp
outsl
push
jmp
jnp
mov
inc
gs
pop
push
add
icebp
pop
xor
jl
stc
xchg
addl
xchg
loope
push
push
rsm
addr16
mov
dec
mov
lret
loopne
adc
pushf
lahf
mov
sbb
sahf
push
movsb
push
lea
xor
mov
xchg
cs
cmp
mov
outsl
xor
leave
fisttpl
inc
fsubs
cmp
xor
pushf
xorb
mov
lock
mov
addr16
mov
add
jle
jl
fistpll
add
std
rcrb
sbb
xchg
cmp
movsl
adc
in
pop
jge
mov
popa
cmp
sub
jg
jae
mov
loopne
inc
aad
stos
lret
data16
add
ja
add
sahf
out
shll
inc
popf
pusha
mov
movsl
pop
dec
dec
jnp
dec
mov
mov
push
mov
jne
pop
repz
jge
sti
dec
mov
or
je
int3
in
or
pushl
daa
ljmp
mov
xor
cmp
movl
sub
mov
rcrb
lods
mov
aaa
mov
push
icebp
lret
or
inc
sub
cmc
push
test
inc
add
cmpsb
jmp
fisttps
mov
xor
int
lahf
dec
xchg
mov
mov
mov
inc
lcall
add
or
lds
leave
add
cmpsl
mov
lret
fistl
add
mov
mov
inc
loopne
ss
jne
cwtl
les
hlt
inc
fmull
mov
xor
pusha
ret
pop
orw
push
movsb
nop
mov
movsl
push
addb
dec
or
mov
nop
ljmp
ja
sbb
js
mov
jne
jo
sahf
inc
notb
and
mov
ljmp
pop
js
pop
clc
mov
mov
ror
jmp
xchg
aad
lock
repz
filds
or
cs
jg
mov
das
sub
and
mov
loopne
jb
or
xchg
ds
jnp
cmpsb
les
mov
add
sbb
jmp
mov
jecxz
pushf
ret
sahf
repz
in
push
and
dec
pop
cmc
pop
adc
xchg
popf
leave
and
xchg
mov
push
add
addr16
jecxz
loopne
sbbb
push
lahf
dec
dec
dec
fcoms
cmpsl
ret
xor
andl
lods
add
out
or
fsubl
mov
cmc
xchg
pop
ret
sbb
fisttpll
out
jbe
int
aad
hlt
mov
sbb
inc
mov
cmpsb
inc
popf
andl
sub
andl
mov
jnp
jg
mov
push
dec
mov
cmp
cmp
sbb
pop
rorb
xlat
sub
fdiv
mov
xor
les
mov
xchg
pusha
in
xchg
std
testb
in
scas
sub
ja
test
out
das
imul
dec
push
jl
out
pop
fimuls
xchg
xor
add
shrl
jle
and
mov
and
std
xlat
divl
mov
test
or
insl
ss
mov
sbb
lods
cmp
minps
popa
add
sahf
mov
lds
xchg
mov
cmp
add
cwtl
bnd
aas
dec
pop
or
fisubrl
outsl
push
mov
addr16
outsl
cltd
ficoml
or
adc
adc
pop
inc
sbb
lahf
cmp
scas
jg
and
cmpsl
mov
add
shll
inc
sbb
clc
ss
je
jmp
test
movsb
adc
adc
sbb
lret
aam
inc
aas
imul
lock
jl
xchg
cltd
xor
push
xchg
fwait
add
or
stos
push
xchg
je
lahf
mov
xchg
es
fsubrl
or
in
cltd
push
cmp
daa
inc
cmp
sbb
int
inc
lods
sti
inc
xor
or
sub
int3
call
rcl
dec
dec
std
mov
adc
cmp
mov
add
jnp
mov
jns
clc
in
jae
in
sbbb
pusha
hlt
cmp
jecxz
stos
push
inc
lret
ljmp
xor
jno
fxch
icebp
adc
cmpsb
jg
aas
insl
sub
jl
pop
pop
adc
inc
xchg
jecxz
xchg
testl
xchg
jns
xchg
fcoml
and
mov
sbb
add
mov
pop
add
xor
and
outsl
lcall
call
out
push
insb
cmp
xchg
test
cmp
addb
and
mov
pop
popa
cmpsb
mov
inc
frstor
loope
stc
mov
xorb
stos
jge
ret
adc
insb
mov
int3
cmp
les
enter
dec
shl
fwait
push
push
pop
movb
mov
jnp
xchg
loop
lods
xchg
or
jle
sbb
in
es
ss
dec
and
mov
mov
stos
inc
imul
adc
or
xor
cmp
xchg
jmp
mov
sub
dec
mov
mov
xor
aad
pop
cmpsb
jns
cltd
xchg
je
loope
xor
dec
enter
ret
and
popl
sbb
mov
sub
inc
ret
in
ljmp
enter
int3
out
and
xor
adc
pop
sbb
les
or
lret
cmp
fs
jecxz
sub
clc
lahf
cmp
jbe
out
inc
dec
rorl
mov
ret
dec
loop
ficoml
jecxz
pushf
cmc
in
mov
mov
sahf
out
fisubs
fs
lods
les
sbb
scas
aad
pop
or
and
aam
repnz
in
mov
gs
sub
jmp
push
xchg
shrl
sbb
aad
or
adc
jb
pop
stos
mov
push
dec
into
push
cltd
push
push
lea
jae
loope
repz
push
add
arpl
sahf
mov
icebp
inc
rorl
sbbb
cmp
jnp
mov
dec
or
ficompl
xor
test
xchg
push
jle
lock
sbb
repz
repnz
pop
lahf
sbb
loop
push
outsl
mul
lahf
pop
pop
xchg
jmp
pop
push
mov
jmp
xor
insb
test
push
fnstsw
dec
ret
enter
iret
je
push
pusha
xor
add
add
pshufw
adc
or
lds
adc
and
addb
icebp
in
mov
loop
pop
inc
inc
dec
mov
sub
into
cmpsl
lds
mov
or
mov
cli
add
clc
xchg
mov
stos
sbb
mov
mov
shrl
jne
insl
testb
or
pop
dec
mov
shlb
aam
xchg
xor
sub
idiv
dec
jp
mov
imul
add
pop
leave
nop
mov
inc
mov
fdecstp
in
add
ret
push
fdivr
out
shrb
lea
in
xchg
out
lcall
add
jnp
jmp
or
xchg
popf
lahf
in
rcl
scas
in
out
xchg
mov
sbb
xchg
ret
sahf
inc
dec
lods
jno
jnp
int
inc
mov
and
inc
adc
sahf
scas
cltd
shll
in
mov
repnz
xchg
pop
cli
adc
xchg
jg
fldt
jmp
insl
jp
pushf
jnp
bound
push
inc
sbb
push
inc
insb
dec
repz
repz
nop
add
xchg
insl
ljmp
pmaxsw
stc
notl
frstor
ficoml
mov
mov
fildll
mov
push
cmp
in
cs
adc
xor
adc
rorl
iret
rcr
aad
cltd
aad
addb
mov
std
xor
stc
aad
push
xchg
fdivs
repnz
mov
and
xor
lods
mov
aam
faddl
sub
lock
dec
cmpsb
inc
mov
xor
cmp
dec
mov
xorb
notb
mov
test
add
inc
fiadds
mov
dec
jb
lsl
adc
lds
mov
sbb
mov
lea
push
sbb
iret
mov
push
jp
les
loopne
mov
xchg
jl
push
dec
inc
imul
and
pop
push
ret
cmp
insl
add
xchg
iret
inc
mov
mov
popf
sbb
pop
ret
cli
insb
subl
movsb
icebp
cmp
mov
dec
mull
and
pop
lret
pop
shrl
ds
mov
and
xor
dec
xor
dec
stos
movsl
mov
jno
mov
cltd
adc
adc
scas
cmp
in
insb
push
xlat
push
xchg
icebp
call
and
popa
mov
icebp
push
ljmp
push
leave
dec
fiaddl
xor
fsts
and
loopne
out
icebp
adc
incb
out
cmpsl
ss
lret
mov
add
clc
out
test
cmc
les
sub
dec
movnti
aam
pop
xchg
lcall
div
adc
imul
pop
movsl
cmp
ret
imul
xor
cltd
test
sbb
pop
dec
fcomi
shlb
adc
cmp
nop
les
jecxz
or
adc
cltd
dec
ret
mov
rcrl
inc
lock
rcl
or
mov
mov
loopne
push
adc
sbb
loopne
cmpl
int
outsl
mov
fs
pop
cmp
mov
sub
sbb
cmp
mov
mov
ret
mov
mov
and
jnp
mov
jne
roll
fiaddl
mov
pusha
sbb
push
popa
cltd
imul
insb
test
test
adc
repnz
xor
ret
and
pop
nop
movsb
cmp
hlt
pcmpgtd
pop
jp
aaa
jns
out
push
dec
mov
jle
sahf
mov
loop
scas
fiaddl
jae
inc
cwtl
sbb
cld
xchg
jae
addr16
xor
push
in
add
mov
pop
pop
int
sub
fcomp
test
pop
in
popf
lock
loope
mov
into
ljmp
test
fstl
fidivrl
inc
lock
scas
cli
add
pop
mov
lods
leave
ret
popf
in
pop
imul
sbb
ljmp
adc
mov
jo
fsubrs
clc
inc
pop
pop
xchg
mov
addr16
push
sbb
and
ret
bswap
xor
xor
cmpsl
add
jo
test
xchg
pop
std
adc
push
sar
xchg
and
xor
cwtl
or
inc
jns
jne
jg
stc
xchg
lock
or
pop
mov
enter
jl
in
jb
push
in
popa
cwtl
mov
mov
notb
cmp
fists
pop
roll
lcall
ss
popa
loopne
sbb
stc
fs
mov
lds
jns
xor
loope
insl
jmp
ret
outsb
iret
mov
leave
jmp
sahf
movsl
push
cltd
inc
in
lds
sbb
outsb
and
jae
jo
ljmp
int
sbb
ljmp
ds
imull
sbb
xchg
fcoms
dec
mov
nop
and
insl
xor
daa
mulb
pop
lea
dec
jl
push
push
pop
loope
jp
jmp
test
aas
mov
mov
pushf
or
inc
cli
fldcw
mov
scas
push
ja
push
test
fsub
xor
mov
imul
and
rolb
jle
pop
cmp
push
inc
out
enter
jnp
cmc
xchg
dec
movsl
xor
divl
mov
test
jbe
sub
add
icebp
xor
divl
xor
sub
inc
sbb
mov
js
mov
cmpb
xchg
dec
and
mov
stc
int
sub
mov
jbe
dec
or
jnp
jle
mov
test
std
sbb
pusha
sub
aas
pop
xor
repz
sub
in
lea
clc
sub
aad
adc
push
es
ret
popa
push
sbb
arpl
ffree
cmp
mulb
out
je
sub
stos
mov
nop
xlat
in
enter
aaa
das
mov
cmp
jns
stos
stc
lock
dec
shr
repz
pop
mov
pop
stos
sahf
icebp
pushaw
push
ret
xor
andl
ror
lods
pop
fs
xor
mov
popf
or
fwait
cmpsl
data16
pop
mov
mov
push
cmp
or
mov
rol
mov
dec
sbb
and
push
mov
xor
xchg
or
mov
fnstsw
xchg
push
pop
sbb
push
push
xor
roll
sbb
sbbb
movsl
mov
or
mov
or
out
jl
shll
jns
lods
inc
add
mov
push
fsubrp
mov
pop
mov
cmp
or
repz
aas
std
aad
jne
or
mov
popa
out
sub
inc
fadds
jae
pop
stc
push
jge
adc
sti
imul
call
out
xor
es
and
mov
fwait
outsb
mov
xchg
loope
iret
add
mov
mov
and
inc
cmp
mov
cmp
psubsw
push
xchg
mov
mov
cmp
aas
scas
fwait
das
dec
fdivr
loop
cld
jne
and
xor
or
stc
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
adcl
sub
push
push
adcl
push
lea
push
movb
andl
call
movl
mov
cmp
movl
je
push
xorl
call
jmp
movl
mov
movl
cmp
movl
je
xor
jmp
mov
adcl
push
push
call
adcl
test
je
and
movl
adc
mov
mov
mov
add
movl
lea
mov
lea
mov
mov
mov
mov
sub
or
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
subl
mov
andl
xor
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
movl
mov
mov
movl
cmp
movl
jne
or
mov
mov
movl
mov
xor
incl
add
mov
mov
xorl
xor
add
adcl
mov
and
mov
adcl
xor
add
incl
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
adcl
mov
mov
mov
mov
addl
mov
subl
mov
andl
mov
subl
mov
addl
mov
adcl
movl
add
mov
sbbl
xor
orl
add
movl
jmp
movl
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
orl
push
orl
push
subl
call
xorl
test
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
adcl
push
addl
push
call
andl
test
je
sub
mov
mov
addl
xor
lea
andl
push
or
mov
xor
orl
lea
adcl
push
mov
pushl
sbbl
call
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
lea
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
xor
xor
add
andl
mov
inc
mov
cmpl
jg
jmp
push
push
call
cmpl
jb
mov
movl
xor
lea
movl
mov
movl
cmp
movl
jbe
not
mov
and
mov
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
adc
mov
mov
sub
xor
movl
mov
movl
lea
mov
movl
lea
mov
movl
mov
cmp
movl
jne
mov
cmp
movl
jne
movl
push
sbbl
push
call
test
movl
je
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
push
addl
push
call
test
je
movl
mov
cmp
jne
movl
mov
movl
cmp
movl
jne
xorl
push
xorl
push
adcl
call
test
je
movl
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
xorl
push
call
test
movl
je
movl
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
push
xorl
push
call
addl
test
movl
je
mov
movl
cmp
jne
mov
cmp
jne
adcl
push
xorl
push
call
xorl
test
movl
je
movl
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
push
sbbl
push
call
adcl
test
movl
je
notl
mov
cmp
jne
mov
movl
cmp
movl
jne
orl
push
adcl
push
adcl
call
subl
test
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
sbbl
push
xorl
push
orl
call
test
movl
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
push
orl
push
adcl
call
andl
test
je
mov
cmp
movl
jne
movl
mov
cmp
jne
push
push
call
test
movl
je
mov
cmp
movl
jne
movl
mov
cmp
movl
jne
push
adcl
push
sbbl
call
subl
test
movl
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
movl
xor
mov
sbb
push
or
mov
adcl
xor
sbb
mov
push
incl
mov
adcl
add
cmp
movl
je
mov
or
mov
mov
xor
xor
subl
add
xorl
add
movl
adc
adcl
xor
mov
push
mov
add
mov
xor
adcl
xor
adc
mov
xorl
add
movl
adc
xor
andl
xor
movl
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
dec
movl
mov
sub
jmp
loope
jg
cmpsb
add
test
out
mov
sbbl
orl
dec
mul
xchg
subb
ffree
xchg
mov
jg
sbb
sbb
mov
movsb
adc
jb
loop
mov
lea
fmul
mov
xchg
nop
fcoms
jbe
push
pop
aam
out
hlt
scas
pop
lcall
mov
popf
mov
push
jp
fsubr
bound
fdivrs
mov
inc
push
mov
inc
in
jecxz
jae
pushfw
push
and
aaa
push
cmp
pop
pop
outsb
sbb
clc
push
lcall
into
leave
in
fwait
nop
and
add
pop
and
jl
jg
dec
mov
test
shrl
jle
xor
mov
pop
inc
insb
imul
sub
or
cs
outsl
mov
sbb
rorl
mov
mov
int
xchg
lock
js
das
decb
mov
repz
cmp
ret
imul
cmp
fmul
popf
jo
mov
jge
cmpl
jns
jnp
repnz
imulb
pop
jbe
xchg
stos
pusha
rcrb
in
ds
movsl
add
dec
outsb
and
push
mov
push
inc
inc
rolb
xor
inc
insb
fldenv
ds
into
jecxz
aam
mov
xchg
sbb
ja
cmp
mov
rcll
mov
aam
and
ret
cli
in
mov
jle
mov
xor
outsl
mov
ljmp
int3
push
sub
add
dec
fcompl
jp
ss
inc
mov
enter
in
sbb
pop
test
sbb
ret
outsl
cmp
adc
lea
dec
and
lods
jecxz
xchg
mov
out
add
inc
aas
xor
mov
mov
cmpsb
std
mov
cli
jge
xchg
cmp
ss
pushf
sbb
sub
mov
clc
rorl
fwait
sbb
add
cmp
xchg
or
sub
in
push
aas
mov
xlat
jnp
adc
aam
lods
and
or
out
and
mov
in
pusha
sbbb
pop
in
decb
mov
in
mov
adc
mov
rep
into
sbb
test
xor
nop
mov
and
js
ret
xor
cltd
stc
insb
fucomip
dec
mov
mov
add
lahf
cltd
movsb
jb
fcmovnbe
lds
add
cmp
add
in
das
test
daa
ljmp
stos
jmp
or
cmpb
testl
clc
sbb
dec
dec
ror
lods
push
stos
out
sarb
xchg
and
pop
push
ja
fisubrl
adc
dec
adc
outsb
inc
push
dec
mov
dec
loopne
pop
aaa
repz
mov
test
std
popf
jo
mov
xor
mov
in
xchg
xor
bound
jmp
xchg
sbb
push
mov
testb
lds
rcrb
lahf
andb
jbe
jb
pop
sub
sbbb
call
rorb
adc
scas
cltd
or
sub
loope
pop
nop
mov
aas
adc
leave
jns
xor
in
mul
pop
pop
or
push
lods
mov
push
dec
mov
popf
jns
std
xchg
lock
sbb
cmp
mov
lcall
orl
mov
push
or
ds
stos
rclb
in
shrl
push
aad
jmp
add
fcomp
inc
pop
pushf
cmp
xchg
push
push
les
jg
push
lahf
outsb
pop
icebp
xchg
mov
jl
push
add
sub
mov
dec
mov
mov
jmp
jbe
shlb
int3
negb
jno
aad
mov
push
xchg
dec
cwtl
mov
mov
daa
cs
fistpll
xor
dec
movsb
insb
sub
aam
iret
push
mov
cmp
stos
lods
sub
roll
subb
mov
test
push
mov
je
daa
cmpsl
push
or
xchg
pop
xor
push
popa
nop
mov
jecxz
inc
sbb
mov
outsl
inc
cmp
das
mov
mov
loope
jb
fs
scas
mov
mov
lods
mov
and
mov
ret
or
bound
mov
aad
mov
lea
dec
ljmp
loop
clc
shl
insb
test
in
sbb
js
rolb
fisubl
scas
daa
in
and
or
repnz
aaa
push
inc
orl
cmpsb
test
pop
sub
fstps
add
or
and
xchg
rcr
adc
mov
jne
pop
shlb
jle
jne
iret
cli
sbb
dec
loop
sbb
dec
popf
cmp
xor
jp
cmp
pop
dec
push
repnz
fsubl
cs
stos
test
aaa
ffreep
fldcw
ret
mov
and
test
cs
jae
pop
fwait
mov
in
or
xor
sbb
imul
andb
cmp
add
fcomp
dec
int3
pop
daa
lahf
enter
int
test
inc
sbbl
or
scas
outsb
xor
out
jae
sbb
mov
dec
sbb
lock
cs
outsb
subb
mov
xchg
not
inc
rcll
jmp
mov
stos
mov
push
cmp
adc
sarl
out
jp
sbb
outsb
xchg
cltd
repnz
enter
sbb
repz
xchg
xlat
jle
test
push
xchg
daa
mov
fsubrl
in
lret
xchg
add
mov
notl
int3
lea
mov
mov
adc
sbb
adc
mov
scas
pop
inc
mov
mov
add
mov
insl
xchg
ljmp
int3
dec
jl
sbb
xor
out
pop
pop
jns
mov
or
mov
xchg
inc
or
mov
cmovl
jbe
mov
repz
or
pop
mov
sti
xor
enter
lahf
cmp
push
inc
jns
or
out
je
or
lret
push
jns
movsb
and
xor
dec
inc
and
fwait
pushf
leave
fbld
mov
inc
push
push
dec
xor
test
outsb
adc
in
mov
outsb
orl
or
lods
pop
cmp
dec
ljmp
fldt
loopne
addl
pop
adc
shrb
mov
inc
mov
divl
js
mov
mov
push
mov
loope
pop
pop
sbb
adc
and
xchg
arpl
mov
mov
outsb
test
jo
adc
inc
out
dec
dec
call
stc
and
stc
push
push
aaa
cmp
inc
dec
aad
pushf
jno
xchg
repz
mov
out
push
push
mov
pop
les
test
scas
hlt
cmpb
adcb
shrb
cltd
loop
jecxz
mov
rorl
lods
cmp
cmp
and
lret
sbb
shll
xlat
mov
dec
xor
div
cmc
add
or
cmc
mov
sub
data16
das
xchg
fcom
cmp
int3
mov
imull
lds
pop
insb
add
in
lcall
pushl
cmp
fwait
xlat
pop
loopne
sub
add
push
pop
mov
adc
add
pop
insb
or
xor
mov
mov
icebp
jl
imul
xor
out
ret
mov
pop
cmpl
ljmp
pushf
adc
xchg
loope
arpl
dec
pop
mov
hlt
sbb
cmc
mov
shlb
push
and
roll
sbb
in
fbstp
ss
dec
cmp
mov
ret
fcmovnu
dec
ret
incb
dec
andl
mov
fstps
imull
push
xchg
push
inc
sbb
leave
xchg
cmp
int
out
and
loope
arpl
lds
fldenv
mov
sar
mov
mov
movsb
sarb
mov
fdiv
mov
mov
shll
jg
sub
fcomps
stos
test
sbb
cli
push
sbb
mov
clc
fmuls
rorb
mov
scas
std
push
dec
adc
repz
fwait
es
inc
cmpl
sbb
jbe
adc
jl
daa
jno
push
cltd
mov
aam
and
jo
adc
outsl
xor
dec
push
arpl
sbb
mov
into
out
sbb
and
nop
cmp
sbb
and
push
mov
mov
lcall
jnp
movl
mov
jb
jae
les
cld
xor
cmp
mul
fmul
mul
mov
jle
jle
adc
outsb
stos
xor
andl
cmp
fmuls
or
std
idivl
nop
dec
ret
not
lcall
andl
sbbl
aas
lret
push
mov
dec
jae
dec
sbb
mov
push
out
sbb
inc
jg
mov
and
out
cmpsb
scas
mov
addr16
push
stos
ds
mov
mov
add
stc
add
push
sbb
les
xchg
mov
sbb
pop
ss
sub
dec
dec
popf
push
xlat
xor
mov
jnp
std
ds
and
mov
inc
sar
jns
cli
xchg
leave
lds
cltd
add
mov
sub
inc
lar
push
mov
arpl
dec
mov
add
cli
dec
cmpsb
add
stos
shrl
insb
repz
pushl
aas
and
adcl
push
xor
out
mov
int3
mov
cli
test
jne
int
jbe
scas
ret
pop
dec
aaa
cli
xchg
mov
xchg
pop
xchg
add
clc
push
xchg
jns
movsb
xchg
pop
inc
xchg
shll
dec
lahf
js
negb
inc
cmp
lock
sub
cs
out
push
cmp
arpl
inc
mov
mov
dec
jns
jg
mov
sub
popf
orb
or
test
push
aam
bound
stos
pop
in
pop
xor
cld
mov
jo
loopne
gs
jecxz
dec
inc
fsubrl
inc
dec
lods
add
push
out
inc
arpl
sahf
add
mov
scas
lock
dec
sbb
lretw
shrl
add
into
loope
xchg
popa
je
mov
cmpsb
jmp
ret
insl
sbb
dec
ds
add
add
pop
mov
in
arpl
nop
outsb
dec
aas
mov
mov
clflush
fcompl
xchg
sbb
nop
aad
push
enter
nop
scas
jge
sbb
shll
adc
and
mov
cwtl
or
jp
imul
lods
dec
fadds
push
mov
jecxz
and
adcl
hlt
inc
push
sub
mov
sub
pop
inc
mov
int3
or
xchg
mov
lods
scas
mov
mov
or
js
inc
aaa
xchg
hlt
sar
fidivl
lods
int
push
je
ret
and
jp
xor
ja
out
sbb
xor
addb
pop
or
inc
cmp
push
cmp
fucomi
je
shlb
jl
xchg
ja
dec
dec
bsf
nop
repz
pop
mov
pop
out
loope
or
xchg
jnp
mov
rcrl
dec
lahf
fs
mov
xchg
pop
or
sub
orl
cmp
push
shlb
fwait
movsb
scas
fcmovb
fsubrp
inc
pop
cmpsl
mov
push
dec
xchg
in
sbb
and
test
jmp
neg
insb
negb
inc
push
pop
cmpsb
imul
sbb
inc
pop
mov
sub
add
aad
divb
mov
pop
dec
sbb
or
aam
add
lahf
in
push
dec
mov
xchg
push
pop
mov
jge
jns
mov
pop
jge
mov
dec
add
es
aad
icebp
aaa
leave
dec
push
add
sarl
icebp
push
sub
push
cmc
cli
mov
scas
daa
cmpsb
lock
jno
lods
stc
xchg
sbb
add
fcompl
cmp
mov
dec
popa
aam
dec
mov
xor
or
mov
js
or
adc
mov
bswap
in
daa
dec
std
xor
in
push
push
outsb
es
xchg
xchg
inc
or
aam
push
xchg
jg
ret
les
sbb
adc
inc
das
cli
int
insl
push
pop
jo
sahf
push
mov
jge
mov
sbb
stc
ljmp
adc
push
dec
pop
and
xchg
or
je
scas
pop
stc
aas
adc
lcall
addr16
xchg
or
aaa
sahf
jne
and
pop
cmp
scas
xchg
lods
addb
pop
jecxz
cmpb
mov
inc
leave
cmc
dec
dec
mov
cmp
aas
mov
jl
jnp
inc
xchg
imul
mov
jbe
mov
mov
test
pop
sbb
in
sbb
mov
das
out
lret
loopne
in
rcrb
adc
push
call
in
inc
jne
enter
sbbb
mov
fdivp
push
and
jg
mov
test
shrb
xchg
andl
sbb
inc
jle
or
popf
jl
rclb
orb
lock
xchg
inc
pop
push
scas
xchg
addr16
inc
popa
push
xor
scas
pusha
sub
cmp
jge
or
fs
xor
mov
cmp
loope
sbb
test
fidivl
push
mov
jne
sti
xchg
sbb
and
sbb
lods
rolb
imul
sub
out
jmp
test
popw
pop
scas
mov
in
and
leave
xor
aad
jecxz
lods
sarl
mov
stos
jae
push
add
xor
inc
stc
dec
daa
test
mov
add
mov
imul
stos
iret
jle
mov
mov
and
jo
leave
xchg
stos
jecxz
mov
and
mov
push
add
cmp
out
popw
xchg
in
ljmp
lods
sub
ret
js
imul
out
outsb
and
xor
mov
ret
mov
dec
pop
fwait
push
mov
xchg
sbb
stc
test
lea
aam
adc
adc
ds
std
xchg
xchg
sub
ss
push
jg
daa
popa
fimull
into
inc
fidivl
pop
cmpsb
aam
ja
icebp
jl
int3
ss
mov
sub
movsl
push
xchg
sarl
or
cmpsl
mov
jne
jmp
and
imul
xchg
lret
fwait
mov
pop
inc
repz
inc
mov
xor
movntps
movsl
pop
es
mov
clc
fisttps
fldt
xor
jnp
cmp
or
lcall
push
mov
jmp
fidivs
or
stos
and
lret
std
insl
insl
insb
cmp
mov
mov
and
lods
inc
fcom
scas
add
sbb
jge
pusha
fildl
insb
inc
and
iret
outsb
sti
add
pop
pop
dec
mov
scas
nop
pop
mov
enter
mov
xchg
mov
nop
lods
pop
incl
icebp
js
pusha
adc
mov
jnp
mov
lds
call
push
xchg
lcall
sti
push
popf
movsl
jae
jmp
jmp
lret
dec
lods
push
sub
mov
test
sar
push
adc
adcb
stos
mov
xor
cwtl
mov
retw
add
pop
add
ret
xor
jecxz
enter
mov
pushf
jecxz
cmp
and
out
fwait
fwait
sti
or
inc
xchg
sub
jno
inc
loop,pt
int
dec
push
add
push
cmp
cmpb
test
movsb
mov
test
sti
inc
dec
sbb
insl
lahf
mov
cmc
dec
mov
and
jp,pt
sti
mov
movsl
xchg
jo
push
mov
push
mov
les
xchg
je
push
sahf
cmpsb
test
cmp
or
fnstsw
cs
test
sbb
call
call
fcmovb
jmp
mov
ljmp
insl
pop
cmp
sbbl
cld
cs
dec
mov
stos
and
outsl
clc
stos
iret
inc
xorb
out
or
pop
jae
mov
mov
inc
inc
dec
cmp
or
roll
pushf
out
xor
jp
into
imul
shlb
push
leave
pop
adc
dec
lcall
fstl
sbb
push
outsb
xchg
sub
xor
sbb
loop
test
insb
imul
subb
or
popf
nop
jae
jecxz
adc
inc
mov
aam
imul
inc
ss
xchg
cmp
pop
add
xlat
imul
repnz
mov
test
adc
bound
pop
lahf
jl
sbb
shlb
pop
and
int3
jle
mov
and
pop
fs
test
sub
ret
stos
jnp
and
mov
popf
lcall
shrb
outsl
cmp
shrl
enter
fsubrl
out
mull
jbe
sub
add
fidivrs
inc
inc
push
xchg
fidivs
mov
pop
lds
iret
cs
stos
lcall
cmc
leave
call
sub
and
inc
push
rclb
lods
sbbl
lds
scas
aam
sahf
mov
bound
fiaddl
jae
test
lret
daa
mov
scas
jl
popf
add
jb
mov
fsubrs
lods
insl
insb
inc
lret
stos
jge
push
stos
mov
lea
shlb
mov
cmovo
sub
adc
or
and
inc
mov
mov
pop
push
pshufw
enter
ljmp
cltd
in
fimuls
xchg
jns
in
sbb
call
movsb
cmp
js
jle
cmp
jne
inc
cmp
mov
sbb
or
decl
mov
push
cmp
dec
mov
mov
shl
dec
aaa
pop
adc
jnp
push
sub
pop
cmp
pop
cli
mov
xor
pop
daa
test
mov
cmpsl
pop
push
pop
cmp
add
or
xchg
fnsave
pop
and
into
dec
fmul
jl
pop
test
cmp
mov
inc
addr16
dec
popf
int3
dec
ja
rclb
sbb
sub
jmp
mov
mov
lods
test
mov
inc
cli
lea
push
sub
fldcw
pop
jp
adc
inc
cmp
dec
lret
lret
sahf
das
push
inc
loopne
sbb
lods
xchg
push
ja
out
adc
push
sub
xchg
cwtl
adc
jmp
or
lret
pop
outsl
nop
mov
fwait
icebp
push
jp
dec
movsl
adc
in
fisttpl
push
test
sti
lahf
xor
lahf
cmp
sbb
aas
inc
je
lea
cmc
fwait
jecxz
fsubrl
sahf
cmp
mov
add
sbb
dec
jno
aaa
aad
das
sub
outsl
push
inc
ret
imul
lret
pop
add
test
and
pop
clc
push
je
cwtl
pusha
lcall
xchg
sub
sbb
out
xor
ret
pop
test
sub
ds
ret
jne
xor
cltd
mov
outsl
dec
rclb
jp
mov
pop
xchg
adc
and
cmp
push
mov
nop
sub
mov
jmp
inc
leave
adc
je
xor
pop
jnp
daa
and
lock
jae
jb
fisubrl
inc
jne
sbb
movsb
jle
ds
loopne
sub
cmp
sarl
insb
stos
ret
xor
push
push
nop
jmp
mov
jnp
jo
into
roll
cld
out
push
shll
movsb
iret
dec
pop
repz
pop
and
into
or
dec
in
insb
aam
sahf
fwait
sahf
push
cmp
loope
gs
stos
call
jns
xor
lock
test
mov
pushf
fimull
lock
or
mov
inc
dec
inc
cwtl
stos
pop
sub
stos
movsb
in
cmp
ret
pop
mov
push
mov
inc
and
mov
lcall
xorl
mov
fbstp
and
cmp
notb
jne
imul
add
push
mov
jae
repnz
jp
dec
aam
xchg
add
inc
and
sbbl
aam
dec
xchg
push
jl
jl
mov
push
arpl
sub
and
lods
mov
jmp
pop
negl
xchg
stc
test
and
orl
fwait
push
adc
jg
and
stc
sbb
in
repz
push
xchg
push
roll
mov
outsl
add
ja
jmp
cmp
aad
xor
lret
sbb
je
call
mov
cli
jae
xor
testb
repnz
and
add
jne
jae
sub
sub
fadd
or
inc
add
lock
lods
inc
mov
xlat
mov
add
mov
sahf
pop
mov
mov
loope
aad
iret
push
push
popf
outsl
fadd
pop
ret
or
arpl
fucomp
inc
and
lock
inc
jae
outsb
repz
xchg
cld
mov
ret
jg
mov
jge
add
shlb
fildl
jno
adc
pop
push
shll
in
jne
jo
jbe
out
xor
xor
outsl
jns
or
insl
call
cmpsb
pop
add
cmp
repnz
lret
mov
sbb
mov
xchg
lcall
dec
insl
fildl
lahf
clc
call
test
mov
cmpsl
mov
cwtl
and
or
xchg
cmp
dec
aaa
jb
push
sbb
jp
pushf
ret
popa
and
cmp
lret
iret
pop
jb
inc
fwait
jo
cld
push
push
lock
cwtl
and
test
daa
cmpsl
push
mov
push
test
repz
dec
pop
cmp
sbb
ss
out
nop
daa
pop
fstl
into
sbb
mov
rorl
push
mov
push
sbb
fldt
subb
push
sub
lods
shlb
les
loopne
ljmp
inc
lcall
jmp
pop
in
push
push
ljmp
inc
push
add
cwtl
push
outsb
incl
cmpsb
pop
push
and
cmp
ja
aaa
or
outsl
mov
and
inc
or
rcrl
fdivr
shl
es
test
ljmp
push
pop
sbb
dec
js
mov
out
mov
lock
out
xchg
mov
xchg
in
mov
aad
push
in
inc
push
arpl
daa
inc
fistps
and
fstps
ffreep
das
call
cwtl
mov
mov
push
je
movsl
cmp
stc
test
push
jbe
and
jmp
insb
mov
in
in
sti
scas
push
sbb
push
sub
insl
insb
cmpsl
mov
sbb
mov
mov
jo
or
adc
in
scas
mov
fbstp
pop
fisubl
jbe
mov
add
or
sub
rorb
incb
lods
push
les
or
fildll
sub
bound
jns
sbbl
dec
cmpsb
fsubrs
stos
fdivs
imul
out
pop
pop
lret
sbb
cmp
add
push
jecxz
divps
into
sbbb
mov
cmp
ret
adcl
adc
push
add
imul
pop
call
mov
adc
add
ret
jl
jnp
aam
arpl
imul
xchg
mov
int3
enter
jno
sahf
inc
push
cmp
aaa
xchg
sbb
adc
jle
sub
rorb
push
arpl
aam
outsb
add
aam
xchg
lret
aaa
dec
xor
cmc
jle
xor
shlb
pushl
out
add
jno
dec
sbb
mov
cld
test
mov
outsl
call
xchg
sub
cli
jg
or
add
inc
ss
clc
xchg
sbb
insl
out
jo
xchg
sbb
shl
xchg
or
or
cmp
lcall
mov
enter
pop
sub
cmpsb
clc
sbb
in
and
into
fnsave
addb
mov
cmp
inc
std
sub
gs
cld
mov
mov
data16
mov
mov
scas
push
fwait
sub
lods
xchg
push
dec
fidivl
mov
mov
sbb
mov
sti
sbb
add
or
sub
loope
insl
std
cmp
push
lret
or
adc
adc
xor
imul
push
mov
mov
cmpsl
repnz
rcrl
adc
push
int
enter
aad
inc
in
ss
dec
dec
mov
jns,pn
jecxz
rolb
add
adc
mov
test
cmp
fs
jb
lahf
fstpt
popf
xchg
inc
xchg
push
scas
test
mov
imul
push
inc
or
dec
mov
movsb
or
enter
adc
or
fdivr
mov
push
jp
movsb
out
lcall
pop
data16
in
push
xor
es
jmp
inc
arpl
cli
fiaddl
scas
cli
jg
insl
lret
add
sub
mov
ret
jae
inc
orl
lahf
sub
push
les
sub
xor
addr16
ds
xchg
and
dec
dec
stc
das
inc
cmc
lret
gs
adc
mov
shlb
xor
mov
call
dec
daa
pop
push
call
add
rcll
sbb
mov
push
cmpsl
mov
notb
pop
les
mov
daa
cmp
ljmp
adc
pop
mov
je
fsub
add
jne
rep
fwait
mov
sahf
push
xchg
cmp
mov
xchg
data16
stos
flds
cwtl
mov
bound
xchg
dec
push
daa
xlat
jge
jbe
mov
in
xor
popf
pop
out
and
outsl
enter
adc
stos
mov
push
xchg
jae
add
sar
mov
xor
pushf
xchg
js
add
bound
mov
mov
mov
mov
or
mov
sahf
jno
mov
shll
fnsave
je
insl
pop
ss
mov
sub
outsb
jecxz
sbb
out
pop
or
or
cmp
jns
dec
psrad
mov
aaa
jns
mov
xchg
mov
in
out
into
jp,pt
jmp
cmp
mov
mov
lea
mov
mov
push
rcll
shl
ja
push
insl
xor
fcmovb
inc
or
es
fimuls
in
sub
sbb
imul
loope
out
pop
push
fildl
mov
leave
add
int3
mov
cmp
adc
cli
pop
loopne
hlt
fwait
jmp
repz
das
mov
push
xchg
leave
rcr
adc
inc
mov
mov
pusha
fisttpl
lods
adc
cmp
shrl
push
nop
jp
fmuls
mov
popa
mov
shll
sti
jnp
in
push
push
pop
sbb
orb
pmuludq
ficompl
mov
jbe
outsb
xor
xor
xor
insb
in
mov
adc
mov
out
push
xor
in
in
cltd
and
cmpsl
es
dec
iret
movsl
mov
lret
dec
ret
push
sub
jnp
xchg
or
sbb
idivb
sub
mov
cmpsb
sub
mov
imull
dec
pop
xor
jg
dec
and
mov
xor
and
inc
mov
xchg
mov
test
xlat
inc
out
xchg
mov
movsl
and
cs
mov
es
mov
sbb
mov
sti
clc
mov
mov
loop
push
shl
ret
or
jmp
xchg
adc
push
lcall
test
xchg
mov
and
imul
push
pop
insb
roll
rolb
xor
push
loope
pop
mov
pop
data16
outsb
pop
icebp
jecxz
mov
xchg
inc
adc
shlb
pop
cld
push
cmp
addr16
outsl
push
mov
icebp
dec
movsl
ja
mov
pop
sahf
cmpb
cltd
sub
frstor
jb
loop
rorl
fmulp
lds
out
dec
cmpsb
jno
cltd
fistl
pop
jle
inc
orb
jo
xchg
mov
sti
lcall
int3
xchg
xor
outsb
jbe
icebp
test
dec
andl
ss
lahf
push
popa
ljmp
in
popf
sbb
pop
add
mov
andl
xor
mov
and
sub
in
sub
cmp
mov
xor
adc
aad
xor
aaa
or
ficoml
jns
push
pop
lahf
jl
push
mov
dec
cmp
inc
das
aam
adc
inc
jbe
or
shll
adc
test
and
push
mov
xor
adcl
or
insb
out
xchg
cmp
or
imul
in
xor
dec
dec
loop
and
cmp
mov
xchg
scas
orl
xchg
stc
lods
or
sub
jb
cmp
loope
dec
xchg
icebp
cmp
mov
shl
rorl
les
imul
cs
ds
and
push
sbb
cmc
in
mov
sbb
js
mov
inc
sub
sub
sub
push
int3
not
test
hlt
mov
orb
ljmp
cmc
mov
add
mov
and
xchg
fimuls
rorl
negb
fsubrs
test
or
ds
daa
jo
fs
mov
fs
test
aad
pop
or
test
negb
fldcw
fcmovb
imul
inc
fwait
xor
mov
inc
xor
xor
sbb
stos
fstpt
and
mov
mov
mov
mov
xor
out
lods
cmp
hlt
dec
int3
cmp
and
hlt
cmp
lods
mov
sbb
movsl
sbb
leave
loope
bound
xor
pushf
pop
xchg
js
jns
push
adc
shlb
jle
cmpsl
rolb
xchg
ret
lods
outsl
movsl
fs
cmp
xor
iret
add
fwait
es
fldcw
jae
xor
cmp
pop
mov
mov
gs
jo
cltd
or
icebp
dec
sbb
add
push
xchg
xchg
shll
movsb
sbb
jle
popf
xor
adc
popl
das
scas
xchg
pop
sbb
jne
mull
and
add
jne
sti
mov
ffree
cmpsl
and
xchg
push
push
pop
cld
push
pop
test
add
mov
pop
aam
jb
xor
push
fldl
stc
lods
ret
mov
add
or
pop
mov
movsbl
mov
sub
mov
xor
cmp
movl
jne
mov
push
or
mov
add
sbbl
mov
sbbl
mov
mov
adc
mov
mov
adcl
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
push
adcl
mov
mov
movzbl
add
mov
mov
mov
sub
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
mov
add
add
add
add
pusha
inc
add
pusha
xor
add
add
add
inc
push
xchg
mov
icebp
dec
xchg
xlat
jb
sete
add
pop
inc
outsl
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
scas
sahf
or
pop
insb
add
arpl
sub
nop
cmp
sahf
pushf
mov
lods
mov
mov
js
mov
mov
sbb
test
push
sti
mov
mov
test
mov
lds
mov
mov
mov
mov
outsl
mov
nop
xor
xchg
mov
nop
xor
sub
fldenv
push
add
rolb
inc
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
add
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
